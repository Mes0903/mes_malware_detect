
0e153a054fe8adedbb397543e16bdf0b1752bf78d3477bb34e35ebc006324ea6.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	inc    ebp
  41107b:	fmul   DWORD PTR [eax+0x57a2dcde]
  411081:	stos   DWORD PTR es:[edi],eax
  411082:	lahf   
  411083:	mov    esp,DWORD PTR ds:0xbadd8355
  411089:	arpl   WORD PTR [edx+0x33],cx
  41108c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41108d:	jno    0x411018
  41108f:	pop    esp
  411090:	add    BYTE PTR [edx+0x79],0x40
  411094:	out    dx,eax
  411095:	hlt    
  411096:	mov    ecx,0x99f3624e
  41109b:	jp     0x411066
  41109d:	push   es
  41109e:	push   esi
  41109f:	dec    esi
  4110a0:	xchg   esi,eax
  4110a1:	mov    ds:0xb0c4f571,eax
  4110a6:	and    DWORD PTR [edi],ebp
  4110a8:	jo     0x411056
  4110aa:	pop    ss
  4110ab:	fxch   st(3)
  4110ad:	xor    al,ah
  4110af:	inc    edi
  4110b0:	and    esp,esi
  4110b2:	call   0x331f:0x2e4eb1f
  4110b9:	mov    dl,0xa0
  4110bb:	in     al,dx
  4110bc:	mov    ah,0x9b
  4110be:	out    dx,al
  4110bf:	xor    cl,BYTE PTR [edi]
  4110c1:	imul   edi,DWORD PTR [edi+0x39],0x43
  4110c5:	iret   
  4110c6:	xor    DWORD PTR [ecx+edx*8-0xdbc0b36],0x17
  4110ce:	inc    edx
  4110cf:	ins    BYTE PTR es:[edi],dx
  4110d0:	jle    0x4110e2
  4110d2:	jnp    0x411062
  4110d4:	loop   0x411138
  4110d6:	cmp    eax,0x4476bed9
  4110db:	fadd   DWORD PTR [ebp+eax*4+0x7f41bd8d]
  4110e2:	and    al,0x5
  4110e4:	ins    BYTE PTR es:[edi],dx
  4110e5:	cmp    al,0x85
  4110e7:	fsub   QWORD PTR ds:0xace9fd0a
  4110ed:	test   DWORD PTR [edi+eax*4+0x5c],esp
  4110f1:	fild   DWORD PTR [edi-0xf267ffb]
  4110f7:	(bad)  
  4110f8:	das    
  4110f9:	pop    esi
  4110fa:	mov    BYTE PTR [eax],ah
  4110fc:	jmp    0xcd5e:0xbe8b0f24
  411103:	mov    BYTE PTR [edi+0x78],dl
  411106:	aaa    
  411107:	mov    edx,0xcbd5d01b
  41110c:	scas   eax,DWORD PTR es:[edi]
  41110d:	inc    eax
  41110e:	inc    esi
  41110f:	xchg   ebx,eax
  411110:	dec    esp
  411111:	not    DWORD PTR [edi+0xe2c65a1]
  411117:	sub    eax,0xbd8d95dc
  41111c:	dec    ch
  41111e:	fadd   QWORD PTR [ecx]
  411120:	xor    ch,BYTE PTR [ecx]
  411122:	push   edx
  411123:	ja     0x41113c
  411125:	rcr    edi,cl
  411127:	dec    esp
  411128:	sub    eax,DWORD PTR [edi-0x7f]
  41112b:	cld    
  41112c:	scas   al,BYTE PTR es:[edi]
  41112d:	and    eax,0xbb917520
  411132:	push   0x9ef3529f
  411137:	(bad)  
  411138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411139:	or     DWORD PTR [edi],eax
  41113b:	xor    DWORD PTR [esi+0x6e],0x49
  41113f:	push   ebp
  411140:	inc    eax
  411141:	in     al,dx
  411142:	xor    ecx,DWORD PTR [ecx]
  411144:	enter  0xb8bf,0xd1
  411148:	test   eax,0x54544c8b
  41114d:	dec    ebp
  41114e:	dec    ebx
  41114f:	jl     0x411197
  411151:	mov    ch,dl
  411153:	lahf   
  411154:	sub    esi,ebp
  411156:	(bad)  
  411157:	and    DWORD PTR [eax+0x10],edx
  41115a:	sbb    edi,DWORD PTR [ebp-0x32]
  41115d:	or     al,0xfe
  41115f:	gs icebp 
  411161:	(bad)  
  411163:	inc    edi
  411164:	mov    ebp,0x393fbff9
  411169:	or     DWORD PTR [esi+ebp*8-0x6d9f4d2b],eax
  411170:	pop    ebx
  411171:	loop   0x4111b8
  411173:	ds stos BYTE PTR es:[edi],al
  411175:	lods   eax,DWORD PTR ds:[esi]
  411176:	addr16 pop ebx
  411178:	pop    esi
  411179:	je     0x4111bd
  41117b:	jmp    0xa4aba193
  411180:	mov    ecx,0xae38c69c
  411185:	push   esi
  411186:	xchg   ebx,eax
  411187:	xor    al,0xaf
  411189:	dec    ebx
  41118a:	inc    ebp
  41118b:	xchg   edi,eax
  41118c:	push   0xd0865c8e
  411191:	jbe    0x411154
  411193:	out    0x1d,al
  411195:	je     0x4111d7
  411197:	xor    al,0xe5
  411199:	int    0x5d
  41119b:	daa    
  41119c:	loop   0x4111b9
  41119e:	dec    ebx
  41119f:	mov    eax,ds:0x82bdbe9a
  4111a4:	sub    al,0xd9
  4111a6:	and    bl,BYTE PTR [eax+0x7042e4ad]
  4111ac:	les    esi,FWORD PTR [ebx]
  4111ae:	xor    ch,BYTE PTR [edx-0x29]
  4111b1:	add    BYTE PTR [edx+0x4d],bh
  4111b4:	test   DWORD PTR ds:0xb27f9f6,ecx
  4111ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111bb:	popf   
  4111bc:	add    DWORD PTR [ebx-0x64a1c3ab],edi
  4111c2:	jge    0x411239
  4111c4:	xor    eax,0x4cb0a4f3
  4111c9:	add    BYTE PTR [ebx+ecx*2-0x70],bl
  4111cd:	inc    edx
  4111ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111cf:	mov    esp,0xcafec4c1
  4111d4:	inc    eax
  4111d5:	or     BYTE PTR [edi-0x6c182661],cl
  4111db:	in     al,0xfe
  4111dd:	xlat   BYTE PTR ds:[bx]
  4111df:	push   edx
  4111e0:	sub    bh,BYTE PTR [edi+0x7a]
  4111e3:	aam    0x4d
  4111e5:	and    BYTE PTR [esp+edx*2],dh
  4111e8:	lods   eax,DWORD PTR ds:[esi]
  4111e9:	mov    cs,WORD PTR [edi]
  4111eb:	mov    ebx,0x369aea30
  4111f0:	stos   BYTE PTR es:[edi],al
  4111f1:	fidivr DWORD PTR [ebx-0x77]
  4111f4:	into   
  4111f5:	xor    al,0xdc
  4111f7:	jg     0x4111c5
  4111f9:	cmp    BYTE PTR [esp+ebx*8],al
  4111fc:	fwait
  4111fd:	and    dl,0x2d
  411200:	mov    dl,0x48
  411202:	lock out 0xf0,eax
  411205:	lahf   
  411206:	es dec edx
  411208:	mov    bl,0x4d
  41120a:	inc    edx
  41120b:	or     dl,BYTE PTR [edx+ebp*2+0x7b]
  41120f:	(bad)  
  411210:	adc    edx,edi
  411212:	push   eax
  411213:	jb     0x411202
  411215:	fimul  DWORD PTR [eax-0x33fe2777]
  41121b:	imul   ebx,DWORD PTR [esi+0x7be195c6],0x3a
  411222:	dec    esi
  411223:	in     eax,0xe0
  411225:	mov    ah,0x7e
  411227:	or     ebp,DWORD PTR [ecx+edi*8+0x6e]
  41122b:	xor    esp,esp
  41122d:	lods   al,BYTE PTR ds:[esi]
  41122e:	setae  BYTE PTR [esp+eiz*8-0x16]
  411233:	pop    edx
  411234:	pop    edi
  411235:	daa    
  411236:	and    al,0xed
  411238:	sbb    dh,BYTE PTR [esi+0x5033cca9]
  41123e:	ret    
  41123f:	ja     0x4111cf
  411241:	mov    dl,0xd4
  411243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411244:	cmp    BYTE PTR [edx-0x36],cl
  411247:	jns    0x41126d
  411249:	pop    edi
  41124a:	mov    edx,ebx
  41124c:	fild   QWORD PTR [edx+0x5d1e8416]
  411252:	fisub  WORD PTR [edx+0xb]
  411255:	xor    cl,BYTE PTR [eax]
  411257:	nop
  411258:	sub    DWORD PTR [ebx+0x25662507],eax
  41125e:	sub    DWORD PTR [edx],ecx
  411260:	xor    ebp,edi
  411262:	fisub  WORD PTR [edx]
  411264:	push   ds
  411265:	ret    0xe42e
  411268:	xor    dh,BYTE PTR [esi]
  41126a:	xor    eax,0x2f0a41f0
  41126f:	es jns 0x4111fe
  411272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411273:	pop    esp
  411274:	scas   al,BYTE PTR es:[edi]
  411275:	xlat   BYTE PTR ds:[ebx]
  411276:	leave  
  411277:	inc    dx
  411279:	out    0xcb,al
  41127b:	and    DWORD PTR [ebx+0x2e],edx
  41127e:	mov    ah,0x50
  411280:	push   ebp
  411281:	in     eax,0x9a
  411283:	hlt    
  411284:	lods   al,BYTE PTR ds:[esi]
  411285:	jp     0x411244
  411287:	iret   
  411288:	outs   dx,BYTE PTR ds:[esi]
  411289:	mov    ds:0x5e63d533,eax
  41128e:	jb     0x4112e7
  411290:	sbb    bl,BYTE PTR [edi-0x27616897]
  411296:	dec    esi
  411297:	mov    bh,0x61
  411299:	outs   dx,DWORD PTR ds:[esi]
  41129a:	adc    al,ah
  41129c:	cmc    
  41129d:	cmp    ebx,DWORD PTR [ecx+edx*4+0x56661fa]
  4112a4:	wbinvd 
  4112a6:	into   
  4112a7:	jne    0x411318
  4112a9:	sti    
  4112aa:	jb     0x411297
  4112ac:	lock jae 0x4112e6
  4112af:	mov    dh,0x9d
  4112b1:	xchg   edi,eax
  4112b2:	inc    edi
  4112b3:	lea    ebx,[edx-0x47]
  4112b6:	(bad)  
  4112b7:	pushf  
  4112b8:	pop    ds
  4112b9:	jp     0x41130b
  4112bb:	cld    
  4112bc:	(bad)  
  4112bd:	fidiv  WORD PTR [edx-0x21]
  4112c0:	xor    DWORD PTR [ebp+0x348a9cbe],0x49db508e
  4112ca:	jno    0x4112be
  4112cc:	mov    bh,0x71
  4112ce:	scas   al,BYTE PTR es:[edi]
  4112cf:	xor    ebp,DWORD PTR [ebx+ebp*4]
  4112d2:	xchg   bl,bl
  4112d4:	adc    esp,esi
  4112d6:	mov    ah,0x5d
  4112d8:	sub    BYTE PTR [edx],dh
  4112da:	adc    al,0x2f
  4112dc:	jb     0x411334
  4112de:	push   edi
  4112df:	clc    
  4112e0:	js     0x41127a
  4112e2:	xor    esi,0xc92b639b
  4112e8:	out    0x9c,eax
  4112ea:	mov    cs,edi
  4112ec:	sub    al,bh
  4112ee:	push   esp
  4112ef:	mov    dh,0x72
  4112f1:	and    DWORD PTR [eax],ebp
  4112f3:	loope  0x4112d9
  4112f5:	or     al,0x3c
  4112f7:	push   esp
  4112f8:	sub    eax,0x2c7de096
  4112fd:	dec    edx
  4112fe:	ins    DWORD PTR es:[edi],dx
  4112ff:	mov    al,ds:0xdeb12664
  411304:	cmp    BYTE PTR [ebx+eax*8-0x66],al
  411308:	dec    DWORD PTR [esi+eax*8+0x6d]
  41130c:	mov    ebp,0x24d192bc
  411311:	mov    WORD PTR [eax-0x21f948e3],ds
  411317:	shl    edi,cl
  411319:	rcl    BYTE PTR [ebx],1
  41131b:	push   0x21
  41131d:	fld    TBYTE PTR [ebx-0x2]
  411320:	sbb    al,0xd8
  411322:	dec    edx
  411323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411324:	xchg   esi,eax
  411325:	fs xchg edx,eax
  411327:	adc    ch,BYTE PTR [edx+0x410cae1b]
  41132d:	mov    WORD PTR [eax],?
  41132f:	mov    eax,0xa5bfe1f9
  411334:	pop    ss
  411335:	out    0x21,eax
  411337:	hlt    
  411338:	pusha  
  411339:	pop    ebp
  41133a:	test   BYTE PTR [ecx-0x6e],0xdd
  41133e:	das    
  41133f:	outs   dx,BYTE PTR ds:[esi]
  411340:	mov    ds,WORD PTR [ebx]
  411342:	lds    eax,FWORD PTR [esi-0x6c0d00a8]
  411348:	rol    al,1
  41134a:	push   cs
  41134b:	in     eax,dx
  41134c:	xor    eax,0x3a2ecf51
  411351:	fadd   QWORD PTR [ebx+0xb58f8e2]
  411357:	sbb    DWORD PTR [edx+0xcd7a5e1],eax
  41135d:	add    BYTE PTR [edx+0x34823d5a],dl
  411363:	out    dx,al
  411364:	aaa    
  411365:	xor    edi,DWORD PTR [ebx+esi*4-0x134f1aae]
  41136c:	adc    DWORD PTR [eax-0x52d8881d],0xa9c4a2d9
  411376:	mov    ah,0x6b
  411378:	sbb    DWORD PTR [ebx-0x67064c81],esp
  41137e:	inc    esi
  41137f:	into   
  411380:	sub    BYTE PTR [edi-0x6d42abc2],dh
  411386:	and    al,0xb7
  411388:	mov    edx,0x363cc902
  41138d:	mov    bl,0x9d
  41138f:	xor    al,0xb4
  411391:	mov    dh,0x17
  411393:	mov    edi,0x318d60f1
  411398:	std    
  411399:	sub    esi,DWORD PTR [ebx-0x1b]
  41139c:	xchg   ecx,eax
  41139d:	xor    BYTE PTR [edi],ah
  41139f:	call   0x2e8a9404
  4113a4:	xor    eax,0x9a744caa
  4113a9:	loope  0x4113c4
  4113ab:	aad    0xb2
  4113ad:	xchg   esp,eax
  4113ae:	fld    QWORD PTR [edx]
  4113b0:	popa   
  4113b1:	aaa    
  4113b2:	pop    esp
  4113b3:	xchg   ebp,eax
  4113b4:	(bad)  
  4113b5:	cmp    eax,DWORD PTR [eax]
  4113b7:	das    
  4113b8:	dec    ebx
  4113b9:	aaa    
  4113ba:	pushf  
  4113bb:	sbb    eax,0xbbc65953
  4113c0:	or     al,ah
  4113c2:	add    bh,BYTE PTR gs:[ecx]
  4113c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c6:	int    0x8
  4113c8:	jne    0x4113ca
  4113ca:	mov    edi,0x749bb538
  4113cf:	das    
  4113d0:	int    0xb5
  4113d2:	dec    ebx
  4113d3:	sbb    edi,DWORD PTR [edi+0x77e2dbb5]
  4113d9:	ret    
  4113da:	and    BYTE PTR [ebp+eiz*2-0x11],0x33
  4113df:	cmc    
  4113e0:	dec    ebp
  4113e1:	xor    ebp,DWORD PTR [eax]
  4113e3:	jmp    0x41139a
  4113e5:	cli    
  4113e6:	cmp    al,0x33
  4113e9:	jge    0x4113d5
  4113eb:	mov    dl,0x48
  4113ed:	or     DWORD PTR es:[edx],edx
  4113f0:	push   ss
  4113f1:	pop    ss
  4113f2:	mov    eax,0xd92f0515
  4113f7:	sbb    edi,DWORD PTR [eax-0x54]
  4113fa:	ins    DWORD PTR es:[edi],dx
  4113fb:	sub    al,0xd9
  4113fd:	pop    es
  4113fe:	push   esi
  4113ff:	aaa    
  411400:	fidivr WORD PTR [eax]
  411402:	dec    ebx
  411403:	std    
  411404:	into   
  411405:	in     eax,0x9e
  411407:	mov    ds:0xaca388f8,al
  41140c:	and    al,0x4e
  41140e:	and    esp,DWORD PTR es:[edi+0xa7245a8]
  411415:	pop    ebx
  411416:	mov    cl,0xa5
  411418:	dec    eax
  411419:	push   ds
  41141a:	mov    ds,WORD PTR [edi]
  41141c:	mov    ch,0x7d
  41141e:	das    
  41141f:	dec    esi
  411420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411421:	repz ss pop esi
  411424:	sbb    BYTE PTR [ebx],dl
  411426:	inc    esp
  411427:	stos   DWORD PTR es:[edi],eax
  411428:	jnp    0x4113c7
  41142a:	xchg   edx,eax
  41142b:	fisubr WORD PTR [ecx-0x4]
  41142e:	jge    0x4113b5
  411430:	mov    edx,0x37e49549
  411435:	inc    eax
  411436:	push   0x59
  411438:	xchg   edx,eax
  411439:	inc    eax
  41143a:	enter  0xf890,0x36
  41143e:	mov    edi,DWORD PTR [eax+0x6f]
  411441:	xchg   edx,eax
  411442:	sub    eax,0xd1323482
  411447:	jns    0x41148a
  411449:	ror    BYTE PTR [eax],cl
  41144b:	arpl   WORD PTR [ebx+eiz*4],si
  41144e:	stc    
  41144f:	xchg   ebx,eax
  411450:	inc    eax
  411451:	(bad)  
  411452:	sub    BYTE PTR [ebx+0x2e],ah
  411455:	or     BYTE PTR [esi-0x5],ch
  411458:	jae    0x411473
  41145a:	fild   WORD PTR [edi]
  41145c:	mov    ebx,DWORD PTR [eax-0x3265be1b]
  411462:	sub    BYTE PTR [eax+0x7c],ah
  411465:	out    dx,al
  411466:	jnp    0x411469
  411468:	icebp  
  411469:	dec    eax
  41146a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146b:	jmp    0x41a6243
  411470:	dec    edi
  411471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411472:	xchg   ebx,eax
  411473:	sbb    eax,ebp
  411475:	jmp    0x88a2c910
  41147a:	xchg   esp,eax
  41147b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147c:	out    dx,eax
  41147d:	pop    edi
  41147f:	cmp    eax,0x6c2b305f
  411484:	das    
  411485:	shl    al,cl
  411487:	cmp    eax,0xcb070a6d
  41148c:	dec    ebp
  41148d:	and    al,0xe7
  41148f:	jne    0x411445
  411491:	js     0x41147f
  411493:	in     al,0xd2
  411495:	sub    al,0x2
  411497:	ret    
  411498:	cmp    ebx,DWORD PTR [ebx+esi*4-0x23]
  41149c:	push   edi
  41149d:	fdivr  DWORD PTR [edx]
  41149f:	pop    ebx
  4114a0:	sbb    esp,edx
  4114a2:	adc    eax,0x70cad9b2
  4114a7:	cmp    al,cl
  4114a9:	retf   
  4114aa:	mov    ds:0x894696c7,eax
  4114af:	sub    cl,BYTE PTR [ebx+ecx*2+0x64]
  4114b3:	cmp    eax,0xbd68a5a
  4114b8:	mov    cl,0x69
  4114ba:	in     al,0xe5
  4114bc:	or     BYTE PTR [eax-0x5b0967c3],bl
  4114c2:	sbb    ebp,DWORD PTR [edx+eiz*2+0x390c8915]
  4114c9:	mov    esi,DWORD PTR [ecx]
  4114cb:	xor    ecx,DWORD PTR [edx]
  4114cd:	ror    DWORD PTR [ecx],1
  4114cf:	sbb    ah,BYTE PTR [ebx]
  4114d1:	inc    ebp
  4114d2:	inc    ebp
  4114d3:	jecxz  0x4114ac
  4114d5:	push   edi
  4114d6:	test   BYTE PTR [edx],dl
  4114d8:	ds hlt 
  4114da:	mov    DWORD PTR [ebp+eax*2+0x27],0xc5bee4ca
  4114e2:	push   esi
  4114e3:	add    BYTE PTR [edi+0x764dfd84],dl
  4114e9:	push   ds
  4114ea:	pop    ecx
  4114eb:	mov    ah,0x8
  4114ed:	fldln2 
  4114ef:	mov    esi,0xb9d0ecb5
  4114f4:	pop    ebp
  4114f5:	jnp    0x411564
  4114f7:	stc    
  4114f8:	inc    eax
  4114f9:	inc    ebx
  4114fa:	xchg   BYTE PTR [ebx],bh
  4114fc:	xchg   ebx,eax
  4114fd:	mov    ebx,0xcbb3b301
  411502:	(bad)  
  411503:	les    esp,FWORD PTR [esi-0x7f]
  411506:	sbb    ebp,ebx
  411508:	jb     0x4114b8
  41150a:	inc    eax
  41150b:	in     al,dx
  41150c:	clc    
  41150d:	aad    0xfd
  41150f:	loopne 0x41156d
  411511:	cmc    
  411512:	sub    ch,BYTE PTR [esi]
  411514:	cwde   
  411515:	dec    esp
  411516:	mov    ah,BYTE PTR ds:0x9f85e0e8
  41151c:	fdiv   st(5),st
  41151e:	pop    ds
  41151f:	call   0x37a20c58
  411524:	sbb    BYTE PTR [ecx],bh
  411526:	ins    DWORD PTR es:[edi],dx
  411527:	scas   al,BYTE PTR es:[edi]
  411528:	fisub  DWORD PTR [esi-0x2]
  41152b:	push   edx
  41152c:	mul    ecx
  41152e:	jg     0x4114fc
  411530:	ins    BYTE PTR es:[edi],dx
  411531:	push   ebp
  411532:	lock or eax,DWORD PTR [eiz*2+0x6f793e55]
  41153a:	xor    DWORD PTR [edx-0x5eedef53],ebp
  411540:	outs   dx,BYTE PTR ds:[esi]
  411541:	add    dh,bl
  411543:	add    BYTE PTR [ebp-0x7523b0e9],0x98
  41154a:	pusha  
  41154b:	cwde   
  41154c:	inc    esi
  41154d:	jo     0x411535
  41154f:	stos   BYTE PTR es:[edi],al
  411550:	icebp  
  411551:	jp     0x411533
  411553:	aam    0xcb
  411555:	inc    esp
  411556:	xor    eax,0x36f6fc43
  41155b:	xor    eax,0x13ce0196
  411560:	xlat   BYTE PTR ds:[ebx]
  411561:	and    ah,BYTE PTR [ebx]
  411563:	mov    esp,0xb2904601
  411568:	leave  
  411569:	imul   ebx,edi,0x8aed0b69
  41156f:	mov    WORD PTR [edi],?
  411571:	mov    cl,BYTE PTR [ebx]
  411573:	shl    DWORD PTR [edi-0x24],0x7c
  411577:	sub    esp,DWORD PTR [edi+ebp*1+0x73]
  41157b:	popa   
  41157c:	add    al,0xeb
  41157e:	lock mov eax,0xf36e2e8b
  411584:	stos   DWORD PTR es:[edi],eax
  411585:	ins    DWORD PTR es:[edi],dx
  411586:	inc    edx
  411587:	push   eax
  411588:	(bad)  
  411589:	ins    DWORD PTR es:[edi],dx
  41158a:	and    BYTE PTR [eax],al
  41158c:	push   ebp
  41158d:	jno    0x4115ab
  41158f:	mov    ds:0x116bd630,al
  411594:	iret   
  411595:	cdq    
  411596:	jb     0x4115eb
  411598:	out    dx,al
  411599:	push   ss
  41159a:	xor    dh,BYTE PTR [ebx]
  41159c:	add    DWORD PTR [ebp-0x2f],esi
  41159f:	cmp    esi,DWORD PTR [edi-0x5abda2d4]
  4115a5:	ds push ebp
  4115a7:	fisubr DWORD PTR [ebx-0x20a3d759]
  4115ad:	xchg   ebx,eax
  4115ae:	inc    eax
  4115af:	push   esp
  4115b0:	sbb    cl,dl
  4115b2:	retf   0x179e
  4115b5:	std    
  4115b6:	(bad)  
  4115b7:	pusha  
  4115b8:	push   ebp
  4115b9:	jl     0x4115dc
  4115bb:	out    0xe8,eax
  4115bd:	ja     0x411626
  4115bf:	cmp    DWORD PTR [esi],esi
  4115c1:	and    DWORD PTR [esi],esp
  4115c3:	xchg   BYTE PTR [edi+0x48d1b79d],dl
  4115c9:	jge    0x4115fa
  4115cb:	xchg   DWORD PTR [edi*4+0x54ccd15f],ebp
  4115d2:	out    dx,eax
  4115d3:	retf   0x3d37
  4115d6:	mov    eax,0x148a9712
  4115db:	pop    edi
  4115dc:	adc    BYTE PTR [edi-0x1750c414],bh
  4115e2:	int3   
  4115e3:	(bad)  
  4115e5:	cmp    DWORD PTR [esi],eax
  4115e7:	xor    BYTE PTR [edx-0x13d156e9],al
  4115ed:	jae    0x4115bc
  4115ef:	add    esp,edx
  4115f1:	out    dx,eax
  4115f2:	and    esi,esp
  4115f4:	and    ch,cl
  4115f6:	lods   al,BYTE PTR ds:[esi]
  4115f7:	es cld 
  4115f9:	pop    edi
  4115fa:	jmp    0x8de72b8f
  4115ff:	xchg   bh,dl
  411601:	adc    al,0xd5
  411603:	enter  0xeb1f,0x20
  411607:	sbb    DWORD PTR [edi],ebx
  411609:	mov    al,0x55
  41160b:	outs   dx,DWORD PTR ds:[esi]
  41160c:	(bad)
  41160f:	sbb    al,0xf7
  411611:	add    DWORD PTR ds:0x2291c135,edi
  411617:	push   0x437d870d
  41161c:	imul   eax,edi,0xffffff8c
  41161f:	cmc    
  411620:	sub    esp,DWORD PTR [eax-0x5a]
  411623:	stc    
  411624:	xchg   edi,eax
  411625:	mov    dh,0x2
  411627:	ds cwde 
  411629:	cmp    eax,0x97998424
  41162e:	or     cl,BYTE PTR [ebx-0x40]
  411631:	scas   al,BYTE PTR es:[edi]
  411632:	popf   
  411633:	lahf   
  411634:	pop    esi
  411635:	xor    edx,DWORD PTR [eax]
  411637:	mov    bh,BYTE PTR ds:0xf79b8854
  41163d:	jp     0x4116b2
  41163f:	sbb    eax,0xdbc7cadc
  411644:	ss jns 0x411692
  411647:	stos   DWORD PTR es:[edi],eax
  411648:	pop    edi
  411649:	mov    al,ah
  41164b:	xor    ebp,DWORD PTR [edx-0x6d63c7e3]
  411651:	inc    edi
  411652:	rcl    ebp,cl
  411654:	loop   0x4115ee
  411656:	lock sar BYTE PTR [eax-0x4d],1
  41165a:	mov    esi,0x62d55e17
  41165f:	add    edx,DWORD PTR [ebx]
  411661:	xor    DWORD PTR [esi],eax
  411663:	xchg   esp,eax
  411664:	sub    eax,0x7d41b02a
  411669:	mov    esp,0x39181ae6
  41166e:	repnz mov al,0x60
  411671:	call   0x30fa3f9b
  411676:	jb     0x411635
  411678:	in     eax,dx
  411679:	imul   ebx,DWORD PTR [ebp+0x5c],0xffffffdd
  41167d:	popa   
  41167e:	call   0xae1d:0x36a4a940
  411685:	push   edi
  411686:	add    DWORD PTR [edx*1+0x6869f9d1],edx
  41168d:	xor    al,0x3b
  41168f:	xor    ecx,esi
  411691:	adc    dh,BYTE PTR [ebx-0xb4105df]
  411697:	cmc    
  411698:	(bad)  
  411699:	mov    ebx,0x47583042
  41169e:	daa    
  41169f:	xchg   ebx,eax
  4116a0:	shl    DWORD PTR [esi],0xe2
  4116a3:	mov    al,0xbc
  4116a5:	ja     0x411701
  4116a7:	pop    ds
  4116a8:	hlt    
  4116a9:	fild   DWORD PTR [eax+ebp*2-0xcbf5e0f]
  4116b0:	add    BYTE PTR [ecx-0x7932cff4],cl
  4116b6:	dec    edx
  4116b7:	push   ecx
  4116b8:	jle    0x41172b
  4116ba:	test   DWORD PTR [edx],eax
  4116bc:	adc    eax,0xcbb590de
  4116c1:	mov    esi,0xd1a32dc1
  4116c6:	test   eax,0x80d7a593
  4116cb:	dec    edi
  4116cc:	repnz xor bh,BYTE PTR [ecx-0x51a0d9e2]
  4116d3:	mov    ebp,0x730450d8
  4116d8:	pop    ss
  4116d9:	dec    edx
  4116da:	add    BYTE PTR [edi+ebp*2],cl
  4116dd:	test   DWORD PTR [ebp-0x3b],eax
  4116e0:	and    DWORD PTR [edi+0x377f1a2f],0x25
  4116e7:	or     eax,0xabe79d31
  4116ec:	sbb    ebp,edx
  4116ee:	std    
  4116ef:	in     al,0x5
  4116f1:	mov    dl,0xc0
  4116f3:	(bad)  
  4116f4:	pop    edx
  4116f5:	(bad)  
  4116f6:	into   
  4116f7:	shl    BYTE PTR ss:[eax-0x290c5b17],0x44
  4116ff:	mov    ah,0x5c
  411701:	cdq    
  411702:	and    esi,0xffffff8d
  411705:	sbb    al,0x65
  411707:	sti    
  411708:	gs and al,0x6b
  41170b:	and    ah,BYTE PTR [edi+0x62c6178e]
  411711:	mov    esi,0x94df4ffd
  411716:	sub    dl,BYTE PTR [eax+0x758149e8]
  41171c:	pop    ds
  41171d:	lahf   
  41171e:	and    eax,ebp
  411720:	repz adc eax,0x9ac2be7a
  411726:	mov    al,ds:0xfe1515bb
  41172b:	jne    0x411711
  41172d:	enter  0xbe5c,0x9f
  411731:	jo     0x411785
  411733:	ds pop es
  411735:	and    dl,ah
  411737:	and    ebp,0xc0d3668b
  41173d:	dec    eax
  41173e:	out    dx,eax
  41173f:	test   al,0x1
  411741:	ds loop 0x41171b
  411744:	jge    0x41173a
  411746:	mov    ecx,0x478c14a
  41174b:	pop    es
  41174c:	shr    DWORD PTR [eax+0x42],0x50
  411750:	inc    esp
  411751:	jmp    0xa7e38bb7
  411756:	pop    esp
  411757:	imul   esi,esi,0xa9bdc124
  41175d:	sub    ecx,DWORD PTR [esi]
  41175f:	mov    cs,ebp
  411761:	call   DWORD PTR [ebx+0x23c1110e]
  411767:	mov    bl,0xd6
  411769:	popf   
  41176a:	inc    esp
  41176b:	adc    bl,cl
  41176d:	dec    ebp
  41176e:	jo     0x4117ec
  411770:	data16 ja 0x41179b
  411773:	rcr    DWORD PTR [eax],1
  411775:	das    
  411776:	retf   
  411777:	jo     0x4117e3
  411779:	test   BYTE PTR [ebx],cl
  41177b:	out    dx,eax
  41177c:	sti    
  41177d:	fadd   DWORD PTR [ebx]
  41177f:	pop    ss
  411780:	call   0x546e:0xd4d4b0ef
  411787:	cmovp  ebp,DWORD PTR [esi]
  41178a:	out    0xfe,al
  41178c:	cmp    dl,cl
  41178e:	repz or cl,dh
  411791:	popf   
  411792:	mov    eax,0xb18a383c
  411797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411798:	dec    esp
  411799:	fucomp st(3)
  41179b:	dec    ecx
  41179c:	test   BYTE PTR gs:[edx],0x52
  4117a0:	ss dec ebx
  4117a2:	xor    DWORD PTR [eax+esi*8+0x5fea47a2],esp
  4117a9:	pop    edi
  4117aa:	mov    bh,0x2f
  4117ac:	dec    esi
  4117ad:	test   eax,0x9eb37ab8
  4117b2:	pop    esi
  4117b3:	and    eax,0x85724450
  4117b8:	(bad)  [esi]
  4117ba:	out    0x64,al
  4117bc:	sbb    ebp,eax
  4117be:	repnz xchg esi,eax
  4117c0:	daa    
  4117c1:	clc    
  4117c2:	call   DWORD PTR [ebp-0x519b92b5]
  4117c8:	out    dx,al
  4117c9:	and    al,BYTE PTR [eax+0x42]
  4117cc:	out    0xb1,al
  4117ce:	jl     0x4117a2
  4117d0:	mov    edx,0x821ca674
  4117d5:	push   edx
  4117d6:	test   cl,0x70
  4117d9:	addr16 (bad) 
  4117db:	adc    BYTE PTR [eax+0x75],dl
  4117de:	imul   esp,DWORD PTR [eax-0x7a],0x8e2daa6e
  4117e5:	enter  0xac16,0xe8
  4117e9:	jne    0x411834
  4117eb:	jecxz  0x41179c
  4117ed:	xor    al,0x60
  4117ef:	stos   DWORD PTR es:[edi],eax
  4117f0:	jnp    0x411831
  4117f2:	loop   0x411774
  4117f4:	enter  0x96e9,0x33
  4117f8:	xor    al,BYTE PTR [ecx+0x2f773052]
  4117fe:	push   ebx
  4117ff:	addr16 push ebx
  411801:	shr    BYTE PTR [edi-0x40],cl
  411804:	xor    DWORD PTR [esi-0x2c],ebp
  411807:	mov    ah,0x75
  411809:	dec    eax
  41180a:	xor    BYTE PTR [ecx-0x2b],dl
  41180d:	xchg   BYTE PTR [ebp-0x7e56783b],cl
  411813:	(bad)  
  411814:	ins    BYTE PTR es:[edi],dx
  411815:	ds hlt 
  411817:	jp     0x411877
  411819:	xchg   ebx,eax
  41181a:	sub    BYTE PTR [edx-0x2e],dl
  41181d:	jb     0x411861
  41181f:	ja     0x411849
  411821:	ror    ebp,cl
  411823:	les    edx,FWORD PTR [eax+0x38]
  411826:	in     al,0x27
  411828:	in     al,dx
  411829:	ret    
  41182a:	sbb    ch,BYTE PTR [ecx]
  41182c:	sub    eax,0x75cfc3eb
  411831:	pop    ebx
  411832:	and    ch,BYTE PTR [edx]
  411834:	jbe    0x4117e9
  411836:	and    dh,BYTE PTR [edi-0x2c79ae8f]
  41183c:	in     eax,0x63
  41183e:	pushf  
  41183f:	push   ebx
  411840:	test   al,0xe
  411842:	sub    ecx,DWORD PTR [edi+eiz*8+0x7a8789be]
  411849:	out    dx,eax
  41184a:	sub    eax,0xfe4e1998
  41184f:	jnp    0x411848
  411851:	sbb    DWORD PTR [ebx+0x59],eax
  411854:	adc    ch,BYTE PTR [ebx+0xd11edd1]
  41185a:	jne    0x411858
  41185c:	jp     0x4117fc
  41185e:	stos   DWORD PTR es:[edi],eax
  41185f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411860:	pusha  
  411861:	fst    DWORD PTR [eax]
  411863:	stos   BYTE PTR es:[edi],al
  411864:	fstp   TBYTE PTR [ecx+0x40]
  411867:	fs jle 0x41189b
  41186a:	in     eax,dx
  41186b:	xor    ah,ch
  41186d:	into   
  41186e:	sbb    al,0x87
  411870:	fistp  WORD PTR [eax+eax*1+0x46766354]
  411877:	mov    al,0x57
  411879:	test   DWORD PTR [ebx],eax
  41187b:	and    eax,0xe3aef79d
  411880:	dec    ebp
  411881:	or     BYTE PTR [edx+edi*4],0xab
  411885:	fld    QWORD PTR ds:0x959b36a2
  41188b:	mov    dh,0xd
  41188d:	mov    esp,0xc3b22342
  411892:	or     esp,DWORD PTR [ebp+0x71de5785]
  411898:	add    ebp,DWORD PTR [ebx+0xc]
  41189b:	(bad)  
  41189c:	lock and dh,ch
  41189f:	jbe    0x4118b2
  4118a1:	sbb    bh,BYTE PTR [edi-0x16]
  4118a4:	cmp    al,0x80
  4118a6:	cmp    edx,DWORD PTR [esi-0x61]
  4118a9:	icebp  
  4118aa:	or     bh,BYTE PTR [bx+di-0x312]
  4118af:	aas    
  4118b0:	adc    al,0x4a
  4118b2:	out    0x79,al
  4118b4:	jno    0x4118fd
  4118b6:	imul   edi,edx,0xe
  4118b9:	ds xor eax,0xe86a3cfb
  4118bf:	jmp    0x4e89:0xd99f4604
  4118c6:	adc    ebp,DWORD PTR [edx-0x61bb1a89]
  4118cc:	cmc    
  4118cd:	inc    ebp
  4118ce:	jmp    0x4118bd
  4118d0:	and    DWORD PTR [edx+0x492cec54],edi
  4118d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d7:	ret    
  4118d8:	jecxz  0x4118d6
  4118da:	sbb    al,0x3b
  4118dc:	neg    BYTE PTR [esi+ebp*2+0x1020135]
  4118e3:	hlt    
  4118e4:	shl    ah,0xe
  4118e7:	addr16 mov bl,0x91
  4118ea:	jmp    ebx
  4118ec:	push   cs
  4118ed:	and    BYTE PTR [esi+0x53],bh
  4118f0:	es pop edi
  4118f2:	sbb    DWORD PTR [esi],esi
  4118f4:	retf   0x6f4f
  4118f7:	imul   esi,DWORD PTR [ecx-0x4b],0x68
  4118fb:	cmp    DWORD PTR [ebx+esi*8+0x12f89270],ebp
  411902:	sbb    eax,ebp
  411904:	je     0x411938
  411906:	sti    
  411907:	mov    eax,0xbaf13fcc
  41190c:	mov    al,ds:0x76ac497b
  411911:	adc    ebx,ebx
  411913:	and    eax,0x7ab7f1b3
  411918:	push   esi
  411919:	jmp    0x116f0827
  41191e:	pop    ebx
  41191f:	das    
  411920:	jle    0x411941
  411922:	popf   
  411923:	daa    
  411924:	mov    ds:0x3faf2e56,al
  411929:	xlat   BYTE PTR ds:[ebx]
  41192a:	push   ds
  41192b:	dec    ebp
  41192c:	inc    eax
  41192d:	jb     0x411941
  41192f:	xor    dl,0xe6
  411932:	mov    esi,0x6db6f3fa
  411937:	push   cs
  411938:	push   edx
  411939:	mov    bl,0x3d
  41193b:	pop    es
  41193c:	inc    ebx
  41193d:	adc    ch,ah
  41193f:	pop    eax
  411940:	cli    
  411941:	stos   BYTE PTR es:[edi],al
  411942:	jo     0x411911
  411944:	mov    ebp,0x548d4daa
  411949:	scas   eax,DWORD PTR es:[edi]
  41194a:	repnz push es
  41194c:	pop    ds
  41194d:	std    
  41194e:	mov    edi,0x9a6c8277
  411953:	xchg   ebx,eax
  411954:	jbe    0x411995
  411956:	sbb    al,0x3e
  411958:	push   ebx
  411959:	retf   0x13de
  41195c:	fidivr DWORD PTR [edi+0x58008633]
  411962:	xchg   DWORD PTR [edx-0x44],ebp
  411965:	out    0xc6,al
  411967:	out    0x75,al
  411969:	repz push 0x96abc3ee
  41196f:	pop    edx
  411970:	mov    bl,0x9a
  411972:	mov    ds,WORD PTR [edx+0x57]
  411975:	or     ecx,eax
  411977:	xchg   esi,eax
  411978:	cli    
  411979:	fistp  DWORD PTR [edi+0x3fd7065f]
  41197f:	stc    
  411980:	sbb    BYTE PTR [esi],dh
  411982:	call   0x3f5787a0
  411987:	ret    
  411988:	xchg   ebp,eax
  411989:	xchg   esi,eax
  41198a:	(bad)  
  41198c:	std    
  41198d:	iret   
  41198e:	loope  0x411964
  411990:	mov    bl,0x14
  411992:	jp     0x4119d3
  411994:	inc    ecx
  411995:	inc    esp
  411996:	jbe    0x41194a
  411998:	pop    ss
  411999:	mov    ds:0xe55d0c50,eax
  41199e:	arpl   WORD PTR [esi],si
  4119a0:	dec    ecx
  4119a1:	cli    
  4119a2:	hlt    
  4119a3:	jb     0x4119b0
  4119a5:	pop    es
  4119a6:	jbe    0x411960
  4119a8:	pop    edx
  4119a9:	neg    ecx
  4119ab:	(bad)  
  4119ac:	seto   ah
  4119af:	push   cs
  4119b0:	mov    edi,edx
  4119b2:	stos   DWORD PTR es:[edi],eax
  4119b3:	loopne 0x4119bb
  4119b5:	push   es
  4119b6:	outs   dx,DWORD PTR ds:[esi]
  4119b7:	add    DWORD PTR [eax-0x176a482c],ebp
  4119bd:	xchg   esi,eax
  4119be:	aam    0x65
  4119c0:	test   eax,0xa25d7b72
  4119c5:	sub    BYTE PTR [edx],dh
  4119c7:	scas   al,BYTE PTR es:[edi]
  4119c8:	in     eax,dx
  4119c9:	pushf  
  4119ca:	add    DWORD PTR [eax+ecx*1+0x23],ecx
  4119ce:	imul   ebp,DWORD PTR [ebx+edi*1],0xffffff87
  4119d2:	retf   
  4119d3:	sar    BYTE PTR [edx-0x230443a9],1
  4119d9:	add    al,0xc6
  4119db:	dec    ecx
  4119dc:	fs call 0xb6bdd270
  4119e2:	aaa    
  4119e3:	jne    0x4119d2
  4119e5:	add    esi,DWORD PTR [edx+0x4b0861a]
  4119eb:	test   DWORD PTR [edi+edi*1],ecx
  4119ee:	mov    WORD PTR [esi+0x34f344bd],ss
  4119f4:	cmp    DWORD PTR [ebp-0x45],esp
  4119f7:	lods   eax,DWORD PTR ds:[esi]
  4119f8:	add    cl,dl
  4119fa:	fadd   DWORD PTR [edx]
  4119fc:	js     0x411a48
  4119fe:	xchg   edi,eax
  4119ff:	mov    ah,al
  411a01:	xchg   esi,eax
  411a02:	or     eax,0x56dd7cfe
  411a07:	mov    dh,0x4e
  411a09:	and    ah,dh
  411a0b:	leave  
  411a0c:	mov    al,ds:0x8b0d696
  411a11:	jns    0x4119a4
  411a13:	pusha  
  411a14:	xchg   esp,ecx
  411a16:	cmp    ah,BYTE PTR [eax-0x40ed70fe]
  411a1c:	pop    ecx
  411a1d:	in     al,0xbd
  411a1f:	mov    esi,0x4d1593d
  411a24:	mov    eax,ds:0x7a545ae4
  411a29:	jle    0x411a43
  411a2b:	bound  edi,QWORD PTR [ebx]
  411a2d:	mov    ebp,0x501c521f
  411a32:	leave  
  411a33:	mov    dl,0x6b
  411a35:	jmp    0x411a24
  411a37:	push   ds
  411a38:	into   
  411a39:	xor    DWORD PTR [edi+0x67],0x4d
  411a3d:	icebp  
  411a3e:	mov    ds:0xf20de9ad,eax
  411a43:	xor    eax,0x996c5c65
  411a48:	(bad)  
  411a49:	jns    0x4119cc
  411a4b:	inc    ebp
  411a4c:	xchg   BYTE PTR [edi+0x64],al
  411a4f:	cwde   
  411a50:	cmp    BYTE PTR [esi+0x3ddd8403],al
  411a56:	and    BYTE PTR [ebx],0x8b
  411a59:	xor    BYTE PTR [edi+0x43],0x1c
  411a5d:	test   BYTE PTR [esi],ah
  411a5f:	dec    esp
  411a60:	mov    esp,0x30851417
  411a65:	(bad)  
  411a66:	push   ebx
  411a67:	jo     0x411abf
  411a69:	shl    BYTE PTR [edi+0x730e2a6d],0xfb
  411a70:	popf   
  411a71:	jle    0x411a3b
  411a73:	push   edx
  411a74:	jl     0x411ab3
  411a76:	out    0x87,eax
  411a78:	mov    ch,0x25
  411a7a:	cmc    
  411a7b:	ja     0x411a9a
  411a7d:	stc    
  411a7e:	rol    bl,1
  411a80:	mov    ds:0x7d0eeb1,eax
  411a85:	into   
  411a86:	nop
  411a87:	ss push esi
  411a89:	sbb    dl,cl
  411a8b:	add    esi,DWORD PTR [ebx+0x6c616ce2]
  411a91:	or     ebx,edx
  411a93:	ja     0x411a89
  411a95:	repnz mov al,0x16
  411a98:	pop    edi
  411a99:	xor    BYTE PTR [eax+0x5e],0x8d
  411a9d:	(bad)
  411aa0:	inc    ebp
  411aa1:	icebp  
  411aa2:	xor    eax,0x1bcaa3b0
  411aa7:	retf   
  411aa8:	and    edx,DWORD PTR [ebp-0x31bd96af]
  411aae:	pop    edi
  411aaf:	cmp    al,0xb5
  411ab1:	sub    eax,0xc430e4f3
  411ab6:	fmul   QWORD PTR gs:[esi]
  411ab9:	test   BYTE PTR [eax+0x2f],bl
  411abc:	xor    ecx,DWORD PTR [ebp+ebp*8+0x7a49e7fe]
  411ac3:	xchg   ecx,eax
  411ac4:	add    ah,BYTE PTR [ebp-0x5a]
  411ac7:	loope  0x411a62
  411ac9:	jge    0x411b15
  411acb:	imul   ebp,DWORD PTR [edx+0x7f],0x72
  411acf:	inc    eax
  411ad0:	sbb    esp,esi
  411ad2:	pop    ebx
  411ad3:	inc    ebx
  411ad4:	int    0xd1
  411ad6:	pop    ebx
  411ad7:	pop    ss
  411ad8:	adc    BYTE PTR [edx],al
  411ada:	jne    0x411af7
  411adc:	rcr    esi,1
  411ade:	xor    BYTE PTR [eax-0x67],dl
  411ae1:	scas   al,BYTE PTR es:[edi]
  411ae2:	aam    0xab
  411ae4:	enter  0xefa4,0x1f
  411ae8:	and    DWORD PTR [eax+0x3c0fdbc8],esi
  411aee:	fsub   QWORD PTR [ecx-0x5b]
  411af1:	ins    DWORD PTR es:[edi],dx
  411af2:	scas   al,BYTE PTR es:[edi]
  411af3:	cmc    
  411af4:	cli    
  411af5:	loope  0x411b38
  411af7:	push   cs
  411af8:	aaa    
  411af9:	outs   dx,BYTE PTR ds:[esi]
  411afa:	mov    ds:0xa9cc5a2d,al
  411aff:	mov    ds:0x26409bd4,al
  411b04:	sbb    DWORD PTR [eax],ecx
  411b06:	mov    cl,0xa5
  411b08:	xchg   ebp,eax
  411b09:	dec    eax
  411b0a:	adc    eax,0x23983508
  411b0f:	adc    al,0x5a
  411b11:	lods   al,BYTE PTR ds:[esi]
  411b12:	sub    DWORD PTR [ebx],0xffffffe6
  411b15:	lahf   
  411b16:	and    BYTE PTR [ecx-0x15],bh
  411b19:	mul    eax
  411b1b:	mov    al,0x4f
  411b1d:	imul   edx,DWORD PTR [ebx+edx*4+0x56067fb5],0xbfea1553
  411b28:	mov    dh,0xef
  411b2a:	xor    al,0x24
  411b2c:	bound  eax,QWORD PTR [esi+0x40]
  411b2f:	fsub   st,st(4)
  411b31:	je     0x411b67
  411b33:	into   
  411b34:	stos   DWORD PTR es:[edi],eax
  411b35:	std    
  411b36:	or     edi,DWORD PTR [ebx]
  411b38:	imul   esi,DWORD PTR [edx+ebx*4+0x2a6a0276],0x7a1a663e
  411b43:	pop    esp
  411b44:	inc    ebp
  411b45:	pop    esi
  411b46:	xchg   ebx,edx
  411b48:	rol    dh,0x42
  411b4b:	push   edi
  411b4c:	clc    
  411b4d:	add    DWORD PTR [ecx+0x44cb94f3],ebx
  411b53:	cmp    eax,0xc557bdda
  411b58:	push   es
  411b59:	fldcw  WORD PTR [ecx]
  411b5b:	int    0xea
  411b5d:	xor    DWORD PTR [ecx+0x56],0xfffffffc
  411b61:	and    al,0x53
  411b63:	je     0x411b20
  411b65:	mov    esp,0x3b2cf517
  411b6a:	push   ebx
  411b6b:	mov    ecx,0x88b08eec
  411b70:	xchg   edx,eax
  411b71:	inc    esp
  411b72:	inc    eax
  411b73:	cmp    DWORD PTR [ebx],ecx
  411b75:	out    0x7f,al
  411b77:	aaa    
  411b78:	push   es
  411b79:	push   0x4db1a65a
  411b7e:	cmp    DWORD PTR [ecx-0x73ee5839],esi
  411b84:	or     eax,0x19fecfc5
  411b89:	pop    ss
  411b8a:	xchg   ebx,eax
  411b8b:	xor    edi,esi
  411b8d:	push   ds
  411b8e:	cmp    cl,0x16
  411b91:	adc    DWORD PTR [esi+edi*1-0x14],0x6a
  411b96:	sbb    al,0x39
  411b98:	les    ebp,FWORD PTR [edx+edx*4-0xc]
  411b9c:	adc    eax,0xbda7ba82
  411ba1:	xchg   edx,esi
  411ba3:	mov    DWORD PTR [edi+0x211f3d6c],edi
  411ba9:	pop    eax
  411baa:	test   eax,0xd7c4b73b
  411baf:	sbb    BYTE PTR [ebp+0x7c],al
  411bb2:	rol    ah,0xcc
  411bb5:	ret    0x70f5
  411bb8:	cmp    BYTE PTR [ebx+0x7af95b84],ch
  411bbe:	mov    esi,0x7609b20b
  411bc3:	xchg   ebp,eax
  411bc4:	fidiv  WORD PTR [edi]
  411bc6:	mov    cl,0x8b
  411bc8:	mov    ah,0xef
  411bca:	xor    eax,0xe1796579
  411bd0:	add    al,BYTE PTR [edx-0x44b35d1e]
  411bd6:	call   0xfa75a7c
  411bdb:	sbb    esp,ecx
  411bdd:	aaa    
  411bde:	cli    
  411bdf:	cmp    edx,edx
  411be1:	imul   ebp,DWORD PTR [ebp-0x5949d4de],0xe1f0a6d2
  411beb:	ja     0x411c43
  411bed:	ds inc edi
  411bef:	(bad)  
  411bf0:	iret   
  411bf1:	iret   
  411bf2:	xchg   BYTE PTR [eax+0x7a],ah
  411bf5:	pop    eax
  411bf6:	ja     0x411b87
  411bf8:	jns    0x411b8e
  411bfa:	xchg   ecx,eax
  411bfb:	(bad)  
  411bfd:	cmp    bl,al
  411bff:	popf   
  411c00:	inc    esp
  411c01:	mov    cs,WORD PTR [edx]
  411c03:	push   ebp
  411c05:	iret   
  411c06:	mov    bl,0x78
  411c08:	jmp    0x411bad
  411c0a:	nop
  411c0b:	and    esp,DWORD PTR [eax-0x2be946b1]
  411c11:	pop    esp
  411c12:	imul   esi,DWORD PTR [ecx],0xdcd8f93c
  411c18:	rcr    DWORD PTR [edx-0x7be7bc2c],0x49
  411c1f:	call   FWORD PTR [ebp+0x45b99663]
  411c25:	mov    cl,0x6c
  411c27:	popa   
  411c28:	mov    dh,0xea
  411c2a:	dec    esi
  411c2b:	mov    ecx,esi
  411c2d:	daa    
  411c2e:	inc    ecx
  411c2f:	lahf   
  411c30:	lea    ecx,[edx-0x16595fb1]
  411c36:	sub    eax,DWORD PTR [edx]
  411c38:	gs push edi
  411c3a:	sar    BYTE PTR [edx+0x369aa639],1
  411c40:	push   0x29f7023e
  411c45:	xchg   ecx,eax
  411c46:	fs adc al,0x2a
  411c49:	loop   0x411c91
  411c4b:	(bad)  
  411c4c:	cmp    BYTE PTR [edi+edi*8+0x57],bl
  411c50:	mov    BYTE PTR [edx+esi*4-0x38],cl
  411c54:	enter  0x78c3,0xbf
  411c58:	xor    edx,edi
  411c5a:	(bad)  
  411c5b:	cli    
  411c5c:	xlat   BYTE PTR ds:[ebx]
  411c5d:	iret   
  411c5e:	add    BYTE PTR [esi-0xd],cl
  411c61:	hlt    
  411c62:	cmp    eax,0x9ef7572b
  411c67:	jp     0x411c01
  411c69:	mov    bl,0xba
  411c6b:	das    
  411c6c:	jnp    0x411c50
  411c6e:	imul   eax,DWORD PTR [eax-0x20],0xffffffb1
  411c72:	(bad)  
  411c74:	scas   al,BYTE PTR es:[edi]
  411c75:	test   al,0x13
  411c77:	fsub   DWORD PTR [ecx+0x3b872eae]
  411c7d:	dec    esi
  411c7e:	mov    DWORD PTR [eax+0x5c],ebx
  411c81:	fst    DWORD PTR [eax]
  411c83:	aas    
  411c84:	(bad)  [edi+eax*8-0x7077e8dc]
  411c8b:	js     0x411caf
  411c8d:	jecxz  0x411c56
  411c8f:	xchg   ebp,eax
  411c90:	push   ss
  411c91:	jmp    0x411cf1
  411c93:	jbe    0x411c42
  411c95:	mov    al,ds:0x2f22ef33
  411c9a:	jne    0x411c4c
  411c9c:	les    edx,FWORD PTR [edi+0x7255d5f6]
  411ca2:	push   ecx
  411ca3:	je     0x411c65
  411ca5:	or     al,0x4a
  411ca7:	and    BYTE PTR [ecx+0x7e],bh
  411caa:	pop    ss
  411cab:	dec    edi
  411cac:	nop
  411cad:	js     0x411c7b
  411caf:	in     al,0xfc
  411cb1:	pop    edx
  411cb2:	addr16 mov bl,0x45
  411cb5:	scas   al,BYTE PTR es:[edi]
  411cb6:	dec    esp
  411cb7:	inc    edx
  411cb8:	shld   eax,eax,cl
  411cbb:	gs jbe 0x411c7e
  411cbe:	jbe    0x411cad
  411cc0:	mov    ds:0x89c27598,eax
  411cc5:	rcr    DWORD PTR [esi+0x48d4583e],0x6d
  411ccc:	push   0x11
  411cce:	jnp    0x411c65
  411cd0:	add    eax,0x1d8b0601
  411cd5:	add    edx,DWORD PTR [edx-0xf10a512]
  411cdb:	sub    esi,ebp
  411cdd:	out    dx,eax
  411cde:	or     BYTE PTR [esp+eiz*2+0x6c0489af],ah
  411ce5:	sub    DWORD PTR [edx],esi
  411ce7:	push   edi
  411ce8:	mov    edi,0xfcb4d14d
  411ced:	mov    eax,0xfe3097fe
  411cf2:	push   esi
  411cf3:	add    al,0xa4
  411cf5:	mov    dh,0x84
  411cf7:	xchg   esi,eax
  411cf8:	cmp    ch,bh
  411cfa:	cwde   
  411cfb:	push   0xfffffff4
  411cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cfe:	add    al,0x3c
  411d00:	cmp    esp,DWORD PTR [eax+ecx*8+0x2c8c7a49]
  411d07:	and    al,0xdf
  411d09:	inc    eax
  411d0a:	fst    st(3)
  411d0c:	xor    eax,DWORD PTR [ebp+0x0]
  411d0f:	data16 jle 0x411ca9
  411d12:	cmp    eax,0xbbe4a8da
  411d17:	adc    al,0xd1
  411d19:	inc    ecx
  411d1a:	stc    
  411d1b:	sbb    eax,0xf091e8d3
  411d20:	dec    esp
  411d21:	xor    DWORD PTR [eax],edx
  411d23:	pop    ecx
  411d24:	jmp    0x8bbf:0x19d28037
  411d2b:	or     eax,0xfb0f32eb
  411d30:	mov    eax,ds:0x4979d333
  411d35:	loopne 0x411d1c
  411d37:	adc    esp,edx
  411d39:	add    ah,BYTE PTR [esi+0x15]
  411d3c:	mov    cl,ah
  411d3e:	inc    ebx
  411d3f:	mov    al,ds:0x98e3e272
  411d44:	cmp    al,0x2f
  411d46:	add    ah,BYTE PTR [edx+0x9]
  411d49:	test   DWORD PTR [ebx-0x19e2eb4d],0x83107fe
  411d53:	jge    0x411d50
  411d55:	mov    dl,0x68
  411d57:	ror    BYTE PTR fs:[ecx+edx*2+0x5],1
  411d5c:	add    ch,BYTE PTR [esi-0x607312b8]
  411d62:	sbb    al,0xbb
  411d64:	pop    edi
  411d65:	cwde   
  411d66:	ret    
  411d67:	into   
  411d68:	rcl    BYTE PTR [edi],0x7e
  411d6b:	pop    esi
  411d6c:	adc    BYTE PTR ds:0x506654c4,cl
  411d72:	sbb    esp,DWORD PTR [esi]
  411d74:	popf   
  411d75:	mul    BYTE PTR [ebx]
  411d77:	leave  
  411d78:	push   esp
  411d79:	rsm    
  411d7b:	fld    QWORD PTR [ebx+0x3888608f]
  411d81:	jmp    0x411d15
  411d83:	xchg   edi,eax
  411d84:	icebp  
  411d85:	xchg   BYTE PTR [eax+0x66],ah
  411d88:	aad    0x2
  411d8a:	loope  0x411d1a
  411d8c:	addr16 and eax,0xdd0319ec
  411d92:	xor    al,0xa8
  411d94:	fst    QWORD PTR [ebp+0x49]
  411d97:	xlat   BYTE PTR ds:[ebx]
  411d98:	xchg   edx,eax
  411d99:	fldcw  WORD PTR [edi+0x49]
  411d9c:	mov    ebp,0x9cf23c48
  411da1:	sub    al,dh
  411da3:	shr    DWORD PTR [edi+ebp*1],1
  411da6:	inc    edx
  411da7:	or     BYTE PTR [edx-0x2f],al
  411daa:	sbb    BYTE PTR [ecx+edi*4-0x29c90c4],0x40
  411db2:	and    ebp,DWORD PTR [edx+0x780c1465]
  411db8:	and    BYTE PTR [eax+0x7d],ah
  411dbb:	out    dx,eax
  411dbc:	dec    ebp
  411dbd:	movd   mm5,ebx
  411dc0:	aad    0x3c
  411dc2:	mov    DWORD PTR [edx+0x3cbd0e9d],ebx
  411dc8:	mov    al,0x5f
  411dca:	ins    DWORD PTR es:[edi],dx
  411dcb:	or     bh,dl
  411dcd:	gs repz xchg ecx,eax
  411dd0:	lock cmp bl,dh
  411dd3:	dec    ebp
  411dd4:	lds    ebp,FWORD PTR [ebp-0x1a]
  411dd7:	gs cli 
  411dd9:	mov    dh,BYTE PTR [ecx]
  411ddb:	mov    bp,0x473f
  411ddf:	jmp    0x892e:0xc23b059f
  411de6:	fnstsw WORD PTR [edi+0x221a9c9e]
  411dec:	sub    DWORD PTR [esi-0x1b],ecx
  411def:	inc    esi
  411df0:	pop    es
  411df1:	sub    al,BYTE PTR [esi+0x3d]
  411df4:	mov    bh,0xc0
  411df6:	mov    dl,bh
  411df8:	sbb    al,0x48
  411dfa:	mov    esp,0x205d69d6
  411dff:	stc    
  411e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e01:	mov    cs,WORD PTR [edi]
  411e03:	dec    esi
  411e04:	mov    esp,0x8f8bc754
  411e09:	hlt    
  411e0a:	test   al,0xa4
  411e0c:	into   
  411e0d:	jmp    0x8a53:0x606a379a
  411e14:	jp     0x411e6a
  411e16:	push   0xcdad2165
  411e1b:	push   ebx
  411e1c:	(bad)  
  411e1d:	repnz and BYTE PTR ds:0x6f4d836f,dl
  411e24:	sbb    DWORD PTR [ecx+0x29],edi
  411e27:	aam    0x9a
  411e29:	and    esp,esi
  411e2b:	or     ebp,DWORD PTR ds:0x6c9f17e3
  411e31:	cmp    edi,DWORD PTR [ebx]
  411e33:	aas    
  411e34:	or     al,0x8b
  411e36:	loop   0x411e42
  411e38:	jl     0x411ddd
  411e3a:	aad    0xb6
  411e3c:	mov    edi,0x52f22bdc
  411e41:	lds    ebp,FWORD PTR ds:0x3576f02f
  411e47:	inc    esi
  411e48:	(bad)  
  411e49:	xchg   ebp,eax
  411e4a:	les    esi,FWORD PTR [eax+0x23843a3a]
  411e50:	xchg   edx,eax
  411e51:	pop    ebx
  411e52:	pop    ds
  411e53:	clc    
  411e54:	inc    ebx
  411e55:	addr16 cli 
  411e57:	push   edx
  411e58:	xchg   BYTE PTR [edx-0x5c],dl
  411e5b:	jo     0x411e60
  411e5d:	jmp    0xdee32674
  411e62:	(bad)  
  411e63:	ret    
  411e64:	xor    DWORD PTR [ebp-0x2e9fa863],ecx
  411e6a:	stos   DWORD PTR es:[edi],eax
  411e6b:	shr    esp,0xeb
  411e6e:	mov    ebp,0x292b8916
  411e73:	xor    esp,ebp
  411e75:	push   0xd46951a3
  411e7a:	and    BYTE PTR [eax+0x54],dh
  411e7d:	jge    0x411e16
  411e7f:	inc    ecx
  411e80:	adc    al,BYTE PTR [ebx]
  411e82:	cs enter 0x8570,0xf2
  411e87:	stc    
  411e88:	and    al,0xef
  411e8a:	sbb    ebx,DWORD PTR [ebp-0x349f13b2]
  411e90:	xchg   edx,eax
  411e91:	bound  edi,QWORD PTR ds:0x8c666fcc
  411e97:	pop    ebx
  411e98:	sar    BYTE PTR [esi+0x7e],1
  411e9b:	ret    
  411e9c:	lds    edx,FWORD PTR [ecx]
  411e9e:	pop    ecx
  411e9f:	sti    
  411ea0:	sub    ch,dl
  411ea2:	fadd   st,st(1)
  411ea4:	xor    al,0xe7
  411ea6:	mul    dh
  411ea8:	sub    BYTE PTR [ebx+ebx*4],bl
  411eab:	scas   al,BYTE PTR es:[edi]
  411eac:	mov    edi,0x93d9ee1b
  411eb1:	imul   esi,DWORD PTR [ecx+0xf],0xffffff97
  411eb5:	rcr    edi,0xf4
  411eb8:	mov    ecx,edx
  411eba:	add    BYTE PTR [ebx],al
  411ebc:	jns    0x411e75
  411ebe:	icebp  
  411ebf:	fwait
  411ec0:	xlat   BYTE PTR ds:[ebx]
  411ec1:	lds    ebx,FWORD PTR [eax-0x1e]
  411ec4:	or     ecx,DWORD PTR [ecx+eiz*4]
  411ec7:	or     eax,0xdeb69000
  411ecc:	adc    eax,0xb1349649
  411ed1:	hlt    
  411ed2:	xor    eax,0x95d3e876
  411ed7:	adc    al,0x8a
  411ed9:	sub    cl,ch
  411edb:	out    0x25,al
  411edd:	mov    eax,0x7490ec2d
  411ee2:	or     al,0xf8
  411ee4:	loopne 0x411ed7
  411ee6:	int    0xee
  411ee8:	add    bl,BYTE PTR [ebp-0x18]
  411eeb:	or     ecx,DWORD PTR [ebx+0x7f34e73f]
  411ef1:	retf   0xf363
  411ef4:	stos   BYTE PTR es:[edi],al
  411ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef6:	and    eax,0x61b21707
  411efb:	push   0xffffffa8
  411efd:	lds    esi,FWORD PTR [ebp-0x63600d11]
  411f03:	jnp    0x411f4d
  411f05:	or     eax,0xe591057f
  411f0a:	outs   dx,DWORD PTR ds:[esi]
  411f0b:	push   esi
  411f0c:	jmp    0x411ee0
  411f0e:	or     bl,bl
  411f10:	mov    edi,DWORD PTR [ebx-0x5c]
  411f13:	nop
  411f14:	addr16 push ds
  411f16:	outs   dx,DWORD PTR fs:[esi]
  411f18:	sub    al,0x73
  411f1a:	aas    
  411f1b:	xlat   BYTE PTR ds:[ebx]
  411f1c:	ficom  DWORD PTR [ebx]
  411f1e:	dec    eax
  411f1f:	pop    ebp
  411f20:	add    eax,0x97947046
  411f25:	or     eax,0x300ea24b
  411f2a:	into   
  411f2b:	or     eax,0x40081619
  411f30:	xor    bl,ah
  411f32:	jge    0x411f98
  411f34:	sub    BYTE PTR [edx-0x594e06ad],dl
  411f3a:	adc    eax,0x7e635fa0
  411f3f:	add    bl,BYTE PTR [ebp-0x58e32ed1]
  411f45:	cs lock ins BYTE PTR es:[edi],dx
  411f48:	jns    0x411ee1
  411f4a:	pop    edx
  411f4b:	popf   
  411f4c:	mul    DWORD PTR [edx-0xf7b88d2]
  411f52:	cmp    ch,BYTE PTR [edx+0x3f]
  411f55:	fstp   DWORD PTR [eax+ecx*4]
  411f58:	lds    ecx,FWORD PTR [edi+0x11]
  411f5b:	adc    eax,0x74f73c30
  411f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f61:	dec    ecx
  411f62:	add    esp,esp
  411f64:	mov    ds:0xe6576693,al
  411f69:	push   esp
  411f6a:	dec    eax
  411f6b:	mov    ah,dl
  411f6d:	test   BYTE PTR [esp+eax*8],dl
  411f70:	jecxz  0x411f68
  411f72:	(bad)  [ebx+0x831ed94]
  411f78:	mov    WORD PTR [eax-0x7a],?
  411f7b:	sbb    eax,0xc2468409
  411f80:	pop    eax
  411f81:	adc    eax,DWORD PTR [ebp+esi*1+0x3c]
  411f85:	aad    0x6f
  411f87:	pop    edi
  411f88:	test   BYTE PTR [ecx-0x10],ah
  411f8b:	cmp    BYTE PTR [ecx],al
  411f8d:	adc    DWORD PTR [ebx+edi*8],0x47
  411f91:	inc    edi
  411f92:	rol    BYTE PTR [edx+0x14],cl
  411f95:	hlt    
  411f96:	xchg   BYTE PTR [eax],dh
  411f98:	sub    al,0x10
  411f9a:	fisttp WORD PTR [ecx]
  411f9c:	call   FWORD PTR [ebp+0x48]
  411f9f:	jnp    0x411fd6
  411fa1:	das    
  411fa2:	mov    DWORD PTR [ebx],ebx
  411fa4:	sbb    ch,BYTE PTR [esi+0x67]
  411fa7:	into   
  411fa8:	sub    BYTE PTR [edx],ch
  411faa:	sub    edx,DWORD PTR [ebx+0x56acdd8c]
  411fb0:	and    eax,esp
  411fb2:	iret   
  411fb3:	(bad)  
  411fb4:	mul    BYTE PTR [ecx]
  411fb6:	shl    DWORD PTR [edx],cl
  411fb8:	std    
  411fb9:	inc    edi
  411fba:	les    ebp,FWORD PTR [eax+0x36d515ba]
  411fc0:	sbb    esi,edx
  411fc2:	daa    
  411fc3:	mov    ah,0x6
  411fc5:	je     0x412040
  411fc7:	push   ds
  411fc8:	adc    ebp,DWORD PTR [eax]
  411fca:	nop
  411fcb:	outs   dx,BYTE PTR ds:[esi]
  411fcc:	aas    
  411fcd:	(bad)
  411fd1:	(bad)  
  411fd2:	repz out dx,eax
  411fd4:	push   0xb215ff1d
  411fd9:	das    
  411fda:	ja     0x411fe4
  411fdc:	xor    BYTE PTR [ecx-0x22],bl
  411fdf:	ins    BYTE PTR es:[edi],dx
  411fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe1:	jne    0x411fed
  411fe3:	mov    ds:0xfc866e63,eax
  411fe8:	(bad)
  411feb:	sub    edx,DWORD PTR [edi+0x6821eb8]
  411ff1:	push   cs
  411ff2:	neg    BYTE PTR [esi-0x3ff10761]
  411ff8:	push   0xffffffc3
  411ffa:	in     al,dx
  411ffb:	stos   DWORD PTR es:[edi],eax
  411ffc:	ret    0x87b3
  411fff:	jns    0x411fec
  412001:	mov    cl,0xca
  412003:	aad    0xf1
  412005:	jo     0x412050
  412007:	lock aaa 
  412009:	ins    DWORD PTR es:[di],dx
  41200b:	das    
  41200c:	adc    BYTE PTR [ecx+0x12],ah
  41200f:	into   
  412010:	sbb    esp,DWORD PTR [ebp-0x57cb64a]
  412016:	pop    esp
  412017:	jns    0x412024
  412019:	add    DWORD PTR [eax+eiz*4-0x4e95038f],ecx
  412020:	push   ds
  412021:	xchg   BYTE PTR [ebx+0x47f2c113],cl
  412027:	mov    ebp,0xb8ff48f9
  41202c:	mov    eax,0x84ed331c
  412031:	es int 0x4e
  412034:	fisttp WORD PTR [ebp+eiz*8-0x39fbd2b2]
  41203b:	pop    esp
  41203c:	bound  eax,QWORD PTR [ecx+0x43]
  41203f:	repnz out 0x12,eax
  412042:	sbb    dh,bl
  412044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412045:	sub    bl,BYTE PTR [esp+ebx*8]
  412048:	stos   DWORD PTR es:[edi],eax
  412049:	fs push esp
  41204b:	mov    bh,0x76
  41204d:	jmp    0x411ff9
  41204f:	jl     0x411fd7
  412051:	(bad)  
  412052:	jecxz  0x4120b2
  412054:	xchg   ebp,eax
  412055:	aas    
  412056:	in     eax,0xdf
  412058:	inc    ebp
  412059:	mov    bh,0x4c
  41205b:	sub    DWORD PTR [esi],esp
  41205d:	cmc    
  41205e:	add    ah,BYTE PTR [edx-0x7f0b429d]
  412064:	stc    
  412065:	mov    ecx,0xd6b93fba
  41206a:	retf   0xb35a
  41206d:	das    
  41206e:	inc    ecx
  41206f:	add    al,0x79
  412071:	or     al,0xce
  412073:	xchg   ebx,eax
  412074:	mov    ch,0xff
  412076:	mov    eax,0x540749d4
  41207b:	pop    ebx
  41207c:	and    eax,0x6843be94
  412081:	inc    edx
  412082:	and    eax,0xb82f1036
  412087:	(bad)  
  412088:	mov    edx,0x9c0162bb
  41208d:	loop   0x4120ba
  41208f:	pop    ebp
  412090:	mov    DWORD PTR [edi+0x65e207f4],ebp
  412096:	pop    edx
  412097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412098:	cmp    esi,0x882d5339
  41209e:	gs loope 0x412045
  4120a1:	(bad)
  4120a5:	xor    eax,0xb0d0666e
  4120aa:	loope  0x4120fb
  4120ac:	das    
  4120ad:	push   edi
  4120ae:	mov    bl,0x1e
  4120b0:	mov    bl,0xd3
  4120b2:	push   0x7c
  4120b4:	xchg   ecx,eax
  4120b5:	sti    
  4120b6:	adc    edi,DWORD PTR [edx]
  4120b8:	fs push cs
  4120ba:	bound  esi,QWORD PTR [ebp+0x3c]
  4120bd:	fs jmp 0x7eb3a321
  4120c3:	dec    edx
  4120c4:	xchg   esp,eax
  4120c5:	jo     0x41205c
  4120c7:	fild   DWORD PTR [ecx+0xf5b0af8]
  4120cd:	dec    ecx
  4120ce:	push   ecx
  4120cf:	test   al,0xbf
  4120d1:	push   0x5ad47cb3
  4120d6:	stos   DWORD PTR es:[edi],eax
  4120d7:	mov    dh,0x24
  4120d9:	rcl    bh,1
  4120db:	lock or eax,DWORD PTR ds:0xb434cf8a
  4120e2:	mov    al,ds:0x4555367d
  4120e7:	das    
  4120e8:	test   BYTE PTR [edx+ebp*1],dh
  4120eb:	fist   DWORD PTR [edx]
  4120ed:	jno    0x412070
  4120ef:	int    0x32
  4120f1:	push   0x3bb9b53f
  4120f6:	cmp    al,0xae
  4120f8:	out    dx,al
  4120f9:	outs   dx,DWORD PTR ds:[esi]
  4120fa:	xchg   edi,edx
  4120fc:	xor    dl,BYTE PTR [eax]
  4120fe:	ins    DWORD PTR es:[edi],dx
  4120ff:	cmp    ch,al
  412101:	fisttp DWORD PTR [esi-0x6f]
  412104:	inc    ecx
  412105:	push   ds
  412106:	push   DWORD PTR [edx]
  412108:	inc    ebx
  412109:	mov    bh,0xf
  41210b:	cwde   
  41210c:	mov    ebp,0xfb5ecda1
  412111:	in     al,dx
  412112:	push   ecx
  412113:	fst    QWORD PTR [ebx-0x26]
  412116:	dec    edi
  412117:	mov    ah,0xbc
  412119:	test   BYTE PTR [eax-0x40ced836],bl
  41211f:	in     eax,0x5b
  412121:	fidivr DWORD PTR [eax+edx*1+0x425cab35]
  412128:	and    ebp,DWORD PTR [edx]
  41212a:	jae    0x412102
  41212c:	mov    WORD PTR [esi-0x18],?
  41212f:	mov    eax,0x990cf3cd
  412134:	daa    
  412135:	or     eax,DWORD PTR [ebp-0x69]
  412138:	fldcw  WORD PTR [ebx-0x19]
  41213b:	iret   
  41213c:	add    DWORD PTR [ebx],ebx
  41213e:	push   cs
  41213f:	push   es
  412140:	pop    ss
  412141:	out    dx,eax
  412142:	mov    edi,edx
  412144:	xchg   edx,eax
  412145:	repnz mov dh,0xa9
  412148:	sbb    eax,0x816b22a4
  41214d:	xchg   esi,eax
  41214e:	mov    esi,ebx
  412150:	sahf   
  412151:	addr16 lock xor esp,eax
  412155:	jmp    0x41217b
  412157:	or     BYTE PTR [eax+0x7a],0x2e
  41215b:	retf   
  41215c:	add    bl,BYTE PTR [ebx]
  41215e:	sahf   
  41215f:	sbb    bl,ch
  412161:	jnp    0x4121bc
  412163:	je     0x412139
  412165:	xor    eax,0xb767a6a5
  41216a:	lock dec ecx
  41216c:	mov    ds:0xe3ccae72,eax
  412171:	xchg   ecx,eax
  412172:	sar    DWORD PTR [eax],1
  412174:	test   DWORD PTR [edx+ebx*8-0x42a7bf34],0xf2137c0b
  41217f:	out    0x8f,al
  412181:	cmp    DWORD PTR [esi],esp
  412183:	cmp    DWORD PTR [edi+0x28],0xe4713914
  41218a:	ins    DWORD PTR es:[edi],dx
  41218b:	fcom   DWORD PTR [edx+0x52]
  41218e:	stos   BYTE PTR es:[edi],al
  41218f:	call   edi
  412191:	pop    esp
  412192:	loope  0x41220d
  412194:	fwait
  412195:	cmp    esp,ecx
  412197:	stos   BYTE PTR es:[edi],al
  412198:	sbb    ebx,DWORD PTR [edi-0x58]
  41219b:	cmp    DWORD PTR [edx-0x3b],0x44
  41219f:	and    DWORD PTR [ebp+esi*4-0x6b],ebx
  4121a3:	jmp    0x2adf:0xbbb5cd22
  4121aa:	pop    es
  4121ab:	dec    edi
  4121ac:	jnp    0x412186
  4121ae:	mov    esi,0xed7306e5
  4121b3:	mov    bl,0xd0
  4121b5:	pop    ebx
  4121b6:	imul   eax,edi,0xffffffb9
  4121b9:	nop
  4121ba:	ss jg  0x412155
  4121bd:	stc    
  4121be:	adc    dh,BYTE PTR [ebx]
  4121c0:	sbb    esp,ebx
  4121c2:	push   ss
  4121c3:	mov    ah,0xd5
  4121c5:	test   BYTE PTR [esi+0x9f93765],cl
  4121cb:	xor    BYTE PTR [esp+edx*4],0xd8
  4121cf:	sbb    ch,ah
  4121d1:	sub    BYTE PTR [ebp+0x1a],al
  4121d4:	pop    esi
  4121d5:	dec    esi
  4121d6:	xchg   edx,eax
  4121d7:	out    0xa3,al
  4121d9:	(bad)  
  4121db:	jge    0x4121be
  4121dd:	scas   eax,DWORD PTR es:[edi]
  4121de:	pop    esp
  4121df:	fcom   DWORD PTR ds:0xb7c547ac
  4121e5:	retf   0xa211
  4121e8:	add    eax,0xb80e0ab0
  4121ed:	jns    0x41222f
  4121ef:	cmp    esi,ecx
  4121f1:	leave  
  4121f2:	xchg   edi,eax
  4121f3:	jmp    0x3b2e:0xb8c4c3a0
  4121fa:	or     al,0x3f
  4121fc:	jne    0x412277
  4121fe:	popf   
  4121ff:	clc    
  412200:	xchg   esp,eax
  412201:	and    eax,0x4391b1e2
  412206:	gs jno 0x412250
  412209:	inc    ecx
  41220a:	xor    eax,0xd1de00d4
  41220f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412210:	dec    edi
  412211:	(bad)  
  412212:	fcomip st,st(5)
  412214:	fdiv   QWORD PTR [edx]
  412216:	out    0x5a,al
  412218:	and    edx,DWORD PTR [ebx+ebx*1]
  41221b:	or     dl,BYTE PTR [edi+0x10]
  41221e:	mov    BYTE PTR [ecx+0x23],ah
  412221:	or     eax,0xc74d11b
  412226:	xor    bh,BYTE PTR [eax-0x58]
  412229:	xlat   BYTE PTR ds:[ebx]
  41222a:	fs push ecx
  41222c:	jp     0x4121f3
  41222e:	fwait
  41222f:	push   ecx
  412230:	inc    esp
  412231:	mov    ebx,0xf5e0837a
  412236:	in     eax,0x5
  412238:	call   0x574a346b
  41223d:	or     dh,bh
  41223f:	shl    DWORD PTR [ebx-0x53],0xc5
  412243:	(bad)  
  412244:	enter  0x6de3,0x5a
  412248:	push   edx
  412249:	cmp    eax,0x14253c0a
  41224e:	lds    eax,FWORD PTR [esp+ebx*2]
  412251:	pusha  
  412252:	pop    es
  412253:	inc    edx
  412254:	out    dx,eax
  412255:	or     al,0xfe
  412257:	popf   
  412258:	ror    DWORD PTR [eax+0x6a1bfa7a],cl
  41225e:	push   ds
  41225f:	dec    eax
  412260:	fist   DWORD PTR [ebp-0x9]
  412263:	enter  0x3e73,0x47
  412267:	test   ebx,ebx
  412269:	cmp    DWORD PTR [ebp*8-0x2a74fd95],esi
  412270:	ss xchg edi,eax
  412272:	push   ss
  412273:	aaa    
  412274:	adc    bh,BYTE PTR [ebp*4-0xf8823c8]
  41227b:	in     eax,0x10
  41227d:	push   cs
  41227e:	push   edi
  41227f:	sti    
  412280:	stos   BYTE PTR es:[edi],al
  412281:	mov    dh,0xba
  412283:	outs   dx,DWORD PTR ds:[esi]
  412284:	pop    edi
  412285:	jns    0x412235
  412287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412288:	inc    ebp
  412289:	hlt    
  41228a:	fidiv  DWORD PTR [ebx-0x55]
  41228d:	jo     0x41221a
  41228f:	and    eax,0xbeb43ac5
  412294:	push   edx
  412295:	xchg   edx,eax
  412296:	punpcklbw mm6,mm1
  412299:	fnstcw WORD PTR [ebx]
  41229b:	jo     0x412244
  41229d:	add    eax,0xc635b108
  4122a2:	mov    ebx,0x86b71e02
  4122a7:	out    0x30,al
  4122a9:	sbb    eax,0x6d2b6cdc
  4122ae:	xchg   edx,eax
  4122af:	dec    edi
  4122b0:	lods   eax,DWORD PTR ds:[esi]
  4122b1:	int    0x26
  4122b3:	pusha  
  4122b4:	int3   
  4122b5:	dec    esi
  4122b6:	out    dx,al
  4122b7:	mov    bh,0x82
  4122b9:	xor    eax,0x5cf1098
  4122be:	(bad)  
  4122bf:	outs   dx,DWORD PTR ds:[esi]
  4122c0:	mov    dl,0x9d
  4122c2:	push   edx
  4122c3:	aas    
  4122c4:	aad    0x58
  4122c6:	retf   
  4122c7:	out    dx,eax
  4122c8:	inc    edx
  4122c9:	test   al,0x65
  4122cb:	and    DWORD PTR [ecx-0x696f7721],eax
  4122d1:	jmp    0xa1a4406e
  4122d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d7:	rcr    BYTE PTR [edx-0x5e],cl
  4122da:	sbb    ebx,DWORD PTR [ebx-0x2d0651b4]
  4122e0:	and    BYTE PTR ss:[esi+0x6b54d8a9],bh
  4122e7:	sahf   
  4122e8:	fdiv   st,st(2)
  4122ea:	pop    ds
  4122eb:	test   al,0x9
  4122ed:	sbb    BYTE PTR [edx+0x7d979eb3],al
  4122f3:	cmp    edi,DWORD PTR [ebx-0x8dc6620]
  4122f9:	test   eax,0x106d61e2
  4122fe:	mov    esi,0x9369429a
  412303:	les    edi,FWORD PTR [ebp-0x2d1481d5]
  412309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41230a:	xchg   ebp,eax
  41230b:	sbb    BYTE PTR [edx],dl
  41230d:	std    
  41230e:	jecxz  0x41237b
  412310:	sbb    eax,0xd466396a
  412315:	or     eax,0xf0769ae6
  41231a:	xor    al,0x95
  41231c:	pop    eax
  41231d:	call   0x914027e7
  412322:	push   esp
  412323:	sub    al,0x63
  412325:	ins    BYTE PTR es:[edi],dx
  412326:	xchg   edx,eax
  412327:	cld    
  412328:	mov    dl,0x68
  41232a:	out    0x62,al
  41232c:	not    BYTE PTR [esi+0x354ff6eb]
  412332:	dec    esp
  412333:	jle    0x4122bf
  412335:	(bad)  
  412336:	mov    al,0xf3
  412338:	jnp    0x412331
  41233a:	mov    ebx,0x3daf8bc8
  41233f:	sub    eax,0x29b4da76
  412344:	mov    es,WORD PTR [edx-0x5ffdd878]
  41234a:	dec    esi
  41234b:	jge    0x4123ca
  41234d:	sbb    ebx,0x1
  412350:	push   ebp
  412351:	mov    bh,0xb5
  412353:	xor    eax,DWORD PTR cs:[ebx-0x639fbc53]
  41235a:	push   edx
  41235b:	pop    ss
  41235c:	adc    DWORD PTR [eax+0x2b],0xc55011c6
  412363:	adc    BYTE PTR [ebp-0x23e2dc64],ch
  412369:	fisttp QWORD PTR [eax]
  41236b:	and    eax,0xa20be84e
  412370:	mov    eax,ds:0x5ff57abf
  412375:	cld    
  412376:	push   0x4f0b308d
  41237b:	add    ecx,esp
  41237d:	adc    BYTE PTR [ebp-0x2c],al
  412380:	jl     0x4123d6
  412382:	sub    eax,0x5b577fc
  412387:	stos   DWORD PTR es:[edi],eax
  412388:	adc    BYTE PTR [edi+edi*2],bl
  41238b:	(bad)  [ebp*1-0x1ba6f383]
  412392:	stos   BYTE PTR es:[edi],al
  412393:	das    
  412394:	addr16 mov ecx,0x6b1f3c26
  41239a:	sbb    eax,0x2f75850d
  41239f:	or     dl,BYTE PTR [edx-0x13]
  4123a2:	into   
  4123a3:	push   0xffffff9b
  4123a5:	lock lods al,BYTE PTR ds:[esi]
  4123a7:	imul   edx,DWORD PTR [edx-0x6],0xffffffce
  4123ab:	js     0x412353
  4123ad:	mov    es,WORD PTR [ebp+0xb8335d9]
  4123b3:	cli    
  4123b4:	and    edi,edi
  4123b6:	jno    0x41242e
  4123b8:	xchg   edx,eax
  4123b9:	mov    ah,0x1d
  4123bb:	popa   
  4123bc:	das    
  4123bd:	popf   
  4123be:	mov    al,0x36
  4123c0:	or     ebp,0x77
  4123c3:	and    eax,0x70ca07af
  4123c8:	pop    ss
  4123c9:	unpckhps xmm1,XMMWORD PTR [edi+ebp*4+0x53]
  4123ce:	iret   
  4123cf:	pop    esi
  4123d0:	jno    0x41241e
  4123d2:	push   esp
  4123d3:	imul   esp,DWORD PTR [edi],0x1a
  4123d6:	fiadd  WORD PTR [esi+0x1c61b657]
  4123dc:	test   BYTE PTR [ecx-0x2c],0xbb
  4123e0:	sub    DWORD PTR [ebp-0x12],edi
  4123e3:	loop   0x4123ca
  4123e5:	cmp    eax,0x4125fab5
  4123ea:	js     0x412441
  4123ec:	jmp    0x4123b4
  4123ee:	push   es
  4123ef:	fmul   st,st(2)
  4123f1:	pop    es
  4123f2:	daa    
  4123f3:	into   
  4123f4:	fldenv [ebx-0x24f100a5]
  4123fa:	das    
  4123fb:	dec    esp
  4123fc:	loope  0x4123aa
  4123fe:	push   esp
  4123ff:	adc    eax,0xa0f16a7f
  412404:	inc    ebx
  412405:	cmc    
  412406:	aaa    
  412407:	sbb    ebx,DWORD PTR [ecx*1+0x5f4c8761]
  41240e:	push   edi
  41240f:	aad    0x26
  412411:	fs mov al,0xf9
  412414:	outs   dx,DWORD PTR ds:[esi]
  412415:	repnz and DWORD PTR [ebx-0x76],eax
  412419:	dec    ebp
  41241a:	stc    
  41241b:	jl     0x412460
  41241d:	lss    eax,FWORD PTR [esi+0x51687e98]
  412424:	in     eax,dx
  412425:	jge    0x4123ec
  412427:	fidivr DWORD PTR es:[edi]
  41242a:	cld    
  41242b:	and    DWORD PTR [ebp+0xaa72378],ecx
  412431:	pop    edx
  412432:	push   esp
  412433:	pop    ds
  412434:	and    edi,ecx
  412436:	pop    ebx
  412437:	and    ebp,DWORD PTR [ecx+0x5f20c4d7]
  41243d:	cmp    BYTE PTR [esi+esi*2-0x1c666cb7],0x83
  412445:	lods   al,BYTE PTR ds:[esi]
  412446:	xchg   BYTE PTR [edi],bl
  412448:	dec    ebx
  412449:	lock push ecx
  41244b:	push   ebp
  41244c:	scas   al,BYTE PTR es:[edi]
  41244d:	xchg   DWORD PTR [edx],edx
  41244f:	std    
  412450:	dec    edi
  412451:	pop    ebx
  412452:	sahf   
  412453:	xor    al,0x8b
  412455:	or     eax,0xa8786a09
  41245a:	and    cl,BYTE PTR [edx-0x30ec4b73]
  412460:	int    0x82
  412462:	les    ecx,FWORD PTR [eax+0x5cbe0b51]
  412468:	adc    al,0xae
  41246a:	push   ebx
  41246b:	pop    edi
  41246c:	(bad)  
  41246d:	mov    ecx,0xa15b123a
  412472:	jno    0x4124a9
  412474:	lahf   
  412475:	pop    ecx
  412476:	sub    al,0x31
  412478:	jecxz  0x4124eb
  41247a:	int3   
  41247b:	jmp    0x3800:0xb909ccb3
  412482:	mov    al,ds:0xb515245a
  412487:	inc    edx
  412488:	jp     0x4124a2
  41248a:	ds sahf 
  41248c:	popf   
  41248d:	add    al,0x1
  41248f:	add    BYTE PTR [edx+0x52c34c8a],ch
  412495:	add    eax,0x5e8b88b8
  41249a:	or     DWORD PTR [esi+0x55034269],ebp
  4124a0:	outs   dx,BYTE PTR ds:[esi]
  4124a1:	cwde   
  4124a2:	lahf   
  4124a3:	push   ecx
  4124a4:	jge    0x4124bb
  4124a6:	mov    bl,0x5e
  4124a8:	je     0x4124fe
  4124aa:	mov    bh,ah
  4124ac:	mov    cl,0x90
  4124ae:	mov    edx,0xaa8d43de
  4124b3:	cmp    DWORD PTR [edx],ebp
  4124b5:	and    DWORD PTR [edx],edi
  4124b7:	das    
  4124b8:	mov    ds:0x4b3709f5,eax
  4124bd:	outs   dx,DWORD PTR ds:[esi]
  4124be:	sub    BYTE PTR [ecx+0x56],dl
  4124c1:	popa   
  4124c2:	pop    ebp
  4124c3:	xor    eax,0xf1207dfd
  4124c8:	push   ds
  4124c9:	loope  0x41249a
  4124cb:	aad    0x32
  4124cd:	xor    dl,BYTE PTR [esi]
  4124cf:	jecxz  0x412545
  4124d1:	test   eax,0xeeac43f5
  4124d6:	test   al,0x52
  4124d8:	and    eax,0xd51d7132
  4124dd:	and    DWORD PTR [edx+0x140a264e],esp
  4124e3:	test   al,0x3b
  4124e5:	gs push 0x1
  4124e8:	adc    ebx,ebp
  4124ea:	or     ch,BYTE PTR [edi+0x4c95c0bf]
  4124f0:	mov    esp,0x8d4a5bf8
  4124f5:	sub    ecx,DWORD PTR [eax+0x3c]
  4124f8:	jnp    0x412488
  4124fa:	jl     0x41255f
  4124fc:	sub    edx,esi
  4124fe:	pushf  
  4124ff:	add    al,0x8f
  412501:	inc    esi
  412502:	unpckhps xmm5,XMMWORD PTR [edx+0x2d]
  412506:	and    DWORD PTR [edi],edx
  412508:	xor    eax,0x291e2621
  41250d:	mov    ds:0xa5e02bfe,eax
  412512:	or     DWORD PTR [edi],eax
  412514:	inc    eax
  412515:	adc    eax,0x9950e762
  41251a:	push   es
  41251b:	mov    bh,0x18
  41251d:	mov    esi,0xcc2a3b4a
  412522:	cdq    
  412523:	jecxz  0x4124a8
  412525:	push   esi
  412526:	dec    ecx
  412527:	add    DWORD PTR ds:0xe2fd9d99,0xc4823bf7
  412531:	add    BYTE PTR es:[ebx+0x45],bl
  412535:	fcomp  QWORD PTR [eax-0x61]
  412538:	nop
  412539:	pusha  
  41253a:	(bad)  
  41253b:	ins    DWORD PTR es:[edi],dx
  41253c:	pusha  
  41253d:	jmp    0x9c94:0xb0ab8224
  412544:	imul   ecx,DWORD PTR [edx+0x616f3088],0x15
  41254b:	mov    al,bl
  41254d:	out    dx,eax
  41254e:	cli    
  41254f:	scas   al,BYTE PTR es:[edi]
  412550:	addr16 neg ecx
  412553:	sub    BYTE PTR [ebp-0x17],bh
  412556:	xchg   edi,eax
  412557:	xor    dh,BYTE PTR [esi-0x50]
  41255a:	jb     0x4125a1
  41255c:	idiv   BYTE PTR [ecx-0x31]
  41255f:	ror    bh,cl
  412561:	jmp    0x76c7d68
  412566:	mov    WORD PTR [edx+0x1668a7aa],cs
  41256c:	dec    ebx
  41256d:	push   ebx
  41256e:	mov    ds:0xee81feac,eax
  412573:	pop    edi
  412574:	sbb    al,0x1a
  412576:	fisubr DWORD PTR [ecx-0x1c8a867c]
  41257c:	int    0x69
  41257e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41257f:	push   ds
  412580:	mov    bl,0x94
  412582:	dec    ebp
  412583:	addr16 xor eax,0xce5cb754
  412589:	mov    ds,WORD PTR [ebx]
  41258b:	cli    
  41258c:	idiv   BYTE PTR [ebp+eiz*8-0x62]
  412590:	fimul  WORD PTR [edx+0xee55346]
  412596:	adc    DWORD PTR [edx],0x2a3f1076
  41259c:	imul   ebx,ebp,0xffffffb7
  41259f:	or     al,0x6f
  4125a1:	jo     0x412536
  4125a3:	mov    ah,0xe0
  4125a5:	lahf   
  4125a6:	mov    ds:0x600ca1,al
  4125ab:	add    al,0x37
  4125ad:	fstp   TBYTE PTR [ebp+0x68]
  4125b0:	aad    0xa1
  4125b2:	aad    0x4
  4125b4:	cwde   
  4125b5:	jmp    0x82c8e51f
  4125ba:	dec    edi
  4125bb:	push   es
  4125bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125bd:	ins    DWORD PTR es:[edi],dx
  4125be:	in     eax,0xb
  4125c0:	xor    al,0xcb
  4125c2:	call   0x6702:0x7b98204b
  4125c9:	sti    
  4125ca:	(bad)  
  4125cb:	xchg   ecx,eax
  4125cc:	add    eax,0xc103d33f
  4125d1:	dec    edx
  4125d2:	dec    esi
  4125d3:	hlt    
  4125d4:	or     esi,DWORD PTR [ecx-0x3e]
  4125d7:	add    ecx,ecx
  4125d9:	sbb    BYTE PTR [ebx+ebx*1-0x2ef82b8f],bh
  4125e0:	ret    
  4125e1:	xor    eax,0x2f6beb93
  4125e6:	cmp    al,0xc1
  4125e8:	xchg   esi,eax
  4125e9:	clc    
  4125ea:	inc    esi
  4125eb:	sub    ebx,DWORD PTR [ebp+0x4a7aa4f3]
  4125f1:	sbb    edi,ecx
  4125f3:	inc    eax
  4125f4:	(bad)  
  4125f5:	jo     0x412649
  4125f7:	aas    
  4125f8:	pop    edi
  4125f9:	add    eax,0xb8c62b4b
  4125fe:	jbe    0x4125ad
  412600:	out    dx,eax
  412601:	and    esp,DWORD PTR [esp+ebp*2+0x73]
  412605:	addr16 cld 
  412607:	cs gs jge 0x4125c2
  41260b:	dec    edi
  41260c:	xchg   ebp,eax
  41260d:	loopne 0x4125c1
  41260f:	and    BYTE PTR [eax],bl
  412611:	cmp    eax,0xc3e2ade0
  412616:	add    al,0x40
  412618:	inc    ecx
  412619:	cmp    bh,BYTE PTR [ebx+0x1b]
  41261c:	inc    ebp
  41261d:	ins    DWORD PTR es:[edi],dx
  41261e:	repnz call 0x861d:0xdbb40f5f
  412626:	stc    
  412627:	dec    ecx
  412628:	pop    ss
  412629:	cdq    
  41262a:	xor    BYTE PTR [edx],bl
  41262c:	pushf  
  41262d:	or     BYTE PTR [ebp+0x1f],ah
  412630:	ret    0x153d
  412633:	repnz sub cl,BYTE PTR [ecx+0x69]
  412637:	and    eax,0xfcd8d94e
  41263c:	push   0x2039a463
  412641:	je     0x4125e3
  412643:	lods   al,BYTE PTR ds:[esi]
  412644:	scas   eax,DWORD PTR es:[edi]
  412645:	aad    0x70
  412647:	push   ds
  412648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412649:	ret    0x6d18
  41264c:	lock bound ecx,QWORD PTR [ebp-0x1e]
  412650:	and    esp,ebp
  412652:	sub    DWORD PTR [eax-0x1],edx
  412655:	add    BYTE PTR [eax+0x16fa0606],dh
  41265b:	popa   
  41265c:	xchg   BYTE PTR [ecx+0x38],ch
  41265f:	addr16 mov dl,0x93
  412662:	push   ebp
  412663:	aam    0x39
  412665:	mov    ebx,ebp
  412667:	aas    
  412668:	and    al,0x1c
  41266a:	inc    edx
  41266b:	imul   eax,DWORD PTR [ebp+0x68ac589a],0x4d
  412672:	fbld   TBYTE PTR [ebx]
  412674:	pop    edi
  412675:	inc    esi
  412676:	imul   edx,ebp,0xffffff87
  412679:	cmc    
  41267a:	sub    DWORD PTR cs:[ebx+0x37156de7],edi
  412681:	nop
  412682:	(bad)  
  412683:	ret    
  412684:	scas   al,BYTE PTR es:[edi]
  412685:	adc    BYTE PTR [eax],bl
  412687:	adc    edx,eax
  412689:	je     0x4126d1
  41268b:	lock into 
  41268d:	outs   dx,DWORD PTR ds:[esi]
  41268e:	aaa    
  41268f:	inc    edx
  412690:	and    esi,DWORD PTR [eax+0x2]
  412693:	or     al,0x52
  412695:	int    0x5e
  412697:	stc    
  412698:	pop    ebp
  412699:	and    al,0x9
  41269b:	lahf   
  41269c:	outs   dx,DWORD PTR ds:[esi]
  41269d:	dec    ecx
  41269e:	mov    ch,0x90
  4126a0:	mov    eax,0x6f381873
  4126a5:	mov    ecx,0x5bb681f1
  4126aa:	aaa    
  4126ab:	dec    esp
  4126ac:	outs   dx,BYTE PTR ds:[esi]
  4126ad:	inc    edi
  4126ae:	jecxz  0x412680
  4126b0:	push   esi
  4126b1:	pop    es
  4126b2:	sbb    BYTE PTR [ebx-0x7c],bh
  4126b5:	mov    eax,0x9b0f3346
  4126ba:	sbb    dl,BYTE PTR [ecx+0x74d87d8b]
  4126c0:	into   
  4126c1:	pop    eax
  4126c2:	jge    0x41269a
  4126c4:	loope  0x412650
  4126c6:	pop    edi
  4126c7:	cmp    BYTE PTR [edx],0x95
  4126ca:	mov    cl,0x3f
  4126cc:	inc    edi
  4126cd:	xor    cl,bh
  4126cf:	sub    al,0xc8
  4126d1:	cwde   
  4126d2:	test   BYTE PTR [edi+0x5e8901df],0x8b
  4126d9:	std    
  4126da:	(bad)  
  4126db:	(bad)  
  4126dc:	mov    dh,0xff
  4126de:	mov    esp,0xfa063b70
  4126e3:	sahf   
  4126e4:	cli    
  4126e5:	pop    ds
  4126e6:	xchg   esp,eax
  4126e7:	loopne 0x4126f8
  4126e9:	dec    ebp
  4126ea:	test   esp,eax
  4126ec:	lods   eax,DWORD PTR ds:[esi]
  4126ed:	jb     0x4126e1
  4126ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126f0:	add    edi,0x2b
  4126f3:	push   cs
  4126f4:	ja     0x41268c
  4126f6:	pusha  
  4126f7:	xor    BYTE PTR [ebp-0x29ae6443],0xc0
  4126fe:	adc    al,0x20
  412700:	iret   
  412701:	cwde   
  412702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412703:	cmp    eax,0xf1f9faf1
  412708:	jns    0x41272a
  41270a:	sbb    BYTE PTR [esi+0x59],cl
  41270d:	push   eax
  41270e:	scas   al,BYTE PTR es:[edi]
  41270f:	jb     0x412779
  412711:	mov    ds:0x9a58a00a,eax
  412716:	test   ch,al
  412718:	xchg   ebx,eax
  412719:	(bad)  
  41271a:	xor    esi,edi
  41271c:	xor    eax,0xe6da7c1a
  412721:	test   BYTE PTR [eax],cl
  412723:	(bad)  
  412724:	(bad)  
  412726:	call   0xac81:0xcba39f72
  41272d:	cdq    
  41272e:	pop    edi
  41272f:	mov    ?,WORD PTR ds:0x9593a908
  412735:	lahf   
  412736:	adc    ebp,DWORD PTR [esi]
  412738:	mov    esi,esp
  41273a:	push   esp
  41273b:	imul   esp,DWORD PTR [edi],0x7c
  41273e:	std    
  41273f:	popa   
  412740:	and    eax,0xfe11faa9
  412745:	jge    0x4126ee
  412747:	sbb    BYTE PTR [edx-0x2a4299d2],ah
  41274d:	xchg   ebx,eax
  41274e:	or     BYTE PTR [esi-0x18],0xac
  412752:	inc    edi
  412753:	es sbb al,0xc
  412756:	xchg   esp,eax
  412757:	adc    cl,ch
  412759:	pop    esi
  41275a:	jecxz  0x412706
  41275c:	in     al,0xe0
  41275e:	loopne 0x412773
  412760:	push   esp
  412761:	test   BYTE PTR [ebp-0x31dab14c],bh
  412767:	add    eax,0x956e599a
  41276c:	xor    DWORD PTR [ebp-0xd133bae],0xffffffb6
  412773:	outs   dx,DWORD PTR ds:[esi]
  412774:	mov    cl,0x54
  412776:	pop    edx
  412777:	aam    0x26
  412779:	cmp    ecx,ecx
  41277b:	out    0xb3,al
  41277d:	fcom   st(6)
  41277f:	jno    0x412723
  412781:	rcr    dh,1
  412783:	mov    eax,ds:0x626542ea
  412788:	leave  
  412789:	jnp    0x4127e5
  41278b:	push   eax
  41278c:	jne    0x412775
  41278e:	scas   al,BYTE PTR es:[edi]
  41278f:	cmp    ecx,DWORD PTR [esi+0x5c]
  412792:	mov    cl,0x8a
  412794:	or     bh,cl
  412796:	imul   esi,edi,0xffffffc3
  412799:	sahf   
  41279a:	push   ss
  41279b:	sub    cl,bh
  41279d:	enter  0xd025,0x30
  4127a1:	mov    eax,0xf2898aad
  4127a6:	ror    DWORD PTR gs:[edx-0x7e],cl
  4127aa:	test   BYTE PTR [edi-0x6],al
  4127ad:	sbb    esi,ecx
  4127af:	cmp    dl,BYTE PTR [ecx-0x33f813ba]
  4127b5:	sti    
  4127b6:	pushf  
  4127b7:	mov    ch,0xc0
  4127b9:	sbb    eax,0xdfbcd04
  4127be:	cli    
  4127bf:	push   esi
  4127c0:	div    BYTE PTR [edi-0x3]
  4127c3:	sub    DWORD PTR [edx-0x50790fb5],ebp
  4127c9:	outs   dx,DWORD PTR ds:[esi]
  4127ca:	adc    BYTE PTR [edx],0xc3
  4127cd:	push   cs
  4127ce:	mov    ch,0xea
  4127d0:	inc    esp
  4127d1:	sub    DWORD PTR [ecx+eiz*1-0x35],eax
  4127d5:	or     dh,BYTE PTR [ebp+0x3e0ab5a0]
  4127db:	loopne 0x4127bd
  4127dd:	mov    ah,0xc2
  4127df:	sbb    ecx,DWORD PTR [ebx+0x48ac5e24]
  4127e5:	inc    edi
  4127e6:	adc    eax,0xdae81d07
  4127eb:	push   ebx
  4127ec:	cdq    
  4127ed:	push   0x1d
  4127ef:	cs jg  0x412860
  4127f2:	fist   WORD PTR [eax]
  4127f4:	fisub  WORD PTR [esi-0x7acf4509]
  4127fa:	out    dx,al
  4127fb:	pop    edx
  4127fc:	fld    QWORD PTR [ebx+0x7]
  4127ff:	jmp    0x4fda14b4
  412804:	pusha  
  412805:	sbb    bh,BYTE PTR [edi+0x7e]
  412808:	jp     0x41283a
  41280a:	ror    BYTE PTR [edx+0x42],cl
  41280d:	lods   eax,DWORD PTR ds:[esi]
  41280e:	js     0x412805
  412810:	aam    0x22
  412812:	scas   al,BYTE PTR es:[edi]
  412813:	lahf   
  412814:	lsl    ecx,WORD PTR [esi-0x7993557a]
  41281b:	jmp    0xbdba:0xbc735e9d
  412822:	pop    edx
  412823:	sub    eax,0xc6aece28
  412828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412829:	xchg   BYTE PTR [ecx],cl
  41282b:	std    
  41282c:	outs   dx,DWORD PTR ds:[esi]
  41282d:	cmp    dl,BYTE PTR [edi]
  41282f:	in     al,0x30
  412831:	ds push 0xa9238d3b
  412837:	adc    eax,0x39efad9d
  41283c:	mov    eax,ds:0xea645a5c
  412841:	or     eax,0xd868d4cd
  412846:	sbb    BYTE PTR [edi+0x6606b55b],0x5
  41284d:	push   esp
  41284e:	mov    WORD PTR [esp+ebp*1-0x38],?
  412852:	adc    ebx,edx
  412854:	lods   eax,DWORD PTR ds:[esi]
  412855:	xor    eax,0x3f218c17
  41285a:	rcl    BYTE PTR [edi],1
  41285c:	fs mov edi,0xd5e39455
  412862:	je     0x412881
  412864:	and    ecx,0x22
  412867:	les    ecx,FWORD PTR [edx]
  412869:	sub    al,cl
  41286b:	aas    
  41286c:	adc    DWORD PTR [edx+0x1fee3000],esi
  412872:	inc    esp
  412873:	fsub   st,st(1)
  412875:	mov    ebp,0xe0a0d716
  41287a:	jns    0x412867
  41287c:	adc    BYTE PTR [ecx],ch
  41287e:	lahf   
  41287f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412880:	jbe    0x41288b
  412882:	and    DWORD PTR [edx+0x6b9d58dd],ecx
  412888:	fldcw  WORD PTR [ecx+0x3f]
  41288b:	in     eax,0x8a
  41288d:	lods   al,BYTE PTR ds:[esi]
  41288e:	into   
  41288f:	xchg   cl,ch
  412891:	jnp    0x4128ee
  412893:	sahf   
  412894:	retf   
  412895:	pmaddwd mm3,QWORD PTR [edx-0x35bb13a0]
  41289c:	jo     0x4128fa
  41289e:	test   DWORD PTR [edi+0x2],edi
  4128a1:	fs inc eax
  4128a3:	in     eax,dx
  4128a4:	sahf   
  4128a5:	repz add eax,0x7f6cbaa3
  4128ab:	mov    dh,0xab
  4128ad:	icebp  
  4128ae:	ret    
  4128af:	sub    esi,eax
  4128b1:	mov    esp,0xb7088fbe
  4128b6:	lds    esi,FWORD PTR [ebx-0x7f1936e9]
  4128bc:	lods   al,BYTE PTR ds:[esi]
  4128bd:	nop
  4128be:	mov    BYTE PTR [esi+0x5b19a634],dh
  4128c4:	leave  
  4128c5:	inc    eax
  4128c6:	retf   0x5d59
  4128c9:	scas   al,BYTE PTR es:[edi]
  4128ca:	jge    0x4128f7
  4128cc:	add    eax,0x3234776
  4128d1:	jmp    0x4128c4
  4128d3:	or     al,0xd0
  4128d5:	shl    DWORD PTR [edx-0x4727c8a9],0xa7
  4128dc:	inc    edi
  4128dd:	ins    BYTE PTR es:[edi],dx
  4128de:	add    bh,BYTE PTR [edx]
  4128e0:	push   edx
  4128e1:	cwde   
  4128e2:	or     al,0x54
  4128e4:	(bad)  
  4128e5:	mov    edx,0x7fcb8557
  4128ea:	pop    ebx
  4128eb:	pusha  
  4128ec:	pop    edx
  4128ed:	sub    eax,0x523dd480
  4128f2:	cdq    
  4128f3:	lahf   
  4128f4:	cwde   
  4128f5:	rcr    DWORD PTR [ebx],0x4b
  4128f8:	jo     0x412952
  4128fa:	dec    ecx
  4128fb:	or     BYTE PTR ds:0xa7daa5b,ch
  412901:	push   edi
  412902:	mov    ah,0x13
  412904:	outs   dx,BYTE PTR ds:[esi]
  412905:	sbb    DWORD PTR [esi+0x25],edx
  412908:	loopne 0x4128d5
  41290a:	cmp    DWORD PTR [edx-0x50],0x5
  41290e:	pop    es
  41290f:	pushw  ss
  412911:	sub    DWORD PTR [ecx],edi
  412913:	xor    eax,0xd3d6dbdc
  412918:	xchg   DWORD PTR [ebp+0x26],ebx
  41291b:	retf   
  41291c:	(bad)  
  41291d:	enter  0x3e56,0xb
  412921:	xor    al,0xa2
  412923:	push   ebp
  412924:	(bad)  
  412925:	sti    
  412926:	xchg   esp,eax
  412927:	call   FWORD PTR [ebx+0x67f84df3]
  41292d:	cwde   
  41292e:	loope  0x4128ea
  412930:	xlat   BYTE PTR ds:[ebx]
  412931:	int    0x40
  412933:	in     al,0x7c
  412935:	push   esp
  412936:	stos   BYTE PTR es:[edi],al
  412937:	sbb    BYTE PTR ds:0xf1cd6d7b,bl
  41293d:	ss sahf 
  41293f:	ror    BYTE PTR [ecx+0x56],0x18
  412943:	mov    ds:0x7fe6f86d,al
  412948:	xor    eax,0xab5d3ec1
  41294d:	mov    eax,0xc4faffa4
  412952:	mov    dh,0x86
  412954:	cmp    al,0xd9
  412956:	rcr    DWORD PTR [ebx+0x19],cl
  412959:	call   0x7d596dd7
  41295e:	les    esp,FWORD PTR [edx-0x37e0980c]
  412964:	in     al,dx
  412965:	enter  0x2ee7,0xcd
  412969:	cld    
  41296a:	dec    ebp
  41296b:	test   eax,0xcee80770
  412970:	mov    ebp,0x2c664c19
  412975:	out    dx,al
  412976:	jp     0x412962
  412978:	icebp  
  412979:	jmp    0x55ea:0x1e7e0b7a
  412980:	dec    eax
  412981:	jge    0x412956
  412983:	xchg   ebx,eax
  412984:	or     ebx,esi
  412986:	adc    ebx,DWORD PTR [ebx-0x70]
  412989:	repnz cs addr16 in eax,0x5d
  41298e:	cmp    bh,BYTE PTR [edi-0x31]
  412991:	shl    BYTE PTR [eax-0x5f],1
  412994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412995:	fcom   DWORD PTR [eax+eax*2-0x3c9bbc92]
  41299c:	inc    edi
  41299d:	mov    DWORD PTR [esp+edi*2],edx
  4129a0:	jp     0x41296a
  4129a2:	shl    DWORD PTR [edi+0x15854bb1],cl
  4129a8:	loope  0x412a14
  4129aa:	stos   DWORD PTR es:[edi],eax
  4129ab:	ins    DWORD PTR es:[edi],dx
  4129ac:	ret    0x5588
  4129af:	popf   
  4129b0:	xchg   ebp,edx
  4129b2:	cmp    BYTE PTR ds:0xa491bfa7,0xd
  4129b9:	stc    
  4129ba:	mov    dl,0x1c
  4129bc:	(bad)  
  4129bd:	cld    
  4129be:	daa    
  4129bf:	mov    eax,ds:0x5c0ced11
  4129c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c5:	cmp    al,0x8d
  4129c7:	das    
  4129c8:	js     0x4129f1
  4129ca:	je     0x4129bd
  4129cc:	inc    ebp
  4129cd:	dec    esi
  4129ce:	or     BYTE PTR [edx],dl
  4129d0:	pop    eax
  4129d1:	and    ch,BYTE PTR [ecx-0xda23dc1]
  4129d7:	fcom   DWORD PTR [edx+edi*8+0x29]
  4129db:	test   BYTE PTR [edx+0x7f149a80],bh
  4129e1:	pushf  
  4129e2:	sbb    dl,BYTE PTR [edi-0x2de68286]
  4129e8:	imul   esp,DWORD PTR [esi*1+0x5154a02f],0xc4c9b540
  4129f3:	call   0xf9e0307
  4129f8:	mov    bh,0x47
  4129fa:	pop    ecx
  4129fb:	(bad)  
  4129fd:	mov    ch,0x46
  4129ff:	jg     0x412a02
  412a01:	or     DWORD PTR [edi+0x578e9423],edi
  412a07:	xor    dh,cl
  412a09:	repnz and BYTE PTR ds:0x8c318e94,0x71
  412a11:	stos   BYTE PTR es:[edi],al
  412a12:	ja     0x4129a6
  412a14:	ds or  al,0x24
  412a17:	push   edi
  412a18:	push   0xffffffc0
  412a1a:	mov    WORD PTR [esi],cs
  412a1c:	sti    
  412a1d:	pop    eax
  412a1e:	fsub   DWORD PTR [ebp-0x50]
  412a21:	mov    gs,esi
  412a23:	adc    al,0xd9
  412a25:	imul   edi,DWORD PTR [esp+eiz*2-0x488134ec],0xb1f89b1d
  412a30:	add    BYTE PTR [ecx],bl
  412a32:	jp     0x4129cd
  412a34:	sar    DWORD PTR [esi+0x5b6c7ecf],cl
  412a3a:	sub    edx,edx
  412a3c:	stos   DWORD PTR es:[di],eax
  412a3e:	and    al,0xb4
  412a40:	inc    edi
  412a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a42:	scas   eax,DWORD PTR es:[edi]
  412a43:	(bad)  
  412a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a45:	(bad)  
  412a46:	and    WORD PTR [edi-0x487683cc],ax
  412a4d:	push   edx
  412a4e:	cwde   
  412a4f:	ret    0xb234
  412a52:	pop    ss
  412a53:	push   edx
  412a54:	iret   
  412a55:	mov    dl,0x59
  412a57:	sahf   
  412a58:	aas    
  412a59:	jnp    0x412a8b
  412a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a5c:	int    0xcc
  412a5e:	je     0x412a33
  412a60:	push   ds
  412a61:	inc    edi
  412a62:	pop    ebp
  412a63:	adc    DWORD PTR [edx+0x6a854291],edi
  412a69:	hlt    
  412a6a:	loopne 0x412abe
  412a6c:	inc    edx
  412a6d:	jg     0x412a97
  412a6f:	dec    esi
  412a70:	dec    ebx
  412a71:	push   es
  412a72:	push   edx
  412a73:	push   ebp
  412a74:	enter  0xf553,0xc9
  412a78:	mov    ch,0xef
  412a7a:	adc    BYTE PTR [eax],ch
  412a7c:	inc    ebp
  412a7d:	arpl   WORD PTR [ebx-0x633d39a5],ax
  412a83:	aas    
  412a84:	fidivr DWORD PTR ds:0x79d32c0a
  412a8a:	xchg   BYTE PTR [ebp+0x77],ah
  412a8d:	mov    esp,0x4cb954dd
  412a92:	xor    DWORD PTR [ebx],ecx
  412a94:	push   0x43
  412a96:	sub    DWORD PTR [ecx-0x75a5865b],esi
  412a9c:	ins    DWORD PTR es:[edi],dx
  412a9d:	adc    edi,DWORD PTR [edx+edi*1+0x19ee3c22]
  412aa4:	add    eax,0x576ba0f6
  412aa9:	mov    ebx,0x6341079
  412aae:	and    eax,0x61d6ccac
  412ab3:	push   esi
  412ab4:	ret    
  412ab5:	and    ah,BYTE PTR [ebp+eiz*8+0x7c]
  412ab9:	imul   ebp,DWORD PTR [ebx+0x1],0xfffffffe
  412abd:	fst    st(7)
  412abf:	push   ds
  412ac0:	das    
  412ac1:	sti    
  412ac2:	mov    ebp,0x81c09626
  412ac7:	xchg   DWORD PTR [ebx-0x56db54a9],ebp
  412acd:	adc    bh,BYTE PTR [edi]
  412acf:	cmp    DWORD PTR [ecx-0x5a67b8cb],esp
  412ad5:	pop    eax
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	jmp    0x1e98dd55
  412adc:	in     eax,0xe8
  412ade:	mov    dh,0x9
  412ae0:	leave  
  412ae1:	jbe    0x412b3e
  412ae3:	adc    edx,DWORD PTR [ebp+0x760dab32]
  412ae9:	xor    eax,0xf6a12f07
  412aee:	adc    DWORD PTR [esp+edi*4-0x30],ebx
  412af2:	retf   
  412af3:	xchg   ebp,eax
  412af4:	mov    bh,0xdf
  412af6:	call   0x75f2:0x821e2f15
  412afd:	xchg   DWORD PTR [ecx],edx
  412aff:	imul   esp,DWORD PTR [edi],0x3a
  412b02:	inc    esp
  412b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b04:	or     DWORD PTR [ebp+0x61eb3f7e],ecx
  412b0a:	xor    eax,0xe1293abf
  412b0f:	fld    TBYTE PTR [ebx]
  412b11:	xchg   ebp,eax
  412b12:	icebp  
  412b13:	add    al,0xf4
  412b15:	jg     0x412b54
  412b17:	adc    BYTE PTR [ecx-0x4f],dh
  412b1a:	rcl    BYTE PTR [edi+0x3],cl
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	push   ds
  412b1f:	push   ds
  412b20:	lods   eax,DWORD PTR ds:[esi]
  412b21:	jo     0x412b29
  412b23:	xchg   edi,eax
  412b24:	pop    ebx
  412b25:	je     0x412b1b
  412b27:	in     al,dx
  412b28:	add    al,0x7b
  412b2a:	icebp  
  412b2b:	ins    BYTE PTR es:[edi],dx
  412b2c:	inc    esp
  412b2d:	sub    ch,al
  412b2f:	push   ss
  412b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b31:	push   esp
  412b32:	pminsw mm6,QWORD PTR [edi]
  412b35:	push   ebp
  412b36:	(bad)  
  412b37:	xlat   BYTE PTR ds:[ebx]
  412b38:	xchg   DWORD PTR [ecx-0x1febcde0],edi
  412b3e:	ret    
  412b3f:	xchg   edi,eax
  412b40:	adc    eax,DWORD PTR [ecx]
  412b42:	shl    DWORD PTR [eax+edi*1-0x18],cl
  412b46:	fimul  DWORD PTR [edx+0x2]
  412b49:	into   
  412b4a:	hlt    
  412b4b:	test   al,0x9c
  412b4d:	dec    ecx
  412b4e:	(bad)  
  412b4f:	fadd   DWORD PTR [ecx+edx*2-0x23b373ca]
  412b56:	fwait
  412b57:	xchg   esi,eax
  412b58:	mov    cl,0xdc
  412b5a:	aaa    
  412b5b:	mov    ch,0x39
  412b5d:	out    dx,eax
  412b5e:	cs sti 
  412b60:	jnp    0x412bcd
  412b62:	mov    esi,0x72d71283
  412b67:	dec    edx
  412b68:	jg     0x412b18
  412b6a:	adc    eax,0x7cf6d058
  412b6f:	push   cs
  412b70:	fs (bad) 
  412b72:	sbb    al,dh
  412b74:	mov    edi,0x99e63203
  412b79:	mov    esi,0x29c3ea58
  412b7e:	ins    DWORD PTR es:[edi],dx
  412b7f:	(bad)  
  412b80:	sub    BYTE PTR [eax+0x2c],ch
  412b83:	pop    eax
  412b84:	mov    ebx,0x988b2685
  412b89:	mov    esp,edi
  412b8b:	push   ebp
  412b8c:	xor    eax,0xb487556
  412b91:	adc    eax,edx
  412b93:	aad    0x69
  412b95:	dec    esp
  412b96:	cmp    al,0xad
  412b98:	mov    ebx,0x81c08a53
  412b9d:	js     0x412b92
  412b9f:	cdq    
  412ba0:	jle    0x412c1a
  412ba2:	and    dh,BYTE PTR [edi]
  412ba4:	or     al,0x5e
  412ba6:	mov    eax,0xad6720d7
  412bab:	pop    edi
  412bac:	in     eax,dx
  412bad:	call   0x5000:0x19b5407b
  412bb4:	test   BYTE PTR [eax],cl
  412bb6:	mov    dh,0x9d
  412bb8:	fdivp  st(7),st
  412bba:	hlt    
  412bbb:	or     DWORD PTR [esi+0x3b],esp
  412bbe:	xchg   BYTE PTR [edx+0x10e57431],ch
  412bc4:	push   ss
  412bc5:	je     0x412b73
  412bc7:	aaa    
  412bc8:	jnp    0x412bcf
  412bca:	pusha  
  412bcb:	pop    esp
  412bcc:	(bad)  
  412bcd:	gs lahf 
  412bcf:	sbb    eax,0x8f9c0f96
  412bd4:	cmp    eax,0xbc9980c5
  412bd9:	cmp    BYTE PTR [ecx+0x20],dh
  412bdc:	shr    BYTE PTR [edi-0x2d8a842],cl
  412be2:	mov    ?,WORD PTR [edi+0x35]
  412be5:	das    
  412be6:	sbb    al,0x4a
  412be8:	frstor [eax+0x1b]
  412beb:	adc    al,0xa1
  412bed:	in     al,0x47
  412bef:	or     BYTE PTR [edi],bh
  412bf1:	(bad)
  412bf5:	ficomp DWORD PTR [ecx]
  412bf7:	xor    DWORD PTR ds:0xcdd2e3de,edx
  412bfd:	inc    eax
  412bfe:	and    DWORD PTR [eax+eax*2-0x759db47b],0xffffff8f
  412c06:	iret   
  412c07:	pop    edi
  412c08:	push   ebp
  412c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c0a:	les    esp,FWORD PTR [ebx+0x4]
  412c0d:	aad    0xa0
  412c0f:	hlt    
  412c10:	cdq    
  412c11:	mov    ch,0x7e
  412c13:	jno    0x412c8b
  412c15:	mov    ?,WORD PTR [edx+0x54]
  412c18:	adc    ah,cl
  412c1a:	fdivrp st(4),st
  412c1c:	in     al,dx
  412c1d:	inc    esp
  412c1e:	push   0x2b
  412c20:	jg     0x412bf2
  412c22:	cwde   
  412c23:	inc    edx
  412c24:	jmp    0x90e0c65a
  412c29:	pushf  
  412c2a:	dec    DWORD PTR [ebp+0x4859e79f]
  412c30:	jecxz  0x412bda
  412c32:	ja     0x412c23
  412c34:	and    BYTE PTR [edx+esi*2],bl
  412c37:	and    bl,cl
  412c39:	push   edi
  412c3a:	pop    esp
  412c3b:	pop    esp
  412c3c:	jle    0x412c15
  412c3e:	js     0x412c97
  412c40:	dec    edx
  412c41:	push   esi
  412c42:	or     eax,0xcd50847d
  412c47:	std    
  412c48:	push   ds
  412c49:	cli    
  412c4a:	(bad)
  412c4f:	add    BYTE PTR [ecx],dl
  412c51:	arpl   WORD PTR [ecx-0x2d6f04c9],bp
  412c57:	and    al,0x46
  412c59:	cmp    BYTE PTR [eax],0x4e
  412c5c:	rcl    DWORD PTR [esi],1
  412c5e:	ror    BYTE PTR [ecx+0x6b],1
  412c61:	adc    al,0x26
  412c63:	add    bl,0x87
  412c66:	clc    
  412c67:	cwde   
  412c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c69:	es dec edi
  412c6b:	cwde   
  412c6c:	adc    al,BYTE PTR [esi]
  412c6e:	into   
  412c6f:	xchg   edx,eax
  412c70:	and    DWORD PTR [edx-0x74],esp
  412c73:	push   0xb254763
  412c78:	call   0x494042c1
  412c7d:	xchg   DWORD PTR [edx],eax
  412c7f:	(bad)  
  412c80:	xor    dl,BYTE PTR [esi-0x72c959b3]
  412c86:	jecxz  0x412caa
  412c88:	or     DWORD PTR [edx+0x47035466],0x40
  412c8f:	and    dh,0x8b
  412c92:	xlat   BYTE PTR ds:[ebx]
  412c93:	(bad)  
  412c94:	adc    DWORD PTR [esi],edx
  412c96:	and    bl,BYTE PTR [ebp-0x57dfa2c5]
  412c9c:	mov    ds:0x1797745d,eax
  412ca1:	jmp    0xa3d7:0xa86fc715
  412ca8:	retf   0x9341
  412cab:	or     al,0xbe
  412cad:	lods   eax,DWORD PTR ds:[esi]
  412cae:	(bad)  
  412caf:	sbb    eax,0x1248b2b
  412cb4:	outs   dx,BYTE PTR es:[esi]
  412cb6:	or     DWORD PTR [eax-0x47],ecx
  412cb9:	mov    dh,0x62
  412cbb:	in     al,dx
  412cbc:	int    0xdb
  412cbe:	pop    es
  412cbf:	pop    ecx
  412cc0:	jns    0x412ce6
  412cc2:	es mov ch,0x6d
  412cc5:	pusha  
  412cc6:	loop   0x412c5a
  412cc8:	mov    ds:0x402d04e7,eax
  412ccd:	in     eax,0x7a
  412ccf:	dec    esi
  412cd0:	push   edi
  412cd1:	mov    cl,0x95
  412cd3:	inc    esi
  412cd4:	(bad)  
  412cd5:	mov    ebp,0x18675119
  412cda:	jl     0x412d53
  412cdc:	icebp  
  412cdd:	aam    0xe5
  412cdf:	(bad)  
  412ce0:	fidiv  DWORD PTR ds:0x9142dce5
  412ce6:	sahf   
  412ce7:	test   DWORD PTR [edx],0x6815638b
  412ced:	mov    ebx,0x6c4f2efa
  412cf2:	in     eax,dx
  412cf3:	cli    
  412cf4:	cmp    BYTE PTR [edx-0x18],dh
  412cf7:	retf   
  412cf8:	jo     0x412ca0
  412cfa:	pop    esi
  412cfb:	jp     0x412cb2
  412cfd:	push   edi
  412cfe:	jmp    0x80c8:0xd857c360
  412d05:	(bad)  
  412d06:	xchg   ebp,eax
  412d07:	out    0x9e,eax
  412d09:	fwait
  412d0a:	mov    DWORD PTR [esi],ebx
  412d0c:	leave  
  412d0d:	fisubr WORD PTR [esi]
  412d0f:	jmp    DWORD PTR [edx]
  412d11:	(bad)  
  412d12:	outs   dx,DWORD PTR ds:[esi]
  412d13:	or     al,0x52
  412d15:	out    dx,eax
  412d16:	jnp    0x412d66
  412d18:	mov    ecx,0x7cd58909
  412d1d:	add    dl,ah
  412d1f:	mov    ecx,0x742c527e
  412d24:	lods   al,BYTE PTR ds:[esi]
  412d25:	push   ds
  412d26:	loope  0x412cf2
  412d28:	clc    
  412d29:	mov    dh,0x35
  412d2b:	jge    0x412d1c
  412d2d:	push   esi
  412d2e:	adc    ebp,DWORD PTR [esi]
  412d30:	mov    ebx,0x85b51174
  412d35:	loopne 0x412d1d
  412d37:	mov    DWORD PTR ds:0xcab3904a,ecx
  412d3d:	ret    0x7fb3
  412d40:	or     DWORD PTR [ebx-0x7f],eax
  412d43:	cmp    esp,DWORD PTR [ebx+eax*8-0x37]
  412d47:	enter  0xa8ca,0x75
  412d4b:	mov    al,ds:0xbb0d2115
  412d50:	adc    al,dh
  412d52:	and    WORD PTR [ebx],si
  412d55:	bts    DWORD PTR [esi*1-0x4824a0ed],ecx
  412d5d:	ror    BYTE PTR [eax],0x60
  412d60:	int    0xe7
  412d62:	clc    
  412d63:	mul    esi
  412d65:	and    BYTE PTR [ecx+0x22719725],ch
  412d6b:	sti    
  412d6c:	rcl    cl,1
  412d6e:	xchg   esi,eax
  412d6f:	fwait
  412d70:	jl     0x412d44
  412d72:	add    al,0x34
  412d74:	sbb    eax,0xce1f269b
  412d79:	fdiv   QWORD PTR [esi-0x4fc5a2cd]
  412d7f:	jg     0x412deb
  412d81:	push   edi
  412d82:	xchg   ebx,eax
  412d83:	fwait
  412d84:	mov    bl,0x40
  412d86:	popf   
  412d87:	pusha  
  412d88:	mov    al,ds:0x2109c30e
  412d8d:	or     BYTE PTR [ebp+0x2c],bh
  412d90:	rcr    bl,1
  412d92:	dec    ecx
  412d93:	(bad)  [eax]
  412d95:	std    
  412d96:	pop    es
  412d97:	mov    esp,0x7abf13c8
  412d9c:	push   ds
  412d9d:	dec    eax
  412d9e:	bound  ebx,QWORD PTR [ebp-0x294145e2]
  412da4:	enter  0x1cb2,0x2c
  412da8:	out    dx,al
  412da9:	pusha  
  412daa:	or     WORD PTR [ebp+ebx*1+0x15544921],0xffe1
  412db3:	mov    edi,DWORD PTR [edi+0x33]
  412db6:	cmc    
  412db7:	sbb    BYTE PTR [eax],ch
  412db9:	int3   
  412dba:	xlat   BYTE PTR ds:[ebx]
  412dbb:	adc    ah,bl
  412dbd:	jb     0x412d8b
  412dbf:	enter  0x9ae1,0x97
  412dc3:	sbb    cl,BYTE PTR [ecx+0x9822083]
  412dc9:	mov    ch,0x92
  412dcb:	cmp    eax,ecx
  412dcd:	dec    esp
  412dce:	fisub  DWORD PTR [edi-0xf]
  412dd1:	push   cs
  412dd2:	mov    edx,0x40f3e142
  412dd7:	in     eax,dx
  412dd8:	cmp    DWORD PTR [edx],eax
  412dda:	xchg   ebx,eax
  412ddb:	es or  ebx,ebp
  412dde:	gs push ss
  412de0:	loopne 0x412dfb
  412de2:	push   es
  412de3:	xchg   ch,dh
  412de5:	xchg   ecx,eax
  412de6:	adc    DWORD PTR [edi-0x475bab93],ecx
  412dec:	(bad)  
  412ded:	sbb    ch,dh
  412def:	mov    ds:0x18c5c6e2,al
  412df4:	cs dec edi
  412df6:	es ret 
  412df8:	inc    ecx
  412df9:	dec    esp
  412dfa:	push   eax
  412dfb:	jbe    0x412e25
  412dfd:	inc    ebp
  412dfe:	dec    esi
  412dff:	mov    ds:0x1143cfad,al
  412e04:	je     0x412db0
  412e06:	sub    DWORD PTR [ecx],esp
  412e08:	fld    DWORD PTR [edx]
  412e0a:	or     BYTE PTR [edi+ebx*1-0x6d],0x5b
  412e0f:	leave  
  412e10:	inc    ebp
  412e11:	dec    ecx
  412e12:	(bad)  
  412e14:	cmp    eax,0xfd999177
  412e19:	loopne 0x412e38
  412e1b:	sbb    DWORD PTR [edi+esi*2],esp
  412e1e:	lahf   
  412e1f:	jne    0x412dc5
  412e21:	mov    edi,0xfa4dd5e7
  412e26:	dec    ebp
  412e27:	mov    al,BYTE PTR [esi+0x73]
  412e2a:	lds    edi,FWORD PTR [ebx+0x574a3410]
  412e30:	(bad)  [esi+0x1b]
  412e33:	dec    ecx
  412e34:	std    
  412e35:	cmp    cl,0xbc
  412e38:	sbb    al,0xb0
  412e3a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e3c:	aam    0x6d
  412e3e:	sbb    esp,edx
  412e40:	jbe    0x412e9a
  412e42:	mov    ds:0x2231b38a,al
  412e47:	leave  
  412e48:	add    edx,ecx
  412e4a:	test   DWORD PTR [ebp+eiz*2-0x4a],ebp
  412e4e:	ret    
  412e4f:	mov    al,ds:0x1f6bd15
  412e54:	sbb    ch,BYTE PTR [edx+eiz*1+0x7bfbd8f9]
  412e5b:	nop
  412e5c:	adc    al,0xe0
  412e5e:	fild   DWORD PTR [edx+0x4a]
  412e61:	sbb    BYTE PTR [esi],cl
  412e63:	pop    es
  412e64:	xchg   ebx,eax
  412e65:	xchg   ecx,eax
  412e66:	fist   WORD PTR [eax]
  412e68:	mov    ds,WORD PTR [esi+ebx*4+0x68]
  412e6c:	push   edx
  412e6d:	cmp    dl,ah
  412e6f:	pop    ebp
  412e70:	inc    edx
  412e71:	xor    eax,DWORD PTR [ecx]
  412e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e74:	sbb    edx,edi
  412e76:	or     esi,ebx
  412e78:	mov    WORD PTR [edi+0x6f],?
  412e7b:	or     eax,0x4bdc4519
  412e80:	test   DWORD PTR ss:[ebx],ebp
  412e83:	pop    ecx
  412e84:	pop    ss
  412e85:	leave  
  412e86:	inc    DWORD PTR [eax]
  412e88:	out    0x86,eax
  412e8a:	jmp    0x412efc
  412e8c:	jno    0x412e92
  412e8e:	dec    esp
  412e8f:	or     DWORD PTR [edx+0x22f09f38],ebp
  412e95:	inc    esi
  412e96:	seta   BYTE PTR [ebx]
  412e99:	pop    es
  412e9a:	push   ss
  412e9b:	jmp    0x412e9d
  412e9d:	xor    al,0x37
  412e9f:	jo     0x412e76
  412ea1:	mov    bl,0x9a
  412ea3:	push   ebx
  412ea4:	mov    dl,0xc2
  412ea6:	adc    ah,ch
  412ea8:	jp     0x412e56
  412eaa:	pushf  
  412eab:	sbb    al,0x58
  412ead:	(bad)  
  412eae:	fs jmp 0xe04f:0x5e62074f
  412eb6:	cmp    DWORD PTR [eax+0x42f63c24],esp
  412ebc:	imul   ebp,DWORD PTR [ecx-0x28],0x1927b488
  412ec3:	mov    eax,ds:0xe4681fd
  412ec8:	dec    ecx
  412ec9:	adc    BYTE PTR [edx+0xf45ce58],bl
  412ecf:	stos   DWORD PTR es:[edi],eax
  412ed0:	sub    esi,DWORD PTR [ecx-0x53]
  412ed3:	jne    0x412eb7
  412ed5:	sar    DWORD PTR [ecx+0x61],cl
  412ed8:	mov    eax,0x5973f114
  412edd:	pop    ebx
  412ede:	adc    esi,DWORD PTR [edx-0x36]
  412ee1:	fnsave [eax-0x752928f1]
  412ee7:	push   es
  412ee8:	sub    BYTE PTR [edi-0x78],dl
  412eeb:	pop    eax
  412eec:	mov    ah,0xb
  412eee:	fdiv   DWORD PTR [esi+0x12]
  412ef1:	xor    dl,dl
  412ef3:	ret    
  412ef4:	cdq    
  412ef5:	jmp    0x5693:0xd887d73a
  412efc:	pop    ecx
  412efd:	fucomi st,st(3)
  412eff:	pop    eax
  412f00:	dec    eax
  412f01:	nop
  412f02:	rol    BYTE PTR [eax-0x10602735],0xff
  412f09:	ins    BYTE PTR es:[edi],dx
  412f0a:	sub    ah,BYTE PTR [edx+0x55]
  412f0d:	ja     0x412f22
  412f0f:	(bad)  
  412f10:	pop    ss
  412f11:	mov    ds,WORD PTR [ebx-0x6293fe30]
  412f17:	fcomip st,st(0)
  412f19:	cmp    eax,0x85b72c27
  412f1e:	mov    fs,WORD PTR [eax-0x71]
  412f21:	dec    edx
  412f22:	add    BYTE PTR [eax-0x1],cl
  412f25:	xchg   esp,eax
  412f26:	dec    ecx
  412f27:	xchg   DWORD PTR [esi+eax*8-0x28cc3ba2],esp
  412f2e:	adc    al,0xd2
  412f30:	xor    DWORD PTR [edi-0x5791b5a9],ebp
  412f36:	mov    eax,ds:0xea6240f9
  412f3b:	das    
  412f3c:	mov    ecx,ebx
  412f3e:	les    esi,FWORD PTR [ebx-0x6d1527a4]
  412f44:	or     BYTE PTR [edi+ebp*2-0x59],ah
  412f48:	dec    eax
  412f49:	pusha  
  412f4a:	ret    
  412f4b:	sbb    edi,edi
  412f4d:	and    cl,BYTE PTR ds:0x43d3e218
  412f53:	fidiv  WORD PTR [ebx]
  412f55:	xchg   edi,eax
  412f56:	mov    al,ds:0xdff9e7cd
  412f5b:	(bad)  
  412f5c:	repnz sbb ebp,esp
  412f5f:	into   
  412f60:	inc    ebp
  412f61:	stc    
  412f62:	out    0xaf,eax
  412f64:	add    DWORD PTR [eax+0x19],0x6821ee0
  412f6b:	and    BYTE PTR [ebp-0x67daf4ff],0x44
  412f72:	nop
  412f73:	dec    ebp
  412f74:	cmp    ebp,edi
  412f76:	mov    eax,ds:0x20fad309
  412f7b:	mov    ah,0x7e
  412f7d:	bound  ebp,QWORD PTR [esi-0x3f]
  412f80:	ret    
  412f81:	dec    esi
  412f82:	mov    esi,0x8342fadf
  412f87:	inc    ecx
  412f88:	fst    DWORD PTR [edx]
  412f8a:	inc    esp
  412f8b:	and    ecx,DWORD PTR [edx]
  412f8d:	jnp    0x412f26
  412f8f:	ins    DWORD PTR es:[edi],dx
  412f90:	popw   ds
  412f92:	mov    dh,0x3
  412f94:	xor    DWORD PTR [edi-0x32],ebx
  412f97:	repnz and edx,DWORD PTR [esi-0x45928f64]
  412f9e:	sar    DWORD PTR [ebp-0x59acd2e6],1
  412fa4:	and    bh,BYTE PTR [ebx+ebp*2-0x5c0da78c]
  412fab:	jns    0x412f7d
  412fad:	sar    DWORD PTR [edx-0x792ace82],0xd4
  412fb4:	mov    ds:0x882654b5,al
  412fb9:	maxps  xmm6,XMMWORD PTR [esi+0xd3a310a]
  412fc0:	pop    ecx
  412fc1:	sbb    al,al
  412fc3:	addr16 pop esi
  412fc5:	scas   eax,DWORD PTR es:[edi]
  412fc6:	loop   0x412f74
  412fc8:	inc    esp
  412fc9:	icebp  
  412fca:	test   al,0x9e
  412fcc:	loope  0x412fc8
  412fce:	jmp    0x821f:0xe982825
  412fd5:	or     ecx,DWORD PTR [edi-0x7f642314]
  412fdb:	in     al,0xbc
  412fdd:	mov    BYTE PTR [edx-0x3a],al
  412fe0:	je     0x413041
  412fe2:	inc    esp
  412fe3:	addr16 pusha 
  412fe5:	sbb    eax,ebp
  412fe7:	xchg   ebp,eax
  412fe8:	test   al,0xaa
  412fea:	mov    BYTE PTR [edx-0x1b7e926],0x89
  412ff1:	xor    al,0x89
  412ff3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff5:	mov    bh,0xfb
  412ff7:	ret    
  412ff8:	inc    eax
  412ff9:	fdiv   DWORD PTR ds:0x21f16825
  412fff:	pop    eax
  413000:	mov    ds:0x68c227e9,al
  413005:	and    ebp,DWORD PTR [ebx-0x70b967ea]
  41300b:	sub    BYTE PTR [esi],ch
  41300d:	mov    ebx,DWORD PTR [esi-0x58]
  413010:	inc    eax
  413011:	sti    
  413012:	mov    al,ds:0x7f1b4a4a
  413017:	outs   dx,BYTE PTR ds:[esi]
  413018:	stos   DWORD PTR es:[edi],eax
  413019:	(bad)  
  41301a:	bound  ebx,QWORD PTR [ecx+0x42852891]
  413020:	pop    esp
  413021:	adc    BYTE PTR [edx-0x2cf8ca1d],bl
  413027:	xchg   edi,eax
  413028:	mov    dh,dh
  41302a:	xor    al,BYTE PTR [edx-0x63]
  41302d:	(bad)  
  41302e:	je     0x413095
  413030:	adc    esp,esi
  413032:	enter  0xc86a,0x63
  413036:	inc    eax
  413037:	aad    0xc6
  413039:	sbb    edi,edi
  41303b:	xchg   edx,eax
  41303c:	(bad)  
  41303d:	xor    DWORD PTR [ecx+0x71],ebp
  413040:	scas   al,BYTE PTR es:[edi]
  413041:	jmp    0x744d0555
  413046:	enter  0x1233,0xa8
  41304a:	cmp    dl,bh
  41304c:	xchg   edi,eax
  41304d:	and    eax,0xdec4b900
  413052:	dec    ebp
  413053:	dec    edi
  413054:	in     eax,0x55
  413056:	ins    DWORD PTR es:[edi],dx
  413057:	pop    edi
  413058:	or     al,0xfe
  41305a:	scas   al,BYTE PTR es:[edi]
  41305b:	int    0x6e
  41305d:	sbb    al,0xce
  41305f:	enter  0x162,0x92
  413063:	jmp    0x119977f4
  413068:	xchg   ebp,ebp
  41306a:	loop   0x413094
  41306c:	dec    eax
  41306d:	push   ds
  41306e:	out    dx,al
  41306f:	mov    esp,0x16dfe599
  413074:	or     BYTE PTR ds:0x48710dbd,cl
  41307a:	in     eax,0xf5
  41307c:	mov    al,ds:0x1c82191a
  413081:	cdq    
  413082:	ror    ecx,0xa1
  413085:	out    dx,eax
  413086:	dec    esp
  413087:	ret    
  413088:	cli    
  413089:	js     0x4130fb
  41308b:	jnp    0x41304f
  41308d:	add    BYTE PTR [ebp-0x74],0x6e
  413091:	repnz mov esp,0x6d92bdfd
  413097:	push   edi
  413098:	jmp    0x427:0x3a4e2cd4
  41309f:	xor    BYTE PTR [esi+edi*2],0x66
  4130a3:	xor    al,0x55
  4130a5:	arpl   WORD PTR [edi-0x79],sp
  4130a8:	add    DWORD PTR [eax+0x7ee0d8fb],edx
  4130ae:	sbb    al,0x33
  4130b0:	mov    ebx,0x57a088e1
  4130b5:	inc    ecx
  4130b6:	jnp    0x413099
  4130b8:	or     DWORD PTR [ebx+0x5a11eb6d],eax
  4130be:	and    al,0xe3
  4130c0:	fisub  WORD PTR [esi+0x38]
  4130c3:	xchg   edx,eax
  4130c4:	mov    eax,ds:0xc94b2b3d
  4130c9:	pop    edi
  4130ca:	lock dec ebx
  4130cc:	inc    esp
  4130cd:	adc    eax,0x58188d09
  4130d2:	jle    0x41309a
  4130d4:	dec    ecx
  4130d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d6:	jge    0x4130a2
  4130d8:	stos   DWORD PTR es:[edi],eax
  4130d9:	sub    eax,0x7a44c83b
  4130de:	add    DWORD PTR [esi+0x2b025c3e],ebx
  4130e4:	inc    eax
  4130e5:	xor    BYTE PTR [ebp+0x32],0xaf
  4130e9:	mov    dl,BYTE PTR [edi+0x5]
  4130ec:	xor    al,0xaf
  4130ee:	cmp    DWORD PTR [eax],0x2cf1a424
  4130f4:	adc    bl,ah
  4130f6:	mov    dl,0xc
  4130f8:	xchg   ebp,eax
  4130f9:	and    eax,0xe5f05efc
  4130fe:	iret   
  4130ff:	retf   
  413100:	je     0x4130f7
  413102:	repz inc esi
  413104:	mov    ch,0x43
  413106:	(bad)  
  413108:	fdivr  st(3),st
  41310a:	lea    ebp,[eax+0x642f6156]
  413110:	or     eax,0x4baa0171
  413115:	cmp    BYTE PTR [edx-0x46],ah
  413118:	in     al,0x79
  41311a:	push   ecx
  41311b:	sub    bl,dh
  41311d:	dec    ecx
  41311e:	sub    eax,0xab98726b
  413123:	dec    esp
  413124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413125:	adc    eax,0xb75a583f
  41312a:	retf   0x86f8
  41312d:	adc    al,0x7c
  41312f:	jno    0x4130f5
  413131:	ss adc eax,ebp
  413134:	dec    eax
  413135:	lds    ecx,FWORD PTR [esi+0x64]
  413138:	mov    al,ds:0xb3ff517a
  41313d:	loope  0x41314e
  41313f:	or     esp,edi
  413141:	jno    0x41311c
  413143:	ror    DWORD PTR [eax+0xe7e27f6],1
  413149:	inc    edx
  41314a:	into   
  41314b:	inc    eax
  41314c:	aam    0x44
  41314e:	xchg   ecx,eax
  41314f:	scas   al,BYTE PTR es:[edi]
  413150:	stos   BYTE PTR es:[edi],al
  413151:	fs in  al,0x54
  413154:	lea    ebx,[ecx+0x2e]
  413157:	lds    esi,FWORD PTR [esi-0x6679f919]
  41315d:	push   es
  41315e:	in     eax,dx
  41315f:	pop    ebx
  413160:	ja     0x413136
  413162:	mov    esp,0xab792c0d
  413167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413168:	dec    ebx
  413169:	adc    DWORD PTR [edi],esp
  41316b:	pop    ecx
  41316c:	add    al,0xe0
  41316e:	ins    DWORD PTR es:[edi],dx
  41316f:	push   es
  413170:	and    DWORD PTR [edi],0x16925913
  413176:	jae    0x4131ae
  413178:	daa    
  413179:	pop    ebp
  41317a:	xor    DWORD PTR [eax+edx*1],ecx
  41317d:	std    
  41317e:	push   ebp
  41317f:	sub    dl,bl
  413181:	sub    edx,ebx
  413183:	inc    edx
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	sbb    esi,edx
  413187:	hlt    
  413188:	push   0xffffff93
  41318a:	inc    DWORD PTR [edi+0x6]
  41318d:	test   BYTE PTR [edx-0xb],dh
  413190:	inc    edx
  413191:	stos   DWORD PTR es:[edi],eax
  413192:	scas   eax,DWORD PTR es:[edi]
  413193:	cmp    esp,ecx
  413195:	push   edi
  413196:	xchg   edi,eax
  413197:	push   0xf78f45d1
  41319c:	(bad)  
  41319d:	cdq    
  41319e:	push   edx
  41319f:	dec    eax
  4131a0:	ins    DWORD PTR es:[edi],dx
  4131a1:	pop    ss
  4131a2:	stc    
  4131a3:	push   esp
  4131a4:	cdq    
  4131a5:	rol    BYTE PTR [ebp-0x681d5635],0x83
  4131ac:	fadd   DWORD PTR [ebx-0x12]
  4131af:	inc    ebx
  4131b0:	dec    esp
  4131b1:	cmp    eax,0xf07b15d7
  4131b6:	je     0x4131c3
  4131b8:	sub    bh,BYTE PTR [esp+eax*1-0x6a]
  4131bc:	sbb    dl,BYTE PTR [edx]
  4131be:	ficomp WORD PTR [esi+0x4]
  4131c1:	call   0x82ef:0x1bcf07c2
  4131c8:	mov    ds:0xee2155a0,eax
  4131cd:	jp     0x4131f0
  4131cf:	mov    edx,0x1d82a684
  4131d4:	bswap  ecx
  4131d6:	js     0x413165
  4131d8:	cmp    eax,0xd8e69a4e
  4131dd:	fwait
  4131de:	loopne 0x41320c
  4131e0:	pop    ebx
  4131e1:	adc    ecx,edx
  4131e3:	int    0x4d
  4131e5:	jbe    0x41316e
  4131e7:	addr16 xchg cx,si
  4131eb:	pop    edi
  4131ec:	fdivr  DWORD PTR [ebx]
  4131ee:	pop    edx
  4131ef:	xchg   esi,eax
  4131f0:	(bad)  
  4131f1:	pushf  
  4131f2:	ins    BYTE PTR es:[edi],dx
  4131f3:	jmp    0x84a:0x2fcf9680
  4131fa:	xor    al,0xfc
  4131fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131fd:	popa   
  4131fe:	or     bl,BYTE PTR [eax+0x3c]
  413201:	xor    edi,DWORD PTR [edi-0x77aeaa0d]
  413207:	sbb    BYTE PTR [eax-0x462b0136],0x68
  41320e:	adc    dl,dh
  413210:	rol    ebp,0xed
  413213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413215:	(bad)  
  413216:	pop    edi
  413217:	mov    ch,0x59
  413219:	test   BYTE PTR [edi],bh
  41321b:	push   cs
  41321c:	xchg   edx,eax
  41321d:	(bad)  [edi+0x2b075ad1]
  413223:	add    DWORD PTR ds:0xf816fb2d,edx
  413229:	int    0x28
  41322b:	sub    BYTE PTR [esi-0x69176e73],bl
  413231:	lods   al,BYTE PTR ds:[esi]
  413232:	jno    0x4131bd
  413234:	mov    eax,ds:0xc2e9671d
  413239:	xchg   ecx,eax
  41323a:	jnp    0x41328b
  41323c:	cmp    eax,0xac5a10a0
  413241:	xor    DWORD PTR [esi-0x7ad64f5e],0xd4d85065
  41324b:	sub    eax,ebp
  41324d:	sub    eax,0x2f21f2e4
  413252:	add    DWORD PTR [esi+0x1bc87b93],0x3d
  413259:	fs aas 
  41325b:	fsub   st(2),st
  41325d:	xlat   BYTE PTR ds:[ebx]
  41325e:	mov    ecx,0xfdf71173
  413263:	lock aam 0xe9
  413266:	leave  
  413267:	dec    ebx
  413268:	xor    cl,bl
  41326a:	fiadd  DWORD PTR [edx]
  41326c:	loop   0x413251
  41326e:	xor    bh,ch
  413270:	rcl    DWORD PTR [edi],0x6
  413273:	aam    0x18
  413275:	ja     0x4132d7
  413277:	jmp    0xe311:0x2f0ab5a3
  41327e:	(bad)  
  41327f:	call   FWORD PTR [edi-0x6d]
  413282:	mov    eax,0xcb2d84b3
  413287:	mov    ?,WORD PTR [eax-0x1f]
  41328a:	std    
  41328b:	mov    edi,0xf5d390c8
  413290:	sub    BYTE PTR [edx],cl
  413292:	jnp    0x413234
  413294:	mov    edi,0x6d795dba
  413299:	mov    al,ds:0x4cf3a1bf
  41329e:	leave  
  41329f:	ret    
  4132a0:	nop
  4132a1:	ret    0x5707
  4132a4:	or     edi,ecx
  4132a6:	fcmovnb st,st(4)
  4132a8:	dec    edx
  4132a9:	or     esi,DWORD PTR [esi+0x4b]
  4132ac:	cmp    BYTE PTR [edx],al
  4132ae:	push   cs
  4132af:	retf   
  4132b0:	leave  
  4132b1:	pop    ds
  4132b2:	xchg   edi,eax
  4132b3:	push   cs
  4132b4:	fadd   QWORD PTR [esi+eiz*2-0x10734233]
  4132bb:	lahf   
  4132bc:	adc    ah,dh
  4132be:	mov    ebx,0xe4570a41
  4132c3:	dec    ecx
  4132c4:	fist   DWORD PTR [ecx]
  4132c6:	dec    esp
  4132c7:	aad    0x30
  4132c9:	jecxz  0x41325b
  4132cb:	mov    dh,0x53
  4132cd:	les    eax,FWORD PTR [edi+0x68c460f0]
  4132d3:	or     DWORD PTR [ebp+0x1b],ebx
  4132d6:	adc    al,0x2
  4132d8:	fild   DWORD PTR [eax]
  4132da:	sub    eax,0xfdb05005
  4132df:	retf   0x44ce
  4132e2:	mov    bl,0x3b
  4132e4:	pop    esp
  4132e5:	inc    eax
  4132e6:	outs   dx,BYTE PTR ds:[si]
  4132e8:	add    ebp,DWORD PTR [ebx-0x70]
  4132eb:	and    al,0xf0
  4132ed:	aam    0x50
  4132ef:	shl    ebp,1
  4132f1:	add    DWORD PTR [ebp-0x47b50e65],ecx
  4132f7:	lods   al,BYTE PTR ds:[esi]
  4132f8:	inc    edx
  4132f9:	leave  
  4132fa:	das    
  4132fb:	mov    al,0x77
  4132fd:	fcomp  DWORD PTR [ecx-0x5a995bc7]
  413303:	push   ds
  413304:	mov    eax,0x1ad6be9e
  413309:	popa   
  41330a:	and    DWORD PTR [edx-0x3aefee1c],ebp
  413310:	cmp    DWORD PTR [edx],esi
  413312:	dec    ecx
  413313:	shl    BYTE PTR [edx+0x58],1
  413316:	fisttp WORD PTR [ebx-0x1e]
  413319:	inc    edi
  41331a:	aas    
  41331b:	or     bl,BYTE PTR [edi+0x7a9fc2d7]
  413321:	pop    esp
  413322:	ficom  WORD PTR [ebp-0x32cf351]
  413328:	sbb    DWORD PTR [edi+ebp*8-0x33e8d657],esp
  41332f:	repnz adc eax,DWORD PTR cs:[ecx+0x38]
  413334:	enter  0x3c1e,0x53
  413338:	test   eax,0x36419e6c
  41333d:	jb     0x413308
  41333f:	jmp    0x41337b
  413341:	or     eax,0x6a230415
  413346:	sahf   
  413347:	or     ch,ah
  413349:	adc    eax,0xb8218a04
  41334e:	xchg   BYTE PTR [edi-0x5276edc4],cl
  413354:	retf   0xda38
  413357:	xchg   ebx,eax
  413358:	mov    edx,0xe03f483e
  41335d:	sbb    bh,dh
  41335f:	mov    bl,0x2d
  413361:	inc    esp
  413362:	test   DWORD PTR [ecx],ecx
  413364:	adc    dh,BYTE PTR [ebp+0x2c]
  413367:	mov    ecx,0x897c15df
  41336c:	jmp    FWORD PTR [edx-0x94d116b]
  413372:	inc    edx
  413373:	sub    esp,0xffffffaa
  413376:	adc    BYTE PTR [edx-0x1c0fe8e6],0x6a
  41337d:	adc    ebx,edi
  41337f:	cmovp  esi,DWORD PTR es:[ebp-0x73]
  413384:	lods   al,BYTE PTR ds:[esi]
  413385:	mov    dl,0xb5
  413387:	mov    BYTE PTR fs:[ecx],bh
  41338a:	cmp    al,0x86
  41338c:	(bad)  
  41338e:	jp     0x413362
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	(bad)  
  413392:	(bad)  
  413393:	cmp    eax,0x9f875ad4
  413398:	jecxz  0x413345
  41339a:	bswap  ebp
  41339c:	mov    ch,0x93
  41339e:	hlt    
  41339f:	mov    ah,0x0
  4133a1:	push   ebx
  4133a2:	jae    0x41334d
  4133a4:	in     al,0xcb
  4133a6:	mov    edi,DWORD PTR [eax]
  4133a8:	fldenv [esi-0xaa0b573]
  4133ae:	daa    
  4133af:	or     eax,0xa73d0ffe
  4133b4:	inc    ebx
  4133b5:	into   
  4133b6:	sbb    al,0xcd
  4133b8:	aad    0xcf
  4133ba:	adc    BYTE PTR [esi-0xa],dh
  4133bd:	call   0xd4599d53
  4133c2:	push   ebx
  4133c3:	lahf   
  4133c4:	xor    BYTE PTR [edi+0x5a],al
  4133c7:	dec    ecx
  4133c8:	(bad)
  4133cc:	cmp    DWORD PTR [ecx-0x74],edx
  4133cf:	ins    DWORD PTR es:[edi],dx
  4133d0:	sbb    al,0xd6
  4133d2:	idiv   BYTE PTR [edx-0x5a4180f1]
  4133d8:	inc    edx
  4133d9:	(bad)  
  4133da:	bnd je 0x4133e3
  4133dd:	test   BYTE PTR [eax+0x4be809e4],dh
  4133e3:	rcl    BYTE PTR [edx],0x25
  4133e6:	cdq    
  4133e7:	popf   
  4133e8:	dec    ebx
  4133e9:	sbb    eax,0xbd54b14f
  4133ee:	cs sbb al,0x33
  4133f1:	into   
  4133f2:	pop    edx
  4133f3:	sub    DWORD PTR [eax],eax
  4133f5:	test   eax,0x59029a6c
  4133fa:	jbe    0x4133e6
  4133fc:	cmp    al,0xc8
  4133fe:	jns    0x413445
  413400:	ret    
  413401:	and    ch,BYTE PTR [edi+eiz*1]
  413404:	mov    eax,0x91961def
  413409:	fstp   TBYTE PTR [ebx+eax*8]
  41340c:	mov    esp,0xd5cbd883
  413411:	das    
  413412:	(bad)  
  413414:	(bad)  
  413415:	syscall 
  413417:	loopne 0x413432
  413419:	stc    
  41341a:	aam    0xb
  41341c:	hlt    
  41341d:	xor    ch,BYTE PTR [ebx+eax*8+0x24]
  413421:	ins    DWORD PTR es:[edi],dx
  413422:	inc    ecx
  413423:	dec    ebx
  413424:	jp     0x4133dd
  413426:	pusha  
  413427:	loopne 0x4133c4
  413429:	mov    dh,0x4e
  41342b:	leave  
  41342c:	pop    eax
  41342d:	dec    ecx
  41342e:	clc    
  41342f:	push   ss
  413430:	stos   DWORD PTR es:[edi],eax
  413431:	cwde   
  413432:	push   esi
  413433:	mov    ah,0x15
  413435:	das    
  413436:	mov    ebx,DWORD PTR [edx-0x55d2e6e7]
  41343c:	test   DWORD PTR [esi+0x5ce38c21],edi
  413442:	(bad)  
  413444:	sbb    ah,BYTE PTR [esi-0x5b310850]
  41344a:	mov    eax,ds:0x739c9227
  41344f:	(bad)  
  413451:	lock jle 0x413487
  413454:	sbb    DWORD PTR [esi+0x54],ebx
  413457:	repnz shl DWORD PTR [edi],1
  41345a:	(bad)  
  41345b:	cld    
  41345c:	hlt    
  41345d:	enter  0x3440,0xa5
  413461:	test   BYTE PTR [esi+0x1],bh
  413464:	xchg   esi,eax
  413465:	ds dec edx
  413467:	push   edx
  413468:	xchg   esp,eax
  413469:	sbb    dh,dh
  41346b:	clc    
  41346c:	or     BYTE PTR [edi],0x41
  41346f:	hlt    
  413470:	pop    DWORD PTR [esi+0x74]
  413473:	pusha  
  413474:	cwde   
  413475:	sbb    DWORD PTR [ebx+0x56],0xffffffe4
  413479:	ins    BYTE PTR es:[edi],dx
  41347a:	mov    al,0x87
  41347c:	xchg   edi,eax
  41347d:	xchg   esi,eax
  41347e:	(bad)
  413481:	(bad)  
  413483:	xchg   esp,eax
  413484:	push   eax
  413485:	adc    bh,BYTE PTR [esi+0x5b525e0b]
  41348b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41348c:	loopne 0x4134b9
  41348e:	pushf  
  41348f:	imul   ebp,DWORD PTR [edx],0xffffff80
  413492:	sbb    eax,0xb2cd1f31
  413497:	retf   0x9470
  41349a:	xor    eax,0xf53cedb4
  41349f:	aaa    
  4134a0:	test   DWORD PTR [edx-0x737b9718],eax
  4134a6:	or     DWORD PTR [eax+0x0],ebx
  4134a9:	daa    
  4134aa:	push   edx
  4134ab:	in     eax,dx
  4134ac:	pop    eax
  4134ad:	xchg   edx,eax
  4134ae:	mov    dh,0x5c
  4134b0:	inc    esi
  4134b1:	mov    BYTE PTR [esi],al
  4134b3:	scas   al,BYTE PTR es:[edi]
  4134b4:	loope  0x4134a1
  4134b6:	inc    esi
  4134b7:	add    eax,0x26e5ccde
  4134bc:	sbb    edi,DWORD PTR [edx]
  4134be:	push   ecx
  4134bf:	or     eax,0x393bcfe8
  4134c4:	mov    eax,ds:0xc0e40cb1
  4134c9:	inc    ebp
  4134ca:	pop    es
  4134cb:	pop    ds
  4134cc:	push   ecx
  4134cd:	jmp    0x5acb4442
  4134d2:	repz call 0xce44956e
  4134d8:	sbb    al,BYTE PTR [esi+0x2750ff19]
  4134de:	pushf  
  4134df:	inc    BYTE PTR [ebx]
  4134e1:	sbb    al,0xdc
  4134e3:	mov    eax,0x8a2a7c84
  4134e8:	and    edx,DWORD PTR [edi-0x2eb73fef]
  4134ee:	or     BYTE PTR [edx-0x3],0x9d
  4134f2:	repnz rol BYTE PTR [edx+0x1a],cl
  4134f6:	mov    al,ds:0x6d2a81ca
  4134fb:	sub    ebp,DWORD PTR [edx+0x29]
  4134fe:	and    eax,0xb5deb027
  413503:	ds out 0x40,al
  413506:	das    
  413507:	cmp    ah,dl
  413509:	xchg   esi,eax
  41350a:	jo     0x413494
  41350c:	add    bl,BYTE PTR [ebp-0x19]
  41350f:	xor    al,BYTE PTR [esi]
  413511:	sub    eax,0xdf158cef
  413516:	push   ebx
  413517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413518:	scas   eax,DWORD PTR es:[edi]
  413519:	dec    ecx
  41351a:	mov    ch,0x92
  41351c:	sub    eax,0xf06bba06
  413521:	div    eax
  413523:	fwait
  413524:	test   edi,0xe840af6d
  41352a:	sbb    ebp,DWORD PTR [eax+ebx*8+0x74]
  41352e:	retf   
  41352f:	or     DWORD PTR [edi],ecx
  413531:	push   esi
  413532:	(bad)  
  413533:	cld    
  413534:	mov    BYTE PTR [edx+0x6c],al
  413537:	pop    ecx
  413538:	xchg   esp,eax
  413539:	ret    
  41353a:	mov    ebp,0x8bf1eeb2
  41353f:	push   ecx
  413540:	jle    0x413562
  413542:	iret   
  413543:	or     bl,BYTE PTR [edx]
  413545:	jecxz  0x41354c
  413547:	sbb    edx,esi
  413549:	repnz mov WORD PTR [ecx-0x40],es
  41354d:	clc    
  41354e:	dec    eax
  41354f:	nop
  413550:	test   DWORD PTR [eax+esi*1],edx
  413553:	sahf   
  413554:	pop    ds
  413555:	pop    ds
  413556:	movq   QWORD PTR [ebp-0x1af4de40],mm1
  41355d:	fs jno 0x4134fb
  413560:	sub    BYTE PTR [edx],0xf1
  413563:	adc    al,0xd8
  413565:	jecxz  0x41351a
  413567:	addr16 int3 
  413569:	add    DWORD PTR [esi+0x8227ccc],ebp
  41356f:	mov    bh,0xa1
  413571:	das    
  413572:	sub    DWORD PTR [ecx-0x1b],esi
  413575:	outs   dx,DWORD PTR ds:[esi]
  413576:	pop    ss
  413577:	hlt    
  413578:	xor    eax,0x7e5802b6
  41357d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357e:	sar    BYTE PTR [esi-0x60],cl
  413581:	inc    esi
  413582:	dec    ebx
  413583:	enter  0x70f6,0x92
  413587:	jae    0x41353e
  413589:	inc    edx
  41358a:	cmp    eax,0x72409c94
  41358f:	(bad)  
  413590:	push   0x4edb5804
  413595:	jge    0x413547
  413597:	or     bh,cl
  413599:	cmp    DWORD PTR [ecx+0x333a445f],ebx
  41359f:	mov    ds,WORD PTR [edx+0x412b5705]
  4135a5:	cmp    BYTE PTR fs:[edx-0x1f],dh
  4135a9:	cmp    al,0x29
  4135ab:	mov    ds,WORD PTR [esi]
  4135ad:	adc    ebx,0x81b00060
  4135b3:	adc    dl,bl
  4135b5:	arpl   WORD PTR ds:0xf096c88,sp
  4135bb:	stos   DWORD PTR es:[edi],eax
  4135bc:	or     ebx,DWORD PTR [ebp+0x52]
  4135bf:	pop    edx
  4135c0:	push   esp
  4135c1:	nop
  4135c2:	call   0xa324:0x4cc9bf75
  4135c9:	loope  0x41355c
  4135cb:	add    dh,BYTE PTR [ebp*4-0x5730bb6c]
  4135d2:	jg     0x4135e8
  4135d4:	ja     0x413612
  4135d6:	fiadd  WORD PTR ds:0x480f4cf6
  4135dc:	fisub  WORD PTR es:[esi]
  4135df:	fidiv  DWORD PTR cs:[eax-0x1ce2566a]
  4135e6:	fdivr  QWORD PTR ds:0x64caca8f
  4135ec:	in     al,0xa2
  4135ee:	push   ecx
  4135ef:	jno    0x413581
  4135f1:	inc    edx
  4135f2:	push   ss
  4135f3:	js     0x41362c
  4135f5:	dec    edi
  4135f6:	popa   
  4135f7:	or     al,0x41
  4135fa:	dec    ebx
  4135fb:	add    edx,DWORD PTR [ebx]
  4135fd:	mov    ecx,0xa7d6f7fe
  413602:	inc    ecx
  413603:	not    DWORD PTR [edx+0x30]
  413606:	mov    dl,0xd7
  413608:	es sub ch,cl
  41360b:	inc    ebp
  41360c:	sti    
  41360d:	xchg   ebx,eax
  41360e:	test   DWORD PTR [ebp-0x2c],eax
  413611:	in     eax,0x5b
  413613:	mov    BYTE PTR [esi+0x474be775],dl
  413619:	add    al,0x7d
  41361b:	rcl    BYTE PTR [ecx-0x373812aa],1
  413621:	xchg   DWORD PTR [esi+0x20],ebx
  413624:	aad    0x2b
  413626:	std    
  413627:	dec    esp
  413628:	nop
  413629:	mov    esi,0x19c7cec5
  41362e:	stos   BYTE PTR es:[edi],al
  41362f:	and    eax,0x468cbe8a
  413634:	cs scas eax,DWORD PTR es:[edi]
  413636:	fisttp DWORD PTR [eax+0x37324d4b]
  41363c:	mul    BYTE PTR [ebp-0x1917e6b3]
  413642:	push   esp
  413643:	js     0x4136a1
  413645:	mov    eax,ds:0xf94fd055
  41364a:	and    eax,0xd6ab9784
  41364f:	inc    esi
  413650:	bound  ebx,QWORD PTR [ebp+0x37]
  413653:	push   ss
  413654:	push   esp
  413655:	or     al,0xfe
  413657:	cmp    ebp,DWORD PTR [edx-0x48]
  41365a:	(bad)  
  41365b:	fcom   QWORD PTR [edi+0x1b]
  41365e:	fiadd  WORD PTR cs:[esi]
  413661:	mov    esi,0x94fa980e
  413666:	mov    edi,0x9afc793e
  41366b:	int    0x8d
  41366d:	cld    
  41366e:	sbb    BYTE PTR [edi-0x76],cl
  413671:	mov    DWORD PTR [ebx-0x19],edx
  413674:	xor    dl,0x31
  413677:	push   cs
  413678:	enter  0x8d55,0x7b
  41367c:	fwait
  41367d:	xor    al,0xce
  41367f:	pop    ebp
  413680:	shr    BYTE PTR [ecx],cl
  413682:	cmp    ch,BYTE PTR [ebx]
  413684:	inc    ebx
  413685:	je     0x4136e4
  413687:	push   ds
  413688:	sahf   
  413689:	jmp    0x81d6:0xff3e42cb
  413690:	mov    al,ds:0x8e986a7c
  413695:	cmp    eax,0xcff03e68
  41369a:	mov    dh,0x3c
  41369c:	adc    eax,0xedeb4685
  4136a1:	lahf   
  4136a2:	xchg   esp,eax
  4136a3:	fcmovb st,st(0)
  4136a5:	xchg   ebp,eax
  4136a6:	leave  
  4136a7:	cmp    DWORD PTR ds:0xa3cd812b,0xebd3dfca
  4136b1:	xchg   esp,eax
  4136b2:	mov    eax,0x69fdb833
  4136b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b8:	xor    DWORD PTR [edi-0x7b9c71c7],ebx
  4136be:	pop    es
  4136bf:	test   DWORD PTR [eax-0x5a5a4459],esi
  4136c5:	aaa    
  4136c6:	sub    bh,BYTE PTR [eax+0x39]
  4136c9:	mov    DWORD PTR [eax+0x5c14b674],edi
  4136cf:	lock out 0x6e,al
  4136d2:	add    DWORD PTR [ebx],eax
  4136d4:	dec    ebx
  4136d5:	jae    0x413684
  4136d7:	call   0xca0bf04c
  4136dc:	mov    DWORD PTR [edi],eax
  4136de:	in     eax,0xba
  4136e0:	jp     0x4136ee
  4136e2:	pop    ss
  4136e3:	dec    ebp
  4136e4:	outs   dx,BYTE PTR ds:[esi]
  4136e5:	add    DWORD PTR [esp+eax*1],ebp
  4136e8:	dec    edi
  4136e9:	mov    al,0x62
  4136eb:	dec    ecx
  4136ec:	jle    0x413743
  4136ee:	sbb    BYTE PTR [esi-0x1f8a9c47],ch
  4136f4:	aaa    
  4136f5:	stc    
  4136f6:	and    bh,BYTE PTR [ebp-0x77]
  4136f9:	cdq    
  4136fa:	push   0x8034e8c2
  4136ff:	(bad)  
  413700:	xchg   esp,eax
  413701:	in     eax,dx
  413702:	inc    esi
  413703:	mov    WORD PTR [eax],?
  413705:	xchg   esp,eax
  413706:	sub    cl,dh
  413708:	adc    al,0xe1
  41370a:	dec    ecx
  41370b:	(bad)  
  41370d:	jecxz  0x413764
  41370f:	mov    bl,0xfb
  413711:	jbe    0x4136dd
  413713:	sti    
  413714:	and    DWORD PTR [ebp+0x5e],esp
  413717:	clc    
  413718:	jmp    0xa954:0x82aa4f0f
  41371f:	int3   
  413720:	into   
  413721:	(bad)  
  413722:	fcom   QWORD PTR [edx-0xd]
  413725:	xor    ecx,DWORD PTR [ebx-0x62ff98ec]
  41372b:	call   0x349c:0x78c99f3d
  413732:	push   ebx
  413733:	adc    ebx,DWORD PTR [ebp-0x79]
  413736:	xchg   edx,eax
  413737:	jne    0x41378a
  413739:	pop    es
  41373a:	pop    eax
  41373b:	add    BYTE PTR [esi-0x5d],ch
  41373e:	pop    esp
  41373f:	stc    
  413740:	jb     0x41375c
  413742:	or     eax,0x8dc36f41
  413747:	loope  0x4136ee
  413749:	fbstp  TBYTE PTR [edx+0x7f814a5e]
  41374f:	jecxz  0x41372b
  413751:	mov    dl,0x96
  413753:	adc    BYTE PTR ds:0x7114bc34,bh
  413759:	pop    edx
  41375a:	adc    ah,BYTE PTR [edx]
  41375c:	(bad)  
  41375d:	xchg   edi,eax
  41375e:	push   esp
  41375f:	pop    eax
  413760:	test   BYTE PTR [eax-0x60e52cb],cl
  413766:	call   0x410d99c5
  41376b:	test   esi,0x5c91b198
  413771:	and    al,0x2b
  413773:	scas   al,BYTE PTR es:[edi]
  413774:	mov    ecx,0x86a098d8
  413779:	aad    0xd1
  41377b:	sbb    eax,0x5fc0b3a1
  413780:	enter  0x5bd1,0x6
  413784:	js     0x4137bc
  413786:	das    
  413787:	fst    DWORD PTR [ecx-0x3a634fce]
  41378d:	icebp  
  41378e:	js     0x413743
  413790:	arpl   WORD PTR [ecx],cx
  413792:	sub    ah,bh
  413794:	mov    ?,WORD PTR [esi+0x7ac1b816]
  41379a:	sbb    ebp,DWORD PTR [edi]
  41379c:	jns    0x413743
  41379e:	sub    al,0x3d
  4137a0:	jbe    0x4137da
  4137a2:	test   BYTE PTR [esi-0x46b36ce3],al
  4137a8:	pop    es
  4137a9:	leave  
  4137aa:	test   al,0x14
  4137ac:	sbb    eax,0xbff33319
  4137b1:	add    cl,ah
  4137b3:	mov    dh,0x5c
  4137b5:	xchg   DWORD PTR [esi-0x224c032],ebx
  4137bb:	lock fld DWORD PTR [edx]
  4137be:	scas   al,BYTE PTR es:[edi]
  4137bf:	xor    eax,0xab95f504
  4137c4:	jecxz  0x41382d
  4137c6:	xchg   BYTE PTR [edi+0x15aead85],al
  4137cc:	mov    dh,0x5f
  4137ce:	scas   al,BYTE PTR es:[edi]
  4137cf:	push   ebx
  4137d0:	jmp    0x413780
  4137d2:	add    BYTE PTR [edx],0x1d
  4137d5:	sub    esp,DWORD PTR [ecx-0x62]
  4137d8:	mov    dh,al
  4137da:	addr16 pop esp
  4137dc:	push   edx
  4137dd:	and    al,0x21
  4137df:	neg    DWORD PTR [esp+eiz*4]
  4137e2:	cmp    al,0x4a
  4137e4:	mov    dl,0xa9
  4137e6:	push   edx
  4137e7:	mov    WORD PTR [ebp-0x27],?
  4137ea:	iret   
  4137eb:	and    al,0xcf
  4137ed:	(bad)  
  4137ee:	xor    BYTE PTR [ebp+eiz*1-0x5e],ch
  4137f2:	out    dx,eax
  4137f3:	add    al,0xc9
  4137f5:	(bad)
  4137f9:	adc    ebp,DWORD PTR [edx+0x1b]
  4137fc:	cld    
  4137fd:	ja     0x413866
  4137ff:	jmp    0x10ec:0xb6f750a3
  413806:	dec    ecx
  413807:	lea    ebx,[eax+0x73]
  41380a:	retf   0xa83d
  41380d:	rol    BYTE PTR [edx+0x62],cl
  413810:	test   BYTE PTR [edi+esi*2+0x24],ch
  413814:	idiv   BYTE PTR [ebp+0x28]
  413817:	dec    esp
  413818:	push   es
  413819:	and    ebx,edi
  41381b:	test   DWORD PTR [ebx],esi
  41381d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41381e:	cmp    DWORD PTR [eax-0x2b],eax
  413821:	stc    
  413822:	loop   0x4137f0
  413824:	xchg   ecx,eax
  413825:	(bad)  
  413826:	rcl    BYTE PTR ds:0xd0b34bc3,cl
  41382c:	not    BYTE PTR [edx]
  41382e:	shr    DWORD PTR [edx-0x54],cl
  413831:	jae    0x41389b
  413833:	ret    0x8bec
  413836:	or     BYTE PTR [eax-0x37],bl
  413839:	enter  0xbfd1,0xf0
  41383d:	(bad)  
  41383f:	adc    al,0x3
  413841:	je     0x413857
  413843:	xchg   ebp,eax
  413844:	ds jg  0x413877
  413847:	js     0x41389e
  413849:	lods   al,BYTE PTR ds:[esi]
  41384a:	jne    0x4138ca
  41384c:	jns    0x413855
  41384e:	lods   eax,DWORD PTR ds:[esi]
  41384f:	mov    ds:0x2cee96b6,eax
  413854:	ds mov fs,esi
  413857:	jns    0x41384c
  413859:	sbb    al,BYTE PTR [ecx+0x44ecd57c]
  41385f:	inc    esi
  413860:	nop
  413861:	cmp    BYTE PTR fs:[esi-0x78],dl
  413865:	imul   ebx,DWORD PTR [eax-0x53c40701],0x77
  41386c:	mov    edi,0xc81c4c5b
  413871:	stos   DWORD PTR es:[edi],eax
  413872:	push   ebx
  413873:	add    BYTE PTR [eax],cl
  413875:	in     al,0x56
  413877:	jp     0x4138f2
  413879:	fnstenv [esi-0x26]
  41387c:	cdq    
  41387d:	pop    eax
  41387e:	cmp    eax,0x634a91d6
  413883:	test   DWORD PTR [eax-0x6a16f6d2],esp
  413889:	mov    ah,0xb6
  41388b:	sbb    BYTE PTR [ecx+0x27da2c68],dh
  413891:	mov    gs,WORD PTR [edx-0x446676fb]
  413897:	lods   al,BYTE PTR ds:[esi]
  413898:	stos   DWORD PTR es:[edi],eax
  413899:	pop    ebx
  41389a:	fmulp  st(3),st
  41389c:	daa    
  41389d:	pop    edx
  41389e:	mov    bh,0x7e
  4138a0:	jmp    0x595c:0x10555ec2
  4138a7:	dec    ebx
  4138a8:	or     al,0x50
  4138aa:	mov    fs,WORD PTR [edx]
  4138ac:	repnz (bad)
  4138af:	std    
  4138b0:	imul   BYTE PTR ss:[eax+0x77eae543]
  4138b7:	cmp    al,0xb9
  4138b9:	xchg   ecx,eax
  4138ba:	or     BYTE PTR [ebx],al
  4138bc:	mov    ch,0xaa
  4138be:	jp     0x4138ea
  4138c0:	mov    bl,0xfa
  4138c2:	or     esi,ebx
  4138c4:	or     edx,DWORD PTR [edi+edx*8+0x59]
  4138c8:	fist   DWORD PTR [ebp+0x2cf4db7a]
  4138ce:	push   0x38
  4138d0:	mov    bh,0xc4
  4138d2:	test   BYTE PTR [ebp+ebp*1+0x54],0xa0
  4138d7:	inc    BYTE PTR [edx+0xc713eea]
  4138dd:	pop    ds
  4138de:	mov    ds:0x50b463bb,al
  4138e3:	cld    
  4138e4:	push   ecx
  4138e5:	jg     0x413947
  4138e7:	push   ebx
  4138e8:	mov    esp,0xbe875aa5
  4138ed:	sub    ebx,DWORD PTR [ebx+0x72]
  4138f0:	test   al,0xc9
  4138f2:	jle    0x413948
  4138f4:	push   ss
  4138f5:	sub    al,0x70
  4138f7:	cmp    DWORD PTR [edi-0x115ef427],esi
  4138fd:	push   cs
  4138fe:	or     eax,0xa137c0d6
  413903:	jge    0x41388b
  413905:	sar    DWORD PTR [ecx+0x77536a82],1
  41390b:	or     ch,BYTE PTR [edx]
  41390d:	pop    esi
  41390e:	push   esi
  41390f:	arpl   WORD PTR es:[bx+si],di
  413913:	leave  
  413914:	sbb    DWORD PTR [ecx],0x5c
  413917:	sbb    ebx,ecx
  413919:	aad    0x3e
  41391b:	jmp    0x85a0:0x9d42245d
  413922:	mov    edi,0x42041aa5
  413927:	mov    ebp,0x790fc24e
  41392c:	cmp    BYTE PTR [eax-0x50],ch
  41392f:	aad    0x55
  413931:	(bad)  
  413932:	fld    QWORD PTR [edi+0x7c8e1f25]
  413938:	cmp    esi,DWORD PTR [ecx+0x5bfac7b0]
  41393e:	and    esp,ecx
  413940:	retf   0x3236
  413943:	push   cs
  413944:	add    ebx,DWORD PTR [ebx]
  413946:	add    ebx,esp
  413948:	or     al,0x91
  41394a:	nop
  41394b:	lods   eax,DWORD PTR ds:[esi]
  41394c:	and    DWORD PTR [ecx],edi
  41394e:	and    eax,0x9f7c624
  413953:	xchg   ebp,eax
  413954:	xchg   edx,eax
  413955:	rcl    BYTE PTR [edx],0x69
  413958:	add    eax,0x96740a3b
  41395d:	not    sp
  413960:	je     0x413919
  413962:	in     eax,dx
  413963:	xchg   ah,dl
  413965:	xchg   edi,eax
  413966:	in     al,dx
  413967:	pushf  
  413968:	int    0x72
  41396a:	cwde   
  41396b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41396c:	cli    
  41396d:	push   esi
  41396e:	sub    eax,0xb218c40
  413973:	sbb    DWORD PTR ds:0xa4c73355,edx
  413979:	pop    es
  41397a:	jmp    0x413965
  41397c:	fdiv   DWORD PTR [ecx+0x75]
  41397f:	jmp    DWORD PTR [esi-0x72]
  413982:	in     al,dx
  413983:	cmp    BYTE PTR [ecx+0x53097cb1],cl
  413989:	dec    edx
  41398b:	(bad)  
  41398c:	das    
  41398d:	mov    dl,bh
  41398f:	int3   
  413990:	push   edi
  413991:	push   cs
  413992:	fiadd  DWORD PTR [ebx-0xd399d9a]
  413998:	popa   
  413999:	push   esi
  41399b:	dec    edx
  41399c:	in     eax,0x7d
  41399e:	repz jecxz 0x41396f
  4139a1:	shl    BYTE PTR [esi+0x6],0x1a
  4139a5:	xchg   DWORD PTR [ebp+0x36832e08],esp
  4139ab:	xor    al,0x9d
  4139ad:	into   
  4139ae:	pand   mm3,QWORD PTR [edi+0x73942075]
  4139b5:	dec    ebx
  4139b6:	lods   eax,DWORD PTR ds:[esi]
  4139b7:	dec    esi
  4139b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b9:	and    esi,ecx
  4139bb:	mov    esp,0xde9ccd82
  4139c0:	mov    ebx,0xd6f51dd7
  4139c5:	pop    eax
  4139c6:	hlt    
  4139c7:	test   ch,dh
  4139c9:	aas    
  4139ca:	pop    edx
  4139cb:	out    dx,al
  4139cc:	fdiv   DWORD PTR [edi-0x58a7b683]
  4139d2:	test   al,0x88
  4139d4:	stos   DWORD PTR es:[edi],eax
  4139d5:	pop    ebx
  4139d6:	stos   BYTE PTR es:[edi],al
  4139d7:	aas    
  4139d8:	sbb    DWORD PTR [ebx],esi
  4139da:	xchg   ecx,eax
  4139db:	loopne 0x4139ad
  4139dd:	ins    DWORD PTR es:[edi],dx
  4139de:	sub    cl,BYTE PTR [ebp*2+0x1af97903]
  4139e5:	add    DWORD PTR [edx-0x1e],ecx
  4139e8:	sub    eax,0x3c8bb913
  4139ed:	setle  BYTE PTR [eax+0x6a]
  4139f1:	xor    DWORD PTR [ecx],edx
  4139f3:	add    bl,BYTE PTR [ebp-0x59]
  4139f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f7:	neg    DWORD PTR [edi-0x122c293c]
  4139fd:	pushf  
  4139fe:	shl    DWORD PTR [ebp-0x7e3e5d1f],1
  413a04:	push   cs
  413a05:	xchg   ebp,eax
  413a06:	sub    al,bl
  413a08:	jle    0x413a3d
  413a0a:	mov    dh,0xf8
  413a0c:	rol    BYTE PTR [ebp-0x3e42b484],0xd
  413a13:	add    BYTE PTR ds:0x8e1fac27,ch
  413a19:	xchg   ebx,eax
  413a1a:	mov    edx,0x9f791170
  413a1f:	loope  0x4139bd
  413a21:	aas    
  413a22:	mov    edi,0xfe735b0f
  413a27:	and    edx,0xc8258730
  413a2d:	mov    ds:0xa6a73f7f,al
  413a32:	cmp    edi,DWORD PTR [ebx+0x4f]
  413a35:	add    eax,0xca712c3b
  413a3a:	sahf   
  413a3b:	dec    edi
  413a3c:	loopne 0x413aa2
  413a3e:	inc    esp
  413a3f:	out    dx,eax
  413a40:	push   0xffffffae
  413a42:	jge    0x413aba
  413a44:	fcom   QWORD PTR [edx-0x11]
  413a47:	xor    BYTE PTR [edx],cl
  413a49:	pop    edi
  413a4a:	outs   dx,BYTE PTR ds:[esi]
  413a4b:	not    BYTE PTR [ecx-0x16395891]
  413a51:	push   esi
  413a52:	adc    edx,DWORD PTR [edi+0xe]
  413a55:	sti    
  413a56:	cmp    eax,0xb74119bb
  413a5b:	jne    0x413a51
  413a5d:	stc    
  413a5e:	adc    BYTE PTR [ecx-0x30d369c0],bh
  413a64:	xchg   ecx,eax
  413a65:	push   ds
  413a66:	push   ebp
  413a67:	mov    al,ds:0x719d850
  413a6c:	add    dl,cl
  413a6e:	push   edi
  413a6f:	push   cs
  413a70:	jae    0x413a9a
  413a72:	scas   al,BYTE PTR es:[edi]
  413a73:	jl     0x413a28
  413a75:	pop    es
  413a76:	or     esp,esi
  413a78:	and    DWORD PTR [edx],ebp
  413a7a:	push   ebx
  413a7b:	cmp    al,0x50
  413a7d:	icebp  
  413a7e:	jmp    0x5d0fcc82
  413a83:	pop    es
  413a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a85:	mov    al,0xd4
  413a87:	xchg   esi,eax
  413a88:	sub    dh,BYTE PTR [eax]
  413a8a:	out    dx,eax
  413a8b:	sub    eax,0xd2147ea0
  413a90:	or     bl,ah
  413a92:	sbb    eax,DWORD PTR [esp+eiz*8-0x248ca8cf]
  413a99:	stos   BYTE PTR es:[edi],al
  413a9a:	mov    al,ch
  413a9c:	ret    0x935d
  413a9f:	inc    edx
  413aa0:	call   0x296040b1
  413aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa6:	enter  0x5df0,0x4
  413aaa:	jle    0x413a80
  413aac:	dec    esi
  413aad:	mov    edx,0xaadcb789
  413ab2:	cmp    al,0xde
  413ab4:	push   esi
  413ab5:	ins    DWORD PTR es:[edi],dx
  413ab6:	or     DWORD PTR [eax],0xbdc2ff7c
  413abc:	adc    DWORD PTR [edi],ecx
  413abe:	(bad)  
  413abf:	xor    eax,0x27baa83d
  413ac4:	nop
  413ac5:	sub    bh,ch
  413ac7:	pop    ebx
  413ac8:	or     BYTE PTR [edi],cl
  413aca:	pop    ecx
  413acb:	adc    dh,ch
  413acd:	arpl   WORD PTR [edi+eax*1-0x6d],cx
  413ad1:	mov    BYTE PTR [ebp-0xd6e5ed8],bh
  413ad7:	retf   0x813a
  413ada:	sahf   
  413adb:	sub    ebx,DWORD PTR [eax-0x41]
  413ade:	shl    BYTE PTR [esi-0x330130c4],1
  413ae4:	rol    DWORD PTR [ecx+ebp*2-0x1ff82eb6],0xf5
  413aec:	mov    al,0xab
  413aee:	mov    ecx,0x2ff11385
  413af3:	push   esp
  413af4:	sti    
  413af5:	xchg   ecx,eax
  413af6:	push   ebp
  413af7:	mov    ds:0x18d1ff26,al
  413afc:	repz sbb dl,dl
  413aff:	sbb    dl,BYTE PTR [edx+0x39fa39f6]
  413b05:	jae    0x413b13
  413b07:	xchg   ebp,eax
  413b08:	test   eax,0xe00d188d
  413b0d:	popa   
  413b0e:	or     DWORD PTR [edi-0x41],0xfffffff6
  413b12:	stos   BYTE PTR es:[edi],al
  413b13:	in     al,0x5e
  413b15:	jmp    0x24f8:0xf757c513
  413b1c:	cmp    BYTE PTR [ebx+0x11ff8f30],dh
  413b22:	inc    edi
  413b23:	sahf   
  413b24:	daa    
  413b25:	mov    dh,0x19
  413b27:	pop    edi
  413b28:	fsubr  QWORD PTR [edx-0x3b]
  413b2b:	mov    cs,WORD PTR [edx+0x351e844f]
  413b31:	pop    es
  413b32:	(bad)  
  413b33:	lds    eax,FWORD PTR [edi+0x16]
  413b36:	sbb    DWORD PTR [edx+0x28],ebp
  413b39:	mov    ecx,0x4afe20ac
  413b3e:	pushf  
  413b3f:	mov    edi,0xf223bc6f
  413b44:	jp     0x413bbf
  413b46:	mov    edi,0x458cfbff
  413b4b:	and    dh,BYTE PTR [eax+0x523b059]
  413b51:	cmp    bl,BYTE PTR [ecx-0x4e7cca69]
  413b57:	popa   
  413b58:	repnz fstp DWORD PTR [ecx-0x5f742d9]
  413b5f:	xor    eax,0xcefaef84
  413b64:	sub    al,0x48
  413b66:	retf   
  413b67:	jge    0x413b91
  413b69:	test   ah,0x9d
  413b6c:	mov    eax,ds:0x50a563eb
  413b71:	xchg   BYTE PTR [eax-0x7d22974f],ch
  413b77:	ins    BYTE PTR es:[edi],dx
  413b78:	rcr    BYTE PTR [edx],cl
  413b7a:	test   DWORD PTR [esi],eax
  413b7c:	xchg   BYTE PTR [edx+0x2c],dl
  413b7f:	inc    ebp
  413b80:	stos   DWORD PTR es:[edi],eax
  413b81:	xchg   ebx,eax
  413b82:	outs   dx,DWORD PTR ds:[esi]
  413b83:	popa   
  413b84:	jo     0x413b0d
  413b86:	addr16 jbe 0x413bb0
  413b89:	jl     0x413be7
  413b8b:	leave  
  413b8c:	xchg   esi,eax
  413b8d:	add    al,0x62
  413b8f:	cmp    ch,dh
  413b91:	scas   eax,DWORD PTR es:[edi]
  413b92:	fist   DWORD PTR [edi]
  413b94:	call   0x68e3f87b
  413b99:	test   al,0x53
  413b9b:	xchg   ebp,eax
  413b9c:	xchg   DWORD PTR [esi-0x14a7908e],ebp
  413ba2:	or     eax,0xe178e8e4
  413ba7:	popa   
  413ba8:	sahf   
  413ba9:	dec    DWORD PTR [edx+0x7f6e1880]
  413baf:	lods   al,BYTE PTR ds:[esi]
  413bb0:	mov    esi,0xa33edbc6
  413bb5:	add    al,0x58
  413bb7:	adc    DWORD PTR [ebp+0x80bce68],0x3556d9a5
  413bc1:	out    0xd9,al
  413bc3:	mov    bh,0xbc
  413bc5:	cmp    BYTE PTR [esi],bl
  413bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc8:	push   edi
  413bc9:	mov    al,0x6e
  413bcb:	out    dx,al
  413bcc:	xchg   edi,eax
  413bcd:	jge    0x413bbb
  413bcf:	adc    DWORD PTR [edx],edx
  413bd1:	cs in  eax,dx
  413bd3:	dec    ecx
  413bd4:	sbb    BYTE PTR [ecx],ah
  413bd6:	adc    al,0x37
  413bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd9:	cs add eax,0x9851acb5
  413bdf:	jmp    0x7c3e3301
  413be4:	fimul  DWORD PTR [ebp+0x5b583a1d]
  413bea:	sahf   
  413beb:	jge    0x413c50
  413bed:	xor    eax,0xcb6c3f16
  413bf2:	int    0x15
  413bf4:	outs   dx,BYTE PTR ds:[esi]
  413bf5:	aam    0xd4
  413bf7:	cmc    
  413bf8:	retf   
  413bf9:	mov    eax,0x935848bc
  413bfe:	les    ebp,FWORD PTR [edi]
  413c00:	sub    edx,DWORD PTR [esi]
  413c02:	add    bh,dh
  413c04:	clc    
  413c05:	je     0x413c81
  413c07:	push   edi
  413c08:	cmp    edi,esp
  413c0a:	mov    ecx,0xc66a3e13
  413c0f:	and    eax,0x71
  413c12:	mov    eax,0x9d2345d9
  413c17:	sub    DWORD PTR [bx+si],edi
  413c1a:	cmp    BYTE PTR [ecx-0x1a13562d],al
  413c20:	xor    DWORD PTR [edx+0x450246c1],esp
  413c26:	dec    ecx
  413c27:	mov    ah,BYTE PTR [edi+0x79]
  413c2a:	jecxz  0x413bfe
  413c2c:	xor    eax,0xb1f80188
  413c31:	daa    
  413c32:	int3   
  413c33:	dec    ecx
  413c34:	aam    0xba
  413c36:	ins    DWORD PTR es:[edi],dx
  413c37:	outs   dx,DWORD PTR ds:[esi]
  413c38:	stc    
  413c39:	pop    ds
  413c3a:	arpl   WORD PTR [ecx+edi*1-0x3ba7635a],dx
  413c41:	ins    DWORD PTR es:[edi],dx
  413c42:	adc    ah,BYTE PTR [esi+0x68]
  413c45:	ret    0xb822
  413c48:	inc    esi
  413c49:	je     0x413c7c
  413c4b:	push   esp
  413c4c:	nop
  413c4d:	push   cs
  413c4e:	lock popa 
  413c50:	dec    ebx
  413c51:	psubd  mm3,QWORD PTR [eax+0x29]
  413c55:	fisttp QWORD PTR [ecx-0x23e385dd]
  413c5b:	inc    edi
  413c5c:	inc    edi
  413c5d:	dec    edx
  413c5e:	sub    dl,BYTE PTR [eax-0x2d]
  413c61:	cmp    eax,0x4897c37b
  413c66:	out    0x18,eax
  413c68:	stos   DWORD PTR es:[edi],eax
  413c69:	test   DWORD PTR [ecx+0x69bf1d49],edi
  413c6f:	in     eax,dx
  413c70:	call   0x27c0:0xe5d5246d
  413c77:	add    BYTE PTR [esi+0x8ccdb7c],ch
  413c7d:	pusha  
  413c7e:	jmp    0x9c153fcc
  413c83:	(bad)  
  413c84:	loope  0x413cf4
  413c86:	add    cl,BYTE PTR [esi+0x3a2ebfc1]
  413c8c:	into   
  413c8d:	or     esp,edx
  413c8f:	or     DWORD PTR [edi-0x15f44c88],eax
  413c95:	ins    DWORD PTR es:[edi],dx
  413c96:	int    0x35
  413c98:	mov    ecx,DWORD PTR [eax+0x7e8adbc4]
  413c9e:	add    edi,0xa8c78595
  413ca4:	es pushf 
  413ca6:	xchg   BYTE PTR [eax],ch
  413ca8:	aad    0x22
  413caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cab:	push   edx
  413cac:	ja     0x413c9a
  413cae:	push   ds
  413caf:	mov    cl,0x9c
  413cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb2:	out    dx,al
  413cb3:	std    
  413cb4:	dec    edx
  413cb5:	lock aad 0xbd
  413cb8:	adc    eax,eax
  413cba:	dec    esi
  413cbb:	inc    esp
  413cbc:	or     edi,esp
  413cbe:	out    0x27,eax
  413cc0:	sar    BYTE PTR [ebp-0x70],0x64
  413cc4:	mov    edi,0xaf261ac5
  413cc9:	mov    al,es:0x54bbcce7
  413ccf:	and    bh,dl
  413cd1:	cmp    al,0xb
  413cd3:	mov    al,0xe7
  413cd5:	pop    ecx
  413cd6:	or     al,0xaf
  413cd8:	ret    0x7996
  413cdb:	cs das 
  413cdd:	mov    ebp,0xce1bd3ac
  413ce2:	or     al,0x38
  413ce4:	jp     0x413d1f
  413ce6:	mov    dl,0x93
  413ce8:	lock ret 0xfae1
  413cec:	stc    
  413ced:	bound  esp,QWORD PTR [bx]
  413cf0:	jb     0x413c8d
  413cf2:	xor    edi,0x17
  413cf5:	cmp    bl,cl
  413cf7:	pop    es
  413cf8:	mov    edi,DWORD PTR [edi]
  413cfa:	(bad)  [ecx]
  413cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfd:	or     BYTE PTR [ecx-0x70463cd8],bh
  413d03:	inc    edx
  413d04:	push   edi
  413d05:	add    DWORD PTR ds:0xf0de9128,eax
  413d0b:	sahf   
  413d0c:	repnz loopne 0x413cc3
  413d0f:	dec    esp
  413d10:	sub    eax,0xd91e4a1e
  413d15:	and    ebx,ebx
  413d17:	jno    0x413d5b
  413d19:	leave  
  413d1a:	mov    cl,0x8
  413d1c:	jne    0x413ce4
  413d1e:	test   eax,0x6f6991bc
  413d23:	or     dh,dl
  413d25:	xchg   esp,eax
  413d26:	pop    es
  413d27:	fwait
  413d28:	inc    edi
  413d29:	icebp  
  413d2a:	fsubr  QWORD PTR [esi+0x2b]
  413d2d:	push   cs
  413d2e:	into   
  413d2f:	xchg   esp,eax
  413d30:	cmp    eax,0x5c022394
  413d35:	cs and ecx,edx
  413d38:	pop    esi
  413d39:	out    dx,al
  413d3a:	pop    edx
  413d3b:	jne    0x413d78
  413d3d:	popf   
  413d3e:	test   DWORD PTR [eax-0x13],edi
  413d41:	in     eax,dx
  413d42:	btc    DWORD PTR [edx-0x1a1dd749],edi
  413d49:	pop    ecx
  413d4a:	cmp    DWORD PTR [ebp+ebp*4+0x234eb7da],esi
  413d51:	sbb    eax,ebx
  413d53:	add    edx,DWORD PTR [ebp+esi*4+0x56]
  413d57:	js     0x413d72
  413d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d5a:	call   0x95c39797
  413d5f:	fld    QWORD PTR [eax]
  413d61:	mov    bh,0x3b
  413d63:	call   0xc1a8:0x745c549a
  413d6a:	mov    ah,0xb8
  413d6c:	mov    bl,BYTE PTR [edi+0x4e1faff2]
  413d72:	leave  
  413d73:	add    DWORD PTR [edi],eax
  413d75:	popf   
  413d76:	div    cl
  413d78:	add    ecx,0x101c3c37
  413d7e:	out    dx,al
  413d7f:	mov    DWORD PTR [ebx],ebp
  413d81:	fs rol edx,1
  413d84:	sub    DWORD PTR ss:[ecx-0x49ba2fc0],0xe56d1ea1
  413d8f:	vmulsd xmm3,xmm4,QWORD PTR [ebx+0xc]
  413d94:	mov    esi,0x7459452
  413d99:	scas   eax,DWORD PTR es:[edi]
  413d9a:	jmp    FWORD PTR [esi+0x64]
  413d9d:	ss xchg ecx,eax
  413d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da0:	push   edx
  413da1:	lds    ebp,FWORD PTR [ebx-0x2da60062]
  413da7:	mov    bl,0x9d
  413da9:	sub    ah,BYTE PTR [ebx-0x5d]
  413dac:	inc    esp
  413dad:	loop   0x413dce
  413daf:	pop    eax
  413db0:	adc    eax,0x73608cf8
  413db5:	fidivr DWORD PTR [esi+0x62]
  413db8:	jno    0x413e1b
  413dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dbb:	mov    ah,0x43
  413dbd:	pusha  
  413dbe:	or     DWORD PTR [ebx+eiz*1],edi
  413dc1:	cmp    eax,0x9d6d74fe
  413dc6:	or     esi,DWORD PTR [edi]
  413dc8:	inc    ecx
  413dc9:	add    al,0xa3
  413dcb:	mov    dh,0xdc
  413dcd:	(bad)  
  413dce:	rol    BYTE PTR [ecx-0x75],0x18
  413dd2:	add    bl,BYTE PTR [esi]
  413dd4:	mov    ebp,DWORD PTR [eax]
  413dd6:	jb     0x413e55
  413dd8:	xchg   BYTE PTR [ecx],cl
  413dda:	ins    DWORD PTR es:[edi],dx
  413ddb:	add    eax,0x3b13dc1f
  413de0:	pop    ss
  413de1:	test   edi,ebx
  413de3:	loopne 0x413d91
  413de5:	or     dl,BYTE PTR cs:[edi-0x32ba80b2]
  413dec:	xchg   ebp,eax
  413ded:	out    0x5b,al
  413def:	loop   0x413dfe
  413df1:	mov    WORD PTR [eax+0x7130c8e4],?
  413df7:	rcl    DWORD PTR [edi-0xa],cl
  413dfa:	mov    al,ds:0x803daab4
  413dff:	es push ds
  413e01:	mov    ecx,0x1bfe11b9
  413e06:	sub    eax,0x363265ef
  413e0b:	push   eax
  413e0c:	je     0x413e2b
  413e0e:	cmc    
  413e0f:	mov    dl,0x2c
  413e11:	or     ch,BYTE PTR [esi+0x588f5eab]
  413e17:	mov    eax,0x26da4838
  413e1c:	fcomp  st(1)
  413e1e:	xchg   ebx,eax
  413e1f:	bnd ss jle 0x413dd3
  413e23:	mov    ?,ebx
  413e25:	aas    
  413e26:	push   edi
  413e27:	mov    eax,0xfda25d07
  413e2c:	lea    esi,[eax+ebp*1]
  413e2f:	mov    BYTE PTR [eax],dl
  413e31:	xchg   esi,eax
  413e32:	pop    ecx
  413e33:	adc    al,0xef
  413e35:	shl    BYTE PTR [ebx],cl
  413e37:	push   ss
  413e38:	mov    al,0x13
  413e3a:	mov    dl,0xa9
  413e3c:	xor    dl,BYTE PTR [ebx]
  413e3e:	scas   eax,DWORD PTR es:[edi]
  413e3f:	adc    eax,0xffffffa8
  413e42:	push   esp
  413e43:	je     0x413df6
  413e45:	cwde   
  413e46:	data16 adc BYTE PTR [ebp+0x60],bl
  413e4a:	iret   
  413e4b:	push   0x644a7f4c
  413e50:	xchg   edx,eax
  413e51:	adc    eax,edx
  413e53:	adc    eax,0x1460ad6d
  413e58:	imul   eax,DWORD PTR [eax],0x29
  413e5b:	add    dh,ch
  413e5d:	daa    
  413e5e:	(bad)  
  413e5f:	cmp    al,BYTE PTR [edi]
  413e61:	adc    edx,DWORD PTR [ebp+0x1a]
  413e64:	cmp    eax,0x48f6ba6f
  413e69:	ret    0xdf9
  413e6c:	push   cs
  413e6d:	mov    al,ds:0xc7722ec5
  413e72:	out    dx,eax
  413e73:	inc    eax
  413e74:	(bad)  
  413e75:	push   cs
  413e76:	inc    esp
  413e77:	push   ss
  413e78:	ror    edi,1
  413e7a:	int    0xd5
  413e7c:	push   edi
  413e7d:	cmc    
  413e7e:	inc    ecx
  413e7f:	mov    WORD PTR [edx+esi*4],gs
  413e82:	arpl   WORD PTR [edx-0x6ac07e31],si
  413e88:	xor    edx,DWORD PTR [esi]
  413e8a:	adc    DWORD PTR [ebp+0x4a38abcf],esi
  413e90:	test   al,0x8a
  413e92:	dec    edx
  413e93:	ins    DWORD PTR es:[edi],dx
  413e94:	add    cl,bh
  413e96:	dec    edi
  413e97:	cdq    
  413e98:	xchg   ah,cl
  413e9a:	or     eax,0x657114b4
  413e9f:	push   ebx
  413ea0:	inc    edi
  413ea1:	adc    DWORD PTR [esp+ecx*4],0xa6865263
  413ea8:	adc    DWORD PTR [eax+0x6877e4d6],0x32
  413eaf:	loop   0x413ecf
  413eb1:	int3   
  413eb2:	stc    
  413eb3:	pop    es
  413eb4:	or     ebx,eax
  413eb6:	inc    eax
  413eb7:	adc    al,0x70
  413eb9:	mov    eax,DWORD PTR [ecx-0x22e113e3]
  413ebf:	cmp    dh,BYTE PTR [ecx-0x30]
  413ec2:	adc    BYTE PTR [esi],cl
  413ec4:	xor    eax,ebx
  413ec6:	pop    esi
  413ec7:	and    al,0xdc
  413ec9:	inc    edx
  413eca:	sbb    dl,BYTE PTR [edx]
  413ecc:	sbb    bl,ch
  413ece:	repz dec edi
  413ed0:	inc    ebx
  413ed1:	mov    DWORD PTR [edi+0x2],esi
  413ed4:	into   
  413ed5:	mov    al,BYTE PTR [ebp+0x10]
  413ed8:	jb     0x413ea7
  413eda:	and    ah,BYTE PTR [edi+0x6a]
  413edd:	ins    BYTE PTR es:[edi],dx
  413ede:	mov    ch,0x1b
  413ee0:	sbb    DWORD PTR [edi-0x34fac55d],0xffffff96
  413ee7:	mov    dh,0xcb
  413ee9:	cmp    ebx,DWORD PTR ds:0x116713a1
  413eef:	adc    ebx,DWORD PTR [ebx]
  413ef1:	stos   DWORD PTR es:[edi],eax
  413ef2:	or     al,0x85
  413ef4:	xlat   BYTE PTR ds:[ebx]
  413ef5:	push   esp
  413ef6:	xchg   ebx,eax
  413ef7:	cwde   
  413ef8:	popf   
  413ef9:	add    ecx,ecx
  413efb:	mov    edi,0x947e601f
  413f00:	cs scas eax,DWORD PTR es:[edi]
  413f02:	mov    dl,0xa3
  413f04:	xor    BYTE PTR [edx],ch
  413f06:	mov    esi,0x75d8aa3a
  413f0b:	sub    eax,0x402934bb
  413f10:	adc    eax,0x53035b72
  413f15:	and    DWORD PTR [eax],esp
  413f17:	(bad)  
  413f18:	adc    al,0xf9
  413f1a:	imul   DWORD PTR [eax-0x4e]
  413f1d:	xor    edx,eax
  413f1f:	call   0x6971f4c8
  413f24:	push   edx
  413f25:	inc    ebp
  413f26:	dec    ebp
  413f27:	(bad)  
  413f28:	ja     0x413ec2
  413f2a:	(bad)  
  413f2b:	cmp    ecx,eax
  413f2d:	push   cs
  413f2e:	aad    0xb1
  413f30:	scas   al,BYTE PTR es:[edi]
  413f31:	inc    edx
  413f32:	repz inc ebp
  413f34:	(bad)  
  413f36:	retf   
  413f37:	(bad)  [ecx]
  413f39:	shl    BYTE PTR [esi-0x68],1
  413f3c:	cmp    ch,ch
  413f3e:	ror    DWORD PTR [esi+eiz*2],cl
  413f41:	lea    esi,[edi+edx*1-0xdeb661b]
  413f48:	ret    
  413f49:	sbb    ebp,DWORD PTR [edx+0x3777caec]
  413f4f:	jnp    0x413edf
  413f51:	push   ebx
  413f52:	or     dh,bl
  413f54:	int3   
  413f55:	jg     0x413eeb
  413f57:	dec    ebx
  413f58:	push   0x2d
  413f5a:	lods   al,BYTE PTR ds:[esi]
  413f5b:	pinsrw mm0,WORD PTR [edx+0x47],0x79
  413f60:	mov    edi,esp
  413f62:	sar    DWORD PTR [esi+0x3e760f68],0x19
  413f69:	ins    DWORD PTR es:[edi],dx
  413f6a:	lds    edx,FWORD PTR ds:[edi+ecx*2+0x29]
  413f6f:	xor    al,0xa2
  413f71:	mov    edi,0x7f59c930
  413f76:	rol    DWORD PTR [eax],cl
  413f78:	cdq    
  413f79:	or     al,0x6d
  413f7b:	je     0x413fdd
  413f7d:	cmp    eax,0xaa5b4dc
  413f82:	xor    al,0xfe
  413f84:	mov    edi,0x64ff9c59
  413f89:	jne    0x413fb7
  413f8b:	cmp    dl,BYTE PTR [ebx-0x3f]
  413f8e:	ja     0x413fe5
  413f90:	adc    ch,bh
  413f92:	or     DWORD PTR [eax-0xc],eax
  413f95:	in     al,dx
  413f96:	dec    ecx
  413f97:	aas    
  413f98:	mov    al,0xe1
  413f9a:	push   esi
  413f9b:	xchg   ecx,eax
  413f9c:	loopne 0x413fa1
  413f9e:	repnz retf 
  413fa0:	(bad)  [edi-0x6f6c31eb]
  413fa6:	lea    eax,[ecx+edi*1-0x22]
  413faa:	in     al,0xf8
  413fac:	dec    ebx
  413fad:	aas    
  413fae:	add    dl,BYTE PTR [eax]
  413fb0:	das    
  413fb1:	mov    ecx,0x67ecc562
  413fb6:	xchg   ecx,eax
  413fb7:	mov    al,BYTE PTR [edx-0x13]
  413fba:	aam    0x4e
  413fbc:	(bad)
  413fc0:	mov    al,ds:0xce691bbc
  413fc5:	(bad)  
  413fc6:	test   DWORD PTR [edx+0x8],0xe10a388
  413fcd:	pushf  
  413fce:	aas    
  413fcf:	add    DWORD PTR [eax],0x16
  413fd2:	into   
  413fd3:	jmp    ebp
  413fd5:	cdq    
  413fd6:	or     esi,DWORD PTR [esi+0x7e1c943]
  413fdc:	test   BYTE PTR [edi+0x2],cl
  413fdf:	cmp    esp,ecx
  413fe1:	popf   
  413fe2:	or     bl,bl
  413fe4:	repnz inc BYTE PTR [edx+ebp*2-0x3f]
  413fe9:	std    
  413fea:	outs   dx,BYTE PTR ds:[esi]
  413feb:	in     al,0x4c
  413fed:	dec    ebx
  413fee:	xchg   ebx,eax
  413fef:	stos   BYTE PTR es:[edi],al
  413ff0:	popa   
  413ff1:	call   0x508a:0x40dbd66f
  413ff8:	xor    BYTE PTR [edx+0x17],dl
  413ffb:	jl     0x413ffa
  413ffd:	mov    ah,BYTE PTR [edx]
  413fff:	push   ebp
  414000:	pop    ebx
  414001:	call   0x5d9f:0x4cc62db2
  414008:	dec    ecx
  414009:	sti    
  41400a:	sbb    esi,0x39
  41400d:	loop   0x413fa4
  41400f:	push   ecx
  414010:	cmp    eax,0x3f40f306
  414015:	add    ebx,edi
  414017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414018:	call   0xbd0e:0x7e250efb
  41401f:	ffreep st(6)
  414021:	push   eax
  414022:	xchg   esp,eax
  414023:	inc    edx
  414024:	push   ebx
  414025:	pop    es
  414026:	scas   al,BYTE PTR es:[edi]
  414027:	repz repnz sbb ebp,DWORD PTR [ebx+0x373a3681]
  41402f:	xchg   ebp,eax
  414030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414031:	sbb    ebp,ecx
  414033:	sar    DWORD PTR [ecx-0x27],0xcf
  414037:	xchg   edx,eax
  414038:	lock mov bl,0xd
  41403b:	ds dec eax
  41403d:	dec    esi
  41403e:	or     DWORD PTR [eax-0x2e33e598],0x495a687c
  414048:	sti    
  414049:	cmp    edx,DWORD PTR [ecx]
  41404b:	mov    ebp,0x501cab47
  414050:	or     eax,0xfe1a9169
  414055:	nop
  414056:	inc    eax
  414057:	inc    esp
  414058:	int3   
  414059:	jnp    0x41404c
  41405b:	daa    
  41405c:	and    al,0x6b
  41405e:	fld    QWORD PTR [edi-0x76]
  414061:	adc    edi,ebp
  414063:	mov    edx,0xd4a084d9
  414068:	push   0xffffff8c
  41406a:	jp     0x4140e1
  41406c:	cli    
  41406d:	stc    
  41406e:	pop    eax
  41406f:	test   eax,0xde6e7b28
  414074:	xor    al,0x81
  414076:	jmp    0x41400d
  414078:	test   DWORD PTR [ebp-0x1],esp
  41407b:	add    BYTE PTR [edx-0x25de8f7a],ch
  414081:	loop   0x41403c
  414083:	bnd jmp 0x4140c5
  414086:	into   
  414087:	cmp    al,0x96
  414089:	into   
  41408a:	icebp  
  41408b:	retf   
  41408c:	aas    
  41408d:	pop    edi
  41408e:	ins    DWORD PTR es:[edi],dx
  41408f:	sahf   
  414090:	cmc    
  414091:	and    ah,al
  414093:	lods   eax,DWORD PTR ds:[esi]
  414094:	push   ebp
  414095:	pop    eax
  414096:	add    dh,0x16
  414099:	pushf  
  41409a:	in     al,dx
  41409b:	int3   
  41409c:	test   edx,ecx
  41409e:	in     al,dx
  41409f:	mov    al,0x5
  4140a1:	out    dx,al
  4140a2:	sbb    al,0xb0
  4140a4:	out    dx,eax
  4140a5:	and    ebp,DWORD PTR [edi-0x46171b9b]
  4140ab:	sbb    BYTE PTR [ebx-0x1af151fc],cl
  4140b1:	inc    esi
  4140b2:	push   ecx
  4140b3:	mul    DWORD PTR [edx+0x39579a8a]
  4140b9:	out    dx,eax
  4140ba:	mov    edi,DWORD PTR [ecx-0x1edbaff1]
  4140c0:	jo     0x414136
  4140c2:	dec    edx
  4140c3:	test   al,0x49
  4140c5:	popf   
  4140c6:	ds loopne 0x41410c
  4140c9:	btc    DWORD PTR [ebp+esi*4-0xcbefb8f],ebp
  4140d1:	(bad)  
  4140d2:	hlt    
  4140d3:	fwait
  4140d4:	daa    
  4140d5:	jmp    0x708d:0xd67f07bf
  4140dc:	aaa    
  4140dd:	mov    bl,0x8e
  4140df:	int3   
  4140e0:	scas   eax,DWORD PTR es:[edi]
  4140e1:	mov    al,0xc
  4140e3:	dec    ebx
  4140e4:	xchg   DWORD PTR [ebp+0x19],ebp
  4140e7:	mov    cl,0x2b
  4140e9:	dec    DWORD PTR [edi+0x20]
  4140ec:	mov    ebx,0xcea80447
  4140f1:	mov    fs,esp
  4140f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f4:	xchg   esp,eax
  4140f5:	and    edi,DWORD PTR [ebp+0x40]
  4140f8:	out    0x6b,eax
  4140fa:	sbb    DWORD PTR [ebp+0x13b45f5a],esi
  414100:	retf   
  414101:	cmp    dl,BYTE PTR ds:0x6ff29b29
  414107:	jmp    0xb98d:0xbfa03143
  41410e:	add    DWORD PTR [esi],edx
  414110:	ja     0x414150
  414112:	adc    BYTE PTR [edi],bl
  414114:	fdiv   DWORD PTR es:[edx+0x3cb1d6ce]
  41411b:	and    ch,dh
  41411d:	imul   esi,DWORD PTR [esi],0x68fc7b39
  414123:	es push es
  414125:	xchg   ebp,eax
  414126:	adc    al,0x83
  414128:	dec    ebp
  414129:	popf   
  41412a:	and    bh,BYTE PTR [ebx+0xf6fdbe6]
  414130:	and    BYTE PTR [eax-0x2e],dl
  414133:	cmp    DWORD PTR [ebp-0x25],eax
  414136:	in     al,0xcd
  414138:	lds    ebp,FWORD PTR [edx-0x69]
  41413b:	dec    edi
  41413c:	add    DWORD PTR [ebx],edi
  41413e:	arpl   WORD PTR [ecx-0x44],si
  414141:	mov    bl,0x1f
  414143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414144:	xchg   esp,eax
  414145:	mov    edi,0xa1c2dd55
  41414a:	fs into 
  41414c:	inc    esp
  41414d:	xor    BYTE PTR [ecx+0x31],0xd5
  414151:	and    DWORD PTR [esp+ecx*1],ebx
  414154:	ss mov esp,0x80c8aab0
  41415a:	and    eax,0xf668988e
  41415f:	adc    al,0x5b
  414161:	retf   
  414162:	imul   esp,DWORD PTR [edi+0x390b32e4],0xffffffea
  414169:	sti    
  41416a:	pop    sp
  41416c:	call   0x4f69649b
  414171:	test   BYTE PTR [eax],bh
  414173:	jbe    0x4141ef
  414175:	pop    ds
  414176:	rcr    BYTE PTR [edi],1
  414178:	cmp    eax,0xe4158b11
  41417d:	mov    si,0x5af4
  414181:	fdivr  QWORD PTR [ebx+0x209c38c1]
  414187:	aam    0x66
  414189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41418a:	aam    0xbd
  41418c:	inc    edx
  41418d:	xchg   esp,eax
  41418e:	push   esp
  41418f:	loope  0x414196
  414191:	aad    0xe
  414193:	push   ecx
  414194:	mov    ds:0x6bbdadee,eax
  414199:	push   edx
  41419a:	daa    
  41419b:	(bad)  
  41419d:	xor    eax,DWORD PTR [edi-0x7f5643ae]
  4141a3:	into   
  4141a4:	dec    esi
  4141a5:	cmp    edx,ecx
  4141a7:	into   
  4141a8:	xchg   DWORD PTR [ebx-0x52],eax
  4141ab:	push   ecx
  4141ac:	pop    edi
  4141ad:	retf   
  4141ae:	sti    
  4141af:	mov    dh,0xfd
  4141b1:	jo     0x4141fc
  4141b3:	fldenv [eax]
  4141b5:	fwait
  4141b6:	(bad)  
  4141b7:	(bad)  
  4141b8:	into   
  4141b9:	pop    ecx
  4141ba:	test   DWORD PTR [ebp+0x62e2d74c],esp
  4141c0:	lods   eax,DWORD PTR ds:[esi]
  4141c1:	jae    0x41414a
  4141c3:	add    BYTE PTR [edx+0x6d],ah
  4141c6:	fiadd  WORD PTR [ecx+ebx*1]
  4141c9:	fdiv   DWORD PTR [edi]
  4141cb:	aam    0x1d
  4141cd:	ins    BYTE PTR es:[edi],dx
  4141ce:	lods   al,BYTE PTR ds:[esi]
  4141cf:	ficomp DWORD PTR [edx+0x44]
  4141d2:	in     al,dx
  4141d3:	xchg   al,dl
  4141d5:	(bad)  
  4141d6:	fild   WORD PTR [esi]
  4141d8:	sub    al,0xe1
  4141da:	cmp    BYTE PTR [edi],al
  4141dc:	xchg   ebp,eax
  4141dd:	gs and al,0xc9
  4141e0:	repz test DWORD PTR [di-0x2b9a],edx
  4141e6:	add    al,0xa4
  4141e8:	pop    esi
  4141e9:	in     eax,dx
  4141ea:	pop    esp
  4141eb:	ss sahf 
  4141ed:	adc    DWORD PTR [esi+eiz*1-0x26],edi
  4141f1:	cdq    
  4141f2:	jmp    0x508fbdda
  4141f7:	inc    ebp
  4141f8:	xor    BYTE PTR [esi],dl
  4141fa:	test   BYTE PTR [eax],0x78
  4141fd:	in     al,dx
  4141fe:	push   ecx
  4141ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414200:	inc    ebp
  414201:	pop    esi
  414202:	xchg   esp,eax
  414203:	dec    edi
  414204:	(bad)  
  414205:	lods   eax,DWORD PTR ds:[esi]
  414206:	vpaddq xmm4,xmm2,XMMWORD PTR [esi+0x2a2d8b04]
  41420e:	cmp    eax,0xb0c6b53
  414213:	mov    ds:0x760a8c18,al
  414218:	jnp    0x414233
  41421a:	and    DWORD PTR ds:0xd18839ca,eax
  414220:	test   al,0x93
  414222:	jmp    0x23d6:0x9112c883
  414229:	xor    ebx,edi
  41422b:	(bad)  
  41422c:	fucomp st(3)
  41422e:	aad    0x3
  414230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414231:	loop   0x4141dd
  414233:	dec    edi
  414234:	cmp    DWORD PTR [ebx+0x73],ebx
  414237:	out    dx,al
  414238:	hlt    
  414239:	std    
  41423a:	in     eax,0x84
  41423c:	cmp    al,BYTE PTR [ecx]
  41423e:	sbb    al,0x35
  414240:	nop    esp
  414243:	mov    WORD PTR [esi],ss
  414245:	push   ebp
  414246:	mov    cl,0xa2
  414248:	xchg   edi,eax
  414249:	jns    0x4141da
  41424b:	(bad)  
  41424c:	outs   dx,BYTE PTR ds:[esi]
  41424d:	jle    0x41427e
  41424f:	sub    eax,0x1bca0882
  414254:	jbe    0x4142c2
  414256:	and    ah,0x38
  414259:	inc    esi
  41425a:	shl    BYTE PTR [ecx-0x6074c08c],1
  414260:	dec    esi
  414261:	lds    ecx,FWORD PTR [eax+edx*4]
  414264:	sbb    eax,esp
  414266:	test   al,0x8b
  414268:	mov    DWORD PTR [esi+0x7f9bcba0],esp
  41426e:	sbb    bl,BYTE PTR [edi*8-0x267eb515]
  414275:	jb     0x41424e
  414277:	pop    es
  414278:	jmp    0x544232dd
  41427d:	jb     0x4142b5
  41427f:	test   BYTE PTR [edx],bl
  414281:	aas    
  414282:	repz retf 
  414284:	shr    DWORD PTR [esp+ebx*1-0x69],1
  414288:	mov    ds:0x890090e7,al
  41428d:	cmp    al,0x2b
  41428f:	mov    edi,0xa48c87cf
  414294:	ins    DWORD PTR es:[edi],dx
  414295:	adc    dh,BYTE PTR [ecx+0x9]
  414298:	cmp    dl,0x1e
  41429b:	pop    es
  41429c:	jmp    0x1e05:0x5f51a47f
  4142a3:	out    0xe5,al
  4142a5:	add    ebp,ecx
  4142a7:	jae    0x414316
  4142a9:	scas   eax,DWORD PTR es:[edi]
  4142aa:	pop    edx
  4142ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ac:	xchg   ebp,eax
  4142ad:	neg    BYTE PTR [ebx+0x27]
  4142b0:	jmp    0x41428c
  4142b2:	aad    0x16
  4142b4:	mov    edi,0x1c5e458f
  4142b9:	retf   
  4142ba:	sub    eax,DWORD PTR [edi-0x50]
  4142bd:	jb     0x414281
  4142bf:	leave  
  4142c0:	and    al,0x87
  4142c2:	int    0x4c
  4142c4:	sar    BYTE PTR [ecx-0x67],0x1e
  4142c8:	xor    al,0x59
  4142ca:	sub    al,0xa7
  4142cc:	int    0x58
  4142ce:	ret    
  4142cf:	cmp    eax,0x85768484
  4142d4:	pop    ebp
  4142d5:	shl    DWORD PTR [ebp-0x56],1
  4142d8:	mov    DWORD PTR [edx],ebp
  4142da:	cdq    
  4142db:	jle    0x414312
  4142dd:	and    al,0x54
  4142df:	adc    eax,0xec5ff266
  4142e4:	mov    eax,ds:0xfff9cc07
  4142e9:	in     eax,dx
  4142ea:	mov    DWORD PTR [edi-0x67],edi
  4142ed:	retf   0x32d6
  4142f0:	pop    esi
  4142f1:	aas    
  4142f2:	mov    esp,DWORD PTR [ebx-0x1299d710]
  4142f8:	mov    cs,WORD PTR [ecx]
  4142fa:	stc    
  4142fb:	loop   0x41431f
  4142fd:	fwait
  4142fe:	sub    dh,BYTE PTR [ebx+0x3e]
  414301:	ficomp WORD PTR [ebx-0x2b]
  414304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414305:	not    DWORD PTR [edx]
  414307:	pop    ecx
  414308:	ret    0xf44d
  41430b:	leave  
  41430c:	lods   al,BYTE PTR ds:[esi]
  41430d:	add    DWORD PTR [edi-0x7],edx
  414310:	adc    eax,0x9484f751
  414315:	in     al,0x7e
  414317:	std    
  414318:	jae    0x4142a7
  41431a:	iret   
  41431b:	adc    al,0x1b
  41431d:	and    ecx,DWORD PTR [ebx+0x21]
  414320:	mov    cl,0xda
  414322:	out    dx,eax
  414323:	mov    eax,0xfe661c76
  414328:	inc    ecx
  414329:	push   ecx
  41432a:	in     al,dx
  41432b:	push   eax
  41432c:	dec    ebp
  41432d:	add    dh,dh
  41432f:	mov    ?,WORD PTR [edx+0x5d94f26e]
  414335:	fldenv [eax+eax*8+0xcc41897]
  41433c:	mov    ebp,0x708e3e78
  414341:	push   eax
  414342:	js     0x4142c4
  414344:	cmp    eax,0xa74ce6b9
  414349:	(bad)  
  41434a:	pop    esi
  41434b:	aad    0xa3
  41434d:	sbb    edi,DWORD PTR [esi+0x523c6962]
  414353:	nop
  414354:	stos   DWORD PTR es:[edi],eax
  414355:	xor    BYTE PTR [ecx],al
  414357:	mov    dh,0x56
  414359:	fistp  QWORD PTR [eax+0x6e]
  41435c:	dec    esp
  41435d:	test   DWORD PTR [eax-0x4a489079],0x62813362
  414367:	retf   0x76c6
  41436a:	fsub   DWORD PTR ds:0x3944b09a
  414370:	and    eax,0xa562887
  414375:	jmp    0xba15243
  41437a:	pop    eax
  41437b:	stc    
  41437c:	dec    eax
  41437d:	out    0x26,al
  41437f:	push   esi
  414380:	test   DWORD PTR [ebp+0x1c],ecx
  414383:	sbb    bh,al
  414385:	inc    ebp
  414386:	pop    ecx
  414387:	lea    ebx,[edi+ebx*4+0x67]
  41438b:	nop
  41438c:	push   esi
  41438d:	(bad)  
  41438f:	mov    al,ds:0x1848af17
  414394:	nop
  414395:	mov    ebx,0xbcad39be
  41439a:	aaa    
  41439b:	icebp  
  41439c:	cmp    BYTE PTR [edi],0xa8
  41439f:	popf   
  4143a0:	(bad)  
  4143a1:	jne    0x414350
  4143a3:	in     al,dx
  4143a4:	cwde   
  4143a5:	cmp    al,0xe
  4143a7:	mov    ebp,0x32c1947
  4143ac:	inc    esi
  4143ad:	mov    ecx,0x242ec904
  4143b2:	pushf  
  4143b3:	jae    0x4143b1
  4143b5:	sahf   
  4143b6:	mov    ecx,0xb7e26a09
  4143bb:	adc    cl,bl
  4143bd:	test   al,0xe4
  4143bf:	fnstsw WORD PTR [edi+0x1b]
  4143c2:	cmp    cl,cl
  4143c4:	fs jmp 0x1e50:0x4765eab1
  4143cc:	xor    DWORD PTR [ebx+0x305d5200],0x2e18f650
  4143d6:	cmc    
  4143d7:	rcl    DWORD PTR [edi],0xf1
  4143da:	in     eax,0xdd
  4143dc:	jbe    0x4143ef
  4143de:	fxch   st(5)
  4143e0:	and    BYTE PTR [edi+esi*4-0x62fe2199],ch
  4143e7:	out    0xca,eax
  4143e9:	loop   0x4143b0
  4143eb:	mov    ebx,0xeddad8b5
  4143f0:	jnp    0x414385
  4143f2:	pop    esi
  4143f3:	sti    
  4143f4:	add    eax,DWORD PTR ds:0x46a951c6
  4143fa:	xchg   edi,eax
  4143fb:	or     BYTE PTR [eax+ebp*8-0x2200c715],0xfa
  414403:	lahf   
  414404:	std    
  414405:	popf   
  414406:	retf   
  414407:	(bad)  
  414408:	pop    ecx
  414409:	nop
  41440a:	cmc    
  41440b:	jmp    0x414485
  41440d:	jecxz  0x414436
  41440f:	adc    al,0xd
  414411:	xor    dh,bl
  414413:	dec    esp
  414414:	or     eax,0x1e592556
  414419:	iret   
  41441a:	sbb    BYTE PTR [eax-0x47],al
  41441d:	add    DWORD PTR [ecx-0x24],eax
  414420:	clc    
  414421:	xchg   edi,eax
  414422:	push   ebp
  414423:	push   edi
  414424:	in     eax,0xcd
  414426:	inc    esi
  414427:	sbb    al,0x8
  414429:	adc    DWORD PTR [ecx-0x1],eax
  41442c:	test   DWORD PTR ds:0x46b223a,edi
  414432:	div    ebx
  414434:	push   cs
  414435:	mov    BYTE PTR [ebp-0x1f],dh
  414438:	inc    esi
  414439:	push   esp
  41443a:	xor    BYTE PTR [ecx+eax*2],bl
  41443d:	repnz nop
  41443f:	pop    eax
  414440:	mov    bl,0x5b
  414442:	mov    edx,0xa37f4633
  414447:	scas   al,BYTE PTR es:[edi]
  414448:	lea    esp,[ecx-0x10]
  41444b:	dec    edx
  41444c:	dec    edx
  41444d:	ss xor al,0xda
  414450:	enter  0xc146,0x9a
  414454:	das    
  414455:	addr16 mov eax,ds:0xa312
  414459:	aad    0xd6
  41445b:	out    dx,al
  41445c:	mov    bl,0x8b
  41445e:	shl    DWORD PTR [ebx-0x5237aca9],cl
  414464:	in     eax,dx
  414465:	pushf  
  414466:	jbe    0x414458
  414468:	rol    DWORD PTR ds:0xe8273cd2,1
  41446e:	(bad)  
  41446f:	pop    eax
  414470:	and    DWORD PTR [ebx+0x22],ebx
  414473:	not    bl
  414475:	inc    esi
  414476:	cmp    eax,0xf86d56b0
  41447b:	mov    ebp,0x9e5b96ef
  414480:	int3   
  414481:	push   0xffffffb8
  414483:	pop    esp
  414484:	sub    al,0x55
  414486:	call   0x24a229d7
  41448b:	retf   0x5072
  41448e:	mov    WORD PTR [edi+0x37],?
  414491:	fidiv  WORD PTR [ebx+ecx*1+0x6d4c0f1]
  414498:	mov    BYTE PTR [ecx+0xf],ah
  41449b:	out    0x9d,eax
  41449d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449e:	clc    
  41449f:	dec    edx
  4144a0:	or     edi,DWORD PTR ds:0xf539ab91
  4144a6:	scas   eax,DWORD PTR es:[edi]
  4144a7:	xor    ebx,DWORD PTR [edi]
  4144a9:	push   edi
  4144aa:	cs sub al,0x55
  4144ad:	and    bh,BYTE PTR [ebx+ebp*8+0x38]
  4144b1:	xchg   DWORD PTR ds:0x672d475d,esi
  4144b7:	xor    al,0xdf
  4144b9:	add    edx,eax
  4144bb:	cmp    ebx,DWORD PTR [ebx+0x37]
  4144be:	mov    eax,ds:0xb4c9427c
  4144c3:	daa    
  4144c4:	imul   ebp,DWORD PTR [esi+0x10f88db4],0xfffffff5
  4144cb:	sbb    bl,al
  4144cd:	mov    al,BYTE PTR [edx-0x16]
  4144d0:	xchg   edi,eax
  4144d1:	loope  0x41448c
  4144d3:	cmpxchg BYTE PTR [ebx],ah
  4144d6:	sub    ebp,DWORD PTR [eax]
  4144d8:	pop    ebx
  4144d9:	lods   eax,DWORD PTR ds:[esi]
  4144da:	add    ebx,esi
  4144dc:	das    
  4144dd:	repnz in al,dx
  4144df:	out    0x78,al
  4144e1:	xor    DWORD PTR [ebx-0x41],ebx
  4144e4:	add    al,0x61
  4144e6:	or     ebx,edx
  4144e8:	arpl   bx,cx
  4144ea:	leave  
  4144eb:	dec    ebp
  4144ec:	stc    
  4144ed:	sub    eax,0x2a0dee04
  4144f2:	xlat   BYTE PTR gs:[ebx]
  4144f4:	enter  0x11a6,0x75
  4144f8:	jbe    0x4144df
  4144fa:	jnp    0x4144cb
  4144fc:	int    0x67
  4144fe:	jmp    0xaf0786e
  414503:	xchg   ebx,eax
  414504:	jne    0x4144b5
  414506:	dec    ebp
  414507:	aad    0x36
  414509:	mov    ch,0xa6
  41450b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41450c:	pop    edx
  41450d:	mov    esi,0x899708e9
  414512:	mov    al,0x5f
  414514:	aad    0x5
  414516:	xor    eax,0xab229f39
  41451b:	das    
  41451c:	enter  0x9ae4,0xd7
  414520:	and    eax,0xc57ccfb3
  414525:	jnp    0x414503
  414527:	js     0x414580
  414529:	arpl   WORD PTR [ebp-0x7a4ebf6],bp
  41452f:	popa   
  414530:	icebp  
  414531:	ja     0x414505
  414533:	adc    ebx,DWORD PTR [eax-0x5595edc1]
  414539:	sub    BYTE PTR [esi-0x56455d16],cl
  41453f:	test   al,0x21
  414541:	repz add al,0x8e
  414544:	pop    esp
  414545:	jae    0x414535
  414547:	pop    esp
  414548:	ror    BYTE PTR [esi],cl
  41454a:	stos   BYTE PTR es:[edi],al
  41454b:	mov    esp,0xeed53fce
  414550:	mov    ch,0xb8
  414552:	stos   DWORD PTR es:[edi],eax
  414553:	adc    DWORD PTR [edi+0x7689e91f],ebp
  414559:	stos   DWORD PTR es:[edi],eax
  41455a:	mov    bl,0xde
  41455c:	mov    ah,0xb6
  41455e:	ss sub al,0xbc
  414561:	add    al,0x12
  414563:	sub    eax,0x40a09f72
  414568:	xchg   esi,eax
  414569:	lock shr BYTE PTR [edx-0x26b64362],cl
  414570:	loop   0x41455e
  414572:	stc    
  414573:	push   cs
  414574:	push   esi
  414575:	lea    esp,[esi+0x7f]
  414578:	cwde   
  414579:	mov    edx,0x891701f9
  41457e:	cld    
  41457f:	and    ah,BYTE PTR [edi+0x3]
  414582:	enter  0x2b86,0x5a
  414586:	lahf   
  414587:	add    DWORD PTR [esi],ecx
  414589:	dec    edi
  41458a:	inc    ecx
  41458b:	mov    ebp,0x9c8925f7
  414590:	inc    ebp
  414591:	cmc    
  414592:	mov    esp,0xfd14c5db
  414597:	push   edx
  414598:	out    0xe0,eax
  41459a:	cmp    eax,0xb2e8b644
  41459f:	shl    BYTE PTR [edx+0x774ae728],cl
  4145a5:	mov    edx,edx
  4145a7:	sub    al,0x19
  4145a9:	xor    eax,0x75a30f76
  4145ae:	jae    0x4145fb
  4145b0:	mov    dh,0x7a
  4145b2:	shl    DWORD PTR [ebx-0x5e],1
  4145b5:	jne    0x41455b
  4145b7:	sub    BYTE PTR [edi],dl
  4145b9:	inc    esi
  4145ba:	push   ecx
  4145bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bc:	mov    ebx,0x8c3c423c
  4145c1:	(bad)  
  4145c2:	icebp  
  4145c3:	inc    ebp
  4145c4:	jp     0x414575
  4145c6:	or     eax,0x86fb2f4a
  4145cb:	ror    DWORD PTR [ebx],1
  4145cd:	dec    edi
  4145ce:	mov    bh,0x91
  4145d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d1:	sbb    eax,0x5d5b3bb2
  4145d6:	sbb    eax,0x81d5c8d9
  4145db:	inc    esi
  4145dc:	sub    esi,DWORD PTR [esi]
  4145de:	xchg   ebx,eax
  4145df:	xor    al,0x80
  4145e1:	xchg   esp,eax
  4145e2:	xchg   esi,eax
  4145e3:	mov    edx,0x710ce06
  4145e8:	sub    al,0x33
  4145ea:	call   0xc17d9b45
  4145ef:	retf   0xa29c
  4145f2:	shl    DWORD PTR [edi],cl
  4145f4:	xor    BYTE PTR [esi-0xd440c2f],0xa1
  4145fb:	pop    eax
  4145fc:	ficomp WORD PTR [ebx+0x7b9332b4]
  414602:	dec    ecx
  414603:	cli    
  414604:	and    eax,0x7a0d58ea
  414609:	adc    BYTE PTR [eax+0x7e],dl
  41460c:	(bad)  
  41460e:	loop   0x4145fe
  414610:	xchg   ebx,eax
  414611:	adc    ebp,DWORD PTR [esi+0x4e]
  414614:	dec    esp
  414615:	xchg   ebx,eax
  414616:	in     eax,dx
  414617:	shl    DWORD PTR [edi-0x46],cl
  41461a:	cmc    
  41461b:	test   BYTE PTR [ecx],cl
  41461d:	pop    esp
  41461e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414620:	gs pop ebx
  414622:	ret    
  414623:	repz shr DWORD PTR [esi],0xaa
  414627:	inc    edi
  414628:	mov    gs,WORD PTR [eax-0x80]
  41462b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462c:	cmp    ebx,DWORD PTR ds:0x216a5f4d
  414632:	sbb    DWORD PTR [eax-0x54],ecx
  414635:	in     al,0x62
  414637:	add    DWORD PTR [esi+eax*8],0x3b26c186
  41463e:	dec    ebp
  41463f:	pushf  
  414640:	stc    
  414641:	dec    ecx
  414642:	jmp    0x4145e9
  414644:	out    0x6b,eax
  414646:	adc    al,dh
  414648:	cli    
  414649:	mov    DWORD PTR ds:0x8fefbab2,ebx
  41464f:	fld    st(0)
  414651:	mov    esi,0x236c4bcf
  414656:	cmp    al,0xd
  414658:	sbb    eax,0xd9d8f08b
  41465d:	add    BYTE PTR [edx],0xc6
  414660:	int3   
  414661:	sbb    eax,0x5ea59449
  414666:	aad    0xdb
  414668:	loopne 0x4146a1
  41466a:	mov    esi,0x10bd59b2
  41466f:	and    BYTE PTR [ebx+edi*4+0x64],dh
  414673:	das    
  414674:	cdq    
  414675:	(bad)  
  414676:	push   ecx
  414677:	fdiv   DWORD PTR ds:0xcc4c9d33
  41467d:	lds    esi,FWORD PTR [esi+0x77]
  414680:	outs   dx,BYTE PTR ds:[esi]
  414681:	fs stc 
  414683:	jbe    0x414605
  414685:	push   edx
  414686:	and    DWORD PTR [edi+0x27],ebp
  414689:	sbb    eax,0x112735b8
  41468e:	scas   al,BYTE PTR es:[edi]
  41468f:	sub    al,0x32
  414691:	add    DWORD PTR [edi-0xf11ca7f],esp
  414697:	lods   al,BYTE PTR ds:[esi]
  414698:	sbb    DWORD PTR [ebx+0x7ce37cde],esi
  41469e:	std    
  41469f:	push   ecx
  4146a0:	xlat   BYTE PTR ds:[ebx]
  4146a1:	in     eax,0x79
  4146a3:	ja     0x4146e9
  4146a5:	sub    al,0x28
  4146a7:	inc    edi
  4146a8:	fcomp  st(2)
  4146aa:	adc    al,0x29
  4146ac:	cmp    ecx,DWORD PTR [ecx+esi*4]
  4146af:	mov    bh,0x27
  4146b1:	inc    edx
  4146b2:	xor    eax,0xd14fb700
  4146b7:	mov    ebp,0xa52aedff
  4146bc:	adc    eax,0xf49fc603
  4146c1:	add    al,0xe1
  4146c3:	retf   0xcd5d
  4146c6:	mov    al,ds:0x873b0c96
  4146cb:	sbb    BYTE PTR [esi+0x11805ebc],bh
  4146d1:	loop   0x414731
  4146d3:	inc    ebp
  4146d4:	icebp  
  4146d5:	dec    edi
  4146d6:	lods   al,BYTE PTR ds:[esi]
  4146d7:	fsubr  st,st(1)
  4146d9:	sbb    esp,edi
  4146db:	cdq    
  4146dc:	xchg   edi,eax
  4146dd:	jae    0x4146c2
  4146df:	or     edx,DWORD PTR [edi-0x55]
  4146e2:	out    dx,al
  4146e3:	push   esi
  4146e4:	daa    
  4146e5:	stc    
  4146e6:	push   eax
  4146e7:	mov    eax,ds:0x615bb39f
  4146ec:	adc    DWORD PTR [edx+0x53],eax
  4146ef:	sahf   
  4146f0:	jl     0x41468a
  4146f2:	sub    al,0x88
  4146f4:	adc    BYTE PTR [ebp-0x2f02a99],bh
  4146fa:	cmp    bh,BYTE PTR [eax]
  4146fc:	pop    edi
  4146fd:	loop   0x414767
  4146ff:	sbb    BYTE PTR [eax-0x24547f93],bl
  414705:	mov    al,0x52
  414707:	jmp    0x414734
  414709:	sub    bh,dl
  41470b:	xchg   edi,eax
  41470c:	in     al,dx
  41470d:	shr    BYTE PTR [ebx],cl
  41470f:	and    ah,BYTE PTR [ebx]
  414711:	or     al,0x61
  414713:	fwait
  414714:	mov    DWORD PTR [edx-0x4a],esi
  414717:	sub    esp,ebp
  414719:	ret    
  41471a:	adc    ch,BYTE PTR [edx+0x79e45cd3]
  414720:	fadd   DWORD PTR ds:0x45158c83
  414726:	fsubrp st(5),st
  414728:	clc    
  414729:	and    ah,ch
  41472b:	and    dl,BYTE PTR [eax+ebx*8+0x4]
  41472f:	clc    
  414730:	mov    edx,0xc16e1318
  414735:	ret    0x1613
  414738:	dec    eax
  414739:	mov    ch,BYTE PTR [eax-0x11]
  41473c:	daa    
  41473d:	add    bl,BYTE PTR ds:0xf68f6147
  414743:	loopne 0x4146c9
  414745:	aad    0x15
  414747:	ror    BYTE PTR [edi+0x4bc7e72e],1
  41474d:	mov    ds,WORD PTR [ebx+0x2b]
  414750:	jmp    0xceba3396
  414755:	inc    esp
  414756:	imul   esp,DWORD PTR [ebp+0x1c],0x59
  41475a:	xchg   cl,bh
  41475c:	and    dl,ch
  41475e:	bound  ecx,QWORD PTR [ecx-0x68c9eedb]
  414764:	in     al,0x8a
  414766:	push   eax
  414767:	(bad)  
  414769:	mov    DWORD PTR [ebx+0x6f],eax
  41476c:	scas   al,BYTE PTR es:[edi]
  41476d:	xor    al,0xff
  41476f:	mov    BYTE PTR [edx],ch
  414771:	sbb    bh,BYTE PTR [esp+ebx*4+0x2b7b4f2e]
  414778:	outs   dx,BYTE PTR ds:[esi]
  414779:	test   DWORD PTR [eax+0x57189fc2],0x1034eec2
  414783:	pop    ebp
  414784:	js     0x41470a
  414786:	cmpps  xmm0,xmm1,0x19
  41478a:	es ja  0x4147b4
  41478d:	dec    ebp
  41478e:	in     al,0x1d
  414790:	mov    esp,DWORD PTR [edx+0x47794e70]
  414796:	push   ss
  414797:	dec    eax
  414798:	add    bl,BYTE PTR [ebx+eiz*2+0x5beeae31]
  41479f:	jl     0x414809
  4147a1:	call   0x8a05fe84
  4147a6:	adc    edi,edi
  4147a8:	mov    dh,dl
  4147aa:	mov    dl,BYTE PTR [ebx+0x17]
  4147ad:	jmp    0x9df1:0x97a44fbc
  4147b4:	cld    
  4147b5:	adc    ecx,eax
  4147b7:	xchg   edx,eax
  4147b8:	jecxz  0x414810
  4147ba:	jae    0x41473f
  4147bc:	jg     0x41480e
  4147be:	cmp    DWORD PTR [eax+ebp*8+0x75ea81dd],0x70bae4f3
  4147c9:	cmp    eax,0x272c0634
  4147ce:	clc    
  4147cf:	mov    esi,es
  4147d1:	(bad)  
  4147d2:	adc    esi,DWORD PTR [eax-0x4d]
  4147d5:	repz test eax,0xd8890233
  4147db:	jb     0x414764
  4147dd:	retf   
  4147de:	sbb    edx,ebx
  4147e0:	fwait
  4147e1:	add    bl,BYTE PTR [edx+0x7442b6d6]
  4147e7:	lahf   
  4147e8:	in     al,0xdc
  4147ea:	loopne 0x4147d4
  4147ec:	imul   esi,DWORD PTR ds:0x5375b191,0xffffffa3
  4147f3:	imul   edx,DWORD PTR [edi+0x78],0x57
  4147f7:	ins    BYTE PTR es:[edi],dx
  4147f8:	jns    0x41485f
  4147fa:	mov    esp,0xd41af889
  4147ff:	js     0x414849
  414801:	fst    QWORD PTR [ebp+0x4b338bfc]
  414807:	jnp    0x41482d
  414809:	adc    dl,BYTE PTR [ecx+0x1766d930]
  41480f:	xor    cl,BYTE PTR [ebx]
  414811:	popa   
  414812:	fsub   st(4),st
  414814:	es jp  0x4147af
  414817:	std    
  414818:	(bad)  
  414819:	lods   eax,DWORD PTR ds:[esi]
  41481a:	loopne 0x414845
  41481c:	jg     0x414833
  41481e:	add    ebx,DWORD PTR ss:[esi-0x6]
  414822:	or     BYTE PTR [edx+0x424cb4a2],dl
  414828:	dec    edi
  414829:	mov    edx,0x207685
  41482e:	pop    DWORD PTR [ebp-0x2c]
  414831:	inc    eax
  414832:	add    bl,BYTE PTR [ecx+eax*4+0x73f6e5c0]
  414839:	adc    BYTE PTR [esi+edx*1-0x1a],0xf
  41483e:	icebp  
  41483f:	sub    BYTE PTR [ecx-0x5cdac39b],bh
  414845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414847:	pop    edi
  414848:	xor    ecx,DWORD PTR ds:0xecac8e8b
  41484e:	cmp    al,0x9c
  414850:	push   0x9a2691d
  414855:	pop    edx
  414856:	pop    ss
  414857:	outs   dx,DWORD PTR ds:[esi]
  414858:	inc    esi
  414859:	mov    eax,DWORD PTR [esi+ebp*1+0x2c]
  41485d:	add    eax,0x9c458c53
  414862:	mov    WORD PTR [ebx-0x6429f2d9],ss
  414868:	inc    eax
  414869:	not    BYTE PTR [eax]
  41486b:	das    
  41486c:	pop    esi
  41486d:	daa    
  41486e:	aad    0x29
  414870:	enter  0xb09c,0x4a
  414874:	mov    ah,0x4e
  414876:	outs   dx,DWORD PTR ds:[esi]
  414877:	enter  0xb1ad,0xfe
  41487b:	aad    0x12
  41487d:	rcl    BYTE PTR [edi+0x11],1
  414880:	das    
  414881:	cmp    eax,0x10f45cb5
  414886:	mul    BYTE PTR [edi+ebx*1]
  414889:	out    dx,al
  41488a:	test   DWORD PTR [ebx+0x61],ecx
  41488d:	dec    ebp
  41488e:	mov    al,ds:0xe7a37b75
  414893:	xor    esi,DWORD PTR [eax+eax*8-0x78bce6af]
  41489a:	mov    ecx,0x9e0f37c1
  41489f:	adc    eax,ebx
  4148a1:	mov    edx,0x30a80578
  4148a7:	mov    dh,BYTE PTR [ebp+0x66]
  4148aa:	in     eax,dx
  4148ab:	cs pop edx
  4148ad:	cli    
  4148ae:	pop    esp
  4148af:	ins    DWORD PTR es:[edi],dx
  4148b0:	mov    esp,0xf7ce330c
  4148b5:	rol    DWORD PTR [esi],cl
  4148b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b8:	adc    esi,edi
  4148ba:	jmp    0xbf85fe1e
  4148bf:	lahf   
  4148c0:	popa   
  4148c1:	xchg   ebp,eax
  4148c2:	je     0x41489f
  4148c4:	mov    ecx,0x2561e056
  4148c9:	xchg   edx,eax
  4148ca:	xchg   DWORD PTR [edi-0x67],edx
  4148cd:	or     eax,0xe0c2b052
  4148d2:	jbe    0x414946
  4148d4:	mov    eax,0xf81cdaa2
  4148d9:	(bad)  
  4148da:	lea    eax,[ecx]
  4148dc:	cmp    al,0x79
  4148de:	ficomp DWORD PTR [eax+ecx*4+0x5f]
  4148e2:	outs   dx,DWORD PTR ds:[esi]
  4148e3:	cdq    
  4148e4:	sub    eax,0x7462452
  4148e9:	sbb    BYTE PTR [edi+0x8],0x1b
  4148ed:	inc    edi
  4148ee:	lea    esi,[esi]
  4148f0:	pop    ebx
  4148f1:	rcr    BYTE PTR [edx+ebp*8],0xb7
  4148f5:	iret   
  4148f6:	pusha  
  4148f7:	fisubr WORD PTR ds:0x32460b35
  4148fd:	ror    cl,cl
  4148ff:	inc    esi
  414900:	fild   DWORD PTR ds:[edi]
  414903:	sbb    esp,DWORD PTR [ebp+0x30]
  414906:	adc    cl,bh
  414908:	xlat   BYTE PTR ds:[ebx]
  414909:	pop    edi
  41490a:	fwait
  41490b:	test   al,0x79
  41490d:	ror    dh,1
  41490f:	sub    ecx,DWORD PTR [eax+eiz*2]
  414912:	mov    ah,0x46
  414914:	push   esi
  414915:	mov    eax,ds:0x9f6b3cea
  41491a:	mov    ebx,DWORD PTR ds:0xd3c31929
  414920:	adc    edi,DWORD PTR [esi-0x29eac81e]
  414926:	add    ch,dl
  414928:	mov    ebp,0x94ab321a
  41492d:	push   esi
  41492e:	mov    ecx,edi
  414930:	fsubr  QWORD PTR [ebx-0x75]
  414933:	repnz in eax,dx
  414935:	sbb    esp,DWORD PTR [edx]
  414937:	mov    ebx,0x86a46d59
  41493d:	leave  
  41493e:	das    
  41493f:	and    DWORD PTR [edi+0x64d67c0c],ebp
  414945:	mov    edi,DWORD PTR [ecx-0x3f467871]
  41494b:	sub    esi,DWORD PTR [edx+0x69]
  41494e:	leave  
  41494f:	lods   eax,DWORD PTR ds:[esi]
  414950:	je     0x41497a
  414952:	xchg   ecx,eax
  414953:	jnp    0x4148dd
  414955:	or     al,dl
  414957:	repnz in eax,dx
  414959:	mov    dl,0xce
  41495b:	or     eax,0x88d332dc
  414960:	inc    esi
  414961:	enter  0x6881,0x8e
  414965:	stos   DWORD PTR es:[edi],eax
  414966:	cdq    
  414967:	sub    esp,DWORD PTR [esp+eax*2+0x8425026]
  41496e:	mov    ds:0x317fe57a,al
  414973:	xor    ah,0xf5
  414976:	jo     0x41495e
  414978:	xor    eax,0x35cd8fec
  41497d:	jbe    0x41497d
  41497f:	in     eax,0x9b
  414981:	fwait
  414982:	and    eax,0x55d0c4a1
  414987:	xchg   ecx,eax
  414988:	int3   
  414989:	push   eax
  41498a:	push   ebx
  41498b:	or     ebp,DWORD PTR [edi+0x71]
  41498e:	fwait
  41498f:	cmp    eax,0x148bab7e
  414994:	sub    BYTE PTR [ebx],0xd6
  414997:	inc    ebp
  414998:	sub    esi,DWORD PTR [ebp-0x30e3b260]
  41499e:	xchg   BYTE PTR [edx],ah
  4149a0:	(bad)  [ebp+0x7a49b45b]
  4149a6:	mov    esi,0x90a99fe0
  4149ab:	mov    eax,0xe40b7b6a
  4149b0:	xchg   esp,eax
  4149b1:	mov    bl,0x83
  4149b3:	cmp    ah,BYTE PTR [esi+0x65b9f5cf]
  4149b9:	or     ebp,DWORD PTR [edi]
  4149bb:	popf   
  4149bc:	cli    
  4149bd:	and    eax,0xecd9e820
  4149c2:	jmp    0x93cb33a2
  4149c7:	sahf   
  4149c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c9:	pop    esi
  4149ca:	jno    0x414953
  4149cc:	or     DWORD PTR [ebp+0x1c],0x57
  4149d0:	push   es
  4149d1:	mov    dl,0x34
  4149d3:	jecxz  0x4149aa
  4149d5:	int3   
  4149d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d7:	jmp    FWORD PTR [esi-0x41785a19]
  4149dd:	imul   ebx,DWORD PTR [edi],0x74a435f8
  4149e3:	adc    eax,DWORD PTR [edx-0x76]
  4149e6:	mov    bl,0x9
  4149e8:	test   DWORD PTR [edx+0x1b413909],ecx
  4149ee:	and    BYTE PTR [ecx+0x1ff0e6db],ch
  4149f4:	ss jno 0x4149b5
  4149f7:	in     eax,0xa7
  4149f9:	in     al,0x2c
  4149fb:	mov    bl,0x8f
  4149fd:	retf   0x9c1f
  414a00:	and    ebp,DWORD PTR [edx-0x6ba9ae43]
  414a06:	xchg   ebp,eax
  414a07:	push   ecx
  414a08:	sub    DWORD PTR [ecx+0x63],esp
  414a0b:	mov    ah,0x2c
  414a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0e:	test   eax,0x66c7e89c
  414a13:	sti    
  414a14:	mov    esi,edi
  414a16:	cmp    ch,ah
  414a18:	sbb    DWORD PTR [ebp+0x6],0xf02c5883
  414a1f:	out    dx,al
  414a20:	cld    
  414a21:	cmp    edx,DWORD PTR [edx]
  414a23:	repnz sbb ah,BYTE PTR [eax-0x4a10250c]
  414a2a:	shl    bh,0x29
  414a2d:	sub    DWORD PTR [ebx-0x43],0x71
  414a31:	cdq    
  414a32:	jns    0x414a8b
  414a34:	loopne 0x414a05
  414a36:	shr    BYTE PTR [edx-0x6c],0xad
  414a3a:	inc    ebp
  414a3b:	sbb    dh,BYTE PTR [ebp+0x6bb92dde]
  414a41:	pop    ds
  414a42:	cmc    
  414a43:	sub    eax,0x7b682c2e
  414a48:	es ds int 0x33
  414a4c:	test   ah,0x62
  414a4f:	dec    ebp
  414a50:	xchg   edi,eax
  414a51:	(bad)  
  414a52:	out    0x8a,eax
  414a54:	aad    0xeb
  414a56:	aas    
  414a57:	cmp    eax,0x99bc8ebe
  414a5c:	sbb    eax,0x91172f1e
  414a61:	imul   ebx
  414a63:	mov    dl,0xe4
  414a65:	xlat   BYTE PTR ds:[ebx]
  414a66:	inc    esp
  414a67:	cs pop es
  414a69:	jb     0x414a55
  414a6b:	mov    ebp,0x17c34032
  414a70:	test   eax,0xf1f15108
  414a75:	jmp    0xcf78:0x84386beb
  414a7c:	or     DWORD PTR [edi-0x7883c9d6],ebp
  414a82:	das    
  414a83:	dec    edx
  414a84:	jp     0x414a57
  414a86:	sbb    eax,0x433aef43
  414a8b:	in     al,dx
  414a8c:	mov    cl,0x36
  414a8e:	int    0xd
  414a90:	std    
  414a91:	dec    edi
  414a92:	icebp  
  414a93:	(bad)  [edx]
  414a95:	hlt    
  414a96:	mov    ?,WORD PTR ds:0x1d8c41a5
  414a9c:	fistp  WORD PTR [ebx]
  414a9e:	lds    ebp,FWORD PTR [ebx+0x0]
  414aa1:	mov    eax,0x81d4fcee
  414aa6:	popf   
  414aa7:	xor    al,BYTE PTR [ebp+0xdfe9be0]
  414aad:	loop   0x414aee
  414aaf:	out    dx,eax
  414ab0:	pop    ebx
  414ab1:	pop    ebp
  414ab2:	and    al,0x3f
  414ab4:	outs   dx,DWORD PTR ds:[esi]
  414ab5:	nop
  414ab6:	mov    esi,0xff1f9e2c
  414abb:	icebp  
  414abc:	fcomp  QWORD PTR [eax+eax*8]
  414abf:	neg    BYTE PTR [edi-0x44b015f3]
  414ac5:	test   al,0x42
  414ac7:	cmp    BYTE PTR [ebp+0x7a],dl
  414aca:	int3   
  414acb:	mov    dh,BYTE PTR [edx-0x3f]
  414ace:	(bad)  
  414acf:	inc    ebx
  414ad0:	jb     0x414aa6
  414ad2:	arpl   WORD PTR [edx-0x53],bx
  414ad5:	and    DWORD PTR ds:0x3fba8031,0xffffffc5
  414adc:	jne    0x414aa3
  414ade:	pop    ebx
  414adf:	sbb    al,BYTE PTR [ecx-0x3b]
  414ae2:	pop    ebp
  414ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ae4:	push   ebp
  414ae5:	xor    ebp,DWORD PTR [ebx-0x69f9a56b]
  414aeb:	xchg   DWORD PTR [ebx-0x15],eax
  414aee:	imul   esi,edx,0x854fe215
  414af4:	inc    esi
  414af5:	and    DWORD PTR es:[edx+0x48],esi
  414af9:	loopne 0x414ab3
  414afb:	out    dx,al
  414afc:	leave  
  414afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414afe:	out    0x12,al
  414b00:	or     BYTE PTR [ebx],0x85
  414b03:	sub    edi,DWORD PTR [esi+edx*1-0xd3684ba]
  414b0a:	shl    BYTE PTR [esp+eax*1+0x32bbc15],0x68
  414b12:	test   eax,0xb33737d1
  414b17:	cdq    
  414b18:	xlat   BYTE PTR ds:[ebx]
  414b19:	mov    edi,0xcbfbec3e
  414b1e:	jecxz  0x414ad2
  414b20:	retf   
  414b21:	ds retf 0x5779
  414b25:	pop    ds
  414b26:	aam    0x33
  414b28:	mov    ds:0xb61db717,al
  414b2d:	sbb    DWORD PTR [esi+0x30],esi
  414b30:	loopne 0x414b46
  414b32:	sbb    BYTE PTR [ebx+eax*4-0x33],al
  414b36:	xchg   edi,eax
  414b37:	out    dx,eax
  414b38:	(bad)  
  414b39:	push   ss
  414b3a:	cmp    cl,al
  414b3c:	pop    ebp
  414b3d:	push   eax
  414b3e:	lods   eax,DWORD PTR ds:[esi]
  414b3f:	adc    esi,edi
  414b41:	retf   
  414b42:	pop    edx
  414b43:	(bad)  
  414b44:	in     eax,dx
  414b45:	sbb    cl,dl
  414b47:	int    0xb2
  414b49:	fadd   st,st(2)
  414b4b:	xchg   DWORD PTR [ebx+0x27c6d81b],eax
  414b51:	mov    al,ds:0xbe8a725
  414b56:	xchg   edi,eax
  414b57:	adc    bl,BYTE PTR [esi-0x19]
  414b5a:	jnp    0x414b7c
  414b5c:	popa   
  414b5d:	jle    0x414b9d
  414b5f:	xchg   ebp,eax
  414b60:	pop    ecx
  414b61:	sbb    al,0x67
  414b63:	retf   
  414b64:	(bad)  
  414b65:	enter  0x82d,0x75
  414b69:	push   edx
  414b6a:	repz adc BYTE PTR [ebx+0x17],0x4
  414b6f:	mov    ebx,0x8b4c0f5c
  414b74:	mov    ch,0x7e
  414b76:	enter  0x7f24,0x51
  414b7a:	xor    al,0x88
  414b7c:	adc    BYTE PTR [eax],bh
  414b7e:	test   DWORD PTR [esi-0x36f5b72a],edx
  414b84:	ins    DWORD PTR es:[edi],dx
  414b85:	pop    ds
  414b86:	sar    DWORD PTR ds:0x62f9606d,1
  414b8c:	icebp  
  414b8d:	cs push 0x12a713d0
  414b93:	xchg   BYTE PTR [edx+ebp*4-0x5c04820a],bh
  414b9a:	les    edi,FWORD PTR [edx-0x1ec21a6b]
  414ba0:	adc    bh,BYTE PTR gs:[ecx]
  414ba3:	loop   0x414b93
  414ba5:	dec    ecx
  414ba6:	pop    ecx
  414ba7:	add    ebx,DWORD PTR [ecx+0x33fd0ba1]
  414bad:	repnz xchg esp,eax
  414baf:	inc    eax
  414bb0:	loop   0x414b7a
  414bb2:	xor    edi,ecx
  414bb4:	inc    edi
  414bb5:	shl    edi,cl
  414bb7:	or     ebp,DWORD PTR [eax+0x457e1082]
  414bbd:	ret    
  414bbe:	retf   
  414bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc0:	mov    DWORD PTR [esi-0x58314429],ecx
  414bc6:	mov    bh,0xad
  414bc8:	cmp    BYTE PTR [edi+0x126cd277],al
  414bce:	cmp    ah,ch
  414bd0:	cmp    al,0x69
  414bd2:	jmp    0x414b8e
  414bd4:	into   
  414bd5:	leave  
  414bd6:	outs   dx,BYTE PTR ds:[esi]
  414bd7:	fwait
  414bd8:	int    0xb4
  414bda:	pop    edx
  414bdb:	and    BYTE PTR [ebx+0x26],cl
  414bde:	cmp    BYTE PTR [edx],al
  414be0:	std    
  414be1:	repz xchg ebp,eax
  414be3:	mov    ds:0x64bcec37,al
  414be8:	or     DWORD PTR [edi+0xb],ebx
  414beb:	mov    ah,0x30
  414bed:	xchg   BYTE PTR [edx-0x95ff9fa],bl
  414bf3:	imul   ebx,DWORD PTR [esi*1-0x6b5ac248],0x51
  414bfb:	add    BYTE PTR [eax+0x38],0xe5
  414bff:	leave  
  414c00:	push   esp
  414c01:	add    al,0xf1
  414c03:	popa   
  414c04:	bnd jl 0x414b88
  414c07:	call   0xe96e1f91
  414c0c:	xchg   edi,eax
  414c0d:	pop    es
  414c0e:	inc    ecx
  414c0f:	sub    eax,0x1189b678
  414c14:	(bad)  
  414c15:	dec    edi
  414c16:	or     eax,0x9c208ebe
  414c1b:	xchg   DWORD PTR [eax-0x72c8cf6a],ecx
  414c21:	jmp    0xa9da:0x53ae1756
  414c28:	dec    eax
  414c29:	adc    eax,0x283e6b6d
  414c2e:	int    0x2f
  414c30:	sahf   
  414c31:	stos   DWORD PTR es:[edi],eax
  414c32:	xchg   ebx,eax
  414c33:	clc    
  414c34:	imul   esp,DWORD PTR [edi+0x5a11d862],0x28da7c0d
  414c3e:	xchg   BYTE PTR [esi+0x25],bl
  414c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c42:	out    dx,eax
  414c43:	idiv   DWORD PTR [ecx-0x38]
  414c46:	nop
  414c47:	mov    ds:0x2a1bd6d4,al
  414c4c:	out    0x6b,al
  414c4e:	lahf   
  414c4f:	idiv   BYTE PTR [edx]
  414c51:	out    dx,eax
  414c52:	push   ss
  414c53:	push   0x79
  414c55:	inc    ecx
  414c56:	pop    es
  414c57:	out    dx,eax
  414c58:	int    0xb7
  414c5a:	mov    bh,0xbc
  414c5c:	pop    edx
  414c5d:	dec    esp
  414c5e:	or     esp,DWORD PTR [eax+edi*2-0x2fceb117]
  414c65:	lock cli 
  414c67:	sub    eax,0xaf3f842e
  414c6c:	and    eax,0x83bafdcb
  414c71:	jg     0x414c84
  414c73:	push   DWORD PTR [ebp-0x32]
  414c76:	popf   
  414c77:	xor    al,0x2c
  414c79:	cld    
  414c7a:	jge    0x414cb9
  414c7c:	and    esi,DWORD PTR [eax+ebp*4-0x2a]
  414c80:	mov    esp,ebx
  414c82:	shl    BYTE PTR [eax-0x5c],cl
  414c85:	mov    esp,0xfe89a5ea
  414c8a:	mov    al,0x18
  414c8c:	push   edx
  414c8d:	pop    ecx
  414c8e:	cwde   
  414c8f:	(bad)  
  414c90:	shr    ebp,1
  414c92:	mov    ch,0x65
  414c94:	add    BYTE PTR [ebx-0x584aae5b],cl
  414c9a:	push   0xffffffd5
  414c9c:	lods   eax,DWORD PTR ds:[esi]
  414c9d:	or     BYTE PTR [eax+0xd94f504],0xd3
  414ca4:	or     BYTE PTR ds:0xc49091b2,bh
  414caa:	inc    ebp
  414cab:	dec    edi
  414cac:	jmp    0x414d2a
  414cae:	xchg   ecx,eax
  414caf:	xor    al,0x7c
  414cb1:	lock call 0xa5009077
  414cb7:	int    0x70
  414cb9:	xchg   BYTE PTR [ecx+ecx*4],al
  414cbc:	sbb    BYTE PTR [ecx+0x39],ah
  414cbf:	stc    
  414cc0:	or     eax,0x170a91c2
  414cc5:	rol    BYTE PTR ds:0xef7b35d0,1
  414ccb:	push   cs
  414ccc:	inc    esp
  414ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cce:	retf   0x8d38
  414cd1:	mov    ch,0x2e
  414cd3:	fsub   DWORD PTR [ebx]
  414cd5:	fwait
  414cd6:	dec    ecx
  414cd7:	xor    BYTE PTR [edi+0x41765355],ah
  414cdd:	into   
  414cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cdf:	popf   
  414ce0:	xchg   ebp,eax
  414ce1:	xchg   edi,eax
  414ce2:	pop    ds
  414ce3:	jmp    0xf011:0xbc6d562f
  414cea:	rcl    DWORD PTR [edi],0xc1
  414ced:	adc    al,0xff
  414cef:	or     DWORD PTR ds:0x89ff0fc9,0xffffff82
  414cf6:	repz in al,dx
  414cf8:	pop    ds
  414cf9:	and    DWORD PTR ds:0x891bad21,0x8fd73d03
  414d03:	push   0xbe2175b1
  414d08:	push   edx
  414d09:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d0b:	mov    ah,0xc7
  414d0d:	push   ecx
  414d0e:	jmp    0xad0:0xb908fde5
  414d15:	sbb    edi,ecx
  414d17:	data16 loop 0x414cff
  414d1a:	retf   
  414d1b:	das    
  414d1c:	add    BYTE PTR [ecx-0x61],bh
  414d1f:	into   
  414d20:	fwait
  414d21:	sub    al,0x2f
  414d23:	loopne 0x414cf6
  414d25:	sub    bh,0x52
  414d28:	or     al,0x93
  414d2a:	(bad)  
  414d2b:	call   0xc7d2be12
  414d30:	or     DWORD PTR [eax+eax*8-0x4ac52905],esp
  414d37:	or     DWORD PTR [ebx-0x4fbdd199],ecx
  414d3d:	mov    edi,0x99202ef4
  414d42:	add    al,0x58
  414d44:	xor    al,0xa9
  414d46:	inc    edi
  414d47:	fwait
  414d48:	jmp    0x7b791bfd
  414d4d:	ret    0xc9a6
  414d50:	pop    ss
  414d51:	mov    ch,0xe9
  414d53:	aad    0xf9
  414d55:	lea    esi,[esi+ecx*8+0x5c]
  414d59:	test   BYTE PTR [ebx-0x538a69be],0xfd
  414d60:	add    DWORD PTR [ecx+edi*8-0x4d],eax
  414d64:	adc    BYTE PTR [ebp-0x7e],0xcd
  414d68:	cmp    bh,bl
  414d6a:	and    bl,BYTE PTR [esi-0x2c]
  414d6d:	in     al,dx
  414d6e:	inc    esi
  414d6f:	jmp    0x414dbd
  414d71:	xchg   edx,eax
  414d72:	pop    ss
  414d73:	gs lock int 0x30
  414d77:	scas   al,BYTE PTR es:[edi]
  414d78:	stos   DWORD PTR es:[edi],eax
  414d79:	push   esi
  414d7a:	mov    eax,ds:0xc7e19fe9
  414d7f:	int    0x13
  414d81:	inc    ebx
  414d82:	and    bl,BYTE PTR [ebp-0x7534b666]
  414d88:	aad    0x81
  414d8a:	mov    eax,ds:0x80cdf414
  414d8f:	jmp    0x733eed0f
  414d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d95:	sbb    DWORD PTR es:[ecx],ebx
  414d98:	imul   eax,esi,0x3f
  414d9b:	inc    esp
  414d9c:	popf   
  414d9d:	out    0xde,eax
  414d9f:	std    
  414da0:	in     al,dx
  414da1:	mov    ds:0x71ebf8fb,al
  414da6:	xlat   BYTE PTR ds:[ebx]
  414da7:	test   al,0xb9
  414da9:	out    dx,eax
  414daa:	shr    DWORD PTR [ecx-0x7eced119],1
  414db0:	add    al,0x53
  414db2:	adc    BYTE PTR [ebx],ch
  414db4:	mov    bh,bl
  414db6:	aam    0xa8
  414db8:	mov    dl,0x3c
  414dba:	inc    esi
  414dbb:	pusha  
  414dbc:	inc    esp
  414dbd:	ret    
  414dbe:	cli    
  414dbf:	or     edx,DWORD PTR [ebx+edx*4]
  414dc2:	xchg   edi,eax
  414dc3:	cmp    ah,BYTE PTR [eax+ecx*8-0x7e6fc398]
  414dca:	cmp    DWORD PTR [edx],esi
  414dcc:	inc    eax
  414dcd:	js     0x414e40
  414dcf:	jns    0x414e4b
  414dd1:	je     0x414e4c
  414dd3:	inc    edx
  414dd4:	sub    ch,BYTE PTR [ebp+0x49]
  414dd7:	aam    0xae
  414dd9:	inc    eax
  414dda:	sti    
  414ddb:	jo     0x414df1
  414ddd:	loopne 0x414d9c
  414ddf:	shl    DWORD PTR [edi-0x44],1
  414de2:	jae    0x414e21
  414de4:	xor    BYTE PTR [ecx+0x63],bh
  414de7:	mov    ah,0xdd
  414de9:	mov    edi,DWORD PTR ds:0xc12f2afb
  414def:	inc    ecx
  414df0:	xchg   ebp,eax
  414df1:	mov    eax,0x5c865c7e
  414df6:	enter  0x7ba,0x3b
  414dfa:	cdq    
  414dfb:	xchg   edi,eax
  414dfc:	mov    WORD PTR [ebp-0x4a],gs
  414dff:	xchg   BYTE PTR [ecx+0x3c15526a],al
  414e05:	cmp    ch,BYTE PTR [ebx+0x4a]
  414e08:	mov    dl,0xbd
  414e0a:	das    
  414e0b:	jmp    0x414e61
  414e0d:	dec    esp
  414e0e:	bound  edi,QWORD PTR [edi-0x2b]
  414e11:	loope  0x414e07
  414e13:	rol    BYTE PTR [ecx+0x49071e87],0x64
  414e1a:	pop    edx
  414e1b:	hlt    
  414e1c:	adc    DWORD PTR [esi],edi
  414e1e:	push   0xffffffed
  414e20:	sbb    ah,bh
  414e22:	mov    esp,0x768098b4
  414e27:	in     al,dx
  414e28:	call   0xb770b879
  414e2d:	loop   0x414e99
  414e2f:	add    dl,BYTE PTR ss:[esi-0xd]
  414e33:	xchg   esi,eax
  414e34:	pop    esi
  414e35:	out    0x9d,eax
  414e37:	pop    ebx
  414e38:	xlat   BYTE PTR ds:[ebx]
  414e39:	jnp    0x414e77
  414e3b:	mov    BYTE PTR [ecx+0x3dd0ef35],al
  414e41:	pop    ebx
  414e42:	mov    ch,0x22
  414e44:	sub    al,0x82
  414e46:	fisttp WORD PTR [ebx]
  414e48:	inc    ecx
  414e49:	xchg   esi,eax
  414e4a:	nop
  414e4b:	jmp    0x414eb9
  414e4d:	out    0x8b,al
  414e4f:	mov    esp,0x3272f38e
  414e54:	push   0x5752080e
  414e59:	rol    DWORD PTR [edi+0x70],cl
  414e5c:	jmp    0x414e54
  414e5e:	mov    bl,0x26
  414e60:	aad    0x86
  414e62:	mov    cl,0x2a
  414e64:	lds    esp,FWORD PTR [edx+0x96117b9]
  414e6a:	ficom  WORD PTR [ecx-0x7154bb63]
  414e70:	pushf  
  414e71:	shr    DWORD PTR [ecx],cl
  414e73:	xchg   bl,bh
  414e75:	scas   eax,DWORD PTR es:[edi]
  414e76:	ja     0x414ebf
  414e78:	mov    ?,WORD PTR [esi+0x175bb70a]
  414e7e:	test   BYTE PTR [ebx+0x4f084029],ah
  414e84:	cdq    
  414e85:	int    0x94
  414e87:	mov    ebp,0xa546e9bb
  414e8c:	dec    esi
  414e8d:	mov    bh,BYTE PTR [edi]
  414e8f:	in     al,dx
  414e90:	xor    DWORD PTR [eax],ecx
  414e92:	(bad)  
  414e93:	in     al,dx
  414e94:	(bad)  
  414e95:	sbb    esi,edx
  414e97:	std    
  414e98:	add    ebp,esp
  414e9a:	or     eax,0x2378720
  414e9f:	cmc    
  414ea0:	clc    
  414ea1:	jp     0x414ea7
  414ea3:	je     0x414edc
  414ea5:	das    
  414ea6:	push   edi
  414ea7:	ret    
  414ea8:	aad    0x24
  414eaa:	and    BYTE PTR [edi],dl
  414eac:	sahf   
  414ead:	test   eax,0xdf1489e7
  414eb2:	jae    0x414e5b
  414eb4:	push   cs
  414eb5:	ret    
  414eb6:	and    DWORD PTR [esi-0x5],esi
  414eb9:	mov    bl,0xd0
  414ebb:	inc    esp
  414ebc:	aad    0x10
  414ebe:	int    0x28
  414ec0:	mov    ebx,0xf87216e6
  414ec5:	std    
  414ec6:	arpl   WORD PTR [edi-0x46],bx
  414ec9:	cld    
  414eca:	(bad)  
  414ecb:	out    dx,eax
  414ecc:	mov    esi,DWORD PTR [ecx+0x3b]
  414ecf:	leave  
  414ed0:	mov    esp,0x593ba223
  414ed5:	or     edx,edi
  414ed7:	jl     0x414f22
  414ed9:	fwait
  414eda:	mov    edx,0x3b36a846
  414edf:	xor    eax,0x1d56e812
  414ee4:	cmp    al,0x1b
  414ee6:	sbb    eax,0xf19d8680
  414eeb:	fmul   QWORD PTR [edi+0x4e8382ee]
  414ef1:	rcl    BYTE PTR [edi-0x31090f3f],0xa1
  414ef8:	rcr    DWORD PTR [ebx+0x11a2f3e9],cl
  414efe:	arpl   WORD PTR [ecx],dx
  414f00:	sbb    DWORD PTR [eax],esp
  414f02:	push   ecx
  414f03:	xchg   BYTE PTR [ecx],cl
  414f05:	xor    BYTE PTR [ecx-0x55],0xaf
  414f09:	clc    
  414f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0b:	push   0xffffffc6
  414f0d:	sbb    eax,0x2da3b62a
  414f12:	mov    bl,0x48
  414f14:	sti    
  414f15:	sub    eax,0x351b6bbe
  414f1a:	aad    0xa1
  414f1c:	pop    ss
  414f1d:	aad    0x4b
  414f1f:	sar    cl,cl
  414f21:	push   esi
  414f22:	add    DWORD PTR [eax+0x1b607cd1],edi
  414f28:	and    BYTE PTR [eax+ebx*8+0x2f77308b],dh
  414f2f:	sar    DWORD PTR [esi],1
  414f31:	adc    al,0x8b
  414f33:	jmp    0xe772:0x5f890158
  414f3a:	call   0x7ac9:0x819340d0
  414f41:	inc    edi
  414f42:	add    al,0xdf
  414f44:	cmp    eax,0x668cb1a7
  414f49:	jp     0x414ef8
  414f4b:	cwde   
  414f4c:	mov    BYTE PTR [ebp+0x72d344b1],al
  414f52:	lds    esp,FWORD PTR [edx+eiz*1-0x169112b9]
  414f59:	ror    BYTE PTR [ecx-0x3],0xab
  414f5d:	add    al,0x8e
  414f5f:	pushf  
  414f60:	pusha  
  414f61:	and    DWORD PTR [ecx+0x2c],esi
  414f64:	and    eax,0xcd8a00c6
  414f69:	frstor [ecx+0x74a35232]
  414f6f:	cmp    BYTE PTR [ecx-0x1cccff76],bh
  414f75:	cmp    BYTE PTR [ebx],0x32
  414f78:	cmp    BYTE PTR [edx+0x68f86d5a],bl
  414f7e:	mov    al,ds:0x5cac5668
  414f83:	test   DWORD PTR [ecx-0x359341d3],eax
  414f89:	fadd   st(1),st
  414f8b:	sub    bh,al
  414f8d:	fstp   QWORD PTR [edi]
  414f8f:	das    
  414f90:	cdq    
  414f91:	ror    dh,0x3b
  414f94:	and    bl,ch
  414f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f97:	add    al,0xe8
  414f99:	push   esp
  414f9a:	call   FWORD PTR [eax]
  414f9c:	mov    bh,0x83
  414f9e:	cmc    
  414f9f:	lahf   
  414fa0:	adc    al,0xbc
  414fa2:	lods   al,BYTE PTR ds:[esi]
  414fa3:	repz inc esp
  414fa5:	cdq    
  414fa6:	loopne 0x415002
  414fa8:	ret    0xa746
  414fab:	aam    0xa0
  414fad:	sub    BYTE PTR [ecx+0x48],dl
  414fb0:	mov    eax,ds:0x43d6b554
  414fb5:	daa    
  414fb6:	mov    bl,0xf4
  414fb8:	pop    ss
  414fb9:	mov    ah,0xd5
  414fbb:	lods   eax,DWORD PTR ds:[esi]
  414fbc:	in     al,dx
  414fbd:	sbb    DWORD PTR [ecx+0x43d3bade],0xffffffd0
  414fc4:	or     eax,0xab01de63
  414fc9:	adc    al,ch
  414fcb:	pop    ss
  414fcc:	jo     0x414f63
  414fce:	adc    eax,0x58879e36
  414fd3:	(bad)
  414fd6:	test   edi,eax
  414fd8:	mov    edx,ebp
  414fda:	fild   WORD PTR [ebx+0x4713afe6]
  414fe0:	add    eax,0x82307b5d
  414fe5:	lds    eax,FWORD PTR [ecx+0x3f]
  414fe8:	imul   esp,DWORD PTR [edi+0x35],0x1169f8a5
  414fef:	mov    dh,0xfb
  414ff1:	ins    BYTE PTR es:[edi],dx
  414ff2:	aam    0xee
  414ff4:	mov    BYTE PTR [ebp+ebp*8-0x7f],bl
  414ff8:	pusha  
  414ff9:	dec    edi
  414ffa:	jmp    0x414f84
  414ffc:	popf   
  414ffd:	sub    al,ah
  414fff:	in     al,0x22
  415001:	cmp    al,0xed
  415003:	mov    BYTE PTR [eax],al
  415005:	call   0x603b9d9a
  41500a:	and    bl,BYTE PTR [ecx-0xe]
  41500d:	dec    edi
  41500e:	cld    
  41500f:	je     0x415066
  415011:	xchg   edi,eax
  415012:	adc    DWORD PTR [edi+eax*4+0x61],ebx
  415016:	mov    ah,0x35
  415018:	popf   
  415019:	aad    0xa9
  41501b:	push   cs
  41501c:	mov    al,ds:0x7cb9fdc2
  415021:	mov    esi,DWORD PTR ds:[ebp-0x3e5650f5]
  415028:	loopne 0x414fcf
  41502a:	jns    0x415072
  41502c:	fs fmulp st(5),st
  41502f:	dec    ebp
  415030:	test   BYTE PTR [edi+eax*4],0x58
  415034:	xor    dh,BYTE PTR [ecx-0x4d2fb113]
  41503a:	xlat   BYTE PTR ds:[ebx]
  41503b:	aam    0x3b
  41503d:	rcr    cl,cl
  41503f:	leave  
  415040:	ins    BYTE PTR es:[edi],dx
  415041:	cwde   
  415042:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415044:	mov    al,0x49
  415046:	out    0xf2,al
  415048:	ja     0x41502a
  41504a:	pushf  
  41504b:	mov    ds:0xe0e1718f,eax
  415050:	stc    
  415051:	push   eax
  415052:	cdq    
  415053:	or     DWORD PTR ds:0x2990a17b,esi
  415059:	retf   0xb1ca
  41505c:	sub    al,0x79
  41505e:	in     al,dx
  41505f:	out    0x88,eax
  415061:	mov    bl,0x2c
  415063:	ins    DWORD PTR es:[edi],dx
  415064:	fsubr  st,st(7)
  415066:	ins    BYTE PTR es:[edi],dx
  415067:	sbb    BYTE PTR [ecx-0x1fe9e3f9],0xa1
  41506e:	push   esi
  41506f:	push   esp
  415070:	mov    DWORD PTR [edi-0x94b1fb5],ebx
  415076:	loope  0x415011
  415078:	in     eax,dx
  415079:	mov    bh,0x7e
  41507b:	add    DWORD PTR [ebp+0x72],ebp
  41507e:	add    eax,esi
  415080:	(bad)  
  415081:	push   0x6867ae66
  415086:	call   0xb192:0xd3b7e238
  41508d:	mov    eax,0x8236d29b
  415092:	xor    edi,DWORD PTR [esi]
  415094:	sbb    ebp,DWORD PTR [esi]
  415096:	sub    ebx,ecx
  415098:	test   edi,ebp
  41509a:	repz xchg bh,cl
  41509d:	dec    esi
  41509e:	sub    esp,edi
  4150a0:	rcl    BYTE PTR [esi+0x47],1
  4150a3:	mov    ds:0x6874f9b5,al
  4150a8:	stos   BYTE PTR es:[edi],al
  4150a9:	or     BYTE PTR [edi-0x20],al
  4150ac:	(bad)  [eax+ebp*1]
  4150af:	xor    eax,0x33025b6c
  4150b4:	(bad)  
  4150b5:	pop    esp
  4150b6:	popa   
  4150b7:	loope  0x41507a
  4150b9:	std    
  4150ba:	mov    cl,0x17
  4150bc:	pop    ecx
  4150bd:	js     0x4150a7
  4150bf:	push   ebx
  4150c0:	mov    al,0x8a
  4150c2:	outs   dx,BYTE PTR ds:[esi]
  4150c3:	adc    esp,DWORD PTR [eax]
  4150c5:	out    dx,al
  4150c6:	mov    ah,0x2a
  4150c8:	mov    cl,0xf0
  4150ca:	mov    bh,0x18
  4150cc:	mov    ch,0x57
  4150ce:	dec    esi
  4150cf:	mov    ?,WORD PTR [edx]
  4150d1:	fnstenv ds:0xa9bde36f
  4150d7:	ds push edi
  4150d9:	xchg   edx,eax
  4150da:	push   cs
  4150db:	neg    DWORD PTR [ebp-0x2df22aa0]
  4150e1:	shl    BYTE PTR [ecx+0x2389acb3],0x6
  4150e8:	cmc    
  4150e9:	lar    edi,si
  4150ec:	int    0xfe
  4150ee:	mov    ds:0xc9f43c0c,al
  4150f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150f4:	(bad)  
  4150f6:	fcom   DWORD PTR [esi-0x7a98d0a1]
  4150fc:	test   bh,ch
  4150fe:	fs adc eax,0x223e023d
  415104:	add    BYTE PTR [edx-0x3e669562],ah
  41510a:	and    ch,BYTE PTR [ecx]
  41510c:	lds    ebx,FWORD PTR [esi]
  41510e:	fwait
  41510f:	sbb    DWORD PTR [ebx+0x58dba894],ecx
  415115:	xchg   ecx,eax
  415116:	xlat   BYTE PTR ds:[ebx]
  415117:	sbb    edx,DWORD PTR [eax]
  415119:	mov    DWORD PTR [esp+ecx*2+0x4e],0x10e9155
  415121:	sar    bh,cl
  415123:	out    0x30,eax
  415125:	mov    esi,0x2245a042
  41512a:	or     al,0xf2
  41512c:	ja     0x4150e3
  41512e:	jg     0x4151a3
  415130:	add    DWORD PTR [ecx+0x53],esp
  415133:	push   0x2c689e71
  415138:	stos   BYTE PTR es:[edi],al
  415139:	mov    ebp,0x4849cc9d
  41513e:	int3   
  41513f:	push   ebp
  415140:	dec    eax
  415141:	or     edx,DWORD PTR [edi*1+0x2d50faae]
  415148:	fdivr  DWORD PTR [ecx+0x10]
  41514b:	xchg   esi,eax
  41514c:	cld    
  41514d:	ins    DWORD PTR es:[edi],dx
  41514e:	xor    dh,BYTE PTR [ebx]
  415150:	jb     0x415105
  415152:	gs fdivp st(1),st
  415155:	sub    eax,0xe0a2e716
  41515a:	bound  edi,QWORD PTR [edi+edi*2+0x4063bda4]
  415161:	mov    dh,0xec
  415163:	popf   
  415164:	out    0x4f,eax
  415166:	dec    edx
  415167:	fisub  WORD PTR [ecx+0x40]
  41516a:	out    dx,al
  41516b:	adc    al,0x12
  41516d:	shl    cl,0x13
  415170:	push   ds
  415171:	es aam 0x96
  415174:	stos   DWORD PTR es:[edi],eax
  415175:	xchg   ebp,eax
  415176:	jl     0x415173
  415178:	push   ds
  415179:	mov    ?,WORD PTR [ecx]
  41517b:	sub    BYTE PTR [eax],cl
  41517d:	mov    bl,BYTE PTR [ebx]
  41517f:	cli    
  415180:	pop    edx
  415181:	xlat   BYTE PTR ds:[ebx]
  415182:	mov    esp,0xf21055b5
  415187:	fidiv  WORD PTR [ebx+0x4d2db042]
  41518d:	imul   ebx,DWORD PTR [ebx+edi*8-0x3e],0x22d63b7d
  415195:	(bad)  
  415196:	mov    ds:0xeca085b9,eax
  41519b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41519c:	sahf   
  41519d:	retf   0x941e
  4151a0:	test   eax,0x3b6cec55
  4151a5:	fdivr  st,st(7)
  4151a7:	or     DWORD PTR [eax-0x22db837b],0x5fa9fa5a
  4151b1:	rol    DWORD PTR ds:[ecx-0x7b180aa2],0x49
  4151b9:	jmp    0x4151ca
  4151bb:	jns    0x4151d4
  4151bd:	sbb    BYTE PTR [eax+0x6f],bl
  4151c0:	ja     0x4151df
  4151c2:	or     DWORD PTR [eax-0xf],0xffffffba
  4151c6:	adc    al,0x5e
  4151c8:	pop    ss
  4151c9:	int    0xde
  4151cb:	lea    edx,[eax-0x13]
  4151ce:	xchg   edx,eax
  4151cf:	cmp    al,0xd7
  4151d1:	sbb    edi,DWORD PTR [ebp-0x4]
  4151d4:	adc    BYTE PTR [edi+0x49],bh
  4151d7:	stc    
  4151d8:	retf   0xc495
  4151db:	adc    al,BYTE PTR [edx-0x2cfcf878]
  4151e1:	jp     0x415252
  4151e3:	push   ebx
  4151e4:	jb     0x4151fb
  4151e6:	int3   
  4151e7:	xlat   BYTE PTR ds:[ebx]
  4151e8:	leave  
  4151e9:	out    0xc1,al
  4151eb:	cmp    al,0x94
  4151ed:	call   0xc31ccb42
  4151f2:	mov    dl,0x53
  4151f4:	mov    ebp,0xa99097c2
  4151fa:	arpl   WORD PTR [eax],cx
  4151fc:	out    dx,eax
  4151fd:	sbb    al,0xad
  4151ff:	sbb    al,0x2e
  415201:	in     eax,dx
  415202:	(bad)
  415205:	js     0x4151cb
  415207:	or     eax,0x74f22cbd
  41520c:	mov    ah,0x70
  41520e:	and    ecx,edx
  415210:	inc    ebx
  415211:	popf   
  415212:	imul   ebx,edi,0x1997885d
  415218:	test   bl,ah
  41521a:	pop    eax
  41521b:	ja     0x4151ff
  41521d:	scas   al,BYTE PTR es:[edi]
  41521e:	sahf   
  41521f:	dec    ebx
  415220:	sti    
  415221:	iret   
  415222:	imul   ecx,DWORD PTR [ebp+0x71cec909],0x7e
  415229:	std    
  41522a:	ror    BYTE PTR [eax+0x6e],1
  41522d:	pop    edi
  41522e:	call   0xb835:0x3c928eda
  415235:	mov    BYTE PTR [esi-0x5bc3a5c1],ah
  41523b:	mov    dl,0xf2
  41523d:	pusha  
  41523e:	sbb    BYTE PTR [ebx+0x1b],ch
  415241:	pop    ecx
  415242:	mov    ecx,0x1da1d3cf
  415247:	nop
  415248:	mov    edi,0xe3595162
  41524d:	inc    ecx
  41524e:	pop    eax
  41524f:	mov    ah,0x76
  415251:	mov    ecx,0xf117a0d4
  415256:	scas   al,BYTE PTR es:[edi]
  415257:	jmp    0x23a909cd
  41525c:	pushf  
  41525d:	jmp    0x1396:0x4bf60586
  415264:	cwde   
  415265:	or     dl,BYTE PTR [edx-0x2aa3cda1]
  41526b:	sub    dh,BYTE PTR [edi]
  41526d:	xchg   ebx,eax
  41526e:	mov    edx,0xef5ba5ca
  415273:	push   esp
  415274:	or     al,0x72
  415276:	mov    eax,ds:0x8d48e6da
  41527b:	push   0x7d9bbeb7
  415280:	fcom   QWORD PTR [ecx-0x68]
  415283:	js     0x415291
  415285:	cwde   
  415286:	iret   
  415287:	pop    edi
  415288:	sbb    esp,eax
  41528a:	mov    BYTE PTR [edx+0x2041695d],ch
  415290:	dec    edi
  415291:	adc    BYTE PTR [edi-0x3a],ch
  415294:	les    ebp,FWORD PTR [eax-0x1aac58a5]
  41529a:	pop    es
  41529b:	sub    bl,al
  41529d:	leave  
  41529e:	pop    es
  41529f:	ds xchg esi,eax
  4152a1:	loop   0x415256
  4152a3:	mov    bl,0x37
  4152a5:	popa   
  4152a6:	and    bl,BYTE PTR gs:[ecx+0x4f]
  4152aa:	pop    esi
  4152ab:	sub    al,0xbe
  4152ad:	add    ah,ch
  4152af:	lahf   
  4152b0:	ror    bl,cl
  4152b2:	mov    dh,0xba
  4152b4:	cmp    al,BYTE PTR [edx-0x7093ca66]
  4152ba:	xor    al,0x73
  4152bc:	and    ecx,ebx
  4152be:	push   es
  4152bf:	cmp    bh,BYTE PTR [edx]
  4152c1:	repnz xchg ebx,eax
  4152c3:	mov    edx,0xa15d35cd
  4152c8:	imul   ebx,DWORD PTR [edx-0xa],0x10
  4152cc:	jmp    0x4273:0xdb7647ce
  4152d3:	imul   ebp,DWORD PTR [edx-0x3cd302bb],0xffffffff
  4152da:	xchg   ebx,eax
  4152db:	das    
  4152dc:	inc    ebx
  4152dd:	ds (bad) 
  4152df:	fadd   DWORD PTR [eax-0xd]
  4152e2:	aam    0x4d
  4152e4:	cmp    BYTE PTR [eax+ebx*4+0x173b1655],al
  4152eb:	out    dx,eax
  4152ec:	stos   BYTE PTR es:[edi],al
  4152ed:	sahf   
  4152ee:	xchg   esp,eax
  4152ef:	adc    edi,esp
  4152f1:	and    esi,DWORD PTR [edi]
  4152f3:	popf   
  4152f4:	xor    edi,esi
  4152f6:	inc    ebx
  4152f7:	xchg   esp,eax
  4152f8:	mov    cl,0x5
  4152fa:	inc    eax
  4152fb:	or     BYTE PTR [eax],dl
  4152fd:	xor    al,0x8a
  4152ff:	sti    
  415300:	or     eax,0x52578ac9
  415305:	das    
  415306:	sar    BYTE PTR [edi+0xd],0xd0
  41530a:	xor    eax,0x8ac65be2
  41530f:	pop    esi
  415310:	rcr    BYTE PTR [edx-0x1a],cl
  415313:	out    0x91,al
  415315:	hlt    
  415316:	mov    ebx,0x4ae765e2
  41531b:	jmp    0x415381
  41531d:	fistp  QWORD PTR [ecx]
  41531f:	xor    DWORD PTR [eax-0x1d],esi
  415322:	sar    BYTE PTR [esi+0x76],0x29
  415326:	test   BYTE PTR [edi+eax*1+0x11],0x36
  41532b:	jne    0x4152ec
  41532d:	xchg   ecx,eax
  41532e:	mov    WORD PTR [edx],es
  415330:	lods   eax,DWORD PTR ds:[esi]
  415331:	jo     0x41533b
  415333:	lea    ebx,[esp+eax*2+0x3acc4938]
  41533a:	outs   dx,BYTE PTR ds:[esi]
  41533b:	mov    dh,0xc8
  41533d:	mov    esi,0x9cedc373
  415342:	inc    ebx
  415343:	jae    0x4153c4
  415345:	rol    DWORD PTR gs:[ecx-0x2e04be5],0x60
  41534d:	jg     0x41538c
  41534f:	(bad)  
  415350:	aad    0x55
  415352:	mov    ds:0xf69fcaf4,al
  415357:	lods   al,BYTE PTR ds:[esi]
  415358:	cmp    esi,DWORD PTR [ecx+ebx*2+0x2d]
  41535c:	leave  
  41535d:	inc    ebp
  41535e:	xlat   BYTE PTR ds:[ebx]
  41535f:	jmp    0xa451:0x7819cbea
  415366:	int    0x6d
  415368:	or     dl,BYTE PTR [edx+0xb90be1]
  41536e:	sub    eax,0xe2698602
  415373:	imul   BYTE PTR [edi-0x2f]
  415376:	inc    edx
  415377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415378:	stos   BYTE PTR es:[edi],al
  415379:	loop   0x4153c2
  41537b:	sub    al,0xf3
  41537d:	jmp    0x806d8928
  415382:	retf   0xe419
  415385:	loopne 0x4153ae
  415387:	fiadd  WORD PTR [ebp-0x74499dc1]
  41538d:	xchg   ebx,esi
  41538f:	test   eax,0xc51d00fd
  415394:	mov    al,ds:0xcee1a95d
  415399:	and    ecx,DWORD PTR [edx-0x9]
  41539c:	daa    
  41539d:	and    esi,esi
  41539f:	jb     0x4153d7
  4153a1:	cmp    BYTE PTR ds:0x96996a52,al
  4153a7:	out    0x3f,eax
  4153a9:	dec    eax
  4153aa:	xor    DWORD PTR [eax-0x22c2937],0x10
  4153b1:	mov    esp,0xfee77fc
  4153b6:	or     DWORD PTR [ebp-0x5b],eax
  4153b9:	clc    
  4153ba:	inc    esi
  4153bb:	or     edi,DWORD PTR [edi-0x2673ed4c]
  4153c1:	popf   
  4153c2:	jno    0x4153ae
  4153c4:	pop    ebp
  4153c5:	scas   al,BYTE PTR es:[edi]
  4153c6:	clc    
  4153c7:	mov    ebx,0xcdef93b8
  4153cc:	imul   eax,ebx,0x4ab57f1d
  4153d2:	xchg   ecx,eax
  4153d3:	pop    ebp
  4153d4:	pop    ebp
  4153d5:	(bad)  
  4153d6:	cmp    al,0x43
  4153d8:	dec    esp
  4153d9:	or     dh,BYTE PTR [ebx-0x43]
  4153dc:	xor    al,0x59
  4153de:	push   ds
  4153df:	call   0x9c7f3d76
  4153e4:	scas   eax,DWORD PTR es:[edi]
  4153e5:	or     BYTE PTR [ebx-0x68],bh
  4153e8:	mov    cl,0x97
  4153ea:	iret   
  4153eb:	sbb    eax,ebx
  4153ed:	daa    
  4153ee:	mov    bl,0xed
  4153f0:	(bad)  
  4153f1:	aaa    
  4153f2:	mov    ss,edx
  4153f4:	xlat   BYTE PTR ds:[ebx]
  4153f5:	mov    BYTE PTR [edi],bl
  4153f7:	lds    ebp,FWORD PTR [edx+0x1b]
  4153fa:	push   0xffffff90
  4153fc:	and    al,0xb2
  4153fe:	stc    
  4153ff:	jg     0x41546a
  415401:	pop    esp
  415402:	cmp    al,0x7
  415404:	adc    eax,DWORD PTR [esi+0x5c]
  415407:	or     eax,0x30f11123
  41540c:	adc    DWORD PTR ss:[ecx],edx
  41540f:	xchg   ebp,eax
  415410:	sub    BYTE PTR [ebx],al
  415412:	dec    ebp
  415413:	stos   BYTE PTR es:[edi],al
  415414:	mov    al,0x77
  415416:	push   ebp
  415417:	push   eax
  415418:	adc    DWORD PTR [edi+eax*4-0x391b03f6],ebx
  41541f:	jmp    0x4e19:0x62d83954
  415426:	mov    ah,0x9b
  415428:	inc    edx
  415429:	mov    ecx,0xbe009c59
  41542e:	xchg   DWORD PTR [edx],esp
  415430:	(bad)  [esi-0x43]
  415433:	loopne 0x41543c
  415435:	mov    eax,0x322ae210
  41543a:	add    eax,0xa167bbc2
  41543f:	lock pop ss
  415441:	pop    ebx
  415442:	ds xor dl,bh
  415445:	mov    eax,DWORD PTR [edi]
  415447:	and    esi,DWORD PTR [edx]
  415449:	out    0x3d,al
  41544b:	jge    0x41542b
  41544d:	sub    esi,DWORD PTR [eax-0x1e039f6c]
  415453:	sti    
  415454:	test   edi,edi
  415456:	sub    esp,DWORD PTR [esi+eax*2-0x34]
  41545a:	rcr    BYTE PTR [ebx],0xa7
  41545d:	jns    0x4154d9
  41545f:	mov    esi,0xc5a7f124
  415464:	fistp  DWORD PTR [edi-0x23]
  415467:	jo     0x41541b
  415469:	es and eax,0x6365d3c1
  41546f:	mov    ds:0x279b8a8a,eax
  415474:	mov    ds,esi
  415476:	sahf   
  415477:	ins    BYTE PTR es:[edi],dx
  415478:	xor    al,0x3a
  41547a:	hlt    
  41547b:	sbb    DWORD PTR [ecx],esi
  41547d:	fs mov edx,0xba32bf5d
  415483:	popa   
  415484:	in     al,0xe9
  415486:	push   esp
  415487:	pusha  
  415488:	hlt    
  415489:	loopne 0x415445
  41548b:	(bad)  
  41548d:	icebp  
  41548e:	out    dx,al
  41548f:	mov    bh,0xc0
  415491:	pop    es
  415492:	jbe    0x763ed7c4
  415498:	jmp    ebx
  41549a:	test   BYTE PTR [eax-0x3e181477],0x66
  4154a1:	and    cl,BYTE PTR [eax-0x1ac6d80e]
  4154a7:	pusha  
  4154a8:	lods   al,BYTE PTR ds:[esi]
  4154a9:	cmp    bl,ch
  4154ab:	cmp    eax,0x21178636
  4154b0:	ins    DWORD PTR es:[edi],dx
  4154b1:	xchg   edi,eax
  4154b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b3:	enter  0x9cbf,0xbb
  4154b7:	mov    ds:0x888f9777,eax
  4154bc:	push   0xaec343ac
  4154c1:	mov    ah,BYTE PTR [ebp-0xab4a16]
  4154c7:	pop    ss
  4154c8:	dec    ebp
  4154c9:	test   BYTE PTR [edx-0x39670496],bh
  4154cf:	or     dh,BYTE PTR [ebp+0x69380266]
  4154d5:	in     eax,dx
  4154d6:	jne    0x4154f6
  4154d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d9:	or     edx,ecx
  4154db:	and    BYTE PTR [ebx],0xc6
  4154de:	fs mov bh,0x3
  4154e1:	mov    WORD PTR [edx-0x2f],?
  4154e4:	mov    eax,0x3b4a0878
  4154e9:	in     eax,dx
  4154ea:	pop    ds
  4154eb:	sbb    BYTE PTR [ebp-0x1d70aef],bl
  4154f1:	fisubr DWORD PTR [eax-0x3c]
  4154f4:	pop    ebp
  4154f5:	sub    DWORD PTR [esi-0x18],ebx
  4154f8:	add    DWORD PTR [eax-0x13],ecx
  4154fb:	pop    eax
  4154fc:	xchg   edx,eax
  4154fd:	mov    al,0xc6
  4154ff:	retf   0xb13
  415502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415503:	fdivr  QWORD PTR [esi+0x4c]
  415506:	cld    
  415507:	or     eax,0xfb816e76
  41550c:	iret   
  41550d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550e:	pop    es
  41550f:	div    cl
  415511:	inc    ebp
  415512:	mov    bl,BYTE PTR [esi]
  415514:	test   DWORD PTR [ecx-0x20],ebp
  415517:	lds    sp,DWORD PTR [edi+0x4c]
  41551b:	jo     0x415519
  41551d:	or     al,0x2
  41551f:	test   bl,dl
  415521:	and    eax,0xfee5a43c
  415526:	fnsave [edi-0xa]
  415529:	xor    DWORD PTR [eax],esi
  41552b:	aad    0xc8
  41552d:	dec    ebp
  41552e:	mov    eax,0x2baeed6d
  415533:	xchg   ebx,eax
  415534:	mov    ebx,0xde8ea520
  415539:	fcomp  DWORD PTR [esi-0x1e13ff41]
  41553f:	pushf  
  415540:	pop    edi
  415541:	stos   BYTE PTR es:[edi],al
  415542:	adc    DWORD PTR ds:0xeca15bb7,0xffffffe0
  415549:	push   ds
  41554a:	test   BYTE PTR [esi-0x6a],0xfa
  41554e:	pop    eax
  41554f:	dec    ebp
  415550:	xchg   edi,eax
  415551:	mov    al,0xcc
  415553:	or     BYTE PTR [ecx+0x48fa0d1b],0xa9
  41555a:	dec    esi
  41555b:	shr    edi,cl
  41555d:	dec    esi
  41555e:	clc    
  41555f:	adc    al,0xd6
  415561:	dec    edx
  415562:	dec    ebp
  415563:	into   
  415564:	jnp    0x415539
  415566:	push   edx
  415567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415568:	(bad)  
  415569:	leave  
  41556a:	fadd   QWORD PTR [edx-0x341e5ef]
  415570:	pop    ecx
  415571:	(bad)  
  415573:	sbb    BYTE PTR [esi],0xd0
  415576:	push   esp
  415577:	and    eax,esi
  415579:	gs push ebx
  41557b:	mov    ch,0xba
  41557d:	mov    ebp,0x4c6ea56
  415582:	and    eax,0xe59a288a
  415587:	les    esp,FWORD PTR [esi]
  415589:	mov    ds:0x71264569,eax
  41558e:	and    dh,BYTE PTR [edx+0x3f]
  415591:	jle    0x4155e0
  415593:	stc    
  415594:	repz adc eax,0x19c4507a
  41559a:	cdq    
  41559b:	and    edi,DWORD PTR [ebx+0x3a]
  41559e:	out    0x96,al
  4155a0:	sti    
  4155a1:	pop    ecx
  4155a2:	fsub   QWORD PTR [esi]
  4155a4:	cmp    eax,DWORD PTR [eax+0x38]
  4155a7:	daa    
  4155a8:	xchg   edi,eax
  4155a9:	pushf  
  4155aa:	stos   BYTE PTR es:[edi],al
  4155ab:	jns    0x4155d4
  4155ad:	stos   BYTE PTR es:[edi],al
  4155ae:	dec    edi
  4155af:	sub    ecx,DWORD PTR [ebx+ecx*2]
  4155b2:	xor    DWORD PTR [ebx-0x124f3cbc],esi
  4155b8:	test   BYTE PTR [edi+edi*2],0x94
  4155bc:	mov    ebp,0x6bfe54ba
  4155c1:	cmp    DWORD PTR [esi+0x50cec82b],eax
  4155c7:	inc    edi
  4155c8:	dec    edx
  4155c9:	pusha  
  4155ca:	ss push esi
  4155cc:	mov    cl,0xbf
  4155ce:	jo     0x415645
  4155d0:	lds    ebx,FWORD PTR [ecx+esi*2]
  4155d3:	push   eax
  4155d4:	std    
  4155d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d6:	jle    0x415632
  4155d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d9:	pop    ds
  4155da:	sbb    DWORD PTR [edi],0xffffffbb
  4155dd:	popa   
  4155de:	push   ds
  4155df:	lock or eax,0x881999f7
  4155e5:	lahf   
  4155e6:	mul    DWORD PTR [ebx]
  4155e8:	xor    BYTE PTR [ebx],dl
  4155ea:	sbb    DWORD PTR [edi],ebp
  4155ec:	pop    edi
  4155ed:	sbb    ebp,DWORD PTR [ebx-0x645001c2]
  4155f3:	imul   ebp,DWORD PTR [ebp-0x47],0xffffffec
  4155f7:	jg     0x4155c1
  4155f9:	sub    bl,BYTE PTR [eax]
  4155fb:	in     eax,dx
  4155fc:	loop   0x41563f
  4155fe:	mov    ch,0x7b
  415600:	jbe    0x4155e5
  415602:	dec    ebp
  415603:	ret    0x563b
  415606:	fld    st(4)
  415608:	xchg   BYTE PTR [ecx+0x6c13f017],bh
  41560e:	cli    
  41560f:	fsub   st(2),st
  415611:	jecxz  0x415627
  415613:	xor    DWORD PTR [esi+0x2e],0xffffffb2
  415617:	mov    al,0x8a
  415619:	xor    eax,0x193b3ee1
  41561e:	cmc    
  41561f:	add    edx,eax
  415621:	jnp    0x415699
  415623:	lahf   
  415624:	shr    DWORD PTR [esi-0x24],0x44
  415628:	gs inc esi
  41562a:	(bad)  [ebx-0x7f]
  41562d:	xor    al,0xa5
  41562f:	test   al,0xa1
  415631:	stos   DWORD PTR es:[edi],eax
  415632:	cmp    edx,DWORD PTR [ecx-0x39]
  415635:	jnp    0x4155f4
  415637:	or     BYTE PTR [edx],al
  415639:	xor    al,bl
  41563b:	cwde   
  41563c:	ja     0x415648
  41563e:	sub    al,0x6
  415640:	bound  ebx,QWORD PTR [ecx+0x69]
  415643:	mov    edx,eax
  415645:	or     edx,ecx
  415647:	shl    BYTE PTR [edx+0x29],cl
  41564a:	std    
  41564b:	sar    BYTE PTR [eax],cl
  41564d:	inc    eax
  41564e:	mov    ds:0x8991676d,al
  415653:	sbb    ah,cl
  415655:	inc    edx
  415656:	mov    eax,ds:0xd4e9acdb
  41565b:	pop    edx
  41565c:	mov    bl,0xf2
  41565e:	out    dx,al
  41565f:	inc    ebx
  415660:	dec    ebp
  415661:	push   esi
  415662:	push   esi
  415663:	(bad)  
  415664:	cli    
  415665:	sub    edx,DWORD PTR [edx]
  415667:	dec    ebx
  415668:	lods   eax,DWORD PTR ds:[esi]
  415669:	or     ch,BYTE PTR [edx]
  41566b:	xor    DWORD PTR [esp+edi*1],esp
  41566e:	bound  ebx,QWORD PTR [ebx+edi*8]
  415671:	sub    DWORD PTR [esi-0x10],ecx
  415674:	lahf   
  415675:	fsubp  st(6),st
  415677:	dec    edi
  415678:	sbb    al,0x5f
  41567a:	fsub   QWORD PTR [ecx]
  41567c:	dec    edi
  41567d:	xchg   BYTE PTR [ecx-0x50fd3c57],dl
  415683:	or     eax,DWORD PTR [edi]
  415685:	pop    esi
  415686:	lods   eax,DWORD PTR ds:[esi]
  415687:	mov    dl,BYTE PTR [edx+eiz*2]
  41568a:	pop    esp
  41568b:	lds    edx,FWORD PTR [edx]
  41568d:	and    DWORD PTR [eax-0x51],0x1fcb61e5
  415694:	test   BYTE PTR [ebx-0x7fb05d39],0x86
  41569b:	pop    esp
  41569c:	xchg   edx,eax
  41569d:	xor    DWORD PTR [ebx+0x78cf40c],esi
  4156a3:	sbb    eax,eax
  4156a5:	stos   BYTE PTR es:[edi],al
  4156a6:	out    0x46,al
  4156a8:	or     eax,0xc28fc1d
  4156ad:	adc    al,BYTE PTR [ebx]
  4156af:	fsubr  DWORD PTR [edi]
  4156b1:	(bad)  
  4156b2:	jno    0x415642
  4156b4:	bound  ecx,QWORD PTR [edi]
  4156b6:	xor    BYTE PTR [esi],ah
  4156b8:	xchg   esi,eax
  4156b9:	psrlw  mm6,QWORD PTR [ebp+0x52f4c087]
  4156c0:	or     BYTE PTR ds:0xb6bba344,0x8d
  4156c7:	std    
  4156c8:	push   ds
  4156c9:	test   eax,0x1ca72085
  4156ce:	and    eax,0x630d97a9
  4156d3:	ficom  DWORD PTR [eax+ebx*2-0x120cef37]
  4156da:	inc    edi
  4156db:	addr16 mov edx,0x4bd03f4f
  4156e1:	icebp  
  4156e2:	adc    edi,DWORD PTR [esi]
  4156e4:	loopne 0x415720
  4156e6:	push   ebx
  4156e7:	fst    DWORD PTR [edi-0x4b]
  4156ea:	ja     0x415687
  4156ec:	mov    eax,ds:0x70f74ef5
  4156f1:	shl    DWORD PTR [eax-0x5e54ea9b],cl
  4156f7:	lock mov bh,0x41
  4156fa:	jle    0x4156d4
  4156fc:	mov    eax,0xd5364d3
  415701:	dec    ebp
  415702:	leave  
  415703:	pushf  
  415704:	out    dx,al
  415705:	cs or  edx,ebp
  415708:	arpl   cx,ax
  41570a:	dec    ecx
  41570b:	inc    ecx
  41570c:	dec    ebx
  41570d:	scas   al,BYTE PTR es:[edi]
  41570e:	out    0x91,eax
  415710:	fmul   QWORD PTR [ebx-0xb]
  415713:	jb     0x415727
  415715:	ret    
  415716:	mov    dl,0x13
  415718:	or     DWORD PTR [ebp-0x3c],ebp
  41571b:	pop    ebp
  41571c:	fst    QWORD PTR [edx+0x2e725a91]
  415722:	push   esp
  415723:	dec    esi
  415724:	mov    ss:0x2d32a003,al
  41572a:	out    0x83,eax
  41572c:	out    0x9a,al
  41572e:	sub    esp,DWORD PTR [edi+ebp*2+0x48]
  415732:	hlt    
  415733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415734:	push   esi
  415735:	add    esp,esi
  415737:	test   eax,0xbd2f8dd
  41573c:	ins    DWORD PTR es:[edi],dx
  41573d:	jne    0x415716
  41573f:	mov    eax,ds:0x6e8003f1
  415744:	in     eax,dx
  415745:	add    eax,0xcef743af
  41574a:	shr    DWORD PTR [edx+eax*8],0x32
  41574e:	or     dl,0x9f
  415751:	aas    
  415752:	sbb    eax,0xa9fe1104
  415757:	in     eax,0x1e
  415759:	jne    0x4156f5
  41575b:	xor    dh,BYTE PTR [edx]
  41575d:	js     0x4157da
  41575f:	hlt    
  415760:	cs mov bh,0x2
  415763:	inc    edx
  415764:	mov    ebx,0xd1121c48
  415769:	xchg   ebp,eax
  41576a:	inc    edx
  41576b:	jb     0x4157e3
  41576d:	inc    edi
  41576e:	retf   0xd689
  415771:	int3   
  415772:	test   eax,0x104e8dc3
  415777:	into   
  415778:	dec    ebp
  415779:	pop    ebx
  41577a:	sbb    DWORD PTR [ecx+0x4a3cfc1a],esp
  415780:	mov    eax,DWORD PTR [ebx-0x2b]
  415783:	inc    eax
  415784:	jae    0x415755
  415786:	loopne 0x415752
  415788:	sub    al,0x1d
  41578a:	ja     0x41579a
  41578c:	iret   
  41578d:	retf   
  41578e:	mov    fs,WORD PTR [edi+edi*2+0x4f016d51]
  415795:	scas   al,BYTE PTR es:[edi]
  415796:	repnz and bl,bh
  415799:	jmp    DWORD PTR [esi+edx*2+0x2a759011]
  4157a0:	mov    dh,0xdc
  4157a2:	shr    esp,cl
  4157a4:	or     dh,BYTE PTR [ecx-0x7f63670d]
  4157aa:	pop    ebx
  4157ab:	sub    eax,0x872e79e0
  4157b0:	loope  0x415799
  4157b2:	fstp   st(5)
  4157b4:	scas   eax,DWORD PTR es:[edi]
  4157b5:	sub    BYTE PTR [edx-0x74],bh
  4157b8:	repz cmp eax,0xd43fedf4
  4157be:	adc    eax,0xcc13fcad
  4157c3:	fmul   DWORD PTR [ebx+0x38]
  4157c6:	std    
  4157c7:	scas   eax,DWORD PTR es:[edi]
  4157c8:	cmp    DWORD PTR [edx-0x5819ce80],edi
  4157ce:	std    
  4157cf:	add    eax,0x507dd069
  4157d4:	and    al,BYTE PTR [eax+eiz*2+0x125be9b8]
  4157db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157dc:	imul   ebx,DWORD PTR [edx-0xf],0x874c383e
  4157e3:	sub    ebp,DWORD PTR [edi-0x12]
  4157e6:	mov    cl,0x4a
  4157e8:	sub    eax,0x7b5c212d
  4157ed:	xchg   ebp,eax
  4157ee:	(bad)  
  4157ef:	pushf  
  4157f0:	lods   eax,DWORD PTR ds:[esi]
  4157f1:	lea    esp,[eax+0x4]
  4157f4:	out    0xb4,al
  4157f6:	push   edx
  4157f7:	cwde   
  4157f8:	mov    ah,BYTE PTR [edi]
  4157fa:	ins    BYTE PTR es:[edi],dx
  4157fb:	adc    DWORD PTR [ecx],ebp
  4157fd:	fcomp  QWORD PTR [esi+0x75]
  415800:	aaa    
  415801:	pop    edi
  415802:	push   ebp
  415803:	mov    ds:0x44d8c491,al
  415808:	outs   dx,BYTE PTR ds:[esi]
  415809:	jmp    0x66f:0xb9a3d23f
  415810:	lds    edi,FWORD PTR [edx+0x30]
  415813:	in     al,0xf0
  415815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415816:	mov    edi,0xb53079ea
  41581b:	pop    eax
  41581d:	dec    edx
  41581e:	sbb    al,0xff
  415820:	ret    
  415821:	pushf  
  415822:	int    0x26
  415824:	cmp    BYTE PTR [edi-0x72],bl
  415827:	and    al,0x39
  415829:	mov    BYTE PTR [ebx+0x37345b82],ah
  41582f:	and    DWORD PTR [esi+0x66052660],edx
  415835:	(bad)  
  415836:	cmp    al,0xaf
  415838:	push   edi
  415839:	sti    
  41583a:	ss sbb eax,0x24cca396
  415840:	or     dl,BYTE PTR [ebx]
  415842:	sbb    al,0x9f
  415844:	jbe    0x415800
  415846:	push   ds
  415847:	add    esp,DWORD PTR [esi+0x5a5f7d7b]
  41584d:	arpl   WORD PTR [esi+0x50],sp
  415850:	sti    
  415851:	cmp    BYTE PTR [ebx+eax*8+0x591191c5],ch
  415858:	mov    al,BYTE PTR [ecx]
  41585a:	adc    eax,0x582e3bf0
  41585f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415860:	or     eax,0x15069c3a
  415865:	jg     0x4158b3
  415867:	imul   esp,DWORD PTR [ecx-0x7],0xcad3f48f
  41586e:	and    al,0x16
  415870:	mov    edx,0x711c7298
  415875:	sbb    DWORD PTR [bx],ebx
  415878:	pop    esp
  415879:	(bad)  [edi+0x5800343f]
  41587f:	imul   ecx,DWORD PTR fs:[ecx],0x5d
  415883:	out    0x15,al
  415885:	cmc    
  415886:	push   es
  415887:	push   ebx
  415888:	call   ebp
  41588a:	push   edx
  41588b:	add    DWORD PTR [edi],edx
  41588d:	sbb    cl,ch
  41588f:	nop    DWORD PTR [esp+ecx*4+0x3c]
  415894:	pop    ss
  415895:	jmp    0x3ef82ae2
  41589a:	xchg   ecx,eax
  41589b:	mov    ecx,0xf77c761f
  4158a0:	xor    BYTE PTR es:[edi],0x65
  4158a4:	shl    esi,cl
  4158a6:	push   esp
  4158a7:	rol    DWORD PTR [ebx-0x56d4b8ba],0x99
  4158ae:	stos   BYTE PTR es:[edi],al
  4158af:	push   esp
  4158b0:	push   es
  4158b1:	mov    edx,0xa03a1e22
  4158b6:	and    al,ah
  4158b8:	int    0x54
  4158ba:	inc    esi
  4158bb:	(bad)  
  4158bc:	int3   
  4158bd:	rcl    DWORD PTR [edx+0x6215549],cl
  4158c3:	aam    0xe8
  4158c5:	adc    al,0x48
  4158c7:	push   0xd1935906
  4158cc:	fstp   st(5)
  4158ce:	adc    eax,0x309b43b8
  4158d3:	in     al,0x67
  4158d5:	cmp    ebx,DWORD PTR [ecx+0x66915fe3]
  4158db:	mov    ah,0x11
  4158dd:	dec    edi
  4158de:	comiss xmm2,DWORD PTR [ebp+0x26e5a94c]
  4158e5:	stos   BYTE PTR es:[edi],al
  4158e6:	and    esi,DWORD PTR [ecx-0x6cf771c1]
  4158ec:	mov    edi,0xeb7c542c
  4158f1:	mov    bh,0x99
  4158f3:	aad    0x9b
  4158f5:	mov    ds:0xe509b8b8,eax
  4158fa:	cwde   
  4158fb:	jns    0x4158b0
  4158fd:	sbb    al,0xe4
  4158ff:	repz push cs
  415901:	mov    ds:0xe7250e5e,eax
  415906:	js     0x415938
  415908:	mov    DWORD PTR [ecx-0x2377b71],0xdf809c8a
  415912:	xchg   esi,eax
  415913:	inc    eax
  415914:	dec    ebp
  415915:	fsub   DWORD PTR gs:[ebx+0x55a4096]
  41591c:	adc    eax,0x93eea9c1
  415921:	scas   eax,DWORD PTR es:[edi]
  415922:	push   cs
  415923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415924:	cmp    al,0x37
  415926:	sbb    al,0x8c
  415928:	fstp   QWORD PTR [esi+eax*1]
  41592b:	push   DWORD PTR [edi+ecx*2-0x39]
  41592f:	sbb    eax,0xae6b96cc
  415934:	into   
  415935:	push   ds
  415936:	stc    
  415937:	int3   
  415938:	and    al,dl
  41593a:	xor    BYTE PTR [ecx+0x29],ah
  41593d:	push   edx
  41593e:	mov    bh,BYTE PTR [edi+edx*8]
  415941:	ret    
  415942:	dec    ebx
  415943:	cmp    edi,edi
  415945:	adc    al,0x71
  415947:	out    0xd8,al
  415949:	and    DWORD PTR [eax+0x29],esp
  41594c:	jnp    0x415963
  41594e:	pop    edi
  41594f:	imul   edi,DWORD PTR [eax+edi*1],0x5b
  415953:	pop    edi
  415954:	rcr    BYTE PTR [esp+edi*2-0x40d60dae],1
  41595b:	xlat   BYTE PTR ds:[ebx]
  41595c:	push   edx
  41595d:	aad    0xe0
  41595f:	fsubr  DWORD PTR [edx]
  415961:	dec    ebx
  415962:	lds    edx,FWORD PTR [esi+edx*4]
  415965:	dec    edi
  415966:	gs in  al,dx
  415968:	xchg   edi,eax
  415969:	dec    edi
  41596a:	adc    BYTE PTR [ecx+0x31],dh
  41596d:	ds cmp cl,bh
  415970:	push   ecx
  415971:	dec    edi
  415972:	nop
  415973:	aas    
  415974:	sar    BYTE PTR [edx+0x6e],cl
  415977:	(bad)  
  415978:	mov    bl,0xf1
  41597a:	mov    esi,0x5dc1938a
  41597f:	xor    BYTE PTR [ebx+0x104b2c85],0x9a
  415986:	sub    eax,0x2b399e47
  41598b:	sub    ebp,DWORD PTR [edx]
  41598d:	xchg   esp,eax
  41598e:	xor    eax,0x163c695
  415993:	xchg   esi,eax
  415994:	shr    esi,cl
  415996:	sbb    al,0xba
  415998:	sahf   
  415999:	js     0x4159c6
  41599b:	rol    DWORD PTR [ecx],0x6
  41599e:	sbb    DWORD PTR [ecx+0x1a],ebp
  4159a1:	pop    ds
  4159a2:	push   edi
  4159a3:	loop   0x4159a1
  4159a5:	stc    
  4159a6:	imul   ecx,edi,0x283161aa
  4159ac:	leave  
  4159ad:	inc    esi
  4159ae:	push   ss
  4159af:	push   edi
  4159b0:	jmp    0x94c7:0x121bd9c3
  4159b7:	dec    ecx
  4159b8:	adc    ah,bl
  4159ba:	mov    eax,ds:0x46b5d516
  4159bf:	push   esp
  4159c0:	enter  0xd0a,0x7f
  4159c4:	pop    esi
  4159c5:	inc    edi
  4159c6:	lds    ebx,FWORD PTR [edi]
  4159c8:	push   ebx
  4159c9:	push   es
  4159ca:	mov    esi,0x515a8754
  4159cf:	imul   esi,ebp,0xffffffca
  4159d2:	or     bl,BYTE PTR [eax+0x6f2ccf43]
  4159d8:	xchg   ebx,eax
  4159d9:	test   eax,0xd1dc0154
  4159de:	div    DWORD PTR [edx]
  4159e0:	stos   BYTE PTR es:[edi],al
  4159e1:	mov    dh,0xa0
  4159e3:	stos   BYTE PTR es:[edi],al
  4159e4:	sub    eax,0x2b1b65a3
  4159e9:	inc    ebx
  4159ea:	scas   al,BYTE PTR es:[edi]
  4159eb:	sub    dh,BYTE PTR [edi]
  4159ed:	xchg   esi,eax
  4159ee:	add    ecx,DWORD PTR [ecx]
  4159f0:	lea    ecx,ds:0xe9cdbdff
  4159f6:	sub    dh,BYTE PTR [edx]
  4159f8:	(bad)  
  4159f9:	ds retf 0xb8b4
  4159fd:	aaa    
  4159fe:	test   eax,0xcb2e6651
  415a03:	aas    
  415a04:	sbb    eax,0x2f3e8148
  415a09:	loop   0x415a3e
  415a0b:	lods   eax,DWORD PTR gs:[esi]
  415a0d:	mov    ebx,0x38cc1f39
  415a12:	jbe    0x4159ff
  415a14:	fistp  QWORD PTR [esi-0x63026a5e]
  415a1a:	ins    BYTE PTR es:[edi],dx
  415a1b:	sub    dh,dh
  415a1d:	test   BYTE PTR [esi-0x3],0x1a
  415a21:	add    BYTE PTR [eax],ah
  415a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a24:	jge    0x415a12
  415a26:	out    0xa0,eax
  415a28:	pop    edx
  415a29:	push   ds
  415a2a:	xchg   edx,eax
  415a2b:	jne    0x415a8a
  415a2d:	pop    esi
  415a2e:	or     bl,BYTE PTR es:[esi]
  415a31:	je     0x415a53
  415a33:	jg     0x4159c8
  415a35:	sub    DWORD PTR ds:0xbd287314,ecx
  415a3b:	cwde   
  415a3c:	je     0x415a03
  415a3e:	push   0x4a
  415a40:	xchg   edi,eax
  415a41:	or     al,0xf5
  415a43:	call   DWORD PTR [esi+esi*4]
  415a46:	aam    0x8
  415a48:	shl    DWORD PTR [eax+0x35b5e555],1
  415a4e:	(bad)  
  415a4f:	(bad)  
  415a50:	ins    BYTE PTR es:[edi],dx
  415a51:	mov    al,0x7b
  415a53:	(bad)  
  415a54:	jge    0x4159f8
  415a56:	dec    ebp
  415a57:	xor    cl,ah
  415a59:	arpl   WORD PTR [esi],bp
  415a5b:	inc    esp
  415a5c:	pusha  
  415a5d:	push   esi
  415a5e:	pop    ds
  415a5f:	sbb    BYTE PTR [edi+0x903cbda],al
  415a65:	sub    eax,0x52649c2d
  415a6a:	out    dx,eax
  415a6b:	xor    BYTE PTR [ebx-0x61],ah
  415a6e:	add    dh,BYTE PTR [edi]
  415a70:	add    eax,edi
  415a72:	pop    esp
  415a73:	xchg   ebp,eax
  415a74:	enter  0xfb52,0x8b
  415a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a79:	lahf   
  415a7a:	and    edi,DWORD PTR [ebp-0x6529e854]
  415a80:	iret   
  415a81:	cmp    DWORD PTR [edx+edx*4+0x51b8454d],ebx
  415a88:	(bad)  
  415a89:	fisttp DWORD PTR [esi+0x5a]
  415a8c:	iret   
  415a8d:	add    DWORD PTR [edx-0xd],esi
  415a90:	pop    ecx
  415a91:	dec    edi
  415a92:	sub    al,0xab
  415a94:	inc    ebp
  415a95:	or     bh,BYTE PTR [esi+0x2b743b90]
  415a9b:	bswap  ebx
  415a9d:	jle    0x415a5e
  415a9f:	push   0xffffff8c
  415aa1:	outs   dx,BYTE PTR ds:[esi]
  415aa2:	repnz add eax,0xeb6168df
  415aa8:	mov    edi,0xc49a435
  415aad:	pusha  
  415aae:	test   BYTE PTR [ebx+0xd],cl
  415ab1:	hlt    
  415ab2:	cmp    DWORD PTR ds:0x2af46039,eax
  415ab8:	or     BYTE PTR [ebx],0x52
  415abb:	jle    0x415b2d
  415abd:	jns    0x415abc
  415abf:	xor    DWORD PTR [eax+0x76],ecx
  415ac2:	imul   esi,DWORD PTR [edi],0x24
  415ac5:	call   0x83e2:0xd23e5e1d
  415acc:	(bad)  
  415acd:	js     0x415b0d
  415acf:	inc    ebx
  415ad0:	dec    ecx
  415ad1:	ja     0x415af4
  415ad3:	out    dx,al
  415ad4:	stc    
  415ad5:	jb     0x415b12
  415ad7:	add    al,0x47
  415ad9:	sub    al,0x9c
  415adb:	mov    DWORD PTR [ebx-0x1eacd7df],ebp
  415ae1:	data16 ja 0x415b2a
  415ae4:	or     BYTE PTR [edx-0x71],0x67
  415ae8:	popf   
  415ae9:	dec    esi
  415aea:	cmp    DWORD PTR [ebx-0x40],0x97ff59dc
  415af1:	xchg   DWORD PTR ds:0xdde4fbb2,esi
  415af7:	push   cs
  415af8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415afa:	dec    ecx
  415afb:	push   eax
  415afc:	out    dx,eax
  415afd:	sbb    eax,0x45dde193
  415b02:	cvtdq2ps xmm6,xmm0
  415b05:	push   ecx
  415b06:	fcom   DWORD PTR [ebx]
  415b08:	addr16 pop edi
  415b0a:	xor    bl,BYTE PTR ds:0xd4100279
  415b10:	inc    eax
  415b11:	sub    BYTE PTR [ecx],ah
  415b13:	imul   ecx,DWORD PTR [ebp-0x6468c082],0xda72a42f
  415b1d:	sar    ebp,1
  415b1f:	push   es
  415b20:	sbb    eax,0x2e8c7636
  415b25:	popa   
  415b26:	mov    sp,0x3740
  415b2a:	test   al,0xa0
  415b2c:	in     eax,0x15
  415b2e:	adc    eax,0xc2d96f8f
  415b33:	jmp    0xdad7:0x20ef0561
  415b3a:	mov    dl,0xd2
  415b3c:	jecxz  0x415b05
  415b3e:	sti    
  415b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b40:	xor    esp,DWORD PTR [ecx+0x1f]
  415b43:	mov    ss,esp
  415b45:	pop    ebx
  415b46:	ins    DWORD PTR es:[edi],dx
  415b47:	aas    
  415b48:	cmp    eax,0xf6933531
  415b4d:	nop
  415b4e:	sub    ecx,0x13
  415b51:	hlt    
  415b52:	loope  0x415afe
  415b54:	les    eax,FWORD PTR [ebp+0x7cceba66]
  415b5a:	mov    fs,WORD PTR [edx]
  415b5c:	push   edx
  415b5d:	popa   
  415b5e:	cmc    
  415b5f:	out    0xf7,eax
  415b61:	xchg   esi,eax
  415b62:	mov    al,ds:0x1e0a50f4
  415b67:	(bad)  
  415b68:	call   0xfad25998
  415b6d:	ins    BYTE PTR es:[edi],dx
  415b6e:	aad    0xf8
  415b70:	retf   
  415b71:	out    dx,eax
  415b72:	aaa    
  415b73:	pop    ecx
  415b74:	jl     0x415b7b
  415b76:	imul   esp,DWORD PTR [esi-0x6f687912],0x3f
  415b7d:	adc    eax,0xcc03244c
  415b82:	fild   QWORD PTR ds:0x5adb3cc7
  415b88:	push   cs
  415b89:	fistp  WORD PTR [ecx+ecx*2+0x5b]
  415b8d:	pusha  
  415b8e:	xchg   edi,eax
  415b8f:	and    DWORD PTR [eax+0x1c5219c6],ebx
  415b95:	loopne 0x415b25
  415b97:	ror    BYTE PTR [ebx+0x5b],1
  415b9a:	inc    edi
  415b9b:	(bad)  
  415b9c:	rcl    BYTE PTR [ebp-0x69],cl
  415b9f:	adc    DWORD PTR [eax],eax
  415ba1:	and    DWORD PTR [ebp+0x37],edi
  415ba4:	and    ch,bl
  415ba6:	mov    eax,ds:0x4fa50104
  415bab:	stos   BYTE PTR es:[edi],al
  415bac:	xchg   edi,eax
  415bad:	jo     0x415bc7
  415baf:	cmp    ebp,DWORD PTR [edi+0x71]
  415bb2:	pop    ds
  415bb3:	mov    ds:0xb96bf753,eax
  415bb8:	push   ds
  415bb9:	jp     0x415b84
  415bbb:	inc    esp
  415bbc:	jb     0x415b5f
  415bbe:	jmp    0x9d871dd9
  415bc3:	push   cs
  415bc4:	in     eax,0xd1
  415bc6:	(bad)  
  415bc7:	sbb    ebp,esp
  415bc9:	cmp    dh,BYTE PTR [eax+eax*4+0x174987c6]
  415bd0:	mov    ah,0x8c
  415bd2:	mov    al,ds:0x1fcfdee5
  415bd7:	inc    ebp
  415bd8:	dec    edi
  415bd9:	jge    0x415c03
  415bdb:	ficomp DWORD PTR [ebx-0x23]
  415bde:	cmp    eax,0x87e014ef
  415be3:	inc    ecx
  415be4:	(bad)  
  415be5:	jmp    0x89269d6f
  415bea:	jns    0x415c5a
  415bec:	mov    bl,0x49
  415bee:	pop    es
  415bef:	push   ss
  415bf0:	cdq    
  415bf1:	rol    ecx,cl
  415bf3:	pop    edx
  415bf4:	and    esi,DWORD PTR ds:0x8f4e1e34
  415bfa:	fistp  WORD PTR [ebx+ebp*2]
  415bfd:	dec    edi
  415bfe:	mov    ebx,0x121c59f7
  415c03:	push   edi
  415c04:	dec    esi
  415c05:	rcr    BYTE PTR [bx+si-0x20],1
  415c09:	cli    
  415c0a:	jecxz  0x415c44
  415c0c:	jle    0x415c09
  415c0e:	mov    dl,0x53
  415c10:	adc    BYTE PTR ds:0x68b13435,0xc7
  415c17:	xchg   edi,eax
  415c18:	mov    DWORD PTR [ecx-0x65],edx
  415c1b:	pusha  
  415c1c:	mov    ebp,DWORD PTR ds:0x70e80357
  415c22:	inc    ecx
  415c23:	mov    ebp,0x2aef2441
  415c28:	add    al,0x11
  415c2a:	out    dx,al
  415c2b:	(bad)  
  415c2c:	lock mov bh,0x8e
  415c2f:	push   es
  415c30:	test   BYTE PTR [esi],bh
  415c32:	addr16 icebp 
  415c34:	addr16 pusha 
  415c36:	js     0x415c3d
  415c38:	push   edx
  415c39:	sbb    ch,BYTE PTR [ebx-0x48]
  415c3c:	ja     0x415c00
  415c3e:	call   0x12d4b3c1
  415c43:	shl    DWORD PTR ds:[ebx],1
  415c46:	test   ah,cl
  415c48:	outs   dx,DWORD PTR ds:[esi]
  415c49:	ficom  WORD PTR [ecx-0x636bbe8f]
  415c4f:	inc    ebp
  415c50:	jae    0x415bff
  415c52:	in     eax,0xc9
  415c54:	div    DWORD PTR [ecx+0x6e]
  415c57:	js     0x415cb8
  415c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c5a:	retf   0x3937
  415c5d:	inc    edx
  415c5e:	mov    esp,0x7caba0e1
  415c63:	lock les esp,FWORD PTR [edx+0x74a38b7d]
  415c6a:	mov    BYTE PTR [edi+0x35],bh
  415c6d:	mov    eax,0x93784162
  415c72:	sub    DWORD PTR [esi],ecx
  415c74:	inc    esi
  415c75:	mov    WORD PTR [ecx+0xa],?
  415c78:	fidiv  WORD PTR [ecx]
  415c7a:	add    eax,0x90287e23
  415c7f:	xchg   ebx,eax
  415c80:	jno    0x415c2d
  415c82:	or     ah,dl
  415c84:	imul   esp,DWORD PTR [edx+0x11934de9],0x19de5d2d
  415c8e:	mov    ds:0x33fd3e79,al
  415c93:	into   
  415c94:	add    DWORD PTR [esi],0xfffffff2
  415c97:	hlt    
  415c98:	xor    dl,al
  415c9a:	inc    ecx
  415c9b:	push   ebp
  415c9c:	sub    al,0xe1
  415c9e:	jle    0x415c4b
  415ca0:	jbe    0x415cc3
  415ca2:	dec    ebp
  415ca3:	test   eax,0x62ef450c
  415ca8:	and    bh,BYTE PTR [eax]
  415caa:	hlt    
  415cab:	out    0x2b,eax
  415cad:	push   ss
  415cae:	pop    eax
  415caf:	lods   eax,DWORD PTR ds:[esi]
  415cb0:	sti    
  415cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cb2:	imul   eax,eax,0x26
  415cb5:	jnp    0x415ce9
  415cb7:	out    0xa8,eax
  415cb9:	xchg   ebp,edx
  415cbb:	data16 adc bh,ch
  415cbe:	inc    ebp
  415cbf:	fild   QWORD PTR [ebx-0x22039a34]
  415cc5:	push   ss
  415cc6:	and    ah,ch
  415cc8:	cmp    BYTE PTR [ebp+ecx*2+0x5901364c],ch
  415ccf:	sbb    al,0x12
  415cd1:	and    al,0xb7
  415cd3:	shl    BYTE PTR [eax],1
  415cd5:	scas   al,BYTE PTR es:[edi]
  415cd6:	and    dh,cl
  415cd8:	and    BYTE PTR [eax+esi*1-0x7d],bl
  415cdc:	fwait
  415cdd:	out    0x63,al
  415cdf:	loopne 0x415d3c
  415ce1:	jae    0x415cfd
  415ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce4:	jb     0x415d52
  415ce6:	inc    edi
  415ce7:	in     al,0xd3
  415ce9:	mov    ebx,0xea7d2aa0
  415cee:	loop   0x415cab
  415cf0:	push   ss
  415cf1:	or     bh,BYTE PTR [edi+0x5e]
  415cf4:	int    0xd8
  415cf6:	dec    esp
  415cf7:	shl    BYTE PTR [ebx+edx*8],1
  415cfa:	daa    
  415cfb:	adc    DWORD PTR [ebx],ebx
  415cfd:	sub    BYTE PTR [edi+edi*2],0x11
  415d01:	pop    edi
  415d02:	call   0x4226bff7
  415d07:	ja     0x415d2a
  415d09:	mov    dh,0x8a
  415d0b:	xchg   DWORD PTR [ebx],esp
  415d0d:	sar    BYTE PTR [ecx+0x17],0x9e
  415d11:	mov    dh,dh
  415d13:	sbb    dl,BYTE PTR [edx+0x1f68ea80]
  415d19:	fld    TBYTE PTR [eax+0x7c]
  415d1c:	or     esi,edi
  415d1e:	cmp    eax,0xaf7f6ffa
  415d23:	js     0x415d21
  415d25:	imul   esi,ebp,0x2ea11078
  415d2b:	fwait
  415d2c:	jmp    FWORD PTR [esi+0x13]
  415d2f:	je     0x415d87
  415d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d32:	sti    
  415d33:	imul   eax,DWORD PTR [eax],0x15
  415d36:	push   es
  415d37:	adc    esi,DWORD PTR ds:0xcc233eeb
  415d3d:	hlt    
  415d3e:	xchg   ecx,eax
  415d3f:	jbe    0x415cdc
  415d41:	mov    al,dl
  415d43:	stos   DWORD PTR es:[edi],eax
  415d44:	aam    0x42
  415d46:	mov    edi,0xe16e326c
  415d4b:	adc    al,dl
  415d4d:	jle    0x415d67
  415d4f:	std    
  415d50:	adc    ch,ch
  415d52:	xor    al,BYTE PTR [esi+ecx*2]
  415d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d56:	scas   al,BYTE PTR es:[edi]
  415d57:	rcl    BYTE PTR [ebx-0x1590c209],cl
  415d5d:	movzx  ecx,WORD PTR [edx]
  415d60:	in     al,dx
  415d61:	mov    ebp,esi
  415d63:	pop    edx
  415d64:	mov    ebx,0xd7f2f3d6
  415d69:	sub    BYTE PTR [edx],ah
  415d6b:	mov    edi,0xf6f6b12d
  415d70:	les    ebp,FWORD PTR [edx-0x6dc4a3ee]
  415d76:	ins    BYTE PTR es:[edi],dx
  415d77:	loop   0x415dc5
  415d79:	aam    0xf9
  415d7b:	jmp    0x3e17:0x11ce911
  415d82:	ret    
  415d83:	pop    ecx
  415d84:	dec    eax
  415d85:	and    BYTE PTR ss:[edi+0x405e2e65],al
  415d8c:	push   ebx
  415d8d:	jnp    0x415d2f
  415d8f:	sbb    DWORD PTR [esi+0x3a],ecx
  415d92:	xchg   edi,eax
  415d93:	xchg   ebx,eax
  415d94:	add    eax,0xe8d2320e
  415d99:	cmp    ch,al
  415d9b:	push   es
  415d9c:	pop    ebp
  415d9d:	ss pop eax
  415d9f:	jns    0x415e01
  415da1:	fild   DWORD PTR [edx+0x6872cb13]
  415da7:	mov    bl,0xf5
  415da9:	or     eax,DWORD PTR ds:0xe32d5af4
  415daf:	mov    dh,0x2d
  415db1:	ins    DWORD PTR es:[edi],dx
  415db2:	dec    edi
  415db3:	mov    ebp,0xfa4feb4a
  415db8:	ds sti 
  415dba:	out    0xee,al
  415dbc:	mov    edx,0xff658d47
  415dc1:	add    BYTE PTR [edx],ah
  415dc3:	test   DWORD PTR [edx+0x78a470fa],esi
  415dc9:	jb     0x415da3
  415dcb:	jns    0x415dac
  415dcd:	daa    
  415dce:	push   es
  415dcf:	mov    bh,0xc6
  415dd1:	mov    ch,0x21
  415dd3:	fwait
  415dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd6:	pop    ecx
  415dd7:	or     al,0xf6
  415dd9:	gs mov dl,0xfc
  415ddc:	repnz test al,0x36
  415ddf:	repz int3 
  415de1:	xor    BYTE PTR [eax-0x39e5f82],bh
  415de7:	lods   eax,DWORD PTR ds:[esi]
  415de8:	xor    ebp,DWORD PTR [esi]
  415dea:	add    DWORD PTR [ebp-0x16e5c8bd],0x9a7403ac
  415df4:	mov    ecx,0x3c31b716
  415df9:	inc    eax
  415dfa:	and    ebp,esi
  415dfc:	push   esp
  415dfd:	call   0xb7bb:0x3e3a2fc0
  415e04:	lock or al,BYTE PTR [ecx]
  415e07:	pop    edx
  415e08:	or     eax,0x1f541bdc
  415e0d:	imul   edx,DWORD PTR [edx-0x3675000],0x8fe1b362
  415e17:	arpl   sp,bp
  415e19:	push   0x5248862
  415e1e:	loop   0x415dbd
  415e20:	aad    0x9c
  415e22:	adc    BYTE PTR [edi],ah
  415e24:	xchg   edx,ebx
  415e26:	(bad)  
  415e27:	clc    
  415e28:	jmp    ecx
  415e2a:	mov    bl,BYTE PTR [ecx+0x2ba67007]
  415e30:	fwait
  415e31:	int3   
  415e32:	ja     0x415e0e
  415e34:	pop    ds
  415e35:	into   
  415e36:	ror    DWORD PTR ds:[ecx+eiz*4-0x5b],cl
  415e3b:	xor    edi,DWORD PTR [edx-0x5842db8e]
  415e41:	repz jo 0x415e9d
  415e44:	push   ebx
  415e45:	pop    esi
  415e46:	std    
  415e47:	ds ret 
  415e49:	neg    BYTE PTR [esi]
  415e4b:	lahf   
  415e4c:	jno    0x415de0
  415e4e:	or     al,bh
  415e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e51:	sub    al,0x7a
  415e53:	jnp    0x415ea4
  415e55:	das    
  415e56:	or     BYTE PTR [eax-0x43b609c7],al
  415e5c:	fnstsw WORD PTR [esi-0x713c6639]
  415e62:	jge    0x415ec4
  415e64:	lods   al,BYTE PTR ds:[esi]
  415e65:	out    dx,al
  415e66:	xchg   ecx,eax
  415e67:	lea    ecx,[ecx]
  415e69:	and    al,dh
  415e6b:	sub    bh,dl
  415e6d:	sbb    eax,0xbb3b8b73
  415e72:	cmp    DWORD PTR [ecx+0x12],esi
  415e75:	fst    QWORD PTR [edi+0x9]
  415e78:	xor    dh,al
  415e7a:	sti    
  415e7b:	(bad)  
  415e7c:	push   ds
  415e7d:	or     edx,DWORD PTR [edx+edi*1-0x59]
  415e81:	ja     0x415e0b
  415e83:	mov    ecx,0xd6e58e81
  415e88:	inc    edi
  415e89:	in     eax,dx
  415e8a:	push   esp
  415e8b:	jge    0x415e5f
  415e8d:	sbb    eax,0x4679471f
  415e92:	out    0x34,eax
  415e94:	fistp  WORD PTR [edi-0x4a]
  415e97:	cdq    
  415e98:	sahf   
  415e99:	(bad)  
  415e9a:	push   ebp
  415e9b:	or     eax,0x4ea66bec
  415ea0:	test   DWORD PTR [eax],edx
  415ea2:	sub    DWORD PTR [ebx+ebp*1+0x62],esp
  415ea6:	sub    al,BYTE PTR [ecx]
  415ea8:	ja     0x415e9b
  415eaa:	sti    
  415eab:	mov    bh,0x46
  415ead:	push   ss
  415eae:	lds    ebx,FWORD PTR [ebx+0x36]
  415eb1:	ins    DWORD PTR es:[edi],dx
  415eb2:	xlat   BYTE PTR ds:[ebx]
  415eb3:	adc    eax,0xe3f80865
  415eb8:	clc    
  415eb9:	push   ss
  415eba:	hlt    
  415ebb:	cmovbe ebp,DWORD PTR [esi+edi*8-0x4f4bbae5]
  415ec3:	pop    ss
  415ec4:	dec    edx
  415ec5:	dec    edi
  415ec6:	push   edx
  415ec7:	daa    
  415ec8:	popf   
  415ec9:	or     eax,0x24b998df
  415ece:	dec    eax
  415ecf:	addr16 cmp al,0x1c
  415ed2:	fmul   st,st(1)
  415ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed5:	fisttp DWORD PTR [eax-0x54]
  415ed8:	jmp    0xf63e25ba
  415edd:	adc    ebx,edi
  415edf:	pop    edx
  415ee0:	ins    BYTE PTR es:[edi],dx
  415ee1:	push   esp
  415ee2:	xchg   BYTE PTR [eax+0x77a39ee9],bh
  415ee8:	mov    dh,0x5
  415eea:	(bad)  
  415eec:	lock scas eax,DWORD PTR es:[edi]
  415eee:	outs   dx,BYTE PTR ds:[esi]
  415eef:	jmp    0x7541:0x89238b28
  415ef6:	into   
  415ef7:	les    ebx,FWORD PTR [ecx-0x6e49561]
  415efd:	icebp  
  415efe:	pop    edi
  415eff:	xor    al,0x53
  415f01:	mov    dl,ch
  415f03:	xchg   esp,eax
  415f04:	cmp    DWORD PTR [eax],0xa30ed61a
  415f0a:	dec    edx
  415f0b:	std    
  415f0c:	test   BYTE PTR [ebx],dh
  415f0e:	fst    QWORD PTR ds:0x9e1b105e
  415f14:	and    DWORD PTR gs:[edx],ebp
  415f17:	aam    0x63
  415f19:	mov    ebp,DWORD PTR [eax-0x67eec907]
  415f1f:	xchg   esi,eax
  415f20:	retf   
  415f21:	jge    0x415ec2
  415f23:	icebp  
  415f24:	dec    edx
  415f25:	adc    BYTE PTR [ebx],cl
  415f27:	mov    al,0x97
  415f29:	push   edi
  415f2a:	mov    dh,0x85
  415f2c:	pusha  
  415f2d:	adc    edx,edx
  415f2f:	mov    bh,0x66
  415f31:	(bad)  
  415f32:	fdivr  QWORD PTR [ecx]
  415f34:	xchg   ebp,eax
  415f35:	inc    eax
  415f36:	daa    
  415f37:	push   eax
  415f38:	mov    WORD PTR [eax],?
  415f3a:	sbb    ah,BYTE PTR [eax]
  415f3c:	sar    esp,cl
  415f3e:	and    eax,0x95dd0ba6
  415f43:	fsubr  QWORD PTR [ecx+0x3e]
  415f46:	pop    ss
  415f47:	out    dx,eax
  415f48:	je     0x415fc9
  415f4a:	mov    bh,BYTE PTR [edx+esi*8+0x5ebbffe9]
  415f51:	sbb    eax,0x51db6a6
  415f56:	and    BYTE PTR [eax+edi*4+0x70],dh
  415f5a:	and    eax,0xf9b3bcf3
  415f5f:	pushf  
  415f60:	imul   esi,DWORD PTR [ebx],0xb265f23c
  415f66:	cmc    
  415f67:	pop    esp
  415f68:	push   esp
  415f69:	addr16 in al,0x8b
  415f6c:	sbb    al,0x42
  415f6e:	push   ebx
  415f6f:	retf   
  415f70:	jbe    0x415ef4
  415f72:	mov    ch,0xa3
  415f74:	push   esp
  415f75:	fnstsw WORD PTR [ebx]
  415f77:	(bad)  [esi+0x6d0add83]
  415f7d:	add    al,0x93
  415f7f:	sub    BYTE PTR [edi+0x74],al
  415f82:	dec    ebx
  415f83:	sbb    dl,BYTE PTR [esi]
  415f85:	inc    ecx
  415f86:	outs   dx,DWORD PTR ds:[esi]
  415f87:	inc    edx
  415f88:	xchg   ebx,eax
  415f89:	ror    DWORD PTR [edi+eax*1+0x27],0x43
  415f8e:	repnz fiadd WORD PTR [edx+edi*1]
  415f92:	sti    
  415f93:	push   eax
  415f94:	xor    eax,DWORD PTR [edx-0x5a6cd003]
  415f9a:	push   ebp
  415f9b:	jae    0x415f75
  415f9d:	mov    esp,eax
  415f9f:	div    BYTE PTR [eax+0x23f84137]
  415fa5:	xor    al,0xaa
  415fa7:	inc    ebx
  415fa8:	stos   BYTE PTR es:[edi],al
  415fa9:	ss jmp 0x415fc6
  415fac:	cwde   
  415fad:	mov    es,edi
  415faf:	or     DWORD PTR [eax-0x76],ebp
  415fb2:	inc    cl
  415fb4:	in     al,dx
  415fb5:	arpl   WORD PTR [edi+0x48],cx
  415fb8:	sub    BYTE PTR [ecx],bl
  415fba:	(bad)  
  415fbb:	out    dx,al
  415fbc:	js     0x415f8b
  415fbe:	js     0x415f92
  415fc0:	mov    ebp,0xf86f9aa
  415fc5:	ins    DWORD PTR es:[edi],dx
  415fc6:	mov    dh,0xef
  415fc8:	inc    ebp
  415fc9:	inc    edi
  415fca:	fucom  st(4)
  415fcc:	retf   0xf5aa
  415fcf:	jmp    0x6ac10d0b
  415fd4:	js     0x415f72
  415fd6:	mov    edi,DWORD PTR [ebp-0x6cfefd7]
  415fdc:	dec    BYTE PTR [ebp+esi*1-0x3a558568]
  415fe3:	mov    ch,0xce
  415fe5:	test   DWORD PTR [esi],ebx
  415fe7:	xchg   ecx,eax
  415fe8:	mov    edi,0x814fb488
  415fed:	mov    esi,0x890da8e9
  415ff2:	shr    BYTE PTR [ebp+0x6],1
  415ff5:	int    0x7e
  415ff7:	ror    BYTE PTR [ebx+eiz*2+0x160046ba],0x13
  415fff:	mov    esi,0x36289ba
  416004:	and    eax,0x2408986a
  416009:	pop    ss
  41600a:	add    eax,0xc9b339ce
  41600f:	outs   dx,BYTE PTR ds:[esi]
  416010:	xchg   ebp,eax
  416011:	int3   
  416012:	les    esi,FWORD PTR [esi+0x71a9b495]
  416018:	mov    eax,0x79a69c5c
  41601d:	out    dx,al
  41601e:	test   esp,0x75b8d741
  416024:	and    edx,esp
  416026:	add    al,0xaf
  416028:	jl     0x41609e
  41602a:	sub    al,0x1a
  41602c:	dec    ecx
  41602d:	fsubr  st(5),st
  41602f:	fist   WORD PTR [ecx]
  416031:	or     al,0xc8
  416033:	or     al,dh
  416035:	push   eax
  416036:	jmp    0x4566296b
  41603b:	lahf   
  41603c:	(bad)  
  41603e:	pop    ds
  41603f:	ds mov ch,0xdf
  416042:	cmp    al,BYTE PTR [eax+0x5d]
  416045:	inc    ebx
  416046:	int    0x6a
  416048:	adc    cl,BYTE PTR [edx+eiz*4]
  41604b:	cs es jb 0x416092
  41604f:	fs (bad) 
  416051:	jb     0x416009
  416053:	mov    eax,0xd46b0203
  416058:	add    bl,BYTE PTR [eax]
  41605a:	or     DWORD PTR [edx],ecx
  41605c:	ds adc eax,0xd5ea2dff
  416062:	imul   ebx,DWORD PTR [edx],0xfaa98804
  416068:	jle    0x416025
  41606a:	(bad)  
  41606b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606c:	add    dl,BYTE PTR [esp+ebp*4-0x1d]
  416070:	outs   dx,DWORD PTR ds:[esi]
  416071:	add    al,dl
  416073:	and    al,0xf4
  416075:	setae  BYTE PTR [edx+ebp*4]
  416079:	rol    DWORD PTR [eax],cl
  41607b:	mov    ds:0x3fd64454,eax
  416080:	iret   
  416081:	fidiv  WORD PTR [esi]
  416083:	shld   ebp,ecx,cl
  416086:	mov    eax,ds:0x84539111
  41608b:	aas    
  41608c:	ss sub eax,0x17e719f2
  416092:	adc    al,0x2c
  416094:	bound  edx,QWORD PTR [eax]
  416096:	jbe    0x416063
  416098:	imul   ecx,edx,0x8b247e05
  41609e:	mov    ds:0xce5df9b4,eax
  4160a3:	loopne 0x41605c
  4160a5:	mov    BYTE PTR [eax],al
  4160a7:	pop    ds
  4160a8:	pop    ebp
  4160a9:	lods   al,BYTE PTR ds:[esi]
  4160aa:	cwde   
  4160ab:	jmp    edx
  4160ad:	push   esi
  4160ae:	ins    DWORD PTR es:[edi],dx
  4160af:	aas    
  4160b0:	mov    ebx,0x62198d04
  4160b5:	push   esp
  4160b6:	dec    ebp
  4160b7:	jmp    0x62656e44
  4160bc:	in     al,dx
  4160bd:	out    dx,al
  4160be:	in     al,0x6
  4160c0:	popf   
  4160c1:	jne    0x41605d
  4160c3:	test   al,0x7c
  4160c5:	jl     0x41613f
  4160c7:	in     eax,0x3f
  4160c9:	repnz and al,BYTE PTR [edx+0x4c1a9c1e]
  4160d0:	adc    ch,bl
  4160d2:	add    al,ah
  4160d4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d6:	int3   
  4160d7:	dec    edx
  4160d8:	sbb    al,0x73
  4160da:	mov    esi,0xae1c74dd
  4160df:	xchg   BYTE PTR [esi-0x5b],al
  4160e2:	push   es
  4160e3:	jo     0x416161
  4160e5:	or     ch,BYTE PTR [ebp-0x69868ecd]
  4160eb:	jmp    0x4160ad
  4160ed:	and    eax,DWORD PTR [ebx+eiz*4-0x272cf92d]
  4160f4:	fwait
  4160f5:	mov    ds:0xae23c76a,eax
  4160fa:	cld    
  4160fb:	jae    0x4160cd
  4160fd:	xchg   ebp,esi
  4160ff:	test   BYTE PTR [ebp-0x5eb80e40],ch
  416105:	mov    ebp,0xb588a89a
  41610a:	call   0xe287937e
  41610f:	mov    dh,0xd7
  416111:	sti    
  416112:	ret    0xd1c6
  416115:	mov    ebx,0x3148bfb3
  41611a:	imul   ecx,DWORD PTR [eax+0x7d5b644c],0x767ee422
  416124:	mov    dh,0x48
  416126:	sar    DWORD PTR [ebp+0x35],0xe0
  41612a:	pusha  
  41612b:	push   ss
  41612c:	fldenv [esi+0x5]
  41612f:	inc    ecx
  416130:	mov    dh,0xa1
  416132:	adc    DWORD PTR es:[edx+0xf25775a],edi
  416139:	jmp    0x416172
  41613b:	dec    eax
  41613c:	push   esp
  41613d:	aaa    
  41613e:	sbb    esp,ecx
  416140:	or     DWORD PTR [eax+0x2],ecx
  416143:	xchg   edx,eax
  416144:	std    
  416145:	sbb    BYTE PTR [esi+edx*1],dl
  416148:	pop    ecx
  416149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41614a:	cmp    al,0x3f
  41614c:	ror    bl,0xdf
  41614f:	push   es
  416150:	bound  ecx,QWORD PTR [edx]
  416152:	sub    BYTE PTR [esi-0x4d],0xb3
  416156:	sti    
  416157:	retf   
  416158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416159:	bound  esp,QWORD PTR [ecx-0x62]
  41615c:	clc    
  41615d:	lea    ebx,[esi]
  41615f:	mov    BYTE PTR [eax+0x11],0xe9
  416163:	xchg   DWORD PTR [ecx+ebx*8+0x247d8059],esp
  41616a:	mov    ecx,0x8931583d
  41616f:	adc    edx,DWORD PTR [ecx+0x9]
  416172:	mov    ch,0x97
  416174:	ja     0x416151
  416176:	dec    esi
  416177:	repnz ins BYTE PTR es:[edi],dx
  416179:	loope  0x416111
  41617b:	or     DWORD PTR [ebx],ebp
  41617d:	pop    ecx
  41617e:	push   cs
  41617f:	mov    bl,0xd
  416181:	and    al,0xb6
  416183:	into   
  416184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416185:	idiv   BYTE PTR [eax]
  416187:	sbb    BYTE PTR [esi-0x736a55c],0x30
  41618e:	cmc    
  41618f:	scas   eax,DWORD PTR es:[edi]
  416190:	ins    BYTE PTR es:[edi],dx
  416191:	or     ebp,DWORD PTR [edi+edx*8-0x6e]
  416195:	nop
  416196:	dec    esi
  416197:	ror    BYTE PTR [edi],1
  416199:	cdq    
  41619a:	int3   
  41619b:	fsubr  QWORD PTR [edi]
  41619d:	not    DWORD PTR [eax+eiz*4]
  4161a0:	adc    edi,0xffffffdf
  4161a3:	lods   eax,DWORD PTR ds:[esi]
  4161a4:	arpl   WORD PTR [edi-0x1a],bx
  4161a7:	inc    esi
  4161a8:	repz fisubr DWORD PTR [ebx+0x41f85c3e]
  4161af:	out    0x96,al
  4161b1:	imul   DWORD PTR [ebx-0x6]
  4161b4:	sbb    BYTE PTR [eax+0x64],dh
  4161b7:	adc    al,0xe
  4161b9:	xlat   BYTE PTR ds:[ebx]
  4161ba:	pop    es
  4161bb:	push   edx
  4161bc:	fmul   DWORD PTR [ecx-0x43]
  4161bf:	scas   al,BYTE PTR es:[edi]
  4161c0:	cmp    BYTE PTR [ecx-0x1a],dh
  4161c3:	shr    edx,0x90
  4161c6:	push   ebx
  4161c7:	mov    ecx,0x4e0425a7
  4161cc:	out    0x4e,eax
  4161ce:	xchg   esi,ebp
  4161d0:	adc    DWORD PTR [edx-0x18773e49],eax
  4161d6:	rol    ch,1
  4161d8:	mov    bh,0x9d
  4161da:	xor    eax,0x379286d9
  4161df:	int    0x10
  4161e1:	sbb    eax,0x277bd2a0
  4161e6:	and    al,0x95
  4161e8:	fistp  DWORD PTR [esi-0x5de76d5b]
  4161ee:	xor    eax,0xf476d346
  4161f3:	xchg   ecx,eax
  4161f4:	and    DWORD PTR [edx],0xffffffeb
  4161f7:	cmc    
  4161f8:	out    dx,al
  4161f9:	mov    al,0x44
  4161fb:	xor    ebp,edx
  4161fd:	dec    ebp
  4161fe:	sbb    eax,0x5f886ec6
  416203:	stos   DWORD PTR es:[edi],eax
  416204:	adc    al,0xe
  416206:	pop    ecx
  416207:	ror    DWORD PTR [edx-0x66],1
  41620a:	pop    edi
  41620b:	popf   
  41620c:	arpl   dx,bx
  41620e:	jmp    0x4161b5
  416210:	dec    esi
  416211:	cmc    
  416212:	or     ah,dh
  416214:	es aas 
  416216:	repnz push es
  416218:	adc    ebp,DWORD PTR [ebp-0x4ce9f3ba]
  41621e:	shr    DWORD PTR [esi-0x29],cl
  416221:	and    edi,DWORD PTR [edx]
  416223:	dec    eax
  416224:	or     cl,bl
  416226:	pop    ds
  416227:	test   al,0x45
  416229:	test   al,0xd
  41622b:	xchg   edx,eax
  41622c:	sbb    al,0x6c
  41622e:	shl    ebp,cl
  416230:	jns    0x4161c8
  416232:	scas   eax,DWORD PTR es:[edi]
  416233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416235:	jno    0x416215
  416237:	cmp    edx,0xbc188680
  41623d:	gs inc edx
  41623f:	call   0xef:0x6bc9988b
  416246:	mov    ecx,0x3e843cbc
  41624b:	jmp    0x585d:0x88882a6d
  416252:	and    DWORD PTR [edx],ecx
  416254:	inc    ebx
  416255:	mov    dh,0x25
  416257:	inc    eax
  416258:	rcl    BYTE PTR [esi],cl
  41625a:	add    cl,dl
  41625c:	out    dx,eax
  41625d:	jmp    0x8640:0x7268c25c
  416264:	fild   DWORD PTR ds:[edx+0x4b]
  416268:	das    
  416269:	arpl   WORD PTR [ebp+edi*8+0x15],bx
  41626d:	xor    BYTE PTR [esi+0x7ad7afa1],cl
  416273:	fldcw  WORD PTR [esi-0x6a04c903]
  416279:	(bad)  
  41627a:	mov    bh,0x52
  41627c:	pop    ds
  41627d:	mov    edi,0x1aeeaa5d
  416282:	pushf  
  416283:	jns    0x41624c
  416285:	xor    DWORD PTR [edi],0xffffffa9
  416288:	int3   
  416289:	mov    dh,0x61
  41628b:	jae    0x41621e
  41628d:	dec    ebp
  41628e:	inc    eax
  41628f:	sub    BYTE PTR [ecx+0x6e924921],ah
  416295:	imul   esp,DWORD PTR [edi+0x64e8f464],0xc87f774f
  41629f:	pop    ecx
  4162a0:	or     edx,ebp
  4162a2:	mov    dl,BYTE PTR [ecx-0x29]
  4162a5:	xor    eax,0x966c9329
  4162aa:	adc    BYTE PTR [ebx+ebp*1],bh
  4162ad:	inc    ebp
  4162ae:	cmp    bh,BYTE PTR [eax-0x7f]
  4162b1:	xchg   esi,eax
  4162b2:	cli    
  4162b3:	out    dx,al
  4162b4:	sbb    eax,0x97a9efe0
  4162b9:	retf   0x65dc
  4162bc:	mov    eax,ds:0x567b27d2
  4162c1:	jns    0x4162a7
  4162c3:	retf   
  4162c4:	stc    
  4162c5:	or     cl,BYTE PTR [edx+0x1095bd27]
  4162cb:	jmp    0x3781173
  4162d0:	les    ecx,FWORD PTR [esi]
  4162d2:	leave  
  4162d3:	or     eax,0xb91758b5
  4162d8:	adc    DWORD PTR [ebp+0x6c],edi
  4162db:	enter  0x4262,0x20
  4162df:	push   esp
  4162e0:	xor    eax,DWORD PTR [ebp+0x2]
  4162e3:	xchg   edx,eax
  4162e4:	ret    0x12bc
  4162e7:	jo     0x416297
  4162e9:	sbb    al,0x5
  4162eb:	add    ah,dl
  4162ed:	cmc    
  4162ee:	cmp    al,0x49
  4162f0:	cmp    al,BYTE PTR [eax-0x3b59e5e0]
  4162f6:	repnz push ebx
  4162f8:	sbb    DWORD PTR [edi+edi*2-0x22d027cf],0x4d
  416300:	mov    edi,0x97a6582
  416305:	ret    0xe5bd
  416308:	scas   eax,DWORD PTR es:[edi]
  416309:	push   ebp
  41630a:	mov    ebx,0xb341f359
  41630f:	push   0x17
  416311:	mov    ebp,0x4da1db1c
  416316:	dec    edi
  416317:	stos   DWORD PTR es:[edi],eax
  416318:	into   
  416319:	inc    di
  41631b:	xchg   edi,eax
  41631c:	sub    DWORD PTR [ebx+0x1a],ebx
  41631f:	or     ah,ah
  416321:	popa   
  416322:	out    dx,eax
  416323:	add    BYTE PTR [eax-0x79],bl
  416326:	fwait
  416327:	lods   eax,DWORD PTR ds:[esi]
  416328:	das    
  416329:	sbb    BYTE PTR [ecx-0x13],ch
  41632c:	mov    cl,0x8
  41632e:	mov    edi,0xcc4ac5c
  416333:	xchg   ecx,eax
  416334:	adc    eax,0x5e4e0244
  416339:	scas   al,BYTE PTR es:[edi]
  41633a:	jae    0x41639c
  41633c:	lods   al,BYTE PTR ds:[esi]
  41633d:	sub    esi,0xd92f4e12
  416343:	ds push 0xfffffffc
  416346:	mov    eax,ds:0xf74f61c6
  41634b:	inc    edi
  41634c:	add    dh,dl
  41634e:	add    eax,0xe2f7d788
  416353:	in     al,0xd1
  416355:	pop    ds
  416356:	pusha  
  416357:	mov    ch,0xa9
  416359:	aam    0x68
  41635b:	pop    ds
  41635c:	pop    ebp
  41635d:	push   esp
  41635e:	xchg   cx,ax
  416360:	xchg   ecx,eax
  416361:	mov    eax,0x254a2e19
  416366:	mov    eax,ds:0x2d07164
  41636b:	mov    dl,0x97
  41636d:	mov    al,ds:0xee50b16f
  416372:	jp     0x416367
  416374:	lods   eax,DWORD PTR ds:[esi]
  416375:	jmp    0x71f5:0x21c7f353
  41637c:	jge    0x4163b5
  41637e:	(bad)  
  41637f:	pop    edi
  416380:	and    edi,esi
  416382:	outs   dx,DWORD PTR ds:[esi]
  416383:	add    al,BYTE PTR [eiz*4+0x315ed62]
  41638a:	mov    ds:0x3446f85e,eax
  41638f:	nop
  416390:	out    0x9b,al
  416392:	das    
  416393:	mov    ecx,0x448471fc
  416398:	popf   
  416399:	jl     0x416379
  41639b:	jle    0x41638e
  41639d:	popa   
  41639e:	ret    
  41639f:	lock and DWORD PTR [edx-0x44],edi
  4163a3:	popa   
  4163a4:	sbb    eax,0x48bac5eb
  4163a9:	popf   
  4163aa:	cmp    edi,DWORD PTR [esi]
  4163ac:	or     ebx,DWORD PTR ds:0xdb524102
  4163b2:	call   0x12bde90a
  4163b7:	push   ss
  4163b8:	or     DWORD PTR [ebx+0x6ae0da0f],eax
  4163be:	mov    ds:0xb8be8900,al
  4163c3:	xor    esi,DWORD PTR [edi]
  4163c5:	xor    dh,ah
  4163c7:	(bad)  [edx+0x392a85f7]
  4163cd:	xor    DWORD PTR [esi+0x25],eax
  4163d0:	cmp    BYTE PTR [esi+0x7d],dh
  4163d3:	shr    DWORD PTR [edx-0x66],0x0
  4163d7:	out    0x8e,eax
  4163d9:	aas    
  4163da:	pop    es
  4163db:	ins    BYTE PTR es:[edi],dx
  4163dc:	and    bl,BYTE PTR [ecx+esi*1]
  4163df:	sbb    esi,DWORD PTR [eiz*8-0x10a32846]
  4163e6:	je     0x4163ac
  4163e8:	mov    bl,0x64
  4163ea:	cmp    eax,esi
  4163ec:	popa   
  4163ed:	pop    es
  4163ee:	mov    BYTE PTR [ebp+0x13],bl
  4163f1:	mov    edi,0xecac62a0
  4163f6:	mov    esi,0xfce4251
  4163fb:	popf   
  4163fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163fd:	jno    0x416416
  4163ff:	mov    ebp,0x74d1bf45
  416404:	push   eax
  416405:	sbb    esp,DWORD PTR ds:0x6141a578
  41640b:	sahf   
  41640c:	mov    ebx,DWORD PTR [ebx-0x56]
  41640f:	pop    ecx
  416410:	jp     0x416444
  416412:	shr    DWORD PTR [ecx-0x354f1314],1
  416418:	scas   eax,DWORD PTR es:[edi]
  416419:	pop    ebx
  41641a:	fwait
  41641b:	sahf   
  41641c:	rcl    dh,cl
  41641e:	xlat   BYTE PTR ds:[ebx]
  41641f:	(bad)  [edx-0x536633e1]
  416425:	cmc    
  416426:	ja     0x416469
  416428:	sub    al,0x8
  41642a:	pop    ds
  41642b:	(bad)
  41642f:	mov    WORD PTR [ebp+0x76],fs
  416432:	scas   al,BYTE PTR es:[edi]
  416433:	les    esp,FWORD PTR [edx-0xc]
  416436:	lock idiv DWORD PTR [eax+0x6c0d1eca]
  41643d:	bound  eax,QWORD PTR [edi-0x43]
  416440:	xchg   ecx,eax
  416441:	jbe    0x416406
  416443:	sahf   
  416444:	or     bh,cl
  416446:	add    eax,edi
  416448:	sbb    DWORD PTR [edx],esp
  41644a:	div    BYTE PTR [edi+0x4d]
  41644d:	test   eax,0xfa65af6d
  416452:	xchg   DWORD PTR [ebp-0x76],ebp
  416455:	inc    edi
  416456:	lods   al,BYTE PTR ds:[esi]
  416457:	push   esp
  416458:	inc    eax
  416459:	mov    BYTE PTR [ebp-0x2a34eb2e],bl
  41645f:	pop    ecx
  416460:	sub    BYTE PTR [eax+eax*4-0x265526fe],dl
  416467:	or     esi,ebx
  416469:	hlt    
  41646a:	push   edi
  41646b:	cmc    
  41646c:	pop    eax
  41646d:	push   edi
  41646e:	ins    DWORD PTR es:[edi],dx
  41646f:	xchg   ebx,eax
  416470:	inc    ebx
  416471:	sub    al,BYTE PTR [ebp-0x4d856731]
  416477:	inc    eax
  416478:	(bad)  
  416479:	and    ebp,ebp
  41647b:	cmp    eax,0x36ab8e7e
  416480:	lds    ecx,FWORD PTR [ecx]
  416482:	xchg   ebx,eax
  416483:	shl    DWORD PTR cs:[edx-0x3d3b855c],0x7c
  41648b:	add    esp,DWORD PTR [eax-0x3447e515]
  416491:	mov    ecx,0x8ce92625
  416496:	imul   esp,DWORD PTR [edx+0x43],0xffffffe3
  41649a:	ret    0xda9a
  41649d:	xor    dl,BYTE PTR ds:0x45dd4f6d
  4164a3:	retf   0xec84
  4164a6:	and    eax,DWORD PTR [ebx+eiz*1+0x7432ca32]
  4164ad:	xchg   ebx,eax
  4164ae:	ss mov bh,0x2e
  4164b1:	inc    edx
  4164b2:	sub    eax,0x95b2806f
  4164b7:	mov    BYTE PTR [ecx+edi*2],ah
  4164ba:	popa   
  4164bb:	fdivr  DWORD PTR [ebx-0x59]
  4164be:	mov    ch,dl
  4164c0:	pop    ebp
  4164c1:	arpl   WORD PTR [edx],bx
  4164c3:	and    BYTE PTR gs:[edi+0x4159bd96],ah
  4164ca:	retf   0x8312
  4164cd:	loope  0x4164a7
  4164cf:	test   al,0x26
  4164d1:	jb     0x416503
  4164d3:	pop    esi
  4164d4:	add    cl,cl
  4164d6:	sub    al,0xbc
  4164d8:	jmp    FWORD PTR [esi]
  4164da:	pop    ss
  4164db:	gs xadd ebx,ecx
  4164df:	retf   
  4164e0:	addr16 push edi
  4164e2:	mov    BYTE PTR [edx-0x69],dl
  4164e5:	aad    0xb0
  4164e7:	mov    eax,0xdf70dc7f
  4164ec:	add    WORD PTR [ebx+0x3f],bx
  4164f0:	pop    ecx
  4164f1:	mov    ebp,edx
  4164f3:	test   edi,ecx
  4164f5:	fst    QWORD PTR [eax+ebp*1-0x72a97a40]
  4164fc:	repnz lea ecx,[eax*8-0x294003f8]
  416504:	fsubr  st(6),st
  416506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416507:	dec    esp
  416508:	outs   dx,BYTE PTR ss:[esi]
  41650a:	test   BYTE PTR [ecx],ch
  41650c:	push   esi
  41650d:	push   cs
  41650e:	in     al,dx
  41650f:	push   edx
  416510:	cmp    al,0x79
  416512:	sub    bh,BYTE PTR [ebp-0x3ab9f0b0]
  416518:	mov    BYTE PTR [edx+0x3db0a135],ah
  41651e:	push   ebp
  41651f:	add    ecx,DWORD PTR [edx-0x6656b4b4]
  416525:	aaa    
  416526:	repz adc BYTE PTR [edx-0x54],dl
  41652a:	outs   dx,DWORD PTR ds:[esi]
  41652b:	stos   DWORD PTR es:[edi],eax
  41652c:	and    BYTE PTR [esi-0x45ee87e9],ah
  416532:	sub    eax,0x3b0bc942
  416537:	in     al,0x66
  416539:	lea    esp,[esi-0x7ec7d1e4]
  41653f:	in     al,0xa2
  416541:	add    ah,BYTE PTR [edx]
  416543:	and    BYTE PTR [ebp+0x47],ch
  416546:	xchg   ebx,eax
  416547:	pop    ss
  416548:	ja     0x41655f
  41654a:	push   esp
  41654b:	jl     0x4165a4
  41654d:	xchg   DWORD PTR [edi+0x37632830],eax
  416553:	sub    al,0xa0
  416555:	or     eax,0x7acb9b11
  41655a:	jns    0x416575
  41655c:	std    
  41655d:	test   al,0x69
  41655f:	ss push 0x76
  416562:	sar    DWORD PTR [esi+ecx*8],0x9a
  416566:	and    BYTE PTR [esi+eax*8+0xd456304],al
  41656d:	ja     0x4164ff
  41656f:	xchg   BYTE PTR gs:[ebp+0x7f0e58a3],bl
  416576:	es sbb cl,cl
  416579:	cmp    edx,eax
  41657b:	shr    dh,1
  41657d:	aam    0x2
  41657f:	ds jne 0x416503
  416582:	xor    DWORD PTR [ebx],0x55
  416585:	jno    0x416543
  416587:	cmp    eax,0xd3b510b2
  41658c:	jecxz  0x4165dd
  41658e:	mov    DWORD PTR [ebp-0x6b126051],esp
  416594:	cmp    eax,eax
  416596:	out    dx,al
  416597:	mov    bh,0x85
  416599:	mov    ebx,0xa7ab70fb
  41659e:	mov    eax,0xdb6ff762
  4165a3:	repnz xchg edi,eax
  4165a5:	(bad)  
  4165a6:	stos   BYTE PTR es:[edi],al
  4165a7:	int    0x70
  4165a9:	cmp    BYTE PTR [edx],bh
  4165ab:	add    BYTE PTR ds:[esi-0x3f],bl
  4165af:	imul   edx,DWORD PTR [esi],0x998d9a8f
  4165b5:	jno    0x416577
  4165b7:	mov    al,0x80
  4165b9:	rol    BYTE PTR [ebx+0x5f6555ce],cl
  4165bf:	loopne 0x4165d9
  4165c1:	ins    BYTE PTR es:[edi],dx
  4165c2:	and    dh,BYTE PTR ds:0x6fb1f4fb
  4165c8:	aad    0xbb
  4165ca:	lea    ecx,ds:0x90af3f12
  4165d0:	sub    eax,0xa8566cd2
  4165d5:	aaa    
  4165d6:	les    edi,FWORD PTR [ebx+0x3d]
  4165d9:	hlt    
  4165da:	lods   al,BYTE PTR ds:[esi]
  4165db:	mov    esp,0x2629ad6d
  4165e0:	neg    DWORD PTR [esi-0x1c]
  4165e3:	mov    ds:0x771d01b9,eax
  4165e8:	fs pop esi
  4165ea:	sub    al,0xab
  4165ec:	inc    ebx
  4165ed:	repz adc al,0xd9
  4165f0:	jbe    0x416602
  4165f2:	sbb    eax,0xee685225
  4165f7:	stos   BYTE PTR es:[edi],al
  4165f8:	ficomp WORD PTR [edx+ebx*1-0x50]
  4165fc:	aad    0xa
  4165fe:	pusha  
  4165ff:	add    BYTE PTR ds:0xdbfc1862,dl
  416605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416606:	rcl    DWORD PTR [ebx+0x1f7942db],0x6b
  41660d:	dec    ebx
  41660e:	mov    edi,0x9a93bfbd
  416613:	sub    eax,0xbada4797
  416618:	shl    ecx,cl
  41661a:	pop    ss
  41661b:	mov    ah,0x5
  41661d:	mov    al,ds:0xa910df34
  416622:	mov    bl,0xf6
  416624:	mul    eax
  416626:	mov    ch,0x7a
  416628:	fs mov ebp,0xe9abfa9d
  41662e:	inc    ebp
  41662f:	fiadd  DWORD PTR [esi+0x76]
  416632:	and    ecx,DWORD PTR [eax]
  416634:	fcomp  QWORD PTR [esi]
  416636:	xchg   DWORD PTR [eax+esi*4+0x67e351e],edi
  41663d:	rcl    ebx,1
  41663f:	in     eax,0x35
  416641:	mov    BYTE PTR [edx],ah
  416643:	dec    esi
  416644:	ret    
  416645:	lahf   
  416646:	and    BYTE PTR [eax+0x264611f1],bl
  41664c:	sub    BYTE PTR [ebx-0x1],bh
  41664f:	out    0xcd,eax
  416651:	sar    dl,0x31
  416654:	mov    cl,0x8b
  416656:	xchg   esp,eax
  416657:	sub    ebp,DWORD PTR [edi-0x4012cf3]
  41665d:	test   BYTE PTR [ecx-0x729dad34],dl
  416663:	push   ebp
  416664:	and    DWORD PTR [esi+0x2e],ebp
  416667:	inc    ebp
  416668:	jmp    0xe116:0xe272e72
  41666f:	pusha  
  416670:	icebp  
  416671:	rcl    DWORD PTR [esi+0x39],cl
  416674:	(bad)  
  416675:	std    
  416676:	mov    ds:0x2b533f09,eax
  41667b:	dec    ecx
  41667c:	push   edx
  41667d:	adc    edi,eax
  41667f:	mov    ecx,0x2fe8a5d4
  416684:	push   cs
  416685:	xchg   ebx,eax
  416686:	addr16 (bad) 
  416688:	jp     0x416689
  41668a:	lods   eax,DWORD PTR ds:[esi]
  41668b:	(bad)  
  41668d:	xor    eax,0xf65d201f
  416692:	jb     0x416649
  416694:	scas   eax,DWORD PTR es:[edi]
  416695:	(bad)  
  416697:	inc    eax
  416698:	bound  ecx,QWORD PTR [ebx+0x543b735c]
  41669e:	dec    ecx
  41669f:	test   BYTE PTR [esi+0x43],ah
  4166a2:	and    al,0x2f
  4166a4:	inc    ebp
  4166a5:	adc    eax,0x38ef329b
  4166aa:	ror    BYTE PTR [edx+ebp*1-0x10],0x19
  4166af:	jmp    0x6d261565
  4166b4:	add    ah,dl
  4166b6:	popf   
  4166b7:	xlat   BYTE PTR ds:[ebx]
  4166b8:	dec    esi
  4166b9:	data16 ja 0x41666f
  4166bc:	sbb    ch,bh
  4166be:	sub    ah,al
  4166c0:	xchg   ebp,eax
  4166c1:	scas   eax,DWORD PTR es:[edi]
  4166c2:	enter  0xa66c,0x31
  4166c6:	or     BYTE PTR [ebp+0x5e3ae347],bh
  4166cc:	test   esi,esi
  4166ce:	add    ebx,DWORD PTR [ecx-0x4af200f0]
  4166d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166d5:	dec    esi
  4166d6:	fwait
  4166d7:	sub    eax,0x70bbaf8a
  4166dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166dd:	and    dl,dh
  4166df:	mov    ebp,0xa12f961a
  4166e4:	push   esp
  4166e5:	dec    ecx
  4166e6:	or     al,0x4f
  4166e8:	pop    ecx
  4166e9:	(bad)  
  4166ea:	jle    0x4166dd
  4166ec:	into   
  4166ed:	jmp    0x8c0c:0x37917113
  4166f4:	stc    
  4166f5:	mov    bl,0xdf
  4166f7:	jmp    0x416760
  4166f9:	ss jbe 0x4166d6
  4166fc:	dec    edi
  4166fd:	push   ds
  4166fe:	loope  0x416749
  416700:	adc    DWORD PTR ds:0xe461a43c,edi
  416706:	mov    al,ds:0x721b92df
  41670b:	jmp    0xf138:0x81d42fd5
  416712:	fwait
  416713:	inc    ebp
  416714:	and    eax,0x52a8b9c6
  416719:	sub    edi,eax
  41671b:	call   0x6512:0xa88d3fb8
  416722:	mov    DWORD PTR [ebx-0x43c13dd4],ebx
  416728:	stos   DWORD PTR es:[edi],eax
  416729:	push   esi
  41672a:	bound  ebx,QWORD PTR [eax+0x12]
  41672d:	jno    0x416750
  41672f:	pop    esi
  416730:	mov    al,ds:0xe7ce302f
  416735:	push   edx
  416736:	fisub  DWORD PTR [eax-0x1a07b2c6]
  41673c:	fs in  al,0x5a
  41673f:	pop    eax
  416740:	les    edi,FWORD PTR [esi+ecx*4+0x41]
  416744:	add    eax,0xff3af52b
  416749:	test   al,0x68
  41674b:	pusha  
  41674c:	pop    eax
  41674d:	ins    BYTE PTR es:[edi],dx
  41674e:	jmp    0x843:0x70c46c1d
  416755:	in     eax,dx
  416756:	cli    
  416757:	test   esp,ecx
  416759:	adc    eax,0x30a9489b
  41675e:	jl     0x416781
  416760:	shl    DWORD PTR [eax+0x13834a5b],1
  416766:	jl     0x4166f7
  416768:	test   bl,dh
  41676a:	bound  ebx,QWORD PTR [esp+ebp*4+0x4a40999e]
  416771:	enter  0x5bf2,0x4a
  416775:	lock sbb al,0x4b
  416778:	out    0xd6,al
  41677a:	cmp    eax,0x592f0f15
  41677f:	jg     0x41672b
  416781:	and    al,0x78
  416783:	fwait
  416784:	test   al,0x6e
  416786:	or     edx,ebx
  416788:	jo     0x4167e2
  41678a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41678b:	xchg   edi,eax
  41678c:	in     al,0xd3
  41678e:	xor    DWORD PTR [ecx+ecx*2-0x36f88e95],eax
  416795:	push   0xfffffff4
  416797:	cld    
  416798:	nop
  416799:	dec    edi
  41679a:	iret   
  41679b:	imul   edx,DWORD PTR [edi+0x79],0x8b55318e
  4167a2:	jp     0x41678a
  4167a4:	add    BYTE PTR [esi+0x3d],0x5a
  4167a8:	sar    DWORD PTR [edx+0x3a],1
  4167ab:	xchg   BYTE PTR [edx+eiz*4+0xc],cl
  4167af:	mov    esi,DWORD PTR [edx+0x9]
  4167b2:	adc    DWORD PTR [edx],ecx
  4167b4:	cmp    DWORD PTR [ebx+0x2fdd0864],esi
  4167ba:	test   ah,bh
  4167bc:	add    al,0xd
  4167be:	sbb    BYTE PTR [ebx+0x4ff5a6ba],ah
  4167c4:	add    eax,0x83b0ad42
  4167c9:	sti    
  4167ca:	iret   
  4167cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167cc:	in     al,0x7a
  4167ce:	scas   al,BYTE PTR es:[edi]
  4167cf:	and    eax,0x948293c6
  4167d4:	mov    eax,0x7a53a0a6
  4167d9:	fucomp st(1)
  4167db:	sub    ebx,DWORD PTR [eax+edi*8-0x4c]
  4167df:	in     al,dx
  4167e0:	dec    ebx
  4167e1:	add    al,BYTE PTR [edx]
  4167e3:	dec    ebx
  4167e4:	iret   
  4167e5:	sub    eax,DWORD PTR [edi+0x4d]
  4167e8:	add    BYTE PTR [eax-0x21057bae],cl
  4167ee:	pop    ebx
  4167ef:	clc    
  4167f0:	adc    eax,0x7abdaa74
  4167f5:	mov    WORD PTR [edi+0x13],?
  4167f8:	(bad)  
  4167fa:	jne    0x4167ce
  4167fc:	xchg   ah,cl
  4167fe:	xchg   BYTE PTR [edx-0x42],cl
  416801:	aad    0x85
  416803:	inc    edx
  416804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416805:	iret   
  416806:	xchg   edx,eax
  416807:	mov    ds:0x623746b9,eax
  41680c:	or     DWORD PTR [esi-0x32],0xdb0df0f2
  416813:	jno    0x41685c
  416815:	mov    ds:0xdb1124fb,al
  41681a:	hlt    
  41681b:	push   es
  41681c:	fstp   DWORD PTR [edi+ebx*8-0x69acd3e4]
  416823:	mov    esi,0xdcee284b
  416828:	aaa    
  416829:	rcl    DWORD PTR [edx+0x31651381],0x48
  416830:	aam    0x33
  416832:	mov    bl,0x11
  416834:	shl    BYTE PTR [esi-0x32],0x1b
  416838:	cdq    
  416839:	fucomp st(7)
  41683b:	push   es
  41683c:	pop    DWORD PTR [ebx+ecx*8]
  41683f:	in     eax,dx
  416840:	add    BYTE PTR [eax],cl
  416842:	push   0xffffff84
  416844:	out    dx,al
  416845:	imul   ecx,ecx,0xffffffaa
  416848:	js     0x41686b
  41684a:	shl    BYTE PTR [eax+0x4ff1535b],0xef
  416851:	lock stos BYTE PTR es:[edi],al
  416853:	dec    esi
  416854:	sar    ebp,0x6
  416857:	sub    ebp,DWORD PTR [ebx]
  416859:	jg     0x4167f0
  41685b:	rcl    eax,0xf4
  41685e:	sbb    eax,0xa399ea20
  416863:	mov    ds:0x16c2b6d2,eax
  416868:	dec    eax
  416869:	inc    edi
  41686a:	push   0xffffffe9
  41686c:	out    0xcf,al
  41686e:	push   ds
  41686f:	(bad)  
  416870:	sub    BYTE PTR [edx],dl
  416872:	in     al,dx
  416873:	adc    al,0x85
  416875:	mov    al,ds:0x3c148baa
  41687a:	ds stc 
  41687c:	lea    ebx,[edx+0x2f]
  41687f:	and    cl,BYTE PTR [eax-0x8]
  416882:	push   cs
  416883:	or     BYTE PTR [eax],bh
  416885:	cwde   
  416886:	popa   
  416887:	lock push ebx
  416889:	jbe    0x41680e
  41688b:	dec    esi
  41688c:	inc    esi
  41688d:	sub    DWORD PTR [ebx-0xdd4e62e],eax
  416893:	fimul  DWORD PTR [ecx+0x63]
  416896:	aam    0x7f
  416898:	dec    ecx
  416899:	pop    ecx
  41689a:	cmp    ch,0x76
  41689d:	in     al,0x35
  41689f:	jae    0x4168df
  4168a1:	(bad)  
  4168a2:	fst    DWORD PTR [ebx-0x38]
  4168a5:	dec    edx
  4168a6:	sahf   
  4168a7:	pop    edi
  4168a8:	dec    eax
  4168a9:	sub    al,0x36
  4168ab:	add    al,0x8e
  4168ad:	clc    
  4168ae:	div    BYTE PTR [ebx+0x4a]
  4168b1:	mov    ch,0x80
  4168b3:	adc    eax,0x59592f2a
  4168b8:	sti    
  4168b9:	xor    eax,esi
  4168bb:	xchg   esp,eax
  4168bc:	pop    es
  4168bd:	into   
  4168be:	xor    edx,DWORD PTR [eax-0x24]
  4168c1:	cmp    cl,BYTE PTR [eax+0x66cd7b9d]
  4168c7:	push   ds
  4168c8:	dec    ecx
  4168c9:	lods   eax,DWORD PTR ds:[esi]
  4168ca:	sub    DWORD PTR [esi+0x4f],ebp
  4168cd:	les    esp,FWORD PTR [esp+eax*2+0x6c]
  4168d1:	and    al,0x6e
  4168d3:	fadd   st(3),st
  4168d5:	xlat   BYTE PTR ds:[ebx]
  4168d6:	js     0x4168f9
  4168d8:	mov    ebp,0xa538214c
  4168dd:	loope  0x4168cf
  4168df:	stc    
  4168e0:	mov    bl,0x53
  4168e2:	mul    DWORD PTR [edi-0x5f]
  4168e5:	jns    0x4168e5
  4168e7:	ss adc al,0xdf
  4168ea:	pop    ecx
  4168eb:	mov    esp,DWORD PTR [edi+0x16]
  4168ee:	sub    eax,0x50d11302
  4168f3:	jbe    0x41691d
  4168f5:	js     0x4168c7
  4168f7:	mov    esp,0xb926d80f
  4168fc:	mov    ds,WORD PTR [ecx]
  4168fe:	ret    
  4168ff:	fsubr  DWORD PTR [esi-0x3a]
  416902:	and    BYTE PTR [ecx-0x24],bl
  416905:	mov    dl,0x1e
  416907:	jl     0x416905
  416909:	int3   
  41690a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41690b:	or     edx,DWORD PTR [edx-0x5117a467]
  416911:	push   ebx
  416912:	pushf  
  416913:	cmp    ebx,DWORD PTR [ebp+0x940b71d]
  416919:	addr16 xchg edi,eax
  41691b:	jmp    0x4168bf
  41691d:	cmp    ah,al
  41691f:	imul   edi,DWORD PTR [edx],0x6e0c0642
  416925:	clc    
  416926:	dec    esp
  416927:	pop    edx
  416928:	bnd jl 0x4168c0
  41692b:	fild   QWORD PTR [ebx-0x167cf020]
  416931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416932:	and    ah,BYTE PTR [esi+0x7de2fa55]
  416938:	dec    esi
  416939:	dec    ecx
  41693a:	dec    ecx
  41693b:	(bad)  
  41693c:	sub    eax,0x6a25441f
  416941:	cmp    al,0x96
  416943:	dec    ebx
  416944:	scas   eax,DWORD PTR es:[edi]
  416945:	lods   eax,DWORD PTR ds:[esi]
  416946:	fld    TBYTE PTR [ebp-0x56]
  416949:	add    DWORD PTR [esp+eax*2+0x2eb0c32],edx
  416950:	ins    DWORD PTR es:[edi],dx
  416951:	xchg   ebx,eax
  416952:	pop    esi
  416953:	cmp    DWORD PTR [ecx+0x4e],eax
  416956:	scas   al,BYTE PTR es:[edi]
  416957:	cmp    esi,DWORD PTR [edx+0x33]
  41695a:	mov    dh,0x1
  41695c:	fs test eax,0xc5d7d8a4
  416962:	adc    BYTE PTR [ebx-0x1e471b66],ah
  416968:	and    al,0xec
  41696a:	adc    al,0x66
  41696c:	imul   ebx,DWORD PTR [ebp+ebp*2-0x17],0x2a
  416971:	or     DWORD PTR [eax+0x33],esi
  416974:	nop
  416975:	sub    DWORD PTR [ebx],0xc
  416978:	test   DWORD PTR [ebx+0x6],0x40c0220e
  41697f:	test   eax,0xeeee8314
  416984:	sahf   
  416985:	mov    edx,DWORD PTR [ebx-0xc]
  416988:	fcmovbe st,st(0)
  41698a:	jnp    0x416922
  41698c:	shr    ecx,cl
  41698e:	icebp  
  41698f:	ins    DWORD PTR es:[edi],dx
  416990:	fdivr  st(4),st
  416992:	or     esi,DWORD PTR [ecx+0x78]
  416995:	cmp    al,cl
  416997:	jns    0x4169df
  416999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41699a:	xchg   edi,eax
  41699b:	mov    DWORD PTR [ebp+eax*4-0x3a],ecx
  41699f:	jb     0x416923
  4169a1:	push   cs
  4169a2:	xor    dh,ch
  4169a4:	fbstp  TBYTE PTR [eax+esi*2+0x3846aee9]
  4169ab:	lods   eax,DWORD PTR ds:[esi]
  4169ac:	and    eax,0x56041b71
  4169b1:	push   ss
  4169b2:	lods   eax,DWORD PTR ds:[esi]
  4169b3:	ror    dl,cl
  4169b5:	ret    0x6efe
  4169b8:	push   esp
  4169b9:	add    eax,0x86b6b0b5
  4169be:	cmp    eax,0x6ca83470
  4169c3:	pop    ds
  4169c4:	pop    eax
  4169c5:	das    
  4169c6:	test   al,0xa7
  4169c8:	mov    DWORD PTR [ecx-0x42],esp
  4169cb:	cwde   
  4169cc:	push   cs
  4169cd:	sar    DWORD PTR [esi-0x55756fd5],1
  4169d3:	mov    edi,0x5ebd731b
  4169d8:	fs fucomp st(4)
  4169db:	stos   BYTE PTR es:[edi],al
  4169dc:	inc    edi
  4169dd:	sbb    al,0x36
  4169df:	push   0x8164c3a
  4169e4:	xor    BYTE PTR [ebx],ah
  4169e6:	mov    ebx,0x1dfb79f1
  4169eb:	push   esp
  4169ec:	jg     0x4169da
  4169ee:	pop    ebp
  4169ef:	in     eax,dx
  4169f0:	xchg   edx,eax
  4169f1:	xor    al,bl
  4169f3:	scas   eax,DWORD PTR es:[edi]
  4169f4:	xchg   ebx,eax
  4169f5:	sub    al,0xdf
  4169f7:	call   0x82e29406
  4169fc:	jmp    0x46db:0xccf6169d
  416a03:	rol    esp,0x24
  416a06:	inc    edi
  416a07:	lock and bh,BYTE PTR [edi+esi*2+0x796d4e62]
  416a0f:	and    ebx,DWORD PTR [edi]
  416a11:	in     al,dx
  416a12:	pop    edx
  416a13:	fstp   st(7)
  416a15:	sub    BYTE PTR [ebx-0x41],ch
  416a18:	je     0x4169d7
  416a1a:	dec    ecx
  416a1b:	mov    edi,0x46ed5774
  416a20:	sbb    eax,0xc6b4bf8e
  416a25:	out    0x8e,al
  416a27:	and    ecx,DWORD PTR [edi-0x63080ae1]
  416a2d:	(bad)  
  416a2e:	scas   al,BYTE PTR es:[edi]
  416a2f:	jl     0x4169c0
  416a31:	hlt    
  416a32:	xchg   esp,eax
  416a33:	cmp    al,0x50
  416a35:	in     eax,dx
  416a36:	mov    ebx,0xcb7ea8b4
  416a3b:	iret   
  416a3c:	xor    ebp,eax
  416a3e:	sbb    DWORD PTR [esi-0x5b],eax
  416a41:	dec    esp
  416a42:	dec    esp
  416a43:	int    0xd3
  416a45:	lea    esp,[eax+0x10]
  416a48:	lods   eax,DWORD PTR ds:[esi]
  416a49:	jg     0x416a91
  416a4b:	sub    ebp,esp
  416a4d:	adc    dl,BYTE PTR [esp+eiz*2-0x59a3a5d1]
  416a54:	pop    ss
  416a55:	inc    BYTE PTR [ebx-0x49]
  416a58:	imul   ebx,DWORD PTR [ebp*4-0x18236ee],0xffffffb2
  416a60:	jmp    0xb88a84c3
  416a65:	(bad)  
  416a66:	out    0xe8,al
  416a68:	dec    edx
  416a69:	push   edi
  416a6a:	dec    edi
  416a6b:	aas    
  416a6c:	iret   
  416a6d:	mov    ah,0xff
  416a6f:	inc    ebp
  416a70:	adc    eax,0xfec08707
  416a75:	sbb    bh,BYTE PTR [edx+0x39]
  416a78:	add    eax,0xfc6eef4c
  416a7d:	cmp    dl,BYTE PTR [ebx+ecx*2]
  416a80:	adc    eax,edi
  416a82:	lods   al,BYTE PTR ds:[esi]
  416a83:	push   eax
  416a84:	push   ebx
  416a85:	pop    esp
  416a86:	repnz in eax,0x81
  416a89:	push   edx
  416a8a:	jno    0x416a5b
  416a8c:	scas   eax,DWORD PTR es:[edi]
  416a8d:	or     al,0x42
  416a8f:	fucomip st,st(4)
  416a91:	cpuid  
  416a93:	jae    0x416b0c
  416a95:	pusha  
  416a96:	test   edi,ecx
  416a98:	mov    ebp,0x9e215458
  416a9d:	mov    esi,0xe2768af9
  416aa2:	and    BYTE PTR [edi],ah
  416aa4:	inc    ecx
  416aa5:	out    dx,al
  416aa6:	imul   ecx,DWORD PTR [edx],0x61dc7894
  416aac:	pushf  
  416aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aae:	sahf   
  416aaf:	sub    DWORD PTR [edx+0x371b0a6c],edi
  416ab5:	mov    bh,0xb1
  416ab7:	pop    esi
  416ab8:	push   ss
  416ab9:	pop    ds
  416aba:	repnz xchg edi,eax
  416abc:	lahf   
  416abd:	shl    eax,1
  416abf:	cmp    ecx,DWORD PTR ds:0xfac7395a
  416ac5:	popa   
  416ac6:	sbb    ah,BYTE PTR ds:0xe7d0f60a
  416acc:	imul   edi,DWORD PTR [edi+0x5a75d444],0xffffffe4
  416ad3:	lea    esi,[ebx]
  416ad5:	test   eax,0x36502f25
  416ada:	push   ss
  416adb:	loop   0x416ae6
  416add:	dec    esp
  416ade:	or     eax,0x3e1ec641
  416ae3:	pop    esp
  416ae4:	ss dec esi
  416ae6:	arpl   WORD PTR [ecx-0x71],bx
  416ae9:	(bad)  
  416aea:	adc    esp,DWORD PTR [ebx]
  416aec:	ins    BYTE PTR es:[edi],dx
  416aed:	popw   ds
  416aef:	imul   DWORD PTR ds:0x9928e579
  416af5:	fisub  DWORD PTR [ecx+0x61]
  416af8:	or     eax,0x8f8f930a
  416afd:	in     al,0x60
  416aff:	ja     0x416b18
  416b01:	jb     0x416b78
  416b03:	in     al,dx
  416b04:	int    0xb4
  416b06:	ins    DWORD PTR es:[edi],dx
  416b07:	je     0x416b5c
  416b09:	shr    DWORD PTR [edx-0x70c83459],0x20
  416b10:	xchg   edi,eax
  416b11:	mov    ecx,0x7a6426c8
  416b16:	add    ch,BYTE PTR [edi]
  416b18:	add    al,0xe
  416b1a:	push   cs
  416b1b:	outs   dx,DWORD PTR ds:[esi]
  416b1c:	sub    BYTE PTR [esi-0x730592cd],bh
  416b22:	jae    0x416aa9
  416b24:	dec    ebp
  416b25:	cmp    BYTE PTR [edx+0x2e],cl
  416b28:	inc    esi
  416b29:	push   0x8aac4ae8
  416b2e:	popa   
  416b2f:	xor    BYTE PTR [ebx+0x49],bl
  416b32:	adc    ah,BYTE PTR [ebx]
  416b34:	test   BYTE PTR [ecx-0x2f862a77],dl
  416b3a:	pop    ebx
  416b3b:	(bad)  
  416b3c:	retf   
  416b3d:	inc    ecx
  416b3e:	outs   dx,BYTE PTR ds:[esi]
  416b3f:	jp     0x416afd
  416b41:	mov    esi,0xaf768091
  416b46:	pop    ebp
  416b47:	pop    edi
  416b48:	or     DWORD PTR [ebp+0x2780c6ed],edx
  416b4e:	add    cl,BYTE PTR [ecx+edi*2-0x7ff01d1d]
  416b55:	mov    dh,0xa9
  416b57:	xchg   esi,eax
  416b58:	daa    
  416b59:	rcl    DWORD PTR [ebp+0x72ba68b6],cl
  416b5f:	rcl    BYTE PTR [ebp+0x18],0x7e
  416b63:	imul   ebp,DWORD PTR [ecx+0x36],0xc19dde48
  416b6a:	xchg   esp,eax
  416b6b:	mov    al,0xe4
  416b6d:	mov    esp,0x24b3cb12
  416b72:	sub    ah,BYTE PTR [edx+esi*4]
  416b75:	xchg   DWORD PTR [edx-0x3a],esp
  416b78:	call   0xab4e:0x5738c33b
  416b7f:	inc    eax
  416b80:	loope  0x416b4a
  416b82:	ds inc esi
  416b84:	jl     0x416b6d
  416b86:	call   0xac8a:0xf3556905
  416b8d:	sub    esp,ebp
  416b8f:	xchg   ecx,eax
  416b90:	push   edi
  416b91:	sub    eax,0x6c9b940b
  416b96:	jmp    0x1fe93dec
  416b9b:	mov    WORD PTR [eax],?
  416b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9e:	stc    
  416b9f:	cmp    eax,0x1219f45a
  416ba4:	cld    
  416ba5:	test   BYTE PTR [edx-0x44877217],ch
  416bab:	mov    ch,0xd8
  416bad:	mov    bh,0xe7
  416baf:	lahf   
  416bb0:	push   esp
  416bb1:	std    
  416bb2:	dec    ebx
  416bb3:	jb     0x416bb3
  416bb5:	and    BYTE PTR [ebp+0x25],cl
  416bb8:	and    ebp,edi
  416bba:	lock and eax,0xba1ca9d1
  416bc0:	mov    eax,0xa372872e
  416bc5:	pop    ecx
  416bc6:	(bad)  
  416bc7:	div    BYTE PTR [edi]
  416bc9:	jae    0x416bbc
  416bcb:	xchg   DWORD PTR [edi],ebx
  416bcd:	xor    esp,ecx
  416bcf:	stc    
  416bd0:	adc    cl,al
  416bd2:	cmc    
  416bd3:	rol    ch,cl
  416bd5:	mov    eax,0xb4f449cc
  416bda:	pop    ds
  416bdb:	cmp    al,0x79
  416bdd:	clc    
  416bde:	sub    bl,dh
  416be0:	ret    
  416be1:	adc    esp,eax
  416be3:	lock (bad) 
  416be5:	dec    ecx
  416be6:	jge    0x416b91
  416be8:	lock dec ecx
  416bea:	fs (bad) 
  416bec:	mov    ebx,0xd0eb94b8
  416bf1:	xchg   esp,eax
  416bf2:	arpl   si,sp
  416bf4:	cs pop es
  416bf6:	in     eax,0x9f
  416bf8:	add    BYTE PTR [ebx],al
  416bfa:	ret    0x9dbe
  416bfd:	inc    edx
  416bfe:	xor    bl,BYTE PTR [esi-0x2c9b9257]
  416c04:	pop    ecx
  416c05:	test   bh,cl
  416c07:	cmp    esi,DWORD PTR ds:0xe88b41b6
  416c0d:	mov    edx,0xd5e18e72
  416c12:	into   
  416c13:	cmp    DWORD PTR [edx-0x14],esi
  416c16:	push   eax
  416c17:	out    0x1a,eax
  416c19:	loope  0x416bf4
  416c1b:	mov    dl,BYTE PTR [esi+0x3fa6132e]
  416c21:	mov    bl,0xc8
  416c23:	fld    QWORD PTR [edx]
  416c25:	xchg   DWORD PTR [edi],esp
  416c27:	ja     0x416c68
  416c29:	adc    ecx,DWORD PTR [esi-0x209c666c]
  416c2f:	xchg   esi,eax
  416c30:	out    dx,eax
  416c31:	cmp    BYTE PTR [edx],ch
  416c33:	jmp    0x416cae
  416c35:	and    DWORD PTR [edi+eax*4],ecx
  416c38:	sbb    ebx,0x8f33cff1
  416c3e:	sbb    edi,edx
  416c40:	aaa    
  416c41:	or     BYTE PTR [edx+0x5d66ede1],bh
  416c47:	scas   eax,DWORD PTR es:[edi]
  416c48:	into   
  416c49:	rol    DWORD PTR [ebx+0x6c55a7ff],1
  416c4f:	sub    edx,DWORD PTR [ebx-0x72b19775]
  416c55:	and    cl,BYTE PTR [esi+0x781e9670]
  416c5b:	pop    ss
  416c5c:	adc    DWORD PTR [edx],edi
  416c5e:	mov    ch,0x55
  416c60:	adc    eax,0xb6ab4529
  416c65:	and    eax,0xfc8044a7
  416c6a:	rcr    DWORD PTR [edi+0x273e4261],0xe2
  416c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c72:	and    al,0x65
  416c74:	jmp    0x416c93
  416c76:	adc    bl,bl
  416c78:	ss mov esp,?
  416c7b:	fs cwde 
  416c7d:	sti    
  416c7e:	dec    esi
  416c7f:	iret   
  416c80:	mov    bh,al
  416c82:	add    BYTE PTR [ebp+0x182afc32],bl
  416c88:	sbb    DWORD PTR [ebp+0x1a07271d],esi
  416c8e:	shl    DWORD PTR [esi+0x520d7acd],cl
  416c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c95:	(bad)  
  416c96:	jne    0x416c1b
  416c98:	pushf  
  416c99:	push   cs
  416c9a:	sub    ecx,esi
  416c9c:	mov    cl,cl
  416c9e:	sub    eax,0x1260c537
  416ca3:	dec    edi
  416ca4:	cmp    DWORD PTR [ebp+0x28],edx
  416ca7:	sub    dh,BYTE PTR [ebx-0x43]
  416caa:	pop    edx
  416cab:	sub    DWORD PTR [edx+0x12],esi
  416cae:	das    
  416caf:	pop    ebp
  416cb0:	movsx  edx,cx
  416cb3:	adc    al,0xd0
  416cb5:	push   es
  416cb6:	in     al,dx
  416cb7:	fdiv   DWORD PTR [ebp+0x60]
  416cba:	jno    0x416c6d
  416cbc:	stos   BYTE PTR es:[edi],al
  416cbd:	pushf  
  416cbe:	daa    
  416cbf:	and    ebp,ebp
  416cc1:	adc    dl,BYTE PTR [esi+ecx*8-0x4c2abf1d]
  416cc8:	das    
  416cc9:	push   edx
  416cca:	inc    ebp
  416ccb:	mov    esp,0xd00c63bd
  416cd0:	xor    BYTE PTR [si+0x2115],bh
  416cd5:	inc    edi
  416cd6:	cmp    BYTE PTR [eax+ebp*8+0x2d453cdc],dh
  416cdd:	jmp    ecx
  416cdf:	dec    esp
  416ce0:	or     BYTE PTR [edx-0x5e],ch
  416ce3:	lods   eax,DWORD PTR ds:[esi]
  416ce4:	xor    ebx,edx
  416ce6:	std    
  416ce7:	pop    es
  416ce8:	int3   
  416ce9:	mov    bl,0x18
  416ceb:	xlat   BYTE PTR ds:[ebx]
  416cec:	fbstp  TBYTE PTR [ebx+0x206d1e16]
  416cf2:	lods   eax,DWORD PTR ds:[si]
  416cf4:	dec    ecx
  416cf5:	hlt    
  416cf6:	daa    
  416cf7:	xchg   esp,eax
  416cf8:	cld    
  416cf9:	mov    esp,0x54e2713
  416cfe:	cmp    DWORD PTR [ecx+0x1af0a3c0],esp
  416d04:	inc    ecx
  416d05:	add    esp,esp
  416d07:	aaa    
  416d08:	jns    0x416d48
  416d0a:	xor    eax,0x7cdb9e2
  416d0f:	dec    edi
  416d10:	add    bh,BYTE PTR [ebx+0x718d2231]
  416d16:	ret    
  416d17:	pop    eax
  416d18:	mov    bl,0x49
  416d1a:	lds    eax,FWORD PTR [ebp+0x7b]
  416d1d:	retf   0x847d
  416d20:	or     al,0x7a
  416d23:	mov    bh,0x2e
  416d25:	pop    es
  416d26:	inc    edi
  416d27:	cs push ebx
  416d29:	(bad)  
  416d2a:	or     ecx,ebx
  416d2c:	ins    BYTE PTR es:[edi],dx
  416d2d:	and    ebx,esp
  416d2f:	je     0x416cee
  416d31:	mov    dh,0x79
  416d33:	fs xchg esp,eax
  416d35:	xchg   ebp,eax
  416d36:	test   BYTE PTR [ecx+0xe8f7dcc],dl
  416d3c:	test   DWORD PTR [esi],0x5ad286b4
  416d42:	repnz in al,0xff
  416d45:	mov    al,ds:0xc69c0758
  416d4a:	inc    ebp
  416d4b:	in     eax,dx
  416d4c:	adc    ebx,ebx
  416d4e:	xor    BYTE PTR ds:0xd22c28fa,0xe4
  416d55:	bound  ebp,QWORD PTR [esi]
  416d57:	test   BYTE PTR [ebp+0x0],bl
  416d5a:	cld    
  416d5b:	mov    edx,DWORD PTR [ecx-0x5a]
  416d5e:	fcomp  QWORD PTR [ebp-0x208aaa5e]
  416d64:	aam    0x9c
  416d66:	push   eax
  416d67:	pop    es
  416d68:	xchg   ecx,eax
  416d69:	retf   
  416d6a:	push   0x27120dda
  416d6f:	mov    al,ds:0x50d69b61
  416d74:	aad    0x6d
  416d76:	cwde   
  416d77:	mov    edi,0x3543cf0e
  416d7c:	je     0x416d02
  416d7e:	(bad)  
  416d80:	test   DWORD PTR [ebx-0x618ce4d6],esp
  416d86:	push   eax
  416d87:	push   0x5
  416d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d8a:	add    BYTE PTR [ebx-0x7e],dl
  416d8d:	mov    dl,BYTE PTR [esp+edx*1]
  416d90:	pop    es
  416d91:	inc    edx
  416d92:	mov    edi,0x42e04366
  416d97:	pop    ebx
  416d98:	retf   0xd7dd
  416d9b:	and    DWORD PTR [esi+0x22],edx
  416d9e:	arpl   WORD PTR [edi],di
  416da0:	xor    eax,ecx
  416da2:	aad    0xa
  416da4:	retf   
  416da5:	ficomp WORD PTR [ebp-0x38769c1c]
  416dab:	out    0x9b,al
  416dad:	dec    esi
  416dae:	jno    0x416df0
  416db0:	sbb    cl,bl
  416db2:	shl    DWORD PTR [ebx+0x5b],cl
  416db5:	xor    DWORD PTR [ecx+0x59db428d],edi
  416dbb:	into   
  416dbc:	mov    esi,0xb471b9ab
  416dc1:	in     al,dx
  416dc2:	add    BYTE PTR [ecx-0x58982ef4],ch
  416dc8:	ja     0x416db5
  416dca:	add    eax,0xf6a1d52d
  416dcf:	mov    ch,0xea
  416dd1:	sub    BYTE PTR [eax],bl
  416dd3:	xor    eax,0x32537f09
  416dd8:	mov    DWORD PTR ds:0xca8c3995,edi
  416dde:	mov    eax,0xdd2d8697
  416de3:	inc    esi
  416de4:	loop   0x416e4e
  416de6:	repnz adc bl,BYTE PTR [edx+0x5747a1f2]
  416ded:	ins    BYTE PTR es:[edi],dx
  416dee:	in     eax,dx
  416def:	mov    BYTE PTR [edx],dh
  416df1:	fwait
  416df2:	sar    BYTE PTR [ebp-0x13200bed],cl
  416df8:	mov    dh,bh
  416dfa:	fadd   DWORD PTR [esi+0x29d8e0cf]
  416e00:	adc    al,bl
  416e02:	outs   dx,BYTE PTR ds:[esi]
  416e03:	loopne 0x416d9a
  416e05:	call   0xa57cc8fc
  416e0a:	xchg   edi,eax
  416e0b:	daa    
  416e0c:	mov    esi,0xe83f0b05
  416e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e12:	xchg   edx,eax
  416e13:	outs   dx,DWORD PTR ds:[esi]
  416e14:	mov    ds:0x578feb9c,al
  416e19:	rcr    BYTE PTR [esi],0x94
  416e1c:	xor    DWORD PTR [eax],esp
  416e1e:	add    eax,0xb0a716db
  416e23:	ds push edi
  416e25:	ror    DWORD PTR [edx],1
  416e27:	dec    edx
  416e28:	das    
  416e29:	xchg   DWORD PTR [ebp+0xa5ad651],ebx
  416e2f:	ins    BYTE PTR es:[edi],dx
  416e30:	jmp    0x416e39
  416e32:	in     eax,dx
  416e33:	or     edi,0xdf5fa0c9
  416e39:	add    BYTE PTR [edx],0xdc
  416e3c:	std    
  416e3d:	enter  0xfb66,0x91
  416e41:	(bad)  
  416e42:	lods   al,BYTE PTR ds:[esi]
  416e43:	xchg   BYTE PTR [edx-0x5a],cl
  416e46:	pop    ds
  416e47:	or     DWORD PTR [ecx+0x18],0x43
  416e4b:	cwde   
  416e4c:	jle    0x416e7a
  416e4e:	push   ds
  416e4f:	imul   ebp,DWORD PTR [edx],0xffffffa2
  416e52:	push   ebp
  416e53:	fwait
  416e54:	repnz add eax,0x8d8b5b28
  416e5a:	dec    ebp
  416e5b:	fld    TBYTE PTR [edx-0x41681b04]
  416e61:	ds pop edi
  416e63:	(bad)  [edx+0x39084107]
  416e69:	inc    ecx
  416e6a:	xor    bh,BYTE PTR [edi]
  416e6c:	push   ebp
  416e6d:	(bad)  
  416e6e:	adc    ebp,ebx
  416e70:	xor    DWORD PTR [ebx],0xffffffe2
  416e73:	adc    eax,0xf4fcfdcd
  416e78:	push   esp
  416e79:	inc    esp
  416e7a:	pop    esp
  416e7b:	sbb    dh,0x64
  416e7e:	mov    esp,0x82859a6b
  416e83:	mul    BYTE PTR [edi+ebx*4-0x4e]
  416e87:	mov    ch,0x6d
  416e89:	inc    ecx
  416e8a:	push   ebx
  416e8b:	dec    ebx
  416e8c:	mov    dl,0x57
  416e8e:	xchg   ebx,eax
  416e8f:	data16 aam 0x4b
  416e92:	idiv   DWORD PTR [eax]
  416e94:	jmp    0x416e1a
  416e96:	adc    al,0x40
  416e98:	inc    esp
  416e99:	test   edx,0x6f8f139e
  416e9f:	sub    eax,0xeba1d410
  416ea4:	imul   eax,DWORD PTR [edi],0x5042b5fc
  416eaa:	clc    
  416eab:	add    DWORD PTR ds:0xae92b03b,edi
  416eb1:	mov    edi,0x9a9803d3
  416eb6:	sub    dh,BYTE PTR [esp+eax*4-0x6d]
  416eba:	out    0xd3,eax
  416ebc:	(bad)  
  416ebd:	aam    0xc4
  416ebf:	mov    ?,WORD PTR [edx-0x5d87d372]
  416ec5:	ss jo  0x416ed2
  416ec8:	in     al,0x2a
  416eca:	cmp    BYTE PTR gs:[ecx+edi*8+0x308ab078],0x20
  416ed3:	add    BYTE PTR [edx],ah
  416ed5:	daa    
  416ed6:	ror    ebx,1
  416ed8:	cli    
  416ed9:	mov    esp,DWORD PTR [ebx]
  416edb:	sub    DWORD PTR [ebx],ecx
  416edd:	inc    edx
  416ede:	outs   dx,DWORD PTR ds:[esi]
  416edf:	mov    bh,0x86
  416ee1:	lea    esi,[edi+0x73]
  416ee4:	and    eax,0x741c65be
  416ee9:	mov    ds:0x7726bd9f,al
  416eee:	jp     0x416f5b
  416ef0:	or     ecx,DWORD PTR ss:[ebx+0x2d]
  416ef4:	inc    edi
  416ef5:	inc    eax
  416ef6:	and    eax,0xed73f1d7
  416efb:	bound  ebx,QWORD PTR [edi+ebp*1+0x25aad638]
  416f02:	or     esp,esi
  416f04:	ins    BYTE PTR es:[edi],dx
  416f05:	shr    DWORD PTR ds:0x12ce53cb,1
  416f0b:	sbb    al,0x6b
  416f0d:	(bad)  
  416f0e:	jge    0x416ee1
  416f10:	and    ch,BYTE PTR [esi+ecx*8-0x64039c98]
  416f17:	in     al,0x4a
  416f19:	loopne 0x416ec4
  416f1b:	sub    edx,ebp
  416f1d:	pop    ebp
  416f1e:	jmp    0x5792:0x7f7687eb
  416f25:	gs int3 
  416f27:	push   esi
  416f28:	sbb    DWORD PTR [eax+0x6a],ebx
  416f2b:	add    cl,cl
  416f2d:	mov    ebx,0xc34a43fb
  416f32:	dec    ecx
  416f33:	push   0xfffffff2
  416f35:	jmp    0xd17:0x304c61bb
  416f3c:	aam    0x9
  416f3e:	push   cs
  416f3f:	jns    0x416fbb
  416f41:	sbb    DWORD PTR [ebp+0x12],0x71
  416f45:	cli    
  416f46:	sbb    bl,BYTE PTR [eax+0x58]
  416f49:	mov    bl,0x91
  416f4b:	cli    
  416f4c:	ret    0xb651
  416f4f:	cmp    BYTE PTR [ebx+edi*4-0x78],al
  416f53:	popf   
  416f54:	int    0xd4
  416f56:	cmp    esp,ebp
  416f58:	cs dec edi
  416f5a:	lea    ebx,[ecx+0x7b3ce8a9]
  416f60:	(bad)  
  416f62:	mov    BYTE PTR [ebp+0x20],dl
  416f65:	(bad)  
  416f66:	xchg   esp,eax
  416f67:	stos   BYTE PTR es:[edi],al
  416f68:	enter  0x5cbb,0x15
  416f6c:	jp     0x416f1c
  416f6e:	je     0x416fc6
  416f70:	pushf  
  416f71:	in     al,0xda
  416f73:	nop
  416f74:	adc    BYTE PTR [ebp+ebx*2-0x484adacb],ch
  416f7b:	(bad)  
  416f7c:	inc    DWORD PTR [eax]
  416f7e:	mov    cs,WORD PTR [edx]
  416f80:	jnp    0x416f48
  416f82:	sub    eax,0x2029c01e
  416f87:	das    
  416f88:	push   es
  416f89:	cmc    
  416f8a:	jae    0x416fbb
  416f8c:	(bad)  [edi+ecx*2-0x7ca5bd00]
  416f93:	aam    0xc6
  416f95:	sub    ebx,0xffffffd5
  416f98:	push   es
  416f99:	mov    ah,0xe0
  416f9b:	pushf  
  416f9c:	mov    ecx,0x6007ec32
  416fa1:	cmp    eax,0x43cbbb5c
  416fa6:	or     BYTE PTR [eax-0x13c80d8f],dl
  416fac:	sbb    DWORD PTR [edi-0x60],edi
  416faf:	push   esi
  416fb0:	add    eax,0xa90e5023
  416fb5:	xchg   ecx,eax
  416fb6:	xchg   edx,eax
  416fb7:	repz inc edx
  416fb9:	in     al,0x15
  416fbb:	fldcw  WORD PTR [ebx]
  416fbd:	mov    eax,ds:0x7cf1e792
  416fc2:	cmc    
  416fc3:	data16 cld 
  416fc5:	push   ecx
  416fc6:	lods   eax,DWORD PTR ds:[esi]
  416fc7:	rcl    BYTE PTR [edi+0x26600ddf],cl
  416fcd:	out    0x33,al
  416fcf:	xor    ch,al
  416fd1:	std    
  416fd2:	and    al,0x94
  416fd4:	out    dx,al
  416fd5:	and    al,0xaf
  416fd7:	or     eax,DWORD PTR [esp+ecx*4]
  416fda:	pop    edx
  416fdb:	or     al,0xb1
  416fdd:	fisubr DWORD PTR [ebx+eiz*2+0x17feacd6]
  416fe4:	icebp  
  416fe5:	sbb    cl,BYTE PTR [ebp-0x45]
  416fe8:	gs push ebx
  416fea:	out    0x90,eax
  416fec:	dec    ecx
  416fed:	add    cl,BYTE PTR [edx+0x620d4d2f]
  416ff3:	shl    DWORD PTR [edi-0x5d],0x50
  416ff7:	inc    BYTE PTR [edx-0x47b48592]
  416ffd:	pop    ecx
  416ffe:	and    eax,0xb4cdde06
  417003:	fdivr  QWORD PTR [esi+esi*4+0x61f23382]
  41700a:	xor    edx,DWORD PTR [eax+0xc141b8c]
  417010:	pop    eax
  417011:	sbb    eax,0x88b8d40
  417016:	fwait
  417017:	lahf   
  417018:	push   es
  417019:	(bad)  
  41701a:	dec    eax
  41701b:	add    cl,ah
  41701d:	jmp    0x416faf
  41701f:	clc    
  417020:	or     ecx,edi
  417022:	test   ch,0x2
  417025:	aas    
  417026:	repz out dx,al
  417028:	pop    ss
  417029:	jb     0x416fb2
  41702b:	cmp    DWORD PTR [ecx+ecx*4],ebp
  41702e:	mov    ch,0x41
  417030:	loope  0x41702c
  417032:	xor    edi,ebp
  417034:	out    0xa9,al
  417036:	mov    gs,WORD PTR [ecx-0x80]
  417039:	adc    eax,0x46029115
  41703e:	nop
  41703f:	add    bh,BYTE PTR [eax-0x7a]
  417042:	sub    DWORD PTR [ebx],ecx
  417044:	rol    DWORD PTR [edi+0x7a],1
  417047:	dec    eax
  417048:	ret    0x8504
  41704b:	sbb    eax,0xed63288
  417050:	or     al,0xab
  417052:	orps   xmm0,xmm3
  417055:	add    ebx,DWORD PTR [ebp-0x4d]
  417058:	mov    ebx,0x72f50ce4
  41705d:	fsubr  DWORD PTR ds:0xb095717e
  417063:	cmp    ah,ch
  417065:	pop    ebp
  417066:	and    eax,0x487945e5
  41706b:	stc    
  41706c:	sti    
  41706d:	jle    0x4170eb
  41706f:	ret    
  417070:	or     eax,0x78b6c1f
  417075:	pop    ss
  417076:	jb     0x4170ae
  417078:	pop    edi
  417079:	or     BYTE PTR [ecx],al
  41707b:	jle    0x417060
  41707d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41707e:	(bad)  
  41707f:	aas    
  417080:	mov    dl,0x6c
  417082:	imul   ecx,edx,0x2503f2f5
  417088:	mov    edx,0x8963417f
  41708d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41708e:	or     edi,ebp
  417090:	xor    ch,BYTE PTR [ebx+0x39]
  417093:	pop    ebx
  417094:	je     0x4170e7
  417096:	sub    bh,al
  417098:	outs   dx,DWORD PTR ds:[esi]
  417099:	mov    edi,0x108e2d2f
  41709e:	jns    0x41708f
  4170a0:	pop    ds
  4170a1:	push   ebx
  4170a2:	pop    ds
  4170a3:	pop    ecx
  4170a4:	push   edi
  4170a5:	push   ss
  4170a6:	dec    edx
  4170a7:	pushf  
  4170a8:	inc    ecx
  4170a9:	or     bh,BYTE PTR [eax+0xfb298db]
  4170af:	clc    
  4170b0:	test   eax,0xdee3d260
  4170b5:	pop    ds
  4170b6:	arpl   WORD PTR [esi-0x1ddbdaf4],cx
  4170bc:	rcl    BYTE PTR [ebx+0x5570deba],cl
  4170c2:	scas   al,BYTE PTR es:[edi]
  4170c3:	xchg   esp,eax
  4170c4:	dec    ebp
  4170c5:	sti    
  4170c6:	fdivp  st(4),st
  4170c8:	retf   0xf7d9
  4170cb:	ror    ch,cl
  4170cd:	xchg   ebp,eax
  4170ce:	sbb    DWORD PTR [eax+0x481f2ae2],ebx
  4170d4:	sbb    eax,0xae694a55
  4170d9:	in     al,dx
  4170da:	xchg   ebx,eax
  4170db:	test   DWORD PTR [eax+0x5b437861],esi
  4170e1:	ins    BYTE PTR es:[edi],dx
  4170e2:	push   edi
  4170e3:	xor    cl,dl
  4170e5:	ret    
  4170e6:	pop    ds
  4170e7:	mov    dh,0x18
  4170e9:	retf   
  4170ea:	lahf   
  4170eb:	jle    0x41712f
  4170ed:	es ja  0x417166
  4170f0:	push   ecx
  4170f1:	jp     0x4170d5
  4170f3:	scas   al,BYTE PTR es:[edi]
  4170f4:	mov    al,ds:0xd03751f0
  4170f9:	mov    eax,ds:0x49b70b7c
  4170fe:	mov    ebp,es
  417100:	sbb    eax,0x3d0323f3
  417105:	icebp  
  417106:	ja     0x417172
  417108:	(bad)  
  417109:	pop    edx
  41710a:	lds    edx,FWORD PTR [edx]
  41710c:	test   DWORD PTR [esi],esp
  41710e:	aas    
  41710f:	paddq  mm0,QWORD PTR [ecx-0x3aebd735]
  417116:	scas   eax,DWORD PTR es:[edi]
  417117:	cmp    eax,DWORD PTR [ecx+0x56]
  41711a:	rol    BYTE PTR [ebp+edx*8-0x6a],cl
  41711e:	adc    edi,DWORD PTR [esi+ebp*8]
  417121:	out    0x93,al
  417123:	dec    eax
  417124:	mov    ch,0xa6
  417126:	jo     0x41714e
  417128:	pop    esp
  417129:	mov    ebx,0x74ba28bd
  41712e:	push   cs
  41712f:	(bad)  
  417130:	test   eax,0xa3b07cb9
  417135:	add    esp,ecx
  417137:	dec    edx
  417138:	dec    esi
  417139:	sub    BYTE PTR [ebx+0x61],bl
  41713c:	push   eax
  41713d:	jg     0x417101
  41713f:	icebp  
  417140:	inc    edx
  417141:	lods   eax,DWORD PTR ds:[esi]
  417142:	push   es
  417143:	xchg   BYTE PTR [ebp+0x6490962],dh
  417149:	retf   
  41714a:	xchg   ecx,eax
  41714b:	int3   
  41714c:	mov    bh,0x59
  41714e:	mov    esi,0xc5d3fd2d
  417153:	xor    BYTE PTR [ebp-0xcbf67db],bl
  417159:	ins    BYTE PTR es:[edi],dx
  41715a:	mov    bh,0xc0
  41715c:	adc    BYTE PTR [ebp+0x13],bh
  41715f:	std    
  417160:	push   0xec875bc7
  417165:	ret    
  417166:	sub    BYTE PTR [ecx],ah
  417168:	push   esi
  417169:	xchg   BYTE PTR [ebx],al
  41716b:	in     eax,dx
  41716c:	push   esi
  41716d:	push   0x91ab3a7d
  417172:	pushf  
  417173:	push   ebx
  417174:	out    0x57,eax
  417176:	mov    ecx,0x8f01f628
  41717b:	call   0x23ab:0x564e28dd
  417182:	mov    dl,al
  417184:	les    edi,FWORD PTR [ebp-0x46]
  417187:	mov    ecx,gs
  417189:	inc    ebx
  41718a:	clc    
  41718b:	je     0x41713f
  41718d:	test   BYTE PTR [eax-0x2b60a32],0xa1
  417194:	fstp   TBYTE PTR [ebx]
  417196:	cdq    
  417197:	fbld   TBYTE PTR [edx]
  417199:	daa    
  41719a:	xchg   DWORD PTR [ebx+eax*8+0x33],ebp
  41719e:	jbe    0x417219
  4171a0:	push   eax
  4171a1:	in     al,dx
  4171a2:	jo     0x417221
  4171a4:	xor    al,0x9e
  4171a6:	mov    al,0x3f
  4171a8:	or     edi,DWORD PTR ds:0xabea055a
  4171ae:	call   0x8d5589fa
  4171b3:	pop    edi
  4171b4:	and    eax,0x8259a06
  4171b9:	rcr    dh,cl
  4171bb:	in     al,0x37
  4171bd:	fimul  WORD PTR [edx-0x2252e01d]
  4171c3:	lods   al,BYTE PTR ds:[esi]
  4171c4:	loopne 0x41717e
  4171c6:	mov    WORD PTR [ebx-0x36],gs
  4171c9:	into   
  4171ca:	(bad)  
  4171cb:	sbb    bh,ah
  4171cd:	fadd   DWORD PTR [ebp-0x33]
  4171d0:	push   ebp
  4171d1:	addr16 data16 aad 0x48
  4171d5:	les    esi,FWORD PTR [esi+esi*4-0x7b89bb60]
  4171dc:	inc    edi
  4171dd:	in     al,dx
  4171de:	mov    esi,0xa30e2da7
  4171e3:	ficom  DWORD PTR [ebp-0x59d7428b]
  4171e9:	stos   BYTE PTR es:[edi],al
  4171ea:	pop    es
  4171eb:	xor    al,0x89
  4171ed:	xchg   ebx,eax
  4171ee:	sahf   
  4171ef:	push   ebp
  4171f0:	xor    DWORD PTR [edx+eax*4+0x68],ebp
  4171f4:	push   cs
  4171f5:	sub    al,0xc4
  4171f7:	iretw  
  4171f9:	xchg   ecx,eax
  4171fa:	enter  0xd61e,0x23
  4171fe:	stos   DWORD PTR es:[edi],eax
  4171ff:	jge    0x417258
  417201:	xchg   ebx,eax
  417202:	adc    al,0x2b
  417204:	popf   
  417205:	call   0xb3f9:0xab9298e
  41720c:	fmul   DWORD PTR [ebp-0x4e27bd7]
  417212:	cdq    
  417213:	enter  0x5a02,0xf
  417217:	add    al,dh
  417219:	and    DWORD PTR [eax+0x2d24275a],edi
  41721f:	stc    
  417220:	loopne 0x4171c9
  417222:	dec    ecx
  417223:	mov    esp,0xa3478fe5
  417228:	sub    ebp,DWORD PTR [edx+0x4e]
  41722b:	pop    ebx
  41722c:	mov    dh,0x66
  41722e:	fcom   QWORD PTR [ecx-0x39]
  417231:	scas   eax,DWORD PTR es:[edi]
  417232:	jle    0x417256
  417234:	xor    BYTE PTR [edi+0x6ac8ff1b],ch
  41723a:	in     eax,0xce
  41723c:	mov    ecx,eax
  41723e:	xor    BYTE PTR [edi],dl
  417240:	retf   0xc2d1
  417243:	mov    ss,WORD PTR [ebx+0x26]
  417246:	sahf   
  417247:	cmp    ebp,esp
  417249:	pop    es
  41724a:	push   ecx
  41724b:	add    BYTE PTR ds:0x3706c7b9,ch
  417251:	mov    bh,0x57
  417253:	cmp    DWORD PTR [ebx+0x7b],esp
  417256:	jle    0x417267
  417258:	inc    ecx
  417259:	mov    ecx,0x79b188f5
  41725e:	mov    WORD PTR [edx+0x6811aadf],gs
  417264:	push   0xffffffa4
  417266:	mov    edx,0x33beee7f
  41726b:	cli    
  41726c:	xchg   edx,eax
  41726d:	or     al,0xed
  41726f:	jo     0x417278
  417271:	outs   dx,BYTE PTR ds:[esi]
  417272:	data16 mov BYTE PTR [eax-0x4c45e179],dh
  417279:	mov    dh,0xba
  41727b:	out    dx,al
  41727c:	fadd   QWORD PTR [edi]
  41727e:	std    
  41727f:	adc    BYTE PTR [ebx-0x209b825d],ch
  417285:	xor    esi,DWORD PTR [ecx+0x190bb289]
  41728b:	fstp   QWORD PTR [esp+ebx*2+0x1e]
  41728f:	fdivr  QWORD PTR [edx-0x4d]
  417292:	lahf   
  417293:	shr    BYTE PTR [esp+esi*8-0x80],0xa9
  417298:	mov    bh,0x8c
  41729a:	je     0x417258
  41729c:	leave  
  41729d:	add    BYTE PTR [ebx],0xa9
  4172a0:	mov    dl,0x64
  4172a2:	leave  
  4172a3:	cli    
  4172a4:	or     bl,BYTE PTR [edi+0x13]
  4172a7:	stos   BYTE PTR es:[edi],al
  4172a8:	ror    DWORD PTR [ebp+0x6a],cl
  4172ab:	jle    0x417233
  4172ad:	dec    esi
  4172ae:	push   cs
  4172af:	iret   
  4172b0:	fsubr  QWORD PTR [esi-0x67]
  4172b3:	cmp    esp,DWORD PTR [esi]
  4172b5:	iret   
  4172b6:	pop    edi
  4172b7:	lahf   
  4172b8:	xor    edx,DWORD PTR [edx+0x57415317]
  4172be:	in     eax,dx
  4172bf:	sbb    BYTE PTR [edx-0x2fe7bc47],bl
  4172c5:	xchg   edx,eax
  4172c6:	mov    eax,0x903825d8
  4172cb:	gs pop edi
  4172cd:	ror    DWORD PTR [edx+0x58],1
  4172d0:	ins    BYTE PTR es:[edi],dx
  4172d1:	adc    BYTE PTR [esi+eax*4+0x42],ch
  4172d5:	aaa    
  4172d6:	loopne 0x4172aa
  4172d8:	cdq    
  4172d9:	(bad)  
  4172da:	mov    dh,0x2a
  4172dc:	stos   DWORD PTR es:[edi],eax
  4172dd:	or     bh,bh
  4172df:	inc    ecx
  4172e0:	sub    edx,DWORD PTR [ecx]
  4172e2:	mov    bl,0x7e
  4172e4:	mov    bl,0x42
  4172e6:	cmp    esi,DWORD PTR [edi-0x15]
  4172e9:	lods   eax,DWORD PTR ds:[esi]
  4172ea:	imul   eax,DWORD PTR [eax-0x2a0aa89a],0x9256e4a2
  4172f4:	xchg   ecx,eax
  4172f5:	mov    al,ds:0xfbf21f19
  4172fa:	add    BYTE PTR [ebp-0x75],dh
  4172fd:	je     0x417373
  4172ff:	push   0x6e
  417301:	jae    0x417285
  417303:	scas   al,BYTE PTR es:[edi]
  417304:	lahf   
  417305:	rcl    esp,0x1e
  417308:	out    0xed,eax
  41730a:	mov    dl,0x91
  41730c:	pop    es
  41730d:	ret    0xba92
  417310:	(bad)  
  417311:	ja     0x4172b5
  417313:	pusha  
  417314:	jno    0x4172f6
  417316:	imul   ecx,DWORD PTR [eax],0x1d53e50
  41731c:	lahf   
  41731d:	pop    esp
  41731e:	cmp    BYTE PTR [ebp-0x5ad60253],dh
  417324:	test   al,0xeb
  417326:	pop    edi
  417327:	sub    DWORD PTR ds:0x79e526ed,ecx
  41732d:	mov    esp,0xb50a1b55
  417332:	ret    
  417333:	sub    ecx,DWORD PTR [ecx]
  417335:	adc    ah,BYTE PTR [edx+0x773331f2]
  41733b:	sti    
  41733c:	pop    esp
  41733d:	hlt    
  41733e:	xlat   BYTE PTR ds:[ebx]
  41733f:	cwde   
  417340:	inc    edi
  417341:	dec    edi
  417342:	adc    ebp,0xe7a94fd3
  417348:	vmread DWORD PTR [ebx+0x5392d1ad],esp
  41734f:	icebp  
  417350:	call   0xc2c7:0x42242615
  417357:	out    0x63,al
  417359:	adc    ecx,DWORD PTR [edx+edx*8]
  41735c:	arpl   WORD PTR [ebp+0xe85da98],cx
  417362:	ss (bad) 
  417364:	lahf   
  417365:	aad    0x41
  417367:	jle    0x417343
  417369:	test   BYTE PTR [eax+0x620029eb],0x9d
  417370:	sbb    al,0x8d
  417372:	and    BYTE PTR [si+0x33],dl
  417376:	mov    ds:0x2a5cfd07,al
  41737b:	mov    ecx,DWORD PTR [esi+edi*1-0x4b28560]
  417382:	push   0x9cdf3460
  417387:	and    eax,0x5b5802bd
  41738c:	jge    0x4173ac
  41738e:	mov    dh,0x15
  417390:	test   al,0xa8
  417392:	fstp   TBYTE PTR [ebp+0x5341f6f2]
  417398:	aam    0x67
  41739a:	xchg   esi,eax
  41739b:	enter  0xa6cf,0x38
  41739f:	xor    eax,DWORD PTR [esi+0x440b4b43]
  4173a5:	and    eax,eax
  4173a7:	aam    0x86
  4173a9:	cmp    eax,DWORD PTR [ebp-0x2c1f3281]
  4173af:	xchg   edx,eax
  4173b0:	cmp    eax,0x849d90ba
  4173b5:	mov    esp,0x52af1779
  4173ba:	sub    BYTE PTR [ecx-0x52],ah
  4173bd:	mov    ds:0x3979ecc3,al
  4173c2:	dec    esp
  4173c3:	pop    edi
  4173c4:	mov    ?,WORD PTR [esi+0x4e9c7bc5]
  4173ca:	out    0x4f,al
  4173cc:	jmp    0xccd0f78f
  4173d1:	xor    DWORD PTR [edx-0x49c2a6ae],esi
  4173d7:	pop    ds
  4173d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d9:	xor    DWORD PTR [esi+0x40],eax
  4173dc:	push   eax
  4173dd:	mov    ecx,0x4d1c84d9
  4173e2:	mov    al,0xca
  4173e4:	in     al,dx
  4173e5:	add    edx,DWORD PTR [ecx+0x8da8ebb]
  4173eb:	aas    
  4173ec:	xchg   edx,eax
  4173ed:	lods   al,BYTE PTR ds:[esi]
  4173ee:	sub    cl,BYTE PTR [ecx]
  4173f0:	mov    esp,0x5280c0e8
  4173f5:	loope  0x417447
  4173f7:	dec    edi
  4173f8:	imul   ebp,DWORD PTR [eax+0x1691c4eb],0x3e
  4173ff:	pop    eax
  417400:	stc    
  417401:	and    eax,esp
  417403:	inc    edx
  417404:	(bad)
  417407:	out    dx,eax
  417408:	xor    DWORD PTR [edi+ecx*8],ebp
  41740b:	cs mov esi,0xd7e41662
  417411:	inc    eax
  417412:	gs inc edx
  417414:	ja     0x417453
  417416:	(bad)  
  417417:	sub    DWORD PTR [ecx-0xb],esi
  41741a:	je     0x4173c3
  41741c:	bound  edx,QWORD PTR [esi+0x7]
  41741f:	pop    edi
  417420:	aad    0xf9
  417422:	idiv   esi
  417424:	sbb    BYTE PTR [ecx+0x44],dh
  417427:	jmp    0x41741f
  417429:	nop
  41742a:	mov    ds:0x14cace66,eax
  41742f:	cwde   
  417430:	outs   dx,BYTE PTR ds:[esi]
  417431:	ins    BYTE PTR es:[edi],dx
  417432:	icebp  
  417433:	aas    
  417434:	push   0x16
  417436:	(bad)  
  417437:	scas   al,BYTE PTR es:[edi]
  417438:	adc    bl,BYTE PTR [edx]
  41743a:	jb     0x4173fb
  41743c:	je     0x4173df
  41743e:	int3   
  41743f:	jmp    0xd18d1b7a
  417444:	mov    eax,ds:0xd7b2d3ea
  417449:	mov    bh,0xd0
  41744b:	push   ecx
  41744c:	nop
  41744d:	cmp    esi,eax
  41744f:	fs push eax
  417451:	jo     0x4173e3
  417453:	push   ebx
  417454:	pop    ebx
  417455:	xchg   ecx,eax
  417456:	add    bh,dl
  417458:	push   0xfffffff8
  41745a:	mov    esi,0x80519bb0
  41745f:	ror    DWORD PTR ds:0x17137359,1
  417465:	(bad)  
  417467:	mov    ebx,0xeedafb0e
  41746c:	mov    ebp,edx
  41746e:	xchg   ebp,eax
  41746f:	jno    0x417417
  417471:	mov    DWORD PTR [ebp-0x1b55efd],0x9a68984a
  41747b:	es call 0xde5b73a8
  417481:	repz xor ah,BYTE PTR [edi+0x4c06007a]
  417488:	add    DWORD PTR [edi+0x3a31d315],0x5b2d9020
  417492:	daa    
  417493:	ret    0x4e1f
  417496:	rol    DWORD PTR [edi+0x38],1
  417499:	xor    ch,ah
  41749b:	imul   ebp,DWORD PTR ds:0x2648e359,0xcd94b5bf
  4174a5:	data16 jno 0x417500
  4174a8:	(bad)  
  4174a9:	pop    esi
  4174aa:	pop    eax
  4174ab:	nop
  4174ac:	mov    eax,ds:0x622e7523
  4174b1:	push   ds
  4174b2:	xchg   ebx,eax
  4174b3:	adc    bl,BYTE PTR [edi-0x42]
  4174b6:	shl    ebx,0xa3
  4174b9:	dec    ebx
  4174ba:	mov    cl,0xf1
  4174bc:	sbb    BYTE PTR [esi-0x2c46efb6],ah
  4174c2:	aad    0xd1
  4174c4:	fs xchg esi,eax
  4174c6:	je     0x417496
  4174c8:	cwde   
  4174c9:	mov    cl,0x4a
  4174cb:	dec    ecx
  4174cc:	mov    ah,0x35
  4174ce:	cwde   
  4174cf:	push   0xf3fb869d
  4174d4:	jl     0x41745b
  4174d6:	ins    BYTE PTR es:[edi],dx
  4174d7:	enter  0xa311,0x4d
  4174db:	mov    ds:0xa17aa97b,eax
  4174e0:	xchg   esp,eax
  4174e1:	push   0xffffffe7
  4174e3:	js     0x4174a9
  4174e5:	psubw  mm6,QWORD PTR [ebx+0x38]
  4174e9:	imul   BYTE PTR [edi]
  4174eb:	pop    ebx
  4174ec:	sub    ebx,DWORD PTR [edi+0x5c]
  4174ef:	jmp    0x5c6f:0x5194825
  4174f6:	xchg   ecx,eax
  4174f7:	push   ss
  4174f8:	push   eax
  4174f9:	jne    0x417525
  4174fb:	inc    eax
  4174fc:	mov    ebp,0xf12e87ee
  417501:	pop    es
  417502:	inc    ebp
  417503:	cdq    
  417504:	mov    edx,ds
  417506:	cmp    ebx,0xffffffc7
  417509:	mov    cl,0xf0
  41750b:	add    eax,edi
  41750d:	retf   
  41750e:	ret    
  41750f:	mov    al,0xdf
  417511:	(bad)  
  417512:	loopne 0x4174b3
  417514:	ins    WORD PTR es:[edi],dx
  417516:	in     eax,dx
  417517:	push   es
  417518:	mov    cl,0xf1
  41751a:	mov    ecx,0x189e5ce2
  41751f:	shr    DWORD PTR [eax],1
  417521:	es xchg esi,eax
  417523:	call   0xf8ec6b71
  417528:	repnz push ecx
  41752a:	enter  0x833c,0xf9
  41752e:	dec    ebp
  41752f:	test   DWORD PTR [edi+0x408d8a43],0x8a0b3194
  417539:	pop    ecx
  41753a:	pushf  
  41753b:	std    
  41753c:	into   
  41753d:	sub    BYTE PTR [eax+0x4],ah
  417540:	inc    esi
  417541:	das    
  417542:	or     al,ah
  417544:	jbe    0x417575
  417546:	test   BYTE PTR [ecx-0x78],cl
  417549:	cmp    DWORD PTR [edx],ecx
  41754b:	popa   
  41754c:	int3   
  41754d:	mov    eax,ds:0x730a31cf
  417552:	adc    al,0xb4
  417554:	jg     0x4174f4
  417556:	sub    ecx,DWORD PTR [eax]
  417558:	inc    edi
  417559:	ret    0xec81
  41755c:	jge    0x4175ba
  41755e:	jmp    0x41756c
  417560:	sub    DWORD PTR [ebp+0x8],0xb05ed152
  417567:	inc    ebx
  417568:	(bad)
  41756b:	jno    0x4175ba
  41756d:	shl    BYTE PTR [eax+0xccfb499],cl
  417573:	repnz adc BYTE PTR [edi+ebp*8-0x5cf99f62],al
  41757b:	push   esi
  41757c:	imul   esp,edx,0xffffffcf
  41757f:	rol    DWORD PTR [eax],cl
  417581:	bound  eax,QWORD PTR [eax-0x1059cc5b]
  417587:	and    edx,DWORD PTR [esi+0x36]
  41758a:	ins    DWORD PTR es:[edi],dx
  41758b:	popf   
  41758c:	sbb    bl,BYTE PTR [ecx+ebp*8]
  41758f:	repz and ebp,DWORD PTR [esi]
  417592:	hlt    
  417593:	pop    esp
  417594:	jnp    0x41755e
  417596:	mov    ch,0x2d
  417598:	lock add al,al
  41759b:	mov    bl,0x8e
  41759d:	and    bl,BYTE PTR [ecx+0x69]
  4175a0:	mov    bh,0x10
  4175a2:	cwde   
  4175a3:	pop    ss
  4175a4:	stos   DWORD PTR es:[edi],eax
  4175a5:	popf   
  4175a6:	cli    
  4175a7:	cmc    
  4175a8:	pop    DWORD PTR [edx]
  4175aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ab:	and    BYTE PTR [esi],bl
  4175ad:	xbegin 0x62e38818
  4175b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175b4:	push   ds
  4175b5:	push   ds
  4175b6:	std    
  4175b7:	xchg   ecx,eax
  4175b8:	or     DWORD PTR [edi-0x1aff800c],esi
  4175be:	xor    al,BYTE PTR [ebx]
  4175c0:	aas    
  4175c1:	cwde   
  4175c2:	mov    edx,esi
  4175c4:	(bad)  
  4175c5:	retf   
  4175c6:	sub    edi,DWORD PTR [edx+0x65]
  4175c9:	fisub  DWORD PTR [edi+0x27]
  4175cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ce:	imul   esi,edx,0x32974141
  4175d4:	jecxz  0x417601
  4175d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d7:	ror    DWORD PTR [edi-0x78e42b33],cl
  4175dd:	dec    ecx
  4175de:	leave  
  4175df:	imul   esp,DWORD PTR [edi-0x685e3e0f],0xc1ee7d4e
  4175e9:	retf   0xac76
  4175ec:	icebp  
  4175ed:	mov    eax,0xf81d9476
  4175f2:	fwait
  4175f3:	rol    BYTE PTR [ecx-0x785ac87c],cl
  4175f9:	mov    ecx,0xac1c45ab
  4175fe:	(bad)  
  4175ff:	jg     0x41763a
  417601:	loopne 0x41764c
  417603:	div    DWORD PTR [edx]
  417605:	sub    BYTE PTR [ecx+0x4a],cl
  417608:	btr    ecx,edx
  41760b:	bnd jb 0x4175a7
  41760e:	push   DWORD PTR [edi+0x1940d0fe]
  417614:	jns    0x4175f6
  417616:	jl     0x4175f4
  417618:	push   ss
  417619:	stos   BYTE PTR es:[edi],al
  41761a:	mov    dh,0x20
  41761c:	xchg   ebx,eax
  41761d:	pminub mm6,QWORD PTR [edi+0x57d50aed]
  417624:	pop    ebx
  417625:	cmp    BYTE PTR [eax],bh
  417627:	adc    eax,0x83bf7f87
  41762c:	adc    edx,DWORD PTR [edx+0x2c]
  41762f:	js     0x4175d9
  417631:	loop   0x4175e0
  417633:	mov    bh,0xd7
  417635:	int3   
  417636:	arpl   WORD PTR [edx+ecx*4-0x389270a1],di
  41763d:	sar    DWORD PTR [ebx+0x530f4b1c],cl
  417643:	mov    dl,0x3b
  417645:	pop    ds
  417646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417647:	or     ch,ch
  417649:	ins    BYTE PTR es:[edi],dx
  41764a:	cmc    
  41764b:	aas    
  41764c:	sti    
  41764d:	out    0x80,eax
  41764f:	shl    DWORD PTR [esi+0x27774d96],0x4
  417656:	mov    al,ds:0xb7ad8c61
  41765b:	into   
  41765c:	dec    ebp
  41765d:	mov    dl,0xe6
  41765f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417660:	fdivr  DWORD PTR [eax+0x22]
  417663:	dec    ecx
  417664:	pop    esi
  417665:	adc    BYTE PTR [edi],bh
  417667:	imul   DWORD PTR [edx-0x5b2d687a]
  41766d:	lea    edx,[edi+0x4477b157]
  417673:	dec    esp
  417674:	pop    ss
  417675:	sub    DWORD PTR [edx],edi
  417677:	inc    esi
  417678:	pop    ecx
  417679:	mov    eax,ds:0xd54df524
  41767e:	mov    eax,0x578ba9a
  417683:	sbb    eax,edx
  417685:	bound  ebx,QWORD PTR [ebx+0x473454a8]
  41768b:	mov    ch,0xf8
  41768d:	out    0x7c,eax
  41768f:	ins    BYTE PTR es:[edi],dx
  417690:	and    eax,0xe32e0de3
  417695:	popf   
  417696:	sub    eax,DWORD PTR [ebx]
  417698:	and    eax,0xf9ae572f
  41769d:	and    ah,BYTE PTR [ebp+0x5aee21d6]
  4176a3:	lds    edx,FWORD PTR es:[esi+edi*1]
  4176a7:	push   cs
  4176a8:	dec    eax
  4176a9:	int    0x46
  4176ab:	sbb    BYTE PTR [ecx-0x67],bh
  4176ae:	(bad)  
  4176af:	push   ds
  4176b0:	fisub  WORD PTR [eax+0x28]
  4176b3:	pop    edi
  4176b4:	adc    BYTE PTR [edx+0x4da70256],0xfb
  4176bb:	and    eax,DWORD PTR [edi]
  4176bd:	inc    edi
  4176be:	sbb    BYTE PTR [ebx],bl
  4176c0:	arpl   WORD PTR [edx+0x11a09b7],bx
  4176c6:	push   esi
  4176c7:	mov    esp,0xb3c9ed86
  4176cc:	mov    ebp,0x225e1269
  4176d1:	cmp    al,0xda
  4176d3:	sahf   
  4176d4:	cld    
  4176d5:	test   dl,0xcf
  4176d8:	loopne 0x4176f0
  4176da:	repz mov dh,0x3e
  4176dd:	jge    0x4176ab
  4176df:	cli    
  4176e0:	ret    0x4b19
  4176e3:	dec    eax
  4176e4:	retf   
  4176e5:	loope  0x417668
  4176e7:	jmp    0xa8c37dac
  4176ec:	push   0x38684f27
  4176f1:	push   esi
  4176f2:	inc    esp
  4176f3:	imul   eax,DWORD PTR [edx],0x9afe3612
  4176f9:	mov    dl,0xdf
  4176fb:	arpl   WORD PTR [ecx-0x36],cx
  4176fe:	mov    bh,0x1e
  417700:	out    0x8e,al
  417702:	jae    0x417715
  417704:	fs push eax
  417706:	add    ecx,DWORD PTR [esp+edx*4-0xb]
  41770a:	mov    ebx,0xfcae6149
  41770f:	stos   BYTE PTR es:[edi],al
  417710:	mov    dh,0x27
  417712:	psrad  mm4,QWORD PTR [edi+0x6f]
  417716:	mov    dl,0x4b
  417718:	sbb    eax,0xed409d2d
  41771d:	pop    edi
  41771e:	cld    
  41771f:	xor    BYTE PTR [eax+0x58ade4fa],0x41
  417726:	loopne 0x41770a
  417728:	xchg   esi,eax
  417729:	popw   ss
  41772b:	sbb    BYTE PTR [eax],dh
  41772d:	sub    ah,BYTE PTR [eax]
  41772f:	ja     0x4176d8
  417731:	neg    DWORD PTR ds:0x350c78b
  417737:	popf   
  417738:	imul   esp,DWORD PTR [ebp+0x16],0xc3d3080
  41773f:	dec    eax
  417740:	and    eax,DWORD PTR [edi-0x23ef7735]
  417746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417747:	ja     0x4177c4
  417749:	pop    ebx
  41774a:	inc    edi
  41774b:	jmp    0x417728
  41774d:	adc    ah,BYTE PTR [ebp-0x65]
  417750:	fisubr WORD PTR ds:0xf127e2c1
  417756:	push   ebp
  417757:	inc    edx
  417758:	mov    eax,ds:0x16716ea4
  41775d:	lods   eax,DWORD PTR ds:[esi]
  41775e:	pop    eax
  41775f:	jp     0x417791
  417761:	ja     0x4177cd
  417763:	or     al,0xae
  417765:	pop    esp
  417766:	jg     0x4177d4
  417768:	mov    ecx,0x66b56951
  41776d:	iret   
  41776e:	mov    ebx,0x307892cf
  417773:	pop    esp
  417774:	out    0x8d,eax
  417776:	fist   WORD PTR [eax+0x7b8a4794]
  41777c:	gs gs adc DWORD PTR cs:[ecx+0x35],esp
  417782:	and    ecx,DWORD PTR ss:[ecx-0x338f1c17]
  417789:	outs   dx,BYTE PTR ds:[esi]
  41778a:	clc    
  41778b:	sbb    DWORD PTR [esi+eax*2-0x46],0xf1cc923c
  417793:	inc    esp
  417794:	mov    bl,0x28
  417796:	cld    
  417797:	inc    esi
  417798:	mov    bl,0x4a
  41779a:	popf   
  41779b:	aas    
  41779c:	adc    al,0xb6
  41779e:	fnstcw WORD PTR [esi]
  4177a0:	inc    ebp
  4177a1:	(bad)  
  4177a3:	mov    ebx,0x9735b68
  4177a8:	outs   dx,DWORD PTR ds:[esi]
  4177a9:	cwde   
  4177aa:	ret    0xb1b1
  4177ad:	or     al,0x4e
  4177af:	leave  
  4177b0:	pop    ebp
  4177b1:	dec    esp
  4177b2:	adc    esp,DWORD PTR [eax]
  4177b4:	mov    ah,0xdc
  4177b6:	mov    DWORD PTR [eax+ebx*8],ebp
  4177b9:	dec    esp
  4177ba:	push   0xffffffac
  4177bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177bd:	sbb    DWORD PTR [ebp+0x52],0x4d
  4177c1:	call   0x6625:0x4a7502aa
  4177c8:	cmp    DWORD PTR [edx+0x54],esi
  4177cb:	xor    al,0xe5
  4177cd:	jg     0x41779c
  4177cf:	rcl    DWORD PTR [ecx+0x5567cc9f],1
  4177d5:	mov    esi,0x4b558923
  4177da:	pop    es
  4177db:	or     ch,dl
  4177dd:	iret   
  4177de:	sbb    ecx,esp
  4177e0:	clc    
  4177e1:	int3   
  4177e2:	mov    edx,0xdc93052
  4177e7:	jmp    0xd9289863
  4177ec:	(bad)  
  4177ed:	add    ebp,DWORD PTR [ebx+ecx*1+0x2f]
  4177f1:	inc    edi
  4177f2:	outs   dx,BYTE PTR ds:[esi]
  4177f3:	cdq    
  4177f4:	sbb    eax,0x72a0735
  4177f9:	xchg   esp,eax
  4177fa:	test   al,0xa0
  4177fc:	push   eax
  4177fd:	ret    
  4177fe:	and    al,0x4d
  417800:	aam    0x6
  417802:	push   esi
  417803:	xchg   edx,eax
  417804:	je     0x4177c5
  417806:	shl    BYTE PTR [ebx+0x505832ef],cl
  41780c:	cwde   
  41780d:	adc    eax,0xfd9c546
  417812:	(bad)  
  417813:	aam    0x48
  417815:	xor    eax,DWORD PTR [eax-0x37]
  417818:	jmp    0x652e6962
  41781d:	jecxz  0x417893
  41781f:	inc    esp
  417820:	ins    DWORD PTR es:[edi],dx
  417821:	(bad)  
  417822:	popa   
  417823:	mov    ch,0x18
  417825:	and    al,0x53
  417827:	out    0x66,eax
  417829:	sbb    eax,0x5834ba5c
  41782e:	sub    dh,BYTE PTR [edx+0x50]
  417831:	mov    dl,0x48
  417833:	mov    dl,0x7d
  417835:	push   edx
  417836:	jmp    0xb488:0x5769a232
  41783d:	test   DWORD PTR [eax+0x539ba739],0xfcf7f74f
  417847:	mov    al,ds:0x39ca99cb
  41784c:	loopne 0x41786a
  41784e:	hlt    
  41784f:	imul   eax,ebx,0xa363c668
  417855:	push   ebx
  417856:	test   BYTE PTR [ebp+edi*2+0x28],bl
  41785a:	xor    al,BYTE PTR cs:[eax-0x47]
  41785e:	mov    ebx,0xab57518f
  417863:	ins    DWORD PTR es:[edi],dx
  417864:	mov    edx,0xf4c8317f
  417869:	adc    BYTE PTR [edx-0x64],0xf9
  41786d:	lods   al,BYTE PTR ds:[esi]
  41786e:	fucom  st(6)
  417870:	mov    al,ds:0xf0fd291f
  417875:	arpl   WORD PTR [esi+eiz*2],di
  417878:	dec    edx
  417879:	aam    0x86
  41787b:	and    bl,ah
  41787d:	daa    
  41787e:	pop    ebp
  41787f:	mov    eax,ds:0x97d6923b
  417884:	jg     0x4178c2
  417886:	mov    BYTE PTR [ebx],dh
  417888:	fs push ds
  41788a:	cdq    
  41788b:	and    BYTE PTR [ebx],dh
  41788d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41788e:	inc    eax
  41788f:	push   0x9658d86b
  417894:	cmp    ebp,DWORD PTR [edi-0x2e]
  417897:	scas   eax,DWORD PTR es:[edi]
  417898:	and    bl,BYTE PTR [edi+0x2f]
  41789b:	pop    ss
  41789c:	mov    ds:0xd3c6e516,al
  4178a1:	in     eax,dx
  4178a2:	sti    
  4178a3:	mov    ebx,0x11265bec
  4178a8:	sub    ah,BYTE PTR [edi]
  4178aa:	pop    ebx
  4178ab:	mov    dl,0xb8
  4178ad:	lods   al,BYTE PTR ds:[esi]
  4178ae:	lahf   
  4178af:	jo     0x4178b2
  4178b1:	mov    ds:0x5e254284,eax
  4178b6:	ins    BYTE PTR es:[edi],dx
  4178b7:	push   ecx
  4178b8:	scas   al,BYTE PTR es:[edi]
  4178b9:	dec    esp
  4178ba:	sub    al,dh
  4178bc:	test   eax,0x856196a
  4178c1:	xchg   ecx,eax
  4178c2:	and    edx,DWORD PTR [esi-0x648a45c4]
  4178c8:	arpl   WORD PTR [ebx+esi*4],bp
  4178cb:	in     al,dx
  4178cc:	add    BYTE PTR [ebx],al
  4178ce:	xchg   BYTE PTR [ebx],cl
  4178d0:	(bad)  
  4178d1:	cli    
  4178d2:	out    0x83,al
  4178d4:	data16 mov bl,0x2e
  4178d7:	cmp    cl,BYTE PTR [ebx-0x50]
  4178da:	retf   0x6cdc
  4178dd:	and    edx,DWORD PTR [ebx+ebp*2]
  4178e0:	adc    edi,DWORD PTR [esi-0x13]
  4178e3:	mov    ch,0x98
  4178e5:	or     edi,esp
  4178e7:	dec    edi
  4178e8:	sbb    BYTE PTR [esi-0x7caf3123],al
  4178ee:	cmp    cl,cl
  4178f0:	mov    DWORD PTR [eax+0x470b63ba],esi
  4178f6:	pop    edx
  4178f7:	add    DWORD PTR [ebx-0x5e7f8757],ecx
  4178fd:	pusha  
  4178fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ff:	adc    eax,0x84abace1
  417904:	rcl    BYTE PTR [esi-0x54],0xe0
  417908:	inc    ebp
  417909:	add    al,0xbe
  41790b:	idiv   DWORD PTR [ebp-0x1f67d3]
  417911:	js     0x41792f
  417913:	addr16 jg 0x417986
  417916:	add    al,0x53
  417918:	sub    ecx,DWORD PTR [eax+0x7d]
  41791b:	test   DWORD PTR [eax-0x5d821693],ebp
  417921:	rcl    ecx,cl
  417923:	js     0x41799c
  417925:	and    eax,0xf1a0b2bd
  41792a:	das    
  41792b:	mov    DWORD PTR [esi],ebx
  41792d:	retf   0xb57c
  417930:	imul   ebx,DWORD PTR [ecx+0x26ffe734],0xffffffc7
  417937:	int    0x1e
  417939:	imul   edx,DWORD PTR [ebx-0x80],0xefe53f65
  417940:	ja     0x41790b
  417942:	adc    al,0xf2
  417944:	sahf   
  417945:	jmp    0x19489952
  41794a:	aas    
  41794b:	outs   dx,DWORD PTR ds:[esi]
  41794c:	(bad)  
  41794d:	jno    0x41791f
  41794f:	mov    BYTE PTR [esi],bl
  417951:	cmp    ebx,DWORD PTR [ebp+esi*2-0x6a]
  417955:	jae    0x417969
  417957:	pop    eax
  417958:	mov    esi,0x96f3b170
  41795d:	cmp    BYTE PTR [ecx+0x5f],0x5f
  417961:	mov    dl,0xce
  417963:	xor    BYTE PTR [edi],ch
  417965:	and    BYTE PTR [ebx+edx*2],dh
  417968:	or     eax,0x9286ee04
  41796d:	push   esi
  41796e:	mov    dh,0xa2
  417970:	mov    ah,0xd3
  417972:	mov    DWORD PTR [esi],0x2ad3e51d
  417978:	jl     0x4179db
  41797a:	pop    ecx
  41797b:	adc    eax,0x65b950e
  417980:	nop
  417981:	cdq    
  417982:	retf   
  417983:	jmp    0x417973
  417985:	mov    ds:0xb10a7fe,eax
  41798a:	clc    
  41798b:	and    eax,0x8819579e
  417990:	gs hlt 
  417992:	out    0xdc,al
  417994:	aad    0x9
  417996:	inc    esp
  417997:	adc    esp,eax
  417999:	ins    BYTE PTR es:[edi],dx
  41799a:	pop    ecx
  41799b:	adc    al,0x35
  41799d:	cmp    al,0xd7
  41799f:	daa    
  4179a0:	sti    
  4179a1:	sbb    cl,cl
  4179a3:	loopne 0x417976
  4179a5:	pusha  
  4179a6:	mov    esp,0x7cb7fcec
  4179ab:	adc    edi,DWORD PTR [esi]
  4179ad:	mov    ds:0xd782020,eax
  4179b2:	retf   0x5ea2
  4179b5:	aam    0xb
  4179b7:	jp     0x417996
  4179b9:	xor    edx,edi
  4179bb:	push   0x2c3fee12
  4179c0:	dec    ebx
  4179c1:	retf   0xcc25
  4179c4:	loop   0x4179cc
  4179c6:	int    0x5a
  4179c8:	jg     0x4179de
  4179ca:	retf   0x32ff
  4179cd:	xchg   edx,eax
  4179ce:	rcl    DWORD PTR ds:0x15e6930,cl
  4179d4:	xchg   edx,eax
  4179d5:	dec    edx
  4179d6:	inc    edi
  4179d7:	sbb    eax,0x95944e8f
  4179dc:	adc    BYTE PTR [ebx+0x5],ah
  4179df:	or     al,0xee
  4179e1:	inc    ecx
  4179e2:	fidivr DWORD PTR [eax-0x40]
  4179e5:	inc    edx
  4179e6:	sub    ch,BYTE PTR [ecx-0x310d9881]
  4179ec:	push   0x57
  4179ee:	push   ebp
  4179ef:	sbb    edx,ebx
  4179f1:	push   0x4
  4179f3:	out    0x39,al
  4179f5:	test   DWORD PTR [edx+0x3f07ee03],ebp
  4179fb:	stc    
  4179fc:	or     edx,DWORD PTR [edx+0x6d]
  4179ff:	(bad)  
  417a00:	cdq    
  417a01:	xabort 0xc2
  417a04:	shr    BYTE PTR [eax+0x4],0x8c
  417a08:	shr    BYTE PTR [ecx-0x5b],0x3e
  417a0c:	dec    edi
  417a0d:	or     esi,DWORD PTR [edx+0x3c235d67]
  417a13:	fwait
  417a14:	hlt    
  417a15:	stc    
  417a16:	mov    ecx,0x4249e3b2
  417a1b:	test   al,0x70
  417a1d:	lahf   
  417a1e:	fdivr  QWORD PTR [ebp-0x6f]
  417a21:	xor    al,BYTE PTR [edi-0x2d]
  417a24:	sbb    eax,0xaf7c0277
  417a29:	cmp    al,BYTE PTR [ebx+0x27b710b5]
  417a2f:	or     ch,bl
  417a31:	nop
  417a32:	test   eax,0xd3b2c5ef
  417a37:	pushf  
  417a38:	xor    al,0xa9
  417a3a:	es jne 0x417a31
  417a3d:	add    dl,ch
  417a3f:	mov    ecx,DWORD PTR [eax]
  417a41:	aaa    
  417a42:	jno    0x417a6b
  417a44:	jmp    0x417aa2
  417a46:	or     DWORD PTR [edi+0x650c53a3],esi
  417a4c:	cmp    eax,0xc5f7af77
  417a51:	inc    ecx
  417a52:	jns    0x417a96
  417a54:	daa    
  417a55:	or     bl,BYTE PTR [ebx-0xb]
  417a58:	xor    bh,BYTE PTR [edx+0x4e]
  417a5b:	ds mov esi,0xbd43aa7d
  417a61:	aas    
  417a62:	dec    esi
  417a63:	stc    
  417a64:	mov    DWORD PTR [ebp-0x5e],edx
  417a67:	and    al,BYTE PTR [ebp-0x4a06a670]
  417a6d:	aad    0xa4
  417a6f:	xchg   BYTE PTR [ebp+0x56],ah
  417a72:	sbb    BYTE PTR ds:0x82049f6f,0x96
  417a79:	rol    BYTE PTR [esp+ebx*4+0x74],cl
  417a7d:	jg     0x417af6
  417a7f:	inc    ebx
  417a80:	push   ds
  417a81:	add    ch,BYTE PTR [ebx+0x13]
  417a84:	in     al,dx
  417a85:	loope  0x417a68
  417a87:	inc    esi
  417a88:	jecxz  0x417a39
  417a8a:	dec    edi
  417a8b:	push   es
  417a8c:	inc    edx
  417a8d:	call   0x5852:0x3d2ca15c
  417a94:	or     ebp,DWORD PTR [ecx]
  417a96:	addr16 sub edi,0x11
  417a9a:	test   eax,edx
  417a9c:	push   ebx
  417a9d:	test   eax,0xae1b8015
  417aa2:	pop    edi
  417aa3:	in     eax,dx
  417aa4:	push   ecx
  417aa5:	es push 0xffffffeb
  417aa8:	pop    edx
  417aa9:	adc    BYTE PTR [ebx],dh
  417aab:	sub    eax,0xc59e604
  417ab0:	nop
  417ab1:	xor    BYTE PTR [edi+eax*8+0x54],ch
  417ab5:	pop    edx
  417ab6:	dec    edx
  417ab7:	jne    0x417aaf
  417ab9:	ds xor al,0xc7
  417abc:	push   ss
  417abd:	cmp    eax,0xcc8e9fcb
  417ac2:	ss das 
  417ac4:	das    
  417ac5:	sar    DWORD PTR [edx-0x64d78f38],1
  417acb:	inc    ecx
  417acc:	vpaddb xmm2,xmm7,XMMWORD PTR [edx-0x7d]
  417ad1:	sar    BYTE PTR [ebp-0x2ce99cd6],1
  417ad7:	mov    ecx,DWORD PTR [eax+0x31]
  417ada:	xor    bh,BYTE PTR [esi]
  417adc:	mov    ebx,0x8daa0dc1
  417ae1:	dec    ebx
  417ae2:	push   ebp
  417ae3:	pop    edi
  417ae4:	fisub  WORD PTR [edi]
  417ae6:	cmc    
  417ae7:	iret   
  417ae8:	or     eax,0x7fe63849
  417aed:	mov    dl,0x3b
  417aef:	rcr    BYTE PTR [esp+eax*4+0x4ff800a4],0xea
  417af7:	je     0x417b46
  417af9:	pop    es
  417afa:	push   cs
  417afb:	mov    DWORD PTR [ebx+0x7],ebx
  417afe:	or     eax,0x1852a8a9
  417b03:	adc    DWORD PTR [edx],0x59b894ea
  417b09:	cmp    eax,0x872ddb90
  417b0e:	(bad)  
  417b0f:	leave  
  417b10:	push   0x7a768460
  417b15:	or     al,0xea
  417b17:	xor    BYTE PTR [ecx+0x12ae8032],bl
  417b1d:	ret    0x4b8c
  417b20:	fistp  QWORD PTR [edi+0x6ddb6eb6]
  417b26:	shl    DWORD PTR [esi-0x77fd0621],0x55
  417b2d:	jmp    0x417b42
  417b2f:	out    0x6c,al
  417b31:	pop    ecx
  417b32:	aaa    
  417b33:	mov    DWORD PTR [ecx],eax
  417b35:	inc    esp
  417b36:	hlt    
  417b37:	mov    bh,0x2
  417b39:	icebp  
  417b3a:	push   ebp
  417b3b:	sub    eax,0x1914e990
  417b40:	sub    al,0x4a
  417b42:	mov    DWORD PTR [edx+edi*4],esp
  417b45:	sti    
  417b46:	icebp  
  417b47:	jnp    0x417b47
  417b49:	jecxz  0x417b19
  417b4b:	and    edi,esp
  417b4d:	inc    esi
  417b4e:	adc    eax,0xb0df24a2
  417b53:	call   0xdd3078b7
  417b58:	ficom  WORD PTR ds:0xe7e3a2ad
  417b5e:	stc    
  417b5f:	mov    ebx,0x9757afd5
  417b64:	pop    es
  417b65:	push   eax
  417b66:	and    BYTE PTR [ebx],cl
  417b68:	mov    ebp,0x5b6918ff
  417b6d:	in     al,0x5e
  417b6f:	push   ds
  417b70:	call   0x4ecc:0xca02f98e
  417b77:	sub    al,0x42
  417b79:	xchg   edi,eax
  417b7a:	jmp    FWORD PTR [ecx-0x58]
  417b7d:	mov    esi,0xcfa0e2aa
  417b82:	push   edi
  417b83:	jge    0x417bb8
  417b85:	inc    edx
  417b86:	shr    BYTE PTR [esi+edi*8],0x9b
  417b8a:	frstor [edi]
  417b8c:	shl    BYTE PTR [edx+ebx*4+0x47ff731f],cl
  417b93:	cmp    eax,0x2e718a06
  417b98:	pop    ebp
  417b99:	xor    edx,edi
  417b9b:	clc    
  417b9c:	lock ficom DWORD PTR [edi+0x3b7872f5]
  417ba3:	push   ecx
  417ba4:	xor    esp,DWORD PTR [esi+0x17]
  417ba7:	outs   dx,DWORD PTR ss:[esi]
  417ba9:	repz add al,0xee
  417bac:	add    al,0x20
  417bae:	lods   eax,DWORD PTR ds:[esi]
  417baf:	jle    0x417c02
  417bb1:	inc    edx
  417bb2:	fisub  DWORD PTR [esi+ebp*4+0x6ab5256c]
  417bb9:	sbb    edx,eax
  417bbb:	pop    es
  417bbc:	pop    ss
  417bbd:	fs mov dl,0x16
  417bc0:	push   ebx
  417bc1:	pop    esp
  417bc2:	loope  0x417b53
  417bc4:	scas   al,BYTE PTR es:[edi]
  417bc5:	push   eax
  417bc6:	test   si,si
  417bc9:	cmp    DWORD PTR [ebx-0x50],0xb1b6c514
  417bd0:	jecxz  0x417c18
  417bd2:	cdq    
  417bd3:	add    eax,0x3913a645
  417bd8:	outs   dx,DWORD PTR ds:[esi]
  417bd9:	int3   
  417bda:	xchg   edx,eax
  417bdb:	mov    ?,WORD PTR [eax+ebp*8-0x70]
  417bdf:	xchg   edx,eax
  417be0:	push   ecx
  417be1:	sub    ebp,DWORD PTR [esi]
  417be3:	inc    esp
  417be4:	pop    ebx
  417be5:	pop    esp
  417be6:	fsub   st,st(7)
  417be8:	fld    TBYTE PTR [edx-0x4eabb68c]
  417bee:	and    bh,dh
  417bf0:	shr    BYTE PTR [ecx+0x1],1
  417bf3:	mov    eax,0x3beef9e8
  417bf8:	in     eax,0xde
  417bfa:	fwait
  417bfb:	arpl   bx,cx
  417bfd:	add    eax,0x43a97234
  417c02:	mov    ebp,0xe2f9747d
  417c07:	jnp    0x417bb6
  417c09:	and    BYTE PTR [ecx],0x76
  417c0c:	enter  0x131,0x38
  417c10:	xor    eax,0xd83d0af2
  417c15:	sar    DWORD PTR [edi+edx*2],0x5d
  417c19:	retf   0xf27f
  417c1c:	jl     0x417c52
  417c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c1f:	mov    ch,0x7c
  417c21:	mov    BYTE PTR [edi+0x2e60c4b3],dh
  417c27:	lahf   
  417c28:	stc    
  417c29:	lahf   
  417c2a:	fisubr DWORD PTR [eax]
  417c2c:	add    esp,DWORD PTR [ebx]
  417c2e:	dec    ebp
  417c2f:	cmp    esi,edi
  417c31:	push   cs
  417c32:	dec    DWORD PTR [edx]
  417c34:	lods   al,BYTE PTR ds:[esi]
  417c35:	and    al,0xa0
  417c37:	pop    es
  417c38:	inc    edi
  417c39:	cs out dx,al
  417c3b:	sti    
  417c3c:	pop    edx
  417c3d:	mov    ecx,0x4aef6efe
  417c42:	or     eax,0x1ce74fd0
  417c47:	call   FWORD PTR [edx-0x79d56f3f]
  417c4d:	cli    
  417c4e:	pushf  
  417c4f:	jno    0x417cac
  417c51:	imul   ebx,DWORD PTR [ebx-0x658bbd0e],0xd01434e3
  417c5b:	fnsave [edi+0x1977eef1]
  417c61:	jns    0x417c20
  417c63:	jp     0x417cca
  417c65:	ins    DWORD PTR es:[edi],dx
  417c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c67:	sub    DWORD PTR [ebx],0xef16c5a
  417c6d:	jp     0x417c13
  417c6f:	test   ah,0x84
  417c72:	pusha  
  417c73:	test   eax,0x9763b3d7
  417c78:	pop    ecx
  417c79:	push   edx
  417c7a:	pop    edi
  417c7b:	call   0x3e1fdf26
  417c80:	mov    al,ds:0xcebd4ab8
  417c85:	xor    ecx,DWORD PTR [esi+0x33]
  417c88:	fld    QWORD PTR [ebx-0x76]
  417c8b:	shl    DWORD PTR [esi+ebx*4],1
  417c8e:	les    eax,FWORD PTR fs:[edi]
  417c91:	sbb    ch,dh
  417c93:	cdq    
  417c94:	(bad)  
  417c95:	(bad)  [ebx+0x577a35ba]
  417c9c:	dec    esp
  417c9d:	(bad)  
  417c9e:	sbb    ah,BYTE PTR [edx-0x4a]
  417ca1:	mov    cl,0xcc
  417ca3:	aam    0x94
  417ca5:	mov    edi,0x887ace0b
  417caa:	jnp    0x417c83
  417cac:	fwait
  417cad:	pop    ss
  417cae:	jp     0x417c9a
  417cb0:	sbb    BYTE PTR [ecx],cl
  417cb2:	xchg   DWORD PTR [esi+edi*1],ebp
  417cb5:	and    DWORD PTR [edx-0x4a],ebp
  417cb8:	pop    eax
  417cb9:	xchg   esi,eax
  417cba:	jnp    0x417cc7
  417cbc:	clc    
  417cbd:	mov    al,0x9a
  417cbf:	(bad)  
  417cc1:	cmp    ah,BYTE PTR [esi-0x27]
  417cc4:	push   es
  417cc5:	enter  0x313e,0xc3
  417cc9:	mov    edi,0xbf3919fa
  417cce:	ja     0x417cdf
  417cd0:	in     eax,dx
  417cd1:	adc    eax,0x15281c66
  417cd6:	mov    dl,0x4c
  417cd8:	js     0x417cfc
  417cda:	push   ecx
  417cdb:	sub    BYTE PTR [eax-0x7256d22f],ah
  417ce1:	jno    0x417c6c
  417ce3:	and    cl,al
  417ce5:	(bad)  
  417ce7:	push   eax
  417ce8:	push   0x6afa4b65
  417ced:	pop    esi
  417cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cef:	stc    
  417cf0:	inc    eax
  417cf1:	cdq    
  417cf2:	cwde   
  417cf3:	dec    esi
  417cf4:	mov    ebx,0x52b5dc65
  417cf9:	push   cs
  417cfa:	adc    DWORD PTR [ebx-0x24],ebp
  417cfd:	retf   
  417cfe:	enter  0x52b1,0x12
  417d02:	mov    al,0x46
  417d04:	fs inc esp
  417d06:	jmp    0x417c9f
  417d08:	cld    
  417d09:	stos   BYTE PTR es:[edi],al
  417d0a:	cmp    BYTE PTR [esi-0x4d1cb0e4],cl
  417d10:	or     DWORD PTR [ebx],ebp
  417d12:	push   0xee917570
  417d17:	jmp    0x417cac
  417d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d1a:	cmp    ebp,edx
  417d1c:	(bad)  
  417d1d:	shl    DWORD PTR [ebx+esi*8],1
  417d20:	pop    ecx
  417d21:	mov    bh,0xb2
  417d23:	inc    esp
  417d24:	pop    esp
  417d25:	mov    ds:0xe5b3eb68,al
  417d2a:	sub    esp,ebp
  417d2c:	mov    esi,0xad83e665
  417d31:	cmc    
  417d32:	xchg   BYTE PTR [eax+ebx*2-0x9],ah
  417d36:	ret    
  417d37:	jb     0x417d10
  417d39:	xor    al,0x8a
  417d3b:	add    eax,0xb2ccf7ca
  417d40:	cmp    eax,0x8ed3a703
  417d45:	loopne 0x417d63
  417d47:	and    eax,0x9e9f2f1a
  417d4c:	dec    edx
  417d4d:	pop    ss
  417d4e:	mov    eax,0x251dea0
  417d53:	push   esi
  417d54:	mov    WORD PTR [ebx+ebp*8-0x44],?
  417d58:	dec    ecx
  417d59:	sahf   
  417d5a:	clc    
  417d5b:	jmp    0x81ac:0xa6d67fe9
  417d62:	sub    ebp,ebx
  417d64:	test   eax,0xd3759736
  417d69:	retf   
  417d6a:	(bad)  
  417d6b:	nop
  417d6c:	cwde   
  417d6d:	sbb    esi,DWORD PTR [edx]
  417d6f:	jb     0x417d16
  417d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d72:	sbb    DWORD PTR [ecx+0xa],esp
  417d75:	xchg   edx,eax
  417d76:	mov    ch,0xb9
  417d78:	cmp    DWORD PTR [edx+0x4c879f6c],ecx
  417d7e:	pop    eax
  417d7f:	pop    ecx
  417d80:	push   es
  417d81:	sahf   
  417d82:	mov    DWORD PTR [eax-0x3c3806ac],eax
  417d88:	pushf  
  417d89:	sti    
  417d8a:	sub    BYTE PTR [esi],ch
  417d8c:	sub    dh,BYTE PTR [eax]
  417d8e:	js     0x417db2
  417d90:	das    
  417d91:	stos   BYTE PTR es:[edi],al
  417d92:	xchg   dh,bh
  417d94:	or     al,0xb5
  417d96:	push   ds
  417d97:	nop
  417d98:	inc    esi
  417d99:	pop    esp
  417d9a:	mov    dl,BYTE PTR [esi+0x13986c60]
  417da0:	in     eax,dx
  417da1:	adc    ebx,edi
  417da3:	sbb    DWORD PTR [ebx-0x34],ebp
  417da6:	xor    al,0x94
  417da8:	dec    esi
  417da9:	and    dl,0x8d
  417dac:	test   BYTE PTR ds:0x10849000,dh
  417db2:	jle    0x417dd4
  417db4:	or     dl,BYTE PTR [edx+0x34]
  417db7:	test   al,0xa0
  417db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dba:	xor    al,0xab
  417dbc:	xor    eax,0x768a631a
  417dc1:	add    edx,0x89ff926a
  417dc7:	dec    eax
  417dc8:	mov    esp,0x759a6626
  417dcd:	mov    ch,0xd5
  417dcf:	aad    0xdf
  417dd1:	xchg   ebx,eax
  417dd2:	xlat   BYTE PTR ds:[ebx]
  417dd3:	or     ebx,eax
  417dd5:	pop    ds
  417dd6:	and    dl,dl
  417dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd9:	dec    esp
  417dda:	mov    bh,0xcf
  417ddc:	mov    esi,0x5ce97c50
  417de1:	adc    eax,0xbdd2a009
  417de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de7:	inc    ebp
  417de8:	dec    ebx
  417de9:	(bad)  
  417dea:	(bad)  
  417deb:	mov    dh,0xa0
  417ded:	push   esp
  417dee:	js     0x417da6
  417df0:	stos   DWORD PTR es:[edi],eax
  417df1:	inc    ebp
  417df2:	and    edi,DWORD PTR [edi-0x7f3d65cd]
  417df8:	mov    DWORD PTR [ecx],ebp
  417dfa:	mov    eax,ds:0x865abbe0
  417dff:	mov    al,fs:0x67a95331
  417e05:	fdivr  QWORD PTR [edi]
  417e07:	push   edi
  417e08:	dec    edi
  417e09:	mov    DWORD PTR ds:0x596ead23,ecx
  417e0f:	jmp    0x417dd2
  417e11:	mov    bh,0xf5
  417e13:	xchg   edi,eax
  417e14:	sahf   
  417e15:	xchg   edi,eax
  417e16:	imul   ecx,DWORD PTR [ebp-0x6978e138],0xffffffa3
  417e1d:	cmc    
  417e1e:	push   edx
  417e1f:	pop    esp
  417e20:	std    
  417e21:	call   0x7a2a99e4
  417e26:	ret    
  417e27:	mov    edx,0x13f0a739
  417e2c:	jle    0x417dc2
  417e2e:	mov    dh,0x14
  417e30:	sub    BYTE PTR [edi],bh
  417e32:	out    dx,eax
  417e33:	sub    bl,BYTE PTR [ecx-0x4fed9466]
  417e39:	mov    ebp,0x81907121
  417e3e:	inc    edi
  417e3f:	or     al,0xc9
  417e41:	imul   ecx,esp,0x37
  417e44:	fdiv   st(6),st
  417e46:	fld    TBYTE PTR [ebx]
  417e48:	xchg   edi,eax
  417e49:	outs   dx,BYTE PTR ds:[esi]
  417e4a:	jp     0x417e6c
  417e4c:	js     0x417de9
  417e4e:	call   FWORD PTR [ebx+eiz*2+0x6]
  417e52:	loope  0x417ec8
  417e54:	outs   dx,DWORD PTR ds:[esi]
  417e55:	les    ebx,FWORD PTR [ebx+0x38c5912c]
  417e5b:	jg     0x417ed5
  417e5d:	loop   0x417e5a
  417e5f:	sbb    BYTE PTR [esi+edi*1+0x37],bl
  417e63:	aam    0xe5
  417e65:	aam    0xcd
  417e67:	dec    ebx
  417e68:	mov    edi,0x584d14ac
  417e6d:	mov    esp,0xae536862
  417e72:	inc    edx
  417e73:	pop    es
  417e74:	mov    bh,0x7a
  417e76:	dec    ebx
  417e77:	pop    esp
  417e78:	ds inc eax
  417e7a:	fsqrt  
  417e7c:	push   ebp
  417e7d:	pop    edx
  417e7e:	test   BYTE PTR [edi-0x459f515e],al
  417e84:	mov    ds:0x1b3abd1e,al
  417e89:	hlt    
  417e8a:	test   BYTE PTR [esi],al
  417e8c:	nop
  417e8d:	adc    cl,BYTE PTR [ebx-0x124986c8]
  417e93:	or     dh,ah
  417e95:	sbb    al,0xb2
  417e97:	scas   eax,DWORD PTR es:[edi]
  417e98:	ror    DWORD PTR [ebp+esi*4-0x4],0x43
  417e9d:	jno    0x417e57
  417e9f:	xchg   ecx,eax
  417ea0:	pop    ecx
  417ea1:	mov    dl,0x85
  417ea3:	scas   al,BYTE PTR es:[edi]
  417ea4:	cmp    BYTE PTR [esi-0x7d],dl
  417ea7:	inc    edi
  417ea8:	loopne 0x417e6a
  417eaa:	fsub   st(0),st
  417eac:	and    BYTE PTR [eax-0x3e],ah
  417eaf:	in     eax,dx
  417eb0:	and    BYTE PTR [esi-0x10],bh
  417eb3:	cmp    BYTE PTR [edi-0x43],0x6f
  417eb7:	adc    BYTE PTR [ebx-0x33],ch
  417eba:	pop    ecx
  417ebb:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417ebd:	jo     0x417ef6
  417ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ec0:	ficomp WORD PTR [esi]
  417ec2:	scas   al,BYTE PTR es:[edi]
  417ec3:	loopne 0x417e56
  417ec5:	sahf   
  417ec6:	jle    0x417f42
  417ec8:	and    BYTE PTR [ebx*1-0x5b589ee1],0xd6
  417ed0:	jp     0x417e83
  417ed2:	int    0x5f
  417ed4:	mov    esi,0x1fdd999c
  417ed9:	push   eax
  417eda:	loopne 0x417eea
  417edc:	mov    cl,ch
  417ede:	dec    eax
  417edf:	aas    
  417ee0:	and    al,0x19
  417ee2:	in     eax,dx
  417ee3:	lods   eax,DWORD PTR ds:[esi]
  417ee4:	or     DWORD PTR [eax],0x2a5cc28b
  417eea:	nop
  417eeb:	je     0x417ed0
  417eed:	adc    bl,0x85
  417ef0:	xchg   ebp,eax
  417ef1:	jnp    0x417f01
  417ef3:	inc    ebp
  417ef4:	push   ds
  417ef5:	mov    esp,0x38395649
  417efa:	mov    al,BYTE PTR [esp+edi*2-0xc]
  417efe:	sub    BYTE PTR [ebx+ebp*4-0x21658519],dh
  417f05:	jg     0x417eac
  417f07:	sbb    BYTE PTR [edx+0x62032db1],ch
  417f0d:	aam    0x22
  417f0f:	enter  0x3755,0x65
  417f13:	rol    BYTE PTR [esi-0x23],1
  417f16:	jns    0x417f16
  417f18:	and    ebx,ebx
  417f1a:	adc    ah,BYTE PTR [esp+eiz*4]
  417f1d:	push   ecx
  417f1e:	xchg   edi,eax
  417f1f:	or     eax,esp
  417f21:	cmp    DWORD PTR [edi],ebp
  417f23:	ss cdq 
  417f25:	fs push 0xffffff97
  417f28:	or     DWORD PTR [edx+0x7e4cf696],esp
  417f2e:	(bad)  
  417f2f:	arpl   ax,cx
  417f31:	call   0xe1493cde
  417f36:	scas   al,BYTE PTR es:[edi]
  417f37:	gs dec ebp
  417f39:	mov    dh,0x61
  417f3b:	pushf  
  417f3c:	lods   al,BYTE PTR ds:[esi]
  417f3d:	ja     0x417f41
  417f3f:	call   0x534598a6
  417f44:	xchg   BYTE PTR [edx+edx*4+0x32],bh
  417f48:	enter  0x81ee,0xbc
  417f4c:	sahf   
  417f4d:	push   ecx
  417f4e:	pop    esi
  417f4f:	fdiv   QWORD PTR [ebx-0x2]
  417f52:	or     al,0x39
  417f54:	push   ds
  417f55:	scas   eax,DWORD PTR es:[edi]
  417f56:	pop    ss
  417f57:	add    DWORD PTR [ebx+0x6c1854fe],ecx
  417f5d:	adc    edi,DWORD PTR [ecx+0x4bfcfbb]
  417f63:	lods   eax,DWORD PTR ds:[esi]
  417f64:	es in  eax,0x49
  417f67:	adc    ch,BYTE PTR [ecx-0x7b4dddd8]
  417f6d:	xchg   edx,eax
  417f6e:	and    al,0x33
  417f70:	xor    BYTE PTR [ebx],ch
  417f72:	sti    
  417f73:	mov    bl,0x5d
  417f75:	and    eax,0xf4bedcad
  417f7b:	xor    eax,DWORD PTR [esi]
  417f7d:	sbb    cl,BYTE PTR [eax]
  417f7f:	ins    BYTE PTR es:[edi],dx
  417f80:	cmp    esp,edi
  417f82:	pop    ecx
  417f83:	sbb    DWORD PTR [eax-0x627cdc54],ebp
  417f89:	imul   esp,DWORD PTR [edx+0x58],0x7e
  417f8d:	int    0x1e
  417f8f:	cli    
  417f90:	xchg   esp,eax
  417f91:	add    al,0x6e
  417f93:	leave  
  417f94:	lods   al,BYTE PTR gs:[esi]
  417f96:	in     al,0x1c
  417f98:	push   edx
  417f99:	inc    ebp
  417f9a:	mov    esi,0xaaa7ce37
  417f9f:	inc    DWORD PTR [ecx-0x7d]
  417fa2:	sub    ch,cl
  417fa4:	ds xchg ecx,eax
  417fa6:	out    0x38,eax
  417fa8:	ins    BYTE PTR es:[edi],dx
  417fa9:	fsubr  QWORD PTR ds:0x1a2ec72f
  417faf:	mov    ebx,ebp
  417fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb2:	jno    0x417ff5
  417fb4:	test   al,0xeb
  417fb6:	pusha  
  417fb7:	(bad)  ds:0xb155bd3d
  417fbd:	imul   ebx,DWORD PTR [ebp+0x712d0b8c],0x6d
  417fc4:	add    bl,BYTE PTR [edx+0x12]
  417fc7:	xchg   esp,eax
  417fc8:	xor    edx,eax
  417fca:	push   0x3f
  417fcc:	pop    ds
  417fcd:	push   es
  417fce:	lds    esp,FWORD PTR [esi-0x436be65b]
  417fd4:	dec    eax
  417fd5:	xchg   ebx,eax
  417fd6:	push   edx
  417fd7:	call   0x1047:0x9690b65e
  417fde:	push   eax
  417fdf:	fldcw  WORD PTR [esi-0x65]
  417fe2:	inc    ecx
  417fe3:	ja     0x417fd6
  417fe5:	leave  
  417fe6:	push   esi
  417fe7:	dec    esp
  417fe8:	(bad)  
  417fe9:	jge    0x417f9c
  417feb:	repz mov bh,0xec
  417fee:	scas   eax,DWORD PTR es:[edi]
  417fef:	pop    DWORD PTR [ebp+0x2d]
  417ff2:	lea    esp,[ebx]
  417ff4:	and    DWORD PTR [ebp-0x1ba68de7],edi
  417ffa:	add    al,BYTE PTR [ebx]
  417ffc:	mov    ah,0xaa
  417ffe:	loope  0x417ffd
  418000:	hlt    
  418001:	xchg   ecx,eax
  418002:	jp     0x417f9a
  418004:	std    
  418005:	jmp    0x418019
  418007:	or     ch,BYTE PTR [edi-0x2dde14ff]
  41800d:	dec    ebx
  41800e:	push   esp
  41800f:	xor    al,0x1b
  418011:	mov    esi,0x3ad5e94c
  418016:	cwde   
  418017:	add    eax,0xbc4ab585
  41801c:	pop    ds
  41801d:	in     al,dx
  41801e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801f:	clc    
  418020:	imul   ecx,DWORD PTR [eax+eax*8],0xffffffad
  418024:	mov    dl,0xa8
  418026:	and    al,0xfb
  418028:	mov    ecx,edx
  41802a:	(bad)  
  41802b:	mov    BYTE PTR [ebp+eiz*8+0x7518c282],dl
  418032:	pop    eax
  418033:	ins    BYTE PTR es:[edi],dx
  418034:	add    BYTE PTR [ecx],dh
  418036:	jmp    0x418054
  418038:	push   esp
  418039:	mov    ebp,0xc06e74fd
  41803e:	sub    BYTE PTR [edx-0x44],ah
  418041:	retf   
  418042:	test   BYTE PTR [ecx+0x9],ah
  418045:	or     edi,DWORD PTR [edx-0xd9985e7]
  41804b:	or     al,0xe0
  41804d:	(bad)  [ecx-0x3a]
  418050:	mov    ds:0xd1a04537,eax
  418055:	cwde   
  418056:	mov    ecx,0x2d5a125b
  41805b:	fdivr  DWORD PTR [esi+esi*8+0x5611a9e6]
  418062:	stc    
  418063:	mov    dl,0xaa
  418065:	(bad)  
  418066:	push   edx
  418067:	push   esp
  418068:	jne    0x418001
  41806a:	and    DWORD PTR [edx],eax
  41806c:	push   0xd8d7a465
  418071:	int3   
  418072:	pop    ss
  418073:	adc    BYTE PTR [eax+ecx*4+0x4e],0x6a
  418078:	inc    esp
  418079:	cmp    eax,0x9f8df8f0
  41807e:	push   ecx
  41807f:	iret   
  418080:	(bad)  
  418082:	pop    esp
  418083:	fild   WORD PTR [edi-0x67a6d12e]
  418089:	pop    cx
  41808b:	mov    esi,0x97d8a80c
  418090:	xor    eax,0x965b49d3
  418095:	or     ch,BYTE PTR [edi+0x401e787e]
  41809b:	jge    0x4180f3
  41809d:	test   al,0xc4
  41809f:	cmc    
  4180a0:	ror    BYTE PTR [ecx],1
  4180a2:	rcl    DWORD PTR [esi],0x35
  4180a5:	nop
  4180a6:	jo     0x4180f7
  4180a8:	ds aam 0xbb
  4180ab:	cmp    ebx,DWORD PTR [edi-0x1bdca4e2]
  4180b1:	cwde   
  4180b2:	ins    BYTE PTR es:[edi],dx
  4180b3:	ins    DWORD PTR es:[edi],dx
  4180b4:	pusha  
  4180b5:	fcomi  st,st(6)
  4180b7:	and    eax,0x2ef5f0c
  4180bc:	xlat   BYTE PTR ds:[ebx]
  4180bd:	inc    eax
  4180be:	cld    
  4180bf:	in     al,0xe5
  4180c1:	or     al,0x6b
  4180c3:	mov    al,0x7c
  4180c5:	aaa    
  4180c6:	into   
  4180c7:	pop    esi
  4180c8:	mov    eax,ds:0x18b669df
  4180cd:	mov    ds:0x658e1699,al
  4180d2:	ds mov eax,0x54b9e8e
  4180d8:	cmp    esi,DWORD PTR [esi-0x553407a7]
  4180de:	f2xm1  
  4180e0:	not    ch
  4180e2:	test   BYTE PTR [eax+0x608c91f],al
  4180e8:	push   0xca0e7b6
  4180ed:	addr16 aam 0xc1
  4180f0:	mov    ss,WORD PTR es:[ecx]
  4180f3:	inc    ebx
  4180f4:	mov    ebx,0x63275aa2
  4180f9:	mov    eax,0x8e03aa48
  4180fe:	rol    BYTE PTR [eax+esi*2],1
  418101:	mov    esi,0xf67aef6
  418106:	(bad)  
  418107:	js     0x418123
  418109:	mov    esp,0x99120612
  41810e:	inc    ebp
  41810f:	mov    esi,0x24947a5
  418114:	jecxz  0x418134
  418116:	push   esp
  418117:	ror    BYTE PTR [esi],cl
  418119:	sub    bh,BYTE PTR [ecx+ebp*2+0x15]
  41811d:	cmp    BYTE PTR [ebx-0x72dfed1a],cl
  418123:	dec    ecx
  418124:	int    0xd0
  418126:	ficom  DWORD PTR [ecx+ecx*8]
  418129:	sar    DWORD PTR [ecx],0xd3
  41812c:	xchg   edx,eax
  41812d:	scas   al,BYTE PTR es:[edi]
  41812e:	inc    esp
  41812f:	mov    DWORD PTR [ecx-0x1d],ebp
  418132:	add    al,0xe7
  418134:	imul   esp,ebx,0x2f
  418137:	test   DWORD PTR [edi+0x7e],edi
  41813a:	into   
  41813b:	aam    0x24
  41813d:	mov    eax,ds:0xab5973a9
  418142:	jle    0x4181b3
  418144:	dec    ebx
  418145:	aam    0x48
  418147:	int    0xf0
  418149:	mov    esi,0xbc9ea5fb
  41814e:	cmp    BYTE PTR [esi],bh
  418150:	pop    es
  418151:	adc    edi,eax
  418153:	ret    0x118c
  418156:	lahf   
  418157:	mov    ch,dl
  418159:	ins    DWORD PTR es:[edi],dx
  41815a:	xor    bl,BYTE PTR [esi-0x197dcd18]
  418160:	mov    cl,0x3e
  418162:	test   BYTE PTR [ebx],ah
  418164:	sar    dh,0xd0
  418167:	pop    edi
  418168:	xor    al,0xd
  41816a:	pushf  
  41816b:	into   
  41816c:	loope  0x418163
  41816e:	rol    BYTE PTR [ecx-0x7dccb988],cl
  418174:	ss sahf 
  418176:	and    edx,DWORD PTR [eax+ebx*2-0x5c]
  41817a:	ret    
  41817b:	pop    edi
  41817c:	push   ds
  41817d:	mov    edx,0x204b3ab6
  418182:	fwait
  418183:	sbb    al,0xcd
  418185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418186:	out    dx,eax
  418187:	mov    eax,ds:0x150b317d
  41818c:	rol    DWORD PTR [edx-0x3b],cl
  41818f:	xor    eax,0x504f82b2
  418194:	ret    
  418195:	mov    ebx,0x824f424
  41819a:	xor    cl,BYTE PTR [ebx-0xd]
  41819d:	out    0x9d,al
  41819f:	xor    al,0x96
  4181a1:	or     ecx,ecx
  4181a3:	aam    0x77
  4181a5:	lea    ebp,[ebp+0x63]
  4181a8:	cmp    eax,0xb4a2f3ba
  4181ad:	sbb    DWORD PTR gs:[edx+0x51],ecx
  4181b1:	dec    ebx
  4181b2:	jl     0x4181c8
  4181b4:	pop    es
  4181b5:	pop    ecx
  4181b6:	cmp    eax,0xdf9bc024
  4181bb:	je     0x41815b
  4181bd:	call   0xae1efdc
  4181c2:	fsub   QWORD PTR [esi-0x553f0944]
  4181c8:	lock push cs
  4181ca:	fs xchg esp,eax
  4181cc:	shl    BYTE PTR [ebp-0x72],1
  4181cf:	les    ecx,FWORD PTR [eax-0x2b2ed8f6]
  4181d5:	inc    edi
  4181d6:	push   esi
  4181d7:	les    edi,FWORD PTR [eax-0x69]
  4181da:	mov    esi,0x7d46d186
  4181df:	into   
  4181e0:	imul   DWORD PTR [ebx]
  4181e2:	mov    edi,0x7200d5ab
  4181e7:	pushf  
  4181e8:	or     DWORD PTR [eax+0x76d3d278],esi
  4181ee:	dec    esp
  4181ef:	or     BYTE PTR [edi-0x68],dh
  4181f2:	cli    
  4181f3:	addr16 call 0x2fc2:0x3bb01700
  4181fb:	mov    ebp,0x89aecfe1
  418200:	add    BYTE PTR [ebx-0x5aa620fd],bh
  418206:	outs   dx,BYTE PTR ds:[esi]
  418207:	add    al,0xa5
  418209:	lods   al,BYTE PTR ds:[esi]
  41820a:	lahf   
  41820b:	and    al,0xf7
  41820d:	and    al,0x9f
  41820f:	repnz clc 
  418211:	sbb    DWORD PTR [edi-0x18648f5c],0x11
  418218:	lods   al,BYTE PTR ds:[esi]
  418219:	xchg   edi,eax
  41821a:	fild   DWORD PTR [edx+0x2fb3e864]
  418220:	push   edx
  418221:	sbb    eax,0x141e26ed
  418226:	addr16 cli 
  418228:	leave  
  418229:	jnp    0x4181b3
  41822b:	sbb    DWORD PTR [ecx],esi
  41822d:	jb     0x418296
  41822f:	add    BYTE PTR [ecx+0x2efd8276],dh
  418235:	loope  0x418297
  418237:	ins    BYTE PTR es:[edi],dx
  418238:	mov    esp,0xad6d4f3e
  41823d:	gs (bad) 
  41823f:	pop    edi
  418240:	xchg   esp,eax
  418241:	arpl   WORD PTR [edx+0x60],di
  418244:	sub    esi,DWORD PTR [ebp-0x7569427a]
  41824a:	push   ebx
  41824b:	sub    bh,BYTE PTR [eax+0x56c4fada]
  418251:	mov    ds,WORD PTR [esi-0xd]
  418254:	int    0xab
  418256:	(bad)  
  418257:	ins    DWORD PTR es:[edi],dx
  418258:	add    BYTE PTR [esi-0x68],ah
  41825b:	mov    al,0x51
  41825d:	lds    edi,FWORD PTR [ecx-0x6]
  418260:	mov    ds:0xb0ac0b38,eax
  418265:	and    edx,DWORD PTR [eax+edx*4+0xa34c2fd]
  41826c:	dec    ecx
  41826d:	addr16 inc eax
  41826f:	push   ebx
  418270:	add    ebp,ecx
  418272:	cli    
  418273:	sbb    ebx,DWORD PTR [ebx-0x5287747a]
  418279:	add    dl,BYTE PTR [eax]
  41827b:	or     eax,0xc3554a18
  418280:	mov    dl,0xe2
  418282:	sbb    DWORD PTR [ebx+edi*4+0xfcb09],esi
  418289:	jg     0x41824a
  41828b:	dec    ebx
  41828c:	mov    edx,0xc1b13012
  418291:	clc    
  418292:	mov    bh,0x52
  418294:	jns    0x4182fc
  418296:	push   ecx
  418297:	in     eax,dx
  418298:	jae    0x418286
  41829a:	pop    esi
  41829b:	push   edx
  41829c:	pop    edx
  41829d:	test   al,0xaf
  41829f:	sbb    DWORD PTR [edx+0x380622fe],ebp
  4182a5:	imul   ebp,ebx,0xffffffe1
  4182a8:	ds pop ebx
  4182aa:	sti    
  4182ab:	ret    
  4182ac:	in     eax,dx
  4182ad:	mov    cl,0x27
  4182af:	xchg   esp,eax
  4182b0:	lgs    edi,FWORD PTR [esi]
  4182b3:	push   cs
  4182b4:	xchg   DWORD PTR [edi+0x0],esi
  4182b7:	outs   dx,BYTE PTR ds:[esi]
  4182b8:	aaa    
  4182b9:	popf   
  4182ba:	sti    
  4182bb:	or     ah,BYTE PTR [edi]
  4182bd:	jmp    0xdcb7:0xf2962453
  4182c4:	inc    edx
  4182c5:	lahf   
  4182c6:	or     ebp,0xebc577bd
  4182cc:	and    eax,0xeb890b0c
  4182d1:	xchg   esi,eax
  4182d2:	mov    bl,0xa3
  4182d4:	sbb    eax,0x16e64689
  4182d9:	mov    dh,0xf8
  4182db:	adc    DWORD PTR [ebp-0x31],esp
  4182de:	lahf   
  4182df:	or     ch,BYTE PTR [ebx]
  4182e1:	retf   0x6df5
  4182e4:	in     eax,dx
  4182e5:	lock lods al,BYTE PTR ds:[esi]
  4182e7:	sbb    dl,BYTE PTR [esi]
  4182e9:	aaa    
  4182ea:	jno    0x41827a
  4182ec:	pop    ebp
  4182ed:	es pop edi
  4182ef:	jbe    0x4182ef
  4182f1:	aaa    
  4182f2:	into   
  4182f3:	addr16 push es
  4182f5:	mov    ecx,edx
  4182f7:	mov    edx,0x98baeb64
  4182fc:	pop    ds
  4182fd:	into   
  4182fe:	int3   
  4182ff:	push   ss
  418300:	push   edi
  418301:	aas    
  418302:	les    edx,FWORD PTR [ebx+0x31]
  418305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418306:	popa   
  418307:	ds mov dh,0x31
  41830a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41830b:	xchg   ebx,esp
  41830d:	sti    
  41830e:	adc    cl,ch
  418310:	lock lods al,BYTE PTR ds:[esi]
  418312:	adc    BYTE PTR [ebx+0x560252e1],0x6
  418319:	pop    ebx
  41831a:	dec    edx
  41831b:	stos   DWORD PTR es:[edi],eax
  41831c:	pop    es
  41831d:	adc    al,0x4f
  41831f:	jae    0x418351
  418321:	inc    ecx
  418322:	cmp    esi,DWORD PTR [ecx+0x4cac63aa]
  418328:	dec    eax
  418329:	dec    eax
  41832a:	call   0xe4b2:0xf138267a
  418331:	mov    al,ds:0xcd886303
  418336:	mov    ds:0x8096813e,al
  41833b:	push   ds
  41833c:	pop    ebx
  41833d:	pop    ebx
  41833e:	fist   DWORD PTR ds:0x5a95363d
  418344:	add    al,0x55
  418346:	data16 mov bh,0x5d
  418349:	mov    eax,ds:0x3e7aa444
  41834e:	add    esi,DWORD PTR [eax]
  418350:	dec    dx
  418352:	arpl   bx,bp
  418354:	push   edi
  418355:	cmp    DWORD PTR [eax-0x54],edx
  418358:	data16 mov al,ds:0xaaf9ed5a
  41835e:	shl    DWORD PTR [ecx+0x55],0x57
  418362:	retf   0x4b1d
  418365:	iret   
  418366:	retf   
  418367:	cmp    eax,ecx
  418369:	addr16 add ebx,esp
  41836c:	mul    BYTE PTR [ecx]
  41836e:	dec    ebx
  41836f:	inc    edi
  418370:	or     ch,BYTE PTR [ebx]
  418372:	xchg   ebp,eax
  418373:	or     BYTE PTR ss:0x7ac4aa24,0x1
  41837b:	or     BYTE PTR [eax],bl
  41837d:	clc    
  41837e:	add    DWORD PTR [edi],ebp
  418380:	ja     0x4183c6
  418382:	aas    
  418383:	icebp  
  418384:	mov    al,ds:0x2b8c0c2e
  418389:	sbb    eax,0xb5efefb1
  41838e:	ficomp WORD PTR [esi+0x55]
  418391:	sar    BYTE PTR [ebp+0x729be842],0xfc
  418398:	lods   eax,DWORD PTR ds:[esi]
  418399:	dec    ecx
  41839a:	scas   eax,DWORD PTR es:[edi]
  41839b:	or     DWORD PTR [eax],eax
  41839d:	gs xchg ecx,eax
  41839f:	mov    ax,0x855c
  4183a3:	jge    0x4183ae
  4183a5:	add    BYTE PTR [edx+0x7fc9a34c],bh
  4183ab:	xor    esi,DWORD PTR ds:0x7dc7370b
  4183b1:	invd   
  4183b3:	les    ebp,FWORD PTR [edi]
  4183b5:	cs push edi
  4183b7:	iret   
  4183b8:	adc    al,bl
  4183ba:	inc    esi
  4183bb:	retf   
  4183bc:	cmp    eax,0x529de04c
  4183c1:	test   DWORD PTR [eax],ebx
  4183c3:	rcl    BYTE PTR ds:0x4144e998,cl
  4183c9:	mov    ss,WORD PTR [eax]
  4183cb:	pop    ecx
  4183cc:	pop    ss
  4183cd:	test   al,bh
  4183cf:	mov    ecx,edx
  4183d1:	inc    esp
  4183d2:	sub    BYTE PTR [edx],al
  4183d4:	push   0x40e834f8
  4183d9:	xor    BYTE PTR [ebp-0x3db2a2ca],bh
  4183df:	cs scas al,BYTE PTR es:[di]
  4183e2:	loopne 0x418381
  4183e4:	inc    edi
  4183e5:	jb     0x4183d6
  4183e7:	jp     0x41842d
  4183e9:	xor    eax,0x9616c74d
  4183ee:	pinsrw mm7,ecx,0x39
  4183f2:	pop    edx
  4183f3:	xlat   BYTE PTR ds:[ebx]
  4183f4:	cmp    cl,BYTE PTR [edx]
  4183f6:	jbe    0x418435
  4183f8:	add    eax,0x19054601
  4183fd:	and    DWORD PTR ds:[edx-0x2b8068d2],0xfffffff6
  418405:	and    eax,0x675740a7
  41840a:	scas   al,BYTE PTR es:[edi]
  41840b:	out    0xd7,al
  41840d:	jno    0x418400
  41840f:	mov    eax,ds:0x5f73f999
  418414:	sahf   
  418415:	mov    al,BYTE PTR ds:0xeba92707
  41841b:	mov    WORD PTR [edx+0x4d],es
  41841e:	icebp  
  41841f:	call   0xc57cb7bc
  418424:	or     esi,ebx
  418426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418427:	bound  ebx,QWORD PTR [ebx+0x7f0b37d9]
  41842d:	daa    
  41842e:	dec    eax
  41842f:	fisttp DWORD PTR [ebp-0x71]
  418432:	or     eax,0x32ff9579
  418437:	xlat   BYTE PTR ds:[ebx]
  418438:	and    BYTE PTR [edi],cl
  41843a:	sub    DWORD PTR [edx],ecx
  41843c:	mov    ebx,cr5
  41843f:	add    dl,bl
  418441:	loope  0x41840b
  418443:	pop    ss
  418444:	cwde   
  418445:	jns    0x4183f2
  418447:	cmp    ch,BYTE PTR [eax+0x5ead192a]
  41844d:	leave  
  41844e:	push   edx
  41844f:	add    eax,0x28eb4b0b
  418454:	out    0x6,al
  418456:	data16 add al,0x4f
  418459:	add    BYTE PTR [ebx+0x337a0929],al
  41845f:	and    eax,DWORD PTR [esi-0x7d]
  418462:	mov    BYTE PTR [ebx-0x47],dl
  418465:	sub    eax,0x9b1f8075
  41846a:	in     eax,0x98
  41846c:	sub    ebx,DWORD PTR [esi]
  41846e:	push   eax
  41846f:	js     0x4184be
  418471:	(bad)  
  418472:	cwde   
  418473:	or     edx,DWORD PTR ds:0x83419c3e
  418479:	int3   
  41847a:	and    dh,BYTE PTR [bp+di+0x7d]
  41847e:	fstp   TBYTE PTR [edx+0x129113f8]
  418484:	call   0xed1147ca
  418489:	cld    
  41848a:	fwait
  41848b:	ror    BYTE PTR fs:[edi-0x1038defb],1
  418492:	js     0x4184bf
  418494:	test   al,0x8
  418496:	outs   dx,BYTE PTR ds:[esi]
  418497:	adc    BYTE PTR [edx+0x541ae948],cl
  41849d:	test   edx,edi
  41849f:	jge    0x41845e
  4184a1:	int3   
  4184a2:	lea    ecx,[ecx+0x76a0f9ae]
  4184a8:	in     al,dx
  4184a9:	xor    ah,bh
  4184ab:	repnz enter 0xd6d3,0xc7
  4184b0:	hlt    
  4184b1:	aad    0x8c
  4184b3:	jae    0x4184d4
  4184b5:	mov    cl,0x86
  4184b7:	xchg   edi,eax
  4184b8:	jg     0x41848c
  4184ba:	mov    eax,ds:0x5d6baf4f
  4184bf:	fs jmp 0xc0b2:0x991ce9f4
  4184c7:	test   BYTE PTR [ebx],ah
  4184c9:	and    esp,DWORD PTR [edi]
  4184cb:	pop    ds
  4184cc:	adc    eax,0xbd801266
  4184d1:	enter  0xfdea,0xad
  4184d5:	imul   edx,DWORD PTR [edi-0x45],0x273b987b
  4184dc:	(bad)  
  4184e0:	jl     0x418483
  4184e2:	into   
  4184e3:	jae    0x4184f7
  4184e5:	mov    ds:0x37675d9c,al
  4184ea:	repz xchg edx,eax
  4184ec:	clc    
  4184ed:	or     eax,0x842126b4
  4184f2:	mov    edx,0xab4df607
  4184f7:	setno  dl
  4184fa:	dec    esp
  4184fb:	out    dx,ax
  4184fd:	xor    esp,esi
  4184ff:	push   ecx
  418500:	aad    0x5a
  418502:	push   eax
  418503:	push   DWORD PTR [esi]
  418505:	aas    
  418506:	pop    ecx
  418507:	(bad)  
  418508:	cmp    DWORD PTR [ecx+eax*8],ebp
  41850b:	adc    ecx,DWORD PTR ss:[eax+0x4d5073d4]
  418512:	dec    ebx
  418513:	nop
  418514:	lahf   
  418515:	iret   
  418516:	mov    ds:0x82ba1143,al
  41851b:	jmp    0x4184fe
  41851d:	sbb    eax,0x9cd4f4a6
  418522:	addr16 sahf 
  418524:	cmp    cl,BYTE PTR [ebx-0x7a1d1d60]
  41852a:	cmp    BYTE PTR cs:[edi+0x35],bl
  41852e:	inc    esi
  41852f:	outs   dx,BYTE PTR ds:[esi]
  418530:	mov    ah,0x32
  418532:	popa   
  418533:	stos   DWORD PTR es:[edi],eax
  418534:	test   al,0xe0
  418536:	jae    0x41857a
  418538:	test   BYTE PTR [edi-0x136c67d6],ah
  41853e:	fnsave [ebp+0x3d]
  418541:	fild   QWORD PTR [edi+0x21b3f518]
  418547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418548:	jle    0x418599
  41854a:	sbb    al,0xc
  41854c:	push   esi
  41854d:	fistp  DWORD PTR [edi]
  41854f:	cmp    edx,eax
  418551:	and    al,0x84
  418553:	enter  0xb079,0xe4
  418557:	lea    ebx,[ecx]
  418559:	shl    DWORD PTR [eax+0x64],1
  41855c:	popf   
  41855d:	cmp    al,0x69
  41855f:	shl    DWORD PTR [edi],cl
  418561:	pop    ds
  418562:	push   edx
  418563:	mov    ebx,0xdc509b7d
  418568:	mov    eax,DWORD PTR [ebx]
  41856a:	ins    BYTE PTR es:[edi],dx
  41856b:	mov    ah,0x6e
  41856d:	mov    dl,0x6f
  41856f:	push   ebp
  418570:	lds    ecx,FWORD PTR [eax]
  418572:	add    eax,0x7ac752f5
  418577:	cmc    
  418578:	or     ch,BYTE PTR [ebp+0x25e070d5]
  41857e:	sbb    DWORD PTR [edx+esi*1+0x52d4de3c],esi
  418585:	cld    
  418586:	cli    
  418587:	inc    eax
  418588:	sahf   
  418589:	je     0x418562
  41858b:	xor    al,0x33
  41858d:	push   sp
  41858f:	dec    ebx
  418590:	xchg   esi,eax
  418591:	xor    BYTE PTR [esi+0x53183d07],bh
  418597:	fistp  DWORD PTR [edi+0x2bd313f5]
  41859d:	mov    edx,0x9a5f80b7
  4185a2:	mov    ebp,0x1574366a
  4185a7:	test   BYTE PTR [esi+ebp*8],dh
  4185aa:	arpl   WORD PTR [esi-0x1545d5c3],sp
  4185b0:	push   ebx
  4185b1:	aad    0x42
  4185b3:	cmp    BYTE PTR [ecx],al
  4185b5:	dec    ecx
  4185b6:	enter  0x2846,0x1a
  4185ba:	dec    edx
  4185bb:	push   ss
  4185bc:	mov    esi,0xd7b7b79f
  4185c1:	sub    ebp,ebp
  4185c3:	sub    eax,DWORD PTR [esi+0x3b]
  4185c6:	sub    eax,0xb877e275
  4185cb:	and    eax,0x8bee667c
  4185d0:	inc    esi
  4185d1:	lea    ebp,[ecx-0x6b]
  4185d4:	add    edx,DWORD PTR [edx+0x16]
  4185d7:	imul   eax,esp,0x1f3a3443
  4185dd:	gs and eax,0x295e14a
  4185e3:	in     al,dx
  4185e4:	add    BYTE PTR [esi+0x2e],0x1b
  4185e8:	push   ss
  4185e9:	xor    dh,BYTE PTR [eiz*2-0x4db86e77]
  4185f0:	js     0x41863c
  4185f2:	xor    ecx,DWORD PTR [ecx]
  4185f4:	mov    edi,0x8c480e02
  4185f9:	push   ebp
  4185fa:	mov    esi,0xbb1577fa
  4185ff:	nop
  418600:	mov    ?,esi
  418602:	jle    0x41867a
  418604:	leave  
  418605:	push   ds
  418606:	inc    BYTE PTR [ebx+0x6c064e6f]
  41860c:	sub    al,0x6a
  41860e:	in     al,dx
  41860f:	pusha  
  418610:	pop    esp
  418611:	cmp    dh,BYTE PTR [eax+0x58b1988f]
  418617:	and    ch,BYTE PTR [ecx-0x18]
  41861a:	outs   dx,DWORD PTR ds:[esi]
  41861b:	call   0xb62e31df
  418620:	mov    ebp,0xa9e75e61
  418625:	lock jno 0x4185d4
  418628:	fmul   QWORD PTR [edx+0x7393f81f]
  41862e:	mov    ch,0x3c
  418630:	push   ebx
  418631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418632:	mov    cl,ah
  418634:	mov    ch,0x19
  418636:	push   eax
  418637:	mov    ebp,0xb6a54c2a
  41863c:	cmp    DWORD PTR [esi-0x18],edx
  41863f:	sbb    ecx,DWORD PTR [eax+0x16e1d55b]
  418645:	xchg   ecx,eax
  418646:	je     0x4186a5
  418648:	dec    esi
  418649:	jecxz  0x418657
  41864b:	lahf   
  41864c:	mov    ebp,0xe3991d7a
  418651:	mov    edi,0x35c6e61a
  418656:	xor    BYTE PTR [edi-0x7],bl
  418659:	shr    BYTE PTR [esi+eax*8+0x76fb74],0x2
  418661:	mov    ah,0x8
  418663:	loop   0x4185f7
  418665:	pop    esi
  418666:	fisttp WORD PTR [ebp+0x27]
  418669:	jl     0x41865c
  41866b:	ins    BYTE PTR es:[edi],dx
  41866c:	mov    eax,ds:0xe65d340f
  418671:	sbb    eax,0x23a4b145
  418676:	xchg   BYTE PTR [edi+eiz*2-0x5c396083],bh
  41867d:	loope  0x41860a
  41867f:	add    edx,ebp
  418681:	mov    ebx,esp
  418683:	inc    ecx
  418684:	push   eax
  418685:	mov    dl,0xce
  418687:	stc    
  418688:	ins    BYTE PTR es:[edi],dx
  418689:	test   al,0x6a
  41868b:	mov    ch,BYTE PTR ds:0x876a
  418690:	add    eax,DWORD PTR [ecx+0x57ebf39d]
  418696:	or     ecx,ecx
  418698:	fild   DWORD PTR ds:0x29b276de
  41869e:	pop    es
  41869f:	std    
  4186a0:	mov    edx,0xad864c8e
  4186a5:	mov    eax,ds:0x2bc8c30b
  4186aa:	call   DWORD PTR [edi-0x49180514]
  4186b0:	xor    eax,0x4e59c66d
  4186b5:	fst    QWORD PTR ds:0x97e1eb65
  4186bb:	enter  0xa846,0xa4
  4186bf:	push   0x46
  4186c1:	mov    ds:0xb9187061,eax
  4186c6:	into   
  4186c7:	out    dx,al
  4186c8:	add    DWORD PTR [edx-0x40],edx
  4186cb:	inc    esp
  4186cc:	push   edx
  4186cd:	stos   DWORD PTR es:[edi],eax
  4186ce:	shl    DWORD PTR [ebx-0x26934bba],cl
  4186d4:	int    0xbf
  4186d6:	ja     0x41874e
  4186d8:	jge    0x41873c
  4186da:	fisttp WORD PTR [ebx-0x103d5b30]
  4186e0:	mov    ds:0x3564d344,al
  4186e5:	mov    ss,edi
  4186e7:	sub    BYTE PTR [eax+0x32],0x76
  4186eb:	sub    DWORD PTR [esi+0x65ad783a],esp
  4186f1:	sbb    eax,0xa840c071
  4186f6:	aam    0x4
  4186f8:	clc    
  4186f9:	loop   0x4186a6
  4186fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186fc:	loop   0x4186e8
  4186fe:	fwait
  4186ff:	cmp    al,0xb5
  418701:	push   cs
  418702:	(bad)  
  418703:	pop    ds
  418704:	lea    ebx,[ebx+ebp*4+0x398dfb30]
  41870b:	cwde   
  41870c:	sbb    DWORD PTR [eax+ebp*2-0x5fdb953d],0x1189d5e7
  418717:	xchg   ecx,eax
  418718:	retf   
  418719:	xor    bl,BYTE PTR [edx+0x3e]
  41871c:	ins    DWORD PTR es:[edi],dx
  41871d:	jg     0x4186d0
  41871f:	cmc    
  418720:	popf   
  418721:	js     0x4186f4
  418723:	lods   al,BYTE PTR ds:[esi]
  418724:	aad    0xc1
  418726:	(bad)  
  418727:	pop    ds
  418728:	loopne 0x4186d9
  41872a:	sub    BYTE PTR [edi-0xce7d05a],ch
  418730:	shr    DWORD PTR [edx-0x271d82ee],cl
  418736:	inc    esp
  418737:	mov    ecx,0x3fcf0911
  41873c:	loopne 0x41872b
  41873e:	fsub   DWORD PTR [ebx]
  418740:	in     al,0x7e
  418742:	mov    ds:0x79a641fa,al
  418747:	mov    cl,BYTE PTR [ebp-0x1d]
  41874a:	(bad)  
  41874b:	out    dx,eax
  41874c:	shl    esp,1
  41874e:	sub    al,0xbf
  418750:	push   ecx
  418751:	inc    ecx
  418752:	es jmp 0x418788
  418755:	daa    
  418756:	jmp    0xaebb2f80
  41875b:	jbe    0x418717
  41875d:	ret    0xb347
  418760:	and    cl,BYTE PTR es:[edi-0x2d4f43aa]
  418767:	push   edx
  418768:	scas   al,BYTE PTR es:[edi]
  418769:	fcomi  st,st(7)
  41876b:	adc    ebx,DWORD PTR [ecx+0x39]
  41876e:	sbb    al,0x61
  418770:	mov    ax,0xd738
  418774:	popf   
  418775:	jnp    0x4187ed
  418777:	shr    BYTE PTR [esp+ecx*8],0xd8
  41877b:	mov    ds,WORD PTR [edi+0x1b]
  41877e:	retf   
  41877f:	cmp    bh,BYTE PTR [bp+0x4c]
  418783:	jmp    0x4187d3
  418785:	and    esi,DWORD PTR [edi-0x2a302495]
  41878b:	cwde   
  41878c:	out    0xab,al
  41878e:	dec    ebx
  41878f:	mov    dh,0xa
  418791:	mov    esi,0xc95acad6
  418796:	sub    ecx,DWORD PTR [edi-0x481027f4]
  41879c:	push   ecx
  41879d:	bound  esi,QWORD PTR [eax-0x4b281f50]
  4187a3:	rol    BYTE PTR [eax],1
  4187a5:	push   eax
  4187a6:	mov    edi,DWORD PTR [edx]
  4187a8:	dec    esp
  4187a9:	mov    DWORD PTR [eax+0x55b9fac3],edi
  4187af:	adc    DWORD PTR [ebx+ebp*2],0x1c
  4187b3:	sub    eax,0x51d2ee3
  4187b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b9:	loop   0x4187a9
  4187bb:	sbb    al,0x7d
  4187bd:	scas   eax,DWORD PTR es:[edi]
  4187be:	pop    DWORD PTR [eiz*4+0x28689616]
  4187c5:	xchg   ecx,eax
  4187c6:	mov    cl,0x6e
  4187c8:	aad    0xe9
  4187ca:	mov    al,ds:0x22322fdc
  4187cf:	pushw  ds
  4187d1:	outs   dx,BYTE PTR ds:[esi]
  4187d2:	int    0x7e
  4187d4:	popf   
  4187d5:	(bad)  
  4187d7:	lods   eax,DWORD PTR ds:[esi]
  4187d8:	jbe    0x418822
  4187da:	ins    DWORD PTR es:[edi],dx
  4187db:	mov    edx,0x2d91534b
  4187e0:	gs mov ebx,0x90cb4ad7
  4187e6:	cmc    
  4187e7:	dec    edx
  4187e8:	inc    esp
  4187e9:	mov    bl,0x2e
  4187eb:	push   eax
  4187ec:	aaa    
  4187ed:	mov    bl,0x54
  4187ef:	jle    0x4187a0
  4187f1:	adc    eax,0x92eed41c
  4187f6:	ror    BYTE PTR [ebp-0x5],cl
  4187f9:	icebp  
  4187fa:	stos   BYTE PTR es:[edi],al
  4187fb:	jmp    0xd72c2d2f
  418800:	aam    0x8f
  418802:	int    0xbf
  418804:	imul   esp,DWORD PTR [edx+0x34],0x50
  418808:	add    dh,al
  41880a:	mov    ds:0xcdc77248,al
  41880f:	hlt    
  418810:	daa    
  418811:	loopne 0x4187c4
  418813:	scas   al,BYTE PTR es:[edi]
  418814:	popa   
  418815:	fbld   TBYTE PTR [edi+edi*8+0x30]
  418819:	call   DWORD PTR [eax]
  41881b:	loop   0x4187a6
  41881d:	mov    dl,0x47
  41881f:	adc    al,ch
  418821:	cld    
  418822:	repnz es adc dh,ah
  418826:	loopne 0x41886a
  418828:	jnp    0x4187be
  41882a:	popa   
  41882b:	cmc    
  41882c:	adc    dh,BYTE PTR [eax+0x39]
  41882f:	sar    edi,1
  418831:	fs mov bl,0x7b
  418834:	mov    ebp,0x663819e1
  418839:	mov    edi,0x76edf295
  41883e:	pusha  
  41883f:	icebp  
  418840:	nop
  418841:	push   esi
  418842:	stc    
  418843:	push   edi
  418844:	daa    
  418845:	jno    0x418807
  418847:	in     al,dx
  418848:	push   ebp
  418849:	cmp    eax,0x6b27027d
  41884e:	push   es
  41884f:	push   ebx
  418850:	fwait
  418851:	pop    es
  418852:	xor    bl,dl
  418854:	sbb    ah,BYTE PTR [ebx-0x5bf5936c]
  41885a:	ss sub eax,0xd3263cb8
  418860:	dec    ebp
  418861:	xlat   BYTE PTR ds:[ebx]
  418862:	ds sbb al,bl
  418865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418866:	cs ret 
  418868:	pushf  
  418869:	or     edi,esi
  41886b:	jnp    0x418806
  41886d:	retf   
  41886e:	adc    al,0xae
  418870:	push   edi
  418871:	ins    DWORD PTR es:[edi],dx
  418872:	aaa    
  418873:	adc    eax,0xf53345f0
  418878:	nop
  418879:	jb     0x4188d3
  41887b:	call   0x5d8dd960
  418880:	push   ds
  418881:	sub    DWORD PTR ds:0x4f8085a8,edi
  418887:	jae    0x4188a7
  418889:	mov    edi,ebp
  41888b:	adc    eax,0xc3969301
  418890:	xlat   BYTE PTR ds:[ebx]
  418891:	repz mov al,ds:0x503110a3
  418897:	lea    esp,[ebp+0x62ec0182]
  41889d:	mov    ebx,0xe6821b0a
  4188a2:	jle    0x418848
  4188a4:	push   ecx
  4188a5:	jne    0x41882d
  4188a7:	add    BYTE PTR [eax+0x2d],bl
  4188aa:	ss xchg edx,eax
  4188ac:	sbb    al,0xbc
  4188ae:	nop
  4188af:	aad    0x34
  4188b1:	call   0xcfd972e0
  4188b6:	pop    es
  4188b7:	ins    BYTE PTR es:[edi],dx
  4188b8:	xor    bl,BYTE PTR [eax]
  4188ba:	push   0x7a
  4188bc:	inc    eax
  4188be:	adc    eax,DWORD PTR [edx+0x593c442a]
  4188c4:	push   esp
  4188c5:	dec    DWORD PTR [edi-0x28ae367]
  4188cb:	jge    0x418854
  4188cd:	inc    ebx
  4188ce:	lds    edx,FWORD PTR [eax+0x330dfcff]
  4188d4:	mov    eax,0x144635e3
  4188d9:	xor    DWORD PTR [edx+0x7c],edx
  4188dc:	bound  eax,QWORD PTR ds:0xaf445a2d
  4188e2:	ucomiss xmm6,DWORD PTR [edi]
  4188e5:	(bad)  
  4188e6:	sbb    BYTE PTR [esi+0x29dca4b2],bl
  4188ec:	mov    ds:0x80266e33,al
  4188f1:	fstp   DWORD PTR [eax-0x349b1a20]
  4188f7:	jp     0x41888d
  4188f9:	cwde   
  4188fa:	cwde   
  4188fb:	ja     0x418890
  4188fd:	xor    BYTE PTR [eax-0x1e],ch
  418900:	outs   dx,DWORD PTR ds:[esi]
  418901:	push   ecx
  418902:	sbb    eax,0x6f88588f
  418907:	(bad)  
  418908:	ins    BYTE PTR es:[edi],dx
  418909:	sbb    BYTE PTR [ebx-0x133f5111],dh
  41890f:	pushf  
  418910:	ja     0x4188d7
  418912:	add    dl,dl
  418914:	or     ah,BYTE PTR [edx+0x20]
  418917:	and    ch,BYTE PTR [ecx+0x29]
  41891a:	mov    cl,al
  41891c:	mov    WORD PTR [ebp-0x6484cbc8],fs
  418922:	or     eax,edx
  418924:	ror    DWORD PTR [esi+0x4e],cl
  418927:	xor    eax,0x4941ea67
  41892c:	scas   eax,DWORD PTR es:[edi]
  41892d:	mov    ebx,DWORD PTR [eax+0x636ffe88]
  418933:	jnp    0x41890d
  418935:	stos   BYTE PTR es:[edi],al
  418936:	xor    cl,BYTE PTR [ebx]
  418938:	jns    0x418948
  41893a:	mov    ebp,0xea297731
  41893f:	jns    0x4189ac
  418941:	xlat   BYTE PTR ds:[ebx]
  418942:	sbb    eax,0xf0c16c6
  418947:	loope  0x41891d
  418949:	sbb    BYTE PTR [ebx-0x4343d9ac],bh
  41894f:	inc    edi
  418950:	out    0x77,eax
  418952:	add    al,0xaa
  418954:	cmp    eax,0xf09cad14
  418959:	xchg   edi,eax
  41895a:	mov    ds:0x4b33be3e,eax
  41895f:	add    BYTE PTR [ecx+ebp*8+0x0],bh
  418963:	sub    cl,ah
  418965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418966:	jns    0x41896b
  418968:	xor    BYTE PTR [eax],0xb0
  41896b:	add    eax,0xaa4f97fd
  418970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418971:	das    
  418972:	pop    ecx
  418973:	aaa    
  418974:	imul   ebx,DWORD PTR [ebp-0x46e01b1d],0x42
  41897b:	xchg   ebx,eax
  41897c:	test   DWORD PTR [ebp+0x18],edi
  41897f:	retf   0x7426
  418982:	cdq    
  418983:	xor    esi,DWORD PTR [eax]
  418985:	push   eax
  418986:	clc    
  418987:	push   eax
  418988:	in     eax,dx
  418989:	sub    DWORD PTR [ecx+eax*2],esp
  41898c:	in     eax,0xbc
  41898e:	adc    ebx,esi
  418990:	enter  0xe5bd,0xd9
  418994:	pushf  
  418995:	inc    ebx
  418996:	inc    ebx
  418997:	sub    BYTE PTR [esi],dh
  418999:	xchg   esp,eax
  41899a:	out    dx,al
  41899b:	mov    esi,DWORD PTR [edx+0x4f5dd585]
  4189a1:	mov    eax,ebx
  4189a3:	inc    ecx
  4189a4:	outs   dx,BYTE PTR ds:[esi]
  4189a5:	xchg   edi,eax
  4189a6:	sub    DWORD PTR [ebx+ebp*1],edx
  4189a9:	scas   eax,DWORD PTR es:[edi]
  4189aa:	mov    al,0xa3
  4189ac:	inc    ebx
  4189ad:	and    BYTE PTR [esi],0xb
  4189b0:	sar    edx,0x3d
  4189b3:	inc    ebx
  4189b4:	loopne 0x418995
  4189b6:	in     eax,dx
  4189b7:	arpl   sp,dx
  4189b9:	fcmovne st,st(7)
  4189bb:	jb     0x418a22
  4189bd:	stos   BYTE PTR es:[edi],al
  4189be:	stos   DWORD PTR es:[edi],eax
  4189bf:	cli    
  4189c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189c1:	cmc    
  4189c2:	scas   al,BYTE PTR es:[edi]
  4189c3:	dec    esi
  4189c4:	xchg   esp,eax
  4189c5:	pop    esi
  4189c6:	lds    ebx,FWORD PTR [ebx-0x3273794b]
  4189cc:	fcom   DWORD PTR [eax-0x9eced64]
  4189d2:	pop    ss
  4189d3:	pop    esp
  4189d4:	int    0xfc
  4189d6:	cs mov dh,0xf
  4189d9:	jg     0x418964
  4189db:	pop    eax
  4189dc:	add    DWORD PTR [bx+0x304e],ebp
  4189e1:	out    0x67,al
  4189e3:	pop    ds
  4189e4:	int    0xea
  4189e6:	(bad)  
  4189e7:	sbb    al,0x43
  4189e9:	or     ecx,esi
  4189eb:	ror    DWORD PTR [eax],1
  4189ed:	shl    ecx,1
  4189ef:	mov    dh,0x98
  4189f1:	or     al,BYTE PTR [ecx-0x726510de]
  4189f7:	fmulp  st(6),st
  4189f9:	lock jno 0x418a43
  4189fc:	bnd call 0xfe929c35
  418a02:	push   cs
  418a03:	ds (bad) 
  418a05:	jl     0x418a5f
  418a07:	sub    BYTE PTR [ecx],dl
  418a09:	mov    eax,0x9812107f
  418a0e:	fstp   DWORD PTR [ebx]
  418a10:	pop    eax
  418a11:	adc    esp,DWORD PTR [edi+0x5469340f]
  418a17:	mov    bl,0xbf
  418a19:	out    dx,al
  418a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1b:	mov    dl,0xb9
  418a1d:	mov    ?,WORD PTR [edi+0x3e246f06]
  418a23:	std    
  418a24:	push   ebp
  418a25:	inc    ebp
  418a26:	jbe    0x418a35
  418a28:	push   0xffffffa3
  418a2a:	test   eax,esp
  418a2c:	sub    edx,DWORD PTR [ecx-0xb]
  418a2f:	pop    eax
  418a30:	and    dh,BYTE PTR [ecx]
  418a32:	aaa    
  418a33:	mov    eax,0xf93828de
  418a38:	outs   dx,DWORD PTR ds:[esi]
  418a39:	(bad)  
  418a3a:	dec    edx
  418a3b:	fidiv  WORD PTR [ebx+ebp*2+0x7a1e70a6]
  418a42:	pop    edx
  418a43:	imul   ebx,DWORD PTR ds:0xb6e89eca,0xd0dce125
  418a4d:	dec    ebp
  418a4e:	jmp    0x94a8:0xce010a4e
  418a55:	scas   al,BYTE PTR es:[edi]
  418a56:	adc    edi,DWORD PTR [ebx-0xc]
  418a59:	mov    eax,ds:0x9251ac51
  418a5e:	jmp    0x418a99
  418a60:	mov    edi,0x8558cfaf
  418a65:	ss push eax
  418a67:	sub    ebx,DWORD PTR [ebx+0x2f]
  418a6a:	jmp    0x390f6338
  418a6f:	inc    esp
  418a70:	inc    esp
  418a71:	xor    BYTE PTR [ebp+0x131c12e0],dh
  418a77:	fstp   QWORD PTR [edx+0x6ea02ee5]
  418a7d:	push   eax
  418a7e:	cs je  0x418a95
  418a81:	test   BYTE PTR [eax-0x14],al
  418a84:	fcmovbe st,st(6)
  418a86:	push   eax
  418a87:	xor    eax,0x8a775e2a
  418a8c:	xlat   BYTE PTR ds:[ebx]
  418a8d:	mov    ah,0xf6
  418a8f:	or     DWORD PTR [esi],0xfffffff0
  418a92:	or     ecx,esi
  418a94:	xlat   BYTE PTR ds:[ebx]
  418a95:	mov    al,ds:0x32de8296
  418a9a:	and    al,0x8a
  418a9d:	dec    edi
  418a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a9f:	dec    ecx
  418aa0:	outs   dx,BYTE PTR ds:[esi]
  418aa1:	jge    0x418ae0
  418aa3:	mov    ebp,0x77928c30
  418aa8:	(bad)  
  418aa9:	sub    eax,0xce249afb
  418aae:	sub    DWORD PTR [esi-0x1ec1391a],edi
  418ab4:	xor    dh,cl
  418ab6:	mov    DWORD PTR ds:0x81c58287,0xa195f78e
  418ac0:	xor    eax,0x8c4abec1
  418ac6:	mov    edi,0x5b7e9849
  418acb:	jbe    0x418b0e
  418acd:	cmp    DWORD PTR [edi],eax
  418acf:	xchg   DWORD PTR [ebx+ebp*8-0x3e],ebp
  418ad3:	gs jle 0x418b1e
  418ad6:	cmp    bh,ch
  418ad8:	mov    esi,0xb42076fd
  418add:	ds jb  0x418a63
  418ae0:	aad    0x94
  418ae2:	push   ss
  418ae3:	pushf  
  418ae4:	inc    ebp
  418ae5:	iret   
  418ae6:	into   
  418ae7:	mov    ah,0x5d
  418ae9:	sbb    ebp,DWORD PTR [ebx-0x4acdea68]
  418aef:	mov    ds:0xdf9e657f,eax
  418af4:	pop    ss
  418af5:	pop    bx
  418af7:	push   ss
  418af8:	lock addr16 addr16 jg 0x418b69
  418afd:	repz and BYTE PTR [edx-0x73c707fb],bh
  418b04:	push   eax
  418b05:	ret    
  418b06:	clc    
  418b07:	push   ebp
  418b08:	push   0x23
  418b0a:	(bad)  
  418b0b:	mov    edx,0xd330e91e
  418b10:	mov    ?,WORD PTR [esi+0x5e6d9dbd]
  418b16:	call   0x12aa:0xf297004c
  418b1d:	(bad)  
  418b1e:	imul   ebp,DWORD PTR [eax-0x3],0xc04fcfe2
  418b25:	add    edx,DWORD PTR [ecx-0x5aa96226]
  418b2b:	out    0x12,eax
  418b2d:	mov    cl,0x61
  418b2f:	ja     0x418ba6
  418b31:	test   BYTE PTR [esi-0x5b],dl
  418b34:	mov    ah,0x2
  418b36:	in     eax,0x3b
  418b38:	fsubr  QWORD PTR [eax+0x6f18d904]
  418b3e:	retf   0x9380
  418b41:	test   DWORD PTR [ecx+ecx*4-0x19],ebx
  418b45:	mov    BYTE PTR es:[ebx],0x6a
  418b49:	in     eax,0xb0
  418b4b:	ins    BYTE PTR es:[edi],dx
  418b4c:	sbb    BYTE PTR [edx],cl
  418b4e:	xchg   esi,eax
  418b4f:	add    ebp,DWORD PTR [edi-0x3b401cb7]
  418b55:	(bad)  
  418b56:	and    eax,0xef14ee75
  418b5b:	cmp    esp,DWORD PTR [edx]
  418b5d:	retf   
  418b5e:	lods   al,BYTE PTR ds:[esi]
  418b5f:	push   edx
  418b60:	jge    0x418b87
  418b62:	or     BYTE PTR [esi],0x35
  418b65:	icebp  
  418b66:	retf   
  418b67:	xlat   BYTE PTR ds:[ebx]
  418b68:	stos   DWORD PTR es:[edi],eax
  418b69:	and    eax,0xf4c85809
  418b6e:	pop    edi
  418b6f:	mov    dl,BYTE PTR [eax]
  418b71:	out    0xc9,al
  418b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b74:	xor    dh,BYTE PTR [ecx-0x50c39042]
  418b7a:	sub    eax,esi
  418b7c:	sbb    al,al
  418b7e:	retf   
  418b7f:	mov    eax,ds:0x5584679
  418b84:	(bad)
  418b87:	shl    DWORD PTR [edi-0x76a331b8],1
  418b8d:	dec    eax
  418b8e:	push   ss
  418b8f:	shl    DWORD PTR [edi-0x69],1
  418b92:	dec    ebp
  418b93:	or     eax,0x6e0fdb35
  418b98:	test   eax,0x3e2f7d1
  418b9d:	leave  
  418b9e:	repnz ror bl,cl
  418ba1:	mov    ds:0x743e0227,eax
  418ba6:	xchg   ecx,eax
  418ba7:	xor    eax,0x25a248f8
  418bac:	lock sub ch,BYTE PTR [ebx-0x34]
  418bb0:	mov    al,0x5d
  418bb2:	jae    0x418b4b
  418bb4:	into   
  418bb5:	push   esi
  418bb6:	out    0x8e,al
  418bb8:	and    al,0x14
  418bba:	inc    esp
  418bbb:	and    DWORD PTR [esi+0x0],edx
  418bbe:	mov    ds:0x72e46927,al
  418bc3:	lods   al,BYTE PTR ds:[esi]
  418bc4:	cmp    BYTE PTR [esi],0x44
  418bc7:	addr16 mov ds:0x642a,eax
  418bcb:	jne    0x418c14
  418bcd:	or     esi,0xba5229b0
  418bd3:	lods   al,BYTE PTR ds:[esi]
  418bd4:	jo     0x418bb0
  418bd6:	inc    esp
  418bd7:	push   ecx
  418bd8:	hlt    
  418bd9:	jo     0x418b6a
  418bdb:	ins    BYTE PTR es:[edi],dx
  418bdc:	mov    cl,0x60
  418bde:	cmc    
  418bdf:	out    0x9b,eax
  418be1:	mov    eax,0xcaf52f25
  418be6:	xchg   ebp,ecx
  418be8:	retf   
  418be9:	mov    ecx,0x86286955
  418bee:	adc    eax,0x2585309a
  418bf3:	fistp  WORD PTR [ebx-0x6f]
  418bf6:	mov    al,BYTE PTR [eax-0x10ddeff6]
  418bfc:	outs   dx,DWORD PTR ds:[esi]
  418bfd:	jbe    0x418c3d
  418bff:	mov    bh,0x77
  418c01:	push   es
  418c02:	aas    
  418c03:	mov    dh,0x24
  418c05:	stc    
  418c06:	xchg   BYTE PTR ds:0xa04909da,ch
  418c0c:	sub    bh,dl
  418c0e:	in     al,dx
  418c0f:	push   eax
  418c10:	fnstsw WORD PTR [ebx-0x31]
  418c13:	mov    ds:0xe705b6da,al
  418c18:	pop    es
  418c19:	or     al,0x5
  418c1b:	call   0x1e9a:0x211e1317
  418c22:	dec    ebp
  418c23:	dec    esp
  418c24:	into   
  418c25:	push   ebp
  418c26:	push   ecx
  418c27:	dec    esp
  418c28:	fsubr  DWORD PTR [edx]
  418c2a:	xor    BYTE PTR [ebx-0x7c],cl
  418c2d:	aas    
  418c2e:	sbb    BYTE PTR [eax+0x5d],cl
  418c31:	retf   
  418c32:	and    eax,0xd1ade6d4
  418c37:	adc    esi,DWORD PTR [ebx-0x2331f48d]
  418c3d:	jbe    0x418c6e
  418c3f:	std    
  418c40:	retf   
  418c41:	xor    dh,BYTE PTR [edx]
  418c43:	mov    esp,0xee17feea
  418c48:	and    BYTE PTR [ecx],ah
  418c4a:	pop    es
  418c4b:	xor    BYTE PTR [edi+edx*2+0x65ac4edd],al
  418c52:	fcmovnb st,st(7)
  418c54:	inc    esi
  418c55:	repnz (bad) 
  418c57:	and    eax,0xd32b8d77
  418c5c:	xchg   ebx,eax
  418c5d:	mov    ?,ebx
  418c5f:	pop    ss
  418c60:	jge    0x418bf4
  418c62:	cmc    
  418c63:	shr    DWORD PTR [ebp+0x225d8565],cl
  418c69:	imul   esi,DWORD PTR [edi],0xfffffff0
  418c6c:	mov    bh,0x6e
  418c6e:	pop    esp
  418c6f:	mov    esp,0xa3ba927a
  418c74:	(bad)  
  418c75:	mov    cl,0x90
  418c77:	pushf  
  418c78:	pop    es
  418c79:	mov    ch,0xd7
  418c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c7c:	jl     0x418c2e
  418c7e:	enter  0x22c2,0x7e
  418c82:	into   
  418c83:	mov    esi,0xaf751be6
  418c88:	inc    esp
  418c89:	fidivr DWORD PTR [ebx+0x4291b0db]
  418c8f:	pop    edx
  418c90:	mov    esi,0x9f2ae109
  418c95:	inc    esp
  418c96:	imul   esi,DWORD PTR [esi+0x54],0xbc4cb893
  418c9d:	fiadd  DWORD PTR [edi]
  418c9f:	dec    edx
  418ca0:	add    eax,DWORD PTR [ebx]
  418ca2:	xchg   edx,eax
  418ca3:	and    ecx,DWORD PTR [eax-0x2fa7ef7f]
  418ca9:	inc    sp
  418cab:	mov    ebx,0x29d349e3
  418cb0:	cmc    
  418cb1:	leave  
  418cb2:	pop    esp
  418cb3:	sub    eax,0x8f33ab91
  418cb8:	dec    DWORD PTR [ecx+0x5e]
  418cbb:	dec    ebx
  418cbc:	xchg   esi,eax
  418cbd:	and    ah,bl
  418cbf:	hlt    
  418cc0:	data16 jecxz 0x418cc9
  418cc3:	mov    ds:0xd4c050a7,al
  418cc8:	stc    
  418cc9:	test   DWORD PTR [ebp-0x525101e0],ecx
  418ccf:	and    al,0x46
  418cd1:	dec    ecx
  418cd2:	cmp    al,0x9a
  418cd4:	or     al,0x55
  418cd6:	je     0x418d1b
  418cd8:	pop    ebx
  418cd9:	inc    edi
  418cda:	jg     0x418d01
  418cdc:	sub    DWORD PTR [edi+0x45],edi
  418cdf:	fxch   st(6)
  418ce1:	rcr    DWORD PTR [ebp-0x42b22685],cl
  418ce7:	jmp    0x418d02
  418ce9:	into   
  418cea:	ss std 
  418cec:	dec    bh
  418cee:	pushfw 
  418cf0:	or     BYTE PTR [ebx],dh
  418cf2:	dec    edx
  418cf3:	push   ebp
  418cf4:	xchg   DWORD PTR [eax+ebp*4+0x1c3a125a],edi
  418cfb:	outs   dx,BYTE PTR ds:[esi]
  418cfc:	mov    ebp,0xcf862ce0
  418d01:	retfw  
  418d03:	(bad)  
  418d04:	hlt    
  418d05:	mov    bh,0x93
  418d07:	ret    0x44c3
  418d0a:	leave  
  418d0b:	std    
  418d0c:	lahf   
  418d0d:	mov    eax,0x8e5fd770
  418d12:	dec    edi
  418d13:	mov    edi,0x53b33628
  418d18:	cmp    DWORD PTR [edi],0x3a
  418d1b:	pop    ds
  418d1c:	push   eax
  418d1d:	ret    
  418d1e:	aam    0x80
  418d20:	js     0x418d29
  418d22:	fcomp  QWORD PTR [esi+0x45]
  418d25:	jae    0x418d21
  418d27:	jne    0x418d5b
  418d29:	pushf  
  418d2a:	call   eax
  418d2c:	mov    DWORD PTR [ecx-0x7],eax
  418d2f:	sbb    BYTE PTR [ebp+0x643a4f2f],cl
  418d35:	jnp    0x418cdd
  418d37:	xor    DWORD PTR [eax+0x15],ebp
  418d3a:	pusha  
  418d3b:	mov    eax,ds:0x87cdcb5
  418d40:	mov    cl,0x92
  418d42:	cmp    BYTE PTR [edx+edi*4],ch
  418d45:	mov    cs,WORD PTR [ecx+ebp*2]
  418d48:	mov    ah,0xcf
  418d4a:	test   eax,0x143f7e54
  418d4f:	pop    ebp
  418d50:	xchg   edx,eax
  418d51:	xor    DWORD PTR [edi-0x3d0f046e],edi
  418d57:	ret    
  418d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d59:	fnstcw WORD PTR ds:0x5c1f31a1
  418d5f:	pop    es
  418d60:	dec    edi
  418d61:	mov    ch,0x7
  418d63:	in     al,0xf0
  418d65:	sbb    ah,ah
  418d67:	pop    ds
  418d68:	cdq    
  418d69:	jg     0x418d8b
  418d6b:	fcmovb st,st(4)
  418d6d:	cld    
  418d6e:	push   0x4ab79e5f
  418d73:	xchg   ebx,eax
  418d74:	xchg   BYTE PTR [edx+ebx*4-0x21],ch
  418d78:	stos   DWORD PTR es:[edi],eax
  418d79:	add    esi,DWORD PTR [esi]
  418d7b:	stos   BYTE PTR es:[edi],al
  418d7c:	test   eax,0x6e767f54
  418d81:	bound  ecx,QWORD PTR [ebx-0x4a910672]
  418d87:	inc    dx
  418d89:	repnz not BYTE PTR [esi+ebx*1]
  418d8d:	int    0xcd
  418d8f:	mov    cs,WORD PTR [ebp+0x51905422]
  418d95:	cmp    BYTE PTR [ebx],bl
  418d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d98:	outs   dx,DWORD PTR ds:[esi]
  418d99:	xchg   ecx,eax
  418d9a:	push   es
  418d9b:	int    0xc1
  418d9d:	and    BYTE PTR [edx],al
  418d9f:	pop    ebp
  418da0:	sub    BYTE PTR [edx+0x30ae9a61],bl
  418da6:	sbb    eax,0x25d02a5a
  418dab:	dec    edx
  418dac:	and    eax,0x1b41053b
  418db1:	clc    
  418db2:	mov    ds:0xd94ecdd1,eax
  418db7:	jbe    0x418e2b
  418db9:	enter  0xb5f6,0x70
  418dbd:	out    0x81,al
  418dbf:	or     al,0x8c
  418dc1:	leave  
  418dc2:	aas    
  418dc3:	sbb    DWORD PTR [ecx-0x60024282],edi
  418dc9:	and    al,BYTE PTR [edx+0x641941e9]
  418dcf:	pop    ebx
  418dd0:	scas   al,BYTE PTR es:[edi]
  418dd1:	call   0xcb19:0xd4ac8f3d
  418dd8:	inc    esi
  418dd9:	cmp    BYTE PTR [ebp-0x67],bl
  418ddc:	xchg   cl,bh
  418dde:	fs dec ecx
  418de0:	mov    bh,0x16
  418de2:	or     eax,0xbe7cced3
  418de7:	bound  edi,QWORD PTR gs:0x8fbff4b
  418dee:	test   BYTE PTR [edx],bh
  418df0:	sbb    bh,dl
  418df2:	xchg   esp,eax
  418df3:	xlat   BYTE PTR ds:[ebx]
  418df4:	in     al,dx
  418df5:	jge    0x418df1
  418df7:	pop    eax
  418df8:	inc    esi
  418df9:	cdq    
  418dfa:	jp     0x418d91
  418dfc:	popa   
  418dfd:	aad    0xf4
  418dff:	jne    0x418dc1
  418e01:	fisttp DWORD PTR [ebx]
  418e03:	das    
  418e04:	out    0x45,al
  418e06:	call   0xb9ad:0x4dd9748b
  418e0d:	xchg   ebp,eax
  418e0e:	jl     0x418e49
  418e10:	jl     0x418dc2
  418e12:	adc    al,0x7a
  418e14:	pushf  
  418e15:	sbb    eax,0xe8906d4e
  418e1a:	sbb    dl,BYTE PTR [esi+0x3f]
  418e1d:	sub    bl,BYTE PTR ds:0xf840044c
  418e23:	mov    bh,0x1a
  418e25:	inc    edi
  418e26:	pop    eax
  418e27:	and    DWORD PTR [edx+0x11],eax
  418e2a:	lods   eax,DWORD PTR ds:[esi]
  418e2b:	ror    DWORD PTR [ebx],1
  418e2d:	aaa    
  418e2e:	outs   dx,DWORD PTR ds:[esi]
  418e2f:	xor    esi,DWORD PTR [ecx+0x23]
  418e32:	adc    eax,DWORD PTR [esi]
  418e34:	(bad)  
  418e35:	call   0x8b4e933d
  418e3a:	mov    ds,WORD PTR [ecx+ebp*2]
  418e3d:	stos   BYTE PTR es:[edi],al
  418e3e:	inc    ecx
  418e3f:	lods   al,BYTE PTR ds:[esi]
  418e40:	fisttp DWORD PTR [ecx]
  418e42:	mov    dl,0xa5
  418e44:	stc    
  418e45:	xchg   esp,eax
  418e46:	pop    es
  418e47:	mov    WORD PTR [edx-0x17a133c4],cs
  418e4d:	xchg   esi,eax
  418e4e:	cmc    
  418e4f:	(bad)  
  418e50:	loop   0x418e17
  418e52:	int    0xd3
  418e54:	sbb    BYTE PTR [esi-0x13],al
  418e57:	test   BYTE PTR [edi+edx*4],0x1a
  418e5b:	cli    
  418e5c:	popa   
  418e5d:	cmp    al,0x59
  418e5f:	jmp    0xfa2f:0xb4870510
  418e66:	std    
  418e67:	inc    eax
  418e68:	mov    edx,0xb14a5b01
  418e6d:	in     eax,0x1b
  418e6f:	push   cs
  418e70:	add    esp,edi
  418e72:	outs   dx,BYTE PTR ds:[esi]
  418e73:	mov    ds:0x48f01a05,al
  418e78:	rcl    esi,cl
  418e7a:	(bad)  
  418e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e7c:	ficom  WORD PTR [ecx-0x65]
  418e7f:	sub    al,0xc8
  418e81:	fucom  st(0)
  418e83:	je     0x418ee3
  418e85:	mov    esp,0x467b4c1e
  418e8a:	jns    0x418e90
  418e8c:	cmc    
  418e8d:	out    0x6c,al
  418e8f:	les    ebp,FWORD PTR [esi-0x1b]
  418e92:	xchg   esi,eax
  418e93:	enter  0x5837,0xf0
  418e97:	pop    ss
  418e98:	mov    dl,0x2c
  418e9a:	sbb    DWORD PTR [ecx+0x6c],ecx
  418e9d:	out    dx,eax
  418e9e:	adc    DWORD PTR [edx],esp
  418ea0:	add    eax,0x5c5d225b
  418ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea6:	lea    ebx,[ecx+0x449bfb3]
  418eac:	mov    cl,0xc9
  418eae:	push   esi
  418eaf:	xor    bh,BYTE PTR [ecx]
  418eb1:	or     BYTE PTR [ebx-0x6d49f303],bl
  418eb7:	and    ebx,DWORD PTR [edi]
  418eb9:	push   0xffffff92
  418ebb:	and    eax,0x9dd23bec
  418ec0:	dec    esi
  418ec1:	es add eax,0x5ee4a050
  418ec7:	arpl   bp,bp
  418ec9:	dec    eax
  418eca:	(bad)  
  418ecb:	sahf   
  418ecc:	and    al,ah
  418ece:	sbb    eax,0x5e569709
  418ed4:	add    eax,0x4951050e
  418ed9:	pop    edx
  418eda:	inc    edx
  418edb:	aam    0x5
  418edd:	sub    eax,0x7fa2bc6
  418ee2:	out    0x55,al
  418ee4:	jl     0x418f53
  418ee6:	out    dx,al
  418ee7:	div    DWORD PTR [ebx+0x6]
  418eea:	pushf  
  418eeb:	jge    0x418ebd
  418eed:	xchg   ebp,eax
  418eee:	nop
  418eef:	jecxz  0x418f60
  418ef1:	scas   eax,DWORD PTR es:[edi]
  418ef2:	cli    
  418ef3:	mov    ds:0xc23c88a1,al
  418ef8:	and    eax,0x1dc3e594
  418efd:	pop    ebx
  418efe:	jp     0x418f59
  418f00:	scas   al,BYTE PTR es:[edi]
  418f01:	ret    
  418f02:	sbb    BYTE PTR [esi+esi*2],bh
  418f05:	and    DWORD PTR [eax+eiz*1+0x76a8af0f],edi
  418f0c:	lods   al,BYTE PTR ds:[esi]
  418f0d:	in     eax,0xf1
  418f0f:	and    DWORD PTR [esi],ecx
  418f11:	push   ebp
  418f12:	xchg   DWORD PTR [edi],esi
  418f14:	aaa    
  418f15:	fbstp  TBYTE PTR [esi]
  418f17:	nop
  418f18:	xchg   DWORD PTR ds:0x513c6709,edi
  418f1e:	dec    edi
  418f1f:	dec    edx
  418f20:	dec    esi
  418f21:	or     dh,BYTE PTR gs:[ebx-0x39dc5e55]
  418f28:	push   ds
  418f29:	enter  0x9f9e,0x10
  418f2d:	cmp    BYTE PTR [ebx],dl
  418f2f:	loope  0x418f1b
  418f31:	addr16 pop ss
  418f33:	cmp    al,BYTE PTR [esi-0x79]
  418f36:	inc    edi
  418f37:	pusha  
  418f38:	jmp    0xf44a9c7e
  418f3d:	inc    ebp
  418f3e:	sub    bl,BYTE PTR [edi+0x27a51fcd]
  418f44:	sub    DWORD PTR [edi],ecx
  418f46:	loopne 0x418f8d
  418f48:	sti    
  418f49:	fs out 0xed,eax
  418f4c:	retf   0x2191
  418f4f:	jne    0x418f52
  418f51:	les    edx,FWORD PTR [esi+eiz*2+0x18d2e0a1]
  418f58:	imul   edx,DWORD PTR [edx-0x4f7415ec],0xc055610c
  418f62:	into   
  418f63:	out    dx,al
  418f64:	ins    DWORD PTR es:[edi],dx
  418f65:	cmp    DWORD PTR [esi+0x58a1bdb2],eax
  418f6b:	scas   al,BYTE PTR es:[edi]
  418f6c:	ret    
  418f6d:	xchg   dh,bl
  418f6f:	jno    0x418f97
  418f71:	pusha  
  418f72:	scas   eax,DWORD PTR es:[edi]
  418f73:	enter  0x3257,0xc2
  418f77:	call   0x2854:0x3d017086
  418f7e:	jl     0x418f64
  418f80:	dec    edx
  418f81:	popa   
  418f82:	dec    eax
  418f83:	mul    BYTE PTR [edx]
  418f85:	jge    0x418ffe
  418f87:	jbe    0x418f64
  418f89:	push   0xffffffe5
  418f8b:	mov    BYTE PTR [esi+0x2b4d9066],dh
  418f91:	mov    esi,0x9d452388
  418f96:	retf   
  418f97:	mov    ebp,0x564e0ea6
  418f9c:	jne    0x418f34
  418f9e:	jb     0x418fed
  418fa0:	pushf  
  418fa1:	aam    0xde
  418fa3:	scas   al,BYTE PTR es:[edi]
  418fa4:	inc    edi
  418fa5:	cdq    
  418fa6:	or     esp,DWORD PTR [ecx+0xd410489]
  418fac:	mov    esp,0x22ac22cd
  418fb1:	sbb    edi,DWORD PTR [edi+0x5c]
  418fb4:	push   ebx
  418fb5:	fcmovb st,st(0)
  418fb7:	push   0xfffffffd
  418fb9:	scas   al,BYTE PTR es:[edi]
  418fba:	and    DWORD PTR [esi+0x68],edi
  418fbd:	and    edi,DWORD PTR [ebp+0x643f05ff]
  418fc3:	cmp    al,0x54
  418fc5:	in     eax,0x70
  418fc7:	mov    BYTE PTR [ebp+0x48caf527],al
  418fcd:	in     al,dx
  418fce:	div    DWORD PTR [edx]
  418fd0:	daa    
  418fd1:	dec    edx
  418fd2:	loop   0x418f64
  418fd4:	mov    DWORD PTR [ecx+0x557dffa9],esp
  418fda:	enter  0xb5a2,0x9
  418fde:	mov    eax,ds:0x75ea63bf
  418fe3:	or     al,0xec
  418fe5:	fdivr  QWORD PTR [eax+edi*1-0x798fa374]
  418fec:	pop    esi
  418fed:	icebp  
  418fee:	adc    BYTE PTR [edx+eax*8-0x33884a5e],dl
  418ff5:	fbld   TBYTE PTR [ecx+0x7]
  418ff8:	pop    edx
  418ff9:	push   es
  418ffa:	cmp    BYTE PTR [eax+0x5a],al
  418ffd:	or     BYTE PTR [eax-0x79],0xed
  419001:	or     BYTE PTR [ecx+0xd9dbe68],dl
  419007:	mov    cl,al
  419009:	aad    0xe2
  41900b:	mov    ebp,0x1481b040
  419010:	(bad)  
  419011:	pop    edi
  419012:	stc    
  419013:	and    eax,0x135d0eac
  419018:	out    dx,eax
  419019:	lock sub eax,DWORD PTR [ebx]
  41901c:	hlt    
  41901d:	sub    edi,edi
  41901f:	setne  dl
  419022:	mov    DWORD PTR [eax-0x19d00f],esp
  419028:	push   esi
  419029:	adc    eax,0x50d0cdea
  41902e:	enter  0xba49,0x87
  419032:	repnz shr BYTE PTR [eax-0x65],cl
  419036:	xchg   edi,eax
  419037:	dec    ebx
  419038:	xchg   BYTE PTR [ebp-0x5c],bh
  41903b:	dec    eax
  41903c:	xor    ecx,DWORD PTR gs:0x343bbb8e
  419043:	pop    ds
  419044:	mov    al,ds:0xb6aa852d
  419049:	stc    
  41904a:	xchg   edi,eax
  41904b:	je     0x41901b
  41904d:	and    eax,DWORD PTR [edi-0x366e0b92]
  419053:	cmp    bl,dh
  419055:	cmp    BYTE PTR [edi],0xf7
  419058:	cmc    
  419059:	push   ebp
  41905a:	fild   WORD PTR [bp+si-0x5310]
  41905f:	fmul   st(6),st
  419061:	sub    eax,0x9d88bab7
  419066:	add    esi,DWORD PTR [ebx]
  419068:	cmp    al,0xd
  41906a:	mov    al,0xe5
  41906c:	pop    es
  41906d:	jecxz  0x4190bd
  41906f:	rcl    BYTE PTR ds:0x3ca9ce6a,0x9f
  419076:	pop    esp
  419077:	cld    
  419078:	adc    edx,edx
  41907a:	or     BYTE PTR [edi+0x3eec81c7],bh
  419080:	test   al,0xf0
  419082:	cwde   
  419083:	lahf   
  419084:	jmp    0x6d9a65dd
  419089:	xor    eax,DWORD PTR [ebx-0x1e]
  41908c:	loopne 0x41907b
  41908e:	out    dx,al
  41908f:	loop   0x41910b
  419091:	aam    0x5a
  419093:	sbb    dh,ah
  419095:	test   eax,0x7abd654
  41909b:	sub    DWORD PTR [esp+edx*1+0x653d694a],0xd7bb419a
  4190a6:	fistp  QWORD PTR [ebx-0xfac48a1]
  4190ac:	adc    edx,edi
  4190ae:	repz leave 
  4190b0:	loop   0x419127
  4190b2:	lods   eax,DWORD PTR ds:[esi]
  4190b3:	std    
  4190b4:	daa    
  4190b5:	add    DWORD PTR [ebx],esp
  4190b7:	cmp    BYTE PTR [ebx-0x731526d9],cl
  4190bd:	fdiv   DWORD PTR [ebx-0x54]
  4190c0:	xor    BYTE PTR ds:0xacbab94f,bh
  4190c6:	xchg   esi,eax
  4190c7:	cwde   
  4190c8:	in     al,0x60
  4190ca:	pop    edi
  4190cb:	cmp    eax,0x327d877e
  4190d0:	or     BYTE PTR [edi],ch
  4190d2:	les    edx,FWORD PTR [edx+0x64e2ac64]
  4190d8:	mov    ds:0x9b23f5ff,eax
  4190dd:	pop    edi
  4190de:	lock test DWORD PTR [edx*1+0x4f21eeb5],edx
  4190e6:	pop    esp
  4190e7:	stc    
  4190e8:	mov    ch,BYTE PTR [ebp+edx*2-0x79]
  4190ec:	popa   
  4190ed:	pop    ss
  4190ee:	test   BYTE PTR [eax],ah
  4190f0:	cmp    al,0x75
  4190f2:	xlat   BYTE PTR ds:[ebx]
  4190f3:	add    eax,eax
  4190f5:	mov    WORD PTR [ebx-0x52],gs
  4190f8:	pop    ebx
  4190f9:	mov    ebp,ss
  4190fb:	rol    edx,1
  4190fd:	cmc    
  4190fe:	addr16 push esp
  419100:	in     eax,dx
  419101:	loopne 0x419127
  419103:	lahf   
  419104:	pusha  
  419105:	bound  eax,QWORD PTR [edx]
  419107:	pop    edx
  419108:	into   
  419109:	jb     0x4190bd
  41910b:	or     BYTE PTR [eiz*8-0x787795f6],dh
  419112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419113:	push   ecx
  419114:	push   ebx
  419115:	push   ebx
  419116:	leave  
  419117:	outs   dx,BYTE PTR ds:[esi]
  419118:	pusha  
  419119:	pop    es
  41911a:	mov    al,ds:0xedf4eea7
  41911f:	les    ecx,FWORD PTR [edi]
  419121:	sar    edi,cl
  419123:	mov    al,ds:0xdc95d304
  419128:	cmp    DWORD PTR [edi+eax*2+0x14],ebx
  41912c:	mov    ah,0xab
  41912e:	pop    ebp
  41912f:	mov    cl,0xa7
  419131:	cmp    al,BYTE PTR [ebx+0x6b]
  419134:	or     al,0x27
  419136:	add    eax,0xf8084539
  41913b:	adc    eax,0xda8c6418
  419140:	sar    BYTE PTR [ecx-0x1],0x23
  419144:	push   eax
  419145:	(bad)  
  419146:	mov    edx,0x13258fa8
  41914b:	int    0xd6
  41914d:	push   ebx
  41914e:	rcr    DWORD PTR [eax],0x76
  419151:	jmp    0x419135
  419153:	cdq    
  419154:	xor    DWORD PTR [eax-0xf81ff63],ecx
  41915a:	(bad)  
  41915c:	xchg   BYTE PTR [ebp-0xcda04da],cl
  419162:	call   0x67626a5
  419167:	ja     0x419172
  419169:	sar    DWORD PTR [ebx-0x15],1
  41916c:	js     0x41910c
  41916e:	test   eax,0x9cf6e39f
  419173:	jecxz  0x4191ca
  419175:	gs mov ebx,0xb65006aa
  41917b:	shl    BYTE PTR [ebx],cl
  41917d:	pop    ss
  41917e:	mov    bh,0xa8
  419180:	aam    0xa7
  419182:	in     al,0x35
  419184:	cwde   
  419185:	and    eax,0xd37a7fc3
  41918a:	test   al,0x93
  41918c:	xchg   ebp,eax
  41918d:	div    BYTE PTR [edi]
  41918f:	ja     0x41918f
  419191:	push   ds
  419192:	dec    ecx
  419193:	sar    bh,cl
  419195:	cld    
  419196:	std    
  419197:	repnz or ch,BYTE PTR [ebx]
  41919a:	das    
  41919b:	push   cs
  41919c:	addr16 jmp 0x4191e3
  41919f:	sti    
  4191a0:	push   esp
  4191a1:	loopne 0x419162
  4191a3:	(bad)  
  4191a5:	mov    ch,0x8d
  4191a7:	mov    al,ds:0x5a678c28
  4191ac:	and    BYTE PTR [esi-0x31],cl
  4191af:	fsubr  QWORD PTR ds:0x69025fd0
  4191b5:	rol    BYTE PTR [esi+edi*8],cl
  4191b8:	xchg   DWORD PTR [eax-0x76],esp
  4191bb:	js     0x4191e8
  4191bd:	sahf   
  4191be:	das    
  4191bf:	outs   dx,BYTE PTR ds:[esi]
  4191c0:	and    DWORD PTR [esi],0x33bb0fa5
  4191c6:	js     0x4191d9
  4191c8:	arpl   WORD PTR [ecx],bx
  4191ca:	or     eax,ebp
  4191cc:	cmc    
  4191cd:	mov    BYTE PTR [esi],ah
  4191cf:	and    al,bh
  4191d1:	mov    ds:0xa0b11ccd,eax
  4191d6:	out    dx,al
  4191d7:	out    0xc9,eax
  4191d9:	inc    esi
  4191da:	test   DWORD PTR [edi],edi
  4191dc:	mov    ah,0x32
  4191de:	pop    ss
  4191df:	mov    bh,bh
  4191e1:	rol    BYTE PTR [ebx-0x157414c8],1
  4191e7:	xchg   BYTE PTR [edx+0x15],bh
  4191ea:	test   DWORD PTR [ebp+0x17ef02e],ebp
  4191f0:	mov    eax,DWORD PTR [esi+0x34]
  4191f3:	push   0xffffffde
  4191f5:	mov    esp,0xc1e9dfe1
  4191fa:	fisubr WORD PTR [edi]
  4191fc:	cmp    DWORD PTR ds:0xd2fb337e,0x13
  419203:	(bad)  
  419204:	add    ebp,esp
  419206:	rcl    DWORD PTR ds:0x55c238da,1
  41920c:	int    0x24
  41920e:	sub    dh,dh
  419210:	pop    esi
  419211:	dec    esp
  419213:	and    BYTE PTR [eax+0x26a7a334],bl
  419219:	or     esp,DWORD PTR ds:0xcba5ca4
  41921f:	icebp  
  419220:	imul   ecx,DWORD PTR [edx+0x37],0x194ae426
  419227:	mov    BYTE PTR [eax-0x2e],0xd1
  41922b:	mov    DWORD PTR [ebx+0x78],ebx
  41922e:	(bad)  
  41922f:	imul   esp,DWORD PTR [edi+ebx*4],0x1a
  419233:	shl    BYTE PTR [edi+0xf58ad6b],1
  419239:	inc    edx
  41923a:	and    DWORD PTR [edi+0x2249f5a2],ebp
  419240:	lds    esi,FWORD PTR [ebp-0x6b7089f0]
  419246:	(bad)  
  419248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419249:	lds    ebp,FWORD PTR [edi]
  41924b:	into   
  41924c:	(bad)  
  41924d:	xor    bh,bh
  41924f:	and    DWORD PTR [eax],ebp
  419251:	adc    al,0x15
  419253:	or     al,0x6d
  419255:	pop    esi
  419256:	stos   DWORD PTR es:[edi],eax
  419257:	inc    ebp
  419258:	(bad)  
  419259:	jp     0x419204
  41925b:	test   eax,eax
  41925d:	fsub   st(1),st
  41925f:	dec    ebx
  419260:	sbb    BYTE PTR [ecx-0x6a736c55],bl
  419266:	sub    edx,ebp
  419268:	(bad)  
  419269:	adc    BYTE PTR [esi+ecx*8],cl
  41926c:	ror    DWORD PTR [ebp-0x4e6182be],cl
  419272:	inc    ebp
  419273:	stos   BYTE PTR es:[edi],al
  419274:	xor    eax,eax
  419276:	call   0xfbfa:0x4ee8028
  41927d:	jae    0x4192ef
  41927f:	xchg   ebx,eax
  419280:	cmp    al,0x6a
  419282:	mov    esp,esp
  419284:	mov    esi,0x392bbe9a
  419289:	(bad)  
  41928a:	lds    esp,FWORD PTR [ecx-0x5e]
  41928d:	ja     0x419277
  41928f:	xchg   ebx,eax
  419290:	mov    ebx,0x5188869a
  419295:	pop    eax
  419296:	xor    BYTE PTR [eax],cl
  419298:	adc    dl,BYTE PTR [ebp+eax*2-0x65aef2cb]
  41929f:	rcr    BYTE PTR [ecx],0x1d
  4192a2:	push   ebp
  4192a3:	dec    esp
  4192a4:	psubb  mm0,QWORD PTR [edi]
  4192a7:	fdivr  QWORD PTR [ecx-0x11e21179]
  4192ad:	or     eax,0x9a6adb11
  4192b2:	into   
  4192b3:	push   ebp
  4192b4:	cld    
  4192b5:	aas    
  4192b6:	inc    eax
  4192b7:	cmp    BYTE PTR [ebx-0x1e],dh
  4192ba:	xchg   ebx,eax
  4192bb:	mov    ah,0xf1
  4192bd:	sub    bh,dl
  4192bf:	mov    dh,0x24
  4192c1:	in     eax,dx
  4192c2:	and    al,0xa2
  4192c4:	jle    0x419307
  4192c6:	cmp    bh,bl
  4192c8:	xchg   edx,eax
  4192c9:	sbb    al,0xb1
  4192cb:	xchg   edi,eax
  4192cc:	pop    ecx
  4192cd:	aas    
  4192ce:	jecxz  0x419289
  4192d0:	pop    edx
  4192d1:	sbb    ebp,DWORD PTR [ecx+0x11]
  4192d4:	shl    DWORD PTR [edx+0x70ecb303],cl
  4192da:	fwait
  4192db:	jno    0x419305
  4192dd:	ret    0x7921
  4192e0:	pop    edi
  4192e1:	pop    ss
  4192e2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4192e4:	gs (bad) 
  4192e6:	das    
  4192e7:	jb     0x4192d7
  4192e9:	xor    ch,dh
  4192eb:	and    eax,0xd491da5c
  4192f0:	out    dx,al
  4192f1:	int    0x92
  4192f3:	cmp    eax,0xfbac527d
  4192f8:	pop    ebp
  4192f9:	in     al,dx
  4192fa:	sub    al,0x92
  4192fc:	mov    dh,0x5e
  4192fe:	mov    WORD PTR [ebx-0x58f30e1d],fs
  419304:	aam    0x72
  419306:	push   edx
  419307:	imul   ebx,DWORD PTR [esi+0x1d],0xac47f8d0
  41930e:	sub    BYTE PTR [edi+edi*4-0x69],dl
  419312:	xor    BYTE PTR [edx+0x6b],dl
  419315:	and    ebx,esi
  419317:	sbb    BYTE PTR [esi],ch
  419319:	in     eax,dx
  41931a:	ret    
  41931b:	inc    DWORD PTR [edi+edx*2]
  41931e:	sti    
  41931f:	add    DWORD PTR [ebp+0x6d5785c4],ebx
  419325:	pop    ecx
  419326:	xor    bh,BYTE PTR [edi]
  419328:	add    al,0x40
  41932a:	push   ebp
  41932b:	and    al,0xd8
  41932d:	jb     0x419391
  41932f:	das    
  419330:	aad    0x22
  419332:	push   es
  419333:	inc    ebx
  419334:	sbb    dh,BYTE PTR [ecx]
  419336:	(bad)
  419339:	sbb    edx,esi
  41933b:	sti    
  41933c:	push   edx
  41933d:	jmp    0x67d4cc27
  419342:	jp     0x41936a
  419344:	and    ebx,esp
  419346:	pop    ds
  419347:	lods   eax,DWORD PTR ds:[esi]
  419348:	in     al,0x47
  41934a:	rcl    DWORD PTR [edi+ebp*4-0x22],cl
  41934e:	mov    cl,0x72
  419350:	lds    ecx,FWORD PTR ds:0xd5e1fcb1
  419356:	les    esp,FWORD PTR ds:[esi+0x9ae3a45]
  41935d:	outs   dx,DWORD PTR ds:[esi]
  41935e:	mov    edx,0x7bc478ed
  419363:	sbb    DWORD PTR [edi-0x1b8eb4bc],esp
  419369:	xor    eax,0xe2bbfc6c
  41936e:	mov    ah,BYTE PTR [ebp+0x45523cfa]
  419374:	das    
  419375:	enter  0x76b6,0xf6
  419379:	or     eax,0xb1d09c17
  41937e:	jmp    0x12da:0xf1412dec
  419385:	jo     0x4193d0
  419387:	dec    esi
  419388:	pop    ss
  419389:	dec    ebp
  41938a:	data16 adc dl,BYTE PTR [ecx-0x612ee1ff]
  419391:	aaa    
  419392:	pop    edi
  419393:	xchg   edx,eax
  419394:	in     al,dx
  419395:	xor    esi,ebx
  419397:	loopne 0x41938f
  419399:	mov    DWORD PTR [edi],edx
  41939b:	test   DWORD PTR [ebx+0xda95640],ebx
  4193a1:	pop    ss
  4193a2:	out    dx,eax
  4193a3:	cs in  al,dx
  4193a5:	sysret 
  4193a7:	out    0xed,eax
  4193a9:	inc    ecx
  4193aa:	(bad)  
  4193ac:	push   ds
  4193ad:	shl    DWORD PTR [ecx-0x38],0x69
  4193b1:	inc    edi
  4193b2:	sub    eax,0xffb1197
  4193b7:	inc    ebp
  4193b8:	loopne 0x419379
  4193ba:	push   esp
  4193bb:	xchg   ecx,eax
  4193bc:	push   es
  4193bd:	mov    ebx,ebp
  4193bf:	popf   
  4193c0:	xchg   ecx,eax
  4193c1:	shr    DWORD PTR [eax-0x13c563e0],cl
  4193c7:	lock adc ah,BYTE PTR ds:0x8e049d9d
  4193ce:	mov    esi,0xec4a86f4
  4193d3:	inc    esp
  4193d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d5:	repnz fsub DWORD PTR [ecx+0x11]
  4193d9:	fdiv   QWORD PTR [edx]
  4193db:	leave  
  4193dc:	das    
  4193dd:	mov    ds:0x7fbeeacc,eax
  4193e2:	repz (bad) 
  4193e4:	iret   
  4193e5:	jp     0x419416
  4193e7:	daa    
  4193e8:	(bad)
  4193eb:	push   0xffffffc9
  4193ed:	xor    al,0x18
  4193ef:	in     eax,0x68
  4193f1:	iret   
  4193f2:	stc    
  4193f3:	bound  ebx,QWORD PTR [ebp-0x25]
  4193f6:	sahf   
  4193f7:	xor    dh,cl
  4193f9:	mov    ebp,0xfd8b386b
  4193fe:	pop    ecx
  4193ff:	pop    edx
  419400:	sbb    bh,BYTE PTR [edx+edx*4]
  419403:	pop    eax
  419404:	or     DWORD PTR [ecx+ebx*8],ebx
  419407:	imul   ebp,DWORD PTR [esi-0x2e9150e0],0x8c56a9da
  419411:	arpl   WORD PTR [edi+eiz*8+0xf],bp
  419415:	fisttp WORD PTR [edi]
  419417:	into   
  419418:	cmp    BYTE PTR [eax-0x1186eb67],bh
  41941e:	xchg   edx,eax
  41941f:	xchg   esp,eax
  419420:	in     al,dx
  419421:	mov    WORD PTR [ebx-0x3a],?
  419424:	and    edi,eax
  419426:	outs   dx,BYTE PTR ds:[esi]
  419427:	out    dx,al
  419428:	mov    esi,0x41a8f1b8
  41942d:	jge    0x419496
  41942f:	jns    0x4193ef
  419431:	fistp  DWORD PTR [ecx+0x1d3b23c9]
  419437:	cwde   
  419438:	das    
  419439:	mov    ecx,0xc9c76285
  41943e:	aam    0x76
  419440:	stos   BYTE PTR es:[edi],al
  419441:	xchg   DWORD PTR [ecx],edx
  419443:	cmp    BYTE PTR [ecx-0x39b70f3c],dl
  419449:	sbb    eax,DWORD PTR ds:0x93369389
  41944f:	mov    al,0x23
  419451:	add    al,0x46
  419453:	mov    bl,0x34
  419455:	int    0x59
  419457:	mov    ecx,0x7e94f796
  41945c:	aaa    
  41945d:	mov    ch,0x48
  41945f:	test   DWORD PTR [ecx],edi
  419461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419462:	sbb    ah,cl
  419464:	repz js 0x4194bc
  419467:	lahf   
  419468:	pmulhw mm1,QWORD PTR [ecx-0x4c]
  41946c:	jbe    0x4193f0
  41946e:	enter  0x43b8,0x6f
  419472:	mov    gs,WORD PTR [ebp+0x1e]
  419475:	jmp    0xadd5544d
  41947a:	sub    eax,0x45fc997c
  41947f:	inc    edi
  419480:	mov    al,ds:0xf25c49fc
  419485:	mov    bh,0xea
  419487:	popa   
  419488:	mov    eax,0xff910956
  41948d:	nop
  41948e:	dec    ecx
  41948f:	popa   
  419490:	push   edx
  419491:	sub    DWORD PTR [edx],ebp
  419493:	push   esi
  419494:	sub    ecx,DWORD PTR [esi]
  419496:	pop    esp
  419497:	add    BYTE PTR [eax+ecx*2],bh
  41949a:	pop    edx
  41949b:	(bad)  
  41949c:	xor    eax,0x49ff5dc7
  4194a1:	jl     0x419448
  4194a3:	mov    dh,0x1e
  4194a5:	mov    al,0xcf
  4194a7:	inc    DWORD PTR [esi-0xe4bc447]
  4194ad:	fnsave [ebx]
  4194af:	dec    ebp
  4194b0:	enter  0xf16e,0x50
  4194b4:	adc    ah,dl
  4194b6:	jb     0x41952b
  4194b8:	iret   
  4194b9:	fmul   st(1),st
  4194bb:	(bad)
  4194bf:	pop    ebx
  4194c0:	std    
  4194c1:	sbb    ah,dl
  4194c3:	pop    eax
  4194c4:	(bad)  
  4194c6:	addr16 rdpmc 
  4194c9:	stc    
  4194ca:	xchg   DWORD PTR [ecx+ebp*8+0x3c],esp
  4194ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194cf:	mov    DWORD PTR [edx-0x33df0709],ebp
  4194d5:	mov    ds:0x8eca1d34,eax
  4194da:	cmp    al,0xd8
  4194dc:	mov    ebp,DWORD PTR [edi+0x55]
  4194df:	push   eax
  4194e0:	xchg   edi,eax
  4194e1:	pop    eax
  4194e2:	in     eax,0xd0
  4194e4:	or     BYTE PTR [edx+0x6bbc4f85],bh
  4194ea:	cmp    eax,0xec90cc21
  4194ef:	adc    BYTE PTR [ecx-0x13],0x65
  4194f3:	mov    esp,ebx
  4194f5:	xchg   edi,eax
  4194f6:	push   0x576f55bb
  4194fb:	or     DWORD PTR [ebx],ecx
  4194fd:	imul   ebx,DWORD PTR ds:0xe3111749,0xffffff8e
  419504:	mov    ds:0x4a94e2e,eax
  419509:	repnz sub BYTE PTR [eax-0x7b],dh
  41950d:	fadd   DWORD PTR [ebx-0x37e4e654]
  419514:	and    al,0x6c
  419516:	(bad)  [edx]
  419518:	xchg   ecx,ebx
  41951a:	aaa    
  41951b:	clc    
  41951c:	mov    eax,ss
  41951e:	jle    0x4194a1
  419520:	mov    fs,WORD PTR [edx-0x7]
  419523:	sbb    al,0x4c
  419525:	in     eax,0xd6
  419527:	lea    edx,[edi]
  419529:	pop    edx
  41952a:	out    dx,al
  41952b:	in     eax,0x8d
  41952d:	xor    edi,ebx
  41952f:	xchg   edx,eax
  419530:	test   eax,0xe84cd2ea
  419535:	test   DWORD PTR [edi],ebx
  419537:	pusha  
  419538:	int    0xb3
  41953a:	adc    al,0xfc
  41953c:	sub    dl,cl
  41953e:	pusha  
  41953f:	sti    
  419540:	push   ecx
  419541:	and    eax,0xc771ebcd
  419546:	cdq    
  419547:	out    dx,al
  419548:	daa    
  419549:	pop    ss
  41954a:	js     0x419533
  41954c:	inc    ebx
  41954d:	sub    eax,0xdccfd17b
  419552:	js     0x4194f0
  419554:	rcl    BYTE PTR [ebp-0x65],0xca
  419558:	test   eax,0x6d40fe57
  41955d:	xlat   BYTE PTR ds:[ebx]
  41955e:	loop   0x419560
  419560:	push   eax
  419561:	fcomp  QWORD PTR [edx-0x792d14a1]
  419567:	iret   
  419568:	mov    eax,ds:0xca7a775f
  41956d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41956e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41956f:	and    BYTE PTR [eax-0x33f776dc],dh
  419575:	(bad)  
  419576:	xchg   ebp,eax
  419577:	cmp    bl,BYTE PTR [esi]
  419579:	adc    eax,0xd85f4a07
  41957e:	inc    eax
  41957f:	inc    esi
  419580:	sbb    eax,0x9ea1f347
  419585:	mov    bh,0x7e
  419587:	xchg   ebp,eax
  419588:	cmp    al,0xf2
  41958a:	leave  
  41958b:	cmp    BYTE PTR [esi+0x301faabe],0x45
  419592:	fild   QWORD PTR [edx]
  419594:	dec    edi
  419595:	xchg   BYTE PTR [ebp-0x3fd2ab9d],al
  41959b:	fwait
  41959c:	add    DWORD PTR [ecx],ebp
  41959e:	xor    al,0x6a
  4195a0:	jmp    0xfa90:0xb16bd36f
  4195a7:	scas   eax,DWORD PTR es:[edi]
  4195a8:	inc    edi
  4195a9:	adc    ebx,DWORD PTR [eax-0x29b09e66]
  4195af:	out    dx,eax
  4195b0:	mov    ch,0x19
  4195b2:	aad    0x8f
  4195b4:	mov    ah,0xda
  4195b6:	call   DWORD PTR [edx+eax*1+0x58]
  4195ba:	outs   dx,DWORD PTR ds:[esi]
  4195bb:	iret   
  4195bc:	xchg   ebp,eax
  4195bd:	repnz popa 
  4195bf:	sbb    edi,edx
  4195c1:	mov    ch,0xcd
  4195c3:	sub    dl,BYTE PTR [ecx-0x39]
  4195c6:	fisttp WORD PTR [edx]
  4195c8:	or     ch,BYTE PTR [ebp+esi*2+0x53]
  4195cc:	mov    dl,0x35
  4195ce:	and    bl,cl
  4195d0:	cli    
  4195d1:	popf   
  4195d2:	into   
  4195d3:	jmp    0x419600
  4195d5:	and    DWORD PTR [esi],ebp
  4195d7:	(bad)  
  4195d8:	xlat   BYTE PTR ds:[ebx]
  4195d9:	mov    esi,0x25e311e7
  4195de:	inc    edi
  4195df:	fsubr  st,st(0)
  4195e1:	fcmovnu st,st(6)
  4195e3:	sbb    al,0x43
  4195e5:	icebp  
  4195e6:	push   es
  4195e7:	sahf   
  4195e8:	sub    ch,BYTE PTR [edi-0x6222cc7a]
  4195ee:	mov    esi,0x11f55373
  4195f3:	xor    al,0xa5
  4195f5:	into   
  4195f6:	xchg   ebx,eax
  4195f7:	cld    
  4195f8:	fisub  DWORD PTR [esi+eax*4]
  4195fb:	inc    edx
  4195fc:	(bad)  
  4195fd:	pop    esp
  4195fe:	cli    
  4195ff:	pop    esi
  419600:	inc    esp
  419601:	shl    DWORD PTR [esi+0x63],1
  419604:	jb     0x71f8ce38
  41960a:	xor    BYTE PTR ds:0xc11b8577,bh
  419610:	ds out 0x86,al
  419613:	ins    BYTE PTR es:[edi],dx
  419614:	sub    al,BYTE PTR [ebp+0x47]
  419617:	or     DWORD PTR [esi+0x5],edi
  41961a:	push   ecx
  41961b:	test   DWORD PTR es:[ebp-0x48],ecx
  41961f:	cmc    
  419620:	cmp    BYTE PTR [eax],bh
  419622:	dec    ebx
  419623:	sub    ch,ch
  419625:	inc    edi
  419626:	lods   eax,DWORD PTR ds:[esi]
  419627:	and    BYTE PTR [edx+0x25],dh
  41962a:	sub    BYTE PTR [edx],bl
  41962c:	(bad)
  41962f:	pop    ss
  419630:	jmp    0x419616
  419632:	fld    DWORD PTR [ebx]
  419634:	and    al,0x37
  419636:	cmp    BYTE PTR [ebp-0x2de386b],bh
  41963c:	xchg   edi,eax
  41963d:	xchg   edi,eax
  41963e:	adc    eax,0x94e4e1ca
  419643:	cmp    ebx,DWORD PTR [ebp+0x2a]
  419646:	mov    ch,0x28
  419648:	pusha  
  419649:	cmp    ebx,DWORD PTR [eax]
  41964b:	(bad)  
  41964c:	outs   dx,BYTE PTR ds:[esi]
  41964d:	test   al,0x8f
  41964f:	loop   0x419692
  419651:	push   ss
  419652:	rcl    BYTE PTR [edx-0x4],0x9d
  419656:	inc    edi
  419657:	add    BYTE PTR [eax-0x51f4c82d],0x7d
  41965e:	add    al,0x32
  419660:	psubsb mm0,QWORD PTR [edi+0x50]
  419664:	xchg   edi,eax
  419665:	or     dl,BYTE PTR [ebp+0x9]
  419668:	std    
  419669:	dec    ebp
  41966a:	jmp    0xbbb0133f
  41966f:	in     eax,dx
  419670:	rol    DWORD PTR [ebx],0xaa
  419673:	jmp    0x19059cb4
  419678:	sti    
  419679:	stos   BYTE PTR es:[edi],al
  41967a:	daa    
  41967b:	out    0xa4,eax
  41967d:	push   ebx
  41967e:	retf   0x57ae
  419681:	jne    0x4196e0
  419683:	aad    0x78
  419685:	stos   DWORD PTR es:[edi],eax
  419686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419687:	mov    esp,0x9093f158
  41968c:	jmp    0x190:0x7487c0c4
  419693:	imul   ebx,DWORD PTR [ebx-0x7d],0xffffffb2
  419697:	sti    
  419698:	ins    DWORD PTR es:[edi],dx
  419699:	ret    0x50ac
  41969c:	cmp    eax,0x58
  41969f:	sbb    eax,eax
  4196a1:	jge    0x419664
  4196a3:	mov    edx,0xe98585d4
  4196a8:	retf   0xa370
  4196ab:	out    0xbb,eax
  4196ad:	jle    0x419662
  4196af:	popa   
  4196b0:	stos   BYTE PTR es:[edi],al
  4196b1:	jle    0x419678
  4196b3:	sahf   
  4196b4:	(bad)  
  4196b5:	into   
  4196b6:	xchg   ebp,eax
  4196b7:	loope  0x419652
  4196b9:	or     DWORD PTR [ebx-0x6657a87],ecx
  4196bf:	pusha  
  4196c0:	jl     0x419666
  4196c2:	pushf  
  4196c3:	add    esi,DWORD PTR [edi-0x57a7db36]
  4196c9:	(bad)  
  4196ca:	mov    bl,0x8
  4196cc:	sub    al,0xa7
  4196ce:	mov    ?,ecx
  4196d0:	test   al,0x2d
  4196d2:	add    DWORD PTR [eax-0x7b1e566d],edi
  4196d8:	pop    eax
  4196d9:	mov    eax,ds:0xa752ac7b
  4196de:	add    BYTE PTR [esp+ecx*1],ch
  4196e1:	add    BYTE PTR [edi],0x84
  4196e4:	out    0x4e,eax
  4196e6:	aas    
  4196e7:	mov    eax,0x419fea06
  4196ec:	mov    ch,0x77
  4196ee:	or     al,0xd8
  4196f0:	or     eax,0x2c608611
  4196f5:	imul   esi,DWORD PTR [ebx+0x31],0xffffff8b
  4196f9:	jge    0x419767
  4196fb:	and    ebx,edi
  4196fd:	xchg   ebp,eax
  4196fe:	sbb    ah,al
  419700:	iret   
  419701:	jecxz  0x41974a
  419703:	or     bh,dh
  419705:	xor    BYTE PTR [ebp-0x24],ch
  419708:	stos   BYTE PTR es:[edi],al
  419709:	jae    0x4196e5
  41970b:	imul   edx,DWORD PTR [esi],0x56
  41970e:	cmp    al,0xc9
  419710:	ins    BYTE PTR es:[edi],dx
  419711:	lock std 
  419713:	xrelease xchg BYTE PTR [edx+0x57460a9f],dl
  41971a:	jo     0x41971c
  41971c:	aam    0xf8
  41971e:	inc    edi
  41971f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419720:	and    DWORD PTR [edi+0x35735404],0xffffffcf
  419727:	and    eax,0xce767653
  41972c:	add    dl,cl
  41972e:	inc    edx
  41972f:	js     0x4196f5
  419731:	retf   
  419732:	fmul   DWORD PTR ds:0x2b686809
  419738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419739:	addr16 (bad) 
  41973b:	push   edx
  41973c:	popf   
  41973d:	mov    WORD PTR [esi+edx*4+0x65],gs
  419741:	mov    esp,0xfafbd47d
  419746:	pop    esi
  419747:	cdq    
  419748:	(bad)  
  419749:	lds    eax,FWORD PTR [edx+0x36]
  41974c:	lock shr edx,0x6c
  419750:	dec    edi
  419751:	sbb    edi,edx
  419753:	mov    cl,0x80
  419755:	dec    edx
  419756:	pop    ds
  419757:	stc    
  419758:	lahf   
  419759:	clc    
  41975a:	xchg   edx,eax
  41975b:	fld    st(2)
  41975d:	test   al,0x72
  41975f:	dec    ebp
  419760:	lea    edi,[ebp+0x53]
  419763:	sbb    ebp,eax
  419765:	pop    esp
  419766:	test   eax,0xd43ef18
  41976b:	cli    
  41976c:	and    al,0x95
  41976e:	js     0x41974f
  419770:	or     DWORD PTR [esi],esp
  419772:	cdq    
  419773:	push   edx
  419774:	sub    cl,BYTE PTR [edi+0x21b05aef]
  41977a:	cmp    BYTE PTR [eax+0x71],cl
  41977d:	js     0x419721
  41977f:	add    al,0x7f
  419781:	sar    ebx,cl
  419783:	inc    edx
  419784:	push   ss
  419785:	cmc    
  419786:	gs retf 
  419788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419789:	jg     0x419763
  41978b:	scas   al,BYTE PTR es:[edi]
  41978c:	call   0xa650:0xfa1be808
  419793:	(bad)  
  419795:	jg     0x419806
  419797:	cmp    ah,cl
  419799:	neg    BYTE PTR [edx]
  41979b:	push   esp
  41979c:	enter  0xad64,0x35
  4197a0:	sbb    bl,BYTE PTR ds:0x127ec5ba
  4197a6:	inc    ebp
  4197a7:	xchg   bh,dl
  4197a9:	sbb    al,cl
  4197ab:	and    DWORD PTR ds:0xc8e300af,eax
  4197b1:	fild   QWORD PTR [esi+0x53a18710]
  4197b7:	jl     0x419811
  4197b9:	pminub mm3,QWORD PTR [edx-0x62ea3ee1]
  4197c0:	dec    esi
  4197c1:	shl    DWORD PTR [ebx-0x48f12554],cl
  4197c7:	cmp    bl,BYTE PTR [esi-0x557d6583]
  4197cd:	mov    ch,0x1
  4197cf:	jne    0x419771
  4197d1:	add    DWORD PTR [esp-0x7a2547fa],ebx
  4197d8:	add    edi,edi
  4197da:	(bad)  
  4197db:	retf   
  4197dc:	call   0xedea899d
  4197e1:	popa   
  4197e2:	in     al,0xb7
  4197e4:	mov    dl,0x4c
  4197e6:	xchg   edx,eax
  4197e7:	out    dx,eax
  4197e8:	data16 mov BYTE PTR [esi+ebp*1-0x45a73d9b],0x18
  4197f1:	arpl   cx,ax
  4197f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f4:	mov    bh,0xac
  4197f6:	cs pop ds
  4197f8:	xchg   ecx,eax
  4197f9:	out    0xd7,eax
  4197fb:	popf   
  4197fc:	xchg   esi,eax
  4197fd:	mov    al,0x3b
  4197ff:	pusha  
  419800:	data16 jecxz 0x419794
  419803:	dec    ebx
  419804:	dec    edi
  419805:	in     al,dx
  419806:	push   0x6e
  419808:	sti    
  419809:	sub    DWORD PTR [edx+0x30],ebp
  41980c:	push   edi
  41980d:	pop    ebp
  41980e:	repnz push ebx
  419810:	fisub  WORD PTR [edx]
  419812:	or     DWORD PTR [esi+0xb],edx
  419815:	mul    DWORD PTR [ecx-0x572230da]
  41981b:	xchg   ebp,eax
  41981c:	jae    0x4197b7
  41981e:	add    edi,DWORD PTR [ebx+0x17]
  419821:	xor    eax,0x9218e61
  419826:	or     ebx,edx
  419828:	int3   
  419829:	inc    ecx
  41982a:	sub    BYTE PTR [edx-0x23],dl
  41982d:	mov    ch,0x75
  41982f:	jb     0x4197fa
  419831:	push   esi
  419832:	js     0x419862
  419834:	les    ebx,FWORD PTR [ebp+0x47ee80ab]
  41983a:	fadd   QWORD PTR [ecx]
  41983c:	jmp    0x4197cb
  41983e:	push   ecx
  41983f:	mov    dl,0x7a
  419841:	inc    eax
  419842:	xor    ah,BYTE PTR [edi+0x6085311]
  419848:	cmp    eax,0xc669eaf6
  41984d:	sbb    al,0x3e
  41984f:	fwait
  419850:	test   ah,cl
  419852:	mov    ds:0x5e8b4be0,al
  419857:	push   cs
  419858:	outs   dx,BYTE PTR ds:[esi]
  419859:	or     al,0x9a
  41985b:	cmp    cl,dh
  41985d:	add    eax,0x5f6ad5d9
  419862:	pop    ds
  419863:	or     BYTE PTR [esi+0x36],dl
  419866:	inc    esi
  419867:	sbb    al,0x7c
  41986a:	mov    cl,0x93
  41986c:	mov    dl,0x49
  41986e:	hlt    
  41986f:	test   dl,bl
  419871:	dec    ebx
  419872:	call   0x123c53a8
  419877:	jl     0x41985c
  419879:	push   cs
  41987a:	push   0x865ab3f8
  41987f:	inc    ebx
  419880:	into   
  419881:	mov    cl,ah
  419883:	(bad)  
  419884:	in     eax,0x8f
  419886:	cmp    BYTE PTR ds:[ebx+0x77],0xe7
  41988b:	cmp    BYTE PTR [edx+0x4da5cb2e],dl
  419891:	(bad)  
  419892:	ins    BYTE PTR es:[edi],dx
  419893:	sbb    al,0x3b
  419895:	ins    DWORD PTR es:[edi],dx
  419896:	sub    BYTE PTR [eax-0x36],0x23
  41989a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41989b:	jl     0x419883
  41989d:	repnz push edi
  41989f:	bound  eax,QWORD PTR [esp+eiz*4]
  4198a2:	xor    ch,BYTE PTR [esi-0x16]
  4198a5:	mov    eax,0x39c6c6c2
  4198aa:	add    bl,bl
  4198ac:	inc    esi
  4198ad:	adc    cl,cl
  4198af:	fcomp  st(5)
  4198b1:	pop    edx
  4198b2:	bound  edx,QWORD PTR [ecx]
  4198b4:	scas   eax,DWORD PTR es:[edi]
  4198b5:	xchg   edx,eax
  4198b6:	jno    0x41991b
  4198b8:	aas    
  4198b9:	in     al,0x54
  4198bb:	jg     0x4198d8
  4198bd:	jg     0x4198ef
  4198bf:	(bad)  
  4198c0:	adc    esi,DWORD PTR [eax+eax*1]
  4198c3:	mov    esi,0xf37776e
  4198c8:	adc    BYTE PTR [esi],dh
  4198ca:	xor    dl,BYTE PTR [edx+0x499132f7]
  4198d0:	mov    ch,0xe
  4198d2:	imul   esp,DWORD PTR ds:0x861013c4,0x789755e0
  4198dc:	add    eax,0xa36ff197
  4198e1:	rcr    BYTE PTR [edx-0x4f],1
  4198e4:	jecxz  0x41995b
  4198e6:	stc    
  4198e7:	push   es
  4198e8:	push   es
  4198e9:	out    0x17,eax
  4198eb:	test   BYTE PTR [edi],ch
  4198ed:	lods   eax,DWORD PTR ds:[esi]
  4198ee:	cs pop es
  4198f0:	(bad)  
  4198f1:	adc    ah,dh
  4198f3:	jp     0x4198af
  4198f5:	nop
  4198f6:	into   
  4198f7:	hlt    
  4198f8:	fst    DWORD PTR [eax+ebp*1-0x78]
  4198fc:	inc    eax
  4198fd:	pusha  
  4198fe:	mov    eax,ds:0x6fa13cbf
  419903:	(bad)  
  419904:	mov    ch,0xdd
  419906:	xchg   DWORD PTR [eax],ebx
  419908:	pushf  
  419909:	or     BYTE PTR [esi+0x5653db0d],bl
  41990f:	push   ecx
  419910:	mov    DWORD PTR [ebx-0x16],ebp
  419913:	imul   edx,DWORD PTR [ebx+eax*1-0x63864ed],0x750490a4
  41991e:	outs   dx,DWORD PTR es:[esi]
  419920:	sub    BYTE PTR [ebx],bh
  419922:	retf   0x3473
  419925:	sti    
  419926:	adc    ebx,DWORD PTR [ebp+0x444ec66d]
  41992c:	or     DWORD PTR [edi+0x7986a26b],ebp
  419932:	sar    DWORD PTR [esi+0x344bed5d],1
  419938:	loope  0x4199b8
  41993a:	inc    ecx
  41993b:	adc    al,0xd7
  41993d:	addr16 pop ecx
  41993f:	sbb    DWORD PTR [edx+0x62],ebp
  419942:	fcmovu st,st(6)
  419944:	(bad)  
  419945:	(bad)  
  419946:	in     eax,dx
  419947:	sbb    DWORD PTR [eax],esi
  419949:	mov    dh,0xde
  41994b:	ins    BYTE PTR es:[edi],dx
  41994c:	add    dh,cl
  41994e:	jmp    0x335a6ef0
  419953:	mov    al,ds:0x6378f19e
  419958:	push   ebp
  419959:	mov    edx,0x19e3dac3
  41995e:	hlt    
  41995f:	pop    eax
  419960:	fucomp st(1)
  419962:	or     esp,DWORD PTR [eax+0x47]
  419965:	loop   0x41995e
  419967:	(bad)  
  419968:	jge    0x419970
  41996a:	jge    0x419920
  41996c:	aas    
  41996d:	sub    al,0x58
  41996f:	out    0xd7,eax
  419971:	cmp    eax,0x3383bd49
  419976:	mov    edi,0x772ee852
  41997b:	xor    DWORD PTR [edx+0x192c5d21],edx
  419981:	pop    ecx
  419982:	ss add DWORD PTR cs:[edx],0x48
  419987:	jecxz  0x4199de
  419989:	mov    ebp,0xe26bf17a
  41998e:	out    0x85,eax
  419990:	into   
  419991:	pop    es
  419992:	mov    ecx,0x6be2c178
  419997:	sbb    al,0x5d
  419999:	pop    ss
  41999a:	xchg   esi,eax
  41999b:	ins    BYTE PTR es:[edi],dx
  41999c:	mov    ds:0x6d7899c7,al
  4199a1:	fldenv [ecx+eiz*8-0x39]
  4199a5:	test   al,0xbf
  4199a7:	test   DWORD PTR [edi+0x5bd8b07a],0x57cbf071
  4199b1:	int    0xdc
  4199b3:	dec    eax
  4199b4:	mov    al,0x19
  4199b6:	clc    
  4199b7:	lods   eax,DWORD PTR ds:[esi]
  4199b8:	xor    edx,edx
  4199ba:	mov    ebp,0x8ef99857
  4199bf:	inc    esi
  4199c0:	mov    al,ah
  4199c2:	xchg   edx,eax
  4199c3:	mov    ds:0x7fc573d7,eax
  4199c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199c9:	outs   dx,BYTE PTR ds:[esi]
  4199ca:	into   
  4199cb:	add    ebp,ecx
  4199cd:	inc    esp
  4199ce:	aas    
  4199cf:	cdq    
  4199d0:	or     bh,BYTE PTR [eax-0x67]
  4199d3:	mov    ds:0xda154c7b,eax
  4199d8:	in     eax,dx
  4199d9:	add    BYTE PTR [ecx+0x7a5e817],ch
  4199df:	push   0xd942505d
  4199e4:	push   esp
  4199e5:	mov    es,eax
  4199e7:	lods   al,BYTE PTR ds:[esi]
  4199e8:	add    al,0x8c
  4199ea:	and    BYTE PTR [edx],0x2c
  4199ed:	(bad)  
  4199ee:	fxam   
  4199f0:	mov    esi,0xef66f6af
  4199f5:	out    dx,eax
  4199f6:	aas    
  4199f7:	repnz push cs
  4199f9:	mov    dl,0x2a
  4199fb:	into   
  4199fc:	xchg   ebp,eax
  4199fd:	ss sar edi,0x8
  419a01:	leave  
  419a02:	rcr    BYTE PTR gs:[ebp-0x7219164d],0x93
  419a0a:	movntq QWORD PTR [ecx],mm0
  419a0d:	mov    cl,0x1f
  419a0f:	in     al,0x9
  419a11:	mov    edx,0x69a69c9a
  419a16:	push   ebp
  419a17:	ret    0x841c
  419a1a:	xchg   ebp,eax
  419a1b:	jns    0x419a2d
  419a1d:	pop    ss
  419a1e:	(bad)  
  419a1f:	int3   
  419a20:	mov    dl,0x48
  419a22:	mov    bl,0x8b
  419a24:	and    BYTE PTR [ebx],al
  419a26:	shr    al,0x7a
  419a29:	cld    
  419a2a:	retf   
  419a2b:	xlat   BYTE PTR ds:[ebx]
  419a2c:	mov    eax,ds:0x4975e8db
  419a31:	and    eax,0x3b43685e
  419a36:	ds stos DWORD PTR es:[edi],eax
  419a38:	loopne 0x419a1b
  419a3a:	inc    dx
  419a3c:	inc    esp
  419a3d:	lods   eax,DWORD PTR ds:[esi]
  419a3e:	mov    ch,BYTE PTR [ecx+0x4c]
  419a41:	inc    edx
  419a42:	ins    BYTE PTR es:[edi],dx
  419a43:	(bad)  
  419a44:	mov    ds:0xbf4b3512,eax
  419a49:	pushf  
  419a4a:	rcr    BYTE PTR [ecx+0x508a8bec],1
  419a50:	mov    ebx,0xa8090ac
  419a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a56:	sbb    eax,0x1f5955c0
  419a5b:	add    BYTE PTR [eax-0x74],dh
  419a5e:	ss enter 0x8dbc,0x57
  419a63:	mov    eax,ds:0x1c404d57
  419a68:	xchg   DWORD PTR [esi-0x73],edx
  419a6b:	inc    edi
  419a6c:	out    dx,eax
  419a6d:	mov    al,ds:0xca4cd643
  419a72:	leave  
  419a73:	test   eax,0x8590fc7
  419a78:	retf   0xe35e
  419a7b:	xchg   ecx,eax
  419a7c:	rcl    BYTE PTR [eax+0x75cf72c7],cl
  419a82:	inc    eax
  419a83:	jl     0x419a26
  419a85:	das    
  419a86:	xchg   BYTE PTR [edx+eiz*4-0x6d],dh
  419a8a:	cmp    eax,0xf8468a5b
  419a8f:	or     esi,0xff45cb31
  419a95:	xor    al,0x50
  419a97:	jno    0x419a22
  419a99:	sub    eax,0x59137607
  419a9e:	scas   al,BYTE PTR es:[edi]
  419a9f:	jo     0x419b01
  419aa1:	rcl    BYTE PTR [ebp+esi*4-0x1e],0xf7
  419aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aa7:	or     dl,dl
  419aa9:	mov    esi,0x70227f0b
  419aae:	sub    WORD PTR [eax-0x36],sp
  419ab2:	call   0xdc1a:0xc53ca3fe
  419ab9:	dec    edx
  419aba:	sti    
  419abb:	js     0x419a99
  419abd:	(bad)  
  419abe:	call   0x9966af
  419ac3:	sbb    eax,0xfc37f52
  419ac8:	sbb    ebp,esi
  419aca:	pop    es
  419acb:	popa   
  419acc:	or     DWORD PTR [ebp-0x57],ecx
  419acf:	lea    ebx,[esi+0x21c7da7a]
  419ad5:	popf   
  419ad6:	push   es
  419ad7:	xchg   DWORD PTR [edi-0x3d],ebp
  419ada:	sub    BYTE PTR [ebp-0x31],ah
  419add:	int3   
  419ade:	retf   0xd0ac
  419ae1:	pop    esp
  419ae2:	std    
  419ae3:	in     al,dx
  419ae4:	dec    edx
  419ae5:	lods   eax,DWORD PTR ds:[esi]
  419ae6:	adc    esp,ebx
  419ae8:	jle    0x419af7
  419aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aeb:	mov    al,ds:0x9b67e8a2
  419af0:	dec    edi
  419af1:	add    esp,DWORD PTR [ecx+0x5a4bb018]
  419af7:	xchg   ebx,eax
  419af8:	jmp    0xf14807ba
  419afd:	pop    esp
  419afe:	pop    ebp
  419aff:	mul    DWORD PTR [ebx+ebx*1+0x5e]
  419b03:	out    dx,eax
  419b04:	(bad)  
  419b05:	pop    eax
  419b06:	(bad)  
  419b07:	sub    al,0x13
  419b09:	push   DWORD PTR [esi-0x24bf8919]
  419b0f:	jbe    0x419af9
  419b11:	je     0x419b2e
  419b13:	xchg   esp,eax
  419b14:	mov    eax,0xb22220ab
  419b19:	cld    
  419b1a:	arpl   WORD PTR [edx-0x82cac3b],si
  419b20:	pushf  
  419b21:	jno    0x419ae4
  419b23:	jmp    0x67d3:0x25bf084c
  419b2a:	in     al,0x8a
  419b2c:	iret   
  419b2d:	adc    dl,0x98
  419b30:	stos   BYTE PTR es:[edi],al
  419b31:	dec    edi
  419b32:	sahf   
  419b33:	je     0x419ba8
  419b35:	push   0x73099c73
  419b3a:	das    
  419b3b:	inc    edi
  419b3c:	fist   WORD PTR [eax]
  419b3e:	outs   dx,DWORD PTR ds:[esi]
  419b3f:	pop    esi
  419b40:	add    al,BYTE PTR [eax+0x24]
  419b43:	ret    0x1a4
  419b46:	add    bl,BYTE PTR [esi+eiz*8]
  419b49:	inc    esp
  419b4a:	icebp  
  419b4b:	inc    eax
  419b4c:	pop    esp
  419b4d:	push   cs
  419b4e:	push   esi
  419b4f:	xchg   BYTE PTR ds:0x9d9bc8d9,ah
  419b55:	mov    esp,0xa24f4e5e
  419b5a:	loope  0x419b99
  419b5c:	sahf   
  419b5d:	stos   DWORD PTR es:[edi],eax
  419b5e:	js     0x419b68
  419b60:	pusha  
  419b61:	das    
  419b62:	push   ecx
  419b63:	inc    edx
  419b64:	mov    dh,0x4f
  419b66:	nop
  419b67:	mov    eax,edx
  419b69:	gs ins DWORD PTR es:[edi],dx
  419b6b:	inc    eax
  419b6c:	xor    eax,0x5d6dff46
  419b71:	enter  0x135d,0x10
  419b75:	mov    al,0xe
  419b77:	mov    ds:0xe4b738c3,eax
  419b7c:	addr16 xchg edi,eax
  419b7e:	mov    eax,ds:0x772a01db
  419b83:	pop    ds
  419b84:	sbb    DWORD PTR [edx],0x1e
  419b87:	or     al,0x62
  419b89:	into   
  419b8a:	ins    BYTE PTR es:[edi],dx
  419b8b:	cs dec eax
  419b8d:	leave  
  419b8e:	shr    BYTE PTR [ecx],cl
  419b90:	xor    BYTE PTR [ecx-0x22f34bdb],ah
  419b96:	push   ds
  419b97:	inc    edi
  419b98:	aaa    
  419b99:	xchg   edi,eax
  419b9a:	or     DWORD PTR [esp-0x7a],eax
  419b9e:	stos   DWORD PTR es:[edi],eax
  419b9f:	xor    bh,BYTE PTR [ebx-0x3b]
  419ba2:	mov    edx,0x65024a
  419ba7:	inc    esp
  419ba8:	inc    edi
  419ba9:	push   edx
  419baa:	pop    es
  419bab:	xchg   al,bh
  419bad:	mov    dh,0x42
  419baf:	push   0xd4b09b14
  419bb4:	test   eax,0xe2b1dbfe
  419bb9:	inc    esp
  419bba:	aam    0xc3
  419bbc:	push   esp
  419bbd:	cmp    ebx,0x2c
  419bc0:	adc    DWORD PTR [ecx],0x57cbd686
  419bc6:	xor    cl,BYTE PTR [edx+0x5ecf027b]
  419bcc:	jg     0x419be3
  419bce:	jmp    0x7a5f4d30
  419bd3:	inc    ebx
  419bd4:	into   
  419bd5:	lahf   
  419bd6:	ds inc ebp
  419bd8:	lods   eax,DWORD PTR ds:[esi]
  419bd9:	sbb    DWORD PTR [eax-0x7f721b4c],edx
  419bdf:	cmp    ebp,ecx
  419be1:	in     al,0x52
  419be3:	addr16 in eax,dx
  419be5:	mov    WORD PTR [ebp+ebx*2+0x4285c64e],?
  419bec:	jmp    0xe57e:0x2fc62e13
  419bf3:	push   eax
  419bf4:	inc    edi
  419bf5:	test   DWORD PTR [esi+0x1a08a4fe],ebx
  419bfb:	dec    edx
  419bfc:	sbb    al,0x23
  419bfe:	retf   
  419bff:	sbb    eax,0xf61bd208
  419c04:	jmp    0x419c2f
  419c06:	sar    BYTE PTR [esp+eax*8],1
  419c09:	stos   DWORD PTR es:[edi],eax
  419c0a:	or     DWORD PTR [edi+0x661aea82],eax
  419c10:	lods   eax,DWORD PTR ds:[esi]
  419c11:	pop    esp
  419c12:	idiv   BYTE PTR [ebp-0x41b7e86]
  419c18:	pop    ecx
  419c19:	jecxz  0x419c00
  419c1b:	ja     0x419c19
  419c1d:	js     0x419bc3
  419c1f:	mov    eax,0x1b540156
  419c24:	sbb    edx,DWORD PTR [ebx+eax*8-0x3d]
  419c28:	shl    BYTE PTR [edx+0xc],0x37
  419c2c:	mov    dl,0x59
  419c2e:	push   0xa1d273d4
  419c33:	stc    
  419c34:	xor    ebx,DWORD PTR [ecx+0x50]
  419c37:	jmp    DWORD PTR [edx+0x7f581210]
  419c3d:	dec    edi
  419c3e:	inc    edx
  419c3f:	or     ecx,DWORD PTR cs:[edi+ecx*2+0x73263800]
  419c47:	jle    0x419c8d
  419c49:	dec    eax
  419c4a:	pushf  
  419c4b:	iret   
  419c4c:	push   ss
  419c4d:	sub    DWORD PTR [edx],0xe9f0cb8b
  419c53:	and    al,0x37
  419c55:	mov    cl,0x3d
  419c57:	fiadd  DWORD PTR [ebx]
  419c59:	adc    DWORD PTR [ebp-0x4b],ecx
  419c5c:	mov    al,ds:0xcd76f831
  419c61:	push   ecx
  419c62:	hlt    
  419c63:	push   edi
  419c64:	enter  0x49ef,0x5
  419c68:	les    eax,FWORD PTR [edi]
  419c6a:	leave  
  419c6b:	or     al,0x2f
  419c6d:	or     al,0x6f
  419c6f:	std    
  419c70:	sar    DWORD PTR [edx+0x41],cl
  419c73:	mov    ecx,DWORD PTR [eax]
  419c75:	add    al,0xc6
  419c77:	sub    ah,cl
  419c79:	inc    ecx
  419c7a:	retf   0xc421
  419c7d:	jmp    0x27fec535
  419c82:	into   
  419c83:	rcr    ebx,0x24
  419c86:	cdq    
  419c87:	je     0x419c7a
  419c89:	dec    ecx
  419c8a:	sub    DWORD PTR [eax],ebp
  419c8c:	out    dx,eax
  419c8d:	and    BYTE PTR [ecx+0xa225b79],0x57
  419c94:	mov    al,ds:0xf1dd1dea
  419c99:	imul   ecx,DWORD PTR [edx-0x289d60a0],0xffffff94
  419ca0:	dec    eax
  419ca1:	pop    ebx
  419ca2:	cmp    DWORD PTR [edi],ebp
  419ca4:	push   ds
  419ca5:	sbb    DWORD PTR [ebx+0x1d],eax
  419ca8:	inc    ebp
  419ca9:	ret    
  419caa:	shr    BYTE PTR [edx+0x32],0x4a
  419cae:	lock jbe 0x419d0a
  419cb1:	jne    0x419ccf
  419cb3:	xchg   ebp,eax
  419cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cb5:	sub    BYTE PTR [ebp-0x1e],al
  419cb8:	cmp    BYTE PTR [ebx+0x7eb1d1bf],ch
  419cbe:	fldenv [ebx+0x43]
  419cc1:	xchg   ecx,eax
  419cc2:	sub    edx,DWORD PTR [ebx+edi*2-0x7a]
  419cc6:	cli    
  419cc7:	pop    edi
  419cc8:	lods   al,BYTE PTR ds:[esi]
  419cc9:	cmp    al,0x18
  419ccb:	mov    al,ds:0xffdfc7d3
  419cd0:	pop    es
  419cd1:	call   0x94336256
  419cd6:	and    eax,0xb4f3b109
  419cdb:	push   0x17e397b7
  419ce0:	ret    
  419ce1:	dec    ebx
  419ce2:	pop    edi
  419ce3:	test   eax,0x8b63d296
  419ce8:	mov    edi,0xf0fc82ff
  419ced:	ja     0x419d4a
  419cef:	(bad)  
  419cf0:	jns    0x419d3b
  419cf2:	xor    eax,0xf2fcac9a
  419cf7:	sub    edi,DWORD PTR [ecx+0x76]
  419cfa:	not    DWORD PTR [edi+edx*1]
  419cfd:	cmp    DWORD PTR [edx+esi*8-0x64],0xffffffb5
  419d02:	pusha  
  419d03:	and    ebp,DWORD PTR [edi]
  419d05:	push   0x842faf3
  419d0a:	call   0x16aa9f17
  419d0f:	jp     0x419d83
  419d11:	push   edx
  419d12:	std    
  419d13:	jl     0x419d18
  419d15:	ret    
  419d16:	sar    BYTE PTR [esi+0x5b9c540a],cl
  419d1c:	sbb    ah,BYTE PTR [esi]
  419d1e:	sar    al,1
  419d20:	mov    ebx,0xa41a11bb
  419d25:	jb     0x419d17
  419d27:	ret    0x3daf
  419d2a:	mov    ebx,0x3e0c226a
  419d2f:	test   al,0x1f
  419d31:	add    al,0x6e
  419d33:	cmp    al,0xbe
  419d35:	rcl    WORD PTR [esp+eiz*4-0x51],cl
  419d3a:	in     al,dx
  419d3b:	pusha  
  419d3c:	xchg   DWORD PTR [ebp+0x31f0376f],ecx
  419d42:	dec    edx
  419d43:	jbe    0x419d34
  419d45:	clc    
  419d46:	aaa    
  419d47:	push   ds
  419d48:	push   edx
  419d49:	jne    0x419ce3
  419d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4c:	jne    0x419d5e
  419d4e:	or     eax,0x871f785
  419d53:	push   esp
  419d54:	fs cli 
  419d56:	and    esp,DWORD PTR [ebx+edx*8+0x7d2cfe9c]
  419d5d:	retf   
  419d5e:	into   
  419d5f:	pop    ds
  419d60:	or     eax,0x7a149716
  419d65:	fcomp  st(4)
  419d67:	cmp    al,0xae
  419d69:	mov    ecx,?
  419d6b:	enter  0x6dab,0x36
  419d6f:	sahf   
  419d70:	mov    esp,0x4991800e
  419d75:	pop    ebx
  419d76:	mov    dh,0x3c
  419d78:	mov    DWORD PTR [edx-0x64],eax
  419d7b:	addr16 (bad) 
  419d7d:	xchg   ebx,eax
  419d7e:	mov    bh,0x42
  419d80:	push   0x5e920737
  419d85:	add    eax,0x834c9ead
  419d8a:	cmc    
  419d8b:	inc    eax
  419d8c:	pop    ds
  419d8d:	call   0xaaea5ad0
  419d92:	sbb    BYTE PTR [esi],dh
  419d94:	cld    
  419d95:	mov    al,ds:0xcd9bd122
  419d9a:	add    dh,dh
  419d9c:	lahf   
  419d9d:	fwait
  419d9e:	add    DWORD PTR [edx],0x25188c9
  419da4:	and    al,0xa7
  419da6:	mov    esi,0x11c55cef
  419dab:	sar    bl,1
  419dad:	popf   
  419dae:	popa   
  419daf:	loopne 0x419e17
  419db1:	fistp  WORD PTR [ebx+0x7e]
  419db4:	pop    ds
  419db5:	not    DWORD PTR [ebx+0x176e5568]
  419dbb:	pusha  
  419dbc:	outs   dx,DWORD PTR ds:[esi]
  419dbd:	test   edx,ecx
  419dbf:	xor    DWORD PTR [ecx+eax*8],ebp
  419dc2:	std    
  419dc3:	sar    BYTE PTR [esi+ecx*2+0x23],0x76
  419dc8:	daa    
  419dc9:	icebp  
  419dca:	rcl    BYTE PTR [ebx],cl
  419dcc:	sbb    al,0x37
  419dce:	push   cs
  419dcf:	add    BYTE PTR [eax-0xd3b272b],dl
  419dd5:	out    0x33,al
  419dd7:	dec    edx
  419dd8:	pop    ebp
  419dd9:	hlt    
  419dda:	ins    DWORD PTR es:[edi],dx
  419ddb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  419ddd:	mov    bl,0xbb
  419ddf:	mov    WORD PTR [ebp+ebx*1+0x76],gs
  419de3:	cwde   
  419de4:	in     al,dx
  419de5:	stc    
  419de6:	ret    0x97a9
  419de9:	sub    bl,dl
  419deb:	(bad)  
  419dec:	xor    bh,BYTE PTR [ebx-0x757bdffa]
  419df2:	icebp  
  419df3:	dec    eax
  419df4:	mov    WORD PTR [ebx+0x7c],ss
  419df7:	cdq    
  419df8:	out    0x25,al
  419dfa:	add    DWORD PTR [esi+0x38],esp
  419dfd:	sub    eax,0x615955ed
  419e02:	adc    DWORD PTR [esi],edx
  419e04:	imul   ebp,DWORD PTR [ecx+edx*4],0x40
  419e08:	pop    edi
  419e09:	in     eax,dx
  419e0a:	and    bh,bh
  419e0c:	daa    
  419e0d:	xchg   BYTE PTR [edx+esi*2],bh
  419e10:	adc    edi,DWORD PTR [ecx+0x22f6202d]
  419e16:	test   al,0x29
  419e18:	sbb    eax,DWORD PTR [ecx+0x742a091a]
  419e1e:	adc    ecx,ebx
  419e20:	fisttp DWORD PTR [edx+ebp*8-0x1e]
  419e24:	fdiv   QWORD PTR [edx]
  419e26:	cwde   
  419e27:	pop    ss
  419e28:	mov    bl,0x44
  419e2a:	mov    ebx,0x37fba3d9
  419e2f:	push   esp
  419e30:	adc    edi,DWORD PTR [eax+esi*2+0x52]
  419e34:	rcl    DWORD PTR [edx-0x4e2d496f],cl
  419e3a:	fdiv   DWORD PTR [edi+ebp*1+0x346fc765]
  419e41:	sub    BYTE PTR [ebx-0x2b],0x54
  419e45:	leave  
  419e46:	push   esi
  419e47:	push   edx
  419e48:	sub    BYTE PTR [esi+0x53],dl
  419e4b:	cmc    
  419e4c:	xchg   ecx,eax
  419e4d:	adc    DWORD PTR [esi-0xe],esi
  419e50:	mov    dh,0x4d
  419e52:	and    cl,BYTE PTR ds:0x924e93ad
  419e58:	and    BYTE PTR [eax],0x2e
  419e5b:	sbb    ebx,DWORD PTR [edx+0x42]
  419e5e:	or     al,0x3c
  419e60:	aaa    
  419e61:	and    eax,0x8b9628d9
  419e66:	pop    esi
  419e67:	ss ds and BYTE PTR es:[ebp-0x523b8ac9],cl
  419e70:	jb     0x419ecf
  419e72:	fadd   QWORD PTR ds:0x5437e8ea
  419e78:	xchg   DWORD PTR [edi],edi
  419e7a:	dec    edx
  419e7b:	pop    edx
  419e7c:	leave  
  419e7d:	test   al,0x6d
  419e7f:	xchg   ebp,eax
  419e80:	fcom   QWORD PTR [ebp-0x3f]
  419e83:	mov    gs,esp
  419e85:	or     DWORD PTR [edi+0x361721b3],esi
  419e8b:	or     cl,BYTE PTR [edx+0xd57d90f]
  419e91:	lea    esi,[eax+0x3d3023f6]
  419e97:	dec    esi
  419e98:	or     ah,bl
  419e9a:	jmp    0x1c4f6a6c
  419e9f:	icebp  
  419ea0:	stc    
  419ea1:	push   edi
  419ea2:	mov    al,ds:0xa0b13a09
  419ea7:	pop    esp
  419ea8:	test   DWORD PTR [edi-0x21],0x77fe6509
  419eaf:	and    edi,DWORD PTR [edi+ebx*1+0x7b1a7af3]
  419eb6:	hlt    
  419eb7:	inc    esi
  419eb8:	dec    edx
  419eb9:	pop    ss
  419eba:	push   ebp
  419ebb:	fmul   st(3),st
  419ebd:	and    eax,0xb39fb7bb
  419ec2:	mov    BYTE PTR [ebx+0x245051ff],bl
  419ec8:	adc    BYTE PTR [ebp+0x7c],bh
  419ecb:	cmp    al,0x1f
  419ecd:	dec    ebx
  419ece:	retf   
  419ecf:	push   edx
  419ed0:	and    bl,BYTE PTR ds:0x15ed37f3
  419ed6:	int    0x54
  419ed8:	out    0x73,al
  419eda:	mov    ds:0xfcacc90,al
  419edf:	test   al,cl
  419ee1:	pop    esi
  419ee2:	pushf  
  419ee3:	loop   0x419e8b
  419ee5:	arpl   sp,di
  419ee7:	sbb    eax,0x2db056bd
  419eec:	push   ds
  419eed:	jecxz  0x419ec3
  419eef:	repnz mov ebp,DWORD PTR [ecx+0x70]
  419ef3:	fidivr DWORD PTR [ebx-0x6f]
  419ef6:	sbb    eax,0x5f
  419ef9:	add    edx,DWORD PTR [edx-0x14]
  419efc:	stc    
  419efd:	mov    WORD PTR [eax+0x4654e3bd],?
  419f03:	xor    al,0xa5
  419f05:	cwde   
  419f06:	xor    al,0xce
  419f08:	mov    ds:0xacf214fe,al
  419f0d:	add    eax,0x91d91573
  419f12:	pop    ecx
  419f13:	sbb    eax,0xba8b2596
  419f18:	or     eax,0xe2f44dbe
  419f1d:	rcr    BYTE PTR [ebx+0x5c03da79],cl
  419f23:	pushf  
  419f24:	add    BYTE PTR [ecx-0x2025a277],ah
  419f2a:	imul   esp,DWORD PTR [ebp-0x69],0x225fd8e7
  419f31:	xchg   ecx,eax
  419f32:	add    dl,dl
  419f34:	lods   al,BYTE PTR ds:[esi]
  419f35:	xor    al,0x1a
  419f37:	mov    al,0x5a
  419f39:	ja     0x419f36
  419f3b:	mov    ch,0x37
  419f3d:	mov    cl,0xd5
  419f3f:	dec    ebp
  419f40:	ret    
  419f41:	sub    BYTE PTR [edx+0x2e],cl
  419f44:	or     edx,DWORD PTR [ecx+0x11]
  419f47:	loopne 0x419edd
  419f49:	xchg   ebx,eax
  419f4a:	jl     0x419f60
  419f4c:	pop    esi
  419f4d:	cmp    BYTE PTR [ebp-0x42],0x9d
  419f51:	inc    ebx
  419f52:	sub    edi,0xe29effc2
  419f58:	ja     0x419ef2
  419f5a:	popa   
  419f5b:	mov    cl,0x9
  419f5d:	mov    cl,0x74
  419f5f:	sbb    DWORD PTR ds:0x99ccf4e4,esp
  419f65:	scas   al,BYTE PTR es:[edi]
  419f66:	xchg   edx,eax
  419f67:	inc    esi
  419f68:	es or  al,0xe
  419f6b:	inc    ecx
  419f6c:	xchg   BYTE PTR [edx-0x2c],dl
  419f6f:	sbb    eax,0x428f50ab
  419f74:	retf   0xd6e0
  419f77:	shl    BYTE PTR [edi],0x86
  419f7a:	xlat   BYTE PTR ds:[ebx]
  419f7b:	sbb    dh,BYTE PTR [esi+0x1aa324f7]
  419f81:	push   esi
  419f82:	jno    0x419f2e
  419f84:	jmp    0x419fc8
  419f86:	nop
  419f87:	mov    ebx,DWORD PTR [ebp-0x4b]
  419f8a:	cld    
  419f8b:	jno    0x419f1b
  419f8d:	xchg   BYTE PTR [ebp+0x2c93cfd4],ah
  419f93:	jno    0x419f2f
  419f95:	sub    edx,eax
  419f97:	retf   0xa6c
  419f9a:	es sub dh,dh
  419f9d:	sub    DWORD PTR [edi+edi*1+0x57eea288],0x220665e
  419fa8:	les    ebp,FWORD PTR [esp+eax*2+0x5ed4dc6]
  419faf:	or     al,0x4d
  419fb1:	pop    esp
  419fb2:	daa    
  419fb3:	retf   0x3a47
  419fb6:	xor    ah,BYTE PTR [edx+0x1bdae10c]
  419fbc:	mov    ch,0xcc
  419fbe:	xor    DWORD PTR [edi-0x149ffe1e],esi
  419fc4:	ror    ch,1
  419fc6:	out    dx,eax
  419fc7:	push   es
  419fc8:	dec    edx
  419fc9:	push   edi
  419fca:	scas   al,BYTE PTR es:[edi]
  419fcb:	jmp    0xa268:0xe2d8b875
  419fd2:	pusha  
  419fd3:	imul   ecx,DWORD PTR [eax-0x7d],0xffffffd0
  419fd7:	xchg   ebx,eax
  419fd8:	retf   0x7573
  419fdb:	mov    ?,esp
  419fdd:	cmp    DWORD PTR [edi],ebp
  419fdf:	push   ss
  419fe0:	cs ds hlt 
  419fe3:	xor    al,0x99
  419fe5:	and    al,0x83
  419fe7:	and    ebx,ecx
  419fe9:	cmp    DWORD PTR [ebx+ebp*4-0x46],esp
  419fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fee:	dec    ebx
  419fef:	imul   ebx,DWORD PTR [ebx],0x29
  419ff2:	dec    edi
  419ff3:	aam    0x3c
  419ff5:	into   
  419ff6:	jnp    0x41a041
  419ff8:	xchg   edx,eax
  419ff9:	loope  0x419ff8
  419ffb:	dec    ebx
  419ffc:	pop    eax
  419ffd:	xchg   esi,eax
  419ffe:	test   BYTE PTR [ebp-0x8],bl
  41a001:	adc    DWORD PTR [esi-0x7577578a],0xf0b4bdc4
  41a00b:	clc    
  41a00c:	mov    edx,0x77dc6e0d
  41a011:	sbb    ecx,DWORD PTR [ebx]
  41a013:	pusha  
  41a014:	adc    eax,eax
  41a016:	xor    al,0x43
  41a018:	mov    eax,0xa4df5213
  41a01d:	mov    ds:0x748d6802,al
  41a022:	mov    WORD PTR [ebp+0x63caf0fb],cs
  41a028:	retf   
  41a029:	pusha  
  41a02a:	inc    esp
  41a02b:	sub    eax,eax
  41a02d:	xor    eax,0x23739b71
  41a032:	sub    eax,0x6eb0e251
  41a037:	int    0xc8
  41a039:	push   eax
  41a03a:	cwde   
  41a03b:	scas   al,BYTE PTR es:[edi]
  41a03c:	jno    0x41a055
  41a03e:	iret   
  41a03f:	push   esp
  41a040:	rol    BYTE PTR ds:[esi-0x12],cl
  41a044:	or     bh,BYTE PTR [edi+0x3d8caf26]
  41a04a:	cmp    cl,ch
  41a04c:	push   esp
  41a04d:	outs   dx,DWORD PTR ds:[esi]
  41a04e:	push   0x48
  41a050:	(bad)  
  41a051:	adc    esp,DWORD PTR [ebx-0x18f659f5]
  41a057:	out    0x5b,al
  41a059:	mov    al,0xe8
  41a05b:	push   0xe71254fb
  41a060:	xor    bl,BYTE PTR [edi]
  41a062:	cmp    esi,DWORD PTR [esp+ebp*1-0x14823190]
  41a069:	outs   dx,BYTE PTR ds:[esi]
  41a06a:	mov    bl,0x7e
  41a06c:	in     al,0x3
  41a06e:	dec    edi
  41a06f:	daa    
  41a070:	add    eax,0xb069f9a6
  41a075:	stos   DWORD PTR es:[edi],eax
  41a076:	cmp    BYTE PTR [eax-0x66],0x53
  41a07a:	or     al,0xdd
  41a07c:	addr16 and ebx,esp
  41a07f:	popa   
  41a080:	lahf   
  41a081:	and    ecx,DWORD PTR [ecx-0x28865e9c]
  41a087:	shl    cl,1
  41a089:	jmp    FWORD PTR [edi-0x6dde57db]
  41a08f:	jge    0x41a035
  41a091:	adc    DWORD PTR [ebx],esp
  41a093:	mov    ah,0xd8
  41a095:	lods   eax,DWORD PTR ds:[esi]
  41a096:	cmp    BYTE PTR [ebx-0x62feaeb3],bh
  41a09c:	mov    ebx,DWORD PTR [edx+0x7d]
  41a09f:	retf   
  41a0a0:	xchg   ebx,eax
  41a0a1:	test   BYTE PTR [ecx+0x31],0xa3
  41a0a5:	xchg   edx,eax
  41a0a6:	inc    esp
  41a0a7:	xchg   esi,eax
  41a0a8:	dec    edx
  41a0a9:	sub    BYTE PTR [ebp-0x185d9b40],0x1
  41a0b0:	push   eax
  41a0b1:	stos   BYTE PTR es:[edi],al
  41a0b2:	imul   ebp,DWORD PTR [edi+0x1f],0x6826ecca
  41a0b9:	adc    BYTE PTR [edi+0x18],bh
  41a0bc:	and    cl,al
  41a0be:	or     ecx,DWORD PTR [edx*4+0x23d3c210]
  41a0c5:	xchg   ecx,eax
  41a0c6:	jmp    0x87088e66
  41a0cb:	fs mov ebp,0x61def231
  41a0d1:	jno    0x41a085
  41a0d3:	ds retf 
  41a0d5:	mov    dh,0x1
  41a0d7:	cmc    
  41a0d8:	xchg   BYTE PTR [ebx+0x4bc26bc5],al
  41a0de:	test   eax,0xc77d20d2
  41a0e3:	push   edi
  41a0e5:	pop    ecx
  41a0e6:	je     0x41a08e
  41a0e8:	mov    bh,0xe9
  41a0ea:	push   esp
  41a0eb:	rcl    BYTE PTR [eax+esi*2-0x45],cl
  41a0ef:	inc    edx
  41a0f0:	jle    0x41a0fe
  41a0f2:	in     eax,dx
  41a0f3:	sub    BYTE PTR [edi],ah
  41a0f5:	(bad)  [eax+ebp*1]
  41a0f8:	mov    ds:0x9212ed3,eax
  41a0fd:	jge    0x41a0ae
  41a0ff:	sbb    DWORD PTR [eax],ebx
  41a101:	mov    dl,0x9a
  41a103:	jge    0x41a111
  41a105:	test   BYTE PTR [eax-0x79],cl
  41a108:	sub    DWORD PTR [ebx+0x27],ebp
  41a10b:	add    al,0xc8
  41a10d:	ds adc eax,0x984b9d88
  41a113:	imul   edx,ebx,0xffffff9a
  41a116:	sahf   
  41a117:	pop    esi
  41a118:	loope  0x41a147
  41a11a:	xor    cl,BYTE PTR [edx]
  41a11c:	xchg   esi,eax
  41a11d:	arpl   WORD PTR [eax],cx
  41a11f:	jb     0x41a1a0
  41a121:	cmp    DWORD PTR [ebx-0x5e],ecx
  41a124:	fwait
  41a125:	out    0x55,eax
  41a127:	cwde   
  41a128:	jb     0x41a19c
  41a12a:	and    bl,BYTE PTR [eax-0x28]
  41a12d:	push   eax
  41a12e:	xor    al,0x4c
  41a130:	cs jge 0x41a112
  41a133:	in     al,dx
  41a134:	and    al,BYTE PTR [esi]
  41a136:	iret   
  41a137:	pop    edi
  41a138:	and    DWORD PTR [ebx-0x79],eax
  41a13b:	and    cl,bl
  41a13d:	es daa 
  41a13f:	iret   
  41a140:	std    
  41a141:	xor    eax,0xd1ee401c
  41a146:	outs   dx,DWORD PTR ds:[esi]
  41a147:	inc    esp
  41a148:	add    al,0x20
  41a14a:	pop    ebp
  41a14b:	lock xchg esp,eax
  41a14d:	cmp    DWORD PTR [esi+0x39],0x3f
  41a151:	aad    0x67
  41a153:	cmp    ebp,DWORD PTR [edi-0x45f653de]
  41a159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a15a:	retf   0xcff5
  41a15d:	add    al,0xef
  41a15f:	or     DWORD PTR [edi],edx
  41a161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a162:	test   eax,0xe84fac29
  41a167:	ret    
  41a168:	addr16 aas 
  41a16a:	inc    edi
  41a16b:	add    dh,al
  41a16d:	mov    dh,0xc5
  41a16f:	cmp    edx,ecx
  41a171:	test   ebp,ebx
  41a173:	aaa    
  41a174:	retf   0x72a9
  41a177:	jne    0x41a1da
  41a179:	cmp    ecx,DWORD PTR [eax+0x74]
  41a17c:	and    eax,0x4b0839f8
  41a181:	mov    edi,0x9692c026
  41a186:	sbb    bl,ch
  41a188:	out    dx,eax
  41a189:	sahf   
  41a18a:	push   es
  41a18b:	mov    ds:0x4a1b6b18,al
  41a190:	xlat   BYTE PTR ds:[ebx]
  41a191:	cwde   
  41a192:	jns    0x41a1ba
  41a194:	in     eax,0x20
  41a196:	inc    ecx
  41a197:	xor    BYTE PTR [esi-0x5b],bh
  41a19a:	call   0xe799f3a6
  41a19f:	enter  0xbdf2,0xa4
  41a1a3:	mov    ecx,0xbcf48dec
  41a1a8:	cdq    
  41a1a9:	cdq    
  41a1aa:	sti    
  41a1ab:	mov    al,ds:0x745d7b64
  41a1b0:	aam    0x76
  41a1b2:	ror    DWORD PTR ds:0x59b36077,cl
  41a1b8:	xor    esi,DWORD PTR [esi-0x76a59848]
  41a1be:	cmp    al,0x94
  41a1c0:	mov    ebx,0x435cd338
  41a1c5:	mov    bh,0x73
  41a1c7:	das    
  41a1c8:	dec    esp
  41a1c9:	xchg   edx,eax
  41a1ca:	cdq    
  41a1cb:	push   ss
  41a1cc:	int3   
  41a1cd:	pop    edx
  41a1ce:	mov    edx,0xfec15651
  41a1d3:	repnz fild QWORD PTR [edx-0x6b39424c]
  41a1da:	jg     0x41a16b
  41a1dc:	in     al,dx
  41a1dd:	xchg   ecx,eax
  41a1de:	je     0x41a1e6
  41a1e0:	call   0x8df2087b
  41a1e5:	ret    
  41a1e6:	shl    ch,1
  41a1e8:	sbb    ebx,DWORD PTR [ebx+0x733ddf76]
  41a1ee:	mov    esi,0x3bcea947
  41a1f3:	pop    es
  41a1f4:	push   ecx
  41a1f5:	ss (bad) 
  41a1f7:	xchg   esi,eax
  41a1f8:	inc    esi
  41a1f9:	jp     0x41a22c
  41a1fb:	xchg   ebx,eax
  41a1fc:	clc    
  41a1fd:	inc    esi
  41a1fe:	dec    eax
  41a1ff:	ins    BYTE PTR es:[edi],dx
  41a200:	push   ds
  41a201:	mov    al,ds:0x9b002c52
  41a206:	imul   DWORD PTR [edx+0x5d]
  41a209:	les    ebp,FWORD PTR ds:0x18aff7d6
  41a20f:	xor    ecx,ebp
  41a211:	mov    edi,0x328dd745
  41a216:	pop    ebx
  41a217:	ret    0x4c43
  41a21a:	and    DWORD PTR [esi+ebp*2+0x60],edx
  41a21e:	jl     0x41a1b5
  41a220:	loop   0x41a1cf
  41a222:	sub    DWORD PTR [ebx],edx
  41a224:	lds    esi,FWORD PTR [edi+ebx*1]
  41a227:	inc    ecx
  41a228:	sti    
  41a229:	mov    al,0x22
  41a22b:	jne    0x41a219
  41a22d:	sti    
  41a22e:	arpl   WORD PTR [eax+0x6d1083b1],bp
  41a234:	mov    bh,0x15
  41a236:	and    al,0x3b
  41a238:	and    eax,0x42ec63e2
  41a23d:	jg     0x41a1ce
  41a23f:	mov    ds:0x2dd9363f,al
  41a244:	ret    
  41a245:	ss (bad) 
  41a248:	jp     0x41a257
  41a24a:	bound  ecx,QWORD PTR [ebx+ebp*8+0x245c2ae3]
  41a251:	data16 cmp al,dh
  41a254:	and    DWORD PTR [ebx+0x1f],0x42
  41a258:	arpl   WORD PTR [ebx-0x1c],si
  41a25b:	mov    esp,DWORD PTR [ebp+0x78]
  41a25e:	fsubr  DWORD PTR [edi]
  41a260:	sbb    eax,0x585bfdff
  41a265:	xchg   BYTE PTR [ebp-0x5],ch
  41a268:	xchg   edx,eax
  41a269:	or     bh,ah
  41a26b:	pop    esi
  41a26c:	sahf   
  41a26d:	jb     0x41a2bd
  41a26f:	test   al,0xe7
  41a271:	loopne 0x41a221
  41a273:	(bad)  [ecx+0x4cc51ad8]
  41a279:	dec    esp
  41a27a:	fild   DWORD PTR [ecx-0x49]
  41a27d:	cmc    
  41a27e:	repnz ss leave 
  41a281:	pop    eax
  41a282:	xor    dh,BYTE PTR [eax]
  41a284:	shl    dh,1
  41a286:	xor    DWORD PTR [eax+edx*8+0x2db3b7ae],esp
  41a28d:	xchg   BYTE PTR [ebp+0x310c8ab9],ch
  41a293:	pop    eax
  41a294:	sbb    ecx,ebx
  41a296:	int3   
  41a297:	adc    ecx,DWORD PTR [eax+0x2d]
  41a29a:	mov    ebp,0x359e4950
  41a29f:	js     0x41a2e0
  41a2a1:	repz mov al,ds:0xda1b70fe
  41a2a7:	inc    ebp
  41a2a8:	(bad)  
  41a2a9:	mov    ds:0x69325f5,al
  41a2ae:	jns    0x41a2ff
  41a2b0:	aam    0x69
  41a2b2:	(bad)  
  41a2b3:	pop    ebp
  41a2b4:	arpl   WORD PTR [ebx*4-0x8703d11],cx
  41a2bb:	jecxz  0x41a2fd
  41a2bd:	bnd js 0x41a2b2
  41a2c0:	dec    esi
  41a2c1:	or     bh,BYTE PTR ds:0xe2151216
  41a2c7:	ficomp DWORD PTR [esi-0x52e14224]
  41a2cd:	pop    ebx
  41a2ce:	sub    BYTE PTR [edi+0x32],bh
  41a2d1:	sbb    ebx,DWORD PTR [ebx+0x27]
  41a2d4:	xor    al,BYTE PTR ds:0x7ffd12eb
  41a2da:	jge    0x41a291
  41a2dc:	cmc    
  41a2dd:	js     0x41a320
  41a2df:	mov    ebp,0xd4de61d9
  41a2e4:	or     ecx,esi
  41a2e6:	or     bl,BYTE PTR [esi]
  41a2e8:	xchg   edx,eax
  41a2e9:	dec    edx
  41a2ea:	cmp    ebx,ecx
  41a2ec:	xor    DWORD PTR [edi+0x4c52818b],edi
  41a2f2:	jo     0x41a34c
  41a2f4:	stos   BYTE PTR es:[edi],al
  41a2f5:	das    
  41a2f6:	or     BYTE PTR [edi+ebp*8+0x6b],ah
  41a2fa:	(bad)  
  41a2fb:	jae    0x41a2f2
  41a2fd:	ficom  DWORD PTR [ecx-0x59ec230c]
  41a303:	cli    
  41a304:	mov    ch,0xc7
  41a306:	sti    
  41a307:	push   edi
  41a308:	iret   
  41a309:	xchg   edi,eax
  41a30a:	jmp    0xd04e5738
  41a30f:	mov    ebp,0xf9c95eec
  41a314:	xchg   edx,eax
  41a315:	scas   eax,DWORD PTR es:[edi]
  41a316:	mov    DWORD PTR [eax+0x11],eax
  41a319:	addr16 inc edx
  41a31b:	outs   dx,BYTE PTR ds:[esi]
  41a31c:	cdq    
  41a31d:	jno    0x41a378
  41a31f:	popf   
  41a320:	inc    eax
  41a321:	dec    ebx
  41a322:	jno    0x41a2df
  41a324:	mov    ecx,0xc1e0bada
  41a329:	shr    eax,1
  41a32b:	retf   
  41a32c:	jns    0x41a2d8
  41a32e:	rcl    BYTE PTR [edx],cl
  41a330:	dec    edi
  41a331:	out    dx,al
  41a332:	cmp    cl,BYTE PTR [eax*8-0x2dddb95]
  41a339:	mov    ah,0xa0
  41a33b:	xor    edi,ebx
  41a33d:	mov    bh,0xad
  41a33f:	xchg   DWORD PTR [eax+0x3a],esp
  41a342:	dec    eax
  41a343:	test   BYTE PTR [ecx-0x5f2a041],al
  41a349:	fild   WORD PTR [esi]
  41a34b:	das    
  41a34c:	push   es
  41a34d:	sbb    ecx,DWORD PTR [ebp+0x56]
  41a350:	sbb    DWORD PTR [esi],ebp
  41a352:	sbb    ch,BYTE PTR [eax+0x7c13eb7b]
  41a358:	or     eax,0xe87b64ac
  41a35d:	xchg   ecx,eax
  41a35e:	mov    esp,0x878a30bb
  41a363:	iret   
  41a364:	call   0x1ff43159
  41a369:	outs   dx,BYTE PTR ds:[esi]
  41a36a:	jne    0x41a316
  41a36c:	cmp    eax,0xbb6002ed
  41a371:	xchg   ebx,edi
  41a373:	cmp    bh,BYTE PTR [ecx-0x27]
  41a376:	and    esp,DWORD PTR [edx*8+0xd226593]
  41a37d:	mov    ebp,0xcd701f92
  41a382:	fild   DWORD PTR [edx]
  41a384:	popf   
  41a385:	lods   al,BYTE PTR ds:[esi]
  41a386:	sub    eax,0x578b69e5
  41a38b:	ja     0x41a39c
  41a38d:	jecxz  0x41a350
  41a38f:	scas   eax,DWORD PTR es:[edi]
  41a390:	pop    es
  41a391:	shl    ah,cl
  41a393:	or     eax,0xdc63c283
  41a398:	xor    al,0xe2
  41a39a:	fidivr DWORD PTR [ebx+eiz*8-0x2c4c26ae]
  41a3a1:	jmp    0x6a956213
  41a3a6:	lods   eax,DWORD PTR ds:[esi]
  41a3a7:	add    cl,dh
  41a3a9:	xchg   esp,eax
  41a3aa:	inc    edx
  41a3ab:	inc    ebx
  41a3ac:	cmp    ah,bl
  41a3ae:	repnz adc bh,cl
  41a3b1:	mov    edx,eax
  41a3b3:	aaa    
  41a3b4:	shl    DWORD PTR [ebx],0x1
  41a3b7:	dec    ebp
  41a3b8:	push   cs
  41a3b9:	repnz test eax,0x1afc2be4
  41a3bf:	stos   DWORD PTR es:[edi],eax
  41a3c0:	retf   0x1c77
  41a3c3:	mov    al,0x82
  41a3c5:	pop    eax
  41a3c6:	add    ch,cl
  41a3c8:	dec    ecx
  41a3c9:	inc    eax
  41a3ca:	pop    esi
  41a3cb:	and    al,0x59
  41a3cd:	shr    DWORD PTR ds:0x618c7041,0xd1
  41a3d4:	and    dl,BYTE PTR ds:0x115842ac
  41a3da:	ds push ebp
  41a3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3dd:	pop    ss
  41a3de:	mov    eax,ds:0x616c4fa3
  41a3e3:	mov    al,BYTE PTR [esi]
  41a3e5:	test   eax,0xbe035a48
  41a3ea:	shl    esp,1
  41a3ec:	and    al,0x22
  41a3ee:	sub    al,0x2c
  41a3f1:	loop   0x41a38a
  41a3f3:	fcmovnbe st,st(1)
  41a3f5:	cdq    
  41a3f6:	stc    
  41a3f7:	mov    dl,0x4
  41a3f9:	daa    
  41a3fa:	xchg   DWORD PTR [esi],esp
  41a3fc:	mov    edx,0xb8e0a684
  41a401:	dec    ebx
  41a402:	(bad)  
  41a403:	cmp    al,0x51
  41a405:	rcl    DWORD PTR [esi-0xf],1
  41a408:	pop    ebp
  41a409:	(bad)  
  41a40a:	fcomp  QWORD PTR [ebx]
  41a40c:	and    ebp,DWORD PTR [ecx]
  41a40e:	push   ds
  41a40f:	dec    edi
  41a410:	sbb    eax,0x1ed86d38
  41a415:	dec    edi
  41a416:	js     0x41a3f8
  41a418:	mov    DWORD PTR [ecx+0x1f803e2e],esp
  41a41e:	xor    eax,0x80e3e680
  41a423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a424:	and    dh,BYTE PTR [edi]
  41a426:	das    
  41a427:	pushf  
  41a428:	loope  0x41a3ac
  41a42a:	cwde   
  41a42b:	adc    BYTE PTR [edi-0x68],ah
  41a42e:	into   
  41a42f:	icebp  
  41a430:	mov    ah,0xa4
  41a432:	test   eax,0xf1dab88d
  41a437:	lods   al,BYTE PTR ds:[esi]
  41a438:	fisttp DWORD PTR [esi-0x7e]
  41a43b:	add    BYTE PTR [esi-0xf],bh
  41a43e:	or     al,0x42
  41a440:	loop   0x41a3d3
  41a442:	or     eax,0xfb3a5bea
  41a447:	cs mov eax,ds:0xf5a8091e
  41a44e:	xchg   ecx,eax
  41a44f:	outs   dx,BYTE PTR ds:[esi]
  41a450:	cmp    ch,BYTE PTR [eax]
  41a452:	dec    eax
  41a453:	iret   
  41a454:	jns    0x41a487
  41a456:	or     BYTE PTR [esi+eax*1],al
  41a459:	loope  0x41a42c
  41a45b:	test   DWORD PTR [edx],edi
  41a45d:	sbb    edx,DWORD PTR [ebx-0x51]
  41a460:	mov    ecx,0xa8f1a1a9
  41a465:	fnstsw WORD PTR [edx-0x2b]
  41a468:	and    BYTE PTR [ebp+0xbced22b],0x9f
  41a46f:	mov    BYTE PTR [edi-0x6a],bh
  41a472:	sar    BYTE PTR es:[ecx-0x16],cl
  41a476:	xchg   DWORD PTR [ebx+0x64944ceb],ebp
  41a47c:	rcl    DWORD PTR [ecx],1
  41a47e:	retf   0x1b9c
  41a481:	add    al,0x36
  41a483:	loope  0x41a44a
  41a485:	sbb    DWORD PTR [esi+0x13b8cae5],esp
  41a48b:	jecxz  0x41a415
  41a48d:	jbe    0x41a461
  41a48f:	out    0xe9,eax
  41a491:	fdivr  DWORD PTR [ecx+0x2f]
  41a494:	push   ebp
  41a495:	or     edi,DWORD PTR [ebx]
  41a497:	xchg   edi,eax
  41a498:	sbb    esi,ecx
  41a49a:	pushf  
  41a49b:	or     eax,0x9e965fc4
  41a4a0:	hlt    
  41a4a1:	mov    ds:0x82ac82d6,al
  41a4a6:	jecxz  0x41a487
  41a4a8:	repnz pop es
  41a4aa:	and    DWORD PTR [edi],0x48
  41a4ad:	test   eax,0x505da744
  41a4b2:	aas    
  41a4b3:	pop    ebp
  41a4b4:	pop    esi
  41a4b5:	inc    edi
  41a4b6:	ficom  DWORD PTR [ebx]
  41a4b8:	(bad)  [ebp+edx*4+0x70]
  41a4bc:	sti    
  41a4bd:	pop    ss
  41a4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4bf:	mov    ebx,0x3c013caa
  41a4c4:	push   esp
  41a4c5:	je     0x41a4b8
  41a4c7:	inc    ecx
  41a4c8:	mov    ecx,0xefefcaf5
  41a4cd:	pop    ebx
  41a4ce:	ror    ch,cl
  41a4d0:	add    al,0x7e
  41a4d2:	in     eax,0xf7
  41a4d4:	push   edi
  41a4d5:	xor    bh,dh
  41a4d7:	and    eax,0xdd33005c
  41a4dc:	adc    BYTE PTR [esi-0x2bd5492a],ch
  41a4e2:	jno    0x41a4b7
  41a4e4:	or     BYTE PTR [edx-0x56493d45],0x91
  41a4eb:	test   al,0x93
  41a4ed:	pop    ebp
  41a4ee:	in     al,dx
  41a4ef:	dec    edi
  41a4f0:	add    ah,BYTE PTR ds:0xd25f9b2a
  41a4f6:	loopne 0x41a4bd
  41a4f8:	inc    esi
  41a4f9:	inc    edi
  41a4fa:	call   DWORD PTR [eax]
  41a4fc:	inc    ecx
  41a4fd:	dec    ecx
  41a4fe:	pop    esi
  41a4ff:	mov    al,ds:0xc19d4687
  41a504:	stos   BYTE PTR es:[edi],al
  41a505:	push   ebp
  41a506:	mov    al,0xb
  41a508:	repnz add BYTE PTR [edx+edx*4],0x3b
  41a50d:	fild   DWORD PTR [esi]
  41a50f:	cs mov edx,0xe912b756
  41a515:	aas    
  41a516:	aas    
  41a517:	leave  
  41a518:	pop    ebp
  41a519:	(bad)  
  41a51a:	(bad)  
  41a51b:	mov    es,WORD PTR [edx-0x1c]
  41a51e:	or     BYTE PTR [esi-0x80],ch
  41a521:	cmc    
  41a522:	dec    eax
  41a523:	sahf   
  41a524:	push   es
  41a525:	mov    bh,0xe8
  41a527:	out    0xf2,al
  41a529:	nop
  41a52a:	mov    cl,BYTE PTR [ecx]
  41a52c:	imul   edi,DWORD PTR [esp+eax*2+0x16],0x63b938ca
  41a534:	sbb    ah,0x1e
  41a537:	inc    esi
  41a538:	call   0x84ce:0xdf97609c
  41a53f:	mov    bh,0x8c
  41a541:	dec    edx
  41a542:	pop    ecx
  41a543:	fdiv   DWORD PTR [ebx]
  41a545:	or     eax,edx
  41a547:	fld    DWORD PTR ds:[ebp+0x5ed49d43]
  41a54e:	std    
  41a54f:	pop    esi
  41a550:	cmp    cl,BYTE PTR [edi]
  41a552:	iret   
  41a553:	sub    al,0x59
  41a555:	mov    DWORD PTR [ebx+0x6c],edx
  41a558:	mov    edx,0x53a77d38
  41a55d:	shr    DWORD PTR fs:[ebx-0x5bd2f506],0x64
  41a565:	fisub  WORD PTR [ecx+0x5913fe37]
  41a56b:	push   ebp
  41a56c:	adc    eax,0xe34eea0b
  41a571:	xchg   DWORD PTR [esp+edi*1],esi
  41a574:	es add eax,edx
  41a577:	push   edx
  41a578:	fimul  DWORD PTR [edi+0x5]
  41a57b:	jg     0x41a520
  41a57d:	not    DWORD PTR [ecx+0x4fad7ee1]
  41a583:	inc    eax
  41a584:	les    edi,FWORD PTR [eax+0x63]
  41a587:	mov    ebp,0x3aab8ef5
  41a58c:	add    bl,BYTE PTR [edi+0x64]
  41a58f:	push   ds
  41a590:	sahf   
  41a591:	jbe    0x41a513
  41a593:	call   DWORD PTR [edx]
  41a595:	lahf   
  41a596:	mov    bl,0xa1
  41a598:	mov    bl,0xe8
  41a59a:	xchg   esp,eax
  41a59b:	jmp    0x2134:0x4471c1d4
  41a5a2:	ror    BYTE PTR [ebx-0x53],0xbd
  41a5a6:	out    dx,al
  41a5a7:	push   cs
  41a5a8:	push   0x4a
  41a5aa:	push   edx
  41a5ab:	ins    BYTE PTR es:[edi],dx
  41a5ac:	neg    BYTE PTR [ebp+edx*1-0x1aa302c2]
  41a5b3:	adc    eax,0x4fbaec38
  41a5b8:	out    0x54,al
  41a5ba:	adc    al,0xd2
  41a5bc:	cmp    bh,BYTE PTR [eax]
  41a5be:	push   ecx
  41a5bf:	xor    BYTE PTR [esi+edx*4-0x1c576a2b],al
  41a5c6:	adc    BYTE PTR [esi],bl
  41a5c8:	dec    edx
  41a5c9:	mov    dh,0x1c
  41a5cb:	lods   al,BYTE PTR ds:[esi]
  41a5cc:	cmp    ebp,DWORD PTR [edx-0x48]
  41a5cf:	adc    edi,ecx
  41a5d1:	sub    al,0xda
  41a5d3:	and    al,0x45
  41a5d5:	sub    al,0xe6
  41a5d7:	and    BYTE PTR [edx+ecx*2+0x3f0064c6],dl
  41a5de:	mov    dh,0xce
  41a5e0:	cmp    BYTE PTR [edx],ch
  41a5e2:	mov    esp,0xf51a5df
  41a5e7:	pop    es
  41a5e8:	sbb    al,0x33
  41a5ea:	xor    cl,BYTE PTR [ecx+0x634aefec]
  41a5f0:	mov    fs,WORD PTR [eax+eiz*8]
  41a5f3:	ins    DWORD PTR es:[edi],dx
  41a5f4:	push   0x2e5dfcff
  41a5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5fa:	jb     0x41a5a8
  41a5fc:	int    0xa1
  41a5fe:	and    al,0x95
  41a600:	mov    edx,0xfb7e073f
  41a605:	pop    ebp
  41a606:	jbe    0x41a59f
  41a608:	loop   0x41a58a
  41a60a:	pop    ebp
  41a60b:	cdq    
  41a60c:	je     0x41a68a
  41a60e:	imul   edx,DWORD PTR es:[ebx+0x63b72a],0x9ca8aed0
  41a619:	(bad)  
  41a61a:	ins    BYTE PTR es:[edi],dx
  41a61b:	jno    0x41a60e
  41a61d:	lock aas 
  41a61f:	jle    0x41a65a
  41a621:	sub    eax,DWORD PTR [eax]
  41a623:	lock sbb al,0xae
  41a626:	or     BYTE PTR [ecx+0x7b],al
  41a629:	ins    BYTE PTR es:[edi],dx
  41a62a:	add    DWORD PTR [esi+0xc694ca1],0x7fa98c37
  41a634:	mov    dl,0xaf
  41a636:	mov    ebp,0xcc7d992b
  41a63b:	dec    ebp
  41a63c:	int3   
  41a63d:	inc    ebx
  41a63e:	adc    ecx,DWORD PTR [edi+0x24]
  41a641:	pusha  
  41a642:	xchg   BYTE PTR [eax-0x63],al
  41a645:	test   BYTE PTR [esi],al
  41a647:	adc    ch,BYTE PTR [edi]
  41a649:	out    0xcc,eax
  41a64b:	mov    eax,0x9a12c9e0
  41a650:	fsubr  QWORD PTR [edi]
  41a652:	cmp    al,0x95
  41a654:	das    
  41a655:	and    eax,0xd871b31c
  41a65a:	pushf  
  41a65b:	test   bh,dl
  41a65d:	adc    BYTE PTR [edx-0x4121d9c7],bl
  41a663:	dec    ebp
  41a664:	jmp    0xc16a58a1
  41a669:	not    ebx
  41a66b:	idiv   BYTE PTR [eax+0x4e]
  41a66e:	mov    al,ds:0x8bf3fc1c
  41a673:	cmp    BYTE PTR [ebx+0x67efa97a],0xd3
  41a67a:	xor    BYTE PTR [ebx-0x1ea79896],0xe0
  41a681:	mov    ds:0x3d91d88a,al
  41a686:	pop    edi
  41a687:	adc    al,0xdd
  41a689:	dec    eax
  41a68a:	dec    edx
  41a68b:	jmp    0x41a641
  41a68d:	xchg   ebp,eax
  41a68e:	sti    
  41a68f:	in     eax,0xd9
  41a691:	cmovge eax,DWORD PTR [eax+edx*4+0x6a]
  41a696:	jno    0x41a663
  41a698:	rcr    BYTE PTR [edi],0xf
  41a69b:	dec    ebp
  41a69c:	loop   0x41a645
  41a69e:	cmp    bl,0xd9
  41a6a1:	sbb    al,0x6e
  41a6a3:	sub    DWORD PTR [edi+0x7b85566f],0x1892a85b
  41a6ad:	daa    
  41a6ae:	int    0x7c
  41a6b0:	shr    DWORD PTR [ebx-0x2dd1737c],0xf2
  41a6b7:	imul   esi,DWORD PTR [ebp+0x66],0xffffffa2
  41a6bb:	pop    es
  41a6bc:	lock push 0x67fda6bc
  41a6c2:	mov    al,0x1b
  41a6c5:	stos   BYTE PTR es:[edi],al
  41a6c6:	dec    eax
  41a6c7:	cmp    BYTE PTR [edx-0x4f],bh
  41a6ca:	and    al,0xb9
  41a6cc:	or     ebp,ebp
  41a6ce:	dec    esp
  41a6cf:	mov    esi,0x3eef4c43
  41a6d4:	addr16 je 0x41a74c
  41a6d7:	in     eax,dx
  41a6d8:	sub    al,0x69
  41a6da:	adc    ah,ah
  41a6dc:	(bad)  [ebp+edi*2+0x28b72445]
  41a6e3:	sub    edi,DWORD PTR [edi+ebx*4-0x73]
  41a6e7:	enter  0x8ce3,0x88
  41a6eb:	or     eax,0xb7d8fa24
  41a6f0:	add    edi,eax
  41a6f2:	mov    al,ds:0x1b8a9f31
  41a6f7:	mov    ah,bh
  41a6f9:	inc    esp
  41a6fa:	cmp    esp,DWORD PTR [eax-0x6051eec3]
  41a700:	sub    esp,DWORD PTR [edi+0x2c1402c]
  41a706:	xor    eax,0x2ca3c25d
  41a70b:	adc    BYTE PTR [edi],dh
  41a70d:	ins    BYTE PTR es:[edi],dx
  41a70e:	cs mov ebp,0xb5b467ef
  41a714:	xor    BYTE PTR ds:0xb4954614,al
  41a71a:	dec    edx
  41a71b:	mov    dh,0x1c
  41a71d:	xor    eax,0x8049e259
  41a722:	xor    ecx,DWORD PTR [eax]
  41a724:	ret    0x70a2
  41a727:	push   edi
  41a728:	jecxz  0x41a740
  41a72a:	inc    eax
  41a72b:	(bad)  
  41a72c:	hlt    
  41a72d:	sbb    edx,ebp
  41a72f:	cmp    al,0x57
  41a731:	stos   BYTE PTR es:[edi],al
  41a732:	adc    al,0xe1
  41a734:	pop    esi
  41a735:	bound  ecx,QWORD PTR [ebx+ebp*2-0x55]
  41a739:	inc    edx
  41a73a:	into   
  41a73b:	xor    BYTE PTR [ecx],cl
  41a73d:	lods   al,BYTE PTR ds:[esi]
  41a73e:	addr16 stc 
  41a740:	popa   
  41a741:	adc    DWORD PTR [esi-0x647b401a],edx
  41a747:	int3   
  41a748:	in     eax,dx
  41a749:	fnstenv ds:0xf99d5922
  41a74f:	ficomp DWORD PTR [ebp-0x24]
  41a752:	adc    dh,0x12
  41a755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a756:	mov    esi,0x6f76e259
  41a75b:	inc    ebx
  41a75c:	mov    ebp,0xc4c38b9f
  41a761:	sub    al,BYTE PTR [ecx]
  41a763:	dec    ecx
  41a764:	sub    BYTE PTR [ecx+0x7eaebdd7],ch
  41a76a:	adc    dl,dl
  41a76c:	int3   
  41a76d:	mov    ebx,0x428f5e6
  41a772:	pop    ds
  41a773:	into   
  41a774:	lods   eax,DWORD PTR ds:[esi]
  41a775:	(bad)  
  41a776:	push   ds
  41a777:	aaa    
  41a778:	lods   eax,DWORD PTR ds:[esi]
  41a779:	retf   0x9f12
  41a77c:	sbb    ebp,DWORD PTR [ebp-0x4e]
  41a77f:	call   0x1d11981e
  41a784:	and    eax,0xb9ba2a97
  41a789:	mov    esi,0xae5ec186
  41a78e:	jno    0x41a781
  41a790:	dec    ebx
  41a791:	pop    edx
  41a792:	lahf   
  41a793:	scas   al,BYTE PTR es:[edi]
  41a794:	jmp    0x81e94586
  41a799:	stos   BYTE PTR es:[edi],al
  41a79a:	mov    ds:0x88e4842a,al
  41a79f:	pop    edi
  41a7a0:	add    BYTE PTR es:[ecx-0x5f],ah
  41a7a4:	fbld   TBYTE PTR [ebx]
  41a7a6:	or     bh,dh
  41a7a8:	and    eax,0xc80c0f6c
  41a7ad:	call   0x8e15cf7f
  41a7b2:	retf   0x7d6
  41a7b5:	push   cs
  41a7b6:	mov    bh,0x55
  41a7b8:	repz lea edi,[edx-0x6fee2d7e]
  41a7bf:	gs inc edx
  41a7c1:	ins    DWORD PTR es:[edi],dx
  41a7c2:	pushf  
  41a7c3:	stc    
  41a7c4:	lods   al,BYTE PTR ds:[esi]
  41a7c5:	mov    bh,0xb6
  41a7c7:	out    0x61,eax
  41a7c9:	(bad)  
  41a7ca:	jmp    0x41a7fd
  41a7cc:	cmp    eax,0x62722cf8
  41a7d1:	xchg   ebp,eax
  41a7d2:	(bad)  
  41a7d3:	aas    
  41a7d4:	sbb    ebx,DWORD PTR [ecx]
  41a7d6:	or     eax,0xec1acc1a
  41a7db:	push   0x49ce4afc
  41a7e0:	cmp    BYTE PTR [ebx-0x51807112],cl
  41a7e6:	sub    bh,0x6f
  41a7e9:	sbb    BYTE PTR [ebp-0x67],ah
  41a7ec:	mov    cl,0x0
  41a7ee:	bound  ebp,QWORD PTR [ecx+0x16]
  41a7f1:	add    eax,DWORD PTR [ecx+0x570906b7]
  41a7f7:	mov    ebp,0xbcc7c266
  41a7fc:	icebp  
  41a7fd:	pop    ebx
  41a7fe:	pop    edi
  41a7ff:	mov    al,ds:0x7b68cac4
  41a804:	retf   0x718
  41a807:	scas   al,BYTE PTR es:[edi]
  41a808:	data16 jno 0x41a7f9
  41a80b:	ss jl  0x41a82a
  41a80e:	test   DWORD PTR [esp+eax*8-0x442b2571],0x1d893b6a
  41a819:	add    al,0x75
  41a81b:	not    DWORD PTR [ebp+0x730c534a]
  41a821:	jns    0x41a857
  41a823:	mov    eax,0x2572e5ed
  41a828:	das    
  41a829:	mov    ds:0xd2a8bcad,eax
  41a82e:	jnp    0x41a7cf
  41a830:	mov    BYTE PTR ss:[ebx],al
  41a833:	pusha  
  41a834:	dec    esp
  41a835:	inc    edx
  41a836:	imul   ebx,DWORD PTR [eax-0x17],0x74
  41a83a:	out    0xf,eax
  41a83c:	cmp    DWORD PTR [edi],ebp
  41a83e:	sbb    ch,BYTE PTR [edi]
  41a840:	sbb    BYTE PTR fs:[esi],dl
  41a843:	inc    esi
  41a844:	fsubr  QWORD PTR [ebp+0x3ff4bc11]
  41a84a:	mov    ds:0x5d82081a,eax
  41a84f:	inc    esi
  41a850:	mov    ah,0xa
  41a852:	cs add al,bl
  41a855:	jbe    0x41a8a4
  41a857:	jne    0x41a804
  41a859:	pusha  
  41a85a:	xchg   ecx,eax
  41a85b:	daa    
  41a85c:	and    dl,dh
  41a85e:	mov    dl,0x4b
  41a860:	scas   al,BYTE PTR es:[edi]
  41a861:	push   edi
  41a862:	out    dx,al
  41a863:	inc    eax
  41a864:	mov    edi,0x442ae372
  41a869:	rcl    BYTE PTR [edx],cl
  41a86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a86c:	and    DWORD PTR [ecx],esi
  41a86e:	fcomp  DWORD PTR [eax+0x7a]
  41a871:	push   ebx
  41a872:	sahf   
  41a873:	les    edi,FWORD PTR [edi]
  41a875:	adc    eax,0x20da4c8e
  41a87a:	icebp  
  41a87b:	(bad)  
  41a87c:	stos   DWORD PTR es:[edi],eax
  41a87d:	mov    BYTE PTR [ecx-0x38],ah
  41a880:	in     al,0xa5
  41a882:	aaa    
  41a883:	cwde   
  41a884:	mov    dl,dh
  41a886:	retf   
  41a887:	popf   
  41a888:	enter  0xe6ff,0x38
  41a88c:	std    
  41a88d:	shl    bh,cl
  41a88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a890:	add    dh,al
  41a892:	cmp    BYTE PTR [ebx-0x40],al
  41a895:	push   esp
  41a896:	out    dx,eax
  41a897:	lock jmp 0x41a8f9
  41a89a:	mov    cl,0x1a
  41a89c:	stc    
  41a89d:	mov    ds:0xb1007486,eax
  41a8a2:	pop    ds
  41a8a3:	or     dh,dh
  41a8a5:	bound  ebx,QWORD PTR [eax+0x6a0fac00]
  41a8ab:	xor    al,0x80
  41a8ad:	(bad)  [edx]
  41a8af:	sub    esi,ebp
  41a8b1:	lea    ebx,[eax+edi*1-0x5d]
  41a8b5:	das    
  41a8b6:	test   ebx,ebp
  41a8b8:	imul   esp,DWORD PTR [edx-0x28],0x79
  41a8bc:	sub    DWORD PTR [edi+0x5b],0xe35e9245
  41a8c3:	addr16 call 0x60e4:0x47562e5f
  41a8cb:	sub    BYTE PTR [bp+0x63e3],al
  41a8d0:	dec    ecx
  41a8d1:	in     al,0x5b
  41a8d3:	mov    cl,dl
  41a8d5:	add    ecx,DWORD PTR [edx-0x5daf4d8e]
  41a8db:	mov    dh,0x60
  41a8dd:	jmp    0x16d6213c
  41a8e2:	adc    edi,DWORD PTR [ebx+ecx*4]
  41a8e5:	ror    edx,cl
  41a8e7:	or     DWORD PTR [ebp+0x3d],ebp
  41a8ea:	push   cs
  41a8eb:	adc    DWORD PTR [eax-0x61],esp
  41a8ee:	shl    BYTE PTR [eax-0x9e08816],1
  41a8f4:	iret   
  41a8f5:	cmp    BYTE PTR [ebx+0x57aab3d1],0xa0
  41a8fc:	dec    esi
  41a8fd:	int3   
  41a8fe:	repz add eax,0x42c7297a
  41a904:	out    dx,al
  41a905:	xchg   edx,eax
  41a906:	leave  
  41a907:	add    BYTE PTR [esi],ch
  41a909:	mov    WORD PTR [esi-0x75],es
  41a90c:	int3   
  41a90d:	push   0x9d7878bc
  41a912:	or     cl,BYTE PTR [edx+0x6]
  41a915:	out    dx,al
  41a916:	into   
  41a917:	dec    ebp
  41a918:	adc    ecx,DWORD PTR [edi+0xb]
  41a91b:	jno    0x41a937
  41a91d:	aam    0xff
  41a91f:	xor    esp,DWORD PTR ds:[ebx-0x72db68ae]
  41a926:	or     dh,BYTE PTR [eax-0x55]
  41a929:	test   DWORD PTR [eax],ecx
  41a92b:	pop    ebp
  41a92c:	cmp    eax,0xba76d961
  41a931:	xchg   edx,eax
  41a932:	jns    0x41a986
  41a934:	ins    BYTE PTR es:[edi],dx
  41a935:	jns    0x41a8e9
  41a937:	mov    ds:0xa61504aa,al
  41a93c:	idiv   DWORD PTR [ecx+0x59]
  41a93f:	add    DWORD PTR [ebx+esi*4-0x5161da5a],ecx
  41a946:	jns    0x41a98c
  41a948:	cld    
  41a949:	xor    edx,DWORD PTR [ebx-0x5d332a7a]
  41a94f:	ror    BYTE PTR [ebx],cl
  41a951:	fadd   DWORD PTR ds:0x93747597
  41a957:	das    
  41a958:	enter  0x55a,0x7d
  41a95c:	mov    bh,0xd9
  41a95e:	call   0x28e2:0x17af08e0
  41a965:	imul   DWORD PTR [edx]
  41a967:	xor    eax,0x141176e
  41a96c:	lock ret 0x3204
  41a970:	inc    eax
  41a971:	pushf  
  41a972:	and    ah,BYTE PTR [eax+0x2c9873b2]
  41a978:	adc    dh,dh
  41a97a:	stc    
  41a97b:	and    eax,0x8ae77407
  41a980:	jl     0x41a972
  41a982:	inc    ebx
  41a983:	out    dx,eax
  41a984:	daa    
  41a985:	sub    DWORD PTR [ebx+0x18],ecx
  41a988:	adc    eax,0xbeb963b1
  41a98d:	shl    BYTE PTR ds:0x490f5aae,1
  41a993:	mov    ebx,0x183b20d3
  41a998:	dec    ebp
  41a999:	inc    esp
  41a99a:	or     edx,DWORD PTR [edi]
  41a99c:	mov    edx,0xcc29b913
  41a9a1:	das    
  41a9a2:	lea    esp,[eax-0xf51ba6d]
  41a9a8:	clc    
  41a9a9:	fisubr DWORD PTR [edx]
  41a9ab:	mov    ch,0x67
  41a9ad:	adc    DWORD PTR [esi],esp
  41a9af:	dec    esp
  41a9b0:	mov    dl,0xe4
  41a9b2:	cmp    dh,BYTE PTR [esi]
  41a9b4:	cmp    bl,BYTE PTR [eax-0x4e4c7c12]
  41a9ba:	jecxz  0x41a95b
  41a9bc:	push   ds
  41a9bd:	jns    0x41a9c3
  41a9bf:	xchg   esp,eax
  41a9c0:	rcr    dl,0xc3
  41a9c3:	pop    ecx
  41a9c4:	xchg   ebp,eax
  41a9c5:	out    0x2a,al
  41a9c7:	adc    BYTE PTR [ebx+esi*2+0x24ac7599],ch
  41a9ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9cf:	cld    
  41a9d0:	out    dx,al
  41a9d1:	or     cl,BYTE PTR ds:0xa3b35c0d
  41a9d7:	sub    dh,cl
  41a9d9:	pushf  
  41a9da:	xor    bh,BYTE PTR [ebx+0x63]
  41a9dd:	loopne 0x41aa16
  41a9df:	jmp    0x41a99f
  41a9e1:	cmp    dh,bl
  41a9e3:	push   ebx
  41a9e4:	dec    ebx
  41a9e5:	js     0x41a982
  41a9e7:	or     BYTE PTR [edx],bh
  41a9e9:	mov    ecx,0x6673af54
  41a9ee:	(bad)  
  41a9ef:	rol    BYTE PTR [eax],1
  41a9f1:	fdiv   QWORD PTR [esi]
  41a9f3:	mov    eax,fs
  41a9f5:	inc    esi
  41a9f6:	and    al,0x13
  41a9f8:	xor    al,0x9
  41a9fa:	hlt    
  41a9fb:	mov    ds:0x9aaa95ab,al
  41aa00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa01:	mov    esi,0x75c8220d
  41aa06:	(bad)
  41aa09:	xlat   BYTE PTR ds:[ebx]
  41aa0a:	pop    edx
  41aa0b:	call   0xd811:0xe790df60
  41aa12:	mov    ebp,0xfda46d2d
  41aa17:	iretw  
  41aa19:	fsubp  st(6),st
  41aa1b:	jl     0x41aa4f
  41aa1d:	mov    eax,0xfba61197
  41aa22:	inc    ebx
  41aa23:	mov    ebx,0x4c2c6455
  41aa28:	xor    DWORD PTR [esi+0x57db0b9],esi
  41aa2e:	(bad)  [edi+0x3a]
  41aa31:	mov    ch,0x29
  41aa33:	jg     0x41a9f3
  41aa35:	or     al,0xd0
  41aa37:	mov    cl,0x9a
  41aa39:	jmp    0xebc0:0x3878a69e
  41aa40:	jbe    0x41aa1f
  41aa42:	sub    eax,0x586e69af
  41aa47:	or     DWORD PTR [ecx],ebp
  41aa49:	mov    ebp,0xb3b9b89f
  41aa4e:	test   DWORD PTR [edi],ebx
  41aa50:	mov    esp,0x738e06a5
  41aa55:	out    0x68,al
  41aa57:	pop    ss
  41aa58:	test   al,0xbc
  41aa5a:	mul    DWORD PTR [edx]
  41aa5c:	sbb    DWORD PTR [esp+ecx*4-0x1e78f879],eax
  41aa63:	mov    ebp,DWORD PTR [ecx+0x23]
  41aa66:	(bad)  
  41aa67:	mov    ah,0x76
  41aa69:	push   0x4820eae5
  41aa6e:	shr    DWORD PTR [edx+0x29],cl
  41aa71:	retf   
  41aa72:	imul   esp,DWORD PTR [esi+0xe],0xffffffd5
  41aa76:	(bad)  [eax+0x5d]
  41aa79:	mov    WORD PTR cs:[eax+ecx*4-0x55],ss
  41aa7e:	mov    bh,0xaf
  41aa80:	push   ebp
  41aa81:	cld    
  41aa82:	and    dl,BYTE PTR [ecx-0x10]
  41aa85:	lods   al,BYTE PTR ds:[esi]
  41aa86:	jmp    0x7caa1a21
  41aa8b:	push   ebx
  41aa8c:	popf   
  41aa8d:	inc    BYTE PTR [ebp-0x52ae8a4b]
  41aa93:	push   cs
  41aa94:	shl    BYTE PTR [esi-0x73],cl
  41aa97:	xor    ecx,DWORD PTR [edi+0xc86362e]
  41aa9d:	mov    dh,0xcd
  41aa9f:	dec    esi
  41aaa0:	ret    
  41aaa1:	stos   DWORD PTR es:[edi],eax
  41aaa2:	sub    DWORD PTR [eax+0x74],esi
  41aaa5:	push   esi
  41aaa6:	xor    BYTE PTR [ecx+0x637a5701],ah
  41aaac:	or     ah,ah
  41aaae:	sahf   
  41aaaf:	mov    ds:0xcdde9f5e,al
  41aab4:	ror    DWORD PTR [eax+0x44],1
  41aab7:	icebp  
  41aab8:	sub    eax,0x42830c55
  41aabd:	fiadd  DWORD PTR [edx+0x24]
  41aac0:	xchg   dh,ch
  41aac2:	ins    DWORD PTR es:[edi],dx
  41aac3:	push   edx
  41aac4:	mov    edi,ecx
  41aac6:	scas   al,BYTE PTR es:[edi]
  41aac7:	es icebp 
  41aac9:	jnp    0x41aad5
  41aacb:	or     eax,0x2391c941
  41aad0:	jmp    DWORD PTR [edi]
  41aad2:	inc    eax
  41aad3:	leave  
  41aad4:	and    cl,BYTE PTR [ebp-0x2fe25791]
  41aada:	push   esp
  41aadb:	scas   eax,DWORD PTR es:[edi]
  41aadc:	add    al,0x3a
  41aade:	int    0xae
  41aae0:	leave  
  41aae1:	lock dec edi
  41aae3:	push   esi
  41aae4:	into   
  41aae5:	mov    eax,0xbf755313
  41aaea:	iret   
  41aaeb:	jle    0x41ab67
  41aaed:	test   BYTE PTR [esi+ecx*8+0x37dfefdc],ah
  41aaf4:	ins    DWORD PTR es:[edi],dx
  41aaf5:	cwde   
  41aaf6:	arpl   WORD PTR [eax-0x16],dx
  41aaf9:	cmc    
  41aafa:	inc    esi
  41aafb:	repz pop ebp
  41aafd:	mov    dh,0x38
  41aaff:	pushf  
  41ab00:	xchg   esp,eax
  41ab01:	sbb    eax,0xf9c9c430
  41ab06:	push   0x10635c65
  41ab0b:	lahf   
  41ab0c:	adc    BYTE PTR gs:[edx+0x651fbb6d],bh
  41ab13:	inc    ebp
  41ab14:	mov    ebx,DWORD PTR [ecx-0x67]
  41ab17:	pop    es
  41ab18:	les    eax,FWORD PTR [esi+0x63]
  41ab1b:	stc    
  41ab1c:	sub    DWORD PTR [eax],0xffffff82
  41ab1f:	lock sbb eax,0xc666d73e
  41ab25:	cmp    BYTE PTR [edi-0xd],0x5b
  41ab29:	jp     0x41aac4
  41ab2b:	sub    dh,BYTE PTR [ebx+0x21c7f216]
  41ab31:	adc    al,0xc9
  41ab33:	cs ja  0x41ab6b
  41ab36:	sbb    eax,ebp
  41ab38:	dec    edi
  41ab39:	(bad)  
  41ab3a:	ins    BYTE PTR es:[edi],dx
  41ab3b:	sbb    eax,0x63b880d4
  41ab40:	xchg   edi,eax
  41ab41:	out    dx,eax
  41ab42:	cmp    esp,DWORD PTR ss:[edi+0x81b590a]
  41ab49:	or     BYTE PTR [eax],bl
  41ab4b:	test   eax,0x3094110c
  41ab50:	sub    DWORD PTR [eax-0x3b],edi
  41ab53:	jmp    0x47247203
  41ab58:	test   al,0x47
  41ab5a:	(bad)  
  41ab5b:	fsub   QWORD PTR [ecx+0x51bad1b0]
  41ab61:	cmp    eax,0x69e75b5
  41ab66:	sub    eax,0xeddef5ea
  41ab6b:	cmp    BYTE PTR [edx+0x511057b7],al
  41ab71:	ret    0x43bc
  41ab74:	push   edi
  41ab75:	cmp    bh,BYTE PTR [eax+0x700c3ee4]
  41ab7b:	xor    al,0xf9
  41ab7d:	push   cs
  41ab7e:	cmc    
  41ab7f:	mov    ds:0xb3ad1dd7,eax
  41ab84:	add    bl,cl
  41ab86:	sbb    ebx,DWORD PTR [edi-0x7a2da04c]
  41ab8c:	retf   
  41ab8d:	inc    edx
  41ab8e:	ret    
  41ab8f:	in     al,0x6b
  41ab91:	into   
  41ab92:	jb     0x41ab89
  41ab94:	es ret 0x5dc2
  41ab98:	sbb    bh,al
  41ab9a:	dec    ebp
  41ab9b:	pusha  
  41ab9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab9d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ab9f:	outs   dx,BYTE PTR ds:[esi]
  41aba0:	and    DWORD PTR [edx+0x789032e0],edi
  41aba6:	cli    
  41aba7:	xchg   esi,eax
  41aba8:	jmp    0xef4f:0xf36d30cf
  41abaf:	mov    edi,0xdd0daa0b
  41abb4:	ins    DWORD PTR es:[edi],dx
  41abb5:	jbe    0x41abd8
  41abb7:	xor    eax,DWORD PTR [ebp+0x26274f78]
  41abbd:	shl    BYTE PTR [edi-0x41c7cb03],1
  41abc3:	sar    BYTE PTR [ebp-0x41a8d86d],0xd3
  41abca:	ins    DWORD PTR es:[edi],dx
  41abcb:	test   al,0x1d
  41abcd:	push   esp
  41abce:	push   esi
  41abcf:	xchg   si,ax
  41abd1:	lahf   
  41abd2:	pop    eax
  41abd3:	test   BYTE PTR [edx],0xe0
  41abd6:	add    al,0x90
  41abd8:	outs   dx,BYTE PTR ds:[esi]
  41abd9:	mov    bl,0xb4
  41abdb:	(bad)  
  41abdc:	call   0x46254df2
  41abe1:	dec    ecx
  41abe2:	jle    0x41ab7e
  41abe4:	jbe    0x41abbe
  41abe6:	mov    ss,ecx
  41abe8:	fs push cs
  41abea:	sahf   
  41abeb:	mov    esp,0x1e2dddb5
  41abf0:	ja     0x41ac4b
  41abf2:	mov    esi,0xeaa6b055
  41abf7:	jle    0x41ac08
  41abf9:	push   0x8e698dae
  41abfe:	outs   dx,DWORD PTR ds:[esi]
  41abff:	pop    edx
  41ac00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac01:	inc    esp
  41ac02:	jle    0x41ac38
  41ac04:	jo     0x41abaf
  41ac06:	mov    ah,0x12
  41ac08:	repnz mov al,ds:0xe93fa0d0
  41ac0e:	cmp    eax,0xe6569231
  41ac13:	mov    ds:0x5a010567,al
  41ac18:	into   
  41ac19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1a:	xor    al,0xa7
  41ac1c:	(bad)  
  41ac1d:	xchg   ebp,eax
  41ac1e:	or     edx,ebx
  41ac20:	sar    eax,0xf7
  41ac23:	repz xchg ebx,eax
  41ac25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac26:	jmp    0x41ac5c
  41ac28:	popa   
  41ac29:	(bad)  
  41ac2a:	aaa    
  41ac2b:	jb     0x41ac11
  41ac2d:	xchg   ecx,eax
  41ac2e:	dec    esi
  41ac2f:	mov    WORD PTR ds:0x37df4ce7,cs
  41ac35:	mov    ch,BYTE PTR [eax]
  41ac37:	out    0x2b,eax
  41ac39:	into   
  41ac3a:	push   ebp
  41ac3b:	jl     0x41ac25
  41ac3d:	ss lahf 
  41ac3f:	mov    ebp,0xdfc0b0e1
  41ac44:	lea    ebx,[eax+ebp*4]
  41ac47:	imul   eax,ecx,0xec1e3842
  41ac4d:	mov    ds:0x36582f63,al
  41ac52:	and    edx,DWORD PTR [edx-0x62]
  41ac55:	xchg   esi,eax
  41ac56:	cmp    eax,0x2e480e13
  41ac5b:	ret    
  41ac5c:	jmp    0x6b05:0xf9d1842
  41ac63:	inc    eax
  41ac64:	mov    ebp,ds
  41ac66:	pop    ss
  41ac67:	pop    eax
  41ac68:	mov    BYTE PTR [esi],bl
  41ac6a:	xor    ebx,edi
  41ac6c:	dec    eax
  41ac6d:	lods   al,BYTE PTR ds:[esi]
  41ac6e:	inc    edi
  41ac6f:	out    dx,al
  41ac70:	jae    0x41aca1
  41ac72:	sbb    cl,BYTE PTR ds:0x544fa713
  41ac78:	shr    dh,1
  41ac7a:	fnstsw WORD PTR [eax+0x27dce0b3]
  41ac80:	sbb    DWORD PTR [esi+ebp*2-0x15],ebp
  41ac84:	cmc    
  41ac85:	imul   esi,DWORD PTR [ebp-0x256edd91],0xfa628858
  41ac8f:	mov    eax,0x44210838
  41ac94:	shl    DWORD PTR [edi+0x25],0x2a
  41ac98:	shl    BYTE PTR [esi+0x179322bf],0xb9
  41ac9f:	int3   
  41aca0:	or     al,0x16
  41aca2:	lahf   
  41aca3:	ret    0x3b4e
  41aca6:	sbb    al,0x91
  41aca8:	fidivr WORD PTR [edx+0xeb6d59]
  41acae:	jle    0x41ac3e
  41acb0:	jnp    0x41acb2
  41acb2:	mov    ebx,DWORD PTR [ecx-0x35d86d4b]
  41acb8:	adc    ebx,DWORD PTR [edx]
  41acba:	sbb    al,0x5b
  41acbc:	mov    bh,0x1
  41acbe:	sahf   
  41acbf:	sti    
  41acc0:	aad    0x84
  41acc2:	sbb    dh,ah
  41acc4:	aas    
  41acc5:	xlat   BYTE PTR ds:[ebx]
  41acc6:	xchg   cl,ah
  41acc8:	or     al,0x4b
  41acca:	push   es
  41accb:	call   0x86e5:0xe707130c
  41acd2:	scas   al,BYTE PTR es:[edi]
  41acd3:	das    
  41acd4:	stc    
  41acd5:	inc    ebp
  41acd6:	test   dl,0xd5
  41acd9:	push   es
  41acda:	mov    DWORD PTR [edi+0x55],ebx
  41acdd:	gs scas eax,DWORD PTR es:[edi]
  41acdf:	fbld   TBYTE PTR [esp+edi*4+0xff51ade]
  41ace6:	push   0xa8b57599
  41aceb:	xor    al,0xd8
  41aced:	and    al,BYTE PTR [eax-0x3762e4e8]
  41acf3:	and    eax,0x2a906600
  41acf8:	cdq    
  41acf9:	pusha  
  41acfa:	ja     0x41acfe
  41acfc:	mov    edi,0x2eafec48
  41ad01:	daa    
  41ad02:	and    DWORD PTR [edx],edx
  41ad04:	mov    eax,ds:0xe009ab38
  41ad09:	neg    ebp
  41ad0b:	xchg   esi,eax
  41ad0c:	std    
  41ad0d:	cmp    dl,BYTE PTR [edi+0x5817db1f]
  41ad13:	mov    bl,0x7
  41ad15:	shr    al,1
  41ad17:	mov    edx,0x9727d44d
  41ad1c:	mov    ds:0xb3d0e268,eax
  41ad21:	pushf  
  41ad22:	adc    DWORD PTR [esi+ecx*1+0x4d35acac],esi
  41ad29:	xchg   edi,eax
  41ad2a:	xchg   BYTE PTR [ebp-0x4cbc7320],ah
  41ad30:	pop    edx
  41ad31:	outs   dx,DWORD PTR ds:[esi]
  41ad32:	push   ecx
  41ad33:	inc    esi
  41ad34:	les    edi,FWORD PTR [ebp+0x5f]
  41ad37:	fnstcw WORD PTR [eax]
  41ad39:	fild   DWORD PTR [esi+0x7f]
  41ad3c:	mov    cl,0xf7
  41ad3e:	fist   DWORD PTR [ebp-0x75]
  41ad41:	push   0xffffffa5
  41ad43:	cmp    ah,BYTE PTR [eax+0x725d7c83]
  41ad49:	and    eax,0xffdeaae2
  41ad4e:	fdiv   DWORD PTR [edi-0x78]
  41ad51:	adc    al,BYTE PTR [esi-0x5c952519]
  41ad57:	cdq    
  41ad58:	imul   eax,DWORD PTR [edi+0xd690dcb],0x89022693
  41ad62:	imul   edi,DWORD PTR [edi+0x312051a],0x50fd8004
  41ad6c:	pop    ds
  41ad6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad6e:	je     0x41adde
  41ad70:	hlt    
  41ad71:	sahf   
  41ad72:	pop    es
  41ad73:	popf   
  41ad74:	pop    ss
  41ad75:	test   dl,ah
  41ad77:	hlt    
  41ad78:	pop    es
  41ad79:	icebp  
  41ad7a:	mov    eax,0x67490786
  41ad7f:	inc    ecx
  41ad80:	imul   ebp,DWORD PTR ds:0x6f84ae5c,0xffffffec
  41ad87:	(bad)  
  41ad88:	and    eax,DWORD PTR [ebp+0x1195eb11]
  41ad8e:	inc    ebx
  41ad8f:	push   es
  41ad90:	inc    esi
  41ad91:	mov    bh,0x90
  41ad93:	daa    
  41ad94:	cmp    BYTE PTR [edx],dl
  41ad96:	data16 das 
  41ad98:	dec    ebx
  41ad99:	jb     0x41ad6e
  41ad9b:	mov    dl,BYTE PTR [esi+0x13]
  41ad9e:	mov    ds:0xac920f3e,al
  41ada3:	sub    dl,BYTE PTR [bx+di-0x40de]
  41ada8:	cdq    
  41ada9:	dec    eax
  41adaa:	fsubr  st,st(3)
  41adac:	xchg   BYTE PTR [edi],ch
  41adae:	mov    eax,ds:0x73df038d
  41adb3:	lods   al,BYTE PTR ds:[esi]
  41adb4:	std    
  41adb5:	arpl   WORD PTR [edi+0x4],bp
  41adb8:	leave  
  41adb9:	adc    esi,DWORD PTR [eax]
  41adbb:	or     DWORD PTR [edx-0x3e],esp
  41adbe:	fld    st(5)
  41adc0:	repnz xor BYTE PTR ds:0xf9d6420e,0x3c
  41adc8:	clc    
  41adc9:	mov    dl,0xd4
  41adcb:	pushf  
  41adcc:	sub    eax,0x4077ded9
  41add1:	fidiv  DWORD PTR [esi]
  41add3:	repnz adc DWORD PTR [ebp-0x4334260f],edx
  41adda:	or     BYTE PTR [edx],bl
  41addc:	aam    0xc4
  41adde:	mov    ecx,0x7e540e2d
  41ade3:	and    dl,BYTE PTR [edi+0x42]
  41ade6:	mov    esp,0x9b41a47e
  41adeb:	xchg   esp,eax
  41adec:	out    dx,eax
  41aded:	ins    BYTE PTR es:[edi],dx
  41adee:	mov    DWORD PTR [ebx-0x270f4df2],esp
  41adf4:	mov    edi,0x611b62a1
  41adf9:	add    cl,bh
  41adfb:	adc    cl,BYTE PTR [edi-0x53]
  41adfe:	lods   eax,DWORD PTR ds:[esi]
  41adff:	and    al,0x52
  41ae01:	push   es
  41ae02:	and    BYTE PTR [ebx-0x142e1521],cl
  41ae08:	jmp    0x18edcfae
  41ae0d:	mov    ds:0xec7c38d0,al
  41ae12:	fstp   TBYTE PTR [esp+esi*4]
  41ae15:	jbe    0x41ae26
  41ae17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae18:	aad    0x4a
  41ae1a:	xchg   edx,eax
  41ae1b:	add    bh,cl
  41ae1d:	movq   mm7,QWORD PTR [ebp-0x5d04f949]
  41ae24:	lods   eax,DWORD PTR ds:[esi]
  41ae25:	push   eax
  41ae26:	jae    0x41ae41
  41ae28:	ds stos DWORD PTR es:[edi],eax
  41ae2a:	in     eax,dx
  41ae2b:	out    dx,eax
  41ae2c:	lods   al,BYTE PTR ds:[esi]
  41ae2d:	pop    ss
  41ae2e:	xchg   edi,eax
  41ae2f:	xchg   DWORD PTR [edx],eax
  41ae31:	popa   
  41ae32:	jg     0x41ae3d
  41ae34:	lods   eax,DWORD PTR ds:[esi]
  41ae35:	das    
  41ae36:	rcl    DWORD PTR [ebx+0x74844282],cl
  41ae3c:	rcr    dl,0xa0
  41ae3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae40:	push   eax
  41ae41:	adc    DWORD PTR [eax],eax
  41ae43:	aas    
  41ae44:	xchg   ecx,eax
  41ae45:	in     al,0xc0
  41ae47:	or     DWORD PTR [ecx-0x1ddd71dd],ebp
  41ae4d:	aam    0xea
  41ae4f:	cmp    DWORD PTR [ebp+ebx*4-0x3],esi
  41ae53:	loop   0x41aea0
  41ae55:	and    ebp,ebx
  41ae57:	out    0x8d,al
  41ae59:	mov    ebx,0x5209240c
  41ae5e:	xor    DWORD PTR [ebp+0x1649ac76],ecx
  41ae64:	hlt    
  41ae65:	jl     0x41aea6
  41ae67:	in     eax,dx
  41ae68:	gs in  al,0x91
  41ae6b:	push   ss
  41ae6c:	or     esi,DWORD PTR [eax]
  41ae6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6f:	ds daa 
  41ae71:	div    DWORD PTR [edi]
  41ae73:	lods   eax,DWORD PTR ds:[esi]
  41ae74:	pop    es
  41ae75:	inc    ecx
  41ae76:	or     eax,0x838a4f85
  41ae7b:	dec    edi
  41ae7c:	cmc    
  41ae7d:	dec    esp
  41ae7e:	add    DWORD PTR [ebx+0x63],eax
  41ae81:	add    eax,0x4dc633c7
  41ae86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae87:	mov    esp,0x15cb4863
  41ae8c:	push   eax
  41ae8d:	ins    DWORD PTR es:[edi],dx
  41ae8e:	loop   0x41aedf
  41ae90:	xchg   edx,eax
  41ae91:	or     al,0x7f
  41ae93:	add    al,0x79
  41ae95:	sbb    BYTE PTR [ebx-0x6a50e593],ch
  41ae9b:	xor    al,0xaf
  41ae9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae9e:	and    BYTE PTR [ebp+edx*4+0x57],dh
  41aea2:	or     ah,BYTE PTR [ebx+0x40ed877]
  41aea8:	nop
  41aea9:	or     eax,0xb00058b4
  41aeae:	mov    ds:0x341fb294,al
  41aeb3:	or     DWORD PTR [edi+0x71],esp
  41aeb6:	pop    esp
  41aeb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb8:	fidiv  WORD PTR [ebp-0x3663ea0]
  41aebe:	sbb    BYTE PTR [edx+0x73],dh
  41aec1:	scas   eax,DWORD PTR es:[edi]
  41aec2:	sub    ah,BYTE PTR [edx+0x618945d8]
  41aec8:	jmp    0xfa3f:0xf15ccb8a
  41aecf:	dec    ebp
  41aed0:	push   es
  41aed1:	push   ds
  41aed2:	mov    bl,0xd5
  41aed4:	jnp    0x41ae9a
  41aed6:	push   esp
  41aed7:	out    0x12,eax
  41aed9:	ss (bad) 
  41aedb:	cbw    
  41aedd:	and    DWORD PTR [ebp-0x204c74f1],esi
  41aee3:	ror    ebp,0x2a
  41aee6:	push   0xb
  41aee8:	test   BYTE PTR [esi],0x9e
  41aeeb:	inc    ebx
  41aeec:	aam    0xba
  41aeee:	sub    edx,ecx
  41aef0:	ret    0xb0a4
  41aef3:	add    BYTE PTR ds:0x398d1ca5,ah
  41aef9:	sub    al,0x98
  41aefb:	mov    dl,BYTE PTR [edi-0x33db2c3e]
  41af01:	fs inc eax
  41af03:	fcmovu st,st(4)
  41af05:	loop   0x41aef2
  41af07:	nop
  41af08:	hlt    
  41af09:	fcomp  QWORD PTR [ecx]
  41af0b:	sbb    ah,BYTE PTR [ecx+0x66e8a2e0]
  41af11:	mov    dh,BYTE PTR [eax+0x28]
  41af14:	rcr    BYTE PTR [ebx-0x30],1
  41af17:	loop   0x41aea5
  41af19:	out    dx,eax
  41af1a:	mov    edi,0x98911cbb
  41af1f:	adc    eax,0xad489497
  41af24:	cmp    eax,0x3d5594ad
  41af29:	loope  0x41afa6
  41af2b:	jae    0x41af6f
  41af2d:	fs pusha 
  41af2f:	mov    dl,BYTE PTR [ecx]
  41af31:	pop    esi
  41af32:	add    eax,0x975ea07f
  41af37:	and    edx,DWORD PTR [ebp-0x398e6fdc]
  41af3d:	and    bl,al
  41af3f:	sub    ebp,DWORD PTR [edx-0x619260c1]
  41af45:	xchg   ecx,eax
  41af46:	push   ebp
  41af47:	push   ss
  41af48:	ror    dh,cl
  41af4a:	cmp    ch,BYTE PTR [ebp+0x62]
  41af4d:	or     ecx,DWORD PTR [esi]
  41af4f:	sub    dl,0x43
  41af52:	xor    BYTE PTR [edi+0x21],al
  41af55:	call   0x3c71:0x5b915dbc
  41af5c:	mov    cl,0xb4
  41af5e:	in     al,0x37
  41af60:	(bad)  
  41af61:	sub    ecx,DWORD PTR [ecx]
  41af63:	lods   eax,DWORD PTR ds:[esi]
  41af64:	jp     0x41aef1
  41af66:	dec    ebx
  41af67:	loopne 0x41afac
  41af69:	inc    esp
  41af6a:	(bad)  
  41af6b:	jo     0x41af86
  41af6d:	jne    0x41afd9
  41af6f:	dec    eax
  41af70:	sbb    edi,ebx
  41af72:	test   BYTE PTR [ebx],0x67
  41af75:	add    ah,dh
  41af77:	dec    ecx
  41af78:	bound  ebx,QWORD PTR [ebp+eiz*8+0x22]
  41af7c:	leave  
  41af7d:	or     BYTE PTR [eax+0x11a49905],dl
  41af83:	(bad)
  41af88:	mov    ebx,esp
  41af8a:	arpl   WORD PTR [ebp+0x53],bx
  41af8d:	nop
  41af8e:	rol    DWORD PTR [eax+0x55],cl
  41af91:	inc    esi
  41af92:	out    0xc6,al
  41af94:	shl    DWORD PTR [esi+0x2ca003ee],cl
  41af9a:	rcl    ebx,0x75
  41af9d:	push   ds
  41af9e:	call   0xdf5e9f17
  41afa3:	mov    esp,0x14461bf6
  41afa8:	shr    cl,1
  41afaa:	xchg   edi,eax
  41afab:	jbe    0x41af9e
  41afad:	rcl    BYTE PTR [edx],cl
  41afaf:	or     al,0x8a
  41afb1:	das    
  41afb2:	fidiv  WORD PTR ds:0xd8275b7d
  41afb8:	dec    edx
  41afb9:	lea    esp,[esi]
  41afbb:	and    al,0x7f
  41afbd:	or     ch,BYTE PTR [edx+eiz*1+0x1271bf7e]
  41afc4:	pop    ecx
  41afc5:	test   DWORD PTR [edi-0xf],ebx
  41afc8:	int3   
  41afc9:	mov    ch,0xe4
  41afcb:	add    al,0x6d
  41afcd:	or     BYTE PTR [edx],dh
  41afcf:	mov    DWORD PTR [ebp-0xb],0x2ba9e762
  41afd6:	pop    edx
  41afd7:	mov    esp,DWORD PTR [edx-0xe]
  41afda:	xor    DWORD PTR [ecx+0x66],edi
  41afdd:	xor    eax,0xe3fe3009
  41afe2:	loopne 0x41b018
  41afe4:	sub    al,0x45
  41afe6:	dec    esp
  41afe7:	inc    esi
  41afe8:	inc    ecx
  41afe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afeb:	mov    ds:0xca22985a,al
  41aff0:	sbb    BYTE PTR [ecx-0x38],ch
  41aff3:	dec    eax
  41aff4:	sub    eax,0x3489aa0c
  41aff9:	jp     0x41afb9
  41affb:	xchg   ebx,eax
  41affc:	inc    ebx
  41affd:	std    
  41affe:	in     al,dx
  41afff:	pop    edx
  41b000:	or     edi,DWORD PTR [ebx+0x6525554e]
  41b006:	inc    ebp
  41b007:	mov    bl,bl
  41b009:	shl    BYTE PTR [eax-0x18],1
  41b00c:	rcr    ebx,0x19
  41b00f:	cmp    BYTE PTR [edi+0x386ed6f0],dh
  41b015:	xor    eax,0x3c068ef0
  41b01a:	stc    
  41b01b:	jae    0x41b049
  41b01d:	popf   
  41b01e:	call   0x6bb6:0x26285833
  41b025:	sbb    DWORD PTR [eax+0x27c87e8b],esp
  41b02b:	push   0x65
  41b02d:	jo     0x41afee
  41b02f:	scas   eax,DWORD PTR es:[edi]
  41b030:	sbb    al,0xf1
  41b032:	add    al,0x4d
  41b034:	mov    ch,0xa4
  41b036:	cdq    
  41b037:	inc    edi
  41b038:	jns    0x41b04f
  41b03a:	inc    edx
  41b03b:	and    al,0xb
  41b03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b03e:	dec    ecx
  41b03f:	in     al,0x56
  41b041:	xor    DWORD PTR [edx],ecx
  41b043:	retf   0xc7b1
  41b046:	mov    edi,esp
  41b048:	add    eax,0x853ed944
  41b04d:	std    
  41b04e:	jae    0x41b09a
  41b050:	inc    esp
  41b051:	out    dx,al
  41b052:	daa    
  41b053:	loopne 0x41b082
  41b055:	rol    BYTE PTR [ebp+ebx*2+0x28b62932],cl
  41b05c:	xchg   esi,eax
  41b05d:	add    DWORD PTR [esi-0x49821f95],esi
  41b063:	dec    eax
  41b064:	test   al,0xbb
  41b066:	and    esi,esp
  41b068:	ins    DWORD PTR es:[edi],dx
  41b069:	mov    cl,0xe7
  41b06b:	(bad)  
  41b06c:	sbb    eax,DWORD PTR [ecx+0x6849c21e]
  41b072:	adc    edi,DWORD PTR [eax+0x73]
  41b075:	mov    ah,0x5
  41b078:	dec    edx
  41b079:	pop    esp
  41b07a:	jns    0x41b0e7
  41b07c:	mov    al,ds:0xf2edd8f4
  41b081:	vunpckhps xmm1,xmm3,xmm5
  41b085:	fidivr DWORD PTR [esi]
  41b087:	adc    bh,dl
  41b089:	leave  
  41b08a:	xor    al,0x3c
  41b08c:	xchg   ebp,eax
  41b08d:	inc    ebp
  41b08e:	and    BYTE PTR [ebx+0x19ef018a],bl
  41b094:	and    dl,bh
  41b096:	sub    esi,DWORD PTR [eax+0x9]
  41b099:	out    dx,al
  41b09a:	dec    esp
  41b09b:	hlt    
  41b09c:	aad    0xd8
  41b09e:	sbb    BYTE PTR [edi+ebx*4-0x47],cl
  41b0a2:	dec    edx
  41b0a3:	xchg   ebx,eax
  41b0a4:	ficomp DWORD PTR [eax-0x13]
  41b0a7:	jb     0x41b034
  41b0a9:	int3   
  41b0aa:	mov    BYTE PTR [ecx+0x16ad40f2],dh
  41b0b0:	xchg   dl,al
  41b0b2:	dec    ecx
  41b0b3:	daa    
  41b0b4:	mov    dl,0x93
  41b0b6:	cmp    al,0xd
  41b0b8:	pusha  
  41b0b9:	addr16 inc ecx
  41b0bb:	pmulhw mm2,mm7
  41b0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0bf:	pmullw mm6,QWORD PTR [esi]
  41b0c2:	repnz inc esp
  41b0c4:	cmp    BYTE PTR [edi],bh
  41b0c6:	(bad)  
  41b0c7:	loopne 0x41b0bb
  41b0c9:	icebp  
  41b0ca:	jle    0x41b126
  41b0cc:	jb     0x41b141
  41b0ce:	aas    
  41b0cf:	cdq    
  41b0d0:	imul   ch
  41b0d2:	mov    cl,BYTE PTR [eax-0x2a]
  41b0d5:	pop    ecx
  41b0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d7:	dec    ecx
  41b0d8:	dec    esi
  41b0d9:	loopne 0x41b12f
  41b0db:	pop    ebp
  41b0dc:	push   ebp
  41b0dd:	xor    BYTE PTR [ebp-0x6],ch
  41b0e0:	adc    al,0x27
  41b0e2:	dec    ebp
  41b0e3:	fs out 0x66,al
  41b0e6:	aad    0xb4
  41b0e8:	mov    ah,0xa2
  41b0ea:	sub    ah,cl
  41b0ec:	mov    dh,0xbd
  41b0ee:	ret    
  41b0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f0:	push   eax
  41b0f1:	cwde   
  41b0f2:	scas   eax,DWORD PTR es:[edi]
  41b0f3:	push   ss
  41b0f4:	ftst   
  41b0f6:	not    DWORD PTR [ebx]
  41b0f8:	inc    esi
  41b0f9:	or     eax,DWORD PTR [edx-0x2c1ca050]
  41b0ff:	push   ecx
  41b100:	mov    eax,ds:0x23fa1462
  41b105:	outs   dx,BYTE PTR ds:[esi]
  41b106:	out    dx,eax
  41b107:	call   edi
  41b109:	xlat   BYTE PTR ds:[ebx]
  41b10a:	mov    dl,0x1b
  41b10c:	pop    esi
  41b10d:	test   eax,0xc6adf71b
  41b112:	adc    BYTE PTR [eax],dh
  41b114:	sbb    BYTE PTR [esi-0x76],ah
  41b117:	fld    TBYTE PTR [edi+0x24]
  41b11a:	rol    DWORD PTR [edi],1
  41b11c:	or     ebx,DWORD PTR [edi+0xfe67157]
  41b122:	out    dx,eax
  41b123:	mov    edx,0x4246346b
  41b128:	out    0xe7,eax
  41b12a:	sbb    eax,0xd8201011
  41b12f:	jnp    0x41b0b6
  41b131:	std    
  41b132:	mov    eax,es:0x8d7ac129
  41b138:	sahf   
  41b139:	aam    0x93
  41b13b:	jge    0x41b169
  41b13d:	xchg   esi,eax
  41b13e:	push   0xb43800e4
  41b143:	cli    
  41b144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b145:	or     bl,bl
  41b147:	and    al,0xdb
  41b149:	jl     0x41b17d
  41b14b:	ss inc esp
  41b14d:	pop    ebp
  41b14e:	jae    0x41b17c
  41b150:	js     0x41b128
  41b152:	repnz add ch,BYTE PTR [ebp-0x6d]
  41b156:	(bad)  
  41b157:	xor    DWORD PTR [esi],ecx
  41b159:	lods   eax,DWORD PTR ds:[esi]
  41b15a:	add    BYTE PTR [ebx+ebx*2-0x5b],bl
  41b15e:	push   edi
  41b15f:	or     DWORD PTR [edx+0x3f],ecx
  41b162:	mov    ds:0x18d27182,eax
  41b167:	dec    edx
  41b168:	mov    ebx,0x9ffd6505
  41b16d:	inc    edi
  41b16e:	jnp    0x41b1bc
  41b170:	or     cl,bl
  41b172:	xor    al,0xa
  41b174:	mov    ?,ecx
  41b176:	fidiv  WORD PTR [edi-0x471bf889]
  41b17c:	inc    esi
  41b17d:	ins    BYTE PTR es:[edi],dx
  41b17e:	rcl    ah,0x39
  41b181:	test   ebx,0xfc00d7f3
  41b187:	lods   eax,DWORD PTR ds:[esi]
  41b188:	inc    ebx
  41b189:	std    
  41b18a:	mov    eax,0xcce8d1cc
  41b18f:	dec    esi
  41b190:	adc    eax,0x6e2a27b3
  41b195:	(bad)  
  41b196:	mov    esi,0x658eb040
  41b19b:	fdiv   DWORD PTR [edx+0x684af7aa]
  41b1a1:	xor    DWORD PTR [eax],ecx
  41b1a3:	loope  0x41b1ac
  41b1a5:	xchg   ebp,eax
  41b1a6:	fdivr  st,st(0)
  41b1a8:	or     DWORD PTR ds:0x15b4013a,eax
  41b1ae:	mov    al,ds:0x8f93546e
  41b1b3:	int    0xef
  41b1b5:	push   esp
  41b1b6:	mov    eax,ds:0xb25fc6c1
  41b1bb:	push   edx
  41b1bc:	into   
  41b1bd:	mov    es,WORD PTR [ebx]
  41b1bf:	and    al,0x80
  41b1c1:	mov    al,ds:0x684d73f0
  41b1c6:	jo     0x41b14c
  41b1c8:	mov    esp,DWORD PTR [ebx+0x6b]
  41b1cb:	lds    edx,FWORD PTR [ecx+0x4dffcc24]
  41b1d1:	mov    DWORD PTR [eax+0x1e788c2c],ebp
  41b1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1d8:	inc    edi
  41b1d9:	jb     0x41b1f9
  41b1db:	mov    bh,0x23
  41b1dd:	jmp    0x5dde:0xa4bd602c
  41b1e4:	jnp    0x41b1c3
  41b1e6:	add    bl,BYTE PTR [esi+0x55]
  41b1e9:	push   esi
  41b1ea:	les    ebp,FWORD PTR [edx+0x34a42386]
  41b1f0:	mov    es:0xbf26b5bf,al
  41b1f6:	sub    dh,0xb6
  41b1f9:	out    0xf8,al
  41b1fb:	xor    ah,ah
  41b1fd:	repz retf 
  41b1ff:	shr    DWORD PTR [edx-0x5],1
  41b202:	sbb    eax,eax
  41b204:	jg     0x41b1ba
  41b206:	cmp    bl,BYTE PTR [edx]
  41b208:	jno    0x41b262
  41b20a:	pop    es
  41b20b:	and    al,0x6f
  41b20d:	sub    eax,0x473ed776
  41b212:	pop    edx
  41b213:	in     al,dx
  41b214:	pop    ss
  41b215:	xor    eax,0x8dca953b
  41b21a:	or     ebx,DWORD PTR [esi-0x1096be78]
  41b220:	cli    
  41b221:	cmc    
  41b222:	nop
  41b223:	mov    dl,0x2f
  41b225:	or     BYTE PTR [edx+ebp*4],bl
  41b228:	(bad)  
  41b229:	dec    esp
  41b22a:	imul   edx,DWORD PTR [eax+0x6],0x5d
  41b22e:	les    ebx,FWORD PTR [ebx]
  41b230:	pop    ss
  41b231:	dec    ecx
  41b232:	pop    ds
  41b233:	xor    eax,0x2d1ca920
  41b238:	sub    eax,DWORD PTR [edi-0x36099ce8]
  41b23e:	or     al,0x21
  41b240:	cmp    al,0x5f
  41b242:	push   es
  41b243:	jae    0x41b1f1
  41b245:	or     BYTE PTR ds:[ebp+0x68a6d2b1],cl
  41b24c:	push   ebp
  41b24d:	or     BYTE PTR [edx],dl
  41b24f:	push   ebx
  41b250:	pop    ebp
  41b251:	xchg   ecx,eax
  41b252:	cli    
  41b253:	cmp    ebp,ebp
  41b255:	sbb    al,0x21
  41b257:	or     bl,BYTE PTR [edx-0x2d83a7d3]
  41b25d:	loopne 0x41b2c1
  41b25f:	retf   
  41b260:	and    bl,0xc9
  41b263:	nop
  41b264:	jb     0x41b218
  41b266:	femms  
  41b268:	pop    esp
  41b269:	adc    eax,0x38114831
  41b26e:	retf   0xba55
  41b271:	ins    DWORD PTR es:[edi],dx
  41b272:	inc    esp
  41b273:	(bad)  
  41b274:	loopne 0x41b290
  41b276:	scas   al,BYTE PTR es:[edi]
  41b277:	or     ch,dl
  41b279:	jecxz  0x41b2d1
  41b27b:	cmp    eax,0x3f3176d9
  41b280:	out    dx,al
  41b281:	(bad)  
  41b282:	jg     0x41b302
  41b284:	sar    DWORD PTR [esi+0x14065c1e],cl
  41b28a:	sbb    BYTE PTR [edx+0x5c],0x5
  41b28e:	ds cwde 
  41b290:	adc    al,0x77
  41b292:	push   edx
  41b293:	push   0x631addc4
  41b298:	inc    ebp
  41b299:	(bad)  
  41b29a:	cld    
  41b29b:	loop   0x41b23c
  41b29d:	not    DWORD PTR [edx+0x2a609811]
  41b2a3:	pop    ebx
  41b2a4:	sti    
  41b2a5:	aad    0xc3
  41b2a7:	jns    0x41b2a1
  41b2a9:	popa   
  41b2aa:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b2ac:	sbb    DWORD PTR [edx],edx
  41b2ae:	adc    ebp,esi
  41b2b0:	or     esp,DWORD PTR [esi+ebx*1-0x57021095]
  41b2b7:	in     al,0xdd
  41b2b9:	sub    eax,0x8aa1603b
  41b2be:	lock sub DWORD PTR [edi+esi*8],0x72
  41b2c3:	fsubr  st(2),st
  41b2c5:	mov    DWORD PTR [ecx-0x7b],esi
  41b2c8:	dec    edi
  41b2c9:	into   
  41b2ca:	jmp    0xca6a:0x4e9a6e98
  41b2d1:	dec    ebp
  41b2d2:	sti    
  41b2d3:	fwait
  41b2d4:	push   edx
  41b2d5:	inc    edx
  41b2d6:	(bad)  
  41b2d7:	shl    BYTE PTR [eax-0x1cfad44e],cl
  41b2dd:	js     0x41b289
  41b2df:	and    ebx,DWORD PTR ds:0xad53c70b
  41b2e5:	xor    ah,dh
  41b2e7:	fcomp  DWORD PTR [edi+0x72793f53]
  41b2ed:	dec    edi
  41b2ee:	and    eax,0x9eeaefe8
  41b2f3:	add    bl,BYTE PTR [ebx]
  41b2f5:	xlat   BYTE PTR ds:[ebx]
  41b2f6:	loope  0x41b348
  41b2f8:	jae    0x41b2e7
  41b2fa:	add    ch,0x4f
  41b2fd:	pop    esp
  41b2fe:	jo     0x41b305
  41b300:	imul   ah
  41b302:	shr    DWORD PTR [ecx],1
  41b304:	push   ebx
  41b305:	and    DWORD PTR [esi+0x14fea5e3],edi
  41b30b:	sbb    DWORD PTR [esi-0x39],esi
  41b30e:	das    
  41b30f:	push   esi
  41b310:	(bad)  
  41b311:	cmc    
  41b312:	test   eax,0x23a406f4
  41b317:	iret   
  41b318:	mov    ds:0x7ad3c2d1,al
  41b31d:	enter  0x3b56,0xaa
  41b321:	es jae 0x41b389
  41b324:	mov    eax,0xd13edeaa
  41b329:	test   DWORD PTR [edx],edx
  41b32b:	jne    0x41b2bc
  41b32d:	in     al,dx
  41b32e:	scas   eax,DWORD PTR es:[edi]
  41b32f:	xlat   BYTE PTR ds:[ebx]
  41b330:	mov    edx,0x6f8578a
  41b335:	loopne 0x41b3b2
  41b337:	xor    eax,0xc8fa138a
  41b33c:	aam    0xa2
  41b33e:	clc    
  41b33f:	xor    BYTE PTR [eax+0x53f3862d],dh
  41b345:	xchg   BYTE PTR [ebx+0x18],dl
  41b348:	dec    esi
  41b349:	icebp  
  41b34a:	dec    edx
  41b34b:	cmc    
  41b34c:	adc    BYTE PTR [ecx+0x5de65684],0xd6
  41b353:	adc    al,0xbb
  41b355:	mov    ds:0xbae7fca9,eax
  41b35a:	mov    ch,0xad
  41b35c:	inc    ebp
  41b35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b35e:	adc    al,cl
  41b360:	retf   
  41b361:	arpl   WORD PTR [ebx],cx
  41b363:	push   ecx
  41b364:	lock xor dh,dh
  41b367:	xor    DWORD PTR [edx+ebp*4-0x6e],edi
  41b36b:	mov    ds:0xc084527c,al
  41b370:	mov    ?,ebx
  41b372:	sub    al,BYTE PTR [ebx-0x79fd097d]
  41b378:	outs   dx,BYTE PTR ds:[esi]
  41b379:	xlat   BYTE PTR ds:[ebx]
  41b37a:	enter  0x72e,0xdd
  41b37e:	jbe    0x41b372
  41b380:	call   0x176ce3d
  41b385:	mov    ah,0xb5
  41b387:	jne    0x41b375
  41b389:	mov    dl,0x5d
  41b38b:	sub    edi,DWORD PTR [ebx]
  41b38d:	ja     0x41b38d
  41b38f:	pop    ds
  41b390:	cmp    bh,BYTE PTR [ebx]
  41b392:	pop    esp
  41b393:	sub    DWORD PTR [ebx],ecx
  41b395:	dec    ebp
  41b396:	adc    eax,0xb66af682
  41b39b:	iret   
  41b39c:	shr    DWORD PTR [eax+0xb1d6477],cl
  41b3a2:	sbb    ch,BYTE PTR [ebx+0xc5ffbc]
  41b3a8:	jne    0x41b40d
  41b3aa:	xchg   ecx,eax
  41b3ab:	cmp    al,0x2f
  41b3ad:	dec    esp
  41b3ae:	dec    esp
  41b3af:	ins    DWORD PTR es:[edi],dx
  41b3b0:	stos   DWORD PTR es:[edi],eax
  41b3b1:	mov    edi,0x55035d4e
  41b3b6:	push   cs
  41b3b7:	inc    edx
  41b3b8:	cs daa 
  41b3ba:	xchg   BYTE PTR [eax-0x3f9f4122],ah
  41b3c0:	les    edi,FWORD PTR [eax+0x12b6f63b]
  41b3c6:	jae    0x41b34e
  41b3c8:	leave  
  41b3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3cb:	call   0xb482:0xff7249e1
  41b3d2:	push   es
  41b3d3:	hlt    
  41b3d4:	aas    
  41b3d5:	clc    
  41b3d6:	inc    esp
  41b3d7:	sbb    ebp,edx
  41b3d9:	add    dh,BYTE PTR [eax+eiz*1+0x281fdb07]
  41b3e0:	adc    eax,0xc0ce999
  41b3e5:	dec    ebp
  41b3e6:	or     BYTE PTR [edx+0x397aefe8],ch
  41b3ec:	lock imul eax,DWORD PTR [esi],0xffffffb6
  41b3f0:	xor    ebx,DWORD PTR [esi+esi*4-0x6ab2af0b]
  41b3f7:	ret    0x7393
  41b3fa:	je     0x41b41f
  41b3fc:	nop
  41b3fd:	inc    ecx
  41b3fe:	sub    al,0xe5
  41b400:	test   eax,0x499c5951
  41b405:	mov    cl,0x33
  41b407:	fnstcw WORD PTR [esi-0x7a254aa1]
  41b40d:	jle    0x41b484
  41b40f:	icebp  
  41b410:	dec    esp
  41b411:	loopne 0x41b422
  41b413:	cmp    BYTE PTR [eax],cl
  41b415:	and    BYTE PTR [eax-0x73],0xf1
  41b419:	cmp    ch,BYTE PTR [eax]
  41b41b:	sub    eax,0x70f21fda
  41b420:	pop    edi
  41b421:	mov    ds:0x81790282,al
  41b426:	adc    al,0xee
  41b428:	ds sbb eax,0xc4c5833
  41b42e:	sbb    al,0x21
  41b430:	add    eax,esi
  41b432:	inc    eax
  41b433:	es jo  0x41b3f8
  41b436:	mov    dh,0x2
  41b438:	pop    ebp
  41b439:	dec    eax
  41b43a:	rcl    DWORD PTR [eax],1
  41b43c:	jmp    0xcc16b94b
  41b441:	out    0x0,eax
  41b443:	out    0x36,al
  41b445:	ss xor eax,0xdfd0e915
  41b44b:	add    al,0xbe
  41b44d:	and    BYTE PTR [ebp+0x46],ch
  41b450:	les    eax,FWORD PTR [ebp-0x564c2e7c]
  41b456:	mov    al,0xac
  41b458:	(bad)  
  41b459:	in     al,0xbe
  41b45b:	jl     0x41b479
  41b45d:	add    DWORD PTR [ecx-0x1f],ebp
  41b460:	fisub  WORD PTR [edi]
  41b462:	pop    eax
  41b463:	(bad)  
  41b464:	(bad)  
  41b465:	fst    DWORD PTR ds:0x61bd36e
  41b46b:	xchg   ebp,eax
  41b46c:	mov    ds:0x52eddb2a,eax
  41b471:	nop
  41b472:	fmul   st,st(5)
  41b474:	(bad)  
  41b475:	xor    al,0x11
  41b477:	sbb    eax,0x17de1772
  41b47c:	shl    edi,1
  41b47e:	xor    dl,BYTE PTR [eax+ebx*4+0x49]
  41b482:	push   esi
  41b483:	jmp    0x41b48b
  41b485:	sbb    DWORD PTR [edi-0x26],esi
  41b488:	popf   
  41b489:	dec    ebx
  41b48a:	ror    BYTE PTR [ebx-0x443c9ecb],0x16
  41b491:	aaa    
  41b492:	dec    ebp
  41b493:	inc    edi
  41b494:	loope  0x41b46b
  41b496:	push   es
  41b497:	push   ebx
  41b498:	adc    DWORD PTR [esp+eiz*8+0xe],0xb5ced80b
  41b4a0:	test   BYTE PTR [edx-0x54],0xe6
  41b4a4:	fild   QWORD PTR [edi]
  41b4a6:	data16 shl bl,cl
  41b4a9:	sbb    eax,0x9f507727
  41b4ae:	rcr    ah,1
  41b4b0:	xor    BYTE PTR [ecx-0x4d56de01],dl
  41b4b6:	xor    BYTE PTR [esi-0x7a],0xc1
  41b4ba:	inc    esi
  41b4bb:	sub    al,0x2f
  41b4bd:	xor    al,0xec
  41b4bf:	shr    eax,1
  41b4c1:	in     al,0x1f
  41b4c3:	lods   al,BYTE PTR ds:[esi]
  41b4c4:	inc    ebx
  41b4c5:	mov    edx,0x4b6f910a
  41b4ca:	xlat   BYTE PTR ds:[ebx]
  41b4cb:	xor    DWORD PTR [ecx+0x15f6b308],esi
  41b4d1:	pop    ss
  41b4d2:	mov    esp,0xec6545eb
  41b4d7:	call   ecx
  41b4d9:	clc    
  41b4da:	data16 (bad) 
  41b4dc:	jno    0x41b4ef
  41b4de:	je     0x41b4ad
  41b4e0:	in     al,0x56
  41b4e2:	inc    ebp
  41b4e3:	js     0x41b542
  41b4e5:	or     eax,0x863a83d6
  41b4ea:	pusha  
  41b4eb:	or     BYTE PTR [ecx+0x19943c6],bh
  41b4f1:	sbb    DWORD PTR [edx],0x32
  41b4f4:	mov    ds:0x927c486f,eax
  41b4f9:	adc    edi,ebp
  41b4fb:	enter  0x93c2,0x4f
  41b4ff:	xchg   edx,eax
  41b500:	leave  
  41b501:	adc    edi,DWORD PTR [ebp+0x4a]
  41b504:	(bad)  
  41b505:	aad    0xf6
  41b507:	or     al,0xa4
  41b509:	dec    ecx
  41b50a:	inc    eax
  41b50b:	push   cs
  41b50c:	fisttp QWORD PTR [ecx-0x26]
  41b50f:	ja     0x41b4a6
  41b511:	pop    eax
  41b512:	ss out 0xc5,eax
  41b515:	mov    bh,BYTE PTR [edi+0x2]
  41b518:	lahf   
  41b519:	(bad)  
  41b51a:	loopne 0x41b548
  41b51c:	dec    esp
  41b51d:	jg     0x41b55f
  41b51f:	jnp    0x41b584
  41b521:	xor    al,0x8f
  41b523:	bnd ja 0x41b4a9
  41b526:	cwde   
  41b527:	jns    0x41b52f
  41b529:	mov    eax,0x54231aa4
  41b52e:	mov    ebx,0xd3f15e9b
  41b533:	sbb    eax,0x450bdb4b
  41b538:	adc    ah,BYTE PTR [edi-0x15]
  41b53b:	adc    al,0xc1
  41b53d:	adc    al,0x71
  41b53f:	xor    al,BYTE PTR [edx]
  41b541:	add    BYTE PTR [edx],dl
  41b543:	mov    al,bl
  41b545:	push   ds
  41b546:	mov    dl,0xd9
  41b548:	xchg   edi,eax
  41b549:	aaa    
  41b54a:	and    ebp,DWORD PTR [ebx+0x589fbc84]
  41b550:	rcr    esi,1
  41b552:	or     DWORD PTR [ebx],0x3ba4c0b0
  41b558:	enter  0xd508,0x15
  41b55c:	loop   0x41b5ba
  41b55e:	sbb    cl,0x1b
  41b561:	lahf   
  41b562:	pop    DWORD PTR [ecx+0x25]
  41b565:	in     al,dx
  41b566:	or     esp,0x6c
  41b569:	jg     0x41b5a7
  41b56b:	cdq    
  41b56c:	call   0x849602ec
  41b571:	or     ecx,DWORD PTR [edi-0xb063a6d]
  41b577:	push   ebx
  41b578:	pop    esp
  41b579:	sub    BYTE PTR [ecx+esi*2],bh
  41b57c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57d:	mov    ebp,0x959eec46
  41b582:	int3   
  41b583:	rcl    BYTE PTR [ecx-0x1790487e],cl
  41b589:	add    al,0x13
  41b58b:	mov    bl,0x4c
  41b58d:	xchg   edx,eax
  41b58e:	push   eax
  41b58f:	dec    esp
  41b590:	cwde   
  41b591:	call   0x99e4ae
  41b596:	stc    
  41b597:	pop    ebp
  41b598:	les    esi,FWORD PTR ds:0x64cd7208
  41b59e:	mov    eax,0xe96b175d
  41b5a3:	push   ecx
  41b5a4:	int3   
  41b5a5:	mov    al,0x2d
  41b5a7:	jb     0x41b58c
  41b5a9:	sub    eax,0x4346fd92
  41b5ae:	es addr16 mov ch,0xd
  41b5b2:	les    edi,FWORD PTR fs:[ebx]
  41b5b5:	ins    BYTE PTR es:[edi],dx
  41b5b6:	ins    DWORD PTR es:[edi],dx
  41b5b7:	xchg   esi,eax
  41b5b8:	sahf   
  41b5b9:	pop    edi
  41b5ba:	add    al,0xb2
  41b5bc:	imul   esp,edx,0xffffffae
  41b5bf:	retf   
  41b5c0:	jmp    0x22e66550
  41b5c5:	iret   
  41b5c6:	shr    bh,1
  41b5c8:	xchg   BYTE PTR [ecx-0x2de78b36],bl
  41b5ce:	pushf  
  41b5cf:	or     BYTE PTR [ecx],cl
  41b5d1:	dec    esp
  41b5d2:	mov    dh,0xa8
  41b5d4:	ins    BYTE PTR es:[edi],dx
  41b5d5:	xchg   edi,eax
  41b5d6:	jge    0x41b5f8
  41b5d8:	retf   
  41b5d9:	and    DWORD PTR [ebx],esp
  41b5db:	out    dx,eax
  41b5dc:	xchg   esi,eax
  41b5dd:	dec    edi
  41b5de:	jecxz  0x41b5aa
  41b5e0:	(bad)  
  41b5e1:	push   ds
  41b5e2:	into   
  41b5e3:	mov    DWORD PTR [esi+0xf418aca],esp
  41b5e9:	jae    0x41b5dc
  41b5eb:	(bad)  
  41b5ec:	into   
  41b5ed:	and    cl,BYTE PTR ds:0x8060f4b0
  41b5f3:	push   esp
  41b5f4:	dec    esi
  41b5f5:	mov    ebx,0xa9e7e413
  41b5fa:	mov    dh,0xb7
  41b5fc:	shl    DWORD PTR [eax+0x77],1
  41b5ff:	test   dl,bl
  41b601:	xor    edi,eax
  41b603:	mov    ebp,0xf2d26934
  41b608:	push   ds
  41b609:	in     eax,dx
  41b60a:	mov    dl,0x7e
  41b60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b60d:	(bad)  
  41b60e:	jmp    0x41b657
  41b610:	rcr    edi,1
  41b612:	call   0x7f798ad
  41b617:	div    ah
  41b619:	dec    edi
  41b61a:	pop    esp
  41b61b:	xchg   ebx,eax
  41b61c:	sahf   
  41b61d:	scas   eax,DWORD PTR es:[edi]
  41b61e:	jmp    0xeff1:0x4ffa2af6
  41b625:	jmp    0x1489ef8
  41b62a:	out    dx,eax
  41b62b:	jns    0x41b65d
  41b62d:	cs jnp 0x41b637
  41b630:	jp     0x41b64f
  41b632:	cmp    DWORD PTR [edi+0x17],edx
  41b635:	jae    0x41b633
  41b637:	ins    DWORD PTR es:[edi],dx
  41b638:	xchg   BYTE PTR [ebx+0x2aff5f11],dl
  41b63e:	(bad)  
  41b63f:	ds scas eax,DWORD PTR es:[edi]
  41b641:	mov    ebx,DWORD PTR [ecx-0x1d]
  41b644:	cmp    eax,0x77b33697
  41b649:	shr    bl,1
  41b64b:	fs xor al,0x37
  41b64e:	(bad)  
  41b64f:	aam    0x9b
  41b651:	fadd   st(5),st
  41b653:	inc    eax
  41b654:	dec    edx
  41b655:	add    DWORD PTR [esi-0x61],ecx
  41b658:	or     bl,cl
  41b65a:	into   
  41b65b:	jo     0x41b672
  41b65d:	xchg   bl,ch
  41b65f:	mov    dh,0x56
  41b661:	neg    BYTE PTR [eax+0x5f]
  41b664:	imul   edi,DWORD PTR ds:0x59fd872,0x67
  41b66b:	jne    0x41b5f0
  41b66d:	cli    
  41b66e:	mov    DWORD PTR [esi-0x46d35312],eax
  41b674:	jns    0x41b633
  41b676:	adc    dl,BYTE PTR [ecx+0x5de44486]
  41b67c:	cs aas 
  41b67e:	fimul  DWORD PTR [esi-0x7915d9c0]
  41b684:	xchg   edx,eax
  41b685:	ins    DWORD PTR es:[edi],dx
  41b686:	fptan  
  41b688:	push   esp
  41b689:	shl    esi,0x99
  41b68c:	push   ebx
  41b68d:	call   0x23108de
  41b692:	push   es
  41b693:	adc    ebp,DWORD PTR [edx+0x7d]
  41b696:	ror    BYTE PTR [esi],1
  41b698:	fsub   QWORD PTR [esp+eax*4+0x2dd9a069]
  41b69f:	out    dx,al
  41b6a0:	daa    
  41b6a1:	jecxz  0x41b718
  41b6a3:	xor    BYTE PTR [ebx+eax*2-0x10],0xe
  41b6a8:	or     eax,DWORD PTR gs:0x8926e947
  41b6af:	call   0x775b5434
  41b6b4:	bound  ebp,QWORD PTR [ecx]
  41b6b6:	sub    cl,dl
  41b6b8:	je     0x41b672
  41b6ba:	pusha  
  41b6bb:	in     eax,dx
  41b6bc:	scas   eax,DWORD PTR es:[edi]
  41b6bd:	pop    eax
  41b6be:	add    bh,dl
  41b6c0:	pop    es
  41b6c1:	push   0x69d0c3f6
  41b6c6:	sbb    dl,BYTE PTR [edx]
  41b6c8:	jmp    0x7b0585f3
  41b6cd:	pop    es
  41b6ce:	mov    esp,0x3b877f0f
  41b6d3:	fs arpl si,sp
  41b6d6:	sbb    eax,0x35c01881
  41b6db:	aas    
  41b6dc:	inc    ebx
  41b6dd:	mov    al,ds:0xb4cff5a1
  41b6e2:	hlt    
  41b6e3:	jge    0x41b6fc
  41b6e5:	push   ebp
  41b6e6:	daa    
  41b6e7:	or     eax,0x7de10f7c
  41b6ec:	imul   esp,DWORD PTR [eax+0x42],0x573b4d76
  41b6f3:	lods   al,BYTE PTR ds:[esi]
  41b6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6f5:	into   
  41b6f6:	push   esp
  41b6f7:	jae    0x41b726
  41b6f9:	sub    al,0xf0
  41b6fb:	es xchg bl,ah
  41b6fe:	and    BYTE PTR [edx+0x315ce18f],bh
  41b704:	aas    
  41b705:	jmp    0xc8e5:0x44f84a1c
  41b70c:	das    
  41b70d:	xchg   ebp,eax
  41b70e:	sbb    BYTE PTR [esi+0x5d486e3f],bh
  41b714:	adc    BYTE PTR [esi+0x3e],0x6a
  41b718:	ins    DWORD PTR es:[edi],dx
  41b719:	mov    edi,0x78aa780a
  41b71e:	cmc    
  41b71f:	mov    eax,ds:0x8a7b3238
  41b724:	cwde   
  41b725:	out    0xf,al
  41b727:	mov    bl,0xd2
  41b729:	jns    0x41b754
  41b72b:	lds    ecx,FWORD PTR [edi-0x4ddd0a7c]
  41b731:	add    al,0x1b
  41b733:	clc    
  41b734:	ss cmp eax,0x962a0d4c
  41b73a:	dec    eax
  41b73b:	hlt    
  41b73c:	jecxz  0x41b719
  41b73e:	pop    esi
  41b73f:	xchg   DWORD PTR [ebx],esi
  41b741:	inc    ecx
  41b742:	or     cl,BYTE PTR [eax]
  41b744:	sub    cl,BYTE PTR [esi-0x6f5ea6fb]
  41b74a:	or     edi,DWORD PTR [ecx+0x4b3d3ca]
  41b750:	test   BYTE PTR [si],0x32
  41b754:	fdiv   st(2),st
  41b756:	push   ecx
  41b757:	xchg   ecx,eax
  41b758:	scas   al,BYTE PTR es:[edi]
  41b759:	pushf  
  41b75a:	popa   
  41b75b:	test   BYTE PTR [esi+0x35f8a644],bh
  41b761:	cmp    eax,esi
  41b763:	int    0x8e
  41b765:	xchg   edi,ecx
  41b767:	pusha  
  41b768:	pop    ss
  41b769:	push   ss
  41b76a:	mov    bh,0xf7
  41b76c:	sbb    DWORD PTR [ebx],esi
  41b76e:	aaa    
  41b76f:	xlat   BYTE PTR ds:[ebx]
  41b770:	ror    bh,0xdd
  41b773:	(bad)  
  41b774:	jnp    0x41b6fa
  41b776:	add    edx,DWORD PTR [edx-0x70]
  41b779:	js     0x41b72b
  41b77b:	jnp    0x41b7c7
  41b77d:	inc    BYTE PTR [edi+ebx*4]
  41b780:	sti    
  41b781:	and    DWORD PTR [ebp+ecx*8+0x5e7780c5],edi
  41b788:	std    
  41b789:	or     bl,BYTE PTR cs:[esi+eax*2-0x3d6284f7]
  41b791:	lock in eax,0x73
  41b794:	daa    
  41b795:	cmp    eax,0xd000a15a
  41b79a:	push   edx
  41b79b:	fsubr  st,st(0)
  41b79d:	jne    0x41b79a
  41b79f:	adc    DWORD PTR [esp+eax*2-0x73],edi
  41b7a3:	pop    esp
  41b7a4:	jae    0x41b785
  41b7a6:	test   eax,0xdd4eed35
  41b7ab:	or     BYTE PTR [eax],dh
  41b7ad:	(bad)  
  41b7ae:	int    0x8d
  41b7b0:	fcmovne st,st(3)
  41b7b2:	test   BYTE PTR [eax],dh
  41b7b4:	cmp    BYTE PTR [edx-0xf772897],ch
  41b7ba:	mov    dl,0xea
  41b7bc:	test   esp,ebx
  41b7be:	fsubr  st,st(2)
  41b7c0:	hlt    
  41b7c1:	and    DWORD PTR [eax],edi
  41b7c3:	or     esi,DWORD PTR [ecx-0x316bdb7c]
  41b7c9:	push   ebx
  41b7ca:	rcl    DWORD PTR [eax-0x419d0a77],1
  41b7d0:	jecxz  0x41b847
  41b7d2:	sbb    DWORD PTR [ecx+0xc2f0ad8],0x66
  41b7d9:	jns    0x41b760
  41b7db:	inc    edi
  41b7dc:	(bad)
  41b7df:	and    al,0x64
  41b7e1:	mov    ch,0x52
  41b7e3:	test   bh,ah
  41b7e5:	xchg   DWORD PTR [ebx-0x63],ecx
  41b7e8:	sbb    ecx,DWORD PTR [edi]
  41b7ea:	mov    ebx,0x835df7a0
  41b7ef:	test   esi,esp
  41b7f1:	and    al,BYTE PTR [ecx+esi*2+0x72]
  41b7f5:	inc    edx
  41b7f6:	dec    ecx
  41b7f7:	xor    ch,BYTE PTR ds:0x96e35bb6
  41b7fd:	and    ah,BYTE PTR [ecx-0x79]
  41b800:	jle    0x41b7d4
  41b802:	add    ch,BYTE PTR [esi-0x27]
  41b805:	fwait
  41b806:	cdq    
  41b807:	js     0x41b832
  41b809:	push   ds
  41b80a:	inc    esi
  41b80b:	mov    bl,0x2a
  41b80d:	mov    eax,ds:0x282df73f
  41b812:	fild   WORD PTR [ebp+0x3b14f424]
  41b818:	cld    
  41b819:	sub    edx,DWORD PTR [eax-0x72]
  41b81c:	xor    cl,ah
  41b81e:	test   eax,0xfcde460f
  41b823:	mov    ch,0x31
  41b825:	adc    bh,BYTE PTR [ebx]
  41b827:	pop    eax
  41b828:	into   
  41b829:	push   0x31288e27
  41b82e:	adc    BYTE PTR [esi],0x83
  41b831:	or     dh,al
  41b833:	jl     0x41b7ed
  41b835:	cmp    DWORD PTR [edx],edx
  41b837:	ja     0x41b7cb
  41b839:	mov    DWORD PTR [esi],ebx
  41b83b:	jmp    DWORD PTR [edi]
  41b83d:	xor    ch,cl
  41b83f:	mov    eax,0x5c971ec
  41b844:	dec    esi
  41b845:	xlat   BYTE PTR ds:[ebx]
  41b846:	jnp    0x41b8b4
  41b848:	xor    eax,0x8d235db6
  41b84d:	shl    DWORD PTR [esi],0x87
  41b850:	pop    ebx
  41b851:	repz cmp BYTE PTR [esi-0x76],bl
  41b855:	in     eax,0x18
  41b857:	outs   dx,DWORD PTR ds:[esi]
  41b858:	mov    esi,0x3f9352cc
  41b85d:	test   BYTE PTR [esi+0x6c],ah
  41b860:	dec    ebx
  41b861:	nop
  41b862:	out    0x8c,eax
  41b864:	mov    ch,0xa
  41b866:	out    dx,eax
  41b867:	test   al,0x74
  41b869:	jmp    0xab2:0xd7adb21f
  41b870:	mov    ebp,0xdff8992a
  41b875:	scas   eax,DWORD PTR es:[edi]
  41b876:	ror    BYTE PTR [edx+eax*1],0xfc
  41b87a:	jo     0x41b87f
  41b87c:	jl     0x41b845
  41b87e:	popa   
  41b87f:	lock js 0x41b86a
  41b882:	add    edx,DWORD PTR [eax-0x3e24cacd]
  41b888:	dec    edi
  41b889:	push   edi
  41b88a:	and    DWORD PTR [esi],0x7f
  41b88d:	jl     0x41b8ba
  41b88f:	push   0xe3a561dd
  41b894:	push   0xd7094c21
  41b899:	leave  
  41b89a:	add    edx,DWORD PTR ds:0x79aaa924
  41b8a0:	dec    eax
  41b8a1:	dec    edi
  41b8a2:	xor    ecx,DWORD PTR [edi+0x1405f321]
  41b8a8:	lods   eax,DWORD PTR ds:[esi]
  41b8a9:	xchg   ecx,eax
  41b8aa:	xor    al,0x92
  41b8ac:	jmp    DWORD PTR [edi+edi*4-0x46]
  41b8b0:	pop    ecx
  41b8b1:	mov    bh,0xa1
  41b8b3:	sub    ecx,eax
  41b8b5:	jne    0x41b8ff
  41b8b7:	push   ebx
  41b8b8:	adc    DWORD PTR [edi],0x4a794e12
  41b8be:	dec    esp
  41b8bf:	ficomp DWORD PTR ds:0xd6ec321c
  41b8c5:	xlat   BYTE PTR ds:[ebx]
  41b8c6:	jnp    0x41b904
  41b8c8:	adc    edx,DWORD PTR [eax+0x4378a1f7]
  41b8ce:	mov    ecx,0xd8932b72
  41b8d3:	sbb    cl,bl
  41b8d5:	ss cli 
  41b8d7:	fstp   TBYTE PTR [eax]
  41b8d9:	lods   al,BYTE PTR ds:[esi]
  41b8da:	les    ecx,FWORD PTR [eax+0x47f17fad]
  41b8e0:	or     eax,0x39be0829
  41b8e5:	bound  ecx,QWORD PTR ds:0x24294fb
  41b8eb:	rcr    BYTE PTR [edi+eiz*8+0x4b474fd1],0x2c
  41b8f3:	mov    al,ch
  41b8f5:	inc    edx
  41b8f6:	or     bh,BYTE PTR [ebp+0x4e]
  41b8f9:	xlat   BYTE PTR ds:[ebx]
  41b8fa:	fcomp  QWORD PTR [eax+0x6e512280]
  41b900:	not    BYTE PTR [edx+0x45729326]
  41b906:	jno    0x41b944
  41b908:	fistp  QWORD PTR [ecx-0x5ee197a3]
  41b90e:	loopne 0x41b8d8
  41b910:	or     eax,0x3eee10d0
  41b915:	test   cl,dl
  41b917:	pop    edx
  41b918:	ds int3 
  41b91a:	hlt    
  41b91b:	mov    dh,0x51
  41b91d:	aaa    
  41b91e:	inc    eax
  41b91f:	fs pop ecx
  41b921:	xor    eax,0xdc86e78f
  41b926:	fsubr  QWORD PTR [esi]
  41b928:	fs iret 
  41b92a:	push   ss
  41b92b:	mov    ecx,ecx
  41b92d:	xchg   edx,eax
  41b92e:	mov    DWORD PTR [edx-0x13],edx
  41b931:	fdiv   QWORD PTR [edx]
  41b933:	stos   BYTE PTR es:[edi],al
  41b934:	mov    ch,0x36
  41b936:	test   BYTE PTR [esi+0x55],0x93
  41b93a:	aaa    
  41b93b:	gs lahf 
  41b93d:	inc    esp
  41b93e:	inc    edi
  41b93f:	lea    edx,es:[edi+eax*8-0x4c]
  41b944:	call   0xe0a3:0xea87bfd
  41b94b:	imul   dh
  41b94d:	pop    ecx
  41b94e:	pop    edx
  41b94f:	fadd   QWORD PTR [edx+edi*1]
  41b952:	ss stos DWORD PTR es:[edi],eax
  41b954:	push   eax
  41b955:	cmp    bh,BYTE PTR [esi]
  41b957:	daa    
  41b958:	loop   0x41b8f9
  41b95a:	push   edx
  41b95b:	add    BYTE PTR es:[esi-0x6d],dh
  41b95f:	imul   ebx,DWORD PTR [eax-0x254af433],0xffffff8f
  41b966:	pop    esp
  41b967:	or     BYTE PTR [ecx-0x63],dl
  41b96a:	push   0xe9cb6114
  41b96f:	cmc    
  41b970:	pop    eax
  41b971:	sti    
  41b972:	cmc    
  41b973:	scas   al,BYTE PTR es:[edi]
  41b974:	jp     0x41b948
  41b976:	mov    ebx,0x7fbaaf93
  41b97b:	pop    ecx
  41b97c:	sbb    DWORD PTR [ebx+0x6a],0x35b93401
  41b983:	test   ch,bh
  41b985:	std    
  41b986:	aas    
  41b987:	sbb    eax,0xbc91c933
  41b98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b98d:	adc    esp,DWORD PTR [ecx-0x4]
  41b990:	pop    edi
  41b991:	xor    al,cl
  41b993:	mov    dl,0x92
  41b995:	std    
  41b996:	jo     0x41b9b5
  41b998:	test   al,0xdb
  41b99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b99b:	(bad)  
  41b99d:	cmp    DWORD PTR [ecx-0x32c1ce62],eax
  41b9a3:	int    0xfa
  41b9a5:	pop    esp
  41b9a6:	mov    al,ds:0x246c16a2
  41b9ab:	mov    al,0x2c
  41b9ad:	mov    ah,0x4f
  41b9af:	xlat   BYTE PTR ds:[ebx]
  41b9b0:	scas   eax,DWORD PTR es:[edi]
  41b9b1:	mov    esp,0xac65a194
  41b9b6:	or     eax,0x3ab097e1
  41b9bb:	lea    eax,[edx+0x25]
  41b9be:	leave  
  41b9bf:	test   al,0xec
  41b9c1:	dec    ecx
  41b9c2:	std    
  41b9c3:	sub    dl,BYTE PTR [edx-0xbdc5aa1]
  41b9c9:	or     BYTE PTR [eax-0x26],ch
  41b9cc:	mov    eax,0x617261d3
  41b9d1:	rcr    BYTE PTR [esi-0x4],0x38
  41b9d5:	lds    ebx,FWORD PTR [ecx]
  41b9d7:	xor    ebp,ebp
  41b9d9:	push   es
  41b9da:	test   al,0x4d
  41b9dc:	sbb    edx,DWORD PTR [eax-0x6c]
  41b9df:	retf   
  41b9e0:	push   ebx
  41b9e1:	lods   al,BYTE PTR gs:[esi]
  41b9e3:	inc    edi
  41b9e4:	mov    dl,0xec
  41b9e6:	jp     0x41ba27
  41b9e8:	pop    ebx
  41b9e9:	imul   ebx,esi,0x5f
  41b9ec:	inc    edi
  41b9ed:	aad    0xa9
  41b9ef:	sbb    bl,BYTE PTR [esi]
  41b9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f2:	test   al,0x5a
  41b9f4:	les    esi,FWORD PTR gs:[esi+0x2dbcb3d2]
  41b9fb:	jmp    0x433790a6
  41ba00:	lods   al,BYTE PTR ds:[esi]
  41ba01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba02:	enter  0xac77,0xa
  41ba06:	pop    esp
  41ba07:	push   edx
  41ba08:	pop    esi
  41ba09:	xor    eax,DWORD PTR [ebx+0x6bf52432]
  41ba0f:	sbb    bl,BYTE PTR [ebp-0x2c507589]
  41ba15:	aas    
  41ba16:	into   
  41ba17:	(bad)  
  41ba1a:	adc    al,dl
  41ba1c:	adc    ah,0xc
  41ba1f:	test   al,0x5c
  41ba21:	jle    0x41ba0f
  41ba23:	loope  0x41ba82
  41ba25:	push   ebx
  41ba26:	xchg   ecx,eax
  41ba27:	xlat   BYTE PTR ds:[ebx]
  41ba28:	(bad)  
  41ba29:	hlt    
  41ba2a:	mov    eax,edi
  41ba2c:	xchg   ebx,eax
  41ba2d:	pop    eax
  41ba2e:	call   0x596d7e66
  41ba33:	in     al,dx
  41ba34:	mov    edx,0x23b3d6b3
  41ba39:	mov    dh,0x24
  41ba3b:	lds    edi,FWORD PTR [ecx+eiz*8-0x3968ed2b]
  41ba42:	mov    al,0xa
  41ba44:	ss jmp 0xecbde639
  41ba4a:	jl     0x41ba21
  41ba4c:	mov    dh,0xcf
  41ba4e:	xchg   ebp,eax
  41ba4f:	and    DWORD PTR [esi+0x1f],esp
  41ba52:	add    DWORD PTR [ecx-0x5f],ecx
  41ba55:	and    DWORD PTR [edx+0x74],0xffffffe6
  41ba59:	loop   0x41b9fe
  41ba5b:	sub    cl,BYTE PTR [esi+0x1]
  41ba5e:	popf   
  41ba5f:	jle    0x41bad5
  41ba61:	dec    ebp
  41ba62:	cmp    eax,0x432fb07e
  41ba67:	test   DWORD PTR [eax+0x2e],ebp
  41ba6a:	in     al,0x3b
  41ba6c:	hlt    
  41ba6d:	sbb    DWORD PTR [ebx-0x2cf93e20],edi
  41ba73:	mov    ah,0x5c
  41ba75:	sub    DWORD PTR [edx],edi
  41ba77:	in     al,0x68
  41ba79:	xor    BYTE PTR ds:0xbd9fe8f0,bh
  41ba7f:	xchg   ebx,eax
  41ba80:	in     eax,0x60
  41ba82:	lea    edi,[ecx-0x7b]
  41ba85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba86:	xor    eax,0xa85d9904
  41ba8b:	sub    eax,0x8b45a191
  41ba90:	mov    ebp,0x5b0a0e9d
  41ba95:	xchg   edx,eax
  41ba96:	lock add edi,DWORD PTR [ebx]
  41ba99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba9a:	loopne 0x41bab5
  41ba9c:	pop    edx
  41ba9d:	jl     0x41bab4
  41ba9f:	retf   0x18cd
  41baa2:	sbb    al,0xa8
  41baa4:	inc    edx
  41baa5:	scas   al,BYTE PTR es:[edi]
  41baa6:	sti    
  41baa7:	pop    edi
  41baa8:	push   cs
  41baa9:	hlt    
  41baaa:	pop    DWORD PTR ss:[edi-0x39]
  41baae:	mov    ch,0xa6
  41bab0:	jl     0x41ba74
  41bab2:	test   DWORD PTR [eax-0x14],ebp
  41bab5:	fdiv   st(5),st
  41bab7:	xchg   ebp,eax
  41bab8:	pop    ecx
  41bab9:	push   ss
  41baba:	jbe    0x41bb2a
  41babc:	addr16 pop ss
  41babe:	(bad)  
  41babf:	ret    0xe6d3
  41bac2:	jmp    0x1fda9a7d
  41bac7:	xor    BYTE PTR [edi+0x6d],dh
  41baca:	add    eax,0xfbf47b24
  41bacf:	retf   0xc735
  41bad2:	outs   dx,BYTE PTR ds:[esi]
  41bad3:	ins    DWORD PTR es:[edi],dx
  41bad4:	ret    
  41bad5:	js     0x41bab5
  41bad7:	fwait
  41bad8:	and    DWORD PTR [ebx],0xdeb9768e
  41bade:	add    al,0x3c
  41bae0:	or     eax,0xc34ea290
  41bae5:	add    al,0x82
  41bae7:	shl    BYTE PTR [esi],cl
  41bae9:	jge    0x41baa1
  41baeb:	int    0x31
  41baed:	and    al,BYTE PTR [edx+0x62]
  41baf0:	stos   BYTE PTR es:[edi],al
  41baf1:	push   ds
  41baf2:	dec    eax
  41baf3:	in     eax,dx
  41baf4:	dec    ebp
  41baf5:	xor    eax,0xf22f1109
  41bafa:	ins    DWORD PTR es:[edi],dx
  41bafb:	sbb    ebx,DWORD PTR [esi+0x1f]
  41bafe:	dec    edx
  41baff:	jno    0x41baf0
  41bb01:	mov    ch,0xdc
  41bb03:	xor    esp,ebp
  41bb05:	fisub  WORD PTR [esi]
  41bb07:	mov    bh,BYTE PTR [edi-0x1d7fae7b]
  41bb0d:	or     al,0xa6
  41bb0f:	je     0x41ba9c
  41bb11:	cmp    eax,0x50f922db
  41bb16:	xchg   ebp,eax
  41bb17:	mov    esp,0xbe7ad6a3
  41bb1c:	ret    
  41bb1d:	mov    edi,0xa8f36f5b
  41bb22:	cmp    ah,BYTE PTR [ebx+0x7f]
  41bb25:	xlat   BYTE PTR ds:[ebx]
  41bb26:	dec    eax
  41bb27:	js     0x41baf1
  41bb29:	adc    BYTE PTR [esi+0x356d5700],ch
  41bb2f:	(bad)  
  41bb30:	mov    dl,0x29
  41bb32:	rol    eax,1
  41bb34:	mov    ds:0x6b6bea7d,eax
  41bb39:	out    0x1d,al
  41bb3b:	mov    edx,0x282ec181
  41bb40:	xor    DWORD PTR [eax+ecx*2+0x5807777c],esp
  41bb47:	pop    esi
  41bb48:	mov    ah,0xf0
  41bb4a:	jnp    0x41bb0e
  41bb4c:	mov    ds:0x6c5eec74,eax
  41bb51:	mov    ds:0xf162300c,eax
  41bb56:	pusha  
  41bb57:	es jle 0x41bb4c
  41bb5a:	sub    BYTE PTR [esi],al
  41bb5c:	aaa    
  41bb5d:	adc    eax,0xf5a6af9c
  41bb62:	push   edi
  41bb63:	in     al,dx
  41bb64:	pop    esp
  41bb65:	jge    0x41bb82
  41bb67:	xadd   BYTE PTR [esi+edi*4],ch
  41bb6b:	sbb    DWORD PTR [ebx+0x571d778],ecx
  41bb71:	shl    al,cl
  41bb73:	sbb    eax,0x8708bed0
  41bb78:	out    dx,eax
  41bb79:	mov    edx,0x2d9daedf
  41bb7e:	mov    eax,0x2217a071
  41bb83:	cmp    eax,0x45
  41bb86:	pop    edx
  41bb87:	sti    
  41bb88:	imul   BYTE PTR [esi-0x3f395750]
  41bb8e:	jecxz  0x41bb28
  41bb90:	out    dx,al
  41bb91:	out    dx,eax
  41bb92:	adc    BYTE PTR [eax],ch
  41bb94:	push   eax
  41bb95:	mov    dl,0x4a
  41bb97:	mov    BYTE PTR [edi+0x7d],ah
  41bb9a:	cs in  al,0x98
  41bb9d:	mov    eax,ds:0x22ce44d9
  41bba2:	dec    edx
  41bba3:	arpl   WORD PTR [ebx-0x4c9585c],bx
  41bba9:	xchg   ebx,eax
  41bbaa:	or     edi,esi
  41bbac:	jnp    0x41bc0f
  41bbae:	fwait
  41bbaf:	je     0x41bbd5
  41bbb1:	cmc    
  41bbb2:	es ss pop edi
  41bbb5:	arpl   WORD PTR [edi],bx
  41bbb7:	push   0x52
  41bbb9:	shr    BYTE PTR [ecx-0x65],1
  41bbbc:	call   0x60c6:0xe2a3fbd7
  41bbc3:	ss sub eax,0x542bb21f
  41bbc9:	aaa    
  41bbca:	inc    esi
  41bbcb:	mov    bh,0x3a
  41bbcd:	pop    eax
  41bbce:	mov    esp,0xcba1529f
  41bbd3:	or     ecx,DWORD PTR [edi-0x3b95812d]
  41bbd9:	pop    es
  41bbda:	cmp    eax,0xe0338252
  41bbdf:	adc    dh,al
  41bbe1:	retf   
  41bbe2:	inc    esp
  41bbe3:	dec    edi
  41bbe4:	mov    dh,0xbf
  41bbe6:	call   0x33ac86c5
  41bbeb:	call   0x1cee:0xc49d3c4
  41bbf2:	inc    ecx
  41bbf3:	aaa    
  41bbf4:	xor    al,0x66
  41bbf6:	mov    cs,ecx
  41bbf8:	out    dx,eax
  41bbf9:	test   al,0x3e
  41bbfb:	ins    BYTE PTR es:[edi],dx
  41bbfc:	test   BYTE PTR [ecx-0x9],0x66
  41bc00:	sub    ah,BYTE PTR [ebp+0x2f4f7389]
  41bc06:	mov    dl,0x80
  41bc08:	popf   
  41bc09:	daa    
  41bc0a:	pusha  
  41bc0b:	fisubr WORD PTR [esi-0x4b]
  41bc0e:	ror    DWORD PTR [eax+edx*1],1
  41bc11:	ja     0x41bc2d
  41bc13:	pop    es
  41bc14:	xchg   ebp,eax
  41bc15:	mov    BYTE PTR [ecx*1+0x6cc279b9],dh
  41bc1c:	dec    ebx
  41bc1d:	dec    esi
  41bc1e:	push   eax
  41bc1f:	in     eax,0x2f
  41bc21:	dec    ebp
  41bc22:	out    dx,eax
  41bc23:	repz sub eax,0xeb6bbada
  41bc29:	pop    esi
  41bc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc2b:	cs cmp dh,ch
  41bc2e:	adc    BYTE PTR [esi+0x3b425366],dh
  41bc34:	mov    ch,0xad
  41bc36:	adc    dh,bh
  41bc38:	fcomp  QWORD PTR [ecx-0x2243505c]
  41bc3e:	aas    
  41bc3f:	clc    
  41bc40:	sub    esp,ebx
  41bc42:	add    eax,0x6adb66ac
  41bc47:	push   ecx
  41bc48:	stos   BYTE PTR es:[edi],al
  41bc49:	dec    edx
  41bc4a:	pop    ebp
  41bc4b:	rcpps  xmm2,XMMWORD PTR [eax-0x62ae2f71]
  41bc52:	ds adc al,0xfe
  41bc55:	clc    
  41bc56:	ret    
  41bc57:	mov    bl,dh
  41bc59:	stos   BYTE PTR es:[edi],al
  41bc5a:	dec    ebx
  41bc5b:	adc    BYTE PTR [esi+0x7a1a386c],ch
  41bc61:	call   0xcf52:0xb9beeee9
  41bc68:	mov    edx,0xb15c1cb6
  41bc6d:	inc    edx
  41bc6e:	icebp  
  41bc6f:	inc    ebx
  41bc70:	xor    ebp,DWORD PTR [edx]
  41bc72:	repnz mov edx,0xee092fa6
  41bc78:	les    esp,FWORD PTR [esi-0x4646967e]
  41bc7e:	scas   eax,DWORD PTR es:[edi]
  41bc7f:	test   ah,al
  41bc81:	mov    cl,0xe8
  41bc83:	xor    BYTE PTR [ecx-0x5],0xc9
  41bc87:	sub    BYTE PTR [esi+0x30],cl
  41bc8a:	jl     0x41bca3
  41bc8c:	pop    ss
  41bc8d:	mov    dl,0x6b
  41bc8f:	aaa    
  41bc90:	xchg   esi,eax
  41bc91:	or     al,0xd3
  41bc93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc94:	sbb    BYTE PTR [edx+0xfd55e9d],0xeb
  41bc9b:	ret    0x295
  41bc9e:	xchg   edx,eax
  41bc9f:	sbb    BYTE PTR [ebx+0x4d],0x61
  41bca3:	pop    ecx
  41bca4:	lods   al,BYTE PTR ds:[esi]
  41bca5:	and    eax,0x1f5e2ed6
  41bcaa:	or     BYTE PTR [edx+edx*8-0x7c1f0496],dh
  41bcb1:	cvtps2pd xmm1,QWORD PTR [edi-0x2b]
  41bcb5:	ds xor ch,al
  41bcb8:	inc    ebp
  41bcb9:	jle    0x41bc81
  41bcbb:	and    DWORD PTR [edx-0x7365998c],0xffffffa0
  41bcc2:	leave  
  41bcc3:	jle    0x41bc68
  41bcc5:	xor    eax,DWORD PTR [esi+0x44]
  41bcc8:	cld    
  41bcc9:	dec    edx
  41bcca:	lods   al,BYTE PTR ds:[esi]
  41bccb:	out    dx,al
  41bccc:	dec    ebx
  41bccd:	adc    DWORD PTR [edi+0xdd14de0],ebp
  41bcd3:	rcr    esi,0xb3
  41bcd6:	xchg   esi,eax
  41bcd7:	sub    ebp,edi
  41bcd9:	(bad)  
  41bcda:	shr    DWORD PTR [edx+0xf33f37f],1
  41bce0:	cmp    DWORD PTR [eax+ecx*1+0x29d88a50],ecx
  41bce7:	and    eax,0x536868ef
  41bcec:	mov    esp,0xb36a1ca1
  41bcf1:	adc    eax,0x85e7fdbe
  41bcf6:	sub    eax,0xabd85743
  41bcfb:	call   0x15de:0x53ca2104
  41bd02:	push   edx
  41bd03:	xor    bh,BYTE PTR [ecx-0x38109fde]
  41bd09:	push   ecx
  41bd0a:	push   esi
  41bd0b:	sbb    BYTE PTR [eax-0x4f],cl
  41bd0e:	mov    bl,0xe6
  41bd10:	fwait
  41bd11:	test   DWORD PTR [edi-0x5b63cd2c],ebp
  41bd17:	mov    al,0xc4
  41bd19:	or     ch,BYTE PTR [edi-0x3d]
  41bd1c:	aam    0xf2
  41bd1e:	into   
  41bd1f:	fs int3 
  41bd21:	sub    al,0xf8
  41bd23:	mov    ebx,0xb366ac84
  41bd28:	mov    al,ds:0x41a8ec7d
  41bd2d:	jl     0x41bd11
  41bd2f:	or     eax,0x8411cdd1
  41bd34:	data16 mov cl,0xc9
  41bd37:	jecxz  0x41bd36
  41bd39:	or     eax,0x2b652e4a
  41bd3e:	pop    edx
  41bd3f:	jl     0x41bd4e
  41bd41:	xor    ch,BYTE PTR [edx+0x3c]
  41bd44:	sub    bl,dh
  41bd46:	adc    esi,esi
  41bd48:	or     BYTE PTR [edx+edx*2],ch
  41bd4b:	cmp    edi,DWORD PTR [ebx+0x2f5eb8d5]
  41bd51:	xlat   BYTE PTR ds:[ebx]
  41bd52:	adc    ebx,DWORD PTR [ebx-0xb]
  41bd55:	mov    bl,0x6e
  41bd57:	lock inc edi
  41bd59:	sub    eax,0x5efc6385
  41bd5e:	cli    
  41bd5f:	jg     0x41bd8b
  41bd61:	cmp    esp,edx
  41bd63:	pop    eax
  41bd64:	stos   BYTE PTR es:[edi],al
  41bd65:	sar    DWORD PTR [ecx-0x62],1
  41bd68:	inc    esi
  41bd69:	add    ebx,DWORD PTR gs:[ebx+ebp*2+0x4282516a]
  41bd71:	stc    
  41bd72:	js     0x41bcfb
  41bd74:	out    dx,eax
  41bd75:	ret    0x9785
  41bd78:	loopne 0x41bd57
  41bd7a:	mov    dl,BYTE PTR [eax]
  41bd7c:	pop    edi
  41bd7d:	dec    ecx
  41bd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd7f:	(bad)  
  41bd80:	fldenv [edi]
  41bd82:	sbb    BYTE PTR [ebx],dh
  41bd84:	sbb    DWORD PTR ds:0x7979b81d,edx
  41bd8a:	xchg   ecx,eax
  41bd8b:	mov    al,0x7d
  41bd8d:	pop    es
  41bd8e:	adc    eax,0x139f6e61
  41bd93:	or     al,0x31
  41bd95:	retf   0xeea2
  41bd98:	and    DWORD PTR [ebp-0x53],edx
  41bd9b:	ja     0x41be09
  41bd9d:	jo     0x41be19
  41bd9f:	repz push edx
  41bda1:	pop    eax
  41bda2:	and    ecx,DWORD PTR [eax]
  41bda4:	adc    al,0x73
  41bda6:	mov    bl,0x58
  41bda8:	push   ebp
  41bda9:	mov    edx,0xaaa29167
  41bdae:	ror    DWORD PTR [eax-0xef4979b],1
  41bdb4:	test   DWORD PTR [eax],ebp
  41bdb6:	mov    eax,0xec2352b7
  41bdbb:	pop    esp
  41bdbc:	xchg   edx,eax
  41bdbd:	or     al,0xe6
  41bdbf:	(bad)  
  41bdc0:	je     0x41bd85
  41bdc2:	mov    ebx,0x6489ce9
  41bdc7:	inc    edx
  41bdc8:	imul   edx,ecx,0xffffff95
  41bdcb:	dec    ebp
  41bdcc:	gs jmp 0x415fbd66
  41bdd2:	cmp    ecx,esi
  41bdd4:	icebp  
  41bdd5:	cmp    cl,ah
  41bdd7:	pushf  
  41bdd8:	and    DWORD PTR [ecx-0x73],esp
  41bddb:	test   DWORD PTR [ecx+eax*2+0x331bda8d],0x4adf5e24
  41bde6:	cmp    DWORD PTR [bx+di],esi
  41bde9:	mov    cl,0x19
  41bdeb:	out    0xfb,eax
  41bded:	fs jne 0x41be2f
  41bdf0:	fisttp WORD PTR [esp+eax*4+0x62c8764e]
  41bdf7:	fs dec eax
  41bdf9:	les    edi,FWORD PTR [edx]
  41bdfb:	stc    
  41bdfc:	cmp    ah,ch
  41bdfe:	arpl   WORD PTR [edi+0x33],bp
  41be01:	pop    edi
  41be02:	xor    al,0x3e
  41be04:	icebp  
  41be05:	imul   ebp,edi,0xcc813f05
  41be0b:	loop   0x41be7f
  41be0d:	or     BYTE PTR [edx+ebp*2],ah
  41be10:	mov    BYTE PTR [edx+0x4b],cl
  41be13:	cmc    
  41be14:	and    eax,0xa43600c5
  41be19:	lods   al,BYTE PTR ds:[esi]
  41be1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1b:	dec    esp
  41be1c:	xor    al,0xd7
  41be1e:	std    
  41be1f:	pop    edi
  41be20:	test   DWORD PTR [edi+edi*4],ebx
  41be23:	cmp    BYTE PTR [esi-0x16],ch
  41be26:	adc    bl,bh
  41be28:	test   DWORD PTR [ebx+eiz*2],edi
  41be2b:	gs inc edi
  41be2d:	cmp    DWORD PTR [ebp-0x7],ecx
  41be30:	dec    ecx
  41be31:	aas    
  41be32:	mov    edx,0x51dcf889
  41be37:	stos   DWORD PTR es:[edi],eax
  41be38:	loope  0x41bdca
  41be3a:	sub    ebx,0x2b4786c5
  41be40:	push   ds
  41be41:	bound  esi,QWORD PTR [ebx-0x19]
  41be44:	cs dec edi
  41be46:	dec    eax
  41be47:	jmp    0x7273e7ed
  41be4c:	stc    
  41be4d:	dec    eax
  41be4e:	sub    ch,ah
  41be50:	add    ebx,DWORD PTR [ebx+eiz*4]
  41be53:	aad    0x66
  41be55:	icebp  
  41be56:	addr16 fs or eax,0xcb44a428
  41be5d:	data16 jbe 0x41be62
  41be60:	mov    DWORD PTR [edi+0x5a],esi
  41be63:	out    dx,eax
  41be64:	std    
  41be65:	clc    
  41be66:	fwait
  41be67:	mov    ebx,0x368cb5d5
  41be6c:	mov    al,cl
  41be6e:	loop   0x41be57
  41be70:	jns    0x41bdfb
  41be72:	pop    ds
  41be73:	mov    al,0x70
  41be75:	scas   eax,DWORD PTR es:[edi]
  41be76:	mov    bh,0x22
  41be78:	outs   dx,DWORD PTR ds:[esi]
  41be79:	push   0x88c5efe8
  41be7e:	xchg   DWORD PTR [eax+0x3b95a928],esp
  41be84:	mov    dl,0x96
  41be86:	(bad)  
  41be87:	call   FWORD PTR [ecx+0x77]
  41be8a:	xchg   ebp,eax
  41be8b:	add    ebx,DWORD PTR [ecx]
  41be8d:	xchg   ebx,eax
  41be8e:	pop    ecx
  41be8f:	data16 or al,0x39
  41be92:	pop    es
  41be93:	scas   al,BYTE PTR es:[edi]
  41be94:	mov    ebx,0x849cfef6
  41be99:	les    esp,FWORD PTR [ecx+0x2e]
  41be9c:	push   cs
  41be9d:	adc    esp,ecx
  41be9f:	dec    esi
  41bea0:	or     cl,bl
  41bea2:	push   esp
  41bea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea4:	call   0xb7d5:0xfa4a512
  41beab:	loope  0x41bef6
  41bead:	out    dx,eax
  41beae:	sbb    dh,cl
  41beb0:	ins    DWORD PTR es:[edi],dx
  41beb1:	fldenv [ebx]
  41beb3:	std    
  41beb4:	cmp    eax,DWORD PTR [esi]
  41beb6:	pop    ecx
  41beb7:	mov    bl,0x51
  41beb9:	dec    esp
  41beba:	push   esp
  41bebb:	and    DWORD PTR [ebp+0x3ccf2c4c],edx
  41bec1:	arpl   WORD PTR [eax-0x5e],cx
  41bec4:	(bad)  
  41bec5:	dec    eax
  41bec6:	add    BYTE PTR cs:[ecx-0x1e9d2678],bh
  41becd:	sbb    esi,DWORD PTR [edi+edx*2+0x2e8697c2]
  41bed4:	shr    BYTE PTR [edi+0x33],0x93
  41bed8:	fxch   st(0)
  41beda:	push   es
  41bedb:	push   ebx
  41bedc:	icebp  
  41bedd:	sub    ebx,edi
  41bedf:	jne    0x41bed5
  41bee1:	jge    0x41bf26
  41bee3:	push   edx
  41bee4:	pushf  
  41bee5:	shl    BYTE PTR [ebx-0x13d4258d],0x22
  41beec:	mov    dl,0xcb
  41beee:	iret   
  41beef:	aam    0x40
  41bef1:	pop    esi
  41bef2:	push   ss
  41bef3:	pop    edi
  41bef4:	aaa    
  41bef5:	sbb    dl,BYTE PTR [edx]
  41bef7:	xchg   edx,eax
  41bef8:	jo     0x41be9a
  41befa:	xchg   esi,eax
  41befb:	mov    ds:0xc38612b2,eax
  41bf00:	int3   
  41bf01:	mov    ebp,0x49609ece
  41bf06:	out    0x3d,eax
  41bf08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf09:	int3   
  41bf0a:	dec    edx
  41bf0b:	push   esp
  41bf0c:	stos   BYTE PTR es:[edi],al
  41bf0d:	add    DWORD PTR [esi-0x28],esp
  41bf10:	mov    esi,es
  41bf12:	push   esp
  41bf13:	mov    esp,0x7a789f09
  41bf18:	pop    es
  41bf19:	popf   
  41bf1a:	xchg   ebp,ebx
  41bf1c:	loopne 0x41bf99
  41bf1e:	outs   dx,BYTE PTR ds:[esi]
  41bf1f:	xor    eax,0xba9fd60c
  41bf25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf26:	ret    0xeede
  41bf29:	pop    edi
  41bf2a:	dec    ebp
  41bf2b:	dec    edx
  41bf2c:	jnp    0x41bf5c
  41bf2e:	repnz adc ch,BYTE PTR ds:0xe43b506f
  41bf35:	cmp    eax,DWORD PTR [ebp+0x2f]
  41bf38:	shl    BYTE PTR [ebx-0xb],0x6b
  41bf3c:	or     DWORD PTR [eax-0x5d],edi
  41bf3f:	loopne 0x41bf5d
  41bf41:	inc    ebx
  41bf42:	sub    eax,0xc23ff9f7
  41bf47:	gs retf 
  41bf49:	push   ss
  41bf4a:	sub    eax,0xe9c7f3ac
  41bf4f:	inc    ebx
  41bf50:	add    dh,BYTE PTR [edx+esi*2+0x108578d7]
  41bf57:	push   edi
  41bf58:	call   0xce5168f5
  41bf5d:	(bad)  [ebp+eiz*1+0x7439945b]
  41bf64:	inc    ebp
  41bf65:	lods   eax,DWORD PTR ds:[esi]
  41bf66:	sbb    eax,DWORD PTR [edx-0x11cd243c]
  41bf6c:	lods   eax,DWORD PTR ds:[esi]
  41bf6d:	jecxz  0x41bf1f
  41bf6f:	lea    ebx,[esi+0x65]
  41bf72:	cmp    ecx,edi
  41bf74:	sbb    BYTE PTR [ecx-0x25],bh
  41bf77:	xor    BYTE PTR [ecx+ebx*1],al
  41bf7a:	sar    dh,0x1c
  41bf7d:	loopne 0x41bff3
  41bf7f:	stos   DWORD PTR es:[edi],eax
  41bf80:	or     BYTE PTR [ecx+0x2f484d93],dl
  41bf86:	mov    al,0xf4
  41bf88:	cmp    DWORD PTR [ebp-0x21dd6122],edx
  41bf8e:	repnz mov cl,0x53
  41bf91:	out    0xd2,al
  41bf93:	pop    edi
  41bf94:	dec    edi
  41bf95:	neg    BYTE PTR ds:0xa1c12051
  41bf9b:	push   eax
  41bf9c:	inc    edx
  41bf9d:	or     al,BYTE PTR [edi-0x7d1672c4]
  41bfa3:	mov    al,0x80
  41bfa5:	shl    DWORD PTR [ebx-0xf65f90f],cl
  41bfab:	xchg   ecx,eax
  41bfac:	retf   
  41bfad:	cmp    eax,0x57a9de62
  41bfb2:	jnp    0x41bf62
  41bfb4:	xor    ebp,DWORD PTR [eax+edx*8]
  41bfb7:	imul   edi,DWORD PTR ds:0x65f31c95,0xffffff9d
  41bfbe:	std    
  41bfbf:	push   esi
  41bfc0:	fild   QWORD PTR [edi-0x79]
  41bfc3:	fisubr WORD PTR [edi+0x2e4f3658]
  41bfc9:	fdiv   st,st(1)
  41bfcb:	add    DWORD PTR es:[eax-0x2daeb2ec],ebp
  41bfd2:	ja     0x41bfce
  41bfd4:	sub    edx,esi
  41bfd6:	retf   0xafdf
  41bfd9:	aam    0x9d
  41bfdb:	mov    edi,0xcfa33770
  41bfe0:	cdq    
  41bfe1:	in     eax,dx
  41bfe2:	push   ecx
  41bfe3:	jbe    0x41bfed
  41bfe5:	cmp    BYTE PTR [edx+0x54],bl
  41bfe8:	in     eax,0xe5
  41bfea:	jp     0x41bfd8
  41bfec:	ret    
  41bfed:	out    0xfc,eax
  41bfef:	jmp    0x8d1f:0xc6811d61
  41bff6:	frstor [ebp+0x7f3bc8d3]
  41bffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bffd:	mov    dl,0x6e
  41bfff:	jecxz  0x41bfea
  41c001:	push   ss
  41c002:	and    DWORD PTR [edx],esi
  41c004:	sbb    ebx,DWORD PTR [edi]
  41c006:	xchg   esi,eax
  41c007:	mov    bh,0x77
  41c009:	mov    esi,0xc41c4dbb
  41c00e:	jne    0x41c00b
  41c010:	pusha  
  41c011:	sub    eax,0xd4e659b5
  41c016:	mov    gs,WORD PTR [edi+0x36]
  41c019:	add    ebx,esi
  41c01b:	jae    0x41c01f
  41c01d:	shr    DWORD PTR [edi+eax*1-0x47a87494],0x47
  41c025:	and    eax,0x2ad5dce5
  41c02a:	enter  0x816,0xc5
  41c02e:	fadd   DWORD PTR [ecx+0x43c3005f]
  41c034:	pop    ebp
  41c035:	ins    BYTE PTR es:[edi],dx
  41c036:	nop
  41c037:	xchg   esi,eax
  41c039:	add    eax,0x6d1320cd
  41c03e:	jg     0x41c057
  41c040:	aas    
  41c041:	(bad)  
  41c042:	push   eax
  41c043:	sahf   
  41c044:	aam    0xd9
  41c046:	das    
  41c047:	inc    ebx
  41c048:	or     al,0x75
  41c04a:	xchg   edx,eax
  41c04b:	rol    BYTE PTR [esi+0x587ea217],0x5a
  41c052:	xchg   ecx,eax
  41c053:	test   al,0x40
  41c055:	cmp    BYTE PTR [esp+edx*1+0x78bf1a2b],al
  41c05c:	mov    dh,0xf8
  41c05e:	sub    dh,cl
  41c060:	sub    al,0x98
  41c062:	mov    ds:0xaba13205,al
  41c067:	retf   0x858
  41c06a:	arpl   WORD PTR [ecx+0x3e],sp
  41c06d:	mov    DWORD PTR [ebx-0x4f1ae67],esp
  41c073:	pop    esi
  41c074:	leave  
  41c075:	nop
  41c076:	xor    eax,0xc169bbee
  41c07b:	retf   0xeb4
  41c07e:	push   0x63166ce9
  41c083:	add    bh,BYTE PTR [ecx-0x3f]
  41c086:	xchg   ebp,eax
  41c087:	adc    edx,DWORD PTR [esi]
  41c089:	adc    ecx,DWORD PTR [ecx+0x47]
  41c08c:	mov    ecx,0x23907e5
  41c091:	fsubr  DWORD PTR [eax+0x1124dc44]
  41c097:	(bad)  
  41c098:	pop    edx
  41c099:	jns    0x41c0c9
  41c09b:	jg     0x41c02d
  41c09d:	stc    
  41c09e:	mov    al,0xc0
  41c0a0:	repnz leave 
  41c0a2:	lds    esp,FWORD PTR [eax+0x79]
  41c0a5:	repz scas eax,DWORD PTR es:[edi]
  41c0a7:	add    DWORD PTR [eax+0xe],eax
  41c0aa:	aad    0x3b
  41c0ac:	cs int3 
  41c0ae:	adc    DWORD PTR [edi+ebx*2+0x30],0xd42f1f09
  41c0b6:	aam    0xdb
  41c0b8:	inc    eax
  41c0b9:	ins    BYTE PTR es:[edi],dx
  41c0ba:	(bad)  
  41c0bb:	je     0x41c136
  41c0bd:	pop    edi
  41c0be:	jmp    0x41c123
  41c0c0:	mov    bl,0x1d
  41c0c2:	fnstenv [ecx+eax*4+0x2271a700]
  41c0c9:	jno    0x41c11e
  41c0cb:	fsubr  DWORD PTR [ecx]
  41c0cd:	dec    eax
  41c0ce:	push   ecx
  41c0cf:	mov    BYTE PTR [eax],bh
  41c0d1:	jo     0x41c069
  41c0d3:	jmp    0x443e1068
  41c0d8:	sub    DWORD PTR [edx+edx*2],0xffffffde
  41c0dc:	jno    0x41c065
  41c0de:	sub    BYTE PTR [eax-0x1b89ff69],0xf1
  41c0e5:	sbb    dl,al
  41c0e7:	mov    ebp,0x2b573f03
  41c0ec:	xor    dh,0x17
  41c0ef:	sar    esp,cl
  41c0f1:	fidivr WORD PTR [edi]
  41c0f3:	add    edi,eax
  41c0f5:	je     0x41c077
  41c0f7:	sub    ebx,DWORD PTR [ebx]
  41c0f9:	loope  0x41c120
  41c0fb:	sub    BYTE PTR [ecx-0x61],ah
  41c0fe:	and    esi,edx
  41c100:	jo     0x41c17e
  41c102:	data16 cli 
  41c104:	xchg   esi,eax
  41c105:	(bad)  
  41c106:	dec    ebx
  41c107:	adc    BYTE PTR [ebp+0x1a],cl
  41c10a:	int    0x30
  41c10c:	sub    DWORD PTR [edx],eax
  41c10e:	repz aas 
  41c110:	int    0xb7
  41c112:	inc    ebx
  41c113:	inc    ebp
  41c114:	fstp   TBYTE PTR [eax]
  41c116:	lods   al,BYTE PTR ds:[esi]
  41c117:	mov    BYTE PTR ds:0x98e8835c,dh
  41c11d:	pop    es
  41c11e:	inc    eax
  41c11f:	mov    esp,0xa22dfe97
  41c124:	aas    
  41c125:	clc    
  41c126:	jo     0x41c19c
  41c128:	xor    BYTE PTR [eax+edi*4],cl
  41c12b:	mov    BYTE PTR [edi],bl
  41c12d:	and    DWORD PTR [ebx-0x64f3df2b],esi
  41c133:	in     al,dx
  41c134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c135:	hlt    
  41c136:	push   eax
  41c137:	xor    BYTE PTR [ecx],cl
  41c139:	add    BYTE PTR [edx-0x5b],bl
  41c13c:	push   edi
  41c13d:	mov    ebx,0x29a44eff
  41c142:	push   ebp
  41c143:	in     eax,dx
  41c144:	loop   0x41c193
  41c146:	jae    0x41c1a7
  41c148:	mov    al,0xd7
  41c14a:	dec    eax
  41c14b:	pop    ecx
  41c14c:	mov    BYTE PTR [ebx-0x12],ch
  41c14f:	inc    ebx
  41c150:	pop    esp
  41c151:	scas   eax,DWORD PTR es:[edi]
  41c152:	imul   ebx,DWORD PTR [esp+eiz*8],0xffffffea
  41c156:	leave  
  41c157:	jmp    0x24d:0xeed8aee4
  41c15e:	push   eax
  41c15f:	mov    dl,0x8
  41c161:	jb     0x41c11b
  41c163:	mov    bh,0x55
  41c165:	lds    eax,FWORD PTR ds:0x7e17adce
  41c16b:	rol    ebx,cl
  41c16d:	jno    0x41c13a
  41c16f:	cmp    al,0x54
  41c171:	add    eax,0x2cac47cb
  41c176:	mov    ebp,0x7277e1af
  41c17b:	iret   
  41c17c:	lods   eax,DWORD PTR ds:[esi]
  41c17d:	push   esp
  41c17e:	pop    edi
  41c17f:	fimul  WORD PTR [esi]
  41c181:	shl    BYTE PTR [eax+0x53],0xa7
  41c185:	mov    edx,0xee79b356
  41c18a:	retf   
  41c18b:	jo     0x41c158
  41c18d:	inc    esp
  41c18e:	fistp  QWORD PTR ds:0xd73e516e
  41c194:	push   edx
  41c195:	pop    esp
  41c196:	sub    al,0xb3
  41c198:	int3   
  41c199:	jae    0x41c1aa
  41c19b:	pop    esi
  41c19c:	sub    BYTE PTR [ebx],ch
  41c19e:	push   0x93385b17
  41c1a3:	clc    
  41c1a4:	(bad)  
  41c1a5:	shl    DWORD PTR [edx],1
  41c1a7:	lds    edi,FWORD PTR [eax+0x42240632]
  41c1ad:	push   edx
  41c1ae:	mov    bh,0x82
  41c1b0:	xchg   BYTE PTR [eax-0x6c],dl
  41c1b3:	fmul   DWORD PTR [ebx+eax*2+0x7b]
  41c1b7:	mov    edi,cs
  41c1b9:	jp     0x41c15c
  41c1bb:	jns    0x41c20b
  41c1bd:	xor    edi,DWORD PTR [ecx-0x701cd584]
  41c1c3:	lods   al,BYTE PTR ds:[esi]
  41c1c4:	mov    ecx,0xa9150a0d
  41c1c9:	pop    esp
  41c1ca:	imul   eax,DWORD PTR ds:0x5c2f3b5b,0xffffff9c
  41c1d1:	mov    ch,0xaf
  41c1d3:	mov    ah,0x47
  41c1d5:	rcr    DWORD PTR [ebx],cl
  41c1d7:	xor    bh,BYTE PTR [eax]
  41c1d9:	or     eax,0xf8f4e957
  41c1de:	sub    eax,DWORD PTR [ebx+0x305596c5]
  41c1e4:	mov    esp,0x3c5a989d
  41c1e9:	mov    al,BYTE PTR [eax-0x5d39dac3]
  41c1ef:	je     0x41c1f7
  41c1f1:	inc    eax
  41c1f2:	pop    ebp
  41c1f3:	cmp    DWORD PTR [esi+0x72],esi
  41c1f6:	push   ebx
  41c1f7:	push   esp
  41c1f8:	push   esi
  41c1f9:	into   
  41c1fa:	or     eax,ecx
  41c1fc:	clc    
  41c1fd:	mov    DWORD PTR [ebp-0x679d7fdc],0xefa7da3b
  41c207:	jns    0x41c237
  41c209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c20a:	ret    
  41c20b:	pushf  
  41c20c:	pop    edx
  41c20d:	(bad)  [edx-0x74]
  41c210:	inc    esp
  41c211:	int3   
  41c212:	enter  0xbe76,0xd4
  41c216:	lods   al,BYTE PTR ds:[esi]
  41c217:	dec    ebp
  41c218:	dec    ebx
  41c219:	jno    0x41c1b7
  41c21b:	mov    bl,0xa4
  41c21d:	sbb    eax,0x5925dcb2
  41c222:	ds mov bh,0x2a
  41c225:	fcmovnb st,st(6)
  41c227:	cmp    ah,BYTE PTR [edx-0x75d4ade]
  41c22d:	out    dx,al
  41c22e:	daa    
  41c22f:	inc    eax
  41c230:	adc    al,0xbf
  41c232:	in     eax,0x86
  41c234:	and    al,0xd6
  41c236:	jle    0x41c1e5
  41c238:	pop    ecx
  41c239:	jns    0x41c266
  41c23b:	fbld   TBYTE PTR [eax]
  41c23d:	push   edi
  41c23e:	push   0xffffff83
  41c240:	xchg   edx,eax
  41c241:	push   esp
  41c242:	mov    eax,ds:0xfc8ca162
  41c247:	sbb    DWORD PTR [edi-0x537ddb1b],ecx
  41c24d:	adc    al,0xf7
  41c24f:	mov    ds:0xb821bcaf,al
  41c254:	jnp    0x41c2cc
  41c256:	adc    eax,0x925e89f7
  41c25b:	mov    esp,0x192e393
  41c260:	dec    edx
  41c261:	sub    DWORD PTR [esi+0x43cf36ee],edi
  41c267:	stos   BYTE PTR es:[edi],al
  41c268:	xor    eax,DWORD PTR ss:[di+0x49]
  41c26d:	sbb    BYTE PTR [esi+esi*8],dh
  41c270:	test   eax,0x579cf53f
  41c275:	inc    edi
  41c276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c277:	std    
  41c278:	push   eax
  41c279:	(bad)  
  41c27a:	rcr    esp,0x17
  41c27d:	pop    edi
  41c27e:	add    bl,ch
  41c280:	cmc    
  41c281:	in     eax,0xd3
  41c283:	scas   eax,DWORD PTR es:[edi]
  41c284:	mov    cl,0x60
  41c286:	cmp    al,BYTE PTR [ecx+0xe]
  41c289:	cmp    al,0x12
  41c28b:	lea    eax,[esi+0x2a]
  41c28e:	pop    edi
  41c28f:	jecxz  0x41c2a5
  41c291:	sub    al,0x9
  41c293:	lea    esp,ds:0xd693d92c
  41c299:	nop
  41c29a:	stos   BYTE PTR es:[edi],al
  41c29b:	xchg   ecx,eax
  41c29c:	or     edi,DWORD PTR [ebx-0x3a98f7c2]
  41c2a2:	stc    
  41c2a3:	add    DWORD PTR [esi-0x9],edi
  41c2a6:	out    0x40,al
  41c2a8:	(bad)  
  41c2a9:	retf   0x5d7f
  41c2ac:	iret   
  41c2ad:	out    0x71,eax
  41c2af:	ja     0x41c237
  41c2b1:	ds pop esp
  41c2b3:	and    ch,cl
  41c2b5:	fstp   TBYTE PTR [esi-0x53be7027]
  41c2bb:	daa    
  41c2bc:	xchg   edi,eax
  41c2bd:	mov    ecx,edx
  41c2bf:	in     al,dx
  41c2c0:	xchg   esi,eax
  41c2c1:	les    esi,FWORD PTR [ecx]
  41c2c3:	je     0x41c298
  41c2c5:	mov    ch,0xb0
  41c2c7:	fdiv   QWORD PTR [ecx+edi*1+0x3237522e]
  41c2ce:	aas    
  41c2cf:	jnp    0x41c2e3
  41c2d1:	mov    dl,0x2d
  41c2d3:	dec    edi
  41c2d4:	jo     0x41c2d1
  41c2d6:	add    BYTE PTR [eax],ch
  41c2d8:	jno    0x41c323
  41c2da:	push   ebx
  41c2db:	add    eax,0xa2eb7354
  41c2e0:	push   es
  41c2e1:	in     eax,dx
  41c2e2:	clc    
  41c2e3:	add    ebp,DWORD PTR [esi+0x77]
  41c2e6:	inc    eax
  41c2e7:	(bad)  
  41c2e8:	into   
  41c2e9:	sahf   
  41c2ea:	mov    esi,0xa93b1836
  41c2ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2f0:	addr16 int3 
  41c2f2:	xor    eax,0xc01d928c
  41c2f7:	cmp    ah,ch
  41c2f9:	lock xor eax,0x32c4fc9e
  41c2ff:	call   0x1fd0c9bf
  41c304:	popa   
  41c305:	jmp    0x41c2e9
  41c307:	mov    ecx,0x8f74104d
  41c30c:	add    al,0x94
  41c30e:	cmp    esi,DWORD PTR [ebp-0x38c717bf]
  41c314:	inc    ebx
  41c315:	es mov eax,0x97a3bac8
  41c31b:	std    
  41c31c:	pop    es
  41c31d:	jecxz  0x41c2ca
  41c31f:	sbb    bh,ch
  41c321:	clc    
  41c322:	mov    ds:0x3a450b82,eax
  41c327:	adc    esi,edx
  41c329:	arpl   bp,dx
  41c32b:	jo     0x41c334
  41c32d:	push   esi
  41c32e:	xchg   DWORD PTR [ecx-0x1c48424],ebp
  41c334:	imul   esi,DWORD PTR [edi-0x7f],0xf5a15707
  41c33b:	push   cs
  41c33c:	mov    esi,edx
  41c33e:	xor    DWORD PTR [esi-0x14],0x847c7ef8
  41c345:	add    al,0x13
  41c347:	and    dh,ch
  41c349:	mov    WORD PTR [ebp+0x6edb721a],fs
  41c34f:	outs   dx,BYTE PTR ds:[esi]
  41c350:	inc    edi
  41c351:	imul   ecx,DWORD PTR [edi-0x8db2cbb],0x27
  41c358:	imul   ebx,ebx,0xbc6e1e09
  41c35e:	ja     0x41c34b
  41c360:	ss xchg edi,eax
  41c362:	and    DWORD PTR ds:0xfc7e112b,edi
  41c368:	mov    bh,0xda
  41c36a:	repnz imul ebx,DWORD PTR [ecx+0x32d5c0f7],0x6638ea6b
  41c375:	adc    BYTE PTR [edi+0x1095f7ff],bl
  41c37b:	inc    ecx
  41c37c:	pop    ecx
  41c37d:	out    0xeb,al
  41c37f:	mov    ah,0xde
  41c381:	test   DWORD PTR [ecx],eax
  41c383:	xor    edx,DWORD PTR [eax-0x4f41e5a2]
  41c389:	add    dh,ch
  41c38b:	sahf   
  41c38c:	lods   al,BYTE PTR ds:[esi]
  41c38d:	push   ebp
  41c38e:	sbb    al,0x12
  41c390:	or     edx,DWORD PTR [edx-0x22]
  41c393:	dec    edi
  41c394:	fistp  QWORD PTR [ebx-0x15aa8c08]
  41c39a:	scas   eax,DWORD PTR es:[edi]
  41c39b:	lock cwde 
  41c39d:	dec    eax
  41c39e:	loopne 0x41c32c
  41c3a0:	push   ebp
  41c3a1:	mov    eax,0xd68488ce
  41c3a6:	or     eax,0x5c96c762
  41c3ab:	mov    ss,esi
  41c3ad:	lds    edx,FWORD PTR [ebp+esi*1+0x42452331]
  41c3b4:	mov    ah,0x1
  41c3b6:	mov    edi,0xfd21e3ac
  41c3bb:	push   ebp
  41c3bc:	inc    edi
  41c3bd:	adc    al,0xa1
  41c3bf:	or     ecx,DWORD PTR [ebx]
  41c3c1:	xor    al,0x95
  41c3c3:	or     al,0x66
  41c3c5:	adc    DWORD PTR [edi-0x1c56f0ff],ebx
  41c3cb:	jmp    0x41c392
  41c3cd:	pop    edi
  41c3ce:	inc    esi
  41c3cf:	or     BYTE PTR [ebx],dh
  41c3d1:	inc    edi
  41c3d2:	jns    0x41c41e
  41c3d4:	push   ebp
  41c3d5:	out    0xd6,eax
  41c3d7:	and    ebp,DWORD PTR [ecx]
  41c3d9:	adc    DWORD PTR ds:0xd12c2b88,ebp
  41c3df:	(bad)  
  41c3e0:	jb     0x41c398
  41c3e2:	sti    
  41c3e3:	fsub   DWORD PTR [edi-0x7d900707]
  41c3e9:	(bad)  
  41c3eb:	addr16 in al,0x84
  41c3ee:	jecxz  0x41c390
  41c3f0:	jbe    0x41c3ef
  41c3f2:	or     cl,BYTE PTR [eax-0x60]
  41c3f5:	outs   dx,DWORD PTR ds:[esi]
  41c3f6:	lahf   
  41c3f7:	mov    ch,BYTE PTR [edi-0x5aa5d69e]
  41c3fd:	push   edi
  41c3fe:	jmp    0xbbfcdf63
  41c403:	inc    ebp
  41c404:	iret   
  41c405:	or     DWORD PTR [edx],ecx
  41c407:	call   FWORD PTR [esi+ebp*8+0x2b]
  41c40b:	push   es
  41c40c:	unpckhps xmm4,XMMWORD PTR [ebp-0x59]
  41c410:	push   ss
  41c411:	(bad)  
  41c412:	popa   
  41c413:	jbe    0x41c398
  41c415:	or     ch,BYTE PTR [ecx+ecx*4-0x3f585dcd]
  41c41c:	test   eax,0xd007cf48
  41c421:	xor    eax,0xe521bd37
  41c426:	mov    dh,0x2
  41c428:	dec    edx
  41c429:	ror    DWORD PTR [ebp-0x3b],0x1e
  41c42d:	inc    ecx
  41c42e:	shr    dl,1
  41c430:	imul   ecx,DWORD PTR [ebp-0x1],0x70631c10
  41c437:	fcomp  st(6)
  41c439:	lods   al,BYTE PTR ds:[esi]
  41c43a:	sahf   
  41c43b:	ins    BYTE PTR es:[edi],dx
  41c43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43d:	jbe    0x41c3ef
  41c43f:	ins    BYTE PTR es:[edi],dx
  41c440:	mov    dl,0xa5
  41c442:	shl    DWORD PTR [ebp-0x3251b7f2],1
  41c448:	test   eax,edx
  41c44a:	inc    edi
  41c44b:	outs   dx,DWORD PTR ds:[esi]
  41c44c:	mov    ah,0x5b
  41c44e:	mov    gs:0xeeb59442,al
  41c454:	std    
  41c455:	fmul   st,st(0)
  41c457:	xor    al,0x2
  41c459:	iret   
  41c45a:	repnz fs dec ecx
  41c45d:	les    ebx,FWORD PTR [edi+0x4e]
  41c460:	or     al,0x91
  41c462:	lahf   
  41c463:	fisttp QWORD PTR [eax+0x3b9052fb]
  41c469:	sbb    ah,BYTE PTR [edi-0xd]
  41c46c:	xor    DWORD PTR [eax+esi*8-0x75],esi
  41c470:	xor    al,0x86
  41c472:	call   0xc665:0xa03d3a6a
  41c479:	inc    eax
  41c47a:	push   ecx
  41c47b:	inc    esi
  41c47c:	and    esi,edx
  41c47e:	sbb    al,0xf3
  41c480:	pop    esi
  41c481:	adc    al,0xe8
  41c483:	mov    esi,0xdb8ec5fb
  41c488:	cwde   
  41c489:	dec    esp
  41c48a:	ins    DWORD PTR es:[edi],dx
  41c48b:	stc    
  41c48c:	cwde   
  41c48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48e:	dec    ebx
  41c48f:	pop    edx
  41c491:	shl    BYTE PTR [edi-0x3bad1d20],0x74
  41c498:	mov    esi,0xb6917c30
  41c49d:	push   esp
  41c49e:	dec    edx
  41c49f:	jnp    0x41c4af
  41c4a1:	mov    WORD PTR [edx-0x6b],ss
  41c4a4:	enter  0x49bd,0x32
  41c4a8:	push   ebx
  41c4a9:	mov    cl,0x90
  41c4ab:	sbb    DWORD PTR [eax+ecx*8+0x45b7722e],0x49537174
  41c4b6:	xlat   BYTE PTR ds:[ebx]
  41c4b7:	or     DWORD PTR [ecx+esi*4-0x1d],esp
  41c4bb:	dec    ebx
  41c4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4bd:	fidiv  DWORD PTR [ebx-0x6f57de5b]
  41c4c3:	push   cs
  41c4c4:	dec    ecx
  41c4c5:	mov    WORD PTR [ebx],fs
  41c4c7:	pop    esp
  41c4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4c9:	dec    edi
  41c4ca:	fwait
  41c4cb:	cmp    eax,0x2b8d29e5
  41c4d0:	add    al,0xe6
  41c4d2:	fsub   DWORD PTR [ecx+0x16]
  41c4d5:	leave  
  41c4d6:	sub    al,0xbf
  41c4d8:	lods   al,BYTE PTR ds:[esi]
  41c4d9:	inc    eax
  41c4da:	out    0xc7,al
  41c4dc:	xor    eax,0xae4b8d2
  41c4e1:	mov    esp,0x277bbd64
  41c4e6:	cwde   
  41c4e7:	adc    al,BYTE PTR [edi]
  41c4e9:	loope  0x41c4b0
  41c4eb:	pop    ecx
  41c4ec:	pop    ds
  41c4ed:	outs   dx,DWORD PTR ds:[esi]
  41c4ee:	shl    ebx,cl
  41c4f0:	jno    0x41c53b
  41c4f2:	ret    0xa078
  41c4f5:	sbb    eax,0x6ae0d801
  41c4fa:	push   di
  41c4fc:	(bad)  
  41c4fd:	cmp    BYTE PTR [esi],dh
  41c4ff:	mov    dh,0xa7
  41c501:	adc    eax,0xdc04948
  41c506:	nop
  41c507:	fild   DWORD PTR [esi]
  41c509:	mov    esp,0x69c8e2a8
  41c50e:	adc    esp,DWORD PTR ds:0x63416ea9
  41c514:	cmp    ebp,ecx
  41c516:	lock xchg ecx,eax
  41c518:	rol    BYTE PTR [edx+0x2c],0x6e
  41c51c:	pop    ebx
  41c51d:	imul   edx,edi,0x426eb024
  41c523:	mov    esp,edx
  41c525:	(bad)  
  41c526:	cmp    DWORD PTR [edx+0x4272d820],ecx
  41c52c:	cmp    bh,cl
  41c52e:	mov    bl,0xa2
  41c530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c531:	aad    0xed
  41c533:	(bad)  
  41c534:	repz and BYTE PTR [ebp-0x4a],dh
  41c538:	cwde   
  41c539:	stc    
  41c53a:	mov    DWORD PTR [esp+edx*1],ebp
  41c53d:	shr    BYTE PTR [ebx-0x7fabd764],0xc3
  41c544:	fsub   st,st(0)
  41c546:	js     0x41c594
  41c548:	arpl   WORD PTR [ebx+ecx*4+0x77af9fa2],bx
  41c54f:	sub    cl,BYTE PTR [ebp-0x1ece21f5]
  41c555:	bound  esi,QWORD PTR [eax]
  41c557:	mov    edx,DWORD PTR [ebx]
  41c559:	mov    ecx,0xfc1fc575
  41c55e:	in     al,0x29
  41c560:	aam    0xa8
  41c562:	push   ss
  41c563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c564:	jp     0x41c51b
  41c566:	cwde   
  41c567:	dec    edi
  41c568:	push   eax
  41c569:	(bad)  
  41c56a:	not    DWORD PTR [edi+0x7d]
  41c56d:	out    0xa,eax
  41c56f:	mov    ecx,0x6dbd80cb
  41c574:	and    cl,BYTE PTR ds:0xc557133f
  41c57a:	dec    eax
  41c57b:	lock xor bh,ah
  41c57e:	adc    dl,BYTE PTR [ebp-0x6e]
  41c581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c582:	in     eax,dx
  41c583:	and    ebp,DWORD PTR [ebx]
  41c585:	loope  0x41c535
  41c587:	out    dx,eax
  41c588:	call   FWORD PTR [ebx+0x365609eb]
  41c58e:	outs   dx,BYTE PTR ds:[esi]
  41c58f:	shr    DWORD PTR [edi-0x4e],1
  41c592:	pop    ebx
  41c593:	inc    ebx
  41c594:	mov    eax,ds:0x2e6f3f3d
  41c599:	fimul  WORD PTR [ebx+0x53d02bba]
  41c59f:	inc    edx
  41c5a0:	xchg   DWORD PTR [esi-0x36],ebx
  41c5a3:	add    dh,BYTE PTR [esi+0xe]
  41c5a6:	mov    bh,0x7e
  41c5a8:	sub    al,0x9f
  41c5aa:	mov    bl,0x54
  41c5ac:	and    eax,0xc0a87317
  41c5b1:	add    BYTE PTR [ebx-0x41ac54dc],dh
  41c5b7:	inc    edi
  41c5b8:	push   ss
  41c5b9:	js     0x41c5b7
  41c5bb:	push   ecx
  41c5bc:	adc    eax,0xeaebf14e
  41c5c1:	xor    eax,DWORD PTR [eax]
  41c5c3:	call   0xde9bfcab
  41c5c8:	in     eax,dx
  41c5c9:	cs test al,0xf6
  41c5cc:	gs fs fs push ebx
  41c5d0:	mov    eax,0x7c0abc7a
  41c5d5:	adc    eax,0x554e163e
  41c5da:	mov    edi,0xfc94a029
  41c5df:	icebp  
  41c5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e1:	sahf   
  41c5e2:	push   ds
  41c5e3:	sar    DWORD PTR [ebx-0x6f],0x39
  41c5e7:	push   esp
  41c5e8:	sub    edi,DWORD PTR [bx+0x5c]
  41c5ec:	loopne 0x41c612
  41c5ee:	shl    BYTE PTR [ebp+0x16],cl
  41c5f1:	int3   
  41c5f2:	out    0xe1,al
  41c5f4:	dec    ebx
  41c5f5:	jmp    0x41c5b3
  41c5f7:	out    dx,eax
  41c5f8:	jmp    0x41c645
  41c5fa:	test   DWORD PTR [esi-0x4c3576e5],eax
  41c600:	cli    
  41c601:	xchg   al,dl
  41c603:	test   DWORD PTR ds:[bp+si+0x7b],esi
  41c608:	lods   al,BYTE PTR ds:[esi]
  41c609:	jo     0x41c5c5
  41c60b:	xchg   esi,eax
  41c60c:	pop    esp
  41c60d:	daa    
  41c60e:	(bad)  
  41c60f:	ss mov bl,0x37
  41c612:	adc    edx,edi
  41c614:	dec    bx
  41c616:	push   edi
  41c617:	std    
  41c618:	out    0xd6,eax
  41c61a:	mov    eax,ds:0x5daea07a
  41c61f:	xchg   edi,eax
  41c620:	mov    ebx,0xad0b6244
  41c625:	out    0x9,al
  41c627:	clc    
  41c628:	mov    ebx,0x73a3a7aa
  41c62d:	jle    0x41c63c
  41c62f:	(bad)  
  41c630:	cmp    edi,ebx
  41c632:	pop    eax
  41c633:	adc    DWORD PTR [ebx],0x74
  41c636:	int3   
  41c637:	and    BYTE PTR [esi+0x4760331a],cl
  41c63d:	lods   al,BYTE PTR ds:[esi]
  41c63e:	outs   dx,BYTE PTR ds:[esi]
  41c63f:	fidivr DWORD PTR [esi+ebp*1]
  41c642:	cmp    cl,BYTE PTR [edi-0x4a3a9cbd]
  41c648:	push   eax
  41c649:	fs adc edi,eax
  41c64c:	xor    BYTE PTR [ecx+0x5ce7f4ca],0xa5
  41c653:	pop    ebx
  41c654:	xor    dh,BYTE PTR [edi-0x6de8ca77]
  41c65a:	cmp    BYTE PTR [eax+0x11],ah
  41c65d:	jecxz  0x41c6d2
  41c65f:	mov    ?,WORD PTR [esi]
  41c661:	ins    BYTE PTR es:[edi],dx
  41c662:	sbb    BYTE PTR [eax-0x1b0fc521],bl
  41c668:	es jg  0x41c616
  41c66b:	push   cs
  41c66c:	cmp    eax,0xd31baa70
  41c671:	cmp    edx,DWORD PTR [ebx]
  41c673:	push   esp
  41c674:	out    0x25,eax
  41c676:	push   ebx
  41c677:	addr16 in al,0xda
  41c67a:	pusha  
  41c67b:	out    0x87,al
  41c67d:	stos   BYTE PTR es:[edi],al
  41c67e:	loopne 0x41c6ec
  41c680:	dec    ebx
  41c681:	push   ebx
  41c682:	cmp    ecx,DWORD PTR [ebx+ebx*8+0x56]
  41c686:	push   0xffffff82
  41c688:	cmp    eax,0x1939cfe1
  41c68d:	retf   0x2b5c
  41c690:	adc    edx,0x78
  41c693:	jo     0x41c6cb
  41c695:	out    0x15,al
  41c697:	adc    BYTE PTR [ecx],cl
  41c699:	fcomp  DWORD PTR [ebx+0x6f]
  41c69c:	add    BYTE PTR [esi],0x50
  41c69f:	xchg   esp,eax
  41c6a0:	xchg   bh,bl
  41c6a2:	(bad)  
  41c6a3:	aas    
  41c6a4:	push   esi
  41c6a5:	out    dx,al
  41c6a6:	jno    0x41c665
  41c6a8:	push   ebx
  41c6a9:	out    dx,eax
  41c6aa:	pop    edx
  41c6ab:	std    
  41c6ac:	pop    ss
  41c6ad:	pop    edi
  41c6ae:	jecxz  0x41c6e6
  41c6b0:	sbb    BYTE PTR [ecx+0x5d],cl
  41c6b3:	fcomp  DWORD PTR [edi]
  41c6b5:	rcr    edi,1
  41c6b7:	call   0xb026:0xb033105f
  41c6be:	xchg   DWORD PTR [eax+eax*2],ecx
  41c6c1:	sbb    eax,0x497286fd
  41c6c6:	fisub  WORD PTR [eax+0x72]
  41c6c9:	sub    BYTE PTR [edx],0xcf
  41c6cc:	ds jl  0x41c6ae
  41c6cf:	xlat   BYTE PTR ds:[ebx]
  41c6d0:	aas    
  41c6d1:	scas   eax,DWORD PTR es:[edi]
  41c6d2:	pop    es
  41c6d3:	push   edx
  41c6d4:	push   ebx
  41c6d5:	lds    ebx,FWORD PTR ds:0xd6a200b8
  41c6db:	or     edi,DWORD PTR [eax+ecx*2-0x2fb91f8d]
  41c6e2:	pop    es
  41c6e3:	jo     0x41c6ab
  41c6e5:	xchg   edx,esi
  41c6e7:	out    dx,eax
  41c6e8:	mov    edi,0xde2e1793
  41c6ed:	(bad)  
  41c6ee:	bsf    esp,esp
  41c6f1:	push   ebp
  41c6f2:	iret   
  41c6f3:	inc    ebp
  41c6f4:	and    DWORD PTR [ecx+0x53140b96],ebx
  41c6fa:	mov    ds:0x94aae713,al
  41c6ff:	jmp    0x3d83:0xb586fb8e
  41c706:	cmp    esp,ebx
  41c708:	(bad)  
  41c709:	pop    eax
  41c70a:	outs   dx,BYTE PTR ds:[esi]
  41c70b:	mov    al,ds:0x956a723f
  41c710:	adc    bl,0x39
  41c713:	sbb    eax,0x119ff983
  41c718:	leave  
  41c719:	bound  cx,DWORD PTR [eax+0xb805732]
  41c720:	mov    edx,DWORD PTR [edx+eiz*4]
  41c723:	retf   
  41c724:	xor    eax,0xcf4e424b
  41c729:	mov    ds:0x900d0a85,al
  41c72e:	loop   0x41c71b
  41c730:	mov    dl,0xee
  41c732:	push   0x3787598
  41c737:	jae    0x41c6c3
  41c739:	pop    edx
  41c73a:	mov    ebx,0xab37fa47
  41c73f:	xchg   ecx,eax
  41c740:	mov    ebp,edi
  41c742:	aas    
  41c743:	aaa    
  41c744:	jnp    0x41c6ce
  41c746:	(bad)  
  41c747:	xchg   esi,eax
  41c748:	cmp    al,0xf7
  41c74a:	adc    al,0xc9
  41c74c:	cmc    
  41c74d:	(bad)  
  41c74e:	int    0x9b
  41c750:	and    dh,BYTE PTR [ebp+0x10]
  41c753:	or     DWORD PTR [edx-0x148c33eb],esi
  41c759:	sub    ecx,esp
  41c75b:	js     0x41c7d5
  41c75d:	not    BYTE PTR [esi]
  41c75f:	cmp    BYTE PTR [esp+eax*8+0x78],0xd4
  41c764:	ror    BYTE PTR [eax+0x75],cl
  41c767:	lods   eax,DWORD PTR ds:[esi]
  41c768:	mov    bh,0x7e
  41c76a:	js     0x41c724
  41c76c:	inc    ebp
  41c76d:	mov    al,0xc5
  41c76f:	push   0xfffffff2
  41c771:	push   esp
  41c772:	xchg   ebp,eax
  41c773:	test   BYTE PTR [edi+0x60],bh
  41c776:	inc    ecx
  41c777:	(bad)  
  41c778:	xchg   ebx,eax
  41c779:	adc    eax,0xe7f46d31
  41c77e:	push   ds
  41c77f:	out    0x96,eax
  41c781:	(bad)  
  41c782:	sbb    DWORD PTR [ecx+edx*2],edi
  41c785:	adc    edi,DWORD PTR [esi+0x4adbc980]
  41c78b:	bound  esp,QWORD PTR [eax-0x1b48e538]
  41c791:	jle    0x41c764
  41c793:	ds loope 0x41c7b5
  41c796:	mov    BYTE PTR [esi],0x7
  41c799:	repnz enter 0xebc3,0xf8
  41c79e:	repnz outs dx,BYTE PTR ds:[esi]
  41c7a0:	push   ss
  41c7a1:	adc    BYTE PTR [ecx-0x4af1e7d8],ch
  41c7a7:	ret    0xae2e
  41c7aa:	adc    esi,DWORD PTR [ebp+0x63d98942]
  41c7b0:	sti    
  41c7b1:	sbb    al,0x51
  41c7b3:	cmp    al,0x7e
  41c7b5:	mov    DWORD PTR [edi-0x66e9029a],ecx
  41c7bb:	or     eax,0x627b44ad
  41c7c0:	fwait
  41c7c1:	or     al,0x43
  41c7c3:	mov    ah,0x70
  41c7c5:	sti    
  41c7c6:	out    0xc5,al
  41c7c8:	cmp    BYTE PTR [eax-0x4b],cl
  41c7cb:	popf   
  41c7cc:	retf   
  41c7cd:	enter  0xe604,0xa6
  41c7d1:	sbb    al,0x84
  41c7d3:	ins    BYTE PTR es:[edi],dx
  41c7d4:	inc    ebx
  41c7d5:	xor    BYTE PTR [eax+ebx*4-0x67081be6],al
  41c7dc:	(bad)  
  41c7dd:	arpl   WORD PTR [ecx+0x2dccd443],cx
  41c7e3:	jecxz  0x41c845
  41c7e5:	dec    ecx
  41c7e6:	dec    eax
  41c7e7:	in     eax,dx
  41c7e8:	aad    0xc0
  41c7ea:	sbb    ecx,DWORD PTR [eax+0x8]
  41c7ed:	mov    eax,ds:0x9b1760ae
  41c7f2:	dec    ebx
  41c7f3:	pusha  
  41c7f4:	jbe    0x41c77d
  41c7f6:	push   esp
  41c7f7:	ds retf 
  41c7f9:	pop    ds
  41c7fa:	out    dx,al
  41c7fb:	adc    eax,0xc46d8ec4
  41c800:	test   DWORD PTR [edx-0x60],0xc578d99e
  41c807:	pop    ebp
  41c808:	jne    0x41c870
  41c80a:	fimul  DWORD PTR [esi+0x217dc5db]
  41c810:	xor    DWORD PTR [ebx-0x7],edi
  41c813:	and    esi,ebx
  41c815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c816:	xchg   ebx,eax
  41c817:	popf   
  41c818:	mov    bh,0xe6
  41c81a:	mov    ch,0xda
  41c81c:	fiadd  DWORD PTR [esi+esi*8+0x6e419afe]
  41c823:	xor    eax,0x13e0b723
  41c828:	and    BYTE PTR [ebx+esi*8-0x529907f0],bh
  41c82f:	or     edi,DWORD PTR [eax-0x40]
  41c832:	xchg   ecx,eax
  41c833:	xchg   esp,eax
  41c834:	nop
  41c835:	(bad)  
  41c836:	pop    ss
  41c837:	shl    BYTE PTR [eax-0x2d863702],0x33
  41c83e:	xor    DWORD PTR [esi+0x542ff71b],0x77
  41c845:	ss push 0xffffffc9
  41c848:	mov    ebp,0xe7a1709e
  41c84d:	mov    ds:0x99cc1ba3,al
  41c852:	ds pop edi
  41c854:	or     edx,DWORD PTR [esi-0x67]
  41c857:	mov    bh,0x92
  41c859:	shr    DWORD PTR ds:0xc866b6b2,1
  41c85f:	ficom  WORD PTR [esi-0x1be0ceed]
  41c865:	jo     0x41c7f2
  41c867:	jle    0x41c831
  41c869:	rol    BYTE PTR [ebx-0x7b],0xfc
  41c86d:	js     0x41c89f
  41c86f:	cmp    cl,BYTE PTR [ebx+0x6cf161d2]
  41c875:	cmp    dl,BYTE PTR [ebx+0x346e63b]
  41c87b:	stos   BYTE PTR es:[edi],al
  41c87c:	pop    edx
  41c87d:	and    eax,0x67e9d4e3
  41c882:	pop    eax
  41c883:	imul   BYTE PTR [esi+0x1520d2b0]
  41c889:	lahf   
  41c88a:	jno    0x41c889
  41c88c:	xchg   DWORD PTR [ecx-0x4d],edx
  41c88f:	les    edx,FWORD PTR [eax+0x6c]
  41c892:	repz fisubr DWORD PTR [esi+0x58]
  41c896:	xor    BYTE PTR [edx+eiz*8],ah
  41c899:	xchg   ecx,eax
  41c89a:	and    BYTE PTR [eax-0x5b82d681],dl
  41c8a0:	add    al,0xfe
  41c8a2:	out    dx,al
  41c8a3:	sar    DWORD PTR [edi+0x40a7aaa1],cl
  41c8a9:	(bad)  
  41c8aa:	aas    
  41c8ab:	pop    edx
  41c8ac:	pop    ss
  41c8ad:	aas    
  41c8ae:	aad    0x77
  41c8b0:	mov    BYTE PTR [ecx-0xa],dh
  41c8b3:	jp     0x41c919
  41c8b5:	pop    ss
  41c8b6:	stc    
  41c8b7:	dec    esi
  41c8b8:	daa    
  41c8b9:	pop    edx
  41c8ba:	and    BYTE PTR [edx+0x2f],ch
  41c8bd:	jmp    ecx
  41c8bf:	loop   0x41c8e0
  41c8c1:	inc    ebp
  41c8c2:	pop    ecx
  41c8c3:	jb     0x41c8f3
  41c8c5:	out    0x65,al
  41c8c7:	pop    edx
  41c8c8:	imul   ebp,DWORD PTR [ecx],0x19
  41c8cb:	xor    ebp,esi
  41c8cd:	aas    
  41c8ce:	mov    al,ds:0xcde2edd0
  41c8d3:	inc    esp
  41c8d4:	nop
  41c8d5:	inc    edx
  41c8d6:	ret    
  41c8d7:	mov    esp,DWORD PTR [edi]
  41c8d9:	xchg   ebx,eax
  41c8da:	and    al,0xc8
  41c8dc:	pushf  
  41c8dd:	sti    
  41c8de:	stc    
  41c8df:	scas   al,BYTE PTR es:[edi]
  41c8e0:	daa    
  41c8e1:	push   ds
  41c8e2:	sbb    dl,BYTE PTR [edx+ebp*8-0x11]
  41c8e6:	mov    cl,BYTE PTR [edx+0x599c783b]
  41c8ec:	mov    esi,0x5c249370
  41c8f1:	xchg   esi,eax
  41c8f2:	mov    esi,0x9d628388
  41c8f7:	cmp    eax,0x866ea1f5
  41c8fc:	mov    bl,dl
  41c8fe:	out    dx,eax
  41c8ff:	test   DWORD PTR [ecx-0x5df55a7a],esp
  41c905:	ss popf 
  41c907:	mov    bl,0x8d
  41c909:	jno    0x41c906
  41c90b:	dec    edi
  41c90c:	fst    st(7)
  41c90e:	inc    ebp
  41c90f:	sub    eax,0x5315a1e5
  41c914:	(bad)  
  41c915:	push   eax
  41c916:	mov    ebx,0x638edc81
  41c91b:	xor    dh,BYTE PTR [ebp+ebx*4-0x37]
  41c91f:	pop    edi
  41c920:	dec    edx
  41c921:	call   0x9d4f3df8
  41c926:	sbb    ebx,DWORD PTR [edi+0x3c44a0b9]
  41c92c:	out    0xc3,al
  41c92e:	add    BYTE PTR [edx],cl
  41c930:	int3   
  41c931:	pop    es
  41c932:	xchg   edi,eax
  41c933:	hlt    
  41c934:	sbb    eax,0x3827ba4a
  41c939:	jnp    0x41c8e3
  41c93b:	sbb    eax,0x26fd54ec
  41c940:	retf   
  41c941:	jmp    0xb824:0x7644d6ec
  41c948:	fimul  DWORD PTR [edx+0x74]
  41c94b:	push   cs
  41c94c:	js     0x41c967
  41c94e:	or     BYTE PTR [edi+0x7b3d4293],bl
  41c954:	lods   al,BYTE PTR ds:[esi]
  41c955:	dec    ebp
  41c956:	sub    BYTE PTR [edx],dl
  41c958:	adc    BYTE PTR [ebx-0x7c],al
  41c95b:	mov    cl,0xee
  41c95d:	or     eax,0x2bbf651b
  41c962:	push   ebx
  41c963:	inc    esi
  41c964:	lahf   
  41c965:	sbb    DWORD PTR [eax+0x2896462],esp
  41c96b:	fwait
  41c96c:	shr    DWORD PTR ds:0x3cd85a4d,cl
  41c972:	pop    ebp
  41c973:	push   cs
  41c974:	mov    esi,esp
  41c976:	cmc    
  41c977:	(bad)  
  41c978:	xor    al,0xbd
  41c97a:	addr16 (bad) 
  41c97c:	mov    BYTE PTR [eax-0x27d86002],bl
  41c982:	mov    bh,0xdd
  41c984:	inc    ebp
  41c985:	and    DWORD PTR [edi+edi*1],esp
  41c988:	repnz pop ss
  41c98a:	bnd jnp 0x41c910
  41c98d:	push   cs
  41c98e:	cmp    eax,0x880cbdff
  41c993:	mov    cl,0x3
  41c995:	cmp    esi,DWORD PTR [esi+eax*1-0x30b6d804]
  41c99c:	lods   eax,DWORD PTR ds:[esi]
  41c99d:	jo     0x41c92e
  41c99f:	dec    eax
  41c9a0:	xor    BYTE PTR [edx-0x3e],dl
  41c9a3:	pop    esi
  41c9a4:	fidiv  DWORD PTR [edx-0x35]
  41c9a7:	xchg   ecx,eax
  41c9a8:	es mov dh,0xfd
  41c9ab:	sbb    eax,DWORD PTR [edi+eax*2]
  41c9ae:	add    dl,BYTE PTR [ecx-0x2527f8d0]
  41c9b4:	aaa    
  41c9b5:	imul   edx,DWORD PTR [edi+eiz*1+0x3e1e4a5],0x2198a76b
  41c9c0:	in     eax,dx
  41c9c1:	dec    ecx
  41c9c2:	in     al,0xd4
  41c9c4:	xor    ebx,ebp
  41c9c6:	fidiv  WORD PTR [ecx+ebx*8-0x2f]
  41c9ca:	jle    0x41c9cd
  41c9cc:	std    
  41c9cd:	out    dx,al
  41c9ce:	sub    eax,0x7157fa81
  41c9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d4:	sub    al,0xbb
  41c9d6:	(bad)  
  41c9d9:	aas    
  41c9da:	mov    bh,0x1b
  41c9dc:	scas   al,BYTE PTR es:[edi]
  41c9dd:	mov    al,ds:0xd24e8092
  41c9e2:	cmp    dl,BYTE PTR [eax+0x2982fe2a]
  41c9e8:	lahf   
  41c9e9:	pop    ss
  41c9ea:	pop    ebp
  41c9eb:	xchg   edx,eax
  41c9ec:	out    0x2a,al
  41c9ee:	jge    0x41c9a6
  41c9f0:	or     al,0xf8
  41c9f2:	adc    edx,edx
  41c9f4:	fadd   DWORD PTR [edi-0x2a]
  41c9f7:	cmp    DWORD PTR [eax+0x3e5806b1],edx
  41c9fd:	adc    al,0x91
  41c9ff:	mov    esi,DWORD PTR [ebx]
  41ca01:	jnp    0x41c9e6
  41ca03:	push   ecx
  41ca04:	and    al,0xd2
  41ca06:	loopne 0x41c9f0
  41ca08:	popa   
  41ca09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0a:	push   ecx
  41ca0b:	sub    DWORD PTR [ecx+0x7d],0xffffffc3
  41ca0f:	and    DWORD PTR [ebp-0xd0e074b],0xa815fc6d
  41ca19:	aaa    
  41ca1a:	sbb    DWORD PTR [esi+0x7e92fc4c],esp
  41ca20:	mov    ds:0x976306ff,al
  41ca25:	pop    ecx
  41ca26:	sbb    esp,edx
  41ca28:	adc    esp,DWORD PTR [edi+eax*8+0x49]
  41ca2c:	call   0x1bdd:0x9fa2cee3
  41ca33:	fcom   st(7)
  41ca35:	fidivr WORD PTR [ebp-0x40]
  41ca38:	cld    
  41ca39:	inc    ebp
  41ca3a:	unpckhps xmm3,XMMWORD PTR [edx+0x39]
  41ca3e:	inc    edi
  41ca3f:	jae    0x41ca27
  41ca41:	sbb    BYTE PTR [eax+0x43c24aed],ah
  41ca47:	mov    bl,0x1a
  41ca49:	inc    bp
  41ca4b:	dec    edx
  41ca4c:	push   edi
  41ca4d:	ret    0x8124
  41ca50:	cwde   
  41ca51:	shl    BYTE PTR [eax+0x6615386a],cl
  41ca57:	dec    ecx
  41ca58:	retf   0x933d
  41ca5b:	mov    ebx,0xa6b3fef
  41ca60:	xor    ecx,DWORD PTR [ebx-0xee494b1]
  41ca66:	outs   dx,BYTE PTR ds:[esi]
  41ca67:	and    DWORD PTR [eax-0x28],edi
  41ca6a:	fst    QWORD PTR ds:0x94836530
  41ca70:	mov    esp,0x8cd63357
  41ca75:	mov    eax,ds:0x4ca55188
  41ca7a:	test   eax,0x1e5df2e
  41ca7f:	bound  ebx,QWORD PTR [edx-0x35]
  41ca82:	cmp    DWORD PTR [ecx-0x180c45b8],esp
  41ca88:	pop    ebp
  41ca89:	test   BYTE PTR [ebx+0x79db9673],bh
  41ca8f:	jle    0x41cacc
  41ca91:	(bad)  
  41ca92:	xlat   BYTE PTR ds:[ebx]
  41ca93:	test   BYTE PTR [ebp+edx*8-0x54],0xb2
  41ca98:	xlat   BYTE PTR ds:[ebx]
  41ca99:	out    0x92,al
  41ca9b:	loope  0x41cae3
  41ca9d:	aam    0x4f
  41ca9f:	test   DWORD PTR [ecx+0x36e661a1],esp
  41caa5:	mov    bl,0x7e
  41caa7:	dec    ebp
  41caa8:	jle    0x41ca6c
  41caaa:	and    eax,eax
  41caac:	retf   
  41caad:	jne    0x41ca30
  41caaf:	mov    ch,bh
  41cab1:	and    ebp,DWORD PTR [esi]
  41cab3:	cdq    
  41cab4:	pop    edi
  41cab5:	mov    bl,0x6d
  41cab7:	fidivr DWORD PTR [esi-0x3cff1c44]
  41cabd:	mov    eax,0x35093f5d
  41cac2:	dec    ebp
  41cac3:	pop    ebx
  41cac4:	xor    DWORD PTR [edi+0x18],ecx
  41cac7:	and    ah,BYTE PTR [ebx]
  41cac9:	xor    BYTE PTR [eax+0x4f],0x43
  41cacd:	pop    eax
  41cace:	aaa    
  41cacf:	push   0x1906c1fd
  41cad4:	push   es
  41cad5:	jbe    0x41ca7c
  41cad7:	jb     0x41ca84
  41cad9:	xor    esi,DWORD PTR [edi+0x1b07a9ae]
  41cadf:	push   edx
  41cae0:	mov    bh,0xec
  41cae2:	cmp    eax,DWORD PTR [eax+0x73debac1]
  41cae8:	xor    BYTE PTR [eax-0x1d],0x38
  41caec:	in     al,0xf5
  41caee:	pop    ss
  41caef:	(bad)  
  41caf0:	call   0xdaeb:0x3446070a
  41caf7:	out    dx,eax
  41caf8:	pop    ebp
  41caf9:	mov    eax,ds:0xd353f553
  41cafe:	or     dl,BYTE PTR ds:[esi-0x5d5b404c]
  41cb05:	push   cs
  41cb06:	repz push ss
  41cb08:	push   0xffffff8c
  41cb0a:	or     eax,0x9c29993b
  41cb0f:	stos   BYTE PTR es:[edi],al
  41cb10:	pushf  
  41cb11:	loope  0x41caf3
  41cb13:	ss jae 0x41cac1
  41cb16:	in     eax,0x6d
  41cb18:	sahf   
  41cb19:	mov    ebx,0x1ce0b74f
  41cb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb1f:	mov    ebp,0xd8aeb739
  41cb24:	xor    ah,BYTE PTR [edx]
  41cb26:	stos   BYTE PTR es:[edi],al
  41cb27:	stc    
  41cb28:	jno    0x41cacb
  41cb2a:	jle    0x41caba
  41cb2c:	std    
  41cb2d:	in     eax,0xc9
  41cb2f:	push   cs
  41cb30:	mov    ch,0x19
  41cb32:	mov    esp,0xba9fd191
  41cb37:	adc    eax,0x593fa6ba
  41cb3c:	pusha  
  41cb3d:	shl    DWORD PTR [ecx],cl
  41cb3f:	das    
  41cb40:	dec    ecx
  41cb41:	or     DWORD PTR [esi],edi
  41cb43:	mov    DWORD PTR [ebx],0x76a8ae5d
  41cb49:	mov    ebp,0xa4677535
  41cb4e:	xchg   esi,eax
  41cb4f:	fst    DWORD PTR [eax+0x12]
  41cb52:	(bad)
  41cb55:	out    0x4b,eax
  41cb57:	jb     0x41cbb7
  41cb59:	fild   DWORD PTR [esi-0x3cdd9099]
  41cb5f:	jecxz  0x41cb8b
  41cb61:	pop    edi
  41cb62:	sub    ah,0xd5
  41cb65:	push   ebp
  41cb66:	push   0xffffffcd
  41cb68:	add    bl,BYTE PTR [ecx-0xb9310f5]
  41cb6e:	(bad)  
  41cb6f:	aas    
  41cb70:	test   BYTE PTR [ebx],ah
  41cb72:	push   eax
  41cb73:	add    BYTE PTR [ebx+0x68],0x8f
  41cb77:	mov    ?,WORD PTR [edi-0x58]
  41cb7a:	sbb    edi,eax
  41cb7c:	inc    ebx
  41cb7d:	lods   eax,DWORD PTR ds:[esi]
  41cb7e:	add    al,0x36
  41cb80:	mov    ecx,0x17ff55be
  41cb85:	jb     0x41cb41
  41cb87:	pop    es
  41cb88:	pop    ecx
  41cb89:	jp     0x41cb6e
  41cb8b:	dec    ecx
  41cb8c:	jno    0x9bb31b6c
  41cb92:	pop    edx
  41cb93:	jae    0x41cb4f
  41cb95:	push   edi
  41cb96:	clc    
  41cb97:	mov    eax,ds:0xea095c09
  41cb9c:	dec    edi
  41cb9d:	add    eax,0x391558f1
  41cba2:	add    BYTE PTR [ecx],0xdb
  41cba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba6:	fiadd  WORD PTR [esi+ecx*8+0x24]
  41cbaa:	dec    ecx
  41cbab:	xchg   esp,eax
  41cbac:	jmp    0x5a30f42d
  41cbb1:	call   0xcc0c:0x9919adc9
  41cbb8:	imul   eax,DWORD PTR [ecx-0x30642055],0x63
  41cbbf:	push   0x1769e7ac
  41cbc4:	clc    
  41cbc5:	mul    DWORD PTR [ebx+0x7099216c]
  41cbcb:	push   eax
  41cbcc:	pop    esi
  41cbcd:	add    BYTE PTR [esi+eax*2+0x7513f36],cl
  41cbd4:	pop    esp
  41cbd5:	clc    
  41cbd6:	ss mov al,0xd4
  41cbd9:	mov    bh,0xf6
  41cbdb:	pop    esi
  41cbdc:	fimul  DWORD PTR [esi]
  41cbde:	lock lock leave 
  41cbe1:	adc    DWORD PTR [eax],0x18
  41cbe4:	aaa    
  41cbe5:	xchg   ecx,eax
  41cbe6:	popf   
  41cbe7:	push   ss
  41cbe8:	push   edi
  41cbe9:	push   cs
  41cbea:	pusha  
  41cbeb:	aaa    
  41cbec:	dec    eax
  41cbed:	pusha  
  41cbee:	loop   0x41cc45
  41cbf0:	les    esi,FWORD PTR [edx-0x33fe1bf2]
  41cbf6:	add    edx,eax
  41cbf8:	add    al,0x23
  41cbfa:	out    dx,eax
  41cbfb:	or     bl,ch
  41cbfd:	pop    ss
  41cbfe:	mov    ebx,0xd3ce209c
  41cc03:	fimul  WORD PTR [edx]
  41cc05:	retf   0xd455
  41cc08:	pop    eax
  41cc09:	lahf   
  41cc0a:	and    al,0x66
  41cc0c:	aas    
  41cc0d:	inc    ebx
  41cc0e:	mov    DWORD PTR [ecx+0xd964ebc],eax
  41cc14:	xchg   bh,bh
  41cc16:	mov    eax,ds:0x8963e141
  41cc1b:	sbb    dh,al
  41cc1d:	pop    ss
  41cc1e:	(bad)  
  41cc1f:	sti    
  41cc20:	scas   eax,DWORD PTR es:[edi]
  41cc21:	push   es
  41cc22:	pushf  
  41cc23:	jns    0x41cbfd
  41cc25:	push   edi
  41cc26:	addr16 es test eax,0x8f7808bb
  41cc2d:	or     al,0xfd
  41cc2f:	or     DWORD PTR [ecx+0x5b],0x1195c148
  41cc36:	adc    DWORD PTR [esp+edx*2],ecx
  41cc39:	out    0xb5,al
  41cc3b:	add    eax,ebx
  41cc3d:	fwait
  41cc3e:	mov    ah,0x2c
  41cc40:	sbb    edx,DWORD PTR [ebp-0x9]
  41cc43:	jge    0x41cbd3
  41cc45:	pop    edi
  41cc46:	or     DWORD PTR [edi-0x2f2d1bfa],edx
  41cc4c:	xchg   edx,eax
  41cc4d:	adc    ch,BYTE PTR [ebp+edi*8+0x23b56384]
  41cc54:	mov    eax,0x54c96aba
  41cc59:	adc    DWORD PTR [edx],0xffffff85
  41cc5c:	pop    ebp
  41cc5d:	fst    DWORD PTR [edx-0x761e3190]
  41cc63:	data16 or al,0x9c
  41cc66:	test   al,0x2
  41cc68:	call   0x3410fbe5
  41cc6d:	dec    edi
  41cc6e:	xchg   esp,eax
  41cc6f:	jno    0x41cc8e
  41cc71:	icebp  
  41cc72:	pop    ebx
  41cc73:	jmp    0x523c:0x9deaa5da
  41cc7a:	xor    edx,DWORD PTR [esi+ebp*4-0x7520cdc3]
  41cc81:	ins    DWORD PTR es:[edi],dx
  41cc82:	gs fwait
  41cc84:	clc    
  41cc85:	push   ebp
  41cc86:	mov    ah,0xfc
  41cc88:	(bad)  
  41cc8a:	jmp    0xfab0:0xa1165b91
  41cc91:	ss call 0x8792:0x5099e11
  41cc99:	mov    edx,0x4d525e84
  41cc9e:	sub    DWORD PTR [edx+eiz*8+0x3dace945],esi
  41cca5:	pop    es
  41cca6:	stc    
  41cca7:	call   0xd93b6f7
  41ccac:	cmc    
  41ccad:	sti    
  41ccae:	retf   0x58b8
  41ccb1:	sbb    DWORD PTR [ebx+edi*2+0x2e276f3f],ebp
  41ccb8:	sbb    bl,BYTE PTR [edx-0x71ce8d50]
  41ccbe:	mov    ds:0xeaf6f4b6,al
  41ccc3:	lahf   
  41ccc4:	cmp    dh,bh
  41ccc6:	gs iret 
  41ccc8:	xchg   edi,eax
  41ccc9:	xchg   esi,eax
  41ccca:	mov    BYTE PTR [ebp-0x23],bh
  41cccd:	adc    ecx,esi
  41cccf:	mov    WORD PTR [edi+0x3b6bf5da],?
  41ccd5:	ss xchg edx,eax
  41ccd7:	sub    bh,BYTE PTR ds:0x8e005f50
  41ccdd:	push   esi
  41ccde:	jl     0x41cd04
  41cce0:	ds ja  0x41cc87
  41cce3:	and    eax,0x2c8167d1
  41cce8:	cmp    eax,0x975dfbdd
  41cced:	push   esp
  41ccee:	imul   sp,WORD PTR [edx+edi*8-0x100b40ef],0x41
  41ccf7:	mov    ?,WORD PTR ds:0xf771f598
  41ccfd:	dec    ebp
  41ccfe:	into   
  41ccff:	cmp    al,0x1c
  41cd01:	push   0xf
  41cd03:	or     al,0x76
  41cd05:	scas   al,BYTE PTR es:[edi]
  41cd06:	addr16 pop ebx
  41cd08:	and    al,0x61
  41cd0a:	jl     0x41cd2b
  41cd0c:	cmp    BYTE PTR [ebp+0xb],cl
  41cd0f:	push   esp
  41cd10:	outs   dx,BYTE PTR ds:[esi]
  41cd11:	inc    esi
  41cd12:	cld    
  41cd13:	pop    es
  41cd14:	push   ebx
  41cd15:	pusha  
  41cd16:	ins    BYTE PTR es:[edi],dx
  41cd17:	fs dec esp
  41cd19:	jns    0x41cd69
  41cd1b:	push   ebx
  41cd1c:	inc    edi
  41cd1d:	push   ss
  41cd1e:	out    dx,al
  41cd1f:	call   0xc704:0xc1b1067
  41cd26:	lock bound ecx,QWORD PTR [edx+0x3b]
  41cd2a:	jmp    0x4c8cc10d
  41cd2f:	mov    ss,WORD PTR [esi+0x16af43fa]
  41cd35:	out    0x3a,eax
  41cd37:	xor    eax,0x7e435857
  41cd3c:	fs pop ss
  41cd3e:	sub    al,0x92
  41cd40:	out    dx,eax
  41cd41:	aas    
  41cd42:	loop   0x41ccd9
  41cd44:	xchg   ebx,eax
  41cd45:	lea    edi,[edi]
  41cd47:	(bad)  
  41cd48:	out    dx,eax
  41cd49:	aaa    
  41cd4a:	out    dx,eax
  41cd4b:	(bad)  
  41cd4c:	adc    ah,BYTE PTR es:[eax-0x46]
  41cd50:	fmul   st,st(0)
  41cd52:	inc    edi
  41cd53:	sbb    BYTE PTR [eax-0x2ae977d3],dh
  41cd59:	dec    ecx
  41cd5a:	mov    esp,0x5c40a676
  41cd5f:	push   es
  41cd60:	in     al,0x4f
  41cd62:	mov    bl,0x95
  41cd64:	add    eax,0x224f9f15
  41cd69:	lahf   
  41cd6a:	sti    
  41cd6b:	shl    ebp,cl
  41cd6d:	mov    gs,WORD PTR [edx-0x5a3d2d9a]
  41cd73:	pop    es
  41cd74:	adc    DWORD PTR [eax+0x23],eax
  41cd77:	jecxz  0x41cddb
  41cd79:	inc    edx
  41cd7a:	int    0x29
  41cd7c:	out    dx,eax
  41cd7d:	cmp    BYTE PTR [edx+ebx*8+0x2f9f9e47],ah
  41cd84:	cmp    ebx,DWORD PTR [edx]
  41cd86:	repnz lods al,BYTE PTR ds:[esi]
  41cd88:	icebp  
  41cd89:	push   ds
  41cd8a:	sbb    DWORD PTR ds:0x86cfefd4,ebp
  41cd90:	shl    BYTE PTR [eax-0x28],1
  41cd93:	pop    esp
  41cd94:	into   
  41cd95:	xchg   BYTE PTR [ebp+0x72],ch
  41cd98:	adc    ebx,ecx
  41cd9a:	rcl    BYTE PTR [edi+0x79],1
  41cd9d:	xor    ah,BYTE PTR [ebp-0x7f]
  41cda0:	sub    BYTE PTR [ecx],cl
  41cda2:	leave  
  41cda3:	stos   BYTE PTR es:[edi],al
  41cda4:	fisub  DWORD PTR [ebx-0x5958ef97]
  41cdaa:	mov    bl,0x18
  41cdac:	push   edi
  41cdad:	(bad)  
  41cdae:	daa    
  41cdaf:	xchg   edx,eax
  41cdb0:	pop    ebp
  41cdb1:	xchg   DWORD PTR [edx],eax
  41cdb3:	jbe    0x41cd60
  41cdb5:	repnz pop ebx
  41cdb7:	inc    esp
  41cdb8:	jle    0x41cde9
  41cdba:	jecxz  0x41cdfb
  41cdbc:	mov    dl,0xa1
  41cdbe:	inc    edx
  41cdbf:	fadd   QWORD PTR [ebx+0x57]
  41cdc2:	out    0xa8,al
  41cdc4:	push   edx
  41cdc5:	sbb    ch,BYTE PTR [edx]
  41cdc7:	sar    BYTE PTR [ecx-0x35967298],1
  41cdcd:	lahf   
  41cdce:	scas   al,BYTE PTR es:[edi]
  41cdcf:	dec    eax
  41cdd0:	pusha  
  41cdd1:	xor    BYTE PTR [eax+0x3d36604a],ch
  41cdd7:	gs xchg esi,eax
  41cdd9:	push   ds
  41cdda:	jecxz  0x41cd83
  41cddc:	add    ebp,ebp
  41cdde:	xchg   BYTE PTR [edx+esi*2+0x56b7046a],bh
  41cde5:	mov    eax,eax
  41cde7:	pop    esp
  41cde8:	and    al,0x11
  41cdea:	cmp    ah,BYTE PTR [edi+0x11c7c83b]
  41cdf0:	ret    0x6552
  41cdf3:	test   al,0x82
  41cdf5:	xor    edx,ecx
  41cdf7:	and    bl,cl
  41cdf9:	repnz inc eax
  41cdfb:	mov    bl,0xa9
  41cdfd:	push   0x5dde3da5
  41ce02:	mov    eax,ds:0x2dd4df2e
  41ce07:	jg     0x41ce23
  41ce09:	mov    bh,0xfd
  41ce0b:	mov    cl,0x8f
  41ce0d:	inc    esi
  41ce0e:	loopne 0x41ce08
  41ce10:	add    DWORD PTR [ebx-0x5311ad62],ebp
  41ce16:	sub    BYTE PTR [ecx],dl
  41ce18:	cld    
  41ce19:	jo     0x41cdb2
  41ce1b:	or     eax,0x3728d24a
  41ce20:	sbb    al,0xb5
  41ce22:	out    0x5b,al
  41ce24:	(bad)  
  41ce25:	mov    dh,0xfc
  41ce27:	inc    ebp
  41ce28:	cmp    eax,0xadb2487e
  41ce2d:	lds    ebx,FWORD PTR [ecx+ebp*2-0x5d]
  41ce31:	stos   BYTE PTR es:[edi],al
  41ce32:	sbb    BYTE PTR [edi-0x6a],cl
  41ce35:	mov    edi,0x9acac8ba
  41ce3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3b:	(bad)  
  41ce3c:	cs clc 
  41ce3e:	frstor [ebx+0x1ed19f4c]
  41ce44:	hlt    
  41ce45:	fucomp st(3)
  41ce47:	sub    esi,edx
  41ce49:	ins    BYTE PTR es:[edi],dx
  41ce4a:	sahf   
  41ce4b:	sbb    DWORD PTR ds:0xb194b0f8,0x97dc0152
  41ce55:	and    BYTE PTR [ebx+0x6c],0x15
  41ce59:	sbb    al,0x79
  41ce5b:	popf   
  41ce5c:	xor    al,0x4c
  41ce5e:	out    dx,eax
  41ce5f:	call   0xb148:0xb1b57f3e
  41ce66:	mov    ds:0x78283e94,eax
  41ce6b:	(bad)  
  41ce6c:	call   0x59a8:0x1200df75
  41ce73:	inc    edx
  41ce74:	jmp    0xfac4ed0f
  41ce79:	mul    DWORD PTR [eax-0x50369878]
  41ce7f:	idiv   al
  41ce81:	ret    0x6ffa
  41ce84:	add    DWORD PTR [esi+0x32501b5b],esp
  41ce8a:	sar    DWORD PTR [eax],0x47
  41ce8d:	addr16 mov edi,0x62d16ee4
  41ce93:	mov    ebp,0x294dcccc
  41ce98:	and    al,0xee
  41ce9a:	fimul  DWORD PTR [eax-0x34659941]
  41cea0:	adc    eax,esp
  41cea2:	and    BYTE PTR [esi],dl
  41cea4:	(bad)  
  41cea5:	sub    di,WORD PTR [ebx+0x5d]
  41cea9:	push   edx
  41ceaa:	sbb    esi,DWORD PTR [esi+0x500c6544]
  41ceb0:	shl    DWORD PTR [edx+eiz*2-0x6f2b1d45],1
  41ceb7:	dec    ebp
  41ceb8:	push   eax
  41ceb9:	jo     0x41cf03
  41cebb:	div    DWORD PTR [ecx]
  41cebd:	pop    edi
  41cebe:	push   edx
  41cebf:	test   al,0x79
  41cec1:	cli    
  41cec2:	icebp  
  41cec3:	ds jbe 0x41cf28
  41cec6:	push   ss
  41cec7:	test   DWORD PTR [ebp+ecx*1-0x4b],eax
  41cecb:	dec    edx
  41cecc:	scas   eax,DWORD PTR es:[edi]
  41cecd:	inc    ebx
  41cece:	stc    
  41cecf:	ins    BYTE PTR es:[edi],dx
  41ced0:	bound  esi,QWORD PTR [ecx+0x53]
  41ced3:	ds (bad) 
  41ced5:	adc    BYTE PTR [edx-0x33549d26],dl
  41cedb:	pop    ebp
  41cedc:	adc    al,BYTE PTR [edi*4+0x7dd1ea93]
  41cee3:	test   eax,0xa9631abe
  41cee8:	sahf   
  41cee9:	push   ebx
  41ceea:	fcom   QWORD PTR [eax-0x2f]
  41ceed:	mov    WORD PTR [ecx+eax*2],?
  41cef0:	pop    esp
  41cef1:	aas    
  41cef2:	test   al,0x56
  41cef4:	pop    ebx
  41cef5:	bound  esp,QWORD PTR [ebp+0x46d3a0f6]
  41cefb:	call   0x87fe90e4
  41cf00:	mov    esi,0xfe396fd8
  41cf05:	mov    ebp,0x265f9a02
  41cf0a:	xor    al,0x29
  41cf0c:	(bad)  
  41cf0d:	adc    eax,0x57bad3e4
  41cf12:	(bad)  
  41cf13:	repz add dh,0xa5
  41cf17:	jb     0x41cf89
  41cf19:	stos   DWORD PTR es:[edi],eax
  41cf1a:	jle    0x41cead
  41cf1c:	int    0x6f
  41cf1e:	ins    DWORD PTR es:[edi],dx
  41cf1f:	xchg   ebx,eax
  41cf20:	cmp    edi,esi
  41cf22:	jo     0x41cf47
  41cf24:	push   edi
  41cf25:	aam    0x53
  41cf27:	test   DWORD PTR [ebp-0x18],eax
  41cf2a:	ins    BYTE PTR es:[edi],dx
  41cf2b:	ins    BYTE PTR es:[edi],dx
  41cf2c:	jo     0x41cec9
  41cf2e:	repnz dec edi
  41cf30:	xchg   DWORD PTR [edx+0x577d402d],esi
  41cf36:	pop    ebp
  41cf37:	xor    al,0x5f
  41cf39:	scas   al,BYTE PTR es:[edi]
  41cf3a:	dec    eax
  41cf3b:	stc    
  41cf3c:	pop    esi
  41cf3d:	cli    
  41cf3e:	xchg   edi,eax
  41cf3f:	xor    dh,BYTE PTR [esi]
  41cf41:	(bad)  
  41cf42:	pop    ebx
  41cf43:	int    0x94
  41cf45:	push   edi
  41cf46:	inc    ebp
  41cf47:	cmc    
  41cf48:	test   dl,0x80
  41cf4b:	test   BYTE PTR [eax+0x4cdecaac],ah
  41cf51:	inc    ecx
  41cf52:	hlt    
  41cf53:	cmp    al,0x4e
  41cf55:	jne    0x41cee7
  41cf57:	fisubr DWORD PTR [eax+0xf]
  41cf5a:	stos   BYTE PTR es:[edi],al
  41cf5b:	mov    ds:0x53bdba89,al
  41cf60:	push   ss
  41cf61:	jecxz  0x41cfc4
  41cf63:	call   0xd164b4d9
  41cf68:	mov    ecx,0x4c0eb682
  41cf6d:	leave  
  41cf6e:	sbb    BYTE PTR [eax],dl
  41cf70:	or     ecx,0xb102f681
  41cf76:	fdivr  DWORD PTR [ebp+0x30]
  41cf79:	pop    ss
  41cf7a:	loopne 0x41cf9a
  41cf7c:	(bad)  
  41cf7d:	iret   
  41cf7e:	sub    eax,0xdcea62f9
  41cf83:	xor    bh,BYTE PTR [eax]
  41cf85:	add    esp,DWORD PTR [ecx+edx*4]
  41cf88:	sbb    al,0xa9
  41cf8a:	push   esp
  41cf8b:	jns    0x41cfa1
  41cf8d:	or     al,0x5
  41cf8f:	or     DWORD PTR [ebx],esp
  41cf91:	cmp    esp,esi
  41cf93:	xor    eax,DWORD PTR [eax+ebx*2+0x333176d8]
  41cf9a:	bound  ecx,QWORD PTR [ecx]
  41cf9c:	jno    0x41cf82
  41cf9e:	push   0xffffffc2
  41cfa0:	mov    ah,0x63
  41cfa2:	inc    esp
  41cfa3:	int    0x29
  41cfa5:	mov    ecx,0x3927c375
  41cfaa:	adc    al,0x8d
  41cfac:	popa   
  41cfad:	push   ecx
  41cfae:	or     ebx,DWORD PTR [ebp+0x45]
  41cfb1:	fadd   DWORD PTR [ecx]
  41cfb3:	fsubr  QWORD PTR [edi+0x18]
  41cfb6:	data16 and dl,BYTE PTR [edx-0x34669f38]
  41cfbd:	lods   al,BYTE PTR ds:[esi]
  41cfbe:	push   0x19c13dff
  41cfc3:	mov    ebx,0x25886a90
  41cfc8:	std    
  41cfc9:	js     0x41d00b
  41cfcb:	test   al,0x8
  41cfcd:	sbb    eax,0x488d1915
  41cfd2:	and    esi,DWORD PTR [esi+0x66]
  41cfd5:	jge    0x41cf99
  41cfd7:	push   edx
  41cfd8:	out    dx,eax
  41cfd9:	add    DWORD PTR [edx+0xd],eax
  41cfdc:	lods   al,BYTE PTR ds:[esi]
  41cfdd:	and    al,0x12
  41cfdf:	aam    0x12
  41cfe1:	gs data16 cmc 
  41cfe4:	jecxz  0x41cfda
  41cfe6:	int3   
  41cfe7:	(bad)  
  41cfe8:	gs cdq 
  41cfea:	xchg   esi,eax
  41cfeb:	je     0x41cfc7
  41cfed:	ret    0x722a
  41cff0:	loope  0x41d039
  41cff2:	jo     0x41cf75
  41cff4:	lea    ebp,[edi+0x60]
  41cff7:	cmp    DWORD PTR [eax-0x34],eax
  41cffa:	loope  0x41cfa1
  41cffc:	out    dx,eax
  41cffd:	sub    ah,dh
  41cfff:	add    BYTE PTR [ecx+ecx*1-0x7d],al
  41d003:	sbb    cl,bh
  41d005:	adc    al,ch
  41d007:	mov    ds:0xdd64ac7b,eax
  41d00c:	fsubr  QWORD PTR [ebp+0x5ff757d4]
  41d012:	adc    al,0xc2
  41d014:	mov    ds:0x156d4008,eax
  41d019:	jg     0x41d08a
  41d01b:	sub    DWORD PTR [ecx-0x32],ebp
  41d01e:	adc    eax,edi
  41d020:	(bad)  
  41d021:	iret   
  41d022:	jne    0x41d033
  41d024:	push   edx
  41d025:	loop   0x41d0a3
  41d027:	dec    edi
  41d028:	cmp    al,0x2f
  41d02a:	and    BYTE PTR [ebx-0x36],dh
  41d02d:	sub    edx,DWORD PTR [ebx]
  41d02f:	repnz sti 
  41d031:	stc    
  41d032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d033:	push   ebx
  41d034:	mov    ecx,0xabdec7a0
  41d039:	mov    ah,0x59
  41d03b:	pop    ss
  41d03c:	ds jae 0x41d027
  41d03f:	jp     0x41d018
  41d041:	adc    cl,dl
  41d043:	push   esp
  41d044:	or     al,0x3b
  41d046:	adc    al,BYTE PTR [ecx-0x13fe6d8]
  41d04c:	pushf  
  41d04d:	imul   ebp,DWORD PTR [ecx],0xffffffc2
  41d050:	xchg   esi,eax
  41d051:	fidivr DWORD PTR [esi-0x12]
  41d054:	retf   
  41d055:	add    al,0xed
  41d057:	jb     0x41d068
  41d059:	add    ecx,DWORD PTR [ecx+0xd]
  41d05c:	dec    esi
  41d05d:	xchg   ecx,eax
  41d05e:	out    dx,eax
  41d05f:	(bad)  
  41d060:	xchg   ecx,eax
  41d061:	das    
  41d062:	call   0x8eaeb054
  41d067:	lods   eax,DWORD PTR ds:[esi]
  41d068:	xchg   esi,ebp
  41d06a:	dec    esi
  41d06b:	add    dh,BYTE PTR [ecx+0xa]
  41d06e:	(bad)
  41d073:	call   0x7725:0x8ef922cc
  41d07a:	popf   
  41d07b:	jnp    0x41d0ad
  41d07d:	fdivr  QWORD PTR [ebx+0x25]
  41d080:	(bad)  
  41d081:	outs   dx,DWORD PTR ds:[esi]
  41d082:	fldcw  WORD PTR [ebx+0xa]
  41d085:	mov    ds:0xf2c48f70,al
  41d08a:	outs   dx,DWORD PTR ds:[esi]
  41d08b:	aas    
  41d08c:	stos   DWORD PTR es:[edi],eax
  41d08d:	adc    al,0xbc
  41d08f:	inc    esi
  41d090:	lds    eax,FWORD PTR [edi-0x61]
  41d093:	(bad)  
  41d094:	and    cl,BYTE PTR [edx-0x76]
  41d097:	cmp    BYTE PTR [edi],dh
  41d099:	xchg   edx,eax
  41d09a:	js     0x41d05e
  41d09c:	jno    0x41d0e4
  41d09e:	jmp    0x41d04a
  41d0a0:	dec    esp
  41d0a1:	fisub  WORD PTR [edi+ebx*4]
  41d0a4:	test   al,0xb0
  41d0a6:	jmp    0x41d126
  41d0a8:	fisub  WORD PTR [ecx+edi*1]
  41d0ab:	cli    
  41d0ac:	call   0xe62e1944
  41d0b1:	ins    BYTE PTR es:[edi],dx
  41d0b2:	stos   DWORD PTR es:[edi],eax
  41d0b3:	lods   eax,DWORD PTR ds:[esi]
  41d0b4:	fs jae 0x41d0f7
  41d0b7:	push   cs
  41d0b8:	mov    ds:0x310ba068,eax
  41d0bd:	dec    edi
  41d0be:	dec    edi
  41d0bf:	(bad)  [ebp+0x14]
  41d0c2:	dec    esi
  41d0c3:	jnp    0x41d0c8
  41d0c5:	loop   0x41d0d1
  41d0c7:	(bad)  
  41d0c8:	(bad)  
  41d0c9:	fld    st(5)
  41d0cb:	inc    edx
  41d0cc:	jae    0x41d0da
  41d0ce:	jne    0x41d130
  41d0d0:	sti    
  41d0d1:	push   edi
  41d0d2:	adc    ah,BYTE PTR [ebp+esi*1-0x7b]
  41d0d6:	push   cs
  41d0d7:	inc    ebp
  41d0d8:	call   0x8d514963
  41d0dd:	lea    edi,[edi+0x8604ca3]
  41d0e3:	xor    BYTE PTR [esi],bh
  41d0e5:	pop    edx
  41d0e6:	mov    esi,0xc9921261
  41d0eb:	pop    ss
  41d0ec:	out    0xcf,eax
  41d0ee:	adc    edx,ebp
  41d0f0:	xor    BYTE PTR [edx-0x5ff4d4af],0x94
  41d0f7:	call   0x31ab5729
  41d0fc:	and    al,0xd3
  41d0fe:	sbb    edi,DWORD PTR [ecx+0x7bcb7cf2]
  41d104:	bound  edi,QWORD PTR ds:0x651d844b
  41d10a:	shl    BYTE PTR [ecx+0x3419a861],cl
  41d110:	mov    ds:0x70ffb560,al
  41d115:	adc    BYTE PTR [edi-0x75],ch
  41d118:	inc    eax
  41d119:	inc    ebp
  41d11a:	aam    0x59
  41d11c:	(bad)
  41d11f:	adc    BYTE PTR [eax+0x7d483537],ah
  41d125:	ret    0x1114
  41d128:	push   edx
  41d129:	cmp    esp,esp
  41d12b:	(bad)  
  41d130:	xchg   DWORD PTR [esi-0x205e3927],eax
  41d136:	jecxz  0x41d19b
  41d138:	aaa    
  41d139:	add    dl,BYTE PTR [ebx*4+0x6690a486]
  41d140:	sbb    edx,DWORD PTR [eax+0x3a]
  41d143:	inc    ecx
  41d144:	adc    dl,ah
  41d146:	mov    al,ds:0xac2461a7
  41d14b:	xchg   bh,ah
  41d14d:	(bad)  
  41d14e:	pop    ecx
  41d14f:	xchg   edx,eax
  41d150:	pop    ds
  41d151:	cmp    DWORD PTR [eax],0xffffff8a
  41d154:	dec    eax
  41d155:	mov    cl,0x98
  41d157:	push   esp
  41d158:	scas   eax,DWORD PTR es:[edi]
  41d159:	nop
  41d15a:	rol    DWORD PTR [ebx],1
  41d15c:	and    bh,BYTE PTR [esi+0x715f4146]
  41d162:	and    BYTE PTR [edi],cl
  41d164:	outs   dx,BYTE PTR ds:[esi]
  41d165:	lods   al,BYTE PTR ds:[esi]
  41d166:	xchg   ebp,eax
  41d167:	cwde   
  41d168:	fisub  WORD PTR [ecx+0x1b]
  41d16b:	fadd   st(3),st
  41d16d:	sbb    esi,edx
  41d16f:	ret    
  41d170:	fcmovbe st,st(5)
  41d172:	stos   BYTE PTR es:[edi],al
  41d173:	pop    ebx
  41d174:	aaa    
  41d175:	and    DWORD PTR [esi+0x49a893b4],edi
  41d17b:	in     eax,0x2a
  41d17d:	adc    BYTE PTR [eax],0x4d
  41d180:	stc    
  41d181:	mov    ah,bh
  41d183:	mov    ecx,DWORD PTR [ebp-0x1dc31a0c]
  41d189:	arpl   WORD PTR [ebp-0x7d80cacf],si
  41d18f:	xor    eax,DWORD PTR [ebx-0x52]
  41d192:	mov    ebp,0xba3be0a7
  41d197:	fld    DWORD PTR [edi+edx*4+0x66]
  41d19b:	mov    bl,0xd5
  41d19d:	cmp    DWORD PTR [ecx-0x552a6c4a],0xffffff8f
  41d1a4:	adc    eax,0xad50e75c
  41d1a9:	rol    DWORD PTR [esi-0x1521d50f],1
  41d1af:	sub    BYTE PTR [edx+edi*1+0x239abda0],dh
  41d1b6:	fwait
  41d1b7:	fs repz out 0x1f,eax
  41d1bb:	out    dx,eax
  41d1bc:	mov    ds:0x4e97c470,al
  41d1c1:	or     ah,cl
  41d1c3:	imul   esp,edx,0xdfa336bb
  41d1c9:	jle    0x41d1ad
  41d1cb:	test   eax,0xe0a5f123
  41d1d0:	pop    ebx
  41d1d1:	mov    ds:0xe9f3cac4,eax
  41d1d6:	xchg   BYTE PTR [edi+0x50],ah
  41d1d9:	fst    DWORD PTR [edi-0x421e4e38]
  41d1df:	aam    0x91
  41d1e1:	inc    ecx
  41d1e2:	mov    eax,0xb773801f
  41d1e7:	sahf   
  41d1e8:	popa   
  41d1e9:	add    BYTE PTR [edi-0x5c],bl
  41d1ec:	sub    DWORD PTR [esi+0x6e932047],0x22
  41d1f3:	pop    DWORD PTR [edx]
  41d1f5:	push   0xc7fba339
  41d1fa:	mov    edi,0xac1db477
  41d1ff:	push   eax
  41d200:	jg     0x41d1ba
  41d202:	aam    0x40
  41d204:	jne    0x41d1a9
  41d206:	jb     0x41d188
  41d208:	cld    
  41d209:	loopne 0x41d1ce
  41d20b:	enter  0xe3d8,0x4c
  41d20f:	add    BYTE PTR [eax+0x7ff5861],0xad
  41d216:	fwait
  41d217:	push   ds
  41d218:	pop    ebx
  41d219:	lahf   
  41d21a:	cmp    bh,BYTE PTR [eax-0x77]
  41d21d:	fs and eax,0xff35b532
  41d223:	push   esi
  41d224:	dec    esp
  41d225:	xor    BYTE PTR [esi],bh
  41d227:	jae    0x41d1fa
  41d229:	add    al,0x6b
  41d22b:	sub    al,0xca
  41d22d:	ss push esi
  41d22f:	dec    ebx
  41d230:	lock push ecx
  41d232:	cmp    al,0xbb
  41d234:	int3   
  41d235:	lods   al,BYTE PTR ds:[esi]
  41d236:	xchg   ecx,eax
  41d237:	icebp  
  41d238:	mov    dl,0x8d
  41d23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d23b:	das    
  41d23c:	mov    edx,DWORD PTR [ecx+0x6c19ae52]
  41d242:	or     edx,DWORD PTR [ebx-0x7986d97d]
  41d248:	inc    esp
  41d249:	xchg   DWORD PTR ds:0x51120e85,esi
  41d24f:	popf   
  41d250:	mov    bh,0x6c
  41d252:	sti    
  41d253:	cmp    ecx,edi
  41d255:	add    BYTE PTR [edi-0x53],dh
  41d258:	push   eax
  41d259:	mov    DWORD PTR [edx+0x2],esp
  41d25c:	or     esp,DWORD PTR [esp+edi*8-0x39]
  41d260:	dec    esp
  41d261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d262:	out    0xb4,eax
  41d264:	rcr    BYTE PTR [edx+0x4b356458],1
  41d26a:	sub    ebp,DWORD PTR [ecx]
  41d26c:	sbb    al,0x65
  41d26e:	pusha  
  41d26f:	xlat   BYTE PTR ds:[ebx]
  41d270:	xor    esi,ebp
  41d272:	pop    ss
  41d273:	fstp   st(5)
  41d275:	mov    esp,0xbe804b03
  41d27a:	fdivp  st(2),st
  41d27c:	int3   
  41d27d:	sbb    bh,bl
  41d27f:	mov    BYTE PTR [edi+ecx*2+0x2999ab2],bl
  41d286:	add    al,0x9e
  41d288:	sbb    eax,0xd6a4d478
  41d28d:	dec    ecx
  41d28e:	sbb    eax,0xc180d76d
  41d293:	jno    0x41d226
  41d295:	adc    al,0x9f
  41d297:	sti    
  41d298:	repz inc ebx
  41d29a:	ror    BYTE PTR [eax],cl
  41d29c:	fwait
  41d29d:	in     al,dx
  41d29e:	nop
  41d29f:	sub    ch,BYTE PTR [esi]
  41d2a1:	ins    DWORD PTR es:[edi],dx
  41d2a2:	mov    al,0x9b
  41d2a4:	in     eax,0x77
  41d2a6:	ins    DWORD PTR es:[edi],dx
  41d2a7:	adc    BYTE PTR [esi+0x4a48abd1],ch
  41d2ad:	mov    eax,ds:0x2b351fda
  41d2b2:	shl    DWORD PTR [ebx+0x746dca53],1
  41d2b8:	(bad)  
  41d2b9:	emms   
  41d2bb:	test   BYTE PTR [edx],dh
  41d2bd:	cmp    ebp,DWORD PTR [edx]
  41d2bf:	jmp    0x41d339
  41d2c1:	div    DWORD PTR [edx]
  41d2c3:	or     BYTE PTR [ebp+edi*2+0x33],0x8f
  41d2c8:	repz loop 0x41d345
  41d2cb:	xchg   edi,eax
  41d2cc:	(bad)  
  41d2cd:	dec    esp
  41d2ce:	xor    eax,0xf4bbcae1
  41d2d3:	fnstenv [esi+ecx*2]
  41d2d6:	jp     0x41d324
  41d2d8:	jne    0x41d341
  41d2da:	jb     0x41d26d
  41d2dc:	lods   eax,DWORD PTR ds:[esi]
  41d2dd:	inc    esp
  41d2de:	je     0x41d353
  41d2e0:	and    edi,DWORD PTR [ebx-0x5f5e05cb]
  41d2e6:	hlt    
  41d2e7:	jle    0x41d33a
  41d2e9:	retf   
  41d2ea:	stc    
  41d2eb:	cmp    BYTE PTR [esi+eax*4-0x38cddfcc],cl
  41d2f2:	icebp  
  41d2f3:	or     eax,0x80923ae2
  41d2f8:	push   ecx
  41d2f9:	(bad)  
  41d2fa:	repz cdq 
  41d2fc:	enter  0x6ebe,0xbd
  41d300:	mov    ecx,0xd659082f
  41d305:	fadd   DWORD PTR [edi]
  41d307:	pop    edx
  41d308:	es add eax,0x7a60e98
  41d30e:	aas    
  41d30f:	stc    
  41d310:	out    0x44,al
  41d312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d313:	push   0xb6cb423b
  41d318:	xor    ch,BYTE PTR [ebp+0x7627a134]
  41d31e:	lahf   
  41d31f:	jmp    0x4e7:0x7fedaaab
  41d326:	inc    edx
  41d327:	pop    ebp
  41d328:	imul   ecx,DWORD PTR [edx],0xffffff84
  41d32b:	arpl   WORD PTR [edx],cx
  41d32d:	rcl    DWORD PTR [edi+0x76920aeb],1
  41d333:	mov    dh,0x57
  41d335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d336:	inc    ebp
  41d337:	(bad)  
  41d338:	out    0x1a,eax
  41d33a:	jns    0x41d302
  41d33c:	outs   dx,BYTE PTR ds:[esi]
  41d33d:	adc    al,0xbf
  41d33f:	dec    esi
  41d340:	cmc    
  41d341:	xor    al,0xbc
  41d343:	in     al,0xb9
  41d345:	dec    esi
  41d346:	jmp    0xaa92:0xae1ec8b
  41d34d:	or     al,0x59
  41d34f:	fsub   DWORD PTR [edx+0x79]
  41d352:	adc    bl,ch
  41d354:	mov    dl,0x97
  41d356:	cdq    
  41d357:	cli    
  41d358:	jns    0x41d369
  41d35a:	jnp    0x41d2df
  41d35c:	cs repnz pop eax
  41d35f:	ins    BYTE PTR es:[edi],dx
  41d360:	push   esi
  41d361:	int    0xd1
  41d363:	pop    esp
  41d364:	push   esi
  41d365:	add    ch,bh
  41d367:	sbb    eax,0x74eaefe2
  41d36c:	fdiv   QWORD PTR [esi+ebx*4+0x78]
  41d370:	clc    
  41d371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d372:	adc    ecx,esp
  41d374:	jge    0x41d3ab
  41d376:	shr    BYTE PTR [esi+0x190babbf],1
  41d37c:	out    dx,al
  41d37d:	sar    ecx,0xa5
  41d380:	cmc    
  41d381:	repnz push cs
  41d383:	pop    ebx
  41d384:	or     al,0xc2
  41d386:	pushf  
  41d387:	or     ebp,esi
  41d389:	add    ah,al
  41d38b:	add    ebp,DWORD PTR [edx+0x44]
  41d38e:	call   eax
  41d390:	shl    BYTE PTR [esi-0x1fea81ef],1
  41d396:	fs mov esp,0x2f723f12
  41d39c:	inc    edi
  41d39d:	mov    es,WORD PTR [edi]
  41d39f:	mov    ch,0xc
  41d3a1:	cs push ecx
  41d3a3:	cmp    BYTE PTR [edi],0x5a
  41d3a6:	dec    edx
  41d3a7:	cs cli 
  41d3a9:	sbb    esp,DWORD PTR ds:0x48ff40f8
  41d3af:	popa   
  41d3b0:	cwde   
  41d3b1:	lahf   
  41d3b2:	mov    al,0x11
  41d3b4:	mov    dh,0x83
  41d3b6:	lds    edi,FWORD PTR [ecx-0x25]
  41d3b9:	lock push cs
  41d3bb:	shl    DWORD PTR [ebp+0x512615ae],cl
  41d3c1:	pop    edx
  41d3c2:	sub    al,0xce
  41d3c4:	hlt    
  41d3c5:	mov    ebp,0xc00f9626
  41d3ca:	int3   
  41d3cb:	sbb    al,0xab
  41d3cd:	lods   al,BYTE PTR ds:[esi]
  41d3ce:	iret   
  41d3cf:	aaa    
  41d3d0:	pop    edx
  41d3d1:	fsub   QWORD PTR [ebx+0x9d8ece9]
  41d3d7:	(bad)  
  41d3d8:	lods   al,BYTE PTR ds:[esi]
  41d3d9:	cmc    
  41d3da:	hlt    
  41d3db:	adc    DWORD PTR [esi+0x74],0xffffffa8
  41d3df:	sub    al,ch
  41d3e1:	repz sti 
  41d3e3:	in     al,dx
  41d3e4:	mov    ecx,0xf9cfa59f
  41d3e9:	push   ebx
  41d3ea:	lods   al,BYTE PTR ds:[esi]
  41d3eb:	mov    ss,WORD PTR [ecx-0x37107323]
  41d3f1:	mov    gs,WORD PTR [edi]
  41d3f3:	sub    BYTE PTR [esi],ch
  41d3f5:	mov    al,0xe7
  41d3f7:	shl    BYTE PTR [ecx+0x1ba832fd],cl
  41d3fd:	mov    ecx,0x2e413137
  41d402:	or     bl,ah
  41d404:	fs sbb ecx,0xc9904b12
  41d40b:	sbb    al,0x8e
  41d40d:	in     eax,0x50
  41d40f:	adc    eax,0xf8172ecd
  41d414:	fs sbb eax,0xb72d2ebf
  41d41a:	ret    
  41d41b:	jo     0x41d3e0
  41d41d:	scas   al,BYTE PTR es:[edi]
  41d41e:	rcl    DWORD PTR [edi-0x45],cl
  41d421:	inc    edi
  41d422:	sub    BYTE PTR [ecx+0x55],ah
  41d425:	std    
  41d426:	pop    ds
  41d427:	pop    ss
  41d428:	push   ebx
  41d429:	push   ss
  41d42a:	jl     0x41d3bf
  41d42c:	cdq    
  41d42d:	mov    ah,0xf4
  41d42f:	xchg   edx,eax
  41d430:	add    eax,0xa7f8de10
  41d435:	adc    ecx,eax
  41d437:	sbb    ebp,eax
  41d439:	aam    0x2a
  41d43b:	mov    ds:0xfad33929,al
  41d440:	not    BYTE PTR [ecx+edi*8]
  41d443:	stos   DWORD PTR es:[edi],eax
  41d444:	pop    eax
  41d445:	pop    edi
  41d446:	repnz popa 
  41d448:	test   BYTE PTR [ebp+0x6c],dh
  41d44b:	adc    eax,0xf662deed
  41d450:	repz inc eax
  41d452:	xchg   ebp,eax
  41d453:	jle    0x41d484
  41d455:	lahf   
  41d456:	xchg   ebx,eax
  41d457:	aam    0xbb
  41d459:	scas   al,BYTE PTR es:[edi]
  41d45a:	pop    es
  41d45b:	sub    dh,ah
  41d45d:	stc    
  41d45e:	mov    edi,0x4f04b628
  41d463:	out    0x7d,eax
  41d465:	aad    0xf5
  41d467:	jecxz  0x41d4cb
  41d469:	mov    eax,0xd45a7464
  41d46e:	cli    
  41d46f:	(bad)  
  41d470:	mov    edi,0x48b0bbda
  41d475:	icebp  
  41d476:	mov    esp,0x4fc8254e
  41d47b:	mov    ch,0x72
  41d47d:	push   es
  41d47e:	hlt    
  41d47f:	sbb    eax,0xc766c14c
  41d484:	and    eax,0xb47cb85c
  41d489:	sbb    DWORD PTR [ecx-0x36],eax
  41d48c:	add    dl,dh
  41d48e:	mov    edi,DWORD PTR [edi]
  41d490:	js     0x41d461
  41d492:	push   eax
  41d493:	pop    eax
  41d494:	and    eax,0x8285cc27
  41d499:	jg     0x41d423
  41d49b:	xor    eax,0xf22715ed
  41d4a0:	sbb    BYTE PTR [ecx-0x20c32256],al
  41d4a6:	mov    bl,0xf5
  41d4a8:	or     al,0x4f
  41d4aa:	mov    bh,0x95
  41d4ac:	dec    edi
  41d4ad:	stos   DWORD PTR es:[edi],eax
  41d4ae:	(bad)
  41d4b2:	push   eax
  41d4b3:	loopne 0x41d43c
  41d4b5:	ror    BYTE PTR [esi+ecx*4],0x9c
  41d4b9:	in     eax,dx
  41d4ba:	jns    0x41d4df
  41d4bc:	repnz in eax,dx
  41d4be:	out    0x3a,al
  41d4c0:	test   eax,0xb1932121
  41d4c5:	in     al,dx
  41d4c6:	mov    ch,BYTE PTR [edx+0x5c]
  41d4c9:	std    
  41d4ca:	aam    0xa7
  41d4cc:	ds jecxz 0x41d497
  41d4cf:	sub    al,0x63
  41d4d1:	sti    
  41d4d2:	jle    0x41d552
  41d4d4:	addr16 push cs
  41d4d6:	mov    edx,0x8696c083
  41d4db:	push   edx
  41d4dc:	push   0x5f
  41d4de:	in     eax,0xfd
  41d4e0:	rcr    BYTE PTR [ebp+0x64],0x84
  41d4e4:	or     esi,DWORD PTR [edi+0x7b]
  41d4e7:	mov    WORD PTR fs:[edx+0x5a],es
  41d4eb:	sub    ebp,DWORD PTR [ebx]
  41d4ed:	clc    
  41d4ee:	push   ebp
  41d4ef:	xchg   edx,eax
  41d4f0:	cmp    al,0xc4
  41d4f2:	idiv   DWORD PTR [ebx]
  41d4f4:	lock fbld TBYTE PTR [edx+0x159ccf03]
  41d4fb:	mov    ecx,0x7578bc2e
  41d500:	mov    al,0xf7
  41d502:	gs adc edi,edi
  41d505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d506:	cmp    eax,0x95ebc891
  41d50b:	xor    al,0x49
  41d50d:	jb     0x41d525
  41d50f:	aad    0x5c
  41d511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d512:	or     al,0x39
  41d514:	fldenv ds:[ebx+0x76ac5a98]
  41d51b:	sbb    al,0x4
  41d51d:	mov    esp,0x23fff7da
  41d522:	sahf   
  41d523:	js     0x41d4d7
  41d525:	inc    BYTE PTR [ebx-0x54]
  41d528:	xchg   ebx,eax
  41d529:	inc    esp
  41d52a:	hlt    
  41d52b:	(bad)  
  41d52d:	and    edi,DWORD PTR [eax+0xa]
  41d530:	popa   
  41d531:	les    esp,FWORD PTR [ebx]
  41d533:	fnsave [edi-0x78e1bbe5]
  41d539:	jne    0x41d4f8
  41d53b:	out    dx,eax
  41d53c:	popf   
  41d53d:	jmp    0xde6ea186
  41d542:	xchg   ebp,eax
  41d543:	sub    BYTE PTR [ebp+0x59a47c98],ah
  41d549:	add    DWORD PTR [ebp-0x3e7fcd09],esi
  41d54f:	jmp    0xaed9:0xda565a48
  41d556:	xchg   BYTE PTR ds:0x33ef965,bh
  41d55c:	outs   dx,DWORD PTR ds:[esi]
  41d55d:	shl    bh,0x22
  41d560:	xchg   esp,eax
  41d561:	dec    ecx
  41d562:	mul    ecx
  41d564:	aam    0xda
  41d566:	out    dx,al
  41d567:	jb     0x41d550
  41d569:	push   edx
  41d56a:	pop    esp
  41d56b:	stos   DWORD PTR es:[edi],eax
  41d56c:	or     eax,0x3c3d3e40
  41d571:	or     DWORD PTR [ebx],ebx
  41d573:	das    
  41d574:	arpl   WORD PTR [esi+0x61],si
  41d577:	jp     0x41d5d6
  41d579:	bound  edx,QWORD PTR [ecx-0x5247ad8e]
  41d57f:	aaa    
  41d580:	adc    eax,0xa41e0a1e
  41d585:	add    DWORD PTR [ecx-0x609fbc7f],ebp
  41d58b:	add    dh,BYTE PTR [ecx]
  41d58d:	daa    
  41d58e:	fwait
  41d58f:	sbb    al,0x74
  41d591:	pushf  
  41d592:	or     DWORD PTR [ecx],0x5ce6c1b
  41d598:	jae    0x41d617
  41d59a:	or     al,0x5d
  41d59c:	xor    eax,0xf9aea67
  41d5a1:	cmp    BYTE PTR ds:0x78d96dbe,0xea
  41d5a8:	cli    
  41d5a9:	sub    esp,edi
  41d5ab:	mov    bl,dh
  41d5ad:	lock mov ebp,0xad33b57c
  41d5b3:	and    eax,0xbe108c81
  41d5b8:	pop    es
  41d5b9:	cmc    
  41d5ba:	cmp    eax,0xad43242b
  41d5bf:	pop    esi
  41d5c0:	push   esp
  41d5c1:	sahf   
  41d5c2:	clc    
  41d5c3:	jg     0x41d609
  41d5c5:	push   ds
  41d5c6:	enter  0x6796,0xfc
  41d5ca:	mov    ch,0x3d
  41d5cc:	test   eax,0x320aa048
  41d5d1:	in     al,0xa3
  41d5d3:	mov    al,0x3
  41d5d5:	mov    eax,ds:0x62feeec5
  41d5da:	mov    ds:0x94e5c292,al
  41d5df:	daa    
  41d5e0:	sbb    ecx,DWORD PTR [ebx+0x797d13ad]
  41d5e6:	dec    DWORD PTR [ecx+0x60]
  41d5e9:	xor    BYTE PTR [ecx],cl
  41d5eb:	pop    esp
  41d5ec:	mov    ebp,0xdfd112c5
  41d5f1:	dec    edx
  41d5f2:	retf   
  41d5f3:	dec    esp
  41d5f4:	jp     0x41d607
  41d5f6:	rcr    BYTE PTR fs:[edi-0x1fa28542],0xa3
  41d5fe:	pop    ds
  41d5ff:	retf   
  41d600:	mov    esp,0x80efa05
  41d605:	add    eax,0xb55d75b9
  41d60a:	and    ecx,DWORD PTR [ebp+0x44]
  41d60d:	pushf  
  41d60e:	add    DWORD PTR [edx+ebx*1-0x675d1417],ecx
  41d615:	sbb    cl,BYTE PTR [esi+0x31]
  41d618:	cdq    
  41d619:	dec    edi
  41d61a:	pusha  
  41d61b:	and    dl,al
  41d61d:	and    ch,bl
  41d61f:	jo     0x41d5d4
  41d621:	jb     0x41d63b
  41d623:	out    dx,al
  41d624:	xchg   ebx,eax
  41d625:	imul   esi,DWORD PTR [edx-0x51550ad3],0x67
  41d62c:	rcl    BYTE PTR [ecx+esi*1-0x29dc00bb],1
  41d633:	and    ch,BYTE PTR [esi+0x1f5e4c5c]
  41d639:	push   ebp
  41d63a:	into   
  41d63b:	mov    cl,0x29
  41d63d:	jns    0x41d6b6
  41d63f:	idiv   ch
  41d641:	ss push ss
  41d643:	pop    ebx
  41d644:	sub    bh,BYTE PTR [ecx-0x1c]
  41d647:	jbe    0x41d5db
  41d649:	ret    0xe2da
  41d64c:	pop    ecx
  41d64d:	dec    edi
  41d64e:	sbb    DWORD PTR [ecx],eax
  41d650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d651:	addr16 xchg ebx,eax
  41d653:	sbb    edi,DWORD PTR [ebx+0x2e]
  41d656:	push   esi
  41d657:	cmp    ebp,DWORD PTR [esi+ebp*2]
  41d65a:	add    esp,DWORD PTR [edx]
  41d65c:	int3   
  41d65d:	jo     0x41d65c
  41d65f:	inc    ebp
  41d660:	xchg   ebx,eax
  41d661:	mov    DWORD PTR ds:0x2e69ce94,eax
  41d667:	int3   
  41d668:	xlat   BYTE PTR ds:[ebx]
  41d669:	stos   DWORD PTR es:[edi],eax
  41d66a:	pushf  
  41d66b:	jae    0x41d6dd
  41d66d:	cmp    eax,0x71de6f1d
  41d672:	std    
  41d673:	je     0x41d666
  41d675:	out    dx,eax
  41d676:	mov    bh,0x61
  41d678:	or     bl,al
  41d67a:	mov    dh,0xf
  41d67c:	aam    0x6a
  41d67e:	lahf   
  41d67f:	xor    eax,0xed3a9755
  41d684:	pop    ds
  41d685:	fstp   TBYTE PTR [edx]
  41d687:	sbb    BYTE PTR [ebx],cl
  41d689:	inc    edi
  41d68a:	cmp    ecx,DWORD PTR ds:0x9c015753
  41d690:	pop    esp
  41d691:	dec    ebx
  41d692:	pop    edi
  41d693:	fcomip st,st(0)
  41d695:	inc    edx
  41d696:	(bad)  
  41d697:	popf   
  41d698:	out    dx,al
  41d699:	inc    esi
  41d69a:	mov    edi,0x815325f5
  41d69f:	lock retf 
  41d6a1:	in     eax,dx
  41d6a2:	mov    cl,0xf0
  41d6a4:	jmp    0x1f28:0x6e4caf53
  41d6ab:	(bad)  
  41d6ac:	ret    
  41d6ad:	rcl    DWORD PTR [esi-0x50],cl
  41d6b0:	js     0x41d686
  41d6b2:	(bad)  
  41d6b3:	inc    ebx
  41d6b4:	rcr    DWORD PTR [ebp+0x17],1
  41d6b7:	pop    ebx
  41d6b8:	jg     0x41d6e2
  41d6ba:	and    esp,esp
  41d6bc:	or     dh,cl
  41d6be:	pop    ebp
  41d6bf:	scas   al,BYTE PTR es:[edi]
  41d6c0:	aas    
  41d6c1:	js     0x41d6c0
  41d6c3:	adc    eax,0xa01c0db9
  41d6c8:	scas   al,BYTE PTR es:[edi]
  41d6c9:	push   ss
  41d6ca:	jae    0x41d708
  41d6cc:	dec    edx
  41d6cd:	push   esp
  41d6ce:	test   DWORD PTR [ebx],edx
  41d6d0:	and    BYTE PTR [ebp+0x46bcae53],al
  41d6d6:	xor    eax,0x3b696ac0
  41d6db:	int    0x1d
  41d6dd:	in     eax,dx
  41d6de:	sbb    al,0x3a
  41d6e0:	mov    ?,WORD PTR [edi+0x21]
  41d6e3:	test   DWORD PTR [ecx],ebx
  41d6e5:	jae    0x41d6cc
  41d6e7:	mov    dh,0x2c
  41d6e9:	fwait
  41d6ea:	scas   al,BYTE PTR es:[edi]
  41d6eb:	cmp    eax,DWORD PTR [esi+0x19079286]
  41d6f1:	loope  0x41d6c6
  41d6f3:	stc    
  41d6f4:	gs xor ah,al
  41d6f7:	inc    ecx
  41d6f8:	jl     0x41d723
  41d6fa:	mov    cl,0x5b
  41d6fc:	scas   eax,DWORD PTR es:[edi]
  41d6fd:	inc    ebp
  41d6fe:	push   esi
  41d6ff:	and    ecx,DWORD PTR [eax]
  41d701:	or     eax,0xc98d6357
  41d706:	bound  ecx,QWORD PTR [ecx+0x2791c380]
  41d70c:	out    dx,al
  41d70d:	pop    ecx
  41d70e:	sub    dh,BYTE PTR [ebx+0x53]
  41d711:	mov    esp,0xd3963ac8
  41d716:	mov    eax,esi
  41d718:	cmp    eax,0xa82982f3
  41d71d:	pop    edx
  41d71e:	mov    dh,0xc5
  41d720:	cmp    eax,edx
  41d722:	inc    edi
  41d723:	xchg   BYTE PTR [edx+0x616d7e00],dh
  41d729:	xchg   ebx,eax
  41d72a:	sub    BYTE PTR [eax],dh
  41d72c:	adc    al,0x8c
  41d72e:	dec    ebx
  41d72f:	daa    
  41d730:	outs   dx,BYTE PTR ds:[esi]
  41d731:	cld    
  41d732:	pop    ebx
  41d733:	ds jle 0x41d735
  41d736:	xor    DWORD PTR [ebx+0x28],edx
  41d739:	inc    esi
  41d73a:	cli    
  41d73b:	rcl    DWORD PTR [ecx-0x36],1
  41d73e:	dec    esi
  41d73f:	mov    edi,0x9760d1a
  41d744:	jne    0x41d76e
  41d746:	stos   DWORD PTR es:[edi],eax
  41d747:	test   eax,0xc9e58aa9
  41d74c:	jmp    0x41d6e5
  41d74e:	idiv   edi
  41d750:	mov    esp,0x6820871
  41d755:	cwde   
  41d756:	cmp    al,0x42
  41d758:	(bad)  
  41d759:	sti    
  41d75a:	and    ebx,ebx
  41d75c:	ret    
  41d75d:	imul   edi,DWORD PTR [ebx],0x37
  41d760:	push   ebp
  41d761:	mov    al,0x44
  41d763:	pusha  
  41d764:	xor    ecx,ebx
  41d766:	xor    BYTE PTR [edi],bh
  41d768:	mov    esi,0x3aaab9e0
  41d76d:	out    0x3e,eax
  41d76f:	push   ss
  41d770:	push   esp
  41d771:	fmul   DWORD PTR [eax+0xf]
  41d774:	loope  0x41d73a
  41d776:	das    
  41d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d779:	loop   0x41d77e
  41d77b:	xor    ch,bh
  41d77d:	bnd ret 0xb63f
  41d781:	or     esi,DWORD PTR [ebp-0x5]
  41d784:	cld    
  41d785:	daa    
  41d786:	aad    0x63
  41d788:	ins    DWORD PTR es:[edi],dx
  41d789:	mov    edi,0x19f7408c
  41d78e:	stos   DWORD PTR es:[edi],eax
  41d78f:	into   
  41d790:	pop    es
  41d791:	rcl    DWORD PTR [ebx],1
  41d793:	or     ah,bh
  41d795:	cmp    dh,ah
  41d797:	icebp  
  41d798:	push   0x1c
  41d79a:	aad    0x9e
  41d79c:	mov    ch,0xef
  41d79e:	jmp    0x5a122c94
  41d7a3:	mov    DWORD PTR [ebx],esi
  41d7a5:	in     al,dx
  41d7a6:	loop   0x41d80c
  41d7a8:	inc    ebp
  41d7a9:	sbb    esi,eax
  41d7ab:	jp     0x41d795
  41d7ad:	jae    0x41d732
  41d7af:	dec    esi
  41d7b0:	or     esi,DWORD PTR [eax]
  41d7b2:	cld    
  41d7b3:	inc    esp
  41d7b4:	add    BYTE PTR [ebp-0x17],dl
  41d7b7:	jmp    0x41d788
  41d7b9:	loopne 0x41d7a6
  41d7bb:	mov    eax,0x97db7ded
  41d7c0:	push   es
  41d7c1:	jbe    0x41d7c3
  41d7c3:	inc    DWORD PTR [ebp+0x68236feb]
  41d7c9:	or     eax,0xea79183d
  41d7ce:	jne    0x41d7fa
  41d7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d1:	push   0xffffffb5
  41d7d3:	arpl   WORD PTR [ecx+0x5a],dx
  41d7d6:	pop    esi
  41d7d7:	aaa    
  41d7d8:	mov    BYTE PTR [ebx-0x21],dl
  41d7db:	jg     0x41d7c6
  41d7dd:	or     al,0x6d
  41d7df:	loop   0x41d791
  41d7e1:	dec    ebx
  41d7e2:	adc    eax,0xba20c4a7
  41d7e7:	test   al,0xd2
  41d7e9:	lods   al,BYTE PTR ds:[esi]
  41d7ea:	xor    DWORD PTR [edi+esi*2-0x2fdb5815],0x3b032b93
  41d7f5:	push   esi
  41d7f6:	mov    ds:0x4baeae4d,al
  41d7fb:	xchg   ebx,eax
  41d7fc:	mov    esp,0x9ab5782e
  41d801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d802:	mov    dh,0xdd
  41d804:	mov    esp,0x5e366d7e
  41d809:	add    dl,BYTE PTR [edi-0x6f]
  41d80c:	xchg   esp,eax
  41d80d:	sar    BYTE PTR [ebx-0x6073b612],cl
  41d813:	test   al,0x15
  41d815:	mov    eax,ds:0x2d0fd973
  41d81a:	cmp    DWORD PTR [ecx-0x60e8ebca],0x5846cfb5
  41d824:	retf   0x7282
  41d827:	les    edi,FWORD PTR [ebp-0x24]
  41d82a:	dec    ebp
  41d82b:	adc    al,0x8
  41d82d:	pop    eax
  41d82e:	and    eax,0x7e0b3c1a
  41d833:	sar    edi,cl
  41d835:	clc    
  41d836:	mov    bh,0x38
  41d838:	in     al,dx
  41d839:	btc    DWORD PTR [ecx+esi*2-0x4f5e7cc1],edx
  41d841:	fistp  WORD PTR [ebp-0x38]
  41d844:	mov    ecx,0xd8b6c171
  41d849:	inc    esp
  41d84a:	addr16 push cs
  41d84c:	loope  0x41d815
  41d84e:	push   esi
  41d84f:	and    eax,DWORD PTR [eax+ebp*2+0x26fc6f31]
  41d856:	mov    eax,0x6d6452db
  41d85b:	call   0x107dc64e
  41d860:	std    
  41d861:	inc    esi
  41d862:	fist   WORD PTR [ecx+0x4e10371a]
  41d868:	mulps  xmm6,XMMWORD PTR [esi+0x62]
  41d86c:	shr    ecx,cl
  41d86e:	pop    ds
  41d86f:	repnz cdq 
  41d871:	xchg   edi,eax
  41d872:	ins    DWORD PTR es:[edi],dx
  41d873:	sti    
  41d874:	bound  esp,QWORD PTR [edx]
  41d876:	push   ds
  41d877:	cmc    
  41d878:	(bad)  
  41d879:	fidivr DWORD PTR [ebx+0x5c]
  41d87c:	inc    esp
  41d87d:	pop    edi
  41d87e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d880:	xchg   edx,eax
  41d881:	mov    eax,0x93d57fcc
  41d886:	into   
  41d887:	jg     0x41d812
  41d889:	test   BYTE PTR [ebx+0x790f027f],0x14
  41d890:	push   edx
  41d891:	and    bh,BYTE PTR [edi-0x6e]
  41d894:	and    ebx,DWORD PTR [eax]
  41d896:	leave  
  41d897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d898:	jecxz  0x41d84a
  41d89a:	ds xchg esp,eax
  41d89c:	jg     0x41d896
  41d89e:	out    dx,eax
  41d89f:	ins    DWORD PTR es:[edi],dx
  41d8a0:	in     eax,dx
  41d8a1:	sbb    ebp,esi
  41d8a3:	mov    edx,0xf7a70a3a
  41d8a8:	pop    ebx
  41d8a9:	jmp    0x41d83f
  41d8ab:	push   0x659a9f66
  41d8b0:	ds test al,0x4a
  41d8b3:	cdq    
  41d8b4:	fimul  DWORD PTR ds:0xd4fedd6a
  41d8ba:	xchg   edx,eax
  41d8bb:	nop
  41d8bc:	pop    ecx
  41d8bd:	mov    ah,0x4
  41d8bf:	jle    0x41d928
  41d8c1:	lods   eax,DWORD PTR ds:[esi]
  41d8c2:	in     al,dx
  41d8c3:	sub    DWORD PTR [edx*4+0x2dad08f2],0x23
  41d8cb:	test   DWORD PTR [ebx-0x26],eax
  41d8ce:	cmp    esi,ecx
  41d8d0:	loope  0x41d8e3
  41d8d2:	cmp    bh,BYTE PTR gs:[ecx+0x29e47a33]
  41d8d9:	ja     0x41d959
  41d8db:	jg     0x41d8a6
  41d8dd:	jp     0x41d912
  41d8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e0:	int    0x77
  41d8e2:	dec    eax
  41d8e3:	xlat   BYTE PTR ds:[ebx]
  41d8e4:	sub    cl,BYTE PTR [eax-0x24]
  41d8e7:	sbb    edx,DWORD PTR [edi+0x13]
  41d8ea:	mov    edi,0x69e3b81e
  41d8ef:	jo     0x41d899
  41d8f1:	mov    ds:0x693ce389,eax
  41d8f6:	call   0x7b7fd96
  41d8fb:	xor    WORD PTR [eax+edi*2],sp
  41d8ff:	mov    dl,0x2
  41d901:	aam    0x93
  41d903:	aad    0x8a
  41d905:	xlat   BYTE PTR ds:[ebx]
  41d906:	and    DWORD PTR [edx+0x294ba90c],ebp
  41d90c:	je     0x41d8eb
  41d90e:	or     BYTE PTR [ecx-0x683081a7],0xea
  41d915:	xlat   BYTE PTR ds:[ebx]
  41d916:	repz or BYTE PTR [esp+edx*2+0x364ca516],0x7b
  41d91f:	retf   0xd6ff
  41d922:	or     eax,0xb6c46c08
  41d927:	loopne 0x41d8d0
  41d929:	pusha  
  41d92a:	sub    edx,0x2e9ac5cc
  41d930:	mov    al,BYTE PTR [edi-0x53fdd26f]
  41d936:	push   esi
  41d937:	nop
  41d938:	leave  
  41d939:	jno    0x41d905
  41d93b:	xor    cl,BYTE PTR [ebx+0x4687912b]
  41d941:	in     eax,dx
  41d942:	mov    ds:0x13c8468a,al
  41d947:	es cs dec esp
  41d94a:	jecxz  0x41d8e2
  41d94c:	mov    ebx,0xeec2cbb4
  41d951:	xchg   edx,eax
  41d952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d953:	or     ebp,ebx
  41d955:	sti    
  41d956:	xor    DWORD PTR [esp+ecx*8],0xffffffc7
  41d95a:	and    eax,0x64b8834b
  41d95f:	sbb    BYTE PTR [edi+0x3],al
  41d962:	and    ah,BYTE PTR [eax]
  41d964:	mov    ebp,DWORD PTR [eax-0x6a]
  41d967:	dec    ebp
  41d968:	sbb    DWORD PTR [edx],ecx
  41d96a:	daa    
  41d96b:	shl    BYTE PTR ds:0xdfe96a71,1
  41d971:	inc    ebx
  41d972:	inc    ebp
  41d973:	cld    
  41d974:	pop    esi
  41d975:	int    0xa3
  41d977:	fs ja  0x41d9c7
  41d97a:	ror    DWORD PTR [eax],1
  41d97c:	push   0xffffffbf
  41d97e:	dec    edi
  41d97f:	inc    ecx
  41d980:	inc    eax
  41d981:	cwde   
  41d982:	inc    edi
  41d983:	outs   dx,BYTE PTR ds:[esi]
  41d984:	sahf   
  41d985:	or     esp,DWORD PTR ds:0x5717d649
  41d98b:	shl    DWORD PTR [ebp-0x2c4fb6e4],0xc0
  41d992:	cwde   
  41d993:	ins    DWORD PTR es:[edi],dx
  41d994:	mov    ebp,gs
  41d996:	mov    edx,0xd1c3358f
  41d99b:	xchg   esi,eax
  41d99c:	daa    
  41d99d:	or     DWORD PTR [edi],esp
  41d99f:	sbb    ch,ch
  41d9a1:	pop    eax
  41d9a2:	mov    esp,cs
  41d9a4:	sahf   
  41d9a5:	repnz imul ebx,DWORD PTR cs:[ebx],0x23a633e3
  41d9ad:	pop    ss
  41d9ae:	ja     0x41d962
  41d9b0:	aad    0xe7
  41d9b2:	out    dx,al
  41d9b3:	ins    DWORD PTR es:[edi],dx
  41d9b4:	js     0x41d9f8
  41d9b6:	test   BYTE PTR [esi+ecx*4],0x9f
  41d9ba:	push   ecx
  41d9bb:	or     al,BYTE PTR [ebx-0x3a]
  41d9be:	outs   dx,DWORD PTR ds:[esi]
  41d9bf:	adc    DWORD PTR fs:[ebp+0x49],edx
  41d9c3:	div    BYTE PTR [ebx+0x7f]
  41d9c6:	inc    edx
  41d9c7:	or     eax,0x99f79b98
  41d9cc:	push   esp
  41d9cd:	stos   BYTE PTR es:[edi],al
  41d9ce:	data16 jae 0x41d99e
  41d9d1:	aaa    
  41d9d2:	leave  
  41d9d3:	nop
  41d9d4:	mov    dh,BYTE PTR [ebp+ebx*4-0x3f]
  41d9d8:	xchg   ebx,eax
  41d9d9:	jno    0x41d99e
  41d9db:	and    DWORD PTR cs:[eax],eax
  41d9de:	out    dx,al
  41d9df:	or     eax,0x82b24949
  41d9e4:	lds    edx,FWORD PTR [edi+0x299c3c6a]
  41d9ea:	inc    esp
  41d9eb:	pop    es
  41d9ec:	mov    edx,DWORD PTR [ebx+0x70d8fc22]
  41d9f2:	push   ebp
  41d9f4:	pushf  
  41d9f5:	std    
  41d9f6:	push   edi
  41d9f7:	popf   
  41d9f8:	ins    DWORD PTR es:[edi],dx
  41d9f9:	imul   ebp,eax,0x65
  41d9fc:	mov    esi,0x6afc7bb1
  41da01:	push   0x66
  41da03:	daa    
  41da04:	inc    ebp
  41da05:	and    BYTE PTR [eax+0x7],bl
  41da08:	adc    eax,0xae9f637d
  41da0d:	addr16 addr16 clc 
  41da10:	jmp    0x9fe37c2c
  41da15:	dec    eax
  41da16:	hlt    
  41da17:	or     BYTE PTR [esi+0x2f2d21b6],0x75
  41da1e:	pop    eax
  41da1f:	bnd jp 0x41d9ad
  41da22:	mov    ecx,0xe051ef0b
  41da27:	(bad)  
  41da28:	adc    BYTE PTR [eax+0x5ed9cb98],ah
  41da2e:	jle    0x41da1d
  41da30:	xor    DWORD PTR [eax+0x3e963042],0x5a
  41da37:	invd   
  41da39:	ins    BYTE PTR es:[edi],dx
  41da3a:	mov    esi,0xe47f6189
  41da3f:	fadd   DWORD PTR [ecx]
  41da41:	jo     0x41da97
  41da43:	sub    ecx,DWORD PTR [edi+0x6b]
  41da46:	push   esp
  41da47:	loope  0x41d9fb
  41da49:	ins    DWORD PTR es:[edi],dx
  41da4a:	push   edx
  41da4b:	mov    ah,0x5
  41da4d:	(bad)  
  41da4e:	aad    0xc
  41da50:	sub    esp,ecx
  41da52:	jle    0x41da85
  41da54:	adc    eax,0x411be7ec
  41da59:	lods   eax,DWORD PTR ds:[esi]
  41da5a:	pop    edi
  41da5b:	or     bl,BYTE PTR [ebx]
  41da5d:	ins    DWORD PTR es:[edi],dx
  41da5e:	and    DWORD PTR [ecx],0x47
  41da61:	add    BYTE PTR gs:[esi],dh
  41da64:	xor    DWORD PTR ds:0x8c2e757f,0x41189b29
  41da6e:	jmp    0x9d4:0x9f9865ce
  41da75:	xchg   BYTE PTR ds:0x266168e7,dh
  41da7b:	jo     0x41da53
  41da7d:	mov    ebp,0xf4cd3694
  41da82:	leave  
  41da83:	inc    ebx
  41da84:	mov    edx,edx
  41da86:	or     ecx,ecx
  41da88:	scas   eax,DWORD PTR es:[edi]
  41da89:	(bad)  
  41da8b:	test   al,0xf2
  41da8d:	adc    eax,0x51e39216
  41da92:	fstp   DWORD PTR [edx+0x70]
  41da95:	jge    0x41db0b
  41da97:	add    eax,0x4b76455e
  41da9c:	retf   
  41da9d:	test   eax,0xef5cc644
  41daa2:	int3   
  41daa3:	sbb    BYTE PTR [ecx+0x35e8e625],ch
  41daa9:	fcmovbe st,st(2)
  41daab:	shl    DWORD PTR [ebx],cl
  41daad:	sub    ah,dh
  41daaf:	inc    ebp
  41dab0:	pop    ebx
  41dab1:	sub    DWORD PTR ss:[edx-0x47d0d388],edx
  41dab8:	nop
  41dab9:	jmp    0xb7c2:0x2c5525c7
  41dac0:	das    
  41dac1:	jmp    0xf81d5bd2
  41dac6:	popf   
  41dac7:	jmp    0xd9923ed5
  41dacc:	jecxz  0x41daa6
  41dace:	retf   0x5e3a
  41dad1:	fcomi  st,st(7)
  41dad3:	sub    dl,BYTE PTR [esi+0x41]
  41dad6:	lahf   
  41dad7:	inc    ecx
  41dad8:	in     eax,0x0
  41dada:	jl     0x41dafd
  41dadc:	jne    0x41daff
  41dade:	mov    dl,0x45
  41dae0:	mov    bl,0x72
  41dae2:	aad    0x28
  41dae4:	add    DWORD PTR [edi],0x2
  41dae7:	and    ecx,DWORD PTR [edi-0x66]
  41daea:	pushf  
  41daeb:	sbb    eax,0xc36f6f9
  41daf0:	pushf  
  41daf1:	xchg   esi,eax
  41daf2:	int3   
  41daf3:	jns    0x41da90
  41daf5:	ret    0xeb10
  41daf8:	inc    ebx
  41daf9:	out    0xc2,eax
  41dafb:	xchg   DWORD PTR [eax],ebx
  41dafd:	clc    
  41dafe:	ficomp WORD PTR [ebp-0x35f356eb]
  41db04:	jno    0x41db41
  41db06:	and    bh,ch
  41db08:	jo     0x41da94
  41db0a:	mov    ebx,0x5234fb0f
  41db0f:	or     ah,cl
  41db11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db12:	jbe    0x41db3c
  41db14:	sub    bl,BYTE PTR [ecx+eax*1-0x24]
  41db18:	sub    ah,BYTE PTR [ebp-0x31b78599]
  41db1e:	int    0x5a
  41db20:	xchg   esi,eax
  41db21:	aam    0xb1
  41db23:	xor    al,0x85
  41db25:	mov    bl,BYTE PTR [esi-0x6e]
  41db28:	aaa    
  41db29:	sahf   
  41db2a:	imul   eax,DWORD PTR [edx+0x5e],0x1d
  41db2e:	scas   eax,DWORD PTR es:[edi]
  41db2f:	js     0x41dafb
  41db31:	cmp    eax,0x5ebad24e
  41db36:	stos   DWORD PTR es:[edi],eax
  41db37:	jne    0x41db4e
  41db39:	iret   
  41db3a:	(bad)  
  41db3c:	cmp    eax,0x25e546c
  41db41:	loopne 0x41db7f
  41db43:	rol    dh,1
  41db45:	pop    eax
  41db46:	push   es
  41db47:	mov    edx,0x2a70d6c
  41db4c:	mov    eax,gs
  41db4e:	mov    ds:0xec458948,eax
  41db53:	pop    es
  41db54:	cmp    eax,0x8209e70
  41db59:	dec    eax
  41db5a:	sbb    eax,0xe85aadbf
  41db5f:	or     al,0x82
  41db61:	xor    DWORD PTR [ebx],ecx
  41db63:	push   es
  41db64:	loop   0x41db8c
  41db66:	push   ss
  41db67:	mov    ds:0x48b3e1cb,al
  41db6c:	loopne 0x41dbdd
  41db6e:	jno    0x41dbda
  41db70:	mov    dh,bl
  41db72:	inc    ebx
  41db73:	pop    ecx
  41db74:	xchg   esi,eax
  41db75:	jns    0x41db20
  41db77:	out    dx,al
  41db78:	push   esp
  41db79:	push   0xffffffa4
  41db7b:	popf   
  41db7c:	pop    edx
  41db7d:	popf   
  41db7e:	lahf   
  41db7f:	mov    al,0xcf
  41db81:	ins    DWORD PTR es:[edi],dx
  41db82:	mov    edi,0xb2a8b024
  41db87:	or     DWORD PTR [eax],ebp
  41db89:	add    ch,BYTE PTR [ecx+0x10]
  41db8c:	imul   ebp,DWORD PTR [esi+0x543fd91c],0xffffffc4
  41db93:	cmp    bl,dl
  41db95:	push   0x34e2c049
  41db9a:	jb     0x41dba8
  41db9c:	stc    
  41db9d:	cmp    DWORD PTR [ecx+0x17645630],0xe1a5a3a
  41dba7:	sbb    DWORD PTR [ebx],0x7979fa80
  41dbad:	xor    bl,BYTE PTR [ecx+0x284236ec]
  41dbb3:	jecxz  0x41db7f
  41dbb5:	ins    BYTE PTR es:[edi],dx
  41dbb6:	rcr    DWORD PTR [ebp-0x80],1
  41dbb9:	pop    ebp
  41dbba:	push   ecx
  41dbbb:	add    al,0xad
  41dbbd:	mov    ch,0x4f
  41dbbf:	cdq    
  41dbc0:	jno    0x41dbd7
  41dbc2:	sbb    ah,BYTE PTR [eax+0x4]
  41dbc5:	fistp  QWORD PTR [edi]
  41dbc7:	and    ebx,DWORD PTR [edx-0x78]
  41dbca:	clc    
  41dbcb:	mov    ebx,0x7bcacb1c
  41dbd0:	pop    edx
  41dbd1:	push   esp
  41dbd2:	arpl   WORD PTR [ecx],cx
  41dbd4:	fdiv   QWORD PTR [edx]
  41dbd6:	and    eax,0x4c1c4a4a
  41dbdb:	hlt    
  41dbdc:	pop    ebp
  41dbdd:	mov    edi,0xd4875b74
  41dbe2:	mov    eax,ds:0xf2bd4e8d
  41dbe7:	sbb    ch,al
  41dbe9:	pop    edx
  41dbea:	das    
  41dbeb:	xchg   DWORD PTR [edx-0x72],ebx
  41dbee:	sub    eax,0x24d1f5cb
  41dbf3:	test   al,0xf0
  41dbf5:	adc    DWORD PTR [edi+0x74],0xffffffa2
  41dbf9:	stos   BYTE PTR es:[edi],al
  41dbfa:	cld    
  41dbfb:	xchg   esi,eax
  41dbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbfd:	sub    eax,0x6676d70e
  41dc02:	fimul  DWORD PTR [edi]
  41dc04:	push   eax
  41dc05:	aaa    
  41dc06:	sbb    ecx,DWORD PTR [ebx+eiz*4]
  41dc09:	sahf   
  41dc0a:	push   ss
  41dc0b:	add    DWORD PTR [ecx-0x25],0x4c83f581
  41dc12:	dec    esi
  41dc13:	jp     0x41dc6a
  41dc15:	inc    edi
  41dc16:	pop    ss
  41dc17:	push   edx
  41dc18:	add    eax,0xb69b71ff
  41dc1d:	jg     0x41dbf8
  41dc1f:	test   eax,0xe064fe2b
  41dc24:	je     0x41dc4c
  41dc26:	imul   ebx,DWORD PTR [ebx],0xffffff9a
  41dc29:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc2b:	lods   eax,DWORD PTR ds:[esi]
  41dc2c:	sahf   
  41dc2d:	dec    BYTE PTR [ebx+0x3f]
  41dc30:	pop    ebx
  41dc31:	and    al,0x1
  41dc33:	ins    BYTE PTR es:[edi],dx
  41dc34:	sub    DWORD PTR [eax-0x59],esi
  41dc37:	or     dl,ch
  41dc39:	pusha  
  41dc3a:	(bad)  
  41dc3b:	in     eax,0x77
  41dc3d:	xchg   edi,eax
  41dc3e:	push   ds
  41dc3f:	xor    DWORD PTR [edi+0x5],ebx
  41dc42:	jmp    FWORD PTR [ecx-0x32]
  41dc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc46:	inc    esp
  41dc47:	push   ebp
  41dc48:	(bad)  
  41dc49:	mov    ecx,0x557eddd
  41dc4e:	push   es
  41dc4f:	xchg   ebp,eax
  41dc50:	sbb    ah,BYTE PTR ss:[edi]
  41dc53:	pop    eax
  41dc54:	and    DWORD PTR [esi+0xf438443],eax
  41dc5a:	jns    0x41dcc7
  41dc5c:	clc    
  41dc5d:	mov    WORD PTR [edx+0x6f],ds
  41dc60:	loop   0x41dc5b
  41dc62:	test   BYTE PTR [ebp-0x24],bh
  41dc65:	or     BYTE PTR [eax],ch
  41dc67:	dec    edx
  41dc68:	push   0x95b52701
  41dc6d:	lock or eax,0xa52f3fb9
  41dc73:	dec    ebx
  41dc74:	mov    ds:0x5e12afe,eax
  41dc79:	xlat   BYTE PTR ds:[ebx]
  41dc7a:	or     eax,0x60541e25
  41dc7f:	addr16 (bad) 
  41dc81:	shl    bh,0x2b
  41dc84:	pop    ebx
  41dc85:	jge    0x41dc7e
  41dc87:	jecxz  0x41dc46
  41dc89:	stos   BYTE PTR es:[edi],al
  41dc8a:	gs sbb al,0x2a
  41dc8d:	push   cs
  41dc8e:	mov    eax,ds:0x153028ec
  41dc93:	xor    BYTE PTR [esi-0x43a77dbb],0xfb
  41dc9a:	sbb    edx,DWORD PTR cs:[eax]
  41dc9d:	mov    al,ds:0x539176a8
  41dca2:	push   es
  41dca3:	mov    ds:0xbcd0693e,al
  41dca8:	(bad)  
  41dcaa:	js     0x41dc88
  41dcac:	push   ds
  41dcad:	push   eax
  41dcae:	test   al,0x7
  41dcb0:	das    
  41dcb1:	xor    BYTE PTR [ecx-0x19],dh
  41dcb4:	in     al,0xad
  41dcb6:	jae    0x41dca4
  41dcb8:	sahf   
  41dcb9:	adc    al,BYTE PTR [edx-0x44]
  41dcbc:	fimul  WORD PTR [eax+ebx*1+0x6f8075a4]
  41dcc3:	scas   al,BYTE PTR es:[edi]
  41dcc4:	mov    ds:0xd17730ce,al
  41dcc9:	mov    bl,0xa4
  41dccb:	leave  
  41dccc:	jne    0x41dd17
  41dcce:	xchg   edx,eax
  41dccf:	inc    ebp
  41dcd0:	(bad)  
  41dcd1:	imul   eax,DWORD PTR [edx+0x741f7697],0xa5ba3764
  41dcdb:	in     eax,0xc2
  41dcdd:	vaddsd xmm2,xmm0,QWORD PTR [edi+0xcf2417]
  41dce5:	mov    al,ds:0xd75eed7d
  41dcea:	ror    BYTE PTR [ebx-0x1a],1
  41dced:	xlat   BYTE PTR ds:[ebx]
  41dcee:	aas    
  41dcef:	retf   
  41dcf0:	cmp    ah,al
  41dcf2:	lea    edi,[edx+eiz*4+0x73]
  41dcf6:	shr    DWORD PTR [eax],0x98
  41dcf9:	aas    
  41dcfa:	mov    ds:0x765aea17,eax
  41dcff:	hlt    
  41dd00:	sar    esi,cl
  41dd02:	xchg   ecx,eax
  41dd03:	shl    dl,1
  41dd05:	mov    bh,0x1b
  41dd07:	or     BYTE PTR [ebp+0x5a],bl
  41dd0a:	shl    DWORD PTR [ebx+0x22082c85],cl
  41dd10:	aaa    
  41dd11:	dec    esi
  41dd12:	rcl    BYTE PTR [ebx+0x1e],0xd2
  41dd16:	call   0xc4124e9d
  41dd1b:	xor    ecx,DWORD PTR [eax]
  41dd1d:	ins    DWORD PTR es:[edi],dx
  41dd1e:	or     al,dh
  41dd20:	and    BYTE PTR [ebx-0x363287a2],ch
  41dd26:	out    0xe0,eax
  41dd28:	pusha  
  41dd29:	out    dx,al
  41dd2a:	or     bl,BYTE PTR [ebx+0x31c3448d]
  41dd30:	loopne 0x41dda0
  41dd32:	std    
  41dd33:	outs   dx,BYTE PTR ds:[esi]
  41dd34:	jg     0x41dd59
  41dd36:	mov    ds:0xbfbc6ffb,al
  41dd3b:	mov    ebx,0x14257c2a
  41dd40:	mov    al,bh
  41dd42:	add    ah,BYTE PTR [edx]
  41dd44:	sbb    eax,0x60dc7121
  41dd49:	arpl   WORD PTR [edx],si
  41dd4b:	mov    ebx,0x8ad82f86
  41dd50:	push   edi
  41dd51:	jmp    0x4cf1e51d
  41dd56:	es push eax
  41dd58:	pop    ecx
  41dd59:	mov    eax,ds:0x4dc986dd
  41dd5e:	mov    ah,0x95
  41dd60:	in     al,0x15
  41dd62:	cmp    eax,DWORD PTR [edx-0x53822285]
  41dd68:	lods   al,BYTE PTR ds:[esi]
  41dd69:	cli    
  41dd6a:	sub    al,dh
  41dd6c:	or     eax,0x56362c20
  41dd71:	pop    esi
  41dd72:	mov    DWORD PTR [ecx-0x276967e1],edx
  41dd78:	and    al,0x4d
  41dd7a:	xchg   esp,eax
  41dd7b:	pop    edx
  41dd7c:	inc    eax
  41dd7d:	jne    0x41dd00
  41dd7f:	dec    esi
  41dd80:	adc    al,0x30
  41dd82:	add    al,0x8c
  41dd84:	push   0x5b
  41dd86:	xor    BYTE PTR [ebp+0x69],ch
  41dd89:	inc    ebx
  41dd8a:	or     DWORD PTR [ebx],ebx
  41dd8c:	jae    0x41dd84
  41dd8e:	lods   al,BYTE PTR ds:[esi]
  41dd8f:	not    DWORD PTR [edx-0x34ac355a]
  41dd95:	aas    
  41dd96:	pop    ds
  41dd97:	mov    ecx,ebp
  41dd99:	int3   
  41dd9a:	rcr    DWORD PTR [eax+0x11],0x59
  41dd9e:	push   edi
  41dd9f:	pop    ds
  41dda0:	push   es
  41dda1:	dec    esp
  41dda2:	dec    ebx
  41dda3:	popf   
  41dda4:	je     0x41dd37
  41dda6:	enter  0x4573,0x59
  41ddaa:	(bad)  
  41ddab:	outs   dx,BYTE PTR ds:[esi]
  41ddac:	fdivr  st(4),st
  41ddae:	push   esp
  41ddaf:	mov    eax,ds:0x463f7d87
  41ddb4:	mov    ds:0xcf14c8f9,eax
  41ddb9:	scas   eax,DWORD PTR es:[edi]
  41ddba:	into   
  41ddbb:	mov    ds:0xb1872b04,al
  41ddc0:	cld    
  41ddc1:	lods   eax,DWORD PTR ds:[esi]
  41ddc2:	icebp  
  41ddc3:	sbb    al,0xa8
  41ddc5:	dec    esi
  41ddc6:	add    al,0x27
  41ddc8:	adc    bl,BYTE PTR ds:0x826672e4
  41ddce:	arpl   WORD PTR [edx],dx
  41ddd0:	(bad)  
  41ddd1:	addr16 and al,0x63
  41ddd4:	sti    
  41ddd5:	(bad)  
  41ddd7:	xor    ebx,DWORD PTR [ecx]
  41ddd9:	lods   eax,DWORD PTR ds:[esi]
  41ddda:	xor    edi,DWORD PTR [ebp-0x1d7eadde]
  41dde0:	pop    ecx
  41dde1:	push   ecx
  41dde2:	mov    dl,0xe3
  41dde4:	in     al,0xd2
  41dde6:	dec    eax
  41dde7:	push   es
  41dde8:	or     al,0x53
  41ddea:	adc    eax,0xb04c1d9c
  41ddef:	add    BYTE PTR ds:0xb612f742,dh
  41ddf5:	not    DWORD PTR [edx-0x4b]
  41ddf8:	nop
  41ddf9:	mov    cl,0x61
  41ddfb:	popf   
  41ddfc:	es inc esp
  41ddfe:	dec    ebx
  41ddff:	jae    0x41de4d
  41de01:	popa   
  41de02:	(bad)  
  41de03:	(bad)  
  41de04:	cmc    
  41de05:	ss dec esi
  41de07:	test   esp,ebp
  41de09:	adc    DWORD PTR [ebp-0x61],0x82cc439e
  41de10:	retf   
  41de11:	pop    ebx
  41de12:	mov    ecx,0xfd140013
  41de17:	adc    DWORD PTR [ebp-0x3],esi
  41de1a:	lods   eax,DWORD PTR ds:[esi]
  41de1b:	in     al,dx
  41de1c:	repnz fucomp st(5)
  41de1f:	cdq    
  41de20:	(bad)  
  41de21:	ins    DWORD PTR es:[edi],dx
  41de22:	xchg   esi,eax
  41de23:	ror    bh,1
  41de25:	imul   eax,DWORD PTR ds:0xed75cce8,0x3d268837
  41de2f:	loopne 0x41de58
  41de31:	mov    al,0xe5
  41de33:	retf   0x69cf
  41de36:	call   0xa630eb65
  41de3b:	dec    esi
  41de3c:	ror    BYTE PTR [edi-0x710036b7],cl
  41de42:	setle  BYTE PTR [esi]
  41de45:	pop    eax
  41de46:	jo     0x41de2e
  41de48:	loopne 0x41de35
  41de4a:	jecxz  0x41debd
  41de4c:	not    BYTE PTR [ebx+0x6d]
  41de4f:	into   
  41de50:	mov    ds:0x704ebb24,al
  41de55:	popa   
  41de56:	(bad)  
  41de58:	add    al,0x53
  41de5a:	test   eax,0x764e27eb
  41de5f:	adc    edx,DWORD PTR [esi+0x6ee2833f]
  41de65:	push   es
  41de66:	pop    edx
  41de67:	push   cs
  41de68:	(bad)  
  41de69:	in     eax,dx
  41de6a:	mov    edi,0xe17fce44
  41de6f:	sahf   
  41de70:	daa    
  41de71:	repnz pop esi
  41de73:	rol    BYTE PTR [edi],0x5b
  41de76:	fwait
  41de77:	inc    edx
  41de78:	out    dx,al
  41de79:	shl    BYTE PTR [ecx+0xf0f4217],1
  41de7f:	jmp    0xa149:0x18d70fc9
  41de86:	or     DWORD PTR [ebx+0x4a],ebp
  41de89:	out    0x20,eax
  41de8b:	jae    0x41dee6
  41de8d:	fistp  DWORD PTR [esi+0x64]
  41de90:	lods   al,BYTE PTR ds:[esi]
  41de91:	cdq    
  41de92:	nop
  41de93:	inc    ebx
  41de94:	ret    0xde01
  41de97:	fcmovbe st,st(5)
  41de99:	sub    eax,0x5e8fd29a
  41de9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de9f:	sahf   
  41dea0:	add    DWORD PTR [edi],esi
  41dea2:	push   eax
  41dea3:	cmp    dl,ah
  41dea5:	sbb    al,0x6a
  41dea7:	arpl   WORD PTR [esi+esi*4-0x7e770d56],bp
  41deae:	inc    ebx
  41deaf:	imul   esi,DWORD PTR [edi+0x3f236ab5],0xc03389e9
  41deb9:	out    dx,eax
  41deba:	hlt    
  41debb:	dec    esp
  41debc:	sbb    DWORD PTR [edx],ecx
  41debe:	xor    eax,0xd630ab28
  41dec3:	inc    edx
  41dec4:	mov    eax,ds:0xeff2031e
  41dec9:	add    eax,0x8c05e6c9
  41dece:	mov    DWORD PTR [edx+0x5],esi
  41ded1:	in     al,0xcb
  41ded3:	cli    
  41ded4:	inc    ebp
  41ded5:	add    dl,BYTE PTR [esi+0x49]
  41ded8:	loopne 0x41df57
  41deda:	jmp    0x41deb0
  41dedc:	jecxz  0x41deb0
  41dede:	test   eax,0x369baa53
  41dee3:	jae    0x41df56
  41dee5:	pusha  
  41dee6:	cmp    eax,0x5c72f968
  41deeb:	scas   al,BYTE PTR es:[edi]
  41deec:	cmp    DWORD PTR [eax+0x4f4cb21b],esp
  41def2:	adc    al,0x3
  41def4:	cmp    ebp,DWORD PTR [ecx]
  41def6:	mov    al,0xb7
  41def8:	(bad)  
  41def9:	jge    0x41dea0
  41defb:	or     eax,ecx
  41defd:	push   edx
  41defe:	pop    esi
  41deff:	test   BYTE PTR [ecx+0x18b46184],ch
  41df05:	aad    0x1e
  41df07:	xor    al,0x4b
  41df09:	jmp    0x41deef
  41df0b:	xrelease xchg DWORD PTR [ebx],esp
  41df0e:	aad    0x96
  41df10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df11:	mov    ecx,esp
  41df13:	stos   BYTE PTR es:[edi],al
  41df14:	mov    BYTE PTR [eax+esi*4-0x6],ah
  41df18:	call   0xc7d7:0xac1fa84b
  41df1f:	in     al,dx
  41df20:	adc    dh,BYTE PTR [edx-0x6]
  41df23:	loope  0x41df3a
  41df25:	(bad)  
  41df27:	jmp    0xeac3:0x860face6
  41df2e:	iret   
  41df2f:	and    esi,eax
  41df31:	xchg   ebp,eax
  41df32:	sbb    al,0x1e
  41df34:	shl    DWORD PTR [ebx+0x68210ae0],0xdf
  41df3b:	fsub   QWORD PTR [esp+eax*8+0x5bcdddd2]
  41df42:	jmp    0x41def3
  41df44:	cmc    
  41df45:	or     DWORD PTR [ebp-0x77ba56aa],esi
  41df4b:	mov    edi,0x808004bd
  41df50:	pop    ds
  41df51:	push   ebx
  41df52:	push   ecx
  41df53:	mov    ch,BYTE PTR [ebx+edx*8+0x8]
  41df57:	fld    DWORD PTR [edx+0x1d80cbec]
  41df5d:	ficom  DWORD PTR [edi-0xf67abb8]
  41df63:	add    bl,BYTE PTR [eax]
  41df65:	jmp    0x237422a2
  41df6a:	retf   
  41df6b:	push   edi
  41df6c:	gs xchg ebp,eax
  41df6e:	stos   BYTE PTR es:[edi],al
  41df6f:	jecxz  0x41dfb7
  41df71:	enter  0xae25,0xbb
  41df75:	adc    esi,DWORD PTR [ebx-0x6f02680c]
  41df7b:	fwait
  41df7c:	and    DWORD PTR [ebp-0x2814c687],edi
  41df82:	cs ret 0x6ab2
  41df86:	dec    ebp
  41df87:	push   ebx
  41df88:	jb     0x41df9c
  41df8a:	adc    dh,BYTE PTR [esi-0x5e]
  41df8d:	ss mov eax,0x5540dcb4
  41df93:	xlat   BYTE PTR ds:[ebx]
  41df94:	fucomp st(1)
  41df96:	xor    edi,DWORD PTR [edi+eiz*1+0x7fc8c5c7]
  41df9d:	or     BYTE PTR [esi],dl
  41df9f:	adc    al,0x37
  41dfa1:	inc    esp
  41dfa2:	test   eax,0x6a037e68
  41dfa7:	push   ebp
  41dfa8:	ins    DWORD PTR es:[edi],dx
  41dfa9:	jno    0x41df5f
  41dfab:	add    esi,DWORD PTR ds:0xc87a8785
  41dfb1:	stos   BYTE PTR es:[edi],al
  41dfb2:	mov    al,0xbd
  41dfb4:	fucomip st,st(7)
  41dfb6:	adc    al,0xc5
  41dfb8:	mov    edi,0x5e51e6f8
  41dfbd:	leave  
  41dfbe:	aas    
  41dfbf:	mov    ch,0xdb
  41dfc1:	sub    bl,BYTE PTR [eax+0x1b4b6b89]
  41dfc7:	mov    DWORD PTR [ebx+0x32],ebx
  41dfca:	sbb    edx,ebp
  41dfcc:	rcl    BYTE PTR [edi],cl
  41dfce:	xor    BYTE PTR [ebp+0x8c3f761],bh
  41dfd4:	outs   dx,BYTE PTR ds:[esi]
  41dfd5:	cdq    
  41dfd6:	lods   eax,DWORD PTR ds:[esi]
  41dfd7:	jp     0x41dfeb
  41dfd9:	push   es
  41dfda:	jno    0x41e04e
  41dfdc:	sbb    DWORD PTR [eax-0x31],esi
  41dfdf:	cld    
  41dfe0:	sub    eax,0x3a011b55
  41dfe5:	rcr    al,0xc6
  41dfe8:	inc    edx
  41dfe9:	popa   
  41dfea:	mov    dl,0xa6
  41dfec:	jns    0x41e009
  41dfee:	setne  bh
  41dff1:	fdiv   QWORD PTR [eax]
  41dff3:	ret    
  41dff4:	add    al,0x5c
  41dff6:	pop    ebx
  41dff7:	sub    eax,0x8680b534
  41dffc:	cli    
  41dffd:	mov    eax,ds:0x77c8bc8a
  41e002:	jnp    0x41dfb0
  41e004:	les    edx,FWORD PTR [ebx]
  41e006:	mov    ebx,DWORD PTR [ebx+0x4]
  41e009:	popa   
  41e00a:	add    eax,0x4a7f5b7f
  41e00f:	pop    es
  41e010:	ret    
  41e011:	ret    
  41e012:	lods   al,BYTE PTR ds:[esi]
  41e013:	push   ecx
  41e014:	rcr    DWORD PTR [edx*1-0x3435ee1a],1
  41e01b:	(bad)
  41e01e:	jp     0x41e099
  41e020:	adc    BYTE PTR [ebx-0x3b],cl
  41e023:	mov    cl,0x53
  41e025:	cmp    ah,ah
  41e027:	inc    eax
  41e028:	(bad)  
  41e029:	sahf   
  41e02a:	out    0xb8,al
  41e02c:	xor    eax,0x950e925f
  41e031:	pusha  
  41e032:	mov    WORD PTR [ebp+edi*2+0x3ebacba6],ss
  41e039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e03a:	aam    0x67
  41e03c:	fisttp WORD PTR [eax-0xc]
  41e03f:	aam    0x26
  41e041:	mov    bh,0x9d
  41e043:	mov    edx,0xf34420cc
  41e048:	ror    DWORD PTR [edx+0x79],1
  41e04b:	or     DWORD PTR [esi+edi*1+0x41ac6129],0x24481e30
  41e056:	(bad)  
  41e057:	in     al,0x50
  41e059:	jnp    0x41e0a0
  41e05b:	inc    edi
  41e05c:	retf   0xf3eb
  41e05f:	push   edx
  41e060:	outs   dx,DWORD PTR ds:[esi]
  41e061:	cmp    eax,0xa9845373
  41e066:	ror    BYTE PTR [ebp+eax*8-0x1017d5f8],1
  41e06d:	rol    dl,1
  41e06f:	cmp    eax,0x22ff412d
  41e074:	dec    ebx
  41e075:	mov    cl,0xea
  41e077:	sbb    DWORD PTR [ebp+0x6c],esp
  41e07a:	pop    edx
  41e07b:	std    
  41e07c:	stos   DWORD PTR es:[edi],eax
  41e07d:	loop   0x41e044
  41e07f:	jns    0x41e01d
  41e081:	fsub   st,st(3)
  41e083:	jp     0x41e08e
  41e085:	xchg   esp,eax
  41e086:	test   DWORD PTR [edx],0xfeba50c4
  41e08c:	mov    WORD PTR [ecx-0x28b1a9e7],es
  41e092:	mov    esp,DWORD PTR [edx+0x3b4c8399]
  41e098:	(bad)  
  41e099:	or     ebx,DWORD PTR ds:0x16666a23
  41e09f:	jecxz  0x41e074
  41e0a1:	sbb    BYTE PTR [ebx],al
  41e0a3:	dec    eax
  41e0a4:	xor    dl,cl
  41e0a6:	add    al,0x46
  41e0a8:	imul   edx,ebx,0xffffffc2
  41e0ab:	pop    ss
  41e0ac:	push   cs
  41e0ad:	add    ah,ah
  41e0af:	jb     0x41e054
  41e0b1:	or     ch,BYTE PTR [ebx]
  41e0b3:	(bad)  
  41e0b4:	mov    eax,ds:0x7bbc8cf9
  41e0b9:	out    dx,al
  41e0ba:	jmp    0x809da60c
  41e0bf:	fdivr  QWORD PTR [edx+ebp*4]
  41e0c2:	pushf  
  41e0c3:	dec    ebx
  41e0c4:	arpl   WORD PTR ds:0xd42b3f82,bp
  41e0ca:	pushf  
  41e0cb:	cmp    BYTE PTR ds:0x110bcd9a,cl
  41e0d1:	xchg   esi,eax
  41e0d2:	xlat   BYTE PTR ds:[ebx]
  41e0d3:	inc    eax
  41e0d4:	repz jb 0x41e101
  41e0d7:	aaa    
  41e0d8:	xchg   edx,eax
  41e0d9:	or     al,0x85
  41e0db:	icebp  
  41e0dc:	sub    eax,0x1b364855
  41e0e1:	add    al,BYTE PTR [edi+0x2a98fc1c]
  41e0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e8:	jmp    0x7232:0x1414a837
  41e0ef:	sub    eax,0x311c22e1
  41e0f4:	out    dx,eax
  41e0f5:	lods   eax,DWORD PTR ds:[esi]
  41e0f6:	mov    edi,0xbc35e72d
  41e0fb:	xor    al,0x12
  41e0fd:	loopne 0x41e0e0
  41e0ff:	test   BYTE PTR [ecx],ah
  41e101:	popf   
  41e102:	outs   dx,BYTE PTR ds:[esi]
  41e103:	cmp    al,0x91
  41e105:	mov    ebx,0x8ce02233
  41e10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e10b:	adc    DWORD PTR [edi],eax
  41e10d:	xor    al,0x2e
  41e10f:	dec    ecx
  41e110:	cmp    bl,ah
  41e112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e113:	inc    ebx
  41e114:	jne    0x41e15d
  41e116:	pop    es
  41e117:	fwait
  41e118:	adc    DWORD PTR [eax-0x305484f9],eax
  41e11e:	sahf   
  41e11f:	pop    esi
  41e120:	mov    ecx,DWORD PTR [ebx+0x23]
  41e123:	mov    ebp,0x9a588d7
  41e128:	ret    
  41e129:	faddp  st(1),st
  41e12b:	xor    DWORD PTR [ebx],edx
  41e12d:	sbb    eax,0xd01ec83c
  41e132:	in     eax,0x6e
  41e134:	imul   esp,ebp,0x6d
  41e137:	(bad)  
  41e138:	pop    eax
  41e139:	inc    eax
  41e13a:	cmp    al,0x15
  41e13c:	xor    ebx,DWORD PTR [esp+esi*2+0x1f54803]
  41e143:	into   
  41e144:	pop    edi
  41e145:	xor    DWORD PTR [ecx],0x77
  41e148:	inc    eax
  41e149:	out    0x55,al
  41e14b:	inc    ecx
  41e14c:	mov    ecx,0x7c62b7be
  41e151:	mov    eax,ds:0xe0b49c9c
  41e156:	popf   
  41e157:	jmp    0xdedf3918
  41e15c:	mov    al,0xfa
  41e15e:	call   0x701f:0x6219cc1c
  41e165:	bound  edx,QWORD PTR [edi]
  41e167:	pop    ebx
  41e168:	jbe    0x41e1a0
  41e16a:	jbe    0x41e1b0
  41e16c:	loope  0x41e112
  41e16e:	inc    ecx
  41e16f:	mov    ecx,0xe1252411
  41e174:	pop    esi
  41e175:	inc    edx
  41e176:	push   edx
  41e177:	fwait
  41e178:	jbe    0x41e1f5
  41e17a:	sahf   
  41e17b:	cmp    bh,bl
  41e17d:	xchg   edx,eax
  41e17e:	retf   
  41e17f:	mov    ebp,edx
  41e181:	mov    ah,0xfa
  41e183:	enter  0x70ac,0xea
  41e187:	pop    ecx
  41e188:	mov    eax,0xcde4c01b
  41e18d:	dec    ebp
  41e18e:	cdq    
  41e18f:	mov    bl,0xde
  41e191:	addr16 das 
  41e193:	jb     0x41e137
  41e195:	jmp    0x92a0a801
  41e19a:	mov    ch,BYTE PTR [edx+0x67]
  41e19d:	outs   dx,BYTE PTR ds:[esi]
  41e19e:	cmp    al,0x6a
  41e1a0:	and    DWORD PTR [ebx+eax*2-0x1f],edx
  41e1a4:	cmp    edx,eax
  41e1a6:	enter  0x1a94,0xde
  41e1aa:	ret    
  41e1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ac:	jno    0x41e132
  41e1ae:	nop
  41e1af:	sub    edx,esp
  41e1b1:	push   eax
  41e1b2:	dec    edi
  41e1b3:	test   eax,0x4a7afdd8
  41e1b8:	cld    
  41e1b9:	ret    0xa9ff
  41e1bc:	pop    esi
  41e1bd:	and    eax,0x62547470
  41e1c2:	mov    ds:0xa8c531db,eax
  41e1c7:	leave  
  41e1c8:	jno    0x41e1a7
  41e1ca:	imul   ebx,ecx,0x7a37637c
  41e1d0:	(bad)  
  41e1d1:	fnsave [ebp+edx*1+0x1a]
  41e1d5:	xor    eax,0x2f55c0e0
  41e1da:	or     eax,0x904a0422
  41e1df:	or     DWORD PTR [esi+edx*2-0x58],0xaf5fff5d
  41e1e7:	xchg   ebx,eax
  41e1e8:	sahf   
  41e1e9:	stos   BYTE PTR es:[edi],al
  41e1ea:	xchg   esp,eax
  41e1eb:	pop    es
  41e1ec:	push   ebx
  41e1ee:	mov    al,0x9b
  41e1f0:	push   ecx
  41e1f1:	add    edx,DWORD PTR [ebx+0x62]
  41e1f4:	xlat   BYTE PTR ds:[ebx]
  41e1f5:	fs mov edi,0x25947076
  41e1fb:	mov    al,0x6d
  41e1fd:	inc    esi
  41e1fe:	pop    es
  41e1ff:	push   ebx
  41e200:	iret   
  41e201:	pop    ebp
  41e202:	pop    eax
  41e203:	lock pop ebx
  41e205:	stos   DWORD PTR es:[edi],eax
  41e206:	sub    ebx,DWORD PTR [esi]
  41e208:	ss cwde 
  41e20a:	mov    edx,0xbfa40d7e
  41e20f:	call   0xda0edf50
  41e214:	push   cs
  41e215:	jae    0x41e1e9
  41e217:	add    ch,BYTE PTR [ecx-0x12287e8]
  41e21d:	sbb    edi,DWORD PTR [ecx]
  41e21f:	jmp    0x34245983
  41e224:	mov    ecx,0x9e5ed655
  41e229:	xchg   edi,eax
  41e22a:	leave  
  41e22b:	jbe    0x41e217
  41e22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22e:	loope  0x41e25c
  41e230:	in     eax,dx
  41e231:	sbb    edx,esi
  41e233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e234:	in     eax,0x17
  41e236:	ins    DWORD PTR es:[edi],dx
  41e237:	dec    eax
  41e238:	xor    al,BYTE PTR [ecx+0x1f]
  41e23b:	rol    BYTE PTR [esi],0x7f
  41e23e:	in     eax,dx
  41e23f:	xchg   esp,eax
  41e240:	inc    edi
  41e241:	cli    
  41e242:	adc    edx,ebp
  41e244:	mov    bh,0x9a
  41e246:	hlt    
  41e247:	mov    DWORD PTR [ebp+0x30],esp
  41e24a:	or     esp,esi
  41e24c:	xchg   dh,bh
  41e24e:	or     eax,0xe2e9679c
  41e253:	in     eax,0xb3
  41e255:	mov    bh,BYTE PTR [esi+0x2e]
  41e258:	xlat   BYTE PTR ds:[ebx]
  41e259:	sub    eax,esp
  41e25b:	ja     0x41e2c8
  41e25d:	test   DWORD PTR [eax],eax
  41e25f:	mov    ebp,0x85b4b6df
  41e264:	add    DWORD PTR [esi],0xf6e22ded
  41e26a:	push   ebp
  41e26b:	(bad)  [esi]
  41e26d:	jae    0x41e1ff
  41e26f:	rol    DWORD PTR [edi],cl
  41e271:	test   DWORD PTR [ecx+0x6e],ecx
  41e274:	test   esi,ebp
  41e276:	rcl    BYTE PTR [edi+edi*4+0x5c],1
  41e27a:	into   
  41e27b:	xchg   ch,ah
  41e27d:	pop    ebx
  41e27e:	jg     0x41e2fd
  41e280:	into   
  41e281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e282:	out    dx,al
  41e283:	cmp    DWORD PTR [ebx+0x3a],esi
  41e286:	clc    
  41e287:	(bad)  
  41e288:	leave  
  41e289:	mov    edi,DWORD PTR [ebx+0x679f760f]
  41e28f:	mov    dh,0xa3
  41e291:	ss inc eax
  41e293:	adc    al,0xbc
  41e295:	imul   ebx,DWORD PTR [eax-0x4b],0xac62b3ed
  41e29c:	loope  0x41e2df
  41e29e:	mov    al,ds:0x4e13430f
  41e2a3:	push   ebx
  41e2a4:	pop    es
  41e2a5:	push   edi
  41e2a6:	call   0x5eb7:0xf260e2d9
  41e2ad:	xor    BYTE PTR [edi+0x4fb06211],ch
  41e2b3:	or     esp,ecx
  41e2b5:	and    ah,BYTE PTR [esp+esi*4+0x21]
  41e2b9:	and    eax,0xca6a5439
  41e2be:	popf   
  41e2bf:	pop    esi
  41e2c0:	xchg   BYTE PTR [ebx-0x51217bc2],bh
  41e2c6:	cmp    eax,0x58c48973
  41e2cb:	xor    DWORD PTR [eax],ebx
  41e2cd:	fldcw  WORD PTR [edi+0x33]
  41e2d0:	in     eax,0x6a
  41e2d2:	test   DWORD PTR [ebx],edx
  41e2d4:	mov    ds:0xef32e34a,eax
  41e2d9:	xchg   ebx,eax
  41e2da:	mov    ebx,0xf2c46953
  41e2df:	sbb    BYTE PTR [ebx+0x42],al
  41e2e2:	xor    ecx,DWORD PTR [edi]
  41e2e4:	mov    dh,0x52
  41e2e6:	iret   
  41e2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e8:	cwde   
  41e2e9:	jl     0x41e2fe
  41e2eb:	pop    eax
  41e2ec:	mov    eax,0x342fa53f
  41e2f1:	sbb    BYTE PTR [ecx],dl
  41e2f3:	test   eax,0x458d3d5a
  41e2f8:	cmp    edi,DWORD PTR [edx]
  41e2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2fb:	call   0xaf0a:0x392b166d
  41e302:	fcomp  QWORD PTR [edi+0x2061d4ad]
  41e308:	push   eax
  41e309:	stos   BYTE PTR es:[edi],al
  41e30a:	sub    eax,0x4c95aaf3
  41e30f:	push   eax
  41e310:	xor    esp,DWORD PTR ds:0x7b97f6d5
  41e316:	jge    0x41e33c
  41e318:	pop    es
  41e319:	repz xchg edx,eax
  41e31b:	or     edi,eax
  41e31d:	bound  esi,QWORD PTR [eax+0x30]
  41e320:	sub    BYTE PTR [edx],dh
  41e322:	mov    WORD PTR [ecx],ds
  41e324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e325:	mov    es,WORD PTR [ebp+0x702bcf3b]
  41e32b:	cmp    DWORD PTR ds:0xf742075,0x7647ef21
  41e335:	mov    edi,0xd88dfddb
  41e33a:	std    
  41e33b:	out    dx,eax
  41e33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e33d:	jge    0x41e3a4
  41e33f:	jae    0x41e2f7
  41e341:	sbb    edi,esi
  41e343:	cmp    ebx,esi
  41e345:	mov    al,BYTE PTR [edx]
  41e347:	sbb    edi,ecx
  41e349:	mov    edx,0xf737878e
  41e34e:	int    0xc8
  41e350:	push   ecx
  41e351:	sbb    eax,0x66d754
  41e356:	xor    eax,0x6d8e94ee
  41e35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e35c:	repz fadd DWORD PTR [edx+esi*2+0x9]
  41e361:	or     eax,0x4947eef1
  41e366:	inc    ebp
  41e367:	out    dx,al
  41e368:	nop
  41e369:	out    0xf1,al
  41e36b:	cmp    al,0x60
  41e36d:	dec    edi
  41e36e:	inc    edi
  41e36f:	cmc    
  41e370:	mov    ch,0xdf
  41e372:	add    eax,0x4bef795b
  41e377:	xor    al,0x23
  41e379:	lods   al,BYTE PTR ds:[esi]
  41e37a:	mov    al,ds:0x206f9b6b
  41e37f:	lea    ebx,[esi]
  41e381:	or     BYTE PTR [edx+0xbbe198c],ah
  41e387:	xchg   ebx,eax
  41e388:	or     DWORD PTR [ecx],ebx
  41e38a:	idiv   BYTE PTR [esi+0x3cf21ee1]
  41e390:	cmp    esp,DWORD PTR [esi]
  41e392:	sar    BYTE PTR [eax],cl
  41e394:	pop    ebp
  41e395:	inc    ebp
  41e396:	inc    eax
  41e397:	dec    esi
  41e398:	xor    al,0x8a
  41e39a:	lea    edx,[ebx]
  41e39c:	loope  0x41e340
  41e39e:	jg     0x41e408
  41e3a0:	and    DWORD PTR [edx-0x25],0x29
  41e3a4:	aam    0x5b
  41e3a6:	inc    edx
  41e3a7:	inc    ecx
  41e3a8:	loope  0x41e3e8
  41e3aa:	int    0x7e
  41e3ac:	pop    esp
  41e3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3ae:	fisttp QWORD PTR [ebp+0x3d506bfe]
  41e3b4:	in     al,dx
  41e3b5:	cli    
  41e3b6:	test   eax,0x96c278fb
  41e3bb:	dec    eax
  41e3bc:	jecxz  0x41e398
  41e3be:	jns    0x41e3b7
  41e3c0:	jb     0x41e37b
  41e3c2:	dec    ecx
  41e3c3:	inc    ecx
  41e3c4:	and    BYTE PTR [edx+0xb],ch
  41e3c7:	cmp    bh,BYTE PTR [edx-0x55]
  41e3ca:	pushf  
  41e3cb:	popa   
  41e3cc:	scas   eax,DWORD PTR es:[edi]
  41e3cd:	iret   
  41e3ce:	jo     0x41e3b7
  41e3d0:	lea    ebp,[esi-0x252387da]
  41e3d6:	pop    esp
  41e3d7:	inc    edx
  41e3d8:	fsub   QWORD PTR [edx]
  41e3da:	popa   
  41e3db:	push   esp
  41e3dc:	pop    ecx
  41e3dd:	dec    edi
  41e3de:	pop    ss
  41e3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e0:	xchg   ebx,eax
  41e3e1:	or     esp,DWORD PTR [edx]
  41e3e3:	or     BYTE PTR [ecx],ch
  41e3e5:	jne    0x41e3da
  41e3e7:	imul   edx,ebp,0xbdd1b030
  41e3ed:	arpl   cx,si
  41e3ef:	mov    ebp,0x68e4b807
  41e3f4:	int    0x51
  41e3f6:	outs   dx,BYTE PTR ds:[esi]
  41e3f7:	ret    0x695f
  41e3fa:	(bad)  
  41e3fc:	scas   eax,DWORD PTR es:[edi]
  41e3fd:	mov    ch,0xa
  41e3ff:	stos   DWORD PTR es:[edi],eax
  41e400:	clc    
  41e401:	inc    ecx
  41e402:	xchg   esi,eax
  41e403:	pop    es
  41e404:	std    
  41e405:	jo     0x41e38f
  41e407:	and    DWORD PTR [ebx],esp
  41e409:	mov    bl,BYTE PTR [edx+0x612aa2fc]
  41e40f:	adc    DWORD PTR [edx+0x51],ebp
  41e412:	and    eax,0x8d4d89df
  41e417:	(bad)  
  41e418:	xor    ecx,esp
  41e41a:	inc    ebp
  41e41b:	popa   
  41e41c:	icebp  
  41e41d:	pop    ecx
  41e41e:	icebp  
  41e41f:	outs   dx,DWORD PTR ds:[esi]
  41e420:	test   BYTE PTR [esi-0x1dab8b6a],0x4e
  41e427:	out    dx,al
  41e428:	fwait
  41e429:	and    BYTE PTR [esi],0x58
  41e42c:	repnz cmp al,0x86
  41e42f:	sub    eax,0xf019461b
  41e434:	popf   
  41e435:	jmp    0x41e44d
  41e437:	mov    ds:0x804ddfec,al
  41e43c:	outs   dx,BYTE PTR ds:[esi]
  41e43d:	pop    ss
  41e43e:	in     al,dx
  41e43f:	xchg   ebp,eax
  41e440:	sahf   
  41e441:	add    eax,0x3fce4060
  41e446:	sub    dh,bl
  41e448:	add    al,ah
  41e44a:	mov    BYTE PTR [ebp-0x2],bl
  41e44d:	das    
  41e44e:	frstor [ecx]
  41e450:	inc    eax
  41e451:	jl     0x41e447
  41e453:	imul   ecx,esi,0x4
  41e456:	popa   
  41e457:	(bad)  
  41e458:	adc    eax,0xba6cf7d1
  41e45d:	out    0x7b,eax
  41e45f:	cmp    eax,0xe58ba793
  41e464:	xchg   ebp,eax
  41e465:	fistp  QWORD PTR [esi+0x45]
  41e468:	mov    esi,0x29ea6bb
  41e46d:	adc    esi,DWORD PTR [esi-0x2d]
  41e470:	call   FWORD PTR [esi+0x140cfebe]
  41e476:	lahf   
  41e477:	push   es
  41e478:	mov    ah,0x1f
  41e47a:	shr    esp,0xca
  41e47d:	xor    ebx,eax
  41e47f:	call   0xc37b:0xeb4959bc
  41e486:	lods   al,BYTE PTR ds:[esi]
  41e487:	aaa    
  41e488:	pop    ebp
  41e489:	mov    al,ah
  41e48b:	dec    edx
  41e48c:	jae    0x41e457
  41e48e:	popa   
  41e48f:	scas   al,BYTE PTR es:[edi]
  41e490:	std    
  41e491:	leave  
  41e492:	test   DWORD PTR [ecx+0x4017c34b],0x196e1afb
  41e49c:	push   ss
  41e49d:	jp     0x41e4a2
  41e49f:	push   ds
  41e4a0:	cmp    eax,0xab2ed917
  41e4a5:	pop    esp
  41e4a6:	mov    edi,0x1489edd2
  41e4ab:	jmp    0x7a3e:0x14b686cb
  41e4b2:	loop   0x41e4b5
  41e4b4:	xchg   BYTE PTR [edi+0x1540cc5],dh
  41e4ba:	scas   al,BYTE PTR es:[edi]
  41e4bb:	push   0xffffffaa
  41e4bd:	addr16 xchg ebx,eax
  41e4bf:	dec    edi
  41e4c0:	mov    ch,0xc4
  41e4c2:	call   0xe6c1:0xa5cf171a
  41e4c9:	adc    BYTE PTR [edx+0x5cef35d0],0xf8
  41e4d0:	adc    ebx,ebp
  41e4d2:	fimul  DWORD PTR ds:0x8bef8b81
  41e4d8:	lock mov ds:0xd92e5ab4,al
  41e4de:	icebp  
  41e4df:	pop    ecx
  41e4e0:	stc    
  41e4e1:	push   eax
  41e4e2:	into   
  41e4e3:	inc    BYTE PTR [esp+ebx*8-0x3703b9b4]
  41e4ea:	lea    esp,[ecx-0x1ceb7443]
  41e4f0:	fimul  WORD PTR [ebx+ecx*1]
  41e4f3:	pusha  
  41e4f4:	test   eax,0x170c508c
  41e4f9:	mov    edi,0x69ea26dc
  41e4fe:	sbb    ebx,ebp
  41e500:	js     0x41e4d5
  41e502:	scas   al,BYTE PTR es:[edi]
  41e503:	dec    ebp
  41e504:	out    dx,eax
  41e505:	imul   DWORD PTR [eax]
  41e507:	fdiv   QWORD PTR [edx+0x2d]
  41e50a:	out    dx,al
  41e50b:	xor    dh,BYTE PTR [ebp-0x3c]
  41e50e:	ja     0x41e496
  41e510:	sti    
  41e511:	mov    WORD PTR [ebp-0x19],gs
  41e514:	call   0x5304eee9
  41e519:	mov    dh,0x4f
  41e51b:	mov    al,ds:0x3fd07ea2
  41e520:	mov    al,ds:0x76312d99
  41e525:	push   edx
  41e526:	jecxz  0x41e550
  41e528:	scas   al,BYTE PTR es:[edi]
  41e529:	mov    WORD PTR [ecx],ss
  41e52b:	scas   al,BYTE PTR es:[edi]
  41e52c:	add    ecx,eax
  41e52e:	lock rcr BYTE PTR [ebx],1
  41e531:	xchg   ebp,eax
  41e532:	sub    edi,DWORD PTR [eax]
  41e534:	mov    ah,0x68
  41e536:	cmc    
  41e537:	push   edx
  41e538:	loop   0x41e59e
  41e53a:	jl     0x41e596
  41e53c:	mov    edi,0x8600f254
  41e541:	sbb    edx,DWORD PTR [edx]
  41e543:	sbb    BYTE PTR [edi-0x7d],ch
  41e546:	loop   0x41e4f1
  41e548:	xor    edx,DWORD PTR [edi-0x5d6f3c77]
  41e54e:	inc    edi
  41e54f:	cwde   
  41e550:	test   eax,0x39f0d557
  41e555:	sub    DWORD PTR [edx+0x17],ebx
  41e558:	pop    ss
  41e559:	shr    BYTE PTR [ecx+esi*4],1
  41e55c:	sbb    ch,BYTE PTR [esi-0x622adad2]
  41e562:	(bad)  [eax]
  41e564:	jns    0x41e558
  41e566:	xchg   ebp,eax
  41e567:	mov    BYTE PTR [esi],cl
  41e569:	cmp    al,0x4a
  41e56b:	lods   al,BYTE PTR ds:[esi]
  41e56c:	(bad)  
  41e56d:	sbb    ebx,ecx
  41e56f:	sbb    ebp,DWORD PTR [esi+0x46a7576e]
  41e575:	pop    ebp
  41e576:	jle    0x41e55b
  41e578:	jno    0x41e5a5
  41e57a:	sub    dl,bh
  41e57c:	sub    ah,dl
  41e57e:	and    al,bl
  41e580:	cmp    al,0x6a
  41e582:	outs   dx,BYTE PTR ds:[esi]
  41e583:	popf   
  41e584:	mov    al,0xff
  41e586:	nop
  41e587:	mov    ebp,0xc2a21143
  41e58c:	xchg   edx,eax
  41e58d:	pop    edx
  41e58e:	scas   al,BYTE PTR es:[edi]
  41e58f:	aam    0xfd
  41e591:	fild   DWORD PTR [esi]
  41e593:	xchg   ebp,eax
  41e594:	mov    al,0x37
  41e596:	test   DWORD PTR [edi-0x43ebfa89],esp
  41e59c:	aad    0x8b
  41e59e:	clc    
  41e59f:	jle    0x41e570
  41e5a1:	push   ss
  41e5a2:	lds    esp,FWORD PTR [ebp*4+0x43440d71]
  41e5a9:	imul   edi,DWORD PTR [edi+0x7a],0xffffff9e
  41e5ad:	xchg   BYTE PTR [ebp-0x7b],dh
  41e5b0:	xchg   ebx,eax
  41e5b1:	scas   al,BYTE PTR es:[edi]
  41e5b2:	cmp    DWORD PTR [ecx+0x73],edx
  41e5b5:	retf   
  41e5b6:	shl    bh,1
  41e5b8:	push   cs
  41e5b9:	gs mov dl,0xa9
  41e5bc:	cmc    
  41e5bd:	sbb    DWORD PTR [esi+0x3345ab43],0x3fcec21f
  41e5c7:	shl    DWORD PTR [ecx],1
  41e5c9:	dec    ebx
  41e5ca:	xor    BYTE PTR [edi-0x55b1ee00],bh
  41e5d0:	mul    BYTE PTR [esp+edi*1-0x2edbb9fc]
  41e5d7:	xchg   esp,eax
  41e5d8:	sub    bl,BYTE PTR [ebx+0x4fc12390]
  41e5de:	pushf  
  41e5df:	(bad)  
  41e5e0:	mov    ebp,0xea98b78c
  41e5e5:	ds dec eax
  41e5e7:	ret    
  41e5e8:	retf   
  41e5e9:	jb     0x41e5e6
  41e5eb:	pop    esi
  41e5ec:	adc    BYTE PTR [edi-0x34],ah
  41e5ef:	sbb    BYTE PTR [ecx],bl
  41e5f1:	jmp    0xa1b5:0x311946bf
  41e5f8:	push   edx
  41e5f9:	rcr    DWORD PTR [edx-0x4c64d65],1
  41e5ff:	jp     0x41e60f
  41e601:	pop    eax
  41e602:	inc    bl
  41e604:	cmp    bh,BYTE PTR [esi+0x6e9fbd33]
  41e60a:	adc    DWORD PTR [esi-0x2ec7216a],eax
  41e610:	adc    ah,BYTE PTR [esi+eax*4]
  41e613:	scas   al,BYTE PTR es:[edi]
  41e614:	mov    edx,DWORD PTR [ecx-0x4ec71204]
  41e61a:	and    bl,dh
  41e61c:	adc    ebx,ebp
  41e61e:	mov    cl,BYTE PTR [ebx]
  41e620:	dec    ecx
  41e621:	adc    BYTE PTR [edi+0x3f84e603],0xcf
  41e628:	push   ebx
  41e629:	push   ebp
  41e62a:	sbb    al,BYTE PTR [ebx+0x4e]
  41e62d:	out    dx,al
  41e62e:	in     al,dx
  41e62f:	add    eax,0x3c088302
  41e634:	int3   
  41e635:	pop    esp
  41e636:	call   0xb723aca5
  41e63b:	sbb    bl,bl
  41e63d:	dec    esp
  41e63e:	rol    BYTE PTR [edx-0x10ab7422],0x34
  41e645:	and    dh,BYTE PTR [eax-0x7d]
  41e648:	rol    BYTE PTR [edi-0x2d],cl
  41e64b:	pop    edi
  41e64c:	cdq    
  41e64d:	loope  0x41e635
  41e64f:	addr16 in al,dx
  41e651:	div    DWORD PTR [bx+si+0xb37]
  41e656:	(bad)  
  41e657:	out    dx,al
  41e658:	ficom  DWORD PTR [ecx-0x74430076]
  41e65e:	je     0x41e692
  41e660:	dec    esi
  41e661:	test   dh,bl
  41e663:	cli    
  41e664:	nop
  41e665:	lods   al,BYTE PTR ds:[esi]
  41e666:	les    esi,FWORD PTR [eax]
  41e668:	sub    eax,0x53b537a3
  41e66d:	ds imul edx,ebp,0x6776e9d3
  41e674:	arpl   WORD PTR [edx-0x74],dx
  41e677:	pusha  
  41e678:	stc    
  41e679:	or     DWORD PTR [esi],edx
  41e67b:	cdq    
  41e67c:	mov    ds:0x44c91617,eax
  41e681:	lods   al,BYTE PTR ds:[esi]
  41e682:	or     dh,dh
  41e684:	(bad)  
  41e685:	and    eax,eax
  41e687:	hlt    
  41e688:	sub    BYTE PTR ds:0xa99f6f30,0x97
  41e68f:	xchg   ebp,eax
  41e690:	data16 ror BYTE PTR [ebx],cl
  41e693:	ret    0x769d
  41e696:	xor    dh,dh
  41e698:	adc    DWORD PTR [esi],0x61144d8
  41e69e:	sub    al,dl
  41e6a0:	jmp    0x41e6b5
  41e6a2:	push   edi
  41e6a3:	(bad)  
  41e6a4:	pop    ss
  41e6a5:	xor    ch,BYTE PTR [edi]
  41e6a7:	cmp    esi,DWORD PTR [ebx]
  41e6a9:	xlat   BYTE PTR ds:[ebx]
  41e6aa:	es repnz sbb ax,0x50ea
  41e6b0:	inc    ebp
  41e6b1:	mov    al,0x47
  41e6b3:	xchg   esp,esi
  41e6b5:	cmp    BYTE PTR [ebx],ch
  41e6b7:	in     eax,0xb2
  41e6b9:	add    dl,ah
  41e6bb:	xor    BYTE PTR [edi-0x5a03c6b5],bl
  41e6c1:	push   es
  41e6c2:	or     cl,BYTE PTR [edi]
  41e6c4:	in     eax,0x68
  41e6c6:	les    ecx,FWORD PTR [ebx]
  41e6c8:	repz or ebp,DWORD PTR [esi-0x6e]
  41e6cc:	loopne 0x41e6fd
  41e6ce:	int    0x62
  41e6d0:	cdq    
  41e6d1:	inc    esp
  41e6d2:	outs   dx,DWORD PTR ds:[esi]
  41e6d3:	xor    al,0xb4
  41e6d5:	pop    esi
  41e6d6:	test   eax,esp
  41e6d8:	adc    bh,BYTE PTR ds:0x79bbe43c
  41e6de:	(bad)  
  41e6df:	iret   
  41e6e0:	out    dx,eax
  41e6e1:	cmp    DWORD PTR [ecx-0x13],ebp
  41e6e4:	and    cl,cl
  41e6e6:	jl     0x41e6ab
  41e6e8:	fild   WORD PTR [eax-0x2b]
  41e6eb:	push   ebx
  41e6ec:	popa   
  41e6ed:	mov    ds:0xd7d4c8ae,al
  41e6f2:	adc    dh,al
  41e6f4:	mov    ah,0x90
  41e6f6:	and    al,0x8a
  41e6f8:	push   ecx
  41e6f9:	bound  esi,QWORD PTR [esi]
  41e6fb:	mov    bh,0x74
  41e6fd:	cmp    eax,0xcfd538fe
  41e702:	or     al,0xd5
  41e704:	jmp    0x7b2a:0xbeab38d5
  41e70b:	sbb    eax,0x2ddd1319
  41e710:	mov    gs,WORD PTR [eax+0x3e7f35ce]
  41e716:	mov    esp,0x4587761
  41e71b:	xchg   BYTE PTR [ecx-0x2e],ch
  41e71e:	popf   
  41e71f:	lahf   
  41e720:	hlt    
  41e721:	in     al,dx
  41e722:	xor    eax,0x8e5f0a0d
  41e727:	dec    ebp
  41e728:	inc    ecx
  41e729:	sar    BYTE PTR [edx+edi*2-0x36d594c6],0xec
  41e731:	outs   dx,DWORD PTR ds:[esi]
  41e732:	push   ds
  41e733:	jmp    0x41e7a0
  41e735:	in     eax,0x11
  41e737:	cmp    DWORD PTR [ebx+0x74758738],ebp
  41e73d:	pop    ecx
  41e73e:	sbb    DWORD PTR [edi],esp
  41e740:	outs   dx,BYTE PTR ds:[esi]
  41e741:	aam    0x85
  41e743:	jg     0x41e712
  41e745:	xor    ebp,DWORD PTR [ebp-0x6a2c650a]
  41e74b:	mov    cl,0x81
  41e74d:	inc    eax
  41e74e:	das    
  41e74f:	(bad)  
  41e750:	push   edx
  41e751:	loop   0x41e758
  41e753:	(bad)  
  41e754:	or     al,0x83
  41e756:	xor    ebp,ebx
  41e758:	jmp    0x41e773
  41e75a:	std    
  41e75b:	in     al,0x65
  41e75d:	xlat   BYTE PTR ds:[ebx]
  41e75e:	arpl   WORD PTR [edx+0x2fa335e8],bx
  41e764:	lods   al,BYTE PTR ds:[esi]
  41e765:	fisub  WORD PTR [eax+0x1095de0f]
  41e76b:	add    DWORD PTR [edx],ebp
  41e76d:	jnp    0x41e7b6
  41e76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e770:	push   ss
  41e771:	lahf   
  41e772:	or     BYTE PTR [edx+edi*4+0x596ec0e4],0x78
  41e77a:	aad    0xbc
  41e77c:	cmp    al,0xe0
  41e77e:	loop   0x41e77a
  41e780:	mov    bh,0x99
  41e782:	out    0xe4,al
  41e784:	test   eax,0xa192df6a
  41e789:	mov    bl,BYTE PTR [ecx+0x69c28c9d]
  41e78f:	test   al,0x3d
  41e791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e792:	jl     0x41e79d
  41e794:	mov    ch,0x9d
  41e796:	stos   DWORD PTR es:[edi],eax
  41e797:	fnstsw WORD PTR [ebx+0x43]
  41e79a:	mov    BYTE PTR [edi],cl
  41e79c:	xor    bh,0x39
  41e79f:	inc    eax
  41e7a0:	mov    ch,0xcd
  41e7a2:	xacquire xchg BYTE PTR [ecx-0x55],bh
  41e7a6:	pop    edi
  41e7a7:	gs xchg esp,eax
  41e7a9:	push   eax
  41e7aa:	cmp    BYTE PTR [ecx-0x50],ah
  41e7ad:	arpl   si,dx
  41e7af:	and    eax,0xe575fbd8
  41e7b4:	jecxz  0x41e814
  41e7b6:	dec    edi
  41e7b7:	jb     0x41e7e7
  41e7b9:	push   edi
  41e7ba:	or     ebx,DWORD PTR [edi+0x29]
  41e7bd:	add    BYTE PTR [esi-0x1cd0700c],dl
  41e7c3:	mov    edi,0xc7148659
  41e7c8:	in     al,0xdd
  41e7ca:	jg     0x41e81c
  41e7cc:	call   0xa4b4dcb
  41e7d1:	mov    dh,0x84
  41e7d3:	jne    0x41e77b
  41e7d5:	adc    bh,BYTE PTR [ebp-0x57]
  41e7d8:	es test eax,0x2cc49c0
  41e7de:	je     0x41e7b6
  41e7e0:	fist   WORD PTR [edi-0x9]
  41e7e3:	sbb    dl,dh
  41e7e5:	jb     0x41e7d7
  41e7e7:	xchg   edi,eax
  41e7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7e9:	sahf   
  41e7ea:	loope  0x41e813
  41e7ec:	mov    eax,0x5e553b9c
  41e7f1:	ss in  eax,0x5e
  41e7f4:	test   BYTE PTR ds:0x25b86fb7,cl
  41e7fa:	pop    es
  41e7fb:	(bad)  
  41e7fd:	add    BYTE PTR [ebx],dh
  41e7ff:	hlt    
  41e800:	outs   dx,BYTE PTR ds:[esi]
  41e801:	aad    0x8b
  41e803:	jnp    0x41e7fc
  41e805:	xchg   esi,eax
  41e806:	mov    ah,dl
  41e808:	sbb    bl,BYTE PTR [ebx+0x14]
  41e80b:	xchg   BYTE PTR [eax-0x12],cl
  41e80e:	test   BYTE PTR [ebx-0x65b0df37],dh
  41e814:	mov    ah,al
  41e816:	adc    ebx,edi
  41e818:	sbb    edi,DWORD PTR [edx+0x37]
  41e81b:	mov    eax,ds:0x8808758e
  41e820:	dec    ecx
  41e821:	push   ecx
  41e822:	or     eax,0xa810c5fc
  41e827:	xor    al,0x44
  41e829:	int    0x10
  41e82b:	sbb    al,dl
  41e82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e82e:	sti    
  41e82f:	mov    bh,BYTE PTR [esi+0x24b22ec4]
  41e835:	cmp    esp,DWORD PTR [ecx+0x6a6a966b]
  41e83b:	or     edx,DWORD PTR [edi+0x35]
  41e83e:	jae    0x41e80d
  41e840:	popf   
  41e841:	in     al,dx
  41e842:	aad    0x34
  41e844:	sub    al,0xd6
  41e846:	out    0x59,eax
  41e848:	in     eax,0xb7
  41e84a:	fdivrp st(3),st
  41e84c:	pop    ds
  41e84d:	ret    0x5512
  41e850:	sub    edx,DWORD PTR [edi]
  41e852:	dec    DWORD PTR [ecx+ebp*2]
  41e855:	xor    al,0x3b
  41e857:	adc    DWORD PTR [ecx+ebp*8],ebp
  41e85a:	dec    ebx
  41e85b:	pop    ecx
  41e85c:	pop    ebp
  41e85d:	rcr    ah,0x6e
  41e860:	xchg   ah,dl
  41e862:	(bad)  
  41e863:	cmp    BYTE PTR [ebx-0xb6717f],bh
  41e869:	mov    al,0x8a
  41e86b:	xchg   ebx,eax
  41e86c:	das    
  41e86d:	push   esp
  41e86e:	daa    
  41e86f:	push   esi
  41e870:	jns    0x41e802
  41e872:	cmp    DWORD PTR [ebp*8-0x428192e4],0xffffffc5
  41e87a:	pop    ds
  41e87b:	or     DWORD PTR [eax+0x7f],esi
  41e87e:	jp     0x41e8e8
  41e880:	add    eax,0x39f024b8
  41e885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e886:	pop    esp
  41e887:	sbb    ecx,esp
  41e889:	mov    ds:0xcc32fe8,eax
  41e88e:	add    eax,0x7b232eb1
  41e893:	test   BYTE PTR [edx],dh
  41e895:	xchg   edx,eax
  41e896:	mov    bh,0xf1
  41e898:	sub    DWORD PTR [edx+0x16b0f085],ebx
  41e89e:	leave  
  41e89f:	add    ecx,DWORD PTR [edx-0x3]
  41e8a2:	jmp    0x41e8ba
  41e8a4:	jp     0x41e8be
  41e8a6:	clc    
  41e8a7:	adc    BYTE PTR [eax-0x16],dh
  41e8aa:	push   eax
  41e8ab:	xchg   esp,eax
  41e8ac:	mov    bh,0x1e
  41e8ae:	jge    0x41e90d
  41e8b0:	lea    ebp,[esi+ecx*2+0x57208ff0]
  41e8b7:	or     eax,0x53fa76f4
  41e8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8bd:	sbb    edx,DWORD PTR [edi+0x40e8fb51]
  41e8c3:	or     ebp,DWORD PTR [edx+0x36]
  41e8c6:	push   0x79
  41e8c8:	out    0xb0,al
  41e8ca:	inc    ebp
  41e8cb:	mov    ds:0x76659962,al
  41e8d0:	sbb    BYTE PTR [esi-0x5c2ed937],ah
  41e8d6:	and    BYTE PTR [edx-0x3ec5120e],cl
  41e8dc:	iret   
  41e8dd:	dec    ebp
  41e8de:	mov    dl,0x92
  41e8e0:	inc    esp
  41e8e1:	push   cs
  41e8e2:	(bad)  
  41e8e3:	push   ds
  41e8e4:	retf   
  41e8e5:	imul   ecx,DWORD PTR [ebx],0xa65eb8d9
  41e8eb:	xchg   esp,eax
  41e8ec:	mov    dh,0xad
  41e8ee:	jnp    0x41e910
  41e8f0:	pop    esi
  41e8f1:	fwait
  41e8f2:	mov    dh,0xc5
  41e8f4:	or     eax,0x4c9240c9
  41e8f9:	idiv   DWORD PTR [ecx]
  41e8fb:	aaa    
  41e8fc:	inc    ecx
  41e8fd:	jnp    0x41e907
  41e8ff:	imul   ebx,eax,0xc36495ff
  41e905:	mov    cl,BYTE PTR [edi+0x48]
  41e908:	and    DWORD PTR [ebx+edx*4+0x3c],eax
  41e90c:	inc    edi
  41e90d:	inc    ebx
  41e90e:	cmp    ebp,eax
  41e910:	mov    eax,ds:0x8e24ee4f
  41e915:	pop    es
  41e916:	cmp    WORD PTR [esi],bp
  41e919:	mov    BYTE PTR [esi],0x12
  41e91c:	xor    DWORD PTR [ecx],edx
  41e91e:	nop
  41e91f:	jp     0x41e947
  41e921:	paddw  mm5,QWORD PTR [eax-0x503b279]
  41e928:	into   
  41e929:	adc    ah,dh
  41e92b:	mov    ebp,0x5c98c31e
  41e931:	leave  
  41e932:	pop    es
  41e933:	scas   eax,DWORD PTR es:[edi]
  41e934:	lahf   
  41e935:	add    DWORD PTR [ebx-0x2a],eax
  41e938:	std    
  41e939:	ins    DWORD PTR es:[edi],dx
  41e93a:	mov    ds:0xb0e293b9,al
  41e93f:	mov    dh,0x6a
  41e941:	mov    dh,al
  41e943:	lea    edx,[edx+0x7251fddd]
  41e949:	or     bl,bh
  41e94b:	in     eax,0xa9
  41e94d:	inc    ebx
  41e94e:	jl     0x41e950
  41e950:	push   ds
  41e951:	mov    ecx,0x2ee63748
  41e956:	mov    dh,0xd8
  41e958:	dec    esp
  41e959:	ins    DWORD PTR es:[edi],dx
  41e95a:	push   edi
  41e95b:	je     0x41e9da
  41e95d:	cmc    
  41e95e:	outs   dx,BYTE PTR ds:[esi]
  41e95f:	and    eax,0x4964aa56
  41e964:	in     eax,dx
  41e965:	scas   al,BYTE PTR es:[edi]
  41e966:	push   edi
  41e967:	repz and BYTE PTR ds:0x2ef932c9,dl
  41e96e:	rcr    al,1
  41e970:	xor    eax,0x687fa745
  41e975:	test   eax,0x2f990fef
  41e97a:	jb     0x41e96e
  41e97c:	ror    DWORD PTR [eax-0x2a],0x78
  41e980:	inc    edi
  41e981:	push   eax
  41e982:	dec    ebx
  41e983:	arpl   WORD PTR [edx-0x25],cx
  41e986:	push   cs
  41e987:	jb     0x41e939
  41e989:	test   DWORD PTR [edi+0x675a6443],ebp
  41e98f:	sti    
  41e990:	mov    BYTE PTR [ebx-0x4],ch
  41e993:	popf   
  41e994:	xor    al,0x65
  41e996:	add    eax,0xdacd6878
  41e99b:	cmp    al,0xa9
  41e99d:	addr16 hlt 
  41e99f:	xor    edx,ebx
  41e9a1:	mov    DWORD PTR [esi+0x48],ebp
  41e9a4:	jns    0x41e957
  41e9a6:	std    
  41e9a7:	nop
  41e9a8:	push   es
  41e9a9:	int3   
  41e9aa:	icebp  
  41e9ab:	mov    eax,0xab372528
  41e9b0:	cmc    
  41e9b1:	mov    al,ds:0x68ca8b05
  41e9b6:	shl    BYTE PTR [edx+ecx*4-0x76],cl
  41e9ba:	cwde   
  41e9bb:	mov    edx,0x10a782b7
  41e9c0:	(bad)  
  41e9c1:	jmp    FWORD PTR [esi+0x527789c6]
  41e9c7:	jne    0x41ea2c
  41e9c9:	icebp  
  41e9ca:	bound  edi,QWORD PTR [ecx]
  41e9cc:	shl    ch,cl
  41e9ce:	jp     0x41ea27
  41e9d0:	sub    eax,DWORD PTR ds:0xcec8ee26
  41e9d6:	ins    BYTE PTR es:[edi],dx
  41e9d7:	sub    eax,0x22458c0a
  41e9dc:	daa    
  41e9dd:	cmp    al,0x97
  41e9df:	retf   
  41e9e0:	sbb    BYTE PTR [eax],cl
  41e9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e3:	in     al,0xd5
  41e9e5:	fild   DWORD PTR [edx]
  41e9e7:	xchg   ecx,eax
  41e9e8:	lods   eax,DWORD PTR ds:[esi]
  41e9e9:	es push ecx
  41e9eb:	fstp   TBYTE PTR [edi]
  41e9ed:	int3   
  41e9ee:	dec    ecx
  41e9ef:	imul   edi,DWORD PTR [ebx+0x1e],0x8b95815
  41e9f6:	push   0x73cf8dbf
  41e9fb:	pop    eax
  41e9fc:	ins    DWORD PTR es:[edi],dx
  41e9fd:	cmp    al,0xfa
  41e9ff:	(bad)  
  41ea00:	shr    BYTE PTR [ecx],0x2
  41ea03:	lock cmp DWORD PTR [edi],ecx
  41ea06:	or     eax,ebx
  41ea08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea09:	cmc    
  41ea0a:	sbb    esi,DWORD PTR [ecx+edx*1-0x36]
  41ea0e:	push   cs
  41ea0f:	sub    DWORD PTR [ebp+0xe1ece9e],ebx
  41ea15:	lock adc al,0x7b
  41ea18:	inc    esp
  41ea19:	fmul   st,st(7)
  41ea1b:	sub    BYTE PTR [eax],0xe
  41ea1e:	dec    ebx
  41ea1f:	icebp  
  41ea20:	test   BYTE PTR [eax],cl
  41ea22:	and    BYTE PTR gs:[edi+0x1cf20552],cl
  41ea29:	popa   
  41ea2a:	pop    esi
  41ea2b:	xchg   ecx,eax
  41ea2c:	push   ds
  41ea2d:	dec    ebx
  41ea2e:	jl     0x41ea56
  41ea30:	(bad)  
  41ea31:	in     eax,dx
  41ea32:	mov    ds:0x80b7e9b1,eax
  41ea37:	in     al,dx
  41ea38:	cmp    ecx,ebx
  41ea3a:	sub    ebp,DWORD PTR [edi+edi*2]
  41ea3d:	stos   DWORD PTR es:[edi],eax
  41ea3e:	mov    ah,0xfa
  41ea40:	cmp    DWORD PTR [edx+ecx*1+0xa],ebx
  41ea44:	pop    esi
  41ea45:	fisubr DWORD PTR [edx+ecx*1]
  41ea48:	iret   
  41ea49:	jnp    0x41e9fb
  41ea4b:	loope  0x41e9ef
  41ea4d:	daa    
  41ea4e:	popf   
  41ea4f:	jne    0x41e9d8
  41ea51:	jbe    0x41ea8d
  41ea53:	ret    
  41ea54:	cli    
  41ea55:	sub    DWORD PTR [ecx],eax
  41ea57:	out    dx,eax
  41ea58:	xlat   BYTE PTR ds:[ebx]
  41ea59:	mov    bh,dh
  41ea5b:	jecxz  0x41ea0f
  41ea5d:	adc    DWORD PTR [edx-0x43557a7],0xde01a6b
  41ea67:	sub    BYTE PTR [edx],ah
  41ea69:	mov    al,0xed
  41ea6b:	sti    
  41ea6c:	out    dx,eax
  41ea6d:	and    DWORD PTR [edx],ebx
  41ea6f:	outs   dx,DWORD PTR ds:[esi]
  41ea70:	scas   eax,DWORD PTR es:[edi]
  41ea71:	loope  0x41ea10
  41ea73:	jnp    0x41ea6e
  41ea75:	sbb    BYTE PTR [edx+0x7a],bh
  41ea78:	mov    ebp,0x6a255463
  41ea7d:	mov    es,esp
  41ea7f:	push   ss
  41ea80:	sbb    al,0xb8
  41ea82:	rcl    DWORD PTR [esi+0x4d667731],0x29
  41ea89:	sbb    edi,esp
  41ea8b:	pop    ds
  41ea8c:	mul    DWORD PTR [ebp-0x5cec9bea]
  41ea92:	jbe    0x41ead0
  41ea94:	adc    BYTE PTR [edx],bh
  41ea96:	mov    bl,0x66
  41ea98:	and    BYTE PTR [ecx],0xb3
  41ea9b:	sbb    eax,0x90f5b6b4
  41eaa0:	mov    eax,ds:0x723d3884
  41eaa5:	jg     0x41eb1d
  41eaa7:	cmp    al,BYTE PTR [ebx]
  41eaa9:	cmp    eax,0xb50679f
  41eaae:	call   0xa3455cf0
  41eab3:	sub    ebp,edi
  41eab5:	jle    0x41eac5
  41eab7:	sub    DWORD PTR [ebx],edx
  41eab9:	jne    0x41ea5c
  41eabb:	push   es
  41eabc:	pop    edi
  41eabd:	ret    0x9f89
  41eac0:	xor    al,al
  41eac2:	inc    ebx
  41eac3:	pop    ds
  41eac4:	jnp    0x41ea6c
  41eac6:	cmp    DWORD PTR [ebx+edi*2+0x74],0x73
  41eacb:	stos   BYTE PTR es:[edi],al
  41eacc:	add    eax,0x21d83cfa
  41ead1:	fist   WORD PTR [ecx-0x67]
  41ead4:	adc    dl,BYTE PTR [esi]
  41ead6:	aam    0xdf
  41ead8:	pusha  
  41ead9:	aaa    
  41eada:	fwait
  41eadb:	pop    ebp
  41eadc:	and    al,0xf1
  41eade:	pop    ebp
  41eadf:	aam    0x76
  41eae1:	scas   al,BYTE PTR es:[edi]
  41eae2:	repz or esi,DWORD PTR [esi]
  41eae5:	adc    cl,dl
  41eae7:	leave  
  41eae8:	scas   al,BYTE PTR es:[edi]
  41eae9:	pop    ds
  41eaea:	sbb    BYTE PTR [ecx+0x4bf0a18a],0xea
  41eaf1:	outs   dx,BYTE PTR ds:[esi]
  41eaf2:	lods   eax,DWORD PTR ds:[esi]
  41eaf3:	int    0x45
  41eaf5:	mov    eax,0x6111a7ae
  41eafa:	(bad)  
  41eafb:	sub    ebp,DWORD PTR [esi-0x2aaaf8c]
  41eb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb02:	lea    eax,[bx+di+0x9cb]
  41eb07:	fs inc ebx
  41eb09:	and    bl,BYTE PTR [ebp+0x6c]
  41eb0c:	repz pop cx
  41eb0f:	adc    ebp,DWORD PTR [eax+0x23]
  41eb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb13:	xor    BYTE PTR [edi+0x67],dl
  41eb16:	inc    edx
  41eb17:	data16 or al,0xce
  41eb1a:	adc    dl,bh
  41eb1c:	xchg   ebx,eax
  41eb1d:	mov    ds:0xbf8331b1,al
  41eb22:	call   0xe8f7:0xf6cd665a
  41eb29:	inc    esi
  41eb2a:	adc    eax,0x3023982c
  41eb2f:	mov    edx,0xb3eb9d53
  41eb34:	cld    
  41eb35:	(bad)  
  41eb36:	out    dx,eax
  41eb37:	jp     0x41ebb8
  41eb39:	or     DWORD PTR [ebx],ebp
  41eb3b:	cmp    ch,BYTE PTR [ebp-0x23]
  41eb3e:	or     BYTE PTR [edx],al
  41eb40:	outs   dx,BYTE PTR ds:[esi]
  41eb41:	icebp  
  41eb42:	pushf  
  41eb43:	push   esi
  41eb44:	repz sbb BYTE PTR [ecx+0x5173b8c9],ah
  41eb4b:	(bad)  [ecx+0xdaa2755]
  41eb51:	push   ebp
  41eb52:	inc    ebp
  41eb53:	test   al,0xe
  41eb55:	sub    al,0xc9
  41eb57:	fdiv   DWORD PTR [esi-0x36]
  41eb5a:	daa    
  41eb5b:	dec    ecx
  41eb5c:	cmc    
  41eb5d:	sbb    DWORD PTR [edx+0x67fbae75],0xffffff80
  41eb64:	mov    esp,0xb04d934d
  41eb69:	stc    
  41eb6a:	xchg   esi,eax
  41eb6b:	bound  ebp,QWORD PTR [ecx]
  41eb6d:	adc    cl,BYTE PTR ds:0x3ba10fe9
  41eb73:	cmc    
  41eb74:	arpl   WORD PTR [edi],cx
  41eb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb77:	and    eax,0x6fde0f84
  41eb7c:	sub    al,0xd2
  41eb7e:	rol    BYTE PTR [edx+ebp*8-0xf9b0953],0x17
  41eb86:	out    0xf0,eax
  41eb88:	loop   0x41eba0
  41eb8a:	mov    gs,WORD PTR [edi-0x2a036c73]
  41eb90:	cmp    ch,dh
  41eb92:	adc    dl,BYTE PTR [ecx-0x65]
  41eb95:	sub    al,0xe4
  41eb97:	sub    ebp,ebx
  41eb99:	jb     0x41ec0a
  41eb9b:	stos   DWORD PTR es:[edi],eax
  41eb9c:	in     eax,dx
  41eb9d:	add    edi,edi
  41eb9f:	push   edi
  41eba0:	shl    dl,1
  41eba2:	loopne 0x41eb97
  41eba4:	addr16 cmp eax,0xf23bc93a
  41ebaa:	pop    edi
  41ebab:	mov    ?,ebp
  41ebad:	jl     0x41ebdb
  41ebaf:	jbe    0x41ec2c
  41ebb1:	xor    esi,DWORD PTR [esi+ecx*4-0x47cdf16b]
  41ebb8:	dec    ebx
  41ebb9:	dec    ecx
  41ebba:	push   eax
  41ebbb:	test   BYTE PTR [esi+ebx*8],cl
  41ebbe:	jmp    0x41ec36
  41ebc0:	aad    0x4f
  41ebc2:	inc    eax
  41ebc3:	mov    dl,BYTE PTR [eax-0x72]
  41ebc6:	call   0x3de38db6
  41ebcb:	dec    edx
  41ebcc:	imul   eax,DWORD PTR [edx-0x27],0xffffff97
  41ebd0:	pop    eax
  41ebd1:	jge    0x41eb88
  41ebd3:	sbb    dl,0x78
  41ebd6:	or     DWORD PTR [ecx+0x1c],edx
  41ebd9:	jecxz  0x41ec58
  41ebdb:	cmp    esp,DWORD PTR [eax+0x7e82cee2]
  41ebe1:	dec    eax
  41ebe2:	mov    ch,0xd7
  41ebe4:	and    bh,BYTE PTR ds:0xb795dd04
  41ebea:	fwait
  41ebeb:	sbb    DWORD PTR [ecx],ebx
  41ebed:	adc    eax,0x6cec7726
  41ebf2:	lahf   
  41ebf3:	mov    bh,0xb3
  41ebf5:	data16 out dx,al
  41ebf7:	mov    BYTE PTR [eax],ch
  41ebf9:	sub    DWORD PTR [edx-0x51aeb002],ebp
  41ebff:	xchg   edi,eax
  41ec00:	pop    ebx
  41ec01:	cmp    al,0x4b
  41ec03:	mov    cs,ecx
  41ec05:	lods   al,BYTE PTR es:[esi]
  41ec07:	or     bh,BYTE PTR [edi+ebx*1+0x25753970]
  41ec0e:	stos   BYTE PTR es:[edi],al
  41ec0f:	jg     0x41ebfd
  41ec11:	mov    BYTE PTR [ebp+edx*8+0x314e2c5],bh
  41ec18:	js     0x41ec4e
  41ec1a:	sub    eax,0xcc5b63a9
  41ec1f:	aad    0xc
  41ec21:	js     0x41ebc9
  41ec23:	cmc    
  41ec24:	mov    dl,0x32
  41ec26:	int3   
  41ec27:	pop    esi
  41ec28:	xor    DWORD PTR [ecx+0x651ff8a3],ecx
  41ec2e:	add    edi,edi
  41ec30:	cmp    eax,0xc8f7ded0
  41ec35:	fcmovnbe st,st(1)
  41ec37:	and    BYTE PTR [ebx+0x59],bl
  41ec3a:	pop    esp
  41ec3b:	mov    ah,BYTE PTR [ebp+0x2b]
  41ec3e:	pop    ebx
  41ec3f:	pop    edx
  41ec40:	sti    
  41ec41:	scas   eax,DWORD PTR es:[edi]
  41ec42:	rcl    BYTE PTR ds:0x9ceb41d3,cl
  41ec48:	add    ecx,0xfffffff0
  41ec4b:	inc    ebp
  41ec4c:	test   eax,0x22f24608
  41ec51:	mov    WORD PTR [esp+edx*4],es
  41ec54:	les    ebx,FWORD PTR [esi+0x13fc9314]
  41ec5a:	loop   0x41ec31
  41ec5c:	xor    BYTE PTR [eax-0x3ab9d93c],0xed
  41ec63:	leave  
  41ec64:	xor    DWORD PTR [ebx],edi
  41ec66:	add    ah,ch
  41ec68:	or     DWORD PTR [eax+0x72],esi
  41ec6b:	test   al,0xb6
  41ec6d:	test   eax,0xb08c77cf
  41ec72:	cmp    dh,BYTE PTR gs:[edx-0x677a4a0f]
  41ec79:	fsubp  st(7),st
  41ec7b:	shr    DWORD PTR [esi],0x1b
  41ec7e:	jmp    FWORD PTR [edi-0x20b14c9d]
  41ec84:	jl     0x41ecca
  41ec86:	cs (bad) 
  41ec88:	in     al,0x43
  41ec8a:	aaa    
  41ec8b:	sbb    ebx,ecx
  41ec8d:	mov    ah,BYTE PTR [eax]
  41ec8f:	sbb    al,0x40
  41ec91:	std    
  41ec92:	ror    ah,1
  41ec94:	pop    ds
  41ec95:	cmp    ebx,DWORD PTR [edx+0x5a8bda61]
  41ec9b:	xchg   edx,eax
  41ec9c:	cdq    
  41ec9d:	push   ebx
  41ec9e:	ror    BYTE PTR [ebp+ebp*4+0x17],cl
  41eca2:	xchg   esp,eax
  41eca3:	xor    edx,DWORD PTR [ecx+0x765743dc]
  41eca9:	test   dh,dh
  41ecab:	shl    BYTE PTR [edi-0x5e7e5a48],cl
  41ecb1:	es xor eax,0xcbcbaf2a
  41ecb7:	push   0x53
  41ecb9:	pusha  
  41ecba:	mul    BYTE PTR [edi-0x72afc183]
  41ecc0:	or     eax,0x2568d0bf
  41ecc5:	xchg   esi,eax
  41ecc6:	ins    BYTE PTR es:[edi],dx
  41ecc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecc8:	arpl   WORD PTR [esi+0x64],si
  41eccb:	adc    BYTE PTR [ebx-0x5bc2acbc],dh
  41ecd1:	rcl    DWORD PTR [eax+0x3d268319],1
  41ecd7:	cs dec edx
  41ecd9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ecdb:	pop    ecx
  41ecdc:	xchg   esp,eax
  41ecdd:	stos   DWORD PTR es:[edi],eax
  41ecde:	shl    DWORD PTR [ebp-0x104454ef],cl
  41ece4:	and    eax,0xe0471e3d
  41ece9:	(bad)  
  41ecea:	popf   
  41eceb:	leave  
  41ecec:	popf   
  41eced:	inc    ecx
  41ecee:	sub    edi,edx
  41ecf0:	xor    DWORD PTR [esi],0xffffffc8
  41ecf3:	or     bl,al
  41ecf5:	out    dx,al
  41ecf6:	cwde   
  41ecf7:	mov    DWORD PTR [edx+0x7711e80],ebx
  41ecfd:	sub    al,0xea
  41ecff:	fwait
  41ed00:	sub    al,0xf6
  41ed02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed03:	mov    ebx,0xd49236d6
  41ed08:	jae    0x41ecd4
  41ed0a:	and    al,0xe0
  41ed0c:	cdq    
  41ed0d:	add    ecx,edx
  41ed0f:	out    dx,eax
  41ed10:	pop    ebx
  41ed11:	xchg   ebp,eax
  41ed12:	add    ch,dl
  41ed14:	add    dh,ah
  41ed16:	mov    dh,0xe2
  41ed18:	jo     0x41ecf1
  41ed1a:	test   al,0xd
  41ed1c:	leave  
  41ed1d:	mul    DWORD PTR [ecx+0x2c]
  41ed20:	dec    ebp
  41ed22:	fsub   DWORD PTR [ecx]
  41ed24:	ins    DWORD PTR es:[edi],dx
  41ed25:	xchg   BYTE PTR [edi+ebx*4],dh
  41ed28:	add    eax,0x61c6cb7c
  41ed2d:	and    BYTE PTR [ecx+0x660af786],ch
  41ed33:	es push ss
  41ed35:	aam    0x1a
  41ed37:	js     0x41ed65
  41ed39:	je     0x41ed13
  41ed3b:	mov    ds,eax
  41ed3d:	or     DWORD PTR [edx+0x2b],eax
  41ed40:	inc    esp
  41ed41:	xor    ah,BYTE PTR [eax]
  41ed43:	das    
  41ed44:	xchg   edi,eax
  41ed45:	cwde   
  41ed46:	sbb    esp,DWORD PTR [ebp+ebx*8-0x4f73e416]
  41ed4d:	sub    edx,esp
  41ed4f:	push   esp
  41ed50:	ror    DWORD PTR [edi],cl
  41ed52:	mov    eax,0x4d920c23
  41ed57:	pop    eax
  41ed58:	adc    eax,0xd9dc002d
  41ed5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed5e:	push   di
  41ed60:	ficom  DWORD PTR [ecx]
  41ed62:	cmp    DWORD PTR [edx-0x4d],0x1e
  41ed66:	xchg   cl,al
  41ed68:	aam    0x1d
  41ed6a:	nop
  41ed6b:	stos   DWORD PTR es:[edi],eax
  41ed6c:	xor    BYTE PTR [edi-0x3e7f3454],cl
  41ed72:	mov    esi,0x12a6004e
  41ed77:	sti    
  41ed78:	clc    
  41ed79:	in     eax,dx
  41ed7a:	mov    ds:0x3a8b98b8,eax
  41ed7f:	add    eax,0x2f34cce2
  41ed84:	sti    
  41ed85:	inc    ebp
  41ed86:	and    bl,dl
  41ed88:	or     BYTE PTR [ebx],dl
  41ed8a:	loopne 0x41ed80
  41ed8c:	adc    BYTE PTR [ebx-0xe],dl
  41ed8f:	mov    bh,0xd5
  41ed91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed92:	or     al,0x76
  41ed94:	nop
  41ed95:	push   esi
  41ed96:	jo     0x41edc0
  41ed98:	shl    BYTE PTR ds:0x3ccc9fd5,0x0
  41ed9f:	jmp    0xdb5:0x495d8a3b
  41eda6:	popf   
  41eda7:	jb     0x41ed4a
  41eda9:	imul   esi,DWORD PTR [eax+eiz*1+0x41329af8],0x3e
  41edb1:	inc    ebp
  41edb2:	out    0xce,al
  41edb4:	push   edx
  41edb5:	std    
  41edb6:	or     al,0x7b
  41edb8:	jg     0x41ed7b
  41edba:	adc    ecx,DWORD PTR [ebp+0x8afaffa]
  41edc0:	dec    ecx
  41edc1:	dec    ecx
  41edc2:	or     BYTE PTR [ebx+0x5],al
  41edc5:	ins    DWORD PTR es:[edi],dx
  41edc6:	aas    
  41edc7:	stos   DWORD PTR es:[edi],eax
  41edc8:	cld    
  41edc9:	inc    esp
  41edca:	ret    
  41edcb:	adc    al,0x67
  41edcd:	mov    edi,0xd5958d33
  41edd2:	fisttp WORD PTR [ecx]
  41edd4:	test   eax,0xee95f3c5
  41edd9:	cmovge eax,DWORD PTR [eax]
  41eddc:	cmp    BYTE PTR [eax],ch
  41edde:	sbb    BYTE PTR [ecx],dl
  41ede0:	push   es
  41ede1:	sub    eax,0x1d9ef087
  41ede6:	lahf   
  41ede7:	pop    eax
  41ede8:	outs   dx,DWORD PTR ds:[esi]
  41ede9:	pusha  
  41edea:	dec    ebp
  41edeb:	jbe    0x41ee52
  41eded:	nop
  41edee:	out    dx,eax
  41edef:	inc    ebx
  41edf0:	sub    BYTE PTR [ebx+ebx*4-0x99aa301],ah
  41edf7:	dec    esp
  41edf8:	or     BYTE PTR [edx],bl
  41edfa:	jle    0x41edbc
  41edfc:	mov    dl,0x77
  41edfe:	js     0x41ee12
  41ee00:	outs   dx,BYTE PTR ds:[esi]
  41ee01:	mov    al,0xb6
  41ee03:	int    0x7d
  41ee05:	xor    eax,0x15f21b3d
  41ee0a:	ficomp DWORD PTR [ebx]
  41ee0c:	dec    edi
  41ee0d:	xor    al,0xab
  41ee0f:	push   cs
  41ee10:	sar    DWORD PTR [esi],cl
  41ee12:	call   0x595d8cdf
  41ee17:	sub    al,0xc1
  41ee19:	sbb    ebp,DWORD PTR [esi]
  41ee1b:	pop    eax
  41ee1c:	push   ecx
  41ee1d:	je     0x41ee87
  41ee1f:	xor    ch,BYTE PTR [eax]
  41ee21:	xor    ch,dl
  41ee23:	cmp    dl,BYTE PTR [eax+0x3e]
  41ee26:	sub    esi,DWORD PTR [esi]
  41ee28:	imul   esp,DWORD PTR [ebx+0x48],0xd
  41ee2c:	mov    dl,0xf6
  41ee2e:	addr16 mov al,ds:0x55a6
  41ee32:	ret    
  41ee33:	pop    edi
  41ee34:	sti    
  41ee35:	xor    eax,0xef54a211
  41ee3a:	(bad)  [ebx-0x53]
  41ee3d:	push   0xe26cfe96
  41ee42:	mov    ecx,0xb0ec7e6a
  41ee47:	clc    
  41ee48:	arpl   di,dx
  41ee4a:	cmp    eax,0x43a6232
  41ee4f:	cmc    
  41ee50:	fild   QWORD PTR [eax+0x97ede61]
  41ee56:	repnz mov ebx,0xaa92c555
  41ee5c:	inc    ebp
  41ee5d:	adc    eax,edi
  41ee5f:	ret    0x9839
  41ee62:	outs   dx,DWORD PTR ds:[esi]
  41ee63:	das    
  41ee64:	rcr    BYTE PTR [eax-0x77],1
  41ee67:	mov    ecx,0x4a268d2
  41ee6c:	add    dh,BYTE PTR [ebx-0x60]
  41ee6f:	lahf   
  41ee70:	int3   
  41ee71:	mov    BYTE PTR [eax-0xc8c7a93],bh
  41ee77:	push   es
  41ee78:	lock cmp eax,0x97a3b465
  41ee7e:	int3   
  41ee7f:	dec    ecx
  41ee80:	je     0x41eef5
  41ee82:	mov    al,ds:0x588e9bd2
  41ee87:	idiv   ebx
  41ee89:	outs   dx,DWORD PTR ds:[esi]
  41ee8a:	fbld   TBYTE PTR [eax+0x74df9563]
  41ee90:	fdivr  st,st(6)
  41ee92:	loope  0x41eebf
  41ee94:	aad    0x39
  41ee96:	jmp    0x803dd74b
  41ee9b:	mov    ss,WORD PTR [eax+0x2]
  41ee9e:	dec    esi
  41ee9f:	js     0x41eed8
  41eea1:	lea    ebx,[edi+0x5c]
  41eea4:	dec    ecx
  41eea5:	(bad)  
  41eea6:	xor    ah,BYTE PTR [eax+0x3e662733]
  41eeac:	push   0x17
  41eeae:	outs   dx,BYTE PTR ds:[esi]
  41eeaf:	stos   DWORD PTR es:[edi],eax
  41eeb0:	jle    0x41ef0b
  41eeb2:	push   ebp
  41eeb3:	pushf  
  41eeb4:	fsubp  st(4),st
  41eeb6:	dec    edx
  41eeb7:	call   0xa044:0x43fc216f
  41eebe:	inc    eax
  41eebf:	aam    0xa7
  41eec1:	pop    eax
  41eec2:	sbb    BYTE PTR [eax-0x51a2ab9a],dh
  41eec8:	fisub  WORD PTR [edi+0x3524626]
  41eece:	cs out 0xb,eax
  41eed1:	cs add al,0xcf
  41eed4:	cmp    dl,BYTE PTR [edi+0x53]
  41eed7:	fcom   QWORD PTR [edx-0x5fbbdd0f]
  41eedd:	les    edi,FWORD PTR [esi]
  41eedf:	dec    esi
  41eee0:	rcr    ah,cl
  41eee2:	pop    ebx
  41eee3:	sub    BYTE PTR [eax-0x32d149f9],al
  41eee9:	rcr    DWORD PTR fs:[eax],0xee
  41eeed:	jns    0x41ef1b
  41eeef:	cmc    
  41eef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef1:	mov    esp,0x1d6fba2a
  41eef6:	(bad)  
  41eef7:	out    0x1c,al
  41eef9:	push   ecx
  41eefa:	mov    dl,0x65
  41eefc:	fs pop esp
  41eefe:	and    ah,BYTE PTR ds:0xe816ca9d
  41ef04:	mov    ?,WORD PTR [esi+0x79]
  41ef07:	fdivr  st,st(5)
  41ef09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0a:	adc    eax,0xa4baad5c
  41ef0f:	idiv   BYTE PTR [edi-0x6d08c140]
  41ef15:	xor    eax,0xffe5e4f5
  41ef1a:	in     eax,dx
  41ef1b:	push   es
  41ef1c:	jb     0x41ef6b
  41ef1e:	add    al,0x5f
  41ef20:	xor    DWORD PTR [esp+ecx*1-0x76bd946],ebx
  41ef27:	pop    es
  41ef28:	and    DWORD PTR [ecx+0xd],edi
  41ef2b:	mov    edx,ebx
  41ef2d:	push   ds
  41ef2e:	shl    DWORD PTR [ebx-0x7b],cl
  41ef31:	mov    esp,DWORD PTR [eax]
  41ef33:	imul   ecx,DWORD PTR [edx-0xde523bc],0xffffff96
  41ef3a:	push   ebx
  41ef3b:	retw   
  41ef3d:	pop    es
  41ef3e:	or     dh,bh
  41ef40:	pop    eax
  41ef41:	aas    
  41ef42:	mov    ah,0x0
  41ef44:	in     eax,0x6f
  41ef46:	daa    
  41ef47:	mov    esp,DWORD PTR ds:0x2b7a37
  41ef4d:	cli    
  41ef4e:	cmc    
  41ef4f:	xor    al,0xe9
  41ef51:	cld    
  41ef52:	ds shl BYTE PTR fs:[ebx+0x4bd7afd0],1
  41ef5a:	sahf   
  41ef5b:	mov    ds:0xde6537be,al
  41ef60:	test   BYTE PTR [ecx+ecx*2-0x2facec78],dh
  41ef67:	mov    bl,0x49
  41ef69:	cli    
  41ef6a:	je     0x41ef36
  41ef6c:	in     eax,0xe0
  41ef6e:	js     0x41efb5
  41ef70:	in     al,0x7d
  41ef72:	lahf   
  41ef73:	stc    
  41ef74:	call   0x4ec0:0xbbe60b03
  41ef7b:	mov    DWORD PTR [edx],ecx
  41ef7d:	lds    esi,FWORD PTR [ebx-0x6b92f045]
  41ef83:	je     0x41ef36
  41ef85:	test   ah,0xbd
  41ef88:	call   0x9f6d:0xd7886a19
  41ef8f:	call   0xf46c66b1
  41ef94:	jle    0x41ef5e
  41ef96:	lahf   
  41ef97:	push   edi
  41ef98:	jns    0x41ef55
  41ef9a:	sbb    edi,ecx
  41ef9c:	in     al,0xa3
  41ef9e:	mul    BYTE PTR ds:0xa33c168c
  41efa4:	sbb    cl,BYTE PTR [esi+eiz*4+0x73]
  41efa8:	xchg   bl,cl
  41efaa:	xor    eax,0xfa4f6b9a
  41efaf:	pop    ecx
  41efb0:	loop   0x41ef4e
  41efb2:	cdq    
  41efb3:	scas   eax,DWORD PTR es:[edi]
  41efb4:	pop    eax
  41efb5:	addr16 jno 0x41eff1
  41efb8:	out    0x1a,al
  41efba:	retf   0x8ad2
  41efbd:	(bad)
  41efc1:	mov    WORD PTR es:[ebp-0x223eb4f6],?
  41efc8:	or     BYTE PTR [eax-0x49086521],bl
  41efce:	es out 0x48,eax
  41efd1:	lods   al,BYTE PTR ds:[esi]
  41efd2:	jmp    DWORD PTR [ecx-0x7e4ad847]
  41efd8:	fimul  WORD PTR [eax]
  41efda:	jmp    0x1d07648a
  41efdf:	push   ecx
  41efe0:	std    
  41efe1:	nop
  41efe2:	loopne 0x41f033
  41efe4:	pop    edx
  41efe5:	data16 mov bh,0xd4
  41efe8:	or     bl,dh
  41efea:	pop    ds
  41efeb:	in     al,dx
  41efec:	movups xmm7,XMMWORD PTR [edi+eax*2-0x54]
  41eff1:	xor    BYTE PTR [eax-0x1f],0xc2
  41eff5:	ins    DWORD PTR es:[edi],dx
  41eff6:	outs   dx,DWORD PTR ds:[esi]
  41eff7:	push   edx
  41eff8:	mov    eax,ds:0x957c10b9
  41effd:	jmp    0x9d6:0xe9006a34
  41f004:	rol    DWORD PTR [ebp+0xa],0xb9
  41f008:	retf   
  41f009:	inc    ecx
  41f00a:	add    bh,BYTE PTR [ecx+ebx*4+0xa]
  41f00e:	add    BYTE PTR [edi-0x208130b9],ah
  41f014:	push   ebp
  41f015:	pop    esi
  41f016:	repnz dec esp
  41f018:	leave  
  41f019:	sar    BYTE PTR [ecx+0xd5db59f],1
  41f01f:	fwait
  41f020:	push   0x7f747a05
  41f025:	icebp  
  41f026:	aaa    
  41f027:	jl     0x41f081
  41f029:	es dec edi
  41f02b:	imul   esp,DWORD PTR [edx],0x36
  41f02e:	mov    edi,0x2088b646
  41f033:	ins    BYTE PTR es:[edi],dx
  41f034:	shl    DWORD PTR [eax-0x1b],cl
  41f037:	mov    esp,0x2ab8578c
  41f03c:	mov    ah,0x1a
  41f03e:	or     BYTE PTR [edi+ebp*1],0x40
  41f042:	xchg   ebx,eax
  41f043:	cmc    
  41f044:	clc    
  41f045:	jp     0x41f04a
  41f047:	jae    0x41f0af
  41f049:	xor    BYTE PTR [edx-0x24809222],ah
  41f04f:	or     bl,BYTE PTR [esi+0x4d9cb143]
  41f055:	imul   ebp,DWORD PTR [edx+0x58ef5a09],0xed611e7f
  41f05f:	add    bl,cl
  41f061:	mov    bh,0x3e
  41f063:	out    0x98,al
  41f065:	loop   0x41f058
  41f067:	dec    edx
  41f068:	mov    ch,0x70
  41f06a:	xchg   ebx,eax
  41f06b:	xor    DWORD PTR [ebp+0xe],ebp
  41f06e:	add    eax,DWORD PTR [edx]
  41f070:	sbb    ecx,ebx
  41f072:	lods   al,BYTE PTR ds:[esi]
  41f073:	mov    dh,0x57
  41f075:	pop    esi
  41f076:	mov    ds:0xa735f856,al
  41f07b:	test   ebp,edi
  41f07d:	test   dh,dh
  41f07f:	outs   dx,BYTE PTR ds:[esi]
  41f080:	push   cs
  41f081:	push   edi
  41f082:	test   al,0xb6
  41f084:	dec    ebp
  41f085:	test   DWORD PTR [ecx],esi
  41f087:	add    al,0xdc
  41f089:	adc    ah,al
  41f08b:	mov    esi,0xb1fbd21a
  41f090:	int3   
  41f091:	in     al,0x4d
  41f093:	gs inc esi
  41f095:	mov    ch,0xbe
  41f097:	(bad)  
  41f099:	hlt    
  41f09a:	loope  0x41f069
  41f09c:	mov    esp,0xb3700964
  41f0a1:	lds    ebx,FWORD PTR [ebx*2+0x24b3378a]
  41f0a8:	xor    DWORD PTR [edi],edx
  41f0aa:	pop    ds
  41f0ab:	sbb    DWORD PTR [ebp*8+0x6ebc57a0],0xffffffed
  41f0b3:	loopne 0x41f04d
  41f0b5:	mov    al,ds:0x4775d266
  41f0ba:	mov    WORD PTR [edx+esi*4-0x6fdfb6ae],ss
  41f0c1:	rol    BYTE PTR [esi+0x1fb6aaff],cl
  41f0c7:	xchg   esi,eax
  41f0c8:	sub    eax,0x5fbcf1ef
  41f0cd:	or     ecx,DWORD PTR [edi+0x56]
  41f0d0:	xchg   edi,eax
  41f0d1:	(bad)  
  41f0d2:	pop    ebp
  41f0d3:	jp     0x41f0bf
  41f0d5:	cmp    eax,0x455f52d8
  41f0da:	sub    esi,DWORD PTR [edx-0x75]
  41f0dd:	push   ebx
  41f0de:	or     edx,DWORD PTR [edx+ebp*1-0x617553cd]
  41f0e5:	test   BYTE PTR [eax-0x62],dl
  41f0e8:	pop    ecx
  41f0e9:	loop   0x41f144
  41f0eb:	mov    BYTE PTR [esi],0xd2
  41f0ee:	adc    esp,DWORD PTR [edx]
  41f0f0:	stos   DWORD PTR es:[edi],eax
  41f0f1:	and    dh,BYTE PTR [ebp-0x2f]
  41f0f4:	test   eax,0xaa73739b
  41f0f9:	(bad)  
  41f0fa:	xlat   BYTE PTR ds:[ebx]
  41f0fb:	push   edi
  41f0fc:	mov    cl,0x5f
  41f0fe:	adc    BYTE PTR [ebx],al
  41f100:	mov    WORD PTR [edx],gs
  41f102:	repz add al,0x5f
  41f105:	pop    ss
  41f106:	out    0xb,eax
  41f108:	xor    cl,al
  41f10a:	je     0x41f0ba
  41f10c:	icebp  
  41f10d:	or     eax,edx
  41f10f:	jl     0x41f0ba
  41f111:	aam    0x24
  41f113:	inc    ecx
  41f114:	fs dec eax
  41f116:	dec    ecx
  41f117:	daa    
  41f118:	cmp    cl,dh
  41f11a:	fist   DWORD PTR [ecx+0x41f5a5bb]
  41f120:	jno    0x41f140
  41f122:	or     DWORD PTR [esi+0x243d4424],edi
  41f128:	cmp    al,0xff
  41f12a:	mov    bl,0x39
  41f12c:	gs jg  0x41f0cd
  41f12f:	mov    esi,0x1b0e9126
  41f134:	lock into 
  41f136:	out    0x7a,al
  41f138:	aad    0x41
  41f13a:	push   ecx
  41f13b:	addr16 das 
  41f13d:	cmp    esp,DWORD PTR [esi+0x1826b851]
  41f143:	outs   dx,DWORD PTR ds:[esi]
  41f144:	xchg   edx,eax
  41f145:	ret    0x68d0
  41f148:	push   ebx
  41f149:	in     al,dx
  41f14a:	cmp    BYTE PTR [edi-0x7f71b287],bh
  41f150:	mov    ebp,0x2e603028
  41f155:	pop    eax
  41f156:	xlat   BYTE PTR ds:[ebx]
  41f157:	or     eax,edi
  41f159:	in     eax,0x72
  41f15b:	pusha  
  41f15c:	in     al,0x76
  41f15e:	sbb    al,BYTE PTR [esi-0x7a]
  41f161:	loopne 0x41f0ee
  41f163:	outs   dx,BYTE PTR ds:[esi]
  41f164:	jp     0x41f1b0
  41f166:	sub    bh,BYTE PTR [edi+edi*4]
  41f169:	mov    ecx,0xd89b7007
  41f16e:	jns    0x41f0f7
  41f170:	inc    edx
  41f171:	inc    esp
  41f172:	jne    0x41f19a
  41f174:	pop    edi
  41f175:	rol    DWORD PTR [ecx],0x59
  41f178:	pop    esi
  41f179:	adc    al,0x26
  41f17b:	jl     0x41f156
  41f17d:	(bad)  
  41f17f:	push   ss
  41f180:	std    
  41f181:	pop    ss
  41f182:	push   eax
  41f183:	pop    ss
  41f184:	mov    ecx,0x93e26255
  41f189:	pop    eax
  41f18a:	fs cld 
  41f18c:	fbstp  TBYTE PTR ds:0x83c69a18
  41f192:	cs out 0xc9,al
  41f195:	push   es
  41f196:	hlt    
  41f197:	xchg   dx,ax
  41f199:	ins    DWORD PTR es:[edi],dx
  41f19a:	or     al,0x9d
  41f19c:	and    eax,0xf0d47fb
  41f1a1:	cli    
  41f1a2:	xchg   ebp,eax
  41f1a3:	xchg   edi,eax
  41f1a4:	xlat   BYTE PTR ds:[ebx]
  41f1a5:	aas    
  41f1a6:	out    dx,eax
  41f1a7:	mov    dh,0x56
  41f1a9:	(bad)  
  41f1aa:	out    0xc6,eax
  41f1ac:	or     BYTE PTR [esi],dh
  41f1ae:	or     ch,BYTE PTR [esi-0x7d]
  41f1b1:	cmp    eax,0xc9e1fb26
  41f1b6:	inc    edx
  41f1b7:	mov    ebp,0x3e024148
  41f1bc:	dec    eax
  41f1bd:	nop
  41f1be:	mov    cl,0xd5
  41f1c0:	pop    ebp
  41f1c1:	ror    DWORD PTR [edi-0x17],1
  41f1c4:	mov    esi,DWORD PTR [esi]
  41f1c6:	mov    ds:0x2f7fc774,eax
  41f1cb:	mov    ds:0x72398e8c,eax
  41f1d0:	jle    0x41f23c
  41f1d2:	xor    ebp,DWORD PTR [eax-0x713ee002]
  41f1d8:	inc    esi
  41f1d9:	mov    ecx,0x351d7fe4
  41f1de:	adc    DWORD PTR [edi],eax
  41f1e0:	test   al,0x70
  41f1e2:	rol    BYTE PTR [esp+edi*8-0x7de22280],1
  41f1e9:	sbb    eax,0x500fca5c
  41f1ee:	loop   0x41f18c
  41f1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f1:	adc    BYTE PTR [edi],bh
  41f1f3:	clc    
  41f1f4:	arpl   WORD PTR [ebx+esi*8-0x71296dd5],sp
  41f1fb:	inc    BYTE PTR [ebp+0x41]
  41f1fe:	or     DWORD PTR [ebx],ebx
  41f200:	sub    eax,0x949858c8
  41f205:	pop    ecx
  41f206:	stos   DWORD PTR es:[edi],eax
  41f207:	ss (bad) 
  41f209:	lock imul ecx,DWORD PTR [ebx-0x5c],0xffffffe1
  41f20e:	xor    edi,DWORD PTR [edi-0x32]
  41f211:	mov    bh,0xdd
  41f213:	les    edx,FWORD PTR [esi+0x11]
  41f216:	shl    cl,cl
  41f218:	pop    eax
  41f219:	cli    
  41f21a:	jnp    0x41f220
  41f21c:	sti    
  41f21d:	cmp    BYTE PTR [ecx+eax*8-0x4dd7d75c],ch
  41f224:	cs mov edx,0x5247c196
  41f22a:	mov    gs,esp
  41f22c:	mov    ch,dh
  41f22e:	std    
  41f22f:	xor    eax,eax
  41f231:	popf   
  41f232:	(bad)  
  41f233:	ror    BYTE PTR [eax],1
  41f235:	lods   al,BYTE PTR ds:[esi]
  41f236:	les    ebp,FWORD PTR [edx]
  41f238:	retf   0xcadb
  41f23b:	inc    ebp
  41f23c:	mov    gs,esp
  41f23e:	hlt    
  41f23f:	mov    ecx,0xc23ce69d
  41f244:	mov    esi,0x96d42035
  41f249:	sub    al,bh
  41f24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f24c:	shr    dh,0xb9
  41f24f:	or     eax,0xead09b04
  41f254:	aas    
  41f255:	cmp    ecx,DWORD PTR [eax]
  41f257:	(bad)  
  41f258:	push   0x20460a8c
  41f25d:	jo     0x41f28f
  41f25f:	(bad)  
  41f260:	cdq    
  41f261:	xor    al,0xf0
  41f263:	dec    esi
  41f264:	popa   
  41f265:	push   ebp
  41f266:	jnp    0x41f282
  41f268:	jl     0x41f2bc
  41f26a:	xchg   edx,eax
  41f26b:	mov    al,ds:0xf3c67192
  41f271:	(bad)  
  41f272:	xchg   edi,eax
  41f273:	jmp    0x3811:0xf524f57e
  41f27a:	and    cl,BYTE PTR [edx+0x5a]
  41f27d:	out    0x7a,al
  41f27f:	jb     0x41f2bc
  41f281:	xor    esi,DWORD PTR [ebx+0x51]
  41f284:	daa    
  41f285:	fmul   DWORD PTR [eax-0x11f827a0]
  41f28b:	es bnd ja 0x41f2b6
  41f28f:	jecxz  0x41f2e2
  41f291:	aas    
  41f292:	mov    edi,0x27ea791a
  41f297:	aas    
  41f298:	mov    al,0x30
  41f29a:	mov    ecx,0xb443b7f6
  41f29f:	mov    dh,0x1b
  41f2a1:	and    dh,BYTE PTR [esi+0x3cbe7d26]
  41f2a7:	pushf  
  41f2a8:	add    ah,BYTE PTR [esi+eiz*1]
  41f2ab:	add    bh,BYTE PTR ds:0x197e4920
  41f2b1:	cdq    
  41f2b2:	jno    0x41f2a0
  41f2b4:	aas    
  41f2b5:	jno    0x41f272
  41f2b7:	or     al,0x5a
  41f2b9:	push   eax
  41f2ba:	add    dh,bl
  41f2bc:	jge    0x41f296
  41f2be:	imul   esi,DWORD PTR [esi],0x5d
  41f2c1:	lea    ebx,[ecx-0x6b0ce203]
  41f2c7:	push   es
  41f2c8:	adc    ah,0xaa
  41f2cb:	adc    BYTE PTR [ebx-0x415f8420],0xf4
  41f2d2:	enter  0x8381,0x1f
  41f2d6:	sub    ah,BYTE PTR [ebx+0x6c3d4479]
  41f2dc:	add    bh,BYTE PTR [edi]
  41f2de:	test   al,0xa
  41f2e0:	stc    
  41f2e1:	dec    esp
  41f2e2:	or     ch,BYTE PTR [edi+0x3dcbac2]
  41f2e8:	ins    BYTE PTR es:[edi],dx
  41f2e9:	xor    DWORD PTR [ebx-0x1b2f3fef],esi
  41f2ef:	xor    eax,edi
  41f2f1:	enter  0xd4d6,0xbe
  41f2f5:	adc    dl,BYTE PTR [ecx-0x27]
  41f2f8:	adc    bl,cl
  41f2fa:	mov    ah,0x58
  41f2fc:	out    dx,al
  41f2fd:	mov    bh,0x9a
  41f2ff:	sbb    eax,0x8973f7a5
  41f304:	mov    al,0x8b
  41f306:	cmp    DWORD PTR ds:0xe674a9f2,0xffffffda
  41f30d:	adc    eax,0xe455d888
  41f312:	das    
  41f313:	lahf   
  41f314:	(bad)  
  41f315:	outs   dx,BYTE PTR ds:[esi]
  41f316:	cmc    
  41f317:	jle    0x41f322
  41f319:	sub    dl,ah
  41f31b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f31d:	mov    eax,0x47d52a93
  41f322:	(bad)  
  41f323:	fnstsw WORD PTR [ebx-0x7d2c154a]
  41f329:	pop    ebx
  41f32a:	add    BYTE PTR [ebx],cl
  41f32c:	(bad)  
  41f32d:	jns    0x41f2c1
  41f32f:	repz in eax,0xbc
  41f332:	(bad)  
  41f333:	test   BYTE PTR [ebp+0x4b6675cb],cl
  41f339:	daa    
  41f33a:	lea    ebp,[edi]
  41f33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f33d:	iret   
  41f33e:	mov    ebp,0xadb169a0
  41f343:	pop    ebp
  41f344:	jb     0x41f2d4
  41f346:	stos   BYTE PTR es:[edi],al
  41f347:	add    dl,bl
  41f349:	loop   0x41f359
  41f34b:	ds push esi
  41f34d:	sub    ebp,ebp
  41f34f:	fmul   QWORD PTR [ebx+0x4c]
  41f352:	pop    esp
  41f353:	mov    dh,0x41
  41f355:	mov    bh,0x73
  41f357:	mov    dl,0xe0
  41f359:	in     eax,0x72
  41f35b:	(bad)  
  41f35c:	repnz loop 0x41f3b9
  41f35f:	xor    al,0xcc
  41f361:	ds (bad) 
  41f363:	ja     0x41f3a7
  41f365:	inc    ebx
  41f366:	sbb    esp,DWORD PTR [ebp+0x6ae06b7e]
  41f36c:	int    0xdd
  41f36e:	repz shr BYTE PTR [ecx+0x52],0x4a
  41f373:	xchg   ebx,eax
  41f374:	jne    0x41f366
  41f376:	xor    eax,0xe2b93fb
  41f37b:	in     al,dx
  41f37c:	sti    
  41f37d:	xchg   al,bl
  41f37f:	xor    DWORD PTR [ecx+0x35997064],ebx
  41f385:	test   eax,0x21691353
  41f38a:	jl     0x41f318
  41f38c:	into   
  41f38d:	mov    gs,WORD PTR [ebx+esi*8-0x52]
  41f391:	sbb    cl,dl
  41f393:	and    al,0xb0
  41f395:	into   
  41f396:	mov    bh,0x1d
  41f398:	add    eax,0x3bfb1850
  41f39d:	lods   eax,DWORD PTR ds:[esi]
  41f39e:	idiv   DWORD PTR [ebx]
  41f3a0:	dec    edi
  41f3a1:	xchg   ecx,eax
  41f3a2:	pop    eax
  41f3a3:	fwait
  41f3a4:	hlt    
  41f3a5:	mov    ds:0x4f368e0f,eax
  41f3aa:	push   eax
  41f3ab:	ds pop esi
  41f3ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ae:	lods   eax,DWORD PTR ds:[esi]
  41f3af:	imul   esp,DWORD PTR [edi-0x63],0xffffff8f
  41f3b3:	aam    0x95
  41f3b5:	mov    edi,0x3ee3fd2b
  41f3ba:	or     DWORD PTR [ecx+0x4b79c35d],edi
  41f3c0:	fsubr  DWORD PTR [esi+0x4cad0292]
  41f3c6:	push   ecx
  41f3c7:	xor    al,0xf8
  41f3c9:	pop    ds
  41f3ca:	sar    ch,cl
  41f3cc:	cdq    
  41f3cd:	mov    dh,0x41
  41f3cf:	pop    ebx
  41f3d0:	mov    al,BYTE PTR [ebx]
  41f3d2:	daa    
  41f3d3:	ficomp WORD PTR gs:[ebp+0x1f]
  41f3d7:	cs shl dh,1
  41f3da:	cld    
  41f3db:	mov    edx,0x3f2f4620
  41f3e0:	xchg   esi,eax
  41f3e1:	icebp  
  41f3e2:	div    DWORD PTR [ebx-0x5b7bb8de]
  41f3e8:	add    DWORD PTR [edi+0x5db0af40],0xffffffe0
  41f3ef:	stos   BYTE PTR es:[edi],al
  41f3f0:	je     0x41f46f
  41f3f2:	or     BYTE PTR [ecx+0x54],ah
  41f3f5:	dec    esp
  41f3f6:	add    bl,0xff
  41f3f9:	sub    DWORD PTR cs:[ebp-0x51],0x3e7e5052
  41f401:	inc    eax
  41f402:	arpl   di,cx
  41f404:	sub    eax,0x9a426acf
  41f409:	repnz (bad) 
  41f40c:	lods   eax,DWORD PTR ds:[esi]
  41f40d:	mov    al,ds:0x68808e30
  41f412:	inc    ebp
  41f413:	add    BYTE PTR [ebx-0x61],cl
  41f416:	and    eax,0xe4afaa9a
  41f41b:	cmp    dl,bl
  41f41d:	xor    al,0xab
  41f41f:	adc    ebp,DWORD PTR [bx+0x7c]
  41f423:	fimul  WORD PTR [ebp+ecx*8+0x2289aa6f]
  41f42a:	test   ebp,0x22e635cb
  41f430:	(bad)  
  41f431:	sub    eax,esi
  41f433:	mov    DWORD PTR [edx-0x17],edi
  41f436:	mov    bh,0xd6
  41f438:	inc    esp
  41f439:	aad    0xb6
  41f43b:	and    BYTE PTR [edx],bl
  41f43d:	enter  0x7e0c,0xaf
  41f441:	xchg   ecx,eax
  41f442:	and    bl,dl
  41f444:	rcr    dh,1
  41f446:	hlt    
  41f447:	mov    al,dl
  41f449:	inc    esp
  41f44a:	aam    0xac
  41f44c:	sub    DWORD PTR es:[edi+0x74097769],ecx
  41f453:	nop
  41f454:	iret   
  41f455:	leave  
  41f456:	aam    0xa0
  41f458:	inc    ecx
  41f459:	jp     0x41f48f
  41f45b:	xchg   ebp,eax
  41f45c:	adc    DWORD PTR [edx],edi
  41f45e:	and    DWORD PTR [edx-0xfb26f35],esi
  41f464:	in     eax,0xfa
  41f466:	cmp    al,0x53
  41f468:	push   ss
  41f469:	outs   dx,DWORD PTR ds:[esi]
  41f46a:	int    0xa0
  41f46c:	or     ebx,DWORD PTR [edi-0x1]
  41f46f:	xchg   ebp,eax
  41f470:	std    
  41f471:	ss int3 
  41f473:	inc    ecx
  41f474:	sub    al,0x19
  41f476:	dec    edi
  41f477:	jmp    0x55bd95ad
  41f47c:	pop    eax
  41f47d:	cmp    eax,0x249daa60
  41f482:	sub    edi,DWORD PTR ds:0xe0c9b909
  41f488:	and    BYTE PTR [esi+ecx*4-0x543e47ac],cl
  41f48f:	and    BYTE PTR [ebp-0x1],ch
  41f492:	dec    DWORD PTR [edx]
  41f494:	or     ecx,eax
  41f496:	fucom  st(1)
  41f498:	stos   BYTE PTR es:[edi],al
  41f499:	mul    DWORD PTR [eax+0x7d]
  41f49c:	ss dec ebp
  41f49e:	lea    ebx,[edx+ebp*1+0x3bec6ef1]
  41f4a5:	push   edi
  41f4a6:	daa    
  41f4a7:	inc    esi
  41f4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4a9:	(bad)  
  41f4aa:	xchg   DWORD PTR [eax+0x1bbf5dba],eax
  41f4b0:	aad    0x62
  41f4b2:	in     eax,0xf9
  41f4b4:	in     al,dx
  41f4b5:	hlt    
  41f4b6:	lods   eax,DWORD PTR ds:[esi]
  41f4b7:	inc    esi
  41f4b8:	cmp    edx,DWORD PTR [edx+0x46dfde3f]
  41f4be:	inc    ebx
  41f4bf:	xchg   ebx,eax
  41f4c0:	jbe    0x41f495
  41f4c2:	pop    es
  41f4c3:	repnz popf 
  41f4c5:	push   0xffffffa9
  41f4c7:	inc    ebx
  41f4c8:	div    BYTE PTR [eax+0x25a4389b]
  41f4ce:	enter  0xcf19,0x27
  41f4d2:	push   0xe358b36
  41f4d7:	inc    ebp
  41f4d8:	mov    edi,DWORD PTR [esi]
  41f4da:	daa    
  41f4db:	xchg   edi,eax
  41f4dc:	mov    dl,0xe2
  41f4de:	shl    edx,1
  41f4e0:	lock push 0x194b76a5
  41f4e6:	popa   
  41f4e7:	jns    0x41f4e0
  41f4e9:	mov    dl,0x3
  41f4eb:	loopne 0x41f4ec
  41f4ed:	fcomi  st,st(7)
  41f4ef:	ins    BYTE PTR es:[edi],dx
  41f4f0:	ja     0x41f490
  41f4f2:	fsub   DWORD PTR [ebp+eiz*1+0x29]
  41f4f6:	push   ebp
  41f4f7:	push   es
  41f4f8:	fidivr WORD PTR [esi-0x41]
  41f4fb:	jg     0x41f4c6
  41f4fd:	fsubr  QWORD PTR [ebx]
  41f4ff:	jb     0x41f4f9
  41f501:	adc    DWORD PTR [ebp-0x7ce4a50c],ecx
  41f507:	adc    ch,bl
  41f509:	inc    edx
  41f50a:	xchg   ebp,eax
  41f50b:	pop    es
  41f50c:	push   ss
  41f50d:	sub    esi,edx
  41f50f:	out    dx,al
  41f510:	mov    eax,0x908c21d1
  41f515:	inc    ebx
  41f516:	js     0x41f4c4
  41f518:	xchg   edi,eax
  41f519:	pop    es
  41f51a:	hlt    
  41f51b:	mov    ah,0x3c
  41f51d:	pop    edx
  41f51e:	loopne 0x41f506
  41f520:	adc    BYTE PTR [edx+0x51],ah
  41f523:	jno    0x41f565
  41f525:	inc    ecx
  41f526:	jg     0x41f4f3
  41f528:	or     BYTE PTR [esi+0x549588ae],dl
  41f52e:	push   ds
  41f52f:	sub    DWORD PTR [esi+0x2498a612],esi
  41f535:	jl     0x41f59d
  41f537:	xchg   ecx,eax
  41f538:	inc    esi
  41f539:	rol    BYTE PTR [esi],1
  41f53b:	cmp    al,0x1a
  41f53d:	rcl    BYTE PTR [ebx+ecx*8+0x75016cb5],cl
  41f544:	dec    edi
  41f545:	push   eax
  41f546:	xor    DWORD PTR [ebp-0x38],eax
  41f549:	mov    ds:0x50cc579f,al
  41f54e:	push   ebx
  41f54f:	add    ebp,DWORD PTR [ecx+0x2a373814]
  41f555:	mov    DWORD PTR [edx-0x59],esi
  41f558:	mov    ecx,0xd0752e6f
  41f55d:	retf   
  41f55e:	xor    ch,BYTE PTR [ecx-0x5]
  41f561:	inc    ebx
  41f562:	and    BYTE PTR [ecx-0x5d0f869e],dh
  41f568:	aas    
  41f569:	cld    
  41f56a:	mov    ebp,esi
  41f56c:	push   ss
  41f56d:	xor    eax,0x1291221e
  41f572:	sbb    al,0xf
  41f574:	xor    DWORD PTR [ebx+0x58],ecx
  41f577:	xchg   DWORD PTR [eax-0x47],ebx
  41f57a:	or     eax,0x687e9364
  41f57f:	cdq    
  41f580:	or     eax,0xdbefa1be
  41f585:	fld    TBYTE PTR [esi+0x5c]
  41f588:	inc    esp
  41f589:	jns    0x41f52d
  41f58b:	fmul   st,st(6)
  41f58d:	not    DWORD PTR [edi+0x2c70baa]
  41f593:	jp     0x41f5e7
  41f595:	ret    0x1a4c
  41f598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f599:	xchg   DWORD PTR [ebx+0x4277f952],esi
  41f59f:	pop    eax
  41f5a0:	cdq    
  41f5a1:	sbb    edx,DWORD PTR [esp+ebx*2]
  41f5a4:	push   ebx
  41f5a5:	frstor [ebx+0x45]
  41f5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a9:	ror    BYTE PTR [edi+esi*1-0x27b00e26],cl
  41f5b0:	(bad)  
  41f5b1:	inc    ecx
  41f5b2:	loopne 0x41f576
  41f5b4:	sub    BYTE PTR [eax+0x5e],dl
  41f5b7:	cdq    
  41f5b8:	sbb    esi,DWORD PTR [bp+di]
  41f5bb:	gs scas eax,DWORD PTR es:[edi]
  41f5bd:	mov    bl,0xb8
  41f5bf:	lock daa 
  41f5c1:	or     DWORD PTR [edi+eiz*8-0x42323df3],esp
  41f5c8:	repnz loope 0x41f5ae
  41f5cb:	cwde   
  41f5cc:	push   edi
  41f5cd:	sub    esi,DWORD PTR [ecx+esi*1-0x5]
  41f5d1:	inc    ebp
  41f5d2:	mov    esp,0x150d36f4
  41f5d7:	inc    edi
  41f5d8:	std    
  41f5d9:	test   cl,al
  41f5db:	outs   dx,DWORD PTR ds:[esi]
  41f5dc:	or     DWORD PTR [ebp+0x421e993c],ebp
  41f5e2:	mov    esp,0x812d72a0
  41f5e7:	shr    BYTE PTR [ebp+eiz*2-0x33],cl
  41f5eb:	push   edx
  41f5ec:	cwde   
  41f5ed:	repnz mov bl,0x3
  41f5f0:	pop    es
  41f5f1:	mov    ebx,eax
  41f5f3:	nop
  41f5f4:	shl    DWORD PTR [esi],0x9b
  41f5f7:	imul   esp,DWORD PTR [ebx-0x65],0x8be6cf1d
  41f5fe:	popf   
  41f5ff:	fcomp  DWORD PTR es:[esi-0x4198474d]
  41f606:	push   ecx
  41f607:	add    bh,BYTE PTR [edx]
  41f609:	pop    ecx
  41f60a:	sub    esi,DWORD PTR [eax]
  41f60c:	cmp    al,BYTE PTR [edi]
  41f60e:	test   eax,0x99df93a5
  41f613:	adc    al,BYTE PTR [ecx-0x42]
  41f616:	repnz xlat BYTE PTR ds:[ebx]
  41f618:	mov    bl,0x88
  41f61a:	shl    ebp,0xd8
  41f61d:	addr16 dec ecx
  41f61f:	and    eax,0x1f401b4e
  41f624:	push   ds
  41f625:	push   eax
  41f626:	es mov ebp,0xdfb35d2a
  41f62c:	pop    ebp
  41f62d:	inc    eax
  41f62e:	cmp    al,0xdb
  41f630:	mov    bh,0xc5
  41f632:	xchg   edi,eax
  41f633:	nop
  41f634:	dec    esp
  41f635:	out    dx,al
  41f636:	repnz add DWORD PTR [esi-0x37],esi
  41f63a:	aaa    
  41f63b:	inc    eax
  41f63c:	pop    edi
  41f63d:	xchg   edx,eax
  41f63e:	add    al,0x1d
  41f641:	daa    
  41f642:	mov    al,0x87
  41f644:	pop    ebx
  41f645:	inc    eax
  41f646:	sahf   
  41f647:	xchg   edi,eax
  41f648:	frstor [edi-0x45]
  41f64b:	cs push es
  41f64d:	ss jmp 0xe43e:0x949c8779
  41f655:	xor    eax,0x59213d61
  41f65a:	push   0x342b4e75
  41f65f:	sub    dh,ch
  41f661:	sub    ecx,DWORD PTR [ebx+esi*4]
  41f664:	xchg   ecx,eax
  41f665:	fs loope 0x41f61f
  41f668:	and    eax,0xfaa5611b
  41f66d:	(bad)  
  41f66e:	pop    ss
  41f66f:	push   edi
  41f670:	and    ecx,DWORD PTR [eax+0x3ada71a5]
  41f676:	pop    ds
  41f677:	daa    
  41f678:	jnp    0x41f6ca
  41f67a:	push   ss
  41f67b:	jno    0x41f65e
  41f67d:	push   cs
  41f67e:	fcomp  DWORD PTR [ebp+0x47]
  41f681:	xchg   edi,eax
  41f682:	cs xor ch,dl
  41f685:	pop    ebp
  41f686:	scas   eax,DWORD PTR es:[edi]
  41f687:	iret   
  41f688:	jmp    0x1690:0x477b2781
  41f68f:	xchg   esp,eax
  41f690:	pop    edi
  41f691:	inc    esp
  41f692:	fcom   QWORD PTR [esi]
  41f694:	and    dl,dh
  41f696:	sub    al,0x56
  41f698:	arpl   WORD PTR [eax],dx
  41f69a:	sub    BYTE PTR [esi+edi*2],dl
  41f69d:	adc    eax,0x1234a21c
  41f6a2:	loope  0x41f6b2
  41f6a4:	loop   0x41f6e7
  41f6a6:	imul   eax,DWORD PTR [edi-0x52],0xffffffc7
  41f6aa:	mov    WORD PTR [edi-0x1060a3e6],cs
  41f6b0:	pop    edi
  41f6b1:	or     DWORD PTR [ebp-0x66],eax
  41f6b4:	adc    edi,esp
  41f6b6:	test   DWORD PTR [eax+ebp*1-0x5ccfd752],0x6b3d74ec
  41f6c1:	cmp    al,0x94
  41f6c3:	sub    esi,DWORD PTR ds:0xad9fb774
  41f6c9:	dec    esp
  41f6ca:	inc    edi
  41f6cb:	iret   
  41f6cc:	and    eax,0xde00e97b
  41f6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d2:	jge    0x41f695
  41f6d4:	add    BYTE PTR [ecx-0x67],0xf5
  41f6d8:	fbstp  TBYTE PTR [ecx+eax*4-0x59]
  41f6dc:	pop    ecx
  41f6dd:	mov    al,ds:0x34017207
  41f6e3:	sub    bh,BYTE PTR [edx+0x141aef02]
  41f6e9:	call   0xc9650713
  41f6ee:	cmp    eax,0x940bd2e2
  41f6f3:	imul   edi,DWORD PTR [eax+0x51c5ee4c],0x71d5bd69
  41f6fd:	inc    esi
  41f6fe:	(bad)  [edx]
  41f700:	adc    eax,0x562788be
  41f705:	mov    bh,0xb7
  41f707:	jb     0x41f77e
  41f709:	fld    DWORD PTR [ecx+0x6f]
  41f70c:	jae    0x41f6dd
  41f70e:	xchg   esp,eax
  41f70f:	mov    ecx,0x592ce90a
  41f714:	fisubr DWORD PTR [eax+0x6a]
  41f717:	sbb    DWORD PTR [eax],edi
  41f719:	enter  0x2943,0x19
  41f71d:	mov    dl,BYTE PTR [eax-0x3]
  41f720:	inc    edi
  41f721:	add    bh,0x9b
  41f724:	push   eax
  41f725:	cdq    
  41f726:	(bad)  
  41f727:	adc    edx,0x4c7a7716
  41f72d:	sub    BYTE PTR [ebp+0x6f],bh
  41f730:	lods   al,BYTE PTR ds:[esi]
  41f731:	les    ebx,FWORD PTR [edx-0x4f521065]
  41f737:	adc    dh,dh
  41f739:	mov    ecx,0xcd04a698
  41f73e:	cld    
  41f73f:	enter  0xb4ac,0xa5
  41f743:	ja     0x41f745
  41f745:	into   
  41f746:	test   BYTE PTR [esi-0x76],ah
  41f749:	sub    eax,0x7413af4c
  41f74e:	fld    TBYTE PTR [esi]
  41f750:	sub    al,BYTE PTR [esi+0xf28f066]
  41f756:	xor    DWORD PTR [ecx+eiz*8-0x5ea15342],edx
  41f75d:	imul   ecx,edi,0xc83e5299
  41f763:	dec    esp
  41f764:	loopne 0x41f7c7
  41f766:	sbb    edx,DWORD PTR [ecx-0x54]
  41f769:	cmc    
  41f76a:	inc    esi
  41f76b:	xchg   DWORD PTR [edi-0x474b1156],edx
  41f771:	jp     0x41f7f1
  41f773:	pop    ds
  41f774:	test   DWORD PTR [edi+esi*1+0xe49f559],edx
  41f77b:	mov    bl,0x85
  41f77d:	ds or  al,0x31
  41f780:	jmp    0x41f703
  41f782:	cwde   
  41f783:	aad    0xb9
  41f785:	jmp    0xc96a:0x38779125
  41f78c:	sti    
  41f78d:	cmc    
  41f78e:	push   es
  41f78f:	stos   BYTE PTR es:[edi],al
  41f790:	sub    dl,BYTE PTR [edx]
  41f792:	push   edx
  41f793:	enter  0x3a8c,0x5
  41f797:	ret    0x446
  41f79a:	push   ebp
  41f79b:	mov    ebp,0xeca9700e
  41f7a0:	ins    DWORD PTR es:[edi],dx
  41f7a1:	xchg   edi,eax
  41f7a2:	add    eax,0xf5321dd6
  41f7a7:	jle    0x41f7e5
  41f7a9:	adc    ecx,eax
  41f7ab:	scas   eax,DWORD PTR es:[edi]
  41f7ac:	fstp   QWORD PTR [edi]
  41f7ae:	out    0x74,al
  41f7b0:	(bad)  
  41f7b1:	loop   0x41f7a6
  41f7b3:	xchg   esi,eax
  41f7b4:	enter  0xa45e,0x20
  41f7b8:	pushf  
  41f7b9:	push   eax
  41f7ba:	pop    edx
  41f7bb:	cmp    DWORD PTR ds:0x8918e4f2,ebx
  41f7c1:	mov    ebx,0x77af1d07
  41f7c6:	cs mov eax,0x2d00fc9a
  41f7cc:	addr16 ja 0x41f760
  41f7cf:	jnp    0x41f813
  41f7d1:	dec    eax
  41f7d2:	sahf   
  41f7d3:	inc    ebx
  41f7d4:	shr    DWORD PTR [ecx-0x4d],1
  41f7d7:	push   ss
  41f7d8:	call   0xec57ec9e
  41f7dd:	xor    eax,0x287c336b
  41f7e2:	or     eax,0xe55a16db
  41f7e7:	pop    ecx
  41f7e8:	cmp    al,0x2b
  41f7ea:	fiadd  WORD PTR [edx+0x48]
  41f7ed:	fcomp  QWORD PTR [ebx]
  41f7ef:	das    
  41f7f0:	out    dx,eax
  41f7f1:	mov    eax,0x8af2a9c0
  41f7f6:	cmp    eax,0x47a1a94
  41f7fb:	inc    eax
  41f7fc:	mov    esi,0x2915141f
  41f801:	xlat   BYTE PTR ds:[ebx]
  41f802:	shr    ch,0x4a
  41f805:	sub    ah,BYTE PTR [ecx+0x7e]
  41f808:	fisttp QWORD PTR [edx+eiz*8-0x1e]
  41f80c:	(bad)  
  41f80d:	fldenv [eax+esi*1+0x1b048be4]
  41f814:	or     esp,DWORD PTR [ecx]
  41f816:	sub    eax,0x92e7b658
  41f81b:	rcr    dh,cl
  41f81d:	mov    ch,0x8b
  41f81f:	adc    eax,0x352dd1bc
  41f824:	pop    esp
  41f825:	fs jae 0x41f816
  41f828:	scas   al,BYTE PTR es:[edi]
  41f829:	(bad)  
  41f82a:	add    eax,0x6d2d02c6
  41f82f:	lods   eax,DWORD PTR ds:[esi]
  41f830:	test   BYTE PTR [edx],cl
  41f832:	(bad)  
  41f833:	sar    BYTE PTR [edx],1
  41f835:	adc    edi,0x72ee1c69
  41f83b:	arpl   WORD PTR [eax+0xc],di
  41f83e:	push   ecx
  41f83f:	add    dl,BYTE PTR [ecx+0xc7f11c8]
  41f845:	xor    BYTE PTR [ecx+edx*2+0x46],dl
  41f849:	fidivr DWORD PTR [eax]
  41f84b:	(bad)  
  41f84c:	iret   
  41f84d:	es mov esp,0xd2f18438
  41f853:	cdq    
  41f854:	(bad)  
  41f855:	addr16 mov edi,0x66329e5b
  41f85b:	std    
  41f85c:	dec    eax
  41f85d:	inc    edi
  41f85e:	jo     0x41f8c1
  41f860:	mov    esi,0x85a935d4
  41f865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f866:	xor    bh,BYTE PTR [edx]
  41f868:	(bad)  
  41f869:	pop    ebx
  41f86a:	fldcw  WORD PTR [esi+0x64327faa]
  41f870:	popa   
  41f871:	int    0xf8
  41f873:	(bad)  
  41f874:	ss and eax,0xbbc4cf9d
  41f87a:	fdivr  DWORD PTR [ecx+0x31e4aa63]
  41f880:	add    dl,ah
  41f882:	cmp    esp,ecx
  41f884:	adc    DWORD PTR [ecx+0x38],edx
  41f887:	inc    esp
  41f888:	pop    eax
  41f889:	enter  0xa3e4,0xaf
  41f88d:	inc    edx
  41f88e:	ins    BYTE PTR es:[edi],dx
  41f88f:	add    cl,BYTE PTR [edi+0x7b]
  41f892:	sbb    DWORD PTR [ebp+0x57a2f114],esi
  41f898:	push   edi
  41f899:	xchg   esi,eax
  41f89a:	lea    ebp,[ecx-0x2a]
  41f89d:	pop    ebp
  41f89e:	pop    edx
  41f89f:	push   ecx
  41f8a0:	or     ax,0x9aed
  41f8a4:	in     al,0xa7
  41f8a6:	es add al,0xbd
  41f8a9:	jnp    0x41f8e1
  41f8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ac:	lods   eax,DWORD PTR ds:[esi]
  41f8ad:	les    ebp,FWORD PTR [bx]
  41f8b0:	bswap  ecx
  41f8b2:	ja     0x41f8ce
  41f8b4:	cld    
  41f8b5:	jnp    0x41f8aa
  41f8b7:	in     eax,dx
  41f8b8:	mov    ecx,0xa93845bc
  41f8bd:	mov    eax,ds:0xcce71ca2
  41f8c2:	shl    BYTE PTR [ebx+0x19],cl
  41f8c5:	mov    ah,0xf7
  41f8c7:	repnz (bad) 
  41f8c9:	inc    eax
  41f8ca:	sahf   
  41f8cb:	and    ch,BYTE PTR [ebp-0x1e]
  41f8ce:	loopne 0x41f8d7
  41f8d0:	mov    WORD PTR [ecx],ds
  41f8d2:	(bad)  
  41f8d4:	in     eax,dx
  41f8d5:	fsincos 
  41f8d7:	xchg   ecx,edi
  41f8d9:	retf   0x86c
  41f8dc:	ins    BYTE PTR es:[edi],dx
  41f8dd:	fiadd  WORD PTR ds:[eax+0x69b25e76]
  41f8e4:	xchg   ebp,eax
  41f8e5:	out    dx,eax
  41f8e6:	cwde   
  41f8e7:	or     DWORD PTR [ebp-0x571ccc40],edi
  41f8ed:	jbe    0x41f895
  41f8ef:	int3   
  41f8f0:	js     0x41f966
  41f8f2:	pop    edi
  41f8f3:	shr    DWORD PTR [edx+esi*8],0xbe
  41f8f7:	xlat   BYTE PTR ds:[ebx]
  41f8f8:	scas   al,BYTE PTR es:[edi]
  41f8f9:	scas   al,BYTE PTR es:[edi]
  41f8fa:	retf   0xbba3
  41f8fd:	adc    al,0x13
  41f8ff:	out    0x32,eax
  41f901:	dec    ecx
  41f902:	and    al,0x73
  41f904:	pop    DWORD PTR [edi]
  41f906:	bound  ebp,QWORD PTR [ebp+0xab7af9e]
  41f90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90d:	in     al,dx
  41f90e:	mov    ah,0xe1
  41f910:	pop    es
  41f911:	xor    DWORD PTR [ebx-0x20],ebp
  41f914:	loope  0x41f90c
  41f916:	inc    ebx
  41f917:	mov    dh,0x29
  41f919:	jecxz  0x41f911
  41f91b:	add    ecx,0x76e81e99
  41f921:	sbb    al,0xf
  41f923:	pop    ebx
  41f924:	cmc    
  41f925:	lock cdq 
  41f927:	and    eax,0x29935dcb
  41f92c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92d:	pop    ds
  41f92e:	dec    ebp
  41f92f:	fst    QWORD PTR [ebx+ebx*8+0x23]
  41f933:	mov    ebx,0x7869fcd2
  41f938:	cmc    
  41f939:	inc    esp
  41f93a:	pop    esi
  41f93b:	dec    ebp
  41f93c:	dec    ebp
  41f93d:	not    DWORD PTR [ecx-0x68ec6bcd]
  41f943:	mov    al,ds:0x1e767ace
  41f948:	push   ecx
  41f949:	les    ebp,FWORD PTR [ecx-0x12]
  41f94c:	daa    
  41f94d:	ins    BYTE PTR es:[edi],dx
  41f94e:	(bad)  
  41f94f:	fsubr  DWORD PTR [ecx-0x7f]
  41f952:	bnd jno 0x41f96c
  41f955:	pop    esp
  41f956:	xchg   ebp,eax
  41f957:	inc    esi
  41f958:	(bad)  
  41f959:	into   
  41f95a:	adc    esp,eax
  41f95c:	test   DWORD PTR ds:0x595cc69e,esi
  41f962:	mov    ah,0x77
  41f964:	addr16 ror bh,0x56
  41f968:	rcr    BYTE PTR [eax-0x36a94dba],cl
  41f96e:	jge    0x41f9e5
  41f970:	xchg   esi,eax
  41f971:	rcr    BYTE PTR [edx+0x15],cl
  41f974:	sub    dh,dl
  41f976:	shl    DWORD PTR [ebp+0x19],1
  41f979:	adc    dl,ah
  41f97b:	push   0xffffffcd
  41f97d:	push   ebx
  41f97e:	jns    0x41f991
  41f980:	stc    
  41f981:	cmp    al,0x8f
  41f983:	inc    esi
  41f984:	shl    cl,cl
  41f986:	fisttp DWORD PTR [esi]
  41f988:	dec    ecx
  41f989:	(bad)  
  41f98a:	xlat   BYTE PTR ds:[ebx]
  41f98b:	pop    ds
  41f98c:	out    0xe7,al
  41f98e:	call   DWORD PTR [ebp+0x4175ae3f]
  41f994:	stos   DWORD PTR es:[edi],eax
  41f995:	mov    ecx,0x2a8e2ad0
  41f99a:	adc    al,0xae
  41f99c:	jno    0x41f9be
  41f99e:	xor    eax,0xde77a9dc
  41f9a3:	loopne 0x41f9f2
  41f9a5:	push   eax
  41f9a6:	out    dx,al
  41f9a7:	mov    bh,0x16
  41f9a9:	jmp    0x41fa0b
  41f9ab:	icebp  
  41f9ac:	dec    esi
  41f9ad:	retf   
  41f9ae:	stc    
  41f9af:	das    
  41f9b0:	inc    ecx
  41f9b1:	mov    bh,0x71
  41f9b3:	xor    bx,WORD PTR [eax-0x71734821]
  41f9ba:	ins    BYTE PTR es:[edi],dx
  41f9bb:	sub    eax,0x89955a35
  41f9c0:	adc    ch,al
  41f9c2:	mov    ecx,0x670492ee
  41f9c7:	push   ecx
  41f9c8:	xor    DWORD PTR [edx+ebp*4-0xa],eax
  41f9cc:	sub    BYTE PTR [edi+0x7175db03],cl
  41f9d2:	loopne 0x41f98d
  41f9d4:	mov    esi,0xdc436570
  41f9d9:	call   0x64ac:0xd0d38742
  41f9e0:	test   al,0xdc
  41f9e2:	mov    ds:0x321fa661,al
  41f9e7:	push   0x2c652356
  41f9ec:	ret    
  41f9ed:	pop    ecx
  41f9ee:	sbb    BYTE PTR [esi-0x78],dh
  41f9f1:	in     eax,0x4a
  41f9f3:	push   0x51
  41f9f5:	pop    esp
  41f9f6:	or     BYTE PTR [ebp-0x45],al
  41f9f9:	mov    ds:0x69096b31,eax
  41f9fe:	int    0x5
  41fa00:	(bad)  
  41fa01:	jbe    0x41f98a
  41fa03:	mov    ah,0xf
  41fa05:	retf   0x113
  41fa08:	inc    eax
  41fa09:	dec    ebp
  41fa0a:	fstp   DWORD PTR [eax]
  41fa0c:	xchg   esp,eax
  41fa0d:	jno    0x41fa52
  41fa0f:	out    dx,eax
  41fa10:	sub    BYTE PTR [ebx-0x54],ch
  41fa13:	ret    
  41fa14:	(bad)  
  41fa15:	adc    BYTE PTR ds:0x1dc2e791,bl
  41fa1b:	mov    cs,edi
  41fa1d:	mov    ds,edi
  41fa1f:	push   cs
  41fa20:	mov    edi,0xdf0f3992
  41fa25:	cmp    cl,BYTE PTR es:0x673e7c16
  41fa2c:	adc    al,0xb4
  41fa2e:	push   cs
  41fa2f:	sbb    al,0xc0
  41fa31:	or     cl,BYTE PTR [eax+0xaf61f69]
  41fa37:	std    
  41fa38:	arpl   WORD PTR [edi-0xe],dx
  41fa3b:	scas   eax,DWORD PTR es:[edi]
  41fa3c:	data16 sub al,0xa9
  41fa3f:	out    dx,al
  41fa40:	clc    
  41fa41:	das    
  41fa42:	pushf  
  41fa43:	push   ss
  41fa44:	scas   al,BYTE PTR es:[edi]
  41fa45:	xor    ebp,ebp
  41fa47:	(bad)  
  41fa49:	emms   
  41fa4b:	ret    0x11a
  41fa4e:	mov    dh,0x8c
  41fa50:	mov    BYTE PTR [edx+esi*2+0x22],dh
  41fa54:	mov    BYTE PTR [edx+0x2d51b8ca],cl
  41fa5a:	push   ss
  41fa5b:	repz push esp
  41fa5d:	push   edi
  41fa5e:	push   0xffffffa6
  41fa60:	xchg   edx,eax
  41fa61:	mov    esi,0x95a9d06a
  41fa66:	lds    esp,FWORD PTR [esi+eax*1]
  41fa69:	xchg   BYTE PTR [eax+0x60],al
  41fa6c:	ds int 0xfe
  41fa6f:	mov    ebp,0x7f5d4d65
  41fa74:	mov    ecx,0x92b79090
  41fa79:	or     al,0xa1
  41fa7b:	aas    
  41fa7c:	scas   al,BYTE PTR es:[edi]
  41fa7d:	sbb    BYTE PTR [ebx-0x24],0x4f
  41fa81:	std    
  41fa82:	sbb    eax,0xd47a8f3c
  41fa87:	jmp    0xd99:0x1208571d
  41fa8e:	pop    ds
  41fa8f:	sub    DWORD PTR [ebp-0x10],ecx
  41fa92:	fdiv   QWORD PTR [ecx+0x65]
  41fa95:	jp     0x41facc
  41fa97:	sbb    DWORD PTR [edx-0x42],ebp
  41fa9a:	test   BYTE PTR [ebx+0x54],ah
  41fa9d:	loope  0x41fa88
  41fa9f:	jmp    0x867ad12c
  41faa4:	cmp    ebx,DWORD PTR [esi]
  41faa6:	cmp    al,0x1
  41faa8:	lods   eax,DWORD PTR ds:[esi]
  41faa9:	pop    edi
  41faaa:	xchg   edx,eax
  41faab:	adc    dl,BYTE PTR [edi]
  41faad:	adc    BYTE PTR [ebp+0x26c67935],ch
  41fab3:	retf   0xb07f
  41fab6:	mov    bl,0xe9
  41fab8:	and    ecx,DWORD PTR [edx-0x29ae2708]
  41fabe:	xchg   edi,eax
  41fabf:	xchg   esi,eax
  41fac0:	cmp    al,bh
  41fac2:	inc    edi
  41fac3:	adc    ah,BYTE PTR [ecx+0x6]
  41fac6:	pop    edi
  41fac7:	dec    esp
  41fac8:	cmp    ah,BYTE PTR [esi]
  41faca:	pop    ss
  41facb:	jg     0x41fafc
  41facd:	jns    0x41fb27
  41facf:	sub    DWORD PTR fs:[esi-0x26],ebx
  41fad3:	lock adc esi,DWORD PTR [edi+0x44a38b0c]
  41fada:	or     bh,BYTE PTR ds:0x3560faaa
  41fae0:	(bad)  
  41fae1:	and    bl,dh
  41fae3:	ja     0x41fb5c
  41fae5:	lds    esi,FWORD PTR [eax+0x6f92a053]
  41faeb:	dec    edi
  41faec:	and    al,0x10
  41faee:	leave  
  41faef:	sbb    ecx,DWORD PTR [edi+ebx*8-0x41d7dfda]
  41faf6:	cmp    edx,DWORD PTR [edx+0x758d4659]
  41fafc:	jle    0x41fb6f
  41fafe:	sub    eax,0x1fa37051
  41fb03:	and    al,BYTE PTR [esi+eax*1+0x13]
  41fb07:	and    bl,BYTE PTR [edx+0x11]
  41fb0a:	xlat   BYTE PTR ds:[ebx]
  41fb0b:	stos   DWORD PTR es:[edi],eax
  41fb0c:	ror    BYTE PTR [ebp-0x63],0x7b
  41fb10:	or     al,BYTE PTR [ebx]
  41fb12:	adc    BYTE PTR [eax],ah
  41fb14:	inc    edi
  41fb15:	inc    ecx
  41fb16:	adc    DWORD PTR ds:0x1ad83d90,0xffffff94
  41fb1d:	pushf  
  41fb1e:	std    
  41fb1f:	stos   BYTE PTR es:[edi],al
  41fb20:	in     al,0xd
  41fb22:	mov    esp,0x1bab4c36
  41fb27:	not    DWORD PTR ds:0x2b9965f3
  41fb2d:	xchg   esp,eax
  41fb2e:	sbb    DWORD PTR [eax+ebx*4-0x3b],0xdfec6727
  41fb36:	jg     0x41fb16
  41fb38:	popa   
  41fb39:	stos   BYTE PTR es:[edi],al
  41fb3a:	loopne 0x41fb25
  41fb3c:	xchg   ebp,eax
  41fb3d:	enter  0x6c77,0x64
  41fb41:	out    0xcd,eax
  41fb43:	test   DWORD PTR [esi-0x14449aa5],0xe7bb3ddf
  41fb4d:	push   ecx
  41fb4e:	inc    esi
  41fb4f:	pushf  
  41fb50:	dec    ebp
  41fb51:	into   
  41fb52:	inc    esp
  41fb53:	dec    esp
  41fb54:	mov    ds,WORD PTR [eax+0x31e4cade]
  41fb5a:	mov    edi,0x7f7ec72
  41fb5f:	stos   DWORD PTR es:[edi],eax
  41fb60:	loop   0x41fb55
  41fb62:	or     ebx,DWORD PTR [ecx+0x27]
  41fb65:	pop    ss
  41fb66:	data16 sahf 
  41fb68:	dec    esp
  41fb69:	cli    
  41fb6a:	jle    0x41fbc2
  41fb6c:	ret    
  41fb6d:	daa    
  41fb6e:	in     eax,0x24
  41fb70:	ror    BYTE PTR fs:[ecx-0x5b],0x31
  41fb75:	jmp    0x9c4b27d4
  41fb7a:	cmp    al,0x3f
  41fb7c:	push   esp
  41fb7d:	inc    ebx
  41fb7e:	mov    al,ds:0x38bac937
  41fb83:	stos   DWORD PTR es:[edi],eax
  41fb84:	sti    
  41fb85:	in     eax,0x20
  41fb87:	scas   eax,DWORD PTR es:[edi]
  41fb88:	nop
  41fb89:	push   esp
  41fb8a:	sar    DWORD PTR [eax],1
  41fb8c:	inc    ebp
  41fb8d:	sbb    eax,0x604b9659
  41fb92:	mov    BYTE PTR [ecx+0x6],ah
  41fb95:	fst    st(2)
  41fb97:	ret    0x72c8
  41fb9a:	mov    dh,0x42
  41fb9c:	add    DWORD PTR [edx+0x78],esp
  41fb9f:	and    bh,BYTE PTR [ecx-0x63bcc155]
  41fba5:	add    eax,0x2aac97e8
  41fbaa:	xchg   esp,eax
  41fbab:	push   es
  41fbac:	add    dl,BYTE PTR [esi-0x5f1eaab9]
  41fbb2:	dec    edi
  41fbb3:	shl    BYTE PTR [esi+0x3647575a],cl
  41fbb9:	sub    BYTE PTR [eax-0x3c],0xbf
  41fbbd:	mov    ebp,0x3010ee6f
  41fbc2:	adc    BYTE PTR [eax-0xd],dl
  41fbc5:	dec    eax
  41fbc6:	mov    ebp,0x7701e527
  41fbcb:	cmp    al,0x7b
  41fbcd:	hlt    
  41fbce:	or     BYTE PTR [ecx],ch
  41fbd0:	pop    edx
  41fbd1:	xchg   bh,dh
  41fbd3:	mov    ah,0x80
  41fbd5:	(bad)  
  41fbd6:	clc    
  41fbd7:	add    eax,0x57f42896
  41fbdc:	ror    BYTE PTR [edi-0x679af08d],cl
  41fbe2:	aas    
  41fbe3:	shl    BYTE PTR [edi],cl
  41fbe5:	cli    
  41fbe6:	sbb    eax,0x9cbe553c
  41fbeb:	lods   al,BYTE PTR ds:[esi]
  41fbec:	mov    ss,WORD PTR [eax-0x37]
  41fbef:	push   ss
  41fbf0:	rcr    DWORD PTR es:[esi+0x3a],0xd1
  41fbf5:	in     eax,0xd3
  41fbf7:	cwde   
  41fbf8:	shl    BYTE PTR [edx+0x321f065],1
  41fbfe:	and    DWORD PTR [edx-0x46c52b99],ebp
  41fc04:	out    0xd0,al
  41fc06:	dec    eax
  41fc07:	ds aad 0x6e
  41fc0a:	xor    ebp,esi
  41fc0c:	cmp    ax,0x194a
  41fc10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc11:	and    eax,0xe6a30fef
  41fc16:	iret   
  41fc17:	aas    
  41fc18:	mov    eax,ds:0xd851346d
  41fc1d:	fiadd  DWORD PTR [edi-0x1efc64cd]
  41fc23:	cmc    
  41fc24:	ds pusha 
  41fc26:	and    al,0x26
  41fc28:	push   esi
  41fc29:	(bad)  
  41fc2b:	lahf   
  41fc2c:	cmp    DWORD PTR [esp+edi*4-0x6e51c4c3],0x65
  41fc34:	cwde   
  41fc35:	imul   ebp,DWORD PTR fs:[esi+esi*4-0x11c71d36],0x3d7f4976
  41fc41:	daa    
  41fc42:	loop   0x41fc26
  41fc44:	cwde   
  41fc45:	inc    ebx
  41fc46:	aam    0xe
  41fc48:	or     ch,bl
  41fc4a:	test   BYTE PTR [esi+0x7665e090],bh
  41fc50:	adc    BYTE PTR [esi+edi*2-0x8],0xa
  41fc55:	xchg   bl,cl
  41fc57:	(bad)  
  41fc58:	push   ds
  41fc59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc5a:	rcl    BYTE PTR [edx+0x67],0x70
  41fc5e:	mov    es,WORD PTR [ecx]
  41fc60:	xchg   edx,eax
  41fc61:	ins    DWORD PTR es:[edi],dx
  41fc62:	arpl   bx,si
  41fc64:	adc    DWORD PTR [eax-0x5e104de8],esi
  41fc6a:	leave  
  41fc6b:	das    
  41fc6c:	pusha  
  41fc6d:	xchg   edi,eax
  41fc6e:	adc    al,0xe9
  41fc70:	push   ebp
  41fc71:	(bad)  
  41fc72:	fsubr  QWORD PTR [edi-0x45c270d8]
  41fc78:	and    ebx,DWORD PTR [ebp-0x48]
  41fc7b:	mov    ecx,?
  41fc7d:	enter  0xe85a,0xaa
  41fc81:	push   es
  41fc82:	or     al,0x2e
  41fc84:	push   ebx
  41fc85:	loopne 0x41fc3d
  41fc87:	call   0xd53d55f3
  41fc8c:	fcmovnbe st,st(4)
  41fc8e:	rcr    DWORD PTR [edi+0x6432a870],1
  41fc94:	dec    esi
  41fc95:	pop    ecx
  41fc96:	sub    BYTE PTR ds:0x86dd44b8,cl
  41fc9c:	mov    WORD PTR [edx-0x6f14f561],ss
  41fca2:	jbe    0x41fc8e
  41fca4:	or     ecx,DWORD PTR [edi-0x11]
  41fca7:	test   edx,esp
  41fca9:	daa    
  41fcaa:	mov    ebx,0x654380bb
  41fcaf:	pop    edx
  41fcb0:	out    0x61,al
  41fcb2:	and    dh,BYTE PTR [edi+0x7bfd61ac]
  41fcb8:	enter  0x887a,0x2
  41fcbc:	add    eax,0x5c84094d
  41fcc1:	or     eax,0xcc5060b0
  41fcc6:	jns    0x41fcb9
  41fcc8:	stc    
  41fcc9:	fldcw  WORD PTR ds:0x1cc94aec
  41fccf:	xor    BYTE PTR [esi+0x2e],al
  41fcd2:	push   ds
  41fcd3:	xchg   edx,eax
  41fcd4:	ins    BYTE PTR es:[edi],dx
  41fcd5:	aaa    
  41fcd6:	and    DWORD PTR [esi],edx
  41fcd8:	inc    ebp
  41fcd9:	in     eax,dx
  41fcda:	ds fadd st,st(1)
  41fcdd:	stc    
  41fcde:	test   eax,0x37bccc08
  41fce3:	mov    eax,eax
  41fce5:	out    dx,al
  41fce6:	mov    esp,0xb189adf1
  41fceb:	sub    DWORD PTR [ecx-0x70],0x1c
  41fcef:	mov    es,WORD PTR [edi+0x30]
  41fcf2:	pop    ds
  41fcf3:	sub    ebx,eax
  41fcf5:	test   eax,0x4516e5c7
  41fcfa:	mov    DWORD PTR [edx+ebx*8+0x2c],ebp
  41fcfe:	mov    eax,ds:0x20c63ca6
  41fd03:	fld    QWORD PTR [esi-0x39]
  41fd06:	lahf   
  41fd07:	(bad)  
  41fd08:	iret   
  41fd09:	xchg   esi,eax
  41fd0a:	push   0xffffffe1
  41fd0c:	push   ebp
  41fd0d:	jae    0x41fd5d
  41fd0f:	scas   al,BYTE PTR es:[edi]
  41fd10:	test   DWORD PTR [ecx],esp
  41fd12:	jle    0x41fcbc
  41fd14:	stos   BYTE PTR es:[edi],al
  41fd15:	push   esp
  41fd16:	in     al,0x83
  41fd18:	cmp    eax,0x40409beb
  41fd1d:	sub    dh,ch
  41fd1f:	enter  0xbe20,0x10
  41fd23:	or     DWORD PTR [eax+0x53f579d5],edx
  41fd29:	cdq    
  41fd2a:	dec    ebp
  41fd2b:	mov    ah,0xe6
  41fd2d:	shr    al,cl
  41fd2f:	ds jmp 0x41fd2f
  41fd32:	add    eax,0xf7c208be
  41fd37:	inc    ecx
  41fd38:	sti    
  41fd39:	add    al,0xcf
  41fd3b:	mov    ebx,0x8b8e8db
  41fd40:	pop    ss
  41fd41:	mov    edi,0x20ae0b21
  41fd46:	fisttp QWORD PTR [ebx+ebx*1]
  41fd49:	xor    eax,0xa151c735
  41fd4e:	adc    eax,0x68ddcadc
  41fd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd54:	fs (bad) 
  41fd56:	fimul  WORD PTR [ebx-0x56ec5a35]
  41fd5c:	xchg   BYTE PTR [ebx-0xe599a0e],ah
  41fd62:	scas   al,BYTE PTR es:[edi]
  41fd63:	cdq    
  41fd64:	jecxz  0x41fdde
  41fd66:	push   esp
  41fd67:	psadbw mm4,QWORD PTR [ebp-0x712ed68c]
  41fd6e:	test   eax,0xf59911ea
  41fd73:	xor    ebx,ebp
  41fd75:	jle    0x41fd6b
  41fd77:	or     BYTE PTR [edi],0x3b
  41fd7a:	pop    ss
  41fd7b:	and    al,0x5a
  41fd7d:	js     0x41fddd
  41fd7f:	jnp    0x41fde5
  41fd81:	aam    0x2b
  41fd83:	not    DWORD PTR [edi+0x7f]
  41fd86:	xlat   BYTE PTR ds:[ebx]
  41fd87:	or     al,0xf8
  41fd89:	inc    edi
  41fd8a:	xchg   ebx,eax
  41fd8b:	test   al,0xc8
  41fd8d:	bnd jnp 0x41fd38
  41fd90:	outs   dx,DWORD PTR ds:[esi]
  41fd91:	mov    esp,DWORD PTR [ebx]
  41fd93:	fild   WORD PTR [ebp-0x4f8aa60e]
  41fd99:	cdq    
  41fd9a:	fisttp QWORD PTR [edi+0x42]
  41fd9d:	(bad)  
  41fd9e:	repnz xchg esi,eax
  41fda0:	aad    0xc9
  41fda2:	out    dx,al
  41fda3:	xchg   edi,eax
  41fda4:	dec    ebx
  41fda5:	xor    al,0x70
  41fda7:	adc    ecx,DWORD PTR ds:0xac879ad4
  41fdad:	and    DWORD PTR [ecx-0x37],0x46
  41fdb1:	dec    ecx
  41fdb2:	jg     0x41fda9
  41fdb4:	sar    BYTE PTR [ecx+0x74],1
  41fdb7:	iret   
  41fdb8:	sub    eax,0xa14c3b95
  41fdbd:	xchg   edx,eax
  41fdbe:	mov    al,0x97
  41fdc0:	repnz cmp BYTE PTR [edi+0x52],dl
  41fdc4:	pop    ebx
  41fdc5:	in     al,0x5f
  41fdc7:	mov    BYTE PTR ds:0xbb87f748,dl
  41fdcd:	sub    eax,0x5443b26f
  41fdd2:	mov    ds:0xb1de2f53,eax
  41fdd7:	sbb    eax,DWORD PTR [esi-0x5f]
  41fdda:	mov    ecx,ebx
  41fddc:	or     DWORD PTR [ebx-0x492a282d],ebp
  41fde2:	mov    ebp,0xf6727f7a
  41fde7:	clc    
  41fde8:	popf   
  41fde9:	pop    ebp
  41fdea:	js     0x41fdc0
  41fdec:	adc    eax,0x83ba3eb1
  41fdf1:	stos   BYTE PTR es:[edi],al
  41fdf2:	clc    
  41fdf3:	shl    BYTE PTR [ebx+edx*1-0x2e4b2674],cl
  41fdfa:	mov    bh,0xee
  41fdfc:	out    0x82,eax
  41fdfe:	cmp    eax,0xe87f83d0
  41fe03:	stos   DWORD PTR es:[edi],eax
  41fe04:	push   0xffffffa8
  41fe06:	(bad)  
  41fe07:	xchg   esp,eax
  41fe08:	addr16 adc ecx,ecx
  41fe0b:	fidiv  WORD PTR [ebx]
  41fe0d:	dec    edi
  41fe0e:	in     eax,0xb7
  41fe10:	inc    ebx
  41fe11:	sub    al,0x22
  41fe13:	loopne 0x41fe02
  41fe15:	inc    ebp
  41fe16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe17:	or     eax,0x26fe77e3
  41fe1c:	xchg   esp,eax
  41fe1d:	call   0x2b34:0x49a2fddc
  41fe24:	shl    DWORD PTR [ecx-0x760e1d2],0x5
  41fe2b:	mov    esp,0x90e7dac
  41fe30:	cmp    ebp,DWORD PTR [esi-0x2f549841]
  41fe36:	loope  0x41fdfa
  41fe38:	mov    dh,0xa8
  41fe3a:	pop    ss
  41fe3b:	sub    BYTE PTR [ebp-0x5a954ce4],dh
  41fe41:	retf   
  41fe42:	mov    ebp,0x9c1a5e03
  41fe47:	nop
  41fe48:	mov    edx,0x724de514
  41fe4d:	(bad)  
  41fe4e:	es pop eax
  41fe50:	add    ecx,esp
  41fe52:	cmp    DWORD PTR [esi+0x4c],ecx
  41fe55:	loope  0x41fe93
  41fe57:	fnstsw WORD PTR [eax+0x4a5669bf]
  41fe5d:	xchg   esi,eax
  41fe5e:	popa   
  41fe5f:	dec    esp
  41fe60:	inc    edi
  41fe61:	cmp    BYTE PTR ds:[edi-0x7e5216ec],cl
  41fe68:	loopne 0x41fea1
  41fe6a:	jmp    0x3ee6:0xf828ad6f
  41fe71:	xor    eax,0xeb7d79
  41fe76:	mov    eax,0x1556c158
  41fe7b:	out    dx,al
  41fe7c:	(bad)  
  41fe7d:	jns    0x41fea7
  41fe7f:	xor    BYTE PTR [ebx-0x592a3b1b],al
  41fe85:	add    DWORD PTR [eax+0x76092758],ecx
  41fe8b:	ds mov dl,0x3e
  41fe8e:	xchg   ebp,eax
  41fe8f:	or     eax,0x2d9cce8b
  41fe94:	aas    
  41fe95:	inc    ebp
  41fe96:	jbe    0x41fe75
  41fe98:	loop   0x41ff08
  41fe9a:	aas    
  41fe9b:	fdivr  st,st(5)
  41fe9d:	test   al,0xd1
  41fe9f:	mov    WORD PTR fs:[eax+0x65a3c263],cs
  41fea6:	xchg   ebx,eax
  41fea7:	in     eax,dx
  41fea8:	xchg   ebp,eax
  41fea9:	aad    0xb6
  41feab:	std    
  41feac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fead:	je     0x41feb6
  41feaf:	ret    0xca9c
  41feb2:	or     eax,0xaae44f17
  41feb7:	and    ecx,DWORD PTR [esi+0x1]
  41feba:	fldenv [ecx]
  41febc:	push   cs
  41febd:	test   eax,0x55f678ac
  41fec2:	loop   0x41febf
  41fec4:	shl    DWORD PTR [ebp-0x22],1
  41fec7:	push   ss
  41fec8:	mov    al,0x2e
  41feca:	jbe    0x41ff21
  41fecc:	mov    ecx,0x91674610
  41fed1:	mov    cl,BYTE PTR [eax+0x10]
  41fed4:	or     BYTE PTR [edi],0x87
  41fed7:	or     BYTE PTR [eax+0x5c],0x29
  41fedb:	call   FWORD PTR [esi]
  41fedd:	add    eax,0xe57cefaa
  41fee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee4:	add    eax,0x47ee85a9
  41fee9:	lock push ebx
  41feeb:	gs xchg ecx,eax
  41feed:	bndldx (bad),[edi+0x67014476]
  41fef4:	(bad)  
  41fef5:	fsub   DWORD PTR fs:[edi-0x6533e2a6]
  41fefc:	dec    ebx
  41fefd:	sub    ebp,esp
  41feff:	loop   0x41feed
  41ff01:	sub    ebp,esi
  41ff03:	push   esp
  41ff04:	std    
  41ff05:	test   DWORD PTR [esi-0x7443b3a2],ebx
  41ff0b:	or     BYTE PTR [edi+ebx*4+0x280dca72],0xf2
  41ff13:	mov    ecx,0xe9f2a8e3
  41ff18:	ds jb  0x41ff44
  41ff1b:	jo     0x41ff65
  41ff1d:	pop    esp
  41ff1e:	int    0xd0
  41ff20:	sbb    esp,esi
  41ff22:	hlt    
  41ff23:	push   esp
  41ff24:	test   al,0x12
  41ff26:	jo     0x41ff4e
  41ff28:	shl    BYTE PTR [ecx+ebx*2],1
  41ff2b:	imul   ebx,DWORD PTR ds:0x7d468b96,0x77
  41ff32:	pop    si
  41ff34:	mov    ecx,0xe6f9c819
  41ff39:	cmp    esp,ecx
  41ff3b:	repz mov ds:0xe4803d51,al
  41ff41:	or     al,0xe3
  41ff43:	mov    ebp,0x6afc38b6
  41ff48:	popf   
  41ff49:	mov    ebx,0x502bb905
  41ff4e:	cmp    BYTE PTR [eax-0x45],0xc5
  41ff52:	sbb    esp,edx
  41ff54:	push   esp
  41ff55:	(bad)
  41ff58:	mov    ch,0xf5
  41ff5a:	dec    ebx
  41ff5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff5c:	ins    BYTE PTR es:[edi],dx
  41ff5d:	push   es
  41ff5e:	int    0x41
  41ff60:	inc    eax
  41ff61:	mov    edx,0xd1ebc8ea
  41ff66:	push   ebx
  41ff67:	(bad)  
  41ff68:	fs mov bh,0xff
  41ff6b:	jmp    0x258f:0x6d32e949
  41ff72:	sub    BYTE PTR [ebx+0x2fd1b93f],bl
  41ff78:	dec    esi
  41ff79:	pop    ebx
  41ff7a:	call   0x39212e8a
  41ff7f:	sti    
  41ff80:	xchg   al,bh
  41ff82:	test   BYTE PTR [edi],ah
  41ff84:	pop    edx
  41ff85:	pop    eax
  41ff86:	bound  esi,QWORD PTR [ebx-0x35]
  41ff89:	in     al,0x39
  41ff8b:	fcomp  QWORD PTR [ebp+0x4d]
  41ff8e:	iret   
  41ff8f:	aam    0x60
  41ff91:	imul   ecx,edx,0x5f59853a
  41ff97:	fsubr  QWORD PTR [esi-0x76dc0b61]
  41ff9d:	inc    ecx
  41ff9e:	xchg   edx,eax
  41ff9f:	push   ebp
  41ffa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffa1:	shl    DWORD PTR [esi-0x65],1
  41ffa4:	test   BYTE PTR cs:[edx],bl
  41ffa7:	or     al,0xb7
  41ffa9:	jmp    0x907cf4e1
  41ffae:	loop   0x41ff4b
  41ffb0:	and    DWORD PTR [ebp+edx*1-0x2bd1a06e],eax
  41ffb7:	mov    cl,0x31
  41ffb9:	ret    
  41ffba:	cmp    esi,DWORD PTR [ecx+0x6b4133af]
  41ffc0:	or     DWORD PTR [ecx+0x1a33d691],ebp
  41ffc6:	loopne 0x41ffc5
  41ffc8:	cmp    ch,BYTE PTR [eax]
  41ffca:	xor    eax,0xa11e73fd
  41ffcf:	std    
  41ffd0:	pop    edx
  41ffd1:	bound  ebp,QWORD PTR es:[eax-0x67]
  41ffd5:	les    ebp,FWORD PTR ds:0xa65b5161
  41ffdb:	loop   0x42003c
  41ffdd:	test   eax,0x890c4808
  41ffe2:	dec    edi
  41ffe3:	mov    ecx,0x7e48c7d3
  41ffe8:	out    dx,eax
  41ffe9:	aam    0x73
  41ffeb:	leave  
  41ffec:	jns    0x41ffcf
  41ffee:	out    0xe2,eax
  41fff0:	fsubr  DWORD PTR ds:0x5d17eefe
  41fff6:	call   0xf1b1:0xa5839b1e
  41fffd:	push   ecx
  41fffe:	popa   
  41ffff:	ds mov bh,bh
  420002:	outs   dx,BYTE PTR ds:[esi]
  420003:	push   ss
  420004:	mov    dh,0x8c
  420006:	adc    al,0x68
  420008:	xor    edx,DWORD PTR [ebp-0x76]
  42000b:	sub    bl,cl
  42000d:	pop    es
  42000e:	hlt    
  42000f:	jb     0x41ffd5
  420011:	add    al,0x82
  420013:	mov    ch,0xec
  420015:	pop    ss
  420016:	jae    0x42005a
  420018:	or     eax,0x76e240c
  42001d:	pop    edi
  42001e:	pop    ebp
  42001f:	stos   BYTE PTR es:[edi],al
  420020:	push   esp
  420021:	fnstcw WORD PTR [edi+0x24]
  420024:	and    eax,DWORD PTR [ecx+0x1b]
  420027:	inc    edx
  420028:	sub    al,0x9a
  42002a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42002b:	out    dx,al
  42002c:	push   ecx
  42002d:	jg     0x41ffc8
  42002f:	mov    ds:0x3fcd2b18,eax
  420034:	lods   al,BYTE PTR ds:[esi]
  420035:	sub    eax,0xa305ddf1
  42003a:	bound  ebx,QWORD PTR [ebp+eiz*2+0x28cc9a89]
  420041:	or     esi,DWORD PTR [edx]
  420043:	out    dx,eax
  420044:	adc    DWORD PTR [esi-0x6],ecx
  420047:	adc    ecx,edi
  420049:	test   BYTE PTR [edi-0xb492ae4],bh
  42004f:	out    dx,al
  420050:	aam    0xe7
  420052:	adc    esp,esi
  420054:	jns    0x420011
  420056:	lods   al,BYTE PTR es:[esi]
  420058:	mov    DWORD PTR [edx+edx*4],ecx
  42005b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42005c:	xchg   edx,eax
  42005d:	leave  
  42005e:	xlat   BYTE PTR ds:[ebx]
  42005f:	dec    esp
  420060:	jmp    0x420046
  420062:	jne    0x41ffe4
  420064:	ret    0xf7f8
  420067:	scas   al,BYTE PTR es:[edi]
  420068:	popf   
  420069:	or     ah,BYTE PTR [ebx+esi*1-0x20]
  42006d:	mov    ds:0xf32a61e9,eax
  420072:	fwait
  420073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420074:	jge    0x4200bd
  420076:	cdq    
  420077:	mov    ecx,0xf52a8231
  42007c:	retf   
  42007d:	xchg   esp,eax
  42007e:	test   al,bh
  420080:	sub    eax,0xb4111600
  420085:	cdq    
  420086:	mov    cl,0x4c
  420088:	imul   edx,DWORD PTR [edi],0x12
  42008b:	sbb    ebx,DWORD PTR [esi+ecx*2-0xfa74602]
  420092:	cli    
  420093:	fstp   DWORD PTR [eax]
  420095:	mov    edi,0xbfe5c478
  42009a:	or     al,0xa1
  42009c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42009d:	popf   
  42009e:	and    ah,BYTE PTR [ebp-0x42]
  4200a1:	(bad)  
  4200a2:	mov    edi,?
  4200a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a5:	ror    BYTE PTR [edx],0xca
  4200a8:	loope  0x4200c1
  4200aa:	nop    DWORD PTR [eax]
  4200ad:	cmp    eax,DWORD PTR [ecx+0x4c0dc4c2]
  4200b3:	test   al,0xa7
  4200b5:	or     al,0x83
  4200b7:	stos   DWORD PTR es:[edi],eax
  4200b8:	sub    edi,DWORD PTR [esi+0x59]
  4200bb:	cmp    BYTE PTR [esi+0x12562ea7],dl
  4200c1:	jmp    0x86bea5d5
  4200c6:	es lahf 
  4200c8:	mov    eax,0x4e06b071
  4200cd:	int3   
  4200ce:	mov    dl,0x40
  4200d0:	pop    ss
  4200d1:	test   eax,0xd1a9f396
  4200d6:	mov    ecx,0xd12a8afe
  4200db:	jp     0x42012f
  4200dd:	or     eax,0xad7b23e5
  4200e2:	adc    al,BYTE PTR [eax]
  4200e4:	jmp    0x74e1:0xd6486a33
  4200eb:	in     al,dx
  4200ec:	mov    al,0xee
  4200ee:	loope  0x420132
  4200f0:	arpl   WORD PTR [ebx+ebx*2],dx
  4200f3:	and    ebx,edi
  4200f5:	jno    0x42014f
  4200f7:	add    eax,0x9d64e975
  4200fc:	push   esp
  4200fd:	sub    eax,0xa626dddc
  420102:	cmp    esi,eax
  420104:	(bad)  
  420105:	popa   
  420106:	fdiv   st(1),st
  420108:	mov    cl,0xf2
  42010a:	xchg   esi,eax
  42010b:	test   eax,0x475e908a
  420110:	lods   eax,DWORD PTR ds:[esi]
  420111:	int    0x82
  420113:	push   esi
  420114:	xor    BYTE PTR [ebp-0x7303f5a2],al
  42011a:	pop    edi
  42011b:	and    al,0xa8
  42011d:	test   eax,0xa1975690
  420122:	mov    DWORD PTR [ebx-0x28],esi
  420125:	ins    DWORD PTR es:[edi],dx
  420126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420127:	shr    DWORD PTR [edi+esi*4],cl
  42012a:	sub    eax,0x536a7f02
  42012f:	test   eax,0x50a8d825
  420134:	pop    ecx
  420135:	(bad)  
  420136:	pop    esi
  420137:	jg     0x420140
  420139:	mov    ds:0xf65c6cd8,eax
  42013e:	pop    ds
  42013f:	sbb    eax,DWORD PTR [ecx+0x31]
  420142:	adc    DWORD PTR [edx],esp
  420144:	dec    edi
  420145:	mov    edx,0xc335bdde
  42014a:	mov    esp,0x5367dbaa
  42014f:	or     al,0x4b
  420151:	loop   0x42012c
  420153:	and    al,0x30
  420155:	je     0x420108
  420157:	(bad)  
  420158:	es xchg edx,eax
  42015a:	cmp    BYTE PTR [esi+0x4289f828],dl
  420160:	adc    BYTE PTR [eax-0x20],bh
  420163:	loope  0x420100
  420165:	not    BYTE PTR [edi+0x21]
  420168:	sbb    bh,ah
  42016a:	sar    DWORD PTR [eax-0x19c80cd0],0xa4
  420171:	fs aas 
  420173:	mov    esp,0xaf179dac
  420178:	pop    ebp
  420179:	jle    0x420123
  42017b:	add    ecx,DWORD PTR [ecx+0x5094f805]
  420181:	fs inc eax
  420183:	test   al,0x8e
  420185:	icebp  
  420186:	mov    DWORD PTR [edx-0x13],eax
  420189:	sub    DWORD PTR gs:[ecx+0x9],edi
  42018d:	push   edx
  42018e:	pcmpeqb mm1,QWORD PTR [ebp-0x116c4a7a]
  420195:	cmp    al,0xce
  420197:	cmc    
  420198:	mov    ebp,0x5560b641
  42019d:	inc    edx
  42019e:	and    BYTE PTR [ebx+0xf],al
  4201a1:	sub    eax,0xe678dea4
  4201a6:	dec    ecx
  4201a7:	stos   DWORD PTR es:[edi],eax
  4201a8:	push   ss
  4201a9:	and    DWORD PTR [ecx],ecx
  4201ab:	push   0x30
  4201ad:	das    
  4201ae:	pusha  
  4201af:	aad    0x3a
  4201b1:	aaa    
  4201b2:	fadd   QWORD PTR [ebx]
  4201b4:	jbe    0x42022e
  4201b6:	imul   esp,esp,0xfffffff9
  4201b9:	shl    BYTE PTR [esi+esi*8-0x27946f54],0xd
  4201c1:	mov    ebp,0xf0ab428b
  4201c6:	mov    ds:0x92897ef1,al
  4201cb:	push   es
  4201cc:	lahf   
  4201cd:	gs imul ecx,edx,0x26d6406a
  4201d4:	lea    eax,[edi]
  4201d6:	in     al,dx
  4201d7:	pop    ebp
  4201d8:	or     eax,0x6fc564c0
  4201dd:	daa    
  4201de:	xor    esp,DWORD PTR [ebx+0x70babf49]
  4201e4:	xchg   edi,eax
  4201e5:	mov    DWORD PTR [ecx+0xe8a1356],ebx
  4201eb:	cmp    al,0x9f
  4201ed:	pop    esi
  4201ee:	call   DWORD PTR [ecx+eax*4+0x41]
  4201f2:	aaa    
  4201f3:	arpl   bx,dx
  4201f5:	mov    dl,0x71
  4201f7:	jg     0x42022f
  4201f9:	xor    edx,edi
  4201fb:	ins    DWORD PTR es:[edi],dx
  4201fc:	or     ch,dl
  4201fe:	jno    0x420183
  420200:	aas    
  420201:	call   0xfe98:0x52e94297
  420208:	out    dx,al
  420209:	sub    edx,DWORD PTR [edx-0x141dd097]
  42020f:	fidiv  DWORD PTR [eax]
  420211:	das    
  420212:	ret    0xc913
  420215:	test   DWORD PTR [eax+0x6e],0x910a7aaf
  42021c:	mov    BYTE PTR gs:[edx+eax*1+0x272fad4f],dh
  420224:	dec    ecx
  420225:	enter  0xdb9b,0x7f
  420229:	xchg   esi,eax
  42022a:	imul   ebx,DWORD PTR [esi+0x2],0x66ce805d
  420231:	outs   dx,DWORD PTR ds:[esi]
  420232:	cmp    ebp,DWORD PTR [ebp+0x28]
  420235:	imul   esi,DWORD PTR [ebx-0x3],0xffffffe3
  420239:	pop    es
  42023a:	lds    esi,FWORD PTR [edi-0x5d]
  42023d:	jno    0x4201f8
  42023f:	xchg   edi,ebx
  420241:	adc    eax,0x196e0728
  420246:	xchg   edx,eax
  420247:	ins    BYTE PTR es:[edi],dx
  420248:	mov    dl,0x8
  42024a:	xchg   BYTE PTR [esi],bh
  42024c:	gs (bad) 
  42024e:	call   0xab21a84
  420253:	int3   
  420254:	dec    edx
  420255:	icebp  
  420256:	cmp    BYTE PTR [ecx],bh
  420258:	mov    esi,0x4c8f6da1
  42025d:	inc    edx
  42025e:	jbe    0x420250
  420260:	and    bh,BYTE PTR [eax-0x63]
  420263:	pop    ebx
  420264:	sub    ebp,DWORD PTR [edx]
  420266:	jbe    0x420209
  420268:	mov    bh,dl
  42026a:	enter  0x1ad,0x63
  42026e:	arpl   WORD PTR [eax-0x16],si
  420271:	mov    ?,WORD PTR ds:0x822361bd
  420277:	hlt    
  420278:	retf   
  420279:	stos   DWORD PTR es:[edi],eax
  42027a:	mov    ah,0xd9
  42027c:	cmp    BYTE PTR [ebp-0x46977768],0xa4
  420283:	inc    edi
  420284:	push   0xd327060d
  420289:	push   edx
  42028a:	xchg   esi,eax
  42028b:	inc    eax
  42028c:	pop    ebp
  42028d:	pop    esp
  42028e:	loopne 0x4202ba
  420290:	xchg   ecx,eax
  420291:	pop    esp
  420292:	cmp    ecx,0x78
  420295:	or     esi,DWORD PTR [edi+0x45]
  420298:	dec    edi
  420299:	arpl   di,si
  42029b:	out    0x96,eax
  42029d:	add    BYTE PTR [ebx-0x5d],dl
  4202a0:	pop    ds
  4202a1:	das    
  4202a2:	xlat   BYTE PTR ds:[ebx]
  4202a3:	mov    esp,0x4d365fb9
  4202a8:	ror    DWORD PTR [eax+0x281befc5],1
  4202ae:	js     0x42027a
  4202b0:	mov    dh,0x15
  4202b2:	dec    edx
  4202b3:	pop    esp
  4202b4:	jb     0x420248
  4202b6:	pop    ds
  4202b7:	push   ebp
  4202b8:	mov    al,bl
  4202ba:	or     al,0x7a
  4202bc:	fld    TBYTE PTR [ebx]
  4202be:	call   0xa869:0x7634172
  4202c5:	push   es
  4202c6:	ja     0x4202d2
  4202c8:	xor    ah,BYTE PTR [esi-0x4f]
  4202cb:	push   cs
  4202cc:	fisttp QWORD PTR [ecx-0x474b1c79]
  4202d2:	mov    edx,DWORD PTR [edi+0x75]
  4202d5:	leave  
  4202d6:	push   cs
  4202d7:	fsubr  st(6),st
  4202d9:	pop    ds
  4202da:	jle    0x420287
  4202dc:	rcl    BYTE PTR [edi+edx*1-0x2c],cl
  4202e0:	and    ebx,DWORD PTR [edi-0x43be293c]
  4202e6:	and    BYTE PTR [ebp+edi*1-0x229b7cc4],al
  4202ed:	pushf  
  4202ee:	dec    edi
  4202ef:	xchg   BYTE PTR [edx+0x624b43ec],dl
  4202f5:	push   cs
  4202f6:	adc    bh,dh
  4202f8:	adc    esp,esp
  4202fa:	and    al,0x5a
  4202fc:	pop    es
  4202fd:	sbb    DWORD PTR [ecx-0x18],ebx
  420300:	push   esp
  420301:	mov    ebp,0x32edec03
  420306:	jae    0x420331
  420308:	cmc    
  420309:	sbb    eax,DWORD PTR [esi]
  42030b:	dec    esi
  42030c:	mov    bl,0xff
  42030e:	jmp    0x4202b2
  420310:	mov    esp,0xfff7c71
  420315:	and    eax,esi
  420317:	inc    ebp
  420318:	mov    eax,0x574d04db
  42031d:	lahf   
  42031e:	xchg   DWORD PTR [edi-0x6063c082],ebx
  420324:	mov    esp,0xc67abba7
  420329:	cmp    eax,0x6fb2af23
  42032e:	jecxz  0x420338
  420330:	fstp   TBYTE PTR [esi-0xb]
  420333:	out    dx,al
  420334:	into   
  420335:	je     0x420328
  420337:	das    
  420338:	stos   BYTE PTR es:[edi],al
  420339:	iret   
  42033a:	jnp    0x4202e5
  42033c:	call   0xbdb2:0x31a4fb14
  420343:	xchg   edx,eax
  420344:	mov    esi,0x5421c1
  420349:	inc    ebx
  42034a:	retf   
  42034b:	cmp    eax,DWORD PTR [edx-0xace872a]
  420351:	cwde   
  420352:	sbb    eax,0x1db3cc82
  420357:	cmp    al,0x60
  420359:	jl     0x4202f2
  42035b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42035c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42035d:	add    ch,BYTE PTR [ecx]
  42035f:	push   ds
  420360:	in     al,0xf4
  420362:	das    
  420363:	or     eax,0x62659497
  420368:	push   cs
  420369:	or     ebp,DWORD PTR [edx]
  42036b:	sub    eax,0x77899173
  420370:	sub    BYTE PTR [edi-0x72],dh
  420373:	(bad)  
  420374:	sbb    ch,BYTE PTR [eax]
  420376:	das    
  420377:	pop    edx
  420378:	inc    DWORD PTR [edi]
  42037a:	inc    esp
  42037b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42037c:	mov    ebx,0xe05fa72e
  420381:	std    
  420382:	dec    ebx
  420383:	sbb    bl,BYTE PTR [ebx-0x29]
  420386:	cwde   
  420387:	nop
  420388:	lock sub dl,dl
  42038b:	loope  0x4203e5
  42038d:	adc    ah,al
  42038f:	cdq    
  420390:	int    0xc9
  420392:	adc    edi,DWORD PTR [edi-0x78055cf8]
  420398:	cmp    eax,0x901b0d83
  42039d:	push   ecx
  42039e:	iret   
  42039f:	scas   eax,DWORD PTR es:[edi]
  4203a0:	popa   
  4203a1:	mov    ds:0x8536970,eax
  4203a6:	ins    BYTE PTR es:[edi],dx
  4203a7:	fdecstp 
  4203a9:	push   edi
  4203aa:	or     esp,DWORD PTR [ecx]
  4203ac:	push   esi
  4203ad:	sar    ecx,1
  4203af:	shr    DWORD PTR ds:0xa489e50c,cl
  4203b5:	and    eax,0xe9f5822d
  4203ba:	(bad)  [ebp+0x24]
  4203bd:	mov    bl,0x6b
  4203bf:	mov    cl,0x96
  4203c1:	fst    DWORD PTR [esi-0x40e99d20]
  4203c7:	add    DWORD PTR ds:0x1f69c41a,ebp
  4203cd:	iret   
  4203ce:	retf   0xcdcd
  4203d1:	add    eax,0x17f846bd
  4203d6:	jb     0x420408
  4203d8:	jbe    0x4203a5
  4203da:	sub    BYTE PTR [esi+eax*8-0x53082f0b],bl
  4203e1:	mov    ecx,0x2d7edce9
  4203e6:	sbb    al,BYTE PTR [esi]
  4203e8:	mov    edi,0xd0a96520
  4203ed:	push   edx
  4203ee:	ins    DWORD PTR es:[edi],dx
  4203ef:	aaa    
  4203f0:	jp     0x420373
  4203f2:	les    esi,FWORD PTR [ecx+ebp*8]
  4203f5:	cmp    al,0x4d
  4203f7:	xchg   edi,eax
  4203f8:	sbb    dh,al
  4203fa:	mov    BYTE PTR [esi+ecx*8],dh
  4203fd:	mov    esp,0x9f548723
  420402:	mov    ah,0x4f
  420404:	pop    edi
  420405:	mov    ebp,0x98177873
  42040a:	mov    ah,0xbd
  42040c:	inc    ebp
  42040d:	hlt    
  42040e:	mov    WORD PTR [esi+0x61],es
  420411:	xchg   ebp,eax
  420412:	pop    ebp
  420413:	enter  0xe465,0xcc
  420417:	xor    BYTE PTR [esi],bl
  420419:	rol    esi,1
  42041b:	lea    esp,[edx-0x3efaabd6]
  420421:	js     0x420434
  420423:	mov    esi,0x611f31ec
  420428:	cmp    al,0xa6
  42042a:	jp     0x420482
  42042c:	hlt    
  42042d:	pop    eax
  42042e:	sysret 
  420430:	retf   
  420431:	fcomp  DWORD PTR [edi]
  420433:	jae    0x420459
  420435:	rcl    DWORD PTR [edi+edi*2-0x10],cl
  420439:	popf   
  42043a:	ret    
  42043b:	jp     0x42047d
  42043d:	inc    edx
  42043e:	or     al,0xd4
  420440:	push   cs
  420441:	(bad)  
  420443:	sbb    eax,0x5b4403e4
  420448:	sti    
  420449:	mov    edx,0xf24296f
  42044e:	aam    0x9a
  420450:	leave  
  420451:	sahf   
  420452:	scas   eax,DWORD PTR es:[edi]
  420453:	adc    esi,0x3
  420456:	rol    DWORD PTR [eax],1
  420458:	lahf   
  420459:	add    edi,DWORD PTR ss:[ecx+ebp*8-0x412b0bd3]
  420461:	(bad)  
  420462:	xor    al,0xf7
  420464:	sub    DWORD PTR [eax+edx*2-0x49],ebp
  420468:	loopne 0x42046b
  42046a:	test   al,0xd
  42046c:	loopne 0x420413
  42046e:	fnstenv [edx-0x4f]
  420471:	int3   
  420472:	push   edx
  420473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420474:	(bad)  
  420475:	cs ret 
  420477:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  420479:	mov    ch,0x15
  42047b:	sahf   
  42047c:	dec    ebx
  42047d:	cmp    bl,BYTE PTR [edx+0x30]
  420480:	xchg   DWORD PTR [bx+si-0x40ef],edx
  420485:	pop    edx
  420486:	pop    ebp
  420487:	pop    esi
  420488:	xchg   esi,eax
  420489:	jo     0x420411
  42048b:	sub    DWORD PTR [ecx-0x5b],ebp
  42048e:	je     0x4204c2
  420490:	nop
  420491:	pop    ecx
  420492:	mov    ebx,DWORD PTR [edx+0x721a0db]
  420498:	xchg   esp,eax
  420499:	std    
  42049a:	and    BYTE PTR [ecx+0x4c168d58],al
  4204a0:	imul   ebx,DWORD PTR [ebp+esi*2+0x2e],0x890159fe
  4204a8:	call   0x5e8777a5
  4204ad:	ins    BYTE PTR es:[edi],dx
  4204ae:	jb     0x4204a4
  4204b0:	sbb    eax,0xa57bb85
  4204b5:	imul   esi,edx,0xfffffffb
  4204b8:	lahf   
  4204b9:	mov    al,0xa2
  4204bb:	dec    esi
  4204bc:	in     eax,0xe0
  4204be:	(bad)  
  4204bf:	call   0xcaf5:0xd426a855
  4204c6:	pop    edx
  4204c7:	test   dl,dl
  4204c9:	cld    
  4204ca:	and    eax,0xe26a3738
  4204cf:	inc    ebp
  4204d0:	dec    edi
  4204d1:	pop    esp
  4204d2:	cli    
  4204d3:	xchg   esi,eax
  4204d4:	(bad)  
  4204d5:	or     cl,BYTE PTR [esi+0x568481bb]
  4204db:	cli    
  4204dc:	sub    al,0xf8
  4204de:	popf   
  4204df:	aad    0x1b
  4204e1:	push   ebx
  4204e2:	pop    ss
  4204e3:	push   ebx
  4204e4:	lea    ebx,[ebx+0x12]
  4204e7:	mov    al,0x8b
  4204e9:	dec    edi
  4204ea:	test   DWORD PTR [esp+esi*2-0x41],0x1ba758e1
  4204f2:	pop    esp
  4204f3:	xchg   esi,eax
  4204f4:	and    dl,BYTE PTR [eax-0x3a6d4e1c]
  4204fa:	adc    edi,esi
  4204fc:	and    DWORD PTR [ebx],eax
  4204fe:	dec    ebp
  4204ff:	(bad)  
  420500:	cmp    dl,cl
  420502:	sbb    eax,0x3bf254a5
  420507:	dec    edx
  420508:	fldenv [ebx]
  42050a:	dec    ecx
  42050b:	lock (bad) 
  42050d:	das    
  42050e:	(bad)  
  420511:	mov    edi,0x73aa6de6
  420516:	clc    
  420517:	jge    0x4204ae
  420519:	(bad)  [ebp+0x866d359]
  42051f:	and    eax,0xe39758da
  420524:	dec    eax
  420525:	and    al,0x52
  420527:	xchg   esi,eax
  420528:	mov    eax,ds:0x65b2c16
  42052d:	int    0x47
  42052f:	pop    edx
  420530:	test   BYTE PTR [eax-0x4db4246c],bl
  420536:	in     al,dx
  420537:	mov    ah,BYTE PTR [edi]
  420539:	retf   
  42053a:	lods   al,BYTE PTR ds:[esi]
  42053b:	xor    BYTE PTR [ebx-0x52],dl
  42053e:	icebp  
  42053f:	xchg   esi,eax
  420540:	addr16 stc 
  420542:	inc    esp
  420543:	shl    BYTE PTR [ecx],0xc2
  420546:	aad    0xc6
  420548:	into   
  420549:	inc    ecx
  42054a:	mov    ds:0x6a9304d7,al
  42054f:	dec    esi
  420550:	cmp    al,0xf8
  420552:	mov    gs,WORD PTR [ebx+esi*8]
  420555:	dec    ecx
  420556:	ins    BYTE PTR es:[edi],dx
  420557:	icebp  
  420558:	call   0x49462cf9
  42055d:	mov    bh,0xcb
  42055f:	jne    0x4205ce
  420561:	or     DWORD PTR [esi+0x1c51f207],0x1f
  420568:	pop    ebp
  420569:	test   eax,0x6f4693a6
  42056e:	(bad)  
  420570:	shl    BYTE PTR [ecx-0x512b390a],1
  420576:	sub    bl,BYTE PTR [esi+0x69]
  420579:	jo     0x420525
  42057b:	dec    edi
  42057c:	sbb    BYTE PTR [esi+0x5f2a5887],cl
  420582:	or     DWORD PTR [esi+0x3365901a],esp
  420588:	or     edi,DWORD PTR [eax-0x5ac14aa5]
  42058e:	add    bh,BYTE PTR [edi+0x39]
  420591:	mov    ds:0x78b7b2f8,al
  420596:	fld    DWORD PTR [edi+0x3]
  420599:	adc    BYTE PTR [esi],0xd7
  42059c:	push   ebp
  42059d:	popf   
  42059e:	stc    
  42059f:	sbb    BYTE PTR [eax],ch
  4205a1:	pop    ss
  4205a2:	jmp    0x538240df
  4205a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a8:	and    al,0xa5
  4205aa:	adc    BYTE PTR [ecx+edx*8-0x39],dh
  4205ae:	push   0x3522273f
  4205b3:	adc    eax,0x731a98b9
  4205b8:	jb     0x420631
  4205ba:	(bad)  
  4205bb:	push   edx
  4205bc:	xor    BYTE PTR [esi+0x75],bh
  4205bf:	into   
  4205c0:	pop    edi
  4205c1:	repnz pop esp
  4205c3:	and    BYTE PTR [edx+0x3f],bl
  4205c6:	mov    cl,0x54
  4205c8:	pop    ecx
  4205c9:	mov    ds:0x192abcd4,eax
  4205ce:	loopne 0x4205bd
  4205d0:	push   ebx
  4205d1:	test   eax,0x22c47b01
  4205d6:	pop    edi
  4205d7:	pop    ss
  4205d8:	push   cs
  4205d9:	mov    ebp,0xf95760b1
  4205de:	hlt    
  4205df:	adc    al,0x6e
  4205e1:	pop    es
  4205e2:	sub    al,0x4d
  4205e4:	inc    ecx
  4205e5:	ins    DWORD PTR es:[edi],dx
  4205e6:	pushf  
  4205e7:	push   ecx
  4205e8:	in     al,0xc
  4205ea:	fisub  DWORD PTR [eax-0x5a34714e]
  4205f0:	mov    ebx,0x8cbb2019
  4205f5:	mov    eax,ds:0xef8bf04c
  4205fa:	div    DWORD PTR [ecx+0x40]
  4205fd:	mov    ch,0xa5
  4205ff:	pop    edi
  420600:	outs   dx,BYTE PTR ds:[esi]
  420601:	cwde   
  420602:	fwait
  420603:	and    dl,BYTE PTR [esp+edi*4+0x36]
  420607:	mov    al,ds:0x9247777a
  42060c:	cmp    BYTE PTR ds:0xb4a3d07,ch
  420612:	pop    dx
  420614:	and    esi,DWORD PTR [edx+0x20]
  420617:	xchg   BYTE PTR [edi],al
  420619:	dec    edx
  42061a:	cdq    
  42061b:	ss push ebp
  42061d:	fstp   QWORD PTR [ebp-0x3d63266]
  420623:	sub    cl,0x8b
  420626:	call   eax
  420628:	and    BYTE PTR [edi],0xd5
  42062b:	retf   
  42062c:	enter  0x38fd,0x6
  420630:	shl    BYTE PTR [ebx+ebx*2+0xfa9a3c6],cl
  420637:	jmp    0x420673
  420639:	jmp    0xae4cdb29
  42063e:	arpl   WORD PTR [ebx],si
  420640:	xchg   BYTE PTR [eax+ebp*2],al
  420643:	xor    BYTE PTR [ebx+ecx*1+0x7e],0x69
  420648:	dec    ebx
  420649:	dec    ecx
  42064a:	in     al,0x2f
  42064c:	jae    0x4206bf
  42064e:	sbb    DWORD PTR [ecx-0x320094a3],esi
  420654:	pop    ss
  420655:	pop    esi
  420656:	std    
  420657:	mov    dl,0xcc
  420659:	test   eax,0x82117b3c
  42065e:	jmp    0x420622
  420660:	mov    ss:0x47a95c24,eax
  420666:	xchg   BYTE PTR [esi+0x4],bl
  420669:	stos   BYTE PTR es:[edi],al
  42066a:	arpl   WORD PTR [edx+ecx*8+0x1b],dx
  42066e:	jle    0x42060f
  420670:	cmc    
  420671:	inc    ebp
  420672:	mov    eax,0x7eea3963
  420677:	mov    eax,ds:0xf736b141
  42067c:	popa   
  42067d:	shl    BYTE PTR [eax+0x3d],0x2a
  420681:	adc    al,ah
  420683:	mov    ch,0xac
  420685:	mov    ebx,0x935eed07
  42068a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42068b:	xchg   ecx,eax
  42068c:	jecxz  0x4206fc
  42068e:	mov    ss,WORD PTR [ebp-0x3e]
  420691:	ja     0x4206f4
  420693:	pushf  
  420694:	sbb    eax,0xc25509d8
  420699:	outs   dx,DWORD PTR ds:[esi]
  42069a:	jb     0x4206cb
  42069c:	jecxz  0x42069f
  42069e:	js     0x4206f7
  4206a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206a1:	push   edx
  4206a2:	mov    al,0x4b
  4206a4:	xchg   ecx,eax
  4206a5:	cmc    
  4206a6:	mov    dl,0x15
  4206a8:	pop    edx
  4206a9:	(bad)  
  4206aa:	jmp    0x420711
  4206ac:	fdiv   QWORD PTR [ebx+0x591fd364]
  4206b2:	(bad)  
  4206b3:	pop    edx
  4206b4:	or     eax,0xb2a3a4b3
  4206b9:	xor    BYTE PTR [edx],al
  4206bb:	mov    WORD PTR [ebx-0x33],fs
  4206be:	outs   dx,DWORD PTR ds:[esi]
  4206bf:	inc    edx
  4206c0:	and    bh,ch
  4206c2:	adc    dh,dl
  4206c4:	xchg   ebp,eax
  4206c5:	stos   BYTE PTR es:[edi],al
  4206c6:	inc    edi
  4206c7:	enter  0xcc41,0xe1
  4206cb:	popa   
  4206cc:	push   esp
  4206cd:	jg     0x42067a
  4206cf:	stos   DWORD PTR es:[edi],eax
  4206d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d1:	jo     0x4206b5
  4206d3:	sub    eax,DWORD PTR [ebp-0x38b1bfd5]
  4206d9:	add    BYTE PTR [ebx-0x64c4677b],0xb8
  4206e0:	inc    eax
  4206e1:	(bad)  
  4206e2:	bound  ebx,QWORD PTR [esi-0xd]
  4206e5:	sub    ah,dh
  4206e7:	jns    0x4206b5
  4206e9:	sti    
  4206ea:	(bad)  
  4206eb:	js     0x4206cf
  4206ed:	pop    edx
  4206ee:	into   
  4206ef:	fs sub al,0x6a
  4206f2:	add    DWORD PTR [ebx-0x4e0ce3d1],ecx
  4206f8:	mov    di,0xb174
  4206fc:	cld    
  4206fd:	lods   eax,DWORD PTR ds:[esi]
  4206fe:	pop    ss
  4206ff:	stos   BYTE PTR es:[edi],al
  420700:	lds    ebp,FWORD PTR [ecx]
  420702:	fdivr  DWORD PTR [edi+0x23cdbeef]
  420708:	add    eax,0x71512967
  42070d:	add    DWORD PTR [edx],esi
  42070f:	adc    BYTE PTR [edi+0x2136fccb],ch
  420715:	mov    al,ds:0x6f00d54b
  42071a:	shl    BYTE PTR [edx-0x6fc9b12c],0xcc
  420721:	xor    DWORD PTR [esi-0x5c195b01],eax
  420727:	jmp    esp
  420729:	ret    0xafd2
  42072c:	or     esp,DWORD PTR [esi+0x58907f35]
  420732:	gs xchg ebx,eax
  420734:	test   eax,0x592b8d6b
  420739:	dec    edx
  42073a:	lock daa 
  42073c:	(bad)  
  42073d:	jns    0x420772
  42073f:	(bad)  
  420741:	aam    0xd5
  420743:	cwde   
  420744:	fst    QWORD PTR es:[eax+eax*1]
  420748:	mov    DWORD PTR [ebp-0x1b],ecx
  42074b:	or     dh,BYTE PTR [ebx-0x4326dac0]
  420751:	pop    esp
  420752:	jmp    0x420711
  420754:	push   ss
  420755:	call   0xcfe6:0xeb0c564a
  42075c:	stos   BYTE PTR es:[edi],al
  42075d:	rcl    bh,0xaf
  420760:	and    dh,al
  420762:	out    0x56,eax
  420764:	or     cl,ch
  420766:	xchg   ebp,eax
  420767:	or     bl,ch
  420769:	nop
  42076a:	adc    ebx,DWORD PTR [edi]
  42076c:	inc    DWORD PTR [ebp+0x36]
  42076f:	and    ebp,DWORD PTR [ebp-0x75d4a0d5]
  420775:	xchg   edx,eax
  420776:	popa   
  420777:	imul   edi,DWORD PTR [eax],0x56
  42077a:	or     eax,0xe94ceb81
  42077f:	cmp    al,0xc1
  420781:	shr    BYTE PTR [ecx],cl
  420783:	adc    BYTE PTR [ebx-0x32],bl
  420786:	out    dx,eax
  420787:	stos   BYTE PTR es:[edi],al
  420788:	mov    ecx,0x24768de0
  42078d:	das    
  42078e:	test   al,0xe1
  420790:	aad    0x1d
  420792:	gs retf 0x1fa4
  420796:	fcom   DWORD PTR [ebx+eiz*8-0x55]
  42079a:	xlat   BYTE PTR ds:[ebx]
  42079b:	aam    0x30
  42079d:	outs   dx,BYTE PTR ds:[esi]
  42079e:	jmp    0x42079e
  4207a0:	cs aam 0xf
  4207a3:	push   edi
  4207a4:	jl     0x420806
  4207a6:	sbb    ecx,DWORD PTR [edi-0x2a3e0533]
  4207ac:	pop    esp
  4207ad:	imul   ebp,DWORD PTR [eax+ebx*4-0xf],0x36
  4207b2:	in     al,dx
  4207b3:	push   0x15d1b27e
  4207b8:	popa   
  4207b9:	mov    bh,0x46
  4207bb:	aad    0xfa
  4207bd:	or     al,0xc
  4207bf:	retf   0xca16
  4207c2:	imul   eax,DWORD PTR [ebp+0x78],0xffffffdb
  4207c6:	aas    
  4207c7:	mov    dh,0xf1
  4207c9:	xor    ebx,esi
  4207cb:	shl    BYTE PTR [ebp+0x476539f3],0xe1
  4207d2:	jae    0x42076e
  4207d4:	push   esp
  4207d5:	aaa    
  4207d6:	inc    ebp
  4207d7:	push   es
  4207d8:	pop    ecx
  4207d9:	xor    al,0x8b
  4207db:	fcom   QWORD PTR [ecx+0x63c86062]
  4207e1:	jns    0x42081c
  4207e3:	xor    cl,BYTE PTR [esi+0x6b]
  4207e6:	fwait
  4207e7:	mov    dh,0xa3
  4207e9:	stos   BYTE PTR es:[edi],al
  4207ea:	mov    eax,0x161ab312
  4207ef:	inc    ebx
  4207f0:	mov    ebp,0x3cb6a80d
  4207f5:	(bad)  
  4207f6:	dec    ebx
  4207f7:	jo     0x420781
  4207f9:	push   edx
  4207fa:	mov    ds:0x21a0f6c1,eax
  4207ff:	scas   eax,DWORD PTR es:[edi]
  420800:	fcom   QWORD PTR [edi]
  420802:	(bad)  
  420803:	fmul   QWORD PTR [eax+ebp*8+0x17]
  420807:	mov    esi,0xa599c8ba
  42080c:	repz jecxz 0x42080f
  42080f:	int    0xd9
  420811:	mov    bh,0xfa
  420813:	hlt    
  420814:	shrd   DWORD PTR [esi],ebp,0xdd
  420818:	cli    
  420819:	sub    eax,DWORD PTR cs:[edi]
  42081c:	loop   0x42087f
  42081e:	pop    ecx
  42081f:	cmp    edi,DWORD PTR [edi+0x14]
  420822:	cli    
  420823:	rol    ebp,1
  420825:	inc    esi
  420826:	sar    DWORD PTR [eax-0x1c965d91],0x87
  42082d:	and    dh,bl
  42082f:	repz retf 
  420831:	aad    0x8e
  420833:	fst    DWORD PTR [edx-0x13881b6b]
  420839:	jmp    FWORD PTR [ebp+esi*8-0x7b815c8a]
  420840:	and    cl,al
  420842:	cmp    BYTE PTR [ebx+eiz*1+0x1],cl
  420846:	cwde   
  420847:	out    dx,eax
  420848:	lods   al,BYTE PTR ds:[esi]
  420849:	mov    ebx,0xaf6f28
  42084e:	fcom   st(4)
  420850:	xor    al,0x64
  420852:	out    dx,al
  420853:	hlt    
  420854:	jecxz  0x42086e
  420856:	dec    ebx
  420857:	out    dx,al
  420858:	jl     0x420802
  42085a:	dec    ecx
  42085b:	xchg   ebp,eax
  42085c:	test   eax,0xfa6cea75
  420861:	ins    DWORD PTR es:[edi],dx
  420862:	gs cld 
  420864:	mov    edx,tr3
  420867:	jbe    0x4208c5
  420869:	mov    al,0x5f
  42086b:	mov    cl,0xc1
  42086d:	not    DWORD PTR cs:[esi-0x35]
  420871:	push   ebx
  420872:	jge    0x420851
  420874:	les    ecx,FWORD PTR [esp+ebx*1-0x7990678a]
  42087b:	fnstsw WORD PTR [ebp-0x55ae9eab]
  420881:	mov    ch,0x25
  420883:	push   esp
  420884:	fdiv   st(0),st
  420886:	mov    ds:0xa6989bd7,al
  42088b:	push   ds
  42088c:	shl    BYTE PTR [ebx+0x6c],1
  42088f:	inc    ecx
  420890:	add    BYTE PTR ds:0xe18af088,0x3e
  420897:	fmul   st(7),st
  420899:	mov    BYTE PTR [edi+ebp*2+0x19f714e2],dh
  4208a0:	nop
  4208a1:	inc    ebx
  4208a2:	rcl    DWORD PTR [edi-0x2f],0x9
  4208a6:	nop
  4208a7:	mov    ah,0x26
  4208a9:	fwait
  4208aa:	popf   
  4208ab:	push   ds
  4208ac:	popa   
  4208ad:	xchg   DWORD PTR [ebp+0x46],ecx
  4208b0:	jae    0x420911
  4208b2:	sub    BYTE PTR [ebx-0x53191088],al
  4208b8:	mov    ch,0x24
  4208ba:	jp     0x4208d4
  4208bc:	push   ebp
  4208bd:	idiv   BYTE PTR [edx-0x16]
  4208c0:	or     al,0x1a
  4208c2:	cld    
  4208c3:	pusha  
  4208c4:	mov    ebp,0xea6f5d7a
  4208c9:	in     al,dx
  4208ca:	jg     0x4208c9
  4208cc:	lods   eax,DWORD PTR fs:[esi]
  4208ce:	sti    
  4208cf:	mov    bp,0xb4b2
  4208d3:	add    eax,0x4f891f9a
  4208d8:	pop    edi
  4208d9:	aas    
  4208da:	push   cs
  4208db:	xor    dl,BYTE PTR [ecx+0x722b84ae]
  4208e1:	mov    edi,0x2ab06acd
  4208e6:	(bad)  
  4208e7:	cli    
  4208e8:	adc    eax,DWORD PTR [edi-0x814544b]
  4208ee:	adc    ebx,DWORD PTR [ecx]
  4208f0:	mov    ch,0xe0
  4208f2:	xor    edx,edi
  4208f4:	jmp    FWORD PTR [eax]
  4208f6:	and    BYTE PTR [edx-0x213d17],0x44
  4208fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208fe:	jg     0x4208e5
  420900:	lods   eax,DWORD PTR ds:[esi]
  420901:	retf   
  420902:	arpl   di,bx
  420904:	fnstcw WORD PTR [eax]
  420906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420907:	pop    esp
  420908:	xor    DWORD PTR ds:0x2c5b1fa6,0xffffffa5
  42090f:	fld    DWORD PTR [eax+0x43]
  420912:	rcl    BYTE PTR [edx+0x27ba6990],0x3a
  420919:	push   edx
  42091a:	dec    ecx
  42091b:	stos   BYTE PTR es:[edi],al
  42091c:	ja     0x42097b
  42091e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42091f:	popf   
  420920:	mov    esi,0xe3f05de3
  420925:	cmp    DWORD PTR [edi],0xffffff8a
  420928:	inc    esp
  420929:	mov    bl,BYTE PTR [eax+esi*4]
  42092c:	retf   
  42092d:	mul    BYTE PTR [eax]
  42092f:	aam    0x51
  420931:	sbb    BYTE PTR [edx-0x5db2472b],ch
  420937:	std    
  420938:	rcr    DWORD PTR [edi+0x5b81c472],1
  42093e:	pop    edi
  42093f:	push   cs
  420940:	pop    ebx
  420941:	or     ch,BYTE PTR [edx-0x54]
  420944:	mov    al,0x80
  420946:	dec    esi
  420947:	or     al,0xc7
  420949:	(bad)  
  42094a:	sub    BYTE PTR [ecx+eiz*2],bl
  42094d:	pushf  
  42094e:	inc    ebx
  42094f:	or     al,0x5d
  420951:	jmp    0x9a0e58e5
  420956:	pushf  
  420957:	out    dx,al
  420958:	jp     0x420931
  42095a:	stos   DWORD PTR es:[edi],eax
  42095b:	fldl2e 
  42095d:	clc    
  42095e:	shl    DWORD PTR [edi+0x6c617224],0x39
  420965:	inc    esi
  420966:	push   ds
  420967:	idiv   BYTE PTR ds:0xead7ce8c
  42096d:	xor    al,0x7c
  42096f:	leave  
  420970:	aaa    
  420971:	mov    esi,0xac50471a
  420976:	retf   0x5e9f
  420979:	arpl   WORD PTR [ebx+0x19],dx
  42097c:	test   BYTE PTR [ebx-0x199aaba1],0x5e
  420983:	or     al,0xea
  420985:	inc    edx
  420986:	and    BYTE PTR [ebx+0x2b],al
  420989:	pop    esi
  42098a:	into   
  42098b:	jmp    0x420a00
  42098d:	retf   
  42098e:	adc    al,0x71
  420990:	icebp  
  420991:	rcl    al,cl
  420993:	sti    
  420994:	mov    bl,0x82
  420996:	repnz dec ebx
  420998:	ds gs mov ecx,0x7a5bd560
  42099f:	outs   dx,BYTE PTR ds:[esi]
  4209a0:	xlat   BYTE PTR ds:[ebx]
  4209a1:	add    bh,BYTE PTR [esi]
  4209a3:	lock (bad) 
  4209a6:	fnstcw WORD PTR [edi-0x6a]
  4209a9:	test   eax,0x436cf517
  4209ae:	push   eax
  4209af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b0:	sub    eax,0x13437244
  4209b5:	push   0xc8de9799
  4209ba:	popa   
  4209bb:	mov    cl,0x1d
  4209bd:	stos   BYTE PTR es:[edi],al
  4209be:	push   esi
  4209bf:	int3   
  4209c0:	(bad)  
  4209c1:	cmp    ebp,DWORD PTR [esi-0x1e23fd3a]
  4209c7:	das    
  4209c8:	ss out dx,al
  4209ca:	or     BYTE PTR [esi-0x30d0eb5c],bl
  4209d0:	pop    ebx
  4209d1:	pop    ebx
  4209d2:	js     0x4209da
  4209d4:	add    al,0xc3
  4209d6:	out    0xf3,eax
  4209d8:	jle    0x420a51
  4209da:	jb     0x420a18
  4209dc:	fild   DWORD PTR [ebx+0x50810f0a]
  4209e2:	jbe    0x4209de
  4209e4:	sub    dl,BYTE PTR [esi+0x40]
  4209e7:	fwait
  4209e8:	jbe    0x4209ff
  4209ea:	cli    
  4209eb:	ins    BYTE PTR es:[edi],dx
  4209ec:	(bad)  
  4209ed:	dec    esp
  4209ee:	pop    edi
  4209ef:	lods   al,BYTE PTR ds:[esi]
  4209f0:	lods   eax,DWORD PTR ds:[esi]
  4209f1:	mov    edi,0xcbae4f57
  4209f6:	jecxz  0x420998
  4209f8:	lods   eax,DWORD PTR ds:[esi]
  4209f9:	sbb    al,BYTE PTR [edi+0x4c]
  4209fc:	push   edx
  4209fd:	jle    0x4209e9
  4209ff:	enter  0xffbe,0x96
  420a03:	mov    edi,0x60ebefa
  420a08:	or     BYTE PTR [esi-0x6ec0f778],dl
  420a0e:	xor    dh,BYTE PTR [ebp-0x1e6ed24]
  420a14:	sub    dh,BYTE PTR gs:[esi+0x3e]
  420a18:	fstp   QWORD PTR [eax-0x47d8b661]
  420a1e:	xchg   ebp,eax
  420a1f:	aam    0xfb
  420a21:	mov    dh,0x36
  420a23:	shl    ecx,cl
  420a25:	rcr    DWORD PTR [ecx],1
  420a27:	gs scas al,BYTE PTR es:[edi]
  420a29:	loop   0x4209b2
  420a2b:	and    edx,DWORD PTR [eax-0x54]
  420a2e:	mov    bh,0xcc
  420a30:	aas    
  420a31:	and    esp,DWORD PTR [esp+ecx*4]
  420a34:	adc    eax,0xda0613b9
  420a39:	sub    eax,0x2e317e10
  420a3e:	xchg   BYTE PTR [ebx+0x213cd1f5],cl
  420a44:	push   ds
  420a45:	call   0x3aacc4c0
  420a4a:	repnz (bad) 
  420a4c:	jl     0x420ac5
  420a4e:	int    0xd3
  420a50:	mov    esi,0x73c20c3f
  420a55:	jp     0x420a70
  420a57:	call   0xcebc96cd
  420a5c:	mov    BYTE PTR [ebx-0x37cd67bd],ch
  420a62:	mov    dl,0xb5
  420a64:	inc    edi
  420a65:	mov    ds:0x636a6240,al
  420a6a:	cwde   
  420a6b:	js     0x420a67
  420a6d:	shl    esi,0x55
  420a70:	sbb    ebx,ebx
  420a72:	mov    al,0x68
  420a74:	jl     0x420a0a
  420a76:	loope  0x420a07
  420a78:	mov    ecx,0xa410b176
  420a7d:	or     bh,BYTE PTR [edi+edx*2-0x21]
  420a81:	pushf  
  420a82:	jg     0x420ad5
  420a84:	push   ecx
  420a85:	pop    es
  420a86:	retf   0x6b38
  420a89:	sub    al,0xb3
  420a8b:	and    eax,0xaff1a6d3
  420a90:	call   0x7c531a6a
  420a95:	and    eax,0x92742665
  420a9a:	xor    al,0xf7
  420a9c:	test   eax,0x970b2329
  420aa1:	pop    esi
  420aa2:	mov    esp,0x63a3864a
  420aa7:	(bad)  
  420aa9:	leave  
  420aaa:	push   es
  420aab:	lahf   
  420aac:	jmp    0x5884:0x407d548
  420ab3:	jb     0x420ac7
  420ab5:	jge    0x420abe
  420ab7:	add    eax,0x9d60719a
  420abc:	shl    BYTE PTR [ecx+0x6cb1360f],0xe4
  420ac3:	push   ebp
  420ac4:	jle    0x420a9e
  420ac6:	or     BYTE PTR [eax+0x7f048d60],dl
  420acc:	cmc    
  420acd:	popf   
  420ace:	cmp    eax,0xf8f304f1
  420ad3:	push   esp
  420ad4:	dec    edi
  420ad5:	xchg   ebp,eax
  420ad6:	jge    0x420a82
  420ad8:	cmp    al,0x6b
  420ada:	push   edi
  420adb:	jmp    0x420af4
  420add:	add    dh,al
  420adf:	jno    0x420a81
  420ae1:	pop    ecx
  420ae2:	adc    BYTE PTR [ebx],al
  420ae4:	iret   
  420ae5:	mov    edi,0xc0945056
  420aea:	jbe    0x420b5f
  420aec:	inc    esp
  420aed:	retf   
  420aee:	jbe    0x420aa1
  420af0:	je     0x420a95
  420af2:	mov    ebx,0xd644569e
  420af7:	fiadd  WORD PTR [edx]
  420af9:	or     ch,0x34
  420afc:	jb     0x420b05
  420afe:	cmp    al,0x64
  420b00:	cmp    eax,esi
  420b02:	inc    ebp
  420b03:	retf   
  420b04:	sub    dl,BYTE PTR [ebx]
  420b06:	inc    esi
  420b07:	stos   DWORD PTR es:[edi],eax
  420b08:	ret    
  420b09:	sbb    ebp,DWORD PTR [ebx-0x1]
  420b0c:	xor    cl,BYTE PTR gs:[esi+0x7b677c84]
  420b13:	pop    edx
  420b14:	dec    esp
  420b15:	lea    esp,[edi-0x12]
  420b18:	xchg   ebp,eax
  420b19:	das    
  420b1a:	jg     0x420b93
  420b1c:	lahf   
  420b1d:	adc    DWORD PTR [ebx+0x57],ebx
  420b20:	pop    esp
  420b21:	ins    DWORD PTR es:[edi],dx
  420b22:	pushf  
  420b23:	pop    ebp
  420b24:	test   al,0x9b
  420b26:	out    dx,al
  420b27:	sub    DWORD PTR [ecx+ebp*1-0x54],0x83cde661
  420b2f:	imul   esi,DWORD PTR [edx],0xffffff88
  420b32:	ds cli 
  420b34:	cld    
  420b35:	pusha  
  420b36:	lock ror BYTE PTR [ebp+0x1c],0x98
  420b3b:	repz push 0xffffffbd
  420b3e:	aam    0x92
  420b40:	or     eax,0x38380afb
  420b45:	test   al,0x64
  420b47:	ss mov bh,0xd3
  420b4a:	sar    BYTE PTR [esi-0x3e],cl
  420b4d:	loop   0x420b6c
  420b4f:	mov    cl,0xc0
  420b51:	adc    ecx,ebp
  420b53:	lahf   
  420b54:	out    dx,eax
  420b55:	(bad)  
  420b56:	(bad)  
  420b57:	call   0x3c4e:0xad63c163
  420b5e:	rcr    DWORD PTR [edx-0x2b9e01b4],cl
  420b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b65:	fwait
  420b66:	daa    
  420b67:	mov    dh,0xca
  420b69:	clc    
  420b6a:	dec    ebx
  420b6b:	and    al,0x83
  420b6d:	and    al,BYTE PTR [ebp+0x5c2b27d4]
  420b73:	test   eax,edx
  420b75:	push   eax
  420b76:	(bad)  
  420b77:	retf   0x62f1
  420b7a:	lods   eax,DWORD PTR ds:[esi]
  420b7b:	inc    eax
  420b7c:	add    edi,eax
  420b7e:	and    al,0x6d
  420b80:	sbb    BYTE PTR es:[eax],dh
  420b83:	lahf   
  420b84:	sub    eax,DWORD PTR [eax-0x4979b7e4]
  420b8a:	aas    
  420b8b:	loopne 0x420b63
  420b8d:	rcr    BYTE PTR [ebp+0x191977d0],0x61
  420b94:	icebp  
  420b95:	lahf   
  420b96:	lds    esp,FWORD PTR [edi+0x53ca124]
  420b9c:	ss loope 0x420bd1
  420b9f:	adc    ebx,DWORD PTR [edi+0x15d10c33]
  420ba5:	(bad)  
  420ba6:	popf   
  420ba7:	add    DWORD PTR [esi-0x12b3e742],0x4121ba04
  420bb1:	push   cs
  420bb2:	jne    0x420b50
  420bb4:	ja     0x420b41
  420bb6:	not    bl
  420bb8:	scas   al,BYTE PTR es:[edi]
  420bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bba:	shl    DWORD PTR [edx+edx*4+0x6f],cl
  420bbe:	int    0x5
  420bc0:	(bad)  
  420bc1:	pop    edx
  420bc2:	sub    eax,0xc1388225
  420bc7:	or     BYTE PTR [edi],al
  420bc9:	pop    eax
  420bca:	jo     0x420c46
  420bcc:	push   0xb00041ce
  420bd1:	call   0xefef:0x8cce4cce
  420bd8:	inc    edx
  420bd9:	out    0x7c,al
  420bdb:	mov    edi,0x75550739
  420be0:	cmc    
  420be1:	fistp  WORD PTR [ebx]
  420be3:	paddd  mm1,QWORD PTR [edx+0x7e]
  420be7:	dec    edx
  420be8:	pushf  
  420be9:	adc    BYTE PTR [ecx-0x3d61c8b6],0x40
  420bf0:	not    ebp
  420bf2:	shl    DWORD PTR ds:0x616b2b4f,cl
  420bf8:	xchg   edi,eax
  420bf9:	js     0x420bd8
  420bfb:	dec    esi
  420bfc:	(bad)  
  420bfd:	fs add eax,0xd16c24f3
  420c03:	stos   DWORD PTR es:[edi],eax
  420c04:	mov    bl,0x35
  420c06:	test   eax,0xd38d7c5d
  420c0b:	sub    esp,DWORD PTR [ebx-0x5c]
  420c0e:	pop    ecx
  420c0f:	push   eax
  420c10:	inc    esp
  420c11:	and    BYTE PTR [esi+0x23d28632],bh
  420c17:	jno    0x420c6b
  420c19:	mov    al,ds:0x4570d99
  420c1e:	dec    edi
  420c1f:	adc    DWORD PTR [ecx+0x34],ebx
  420c22:	adc    al,dl
  420c24:	ss xor eax,ebp
  420c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c29:	scas   al,BYTE PTR es:[edi]
  420c2a:	or     BYTE PTR [ebx+esi*8+0x15a678ef],dh
  420c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c32:	pop    ss
  420c33:	sub    eax,DWORD PTR [ecx]
  420c35:	sbb    esp,DWORD PTR [eax]
  420c37:	loope  0x420cb2
  420c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3b:	int    0xc5
  420c3d:	and    eax,edx
  420c3f:	mov    ebx,0xa5a0c46b
  420c44:	xchg   esi,eax
  420c45:	stos   DWORD PTR es:[edi],eax
  420c46:	dec    edi
  420c47:	push   0x73fb85f2
  420c4c:	push   ss
  420c4d:	int    0xf7
  420c4f:	xor    ebp,DWORD PTR [ebx+0xe74df85]
  420c55:	(bad)  
  420c56:	data16 and BYTE PTR [ecx],ah
  420c59:	rcr    dh,1
  420c5b:	aas    
  420c5c:	gs jo  0x420cb3
  420c5f:	push   edx
  420c60:	sahf   
  420c61:	xchg   ebx,eax
  420c62:	stos   BYTE PTR es:[edi],al
  420c63:	adc    eax,DWORD PTR [edi+0x5669cd65]
  420c69:	and    al,BYTE PTR [edi+0x7317d35a]
  420c6f:	push   edx
  420c70:	adc    DWORD PTR [ecx],esp
  420c72:	in     eax,0x49
  420c74:	js     0x420c47
  420c76:	jl     0x420ca4
  420c78:	push   DWORD PTR [ebx+0x54]
  420c7b:	leave  
  420c7c:	lahf   
  420c7d:	retf   
  420c7e:	jecxz  0x420cdc
  420c80:	jo     0x420c5c
  420c82:	arpl   WORD PTR [eax],dx
  420c84:	mov    eax,0x1fdb766f
  420c89:	push   ecx
  420c8a:	cmp    DWORD PTR [ebx-0x4e],esp
  420c8d:	mov    esp,0xa2342031
  420c92:	shl    BYTE PTR [eax],0xd1
  420c95:	addr16 sti 
  420c97:	mov    edi,0x6d41bfaa
  420c9c:	fwait
  420c9d:	rcl    DWORD PTR [edi+0x24],1
  420ca0:	push   eax
  420ca1:	shl    cl,0x8d
  420ca4:	(bad)  
  420ca5:	mov    eax,0x1a572240
  420caa:	gs sub eax,0xd7739b74
  420cb0:	test   DWORD PTR [eax-0x66],esp
  420cb3:	cmp    al,0x4e
  420cb5:	mov    dl,0xef
  420cb7:	pop    ebp
  420cb8:	xchg   ecx,eax
  420cb9:	mov    ch,BYTE PTR [eax-0x6c143de4]
  420cbf:	iret   
  420cc0:	inc    ebp
  420cc1:	std    
  420cc2:	cmp    BYTE PTR [edx-0x13],cl
  420cc5:	push   es
  420cc6:	jecxz  0x420c5a
  420cc8:	je     0x420cec
  420cca:	mov    eax,ds:0x4a74d159
  420ccf:	mov    ds:0xf185b3fc,al
  420cd4:	push   0x28
  420cd6:	or     bh,BYTE PTR [ebx-0x79aeb227]
  420cdc:	aad    0x41
  420cde:	xor    BYTE PTR [edi-0x447d3cd],0xeb
  420ce5:	cld    
  420ce6:	lods   eax,DWORD PTR ds:[esi]
  420ce7:	js     0x420c96
  420ce9:	push   ss
  420cea:	dec    esp
  420ceb:	or     bh,BYTE PTR [ecx]
  420ced:	pusha  
  420cee:	jmp    0xd15593ae
  420cf3:	popf   
  420cf4:	cmp    edx,edx
  420cf6:	dec    eax
  420cf7:	mov    eax,0xf1921bd3
  420cfc:	ins    DWORD PTR es:[edi],dx
  420cfd:	push   ss
  420cfe:	sub    eax,0xe01f6011
  420d03:	mov    eax,0xf60c3e81
  420d08:	outs   dx,DWORD PTR ds:[esi]
  420d09:	mov    BYTE PTR [eax],0xde
  420d0c:	mov    bh,0x4a
  420d0e:	or     ah,bh
  420d10:	fst    QWORD PTR [eax+0x27466c55]
  420d16:	std    
  420d17:	xchg   esi,eax
  420d18:	xchg   ebx,eax
  420d19:	fs popf 
  420d1b:	adc    al,0x67
  420d1d:	sub    eax,0xf28e9bba
  420d22:	pop    es
  420d23:	push   ds
  420d24:	cld    
  420d25:	sbb    eax,0x91cb913d
  420d2a:	and    BYTE PTR [esi-0x25b126f9],dh
  420d30:	fisubr DWORD PTR [esi-0x5]
  420d33:	sbb    bh,cl
  420d35:	aam    0x60
  420d37:	clc    
  420d38:	popf   
  420d39:	sbb    al,0x2f
  420d3b:	push   edi
  420d3c:	sub    al,0x4
  420d3e:	add    DWORD PTR [ebx+0x143a589c],esi
  420d44:	stos   BYTE PTR es:[edi],al
  420d45:	sub    BYTE PTR [esi],ch
  420d47:	mov    bl,0xc9
  420d49:	les    edx,FWORD PTR [esi]
  420d4b:	shl    DWORD PTR [edi+0xe],0x2d
  420d4f:	jmp    0x420d27
  420d51:	mov    ch,0x72
  420d53:	sub    eax,DWORD PTR [edx]
  420d55:	mov    dh,BYTE PTR [edx+0x71bcb7c7]
  420d5b:	cmc    
  420d5c:	mov    WORD PTR [ebp-0x50],ss
  420d5f:	cld    
  420d60:	lea    ebp,[edi+0xb]
  420d63:	mov    esi,0xda0ba8bb
  420d68:	add    bl,dh
  420d6a:	jns    0x420d97
  420d6c:	add    bh,bl
  420d6e:	xchg   DWORD PTR [ecx+0xbb12778],esi
  420d74:	jns    0x420df0
  420d76:	inc    ebx
  420d77:	scas   al,BYTE PTR es:[edi]
  420d78:	dec    ecx
  420d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d7a:	push   esi
  420d7b:	push   ss
  420d7c:	shr    esi,0x5
  420d7f:	nop
  420d80:	pop    edi
  420d81:	loope  0x420dfb
  420d83:	jge    0x420dad
  420d85:	push   edx
  420d86:	loopne 0x420dbc
  420d88:	sub    cl,bh
  420d8a:	icebp  
  420d8b:	xor    BYTE PTR [eax+ecx*8],al
  420d8e:	push   ds
  420d8f:	dec    edx
  420d90:	xor    edi,ebp
  420d92:	sbb    ah,cl
  420d94:	cli    
  420d95:	dec    ecx
  420d96:	sbb    DWORD PTR [ebx],ebx
  420d98:	and    bl,bh
  420d9a:	lods   eax,DWORD PTR ds:[esi]
  420d9b:	sbb    BYTE PTR [esi],0xd3
  420d9e:	cmp    edx,DWORD PTR [esi-0xf0c73e8]
  420da4:	xor    eax,0x8de531e2
  420da9:	shl    BYTE PTR [ecx-0x11],1
  420dac:	or     DWORD PTR [ebx],ebx
  420dae:	push   ecx
  420daf:	jl     0x420e0c
  420db1:	mov    ah,0x94
  420db3:	fild   DWORD PTR [edi]
  420db5:	xchg   edx,eax
  420db6:	cmp    ebp,ecx
  420db8:	mov    ds:0xb88cb6dd,eax
  420dbd:	out    dx,eax
  420dbe:	data16 jo 0x420d78
  420dc1:	aam    0xc8
  420dc3:	mov    ds:0x99d14bba,eax
  420dc8:	mov    edx,0x8069d2e5
  420dcd:	adc    DWORD PTR [esi+0x2acfa705],0xffffff81
  420dd4:	xor    BYTE PTR [ebp+0x3039b04a],0xe4
  420ddb:	pusha  
  420ddc:	ret    
  420ddd:	ret    0xf715
  420de0:	push   ss
  420de1:	adc    cl,BYTE PTR [ebp-0x3318cf4d]
  420de7:	cmp    BYTE PTR [edi],al
  420de9:	addr16 fs icebp 
  420dec:	or     BYTE PTR [edi+0x14],al
  420def:	push   eax
  420df0:	mov    esi,0xfc6e010b
  420df5:	xor    eax,0xa83a48cc
  420dfa:	add    dl,BYTE PTR [edi-0x6438c442]
  420e00:	jne    0x420d8e
  420e02:	idiv   esp
  420e04:	adc    ebx,DWORD PTR [ecx+0x61]
  420e07:	pop    ecx
  420e08:	std    
  420e09:	ret    
  420e0a:	mov    edi,0x72f9b7e6
  420e0f:	out    0xec,eax
  420e11:	and    DWORD PTR [edx-0x33],ebx
  420e14:	mov    ds:0xee26584f,eax
  420e19:	sbb    cl,bh
  420e1b:	push   ds
  420e1c:	je     0x420e52
  420e1e:	dec    ecx
  420e1f:	iret   
  420e20:	sar    ebx,cl
  420e22:	cmp    eax,0xf547d62b
  420e27:	aas    
  420e28:	sbb    al,dl
  420e2a:	leave  
  420e2b:	push   ss
  420e2c:	push   edx
  420e2d:	mov    ebp,0xee2fbf07
  420e32:	cmc    
  420e33:	adc    BYTE PTR ds:0x6462a4d5,ah
  420e39:	and    al,0x17
  420e3b:	jo     0x420e4a
  420e3d:	loopne 0x420e38
  420e3f:	clc    
  420e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e41:	xchg   ebx,eax
  420e42:	les    ebx,FWORD PTR cs:[esp+esi*4]
  420e46:	push   ds
  420e47:	push   edi
  420e48:	add    bl,ch
  420e4a:	lahf   
  420e4b:	ja     0x420e36
  420e4d:	cs pop eax
  420e4f:	sahf   
  420e50:	cs inc eax
  420e52:	xlat   BYTE PTR ds:[ebx]
  420e53:	and    ch,ch
  420e55:	xor    DWORD PTR [ebp-0x3f8533df],edi
  420e5b:	sahf   
  420e5c:	stc    
  420e5d:	jl     0x420e5e
  420e5f:	mov    edi,0x28ad59a9
  420e64:	push   ebx
  420e65:	or     eax,0x5344b68b
  420e6a:	dec    edx
  420e6b:	or     DWORD PTR [esi-0x76],edx
  420e6e:	xor    al,bl
  420e70:	inc    esi
  420e71:	jge    0x420ea2
  420e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e74:	cld    
  420e75:	cld    
  420e76:	in     eax,0x1
  420e78:	fistp  WORD PTR [edi+ecx*1+0x7cd37707]
  420e7f:	cmp    esi,DWORD PTR [eax]
  420e81:	dec    esp
  420e82:	push   edi
  420e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e84:	or     BYTE PTR [esi],bl
  420e86:	std    
  420e87:	jnp    0x420e64
  420e89:	scas   al,BYTE PTR es:[edi]
  420e8a:	ror    DWORD PTR [edx+0x35],1
  420e8d:	adc    al,0xeb
  420e8f:	pop    eax
  420e90:	sbb    DWORD PTR [edx],ebx
  420e92:	aas    
  420e93:	cdq    
  420e94:	bound  ecx,QWORD PTR [eax]
  420e96:	push   ebp
  420e97:	pushf  
  420e98:	push   eax
  420e99:	repnz lock fld QWORD PTR [eax+0x75]
  420e9e:	mov    bh,0x6c
  420ea0:	imul   DWORD PTR [ecx-0x1a8e0746]
  420ea6:	add    eax,0xefce6838
  420eab:	sahf   
  420eac:	jo     0x420ef3
  420eae:	inc    ebp
  420eaf:	cmc    
  420eb0:	inc    ecx
  420eb1:	xor    edi,DWORD PTR [eax]
  420eb3:	sub    DWORD PTR [ebx-0x1ea40a3d],0xffffff91
  420eba:	add    al,0x36
  420ebc:	fsubr  DWORD PTR [edi-0x45]
  420ebf:	or     al,0x12
  420ec1:	inc    esp
  420ec2:	ffreep st(7)
  420ec4:	inc    esi
  420ec5:	test   DWORD PTR [esi+0x55],edi
  420ec8:	pop    esi
  420ec9:	mov    dl,0xab
  420ecb:	pop    ebx
  420ecc:	outs   dx,DWORD PTR ds:[esi]
  420ecd:	jne    0x420e8a
  420ecf:	addr16 repz mov bl,0xf8
  420ed3:	(bad)  
  420ed5:	adc    DWORD PTR [ebp+0x768866e2],ebp
  420edb:	mov    al,ds:0xb7d6270e
  420ee0:	lea    ebp,[ebp+0x32]
  420ee3:	sub    cl,BYTE PTR ds:0xd95cdbfc
  420ee9:	adc    BYTE PTR [eax],ch
  420eeb:	cmp    al,0x95
  420eed:	fisubr DWORD PTR [esi]
  420eef:	jo     0x420e7c
  420ef1:	push   es
  420ef2:	jl     0x420ea0
  420ef4:	mov    dh,0x60
  420ef6:	es int 0x22
  420ef9:	or     eax,0x13b406bf
  420efe:	sbb    al,0xe5
  420f00:	(bad)  
  420f01:	ss xor al,0xb1
  420f04:	xchg   DWORD PTR [esi+0x46],ebp
  420f07:	iret   
  420f08:	lds    eax,FWORD PTR [esi-0x13]
  420f0b:	jg     0x420f0e
  420f0d:	ror    DWORD PTR [edx+0x49],1
  420f10:	mov    edx,0xf43c78f0
  420f15:	add    eax,0x933638a7
  420f1a:	ja     0x420f4b
  420f1c:	push   ecx
  420f1d:	loopne 0x420ea1
  420f1f:	hlt    
  420f20:	les    ebp,FWORD PTR [edi]
  420f22:	fstp   TBYTE PTR ds:0xd85f53f8
  420f28:	xor    bl,BYTE PTR [esi-0x29a7a4ea]
  420f2e:	repz xchg edi,eax
  420f30:	dec    esp
  420f31:	test   BYTE PTR [edi-0xe],dh
  420f34:	cs push cs
  420f36:	dec    eax
  420f37:	jmp    0xf46d27a8
  420f3c:	lahf   
  420f3d:	sub    esi,DWORD PTR [ebp+0xf8cb94e]
  420f43:	mov    eax,0xfa3b909a
  420f48:	xlat   BYTE PTR ds:[ebx]
  420f49:	xchg   BYTE PTR ds:0xeb7401d6,dh
  420f4f:	lds    edx,FWORD PTR [eax+0x74552d45]
  420f55:	cdq    
  420f56:	cmp    DWORD PTR [eax],0x44a64592
  420f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f5d:	push   ebx
  420f5e:	les    ecx,FWORD PTR [ebp+0x18]
  420f61:	sbb    al,0x87
  420f63:	retf   0xf1dd
  420f66:	enter  0xa9f5,0x44
  420f6a:	mov    DWORD PTR [ecx-0x7c65c0c2],ecx
  420f70:	mov    cl,0xd1
  420f72:	push   ecx
  420f73:	mov    es,WORD PTR [ebp-0x10]
  420f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f77:	jb     0x420f17
  420f79:	pop    ebx
  420f7a:	(bad)  
  420f7b:	rcl    BYTE PTR [ebp+0x4c],cl
  420f7e:	jmp    0x550d:0x2b65fa01
  420f85:	ret    
  420f86:	inc    esi
  420f87:	test   BYTE PTR [ebx+0x8],0xdf
  420f8b:	jp     0x420f93
  420f8d:	xchg   ecx,eax
  420f8e:	test   al,0x23
  420f90:	lahf   
  420f91:	pusha  
  420f92:	mov    esi,0x4ecc3ebd
  420f97:	shl    cl,cl
  420f99:	jbe    0x420f40
  420f9b:	mov    bl,0x46
  420f9d:	repnz iret 
  420f9f:	jno    0x420fd9
  420fa1:	aam    0xb6
  420fa3:	out    0xda,eax
  420fa5:	xchg   edx,eax
  420fa6:	inc    ebx
  420fa7:	imul   ebp,DWORD PTR [edx-0x80],0x1f
  420fab:	jle    0x420f4b
  420fad:	popf   
  420fae:	push   ebx
  420faf:	xchg   DWORD PTR [ebp+0x4260a87d],ebx
  420fb5:	sahf   
  420fb6:	cmp    bh,dh
  420fb8:	outs   dx,DWORD PTR ds:[esi]
  420fb9:	icebp  
  420fba:	pop    ebx
  420fbb:	test   ecx,ebp
  420fbd:	dec    edi
  420fbe:	push   esp
  420fbf:	sahf   
  420fc0:	add    al,0x9
  420fc2:	out    dx,al
  420fc3:	std    
  420fc4:	add    esp,DWORD PTR [ecx]
  420fc6:	and    BYTE PTR [edi+0x6fb42628],ah
  420fcc:	arpl   WORD PTR [edx-0x58],bx
  420fcf:	(bad)
  420fd3:	mov    al,ds:0xc6089aaf
  420fd8:	add    cl,BYTE PTR [esi+0x57]
  420fdb:	mov    ?,WORD PTR [ebx-0x28]
  420fde:	fld    QWORD PTR [edi]
  420fe0:	jb     0x421039
  420fe2:	cli    
  420fe3:	push   ds
  420fe4:	cmp    ecx,ebp
  420fe6:	out    0x27,eax
  420fe8:	jecxz  0x421002
  420fea:	mov    ebp,0xda187fcb
  420fef:	adc    BYTE PTR [esp+edx*8-0x7601d342],dh
  420ff6:	lods   eax,DWORD PTR ds:[esi]
  420ff7:	(bad)  
  420ff8:	loope  0x420fcb
  420ffa:	ror    BYTE PTR [edx+edx*1+0x5258de0c],cl
  421001:	or     dh,BYTE PTR [edx-0xe809405]
  421007:	dec    ebp
  421008:	sbb    al,0xa
  42100a:	(bad)  
  42100d:	lock cwde 
  42100f:	inc    ebp
  421010:	daa    
  421011:	ror    BYTE PTR [eax+0x7eebdf4],1
  421017:	pop    edi
  421018:	xor    DWORD PTR es:[eax+ebx*2+0x5cd5f345],edx
  421020:	pop    es
  421021:	xchg   ecx,eax
  421022:	mov    bh,bh
  421024:	mov    dh,0x8c
  421026:	add    ecx,DWORD PTR [ebx+0x6]
  421029:	sbb    al,0x12
  42102b:	pop    es
  42102c:	stos   BYTE PTR es:[edi],al
  42102d:	jae    0x420fc9
  42102f:	leave  
  421030:	(bad)  
  421031:	stc    
  421032:	jbe    0x4210a0
  421034:	cmp    bh,BYTE PTR [ecx-0x68]
  421037:	ret    
  421038:	cmc    
  421039:	or     edx,eax
  42103b:	pop    ecx
  42103c:	lds    ebp,FWORD PTR ds:0xf8e827dd
  421042:	adc    edx,ecx
  421044:	ja     0x42103e
  421046:	test   DWORD PTR [ecx],edi
  421048:	mov    esi,0x40c8cc28
  42104d:	and    edi,DWORD PTR [ebx+eax*4]
  421050:	pop    esi
  421051:	xchg   esi,eax
  421052:	pop    edx
  421053:	shl    DWORD PTR [eax],cl
  421055:	out    dx,eax
  421056:	push   ss
  421057:	rcl    esp,cl
  421059:	mov    ecx,0x84922436
  42105e:	jbe    0x42103f
  421060:	push   edx
  421061:	(bad)  
  421062:	xor    DWORD PTR [ebx],esi
  421064:	data16 add BYTE PTR [eax+0x22],dh
  421068:	shl    DWORD PTR [esi+0x49],cl
  42106b:	mov    edi,0xe6f09652
  421070:	outs   dx,DWORD PTR ds:[esi]
  421071:	pop    es
  421072:	mov    bh,0x3b
  421074:	popf   
  421075:	dec    esp
  421076:	scas   al,BYTE PTR es:[edi]
  421077:	pop    es
  421078:	call   DWORD PTR [edx+0x20]
  42107b:	sbb    DWORD PTR [edx-0x56],edi
  42107e:	loope  0x4210cb
  421080:	inc    edx
  421081:	cmp    eax,ebp
  421083:	out    0x82,eax
  421085:	test   DWORD PTR [eax+esi*2+0x4],edi
  421089:	or     al,0x14
  42108b:	inc    eax
  42108c:	jecxz  0x421037
  42108e:	ror    al,cl
  421090:	dec    edi
  421091:	inc    esi
  421092:	push   eax
  421093:	and    esp,DWORD PTR [ebp+0x47]
  421096:	xor    eax,0x7b4b6187
  42109b:	scas   al,BYTE PTR es:[edi]
  42109c:	(bad)  
  42109d:	adc    al,0xfa
  42109f:	popa   
  4210a0:	cmp    eax,DWORD PTR [edx+0x52]
  4210a3:	ins    DWORD PTR es:[edi],dx
  4210a4:	outs   dx,DWORD PTR ds:[esi]
  4210a5:	sub    al,0xa
  4210a7:	retf   
  4210a8:	dec    ecx
  4210a9:	mov    ah,0xb3
  4210ab:	inc    edi
  4210ac:	loop   0x421102
  4210ae:	cli    
  4210af:	mov    cl,0x4b
  4210b1:	push   0x2c
  4210b3:	inc    ebp
  4210b4:	add    DWORD PTR [esi-0x39],esi
  4210b7:	mul    edi
  4210b9:	(bad)  
  4210ba:	aam    0x4
  4210bc:	dec    edx
  4210bd:	mov    ?,esi
  4210bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c0:	push   cs
  4210c1:	mov    edi,0xab1acabf
  4210c6:	gs (bad) 
  4210c8:	xchg   ebx,eax
  4210c9:	ret    0xdcad
  4210cc:	aam    0xd5
  4210ce:	int    0xdc
  4210d0:	outs   dx,DWORD PTR ds:[esi]
  4210d1:	push   0xcea781aa
  4210d6:	(bad)  
  4210d7:	fcmovb st,st(3)
  4210d9:	imul   esp,DWORD PTR [edi-0x225b41fc],0x64
  4210e0:	adc    DWORD PTR ss:[edi-0x73aa9d4c],ecx
  4210e7:	mov    al,0x97
  4210e9:	dec    ecx
  4210ea:	or     dh,cl
  4210ec:	xchg   ecx,eax
  4210ed:	pop    ss
  4210ee:	jne    0x421123
  4210f0:	inc    edx
  4210f1:	lea    ecx,[edx-0x3f]
  4210f4:	lahf   
  4210f5:	mov    DWORD PTR [ecx],esp
  4210f7:	xchg   esp,eax
  4210f8:	adc    eax,0x8c58147b
  4210fd:	retf   0x112c
  421100:	inc    ebx
  421101:	cmp    DWORD PTR [esi+edi*4+0x52362d7f],ecx
  421108:	loop   0x4210ab
  42110a:	mov    ebp,0x16afb218
  42110f:	jp     0x421161
  421111:	test   al,0xcc
  421113:	imul   edi,DWORD PTR [ebp+eax*8+0x7b],0x24
  421118:	and    BYTE PTR [eax-0x19],dl
  42111b:	in     eax,0x7e
  42111d:	pop    edx
  42111e:	arpl   WORD PTR [esi+0x51],si
  421121:	stos   BYTE PTR es:[edi],al
  421122:	fild   QWORD PTR [eax+0x3]
  421125:	sbb    ah,BYTE PTR [ebp+0x3a9aa112]
  42112b:	xchg   BYTE PTR [edi],bh
  42112d:	ins    DWORD PTR es:[edi],dx
  42112e:	enter  0x53a0,0xe0
  421132:	inc    ecx
  421133:	lods   al,BYTE PTR ds:[esi]
  421134:	push   ss
  421135:	cmp    al,0xf9
  421137:	call   0x5a0270ab
  42113c:	fimul  DWORD PTR [esi+ebx*2-0xb]
  421140:	xor    eax,eax
  421142:	xlat   BYTE PTR ds:[ebx]
  421143:	sub    eax,0x7f2e8a8b
  421148:	inc    edi
  421149:	icebp  
  42114a:	dec    ebp
  42114b:	xor    BYTE PTR [eax-0x1a5a1441],bl
  421151:	or     bh,BYTE PTR ds:0x3957b8e1
  421157:	lds    esp,FWORD PTR [edi-0x4b]
  42115a:	xchg   esi,eax
  42115b:	push   cs
  42115c:	jb     0x42113c
  42115e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421160:	and    eax,0xd76ecf86
  421165:	arpl   WORD PTR [esp+esi*8],bx
  421168:	aam    0x66
  42116a:	push   edx
  42116b:	jg     0x42111d
  42116d:	fidivr DWORD PTR [edi+0xd]
  421170:	mov    dh,BYTE PTR [ecx-0x36]
  421173:	ins    DWORD PTR es:[edi],dx
  421174:	std    
  421175:	jge    0x421164
  421177:	mov    bh,0x67
  421179:	mov    ch,0xd9
  42117b:	mov    bh,0x14
  42117d:	pop    edx
  42117e:	xchg   edx,eax
  42117f:	loopne 0x42117f
  421181:	xor    bh,BYTE PTR [eax]
  421183:	jnp    0x4211ac
  421185:	fldenv [ebx]
  421187:	mov    BYTE PTR [ebx-0x19],bh
  42118a:	(bad)  
  42118b:	jno    0x421197
  42118d:	cmc    
  42118e:	dec    ecx
  42118f:	mov    esp,0x3c79899a
  421194:	xor    esp,DWORD PTR [ecx-0x2e]
  421197:	mov    bl,0x51
  421199:	inc    ebx
  42119a:	ret    0xe8a3
  42119d:	mov    al,bh
  42119f:	popa   
  4211a0:	pop    edx
  4211a1:	scas   al,BYTE PTR es:[edi]
  4211a2:	push   esp
  4211a3:	addr16 (bad) 
  4211a5:	xor    BYTE PTR [edi+ebp*1+0x6734385b],ch
  4211ac:	mov    edx,0x298a56cc
  4211b1:	stc    
  4211b2:	shr    BYTE PTR [ecx+0x605c65a],1
  4211b8:	push   es
  4211b9:	add    ah,BYTE PTR [eax+0x39]
  4211bc:	jo     0x421185
  4211be:	(bad)  
  4211bf:	gs sahf 
  4211c1:	mov    ds:0x1e0a4475,eax
  4211c6:	fnsave [eax-0x55]
  4211c9:	out    dx,eax
  4211ca:	scas   al,BYTE PTR es:[edi]
  4211cb:	jo     0x421201
  4211cd:	ja     0x421185
  4211cf:	mov    ah,0xe
  4211d1:	mov    cl,0x26
  4211d3:	mov    eax,0x3f8d92c0
  4211d8:	sub    BYTE PTR [eax+ebp*2+0x482c7bab],bl
  4211df:	pop    ebp
  4211e0:	call   0x9a69e37c
  4211e5:	dec    esp
  4211e6:	xor    BYTE PTR [ebx+0x7e],bh
  4211e9:	jo     0x421266
  4211eb:	or     DWORD PTR ds:0xe23835c2,ebx
  4211f1:	xchg   edx,eax
  4211f2:	xchg   ecx,eax
  4211f3:	jmp    0x4211b5
  4211f5:	jp     0x4211ad
  4211f7:	(bad)  
  4211f8:	push   0xffffffec
  4211fa:	mov    ?,edx
  4211fc:	sete   BYTE PTR fs:[ebx]
  421200:	popf   
  421201:	shl    BYTE PTR [ecx],0x36
  421204:	out    0x2c,al
  421206:	push   0xf0f63a68
  42120b:	fbld   TBYTE PTR [ebx-0x6b]
  42120e:	cmc    
  42120f:	sets   BYTE PTR [bx+si]
  421213:	shr    DWORD PTR [ecx],1
  421215:	add    BYTE PTR [ecx+0x6fa2a0],al
  42121b:	or     ecx,DWORD PTR [eax+eax*1+0x57975da7]
  421222:	jo     0x421233
  421224:	loope  0x421216
  421226:	enter  0xa3f7,0x39
  42122a:	mov    ch,0x32
  42122c:	arpl   ax,bp
  42122e:	pop    ecx
  42122f:	cdq    
  421230:	push   edi
  421231:	scas   eax,DWORD PTR es:[edi]
  421232:	lea    esp,[eax-0x31]
  421235:	push   eax
  421236:	jmp    0x4ffead8f
  42123b:	in     al,0xc
  42123d:	loop   0x42123f
  42123f:	pop    ds
  421240:	add    dl,BYTE PTR [ebx-0x3]
  421243:	jle    0x4211f7
  421245:	pop    edi
  421246:	jno    0x421276
  421248:	dec    ebp
  421249:	jl     0x4211e1
  42124b:	test   al,0x28
  42124d:	ins    BYTE PTR es:[edi],dx
  42124e:	dec    ebp
  42124f:	jo     0x42120e
  421251:	ror    BYTE PTR [ecx],cl
  421253:	inc    edx
  421254:	xchg   edi,eax
  421255:	das    
  421256:	imul   esi,DWORD PTR [eax-0x6a02ae3a],0xffffffb2
  42125d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42125e:	push   ds
  42125f:	repz add BYTE PTR [ebp-0x6332a55f],cl
  421266:	bound  edx,QWORD PTR [esi]
  421268:	cmp    al,0xa8
  42126a:	adc    eax,eax
  42126c:	mov    esp,0xa8c127fb
  421271:	ins    DWORD PTR es:[edi],dx
  421272:	xor    cl,BYTE PTR [eax]
  421274:	push   cs
  421275:	mov    ds:0x687ea5a0,al
  42127a:	mov    ebp,esi
  42127c:	pop    ds
  42127d:	xor    DWORD PTR [esi-0x6f],0xffffffe2
  421281:	mov    ebp,0x526a6b01
  421286:	rcr    cl,0x9e
  421289:	(bad)  
  42128a:	push   0x5dbe0786
  42128f:	lahf   
  421290:	in     eax,dx
  421291:	jmp    0x421285
  421293:	push   esi
  421294:	daa    
  421295:	pop    esi
  421296:	popa   
  421297:	sbb    eax,0xbf9be702
  42129c:	daa    
  42129d:	xchg   esi,eax
  42129e:	mov    ah,0x4c
  4212a0:	shl    BYTE PTR [edi+0x74],cl
  4212a3:	cmp    al,0xe1
  4212a5:	xor    BYTE PTR ds:0xc42f8a94,0x5d
  4212ac:	mov    edx,0xaf3174b8
  4212b1:	push   0xffffffa5
  4212b3:	popa   
  4212b4:	and    ebx,edi
  4212b6:	mov    al,0x3
  4212b8:	cld    
  4212b9:	cwde   
  4212ba:	or     bh,BYTE PTR [edx]
  4212bc:	push   cs
  4212bd:	or     al,0x1a
  4212bf:	jno    0x42129a
  4212c1:	addr16 sbb al,0x3a
  4212c4:	icebp  
  4212c5:	pop    ds
  4212c6:	mov    dl,0x8
  4212c8:	imul   BYTE PTR [ebx+0x5b7c4881]
  4212ce:	mov    BYTE PTR [edx],ah
  4212d0:	pop    es
  4212d1:	shrd   DWORD PTR cs:[eax+0x3dd62dc5],eax,cl
  4212d9:	mov    ecx,0x233ccccf
  4212de:	jmp    esp
  4212e0:	pop    edx
  4212e1:	call   0x56057730
  4212e6:	popf   
  4212e7:	xor    eax,0x1ebb6d01
  4212ec:	xchg   esp,eax
  4212ed:	pusha  
  4212ee:	sub    ah,BYTE PTR ds:0xf120e58c
  4212f4:	lods   eax,DWORD PTR ds:[esi]
  4212f5:	stos   DWORD PTR es:[edi],eax
  4212f6:	clc    
  4212f7:	xchg   edi,eax
  4212f8:	jnp    0x4212b1
  4212fa:	test   eax,0x2194755c
  4212ff:	or     DWORD PTR [eax+0x656acf05],esi
  421305:	sub    BYTE PTR ds:0x93802501,ch
  42130b:	add    dl,BYTE PTR [ebx-0x335e13e9]
  421311:	mov    al,0x11
  421313:	pusha  
  421314:	ins    DWORD PTR es:[edi],dx
  421315:	es ds clc 
  421318:	push   ebp
  421319:	mov    al,bl
  42131b:	cwde   
  42131c:	leave  
  42131d:	cmp    edi,esi
  42131f:	xchg   ebx,eax
  421320:	les    esi,FWORD PTR [ecx+0x2821130b]
  421326:	imul   eax,DWORD PTR [eax],0xd2e23821
  42132c:	div    BYTE PTR [ecx-0x28]
  42132f:	rcr    BYTE PTR [eax+0x6a55b1e3],0x9c
  421336:	add    DWORD PTR [esi+0x6f],edx
  421339:	mov    WORD PTR [edx],cs
  42133b:	mov    ds:0x1efe87c8,eax
  421340:	jmp    0x61f6a99e
  421345:	int3   
  421346:	pushf  
  421347:	mov    eax,0xd3fce66a
  42134c:	repnz and al,BYTE PTR [ebx+0x556ca99]
  421353:	sbb    eax,0xf5ab28c9
  421358:	cli    
  421359:	jbe    0x421383
  42135b:	jp     0x42136b
  42135d:	add    ecx,ebx
  42135f:	shr    BYTE PTR [ecx-0x6],1
  421362:	mov    esp,0xb680dfc5
  421367:	stos   DWORD PTR es:[edi],eax
  421368:	ins    BYTE PTR es:[edi],dx
  421369:	sbb    DWORD PTR [eax],0x83552852
  42136f:	and    BYTE PTR [eax],ah
  421371:	and    al,0x3b
  421373:	dec    edi
  421374:	stc    
  421375:	mov    ds,WORD PTR [edi+0x4ee97562]
  42137b:	rcr    BYTE PTR [edi],cl
  42137d:	sbb    cl,BYTE PTR [ebx+0x6b01ee94]
  421383:	xchg   edi,eax
  421384:	into   
  421385:	sbb    BYTE PTR [ecx],bh
  421387:	cwde   
  421388:	in     al,0x28
  42138a:	fmul   st,st(1)
  42138c:	xor    eax,0x4c4f84fc
  421391:	adc    al,0xc6
  421393:	sbb    ecx,DWORD PTR [ebx]
  421395:	push   esi
  421396:	add    al,0x70
  421398:	fwait
  421399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42139a:	jns    0x421410
  42139c:	aam    0x21
  42139e:	or     esi,DWORD PTR [edi]
  4213a0:	fidivr DWORD PTR ds:0xf9b49fe3
  4213a6:	les    ecx,FWORD PTR [edx]
  4213a8:	data16 fidiv DWORD PTR [edi+0x24]
  4213ac:	inc    esp
  4213ad:	xchg   esi,eax
  4213ae:	xchg   BYTE PTR [edi+edi*1-0x32261d5a],cl
  4213b5:	or     eax,0x8f883c8a
  4213ba:	cwde   
  4213bb:	dec    ebx
  4213bc:	jmp    0x1e25:0x23bef2e
  4213c3:	sbb    BYTE PTR [ecx],0xef
  4213c6:	mov    esi,0x398f4c08
  4213cb:	ins    DWORD PTR es:[edi],dx
  4213cc:	cld    
  4213cd:	mov    dl,0x9f
  4213cf:	fstp   st(7)
  4213d1:	test   bl,0xc7
  4213d4:	adc    BYTE PTR [esi-0x3f276e43],ch
  4213da:	push   ds
  4213db:	pop    ds
  4213dc:	mov    ecx,0xa45dac58
  4213e1:	in     eax,dx
  4213e2:	sar    BYTE PTR [ebp+0x4af5f62d],cl
  4213e8:	hlt    
  4213e9:	arpl   WORD PTR [edi],cx
  4213eb:	push   DWORD PTR [esi+edi*8+0x33]
  4213ef:	push   esp
  4213f0:	je     0x4213dd
  4213f2:	repz (bad) 
  4213f4:	pop    esp
  4213f5:	jo     0x421439
  4213f7:	inc    edx
  4213f8:	mov    ds:0x7bc771df,eax
  4213fd:	pop    ecx
  4213fe:	je     0x42142d
  421400:	call   0x262b2e54
  421405:	cmp    al,0xb6
  421407:	inc    ecx
  421408:	psraw  mm3,QWORD PTR cs:[ecx]
  42140c:	sahf   
  42140d:	xor    esi,DWORD PTR [edi]
  42140f:	ja     0x42144e
  421411:	out    dx,eax
  421412:	lods   al,BYTE PTR ds:[esi]
  421413:	cs (bad) 
  421415:	mov    ebx,0x6eb9e920
  42141a:	(bad)  
  42141c:	adc    eax,0x6d4ae0cf
  421421:	mov    ecx,0x8ee3890c
  421426:	and    DWORD PTR [ecx],ebx
  421428:	adc    al,0x6c
  42142a:	jne    0x4213c7
  42142c:	in     al,dx
  42142d:	jne    0x421492
  42142f:	retf   
  421430:	punpcklbw mm3,mm6
  421433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421434:	pop    edx
  421435:	dec    edx
  421436:	aas    
  421437:	dec    esp
  421438:	xchg   edi,eax
  421439:	out    0xd2,eax
  42143b:	dec    ebp
  42143c:	stos   DWORD PTR es:[edi],eax
  42143d:	mov    ds:0x80395cb7,eax
  421442:	call   0xa9b8:0xb354e23c
  421449:	mov    cl,0x4c
  42144b:	dec    edi
  42144c:	adc    DWORD PTR [edi-0x6a],0x924b92a4
  421453:	mov    edi,0x7c8718a3
  421458:	loop   0x421488
  42145a:	mov    dl,ah
  42145c:	xor    edi,DWORD PTR [edi+0x6b]
  42145f:	mov    al,0xc8
  421461:	xor    esi,DWORD PTR [ebx+0x1e417ec7]
  421467:	xor    al,0x61
  421469:	pop    eax
  42146a:	aad    0xcf
  42146c:	sbb    BYTE PTR [edi+0x66e73950],dh
  421472:	fcmove st,st(6)
  421474:	push   0x5c
  421476:	or     eax,DWORD PTR [ecx]
  421478:	mov    edi,DWORD PTR [esp+ebx*1]
  42147b:	imul   eax,DWORD PTR [esi-0x22],0x561c0b5c
  421482:	(bad)  
  421483:	in     eax,dx
  421484:	test   eax,0x8f02ab0b
  421489:	dec    edi
  42148a:	jb     0x4214e8
  42148c:	repz jns 0x421455
  42148f:	stc    
  421490:	sbb    eax,0x6e80508
  421495:	mov    ecx,0x87829614
  42149a:	mov    WORD PTR [esi-0x200d42cc],gs
  4214a0:	sub    esi,DWORD PTR [ecx]
  4214a2:	or     DWORD PTR ds:0xa830a717,ebp
  4214a8:	mov    dh,0x27
  4214aa:	sbb    dh,BYTE PTR [ecx+0x51]
  4214ad:	jl     0x421496
  4214af:	sub    DWORD PTR [ebx],esi
  4214b1:	test   BYTE PTR [ebx+0x25],dh
  4214b4:	mov    eax,ds:0x2b613a73
  4214b9:	xor    eax,0xb888444c
  4214be:	dec    ecx
  4214bf:	xor    bl,BYTE PTR [ecx+edx*2]
  4214c2:	jb     0x4214d5
  4214c4:	clc    
  4214c5:	cmp    al,0xb9
  4214c7:	jno    0x421459
  4214c9:	cs dec edi
  4214cb:	sbb    BYTE PTR [edi],al
  4214cd:	jo     0x4214c4
  4214cf:	loope  0x421480
  4214d1:	aam    0x9
  4214d3:	xchg   edx,eax
  4214d4:	sub    bh,BYTE PTR [edi+0x6e]
  4214d7:	jne    0x42145f
  4214d9:	dec    DWORD PTR [edx+0x50b041d4]
  4214df:	cld    
  4214e0:	xlat   BYTE PTR ds:[ebx]
  4214e1:	fsub   QWORD PTR cs:[edx]
  4214e4:	or     BYTE PTR [ebp+0x79a6de],ch
  4214ea:	dec    ebp
  4214eb:	fisub  WORD PTR [esp+edi*1-0x1e]
  4214ef:	sbb    al,0x84
  4214f1:	sbb    ebx,DWORD PTR [edi]
  4214f3:	lea    ebx,[ecx]
  4214f5:	push   esp
  4214f6:	fs clc 
  4214f8:	mov    bl,0x82
  4214fa:	fwait
  4214fb:	jle    0x421578
  4214fd:	out    dx,eax
  4214fe:	jne    0x4214c4
  421500:	sub    al,0x1
  421502:	jle    0x42151a
  421504:	aas    
  421505:	push   edx
  421506:	mov    eax,ds:0x3a0749f7
  42150b:	adc    DWORD PTR [ebx+0x2c],eax
  42150e:	(bad)  
  42150f:	cmp    ah,bh
  421511:	lock sbb DWORD PTR ds:0x15b762fd,0xfffffff2
  421519:	lods   al,BYTE PTR ds:[esi]
  42151a:	paddd  mm5,QWORD PTR [edi+0x4b69e9e0]
  421521:	bound  edi,QWORD PTR [eax]
  421523:	lock or ebx,DWORD PTR [edi+ebp*4+0x4]
  421528:	xor    BYTE PTR ds:0x66ca5a0c,al
  42152e:	push   ss
  42152f:	jmp    FWORD PTR [ebx-0x52]
  421532:	lock sub ah,BYTE PTR [ebx]
  421535:	push   ebp
  421536:	lea    eax,[edi-0x308beda4]
  42153c:	cmp    al,0x62
  42153e:	add    dl,BYTE PTR [ecx]
  421540:	adc    eax,0x5d5e75dc
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x10],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x78],0x0
  421573:	mov    DWORD PTR [ebp-0x60],0x0
  42157a:	mov    DWORD PTR [ebp-0x5c],0x0
  421581:	mov    DWORD PTR [ebp-0x74],0x0
  421588:	mov    DWORD PTR [ebp-0x64],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x68],0x0
  42159d:	mov    DWORD PTR [ebp-0x30],0x0
  4215a4:	mov    DWORD PTR [ebp-0x70],0x0
  4215ab:	mov    DWORD PTR [ebp-0x58],0x0
  4215b2:	mov    DWORD PTR [ebp-0x54],0x0
  4215b9:	mov    DWORD PTR [ebp-0x4],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x14],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428158
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42815c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428160
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428164
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428148
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x42814c
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428150
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428154
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428156
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	call   DWORD PTR ds:0x428018
  421632:	lea    eax,[ebp-0x10]
  421635:	push   eax
  421636:	lea    ecx,[ebp-0x10]
  421639:	push   ecx
  42163a:	lea    edx,[ebp-0x18]
  42163d:	push   edx
  42163e:	call   DWORD PTR ds:0x428004
  421644:	test   eax,eax
  421646:	je     0x421651
  421648:	mov    eax,DWORD PTR [ebp-0x10]
  42164b:	add    eax,0x1
  42164e:	mov    DWORD PTR [ebp-0x10],eax
  421651:	mov    DWORD PTR [ebp-0x48],0x0
  421658:	mov    DWORD PTR [ebp-0x4c],0x0
  42165f:	lea    ecx,[ebp-0x18]
  421662:	push   ecx
  421663:	call   DWORD PTR ds:0x428000
  421669:	mov    BYTE PTR [ebp-0x40],0x56
  42166d:	call   DWORD PTR ds:0x428034
  421673:	mov    DWORD PTR [ebp-0x2c],eax
  421676:	mov    BYTE PTR [ebp-0x3e],0x72
  42167a:	movzx  edx,WORD PTR [ebp-0x2c]
  42167e:	test   edx,edx
  421680:	jne    0x4216d0
  421682:	mov    BYTE PTR [ebp-0x34],0x0
  421686:	mov    DWORD PTR [ebp-0x18],0xe0d
  42168d:	lea    eax,[ebp-0x28]
  421690:	push   eax
  421691:	call   DWORD PTR ds:0x428044
  421697:	mov    DWORD PTR [ebp-0x68],eax
  42169a:	mov    DWORD PTR [ebp-0x5c],0x3a
  4216a1:	lea    ecx,[ebp-0x40]
  4216a4:	push   ecx
  4216a5:	mov    edx,DWORD PTR [ebp-0x68]
  4216a8:	push   edx
  4216a9:	call   DWORD PTR ds:0x42804c
  4216af:	mov    DWORD PTR [ebp-0x44],eax
  4216b2:	mov    DWORD PTR [ebp-0x8],0x75656754
  4216b9:	mov    eax,DWORD PTR [ebp-0x68]
  4216bc:	push   eax
  4216bd:	mov    ecx,DWORD PTR [ebp-0x70]
  4216c0:	push   ecx
  4216c1:	call   DWORD PTR ds:0x428138
  4216c7:	mov    DWORD PTR [ebp-0x74],0x10e747
  4216ce:	jmp    0x4216e5
  4216d0:	mov    BYTE PTR ds:0x4476e0,0x0
  4216d7:	mov    BYTE PTR ds:0x42be60,0x0
  4216de:	mov    BYTE PTR ds:0x443920,0x0
  4216e5:	push   DWORD PTR ds:0x428044
  4216eb:	pop    edx
  4216ec:	mov    DWORD PTR [ebp-0x78],edx
  4216ef:	mov    edx,DWORD PTR [ebp-0x68]
  4216f2:	push   edx
  4216f3:	call   DWORD PTR ds:0x428048
  4216f9:	mov    eax,DWORD PTR [ebp-0x70]
  4216fc:	push   eax
  4216fd:	call   DWORD PTR ds:0x428050
  421703:	mov    DWORD PTR [ebp-0x2c],0x410000
  42170a:	push   DWORD PTR [ebp-0x30]
  42170d:	push   0x1000
  421712:	mov    eax,DWORD PTR [ebp-0x18]
  421715:	add    eax,0x23
  421718:	add    eax,0x23
  42171b:	push   eax
  42171c:	xor    eax,eax
  42171e:	push   eax
  42171f:	mov    ecx,DWORD PTR [ebp-0x44]
  421722:	call   ecx
  421724:	mov    edx,eax
  421726:	mov    DWORD PTR [ebp-0x4],edx
  421729:	mov    ecx,DWORD PTR [ebp-0x74]
  42172c:	sub    ecx,0xdae0b
  421732:	mov    DWORD PTR [ebp-0x74],ecx
  421735:	cmp    DWORD PTR [ebp-0x4],0x0
  421739:	jne    0x42174e
  42173b:	push   0xa
  42173d:	mov    edx,DWORD PTR [ebp-0x68]
  421740:	push   edx
  421741:	call   DWORD PTR ds:0x428058
  421747:	mov    BYTE PTR ds:0x443920,0x0
  42174e:	mov    eax,DWORD PTR [ebp-0x4]
  421751:	add    eax,DWORD PTR [ebp-0x18]
  421754:	mov    ecx,DWORD PTR [ebp-0x8]
  421757:	mov    DWORD PTR [eax],ecx
  421759:	mov    edx,DWORD PTR [ebp-0x4]
  42175c:	add    edx,DWORD PTR [ebp-0x5c]
  42175f:	mov    DWORD PTR [ebp-0x64],edx
  421762:	mov    eax,ds:0x42804c
  421767:	mov    DWORD PTR [ebp-0x54],eax
  42176a:	mov    ecx,DWORD PTR [ebp-0x4]
  42176d:	add    ecx,DWORD PTR [ebp-0x18]
  421770:	mov    edx,DWORD PTR [ebp+0x8]
  421773:	mov    DWORD PTR [ecx+0x4],edx
  421776:	mov    eax,DWORD PTR [ebp-0x4]
  421779:	add    eax,DWORD PTR [ebp-0x18]
  42177c:	mov    DWORD PTR [ebp-0xc],eax
  42177f:	push   0x0
  421781:	push   0x14
  421783:	push   0x14
  421785:	push   0xa
  421787:	push   0xa
  421789:	push   0x0
  42178b:	call   DWORD PTR ds:0x428010
  421791:	cmp    DWORD PTR [ebp-0x74],0x0
  421795:	jbe    0x4217b2
  421797:	mov    ecx,DWORD PTR [ebp-0xc]
  42179a:	push   ecx
  42179b:	mov    edx,DWORD PTR [ebp-0x18]
  42179e:	push   edx
  42179f:	mov    eax,DWORD PTR [ebp-0x2c]
  4217a2:	add    eax,DWORD PTR [ebp-0x74]
  4217a5:	push   eax
  4217a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4217a9:	push   ecx
  4217aa:	call   0x411000
  4217af:	add    esp,0x10
  4217b2:	cmp    DWORD PTR [ebp-0x64],0x0
  4217b6:	je     0x4217ca
  4217b8:	mov    ecx,DWORD PTR [ebp-0x54]
  4217bb:	push   ecx
  4217bc:	push   DWORD PTR [ebp-0x78]
  4217bf:	mov    esi,DWORD PTR [ebp-0x64]
  4217c2:	push   edx
  4217c3:	pop    eax
  4217c4:	push   ecx
  4217c5:	nop
  4217c6:	jmp    esi
  4217c8:	jmp    0x4217dc
  4217ca:	mov    edx,DWORD PTR [ebp+0x8]
  4217cd:	mov    DWORD PTR [ebp-0x14],edx
  4217d0:	push   0x0
  4217d2:	mov    eax,DWORD PTR [ebp-0x68]
  4217d5:	push   eax
  4217d6:	call   DWORD PTR ds:0x42800c
  4217dc:	mov    eax,0x1
  4217e1:	pop    esi
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    
  4217e6:	int3   
  4217e7:	int3   
  4217e8:	int3   
  4217e9:	int3   
  4217ea:	int3   
  4217eb:	int3   
  4217ec:	int3   
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0x0
  4217f9:	push   0x0
  4217fb:	mov    DWORD PTR [ebp-0x4],0x0
  421802:	call   DWORD PTR ds:0x428138
  421808:	mov    esi,DWORD PTR ds:0x428034
  42180e:	push   0x0
  421810:	push   0x0
  421812:	push   0x0
  421814:	push   0x0
  421816:	mov    DWORD PTR [ebp-0x8],esi
  421819:	call   DWORD PTR ds:0x42802c
  42181f:	test   esi,esi
  421821:	jne    0x42182a
  421823:	push   esi
  421824:	call   DWORD PTR ds:0x428028
  42182a:	push   0x0
  42182c:	push   0x4e
  42182e:	push   0x1e
  421830:	push   0x0
  421832:	push   0xffffffff
  421834:	call   DWORD PTR ds:0x428024
  42183a:	mov    esi,DWORD PTR [ebp-0x8]
  42183d:	call   esi
  42183f:	mov    DWORD PTR [ebp-0x4],eax
  421842:	cmp    DWORD PTR [ebp-0x4],0x57
  421846:	jne    0x42185d
  421848:	push   0xb32f77e2
  42184d:	call   0x421550
  421852:	add    esp,0x4
  421855:	push   0x0
  421857:	call   DWORD PTR ds:0x428020
  42185d:	push   0x0
  42185f:	push   0x0
  421861:	push   0x100000
  421866:	call   DWORD PTR ds:0x42801c
  42186c:	xor    eax,eax
  42186e:	pop    esi
  42186f:	mov    esp,ebp
  421871:	pop    ebp
  421872:	ret    
  421873:	nop
  421874:	nop
  421875:	nop
  421876:	nop
  421877:	nop
  421878:	nop
  421879:	nop
  42187a:	nop
  42187b:	nop
  42187c:	nop
  42187d:	nop
  42187e:	nop
  42187f:	nop
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	push   0x0
  421889:	call   0x422a10
  42188e:	push   0x0
  421890:	call   DWORD PTR ds:0x428040
  421896:	lea    eax,[esp+0x0]
  42189a:	push   eax
  42189b:	call   DWORD PTR ds:0x42803c
  4218a1:	call   DWORD PTR ds:0x428038
  4218a7:	cmp    WORD PTR [esp+0x0],0x0
  4218ad:	je     0x4218c6
  4218af:	push   0x0
  4218b1:	call   DWORD PTR ds:0x428054
  4218b7:	push   0x0
  4218b9:	call   0x4217f0
  4218be:	add    esp,0x4
  4218c1:	jmp    0x4229f3
  4218c6:	push   DWORD PTR [eax]
  4218c8:	in     al,dx
  4218c9:	jmp    0x421933
  4218cb:	xor    DWORD PTR [ecx],ebp
  4218cd:	mov    dh,0x28
  4218cf:	test   BYTE PTR [eax-0x7de0946d],0xb6
  4218d6:	jnp    0x4218a8
  4218d8:	xor    ch,BYTE PTR [ecx]
  4218da:	mov    dh,0x28
  4218dc:	repnz mov BYTE PTR [ebx-0x49821fd5],dl
  4218e3:	jnp    0x42194d
  4218e5:	xor    ch,BYTE PTR [ecx]
  4218e7:	mov    dh,0x28
  4218e9:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  4218f0:	jnp    0x42195a
  4218f2:	xor    ch,BYTE PTR [ecx]
  4218f4:	mov    dh,0x28
  4218f6:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  4218fd:	jnp    0x421967
  4218ff:	xor    ch,BYTE PTR [ecx]
  421901:	mov    dh,0x28
  421903:	or     cl,BYTE PTR [eax+0x62ee6b93]
  421909:	or     al,0x75
  42190b:	push   0x97b2086
  421910:	dec    edx
  421911:	mov    edi,ebx
  421913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421914:	shr    DWORD PTR [ecx],0xde
  421917:	adc    bl,BYTE PTR [ebx]
  421919:	adc    bl,BYTE PTR [ecx-0x3c]
  42191c:	inc    edi
  42191d:	xchg   ebp,eax
  42191e:	cli    
  42191f:	repnz push es
  421921:	rcr    BYTE PTR [esi],0xd7
  421924:	adc    eax,0x965d5d06
  421929:	dec    edx
  42192a:	xchg   edi,eax
  42192b:	test   al,0xe1
  42192d:	push   ds
  42192e:	mov    ds,WORD PTR [ebp-0x21]
  421931:	adc    eax,0xe5667648
  421936:	or     BYTE PTR [edi-0x31f10819],bl
  42193c:	jo     0x4218f9
  42193e:	jno    0x42198c
  421940:	xor    ch,BYTE PTR [ecx]
  421942:	mov    dh,0x28
  421944:	repnz mov BYTE PTR [ebx-0x107e8694],dl
  42194b:	cmp    BYTE PTR [eax-0x2f0adc60],dl
  421951:	pusha  
  421952:	adc    al,0x93
  421955:	jb     0x4219ce
  421957:	out    dx,al
  421958:	push   ds
  421959:	cmp    BYTE PTR fs:[esi+0x4e],dh
  42195d:	mov    edx,0x53f6d0f8
  421962:	jmp    0x4c6a:0x62e94ebf
  421969:	(bad)  
  42196a:	and    bl,BYTE PTR [edx-0x339efe90]
  421970:	repz (bad) 
  421972:	jno    0x4219a2
  421974:	retf   0xbcbb
  421977:	bound  esi,QWORD PTR [edx-0x67]
  42197a:	cdq    
  42197b:	and    DWORD PTR [eax],ebx
  42197d:	out    dx,eax
  42197e:	mov    esp,0x2333e831
  421983:	out    dx,al
  421984:	shl    BYTE PTR [eax-0x7e],1
  421987:	rcl    BYTE PTR [ebx-0x7d61888d],1
  42198d:	cli    
  42198e:	cmp    BYTE PTR [esi-0x3a075792],dl
  421994:	imul   edi,ecx,0xffffffea
  421997:	and    eax,0x3a6246d3
  42199c:	shl    DWORD PTR [edx+eiz*1],1
  42199f:	stos   BYTE PTR es:[edi],al
  4219a0:	in     eax,dx
  4219a1:	fwait
  4219a2:	popa   
  4219a3:	mov    ds:0x30712485,al
  4219a8:	push   edi
  4219a9:	es mov esp,0x991a0a6a
  4219af:	cmp    DWORD PTR [ecx-0x6fc721e2],ecx
  4219b5:	mov    al,ds:0xf228b623
  4219ba:	mov    BYTE PTR [ebx-0x19821f95],dl
  4219c0:	ds push 0x2ab76532
  4219c6:	bnd fs jo 0x4219fe
  4219ca:	scas   eax,DWORD PTR es:[edi]
  4219cb:	jge    0x421983
  4219cd:	jnp    0x421a37
  4219cf:	xor    ch,BYTE PTR [ecx]
  4219d1:	mov    dh,0x28
  4219d3:	adc    cl,BYTE PTR [eax+0x7ceb6a90]
  4219d9:	mov    esp,0x2dde687b
  4219de:	mov    dh,0x28
  4219e0:	test   BYTE PTR [esi+0x7de06b93],0xb6
  4219e7:	jp     0x4219be
  4219e9:	xor    ch,BYTE PTR [ecx]
  4219eb:	mov    dh,0x38
  4219ed:	repnz mov BYTE PTR [ebx-0x49821a95],dl
  4219f4:	jnp    0x421a1f
  4219f6:	xor    ch,BYTE PTR [ecx]
  4219f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f9:	sub    dl,dh
  4219fb:	mov    BYTE PTR [ecx-0x49871f95],dl
  421a01:	jp     0x421a6b
  421a03:	xor    ch,BYTE PTR [ecx]
  421a05:	mov    dh,0x28
  421a07:	test   DWORD PTR [eax+0x7de06b92],0xb2687bb6
  421a11:	and    dh,BYTE PTR [esi-0x6c7709d8]
  421a17:	(bad)  
  421a18:	sar    DWORD PTR [eax-0x4a],1
  421a1b:	jns    0x421a85
  421a1d:	xor    ch,BYTE PTR [ecx-0x771dd74a]
  421a23:	xchg   ebx,eax
  421a24:	jnp    0x421a06
  421a26:	jge    0x4219de
  421a28:	jnp    0x421aa2
  421a2a:	xor    ch,BYTE PTR [ecx]
  421a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a2d:	sub    dl,dh
  421a2f:	mov    BYTE PTR [ebx-0x49921f95],dl
  421a35:	jnp    0x421a9f
  421a37:	xor    ch,BYTE PTR [ecx]
  421a39:	mov    dh,0x28
  421a3b:	repnz mov BYTE PTR [ebx-0x42ec9b95],dl
  421a42:	jnp    0x421a45
  421a44:	xor    DWORD PTR [ecx],ebp
  421a46:	mov    dh,0x28
  421a48:	ret    0x9383
  421a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a4c:	fnstsw WORD PTR [ebp-0x4a]
  421a4f:	jnp    0x421ab9
  421a51:	xor    ch,BYTE PTR [ecx]
  421a53:	mov    dh,0x28
  421a55:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421a5c:	jnp    0x421ac6
  421a5e:	xor    ch,BYTE PTR [ecx]
  421a60:	mov    dh,0x28
  421a62:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421a69:	jnp    0x421ad3
  421a6b:	xor    ch,BYTE PTR [ecx]
  421a6d:	mov    dh,0x28
  421a6f:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421a76:	jnp    0x421ae0
  421a78:	xor    ch,BYTE PTR [ecx]
  421a7a:	mov    dh,0x28
  421a7c:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421a83:	jnp    0x421aed
  421a85:	xor    ch,BYTE PTR [ecx]
  421a87:	mov    dh,0x28
  421a89:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421a90:	jnp    0x421afa
  421a92:	xor    ch,BYTE PTR [ecx]
  421a94:	mov    dh,0x28
  421a96:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421a9d:	jnp    0x421b07
  421a9f:	xor    ch,BYTE PTR [ecx]
  421aa1:	mov    dh,0x28
  421aa3:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421aaa:	jnp    0x421b14
  421aac:	xor    ch,BYTE PTR [ecx]
  421aae:	mov    dh,0x28
  421ab0:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421ab7:	push   ebp
  421ab8:	sbb    al,0x57
  421aba:	push   ecx
  421abb:	ret    0xf228
  421abe:	mov    BYTE PTR [ebx-0x498214b5],dl
  421ac4:	imul   ebp,DWORD PTR [eax+0x32],0x29
  421ac8:	mov    WORD PTR [edx+esi*8],gs
  421acb:	mov    BYTE PTR [edi-0xcd21f95],dl
  421ad1:	cmp    BYTE PTR [edx+0x66],bl
  421ad4:	data16 mov dh,0x28
  421ad7:	repnz mov BYTE PTR [ebx-0x49823f95],dl
  421ade:	fwait
  421adf:	inc    esi
  421ae0:	inc    eax
  421ae1:	pop    edx
  421ae2:	les    ecx,FWORD PTR [ebx-0xe]
  421ae5:	mov    BYTE PTR [ebx-0x49824f95],dl
  421aeb:	jnp    0x421b45
  421aed:	cmp    DWORD PTR [ecx],ebp
  421aef:	mov    dh,0x78
  421af1:	repnz mov BYTE PTR [ebx-0x49821bab],dl
  421af8:	jnp    0x421b62
  421afa:	xor    ch,BYTE PTR [ecx]
  421afc:	mov    dh,0x28
  421afe:	repnz mov BYTE PTR [ebx-0x49a21f95],dl
  421b05:	jnp    0x421a8f
  421b07:	xor    ch,BYTE PTR [ecx]
  421b09:	mov    dh,0x28
  421b0b:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b12:	jnp    0x421b7c
  421b14:	xor    ch,BYTE PTR [ecx]
  421b16:	mov    dh,0x28
  421b18:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b1f:	jnp    0x421b89
  421b21:	xor    ch,BYTE PTR [ecx]
  421b23:	mov    dh,0x28
  421b25:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b2c:	jnp    0x421b96
  421b2e:	xor    ch,BYTE PTR [ecx]
  421b30:	mov    dh,0x28
  421b32:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b39:	jnp    0x421ba3
  421b3b:	xor    ch,BYTE PTR [ecx]
  421b3d:	mov    dh,0x28
  421b3f:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b46:	jnp    0x421bb0
  421b48:	xor    ch,BYTE PTR [ecx]
  421b4a:	mov    dh,0x28
  421b4c:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b53:	jnp    0x421bbd
  421b55:	xor    ch,BYTE PTR [ecx]
  421b57:	mov    dh,0x28
  421b59:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b60:	jnp    0x421bca
  421b62:	xor    ch,BYTE PTR [ecx]
  421b64:	mov    dh,0x28
  421b66:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b6d:	jnp    0x421bd7
  421b6f:	xor    ch,BYTE PTR [ecx]
  421b71:	mov    dh,0x28
  421b73:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b7a:	jnp    0x421be4
  421b7c:	xor    ch,BYTE PTR [ecx]
  421b7e:	mov    dh,0x28
  421b80:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b87:	jnp    0x421bf1
  421b89:	xor    ch,BYTE PTR [ecx]
  421b8b:	mov    dh,0x28
  421b8d:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421b94:	jnp    0x421bfe
  421b96:	xor    ch,BYTE PTR [ecx]
  421b98:	mov    dh,0x28
  421b9a:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421ba1:	jnp    0x421c0b
  421ba3:	xor    ch,BYTE PTR [ecx]
  421ba5:	mov    dh,0x28
  421ba7:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421bae:	jnp    0x421c18
  421bb0:	xor    ch,BYTE PTR [ecx]
  421bb2:	mov    dh,0x28
  421bb4:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421bbb:	jnp    0x421c25
  421bbd:	xor    ch,BYTE PTR [ecx]
  421bbf:	mov    dh,0x28
  421bc1:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421bc8:	jnp    0x421c32
  421bca:	xor    ch,BYTE PTR [ecx]
  421bcc:	mov    dh,0x28
  421bce:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421bd5:	jnp    0x421c3f
  421bd7:	xor    ch,BYTE PTR [ecx]
  421bd9:	mov    dh,0x28
  421bdb:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421be2:	jnp    0x421c4c
  421be4:	xor    ch,BYTE PTR [ecx]
  421be6:	mov    dh,0x28
  421be8:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421bef:	jnp    0x421c59
  421bf1:	xor    ch,BYTE PTR [ecx]
  421bf3:	mov    dh,0x28
  421bf5:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421bfc:	jnp    0x421c66
  421bfe:	xor    ch,BYTE PTR [ecx]
  421c00:	mov    dh,0x28
  421c02:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c09:	jnp    0x421c73
  421c0b:	xor    ch,BYTE PTR [ecx]
  421c0d:	mov    dh,0x28
  421c0f:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c16:	jnp    0x421c80
  421c18:	xor    ch,BYTE PTR [ecx]
  421c1a:	mov    dh,0x28
  421c1c:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c23:	jnp    0x421c8d
  421c25:	xor    ch,BYTE PTR [ecx]
  421c27:	mov    dh,0x28
  421c29:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c30:	jnp    0x421c9a
  421c32:	xor    ch,BYTE PTR [ecx]
  421c34:	mov    dh,0x28
  421c36:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c3d:	jnp    0x421ca7
  421c3f:	xor    ch,BYTE PTR [ecx]
  421c41:	mov    dh,0x28
  421c43:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c4a:	jnp    0x421cb4
  421c4c:	xor    ch,BYTE PTR [ecx]
  421c4e:	mov    dh,0x28
  421c50:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c57:	jnp    0x421cc1
  421c59:	xor    ch,BYTE PTR [ecx]
  421c5b:	mov    dh,0x28
  421c5d:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c64:	jnp    0x421cce
  421c66:	xor    ch,BYTE PTR [ecx]
  421c68:	mov    dh,0x28
  421c6a:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c71:	jnp    0x421cdb
  421c73:	xor    ch,BYTE PTR [ecx]
  421c75:	mov    dh,0x28
  421c77:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c7e:	jnp    0x421ce8
  421c80:	xor    ch,BYTE PTR [ecx]
  421c82:	mov    dh,0x28
  421c84:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c8b:	jnp    0x421cf5
  421c8d:	xor    ch,BYTE PTR [ecx]
  421c8f:	mov    dh,0x28
  421c91:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421c98:	jnp    0x421d02
  421c9a:	xor    ch,BYTE PTR [ecx]
  421c9c:	mov    dh,0x28
  421c9e:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421ca5:	jnp    0x421d0f
  421ca7:	xor    ch,BYTE PTR [ecx]
  421ca9:	mov    dh,0x28
  421cab:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421cb2:	jnp    0x421d1c
  421cb4:	xor    ch,BYTE PTR [ecx]
  421cb6:	mov    dh,0x28
  421cb8:	repnz mov BYTE PTR [ebx-0x49821f95],dl
  421cbf:	jnp    0x421d29
  421cc1:	xor    ch,BYTE PTR [ecx]
  421cc3:	mov    dh,0x28
  421cc5:	repnz mov ah,dl
  421cc8:	test   edx,ebp
  421cca:	jge    0x421c65
  421ccc:	jnp    0x421d36
  421cce:	and    ch,BYTE PTR [ecx]
  421cd0:	mov    dh,0x2
  421cd2:	push   eax
  421cd3:	push   edx
  421cd4:	loop   0x421ce3
  421cd6:	pop    ds
  421cd7:	push   eax
  421cd8:	sub    ah,bh
  421cda:	cmp    bh,bl
  421cdc:	pop    ds
  421cdd:	pop    esi
  421cde:	cmp    eax,DWORD PTR [esi+0x1d]
  421ce1:	cmc    
  421ce2:	sbb    ah,BYTE PTR [edi+eiz*1-0x5b]
  421ce6:	retf   0x24df
  421ce9:	inc    esp
  421cea:	push   edx
  421ceb:	mov    ds:0x9bd4e73,al
  421cf0:	jo     0x421d34
  421cf2:	(bad)
  421cf6:	ds xchg esp,eax
  421cf8:	sub    ch,dl
  421cfa:	das    
  421cfb:	sbb    edi,DWORD PTR [esi]
  421cfd:	mov    cl,0x10
  421cff:	pop    ds
  421d00:	dec    ecx
  421d01:	push   ebp
  421d02:	out    dx,eax
  421d03:	cmp    eax,0xd3e24807
  421d08:	mov    ch,0x7a
  421d0a:	unpcklps xmm2,XMMWORD PTR [edi]
  421d0d:	pop    ss
  421d0e:	(bad)
  421d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d14:	jbe    0x421cbb
  421d16:	sbb    ebp,DWORD PTR ds:0xa1dbb4e4
  421d1c:	ss mov esi,0xfdee17cf
  421d22:	mov    ds,edx
  421d24:	dec    esi
  421d25:	stos   BYTE PTR es:[edi],al
  421d26:	sub    eax,0x25782fa3
  421d2b:	jmp    DWORD PTR ds:0x6619329e
  421d31:	test   al,0x83
  421d33:	push   eax
  421d34:	mov    WORD PTR [ebp+0x38],ss
  421d37:	dec    esp
  421d38:	loopne 0x421cd8
  421d3a:	xor    DWORD PTR [esi],edx
  421d3c:	push   ebx
  421d3d:	or     esi,DWORD PTR [esi]
  421d3f:	ss cmc 
  421d41:	lahf   
  421d42:	mov    bl,bl
  421d44:	stc    
  421d45:	std    
  421d46:	stos   DWORD PTR es:[edi],eax
  421d47:	sub    ah,BYTE PTR [ebx-0x9f490cd]
  421d4d:	sub    BYTE PTR [edi],bh
  421d4f:	mov    ah,ch
  421d51:	pop    ebx
  421d52:	xchg   ebp,eax
  421d53:	das    
  421d54:	fistp  WORD PTR [ebx+0x43]
  421d57:	dec    edx
  421d58:	test   DWORD PTR [edi],esp
  421d5a:	inc    BYTE PTR [ebp+0x39]
  421d5d:	mov    cl,0xe5
  421d5f:	cmc    
  421d60:	cld    
  421d61:	sbb    DWORD PTR [edx-0x40d54e85],ecx
  421d67:	out    0x56,al
  421d69:	dec    esi
  421d6a:	jl     0x421d0b
  421d6c:	lea    edx,[ebp+0x16]
  421d6f:	dec    ebx
  421d70:	sub    al,0xee
  421d72:	mov    al,0xe3
  421d74:	aad    0x49
  421d76:	inc    ebx
  421d77:	sbb    esi,0x59
  421d7a:	aad    0xb
  421d7c:	outs   dx,DWORD PTR ds:[esi]
  421d7d:	pusha  
  421d7e:	in     eax,0x2b
  421d80:	daa    
  421d81:	ficom  WORD PTR [esi+0x2]
  421d84:	sar    DWORD PTR ss:[eax],cl
  421d87:	outs   dx,DWORD PTR ds:[esi]
  421d88:	je     0x421d9a
  421d8a:	test   eax,0x307416f5
  421d8f:	shl    BYTE PTR [ecx-0x19],cl
  421d92:	out    0x15,eax
  421d94:	(bad)  
  421d95:	and    bl,BYTE PTR [ebp+ecx*4-0x32]
  421d99:	ret    0x6ea7
  421d9c:	mov    al,ds:0x5a1b0654
  421da1:	dec    ebx
  421da2:	inc    edx
  421da3:	out    0x82,eax
  421da5:	mov    ebp,edi
  421da7:	push   es
  421da8:	loop   0x421d59
  421daa:	cmp    ah,BYTE PTR [ebx-0x5feed9fc]
  421db0:	pop    ds
  421db1:	pop    ss
  421db2:	mov    al,ds:0x3c6ddb33
  421db7:	inc    ebx
  421db8:	imul   edi,DWORD PTR [edx+0x20009a72],0x7e5cb021
  421dc2:	in     eax,dx
  421dc3:	sbb    BYTE PTR [ebx],bh
  421dc5:	mov    DWORD PTR [edi],ebp
  421dc7:	aaa    
  421dc8:	ins    WORD PTR es:[edi],dx
  421dca:	adc    eax,esi
  421dcc:	jne    0x421d6b
  421dce:	jle    0x421e09
  421dd0:	push   eax
  421dd1:	ret    
  421dd2:	std    
  421dd3:	ins    BYTE PTR es:[edi],dx
  421dd4:	ins    BYTE PTR es:[edi],dx
  421dd5:	sbb    dl,BYTE PTR [esi+ecx*8-0x15343324]
  421ddc:	mov    al,0x8d
  421dde:	jmp    0xb9ded5c8
  421de3:	arpl   WORD PTR [ecx+edi*4+0x2846a53b],sp
  421dea:	xchg   esp,eax
  421deb:	jg     0x421d8e
  421ded:	(bad)  
  421dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421def:	xchg   ebp,eax
  421df0:	xor    cl,BYTE PTR [edx+0x197d9d6f]
  421df6:	gs cdq 
  421df8:	cdq    
  421df9:	push   esi
  421dfa:	xor    BYTE PTR [edi],cl
  421dfc:	lds    ecx,FWORD PTR [ebx]
  421dfe:	int    0xc1
  421e00:	xchg   ebx,eax
  421e01:	fstp   DWORD PTR [eax+0x444484bc]
  421e07:	sbb    ebx,eax
  421e09:	ret    0xd113
  421e0c:	popfw  
  421e0e:	and    ebp,DWORD PTR [ebx-0x64c5c44f]
  421e14:	inc    ecx
  421e15:	inc    esi
  421e16:	es (bad) 
  421e18:	mov    ah,0x86
  421e1a:	cs dec ebp
  421e1c:	xchg   edx,eax
  421e1d:	jb     0x421e0d
  421e1f:	mov    esi,0x564bda79
  421e24:	push   esp
  421e25:	jns    0x421e54
  421e27:	pushf  
  421e28:	leave  
  421e29:	iret   
  421e2a:	ja     0x421e4b
  421e2c:	(bad)  
  421e2d:	fisttp WORD PTR [edx+0x68171e47]
  421e33:	sub    edi,DWORD PTR [ecx]
  421e35:	push   0x84e00512
  421e3a:	cmp    DWORD PTR [ebx-0x6491da17],ebx
  421e40:	(bad)  
  421e41:	(bad)  
  421e42:	jg     0x421e0a
  421e44:	push   eax
  421e45:	mov    ch,BYTE PTR [ecx+0x37825712]
  421e4b:	lods   al,BYTE PTR ds:[esi]
  421e4c:	adc    ch,BYTE PTR [edi+0x57518361]
  421e52:	shl    DWORD PTR [edx],1
  421e54:	push   esi
  421e55:	adc    al,0xc5
  421e57:	aaa    
  421e58:	bndldx bnd1,[ecx+0x26]
  421e5c:	cmp    al,BYTE PTR [ebx]
  421e5e:	lahf   
  421e5f:	mov    edi,0x6f96a63a
  421e64:	dec    edi
  421e65:	jne    0x421ea8
  421e67:	arpl   WORD PTR ds:0x98ab8457,cx
  421e6d:	test   eax,0x54febe8f
  421e72:	pop    edx
  421e73:	mov    esi,0x685a8c16
  421e78:	add    DWORD PTR [eax+0x6],ebp
  421e7b:	jmp    0x421efb
  421e7d:	xor    eax,DWORD PTR [eax+0x47f4f33d]
  421e83:	loopne 0x421e0d
  421e85:	imul   edx,ebp,0x409b1802
  421e8b:	mov    DWORD PTR [ebx],0x90d5b151
  421e91:	fild   DWORD PTR [edx-0x38]
  421e94:	iret   
  421e95:	cld    
  421e96:	xchg   DWORD PTR [edx-0x70fc261c],edx
  421e9c:	(bad)  
  421e9d:	cli    
  421e9e:	cmc    
  421e9f:	imul   edi,ecx,0x55
  421ea2:	add    dh,bl
  421ea4:	dec    DWORD PTR [ebp-0x75d46805]
  421eaa:	inc    BYTE PTR [ebx]
  421eac:	inc    ebx
  421ead:	daa    
  421eae:	fcmovb st,st(6)
  421eb0:	mov    eax,ds:0x4fe6261f
  421eb5:	jae    0x421ef6
  421eb7:	sbb    BYTE PTR [esi-0x74],bh
  421eba:	data16 arpl WORD PTR [edx-0x42],cx
  421ebe:	fldenv [edi]
  421ec0:	mov    dh,0xc6
  421ec2:	cmc    
  421ec3:	jle    0x421e51
  421ec5:	cmc    
  421ec6:	inc    ecx
  421ec7:	pop    ecx
  421ec8:	pusha  
  421ec9:	out    dx,al
  421eca:	je     0x421e51
  421ecc:	shl    DWORD PTR [esp+eiz*8+0x2f],1
  421ed0:	ja     0x421ef2
  421ed2:	push   0xffffff8d
  421ed4:	pusha  
  421ed5:	mov    esp,0xbd31c29a
  421eda:	mov    ah,0xfd
  421edc:	cli    
  421edd:	into   
  421ede:	and    esp,ecx
  421ee0:	test   al,0x56
  421ee2:	xchg   edi,eax
  421ee3:	std    
  421ee4:	retf   0xf79f
  421ee7:	push   ebx
  421ee8:	addr16 stc 
  421eea:	shl    BYTE PTR [ecx],1
  421eec:	test   DWORD PTR [edi+0x6d],esp
  421eef:	jmp    0x421ec7
  421ef1:	loop   0x421f3a
  421ef3:	mov    cl,ch
  421ef5:	pushf  
  421ef6:	call   DWORD PTR [esi]
  421ef8:	test   eax,0xdf7efc2b
  421efd:	mov    BYTE PTR [ecx+esi*8-0x2f],al
  421f01:	mov    ah,0xd7
  421f03:	pushf  
  421f04:	mov    ds:0x4a77b7a,al
  421f09:	add    al,0x96
  421f0b:	inc    ebp
  421f0c:	jle    0x421eb8
  421f0e:	scas   al,BYTE PTR es:[edi]
  421f0f:	and    bl,BYTE PTR [edx+0x70]
  421f12:	push   esp
  421f13:	cmp    ebp,esp
  421f15:	retf   0xd926
  421f18:	repz shl ebp,1
  421f1b:	in     al,0x85
  421f1d:	dec    esi
  421f1e:	in     eax,dx
  421f1f:	jecxz  0x421f12
  421f21:	dec    ebx
  421f22:	adc    eax,0x9706fb3a
  421f27:	push   ebp
  421f28:	iret   
  421f29:	in     eax,dx
  421f2a:	and    cl,BYTE PTR [eax-0x3c977f6b]
  421f30:	clc    
  421f31:	scas   al,BYTE PTR es:[edi]
  421f32:	mov    ebx,0xb4fb956b
  421f37:	scas   al,BYTE PTR es:[edi]
  421f38:	test   eax,0x856b9c49
  421f3d:	add    esi,ecx
  421f3f:	jl     0x421f84
  421f41:	sub    esi,ecx
  421f43:	adc    DWORD PTR [ecx-0x396571ad],edi
  421f49:	call   0x8a7bf0d1
  421f4e:	in     eax,dx
  421f4f:	fbld   TBYTE PTR [edx-0x18]
  421f52:	sub    ebp,0xffffffe5
  421f55:	rcl    DWORD PTR [ebx],0xf1
  421f58:	and    ax,0x6a9d
  421f5c:	fs mov ch,0xba
  421f5f:	xchg   ecx,eax
  421f60:	sbb    ebp,eax
  421f62:	xchg   DWORD PTR [edi],ebp
  421f64:	mov    ch,0x17
  421f66:	pop    eax
  421f67:	and    edi,DWORD PTR [ecx]
  421f69:	push   edi
  421f6a:	mov    cl,0x55
  421f6c:	test   eax,edi
  421f6e:	shl    BYTE PTR [eax-0x59],cl
  421f71:	icebp  
  421f72:	mov    esp,0x25ac4ccd
  421f77:	xchg   ebx,eax
  421f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f79:	jg     0x421efe
  421f7b:	(bad)  [ebp-0x3b]
  421f7e:	les    esp,FWORD PTR [edx]
  421f80:	mov    eax,0xfe17fb0d
  421f85:	mov    cl,BYTE PTR [eax+0x50bd9071]
  421f8b:	loopne 0x421f11
  421f8d:	fadd   QWORD PTR [edi+ecx*2-0x70]
  421f91:	(bad)  
  421f93:	pop    ecx
  421f94:	aaa    
  421f95:	out    0xa,al
  421f97:	lahf   
  421f98:	inc    edx
  421f99:	(bad)  
  421f9a:	popa   
  421f9b:	sbb    eax,0x2f8ad5a3
  421fa0:	cs ins DWORD PTR es:[edi],dx
  421fa2:	cs xor eax,edx
  421fa5:	sub    BYTE PTR [ecx],ch
  421fa7:	mov    eax,DWORD PTR [ecx+0x27]
  421faa:	jge    0x421f91
  421fac:	(bad)  
  421fad:	xchg   edx,eax
  421fae:	inc    ebx
  421faf:	test   ebx,ebx
  421fb1:	aaa    
  421fb2:	popf   
  421fb3:	ret    0x6175
  421fb6:	in     al,0x55
  421fb8:	add    BYTE PTR [ebp+0x2c],bh
  421fbb:	sub    al,0x41
  421fbd:	arpl   WORD PTR [eax],si
  421fbf:	inc    esi
  421fc0:	mov    ds:0xab3dec7a,eax
  421fc5:	mov    ds:0x66bcb60,al
  421fca:	add    al,0x7c
  421fcc:	adc    bl,BYTE PTR [eax+eax*4-0x2e825140]
  421fd3:	sbb    al,0x1
  421fd5:	fnstenv [eax+0x37]
  421fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fd9:	push   0x22
  421fdb:	aas    
  421fdc:	jp     0x421f86
  421fde:	adc    ah,cl
  421fe0:	retf   0xbcc8
  421fe3:	dec    ebp
  421fe5:	push   ebp
  421fe6:	aas    
  421fe7:	fld    QWORD PTR [eax]
  421fe9:	add    DWORD PTR [esi+0x65],esp
  421fec:	enter  0xd2eb,0x1a
  421ff0:	cmp    ah,BYTE PTR [edx+0x25b1047b]
  421ff6:	inc    ebp
  421ff7:	or     BYTE PTR [esp+edx*8-0x43],0x4d
  421ffc:	sbb    ah,ch
  421ffe:	std    
  421fff:	jecxz  0x421fd5
  422001:	sub    ebx,edi
  422003:	push   esp
  422004:	shr    BYTE PTR cs:0x7b5b9b0b,cl
  42200b:	push   ds
  42200c:	hlt    
  42200d:	sahf   
  42200e:	push   0xf
  422010:	push   ecx
  422011:	cmp    eax,ebx
  422013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422014:	pop    esp
  422015:	mov    DWORD PTR [ebp+0x3bba755d],edx
  42201b:	xchg   ebx,eax
  42201c:	push   ds
  42201d:	scas   eax,DWORD PTR es:[edi]
  42201e:	xor    BYTE PTR [ecx],ch
  422020:	jae    0x42208d
  422022:	js     0x422094
  422024:	mov    dh,0xe3
  422026:	ss jbe 0x421fce
  422029:	xor    al,0x79
  42202b:	scas   eax,DWORD PTR es:[edi]
  42202c:	mov    ebp,0x3b407d04
  422031:	out    dx,eax
  422032:	push   edi
  422033:	push   0x7e
  422035:	test   DWORD PTR [ecx],eax
  422037:	mov    ds:0x183648f6,eax
  42203c:	sbb    eax,DWORD PTR [ebp-0x60]
  42203f:	clc    
  422040:	cmp    bl,BYTE PTR [esi+0x2a]
  422043:	stos   DWORD PTR es:[edi],eax
  422044:	jge    0x421fe1
  422046:	mov    gs,WORD PTR [ebp+0x37]
  422049:	or     bl,BYTE PTR [eax]
  42204b:	sbb    al,0x1a
  42204d:	pop    ecx
  42204e:	and    edi,ebp
  422050:	out    dx,eax
  422051:	jmp    0x42206e
  422053:	sub    ebp,DWORD PTR [ebp+0x207280d3]
  422059:	jbe    0x422028
  42205b:	mov    dh,0xd8
  42205d:	push   es
  42205e:	mov    al,0x62
  422060:	(bad)  
  422061:	jmp    0xfbb8:0x6a603a7c
  422068:	push   es
  422069:	into   
  42206a:	jle    0x422029
  42206c:	shl    dl,0x6d
  42206f:	ss and eax,0xadb74d1a
  422075:	and    al,0xf4
  422077:	into   
  422078:	outs   dx,DWORD PTR ds:[esi]
  422079:	pop    ebp
  42207a:	inc    ebp
  42207b:	ja     0x422025
  42207d:	imul   edi,DWORD PTR [edx+0x3752ff2f],0x8aef22c3
  422087:	jne    0x422034
  422089:	pop    es
  42208a:	jnp    0x42204c
  42208c:	mov    al,0x4c
  42208e:	mov    dh,0x25
  422090:	cmp    eax,0x3bb92e79
  422095:	gs push 0x8e88b29f
  42209b:	out    0x7b,al
  42209d:	stc    
  42209e:	(bad)  
  42209f:	xchg   esi,eax
  4220a0:	pushf  
  4220a1:	cmp    esp,DWORD PTR [ebx]
  4220a3:	pop    ebx
  4220a4:	cmp    eax,0xddbe35f6
  4220a9:	es sahf 
  4220ab:	stc    
  4220ac:	lds    esp,FWORD PTR [edx-0x42]
  4220af:	jne    0x4220a0
  4220b1:	xor    bh,BYTE PTR [ebx]
  4220b3:	mov    BYTE PTR [ecx+eax*1-0x1ff8148a],al
  4220ba:	(bad)  
  4220bb:	out    0x10,al
  4220bd:	pop    ebx
  4220be:	sbb    edx,ebp
  4220c0:	sahf   
  4220c1:	dec    ecx
  4220c2:	add    BYTE PTR [esi+0x6ddf107c],dl
  4220c8:	mov    edi,0xf78f8738
  4220cd:	mov    ebp,DWORD PTR [edx-0x755233b7]
  4220d3:	sbb    ebp,DWORD PTR [ebp+0x79]
  4220d6:	(bad)  
  4220d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220d9:	mov    ebx,DWORD PTR ds:0xbec85e74
  4220e0:	xor    ecx,DWORD PTR [esi-0x567fecb]
  4220e6:	icebp  
  4220e7:	sub    eax,0x76064fe2
  4220ec:	fadd   st,st(0)
  4220ee:	mov    ds:0x557d6164,eax
  4220f3:	adc    eax,0x11c7ba4c
  4220f8:	push   cs
  4220f9:	push   esp
  4220fa:	xlat   BYTE PTR ds:[ebx]
  4220fb:	into   
  4220fc:	dec    BYTE PTR [edx]
  4220fe:	xchg   esp,eax
  4220ff:	fadd   DWORD PTR ss:[ecx+0x6d2b8592]
  422106:	mov    al,ds:0x7a904b2e
  42210b:	mov    eax,0x745f7570
  422110:	push   esp
  422111:	das    
  422112:	dec    edi
  422113:	dec    ebp
  422114:	xchg   ebx,eax
  422115:	mov    bh,0x40
  422117:	xor    DWORD PTR [edi+0x31],esp
  42211a:	cs push esp
  42211c:	mov    cl,0xf3
  42211e:	sub    eax,0xcc0a9931
  422123:	cmp    DWORD PTR [ecx+0x66],ebp
  422126:	nop
  422127:	pop    ss
  422128:	lods   eax,DWORD PTR ds:[esi]
  422129:	mov    ebp,0x9780cffc
  42212e:	addr16 (bad) 
  422130:	test   eax,0xff9d292c
  422135:	dec    DWORD PTR [ebx-0x6d15e14d]
  42213b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42213c:	jmp    0x6a66:0xebcb88f0
  422143:	pop    ss
  422144:	shl    BYTE PTR [ebx],cl
  422146:	sbb    eax,0x5817f150
  42214b:	xchg   ebx,eax
  42214c:	dec    ebp
  42214d:	push   es
  42214e:	cmp    eax,0xd5537d4a
  422153:	dec    ecx
  422154:	sub    eax,0x179e1a1c
  422159:	xchg   DWORD PTR [ebx+0x6d],edi
  42215c:	cmc    
  42215d:	mov    al,ds:0x7e8d75b1
  422162:	mov    bh,0x9
  422164:	dec    esp
  422165:	test   al,0xd
  422167:	enter  0xbca5,0x1
  42216b:	inc    eax
  42216c:	in     al,0x46
  42216e:	mov    dh,0xba
  422170:	jae    0x42213e
  422172:	hlt    
  422173:	iret   
  422174:	stos   DWORD PTR es:[edi],eax
  422175:	push   esi
  422176:	cli    
  422177:	gs xor al,0xed
  42217a:	push   cs
  42217b:	arpl   WORD PTR [ecx],cx
  42217d:	in     al,0x33
  42217f:	cmp    al,0x50
  422181:	jmp    0x9f3b30ea
  422186:	pop    eax
  422187:	xor    DWORD PTR [edi-0xd91a306],ebx
  42218d:	mov    ebp,0xf6484e1e
  422192:	xor    esi,DWORD PTR [esi+0x7e]
  422195:	aas    
  422196:	call   0xc7da:0x837b7d71
  42219d:	int    0xc1
  42219f:	clc    
  4221a0:	shr    DWORD PTR [ebx+0x29c2a153],cl
  4221a6:	sbb    al,0x59
  4221a8:	mov    bl,0x7a
  4221aa:	push   ss
  4221ab:	xor    ebp,DWORD PTR [esi-0x76]
  4221ae:	or     ebx,DWORD PTR [ebp-0x34]
  4221b1:	dec    edx
  4221b2:	js     0x4221d8
  4221b4:	cmp    ch,0x1e
  4221b7:	mov    WORD PTR [edx+0x30],?
  4221ba:	add    al,0x67
  4221bc:	retf   0x6165
  4221bf:	jo     0x42219e
  4221c1:	pop    esi
  4221c2:	ret    0xf32d
  4221c5:	xor    esi,edi
  4221c7:	push   ss
  4221c8:	and    al,0xc9
  4221ca:	or     eax,0xd9f9f950
  4221cf:	fadd   QWORD PTR [ebx+0x48]
  4221d2:	sub    al,0x7e
  4221d4:	pop    edx
  4221d5:	int    0xa3
  4221d7:	out    dx,al
  4221d8:	jl     0x422173
  4221da:	bnd jo 0x42223f
  4221dd:	fist   DWORD PTR [edi+0x126bde26]
  4221e3:	mov    al,bh
  4221e5:	test   eax,0x113dc55a
  4221ea:	scas   al,BYTE PTR es:[edi]
  4221eb:	rcl    BYTE PTR [esi+0x7b],0x47
  4221ef:	pop    edx
  4221f0:	and    ecx,DWORD PTR [esi]
  4221f2:	add    DWORD PTR [ebp-0x36],esi
  4221f5:	pop    ebx
  4221f6:	sub    eax,0xa728bd14
  4221fb:	mov    ds:0x127fb250,al
  422200:	push   esi
  422201:	push   ecx
  422202:	xor    edx,DWORD PTR [ecx]
  422204:	fwait
  422205:	stos   DWORD PTR es:[edi],eax
  422206:	push   esp
  422207:	aam    0x1b
  422209:	loope  0x42224c
  42220b:	stc    
  42220c:	enter  0x1860,0x5
  422210:	dec    ebp
  422211:	scas   eax,DWORD PTR es:[edi]
  422212:	xor    ah,BYTE PTR [esi]
  422214:	retf   
  422215:	int    0x9d
  422217:	xchg   ecx,eax
  422218:	pop    es
  422219:	sbb    ch,BYTE PTR [edx]
  42221b:	mov    eax,0x59aca385
  422220:	xchg   esp,eax
  422221:	xor    eax,0x3192b742
  422226:	ds out 0x4b,eax
  422229:	dec    ecx
  42222a:	xchg   esp,eax
  42222b:	push   ebp
  42222c:	repnz or cl,al
  42222f:	ds adc al,ch
  422232:	or     BYTE PTR cs:[edi-0x76],bl
  422236:	cmp    BYTE PTR [edi+0x2],ch
  422239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42223a:	retf   0x739e
  42223d:	mov    ecx,0x9f0a06ec
  422242:	jne    0x42229c
  422244:	out    0x4e,al
  422246:	xor    eax,0xb2eb7c45
  42224b:	cmp    BYTE PTR [ecx],0xe2
  42224e:	jle    0x422261
  422250:	inc    edx
  422251:	call   0x8808:0xd9754ad4
  422258:	out    dx,al
  422259:	retf   0x76e2
  42225c:	cdq    
  42225d:	mov    edi,0x5ce7d397
  422262:	dec    ecx
  422263:	xor    DWORD PTR ss:[ecx],0x3e
  422267:	cmp    cl,BYTE PTR [ecx]
  422269:	xor    al,0xa7
  42226b:	daa    
  42226c:	fwait
  42226d:	rcl    BYTE PTR [eax+0x41],cl
  422270:	imul   edx,DWORD PTR [edi+eax*2-0x6d],0x29
  422275:	std    
  422276:	mov    edi,0xfbcf6a47
  42227b:	pop    ebp
  42227c:	xchg   ebp,eax
  42227d:	add    DWORD PTR [edx],ebp
  42227f:	mov    ds:0xe7162e56,al
  422284:	mov    cl,0xa9
  422286:	mul    BYTE PTR [ecx+0x3d]
  422289:	adc    al,0x70
  42228b:	(bad)  
  42228c:	mov    edx,DWORD PTR [ebp-0x6e]
  42228f:	aam    0x47
  422291:	adc    BYTE PTR ds:0x59317fa2,dh
  422297:	cld    
  422298:	cs pop esp
  42229a:	sbb    al,0xa
  42229c:	pusha  
  42229d:	push   esp
  42229e:	hlt    
  42229f:	push   0xce0ef1d5
  4222a4:	push   edi
  4222a5:	mov    esi,0xe2d8c630
  4222aa:	js     0x42228f
  4222ac:	mul    DWORD PTR [ebx]
  4222ae:	push   es
  4222af:	repz push edx
  4222b1:	jmp    0x4222bf
  4222b3:	jno    0x4222bc
  4222b5:	clc    
  4222b6:	(bad)  
  4222b8:	loop   0x4222fb
  4222ba:	sub    DWORD PTR [eax+ebx*1-0x22],edi
  4222be:	pop    ecx
  4222bf:	std    
  4222c0:	jmp    0xfe8c893a
  4222c5:	dec    eax
  4222c6:	pop    ds
  4222c7:	int3   
  4222c8:	mov    cs,WORD PTR [edi]
  4222ca:	bound  ecx,QWORD PTR [ebx-0x573f96ed]
  4222d0:	cmp    al,0xa2
  4222d2:	cmp    ebp,eax
  4222d4:	dec    ebx
  4222d5:	mov    al,ds:0x8cf7996c
  4222da:	jnp    0x42230d
  4222dc:	test   eax,0x74a08ec1
  4222e1:	sub    esp,DWORD PTR [ecx-0x27]
  4222e4:	and    DWORD PTR [esi],edx
  4222e6:	xor    DWORD PTR [ebx-0x86122bf],ecx
  4222ec:	push   ebp
  4222ed:	xchg   ecx,eax
  4222ee:	push   esp
  4222ef:	dec    ebx
  4222f0:	cld    
  4222f1:	int    0x7b
  4222f3:	sahf   
  4222f4:	dec    ebp
  4222f5:	lock sub al,0x97
  4222f8:	jg     0x42235e
  4222fa:	pushf  
  4222fb:	sub    eax,0xb3a1b6b8
  422300:	jmp    DWORD PTR [edx-0xe]
  422303:	fucomp st(0)
  422305:	push   ss
  422306:	xor    esp,DWORD PTR [esi-0x40]
  422309:	adc    eax,0x41bd15a8
  42230e:	push   ebp
  42230f:	test   ebp,esp
  422311:	adc    DWORD PTR [eax],esi
  422313:	ds stos BYTE PTR es:[edi],al
  422315:	popf   
  422316:	pop    edx
  422317:	(bad)  
  422318:	mov    edx,0x41e28ba7
  42231d:	jnp    0x42230c
  42231f:	outs   dx,BYTE PTR ds:[esi]
  422320:	add    edx,edi
  422322:	daa    
  422323:	not    DWORD PTR [ecx]
  422325:	or     DWORD PTR [ebp+0x862358d],ebx
  42232b:	clc    
  42232c:	(bad)  
  42232d:	or     eax,0xd05c81d1
  422332:	jmp    0xa116:0xf1921c4a
  422339:	fsub   QWORD PTR [esi]
  42233b:	and    DWORD PTR [ecx-0x5ca91f85],edx
  422341:	xor    ebx,DWORD PTR [esi+0x63458fd4]
  422347:	shr    BYTE PTR [edi],1
  422349:	mov    DWORD PTR [ebx],ecx
  42234b:	jecxz  0x422360
  42234d:	xor    al,0x2a
  42234f:	or     eax,0xaf3b7c77
  422354:	int    0x29
  422356:	inc    edx
  422357:	aad    0x52
  422359:	xchg   ebx,eax
  42235a:	or     DWORD PTR [esi-0x6b],ebp
  42235d:	hlt    
  42235e:	dec    eax
  42235f:	mov    edx,DWORD PTR [ecx]
  422361:	pop    ebp
  422362:	lea    esi,[edi+0x1ee5fe7e]
  422368:	mov    al,ds:0xbcc9aa7f
  42236d:	jb     0x42234d
  42236f:	sbb    cl,dh
  422371:	retf   0x2c3a
  422374:	ja     0x42234a
  422376:	mov    bl,0xc
  422378:	push   es
  422379:	and    ebx,DWORD PTR [esi-0x25]
  42237c:	jmp    0x42233e
  42237e:	dec    edi
  42237f:	add    al,0xad
  422381:	mov    ch,0x64
  422383:	pop    es
  422384:	mov    cl,0x84
  422386:	loopne 0x4223c3
  422388:	pop    edx
  422389:	icebp  
  42238a:	lock fisubr WORD PTR [ecx-0x78]
  42238e:	(bad)  
  42238f:	pop    eax
  422390:	push   es
  422391:	gs cmp al,0x81
  422394:	fsubp  st(5),st
  422396:	or     al,0x20
  422398:	imul   ebx,esi,0xffffff97
  42239b:	cdq    
  42239c:	arpl   WORD PTR [ecx+eax*2+0x3701ddba],si
  4223a3:	ret    0x9d75
  4223a6:	and    DWORD PTR [ecx+0x544c2769],esi
  4223ac:	imul   ebx,DWORD PTR [ebp-0x328045a4],0xd7b908dd
  4223b6:	test   bl,0x39
  4223b9:	sub    DWORD PTR [ecx+0x24],0x2a6c75ee
  4223c0:	es out dx,eax
  4223c2:	pop    ss
  4223c3:	xchg   esi,eax
  4223c4:	pop    ebp
  4223c5:	dec    ebx
  4223c6:	mov    ds:0x9c543178,al
  4223cb:	outs   dx,BYTE PTR ds:[esi]
  4223cc:	arpl   cx,di
  4223ce:	xor    BYTE PTR [edx-0x5eb20eff],dl
  4223d4:	mov    ebp,0x753ce32e
  4223d9:	inc    eax
  4223da:	inc    eax
  4223db:	test   BYTE PTR ds:0xe9d68fce,dh
  4223e1:	inc    ebx
  4223e2:	popa   
  4223e3:	stos   BYTE PTR es:[edi],al
  4223e4:	bound  edx,QWORD PTR [ebp-0x15]
  4223e7:	pop    esp
  4223e8:	fist   WORD PTR ds:0x319a8f90
  4223ee:	repz cmp edi,DWORD PTR [ebp+0x3c]
  4223f2:	jmp    FWORD PTR [ebp+0x60]
  4223f5:	mov    ch,0xda
  4223f7:	pop    eax
  4223f8:	pushf  
  4223f9:	call   0x2f4bac5a
  4223fe:	push   edi
  4223ff:	repz mov al,ds:0x8fe3a4db
  422405:	sub    eax,0x3e66a4e9
  42240a:	in     al,0x1e
  42240c:	jg     0x42242e
  42240e:	fimul  WORD PTR ss:[ebp+0x1]
  422412:	dec    esp
  422413:	mov    ds:0xafe88ce2,eax
  422418:	cdq    
  422419:	test   eax,0xcf60dc20
  42241e:	cmp    BYTE PTR [esi],bl
  422420:	cmp    al,0xb5
  422422:	dec    edx
  422423:	fwait
  422424:	push   edi
  422425:	outs   dx,DWORD PTR ds:[esi]
  422426:	pop    ebp
  422427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422428:	out    0x3c,al
  42242a:	push   cs
  42242b:	icebp  
  42242c:	xor    al,0xb1
  42242e:	or     DWORD PTR [eax],edi
  422430:	mov    dl,0xa2
  422432:	or     DWORD PTR [eax+0x6],edi
  422435:	push   ebx
  422436:	cmp    edi,DWORD PTR [edi-0x711a5073]
  42243c:	cmp    al,0xc7
  42243e:	sbb    esp,DWORD PTR [esi-0x115e68a0]
  422444:	rep outs dx,DWORD PTR ds:[esi]
  422446:	cmp    ebp,DWORD PTR [esi]
  422448:	cmp    edi,DWORD PTR ds:0x8d60405f
  42244e:	dec    edi
  42244f:	addr16 out dx,al
  422451:	adc    al,BYTE PTR [esi+0xef6f9c3]
  422457:	jmp    0xbfdf43cc
  42245c:	pop    edx
  42245d:	mov    al,0x58
  42245f:	shr    DWORD PTR [esi+0x1108b099],0x5c
  422466:	mov    bh,0xb9
  422468:	sbb    bl,BYTE PTR [edi-0x628504cc]
  42246e:	adc    esi,DWORD PTR [edx+ebx*2+0x49879fdd]
  422475:	rcr    DWORD PTR [ebp+edx*4+0x36],1
  422479:	pop    ss
  42247a:	neg    bh
  42247c:	ss test al,0x7b
  42247f:	xor    ah,BYTE PTR [eax-0x635b1c5]
  422485:	mov    bl,0xb2
  422487:	jge    0x42247d
  422489:	mov    DWORD PTR [edi+0x27afc538],esi
  42248f:	inc    ebx
  422490:	outs   dx,DWORD PTR ds:[esi]
  422491:	pop    edx
  422492:	dec    edi
  422493:	scas   al,BYTE PTR es:[edi]
  422494:	mov    DWORD PTR [edx-0x6b50cfa6],esp
  42249a:	icebp  
  42249b:	pop    esp
  42249c:	jb     0x42243f
  42249e:	test   DWORD PTR [ebp-0x64],ebp
  4224a1:	xlat   BYTE PTR ds:[ebx]
  4224a2:	fidivr WORD PTR [ebx]
  4224a4:	mov    ah,0x36
  4224a6:	cli    
  4224a7:	(bad)  
  4224a8:	fscale 
  4224aa:	mov    ds:0xac99da02,eax
  4224af:	aad    0xc6
  4224b1:	imul   eax,DWORD PTR [edx],0x1c
  4224b4:	jg     0x4224e4
  4224b6:	(bad)  [ebx]
  4224b8:	mov    edi,0x726752f9
  4224bd:	ror    BYTE PTR [ecx+0x32341d3],1
  4224c3:	div    BYTE PTR [edi+0x19]
  4224c6:	inc    edi
  4224c7:	mov    cl,0xee
  4224c9:	dec    edx
  4224ca:	push   eax
  4224cb:	out    0x93,eax
  4224cd:	clc    
  4224ce:	fcomp  QWORD PTR [eax]
  4224d0:	push   esi
  4224d1:	retf   
  4224d2:	neg    DWORD PTR [edx]
  4224d4:	js     0x4224c8
  4224d6:	lock xor bh,BYTE PTR ds:0xdcc67115
  4224dd:	jge    0x422519
  4224df:	jle    0x422510
  4224e1:	add    al,0x75
  4224e3:	jne    0x422563
  4224e5:	jns    0x4224c5
  4224e7:	stos   BYTE PTR es:[edi],al
  4224e8:	int    0x5d
  4224ea:	inc    edx
  4224eb:	shl    eax,0xb2
  4224ee:	fs or  edx,ecx
  4224f1:	adc    ch,BYTE PTR [ebx-0x71]
  4224f4:	pop    esp
  4224f5:	jb     0x422560
  4224f7:	xor    ah,BYTE PTR [esi-0x38]
  4224fa:	xor    al,0xd3
  4224fc:	call   0x9b17:0xaf28943b
  422503:	mov    ebp,0x7fec8eb0
  422508:	in     al,dx
  422509:	mov    ds:0x618412bd,al
  42250e:	xchg   edx,esp
  422510:	test   eax,0xab1f0af3
  422515:	sub    BYTE PTR [ecx+0x6f2c730a],bl
  42251b:	aam    0x79
  42251d:	mov    al,ds:0x5c30dcab
  422522:	in     al,dx
  422523:	sub    ebx,DWORD PTR [edi+0x1a72520a]
  422529:	mov    WORD PTR [ebx+ebx*4-0x8ab0732],es
  422530:	popf   
  422531:	test   al,0x62
  422533:	jb     0x422567
  422535:	outs   dx,DWORD PTR ds:[esi]
  422536:	sahf   
  422537:	jo     0x422516
  422539:	push   edi
  42253a:	loop   0x422526
  42253c:	ret    0x7f1c
  42253f:	mov    ah,0xaf
  422541:	or     DWORD PTR [ecx],0xf1831386
  422547:	aas    
  422548:	xchg   edi,eax
  422549:	lds    esi,FWORD PTR [eax-0x14]
  42254c:	push   eax
  42254d:	push   edi
  42254e:	push   ecx
  42254f:	jecxz  0x42253a
  422551:	jno    0x4224e8
  422553:	inc    esp
  422554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422555:	js     0x422529
  422557:	adc    ebx,edi
  422559:	outs   dx,BYTE PTR ds:[esi]
  42255a:	xchg   ebp,eax
  42255b:	iret   
  42255c:	out    dx,al
  42255d:	stc    
  42255e:	jmp    0x81c04130
  422563:	mov    bl,0x2f
  422565:	call   0x122c1bd4
  42256a:	jp     0x422516
  42256c:	xchg   ecx,eax
  42256d:	mov    ds:0xd082c039,al
  422572:	dec    esi
  422573:	mov    edi,0x93854439
  422578:	push   0x23
  42257a:	mov    ebp,0x3d376804
  42257f:	rep ins BYTE PTR es:[edi],dx
  422581:	popa   
  422582:	cdq    
  422583:	in     al,dx
  422584:	or     DWORD PTR [ebx],ebx
  422586:	push   ss
  422587:	nop
  422588:	dec    edx
  422589:	mov    gs,WORD PTR [edx-0x349b2538]
  42258f:	mov    ch,BYTE PTR [eax+edx*8+0x54]
  422593:	mov    ch,0x22
  422595:	push   esi
  422596:	xchg   edx,eax
  422597:	sub    ebp,esi
  422599:	in     eax,0xa2
  42259b:	les    esi,FWORD PTR [esi+eax*1+0x1524373]
  4225a2:	(bad)  
  4225a4:	xchg   edi,eax
  4225a5:	call   0xb5fd0c0e
  4225aa:	stos   DWORD PTR es:[edi],eax
  4225ab:	test   BYTE PTR [esi+0x5f],al
  4225ae:	sub    al,0x10
  4225b0:	stc    
  4225b1:	pop    ds
  4225b2:	and    BYTE PTR [ebx-0x5d748174],bl
  4225b8:	sbb    al,0x63
  4225ba:	lods   eax,DWORD PTR ds:[esi]
  4225bb:	xor    cl,BYTE PTR [edx-0x61]
  4225be:	jp     0x422588
  4225c0:	mov    dl,0x91
  4225c2:	(bad)  
  4225c3:	sbb    eax,0xf8582b14
  4225c8:	cmc    
  4225c9:	or     BYTE PTR [esi+ecx*4],ch
  4225cc:	push   ebp
  4225cd:	lods   al,BYTE PTR ds:[esi]
  4225ce:	cmp    bl,bh
  4225d0:	div    BYTE PTR [eax-0x21a791f]
  4225d6:	and    edx,DWORD PTR [edi+0x47e7952c]
  4225dc:	addr16 jo 0x422647
  4225df:	in     eax,dx
  4225e0:	ins    BYTE PTR es:[edi],dx
  4225e1:	jnp    0x4225f7
  4225e3:	cmp    al,0x54
  4225e5:	xchg   ebp,eax
  4225e6:	or     al,0x31
  4225e8:	add    esi,DWORD PTR [edx+edx*2+0x19352ad2]
  4225ef:	mov    WORD PTR [ebx+0x5a],gs
  4225f2:	pop    ds
  4225f3:	mov    DWORD PTR [edi],edx
  4225f5:	or     BYTE PTR [esp+edx*8],0xf7
  4225f9:	(bad)  
  4225fa:	pop    ss
  4225fb:	out    0xa2,eax
  4225fd:	adc    eax,0xb5053a85
  422602:	cmp    DWORD PTR [edx-0x12],0xb90e0234
  422609:	dec    eax
  42260a:	les    ecx,FWORD PTR [edx]
  42260c:	(bad)  
  42260d:	mov    ds:0x3a6b564e,al
  422612:	mov    dl,0xd5
  422614:	mov    eax,esi
  422616:	cli    
  422617:	shl    DWORD PTR ds:0xd83eb99b,0x6
  42261e:	sbb    bh,BYTE PTR [edi+0x758826c3]
  422624:	(bad)  
  422625:	mov    ds:0x82bc4be6,eax
  42262a:	les    esi,FWORD PTR [esi-0x17eb6235]
  422630:	jmp    0x4225f3
  422632:	popa   
  422633:	cwde   
  422634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422635:	dec    edi
  422636:	stos   DWORD PTR es:[edi],eax
  422637:	dec    ecx
  422638:	mov    DWORD PTR [ebx],edi
  42263a:	bound  esp,QWORD PTR [edi+eiz*8-0x56]
  42263e:	jp     0x4225ef
  422640:	scas   eax,DWORD PTR es:[edi]
  422641:	mov    ch,0x47
  422643:	clc    
  422644:	aam    0x5f
  422646:	shl    BYTE PTR [esi-0xb],0x1
  42264a:	push   es
  42264b:	mov    edi,0xe3f11cd2
  422650:	imul   eax,DWORD PTR [ebx-0x649be62f],0xa943c6
  42265a:	ins    DWORD PTR es:[edi],dx
  42265b:	inc    esp
  42265c:	jg     0x422612
  42265e:	pop    ebp
  42265f:	shl    DWORD PTR [ebx+0x300bfa8d],cl
  422665:	pop    esp
  422666:	mov    al,0x50
  422668:	adc    DWORD PTR [esp+edx*4],eax
  42266b:	mov    ebp,DWORD PTR [edx]
  42266d:	mov    BYTE PTR [edx],dl
  42266f:	pop    ecx
  422670:	sar    BYTE PTR [esi+0x1c82ac4c],1
  422676:	scas   al,BYTE PTR es:[edi]
  422677:	push   ss
  422678:	xlat   BYTE PTR ds:[ebx]
  422679:	mov    ?,WORD PTR [edx]
  42267b:	into   
  42267c:	cmp    DWORD PTR [eax+0x1e],ebx
  42267f:	pop    ecx
  422680:	js     0x4226b8
  422682:	stc    
  422683:	xchg   BYTE PTR [edx+edi*1-0x5fa01262],dh
  42268a:	and    bl,BYTE PTR [eax-0xc092b6f]
  422690:	fs das 
  422692:	mov    dl,dl
  422694:	shl    DWORD PTR [ebp-0x1e],1
  422697:	cli    
  422698:	(bad)  
  422699:	nop
  42269a:	fcmovu st,st(5)
  42269c:	mov    ah,0x8
  42269e:	xchg   ebp,eax
  42269f:	xchg   ecx,eax
  4226a0:	mov    dl,dl
  4226a2:	stc    
  4226a3:	jp     0x42263a
  4226a5:	mov    bh,0x30
  4226a7:	ins    BYTE PTR es:[edi],dx
  4226a8:	ror    DWORD PTR gs:[edx+0x46],1
  4226ac:	sbb    eax,DWORD PTR [ecx+0x2e]
  4226af:	(bad)  [edi-0x59a27c20]
  4226b5:	(bad)  
  4226b6:	sub    ecx,DWORD PTR [ecx+0x8]
  4226b9:	mov    edi,0x363731d9
  4226be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226bf:	bound  ecx,QWORD PTR [esi-0x57fde914]
  4226c5:	out    0x17,eax
  4226c7:	lds    edx,FWORD PTR [esi+0x3fb3e640]
  4226cd:	jns    0x4226d4
  4226cf:	xchg   esp,eax
  4226d0:	push   ecx
  4226d1:	int3   
  4226d2:	and    ah,BYTE PTR [eax]
  4226d4:	pop    edi
  4226d5:	xor    BYTE PTR [edi+0x6f],dl
  4226d8:	and    ch,BYTE PTR [edx-0x64ecd06]
  4226de:	retf   
  4226df:	mov    bh,0xfc
  4226e1:	xchg   edx,eax
  4226e2:	pop    edi
  4226e3:	xor    al,0xa1
  4226e5:	repz xor ecx,esi
  4226e8:	mov    cl,0x9e
  4226ea:	test   BYTE PTR [ebp+eax*1+0x64775f6f],ch
  4226f1:	cdq    
  4226f2:	ins    DWORD PTR es:[edi],dx
  4226f3:	xor    ah,BYTE PTR [ecx-0x643f8d9f]
  4226f9:	and    al,0xf7
  4226fb:	scas   eax,DWORD PTR es:[edi]
  4226fc:	adc    ah,0x6e
  4226ff:	push   eax
  422700:	mov    ds:0xee0f085e,al
  422705:	cmc    
  422706:	bound  esi,QWORD PTR [ebp+0x67]
  422709:	test   BYTE PTR [ecx-0xe],bl
  42270c:	cmp    bl,BYTE PTR es:[ebx-0x73263726]
  422713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422714:	xchg   esi,eax
  422715:	repnz cmp DWORD PTR [ebp+0x61],0x1dcf9978
  42271d:	dec    ebx
  42271e:	pop    ebp
  42271f:	add    BYTE PTR [eax],0x16
  422722:	loopne 0x42278a
  422724:	mov    edx,0x611292ef
  422729:	repz fs sbb eax,0x5c87fc85
  422730:	arpl   di,di
  422732:	mov    bh,0x5e
  422734:	push   0xffffffd4
  422736:	adc    BYTE PTR [edi-0x6b2489c7],0xf3
  42273d:	call   0x3eb3:0x7dde3df7
  422744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422745:	dec    edi
  422746:	mov    ch,0x81
  422748:	sub    eax,0xbf91544d
  42274d:	imul   ebp,DWORD PTR [ecx-0x6394c346],0xffffffc3
  422754:	xchg   esi,eax
  422755:	xchg   edx,eax
  422756:	retf   
  422757:	ret    0x11a4
  42275a:	scas   al,BYTE PTR es:[edi]
  42275b:	add    eax,0x17
  42275e:	ins    DWORD PTR es:[edi],dx
  42275f:	es hlt 
  422761:	jns    0x42273e
  422763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422764:	adc    edx,DWORD PTR [ebp-0x4f]
  422767:	shr    DWORD PTR [ebx-0xb],cl
  42276a:	xchg   edx,eax
  42276b:	pop    edx
  42276c:	or     ah,BYTE PTR [ecx+0x7a]
  42276f:	inc    edi
  422770:	mov    ds:0xbb3a570,al
  422775:	int    0xbe
  422777:	dec    ebp
  422778:	mov    al,0x16
  42277a:	(bad)  
  42277b:	sbb    al,0xc
  42277d:	push   ss
  42277e:	jmp    0x94b:0xceb242dc
  422785:	cdq    
  422786:	jg     0x42272f
  422788:	fbstp  TBYTE PTR [edi-0xe]
  42278b:	retf   
  42278c:	loopne 0x42278d
  42278e:	mov    fs,WORD PTR [edx]
  422790:	push   0xc85b46e0
  422795:	jno    0x422721
  422797:	jns    0x422764
  422799:	pushf  
  42279a:	rol    BYTE PTR [ebx+ebx*1-0x71],cl
  42279e:	cmc    
  42279f:	or     eax,0x2871aa11
  4227a4:	arpl   dx,cx
  4227a6:	add    eax,0xa22871ad
  4227ab:	loopne 0x42273a
  4227ad:	mov    esp,0xc937bc9d
  4227b2:	in     eax,0x27
  4227b4:	popa   
  4227b5:	cld    
  4227b6:	pop    ebp
  4227b7:	les    ecx,FWORD PTR [ebx-0x43372377]
  4227bd:	dec    eax
  4227be:	pop    ebp
  4227bf:	inc    edi
  4227c0:	push   ebp
  4227c1:	pop    ebp
  4227c2:	xchg   edx,eax
  4227c3:	or     ch,BYTE PTR [ecx-0x72]
  4227c6:	and    dl,0x8c
  4227c9:	jo     0x42276a
  4227cb:	mov    al,0x26
  4227cd:	sar    DWORD PTR [esi],0xc6
  4227d0:	push   esi
  4227d1:	pusha  
  4227d2:	adc    esi,esi
  4227d4:	pop    esi
  4227d5:	outs   dx,DWORD PTR ds:[esi]
  4227d6:	mov    WORD PTR ds:0x38c3a022,ds
  4227dc:	jmp    0x23732723
  4227e1:	lods   eax,DWORD PTR ds:[esi]
  4227e2:	jno    0x422823
  4227e4:	jae    0x4227c9
  4227e6:	mov    bh,0x16
  4227e8:	scas   al,BYTE PTR es:[edi]
  4227e9:	rcl    BYTE PTR [eax],cl
  4227eb:	add    eax,DWORD PTR [eax+0x68]
  4227ee:	out    dx,al
  4227ef:	push   eax
  4227f0:	mov    edi,0x47e74060
  4227f5:	in     al,dx
  4227f6:	sbb    eax,0x9780ab84
  4227fb:	in     al,0x43
  4227fd:	dec    esi
  4227fe:	arpl   WORD PTR ss:[edx],si
  422801:	xor    al,0xd5
  422803:	jne    0x4227a4
  422805:	push   ss
  422806:	jle    0x422803
  422808:	retf   0x247
  42280b:	je     0x4227d2
  42280d:	mov    ebx,0xdf621839
  422812:	mov    ds:0xdaee50a6,eax
  422817:	xchg   edx,eax
  422818:	iret   
  422819:	and    al,BYTE PTR [edi]
  42281b:	fisttp WORD PTR [ecx]
  42281d:	(bad)  
  42281f:	nop
  422820:	dec    ecx
  422821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422822:	pop    ecx
  422823:	mov    DWORD PTR cs:[edi+0x54987bb0],edx
  42282a:	push   0x66
  42282c:	push   esi
  42282d:	fisttp WORD PTR [ebx-0x943395f]
  422833:	cld    
  422834:	and    eax,0xd787f3d7
  422839:	fisubr WORD PTR [edx]
  42283b:	popa   
  42283c:	push   ebx
  42283d:	xchg   ebx,eax
  42283e:	lock mov al,0x65
  422841:	mov    ds:0xfa393080,eax
  422846:	cmp    al,0x38
  422848:	dec    ebx
  422849:	je     0x4228b3
  42284b:	and    BYTE PTR [ecx-0x4b],bl
  42284e:	fist   WORD PTR [esi+0x3d]
  422851:	lods   eax,DWORD PTR ds:[esi]
  422852:	loop   0x4228d3
  422854:	cdq    
  422855:	pop    ebp
  422856:	mov    bl,0xd1
  422858:	stos   DWORD PTR es:[edi],eax
  422859:	dec    ebx
  42285a:	push   0x89730088
  42285f:	aad    0xae
  422861:	clc    
  422862:	mov    BYTE PTR [eax+0x13],cl
  422865:	mov    ecx,0x33599ff1
  42286a:	xchg   esi,eax
  42286b:	cmp    BYTE PTR [edi-0x7a33715e],ch
  422871:	cmc    
  422872:	xchg   ebx,eax
  422873:	sbb    esp,DWORD PTR [eax-0x22]
  422876:	push   0xf2dbeecc
  42287b:	(bad)  [eax-0x20f8b595]
  422881:	dec    esp
  422882:	scas   al,BYTE PTR es:[edi]
  422883:	popf   
  422884:	pushf  
  422885:	mov    ds:0x5ef6c2ea,eax
  42288a:	popa   
  42288b:	jl     0x42285f
  42288d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42288e:	sub    eax,0x85a43cbb
  422893:	mov    esi,0x6d6df6b2
  422898:	lahf   
  422899:	xchg   ebx,eax
  42289a:	dec    ebx
  42289b:	pop    edx
  42289c:	pop    ds
  42289d:	into   
  42289e:	test   al,0x87
  4228a0:	and    BYTE PTR gs:[edx],0x13
  4228a4:	pop    eax
  4228a5:	mov    edi,0x715df937
  4228aa:	retf   
  4228ab:	or     al,0xd2
  4228ad:	mov    eax,ds:0x28c94700
  4228b2:	sbb    eax,0x9a08d18a
  4228b7:	je     0x422844
  4228b9:	add    dl,BYTE PTR [edx]
  4228bb:	sahf   
  4228bc:	xchg   esi,eax
  4228bd:	sbb    al,0x82
  4228bf:	ror    BYTE PTR [esi+eax*8],0x3a
  4228c3:	cmp    al,0xcf
  4228c5:	xor    esp,eax
  4228c7:	arpl   WORD PTR [edx+0x18],di
  4228ca:	(bad)  
  4228cb:	mov    ds:0x22953a90,eax
  4228d0:	arpl   di,ax
  4228d2:	retf   0xd809
  4228d5:	jns    0x422949
  4228d7:	ret    
  4228d8:	arpl   WORD PTR [ebp+0x4f],sp
  4228db:	inc    eax
  4228dc:	popf   
  4228dd:	cmp    eax,0x3a84d9fc
  4228e2:	in     ax,0x78
  4228e5:	mov    dh,0x2c
  4228e7:	in     eax,0xf8
  4228e9:	out    0xb6,al
  4228eb:	push   0x3b
  4228ed:	shl    DWORD PTR [esi-0x4972b3d0],0x8b
  4228f4:	xor    BYTE PTR ds:[edx],cl
  4228f7:	inc    edi
  4228f8:	jo     0x4228d5
  4228fa:	in     eax,dx
  4228fb:	shr    DWORD PTR [eax-0x73],cl
  4228fe:	xor    dh,BYTE PTR [edi+eiz*1+0x66]
  422902:	xchg   ecx,eax
  422903:	xor    ah,BYTE PTR [ebx+esi*4+0x65]
  422907:	xchg   BYTE PTR [esi-0x1d10dd7],dh
  42290d:	push   edx
  42290e:	xor    BYTE PTR [esi],0xf5
  422911:	out    0x30,eax
  422913:	sar    DWORD PTR [edi-0x16f102a2],cl
  422919:	and    DWORD PTR [ebp+ecx*1-0x5dd2f5e1],ebp
  422920:	jbe    0x42298b
  422922:	or     al,0xfb
  422924:	jl     0x42294d
  422926:	lds    ebp,FWORD PTR [edi+0x3d9b790c]
  42292c:	or     esp,esi
  42292e:	ins    BYTE PTR es:[edi],dx
  42292f:	jmp    0x5b2d:0xae43953a
  422936:	cmp    bl,cl
  422938:	jb     0x422991
  42293a:	sti    
  42293b:	sbb    al,0x52
  42293d:	xchg   esp,eax
  42293e:	aam    0x99
  422940:	sub    esp,0xf6723222
  422946:	les    edi,FWORD PTR [esi-0xe]
  422949:	and    cl,BYTE PTR [ebp-0x28]
  42294c:	adc    BYTE PTR [edi],bh
  42294e:	aam    0x77
  422950:	lahf   
  422951:	pusha  
  422952:	mov    bh,0xcf
  422954:	dec    edx
  422955:	sub    dh,dh
  422957:	les    esp,FWORD PTR [ebx+0x30]
  42295a:	enter  0x9d01,0x94
  42295e:	call   0x3567436f
  422963:	fwait
  422964:	xlat   BYTE PTR ds:[ebx]
  422965:	imul   esp,DWORD PTR [ecx+0x57768876],0x33d798ff
  42296f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422970:	cmp    DWORD PTR [ebp+edi*8-0xc88d855],edx
  422977:	aaa    
  422978:	ins    BYTE PTR es:[edi],dx
  422979:	xchg   ebx,eax
  42297a:	xchg   edi,eax
  42297b:	push   esp
  42297c:	arpl   sp,bx
  42297e:	in     eax,dx
  42297f:	add    BYTE PTR gs:0xef9d495b,ch
  422986:	add    DWORD PTR [edx+0xa],eax
  422989:	cmp    eax,0xad39f8b1
  42298e:	adc    dh,BYTE PTR [eax]
  422990:	mov    ds:0x97218fc0,eax
  422995:	daa    
  422996:	inc    eax
  422997:	xor    DWORD PTR [ebp+0x287d41cf],esp
  42299d:	sbb    al,0xcb
  42299f:	xchg   esp,eax
  4229a0:	pop    edx
  4229a1:	push   esi
  4229a2:	scas   al,BYTE PTR es:[edi]
  4229a3:	call   0x191f3420
  4229a8:	ficom  DWORD PTR [eax]
  4229aa:	dec    esp
  4229ab:	in     eax,dx
  4229ac:	out    dx,al
  4229ad:	out    0x30,al
  4229af:	repz (bad) 
  4229b1:	jecxz  0x4229cf
  4229b3:	aam    0xed
  4229b5:	int3   
  4229b6:	arpl   WORD PTR [edi+0x27],cx
  4229b9:	sub    al,0x1f
  4229bb:	dec    ebp
  4229bc:	xchg   edx,eax
  4229bd:	cmp    al,0xbd
  4229bf:	enter  0x3a38,0x39
  4229c3:	stc    
  4229c4:	mov    ah,0x84
  4229c6:	mov    dl,0x14
  4229c8:	mov    ds:0x17d31822,al
  4229cd:	pop    ss
  4229ce:	fneni(8087 only) 
  4229d0:	mov    BYTE PTR [edx-0x30],0xb1
  4229d4:	sbb    eax,0x30c4b37c
  4229d9:	jmp    0x908af9e8
  4229de:	pop    es
  4229df:	std    
  4229e0:	ins    DWORD PTR es:[edi],dx
  4229e1:	shr    BYTE PTR [edi],1
  4229e3:	cmc    
  4229e4:	mov    ebp,DWORD PTR [eax]
  4229e6:	gs repnz inc edx
  4229e9:	pop    es
  4229ea:	mov    WORD PTR [eax+0x47],cs
  4229ed:	dec    edi
  4229ee:	pop    ebx
  4229ef:	xor    bl,dl
  4229f1:	cmp    ebx,DWORD PTR [ebx]
  4229f3:	push   0x0
  4229f5:	call   DWORD PTR ds:0x42813c
  4229fb:	push   0x0
  4229fd:	push   0x0
  4229ff:	call   DWORD PTR ds:0x428030
  422a05:	xor    eax,eax
  422a07:	add    esp,0x10
  422a0a:	ret    0x10
  422a0d:	nop
  422a0e:	nop
  422a0f:	nop
  422a10:	jmp    DWORD PTR ds:0x428130
  422a16:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x46444c
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428168
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428068
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x464d64,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x464d70,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x464d74,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x464d68,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x464d68,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x464d6c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428064
  422b6a:	mov    ds:0x465514,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x464d54,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x428060
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x428184
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x428174
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x42804c
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x42806c
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x465510
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x464da4,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428074
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x428070
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x464da0,esi
  422d0d:	mov    ds:0x464d9c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x465508
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x465504
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x465504
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x465508
  422d40:	mov    ds:0x465504,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x464da4,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x4646c0
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x464458]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x464458]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x464d5c
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x464450,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x428080
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284dc
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d8
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x46445c]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284bc
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b8
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x46445c]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428490
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x46445c]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x42807c
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428078
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x464d5c
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x464450,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x464da8
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x46456c
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x464560
  423025:	mov    eax,ds:0x464564
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x464560
  423044:	mov    ebx,DWORD PTR ds:0x464564
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428084
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x46550c,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x465514
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284f3
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x46550c,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x464d54
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x464d84,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x464d54
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x464d54
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x464d54,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x465500,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x464d84
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x464d84,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x4651c1],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x4651c1],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x4651c1],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x46550c,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x464eb4,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x464db0
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x428080
  4233cb:	mov    eax,ds:0x465514
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x464d94,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x464d78,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x464d7c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x464eb8
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x464eb8,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x428034
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x464eb8,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x464eb8
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428018
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428088
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x465400,eax
  423580:	mov    DWORD PTR ds:0x4653e8,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x465400
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x428060
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x4653e8,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x465404
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x4653e8,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x4653e8,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x4653e8
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x465400]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x465400
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x42807c
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x4653e8
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f8
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f50
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428508
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f58
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f58
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x464594
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x464594,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x428034
  42380b:	push   DWORD PTR ds:0x464594
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b4
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x464594
  42383a:	call   DWORD PTR ds:0x4280b0
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x4644e8
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x4280ac
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b8
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x464594,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x464594
  4238b1:	call   DWORD PTR ds:0x4280b0
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x4644e8
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x4280ac
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x464d64,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x464d70,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280c0
  423914:	test   eax,eax
  423916:	mov    ds:0x4653e0,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x4653e4,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x4653e0
  423941:	call   DWORD PTR ds:0x4280bc
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x464ec0
  4239e6:	cmp    DWORD PTR [esi*8+0x4645a4],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x4645a0]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x4645a0],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x4645a0
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x4646c0
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x4645a0
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x4646c0
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x4645a0]
  423a88:	call   DWORD PTR ds:0x4280cc
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x4645a0]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x4645a0]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280d0
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x465508
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x465504
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x465508
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x465508
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x465504
  423b9c:	sub    ecx,DWORD PTR ds:0x465508
  423ba2:	mov    ds:0x465508,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x465504,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x465504,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x465508,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x465508
  423be0:	mov    ds:0x465504,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428518
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465010,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428588
  423c4a:	call   DWORD PTR ds:0x4280d4
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x42804c
  423c60:	push   0x42857c
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465010,eax
  423c6f:	je     0x423ced
  423c71:	push   0x42856c
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428558
  423c7e:	push   edi
  423c7f:	mov    ds:0x465014,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x464d64,0x2
  423c8d:	mov    ds:0x465018,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x42853c
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465020,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x428524
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x46501c,eax
  423cb2:	mov    eax,ds:0x46501c
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465020
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x464d70,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465014
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465018
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465010
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428598
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x42806c
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x4646c0
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x4651c1],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x428992]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x4651c0
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x4652c4,eax
  4240b0:	mov    ds:0x4651bc,eax
  4240b5:	mov    ds:0x4651b4,eax
  4240ba:	mov    edi,0x4652d0
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x4646c0
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x4652c4
  4240e3:	call   DWORD PTR ds:0x4280e0
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x4651b4
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x4652c4
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x4652c4
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x4651b4
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x4652c4
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x4651b4
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x4651c1],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x4652e0],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x4651c1],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x4652e0],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x4651c1],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x4652e0],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x4651c1],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x4652e0],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x4646c0
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x4646d0],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280e0
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x4651c0
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x4652c4,esi
  4242b9:	mov    DWORD PTR ds:0x4651b4,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x4651c0
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x4646e0]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x4646c8]
  424324:	or     BYTE PTR [eax+0x4651c1],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x4652c4,eax
  42434b:	mov    DWORD PTR ds:0x4651bc,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x4646d4]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x4652d0
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x4651b4,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x4651c1],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x4651c1],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x4651b4,eax
  4243a9:	mov    DWORD PTR ds:0x4651bc,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x4651bc,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x4652d0
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465024,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a8
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465024,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465024,0x1
  424421:	call   DWORD PTR ds:0x4280dc
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465024,0x1
  424438:	call   DWORD PTR ds:0x4280d8
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465024,0x1
  42444f:	mov    eax,ds:0x465054
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x4652c4
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x4651b8
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x4652c4
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x4651bc
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x4651b4
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x4652d0]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x4651c0]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x4652e0]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x4651b8,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x4651b8
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x46550c,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x46550c,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b8
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x4653e0
  4245bf:	call   DWORD PTR ds:0x4280c8
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c8
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x4653e4,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x4651a4
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x4653e4,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x4653e0
  42462e:	call   DWORD PTR ds:0x4280e4
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x465068
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e8
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428610
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465028
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x464d64,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285fc
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285d4
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x42804c
  424a16:	mov    ds:0x465028,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465028,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428620
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x4651a4
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x4653e0
  424aea:	call   DWORD PTR ds:0x4280e4
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x465068,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x465074
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x465190
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x465194
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46518c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x465070
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x46481c
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x46481c
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x46481c
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x46481c
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x46481c
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x46481c
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x46481c
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x46481c
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x4647c8
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287b0
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x4653e0
  424cf7:	call   DWORD PTR ds:0x4280e4
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x4651a0,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x465198,0x0
  424d12:	and    DWORD PTR ds:0x46519c,0x0
  424d19:	mov    ds:0x4651a8,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x4651a4,ecx
  424d26:	mov    DWORD PTR ds:0x4651ac,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46519c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x4651a0
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x465198
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x4651b0
  424f8c:	mov    esi,DWORD PTR ds:0x4280c4
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x4651b0
  424fac:	mov    eax,ds:0x465198
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x465198
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x4651b0
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x465198
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x465198
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x465198
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x465198
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x4653e0
  425011:	call   DWORD PTR ds:0x4280c8
  425017:	mov    eax,ds:0x46519c
  42501c:	mov    edx,DWORD PTR ds:0x4651a0
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x465198
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46519c
  42504c:	cmp    eax,DWORD PTR ds:0x465198
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x4651a0
  42505d:	mov    ds:0x4651a8,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x465198,eax
  42506a:	mov    DWORD PTR ds:0x4651b0,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46519c
  42507a:	mov    ecx,DWORD PTR ds:0x4651ac
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x4651a0
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x4653e0
  42509c:	call   DWORD PTR ds:0x4280f0
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x4651ac,0x10
  4250b1:	mov    ds:0x4651a0,eax
  4250b6:	mov    eax,ds:0x46519c
  4250bb:	mov    ecx,DWORD PTR ds:0x4651a0
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x4653e0
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x4280e4
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280ec
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x4653e0
  42510a:	call   DWORD PTR ds:0x4280c8
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46519c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280ec
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46519c
  42551f:	mov    edx,DWORD PTR ds:0x4651a0
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x4651a8
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x4651a8,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x465198
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x4651b0
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x465198,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287c0
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x4653e4,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x4651a4
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x4653e0
  4259d9:	call   DWORD PTR ds:0x4280e4
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x4653e0
  425a30:	call   DWORD PTR ds:0x4280f0
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x465068,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x4653e0
  425a81:	call   DWORD PTR ds:0x4280f0
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x465068,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287d0
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x4653e4,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x4653e0
  425b00:	call   DWORD PTR ds:0x4280f4
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x428104
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x428100
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x4280ac
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280fc
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280f8
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x4646c0,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x4646c0,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428980
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x4646c0
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465038
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x42895c
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a8
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428888
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e8
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x428080
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284dc
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d8
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b8
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287dc
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428490
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428da0
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x46505c,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d9c
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428110
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x46505c,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x428034
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x46505c,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x46505c
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465054
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x42810c
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x42810c
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428110
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428110
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428110
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465044
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465054
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x428108
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x428108
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x428108
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc8
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x465060,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d9c
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x428118
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x465060,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x428034
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x465060,0x2
  4260c3:	mov    eax,ds:0x465060
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465054
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x42810c
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x42810c
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x428118
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465044
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465054
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428114
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x465064
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x464bc4
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x464b94
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x464bc4
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x464b98
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x464bc4
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x464b9c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x464bc4
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x464ba0
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x464bc4
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x464ba4
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x464bc4
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x464ba8
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x464bc4
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x464bac
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x464bc4
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x464bb0
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x464bc4
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x464bb4
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x464bc4
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x464bb8
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x464bdc
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x464bdc
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x4646c0
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x42811c
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428f00
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x4646c0
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280e0
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x42810c
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x42810c
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x42805c
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428128
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x464d64
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x42805c
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280ec
  426e8b:	mov    eax,ds:0x464d64
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428124
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x46481c
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428120
